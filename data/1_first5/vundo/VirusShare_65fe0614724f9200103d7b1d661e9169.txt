incb
add
add
dec
lcall
in
inc
lcall
cmpsb
cmp
scas
add
jbe
jbe
push
add
cltd
scas
or
pop
setno
pop
mov
je
test
xchg
pop
roll
jnp
pop
adc
aam
aam
mov
dec
lcall
sub
mov
add
inc
add
mov
std
adc
inc
add
add
pop
or
xor
and
daa
cmp
push
push
push
movsb
sbb
sbbl
fwait
scas
nop
cmpsb
sbb
mov
and
nop
shll
fsubrs
inc
dec
in
or
and
imul
inc
push
flds
fcompl
xor
dec
shll
xor
insb
xor
push
rolb
enter
call
adc
sub
imul
out
fiadds
inc
inc
dec
shll
bound
adc
xor
rcl
imul
imul
mov
loopne
dec
shrl
cmp
dec
shll
xchg
cmpsl
hlt
out
fnstenv
or
cmpsb
sbb
sub
bound
mov
or
or
jns
out
cmp
out
in
outsb
je
imul
shr
out
add
ljmp
add
mov
mov
mov
in
aaa
add
and
lea
xor
mov
int
rorb
out
jmp
pop
push
and
in
sbb
add
sbb
xor
and
sub
add
aad
mov
js
jp
push
xorl
jb
movsb
xor
imul
sbb
idivl
dec
dec
lcall
mov
inc
xchg
orb
bound
xchg
lods
nop
add
cld
loop
xor
mov
mov
cmp
inc
sub
mov
int
push
add
push
add
add
mov
pop
xchg
add
mov
mov
rolb
add
or
push
pminub
lods
mov
cli
or
or
or
dec
mov
pusha
sbb
pop
mov
mov
dec
rorl
dec
ss
out
add
pop
imul
mov
sti
and
jb
js
jp
and
data16
mov
sbb
mov
loope
nop
cli
add
pop
push
jb
ud2
push
lea
testl
push
dec
cs
test
ss
jo
lret
arpl
pop
add
in
inc
push
out
sbb
and
in
test
pop
es
pop
pop
popf
or
pop
das
dec
das
in
and
pop
xor
jnp
xorl
cmp
test
cmp
jns
divl
divl
cmp
aas
mov
mov
mov
outsl
mov
xchg
fisttpl
imul
icebp
push
and
cwtl
mov
fs
xor
and
fs
fs
test
fs
adc
sub
mov
pusha
nop
adc
adc
sbb
xor
xor
or
repnz
adc
adc
enter
fs
xchg
out
adc
mov
inc
inc
sahf
adc
mov
mov
dec
adc
in
sbb
adc
movsb
out
inc
sahf
cld
adc
adc
fcoml
adc
xor
repnz
adc
pushf
cmp
jo
cmp
dec
enter
out
in
add
xchg
aaa
and
and
push
outsb
insb
add
or
jp
xor
cmp
mov
mov
lods
cld
rolb
sbb
sbb
flds
push
je
add
jbe
imul
xor
jno
pop
push
adc
sbb
nop
xchg
jo
sub
outsl
scas
in
pop
sahf
loopne
add
dec
pop
add
or
push
adc
mov
add
lea
xchg
adc
push
inc
sbb
xor
xor
lahf
mov
jle
or
or
sbb
pop
pop
lahf
daa
inc
lock
or
cmpsb
jmp
lock
and
nop
adc
xlat
xor
test
ret
jp
insb
push
sbb
in
jg
push
and
adc
pop
mov
leave
ds
insb
add
add
in
add
fisttps
and
cli
jecxz
add
test
sub
fs
inc
mov
repnz
dec
stc
adc
push
in
xchg
inc
xchg
lahf
pop
pop
dec
jmp
sub
and
add
lahf
in
dec
incl
push
mov
xchg
repnz
add
add
xchg
dec
cmp
mov
cld
inc
mov
or
sbb
and
add
inc
cltd
jl
or
shlb
xchg
push
insb
add
and
movhps
dec
sahf
sbb
add
adc
loopne
xchg
add
int3
fldcw
mov
test
inc
push
cmp
in
mov
jg
jo
js
dec
xlat
or
cwtl
lss
mov
xor
repz
mov
movsl
pop
out
or
int
pop
inc
add
daa
lahf
xchg
xorb
and
jb
les
neg
and
sub
or
xchg
iret
add
lahf
shll
sbb
xchg
or
clc
pop
add
inc
push
enter
in
sbb
mov
add
and
repz
hlt
in
out
sbbb
xchg
testl
hlt
cmpsl
out
adc
faddl
jmp
and
pop
adc
adc
cmp
xchg
pushf
lods
add
andb
jns
xor
or
in
jge
push
inc
cvttps2pi
sub
dec
ja
or
mov
push
cli
rclb
sbb
cmp
add
in
adc
xor
fisubs
dec
fcoms
daa
adc
cmp
mov
sbbb
pop
add
enter
pop
in
fucomip
and
pop
dec
inc
dec
push
enter
adc
pop
jb
push
stc
dec
inc
or
jae
or
nop
out
in
sub
cmp
add
add
fs
or
dec
or
dec
dec
shll
lock
fs
orb
add
sbb
je
add
xchg
xchg
add
mov
in
test
out
add
mov
xor
cmpl
xchg
pop
lahf
pusha
push
sahf
cmp
movsb
push
pop
xor
sub
sub
lods
sub
fs
test
push
outsl
inc
xor
jl
movsb
and
xchg
or
hlt
mov
sub
leave
addl
arpl
dec
add
adc
in
leave
dec
sbb
lret
pop
add
add
rolb
push
loopne
adc
or
mov
dec
lcall
xor
dec
pushf
xor
mov
mov
add
xor
dec
push
and
add
pop
dec
cmp
xor
or
mov
aas
or
inc
push
je
mov
sbb
ds
inc
in
cmp
enter
mov
push
das
sbbb
js
pop
nop
dec
mov
nop
sbb
ss
pop
pop
push
mov
xchg
add
xchg
daa
pop
adc
pushf
push
daa
pop
or
and
stc
and
push
pop
inc
jns,pn
hlt
aaa
les
jae
popf
sbb
cmp
pop
les
add
cmp
scas
in
flds
enter
rcll
outsl
pop
leave
add
arpl
mov
inc
mov
cld
mov
push
inc
and
outsl
sub
dec
je
inc
sahf
cmp
dec
lcall
andb
cmp
push
inc
cmp
mov
leave
or
or
mov
cmp
xchg
movsb
add
cmp
fbstp
xchg
and
pop
in
pusha
add
cmp
add
rorl
daa
rcll
add
out
in
lahf
pop
cmp
daa
add
push
in
inc
pop
or
int3
sub
or
sub
in
dec
repnz
in
lods
cmp
add
add
repnz
repnz
push
je
sbb
dec
mov
daa
inc
sahf
cwtl
sbb
pop
pop
dec
sahf
sbb
aas
inc
pop
das
pusha
cli
inc
push
and
aas
pusha
inc
inc
inc
test
cmp
cmp
xchg
add
arpl
outsl
in
mov
push
and
cmp
push
and
mov
mov
push
adcl
inc
fwait
pop
and
pop
mov
and
nop
inc
out
loopne
sbb
setnp
jns
mov
fwait
in
call
cs
loopne,pn
push
jns
push
sbb
in
roll
jns
imulb
pop
jae
and
jbe
inc
daa
inc
add
or
inc
pop
xchg
inc
pop
daa
add
or
inc
insb
sbbl
or
push
dec
xor
fwait
int3
inc
and
into
mov
pop
ret
dec
int3
sahf
sbb
or
push
pop
dec
push
and
push
lods
inc
les
movsb
mov
sti
push
sbb
nop
daa
and
push
dec
pop
lcall
pop
inc
jae
dec
and
call
daa
jnp
inc
pop
xchg
out
pop
and
push
inc
ja
inc
arpl
outsl
adc
and
pusha
mov
sbb
outsl
inc
and
and
inc
adc
adc
sub
sub
hlt
repz
test
dec
add
adc
movsb
sbb
sti
in
sbb
pop
jl
jo
inc
mov
leave
or
popf
and
fs
dec
lock
sbb
nop
subps
and
nop
add
pop
push
xchg
fmuls
mov
cmp
dec
pop
dec
rorb
daa
or
add
sahf
sbb
sti
dec
aam
pop
jae
dec
es
sbb
daa
in
jbe
addr16
add
dec
mov
and
push
add
jmp
enter
cld
dec
adc
push
mov
xchg
add
sub
loopne
add
push
rorb
push
pop
adc
loop
adcb
sahf
sbb
mov
dec
pop
push
aaa
sbb
jb
or
pop
push
nop
cmc
and
add
dec
lods
add
push
outsl
aam
push
inc
ss
shll
outsl
sub
and
sbbb
outsl
in
test
adc
arpl
and
push
pushf
dec
inc
fwait
inc
and
jno
fildl
mov
and
mov
imul
lods
pop
cwtl
mov
dec
mov
add
test
fsubr
inc
xchg
inc
lahf
dec
lock
sub
and
lods
push
iret
push
pop
imul
and
lods
sub
and
pop
aam
push
add
pop
xchg
xchg
pop
enter
push
pusha
out
sahf
sbb
and
in
lcall
and
jns,pt
jb
addb
cmp
or
in
add
pushf
lea
inc
add
fsubs
pop
jo
mov
mov
mov
xor
push
das
inc
xor
dec
xor
addr16
xor
popa
xor
jns
lahf
incl
outsl
xor
inc
xor
aaa
js
inc
push
pop
gs
dec
pop
xor
xor
jno
pop
xor
jno
dec
push
sbb
cmp
jns
je
jne
aaa
je
pop
outsl
je
mov
ja
jno
xor
imul
insb
push
xor
insb
adc
pop
lds
jno
ss
inc
xor
dec
aaa
jae
dec
subb
xor
push
into
sbb
lods
rorl
decl
pop
sbb
inc
aad
or
test
mov
mov
adc
fstpt
std
int
dec
or
bound
xor
and
movsb
rcll
in
in
jp
imul
dec
ss
cs
push
jg
cmp
inc
cmp
arpl
outsb
je
and
and
in
jmp
je
outsb
addr16
fs
sbb
imul
xor
out
pop
push
rolw
inc
jnp
cwtl
push
cmp
push
imull
mov
fsubl
pusha
xchg
pop
das
sbb
dec
setae
push
inc
xor
cld
cmp
inc
xor
dec
imul
xor
push
xor
jg
pop
movl
ss
aaa
adc
inc
xor
and
push
fildl
pushl
push
xor
xor
dec
xor
push
je
pushl
pop
ss
xor
xor
inc
jo
xor
jo
push
xor
cmp
outsl
jb
popl
insl
xor
inc
xor
xor
mov
clc
dec
inc
imul
lods
inc
xor
cmp
sbb
dec
arpl
dec
cmp
aaa
fisttpll
cmpsl
push
xor
aaa
inc
push
fs
dec
xor
dec
pop
dec
outsl
popa
imul
pop
sti
call
add
aaa
add
add
sub
pop
pop
pop
jo
in
push
add
inc
ss
push
cs
dec
dec
pop
pop
jbe
popa
inc
jb
gs
je
cmovs
jne
je
push
push
jg
mov
and
jns
and
in
xchg
decl
pop
add
js
cmpsb
xchg
dec
sbb
or
mov
imul
loope
in
inc
mov
es
jbe
jmp
je
push
push
xor
in
sub
dec
dec
xor
push
aaa
outsb
xor
pushl
xor
jbe
dec
cmp
je
push
ss
das
fwait
jo
outsl
dec
xor
push
xor
popa
xor
xor
dec
push
imul
push
aaa
jne
push
xor
push
loope
xor
ss
and
inc
popa
cmp
test
pop
inc
xor
ja
xor
aas
dec
insl
ret
cmp
dec
xor
cmc
adc
pop
pushf
imul
mov
pop
ret
ss
push
ja
pop
cmp
repz
ds
xor
cmp
inc
xor
xor
fildll
inc
cmp
dec
xor
imul
sbb
add
dec
shlb
ss
push
pop
and
cmpsb
and
lds
cmpsb
xor
ljmp
fsubrs
add
test
and
loope
std
jg
loopne
movsl
push
lea
ljmp
cmp
fistl
xchg
dec
hlt
ret
je
insb
insb
or
lea
mov
jne
push
pop
dec
xchg
fs
or
push
mov
js
push
cmp
xchg
sbb
loope
push
mov
js
pop
xor
arpl
jmp
test
dec
cmova
mov
ss
xor
inc
outsb
stos
push
fcoms
inc
add
test
fwait
dec
jbe
inc
push
stc
dec
aaa
dec
pop
fdivs
add
push
push
leave
push
aaa
push
xor
cmp
dec
cmp
lods
movsl
aaa
push
lahf
inc
frstor
popa
pop
xor
jae
mov
pop
xor
pop
aas
jbe
push
aaa
addr16
xchg
xor
std
popl
insb
xor
pop
fcomp
subl
ret
add
xor
shll
imul
gs
adc
ljmp
daa
fsubs
jno
jnp
or
mov
out
xlat
cs
out
and
call
xchg
xchg
and
mov
mov
mov
dec
shl
ret
adc
mov
arpl
dec
icebp
lods
addl
push
jcxz
push
dec
in
aaa
fisubrs
dec
xor
push
xor
iret
pop
push
dec
inc
ja
cs
mov
push
sti
dec
xor
xor
xchg
cmp
or
pop
mov
ss
sbb
mov
popa
fiaddl
xor
test
pop
mov
dec
push
cmp
ja
jae
mov
push
sbb
jnp
insl
aaa
sbbl
imul
jns
xor
aaa
ja
in
fnsave
fldt
xor
xor
pop
jae
mov
dec
xor
adc
xor
mov
or
inc
addr16
fwait
add
cmp
lds
xlat
xor
add
adc
mov
and
std
xchg
inc
mov
or
sbb
iret
dec
mov
jge
incl
hlt
jmp
dec
and
xor
sub
les
xchg
xchg
inc
ss
mov
or
inc
jne
xor
fmuls
adc
xor
xor
insb
push
pop
push
fcmovb
inc
leave
jo
adc
and
data16
daa
dec
rolb
outsb
mov
or
xlat
or
dec
sbbl
dec
xor
mov
or
dec
inc
push
dec
in
test
xor
add
mov
sub
mov
data16
sub
dec
jmp
gs
daa
gs
aas
mov
pop
pop
and
addr16
mov
and
mov
adcl
add
push
push
fwait
outsb
sub
sbb
push
out
dec
pop
inc
addr16
inc
roll
mov
sbb
inc
pop
insl
push
pop
enter
popa
pop
sub
fs
jg
lret
xchg
out
xchg
inc
mov
mov
pop
inc
repnz
aas
jno
or
test
push
iret
mov
inc
stc
mov
jae
dec
and
ljmp
aaa
decb
leave
or
xorb
dec
dec
inc
dec
push
push
pop
es
outsb
std
add
xor
mov
cs
adc
pop
pop
and
in
sub
pop
add
fisttpl
push
xor
dec
add
or
and
and
adc
int3
xor
and
int3
inc
inc
daa
jbe
or
enter
or
loopne
loopne
enter
adc
clc
int3
enter
dec
gs
gs
aam
add
test
add
dec
pop
pop
mov
jb
inc
xchg
mov
imul
or
or
je
jmp
push
call
imul
jno
dec
ja
jae
inc
inc
push
dec
dec
inc
pop
dec
pop
dec
push
pop
addr16
dec
popa
push
push
insb
dec
inc
push
jb
dec
mov
push
inc
push
lcall
mov
mulb
push
push
or
pop
fdivr
sub
popa
insb
imul
in
pop
dec
dec
je
push
inc
pop
dec
outsl
adc
loope
add
dec
ret
push
mov
jno
inc
inc
push
js
inc
push
dec
inc
outsb
pushf
jg
les
mov
push
inc
inc
dec
jne
ss
decl
dec
jp
dec
push
push
aas
jb
arpl
push
or
dec
push
inc
testb
push
push
pop
push
inc
dec
outsl
pop
push
inc
pmaxub
cld
jb
dec
imul
dec
adc
std
sbb
inc
inc
inc
dec
push
dec
lock
dec
xchg
sub
outsl
push
sub
xchg
aas
lea
js
add
icebp
orb
push
xor
ss
into
pop
and
cmp
add
nop
add
inc
inc
or
jmp
xor
shll
jo
js
test
dec
roll
add
mov
add
add
inc
std
pop
xchg
add
inc
out
jnp
push
pop
xor
adc
aaa
lea
mov
xchg
sbb
adc
jae
pop
xor
mov
xor
xor
xor
data16
js
jbe
inc
mov
movsl
push
fstl
add
iret
xlat
loope
inc
xlat
sub
divl
outsb
mov
imul
sbb
ss
xor
test
iret
and
addr16
jmp
pop
push
sub
xchg
mov
je
aaa
xchg
insb
ja
jp
ss
mov
movsl
mov
push
pusha
jg
sbb
xor
repz
sti
bound
cmp
cmp
movsb
push
sti
aas
cmpsl
add
pop
aaa
fsubs
pushf
out
outsl
fwait
xor
xchg
adc
and
ja
lods
mov
fisubs
inc
std
orl
dec
mov
aaa
inc
or
and
pop
xor
popa
addl
aaa
fnstenv
add
je
test
pop
push
enter
cmp
xor
xor
xor
add
arpl
fmuls
cmpsl
xor
xor
nop
outsl
adc
imul
jp
pop
ret
sbb
aaa
sub
fstps
xor
pop
sbb
popa
xchg
jne
jmp
loope
movsb
xchg
inc
jecxz
popa
or
neg
pop
int
aaa
pop
xor
enter
pop
xor
xchg
gs
jne
sbb
jne
jg
jo
cmp
cmp
jp
push
shlb
arpl
add
pop
sbb
pusha
addr16
bound
pop
xor
popa
xor
enter
fstps
insb
fstps
lsl
outsb
sbb
es
aaa
inc
xchg
test
stos
and
xor
mov
pop
pop
xor
das
xor
xor
out
adc
out
insl
xchg
out
lods
mov
xchg
jp
dec
imul
cmp
cmp
sub
ret
cmc
int
lea
mov
aaa
phsubsw
adc
pop
dec
lret
add
cmp
pop
inc
ss
inc
xchg
cmp
aaa
fcmovne
jno
int
insb
pop
ja
cmp
fucom
sub
xor
ss
xor
and
pop
xor
insb
nop
or
inc
jns
inc
xchg
jg
sbb
xorb
xor
xor
popa
xlat
jne
arpl
or
fildll
imul
dec
or
mov
add
or
shlb
mov
outsl
and
xor
movsb
mov
sysret
sbb
mov
fisttps
add
mov
fldl2t
sbb
xor
cmp
insl
pop
aaa
fdivs
pop
or
jbe
daa
das
xor
xchg
fiadds
push
and
dec
addr16
xor
dec
lods
sarl
pop
sysexit
dec
outsl
inc
jbe
test
pop
xor
inc
cmp
sti
xchg
popf
adc
inc
daa
xor
test
xor
jecxz
adc
sub
jne
jge
into
push
cmpsl
sbbl
and
cmp
add
lds
push
outsl
inc
out
scas
pop
and
js
xor
stos
adc
xor
arpl
addr16
in
xor
arpl
push
sub
sbb
es
test
push
nop
xor
lock
ss
push
push
loope
xorl
lret
jo
cmp
mov
sbb
mov
push
mov
movntq
fbstp
stos
stos
call
xchg
xor
inc
mov
sbb
or
lret
bound
push
mov
pop
fcomp
fwait
shr
pop
cmp
sbb
or
xor
xlat
push
xchg
dec
fcomps
xor
xor
popa
xor
iret
cmp
mov
popf
xchg
pop
rdtsc
inc
int3
loopne
pop
and
ja
xor
xchg
mov
data16
cmp
aas
or
cmc
xchg
pop
ret
and
mov
mov
insl
in
mov
mov
neg
insb
jb
pop
xor
repz
add
mov
dec
pop
sub
inc
stos
fwait
movsb
push
sti
sti
insb
pop
arpl
cmp
mov
xchg
fwait
xchg
or
and
lahf
xor
fistpll
xorb
jmp
gs
shll
or
loope
fldcw
jno
inc
js
pop
mov
pusha
pop
aad
cmp
cmp
cs
adc
mov
xorl
je
mov
or
mov
loopne
arpl
add
pcmpeqb
adc
add
sbb
push
add
adc
sbb
imul
xor
sub
das
sbb
sbb
fs
or
adc
and
or
add
push
popa
imul
adc
arpl
sti
enter
or
leave
jl
outsl
out
imul
aaa
inc
enter
imul
gs
dec
and
mov
sub
or
out
push
aas
push
imul
dec
push
mov
xlat
push
outsl
insb
jns
gs
dec
jne
inc
cmpl
arpl
jb
mov
leave
adc
insb
je
xor
and
dec
movsb
lods
sbb
in
adc
daa
inc
leave
mov
jnp
movsb
addb
and
sbb
mov
push
in
mov
sub
jbe
dec
gs
inc
nop
ror
jns
mov
inc
dec
cs
pushf
fwait
jbe
lds
cmc
setb
int
mov
adc
xchg
aaa
jb
pop
nop
scas
cmp
xor
fs
dec
or
scas
ja
xor
mov
sbb
xor
in
dec
xor
jb
fs
or
inc
gs
add
add
mov
add
jne
fwait
in
xchg
or
cwtl
sub
cltd
or
roll
sbb
and
xor
xor
xchg
adc
fisttpl
inc
push
or
sbb
mov
dec
cmpb
xsaveopt
rcr
adc
adc
pop
add
mov
lcall
xchg
movsb
add
inc
pop
mov
mov
pushf
jbe
mov
std
mov
fs
xlat
dec
mov
mov
sub
popa
add
fldenv
adc
or
add
sub
add
sbb
or
clc
add
inc
int
add
sbb
dec
shll
and
sub
shll
inc
inc
dec
shll
fs
dec
shll
fsub
in
fnstenv
cld
add
shrl
data16
add
xlat
xor
je
jl
xchg
add
jmp
cmpsl
push
mov
and
shll
pop
into
push
movq
hlt
cwtl
popa
iret
inc
inc
xchg
xor
xchg
xchg
mov
push
mov
movq
into
xchg
shr
pop
push
jecxz
sbb
mov
addl
adc
roll
gs
adc
lods
jmp
and
outsw
push
daa
add
inc
sbb
imul
out
jnp
mov
bound
cmp
leave
ficomps
addr16
xlat
add
testb
cmpsl
xchg
call
mov
mov
xchg
outsl
mov
mov
sub
add
sub
inc
test
ret
push
sub
loope
or
xor
imul
xor
and
cmp
fsubl
je
insl
push
daa
stos
dec
ds
jge
xor
dec
ss
jne
ja
sbbl
sbb
pop
bound
lret
xor
ja
sub
fists
icebp
sbb
adc
and
push
fildl
fnstenv
dec
dec
xor
daa
xor
ret
dec
jg
mov
ret
xlat
inc
pop
cwtl
dec
cmp
iret
pushl
inc
addr16
mov
jne
outsl
xchg
sub
loope
cmp
mov
sub
pop
ja
fbld
add
or
or
push
popa
jb
jae
mov
jo
je
jo
xor
dec
ret
ficoml
pop
gs
sbb
and
popa
jae
inc
mov
cs
dec
or
es
cmp
and
das
add
dec
imul
scas
mov
adc
aaa
add
call
push
inc
push
push
add
dec
pop
imul
xor
popf
out
pop
sbb
outsl
mov
ds
inc
and
mov
xchg
inc
fs
adc
pop
push
jmp
outsb
lods
loope
insl
je
jne
xor
xor
fwait
xor
sub
stc
push
lahf
addr16
xchg
dec
mov
orb
push
or
es
arpl
testb
jle
inc
jl
loopne
insb
imul
jecxz
add
in
je
jo
aad
or
loope
inc
cltd
pop
xchg
inc
jg
xor
bound
outsb
fs
test
insl
or
and
btc
mov
addr16
outsl
data16
cwtl
jo
into
xor
inc
gs
and
or
adc
or
sbb
cwtl
sarl
and
sbb
dec
xchg
insb
insb
sahf
pop
or
push
outsl
clc
add
les
cmp
fnstenv
pop
dec
popf
gs
pop
xor
jo
insl
mov
push
stc
daa
ja
pop
aaa
sub
enter
cmp
xlat
insl
out
imul
clc
andb
subb
dec
repz
mov
jge
call
jp
pop
popfw
test
mov
daa
fidivs
subl
pusha
mov
aas
or
in
inc
mov
mov
in
shlb
mov
dec
xchg
dec
cwtl
pop
outsl
cmp
add
inc
adc
pop
mov
xor
fmulp
mov
or
cs
mov
mov
or
adc
mov
inc
push
dec
cmp
aaa
fwait
jl
cwtl
xor
xor
fdivs
adc
aaa
outsl
xor
enter
xor
cmp
pop
das
es
out
or
sbb
jnp
cmp
pop
xor
dec
fstps
pop
xor
sub
cmp
ja
aad
xchg
lret
mov
xchg
addb
sub
dec
daa
xor
out
jp
sbb
das
les
sbb
aas
out
aad
dec
or
aaa
fists
fistpll
lock
mov
pop
pop
dec
mov
pop
add
iret
jmp
mov
in
xor
xor
jecxz
and
out
adc
shlb
sbb
daa
js
test
aaa
pop
cmp
push
inc
insb
and
xor
xor
test
and
jmp
add
push
out
xor
xor
sbb
sbb
pop
inc
xlat
pop
data16
dec
mov
jne
add
aaa
test
shlb
mov
sbb
bound
fbld
fwait
jne
rcll
dec
xorb
pop
jecxz
or
lea
xor
jmp
loope
mov
test
sub
or
fbstp
lahf
add
cmp
mov
roll
movhps
xchg
pushf
mov
xor
sbb
push
dec
ja
outsl
xor
mov
lds
daa
fbstp
nop
xor
aaa
call
movsl
arpl
push
inc
dec
iret
push
icebp
popa
dec
pop
dec
daa
jb
pop
aam
add
inc
xor
js
js
cmp
cmp
pushl
int
lods
pop
enter
pop
ja
idivb
pop
aas
pop
aaa
pop
jge
cmp
xor
pop
xor
cmp
and
addr16
mov
js
fs
push
and
xor
xchg
jg
jnp
jnp
iret
xor
sub
iret
pop
add
dec
inc
mov
or
or
sysenter
push
cmpsl
pusha
jne
dec
fwait
sub
pop
orl
and
mov
sbbl
and
push
xor
xor
sub
pop
imull
arpl
int
ss
iret
scas
mov
or
aas
divl
mov
mov
and
dec
outsl
mov
xchg
adc
sub
hlt
add
aad
sbb
insb
add
sbb
xor
lret
mov
aaa
xor
pop
xor
cmp
or
lahf
aas
sbb
pop
xor
push
dec
jo
sbb
or
xchg
dec
xor
andl
pop
push
adc
adc
xchg
xor
adc
jnp
pop
mov
jg
out
fs
dec
je
xchg
jae
dec
add
add
inc
and
mov
scas
inc
adc
aaa
push
add
inc
lods
jnp
dec
pop
jns
jno
shll
mov
xlat
push
test
shll
daa
jp
push
sub
push
jmp
push
sti
add
jg
enter
xor
mov
xor
in
aas
adc
int3
push
xchg
lret
pop
mov
mov
xchg
mov
adc
lret
xor
adcl
imul
insl
mov
imul
push
cmp
inc
pop
shlb
inc
outsb
lcall
jecxz
mov
push
stos
popa
add
mull
dec
push
imul
fs
ret
jns
cmp
pop
mov
cmp
stos
inc
cmp
movsb
adc
mov
add
das
xchg
jne
repz
rep
gs
flds
pop
repz
xchg
sti
lcall
sub
inc
adc
mul
mov
mov
mov
jnp
pop
or
pop
jae
jnp
pop
xor
mov
je
js
nop
pusha
mov
cmp
cmp
adc
and
xor
add
data16
xor
movsl
pop
pop
dec
add
mov
mov
and
aaa
xor
inc
jb
xor
mov
aaa
xor
dec
outsl
mov
or
adc
pop
inc
sbb
aaa
push
adc
orl
aad
xor
inc
pop
xchg
shll
push
aam
xor
dec
mov
andl
pop
iret
cmp
xorb
push
xlat
lods
sub
adc
adc
movsl
xor
inc
movb
mov
add
inc
enter
fisubs
xor
mov
jno
shlb
data16
outsl
daa
mov
and
mov
push
outsl
mov
filds
fdivs
sub
and
mov
shll
fwait
addr16
mov
and
out
mov
nop
inc
cs
xor
emms
pop
test
cmp
xor
fwait
mov
and
sbb
lahf
cmpsl
out
mov
loopne
adc
pop
aad
pop
nop
xor
sub
xchg
cmovg
mov
xor
inc
out
push
adc
dec
jg
sbb
mov
mov
leave
push
cmp
mov
enter
mov
sub
xor
add
mov
loop
sahf
leave
addr16
outsl
arpl
ljmp
or
jge
mov
insb
mov
inc
xlat
push
outsb
adc
je
mov
adcl
sbb
add
test
mov
shll
aas
adcl
pop
inc
xor
in
jmp
push
enter
xor
insl
mov
push
mov
add
jg
and
inc
xor
testl
xchg
xchg
cmp
push
cmp
adc
dec
jae
xor
add
or
and
mov
mov
inc
rcll
or
dec
aaa
or
test
js
fnsave
push
dec
cmpsl
mov
fmuls
shlb
inc
aad
je
add
stos
push
inc
jmp
xchg
dec
dec
popa
add
or
pop
lcallw
inc
xor
sbb
fs
dec
jbe
nop
pop
lods
cmp
mov
outsl
xchg
pop
insb
sub
pop
adc
xchg
cmpsb
imul
mulb
test
int3
cmp
pop
leave
sbb
fstl
ja
mov
outsl
out
bound
mov
or
orl
test
cmp
inc
and
pop
xor
ss
jnp
ror
dec
fistps
cmp
cmpsl
mov
add
xor
mov
mov
inc
into
push
cmp
xor
and
insb
ss
mov
cs
pop
mov
inc
sub
daa
mov
xor
mov
test
addr16
nop
lock
mov
mov
das
push
fnstenv
fwait
sbb
pop
aaa
mov
ljmp
hlt
and
adc
xor
and
insb
addb
imul
ret
mov
inc
cs
xor
cmp
xor
mov
cmc
mov
sbb
nop
xchg
xor
or
ret
xor
imul
aas
and
xchg
test
dec
inc
leave
adc
xor
xor
lret
or
aas
das
jb
or
in
scas
inc
pop
cwtl
add
nop
or
ss
push
or
ss
mov
dec
ds
ss
orb
add
inc
enter
xor
aaa
adcb
daa
sti
and
adc
aaa
cmp
cmp
aaa
lret
adc
cmp
ss
or
inc
addl
ja
orl
inc
popa
mov
push
xor
inc
or
ss
shll
xor
push
pavgb
stos
popf
xchg
push
je
aad
pop
or
aaa
push
fnsave
dec
sbb
push
daa
pop
push
mov
and
dec
jmp
add
dec
test
jnp
mov
pop
in
mov
xor
push
pop
addr16
mov
imul
sbb
mov
and
add
sbb
lcall
sti
and
push
jp
jmp
out
and
mov
imul
rolb
or
xor
sbbl
shrb
loopne
stc
jecxz
inc
mov
fbld
lds
xchg
mov
jo
test
fs
xor
ficompl
popf
xor
xchg
push
fs
mov
pop
das
dec
cltd
arpl
stos
jp
inc
xor
cmc
lahf
jne
popa
call
outsb
daa
push
mull
cmpxchg8b
int
lret
imul
out
xchg
add
inc
cmp
sub
jge
and
pop
jg
mov
ja
and
cmp
jae
push
sbb
out
or
adc
insb
in
mov
mov
inc
addb
jns
fucom
inc
add
gs
and
sbb
roll
add
imul
or
push
xor
xlat
xchg
lret
cmp
mov
add
push
or
push
sarb
xor
or
add
xor
push
inc
jne
add
scas
jne
inc
cli
dec
xor
bound
pop
xlat
add
dec
and
pop
jmp
dec
cmp
out
repz
cmp
jne
inc
sub
pop
pop
cmp
adc
imul
notl
lds
dec
xchg
aam
inc
addr16
cwtl
sub
xor
adc
fisttps
pop
andb
out
mov
adc
and
cmp
xchg
dec
and
ja
or
push
xlat
adc
inc
pop
and
cmp
repz
add
push
sbb
lret
jno
imul
cmp
sub
push
push
mov
icebp
pop
pop
js
push
rorl
in
lahf
js
and
cmpsl
sub
lock
and
sub
mov
pusha
or
sub
push
xor
int3
sub
xor
pop
dec
jo
mov
sbb
outsl
mov
and
mov
fimuls
fwait
sub
jg
bound
dec
fisttpl
nop
ljmp
mov
adc
fwait
xor
pop
aas
mov
jp
scas
mov
push
cmc
stos
enter
pop
sti
xor
ret
dec
arpl
outsl
data16
leave
aaa
out
pop
mov
jnp
sub
dec
test
addr16
call
add
popf
shrl
sbb
addl
pop
inc
mov
das
xchg
jb
rorb
adc
orb
mov
push
ret
xor
xor
xor
dec
add
push
add
gs
es
pop
adc
je
push
inc
addr16
ret
and
call
aaa
loop
out
mov
imul
dec
pop
sbb
scas
mov
jo
push
dec
and
add
mov
cmp
inc
ret
or
jbe
js
inc
daa
mov
mov
adc
cmc
test
dec
or
loop
sbb
jbe
xor
xchg
in
sub
pop
pop
aaa
daa
mov
sbb
daa
adc
cmp
roll
jne
sbb
push
jne
dec
xor
xchg
loopne
outsl
xor
sbb
in
in
mov
call
push
cmp
and
or
arpl
pop
and
xor
xchg
xor
inc
pop
xor
loopne
loope
test
das
xor
jmp
pop
jecxz
push
or
pop
aaa
mov
outsl
jnp
rorl
fsts
sub
sbb
ficoms
dec
loopne
jmp
outsl
arpl
push
jb
arpl
outsl
lea
xlat
stos
shlb
sbbl
daa
inc
dec
ret
push
outsl
daa
inc
fcomp
adc
mov
add
and
cmp
xchg
jl
push
iret
mov
ret
dec
dec
pop
fnstenv
mov
xlat
outsl
xlat
inc
push
hlt
sbb
mov
push
adc
pushf
add
lahf
xor
and
pop
ss
and
fnstenv
sub
scas
pop
mov
and
xorl
add
das
pop
pop
punpckldq
xchg
mov
pop
xor
dec
packssdw
xor
xchg
bound
xor
xchg
addr16
test
add
dec
pop
lea
xchg
enter
pop
sti
or
sub
inc
aaa
movsl
pop
xor
cmp
xor
dec
mov
xor
adc
test
rcll
fbstp
testb
adc
xlat
mov
inc
enter
jbe
enter
mov
jb
cmpsl
iret
mov
or
jmp
mov
sbb
mov
leave
cwtl
push
xor
addr16
xor
filds
cmpsl
sbb
adc
ss
ja
xor
and
pop
pop
mov
pop
mov
fbstp
and
nop
and
xor
dec
xchg
xor
popa
out
add
xchg
mov
xor
sub
cmp
aas
xor
aaa
push
shrb
inc
ret
inc
nop
insb
and
nop
adc
xchg
inc
pop
jmp
inc
xor
bswap
jo
fsts
das
xlat
pop
mov
out
inc
push
xor
mov
cmp
mov
mov
mov
or
scas
roll
dec
xchg
test
mov
mov
inc
lods
in
mov
mov
adc
pop
fnstenv
gs
aaa
mov
lds
add
jmp
sbb
outsl
sbb
das
ss
arpl
push
icebp
push
iret
push
mov
cmp
add
xor
inc
mov
fbld
push
dec
cmp
xor
dec
or
xor
dec
xchg
mov
jb
xlat
outsl
push
sub
jno
shll
mov
ss
add
jne
mov
jno
push
jo
shll
lret
xchg
in
orb
inc
pop
insl
ficoms
arpl
mov
sbbl
push
or
fldt
inc
jne
adc
ja
xchg
add
xor
mov
dec
outsl
cmpl
sbb
cmp
or
xor
out
clc
adc
xorl
ss
cmp
aaa
mov
push
and
lahf
jb
add
imul
cmpl
jns
stc
pop
sub
xchg
inc
cmpsb
adc
popa
leave
push
push
or
adc
xor
mov
mov
mov
mov
test
xor
mov
sbb
xor
outsl
loope
in
xchg
test
xchg
pushf
sub
sbb
shll
xor
enter
cmp
xor
mov
daa
xor
cmp
js
daa
xor
mov
iret
mov
leave
cs
nop
insl
mov
push
or
mov
dec
and
cmp
lock
xlat
dec
addb
push
and
pop
outsl
ret
or
xor
dec
jg
add
sti
adc
inc
jbe
mov
enter
xor
add
mov
cmp
mov
fs
mov
mov
add
outsl
js
lods
sbb
push
and
xor
xor
jg
fsts
mov
xlat
xor
add
mov
and
and
insb
pop
pushl
add
pop
leave
adc
aaa
xor
add
adc
mov
vmread
test
call
or
or
out
aaa
movl
lods
push
outsl
add
jmp
add
insl
sub
sbb
and
pop
xor
les
mov
insl
cmpsb
lahf
jnp
imul
movsl
notb
ss
xor
stos
dec
std
ljmp
jae
adc
push
jae
mov
or
and
xor
or
xor
imul
inc
cmpb
js
sbb
sbb
and
stos
inc
mov
dec
sti
daa
mov
ja
add
xor
and
pop
icebp
iret
push
and
add
popf
shrl
push
pop
cmp
stos
imul
xor
jno
inc
adc
pop
or
ljmp
push
jbe
aam
fsubrp
xchg
push
sub
insl
xor
push
xchg
or
cmp
or
inc
inc
rcll
adc
xlat
xor
ja
loope
mov
add
jp
cmpsl
loope
add
jecxz
sub
push
pop
ljmp
and
xorb
popa
adc
pop
mov
xlat
push
xor
sub
aaa
xor
and
or
sysenter
lret
cmp
inc
dec
ret
xor
int
jne
or
js
pushf
push
outsl
outsb
xor
arpl
xor
movsb
loope
adc
inc
icebp
arpl
add
and
dec
and
int
and
push
xor
rolb
inc
insl
ret
xchg
das
xorl
pop
ja
fisttpll
sbb
xor
xchg
das
mov
or
fisttpll
mov
xorl
pop
inc
dec
inc
cmpsl
xor
int3
and
jb
sbb
ss
xor
pop
push
mov
jne
and
insl
sbb
cmpl
and
xor
or
insl
mov
sub
or
lds
adc
pop
pop
js
rcll
push
in
aaa
mov
inc
inc
jns
je
test
inc
addr16
mov
data16
imul
push
icebp
lcall
cmp
addr16
sarl
push
test
es
andb
pop
pop
imul
mov
inc
inc
sub
sbbb
test
das
adc
pop
xchg
fnstcw
xor
push
dec
xor
test
and
int
dec
ja
inc
test
or
dec
shrb
pop
lods
imul
inc
sarl
dec
cmpsl
inc
mov
lods
stc
push
push
cmpsl
inc
sti
mov
adcb
ret
scas
xor
push
jl
imul
sarb
in
jns
out
rolb
popf
cmp
arpl
push
daa
xor
outsl
mov
outsb
fs
push
jbe
ja
sbb
bound
arpl
jb
cmp
leave
mov
jmp
push
stos
mov
aaa
je
addps
inc
das
ja
imul
dec
sub
ja
jge
in
aaa
mov
xchg
jne
sbb
repz
jae
push
int3
dec
shll
pop
jp
jp
and
add
xchg
and
adc
jno
popf
lea
sbb
xor
xor
pop
xor
xor
xor
push
div
ret
outsb
jg
cmp
je
inc
ja
pop
add
mov
rorl
arpl
push
and
pop
and
aas
jne
call
imul
jl
xor
ret
mov
rcr
xor
loope
jnp
xor
insl
add
xchg
push
cmp
jl
mov
fistps
gs
dec
push
inc
packsswb
loop
aaa
imul
shll
or
mov
add
inc
je
rorb
adc
aaa
mov
aas
mov
inc
mov
jnp
sbb
cmp
fldl
js
mov
push
mov
xlat
mov
pop
pop
xchg
cmp
xchg
xor
pop
lds
or
jnp
repz
inc
pop
pop
mov
mov
jne
add
lea
sbb
xor
stos
outsb
cmp
lret
insl
leave
dec
xor
cmp
rol
inc
ja
cmpsl
loopne
lods
sbb
xor
subl
xchg
lcall
mov
in
jns
xor
dec
or
arpl
add
inc
mov
imul
or
insl
add
cmp
jb
xchg
cmpsb
jmp
inc
dec
lret
dec
cmp
dec
mov
in
xor
mov
cmp
js
mov
lret
js
mov
ret
inc
push
xor
mov
xor
adc
mov
jnp
pop
push
xor
sarl
sub
inc
in
rorb
dec
inc
pop
stos
adc
lcall
mov
sbb
jg
jp
enter
push
dec
pop
pop
and
inc
jnp
cmpsl
mov
jne
pop
push
rcl
call
push
imul
orl
aam
add
adc
test
push
pop
hlt
add
imul
out
shrb
push
or
mov
jno
int
jbe
xchg
xorb
pop
pop
xor
push
roll
dec
adc
mov
and
xor
mov
push
jg
negl
rol
je
inc
jmp
adc
fwait
wbinvd
cmpsb
imul
fisubrs
pop
loope
pop
test
xchg
insb
jmp
mov
dec
or
push
shr
add
dec
lds
jae
push
pop
jg
jcxz
and
js
jns
sbb
push
repz
leave
jp
mov
push
aaa
shll
outsb
xor
shll
imul
mov
jns
jmp
jmp
or
mov
add
lds
xor
jb
and
push
subb
idivb
aaa
xor
outsl
pop
xchg
pushf
add
imul
dec
inc
and
or
cmp
and
fstp
fldcw
xor
shlb
dec
aaa
cmp
cmp
mov
mov
imul
outsb
xorl
xor
xchg
pop
cmp
xchg
dec
inc
pop
dec
push
xor
adc
cmp
pop
aaa
adc
jnp
and
leave
adc
mov
inc
outsl
lcall
jo
rorl
add
aad
sbb
xchg
mov
loope
mov
dec
pusha
inc
sbb
sbb
mov
cmp
ret
ss
dec
fwait
cmp
jno
aaa
adc
and
or
ja
inc
sbb
sbb
in
mov
stos
sbb
inc
test
mov
jae
mov
jno
jno
fbld
xor
push
stc
sbb
out
push
add
and
jae
ja
xor
dec
xor
gs
push
adc
les
ljmp
and
xchg
mov
dec
arpl
dec
rcrb
or
mov
mov
std
dec
xchg
inc
mov
push
xor
and
pop
or
cmc
push
pop
jmp
hlt
push
sbb
mov
push
jecxz
pop
push
daa
xor
mov
imulb
xchg
int
mov
popl
aad
inc
enter
mov
testb
xor
cmpb
mov
pop
cmp
xchg
adc
or
push
in
popf
adc
xor
mov
out
arpl
insb
divl
adc
out
outsb
sbb
pop
dec
lock
push
sbb
pusha
ja
rclb
test
je
out
mov
xor
mov
sub
lds
aaa
inc
adc
push
addr16
stos
xor
shll
or
mov
xor
and
xor
aas
ja
es
sbb
fwait
dec
inc
push
imul
inc
leave
repz
xchg
pop
and
jmp
shrl
mov
push
fwait
push
push
adc
sbbl
xor
cmp
outsl
test
mov
testl
ret
lock
pop
ret
loope
mov
arpl
push
jo
inc
mov
adcl
popf
mov
inc
inc
scas
dec
mov
fldt
inc
sbb
loopne
or
and
push
adc
cmp
pop
adc
loopne
sbb
add
dec
mov
lock
pop
scas
adc
inc
push
push
sti
pop
push
dec
push
inc
xchg
inc
xor
outsb
ss
xchg
inc
jae
jno
jl
lds
out
movb
dec
insl
cmp
lcall
push
inc
aad
out
sbb
popf
cmc
sub
shlb
les
je
dec
ss
or
pop
inc
and
das
cwtl
das
xor
xor
xor
inc
adc
xor
xor
addr16
adc
jle
or
pop
pushf
add
fstpt
add
mov
sbb
inc
cmovb
add
add
jnp
adc
inc
mov
push
dec
and
inc
ret
cmc
lea
sahf
cmpb
xor
pop
inc
mov
add
adc
stc
jge
into
and
or
xor
pop
sub
pop
bswap
dec
xorl
iret
sbb
jbe
sub
pop
cmp
sub
cmp
jnp
inc
mov
arpl
idivb
inc
add
xchg
test
mov
inc
imul
lret
adc
das
idivb
inc
mov
cmp
or
sbbl
rcrl
push
cmp
cmp
or
or
xchg
jl
push
push
jg
cmp
test
in
loope
xchg
cmpsb
dec
aaa
inc
xor
dec
jns
mov
push
push
nop
dec
imul
xor
dec
mov
lods
add
xor
sub
add
loope
sarb
xchg
testl
add
pop
jns
icebp
test
fwait
stc
xor
xorl
lea
call
jmp
jmp
js
fiadds
cli
fidivrs
gs
pop
xor
add
out
daa
pop
hlt
les
mov
or
adc
jecxz
dec
cwtl
aad
rcrl
and
xor
xor
popf
and
lds
dec
and
mov
rclb
cmpsl
xorl
mov
adc
adc
stc
xor
push
or
jae
ret
lahf
xchg
adcb
mov
push
mov
ja
imul
mov
loope
jmp
add
enter
add
adc
fisttps
inc
addl
das
imul
add
or
sub
cmpl
and
add
aad
lret
xchg
es
jge
inc
inc
pop
aaa
popa
xor
int
dec
bound
xor
sub
popf
pop
aaa
aas
lds
rcll
push
inc
out
sbb
sub
bound
loop
rorl
ss
xor
addb
mov
iret
test
testl
sahf
loop
pushf
pop
jno
jo
add
fsubrp
adc
push
cmc
push
inc
popa
ja
add
test
sbb
lds
xor
and
shll
sbb
inc
and
or
lea
inc
stos
shl
mov
mov
add
lcall
das
inc
inc
inc
adc
aad
aad
fiadds
fwait
add
int
ja
pop
fistpl
pushf
loopne
add
out
xor
push
fisttps
sarb
iret
mov
sbb
sbbb
popf
mov
xchg
cmp
scas
adc
lock
and
arpl
mov
inc
out
sbb
aaa
in
inc
mov
mov
mov
insb
shll
xchg
loope
ljmp
jnp
leave
push
fwait
xchg
sub
add
loope
movsl
xor
arpl
push
rorl
popf
lock
jae
lahf
dec
pop
inc
push
mov
jecxz
pop
iret
aaa
adc
cmp
pop
lahf
push
mov
cltd
inc
and
popf
iret
jns
outsl
jmp
and
jecxz
fidivrs
cmpl
cmpb
int
js
pop
in
and
inc
cwtl
xchg
insl
mov
jg
cmp
mov
into
fisubs
inc
add
int
jge
stos
out
adc
dec
pop
lock
inc
not
inc
pop
and
shlb
dec
mov
jns
push
loope
fidivrs
inc
push
movsl
cmp
ret
sub
xchg
fidivrs
int
lcall
neg
sbb
sbb
jnp
or
push
jo
mov
or
fwait
jmp
inc
cmp
jno
fucomip
mov
push
or
std
adc
ret
sbb
mov
jnp
push
aas
dec
sub
orb
aas
adc
push
out
mov
cmp
xchg
mov
loope
js
aaa
in
fs
hlt
push
xchg
inc
jae
jg
popa
testl
or
xchg
cltd
sub
mov
add
jmp
mov
sbb
movl
and
loope
and
inc
fstps
jnp
addr16
push
jns
mov
push
out
push
mov
cmc
cmp
mov
sbb
inc
in
inc
xlat
fcomip
cmp
int
arpl
jne
xchg
aaa
loope
xlat
popa
xchg
jecxz
xchg
dec
adc
bswap
or
add
movsb
imul
jmp
and
cmp
aas
jno
repz
scas
ja
frstor
stc
xchg
cwtl
adc
rorl
mov
negl
and
js
fwait
push
fisttpl
negl
arpl
pop
icebp
fsubp
jo
stc
sub
xor
push
adc
icebp
or
dec
imul
loopne
rcrl
iret
jecxz
or
outsl
ret
inc
and
cmpsl
jge
int
popf
mov
ss
fisubs
mov
dec
cmp
xchg
inc
mov
loop
xchg
inc
xchg
dec
shrb
aaa
sub
in
inc
inc
mov
mov
pushf
cmpsl
rdpmc
cmpb
inc
stos
push
js
cwtl
lahf
popa
inc
xorl
pop
int
ss
add
xchg
mov
adc
and
cltd
outsl
mov
lahf
ret
std
jns
jbe
js
dec
mov
cmp
xor
insl
int
mov
mov
out
dec
js
pop
or
or
addr16
jno
mov
pop
test
ficoms
sbb
mov
dec
loopne
out
aaa
insl
mov
cmp
xchg
cmp
icebp
lock
dec
ret
cmpsl
mov
pop
out
push
mov
inc
jns
xchg
aas
int
dec
js
xor
sbb
jecxz
insl
imul
sbb
mov
fistps
add
scas
in
ja
mov
popl
lock
xchg
mov
es
aas
pop
jne
fsubp
shll
out
lock
mov
pop
push
inc
jno
ja
das
push
sub
cmp
cwtl
rcrl
sbb
lcall
insb
push
mov
xor
ss
ret
cmp
inc
call
data16
lds
adc
jmp
mov
or
cmp
movsb
es
xchg
test
dec
fucomi
int
xchg
inc
jns
sarl
ror
pop
mov
movsl
fstl
std
xor
pop
mov
dec
sub
mov
add
xor
iret
jo
shl
pop
ja
cmp
ficomps
es
js
adc
neg
add
outsl
add
mov
pop
testl
or
and
rorl
push
or
movsb
or
fidivrs
fwait
add
daa
aaa
mov
dec
in
popa
les
mov
icebp
cwtl
mov
lahf
sub
xchg
sbb
fbstp
cltd
ss
data16
jg
int
xchg
or
adc
push
lods
ret
jnp
lret
repz
sbb
out
lock
pop
sbb
xchg
dec
push
xchg
stos
dec
jl
cwtl
lock
incl
daa
mov
imul
xor
es
in
cmp
popf
les
inc
inc
and
dec
out
lds
pop
pop
daa
sbbb
xlat
push
out
and
pop
rolb
xchg
call
int
je
cmp
test
imul
divl
negl
int3
inc
push
sbb
out
mov
mov
fwait
shll
push
fwait
orb
push
iret
inc
imul
xor
lods
shl
mov
daa
insl
sbb
xchg
outsb
adc
sbb
mov
data16
out
cltd
jo
push
xchg
mov
and
jno
pop
dec
lea
lock
lock
ror
xchg
xor
add
cmpsl
imul
aaa
lret
sbb
jae
xchg
push
xor
push
fwait
dec
xor
dec
mov
mov
fisubs
loopne
inc
or
jecxz
stos
ret
test
xor
in
insl
test
js
push
adc
pop
data16
or
outsl
imul
and
int3
pop
int
adc
btc
mov
lock
mov
mov
pop
mov
cmova
or
xchg
in
fnstsw
inc
fistpll
xor
in
das
inc
lea
or
jmp
pop
pop
xor
es
lret
cmpsl
mov
xor
out
and
addl
lods
lock
jmp
or
adc
ror
mov
pop
inc
addr16
or
pop
pop
int
add
sbb
push
daa
loopne
add
rolb
leave
dec
pop
das
pcmpgtd
dec
outsl
icebp
pop
std
add
les
aad
sbb
cmp
push
lcall
sbb
cmp
cmp
les
mov
lcall
jno
outsl
push
xchg
lods
daa
arpl
outsl
sub
sti
lcall
sbb
lods
jg
fidivrs
lahf
mov
jmp
out
adc
inc
mov
sub
inc
cmp
dec
xchg
cmpsl
pop
arpl
imul
jne
in
adc
add
jne
fists
xor
fwait
jns
in
and
and
xchg
push
cltd
sti
das
shlb
mov
fisttpl
xor
nop
in
xor
int3
and
jg
shrl
movsb
ret
or
xor
rorb
loope
sbb
push
xchg
cwtl
add
adc
filds
shlb
xor
or
cwtl
aaa
or
lods
or
ss
and
addr16
pop
aam
js
jns
outsl
xchg
sub
adc
xchg
jnp
or
and
cmpsw
movsl
add
sarb
xor
add
fnstenv
jp
ljmp
xchg
movsb
xor
pop
add
fwait
mov
mov
cmc
push
lds
mov
out
ja
inc
js
xchg
sub
shll
dec
repz
outsl
aaa
int
pop
addr16
cmp
popf
shll
loopne
cmpsl
inc
daa
fstpt
jecxz
movsb
pop
sbb
sarl
negl
add
popf
insl
fwait
jno
mov
test
sub
inc
add
push
dec
lea
inc
mov
xchg
lcall
subl
mov
jmp
mov
adc
sub
xor
lahf
xor
jo
inc
test
cwtl
aas
pop
sub
jp
dec
ret
lods
les
mov
xor
xor
cmp
cmp
rcrl
adc
xor
jl
pop
sar
out
push
int
mov
fchs
int
dec
mull
xchg
mov
out
mov
xor
int
jnp
xor
adc
fldl2t
int
insl
xchg
adc
stos
lret
sti
inc
insl
adc
xor
jns
aad
xor
data16
imul
popa
sbb
push
dec
mov
mov
loope
fwait
dec
or
es
xor
sbb
inc
push
imul
dec
loop
mov
jmp
jns
xchg
enter
cmp
fildll
mov
xor
and
cwtl
dec
loopne
mov
arpl
dec
adc
mov
movsb
dec
imul
xor
adc
test
loope
aaa
in
test
orb
cmp
loope
xchg
popf
cmp
dec
jo
dec
xor
fsubp
sub
stc
call
sbb
int
xor
rcll
push
movsl
int
int
lods
lds
hlt
fisubs
inc
pop
inc
in
dec
jo
or
movsl
add
push
cmpsl
dec
or
mov
dec
sbbb
outsl
pop
leave
inc
mov
dec
mov
mov
imul
mov
xor
jmp
lock
out
add
lods
aad
aaa
popa
add
loope
pop
mov
pop
jecxz
xor
mov
ficomps
add
enter
stos
daa
jnp
and
loop
in
inc
mov
add
orb
jecxz
fnstsw
dec
xor
jecxz
js
xchg
cmpsl
sbb
cmp
das
lahf
mov
xor
mull
inc
inc
inc
in
pop
mov
js
or
dec
push
add
mov
cmp
inc
xor
icebp
dec
push
sbb
lock
arpl
test
jp
adc
inc
adc
stos
shll
adcb
mov
jge
aaa
pop
pop
xor
popf
mov
xor
lods
jns
xor
jne
int
jno
fnstenv
loope
sarb
inc
stos
pop
jmp
shrb
mov
sti
jg
jnp
mov
iret
imul
stos
inc
xor
daa
das
and
in
mov
add
xor
jnp
loopne
lea
inc
test
addr16
or
mov
mov
ljmp
ret
lods
cli
pop
daa
aad
mov
pushfw
call
ffreep
nop
ljmp
mov
mov
loope
dec
cmp
fwait
cmp
cmp
aas
repz
popf
bound
leave
loope
or
jmp
adc
xor
inc
jns
les
js
mov
mov
inc
dec
push
fists
pop
lds
xchg
cltd
in
cmp
mov
and
sbb
pusha
adc
cmp
data16
jno
cmp
cmp
stos
aas
arpl
dec
daa
addr16
aaa
leave
pop
lock
movsb
aaa
push
popa
push
adc
ret
lods
ret
sbb
insl
push
pop
sbbb
mov
mov
cmp
jne
add
andb
int3
js
jp
pop
cmpsl
add
jmp
and
cmc
jnp
mov
iret
xor
mov
cmpsl
decl
inc
daa
loopne
mov
fnsave
xchg
in
int
mov
sub
mov
loope
bound
addr16
mov
add
push
data16
and
pop
fwait
xor
dec
xor
imul
jmp
mov
test
out
jnp
es
int
dec
inc
inc
daa
jno
rorb
call
dec
mov
xor
mov
daa
js
aaa
popf
xchg
mov
pop
pop
shlw
xlat
std
rcl
adc
and
movsl
push
sub
adc
dec
loopne
dec
xchg
mov
pop
jge
and
and
inc
dec
jp
pop
mov
fnstsw
int
lret
bswap
movsb
es
movsb
lods
pop
cltd
dec
or
imul
aas
jae
lea
das
dec
dec
or
pusha
divl
mov
and
je
xchg
test
roll
out
add
pop
push
outsl
push
outsl
mov
stos
or
in
icebp
mov
neg
or
jno
scas
icebp
dec
scas
sbb
gs
xchg
and
pop
pop
int
loope
jae
andl
out
sbb
rolb
xchg
pop
jmp
popa
aam
adc
test
adc
mov
add
sub
hlt
dec
out
xor
outsl
inc
rolb
inc
lds
cltd
jnp
popf
lea
inc
sub
adc
js
ret
aad
pusha
inc
dec
jp
lahf
or
mov
lcall
test
adc
mov
pusha
cmp
gs
fnstenv
mov
add
inc
xor
mov
cmp
addr16
xor
pand
stos
pop
daa
frstor
xchg
mov
jb
lds
sub
mov
mov
cmp
mov
add
ror
scas
sbb
sbb
shll
jecxz
ret
dec
or
popf
stos
mov
inc
add
or
xor
movl
xor
push
out
out
sti
sbb
call
add
lods
pop
pop
fistpl
mov
fildl
xchg
xchg
fsubp
inc
push
jecxz
addr16
mov
inc
jnp
push
jecxz
call
inc
sub
fstps
js
popf
inc
push
js
out
xor
push
popa
flds
data16
or
sub
or
dec
mov
sarl
lods
xor
ret
and
leave
and
loopne
jnp
divl
xor
mov
out
jbe
ret
mov
fiadds
scas
cwtl
xchg
ror
es
test
push
xor
xchg
mov
shl
jg
rcpps
into
push
das
repz
jne
jns
mov
rol
mov
repz
outsl
repz
dec
call
sti
pop
jne
sbb
dec
xor
cmp
push
scas
fwait
xorl
or
popf
aaa
fldenv
fisttpl
int
ret
fwait
rcll
and
orb
mov
outsl
push
lock
push
movsb
int3
mov
fisubs
push
adc
loope
jecxz
jno
hlt
les
dec
xchg
pop
subl
mov
xor
sub
pop
bswap
add
push
mov
ret
pop
jmp
gs
xor
cmc
mov
rcrl
push
scas
outsl
or
mov
jmp
xchg
in
push
xchg
cmc
out
mov
adc
cmovae
aaa
mov
add
insb
push
xor
dec
xor
xor
adc
popa
inc
stos
test
icebp
xchg
add
gs
cwtl
xchg
sbb
dec
rcrb
test
lcall
outsl
inc
shll
loope
sbb
mov
ret
andl
data16
aaa
cmp
or
and
ret
outsl
loopne
leave
fs
popa
scas
inc
stc
cwtl
adc
mov
or
in
hlt
data16
or
das
xor
cmc
stos
pop
adc
int
push
jmp
mov
popa
aaa
pop
sub
sbb
pop
mov
pop
push
mov
bound
mov
fwait
add
daa
or
mov
cmpsl
mov
int
movsl
push
stos
cmp
pop
roll
lods
daa
mov
inc
add
int
xor
inc
inc
inc
fnstenv
sbb
xor
jnp
cmp
inc
cmp
fwait
inc
xchg
std
mulb
aad
push
dec
bound
jnp
imul
stos
cmp
add
imul
pop
xchg
xor
dec
loope
out
mov
shll
rcll
test
sbb
dec
dec
push
bndldx
and
inc
and
shl
js
ja
stc
sti
inc
outsl
push
mov
int3
sbbb
jge
jnp
loopne
out
pop
stos
xor
leave
outsl
push
mov
adc
pop
xchg
mov
adc
jno
test
jp
pop
jno
outsl
pop
adc
addb
jmp
xchg
loop
insl
sub
adc
test
fxch
pop
jns
dec
aaa
cmp
popa
lahf
cmp
dec
lcall
mov
lahf
fwait
adc
ljmp
es
xchg
add
fwait
jno
and
xor
fstpl
cmp
subl
dec
in
mov
movsb
stc
mov
lods
rorl
jmp
xchg
scas
adc
xor
pop
in
xor
inc
adc
xor
ret
push
jge
imul
dec
inc
shrb
adc
test
arpl
mov
adc
aad
cmpsl
pop
rorl
out
xchg
mov
sbbb
or
inc
jnp
dec
int3
popa
mov
arpl
pushf
fisubs
lds
test
xor
adc
in
pop
sub
add
push
icebp
and
and
mov
sub
leave
loop
sbb
es
aas
xor
lcall
test
adc
ljmp
cmp
stos
add
sub
push
or
lods
xchg
mov
xor
into
lcall
xchg
rolb
das
scas
jp
pop
and
xchg
push
cmc
push
xchg
mov
insl
gs
dec
rolb
jo
jo
addl
fistl
push
shlb
mov
mov
and
xchg
and
xor
incl
test
popa
sarl
cmp
xchg
scas
cmpsl
lods
cwtl
shrl
or
aad
lods
mull
xchg
xor
int3
pop
xchg
in
lret
xchg
pop
outsl
inc
scas
inc
xchg
inc
fistl
dec
cmp
imul
gs
mov
fidivs
int
adc
mov
out
pop
pop
jmp
fwait
imul
mov
and
sub
xor
inc
scas
mov
push
xchg
pop
popa
rorb
dec
jp
fnstenv
jne
aaa
sbb
iret
push
xor
xchg
arpl
adc
fwait
add
xor
shlb
push
xor
and
mov
rcrl
pop
lcall
mov
and
or
add
jnp
jmp
xchg
inc
xchg
js
jg
out
add
jecxz
lcall
in
mov
repz
adc
lods
les
cmp
xor
es
rorl
dec
mov
xchg
pop
shrl
xchg
mov
mov
inc
xor
std
xor
outsl
subl
das
and
fimuls
xor
int
test
xor
lea
sub
jnp
dec
mov
aas
daa
das
lods
es
dec
test
sbb
jno
lahf
jp
bound
mov
xor
lea
push
int3
es
sub
gs
xlat
rcrl
pusha
ss
push
cmp
out
and
int3
fmuls
xchg
imul
int
inc
pop
push
lret
dec
push
push
lcall
xor
dec
xor
pop
mov
sti
pop
jcxz
cmc
mov
inc
xchg
xchg
jne
adc
lahf
pop
inc
mov
xor
adc
add
adc
into
add
inc
push
cmpsl
jmp
push
dec
ja
daa
fmuls
popa
push
movl
xchg
and
imul
jno
pop
inc
xchg
jno
mov
adc
cmp
cmp
pop
mov
repz
xor
dec
sub
or
cmp
icebp
cmp
mov
jnp
pop
sbb
sub
ss
addl
daa
and
xor
lds
push
mov
pop
movl
test
jnp
arpl
popf
aaa
loope
sbb
jno
fnstcw
or
push
mov
loopne
xchg
dec
xchg
stos
adc
leave
idivl
cmp
pop
cmp
xchg
das
scas
xor
and
daa
dec
and
mov
fbstp
addl
addr16
sbb
add
xor
sbb
mov
pusha
fstpl
or
sub
insb
add
cmc
movsl
mov
add
enter
adc
adc
pop
pop
xchg
cwtl
aam
xchg
in
jnp
mov
pop
mov
inc
addl
ret
xchg
int
add
daa
sub
push
lods
pusha
shr
shll
ret
fnstsw
mov
sarb
sbb
sub
xchg
mov
inc
or
xor
les
ja
mov
add
test
lods
fisubs
or
shl
push
jnp
jmp
or
xlat
inc
mov
mov
daa
dec
sub
mov
fldl
xor
inc
xlat
call
pop
repz
xchg
xor
mov
jnp
jg
jge
sub
inc
jns
dec
ret
fwait
rorb
negl
jo
lods
rorl
outsl
push
rorl
fwait
adc
add
pop
addr16
adc
cmc
stos
es
adc
xor
adc
cmpsl
dec
jnp
pop
mov
add
inc
jno
ja
xor
lcall
js
lock
popa
adcl
popa
push
outsl
push
push
mov
dec
rolb
pop
xor
outsl
jmp
add
mov
xor
int
xor
cmp
int3
repz
xor
rorb
les
xchg
cmpsl
sahf
jno
cmp
sti
fldl
test
or
cmp
mov
add
mov
fwait
add
pop
outsl
mov
aas
push
gs
cmovae
cmc
les
shrb
adc
mov
pop
push
call
push
lods
call
jne
fidivs
shlb
cwtl
push
lsl
pop
cmp
cwtl
xor
loope
add
xchg
push
aaa
adc
sbbb
pop
xor
lcall
hlt
fidivrs
test
lds
or
scas
fwait
xor
cmp
jnp
xorl
pop
lds
add
jmp
xor
rorb
test
sub
xchg
jecxz
mov
xchg
aam
flds
fldcw
sub
push
lods
cwtl
cmc
fisubrs
inc
or
xor
push
lock
leave
and
jnp
mov
fimuls
int
nop
mov
shl
sbb
xchg
scas
or
and
lcall
dec
mov
pop
inc
xchg
js
std
cmp
inc
add
sbb
mov
pop
or
xorb
dec
int3
or
leave
dec
pop
and
and
adc
movsb
js
fwait
in
xchg
hlt
or
fwait
les
cwtl
push
mov
xor
out
mov
or
cmp
inc
cmc
repz
outsl
push
mov
aaa
mov
andl
push
pop
inc
rcrl
test
loop
lcall
ficoms
test
adc
add
jp
or
jnp
out
sub
scas
pop
rcr
mov
push
sbbl
add
or
cmp
loopne
xor
lds
stc
sbb
pop
int3
ljmp
pushf
sub
mov
cwtl
stc
cmpsl
insl
aad
dec
loop
and
pop
xor
mov
movsb
cwtl
aad
push
gs
xchg
and
pop
inc
addr16
lahf
dec
sbb
jp
lods
mov
sbb
stos
pop
std
or
adc
lods
push
xchg
call
mull
or
test
cmp
inc
add
out
add
jmp
adc
jecxz
add
xchg
mov
test
dec
incl
cmp
pop
mov
xor
xor
test
arpl
jp
int
notl
cwtl
adc
mov
xchg
dec
push
cmp
cmc
sub
sub
sqrtps
cmp
adc
xor
cmp
icebp
data16
adc
add
mov
sub
ja
xor
fwait
lods
and
fidivrs
imul
test
adc
es
xor
mov
sbb
cmc
stos
daa
icebp
lods
es
mov
test
adc
sbb
aas
outsw
push
xor
inc
xor
iret
movsl
sbb
dec
mov
pop
dec
hlt
es
jne
pushfw
mov
les
jnp
in
rolw
int
mov
dec
sti
and
and
popf
jg
fnstenv
or
xchg
mov
adc
sub
addr16
shll
lret
test
aad
mov
movsb
xchg
cmc
test
add
adc
adc
add
stc
pushl
or
rcrl
icebp
or
inc
sub
fcomi
jg
es
fwait
or
arpl
data16
jae
js
ljmp
inc
adc
or
ret
pop
mov
loopne
movsl
mov
loope
lods
das
mov
andl
pusha
fs
add
xchg
repz
add
cwtl
push
ja
aaa
adc
outsl
in
cmp
add
xor
push
icebp
gs
neg
insb
jg
jns
pop
out
add
js
dec
lret
xor
mov
xor
mov
insl
out
imul
addl
daa
lcall
jo
mov
ret
xor
sbb
ja
jmp
or
mov
jmp
data16
push
call
pop
inc
loope
xor
notl
in
int
rorb
inc
mov
sarl
pusha
sarb
aaa
or
mov
sbb
xchg
mov
lock
ret
dec
jg
pop
xchg
addr16
lods
mov
jp
outsl
mov
jecxz
fwait
je
adc
nop
dec
mov
subl
xchg
insb
out
add
mov
sar
and
add
dec
ja
mov
jg
pop
xor
cmp
or
cmp
inc
andl
or
or
aam
std
xor
popa
enter
inc
or
scas
mov
push
in
rcll
outsl
sub
pop
inc
jge
ret
and
test
orb
scas
and
xchg
xchg
mov
mov
outsl
and
call
and
lods
dec
int
jae
dec
jp
mov
add
inc
pop
int
adc
dec
mov
or
je
mov
cmpsl
in
lock
adc
fsts
cwtl
loope
lods
and
cmp
data16
inc
inc
add
push
dec
cwtl
addr16
roll
popl
add
xchg
je
mov
jmp
sub
movsb
sbb
add
xor
jmp
incl
xchg
xor
add
rcrb
mov
pop
xchg
aam
inc
imul
mov
out
add
imul
add
mov
lds
mov
or
lea
shrl
xchg
test
add
dec
in
inc
xchg
es
rcrb
jnp
int
cmc
in
pop
pop
rorl
inc
jnp
movsb
fisubrs
pop
jmp
lcall
add
mov
push
xchg
and
xor
xchg
sub
ja
fwait
mov
cmp
jnp
cmp
in
jg
lcall
cmpsl
mov
inc
dec
aad
int3
bound
xchg
mov
ljmp
jp
aad
lods
xchg
aas
inc
ret
mov
sti
or
sbb
adc
pop
or
cmp
bound
jp
fwait
sbb
aas
insl
dec
data16
ljmp
insl
fwait
adc
jne
xor
aaa
decl
es
loop
andl
xchg
and
add
mov
mov
xchg
mov
dec
inc
leave
ss
add
sbb
ja
popf
sbb
dec
pop
xchg
dec
xchg
dec
iret
daa
insl
sarl
inc
scas
loope
adc
add
adc
das
js
ja
cltd
cmp
aas
or
fnstenv
mov
rclb
adcl
call
dec
cwtl
aad
push
scas
pop
add
push
inc
lock
inc
dec
ljmp
jnp
pusha
ja
jmp
adc
xchg
pop
cltd
arpl
or
sti
xor
dec
in
stos
xchg
xor
dec
cmp
and
dec
mov
movq
mov
loop
sub
or
out
add
xchg
popf
stos
mov
add
mov
xor
loope
fwait
rorl
test
and
jno
addr16
pop
cmp
sbb
add
mov
ja
lock
add
jecxz
add
aaa
mov
push
pop
add
add
ja
xchg
push
dec
add
cmp
arpl
sbb
mov
aaa
mov
stc
aam
or
adcl
and
xor
or
movsb
xchg
ja
jnp
fldl
inc
pop
insb
pop
outsl
push
add
fwait
or
jno
or
cmp
push
mov
dec
cwtl
orl
xchg
int
add
inc
adc
or
xor
inc
xchg
js
add
in
icebp
pop
das
int
aas
sub
cwtl
jne
fwait
rep
negl
rorl
add
fisttpll
push
pop
movlps
xor
adc
mov
out
add
int3
cwtl
or
or
flds
or
fisubs
xor
pop
mov
add
cmpsl
addr16
pop
pop
ret
in
add
xlat
loope
push
orb
xor
xchg
fsubrp
lock
or
xor
sbb
lcall
or
rcrl
sub
push
inc
pcmpgtd
js
ja
push
int3
push
xor
popf
sub
outsl
jnp
popa
mov
fisubs
pop
mov
pushf
push
inc
dec
add
and
dec
scas
roll
or
xor
out
add
xor
add
int3
lods
jnp
pop
xchg
jne
das
adc
inc
xlat
xor
xor
jmp
add
xchg
add
mull
xor
xchg
mov
mov
xor
xor
inc
dec
push
mov
les
aad
popf
aaa
pusha
adc
dec
pop
mov
adc
jecxz
dec
in
add
mov
dec
cmp
mov
pop
insl
jae
jecxz
ret
sbb
push
mov
sbb
and
cmpsl
dec
xchg
loopne
mov
loopne
fcmovne
ja
push
stos
pop
sbb
or
or
shll
or
sbb
daa
xor
mov
hlt
ficoms
ljmp
sub
sbb
jno
push
adc
sbb
inc
pop
cmp
and
repz
sbb
sahf
gs
neg
inc
mov
ficomps
movsl
xor
xchg
rorb
jmp
add
xor
mov
mov
insb
sbb
fwait
sbb
mov
lods
ret
add
movnti
dec
sbb
xchg
xchg
imul
test
push
int
sbb
or
mov
pop
jne
sbb
cmp
cmp
int
jmp
lds
mov
mov
xlat
sbb
int
and
outsl
pop
jg
add
ljmp
adc
testl
jae
testl
inc
mov
xor
inc
dec
mov
mov
stos
xchg
js
xchg
xchg
dec
push
daa
js
jns
mov
ret
imul
loope
imul
mov
dec
clc
xchg
mov
test
push
add
jb
mov
arpl
cmp
or
orl
add
mov
mov
mov
cmp
es
test
xor
lds
cmp
cmp
roll
or
sub
add
push
add
data16
loopne
pop
int3
mov
sub
loopne
or
out
iret
xchg
js
js
sbb
lcall
ja
push
xor
es
stos
jecxz
push
mov
cmp
mov
sbb
jecxz
pop
imul
in
inc
or
add
mov
data16
leave
sbb
les
rorb
jp
lcall
jecxz
dec
arpl
adc
jnp
lret
pop
mov
int
sbb
sbb
mov
shlb
rorl
adc
xor
and
lahf
or
dec
xor
iret
cmp
jecxz
mov
jl
jecxz
movsl
and
or
xchg
mov
xorl
or
sub
sbb
adc
arpl
fisubrs
imul
jecxz
aam
bound
imul
inc
cmp
push
adc
mov
test
push
inc
inc
lret
in
inc
sbb
int
lret
roll
and
popf
outsl
sub
testl
pop
xchg
out
adc
sbb
insb
ret
cmp
add
xchg
sti
adc
cli
pop
cmp
cmp
int
adc
or
mov
mov
dec
xchg
jnp
jne
adc
lret
daa
gs
ret
mov
pop
loope
adc
add
pop
stos
xor
push
inc
punpckhdq
in
jg
xor
cmpsl
ffree
insl
or
adc
cmpsl
jge
mov
cmc
mov
cmp
movsb
add
xor
iret
jnp
stc
sub
and
repz
mov
insb
add
xchg
fisubs
dec
jge
push
sbb
mov
add
push
sub
popf
loop
ja
int
adc
xor
xor
dec
shrb
sbb
or
cwtl
out
cmp
ret
imul
sbb
cmpsl
arpl
xor
mov
push
sbb
data16
mull
aas
inc
int3
xchg
push
lock
and
in
faddl
mov
bound
lcall
popf
push
mov
jno
pop
xchg
sub
sub
mov
cwtl
push
jae
add
jno
leave
sub
sub
xchg
aaa
pop
movsl
push
inc
stos
fimuls
ret
jae
mov
or
popf
fldl
push
imul
lds
fucomp
mov
arpl
stos
and
jecxz
leave
aad
inc
daa
inc
mov
inc
rcrb
pushl
outsl
in
inc
icebp
mov
or
xchg
pop
adc
jnp
lds
ljmp
or
jne
scas
aaa
adcl
js
lcall
loop
repz
mov
adc
call
mov
icebp
es
dec
cmp
add
ret
sbb
add
dec
pop
dec
bound
data16
adc
out
daa
aam
fimuls
fwait
add
fwait
add
cwtl
inc
jno
xlat
in
test
out
xor
test
jecxz
cltd
mov
pop
sti
mov
dec
loopne
or
xor
and
adc
xchg
inc
loope
mov
es
inc
or
xor
aad
and
iret
inc
insl
cmp
jnp
pop
jae
xchg
xor
cmp
and
inc
insl
xor
and
in
pop
dec
ljmp
test
rorb
add
pop
inc
jae
mov
movsl
cwtl
xor
jl
inc
icebp
cmp
and
sbb
mov
aam
add
jecxz
aaa
mov
cmp
xchg
shll
stos
inc
lahf
int3
fcompp
movsb
mov
dec
push
push
xchg
xchg
dec
inc
outsl
push
iret
mov
in
push
dec
fwait
jno
push
xor
aaa
test
or
lcall
mov
popa
mov
jne
pop
inc
or
movsb
cmpb
fwait
je
xchg
inc
das
jmp
sub
nop
add
sti
outsl
test
inc
dec
push
cmp
shrl
fists
pop
stos
sbb
push
and
adc
std
test
movsb
ret
arpl
adc
add
and
test
or
push
lds
and
mov
shll
push
dec
pop
in
push
adc
es
add
fstps
adc
xchg
mov
cmp
popf
xchg
leave
xor
into
push
cwtl
xchg
shll
pop
xor
popa
sub
in
add
or
dec
ss
dec
stos
popa
jne
lahf
loope
test
andl
xlat
ss
test
out
icebp
xor
sbb
mov
push
cmc
ja
dec
outsl
push
icebp
stc
inc
cmp
int3
dec
jo
push
in
dec
sbbb
int
adc
jae
pop
xor
add
push
iret
xor
push
je
in
sub
dec
hlt
imul
cmp
xor
mov
inc
pop
les
xor
pushl
mov
fcomps
and
lcall
addr16
sub
cmp
push
bound
mov
mov
jp
cltd
fistps
cwtl
inc
call
mov
sub
dec
sti
sub
or
jp
fldl2t
mov
gs
pop
mov
xor
mov
adc
fwait
aam
pop
aaa
aaa
push
mov
imul
xor
test
pop
pop
jge
aaa
inc
cmpsl
jecxz
outsl
fwait
lock
dec
dec
cmpsl
outsl
pop
cmp
inc
je
push
pop
mov
imul
leave
mov
aaa
test
int
mull
lcall
or
add
pushf
les
fwait
add
out
int
data16
vpmulhuw
and
xchg
aad
push
add
lea
leave
pop
sub
dec
sub
push
sub
adc
int
inc
adc
cmp
mov
out
cmp
lret
call
cltd
js
js
jae
xor
jp
adc
pop
loop
cmp
jp
imul
mov
and
shll
ret
frstor
or
sbb
inc
xor
dec
push
adc
jmp
imul
int
push
mov
fwait
push
cmp
jecxz
adc
addr16
or
fists
mov
sbb
nop
sub
mov
popa
adc
mov
rcr
aaa
mov
add
sub
popa
in
jnp
adc
cwtl
push
cmp
inc
adc
xchg
dec
push
dec
movsl
lds
lds
cmp
cmp
ffree
movsb
push
cmp
insb
inc
lds
xor
mov
or
or
push
jecxz
mov
fistps
mov
mov
add
or
xchg
lds
ret
xlat
fnstcw
dec
sti
dec
jg
jae
pusha
dec
rorb
mov
adc
int
fwait
icebp
data16
xor
xor
push
push
adc
inc
add
shll
jnp
aas
pop
and
inc
jne
and
lds
jp
sub
lcall
gs
inc
jne
pop
out
nop
pop
in
fnsave
pop
inc
roll
inc
stos
pop
mov
xlat
ljmp
lods
pop
jno
mov
out
inc
xchg
inc
out
popa
push
adc
cwtl
pop
cltd
xor
sbbb
cmp
cmp
fimuls
out
hlt
test
cmp
mov
daa
xchg
ljmp
xchg
mov
shl
scas
xor
test
sbb
mov
cmp
shlb
das
aas
xor
jns
in
mov
inc
mov
jnp
fidivrs
popf
imul
sbb
cmpsl
pop
int
notl
lcall
adc
stc
fisubs
sbb
xchg
cmp
nopl
cwtl
das
inc
mov
addb
sub
addl
js
inc
sub
mov
mov
lds
adc
ret
cmp
mov
cwtl
loope
pop
cmp
scas
lds
sbb
adc
out
cltd
push
cmc
fisubrs
xor
out
dec
stos
xor
lret
icebp
mov
int
sbb
sti
mov
fwait
xor
inc
xor
call
cmp
fldl
in
stc
and
sbbl
pop
xlat
add
out
add
mov
sbb
mov
dec
aaa
jnp
icebp
fiadds
ret
or
imul
shr
xor
or
rclb
lods
js
mov
test
cwtl
fwait
lahf
sbb
inc
mov
or
sbb
mov
add
xor
sarb
call
adc
sub
xor
mov
cmp
das
cwtl
aam
outsl
cmc
and
inc
andb
push
xorl
xchg
xor
roll
add
das
dec
aad
mov
int3
lods
insl
mov
das
push
xchg
enter
cltd
cmp
inc
add
fisubs
xorl
fimuls
ja
xchg
push
int3
loop
jnp
jnp
add
sub
xor
cltd
out
xor
fwait
add
push
xchg
mov
pop
sub
push
cmp
jmp
ret
add
int3
pusha
inc
xor
sub
aad
push
mov
xor
adc
xor
repz
out
andl
mov
xor
xlat
jnp
mov
xor
iret
pop
adc
xor
xchg
sti
pop
push
cmp
lods
sbb
loope
and
pop
int
mov
es
jg
mov
out
les
or
sub
setp
mov
push
cmp
iret
popf
es
mov
cmpsl
cwtl
shll
dec
jno
arpl
cwtl
hlt
es
test
mov
stc
aaa
test
std
sub
gs
and
jmp
out
sti
and
int
xor
sub
add
push
jg
sub
orw
das
ret
or
ja
adc
pop
stos
mov
or
es
add
in
testl
mov
lahf
inc
lods
movsl
lcall
dec
cmp
and
cmp
adc
mov
out
aaa
popa
ret
jnp
fstpt
adc
cmp
stc
movsb
es
xor
aam
faddp
xchg
fcomi
adc
jno
jecxz
jne
mov
andb
and
fiadds
out
arpl
or
dec
xorb
cmp
jae
cmp
es
aaa
add
leave
test
ja
xor
mov
jns
pop
imul
imul
jns
xor
loop
popa
mov
dec
pop
inc
push
iret
repz
loopne
xorl
push
ret
cmpb
sub
adc
popa
mov
xor
pop
dec
cmpsl
sub
mov
adc
inc
xor
pusha
mov
outsl
sar
xor
xchg
imul
sub
das
sbb
or
xor
push
push
jnp
adc
fldt
stc
xchg
shll
mov
es
adc
xor
sbb
inc
mov
xor
xor
xlat
gs
xchg
push
scas
pop
add
mov
ja
xor
mull
add
shll
ja
or
and
loope
outsw
push
dec
mov
dec
adc
or
inc
pop
xchg
jns
xor
xchg
xor
mov
inc
stos
push
xchg
pop
or
mov
je
sbb
popa
popa
stc
shrl
popf
pop
pop
aas
imul
xorl
pop
inc
add
xor
xorb
mov
xlat
js
adc
mov
fs
aas
xor
mov
movsl
add
push
add
insb
ret
push
xchg
dec
push
jnp
mov
dec
fistl
aaa
mov
sbbl
dec
add
cmp
jnp
xchg
xchg
orb
fnstenv
outsl
mov
push
or
sbb
jae
sbb
hlt
shl
xchg
adc
or
xchg
mov
int3
data16
in
push
in
sbb
mov
arpl
mov
xchg
arpl
xlat
cmc
int3
push
jne
mov
jnp
sub
sarb
imul
xor
mov
cltd
or
icebp
lcall
rolb
adc
pop
inc
ret
or
mov
push
addr16
lahf
in
push
xor
adc
cltd
xor
inc
inc
xor
popa
lods
stos
rorl
adc
repz
xor
fldl
push
dec
or
or
or
mov
loope
roll
xor
push
inc
jns
push
and
and
fistpll
adc
data16
push
mov
std
adc
fwait
xlat
popa
or
add
jg
mov
rcrl
adc
or
and
adc
testb
and
or
shrl
loop
add
dec
xor
and
add
xor
daa
ret
mov
mov
or
pusha
aad
push
sarb
rcpps
add
cmp
pusha
mov
sbb
adc
int3
pusha
add
fildll
hlt
dec
add
jmp
data16
cmpsl
stos
cwtl
xor
hlt
xor
or
std
cmp
adc
sub
or
dec
in
sarl
add
call
test
int
add
dec
pusha
pop
add
xor
loope
data16
icebp
gs
mov
inc
xchg
gs
fsts
shrl
hlt
es
mov
sub
arpl
cmp
add
push
cmp
gs
adc
lret
sbb
lds
push
lods
jp
adc
fwait
xor
sub
sbb
dec
sub
dec
push
stc
push
scas
push
inc
pop
js
xchg
pop
daa
xchg
sbb
imul
popa
fbld
jne
das
cwtl
xor
xchg
xchg
int
add
sub
jg
inc
dec
ret
movsb
aaa
mov
xor
cmp
flds
sub
mov
pop
dec
sub
or
jmp
aaa
jno
lods
pop
add
pop
xor
push
dec
push
pop
adcl
xor
pop
arpl
lcall
fwait
adc
and
or
aam
pushl
cmp
cmp
cltd
iret
inc
push
and
adc
popa
inc
adc
int
mov
mov
pop
dec
inc
out
int
xchg
dec
aas
mov
inc
inc
cmp
lea
xchg
cwtl
xor
repz
and
test
xchg
mov
lcall
dec
lcall
add
test
inc
xchg
cmp
test
pop
les
push
les
inc
outsl
push
xor
mov
fisubrs
repz
ljmp
fldcw
inc
xor
scas
xlat
test
lea
popf
add
add
push
daa
sbb
loope
das
shl
xchg
ret
or
sbb
xor
cwtl
and
adc
in
movsb
movl
mov
cmc
es
shll
pop
fists
add
mov
adc
add
ret
test
mov
outsl
xor
cmp
add
cwtl
add
xor
data16
xchg
push
or
or
nop
mov
push
and
sbb
sub
ret
arpl
mov
or
sarl
cwtl
add
je
js
or
cli
lcall
in
shr
mov
fisubrs
adc
pop
mov
int
dec
xor
aas
adc
xor
push
xchg
xchg
or
cmpsl
and
dec
test
imul
out
sub
mov
icebp
cwtl
push
sub
mov
xlat
mov
and
ficomps
std
test
add
or
mov
jp
push
popf
lret
add
adc
cmp
movsl
sbb
lcall
int3
ljmp
cmp
std
pop
xor
adc
pop
inc
or
mov
punpcklwd
inc
add
or
pop
shll
adc
shll
shrl
add
adc
push
arpl
mov
dec
xchg
or
cmc
pop
pop
roll
adc
addl
popf
jnp
and
dec
addr16
dec
out
es
in
das
xchg
jecxz
xchg
rcrb
icebp
push
aam
repz
jo
dec
call
pop
cltd
outsl
pop
mov
loope
outsl
xor
fldcw
xchg
push
fwait
imull
repz
stos
dec
hlt
stos
fnstenv
inc
xchg
stc
fildll
outsl
divb
outsl
add
aad
inc
pop
xor
int
dec
popl
xchg
repz
add
xchg
inc
cmpsl
or
aas
ret
cmpsl
aaa
mov
xor
xor
xlat
pop
jae
push
push
loope
in
js
dec
imul
pop
cmp
xchg
icebp
stos
sbb
add
cltd
scas
movl
js
xchg
sub
negl
icebp
cmc
insl
fwait
adc
adc
jecxz
mov
rorl
pop
adc
test
pop
dec
imul
inc
mov
ss
push
add
popa
aad
inc
pop
xor
lret
inc
int
mov
xchg
mov
push
lock
lds
sbb
sub
lret
aaa
jecxz
and
dec
pop
das
daa
push
mov
shrl
adc
es
scas
aam
xchg
ljmp
rcrb
xor
xchg
bswap
lcall
sbb
js
fwait
loope
sbb
test
mov
in
rorl
dec
fldcw
xor
xchg
icebp
mov
xor
cltd
aaa
scas
mull
or
mov
mull
sarl
fwait
mov
mov
prefetcht1
iret
xchg
iret
mov
adc
dec
out
lea
inc
adc
or
lret
inc
out
adc
pop
cwtl
or
and
int
aas
xchg
mov
adc
xor
insl
stos
inc
sbb
shlb
shll
dec
imul
leave
xor
push
or
xor
fidivrs
jge
dec
mov
adc
jnp
inc
xor
mov
adc
addl
pop
popf
cwtl
add
orl
or
pop
xchg
dec
push
in
orb
test
jecxz
adc
in
mov
loope
fwait
mov
cwtl
xor
js
fwait
inc
mov
or
and
cmp
xor
mov
xchg
pop
mov
add
inc
int
ret
pop
filds
ss
add
dec
loope
fwait
aad
aas
pop
jns
xchg
xor
pusha
dec
rcll
sbb
leave
xor
mov
mov
or
inc
lea
xor
add
inc
lahf
add
and
mov
ja
rolb
push
stos
ficoms
mov
or
fisubrs
fldl
sbb
out
das
cmp
jne
icebp
mov
mov
sti
ret
movsb
cwtl
inc
pop
popa
add
stos
filds
loope
out
adc
lahf
push
add
sub
test
xchg
test
cmc
stos
adc
cwtl
add
sbb
fistps
lds
lcall
js
lods
jg
call
jno
arpl
dec
jp
inc
xor
lds
sbb
and
xor
stos
pop
mov
mov
and
mov
mov
mov
int
mov
test
movsl
icebp
lods
mov
adc
loop
out
or
mov
test
pusha
adc
inc
hlt
fisubrs
mov
or
sub
fiadds
mov
rolb
or
jno
js
sbb
ljmp
rorl
mov
push
mov
xchg
and
rcrl
push
dec
push
loopne
test
xchg
xor
aad
adc
sbb
xchg
mov
adc
jo
cmp
or
mov
add
fwait
lds
cmpsw
shl
xlat
push
ret
mov
sti
add
outsl
test
ret
pop
jmp
inc
mov
in
gs
xchg
cmp
jnp
sub
push
mov
mov
pop
testl
dec
push
aad
call
push
ret
cmpb
loope
data16
xchg
roll
add
aam
mov
mov
sub
sbb
add
sub
fisttpl
inc
mov
push
std
fisubrs
cmp
xchg
sub
pop
dec
mov
xor
mov
and
iret
adc
mov
cmp
pop
addl
mov
outsl
xor
in
mov
int
xchg
aad
rclb
xor
xadd
push
mov
xor
adc
dec
cwtl
rcrb
mov
cmp
cmc
mov
pop
push
xor
out
aad
add
icebp
push
rorl
xchg
jp
jnp
mov
lods
insl
sti
iret
orl
shll
add
ja
outsw
jbe
fld
push
cmc
pop
dec
orb
stos
xchg
daa
lcall
push
add
mov
add
jmp
xchg
lds
in
rolb
push
out
dec
bound
fwait
pushf
in
sbb
icebp
jnp
sti
mov
aad
int
es
out
fisttps
cmpb
inc
daa
xchg
inc
int
push
in
xchg
je
and
es
mov
outsl
mov
ja
adc
add
data16
jg
mov
out
imul
cwtl
mov
mov
int3
push
mov
xchg
sub
ja
iret
sti
addb
aad
add
xor
xor
aam
xchg
repz
cmp
sbb
dec
dec
bound
ret
inc
pop
push
dec
jp
jg
inc
movsl
adc
sub
or
jmp
push
les
fisubs
bt
mov
in
mov
cmp
inc
jne
dec
xor
mov
int3
sub
lret
pop
je
insl
lret
inc
out
adc
fs
push
shrb
inc
cwtl
add
mov
push
int3
mov
pop
add
jmp
das
gs
sub
and
addr16
dec
outsl
add
push
xchg
jnp
xchg
test
or
test
sbb
mov
add
jge
daa
dec
mov
xchg
mov
push
dec
es
pushf
xorb
stos
xlat
ret
sbbb
out
push
mov
dec
das
std
mov
dec
std
and
imul
cmp
leave
loopne
inc
das
mov
inc
add
jp
scas
mov
fnsave
and
negl
movsb
cwtl
sub
jmp
push
out
sub
sub
mov
add
sbb
hlt
xlat
outsl
in
sbb
stc
test
mov
data16
cwtl
jecxz
xchg
add
xor
xchg
jmp
jmp
dec
xor
or
xor
adc
dec
adc
aaa
jns
push
pop
push
shll
shlb
aaa
cmp
add
and
lcall
cmpsl
sti
test
and
lcall
or
add
xchg
loope
es
inc
xchg
lcall
sub
inc
dec
push
push
xchg
sbb
rcrl
rorl
push
xchg
and
andl
mov
adc
adc
arpl
mov
mov
xor
mov
xor
insl
and
xchg
pop
and
xchg
sbbl
stc
jg
adc
inc
sti
andb
cmp
xor
int
sbb
imul
add
imul
pop
push
shrl
xor
mov
sbb
imul
mov
ljmp
ret
mov
fstps
fistpl
xor
add
inc
xchg
cmp
pop
sbb
add
fninit
cltd
xchg
mov
pushf
rorl
movsl
mov
mov
lcall
sbb
pusha
ret
pmaxub
mov
scas
sbb
div
shll
sti
out
add
sub
orl
add
push
xor
mov
xchg
jno
jo
jl
ss
add
pop
xor
movl
push
xor
popa
cmpsl
sbb
xorl
pop
leavew
cmp
dec
xor
xchg
sbb
leave
ss
sub
int
aam
insl
rcll
cmp
das
dec
jbe
dec
jno
fisubs
add
add
fadds
mov
dec
inc
outsl
push
mov
mov
loopne
fbstp
fsubrp
xor
jg
pusha
push
int3
incl
pop
fstpl
sbb
adc
lods
inc
popf
pop
xor
stos
pop
mov
dec
rcrb
ret
lods
cmp
sbb
dec
movl
jmp
jo
jno
jns
add
int
arpl
add
xchg
push
arpl
sub
adc
inc
cmp
mov
pop
inc
add
pop
int3
out
repz
lcall
add
mul
addr16
cmc
dec
repnz
fidivrs
cmp
mov
inc
adcb
and
pop
ret
cmp
sbb
cwtl
loope
daa
xor
sub
jmp
fisubs
imul
addr16
mov
test
inc
andb
pop
or
inc
movsb
loop
das
mov
push
xor
pop
inc
mov
adc
push
inc
xor
lcall
mov
popa
cmp
imul
inc
xchg
jecxz
sub
shrl
gs
push
xor
dec
fimuls
test
js
sub
mov
and
xor
push
pushf
stos
ja
cmp
mov
ret
lret
jo
or
jne
aam
add
sti
jg
test
add
xor
bound
sub
mov
mov
add
sbb
lods
adc
fwait
mov
andl
lds
inc
add
xor
rclb
lds
and
out
sub
and
inc
rol
imul
or
iret
or
inc
jecxz
fisubs
xchg
pop
inc
cmp
add
inc
out
dec
and
mov
mov
stc
sti
pop
dec
pop
int3
loopne
imul
cmp
test
shl
sub
pop
jp
sbb
mov
lods
sub
popfw
add
es
xchg
xchg
icebp
pop
les
add
insb
push
fisttps
or
or
mov
mov
cmp
adc
int3
xchg
ja
dec
hlt
cmp
adc
push
mov
js
popa
sbb
lret
aad
std
jp
and
sti
push
ret
jp
pop
int3
fwait
mov
es
test
fidivrs
andnps
cmpsl
es
add
sbb
das
and
xor
xor
push
sub
aaa
cwtl
add
pop
xor
xor
inc
daa
or
add
xchg
or
xor
aaa
cwtl
xor
bt
mov
fldenv
popa
inc
outsl
pop
push
out
xor
jno
or
cs
jg
sbb
jmp
or
lods
into
ret
inc
and
pop
aaa
add
cmp
rcll
inc
and
movsb
dec
cmpsl
fists
jno
sbbb
andl
and
ja
push
fisttpl
sub
fwait
mov
pop
shrl
int
pop
mov
sub
inc
icebp
sub
xorb
xor
or
cwtl
aam
ljmp
adc
add
sub
leave
jecxz
mov
adc
xor
sub
add
jne
adc
xor
push
das
dec
cmp
in
adc
xor
addr16
pushf
inc
mov
fwait
sarl
inc
or
int
jns
movsb
jp
xchg
sub
shlb
inc
or
test
jnp
sbb
cmp
mov
xchg
sar
mov
add
inc
call
bound
mov
hlt
orb
or
jecxz
fnsave
fwait
shrb
aad
xchg
mov
lcall
pop
mov
inc
pop
aad
pop
xchg
and
push
dec
and
int
rorl
or
xor
scas
sti
mov
int
leave
loop
or
outsl
adc
dec
nop
mov
lahf
and
jecxz
pop
inc
xchg
jno
rolb
xchg
test
movsb
adcl
adc
in
in
imul
pop
pop
or
pop
dec
pusha
add
lds
fwait
push
aas
movsl
and
cmp
push
divps
or
pop
add
movsb
push
test
ret
xchg
loop
out
and
cmp
imul
cwtl
add
setp
mov
in
inc
adc
dec
shrb
mov
and
pop
jno
pop
push
dec
push
inc
mov
cwtl
and
popf
scas
aaa
imul
xchg
or
mov
jno
fidivs
popf
xor
movsl
cmp
pop
push
dec
inc
mov
mov
inc
rolb
fs
rcll
xor
lret
jg
lea
xchg
mov
andl
aad
mov
pop
add
test
popf
and
sti
adc
add
sbb
inc
int3
xor
sbb
add
cmpsl
mov
jnp
mov
lcall
mov
inc
jne
xchg
loope
and
adc
aad
negl
idivl
sbb
int
xchg
cmc
sub
mov
nop
lods
sbb
pop
movsl
or
fiadds
stos
push
mov
jl
js
mov
add
test
loopne
repz
lea
jb
jnp
popf
jecxz
testl
into
mov
pop
xchg
xchg
inc
bound
xchg
mov
mov
int
out
mov
lcall
call
mov
stos
jne
roll
or
mov
int
inc
sub
adc
sub
icebp
fisubs
push
xor
xchg
lcall
data16
es
cmp
rolb
or
int
out
addr16
jne
jnp
andl
inc
adc
sbb
mov
or
fisubs
sti
adc
pop
push
add
and
test
loopne
push
loope
and
xchg
call
test
sub
mov
push
adc
dec
negl
das
es
add
data16
dec
sub
subl
lods
or
jmp
data16
and
xchg
mov
and
shrb
xor
xor
mov
outsl
sbb
cmp
inc
in
aas
xchg
add
sbb
jno
movsl
dec
fwait
inc
test
mov
shrl
cwtl
inc
lret
mov
loop
movsl
or
add
sub
hlt
popa
in
sbb
xchg
pop
push
mov
cwtl
xchg
mov
cmpsl
mov
addr16
cmp
pop
movl
test
pop
leave
arpl
and
les
dec
xor
dec
adc
jnp
add
shll
jne
xor
inc
xor
std
stos
pop
outsl
inc
pop
dec
stc
jge
negl
daa
mov
push
inc
xchg
arpl
lcall
adc
or
sub
sub
push
jns
or
iret
mov
xor
add
xor
ret
imul
add
sbb
adc
mov
and
in
xor
jb
lock
jmp
or
arpl
inc
jecxz
lock
mov
inc
int
repz
std
fldenv
mov
sub
aad
mov
roll
inc
les
or
sbb
in
cmp
mov
stos
scas
addr16
mov
mov
inc
or
dec
and
inc
int
xor
xchg
cmpsl
sbb
insl
xor
push
xchg
mov
dec
js
add
mov
nop
lcall
lcall
push
lock
push
outsl
adc
adc
inc
scas
inc
scas
push
xchg
ljmp
int
aas
imul
pusha
pop
ret
stc
mov
pop
xor
add
xchg
bound
arpl
mov
xor
adc
and
jg
dec
mov
push
test
andb
cmp
xchg
push
in
pop
mov
dec
int3
adc
adc
or
dec
sub
pop
lcall
add
add
cmc
inc
orl
add
fstpl
fninit
mov
and
add
stos
or
mov
shll
pop
mov
inc
aaa
iret
sbb
insb
push
jg
jmp
push
jne
std
rcrl
sub
arpl
lret
mov
lds
xor
outsl
orl
notl
pop
sbb
icebp
andb
dec
xor
mov
stc
test
out
das
es
icebp
xchg
xor
ret
cmp
push
cmpsl
loopne
and
add
mov
lds
jnp
add
mov
mov
stos
dec
call
push
fnstsw
xor
sbb
adc
gs
inc
fisubs
or
data16
mov
or
arpl
mov
popf
ljmp
add
add
lahf
rcrb
adc
arpl
mov
pop
dec
add
xchg
xchg
jp
sub
xor
push
outsl
negb
sbb
jge
add
pop
mov
movsl
fistps
jg
lds
add
lock
sub
and
shll
mov
filds
fwait
xor
pop
jnp
xchg
mov
arpl
icebp
andb
jno
add
xchg
repz
adc
jp
test
mov
inc
sub
imul
mov
int3
jp
xlat
aaa
aas
int3
call
mov
add
pop
mov
loope
out
cmp
sbb
cmc
daa
inc
stos
or
mov
int
orl
mov
xor
rcr
add
inc
push
int3
sbb
cltd
outsl
and
test
and
xlat
lods
cmc
aas
xchg
xchg
inc
dec
loopne
cltd
rdpmc
fidivrs
sbb
jne
sbb
or
mov
lcall
call
mov
sub
push
fldt
or
scas
sbb
pusha
mulb
cltd
ret
flds
stos
nop
sub
xor
cmp
ficomps
adc
xor
orl
fists
adc
xchg
jmp
andb
xchg
shll
inc
sti
dec
shrl
dec
pop
ret
inc
arpl
popf
dec
loopne
popa
repz
data16
mov
ljmp
or
xchg
or
pop
push
sbb
push
add
xor
fisubs
dec
xchg
pop
rcll
add
ret
dec
mov
mov
push
lret
mov
das
ja
adc
cwtl
dec
xchg
add
push
jne
stos
inc
popf
xchg
or
data16
es
sti
icebp
int
lds
adc
adc
and
mov
add
jnp
int
xor
loope
mov
aam
mov
mov
add
es
adc
int
data16
loope
jmp
mov
data16
inc
mov
cmp
or
push
test
xor
dec
repnz
adc
push
int3
dec
add
inc
pushf
es
and
sbb
adc
adc
add
dec
hlt
bound
adc
cwtl
sbb
imull
xchg
jno
xor
mov
xor
aas
jge
xor
aaa
mov
or
dec
stos
or
test
ffree
and
out
xor
xchg
jmp
xor
movsb
flds
out
aam
mov
lds
loop
js
cmp
xchg
mov
adc
inc
test
adc
mov
push
dec
popf
inc
icebp
sbb
push
xor
sub
xor
aad
mov
dec
bound
sbbl
add
test
mov
adc
pusha
cmpsl
add
xor
mov
inc
push
xor
xor
push
adc
popa
fwait
daa
inc
mov
aad
scas
mull
pop
inc
mov
test
or
or
inc
lds
mov
mov
popf
jns
dec
push
xor
scas
add
data16
sub
icebp
es
dec
popf
movsb
or
mov
mov
pop
orb
addl
hlt
es
popa
movsl
or
push
aad
dec
mov
cmp
repz
xorb
add
mov
and
add
inc
xor
or
xor
lods
push
mov
push
std
inc
mov
add
test
add
jecxz
mov
and
mov
fs
cwtl
les
mov
dec
mov
mov
mov
sbb
xchg
shll
dec
jbe
je
lret
and
cmp
sbb
mov
jge
dec
jp
data16
and
jecxz
inc
negl
out
add
call
mov
jae
and
xor
mov
sbb
pop
test
shr
repz
aaa
dec
pusha
ss
std
mov
cmp
mov
pop
out
xor
push
pop
mov
sub
std
scas
and
lods
ljmp
lret
and
lahf
jne
mov
pop
jns
es
outsl
and
pop
dec
das
adc
xchg
mov
jns
pop
push
aad
jecxz
pop
cmp
ret
addb
addr16
push
popf
bound
mov
movsl
push
push
mov
shll
and
jnp
dec
cwtl
adc
jnp
shrl
or
add
cmpsl
inc
aaa
test
inc
xchg
es
icebp
add
daa
mov
push
mov
xchg
lcall
pop
push
fbstp
das
pusha
push
int
test
inc
xchg
int
or
inc
push
pusha
sbb
aaa
xor
mov
daa
js
pop
mov
xor
into
add
xor
mov
aad
pop
push
scas
push
data16
add
dec
push
adc
inc
stos
addl
aad
daa
xor
inc
das
inc
cwtl
xor
or
je
iret
adc
push
pop
xor
or
fwait
mov
mov
mov
outsl
out
and
add
dec
adc
lea
mov
shl
ret
out
addl
dec
ret
lahf
incl
jne
jp
push
xor
scas
imul
mov
or
cmpb
pop
adc
inc
mov
das
scas
push
xor
push
out
popf
outsb
add
mov
in
add
adc
xor
inc
shrl
inc
dec
sub
pop
mov
mov
push
sarb
pop
jbe
mov
jmp
sbb
dec
pop
sbbb
and
inc
dec
lcall
js
outsl
jmp
fiadds
jno
dec
push
test
dec
lcall
inc
orb
lods
jno
rorb
xor
cmpsl
scas
es
mov
addr16
inc
rorl
xor
pop
or
insb
adc
fisubs
outsl
ss
xchg
test
mov
jno
and
cmp
push
pop
sti
frstor
int
add
addl
std
gs
lods
js
fstps
iret
mov
shrl
lods
cmp
dec
adc
cmp
fimuls
mov
inc
int3
push
jg
dec
cmp
xor
mov
push
xor
cmpsl
pop
mov
pop
popa
aas
pushl
test
popa
adc
add
inc
mov
inc
andb
or
mov
sub
inc
mov
popf
xor
push
add
cld
add
outsl
ja
pop
mov
mov
adc
pop
dec
adc
dec
add
mov
test
jae
xor
ret
inc
scas
aaa
push
outsl
or
sub
outsl
sarl
add
inc
out
sub
sbb
dec
leave
push
leave
mov
push
jae
dec
ljmp
adc
and
pop
sub
dec
push
popl
inc
dec
lcall
mov
dec
inc
inc
pop
das
and
xor
pusha
movsl
inc
fwait
xor
dec
xor
dec
inc
mov
and
orb
jne
and
fstpt
xor
es
div
fwait
push
xor
lahf
jae
or
push
rcrb
roll
arpl
pop
dec
adc
or
mov
add
repz
jns
fwait
xor
jmp
popf
test
icebp
addl
rcll
inc
test
fldt
push
sub
mov
sbb
adc
inc
xchg
dec
add
popa
arpl
jnp
mov
loop
inc
mov
test
icebp
xchg
and
ret
addr16
cwtl
xor
cwtl
cmp
or
sub
jno
add
jnp
cwtl
add
dec
int
xor
add
jne
sbb
je
inc
pop
sub
adc
fcmovnu
loope
out
int
or
int
xor
or
xor
add
dec
mov
in
fidivrs
mov
cmp
addl
push
and
adc
cmpsl
flds
sbb
cmpsl
mov
mov
cmp
vphsubbw
xor
mov
xor
loope
in
adc
inc
or
dec
fwait
in
xchg
jge
jns
mov
pop
mov
dec
stos
inc
arpl
sub
pop
adc
popf
and
and
adc
jp
mov
fwait
shl
sti
inc
adc
mull
mov
outsl
pop
shl
adc
int
int
fisubrs
add
cmpsl
sub
js
or
cmp
jno
rorl
push
int
daa
and
cltd
xor
std
sbb
jp
xchg
xchg
xor
mov
aad
xor
iret
xchg
imul
mov
and
leave
cwtl
icebp
data16
out
push
cmp
bndldx
lret
inc
stos
and
xchg
jp
jmp
data16
dec
ja
adc
test
mov
xor
dec
dec
addr16
arpl
xor
push
andl
test
push
xor
std
mov
push
xor
adc
imul
sbb
pop
js
xchg
icebp
mov
leave
test
add
mov
flds
lds
xor
sub
cltd
mov
fwait
shrb
sbb
shll
pop
shl
int3
into
push
popf
imul
push
inc
mov
pusha
add
or
es
xor
js
mov
aam
sbb
lods
push
push
fisttpl
loop
inc
mov
int
subl
add
and
adc
xor
or
loopne
testl
call
fstl
ret
dec
xor
test
and
adc
aaa
or
mov
shl
lds
sbb
vpunpcklqdq
scas
pop
mov
popf
cmpsl
inc
fnstsw
mov
sbb
mov
xor
sbb
adc
and
into
add
sarl
pop
push
sub
xchg
dec
cwtl
add
fnstsw
test
fldenv
or
popa
jae
imul
movsl
jecxz
out
negl
mov
mov
push
inc
sbbb
mov
incl
push
xchg
xor
int
jmp
or
pop
and
int3
stos
std
popf
adc
scas
mov
in
inc
cmc
fisubrs
or
mov
or
push
or
mov
lods
pusha
push
outsl
sti
popf
out
dec
call
inc
pop
add
rcrb
xor
aas
out
sub
jns
or
out
lahf
xchg
icebp
cwtl
xor
popa
cmp
xchg
or
and
inc
xchg
imul
mov
xchg
data16
fnstenv
sti
or
xor
mov
xchg
test
cmpsl
data16
cmp
icebp
leave
int
pop
hlt
addr16
dec
pusha
push
sti
aas
xor
hlt
pop
xor
mov
or
pop
add
fimuls
icebp
xchg
popf
hlt
xor
inc
sub
icebp
inc
adc
shll
xchg
sbb
or
pop
inc
fwait
dec
push
roll
es
dec
test
gs
add
bound
in
imul
filds
cmpsl
stc
sbb
or
and
lds
je
mov
pushf
add
jae
inc
sarl
leave
lcall
and
xchg
adc
fwait
aam
push
cmp
sub
jns
xchg
js
cmp
cmc
mov
adc
js
outsl
or
xchg
mov
push
pop
or
mov
arpl
cmp
popa
cmp
test
and
push
daa
sub
cwtl
lahf
cmp
arpl
fwait
xor
inc
sub
add
sbb
jno
lret
ljmp
lcall
xor
mov
shrb
subl
scas
pusha
dec
sbb
js
jp
mov
adc
movsb
ret
cmp
xchg
sub
or
rcr
cwtl
xor
gs
data16
aas
inc
push
adc
xlat
sub
sbb
mov
jge
or
roll
adc
lcall
in
push
dec
fstps
shll
loope
sarl
lock
add
test
lds
js
sbb
xchg
add
fnstenv
popa
sbb
loop
popf
int3
js
adcb
cwtl
int
push
or
shrb
aad
shll
jnp
imul
mov
xor
adc
test
mov
xor
fisttpl
inc
xor
sub
mov
jae
leave
and
imul
mov
stos
inc
data16
std
mov
mov
ret
sub
jge
jnp
push
mov
int3
lcall
lcall
or
call
xchg
ja
lods
or
lret
mov
mov
mov
jg
xor
mov
insl
shll
xor
and
and
ret
xrelease
cmc
pop
mov
arpl
mov
hlt
les
xchg
data16
cmovae
ror
jp
dec
xchg
add
imul
mov
in
xchg
sub
and
bound
sbbl
leave
sbb
aas
test
rclb
sbb
cmp
mov
pop
jmp
sbb
xchg
jp
xchg
hlt
lretw
sbbb
es
lret
int
add
pop
mov
fwait
jge
aas
stc
mov
xchg
cmpsl
xor
orb
sbb
or
popa
inc
xchg
cmp
jecxz
and
pop
fld
lods
pop
outsl
iret
lcall
mov
add
push
dec
imul
shll
mov
rcll
jae
pop
int
adc
movsb
pop
jecxz
stos
adc
icebp
push
xchg
lods
test
icebp
stc
dec
jp
mov
jecxz
shl
xchg
jno
pop
inc
xchg
shlb
cmp
out
inc
inc
or
xchg
test
movsl
mov
and
jecxz
dec
fwait
add
add
sub
call
mov
push
xchg
mov
pop
or
arpl
lds
adcl
imul
adc
pop
and
push
push
mov
xchg
mov
add
rcrl
mov
and
xor
xchg
lods
and
adc
pop
hlt
pop
xor
xor
xchg
mov
cmpl
mov
dec
cwtl
xor
mov
leave
xor
cmc
fiadds
inc
daa
pop
add
add
pop
inc
roll
mov
insl
popf
dec
mov
test
xchg
ficoms
mov
pop
out
jno
out
push
dec
das
lods
mov
mov
cmc
push
add
jmp
xor
fwait
push
aaa
jecxz
arpl
add
push
add
jecxz
sbb
in
fisubrs
ss
pop
arpl
ja
sbb
cmp
inc
xor
push
xchg
dec
or
and
xor
push
mov
inc
dec
stc
lcall
push
xor
test
out
adcb
pop
les
add
sub
ja
xorl
push
xchg
cltd
xor
lcall
add
gs
mov
and
inc
dec
jp
sbb
jecxz
cli
ficomps
xchg
jp
sahf
lods
mov
xor
or
xor
add
dec
sub
inc
out
pop
adc
mov
test
sbbb
cmp
aaa
sbb
data16
out
mov
aad
or
inc
stos
pop
arpl
fwait
sti
outsl
or
inc
popf
popf
ret
lds
push
adc
ja
test
cltd
or
mov
pop
xchg
xor
dec
idivl
inc
out
pop
fwait
xor
xor
or
xor
adc
popf
jno
addl
lods
movsb
cwtl
adc
pop
mov
dec
mov
push
and
push
inc
loopne
inc
test
xlat
xor
adc
fstpl
aam
sub
into
push
xor
pop
roll
sub
mov
jne
lea
pop
jecxz
js
lods
dec
addr16
lcall
fisubs
imul
test
xor
jne
mov
mov
ljmp
jecxz
inc
add
inc
mov
andl
sbb
lahf
pop
xchg
push
rol
iret
or
jnp
inc
add
inc
adc
adc
movsb
mov
gs
cwtl
push
sub
test
push
pop
add
xchg
jns
repnz
movb
xchg
xor
pop
insl
out
adc
push
lahf
popf
js
lcall
jae
test
in
mov
adc
aad
inc
out
xor
mov
or
cmp
jmp
lcall
fisubs
adcb
out
add
lock
lea
jns
pop
adc
mov
aad
xchg
sub
jecxz
xchg
pop
mov
and
imul
lcall
into
lods
cmp
loop
xchg
call
sbb
mov
dec
mov
inc
ja
mov
mov
int
pop
sti
insl
scas
mov
imul
sub
ljmp
cwtl
jl
xor
adc
push
emms
outsl
adc
mov
pop
xchg
arpl
add
cmp
rorl
mov
aas
xchg
das
cwtl
xor
or
adc
xchg
out
mov
dec
adc
cmc
cltd
sbb
fimuls
cmpsb
popa
push
movsl
inc
ljmp
test
or
in
mov
jge
jp
or
inc
stos
jecxz
add
and
and
ret
and
push
rcrl
push
mov
xchg
push
adc
mov
jne
adc
lods
test
sbb
daa
std
sub
jge
shll
adc
arpl
popa
jecxz
adc
jns
jg
outsl
adc
test
in
jnp
lds
push
xor
test
pop
xor
stc
cmp
sub
or
iret
lret
test
psubq
cmp
mov
xchg
popa
or
cmp
or
rorl
inc
xor
inc
inc
pop
cmc
ficomps
sub
stc
loope
cmp
inc
das
jmp
push
lods
cwtl
shlb
rol
popf
xor
das
xor
popa
dec
das
fisttpll
cmp
or
lret
add
inc
loope
add
loope
adc
fwait
rorl
repz
loop
mov
in
push
jge
imul
out
scas
data16
shlb
fisubs
or
mov
adc
shll
dec
push
mov
shrb
outsl
inc
xchg
sbbb
cmp
lret
fbld
adc
sub
add
aad
test
jge
or
push
xor
int
push
test
sbb
ret
inc
add
movsl
popa
or
movsb
push
fisttpl
das
push
xor
add
jnp
iret
mov
push
or
mov
pop
int3
xorb
leave
cltd
or
aaa
orl
shlb
outsl
or
pushf
filds
adc
insl
leave
daa
rolb
data16
adcb
cmp
cmp
cmpsl
jp
cmpsl
outsl
cmp
pop
and
sbb
inc
xor
adc
jae
sti
jp
mov
xor
xchg
fwait
aaa
cmp
or
mov
es
cmp
or
xchg
xor
fiadds
mov
pushf
adc
movsb
dec
dec
lret
jns
xchg
inc
and
es
add
dec
xchg
inc
shll
xor
dec
js
roll
xor
mov
loope
jnp
mov
inc
cwtl
les
aad
and
sub
sub
mov
adc
bound
mov
add
add
xor
cmp
mov
inc
cmp
lods
or
xchg
iret
add
cmp
pop
mov
xchg
outsl
or
xchg
dec
pop
or
dec
js
jne
sub
xor
pop
inc
rorb
adc
es
xchg
xchg
stos
outsl
mov
xor
mov
xor
cmp
rolb
push
cltd
and
daa
inc
add
lods
add
addl
subl
aaa
cmpl
das
repz
push
cmp
xor
and
lds
movsb
jg
icebp
es
dec
icebp
mov
dec
mov
mov
mov
cmpsl
pusha
scas
sti
shrb
ret
repz
cwtl
ror
inc
or
xchg
idiv
in
jp
lcall
cwtl
xor
add
andb
int
add
cwtl
xor
dec
mov
test
orl
and
add
xor
dec
stc
sbb
cmp
daa
aam
fisttpll
mov
inc
rcrl
push
inc
xchg
fbld
dec
mov
loope
andb
xor
xor
inc
xor
hlt
loope
inc
mov
mov
leave
cwtl
popa
cmp
add
lods
cwtl
adc
xlat
and
cmp
cmp
mov
seta
mov
cmpsl
push
ja
jp
lcall
call
pop
fsubrp
popf
out
popl
mov
xor
inc
imul
push
xor
mov
mov
insl
mov
mov
pop
es
push
sqrtps
rorl
test
icebp
push
mov
filds
mov
or
push
or
xor
js
lods
dec
fwait
xchg
xchg
fwait
push
xchg
inc
daa
adc
in
es
pop
inc
mov
lods
iret
sbb
sbb
dec
push
xchg
cmovne
popa
inc
dec
sub
mov
scas
pop
aam
mov
push
mov
xor
popf
int3
cmp
lcall
orl
fwait
add
jmp
imul
mov
add
insl
rolb
jae
je
jno
xor
les
pop
or
pop
shll
push
inc
dec
add
fidivrs
gs
pop
shll
outsl
daa
aaa
sbb
xchg
pop
imul
leave
gs
push
cmp
add
inc
mov
fsts
mov
pop
dec
jnp
mov
or
inc
lds
inc
pop
push
lock
popf
and
add
imul
popa
mov
fwait
cmc
fwait
ja
es
cmp
lret
lods
inc
outsl
and
lds
lcall
pusha
mov
xchg
mov
andb
int3
das
vmread
and
mov
bound
das
xchg
mov
mov
xor
push
aad
xchg
outsl
inc
mov
push
and
call
or
les
sti
and
daa
push
or
pop
pop
or
das
ret
adc
add
add
fucomi
jnp
xor
test
ja
xor
data16
aaa
add
int
sti
push
dec
dec
push
inc
pusha
pop
ret
inc
xor
imul
jecxz
or
aaa
or
sub
mov
push
aas
and
iret
aaa
pop
lds
sbb
or
mov
push
stc
xlat
add
xor
and
fsubp
int
pop
or
outsl
push
xchg
frstor
icebp
adc
fwait
push
xchg
mov
mov
hlt
cwtl
push
nop
sbb
or
add
push
imul
pop
adc
mov
popa
lahf
aaa
repz
sbb
call
ja
out
dec
or
out
roll
call
inc
add
push
lret
jge
imul
adc
xor
adc
sti
mov
cmc
xorl
dec
popf
imul
push
push
out
inc
cltd
aaa
and
jge
inc
repz
push
push
mov
xor
cmp
and
inc
mov
popa
lea
in
jp
mov
test
xchg
stos
lahf
fwait
adc
xchg
jnp
cmp
popa
sbb
lret
add
cmc
jg
push
add
imul
adc
rorb
int3
bound
jnp
roll
inc
jg
call
sub
add
push
xchg
mov
jge
sub
push
mov
and
pusha
inc
divl
icebp
push
xor
es
add
scas
movsb
or
test
aad
fwait
lahf
cmp
cmpsb
or
xor
bound
int3
inc
cmp
fwait
dec
jns
repz
xor
es
sbb
xchg
add
fwait
adc
xlat
inc
scas
and
add
idivl
shll
cmp
push
jecxz
xor
inc
stos
ja
int
lods
mov
mov
sbb
lds
sti
out
jmp
ret
mov
xchg
movl
add
aaa
sbb
mov
adc
pop
les
lods
es
pop
cmp
cmp
es
push
xchg
pop
xor
adc
push
out
and
jnp
jecxz
shlb
sub
mov
popa
icebp
jnp
xchg
add
fwait
xlat
add
insb
sbbl
pop
adc
ret
dec
pusha
push
pushf
pusha
daa
rcll
ss
pusha
ret
pop
lcall
push
dec
cmp
push
out
mov
inc
inc
daa
pusha
mov
pop
gs
test
mov
mov
jae
mov
test
outsl
pop
cmp
jo
insl
loope
sub
or
lcall
lock
sub
mov
test
fs
push
xor
imul
int
mov
inc
add
or
call
inc
cmp
int
iret
jnp
sbb
mov
sbb
mov
rolb
fs
fldl
jae
add
jno
nop
test
push
outsl
ret
std
mov
lea
xor
fiadds
sbb
les
xor
gs
fwait
push
xor
shrl
pop
shlb
nop
add
adc
cli
rolb
sbb
mov
ja
addr16
pop
adc
add
xor
std
pop
outsl
inc
mov
jae
push
mov
rcll
aas
cmp
std
leave
xchg
add
inc
arpl
iret
mov
add
dec
inc
roll
addb
jecxz
add
inc
sbb
adc
mov
out
push
mov
xor
mov
scas
mov
add
inc
mov
and
das
fldenv
in
sub
push
adc
daa
inc
roll
scas
unpckhps
aad
mov
call
dec
shrb
mov
movsb
and
inc
adc
jecxz
aad
sub
stos
aaa
and
cmp
pop
in
sbb
int
jmp
data16
xchg
sub
cmc
mov
jae
roll
lcall
push
xchg
push
loope
add
int
andb
xor
add
aas
mov
pop
push
inc
cmc
test
inc
test
mov
mov
adc
dec
sbb
mov
adc
mov
rcrb
sti
aaa
lcall
mov
sub
xorl
int3
test
arpl
orb
sub
fidivs
xchg
and
int
sub
dec
sub
es
sbb
mov
and
mov
dec
pusha
inc
xor
rorl
out
or
mov
or
imul
shlb
insl
push
xor
aaa
inc
xor
jae
sbb
mov
insl
mov
jns
repnz
inc
rcrl
add
adc
les
lahf
pop
xor
add
outsl
mov
push
add
nop
mov
test
and
leave
call
and
sbbb
aaa
add
dec
daa
xor
test
call
add
inc
xchg
jne
aaa
or
insb
ret
mov
jnp
mov
push
xor
sbb
hlt
push
ja
insl
mov
dec
mov
cmc
data16
add
lcall
add
push
out
popf
fbld
jno
jmp
xchg
movnti
xor
inc
push
jne
test
fwait
popf
and
jne
sub
xchg
inc
dec
movb
xlat
inc
cmpsl
inc
or
adc
mov
jnp
and
or
push
hlt
sarl
jecxz
les
ret
ja
rorb
cmpsl
mov
imul
sub
and
xor
es
lods
rolb
mov
sub
pusha
shlb
pop
popa
push
aam
xchg
cmovnp
fiadds
dec
pop
push
inc
lds
dec
ret
inc
pop
jg
and
sub
or
xchg
adc
mov
jae
sub
sub
mov
arpl
icebp
push
pop
pop
iret
das
test
sti
mov
cs
xor
int
jns
neg
test
stos
movsl
mov
int
push
ret
mov
xchg
in
addl
fwait
mov
jmp
push
xchg
pop
or
mov
hlt
pop
push
xor
xor
push
arpl
test
inc
add
add
lret
roll
dec
xor
pop
add
inc
push
outsl
push
flds
cwtl
adc
pusha
dec
rcrl
inc
adc
mov
add
nop
int
movsb
outsl
inc
xchg
lds
jae
jmp
or
lcall
xchg
mov
lahf
inc
inc
sbb
add
xor
xor
xor
inc
and
sbb
insl
or
mov
add
es
outsl
shr
mov
mov
pop
adc
imul
jno
sub
fwait
inc
mov
cltd
push
xor
xor
push
add
pop
test
loope
daa
push
lret
add
outsl
sbb
or
outsl
push
dec
cwtl
lret
imul
movq
fnstcw
aaa
mov
addb
fs
fistpll
xor
fwait
and
dec
xchg
mov
ret
cmp
in
jae
push
out
int
and
cmp
fiadds
es
adcb
push
or
movb
cltd
insl
bound
fiadds
sbb
pop
fwait
or
sub
pop
jp
xor
shrb
pop
adc
xor
cmp
aad
add
lds
add
add
mov
xor
bound
imul
xor
sub
icebp
pop
icebp
add
sbb
inc
push
and
aaa
imul
sbb
add
std
inc
push
sti
push
mov
adc
push
pop
pop
add
adc
sbb
filds
add
ja
fs
outsl
add
jne
sub
add
jecxz
lahf
inc
dec
mov
fldcw
imul
jnp
adc
xchg
divl
xor
mov
mov
daa
cmpl
pushl
or
subl
dec
jns
sbb
or
mov
loope
xor
cmp
add
in
inc
imul
outsl
pop
inc
cmp
or
loop
inc
pop
xchg
cltd
mov
add
jne
dec
dec
push
or
notl
jecxz
pop
ljmp
inc
jnp
pop
xor
gs
mov
sarb
rorb
pop
mov
or
fwait
push
icebp
data16
iret
imul
add
rolb
lahf
in
mov
sbbl
sub
addl
lret
aaa
adc
ret
fsts
shrb
inc
fisttpl
sbb
insl
cmp
stos
pop
iret
inc
ret
ljmp
dec
pop
int
dec
cmp
cmp
lods
xor
push
push
or
or
test
lock
and
scas
fldenv
ret
add
cmp
mov
lcall
pusha
mov
cwtl
xchg
jne
popa
jg
aad
or
in
xchg
icebp
or
fldenv
sbb
mov
xor
and
xor
lahf
rcrl
add
lods
fnstsw
dec
cmp
push
fnstenv
movsb
mov
add
inc
inc
mov
sub
push
xor
pop
jnp
mov
inc
leave
pusha
mov
imul
mov
movsb
dec
xor
int3
cmp
test
shlb
xlat
shll
cmovae
lds
gs
div
int3
pushf
push
cmp
jnp
pop
dec
stos
es
loop
stos
xchg
int
aas
stos
jmp
inc
xor
add
add
dec
mov
inc
xlat
test
and
add
cwtl
je
inc
sbb
out
aaa
dec
add
les
mov
pop
lods
xchg
add
jmp
add
pusha
aad
sub
lods
mov
add
xchg
mov
pop
aaa
lea
les
shlb
xor
bound
out
inc
dec
outsl
testb
cmp
push
and
cmp
jne
lds
push
jge
fwait
sbb
addr16
testl
loop
adc
xlat
add
adc
and
int
or
dec
movsb
ljmp
xor
and
pop
or
shll
movsb
pop
loope
aaa
push
int3
push
icebp
jge
ljmp
mov
cmp
push
int3
jg
jecxz
inc
mov
mov
xchg
pusha
mov
aas
lret
popf
es
sub
aad
fldl
dec
dec
xor
xor
stos
ja
idivl
and
adc
aad
lea
or
stos
ficoms
sbb
inc
roll
cmpsl
jno
or
test
push
fstl
inc
mov
shrl
xor
xor
xchg
subl
push
icebp
jg
imul
int3
popf
pop
dec
inc
mov
cmp
icebp
lcall
pop
xor
push
mov
push
addr16
mov
push
bsr
aad
dec
icebp
cwtl
lock
adc
out
in
nop
sub
xor
mov
setl
dec
js
and
adc
adc
inc
jo
cmpl
adc
dec
lcall
adc
aaa
xlat
daa
xor
js
loopne
xchg
lret
lahf
mov
xchg
pop
and
sbb
adc
fldenv
sub
orb
fbstp
push
jg
add
mov
outsl
push
push
or
rclb
adc
lahf
fisttpl
add
inc
jns
pop
js
cwtl
sarl
sub
icebp
pop
adc
lea
xchg
es
es
xchg
es
mov
and
xchg
and
xchg
xor
rep
out
sbb
lock
sbb
mov
aaa
mov
sub
adc
xchg
imul
add
rcrl
xchg
pop
lret
sbb
mov
dec
icebp
sbb
in
add
sti
mov
push
mov
dec
mov
inc
xor
icebp
mov
movsl
data16
cmpsl
idivl
xor
jnp
pop
daa
mov
inc
mov
inc
cvtdq2ps
xor
xchg
orb
add
shl
mov
das
sub
sbbb
data16
adc
add
andb
mov
and
xor
stos
or
add
or
xor
mov
popa
mov
xchg
in
ret
adc
lock
cmp
lods
or
dec
fisubrs
adc
stc
push
inc
adc
xchg
into
jp
xchg
inc
stos
inc
pop
lcall
dec
lcall
ret
aas
iret
arpl
jo
xchg
loope
pop
jne
and
xchg
inc
or
xor
fs
mov
push
inc
cmc
es
xchg
push
cmc
push
mov
int
sti
cmpsl
or
sbb
lods
js
icebp
ss
push
adc
scas
or
dec
int3
jge
sub
inc
and
jne
pusha
inc
out
pop
imul
push
or
sbb
sbb
mov
lds
es
add
adc
xor
imul
adc
or
mov
orl
in
inc
jne
push
popa
add
or
dec
dec
in
testl
stos
sbb
sub
xchg
cltd
and
jnp
xor
jp
cmp
dec
cwtl
les
hlt
push
mov
cmp
push
jge
dec
cwtl
push
adc
lods
data16
dec
or
data16
jge
pop
aas
negl
mov
mov
dec
cwtl
add
ficomps
xor
mov
jae
cmp
cmp
fnstenv
xor
aaa
mov
push
xor
pop
dec
sti
dec
ret
andl
int
mov
xor
xor
inc
out
int
aad
aaa
nop
sub
xchg
jne
jge
sbb
fucomi
dec
mov
inc
xchg
jmp
jmp
and
xor
es
dec
inc
jge
adc
dec
rorb
xor
outsl
push
int3
test
xor
xchg
push
das
jp
insl
out
inc
push
lock
mov
pusha
inc
outsl
mov
fucomip
xor
inc
das
jns
adc
cmp
fwait
cmc
data16
adc
jmp
stos
fldenv
lsl
mov
xchg
xor
jmp
mov
sbb
push
xor
xchg
fistpll
xchg
inc
xchg
add
data16
test
stos
cwtl
sbb
xlat
insb
and
ret
dec
pop
icebp
les
pop
sbb
and
inc
xor
int3
pop
and
mov
and
xor
mov
gs
mov
popa
shll
xor
cmp
aaa
xchg
dec
mov
scas
sbb
es
andl
ss
aad
mov
dec
dec
mov
lock
jns
pop
mov
out
xor
xchg
mov
arpl
les
in
imul
loope
sub
sti
popf
fisttpll
add
sarl
mov
adc
aaa
inc
mov
dec
or
cltd
mov
shlb
js
leave
xor
lock
push
arpl
dec
pushf
mov
adc
aaa
or
fwait
es
inc
int3
data16
cmp
adc
and
data16
pusha
aad
movsb
sbb
and
sub
cmp
adc
ss
dec
jne
dec
pop
imul
dec
leave
ljmp
imul
lods
adc
fs
test
in
aaa
adc
in
mov
aaa
mov
push
adc
mov
or
arpl
pop
mov
stc
fwait
jp
sbb
fildl
mov
aaa
mov
int
inc
and
es
add
push
and
push
and
lret
pop
in
fwait
mov
int
jecxz
xchg
mov
xor
add
cmp
lret
shl
mov
cmp
aaa
cmp
jno
dec
sub
pusha
push
cmc
xchg
dec
dec
mov
testb
movsb
or
and
adc
dec
jmp
adc
jecxz
gs
lock
or
fisttpl
add
add
xor
dec
cltd
adc
and
xchg
cmova
adc
decl
subb
add
pop
xor
stos
mov
xchg
add
in
add
push
loope
insl
test
jmp
or
std
xor
sbb
xor
or
mov
mov
adc
xor
push
popa
mov
cwtl
hlt
adc
dec
sub
mov
es
sbb
xor
fisubs
test
add
mov
mov
loope
jnp
pusha
shrb
adc
fidivs
adc
test
sbb
cmp
data16
sub
cmp
add
lret
mov
jmp
int3
addr16
js
xchg
mov
test
adc
mov
add
fldl
or
lcall
sbb
mov
mov
sbb
mov
xorl
ja
jecxz
and
push
out
aas
or
xor
mov
pop
jae
in
dec
cmp
rcrl
push
and
pop
xor
push
insb
ret
cltd
stc
cmp
or
inc
les
and
mov
in
shll
es
es
aaa
lret
outsl
inc
adc
add
sbb
xchg
adc
and
aad
xorl
insb
movb
xchg
jns
lcall
insl
sub
add
jmp
jbe
jnp
pop
movsl
sbb
nop
scas
mov
adc
cwtl
aam
and
inc
aas
test
sbb
mov
pop
int3
bound
gs
es
in
inc
addr16
jmp
sbb
dec
mov
jecxz
pop
fwait
mov
cmp
sub
aad
outsl
pop
push
mov
cmpsl
lcall
mov
pop
mov
fisubs
les
fwait
push
push
add
mov
or
pop
movsl
shll
mov
aad
popa
shlb
sub
loope
fwait
je
xor
test
pop
mov
bound
ficomps
out
bound
cmp
sub
popa
test
or
mov
inc
push
xor
inc
mov
int
jmp
das
rcrl
add
push
movsb
xchg
lahf
mov
shll
ret
inc
fists
mov
push
pop
scas
ret
sar
dec
shrb
sub
mov
outsl
cmpl
cmp
xchg
sub
mov
ret
add
ljmp
push
xchg
adc
test
aam
xor
pop
xchg
rolb
icebp
pop
pop
and
or
xchg
mov
in
inc
adc
scas
pop
inc
push
std
xor
pop
add
movsb
aaa
imul
xor
fstps
sub
cmpsl
mov
inc
shll
pop
mov
pusha
and
mov
cmp
lods
mov
bound
stc
leave
loopne
add
push
xor
adc
adc
testb
dec
lds
and
pop
lret
sbb
fwait
inc
icebp
jecxz
sbb
mov
dec
les
sbb
xchg
pop
pusha
lods
mov
mov
xchg
ljmp
and
add
ret
rcr
jnp
es
xor
xchg
jne
fldenv
jp
cltd
xor
and
xor
das
push
mov
sub
dec
frstor
lods
cwtl
dec
xchg
scas
or
jo
filds
cmp
shrl
frstor
sbb
xor
pop
gs
mov
pop
leave
inc
out
int
cltd
lods
xorl
rolb
imul
dec
andb
push
shrl
xor
sub
js
sub
mov
test
push
ja
aam
xchg
push
notl
push
lea
add
add
loope
frstor
js
loope
ja
addb
and
mov
dec
xor
popa
rclb
add
xchg
cmc
cmp
add
insb
adc
cmpsl
ret
cmp
cmc
es
aaa
xchg
push
fidivrs
int
dec
xor
mov
iret
data16
push
jne
xor
push
ret
adcb
imul
inc
fwait
lret
sub
js
add
or
add
mov
xchg
shl
stos
aaa
inc
out
dec
lcall
or
push
imul
imul
xor
aad
push
fwait
jne
test
cmp
cltd
or
mov
add
loopne
jnp
stos
mov
test
ljmp
loope
inc
popa
in
cmp
stos
sbb
mov
xorb
pop
dec
inc
push
mov
hlt
xchg
repz
xchg
stos
xor
gs
jne
adc
jno
pop
jge
xor
mov
xchg
and
pop
inc
inc
push
adc
xor
xor
stos
loope
test
rcrl
inc
aam
or
sub
pop
push
lret
or
scas
mov
mov
in
int
and
movsb
and
xor
ror
pop
sbb
cltd
imul
mov
dec
jmp
pop
mov
jnp
iret
frstor
inc
mov
xchg
pusha
shrb
jne
push
cmpsl
stc
pop
inc
arpl
mov
mov
imull
aad
out
and
fistpl
mov
xor
popf
fxch
push
aaa
mov
xor
sub
mov
shr
cmp
xchg
fisubs
and
push
xor
test
or
or
arpl
adc
sbb
xchg
std
mov
mov
dec
aaa
stc
icebp
dec
xchg
jnp
pop
xchg
test
mov
in
cmovo
pusha
scas
shrl
jmp
add
adc
add
and
insb
push
outsl
loope
fisttps
dec
mov
and
inc
push
add
loope
pop
dec
lcall
mov
xor
shl
lahf
mull
popa
adc
and
inc
push
pop
xor
adc
cmp
scas
pop
es
xchg
inc
mov
mov
sbb
jl
popf
mov
movsb
es
and
int
notl
leave
mov
repz
inc
cmpsl
lcall
int
aaa
jne
mov
xchg
imul
std
hlt
les
push
das
rolb
repz
test
sub
xor
les
add
lret
inc
mov
outsl
or
xor
cwtl
jo
push
in
fwait
mov
shr
dec
rcrb
ljmp
dec
js
fistps
int
and
or
xchg
in
aam
mov
stc
lcall
lcall
adc
outsl
rorl
mov
adc
jnp
jmp
xor
jnp
jae
fwait
and
repz
sbb
es
dec
aas
xchg
data16
inc
stos
aaa
aas
std
push
outsl
add
xor
imul
xchg
rcr
mov
xor
jnp
bound
fsts
cmp
mov
inc
adc
add
xchg
or
call
sbb
imul
adc
orl
xchg
sbb
adc
xor
xor
int3
or
mov
arpl
stc
cmpsl
pop
dec
xorl
mov
dec
xchg
push
mov
xchg
add
add
add
push
dec
push
lods
inc
aas
push
mov
dec
inc
cmp
outsl
mov
stos
inc
movsl
in
add
and
push
xor
pop
fisubrs
inc
outsl
icebp
xor
cmp
jnp
xor
xlat
xor
mov
xor
sbb
cmp
xlat
rorl
lock
add
roll
pop
inc
mov
stc
adc
es
and
pop
fnstsw
mov
adc
or
stc
lock
xchg
sbb
loopne
subl
shrb
roll
ficomps
test
inc
xchg
popa
cmpsl
inc
xchg
add
cmpsl
cmp
int3
sub
icebp
lcall
and
adc
rol
pop
mov
or
sbb
add
pusha
jmp
xor
mov
divl
jmp
ljmp
mov
rcrb
orl
and
inc
dec
movsb
stos
inc
mov
lcall
leave
lcall
outsl
inc
sbb
cmp
pop
dec
sbb
sbb
adc
dec
cltd
xchg
repz
cwtl
xor
mov
orb
mov
mov
xchg
es
xor
push
sbb
xor
movsb
mov
sbb
outsl
jge
pop
imul
xchg
repz
aad
inc
dec
pusha
shl
xor
pop
std
arpl
add
addr16
fisubs
es
scas
dec
lahf
and
add
inc
push
stc
out
add
pop
adc
loop
inc
stc
popa
lcall
js
pop
xor
dec
fildll
mov
cmpsl
addl
pop
mov
in
les
test
adc
lock
xchg
xchg
dec
push
lea
bound
aas
popa
dec
cmp
sub
mov
pop
inc
divl
and
mov
int
ret
mov
xchg
xor
or
test
jne
add
sub
int
xlat
jno
sub
dec
fisubs
mov
inc
xchg
dec
push
adc
and
inc
or
dec
imul
pop
jecxz
jg
inc
and
test
xor
movsl
test
test
xchg
cmp
xchg
pop
int3
les
sbb
popf
xchg
xlat
stos
xchg
hlt
pop
xor
movsl
test
mov
cmp
or
push
arpl
sub
sbb
adc
push
lds
roll
jno
hlt
xchg
mov
and
push
push
xor
sbb
and
push
das
sub
and
mov
push
cmp
pop
cmp
inc
int3
lods
mov
lods
loop
or
mov
jmp
in
push
outsl
or
jge
lcall
xor
movntps
cmp
and
pop
jmp
adc
fwait
shlb
ret
xor
cmp
sbb
jne
rorb
pop
mov
fs
gs
data16
fwait
daa
test
xchg
push
out
xor
mov
stc
pop
pop
test
push
mov
test
mov
or
int
rol
and
fiadds
or
shrl
ror
int
cltd
aam
es
out
fs
jp
icebp
out
inc
or
data16
jg
cmp
push
jo
leave
std
inc
xchg
cwtl
push
add
aaa
nop
or
inc
pushl
shr
es
loop
es
adc
mov
rcll
lcall
cmp
mov
xchg
outsl
inc
pop
cwtl
cmp
inc
pop
mov
es
cwtl
sbb
fwait
in
jno
dec
lds
push
add
push
pop
push
cmp
dec
gs
or
xor
iret
lock
movsb
js
wbinvd
pop
cwtl
rolb
or
xor
cmpsl
out
add
pop
cmpl
ja
pop
je
insl
cmp
mov
adc
dec
xlat
and
push
test
xor
pop
test
cmp
das
loope
inc
rcll
sbb
cwtl
jne
mov
call
ret
test
mov
add
mull
aam
sub
adc
or
add
fwait
adc
add
pop
ror
dec
cmp
fcmovne
dec
lret
mov
aad
call
out
adc
int3
std
out
pop
or
aad
imull
aaa
mov
add
mov
sub
push
sub
pop
cmc
cmc
add
imul
jo
out
inc
js
pusha
dec
sbb
xchg
adcl
stos
or
andb
cwtl
test
hlt
push
pushl
push
leave
push
inc
cmp
inc
das
fabs
out
adc
adc
sbb
testl
jg
mov
arpl
adc
loopne
and
int
cmp
and
and
xchg
mov
or
lds
dec
gs
sub
pop
das
stos
xor
call
inc
dec
mov
stos
dec
jo
adc
jnp
pop
and
or
in
mov
shll
test
andb
inc
add
sub
ja
pop
xor
shrl
sub
ret
xor
imul
jnp
or
loop
adc
fiadds
or
mov
lcall
stos
mov
shll
and
xor
xorl
xchg
test
and
mov
test
pop
add
xchg
pop
and
push
arpl
adc
pushl
andl
out
popf
outsb
popl
test
cwtl
rorb
xchg
sub
inc
add
and
into
dec
dec
pop
xchg
push
add
adc
aaa
sub
jno
push
adc
push
push
mov
add
adc
popa
idiv
loop
loop
stos
xor
dec
lods
sub
pop
inc
imul
sbb
fldt
popf
xchg
sub
movsb
andb
mov
or
xor
xlat
ja
ja
and
aaa
popa
mov
insl
fstpt
xchg
mov
movb
xchg
add
dec
lcall
ret
pop
and
scas
sbb
xor
lds
push
jge
xor
mov
es
mov
shll
jnp
xchg
pop
jne
loope
adc
test
arpl
jns
test
jecxz
insb
and
inc
imul
movsl
daa
sbb
daa
ss
and
mov
fisubrs
cmp
sub
cwtl
pushf
shlb
leave
mov
pop
and
orb
or
xor
inc
inc
fists
adc
mov
sub
inc
sbb
fimuls
addr16
aaa
push
popa
pop
mov
mov
ss
movsl
or
dec
xchg
xor
sbb
popa
add
in
outsl
cltd
fistpl
fadds
in
inc
ss
mov
rolb
and
dec
orb
xchg
lock
fdivs
lret
cmp
pop
cmp
inc
xchg
mov
and
adc
popa
sub
dec
xchg
sub
nop
pop
scas
mov
icebp
dec
mov
inc
enter
test
xchg
cmp
xor
jnp
pop
nop
in
inc
and
dec
inc
ret
mov
add
and
out
popf
add
cltd
xor
fimuls
sbbl
and
mov
gs
das
orb
test
or
cmc
cmp
pop
sysexit
ret
adc
loop
in
pop
jae
icebp
test
int3
xchg
packssdw
cmpsb
mov
outsl
add
inc
add
lcall
cmp
xor
xor
rol
adc
daa
sysexit
sbb
stos
pop
xor
inc
and
mov
push
sbb
arpl
movb
lods
cmp
adc
inc
and
cmp
inc
push
in
sbb
xor
xchg
outsl
imul
pop
add
push
pop
dec
pop
lea
inc
xor
jae
pop
inc
xlat
pop
insl
sub
jns
lods
mov
jb
jns
or
or
mov
xor
sub
hlt
or
outsl
lods
stos
out
push
pop
lods
mov
data16
stos
leave
mov
cmp
jne
pop
gs
leave
pop
jne
pop
test
or
lahf
push
std
movsb
or
xor
andl
xchg
xor
cmc
std
push
dec
stos
xor
lods
pop
jbe
lds
mov
xor
xchg
rcr
mov
mov
and
xor
dec
jp
testl
jno
inc
dec
and
idivl
xor
es
mov
repnz
or
ret
dec
movsb
xchg
mov
popl
mov
mov
rorb
dec
mov
or
popa
punpckhdq
mov
popf
ret
sub
ficomps
sbb
scas
xor
push
xor
lret
stc
or
sub
push
shll
or
mov
dec
xor
cmp
mov
lret
pop
scas
jecxz,pn
or
imul
cltd
cmp
cwtl
rol
xor
xor
out
sub
inc
add
push
sbb
jnp
mov
add
mov
popf
lds
xor
inc
add
add
stc
aas
cmp
dec
or
cmc
lcall
push
and
cltd
aaa
out
sbb
and
cmpsl
inc
xchg
idivl
jno
add
rcl
sbb
sbb
scas
mov
xor
add
cmp
cmp
pop
push
xor
pop
pop
pushf
mov
or
mov
das
and
inc
bswap
inc
fwait
mov
bound
xor
rorl
imul
sbb
push
jmp
int3
andb
in
pusha
adc
gs
ss
or
push
xchg
ficoms
pop
jmp
xor
pop
xchg
rolb
xor
test
xor
and
dec
sub
inc
or
dec
inc
xor
jecxz
push
or
leave
cmp
inc
xor
dec
add
and
dec
outsl
pusha
mov
inc
test
cmp
mul
and
fnstenv
sub
jp
popa
idiv
mull
js
adc
cmp
loop
push
ret
add
sbb
xor
fmuls
inc
dec
ss
sbb
ret
xchg
xor
es
xlat
mov
jb
stos
ss
and
cmp
mov
dec
test
in
sub
or
popf
dec
enter
popf
inc
adc
mov
sbb
das
popf
xchg
cltd
inc
popa
shll
xchg
xchg
xor
xor
repz
xchg
or
rorl
ret
lea
shll
xor
xlat
add
sub
call
gs
push
add
pop
push
push
add
cli
fmull
jne
jns
outsl
gs
jge
jecxz
and
add
xor
push
inc
sbb
insb
add
sbb
insb
jnp
inc
adc
and
test
arpl
cmp
inc
xor
mov
lods
out
dec
adc
add
xor
jmp
adc
and
mov
xor
dec
fsubs
mov
mov
iret
outsl
sbb
jae
out
xor
cmp
xor
aaa
xor
dec
or
adc
inc
outsb
inc
daa
sbb
jmp
je
icebp
inc
loope
mov
add
xchg
or
das
inc
xor
mov
xchg
xchg
mov
daa
mov
ss
xchg
inc
push
lret
cmp
adc
into
nop
rclb
nop
ss
or
sti
or
addr16
rorl
sbb
jo
jbe
dec
ja
mov
xor
push
imul
xlat
jne
push
das
popa
cmovp
push
xor
jmp
mov
sub
jb
inc
fwait
sub
push
push
or
push
ret
xor
adc
inc
push
xor
popa
adc
arpl
mov
fs
adc
xchg
pusha
repz
or
stos
or
sub
pop
movsl
adc
xchg
inc
xor
cmp
adcb
sub
adc
xchg
test
push
mov
mov
sub
shr
adc
mov
pop
or
hlt
and
adc
xor
mov
fprem1
ss
int
dec
inc
push
cmpsl
sub
jb
call
arpl
xchg
jnp
out
xor
xchg
shlb
or
adc
in
adc
iret
mov
xor
and
insl
outsb
sub
adc
add
test
inc
js
pop
daa
xor
aaa
jecxz
jne
xchg
outsl
xor
xor
movsb
push
dec
jae
or
inc
dec
jp
mov
repnz
push
adc
sub
loop
inc
sub
adc
fs
cmp
pop
gs
or
adc
mov
xor
add
xor
popf
inc
pop
icebp
inc
pusha
sti
push
jecxz
dec
je
addr16
and
dec
dec
roll
xchg
dec
dec
leave
inc
mov
push
leave
aas
out
adc
xor
sub
fs
mov
lea
push
mov
dec
adc
push
adc
fnstsw
lahf
mov
add
cmp
dec
xor
sub
lahf
fildl
inc
enter
xlat
inc
sahf
add
insl
xor
movsl
adc
mov
dec
sbb
push
cltd
cmp
pusha
test
enter
insb
and
sbb
ret
imul
jmp
lea
daa
xor
scas
and
cmp
pop
dec
orb
jne
pop
inc
inc
mov
add
sub
mov
xor
mov
mov
or
dec
sub
aad
pusha
sbb
sbbb
dec
and
dec
xor
test
adc
inc
test
xor
add
cs
xor
xor
jbe
movl
dec
mov
scas
lret
xor
adcb
push
jne
and
xor
mov
push
inc
add
mov
inc
xor
xorb
mov
popf
pop
cmp
push
dec
fnsave
xchg
pop
add
gs
out
inc
mov
and
or
rol
sbb
pop
add
cltd
pushl
sub
lahf
xor
jne
aaa
jmp
and
pusha
add
movsb
add
xor
sbb
sub
sub
sub
adcb
xor
sbb
sub
xchg
adc
cmp
and
inc
mov
cltd
gs
push
jo
push
xor
pop
push
lret
and
mov
inc
outsl
sbb
pusha
push
cmp
and
lea
inc
adc
mov
shlb
lea
cmpb
popf
jns
pop
mov
addr16
popa
dec
jp
inc
cmp
add
outsl
xor
or
dec
inc
sbb
mov
ficoms
sub
xchg
pop
insl
mov
aad
pop
jns
inc
testb
add
adc
mov
pop
stc
pop
xchg
adc
xor
push
insl
popa
test
inc
nop
cld
fildll
add
xchg
jge
pop
movb
lea
pop
pop
mov
cmp
mov
dec
cmp
add
mov
or
mov
or
int
aas
mov
sbb
insb
cmc
jns
popa
inc
enter
lds
inc
xchg
pusha
or
push
pop
xchg
mov
jb
or
test
xlat
xor
bound
jb
jno
adcb
leave
and
inc
push
movb
mov
xor
pop
iret
pop
sub
push
xchg
outsl
sbb
inc
andb
arpl
sub
or
xor
fldt
mov
out
xor
arpl
mov
mov
ja
das
sbbb
inc
iret
das
xchg
and
mov
lahf
adc
and
lret
add
dec
or
or
lret
jae
out
inc
sub
arpl
xor
andl
iret
inc
xor
xor
shll
test
mov
inc
es
call
fstps
repz
out
adc
repz
ss
add
add
fstpt
jae
ljmp
add
es
sub
rcll
push
mov
mov
pop
xor
mov
loop
or
loope
cmc
cmp
push
loope
cmovns
sbb
sbb
cmpsl
sti
popa
dec
fisttpll
xchg
mov
es
pop
xchg
push
out
adc
test
dec
adc
push
test
popf
xor
mov
nop
popf
add
gs
sbb
dec
dec
or
add
dec
lahf
loopne
and
lret
std
xor
xchg
js
xchg
ss
lea
adc
inc
imul
sub
adc
stos
push
shll
push
inc
xor
int3
and
dec
fldcw
or
mov
popa
pop
rcr
iret
xchg
inc
mov
iret
jg
jnp
xor
loope
and
xor
xor
adc
or
cmpsl
das
mov
add
addr16
andl
add
mov
xor
inc
out
mov
lahf
es
gs
pop
out
inc
inc
stos
push
movsb
dec
or
pop
popa
inc
push
dec
add
adc
xor
mov
lcall
mov
sub
sub
mov
lea
sarl
or
int
mov
xor
xor
adc
or
xchg
xor
sbbb
inc
push
xor
add
push
stos
sub
add
sti
outsb
jns
pop
into
sub
pop
sbb
aaa
and
lds
testl
jns
arpl
mov
mov
adc
sbb
daa
pop
xor
je
scas
lahf
leave
push
shll
xchg
push
xor
dec
sbb
inc
add
mov
adc
mov
push
dec
inc
and
adc
adc
inc
inc
pusha
add
adcb
push
xchg
jp
rorb
rorl
xchg
popa
jb
test
dec
arpl
xchg
aam
in
add
aad
mov
fisttpl
addr16
jno
lea
push
in
ss
addr16
out
xchg
push
push
mov
pop
insl
adc
or
xor
jb
andl
int
iret
inc
shrl
xchg
fs
dec
insb
dec
out
test
mov
and
stos
subb
pop
lods
or
inc
test
subb
pop
inc
inc
or
cmp
cltd
mov
adc
xchg
sub
lahf
sbb
xchg
inc
add
nop
outsl
fldcw
inc
xor
ss
xchg
aad
loope
outsl
ror
sub
pop
insl
pop
push
and
xchg
stos
in
ja
inc
dec
andb
shrl
dec
adc
shl
cwtl
mov
xor
xor
lods
cmpb
xor
sbb
std
xor
shlb
ss
sbb
inc
cmovl
lahf
inc
xor
int
xor
push
push
adc
add
sbbb
adc
push
push
xchg
movsb
into
mov
sbb
test
loopne
xlat
aaa
lret
xchg
and
sub
dec
adc
push
sbb
dec
dec
ret
xor
dec
inc
or
pop
push
das
lds
or
loopne
psllq
rclb
mov
das
or
popa
outsl
notb
add
daa
in
mov
test
pop
jnp
cmp
sbb
pop
add
xor
or
aaa
inc
int3
into
dec
add
adc
cmp
mov
gs
lock
add
inc
nop
dec
xor
aaa
test
add
and
flds
iret
dec
xor
fs
pop
and
mov
fwait
xor
inc
sbbl
cmpsl
mov
and
js
jecxz
mov
orb
in
fsts
xchg
sub
mov
inc
aas
adc
pop
test
xor
pusha
mull
inc
test
add
push
dec
mov
mov
push
xor
or
dec
pop
xor
lret
push
add
ret
pusha
mov
insb
scas
cmp
mov
mov
mov
pushl
xchg
filds
and
add
mov
push
dec
cmp
je
xchg
in
pcmpgtw
fs
lretw
mov
nopl
hlt
cmc
int
cmp
add
and
or
dec
cmp
add
and
dec
inc
xor
add
inc
inc
lock
pop
mov
or
ljmp
add
jbe
insb
pop
loope
or
inc
add
add
sidtl
inc
add
sbb
mov
sti
out
sbb
sub
inc
dec
movsb
sub
mov
lock
or
add
adc
sbb
add
mov
or
and
sub
add
dec
fldl
addl
add
cmpsb
jnp
sub
add
dec
stos
push
cld
add
inc
add
add
aaa
cmp
adc
pop
pop
add
cmp
mov
inc
jbe
add
add
or
ret
inc
xchg
les
cmp
repz
add
pusha
or
pop
orb
cmp
add
dec
add
pop
aaa
inc
or
test
jnp
lret
jg
add
add
add
or
xchg
and
fs
shll
add
adc
or
sub
push
dec
inc
xor
fldl
daa
or
add
and
dec
add
sbb
or
adc
adc
pusha
lea
push
pop
rol
ret
mov
cmp
adc
and
bsf
push
loopne
rolb
lds
or
js
cli
cld
or
insb
push
mov
nop
add
and
fldenv
and
push
xchg
andb
and
loopne
push
mov
add
add
data16
and
push
push
mov
push
popa
and
add
mov
add
jmp
icebp
add
stc
sub
mov
dec
add
add
fdivrs
adc
or
xor
pop
xchg
add
add
xlat
sub
stc
outsb
and
add
sbb
or
pop
ret
fdecstp
hlt
add
add
sbb
jo
sahf
icebp
out
and
pop
add
add
and
sbb
and
pusha
leave
cwtl
mov
out
adc
dec
push
out
arpl
add
adc
cmp
test
sub
fwait
add
add
push
push
inc
adc
mov
in
lea
cli
add
inc
fbstp
adc
adcb
and
inc
add
inc
inc
lock
and
adc
fiadds
lock
mov
pop
add
adc
rorb
orl
sbb
rorl
gs
and
push
xchg
pop
sbb
add
sub
ja
inc
add
inc
popa
sub
pop
out
add
cmp
xchg
in
add
push
stc
sti
add
adc
sbb
hlt
loop
add
pop
bnd
lea
jecxz
and
loopne
test
lock
adc
pop
pusha
lea
cmc
pop
push
push
pop
shl
jmp
inc
jp,pn
mov
sub
icebp
lock
xchg
and
mov
cmp
fs
mov
jecxz
push
add
and
imul
outsl
adc
cmc
lret
nop
push
adc
cmpsl
lds
movsl
add
sub
popf
int
xor
adcb
sub
adc
add
add
pop
rep
mov
pop
sub
add
repnz
lock
insl
add
dec
sbb
movsl
pop
dec
cmp
add
sub
and
xchg
push
scas
adc
jmp
add
or
push
add
add
sub
lods
test
dec
int
lahf
cmp
sti
mov
lods
int
sbb
sti
shll
add
cmp
mov
std
sbb
mov
add
mov
jmp
push
sbb
or
jo
add
and
iret
sbb
pop
subl
xchg
stos
test
ret
and
adc
jne
xchg
pusha
adc
xchg
inc
jecxz
push
and
adc
andb
insl
mov
shrb
xor
adc
and
stc
mov
aas
add
add
test
js
and
cmp
mov
xchg
cs
nop
add
dec
mov
inc
jo
push
push
push
or
lret
inc
push
inc
push
fstpt
sub
mov
sbb
mov
mov
pop
inc
add
adc
outsb
mov
jb
test
dec
ss
dec
test
test
fmull
hlt
in
add
sbb
sarl
shlb
add
sarb
cmp
je
and
mov
xor
push
xor
and
jmp
imul
sub
add
cltd
fs
add
or
es
stc
push
add
add
and
xor
adc
or
sub
add
sub
adc
and
mov
mov
leave
fdivs
daa
inc
or
int
dec
push
xor
std
xor
rorb
and
cmp
daa
or
lea
aas
add
dec
rcrl
jo
mov
movsb
mov
sub
add
jns
das
sub
ret
fldenv
fadds
add
insb
imul
and
cmp
or
out
cmp
movsl
inc
add
jg
test
dec
jo
inc
jb
in
aas
pusha
lods
sub
cmp
rcrl
mov
mov
and
inc
add
jbe
mov
daa
pop
mov
add
in
ret
cmovnp
and
insl
xchg
test
js
pop
mov
add
xchg
or
int3
test
or
mov
mov
dec
inc
imul
push
inc
push
inc
push
push
push
inc
push
inc
pop
inc
lock
dec
dec
inc
inc
inc
dec
push
push
push
int3
lcall
arpl
dec
dec
dec
pop
inc
inc
inc
inc
push
dec
jo
inc
push
dec
dec
dec
push
inc
inc
ljmp
inc
dec
dec
inc
jb
inc
inc
dec
dec
jae
inc
jne
push
dec
push
inc
jns
add
clc
inc
push
popa
jno
jne
adc
mov
dec
push
xchg
in
jnp
jb
dec
dec
jb
inc
fs
push
push
dec
inc
push
dec
jae
pop
inc
into
mov
push
imul
inc
outsl
dec
inc
imul
in
rclb
dec
inc
dec
dec
jmp
in
lahf
mov
dec
inc
popa
je
push
out
outsl
outsl
fisttpl
mov
rcll
dec
out
push
push
das
test
dec
push
pop
inc
mov
push
pop
inc
dec
pop
pop
dec
push
pop
dec
gs
scas
push
push
inc
lock
push
dec
std
aaa
pop
lods
push
xchg
jmp
in
or
mov
stc
jne
mov
and
add
adc
mov
movl
inc
or
jg
fnstenv
and
pop
or
push
add
mov
fimuls
and
dec
das
shlb
add
loopne
jmp
jnp
or
lea
mov
movsl
add
mov
push
nop
mov
or
push
add
push
sti
cmp
jne
imul
jmp
andl
mov
sbb
jne
xchg
jge
push
xor
sub
sub
inc
test
int
in
dec
in
adc
leave
ret
xchg
sub
repnz
push
orb
lods
push
xor
or
test
mov
push
and
sub
repnz
lods
dec
adc
xchg
sbbb
add
pop
pop
ja
cmp
test
popa
add
sub
and
call
mov
fs
adc
enter
inc
and
decl
xor
rclb
adc
mov
imul
or
push
or
mov
insb
sbb
pop
sub
stos
scas
idivb
pop
or
push
xchg
in
add
shlb
xchg
test
and
ret
sub
loope
and
xor
adc
xor
cs
push
xchg
and
push
aaa
ret
and
inc
lret
add
xchg
insl
xor
add
sub
lods
mov
sub
xor
stc
mov
xor
test
test
jmp
inc
cwtl
cwtl
adc
xlat
and
fcomps
cmp
add
sbb
jl
pop
std
add
add
add
inc
sbb
pop
call
pop
aam
and
push
enter
or
or
inc
push
or
jo
or
mov
push
or
fimull
add
repz
mov
pop
ret
xchg
mov
jb
sbb
loopne
cmp
adc
pop
rolb
enter
mov
adc
lea
cmp
leave
add
xor
pop
jnp
movl
invd
es
mov
push
inc
mov
fiadds
push
mov
mov
and
pop
divb
xor
xchg
or
jl
mov
mov
or
lea
mov
mov
pop
adc
mov
inc
in
in
mov
test
dec
sbb
and
fs
adc
cltd
fs
add
es
fsubs
cmp
xchg
dec
push
sbb
sub
add
sub
es
fs
pushf
pushf
inc
inc
adc
xor
xor
add
xchg
scas
cwtl
cwtl
push
and
cmp
mov
pop
nop
pmulhuw
nop
dec
sbb
stos
cmp
pop
or
inc
xor
nop
nop
push
enter
cmp
mov
leave
and
and
mov
xor
inc
sbb
pop
subl
orl
adc
and
and
test
sub
push
enter
pusha
scas
sbbb
sub
sbb
inc
push
enter
mov
and
and
enter
mov
leave
and
js
and
add
fsubs
cltd
fs
je
sbb
jb
scas
inc
pusha
aas
sbb
adc
popa
jo
sbb
add
shll
repnz
dec
xorb
jbe
or
inc
insb
insb
mov
pop
mov
and
push
insb
cmp
inc
jb
arpl
add
xorl
xchg
pusha
push
test
pusha
je
gs
inc
push
dec
pop
pop
nop
cmp
addr16
and
leave
and
add
xor
add
sarl
mov
jns
push
sbb
push
push
inc
enter
cmp
fs
add
mov
adc
nop
add
inc
es
fs
sbb
test
adc
or
inc
xor
and
adc
xchg
or
xchg
inc
push
dec
inc
inc
mov
adc
add
add
or
push
and
inc
push
pushf
pop
or
and
or
cmp
add
xor
enter
in
adc
es
fs
xor
add
cmp
scas
inc
int3
dec
nopl
cmp
dec
push
xor
add
add
sub
dec
adc
pop
and
lock
leave
sub
cld
incb
and
fcomps
or
sbb
imul
adc
clc
and
add
dec
or
nop
add
inc
es
hlt
hlt
movsb
cmp
imul
in
fs
lock
inc
enter
inc
xor
and
sbb
in
sbbb
lods
inc
jb
jns
adc
xchg
or
sbb
call
call
xchg
fs
inc
adc
in
add
fs
nop
arpl
nop
dec
sbb
loopne
and
nop
stos
mov
fs
adc
leave
or
fmul
dec
test
insl
mov
xchg
inc
push
or
fadds
mov
add
dec
sbb
nop
stos
nop
aam
xor
add
shrb
add
xchg
dec
rcl
les
mov
and
outsb
mov
cmp
leave
cld
std
cld
std
int3
int3
cmp
scas
inc
clc
test
jb
xor
or
enter
enter
pop
inc
push
dec
xchg
hlt
or
les
jb
mov
enter
lock
and
sbb
and
jo
push
cmp
in
in
in
fs
mov
enter
cwtl
xor
and
call
test
andb
sbb
in
mov
enter
call
xchg
mov
pop
lea
add
inc
js
pushf
or
clc
dec
push
cmp
in
fs
mov
xor
sahf
inc
test
jnp
cld
sti
add
mov
add
dec
or
adc
adc
les
fs
inc
sarb
mov
nop
inc
push
sbb
sbb
xchg
push
sbb
mov
and
fadds
mov
andl
pushl
mov
push
pop
push
imul
push
push
inc
or
sbb
mov
enter
inc
adc
jmp
or
popf
imul
or
and
xor
icebp
ljmp
push
fsubrs
push
adc
inc
or
mov
neg
movsb
cmp
mov
subl
adc
add
adc
mov
mov
jb
or
add
jmp
push
sbb
bound
adc
jge
nop
dec
or
repnz
adc
xor
js
dec
orb
mov
dec
aaa
cwtl
cmp
addb
ja
outsl
loopne
sbb
je
mov
pop
adc
mov
or
js
testb
out
insb
outsl
pop
lods
arpl
fcompl
mov
in
stc
mov
push
outsb
fimuls
sub
xchg
mov
daa
sgdtl
add
nop
adc
rorb
pop
les
jae
cmp
fmuls
or
adc
jge
sbb
jne
adc
lret
ret
lcall
rorb
fxch
js
nop
sbb
std
pop
cmp
xchg
call
hlt
sarl
and
add
js
imul
mov
dec
test
jmp
add
in
jno
test
sbb
mov
out
or
in
inc
and
jo
out
and
push
mov
out
cmp
and
adc
inc
xor
subb
push
dec
inc
add
push
pop
add
xor
mov
stos
pop
dec
hlt
sbb
mov
out
pop
mov
bound
or
mov
and
or
or
and
push
adc
cmp
inc
test
pop
and
sub
dec
and
push
adc
rcr
mov
rorb
in
dec
ret
dec
add
ja
pop
shl
pop
sbb
mov
mov
cmp
push
popa
lahf
sbb
imul
xor
cmp
mov
loopne
dec
xchg
out
enter
pusha
sbb
and
iret
pop
movsb
add
xor
and
pop
mov
neg
inc
push
mov
mov
jmp
mov
xchg
xchg
out
arpl
sar
xor
stc
lea
cmp
jg
pushl
or
or
xchg
les
out
adc
pushf
push
out
pusha
in
adc
adc
mov
add
add
jmp
into
pop
inc
xchg
add
cmpsb
xchg
nop
scas
cmpsb
push
mov
or
or
fdivl
cmpb
jmp
and
push
hlt
in
push
enter
in
mov
push
fs
lret
xor
sub
cmp
test
and
enter
int3
add
repnz
into
jbe
pop
leave
adc
aam
xlat
add
adc
pop
add
or
xchg
mov
adc
inc
mov
out
xchg
addr16
and
nop
and
rep
hlt
fs
dec
divb
cmp
in
push
cli
mov
jns
xchg
sti
std
cmp
test
add
add
add
add
or
inc
or
or
pop
rcrl
adc
adc
adc
jns
mov
xchg
rcrb
add
nop
in
and
dec
mov
and
mov
ret
add
bound
pop
xor
cwtl
sub
xor
xor
inc
loop
dec
pushf
jbe
lea
leave
xor
cmp
test
add
jae
push
pop
ds
and
pmaxub
ss
xchg
dec
rcrl
push
cltd
inc
in
cmp
test
inc
mov
dec
js
ret
insb
push
add
roll
sti
stos
push
mov
mov
aas
lcall
add
sub
mov
mov
lods
and
xchg
pop
jb
insb
push
fs
pop
push
pop
jb
and
leave
and
or
xchg
pop
xor
cmp
movsb
sub
lods
in
loopne
ret
cltd
out
aad
mov
sbb
movsb
enter
pop
mov
das
fmuls
sarb
mov
arpl
xchg
leave
inc
xchg
inc
mov
lods
fldt
repz
mov
out
or
lds
sbb
xlat
movswl
adc
pop
cmp
sub
add
jo
int3
bound
dec
mov
outsb
jo
je
leave
addb
and
mov
nop
fiadds
xchg
stos
sbb
or
scas
or
js
ss
mov
mov
dec
push
adc
mov
jae,pn
insb
insb
jle
xchg
add
mov
test
push
mov
add
rcll
mov
rorb
inc
adc
stos
scas
adc
lret
or
xchg
repnz
cwtl
pop
xor
or
inc
test
jge
movsb
xchg
je
adc
and
mov
and
mov
mov
enter
clc
addr16
and
subl
mov
fs
mov
sbb
aam
add
les
lret
add
enter
and
cmpsb
test
push
pop
or
fbstp
fdivs
insb
or
les
push
or
pop
push
jp
or
jmp
insb
and
mov
mov
xchg
sub
or
sub
movsl
inc
fcmovnu
jb
mov
pop
mov
bound
inc
bound
movsb
ljmp
jg
rolb
mov
call
cmp
jg
aam
std
loope
mov
push
call
add
fnstcw
rcr
sbb
xor
fldt
sbbl
push
or
pop
loope
pop
push
sti
inc
push
sti
mov
filds
sub
cmp
sbbl
xchg
and
add
xor
mov
mov
adc
add
sub
sub
stos
cmpsl
ficompl
xor
and
or
adc
and
xlat
es
in
repz
je
cmp
adc
push
and
inc
push
hlt
std
pusha
rcrb
leave
hlt
std
adc
dec
push
pandn
xchg
in
inc
fcomp
push
popa
push
insl
push
sub
popa
xchg
pop
mov
push
mov
and
leave
and
leave
and
and
xchg
pop
jb
adc
pop
jmpw
adc
cmp
jns
adc
adc
add
push
leave
and
jmp
xor
movsb
pusha
push
dec
add
ja
fldl
enter
adc
pop
cmp
xchg
insb
sbb
insb
mov
fs
sbb
adc
jl
popa
call
sahf
or
dec
pushf
dec
nop
xchg
outsl
inc
push
mov
add
pop
jmp
adc
ja
popa
fldt
add
xorb
xor
cld
imul
push
les
mov
enter
dec
test
cmp
sbb
sub
adc
fcmovb
xor
insl
pop
in
test
add
outsl
jno
pop
adc
push
lds
fs
popa
add
test
ljmp
push
fmuls
stc
sbb
cmp
cld
hlt
cld
hlt
cld
mov
mov
jne
cmp
xchg
xor
in
inc
cmp
add
and
xchg
in
xchg
add
lret
add
imul
and
repnz
das
pop
sbb
mov
xor
sbb
insb
lods
and
clc
add
enter
dec
call
call
cmp
mov
xchg
sub
fs
or
shlb
adc
inc
xchg
sub
and
dec
cmp
add
gs
and
fcoml
aam
xchg
dec
xor
int3
les
insb
pop
and
mov
leave
and
jb
and
cmp
movsb
push
xor
enter
xchg
inc
mov
pop
pop
pop
cmpsb
push
inc
test
inc
cmp
in
es
or
and
xchg
jo
cmp
sbb
cmp
inc
inc
insb
mov
add
negl
xor
dec
mov
mov
push
cltd
or
jo
xor
sbb
loopne
add
rolb
and
jg
inc
inc
or
sldt
dec
pop
fcom
dec
or
loop
sbb
popa
xor
xor
inc
inc
cs
dec
mov
dec
test
mov
sbb
bound
xchg
sub
sub
in
and
fsub
iret
stos
dec
pusha
out
decb
and
movsb
rorb
and
or
pop
xchg
fisubrs
cmp
and
dec
in
out
mov
mov
dec
pop
adc
sub
mov
push
movsl
mov
les
xor
mov
fnstenv
mov
xor
inc
shlb
xchg
sub
mov
ret
testb
sbb
and
rolb
cmp
push
dec
outsl
cs
mov
xor
xchg
inc
dec
push
sbb
sub
sbb
jmp
jnp
xchg
xchg
adc
cmp
add
in
mov
int3
cwtl
lret
inc
pop
sbb
mov
into
inc
push
sbb
and
jb
dec
sbb
sub
and
sub
add
pop
cmp
push
and
dec
es
sbb
addl
mov
inc
push
sub
or
test
in
and
pop
inc
fsubrl
xchg
sbb
push
in
cmpsl
inc
sub
xor
in
inc
test
nop
mov
sbb
sbb
lret
add
and
inc
dec
movb
stos
mov
pop
mov
and
sbb
mov
mov
add
sbb
sbb
cmp
or
ret
loopne
in
xchg
je
sarb
in
faddl
and
shlb
mov
add
sbb
insb
push
push
insb
insb
cs
or
mov
xor
xchg
dec
cs
push
mov
call
pop
adc
xor
sbb
insb
lods
pop
sbb
and
and
shlb
fsts
sub
push
sub
inc
cmp
icebp
nop
add
adc
xchg
mov
enter
xor
adc
ss
adc
push
movsl
les
xchg
pop
mul
loop
push
push
aam
stc
push
mov
test
pop
loopne
cmp
stos
fsubrs
add
add
xor
pusha
cwtl
sbb
out
dec
xchg
xchg
fcomp
xchg
add
jae
ret
jne
pop
in
fwait
push
push
push
adc
in
je
mov
sbb
dec
cmp
push
mov
adc
dec
xchg
nop
aam
push
mov
movzbl
pop
jne
jmp
sub
pop
adc
out
and
inc
lods
cmpl
lods
stc
pop
mov
rol
ss
mov
lret
lock
xor
pop
cmp
icebp
push
pusha
inc
add
pushf
nop
rorb
xchg
pushf
in
mov
rorb
rorb
lret
test
js
add
bnd
or
adc
push
add
push
into
pop
xchg
xchg
and
inc
shrb
mov
xor
and
in
sbb
cmpsl
pop
mov
and
or
out
cmpb
add
insb
jmp
lods
mov
sub
dec
les
mov
sbb
add
adc
or
arpl
and
cwtl
dec
xor
cwtl
or
int
cmp
add
xor
inc
push
mov
inc
orl
sub
and
and
xor
xor
cmp
sub
pop
nop
daa
mov
fnsave
and
out
popf
push
insl
mov
inc
and
add
and
test
sbb
or
sarl
fwait
adc
inc
es
and
pop
add
aam
aam
dec
mov
leave
and
shl
dec
fcoms
push
xor
and
push
dec
mov
shll
int3
call
inc
cmp
xchg
push
test
aaa
aam
mov
negl
mov
daa
es
push
ss
pushf
xlat
ret
inc
or
gs
sub
xchg
inc
inc
mov
fstpl
or
push
push
sbb
pop
push
adc
dec
mov
lods
dec
add
cmpl
sub
shlb
and
inc
subl
mov
movl
cltd
mov
jbe
xor
mov
out
add
xchg
mov
jge
push
jmp
jne
arpl
xchg
inc
jl
mov
ja
gs
dec
fwait
xchg
jbe
inc
jb
mov
or
mov
lahf
pop
sbb
xor
xchg
or
movsb
movsb
mov
push
jo
jo
adc
xchg
hlt
insb
leave
daa
xchg
or
mov
xor
push
push
adc
lahf
dec
es
fs
pushf
mov
test
pusha
push
leave
add
adcb
in
stc
fs
cwtl
mov
dec
push
pop
pop
int
in
in
adcl
xchg
mov
scas
push
push
push
inc
push
leave
add
xchg
inc
push
dec
dec
nop
add
xchg
cld
nop
mov
xchg
sbb
and
add
inc
test
xchg
dec
mov
fs
inc
inc
push
inc
push
leave
pusha
push
mov
cmp
fs
inc
cmp
mov
sub
jg
inc
enter
movsb
xchg
xor
test
and
and
in
sbb
add
ljmp
pop
call
mov
rol
imul
imul
push
xchg
in
pop
push
jns
repnz
in
imul
fsubrs
or
fwait
in
fdivrs
in
nop
mov
out
in
add
mov
in
xchg
mov
aam
hlt
mov
mov
or
in
pushf
mov
rcl
mov
nop
test
test
mov
adc
movsb
stos
in
xchg
movsb
int3
int3
mov
nop
mov
iret
inc
enter
pushf
test
enter
mov
cwtl
cwtl
sbb
out
in
test
xchg
xchg
les
add
repnz
push
mov
fs
in
and
lock
iret
adc
xor
push
mov
test
cmp
cmpb
shll
fs
popf
insb
jo
fsubrl
xorl
xchg
add
fcomp
sbb
ret
adcb
pop
sbb
mov
or
nop
and
repnz
jle
pop
pop
adc
lahf
into
leave
jae
lods
enter
and
add
sbb
mov
in
les
aad
sbb
cmp
mov
push
jo
mov
xor
in
xchg
mov
or
cmpl
push
fildll
mov
add
xlat
adc
iret
out
fnstcw
xchg
or
pop
dec
std
in
jbe
sub
add
movl
ds
outsb
mov
or
mov
adc
pop
loope
adc
pop
inc
mov
sub
push
lahf
enter
std
push
pop
cmpb
movsb
movsb
xchg
push
in
lea
cmp
push
repnz
mov
pop
push
mov
sbb
mov
dec
xchg
into
nop
adc
es
xchg
int3
rcr
mov
jae
mov
int3
enter
jb
int3
enter
int
rcr
mov
xchg
fists
in
cmp
dec
jle
xchg
mov
inc
and
enter
dec
sbb
mov
scas
nop
xchg
inc
nop
nop
or
nop
mov
mov
fmuls
daa
mov
pop
cmp
inc
test
mov
sbb
pop
in
sub
xor
inc
idiv
lahf
sahf
pop
push
mov
lcall
lods
aam
andl
sbb
std
popa
push
mov
adc
or
mov
nop
dec
xor
dec
mov
lcall
sbb
insb
test
int3
les
jmp
jbe
or
add
call
adc
fwait
mov
add
mov
rep
pop
cmovae
test
lret
and
rol
mov
sarb
mov
enter
sub
xchg
enter
rclb
inc
inc
lahf
rorb
fldenv
les
inc
shlb
mov
imul
sub
jb
lahf
leave
sub
test
test
add
inc
enter
sbb
test
mov
test
mov
push
xor
adc
xor
je
movsb
sub
or
xchg
fistpll
pop
dec
xchg
sbb
or
mov
adc
jne
mov
and
fs
xor
fs
pushf
subl
inc
cmp
xchg
push
ja
mov
addb
pusha
xchg
pop
or
leave
popa
xor
pop
xchg
sub
aam
adc
nop
gs
out
ror
int3
loope
fs
int3
test
xor
cmc
aad
iret
sub
and
push
enter
push
es
mov
xchg
in
daa
xchg
and
jo
or
cwtl
and
pop
and
xchg
xchg
xchg
aam
pop
dec
test
jb
xor
and
mov
stos
insb
dec
cmp
in
nop
stos
test
lods
pop
shrb
xor
repz
dec
jg
mov
sub
int
or
and
imul
lods
mov
popf
int3
adcl
push
in
sub
mov
stos
cmpsb
sbb
repnz
and
leave
andb
xor
jnp
and
mov
and
and
repz
jb
es
mov
in
add
je
nop
dec
push
je
push
sbb
inc
enter
test
add
add
in
insb
and
fs
insb
insb
cmpsl
sbb
mov
daa
xchg
cwtl
cwtl
pushf
andl
leave
add
scas
dec
push
ret
pusha
pusha
push
bnd
int3
int3
insb
xor
or
pop
lahf
pop
or
or
xor
lahf
pop
loopne
dec
push
pop
nop
nop
mov
dec
inc
add
push
xor
icebp
int
or
xor
addr16
inc
shrb
les
mov
cmpl
mov
roll
xchg
xchg
sbb
scas
int3
xchg
int3
stc
sub
nop
or
xchg
mov
xchg
and
mov
and
push
or
and
int3
ret
and
int3
mov
in
push
in
inc
sbb
bswap
add
shl
nop
adc
xchg
repz
fcmove
int3
or
mov
pop
mov
out
int3
int3
enter
jmp
test
ljmp
push
cs
sub
shl
repnz
add
mov
nop
scas
push
mov
cmp
les
lods
mov
inc
rcrb
pop
or
dec
add
mov
cwtl
fidivs
mov
repnz
jle
nop
or
add
into
leave
jae
nop
nop
mov
inc
push
mov
iret
adc
inc
ss
fs
jmp
cmp
mov
in
stc
test
ficoms
inc
enter
dec
dec
pop
sbb
or
dec
push
inc
sbb
push
test
mov
xchg
push
add
push
lret
add
cmpsb
lock
cmp
add
pop
add
dec
pusha
adc
push
add
and
and
enter
mov
enter
sarb
test
in
pop
orb
adc
pop
sarb
pushf
insb
xchg
shlb
sub
or
fmull
jbe
loopne
pop
inc
std
movsl
sub
shll
xor
fsubr
outsb
xor
sarb
fsubrs
xor
adc
mov
mov
dec
sbb
and
adc
sub
mov
push
xor
or
fsubs
sbb
push
adc
sbb
push
inc
and
pop
inc
aad
xor
and
or
subb
pushf
pushf
push
push
push
testb
sarb
ret
sub
jb
mov
pushl
lret
sbbb
out
xor
int
ljmp
push
mov
sarl
push
mov
sub
int3
mov
push
jbe
adc
jne
xor
sahf
sbb
shlb
adc
adc
cmp
fisttpl
pop
repnz
push
fs
and
inc
lcall
mov
xchg
nop
iret
adc
push
inc
mov
or
add
mov
pop
cmp
loop
add
inc
pop
and
movsb
jecxz
loope
jns
mov
sub
adc
in
scas
nop
push
enter
out
and
cmp
repnz
enter
repz
push
mov
hlt
clc
test
cld
sub
inc
jb
pusha
push
enter
add
add
push
lods
add
ret
pop
mov
sub
inc
pop
repz
or
mov
int3
or
mov
push
enter
push
fs
sub
scas
nop
pop
cmp
and
jns
mov
sbb
sub
pop
pop
nop
push
enter
fsubs
nop
pop
and
insb
and
call
scas
nop
push
enter
sub
sub
clc
cs
adc
dec
dec
scas
mov
or
cmpsl
adc
test
scas
mov
fstps
ss
subb
inc
pop
and
cmp
or
fdivrs
sbb
leave
sub
adc
nop
or
inc
ret
sub
adc
dec
scas
nop
push
enter
inc
test
inc
pop
and
dec
xor
repnz
or
jl
enter
add
call
push
int3
push
pop
pop
test
pop
adc
pop
clc
pop
push
enter
push
mov
scas
nop
popa
sbb
pusha
push
jns
mov
sbb
adc
sub
and
enter
faddl
push
in
inc
jb
mov
push
enter
outsb
mov
test
je
adc
sub
push
enter
add
or
nop
add
enter
jnp
loopne
and
rorb
xor
xorl
test
inc
xor
xchg
mov
mov
test
lea
xor
nop
pop
shlb
ret
push
fadds
sti
adc
and
nop
xchg
ss
mov
sbb
sub
adc
and
nop
push
js
loopne
and
or
push
enter
sbb
cmpsb
cld
pop
and
adc
xor
movsb
enter
les
nop
push
inc
mov
mov
mov
xorb
mov
cmp
dec
mov
and
mov
and
or
ret
push
enter
cld
les
and
and
mov
push
enter
outsl
nop
int
pop
and
test
ss
mov
mov
sub
adc
nop
add
sbb
fcmovb
fcomp
push
fs
fistpll
mov
pushf
in
repnz
jecxz
in
push
enter
push
scas
test
lods
in
or
mov
and
shl
and
hlt
xor
jb
mov
xchg
sub
adc
pop
and
mov
xchg
incb
add
add
add
push
pop
xchg
sub
lock
pusha
loopne
mov
mov
or
and
in
nop
push
enter
adc
and
or
mov
adc
sbb
enter
or
mov
sub
in
testb
pop
sbb
and
and
repnz
ffreep
and
daa
enter
movsb
mov
sub
scas
mov
subb
push
sub
mov
xor
adc
das
mov
sub
sub
xor
add
or
std
pop
cmp
dec
pop
popa
ret
enter
in
repnz
aas
scas
mov
sub
test
cmp
sub
outsl
xchg
dec
and
adc
mov
rolb
insb
and
push
push
ret
scas
nop
push
enter
push
fcoms
dec
pop
and
push
push
aaa
in
repnz
pop
add
dec
push
xchg
sub
or
sbb
pop
push
fadds
sbb
scas
nop
arpl
addr16
mov
push
and
outsl
and
nop
push
sbb
jo
jns
or
sub
adc
jbe
nop
push
enter
jp
ja
inc
pop
and
add
int3
jg
nop
inc
jb
test
pop
and
or
mov
sub
adc
mov
mov
rorb
xchg
mov
jno
in
push
dec
mulb
aaa
xor
in
enter
test
in
xchg
mov
pusha
jo
add
ret
ret
add
adc
adc
push
xor
inc
mov
push
push
mov
xchg
test
mov
xor
jne
out
out
addb
dec
cltd
idivl
pop
sub
pushf
mov
mov
popa
inc
stos
mov
call
nop
mov
fwait
sub
loopne
add
or
addl
cmpb
ret
xchg
or
adc
pop
les
adc
mov
add
sub
mov
sbb
adc
mov
sub
popf
inc
mov
sahf
test
inc
xchg
inc
test
addr16
movswl
or
insl
add
pop
rorl
push
cs
inc
or
fs
inc
inc
mov
pusha
dec
mov
add
enter
test
or
inc
xor
cmp
xor
xchg
cmp
push
cmp
cwtl
push
jno
int3
lea
adc
pop
sub
lock
and
stos
jle
adc
sbbl
sub
int3
daa
mov
les
nop
movsl
fildll
jmp
sub
and
push
or
or
jmp
leave
mov
mov
nop
add
dec
and
mov
xchg
sub
ror
jmp
imul
xchg
add
leave
in
and
andb
in
leave
xchg
xchg
and
inc
repnz
push
clc
mov
jb
in
orl
push
leave
lea
addl
dec
es
mov
or
xchg
inc
mov
icebp
xchg
inc
mov
imul
movsl
mov
mov
mov
sbb
inc
test
pop
cmpl
outsb
inc
xor
push
sbb
cmpb
out
in
and
daa
mov
sar
inc
inc
push
test
mov
inc
sub
sub
xchg
xor
and
repnz
nop
xor
lea
in
popa
add
cmp
mov
inc
and
push
push
enter
aam
or
insl
jp
aam
xor
push
imul
gs
cltd
in
dec
sbb
int3
add
mov
adc
push
push
and
pop
sbbl
pop
inc
dec
arpl
popa
fs
data16
popa
outsb
or
sbb
or
sub
and
jns
lods
subb
and
jns
je
fnstcw
fadds
jbe
insl
ss
sarl
sub
inc
popa
sub
adcb
xor
lcall
add
push
and
jp
fmuls
imul
sub
inc
adc
ret
xchg
outsl
subb
dec
add
cvttps2pi
js
adc
imul
mov
imul
pop
push
dec
dec
dec
pop
push
or
jo
mov
inc
push
jne
or
test
bound
jmp
pop
inc
mov
pop
fcomp
in
xchg
adc
mov
in
insl
fisttpl
jne
jns
je
popaw
arpl
inc
js
ds
push
cmp
and
mov
mov
and
inc
fsubr
mov
or
push
dec
scas
cwtl
inc
adc
adc
pop
add
data16
inc
pop
incl
push
ja
add
fld
xchg
imul
sub
xchg
xchg
mov
je
jle
add
pop
mov
dec
xor
mov
mov
add
mov
ret
cmp
add
dec
inc
gs
fstps
fs
dec
outsl
push
jp
insl
jne
adc
push
adc
subb
mov
xor
or
push
inc
dec
mov
add
inc
xlat
mov
loopne
cmovbe
dec
inc
addr16
inc
iret
adc
in
jae
adc
push
add
add
repz
cmp
add
mov
mov
push
das
xor
stos
in
pop
sub
add
call
out
cmp
cmp
daa
arpl
js
das
popa
scas
jmp
xchg
loope
popa
and
cs
and
sti
add
inc
cmc
jb,pn
jb
or
jle
xor
mov
nop
inc
sbb
call
cmp
add
add
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
