xchg
add
xchg
add
add
jl
add
adc
add
push
xchg
add
jl
add
add
add
aaa
lcall
js
add
bound
add
add
pop
lcall
jno
add
sbb
add
sub
add
add
add
add
add
outsb
add
xchg
add
das
add
jl
add
lret
cltd
add
jl
add
jl
add
jl
add
cs
gs
jne
je
add
add
add
js
add
bound
add
add
push
sub
add
add
sbb
pushf
add
jl
add
jl
add
jl
add
inc
outsl
add
jl
add
xchg
lahf
add
xchg
add
lahf
add
jl
add
adc
add
mov
sub
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
add
imul
add
jo
add
inc
add
jb
jae
outsl
add
inc
add
add
imul
add
je
add
add
add
add
and
dec
add
ja
and
push
add
insl
add
outsb
add
add
add
outsl
add
popa
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
inc
add
imul
add
add
nop
hlt
inc
adc
adc
fisubrs
pop
out
rclb
cwtl
mov
pusha
xchg
fisubrs
add
push
mov
call
pop
pop
ret
rcll
add
jb
bound
xor
arpl
adc
leave
jae
arpl
adc
and
repz
bound
xor
ret
insl
loop
mov
and
jmp
sti
adc
and
adc
pusha
loope
xchg
sbb
outsl
shlb
lods
add
and
sti
jb
fs
pop
mov
or
dec
add
push
push
cmp
mov
pop
popf
mov
int
fst
sub
popf
mov
xchg
fnsave
cmp
out
sub
aas
sbb
sub
sti
cmp
arpl
sarl
adc
jle
and
push
roll
jbe
bound
xor
scas
fcoms
and
pushf
jecxz
xchg
dec
and
addl
insb
and
ficoms
test
jmp
add
cmp
sbb
insb
pop
xor
lods
or
mov
push
xor
enter
test
xchg
add
rcrb
imul
fimuls
scas
sbb
and
xchg
push
xchg
push
loopne
in
incb
gs
xchg
das
mov
push
pop
adcl
dec
lret
mov
add
push
mov
lock
mov
mov
mov
push
shll
push
mov
fistpl
add
rolb
jae
arpl
adc
and
repz
bound
xor
ret
arpl
adc
and
dec
seto
repnz
inc
hlt
jmp
mov
jo
mov
ljmp
cltd
push
mull
les
dec
mov
jno
cli
mov
fcomps
cmovbe
mov
push
movsl
dec
add
stos
add
cmp
pop
es
stc
ljmp
fimuls
mov
movsl
jb
xor
in
sbb
neg
lods
and
xor
add
out
and
sbb
call
lcall
sarl
push
test
mov
jno
pop
or
ficoml
add
inc
pop
mov
mov
inc
dec
mov
lods
mov
loopne
je
pop
jnp
or
jge
jo
and
in
into
outsl
out
sbb
mov
std
pop
mov
clc
nop
push
pop
ljmp
mov
aad
push
or
jle
adc
aaa
imul
pop
mov
lret
ret
ja
js
insl
mov
mov
or
data16
in
in
stc
mov
xchg
cmp
or
jmp
sbb
imul
movsl
into
xchg
mov
lret
dec
dec
or
add
or
add
pop
test
popf
push
dec
xchg
dec
and
push
dec
sbb
loopne
adc
mov
mov
or
in
test
sbb
shl
pop
shrb
fdiv
jmp
push
fcmovne
inc
andl
inc
arpl
mov
mov
push
adc
dec
jnp
fiadds
fimull
ret
repz
enter
enter
daa
addl
add
and
xor
xchg
dec
or
jb
in
fisubl
jp
sub
and
inc
add
jne
lret
mov
ss
cltd
shll
jb
push
testb
arpl
iret
cmpsb
cmp
pop
and
push
push
sub
or
adc
iret
jp
mov
shll
stos
inc
mov
les
das
popf
mov
into
add
rclb
inc
fwait
xchg
cmp
dec
sarl
jns
push
pop
dec
lret
cwtl
jb
or
cmp
cmp
jle
mov
mov
clc
and
cld
lcall
cwtl
fcompl
lret
negb
ds
stos
push
pop
aas
lahf
jp
lret
in
icebp
mov
mov
add
outsl
mov
xchg
test
pop
aad
aas
inc
dec
outsl
cmp
loope
jnp
iret
mov
and
lcall
imul
inc
lret
lahf
lcall
push
test
fisubrl
imul
fadd
sbb
shrb
cmc
inc
cmp
pop
push
data16
out
loopne
mov
add
stos
fsubrp
mov
pop
cmpsb
aas
cmp
dec
into
push
or
xor
pop
push
pop
cmp
cli
add
or
rclb
popa
testl
aas
idiv
cmp
outsb
lcall
mov
adc
sarb
mov
jp
paddb
xchg
icebp
ja
push
adc
and
mov
cmpsl
aad
and
jmp
push
paddq
inc
movsl
jmp
pop
push
lcall
fiaddl
decb
je
cmovne
movsl
nop
int
call
pop
push
fstl
lea
push
sbb
xor
and
xchg
fwait
mov
adc
mov
jo
test
das
push
incb
jl
sub
test
mov
xchg
stos
jecxz
xchg
adc
mov
inc
mov
add
jmp
outsb
adc
imul
push
popa
jne
ret
inc
test
popf
push
ret
testl
hlt
cltd
ret
mov
or
dec
pop
pop
sub
mov
xchg
mov
sbb
pop
pop
push
cmpsl
notl
call
pop
outsb
or
push
bound
dec
cmp
jnp
mov
insb
cld
lds
xor
mov
lods
sbb
push
inc
sub
ret
sahf
mov
andl
or
jg
sbb
and
jne
add
adc
mov
pop
fs
imul
notl
ljmp
lea
dec
or
adc
ss
sbb
sarb
sbb
mov
fbstp
pop
pop
sahf
jae
xor
test
ret
mov
cmpsb
sti
push
sub
orl
push
adc
adc
pop
add
mov
jnp
pop
out
outsb
in
popf
ret
mov
ret
mov
ljmp
dec
push
or
movsb
out
push
cmpb
test
fstpl
sub
cld
imul
jne
sahf
aam
sub
xor
sti
out
push
scas
pop
mov
frstor
fistpl
xchg
sub
push
xchg
sbb
and
jmp
adc
mov
jecxz
xchg
pop
outsl
mov
mov
sbb
inc
jns
add
inc
int3
dec
or
jmp
arpl
add
aad
or
loopne
jnp
xlat
push
mov
xor
rolb
mov
pop
mov
adc
ja
xor
popa
adc
aas
into
push
test
subl
outsl
sbb
cmpl
in
arpl
inc
mov
arpl
push
test
lcall
mov
sbb
fcmovb
out
xlat
mov
iret
inc
nop
rorb
and
adc
or
cltd
jb
aas
inc
or
cmpsb
dec
xor
loope
aad
stos
xor
pop
mov
in
shr
test
iret
pop
mov
push
push
pop
jmp
arpl
jle
add
mov
cltd
pop
mov
nop
call
mov
pop
pop
leave
stos
sarb
push
outsb
shrl
push
mov
xlat
mov
movsb
into
sub
inc
add
mov
and
and
xlat
mov
shlb
fildll
sub
mov
cwtl
fisttpll
xchg
xchg
fidivl
pop
in
sarl
gs
and
das
iret
aam
and
cmp
push
pop
movsl
test
movl
push
mov
add
xor
inc
push
and
hlt
jle
sbb
or
sub
rolb
movsl
push
scas
movsb
push
pop
lods
lock
cmp
decb
xor
pop
out
arpl
mov
xchg
and
mov
hlt
sub
mov
push
xchg
jnp
ds
leave
ret
adcl
int3
sub
aad
xor
out
push
jnp
inc
scas
cmpsb
aam
nop
out
jecxz
mov
mov
testl
les
xor
aaa
jp
pop
repz
jmp
movb
stos
push
out
mov
cltd
mov
jle
jge
and
push
jo
adc
sub
sahf
js
xchg
xchg
test
xor
loop
out
mov
fs
shlb
jge
aaa
mov
loopne
jmp
fisubrl
pop
gs
push
clc
cmpsb
inc
lods
sub
repnz
mov
pop
aas
xchg
sub
dec
jl
aam
repnz
pop
push
mov
lahf
stc
xlat
push
hlt
cmp
and
jg
mov
pop
jo
sub
inc
cmpsl
stos
addr16
push
pushl
loope
adc
jns
adc
fs
mov
inc
pop
repnz
outsb
scas
ficompl
pop
je
scas
das
add
inc
aaa
lcall
adc
xchg
orb
sti
outsb
rcll
hlt
fwait
mov
mov
dec
ret
push
cmpsb
mov
add
adc
outsb
imul
fbstp
fucomip
in
repnz
push
hlt
out
popa
imul
mov
mov
sahf
adc
lret
mov
jl
pop
daa
test
sub
xchg
int3
add
lock
or
adc
call
jns
pop
divb
outsl
les
cmpsb
repnz
daa
jae
cmp
cld
adc
arpl
decb
test
mov
push
out
dec
gs
lea
dec
add
push
clc
add
dec
mov
xchg
jecxz
test
push
sub
fistpll
inc
std
pop
pop
add
push
mov
push
dec
lods
aaa
pushl
cmpsl
pushf
fmulp
push
xor
pop
shrl
and
popf
dec
dec
idiv
orl
cmp
jmp
xor
imul
sub
insb
push
inc
popf
xchg
mov
add
in
hlt
mov
cmp
pop
lock
icebp
fldl
xchg
int3
pop
inc
sub
iret
lret
fbstp
sub
in
push
ja
add
ds
mov
fadds
lods
popf
aad
cwtl
sbb
outsb
imul
imul
data16
inc
iret
sub
jg
or
lret
sarb
in
fildll
ret
aaa
cmpl
and
addl
dec
inc
sub
bound
sub
mov
push
out
inc
cmpsl
std
int3
div
mov
dec
sub
mov
adc
pop
mov
xchg
call
bound
push
push
add
notb
iret
push
mov
popa
xchg
faddp
jmp
adcb
cmp
xchg
pop
jns
mov
push
shrb
jae
jecxz
les
cmp
mov
or
dec
xchg
pop
ret
loope
pop
mov
inc
icebp
mov
pop
icebp
sub
call
lods
popf
push
mov
push
rcrb
xor
add
inc
dec
in
sbb
pusha
sbb
inc
sub
mov
stos
cmp
pop
push
notb
add
sbb
jg
cld
scas
cmc
shll
stc
insl
lcall
imulb
mov
mov
add
cmp
xchg
ja
rcr
add
lcall
movsl
lcall
push
cs
jmp
pop
mov
lret
mov
add
icebp
xchg
in
xchg
shr
xor
mov
sbb
lcall
in
sbb
ss
jmp
pop
add
xchg
sbb
repnz
sub
test
sbbl
call
sub
adc
shll
cmc
dec
sbb
fbstp
testb
mov
mov
or
mov
pop
or
pop
lods
push
test
mov
data16
sub
in
das
imul
pusha
or
pop
pop
and
cltd
inc
push
or
dec
incl
mull
cmc
xor
cmp
jns
push
sub
xchg
push
mov
mov
jne
mov
or
shrl
push
dec
jb
fldcw
es
mov
mov
in
aaa
loopne
xchg
out
cltd
xchg
cwtl
mov
js
inc
sbb
dec
lcall
mov
mov
push
clc
push
pop
dec
mov
repnz
cld
int3
sarb
mov
jns
repnz
inc
out
adc
push
out
sub
push
add
mov
fisubs
pop
sbb
or
pop
pop
popa
fwait
int3
cmp
pop
jno
lret
rcll
jb
daa
xchg
jge
pushf
out
subb
call
mov
sub
aad
rclb
sbb
xor
sub
push
mov
jg
test
popf
lret
inc
push
ficoml
clc
testb
mov
jbe
fcmovnu
jmp
dec
js
fiaddl
lea
les
ret
fisttps
gs
push
push
ret
jp
in
mov
inc
push
jle
jbe
daa
fs
xor
adc
add
mov
imul
mov
sbb
pop
mov
jmp
push
cli
add
push
decb
aam
test
int3
xor
adc
clc
and
sub
ss
cmp
xor
inc
xchg
shl
xchg
pop
das
xor
cli
xchg
adc
cmp
push
mov
add
xor
pop
std
pop
jo
or
jne
shrl
jge
test
fmul
jns
stc
mov
push
or
and
int3
orl
popf
mov
add
mov
dec
mov
scas
cmp
sub
aam
in
cs
push
sub
fisttpl
xchg
dec
js
rorl
cmpsb
sub
sbb
iret
pusha
ret
pop
sbb
add
stos
inc
inc
outsl
mov
xchg
test
jmp
mov
imul
mov
das
mov
lret
sbb
ret
stos
stos
add
aad
pop
sbb
imul
mov
mov
int3
mov
or
int
jmp
stos
imul
pop
sarl
sub
cld
inc
sub
out
cltd
lods
mov
add
cwtl
cmp
pop
andl
addr16
mov
andb
mov
xchg
bound
lret
mov
daa
aad
and
xor
push
movsl
in
jne
mulb
stc
adc
sbbb
jle
sub
jg
stc
mov
and
mov
dec
sbb
push
fisubrl
or
xchg
out
or
pop
mov
jae
pop
mov
fstpt
mov
mov
lret
or
stos
inc
int3
sahf
push
adcb
sub
sbb
push
inc
insb
cmp
cmpsl
adc
push
mov
cmp
push
push
sub
fs
and
or
add
fcoms
push
jnp
xchg
mov
addr16
hlt
dec
sbb
inc
addl
aam
ficoms
inc
int
lcall
or
sbb
into
push
mov
rorl
into
lds
dec
aaa
test
mov
jb
xchg
jne
test
mov
insl
mov
repz
aad
add
pop
adc
outsl
and
mov
xchg
and
mov
insl
xor
fs
push
sti
ljmp
scas
iret
imul
stos
mov
fmull
popf
jge
push
push
fpatan
dec
popa
push
imul
pusha
lea
and
adc
leave
cs
push
or
fcos
inc
adc
and
jbe
xchg
fbld
testl
mov
data16
mov
ja
out
push
mov
pop
xlat
sahf
jl
xor
stos
xchg
jo
dec
jg
and
les
jo
es
sbb
js
sub
and
shll
int3
loope
fidivl
mov
adc
clc
xchg
adc
jb
out
lods
out
add
shlb
call
inc
cli
or
dec
call
push
mov
fwait
mov
jmp
inc
and
fmull
jge
mov
je
and
inc
aaa
lods
movsb
test
cmp
cmp
adc
leave
out
xor
inc
cmp
dec
in
stos
jns
mov
hlt
pop
les
sub
adc
jnp
call
test
nop
cmp
cld
cmp
loope
add
ret
jmp
shl
pop
adc
dec
sub
out
shrl
movsb
negl
pop
jp
sbb
cld
loopne
test
jb
add
sbb
outsl
addr16
pop
pop
lds
mov
fimuls
inc
xchg
mov
push
scas
dec
ds
fstl
leave
rolb
out
out
fsts
out
es
lds
mov
jb
shll
neg
loop
lret
scas
dec
pop
mov
lahf
nop
int
ret
aam
es
and
mov
insb
sti
jecxz
popf
fsubs
fisubs
cwtl
pushf
mov
or
pop
xchg
jl
xchg
jae
cmp
ljmp
sub
stos
fscale
push
inc
cmpsl
out
je
mov
ret
jnp
addr16
arpl
mov
cltd
mov
jnp
movsl
xchg
mov
lea
mov
into
mov
xorl
push
loope
xor
sub
fnstsw
mov
sub
scas
mov
dec
mov
xor
mov
xchg
fs
inc
push
xchg
add
adc
addr16
xor
cld
ret
pop
sbb
out
xchg
mov
cmpsl
or
enter
sub
push
int
mov
and
push
mov
aaa
adc
adc
xor
sbb
out
ljmp
dec
inc
imul
fsubl
movsb
jae
or
xor
sahf
data16
sub
adc
cmp
cli
in
jbe
pop
dec
outsb
jno
jecxz
push
xor
mov
add
jmp
arpl
jge
iret
mov
rcrb
add
lea
or
es
fstpl
inc
xchg
cmp
sahf
push
mov
jb
inc
aas
fs
lcall
pop
fildl
mov
adc
xchg
test
lahf
or
inc
mov
pop
mov
enter
xor
or
sub
loopne
adc
shll
notb
out
cli
add
dec
in
push
lods
test
daa
mov
or
cmpsb
inc
add
sbb
aam
loopne
or
bound
jle
jbe
lret
jae
pop
jo
test
xor
je
mulb
push
mov
add
mov
call
add
enter
mov
outsl
add
xchg
sub
jle
std
and
sub
insl
in
lahf
dec
ss
fnclex
cld
bound
sti
stos
sbb
test
mov
push
pop
cmp
adc
les
gs
jae
adc
insb
add
jg
movsb
or
repnz
and
mov
mov
scas
cs
sub
xchg
cli
je
jns
dec
lret
mov
std
push
mov
mov
xchg
dec
push
push
cmpsl
pop
mov
inc
jl
xchg
and
icebp
cmp
int3
ret
fidivrs
sbb
xlat
and
and
push
xor
push
push
aas
mov
xchg
add
imul
out
jns
subl
aas
or
push
push
in
out
pop
in
sub
jl
pop
clc
mov
out
out
mov
adc
inc
insb
sbb
bound
lods
and
scas
sbb
adc
mov
pop
ljmp
and
stc
xor
cmp
lods
pop
inc
out
lahf
jb
jo
out
xor
hlt
sub
lea
test
adc
pushl
sbb
imul
movsb
pxor
stc
gs
test
dec
and
lock
out
adc
test
addr16
cltd
add
push
add
or
mov
pop
sbb
xchg
sbb
loope
cmp
pop
ds
inc
movsb
dec
lods
pop
mov
cld
ds
sahf
insb
sarb
mov
cmpsl
dec
in
lcall
out
mov
mov
push
mov
inc
rclb
or
pop
hlt
rep
xchg
adc
cmp
leave
adc
adc
sub
loope
mov
lock
fldz
sbb
jmp
dec
repz
mov
adc
xor
aas
leave
call
sbb
test
push
inc
popa
mov
inc
adc
loop
insb
iret
lods
test
add
fnstsw
fs
xchg
push
push
dec
and
sub
jmp
repz
pop
cmc
adc
push
adc
iret
sbb
sbbb
push
pop
inc
aaa
sub
lods
jmp
inc
insb
outsl
and
and
lods
cmc
outsb
cli
dec
ds
jnp
in
das
mov
subb
sti
mov
mov
inc
or
clc
fcmovnbe
cmp
outsl
xlat
cmp
imul
xchg
adc
inc
mov
mov
in
cmp
test
mov
dec
xchg
cld
repz
lods
mov
push
push
cwtl
and
fldenv
jne
dec
das
repnz
dec
fnsave
push
sbb
sbb
sbb
in
int3
inc
insl
sub
fdivrs
sahf
mov
fcmovnb
ja
xchg
add
pop
test
sub
popf
push
and
lods
or
pop
shlb
cmpsl
mov
fs
jne
fnstsw
gs
push
test
push
jae
mov
incb
pop
lods
push
lea
enter
incb
cmovne
mov
mov
jmp
add
inc
aas
inc
je
cld
test
adc
inc
add
andb
pop
repnz
xchg
gs
jo,pn
ss
jae
js
cli
or
std
mov
jg
mov
jg
mov
aas
ds
or
in
std
ljmp
xchg
mov
pop
fisubrl
iret
add
movsb
mov
call
adcb
mov
mov
loopne
mov
outsl
popa
xor
add
scas
mov
jbe
cmc
push
mov
xor
rcl
daa
faddl
dec
adc
mov
cwtl
push
sub
call
inc
mov
xchg
test
out
popf
stos
lahf
popf
in
ss
out
xchg
int
mov
rcrb
jp
adc
cmc
xlat
lret
push
cmpsb
out
jne
inc
cmp
arpl
add
and
test
or
adc
adcl
call
pusha
jmp
mov
jle
pushf
jl
adc
mov
rolb
sbb
inc
pushf
insl
xlat
je
cmp
mov
sarl
hlt
lahf
mov
pushf
cmpsb
mov
in
push
dec
sub
mov
jg
pop
sti
arpl
cmpb
xor
xchg
jp
push
cmp
mov
sub
cmc
mov
jne
push
pushf
xchg
mov
enter
data16
and
mov
out
fldl
jp
pop
cmpsb
out
mov
outsl
push
jnp
mov
push
lahf
push
adc
or
jmp
mov
mov
cmp
ja
ret
sub
mov
push
lea
ror
ja
xchg
sarb
jno
xor
out
pop
mov
shlb
addb
cli
dec
inc
leave
in
pop
sub
sbb
mov
les
push
inc
push
xor
push
xor
cmp
mov
adc
pop
lea
mov
add
xor
add
mov
xchg
cmc
aam
rcrb
daa
jmp
xor
lock
je
and
pop
cmp
xchg
mov
mov
fsubl
mov
adc
jns
out
fs
sub
jg
push
cmp
lods
lahf
fsubs
fsubrp
fsubrs
jae
mov
xchg
adc
inc
mov
mov
in
daa
loopne
mov
or
pop
out
int
jbe
fdivrl
dec
call
and
adc
and
fwait
xor
nop
jbe
inc
inc
mov
pop
pminub
xchg
adc
iret
fiaddl
push
jl
adc
paddd
hlt
or
cmpl
inc
mov
jmp
les
sub
ret
pusha
imul
and
out
inc
xchg
pushf
dec
sbb
js
stc
ja
bound
xor
ret
arpl
adc
and
repz
bound
xor
ret
arpl
adc
and
repz
xchg
adc
and
inc
jae
arpl
adc
and
mov
cmpsb
repnz
jecxz
xchg
adc
loop
sub
arpl
int3
lret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
andb
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
and
add
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
and
add
add
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
and
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
and
add
add
mov
and
add
and
add
and
add
and
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
sbb
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
add
pushf
add
shlb
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
aas
daa
add
sub
add
and
add
sbb
add
adc
add
or
add
add
add
cld
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
daa
add
pusha
daa
add
insb
daa
add
andb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
clc
daa
add
sbb
add
inc
sub
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xchg
sub
add
add
lods
sub
add
add
les
add
xlat
sub
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
lock
add
sub
add
sub
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
xchg
push
cmpl
int3
mov
xchg
addb
xor
inc
jge
pop
arpl
lods
cmpl
in
ret
std
repz
fstl
das
add
push
push
inc
popf
jae
arpl
mov
mov
shl
ret
in
aad
adc
add
inc
js
sbb
cmp
lods
adc
stc
rcll
xchg
add
and
push
sbb
cmpsb
fnstenv
fadds
and
sbb
aas
cld
inc
add
inc
add
inc
adc
aad
sbb
push
sub
popf
adc
or
jnp
sub
lea
or
std
int3
mov
cwtl
repz
jge
mov
pop
std
cmpb
int
cmp
adc
ret
add
xorb
aaa
insb
xchg
negl
fwait
jge
int
add
popf
loop
add
stos
sbb
xchg
dec
jbe
insb
mov
inc
push
sub
add
imull
inc
sub
sub
sbb
outsl
ds
or
or
lods
subl
in
ret
std
repz
les
xor
and
jne
push
dec
arpl
aad
ljmp
mov
mov
inc
push
pop
dec
jb
add
cs
dec
aaa
xor
std
cwtl
xchg
sahf
scas
iret
repz
add
pop
ss
pop
adc
and
cli
in
out
mov
std
repz
fstl
sub
and
jae
arpl
lods
cmpl
in
ret
std
repz
fstl
sub
and
jae
arpl
lods
cmp
lods
xchg
int3
sub
xchg
sahf
shl
adc
xchg
sbb
inc
pop
xchg
mov
repnz
inc
pop
add
test
je
mov
jl
cmp
push
test
adc
push
repz
adcl
xor
mov
xchg
in
pop
jo
xchg
mov
cmpsb
mov
or
inc
pushf
iret
mov
icebp
movsb
dec
push
in
dec
subl
cmc
pop
cmp
sbb
dec
push
adc
adc
loop
pop
xor
arpl
push
sub
movsl
adc
mov
test
pop
mov
dec
mov
lcall
pop
xchg
fs
sbb
jb
jb
lcall
inc
push
imul
ja
jge
add
je
insb
pop
pusha
fisttpll
adc
xor
aam
mov
xorl
dec
pusha
pop
or
mov
cmpl
test
sbb
fcmove
jns
xor
jecxz
mov
testb
push
sbb
mov
pop
pop
les
or
cwtl
dec
jp
jle
jne
push
jnp
bound
xchg
adc
das
decl
jne
push
stos
notb
jmp
jns
push
int
movsb
mov
xor
xorl
lea
mov
pop
sbb
movsb
push
xlat
mov
and
push
xchg
jecxz
sub
das
orl
lret
sbb
inc
in
sbb
mov
lcall
divl
sbb
fsubp
push
jo
imul
fwait
decb
adc
pop
xor
std
ja
push
mov
jns
sbb
add
inc
add
in
lods
mov
mov
fimull
xchg
mov
les
test
out
mov
jge,pt
sbb
lock
fisttpll
lea
stc
lds
mov
or
lahf
xchg
jg
enter
ret
dec
aas
shll
add
test
and
mov
fldt
lea
aaa
imul
xchg
fs
sub
lcall
imul
pop
and
sbb
pop
stos
inc
nop
xor
repz
leave
addb
test
das
stc
pop
xor
mov
enter
testl
popf
xchg
aas
cmp
outsl
cwtl
xchg
xchg
mov
stos
fists
aad
aas
repnz
movsl
lret
dec
loope
sub
lret
out
or
and
mov
adc
cmp
popa
cmpb
push
ror
push
inc
inc
sbb
inc
xchg
imul
insb
adc
roll
in
inc
adc
decl
out
mov
jmp
or
push
and
jbe
or
mov
ret
dec
jg
jo
lret
sbb
mov
js
in
add
ret
add
sub
push
add
mov
mov
jmp
jae
xchg
cwtl
push
mov
cmp
sub
push
cwtl
popf
insb
jl
ja
movsl
xchg
sub
mov
dec
fdivrl
popa
pop
lcall
sti
loope
pop
push
stos
sbb
in
mov
inc
sbb
lret
dec
mov
mov
inc
add
test
stos
loopne
push
enter
or
add
stos
adc
es
inc
clc
stos
into
popa
mov
jle
xchg
mov
mov
fisubs
pop
add
add
aaa
pop
sbb
das
shll
adc
dec
notl
adc
add
inc
pop
stos
enter
xor
xor
fldcw
mov
add
dec
fdiv
xchg
rolb
xchg
lahf
out
les
fsubs
or
int3
mov
adc
inc
xchg
cmp
sti
sub
push
out
lret
lcall
lahf
add
jmp
jns
sub
dec
jg
cmc
test
test
adc
cmp
rcll
jp
pop
xchg
call
or
mov
xor
dec
push
pusha
xchg
mov
insb
jge
lahf
and
adcl
jbe
push
ret
adc
mov
xchg
cmp
or
xchg
xchg
repnz
add
pop
and
sahf
or
lcall
in
inc
aas
xchg
rclb
repz
popa
mov
sbb
sbb
push
imul
cmp
aas
push
push
jmp
push
fwait
mov
jge
mov
imul
xchg
xchg
fisubl
xchg
inc
das
xor
scas
push
lds
cmp
movsl
jg
jne
xchg
pop
push
cmp
std
stos
aas
ret
xor
xchg
inc
inc
je
leave
dec
push
sbb
pop
sub
pop
insl
lret
imul
loop
out
scas
lcall
fstpt
mov
in
add
mov
out
jmp
and
stos
and
xor
and
insb
sbbl
jb
add
sub
jge
pop
loop
cmp
xor
scas
test
mov
les
loop
xchg
repz
push
mov
push
xchg
dec
ss
xor
loope
mov
lods
adc
addl
pop
inc
inc
push
cmp
lds
push
sub
xchg
xor
xor
movsl
into
cld
xchg
leave
ret
cmp
dec
jbe
mov
cs
or
test
dec
stos
cmp
xor
mov
ss
pushf
ret
mov
js
xchg
imul
std
sub
push
xor
mov
imul
sbb
dec
sub
cmpsl
iret
jg
inc
hlt
mov
aaa
adc
push
rol
dec
dec
xchg
clc
dec
mov
jo
out
jne
lahf
ret
minps
es
fcmovnu
sbb
or
mov
xchg
jns
arpl
add
and
sub
je
inc
stos
xchg
sbb
pop
in
jne
pusha
arpl
jae
mov
mov
sbb
repnz
mov
das
mov
testl
lret
fldcw
dec
mov
sub
data16
pop
outsl
dec
push
add
xlat
mov
mov
hlt
xchg
fwait
mov
push
insb
xorl
lahf
cmpsb
jo
sub
pop
xchg
stc
ja
fistpl
subb
cmpsb
repnz
nop
xlat
pop
cmp
fs
push
pavgb
mov
inc
shlb
fdivrl
fsubr
sub
fcoms
or
xor
das
pushf
push
loop
pop
dec
xchg
cld
imul
fs
mov
jp
xchg
push
in
jne
mov
pop
pushl
je
pop
mov
sub
push
scas
lock
mov
das
stos
in
xchg
repnz
stos
sub
leave
mov
aas
cmpsl
xchg
fstp
int3
jmp
add
mov
push
inc
insb
js
pop
out
fs
inc
xchg
aad
test
dec
imul
lret
out
and
cmpsl
scas
lods
sub
fnstenv
movaps
aad
cmp
mov
arpl
jb
mov
sti
sbb
mov
daa
cmp
fwait
notl
cld
xor
subl
mov
mov
add
loop
icebp
pop
mov
scas
push
call
push
or
and
and
shl
in
fstps
in
ja
push
cltd
mov
pop
add
mov
add
xlat
jns
dec
mov
mov
shll
fwait
push
lds
data16
fcoml
pop
xor
sbb
mov
jg
sub
aam
arpl
inc
dec
lret
repz
cmpsb
cld
ret
adc
push
add
pop
andb
lods
mov
sahf
fldt
mov
add
and
mov
pop
insb
adc
call
mov
sub
movsb
add
std
mov
pop
add
pop
adc
aad
cli
mov
push
lahf
mov
sbbl
movsl
xor
jnp
test
mov
daa
js
mov
adc
iret
je
daa
loopne
add
dec
cli
add
or
sub
xchg
dec
popa
out
inc
mov
mov
cwtl
dec
inc
cmp
pushf
stos
add
mov
inc
repz
stos
ret
insl
jle
xchg
int
popa
jg
mov
lcall
push
aam
lods
adc
imul
mov
repnz
push
popa
inc
sbbl
les
fbld
fwait
dec
mov
in
clc
popa
mov
mov
outsb
outsl
mov
in
ret
xchg
cmp
sbb
mov
dec
outsb
bound
insl
jbe
clc
push
pop
pop
stos
mov
mov
inc
data16
dec
in
sbb
pop
adc
movsl
lcall
out
dec
je
test
cmp
dec
pushf
shr
xor
gs
into
or
add
adc
pop
adc
mov
jl
jne
mov
dec
add
push
filds
fcoml
jmp
add
popf
mov
cmc
outsb
and
inc
adc
arpl
dec
test
cwtl
mov
inc
push
mov
cltd
sbb
fildll
pop
add
notb
add
movsb
fsubs
adc
mov
sub
insl
xor
push
or
cmpsb
jno
ljmp
adc
jecxz
iret
and
mov
sbb
clc
and
lock
push
sbb
sbb
adc
and
adc
ja
aas
shlb
xor
push
int
or
mov
cmp
gs
int
add
push
inc
add
sbb
in
sbb
cmp
mov
sahf
xchg
fmull
sbb
jnp
and
into
icebp
jp
lock
lds
lock
test
pop
mov
rclb
xlat
mov
mov
adc
xchg
mov
jle
sbb
pop
mov
stos
hlt
testl
hlt
pusha
or
rcll
pop
pop
adc
dec
cmp
mov
sub
aad
loop
jae
aam
jbe
rol
out
push
jmp
bound
dec
pusha
sbb
subb
and
je
mov
test
adc
in
mov
data16
mov
movsl
lcall
cmp
insl
mov
ror
fiadds
push
movl
popf
movsb
inc
xor
pushf
pusha
push
int
inc
test
fwait
pop
push
sub
mov
xchg
loope
rcrb
rorl
jp
jbe
and
stos
add
inc
push
cs
std
out
jbe
cmp
push
cmp
jne
out
cli
in
jl
dec
adc
xor
loope
ror
jecxz
xchg
ds
out
aad
dec
sub
xchg
sbb
aas
in
inc
mov
mov
mov
jno
add
dec
mov
daa
rcll
scas
daa
xor
and
je
mov
mov
les
insl
push
add
les
and
out
rolb
mov
shr
xor
cmpsb
mov
mov
add
add
js
fdivrs
stos
sarl
sbb
push
push
out
mov
jo
inc
ret
pop
pop
mov
jl
ret
dec
xchg
stos
fs
stos
sub
inc
repnz
pop
or
adc
inc
int3
mov
mov
cli
mov
fsincos
dec
pop
add
mov
lret
adc
lcall
inc
mov
jle
xchg
repz
lret
sbb
add
sbb
sub
mov
inc
mov
stos
sub
push
xchg
or
in
push
push
add
lock
bound
pop
jno
jb
jle
or
pop
mov
lahf
test
and
aam
mov
fs
sub
sahf
mov
insl
bound
jmp
imul
jmp
nop
and
or
cmp
test
and
into
pop
jmp
ds
mov
adc
dec
scas
mov
loop
orl
lea
push
or
or
jmp
xlat
adc
xchg
sub
and
decb
xor
sbb
cs
add
in
in
mov
ss
pop
and
push
popf
cmc
mov
adc
test
xor
xor
nop
mov
jecxz
sbb
jae
scas
xor
jne
jo
lock
mov
push
jp
loopne
insb
lahf
jnp
adc
outsb
fxch
bound
cs
out
add
adc
lcall
inc
mov
lea
enter
dec
dec
mov
push
cld
push
lock
jecxz
int
outsb
push
popa
or
stc
jle
scas
loop
push
mov
mov
jae
iret
pop
fadds
adc
rorl
test
sbb
icebp
out
jmp
jae
in
ret
cmp
push
daa
imul
xchg
setnp
ds
in
outsl
cli
fisubrs
repz
xor
popa
lahf
out
mov
ss
xchg
int3
pop
cmc
popf
je
cltd
push
adc
movsb
inc
rcrb
in
loope
ja
lahf
gs
mov
xchg
mov
jo
lods
rolb
fidivrl
cmp
into
insb
adc
push
xchg
outsb
jp
push
adc
inc
xor
int3
sbb
mov
jnp
mov
cmp
les
cmpsb
xor
jge
fcoml
pop
cltd
mov
inc
cmp
cmp
insl
pop
rcrl
xlat
roll
and
mov
loop
mov
pusha
push
repnz
icebp
add
fisubrs
pop
shrb
fwait
inc
cmp
sbb
mov
push
push
ret
and
push
into
mov
jno
push
mov
mull
ljmp
addr16
xor
mov
inc
add
insl
xchg
stc
iret
xor
popf
cmp
xchg
mov
inc
fdivs
stos
mov
fistpl
xchg
icebp
xchg
xor
jb
inc
test
into
pop
rcrl
pusha
inc
vandnpd
arpl
je
push
fwait
mov
aad
sbbb
shr
shr
inc
jge
cmp
or
or
inc
xchg
add
in
adc
ds
into
out
xchg
imul
fchs
and
mov
icebp
xchg
stc
push
inc
inc
xchg
mov
neg
jecxz
jns
jnp
jo
jmp
data16
into
jae
and
adc
jle
inc
mov
inc
in
cmp
mov
cltd
dec
jo
pop
movsb
dec
cmp
addr16
test
std
cmp
aad
or
cmp
into
testb
inc
les
mov
sub
in
adc
pop
lock
add
fsts
sub
aas
sub
imul
jge
jne
cmpsl
rep
or
inc
call
icebp
movsl
cwtl
popa
mov
dec
shll
adc
cmp
subl
mov
arpl
lahf
data16
adc
and
pushf
imul
stc
stos
jmp
cmpsl
loope
repnz
insb
scas
int
sbb
shr
pop
inc
es
jbe
in
mov
inc
popf
rep
stc
fnsave
into
sub
bnd
movsl
rolb
mov
test
mov
mov
sbb
or
mov
test
test
sbb
or
outsl
ret
pop
pop
subb
dec
and
jbe
imul
lds
lods
cmp
lret
rolb
dec
fmull
stos
inc
pop
test
mov
jbe
push
sub
das
dec
mov
js
inc
mov
ud1
fwait
xor
repnz
je
movsb
or
sub
stc
aas
sbbl
loope
mov
shrb
scas
or
push
or
in
imulb
sbb
fnstsw
mov
das
inc
mov
pop
or
mov
pop
lcall
mov
push
out
je
addr16
lods
jmp
and
jae
inc
out
sbb
adc
push
loop
inc
or
cmp
popa
pop
loopne
aam
and
add
jl
xor
and
jle
lds
sbb
add
in
dec
or
out
pop
leave
hlt
pop
gs
adc
subb
flds
and
xchg
scas
les
lods
aam
pop
idiv
add
mov
ss
cwtl
pop
orl
push
xchg
pop
jle
or
jne
push
lods
fs
imul
push
stc
xchg
xor
add
mov
add
or
jmp
and
cmpsl
nop
lcall
lcall
adc
xor
mov
imul
popf
pop
negb
mov
xor
dec
cwtl
mov
jecxz
js
adc
adc
xor
rolb
cli
or
sub
fdivrs
repnz
add
mov
test
pusha
pop
in
in
out
pop
add
sbb
shrl
cltd
stos
xor
or
push
cmp
sbb
mov
js
loope
out
lods
lods
mov
xchg
out
lea
sub
push
sbb
adc
cmc
mov
mov
test
jbe
popa
sbb
xor
cmc
pop
add
lds
mov
push
mov
stc
outsb
sbb
push
xchg
dec
daa
jl
cmpsl
fnstsw
popf
in
xchg
mov
pop
jge
inc
adc
xlat
xchg
xor
mov
out
mov
movsl
in
hlt
xchg
dec
adc
dec
push
daa
stos
rcr
insl
out
mov
cmp
xchg
dec
or
mov
jmp
push
std
adc
or
sub
in
test
pop
fcmovbe
sbb
std
mov
and
mov
adc
lret
mov
cmpsl
gs
xchg
mov
sbb
xchg
loopne
push
or
jae
mov
mov
mov
xor
fstpl
dec
mov
lds
push
dec
xor
cltd
lahf
and
push
cmp
xor
add
inc
push
sub
sub
xchg
ret
adc
imul
xchg
clc
xchg
outsb
flds
xchg
hlt
sub
xor
out
fdivrl
rcrb
jo
sub
ret
in
push
jno
or
cwtl
fyl2x
lods
in
xchg
push
xlat
push
outsl
cmp
fsub
add
call
push
and
outsl
test
pop
fxam
xchg
push
fidivs
add
lock
es
push
mov
adc
test
int
out
outsl
xchg
lock
cli
hlt
mov
fisttps
mov
mov
sbb
cmp
push
leave
jl
xor
or
adc
cmp
add
cli
sbb
push
and
in
ret
mov
lahf
in
aam
add
sub
mov
fbld
jg
add
add
sub
stos
add
adc
fidivl
inc
cmp
stos
jge
stos
stc
lods
movsb
dec
dec
andl
imul
jl
data16
cmp
sbb
stc
jno
fcmovbe
repz
leave
test
outsl
cmpsl
scas
aas
cwtl
loop
insb
sti
jmp
xor
mov
outsb
in
lds
mov
jecxz
cmp
adc
dec
sarl
inc
mov
xchg
xor
rclb
jg
mov
cmp
inc
mov
pop
jns
sub
mov
inc
repnz
pop
pop
in
cmpb
xchg
outsl
flds
mov
pop
lret
popa
in
in
sub
mov
stos
push
ds
pop
mov
syscall
xor
popf
xor
shlb
fcoml
popa
or
mov
xlat
xlat
in
das
int
inc
add
dec
and
sbb
inc
jae
mov
and
test
bound
sub
inc
out
xchg
in
cmc
or
mov
addr16
enter
mov
push
sub
xchg
sbb
push
inc
mov
push
or
int3
xorb
add
andl
inc
movsl
push
push
and
aam
fisubrs
imul
sub
push
xorl
idivl
and
movsb
xchg
inc
jmp
mov
add
mov
xchg
out
jns
rcrl
adc
loope
xchg
mov
into
clc
adc
ja
fcmovnu
stos
iret
dec
and
data16
imul
into
int
mov
mov
sbb
out
iret
dec
icebp
pop
lods
clc
loopne
xor
cmpsb
add
rorl
or
pop
add
jg
lods
insl
loopne
fdivl
cmpsl
mov
sahf
in
xchg
and
mov
fmuls
dec
pop
push
clc
ror
sbb
add
xor
jp
test
inc
roll
lcall
in
ret
in
inc
add
test
jnp
add
sub
push
xchg
repz
sub
or
insl
outsl
dec
flds
sahf
es
fsubs
dec
jb
int
in
ret
mov
dec
sbb
aas
inc
jb
movsb
sub
lods
ja
mov
movb
gs
in
repnz
test
push
lods
push
mov
dec
ret
add
sar
test
test
repz
add
out
aaa
pop
int3
inc
sti
aas
and
xor
fisttpll
popa
push
adc
mov
xor
inc
dec
test
mov
les
pop
add
sti
jecxz
dec
lahf
inc
or
sub
jge
ret
leave
es
lods
push
js
cmc
dec
std
int
pop
sub
push
testb
inc
sub
data16
dec
mov
xchg
sub
xchg
ret
mov
pop
jecxz
and
or
mov
cmc
mov
outsb
cmp
jp
pop
add
xor
decb
outsb
test
imul
cmp
add
inc
cmp
adc
jae
nop
add
cmc
inc
dec
jge
sbb
push
mov
pop
cli
hlt
sti
ja
add
pop
add
mov
mov
mov
pop
out
jae
fistpll
mov
cli
cmp
sub
add
lock
mov
out
in
fimull
insl
loope
jl
in
jle
push
shr
jge
dec
movsl
add
inc
fstpl
push
loop
sbb
push
rcrb
fisubl
daa
fwait
jno
imul
pusha
fisubrl
adc
sub
push
das
adc
rep
or
std
jo
ret
and
xor
xchg
mov
out
xor
jmp
jnp
divb
adc
cltd
dec
or
mov
insl
aas
adcb
push
mov
sub
ljmp
cltd
cmp
and
adc
cmp
push
test
iret
mov
lahf
sbb
cmpsl
and
adcb
jno
rcr
cld
idivl
pop
jo
int
jecxz
int3
sbb
pop
pxor
test
outsl
jmp
test
xchg
scas
sarl
in
mov
sahf
pop
and
cmpsb
sub
push
push
sub
and
dec
das
in
or
out
pop
pop
jl
xor
fbstp
adc
sbb
sbb
sub
in
cmp
mov
sti
dec
sub
inc
sbb
les
cwtl
fdivr
outsb
pop
loop
mov
xchg
mov
mov
sub
rcrl
ss
in
mov
imull
hlt
movsb
xor
call
sbb
es
push
into
jno
add
dec
shll
jae
jne
in
aaa
dec
ss
lock
shr
ret
std
repz
fstl
sub
and
jae
arpl
lods
cmpl
in
ret
std
repz
fstl
sub
and
jae
arpl
lods
cmpl
in
ret
std
repz
fstl
sub
and
insl
inc
jge
dec
arpl
lods
cmpl
in
ret
std
repz
fstl
sub
and
in
orb
int3
int3
les
scas
mov
inc
mov
leave
pop
or
sub
push
out
pop
outsb
dec
mov
scas
mov
stc
into
stc
fldz
mov
pop
sbb
or
dec
imul
dec
xchg
mov
loopne
icebp
out
stc
rcrl
cmp
jl
add
out
cmc
mov
repnz
shr
xor
sub
cmp
es
mulb
ret
xorl
and
mov
sbb
es
xlat
icebp
xlat
rorl
loop
sbb
xchg
test
mov
imull
iret
ret
notb
jae
mulb
pop
test
push
pop
and
stc
push
lods
out
dec
sub
data16
ds
test
inc
sbb
pop
jle
jno
out
mov
push
pushf
out
sar
mov
sub
cs
jnp
jns
or
popa
and
arpl
dec
push
fadd
cltd
loope
icebp
inc
shl
negb
pop
outsb
dec
pop
scas
mov
into
stc
aam
fincstp
rolb
cmp
xor
add
adc
push
jno
inc
ja
in
mov
lret
sti
mov
lods
push
push
sub
insb
xor
imul
or
fucomi
lods
out
stc
mov
sti
sbb
push
dec
jnp
pop
or
or
cmp
scas
int3
cmpsb
lret
fldz
leave
push
cmp
sub
sbb
or
dec
imul
mov
fdivrp
into
jmp
push
cmp
sub
sbb
or
dec
imul
dec
mov
icebp
jb
sub
shrb
dec
popa
pushf
xchg
mov
lcall
mov
sbb
pop
dec
pop
rolb
pop
mov
push
cs
loope
test
imul
pop
mov
mov
je
dec
xchg
es
sbbb
gs
lcall
retw
sbb
dec
or
sub
bound
push
fimull
or
popf
cmp
shl
cmp
sbb
mov
mov
cmc
mov
nop
dec
std
ret
insl
fistl
xor
mov
jb
pusha
maskmovq
idivl
in
iret
mov
or
adc
imul
insb
psubsw
fs
clc
xor
int3
lret
jne
fdivl
enter
sub
inc
aas
or
imul
rcll
mov
adc
out
cli
outsl
mov
mov
loope
xchg
push
frstor
inc
xchg
les
in
cli
lock
sbb
push
or
fwait
pop
loope,pn
xorb
imul
jle
mull
push
xor
sub
and
roll
and
jmp
cld
xchg
repz
sbb
cmp
xor
lods
movsb
mov
repnz
add
sub
pop
pusha
in
sahf
pop
out
or
add
sarb
imul
clc
in
notb
xor
ss
pushf
push
cmp
ret
adc
xor
adc
push
add
or
add
movsl
mov
cmp
add
in
xchg
sbb
mov
hlt
sahf
sub
push
cmp
sbb
mov
or
das
push
rcl
stos
stos
sub
outsl
sbb
inc
fnstcw
add
adc
jae
stc
push
or
fdivs
gs
mov
popa
int
addr16
and
pop
push
sbb
lock
cmp
ja
or
imul
addl
mov
ffree
stos
int
inc
call
mov
fwait
out
aas
mov
dec
or
inc
inc
add
push
jle
or
int
out
int
aas
xor
and
xor
subl
lock
ret
into
call
sub
add
sbb
inc
pop
xchg
fcomip
xchg
sbb
cwtl
push
fstpt
data16
xor
pusha
push
sahf
lods
sub
adc
loope
repnz
or
add
jl
jne
push
push
inc
or
add
fcomi
jmp
mov
mov
hlt
inc
mov
ss
adc
pop
and
imul
mov
movl
sub
and
push
pop
xchg
pop
subb
sbb
ds
cmp
out
mov
ds
mov
fistpll
lret
je
mov
jne
in
or
repz
jns
std
ret
sub
pop
frstor
dec
in
lahf
out
mov
mov
xchg
mov
insb
push
std
les
sub
xor
jnp
sbb
mov
pop
insl
cwtl
xor
test
pushf
sbb
xchg
inc
push
insb
out
scas
inc
insb
dec
sub
aaa
jmp
scas
bound
testl
std
mov
jae
cwtl
mov
mul
cmp
cli
lret
in
sti
dec
jne
imul
pop
sti
call
nop
xor
popf
mov
inc
cmp
inc
pop
shrl
lret
add
scas
stos
pop
xchg
sub
ja
les
lds
and
and
pop
mov
stos
inc
add
out
sbb
imul
push
sahf
sbb
movsb
adc
fadds
icebp
add
in
sbb
jns
cmp
pop
clc
jno
cmpsb
call
sub
out
ds
adc
xlat
popa
icebp
adc
mov
test
repnz
cmpsl
popf
jmp
cld
mov
xorl
sbb
sub
inc
push
and
dec
outsl
ficoms
rcrl
jbe
loop
or
dec
mov
insl
jl
mov
jb
push
xlat
push
push
ljmp
cmp
push
mov
dec
add
test
lds
push
fstps
jns
push
lret
sahf
outsb
adc
dec
lea
cvtdq2ps
dec
out
hlt
sbb
lret
xchg
or
inc
xor
lods
ss
xor
orb
pushf
inc
mov
xchg
mov
inc
sbb
pop
mov
cmp
jo
fisubrs
mov
cmp
movsb
fcompl
dec
lods
sub
bound
add
jne
ret
outsb
mov
jle
pop
xchg
jmp
fisubs
inc
xchg
aam
push
and
mov
jmp
sub
push
popf
sbb
das
mov
jae,pn
xor
jle
and
cli
leave
lea
roll
sub
push
cli
das
or
add
push
push
fistps
int3
pusha
scas
add
leave
popa
pop
jecxz
push
fwait
add
in
xchg
scas
fbld
sub
aaa
fsqrt
jb
pop
add
add
sbb
jecxz
adc
testb
aad
and
push
pop
out
jnp
mov
clc
repz
mov
scas
cmp
ret
sub
jl
sub
push
pop
cs
lea
loope
xchg
add
out
sti
jg
and
scas
mov
add
arpl
jne
stos
push
mov
xor
data16
in
mov
xchg
inc
pop
mov
int3
mov
push
cmpsb
sub
xlat
fsubrs
push
aam
mov
sahf
int3
mov
or
and
iret
lods
addl
enter
mov
mov
jne
xchg
mov
mov
push
aam
jmp
mov
in
insb
fisttpll
roll
lods
out
pop
mov
cmp
cmp
pop
pop
jle
scas
add
rcrl
cmp
pop
clc
and
arpl
adcl
pop
xchg
stos
sarl
movsl
cmp
dec
xor
inc
add
icebp
mov
addr16
dec
pusha
cwtl
xorl
int
mov
iret
xor
lahf
orl
fisubs
inc
adcb
mov
sti
pop
pop
pop
sub
xlat
outsl
push
pop
mov
orl
gs
cli
movsb
jp
push
pop
les
fdivs
sbb
and
in
jno
mov
mov
roll
dec
in
sbb
cli
or
lock
jb
xchg
pop
aas
pop
lea
sbb
mov
inc
inc
scas
pop
sub
sub
les
and
int
ret
jmp
sahf
pop
push
clc
mov
cmp
bound
jp
int
xchg
or
imul
xor
and
shrb
pop
xchg
mov
int
movl
clc
adc
cmpsl
in
and
rcrb
dec
pop
mov
add
dec
hlt
ret
sbb
cmp
and
xchg
cmpsl
cmp
mov
rcrl
mov
sti
jmp
out
imul
or
gs
enter
xchg
stc
push
mov
lods
addr16
pop
cmpsl
jmp
mov
or
test
xor
jg
out
push
or
mov
inc
or
sub
sbbb
arpl
movsl
out
inc
insb
and
xor
test
call
mov
push
dec
add
xor
in
aam
xchg
imul
cmp
adc
fistl
loopne
mov
testb
cmp
das
mov
xor
xchg
mov
or
rclb
sbb
dec
inc
dec
std
mov
fistpl
xlat
jbe
dec
xlat
por
fisttpl
stos
add
mov
sub
add
xor
pusha
mov
mov
test
inc
or
sub
and
mov
movsl
frstor
and
jl
inc
loopew
enter
pusha
cmp
add
divb
roll
pop
sub
jns
ds
icebp
out
and
in
and
pusha
shll
loopne
jnp
push
mov
jecxz
nop
rorb
fisubl
push
pop
inc
inc
mov
lcall
dec
xchg
incl
jnp
mov
lock
or
test
jge
dec
sbb
call
or
pop
scas
sbb
shrb
mov
in
push
lret
jae
loope
xor
test
mov
stos
push
out
pop
call
jge
jb
xor
inc
scas
add
xor
and
mov
adc
mov
sahf
rolb
inc
jbe
pop
repnz
dec
out
jmp
mov
adc
mov
je
enter
out
push
not
mov
mov
js
pop
cltd
adc
fcompl
into
arpl
xlat
xlat
das
add
jg
sub
push
xor
int
push
push
xor
dec
test
lea
int
adc
cld
arpl
sub
sub
sub
mov
mov
fidivs
mov
adc
adc
sbb
push
jmp
pop
dec
pop
sbb
lods
sti
subb
push
jo
xor
xor
push
adc
aad
lret
sbb
lret
mov
push
adc
jne
lods
add
inc
jns
lahf
test
push
sbb
movsl
sbb
popa
dec
dec
sbb
incl
aaa
int
xor
in
mov
sub
mov
mov
add
mov
push
cmp
sahf
fwait
push
loopne
pop
or
adc
adc
pop
pop
cmc
in
sub
ret
scas
mov
addb
repz
fnsave
test
flds
inc
cmovp
xchg
jp
inc
push
adc
jae
cwtl
xor
aad
adc
push
arpl
adc
scas
inc
notl
sub
push
std
sahf
clc
pop
out
jne
dec
xchg
inc
jns
mov
fnstcw
xchg
dec
mov
mov
pusha
push
mov
jecxz
dec
inc
and
call
nop
int3
sub
cwtl
lret
lret
push
push
mov
addb
xchg
enter
mov
inc
lock
pop
push
int3
pop
gs
xchg
sbb
cmp
inc
fistpl
mov
sbb
dec
mov
lret
aas
ds
divl
pop
dec
das
inc
lods
pop
out
xor
mov
lods
cwtl
jbe
mov
dec
xchg
sbb
sbb
add
aad
push
mov
in
adc
pop
rorb
or
inc
cwtl
shll
cld
xor
xor
and
lcall
mov
xchg
in
stos
ret
lods
sbb
mov
jb
jno
pushf
inc
leave
movsb
push
mov
pop
and
add
add
ret
mov
adc
jge
jne
mov
inc
mov
gs
sub
mov
pop
jae
inc
lea
cs
sbb
mov
nop
mov
cld
fisubrs
es
imul
pushf
hlt
push
imul
je
push
add
out
or
outsl
xorl
push
pop
js
mov
rol
xchg
aaa
pushf
int
cmpsl
mov
ds
cmp
pop
popa
lock
je
and
jmp
pushf
or
data16
mov
jp
adcl
push
cmp
out
xor
push
rcrl
rol
cmp
xor
push
in
xor
clc
lds
ss
stos
cmpsb
test
adc
adc
hlt
adc
mov
jp
int
adc
roll
sub
cmp
add
aam
cmpl
iret
movsb
test
pop
dec
jp
mov
xchg
dec
push
pop
aaa
sub
xorl
into
or
jns
mov
jo
stos
mov
aaa
mov
int3
outsl
jno
scas
fsubr
stc
fildll
cmp
and
std
xchg
stos
popf
ja
daa
jb
xchg
push
out
mov
inc
dec
arpl
push
mov
adc
mov
stc
loope
mov
imull
sbb
mov
add
jne
mov
test
jne
sahf
and
mov
mov
test
and
and
or
jp
jb
mov
and
loope
dec
sub
inc
push
jnp
adc
seto
jecxz
gs
aam
ret
aas
push
imul
sarl
movsb
fiadds
or
mov
imul
int
jecxz
xchg
pop
into
adc
mov
lret
adc
rcrb
lods
pop
adcb
add
sbb
dec
xchg
and
cmp
inc
xchg
insl
pushf
adc
or
fnstcw
jbe
or
lods
dec
jae
out
adc
arpl
adc
andl
test
jno
shlb
mov
xchg
daa
cli
mov
jb
sahf
and
bound
mov
mov
mov
add
adc
jle
push
add
push
add
pop
or
test
data16
push
mov
ss
jge
adc
aas
jb
mov
xor
push
and
pop
or
in
mov
cmpb
cmc
popa
mov
or
adc
cmp
jge
test
xlat
bound
adc
repnz
test
sarb
or
pop
pop
call
lcall
in
dec
jbe
paddusw
mov
hlt
cmpl
ljmp
idivb
sbbb
sahf
std
fwait
inc
data16
lods
push
sahf
das
stos
cs
je
out
iret
imul
cmp
sub
je
shrl
xor
sbb
fsubrl
jo
pop
jnp
ss
jp
shrl
insb
fsubrp
popf
xchg
stos
xchg
adc
jp
mov
mov
or
pop
sub
mov
or
adc
fbld
jmp
jecxz
hlt
scas
stos
or
daa
add
imul
mov
add
pop
pop
push
mov
std
xchg
arpl
cld
popf
stos
cmpb
lds
cs
aad
mov
mov
popf
pop
and
out
sub
into
and
aad
jo
jo
stos
cmpsb
jmp
xchg
ds
pop
pop
mov
repnz
leave
call
adcb
fimuls
fsubs
jnp
ds
aaa
xor
aam
das
add
enter
ret
ja
or
daa
inc
cmp
ja
jmp
inc
xchg
ret
aaa
ljmp
leave
pop
xor
and
cmc
cmpsb
pop
rclb
inc
inc
add
push
addr16
and
and
inc
xchg
inc
js
jnp
es
stos
pop
push
push
lods
lea
loope
lods
sub
fwait
ret
loopne
lret
push
inc
inc
push
jae
and
jbe
jl
inc
js
std
bound
sub
fdivrl
dec
sbb
lahf
outsb
mov
add
xchg
pop
lock
add
jcxz
xor
xchg
je
in
or
and
imul
jae
xchg
cwtl
jns
push
loop
mov
movsl
cmp
js
push
outsb
flds
ja
aaa
jl
mov
int3
mov
push
push
mov
inc
cmpsb
mov
iret
outsb
mov
mov
sub
fs
mov
pop
mov
loope
cmc
icebp
ret
pushf
add
push
xor
lahf
adc
push
scas
and
push
pop
js
add
cmp
aam
shll
or
loope
xlat
lcall
mov
adc
push
hlt
jg
push
repz
mov
cs
inc
fcomi
imul
add
dec
cs
imul
orl
xor
loop
xorb
imul
inc
cmp
aas
xchg
xchg
or
into
imull
jo
out
movsb
cmp
pop
sbb
dec
mov
jnp
stos
out
cwtl
xor
fdivp
cmp
in
fisttpll
dec
push
ret
das
mov
in
pushf
outsb
jno
lret
jns
pop
ja
add
mov
and
push
adc
and
push
inc
cmp
icebp
std
sbb
mov
mov
xchg
mov
std
sahf
jp
jno
cmp
sbbl
jp
test
push
jmp
xorl
aam
mov
sahf
cmp
adc
movsb
or
xor
subl
cmp
popa
dec
lea
sub
lea
sub
pop
ret
stos
cmp
sub
adc
pop
pop
adc
cld
fcomp
push
rorb
out
xchg
dec
gs
mov
into
iret
xor
sbb
icebp
orl
subl
fisubrs
mov
negl
adc
in
aad
push
mov
adc
cwtl
imull
add
mov
rcll
repnz
pushf
cmp
add
ljmp
addr16
sbb
jp
lret
dec
mov
push
ljmp
xor
xor
fdivr
or
inc
adc
xchg
arpl
xor
pop
stos
sub
pushf
and
jg,pn
xchg
je
enter
por
dec
mov
mov
lea
aam
jbe
std
jno
xor
sbb
mov
xor
inc
push
out
out
adc
mov
mov
rcrl
jg
clc
jmp
cmp
dec
mov
mov
xor
inc
outsl
lods
push
in
jno
negb
push
push
movsb
and
je
sub
push
dec
sub
or
insb
xor
ret
mov
test
xchg
fadds
adc
stc
repz
jecxz
push
pushf
cmp
mov
daa
push
stc
hlt
sbb
gs
popf
lock
cltd
icebp
iret
push
mov
jbe
xchg
ja
pop
addr16
mov
fucom
mov
push
out
and
xor
pop
cld
shrl
mov
pop
fucomip
jle
pop
cwtl
jns
loopne
pop
dec
mov
jl
mov
out
sbb
fbstp
xchg
xchg
in
mov
mov
mov
adc
les
jne
xchg
loope
inc
or
mov
mov
add
out
cmpsb
cmc
jb
das
sub
pop
hlt
cwtl
cmp
xchg
mov
jl
aaa
add
iret
mov
push
idivl
ret
cltd
out
bound
sbb
sub
xchg
sub
inc
sbb
xor
and
dec
inc
jae
xchg
jecxz
loope
rcrl
fucomi
shlb
rorl
jl
xchg
imul
ficoml
das
pop
into
rorl
pop
and
sub
inc
lock
mov
inc
sti
xor
pop
cmp
mov
shl
das
out
dec
mov
xchg
test
jb
and
notl
cmpsl
out
repz
mov
in
xchg
xchg
cmpsl
lcall
arpl
and
and
dec
jbe
push
cmpsl
jbe
aaa
or
pop
sbb
out
fildll
out
or
rorb
lds
movsb
ds
mov
dec
jno
jae
popf
in
clc
mov
stc
or
inc
sub
rcrb
hlt
xchg
movsl
icebp
jmp
aaa
xchg
push
push
leave
repnz
decl
jl
cmp
sbb
sbb
sti
push
push
in
inc
push
add
xchg
add
xchg
mov
push
cmp
add
movsl
inc
xchg
call
jns
or
subl
aam
mulb
xor
rorl
cs
sbb
es
cwtl
icebp
flds
mov
mov
cmp
lret
push
and
push
mov
imull
inc
test
dec
lods
xor
mov
sbb
loope
sti
fs
mov
icebp
lahf
xchg
mov
bound
adc
lcall
xchg
jl
pushf
loop
arpl
sarl
mov
fsubr
push
shll
repnz
test
incl
push
cmp
pop
jns
push
or
cmp
jp
mov
mov
call
cmp
nop
inc
outsl
ja
jae
push
jle
sbb
nop
add
dec
or
push
jne
pop
inc
sbb
negb
leave
mov
pusha
data16
jae
cwtl
jl
leave
jmp
jnp
cmpsb
sub
test
aam
pop
add
stos
out
outsl
pushfw
xor
lret
sbb
shl
jg
pop
inc
cs
lahf
les
mov
out
push
cmp
fisttpl
in
sbb
aas
pop
push
in
push
mov
adc
sbb
adc
adc
je
cli
test
ret
js
jae
iret
inc
pushf
jbe
xchg
or
lea
xlat
cmpsb
mov
mov
lea
sub
jge
or
jmp
faddl
addl
pushf
lahf
dec
xchg
mov
pop
iret
inc
bound
jge
add
cmp
jle
mov
and
shrb
inc
fldt
push
mov
inc
insb
or
and
xchg
xor
ret
enter
and
inc
int3
add
iret
bt
mov
or
ror
adc
ds
loope
lret
inc
mov
aad
lods
jne
sti
scas
call
mov
mov
rclb
pop
insb
sbb
leave
cmpb
jl
mov
sub
sub
sub
mov
push
add
add
rorl
fimuls
test
sbb
dec
in
inc
filds
std
add
mov
push
and
add
ret
jg
pusha
andb
adc
loopne
adc
push
or
mov
pop
shrb
xor
das
mov
in
outsl
mov
cmpsl
push
rolb
lcall
fdivr
xchg
cmp
and
call
lret
cmpb
jae
xchg
mov
jno
aas
pop
out
popf
rcll
xor
repnz
clc
xchg
xchg
jmp
iret
lcall
add
add
aam
add
cwtl
dec
xchg
add
xchg
sub
mov
cli
imul
bound
cmp
mov
ds
sbbl
repnz
outsb
mov
les
jnp
push
xor
add
sbb
dec
movsb
das
push
shll
cli
adc
loop
mov
cmp
pop
fadds
cmova
xchg
inc
xchg
lods
mov
std
add
sbb
das
ret
push
lds
loopne
push
xor
pop
push
pop
int
and
movb
mov
cltd
ret
xchg
mov
fisubrs
ja
and
push
cli
sti
sub
mov
out
imul
mov
aad
jbe
lds
inc
enter
dec
js
mov
icebp
pop
lds
int3
ljmp
outsb
mov
jecxz
call
push
sbb
scas
outsl
dec
aad
inc
dec
push
mov
js
ds
inc
stos
add
lea
mov
scas
mov
stc
into
jmp
push
cmp
sub
sbb
or
dec
imul
mov
fdivrp
into
jmp
push
cmp
sub
sbb
or
dec
imul
mov
fdivrp
into
jmp
push
cmp
sub
sbb
or
jle
pop
dec
stos
mov
scas
mov
stc
into
jmp
loope
icebp
adcl
push
andl
int3
int3
int3
loop
icebp
fwait
shrl
mov
sub
sub
and
pop
add
jnp
mov
fwait
lods
stos
sarl
sub
jno
and
push
cmp
xor
imul
pop
mov
fwait
push
stos
or
lahf
jmp
sti
add
pop
xor
dec
pop
inc
or
add
mov
mov
pop
pusha
mov
outsb
push
loop
inc
fs
xor
loopne
and
fmuls
ds
lret
xor
jecxz
icebp
xchg
jg
in
lods
pop
fimuls
xchg
add
sub
mov
push
sbb
xchg
push
jb
imul
je
leave
out
sub
mov
pop
push
xchg
add
lds
xor
push
cld
lret
loope
dec
ss
inc
cmp
sbbl
push
inc
aam
aas
sbb
pop
stc
imul
sarb
adc
movsb
mov
enter
lods
dec
bound
add
outsb
mov
stos
sarl
sub
jmp
aaa
sub
imul
adc
stos
test
mov
lods
xchg
scas
popa
jb
sbb
xor
push
or
push
out
xchg
mov
mov
enter
je
les
inc
js
pop
pop
and
push
adc
iret
popf
shll
in
fildl
or
inc
sub
and
pop
add
jnp
mov
fwait
shrl
fildl
or
inc
sub
and
pop
add
jnp
mov
add
jns
mov
inc
xchg
cmp
dec
add
cmp
inc
mov
jmp
jmp
push
dec
sbb
sbb
dec
jle
inc
lcall
and
aad
add
dec
mov
dec
pusha
les
out
testb
rclb
mov
cs
sub
cld
push
push
or
sbb
scas
adc
bound
inc
or
adc
cs
hlt
adc
fdivp
int3
stc
pusha
shll
mov
fsubs
loopne
inc
sbb
fidivl
shrl
jp
scas
xchg
fmuls
fildll
mov
out
jg
fisttpl
push
mov
mov
add
xorl
clc
leave
out
imul
sbb
loop
filds
imul
inc
push
sub
out
add
pushl
cmp
enter
adc
test
int
push
gs
or
scas
shll
dec
mov
fisubrl
push
dec
adc
test
sbb
nop
and
lock
ss
xchg
push
push
sbb
dec
mov
aas
pop
xchg
jnp
xchg
in
aam
sbb
and
and
imulb
mov
push
stc
subl
inc
fldl
jno
cwtl
rcrl
mov
inc
mov
ret
sbb
jbe
or
mov
insl
add
adc
jae
iret
and
enter
jb
add
xchg
cmp
hlt
shl
mov
dec
inc
out
pop
push
jne
add
fsts
aam
xchg
iret
push
sub
adc
and
pop
push
inc
bound
sub
mov
dec
and
les
fldenv
ficoms
jle
fildl
out
mov
pop
jecxz
mov
fs
sbb
lods
cmpsl
enter
mov
int
mov
cmp
stc
jae
jp
loope
test
or
cmp
mov
or
test
sbb
int3
imull
pop
xchg
sbbb
and
ss
test
insb
jns
call
dec
fldt
and
adcb
in
mov
in
add
and
add
add
aad
add
mov
xchg
imul
jno
rolb
in
rcrb
test
dec
sbb
nop
cmp
push
mov
loopne
stos
push
xchg
fcoml
pop
mov
nop
xlat
xchg
test
addr16
xchg
mov
sub
mov
mov
push
loope
jle
or
mov
xor
mov
movsb
hlt
add
add
popf
jmp
and
cmpsb
test
inc
sub
insb
mov
push
loop
jb
push
roll
jbe
jecxz
pop
leave
push
and
push
lock
icebp
push
insl
push
adc
sbb
aad
or
cmpsl
mov
sbb
dec
fsubr
inc
rorb
scas
call
push
adc
dec
sbb
add
lcall
add
and
pop
push
pop
and
mov
loope
xchg
in
xor
adc
in
ror
fnstenv
add
mov
push
push
push
jmp
dec
and
push
xchg
movsl
aaa
cmp
scas
lock
mov
pop
clc
popa
add
sbb
pop
jmp
push
loopne
pop
movsl
dec
push
add
iret
ret
sub
aaa
mov
loopne
add
jbe
ja
test
sub
in
sti
cmp
fildll
aad
sub
lock
enter
jbe
popf
pop
ljmp
cmp
sub
arpl
into
push
add
inc
push
iret
jge
lret
pop
xchg
in
jne
aaa
xlat
mov
lret
adc
push
int3
inc
mov
sbb
lret
xor
add
loopne
sbb
jno
js
mov
mov
sub
test
xor
icebp
in
sub
arpl
in
subl
sbbb
aaa
adc
sbb
jecxz
pop
int3
push
stos
inc
mov
mov
mov
dec
fsubl
mov
arpl
jg
dec
inc
dec
roll
stc
adc
mov
inc
lea
mov
testb
in
mov
aas
cwtl
and
lret
lods
repz
inc
orb
xchg
and
and
or
push
sub
arpl
cwtl
lock
stc
pop
and
gs
and
mov
outsb
sub
xchg
mov
jecxz
inc
lock
in
ds
lret
jns
sbb
jnp
out
xchg
repz
cs
ja
mov
and
pushf
and
clc
push
or
loope
sub
std
push
inc
push
imul
fs
or
xchg
dec
imul
and
pop
scas
cs
sbb
cmc
enter
mov
imul
adc
popf
notl
sti
add
jg
in
flds
adc
xor
mov
push
xor
pop
mov
dec
jne
lahf
aad
add
stc
xor
call
hlt
jo
mov
xchg
and
mov
mov
dec
mov
shl
icebp
lock
push
insl
add
jae
pushf
into
jecxz
ffree
mov
psadbw
jle
arpl
mov
or
jae
aam
fstpt
pop
sti
in
add
test
iret
or
mov
push
mov
mov
dec
cld
leave
mov
adc
in
stc
sbb
cmpsb
bound
push
inc
call
mov
mov
push
div
cltd
fmuls
push
gs
es
fsubl
fwait
mov
mov
xchg
and
scas
xor
add
push
jbe
push
test
push
aas
lahf
or
lods
or
fcmovne
test
pop
and
loope
jne
ret
movsb
inc
pop
add
push
and
stos
fsubrs
setge
xchg
pop
mov
push
inc
sbb
ds
loope
rcrb
mov
out
xor
push
test
push
push
dec
xchg
fwait
jge
fldenv
outsl
mov
xor
mov
loop
dec
adcl
pop
ret
jno
aaa
iret
pop
cs
pop
push
stos
or
movsl
fldt
or
inc
mov
mov
sbb
stos
shlb
out
fstps
bswap
pop
xor
scas
push
in
imul
movsb
test
movsl
popa
dec
int
les
sub
mov
mov
pop
cmp
insb
or
movl
jb
in
lcall
int3
pop
dec
push
es
repz
adc
aam
adc
arpl
add
test
cli
push
inc
gs
outsl
inc
ror
or
inc
pop
pop
add
in
jae
nop
sbb
fstpl
in
in
or
cmp
pop
pop
aad
leave
pushf
xlat
push
test
sub
push
scas
nop
arpl
or
mov
mov
mov
loop
pop
rcrl
jo
movsb
lahf
mov
xor
hlt
xor
and
xor
mov
mov
call
dec
popf
xlat
inc
cmpb
jl
mov
fcoms
in
pusha
cmpl
adc
jno
cmp
mov
and
or
repnz
daa
pop
je
rclb
or
std
call
adc
outsb
inc
cmp
xchg
dec
jl
fiadds
flds
push
vhsubps
test
fucomip
in
xor
icebp
pop
push
loope
add
mov
jb
jnp
stos
mov
mov
push
lret
lret
mov
mov
insb
sbb
dec
sahf
lods
mov
lret
aam
clc
dec
adc
pop
mov
stc
adc
pop
cmp
and
and
testb
mov
adc
mov
subl
dec
sarb
dec
push
ss
xlat
std
mov
sub
in
fimull
in
push
jecxz
sub
pusha
lcall
sub
inc
fadd
cmc
cmp
jo
in
pushf
or
dec
fildll
ja
pop
mov
out
sub
stos
push
adc
js
stos
jb
mov
cld
sti
mov
sahf
mov
fistpl
sub
gs
jb
add
add
imul
test
cs
pop
out
or
cmp
xchg
xor
sub
mov
jno
cli
lahf
xchg
call
sarl
pop
das
stc
or
jmp
dec
ja
je
pop
or
das
fs
dec
adc
out
mov
jge
cmp
call
les
lds
sahf
pop
and
mov
add
or
mov
push
xchg
out
push
jae
push
and
fwait
or
inc
cli
dec
adc
or
cmp
or
aad
aad
mov
lret
ret
sbb
mov
lcall
movsl
or
dec
add
hlt
dec
fstpl
push
mov
mov
jno
inc
sbb
push
xor
scas
sub
ja
adc
lods
and
int
add
fwait
mov
divb
popf
inc
mov
push
push
andb
pop
scas
cmp
imull
movsb
xchg
push
pop
dec
int3
repnz
xor
mov
hlt
add
scas
popa
in
je
add
push
push
cmp
dec
lret
mov
inc
repz
or
jae
jl
xchg
inc
lods
mov
or
adc
fadd
inc
sub
dec
cmp
out
mov
adc
ss
mov
or
jbe
les
popf
push
subl
push
sarb
jg
call
insb
adc
cmp
outsb
cld
sub
jns
cmp
xor
cmp
add
stos
lock
sub
jg
jnp
int
aam
addr16
loope
or
int
push
fwait
sub
filds
xor
lea
lea
ss
test
ret
std
push
sub
addb
xchg
int3
jno
pusha
xchg
mov
sub
cmpsl
imul
les
mov
sub
lock
mov
adc
stos
jmp
pop
aas
mov
push
sbb
int
rcl
mov
loop
jecxz
xor
or
lds
shll
dec
dec
roll
mov
addl
das
mov
xchg
stc
xor
mov
sub
xchg
movsb
sbb
xchg
xlat
mov
pop
enter
imul
xor
lret
rorl
test
xlat
xchg
pop
xor
rcrb
xchg
jns
enter
mov
lea
jmp
andl
cli
push
cltd
sbb
ret
inc
push
mov
push
jmp
incb
dec
es
lods
dec
cmp
mov
push
push
test
je
andb
jne
xchg
dec
pop
jae
mov
mov
lea
faddl
inc
fadds
dec
mov
fimull
jl
mov
xor
jmp
aad
shrb
xor
popfw
int
clc
cltd
dec
add
fwait
pop
adc
cmpsl
popa
aaa
fldenv
ret
xor
cmp
inc
fisttps
jne
pop
xor
or
movsl
add
push
cltd
and
out
xor
sbb
int3
pop
loop
imul
mov
mov
stos
mov
test
add
test
sti
or
aaa
divl
and
ja
xor
out
in
pop
inc
mov
in
repz
push
das
dec
orl
cli
out
jno
test
or
pop
aam
mov
cmp
mov
int3
sub
xor
push
jb
cltd
test
xchg
sub
clc
pop
lret
fistps
xchg
adc
mov
inc
mov
les
pop
nop
or
mov
test
pop
mov
pushf
les
cli
aaa
aam
inc
fs
shll
loope
in
subb
cmp
ja
jle
or
test
out
add
pop
sub
pop
adc
mov
mov
fdivr
xor
adc
push
psrlw
push
pop
xchg
stc
pop
ljmp
cli
imull
ffree
dec
push
xlat
add
xor
ljmp
xor
ss
test
rolb
xor
mov
inc
popf
cmpsl
call
adc
mov
lea
mov
jb
ss
leave
rep
aas
or
inc
arpl
in
pop
ja
psubsb
xchg
inc
or
mov
insb
movsl
test
mov
xchg
push
mov
pop
adc
loop
push
out
adc
and
outsb
out
popf
fsubl
mov
rorb
cli
sahf
pop
stos
test
inc
mov
mov
mov
dec
mov
test
xchg
js
sti
rcl
loopne
fsubr
in
xchg
iret
push
push
xchg
add
stos
sub
xchg
sbb
addr16
and
dec
scas
mov
dec
sub
dec
inc
or
lods
es
xor
daa
sub
shll
lahf
mov
sbb
mov
scas
add
jp
hlt
dec
and
jno
or
jp
adc
xor
xchg
orb
sub
popf
xchg
and
rolb
xor
push
addr16
fldt
mov
stc
mov
lret
xchg
fidivrs
jg
je
cld
mov
adc
pop
pop
sub
sbb
cli
cmp
cmpsb
shlb
adc
push
sbb
je
dec
and
sub
in
das
out
xchg
pop
sub
cmp
jg
dec
adc
and
jmp
in
dec
int3
outsl
xor
dec
cmp
cmpb
fisubrs
pop
clc
jl
out
mov
mov
inc
jno
push
mov
repz
cmp
mov
mov
push
mov
cmp
cmp
and
lea
mov
iret
push
repnz
popa
paddw
mov
push
and
jp
popa
aam
inc
push
fs
pop
repnz
test
mov
inc
dec
mov
loopne
movsl
aaa
loopne
mov
add
fwait
sbb
rol
leave
inc
enter
arpl
jnp
insb
mov
push
aam
arpl
pop
pushf
in
ret
cmp
add
cli
push
inc
fs
mov
repnz
adc
adc
enter
jecxz
xchg
out
mov
inc
test
sbb
cmpsl
add
jmp
and
insb
mov
aam
out
test
rclb
mov
push
pushf
js
fs
and
xchg
add
sar
shrb
lods
mov
adc
sbb
fnsave
and
insl
adc
mov
adc
cvttps2pi
negl
dec
sbb
mov
das
fbld
nop
inc
dec
push
addb
cld
es
clc
in
cld
fdivrp
adc
aas
popf
shll
and
adc
jo
jbe
xchg
cmp
mov
cmp
insl
pop
ret
dec
mov
leave
mov
xchg
xchg
mov
aad
cmp
out
mov
mov
add
and
nop
jnp
and
pop
aam
cmp
lcall
js
test
rcrl
push
aaa
cmp
dec
xchg
pop
xlat
je
mov
mov
das
jecxz
xlat
iret
aaa
jl
movsb
addr16
add
andb
or
nop
sbb
dec
int
pop
cld
add
lcall
pushf
mov
and
pop
les
jae
adc
rorl
cmc
sbb
xchg
sbb
lret
cld
push
pop
mov
adc
icebp
inc
ret
fmull
lret
imul
orl
push
leave
in
movb
mov
adc
int3
xor
mov
stos
shll
pusha
cmp
and
dec
scas
mov
inc
xchg
addr16
cld
lods
addl
dec
sub
pop
orb
pop
mov
hlt
dec
pusha
mov
pop
push
xchg
stos
test
push
xor
insl
xchg
shll
pop
fs
notb
xlat
std
popf
inc
out
cmpsb
push
and
and
cli
scas
xchg
mov
imul
push
pop
sbb
inc
dec
test
adc
rcll
fnstenv
nop
shlb
jnp
mov
bound
fwait
sbb
nop
loop
mov
lea
jmp
mov
adc
sub
int3
addl
je
sbb
xor
outsl
push
cmp
jl
inc
outsl
and
mov
fstpl
mov
mov
fildll
mov
xchg
test
pusha
out
adc
add
mov
rcr
inc
std
pop
lret
or
mov
mov
sbbl
xchg
cmpsb
xchg
cltd
insb
fwait
ret
fwait
arpl
mov
shlb
lahf
rcrb
adc
loope
jns
lahf
jae
push
pop
loop
and
bndldx
daa
mov
dec
stos
inc
sbb
mov
xor
ss
cltd
cs
addr16
dec
push
mov
fucomi
stos
es
insb
addr16
aaa
test
xchg
sub
inc
in
bound
loope
mov
mov
mov
inc
mov
ret
push
iret
rorl
lret
into
adc
pop
outsl
adc
sub
dec
dec
out
xchg
pop
lcall
and
out
fildll
inc
outsb
test
lcall
inc
xchg
mov
xchg
mov
mov
mov
int
rcrl
adcb
cmp
sub
in
xor
sbb
dec
push
shll
add
in
clc
icebp
js
sub
cmp
jmp
dec
or
aad
dec
lcall
mov
mov
add
rol
fisttpll
lods
pop
push
mov
mov
fstpt
pushf
mov
ret
das
nop
outsb
shlb
js
adc
and
daa
adc
push
test
xchg
leave
mov
mov
shlb
out
sbb
pop
mov
adc
roll
scas
xchg
in
sub
mov
mov
dec
xchg
push
jnp
in
pop
mov
cmp
pop
aaa
stos
int
push
jge
jmp
rcll
jge
mov
jnp
shr
mov
shlb
push
lods
out
repnz
cli
pop
incb
insl
cmp
fsub
push
push
cld
sbb
outsb
outsl
add
pop
sbb
sti
out
xchg
mov
shlb
push
ret
sbb
push
or
hlt
popl
lret
inc
mov
je
es
adc
outsb
add
xchg
mov
test
enter
enter
jno
pop
push
fidivrl
enter
js
xor
popw
pop
inc
xchg
cmc
xchg
cmpsb
test
or
or
mov
or
adc
adc
cltd
sbb
jo
push
jbe
out
ds
mov
cmpsb
hlt
imul
and
and
sub
push
or
scas
je
pop
cmpsl
outsl
dec
movsl
fadds
or
ss
sbb
inc
lahf
scas
mov
lret
or
in
push
mov
dec
stos
aaa
dec
jae
inc
std
mov
cwtl
inc
push
jmp
add
aas
fdiv
fcomp
lea
fldl
adc
mov
jae
adc
inc
jbe
dec
sub
mov
incl
loope
ret
hlt
in
or
insb
pop
mov
mov
in
pop
shrl
push
add
and
or
daa
daa
pop
daa
mov
mov
push
xchg
fldl
lods
or
ret
push
clc
lods
adc
add
push
iret
in
sbb
lcall
and
and
xchg
mov
jnp
cwtl
jne
mov
push
fdivl
mov
mov
in
jns
jle
cmp
add
stc
dec
cs
cli
arpl
pop
jg
inc
inc
lret
insb
and
push
add
leave
or
fcom
sub
ficomps
mov
cmp
data16
ljmp
mov
stos
popf
xor
in
add
ljmp
into
or
xchg
push
lret
push
inc
add
mov
imul
iret
fists
and
subb
pop
pop
jp
jae
hlt
sbb
cmc
daa
jp
rcll
mov
movsb
or
in
xor
movsb
cmc
push
xchg
xor
cltd
sbb
fs
cmp
mov
out
cmp
popf
cmp
push
push
int
lret
mov
jne
lretw
adc
pusha
inc
rolb
push
xchg
xchg
nop
lret
lcall
pop
nop
and
cmp
dec
and
xlat
cmc
cmp
dec
into
repz
inc
xchg
movsb
pop
hlt
roll
outsl
xor
cwtl
fmull
jp
sub
jge
jnp
cmp
jl
leave
xchg
push
sarl
pop
loope
pop
je
push
pop
test
aas
and
xchg
out
adc
fstps
cmp
inc
cmpsb
jno
mov
xor
pusha
fwait
jns
pop
shl
xchg
pushf
push
cli
test
aaa
mov
fs
jae
fs
stc
fnsave
in
mov
lret
ja
jno
rolb
movsb
je
or
in
sti
and
or
inc
jae
xor
imul
loop
jecxz
gs
pop
fdiv
loopne
dec
popa
lock
aaa
mov
pop
xor
test
adc
into
movsl
lea
insb
je
mov
insl
movsb
pop
xchg
lds
mov
test
adc
insl
xchg
xchg
push
pop
int3
dec
lahf
pop
xor
mov
outsb
mov
push
or
push
stos
loop
mov
sbb
sbb
fcomip
cmp
add
ret
mov
cli
stos
xorl
repnz
mov
cmpsl
gs
bnd
outsb
mov
stos
fdivrs
dec
mov
aas
lret
aad
dec
aaa
hlt
mov
dec
sti
inc
jg
mov
sub
inc
sub
mov
mov
mov
movsl
mov
shl
fcmovb
xor
and
or
xchg
or
movsb
das
bound
jbe
xor
mov
xchg
cmc
mov
movsl
sbb
push
jbe
adc
in
int
stos
xor
pop
cli
jmp
xor
or
enter
je
jbe
xchg
adc
cmp
scas
pop
test
movsl
sti
hlt
jge
mov
dec
rcrb
inc
out
movsb
dec
mov
add
shl
ljmp
mov
jnp
sbb
iret
sahf
int
jno
cmp
lret
ret
mov
enter
sbb
cmp
push
adc
and
in
ja
insb
stos
shll
ja
sbb
imul
push
adc
fwait
xchg
mov
sub
jno
inc
sub
and
pop
add
jnp
mov
fwait
shrl
fildl
or
inc
sub
and
pop
add
jnp
mov
fwait
mov
lret
mov
sub
jno
mov
push
cmp
dec
and
imul
cmc
mov
mov
sub
mov
push
ret
mov
test
int3
int3
int3
int3
mov
push
mov
mov
mov
xor
add
push
mov
push
mov
push
add
push
mov
push
mov
push
mov
mov
mov
mov
push
push
push
push
pushl
xor
pushl
push
call
mov
mov
mov
movzbl
sub
je
call
mov
add
inc
cmp
mov
jne
movzbl
jmp
pushl
pushl
call
pushl
call
push
pop
pop
pop
ret
mov
xor
add
adc
fnstenv
aaa
andl
xor
and
add
add
icebp
xor
add
adc
arpl
push
in
jno
popa
loop
xchg
inc
jecxz
repz
adc
add
icebp
xor
add
adc
arpl
push
andl
ja
jge
je
jbe
mov
inc
movsb
call
xchg
pusha
test
repnz
mov
ret
mov
pop
lds
mov
dec
bound
es
popa
dec
sahf
fisubrl
or
lret
test
xor
or
jb
addr16
stc
outsl
enter
mov
push
insb
mov
inc
pushf
xchg
int
jl
hlt
and
call
mov
lea
adcb
rcl
flds
fidivs
int3
push
push
cs
int3
mov
jnp
inc
rclb
mov
je
scas
xchg
inc
mov
fwait
xor
sub
fldt
xchg
leave
cmp
sub
jno
mulb
mov
ret
jl
xor
add
adc
arpl
push
andl
xor
and
adc
inc
push
icebp
ja
outsl
nop
pop
andb
push
aad
hlt
ss
lret
add
js
add
xor
arpl
lea
pop
mov
inc
sub
sti
notb
test
xorb
mov
mov
mov
mov
inc
xchg
push
andl
xor
and
adc
add
icebp
xor
add
adc
arpl
push
andl
xor
and
adc
add
icebp
ss
mov
pop
push
inc
push
adc
loope
ss
fistpl
cwtl
inc
js
inc
pop
push
sub
fsub
cmp
pop
pop
aas
xlat
jae
int3
push
xrelease
test
dec
test
movsb
gs
xchg
aam
add
pop
jle
cmp
xchg
push
dec
jne
popa
inc
or
test
movsb
je
and
add
sub
push
imul
loop
and
adc
imul
mov
js
jecxz
into
adc
sbb
gs
loope
sub
lock
int3
add
std
enter
out
jmp
jo
aaa
fabs
adc
mov
out
mov
jne
fdivrs
sub
das
lahf
or
push
pop
out
fnsave
mov
add
fiaddl
cwtl
movsl
les
cmc
data16
lret
into
icebp
or
in
bndstx
pop
sbb
arpl
test
out
xchg
pop
jbe
ljmp
daa
test
out
mov
sahf
dec
xchg
shrb
add
in
push
push
or
sbb
push
jmp
add
rorl
jns
aas
xor
dec
jecxz
xor
cwtl
icebp
fwait
inc
pop
js
jo
and
sub
pop
pop
in
jle
adc
push
rorb
subb
xchg
mov
adc
in
scas
lahf
push
jp
fldcw
enter
sbb
into
aad
fildl
push
mov
jae
xor
dec
adc
fxtract
push
enterw
mov
push
mov
mov
sub
ret
pop
mov
arpl
adc
xchg
mov
push
inc
std
add
cld
xchg
nop
shll
jo
fsubrp
pop
out
sar
inc
aas
pop
scas
lea
jmp
scas
jecxz
es
pop
gs
movsl
inc
imul
push
cltd
mov
add
lods
out
inc
lock
and
push
push
or
pusha
add
lret
loop
lods
nop
pop
data16
or
rcll
pop
mov
sub
addr16
xchg
stc
enter
insb
inc
xchg
sbb
sub
ds
sbb
adc
bound
mov
lods
aam
std
mov
rorl
mov
stc
aad
lods
jmp
neg
jae
fidivl
lret
movsb
push
in
aas
jbe
cmp
out
hlt
mov
xchg
addb
and
jg
push
daa
mull
fadds
ds
stos
cmp
clc
mov
in
xchg
cmp
jg
xlat
mov
test
xchg
xchg
decl
inc
sbb
iret
repz
mov
mov
inc
lods
jno
out
xchg
inc
pop
icebp
into
mov
xlat
gs
fiaddl
sub
sbb
push
xlat
js
jbe
mov
repz
mov
sub
jle,pt
jle
scas
inc
pop
repnz
aaa
loope
sub
xchg
fsts
out
repz
nopl
jl
int3
push
shlb
mov
jne
movsb
lock
movsb
cli
fisttpll
mov
mov
mov
sbb
imul
js
idivb
popf
mov
ret
push
inc
mull
lods
pop
mov
out
nop
insb
push
mov
pop
call
aad
in
sahf
gs
test
popa
adc
and
aad
je
pushf
repz
insb
jne
mov
xchg
pusha
jle
or
and
cld
push
das
ret
lock
gs
loop
pop
mov
mov
cmpb
rclb
push
rorl
dec
int
mov
jg
mov
fdiv
inc
movsb
add
sarl
mov
pusha
ljmp
xchg
pop
ret
outsl
and
outsb
ret
jno
scas
dec
mov
and
push
orl
outsl
adc
xchg
int
cltd
pop
mov
push
ljmp
loopne
inc
loope
lret
fwait
into
push
les
add
scas
aad
push
call
xchg
test
aam
ss
mov
dec
xchg
aas
fisttpl
inc
push
not
lret
scas
jbe
xlat
mov
jmp
hlt
data16
out
mov
xor
cld
lods
lcall
xchg
adc
pusha
loopne
push
sub
ss
cwtl
in
sub
push
sub
test
in
ret
pop
addr16
gs
aad
bound
fdivl
pop
gs
pop
lea
push
and
jecxz
jle
repz
frstor
test
imul
pop
mov
bound
std
inc
inc
scas
mov
dec
mov
mov
loopne
lods
shl
in
xchg
mov
add
out
push
dec
xor
pop
sub
cmp
xchg
movl
cmp
mov
aam
and
cld
push
mov
jp
sarl
shlb
xchg
cmp
call
inc
test
int3
mov
sbb
mov
or
js
xor
in
into
xchg
repz
sbb
fidivs
jnp
ficomps
es
dec
les
movsb
inc
jo
mov
mov
xlat
or
mov
aam
pop
ds
mov
mov
and
adc
sbb
push
cmp
cmpsb
xorl
inc
sub
dec
add
xchg
add
frstor
sub
std
loop
fcmovnbe
xor
or
in
test
pop
add
sub
inc
aam
ja
mov
xchg
jmp
fs
lcall
or
xor
add
lea
addr16
dec
lea
push
inc
pop
cltd
mov
xchg
movsb
push
sbb
lret
pop
jae
jb
mov
dec
xchg
or
les
add
daa
repz
xor
dec
pop
insl
stc
push
jb
rorl
add
mov
push
xor
mov
and
cs
mul
cmpb
inc
dec
sub
mov
test
pop
iret
mov
cwtl
repz
mov
sahf
adc
movsb
lret
inc
enter
ss
lods
xchg
loope
fs
inc
cwtl
mov
dec
sub
bound
or
cmpsl
scas
push
test
mov
adc
aad
cmp
cmc
push
out
ss
jo
call
cmp
loope
outsw
mov
and
movsb
arpl
jnp
loopne
fs
jecxz
repnz
push
cmp
shlb
pop
pop
add
cwtl
xor
iret
and
lods
sbb
sbb
push
pop
jmp
idivl
fiaddl
jo
fstl
mov
xor
insb
jne
sub
dec
insl
add
and
sbb
gs
bound
jae
mov
xlat
pop
stc
pop
lock
adc
xchg
mov
mov
xchg
mov
sub
inc
pop
mov
mov
push
loop
mov
jge
mov
jbe
inc
pop
xchg
dec
imul
push
xor
or
loopne
fistps
mov
inc
out
mov
rcrl
aas
and
xchg
xor
fwait
cwtl
xorl
push
xchg
movsb
inc
mov
repnz
adc
jmp
sti
test
rcll
addl
push
rcll
ret
mov
shl
sahf
mov
inc
ljmp
out
subb
hlt
inc
mov
rcl
daa
mov
hlt
jnp
ds
sahf
mov
imul
movsb
pop
pushf
call
xor
push
mov
push
fcompl
jns
push
xchg
jge
lods
arpl
push
pop
mov
inc
or
cmpsb
loopne
xchg
or
jecxz
xor
cmp
std
out
data16
lcall
sbb
ficompl
xchg
sahf
sbb
xor
push
push
cmc
subl
ficomps
adc
int3
inc
xor
mov
sub
insb
lds
push
pop
mov
inc
inc
sbb
or
jge
arpl
enter
mov
rolb
xor
lods
push
adc
xor
adc
adc
pop
xor
push
adc
test
mov
in
sbbb
push
add
push
insl
rcrl
ss
cmp
cmpsl
loop
sub
pop
mov
cmpsb
jnp
push
sbbb
rcrl
adc
mov
test
fdivp
mov
dec
int
jle
fisttps
cmp
out
inc
orl
sbb
dec
add
or
adc
rclb
mov
fwait
xchg
sbb
cli
in
xlat
inc
push
sbb
lea
push
dec
or
and
add
loope
int
adc
add
adc
or
ja
add
inc
cmpsl
fstpt
mov
jne
aam
and
loop
loope
mov
fld
push
stc
cltd
inc
push
int
test
cmc
pop
xor
ret
mov
mov
sub
les
fidivrs
cltd
and
mov
cmp
or
lret
fidivs
mov
test
insl
jp
dec
mov
popf
fwait
inc
idiv
hlt
mov
dec
test
sub
mov
mov
cmpsl
sarb
orb
aam
popa
repz
out
in
dec
test
adc
ret
cvtps2pi
xor
dec
test
mov
popa
imul
mov
loope
adc
mov
imul
jecxz
and
mov
jge
cmp
inc
pop
mov
pop
mov
lea
into
xor
add
xor
sbb
out
push
cmp
and
xlat
lds
or
sar
and
adc
and
xor
xor
xchg
dec
mov
imul
lcall
cmp
cmc
jbe
jl
or
lock
xchg
decb
scas
frstor
insl
adc
das
pop
cld
push
bnd
aaa
aad
cmovae
loopne
stos
xchg
or
add
add
popf
sbb
and
mov
sbbb
out
fistpll
in
xor
imulb
xchg
mov
sbb
jmp
out
jl
imul
sbb
adc
xor
lret
pop
adc
imul
dec
fs
push
dec
pop
stos
into
cld
push
dec
addr16
pop
push
jbe
ljmp
mov
adc
mov
xlat
adc
in
mov
mov
or
jp
mov
icebp
sub
call
jbe
sub
stos
jmp
push
sub
cmp
mov
add
or
cld
mov
insl
and
fadds
dec
js
sbb
ror
aad
mov
in
cmp
js
push
fadds
pop
out
outsb
xchg
jg
mov
cmp
outsl
xchg
mov
adc
push
mov
pop
aad
mov
outsb
adc
push
mov
jle
out
lcall
xchg
ja
mov
push
imul
divb
push
ds
lret
add
or
mov
stos
mov
or
aad
lods
in
or
inc
jl
inc
inc
ja
cmp
icebp
data16
bound
lcall
add
out
push
aad
sbb
push
lds
jnp
mov
movsl
ljmp
mov
push
int
fsubl
es
mov
push
mov
pop
cmc
xor
inc
in
shll
push
popf
mov
sahf
rcl
test
inc
mov
in
xchg
cmp
inc
mov
pusha
adc
xor
xor
mov
stc
pop
cs
mov
jns
push
jl
and
add
inc
xor
into
sbb
nop
movsb
test
sub
stc
jns
cmp
ficomps
jl
out
jecxz
rorl
repz
cmpsl
aaa
repnz
mov
sub
aam
nop
in
mov
adc
out
fldt
aas
adc
mov
cli
and
outsb
outsl
shrb
adc
mov
sbb
mov
or
inc
into
fsubs
sar
sbb
iret
sbb
fwait
jb
pushf
enter
adc
sub
in
arpl
pop
lcall
idivb
lcall
mov
push
xchg
rcr
or
shlb
imul
xor
dec
pushf
aad
push
int3
aaa
adc
hlt
cmp
or
mov
add
stos
clc
loopne
int
adcl
pop
lret
sbb
mov
lock
adc
mov
int
pop
jo
xor
jno
notl
les
insl
imul
inc
push
sahf
push
fcompl
xchg
mov
pop
out
mov
mov
das
repz
rclb
mov
out
in
shrl
lret
adc
xor
xchg
popa
mov
mov
mov
loopne
or
cmpsl
das
lret
ljmp
adc
cmp
ss
adc
dec
ficomps
and
enter
imul
inc
push
adc
aas
jecxz
mov
rorl
add
mov
test
popfw
inc
inc
push
icebp
bswap
insl
sbb
cmp
pop
bound
pusha
test
push
push
fisubrs
xor
int
aas
cld
ljmp
rcll
outsb
leave
lahf
fisubrs
cltd
and
push
jp
test
sbb
lret
jae
stc
mov
lret
aam
test
nop
cwtl
clc
mov
or
jmp
cmp
data16
lods
push
mov
out
cmp
xor
sub
fistpll
cmp
in
ljmp
data16
rorl
sub
cmp
outsb
out
or
xchg
in
jb
ret
xchg
mov
pop
stc
mov
loop
adc
mov
cmp
jnp
arpl
inc
cmp
lcall
call
shrb
cmpb
lahf
rolb
in
inc
aas
in
xchg
xchg
sbbl
nop
xor
fcompl
inc
mov
aad
add
test
insl
hlt
xlat
lods
jb
pop
fsubr
loope
bound
pop
push
cmpsb
push
int
loopne
inc
jg
loope
push
jecxz
jmp
faddl
or
rcr
lret
roll
shrl
inc
xor
icebp
negb
ret
xchg
mov
lock
inc
and
mov
sub
imull
add
or
rcrb
mov
mov
xchg
jmp
jb
xchg
jg
ja
cmp
shr
addl
dec
push
dec
fiaddl
mov
pop
aas
mov
movsb
test
cltd
add
addb
dec
xor
movsb
sbb
mov
jno
setnp
shrb
add
fwait
cwtl
bextr
mov
jg
push
mov
push
les
cmp
and
push
dec
cwtl
jb,pt
add
or
xchg
jmp
bound
cmp
adc
and
lret
mov
pop
push
sub
sahf
popw
sti
das
and
mov
mov
ffreep
inc
sub
lods
in
sub
out
mov
xor
sub
lock
adc
add
insb
test
sbb
xor
fisttpll
adc
jns
cmp
and
mov
loop
aaa
test
and
fistpll
cltd
or
lods
xchg
and
lcall
or
les
xchg
sbbl
or
xchg
je
inc
xchg
mov
cmp
movsl
push
xor
mov
pop
mov
jp
xchg
dec
fsubrl
pop
out
mov
and
push
fidivrs
vpsubd
xor
adc
enter
int3
push
jge
push
jb
push
jbe
aam
sbb
hlt
sti
pusha
pop
outsl
mov
fdivl
jne
sbb
out
mov
jmp
add
fcmovnb
mov
fsub
dec
dec
or
pusha
jge
out
lods
inc
lock
push
sahf
pop
mov
push
xlat
scas
mov
push
idiv
push
sbb
nop
hlt
mov
jle
cmpsl
movsl
inc
xor
xor
sti
je
xor
mov
pop
stc
jo
enter
mov
push
dec
je
jbe
push
mov
xor
sbb
repz
mov
jecxz
in
sub
pop
mov
nop
nop
hlt
push
mull
sbb
dec
inc
jae
inc
inc
push
mov
xor
lds
ss
push
fcmovb
and
shr
jae
stos
clc
ja
push
pushf
sahf
inc
aas
loopne
or
ljmp
les
dec
push
mov
stos
mov
xchg
mov
or
sbb
jb
in
sub
push
sbb
js
pop
inc
adc
sbb
mov
idivl
lea
pop
aaa
dec
fisttpll
and
aas
xchg
jae
xchg
ljmp
mov
pop
int3
repnz
repz
cmp
push
push
jge
daa
es
xor
push
cmp
clc
ret
cmpsb
xchg
adcl
xor
and
dec
mov
movsb
test
fisubl
sti
xor
imul
dec
mov
mov
scas
out
aaa
sbb
aam
loopne
pop
aas
pushf
mov
lcall
orl
sbb
shrl
push
in
cmc
or
divb
inc
add
jmp
fimull
cltd
es
jg
mov
shlb
mov
imul
sbb
fcmovnu
lock
lret
ja
xor
int3
dec
in
out
insb
mov
fwait
test
in
sarb
andl
lods
jae
mov
mov
dec
fsubp
dec
outsl
popa
xor
bound
jecxz
adc
movsb
jp
mov
xchg
inc
inc
in
outsl
test
xchg
sub
mov
and
fs
inc
fcmovne
xor
fstps
test
mov
jmp
and
fwait
jp
mov
mov
cmp
cmpl
gs
mov
movsb
in
mov
and
pop
adc
mov
sbb
in
imull
inc
rorb
sub
imul
out
dec
nop
js
sar
xor
add
push
ja
leave
ret
ret
in
pop
dec
ret
sub
add
sbb
xor
jle
popf
or
sub
mov
sub
and
fs
push
mov
sbb
fiadds
aad
flds
jmp
int
dec
pop
addr16
mov
mov
repz
pop
addb
std
mov
push
aaa
jno
pop
ret
pop
cwtl
dec
roll
adcb
push
subb
dec
movsl
and
push
je
inc
cmp
out
sub
add
jl
stos
cmp
pop
jnp
popf
outsl
fldpi
jno
push
pushf
aam
cmpsl
inc
xor
and
sbb
aas
mov
sarb
cmp
lret
sub
scas
inc
sub
adc
push
mov
sysret
jp
dec
push
mov
xor
mov
cmp
sahf
sub
or
jp
xchg
jmp
je
or
stc
and
enter
add
test
inc
sbb
faddl
pop
lea
loop
fcmovb
pushf
rorl
test
loopne
add
push
push
out
inc
inc
negl
cmp
mov
mov
jo
push
aam
pusha
pop
jb
lcall
int
dec
insl
mov
jae
push
icebp
lret
adc
sub
inc
hlt
adc
pop
or
mov
dec
and
xlat
xchg
or
adc
in
test
push
es
add
mov
and
mov
shl
cli
sahf
stos
sub
jl
int
sbb
stos
mov
icebp
dec
call
jge
adc
in
adc
repz
or
xor
jns
inc
pop
cmc
iret
add
movsl
and
in
sub
icebp
test
mov
fistl
filds
mov
andb
sbb
cmp
jns
in
mov
mov
and
add
int
pushf
mov
les
jl
pop
nop
stc
mov
insb
daa
test
adc
divl
into
mov
inc
mov
pop
movsbl
push
push
pop
outsb
cltd
ret
ror
je
sub
pop
xor
push
into
mov
rcr
and
xor
add
and
addr16
test
jg
adc
rcll
fbstp
sbb
fldcw
bound
xor
xor
data16
push
outsl
add
mov
pop
cmp
mov
jg
push
std
adc
mov
mov
jge
and
ficompl
bnd
ss
je
ror
mov
scas
into
mov
push
imul
cmc
bound
inc
sbb
mov
push
outsb
mov
pusha
stc
call
xchg
cld
je
jmp
or
icebp
js
or
adc
inc
cmp
int
mov
dec
fisttps
loope
es
mov
cmp
int3
std
sbb
das
sbb
push
mov
lods
cmpsb
das
xchg
iret
jne
pusha
shl
mov
in
ds
or
cmp
sbbb
jmp
xchg
xchg
add
and
movsl
in
loopne
mov
in
shrb
ret
mov
fcoms
arpl
testl
int
sarb
fs
add
sbb
xchg
jae
test
dec
inc
loope
dec
mov
sub
mov
pop
test
dec
push
fwait
xor
mov
lds
aam
push
push
cmp
add
xchg
mov
scas
shlb
cmp
and
negb
mov
jo
shr
pusha
dec
mov
push
nop
sbb
mov
and
adc
fincstp
adcb
pop
mov
pop
fdivrl
dec
xchg
fsts
cld
cmp
test
ljmp
lret
andb
jge
push
lods
scas
pop
pushfw
fdivs
idivl
sbb
pop
mov
fwait
pop
and
push
scas
xor
divb
dec
insl
scas
int3
fdivp
ds
sbb
jae
pop
push
xchg
add
clc
hlt
popa
enter
mov
insl
pop
fs
call
xlat
call
sbb
mov
lea
into
mov
xorl
stos
jg
jb
pushf
xchg
rolb
out
pop
sahf
push
stos
fcomip
cmp
or
add
jmp
push
lods
fisubs
cmp
shrb
push
dec
dec
cmp
out
loope
cmp
repz
xlat
mov
xchg
in
mov
jb
adc
sub
pop
es
push
jle
pop
loope
hlt
daa
push
jecxz
and
insl
imul
loope
ret
lock
bound
add
push
inc
les
and
push
cmpsb
insl
pop
dec
hlt
cltd
and
sbb
subb
cwtl
bnd
push
add
adcl
sbb
add
adc
arpl
push
andl
xor
and
adc
add
icebp
xor
add
adc
arpl
push
andl
xor
and
adc
add
icebp
xor
add
adc
arpl
push
andl
xor
and
adc
add
icebp
xor
add
adc
arpl
push
inc
mov
push
xchg
ss
mov
sub
int3
int3
int3
int3
int3
sahf
or
cmp
and
jns
mov
ds
dec
pop
jle
outsb
stc
sahf
or
cmp
dec
into
pop
imul
stc
ds
dec
fnstcw
outsb
stc
sahf
or
cmp
dec
into
pop
imul
cltd
dec
int
mov
cmp
or
inc
mov
mov
jge
pop
and
cmp
push
lds
loope
cmp
jno
inc
dec
push
fmulp
into
cmpsb
add
cmp
test
xor
mov
aas
test
push
in
aam
out
mov
sbb
xor
mov
mov
imul
jo
sbb
lcall
xor
out
xchg
push
xor
push
shr
push
mov
in
int
or
cmp
dec
add
pop
jne
into
mov
movsl
jns
fxch
and
mov
dec
push
shl
inc
aam
sbb
cltd
pop
cld
dec
cltd
into
mov
sbb
clc
pop
or
cmp
dec
into
pop
imul
cltd
ds
dec
fnstcw
outsb
nop
sti
in
sbb
inc
call
pop
xchg
daa
push
outsb
in
imul
shrl
test
stos
sbb
push
mov
out
dec
mov
push
stos
jns
icebp
imul
test
mov
stc
inc
mov
inc
lret
pop
fwait
dec
into
pop
imul
cltd
ds
dec
fnstcw
outsb
stc
sahf
or
cmp
dec
into
pop
imul
cltd
ds
dec
fnstcw
outsb
stc
sahf
or
push
and
repz
insb
push
rolb
push
mov
jge
pop
jae
inc
xor
jge
mov
inc
call
jge
dec
adc
pop
test
scas
divl
out
pop
inc
and
rcrb
mov
cwtl
mov
sbb
cli
fdivrs
mov
jge
push
sbb
jae
mov
out
hlt
stc
fsubp
fidivrl
test
imul
lock
mov
pop
mov
cld
push
xchg
adc
mov
cmp
sahf
sub
adc
cmc
add
mov
arpl
repz
pop
pusha
jmp
shll
lods
insb
in
and
sbb
imul
fwait
int3
movsb
loope
and
outsb
jno
jl
sub
int3
je
or
push
incl
inc
fmull
clc
mov
mov
hlt
cld
adc
pusha
mov
adc
pop
sub
dec
test
ret
sub
or
cwtl
ret
dec
pop
subl
pushf
sub
scas
mov
mov
sbb
enter
mov
mov
mov
jo
fsub
scas
mov
adc
arpl
dec
sbb
adcl
movsl
cwtl
inc
leave
mov
dec
xor
cmp
cld
shlb
mov
dec
add
cld
test
in
popf
in
or
cmp
xchg
loop
sub
mov
xchg
pop
pop
jl
xchg
jae
dec
jbe
xor
mov
mov
bound
push
pop
and
stos
xchg
xor
or
sub
xchg
xchg
icebp
aas
pop
stos
loopne
rcrb
sub
mov
add
stos
mov
xchg
ror
jnp
jns
cli
cmp
sbb
push
mov
icebp
cmp
aaa
and
lea
push
js
rcl
jae
fistpl
xchg
xchg
pop
stos
lods
pop
xor
int
iret
in
in
mov
xchg
adc
and
add
or
mov
aaa
stc
out
mov
arpl
adc
outsl
sub
add
add
sub
cld
frstor
inc
cmp
pusha
inc
icebp
movsl
xchg
jb
inc
lret
mov
pop
mov
sbb
call
add
or
pop
inc
fisubrs
jb
loopne
cmp
in
clc
bound
ret
out
fwait
cs
stc
lds
xorb
mov
push
int3
cmp
push
dec
cli
add
mov
push
sti
dec
or
cltd
testl
pushf
inc
push
test
pop
xchg
xchg
pop
cmp
jmp
cmp
out
sbb
movsb
lret
pushf
xor
iret
test
add
cwtl
xchg
jns
sbb
push
mov
push
bound
mov
inc
bound
push
pushaw
dec
sbb
dec
ret
mov
pushf
xchg
and
shlb
inc
mov
pop
sbb
jno,pt
mov
addr16
notl
lock
out
aaa
sarl
stc
pop
pusha
jbe
stos
mov
test
pop
cmp
push
inc
or
xor
mov
cwtl
mov
dec
imul
aad
addr16
inc
or
insb
xor
insl
cld
mov
inc
ret
pop
rcll
xor
add
push
adc
jbe
and
inc
aam
pop
movsb
mov
into
sbb
pop
outsb
inc
jle
mov
mov
add
xchg
dec
inc
xchg
enter
xlat
arpl
fisubrs
movsl
add
and
cmp
inc
mov
inc
push
or
jnp
gs
shrb
ret
jge
inc
lds
or
jbe
xchg
jge
pop
movsl
mov
loop
int3
mov
test
mov
and
mov
xchg
pusha
xchg
rolb
sahf
push
sub
xor
fisttps
push
xchg
mov
cmpsl
mov
fisubs
arpl
idivl
cmc
sbb
out
cmp
dec
sbb
sbb
sub
loope
pop
stos
stos
xchg
inc
push
scas
push
fwait
outsl
iret
mov
or
call
xchg
push
jne
push
imul
and
arpl
pop
push
sub
push
push
pop
daa
xchg
int
movq
jbe
xchg
das
sbb
jg
mov
sbb
in
pop
cmpsb
pusha
mov
es
inc
hlt
dec
ja
xchg
cmp
mov
mov
jbe
dec
dec
mov
loopne
and
jl
cltd
push
pop
clc
pop
adc
inc
movsb
sbb
hlt
jne
jecxz
push
nop
jmp
cmp
ror
mov
dec
add
jecxz
and
jns
mov
cmp
pop
out
repz
or
mov
ja
push
mov
pop
or
push
pop
fsubs
or
ljmp
pop
mov
ss
mov
ss
xchg
xchg
add
ss
push
les
pop
adc
sbb
add
je
inc
movsb
in
mov
xchg
pop
push
in
jns
rorb
loope
callw
add
fisubl
inc
inc
inc
cmp
outsl
repnz
or
loop
add
or
and
mov
pop
mov
sbb
addl
int
pop
sarb
bound
pop
dec
call
inc
int3
movsb
mov
xor
repz
and
sbb
and
data16
std
push
cmp
arpl
daa
jnp
or
aas
je
adc
push
cs
lret
mov
inc
adcl
and
pop
ficompl
repnz
dec
ficoml
shll
sbb
xlat
in
ds
sbb
jl
inc
outsl
sbb
lcall
cwtl
mov
push
dec
add
mov
cmp
xchg
stc
jg
sbb
mov
popa
jno
add
pushf
in
jl
test
call
sbbl
mov
imul
cmc
neg
loope
lods
in
dec
push
iret
mov
add
outsl
in
lcall
xlat
int3
or
jnp
sbb
mov
sbb
bswap
jno
sub
dec
movsb
xchg
ret
mov
lret
insl
xchg
add
sub
fdivl
push
popf
mov
arpl
mov
or
mov
adc
pushf
sub
xchg
pop
inc
ds
rorb
ret
push
cld
pop
and
cmp
jecxz
add
int
cli
ljmp
mov
imul
mov
les
dec
fnstenv
shrb
cmp
mov
sbb
cmp
or
xchg
decl
mov
sbb
popa
jecxz
cmpsb
push
sbb
lcall
insb
jns
xchg
dec
iret
in
pop
mov
dec
jb
mov
and
xor
push
adc
sbb
push
nop
or
shlb
and
or
xor
sub
stos
int3
xchg
xor
out
std
xchg
add
mov
or
es
push
iret
jecxz
andl
jg
aaa
xchg
jle
mov
int3
sub
scas
push
mov
pop
xor
jae
add
pop
jmp
inc
push
mov
leave
fldenv
pop
jle
imul
pop
call
or
js
xchg
cltd
bound
out
mov
xor
movsl
or
dec
mov
shlb
jb
cmpsb
or
adc
jb
inc
pop
andl
jmp
je
inc
mov
stos
mov
aaa
in
insb
in
mov
push
loopne
add
in
cmp
sahf
pop
cli
jbe
sub
lea
mov
loopne,pt
test
movsl
add
mov
push
popf
fsubrs
cwtl
inc
popf
add
adcb
xor
xchg
pop
dec
pushf
pop
mov
push
loop
jl
sbb
dec
popf
inc
inc
mov
iret
pusha
push
adc
lea
inc
aam
shrl
or
add
in
jnp
std
adcb
add
sub
cmp
bound
jmp
cmpsb
pop
xor
inc
pop
mov
aam
add
jge
repnz
das
sub
pop
imul
mov
sbb
mul
ja
push
repz
xlat
mov
inc
fildll
mov
push
loope
in
xor
push
and
add
jb
sub
sbb
lret
push
fmuls
push
ret
inc
ds
push
sbb
xlat
sbb
xorl
pop
xchg
pop
test
xchg
inc
pop
cmp
in
mov
aad
add
and
cs
in
add
stos
out
jns
push
mov
int3
xchg
xchg
and
sub
xchg
jo
pop
inc
dec
push
adc
xor
icebp
lods
sahf
ja
out
adc
mov
leave
stc
jno
fwait
mov
push
jmp
repz
icebp
add
out
and
roll
cs
stc
arpl
xchg
jmp
pop
push
cmpsl
dec
jecxz
inc
jno
jnp
bnd
testl
les
sahf
sbb
clc
cmp
or
shlb
push
mov
and
sbb
cwtl
cmp
mov
stos
fistps
mov
scas
js
jmp
inc
mov
xchg
xor
int
pop
push
mov
ja
mov
push
xchg
dec
sbb
mov
xor
shr
sti
and
cmp
aas
ja
push
or
insb
sub
inc
cmp
sbb
mov
xchg
xor
jns
mov
sbb
jecxz
das
adcl
popf
pop
sbb
subl
addr16
push
pop
test
dec
mov
fmull
push
mov
push
jl
xor
add
test
out
sbb
bound
scas
fcom
mov
mov
outsl
pop
decb
int
sub
adc
fldl
ret
rorb
push
mov
int3
push
jge
add
sub
cmc
xor
pop
fimuls
mov
lods
dec
mov
scas
xchg
js
adc
das
jp
loop
mov
in
sbb
cmpsb
addr16
movsl
lcall
pop
popa
push
inc
jl
mov
arpl
pushl
nop
addr16
mov
rol
jge
fsubl
and
mov
mov
mov
cwtl
xchg
push
leave
pop
cwtl
push
mov
pop
pop
aad
cltd
xchg
mov
adc
mov
outsl
dec
mov
or
mov
dec
popf
push
dec
add
cmp
xchg
int
pop
mov
xchg
test
push
call
jmp
jp
push
into
jnp
jns
mov
xchg
insl
test
mov
push
push
add
dec
inc
test
aaa
divb
in
dec
or
test
jae
sbb
cmp
cmp
cmpsl
mov
add
xchg
fwait
or
loop
fdivl
hlt
fdivp
dec
cmpsl
pop
cmp
pop
xor
dec
mov
jb
mov
out
ret
inc
lret
cmc
es
sahf
dec
fwait
loop
mov
pop
out
in
xor
fistpll
test
enter
add
jl
addr16
les
aaa
mov
enter
jmp
mov
pusha
jp
mov
int3
int
mov
hlt
pop
cmp
lea
fs
mov
sahf
dec
test
dec
and
cmp
xchg
je
add
sub
popa
push
lods
pop
sti
incb
outsb
jbe
or
cltd
push
into
ss
pop
leave
data16
fs
mov
loopne
mov
xlat
outsb
imul
sub
push
mov
mov
pop
push
lods
and
jmp
int
inc
mov
aas
lea
mov
outsb
testl
in
stos
mov
adc
xchg
fiadds
cmp
jle
aaa
into
testb
loop
enter
rol
mov
mov
xchg
jo
jp
movsl
movsl
pop
fstps
out
sub
lds
add
pop
cmpsb
add
incl
scas
jb
xor
call
and
mov
push
in
clc
je
add
xchg
sar
mov
ret
loope
dec
in
inc
mov
mov
fwait
fwait
stc
mov
or
mov
xchg
jecxz
repz
loope
fsubrs
and
adc
xor
inc
mov
nop
testb
mov
popf
xchg
mov
sbbb
subl
je
cwtl
mov
jl
pop
sti
adc
cli
adc
dec
insb
push
out
cmpsl
and
ret
shlb
sub
jmp
insl
das
call
ss
imul
mov
cltd
cli
lcall
mov
inc
dec
cmpsb
or
pop
fst
ret
repz
xchg
sub
xchg
clc
adc
adcl
add
fwait
jae
int3
cmp
aaa
cmp
fwait
lret
faddl
ja
js
mov
int3
inc
js
test
jecxz
mov
add
sbb
dec
xchg
enter
push
int3
idiv
and
outsb
fcoml
cmp
push
push
shr
int3
or
jb
sub
outsb
xchg
in
es
or
and
lods
popa
je
repz
xor
mov
inc
in
cltd
mov
or
adc
scas
push
pop
inc
inc
push
leave
dec
or
cmp
test
leave
aam
jmp
and
pop
cli
out
lds
fwait
cld
leave
push
ret
adc
xchg
xchg
das
ja
sub
movsl
ret
sbb
adc
jp
aas
or
lret
in
mov
jno
icebp
push
mov
jg
rcrb
xchg
dec
jb
add
xchg
lcall
jl
inc
int3
fcoms
movsl
push
rcll
aaa
sbbl
push
loope
push
dec
sbb
sbb
fisubs
xor
addb
aad
in
das
jno
mov
push
mov
inc
scas
test
add
addr16
and
and
fwait
jo
lds
andb
dec
dec
push
fidivrs
cli
fmull
test
mov
mov
insl
lret
inc
cmp
dec
cmp
add
cmp
stos
mov
sbb
mov
into
push
or
push
fucomp
jo
mov
dec
sub
movsb
xchg
cwtl
jecxz
cwtl
and
and
push
xor
mov
mov
lret
movsl
and
in
jle
in
add
test
inc
xorb
out
sbb
cwtl
mov
aad
xor
xchg
loop
adc
lcall
sahf
inc
inc
dec
inc
mov
lock
pop
mov
cmp
cld
scas
cmpsl
dec
fsubl
sub
sbb
push
and
sub
xchg
inc
and
sbb
out
pop
mov
popf
gs
add
lret
loopne
pop
cmp
test
xor
add
mov
sbb
lds
mov
mov
xor
mov
jbe
mov
sbbl
jbe
add
fmul
ljmp
mov
test
insb
inc
outsl
inc
lods
ss
ret
stos
and
mov
fdivs
xchg
mov
dec
shrl
xchg
or
int3
pop
mov
scas
dec
inc
lods
mov
adc
js
xor
fldenv
mov
shrl
stos
mov
mov
adc
push
mov
cmpsl
vmread
sbb
inc
es
mov
lahf
push
sbb
outsl
shll
xchg
adc
sub
jbe
addl
imul
sub
popa
insb
cmp
pop
stos
sbb
xor
xor
push
sub
xor
loope
js
lcall
sbb
jb
pop
sub
mov
jle
aas
hlt
jne
inc
mov
mov
rolb
mov
mov
movsl
xorl
sub
mov
js
leave
and
movsb
cld
stos
xchg
cli
ds
ret
movsb
iret
or
das
loopne
xchg
jno
or
in
mov
add
scas
cmpsl
mov
stos
divl
andl
subb
in
out
sbb
aaa
shlb
xchg
fdivrl
sub
pop
mov
sub
cmp
enter
movsl
cmpsb
scas
jae
ret
cmp
add
sbb
pop
pop
xchg
or
cmp
mov
mov
mov
push
cld
pop
loop
adc
xor
repnz
sbb
into
loopne
je
xchg
jnp
add
mov
aaa
in
jge
lret
xchg
push
dec
out
xchg
cmc
inc
negb
ss
xorb
xchg
scas
or
xchg
inc
mov
jb
arpl
insl
jns
movsl
fs
cwtl
mov
mov
jne
pop
mov
and
lods
adc
cld
clc
dec
and
into
in
inc
daa
push
and
ja
jne
pop
push
push
sbbb
inc
dec
mov
sub
imul
adc
daa
fdivrs
icebp
cmp
jmp
inc
sub
lret
mov
fnstsw
les
mov
cmpsl
push
in
jb
sbb
pop
sahf
xor
shll
subb
pop
into
test
push
add
lods
js
setg
xchg
movsl
mov
mov
mov
imul
mov
push
cmp
cmp
out
call
ss
xchg
sub
out
call
es
outsl
and
pop
cltd
fs
mov
arpl
repnz
sbb
push
jbe
xor
clc
mov
or
jno
outsb
leave
bound
jg
mov
adc
fwait
sub
xchg
inc
inc
mov
cmpsb
ret
aad
inc
jl
in
iret
dec
sbb
mov
sbb
daa
pop
mov
fptan
imul
into
leave
inc
mov
mov
lahf
addr16
xor
scas
lea
or
enter
mov
stos
popf
test
fildll
es
aaa
fs
xor
xlat
rorl
enter
es
fdivs
ret
or
ds
cmp
jbe
shll
and
pop
pop
cmp
jp
leave
jno
mov
fsubrl
daa
mov
mov
in
js
sub
out
repz
inc
and
je
push
sahf
cmp
mov
and
jge
dec
dec
push
pop
push
jae
cmp
jns
push
or
mov
aam
push
or
or
inc
lcall
das
iret
inc
int3
dec
stos
sbb
jg
sub
jne
cs
pop
inc
popa
add
pop
pop
or
mov
add
test
fisubrs
jp
addr16
rorb
lea
mov
and
push
dec
out
adc
pop
dec
pop
pop
pop
in
jns
sbb
adc
mov
sbb
jmp
scas
jae
je
repnz
mov
leave
out
in
cwtl
cwtl
fadds
add
sub
ret
xor
or
cwtl
mov
add
push
pop
in
mov
sub
jmp
test
icebp
popa
xor
js
cmp
jl
arpl
std
sbb
in
adc
add
pushf
gs
sbbl
fs
jb
pop
xor
jl
and
into
sub
pushf
lret
push
add
jns
push
ja
cmpsl
and
mov
push
dec
test
mov
mov
sbb
push
aam
sub
sub
dec
dec
es
filds
cmp
mov
imul
data16
cmc
pop
das
push
mov
ja
aam
mov
in
ret
out
push
pop
xchg
fdivs
xor
test
outsb
iret
jmp
nop
or
adc
aad
xor
call
repnz
adc
aas
lock
icebp
dec
imul
pushf
and
gs
xor
rclb
ds
dec
aaa
push
test
mov
dec
pop
shlb
push
mov
push
aam
or
jg
dec
mov
pop
sub
lret
sahf
int
jno
lods
dec
xchg
push
roll
je
cmp
outsb
cmpb
inc
inc
test
jno
fs
mov
pop
lcall
loopne
out
dec
outsl
mov
sbbb
fists
dec
aam
mov
arpl
sbb
fimuls
pop
rcl
sub
cmp
test
or
dec
filds
mov
pushf
xchg
mov
lcall
pop
sahf
fistps
add
test
loop
cmp
cs
int
xchg
int3
and
push
xlat
add
cmp
and
sti
and
cwtl
cmp
cwtl
popf
inc
jp
adc
enter
adc
mov
or
shrl
xchg
push
pop
mov
lcall
movsb
xorb
adc
out
sbb
jnp
xor
scas
repz
jecxz
and
and
in
movsl
xor
push
popf
fs
push
cmp
pushf
outsb
mov
xor
lret
inc
aam
pop
xor
stos
and
xchg
mov
add
jns
mov
loop
add
cmp
pop
rorl
or
cmpsb
sub
pop
pop
xor
cmp
push
test
mov
gs
repz
jge
mov
adc
cmp
pop
push
call
mov
mov
pop
adc
ja
out
jns
pop
leave
or
sbb
adc
add
jbe
lods
xchg
add
dec
lock
xor
xor
mov
incb
stos
cmc
dec
ret
in
jnp
fwait
xlat
push
stc
je
mov
push
hlt
aas
xchg
xchg
sub
pop
mov
inc
xor
test
jno
fs
jl
or
or
cwtl
mov
lock
scas
movsb
lds
test
int3
lret
and
int3
fisubrs
pop
or
mov
dec
mov
push
cmpsl
mov
mov
cs
jmp
xchg
je
mov
push
mov
subb
imul
xor
inc
push
stc
daa
cli
flds
sub
jp
lret
push
mov
sbbl
in
add
xor
jge
push
mov
ret
pop
mov
xor
ss
sti
adcb
jae
lret
sarl
add
jmp
test
sub
sub
cs
xchg
leave
dec
xchg
rolb
add
mov
push
and
jge
jnp
jb
aam
inc
ljmp
jne
jbe
ss
dec
xchg
cmp
outsl
int
cmp
adc
cmp
jmp
fsts
sarb
and
xchg
inc
mov
push
nop
cmpsl
lret
dec
repz
ds
xlat
in
in
repz
out
sub
scas
pop
icebp
sbb
xor
mov
lret
pop
inc
fcoml
push
icebp
cmp
loop
and
cs
jno
popa
jb
mov
mov
xorl
aas
mov
and
cmpl
push
cmpsb
sub
cmpsl
inc
xor
add
ret
call
cmp
cmp
jno
mov
adc
data16
stos
hlt
aas
cmpsb
out
loop
ja
int
add
scas
xchg
int3
jo
rcl
ljmp
and
scas
cmp
dec
into
pop
imul
cltd
ds
dec
fnstcw
outsb
stc
sahf
or
cmp
dec
into
pop
imul
cltd
ds
dec
fnstcw
outsb
stc
sahf
or
cmp
dec
iret
fsin
imul
cltd
ds
dec
fnstcw
outsb
stc
sahf
or
cmp
dec
into
pop
jle
outsb
jns
mov
xor
xchg
xchg
push
int3
int3
int3
int3
int3
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
mov
mov
mov
add
push
pushl
call
mov
call
cmpl
movl
jne
call
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
lea
push
pushl
call
lea
push
pushl
call
xor
leave
ret
ljmp
imul
push
sub
aaa
leave
pop
stc
pop
jmp
inc
mov
mov
xchg
imul
cmp
sub
aaa
leave
sub
pop
jmp
inc
mov
aaa
dec
add
imul
cmp
sub
out
xchg
popa
mov
inc
lret
sub
xor
and
out
xchg
cmp
insb
fbstp
lret
xor
or
pushf
mov
add
pushaw
stos
push
loopne
mov
loope
imul
xor
lret
stc
cld
call
mov
cmpsl
lahf
xchg
xchg
addr16
aaa
clc
cld
jmp
mov
loop
iret
dec
cli
js
jge
sbb
sbb
rcl
jns
ljmp
ljmp
mov
les
js
push
xchg
sbb
je
add
jg
pushf
addr16
ficoml
and
and
mov
js
xor
rorb
or
lods
fbld
iret
fadds
std
pop
jmp
add
dec
xchg
imul
cmp
aad
movsl
leave
or
pop
cltd
imul
ret
aas
stc
das
mov
dec
aam
mov
inc
mov
mov
push
hlt
sbb
xor
adc
cmpsl
sbb
add
jns
mov
stos
push
movsb
sub
pushf
jbe
bound
adc
xor
push
aad
test
mov
cmp
sub
fnstenv
leave
pop
stc
pop
jmp
inc
mov
mov
xchg
imul
cmp
sub
fnstenv
leave
pop
stc
pop
jmp
inc
mov
jae
das
mov
mov
jecxz
dec
lods
mov
jg
push
mov
mov
test
loop
sbb
mov
ret
mov
es
sbb
jb
jg
xchg
mov
fstps
push
xchg
pop
xor
mov
out
push
gs
or
movsl
icebp
sub
mov
xchg
push
test
mov
fprem1
cld
movsb
fistps
or
hlt
bnd
int
push
push
inc
sbb
imul
push
std
lret
xor
adc
jp
ror
push
inc
popf
jp
jl
and
js
out
enter
repz
outsb
cmpsb
sbb
mov
pop
mov
or
arpl
push
inc
xor
imul
mov
ds
movsl
inc
lods
push
pop
jmp
sbb
je
add
aad
in
pop
cwtl
mov
xchg
and
dec
pop
ret
pop
repz
push
out
sbb
nop
cmp
sbb
inc
xchg
out
push
jecxz
sub
cs
sahf
xchg
push
sub
sarl
lds
xchg
cltd
pop
cmp
int3
sbb
push
test
mov
out
test
inc
cs
cmp
in
cmpl
xchg
dec
push
push
mov
ret
jmp
dec
enter
jge
mov
popl
les
and
into
cmp
in
movsb
movsl
adc
lahf
in
push
jecxz
ss
mov
fimull
lods
mov
js
jo
lock
sub
dec
adc
notb
cli
int
mov
or
jmp
mov
xlat
add
push
add
decl
sbb
pop
xor
pop
xor
into
aaa
mov
jae
in
pop
mov
lea
mov
in
scas
lcall
inc
int3
or
dec
js
fwait
outsl
rcll
cld
jb
xchg
les
xchg
xor
jge
pop
dec
imul
ficompl
jle
out
xchg
xor
sbb
xchg
mov
dec
add
ja
shlb
xchg
int3
xor
xlat
dec
push
aam
pop
pushf
aam
xchg
in
aaa
stc
js
pop
stos
push
mov
xchg
adc
icebp
mov
push
repnz
mov
cmpsl
lods
or
out
shlb
jecxz
jbe
testb
repz
cmp
mov
hlt
xchg
movsb
cmp
loopne
mov
cli
mov
sbb
mov
xchg
lock
mov
test
cmpsl
clc
in
clc
pop
xchg
aam
xor
pop
add
jp
pop
stc
push
into
lock
in
sub
movl
imull
popa
je
pop
jmp
pop
ss
cmp
sbb
xor
mov
in
jb
or
add
lahf
cmp
pop
add
out
cmp
cmc
jno
jno
lcall
lret
lret
jp
jne
pop
xchg
push
xchg
outsl
nop
push
adc
mov
leave
fildl
les
les
subl
out
cmp
pusha
ret
dec
hlt
xchg
xor
bound
add
insb
push
mov
add
shrb
mov
xor
push
imul
sbb
or
adc
shll
sub
test
ret
dec
mov
push
pop
pop
pop
sub
cmpsb
add
stc
sub
push
jne
add
imul
shl
dec
xchg
add
and
or
aad
mov
je
rcll
sahf
mov
mov
idiv
inc
jne
inc
negl
insl
jbe
out
fistpl
or
cmp
push
aad
jno
xchg
outsb
test
out
pop
stos
jno
pop
or
xor
cmp
and
cwtl
sub
imul
js
int
jl
dec
add
sbb
push
in
xchg
cmp
sub
mov
mov
mov
into
imul
call
xchg
add
lods
cmc
inc
fidivrs
jg
sbb
lods
in
loope
lock
fnstenv
adc
in
and
arpl
add
ss
add
xchg
negl
pop
sub
xchg
dec
mov
xor
or
jecxz
sar
fadds
sbb
nop
jns
sub
pushf
sub
and
sub
mov
cwtl
add
xchg
add
addr16
and
test
mov
movsb
subb
ss
or
std
mov
decl
push
orb
jo
inc
xchg
xlat
test
mov
jl
adc
mov
sub
fs
xlat
lods
inc
cmp
or
cmp
out
jo
rolb
rorl
and
jne
test
sbb
inc
jne
jecxz
les
js
outsb
mov
data16
cltd
xor
fnstcw
test
pop
test
cmp
rorl
push
sub
dec
out
les
sub
mov
sub
pop
lret
int
andb
or
movsl
ret
push
bound
aad
repnz
or
pushf
mov
push
sar
mov
xor
fprem1
test
push
test
popf
pop
mov
daa
xchg
add
adc
loop
call
test
xchg
add
jbe
fimuls
cmp
and
scas
cmp
out
leave
in
mov
sahf
jbe
cs
roll
xchg
daa
test
negl
repnz
mov
pusha
daa
clc
xor
loopne
sbb
pop
ja
imul
mov
jmp
fidivs
jle
sub
mov
shl
mov
mov
xor
faddl
xor
mov
test
adc
and
fwait
lcall
sub
or
insl
aad
test
mov
jmp
stos
or
mov
int3
or
xchg
mov
or
stc
mov
outsb
nop
pop
sahf
jge
push
and
js
xchg
lods
pop
push
ret
js
fcoms
rcl
mov
inc
cmp
je
fildl
jp
lea
pop
cmp
mov
xchg
leave
pushl
frstor
imul
xchg
cmp
xchg
fcompl
mov
pop
aas
cmpl
in
dec
inc
cmpb
push
mov
pop
call
cmpsb
enter
push
movsl
rcrb
sub
mov
xchg
sub
stos
addr16
mov
nop
mov
jp
jnp
sbb
test
add
ret
int
cmp
mov
push
jae
and
addr16
iret
and
and
test
xchg
mov
loope
xchg
flds
cmpsl
cs
dec
popl
inc
xchg
xor
inc
sbb
call
cld
rcrb
cmp
loope
cltd
or
cmp
stos
mov
mov
or
jne
mov
mov
aam
in
in
shlb
jp
mov
and
aas
shrb
pop
std
clc
movsb
sbb
into
mov
insl
sbb
add
aad
repnz
sbb
mov
or
push
sub
pop
or
dec
nop
cmc
lock
movsb
sbb
sbb
push
fnstcw
fsubr
mov
movsb
mov
in
adc
mov
stos
mov
cmpsb
ds
call
dec
or
stos
dec
jbe
sar
cwtl
xor
aam
xor
lods
cs
inc
mov
mov
mov
cmc
in
test
jmp
fs
cld
outsl
rolb
pop
enter
xlat
fimull
or
sbb
cs
pop
mov
fbld
push
fisttpl
aaa
movntq
mov
dec
data16
stos
cmp
and
mov
jecxz
mov
ret
aas
movsl
in
xor
sbb
orb
cld
add
scas
xchg
fwait
inc
mov
sbb
or
sbbb
xchg
sbb
into
aad
and
jp
cmpsb
mov
mov
cmp
jge
int
push
leave
lods
loope
cltd
pop
dec
test
inc
bnd
xchg
and
in
cmp
cbtw
mov
pop
hlt
push
into
lret
inc
xor
pop
cwtl
test
mov
cmc
loop
xor
jae
pop
mov
mov
mov
and
shl
cmp
push
sub
enter
jg
and
and
pushf
jge,pn
inc
mov
enter
cmpsl
cs
aas
jae
mov
xchg
mov
das
mov
and
test
jl
pop
and
mov
jg
jle
jge
clc
cld
rorl
enter
sbbb
or
jecxz
scas
mov
jge
jge
push
aam
xchg
notl
jmp
clc
mov
jg
inc
pop
data16
cmp
mov
pop
or
or
and
xchg
pop
mov
mov
push
mov
add
lret
mov
scas
and
pop
cmp
gs
leave
sub
cmp
in
mov
dec
add
sbb
test
jno
push
or
pop
xchg
test
mov
mov
inc
dec
jge
loope
icebp
pop
daa
pusha
add
orb
jp
incb
call
icebp
jbe
jg
movsl
inc
cwtl
mov
xor
outsl
and
js
cld
sbb
cmp
nop
sub
jne
sub
jl
pushf
data16
aam
xchg
ret
je
sahf
xrelease
sub
push
jge
jae
or
and
shlb
fstl
fldenv
dec
or
sub
in
push
jmp
jmp
xor
pop
daa
testb
addr16
adc
add
scas
or
stos
es
aam
pop
sti
ss
xor
shrl
dec
and
xchg
pop
mov
das
loopne
xor
movsb
xchg
pop
imul
mov
jb
cmp
ret
xor
cmp
mov
lahf
mov
push
sub
and
push
jecxz
push
sbb
jl
lcall
outsb
in
pop
pop
sti
xchg
stos
lea
aam
hlt
sbb
addr16
pop
pop
jnp
lods
scas
lock
je
jns
das
cmp
jo
adc
and
addl
icebp
push
mov
rcrb
adc
dec
out
movsb
pop
out
jnp
sarl
dec
out
add
or
popf
xor
dec
lret
or
push
push
in
test
jl
insb
sbbl
and
fmuls
push
jl
rorl
jno
pop
inc
add
cmp
or
mov
enter
cmp
mov
inc
jo
icebp
jecxz
add
fidivrs
stos
inc
enter
jne
fidivs
mov
add
roll
cmp
scas
stos
sbb
cld
sti
add
jmp
sbb
dec
cld
inc
imul
imul
dec
xchg
pop
imul
fidivrs
daa
xor
repnz
outsw
movsb
jns
push
xchg
sbb
mov
scas
in
mov
or
lcall
outsb
pop
mov
cmp
dec
mov
mov
jns
jmp
int3
pop
gs
or
inc
aaa
inc
sbb
sub
adc
pop
cmp
mov
out
enter
inc
dec
adc
adc
and
scas
add
push
cli
xchg
fdiv
mov
rclb
cmp
xchg
call
inc
dec
cmp
sbb
and
or
stc
lahf
add
orb
lea
dec
cmp
mov
cli
xor
jbe
les
sub
shrb
stc
fstpt
mov
or
jnp
mov
jnp
push
jp
imul
in
xchg
add
stc
test
sbb
das
cmpsl
jle
pop
movsb
movsb
call
jle
daa
jle
out
scas
mov
out
sub
mov
pop
pop
add
dec
dec
push
mov
int3
je
xor
mov
cmp
push
addr16
out
call
pop
pop
mov
jae
adcb
pop
aad
adc
cltd
xor
repz
mov
fwait
sbb
sbb
loope
jl
push
adc
xchg
fcomps
cmp
mov
pop
jp
jp
adc
jbe
pop
inc
jno
in
shll
dec
adc
inc
rclb
imul
xlat
xchg
outsl
jg
xchg
mov
mov
aaa
xchg
stc
pop
divl
nop
pop
sub
sti
imul
arpl
rorb
arpl
std
lahf
out
shl
pop
popf
loope
mov
divl
cwtl
cmc
or
fidivl
js
in
pop
xlat
jne
sub
fmul
repnz
add
xor
mov
addr16
movsb
mov
ret
sbb
movsb
dec
fadd
mov
pop
pop
rcrb
xchg
xchg
jge
adcb
xor
mov
pavgb
cmpsb
xchg
inc
clc
cmp
pop
shl
popf
aam
mov
sbbl
mov
add
mov
les
xor
aad
adc
jp
mov
insl
fcmovne
sub
arpl
adc
cwtl
jae
or
data16
mov
clc
mov
push
das
add
inc
bound
add
ret
dec
dec
cmp
xchg
sub
sti
or
mov
inc
add
sub
cmp
arpl
dec
gs
jne
ret
mov
sahf
inc
pop
loopne
popa
outsb
push
and
jae
in
call
dec
jl
aaa
dec
push
clc
cltd
mov
xchg
leave
cmp
mov
aaa
pop
pop
mov
ja
loope
imul
jl
stos
iret
jecxz
push
jnp
pop
dec
sbb
rcrl
bsf
aam
xchg
test
mov
cld
jb
xchg
ret
std
push
ljmp
cmp
sub
mov
pop
popf
ljmp
mov
adc
sub
dec
and
xor
dec
mov
cld
xchg
mov
hlt
jl
sub
push
dec
xlat
scas
roll
push
stos
mov
lret
push
subl
mov
popf
lcall
sbb
cmpsl
lods
dec
jmp
addr16
dec
jns
ret
das
sub
fidivrs
das
pop
loopne
pop
push
xchg
jns
mov
mov
push
fildl
sbb
rorl
and
sub
sarb
sub
enter
icebp
adc
push
imul
jnp
jp
cmp
dec
adc
and
cmc
aam
mov
push
ljmp
cmpsl
fnstsw
mov
lcall
jne
cmp
dec
sbb
cmpsl
cwtl
lea
mov
pop
packssdw
out
push
dec
or
pop
scas
dec
mov
mov
mov
push
sbb
push
xchg
mov
addr16
sub
sbb
or
pop
loop
pop
jno
lock
push
es
or
popf
outsl
push
or
or
insl
cs
cwtl
ljmp
outsb
sub
jb
rdtsc
mov
loope
bound
mov
mov
into
incl
push
or
fisttpl
or
imul
mov
clc
mov
push
loope
jmp
idivl
loopne
mov
ret
mov
mov
jnp
fadds
mov
fistpll
xchg
pusha
cli
or
cli
push
sub
add
xchg
add
sub
adc
jg
pop
sbb
out
popa
dec
je
das
or
stc
ficompl
arpl
daa
ret
cmpsb
mov
stc
scas
mov
lea
sub
dec
mov
push
sbb
pop
mov
lods
fdiv
pushf
popl
sbb
mov
pop
in
mov
xchg
in
push
adc
mov
xchg
mov
ret
push
sbb
out
pop
mov
out
pop
push
stos
outsl
insl
mov
frstor
mov
outsb
mov
push
out
mov
movb
inc
ljmp
iret
divl
push
fld
outsl
pop
cmp
push
in
push
out
jmp
ds
movsb
sub
in
ja
pop
push
mov
aad
xor
enter
fs
les
or
mov
out
sbb
xchg
jno
insb
stos
jp
popa
xlat
jne
mov
push
pushf
lea
push
mov
je
jne
iret
pop
lret
mov
fidivrl
mov
or
cmp
add
push
xchg
ljmp
mov
rcr
aaa
push
addr16
push
sub
xchg
imul
xor
or
int
decl
mov
js
call
sub
insb
dec
mov
imul
cmp
es
xor
outsl
jecxz
popa
xchg
imul
inc
stos
xchg
in
in
out
mov
mov
aad
cmp
jne
or
roll
add
lods
add
mov
push
jns
rcll
xchg
pop
pushl
insl
lret
push
lds
jmp
repz
fucom
xchg
xchg
shrl
ret
arpl
enter
iret
aad
push
ret
fxch
clc
lods
mov
mov
test
xor
fistpl
sbb
aas
fstl
jno
dec
xor
pop
cli
lret
loopne
popl
adc
out
daa
std
sub
and
push
and
rcr
mov
add
ret
cmpl
jne
cmpsl
and
push
mov
test
pop
cmp
xchg
xchg
add
out
inc
out
mov
subl
ss
mov
pop
dec
push
cmp
shl
mov
push
fwait
pop
lahf
push
dec
pop
push
mov
push
cmp
inc
cmpsb
pop
outsl
lret
ret
popa
dec
lret
and
push
push
lcall
lods
je
mov
jbe
loop
xor
sub
movsl
loop
hlt
out
pop
shll
mov
xchg
insb
fstps
add
xor
jb
push
pushf
lcall
push
sub
ret
ds
add
pop
push
dec
sbb
jns
cmp
jbe
adc
push
pop
or
pop
mov
pop
test
jbe
pop
stc
mov
sbb
mov
mov
int
mov
or
inc
or
gs
push
mov
scas
mov
std
add
in
push
sub
test
inc
adc
lock
jae
mov
mov
pushf
lods
popa
pop
sbbb
xchg
xor
fs
cli
or
rorl
xchg
jp
enter
dec
push
fs
jb
test
out
mov
jg
mov
cwtl
popf
aaa
mov
dec
or
xchg
lods
popf
sbb
xchg
int3
or
and
sub
pop
mov
pop
mov
ret
sbb
scas
in
fsubrl
outsb
push
fwait
movsb
sub
sub
into
mov
lods
xor
mov
or
cmp
mov
mov
dec
jnp
bound
rcrb
enter
sbb
pop
dec
sub
push
xor
dec
mov
dec
push
jle
mov
sahf
ss
xchg
mov
mov
test
mulb
add
add
or
pushfw
repnz
cmp
shrl
pop
jmp
lods
sbb
cmpsl
cli
aad
inc
add
dec
popf
pushf
fldcw
jl
sbb
push
std
xor
adc
xor
pshufw
mov
jo
push
test
into
bound
jge
fcmovbe
stos
mov
xchg
sub
mov
cwtl
xlat
cld
mov
mov
xorl
test
push
loop
ss
fsubl
and
int3
aaa
fbld
int
sub
nop
aas
jb
inc
xchg
mov
xor
pop
sub
dec
lods
leave
pop
pop
xchg
mov
add
imul
lcall
lock
sbbl
mov
jae
cmc
mov
incb
mov
shlb
stc
cmp
lds
xor
adc
push
pop
xchg
sbb
test
jbe
dec
in
int3
cmpsb
push
out
rcll
jns
shlb
sub
cmp
leave
jge
jmp
std
inc
jno
xchg
add
lahf
pusha
sbb
fwait
std
or
ds
int3
adcl
lods
loop
add
stos
cmp
scas
aas
jne
and
xchg
pop
mov
dec
mov
pop
cmp
movsl
sub
cmp
adc
push
push
cmpsb
repz
push
adc
fnstenv
xchg
mov
mov
movsl
subl
pop
and
mov
add
inc
movsb
scas
outsl
sbb
push
nop
dec
rcl
pop
push
movsb
push
mov
cwtl
lret
xchg
mov
pushf
jmp
mov
mov
fistl
lcall
inc
shl
sbb
sarl
xlat
sbb
int3
fwait
cltd
add
sbb
int3
call
bound
xchg
out
jecxz
pop
outsb
mov
inc
aas
inc
mov
mov
ret
pop
mov
lahf
cmp
test
xchg
mov
mov
mov
stos
call
shl
fbstp
jmp
mov
add
int3
bnd
xlat
loop
imul
dec
or
xor
paddb
pusha
dec
leave
push
stc
insl
mov
xchg
mov
enter
pop
fistps
cmp
inc
mov
jbe
add
sbb
div
mov
cs
imul
mov
mov
sub
mov
xchg
pop
leave
int3
stc
cltd
mov
jecxz
inc
lods
lret
push
inc
pop
test
jns
sbb
pop
aaa
pop
and
outsl
out
pop
ljmp
adc
and
inc
push
arpl
jmp
sbb
addr16
out
sub
rolb
test
repnz
sbb
ss
popf
daa
movsl
mov
call
xor
out
ds
xchg
dec
sbb
push
and
popa
lds
mov
fs
stos
icebp
fnsave
movsb
jmp
arpl
push
js
test
pop
add
xor
jmp
push
ficoms
ret
fidivrs
or
clc
and
std
sbb
dec
jl
jbe
rclb
add
inc
inc
adc
dec
add
stc
rcrl
out
cltd
add
lea
dec
incb
sub
pop
mov
nop
fldenv
shl
mov
aas
lret
mov
pop
or
sub
mov
shll
nop
lcall
aam
stc
idivl
fwait
pop
lds
ss
push
jmp
ret
xor
rclb
sub
mov
or
mov
or
nop
clc
sbbl
bound
mov
sar
mov
sub
movsl
inc
sbb
test
sbb
add
into
mov
ljmp
add
inc
les
stos
jmp
fwait
mov
push
push
xchg
pop
push
daa
dec
outsl
bnd
mov
adc
sbb
sarl
aad
and
pushf
decl
mov
jns
aas
push
rclb
cs
sbb
pop
mov
les
imul
cmp
sub
fnstenv
leave
pop
stc
pop
jmp
inc
mov
mov
xchg
imul
cmp
sub
fnstenv
leave
pop
stc
pop
jmp
inc
mov
mov
xchg
jns
push
cmp
sub
fnstenv
enter
jmp
inc
mov
fwait
dec
vmwrite
mov
mov
enter
pop
sahf
adc
pushl
inc
test
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
push
pushl
call
mov
push
push
push
pushl
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
call
push
push
push
push
push
call
mov
pushl
pushl
pushl
pushl
pushl
call
push
pushl
call
push
push
push
push
pushl
call
push
push
push
push
pushl
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
mov
sub
movzbl
sub
test
je
movl
movl
movl
andl
jmp
movl
movl
movl
movl
movl
movl
andl
jmp
mov
inc
mov
mov
sub
mov
add
mov
movzwl
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
mov
xor
mov
mov
and
mov
jmp
jmp
push
pushl
call
mov
pushl
call
cmpl
jb
mov
pop
pop
pop
leave
ret
push
inc
push
lods
cs
ds
add
lahf
sub
into
jge
outsl
out
pop
decb
mov
lea
pop
popa
outsb
fnstsw
mov
mov
insl
out
sbb
push
lods
cs
pop
shrl
jle
mov
mov
jle
sub
dec
push
mov
push
fadds
roll
daa
fistpll
mov
cli
adc
xchg
mov
mov
pop
adc
sbb
jge
jne
sbb
mov
mov
dec
mov
in
and
mov
test
nop
jle
sahf
pop
mov
pop
push
jge
mov
imul
jle
add
sbb
sub
icebp
xor
insl
mov
push
icebp
test
inc
into
into
rorl
fstps
in
aad
int
outsb
enter
ret
or
mov
jge
adc
mov
outsb
jecxz
jle
fnstcw
xchg
adc
stos
pop
jle
ret
pop
sbb
xchg
pop
in
outsb
pop
jle
mov
mov
xchg
out
pop
and
push
inc
ficoms
dec
mov
or
push
iret
adc
sbb
clc
jnp
dec
cld
push
test
xchg
sbb
push
mov
mov
lods
js
push
sub
mov
imul
ljmp
pop
in
outsb
fnstsw
mov
mov
insl
out
pop
decb
mov
lea
pop
in
outsb
fnstsw
mov
mov
insl
out
pop
decb
mov
adc
fildll
mov
cld
ja
inc
sbb
movsl
fwait
shlb
mov
adc
leave
outsl
and
repz
adc
ja
push
xchg
mov
scas
xor
rcll
jp
jne
mov
mov
cmp
ret
jecxz
ljmp
fcoml
test
push
dec
jne
pop
insl
popf
adc
push
adc
or
std
dec
in
cli
dec
jb
lock
jl
dec
mov
ret
lahf
test
insl
xchg
addl
outsl
dec
outsb
test
mov
int
repz
lahf
leave
daa
mov
inc
addr16
pop
jl
or
loop
fwait
xor
jno
jp
std
jecxz
dec
add
xor
imul
jns
in
scas
sbb
mov
roll
pop
leave
sub
fwait
pop
inc
mov
mov
cwtl
and
mov
and
add
sbb
loop
xchg
fmuls
or
aas
addb
xchg
icebp
lahf
js
outsb
stos
aam
add
scas
lods
xchg
push
sbb
popf
ljmp
mov
adc
adc
jo
dec
pop
push
adc
in
mov
mov
jp
fisubrs
sub
pop
mov
cmp
ftst
add
jnp
mov
or
fyl2x
dec
xchg
cmc
testb
sarb
fsub
push
popf
ds
mov
inc
pushf
and
mov
add
adc
pushf
shlb
jl
test
jno
jmp
push
mov
mov
popf
popl
xchg
popf
sbb
aaa
jae
cmp
bound
and
mov
iret
jbe
mov
add
adc
sti
or
jns
inc
push
jecxz
push
int3
ror
enter
jge
xchg
fsubrl
mov
outsl
mov
sub
mov
rcrb
ret
popl
int3
xchg
and
fstl
outsb
leave
scas
int3
add
mov
mov
insb
movsl
cmp
dec
cmp
mov
mov
inc
lods
scas
mov
push
fmul
or
arpl
call
add
rcl
out
dec
leave
int3
fstpl
pusha
inc
push
push
aaa
push
jp
enter
pop
inc
repnz
cli
push
ja
mov
and
outsb
mov
arpl
test
pop
add
adc
popf
pop
adc
test
mov
mov
lret
inc
shll
jle
xchg
ljmp
add
testb
dec
scas
jmp
lahf
add
je
jecxz
jns
or
mov
shlb
dec
inc
sbb
inc
popa
dec
mov
sar
xchg
rorl
cmp
icebp
and
je
jmp
or
rorl
xor
jns
call
xchg
push
mov
jl
dec
jecxz
cmp
sarl
sbb
scas
loope
popa
dec
adc
mov
pop
test
stc
sbbb
idivb
scas
sub
jbe
scas
leave
jg
lock
mov
out
mov
scas
jb
jo
jle
add
xorb
jp
mov
in
push
push
subb
insl
jg
fcmovne
lock
lods
push
mov
out
sahf
push
jbe
enter
mov
xor
daa
sbb
add
or
or
daa
push
movsb
push
je
fcoms
inc
inc
sarl
lods
fsts
test
inc
imul
inc
add
repz
mov
add
out
cmp
sub
push
pop
xlat
jo
xor
imul
int3
jge
sti
mov
loop
lods
push
or
cmp
mov
aam
ss
mov
stc
sbb
outsb
mov
push
sub
mov
cltd
out
test
mov
sub
data16
in
xor
xor
cltd
stos
pop
mov
popa
push
outsl
aam
hlt
sub
test
mov
fdivrl
shrb
int
cwtl
jecxz
push
xchg
xor
sub
jno
inc
cmp
mov
sti
adcl
mov
sub
mov
pop
push
sbb
stos
xchg
orl
shll
mov
scas
pushf
cmp
test
std
daa
lods
lds
push
addr16
inc
sarb
outsl
scas
cmc
cmpsl
xor
adc
mov
sub
in
shll
pop
pushf
inc
push
and
pushf
into
out
jne
in
dec
mov
push
xchg
test
pop
mov
xchg
lods
test
clc
sahf
add
test
jge
dec
xor
mulb
movsb
outsl
mov
imul
xor
push
out
push
xor
and
loopne
cmp
aad
inc
loopne
or
int3
int3
add
or
loopne
test
mov
popf
clc
pop
or
in
stos
mov
hlt
mov
jmp
popa
adc
xor
xchg
or
pop
loop
and
in
rcrl
pusha
jno
adc
or
sub
mov
inc
sbb
mov
mov
xchg
in
sbb
jnp
sbb
or
loop
in
xchg
sub
pop
ss
cmp
sub
fs
bt
aad
gs
mov
out
cmpsb
xchg
add
and
in
jmp
shll
jns
imul
hlt
lret
cltd
lret
inc
jnp
stos
ja
cld
call
xor
cmp
ja
hlt
xor
mov
push
sbb
add
jb
jbe
outsb
and
rdrand
sub
xchg
movsl
lcall
insl
pop
xchg
cmp
shll
in
jo
jmp
mov
inc
sub
daa
js
pop
push
das
jmp
ret
push
addb
out
test
incb
ss
pop
pop
cmp
mov
hlt
dec
pop
push
rolb
loope
aad
adc
add
dec
push
sub
adc
sub
aaa
adc
mov
jmp
add
push
or
add
mov
insl
rorb
aaa
sub
sbb
pop
dec
jno
xchg
das
xchg
pop
cmpsb
cli
pop
xchg
add
int
sbb
gs
adc
fisubs
sbb
test
sti
cwtl
pop
xchg
dec
xchg
rorl
iret
mov
aam
sbb
xchg
fildll
inc
mov
jne
xchg
shrb
lods
cmp
loope
add
lods
rcl
mov
out
mov
dec
lcall
push
cmp
cmpl
xchg
mov
or
bound
jmp
sub
fistpl
mov
adc
lds
lcall
cmpsl
out
rcrl
popf
or
gs
sahf
cld
sub
sub
imull
xchg
sub
mov
dec
loop
dec
sub
jne
mov
cmp
push
mov
cltd
sbb
pop
ret
push
add
mov
jno
pop
mov
imul
pushw
pop
mov
or
ja
pop
mov
lret
push
and
gs
repz
push
int3
or
jl
test
jno
mov
lea
jecxz
inc
js
bound
lret
mov
mov
mov
ret
push
jo
ret
call
adc
add
mov
imul
mov
fs
nop
lret
sahf
ja
lock
or
pop
aam
adc
xor
push
dec
push
ret
mov
push
jne
sub
cmp
std
divl
lret
fwait
jp
data16
push
adc
pop
mov
sub
sbbl
sar
xchg
xchg
mov
jmp
stos
aas
and
jmp
stc
out
out
sbb
inc
adc
je
inc
sub
mov
push
or
lods
xchg
push
sahf
and
xlat
adc
ret
loope
pop
pop
xor
out
dec
pusha
das
outsb
inc
in
movsl
fnstenv
insl
push
xor
sub
sbb
stos
adc
mov
sarl
add
stc
daa
pop
stos
ljmp
xor
xor
pop
repz
pusha
fimuls
icebp
repnz
fisubl
jb
xchg
ret
jecxz
sti
mov
insl
in
aam
sarb
pop
stos
xchg
jne
mov
jmp
daa
xchg
in
fwait
add
es
les
js
dec
lahf
popa
aas
paddusw
or
fs
xor
loope
jmp
mov
xlat
xor
add
iret
and
icebp
in
popa
sub
shll
dec
mov
sub
cmp
mov
xchg
push
or
data16
adc
pusha
sahf
adc
dec
mov
addr16
test
mov
dec
sub
mov
out
or
jne
repnz
pop
in
ret
sbb
leave
lds
fdiv
cmp
hlt
es
cs
push
movsl
sbb
or
ds
sbb
xchg
mov
or
std
mov
pushf
or
movsb
adc
clc
dec
lock
push
adc
inc
cmpsb
pop
dec
pop
lret
aad
cmc
jno
pop
and
push
pop
jnp
inc
lods
xor
test
jp
xchg
cmpsb
and
pop
incl
mov
daa
xlat
aas
mov
sbb
outsl
push
mov
or
outsb
jne
adc
and
test
enter
jnp
sub
cmp
loopne
ljmp
mov
add
stc
mov
hlt
mov
lds
sahf
pushf
xchg
add
shl
rcrl
and
das
repnz
imul
aaa
cmpsb
es
lods
xor
mov
jnp
pop
xor
jae
add
pop
lret
mov
sbb
fadds
adcl
xchg
lret
fisubs
out
cwtl
out
jl
adc
inc
fstp
lds
mov
xchg
in
sbb
and
dec
adc
inc
insl
jecxz
sbb
mov
jle,pn
or
aam
out
sbbl
add
mov
push
push
pop
aaa
inc
adc
test
jbe
dec
data16
mov
lods
pusha
xchg
jo
int3
xchg
cs
in
pushf
test
mov
stc
test
dec
loope
insb
mov
jge
cwtl
aad
sbb
adc
push
fcmovnbe
xchg
and
and
and
inc
arpl
test
mov
push
xor
clc
sbb
fwait
cmp
mov
mov
mov
out
sti
inc
lock
es
jne
gs
std
enter
adc
lea
lods
ljmp
out
lret
pushf
std
xchg
popf
push
push
sahf
sub
pop
lret
jo
in
nop
popa
mov
stos
pop
mov
jl
lds
in
xorl
pop
add
mov
and
mov
dec
loope
lods
mov
xchg
push
mov
jbe
popf
mov
adc
inc
push
and
jo
sarl
mov
test
push
inc
lea
iret
stc
ds
pop
repz
mov
sub
test
adc
movsl
repnz
popf
iret
lea
int
add
es
mov
idivb
push
sarb
in
or
xchg
push
xbegin
xor
and
pop
lods
int
mov
outsb
loop
mov
dec
push
dec
imul
mov
sti
mov
test
cmp
mov
insl
cmp
enter
cmpsb
mov
xor
dec
mov
sbb
mov
fwait
pop
jae
jno
in
adc
add
test
jo
cmpsb
mov
fnsave
call
cltd
int3
push
aam
cmc
cmp
xor
fisubl
sub
mov
adc
sub
clc
sbb
cmpsb
fstpl
mov
mov
pop
push
lods
push
push
int3
test
push
jecxz,pn
or
dec
mov
shl
xlat
clc
js
inc
outsl
xchg
je
mov
rcll
ds
arpl
aad
aam
cli
fildll
test
fwait
lods
add
not
insl
mov
sub
pop
adc
insl
stos
stos
xor
ja
xor
cmp
mov
and
test
mov
pop
or
icebp
nop
nopl
into
adc
adc
test
cs
mov
mov
movsl
add
and
mov
jl
push
dec
jecxz
outsl
or
rol
sahf
add
sti
add
xor
pusha
jno
int3
fildll
sub
mov
inc
shll
loopne
mov
out
adc
mov
dec
pop
fwait
add
jo
ficomps
fidivl
pusha
cmc
fadd
outsl
pop
xor
popa
pop
pop
nop
cmp
dec
xor
inc
fmull
cs
insl
fsubr
scas
adc
rorl
cltd
pop
xchg
scas
ss
add
dec
pop
mov
sbb
aam
xchg
mov
notl
add
xor
fs
testl
js
xchg
sbb
xor
xchg
xor
push
in
pop
cmpsb
push
jbe
in
xor
xchg
jge
mov
mov
data16
mov
sahf
lea
je
pop
pop
push
mov
cmp
fadds
inc
or
push
add
xchg
lret
xchg
pop
loopne
fbstp
or
xchg
loopne
fbld
orb
pop
xor
mov
mov
push
mov
mov
jmp
jp
movsb
and
push
jnp
fstps
lods
int3
int
cmp
mov
pop
mov
int3
fmull
sub
xchg
push
push
dec
in
or
mov
pusha
add
jno
movsb
push
mov
mov
mov
sarl
and
ljmp
aas
push
jns
rcl
push
and
push
cmpsb
push
pushf
or
jae
sbb
dec
nop
leave
jbe
cmp
pop
test
sub
hlt
lods
fs
in
xchg
mov
push
js
push
mov
sbb
pop
call
popf
adc
insb
and
outsb
ficomps
in
mov
outsl
movsl
xchg
test
cmp
in
test
add
imul
dec
aad
addr16
sbbl
jecxz
inc
xchg
outsl
test
divps
shrl
xchg
xchg
sar
fmull
sbb
push
push
pop
mov
mov
mov
rcll
std
int3
jne
sbb
into
pop
mov
or
jo
add
lea
leave
mov
aaa
jb
mov
dec
repnz
and
pop
dec
push
ljmp
cmp
push
cmpb
mov
push
movsl
jb
loope
and
pop
scas
push
mov
mov
or
xchg
into
push
test
jbe
ljmp
jne
stos
sub
out
cmc
fstpt
cmp
cmp
outsl
outsl
fcoms
into
outsl
sbb
push
sbb
mov
clc
mov
cmpsb
sbb
fwait
sti
repnz
test
mov
out
jnp
inc
stos
adc
jecxz
movsb
mov
mov
leave
fstpl
lea
sbb
push
shll
test
pop
lret
fwait
cli
mov
adc
push
sub
movsl
aad
inc
cmp
out
jne
shr
aas
idivl
or
jnp
add
jb
in
jecxz
aas
xchg
popa
xorl
push
jle
shlb
icebp
lcall
sub
ret
mov
in
pop
lcall
nop
jno
dec
cmp
xor
testl
lods
add
xchg
push
test
stos
or
rolb
in
xchg
sarb
jecxz
or
fwait
scas
sti
pop
push
cld
push
pop
pop
xchg
in
mov
and
cmp
dec
or
mov
ja
cmp
jns
jb
mov
lret
repnz
jl
pop
dec
test
cmp
xchg
shl
stos
jbe
inc
lcall
ret
and
jnp
push
leave
mov
fcmovnb
cmp
pop
cltd
inc
cli
inc
mov
mov
test
fs
sbb
sub
ja
cmpsb
sbb
iret
scas
data16
mov
and
icebp
xlat
ret
cmp
daa
fistpll
sbb
jnp
mov
xchg
push
insb
int
repz
cmc
je
adc
aaa
or
push
std
add
xlat
mov
mov
or
decl
sbbl
or
in
dec
mov
sahf
xchg
hlt
in
rclb
and
jl
pop
loopne
std
push
aaa
adc
lock
xchg
enter
xor
jne
jne
sub
fnstcw
shld
push
add
ja
cli
inc
stos
sbb
jmp
stos
mov
mov
push
icebp
rclb
cli
bound
pop
data16
lret
dec
lock
cmc
negb
lods
dec
dec
push
mov
push
jae
mov
in
dec
test
pop
insl
and
xor
imul
mov
add
pop
repz
inc
stos
push
jecxz
jae
push
adc
out
pushf
jge
ficoml
add
aas
out
pop
xor
mov
fimull
adc
loope
and
cmpsl
xchg
or
pop
cmp
leave
add
cld
pusha
ds
nop
push
test
dec
inc
lret
js
dec
iret
xor
cltd
out
mov
mov
es
flds
xchg
jnp
adc
jge
mov
mov
cmpsl
dec
push
jb
out
call
fdiv
mov
ljmp
aas
cs
cmp
pusha
push
lret
jbe
dec
push
xchg
xchg
jge
lock
out
in
mov
test
cmpsb
dec
pop
lcall
loopne
lcall
fdiv
sub
mov
subl
dec
test
in
sub
nop
mov
loopne
notb
xchg
add
xchg
dec
jb
outsb
sub
xor
in
bound
or
add
xchg
into
xchg
shll
mov
cwtl
mov
inc
mov
cs
adc
shll
lods
xor
daa
push
das
inc
aaa
ja
jmp
dec
gs
sbb
scas
and
jnp
inc
xor
xlat
sub
push
clc
push
cmp
inc
add
xchg
add
pop
pop
xorb
xchg
test
loop
sbb
jae
sbb
sti
scas
xor
out
jnp
insb
add
cmp
dec
push
mov
js
adc
cmp
pop
es
popa
movsl
cli
jmp
sbb
inc
sbb
add
dec
mov
es
push
inc
sahf
mov
insl
adc
adc
stos
psubsw
sbb
lcall
in
push
jnp
pop
lods
in
push
xor
mov
bndldx
cmpsl
lret
popa
or
cltd
test
xchg
cmp
add
xor
arpl
icebp
adc
push
mov
pop
mov
mov
jb
leave
insb
mov
mov
subl
fistps
pop
aas
ss
pusha
pop
testl
or
and
dec
pop
jbe
jmp
mov
call
push
cmpsl
xchg
xor
in
cmp
mov
fwait
xchg
lods
dec
xchg
jnp
mov
in
sbb
sub
outsl
aad
sub
xor
fldt
mov
cmp
mov
xor
inc
add
leave
sub
sub
fstl
sub
add
inc
sub
and
fists
push
fstps
mov
dec
add
cmp
repnz
lcall
sahf
cmp
arpl
lds
in
mov
and
push
inc
cs
sti
adc
and
push
outsl
jmp
aam
lcall
adc
outsl
cmpl
lret
es
xor
fcomps
adc
test
xlat
xor
dec
or
ret
add
cmp
out
insl
faddl
inc
inc
jmp
lods
popa
cmp
inc
mov
movsb
add
mov
mov
jo
lods
lahf
test
add
aam
xor
xor
mov
sub
pushf
push
jge
adc
mov
push
out
into
push
in
rol
cmp
and
rcrl
dec
movsb
or
lds
sbb
bound
loop
clc
ds
outsl
mov
cli
dec
dec
push
fistps
xorl
test
in
push
rcrl
cld
daa
mov
pusha
add
pop
xchg
inc
testb
jmp
test
test
or
aam
pop
mov
pop
xchg
mov
and
sti
xor
xor
xchg
xor
pop
mov
addl
or
sub
popf
pop
scas
addl
mov
and
cltd
mov
test
push
mov
jnp
sahf
inc
mov
pop
jo
in
cmp
out
out
sbb
jge
fwait
adc
movsb
test
rolb
ds
mov
fiaddl
pop
imul
dec
aaa
add
xchg
push
add
fwait
ds
adc
nop
in
cltd
outsb
sub
jmp
data16
enter
loope
fisttps
mov
jmp
imul
lods
inc
pop
pop
movsb
mov
add
js
mov
sub
mov
mov
imull
mov
nop
sbb
fs
ret
inc
pushf
inc
sarb
cld
pushf
cmp
or
leave
stc
dec
leave
repz
sbb
push
out
sub
dec
insl
lods
enter
outsl
enter
inc
lock
repnz
aas
or
out
cmp
icebp
push
cmp
in
loopne
dec
je
mov
in
cmovno
scas
lret
or
stos
adc
and
jge
mov
nop
cmpsb
adc
aam
lock
jl
les
add
mov
xadd
cmp
mov
fs
jge
sub
cmp
mov
es
dec
std
rorb
imul
push
clc
les
sbb
ror
icebp
in
mov
sub
mov
gs
stc
lahf
dec
icebp
mov
sbb
sbb
xor
xlat
test
aaa
loop
mov
jno
fwait
adc
popa
pop
or
insb
dec
repz
sbb
mov
ljmp
ljmp
push
scas
data16
inc
adc
leave
mov
outsb
or
mov
or
and
and
lcall
scas
or
addr16
pop
insl
and
xchg
dec
add
sub
fstpl
xchg
jb
jne
orb
les
hlt
adc
lods
icebp
adc
adc
mov
repnz
sbb
ja
lods
fs
out
fsubs
or
push
pop
xchg
fisubrs
das
cmp
jmp
pop
mov
cmpsb
mov
bound
nop
iret
les
loop
cmp
xorb
mov
inc
xor
sbb
dec
add
out
shlb
pop
pop
jns
fwait
sbbb
in
push
adc
add
pop
mov
dec
mov
inc
scas
or
jnp
stos
sahf
cmpsl
jbe
inc
and
lea
pop
in
outsb
fnstsw
mov
mov
insl
out
pop
decb
mov
lea
pop
in
outsb
fnstsw
mov
mov
insl
out
pop
decb
mov
ds
into
std
pop
inc
outsb
int
in
sub
into
jge
insl
out
jge
dec
push
mov
mov
pop
in
outsb
pop
jle
mov
sahf
xchg
scas
xchg
sahf
mov
int3
int3
int3
push
mov
push
push
call
mov
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
push
push
movl
movl
mov
movl
call
push
mov
call
pop
ret
push
mov
sub
push
pushl
call
mov
pushl
xor
movl
pushl
mov
mov
mov
movl
movl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
push
push
push
call
movzbl
push
pop
cmp
sbb
and
add
cmpl
mov
mov
je
cmp
je
push
push
call
mov
mov
xor
xor
call
mov
push
xor
mov
call
mov
mov
push
mov
mov
call
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
or
mov
mov
movzbl
movzbl
sub
je
incl
jmp
pop
leave
ret
