add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
xchg
mov
fistl
sahf
mov
jp
mov
add
add
or
pop
add
or
inc
add
add
pop
add
add
add
add
inc
add
fildl
data16
add
js
pop
add
or
fildl
addb
add
add
add
add
mov
add
mov
add
add
add
mov
xchg
add
add
mov
pop
imul
or
add
push
add
add
add
sbb
test
jle
inc
add
or
or
inc
add
add
add
fildl
mov
add
aaa
add
add
add
add
add
mov
mov
mov
add
add
add
or
pop
add
inc
add
add
or
inc
add
xchg
add
ss
add
add
mov
add
aad
inc
add
add
mov
inc
add
dec
add
add
hlt
add
add
add
hlt
add
add
add
add
xchg
add
add
add
inc
add
hlt
add
add
add
add
add
add
add
add
or
cmpsl
add
xchg
add
add
add
pop
xchg
add
loop
pop
add
add
add
xor
push
cmp
sub
adc
jmp
inc
add
hlt
add
add
add
add
add
add
add
add
add
add
add
adc
or
inc
add
add
xchg
sbb
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
mov
add
add
add
add
add
mov
data16
flds
dec
add
add
add
add
add
add
fildl
faddl
jmp
mov
inc
add
add
add
adc
add
inc
add
add
aad
xchg
add
add
add
add
mov
inc
add
add
add
add
or
hlt
add
add
lahf
add
or
xor
mov
inc
add
jg
loop
sbb
inc
add
test
inc
add
add
add
ret
add
add
add
sbb
push
add
add
add
xchg
add
add
add
add
add
xchg
add
cmp
add
data16
dec
add
pop
add
adc
sub
ret
add
add
add
add
add
add
sub
add
add
cmp
aad
jg
cmp
pop
add
add
add
add
add
inc
add
push
add
inc
add
add
add
add
add
roll
mov
inc
add
add
add
add
add
add
add
add
add
add
push
add
or
xchg
add
inc
add
add
adc
xlat
add
inc
add
add
add
add
add
xor
jnp
mov
push
add
jge
inc
add
add
add
add
add
out
adc
test
sub
add
add
add
add
add
add
addr16
xchg
add
add
add
add
pop
mov
mov
pop
ret
ja
mov
into
insb
std
jbe
mov
aad
ljmp
popa
xchg
test
pop
xchg
test
jae
push
or
adc
lock
loope
fsubl
loope
add
flds
and
aas
push
das
bound
jmp
adcb
outsb
call
fldt
lods
xchg
clc
lock
sbb
jnp
sbb
scas
jmp
add
int3
inc
mov
inc
pop
hlt
or
jbe
and
mov
xor
pop
leave
mov
fwait
popf
mov
imul
ret
inc
scas
sub
cld
push
je
jp
sub
lds
faddp
and
mov
ret
mov
inc
sub
aaa
aaa
cmp
ja
add
movsl
call
push
inc
adc
add
nop
xchg
loopne
mov
jnp
mov
sar
ss
je
jne
dec
mov
mov
enter
sub
push
cmp
cld
out
mov
jns
and
push
xor
imul
or
stc
and
sbb
dec
aas
aam
pushl
fld
loop
sbb
sub
ljmp
or
adc
out
mov
sar
addl
cmc
jecxz
mov
mov
mov
pop
xchg
leave
cmpsb
inc
inc
fistl
dec
or
jp
aam
jae
cmp
and
jbe
and
adc
inc
and
inc
scas
pop
xor
pop
out
inc
adc
pop
mov
xchg
gs
std
lea
sbb
inc
dec
xchg
ds
mov
pop
or
gs
push
es
fdivrs
cmpsb
add
cli
data16
icebp
lds
lods
ror
loope
popf
fnsave
test
clc
sub
jo
push
movaps
out
xor
add
mov
mov
cs
into
shl
cwtl
and
imul
mov
adc
jbe
push
dec
nop
and
jecxz
pop
out
sti
mov
xchg
sahf
inc
ljmp
sti
push
lret
jae
inc
xchg
cmp
push
int3
cwtl
add
lods
shrb
mov
xor
clc
insb
mov
pop
jns
out
jb
pop
lret
add
sbb
or
les
ss
sub
cld
test
mov
xor
rcr
adc
int
insb
add
dec
scas
je
call
inc
in
mov
loop
loop
sbb
xchg
jbe
push
push
and
push
pop
and
out
xor
sbb
jbe
loope
add
sub
lds
sub
fs
jmp
add
or
repnz
aas
or
push
in
jne
popf
xor
sbb
pop
mov
inc
cmc
dec
gs
xor
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
push
ja
jcxz
repz
cmp
mov
sarl
inc
dec
push
in
xlat
jae
add
xor
loop
repz
xorl
daa
mov
notl
add
jae
add
adc
ret
ja
jcxz
repz
xorl
daa
mov
notl
add
jp
add
pop
lock
rcll
scas
add
and
lea
add
je
sbb
mov
ds
je
mov
ja
cmp
pushf
stos
sub
lods
sbb
sub
sar
cmpsl
in
cld
sub
lret
inc
shlb
xchg
addb
mov
testl
cmp
sbb
add
shll
inc
pop
adc
pop
mov
push
or
inc
jecxz
inc
inc
xor
cmp
mov
out
imul
sub
repnz
jae
push
in
mov
dec
cmp
imul
pop
lods
pop
popf
jne
mov
mov
adc
and
shll
push
repz
xorl
daa
mov
notl
arpl
jae
add
xor
mov
xchg
push
push
mov
push
in
jae
xchg
decb
pop
mov
ret
pop
loopne
in
loop
sbb
and
je
bound
xchg
ds
sbb
pusha
xor
sub
mov
std
xor
xor
aas
ret
daa
mov
notl
arpl
jae
add
xor
jecxz
repz
xorl
daa
mov
notl
arpl
jae
add
xor
outsb
cmp
out
sbb
fs
pop
nop
insb
sbb
and
loope
decl
sahf
icebp
inc
mov
hlt
mov
les
es
cwtl
push
rorl
data16
cmp
imul
mov
push
push
push
and
xchg
dec
test
sbb
rcrb
jb
push
push
add
xor
lea
dec
pop
push
jb
mov
lret
cmp
jle
jmp
fmulp
pop
enter
jle
adc
mov
mov
pusha
pusha
fstp
mov
cmp
in
inc
xchg
cltd
inc
mov
pop
clc
push
aad
dec
jecxz
mov
ror
jb
ret
aam
repz
jmp
stos
lahf
addr16
popa
ja
inc
int
jns
clc
imul
push
push
shlb
adc
sbb
aad
or
xchg
in
xchg
sbb
xor
mov
jnp
out
in
push
xchg
adc
test
outsl
push
lahf
mov
xchg
adc
mov
frstor
outsb
outsl
in
push
add
rcrl
faddp
and
ret
daa
xor
rcll
jge
and
pusha
orb
lret
shl
mov
xor
xchg
push
dec
scas
sbb
js
and
xchg
out
into
push
mov
fmull
stos
mov
xor
or
xchg
push
cmp
xchg
into
sbb
lret
outsb
sub
mov
lods
sub
ss
pop
pushf
sbb
fdivs
push
push
jnp
addr16
shrb
int3
xchg
dec
movsb
sub
adc
imul
ret
in
lods
rcrb
test
jae
ljmp
aad
lods
lods
scas
divb
aam
imul
cmpsl
xlat
cmp
addr16
xchg
mov
dec
test
or
cli
jle
cmpsl
movsb
inc
lret
notl
mov
mov
sbb
inc
lcall
fdivrl
dec
inc
insb
mov
adc
push
xchg
pop
sub
popf
mov
hlt
ret
lea
or
xchg
sbb
mov
inc
aaa
in
rclb
mov
mov
int
aad
sbb
pop
xor
xlat
fidivrs
fildll
arpl
mov
imul
fstps
int
pop
inc
rcl
push
pop
scas
out
es
lret
test
mov
inc
or
nop
push
push
mov
jle
xchg
mov
pusha
outsl
xor
jb
faddp
mov
mov
aam
xor
inc
test
je
pusha
ds
jp
jl
dec
fidivl
pop
xor
sbb
test
cs
nop
dec
mov
cmp
pop
mov
adc
jmp
jmp
push
cmc
cmp
cmp
lcall
data16
mov
and
inc
xchg
mov
pop
add
mov
loopne
xchg
jl
out
or
mov
xchg
js
jbe
pop
fldenv
addr16
inc
cmpsl
xor
or
jns
xchg
xorl
out
push
aas
sub
mov
clc
cmpb
hlt
icebp
loopne
push
sti
es
loop
mov
mov
mov
in
xchg
add
push
fsts
inc
inc
inc
add
add
scas
out
mov
out
lcall
icebp
scas
mov
dec
pop
pushl
jg
int
mov
sbbl
repnz
cmp
dec
add
jle
fdivl
mov
dec
cmp
push
jnp
push
push
xchg
sub
std
sbb
outsl
cmpsl
movsb
inc
adc
stc
lock
mov
dec
jnp
inc
rclb
imul
inc
mov
adc
push
fucomi
sti
pop
add
inc
insl
or
inc
fs
sub
mov
aas
stos
adc
arpl
sub
fxam
test
ja
xchg
dec
lds
lods
push
adc
pop
fucomi
daa
lock
int3
sbb
push
push
fsts
clc
mov
xor
mov
jge
mov
les
xor
xor
mov
sub
js
mov
inc
nop
test
xchg
pop
lahf
shrb
adc
mov
les
fs
hlt
cmp
xor
lods
jecxz
adc
xchg
scas
push
jo
int3
mov
lahf
test
mov
and
adcb
pop
or
cltd
repz
push
xor
aaa
sbb
mov
dec
lret
fdivp
pop
inc
pusha
pop
cltd
xor
cltd
cmpsl
or
pop
hlt
and
cld
jbe
lret
mov
imul
test
enter
pop
jne
loope
iret
orl
jecxz
movsl
pushl
add
xor
in
popa
lods
pushf
lret
inc
fcomps
leave
adc
in
das
lods
loopne
cmpsl
xchg
xchg
jb
scas
or
lods
pop
pusha
das
hlt
mov
mov
jl
pop
mov
cmpsl
jle
push
pop
sub
jo
sbb
jge
test
imul
pusha
fmuls
jae
pop
push
xchg
sbb
daa
arpl
adc
inc
pop
push
shlb
xchg
imul
iret
cmp
into
dec
in
fcompl
sbb
ds
mov
xchg
jae
cmp
pop
mov
add
test
sahf
mov
aaa
mov
dec
js
pushaw
mov
dec
cmp
pop
mov
mov
adc
jb
ljmp
sub
cmp
mov
out
popa
jge
ficoml
int
test
stc
pop
fldt
xor
pop
jb
push
sub
sbb
test
cmc
jbe
mov
cmpsl
or
adc
mov
cmp
and
xchg
fisubrs
gs
jne
dec
sbb
icebp
jnp
cli
fdivrs
xor
jo
shl
jae
shl
lods
shll
outsl
jmp
xlat
cmpsb
xchg
out
in
xchg
jl
hlt
aad
mov
or
sbb
out
or
jno
cmp
pop
pop
enter
pop
fisubrl
stc
jmp
int3
and
movsb
ljmp
stos
inc
outsl
sbb
in
int
ljmp
or
add
jnp
nop
pushf
shlb
mov
popa
movsl
jp
stos
adc
push
add
stos
jge
sub
jg
jl
adc
js
ds
xchg
add
fs
addb
sbb
xchg
or
mov
xchg
mov
and
mov
call
push
inc
add
xor
sub
popf
cmc
pop
pop
sbb
bndldx
aas
outsb
pop
mov
xor
int3
nop
xchg
inc
mov
cmp
or
jne
fsub
cmpb
dec
mov
daa
daa
fldenv
pop
insl
repnz
call
inc
dec
mov
cli
fbstp
mov
lock
add
test
pushl
jp
in
out
out
pop
jp
jmp
xor
xor
push
jecxz
pop
ss
push
mov
test
fidivs
repz
test
xor
lcall
popf
mov
sub
jp
stc
mov
jne
push
cmp
imul
sub
adc
jp
into
stc
push
inc
cwtl
aaa
or
lock
ret
daa
jns
mov
stos
cmpsl
daa
mov
fsubs
addr16
arpl
jbe
in
push
or
gs
mov
shrl
pop
dec
inc
enter
stos
pop
cld
jo
insb
mov
sub
loop
cmp
dec
xchg
cmp
ljmp
cmp
sti
xlat
mov
and
fcoml
add
mov
in
xchg
adc
jmp
mov
icebp
incb
out
sbb
orb
cmc
xor
iret
mov
movsb
or
xor
popf
pushf
lock
sub
je
cwtl
xchg
hlt
pushf
adc
mov
xlat
add
cmp
pop
shl
cmc
pop
subl
mov
adc
test
out
push
dec
sbb
jmp
add
clc
xor
xor
lahf
int3
shl
in
cmp
notl
pop
pop
fcoml
jno
stos
mov
jns
cmp
mov
mov
pop
scas
int
adc
cmpsb
sub
scas
cmp
pop
fwait
jp
adc
ret
leave
gs
mov
loopne
mov
clc
jb
add
push
jae
movsl
sbb
push
movsl
bound
sub
xchg
dec
xchg
rcrb
push
into
and
add
inc
cltd
jae
das
es
cmc
hlt
test
into
out
loop
test
jno
pushf
and
lods
xchg
pop
xor
cli
jl
loopne
sub
mov
loop
cwtl
add
xchg
mov
jp
mov
je
pop
xorl
dec
stos
sti
out
cmp
push
xchg
add
imulb
cmp
in
out
out
mov
inc
adc
aas
dec
lcall
orb
pop
jnp
inc
mov
mov
mov
es
sub
fildl
scas
mov
mov
pop
adc
sbb
xor
int3
imul
cld
insl
xchg
cmc
xchg
sbb
fs
ficoms
arpl
fs
or
xlat
sub
cmp
and
aad
lcall
es
mov
sub
and
adc
imul
pop
jo
mov
push
sarl
fidivl
ljmp
and
mov
push
push
pop
mov
xchg
push
int3
and
mov
and
aas
cwtd
mov
daa
hlt
jnp
cmp
imul
pop
in
cltd
inc
sub
in
mov
add
sub
ljmp
in
push
call
xchg
movsb
ja
das
mov
js
std
and
sub
fnstcw
imul
fs
ljmp
dec
test
lret
sbb
fisttps
jecxz
mov
jmp
fdivr
stos
mov
ds
pusha
out
xchg
pop
xorw
sbb
ret
mov
pop
subl
fcmovu
cmp
mov
jo
sbb
or
mov
in
jmp
popa
mov
imul
cmpsl
or
fwait
inc
in
pop
aas
inc
mov
je
js
jae
cmp
inc
mov
add
outsb
insb
fisttps
mov
mov
sub
xlat
ds
ficoml
lock
das
repz
pop
int3
xor
cs
xchg
fstps
cmpsb
imull
sub
lods
inc
mov
daa
movd
je
dec
push
and
outsl
dec
mov
mov
jo
adc
test
pop
ljmp
xchg
and
push
scas
push
add
clc
dec
push
push
shrb
nop
in
and
add
lea
dec
in
xchg
pop
lds
and
lret
negl
loop
shrb
loope
lea
ja
push
idiv
repz
in
add
xchg
movsl
outsl
cltd
cld
stc
jne
inc
shl
add
aad
cld
adc
push
rorl
test
inc
fwait
lock
jecxz
lock
cwtl
jae
test
pushf
std
ret
xor
cmp
jne
lcall
int
insl
add
xor
addr16
pushw
rorb
push
mov
mov
xchg
jmp
inc
adc
add
dec
inc
ja
xor
fwait
inc
imul
jl
and
into
movsl
test
lds
int
lcall
fimull
xor
call
loope
cwtl
sub
lahf
out
cmpsl
adc
add
lds
fs
inc
int3
pop
jae
xchg
mov
xchg
jae
mov
jb
je
out
not
daa
and
test
and
out
lock
insb
cmp
push
fcomi
int
inc
cmpsb
sub
pop
cs
xor
loope
pop
xchg
mov
mov
popa
inc
leave
fdivrs
iret
test
jae
and
mov
xchg
test
mov
cmp
fs
adcl
cltd
popa
int
lods
fstpt
loopne
xor
mov
sub
inc
jecxz
cmp
pusha
adc
inc
mov
mov
scas
mov
add
dec
in
jne
jns
adc
mov
movsb
xlat
or
xchg
popa
enter
std
test
inc
add
and
int3
jne
into
jne
dec
mov
stc
lcall
mov
popa
jmp
mov
repnz
loop
add
jnp
test
sbb
ret
pop
dec
fdivl
ja
fcoml
out
pop
pushf
ret
lret
cli
inc
mov
xchg
pop
or
sbb
or
and
imul
outsl
leave
aad
cwtl
add
jl
lret
aas
gs
lea
or
xor
push
in
jmp
insl
adc
push
xor
push
inc
movsb
add
dec
sbb
subb
out
lret
adc
notb
leave
sub
or
lods
nop
scas
insb
in
adc
or
int
aad
inc
bound
fwait
xchg
push
fwait
subl
jne
test
inc
pop
in
inc
loopne
adc
nop
lds
outsb
sbb
leave
pop
adc
mov
add
push
ja
xchg
out
int
pop
add
jg
addb
in
xor
outsl
pop
adc
ret
stc
cmpsl
jne
sbb
gs
bound
mov
mov
or
cld
jl
adc
imul
add
pop
js
push
mov
push
das
xor
les
pop
sbb
mov
mov
popf
sbb
es
aad
xchg
adc
js
cltd
mov
xchg
mov
aas
aad
push
push
inc
aaa
sbb
push
rorb
jo
lret
je
popf
push
xchg
jp
xchg
addr16
and
in
data16
mov
stos
push
int3
je
add
xor
icebp
dec
xchg
cltd
outsb
push
nop
hlt
adc
jb
inc
push
pop
lahf
or
inc
loop
push
cmpsb
aad
cwtl
scas
and
xchg
cmpsb
je
and
mov
lahf
jns,pn
enter
inc
adc
push
add
aaa
rcll
popa
daa
push
sahf
inc
sti
and
xchg
cltd
retw
push
mov
pop
push
jge
sub
mov
insb
mov
push
or
xor
std
jge
lret
test
xor
adc
stos
mov
xchg
out
jno
pushf
movsb
aaa
es
inc
mov
je
bound
sbb
ja
movsb
leave
sbb
sbb
pop
pop
add
or
xlat
push
stc
xor
jp
xlat
outsl
scas
nop
orb
shlb
arpl
xor
fucomp
inc
orb
mov
mov
pop
insb
dec
and
xchg
push
pop
and
mov
jae
mov
jae
test
and
adc
dec
fmuls
jno
popf
or
out
shlb
rcrb
into
xchg
inc
lds
fidivs
lods
icebp
ret
pop
int3
pop
sub
out
push
push
sub
clc
xor
sbb
dec
pop
fcoml
adc
int3
jne
mov
fldcw
fildl
cmc
mov
or
xchg
rcrl
inc
scas
mov
ds
icebp
aaa
pop
or
and
imul
ja
jge
add
inc
push
adc
push
repnz
add
cmpl
je
and
jbe
mov
push
out
lods
jmp
or
test
dec
adc
mov
push
push
adc
ja
test
xor
ja
and
pop
or
jge
shll
xchg
push
aaa
mov
in
add
jecxz
outsb
cmp
imul
clc
aas
sub
xchg
nop
adcl
test
popf
in
add
jnp
lods
mov
loope
jnp
lret
movsb
es
and
xor
cmpsl
jb
mov
mov
rorb
sbb
cmpsl
and
mov
lock
add
aad
xor
dec
mov
sarb
mov
in
cwtl
scas
mov
outsl
aam
clc
push
inc
push
dec
mov
ds
out
xor
movsl
call
adc
mov
sbb
xchg
jnp
in
inc
jns
jb
inc
je
scas
pop
push
adc
pop
sub
shll
push
xchg
mov
stc
repnz
stos
pop
pop
fsubl
out
fadds
jp
xchg
addr16
repnz
mov
js
outsb
lds
mov
or
mov
mov
fs
and
sbb
cmp
adc
adc
fisubl
int
subl
data16
test
pop
and
gs
adc
sti
adc
dec
out
subb
loop
scas
and
lret
scas
inc
das
xchg
lret
dec
divl
ja
leave
xchg
in
gs
psllq
sub
mov
mov
lock
js
sbb
mov
add
addr16
push
add
add
xor
inc
cld
xchg
loop
outsl
sub
push
out
lds
sub
imul
or
es
cmp
jmp
adc
jo
dec
loop
aaa
or
mov
xor
lods
push
scas
addb
or
add
cwtl
xchg
roll
cmp
jae
push
push
pop
std
clc
stos
rcll
dec
cmpb
mov
push
add
js
pusha
scas
fsubp
ss
dec
pop
fwait
mov
jp
roll
in
dec
ret
and
lea
and
jp
mov
adc
sub
insb
xor
imul
mov
movsl
dec
xchg
mov
push
out
push
xchg
clc
jo
popa
add
mov
adc
dec
jmp
push
pop
outsb
scas
mov
xchg
mov
push
mov
enter
sti
mov
sub
adc
jnp
mov
push
enter
push
dec
pop
fmull
mov
js
inc
or
cli
pop
dec
jmp
adc
xor
int3
jb
mov
adc
aad
push
dec
sub
push
cmpsl
sub
ds
adc
mov
fwait
into
mov
bnd
fwait
out
inc
pop
jae
outsl
push
cmp
jle
jb
sbb
mov
mov
ss
jecxz
cmp
mov
bound
or
sbb
icebp
mov
jmp
shl
xchg
sub
and
mov
loope
sub
scas
push
adcb
jp
rorb
pusha
mov
fwait
jge
rclb
iret
mov
hlt
orb
dec
hlt
jle
test
cmp
in
ds
rolb
mov
mov
jg
lret
cltd
aad
jo
icebp
sbb
frstor
out
push
mov
mov
xor
adc
sbb
pusha
lea
adc
cltd
or
lds
adc
stos
js
mov
andl
in
push
movsl
xchg
cmp
stc
xchg
or
push
adc
push
jl
mov
cmp
dec
jno
adc
dec
xchg
out
mov
dec
lds
sarl
mov
scas
jecxz
pusha
mov
cmpsb
pop
jne
mov
add
pop
cs
cmp
mov
fiadds
loop
lcall
int
dec
data16
mov
xchg
mov
cmp
shl
hlt
add
adc
xchg
dec
pop
jnp
scas
rclb
shlb
jno
insl
ffreep
xor
and
jmp
aam
mov
shll
xor
mov
movsb
pop
mov
xchg
push
push
jns
mov
cmp
sahf
aam
xchg
mov
pop
xchg
push
dec
enter
outsb
fdivr
mov
sbb
push
pop
mov
xor
jmp
jl
rorl
loope
jle
cld
or
inc
add
push
mov
pop
lods
xchg
ret
jg
shrb
in
fmull
sbb
push
pop
in
pop
adc
push
cmp
adc
shll
insl
xor
test
push
inc
ficompl
sbb
or
add
sti
pop
adcb
jge
inc
sbb
rcrl
inc
lahf
inc
dec
push
lock
adc
sub
mov
repnz
insb
dec
test
inc
add
les
xchg
cmp
sub
add
icebp
rcll
pop
push
add
sub
mov
fstps
mov
fsubl
xor
push
xor
into
out
sbb
cmpb
or
stos
or
lods
inc
icebp
push
sbb
dec
cmpsl
mov
and
fidivl
ja
lcall
pop
mov
mov
in
lahf
add
cvtps2pi
inc
jne
aas
insl
push
js
xchg
aam
jge
and
mov
xchg
dec
in
sti
stos
sbb
mov
mov
push
push
jecxz
and
xchg
cmpsl
in
enter
shrl
mov
lret
inc
mov
mov
or
in
and
rorb
adc
mov
lret
jb
cmp
pop
nop
stc
fstpt
jl
fdiv
mov
mov
sarl
mov
mov
push
xor
push
lods
mov
jns
lock
inc
rorb
mov
pop
mov
push
mov
jb
test
clc
gs
dec
sbb
push
inc
negb
xlat
jo
dec
fsubl
jae
repnz
insl
dec
xchg
sarl
pushf
push
repz
xorl
daa
mov
notl
arpl
jae
add
xor
jecxz
repz
xorl
daa
mov
notl
arpl
jae
add
xor
jecxz
repz
xorl
daa
mov
notl
arpl
jae
add
xor
loop
repz
xorl
daa
mov
notl
leave
xlat
jae
je
fwait
pop
fsubrl
js
aad
lds
fldcw
movsl
inc
sbb
inc
xor
gs
adc
popa
and
mov
mov
test
mov
fldl
add
jne
gs
jns
add
dec
aad
lds
cmc
addr16
xchg
mov
adc
push
pop
inc
add
inc
sbb
push
shlb
in
mov
xor
loop
and
stos
sbb
xor
push
jp
xchg
dec
mov
ds
mov
cld
mov
aam
ror
lock
xchg
enter
jecxz
popf
mov
test
lock
add
enter
xor
xorb
loope
mov
ss
pop
add
push
mov
fcoml
sahf
and
mov
popa
push
mov
test
or
mov
popa
mov
xor
orl
xchg
cmp
mov
stc
push
xor
inc
push
xor
jno
mov
cmc
int
rcll
pop
movsl
jecxz
xchg
inc
jmp
adc
add
test
cmc
iret
in
lock
loop
xor
sub
inc
popa
adc
cmp
pusha
add
mov
mov
mov
fcoml
cmp
es
add
jnp
add
arpl
dec
jecxz
mov
roll
test
mov
movsl
adc
inc
xor
gs
adc
popa
and
mov
mov
test
mov
movsl
adc
inc
xor
gs
adc
popa
and
sbb
daa
popf
loope
sbb
dec
jl
mov
push
push
mov
add
push
cmp
jns
xchg
push
jns
clc
out
xor
sub
movsl
cmp
rcr
jg
jl
cmpsb
fildl
testb
das
test
subb
or
aaa
fiadds
jns
inc
jne
imul
add
cmpsb
stos
jne
cmp
jmp
jp
into
enter
and
sbb
dec
dec
lret
and
or
std
xchg
mov
mov
dec
jmp
ficoms
in
jae
adc
repz
roll
ja
popa
fs
or
jbe
idivl
mov
dec
mov
outsl
jmp
cwtl
rorl
mov
dec
mov
xchg
pop
cmp
jge
dec
lods
cmp
xor
jmp
adc
imul
dec
mov
xlat
pop
rclb
xchg
rol
mov
and
add
mov
loopnew
stc
push
xlat
out
sar
or
pop
fisubl
mov
lock
xor
mov
push
mov
mov
or
push
out
or
mov
cli
shrl
mov
test
xchg
mov
dec
adc
les
jl
xchg
inc
or
sbb
sub
jmp
aaa
stos
mov
pop
not
daa
pop
and
cmp
in
testb
mov
aas
dec
jnp
enter
mov
mov
inc
cld
cs
pop
add
fiadds
and
jle
arpl
rorb
mov
fldt
or
xor
xlat
pop
pop
gs
push
sar
lahf
cmp
aaa
mov
test
push
xchg
jae
daa
xor
repnz
aam
aas
mov
mov
andl
insl
push
push
lahf
mov
loop
sbb
push
pop
shl
and
mov
push
cmc
rcrl
imul
or
push
and
aad
pop
dec
insl
xchg
xchg
in
std
insl
add
sub
mov
out
and
cmp
aas
daa
add
xchg
out
xlat
or
mov
sbb
ret
pop
mov
inc
cmp
mov
cltd
sbb
jmp
shlb
ficomps
into
push
jo
stos
arpl
add
dec
imul
or
mov
jnp
test
ds
mov
fbstp
imul
xchg
sbb
mov
lcallw
jno
cmp
mov
push
ret
loop
addr16
mov
inc
sub
dec
fcoml
mov
mov
lcall
std
fadd
pop
shl
push
mov
iret
outsb
sbb
sbb
pop
hlt
adc
push
orps
frndint
stos
mov
xor
xlat
dec
or
or
push
mov
cltd
adc
push
inc
rcll
push
out
mov
dec
in
jl
mov
mov
cmpsb
pop
and
test
mov
bound
fsubr
js
stos
and
pushw
sbb
imull
pop
insl
add
stos
out
outsb
or
inc
sub
xor
jns
arpl
pop
xchg
sub
lea
in
popa
push
pop
pop
ljmp
push
jbe
outsb
pop
pop
cld
push
jge
gs
push
mov
sarb
cmpsb
std
jecxz
in
xchg
mov
sub
jns
mov
add
adc
inc
cmp
adc
div
test
xchg
jae
adc
ljmp
ret
and
mov
fsub
pop
add
movsb
sub
inc
adc
xor
lds
pop
sarb
pop
push
add
adc
scas
jae
and
leave
pop
jecxz
std
and
add
mov
cmp
stc
rcr
pop
int3
push
inc
in
ret
push
cli
out
adc
inc
das
xchg
sub
scas
inc
loop
pop
sbb
push
adc
sbb
sub
mov
push
push
sarl
in
fs
mov
sbb
aad
mov
cmpsb
popa
jl
mov
mov
int3
lods
mov
mov
adc
filds
les
mov
stos
outsb
and
les
add
sbb
lahf
sub
addl
dec
lods
adc
xchg
add
xlat
cmp
test
lds
sub
sbb
sub
adc
sbb
cltd
pop
lcall
adc
push
in
and
je
mov
mov
fimull
mov
repz
test
xchg
push
jle
xchg
sarb
imul
pusha
int
xchg
adc
inc
push
je
popa
dec
into
xchg
mov
or
push
loopne
cmp
addl
insl
hlt
sub
mov
xor
jg
stc
mov
sub
loope
mov
ret
test
xor
stc
fcomps
sub
notl
mov
cmp
push
push
shrb
std
adc
cmpsl
cmpsl
div
sub
notb
pop
rorb
mov
imul
fildl
push
dec
int3
imul
push
outsl
adc
push
aas
mov
cmpsb
pushf
push
mov
nop
js
movsb
movb
aad
xor
cmc
sub
mov
pop
aas
sbb
fists
mov
xor
or
popf
pop
cmp
int
fildll
insl
or
push
out
filds
loop
pop
mov
arpl
pop
xor
test
mov
sbb
xor
movsl
inc
dec
lahf
test
xor
aam
adc
in
inc
insl
push
jns
cmp
inc
push
sbb
mov
mov
hlt
jecxz
mov
out
sbb
enter
aaa
xor
pop
data16
pop
dec
push
push
scas
dec
shrb
int3
mov
push
push
in
int
jp
fimull
iret
xchg
mov
dec
es
xchg
mov
push
mov
in
into
xchg
mov
mov
cwtl
lods
adc
pop
or
lret
repnz
adc
adc
rcrb
mov
sub
pop
mov
out
adc
insb
mov
mov
jno
mov
push
movsb
push
arpl
pop
lret
cld
lahf
mov
movsb
in
and
mov
push
iret
jl
jge
xor
enter
pop
addl
xor
mov
mov
adc
mov
fnstcw
cmpsl
cmc
inc
aaa
or
push
rol
lods
push
fldln2
xchg
cli
orb
int3
scas
imul
stos
xchg
push
mov
loopne
addl
das
std
mov
out
mulb
cwtl
popa
out
pop
idivb
in
dec
loope
jmp
in
mov
aad
sbb
and
mov
mov
sti
pop
sbb
or
and
cmc
dec
movsb
sti
add
mov
pusha
stc
and
add
subb
daa
add
sti
xor
sbb
jmp
repnz
lea
push
stc
out
pusha
lret
sbb
shrl
mov
jl
mov
and
rorb
pop
mov
in
cmp
cmpsb
test
int3
pop
xorb
xchg
cltd
int3
cmp
inc
or
lcall
scas
into
mov
adc
into
dec
arpl
pop
push
cwtl
push
xchg
sub
or
test
xor
xor
sti
and
ljmp
cmp
cmp
xchg
inc
faddl
xchg
int3
popl
sbb
out
rol
ja
mov
and
imull
add
adc
sub
lds
and
fcoml
ljmp
repnz
fndisi(8087
push
movntps
fs
imul
push
mov
outsb
push
out
mov
es
ret
push
xlat
lcall
or
jge
sbb
or
fidivrl
inc
and
test
cmp
orl
in
and
arpl
and
push
pop
inc
cld
xor
ljmp
fiaddl
mov
popf
sbb
fcoml
arpl
cmp
mov
loopne
push
xchg
outsb
lret
mov
pop
pop
bnd
cmpb
xchg
jmp
and
sub
and
aas
in
fisubrl
and
inc
lods
fisubl
scas
mov
jecxz
inc
inc
xchg
sub
test
ret
pushf
gs
mov
push
ds
pusha
mov
cwtl
xlat
dec
mov
and
mov
or
cmpsl
cmovo
sub
adc
xchg
adc
into
jbe
test
cwtl
push
sub
sub
out
dec
rorb
pop
pop
jno
fbstp
lea
idivl
imul
js
out
dec
aad
and
xor
adc
sub
dec
xchg
xchg
pop
xchg
inc
mov
popa
jb
cmp
mov
inc
push
stos
out
and
or
repz
into
test
int3
adc
in
je
mov
or
mov
call
inc
dec
fstl
cld
push
int
loop
and
das
sbb
mov
hlt
enter
cmpsb
dec
scas
fimull
icebp
fwait
xor
ss
sub
jo
insb
dec
push
pusha
xchg
adc
movsl
aaa
cmpb
xor
sar
push
lcall
mov
push
lds
inc
dec
push
inc
dec
pop
mov
sub
movsb
rorl
xchg
mov
in
jnp
fldt
mov
and
sbb
adc
cld
sub
pop
fsubs
out
dec
jmp
lods
adc
ret
cmpl
test
jnp
lret
icebp
add
and
andb
jnp
sarl
add
daa
stos
imull
jmpw
aaa
aaa
xor
into
fdivr
xchg
fst
pop
dec
add
mov
push
mov
xchg
xchg
sbb
imul
push
mov
pop
mov
lods
imul
fistpl
add
rcr
xor
jle
jecxz
sub
xor
in
xor
add
mov
jno
xor
sbb
std
xchg
imul
add
sahf
cmpsb
or
xchg
sub
insb
push
js
xchg
adc
test
xchg
xor
inc
inc
sub
outsl
inc
inc
mov
mov
jnp
cwtl
fcmovnbe
cmpsb
or
dec
aas
xor
xor
push
fcomi
push
and
fnstcw
adc
stos
mov
imul
lea
xor
push
cmp
fildl
subw
push
xchg
lods
cwtl
sub
mov
pop
jae
add
je
mov
jmp
xlat
jl
mov
daa
outsl
outsb
ds
test
out
ret
mov
movsb
ret
nop
movsb
ret
jb
mov
dec
mov
xchg
cs
aaa
push
or
xchg
iret
mov
mov
mov
xor
lds
jl
and
jg
out
and
ss
xor
and
xor
inc
sbb
mov
pop
push
movsb
test
pop
sbb
aad
xchg
les
fwait
cmp
mov
cmp
rol
cmp
cltd
lods
cld
or
or
mov
fcomp
dec
push
in
jne
sub
jl
cmp
xor
push
test
je
in
das
cmc
das
int3
jnp
xchg
push
call
hlt
and
out
fstl
add
cmp
out
sbb
or
jns
out
mov
jae
out
jns
popa
dec
shll
mov
mov
cmp
repnz
and
mov
or
and
filds
pushf
mov
mov
notl
inc
mov
push
std
test
jb
sbb
push
jecxz
les
adc
push
js
fisttpl
lock
sub
out
scas
sti
jnp
ljmp
mov
lods
bound
sbb
cmpsb
sbb
mov
cmp
stc
dec
or
inc
cmp
and
cmp
add
dec
icebp
test
enter
enter
ja
arpl
ss
into
jo
popa
shr
cli
out
or
push
insb
xor
and
xor
int3
popa
sti
mov
insl
loope
ret
mov
je
xchg
sahf
add
iret
jl
dec
adc
cli
inc
push
add
in
addr16
test
sub
dec
inc
dec
inc
aaa
push
mov
pop
leave
lret
inc
popa
jmp
sub
leave
scas
leave
mov
adc
mulb
adc
cmp
adc
jo
hlt
jns
push
push
push
push
xchg
inc
dec
xchg
adc
mov
fwait
cltd
leave
lea
cs
adc
pmaxub
sbb
andb
ret
call
push
sti
inc
mov
xchg
rcrl
test
pop
sbb
and
addr16
and
fnstcw
sbb
sub
or
adc
cmc
lods
shlb
loope
ljmp
dec
icebp
xchg
add
add
and
ret
add
repnz
fldt
and
or
pop
pop
push
adc
push
and
nop
aam
addr16
inc
js
outsl
out
xchg
xlat
scas
xchg
aas
lret
enter
push
js
int
inc
xchg
cld
pop
or
rorb
pop
enter
and
pushf
xchg
mov
push
push
leave
movsl
and
fisubrl
pop
mov
jg
test
inc
or
cmp
rcll
lds
arpl
into
lret
dec
mov
inc
push
mov
xchg
pop
or
sbb
xor
sahf
shl
fstl
clc
mov
cmp
in
sbb
mov
mov
xchg
idivl
jmp
cmpsb
mov
stos
ja
jle
dec
push
pusha
pop
es
cld
call
fwait
or
aam
movsl
fs
dec
inc
stc
sbb
jecxz
xor
enter
mov
sbb
decl
rorl
nop
stos
bound
ret
sbb
pop
push
jb
js
push
lret
mov
cmpl
arpl
mov
dec
lcall
sbb
cwtl
outsl
mov
bound
xlat
xchg
iret
mov
daa
mov
sbb
or
subl
dec
clc
inc
pushf
in
push
mov
les
xor
or
aaa
arpl
sub
idivb
inc
and
xor
je
icebp
lret
int3
mov
xor
xor
je
mov
add
mov
jb
dec
dec
pop
sbb
out
sub
add
pop
inc
mov
add
or
pop
in
xchg
xor
xchg
push
xchg
out
jmp
jns
lock
add
lea
jmp
and
fidivrs
pushf
movsl
movsb
mov
leave
push
lds
outsb
subb
pushl
addr16
dec
cmp
pop
out
es
fwait
bswap
inc
jecxz
and
inc
pop
dec
popaw
or
sub
mov
sub
aam
pop
mov
and
sti
icebp
jg
insl
pop
cli
sbb
addb
jge
test
xor
xor
clc
sbbl
dec
fbstp
xchg
es
cmpsl
lcall
inc
jp
cli
or
push
mov
call
adc
inc
adc
mov
in
mov
das
jmp
mov
inc
and
notl
adc
and
in
std
sbbb
mov
cltd
mov
enter
cmp
mov
pop
mov
pop
inc
xchg
jo
inc
andl
cmp
lock
xchg
and
push
jl,pn
mov
inc
cmpsb
mov
sub
sbb
xchg
ret
in
jmp
push
sub
ss
xor
xchg
jne
dec
pusha
add
sbb
fnstcw
std
adc
stos
cmpl
sbb
inc
mov
aaa
add
xor
xor
mov
ds
and
out
xor
inc
push
xlat
xor
jl
jbe
insb
scas
lds
outsb
in
ss
adc
add
mov
xchg
pusha
je
push
push
mov
mov
jb
jge
cltd
mov
mov
loope
dec
mov
jge
bound
sbb
fidivrl
shr
jl
shlb
or
ret
push
in
xor
rcll
add
daa
mov
popf
mov
xor
ja
and
cmp
pop
in
lds
cmpsl
call
out
es
and
gs
xor
fildl
cmp
mov
je
std
cltd
mov
imul
lds
daa
dec
cmp
mov
jo
push
imul
lcall
mov
pop
push
adc
fsubrl
mov
or
pop
aas
in
lahf
arpl
add
lods
xchg
fsubrl
mov
stc
adc
push
nop
aam
or
jbe
jl
jp
stos
dec
das
xor
subb
fists
dec
sbb
add
data16
xor
adc
inc
mov
push
bnd
dec
cmp
imul
dec
xchg
lret
xchg
fsubrl
xchg
cmp
das
cmpsl
fdivrl
inc
shll
enter
popf
test
imul
jns
jnp
mov
orb
mov
inc
xor
dec
insb
mov
add
and
cmp
fisttpl
cmc
adc
adc
mov
add
sub
std
lret
aad
clc
cmc
adc
mov
inc
movsl
insb
cltd
imul
inc
enter
inc
rorl
xchg
mov
sbb
xchg
xor
xchg
into
jl
mov
inc
ret
xchg
mov
enter
jp
ret
or
stc
daa
cmpb
mov
imul
sub
inc
push
cmp
or
mov
xchg
sub
add
pop
dec
arpl
add
inc
push
aas
or
sbb
mov
fisttpll
jno
popf
jmp
xor
fmuls
sti
adc
mov
out
mov
and
lds
push
movsb
out
cld
movsb
outsb
std
mov
mull
jmp
les
inc
xlat
movsl
cmp
incb
sti
aam
aas
mov
cmc
aad
lcall
or
inc
pop
mov
mov
pop
sub
cmp
xchg
push
add
fidivrl
dec
es
stc
roll
jae
stos
mov
in
adc
and
loope
orl
icebp
test
rol
testl
aad
roll
jae
je
push
add
mov
sbb
jmp
outsl
sub
mov
mov
ja
mov
push
insl
inc
or
addr16
xchg
xor
sbb
movsb
mov
lock
stos
inc
insb
outsl
cwtl
popa
inc
dec
push
jae
push
inc
dec
andl
push
daa
das
jb
hlt
repz
jmp
mov
pusha
aaa
pop
loop
sub
scas
js
test
sbb
xchg
dec
insb
xor
mov
sub
lahf
pop
int
push
xchg
jge
adc
loopne
stos
mov
inc
cs
push
push
pop
and
mov
loop
in
push
inc
fst
push
mov
in
shll
cmp
jns
push
xchg
cmp
mov
into
scas
inc
mov
mov
mov
dec
idivl
adc
lret
in
imul
jge
testl
div
xlat
ret
cmp
cmp
andb
arpl
push
pop
dec
stos
lea
inc
mov
jp
movsl
push
sbb
mov
mov
and
mov
adc
loope
fcmovne
mov
mov
cld
mov
push
push
cld
rclb
jno
push
xchg
les
hlt
jae
imul
adc
out
mov
movsb
fmul
adc
stos
cld
sahf
not
stos
cmpsb
lods
xchg
inc
sti
out
and
mov
cmp
arpl
cmp
std
sub
mov
lcall
jmp
add
xor
or
jmp
fs
mov
cmpsb
sbbb
lret
stc
mov
sub
pop
mov
jecxz
fldt
push
es
or
inc
jg
test
dec
xchg
inc
lahf
cltd
sbb
rorl
mov
lahf
xor
ret
push
nop
out
push
cmp
jle
mov
je
mov
inc
fistpll
mov
pop
aaa
cmp
loope
insb
jno
fdivl
jecxz
push
rcl
xorb
in
orl
fdivrl
cmp
inc
jl
les
sub
or
mov
out
ljmp
push
lahf
xchg
mov
mov
push
push
movsl
adc
sti
fdivrl
int3
dec
push
out
stos
jmp
jno
push
jle
icebp
out
push
mov
jmp
inc
fadds
outsl
mov
call
jecxz
jnp
test
xchg
inc
iret
into
sbb
mov
sub
es
loopne
pushl
cmp
addr16
adc
and
xchg
push
pop
test
test
div
ficomps
aaa
push
mov
std
xor
jae
jmp
lcall
push
repz
dec
outsb
mov
leave
dec
pop
jno
pop
inc
call
stc
popa
scas
mov
outsb
inc
imul
sti
ljmp
cmp
mov
jb
in
ja
jbe
cmc
mov
xor
mov
jg
jge
push
imul
ficompl
clc
add
push
arpl
fucom
push
cmpsb
pop
xchg
jnp
fstpt
clc
xor
les
push
fs
lahf
iret
loop
push
and
dec
outsl
mov
or
ds
adc
xor
pop
lds
mov
test
mov
movsl
adc
inc
xor
gs
adc
popa
and
mov
mov
test
mov
movsl
adc
inc
xor
gs
adc
popa
and
mov
xchg
lds
adc
jne
gs
adc
push
and
cmp
mov
rcll
popa
movsl
adc
out
fwait
jne
adc
popf
leave
cli
mov
sahf
ficoml
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
push
mov
out
xchg
arpl
adc
or
sub
xchg
jae
mov
mov
cmpsb
pop
xchg
arpl
xor
and
shll
ret
es
push
jecxz
rcrl
data16
mov
pusha
loope
mov
scas
sub
ss
fwait
ja
je
and
jmp
cmp
lds
jecxz
stc
add
jmp
mov
outsb
in
scas
subl
cmpsl
or
repz
jns
jecxz
insl
mov
leave
mov
jbe
pop
push
insb
arpl
cmp
fiadds
incl
iret
jne
ficompl
inc
pop
cmp
adc
out
jecxz
addl
orl
loop
int3
push
and
mov
ja
sbb
jmp
test
dec
pop
push
imul
out
lds
cmp
adc
cmpsb
not
sbb
jae
add
ficomps
jecxz
push
in
mov
push
loopne
jbe
rclb
push
push
shlb
mov
mov
xchg
arpl
xor
test
pop
mov
dec
mov
cmp
sbb
jl
insl
mov
and
xchg
mov
gs
in
or
and
das
push
lock
in
ljmp
jbe
mov
xchg
push
repz
fwait
ss
xor
adc
xor
inc
mov
and
shll
ret
es
jecxz
xchg
jbe
data16
mov
cmpsb
jae
arpl
xor
and
shll
ret
es
jecxz
xchg
jbe
data16
mov
lock
mov
add
mov
pop
jne
repz
dec
pusha
add
popa
adc
iret
push
jle
out
dec
inc
fisubs
pushf
cmp
out
mov
ret
mov
lea
xor
lret
and
cmpsl
std
fldcw
push
xlat
xchg
ret
clc
outsl
jg
cmp
imul
dec
or
jmp
mov
add
fildl
bound
pop
stos
cld
sbb
cmc
push
lret
mov
sub
cs
inc
lret
imul
mov
arpl
test
mov
jbe
dec
or
sti
inc
and
ljmp
mov
add
xor
scas
mov
rcll
sub
jne
cmc
adc
push
cmp
addr16
mulb
fcmovnu
repz
int
ljmp
aas
inc
mov
and
push
mov
mov
inc
leave
jae
es
add
pop
dec
lret
aad
mov
inc
das
inc
add
sahf
pop
in
lock
icebp
add
pop
mov
xor
aam
cmp
mov
and
xchg
jmp
push
push
cmp
xchg
mov
mov
pop
in
mov
enter
shl
or
lock
or
sbb
fsts
mov
lret
test
jecxz
sti
adc
cmpsl
push
and
push
xchg
sub
or
xchg
mov
dec
pusha
cltd
mov
aam
jle
cmp
repnz
data16
cli
adc
jle
icebp
je
dec
inc
mov
mov
subl
pop
mov
adc
mov
test
cmp
sbb
push
mov
hlt
add
fdivrl
sbbl
mulb
jae
or
hlt
aam
sbb
xchg
inc
int
mov
cmpsl
push
add
mov
test
xchg
in
or
push
roll
unpckhps
xchg
jae
sbb
jle
inc
cmpsl
jns
ror
cmp
subl
inc
dec
loopne
sbb
stos
fs
jle
adc
rcrl
int3
pop
mov
daa
lret
push
xchg
mov
in
pop
popf
push
shrl
xor
jo
das
mov
stc
xchg
aam
in
lcall
dec
xchg
int3
xor
clc
cli
insb
mov
adc
and
jb
mov
mov
adc
cmpsl
pop
cld
mov
sbb
push
mov
clc
ljmp
cmpsb
test
xor
les
adc
inc
push
pop
jo
cmpsb
lret
mov
stos
mov
fiaddl
and
push
push
jp
cmc
iret
sbb
add
call
lret
arpl
adc
adc
add
add
in
push
pop
pop
outsb
mov
cld
std
mov
popa
mov
push
movsl
push
int
pop
lcall
or
cmp
or
pusha
ljmp
jno
add
in
fsubrs
sti
std
fmul
inc
and
add
shlb
call
xor
popa
imul
leave
outsb
jl
jl
mov
sarl
das
mov
and
daa
push
clc
add
fldenv
sub
pop
repz
in
jl
sub
int3
arpl
xchg
icebp
ds
int3
divb
cs
leave
push
rcll
fstpl
mov
cwtl
in
sub
enter
movsb
xchg
mov
js
add
andl
movsb
push
lods
add
ss
adc
sub
add
hlt
pop
insl
int3
call
in
mov
pop
sub
lods
lods
repnz
dec
fldcw
inc
lea
mov
cwtl
subl
jp
sbb
xor
inc
add
cmp
pop
push
mov
xor
and
call
mov
cltd
ret
add
add
xchg
inc
sub
arpl
adc
cmp
movsb
mov
sti
mov
ds
jp
aad
or
mov
jge
push
mov
outsb
lret
fimull
xor
stos
scas
push
fwait
in
sbb
jge
gs
and
ss
dec
cmp
inc
jbe
mov
data16
in
rcrb
shll
cmpsb
gs
ret
addr16
mov
jle
jne
mov
test
add
cld
pop
jl
cs
arpl
cld
daa
rorb
pop
rcrb
mov
fistps
xchg
stos
ds
dec
popa
adc
sub
addr16
add
pushf
dec
lret
jg
outsl
outsb
pop
pop
cmc
jp
daa
sbb
and
adc
mov
mov
cmpsl
dec
push
mov
sbb
and
pop
stos
mov
sahf
pop
lods
xor
jb
movsl
stc
sbbl
fwait
movsb
xchg
mov
imul
or
adcl
bnd
xchg
lret
adcb
iret
and
pop
nop
testl
in
or
fbstp
mov
add
jnp
repnz
jnp
sbb
cmpsl
mov
pusha
pop
outsl
mov
insb
push
jge
fadds
jecxz
mov
stc
xchg
lock
mov
fs
xor
pop
aad
enter
adc
imul
or
repz
mov
mov
xchg
ror
outsb
push
push
ret
and
dec
pmaddwd
dec
mov
dec
pop
cmp
out
inc
lods
adc
in
lret
add
jl
dec
xor
aas
sahf
std
fdivrp
hlt
les
repz
jmp
pop
xor
loope
scas
outsb
inc
cltd
rcr
or
jp
gs
push
lods
gs
jl
jo
jl
xor
and
adc
mov
sub
aaa
push
mov
mov
in
jo,pn
xchg
fwait
neg
mov
push
cmpsb
pop
xchg
lret
lds
cmp
icebp
sub
sub
fcoml
cmp
das
ret
mov
mov
xor
jge
or
fists
scas
stos
and
pop
push
arpl
xchg
inc
mov
movsl
out
ljmp
xlat
rcl
pop
dec
sbb
add
popa
or
xor
loop
jne
sub
mov
test
mov
push
cmpb
and
lds
and
fsubrs
or
cmp
divl
jge
mov
jmp
imul
xchg
adc
sbb
jle
shl
mov
sub
pushf
adc
mov
nop
push
das
mov
push
scas
adc
nop
mov
cmp
jp
xchg
icebp
lahf
mov
bound
iretw
mov
jbe
jge
mov
ja
mov
sti
mov
daa
rcll
inc
and
or
jbe
ljmp
xchg
cmp
fstpt
ss
fistpll
xchg
stc
push
dec
cld
inc
and
cmp
xlat
popa
inc
sub
nop
sbb
adc
andl
fimuls
mov
mov
lock
and
jecxz
or
nop
or
jne
mov
push
xchg
mov
cmpsl
xorl
into
push
push
cmp
mov
mov
andb
xchg
jno
mov
fst
mov
pop
or
or
xchg
bound
sub
addl
iret
dec
fmuls
xchg
imul
push
cmpsl
jmp
test
adc
ds
or
fsubrs
lcall
ror
popa
fistl
test
int3
addl
into
sub
push
or
push
and
push
mov
rcrb
roll
fdiv
lret
or
push
jmp
outsl
pop
xchg
add
dec
or
xchg
jbe
mov
jmp
cmpl
fwait
daa
pop
cmp
lcall
mov
sub
sub
lahf
xchg
js
jle
stos
push
movsb
cmp
fcomps
adcl
mov
mov
cs
mov
decl
sub
push
push
push
push
loopne
add
popf
or
cs
mov
sub
or
cli
inc
inc
rcrb
call
sbb
push
mov
lret
push
inc
lods
cmp
pop
mov
je
pop
dec
adc
dec
fidivrs
dec
int
cmpsb
mov
lret
imul
imul
mov
xor
nop
clc
out
cld
pop
xor
adc
sarl
aam
ja
jp
mov
cmp
ss
pop
or
pop
inc
adc
sub
inc
test
inc
int
popa
cld
cmp
sub
xchg
jb
fadds
adc
insl
push
adc
insb
out
decl
dec
add
lock
scas
push
lds
pop
mov
dec
out
fs
push
inc
dec
push
jle
dec
cmp
xchg
push
sub
xor
loopne
repz
or
fs
clc
repz
sbb
dec
loopne
aas
pop
fdivrl
outsb
push
mov
xchg
sbb
push
push
unpcklps
or
lcall
push
push
faddl
ljmp
test
mov
test
pop
pop
cmp
iret
mov
dec
addr16
mov
cmp
sub
imul
xchg
dec
jae
jns
or
js
cmpsb
xor
es
lcall
xor
fstpt
mov
jns
fidivrs
movsl
xor
insl
shll
test
mov
xchg
dec
push
les
loope
cmpb
cmp
mov
add
sbb
mov
pop
iret
addr16
mov
ljmp
cmpsb
or
aam
cld
fmuls
jmp
in
test
xchg
fstps
decl
cmp
inc
shll
pop
jbe
push
mov
cli
sub
shll
aam
outsb
and
sub
cmp
sbb
xor
xor
pop
and
ret
pop
mov
mov
pop
jg
fnstsw
mov
add
sbb
je
clc
rcrl
dec
std
aam
nop
xchg
jecxz
xor
out
nop
pop
push
into
xchg
rcrl
sbb
cli
movsl
push
sub
mov
cwtl
add
and
popf
jg
test
inc
sbb
lea
adc
inc
hlt
movsl
fnstcw
loop
cmp
push
or
jbe
lret
jbe
daa
fstl
jae
xchg
mov
mov
popf
inc
jp
pop
fwait
negl
add
push
out
pop
cmp
addb
jne
out
idivb
ljmp
xor
sbb
loope
fists
mov
or
mov
out
mov
adc
insb
fucomi
mov
xchg
rcrb
pop
sbb
xor
inc
xchg
lret
dec
sbb
xchg
scas
stc
in
mov
mov
lods
and
mov
rclb
leave
mov
pop
and
lcall
lret
out
arpl
lods
dec
xchg
mov
adc
outsl
add
inc
pusha
adc
sub
pop
movsl
out
mov
jb
dec
cltd
scas
jp
mov
ret
xor
mov
and
test
cmpsl
je
inc
test
jl
sub
xchg
sub
adc
cmp
mov
mov
mov
decl
sbb
xlat
or
jb
movsl
add
loope
inc
pop
mov
sub
mov
js
lds
arpl
in
sbb
popa
cmp
inc
dec
lret
fistps
shl
loop
cwtl
cli
xlat
and
test
cmp
scas
imulb
xor
pop
rorb
mov
sbb
cwtl
jl
xchg
inc
popa
rorl
sbb
cld
inc
scas
xchg
nop
cmc
in
pop
and
out
rcrb
push
das
xor
pop
neg
adc
sbb
frstor
mov
mov
dec
data16
hlt
fs
lahf
test
mov
cmp
pop
ffreep
xchg
in
out
arpl
dec
nop
jo
sbb
out
sbb
clc
cmp
mov
pop
lods
fldcw
jecxz
scas
jno
push
mov
pushf
sbbb
jecxz
inc
xor
dec
add
out
test
push
or
cli
push
cs
cs
jb
jl
daa
jp
cmp
movsl
loopne
int3
je
jns
mov
out
mov
cmp
and
das
stos
push
jae
je
mov
int
jnp
xor
push
push
jo
out
mov
xlat
xchg
xlat
sbb
adc
mov
gs
push
shrl
jnp
lods
cmp
call
aam
xchg
icebp
adc
or
and
imul
sbb
xchg
test
movsb
or
cmpsl
imul
rcrl
inc
call
aad
movsl
in
imul
ds
cli
or
aad
cmp
pusha
mov
dec
clc
adc
rcr
push
cmp
jnp
cs
mov
jge
int
fwait
cli
fwait
jg
push
outsb
mov
clc
imul
aas
jle
lcall
fcomps
arpl
sub
loopne
mov
or
push
xor
jg
int3
xlat
and
pop
xor
ffree
add
addr16
fs
pop
ds
testl
push
mov
pop
pop
and
outsl
sub
adc
rclb
std
fwait
jmp
pop
outsl
and
repz
sub
ljmp
inc
fs
cli
repz
or
lock
sbb
inc
push
adc
push
adc
loope
mov
push
scas
add
fdivrs
lahf
js
std
xchg
cmpl
pop
inc
test
inc
test
rcrb
arpl
pop
add
imulb
mov
push
in
mov
or
gs
out
gs
dec
je
xlat
inc
icebp
rorl
and
js
and
shll
stos
jno
scas
jle
push
test
in
inc
cmp
sub
inc
cmp
sbb
push
jnp
push
or
xchg
ljmp
pop
ss
xchg
sar
lea
fimuls
inc
mov
jmp
pop
arpl
push
jg
inc
sub
mov
outsl
enter
cmpsb
bound
mov
js
out
fwait
aaa
adc
in
adc
dec
pop
in
mov
pop
jecxz
push
cld
divl
push
jb
mov
or
sub
dec
arpl
out
imul
in
dec
or
lods
mov
mov
aad
sub
imul
or
fldcw
shrb
sbb
out
and
mov
ds
dec
in
js
mov
inc
test
sbb
fiaddl
sub
adc
xlat
in
imul
push
jns
gs
das
fldenv
sti
stc
sbb
shlb
bound
lds
bound
mov
in
add
fistl
ficompl
test
mov
xchg
mov
mov
icebp
and
adc
cmpl
ss
mov
popa
push
ss
mov
addr16
mov
ja
pop
xchg
dec
adc
fwait
out
pop
movsb
and
xchg
xchg
cwtl
lea
sbb
add
les
sub
fs
push
arpl
pop
mov
inc
inc
jbe
or
dec
push
imul
into
and
loopne
not
mov
cmp
sti
sbb
pop
or
inc
cmpsl
fdiv
cmp
pop
push
mov
dec
xchg
jl
mov
repz
aaa
and
cmp
lock
sub
inc
dec
mov
popf
pop
fs
dec
add
mov
imul
cmpsb
bound
lea
or
pop
daa
inc
add
rolb
mov
aad
add
sti
sti
or
jge
repz
in
pop
inc
mov
dec
andb
outsb
xchg
arpl
add
fcmove
dec
loope
inc
std
fistpll
aas
dec
mov
xchg
scas
addr16
fcoml
idiv
adc
in
mov
add
and
insb
je
push
jmp
dec
jp
in
and
mov
inc
mov
sbb
fmuls
test
loope
adc
mov
addr16
mull
inc
mov
sbb
xor
pop
pop
push
in
push
mov
mov
into
mov
mov
mov
xor
scas
loope
rcrl
bound
push
cmp
xchg
aaa
fnstcw
dec
adc
pusha
dec
xchg
mov
scas
ret
push
fadds
popf
push
xor
insb
xor
lock
fidivrl
div
dec
jmp
cmp
cmpsl
or
jp
int3
loop
scas
xchg
xchg
push
ds
test
inc
add
mov
or
fcmovb
or
dec
inc
cli
jp
nop
js
xor
fwait
inc
fldenv
xlat
hlt
sbb
movsl
stos
data16
adc
adc
pop
leave
jbe
jb
sbb
aaa
cwtl
outsb
xchg
jmp
mov
std
lods
test
sbb
and
push
mov
push
fwait
xlat
cld
jle
dec
xlat
xor
cmpsl
arpl
jne
shrb
add
cmpb
mov
mov
outsl
ss
mov
jbe
mov
pop
idivl
loopne
fsts
popf
orb
xchg
or
arpl
andl
cs
pop
loopne
pop
dec
xor
clc
fstpt
mov
mov
mov
rcrl
loopne
and
xor
jecxz
clc
jbe
sahf
push
cli
add
mov
hlt
jo
roll
nop
outsl
cmc
push
push
jmp
aaa
divl
adc
inc
inc
jno
aaa
rorb
fbld
decb
sub
fisubrs
inc
scas
mov
stos
aaa
rcr
add
and
add
fucom
sbb
push
push
dec
mov
gs
les
in
mov
mov
pop
mov
push
jmp
andl
pop
push
push
scas
arpl
adc
xchg
lods
call
sub
sbb
lret
nop
jmp
jp
jmp
shrb
loope
inc
sub
mov
insb
sbb
fdivrs
call
sub
push
stc
fwait
out
test
loop
lea
sub
inc
cltd
cmpsb
idiv
cmp
pushf
cmp
and
mov
repz
xor
push
in
dec
add
cmp
dec
jp
mov
inc
mov
mov
cmc
movsl
rcl
jge
nop
mov
inc
and
test
pop
pusha
ljmp
stos
cld
shlb
dec
push
inc
lock
inc
sbb
push
daa
lods
sbb
dec
lea
sbb
int
mov
in
mov
xchg
pushf
jne
push
sbb
pusha
lock
add
dec
fsubrl
and
xchg
cmc
test
lods
cmc
jno
jo
xlat
mov
pop
rorl
outsb
ds
mov
les
jbe
fidivrs
add
jg
pushf
mov
and
pop
shlb
leave
add
stos
fnstcw
mov
lret
add
lahf
xchg
xchg
mov
loop
insb
jp
inc
or
pop
lods
pop
bound
addl
mov
lcall
data16
cwtl
adc
pop
adc
ss
pop
push
out
repnz
in
mov
addr16
shll
jmp
adc
inc
in
mov
cmp
mov
lret
pop
push
mov
inc
test
outsb
xchg
xchg
movsb
and
divl
mov
insl
mov
cwtl
push
and
mov
or
xchg
cmp
ret
jle
int
ret
mov
jns
xor
lahf
cwtl
add
xchg
test
jb
ljmp
dec
jp
mov
cmp
push
fidivrs
adc
add
mov
dec
icebp
mov
push
inc
call
add
pop
push
cmp
pop
mov
lret
fwait
mov
mov
sbbb
and
rolb
movsb
mov
scas
in
jbe
inc
daa
xor
test
dec
cmc
dec
inc
add
cmpsl
dec
adc
mov
mov
shr
lods
hlt
frstor
mov
pushf
imul
mov
cs
xor
add
pop
pop
jbe
sub
andb
sbb
in
mov
and
jnp
dec
push
out
jnp
dec
jl
pop
sbb
into
pop
mov
xchg
in
ret
stc
and
outsb
pushf
ficoms
xor
and
ficompl
shlb
lret
mov
dec
cld
mov
mov
mov
push
push
test
in
fimuls
outsl
mov
jae
or
out
xchg
jl
shrl
dec
pop
stos
insl
cmp
mov
ret
cwtl
sbb
insb
mov
mov
mov
idiv
inc
jns
call
ficoms
in
enter
pop
push
xor
push
jl
mov
sbb
cld
sub
mov
push
inc
sbb
adc
xchg
fwait
adc
xor
mov
adc
cmp
xor
mov
jg
jnp
mov
hlt
mov
sbb
es
iret
dec
movsl
out
mov
stc
push
cmp
mov
lcall
das
sub
inc
mov
xor
jecxz
cmpsb
xor
arpl
xor
and
shll
ret
es
jecxz
xchg
jbe
data16
mov
cmpsb
jae
arpl
xor
and
shll
ret
es
jecxz
xchg
jbe
data16
mov
test
mov
xor
lea
shl
shll
ret
and
push
jecxz
xchg
jb
data16
dec
mov
sub
adc
adc
xor
push
ror
cmp
pop
push
jecxz
in
or
dec
cs
fcomps
enter
call
daa
int
pop
cltd
dec
mov
push
mov
stc
sub
fcomps
enter
call
dec
mov
cltd
dec
mov
push
leave
cmp
sub
fcomps
enter
call
dec
mov
cmpsl
dec
aad
leave
inc
test
jbe
inc
jmp
mov
mov
lcall
xchg
ficomps
adc
adc
sub
mov
or
mov
pop
popa
scas
and
jmp
out
sbb
adc
xor
pusha
inc
push
cltd
ret
inc
call
xchg
cli
pop
push
call
or
pop
cwtl
pop
inc
nop
sarb
stos
pop
pushf
cmc
inc
dec
push
out
pusha
cltd
cmp
sub
daa
test
and
mov
xchg
mov
loope
xchg
adc
mov
clc
cmp
icebp
mov
xchg
dec
dec
inc
mov
in
or
cwtl
cmpb
cmp
xchg
enter
call
dec
mov
cltd
dec
mov
push
leave
cmp
sub
popf
jg
outsl
hlt
rorl
sbb
sbb
cmc
dec
loopne
xlat
add
jge
popa
mov
jnp
mov
pop
mov
jle
cmp
addr16
fmull
cmp
sub
cmpsb
dec
mov
xchg
dec
jmp
dec
mov
cltd
dec
mov
push
leave
cmp
sub
fcomps
enter
call
dec
mov
cltd
dec
mov
push
leave
cmp
sub
fcomps
insl
sbb
lret
int3
clc
inc
pushf
adc
aad
test
pop
cmp
std
xor
cmp
jns
insl
lea
mov
dec
xor
in
push
mov
into
dec
mov
pop
xchg
lods
les
in
or
jmp
or
adc
mov
xchg
aad
sub
mov
jle
cmpsb
adc
mov
iret
icebp
in
push
xor
xor
xor
das
mov
pop
es
pop
inc
push
incb
scas
adc
frstor
sti
cmp
imul
popf
xor
jbe
jge
jae
jg
imul
jne
mov
cmpsl
imul
ja
fimull
repz
inc
or
loop
jl
aam
mov
int
add
outsb
aas
into
mov
push
mov
inc
stos
sub
imul
jp
lret
pushf
pop
inc
pop
ss
lret
mov
int3
fnstcw
in
je
xchg
fcomps
lret
lods
pop
add
loopne
ja
cmp
and
lods
mov
push
push
repnz
jge
jns
fsts
add
sbb
inc
cltd
les
mov
sbb
jae
stos
or
shll
and
mov
adcl
and
add
nop
and
shlb
dec
jnp
orb
dec
es
or
cmp
movsb
outsb
in
pop
dec
test
cmc
xchg
dec
xchg
cltd
aad
or
cmovbe
leave
and
dec
push
xchg
sub
movsb
pushf
fs
mov
jle
jg
or
sub
push
int3
mov
stc
cs
test
mov
outsb
clc
inc
inc
lods
sbb
mov
adc
dec
sbb
mov
jp
enter
hlt
pop
mov
sbb
mov
std
outsl
xor
mov
push
in
dec
dec
push
inc
mov
push
cmp
mov
repz
fwait
sub
stos
enter
pop
and
jge
dec
fistpl
std
mov
out
cmp
outsl
mov
sbb
xor
rol
stos
aaa
dec
dec
pop
fbstp
sbb
ja
xchg
or
icebp
xor
dec
or
shlb
sbb
shlb
ret
jl
mov
fcomps
push
jae
les
ret
stc
outsb
pop
adc
xor
outsl
xor
cmp
pop
inc
mov
inc
or
pop
cld
test
popa
jp
in
fidivl
mov
cmp
xor
dec
xorl
xor
xchg
adc
xchg
mov
mulb
mov
aaa
cmp
inc
dec
xor
repnz
mov
insb
mov
sub
leave
gs
das
out
hlt
fidivrl
pop
sbb
or
add
into
push
lods
or
cmpb
jg
data16
enter
xor
adc
fcom
fwait
pop
push
pop
iret
push
xor
and
je
mov
sub
mov
inc
cmpsl
mov
xor
ss
ret
cli
les
stos
xor
or
push
shl
leave
clc
sbb
enter
dec
mov
jl
lahf
jle
pop
adc
or
js
or
xor
mov
iret
add
jb
mov
mov
cld
hlt
aad
arpl
cltd
add
dec
lret
lret
xchg
mov
mov
push
xchg
xchg
pop
push
ljmp
scas
inc
sbb
pop
mov
xor
jle
ret
xchg
loope
dec
mov
jmp
dec
or
cmp
pop
pop
jnp
out
cmpsl
and
stos
xchg
add
pop
or
sbb
pop
mov
shrb
jno
cmp
lods
jmp
outsb
and
add
lcall
jb
pop
inc
lods
mov
imul
sbb
sahf
popa
out
xchg
cwtl
loopne
lahf
or
cltd
stos
data16
arpl
lahf
loop
rorl
mov
scas
xchg
mov
aas
add
pop
in
sub
pop
or
sahf
mov
outsl
dec
adc
cld
bound
adc
mov
test
jne
shlb
push
aas
out
shlb
out
cmp
scas
adc
sbb
fisttpl
ret
sub
out
cmp
iret
adc
loopne
fistps
insl
cli
int3
xchg
arpl
and
bound
mov
rcrl
shll
pushf
sub
mov
cmp
cmpsb
sbb
dec
lahf
inc
leave
add
and
add
call
sbb
test
mov
in
loopne
stos
push
loop
and
int3
lods
xchg
mulb
aad
xchg
stos
imul
iret
iret
out
ret
dec
or
ja
mov
sbb
dec
pop
mov
mov
push
fistpl
add
ds
lret
mov
inc
js
rcr
jns
pop
mov
xlat
shrl
dec
out
push
insb
imul
mov
or
sahf
rcll
pop
xor
or
ds
mov
negl
mov
cli
xchg
push
bsr
and
ss
mov
cmp
in
jbe
sbb
in
xchg
sarb
cmp
xchg
mov
daa
popa
rcr
inc
popa
outsl
mov
rorl
ror
and
add
dec
cs
jg
pop
movsl
mov
or
addr16
sahf
xor
outsb
xchg
int
cld
das
mov
lret
jecxz
push
push
jp
jnp
sbb
xbegin
loope
lods
rolb
dec
mov
cld
pushf
sub
push
jp
push
or
push
push
stc
push
jns
cwtl
and
adc
lods
dec
stos
ret
xchg
dec
jmp
in
pop
sti
mov
cmpb
movsb
pop
xchg
iret
imul
and
stos
jbe
or
stc
mov
out
scas
mov
fimuls
rcll
aaa
add
cmp
xor
sub
adc
movsl
loop
mov
pop
jae
lcall
jns
mov
xor
shll
mov
push
inc
ret
xchg
lret
xchg
stc
jge
cmpsb
lcall
lcall
xchg
jmp
mov
sub
or
loope
pop
push
xchg
dec
dec
xchg
insb
test
je
cmp
dec
movsb
jl
jo
xchg
sti
jne
sarl
stos
sub
in
adc
jbe
push
dec
bound
mov
rolb
lods
push
stc
adc
sub
xchg
cmc
adc
xchg
cmp
sbb
push
int
loop
cmp
dec
mov
daa
mov
push
loop
int3
add
stos
dec
jae
ret
xor
push
lods
into
mov
decl
push
inc
inc
mov
sarb
les
adc
out
int
sbb
lods
aad
or
ljmp
or
aas
sbb
movsb
or
mov
mov
mov
add
sub
xor
push
fistpl
stos
inc
push
mov
popf
dec
mov
mov
addr16
ds
inc
imul
adc
subb
es
fbld
imul
movsl
sub
push
pusha
out
sub
loopne
rolb
mov
jge
in
rcrb
rorl
scas
pop
jne
pop
clc
shlb
lds
aas
outsb
push
test
inc
jne
push
gs
pop
aad
leave
in
mov
add
fsubl
shlb
mov
mov
loop
out
shlb
arpl
adc
inc
int3
jmp
int3
neg
pop
push
cld
lahf
xchg
loope
mov
dec
jmp
inc
mov
dec
loopne
mov
lahf
cli
imul
out
pop
lods
or
dec
sbb
inc
in
mov
pop
daa
push
push
pop
xchg
adc
mov
push
imul
flds
lods
push
mov
ret
sbb
sahf
xor
xchg
cmpsb
pop
data16
add
push
pop
outsb
and
out
push
clc
repz
xchg
push
mov
int
je
mov
icebp
jge
add
mov
jmp
bound
xor
mov
imul
iret
dec
out
imul
jns
dec
cli
out
jbe
into
cs
and
push
mov
cmpsb
and
xchg
sbb
sbbb
mov
add
rcrl
sub
lods
jae
dec
imul
mov
mov
aam
add
test
pop
mov
xor
popa
int
pop
cmc
ficoms
mov
cmp
sub
mov
arpl
mov
cmp
rcl
scas
xor
add
lahf
lock
fnsave
adc
fistps
sti
cli
mov
sub
rcl
lods
xchg
or
std
add
push
in
stc
and
jne
sti
sahf
mov
cmp
movsb
xchg
inc
and
mov
repnz
sti
in
adc
orl
les
ret
add
pop
pusha
jae
stc
sbb
in
sahf
add
jb
xchg
in
in
and
push
mov
and
mov
cmp
lds
mov
xchg
push
jp
add
pusha
jecxz
xchg
sahf
mov
daa
outsb
jg
inc
shll
fimull
movsb
mov
add
rcl
cli
cld
push
data16
dec
xor
and
inc
daa
jp
imul
pop
xchg
aaa
stos
and
jb
dec
inc
movb
xchg
sbb
or
jb
mov
push
ja
lock
jbe
arpl
xchg
dec
jmp
sbb
xor
daa
cmp
jae
pop
lea
xor
pusha
out
dec
fimuls
jmp
sbb
xchg
pusha
sub
pop
pop
push
add
mov
imul
inc
push
mov
js
jl
add
jl
pop
scas
repz
repnz
jnp
adc
mov
pop
xchg
push
jl
bound
adc
push
or
mov
add
pop
xchg
cmpsb
mov
frstor
rorl
in
sbbb
inc
stos
dec
sub
sub
bound
ja
aaa
jno
lods
icebp
hlt
inc
pop
cmp
inc
out
roll
adc
lret
inc
adc
push
push
aaa
lods
daa
lods
repnz
push
lahf
xor
idivb
jle
xor
inc
movsl
and
icebp
mov
xchg
pushf
imul
or
jecxz
pop
lahf
mov
xchg
imul
scas
test
dec
lcall
jge
xor
xchg
cmp
je
aas
mov
jbe
outsl
test
fstl
fwait
sahf
mov
das
mov
jb
nop
rorl
arpl
cmpsl
mov
sbb
push
enter
addr16
lahf
ljmp
cmpsl
mov
adc
hlt
push
sbb
call
insl
insb
cld
fs
xor
sbb
popf
push
sarb
or
mov
in
lahf
xchg
mov
in
dec
inc
push
adc
push
mov
mov
xlat
js
ds
lret
pop
adc
lock
pop
cmp
inc
xor
push
int
fidivrl
mov
data16
test
lcall
out
push
mov
and
loop
pop
dec
xor
sbb
sti
cmpsb
mov
push
outsb
jmp
stos
int3
das
mov
sub
xchg
out
or
dec
nop
pop
and
into
and
mov
lret
mov
xor
loopne
popf
xchg
adc
rcrb
inc
mov
enter
insb
sbb
leave
push
add
imul
addr16
sbb
adc
push
rorb
ss
pop
divl
sbb
push
pop
push
mov
dec
adc
mov
mov
mov
mov
pop
sub
das
jns
jbe
pushf
cmpsl
rcrl
cmpsb
loopne
push
sbb
lcall
imul
push
std
bound
cmc
add
in
inc
dec
loope
int3
repnz
cmp
out
push
shrb
jae
xchg
push
mov
add
push
fistpll
test
gs
push
push
gs
jae
mov
or
daa
add
mov
out
shl
pushf
outsl
rcl
imul
addb
mov
sub
in
or
mov
movsb
mov
cld
jb
rcll
dec
lret
jno
dec
mov
dec
fstpt
adc
add
jb
pop
inc
push
jne
sub
push
fcomps
mov
lret
push
aas
inc
lea
inc
stos
cmp
jle
or
push
inc
ror
adc
adc
bound
addr16
add
lret
xchg
lock
push
movsl
out
fistpll
xchg
cmp
fstp
loopne
pushf
addl
fld
add
mov
cld
inc
push
lahf
inc
movsl
push
call
pop
loopne
orb
ja
mov
enter
imul
addr16
sbb
pop
int
sbb
xlat
pop
xor
sub
mov
daa
push
scas
xchg
jp
into
mov
jo
xor
loop
faddl
jae
outsl
test
sbb
xchg
fsubrl
lock
sarl
pop
cmp
cmp
cmp
cmpsl
jnp
xor
xor
fistps
pop
in
pop
xlat
fs
adc
pop
add
int
out
mov
es
mov
ljmp
jae
arpl
inc
dec
xor
bound
mov
push
fldcw
inc
cwtl
clc
cli
and
mov
inc
lds
mov
xor
addr16
dec
loop
add
inc
cmp
pop
cmp
mov
adc
mov
xlat
mov
mov
dec
sahf
inc
fwait
mov
fdivr
inc
scas
into
pop
add
repnz
push
insb
jo
cmpsb
nop
add
mov
mov
adc
cltd
dec
dec
enter
mov
sarl
cmp
xchg
sbbb
mov
mov
jns
dec
imul
jne
outsl
ds
inc
mov
ret
sub
fs
push
loop
icebp
xor
loop
incb
enter
out
pop
cmc
push
pop
out
jb
mov
push
xor
mov
jae
pop
mov
and
xor
ja
pushf
test
sub
test
pop
scas
sbb
mov
int
adc
out
xor
lods
stos
cld
push
loope
pop
fidivl
imul
push
inc
ss
gs
adc
stc
dec
lea
ds
jnp
out
dec
bound
ds
push
ljmp
das
je
into
inc
andb
add
addr16
iret
sub
pop
xchg
push
sbb
mov
dec
push
add
mov
cmp
aam
fwait
cmp
push
movsb
jp
push
jno
jl
inc
mov
les
cmp
jge
mov
sub
xor
mov
jge
add
mov
or
popl
lahf
push
mov
pop
gs
call
hlt
mov
das
xchg
bound
call
adc
cs
bound
add
xchg
aas
add
adc
dec
add
add
or
mov
loope
cs
in
cmpsl
popa
pop
adc
jp
dec
dec
adc
shll
pop
sub
dec
or
sbbb
mov
xchg
push
dec
sbb
inc
sub
out
aas
ret
push
popf
sbb
insb
mov
cwtl
sub
cmp
test
xchg
push
or
push
pop
sbb
add
ja
inc
and
inc
dec
movsb
dec
push
sub
and
inc
addr16
xchg
leave
mov
xlat
xchg
dec
cmp
sti
lret
call
scas
push
dec
stos
outsl
repnz
mov
sbb
sub
cmp
ds
aad
jmp
sarb
test
mov
xchg
mov
xchg
mov
pop
cli
ljmp
insl
inc
mov
push
pop
and
adc
mov
out
je
adc
xchg
adc
cld
jns
cmpsb
insl
int
hlt
or
cwtl
fst
dec
dec
xchg
mov
repz
repnz
pop
and
push
insl
jne
stc
jge
dec
jae
nop
jb
popa
xor
mov
xchg
es
cltd
add
inc
ja
lret
inc
in
aas
fidivl
int
inc
mov
fmul
mov
insl
mov
je
mov
or
shrl
pop
lock
and
jmp
shll
into
push
mov
mov
pop
push
call
ds
loop
testl
cli
popf
jl
xlat
inc
cmp
cmpsb
pop
cmp
mov
inc
mov
add
mov
lret
adc
mov
lret
sbb
mov
loop
sahf
sub
out
aas
pop
in
pop
insl
xchg
ljmp
dec
push
aas
in
ljmp
cmp
jb
jle
inc
aam
popa
or
int
mov
xor
jmp
sahf
sbb
out
xchg
adc
jge
loope
push
jmp
movsl
mov
test
mov
aad
pop
adc
pushf
jnp,pt
jecxz
repz
or
ss
inc
pop
imul
cli
sub
dec
push
xchg
push
inc
pop
mov
add
loopne
cli
xor
adc
jb
into
popf
inc
rcrb
test
sub
push
mov
call
insb
and
jns
idivb
mov
jmp
adc
lret
into
mov
or
fcomip
daa
pop
popa
and
push
jne,pn
jns
xor
insb
clc
add
mov
mov
cmpl
push
sbb
add
xchg
bound
ficoms
adc
xchg
push
insb
jge
push
or
jne
mov
sbbl
cmp
xor
mov
fwait
testl
movsl
xchg
insl
jae
insl
jl
jb
inc
sarl
out
inc
lahf
popa
int
mov
mov
out
call
out
cmp
pop
mov
imul
sti
and
test
js
inc
ja
dec
scas
out
xchg
sub
add
cltd
jne
inc
sbb
jnp
lds
jp
ja
jge
outsl
call
push
mov
ds
fcmovbe
mov
pop
pushf
inc
xchg
xchg
mov
push
out
iret
jae
sbb
test
sub
xlat
and
xor
cltd
mov
repnz
push
add
mov
imul
out
dec
xor
mov
test
fnsave
xchg
out
xchg
gs
les
aad
das
jmp
inc
mov
out
push
in
in
stc
push
shrb
jns
lahf
jg
in
xor
mov
inc
sti
lea
sub
and
mov
scas
in
adcl
repz
push
jmp
lahf
fnstenv
lret
sub
test
lods
xor
mov
popa
push
test
lea
cmp
icebp
lahf
fbld
ds
or
mov
xor
push
cmpsl
js
mov
test
xchg
push
or
adc
ret
sub
jp
or
les
sub
push
pop
fsubl
fldt
xchg
add
sbb
ret
mov
cmc
fsubs
iret
add
addr16
aad
nop
push
adcb
sbb
das
pushf
jne
stos
xor
negl
and
adc
std
int
mov
in
sub
mov
ljmp
xor
movd
stos
stos
mov
xchg
xor
inc
push
rcr
push
dec
or
mov
sbb
add
sub
loopne
daa
aaa
test
mov
cld
mov
scas
xlat
lock
cmc
cs
cmpsl
insb
nop
call
mov
pop
or
nop
sub
add
data16
clc
mov
xchg
mov
cmp
mov
std
pop
cmp
fcomps
mov
cld
int
pop
ja
mov
scas
popa
fiaddl
xchg
inc
pop
mov
sbb
jnp
inc
jp
sbb
lea
lods
cmpsl
mov
and
daa
repz
sub
mov
clc
scas
movsb
adc
xor
and
mov
mov
xor
sbb
push
push
add
ret
and
ret
sbb
dec
mov
int3
or
xor
xor
mov
arpl
out
fistps
dec
push
mov
push
mov
lcall
pushf
scas
inc
and
push
lds
out
gs
jmp
mov
lods
hlt
out
mov
xor
cld
in
fcmovnbe
loope
adc
sbb
aaa
jne
xchg
lcall
out
sbb
adc
and
mov
cli
or
pop
ds
and
mulb
aaa
xor
jne
mulb
mov
pushf
push
add
sarb
push
mov
or
xchg
mov
out
out
add
fldl
popf
lods
in
mov
inc
push
repnz
loope
sti
ljmp
ss
cs
loopne
cmp
and
movzbl
repnz
ret
aaa
fwait
mov
add
loopne
xchg
enter
js
dec
adc
lcall
mov
pop
xor
out
add
fisttpl
cmp
xor
xchg
sub
clc
pop
xor
inc
data16
int3
add
cltd
jae,pt
sbb
mov
jb
out
popf
inc
mov
pop
mov
mov
jae
jae
aas
ret
add
mov
mov
dec
stos
sub
mov
in
cmp
sub
jns
imul
push
leave
cmp
sub
fcomps
enter
call
dec
mov
cltd
dec
mov
push
leave
cmp
sub
fcomps
call
dec
mov
cltd
dec
mov
push
leave
cmp
sub
fcomps
enter
call
leave
mov
dec
and
mov
xorb
push
xlat
push
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
mov
inc
inc
push
mov
pop
into
pop
xor
and
adc
add
jae
popa
cmpsl
inc
xchg
mov
mov
inc
repz
jecxz
rcll
ret
pop
and
and
adc
or
ja
xchg
inc
xchg
dec
fwait
pop
ljmp
sbb
dec
mov
or
xadd
fidivl
push
xchg
and
int3
mov
mov
mov
fsubrs
pop
xchg
jnp
bound
xor
pop
es
aas
mov
push
popf
push
mov
or
out
std
and
jae
push
xchg
mov
loopne
or
and
popa
addr16
pop
arpl
jmp
jb
daa
sub
inc
jae
lahf
cmpsl
push
imul
pop
push
cmpsl
ja
pop
loop
sub
ret
cmpsl
and
es
cld
cmp
inc
in
jecxz
xchg
test
cmpsl
or
sti
fistpl
jp
out
xchg
repz
mov
arpl
lods
xchg
push
js
js
xchg
push
jl
or
loope
and
scas
rep
ret
ss
rclb
inc
xchg
jp
mov
pop
in
repz
rorl
ficompl
sub
cmp
or
sbb
imul
jecxz
adc
notb
inc
andb
sahf
jnp
push
sahf
dec
lahf
pusha
andb
fiaddl
hlt
and
ret
daa
repz
lahf
inc
jecxz
shll
imul
xchg
mov
or
and
ss
add
ss
mov
pop
ret
pop
xor
and
adc
add
jae
arpl
mov
mov
inc
repz
jecxz
rcll
ret
pop
xor
and
adc
add
jae
arpl
mov
mov
sub
lock
lahf
or
dec
sti
or
pushf
pop
mov
mov
add
leave
jo
adc
into
inc
push
cld
mov
push
xchg
cmpsb
mov
lahf
sbb
cmp
mov
jb
gs
jns
add
mov
cltd
arpl
fwait
cmp
pop
sub
in
test
jg
or
mov
jnp
fdivrl
into
mov
incb
idivb
push
jg
pop
add
fs
jg
lret
jge
sbbb
rclb
pop
push
lahf
or
mov
in
cld
pop
push
xor
jmp
push
mov
test
add
cmp
enter
ljmp
mov
fsubrs
push
dec
sti
sbb
ror
out
gs
mov
movsb
arpl
arpl
mov
cmp
or
mov
fwait
rcrb
jecxz
movsb
pop
push
aad
lea
pop
jno
es
pop
lea
mov
iret
inc
cli
dec
cmpsl
xor
or
push
push
add
add
mov
test
lahf
mov
scas
xor
xor
lea
jno
jo
ja
xor
test
aas
mulb
aas
xchg
repz
daa
dec
xlat
adc
mov
pushf
jo
mov
or
iret
scas
rcrl
je
jae
cmp
loope
lods
add
data16
jle
outsl
xchg
inc
filds
pop
adc
out
imul
inc
mov
pop
loopne
sbb
xor
icebp
push
inc
cmpb
push
mov
inc
scas
xchg
es
mov
cmpsl
testb
enter
cmp
in
daa
mov
sbb
popf
lock
xor
stos
ret
jge
sbb
mov
or
cmc
cs
ljmp
sbb
push
outsb
gs
stos
lea
sti
int
push
sub
mov
aad
pushf
push
xchg
push
add
dec
ret
clc
icebp
icebp
enter
and
cs
ljmp
das
inc
js
pusha
shl
roll
pop
int3
xchg
cld
fstl
pop
movsl
dec
xor
lock
pop
cmp
sub
subl
movsl
mov
adc
xor
hlt
jno
cli
sub
leave
mov
mov
and
push
lods
xchg
orb
add
lret
and
popa
push
in
fistpl
iret
imul
mov
and
adc
xchg
jmp
das
insl
xor
inc
pop
js
xchg
clc
mov
call
or
and
mov
std
cmpsb
and
pop
sbb
fbstp
in
adc
push
or
popf
loopne
ljmp
sbb
adc
xor
and
sarl
pop
jp
mov
dec
push
push
shrl
out
mov
and
ja
jb
fcmovnu
fimull
xor
test
pusha
subl
mov
xchg
cmp
xchg
dec
je
out
add
cmp
rep
push
lock
and
pop
inc
lret
pop
loop
mov
cmp
aas
mov
adc
push
push
fimuls
lods
mov
push
pop
addb
movsb
dec
push
or
fidivrs
gs
out
out
aam
nop
cmpsb
sbb
iret
mov
inc
ret
cs
push
clc
pop
aam
or
test
lahf
inc
rcrb
call
rcrb
and
pusha
sahf
fld
shl
cli
inc
sbb
add
nop
sahf
pop
inc
fbstp
push
adc
jge
je
test
sbb
addb
outsb
imul
xor
hlt
scas
std
pop
lods
mov
pop
mov
and
lods
mov
mov
add
mov
inc
rcr
or
push
test
xorb
insb
jno
aaa
add
push
das
sbb
lret
adc
sbb
je
loope
imul
sbb
arpl
dec
sub
sbb
ficompl
ja
popf
cmpsb
cmpsl
add
sub
or
jae
das
outsb
sub
push
test
xchg
xlat
add
fidivs
mov
and
cmovns
jb
xchg
jae
adc
out
pushf
leave
hlt
iret
inc
imul
pushl
fcompl
cli
add
stos
inc
js
and
xchg
push
lcall
mov
js
jp
mov
sti
xorb
in
push
addb
and
and
mov
cs
push
cltd
je
adc
adc
sbb
fildll
jo
negl
dec
mov
bound
jb
dec
mov
imul
sub
xchg
dec
fwait
ret
sbb
lret
adc
jo
int3
pop
in
xor
xchg
pushf
lret
stos
dec
sahf
mov
xchg
xor
dec
pop
dec
imul
divb
or
movsb
xchg
repnz
fisubrs
lahf
and
cmpsb
adc
in
push
inc
andb
subl
je
ljmp
outsb
sub
pop
inc
inc
jp
scas
cld
loopne
mov
push
cmp
hlt
push
aas
cmp
jmp
jae
add
aas
insl
outsl
outsb
orb
aam
pop
cmp
daa
mov
ds
daa
push
aas
push
aas
push
pop
mov
push
lcall
xchg
shll
stos
sbb
sub
mov
sarl
xlat
mov
ljmp
inc
mov
mov
mov
cmpsl
xchg
mov
pushf
mov
cs
stos
ss
jle
or
and
mov
mov
jbe
faddl
std
mov
mov
cltd
lahf
jg
dec
mov
aam
aaa
outsl
pop
ret
push
out
sub
leave
out
mov
push
cmp
push
mov
push
or
xor
js
lods
leave
lret
out
ja
jge
test
out
fwait
cmpsb
jno
add
fnstenv
arpl
and
mov
inc
ljmp
lret
or
lret
in
mov
jae
sar
dec
int3
repz
mov
in
ds
push
fcoms
or
in
mov
cmp
cmp
jb
dec
cmpsb
bound
lcall
xchg
lea
xor
mov
fsubs
dec
and
in
xchg
lock
imul
mov
outsb
imul
xchg
fs
push
add
inc
pop
or
add
mov
stos
mov
pop
xchg
dec
js
sub
mov
xor
or
xchg
mov
fstpl
sbb
in
pop
popa
push
mov
or
xor
inc
pop
dec
shll
mov
sbb
add
cmp
xchg
sbb
or
push
pop
adc
jle
adc
and
fstps
sub
lods
arpl
xlat
pusha
loopne
mov
fdivrs
rol
out
mov
xor
lcall
loope
jp
mov
in
jge
sub
ljmp
and
leave
enter
pushf
cltd
xchg
inc
or
mov
mov
dec
mov
ss
pop
and
push
enter
sbb
xchg
in
jle
idivb
pop
test
movsl
fs
mulb
lds
xchg
into
add
lret
pop
test
xadd
gs
pop
add
lret
loopne
test
insb
imul
shrl
pop
clc
fwait
sti
dec
loope
jp
xor
xor
add
js
xor
lock
call
xchg
xchg
ffree
les
rolb
movsb
lret
dec
jbe
int
adc
xor
out
xor
das
xchg
dec
sbb
icebp
add
rcll
lea
aaa
add
enter
or
pusha
mov
push
sub
sbb
addr16
nop
push
xor
xlat
jo
jp
xchg
cmp
jnp
aaa
mov
mov
test
out
pop
mov
sbb
and
leave
pusha
data16
push
cmp
or
idivl
movsl
arpl
and
clc
inc
inc
jg
leave
cwtl
jnp
sbb
test
sub
push
mov
mov
rcrb
dec
gs
lods
into
push
or
lahf
mov
repz
inc
cltd
das
fiadds
and
mov
sahf
jb
inc
mov
mov
or
adc
jp
mov
in
arpl
ss
and
xor
test
sbb
cld
filds
roll
mov
jmp
movsl
icebp
fcomps
mov
insb
idivb
fdivrs
adc
and
pop
xor
mov
push
mov
pop
ret
repz
pop
fildl
call
mov
sbb
sarl
aas
call
enter
push
lahf
aas
jns
mov
or
lods
sub
push
sbb
xchg
je
ror
lods
out
bnd
xchg
mov
or
mov
movsb
fisubl
cmp
outsl
pop
aad
mov
sbb
or
pusha
cmp
dec
out
xchg
out
sbb
out
xchg
lods
into
rorl
mov
adc
lea
je
push
sub
enter
cmp
frstor
lock
cwtl
jp
pop
push
xchg
pushf
es
js
jl
cltd
cmp
xor
cwtl
aam
mov
outsb
inc
mov
and
popa
addb
pop
jp
fucom
outsb
cmpsl
cwtl
mov
sti
mov
ljmp
aas
push
or
push
jno
or
gs
cmpsl
popa
lea
add
mov
push
stos
push
int
push
sub
jl
mov
subb
dec
lcall
xor
mov
inc
sbb
sub
xor
sbb
sbb
fisubrs
popa
mov
adc
cmp
shlb
aas
pushf
fs
jge
out
daa
addr16
pop
jne
inc
bound
enter
hlt
xor
cld
aam
jb
sbbl
xchg
mov
inc
sbb
add
cmpsl
cli
loopne
gs
and
or
pop
cmp
add
test
push
and
sahf
std
mov
xor
cwtl
jg
leave
cmp
push
mov
scas
xor
out
mov
repnz
fidivrs
dec
ja
je
shlb
xchg
mov
pop
orb
popf
inc
fcmove
stos
add
insl
sbb
dec
dec
enter
mov
pushf
adc
mov
jle
and
mov
inc
gs
clc
or
push
jg
hlt
push
xor
inc
xchg
push
aaa
inc
scas
ja
mov
lcall
dec
mov
cmpsl
cmp
sbb
push
mov
jns
inc
js
lods
fs
outsl
bound
leave
lock
mov
loop
cmpsl
mov
mov
jbe
stos
in
inc
pop
mov
or
dec
rcrb
jl
xor
cmp
idivl
push
std
aad
xor
dec
inc
mov
push
mov
xor
push
pop
sti
xor
stc
aad
pop
cld
fimull
sub
repz
adc
mov
adc
jg
xchg
and
test
lcall
add
mov
fwait
pusha
mov
adc
mov
cld
daa
fimuls
aas
or
inc
adc
dec
neg
test
ss
mov
in
fmul
rcrb
mov
mov
ljmp
pop
int3
add
push
jno
mov
fbstp
sub
lret
xor
fadds
psrld
out
sub
and
stos
mov
sbb
xchg
sub
inc
ja
andb
or
cmp
push
sti
in
sub
inc
xchg
stc
es
mov
icebp
repnz
mov
xor
ret
mov
mov
mov
nop
std
imull
leave
negl
cmp
jae
adc
cmpsb
movsb
js
subb
js
cmpb
jecxz
out
ja
pop
dec
jb
clc
out
pop
cmpsl
into
stos
lahf
push
popa
pop
test
sub
cmp
adc
pop
jo
inc
andb
mov
ret
mov
std
aam
cmpsl
xchg
loop
das
loopne
inc
xchg
or
ljmp
dec
shrb
jb
cmp
stos
push
cmp
inc
rorl
lods
lds
mov
int3
jl
mov
arpl
and
repz
ja
or
je
jbe
gs
lret
js
out
jmp
sub
insl
adc
in
daa
push
outsl
in
push
cmpsb
fcoms
scas
and
popf
mov
and
xchg
adc
outsb
nop
lret
inc
cmpsb
add
xor
pop
cmp
and
lods
push
inc
clc
and
pop
loop
jmp
scas
in
movsb
lea
in
push
and
cmc
adc
lret
ret
leave
fstp
xchg
or
sub
lock
adc
out
xor
lds
sbb
xchg
adc
dec
sbb
adc
xchg
add
cwtl
nop
inc
push
xor
xor
in
bound
adc
push
arpl
lret
sti
cwtl
rcll
cmp
jns
adc
stos
movb
xor
sub
fsub
arpl
fmul
adc
cmpl
jge
lods
or
popa
lock
cmpsl
dec
add
dec
push
push
jge
mov
pop
and
cld
jae
cltd
mov
pushf
xchg
cli
cmc
decb
ret
mov
cmpsb
mov
aaa
pop
inc
dec
mov
out
stc
sub
loopne
sub
sarb
mov
loopne
xchg
sbb
jbe
insl
aaa
test
inc
in
jbe
adc
lods
notl
adc
jl
and
mov
mov
mov
add
sbb
pop
add
or
fldcw
inc
int3
add
jge
dec
lds
fstps
loop
xchg
icebp
mov
fldenv
lods
mov
xchg
js
repz
jge
adc
cmp
lea
repnz
jns
jl
push
sub
push
add
int3
jp
gs
xor
lock
sub
lcall
sbb
adc
inc
in
pop
out
outsl
add
sub
mov
mov
mov
sub
nop
icebp
pop
ds
jo
js
in
dec
loope
inc
scas
mov
fbld
jp
or
imul
loop
shll
add
mov
pop
or
sbb
sarb
loop
mov
cltd
inc
push
mov
push
cltd
daa
jae
iret
scas
lods
rol
nop
insb
inc
inc
rcr
scas
movsl
inc
pop
test
pop
mov
sti
jb
inc
add
xchg
dec
add
jns
in
stc
arpl
xor
loopne
pop
stos
les
xchg
jo
rclb
cmp
icebp
push
out
mov
inc
lret
pusha
scas
add
pusha
xchg
pop
mov
pop
jmp
push
je
filds
and
cmc
add
imul
dec
dec
push
or
out
and
in
push
xchg
jmp
stos
cmp
out
sub
mov
xor
push
lods
jecxz
pop
icebp
mov
aaa
lret
sub
cmpsb
jl
xchg
dec
leave
lahf
mov
xor
xchg
sub
mov
jecxz
adc
faddl
leave
es
xor
pop
int3
test
jae
scas
jne
inc
cmp
mov
out
out
adc
outsl
negl
dec
stos
fdivrs
shl
dec
insl
cltd
inc
push
adc
sti
dec
cmpsl
in
fmuls
movsb
xor
jge
rcll
popf
int
adcb
mov
out
push
outsl
adc
leave
ficoml
rol
mov
scas
dec
movsb
push
fucom
je
push
popa
loopne
mov
mov
outsl
xor
xchg
cmp
and
lcall
sub
icebp
adc
in
add
mull
sub
xchg
jmp
sub
dec
push
cmp
cmp
lret
fimuls
idivl
mov
mov
pop
jae
pop
dec
mov
data16
jb
repz
lahf
inc
std
aaa
adc
test
mov
jbe
nop
push
add
cmpsl
aas
ss
push
push
mov
mov
sahf
adc
xchg
xor
pop
shll
lret
push
push
iret
std
stos
adc
xchg
pop
pushf
inc
repnz
je
push
and
sbb
popl
inc
jp
pop
loop,pt
cwtl
fwait
pop
mov
push
loope
cltd
mov
stos
dec
mov
test
inc
adc
mov
add
or
add
pop
push
popf
xchg
sbb
lods
or
jbe
mov
xchg
push
sbb
cmp
cmp
dec
inc
push
jns
pushf
in
ljmp
jno
push
mov
mov
repnz
sub
or
xchg
idivl
add
xlat
adc
push
pusha
lcall
jl
lahf
enter
pop
pop
or
sub
adc
xor
loope
jns
xor
rcrl
push
xlat
cmp
and
mov
lret
inc
mov
insb
inc
mov
popa
push
mov
shrb
cmpsb
inc
jae
jmp
sti
sbb
or
jo
cltd
comiss
push
mov
push
push
aaa
rclb
jg
ret
ljmp
shl
jo
aas
mov
scas
xchg
pop
push
movsb
rcrb
pop
mov
mov
ret
je
mov
mov
and
stc
repz
push
and
sbb
jo
fnstcw
lcall
lods
cmp
dec
leave
push
lahf
lcall
add
dec
sahf
aaa
xchg
jo
sbb
xchg
test
cmp
cmpl
flds
inc
jno
jbe
mov
mov
loope
rorl
inc
pop
je
rcr
pushf
push
repz
pop
inc
or
leave
aam
fnstsw
in
stos
addb
enter
insb
lret
ja
mov
ds
or
gs
ficoml
jl
mov
roll
inc
add
adc
fwait
adc
xorb
imulb
mov
lret
addr16
dec
push
mov
add
adc
or
add
sbb
mov
jmp
inc
lret
sbb
mov
and
jb
xchg
cmp
sbb
dec
adc
loopne
dec
out
pop
inc
aam
cltd
push
jle
inc
sbb
xor
es
jae
push
jl
dec
sub
lods
outsb
add
mov
in
sti
sbb
mov
in
iret
lcall
das
out
add
adc
divb
rclb
insb
enter
stc
cmp
cmc
dec
aaa
dec
mov
lea
jae
push
and
xor
hlt
sub
test
in
std
push
sbb
enter
pop
gs
push
lods
push
pop
or
xchg
dec
lret
adc
pop
repnz
adc
out
lcall
pop
jne
clc
enter
push
int3
ret
push
imul
loopne
adc
adc
cld
or
inc
mov
pop
dec
mov
insl
pop
loopne
pop
fs
adc
lahf
stc
into
jae
cld
inc
clc
leave
in
insb
sti
ja
bound
xchg
ss
pop
pop
outsb
popf
jbe
lock
repz
gs
das
or
int
sbb
pop
in
xchg
and
movsb
inc
int3
jbe
testl
and
lods
push
pop
xchg
lret
push
jecxz
add
idiv
push
push
packssdw
cmp
and
ret
xchg
lahf
pop
not
rorl
push
jle
out
xchg
in
lds
mov
lods
rorl
into
fcmovbe
arpl
repnz
mov
dec
mov
xchg
js
jmp
stos
pushf
faddp
push
push
or
js
mov
fistps
push
fs
inc
lods
fisubrs
adc
es
icebp
rcrl
adc
sub
adc
adc
leave
outsb
jge
fs
jno
xchg
add
jbe
jle
push
push
xchg
xor
repnz
mov
dec
sbb
std
pop
xor
mov
fcmove
test
pusha
hlt
mov
mov
imul
shlb
cmp
fldt
inc
jnp
pop
loope
cmp
movsl
sub
xchg
jne
adc
in
insl
mov
aas
adc
add
cwtl
mov
lock
imul
arpl
bswap
xchg
mov
out
arpl
xchg
jno
sub
incb
push
int
pop
jmp
imul
jae
or
push
idivb
push
and
lahf
aad
insb
das
xor
cmp
push
das
lret
jge
dec
xchg
testl
jg
mov
jbe
sbb
push
ds
sub
rorb
xchg
pop
iret
data16
ss
test
cmp
mov
sub
xchg
jne
sub
pop
das
cmp
stos
sbb
iret
lahf
pop
fildll
in
outsb
dec
xchg
leave
mov
enter
mov
movsl
pop
push
les
mov
jecxz
mov
outsb
adc
loope
fwait
sbb
push
cmp
push
cld
mov
mov
hlt
mov
les
sbb
sbb
out
jns
in
testl
leave
xor
out
or
into
jnp
sub
sub
sub
int
loop
movsl
sub
rcrl
adc
or
iret
dec
pop
jb
jno
popf
loopne
repnz
lods
popf
sub
xchg
movsw
loopne
sbb
aaa
pop
cli
jecxz
or
mov
bound
filds
addr16
mov
jecxz
rcll
ret
pop
xor
and
adc
add
jae
arpl
mov
mov
inc
repz
jecxz
rcll
ret
pop
xor
and
adc
add
jae
arpl
mov
mov
inc
repz
jecxz
rcll
ret
pop
xor
and
adc
add
jae
bound
mov
mov
inc
icebp
aaa
jecxz
push
pop
inc
pop
int3
neg
dec
mov
aas
jmp
lods
push
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
mov
pushf
repnz
ret
add
scas
filds
push
sbb
inc
dec
and
add
loop
repnz
ret
int3
mov
cld
out
outsb
sbb
sub
cmp
mov
xor
adc
mov
stos
in
lcall
inc
cmp
dec
insl
xor
jo
jge
scas
clc
subb
jae
popa
add
insl
mov
std
push
or
sbb
lock
inc
xorb
faddl
jge
insl
icebp
popf
cltd
mov
adc
lods
mov
pop
insb
cmp
icebp
ljmp
leave
lea
test
iret
or
dec
jb
sub
lods
sbb
and
mov
sub
idiv
pop
addl
sbb
out
std
dec
add
jl
dec
cmp
fadd
outsl
mov
lea
and
xchg
jno
arpl
push
sub
pop
popa
cmp
pop
or
sbb
mov
rcl
sub
cld
adc
cmc
pushf
loop
fstpt
in
cmp
or
sbb
sub
cmp
dec
cmp
sbb
loop
add
aad
int3
mov
testl
pop
xor
insl
cmp
mov
fwait
leave
mov
mov
xchg
imulb
pop
cs
cmp
dec
push
xor
add
jmpw
bnd
cmpsb
rclb
in
cmp
or
sbb
sub
cmp
dec
and
add
loop
repnz
ret
int3
mov
cld
xchg
or
sbb
sub
cmp
dec
and
add
loop
loope
inc
xchg
shlb
sub
ss
or
cmp
mov
call
mov
lcall
loope
daa
jbe
movsl
dec
cmpsb
movsb
aam
mov
int
stc
pushf
mov
hlt
jp
stos
popf
mov
fcmovbe
sbb
dec
mov
and
xchg
popa
sbb
out
pop
clc
cmpsl
fldcw
push
dec
aad
sti
lret
mov
push
pop
fcomps
xor
jbe
jbe
add
pop
cmp
stc
inc
ss
jl
mov
mov
aas
or
xor
ret
int3
push
jge
shlb
cs
arpl
mov
in
mov
mov
mov
sub
out
mulb
lret
push
stc
mov
jb
invd
mov
jae
mov
js
cmp
mov
xchg
aas
jmp
cmp
pusha
pushf
and
daa
mov
fdivr
adc
sahf
xor
dec
dec
mov
in
nop
cmpsb
push
lahf
lds
lret
push
jl
pop
and
rorl
out
std
fcoms
sti
lret
repz
lahf
fcomps
push
or
fstsw
mov
jge
pop
cmpsl
sbb
push
subb
jmp
lahf
push
addb
je
out
mov
pop
ss
inc
js
sbb
imul
mov
mov
icebp
sbb
in
xor
negb
mov
push
cmp
popa
fdivl
outsl
sub
jge
push
lcall
add
lret
xchg
out
and
cmp
xchg
cmpsl
js
mov
dec
sub
mov
leave
push
ret
flds
repz
mov
jmp
add
dec
adc
fisubl
pushf
arpl
icebp
dec
data16
and
test
jp
add
inc
push
xchg
push
insl
jge
lods
test
je
in
enter
jns
daa
in
jb
sub
aas
aaa
stc
dec
jo
add
sbb
je
gs
aaa
mov
sbb
shrb
sbb
fistl
lahf
cmp
xchg
nop
sahf
out
or
and
pop
sub
ret
sti
lods
fs
cmp
repz
out
lcall
pop
aad
ljmp
pop
xor
xchg
sbb
jns
push
cwtl
xchg
xor
into
rorb
dec
sbb
aas
mov
mov
add
in
push
sub
cli
pusha
xchg
leave
inc
cmpsl
lcall
xchg
lcall
add
mov
push
jmp
test
pop
and
mov
imul
ljmp
xor
inc
test
repnz
push
mov
sar
mov
sahf
inc
lret
or
xor
or
push
dec
stos
dec
ds
pop
pop
shrb
test
mov
out
loop
dec
pop
dec
inc
xor
fsubrl
xor
gs
sbb
inc
enter
sub
mov
in
orl
sbb
sub
pop
or
ficoms
iret
inc
xchg
arpl
mov
bound
jno
mov
xor
jge
adc
std
adc
scas
in
fucomip
imul
fsubs
pop
jle
out
dec
dec
cltd
xor
sub
addl
es
jbe
fidivl
fcom
mov
leave
je
fldenv
push
inc
cmp
idiv
stos
insl
hlt
adcl
xchg
inc
inc
js,pn
sti
xchg
cmc
in
in
push
mov
ss
into
cs
mov
subb
cs
dec
cmp
cmp
sub
fs
inc
push
and
mov
jge
popf
shlb
mov
shll
stos
lods
dec
imul
inc
xchg
aad
lea
mov
sub
adc
and
mov
leave
lahf
sbb
sub
fistl
arpl
movsb
loop
daa
int
inc
int
fcoms
popa
jb
aam
dec
jl
xchg
testl
pop
or
cmp
fdivs
scas
stc
mov
xchg
loopne
mov
popa
imul
and
xchg
negb
xor
jle
jb
add
xor
xchg
inc
pop
sub
std
ja
mov
movsl
push
xchg
xchg
insl
cmp
cmpsl
push
pop
adc
cmp
mov
cltd
lods
cli
lcall
repnz
fs
push
inc
mov
outsb
testl
jmp
xchg
xor
jne
jno
xchg
push
test
jnp
nop
into
and
xchg
cmpsl
mov
sarl
and
out
rcrb
leave
inc
xor
push
and
fimull
fiaddl
mov
imul
xlat
inc
outsb
push
pop
divb
cld
sbb
sub
push
fdivrs
inc
add
push
sbb
das
mov
fidivrl
pop
scas
arpl
mov
xchg
idivb
dec
mov
sbb
adc
push
push
cld
and
les
add
mov
nop
int3
in
stos
jl
xchg
adc
pop
scas
jmp
lret
cmp
and
sub
nop
lcall
ds
mov
fcmovnb
arpl
insb
sarl
sahf
subl
or
mov
lret
add
cs
icebp
ja
inc
push
dec
push
mov
dec
add
popf
stos
cli
xchg
dec
test
or
adc
mov
xchg
push
sbb
les
and
test
loop
test
je
xor
loop
jge
arpl
addr16
sub
adc
loope
inc
daa
and
fisttpl
mov
cs
dec
add
dec
push
outsl
and
xor
adc
pusha
jle
jp
pop
je
sbbb
pop
push
iret
push
push
xor
fstps
add
mov
sub
xchg
inc
cmp
shrl
ja
ret
pop
xor
repnz
pop
dec
shrl
sub
pop
and
xchg
dec
xchg
call
js
and
rolb
xchg
mov
fcoml
nop
add
and
push
inc
inc
daa
adc
jne
mov
pop
call
xor
xchg
xor
add
lods
loope
fnstsw
mov
push
ret
lds
and
gs
cmp
add
nop
xor
aaa
pop
sub
xchg
daa
adc
loop
push
aam
inc
push
xchg
cmp
mov
mov
and
mov
gs
xadd
or
and
mov
jmp
pop
das
je
call
gs
and
xor
es
rol
lcall
xchg
das
or
pop
mov
xor
lcall
mov
jl
scas
cmpsb
repz
or
test
mov
and
mov
mov
fdivrp
aam
push
mov
scas
sti
pushf
out
adc
mov
icebp
fistpll
loop
das
or
loop
fld
jge
sbb
pushf
jle
sbb
aaa
pop
cmp
flds
das
dec
sbbl
fdivl
clc
push
xchg
leave
nop
lea
mov
stos
lods
or
aad
mov
mov
push
dec
sbbb
faddp
mov
adc
jb
and
mov
shlb
sbb
loop
hlt
or
test
add
and
dec
mov
xor
xchg
xor
and
sub
orl
mov
inc
adc
sarl
inc
lds
adc
mov
push
inc
stos
cmp
jae
push
push
scas
mov
sbb
mov
ds
mov
addb
arpl
imul
adc
jp
into
push
jns
mov
popa
mov
mov
or
jecxz
repnz
out
in
sub
or
fstpt
movsb
jecxz
mov
inc
mov
mov
cmp
addr16
jae
pop
call
ret
inc
out
aaa
mov
dec
dec
aas
imul
repz
cmp
bnd
xor
in
xor
outsl
mov
lds
js
scas
jbe
xchg
xor
add
sbbl
xchg
mov
outsb
icebp
in
fadds
mov
popa
jns
mov
lods
cltd
sub
sub
stos
pusha
jp
repz
andb
pop
adc
push
fdivl
cmc
mov
aad
aaa
in
sbb
cmp
sbb
jo
mov
lods
pop
scas
fsts
cmp
inc
movsb
xchg
arpl
insl
mull
xor
jns
xchg
adc
movsl
pop
or
bound
or
push
insb
push
imul
pop
faddl
and
adc
push
scas
clc
in
mov
fwait
out
fistl
jb
push
xor
xor
mov
inc
mov
mov
je
jo
sub
les
bound
ljmp
repz
fwait
push
dec
mov
push
call
sbb
mov
sbb
insl
dec
cmp
ja
out
lods
call
clc
xor
cmpsl
clc
dec
imul
mulb
sbb
xorb
movsb
lea
cmp
es
mov
add
xor
clc
inc
cmp
fs
inc
jo
or
cwtl
sub
jg
xor
stos
aad
pop
aas
test
cmp
sub
cs
enter
adc
dec
add
lds
insb
mov
sti
pop
jns
or
add
hlt
inc
sbb
adc
mov
lahf
cs
jmp
ss
cmc
mov
or
stos
leave
in
scas
cmc
or
stos
pusha
xor
add
iret
mov
xchg
dec
jp
cld
in
adc
nop
lahf
xchg
imulb
or
adc
aas
dec
cmp
push
jg
inc
push
or
aam
imul
shrl
mov
adc
test
insb
pop
mov
or
je
dec
sbb
push
mov
add
imul
das
jb
or
andl
inc
adc
pop
ss
incb
out
pop
cld
fdivs
test
in
cmpsl
adc
sbb
mov
stos
iret
dec
xor
int
mov
aad
fadd
outsl
ds
pop
lds
push
or
loop
insb
adc
pop
inc
jno
in
inc
dec
sub
iret
mov
mov
lahf
sub
int3
les
data16
mov
mov
inc
adc
aas
xchg
lahf
dec
and
mov
push
cmp
mov
jne
shlb
mov
add
pushf
out
push
push
ret
dec
dec
or
xchg
int
xor
push
mov
inc
push
cli
xor
iret
fwait
out
sahf
aaa
pushf
dec
aad
sarl
icebp
or
cmp
lds
out
mov
sbb
outsl
roll
cli
hlt
ror
in
cmp
sub
lret
shll
sbb
divl
add
jl
je
or
and
daa
mov
gs
fsts
or
test
sub
ja
cld
lods
ja
cmp
pop
insb
inc
pusha
or
popa
xchg
loope
es
call
insl
xchg
push
push
mov
jo
cmp
sub
xchg
pop
push
jne
jmp
mov
in
cmpsb
mov
in
in
aas
out
movsb
push
rcll
fmul
ss
cmc
movsl
jge
pop
lods
dec
pop
mov
sub
push
insl
mov
lock
adc
sub
in
cld
xchg
or
jnp
test
enter
pushl
lcall
dec
add
jl
nop
xchg
pop
and
and
and
push
dec
and
call
jno
rcll
xchg
hlt
rcpps
out
xchg
aas
and
outsl
repz
lods
mov
mov
ja
cmp
cmc
rclb
push
sub
and
add
lahf
out
jle
icebp
outsb
test
cmp
rcrl
je
xchg
xor
mov
inc
lds
ja
orb
mov
cmp
jg
jo
jb
dec
mov
pop
fistl
lock
adc
xor
xchg
xor
xchg
cli
xchg
cmp
popa
fisttps
out
lods
cmp
jns
add
xchg
test
jb
shrb
pop
add
pop
lods
push
cld
cs
lret
sub
mov
call
das
sub
sbb
and
push
jb
sub
enter
rol
in
inc
pusha
cmpsb
pop
pop
adc
fwait
outsl
adc
adc
inc
mov
xchg
es
icebp
adc
je
jmp
test
adc
lock
cmpsb
mov
daa
and
mov
push
push
lods
pop
cltd
xchg
stc
mov
and
out
xor
cmp
movsb
pop
mov
lahf
out
mov
ja
jmp
inc
aas
into
loope
aad
frstor
fs
loope
or
cmp
add
xchg
sti
sbb
imul
enter
iret
xchg
mov
dec
xchg
stc
sub
lock
pop
hlt
adc
pusha
es
mov
sbb
xchg
bnd
dec
scas
pop
cmp
sti
mov
js
leave
cmp
xchg
inc
or
dec
sbb
int
push
xchg
xchg
mov
scas
aad
fldt
push
call
mov
aad
sbb
pop
sbb
add
addr16
push
push
and
sbb
jo
flds
std
pop
iret
stc
mov
aad
cmp
aas
push
lcall
jmp
ja
repz
cltd
xchg
dec
cmp
add
loopne
add
xchg
scas
imul
xchg
dec
jmp
dec
scas
push
testb
aaa
jmp
movsl
dec
movsl
or
jmp
mov
pop
add
adc
add
xor
mov
shl
and
mov
lret
popa
xor
add
mov
test
sub
dec
mov
mov
sub
call
and
ret
sbb
mov
pop
push
sbb
xlat
movsb
in
mov
pop
mov
mov
pand
mov
popf
fcmovnb
cmp
pop
dec
ret
mov
jl,pn
scas
and
mov
movntps
mov
dec
pop
fisubrl
mov
sarb
stc
push
ret
ror
outsb
push
div
xchg
xchg
and
sub
mov
bound
mov
inc
ret
aam
mov
inc
pop
in
or
add
shlb
rcl
inc
mov
rorb
call
orl
faddl
dec
shll
jmp
pop
aas
cwtl
or
popa
dec
sub
icebp
push
mov
push
add
stos
and
sahf
dec
test
ret
lret
dec
dec
loopne
addr16
sub
xlat
repnz
mov
sub
popf
outsb
xor
fsub
out
rcll
push
in
mov
cmpsb
add
add
dec
mov
and
fnstsw
fcmovnb
push
mov
loop
push
lds
sbbl
icebp
andl
inc
pop
cs
es
cmp
data16
push
inc
xchg
dec
sub
add
incl
xchg
cld
mov
xor
sbb
sbb
sbb
push
loopne
daa
push
mov
mov
dec
inc
jecxz
aam
ljmp
fwait
lock
jp
mov
push
and
pop
gs
mov
fwait
adc
sbb
cmp
xchg
jp
push
insb
mov
pushl
jbe
ja
xchg
mov
mov
movsb
test
jnp
orb
push
stc
adc
lds
nop
or
mov
jmp
sahf
lods
or
mov
sbbb
mov
pop
add
into
dec
in
mov
inc
scas
or
insl
jecxz
js
mov
js
insb
aad
xor
add
pop
inc
add
add
nop
in
lcall
mov
ds
and
pop
outsl
mov
les
into
jmp
inc
jg
std
cmc
cwtl
outsl
cs
jmp
sbb
xchg
daa
mov
lods
arpl
push
cmp
mov
les
lcall
test
lods
aaa
shrl
pop
sub
sub
ja
lods
lods
and
aad
or
in
out
fcomip
adc
sbb
decl
cli
pop
pusha
les
mov
lds
push
aaa
shl
insl
push
ret
push
cmpsl
mov
jnp
sbb
insl
add
cmc
ja,pt
inc
mov
lret
inc
mov
xchg
mov
ja
inc
or
lret
in
lds
push
jl
jne
or
imul
pop
les
inc
or
push
xchg
cld
sub
stc
ss
addl
int
loopne
loope
stos
enter
mov
add
aas
psllw
or
rcrb
sar
mov
addb
xlat
xlat
fmull
xchg
icebp
sbb
js
cli
dec
cmpl
cmc
sub
inc
cmp
stos
push
cltd
es
push
inc
adc
movsb
aad
cmp
push
sub
in
sbb
clc
xor
pushf
xor
addr16
repz
lahf
mov
sahf
ss
mov
ret
adc
dec
ljmp
or
adc
sahf
and
insb
andl
cld
cmc
sbb
inc
adc
idiv
cmpsb
dec
data16
or
push
std
sti
mov
mov
and
sbb
fsubrs
fsubl
fsts
jl
insl
jle
cmpb
imul
dec
cmp
sarb
aam
in
mov
inc
imul
xchg
push
push
out
lahf
sub
shl
jp
test
and
nop
inc
add
ffree
xor
xlat
dec
push
push
pop
cli
push
mov
ret
hlt
or
sub
or
sbb
shll
outsl
stos
jbe
push
mov
adc
dec
or
insl
add
rol
cmp
aad
fmull
aas
mov
int3
ret
repnz
mov
cmp
sti
mov
jno
pop
or
dec
mov
dec
and
movl
adc
or
jbe
lods
lea
lret
clc
sub
cmp
mov
enter
lock
mov
ficoml
jne
filds
push
test
xchg
mov
shll
cmp
cmp
idivb
js
cltd
test
mov
push
cwtl
sbb
subb
incb
stos
pop
loope
adc
pop
pop
rcl
mov
fs
hlt
jl
inc
ror
cltd
sarl
icebp
mov
cmp
sub
sub
loop
inc
fdivrl
shrl
push
rolb
inc
cmp
mov
imul
adc
push
cld
adc
jp
mov
adc
leave
clc
shr
icebp
sbb
mov
rcrl
mov
push
pop
adc
popl
or
inc
fs
mov
or
pop
jecxz
in
imul
out
clc
cwtl
sub
mov
jne
test
test
sbb
mov
rclb
out
dec
popa
jbe
sbb
jae
adc
mov
out
mov
mov
adc
push
clc
out
inc
call
cmp
adc
sub
icebp
pop
pop
repz
cmp
lds
mov
xchg
cmp
xor
jle
xor
mov
aas
cmp
sbb
mov
out
adc
inc
inc
in
in
cltd
cltd
mov
adc
roll
jge
mov
adc
sub
cmp
xchg
lret
lds
loope
rcl
cmp
into
sub
andl
mov
cmp
xor
insl
out
or
js
add
jg
out
dec
pushf
mov
insb
scas
imul
dec
mov
ret
or
je
scas
repz
data16
bound
sbb
inc
out
mov
jp
or
mov
push
mov
pop
and
jo
les
dec
pop
and
cld
xor
dec
sahf
sub
out
mov
nop
sub
lret
imul
movsl
ja
dec
pop
sub
ljmp
das
call
push
aad
mov
sbbb
arpl
jb
jecxz
sub
and
dec
in
push
pusha
in
cld
fwait
adc
inc
aam
push
scas
cmp
push
cmp
sub
xor
nop
push
in
fidivrs
insl
daa
testb
jle
or
jge
ffree
pop
jno
icebp
lods
adc
jb
adc
repz
daa
in
dec
cmp
jmp
push
fs
rorb
and
pop
scas
mov
xchg
ja
and
jbe
and
sbb
mov
aaa
icebp
jbe
data16
test
ret
lret
movsl
jl
cmp
mov
jae
sub
cmp
sbb
pushf
mov
insl
mov
shrl
pusha
enter
mov
cltd
pop
dec
sub
jbe
adc
sbbl
clc
std
push
in
mov
dec
int
movsb
test
inc
call
in
fdivs
jp
into
fs
imul
mov
add
imulb
rcrl
mov
pop
test
xchg
repnz
ret
int3
mov
cld
xchg
or
sbb
sub
cmp
dec
and
add
loop
repnz
ret
int3
mov
cld
xchg
or
sbb
sub
cmp
dec
and
add
loop
repnz
mov
mov
cmpb
sbb
sub
cmp
dec
and
push
jl
mov
pushf
imulb
fdivl
or
sbb
xchg
and
sbb
or
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
cwtl
mov
cmpsb
mov
sahf
scas
mov
or
cmp
sub
pop
jbe
jecxz
push
push
cmpsb
mov
test
clc
call
inc
cmp
sub
pop
jbe
data16
push
cmpsb
mov
test
clc
call
es
jb
push
pop
xor
or
and
inc
in
mov
stc
mov
xor
ret
and
xor
adc
ret
in
nop
pop
das
test
es
lock
jns
jne
sbb
add
pop
xlat
mov
add
cs
cmp
addr16
loop
shlb
ljmp
mov
cmpsb
lret
sbb
sti
pop
ja
cmpsb
sti
test
scas
and
mov
aaa
out
pop
call
dec
fldl2t
xlat
push
or
cltd
subb
pop
cmp
imul
repz
arpl
lret
mov
mov
lcall
jo
xor
jg
addl
mov
dec
es
mov
inc
push
pop
mov
cmpsb
mov
test
clc
call
cmp
sub
pop
jbe
data16
push
cmpsb
out
out
mov
cwtl
insb
xchg
push
jle
inc
ficoms
or
out
mov
movsb
fistl
addl
dec
outsl
push
inc
ja
imul
decl
jecxz
test
clc
call
cmp
sub
pop
jbe
data16
push
cmpsb
mov
test
clc
call
cmp
sub
pop
jbe
data16
push
out
and
cmp
pop
sbb
push
outsl
add
shrb
xlat
jge
sbb
mov
pop
mov
jmp
xchg
outsb
and
movsb
cmp
push
movd
inc
mov
cmp
mov
sti
insl
or
in
ret
pop
sahf
dec
lds
adc
mov
push
call
inc
pop
mov
push
pop
dec
cmp
xchg
lods
lods
int3
aas
dec
nop
cs
dec
mov
js
add
push
adc
and
xor
jns
or
push
sbb
nop
dec
testb
ss
add
ficoms
fstps
dec
xchg
arpl
fsub
aaa
insb
in
mov
inc
divb
xchg
mov
sbb
ja
pop
xchg
push
push
and
sbb
loop
mov
push
ror
roll
lret
sbb
xchg
test
and
pushf
add
fwait
mov
mov
out
pop
xchg
sub
lock
jle
jg
pop
pop
pop
lahf
lds
testl
cmpsb
push
iret
lds
adc
je
add
lret
in
sbb
inc
mov
xchg
xor
pop
test
lds
dec
cmp
jae
lretw
sbb
aas
popf
arpl
add
cmp
jl
int3
cli
cmc
popf
pop
rclb
mov
push
push
addr16
fucomi
jb
push
scas
sti
mov
cmp
fldcw
mov
popf
outsb
popa
or
hlt
or
add
mov
sahf
fldenv
jns
test
vdivps
rorl
in
imul
cmp
sti
clc
je
loopne
ds
inc
ljmpw
push
lods
pusha
popa
jge
dec
daa
nop
cli
leave
loop
ffree
in
dec
adc
clc
mov
nop
and
in
rol
sub
jmp
lods
shrl
repnz
enter
lock
pop
mov
filds
jae
pop
sahf
and
hlt
in
in
nop
mov
pusha
jbe
adc
sub
sbb
subl
loop
mov
movl
shrb
jns
pusha
arpl
dec
mov
or
add
bound
mov
cmpsl
push
adc
jl
mov
adc
imul
and
pop
mov
imull
int
dec
xchg
push
ret
out
push
and
je
cmp
or
mov
lret
and
mov
xchg
xchg
cmp
popf
lea
stos
fistps
jae
xchg
pop
lea
mov
or
sbb
xorps
aam
inc
inc
adcl
arpl
test
cs
outsl
stos
xor
ret
push
ja
dec
cltd
xlat
out
mov
mov
mov
je
ss
jecxz
xor
pop
inc
fmul
dec
adc
insl
mov
lods
xor
test
stos
add
sbb
add
push
aas
test
jg
jg
lret
repz
add
lock
sbb
imul
mov
leave
xchg
jg
sahf
mov
test
and
pusha
dec
in
sbb
lock
push
dec
mov
in
xlat
or
dec
or
pop
xlat
or
lahf
call
jbe
jge
pop
sub
aas
pop
inc
je
jbe
lret
xor
jl
imul
and
mov
and
mov
jecxz
icebp
les
jns
mov
xor
sbb
out
push
jne
addr16
test
xor
sub
out
je
in
push
mov
sbb
add
popf
cmp
jae
out
adc
das
add
mov
or
repz
adc
lcall
inc
and
movsl
jp
stos
cmp
sub
push
mov
and
sub
test
test
into
lcall
fistps
xchg
mov
insl
cli
mov
mov
or
fists
sub
pop
out
jge
leave
shrb
out
fstps
adc
sbb
mov
xchg
ds
negl
and
xlat
sbb
popf
push
mov
mov
bound
loopne
cmp
and
into
or
jmp
cmc
pop
sub
mov
sbb
movsl
rcrb
push
mov
and
cmpsl
dec
popf
sbb
movsb
mov
mov
mov
mov
cmp
jo
sub
mov
fsts
mov
std
aad
and
call
cltd
xchg
ucomiss
clc
xor
push
inc
icebp
stc
fmull
push
jno
push
mov
loope
pop
sbb
addl
or
xchg
mov
es
lds
icebp
sub
or
sbb
jnp
cmp
cmp
mov
inc
pop
and
push
push
adc
rcr
mov
pop
shl
test
add
fmull
mov
jns
jne
push
popf
adc
push
mov
jg
mov
das
push
lret
or
push
fldenv
sbb
daa
cld
push
jp
into
inc
xchg
pop
jecxz
adc
mov
loop
jmp
xchg
pop
pop
aaa
sbb
cmp
lea
repz
mov
mov
sbb
mov
sahf
xor
fmuls
pop
mul
ds
jmp
adc
jp
pusha
rcrb
pushf
xchg
sti
lods
sbb
dec
mov
test
fisubl
add
jns
bound
add
jne
xchg
and
fucom
mov
imul
dec
out
jge
fisttpll
xor
dec
roll
inc
xchg
roll
xchg
lods
test
inc
imul
in
rcrl
loop
jnp
sub
adc
insl
sbb
xchg
mov
ret
mov
push
pusha
shlb
or
ljmp
stc
sbb
xchg
or
imul
and
lret
insb
inc
in
and
fstpt
xor
ret
xor
pop
fwait
jns
and
xchg
cmpsb
aad
in
mov
mov
or
cmpsb
adc
mov
scas
movsl
or
lea
dec
sbb
xlat
sub
jne,pn
nop
and
xor
sub
shrl
cmp
sub
and
scas
push
xor
lods
sbb
ljmp
into
jno
push
orb
push
inc
xor
cs
aad
cmc
and
pop
jbe
push
scas
loopne
xor
mov
js
ljmp
call
inc
mov
inc
mov
in
aam
mov
sub
bound
int3
mov
jns
or
mov
xchg
inc
repz
std
inc
dec
inc
cltd
jp
and
out
int3
in
sub
aad
pop
mov
ret
fdiv
mov
mov
mov
xor
pop
mov
mov
or
enter
mov
mov
xchg
mov
xchg
push
adc
xchg
shlb
aad
jnp
add
mov
and
push
shlb
mov
push
adc
daa
sbb
push
jns
mull
and
jbe
mov
push
push
xor
ja
dec
sbb
xchg
sub
outsb
aas
inc
popa
mov
xchg
jg
push
cs
add
aam
or
aas
stos
je
sub
inc
mov
add
xchg
std
adc
int3
mov
scas
jae
pop
fnstsw
xor
or
fcoml
cmpsb
pop
cmp
pop
popa
cmp
and
call
cmp
ss
adc
push
mov
icebp
push
or
lret
stos
jnp
xchg
outsb
sbb
cmpl
jbe
stos
fadds
add
xchg
cltd
inc
jle
hlt
aad
pop
push
mov
in
pop
push
push
gs
mov
rorl
xchg
stos
push
or
mov
xchg
sbb
cmp
xor
leave
inc
sbb
jecxz
lock
pop
lcall
in
fcomps
test
mov
into
push
cmp
andl
xor
mov
jmp
sub
shll
cwtl
dec
es
or
or
je
sub
push
stc
cmc
fxch
scas
xor
pop
in
mov
dec
lods
pushf
mov
shl
orb
jns
mov
xlat
cmp
pop
inc
mov
adc
out
mov
cmp
shlb
addr16
jns
ja
leave
xlat
dec
scas
cwtl
imul
cmp
inc
mov
stc
ret
ficompl
xchg
daa
fisubl
nop
inc
jmp
adc
mov
cmp
mov
xor
loope
add
cld
push
inc
int3
sub
pop
rolb
xchg
sub
lcall
insb
into
xchg
jo
xchg
push
leave
call
jmp
stos
jg
add
jmp
ss
mulb
xchg
scas
mov
ror
add
in
xchg
inc
rcrb
dec
add
je
sarb
xlat
in
mov
daa
cmp
sahf
lahf
mov
cmpsb
xor
cli
aaa
add
inc
sbb
test
scas
dec
xor
mov
push
mov
jb
movsb
push
scas
push
in
mov
cmpsb
mov
dec
mov
test
mov
fucomi
cli
mov
jle
add
lock
pushf
inc
pop
arpl
shrb
je
dec
xor
pop
popa
xchg
mov
push
movsb
sub
setp
push
push
outsl
stos
pushf
mov
mov
mov
andl
nop
dec
jg
mov
mov
fs
and
jns
fstpl
out
popa
xor
push
mov
cltd
mov
in
inc
movsl
inc
std
inc
jp
rorl
push
gs
js
out
and
sub
inc
mov
dec
call
xchg
rep
sub
aad
pop
mov
fisubl
dec
cltd
dec
dec
pop
lock
jecxz
fwait
push
orb
clc
push
jl
addl
sarb
push
arpl
push
movsb
mov
sub
inc
aaa
sbb
das
inc
fisubrl
pop
xor
rclb
fidivl
aas
sti
and
jae
addr16
push
andl
loope
movsb
cmp
jp
cmpsb
ficoml
mov
or
cwtl
sbb
jecxz
push
sub
mov
ljmp
popf
adc
call
mov
aam
xorb
inc
scas
jge
push
dec
mov
xchg
xorl
stos
cmpb
pop
les
mov
push
out
insl
dec
add
das
mov
add
sub
imul
mov
fs
int3
push
dec
imul
sarl
jge
into
inc
ror
pusha
inc
mov
and
push
pop
sbb
inc
jno
xlat
in
lods
leave
mov
pop
in
xchg
notl
imul
and
cltd
xchg
adc
mov
call
int
xchg
add
dec
inc
cmp
mov
lock
jo
fists
add
ljmp
and
movsl
dec
cmp
aaa
sbbb
sub
mov
cmpxchg8b
adc
cmp
pop
loopne
lret
pop
mov
push
jns
pop
orb
aam
dec
jns
pusha
sbb
jle
out
dec
fdivl
shrb
add
sub
je
cmc
cs
add
imul
fwait
and
movsl
or
stos
cld
or
lcall
shll
jg
add
scas
popf
fs
sbb
ja
push
cmp
add
lcall
ja
int
int3
jge
mov
xorb
sbb
arpl
lret
bound
push
loop
addb
fcmove
jb
jb
pop
mov
out
pop
sbb
ret
mov
pop
arpl
aad
flds
shr
ret
aad
cmpsl
outsl
cltd
push
fidivrl
push
jno
mov
mov
adc
sbb
dec
mov
aaa
xor
and
xor
jnp
mov
push
fbstp
mov
xlat
dec
adc
outsl
fwait
xlat
jmp
mov
pop
insl
or
cmp
xor
lahf
stos
xor
cs
or
and
xor
cmp
js
dec
outsl
cmpsl
jo
movsl
not
dec
mov
jp
pop
cwtl
mov
mov
fidivl
mov
scas
cld
shrb
sbb
loope
add
jl
outsl
sbb
sbb
negl
inc
jecxz
das
inc
cmc
cmp
mov
into
jmp
pop
and
mov
frstor
mov
pop
jns
jecxz
mov
mov
push
mov
cmc
mov
fisubs
iret
inc
jg
or
dec
push
jmpw
xchg
inc
mov
pop
cli
or
out
push
inc
inc
rcrl
xchg
pop
fnsave
insl
pop
or
jns
movsb
adc
adc
xchg
outsl
bound
mov
sbb
iret
sbb
mov
jns
pop
outsb
nop
pop
mov
pop
scas
xchg
xor
notl
adc
pushf
gs
cld
push
or
sbb
jne
aam
loop
xlat
and
cmp
push
mov
push
mov
jae
cli
pop
popa
cli
mov
jo
les
jmp
adc
sub
push
xchg
dec
jg
or
jnp
insl
mov
mov
add
adc
popf
fmuls
bswap
jg
xlat
rcl
fisubl
fnstcw
push
mov
or
or
add
ljmp
ss
and
mov
lcall
mov
scas
test
aas
xchg
repz
cmp
pushf
sub
scas
xchg
enter
dec
andb
adc
shlb
mov
loope
rcl
add
iret
sahf
lret
add
push
mov
rorb
adc
adc
adc
inc
push
cld
ret
xchg
or
lock
xchg
out
shlb
loop
mov
mov
cmove
dec
sarl
ja
jmp
gs
insb
mov
shlb
inc
jae
inc
mov
mov
mov
aas
jo
lahf
cmp
nop
jl
sahf
push
andb
xchg
imul
jno
sbb
test
xchg
push
mov
jecxz
orl
adc
shll
mov
movsl
fidivrl
sbb
andl
jmp
adc
neg
adc
les
icebp
rolb
lods
sbb
push
jmp
std
sbb
cmc
les
jo
add
xor
jae
std
dec
pop
sbb
ss
xor
lcall
and
mov
mov
pushf
jbe
in
push
test
xor
mov
stos
icebp
adc
jbe
push
push
inc
imul
xchg
pop
dec
out
mov
mov
adc
shl
sub
int
ret
jge
in
cmp
mov
pop
or
sarb
stc
sbb
aaa
mov
add
lret
add
xchg
cmp
pusha
adc
and
test
mov
and
cmp
cmc
add
test
roll
fmuls
out
and
jbe
mov
testl
loop
adcb
xchg
out
sbb
lods
scas
dec
dec
inc
sbb
dec
das
das
sub
leave
scas
cltd
push
xorb
mov
pop
mov
fbld
out
lahf
or
insl
xchg
ljmp
xchg
mov
cmp
jns
in
bound
xor
fcmovu
pop
loop
push
test
push
lret
lahf
or
fnstenv
in
ds
xchg
lea
push
aad
mov
cmpsl
jle
mov
cmp
or
in
ds
mov
add
fdivp
sub
dec
xor
mov
sahf
fadd
xor
lods
mov
scas
ficomps
sbb
mov
pop
loopne
cmp
cs
outsb
or
or
inc
adcb
sahf
shll
dec
movb
scas
jge
pop
js
inc
orb
repnz
push
mov
cmpl
push
and
adc
out
sahf
in
jge,pt
imul
ffreep
fiadds
mov
xchg
jge
ret
das
data16
adc
shll
rcrb
sbb
orb
sbb
xor
scas
xorl
testb
icebp
test
ret
mov
call
gs
clts
pusha
add
sub
out
or
inc
pop
adc
mov
push
sub
leave
stos
inc
pop
ss
in
das
fmull
mov
push
inc
fldenv
and
sbb
or
ljmp
test
xchg
cli
add
adc
stc
jo
call
cli
bound
movsb
or
sti
mov
in
sbb
pop
into
sub
xor
movsb
sub
fiaddl
cmp
mov
out
mov
and
fidivs
jnp
xchg
mov
sub
shlb
jge
roll
cwtl
pop
add
addr16
fwait
cmp
jae
sarl
and
xor
rcrl
mov
aas
insl
out
sbb
cmc
hlt
out
mov
out
pop
jge
sbb
test
mov
pop
pop
push
sbb
sbbl
pop
repz
push
les
or
icebp
dec
add
imul
cmpsb
fcmovb
jp
ret
mov
xlat
in
fstl
gs
dec
pop
push
add
pop
pop
mov
int
pop
call
adc
shlb
jae
and
xchg
loop
dec
xor
xchg
sub
mov
push
mov
mov
leave
sbb
loop
jmp
ss
es
rcl
add
addl
adc
add
in
fisubrl
rcll
jecxz
push
inc
jmp
dec
aam
outsb
negb
mov
cmp
mov
icebp
mov
xor
mov
sbb
in
or
xchg
movb
push
ss
outsb
dec
loopne
inc
sub
and
sarl
test
jecxz
aas
add
jbe
adc
xchg
loope
out
xchg
cs
outsb
adc
stos
xchg
add
jg
imul
dec
js
std
roll
insb
popf
add
scas
movl
test
adc
arpl
out
into
mov
cmp
sbb
xchg
mov
test
out
sbb
sub
js
push
jl
jne
repz
notl
sti
fprem
les
in
add
jl
lods
ret
adcl
jge
add
iret
enter
add
mov
xchg
dec
inc
pop
push
in
ja
xchg
data16
xorl
popa
cmpsb
sbb
cmpl
bswap
jb
imul
and
imul
lret
jo
ds
hlt
mov
sbb
jne
shrb
push
daa
js
sub
insb
push
cltd
jbe
push
jp
lret
sbb
cmpsl
add
lea
repz
lret
xor
lcall
stos
jg
repnz
jl
xchg
mov
loop
mov
adc
cmp
dec
xchg
nop
cmp
inc
repnz
jae
lds
or
push
sbb
cmp
jb
pop
dec
pop
jl,pt
inc
rcl
fmull
and
aaa
sub
mov
adc
inc
aad
pop
add
dec
shrb
jb
sub
sbb
addr16
sub
dec
test
push
pop
ljmp
loope
adc
int
fmuls
adc
es
mov
and
push
ds
jmp
push
lret
mov
mov
imul
push
mov
cmp
sahf
stc
hlt
shlb
push
push
push
pusha
sarl
inc
jnp
pop
xor
lcall
jecxz
mov
jnp
lea
jb
xor
lea
arpl
pop
mov
jge
cmp
sub
call
test
cmp
clc
xchg
push
pop
or
sbb
inc
xchg
add
icebp
out
mov
pusha
daa
xchg
insb
scas
xchg
and
rorl
aam
pusha
ret
mov
pop
ret
pop
adc
sub
sbb
mov
int
push
or
in
rolb
pop
fldenv
inc
xchg
inc
lcall
fdivr
sbb
stos
inc
loopne
popf
adc
inc
xor
push
enter
shll
jge
aas
aas
mull
cmp
fildll
je
push
std
imul
sbb
xchg
adc
cmc
cmpsb
xchg
adcb
scas
fisubs
pop
cmp
mov
mov
xchg
std
lea
inc
out
dec
inc
xchg
popf
inc
pushf
sub
sti
mov
push
and
fcmovbe
cmp
inc
cli
sbb
pop
stos
pop
aad
jg
aaa
mov
fadd
sub
stos
lods
or
jns
or
cld
outsl
xlat
inc
jae
lahf
out
leave
jp
sti
scas
xor
fsubrs
inc
jne
jae
lcall
into
cmp
sub
add
sar
mov
in
push
lret
jo
inc
sub
mov
or
adc
dec
cmp
push
xlat
insl
xchg
or
adcb
jmp
and
ja
xor
int3
adc
ss
adc
jecxz
out
xlat
popf
in
aam
inc
div
mov
stos
stos
pop
fiadds
aam
pop
adc
loop
arpl
pop
xor
dec
mov
mov
adc
sbbb
adc
jbe
data16
sbb
inc
add
xlat
add
and
pop
xchg
stc
xchg
add
push
lock
inc
push
push
ljmp
loop
inc
mov
and
fdiv
enter
call
cmp
sub
pop
jbe
data16
push
cmpsb
mov
test
clc
call
cmp
sub
pop
jbe
data16
push
es
test
clc
call
cmp
sub
pop
jbe
data16
push
cmpsb
mov
test
js
push
mov
inc
cltd
subb
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
rorl
cltd
out
mov
leave
rclb
sub
inc
dec
sbb
push
jns
sahf
negb
leave
mov
sub
xchg
stc
repnz
inc
dec
push
sti
inc
dec
pop
pop
imul
out
jle
rorb
out
sahf
or
dec
xor
sbb
push
stc
negb
xchg
roll
pop
bnd
fsub
xchg
aad
cmp
push
jbe
mov
imull
mov
pop
sbb
xor
rclb
ds
cmc
aaa
push
in
pop
hlt
mov
cltd
jecxz
int3
jnp
xchg
fcomps
or
out
jns
lret
mov
sbb
ret
mov
testb
jle
mov
into
add
jns
mov
sub
mov
sub
nop
push
imul
int
cltd
xchg
sbb
stc
sahf
jmp
jbe
xchg
cmp
gs
daa
in
cmp
out
xor
je
push
and
divb
push
test
dec
negb
int3
fnstenv
loopne
adc
add
push
sbb
imul
cld
out
xchg
fucomp
lods
ret
jmp
xchg
jecxz
xor
and
push
das
and
push
sbb
mov
mov
xchg
test
mov
xor
and
sub
ja
insl
loopne
stos
mov
mov
fldenv
or
sub
inc
dec
ss
imul
cltd
out
mov
cmpsb
jmp
jbe
sub
inc
dec
ss
imul
pop
xor
jne
ljmp
xlat
pop
or
pop
and
int
inc
movsb
dec
push
iret
nop
pusha
add
jno
adc
mov
test
loop
outsl
hlt
lods
fstps
sti
sti
arpl
jecxz
insb
je
loope
out
and
scas
or
sbb
jae
cmpb
fnstenv
sub
into
dec
movsl
mov
ja
cvtps2pd
xchg
mov
cmp
cmp
std
out
dec
inc
pop
push
lock
and
scas
sbb
adc
push
pushf
fcmovu
bound
inc
in
pop
mov
xor
or
in
dec
cs
sbb
adc
pop
je
xchg
repz
repnz
lahf
daa
lds
cmp
or
aam
cld
jb
mov
loope
hlt
pop
jno
push
xchg
adc
test
add
push
test
pop
bound
xor
sub
mov
rclb
mov
pop
adc
loop
lock
xchg
loop
fmuls
shr
jmp
int3
mov
sbb
sbbb
jp
shlb
add
fwait
jno
scas
xchg
ret
and
je
lret
jge
mov
fadds
int
sahf
xchg
std
push
movsb
push
mov
js
mov
mov
add
aaa
jne
push
in
or
popa
mov
mov
xor
push
jne
add
je
add
pop
imul
jbe
ljmp
and
ds
xor
outsl
pop
adc
enter
push
dec
push
lock
int
jo
xchg
idivb
mov
in
cmc
js
call
jno
pop
in
push
mov
add
shrl
pop
ds
movsb
loop
sarl
mov
repz
fbstp
shrb
ret
sbb
test
add
mov
sarl
into
mov
cmp
jnp
sbb
pop
dec
mov
clc
mov
fisttps
inc
mov
push
jb
push
lods
sub
cli
icebp
or
outsb
shlb
pushf
popf
movsb
subb
pop
pop
and
sbb
test
xchg
or
cli
aam
cwtl
cwtl
sbb
inc
inc
or
fbstp
or
out
lock
sub
mov
cld
xor
aam
pop
imulb
push
lret
mov
pop
mov
xchg
inc
test
ja
dec
bound
out
mov
outsb
jbe
sarb
push
jmp
mov
adc
std
jge
sbb
xorl
mov
lods
sahf
push
into
add
adc
sti
fdivrs
in
cwtl
lods
jo
add
push
mov
arpl
lahf
xor
loope
in
je
dec
cmpsb
repnz
or
mov
push
repnz
or
mov
and
bound
sarb
lret
push
add
jge
scas
and
icebp
pop
mov
push
add
aaa
int
adc
jns
addr16
push
fmul
in
cmc
hlt
aad
ds
or
ret
jno
clc
push
push
jo
pop
xor
and
push
sub
add
jmp
xor
stos
mov
add
cmc
push
stos
arpl
dec
and
mov
loopne
cmp
sbb
adc
sbb
insl
test
xor
into
push
xor
pop
pop
push
jns
sbb
loope
jmp
sbb
cmp
pop
loopne
mov
jae
test
lret
mov
and
cli
mov
insl
cmpsb
mov
movsl
pop
jb
add
or
ret
cmp
stc
sub
out
andl
je
jp
push
cltd
mov
cltd
testl
jns
lret
cmpsl
gs
nop
in
xor
and
inc
dec
insl
sbb
loopne
cltd
push
mov
inc
mov
adc
push
ss
shlb
lock
lret
mov
push
xchg
push
cmp
mov
shr
fstpl
mov
outsl
and
pop
dec
xlat
lods
pushf
inc
in
ret
adc
lods
insb
inc
lret
mov
mov
adc
and
adc
xor
push
test
sarb
inc
mov
in
movsl
outsb
jl
mov
xchg
pushf
addb
bound
insl
ret
ja
aas
mov
sub
leave
jo
push
es
inc
mov
test
adc
mov
jns
push
mov
loopne
test
repnz
dec
sub
and
sahf
cwtl
aad
add
push
stos
mov
pusha
push
add
sub
xchg
lcall
lods
bound
push
or
in
xchg
fisttpl
mull
fs
and
das
add
and
push
xchg
fstl
leave
mov
shll
adc
lret
add
cmc
or
xchg
movsb
movsl
mov
movsl
add
xchg
outsb
adc
dec
push
xor
imul
out
pusha
dec
sub
jae
add
jnp
push
fwait
dec
ficomps
test
mov
mov
mov
cmp
sub
fidivrl
mov
push
mov
push
inc
outsb
out
ss
pop
dec
cmpsl
push
push
jp
sbb
or
cmpsb
sbb
fimull
pop
adc
xor
xchg
adc
std
adc
pop
daa
mov
add
jecxz
pop
inc
ljmp
sub
jo
rolb
push
dec
dec
popa
dec
inc
sti
mov
xor
inc
xlat
stos
mov
adc
dec
mov
mov
pusha
or
movsl
psubsb
cmc
aad
insb
lea
or
xorl
mov
dec
inc
mov
orb
aas
mov
mov
mov
jnp
rcl
add
xor
push
xchg
or
cmp
mov
ficomps
mov
xchg
mov
testl
xchg
or
outsl
mov
mov
jl
fcoml
xchg
jns
sbb
jp
je
xor
cmp
loopne
push
sub
jne
fistpll
cmp
pusha
mov
in
pusha
insb
sub
lock
xchg
addb
outsl
pushf
mov
pop
push
es
repz
push
fisttps
adc
mov
int
mov
out
and
ja
fidivl
xchg
adc
dec
pushf
xchg
xchg
xor
sti
ljmp
leave
add
xor
mov
xchg
in
test
cmp
pusha
or
xor
pop
in
ljmp
and
shrl
ror
orl
lret
xchg
repz
push
int
ret
pusha
shll
pop
mov
inc
push
dec
outsb
push
mov
hlt
inc
xor
in
out
ds
sub
fbstp
dec
mov
mov
push
add
sbb
ljmp
mov
xchg
out
fldcw
out
test
mov
pop
iret
shll
xor
cmpsl
and
fwait
addb
fwait
mov
sahf
xorb
mov
fsubr
dec
adc
in
je
fnstenv
mov
xchg
je
into
popa
jmp
cmpsl
loop
and
rcl
sub
xchg
int
mov
icebp
int3
out
mov
inc
aam
pop
repnz
push
test
jb
adc
movsb
lret
movb
loopne
mov
xchg
stc
ja
mov
lds
lods
insl
mov
cltd
ficomps
stos
sbb
inc
out
xchg
jnp
stos
lahf
out
hlt
add
xor
ret
icebp
xchg
inc
dec
outsl
sbb
push
cmp
movsl
sub
sub
lret
jb
rorb
and
mov
jbe
sbb
add
loop
std
jmp
mov
mov
xchg
in
sbb
mov
ret
dec
dec
jecxz
mov
test
insb
jge
fdivl
xchg
inc
inc
inc
add
sarb
mov
mov
cmpsb
jecxz
lcall
cmpsb
pop
mov
mov
addr16
xor
adc
mov
iret
sbb
mov
pop
mov
inc
sub
dec
stos
push
dec
cltd
bound
out
in
add
xor
or
andb
jae
jp
jecxz
xor
repnz
mov
mov
sub
ficoml
xor
jae
pusha
sarl
pop
jle
inc
push
ja
mov
mov
not
or
movsl
jg
pushf
gs
test
and
push
js
add
adc
push
es
adc
pop
push
pop
lahf
jg
stc
push
test
loopne
subl
cmpsb
lret
icebp
lea
inc
bound
cmp
fsubs
add
in
fstl
and
bound
jnp
sub
add
push
mov
sub
jl
lea
inc
sbb
leave
cmp
jno
push
movsl
popa
cmp
xchg
iret
inc
mov
jo
jle
mov
dec
lea
stos
dec
pushf
dec
pop
and
notl
jge
or
sbb
cmpsl
jecxz
or
jno
jg
es
mov
xchg
cltd
pop
or
sbb
daa
popf
xchg
inc
cld
jo
fst
cld
out
mov
inc
aad
shll
sbbl
out
inc
pop
inc
xor
js
enter
test
pop
sbb
ret
mov
pushf
mov
andl
mov
push
cmp
or
jg
xor
lret
repnz
ljmp
push
in
pusha
mov
jecxz
ja
ficomps
mov
sub
pop
adc
jmp
push
addr16
mov
ficompl
ja
xchg
enter
push
jno
mov
ja
jp
mov
lock
add
jb
cmp
test
lock
dec
lahf
es
jecxz
je
xorl
cmp
ds
test
lahf
orl
rclb
jecxz
loope
push
in
pop
lcall
xchg
inc
sub
sbb
push
pmaxub
sbb
shlb
xor
fsts
push
fstpt
lock
inc
inc
addl
xchg
pop
loop
dec
xchg
test
stos
ja
or
sbb
dec
sbb
inc
nop
jnp
imul
scas
or
xchg
sbb
das
cmpl
ljmp
mov
or
jp
js,pn
jp
inc
cmp
xor
lea
jmp
inc
divl
pop
cmpsb
jmp
lds
add
push
push
and
jbe
push
pop
rorl
fadd
cmp
out
int3
xchg
pop
imul
sub
outsl
int3
jns
ljmp
jmp
repnz
xlat
std
mov
lods
adc
std
dec
movsb
cmpsb
insb
out
and
loopne
sub
jge
add
jae
push
push
clc
mov
jg
sbb
bound
lret
cwtl
push
dec
push
aaa
xchg
sbb
sub
mov
push
out
jno
push
add
dec
bound
repnz
addr16
push
push
movsb
aas
test
iret
stos
out
sbb
and
jbe
std
jle
xor
enter
inc
outsl
sub
gs
cmp
sbb
or
inc
scas
shll
jp
sahf
push
std
repz
and
lods
jb
repz
pop
xchg
dec
or
mov
hlt
push
jl
adc
jge
push
mov
loopne
ja
sub
pop
inc
shl
inc
bound
inc
scas
std
dec
mov
insl
addr16
pop
xchg
iret
dec
sub
rcll
inc
sub
mov
stc
pop
xchg
fadd
stos
or
mov
aad
adc
scas
sub
dec
cmp
dec
das
incl
rolb
sub
mov
and
shll
hlt
pop
cltd
xchg
pop
loope
lcall
xor
mov
int3
stos
mov
add
in
push
andb
sbb
adc
pop
cmp
leave
outsl
test
dec
dec
jl
lock
data16
push
sbb
sbbl
xchg
jl
pop
jmp
adc
jecxz
push
mov
fwait
outsl
mov
sbb
iret
pushf
mov
mov
inc
movsb
pop
sarl
inc
or
adc
adc
adc
dec
das
movb
shrb
fidivrs
in
daa
pop
fs
fwait
mov
pop
xchg
cmpsl
lods
daa
mov
cmpsb
std
stos
nop
xchg
data16
out
dec
or
mov
scas
fnsave
test
fucom
cld
lret
inc
adc
sbb
jns
lds
dec
shll
nop
adc
stos
jo
xchg
cmpsl
mov
sub
int3
and
sbb
call
inc
inc
jne
fldenv
dec
lret
sub
sti
popa
mov
jecxz
cmp
sbb
sbb
jg
jmp
shr
lock
xor
ja
jnp
mov
fsubrs
or
jmp
dec
fs
push
cs
les
add
pop
fldl
mov
jge
mov
rcr
jmp
dec
in
dec
push
jb
jecxz
lods
inc
mov
loope
sbb
xchg
js
out
cmp
test
and
sbb
pop
insb
xor
out
dec
fcmovne
stos
adc
stc
ss
test
jp
loopne
std
repnz
add
out
dec
mov
cmp
push
stos
mov
enter
cltd
fcompl
cmp
jecxz
int
cs
push
dec
push
sub
stos
or
out
sbb
call
mov
loopne
and
aaa
in
xor
add
jne
adc
xchg
test
pop
xchg
dec
mov
inc
out
pop
pop
and
lret
add
pop
sbb
sti
or
jnp
pop
push
mov
fwait
test
shrl
jge
inc
into
js
dec
mov
sbb
int
stos
adc
inc
ss
fwait
mov
imul
mov
or
mov
js
outsb
movsb
adc
pop
scas
gs
and
sbb
fchs
adc
mov
addr16
xchg
mov
add
popa
ficomps
stc
inc
jno
add
jmp
test
mov
pop
inc
popa
jae
hlt
das
pop
hlt
jae
imul
repnz
fimuls
and
add
ljmp
pusha
xor
cmp
int3
fcompl
and
and
push
xor
jg
adc
shlb
xorb
es
stc
and
push
xchg
jmp
dec
nop
jg
mov
xor
adc
jg
lock
add
add
cmp
mov
inc
mov
sub
sbb
mov
fildl
jmp
out
stos
lcall
jae
movsb
lds
repz
sub
popf
aad
cmp
int
xor
cmp
inc
mov
shrb
push
movsb
mov
outsb
sbb
jmp
out
mov
dec
mov
outsl
dec
fsubl
cmc
pusha
outsl
sub
push
cmp
loopne
fwait
cwtl
mov
lock
test
ja
lahf
je
lret
popl
jmp
out
jnp,pn
ds
outsb
mulb
pop
jmp
mov
jo
push
aam
xchg
js
ja
pop
sbb
fbstp
xchg
in
div
pushl
mov
ja
mov
lea
add
and
push
fwait
inc
adc
imul
lock
mov
inc
cmpsb
sbb
out
xchg
je
imul
fistpl
iret
jbe
jge
xchg
inc
adc
lods
sahf
push
lds
repz
daa
or
sbb
mov
inc
and
xchg
pop
cmpsb
and
cmp
das
data16
mov
out
aaa
mov
or
adc
rolb
adc
insl
hlt
or
mov
push
fdivr
cwtl
mov
or
gs
loopne
add
ja
add
mov
stos
sub
dec
call
jecxz
stos
orb
insb
cs
rcrb
xabort
repz
divl
sub
sahf
lods
cmpsb
jecxz
pop
add
cmp
dec
ja
jp
sub
aam
fs
stos
aaa
leave
sub
dec
bound
pop
mov
test
mov
pop
stos
rcll
clc
clc
shrl
adc
sbb
mov
add
arpl
lods
int
outsl
scas
fmulp
fimuls
test
js
push
pop
mov
sbb
call
mov
push
fs
in
lds
enter
push
cmpsb
pop
add
leave
sarb
add
xchg
jmp
inc
dec
pop
xor
sub
cltd
or
mov
cmp
jmp
mov
cmc
mov
test
test
dec
cmpsl
mov
dec
sub
add
test
cmp
or
jecxz
mov
sub
cmp
mov
adc
or
imul
ja
stc
cmp
lock
cmp
sbb
push
push
mov
fsubrs
mov
js
adc
fcmovu
xchg
jl
stc
aas
xchg
add
cmovl
pop
repnz
ds
scas
pushf
push
push
or
outsb
adcl
add
outsl
jmp
clc
repnz
hlt
pusha
cmpsl
fs
in
xor
mov
insb
mov
stos
dec
mov
sub
or
inc
lret
and
cmp
pop
js
icebp
cwtl
inc
movsb
daa
xchg
ret
mov
cmp
sbb
sbb
mov
lock
ljmp
pop
cmp
sbb
pop
fstpl
enter
rclb
pop
xchg
adc
fs
popa
insb
pop
or
fs
sub
fidivrs
loope
and
mov
mov
cmpsb
adc
test
imul
adc
cmpsl
repz
add
mov
call
fisttpl
faddp
lcall
icebp
aam
dec
sub
shl
dec
sbb
lahf
cli
repz
or
jns
jno
add
aad
sub
xchg
pop
dec
xor
add
xchg
and
sbb
out
jecxz
mov
lods
pop
pop
sub
jl
nop
and
push
into
mov
xor
iret
add
pop
xchg
push
pop
mov
push
cmp
test
aam
inc
ltr
mov
cltd
cwtl
fmull
dec
or
rorb
ror
notl
inc
cmp
cli
pop
icebp
sub
fstl
lcall
cmpsl
mov
imul
mov
add
std
inc
add
std
fadds
enter
push
mov
test
pop
mov
push
js
cli
pop
roll
jmpw
cmc
mull
std
loopne
xchg
call
in
push
sbb
cmp
insb
arpl
cmp
mov
into
jo
pushf
add
aam
ds
xor
das
push
and
insb
or
mov
mov
data16
ficomps
imul
pop
imul
aas
xor
dec
push
adc
xor
sbb
and
xor
je
mov
addr16
frstor
lods
pop
outsl
test
int
test
in
fldt
and
push
jle
jl
stc
sub
inc
sbb
ja
inc
sahf
inc
xor
pop
dec
dec
ficomps
loop
sbb
fldl
dec
ret
adc
push
mov
sub
mov
mov
or
fsubs
adc
xchg
sti
std
lret
dec
cmp
out
out
mov
std
movsb
pop
addb
pop
mov
int3
dec
sbb
sbb
inc
mov
xor
aad
adc
aad
in
lret
jo
lahf
movsl
pop
popf
cli
jne
push
and
xchg
sub
icebp
jl
dec
mov
sbb
dec
mov
and
out
dec
fldcw
adc
and
adc
repz
jge
sti
sub
pop
adcl
push
cmp
imull
sub
xchg
lods
shlb
mov
sbb
dec
in
sub
fwait
repz
mov
fisubs
sbb
clc
jl
push
push
xorb
add
jl
push
mov
cmpsl
mov
idivl
test
lods
fstpl
mov
mov
inc
mov
or
shll
mov
push
je
jmp
clc
jbe
pusha
cmc
xchg
ret
sub
shrb
mov
inc
xor
push
mov
stc
jb
in
sub
push
or
adc
ficomps
dec
enter
mov
rol
sub
jns
add
sbbb
push
pop
jge
movsl
stos
std
xor
mov
clc
int3
sub
fcomip
dec
add
mov
leave
cmpsb
sbb
std
add
pop
jo
pushw
mov
add
pop
rol
lea
out
insl
cmpl
sbb
mov
pop
mov
cmpsb
push
inc
int3
outsl
xchg
push
out
ret
fwait
sub
or
test
push
sbb
jns
sahf
jmp
xchg
ds
repnz
aad
popa
mov
shr
xchg
nop
xor
inc
bound
dec
jae
in
lds
cwtl
icebp
fcompl
mov
mov
or
addr16
inc
push
lods
cmp
pop
mov
imul
cmp
mov
movsl
out
jg
push
out
mov
fldenv
or
sub
inc
dec
ss
imul
cltd
out
mov
cmpsb
jmp
jbe
sub
inc
dec
ss
imul
cltd
scas
test
mov
push
jmp
scas
sbb
push
cmp
ss
imul
lods
out
mov
cmpsb
imul
out
adcl
ds
xchg
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
