leave
or
and
lock
add
add
nop
add
or
add
add
add
add
add
rolb
push
xor
jo
pusha
add
or
add
or
test
rolb
push
push
add
or
jge
mov
add
adc
add
push
adc
xchg
or
add
or
add
pop
jo
adc
or
add
add
add
or
add
pusha
add
add
xor
sbb
addb
or
add
or
add
lock
add
add
xor
xchg
add
add
rolb
call
add
add
or
add
or
add
or
aam
add
insb
add
add
or
lock
or
outsb
pop
and
nop
add
add
mov
add
lock
add
jo
adc
adc
mov
add
addr16
add
push
add
or
in
nop
add
or
add
push
add
add
add
push
lock
rolb
cwtl
or
and
or
add
push
mov
add
add
inc
add
nop
add
add
add
add
add
addl
add
popa
add
mov
add
rol
add
outsb
or
add
add
mov
inc
add
loopne
cmpsb
wrmsr
add
or
add
or
add
pshufw
jo
add
add
jmp
addb
push
mov
enter
loopne
and
insb
push
mov
add
push
push
add
push
mov
adc
add
stos
or
add
or
add
add
nop
add
add
add
add
add
rolb
or
add
add
add
add
pop
and
xchg
rolb
or
add
add
add
rolb
outsb
or
roll
add
or
add
add
xor
xchg
or
sbb
mov
lea
mov
add
add
add
add
or
jmp
lock
pusha
add
inc
add
in
push
popl
movl
mov
movb
movl
mov
movl
call
push
popl
cmp
jne
push
popl
movb
ret
push
popl
movl
push
movw
push
push
popl
xorb
mov
subb
pusha
addb
subl
call
and
mov
sbbb
push
popl
push
subb
xorl
push
popl
addl
addl
add
push
push
popl
call
subb
push
popl
cmpl
jne
push
popl
call
push
popl
orb
ret
push
popl
jmp
orl
push
popl
xor
push
popl
push
popl
mov
xorw
shl
xorl
mov
push
popl
shl
orw
push
popl
mov
push
popl
cmp
jne
andl
mov
push
popl
orb
sub
push
popl
push
popl
call
push
popl
popa
subl
pusha
xorb
call
xor
movl
mov
andb
push
andl
sbbl
xorl
subb
orl
addl
push
popl
push
addb
orb
call
mov
push
push
popl
xorl
add
addl
push
popl
subw
pop
push
popl
mov
cmp
jne
push
popl
push
popl
ret
mov
popa
andl
andl
call
or
push
and
xorl
addw
push
popl
addl
subb
push
andb
call
sbbw
push
push
sub
sub
shr
shl
shl
mov
mov
xor
xchg
andb
mov
movb
xor
shl
xorl
push
push
popl
movw
xor
xorl
sbbw
push
subl
call
movb
push
and
push
popl
mov
sbbl
push
sub
jmp
subw
andb
pop
andb
mov
push
popl
push
movw
and
push
push
popl
sub
push
xorb
mov
sbbw
mov
xorb
add
rep
mov
push
popl
pop
sbbb
orl
pop
push
sub
shl
mov
add
xchg
push
push
dec
mov
xor
pop
sub
xor
sbbb
xorw
jmp
sbbb
sub
sbbb
sbbw
mov
push
popl
sub
push
popl
xorl
sub
add
mov
and
addw
sub
subw
or
jne
push
popl
xorb
add
push
popl
jmp
sbbl
xorl
mov
andl
xorl
shr
push
popl
shl
push
popl
push
popl
mov
push
popl
add
sub
jmp
add
sub
sub
push
popl
push
popl
mov
push
popl
push
popl
add
movb
cmp
jne
push
popl
orb
mov
movl
sbbl
add
addw
mov
xorb
subw
add
or
subb
cmp
jne
addl
andl
ret
subb
push
movl
subw
xor
push
popl
push
popl
pushl
xorl
andl
pop
orb
sub
lea
addw
or
push
popl
push
popl
mov
movw
mov
push
popl
lods
push
popl
mov
push
popl
movw
pop
subb
ret
sbbl
xorl
push
subl
mov
andw
sbbw
add
addb
push
xorb
push
push
popl
push
add
sbbl
push
push
popl
push
push
popl
addb
mov
xor
sbbw
mov
sbbw
push
popl
add
movw
pushl
xor
push
popl
mov
andb
add
add
movl
movl
add
push
popl
xor
mov
push
popl
add
push
popl
push
popl
xor
xorb
push
popl
lea
andl
add
mov
xorl
addl
add
movb
add
mov
push
popl
xor
xorl
sub
rol
movw
movl
xor
xor
sbbl
inc
or
addl
cmpb
jne
sbbl
cmp
je
and
inc
subl
cmp
jb
movw
mov
push
popl
push
popl
add
push
popl
movzwl
push
popl
xorb
mov
or
add
push
popl
mov
push
popl
addl
add
sbbw
push
popl
pop
sub
cmp
jbe
push
popl
cmp
jae
push
popl
movl
pushl
sbbb
pushl
orb
push
subb
xorl
addb
push
popl
addl
andw
add
pushl
xorb
orw
call
subb
orb
call
sbbb
push
popl
pop
sub
pop
sbbw
subl
pop
push
popl
push
popl
pop
and
sub
pop
andl
subl
leave
push
popl
ret
mov
call
sbb
add
mov
rorl
sub
mov
loopne
mov
imul
stos
mov
mov
lret
mov
xchg
shrl
sbb
sarb
cwtl
movsb
inc
shlb
flds
movsb
xchg
hlt
lds
adc
and
loope
mov
andl
rcrl
scas
dec
sub
adc
imul
stos
mov
mov
dec
stc
xor
mov
jge
jle
mov
shll
clc
dec
mov
in
pusha
subb
pop
mov
mov
sub
or
aaa
call
jle
dec
out
cli
mov
add
cwtl
fwait
scas
cli
pop
mov
push
pop
rorl
ret
and
dec
push
movsl
repnz
loope
cmpsl
jnp
inc
loope
andl
into
dec
aaa
dec
cmp
aam
add
dec
xchg
mov
add
subb
arpl
adc
inc
in
xchg
xorl
and
or
das
enter
mov
fwait
outsb
rorl
mov
in
test
dec
add
into
jmp
mov
addr16
sub
imul
out
int3
mov
xor
mov
dec
jecxz
cli
adc
xchg
aad
outsb
push
je,pn
aam
pop
cli
mov
fisubrl
test
sahf
lods
xchg
or
cmp
or
mov
dec
jns
gs
adc
pushf
jo
scas
hlt
xchg
lock
fs
sub
and
sar
cld
mov
js
pop
inc
movsl
xor
mov
mov
jnp,pn
cmp
inc
inc
dec
jmp
xor
sub
or
ret
outsl
adc
clc
push
enter
mov
dec
mov
add
pop
xchg
pop
call
nop
inc
call
mov
icebp
test
mov
repnz
lods
or
cmp
mov
les
loope
cmp
or
mov
test
fdivr
clts
mov
xchg
pop
and
or
lret
xchg
int
xchg
push
popf
mov
push
aad
aaa
faddl
insl
das
fidivrl
mov
dec
pushl
mov
clc
xchg
dec
jmp
call
bound
aaa
xor
out
sub
xchg
xchg
adc
in
sarb
cld
pop
in
in
xchg
fwait
scas
cwtl
inc
int
aaa
fdivl
aas
fsubrl
aam
aad
rorl
daa
into
mov
mov
cmp
mov
inc
sub
push
sbb
into
mov
mov
les
sub
lds
mov
pusha
adc
iret
mov
cli
xchg
xchg
dec
sub
filds
fldcw
cmpl
fsub
xor
mulb
mov
mov
imul
shr
into
shl
in
test
das
sub
jecxz
sbbl
pop
xchg
sbb
mov
pusha
jbe
mov
sarb
std
dec
je
cmpsl
mov
fsubs
cltd
fwait
scas
push
sbb
hlt
pop
cmpsb
dec
inc
psrlw
mov
faddl
aad
outsl
push
sbb
or
xchg
add
pop
inc
in
or
lret
jo
mov
inc
jmp
stos
inc
lea
popf
mov
inc
mov
jbe
mov
cmp
addr16
ds
sbb
rorb
xor
xchg
in
nop
mov
fistpl
decl
rcrb
inc
or
mov
jo
ja
cmovo
and
inc
loop
mov
mov
sahf
pop
mov
mov
test
push
into
mov
jo
into
rcl
push
xchg
jne
outsb
sub
sbb
inc
repz
scas
sub
insb
adc
jg
and
fwait
ret
nop
xor
sub
aad
test
jp
and
fwait
ret
nop
sahf
mov
fnsave
out
insl
fisttpll
jno
aam
mov
int
fsubrs
pop
imul
rep
cmp
cmpsb
fnsave
in
cmp
sbb
and
inc
jae
repz
xchg
cli
stos
in
fwait
ret
nop
cltd
jo
fnstcw
incl
sub
adc
push
mov
imul
sbb
dec
in
push
push
ret
out
mov
lock
xchg
and
pop
pop
jbe
dec
je
insb
add
mov
lds
push
cwtl
dec
mov
inc
sub
andl
es
fdivrp
in
fwait
ret
nop
mov
sub
aad
test
mov
push
inc
adc
daa
movl
add
add
sub
data16
lahf
test
add
inc
or
dec
inc
cli
out
push
aam
ret
inc
adc
mov
rorl
bound
jg
das
and
pop
loopne
adc
mov
shll
or
jo
xor
sub
adc
push
add
jecxz
mov
into
inc
das
test
scas
sub
cmp
and
xchg
sbb
sbb
xchg
dec
movsb
add
mov
or
lods
les
jne
sub
data16
aad
adc
js
sti
bound
shlb
cmp
sub
jnp
sub
into
cmp
dec
mov
dec
scas
push
or
stc
dec
add
mov
xor
enter
arpl
push
fsincos
bound
and
std
inc
filds
sub
add
mov
adcb
daa
cli
xchg
mov
jp
mov
and
push
jno,pt
shr
idivl
and
test
mov
scas
rcl
shll
outsb
and
mov
inc
dec
push
xchg
popa
decb
out
neg
mov
repz
and
hlt
andl
into
dec
dec
dec
inc
fldcw
outsb
pop
cmp
cli
xchg
dec
neg
xor
mov
dec
mov
xchg
cltd
imul
shrl
xchg
fwait
lods
and
pushf
addr16
xchg
mov
insb
mov
loope
push
shr
scas
mov
scas
xlat
rcl
pusha
ret
mov
mov
loop
push
xchg
data16
loope
adc
dec
mov
mov
loope
push
rorl
aad
shll
xchg
jl
mov
add
pop
push
fwait
decb
or
loop
cltd
ficomps
pop
adc
es
andl
into
dec
sub
xor
cmpsb
dec
cltd
lea
lcall
sbb
xchg
inc
mov
sub
cs
xor
jo
inc
fldl
loopne
andl
push
rcrl
iret
into
rcl
in
push
push
out
mov
mov
sub
mov
lret
into
pop
neg
js
push
int
push
mov
bswap
into
rcl
jb
adcl
cmp
iret
movsb
push
es
jecxz
xchg
leave
lcall
iret
rcrl
shrb
orl
mov
sbb
mov
bound
outsl
into
shll
jo
xlat
pusha
adc
mov
dec
nop
aad
popa
ret
orb
mov
lcall
iret
ja
inc
xchg
bswap
into
rcl
orb
mov
push
stos
mov
mov
lods
mov
es
orb
mov
popa
mov
clc
dec
sbb
xchg
popa
decb
sub
pop
mov
adc
aam
cmpb
movsl
and
push
xchg
cmp
xchg
sub
imul
sbb
adc
xor
int
rcl
out
mov
mov
dec
xchg
fdivrs
add
rolb
sarl
mov
dec
imul
pusha
cmp
pop
out
xchg
inc
push
popf
sub
lods
sbb
or
cmp
mov
and
add
cld
cmp
mov
pop
inc
test
outsb
or
pop
rcr
ja
jp
dec
mov
mov
std
scas
aad
outsb
push
inc
popa
xor
sti
aam
cli
test
xor
mov
addr16
imul
xor
nop
push
mov
out
pop
push
push
inc
mov
jmp
repnz
push
int3
xchg
into
sub
adc
daa
movl
ljmp
jo
cmp
jmp
pop
and
mov
mov
sub
scas
fptan
xchg
call
lods
mov
mov
bound
or
inc
mov
xlat
or
xor
xchg
rorl
inc
sbb
shll
leave
stos
mov
cltd
mov
push
in
aam
adc
lret
aad
mov
adcl
cmpsl
in
fwait
ljmp
mov
in
ljmp
inc
dec
jns
jge
mov
lea
push
sahf
inc
ficomps
leave
icebp
cld
cmp
cmp
push
pop
popf
sub
adc
xor
dec
shl
daa
mov
mov
in
and
pusha
imul
dec
sbb
data16
fnsave
adc
incb
out
into
mov
push
push
push
or
mov
call
jle
movsl
rcl
cmovne
push
stos
ret
inc
or
sub
repz
pop
in
daa
dec
add
push
mov
into
test
scas
imul
insb
outsb
aas
pop
mov
mov
xlat
dec
sbb
mov
sbb
shl
daa
mov
mov
gs
pusha
push
es
mov
test
lret
mov
mov
out
aam
aaa
push
mov
mov
mov
lcall
push
loopne
out
inc
outsl
push
sti
inc
pop
xchg
dec
inc
test
inc
sub
loopne
xor
xor
sbb
pop
mov
dec
xlat
dec
pop
add
cs
repz
les
mov
cltd
adc
push
ret
mov
sub
fldenv
jo
mov
push
jno
jcxz
out
mov
add
and
in
ret
shr
adc
dec
and
cmp
sbb
dec
xchg
dec
cmp
push
add
dec
jbe
lahf
push
sti
ds
sbb
xor
enter
adcb
mov
rolb
mov
dec
jae
imul
lahf
inc
mov
xlat
test
pop
and
jl
ss
rcl
shll
outsl
xor
and
pusha
adc
add
arpl
lds
scas
aad
std
inc
aam
fcmovne
out
dec
cwtl
iret
mov
mov
mov
test
sub
cmp
mov
dec
mov
sbb
stc
mov
push
mov
pusha
adc
jns
sub
fs
add
inc
and
jge
lock
cli
mov
rolb
dec
inc
mov
xchg
xor
lret
into
mov
ja
mov
sbb
scas
ss
push
sub
ret
lock
xchg
into
jae
je
outsb
cs
lcall
leave
xor
and
sbb
out
test
add
and
mov
xorb
adc
daa
in
imulb
pop
mov
mov
into
pop
push
cmp
mov
and
daa
push
pop
int
jo
mov
shll
mov
mov
shrb
mov
add
dec
xchg
fdivrl
stos
sub
test
dec
nop
inc
inc
cmp
mov
jge
cwtl
pop
ss
and
pop
xchg
mov
cs
iret
mov
xchg
ss
mov
cmp
fcmovnu
pop
das
lahf
mov
gs
es
mov
mov
fisubrl
fcomps
adc
stos
mov
insb
push
jb
and
inc
cmp
sbb
inc
jo
xchg
jmp
std
or
pop
adc
or
in
jp
mov
xor
maskmovq
mull
mov
std
push
inc
loop
arpl
out
idivl
mov
aam
push
cli
out
dec
sbb
test
cltd
test
movsb
repnz
fdivrs
aaa
or
sahf
aad
ret
scas
rcl
pusha
add
mov
addr16
sahf
lods
push
and
outsb
sub
mov
mov
add
sub
cmc
les
andl
loope
dec
insl
aaa
sahf
je
mov
jae
xchg
mov
je
scas
sub
mov
pop
popf
xor
cld
sub
loope
int
pop
scas
aad
std
inc
ja
fdivrp
icebp
shl
add
test
and
jbe
fdiv
inc
loope
dec
add
pop
pop
scas
dec
dec
gs
and
pusha
adc
js
mov
movsl
inc
xchg
test
push
mov
enter
mov
into
rcll
sbb
jns
mov
xor
mulb
mov
xchg
je
shl
idivl
push
int3
enter
bswap
into
rcl
rcll
and
fdivl
test
xchg
push
cltd
incb
in
andl
push
rclb
ds
into
rcl
ds
jno
scas
push
mov
mov
or
icebp
stos
mov
mov
movsl
mov
das
dec
arpl
daa
pop
lahf
es
aas
lods
popf
xchg
mov
push
or
inc
mov
fwait
jmp
dec
and
xchg
test
fdivrs
test
sahf
or
into
shll
mov
inc
pushf
lds
push
lea
sub
daa
mov
jl
lods
pop
imul
call
xchg
adc
push
lcall
in
push
adc
sbb
and
adc
lret
xchg
mov
loopne
in
insb
aaa
faddl
pusha
sahf
inc
sub
or
push
inc
adc
daa
movl
scas
mov
sar
inc
jge
lods
rorb
outsl
inc
lret
loopne
mov
sub
mov
fincstp
dec
insl
or
out
inc
or
and
cwtl
sbbb
mov
dec
mov
mov
imull
sub
pop
mov
xchg
aaa
add
push
cmp
adc
rclb
std
cwtl
lods
inc
shlb
or
mov
and
int
xor
and
subb
adc
dec
and
and
mov
cmp
or
dec
popf
dec
mov
test
jmp
sub
daa
pop
and
push
es
xchg
ret
jno
mov
aad
aaa
loope
push
lahf
es
cli
andl
into
dec
mov
sti
inc
outsl
add
dec
clc
lea
lret
dec
push
in
inc
dec
fsin
or
in
cli
sub
pop
inc
fildl
int3
mov
mov
adc
jle
xchg
sbb
mov
jbe
jmp
nop
mov
fadds
rorb
orl
into
jl
cwtl
mov
shlb
fists
or
sub
test
popf
call
pusha
adc
decb
andb
cltd
mov
add
mov
cmp
dec
in
mov
add
cmp
mov
fldcw
notl
fstl
pop
ss
dec
mov
push
ss
xor
sub
and
dec
addr16
jl
in
imul
loopne
cltd
lods
mov
divl
mov
into
sub
loope
cmp
sbb
dec
mov
nop
adc
fcomi
sub
js
mov
in
xor
mulb
mov
xchg
push
and
add
or
fcomip
mov
xor
mull
mov
mov
add
pop
clc
mov
les
dec
cmp
jmp
jge
ljmp
xor
inc
imul
ret
jp
mov
lahf
inc
mov
mov
mov
int3
cld
bound
out
push
mov
mov
fildl
inc
xorl
and
cwtl
xchg
inc
shlb
mul
test
cmpsb
jne
dec
adc
ds
fsubrs
xor
mov
into
pop
adc
adc
aad
mov
dec
dec
xchg
mov
cltd
incb
mov
and
xchg
jnp
movsb
jecxz
mov
xchg
mov
popf
rcll
decl
and
push
cmp
mov
xchg
mov
outsl
jp
mov
mov
mov
movsb
sbb
out
mov
sub
cmp
xchg
mov
push
aaa
loop
sbb
xchg
subb
andl
and
iret
imul
adc
daa
mov
das
mov
test
pop
cmc
fdivl
pop
popf
enter
mov
aad
outsb
dec
fadds
mov
inc
pop
popf
nop
dec
jmp
mov
mov
bound
pop
jbe
fmuls
call
push
and
mov
inc
lss
fnsave
and
les
mov
add
lahf
int3
test
sub
pop
movsl
call
pop
xchg
mov
icebp
xor
fwait
mov
cmp
dec
out
mov
aas
inc
mov
and
popa
roll
repz
adc
mov
div
push
xor
mov
adc
andl
dec
insb
push
out
jle
lret
rorl
inc
pop
or
inc
testb
add
xor
jmp
jg
adc
mov
jns
mov
push
shl
in
add
sarb
shrb
mov
test
negb
pop
aaa
mov
mov
cmc
fprem1
push
andl
xchg
fistps
lahf
mov
mov
aam
adc
movsl
pop
xchg
mov
dec
rol
sub
mov
mov
pusha
adc
mov
stos
mov
lds
inc
or
lahf
xchg
aaa
inc
mov
mov
sub
xor
fnstcw
cmp
mov
adc
outsb
pop
popf
mov
adc
lret
push
out
lret
and
push
out
cmp
xchg
sarl
pop
sub
aaa
loop
movb
sub
add
xor
xor
nop
inc
sbb
jl
cmp
mov
cs
cmp
inc
cmp
fdiv
dec
inc
mov
ljmp
out
inc
popl
mov
repz
std
pop
sbb
mov
data16
mov
and
sar
add
mov
in
xor
rclb
push
imul
dec
mov
xchg
pop
adc
daa
cld
cmp
mov
lock
in
mov
dec
mov
and
das
push
es
jp
or
movsl
push
xchg
xchg
adc
mov
dec
insl
mov
ljmp
or
push
lcall
mov
add
mov
pop
test
cbtw
inc
and
pop
inc
cmp
cmp
mov
inc
faddl
outsl
cmp
cmp
add
clc
ja
clc
imul
jl
lret
divl
dec
xlat
mov
outsb
inc
sti
sbb
addr16
cld
push
clc
lahf
ret
sub
loope
in
inc
adc
jp
pop
mov
imul
pop
outsl
jge
mov
fmull
add
dec
inc
mov
fiadds
test
adc
mov
cmc
addb
and
cld
inc
cmp
mov
shr
in
or
cs
mov
lcall
mov
shl
fwait
ret
nop
xchg
jns
cmc
scas
jns
stc
aam
test
sub
aam
adc
push
pop
push
jg
aad
pusha
adc
rorl
ficoms
lret
cmp
or
jp
xchg
adc
scas
popa
fcom
pusha
arpl
add
orl
andl
in
push
sub
mov
push
call
icebp
push
lret
into
mov
mov
aad
aaa
cmp
into
rorl
inc
or
aam
sub
repnz
dec
into
push
push
push
adc
stos
cmpsl
rcl
shll
shlb
adc
and
loope
leave
ret
push
sbb
cmc
gs
scas
aad
push
push
and
or
mov
shll
xchg
adc
sub
fdivs
add
out
dec
xchg
aad
addr16
out
sub
cli
loope
jge
aam
arpl
aam
in
test
and
or
mov
scas
fcom
shll
test
mov
fstl
enter
decb
inc
and
rclb
andb
sbb
mov
cmp
mov
dec
out
cmpsl
fwait
push
cmp
sub
inc
sbb
sub
push
mov
pusha
adc
inc
rorl
cmpsb
aad
std
inc
xchg
insb
lods
inc
cmpsb
inc
sbb
cltd
mov
sarl
incb
dec
inc
sub
jno
dec
mov
clc
ss
cmp
mov
imul
negb
xor
outsb
jmp
test
andl
into
dec
pop
dec
cmp
sub
pop
rcl
std
inc
or
pushl
add
stc
sub
das
fisubrs
jns
jae
xchg
mov
fldcw
notl
pop
mov
cmp
xlat
sti
inc
pusha
pop
mov
cwtl
in
mov
in
ja
rcl
inc
add
lea
xor
lret
rcr
into
shll
push
sbb
mov
rorb
mov
xor
xlat
data16
stos
mov
mov
dec
mov
pop
pop
imul
test
jg
xchg
cld
push
test
enter
mov
into
shrl
loope
movsb
test
adc
mov
or
fmul
test
sbb
xchg
lock
lods
sub
cmp
sub
add
dec
repz
mov
loop
lret
mov
fiaddl
xchg
inc
xlat
es
jmp
or
and
sbb
rclb
js
loop
popa
pop
cmpsl
andb
sub
fildl
sub
xchg
dec
add
xchg
xorb
outsb
das
aam
jg
sbb
sub
dec
push
into
cmp
loopne
cmpl
fnstenv
or
and
cmc
mov
push
mov
clc
leave
dec
inc
ljmp
lret
std
inc
rolb
sbb
push
mov
adc
ds
jge
js
inc
test
movsw
sbb
xchg
fwait
scas
div
add
mov
push
movsl
and
adc
leave
dec
inc
loop
ror
rcl
pop
and
dec
push
xor
fistl
lret
jmp
rorl
lea
int
sub
pop
jnp
sbb
mulb
mov
xchg
out
shr
idivl
pop
push
int3
pop
xchg
int3
push
scas
aam
shll
sub
mov
sub
addr16
mov
and
xchg
lret
push
jge
adcb
add
int
or
and
subl
and
rorl
fdivrs
and
push
xchg
pushf
xchg
push
roll
divl
mov
into
sub
pop
pop
arpl
scas
inc
rclb
mov
movsl
xor
cmpsl
xchg
rorb
pop
popa
imul
and
xor
into
rcr
out
jns
int3
fs
mov
notb
outsb
sub
push
adc
push
sbb
fildll
and
rol
into
shll
mov
data16
mov
mov
xchg
out
clc
dec
inc
out
mov
ss
inc
push
dec
sub
jg
sub
xor
push
mov
dec
jmp
push
xor
pop
pop
mov
imul
divl
sub
sub
clc
andl
into
dec
sub
pushf
sub
inc
jo
scas
dec
lock
pop
jns
pop
inc
or
leave
xchg
inc
jo
pmulhw
mov
xor
add
pop
rcr
xorb
and
jl
push
shl
pop
dec
mov
rcll
mov
fadd
lods
ljmp
roll
sbb
test
mov
jmp
push
mov
mov
cltd
xchg
fs
pop
popf
jae
repnz
jle
cmp
push
adc
outsb
inc
sbb
inc
les
shlb
or
dec
in
inc
call
rorl
leave
ret
dec
add
clc
mov
and
inc
es
scas
rcl
pusha
cmpsl
inc
xchg
mov
incb
push
and
int3
roll
push
jne
pop
and
jo
mov
shll
pop
cmc
add
cmp
arpl
xchg
aam
shll
dec
mov
dec
jg
scas
icebp
call
mov
mov
add
out
and
xchg
inc
test
addr16
cs
rep
ror
ret
fiadds
test
mov
loopne
lret
movsl
adc
ja
cmc
out
movsb
dec
xchg
cmpsl
cltd
push
xchg
insl
outsb
and
enter
mov
into
es
pop
aaa
jns
pop
mov
shll
jecxz
std
lea
xorb
push
xchg
fisttpl
cmp
jb
clc
in
adc
sbbl
rclb
fstpt
inc
sbb
xchg
push
stos
ja
sbb
or
xor
add
dec
std
lods
xor
test
mov
add
jp
mov
test
sub
jno
loope
dec
mov
fimuls
mov
test
popa
mov
dec
mov
mov
push
movsl
sarb
and
push
push
and
inc
outsl
dec
pop
andl
dec
mov
fsubr
cmp
out
dec
sub
sub
pop
cmpsb
pop
or
push
fbld
stos
stos
iret
dec
cmp
xchg
dec
and
jbe
inc
jno
mov
scas
mov
movsb
cmp
dec
mov
mov
je
mov
sub
or
sahf
andb
insb
cltd
or
arpl
fdivrs
mov
jmp
push
stos
and
mov
push
rol
nop
or
ror
rcl
int
lods
xchg
mov
cmp
test
movsb
dec
xchg
fstpt
or
mov
lret
pop
jmp
in
std
xchg
xchg
and
dec
popf
mov
imul
rorb
imul
pop
or
jecxz
xor
insl
cmp
cmp
jo
adc
and
or
loope
jge
fdivr
setl
ljmp
in
loope
out
xorb
frstor
orl
outsb
cmp
inc
loop
jmp
orb
scas
pop
insl
roll
imul
iret
shll
mov
stc
push
cmp
push
push
fidivrs
pop
xor
cmp
jmp
cmpsb
sbb
and
test
xchg
leave
sub
dec
ds
cmp
adc
jnp
cld
cmp
mov
cmp
mov
testb
xchg
aaa
mov
adc
enter
mov
xor
into
shll
inc
dec
xchg
mov
sub
pusha
pop
outsl
jecxz
mov
int3
lea
or
push
xchg
jecxz
aam
daa
and
push
pop
addr16
cmp
add
dec
sbb
xlat
jecxz
xchg
int
je
xchg
nop
lods
sub
cmpl
push
cmpsb
gs
lret
insl
outsb
cmp
xchg
dec
cs
and
adc
loope
cmpsl
stc
lock
xchg
daa
mov
dec
cli
cwtl
lcall
mov
adc
dec
and
push
fadds
dec
in
xchg
jge
and
mov
flds
in
mov
pop
push
add
mov
push
divb
sahf
mov
lea
lret
xchg
xchg
push
xchg
je
push
jmp
faddl
pop
push
and
sbb
out
xchg
test
xchg
dec
sub
sar
leave
push
adc
mov
aam
adc
dec
pop
ljmp
jb
fdivr
fildl
data16
ja
aam
push
mov
fcoms
pop
inc
sbb
dec
call
inc
sub
fiaddl
test
pop
mov
sub
mov
sbbb
xchg
mov
sbbb
shll
cltd
in
in
mov
int3
add
push
sub
push
and
and
inc
into
rcrl
and
jle
cmp
jmp
shrl
and
or
xor
and
sbb
stc
xchg
inc
rclb
sbb
add
cmpsl
jg
pop
in
pop
fisubs
aam
test
dec
outsl
dec
cmp
mov
mov
incl
gs
jnp
mov
push
cmp
adc
shlb
dec
ljmp
cld
rcrb
mov
outsl
mov
jge
call
int
inc
push
popf
or
inc
add
cmpsb
aad
std
inc
pop
outsb
and
pop
pop
jo
pushf
mov
out
cmp
and
es
dec
fldcw
testl
push
pop
xorl
adc
es
ljmp
dec
mov
shll
clc
shlb
stos
mov
cmp
dec
hlt
sub
dec
or
cmpb
out
pop
nop
jbe
push
lret
inc
mov
pop
xchg
sub
daa
testl
pop
pop
cltd
mov
dec
mov
lock
xor
pop
cmp
pop
std
int
ror
and
daa
inc
ficomps
pusha
adc
scas
aad
outsb
push
xor
cld
dec
rcl
pop
mov
sub
inc
lods
jmp
stos
ja
pop
adc
arpl
aas
mov
sub
loope
mov
mov
jg
fldcw
or
sub
push
popa
mov
inc
pop
popf
dec
inc
jnp
out
loope
mov
orl
and
and
and
inc
out
xchg
lods
cmp
cwtl
xchg
ret
lods
test
stos
sbb
jns
cld
add
inc
push
or
rcr
pop
dec
hlt
push
add
into
rcl
aad
outsb
push
jle
shlb
rorl
loop
mov
xchg
pop
dec
sub
call
cmp
dec
mov
insb
aaa
push
inc
loope
mov
xchg
icebp
mov
das
xor
mov
into
push
daa
pop
mov
cli
int
push
dec
inc
sub
mov
cmc
and
movb
cs
inc
xchg
push
sbbl
cmp
dec
mov
andb
mov
dec
inc
cmp
movsbl
dec
inc
jne
test
out
jge
xchg
dec
or
cli
cmpsl
iret
aas
dec
shl
daa
mov
mov
test
pop
xchg
insb
adc
mov
cmp
dec
out
clc
mov
repz
cmp
insb
lock
mov
cmp
mov
mov
cmp
scas
sahf
sub
dec
cmpb
or
cmp
es
push
ret
nop
ret
sub
bnd
fcmovnbe
je
jecxz
cmp
andl
push
iret
jo
rorl
into
rcl
std
mov
xchg
lods
mov
add
push
sbb
cwtl
andb
xchg
aam
adc
aaa
dec
rcl
shll
inc
test
fildll
adc
xchg
mov
popa
xor
mov
xchg
in
fdiv
mov
or
or
aam
sarb
cld
or
cmp
in
cmp
inc
inc
dec
aas
xchg
dec
mov
add
push
lods
in
rcl
shll
stc
jnp
adc
out
decb
cmc
push
xchg
inc
sub
adc
add
jecxz
cmpsb
test
and
xabort
inc
rclb
push
cmpsb
mov
and
push
and
test
xchg
dec
mov
mov
popa
adc
xchg
dec
nop
fisubrl
repz
pop
daa
ds
add
or
stos
cld
pop
aas
daa
lret
stos
les
inc
inc
and
sti
xor
fdivr
or
lods
fdivl
pushf
sahf
incl
and
pop
sbb
loope
push
lds
inc
mov
addl
sbb
mov
add
fnsave
inc
mov
movsl
cld
push
mov
xchg
or
call
into
add
adc
stos
xchg
push
pop
push
mov
mov
lahf
jle
int
dec
dec
inc
enter
add
or
int
int
xor
sub
mov
lahf
jb
sbb
xchg
lcall
lods
popa
imul
dec
call
mov
stos
xor
sub
andb
push
xchg
pop
dec
add
mov
add
mov
jle
jecxz
push
lods
pop
cltd
inc
inc
dec
jle
dec
stos
add
jecxz
jle
movsb
push
inc
ficoms
mov
sbb
sbb
arpl
xchg
pop
out
dec
hlt
push
xor
sbb
adc
and
mov
js
test
xor
into
rorl
fwait
sbb
mov
push
xchg
fmull
push
sub
cwtl
jge
int3
sti
mov
into
push
pop
push
pop
movsl
adc
sub
stos
mov
mov
andb
sub
push
xor
clc
popf
inc
rclb
mov
inc
cmpsl
test
clc
sbbl
jno
lock
cmpb
test
and
mov
movsl
rolb
outsl
inc
or
nop
or
dec
aas
loopne
mov
aam
xlat
sbb
iret
and
idiv
adc
mov
daa
pop
pop
sbb
mov
sbbb
jne
mov
out
loope
pop
out
out
daa
test
sub
fprem
mov
dec
jae
outsb
or
adc
lret
mov
das
inc
jecxz
sbb
popa
shll
pop
es
pop
inc
shr
mov
shll
dec
mov
scas
cltd
xorl
xchg
fstpt
pop
jle
roll
in
sub
shll
movl
or
ret
mov
jmp
lock
dec
repz
idiv
into
in
js
adc
jbe
inc
push
pop
jge
or
dec
inc
mov
sbbl
xchg
dec
jne
push
sub
xchg
push
call
aad
jg
shll
daa
and
or
lret
xchg
mov
xchg
inc
iret
push
pop
xor
jl
fiadds
dec
sbb
push
movb
push
lods
lcall
mov
cmp
dec
hlt
sub
out
ret
jo
test
adc
add
mov
jge
mov
fldenv
testl
add
push
inc
mov
adc
push
daa
cmp
out
hlt
lds
sbb
std
dec
in
test
outsl
sub
mov
jbe
sahf
mov
test
xchg
jae
adc
push
push
dec
out
mulb
lret
and
dec
dec
jp
repz
stos
sub
outsb
cmpsb
add
enter
push
or
inc
cs
sbb
inc
lds
inc
nop
dec
js
lret
mov
or
cmc
rolb
cmpsb
xchg
cmpsl
or
out
aad
inc
pop
cmp
mov
and
es
stos
mov
and
and
mov
mov
or
xlat
outsb
dec
aad
insb
inc
addr16
fnstenv
fnstenv
sti
mov
stos
mov
add
dec
jns
data16
sbb
leave
sub
cltd
or
inc
aad
adc
in
jecxz
sahf
mov
fdivrs
xchg
call
daa
into
dec
xchg
dec
cmp
les
add
inc
rcrb
addl
mov
jge
push
inc
mov
retw
mov
and
call
adc
push
pop
push
push
enter
sub
dec
mov
sub
cmp
xchg
mov
ja
pop
aad
aaa
loopne
and
mov
fstl
lret
xchg
scas
sbb
fwait
aad
aaa
fldl
pusha
adc
lock
pop
nop
inc
outsb
dec
jno
inc
add
mov
in
cltd
nop
dec
shlb
mov
pop
repnz
sub
cli
push
pop
push
mov
adc
pushl
inc
inc
dec
subb
movsb
push
inc
mov
mov
xchg
insl
insl
pop
mov
push
sub
test
dec
mov
mov
push
push
mov
insb
adc
jle
mov
and
iret
mov
clc
mov
push
add
pusha
push
movsb
cltd
rorl
inc
sbb
clc
cmp
sub
repnz
lret
pop
jmp
in
cmp
into
rcl
aad
outsb
push
adc
lods
aad
sar
rolb
and
jno
cmp
inc
es
xor
jns
test
sub
fbld
push
mov
imul
xlat
push
orb
daa
mov
mov
mov
dec
jg
stos
pop
lods
scas
jge
and
cmc
clc
les
fisubrl
sub
scas
pushf
pop
xchg
pop
mov
rcrb
cld
cmovs
adc
mov
dec
aad
icebp
cmp
dec
mov
jb
and
mov
cmpsb
mov
and
or
mov
out
lret
dec
and
mov
jl
mov
dec
sar
mov
aam
out
xor
mov
cmp
dec
testb
insb
xchg
test
shll
aas
into
stos
jno
aad
inc
sti
mov
inc
inc
xor
xor
mov
sub
mov
nop
test
push
push
rcrb
aam
shll
mov
mov
out
push
xchg
arpl
test
scas
sub
aad
sbbb
insb
push
jmp
lret
xchg
cmpsl
xchg
aad
aaa
fiadds
xor
pop
add
inc
call
sub
sub
repnz
addr16
or
andl
hlt
mov
in
fwait
xorb
push
mov
dec
sbb
pop
dec
adc
mov
shrl
jmp
fdivrs
int3
movsl
pop
xchg
mov
push
mov
enter
mov
into
and
stos
dec
mov
shll
inc
adc
sub
xlat
push
outsl
push
xchg
popa
incb
pusha
xchg
mov
jno
fnstenv
pop
cmp
daa
js
mov
sti
cmp
mov
leave
mov
loope
lret
repnz
sub
sbb
jge
les
dec
inc
dec
cmc
xchg
inc
mov
sbb
dec
mov
xor
push
outsb
or
jle
test
dec
mov
adcb
repz
popl
imul
testl
mov
push
iret
mov
into
rorb
push
inc
daa
or
pop
pop
sbb
fmull
pushf
stos
inc
adc
and
mov
enter
mov
inc
loopne
aad
shll
iret
xor
scas
insb
push
mov
add
xor
shl
sub
lret
push
pop
imul
rcrl
mov
cmp
fiaddl
mov
ret
inc
xor
into
pop
fnstcw
and
in
decb
adc
hlt
push
roll
inc
cmp
and
mov
jge
out
xchg
lret
adc
mov
mov
fadds
jnp
stc
loopne
and
rcl
lret
pop
jmp
in
xchg
xchg
fs
dec
or
int
cmovne
scas
push
vmulpd
sub
loope
cmpsl
jnp
inc
mov
push
dec
aas
pushl
and
ja
mov
cld
lea
in
push
outsl
adc
fcmovnbe
out
nop
jp
movsb
fdecstp
in
cmp
cmp
cmc
fwait
mov
aas
or
out
imul
hlt
jnp
lahf
lahf
mov
into
rorb
data16
cmp
mov
jg
stos
pop
xchg
out
clc
dec
inc
out
ja
mov
ds
mov
movsl
jecxz
mov
loope
rorl
inc
inc
imul
out
cld
mov
into
dec
loopne
mov
jmp
mulb
mov
das
mov
mov
xchg
loopne
mov
jnp
movsl
sub
mov
xlat
scas
lcall
xlat
mov
rolb
out
int
fcoml
stos
or
push
arpl
rolb
fdivs
mov
pop
popf
ss
ss
test
xchg
sub
stos
inc
sar
pushf
push
orb
dec
cmpsb
pop
cmpb
dec
mov
inc
fldl
sub
leave
and
dec
sar
push
shll
pop
and
in
movsl
mov
test
out
adc
sub
repnz
jmp
mov
mov
xor
mull
mov
pop
insb
pop
rcr
idivl
and
sub
movb
jecxz
test
lock
dec
es
sbb
stos
lods
iret
dec
loop
inc
push
push
xchg
mov
lcall
ja
aaa
into
in
js
cmp
popf
into
jne
lahf
ficoml
or
push
mov
das
inc
in
mov
and
mov
jecxz
mov
mov
je
xor
and
pop
xor
or
fcmovnu
pop
inc
dec
dec
cli
mov
fldt
xchg
insl
inc
push
xchg
push
mov
jnp
sub
into
rorb
push
and
cmpsb
out
dec
sbb
mov
es
lret
push
lret
xchg
dec
sub
lahf
orb
mov
into
pop
adc
push
mov
jbe
mov
repz
push
mov
pop
mov
jno
js
xchg
movsb
aaa
mov
icebp
cmp
ja
or
cmc
mov
mov
jg
mov
in
notb
dec
dec
int3
scas
clc
pop
mov
enter
daa
push
pop
mov
xor
pusha
adc
inc
repnz
add
and
xchg
inc
sub
adc
das
aam
pusha
fnstcw
lea
test
mov
popf
inc
xor
pop
clc
mov
into
shll
jecxz
sbbl
fwait
mov
cmp
loop
lods
and
xchg
pop
mov
daa
in
or
cmp
lea
shl
xlat
or
imul
inc
mov
mov
arpl
leave
or
inc
mov
add
mov
and
mov
iret
rcl
pusha
mov
out
push
popa
clc
mov
dec
out
test
aaa
adc
push
sbb
addr16
pop
pop
push
dec
cld
inc
cmp
mov
hlt
xor
iret
jmp
ds
fcomip
adc
xchg
shrl
xchg
fsubl
fldcw
dec
cmp
sub
push
std
inc
lret
xor
movsl
repz
mov
mov
jb
mov
mov
insl
xchg
xor
jno
dec
mov
rcll
xor
imul
rcl
cmovne
pop
push
leave
cmp
stc
mov
xor
pop
jne
scas
sti
mov
into
shlb
xlat
mov
mov
aas
add
adc
arpl
xchg
test
mov
fistpl
mov
jg
xchg
lock
insb
imul
mov
mov
lret
push
neg
pop
xchg
out
test
and
pusha
adc
clc
dec
int
sbb
fsts
mov
mov
sarb
inc
cltd
add
lods
mov
mov
cmp
mov
mov
mov
adc
pop
xor
add
bound
andl
in
add
adc
sub
push
out
lret
dec
pop
cli
loope
inc
fildll
push
inc
adc
daa
movl
and
or
mov
adc
les
outsb
inc
lcall
sub
inc
scas
dec
aas
adc
daa
push
jg
ret
mov
nop
fwait
stos
xor
pushf
jmp
cmc
inc
dec
mov
iret
pandn
rolb
mov
dec
dec
mov
xchg
mov
in
shll
xchg
and
and
loop
xchg
sar
mov
out
arpl
push
popf
fcoml
call
dec
out
dec
int
imul
jb
ret
mov
xor
mov
jp
push
jae
pushf
jmp
dec
inc
ja
xchg
jns
or
jg
xchg
jecxz
fstl
andl
sub
imul
pusha
adc
ljmp
in
aas
xchg
jne
mov
mov
addr16
mov
xor
sbb
arpl
andl
mov
cmp
sbb
and
aaa
shll
rorb
sti
mov
into
xchg
jp
mov
movsb
arpl
decb
and
cmpsl
daa
xchg
loopne
imul
lret
inc
push
in
dec
lcall
repnz
mov
outsl
jnp
test
cmc
fsubs
mov
cmp
aas
jge
lahf
mov
in
dec
push
xchg
icebp
cmp
and
stos
into
and
and
dec
rclb
xor
shrl
pusha
mov
xchg
sar
movb
mov
cs
xchg
in
icebp
xlat
push
in
and
sbb
fyl2xp1
sbb
or
cmc
lea
push
stos
dec
mov
movsb
sub
add
lret
es
and
gs
mov
lock
sub
sahf
cs
mov
adc
data16
xor
mov
imul
mov
mov
scas
dec
repz
mov
imul
dec
mov
cmp
mov
or
inc
mov
and
test
fs
negl
pop
bound
jb
cmc
xchg
test
jmp
sub
mov
pop
push
int
mov
rcl
pusha
mov
sub
mov
push
xchg
arpl
mov
loope
popl
pop
and
andl
and
outsb
pop
xor
ret
jg
mov
int3
std
inc
sbbl
push
aas
repz
jae
rolb
inc
in
cwtl
mov
xchg
fdivl
jecxz
cmp
mov
push
sub
rcr
inc
ficompl
negb
or
pop
xor
push
mov
fldt
push
inc
adc
daa
movl
stos
mov
mov
inc
outsb
pop
xchg
dec
push
inc
repz
jmp
mov
call
fwait
dec
inc
sub
mov
lods
xchg
aad
push
push
or
mov
fistl
adc
sub
clc
in
mov
movb
jns
nop
les
cwtl
xchg
imul
mov
pop
ds
out
dec
data16
shll
cmpsb
add
or
loop
loopne
rcl
mov
cmp
inc
mov
dec
rorb
movsl
push
filds
lahf
dec
lret
push
leave
rcrl
fldt
popa
sti
mov
into
insl
test
adc
mov
xor
jge
push
fwait
data16
sahf
dec
or
loopne
pop
lahf
jns
mov
in
div
and
push
addb
out
mov
clc
rorb
mov
push
push
imul
sub
mul
mov
pop
aad
test
adc
out
pusha
mov
inc
aam
inc
insl
dec
push
jp
mov
mov
cmc
mov
js,pn
loopne
jmp
cmp
push
movsb
movsl
sbb
push
mov
cmp
popf
ljmp
inc
int
jne
push
mov
sbb
aas
add
jnp
lds
ljmp
das
outsb
xor
mov
dec
mov
lods
pusha
pop
cs
dec
xchg
inc
and
and
mov
cli
cmp
lock
aam
pop
xchg
mov
dec
mov
mov
mov
inc
inc
mov
inc
addr16
mov
jo
test
push
push
aad
dec
jge
dec
ljmp
adc
stos
add
push
shlb
sub
into
and
pop
fisubrs
shll
inc
ss
shll
and
repz
dec
nop
fdivrl
cltd
xchg
or
cmp
xorl
sbb
mov
imull
sbb
xchg
and
js
ret
nop
cltd
mov
lock
aad
test
ja
add
std
fimuls
testl
xor
inc
lcall
lahf
or
mov
inc
inc
xchg
fwait
or
cld
adc
and
or
sbbl
insl
arpl
lods
push
call
adc
add
psubw
dec
sbb
daa
ljmp
fisubrs
fyl2xp1
int
jnp
push
lcall
aaa
loope
push
add
rclb
pop
push
mov
mov
jmp
adc
in
jmp
adc
sub
inc
push
test
pop
test
adc
mov
mov
mov
pcmpeqw
outsl
xchg
lcall
mov
mov
into
repz
sub
pushf
in
data16
mov
push
out
xchg
cmp
sti
test
sub
lret
and
daa
pop
ficoms
pusha
adc
add
jmp
xchg
sbb
clc
mov
or
addr16
inc
pop
call
or
std
jl
pusha
dec
out
dec
pusha
cld
cmp
ljmp
aam
pop
outsb
jp
into
rcll
xchg
xchg
into
push
pushf
fs
jnp
push
cmc
shll
fidivrl
jp
movsl
inc
xchg
sahf
cmp
push
sub
enter
mov
into
mov
stos
mov
adc
pop
and
gs
ret
nop
cmpsb
jecxz
std
in
mov
test
loope
into
rcl
dec
cltd
test
and
out
jmp
jmp
pop
inc
sbbb
fmuls
jbe
lods
xchg
cmp
mov
pop
sub
dec
outsb
xchg
lret
sub
cmp
aas
xor
or
shll
add
into
rcl
aad
outsb
push
sbb
dec
xor
mov
aad
mov
mov
xor
ret
inc
sbb
leave
lock
pop
xchg
out
hlt
scas
xchg
cwtl
call
dec
inc
ficompl
xor
adcl
iret
rcl
mov
jns
enter
lahf
lret
pop
mov
rcrb
mov
aaa
jl
scas
mov
sub
dec
dec
jne
mov
xchg
sahf
cltd
loope
jmp
mov
ret
aad
and
cwtl
daa
into
pusha
adc
push
xor
mulb
mov
xchg
adc
mov
into
shll
pop
fdivrs
fwait
mov
sub
enter
aad
sbb
lock
outsb
push
and
fstpl
pusha
adc
dec
scas
into
imul
mov
dec
test
pushf
jg
sarl
add
lods
clc
cmp
fwait
mov
sub
pop
push
mov
pop
aas
cmpsb
cmp
fcom
pusha
adc
adc
pop
fdiv
mov
cmp
add
popf
inc
pop
aad
jle
mov
test
jmp
sub
xor
rorb
mov
mov
dec
mov
cmp
dec
repnz
adc
cs
mov
rolb
sub
jge
mov
push
jl
out
cmc
rolb
aaa
jl
addr16
cld
fwait
mov
dec
mov
stos
outsb
loopne
cmp
and
cmc
sub
scas
inc
rclb
cmp
mov
jg
into
sub
jecxz
xchg
push
xor
rcl
hlt
sub
mov
pop
xor
shrb
inc
jb
jp
test
hlt
cli
movb
dec
cmp
sub
sbb
loopne
test
scas
inc
adc
imul
adc
inc
dec
mov
mov
lret
loope
lahf
jb
lea
sbb
xor
mov
adc
into
rcl
sbb
shl
sub
xor
leave
cmp
push
and
sub
push
adc
mov
shrl
mov
sub
mov
in
add
add
outsl
xor
aam
fists
jmp
add
shrb
movsb
dec
inc
int3
cmp
lods
into
dec
roll
dec
hlt
in
dec
inc
mov
mov
mov
jg
and
and
and
jb
pop
popf
dec
sbb
add
popf
add
test
jecxz
mov
and
push
xchg
decb
jne
dec
pop
cmc
fdivrl
mov
insb
data16
loop
lret
rorl
inc
sbb
dec
cmpsl
push
out
cld
sub
repnz
jmp
mov
jno
daa
push
pop
cmp
shll
xchg
adc
sub
cltd
push
and
push
and
in
mov
mov
xor
mov
jns
pop
pop
adc
jmp
ficoml
in
adc
inc
jge
inc
int3
and
dec
loope
fldenv
testl
xlat
sahf
andb
inc
loope
nop
and
outsb
push
pop
push
sbb
or
pop
mov
mov
mov
jmp
frstor
sahf
cmpb
dec
mov
popf
pop
mov
cld
in
fldenv
testl
cmpsl
sahf
pop
mov
in
mov
dec
gs
xchg
push
int3
mov
into
rcr
sub
outsb
cmp
mov
ret
stos
mov
mov
mov
dec
xchg
inc
and
and
fwait
ret
nop
xchg
nop
loope
loop
push
sbb
out
insl
fnstsw
cli
movsl
dec
cmpsb
mov
test
or
hlt
pusha
int3
mov
and
outsl
outsb
inc
mov
repnz
testb
in
outsb
rclb
inc
je
sub
or
lock
inc
mov
repnz
or
mov
iret
mov
daa
into
dec
or
mov
fdiv
pop
adc
jns
orb
and
mov
sbb
rorl
stos
inc
xchg
xlat
pusha
pop
dec
mov
dec
jbe
shlb
inc
mov
int3
inc
lcall
test
sub
fldenv
or
add
pop
pop
mov
mov
pushf
xor
xor
push
or
sub
cmp
xchg
stos
add
mov
xchg
mull
mov
mov
int3
xor
adc
insb
das
into
rcll
sbb
lds
and
call
jge
adcb
xchg
out
pusha
adc
and
add
daa
xor
clc
cs
in
andl
xlat
pop
inc
addr16
das
xor
pop
jbe
jmp
dec
mov
cmpsb
mov
mov
pcmpgtb
dec
dec
rcrl
and
fsubl
mov
pop
xor
mulb
mov
jne
aad
fcomip
mov
aad
sub
dec
pop
stc
xchg
inc
rclb
aam
mov
test
adc
add
imull
into
sarl
mov
and
testl
movsb
inc
add
fnsave
mov
jnp
pushf
inc
sbb
imul
add
adc
daa
mov
xor
jnp
jecxz
mov
enter
mov
iret
rcl
arpl
jl
mov
mov
aad
std
inc
xlat
dec
lock
and
cwtl
mov
mov
dec
inc
push
nop
push
jo
in
dec
shrb
sub
inc
xor
adc
movsb
cmp
cmpl
adcl
mov
shr
mov
loop
mov
aaa
push
pop
repz
jae
lock
xchg
cld
sub
xchg
inc
shlb
or
fists
dec
es
lgs
xchg
test
mov
xorb
mov
daa
push
sbb
ret
dec
and
adc
and
test
dec
into
mov
aaa
into
pop
dec
push
movsl
movsl
xchg
rorl
inc
add
insb
out
lret
repnz
incl
sub
mov
rclb
mull
icebp
pop
popa
dec
cmpsl
xchg
pop
sub
adc
test
stc
data16
loop
cmp
rorl
sahf
ss
sbb
hlt
shlb
dec
fisubrs
cmc
push
xchg
pop
cmc
add
sar
sti
adc
out
aam
cmpb
lods
out
fsub
call
dec
mov
jbe
sti
jne
jle
push
loopne
pop
and
movsl
aad
outsb
push
movsl
cmp
mov
add
aad
std
inc
lods
push
pusha
lret
rolb
inc
pop
mov
mov
add
adc
and
lea
xor
add
setp
loop
iret
xlat
inc
test
and
dec
push
xor
stos
mov
and
dec
pop
sub
xor
aam
mov
cmovne
int
lcall
repnz
pop
jmp
in
lret
and
lret
outsb
push
mov
mov
dec
data16
pop
cmp
dec
cmp
sbb
push
fdiv
repnz
cmc
aad
mov
jns
inc
sbb
iret
or
or
sub
inc
std
and
pop
mov
cwtl
test
xchg
mov
pop
add
pusha
adc
lods
ret
fnsave
mov
jle
mov
mov
jmp
mov
nop
movsl
xchg
rorl
inc
add
pop
inc
sub
repnz
test
lahf
outsb
pop
cld
xchg
into
jae
dec
es
leave
xor
push
daa
push
outsb
cs
pop
orb
cwtl
es
pop
test
cmp
mov
shll
push
adc
sub
cmp
scas
push
and
xor
inc
outsb
inc
sub
and
hlt
insl
mov
shll
ja
push
mov
push
insb
outsb
lret
adc
jecxz
xchg
into
aaa
imul
jns
stc
mov
pop
dec
imul
dec
int
int3
dec
into
imul
into
rol
and
lret
adc
sub
add
mov
mov
daa
mov
loop
frstor
push
cmpsl
int
mov
cs
jmp
mov
movl
outsb
cmp
xorb
mov
fsts
dec
adc
pop
dec
insb
int3
mov
push
pop
ljmp
pusha
adc
sub
mov
sub
mov
mov
xchg
ljmp
daa
into
and
or
into
rcl
aad
outsb
dec
loopne
dec
pop
xor
sub
jle
cmp
add
pop
inc
sbb
dec
fprem
cmp
rorb
cld
jge
mov
jmp
sub
inc
lret
sub
inc
rclb
sbb
adc
popa
aas
cmpsl
test
lods
sub
idivb
lds
dec
cli
fisubrl
lods
add
andl
mov
cld
cmove
insb
mov
iret
xchg
mov
mov
pop
sub
pop
mov
arpl
aas
sbb
in
fwait
ret
nop
mov
loope
subb
jno
sub
out
clc
xorl
fisubrs
mov
out
clc
or
jge
jns
repz
mov
mov
scas
inc
lret
fyl2xp1
pop
push
xlat
inc
call
pop
rorl
sub
cld
and
pop
adcl
pop
imul
sbb
mov
mov
dec
lret
push
out
lret
mov
imul
add
push
xor
mulb
mov
add
iret
pop
clc
mov
ror
sub
adc
aad
movsb
mov
loop
lret
pop
dec
push
rclb
jbe
sti
loop
movsl
nop
mov
jmp
xchg
jge
mov
dec
fs
stos
gs
adc
fisubrl
sbb
aas
icebp
mov
mov
fscale
leave
inc
insl
aam
or
negl
inc
mov
cli
xorl
sub
clc
fdivrs
ret
push
add
inc
leave
inc
pop
jge
shl
data16
fcompl
add
push
inc
fs
jecxz
dec
lea
pop
push
mov
sub
pop
pop
fs
cmp
mov
andl
cmp
daa
enter
mov
das
stos
xchg
mov
fmuls
mov
faddl
iret
mov
shrl
dec
inc
fisubrs
xchg
or
inc
in
subb
pop
mov
arpl
imul
dec
and
lcall
out
xchg
inc
in
mov
add
repz
loopne
out
xchg
icebp
add
sub
js
jg
movsb
dec
xchg
test
lret
xchg
push
pop
cld
aam
sub
insl
fisubrl
mov
xchg
into
sarb
inc
push
fwait
popa
incb
roll
int
dec
add
rcrl
scas
adc
std
mov
pop
mov
mov
lods
or
pop
push
cwtl
lds
out
mov
les
dec
mov
inc
repnz
lock
out
mov
jo
filds
fnstenv
xchg
dec
pop
rorl
jle
add
xor
insl
aad
les
mulb
xchg
sti
xchg
into
inc
dec
dec
fstl
lret
inc
jecxz
test
int3
popf
push
decl
orb
sub
stc
test
rclb
cmp
pop
cmpsl
andb
xor
loope
lahf
mov
adc
loop
incb
xchg
arpl
test
sub
jge
lea
mov
mov
pushf
sub
mov
and
iret
addr16
scas
rcl
shll
jp
shrl
mov
sub
jno
jge
push
rcll
sbb
adc
into
rcl
call
lock
mov
dec
pop
daa
mov
pop
dec
xchg
fstpt
sbb
roll
jl
mov
and
in
mov
idivl
push
push
shl
inc
daa
xchg
scas
rcl
pusha
cltd
cmp
sbb
mov
fstl
incb
sub
fiadds
and
mov
call
lret
xchg
cmpsb
adc
inc
dec
sub
aad
aaa
fldl
pusha
fs
into
rcl
aad
outsb
pop
iret
sbb
decl
aad
std
inc
fsts
cmp
repz
mov
cmp
shlb
cld
or
xchg
cld
inc
cmp
inc
pop
and
pop
dec
mov
mov
loope
push
sub
mov
aam
stos
jecxz
rcl
mov
inc
call
pop
aad
push
dec
mov
test
sub
push
lock
inc
fsubrl
loope
mov
addr16
xlat
pusha
adc
mov
lds
push
and
loope
mov
cmp
rorb
arpl
fbstp
cmovne
icebp
dec
mov
fimuls
sub
mov
dec
xchg
or
ja
mov
jmp
shr
aam
enter
mov
mov
int
adc
push
inc
adc
or
repnz
fwait
xchg
pop
pop
xchg
jbe
addr16
out
or
int
cmc
mov
rcl
cld
push
ror
adc
xchg
dec
lahf
jno
mov
pusha
mov
push
sub
mov
jnp
mov
loop
adc
aam
in
fwait
ret
nop
int3
mul
rep
movsl
add
aam
test
andb
pusha
adc
outsb
jno
inc
pop
mov
cmp
dec
repnz
xor
les
idivb
jmp
inc
xchg
mov
fwait
aam
sarb
dec
out
cmc
push
push
jne
jge
jmp
std
or
pop
fwait
testl
push
pop
xchg
dec
fwait
pop
mov
shll
in
xor
jecxz
dec
pop
inc
push
mov
xlat
dec
push
lock
mov
xchg
js
jp
inc
xchg
movsl
cmp
push
mov
enter
mov
add
and
andb
jmp
and
xchg
sbb
roll
push
jge
adc
loope
xlat
jle
test
mov
and
ret
adc
xchg
push
lods
pop
mov
pop
inc
cmp
mov
ficompl
inc
pop
mov
icebp
sub
aaa
jns
es
dec
icebp
out
pop
and
in
mov
mov
adc
cmc
push
mov
imul
push
inc
inc
dec
in
inc
xlat
mov
cmp
mov
mov
and
push
idivl
lret
xchg
fwait
jle
jb
pop
jg
aad
aaa
loop
push
dec
fsubl
cwtl
mov
sbb
jmp
xchg
dec
and
pop
dec
insb
push
sub
aad
outsb
push
adc
sub
std
mov
cmp
dec
icebp
lcall
mov
jmp
jae
pop
and
push
lea
adc
pop
inc
dec
loope
inc
ljmp
inc
pop
aad
and
sub
loope
xor
mov
jno
out
dec
sbb
pusha
xchg
inc
sub
outsb
inc
xor
push
push
mov
mov
hlt
enter
inc
inc
popf
les
jo
push
leave
je
jecxz
in
xor
imul
pop
mov
cmp
dec
mov
adc
out
std
xchg
fldenv
pop
pop
dec
mov
insl
adc
add
in
pop
pop
adc
mov
rolb
xor
add
test
sbb
popa
pop
cmpsl
andb
xchg
jecxz
jbe
daa
pop
aad
push
and
ja
stos
mov
jmp
int
out
enter
mov
push
aad
loope
adc
out
sbb
addr16
cmpsl
stos
sarl
pop
test
ljmp
aad
shll
aad
mov
cmovne
and
xchg
insl
fisttpll
sub
repnz
mov
nop
mov
sub
arpl
jbe
mov
nop
mov
cmp
dec
icebp
push
stc
mov
jno
aam
stc
sti
fists
inc
mov
adc
inc
pop
pop
dec
dec
in
inc
xchg
mov
pop
stos
cs
arpl
push
or
and
into
jb
sub
scas
rcl
shll
outsb
cmp
fisttps
outsl
mov
lcall
mov
pop
mov
inc
jle
and
fwait
ret
nop
mov
in
xlat
insl
aad
test
pop
mov
rcll
xchg
lret
push
mov
in
ret
aaa
loope
or
cld
jle
scas
shll
jmp
orl
xchg
xchg
fmull
sub
into
mov
daa
pop
or
inc
push
jecxz
rolb
aad
fwait
dec
mov
call
jmp
xor
pop
mov
ret
nop
mov
loope
inc
adc
test
lods
xchg
pop
xchg
pop
adc
push
pop
neg
cli
sbb
test
enter
dec
fcoml
int
cmp
mov
mov
or
xchg
sub
gs
jl
loop
dec
sbb
mov
adcl
mov
push
dec
sub
insl
iret
and
outsb
dec
mov
dec
mov
add
out
jae
cwtl
or
cmc
lods
inc
mov
cld
cmp
mov
push
dec
dec
rcll
pop
push
dec
scas
and
sbb
mov
or
push
adc
mov
dec
xchg
mov
fs
mov
jecxz
jnp
sbb
loopne
xchg
jnp
in
push
sarl
mov
sbb
sbb
popa
incb
mov
imul
bound
mov
add
in
adc
ja
shlb
fadds
inc
daa
lods
sub
test
pop
mov
ret
nop
mov
loope
nop
pushf
scas
jge
xlat
test
jle
sbb
pop
movsl
call
js
inc
or
shr
mov
and
enter
mov
push
int
xchg
fadds
shll
hlt
and
mov
daa
jnp
pop
cmpsb
push
out
int
fld
adc
scas
mov
rcrl
lods
stc
cmp
mov
js
incl
pop
xor
rol
adc
push
jmp
out
dec
cmp
dec
mov
sbb
adc
cmp
scas
mov
cmp
and
orb
ds
rcl
pop
fs
pop
pop
mov
sbb
mov
scas
je
mov
shl
rorb
mov
pop
push
xchg
jecxz
sub
rcrb
or
push
and
pusha
adc
js
add
jg
cwtl
pop
push
movsl
ror
cmp
mov
and
icebp
cmp
xchg
mov
jno
loop
insb
aaa
faddl
aad
outsb
dec
mov
jle
xchg
or
lds
mov
ret
adc
mov
sub
inc
bound
inc
in
mov
add
or
inc
mov
cmp
and
xchg
push
sti
das
cmc
push
dec
sub
mov
and
dec
jmp
and
fcmovne
cmp
mov
xlat
inc
jecxz
dec
add
mov
adc
dec
mov
push
xor
add
into
push
rcrb
idivl
test
loop
lahf
dec
and
and
in
andb
and
mov
cmp
mov
pop
out
clc
adc
xchg
add
movl
cmpsl
ret
xchg
inc
mov
mov
mov
test
outsb
inc
cli
dec
aas
adc
push
int
xor
and
or
into
or
jmp
adc
push
pop
xor
pop
jae
dec
scas
aam
jl
stos
cmc
mov
xchg
sar
sub
push
pop
pusha
push
sar
adc
imul
repnz
test
mov
fisttpll
in
jo
pop
mov
out
mov
push
lret
rolb
dec
pop
sub
scas
rcl
shll
outsb
cmp
mov
cld
stos
push
and
lahf
roll
push
jne
and
into
aad
cmp
pusha
pop
scas
inc
mov
xor
mov
cltd
xlat
dec
sbb
inc
sahf
push
sarl
sbb
mulb
mov
lock
fcomip
mov
clc
scas
dec
cwtl
movsl
cmp
or
cmp
fldt
icebp
sub
cmp
cmc
xor
das
cmp
shlb
xchg
aad
fs
shrl
xchg
addl
pusha
adc
and
jl
sti
dec
scas
rcl
shll
outsb
cmp
ficoml
add
aad
adc
rcrl
push
std
aas
das
into
pop
sbb
and
cltd
lea
sbb
mov
sar
fwait
decb
leave
jmp
fimuls
jp
int3
xor
les
into
rcll
xlat
sub
sub
aam
movsl
pop
pop
pop
daa
test
sahf
dec
js
scas
aam
adc
mov
adc
add
lock
aaa
sti
insl
push
cli
in
mov
sbb
xor
cmc
mov
cltd
push
mov
xor
sub
xchg
lods
jmp
insb
sbb
mov
into
push
mov
mov
cmp
adc
xchg
sub
mov
mov
lea
add
fdivrp
pop
shl
sub
in
mov
dec
mov
inc
out
shl
dec
dec
call
cmova
xor
mov
push
popf
inc
mov
pop
cmp
mov
mov
mov
mov
push
jo
idiv
or
jbe
aaa
add
insl
mov
imul
rorl
push
mov
pop
mov
aaa
dec
std
aam
pusha
arpl
mov
int3
rorl
inc
and
lods
xor
sbb
sub
rcll
shr
pusha
jae
xchg
and
andl
fidivrs
pop
xchg
lret
mov
es
repz
jmp
jb
repz
fs
lods
push
or
and
or
xchg
in
or
mov
push
movsl
mov
in
movsl
add
test
iret
rcl
pusha
mov
sub
push
ret
add
mov
mov
rclb
outsl
inc
mov
mov
inc
cmp
clc
sub
sbb
out
inc
inc
aam
mov
fistpl
pop
aam
cmp
and
lret
les
mov
shll
ss
shr
fs
xchg
xorl
shrl
outsl
push
dec
rcrl
test
inc
mov
adc
mov
into
popf
sub
pop
adc
sub
ljmp
fstl
push
push
push
mov
and
cmpsb
pushf
stc
sbb
xor
pminub
dec
inc
arpl
mov
aas
add
call
shll
pop
mov
pusha
stc
daa
loopne
pusha
dec
leave
loop
and
mov
jl
iret
sub
dec
jmp
clc
das
rcrb
xor
inc
daa
xor
push
out
xor
xchg
mov
int3
pop
adc
push
push
in
pusha
adc
pop
nop
inc
sub
cld
push
ja
add
repnz
push
insl
xorb
mov
push
or
cld
or
pop
insl
mov
out
cmc
dec
jne
or
push
mov
jle
lock
into
orb
loop
mov
mov
lret
xchg
scas
lock
jge
or
fldl
xchg
add
test
add
movsl
dec
add
dec
xchg
lea
lods
fwait
xchg
repz
out
push
pop
shl
cltd
cltd
ret
ret
cld
or
mov
arpl
test
in
repz
dec
inc
pop
push
xor
jo
lods
mov
and
movsb
lret
pop
lods
add
jp
cmp
movsl
xor
push
mov
enter
mov
inc
les
sar
dec
mov
fldt
add
aam
push
jno
and
outsb
aaa
mov
dec
or
dec
lea
pop
mov
add
lret
jo
scas
fists
pop
scas
dec
inc
jmp
in
lods
in
mov
sbbb
xor
rorl
lea
repnz
repz
test
mov
fldcw
notl
cs
inc
mov
shl
inc
aaa
jmp
fwait
cltd
outsl
push
rcrl
aad
nop
inc
inc
mov
pusha
or
sub
pop
cwtl
pop
nop
inc
inc
dec
je
mov
and
pusha
or
cld
dec
scas
push
dec
ljmp
adc
cltd
jle,pn
add
addb
test
jno
daa
mov
jl
mov
xor
mulb
mov
loop
sar
idivl
mov
aam
adc
test
scas
cmpsb
pop
dec
cld
xchg
into
mov
sub
adc
ds
stos
dec
fwait
stos
mov
mov
std
movsl
roll
lret
ja
xchg
and
repz
dec
rcl
idivl
mov
dec
mov
pusha
adc
ss
arpl
mov
mov
inc
lods
jae
push
cltd
push
into
mov
call
mov
cmp
inc
mov
arpl
dec
xchg
int3
ds
test
jmp
sub
movsl
call
jne
pop
les
mov
pop
dec
xchg
lods
popf
dec
loop
add
inc
ljmp
cmp
add
pop
lcall
inc
mov
push
xor
mov
cmp
test
pop
push
mov
out
push
jo
daa
insl
imul
mov
aaa
arpl
jne
mov
sub
mov
test
mov
push
pop
adc
sub
fstl
pusha
adc
jge
mov
rcl
dec
sti
xchg
adc
daa
mov
stos
mov
mov
daa
test
push
shlb
andl
push
in
shll
fnstcw
sbb
movsl
xchg
lods
into
push
mov
enter
mov
iret
rcl
outsl
xchg
stos
daa
into
adc
loope
jg
or
mov
cmpsb
pushf
cmp
jb
outsb
cs
add
push
jo
ljmp
data16
xchg
jecxz
mov
and
mov
jl
mov
cmp
mov
icebp
roll
or
enter
lock
pop
fldl
push
cmp
push
mov
pusha
adc
fstpl
mov
fisubrl
push
cmp
test
adc
add
mov
cltd
push
inc
mov
push
lds
pusha
popf
mov
sbb
fsub
idivl
cltd
rorl
inc
cmc
repnz
shll
repz
mov
mov
and
mov
and
mov
dec
rcl
pop
popf
clc
das
sbb
ficompl
nop
movsl
out
push
aad
popa
xor
aam
test
mov
adc
shll
clc
xchg
mov
outsl
ror
sbbb
pop
daa
cwtl
fistpll
jl
cmp
mov
push
mov
xchg
fwait
lods
jbe
mov
pushf
jns
scas
mov
push
insl
mov
and
sbb
push
call
ficoms
aad
aaa
fstpt
sbb
and
cmp
mov
add
repz
sub
push
cmp
fisubl
mov
stos
mov
mov
insb
or
andl
mov
rcr
mov
movsb
xchg
rorl
inc
lock
xchg
sub
ljmp
call
dec
rcl
outsl
xchg
scas
sbb
into
daa
push
inc
adc
daa
movl
push
je
pop
popf
push
sti
push
sbb
popa
xor
rorb
mov
roll
dec
inc
push
insl
fcoms
xchg
cmp
std
adc
inc
cmp
jmp
jae
and
mov
rcl
pusha
sbb
cmp
jae
outsb
sub
sbb
popa
les
or
cli
xchg
sub
adc
inc
pop
pop
mov
iret
xor
mov
push
mov
and
dec
sbb
push
xchg
jmp
loop
sbb
mov
ss
fwait
ret
nop
cmpsb
popf
loope
mov
out
insl
mov
shrl
loope
roll
pusha
adc
push
xor
fwait
test
xlat
js
cltd
fimull
and
xchg
loope
xchg
adc
sbb
push
mov
dec
lret
sar
imul
into
shll
lret
aam
adc
inc
cmc
repz
mov
mov
fs
sub
mov
inc
in
movsl
dec
push
mov
lods
jg
xchg
xchg
mov
dec
push
sbb
mov
push
xor
sahf
pop
mov
insl
push
push
jl
add
daa
xchg
lcall
pop
andl
movswl
mov
push
xchg
aad
sbb
cli
shlb
cli
mov
bound
add
iret
push
jae
inc
jns
movsl
mov
or
mov
cmp
dec
loopne
sbb
xchg
mov
mov
xor
pop
cmpsb
dec
inc
movsb
add
fdiv
imul
dec
push
andl
incb
pop
pop
imul
ljmp
xchg
push
lcall
dec
insb
mov
lods
sub
test
inc
shlb
out
test
fcoms
dec
and
xchg
sub
mov
clc
xchg
loope
add
inc
insl
jo
mov
loop
inc
std
dec
xor
shll
rolb
mov
mov
jle
jg
in
mov
dec
fwait
andb
popf
jns
scas
and
xchg
push
cwtl
pop
data16
shl
cmpl
ja
push
call
push
and
outsb
sub
mov
data16
mov
xor
mull
mov
push
sub
iret
out
mov
lret
and
into
rcrl
pop
pushf
xor
sub
sbb
divb
xchg
xchg
in
int
xlat
jae
nop
orb
push
sbb
pop
aad
bound
push
jp
push
test
sub
fisubs
inc
push
sub
clc
jns
movsb
or
jl
dec
mov
mov
fwait
cmpl
in
pop
fs
mov
mov
test
inc
out
dec
push
das
inc
and
or
inc
mov
dec
in
jo
cmpl
push
int3
push
test
push
scas
aam
shll
mov
mov
xor
arpl
rcrl
mov
xchg
fsts
imul
mov
int3
ljmp
xchg
dec
jb
lahf
pop
mov
daa
push
in
repz
jmp
xchg
inc
sub
in
les
jo
push
xlat
sti
cmc
nop
jmp
ret
aad
test
and
xor
mov
shll
sub
lcall
adc
mov
out
iret
mov
fstpt
adc
mov
jmp
mov
shll
clc
es
ficomps
mov
jmp
outsb
shrb
loopne
dec
pop
push
cmpsl
outsl
xlat
scas
and
in
inc
inc
imul
sti
push
les
test
dec
dec
sub
nop
pop
das
arpl
test
testl
into
add
inc
call
jmp
mov
push
sbb
xlat
dec
push
lods
add
push
imul
xor
inc
notl
lret
loop
in
mov
add
xor
in
daa
cmp
xchg
xor
mulb
mov
dec
out
rcl
idivl
lahf
sub
push
les
stc
mov
rclb
push
rcll
jb
inc
cmpsl
test
rcr
test
sarl
daa
into
lods
fmull
outsb
cmp
rcr
dec
sub
rcrl
je
pusha
orb
adc
dec
mov
push
jmp
std
aas
and
inc
insl
pop
test
adc
out
ja
mov
lret
movsl
cmp
mov
inc
jecxz
mov
shrl
insb
adc
sub
stos
ja
fsubrl
or
loop
ret
andb
and
mov
lret
xchg
into
into
or
xor
mov
je
fldl
in
andl
adc
push
pop
mov
into
and
fcom
pusha
adc
push
mov
sub
push
dec
push
xchg
incb
shrl
xchg
test
jmp
cmpsl
sub
mov
imul
xlat
dec
sbb
fs
xchg
aad
std
inc
pop
cld
sub
call
hlt
pop
push
scas
lods
inc
pusha
fincstp
repz
decl
fwait
stos
sub
mov
inc
jl
insl
pop
rcr
divl
pop
and
out
and
cmp
pop
pop
lock
fdivrs
out
movsb
sub
out
mov
cmp
xor
sub
or
pusha
adc
xor
pop
outsb
pop
push
lcall
mov
mov
or
enter
loope
andl
into
dec
dec
cmp
xchg
dec
inc
add
inc
inc
orb
imul
inc
loop
pop
adc
cld
inc
pop
dec
inc
sbb
dec
xor
xor
jno
mov
mov
mov
int3
test
dec
inc
aaa
dec
xchg
aam
pusha
adc
and
and
fwait
ret
nop
jecxz
add
aam
test
es
cmp
lcall
andl
mov
dec
adc
and
cmpsb
roll
add
jmp
push
dec
sbb
subl
adc
repnz
sub
adc
mov
push
ljmp
sub
roll
sbbb
jb
add
lret
xchg
mov
xchg
pop
addr16
mov
subl
int
or
inc
imul
into
rcrl
mov
sub
loop
sub
and
outsb
cs
outsb
push
push
scas
stc
orb
xor
mov
add
xchg
mov
dec
or
xor
lods
mov
std
gs
out
sbb
cmc
cltd
roll
add
cmp
rcr
testl
sub
adc
dec
mov
dec
movsl
mov
enter
pop
mov
jmp
addl
jmp
mov
bnd
jg
cmp
adc
or
into
mov
mov
dec
push
or
mov
mov
into
rcl
pusha
.byte
.byte
daa
