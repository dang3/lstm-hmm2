add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
aas
add
pop
ficoml
dec
add
add
pop
add
pop
add
add
js
mov
add
add
add
add
add
outsb
add
ljmp
add
add
add
sbb
xchg
jge
jge
jge
pop
add
xchg
xor
add
add
js
xchg
add
add
js
ljmp
add
add
add
add
add
add
add
js
aam
addb
add
push
add
add
add
add
js
cwtl
add
add
add
add
ret
add
add
lock
cmp
js
imul
add
js
dec
add
add
add
add
add
adc
xor
add
sbb
int3
add
add
js
sub
mov
inc
add
adc
add
add
js
dec
add
add
add
mov
sbb
dec
add
add
add
mov
add
jge
push
add
js
jge
mov
add
add
push
add
add
add
cld
push
js
aas
add
jns
jl
int3
add
add
add
inc
add
adc
mov
add
adc
lea
xchg
add
add
add
add
add
add
add
add
insb
add
dec
add
add
js
js
jge
mov
add
add
add
int3
add
add
add
add
add
pusha
add
add
adc
cwtl
add
add
add
pop
add
add
add
outsb
add
add
add
add
xchg
add
add
add
int3
add
add
xchg
add
add
add
pop
add
jo
push
add
add
add
add
add
xchg
add
add
jb
adc
cld
add
inc
add
fildl
movsl
add
add
xchg
add
pop
add
add
add
fadds
js
xor
add
mov
js
xor
jns
xor
push
add
add
add
add
add
iret
add
js
flds
add
pop
add
add
jge
movb
add
add
inc
add
iret
add
add
add
add
add
add
xor
mov
add
add
add
add
add
add
add
xchg
xchg
add
add
jge
add
xchg
fadds
sub
add
add
dec
add
add
add
add
add
add
xchg
pusha
add
add
add
add
or
xchg
add
add
add
add
dec
add
add
add
add
add
add
add
sub
xor
add
js
orb
add
add
add
add
inc
add
add
add
add
add
add
xor
xchg
add
add
sub
js
push
add
fadds
xchg
add
add
push
add
inc
add
add
js
fadds
push
add
add
add
add
push
add
add
js
sbb
test
pushf
add
add
add
add
add
add
add
int
inc
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
jb
mov
or
into
sbb
inc
xor
jne
movsb
jmp
mov
not
push
bound
push
in
mov
mov
inc
and
cmp
ss
mov
rol
sbb
idivb
fdivrp
mov
xchg
and
lods
int
xchg
mov
arpl
outsl
iret
and
shl
mov
mov
pop
cmp
mov
lods
popf
repnz
lods
xchg
decl
insb
js
inc
dec
in
adc
pop
inc
sahf
mov
imul
clc
dec
pop
out
mov
xor
cmp
push
lahf
push
subl
fadd
out
sub
mov
shrw
mov
fisttpl
mov
in
inc
add
iret
push
adc
or
inc
loopne
dec
adc
mov
repnz
icebp
xchg
cmp
pop
xchg
repz
sbb
mov
mov
sbb
sub
pop
pop
add
jp
xlat
mov
inc
xchg
jne
cwtl
dec
shl
ret
lcall
arpl
enter
mov
cmp
loop
inc
add
jg
push
repz
push
fsub
jmp
mov
push
lahf
les
push
test
mov
jecxz
in
ret
sub
js
xor
loope
bound
jmp
pop
push
lcall
mov
mov
sbb
xchg
sub
pushl
xchg
iret
frstor
data16
inc
xor
imul
lock
lret
xchg
into
mov
movsb
lods
mov
jns
sahf
xchg
add
loop
inc
daa
mov
jns
js
nop
pop
adc
js
cmp
cmp
sbb
jmp
xor
int3
cmp
dec
ljmp
sti
xlat
imul
cli
or
nop
and
fisubrs
pop
sti
insl
movsb
arpl
adc
aam
fcomi
cmp
lahf
vpshuflw
and
cltd
test
add
aad
xchg
jae
adc
push
into
add
cltd
in
pcmpgtw
cmp
imul
and
jmp
stos
jns
mov
add
sub
popl
push
or
xor
loope
inc
mov
cmp
inc
sti
stos
jp
xlat
push
push
fisubrl
mov
xor
jg
jbe
je
cwtl
rcr
mov
inc
pop
test
cmp
test
inc
sbb
pop
fisubrl
pop
push
mov
add
mov
cmp
fs
dec
mov
inc
cs
sahf
repz
add
cltd
cmp
repz
fwait
movsl
das
inc
movb
and
dec
and
lods
orl
shll
js
faddp
mov
adc
or
jae
movsl
push
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
jb
xchg
jmp
fisttpl
dec
jno
push
lret
and
lahf
pop
dec
cli
cmp
sub
sbb
or
sti
das
jmp
fisttpl
lret
jg
outsl
daa
pop
fwait
dec
out
jnp
dec
mov
dec
call
fistps
or
imul
xchg
jae
mov
mov
add
cmp
insb
mov
test
mov
test
js
hlt
mov
and
dec
push
mov
rcll
stos
cmpsb
lcall
cli
daa
addl
leave
cmp
cmp
fs
jp
jle
pop
sbb
outsl
cli
aas
out
pop
rorl
sub
push
out
pusha
jno
add
bound
sub
nop
sbb
push
sti
lret
pop
jae
mov
dec
je
test
cmp
cmp
aam
repz
out
rolb
loopne
iret
dec
sbbb
mov
jnp
pushf
mov
push
mov
push
loopne
stos
icebp
repnz
xchg
sub
add
cmp
aam
sbb
or
das
sbb
pop
arpl
jg
sub
dec
std
cmp
add
sbb
jmp
cwtl
popa
in
iret
sbb
dec
repnz
fidivrs
out
and
pop
mov
mov
out
push
aam
cwtl
xor
cmp
xchg
out
cmp
mov
stos
jp
pusha
dec
lods
sbb
outsl
mov
cmp
outsl
stos
pop
fwait
dec
mov
pop
dec
cmp
sub
sbb
or
sti
das
jmp
fisttpl
lret
jg
outsl
stos
pop
fwait
dec
mov
pop
dec
cmp
sub
sbb
or
sti
jmp
mov
push
out
and
out
rclb
ret
lods
add
mov
gs
mov
pop
ds
pop
push
ja
sbb
ror
movsb
or
xchg
dec
loopnew
bound
cmp
dec
jmp
dec
out
cmp
scas
cltd
push
outsl
push
jecxz
out
ss
pop
cs
mov
add
xchg
cmp
mov
in
mov
movsl
sub
sbb
push
or
pop
cmp
add
pop
shlb
jecxz
cmpsl
push
insb
sbb
xlat
jnp
cmpsl
addr16
mov
jp
test
lcall
das
sbb
pop
sbb
sub
loopne
lret
or
jo
and
stc
pusha
in
repnz
mov
xlat
cmpsb
test
pop
xor
mov
push
pop
aaa
out
int3
sti
cli
lods
addl
daa
fdivl
dec
outsb
xor
mov
imul
xor
pusha
adc
lds
add
lahf
and
lahf
in
mov
bound
mov
mov
and
sti
cli
xor
adc
jbe
or
push
sub
mov
adc
xchg
xor
lret
cmpsb
xor
add
pop
repnz
cmpsb
and
add
icebp
idivl
cltd
shll
popf
dec
addr16
cmp
pop
push
jns
mov
lret
mov
pop
lds
stos
rcr
cmp
push
lfs
stc
mov
mov
ret
popf
cmp
in
dec
cwtl
jecxz
mov
shlb
dec
mov
cmp
inc
jns
test
sbb
xchg
xchg
add
out
pop
mov
aad
add
mov
sbb
aas
icebp
idivl
loopne
and
and
cmpl
bound
cmp
sub
adc
sbb
fstpt
xchg
bound
icebp
and
out
jnp
xchg
aas
stos
xor
xchg
xchg
cmc
or
add
sbb
rcrl
roll
scas
clc
xor
xlat
inc
adc
outsb
mov
adc
gs
dec
mov
rorl
lahf
jecxz
mov
sub
inc
push
roll
ss
sti
jns
cmpb
dec
sub
mov
insl
out
adc
dec
jns
and
fistpl
adc
ret
mov
or
pop
mov
push
pop
lret
xchg
call
popa
pop
xchg
push
das
adc
out
lock
add
cmp
lcall
lea
and
xchg
in
and
dec
shl
sub
sti
add
adc
pop
mov
or
or
imul
pop
mov
negl
cwtl
inc
fadds
mov
mov
cwtl
aad
pop
lock
jl
clc
sub
shlb
jmp
xor
jb
pop
test
in
aam
or
shll
sahf
fwait
jae
push
inc
ret
cs
dec
movsb
push
cmp
adc
adc
jae
pop
inc
push
cwtl
jge
pushf
loope
mov
lret
xchg
mov
lahf
add
push
cmp
push
gs
ljmp
mov
mov
dec
jl
xor
dec
cltd
or
jle
bound
cltd
out
cmpsb
inc
sub
sub
and
fwait
int
push
add
jns
fimull
gs
ljmp
xchg
call
sub
jae
and
xchg
sbb
mov
imull
pop
js
mov
push
clc
xchg
push
mov
mov
xor
movsl
adc
adc
popf
mov
jle
cmp
xlat
jb
mov
testl
cmp
mov
mov
andl
sub
mov
pop
mov
jp
push
sub
xor
scas
sub
scas
push
ljmp
push
fsubs
mov
addr16
pop
into
outsl
test
in
sbb
adc
add
push
test
insl
or
xor
scas
test
daa
jle
out
push
fcmovnu
gs
and
fsubl
in
sarb
sbb
aad
lret
mov
dec
jle
cmp
xchg
fcmovu
leave
cmp
pop
fcoml
sub
mov
push
test
ss
cmpsl
repnz
lods
invd
hlt
cmp
jmp
push
out
addr16
dec
out
xorps
mov
fists
and
mov
push
lret
push
cmp
push
mov
scas
into
ret
in
in
push
les
sahf
xor
outsl
rolb
mov
or
push
and
stos
xchg
repnz
push
or
pop
push
mov
rclb
cmp
adc
add
push
cltd
cmp
push
push
sbb
dec
iret
mov
adc
or
inc
lock
mov
inc
push
sahf
stos
xchg
jne
push
cmp
mov
loope
popa
sub
aam
loope
cmc
push
push
in
test
in
dec
cs
test
pop
xor
es
jmp
popa
push
ret
jne
dec
popf
ja
ds
pop
pop
push
pop
nop
xor
cmp
cmpsl
test
jo
orb
push
mov
or
push
cmp
ret
adc
inc
movq
pop
or
xchg
in
add
jo
cmp
mov
loopne
mov
sbb
push
idivb
add
or
cmp
add
ljmp
testl
ret
push
or
loopne
cmp
xchg
je
icebp
jae
mov
or
push
mov
mov
mov
dec
dec
lds
push
rol
pop
into
jnp
cmpsb
mov
dec
shl
pop
das
sahf
cld
out
inc
mov
ja
addr16
aam
push
and
daa
sbb
in
jnp
add
flds
ret
dec
sbb
xchg
call
pushf
out
or
and
mov
out
popf
mov
cmp
jl
test
and
adc
sub
int
push
cltd
and
aas
js
pop
jnp
aaa
pop
in
ffreep
add
mov
inc
push
aas
out
stos
fidivs
in
imul
add
ror
stc
adc
stc
inc
sub
xchg
nop
fldz
fdivr
push
stos
adc
fs
xchg
testb
out
pop
pop
xchg
mov
mov
dec
inc
push
popa
xor
push
fsubr
out
cld
cmp
dec
pcmpeqd
ja
aas
pusha
je
stc
mov
mov
jbe
inc
mov
xlat
call
inc
xchg
data16
pusha
xor
fisttpl
outsb
mov
sahf
stc
add
jg
sbb
fnstcw
xor
test
fstps
sub
ljmp
push
inc
inc
orb
push
mov
mov
sub
outsl
test
mov
jbe
ret
int3
repz
movsl
push
fistl
push
pop
dec
mov
xchg
mov
inc
mov
cmc
fiaddl
popf
jo
pop
pop
sbb
cltd
lret
addl
cmpl
gs
push
and
in
sub
cmp
jmp
xchg
addr16
int
loope
mov
sbb
outsl
aaa
adc
mov
enter
or
cmpsb
add
sub
setb
sub
xchg
aam
sub
pushf
jl
mov
mov
add
jns
mov
jle
pushf
inc
je
push
add
lds
int
cmpsb
out
add
sar
es
and
xchg
pop
add
loop
into
scas
xor
pusha
xchg
jl
dec
stos
ret
push
inc
dec
fisubs
iret
pop
outsl
lea
jmp
mov
mov
imul
adc
mov
lds
bound
and
add
insb
insl
lahf
and
cmp
inc
pop
jmp
lret
hlt
pushf
repnz
sbb
bound
inc
jnp
fistpl
filds
push
push
push
shll
jp
out
in
cmp
lds
mov
mov
sub
icebp
pop
mov
roll
dec
sbb
out
pop
cmpsb
ret
adc
mov
ss
cli
adcl
cltd
movsb
ljmp
pop
cli
push
mov
or
sbb
push
inc
sahf
pusha
jmp
mov
fisubrs
rcll
xlat
bound
outsb
aaa
lds
xchg
jl
scas
jge
inc
pop
adc
cld
pop
jp,pt
add
stos
jecxz
jge
add
jb
cmp
xor
mov
xor
sbb
shrb
sub
sarl
dec
mov
stos
ror
push
and
ljmp
int3
das
mov
adc
ret
cmpsb
pop
mov
push
xchg
je
jne
lods
sbb
imul
pushf
xchg
aam
popl
rcl
loopne
sti
mov
ret
stc
mov
mov
and
repz
push
mov
adc
in
aaa
jae
xor
pop
and
pop
jns
push
xchg
leave
pop
fwait
and
xor
pop
mov
cmova
test
outsb
lods
sbb
sub
nop
or
cmp
and
add
test
jo
je
scas
test
sbb
jbe
jnp
dec
push
inc
es
mov
jnp
lods
pop
cmp
nop
push
fst
push
je
push
mov
cmp
dec
addl
add
andl
std
rclb
sub
xchg
mov
enter
int
fistpl
pop
xchg
std
test
nop
and
pop
faddl
test
test
in
aaa
imul
test
aam
jp
incl
mov
addl
scas
and
cld
fsub
jecxz
inc
dec
mov
sbb
adc
adcl
inc
xlat
cmp
loopne
in
push
lcall
lods
mov
xor
icebp
movl
cmp
imul
js
shlb
iret
inc
shr
lret
xchg
cltd
or
sti
dec
ja
packuswb
shll
or
lcall
leave
sbb
sbb
out
js
popa
mov
xchg
in
ljmp
sbb
pop
mov
xchg
mov
test
push
mov
pop
mov
mov
addr16
mov
nop
testb
lock
sbb
jo
pop
cltd
mov
daa
fnclex
mov
dec
mov
inc
dec
sti
push
sbbl
add
mov
pushf
fldl
int3
test
lds
jno
sub
jb
or
mov
pop
data16
loope
test
xor
inc
adc
mov
xchg
rorb
inc
loop
pop
repnz
jle
jecxz
mov
aam
aam
fwait
push
pop
imul
mov
leave
shl
and
mov
or
stc
dec
xor
mov
add
xor
pop
fsubrp
mov
mov
cmc
icebp
cmp
neg
aaa
and
fadds
xor
insl
mov
dec
repnz
repz
mov
movsb
mov
rclb
inc
mov
xor
mov
mov
mov
std
jge
and
push
or
push
fst
pop
out
aas
loopne
push
rolb
xor
cmp
sahf
jg
cmp
push
mov
and
adc
outsl
xor
dec
incl
mov
les
jne
cmc
pusha
inc
leave
negb
repnz
mov
nop
int3
mov
scas
mov
jg
ret
mov
and
push
rcr
mul
mov
mov
outsb
cmp
add
gs
mov
xchg
loope
pop
pushf
nop
pop
cltd
mov
xchg
nop
xor
or
enter
test
jnp
or
pop
or
into
add
outsl
mov
xchg
lahf
xor
bnd
dec
fsubrs
int3
cmp
cmc
xlat
push
push
mov
js
int3
aam
or
jae
in
imul
aaa
rclb
jp
push
mov
sbb
jecxz
sbb
xchg
push
adc
pop
push
mov
shlb
stos
adc
sbb
pop
mov
mov
arpl
pop
movsl
fisttpl
hlt
lret
arpl
js
aas
dec
iret
cmp
scas
xor
dec
out
enter
movsb
jns
dec
repz
jo
mov
loope
dec
cmp
xlat
sub
add
es
lock
dec
push
cmp
out
mov
inc
pop
lds
out
or
jbe
es
dec
adc
sbb
mov
push
gs
jo
jg
out
loop
xor
sub
mov
and
nop
inc
and
pop
xchg
xchg
leave
out
sub
fcomps
add
popa
repz
aad
jl
out
out
and
cwtl
aas
cwtl
pop
aad
sub
jl
leave
or
jo
jne
loopne
xor
out
sbb
stc
movsb
lahf
and
int
cmpsl
js
dec
mov
ja
adc
fiadds
cmp
std
andl
push
mov
push
and
cmp
push
mov
fwait
mov
mov
je
les
movsb
push
dec
aad
hlt
mov
push
pop
sbb
pop
jb
repnz
daa
adc
inc
jg
daa
jge
call
pop
cmp
rcrb
dec
scas
cmc
out
std
xchg
inc
pop
cwtl
mov
ret
push
ss
rcll
xchg
pusha
adcl
and
and
jl
mov
adc
fistps
sbbb
push
push
jp
mov
inc
icebp
and
shlb
mov
addr16
scas
inc
addr16
test
push
scas
xchg
cmp
pop
stos
xchg
and
shl
pop
ret
mov
lock
jns
imul
push
push
aas
mov
xor
dec
rcrb
jg
lds
mov
insl
arpl
aas
div
xchg
xor
inc
dec
and
cmp
jb
xor
inc
xor
stos
lret
scas
inc
fldpi
popf
sahf
sarb
mov
xchg
xchg
daa
lahf
xorl
andl
sub
and
sbb
adc
jbe
lea
mov
sbb
adc
rorb
ret
bound
clc
mov
ja
adc
mov
sbb
hlt
call
mov
mov
dec
push
or
sub
adc
int
add
sbbb
add
cwtl
repnz
imul
outsb
fidivrl
lods
mov
ljmp
push
pop
or
xchg
jmp
push
repnz
notl
sbb
jns
lret
outsl
adc
test
lea
and
aad
xchg
cmp
test
mov
pop
ss
mov
pop
cmp
mov
push
imul
lods
mov
inc
cmp
inc
adc
shl
sub
mov
popa
or
fs
cli
jecxz
orb
jb
lret
mov
addr16
sti
xlat
nop
aaa
and
stos
xor
jl
repz
loop
jae
testl
push
leave
shlb
jbe
mov
dec
jl
pop
sub
xchg
xor
fimuls
sar
movaps
jle
aaa
jmp
subb
popf
sbb
xor
cmp
sub
or
fadds
add
mov
cmp
adc
and
inc
in
test
cmp
push
and
mov
pop
or
and
lock
push
sbb
xchg
jecxz
pop
fbstp
adc
xchg
fnsave
aaa
pop
ds
mov
cwtl
pop
sub
rol
cmpsb
ret
and
arpl
pop
aaa
inc
push
outsb
je
sbb
aaa
icebp
jo
jbe
push
mov
dec
pop
push
aad
add
dec
sahf
fwait
xchg
clc
push
xchg
leave
cmpsb
xchg
int
das
dec
fcoml
pushf
dec
adc
add
sbb
cmp
scas
outsb
loop
insl
sub
xchg
fidivrs
or
sbb
adc
lods
lds
xchg
roll
mov
xor
and
and
xchg
push
add
fdivrl
js
xchg
lods
pop
shl
cmp
lahf
dec
out
ds
hlt
imul
sbb
pusha
dec
jno
xchg
std
adc
mov
scas
add
mov
jmp
cmp
test
xchg
pop
push
rol
xchg
push
ja
iret
push
inc
mov
sbb
sti
daa
rorb
mov
sub
stc
clc
mov
xchg
xor
fwait
dec
xchg
mov
mov
jnp
imul
pop
cmp
lea
pop
js
sub
sbb
sbb
jno
jl
leave
lret
add
js
cmp
popf
fsub
or
and
push
mov
sub
das
xor
adc
inc
and
cmc
mov
add
test
inc
stos
fs
test
jbe
lods
movb
fidivrs
out
push
jns
das
das
out
stos
sbb
sbb
popa
add
jno
mov
roll
into
imul
sbb
mov
or
or
xchg
sub
call
lcall
lods
stc
lods
shl
push
adc
sub
xchg
test
pop
add
sbb
xchg
cwtl
rolb
lods
cmc
pop
movb
lret
dec
mov
popa
in
dec
dec
jae
jmp
scas
or
jge
pop
dec
dec
in
sbb
aaa
push
cmp
mov
lock
sub
sbb
insl
stos
subb
in
mov
test
pop
cmpsl
cmpsl
gs
cmp
movsb
bound
inc
push
pop
dec
or
sti
out
adc
ds
rcrb
and
cmp
ret
int3
loop
iret
push
push
clc
pop
jg
insl
cmpsb
mov
adc
shrl
xchg
mov
xchg
push
or
in
inc
lret
cmpsl
mov
outsl
add
fcmovu
ja
adc
repnz
adc
mov
in
push
js
cmp
add
sub
push
cli
mov
fxch
fistpl
je
add
pop
add
push
mov
icebp
and
adc
stos
pop
pop
jb
mov
push
and
jge
mov
sbb
pop
shll
adc
int3
mov
test
loopne
pop
or
fmull
mov
push
pop
sbb
loopne
adc
xchg
xor
fistpll
fiadds
add
or
js
lods
add
mov
jne
sub
push
push
mov
fwait
sti
xchg
outsl
out
xchg
jne
addr16
aam
pop
jle
test
cmp
inc
jbe
aas
lahf
lock
lds
cmp
mov
dec
jne
rclb
movsl
daa
scas
add
shll
mov
das
mov
jae
cmp
lret
pop
adc
dec
in
add
xchg
inc
push
call
popa
repnz
dec
cld
imul
and
jge
xchg
add
cli
mull
inc
sbb
jo
hlt
jp
xor
cmp
mov
iret
lret
or
sub
stos
sub
xor
pushf
cmp
adc
mov
out
pop
cmp
stos
addr16
int
jl
jo
push
fisttpll
and
test
out
cmpsb
pop
pop
sub
adc
mov
or
rorl
imul
es
sub
fsubrs
mov
jnp
xor
sbbb
aad
std
push
pop
xor
jns
dec
add
pusha
xor
push
movl
jmp
loope
iret
cmp
outsb
in
xlat
adc
jno
cmp
sub
das
jne
sti
xchg
inc
sahf
mov
aad
out
popf
inc
dec
loop
filds
lahf
push
aaa
mov
jp
push
aam
sbb
push
mov
js
push
cli
adc
jle
or
bound
mov
xchg
inc
cmp
pop
jmp
jns
cld
fwait
push
or
imul
divb
cmpsl
add
jbe
push
in
in
scas
aam
test
sbb
cld
sbb
cmpsl
mov
xor
loope
xor
arpl
lods
and
sahf
cmc
iret
jge
inc
aaa
mov
daa
sbb
push
push
lahf
rcrb
sbb
subb
dec
icebp
dec
xor
out
dec
mov
aaa
pop
test
out
adc
lea
js
fnstenv
cli
loope
cmp
aad
ficomps
lods
xor
jle
xchg
jle
mov
mov
mov
xor
ja
les
mov
lret
push
sub
pop
out
jmp
mov
shl
cmc
negl
fbstp
lock
jl
popf
sub
mov
mov
les
inc
lcall
iret
add
xlat
push
jle
cmp
adc
xchg
mov
mov
arpl
pop
sub
mov
repz
cld
xchg
or
push
cmp
pop
mov
test
xchg
aad
push
mov
push
inc
stc
je
daa
insl
xchg
or
sti
pop
dec
mov
mov
ds
mov
pop
test
sbb
incb
and
sbb
mov
pop
jl
stos
lret
aam
gs
std
mov
cmp
push
push
or
xorb
repnz
sbb
mov
add
sub
sub
mov
lret
jg
outsl
stos
pop
fwait
dec
mov
pop
dec
cmp
sub
sbb
or
sti
das
jmp
fisttpl
lret
jg
outsl
stos
pop
fwait
dec
mov
pop
dec
cmp
sub
sbb
or
sti
sub
bt
lret
jle
imul
fwait
dec
mov
pop
mov
cmp
sub
cmp
or
sti
add
xchg
lret
jg
pop
sbb
mov
pop
cmp
mov
aam
in
hlt
mov
jne
gs
xor
fs
faddl
and
xor
add
adc
popa
nop
jae
push
mov
movsl
mov
jne
gs
icebp
add
xor
xor
add
pop
in
mov
push
movsl
mov
out
mov
clc
and
rcll
cmp
adc
pop
xchg
imul
enter
andl
icebp
cld
add
lret
mov
push
imul
out
and
xchg
add
mov
fisubl
out
mov
andb
ds
call
jb
xlat
xchg
and
jne
dec
lds
jle
aam
aad
hlt
pushf
sbb
lea
popa
push
bound
jno
gs
add
xor
stos
push
xor
sahf
xorb
dec
push
fyl2x
cmpl
mov
push
es
fldenv
div
xchg
add
jno
mov
stos
push
mov
push
pop
repz
inc
fldenv
xchg
and
and
inc
pop
push
iret
push
add
add
cmp
sub
testl
imul
xchg
int
aam
in
in
xchg
mov
push
and
jne
popa
rclb
xor
cmp
into
adc
add
push
loope
lea
push
rcrl
mov
mov
cmpsl
push
aad
ficompl
test
shlb
movsl
in
sbb
or
xor
xor
add
adc
popa
xchg
jno
inc
mov
movsl
mov
jne
gs
icebp
add
and
xor
add
adc
popa
xchg
jno
inc
mov
movsl
mov
or
mov
cmc
call
pop
gs
xchg
dec
adc
mov
mov
push
lahf
push
movsb
mov
cmp
cmp
adcb
repnz
arpl
imul
mull
push
xor
xlat
test
and
ficompl
scas
sub
xor
pop
lret
sub
sbbl
inc
add
cmp
or
les
les
lret
mov
lret
jmp
pop
cmp
xchg
and
adc
scas
shl
lret
mov
inc
addb
and
and
mov
aad
fidivl
add
xchg
pop
xor
aad
bound
ljmp
rcr
rcl
in
or
lret
popa
xchg
mov
mov
es
pop
sub
mov
stos
cmp
mov
sbbl
mov
xlat
adc
pushf
sahf
push
inc
mov
push
pop
in
shrl
pop
xor
jecxz
test
dec
aaa
pop
push
daa
lahf
mov
adc
addr16
mov
mov
mov
and
cmp
adc
fidivl
arpl
mov
testl
xor
movsl
push
push
and
xor
in
iret
add
out
mov
add
push
mov
loope
scas
xor
push
mov
int3
mov
inc
into
mov
dec
inc
addb
mov
lds
xor
add
pop
jns
outsb
mov
sub
xorb
mov
or
lcall
cs
push
orl
out
imul
fisttps
jl
jp
ret
mov
dec
shrb
stc
adc
out
lret
rclb
fdivrl
mov
push
adc
cs
xchg
lods
jl
jge
mov
jle
cmp
and
arpl
mov
lds
and
mov
popf
fistl
jge
loope
lret
lods
in
dec
or
sbb
push
xlat
aas
push
in
bound
add
rcrl
popf
xor
addr16
lahf
or
mov
pop
gs
ret
push
and
fwait
out
out
add
jno
cltd
pushf
push
sub
xchg
test
mov
xchg
pop
mov
adc
add
dec
outsl
scas
add
or
sbb
hlt
fcomi
pop
arpl
in
jae
arpl
and
ljmp
inc
mov
xchg
in
test
mov
pop
inc
jno
test
icebp
pop
lods
add
lods
es
in
mov
out
mov
jge
leave
or
jge
mov
insl
xchg
mov
shlb
pop
sub
xchg
scas
or
sub
les
cs
add
loopne
stos
push
jne
jecxz
cmp
inc
mov
jg
into
dec
mov
mov
movl
inc
adc
jae
sbb
sti
lcall
push
test
push
sbb
scas
imul
stos
imul
mov
adc
mov
lahf
mov
mov
jecxz
push
scas
lds
adc
fsubrl
hlt
jno
je
call
push
xchg
sbb
jmp
cmp
xchg
sub
sahf
adc
mov
jbe
add
cmpsb
fisubrl
lret
daa
dec
int3
or
jge
sti
in
in
cwtl
add
sbb
test
insb
add
lods
push
cli
inc
adc
shll
shrl
test
jecxz
push
sbb
test
nop
dec
push
jo
mov
test
je
les
sarb
and
xchg
adc
push
mov
stc
incl
push
fidivrl
mov
aaa
add
cwtl
hlt
fnsave
push
call
ret
add
sti
cltd
add
ljmp
pushf
dec
pop
stos
repnz
xchg
pop
pop
stos
cmc
push
lds
cld
je
cmp
pushf
in
push
and
jne
or
xchg
inc
cmp
lods
xor
rcr
add
jmp
cmp
lods
sub
fbstp
lret
and
insl
or
aad
jg
cld
imul
mov
pop
sbb
push
and
sti
xchg
je
xor
insb
inc
insl
test
push
mov
push
in
movsl
test
outsb
cmp
addr16
xlat
inc
lods
xchg
jmp
mov
mov
push
nop
test
fistpll
cmp
mov
or
mov
inc
push
pusha
inc
fwait
lods
test
arpl
mov
jno
dec
cmp
fisubl
jp
cltd
daa
adc
mov
lcall
popa
sub
inc
stos
dec
in
add
loop
stos
lret
push
xlat
andl
push
outsl
test
cld
xchg
lret
int
rolb
and
leave
fs
jp
fstpt
sbb
xchg
or
xorb
adc
int
push
pop
xchg
bound
cltd
adc
loopne
shrb
insb
out
inc
lds
iret
addb
into
mov
add
inc
and
test
lods
pop
push
out
jae
mov
push
jg
push
push
jl
daa
pop
mov
mov
dec
mov
fistpl
outsl
pop
mov
pusha
mov
in
mov
negl
pop
sahf
dec
fwait
lret
dec
ds
cmp
sbb
mov
mov
mov
aad
sbbb
xchg
xchg
xor
in
das
jmp
aad
imul
decb
nop
mov
ljmp
inc
cmp
or
and
movsb
int3
lods
bound
mov
shlb
xor
inc
push
xchg
mov
add
fwait
rclb
jle
fidivl
testb
or
sahf
jmp
loop
inc
daa
jp
cmp
cmp
sarl
in
movsl
or
jae
cwtl
paddusw
call
or
mov
or
xor
js
jmp
and
push
adc
push
outsl
and
adc
aad
xchg
sbb
popa
aad
mov
add
or
sbb
loopne
jae
xchg
insl
pop
mov
test
jg
rorl
push
rcr
jbe
adc
smsw
add
dec
jmp
mov
shll
sbb
fwait
sub
xor
leave
mov
cmp
fwait
movsb
iret
ds
jge
or
fcoms
ret
xor
fld
jae
test
dec
faddp
sub
add
cwtl
inc
xor
xchg
add
sarl
aas
sbb
fldenv
loopne
mov
push
loope
pop
ljmp
icebp
xchg
stos
pusha
out
jno
outsb
inc
ja
adc
xorb
cmpsb
adc
jns
sahf
jecxz
mov
les
ljmp
enter
call
jge
jle
mov
test
in
cmp
jno
sbb
mov
push
dec
adc
addr16
add
mov
dec
xor
mov
add
sub
mov
jl
ret
jnp
repz
fistpll
int3
xchg
pop
sub
and
sbb
jne
xchg
outsl
cmp
cmp
xchg
andb
xchg
add
mov
xchg
adc
xchg
in
shlb
xor
and
in
sbb
push
push
das
sbb
gs
and
mov
fsubrs
rol
inc
pushf
pop
adc
sub
jno
mov
clc
jmp
fstp
cmpsb
mov
stos
test
sbb
fadd
loopne
stc
or
dec
movsl
outsb
push
adc
mov
pop
pusha
fnstsw
into
lds
and
and
std
jp
sub
popa
nop
std
mov
clc
mov
add
pop
rclb
scas
lods
arpl
jbe
mov
mov
dec
push
ja
jle
xchg
scas
hlt
call
outsl
lods
je
cmp
inc
xchg
fwait
mov
inc
ljmp
jns
jp
stc
hlt
dec
sarb
sub
jge
push
jp
xorl
mov
mov
test
aas
inc
test
mov
push
mov
fcompl
fbstp
out
scas
sub
dec
movsl
jae
test
pushf
adc
aad
insb
lock
push
jb
sub
mov
push
stos
rol
popa
mov
shrl
pop
mov
cmp
push
loop
repnz
ljmp
out
inc
push
ret
mov
and
daa
shrb
ret
jp
push
out
in
aaa
iret
inc
mov
dec
cmp
or
inc
push
pusha
add
mov
int
inc
dec
mov
jns
movsl
jns
cmp
or
sbb
into
out
dec
add
aad
das
sti
repz
int
mov
inc
sub
mov
test
out
outsl
mov
inc
enter
adc
addr16
and
enter
ret
add
mov
push
push
in
enter
sbb
mov
outsl
sbb
add
dec
jbe
rcr
in
fsubrs
dec
sbb
xchg
pop
lods
fstl
sbb
neg
xorl
bnd
mov
pop
sbb
adc
dec
add
or
flds
sub
mov
jnp
xor
ret
inc
dec
mov
pop
aad
push
test
scas
xchg
xor
mov
cli
stos
mov
push
mov
mov
shr
jno
adc
mov
loope
dec
movb
mov
int3
jle
pop
movsb
inc
sbb
repnz
dec
dec
pop
inc
in
xor
jns
xor
xor
mov
sbb
cmp
adc
cmp
pop
stos
jb
and
mov
xor
or
dec
in
sbb
movsl
xlat
lods
aad
lret
loop
nop
fdivl
push
xchg
inc
push
and
cmp
addr16
sub
and
inc
ds
mov
out
hlt
stos
mov
jno
xchg
nop
pop
jecxz
out
mov
sub
mov
pop
push
nop
fwait
pop
test
mov
adc
in
int
in
test
jmp
jo
mov
cmp
movsl
adc
sti
jmp
pop
scas
js
lcall
mov
pop
ret
sub
das
add
and
mov
fwait
and
int
sbb
sbb
ret
gs
cmpl
sar
repnz
test
jle
mov
jb
jne
xchg
popf
mov
fistps
mov
in
popa
imul
xchg
out
test
inc
sbb
adc
lods
scas
xchg
orl
div
fcomi
xchg
ret
into
mov
push
in
add
mov
flds
mov
pusha
test
pop
popa
add
or
fisubs
fdivrs
dec
dec
jge
xchg
out
lahf
cmp
xchg
outsb
popa
aaa
dec
push
fsubr
pushf
imul
sarl
lock
rolb
add
lods
int
jg
mov
cmp
lods
rcrb
xor
rcrb
std
adc
lahf
lea
or
andl
lods
jno
aad
add
xor
scas
daa
add
imul
subb
fwait
xchg
adc
mov
roll
ret
xchg
mov
dec
mov
sti
jb
int
mov
inc
mov
nop
push
sbb
sub
cmpsl
stos
jecxz
hlt
pop
inc
jle
jae
xchg
shll
mov
outsb
std
jg
cmp
cmpsb
xchg
pushl
pop
sub
jmp
push
repnz
mov
pop
inc
dec
xor
push
fisubl
test
dec
sahf
shll
aad
sbb
and
pop
push
mov
push
invd
push
aas
rcll
or
rcll
aas
xchg
pop
add
xchg
movsl
addr16
or
lock
lahf
dec
or
cmc
mov
arpl
movsb
pusha
addr16
lea
inc
je
xchg
fisubrl
sti
push
pusha
mov
das
jl
xchg
pop
adc
push
arpl
jmp
aam
mov
jbe
aam
into
cld
push
or
shl
mov
jo
outsb
jecxz
jnp
inc
lods
mov
xor
add
pop
aad
es
cmp
mov
xor
mov
pop
push
cmp
mov
mov
mov
lret
mov
jp
rcrb
sti
std
mov
jo
jecxz
adc
mov
iret
adc
xchg
sbb
jno
pop
lods
and
adc
and
adc
rorl
mov
pop
test
mov
inc
rcrb
sub
dec
inc
and
jg
mov
fistpl
xor
sub
and
xlat
addl
jl
cmp
fcomi
push
jno
sub
push
imul
or
scas
and
fs
push
xor
add
pop
mov
adc
jbe
in
aaa
sub
dec
cmp
outsb
lea
cmp
adc
mov
pusha
and
cld
test
sub
sbbb
in
cmpsl
aad
sub
cmp
xor
outsb
into
lods
pusha
cmc
das
add
pop
arpl
push
stos
pop
hlt
mov
insl
mov
jle
rcr
or
xor
push
mov
cltd
loop
mov
aad
js
lds
fcomip
push
sub
pushf
mov
jp
shlb
pop
bound
cwtl
xchg
in
cmp
pop
and
cmp
adc
mov
mov
or
fwait
pop
jg
insb
out
not
pop
lock
cmp
xorb
mov
nop
icebp
mov
or
rcrb
sbb
jge
xchg
add
xor
cs
adc
sub
sahf
iret
test
mov
xor
push
jae
jae
mov
jo
push
jp
test
js
jb
sub
out
push
add
stc
sbb
and
cmp
mov
cmp
ja
repz
push
shlb
leave
inc
cwtl
les
jge
xor
or
fwait
out
push
les
inc
outsb
daa
mov
adc
out
das
icebp
sbb
cmp
insb
mov
es
std
push
push
lods
dec
inc
out
fcoms
push
mov
repz
inc
jmp
in
lock
sti
cmp
sub
mov
or
scas
fcomps
xor
addl
cs
and
jnp
cmpl
lcall
ja
scas
data16
cld
xorb
ret
data16
mov
ret
cli
jmp
mov
aam
dec
pop
in
aas
rcrb
dec
ret
adc
lock
xchg
mov
sbb
jbe
pop
pop
cmp
adc
cli
sahf
xchg
dec
testb
xor
pop
lret
outsb
or
xor
xlat
or
xchg
mov
mov
jb
mov
xchg
xchg
mov
roll
mov
sbb
call
push
jge
mov
fcompl
outsb
cmp
nop
orb
rorb
jecxz
movsb
inc
aas
test
stc
jmp
cmpsb
shrl
cltd
sub
sbb
popf
pop
and
pop
into
clc
adc
out
leave
sbb
inc
xor
insl
mov
xchg
icebp
jg
xchg
pop
push
jge
sbb
inc
inc
or
popa
dec
hlt
mov
xchg
xlat
cmpsb
daa
js
dec
dec
sub
sub
and
dec
xchg
dec
sub
inc
sub
in
add
cmp
repnz
xor
faddp
sbb
test
test
jg
fidivrl
mov
add
jmp
adc
xor
test
or
mov
cmp
lea
je
xor
xchg
sbb
push
xchg
and
pop
sub
xchg
inc
cmc
je
cwtl
inc
rcrl
clc
insb
jb
dec
mov
stos
testb
fstl
pop
pop
in
adc
mov
inc
call
push
ss
mov
shrl
call
adc
mov
and
aad
loop
arpl
les
push
add
inc
fbld
ss
jns
js
ds
clc
mov
adc
mov
cmp
xor
push
pop
inc
loopne
loope
cmpb
jmp
push
dec
xchg
lcall
add
push
add
dec
dec
lret
xchg
inc
cmp
ret
xchg
cmp
dec
xor
fnsave
mov
inc
mov
and
push
jg
or
jne
in
sub
xlat
push
movsb
xchg
jns
rcrb
and
lahf
into
ja
rorb
sub
dec
adc
xlat
xchg
push
sub
cmc
dec
and
shlb
out
inc
add
mov
out
lods
mov
loopne
xchg
into
rcrl
xchg
adc
std
xor
xor
inc
test
or
xchg
out
out
mov
dec
dec
mov
daa
pop
xor
js
xchg
pop
mov
ss
sti
lahf
dec
push
xor
cmpxchg
xor
inc
int
outsl
rcrb
jl
cwtl
hlt
mov
push
jp
xchg
dec
les
mov
notl
jae
cmp
mov
popf
xchg
nop
dec
loop
pop
popf
xchg
sbb
lret
push
or
mov
xchg
inc
out
inc
push
lods
xchg
ss
xor
jo
xchg
jnp
cli
adc
in
mov
cli
imull
pop
incb
sarb
pop
mov
es
xlat
xchg
add
dec
fs
cwtl
xchg
pop
cli
orb
cmp
repnz
cmpl
fwait
mov
ds
aad
inc
sti
mov
mov
or
fs
cmpsb
aas
jno
imul
mov
mov
inc
in
add
sub
addl
sbbl
inc
mov
subb
pop
ret
xchg
inc
mov
sub
sbb
das
jge
pop
lods
xor
jnp
loope
lea
cmp
and
dec
test
fmuls
lock
sti
sub
push
jp
addr16
loopne
ficoms
cld
std
xlat
filds
sahf
aam
inc
insb
lcall
jne
mov
shlb
pop
ret
mov
fstl
mov
cltd
in
jbe
lcall
cmp
xor
and
pop
cmp
jge
cmp
stc
jmp
lret
push
out
or
cld
push
mov
inc
lock
jo
sub
loopne
xlat
fmull
fldcw
enter
dec
dec
loope
stc
das
cs
push
push
xchg
ret
xor
mov
dec
pop
imul
rorl
mov
in
push
push
stos
gs
stos
ret
sub
sub
jo
jp
addb
sbb
ljmp
jmp
inc
mov
adc
frstor
mov
cs
sahf
icebp
inc
hlt
xchg
roll
dec
inc
sbb
mov
adc
sbb
mov
push
clc
nop
rcrl
xchg
cmpsl
push
in
popf
fiaddl
pushf
cmp
push
cmpsb
rorb
jmp
pop
hlt
add
xor
or
dec
sbbb
xor
jp
mov
stos
shll
xor
cmp
add
dec
out
mov
sub
movsb
jnp
std
adc
int3
xor
negl
sarl
mov
popa
adc
jecxz
sub
pop
dec
xchg
xor
sahf
movl
loopne
and
into
and
mov
push
aas
std
cmp
mov
add
jg
out
les
jne
cmp
jbe
pop
xor
jg
rclb
popf
xchg
jae
es
aaa
mov
lcall
das
xchg
mov
jo
leave
inc
dec
aad
jle
andb
into
out
xchg
mov
call
filds
add
adc
sahf
ror
dec
push
xchg
lock
pop
lahf
sbb
int
jg
xor
jp
int
ret
stos
pop
fisubrs
fs
imul
push
xor
ja
imul
test
inc
add
xor
mov
ds
in
repnz
mov
mov
push
mov
sbb
mov
jne
xor
pop
sbb
outsl
xor
add
or
jmp
jp
push
jno
lcall
sti
dec
xchg
sub
or
popa
push
mov
xchg
sub
xor
loope
stos
cs
add
sbb
add
in
rorl
inc
mov
jne
cmp
fadd
test
es
or
mov
addr16
cmp
cli
cli
xchg
add
push
sti
ja
fnsave
out
jb
mov
shlb
imul
mov
aaa
add
mov
mov
loope
sub
push
rorb
movsb
push
push
cmp
add
cmp
jnp
push
jo
stc
jp
pop
rcrb
mov
pop
mov
lods
in
inc
mov
gs
icebp
add
and
xor
add
adc
popa
xchg
jno
inc
mov
movsl
mov
jne
gs
icebp
add
and
xor
add
adc
popa
xchg
jno
inc
mov
movsl
mov
insl
xchg
popa
loope
icebp
outsb
shll
and
add
adc
popa
xchg
jo
inc
mov
mov
adcb
add
fisubrs
into
outsl
stos
cmc
adc
mov
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
push
inc
inc
push
jo
pusha
jae
imul
add
xor
loopne
nop
addl
xor
inc
push
sbb
pusha
jae
add
adc
and
xor
ret
shlb
addl
call
arpl
adc
and
xor
test
sti
repnz
in
cld
mov
inc
or
jo
or
adc
add
ljmp
fldt
inc
sbbb
stos
movsb
jno
adc
in
addb
sub
outsl
neg
jg
repz
loop
sbb
pop
adc
xchg
shrb
lds
pop
pushf
cmp
mov
add
adc
lods
and
rcrl
sarb
jmp
mov
lods
push
out
mov
add
mov
aas
inc
test
sbb
xor
xchg
subb
lods
ds
aad
lods
jno
sahf
mov
jbe
sahf
iret
push
adc
sarl
adc
sbb
mov
mov
inc
push
push
jo
pusha
jae
add
xor
xchg
push
ret
pop
roll
orl
cmp
push
add
sbb
jg
outsb
adc
arpl
cmpsb
xchg
cmpsl
xchg
mov
loopne
mov
and
add
gs
push
jne
mov
xchg
cmpsb
lock
fld
loope
cmp
sub
adc
xor
inc
add
adc
and
xor
ret
rcl
jecxz
pause
addl
push
inc
inc
push
jo
pusha
jae
add
adc
and
xor
ret
rcl
jecxz
pause
addl
push
inc
out
mov
mov
loop
negl
js
pop
daa
pop
xchg
adcl
and
push
jl
and
mov
add
add
adcb
je
mov
dec
arpl
fsubl
mov
divb
xor
dec
daa
lea
cmpsb
addl
cmp
inc
jmp
hlt
cmp
mov
test
xorl
loopne
jg
inc
push
mov
in
mov
pop
cmp
fs
or
imul
xchg
arpl
loop
push
out
imul
int
sub
and
push
push
aad
mov
sub
pusha
out
xlat
fdivl
dec
loop
pop
jge
mov
add
inc
lods
mov
jnp
cltd
and
xchg
lcall
mov
jmp
je
push
mov
and
mov
mov
mov
lret
dec
add
cmp
loopne
in
push
add
aas
xchg
xor
ljmp
fimuls
cli
cmpsb
add
popa
std
sbb
mov
imul
out
or
add
push
clc
mov
and
adc
clc
dec
cmp
aam
icebp
ljmp
idivb
mov
fistps
lods
addr16
iret
dec
mov
outsb
xor
jnp
scas
mov
pop
int
ljmp
mov
int3
out
push
adcb
imul
sub
xlat
adc
add
mov
mov
mov
popa
and
shr
xchg
mov
movsl
mov
in
adc
lcall
push
inc
jmp
test
imul
inc
daa
jp
ret
dec
xor
bts
inc
loopne
adc
lcall
dec
sbb
xor
rep
sub
jle
xor
dec
xchg
test
jecxz
icebp
xor
cmp
push
xor
xor
lahf
ds
push
jno
inc
in
sti
mov
jle
js
xchg
and
call
dec
out
inc
mov
ja
push
fsubrs
cmc
hlt
adc
or
out
jl
fisubl
mov
out
popa
ret
enter
inc
xor
xchg
mov
xlat
pusha
push
jne
js
mov
pop
fs
loop
add
scas
in
scas
inc
lcall
outsl
mov
push
call
mull
fisubl
and
rclb
jl
out
mov
pop
scas
sub
iret
xor
sbb
sti
pusha
and
dec
sbb
or
insb
out
mov
sbb
pop
mov
ret
lret
dec
jg
rcrl
jae
or
pushf
lods
sahf
and
xor
ds
scas
or
mov
or
add
pop
fbstp
mov
nop
lea
mov
sub
scas
xorb
jmp
cmp
pop
imulb
sub
jl
mov
and
jae
ds
cmpsb
inc
xchg
pushf
inc
lahf
icebp
ja
xchg
push
hlt
test
inc
jmp
sbb
rcl
int
sarl
cli
lods
mov
call
push
cmpsl
fwait
mov
es
les
mov
shlb
and
and
fsubrs
stc
sbb
and
and
and
mov
jnp
lahf
or
test
outsb
or
add
sub
andl
xchg
cltd
fs
or
test
fsubrl
adc
adc
and
mov
xchg
or
jb
shll
aaa
mov
rcrl
push
jecxz
vpaddusw
movl
jge
out
mov
mov
jmp
mov
adc
cmpsb
jnp
lcall
cld
inc
ret
xchg
fisttpl
sti
out
aam
in
into
push
pop
bound
stos
push
andl
pop
popf
rcr
mov
enter
adcl
lcall
fisubrs
jb
mov
aas
xchg
dec
in
dec
fwait
cmp
mov
aaa
out
iret
ljmp
dec
xchg
cs
jmp
jae,pn
mov
test
movsl
mov
dec
sbb
in
fcompl
aas
call
xchg
xor
insb
xchg
rcrb
jmp
cmpsl
mov
mov
sub
mov
in
shl
pop
in
dec
push
out
jle
insb
jnp
outsl
cli
jne
je
mov
ja
sti
je
add
and
xor
adc
add
test
hlt
das
and
cli
decl
dec
inc
cmp
loope
push
xlat
adc
and
xorl
sub
xchg
cltd
push
inc
insl
mov
pop
mov
mov
ds
repz
mov
add
repz
fwait
add
xor
jo
call
and
pop
dec
lods
mov
jecxz
ret
or
ret
ja
add
mov
out
hlt
xor
ficomps
jae
mov
outsb
xchg
ret
dec
insl
jmp
js
incb
repz
mov
mov
sbb
loope
xchg
int3
cmp
das
lret
std
jecxz
add
mov
lcall
ds
shrb
xchg
cmpsl
jbe
iret
pop
sub
cmp
cs
xor
and
sub
push
clc
into
lea
test
cmc
ret
push
xchg
out
pop
push
mov
sub
pop
jecxz
push
pop
sbb
jl
jge
mov
test
fistpll
mov
pusha
movsl
mov
xlat
xchg
and
scas
or
or
push
es
or
sahf
out
xchg
xchg
sbb
lahf
insl
mov
and
cmp
add
jnp
adc
imul
hlt
mov
leave
sbb
xchg
shll
inc
or
les
dec
cmp
add
filds
in
push
push
aam
cmp
push
dec
inc
fnclex
lcall
lock
ljmp
sahf
shrb
test
xchg
pop
jae
push
sub
out
pop
jle
xor
push
int3
fldcw
push
shrb
mov
mov
aaa
push
mov
mov
sbb
mov
inc
and
or
push
mov
stc
movsl
js
ss
je
movsb
loopne
dec
leave
push
adc
dec
mov
subl
cld
pop
mov
add
dec
lahf
pop
jns
and
sub
push
jb
xchg
xchg
mov
mov
fiaddl
in
cmpb
lds
mov
and
and
popf
in
lcall
std
sbb
sti
jns
rcrb
mov
orl
in
mov
sar
negl
mov
imul
repz
cmpb
jbe
mov
dec
cmpsb
cmpsb
jae
xchg
frstor
icebp
lahf
outsl
inc
adc
mov
sbb
and
add
int
mov
xchg
xchg
movsb
in
test
lcall
push
cmc
xchg
fwait
sti
push
in
push
sub
roll
mov
pushf
push
in
insb
xor
push
sub
test
les
sbb
add
push
jo
jmp
outsl
pop
aaa
pop
push
sbb
adc
aam
loope
in
cli
or
scas
mov
bound
mov
pop
incb
enter
mov
aaa
xchg
adc
imul
add
mov
ja
sti
into
sarb
jge
into
sbb
lea
mov
cmp
int
mov
mov
xor
popa
sub
hlt
xchg
int
inc
dec
push
repz
pop
imul
je
outsb
mov
push
xchg
and
sub
lea
jne
xchg
and
ljmp
hlt
push
sub
mov
lods
psadbw
jmp
mov
fcoms
cli
mov
loopne
cmc
fdivr
push
jns
jl
insb
in
xchg
jecxz
das
or
lods
aam
sbb
testl
out
push
adc
je
repz
and
sbb
dec
push
push
inc
jge
cmp
mov
pop
imul
sub
ret
inc
cs
add
imull
mov
jbe
mov
sbb
and
mov
mov
mov
cmpsl
cld
add
sti
and
jo
cld
sub
add
inc
jecxz
adc
fcmovb
push
push
scas
ds
aas
xchg
jno
mov
popf
mov
pushf
or
mov
mov
out
out
mov
out
xchg
icebp
xchg
xor
in
mov
imul
js
or
dec
nop
ja
jg
test
mov
xor
xchg
pop
in
mov
cmp
mov
clc
test
jmp
test
inc
divb
lret
push
adc
mov
repz
cli
mov
mov
pushf
xor
pop
xchg
push
mov
mov
dec
pop
inc
xor
mov
mov
jge
push
jne
in
sbb
jno
dec
dec
xchg
jecxz,pt
movsl
push
mov
cmc
rcl
aas
xchg
mov
js
push
das
aad
dec
sub
ljmp
cmp
popf
outsb
into
insb
test
inc
xor
jb
xchg
pop
add
ret
fbld
pop
notl
xor
cmpsb
adc
ret
out
mov
lods
faddl
and
cmp
jp
jns
mov
mov
jbe
dec
scas
push
xor
lret
fisttpll
ljmp
push
std
sbb
push
cmpsl
dec
clc
lret
lret
jp
clc
fdiv
lds
cs
scas
lret
cmp
test
xchg
or
cs
sbb
or
sbb
push
xchg
add
mov
rcrl
mov
sbbb
xlat
call
jl
sub
sbb
cli
dec
xor
mov
push
sub
sti
jle
sub
bound
es
mov
mov
mov
adc
stos
adc
in
jg
dec
jb
movsb
push
and
cltd
push
mov
or
movb
fidivrl
xchg
xor
sarb
cwtl
inc
sahf
inc
mov
mov
gs
pushl
mov
jl
xchg
subb
icebp
js
subl
fsts
iret
mov
xor
mov
mov
xorl
pop
in
push
xlat
in
push
sarb
fwait
scas
cmp
push
push
je
insl
scas
adcb
cwtl
ljmp
and
scas
ret
movsl
inc
test
pop
and
ret
roll
mov
and
andl
sbb
fisubs
addr16
and
jo
xchg
test
arpl
dec
adc
mov
cwtl
out
rclb
int3
mov
cmp
mov
loope
dec
mov
cmc
out
and
cmp
mov
test
das
test
cmc
sbb
mov
sti
jo
notl
imul
lret
les
mov
addr16
cmp
xchg
pusha
jns
and
dec
ret
cli
cmp
in
imul
sub
ss
ret
test
push
dec
inc
jp
xchg
sbb
inc
les
push
push
in
xor
cmp
mov
xchg
xchg
stc
out
xor
fs
fstpt
mov
dec
sarb
push
loopne
clc
pop
cmp
jmp
nop
mov
sbb
cli
clc
xor
popa
mov
mov
mov
pop
xchg
rolb
mov
jb
dec
aad
gs
icebp
push
sbb
lret
aad
sarb
cli
outsb
mov
mov
aas
mov
in
adc
mov
sbb
daa
push
pop
mov
roll
mov
ret
das
and
test
push
orl
hlt
out
enter
ret
push
inc
push
repz
sahf
pop
jg
push
sub
pop
or
adc
mov
loop
mov
arpl
jge
fwait
test
int3
dec
sub
rcll
bound
mov
js
jg
les
mov
cmp
sub
and
xor
sub
scas
mov
adc
ja
mov
mov
jle
lahf
mov
insb
mov
jne
mov
out
push
mov
add
sbb
lcall
inc
inc
sub
and
or
inc
lds
push
mov
repz
mov
push
pop
jns
sahf
je
xor
dec
cli
push
ljmp
out
push
mov
pop
add
pushf
lods
in
decl
nop
dec
inc
mov
lock
addb
dec
scas
enter
mov
mov
popf
mov
jecxz
iret
int
into
outsb
mov
jb
xor
aas
cmp
jge
fs
negb
mov
xlat
sbb
sysenter
bound
dec
adc
lods
mov
andb
orl
mov
inc
call
loopne
and
ret
cmp
xor
pop
fwait
into
jnp
in
mov
add
ss
dec
mov
aad
or
ss
das
cmc
xchg
mov
dec
nop
push
testb
mov
outsb
inc
sub
mov
xor
daa
add
push
cmp
inc
nop
icebp
into
dec
orb
lods
ds
push
fwait
mov
sub
add
in
scas
testb
ficoms
mov
ret
icebp
mov
in
push
test
imul
dec
cmpsl
out
in
std
mov
pop
ljmp
push
pusha
cmpps
vpaddsw
scas
pop
mov
sbb
pop
inc
aam
fistps
stc
cmc
or
mov
or
and
mov
and
ret
jno
lock
cmp
jle
in
imul
fmuls
mov
loopne
add
aas
mov
insb
cmp
js
dec
jne
adc
insl
sub
or
push
adc
and
jnp
mov
test
ret
clc
aad
or
inc
dec
mov
sub
xor
mov
lds
lods
repz
int3
pop
push
popa
pop
push
movsl
xor
push
sub
popa
jecxz
lods
shlb
pop
jo
add
out
movsb
dec
shr
and
cs
mov
xor
mov
push
and
jo
int3
aaa
dec
in
jb,pt
push
mov
sub
lret
cmc
pop
fisubrs
mov
notl
mov
pop
mov
xor
dec
ret
das
pop
aam
shl
int3
cld
add
mov
cwtl
ret
mov
out
fimull
rorb
adc
and
lret
test
cmp
lret
pop
popa
leave
out
pop
dec
xor
dec
adc
jne
xor
push
pop
aam
sbb
sarl
fidivl
adc
xchg
cmc
cld
pop
call
imul
mov
xor
shll
xor
roll
jbe
mov
or
js
in
ja
or
stos
inc
repnz
inc
roll
lret
es
jecxz
xor
cmp
cltd
es
mov
push
add
push
int
pop
stos
or
cltd
test
inc
jns
pop
addr16
xchg
mov
cli
dec
xor
ja
mov
iret
push
ds
jmp
cltd
fmull
pop
jl
std
xchg
nop
rep
jl
push
dec
sbb
enter
add
mov
fdivs
xlat
sbb
mov
lahf
cwtl
aas
add
fwait
aam
inc
inc
sub
inc
jne
jae
adc
adc
cmpsb
lods
jg
mov
cmp
inc
fcomps
xchg
lods
mov
fisubs
subb
insb
push
arpl
out
xor
pusha
cmpsb
pop
lock
in
push
aad
daa
into
pop
loop
push
lret
cmpsl
or
lret
or
pop
push
sbb
das
fldl
dec
icebp
mov
lcall
imul
fldl
aas
mov
stos
mov
or
fwait
mov
cwtl
push
inc
cli
sub
inc
rcl
data16
insb
dec
insl
cmp
jne
out
xchg
ror
aad
xchg
test
js
push
or
cmp
mov
add
into
test
ret
mov
jns
fldt
xchg
jp
mov
mov
sub
jmp
adc
cmp
push
int
push
int
sub
les
dec
daa
sahf
lahf
pop
xchg
stos
imul
jbe
movsb
inc
imul
mov
jno
scas
sbb
test
loopne
test
xchg
fcoms
scas
push
in
iret
sub
lcall
mov
cli
aaa
mov
iret
adcl
add
movsb
push
jbe
xchg
movsl
jo
aam
out
sbb
dec
cmpsl
mov
arpl
repz
ljmp
inc
cmpl
stos
pop
out
cltd
sarl
icebp
test
or
cmpsb
xchg
fwait
sub
mov
movsb
cld
and
dec
ret
cmpsl
divb
mov
and
xchg
cli
mov
mov
cld
mov
js
cmp
xchg
xor
xor
sarl
add
sahf
mov
scas
xor
push
aam
push
aad
mov
scas
gs
sti
lock
xlat
pop
in
imul
or
pop
mov
jno
cmp
push
fldt
loope
arpl
fs
jo
cld
aaa
jne
rcl
dec
cwtl
jb
cmp
dec
aas
inc
dec
lods
push
hlt
inc
std
and
andl
fnclex
iret
je
test
fimull
pop
cwtl
mov
shll
aaa
dec
cmp
into
add
lods
jae
xor
jne
jge
jle
in
xor
add
cmp
mov
leave
fisttps
adc
adc
mov
mov
or
jb
sti
in
and
mov
jnp
lret
scas
dec
jno
or
rcrb
xchg
jp
ds
sub
inc
popf
inc
push
cmp
es
push
jl
jno
lds
inc
pushl
fsubs
je
xchg
call
mov
cld
lret
inc
inc
dec
push
filds
xor
loope
jbe
lock
sbb
jmp
xchg
fwait
pusha
push
cs
pusha
mov
mov
xchg
xchg
mov
jns
aad
adc
into
aad
adc
pop
xor
pop
adc
hlt
xor
push
in
aaa
sahf
sub
inc
push
mov
cmc
out
lahf
dec
lock
repz
imul
fidivl
shrl
aam
icebp
or
les
cmp
and
adc
out
sbb
ficoms
jb
out
movsl
and
sbb
loop
lods
sar
jbe
fidivrl
mov
add
inc
lea
xchg
push
lcall
xchg
sbb
mov
das
xor
dec
add
aas
rcll
or
fistl
int
rclb
jmp
cmp
jne
outsl
cmp
sub
inc
jl
sbb
lea
bound
aaa
mov
fcomps
lcall
aam
and
outsl
and
stos
pop
xchg
int
dec
daa
cmp
pop
add
add
sbb
xchg
in
inc
hlt
sahf
js
mov
jp
push
xchg
cltd
and
mov
push
sub
jp
add
mov
or
add
addr16
cld
xor
jb
es
jp
test
adc
sub
les
inc
inc
dec
jae
jb
stos
fwait
ret
cli
loop
adc
stos
mov
jg
and
test
enter
ficomps
pop
rclb
cwtl
cmp
mov
xchg
cltd
into
cmpsb
pop
lret
or
xlat
sahf
push
ds
icebp
out
sahf
pop
push
adc
push
out
call
cmpsb
mov
pop
ret
lcall
mov
mov
loope
clc
stos
pop
fsubrs
mov
inc
xlat
mov
leave
push
mov
add
lea
stc
push
mov
ja
add
inc
xchg
jnp
cmp
dec
jp
sbb
shlb
pop
pop
inc
or
mov
das
lret
xor
mov
andb
jne
sbb
cwtl
call
insb
fcmovne
call
jno
mov
mov
adc
inc
pushl
ss
faddl
lods
test
in
pop
adc
ret
jg
nop
and
lods
loopne
inc
jp
xchg
insb
subl
fcomps
and
adc
es
popa
adc
fcoms
and
scas
ljmp
lret
mov
popf
dec
xchg
mov
jmp
orb
inc
test
pusha
sub
fsubr
lahf
adc
rcr
lods
xor
fcompl
pop
jbe
arpl
xor
dec
or
imul
punpcklbw
lret
xchg
aaa
lods
mov
sub
cmp
pinsrw
in
mov
out
adc
push
sbb
adcb
movl
sub
push
cmc
mov
fadds
scas
cmp
push
mov
outsb
mov
ss
mov
add
add
fldl
ss
lahf
sbb
fcompl
add
jae
add
add
push
mov
cs
inc
mov
loope
cltd
sub
dec
out
jae
iret
mov
inc
int3
js
inc
mov
push
aas
mov
mov
lret
mov
dec
mov
xor
jecxz
add
mov
push
or
jb
sar
scas
jbe
dec
xchg
mov
std
push
dec
ljmp
jno
es
jae
or
xor
call
movsb
sbb
mov
std
cmp
aaa
arpl
adc
add
xor
and
rol
rcl
jecxz
pause
addl
push
inc
inc
push
jo
pusha
jae
add
adc
and
xor
ret
rcl
jecxz
pause
addl
push
inc
jo
adc
pusha
jae
add
xchg
xor
loopne
rolb
roll
jecxz
pause
adcl
inc
inc
sbb
sub
jae
add
adc
and
jns
jecxz
test
or
insb
dec
pop
pop
dec
jo
lahf
fisubrs
fidivs
jle
outsb
adc
dec
cmp
push
jg
jg
out
lahf
fisubrs
scas
fistps
or
dec
aas
ds
push
outsl
push
jg
xchg
out
lahf
fidivs
scas
sahf
testl
aas
push
push
dec
xor
pusha
jg
out
imulb
and
ds
sub
arpl
rclb
sub
inc
inc
xchg
inc
sub
xchg
gs
mov
lret
aas
ror
or
outsl
lock
jo
sbb
lock
fneni(8087
cltd
mov
adc
add
mov
pop
cmpsl
pop
jnp
into
jg
fucomip
lahf
test
dec
mov
mov
add
jle
ror
push
mov
add
negb
out
movsl
and
adcb
mov
sub
outsl
sbb
cltd
scas
je,pn
cmc
outsl
ds
aad
jb
push
add
cmpsb
cmp
das
add
sub
nop
outsw
mov
mov
scas
fistps
pop
outsb
pop
pop
ss
es
cs
push
outsl
push
sbb
scas
stos
mov
sti
or
aas
pushw
cmp
and
pop
outsl
pop
adc
negl
clc
mov
mov
pop
pop
or
jp
insb
add
sbb
into
iret
lret
scas
fistps
movd
pop
das
dec
aas
ds
cs
push
outsl
push
jg
out
lahf
fisubrs
scas
fistps
movd
pop
das
dec
aas
ds
cs
push
outsl
push
jg
dec
sbb
ljmp
or
jle
das
fs
sbb
dec
shll
fnsave
xlat
cwtl
dec
jnp
pop
sbb
popf
scas
aam
cmp
mov
cmp
sub
imul
xor
dec
pop
mov
dec
mov
sbb
xor
sbb
shlb
lcall
loope
cmc
cmp
movsl
adc
jo
mov
mov
xchg
sti
js
ret
ss
adc
lods
loopne
mov
or
or
in
add
jno
pop
rorl
adc
dec
mov
sbb
sub
cmc
shlb
jecxz
fidivrs
mov
xor
adc
dec
rolb
mov
ljmp
fcmovnu
lods
mulb
sbb
sub
dec
js
dec
mov
ds
jg
ret
daa
inc
push
in
or
lret
sarl
jne
lcall
or
popa
mov
adc
cmp
xlat
jne
pop
jp
mov
stos
mov
cwtl
jne
popf
pushf
inc
shlb
lret
push
xor
inc
inc
jns
imul
scas
cmp
sarl
adc
dec
lea
fld
shlb
mov
lea
ss
fcoms
xchg
popf
pop
das
loopne
ficompl
add
adc
pop
mov
sub
mov
jo
push
sub
and
movlps
xor
outsb
retw
shlb
xor
pop
push
xor
cmpsb
push
adc
inc
ror
push
xchg
imul
inc
outsl
mov
sahf
stc
adc
scas
mov
add
mov
add
in
mov
and
roll
in
dec
mov
popa
insl
leave
xchg
and
xchg
xchg
or
in
push
outsl
cmp
sbb
int3
gs
inc
nop
or
or
cmpsb
pop
xor
ljmp
dec
sbb
dec
push
ss
sub
out
mov
popf
ret
add
adc
pop
sbb
movsl
pop
cs
inc
xlat
jne
push
lea
mov
fcoms
jle
shll
pop
call
dec
scas
sub
es
push
mov
inc
stos
xchg
mov
daa
shrd
jle
mov
push
lods
xor
in
ljmp
das
or
adc
shl
adc
xor
push
ds
xor
out
daa
movsb
sub
inc
call
mov
pushf
pop
jne
xchg
scas
xchg
js
inc
pusha
in
xlat
jmp
pop
pusha
sub
push
les
cld
fnstenv
push
sbbb
mov
mov
mov
xor
cmp
push
int
mov
xorb
rclb
lds
mov
sub
inc
mov
mov
push
mov
std
insl
jmp
scas
adc
dec
orb
dec
pop
xor
mov
mov
jle
or
aam
aad
ret
std
mov
aas
lcall
fwait
out
add
daa
out
fsubr
data16
add
loop
in
or
shrd
scas
mov
or
js
shrb
inc
lret
pop
dec
int
imull
inc
adc
mov
or
popf
jbe
ret
jno
call
insl
mov
jns
or
xchg
sar
jge
mov
jl
hlt
cmpsb
mov
xor
aam
push
add
ja
rcr
sti
push
jbe
pop
or
gs
mov
test
ljmp
mov
rorl
imul
mov
into
and
push
pop
pusha
jle
sbb
sahf
fisubrs
or
adc
jp
jge
lcall
sub
test
push
mov
jno
lds
add
push
adc
popa
aad
stos
fisttps
xlat
add
cmp
cmpsl
pop
insl
lds
ja
or
pop
jno
rclb
mov
jo
mov
pxor
lcall
call
pop
std
lret
mov
jg
xchg
cmc
jmp
nop
adc
sti
mov
test
lds
cmp
mov
les
leave
es
adc
out
hlt
xor
push
clc
mov
idivl
or
push
xrelease
and
das
adc
xchg
push
pop
sbb
fs
xor
inc
call
mov
or
mov
push
orb
pop
push
dec
imul
out
rcll
sub
lret
inc
add
and
pop
sbb
mov
xor
scas
ss
inc
xchg
pusha
mov
jp
xor
js
pop
inc
test
pop
xor
inc
sub
pop
jecxz
inc
loop
and
sbb
and
mov
pushl
loope
push
inc
push
out
sub
ljmp
dec
xchg
xor
xchg
push
jbe
test
push
mov
add
ljmp
decb
and
or
jbe
inc
fwait
mov
cs
fcom
ja
jb
sub
pop
push
push
insb
ljmp
pop
fdivrp
sub
test
shlb
shrb
repnz
in
add
lret
stos
jbe
lods
out
push
pop
mov
imull
inc
pop
cli
dec
xchg
daa
sahf
jb
pop
xor
xor
xchg
sub
sbb
mov
adc
insb
mov
or
aaa
out
push
cs
inc
jno
and
imul
jbe
outsb
out
xchg
sbb
mov
xchg
inc
sbb
xchg
bound
xor
in
in
in
ljmp
sbb
dec
into
dec
stos
popf
movsl
push
mov
test
mov
in
or
push
popf
sbb
mov
mov
fldenv
rcr
imul
rcrl
fidivrs
sub
in
mov
xor
andb
or
jg
sub
inc
pop
aas
xor
mul
sarl
push
imul
or
mov
sub
sbb
mov
dec
mov
and
popf
mov
xchg
fmul
stc
in
iret
dec
enter
inc
lret
cmpb
shrb
das
xchg
das
pop
movsb
fsubs
mov
add
mov
in
rcr
ret
ss
inc
daa
jmp
ljmp
sahf
je
ja
jl
inc
mov
add
int
or
testl
adc
sub
sub
es
jmp
mov
inc
cmp
jae
enter
mull
inc
lods
push
jns
and
push
mov
mov
aad
xchg
gs
repnz
xchg
cmc
dec
mov
js
fwait
pop
add
out
add
and
xchg
sahf
jno
icebp
xchg
pop
jle
sbb
ja
lcall
mov
mov
jge
pop
xor
mov
cld
pop
pop
stc
cmpsl
add
xchg
pop
stc
jns
movsl
jge
call
faddl
xor
ja
cltd
insl
out
outsb
mul
mov
cmp
or
xchg
mov
pop
in
fsubs
clc
xor
ljmp
mov
mov
pop
das
in
dec
lret
lahf
push
xor
es
popf
aaa
adc
and
es
jno
fnstsw
inc
mov
sbb
inc
mov
pop
xor
call
leave
fcomps
clc
stos
mov
inc
or
cld
dec
cld
pop
je
ss
in
adc
dec
in
jb
dec
jmp
jg
movsl
ds
fsub
rolb
pop
outsb
jnp
pop
mov
adc
add
call
gs
out
inc
or
jmp
inc
in
clc
xor
pushf
fists
inc
inc
lods
mov
sub
aad
dec
popl
testb
cmp
out
out
loope
jbe
cmc
jo
data16
mov
je
clc
mov
inc
shrb
inc
fiadds
and
stos
jl
lods
sub
sbb
outsl
adc
jae
dec
shl
loope
xlat
push
pop
in
daa
fdivrl
mov
jae
fwait
cltd
pop
xor
inc
insl
and
out
lea
daa
sub
sti
and
mov
mov
xor
or
xchg
sub
imul
mov
dec
hlt
jne
xor
insl
dec
in
fs
push
mov
push
or
dec
adc
shlb
mov
imul
push
bound
aad
or
mov
lret
loope
xor
pop
sbb
sub
rolb
xlat
lret
test
les
repnz
xchg
jo
sub
sub
mov
fidivrs
in
jae
or
lock
cmp
add
jg
pop
sbb
push
add
push
xor
ret
sub
data16
mov
sbb
jns
xchg
jo
sti
or
inc
cmpsl
push
mov
jmp
xchg
or
mov
sub
mov
xchg
jmp
negb
xchg
dec
dec
jmp
mov
push
push
add
sbb
insl
imul
shlb
test
dec
aad
push
push
lcall
add
sbb
outsb
pop
sbb
add
sub
cmp
cmc
xchg
sub
mov
lods
lret
outsb
mov
shll
add
dec
out
arpl
jecxz
lock
fstp
sti
dec
lock
cmpsl
scas
push
repz
cld
xor
mov
xchg
dec
insb
adc
rorb
inc
cmpsl
push
icebp
daa
mov
outsl
or
push
jge
mov
fiadds
sbb
jno
push
pushf
ret
iret
push
sub
insb
loopne
mov
xor
pop
jle
or
dec
push
aaa
jbe
clc
dec
mov
imul
mov
cmc
dec
insb
mov
cld
pop
inc
cmc
jno
jle
pop
enter
dec
xchg
stos
in
xor
xlat
xchg
mov
lret
movsl
dec
idivl
movsl
or
sub
subb
xchg
sbb
mov
ljmp
xor
lds
jge
xchg
or
sub
mov
std
and
bound
push
movnti
push
add
push
push
jmp
mov
jg
cmp
and
bnd
adcl
out
clc
leave
push
stos
pusha
add
adc
mov
bound
or
sub
iret
inc
loope
fld
mov
push
push
in
xorl
les
aam
push
mov
sub
inc
inc
data16
incb
pop
outsl
stos
mov
popl
sbb
std
mov
lret
pmaddwd
sbb
adc
imul
pop
insl
dec
out
xchg
bound
jle
insb
sub
and
hlt
ljmp
sub
ret
pop
mov
lahf
sub
es
mov
movsl
shl
xchg
inc
outsb
rorl
cs
aad
mov
movl
xchg
lods
and
lahf
sbbb
mov
cli
xchg
cld
sbb
cmp
shll
xchg
jge
pop
or
enter
stos
jge
ret
sbb
sub
xchg
pop
pusha
jmp
mov
xchg
add
xor
rcrl
sub
lret
add
call
imull
cmp
xor
ret
lret
xor
mov
testb
xor
fwait
mov
icebp
and
cmc
mov
xor
pop
mov
int3
dec
mov
int
mov
or
push
jmp
mov
adc
mov
push
mov
or
push
outsb
cmp
push
push
xchg
push
push
pop
jmp
in
mov
pop
dec
xchg
xchg
cmp
cmc
orps
shlb
push
loop
call
es
jl
fisubrs
bound
cmp
adc
sub
out
pop
shr
hlt
aad
mov
mov
ds
and
das
mov
and
pop
add
test
pop
mov
cli
inc
sub
sub
sarw
push
xchg
mov
mov
cmp
adc
int
sub
test
popa
lods
pop
je
stos
lods
pop
xchg
lock
int
out
mov
hlt
lds
jae
sbb
dec
stc
cmp
daa
cmc
xor
inc
mov
and
jg
or
push
movsl
jecxz
push
mov
mov
sub
fdivs
in
cmpsl
imul
nop
and
mov
and
sahf
stos
pop
aas
pop
push
ljmp
jp
add
cmc
cmp
ljmp
icebp
stos
jl
xor
dec
popa
mov
pop
sub
imul
push
pop
push
out
or
aad
gs
inc
imul
stc
out
pusha
push
inc
rcll
in
jno
push
and
sarb
dec
inc
fs
xchg
ret
jmp
aaa
fdivl
inc
mov
fistps
insl
call
sbb
push
mov
xchg
leave
sub
cmp
out
cltd
orl
xor
mov
cmpsb
sub
xor
cmp
push
mov
add
mov
xor
aad
push
enter
outsb
pop
mov
inc
pop
jecxz
scas
inc
in
jecxz
aad
inc
adc
xlat
imull
xchg
mov
inc
in
lahf
frstor
loopne
outsb
test
aam
lcall
dec
mov
mov
pop
sub
or
sbb
xchg
dec
fsubs
or
andl
arpl
mov
dec
sub
push
jno
sub
add
jnp
mov
add
xchg
jns
pop
test
pop
xchg
rorl
out
push
out
jle
jg
add
add
inc
cmp
add
outsl
cmp
lods
dec
cmp
into
aaa
out
push
sbbl
jge
add
fmuls
mov
mov
adc
mov
mov
stos
in
ljmp
in
shlb
jg
repz
fidivrs
ds
xchg
mov
inc
add
push
sub
fmuls
imul
mov
adc
mov
movsb
fs
shll
mov
mov
mov
add
rorl
xchg
rorl
dec
cmpsl
lock
call
out
movsl
pop
lahf
xorl
xchg
xchg
xor
push
dec
in
and
xlat
add
jnp
test
fists
movsl
pushf
mov
mov
out
xchg
push
loop
mov
cmp
push
push
ficoms
das
imul
movsl
cld
xchg
dec
inc
out
adc
in
jle
test
in
sbb
rolb
cmp
call
fistpl
cmc
fimuls
into
mov
dec
sbb
cmp
adc
mov
pop
bound
or
adc
push
push
add
jne
out
insb
sbb
and
inc
shlb
cmp
aaa
gs
loop
int3
dec
and
mov
or
hlt
dec
adc
imul
add
loopne
pop
ljmp
stos
pop
roll
lret
sti
xchg
push
fbld
mov
push
in
push
jl
and
imulb
xor
fs
add
stc
ret
fildl
push
sar
mov
repz
sub
xchg
mov
sbb
jae
ja
xor
xchg
inc
fdivrl
or
addr16
mov
in
jno
lds
repnz
es
loope
out
sbb
adc
xor
gs
mov
jge
jb
sti
push
inc
mov
dec
dec
mov
nop
mov
and
repnz
xor
das
xor
sub
inc
ret
dec
inc
addr16
inc
inc
in
jnp
push
loope
enter
aam
aam
test
fdivr
loopne
cwtl
fsubr
ror
push
arpl
cmp
pop
pop
hlt
xor
pop
jo
xchg
pop
jo
fsts
adc
loop
xchg
mov
mov
out
sub
in
add
sub
outsb
mov
fwait
push
mov
pop
repnz
adc
rcrb
imul
subl
fdiv
push
adc
fcomi
sbb
or
jg
add
into
out
xchg
or
ja
dec
adc
js
sbb
mov
fstpt
arpl
adc
outsl
arpl
out
xor
pop
scas
ljmp
fsubr
add
mov
lods
mov
push
cmp
push
lock
int3
cmp
dec
xchg
in
arpl
jl
fcomps
neg
mov
aaa
ret
sub
push
sbb
push
cmpsb
jb
adc
xor
push
pop
mov
mov
jge
sub
jbe
jnp
adcl
ret
mov
fnsave
or
adcl
pop
xchg
mov
popa
movsb
stos
or
mov
push
inc
inc
cmpb
inc
and
lret
push
xchg
cmp
jae
iret
mov
data16
jmp
popf
xchg
loop
hlt
pop
std
fnsave
fistl
push
repz
cmp
adc
mov
and
arpl
lods
sub
repnz
popf
cli
stos
bound
dec
ss
inc
int
push
mulb
mov
pop
enter
fucomi
xor
sbb
stos
jp
dec
insb
test
push
push
or
add
aad
adc
cs
mov
enter
sbb
cmpb
and
popa
adc
loop
shlb
sub
negb
mov
inc
jno
sub
sbb
pop
cwtl
xchg
ljmp
out
cli
fsubrs
jecxz
adcb
loopne
scas
out
inc
mov
std
out
mov
andb
repz
repnz
fadd
add
xchg
loope
inc
mov
jnp
dec
pop
sbb
repz
sub
ljmp
xor
nop
xchg
adc
and
jecxz,pt
xor
inc
lock
lcall
sbb
mov
imul
jl
psubsb
xchg
daa
add
lods
daa
xchg
pop
pop
popa
jno
loop
movsb
mov
outsb
jae
inc
pop
xchg
in
push
mul
push
xor
pushf
sbb
jb
add
outsb
jmp
cmpsb
dec
push
cmp
cli
fdivrs
adc
test
mov
jle
fwait
es
lcall
mov
dec
push
dec
sub
push
leave
mov
stos
cmp
mov
hlt
shrb
jp
sub
mov
fwait
sub
push
dec
stos
outsb
fstpl
lahf
dec
repz
and
popf
pop
add
or
bound
dec
loope
ljmp
in
add
cli
ds
fldt
fldl
test
aas
push
ffreep
stos
push
out
das
sub
mov
xor
lret
xor
addr16
lcall
bound
aam
into
mov
pop
mov
or
mov
in
xchg
loopne
xor
pop
inc
or
xchg
jns
roll
mov
pop
mov
rcrb
mov
adc
and
jo
int
outsb
out
inc
jle
xor
movsl
and
mov
jecxz
push
adc
lock
fdivrp
ds
cmp
call
sub
lods
outsb
and
enter
sbb
add
ret
or
jns
mov
jae
inc
jno
adc
cmp
xor
push
mov
rorl
fs
add
dec
clc
lret
in
xchg
fstpl
sub
pop
xchg
sbb
jmp
test
and
pushf
ss
jns,pn
int3
pop
stc
xchg
inc
adc
rorl
sub
pop
fisttpll
mov
cmpsb
mov
stc
sbb
jle
fdiv
sbb
adc
mov
into
add
xor
std
loop
xchg
sarl
mov
dec
adc
les
repz
cmp
cmp
mov
mov
lods
sbb
jmp
mov
stc
fists
sbb
ss
or
aas
xlat
imul
lret
sbb
fidivs
lahf
or
insl
and
jne
pop
test
adc
mov
sub
lods
das
in
add
cmp
out
or
cs
outsl
sti
out
dec
icebp
jl
pop
shrb
pop
lock
pop
xchg
dec
inc
sub
sti
xchg
scas
sub
not
movsl
test
or
dec
popl
aad
cmp
fnstsw
sti
scas
sbb
aam
fbld
in
push
sbb
cltd
orb
pop
lret
pop
mov
sub
or
xor
mov
scas
jecxz
sti
imul
std
mov
adc
sbb
pop
add
add
scas
inc
iret
adc
movb
pop
mov
push
scas
stos
fwait
addr16
aas
loop
mov
adc
cld
jo
add
aad
lret
push
jl
mov
mov
clc
outsl
push
in
imul
jecxz
mov
xor
int
mov
orl
sti
bound
jmp
add
inc
mov
in
cmp
addl
dec
ret
inc
push
dec
test
in
into
mov
sahf
out
mov
jle
outsb
pop
pop
das
dec
aas
ds
cs
push
outsl
push
jg
out
lahf
fisubrs
scas
fistps
movd
pop
das
dec
aas
ds
cs
push
outsl
push
jg
out
lahf
fisubrs
scas
fistps
movd
pop
das
dec
ds
cs
push
outsb
push
jg
out
lahf
fisubrs
scas
fistps
movd
dec
cmpsb
mov
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
push
rorl
jecxz
sub
out
pushf
fimull
inc
aas
addr16
adc
outsb
xor
sahf
rorl
jecxz
xchg
into
xchg
mov
xlat
push
pop
push
inc
pop
jae
arpl
dec
add
outsb
and
jmp
sti
fimuls
out
mov
pop
or
cmp
inc
add
mov
push
pop
out
inc
add
mov
pusha
push
jmp
mov
int3
in
lret
roll
dec
lret
cli
out
mov
jecxz
jo
dec
fwait
pop
imul
mov
ret
xchg
fistpl
dec
vprotb
ficompl
inc
test
sbbb
push
mov
mov
pop
lea
mov
xchg
loop
push
out
es
mov
mov
mov
int3
xor
jno
in
or
xchg
ss
idiv
mov
jnp
outsb
mov
fimull
pusha
xchg
cmpsb
data16
mov
or
imul
mov
repz
fsubrs
dec
mov
jecxz
xor
rol
sarl
xchg
into
cmp
out
mov
ds
jp
or
jle
outsb
and
ror
mov
xchg
loopne
popf
xchg
stos
loop
fisttps
inc
push
ja
push
sub
add
pop
sbb
mov
out
mov
xchg
xchg
dec
daa
arpl
inc
push
dec
popa
adc
push
jno
call
xchg
mov
mov
mov
jae,pt
arpl
dec
add
outsb
and
repz
jecxz
xchg
into
cmp
out
mov
jae,pt
arpl
dec
add
outsb
and
je
loope
sbb
pop
fistps
push
or
dec
arpl
sarl
test
insb
xor
es
hlt
mov
outsb
ret
in
popf
iret
or
int
or
fdivl
sarb
scas
or
mov
rcrb
and
mov
fiaddl
and
push
daa
cld
push
leave
icebp
stos
sahf
mov
xchg
lock
push
xchg
add
into
dec
movsl
mov
outsl
ss
imul
stc
adc
sbb
adc
bound
jp
xchg
or
mov
jmp
fbstp
lret
mov
call
inc
int
mov
pop
ds
inc
iret
sub
xchg
popf
dec
sub
push
xchg
inc
mov
pop
jp
hlt
xchg
xor
mov
push
jo
push
xchg
pop
rcrl
jnp
in
test
out
into
daa
rcl
cbtw
pop
inc
add
bound
push
pop
fnstcw
inc
mov
xchg
xor
test
popf
or
and
bound
jp
gs
pop
pop
adc
and
push
das
out
leave
xchg
lock
cmp
xchg
lcall
cmpsb
sub
outsb
jge
sarl
movsl
xchg
push
add
stc
jl
mov
push
and
mov
imul
xor
push
or
dec
lods
mov
mov
xlat
and
mov
pop
adcl
inc
test
addl
pushf
idiv
dec
in
dec
adc
sbb
pop
cmp
add
test
aaa
lahf
cmpsb
xchg
push
cmp
sbb
es
jge
sti
sahf
repz
cwtl
mov
adc
test
lea
rorb
xchg
jg
mov
mov
popf
mov
vphaddudq
cli
pop
int
pop
xchg
pushf
movsl
mov
push
ret
mov
xchg
adc
mov
add
sub
sub
fwait
jle
inc
mov
mov
cmc
icebp
aas
lahf
mov
ja
frstor
into
fcmovbe
inc
xchg
rolb
aaa
iret
fwait
pushf
ljmp
add
lret
fdivrl
pop
adc
add
lret
mov
rdtsc
jae
rcrb
xchg
pop
fistpll
das
cbtw
xchg
imul
leave
mov
lahf
imul
scas
test
in
pop
lds
jmp
movsb
ret
fsubrs
adc
aas
call
int
gs
jae
sbb
in
mov
stc
imull
xor
mov
dec
sub
add
xchg
mov
lods
in
mov
hlt
and
lret
add
fwait
mov
loop
stos
scas
xchg
cmp
aaa
fincstp
dec
sbb
rol
es
adc
mov
xlat
jp
lods
test
xchg
jmp
xchg
and
or
imul
out
push
cmp
test
fdivrs
pop
xchg
adc
jmp
push
imulb
or
in
ds
lret
sbb
xor
ss
jecxz
js
inc
jecxz
imul
stos
ficoms
and
into
xchg
pop
in
popa
dec
fiaddl
test
hlt
flds
mov
in
loopne
mov
mov
adc
or
dec
mov
nop
dec
int
jge
xor
cmp
pop
mov
repz
dec
lahf
or
movsl
add
out
mov
cmp
iret
stos
xchg
dec
loope
add
mov
jns
ds
cld
pop
sbb
mov
stos
jp
loopne
lcall
mov
out
fldl
dec
jg
rcl
push
iret
sbb
int
pop
mov
scas
loop
iret
std
mov
mov
sub
xlat
xchg
mov
mov
sahf
xchg
dec
jnp
stos
mov
lods
imul
sub
mov
and
adc
les
gs
orb
stc
into
sub
mov
jns
dec
ss
push
cwtl
addl
dec
scas
les
rolb
dec
jg
shrl
imul
add
insl
ja
out
sub
xlat
xlat
insb
test
std
dec
scas
cld
mov
mov
mov
popa
pop
push
mov
xor
movsl
xchg
rclb
lods
adc
in
test
hlt
add
movsl
inc
lock
fadds
mov
xor
xchg
stos
xor
test
pop
mov
stos
pop
adc
jno
push
movsl
mov
loop
mov
int3
daa
sub
xor
jo
scas
and
orb
mov
fcmove
adc
lods
nop
nop
jecxz
cmp
cltd
ja
gs
xor
mov
mov
jns
mov
fistl
or
jno
mov
pop
push
fnsave
and
pop
js
add
fs
sub
or
sbb
mov
dec
sub
and
clc
repz
inc
sbb
rclb
roll
and
repnz
jmp
jg
mov
lds
cld
ja
in
loope
dec
push
xor
popf
std
push
xchg
pop
or
cmpsb
aas
and
mov
adc
jo
fcmove
add
mov
dec
fucomip
popa
int
shll
sbb
fidivs
cltd
push
jo
jne
jmp
addr16
hlt
fmul
jg
fsubr
sub
clc
cli
out
push
jns
pop
in
cmp
mov
idivl
loope
rorl
pop
jne
and
lds
fisttpl
mov
xor
int
call
scas
out
mov
fisttps
push
inc
movsl
push
sub
cmp
imull
dec
xchg
movsb
xchg
jnp
push
push
ret
mov
pop
roll
or
jge
int3
lret
push
jp
adc
or
jecxz
cs
div
clc
stos
sub
jno
aam
imul
cmpl
dec
faddp
movsl
ljmp
rolb
mov
cli
xor
sbbl
sub
push
fistpll
push
dec
shl
bound
cmp
jno
jg
sti
push
jne
ljmp
xchg
jmp
mov
adc
fsubrl
xchg
les
addl
sar
fcoml
sahf
sub
jecxz
int
mov
add
fsubr
push
sbb
ds
icebp
mov
fsubrl
and
jb
sub
and
imul
test
scas
sahf
push
cmpb
sahf
imul
sbb
jle
adc
repz
mov
rcr
stos
loop
ss
dec
dec
pop
jne
out
jb
jl
outsb
repz
das
sbb
pop
stc
lahf
jle
adc
andl
imul
fsubrs
idiv
ljmp
imul
xchg
mov
decl
loopne
add
lcall
jmp
jp
out
mov
add
ret
mov
sub
or
fiadds
xacquire
stos
jb
loope
dec
jl
sub
push
jmp
xor
push
outsb
inc
nop
xor
mov
adc
in
mov
pusha
data16
push
push
jmp
cld
lods
sub
push
testl
pop
cli
bnd
in
push
xchg
push
adc
shl
xchg
adc
mov
push
aad
test
mov
jnp
out
cmp
mov
lret
inc
int3
test
shrb
sbbl
mov
dec
daa
enter
out
mov
dec
outsl
xchg
add
jbe
icebp
jge
add
sub
pop
jb
cld
ds
or
in
imul
push
das
jp
lcall
std
fisubl
inc
push
add
adc
xchg
jl
xor
loope
xor
sub
add
or
fbld
lcall
stc
mov
loope
cs
sub
dec
stos
loope
pop
sbb
stos
mov
cmp
in
and
mov
jns
mov
into
and
dec
ds
popf
dec
cmc
insl
adc
inc
lcall
int3
data16
int
push
popf
inc
ds
adc
xor
enter
cmp
std
lea
mov
pop
aad
xchg
inc
xor
adc
xlat
xchg
push
sub
test
data16
int
cmp
cld
fmull
gs
jg
sbb
push
jl
sub
into
xchg
adc
sub
test
xor
iret
push
xchg
xchg
ret
dec
test
xor
add
or
push
push
psraw
jbe
addl
fwait
loopne
adc
add
hlt
cwtl
loopne
outsl
in
dec
cltd
pop
push
inc
fcmovnu
cmpsl
jp
div
mov
dec
inc
mov
addr16
mov
nop
mov
insl
push
and
cmc
into
jb
or
mov
imul
dec
push
int3
ficomps
xor
push
sub
mov
shl
rcr
jmp
sub
inc
add
mov
cmp
xchg
inc
sub
call
loope
jmp
cld
and
gs
insl
ret
das
in
mov
push
imul
dec
je
bound
xchg
aas
sbb
negl
lods
ja
sub
mov
mov
sbb
sbb
mov
aaa
scas
outsb
loopne
or
data16
aaa
add
lret
cmp
pop
lret
enter
daa
insb
dec
out
xlat
jl
mov
and
xchg
daa
xchg
pop
dec
addr16
decb
sbb
cli
sbb
cltd
shlb
xchg
cmp
dec
mov
or
adc
stos
pop
call
push
jmp
mov
sub
and
aaa
movsl
or
cmp
jmp
imul
mov
pop
je
mov
dec
jno
rolb
sub
sub
ds
stos
adc
jecxz
fwait
jl
in
mov
int3
xlat
insb
mov
fidivl
roll
mov
call
int3
negb
mov
adc
test
test
addr16
pop
xchg
mov
stos
fsub
inc
mov
cmpsb
mov
push
loop
push
mov
sti
push
sbb
jle
push
pop
mov
inc
shll
scas
rcl
sbb
pop
push
xchg
mov
std
int
adc
test
mov
pop
or
lock
mov
imul
inc
sahf
loop
xchg
adc
rorl
xchg
sbb
in
push
scas
cld
data16
cltd
ss
sbb
sar
sub
das
fwait
mov
jae
jnp
push
push
sbb
mov
adc
add
outsl
pushf
sbb
lret
stos
not
js
mov
mov
insl
loop
leave
das
or
test
dec
and
aas
and
xchg
cmpsl
jbe
add
lret
mov
mov
movsb
gs
jo
or
nop
or
sub
add
addr16
je
loopne
es
in
es
xor
inc
insl
jmp
sbb
enter
push
out
mov
adc
jno
fidivl
and
jae
mov
sbb
fsubrs
mov
iret
insb
nop
dec
dec
mov
int
faddl
aas
pushf
mov
mov
mov
xchg
lcall
dec
inc
push
popl
ja
push
adc
into
mov
cmp
inc
or
add
pop
das
and
push
mov
in
cmp
popa
inc
movsl
movsl
jg
adc
cld
pop
fiaddl
jne
cmp
pushw
dec
in
in
xor
dec
sti
sub
mov
in
push
dec
pop
movsl
cmp
sbbb
dec
pop
in
fwait
mov
popf
mov
call
ficompl
mov
lea
mov
pcmpgtw
je
cmp
mov
sub
jno
pop
fldl
js
and
xor
pop
xchg
dec
push
mov
into
idiv
outsl
cmpb
add
insb
pop
ret
stc
into
mov
mov
lock
inc
pop
in
jae
xchg
mull
insb
xor
aam
jmp
inc
mov
cmp
loop
out
jo
add
scas
or
inc
mull
lods
pop
test
scas
jl
cmp
inc
sub
ljmp
aaa
lret
faddl
dec
shl
mov
cmp
pop
inc
cmp
jae
inc
call
xchg
cltd
sbb
xor
popf
aad
pushf
cmc
int3
lret
pop
sub
nop
shl
enter
bound
aas
xor
pop
out
push
icebp
cmpsl
mov
sub
lret
rcr
pop
adc
lret
xchg
mov
lcall
ret
xlat
mov
sbb
mov
dec
xor
xor
push
sbb
and
aam
adc
movsb
int3
lods
dec
and
adc
aas
mov
mov
fwait
repz
jl
and
jb
adc
mov
ss
ss
adc
shrl
push
cltd
pop
pop
std
pop
or
or
mov
inc
mov
xor
mov
cmp
jns
xchg
pop
jns
xchg
jo
aad
mov
andl
mov
aas
shlb
adc
and
pop
stos
negb
mov
lcall
pop
test
mov
dec
in
iret
insl
and
mov
in
decl
add
fcompl
mov
mov
sub
pop
inc
add
in
pop
jno
mov
pop
and
pop
cmpsb
and
shl
lea
push
mov
pop
ljmp
and
ss
inc
inc
mov
les
call
hlt
cs
outsb
sbb
jmp
pop
push
push
or
jmp
adc
sub
mov
lea
hlt
scas
ja
pop
movsb
cwtl
pop
lea
and
push
mov
fcoms
cmpsl
dec
add
dec
jp
rep
out
es
pop
xor
mov
adc
fstpt
divb
push
sub
test
xor
sub
fs
outsl
push
aas
rol
inc
fptan
lea
pop
xchg
mov
xchg
xchg
pushf
adc
push
int3
into
pop
adc
dec
movsl
dec
cmp
aaa
xchg
out
xchg
in
lds
scas
push
xchg
sbb
cmp
lcall
push
inc
and
jge
pop
adc
sub
pop
mov
push
in
push
addb
mov
jg
sbb
sbb
push
adc
jae
insb
clc
arpl
pop
dec
fidivl
or
add
add
sbb
loopne
test
in
push
decl
shlb
jbe
cmp
fnstenv
push
out
push
mov
orl
push
fmuls
inc
fbstp
xor
mov
adc
out
xchg
mov
or
rcll
cltd
mov
repnz
dec
push
sub
popf
fisttpll
lret
xor
jae
push
bound
mov
call
mov
mov
cmpsb
and
jae
adc
fstl
and
mov
enter
in
adc
pop
and
int
dec
mov
xor
mov
sbb
clc
mov
insb
xor
stos
popa
bnd
xor
stc
jmp
aad
inc
fdivs
enter
sbb
inc
ds
aam
dec
fsubr
xchg
sbb
into
ja
test
mov
repz
sbb
xchg
jecxz
out
push
push
pushf
lock
or
divl
push
xchg
push
pop
jo
adc
cmc
and
adc
dec
sub
xchg
repnz
stos
pop
into
std
in
push
xor
je
sub
lds
jnp
es
and
int3
sahf
xchg
and
xor
fwait
test
dec
pop
lods
xor
les
adc
incl
jg
daa
arpl
mov
mov
pop
into
adc
in
cmpsl
xor
cmp
js
lret
test
in
pop
pop
stc
sub
mov
cli
cmp
jo
insb
pop
shr
icebp
push
sbb
and
cld
lock
idivl
not
inc
rcll
inc
sub
fsubrp
std
pop
cld
aaa
mov
xor
outsb
fs
jo
push
dec
fisubrl
repnz
lahf
or
add
mov
mov
adc
loopne
fs
leave
xchg
pop
fwait
sub
xor
scas
subb
push
ja
and
hlt
je
sbb
sub
outsl
sbb
sub
pop
xchg
sub
jo
stc
test
shl
hlt
call
popa
cvtps2pi
add
and
cli
rclb
imul
jae
pop
or
dec
xor
push
out
repnz
mov
cmp
mov
pushf
loopne
les
stos
fs
movsb
xchg
aas
aaa
jno
pop
push
mov
add
mov
sbb
rcrl
ljmp
inc
sbb
daa
push
scas
adc
add
addr16
inc
orb
insl
cmc
test
xchg
cmp
xchg
ds
xor
xor
in
movsl
pusha
cld
jg
js
or
pop
out
cmpb
pop
je
fwait
mov
cmp
aam
xchg
popa
or
pop
clc
repnz
ret
adc
mov
pop
xchg
mov
mov
ret
mov
cwtl
mov
sbb
mov
dec
adc
xor
xor
nopl
scas
in
ret
es
das
or
adc
push
das
or
inc
das
inc
fsubrp
push
pop
jle
jmp
fiaddl
loop
adc
add
fisubrs
mov
xor
adc
roll
popa
xor
jmp
sbb
test
or
sbb
pop
ss
cmp
inc
std
jmp
jg
mov
sub
sub
sbbl
pop
sbb
jle
cmp
ja
push
mov
fidivrs
popf
je
scas
xchg
cs
jmp
or
les
lret
fcoml
mov
push
jge
in
push
push
fbstp
cmp
xor
xchg
cmpb
insl
mov
xor
cli
or
rcrl
subb
jecxz
stos
jg
call
push
popf
out
dec
fldcw
pop
sub
subb
cli
dec
xchg
inc
stos
out
ja
rclb
adc
popl
lcall
mov
fisubrs
mov
ds
mov
sbb
movsb
cmpsb
xor
mov
push
xchg
add
nop
adc
fiadds
cmp
xchg
fs
jo
push
push
js
sbb
lahf
scas
cmp
lds
test
add
shl
inc
and
cmp
imul
sub
insl
lods
pop
dec
jmp
inc
xor
inc
sub
dec
mov
roll
pop
mov
or
lods
mov
mov
cmp
rcr
repnz
jmp
imul
dec
xor
jno
cmpl
in
pop
inc
inc
mov
jp
shll
adc
jo
lock
jmp
xor
mov
psubusw
repz
test
lahf
out
in
xor
fld
scas
test
sbb
mov
xor
cmp
xor
xor
mul
add
cmpsl
enter
mov
scas
es
fldt
pushf
mov
sub
cmp
into
mov
adc
sub
pop
adc
xor
cmc
sti
jnp
xchg
xchg
adc
jmp
xchg
mov
dec
jecxz
aad
pushf
sbb
stos
jmp
ret
pop
lcall
sbb
lret
cmp
sbb
ficoms
bound
pop
testl
push
mov
add
shr
bound
push
les
mov
xlat
sahf
aam
pop
ss
jmp
in
mov
in
ljmp
sbb
into
outsl
rcrb
pushf
lret
xchg
daa
movsl
add
pop
mov
dec
cs
add
or
add
jecxz
repz
vmwrite
dec
inc
mov
in
pop
jge
outsb
inc
and
fnsetpm(287
dec
pusha
pop
dec
js
xor
pushf
xor
mov
lea
aam
ret
pop
mov
test
xchg
dec
insb
xor
je
stos
cli
pop
ror
mov
jae
push
cmpsl
ja
inc
jp
dec
scas
mov
aaa
jmp
outsb
pusha
xchg
jge
lcall
mov
push
inc
sbb
outsl
add
sbb
xchg
insl
nop/reserved
sti
xchg
rsm
jmp
sub
int
adc
fiadds
in
gs
pop
xor
repnz
mov
mov
inc
fsubrs
sbb
jno
jle
sbb
add
int
notb
cld
jno
shr
cwtl
mov
xchg
in
xor
into
pop
or
jo
mov
jg
movb
loop
lret
push
jmp
dec
int3
pop
xor
sbb
negl
inc
inc
mov
pop
mov
and
cmp
push
movsl
test
pop
sub
push
stos
int
fcmovbe
fcomps
dec
daa
fwait
jns
outsb
jb
push
pop
and
inc
dec
sti
scas
leave
cmp
mov
sar
pop
mov
or
loopne
pop
and
cmpsb
push
dec
sbb
mov
scas
jecxz
xchg
into
cmp
out
mov
jae,pt
arpl
dec
add
outsb
and
repz
jecxz
xchg
into
cmp
out
mov
jae,pt
arpl
dec
add
outsb
and
repz
jecxz
xchg
into
cmp
out
mov
jae,pt
addr16
adc
jle
outsl
daa
lahf
xlat
pop
mov
xchg
into
cmp
out
arpl
push
push
jmp
sub
xchg
pop
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
cmpl
mov
enter
xchg
jp
dec
add
adc
inc
cli
push
ljmp
xchg
sub
jp
push
pop
icebp
xor
mov
xor
popa
fidivl
cmpl
mov
sarl
loope
icebp
dec
add
push
jmp
scas
and
cmc
dec
lock
pop
xchg
sarl
leave
pop
cmp
sub
repnz
mov
ss
insl
imul
sarl
sbb
into
pushf
push
fisttps
push
and
fisubl
fwait
jle
sti
daa
lret
jo
or
jb
ljmp
add
xor
mov
inc
out
loop
jno
cmpl
pop
test
xor
mov
inc
pushf
push
rcrb
push
cli
push
adc
sar
lret
rorb
jp
dec
dec
xchg
repnz
jecxz
xor
add
out
gs
ljmp
imul
inc
push
loope
inc
stos
push
stc
shll
lahf
movsl
cli
add
inc
cmp
or
jp
push
pop
icebp
dec
add
xor
popa
fidivl
in
repnz
testl
mov
stos
push
pushl
mov
add
jg
or
mov
jae
jbe
pop
leave
xor
mov
xor
or
out
aam
test
loope
icebp
dec
add
xor
popa
fidivl
cmpl
mov
sarl
loope
icebp
dec
add
xor
popa
fidivl
cmpl
into
enter
testl
pop
fnstenv
add
scas
mov
imul
lcall
je
xor
lods
dec
mov
loopne
cmpsb
pop
dec
mov
cld
push
imul
ja
fs
mov
in
dec
pop
shrl
out
movsl
or
fxtract
xchg
mov
xchg
push
aaa
push
in
mov
and
jmp
xchg
mov
cli
cmpsl
movsl
das
pop
cmc
leave
jecxz
adc
pop
cmp
shl
icebp
faddp
cli
popf
xor
sub
icebp
frstor
test
movsb
insl
je
xchg
dec
call
lret
sar
add
mov
stc
fiadds
std
add
cmpl
pop
sub
push
cmp
lea
rorb
mov
and
fdivrl
cmp
mov
lds
fs
dec
adc
xchg
rcll
add
xchg
out
cmpsb
push
outsl
jge
cmp
std
jg
and
dec
mov
dec
inc
jmp
scas
aas
jl
xorb
cmp
pop
xlat
mov
loopne
mov
mov
fdivrs
xchg
cmp
stos
fsubrl
sar
push
jne
aad
jne
filds
push
repz
dec
and
inc
push
mov
sbb
sub
add
pop
out
in
jne
pusha
push
sub
add
xchg
lock
jne
mov
lods
movsb
cmp
dec
inc
movsl
aam
repz
shlb
mov
dec
popf
call
test
mov
pop
repnz
sarb
and
inc
xor
push
pop
fwait
or
out
pop
add
xor
lods
pop
mov
hlt
inc
lods
je
fwait
mov
divl
dec
push
leave
jle
test
dec
add
xor
rcrl
inc
pop
or
adcb
scas
pop
cmova
mov
sub
scas
sbbb
jmp
push
inc
or
mov
push
adc
ss
je
adc
cmpsl
jns
push
xchg
mov
icebp
in
std
ficoms
js
inc
cmp
inc
xchg
jo
aas
inc
jnp
cmpsb
sti
pop
aam
and
pop
add
pop
ljmp
xor
lcall
jne
xchg
inc
jecxz
sub
jge
sbb
sub
adc
pop
inc
fnstcw
sbb
xchg
jecxz
xor
add
rorl
jb
xchg
jge
cld
inc
sbb
dec
iret
sbb
jb
lea
xor
jmp
cmpl
aad
push
rorl
push
mov
fidivrs
adc
push
jle
mov
loopne
xchg
adcb
push
and
mov
sahf
add
in
ljmp
mov
add
pusha
testl
inc
out
pushf
jb
pop
jp
dec
je
xor
mov
out
sarb
cmpsb
pop
outsl
pop
es
xchg
loop
xchg
mov
adc
scas
dec
fcoms
mov
fiadds
loop
mov
aad
lret
dec
pop
and
xchg
enter
rcll
rcll
test
leave
aaa
cmp
mov
dec
mov
pushf
fwait
in
inc
mov
pop
cmpl
mov
xor
mov
out
push
call
daa
and
fldcw
jecxz
or
lcall
inc
imul
push
rcrl
cltd
orb
fs
or
call
mov
stos
stos
inc
push
lret
pop
or
iret
mov
pushf
sub
sbb
arpl
leave
add
push
mov
iret
aad
push
or
push
lods
call
jno
or
in
cmp
jp
add
inc
or
pop
stos
test
pop
adc
pusha
xorb
push
rcll
sbb
pop
adc
add
js
xor
cmpb
push
mov
xlat
movsl
dec
mov
sub
dec
xor
mov
sti
xchg
call
hlt
lcall
push
push
xchg
mov
imul
std
cmp
xchg
add
mov
adc
inc
sub
cmp
inc
xchg
in
jmp
sbb
ljmp
lret
xor
je
popa
fstps
dec
cmpsb
hlt
outsb
xchg
in
jmp
call
bound
cmp
loopne
xchg
scas
sub
dec
xchg
lods
imul
adc
dec
push
add
in
loopne
lcall
push
mov
sub
insl
pop
xchg
dec
jmp
inc
outsb
and
std
shl
and
dec
adc
out
mov
jns
test
cld
xor
addb
ljmp
jecxz
js
sbb
jl
lea
add
imull
test
xchg
shll
push
pop
ret
pop
sti
fcoml
sbb
push
in
stc
insb
lods
mov
dec
cmp
mov
lret
fs
pminsw
pop
je
cmc
xchg
dec
sub
mov
movsl
push
data16
pop
cmpsb
int3
testl
std
xor
mov
stos
fcomip
xchg
xor
lret
sbb
cmpsb
mov
adc
cmpb
loopne
repz
arpl
xchg
ljmp
mov
call
sarl
mov
push
sub
xchg
pop
mov
push
dec
out
add
adc
xchg
insl
jmp
add
jmp
cmp
jecxz
mov
imul
jae
inc
lcall
test
insl
shl
outsl
cmp
cli
shr
or
in
aad
mov
push
jle
not
xchg
sbb
movsl
in
jle
ret
addr16
rcrb
iret
push
sbb
shll
and
or
test
cmp
cmp
xchg
in
push
xchg
jnp
fisubl
inc
lods
imul
pop
in
sbb
lahf
jno
mov
pop
fcoms
jmp
stc
outsb
lods
dec
push
mov
lock
divb
sbb
out
push
stos
sbb
push
mov
adc
mov
test
inc
or
mov
dec
push
sbb
push
mov
sub
in
lret
jg
stc
mov
out
mov
aad
stos
mov
add
ja
loopne
adc
int3
cmp
in
sbb
loope
jbe
in
loop
lods
les
mov
push
in
ret
xchg
fisubrs
int
lcall
pop
push
sub
mov
inc
jp
jle
lea
push
frstor
cmp
mov
or
cli
ret
adc
ret
jo
js
and
leave
push
push
sarb
fldt
sub
pop
mov
addr16
jl
and
xchg
das
cmp
jae
test
in
xchg
shll
popa
dec
and
pushf
iret
sbb
stos
sti
aad
jbe
sti
lahf
xor
and
push
push
adc
sub
sub
jns
cs
sub
cmpsb
lods
daa
in
adc
ds
fbld
fsub
cmpsb
das
fildl
adc
cmp
pushf
aad
jbe
movaps
int3
inc
add
xor
add
ljmp
ret
xor
mov
pop
cli
test
add
ljmp
jecxz
or
dec
sbb
pop
inc
dec
rorl
jecxz
cmpb
fiadds
sub
lods
shlb
xchg
sarl
pop
ss
stos
add
sub
mov
xlat
sub
loope
gs
jmp
fwait
cmp
cmpsb
mov
nop
leave
xlat
xchg
xchg
lret
into
pop
inc
push
inc
out
xchg
cmp
faddl
or
adc
inc
popa
sbb
aad
fwait
lcall
add
loop
adc
fs
stos
cld
sbb
lret
ja
jae
shll
mov
dec
repnz
out
das
ret
dec
sub
fistl
pop
adc
pop
adc
mov
popa
add
out
inc
fldenv
sahf
sbb
inc
pop
shll
insb
xlat
into
leave
xchg
daa
imul
xchg
xor
xchg
aam
jns
jg
fsubrp
mov
std
pusha
or
xor
imul
mov
lcall
lds
push
push
pop
cmp
sub
aam
pop
push
add
std
adc
fstpt
or
sbb
dec
fsts
mov
fstpt
movsl
push
outsl
push
push
inc
inc
jg
cltd
lods
sub
test
pop
jmp
push
in
insb
xchg
add
pop
fcompp
lret
mov
pop
stos
popa
lea
mov
mov
xchg
sbb
sub
mov
push
xor
les
cpuid
orps
cmp
rcll
jg
into
lods
movsl
test
mov
aas
rol
and
mov
mov
mov
je
iret
gs
sub
int3
mov
pop
mov
scas
pushf
ja
mov
mov
shlb
gs
fwait
enter
pop
cmc
mov
and
je
inc
mov
es
mov
sub
cmp
jmp
mov
arpl
mov
scas
int
andl
cli
push
fs
sbb
add
add
and
fdivl
mov
nop
and
cmp
rcl
and
or
test
dec
mov
in
std
dec
pop
aad
inc
mov
hlt
and
xor
stos
sbb
push
in
loope
fadd
mov
loopne
fcmovnu
pop
jnp
fldt
pop
fsts
out
sub
pop
inc
pushf
sbb
popf
js
arpl
lods
clc
cltd
mov
cmp
dec
arpl
sub
lret
push
bnd
or
xor
cmp
aad
pop
pusha
int
repz
fmull
insb
pop
xor
pop
lret
cmp
adc
push
adc
jnp
je
pop
sub
stos
aas
stos
ja
push
loopne
push
pop
mov
test
xor
test
sub
jge
insb
or
out
lock
movsb
jmp
mov
aas
dec
adc
enter
in
bound
xchg
and
stos
xor
and
test
sub
sbb
mov
dec
movsb
inc
lods
out
sbb
xlat
mov
cmc
sub
stc
adc
push
mov
add
or
hlt
inc
stos
mov
aas
aaa
mov
orl
adc
jl
mov
or
mov
in
inc
loope
xor
xchg
or
cmp
lock
jge
loope
dec
mov
adc
xchg
sbb
mov
in
mov
xor
jmp
fldcw
fwait
fs
pop
xchg
xchg
dec
aad
iret
xor
dec
fnsave
pop
inc
jns
data16
or
ret
and
cmc
cmp
add
fs
out
test
or
mov
sbb
mov
gs
jno
add
sbb
push
xor
inc
jbe
pop
das
mov
imul
fucomi
pop
mov
and
bnd
xor
pushf
or
insl
mov
test
pop
out
cld
or
stc
jnp
outsl
les
and
dec
mov
jbe
jge
jo
pop
out
rcrl
xor
icebp
rol
in
dec
loop
ja
xchg
cmp
in
cld
sbb
sub
mov
fcmovu
dec
push
sub
ja
dec
push
test
push
or
pushf
xchg
xchg
xchg
bound
idivl
ljmp
jbe
cmc
sub
cmpl
dec
shlb
inc
lret
out
mov
fisttps
mov
and
cltd
in
sub
addb
xchg
std
ss
xchg
cmpsl
add
cmp
push
jp
xchg
xchg
cmp
inc
cwtl
pop
or
mov
xchg
insb
xor
not
pop
and
enter
imul
sub
mov
enter
cs
les
fcompl
daa
data16
adc
add
pop
test
ljmp
or
repnz
fs
dec
arpl
mov
and
or
sub
out
pop
push
mov
test
xchg
mov
adc
xor
xchg
xchg
sarl
sbb
xchg
jle
fwait
pop
repnz
push
subl
in
adc
inc
xlat
mov
sub
or
std
push
sbb
inc
dec
pushf
jns
jle
xlat
pop
pop
fidivrl
aad
out
test
ss
ds
data16
jl
aam
test
xor
jmp
jns
sbb
pop
jb
mov
xchg
mov
inc
pop
xchg
cmp
test
add
lret
push
das
cmc
stc
xchg
jnp
rorb
mov
pop
pop
sti
cld
clc
les
or
sti
je
inc
stos
jmp
cmp
int
neg
push
popf
movl
dec
and
nop
insl
es
pop
enter
inc
movsb
subl
or
push
imul
jns
pop
mov
ror
push
mov
ret
and
test
xchg
mov
outsl
cmp
ja
decl
cli
loop
cmp
push
movsb
xchg
lods
xlat
subb
fstpl
and
and
xchg
pop
and
rcll
cmp
inc
pop
inc
lods
aas
xor
push
aaa
push
popf
jbe
or
mov
je
push
into
add
scas
sbb
add
jge
cli
cs
mov
inc
mov
fdivr
jle
out
fucomip
push
dec
or
nop
sbb
mov
jo
popa
cwtl
fxch
sti
sbb
cltd
js
lods
ret
icebp
push
nop
hlt
stc
leave
testl
imul
sbb
movsb
adc
push
int3
fwait
insl
cmp
or
mov
pop
insb
ljmp
add
jmp
pop
addr16
lods
cmp
mov
js
sbb
inc
push
jge
pop
inc
mov
push
pushl
js
jge
scas
aam
std
mov
outsb
test
xor
fidivs
jo
pop
iret
shl
fidivrl
cwtl
aaa
pop
mov
loop
bound
mov
in
aas
das
or
mov
arpl
ret
jae
mov
dec
push
mov
ret
mov
rolb
fisubrs
push
cmp
xchg
lahf
jp
popa
cmpl
xchg
or
mov
lods
cmp
sub
test
lock
mov
inc
mov
popa
ss
out
lea
loope
jb
arpl
cmp
repz
jg
and
fisubrs
inc
push
scas
les
loopne
push
in
or
mov
es
mov
mov
imul
sbb
rcl
testl
adc
mov
sub
ss
jnp
push
mov
cmpsl
addr16
lret
jb
mulb
xlat
ss
out
jbe
fst
stos
out
push
push
or
fistpll
mov
push
inc
mov
std
mov
pop
dec
mov
mov
scas
or
cmp
std
pop
test
pop
inc
pop
inc
data16
sub
rclb
cmp
add
push
xor
dec
sbb
xchg
addr16
push
hlt
cmpb
sti
cmp
cli
or
in
push
lock
in
shll
mov
pop
sub
pop
pop
xor
incl
lahf
std
push
xchg
jmp
stos
or
rcr
inc
arpl
into
and
dec
dec
pop
sar
mov
mov
sahf
lock
cmp
movsb
cmpsb
bound
lret
test
in
xchg
mov
in
sub
and
cwtl
loope
movsb
sbb
test
cwtl
fnsave
loope
dec
xor
xchg
fnstenv
popa
lret
xlat
push
mov
scas
cld
call
lcall
out
insb
cwtl
and
fcmovnu
jecxz
notb
stos
add
lcall
cld
test
or
sbb
ss
aaa
pop
into
nop
mov
dec
xchg
daa
inc
outsb
aad
bound
cld
loopne
jae
shrl
fists
adc
sub
xor
add
out
or
cltd
lret
cli
cmp
add
insl
jbe
adc
or
les
dec
mov
lods
insb
push
sbb
cmp
push
push
push
into
sarl
ljmp
insl
jecxz
std
sbb
in
mov
sbb
das
sub
add
loop
fs
cmp
inc
xchg
sbb
leave
lods
inc
iret
outsl
je
jmp
sub
js
sbb
popa
into
ljmp
pop
in
mov
xor
out
jecxz
xchg
in
ret
imul
cmp
push
cs
mov
mov
mov
out
pop
mov
cwtl
pop
loop
pop
push
xor
repnz
fs
sbbl
imul
xor
bound
push
or
lea
hlt
aam
lds
xor
xchg
sbb
lods
aad
inc
nop
xor
imul
adc
inc
mov
sahf
clc
cmp
xor
adc
mov
pop
into
enter
push
pcmpeqd
cld
dec
and
push
and
jp
stos
iret
cmp
movsb
js
lret
fisubl
push
add
or
arpl
imul
push
inc
jbe
cli
adc
dec
or
ficomps
push
pushf
dec
pop
imul
data16
xchg
mov
sbb
jbe
jae
mov
lds
mov
rorb
mov
cmp
cmp
stos
in
pusha
pop
ret
lret
sub
push
lcall
sbb
xchg
out
mulb
arpl
mulb
outsl
aas
adc
lcall
sar
cltd
jae
mov
aas
ljmp
jne
nop
cmp
mov
jmp
jb
sub
mov
xchg
imul
enter
out
insb
adc
mov
pop
adc
aaa
fstpl
mov
jne
adcb
xchg
ds
outsl
xchg
rol
jne
scas
push
into
xchg
cmp
lcall
test
sbb
cmp
mov
in
cmp
mov
aam
ljmp
dec
add
pop
ficoml
or
adc
in
call
jp
addr16
aaa
mov
scas
out
inc
push
xor
shlb
in
cmpsl
dec
bsf
repz
fldenv
sbb
insb
iret
out
push
rorl
cmc
and
lock
testl
lahf
fsts
or
ret
lret
inc
fcoms
adc
fistpll
sub
ljmp
insb
pop
pop
push
add
pop
cmp
sbb
adc
cwtl
or
fcompl
and
out
ja
shlb
or
stc
in
stc
jo
dec
es
pop
dec
dec
pop
and
jo
lahf
jno
lahf
xchg
sub
xor
pshufw
negb
cmpsl
sub
icebp
xchg
cmpsl
jo
mov
icebp
adc
pop
cmpsl
ljmp
leave
lea
jnp
dec
cmp
fidivs
andb
fildll
sbb
les
add
sbb
ljmp
mov
ret
jb
addr16
aas
cli
lret
push
cmpl
dec
rcl
fsubrl
lea
test
and
gs
push
repz
cmp
les
mov
sbb
icebp
enter
roll
xor
cmc
shlb
mov
ret
loop
lret
cwtl
push
mov
aas
xor
push
repnz
sbb
jo
jmp
gs
fistpll
jmp
cmp
out
or
icebp
hlt
loop
ss
sbb
mov
xlat
or
jle
notl
lahf
mov
ficoml
test
xor
pop
xor
fbstp
popl
mov
add
ja
scas
sub
dec
cmp
outsb
add
call
lret
add
dec
out
sub
mov
adc
cmp
dec
add
mov
dec
or
xor
enter
mov
vcvttsd2si
mov
cmp
into
std
iret
cmpsb
xchg
xor
stos
stos
push
mov
jle
dec
cmp
jbe
mov
adc
mov
adc
or
dec
sbb
mov
cmp
inc
loop
mov
add
repz
mov
icebp
fsubrs
test
sbbb
xchg
fdivl
shlb
inc
cmp
xchg
mov
xchg
or
fnsave
xchg
jns
add
sbb
cmp
decl
add
movsl
pop
sbb
shr
ja
popa
xor
sarb
stc
call
xor
adc
stc
out
aam
or
sub
rcr
icebp
add
hlt
push
adc
cmp
jecxz
aaa
jb
out
mov
xchg
rorl
inc
cmpsl
loope
cld
mov
loopne
push
sub
xor
mov
jmp
and
push
push
pop
inc
add
faddl
push
push
mov
insb
cmp
or
fs
inc
test
addl
arpl
int
test
inc
push
aaa
inc
add
push
cmc
or
cwtl
jo
sub
ds
pop
lret
mov
pop
aas
mov
mov
sarl
loope
icebp
dec
add
xor
popa
fidivl
cmpl
mov
sarl
loope
icebp
dec
add
xor
popa
fidivl
cmpl
mov
sarl
loope
icebp
dec
add
xor
pusha
fidivl
cmpl
mov
sarl
popa
pop
jno
mov
xor
ss
adc
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
xchg
pop
orl
dec
mov
lahf
imul
lret
and
push
lcall
xchg
pop
orl
sbb
or
cmp
sub
fiaddl
lret
and
xchg
lcall
xchg
pop
orl
sbb
or
cmp
sub
in
xchg
pop
mov
ljmp
rsm
into
pop
in
mov
int
sbb
dec
lret
cli
cmp
leave
jo
into
lahf
mov
popf
add
and
gs
push
or
in
imul
loop
cmc
sbb
in
test
fsubrp
scas
pop
inc
add
mov
mov
dec
mov
jp
mov
xor
jmp
sub
lcall
xchg
movsl
orl
sbb
sbb
jp
jmp
dec
adc
repnz
push
mov
popa
mov
lods
pop
xchg
mov
shl
lds
mov
pop
flds
push
mov
cli
insb
fistpll
jb
sub
adc
xor
jl
loope
inc
and
or
add
jle
scas
loope
pop
pop
orl
sbb
or
cmp
sub
fiaddl
lret
and
push
lcall
shlb
cmc
cltd
fdivrs
sub
jne
dec
xchg
pop
jecxz
adc
pop
test
inc
repz
daa
iret
hlt
sbb
add
jp
cmp
mov
sub
cmpsb
xor
in
iret
adc
hlt
or
push
popf
jbe
or
cmp
sub
fiaddl
lret
and
push
lcall
xchg
pop
orl
sbb
or
cmp
sub
fiaddl
lret
and
push
lcall
xchg
pop
movsb
pop
sub
mov
inc
push
ljmp
jg
mov
cmc
cmp
and
jo
sbb
sbb
icebp
decb
mov
mov
jecxz
sbb
ret
leave
sbb
mov
scas
jne
and
inc
push
fsubrs
cmp
popa
mov
add
dec
cltd
in
xlat
sbb
sbb
push
or
addb
cs
add
lret
adc
dec
mov
rcll
data16
jecxz
insl
mov
shlb
inc
incl
xor
leave
or
adc
fwait
and
xor
dec
jg
adc
pop
scas
ja
sub
insl
roll
lods
sbb
jns
lahf
mov
out
js
mov
in
fcomps
xor
into
sti
mov
stos
mov
jge
divl
xor
cltd
sub
shll
test
insl
ljmp
pop
jge
scas
xor
dec
inc
loop
push
and
cmp
push
dec
adc
aas
or
cmc
sbb
sub
mov
call
pop
les
pushf
test
arpl
loope
cld
rol
add
pop
int3
ja
jne
jge
adc
clc
aas
scas
int
cmpsl
imul
and
addr16
or
add
stc
mov
mov
mov
mov
aad
xchg
xchg
and
mov
mov
pusha
fwait
jmp
cmpsb
push
or
push
cmpsl
adc
leave
mov
lahf
fs
push
push
cmp
add
pop
jl
imul
insb
push
add
push
enter
repz
mov
into
mov
lahf
sub
push
mov
mov
stc
das
dec
test
divl
lret
inc
mov
leave
push
push
sbb
stc
bound
sub
push
pop
sub
movsb
xor
inc
notb
int3
std
mov
adc
call
in
rcll
xchg
jmp
sbb
jl
jl
xchg
ret
jae
mov
outsb
jo
lret
jo
outsl
pushf
dec
xchg
hlt
fstps
out
jl
pop
das
sub
adc
sbb
lret
cmpsl
je
mov
lret
mov
mov
rclb
pop
enter
out
push
jge
mov
mov
ret
repz
pushf
mov
xchg
mov
adc
or
jno
add
in
cmc
pop
lret
loope
push
rcll
insl
outsl
mov
mov
mov
xlat
pop
push
and
aaa
shll
dec
sbb
add
push
jle
arpl
add
dec
je
xor
cmp
or
mov
pushf
arpl
and
shlb
push
inc
or
sbb
fst
test
test
mov
lcall
sar
filds
std
xor
jae
push
cwtl
mov
add
xchg
and
cmp
mov
mov
push
mov
push
lcall
mov
es
insl
js
xchg
shlb
imul
mov
and
dec
mov
jns
sbb
xor
iret
insl
adc
fstpl
leave
sbb
sub
push
jnp
push
mov
mov
xchg
movsb
js
shll
popa
stos
pop
mov
adc
jge
mov
push
enter
and
inc
repz
dec
movsb
ret
push
push
mov
xlat
repnz
pop
pop
xlat
push
dec
jno
or
xchg
adc
inc
jb
push
mov
out
cmp
sub
stos
or
repz
inc
ret
les
rcr
sahf
fidivl
pop
incl
outsl
out
rorb
dec
pushf
mov
lods
fwait
jecxz
fwait
ds
in
xor
or
fiadds
push
mov
mov
jge
sarl
fdivrp
enter
insl
lods
jl
jl
out
outsl
sub
fwait
sbb
lds
push
outsb
mov
sbb
add
pop
push
or
xchg
fcmovnbe
shr
jbe
jo
push
jl
cmp
lea
and
and
add
dec
test
or
mov
sbb
lret
jbe
or
inc
movsl
insb
adcl
call
cmp
aaa
test
push
xorb
shll
out
idivl
sub
out
inc
into
inc
jge
pop
jle
push
mov
cmp
int
lahf
mov
or
mov
bts
loope
pop
xor
fcoml
rorl
test
sahf
dec
sbb
aas
or
jmp
cmp
jbe
jae
sbb
mov
mov
mov
and
mov
cltd
das
xchg
lods
mov
ljmp
mov
fnstcw
stos
mov
stc
lods
sub
jg
jmp
sbb
inc
mov
out
xchg
mov
aaa
inc
add
jnp
xor
das
stos
divl
mov
sarb
push
das
cs
rcl
mov
pop
es
and
movsb
ret
pop
xchg
or
dec
fsubl
jp
mov
iret
push
xor
jns
mov
and
sub
lret
stos
lock
dec
mov
outsb
jns
and
xlat
lret
iret
push
xor
or
addr16
imul
push
pop
or
fldt
shll
xchg
aas
in
adc
pop
movsb
popf
ljmp
adc
cmp
sbb
fs
jle
outsl
les
out
adc
or
mov
mov
dec
jg
push
cmp
and
sub
ss
outsb
icebp
adc
cmp
outsb
pop
or
pop
sub
mov
jae
bound
cs
ljmp
inc
aam
les
lds
in
fwait
dec
aam
movsl
inc
dec
pushf
orl
int
rolb
pop
data16
cmp
out
les
loope
addb
xor
mov
out
mov
adc
sub
xor
mov
add
scas
cmp
pop
cltd
jnp
test
xchg
xor
mov
pop
sub
xor
cmp
pop
add
or
adc
cmp
and
in
mov
cmp
xor
int
jg
iret
xchg
outsb
xchg
hlt
les
push
jg
into
fwait
aam
pop
dec
aaa
add
sub
jno
jns
or
stc
push
loope
mov
and
xor
scas
xchg
mov
ret
mov
jbe
add
ljmp
fidivs
fs
or
pop
icebp
mov
fstpl
fnstenv
add
in
sti
rorl
popa
adc
popf
pop
stos
push
pop
imul
push
mov
xchg
daa
es
sub
xchg
dec
loope,pn
inc
gs
jmp
inc
loope
mov
stc
add
aad
dec
or
mov
sub
push
repz
and
or
jp
cwtl
mov
lss
dec
fucomi
scas
and
or
fs
aad
lret
jge
and
push
stc
push
mov
xchg
in
mov
int3
and
add
lea
or
pop
mov
imul
es
dec
and
inc
fldt
dec
inc
fcmovne
scas
adc
sbb
jg
test
mov
add
sub
sahf
pop
dec
adc
sub
and
dec
cmp
dec
xchg
sub
mov
cmp
mov
test
in
inc
das
mov
scas
push
scas
inc
jp
arpl
jns
inc
add
addl
pop
jbe
xor
movsb
xor
sub
mov
aad
xor
outsl
push
mov
cmpsb
and
inc
xchg
xor
or
or
cmc
adc
ret
xchg
mov
mov
dec
cld
jae
lock
push
xchg
jno
js
push
lea
fcmovnu
repz
es
negb
jnp
mov
data16
aas
outsl
stc
adc
ljmp
and
inc
enter
sub
or
adc
movsb
and
fcomps
xlat
mov
push
addb
push
mov
pop
ret
cmc
mov
fsubs
push
lcall
pushf
xchg
pop
mov
mov
hlt
int
push
inc
fcomp
xor
or
data16
xor
stos
mov
cld
in
out
sbb
cmp
push
ss
sub
inc
xchg
cli
nop
cmp
mov
push
dec
mov
xchg
shl
fs
pop
add
int
add
sub
cmpsl
shlb
jno
clc
jnp
outsb
fs
mov
mov
clc
mov
mov
fsts
fwait
push
ret
inc
ds
sub
add
js
in
pop
pop
out
inc
idivl
imulb
push
adc
sbb
or
in
aaa
inc
stos
cmp
mov
dec
mov
cltd
mov
aaa
cltd
pop
es
clc
dec
pop
sbb
movsb
sbb
mov
mov
lods
and
mov
sub
inc
addb
jl
jle
xrelease
lock
andb
ljmp
dec
out
xor
jns
negb
xlat
sub
insb
cmpsl
ret
aas
sub
loope
xchg
ja
insl
inc
mov
rcrl
pushl
arpl
mov
sbb
iret
ss
in
insb
push
push
adc
pop
inc
xchg
sbb
enter
adc
enter
lock
imul
loop
mov
adc
mov
mov
repz
xchg
sub
cld
add
jbe
add
add
cmpsl
movsb
sar
add
mov
and
icebp
jno
mov
fimuls
push
stos
pop
add
mov
cmpsl
loop
adc
cltd
inc
or
adc
iret
jle
repnz
call
dec
inc
xchg
fsubrl
pop
movsb
inc
mov
into
aas
xor
lea
dec
movsb
loopne
andb
and
js
mov
mov
and
arpl
xor
pop
push
pop
mov
int
add
and
aaa
cmp
test
lahf
into
push
shlb
sarb
pop
jl
lock
pop
mov
mov
ficoml
jns
sbb
push
lahf
sar
and
cmp
sbbl
decb
cld
and
lods
cltd
cwtl
sahf
push
or
ds
lret
in
in
fcoml
fs
imul
mov
mov
mov
lock
ret
int3
push
pushf
push
mov
mov
pop
ja
fidivl
cmp
mov
dec
fcom
cwtl
cmp
sub
pop
movsb
scas
out
add
stos
repnz
lret
enter
push
scas
and
add
lea
shll
inc
jb
je
sub
aaa
and
mov
scas
inc
push
jnp
mov
dec
push
pop
and
fldenv
pop
ret
and
inc
jnp
mov
pop
hlt
mov
data16
fs
rorb
cld
xchg
add
add
sub
pop
test
or
xchg
out
inc
jp
int
lods
sbb
stc
adc
xchg
stos
cmpsl
mov
int
mov
mov
dec
outsl
pop
loopne
rcrl
ret
loope
stos
jns
xchg
cmp
mov
push
ja
ror
dec
test
lods
and
jmp
xchg
orl
or
out
cmpsb
add
xchg
enter
inc
or
xchg
dec
mov
and
neg
lret
dec
sub
out
ret
inc
pop
loop
mov
ret
xor
adc
pusha
pushf
scas
mov
aas
sti
stos
cld
subl
ljmp
adc
pop
push
xor
sbb
decl
out
pop
out
add
pop
jno
mov
clc
xchg
mov
pop
sub
ss
fstpt
rcrb
adc
divl
cmp
xchg
add
aad
mov
in
frstor
jbe
jg
test
fldcw
pop
adc
in
sub
dec
popa
mov
push
rcll
dec
adc
fidivs
int3
dec
or
idivl
fwait
leave
mov
jmp
fmuls
testl
push
mov
loop
fcmovnbe
fsubp
jge
push
mov
test
push
aaa
fs
rcr
cmp
or
fcoms
cmp
insb
test
jno
flds
adc
adc
lret
and
push
aaa
sub
lods
and
mov
pop
cld
mul
rolb
data16
clc
adc
out
push
mov
pop
dec
sti
outsb
xor
pop
xchg
test
stos
imull
xor
mov
xchg
push
adc
rorb
test
mov
pop
cmp
test
sbb
xchg
pop
push
shll
push
or
pop
dec
xorb
and
es
jmp
imul
push
and
out
push
pop
inc
lret
jb
in
lds
pop
push
es
outsl
cmp
outsl
jbe
cs
pop
and
into
xor
sarb
js
movl
js
mov
loopne
subl
sub
push
dec
jnp
out
test
popf
loop
call
push
movsb
xor
in
sti
stos
aam
stos
cmc
sahf
cmp
xchg
gs
ja
in
xor
push
ret
subl
cmpsb
jge
push
insl
pushf
test
in
cmp
jbe
clc
movsl
rorl
inc
inc
mov
gs
lret
xor
or
cmp
out
ds
add
jmp
aam
sub
cs
pop
call
fistps
adc
test
push
or
lahf
lods
cmpsb
inc
xchg
cmpsb
lods
xchg
stc
hlt
mov
dec
enter
lds
lret
sbb
dec
adc
adc
push
fcoml
add
lock
mov
inc
ds
mov
and
scas
hlt
jbe
xchg
mov
and
push
pop
not
ret
sub
lea
jl
inc
sbb
push
std
ss
adc
shlb
repnz
cwtl
jge
and
in
sub
sub
sub
xor
mov
iret
das
adc
hlt
hlt
test
data16
sub
jp
xchg
sarl
push
mov
ret
out
pop
cmp
stos
filds
frstor
pop
jecxz
sbb
sbb
ret
cld
jnp
aam
sbb
push
shlb
mov
or
adc
loop
outsb
mov
xchg
shr
xor
xchg
mov
aaa
xor
test
aam
dec
and
subps
cs
or
inc
jg
jg
mov
push
rclb
dec
mov
mov
cmp
cmc
sar
mov
xchg
ljmp
cmp
xchg
ds
xchg
leave
or
dec
insl
repnz
out
sub
hlt
push
dec
jb
leave
lds
push
xlat
push
push
decl
inc
call
fisttpll
dec
lock
pop
xor
addb
ss
in
mov
push
scas
xorb
std
lods
aam
mov
mov
mov
cmp
or
imul
cmpsb
pop
inc
je
lods
pop
jg
jnp
jg
and
pushf
add
add
xor
sbbl
jle
sbb
pop
pop
enter
jl
sbb
xchg
mov
leave
loope
jmp
mov
outsb
test
inc
xchg
pusha
mov
xor
sbb
mov
hlt
dec
aam
push
cmovno
jae
ljmp
in
xor
inc
inc
jmp
xchg
js
xor
insl
mov
push
and
fstl
cmpsl
dec
and
xchg
ret
jecxz
in
gs
shrl
xchg
cmpb
dec
jg
lods
call
or
int
movsb
or
cs
mov
jns
cltd
fcmovnu
mov
xor
cmp
imul
jb
jmp
in
xlat
imul
ret
xor
outsb
mov
data16
shrl
fs
sub
fimuls
orb
jno
iret
lret
add
add
and
mov
mov
je
inc
pop
pushw
nop
fwait
cmpsb
sarl
or
xor
pop
jns
enter
xor
cmp
jno
je
jb
mov
loope
fwait
mov
mov
add
pushf
fwait
pop
lods
in
mov
rol
arpl
add
int
jbe
movlhps
ljmp
cmp
lcall
ss
jge
push
cmc
ret
sub
dec
inc
lahf
pop
sbb
test
fbstp
movsl
inc
push
jns
sub
xor
arpl
int
test
mov
dec
push
inc
mov
imul
xchg
dec
ret
pop
test
xchg
stos
push
add
lods
inc
mov
mov
into
out
pop
sub
aam
cmp
or
test
xor
pop
cwtl
cld
lods
out
pop
lds
ljmp
inc
pop
sbb
xlat
jb
cmp
cld
dec
inc
xchg
jg
daa
lock
nop
pop
std
out
lods
lock
pop
push
mov
xchg
or
xchg
fmull
mov
icebp
fsubrp
mov
incb
fxch
insl
nop
arpl
xchg
mov
std
fmul
push
jmp
repnz
fs
jg
xchg
movsl
mov
mov
mov
aas
bound
nop
xchg
mov
pop
popa
clc
jbe
rcll
and
xor
lcall
pop
loope
add
sbb
mov
sbb
sub
dec
push
mov
aad
sbb
dec
aas
jmp
xchg
mov
and
aas
call
and
sbbb
add
mov
inc
xor
sarl
lds
jge
xor
xchg
inc
add
orb
jg
outsl
xor
cmpl
ds
pop
adc
mov
cmp
xor
jnp
cmp
cwtl
fdivs
dec
dec
jnp
sahf
jbe
fidivs
outsb
fwait
mov
lods
test
test
dec
xchg
inc
sbbb
mov
mov
jbe
test
jle
imul
cmp
inc
dec
inc
subb
push
cmp
shlb
movl
xchg
ficompl
mov
mov
xchg
jge
repnz
inc
aaa
sahf
xchg
or
sub
pushf
sub
mov
ror
inc
shll
jns
mov
mov
cmp
xchg
jmp
mov
addr16
jg
jmp
sub
imul
fnstcw
icebp
aaa
jl
jae
mov
imul
leave
popa
xchg
jge
dec
outsb
lcall
lds
mov
push
mov
mov
mov
mov
mov
ljmp
shlb
in
sbb
push
xchg
cwtl
aaa
push
xchg
push
mov
push
mov
inc
std
add
stc
cmp
roll
add
mov
outsb
adc
ret
ret
pushf
cmp
xchg
sbb
jg
ret
repz
mov
mov
pop
imulb
mov
add
nop
test
dec
push
jle
cmpsb
xchg
iret
cmp
daa
mov
xchg
xchg
outsb
mov
insl
add
js
push
cmp
shll
dec
call
fnstsw
xchg
mov
iret
push
inc
pop
cli
adcl
mov
movsb
dec
pop
and
or
sahf
xor
popa
int
push
bound
hlt
xchg
mov
divl
cmp
add
jg
xchg
int3
dec
mov
xlat
addl
sbb
push
imul
mov
dec
xchg
mov
mov
fmul
sub
insb
jecxz
push
push
add
pop
xchg
jmp
and
cs
push
mov
push
add
das
add
xchg
movsb
in
pop
inc
mov
in
lahf
cmc
jmp
fcmovb
repnz
pop
fcomip
mov
cmp
xchg
adc
fcoms
fisubrl
adc
inc
xchg
icebp
adc
jg
xor
lret
mov
cmc
fists
ret
mov
adc
cltd
scas
inc
sub
xchg
push
inc
or
inc
jl
outsl
mov
jecxz
nop
cmpsl
int3
and
jg
sbbb
aas
es
mov
mov
leave
je
repz
and
into
stc
xchg
outsb
loope
and
and
stc
xchg
daa
mov
mov
jg
std
scas
mov
mov
jge
and
fstpl
mov
adc
xlat
sub
push
cltd
pop
pop
or
or
gs
xchg
mov
int
pop
xchg
mov
cmp
mov
negb
ret
je
jecxz
or
mov
push
int
sub
jp
test
cmp
sbb
sub
mov
shll
fnstsw
insb
pop
rolb
inc
das
out
mov
dec
lock
mull
or
clc
push
adc
mov
xchg
jnp
jg
lret
int
rcl
xchg
ret
ss
ror
cmpsb
icebp
fs
lods
cmp
stos
mov
ficompl
sahf
adc
scas
jne
xchg
fwait
in
and
repz
push
les
or
mov
push
pop
mov
nop
and
push
scas
arpl
xchg
cli
mov
mov
or
cmp
sub
fiaddl
lret
and
push
lcall
xchg
pop
orl
sbb
or
cmp
sub
fiaddl
lret
and
push
lcall
xchg
pop
add
jp
imul
or
cmp
adc
add
xor
and
push
fwait
inc
mov
popa
stos
xchg
pop
orl
sbb
mov
mov
add
cli
and
add
push
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
pop
lahf
adc
pop
fisubs
out
inc
xchg
pop
out
lds
nop
das
rcrb
loopne
lock
pop
lahf
adc
inc
fists
pusha
pushl
mov
nop
pinsrw
das
sarb
dec
loopne
lock
sbb
sub
js
addr16
sbbb
sub
pop
les
sbb
sbb
adc
insb
in
pop
lret
lods
and
mov
jnp
push
fs
sub
call
lahf
popf
lahf
and
and
xchg
scas
inc
nop
ja
gs
movq
pop
sarb
or
jge
lea
repnz
jb
push
push
lock
aas
mov
aaa
mov
shrb
iret
mov
jo
mov
clc
lock
dec
subl
pop
out
jo
inc
inc
mov
jo
pusha
out
mov
outsl
sbb
or
pop
insl
pop
or
outsl
add
inc
xorb
jg
outsl
or
mov
add
pop
add
nop
rcrb
scas
push
fisttps
pusha
ljmp
cltd
pop
mov
mov
pop
enter
jmp
testb
out
and
cmp
fwait
hlt
outsl
nop
push
shrb
lods
sub
add
adc
inc
divl
int3
xor
mov
xor
jge
pop
lds
cmp
cmp
and
inc
fidivl
xlat
cmp
push
iret
pusha
pushl
sbbb
push
aas
mov
rcrb
loopne
lock
add
xor
pusha
pushl
sbbb
push
aas
mov
rcrb
loopne
lock
add
pop
push
loopne
pop
push
xorb
lock
lret
lret
inc
pop
test
les
add
cmp
add
dec
lods
adc
push
inc
cmp
je
mov
out
jl
test
dec
mov
int3
inc
test
push
testl
ljmp
imul
cmp
sub
xor
and
cmp
or
pusha
mov
jb
jecxz
test
je
lods
shrb
pusha
hlt
cmp
sahf
mov
popf
sub
lret
test
sbb
lcall
jle
push
adc
insb
imul
std
outsb
pop
outsl
adc
sbb
je
loopne
pop
fwait
xchg
jo
popa
cmp
xchg
push
stos
stc
or
pop
cmp
sbb
addb
imul
jo
iret
ja
subl
rclb
or
hlt
add
cs
or
and
mov
xchg
aaa
xchg
addb
dec
data16
cmp
or
nop
pop
lods
call
jmp
dec
add
xor
and
xchg
daa
ljmp
cmpl
pop
sarl
push
roll
clc
addr16
jecxz
rorb
push
sbb
aaa
repnz
mov
iret
orl
jp
pop
sbb
lods
pop
lods
subb
mov
ljmp
into
imul
leave
cltd
mov
out
sub
mov
pop
cmpsb
and
lret
dec
cmpsl
xchg
sbb
push
test
bound
lods
sbb
inc
sub
jge
movsl
das
push
icebp
mov
adc
in
int3
in
fwait
xchg
dec
out
aam
movsb
fildll
fisttps
dec
sbb
push
cli
mov
jl
pop
cmp
push
lods
aas
adc
dec
and
sbb
sub
jbe
mov
mov
dec
shlb
add
jns
ret
push
in
loope
add
imul
imulb
and
fdivrs
sti
push
mov
sub
mov
loop
push
xchg
loopne
rclb
jnp
push
cmp
xchg
cltd
sbb
les
mov
repz
add
sub
xchg
pop
push
dec
sahf
and
push
fmuls
mov
xor
popf
push
iret
lods
push
daa
lahf
enter
pop
stc
adc
movsb
lods
int3
dec
fwait
jle
pop
xor
jo
shrb
push
sub
push
mov
jmp
xchg
loopne
rorl
repnz
jnp
push
rcrb
sbb
js
cltd
or
inc
xor
ror
sahf
out
mov
xorb
mov
orl
add
lea
dec
jnp
loope,pn
popa
push
gs
jo
pusha
cmp
push
cmp
pop
loopne
push
pop
cmp
pusha
inc
cmp
xchg
or
ficoms
jle
or
ret
je
dec
jg
lods
addr16
ljmp
lock
mov
adc
movsl
pop
movsb
cs
cmp
cmp
mov
push
rcll
or
lcall
mov
push
scas
jg
out
cmpb
dec
xchg
shrl
aam
dec
sbb
inc
lods
jmp
and
adc
adc
lods
repnz
push
cmp
add
hlt
xorb
int3
add
xlat
clc
arpl
popf
cmpsb
adc
pop
sbb
mov
loope
jle
rorb
divl
ficoms
push
mov
fstl
mov
or
push
ffreep
mov
not
jns
xchg
and
sub
mov
fst
push
js
mov
fisubl
sbb
push
push
insb
rolb
std
dec
shlb
pusha
mov
pop
std
mov
insb
std
lcall
dec
adc
fadd
inc
jb
mov
test
faddl
or
ret
push
inc
cmpsb
lret
cmp
mov
sti
jecxz
addl
or
xor
iret
ja
mov
loope
jmp
or
push
inc
lret
cmp
les
or
mov
push
je
fwait
xchg
mov
shlb
mov
hlt
insb
and
aas
mov
iret
faddl
rol
sub
mov
das
mov
out
inc
xor
test
nop
xor
testl
sbb
pop
imul
lds
shll
icebp
mov
imul
sub
mov
xchg
mov
inc
lret
pop
mov
lret
fsubrp
out
mov
xlat
xchg
sbb
arpl
int
dec
mov
jns
lods
stos
xor
and
sub
dec
mov
shlb
shr
lods
addr16
adc
lea
stos
cmp
jae
mov
adc
sbb
leave
cmp
pop
in
dec
imul
fwait
pop
pop
or
scas
jb
add
add
stos
mov
test
inc
and
imul
stos
pop
stc
jmp
clc
jg
rcrl
lret
and
xor
into
lock
push
lahf
mov
sbb
jo
jne
mov
sbb
pop
adc
push
mov
sub
adc
imul
pop
push
mov
iret
int
es
out
aam
xchg
je
mov
ret
mov
mov
mov
test
dec
pop
or
inc
cmpl
imul
lods
aad
js
arpl
ret
and
fcom
jae
leave
out
notl
xor
xor
icebp
dec
call
stos
leave
fldl
ss
jl
cmp
lahf
scas
cli
mov
fld
les
mov
imul
imul
jb
iret
sub
jg
imul
into
out
jno
ss
pop
out
jae
adc
jge
push
mov
push
add
hlt
pop
jle
jl
or
mov
mov
pushf
lret
add
xchg
fcoml
xor
or
mov
push
mov
iret
push
mov
xchg
sub
jnp
rclb
dec
or
or
stos
fists
stc
lods
adc
loope
fldenv
popa
fildll
jne
add
pop
cmp
arpl
and
dec
mov
popw
cmpsl
cmp
cld
in
fnstsw
cmp
out
insb
mov
push
push
inc
outsb
filds
pop
jbe
sbb
mov
popf
xchg
in
sub
bound
pop
test
mov
sbb
dec
stc
jg
gs
mov
mov
inc
pop
xorl
out
js
mov
adc
mull
pop
sub
in
add
xchg
xchg
vzeroupper
push
push
mov
es
arpl
pop
clc
mov
in
mov
repz
adc
sbb
push
fucomp
pop
popf
mov
xchg
mov
aad
push
bound
sub
jb
ds
fucomi
xchg
push
add
sahf
sub
outsl
not
lods
fidivrs
fs
dec
jmp
cmp
out
or
cmp
call
pop
push
mov
dec
adc
daa
adc
sub
push
pop
xor
or
fidivl
push
les
pop
fldl
lds
xor
in
jo
stos
xor
cmp
popa
fincstp
lds
ljmp
mov
fimuls
jbe
push
jno
test
xchg
fstps
aad
sbb
arpl
mov
rorb
sub
int3
and
sub
or
aam
movl
fimuls
xchg
arpl
sbb
out
push
movsl
xchg
movsl
stc
cmp
out
lock
imul
and
aaa
ret
ss
push
sti
jb
jno
cwtl
xor
cmpsl
dec
notl
xchg
in
sub
nop
test
inc
imulb
fs
xchg
sbb
mov
stc
jno
mov
rclb
pop
mov
test
adc
jae
dec
and
mov
xor
fstl
cmp
outsl
mov
jmp
push
sub
jecxz
push
divb
add
stos
sbb
sbb
cltd
mov
lock
jp
cwtl
enter
mov
mov
imul
clc
pop
adc
mov
lds
or
stos
cmp
dec
out
xor
push
mov
test
pop
mov
mov
xorl
jns
pop
push
push
loope
jo
rcrb
xor
mov
mov
cmp
andl
mov
push
in
add
bnd
push
sahf
fwait
loope
scas
imul
popa
mov
push
sub
fs
dec
xor
inc
push
pusha
xor
mov
xor
sub
dec
adc
mov
or
int
ret
mov
pop
pop
pop
cmp
scas
in
ret
dec
add
mov
push
mov
dec
push
add
push
mov
rclb
xchg
xchg
std
mov
ret
xor
pop
insl
fwait
mov
jl
les
adc
cmpsl
pop
stos
jecxz
repz
les
inc
es
movsl
test
add
lret
sub
push
or
inc
lret
lea
and
mov
lods
gs
out
shl
stos
jle
inc
sub
xchg
mov
arpl
and
lcall
sbb
dec
or
xchg
fisubs
rolb
jl
inc
lods
xchg
insb
call
idiv
lds
sub
out
sub
es
pop
and
pushf
roll
ljmp
pop
aaa
sub
sbb
enter
out
ret
push
stos
sahf
rolb
mov
pop
adc
pop
sub
addl
jbe
cmp
jne
dec
push
fnstenv
sub
roll
lcall
inc
ss
and
pcmpgtw
dec
or
testb
out
imul
lcall
mov
fsubrs
jg
sbb
mov
mov
mov
fcoms
adc
mov
ficoms
xorl
xchg
push
or
adc
das
pusha
ficoml
lds
test
mov
xchg
sarl
xchg
aas
pop
xchg
dec
xchg
sub
inc
lock
mov
xor
andb
push
imul
jl
push
sbb
xchg
dec
imul
jnp
adc
testl
test
mov
xor
inc
push
pop
sbb
push
lea
outsb
pushf
mov
and
lds
cld
or
xchg
push
mov
fwait
sbb
xor
sahf
fsubrl
iret
cmc
inc
mov
dec
sbb
xor
and
lcall
cmp
shll
and
dec
aam
jecxz
or
push
int
xor
hlt
repnz
jp
or
xor
nop
fsubs
xor
push
push
push
dec
xor
mov
add
lods
jp
test
js
aad
sub
jmp
mov
push
sub
fdiv
mov
in
icebp
xchg
mov
dec
add
mov
int3
push
cli
arpl
pop
dec
fs
inc
stos
dec
and
mov
sarl
mov
enter
jb
call
out
movsb
lcall
pop
lea
jnp
pop
ret
mov
das
mov
or
outsb
jp
out
js
outsl
cli
outsb
clc
cld
fnstsw
mov
push
jae
and
push
lock
mov
xor
push
loop
mov
sbb
loopne
add
je
ds
fstpl
lds
fs
jae
adc
xor
daa
lea
lea
lea
test
cmp
or
xorl
pop
pusha
lret
cmc
out
ret
in
cltd
pop
repz
sti
xchg
pop
shlb
xlat
cli
xor
sub
mov
lahf
add
push
inc
jg
cld
inc
scas
sbb
sbb
mov
dec
aam
ret
mov
and
arpl
cwtl
lea
dec
sbb
jbe
enter
enter
out
xor
in
out
jne
or
sbb
jne
fcmovnbe
out
or
lahf
jp
mov
lcall
cwtl
orl
cmp
inc
inc
mov
test
mov
andb
stc
ljmp
sbb
inc
rcl
and
xor
or
cli
loope
sub
push
xchg
xchg
cmp
mov
xchg
pop
stos
cmp
in
jmp
call
testb
adc
sti
addl
mov
out
jbe
loopne
enter
jle
clc
dec
xor
pop
cmp
leave
int3
mov
lods
loope,pn
ja
xor
js
adc
adc
pop
inc
sbb
sbb
cmp
and
pusha
inc
xchg
xlat
add
lahf
dec
pop
dec
in
cmp
inc
scas
sbb
outsb
cmp
dec
repnz
aad
or
add
popf
andl
jecxz
orl
mov
fstpl
and
cmp
sub
push
sub
jg
ljmp
clc
inc
pop
fcmovbe
pop
movsl
mov
mov
mov
adc
movsb
insb
or
jnp
scas
push
cmpsl
mov
rcrl
or
lret
je
mov
shlb
cmp
ret
sub
mov
mov
xor
sbb
gs
mov
jge
aad
sub
inc
cli
stos
fucomi
pop
sbb
sbb
push
loope
cld
mov
xchg
jnp
inc
jl
fcoml
mov
dec
jecxz
flds
std
mov
mov
mov
add
js
cmp
cwtl
lcall
movsb
xor
cli
stos
outsb
or
push
pop
movsb
adc
sbb
loope
pop
rcl
sub
or
rep
loope
dec
cmpsl
xor
lds
aaa
sbb
mov
xlat
push
push
xchg
shrb
fwait
ljmp
ss
push
test
push
pop
jne
orb
xor
int
jae
les
addr16
push
xor
jb
scas
stos
mov
jo
sub
push
ret
and
repz
xchg
flds
mov
jle
sub
mov
mov
jge
pop
xchg
inc
push
fmuls
cmpl
lcall
xor
mov
imul
sahf
fwait
xchg
or
scas
lret
fdivl
inc
pushf
or
inc
test
lcall
std
and
shl
mov
mov
jbe
or
sbb
mov
and
mov
in
in
xor
dec
fisubl
insb
inc
push
push
mov
imul
insb
mov
bound
and
xchg
sti
mov
xor
or
aad
xchg
fmull
fwait
clc
mov
call
lahf
and
aam
cmc
lea
sbb
push
xchg
insb
fsubl
das
sbb
jecxz
in
icebp
xchg
push
incb
pusha
inc
jbe
dec
inc
fisttpll
dec
outsb
icebp
mov
aas
sub
es
lock
adcb
fdivrs
inc
push
call
adc
fwait
xchg
add
push
mov
mov
call
inc
push
pop
insb
loope
jmp
sbb
fidivs
jne
lods
add
stc
movsb
iret
push
xor
negb
mov
or
pusha
sbbb
push
js
gs
adc
popa
xor
mov
jge
jecxz
out
add
cmp
je
ss
das
dec
mov
mov
in
mov
inc
mov
int3
xor
enter
or
fists
jp
jb
cmc
push
mov
icebp
adc
xchg
xor
xchg
pop
push
into
xchg
out
cmc
aam
adc
lcall
jp
and
add
pop
xchg
cmp
arpl
mov
ret
inc
jecxz
lea
shlb
xchg
jne
mov
push
fisubrs
xor
adc
jno
mov
lret
jmp
sbb
cwtl
and
test
adc
sar
loopne
in
add
pop
xlat
mov
lret
sahf
les
outsl
xchg
mov
fs
in
out
push
and
mov
shl
add
adc
dec
je
mov
sbb
add
push
xchg
lcall
pop
out
test
or
fisttpll
mov
sub
mov
xor
and
mov
dec
add
fs
add
int3
mov
adc
lock
cli
pop
fs
aas
or
jl
out
out
addr16
nop
xchg
or
les
int
adcb
cmp
adc
jge
pop
dec
push
add
dec
jmp
xchg
nop
ljmp
fimuls
fwait
sub
jns
inc
xchg
test
jo
int3
popf
scas
sbbl
add
loope
mov
push
and
sbbl
imul
out
pushf
lds
add
mov
mov
lods
xor
fadds
sar
or
sub
or
int
out
xchg
pop
sub
dec
push
popf
nop
jg
push
js
out
dec
add
imul
pop
sahf
loop
xor
inc
mov
aad
loope
mov
mov
ror
cmpsl
xchg
xor
xorl
addr16
dec
stos
inc
push
or
jg
aas
dec
out
push
and
adc
loope
out
insb
stos
and
jb
inc
mov
test
mov
aaa
jmp
adc
jge
and
cmp
fsubrl
addl
push
xor
pop
and
mov
xor
test
cli
sub
sbbl
outsb
pop
add
xchg
fwait
jl
push
popf
sub
push
out
arpl
pusha
mov
fmul
cltd
xchg
adcb
lock
mov
jo
cmp
adc
jg
mov
sub
pop
in
or
and
sub
pusha
in
sub
sub
jle
pusha
loopne
inc
push
es
lcall
push
cltd
orl
fs
out
pop
adc
xor
addb
fildl
in
out
ja
fisubrs
push
cli
jnp
cmp
out
push
mov
aam
mov
cmp
xchg
in
mov
popf
inc
adc
loope
cmpsl
or
lret
imul
pop
mov
push
sub
fwait
les
loopne
and
jg
jecxz
mov
xor
add
push
inc
inc
ja
push
jo
pop
aaa
cs
dec
mov
fs
xchg
jb
jmp
adc
sub
hlt
adc
pop
push
sbb
insl
adc
and
add
out
sub
lds
stos
add
nop
add
in
cmp
je
xchg
add
jo
das
fisubs
sub
xchg
ljmp
rolb
iret
sub
leave
fstps
fadds
add
jp
push
int3
shrb
jae
and
es
icebp
loope
scas
mov
and
mov
push
int
repz
imul
in
inc
xchg
push
cltd
cmp
adc
mov
xchg
jnp
jns
ss
mov
lahf
aad
mov
popa
stos
pop
xlat
in
push
out
daa
push
mov
mov
dec
std
mov
cmp
loopne
nopl
leave
test
cltd
sub
mov
push
in
sarb
shl
lods
in
test
or
inc
loop
sub
cld
adc
jecxz
aas
xchg
imul
mov
mov
mov
pop
add
jl
idiv
test
jmp
std
clc
imul
jecxz
xor
sbb
out
je
mov
jmp
insl
lock
cli
jo
sub
mov
popa
adcl
cmp
jp
dec
fstpt
mov
jo
stc
aas
lods
sbb
mov
cmc
test
rcr
adc
jge
cmpsb
jns
insb
ret
jne
or
cmp
mov
les
filds
sub
lea
stos
addl
test
xor
xchg
add
stos
mov
test
fistpl
mov
outsb
test
outsb
cltd
je
addr16
daa
and
push
movsb
sbb
mov
jbe
sbb
mov
loope
test
movsb
imul
push
dec
push
fwait
cmp
pop
inc
das
dec
add
jl
push
lock
push
mov
xor
dec
dec
sub
dec
adc
test
pop
mov
enter
push
iret
sub
push
je
shrl
rorl
fstpt
inc
or
and
cmp
adc
mov
push
xchg
mov
out
inc
andb
int
ds
mov
bound
je
pop
mov
or
mov
adc
mov
test
adc
in
mov
mov
sti
xor
repnz
and
jl
int
cmp
aam
mov
sub
mov
icebp
cltd
test
add
mov
jecxz
or
fnstsw
push
xchg
popa
mov
pop
cmpsl
pop
cmp
xchg
in
and
lret
add
add
cs
mov
mov
repz
mov
push
iret
pusha
pushl
sbbb
push
aas
mov
rcrb
loopne
lock
add
xor
pusha
pushl
sbbb
push
aas
mov
rcrb
loopne
lock
add
xor
pusha
pushl
sbbb
shld
das
rcrb
loopne
shrl
and
push
mov
push
iret
loopne
lock
jg
outsl
movsl
or
mov
mov
pop
mov
orb
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
