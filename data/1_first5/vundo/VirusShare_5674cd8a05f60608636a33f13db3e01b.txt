jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
sbb
mov
xchg
cmpl
add
pop
add
add
pop
add
add
add
add
mov
add
add
pop
add
lcall
add
dec
add
inc
add
jmp
xchg
add
add
add
add
inc
add
mov
jne
adc
fiaddl
aam
sub
in
add
test
jo
bound
add
add
push
sub
push
iret
add
jo
and
add
add
add
add
add
add
add
add
sbb
add
add
jo
dec
add
cmp
adc
jo
mov
lds
dec
add
add
add
add
add
add
add
mov
adc
aad
mov
inc
add
add
add
add
add
sbb
add
add
jo
dec
add
add
mov
dec
add
add
jo
dec
add
movl
mov
cmp
cwtl
add
add
mov
sbb
imul
jne
in
and
xor
jo
cmc
add
add
add
dec
add
add
add
icebp
add
dec
add
mov
inc
add
add
add
imul
add
pop
add
add
and
push
adc
cmpsl
add
add
add
xor
adc
sbb
add
icebp
add
add
add
add
mov
inc
add
jne
imul
or
adc
inc
add
xchg
add
jo
inc
add
add
out
adc
jne
test
add
jo
inc
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
sub
adc
inc
add
pop
add
add
add
cmp
dec
add
add
sbb
lea
inc
add
mov
adc
inc
add
add
add
sahf
add
add
add
add
add
add
add
add
dec
add
mov
lea
arpl
jo
or
cmpsl
add
add
add
add
jmp
push
add
add
dec
add
add
add
push
add
xor
in
das
add
add
add
dec
add
mov
add
push
adc
and
mov
dec
add
add
jo
icebp
add
add
add
pop
add
add
add
add
add
jo
jl
mov
movsl
add
add
add
add
inc
add
adc
xor
cmp
pop
add
add
add
add
add
add
push
add
add
cmp
roll
roll
add
mov
add
adc
add
cmp
flds
push
add
dec
add
add
add
add
add
add
add
add
add
add
jo
flds
mov
lods
add
add
add
add
add
adc
add
add
add
push
add
add
xchg
add
pop
add
int
test
add
jo
add
add
adc
dec
add
add
add
add
add
mov
sub
cmpsb
add
add
jo
inc
add
add
add
sbb
add
add
add
push
add
add
iret
add
push
add
mov
mov
roll
add
inc
add
add
rolb
add
roll
add
test
add
add
add
add
bound
add
jo
imul
add
add
addr16
out
outsb
pop
ljmp
sbb
and
xor
mov
xor
ret
sbb
mov
mov
cwtl
push
inc
fs
int3
sub
in
out
inc
push
int
push
jbe
xchg
dec
rorb
rcr
jnp
jo
sub
mov
lret
pop
leave
xchg
sub
popf
fs
and
cmp
push
or
xchg
or
mov
jb
lcall
add
fldt
mulb
push
in
mov
pop
dec
ret
div
subb
outsl
hlt
stos
sub
bound
test
jle
mov
xchg
andb
aam
test
adc
mov
cmp
sbb
andb
loop
std
mov
pop
add
pop
ret
loope
push
adc
and
test
jp
ja
scas
movsl
xchg
cltd
sbb
push
shll
pop
inc
sbb
sti
ret
mov
jne
cwtl
mov
xor
jmp
mov
jcxz
loope
mov
cmpsl
cmp
repz
jns
adc
xchg
adc
sub
test
jb
sub
mov
inc
push
pop
dec
xlat
out
xchg
and
dec
mov
popf
mov
movsb
or
out
loopne
jae
insl
xor
loop
shrb
adc
test
push
and
cmp
icebp
subl
or
pop
adc
dec
cmp
jae
add
or
mov
dec
into
xor
jb
je
cmc
jg
inc
pop
push
lahf
xchg
adc
aam
sub
sub
popf
lds
jns
cltd
ss
icebp
inc
jbe
cmp
ds
jbe
popa
test
jne
es
out
ja
dec
dec
or
ret
adcl
xlat
ljmp
jl
gs
push
js
sbb
sbb
push
ja
shrl
add
dec
adc
aas
mov
jcxz
push
stos
xor
or
lcall
scas
mov
and
movsb
int3
ficomps
mov
adc
cmp
jge
sub
inc
xor
push
in
popf
ljmp
xchg
jo
clc
lret
adc
sub
arpl
pop
movsb
xchg
inc
imul
int3
xchg
jle
outsl
push
cld
and
jmp
nop
xchg
js
iret
scas
pusha
mov
sub
stc
inc
mov
loope
out
hlt
dec
rolb
pushf
aam
dec
idiv
jnp
dec
arpl
mov
ljmp
sti
sub
rorb
cmp
xchg
sub
cmp
mov
dec
mov
mov
aas
scas
xor
jnp
fucom
aaa
adc
and
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
sbb
stos
je
fs
sti
and
pop
lahf
and
push
into
sub
cmp
dec
xchg
pop
test
jnp
mov
stos
je
fs
adc
add
xor
inc
or
sbb
dec
cmc
cmp
dec
icebp
pop
test
jnp
mov
stos
je
fs
adc
add
xor
and
aam
out
xchg
pop
mov
shlb
fmuls
adc
sti
sbb
add
sti
jmp
aaa
enter
sbb
and
push
inc
sbb
lock
ficoms
ficomps
cli
jmp
popa
mov
in
jb
mov
mov
movsb
fbld
xor
inc
lcall
pop
push
lret
mov
or
dec
lds
les
cmc
imul
dec
fstps
xor
adc
sti
les
sub
cmp
xor
popa
stos
test
fs
jno
jbe
fs
and
sti
and
sub
jnp
cmp
sbb
xor
or
ds
sub
adc
int
pop
xorl
pop
aam
fwait
inc
stos
je
fs
adc
add
xor
and
aam
les
hlt
cmp
dec
xchg
pop
test
jnp
call
xor
mov
push
arpl
xchg
aas
loopne
ret
push
xadd
cmp
sub
cmp
pop
scas
push
mov
or
jbe
push
xchg
pop
mov
icebp
sub
cmp
fs
adc
fwait
sbb
fildl
xor
and
aam
les
hlt
cmp
dec
xchg
pop
test
jnp
mov
stos
je
fs
adc
add
xor
and
aam
les
hlt
cmp
dec
xchg
pop
test
jnp
mov
es
mov
invd
adc
mov
lcall
mov
mov
and
dec
cmpsl
xchg
mov
and
fwait
stos
cmp
enter
shrb
mov
daa
push
das
or
fstpt
into
and
jl
pop
mov
cmpsb
ss
inc
call
inc
adc
cmc
add
enter
cmpsl
mov
inc
sub
xor
sub
cmp
rcrl
fsincos
shlb
fistl
sahf
lcall
mov
sti
movsb
lcall
hlt
sbb
mov
test
adc
cld
sbb
and
dec
push
mov
cld
cmp
enter
xchg
fdivrl
push
leave
jmp
push
inc
jnp
pop
push
xor
ret
push
adc
out
xchg
cltd
aas
aam
mov
xchg
mov
mov
xchg
adc
adc
or
push
xchg
xchg
imul
scas
sbb
dec
cli
andl
cli
fs
loope
bound
push
mov
outsl
mov
cmp
xor
std
int3
jae
push
or
pop
stos
sbb
sti
repnz
lods
and
push
pop
pop
push
mov
or
push
jmp
je
inc
lret
movl
xor
mov
fnstenv
jo
into
aas
inc
into
cmp
xor
and
in
shll
out
jle
or
fs
daa
pop
loop
popa
mov
dec
dec
fisubl
mov
cwtl
repnz
push
repnz
pop
xchg
mov
xchg
test
gs
xchg
jg
jl
lret
add
xor
repz
lds
test
push
fiadds
pop
fldenv
cltd
jge
lret
shll
sbb
loop
add
add
addl
in
mov
mov
push
cmp
dec
add
inc
ret
movsl
mov
pop
js
sbb
cmp
mov
sbb
orl
pop
stos
dec
fwait
inc
int3
push
lret
jnp
je
inc
or
popf
nop
lret
fdivs
mov
pushf
push
pop
lods
and
js
mov
incb
jp
jo
xor
jp
pop
fs
loop
and
push
scas
pop
in
xor
scas
jle
pop
adc
mov
push
pop
pop
pop
xor
roll
sub
repnz
mov
cld
ss
lods
testb
push
push
mov
xchg
fsubr
mov
dec
xor
int3
not
xorl
lret
mov
xchg
sub
test
je
invd
enter
rclb
je
xchg
mov
jmp
inc
inc
inc
daa
xchg
push
insl
ret
and
aam
sub
dec
pusha
sub
outsb
stos
pop
cmp
negb
adc
in
xor
jo
push
xchg
adc
sahf
jns
jnp
mov
ret
push
push
mov
jo
inc
daa
mul
pop
outsb
jmp
popa
xchg
popf
fdivl
enter
ret
lahf
and
fists
xchg
pop
mov
js
and
cwtl
rolb
mov
push
or
mov
out
lds
jge
mov
andl
rcll
adc
addr16
lods
repnz
frstor
lods
fldt
rcll
bnd
aam
imul
jmp
pop
mov
aad
adc
adc
push
cmpsl
pop
scas
mov
mov
push
add
repz
imul
andb
test
pusha
sbb
jge
pop
bound
movsl
push
pop
shl
dec
fistpll
int3
inc
shl
push
cmp
and
mov
mov
pop
add
push
push
dec
lret
add
xchg
pop
and
ss
lock
fstl
adc
mov
out
sub
or
xchg
imul
sbbb
mov
pop
cltd
aaa
enter
jle
dec
int
out
pop
mov
test
cmp
push
cmp
fmuls
inc
out
in
gs
xchg
mov
movswl
ss
dec
rorb
ds
mov
movsl
subl
dec
out
inc
xchg
jne
lret
arpl
movsl
cmpsl
cmpl
ljmp
inc
in
cltd
jp
inc
mov
rcrl
cmp
jne
dec
add
xor
jno
push
mov
lret
jns
stc
stc
loope
jp
cmp
lahf
divb
xchg
out
fimuls
mov
add
add
fisubrs
inc
jl
nop
pop
xchg
adc
scas
cwtl
ret
push
xchg
xor
add
loop
mov
or
ret
push
push
mov
lock
ret
aam
fimull
stos
jle
lret
in
imul
sub
sbb
cltd
sub
sti
rcll
cld
rcrb
dec
imul
or
mov
jle
popf
sub
inc
push
or
dec
inc
push
ss
bsr
inc
sbb
popf
jne
ljmp
pop
pushf
push
int3
push
add
mov
bound
leave
or
popa
aas
aad
out
aas
andb
addr16
inc
mov
xchg
push
jo
dec
sbb
sbb
arpl
sub
lods
es
sub
rorl
dec
pop
js
loop
pushf
dec
mov
loope
pop
shl
xor
subb
jnp
hlt
xchg
cs
iret
imul
xchg
loop
push
xchg
pop
imul
or
sub
add
xor
ficoms
outsl
popf
jle
adc
xchg
fnstenv
fidivs
cmp
sbb
faddl
jecxz
xor
sub
sub
jmp
sbb
in
push
or
sarb
int3
and
lock
dec
lods
cmp
sbb
iret
push
push
adc
leave
aaa
push
cld
and
repz
lcall
mov
dec
adc
xor
lret
or
lcall
xchg
push
cmc
inc
add
jl
add
ret
xchg
call
vcmpps
sub
loopne
or
jne
pop
mov
sub
jmp
aad
push
and
iret
cmp
xchg
test
push
aam
xor
lock
test
sahf
push
pop
cmp
or
add
jecxz
repz
pusha
in
mov
jecxz
test
das
xchg
aaa
popf
ret
xor
out
push
mov
dec
outsl
inc
out
adc
or
xor
xchg
jmp
add
pop
les
push
fistl
push
jns
and
adc
dec
pop
aas
int
xor
mov
sub
add
xor
movzwl
mov
push
out
inc
cwtl
fwait
stos
int
lea
imul
push
push
mov
or
jle
xchg
std
mov
stos
je
cmp
lret
jno
das
mov
movsl
mov
xor
psraw
arpl
push
add
mov
cli
nop
pop
out
jb
out
clc
jecxz
sar
test
sahf
repnz
add
sub
lea
jo
mov
mov
mov
dec
adc
popf
mov
xchg
subl
lea
mov
pop
ss
outsl
mov
ss
cld
fnstcw
mov
xchg
push
lcall
pushf
movsl
int
lods
clc
fdiv
mov
add
push
jl
sbb
addr16
ja
pop
jl
jecxz
rclb
rcll
xor
cs
sbb
imul
add
sahf
test
inc
cmp
aaa
popa
mov
cli
mov
fstpl
and
mov
subl
xchg
sarl
mov
jmp
sub
mov
and
mov
jg
pop
test
or
lock
stc
ret
dec
sbb
addr16
jne
cli
stos
lahf
arpl
scas
jae
xor
sub
sbb
fs
jo
fwait
popa
xor
scas
movsb
out
int3
mov
in
out
int3
insl
xchg
sub
pop
movsl
mov
sub
stos
arpl
cmp
cmp
cwtl
cmc
cmp
shlb
bound
lds
mov
shrl
jno
stos
mov
test
aas
sbb
out
cmpsb
mov
xorl
push
rolb
fildl
xchg
sbb
push
jnp
jns
icebp
ja
fidivs
sub
outsl
jmp
and
bound
jle
ret
cmp
adc
inc
clc
xchg
or
loop
add
cmp
jge
lret
sub
hlt
test
sub
xchg
aaa
mov
sbb
lcall
dec
stos
sub
or
fwait
movsb
inc
lea
or
cltd
scas
lret
or
outsb
adc
das
mov
fiadds
push
sbb
movsb
bound
push
popa
adc
ds
pop
xor
and
lock
enter
sbb
add
inc
jmp
push
pushf
mov
loop
xor
add
push
adc
jg
or
mov
xchg
adc
inc
sbb
movsl
scas
dec
mov
sbb
stos
xor
mov
jmp
fsubl
sbb
std
mov
ret
mov
and
xor
xor
lods
in
push
cld
cltd
xchg
jnp
das
dec
and
cmpsb
mov
jg
pop
repnz
repz
jae
or
mov
xchg
das
push
adc
rep
adc
repnz
mov
mov
in
adc
aaa
cmp
or
sqrtps
cmc
dec
hlt
jge
pop
push
loopne
outsl
xor
sub
lea
ss
adc
sub
cld
and
mov
cmp
cmp
or
daa
add
mov
sbbl
dec
jno
or
cmpsl
push
mov
push
fstl
or
les
bound
and
in
enter
insb
sub
sti
sbbb
fildl
cmc
addl
adc
push
add
inc
jb
lahf
movsl
ss
pusha
stos
push
int
adc
cmp
stos
daa
outsb
xchg
out
fsub
mov
lds
out
fs
sub
out
inc
mov
push
cld
dec
fadd
adc
add
outsl
xorl
xchg
adc
jbe
movsl
mov
xchg
stc
pandn
fstl
sub
arpl
aas
aas
and
push
mov
out
jns
test
dec
in
add
lods
js
cmpb
out
cmp
daa
mov
jno
stos
push
cld
mov
mov
add
out
dec
dec
pop
or
test
mov
push
mov
movsb
test
xchg
pop
les
push
cmpsl
jbe
and
mov
jbe
cmp
or
mov
xchg
cmpsb
push
rcrb
mov
out
mov
in
sbb
fwait
dec
in
xor
xchg
arpl
mov
jne
xchg
rcll
jecxz
push
xchg
roll
jmp
xchg
punpckldq
xchg
jecxz
xchg
lds
sbb
mov
and
add
lock
mov
or
addr16
jb
cmpxchg
pop
cwtl
xor
jno
inc
xchg
shll
dec
aaa
outsb
mov
leave
rolb
fldenv
aaa
inc
mov
sahf
pavgw
jo
das
jg
pop
jecxz
out
outsb
sub
jnp
gs
leave
rcl
cmc
sbb
push
xor
add
add
stos
jecxz
fwait
jne
ret
int3
and
jne
adc
jp
mov
out
pop
add
add
or
imul
jae
jo
dec
nop
push
jp
add
mov
pop
sti
lret
add
pusha
or
push
mov
out
rcll
xor
sti
rcl
bound
inc
xchg
xchg
call
aaa
ljmp
or
push
outsb
push
jge
stos
xchg
sub
adc
adc
mov
les
mov
les
or
add
push
mov
xchg
lcall
in
iret
jg
jo
rclb
xchg
dec
in
out
sub
fwait
imul
mov
fbstp
mov
idiv
dec
xchg
and
jge
test
sub
inc
int
xor
int3
shlb
xor
and
pop
xchg
xor
pop
lcall
adc
and
sub
andb
in
test
repz
mov
lcall
test
fidivl
dec
outsl
movsb
aaa
lds
test
add
pop
pop
lret
into
xchg
and
subb
or
jge
scas
pop
mov
add
popa
jbe
fstl
call
dec
aad
mov
add
xor
mov
jecxz
aaa
dec
in
in
lcall
dec
cltd
and
mov
les
jne
int3
frstor
sub
ret
out
mov
jnp
jle
loop
icebp
xchg
fcmovne
push
fildl
inc
dec
jl
cmp
out
adc
cs
ja
pop
sahf
lcall
enter
xchg
sub
cmpl
out
hlt
movsb
lcall
pop
jle
or
fisubrs
pop
adc
fucomip
sbb
push
notb
aaa
mov
fsubrl
cmp
lret
aas
repnz
inc
and
lds
gs
xchg
repnz
ljmp
dec
jmp
fsubrl
pop
pop
lret
jle
xor
mov
lods
daa
data16
js
xor
loopne
jnp
aam
mov
int3
and
xchg
clc
xchg
pop
sbb
mov
push
flds
je
lahf
stos
movsb
in
sbbl
mov
out
rcl
loop
fcoml
movsl
sbb
sarb
jae
leave
adc
adcb
popa
int3
outsb
mov
pop
mov
into
pop
or
insl
inc
ss
shrl
cmp
sub
les
mov
fs
mov
sub
cmpsb
stos
mov
or
imul
cmpsb
adc
mov
dec
out
addl
mov
int
mov
pop
cli
push
loop
repnz
mov
xor
mov
iret
sbb
or
outsl
inc
cmp
pushf
mov
notb
sbbb
cs
movsb
rorl
push
sub
outsl
xchg
into
mov
add
and
push
xor
sbbb
mov
data16
loop
jo
sti
mov
xor
add
aaa
pop
popf
hlt
out
cli
jae
mov
xchg
and
enter
xor
mov
pop
insl
mov
cmpsl
mov
enter
jge
pop
roll
ret
call
in
stc
cmp
xchg
inc
mov
pop
inc
jl
xor
jbe
int3
jge
idivl
shl
sub
inc
jne
mov
pop
adc
mov
cmp
adc
push
lds
lret
xlat
pop
add
clc
adc
push
mov
mov
jb
mov
scas
in
jg
nop
xor
lds
push
mov
sub
imul
lock
mov
filds
pushf
push
arpl
dec
fistpl
jbe
out
mov
mov
ret
subb
push
and
jbe
dec
and
pusha
aam
mulb
lret
dec
jne
adc
js
cmp
mov
mov
and
add
enter
inc
jl
dec
neg
pop
mov
mov
insb
dec
mov
call
push
inc
and
roll
lds
out
roll
cmpl
std
addl
sbb
sti
sub
sbbl
or
pop
cmp
loop
sbb
jo
xchg
out
stos
movsl
loop
add
jecxz
push
xchg
mov
fstpt
popf
mov
push
xor
add
inc
pop
inc
sub
fsubl
push
cmc
pop
push
iret
mov
or
loop
adc
inc
sub
int
subl
sbb
retw
stos
adc
sub
movsb
or
sbb
push
repnz
xor
dec
addr16
test
lcall
test
mov
push
scas
and
xor
int3
or
fnstcw
inc
orb
pop
scas
adc
xchg
out
insb
mov
in
sbb
push
mov
sub
xchg
mov
ja
and
xlat
inc
stos
and
mov
rcll
int
in
mov
enter
mov
and
fs
mov
pop
mov
jae
add
cmpsl
lcall
mov
ds
jmp
push
mov
movswl
xchg
cs
mov
adc
movsl
sbb
call
rcr
testb
ret
dec
aas
mov
insl
pop
ja
repnz
xor
imul
cmpsb
ss
jae
aaa
lock
or
cmpsl
hlt
jecxz
hlt
mov
sbbb
aaa
mov
rcrl
pop
call
jl
mov
ret
mov
stos
add
andb
cwtl
hlt
xchg
dec
adc
lods
adc
fsubrl
sub
jae
pop
adc
fstpl
repnz
pop
lea
sbb
cmpsl
jns
out
jp
jae
or
enter
cmp
add
jmp
or
ds
leave
test
jbe
aaa
jmp
inc
push
je
mov
jnp
das
outsb
leave
lret
out
pop
jmp
rcll
add
jb
inc
aad
and
popf
sti
push
push
and
stos
loope
add
dec
fdivl
xchg
lods
mov
pop
insl
subl
adc
bnd
pusha
clc
xor
push
cltd
pop
ret
cmp
enter
mov
add
outsl
ret
cltd
inc
repz
out
ja
roll
sti
scas
sub
dec
ret
xchg
outsl
jo
pop
fisttpll
call
push
cwtl
inc
call
pop
cmp
xor
pop
aam
or
out
das
ds
xlat
xor
mov
pushf
or
roll
inc
jge
jmp
je
loope
lret
jl
kaddw
in
add
in
pushf
insl
mov
test
cmp
sbbb
and
xchg
push
lea
cli
je
sbb
outsl
or
xacquire
arpl
cld
mov
ret
shl
adc
loop
and
aam
jle
inc
fnstcw
insl
xchg
jnp
in
loopne
stos
shrb
es
js
pop
insb
push
lcall
xchg
cmp
loope
mov
push
dec
sti
xchg
in
cmp
pop
mov
addb
xor
out
sub
sbb
mov
jecxz
in
ficoms
sahf
fistl
adc
addl
push
das
adc
ret
push
pop
test
hlt
jmp
test
fcmovbe
lret
cmp
add
add
sbb
adcl
mov
mov
push
lret
gs
mov
pop
xchg
cmp
jl
outsl
add
xor
movsb
jle
mov
fwait
ja
dec
in
movb
ud0
xchg
push
hlt
push
sub
add
cli
insb
fcoms
cmc
adc
cmc
mov
xchg
fidivl
shrb
adc
push
xor
fs
mov
into
enter
jbe
mov
aam
adc
into
js
mov
pushf
cltd
out
xlat
pop
mov
stos
test
inc
sahf
inc
test
dec
mov
test
pop
out
aas
shl
roll
call
jnp
cmpl
rol
pop
and
clc
xor
push
and
sbb
mov
pusha
hlt
push
pop
mov
xor
mov
adc
push
sbb
jmp
xchg
cmp
in
sbb
push
sub
jle
pusha
fcoms
pop
ja
inc
out
mov
imul
sbb
ret
dec
and
sbb
dec
jae
adc
and
negb
addr16
push
or
jmp
xchg
ja
pop
mov
mov
push
mov
andl
push
jge
inc
push
pushf
cli
test
imul
jmp
lahf
nop
xchg
sahf
adc
out
aas
adc
push
cmp
xor
or
or
pop
sub
jae
or
lea
jecxz
adc
jecxz
notl
mov
enter
cmp
sbb
in
popf
xchg
push
loopne
loope
push
in
test
cmp
sbb
bound
jnp
repnz
sub
jecxz
mov
lcall
xlat
add
push
push
adc
cmp
std
cmp
adcb
dec
mov
jmp
xor
mov
inc
push
and
fadds
jae
popf
xor
mov
iret
add
js
jge
sub
xor
mov
add
jns
mov
push
stc
dec
inc
pop
dec
repz
pushf
scas
sbb
shll
push
fmull
test
fisttpl
test
lahf
test
mov
js
cmpsb
fdivrl
mov
or
test
and
out
and
fistps
sub
in
das
js
fxam
ja
aam
in
mov
ret
int
jbe
dec
imul
les
mov
add
xor
and
aam
les
hlt
cmp
dec
xchg
pop
test
jnp
mov
stos
je
fs
adc
add
xor
and
aam
les
hlt
cmp
dec
xchg
pop
test
jnp
mov
stos
je
fs
adc
add
xor
and
aam
les
hlt
cmp
dec
xchg
pop
test
jp
mov
stos
je
fs
adc
add
xor
in
aam
outsb
xor
sarl
dec
test
jns
imul
insl
or
dec
push
or
fstps
jmp
sub
imul
cmp
dec
sbb
stos
stc
mov
leave
sub
fisttpl
or
dec
imul
sub
pop
or
test
xchg
int
cld
mov
je
pop
sbb
mov
sbb
mov
scas
mov
filds
jno
sub
in
xchg
sarl
adc
mov
enter
and
xor
loopne
push
mov
stos
cmp
pop
mov
pop
or
data16
popa
pop
sbb
cmp
into
lock
pop
es
jne
icebp
ss
mov
test
in
xchg
jmp
in
xor
jnp
enter
inc
mov
out
mov
cwtl
fcmovu
cld
les
test
rcrb
cld
push
dec
clc
je
mov
mov
mov
out
cmp
pop
sbb
cmp
dec
sbb
stos
stc
mov
leave
jmp
sti
test
push
dec
mov
imul
das
jl
jns
xchg
fiadds
ljmp
in
dec
cmp
outsb
pop
ja
imul
jbe
or
mov
fwait
movsl
ljmp
out
sub
sbb
daa
push
jnp
dec
sbb
stos
stc
mov
leave
jmp
sti
test
sub
imul
cmp
dec
sbb
stos
stc
mov
leave
jmp
sti
test
sub
jl
stos
xor
xchg
cld
fsubp
adc
cmp
test
pop
sbb
test
stos
test
inc
xchg
cmpsl
mov
divb
fs
jmp
xchg
test
xor
loope
pop
ret
dec
xor
lods
mov
stos
shlb
ficomps
pop
jg
nop
fsubl
iret
leave
adc
repnz
or
aaa
aam
adc
adc
lods
mov
xchg
mov
pop
lods
adc
and
jle
aam
or
aad
mov
push
leave
shll
xor
push
cli
scas
loop
outsb
pop
mov
adc
popf
outsb
int3
jne
mov
loope
xchg
add
cmp
mov
ja
clc
and
ss
scas
cmpsl
mov
mov
mov
out
jo
pop
fisubrs
pop
mov
std
sbb
gs
enter
sahf
int3
cmp
leave
ja
xchg
push
mov
inc
imul
roll
test
test
nop
icebp
mov
adc
pop
mov
mov
pop
xchg
sbb
or
std
pop
cltd
out
in
jne
gs
sarb
daa
clc
stos
fisubl
fwait
incb
jmp
out
or
adc
xchg
adc
dec
bound
scas
sbb
or
inc
add
and
lea
fisttps
shlb
mov
das
jnp
mov
cmp
mov
flds
xor
pushf
in
int3
rcrb
jo
lods
jle
cld
cmpsl
or
pushf
rcl
daa
mov
xlat
jmp
add
pop
aas
xor
and
sub
sti
mov
in
loopne
mov
or
sbb
push
push
or
jo
imull
cmp
xlat
je
cmp
insb
add
ss
add
imul
mov
xor
cltd
xchg
dec
fisubrs
iret
popa
mov
jl
sbb
andb
enter
pop
ret
or
rclb
mov
pop
xchg
dec
shlb
es
orl
xchg
cmp
subb
sub
cwtl
stos
nop
nop
aad
pushf
jmp
dec
jp
test
pop
cmp
xchg
fsubrs
loope
push
lock
inc
mov
pop
scas
mov
mov
jmp
fimuls
pop
and
push
mull
sub
icebp
mov
aaa
out
sub
jno,pt
jle
stos
icebp
inc
mov
icebp
jbe
pushf
je
orb
cld
and
test
cltd
and
sbb
fs
and
or
movsb
imul
imul
js
jle
push
sbb
xor
cmp
inc
or
andl
adc
inc
ror
jg
push
in
iret
ds
repnz
pop
repnz
push
xor
adc
push
mov
jle
pop
adc
inc
dec
mov
clc
inc
out
cmp
call
frstor
xlat
lret
sbb
shll
cld
ret
xchg
adc
je
pushf
mov
dec
cs
std
stc
sub
call
push
inc
cmc
and
sub
test
aas
lds
mov
xchg
cmpsl
aaa
or
cwtl
cmp
add
mov
aas
aam
ret
push
adc
cmpsl
dec
push
mov
dec
and
sti
mov
int
les
sahf
inc
pop
inc
pop
sub
shlb
fsubrp
subl
mov
sub
jle
mov
push
mov
dec
adc
out
ja
sub
push
aad
cmp
pop
sub
xchg
fmulp
dec
fwait
mov
jnp
fiadds
clc
xchg
fildl
dec
xchg
xor
jnp
push
insb
insb
aad
sub
jecxz
mov
mov
fwait
in
and
jne
int3
push
fdivr
bswap
xchg
insl
pop
sub
aad
mov
xor
adc
or
cmp
fistl
cld
cmp
mov
adc
and
adc
hlt
cwtl
mov
mov
mov
cmpsl
ljmp
in
mov
sub
sbb
adc
xlat
stos
jge
and
push
mov
jo
jne
pop
fwait
shr
sbb
movsl
into
fwait
pop
pop
pop
and
ss
enter
pop
aaa
lods
dec
daa
loope
in
xchg
jnp
loop
and
add
jb
pop
mov
jge
loop
push
mov
shll
and
dec
daa
orl
inc
shrb
icebp
jp
jl
add
pop
mov
jb
mov
mov
pop
lret
cmp
xchg
mov
jmp
xor
repnz
push
int
pushw
and
outsb
sti
inc
cmp
xchg
pop
enter
mov
add
add
scas
xchg
xor
in
fbstp
jmp
xchg
mov
scas
dec
sbb
sbb
lcall
add
popa
sbb
aam
add
pop
push
fistpll
mov
dec
fstpt
adc
xor
xchg
push
lea
rcr
xchg
sti
ret
int
int
dec
cmpsb
xor
clc
mov
cwtl
sub
jbe
jns
lret
jge
add
and
stos
rcll
add
push
xor
ret
sub
fisubl
add
ficompl
in
lods
rol
jmp
xchg
xor
jne
jne
mov
add
aam
aaa
hlt
cwtl
or
push
inc
fadds
filds
sbb
inc
icebp
sahf
aad
mov
cmp
and
pop
jo
xchg
sbb
pop
testl
mov
sbb
std
sub
push
out
mov
rclb
clc
out
cld
jne
mov
ja
outsb
es
aas
mov
fwait
out
xchg
inc
push
inc
push
mov
gs
cli
sub
das
sub
cmp
or
stos
movsb
sbb
fisttpll
pop
push
popa
lahf
cmpsb
jle
and
sbb
call
dec
hlt
jmp
rcrb
mov
in
aad
cmc
mov
lret
inc
pop
mov
and
mov
sbb
stc
aad
mov
jbe
sahf
cld
jb
lock
lahf
insl
mov
in
mov
outsl
push
sarb
ret
shll
fwait
movsb
xchg
bnd
in
pop
pop
nop
inc
adc
mov
add
in
test
inc
imull
mov
mov
cmpsb
jns
adc
adc
pop
pop
push
fidivrl
mov
stc
mov
mov
std
sub
ret
inc
sbb
xor
ljmp
pop
dec
into
fstpt
adc
inc
cmp
inc
aad
lods
mov
ficompl
xor
lea
pop
mov
and
mov
addr16
add
cltd
fimull
mov
enter
int
cld
daa
cld
mov
cwtl
push
push
push
dec
jb
sarl
or
ret
test
mov
andb
adc
pop
mov
xchg
mov
lock
in
rol
scas
lret
popf
jp
mov
jnp
sbb
jbe
test
daa
mov
les
fwait
mov
loopne
movsl
arpl
dec
adc
inc
shll
out
jmp
dec
enter
jp
lods
and
or
mov
cmp
add
lock
lcall
pop
pop
adc
xchg
std
loope
repz
jae
pop
mov
andl
shlb
cmp
sarb
mov
js
mov
aad
loop
leave
leave
push
test
out
lret
adc
pop
in
shrl
hlt
clc
mov
jp
fdivrs
and
xchg
push
dec
test
sub
and
mov
xchg
js
cmp
adc
negl
jne
mov
xchg
mov
and
dec
pop
xchg
inc
sarl
out
pop
stos
rcl
push
arpl
mov
loopne
or
roll
fimull
jecxz
xor
sub
mov
dec
sub
imul
add
jno
test
and
lea
ret
sub
stc
pop
ret
lcall
stc
js
pop
push
sub
mov
mov
pop
arpl
xchg
cmp
cwtl
or
dec
sub
mov
lods
sbb
fldcw
ffree
loope
aam
push
inc
xor
fistl
scas
enter
sub
out
push
lods
dec
insl
dec
sub
test
loopne
in
lcall
call
rolb
sbb
int3
fstl
enter
jge
inc
lock
pop
mov
popf
jg
fistpll
cltd
lock
cmp
xchg
inc
arpl
push
shlb
xchg
pop
pop
push
loope
xor
ljmp
mov
adc
or
mov
inc
mov
or
movl
jle
push
sub
push
cmp
out
sahf
sbb
in
ds
stos
push
inc
adc
cmpb
adc
in
jbe
out
push
fwait
loop
or
cmpsb
sbb
dec
in
push
dec
mov
dec
xor
or
sti
cmp
shr
xor
dec
xor
sub
cmp
pop
adc
jle
xchg
adc
pop
push
pusha
pop
mov
add
jmp
inc
shll
adcl
jbe
inc
add
notl
lds
dec
pop
adc
mov
sub
sbb
jo
imul
cwtl
data16
loop
inc
inc
into
daa
jecxz
aas
sub
jecxz
jo
ret
es
out
lods
insb
nop
push
icebp
cld
cwtl
adc
jo
sub
adc
les
push
loop
xorb
call
cld
push
xor
inc
filds
pop
xchg
jb
inc
aas
xchg
xchg
neg
sub
jecxz
aad
add
movsb
lods
fistpll
sbb
fnstcw
stos
mov
xchg
cmp
mov
jge
out
iret
cmp
sahf
leave
lcall
mov
daa
xor
movsb
mov
xor
push
lds
lahf
push
cs
push
mov
leave
inc
test
leave
shlb
sbb
mov
leave
jge
add
pop
stos
push
and
or
loope
mov
leave
dec
leave
dec
ds
add
les
push
roll
test
cmp
dec
jmp
jg
fdivrs
push
aam
push
jb
lahf
sub
sbb
ja
adc
test
jae
adc
xchg
cmpsb
dec
xor
mov
test
hlt
lcall
fiadds
push
lcall
and
mov
cmc
iret
pop
jge
aaa
into
push
lds
xchg
mov
inc
les
sub
pop
add
sub
cmpsb
mov
imul
sub
mov
xorb
bound
mov
pop
fdivr
or
fimuls
mov
ffree
inc
inc
rcr
ret
push
xlat
shrl
pop
adc
lret
xlat
in
add
and
subl
cld
jnp
imull
mov
xchg
push
lret
mov
push
pushf
mov
in
or
add
repz
mov
ja
lock
jns
lret
adc
cmp
sub
sub
cld
jne
out
add
sub
je
xlat
xchg
pop
jno
cld
or
mov
sub
das
popf
push
movb
das
or
aam
dec
lret
ss
mov
pop
aam
test
js
arpl
js
xchg
iret
out
daa
mov
lods
push
fnstenv
mov
cmpsl
mov
adc
or
cbtw
imul
pop
scas
test
xorb
sub
pop
or
hlt
imul
test
loop
push
jl
out
ljmp
push
les
mov
shll
mov
and
xor
xchg
pop
mov
fmull
dec
clc
xchg
pusha
cwtl
test
push
add
xor
push
test
mov
or
sbb
adc
cmp
lret
pop
pop
or
jecxz
lret
jl
subl
std
xor
and
mov
bound
jb
aaa
jle
arpl
mov
pushf
pop
mov
push
movl
inc
push
xor
cltd
xor
arpl
add
pop
sbb
in
mov
ja
popa
xchg
mov
lods
incl
push
inc
clc
jl
jle
cmpsl
imul
xlat
jecxz
popa
rcll
adc
jb
jmp
jo
xor
mov
mov
inc
arpl
ljmp
push
xchg
add
lea
call
dec
cld
outsb
cmp
mov
pop
scas
cmpsl
insb
or
ss
data16
nop
icebp
icebp
subl
pop
sbb
xchg
pop
into
movsb
mov
xor
add
bound
sub
sarl
int3
in
mov
or
lock
mov
pusha
pusha
pop
rcr
jg
jg
jle
out
std
and
cmp
xchg
pop
test
jge
adc
mov
ret
call
mov
push
daa
push
pop
icebp
cli
sbb
fwait
lea
sub
lods
mov
or
mov
mov
enter
out
sbb
xchg
ret
mov
mov
mov
lds
mov
or
push
inc
lret
adc
inc
cmpb
or
loopne
lock
jecxz
xor
cs
iret
jbe
and
and
shlb
test
and
xor
dec
scas
cmp
lahf
jae
push
cld
sub
xchg
xor
adcb
inc
adc
daa
cli
rolb
imul
xor
dec
aaa
in
dec
inc
inc
not
sub
push
jecxz
mov
scas
sbb
sahf
lcall
mov
add
sub
and
cmpl
adc
adc
ret
or
cli
movsb
jecxz
repz
sahf
or
cmc
add
sbb
ds
sub
shlb
lcall
cmp
popf
shl
dec
pop
jnp
pop
pop
adc
nop
push
sti
dec
bound
inc
sbb
les
mov
push
int3
jmp
jp
mov
fnsave
mov
inc
mov
fs
stos
jge
fnsave
sub
jns
sti
les
stos
clc
cmp
add
clc
jno
dec
mov
mov
addb
cltd
fwait
pop
cmpsl
test
cmpsl
mov
lods
mov
bnd
data16
add
mov
popf
push
cld
mov
mov
popf
push
cmp
mov
sbb
aas
icebp
sbb
dec
xor
or
dec
xchg
into
xor
jmp
out
pusha
lds
push
mov
add
das
je
mov
dec
lea
mov
jb
mov
popa
out
xlat
sub
leave
inc
jbe
mov
js
sub
leave
imul
testl
movb
jge
xor
pop
fiaddl
rcrb
cwtl
and
xchg
in
mov
push
out
xchg
or
cmp
add
cmpsl
sarb
mov
mov
sbb
sub
fists
rolb
and
lods
xchg
pop
in
ds
mov
aas
cmp
pusha
sub
stos
hlt
subb
enter
mov
xchg
mov
test
push
mov
repnz
xlat
hlt
int3
xor
inc
dec
les
dec
loop
pop
cmp
lods
mov
pop
jg
sbb
mov
add
aas
dec
pop
xorb
daa
cmp
adc
pop
and
xor
movsb
cmp
add
test
xchg
adc
add
mov
mov
xchg
in
pop
cs
movsb
cmpsb
arpl
fldl
jmp
movl
andl
subl
cmpsl
mov
clc
sbb
bound
push
pop
pop
mov
jmp
add
mov
in
enter
pop
ficompl
cmp
mov
push
ja
jo
and
jmp
popf
int
mov
dec
test
or
mov
add
jle
ret
pop
in
push
pusha
push
add
xchg
test
jecxz
sbb
adc
out
xchg
stos
pop
xchg
and
and
xor
or
mov
xchg
mov
dec
xchg
jle
push
lcall
imul
push
bnd
pop
cli
rolb
lret
in
xchg
pop
sbb
insb
inc
movq
in
inc
icebp
sub
jg
int
jbe
shlb
mov
sub
pop
jnp
cmpl
jnp
sub
sar
popa
enter
insl
cmp
sub
push
sub
adc
push
cmp
lea
dec
or
lods
ret
sub
dec
aad
pop
mov
sub
fildl
xchg
xchg
leave
or
rclb
push
pop
cmp
or
sub
je
arpl
addr16
enter
data16
popa
aaa
cmp
mov
xorl
leave
call
jge
fidivl
test
pop
lock
mov
in
test
xchg
rcrl
or
xchg
pop
cmp
jb
aas
jno
mov
call
mov
adc
xchg
mov
outsb
xor
or
dec
jmp
dec
push
mov
mov
ret
notb
iret
mov
push
xor
ret
xchg
les
loopne
rcrb
inc
mov
cltd
orl
push
dec
push
or
int
pushf
sub
add
xchg
jne
mov
ds
fs
int3
cmp
popf
sar
call
or
and
je
add
ret
in
ljmp
and
pop
cmp
xchg
xchg
adc
sbb
into
jecxz
ljmp
lcall
or
leave
inc
inc
add
fildll
mov
push
cli
mov
shrl
push
mov
stos
pop
push
sub
in
je
mov
sub
mov
insl
test
mov
push
cmp
mov
fisttpl
aas
sarb
push
sub
lret
jne
cmp
aas
inc
add
fstl
inc
cmpsb
adc
sbb
ud0
out
mov
sub
insb
adc
mov
fsubs
pop
jno
mov
adc
inc
shll
fs
adc
pop
inc
inc
andb
inc
lea
jecxz
mov
cmp
dec
sahf
popf
mov
dec
loopne
jg
rol
inc
xchg
mov
pop
aaa
rolb
bound
jg
mov
xchg
es
stos
flds
pop
inc
mov
mov
sub
add
lods
mov
cmpsl
dec
jbe
adc
imul
clc
adcl
push
out
xor
clc
pushf
push
inc
push
ja
mov
jo
fiadds
ds
mov
pop
or
sbb
jae
jp
clc
ja
insb
push
lods
xor
pop
and
ss
roll
jne
adc
rcrl
outsl
xor
out
dec
adc
pop
sbb
scas
pop
outsb
jmp
mov
inc
adc
jl
loopne
xor
inc
sbb
int3
and
std
out
cmpsb
or
sbb
sbb
pushf
cmp
jb
dec
mov
push
mov
movsb
addr16
sbb
push
mov
cmp
sbb
xor
daa
push
addr16
jl
aam
out
cmp
cli
pop
bound
adcl
jb
xor
sbb
push
testb
divb
cwtl
jl
cmpsl
and
jge
ror
cli
imul
adc
data16
ja
and
popf
push
das
imul
push
scas
add
pop
imul
mov
mov
gs
cs
shlb
and
xlat
js
push
inc
addr16
xor
xlat
scas
std
ja
dec
lret
in
outsl
movb
pop
sahf
jl
fmull
xor
ret
fldl
imull
jmp
movsl
in
and
cmpsb
andl
inc
xchg
cmp
scas
or
scas
aas
seta
gs
jle
jmp
mov
push
std
jne
jg
mov
imul
js
push
add
xchg
lods
imul
enter
daa
jle
cmp
lock
inc
mov
mov
mov
add
add
lea
dec
xchg
mov
xor
mov
xor
ret
aam
xor
mov
dec
call
int
out
xchg
cs
sub
xorl
adc
lret
test
pop
fadd
push
mov
jg
jmp
sbb
lcall
mov
sub
cs
cmp
and
xchg
gs
outsl
add
pushf
add
mov
jae
push
push
fcmovne
push
ja
jno
out
cmpsb
inc
into
scas
ja
dec
cmp
cwtl
bound
arpl
stos
leave
sbb
addr16
jg
xchg
xorl
dec
test
sarb
mov
pop
sub
sub
mov
rcr
inc
scas
ds
aam
xor
jno
pop
addl
mov
inc
int3
push
lea
mul
mov
pop
loopne
addr16
sarb
cmc
pop
add
outsl
dec
jg
push
out
sti
test
mov
add
or
dec
imul
sub
pop
or
fstps
test
sub
imul
cmp
dec
sbb
stos
stc
mov
leave
jmp
sti
test
sub
imul
sbb
or
fstps
test
sub
imul
cmp
dec
cltd
pop
imulb
fstps
push
mov
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
cwtl
decb
into
rcl
scas
rorl
or
pop
sub
ds
stos
js
push
out
mov
mov
call
push
cmp
dec
pop
ds
js,pn
push
out
mov
mov
call
outsb
dec
cmp
pop
jnp
inc
cmp
in
jmp
lahf
xlat
jns
dec
adc
shl
and
or
lret
aad
ret
movsl
nop
push
das
int3
je
ja
inc
mov
enter
add
movsb
xchg
test
cmovnp
cs
cmp
cmpsb
loop
shrb
loope
lea
sbb
fidivs
xchg
sub
ret
out
sti
loope
xchg
adc
scas
mov
movsl
test
fldenv
dec
roll
push
or
xor
mov
arpl
mov
mov
rolb
push
push
aaa
repz
inc
and
outsb
pop
or
enter
mov
or
pop
decb
into
fdivrs
call
outsb
cmp
dec
pop
ds
js,pn
push
out
mov
cmpsl
mov
shrb
sbb
dec
ss
or
pop
or
sbb
dec
out
cld
in
fcmovnu
jmp
lret
lods
mov
outsl
sbb
sub
scas
pop
sub
pop
pushl
int
popf
mov
call
outsb
cmp
dec
pop
ds
js,pn
push
out
mov
mov
call
outsb
cmp
dec
pop
ds
js,pn
push
cmpsl
and
jb
inc
out
pop
jl
sub
mov
push
push
xlat
push
xor
xor
cmpsl
mov
scas
adc
scas
xchg
cmp
insb
pushf
push
jb
push
pusha
test
pop
jl
pop
jne,pt
xor
sbb
and
shl
and
add
jge
dec
mov
addr16
cltd
add
sub
insl
shl
test
lcall
stc
cs
aad
jne
cs
push
cmp
loopne
cli
push
push
sub
cli
daa
test
movsl
enter
push
jb
jb
sbb
clc
and
mov
jge
repnz
add
shll
xchg
leave
xchg
jno
jl
sbb
cmpsl
fisubrs
push
jmp
mov
stos
push
push
les
fwait
pop
arpl
fidivrl
cmp
xor
jo
push
sbb
mov
std
negl
adc
sub
xchg
xor
cwtl
inc
in
pop
xchg
iret
ret
enter
xor
rclb
es
aaa
shlb
dec
mov
in
popf
sub
xchg
movsl
cmpsl
push
push
sbb
popl
popf
dec
enter
stos
je
in
mov
sarb
icebp
lcall
call
jp
xchg
xchg
push
or
pop
and
fidivl
movsb
test
cld
call
mov
ret
cmp
jns
outsb
lock
or
inc
ja
icebp
push
add
psubd
fdivs
pop
and
and
mov
cmp
cmp
clc
lret
or
pop
mov
or
add
xor
cmp
rcrl
scas
push
push
out
sti
pop
jb
jge
jno
or
movq
pop
inc
out
insl
ret
cmpsb
ffreep
pop
insl
lret
stos
pop
push
pop
sub
add
std
daa
movsb
and
aad
dec
ret
fistps
adc
bnd
ret
xor
jecxz
movsb
ret
mov
adc
les
scas
nop
repnz
rolb
outsb
leave
lahf
sub
orl
lret
add
mov
and
jp
or
mov
lahf
adc
bound
ss
push
sbb
es
push
push
mov
pop
mov
push
pop
cs
or
jae
inc
imul
sbb
mov
and
daa
lds
repnz
pusha
cltd
xor
in
sbb
andb
inc
mov
mov
std
nop
test
push
jae
bnd
out
sbb
or
roll
arpl
scas
lock
repz
mov
mov
outsl
hlt
pushf
mov
add
lret
test
std
inc
test
outsb
xorb
jp
lds
mov
mov
mov
pinsrw
pusha
aad
movsb
lea
and
jg
xor
xchg
lods
cmp
pushf
mov
arpl
in
mov
fsqrt
xchg
sub
testl
push
xchg
cli
adc
aam
pop
inc
mov
sbb
push
shlb
inc
movsb
mov
loop
flds
call
jp
inc
inc
inc
push
icebp
shrb
adc
mov
or
adc
sub
cmc
push
and
and
pop
pop
ret
jo
inc
push
xchg
cmp
lret
pop
and
and
or
lods
mov
into
loop
repz
dec
cmp
xchg
fidivl
or
fiadds
repnz
mov
xor
jns
pop
scas
jbe
fwait
std
arpl
repz
push
rolb
in
rorb
and
sahf
cmp
sti
xchg
ret
aam
cmp
out
loop
or
mov
dec
outsl
xor
test
clc
aas
push
inc
mov
jne
mov
push
lds
sub
cmp
cmp
daa
dec
out
jne
adc
dec
jg
mov
mov
sub
gs
mov
cmp
mov
push
dec
fildl
cli
cmpsb
insl
jmp
dec
mov
mov
mulb
sbb
notl
out
pop
pop
pop
jno
imul
push
and
xchg
mov
pmullw
mov
popf
daa
scas
pusha
movsl
sbb
test
sbb
xor
ret
scas
aam
lea
outsb
test
pop
iret
cltd
ss
mov
xor
movsl
nop
sub
test
sbb
sub
mov
outsb
inc
and
int3
fdivr
push
insb
and
cs
mov
pop
xchg
push
add
push
add
inc
sub
imul
or
out
and
shll
lret
cld
outsb
fldcw
and
mov
pop
pop
xor
mov
pop
mov
iret
test
loop
rorb
lahf
out
push
arpl
scas
gs
fwait
xchg
loope
dec
jbe
mov
or
push
jo
sub
jmp
inc
loop
scas
jecxz
js
pop
into
ret
je
scas
push
mov
cmp
jg
cmp
adc
cmp
insb
shll
mov
fbld
gs
stc
out
pushf
scas
in
push
frstor
out
xor
daa
scas
mov
inc
movsb
leave
js
adc
mov
fdivs
ljmp
insl
fwait
cmp
cmpl
xor
ret
mov
das
fs
aas
mov
dec
out
xor
adc
mov
cmc
idiv
movsl
pop
es
shll
pop
js
testb
enter
movsl
push
sbb
out
mov
dec
and
jno
mov
ret
adc
ljmp
and
lahf
xchg
jne
loope
test
cwtl
xor
cltd
adc
mov
call
imul
sub
mov
push
mov
sbb
faddl
or
sub
sbb
hlt
insl
add
fsubrl
int
jb
out
jns
aad
pop
adc
adc
gs
cmc
out
add
cmp
add
movsb
stos
gs
arpl
dec
mov
fldenv
mov
add
nop
ret
pop
add
or
jl
pop
jo
int
and
jp
cld
out
mov
out
cltd
jno
aad
mov
xchg
xchg
sbb
lret
and
sbb
imul
scas
mov
scas
and
mov
cmpsl
mulb
punpcklwd
pop
sahf
xor
test
inc
dec
shrb
lcall
push
jg
sbbl
pop
pop
sub
call
scas
sub
icebp
cld
inc
pop
mov
adc
sub
sub
bound
or
stos
lock
sbb
inc
sarl
and
cmp
pusha
or
jno
mov
cs
sub
sbb
xor
loope
sbb
pop
fst
xchg
cmp
hlt
bound
pop
pop
xor
out
movsl
fistpll
pop
add
push
stos
mov
imul
fsubs
push
mov
lods
sub
xor
and
inc
insl
and
hlt
out
fcmovbe
push
lret
hlt
data16
popa
cmpsb
or
out
push
pop
jge
jbe
loopne
xor
rorb
movsl
pop
and
sub
mov
add
movsl
dec
cs
mov
aaa
pushf
addr16
xor
adc
push
arpl
or
cmpsl
out
call
clc
sub
clc
mov
ret
mov
dec
and
ljmp
into
jge
mov
iret
push
scas
call
aad
fidivl
roll
call
cmp
jle
movsb
push
sar
lahf
es
js
mov
xor
insb
sbb
js
push
fildll
call
cmp
subl
adc
mov
in
mov
mov
sarb
jp
mov
mov
test
pop
fcmovnbe
mov
arpl
ds
out
push
xchg
imul
xchg
and
out
cmpsl
adc
std
jne
mov
mov
out
add
lcall
sbb
dec
mov
add
dec
sub
cmpsl
repnz
mov
mov
jp
cmp
xchg
ja
mov
mov
adc
dec
lods
lret
insl
stos
dec
or
aaa
dec
push
movsl
push
mov
fimull
lea
loop
cs
add
sub
orb
jmp
outsl
jo
push
adc
adc
and
push
pop
std
pop
dec
pop
mov
adc
decl
lret
test
out
jbe
xchg
pop
sti
loopne
cmovb
mov
es
mov
adc
sub
cmpsl
pop
xchg
cmp
test
fwait
jle
ficomps
pusha
mov
fisttpll
xchg
mov
jne
add
inc
xchg
adc
in
or
inc
fcompl
mov
xchg
mov
int3
mov
pop
pop
stc
push
pop
je
fimuls
sbb
aas
in
pop
and
adc
inc
movsb
jb
dec
mov
psrld
jg
push
insl
fbstp
repz
adc
jl
adc
or
pop
mov
adc
cld
jp
mov
js
pop
pop
inc
negl
pop
in
nop
jmp
mov
les
sbbl
out
mov
cmc
or
inc
shlb
mov
and
addr16
repz
xchg
dec
cmpsl
push
xor
and
sbb
sarb
out
stos
sbb
and
sahf
fldt
and
sahf
movsb
int3
or
mov
inc
stc
xchg
jl
test
jg
xor
push
rorb
xchg
movsb
scas
push
or
jo
out
out
xor
xchg
jb
rcr
dec
int3
loope
gs
and
xor
int
ss
or
aas
or
adc
xchg
cmpsl
xchg
mov
sub
push
mov
xchg
inc
xlat
sbb
loope
jo
or
rcrl
add
add
or
in
test
mov
inc
fwait
mov
sub
xchg
sbb
stc
mov
scas
inc
cmp
sahf
pop
cld
inc
cmp
in
jp
mov
call
dec
adc
add
adc
mov
lods
aaa
inc
lahf
pop
arpl
sbb
hlt
loop
scas
das
imul
outsl
xchg
dec
push
jecxz
pop
xor
clc
ss
add
jb
jno
push
cmpsb
or
aad
fsubrl
ss
cmp
sti
sub
sarb
pop
imul
iret
gs
rclb
lahf
scas
insl
inc
loopne
mov
fistl
mov
xchg
pop
inc
lock
insl
addr16
cli
cmp
mov
jns
and
int3
xor
dec
jb
mov
ret
lea
nopl
shlb
jns
insl
pop
push
add
mov
rclb
jecxz
sti
mov
icebp
dec
mov
mov
popa
in
xchg
adc
mov
pusha
jae
sti
xchg
cwtl
xor
and
dec
cmp
or
outsb
xchg
pop
jle
movl
mov
pusha
add
mov
mov
push
pop
xchg
out
jne
int
cmpsl
rcrl
decl
call
jmp
pop
sbb
jne
inc
cmp
push
cmp
cli
inc
dec
scas
sub
loopne
loop
iret
ret
jl
pushf
ja
xchg
cmp
dec
sarl
movsl
jle
lea
and
out
add
mov
pop
adc
jmp
adc
pop
xchg
fimuls
mov
out
shrb
clc
mov
mov
sub
add
in
mov
repz
xor
lock
rcrb
loop
adc
daa
jg
or
pop
shrl
imul
out
movsb
test
add
push
or
and
imul
cmp
stos
xor
es
xlat
aas
fdivrs
mov
mov
sar
cmpsb
aam
sub
jb
in
addr16
mov
repz
insl
xor
popa
sbb
imul
fsub
pop
bound
pop
stc
fistpll
repz
scas
dec
popa
mov
lret
mov
push
iret
rcll
iret
iret
mov
sbb
inc
cwtl
adc
dec
ficomps
pop
or
adc
or
popa
add
mov
jge
cli
outsl
inc
adc
or
jns
push
push
xor
cltd
rcrb
xor
jb
in
jae
into
ja
pop
leave
adc
sahf
xor
pop
or
fwait
jecxz
dec
push
inc
js
push
mov
xchg
ljmp
xor
xor
pmuludq
or
pop
push
repz
jg
cmpsb
les
adc
lods
cmc
mov
imul
lods
mov
lcall
push
shll
sub
and
jb
stos
push
pop
gs
pop
mov
pusha
aam
data16
push
js
imulb
loop
pop
leave
ret
das
cwtl
sbb
xchg
lret
push
pop
push
movsl
pop
lods
sbb
add
aaa
pop
lret
or
mov
ljmp
in
jo
loope
pop
adc
sub
sub
mov
mov
jbe
fcmovb
shlb
cmpsl
jne
xchg
jl
and
jle
push
cs
pop
mov
imul
jge
in
jbe
mov
inc
cmpsl
aas
daa
arpl
push
xchg
pop
push
sbb
adc
pop
insb
subb
insl
jbe
pop
dec
adc
jp
and
xchg
mov
arpl
insl
shll
inc
insb
xchg
pop
testl
dec
push
inc
add
mov
xor
mov
lea
rcrb
daa
jecxz
push
leave
insb
pop
pop
es
dec
outsb
fidivrl
adc
push
mov
std
in
and
mov
or
jnp
pusha
pusha
and
fs
add
cmpsb
outsl
mov
push
data16
pop
mov
adc
cltd
loopne
dec
xchg
sar
clc
push
cmpsl
popf
lret
jl
mov
es
insb
push
rcll
and
sahf
mov
fwait
shr
pop
xor
xchg
lcall
mov
outsl
test
sbb
xchg
stos
and
adc
cltd
lods
rcrb
js
xchg
jnp
dec
jp
loope
sub
mov
fdivl
pop
cltd
jo
popa
xchg
inc
and
jle
mov
andl
call
cli
stos
adc
cwtl
iret
mov
push
ret
jp
adc
std
lahf
cmp
inc
cld
add
and
cli
sbb
pop
ret
ret
testl
fwait
pop
mov
xor
inc
aaa
into
adc
arpl
shl
lock
in
mov
push
mov
shl
fistpll
nop
shll
push
xor
inc
push
or
adcb
sahf
aam
mov
cmc
ds
rcrb
je
fmul
fnsave
out
cmpl
loopne
mov
jecxz
in
movsl
mov
lret
shrl
jne
cli
in
xlat
dec
mov
cmpsl
jg
mov
push
mov
push
push
pop
adc
nop
popa
sbb
mov
daa
sbb
lds
mov
add
xorl
leave
xor
int3
sbb
das
cmp
inc
inc
imul
dec
lods
xor
std
insl
repz
sbb
xchg
mov
add
sti
pop
ret
mov
inc
or
jge
sub
int
mov
dec
in
dec
inc
outsb
scas
xor
stc
mov
int
xchg
push
adc
mov
xchg
int
mov
clc
add
push
hlt
cmp
xchg
mov
mov
nop
lds
or
daa
mov
outsb
fstps
cmp
lods
fsubl
mov
mov
lret
test
lock
push
push
inc
mov
xor
mov
repz
inc
fdivrl
jb
stc
xchg
inc
dec
cmp
pop
xchg
pop
jae
and
stos
in
test
aam
imul
js
xor
insl
mov
test
jb
add
in
icebp
xchg
out
mov
fdivs
fisttps
lods
adc
pushf
fs
xor
pusha
mov
mov
push
sub
cmp
and
out
movsb
pop
lret
popl
lea
push
sar
inc
ror
iret
inc
mov
jnp
pop
sub
data16
and
shl
jl
iret
adc
push
xchg
lret
push
das
fbld
sub
outsl
cmp
pushf
sbb
jns
pop
cltd
xchg
hlt
test
lds
mov
cs
cs
pushf
cmp
jnp
xchg
xor
mov
stc
xchg
call
push
xlat
jo
sahf
mov
mov
les
imul
popf
and
jg
daa
ss
inc
ja
jo
hlt
xchg
insb
sti
sub
and
sub
pushf
divb
inc
pop
lods
jo
cmp
xchg
mov
rol
cmp
rcll
inc
adc
cmp
nop
dec
les
cmp
popf
ret
sub
mov
loope
lock
daa
sbb
ja
int
es
fisttpll
rorb
movsb
sbbl
jmp
shrl
push
sti
arpl
mov
xchg
daa
pop
mov
sbbb
or
fnstsw
and
cmp
in
jmp
andb
cmpsb
insb
xor
mov
dec
or
lea
pop
or
push
rcrl
inc
pushl
jno
dec
cmpl
sub
dec
clc
push
mov
out
sbb
std
loopne
push
orb
lret
mov
cmpsl
xlat
mov
aas
mov
imul
add
mov
add
repz
inc
mov
iret
mov
adc
jge
inc
lds
popa
or
cwtl
pop
mul
push
fists
jg
enter
movsb
inc
fstpt
shrb
inc
sbbb
xchg
add
andb
pop
jecxz
into
mov
fs
sbb
cwtl
sbbb
sbb
mov
inc
pop
and
and
lock
loope
xchg
clc
ret
or
jle
movb
mov
lcall
jns
dec
test
out
dec
sbb
xor
aam
mov
push
aaa
jb
mov
movsl
test
cmp
rcrl
jae
sarb
in
jno
clc
or
jns
push
pushf
push
mov
push
mov
test
pushf
mov
pop
jnp
je
fistl
in
mov
icebp
mov
and
dec
inc
jg
jmp
jne
push
cmp
push
add
pushf
cmp
notl
iret
vmovq
inc
aam
inc
aas
lret
into
or
bound
dec
push
pop
jae
and
pop
leave
xor
rolb
xchg
cltd
adc
xor
jl
sub
xchg
dec
call
test
or
adc
fimull
test
leave
mov
int3
xor
cmp
out
lds
jbe
test
adc
cmpsb
or
mov
add
mov
out
xchg
pop
push
mov
insb
sbb
cmp
or
test
inc
mov
ds
and
jne
jmp
iret
and
mov
mov
movsl
loope
mov
out
fisttps
loop
cli
in
insb
shr
icebp
js
lret
test
lods
jle
push
push
fwait
pushf
aam
out
cmpsb
mov
and
and
in
push
and
sti
cmp
pop
lock
jnp
pushf
mov
pop
ret
xor
sahf
loopne
mov
sub
daa
stos
lahf
outsb
or
leave
rcl
inc
arpl
cwtl
jnp
mov
mov
push
test
add
les
inc
popf
movsl
adc
push
mov
fnstsw
addl
xor
mov
repz
in
xchg
mov
inc
data16
bound
jecxz
or
or
or
lea
aad
push
movsb
andb
and
mov
arpl
sbb
fistpll
and
into
js
xchg
jno
inc
xchg
mov
fistl
pop
cltd
mov
cs
imul
shrl
dec
subb
fdivrs
daa
mov
xor
cmp
mov
add
sbb
cwtl
xchg
adc
lret
xchg
mov
and
das
popa
jb
aaa
mov
insb
bound
gs
jae
call
and
xchg
cmp
nop
sbb
mov
xor
pop
jmp
and
cmp
mov
adc
pop
stos
loopne
or
mov
mov
add
dec
xchg
mov
test
fs
aaa
push
mov
mov
mov
je
mov
sahf
stos
jnp
cmc
fidivrs
in
cwtl
inc
and
stc
xor
sahf
shlb
mov
mov
ret
adc
test
ds
ljmp
add
test
xchg
sbb
bound
fsubl
test
adc
mov
add
pop
lods
mov
xchg
dec
adc
inc
sbb
outsb
call
jg
mov
sub
pop
cmc
pop
not
pusha
loop
xchg
repz
mov
cmp
fnsave
jne
scas
and
ljmp
xor
or
pop
mov
inc
mov
out
xchg
test
fdivrs
call
outsb
cmp
dec
pop
ds
js,pn
push
out
mov
mov
call
outsb
cmp
dec
pop
ds
js,pn
push
outsb
mov
mov
call
outsb
cmp
dec
pop
ds
jns,pn
push
out
mov
mov
push
les
mov
roll
mov
mov
nop
enter
inc
adc
and
xor
inc
dec
push
pop
jb
jb
orb
mov
loop
repnz
adc
and
cmp
inc
and
pop
bound
js
mov
mov
cli
call
xor
jge
dec
pop
inc
sbb
push
and
shll
call
xor
insl
stos
loope
inc
dec
or
inc
daa
add
insl
adc
hlt
push
cmp
loopnew
xacquire
fidivrs
inc
xchg
bound
sub
outsb
xchg
push
ret
add
push
pop
imul
in
xchg
sbb
push
in
jb
or
mov
cmp
xor
mov
adc
pop
lods
int
mov
bound
sar
pop
enter
xor
scas
addb
add
aam
and
ret
sbb
popf
push
jb
in
dec
clc
cmp
loopne
mov
pop
shlb
pop
dec
add
bound
insl
dec
mov
mov
loop
jmp
sbb
or
cmp
sub
pop
dec
dec
pop
js
jb
out
mov
fld
test
mov
scas
scas
repnz
add
sbb
push
dec
inc
or
cmp
in
in
repz
int
ret
movsb
rclb
inc
ja
and
pop
inc
cmp
ds
pop
out
ror
fcmovu
fisttpll
call
adc
and
xor
inc
dec
push
pop
bound
js
mov
mov
loop
repnz
add
adc
and
xor
inc
dec
push
pop
bound
js
mov
jp
mov
sub
outsb
push
sti
inc
cmp
loop
lret
or
cmp
inc
stos
adc
jmp
jp
mov
call
mov
mov
sub
ret
pop
and
add
orl
das
adc
push
test
std
push
popl
pop
push
mov
jb
add
push
adc
sbb
pop
sub
mov
jns
fcmovnbe
ret
xor
out
inc
fwait
mov
sbb
and
push
xchg
push
sarl
mov
inc
and
mov
and
shlb
loopne
xchg
mov
sbb
cmp
daa
test
xchg
xor
cltd
pop
mov
lret
je
xor
mov
cmp
out
test
lods
cmpb
jmp
xchg
cmp
out
es
int3
sbb
push
lret
cmp
test
xor
xchg
lcall
in
leave
push
addr16
push
cs
jns
cmp
mov
fcomps
pop
movntps
arpl
outsb
mov
pop
not
clc
ljmp
and
ds
xchg
pop
pop
inc
mov
daa
cltd
pop
sti
add
clc
push
vmulps
and
xchg
pop
xlat
and
mov
sbb
inc
aam
shlb
push
notb
imull
fmuls
push
cmp
test
addr16
imul
mov
popf
lahf
or
mov
fnstcw
and
repz
out
adc
jnp
ret
inc
add
mov
cmc
push
xchg
in
sti
addr16
or
jg
mov
cmp
cmpsl
es
lods
out
repnz
movsl
xlat
jbe
mov
nop
ret
dec
and
repnz
adc
out
mov
sbb
les
test
adc
xor
push
xchg
cmp
mov
mov
mov
out
mov
popa
inc
mov
jle
xor
pop
fisubrs
stc
sahf
outsl
inc
leave
mov
xchg
es
shlb
jnp
xor
je
xlat
dec
add
jb
test
pop
mov
mov
mov
xchg
imul
dec
jns
pop
test
pop
pusha
cli
dec
push
pushf
mov
jp
or
jl
int
dec
stos
scas
adc
insl
andl
shl
jmp
cmp
mov
mov
jle
add
push
hlt
xchg
sti
pop
or
push
fistl
aas
add
test
in
rcrb
arpl
jb
clc
testl
ljmp
es
inc
cmp
out
loop
cmc
push
push
data16
push
je
shlb
nop
or
mov
pop
adc
inc
test
inc
ss
ja
jae
push
ficoml
dec
push
sbb
hlt
lret
dec
out
loop
shrb
cmp
popf
mov
fdivl
leave
inc
pop
jmp
pop
jae
sub
mov
test
cmc
sub
call
mov
pushf
lock
fdivrs
arpl
clc
xlat
shrl
add
addr16
outsl
test
dec
mov
dec
jae
jcxz
dec
aas
push
sahf
sbb
fisubs
push
stc
data16
mov
add
sub
dec
xor
insl
sbb
shl
pop
test
out
pop
test
gs
mov
or
out
data16
add
lcall
stos
sahf
push
xchg
rorl
and
jns
dec
jo
lods
xchg
xlat
fnstenv
mov
sub
mov
mov
ljmp
inc
pop
mov
loope
or
sub
ret
sub
cmpsl
and
mov
dec
mov
lds
add
addr16
add
lods
xor
gs
fdivr
jnp
nop
into
cld
mov
push
inc
enter
inc
fisubrl
adc
int3
mov
add
sub
js
loopne
jo
and
or
int
pop
test
cs
pop
jae
mov
loop
sbb
fidivl
mov
lods
lods
inc
jbe
xchg
jne
shl
push
cmp
movb
lods
lock
adc
test
adc
lcall
pop
scas
dec
xchg
dec
testl
push
xchg
mov
loop
das
scas
fcmovnb
xor
jmp
inc
in
pop
xchg
sbb
cmp
or
popf
fsts
scas
xchg
popa
sbb
ret
xchg
dec
scas
cmpb
pop
mov
cmpsl
jge
scas
and
cmpsl
or
gs
pop
xchg
sbb
iret
push
lds
inc
cmpsb
leave
inc
pop
imul
rcll
icebp
pop
lods
cmc
push
cmp
mov
push
scas
jp
sbb
pushf
xchg
lea
out
idivb
cwtl
fldt
jae
pop
mov
andb
lret
mov
xchg
mov
or
shrl
mov
push
leave
and
cwtl
cmp
out
hlt
test
lock
mov
or
jo
sub
push
or
mov
daa
repz
sbb
mov
xchg
cmp
cmp
out
adc
pushf
out
movsl
ret
mov
inc
popa
lock
cmp
inc
std
outsb
ja
push
push
aam
mov
push
cmp
push
push
mov
cvtdq2ps
xchg
ror
outsb
ret
pop
adc
xor
xchg
into
mov
outsl
push
ds
adc
icebp
shlb
aas
cmc
shr
push
adc
mov
shll
int
xor
pop
sbb
or
add
sub
xchg
xor
mov
iret
pop
lods
subb
out
fs
and
test
pop
or
out
xlat
sahf
mov
imul
mov
pop
inc
xchg
jbe
fcoml
nop
addl
sub
aaa
inc
popa
filds
outsb
out
adc
sarl
in
ljmp
mov
add
loopne
mov
mov
inc
jp
push
lock
mov
xchg
scas
lret
push
or
mov
sub
pop
lea
dec
je
cmp
pusha
lret
xchg
and
or
idiv
cmp
addr16
outsl
xchg
fld
xchg
mov
inc
mov
pop
outsl
outsl
lods
xchg
cmp
mov
jmp
imul
xor
sub
iret
inc
xchg
mov
cmp
xchg
add
call
lods
iret
out
js
loop
dec
mov
cmp
push
imul
in
cmpsl
jmp
bound
daa
sbb
icebp
xor
lds
adc
push
dec
sub
adcl
cmp
dec
adc
push
nop
xchg
push
pop
pop
loope
pusha
jp
push
xor
pop
pushf
pop
mov
sbb
add
add
ret
sub
popf
add
fdivrl
push
mov
mov
sub
cmp
clc
addr16
lods
and
add
std
sub
mov
dec
test
dec
jl
shrb
loope
push
sarb
ja
movsl
xor
or
scas
js
hlt
loopne
jp
pop
or
ljmp
ds
pop
in
iret
insb
xor
in
loopne
dec
xor
adc
lahf
cmpsl
sub
mov
pusha
cmpsb
mov
loope
jo
push
adc
int
in
fcompl
ds
stos
fbld
lahf
mov
cmp
loope
and
pop
push
mov
lcall
mov
mov
cwtl
add
add
enter
sub
add
fs
xor
or
or
adcb
sub
pop
inc
and
stc
xor
inc
xchg
mov
sub
mov
mov
aad
popa
cli
lcall
fnstenv
mov
fsubl
mov
lahf
push
mov
jnp
mov
sbb
xchg
xorl
movsb
mov
and
dec
daa
mov
test
aam
sarb
inc
pop
jg
call
into
jo
inc
jecxz
xor
outsb
xchg
popa
out
inc
xlat
cmp
nop
add
rcl
repnz
inc
sub
pusha
fisubrs
lret
mov
iret
xchg
adc
mov
loope
stos
scas
or
jg
idivl
test
lods
pop
fmull
mov
sub
xchg
and
sbb
lods
adc
or
call
das
mov
std
ret
fisubs
jle
test
fisubl
push
lods
pop
push
add
cmp
sti
xor
jecxz
fcomp
sub
dec
loopne
pusha
iret
xor
popa
sar
xor
xchg
inc
stc
lret
mov
idivl
xchg
dec
js
movsl
inc
arpl
xor
imul
xor
xlat
add
cs
xor
adc
or
test
mov
push
mov
xchg
sti
mov
sub
movsb
gs
daa
loop
jae
stos
sbbb
adc
aam
je
fnstcw
mov
sub
mov
and
adc
xchg
mov
arpl
jo
mov
xchg
sub
and
xchg
jne
xor
hlt
mov
dec
inc
push
aam
mov
leave
mov
sbb
dec
pop
add
push
lret
in
inc
imul
mov
fidivl
mov
cli
push
and
stc
push
fcmovne
push
scas
stos
xor
es
cmpl
fistpl
in
xor
rorl
xor
data16
mov
ja
inc
inc
mov
xchg
mov
mov
xchg
testb
xor
xchg
fsubl
or
cmp
xlat
or
or
mov
cs
ret
sbb
mov
push
dec
dec
bound
lahf
xchg
fsubrl
aaa
fisubrl
sar
mov
fs
arpl
cmp
hlt
push
es
daa
test
into
aam
aaa
stos
mov
mov
mov
aas
lcall
xor
out
push
out
scas
lret
sub
lcall
push
sub
jg
je
mov
inc
shlb
loope
xchg
xchg
frstor
sub
in
lret
push
add
mov
popa
and
das
cli
in
sarb
roll
mov
push
cli
insl
pop
sbb
sub
outsb
dec
das
imul
insb
push
or
add
jno
call
dec
pop
sub
mov
add
ret
dec
mov
mov
push
mov
nop
or
movsb
pop
clc
bound
dec
dec
clc
out
xchg
mov
xor
cmp
xor
insb
shrb
jne
outsl
jno
xlat
mov
jmp
test
cmc
mov
mov
jnp
xor
mov
pushl
dec
dec
leave
loopne
mov
xor
xchg
adc
iret
cltd
outsb
mov
dec
dec
popa
cmp
cld
jo
mov
je
pop
xchg
lods
js
or
inc
push
and
lret
cld
add
test
pusha
andl
movl
adc
lcall
outsb
ss
mov
xchg
jno
inc
push
dec
int3
mov
mov
push
cmc
lret
aam
push
xchg
das
sub
mov
jl
jmp
std
pusha
addr16
jecxz
jne
sub
or
and
dec
es
dec
andl
pop
iret
fdivs
stc
jecxz
sub
test
in
dec
cmp
stos
xor
pop
rclb
push
pop
push
add
dec
inc
fs
pop
jns
ljmp
bound
cmp
mov
loope
loopne
stos
fs
xchg
push
jl
sub
mov
push
jb
jbe
dec
mov
shl
insb
mov
dec
jl
inc
popa
xchg
xchg
call
or
imul
out
scas
sub
loop
adc
div
sbb
mov
sub
nop
aad
mov
pop
pop
lahf
loopne
mov
cwtl
push
lock
movhps
inc
pop
negb
gs
ljmp
jmp
clc
and
nop
addr16
xchg
cwtl
pop
shlb
xchg
xchg
jp
aam
or
mov
mov
mov
cwtl
dec
push
cmp
inc
inc
inc
popa
aam
sbb
stos
je
scas
lea
inc
leave
sbb
or
repz
inc
xchg
ss
mov
mov
pop
mov
and
loop
sbb
test
xor
xchg
mov
xchg
cli
stos
aad
imul
imul
pop
push
out
lods
sarl
loop
add
xchg
iret
mov
or
pop
negl
ret
fsubrs
data16
in
dec
inc
ss
dec
data16
test
add
dec
or
xor
popf
and
rcrb
lock
push
out
push
test
iret
icebp
xor
mov
sbb
es
push
and
add
aas
leave
mov
add
push
jnp
pop
popf
inc
data16
pop
sbb
js
sahf
cmpsl
xor
sub
sub
fs
push
std
add
iret
in
push
adc
rol
sahf
iret
pop
xchg
xor
jns
es
dec
stc
jl
cmp
jnp
cmp
push
sbb
cmp
lock
and
jg
pop
leave
loop
out
scas
pop
into
pop
es
sbb
mov
daa
insl
xchg
cltd
push
loopne
pop
movsb
xchg
jl
xor
sbb
push
push
test
jl
sub
fildl
imul
std
mov
sbb
cmp
jbe
stos
mov
xor
jns
jp
adc
out
sbb
lret
jae
fidivrs
cmp
imul
xchg
shld
sub
nop
push
pop
jmp
add
scas
cmp
loopne
in
mull
dec
inc
in
sub
xchg
out
aas
sub
outsb
push
popa
cmp
iret
mov
dec
aad
mull
popf
jg
les
call
inc
rcrl
fstps
and
jecxz
xchg
jl
or
clc
das
xchg
pop
adc
xlat
movsb
jbe
inc
pop
ret
mov
pop
js
arpl
sub
mov
inc
push
pushf
push
idiv
mov
pop
in
pop
sahf
adc
hlt
xor
inc
pusha
xchg
mov
jge
dec
inc
or
stos
inc
push
add
pop
test
xchg
ret
or
push
lret
mov
add
adc
xor
xlat
xor
icebp
sti
int
repnz
popf
testb
sub
jns
jge
aad
push
push
inc
jae
mov
fwait
jae
add
js
sahf
jne
clc
popa
jbe
repz
xchg
andl
fstl
cmc
mov
mov
popf
in
fnstcw
inc
shl
stos
mov
call
insb
sub
add
cli
scas
pushf
fnstsw
xchg
nop
inc
test
arpl
mov
icebp
sub
shlb
adc
jae
and
in
xchg
adc
cmp
mov
pop
fnclex
lods
sub
sbb
and
xor
popf
dec
push
cmp
xor
dec
jo
xlat
int
insb
cmpsb
insb
mov
jno
mov
dec
push
cli
sbb
sbb
imul
cmpsl
pop
jge
xchg
add
lahf
int
ss
cs
jle
inc
xor
scas
mov
sahf
lds
sbb
dec
pop
mov
sbb
std
mov
jecxz
mov
pop
cmpsb
rcl
pop
out
je
icebp
jo
pop
sub
sti
add
ljmp
sub
hlt
pop
mov
push
jno
mov
fcom
adc
fwait
cmpsl
insb
adc
stos
mov
jmp
ljmp
loope
into
call
xlat
in
pusha
aam
adc
lods
adc
pop
pop
adc
repnz
lret
jbe
cmp
or
cmp
mov
add
fnstsw
insl
das
sbb
clc
out
popf
push
aam
loop
in
pusha
pop
addr16
xor
out
cwtl
dec
cmp
ficomps
es
ja
jns
jb
xchg
jle
jno
pusha
inc
adcb
dec
test
push
xlat
in
jmp
xor
cmp
mov
rcrb
sbb
dec
xchg
adc
jle
jg
ss
cli
xlat
pop
xor
test
xor
adc
inc
jp
testl
inc
cmp
xchg
sub
fidivrs
push
icebp
mov
stos
outsb
push
cmp
cld
push
inc
out
mov
fstpl
or
dec
mov
mov
add
hlt
sub
mov
les
icebp
filds
xor
test
loopne
sbb
cmp
jp
rcl
cmc
xchg
ret
clc
cli
pop
jo
lods
cmp
mov
mov
adc
cmp
leave
push
jmp
lods
sar
inc
jg
pushf
xchg
sbb
in
into
inc
ss
scas
mov
xor
pavgw
jge
inc
and
adc
stos
mov
ss
jmp
popf
xorl
nop
pop
mov
adc
iret
pop
call
and
mov
pavgw
popf
add
dec
outsb
mov
out
loope
enter
or
add
inc
push
inc
inc
cmp
cmp
add
sbb
sbb
enter
leave
test
mov
cs
xor
movsb
mov
add
cmp
popa
imul
fisttpl
jns
movsb
pop
push
sub
add
jecxz
insb
jbe
andl
pusha
xchg
sub
push
or
enter
xor
inc
insl
mov
gs
stos
roll
bound
xchg
gs
pusha
fsubs
repz
pop
out
jae
jge
in
xor
jne
lret
or
bound
fs
mov
sub
fsubl
adc
jg
or
out
std
dec
pop
sub
add
loop
mov
scas
notl
dec
dec
out
push
lahf
inc
xchg
call
lods
cld
push
push
and
and
adc
adc
or
xchg
sub
lods
jno
mov
outsl
mov
outsl
mov
sub
es
sti
dec
cmp
mov
mov
xchg
rol
or
out
ja
sarl
bswap
stc
aam
sbb
popl
aam
add
fnsave
xchg
cltd
leave
lods
loop
pop
or
and
pusha
call
fldt
pusha
mov
es
data16
andb
cs
stc
mov
xor
data16
popf
popa
adc
ja
xchg
mov
pushaw
notb
out
pop
inc
xchg
stos
mov
rcr
or
shlb
or
mov
cmp
mov
cmp
dec
cmp
and
inc
mov
repz
sti
mov
mov
xor
mov
lea
xchg
xchg
stc
test
mov
cmpb
push
scas
addr16
sbb
loop
out
mov
cwtl
shll
push
lahf
and
shlb
adc
and
je
rorb
xlat
outsl
jo
sar
or
mov
es
xchg
and
loop
add
jl
aam
sbb
jnp
addl
xor
lds
adc
inc
test
sbb
clc
xor
rcrl
jne
sbb
not
hlt
xchg
mov
jge
xlat
xlat
enter
jb
stos
lcall
call
jne
jmp
push
std
cmp
mov
arpl
popl
ja
cs
dec
sahf
mov
push
push
aam
mov
pop
mov
arpl
and
add
mov
fs
or
popa
sub
push
fwait
rorl
add
imulb
addb
inc
inc
imul
incl
fcomi
sti
add
inc
mov
das
fmull
daa
mov
fwait
inc
ss
mov
xchg
ret
out
js
imul
mov
pop
shll
in
cmp
incb
adc
cli
or
stos
cmp
imul
xchg
jp
or
test
fsubl
xchg
mov
cld
repnz
shrb
mov
enter
jne
mov
push
insl
ret
sbb
xchg
xor
rcr
mov
mov
out
je
push
repz
xor
push
cmpsl
cs
aas
inc
int3
sbb
das
test
popa
cmp
xchg
jae
dec
cmp
and
lret
adc
cs
push
pushf
lcall
cmp
popa
ljmp
nopl
fwait
push
out
adc
pop
xorb
aaa
jnp
sub
inc
cmpxchg
or
fdivs
std
push
push
enter
mov
pop
inc
push
add
sub
xor
xor
cmp
lods
in
xchg
lods
jno
and
adc
dec
stos
ja
xor
xchg
ja
decl
add
outsl
sbbl
in
pop
cmpsb
ja
nop
adc
daa
in
insl
pop
sbb
pop
push
fiaddl
jnp
pop
fs
cwtl
jp
pop
add
jp
shrb
inc
cmpsb
fmulp
dec
popa
pop
dec
pushf
sbb
ss
movb
mov
scas
ljmp
loope
mov
or
and
sub
stc
mov
push
add
push
outsb
add
in
lds
ljmp
jb
push
mov
sbb
pushf
icebp
mov
add
scas
filds
incl
mov
repz
pop
pop
rorb
ds
xchg
fwait
sub
sub
jmp
inc
shr
pop
add
ret
fsub
call
adc
and
xor
inc
dec
push
pop
bound
js
mov
mov
loop
repnz
add
adc
and
xor
inc
dec
push
pop
bound
js
mov
mov
loop
repnz
add
adc
and
xor
inc
dec
push
pop
bound
js
mov
mov
call
in
mov
sub
dec
xor
xchg
lea
in
sbb
pop
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
push
dec
mov
cmp
sub
push
cmp
int3
mov
mov
jbe
fs
push
in
inc
adc
or
cmp
sub
pop
testb
insb
mov
mov
xchg
push
lods
push
fcompl
test
cld
push
in
inc
and
cmpsb
mov
lret
push
cmp
fimull
jne
and
inc
pop
mov
enter
rcl
rorl
js
outsl
push
scas
xor
daa
inc
pop
mov
sbb
cmp
movsl
cmp
mov
push
xchg
call
jbe
jle
push
pop
ja
movsl
jge
popa
lret
dec
mov
mov
aam
cmp
dec
fdivrl
push
mov
push
inc
data16
mov
xchg
pop
divb
cmp
and
push
ja
cltd
jmp
mov
in
add
fisubs
pop
fdivl
inc
shrl
lods
inc
cltd
mov
ret
xchg
gs
xchg
xchg
cmp
dec
mov
ja
cltd
mov
mov
push
cmp
inc
mov
out
or
inc
outsb
mov
loopne
push
mov
mov
push
mov
outsb
in
cmpsb
js
inc
test
cmpb
outsl
mov
int
in
int
mov
mov
daa
sbb
test
jnp
out
xor
mov
int
fnstenv
popa
scas
es
sub
dec
insl
in
xchg
dec
out
insb
pushf
mov
mov
jbe
data16
push
in
inc
sbb
or
cmp
sub
pop
testb
insb
pushf
mov
mov
jbe
data16
push
in
inc
sbb
enter
jae
adc
cmc
mov
jne
push
adc
adc
lret
aam
testb
sbb
push
cs
dec
and
mov
fisttpll
ljmp
bound
insb
fists
inc
test
sub
hlt
xchg
xor
loop
sbb
mov
and
xchg
lahf
pushf
jge
xor
aas
inc
out
mov
cmpl
lahf
sti
subb
xchg
add
aad
insb
fnstsw
pop
push
in
pop
or
gs
push
outsb
lods
leave
add
negl
add
iret
mov
mov
inc
test
mov
sub
jb
addr16
mov
jae
push
pusha
js
int3
imul
sarb
push
sbb
out
xor
hlt
jecxz
add
test
mov
pop
aaa
les
xor
dec
aam
or
sub
mul
out
rorl
shlb
fldpi
sub
std
dec
adc
aaa
push
int
jmp
dec
scas
dec
mov
adc
mov
adc
mov
sar
cmpsb
fbld
mov
sub
cli
scas
xchg
imul
cmpsb
push
cmp
repz
fisttpll
add
lret
addl
popf
jno
mov
scas
jecxz
pop
loope
mull
xchg
or
ret
jecxz,pn
xor
in
fidivl
mov
add
mov
js
xor
push
mov
fnsave
jne
in
dec
movl
sbb
outsl
daa
inc
pop
gs
mov
dec
fcoml
add
pop
sub
and
sbb
or
pop
loopne
js
scas
adc
push
popa
fld
cmp
xor
into
ljmp
hlt
jle
nop
mov
lahf
jle
movsl
push
dec
out
int3
in
cli
mov
add
sarb
inc
fcmovne
clc
mov
data16
push
mov
cmp
gs
xchg
test
sub
and
pop
lcall
fcoms
fisttpl
add
add
fwait
insb
cwtl
je
out
and
xor
jp
pop
scas
fdivrs
mov
add
nop
mov
inc
jb
out
in
shll
xchg
pushf
andl
into
adc
cs
add
stos
inc
sub
ja
cmc
fdivp
push
adc
mov
call
xchg
push
rorb
stos
mov
pop
mov
dec
mov
cmp
popaw
push
loopne
popa
rclb
scas
mov
test
add
loopne
mov
xchg
push
sbb
mov
dec
sbb
add
mov
pop
pushf
add
in
xor
or
adc
xlat
mov
outsl
jl
dec
push
sub
jg
cmp
leave
clc
sub
cmp
lock
mov
jne
sub
cmc
je
xlat
pop
dec
lds
push
mov
testb
das
add
add
jp
or
add
jg
mov
xchg
ja
inc
clc
insl
icebp
imul
mov
pop
push
lods
dec
icebp
push
pop
inc
dec
jle
out
sbb
es
aam
and
into
and
jl
insb
pop
sub
mov
testl
pop
pop
push
and
lods
adc
cmc
aad
inc
addr16
test
lret
or
and
inc
negl
sbb
jns
je
xor
push
cli
les
or
push
insb
pop
pop
jge
xchg
or
mov
or
ror
shrd
in
popf
aad
sar
inc
test
push
dec
pop
loope
inc
mov
push
pop
fldcw
imul
mov
dec
imull
xorb
cmp
out
lret
mov
outsl
test
les
ljmp
int3
sbb
in
xchg
pop
shl
push
push
sub
pop
mov
mov
push
gs
push
xchg
or
inc
xor
dec
jns
movsb
stos
inc
pop
insl
jno
jp
inc
mov
sub
fildl
inc
push
mov
call
dec
jl
fcmove
jp
and
pop
pop
dec
and
add
dec
cli
divl
scas
das
cmpsl
mov
jmp
sti
loopne
out
shlb
xor
pop
das
mov
insb
je
inc
int
adc
jnp
or
iret
scas
fs
test
inc
pushf
subb
repz
xchg
loop
pusha
test
into
pop
in
and
cmp
add
and
cmpl
adc
int3
and
imull
das
jns
das
pop
mov
jge
fs
xchg
lret
jnp
mov
xchg
xchg
and
je
jnp
nop
out
mov
sub
jle
adc
cld
fsubrp
in
xor
addl
sub
and
push
and
cmp
cmp
movsb
fs
lret
add
repnz
or
hlt
rcr
xor
ficomps
loopne
jb
sahf
ljmp
pop
jp
scas
movsl
mov
adc
leave
scas
xchg
test
fcoml
adc
shlb
lods
inc
imul
xchg
enter
mov
test
call
enter
xchg
sub
or
aad
or
repz
lea
mov
jb
lods
daa
fwait
jbe
sahf
pop
jp
cmc
mov
stos
cmp
outsl
xchg
mov
scas
dec
rcr
mov
mov
inc
insb
cs
fisttpl
push
bnd
pop
insb
sbb
or
mov
test
cmp
xchg
notl
sarl
ljmp
xor
lret
scas
imul
mov
ljmp
xor
jmp
cmp
add
dec
insl
inc
into
inc
dec
push
cmc
ret
inc
mov
stos
stos
rolb
push
sbb
jmp
les
sbb
mov
fildll
jmp
lods
push
xor
lods
sti
or
int
xor
xchg
scas
mov
arpl
rorl
cmp
fs
dec
test
mov
lret
inc
outsb
lcall
and
mov
mov
cs
xchg
mov
das
cli
mov
xor
mov
inc
and
push
gs
aad
filds
jo
pop
loope
adc
xchg
push
mov
loop
sub
mov
push
mov
insl
jno
inc
cmpsl
call
test
sub
mov
out
mov
fwait
xlat
pop
lods
in
into
sbbl
mov
add
sbb
pushl
jbe
ucomiss
mov
mov
jl
cmp
ret
push
mov
jcxz
mov
pop
sahf
add
pop
int3
cmp
loop
aam
pop
das
movsl
and
xchg
adc
daa
mov
fdivr
fs
pop
out
bound
inc
lcall
int3
or
and
rcrb
scas
mov
or
ret
rcrl
movsl
loop
or
insl
jae
loope
pushf
fucomp
ds
sub
pusha
ljmp
lock
ljmp
push
xchg
add
sub
jns
jmp
bound
adc
sbb
mov
xor
std
in
cwtl
push
ja
loop
push
inc
ds
and
leave
out
arpl
xchg
cmpsl
pop
aaa
push
fisubrl
adc
adc
pusha
loope
xcrypt-cbc
cmpsl
rorb
mov
add
ucomiss
pusha
xor
mov
inc
ss
daa
stos
mov
lcall
lds
or
stos
movsb
stos
in
adc
addr16
data16
fcomi
lods
dec
push
flds
adcb
sub
ret
mov
cmp
scas
cmpsl
bound
popa
cmpsb
pop
lock
dec
loop
movb
ja
cmpb
and
mov
push
mov
or
out
mov
jle
mov
ret
mov
das
cld
cmp
pushf
inc
sub
int
movsl
pop
leave
mov
xchg
push
fdivs
pop
sbb
mov
std
push
push
cmpsl
or
or
lock
inc
xchg
ret
jecxz
sub
mov
lods
enter
and
dec
sub
mov
pop
mov
mov
and
rorl
dec
adc
gs
fcoml
xlat
fsubr
cwtl
ds
push
push
mov
insb
xchg
push
leave
imul
jae
lods
stos
mov
std
push
jl
out
or
jmp
or
xor
test
jg
add
xor
pop
sbb
xchg
fists
fisubrl
mov
dec
fdivrp
aaa
rorb
sbb
shl
jae
jo
data16
push
mov
call
mov
repz
inc
call
jne
ficoms
mov
and
call
sbb
or
cmp
dec
inc
orl
mov
ja
mov
arpl
jns
push
int3
push
outsl
push
sub
jae
mov
pop
inc
lea
mov
lods
test
jl
cmp
fucom
or
adc
lods
and
pop
insb
shlb
cmp
jb
stos
imul
in
ja
nop
sub
outsb
inc
mov
aaa
mov
pushf
sub
mov
mov
adc
pop
cltd
push
or
lcall
rcrl
lea
add
arpl
addr16
pop
mov
subl
popf
icebp
inc
xor
imul
es
int
mov
sub
dec
test
inc
add
push
lcall
sub
ja
adc
push
xor
jbe
ja
sbb
inc
jmp
daa
cmpsl
ret
mov
and
push
or
pop
mov
mov
ret
sti
hlt
sub
push
xor
icebp
test
repz
dec
std
pop
nop
arpl
sbb
xor
cs
loope
pop
call
add
jg
stos
push
xor
lret
mov
aam
mov
sbb
and
mov
inc
or
cmp
cmpsb
jno
push
cmc
and
into
sbb
mov
cmp
cltd
fisubl
jo
mov
mov
loop
jg
call
add
push
mov
fildll
sahf
es
xchg
stos
in
adc
ds
ja
data16
dec
pop
lcall
mov
jl
inc
xchg
fisubrl
std
adc
out
or
rorl
xor
mov
hlt
or
jl
stos
shll
sarb
movsb
stos
sbb
sub
add
add
dec
mov
loopne
test
and
rolb
dec
fs
cmc
fisubrs
jmp
dec
stos
fcoms
repz
pop
adc
stos
cmp
add
cwtl
jne
add
aas
jae
xchg
dec
cmp
cmpsl
popf
jae
fldt
addr16
fcmovb
mov
mov
insb
pop
movl
nop
sbb
inc
sub
xor
scas
in
movl
xor
fwait
lcall
cwtl
jb
xchg
xor
xchg
or
addr16
or
sbb
xor
xchg
fwait
adc
and
or
out
int
nop
mov
adcb
mov
jae
in
imul
jmp
pusha
sahf
push
shrb
sbb
push
xor
mov
sahf
xlat
mov
jbe
xchg
mov
jmp
aas
xor
xor
insb
into
adc
add
out
mov
cs
in
jl
lds
mov
add
subl
fists
jmp
jne
bound
addr16
add
bound
pop
out
add
xor
ret
adc
push
push
pop
in
xor
pop
in
movsb
idivb
lahf
pop
ret
push
cli
insb
dec
jge
mov
ret
ja
inc
mov
cmp
mov
mov
fwait
dec
test
pop
loop
pushf
lds
xchg
hlt
mov
cld
cmc
loopne
divb
ss
jge
stc
jnp
and
dec
sub
dec
cli
xchg
sub
rorb
inc
sub
arpl
aas
les
stc
jae
sub
loope
das
sub
vucomiss
dec
adc
add
stos
jnp
cmc
adc
popf
jmp
xchg
cmp
shl
adc
scas
cmp
movsl
sahf
xchg
jno
es
inc
fucomp
pop
and
bound
sbb
and
imul
pop
aam
jl
fistpl
mov
aad
push
cmpsl
pop
rorb
mov
xchg
dec
or
ljmp
stos
je
in
xor
test
fwait
mov
or
add
int
mov
or
fbstp
sbb
inc
jbe
je
lret
movsl
out
cmpsb
dec
in
sub
xor
fucom
jl
sbb
in
sub
movsl
cmp
pop
push
jo
movsl
out
cmp
es
mov
movsl
xor
cmpsb
out
rol
inc
jg
mov
subb
lret
jl
shl
push
mov
pop
mov
shll
in
sub
or
jecxz,pn
lcall
mov
call
scas
popa
dec
fisttpll
aas
sahf
popa
mov
iret
stos
aad
out
push
pop
test
xchg
xlat
pop
push
cmp
mov
add
test
arpl
cltd
scas
xor
fchs
jl
outsl
stc
cwtl
jmp
in
rol
insl
push
xchg
push
test
aas
idivl
cmpsb
adc
jmp
mov
icebp
cmp
mov
jle,pn
pop
cmp
xlat
mov
pusha
je
cmc
stos
adc
sbb
stos
stos
mov
dec
jne
cmp
outsl
inc
mov
mov
rcll
cmp
mov
or
ret
adc
enter
inc
bound
stc
scas
int
leave
inc
ds
sbb
jp
xor
mov
sbb
fwait
sbb
mov
es
and
loopne
xor
or
movsl
jecxz
stc
pop
and
push
mov
push
add
mov
xchg
fmull
daa
push
jmp
js
popa
icebp
in
jp
test
mov
pop
aad
push
push
nop
cs
mov
imul
int3
call
mov
or
adcl
lods
cmp
mov
daa
mov
ljmp
mov
test
push
aas
xchg
arpl
ja
and
ljmp
into
adc
xor
stos
mov
aad
adc
cs
fmull
inc
sbb
fld
pusha
addr16
cmp
sbb
divl
sahf
lss
dec
aad
test
fsubrp
pop
mov
loopne
sbb
sub
pop
roll
pushf
cmp
mov
mov
call
dec
je
dec
sahf
push
in
cld
sub
ja
insl
lds
adc
out
jmp
shrl
xorb
mov
jo
cltd
rclb
and
jle
in
pop
insb
iret
dec
invd
sub
pusha
flds
out
push
fnstcw
cmp
mov
mov
rcrl
inc
daa
into
add
ror
mov
fsubl
xor
out
inc
inc
xchg
adc
fs
fiaddl
leave
push
push
or
test
pushf
mov
out
xor
mov
push
int3
push
push
faddl
scas
popa
pop
sahf
add
ret
inc
fstps
adc
stos
xor
mov
xchg
enter
sbb
syscall
or
enter
lds
dec
repz
test
lds
or
ja
scas
pop
sub
dec
jle
fwait
xlat
mov
nop
fistpl
test
add
test
xchg
push
jmp
lret
mov
jno
call
fcmovne
pop
inc
insb
in
xchg
mov
rcrb
cmp
addr16
sarb
mov
pop
addr16
push
push
pop
stos
push
jle
lock
mov
push
mov
inc
mov
cmp
fistpl
jae,pn
cld
dec
push
inc
push
ficomps
inc
cmpsb
fistpll
lock
sub
shrl
loop
pop
xor
lods
daa
sub
addr16
jo
inc
pop
lds
gs
rclb
mov
lret
cltd
xchg
les
mov
and
sub
lahf
mov
jmp
cmpsl
xor
xchg
cmp
or
or
mov
in
sbb
cmp
imulb
jecxz
outsb
test
fnsave
inc
sbb
test
mov
mov
loop
sbb
sbb
sub
les
dec
cmp
mov
popf
jge
popa
lock
cmp
sbb
add
decl
fmull
push
or
jg
jp
mov
dec
push
out
outsl
and
rcrl
lods
dec
test
int3
xchg
jecxz
push
popa
push
mov
rcl
fwait
dec
cmpsl
stc
xor
adc
inc
jg
mov
mov
ret
add
jnp
jl
iret
push
adc
insl
imul
shr
lret
and
int
mov
jp
sahf
mov
mov
sbb
cmp
divl
jns
mov
fs
pop
mov
in
jl
and
mov
push
cli
mov
and
push
lahf
enter
sysret
jl
sub
sub
jecxz
sbb
cmp
xorl
dec
add
xchg
adc
mov
or
sub
ret
or
lock
adc
jno
arpl
xor
ror
jne
hlt
mov
cli
shrb
pusha
mov
dec
js
and
mov
int
loopne
lds
out
mov
pop
pop
dec
inc
into
xchg
mov
in
imul
pop
sbb
or
daa
shrl
mov
cwtl
scas
and
outsl
in
mov
xor
add
jg
adc
sub
dec
fsubr
ret
add
add
rcll
call
mov
xchg
mov
sub
out
mov
add
push
sbb
lret
sub
or
stos
add
inc
lods
cmp
ja
rcrb
scas
ljmp
lahf
jb
pop
repnz
mov
icebp
jb
ret
mov
xchg
cmpl
xchg
movsb
dec
and
sub
das
fidivs
lods
cmp
adc
cltd
push
push
add
shlb
and
movsl
adc
ss
pop
aam
leave
xor
pop
repnz
sbb
add
popa
outsb
adc
mov
cwtl
and
mov
mov
push
ja
stc
mov
psraw
cmp
arpl
xchg
sbb
sbb
mov
jno
punpcklbw
call
sahf
push
mov
fstl
add
std
pop
aad
gs
and
cmp
nop
mov
inc
pushf
lcall
pop
scas
xor
jmp
mov
lds
cmp
mov
fidivs
jae
fidivl
push
shl
test
cmp
sub
dec
stos
and
scas
push
inc
das
cmp
add
std
xchg
mov
aaa
outsl
shll
repnz
test
mov
mov
pop
shlb
fstpt
adc
mov
clc
add
lock
outsb
push
jl
pop
scas
insb
clc
out
lcall
leave
lahf
add
je
pop
push
inc
mov
xor
aaa
dec
fidivrs
sub
fsubl
dec
pop
xorl
data16
xor
push
fadds
sub
or
in
es
inc
push
xlat
sahf
lcall
ljmp
stos
mov
xor
add
mov
jecxz
sbb
mov
lock
movsb
jno
enter
fistpl
dec
mov
and
mov
dec
pop
jnp
jns
push
mov
sti
cs
mov
cmp
repnz
jmp
lahf
rol
fbstp
cli
mov
adc
adcb
or
sbb
add
xchg
mov
hlt
mov
add
in
addr16
dec
cmp
jp
mov
fnsave
cmc
into
adc
ficoms
lret
jg
cld
insl
push
repnz
int
incb
jge
in
or
mov
xor
fsubl
mov
xor
les
aad
je
mov
push
jmp
test
mov
lock
adc
aad
lret
mov
mov
pop
push
mov
dec
or
ja
and
jb
orb
cmpsl
sbb
fildl
pop
rcll
mov
pop
scas
or
fwait
pop
repz
loope
daa
or
mov
xchg
push
nop
and
cmp
add
sti
mov
aas
push
xor
or
mov
lds
adc
hlt
ret
iret
add
daa
sub
dec
lea
adc
lret
addr16
xor
leave
test
sub
fsubr
cmpsb
push
pop
xchg
push
fmull
xorb
cmp
popa
leave
dec
cld
sahf
push
addl
xor
sub
inc
lcall
cmp
sbb
imul
lock
push
aam
scas
xor
nopl
mov
rorb
dec
xchg
sbbl
out
mov
and
or
cmp
sahf
fidivl
jl
js
mov
je
cmp
cli
xor
jl
insb
pushf
mov
mov
jbe
data16
push
in
inc
sbb
or
cmp
sub
pop
testb
insb
pushf
mov
mov
jbe
data16
push
in
inc
sbb
pmaxsw
sub
pop
testb
insl
cwtl
out
mov
mov
test
fdivl
data16
jbe
inc
add
and
pop
negb
push
in
pushf
leave
jae
push
push
lods
jno
incb
test
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
mov
cmp
or
sbb
dec
int
scas
add
pop
sub
sahf
cs
jle
push
fcompl
fdivr
sub
cmp
or
sbb
insb
mov
pop
fs
jle
sub
sub
int3
push
fdiv
xor
movb
push
mov
dec
jne
and
sub
lcall
cmpb
cmpsb
addl
shlb
xchg
daa
xchg
xchg
ret
xor
xchg
jno
jge
test
loopne
out
cmpb
aam
sub
push
mov
push
pushf
xchg
imul
arpl
mov
loopne
mov
mov
sub
sbb
cld
jnp
movsb
xor
fdivrl
jl
cmp
or
sub
dec
stos
mov
pop
cld
push
inc
dec
insb
add
mov
divl
xchg
rep
cld
decb
sahf
sbb
pop
and
pushf
test
and
and
faddl
push
xor
rcll
cltd
pop
mov
mov
push
int3
cs
sub
sbb
push
mov
push
xchg
mov
movsb
push
xchg
inc
test
hlt
es
int3
pop
mov
stos
or
rcll
mov
repz
lds
cmp
xor
inc
sbbl
out
push
cmp
jl
sbb
pop
rorb
sub
xor
fisttpll
clc
sub
dec
sahf
dec
xchg
jle
push
mov
stos
insl
fisubrs
add
pop
outsb
lods
jle
dec
mov
cs
ds
push
int3
push
fsubr
sub
cmp
or
sbb
insb
mov
pop
outsb
lods
jle
dec
mov
cs
ds
push
int3
push
fsubr
sub
mov
adcl
and
arpl
hlt
aad
cmpsl
or
inc
and
add
bnd
sub
dec
and
in
popa
push
lea
push
cmp
lea
shll
idiv
cmc
pop
mov
xchg
jne
push
adc
and
xchg
testl
adc
fisttps
adc
stos
or
lahf
push
sub
fwait
sub
mov
lds
shr
or
mov
add
mov
mov
sbb
sbb
test
jecxz
jne
setae
fs
pop
mov
in
add
fnstsw
jae
movsl
call
add
repnz
outsb
sbb
sbb
movsb
mov
call
pop
repz
sbb
test
and
xchg
xlat
push
or
lds
imul
push
out
imul
icebp
pop
push
mov
fistpll
lea
or
fs
faddp
pushf
mov
outsb
jb
daa
mov
adc
xlat
mov
cmpsl
mov
push
ss
mov
pop
outsl
mov
pop
lods
xor
jg
lock
mov
push
mov
and
in
or
jb
cld
test
xlat
rcrb
in
adc
popf
mov
cmp
loopne
incb
and
std
jne
inc
lea
repnz
outsl
and
adc
sahf
mov
addl
mov
mov
push
dec
inc
xchg
je
inc
sbb
popf
mov
in
push
push
push
xchg
pop
leave
pop
repz
add
add
add
hlt
dec
movl
and
xor
xchg
movsb
or
jb
xor
hlt
sbb
xor
loop
cmp
fdivp
stc
jmp
and
test
into
xor
or
mov
pop
in
cmpsb
int3
mov
dec
sbb
data16
xor
rclb
cmp
jbe
shll
cmpsb
push
scas
movsb
pop
lock
mov
test
or
jl
push
fildll
out
sbb
pop
mov
cwtl
mov
popa
adc
sub
ret
mov
iret
push
cmp
add
sbb
or
bound
sub
jne
mov
mov
jnp
lock
mov
xchg
or
loope
jg
lcall
cwtl
xor
cmpsl
jecxz
sbb
xor
js
jno
dec
fildl
mov
lcall
lods
mov
fdivs
movsb
aas
inc
iret
in
scas
mov
mul
roll
insl
ds
int3
xchg
ret
push
push
shll
psubb
out
jno
aaa
ficoms
mov
cmpsl
fs
mov
adc
and
dec
loop
inc
jne
jb
lea
sbb
in
fisubrl
jae
adc
out
movsb
mov
xlat
sub
aaa
fiaddl
push
sbb
ljmp
dec
cwtl
inc
loop
adc
xchg
dec
inc
arpl
clc
cmp
js
loop
stos
stc
sub
xor
xchg
or
dec
mov
ds
insl
ret
xor
clc
and
enter
fisttpll
int
mov
fsubl
xlat
sarb
and
nop
addb
imul
scas
insb
cmp
inc
xor
and
push
or
mov
outsb
ljmp
repz
jmp
insb
mov
test
cmpl
jmp
aaa
adc
negb
or
jo
dec
jnp
lret
push
push
push
inc
inc
xchg
or
mov
outsl
into
sbb
call
push
push
cmp
xor
jae
in
xor
mulb
xor
addl
add
cmpl
cmp
fiaddl
push
scas
add
push
movsb
sbb
decb
push
inc
xchg
cwtl
xor
xor
mov
mov
fbld
lahf
pop
jp
std
sub
mov
ja
adc
pop
pop
lea
addb
mov
mov
aam
stos
roll
popa
ljmp
or
shrl
dec
xlat
mov
popf
cmp
pusha
xor
fsincos
push
inc
push
shrl
pushf
test
dec
mov
jl
call
lret
shlb
test
out
out
push
imul
mov
adc
mov
xor
mov
mov
mov
mov
iret
mov
cld
push
jge
mov
shlb
xor
cmp
push
movsl
cli
and
pop
inc
sub
imul
loop
orl
nop
lahf
fildl
sbb
mov
add
pop
sbb
lahf
out
push
aas
mov
cmp
cmp
inc
mov
notw
test
repnz
sbb
int3
cmp
in
jl
xchg
adc
add
pop
mov
xor
clc
daa
xchg
lcall
jns
xchg
or
ss
fcompl
test
adc
xlat
push
dec
outsl
xor
ficoml
daa
add
mov
repnz
mov
mov
mov
jb
push
sub
jne
roll
push
faddl
adc
stc
and
lahf
adcb
xchg
insb
fcoms
pop
push
sub
stos
push
scas
add
xchg
das
insb
or
gs
inc
inc
mov
adc
or
xchg
movsb
les
test
jl
aam
in
mov
cmp
mov
xlat
lods
in
push
adc
or
out
das
cmp
add
shlb
iret
iret
aam
or
dec
adc
mov
data16
movsb
bound
xchg
fldt
cmpsb
jno
outsl
push
hlt
jle
jl
mov
insb
mov
cli
inc
jp,pt
jnp
jp
push
mov
and
cltd
shl
ret
in
fdivrl
mov
inc
adc
adc
mov
add
scas
fcoms
int
and
push
or
pop
sub
js
mov
lahf
ss
push
popa
inc
hlt
and
dec
mov
jne
cld
lahf
mov
rorb
push
hlt
das
inc
mov
les
pop
adc
push
mov
inc
dec
xor
insl
shrl
and
xor
push
mov
xchg
add
adcl
add
aas
test
clc
adcb
sbbl
das
add
xor
shrb
lods
scas
inc
shll
adc
lods
xor
lock
dec
xchg
sbb
popf
pop
xchg
mov
test
jmp
outsl
fsubrl
mov
dec
lods
sbb
mov
and
sahf
jns
or
in
repnz
jmp
lds
lret
popa
pop
cmc
fildll
gs
aam
pop
xor
pop
mov
xchg
adc
mov
sub
shll
xor
sub
xor
dec
lcall
punpcklwd
and
bound
push
push
fwait
stos
or
lods
dec
lods
ja
jbe
cmpsl
lcall
push
sbb
scas
in
adc
and
mov
xchg
orl
xor
stc
je
and
jb
or
or
int3
xor
and
sbb
stc
jno
into
mov
outsb
inc
icebp
jo
cmp
xor
add
pop
cwtl
scas
cmpl
sub
cwtl
jns
outsl
push
inc
pop
out
push
adc
xlat
stos
sub
test
in
test
xlat
inc
and
sub
pushf
sub
adc
adc
inc
int3
ffreep
fucomip
test
adc
mov
dec
add
addr16
roll
aas
dec
dec
das
mov
aaa
mov
cmp
in
push
jbe
dec
mov
jge
xchg
sbb
jmp
mov
adc
pop
and
cmp
repz
sarl
lret
dec
inc
repnz
push
jg
fs
leave
mov
jbe
jmp
sub
dec
push
sub
and
int3
xchg
cmpsb
test
pop
repnz
lret
cli
and
and
das
sub
or
fs
mov
in
pop
fldlg2
out
fs
pop
shr
cmp
movsb
enter
add
dec
stc
pusha
stos
lea
ffree
jle
mov
xor
mov
pop
rorb
movb
mov
js
divb
mov
or
nop
loop
push
or
cmc
cmp
fisubs
ret
call
jle
stos
dec
adc
jno
lcall
xchg
rcrl
fisubrl
aam
cmp
mov
xor
add
pop
in
cmp
adc
js
mov
jg
add
fs
test
mov
and
xor
lret
orb
or
fsubs
xor
lds
sbb
or
mov
xor
loop
jg
mov
adc
adc
xchg
and
cmp
aas
lahf
xor
leavew
aad
push
adc
fs
sub
lods
jb
jmp
in
lret
fisttpll
jne
rclb
inc
repnz
sub
jp
das
mov
add
inc
sub
add
mov
hlt
dec
stos
jecxz
adc
out
xor
mov
sub
add
pop
fcompl
inc
arpl
jecxz
and
xchg
sub
pushf
inc
pop
mov
pop
mov
daa
sub
xor
sbb
orl
repz
dec
adc
inc
cli
arpl
dec
decl
es
xchg
js
nop
stc
adc
and
iret
sbb
rcll
pop
sbb
xchg
push
incb
mov
mov
mov
rorl
sub
cmpsb
stos
sbb
cltd
lahf
xchg
mov
adc
pop
pushf
int
fxch
inc
lahf
xor
sbb
les
movsb
cs
jge
lea
or
xchg
pop
pop
rorl
sub
es
and
lahf
testl
mov
sub
jnp
aas
lea
xchg
sub
push
dec
mov
dec
push
inc
inc
sahf
sbb
mov
or
xchg
lret
mov
stc
add
mov
dec
mov
inc
cmc
push
inc
push
xchg
je
pop
adc
in
adcb
aam
add
rclb
push
pop
shlb
mov
in
mov
jbe
and
mov
inc
out
pop
push
xchg
mull
cmp
cltd
push
push
fisubrl
mov
ret
sbb
xchg
mov
sub
movb
in
andb
sub
push
adc
add
mov
lahf
jbe
lods
jle
cmp
xchg
dec
mov
gs
frstor
out
jno
push
xor
cmp
pop
test
mov
or
or
test
cmp
mov
xchg
mov
jns
add
mov
out
and
push
mov
and
push
jl
sbb
mov
int
sbb
pop
push
outsl
sbb
lods
mov
insb
enter
sub
insb
mov
cmpsb
dec
cmp
aad
adc
pop
xor
arpl
cld
xor
jmp
push
mov
push
cmc
jge
add
std
mov
push
movsl
sbb
add
inc
out
mov
pop
aas
sub
clc
mov
cltd
inc
jg
in
sub
imul
rcrb
xchg
popf
mov
mov
movsl
mov
jg
sub
int
das
or
insb
fs
sub
mov
out
call
xchg
adc
xchg
aad
scas
testl
rolb
call
les
push
sub
mov
iret
rep
data16
cld
data16
pusha
jae
insb
daa
ss
enter
xchg
enter
dec
pop
mov
push
fs
in
add
dec
divl
and
mov
pop
and
outsl
adc
and
pop
fnsave
outsl
pop
mov
push
pusha
lahf
sub
aas
ljmp
push
or
xchg
cwtl
sbb
xor
mov
and
xchg
loopne
popa
stc
and
adc
push
lods
dec
and
jbe
pop
outsb
stos
sub
sub
push
adc
xor
or
std
nop
dec
repz
decb
popf
cmp
pop
adc
ret
test
cmp
imul
leave
cmp
lods
loope
adc
mov
lds
adc
lds
and
call
insl
mov
out
subl
lock
mov
push
add
pop
and
fnstenv
lods
or
sub
push
stc
sbb
xchg
adc
mov
stos
pop
test
stos
jle
and
ljmp
or
jae
xchg
pop
and
cld
lret
sbb
xrelease
nop
xor
aas
xor
popf
iret
imull
mov
pushf
ds
cmp
mov
iret
sarl
stos
mov
sbb
sub
in
sub
iret
dec
mov
push
and
push
cmp
adc
pop
lock
mov
xchg
xor
cs
inc
testl
or
movsl
xchg
aaa
subb
pusha
scas
scas
pop
std
ret
mov
lods
adc
loope
out
xchg
lds
mov
movsl
or
sbb
xor
adc
jne
mov
fldt
out
xor
xchg
jecxz
or
sub
and
sub
lock
testl
mov
popa
jnp
mov
sbb
or
mov
js
pop
arpl
fildl
sahf
addr16
mov
ficomps
mov
loop
and
push
fwait
jnp
jp
out
bound
or
mov
data16
xlat
mov
xchg
dec
loop
enter
shll
pop
imul
hlt
in
je
fldl
fwait
loope
adc
sub
jnp
push
jge
inc
sahf
dec
push
daa
dec
xchg
pop
outsl
mov
mov
fbld
in
adc
leave
call
bound
adc
mov
pop
int
jno
xor
xor
pop
loope
sbbb
or
lcall
les
push
cwtl
sbb
mov
pop
cmp
insb
mov
dec
sub
rcrl
mov
or
pop
push
jmp
iret
jecxz
xor
rcrb
pop
out
mov
xor
dec
sub
divl
jle
in
scas
ret
pop
jae
push
arpl
xchg
fidivl
nop
pusha
push
fisubl
push
mov
pop
jne
push
jle
xchg
jno
cmp
cmp
loope
add
jno
arpl
xchg
or
mov
and
sbb
aad
mov
dec
out
adc
jecxz
mov
mov
addb
out
add
mov
shlb
mov
xor
outsb
enter
push
jle
xchg
ds
mov
jb
fstpl
jne
in
mov
fisttpl
inc
fs
dec
out
insl
jecxz
inc
in
out
loop
dec
xchg
das
add
fwait
outsl
les
sbb
jnp
cmp
push
out
je
mov
int3
fisubl
cmpsb
in
or
ss
loopne
xorb
or
out
testb
push
idivl
pop
in
jl
in
push
mov
push
fisttps
sbb
daa
mov
xor
add
pop
mov
in
mov
jnp
cmp
test
pop
pop
out
fs
lea
imulb
loop
mov
jns
cmp
pushl
fldcw
leave
pushf
xchg
test
repz
mov
lret
mov
lods
aad
mov
mulb
loope
cmp
inc
jb
lret
pop
jmp
push
lea
push
xchg
mov
fidivrs
rclb
xchg
mov
iret
insl
add
mov
and
fildll
mov
sbb
pop
and
movsl
in
ret
sbbl
into
stos
jmp
fsubrp
pop
imul
push
loope
push
xor
add
loopne
das
imul
pop
fcmovbe
aaa
iret
dec
mov
mov
popa
push
pop
mov
or
decb
scas
testl
test
adc
jp
cmp
sub
xchg
fstpl
jae
inc
gs
stc
mov
fwait
roll
push
pop
push
inc
das
lock
cltd
cwtl
fsts
adc
mov
movsl
int3
pop
fidivrl
cmp
sub
mov
adc
or
dec
scas
orb
cmp
mov
pop
push
mov
cmp
xchg
jb
in
sbb
out
les
inc
aam
lahf
loopne
dec
adc
add
pop
and
mov
mov
inc
ds
paddusw
outsl
mov
subl
in
fs
cmp
dec
sbb
sub
dec
inc
sti
sbbb
cltd
scas
loop
neg
shrl
clc
mov
cmp
cltd
mov
rcll
sbb
jnp
inc
mov
mov
dec
jb
outsb
dec
into
movsl
mov
mov
shrl
dec
fsts
or
in
add
addr16
and
test
dec
ja
clc
xchg
scas
or
dec
inc
sbb
inc
cwtl
mov
sub
sarb
popf
sbb
cmp
pusha
xor
sub
or
shrl
pusha
scas
or
mov
or
and
cli
jge
jno
adc
stos
sbbl
je
xchg
test
push
movsb
or
xchg
xchg
sbb
shrb
lock
or
sbb
dec
in
insl
frstor
dec
out
pop
pushf
cli
or
je
xlat
outsb
rcrb
mov
sahf
mov
jne
test
jmp
orl
mov
js
dec
aaa
aad
and
popf
and
outsb
mov
or
jo
dec
pop
fs
add
fwait
cmp
in
adc
gs
les
dec
jg
lahf
andb
adc
lcall
repnz
cli
xchg
jp
push
int3
mov
xchg
add
fcmovnbe
jl
sub
pop
xchg
cmp
leave
adc
out
pop
loope
jecxz
pop
add
shll
adc
xor
jle
push
mov
push
out
add
fistl
dec
mov
test
and
sti
pop
mov
and
hlt
outsb
jne
int3
mov
in
mov
inc
mov
rcrb
sub
aad
and
ja
pop
popf
adc
mov
loope
or
shlb
imul
clc
xor
movsb
xchg
xchg
xor
push
sub
jle
sub
inc
cmp
sbb
iret
inc
adc
mov
cmc
call
aad
add
dec
bswap
decb
xchg
inc
push
fldl
cmp
popa
movsb
pop
xchg
adcb
out
xchg
lcall
out
arpl
fldl
data16
outsb
rorb
fs
jae
stc
xor
push
rcl
fldl
sbb
xchg
das
sub
push
xchg
lock
push
sbb
xorb
inc
or
addr16
xor
and
jl
mov
aaa
test
jnp
loope
cs
sub
push
fisubs
mov
call
lock
dec
es
fadds
jecxz
mov
cmpsb
xor
jg
or
outsl
test
adc
ja
fiaddl
add
cmp
or
jbe
inc
and
sub
adc
cs
mov
fistpl
jbe
movsb
in
lods
js
xlat
aad
lods
or
sar
jnp
push
xorb
xchg
jmp
in
push
loop
jp
test
lcall
movsl
dec
cmpb
xchg
dec
fdivrs
mov
les
arpl
cmp
or
imul
cmp
dec
call
sbb
jbe
cmp
ljmp
mov
int3
scas
pop
shl
xlat
ja
andb
insb
sub
jb
sahf
sarl
shrb
inc
and
cmpsb
cwtl
stc
or
mov
shll
dec
subl
xor
fdivp
xor
outsb
fs
inc
adc
sbb
mov
mov
sbb
ret
adc
cmpsl
scas
adc
mov
out
push
mov
mov
cwtl
sub
add
and
xchg
enter
dec
add
je
fs
enter
sub
jbe
cmp
out
shll
push
jbe
gs
xchg
popa
xor
dec
test
pop
mov
xchg
stos
mov
fs
es
mov
dec
fimull
sbbb
jb
jp
dec
lea
xchg
test
shlb
pop
mov
mov
lcall
jp
fbstp
and
mov
insb
mov
pop
outsb
lods
jle
dec
mov
cs
ds
push
int3
push
fsubr
sub
cmp
or
sbb
insb
mov
pop
outsb
lods
jle
dec
mov
cs
ds
push
int3
push
fsubr
sub
cmp
or
sbb
insb
mov
pop
outsb
lods
jle
dec
mov
cs
cmp
push
int
sub
cmp
or
sbb
insb
mov
pop
xchg
lods
adcl
pop
fs
icebp
xor
and
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
adc
and
push
mov
leave
fmull
sub
jns
out
pop
lock
je
add
push
stc
inc
stc
jo
pusha
mov
rcrl
mov
imul
loopne
test
repnz
cmp
icebp
outsb
shll
cmp
jl
ss
movsb
sub
xor
dec
out
push
xor
stos
cmp
xlat
jecxz
fs
sbb
shl
cmpsb
in
cld
mov
movsl
fnstcw
rcrb
es
ss
hlt
xlat
xor
sbb
out
and
ss
cltd
jb
ret
push
xchg
cmp
test
test
cmp
or
out
push
aad
int3
fisubrl
lods
pusha
dec
xchg
flds
test
inc
shr
cmpsb
loopne
out
cmp
push
adc
std
lods
cmp
pushf
sti
shr
mov
mov
in
xchg
jnp
jns
or
int3
out
inc
popf
fnsave
popa
fiadds
scas
jae
dec
fcoms
mov
out
negb
xchg
mov
pop
jecxz
dec
scas
push
mov
mov
cmp
jo
rclb
sbb
movb
adc
inc
loopne
jns
jb
inc
cld
pop
in
aas
sti
mov
shrl
aad
lds
scas
imul
rolb
out
stc
and
sti
testl
or
mov
test
add
inc
jmp
nop
cmp
or
jns
imul
mov
and
jo
pusha
leave
nop
cmp
or
jns
imul
mov
loopne
lahf
jb
add
pop
repz
push
rol
or
lcall
pop
into
mov
sbb
mov
xor
and
loop
pop
ficoms
mov
in
not
fwait
out
fcmovnbe
aam
sub
test
inc
pop
insb
fsubs
movsb
sub
rorb
inc
mov
scas
cmpsb
adc
mov
cmp
dec
shl
outsb
mov
lcall
xchg
mov
xchg
jl
sbb
stc
mov
arpl
xchg
rclb
lock
outsl
ret
pop
sbb
mov
int3
icebp
bound
lcall
mov
mov
jb
popf
lds
jmp
or
into
jno
push
inc
lods
popf
xchg
adc
outsl
addr16
inc
pop
out
mov
xor
xor
fdivrl
pushf
orb
jno
lcall
cmpsl
push
sub
mov
rcll
addl
mov
push
out
dec
and
fcmovnb
push
pusha
jne
dec
jp
sahf
adc
pop
in
cmpsb
fsqrt
outsb
negb
sbb
stc
ja
dec
jnp
iret
mov
jnp
clc
cli
orb
cltd
xchg
iret
sub
vpcmpgtd
xlat
int3
pop
cmp
or
lret
addr16
cs
or
adc
lea
cwtl
push
push
movsb
aad
dec
stos
jnp
inc
movsb
lcall
mov
outsb
push
push
in
sbb
push
jle
xor
sub
add
nop
push
outsl
jg
push
dec
hlt
hlt
jno
cmp
test
push
cli
fisttpll
xchg
mov
pop
mov
adc
lods
movsl
fsts
cmp
scas
jge
cmpsl
out
sbb
loopne
add
xlat
xchg
nop
or
mov
jns
add
push
lds
mov
repz
cs
js
subb
xchg
iret
pop
out
out
xchg
xchg
repnz
pop
add
mov
push
pusha
frstor
xchg
mov
lret
inc
pop
mov
sub
jp
cli
icebp
inc
pop
mov
jl
jge
xlat
jo
movsl
cmp
mov
leave
dec
movsb
int
ljmp
pop
add
dec
call
xchg
xor
shlb
into
icebp
into
sbb
mov
xlat
jmp
scas
imul
push
arpl
insb
pop
mov
out
sub
fisubl
mov
repz
or
jnp
push
inc
xchg
and
shl
mov
adc
pusha
mov
incl
in
xchg
jnp
sub
push
test
out
xchg
sub
sub
leave
test
clc
sbb
mov
ljmp
cmc
cs
js
xor
push
push
sbb
testl
inc
mov
sbb
mov
lea
test
inc
adc
xchg
les
lahf
mov
add
jecxz
pop
xor
jae
mov
mov
mov
push
int3
fidivs
jp
sub
cmc
lea
xlat
or
jg
scas
xchg
into
mov
mov
sahf
pop
or
sbb
mov
rclb
cmp
test
repz
pushf
adc
or
mov
out
mov
adc
mov
stos
cltd
mov
push
sbb
addr16
gs
inc
stc
paddsw
cmp
sub
imul
mov
or
jg
out
fwait
repz
cmpsb
adc
aas
mov
xchg
lret
xchg
pop
and
ret
sahf
jmp
jle
dec
push
jno
xchg
fstp
ss
popf
mov
dec
aad
cmp
movsl
add
gs
xchg
into
popw
pop
fsubrl
inc
or
lahf
int3
lock
daa
cmp
xlat
lods
ds
xor
push
cmc
mov
ret
insb
into
or
js
mov
rol
mov
jb
sbb
jg
push
cli
xchg
mov
ss
adc
popf
repz
jp
inc
xchg
mov
xchg
lea
out
sbb
pushf
push
in
pushf
pop
neg
cli
int3
pop
or
cmpsb
mov
sub
in
ret
xchg
mov
in
or
mov
in
sbb
loope
in
add
push
fcomps
inc
mov
cmpsl
cmc
push
je
push
int
cld
fs
ret
cmp
inc
in
sub
push
pop
out
jge
andb
andb
add
imul
mov
popa
fldl
mov
outsb
dec
insl
sbb
dec
cmpsl
or
fstpt
aam
or
adc
mov
fs
dec
fimuls
sbb
in
lahf
lcall
jge
sbb
popf
mov
inc
sbb
ret
dec
add
lods
aad
stc
es
cltd
imul
int3
xor
sbb
jb
jle
jo
lds
mov
repz
insl
addr16
push
xchg
js
push
andl
sbb
aam
aam
jecxz
jmp
rcl
shl
and
and
nop
push
fs
xchg
xchg
mov
in
push
arpl
lock
mov
insb
fistl
adc
ljmp
add
adc
repnz
dec
mov
mov
jo
popa
leave
mov
adc
adc
mov
mov
xchg
lret
popf
mov
push
ret
loope
popa
cmp
mov
lret
outsb
dec
test
fistpl
in
shrb
lea
mov
push
fcompl
dec
mov
out
lea
imul
ret
sub
push
rcrb
xchg
xchg
mov
nop
dec
or
dec
test
xchg
sbb
inc
add
mov
xor
pusha
test
imul
das
mov
outsl
scas
cld
pop
mov
jecxz
sbbl
lods
adc
fs
jo
sub
bound
fsts
adc
iret
adc
bound
rorl
fwait
jbe
inc
iret
out
out
sbb
xor
mov
mov
neg
out
cmpl
xchg
insl
xchg
dec
test
adc
subl
mov
aaa
xchg
mov
rcll
fs
mov
jp
push
or
roll
mov
inc
iret
stos
add
fstpl
movsl
adc
test
outsl
dec
mov
push
imul
lret
lods
push
sub
or
test
and
xchg
inc
rcll
cmp
sub
sbb
inc
lds
pop
ds
hlt
lret
loopne
xor
inc
stos
sbb
neg
mov
jnp
shr
jae
insl
aam
movd
fwait
jg
cltd
jb
xor
xlat
push
in
jae
push
std
push
mov
adc
arpl
xor
cmp
mov
sbb
test
js
mov
int3
and
adc
sbb
push
mov
loop
mov
fsubrl
addr16
roll
inc
lods
test
mov
stos
xchg
cmp
pop
out
enter
iret
mov
je
lea
gs
ljmp
out
cwtl
xchg
sub
fbld
or
adc
or
mov
or
push
inc
add
cmpsb
and
stos
outsl
std
inc
jae
js
xchg
outsl
lahf
das
lcall
shr
pushl
or
sbb
sub
jne
inc
xor
or
sti
test
mov
jmp
jno
fwait
mov
push
out
mov
pop
fistpll
aas
cld
jbe
sbb
jmp
mov
imul
xchg
into
fldcw
push
cwtl
adc
loopne
mov
cmp
ret
call
and
xor
sub
dec
test
inc
sbb
xor
jb
es
cmp
push
adc
inc
adc
outsl
jl
sub
iret
mov
lea
ja
lcall
inc
cltd
pop
push
sahf
xchg
fiaddl
roll
movsl
imul
in
nop
inc
add
in
aas
xchg
xor
lret
shlb
stc
and
mov
mov
jnp
dec
sub
negb
out
dec
mov
push
mov
mov
lcall
loop
dec
jg
and
fildl
mov
sahf
sahf
jecxz
mov
cmc
les
pop
mov
cwtl
dec
sub
mov
xchg
xor
notl
xor
lahf
sar
cmp
insl
dec
add
cmp
pop
sahf
mov
lock
mov
push
clc
mov
xchg
push
rcl
sub
mov
mov
mov
daa
sbb
mov
sbb
sbbl
hlt
leave
and
and
xlat
andb
sbb
in
add
scas
fwait
lea
cmpsb
xchg
scas
out
mov
and
add
mov
sbb
cli
rolb
xchg
js
xlat
sbbb
aaa
mov
mov
xor
daa
dec
call
pop
cmp
sbb
and
mov
scas
leave
cli
hlt
jnp
sub
es
and
push
inc
fistpll
dec
push
mov
aad
dec
dec
adc
cmp
cmp
insb
or
js
inc
negl
into
mov
cwtl
lea
jl
jmp
inc
shll
hlt
pop
mov
nop
dec
bound
inc
add
mov
std
lea
and
ss
aam
stos
mov
mov
mov
ret
mov
push
xchg
and
test
sti
call
jbe
loop
lahf
movsl
mov
add
pop
int3
dec
pop
ja
insb
pop
out
and
push
rorl
cltd
int3
or
hlt
inc
jns
xchg
int3
and
mov
cs
dec
add
mov
hlt
adc
mov
add
adc
movsb
add
jnp
dec
ret
nop
stos
lods
add
in
and
dec
cmp
sbb
sarb
outsb
xlat
jo
pop
ss
lahf
fdivrs
aaa
jo
jg
pop
cld
insb
cltd
cmpsl
inc
jne
outsl
dec
xlat
int
or
daa
push
and
sti
push
fcmovnbe
push
dec
iret
pusha
mov
inc
sub
shrl
into
mov
ds
push
jge
pop
sub
int3
std
imul
shlb
or
out
fs
gs
and
fmuls
jp
sbb
les
adc
mov
sub
adc
mov
ficoms
int3
stos
mov
pop
sub
push
idivb
addr16
or
push
push
fldenv
sub
xchg
loope
leave
push
sub
or
cmpl
faddp
rcrl
repz
xchg
mov
push
xor
dec
arpl
pop
inc
movsl
sub
mov
pop
inc
cmp
jb
xor
sub
jae
stos
adc
ss
xchg
das
rorl
arpl
imul
dec
xchg
pop
mov
cmp
mov
or
mov
xor
push
pop
stos
mov
shll
or
fldz
fdivrl
test
test
pop
popa
out
xchg
push
ficompl
and
pop
mov
aaa
mov
xchg
push
imul
xor
sbb
cmpb
or
dec
sub
in
or
mov
sahf
pusha
mov
into
sub
popa
add
js
aad
fcmovnu
sub
les
test
inc
cld
jg
sub
sbb
pop
cmp
out
mov
lcall
xchg
sbb
sbb
mov
jl
pusha
push
adc
cli
push
add
and
pusha
mov
cmpsb
jo
mov
lds
push
dec
inc
sbb
xchg
sahf
xchg
testl
xor
or
sub
loopne
int
push
lods
push
jb
xchg
sbbl
sub
jb
mov
jno
sbb
and
and
xor
dec
insb
fwait
ret
insl
aad
sbb
popa
bound
int3
push
scas
push
add
lret
and
rclb
fdivr
std
cmp
repnz
repnz
jg
movsb
in
ja
sbb
fmull
mov
into
mov
cmp
fadds
inc
mov
je
test
sahf
add
adc
push
inc
ljmp
ret
or
sub
push
inc
push
sti
mov
adc
xor
pop
cmp
testl
mov
push
mov
xlat
lret
int3
dec
jmp
sub
pop
test
sub
popa
push
jge
or
mov
inc
les
dec
aad
inc
cmp
test
xor
iret
inc
std
shrl
cmpsl
add
arpl
lds
stc
iret
dec
mov
push
push
lds
sbb
push
cmp
jno
in
scas
movsb
notl
scas
xlat
dec
sbbl
daa
fimull
cmp
push
xchg
call
add
lret
dec
call
cmp
mov
shll
fs
push
inc
push
out
es
fucomip
inc
sti
arpl
ret
push
xor
movb
outsb
leave
div
data16
js
out
lods
loopne
lcall
cmp
outsb
add
dec
aam
gs
jmp
popa
rorb
subl
shll
sti
lock
out
stos
popf
mov
dec
jle
cltd
out
mov
in
scas
insl
inc
push
out
out
test
iret
iret
mov
cmp
sbb
pusha
sub
bound
and
dec
out
push
or
stos
int
adc
dec
mov
popa
divl
sbb
lcall
dec
addr16
rolb
lock
mov
sahf
int
jle
adc
orl
shrl
in
adc
or
outsw
push
cs
repz
xor
pop
mov
clc
sar
pop
push
mov
mov
negb
xchg
mov
sub
cmp
cs
mov
fs
rol
stos
jl
insl
push
jne
bound
xor
and
sub
fistpl
xchg
mov
and
shlb
xor
lcall
mov
inc
repz
dec
xchg
scas
in
ret
mov
aad
bound
out
xchg
jae
sub
add
jno
mov
and
add
mov
sbb
popa
add
pop
faddp
ja
inc
shl
lret
cwtl
jg
popa
cmp
clc
and
pop
dec
cs
cmpsb
inc
stc
pop
outsl
xlat
in
outsb
mov
stc
jecxz
out
popf
testl
xlat
mov
insl
stos
pusha
or
movsb
xchg
cmc
mov
xchg
add
mov
add
jne
xchg
or
cld
fbstp
push
xchg
hlt
neg
out
dec
dec
mov
xchg
jns
pop
mov
inc
and
xorl
mov
sub
aaa
sub
xor
inc
addr16
push
insl
sub
mov
mov
enter
push
cwtl
out
std
pop
nop
or
or
rcrl
inc
mov
xor
divb
push
loop
sbb
cmc
add
push
sub
sub
jbe
nop
jge
loope
xchg
movsb
cmp
lret
inc
popa
sbb
outsl
in
fbstp
hlt
popf
xor
sbb
loopne
cmp
test
fwait
mov
jns
stc
adc
pop
jmp
xchg
aaa
mov
xchg
sti
shll
loope
icebp
fidivl
rcr
daa
dec
ss
lea
enter
enter
sub
xchg
mov
mov
cld
jno
shl
call
pop
push
xchg
es
lcall
inc
daa
cmp
loope
mov
sub
mov
xor
adc
cmova
push
sbb
xor
and
xor
jle
xchg
lret
repz
fwait
test
lgs
pusha
call
mov
and
and
fisttpll
flds
pusha
bound
xchg
movsb
sbb
mov
je
hlt
push
push
xchg
outsb
negl
ret
sbb
jmp
sub
jo
cmp
in
lock
pop
icebp
add
inc
pop
loop
xchg
repnz
sbb
cmpsl
push
test
dec
mov
mov
sar
pop
movsl
xchg
test
dec
in
cvtdq2ps
xchg
and
mov
cmp
rcrb
in
push
cwtl
sbb
mov
push
cld
adc
jo
in
test
aaa
mov
cmp
add
icebp
outsb
ror
iret
daa
mov
iret
add
mov
add
push
mov
shr
xor
mov
xor
sbb
push
test
and
mov
push
or
push
push
in
jne
mov
iret
jge
fwait
test
into
call
movsl
xlat
jg
sbb
dec
xor
mov
insb
xor
idivb
test
cli
pop
fisttpl
sahf
sub
rol
or
cs
in
pop
cmp
inc
subb
sbbl
rorl
xor
test
sub
cmpsl
dec
cli
dec
clc
shl
loop
xchg
push
test
push
enter
xor
pop
push
stc
jns
movsl
pop
icebp
push
daa
adc
cmp
jns
push
and
pop
mov
push
lods
jge
aaa
pushw
sti
inc
rorb
cli
and
jmp
jmp
push
popf
dec
add
out
nop
cld
dec
pop
dec
sub
mov
push
lcall
push
push
cwtl
jmp
dec
movups
inc
dec
dec
xlat
jb
clc
inc
pop
out
jnp
adc
jle
outsl
dec
mov
sub
les
shlb
leave
orb
sub
inc
shlb
sub
insb
mov
inc
cmp
cmpsl
sbb
mov
xchg
inc
fucomip
jno
out
stc
adc
xchg
mov
push
pop
jmp
popf
int3
std
pusha
imul
fisttps
test
addr16
ret
or
adc
push
std
in
jecxz
icebp
mov
or
inc
inc
pop
mov
add
cli
ret
xchg
and
stos
push
dec
out
mov
jo
adc
pop
ja
fdivrl
cmc
test
dec
clc
mov
out
sbb
inc
push
cs
inc
push
cltd
bound
adc
mov
cmp
xchg
leave
sub
testl
push
xchg
cs
mov
es
cmpsb
cld
pop
lret
inc
pop
je
jns
stc
mov
enter
mov
lods
jno
ficoms
lret
pop
es
in
pop
and
cld
xor
inc
dec
add
xchg
adc
lds
repz
imul
cmpsb
jae
xchg
mov
sub
outsb
dec
pop
mov
xchg
lahf
sbb
sub
mov
enter
lahf
sbb
mov
orl
mov
call
adcl
in
mov
fs
aad
cmp
cs
leave
mov
dec
out
lret
ds
add
xchg
jecxz
push
mov
bound
mov
inc
jo
lods
sti
in
mov
push
adc
shrb
cli
iret
push
rorb
jno
repnz
mov
orl
aad
dec
inc
fdivr
and
loope
aad
shll
lret
mov
into
ljmp
stc
jne
dec
stc
xchg
mov
popf
xchg
dec
les
rcl
sbbl
xchg
aad
mov
lock
inc
mov
out
jge
jmp
mov
dec
mov
mov
add
add
loop
and
gs
lods
fcom
add
stos
pop
ljmp
repnz
jbe
insb
outsl
inc
jo
adc
loope
pop
xor
jb
movsl
mov
in
rorb
sbb
inc
pop
adc
xor
sbb
mov
mov
jbe
pop
xchg
xchg
in
cmp
jne
addl
cmpsb
fnstsw
fxch
sub
cs
xlat
xchg
adc
fdivl
push
cld
push
cld
and
ja
popf
push
fcmovu
cli
mov
repnz
and
lods
shll
mov
sub
and
push
fisubrs
sub
inc
mov
xor
sub
enter
aad
leave
lds
mov
fnsave
repnz
ss
mov
jecxz
ret
das
and
stc
sbb
test
adc
mov
mov
stc
aad
cmpsl
stos
imul
and
vpaddsw
xchg
sbb
lea
mov
adc
jae
xchg
sub
mov
mov
add
stos
xchg
aad
and
pop
push
movsb
pop
jb
inc
dec
cmpsw
adc
outsl
dec
and
or
mov
sbb
push
jg
xor
into
pop
sub
pop
push
insb
aam
mov
mov
shlb
mov
dec
ret
mov
cmpb
repnz
sub
xor
lods
dec
fistl
push
in
mov
stos
repnz
mov
and
mov
leave
cmc
ss
aaa
and
les
or
jge
push
mov
push
cmp
lock
fcmovne
push
mov
lcall
xor
hlt
xchg
mov
insb
sub
fs
cmc
cmc
ret
mov
lret
lock
mov
cld
pop
mov
mov
fdiv
mov
imul
add
jne
in
loopne
stos
push
or
sbb
mov
sub
adc
cmc
cmp
inc
add
adc
inc
pop
add
jns
ljmp
ljmp
dec
cltd
add
jbe
ss
dec
mov
pop
into
xor
sbb
cmp
das
sbb
mov
out
aad
into
pop
cmpsl
push
ljmp
loopne
cltd
add
fists
mov
leave
in
test
push
stc
inc
jmp
nop
cmp
or
jns
imul
mov
and
jo
pusha
leave
nop
cmp
or
jns
imul
mov
and
jo
mov
sub
mov
imul
mov
add
jo
loopne
nop
cmp
sbb
mov
push
pop
ss
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
pop
pop
dec
dec
jle
outsb
sub
jp
sub
dec
dec
ficomps
cmp
out
stos
sahf
fimuls
jmp
sbb
jle
outsb
sub
pop
push
dec
jnp,pt
inc
ficomps
out
stos
sahf
cmc
mov
mov
mov
outsb
pop
push
imul
jno,pt
pop
ficomps
rcr
mov
lods
lock
pop
pop
dec
dec
or
push
push
mov
clc
aad
sbb
adc
ss
mov
xor
mov
mov
aam
dec
mov
xor
fs
jae
imul
into
fwait
xchg
mov
jae
push
mov
out
inc
mov
mov
mov
xor
lcall
sub
aaa
fldt
outsb
sub
sbb
or
out
sub
dec
push
jnp
mov
fisubrs
inc
enter
out
mov
int
notb
push
aam
push
das
xchg
into
mov
addr16
adc
mov
hlt
cmp
sti
out
iret
mov
mov
movsb
fildl
insl
stos
shll
movb
dec
outsb
sub
pop
push
dec
jnp,pt
stc
ficomps
out
xchg
sahf
out
and
sbb
daa
sbb
inc
jb
inc
es
push
outsl
sub
fmul
sti
popf
push
or
pushf
out
cli
cli
sbbb
dec
cs
or
or
adc
pop
mov
jmp
fcmove
int3
sahf
scas
cwtl
aaa
push
outsl
inc
push
pop
push
dec
jnp,pt
imul
into
mov
mov
mov
mov
sbb
jle
outsb
sub
pop
push
dec
jnp,pt
imul
into
mov
mov
mov
mov
sbb
pop
lds
lock
pop
cmp
daa
loopne
dec
pop
sbb
and
mov
test
push
mov
daa
xchg
dec
dec
mov
jae
pop
repnz
out
xchg
clc
or
out
inc
es
sar
das
pop
xchg
and
popf
sub
push
jecxz
jns
mov
jae
add
mov
push
dec
test
lock
icebp
xor
out
jns
jp
bts
icebp
lock
in
pushf
pop
mov
notb
lea
and
into
sarb
mov
jae
aaa
mov
cld
push
popa
adc
movsb
loop
mov
iret
ja
lret
inc
or
pop
jecxz
xchg
pop
imul
sub
sti
sbb
pusha
popf
adc
sarl
push
pop
ds
loope
xchg
dec
mov
movsb
dec
rolb
add
clc
jp
sbb
mov
add
fisttpl
movsl
test
xchg
fldt
push
arpl
in
dec
or
mov
and
fisubrs
xchg
inc
insb
leave
hlt
in
idiv
fnstenv
test
inc
push
sub
cmp
jle
add
dec
in
inc
mov
repnz
sub
mov
mov
and
mov
mov
inc
ret
cmp
dec
add
jge
mov
xor
rorb
mov
fcmovnu
fs
adcl
xchg
jne
add
fistps
repnz
fcoml
out
std
mov
outsb
sub
daa
jg
imul
xlat
fsubl
out
mov
lcall
sub
ljmp
rcl
mov
sti
and
sub
jle
push
inc
pop
push
out
xor
push
or
jbe
fs
mov
je
mov
and
loopne
adc
add
dec
call
iret
fsubrs
jmp
sub
push
mov
dec
cmp
lods
cltd
inc
adc
lahf
jae
push
jo
aas
dec
push
andb
mov
ret
fidivrl
xor
adc
stc
mov
mov
sbb
fimull
in
outsl
hlt
jl
aaa
mov
mov
xor
pop
push
aaa
movsb
jge
add
xlat
xchg
cmc
push
into
pushf
pop
nop
roll
mov
out
shrb
pop
pop
mov
cmpsl
std
pushf
subl
push
mov
fdiv
jmp
xchg
push
cli
cmpsl
test
mov
xchg
dec
or
sub
cmpsl
ja
lret
cmp
mov
sub
cmp
lret
movsl
jg
mov
xor
mov
outsl
push
into
adc
pop
insl
in
push
xchg
mov
mov
mov
push
jge
inc
shlb
stc
adcl
mov
jbe
sbb
lret
subl
mov
pop
inc
adc
push
adc
ss
psadbw
ljmp
jge
ret
cmp
pop
jbe
mov
jecxz
xchg
push
shll
pop
jns
cmc
pop
cltd
mov
leave
add
ret
add
cmc
imul
fisttpl
mov
cmpl
lret
iret
lods
rcrb
les
mov
mov
pop
inc
jl
adc
pop
xor
les
sub
pop
add
jmp
movsb
loope
dec
stc
sbb
imul
dec
mov
insl
push
adc
cmpsb
sub
push
mov
fnstenv
push
jg
or
mov
mov
push
shl
cltd
sub
dec
inc
out
sub
fwait
jl
loopne
bound
sbb
fs
jl
mov
mov
lods
xor
std
pop
fnsave
mov
int3
and
jmp
and
mov
inc
pop
pusha
add
push
fldl
jecxz
mov
pop
fwait
lock
add
mov
arpl
sarl
push
fdivl
sbb
jle
in
aad
fs
sub
out
push
out
push
or
sbb
mov
gs
call
ret
jecxz
cmp
cmpsb
cmpsl
sbb
shlb
pop
xor
in
movsl
mov
fwait
mov
jle
mov
xlat
std
dec
loopne
popa
cmc
dec
inc
push
jae
jne
stos
pusha
sbb
mov
mov
js
add
testb
cli
pop
or
mov
sbb
andb
lock
scas
loope
bound
xchg
add
or
xor
movsl
xchg
insb
stc
in
out
testl
out
ficoms
pop
rolb
test
dec
or
add
fisubrl
out
mov
cmp
cli
xchg
inc
movsl
inc
mov
imull
jno
mov
and
xor
xor
scas
dec
add
enter
fildl
jge
cmp
or
out
fiadds
int
jl
out
ss
sub
jecxz
dec
aas
imul
xchg
ret
sbb
das
sbb
dec
and
mov
cmp
xchg
into
in
mov
add
jbe
pop
sahf
divl
sub
sbb
je
bound
mov
leave
sbb
jmp
xor
sbb
daa
dec
jne
xchg
mov
in
mov
in
imul
jb
push
test
jae
roll
movsl
cmc
movsb
repnz
jae
orl
mov
and
in
sub
mov
cmp
in
xchg
and
xchg
std
pop
push
xchg
or
push
xchg
or
insb
and
mov
loopne
std
xlat
inc
cwtl
ficompl
push
cmc
or
pop
insl
add
and
in
in
cltd
arpl
daa
push
xchg
mov
push
push
jle
cmp
divl
clc
bound
lods
pop
push
jnp
dec
fnsave
hlt
cli
lods
jmp
xlat
or
cltd
and
jno
stos
pop
sub
mov
std
jmp
mov
in
xchg
imull
data16
jmp
insl
sbb
out
xchg
xlat
mov
lret
mov
push
jge
jmp
fldl
js
add
fs
stos
dec
into
pop
stos
push
data16
mov
dec
repz
in
cwtl
lret
or
sahf
ficoms
push
lea
sbb
push
fucomip
hlt
ja
movsb
cs
xchg
aas
and
test
and
mov
inc
aas
std
pop
std
cmp
stos
outsl
sbb
mov
inc
int3
and
ja
jb
inc
inc
add
call
push
mov
sbb
testb
push
daa
inc
cwtl
dec
inc
mov
scas
outsb
mov
add
jecxz
adc
addb
sbb
cltd
cld
shlb
inc
fistl
jmp
jne
adc
add
dec
and
dec
dec
and
xor
and
stos
mov
mov
jb
mov
sbb
adc
icebp
addr16
and
mov
sahf
iret
lods
movsb
test
iret
out
scas
push
and
dec
into
fucomp
add
xchg
xor
pop
pop
or
mov
mov
or
scas
fidivrl
pushw
repnz
outsb
test
jb
dec
insb
rcr
imul
pop
out
popf
movups
je
jae
insl
les
mov
pop
dec
mov
mov
icebp
pop
fsubs
ret
sbb
add
xor
sbb
dec
and
lahf
nop
xlat
cmp
loopne,pt
movsb
add
inc
int3
scas
mov
add
cmpl
pop
mov
inc
push
xchg
pop
mov
repz
outsb
scas
and
xor
mov
xchg
and
cld
cmp
call
mov
and
sub
xchg
adc
dec
out
pop
stc
mov
jb
aaa
mov
jne
out
push
data16
dec
push
je
fstl
aaa
loop
int3
jo
xor
mov
adc
add
xchg
pop
jno
lods
lock
jmp
and
fstpl
mov
mov
push
inc
jmp
xchg
pop
aam
pushf
jae
hlt
inc
jb
push
mov
xchg
bound
mov
enter
loop
inc
cld
mov
js
add
jg
xchg
mov
repz
sti
inc
and
pop
xchg
inc
and
lea
adc
push
imul
gs
sub
pop
cmp
jns
mov
jl
mov
iret
shl
loope
test
cld
cld
shll
xor
add
inc
faddl
cmp
sub
stos
jge
sbb
in
pop
mov
adc
rol
push
lahf
pop
mov
mov
fisttpl
mov
lahf
jb
les
inc
sbb
xchg
movsl
inc
mov
jo
ds
out
pop
ret
mov
orl
jl
push
sub
lahf
mov
int3
std
jb
or
xor
push
repnz
imul
outsb
pop
mov
sub
mov
rcrb
or
dec
fisttpl
mov
jle
imul
pop
cmp
subb
popf
callw
sub
repz
mov
pop
add
in
mov
pushf
loopne
xor
adc
sub
iret
ss
call
inc
addb
cld
sbbb
movsl
aam
ljmp
andl
inc
xchg
lret
mov
sbb
fsub
jae
je
pushf
sbb
inc
mov
mov
adc
out
sbb
or
test
cmpsl
movsl
cmp
int3
pushf
add
lret
xchg
mov
xlat
and
sbb
push
push
out
or
push
lcall
jle
mov
xor
inc
push
cli
stos
jne
lcall
or
lret
and
cmp
push
repnz
repz
sbb
lds
cs
sub
je
out
pop
cmp
jg
sbb
add
out
xchg
addr16
int
orb
mov
xor
clc
fwait
sbb
push
or
shl
outsb
dec
fwait
addb
into
ja
stc
movsl
mov
mov
out
and
movsl
pop
sbb
mov
or
mov
icebp
in
or
testb
and
jge
and
fcoms
and
aas
out
push
lds
loopne
jnp
sahf
repz
call
icebp
jo
mov
sti
gs
mov
lea
rcll
mov
xchg
in
ljmp
popf
aad
ds
lret
sti
mov
sahf
sbb
inc
adc
mov
scas
jb
xchg
jae
xlat
add
pop
ja
lods
mov
ds
and
inc
imul
shll
mov
mov
fildll
add
sbb
push
dec
pop
pusha
lea
test
out
fdivr
sub
and
je
ljmp
repnz
lock
mov
mulb
iret
mov
dec
pop
aam
adc
out
jns
pop
insl
xchg
xchg
fimuls
notb
inc
inc
addr16
lea
lock
mov
into
add
dec
inc
jge
mov
sbb
sbb
shll
pop
cmp
scas
ret
mov
out
dec
mulb
fwait
lahf
addr16
sbb
mov
xor
mov
ljmp
mov
addb
mov
repnz
ret
sub
pop
xchg
or
into
mov
sbb
inc
lret
faddl
popa
xchg
les
sub
jb
adc
jp
testl
testl
movsb
cmp
es
or
pop
negl
push
sarl
nop
iret
das
pop
pop
mov
cmp
xor
xor
xor
icebp
stos
mov
mov
stos
pop
sub
fisubl
mov
jl
sub
dec
xchg
pushf
enter
fcompl
push
cmp
stc
jns
push
and
push
gs
popa
jae
stos
int3
rcrl
mov
sub
aam
js
jb
enter
mov
mov
loopne
xchg
sub
arpl
data16
pop
sub
and
popa
and
stos
inc
pop
in
dec
lea
adc
add
push
enter
jmp
lahf
add
rolb
outsl
jge
ret
and
out
xlat
nop
lods
pop
mov
cwtl
adc
pop
call
leave
in
mov
nop
jns
fwait
inc
jp
sahf
jp
xor
std
sub
fs
mov
xor
int
lret
roll
mov
ficompl
mov
mov
push
cltd
add
jbe
mov
adc
decb
mov
mov
jnp
push
dec
aad
jge
pop
xchg
pop
js
popa
mov
in
or
movsl
imul
jbe
sti
dec
sbb
add
sbb
jno
inc
and
nop
xchg
test
and
scas
jmp
push
pop
fwait
adc
mov
dec
inc
div
scas
push
jle
pop
or
add
xlat
jb
in
popf
mov
out
pushw
movsb
test
push
mov
add
sahf
add
leave
mov
cmp
idivb
or
push
sarb
mov
xchg
jb
rcrl
pop
sub
jg
pop
lahf
and
inc
pusha
jp
mov
inc
mov
lret
out
sbb
lret
lds
mov
rcrb
xchg
cmp
cmp
dec
mov
push
sbb
movsl
leave
mov
fidivl
inc
ror
inc
lahf
std
ljmp
cmp
sti
scas
mov
popa
jbe
sub
mov
xor
out
mul
push
and
inc
dec
pop
inc
gs
je
cmpl
aas
sti
clc
inc
outsb
xor
xlat
repnz
subb
cmpsb
cmp
fnsave
test
stos
lods
jp
sbb
sbb
jns
jne
test
mov
addr16
pop
xlat
andl
out
sbb
jge
mov
cmp
mov
leave
xchg
mov
xlat
sub
mov
repz
shlb
mov
mov
xor
xorl
adc
push
xor
add
icebp
and
add
ror
inc
repnz
cmp
add
pop
xchg
inc
dec
clc
mov
push
pushl
sub
jecxz
adc
or
jecxz,pt
or
jne
leave
jge
mov
cli
cmpsl
cs
xor
jae
sarl
and
push
dec
sbb
xor
inc
shlb
mov
mov
push
jb
fldl
testb
cmp
mov
cmp
xchg
pop
js
adc
out
outsl
mov
out
mulb
mov
cmpsb
mov
cmpsb
sahf
insb
int
lret
jmp
shr
mov
es
popa
in
cwtl
mov
xor
and
xchg
mov
dec
cli
push
out
jl
xchg
xchg
or
daa
mov
movsb
adc
xor
cli
xor
fistpl
fidivrs
dec
iret
sbb
pop
aam
pusha
jnp
push
lret
inc
repnz
jp
cmp
loopne
xor
ret
repnz
add
sub
pusha
xor
xchg
lret
div
cmc
cs
fsts
mov
dec
je
cmp
xchg
xchg
out
add
inc
sbb
dec
jecxz
mov
pop
push
adc
push
call
cmp
xchg
xchg
mov
pushf
push
add
lret
sbb
sbb
test
and
cmp
xchg
pop
xchg
push
sub
dec
sub
addb
int
pop
xor
add
jecxz
out
cmpsl
fdivrs
fildll
hlt
out
sub
mov
loop
sub
cmp
or
dec
push
subl
mulb
hlt
or
loop
scas
int
push
jle
mov
int
cmp
jnp
sarb
xchg
mov
jmp
inc
adc
leave
jge
pop
call
mov
adc
fidivrl
inc
scas
scas
or
push
dec
in
call
pushl
mov
pop
call
sbb
add
ja
dec
pop
dec
add
jg
sub
xor
jl
dec
mov
pushf
aaa
iret
cmp
inc
sub
xchg
cmp
cmpl
out
cld
cmpsb
sbb
fwait
imul
push
mov
and
mov
lret
and
testb
dec
cmp
mov
sub
fs
dec
cmc
stc
outsl
add
fmul
std
and
ja
dec
sbb
or
push
jge
push
sub
repz
pop
lds
loopne
mov
adc
cmp
in
std
mov
push
and
cmp
outsl
jge
and
cwtl
add
out
pop
iret
shrb
out
fs
cld
iret
filds
sub
push
push
mov
in
jne
xor
arpl
xorb
or
movsb
xchg
enter
cmp
push
fisttpl
inc
xchg
ret
xor
out
fdivrs
in
adc
xor
xchg
mov
and
dec
push
jmp
push
dec
jmp
jae
mov
rcrb
mov
pop
xchg
jp
xchg
mov
lcall
sub
ret
xchg
xchg
fldcw
nop
mov
sbb
jge
or
adc
and
js
xlat
gs
adc
outsb
pop
lods
jecxz
mov
sbb
xchg
mov
sbb
xchg
pop
lds
cmp
pusha
int3
push
or
rorl
push
in
inc
pop
leave
or
sbb
xchg
fwait
add
stos
lds
xor
jecxz
negl
mov
ljmp
and
sti
push
xor
enter
incl
lahf
bound
pop
repnz
xor
push
test
popf
nop
pop
dec
addr16
pop
pop
sub
in
jo
fdivrs
lods
repnz
cmpsl
jle
inc
scas
adc
lock
out
nop
sahf
ficompl
ja
insl
pop
cmpl
mov
push
xchg
adc
jmp
faddl
test
idivb
fwait
pop
pop
add
pusha
outsl
fs
shl
sub
sbb
in
movsb
inc
pop
mov
sub
or
lods
push
std
jmp
push
push
add
jne
stos
ret
pop
call
pop
adc
stos
icebp
push
or
cwtl
sbb
push
push
shll
and
xchg
cmc
jb
cmp
ljmp
lock
mov
repnz
sbb
pop
adc
push
mov
cwtl
xchg
jb
dec
cmp
sarl
testl
jnp
fidivl
adc
ds
shlb
int
sub
sti
cmp
dec
adc
lods
or
cmp
dec
call
cmc
cmc
imul
xor
fstl
sbb
int3
jp
add
pop
mov
imul
inc
push
lret
vmovdqu
xchg
arpl
pop
call
and
sbb
addr16
xor
loopne
add
fstps
cmp
xor
ficoml
nop
sbb
nop
adc
out
sbb
loope
int3
sti
mov
mov
insb
lods
and
mov
leave
or
les
xor
fwait
or
xchg
xchg
inc
sbb
popa
pop
movsb
sub
lret
sub
in
icebp
lea
icebp
jbe
sub
lods
dec
outsb
pop
or
add
cmp
ficomps
mov
jp
mov
scas
push
mov
nop
aad
inc
add
out
daa
test
push
sbb
sub
and
sbb
xor
mov
ss
dec
xchg
les
inc
imul
jne
inc
jmp
nop
lret
clc
iret
int
or
mov
cmp
push
hlt
mov
mov
cmp
out
in
call
insb
in
aad
sbb
jle
xor
and
mov
fldcw
inc
aaa
aaa
lds
inc
in
jmp
aas
in
nop
je
jp
imul
aas
lret
sbb
outsl
sbb
xor
push
jl
add
jmp
or
js
dec
out
in
xor
pop
add
icebp
cmp
loopne
sub
xor
push
pop
push
add
pop
pusha
push
jne
lret
mov
rorb
or
xor
adc
xor
jnp
add
lds
or
cmp
inc
or
adc
cmp
xchg
jmp
test
dec
xchg
dec
push
sub
or
fsubs
xchg
pop
lret
dec
into
sub
push
adcb
push
jae
mov
pop
fbstp
jecxz
jle
sub
cmp
je
fcompl
test
shl
bound
jnp
push
jl
cmpsl
dec
jo
ljmp
out
movsb
add
dec
mov
js
and
jge
push
push
dec
mov
mov
cs
jle
loope
lret
addr16
inc
hlt
sbb
inc
icebp
dec
stc
es
pop
mov
and
clc
adc
insl
sbb
push
ret
mull
add
cmp
lods
pop
xchg
aaa
push
pop
popa
xor
jnp
push
mov
push
shr
sbb
pop
cltd
xchg
lods
arpl
pop
xlat
in
dec
dec
dec
xchg
iret
and
mov
in
sbb
clc
dec
or
adc
xor
inc
lds
cmp
test
jno
sub
mov
andb
and
jl
scas
pop
xchg
ja
add
int
and
lret
popl
push
mov
outsb
sub
pop
push
dec
jnp,pt
imul
into
mov
mov
mov
mov
sbb
jle
outsb
sub
pop
push
dec
jnp,pt
imul
into
mov
mov
mov
mov
pop
dec
add
push
pop
push
and
jg
imul
into
mov
mov
mov
decl
jle
outsb
imul
push
dec
ds
cs
fisubs
push
mov
push
mov
adcl
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
