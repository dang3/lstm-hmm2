add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
js
je
jb
popa
add
add
add
add
sub
add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
add
add
sub
dec
add
and
push
add
jb
imul
add
inc
add
outsb
add
add
insb
add
add
popa
add
add
add
add
imul
add
jo
pop
add
imul
outsl
add
dec
add
je
jb
imul
add
push
add
add
add
add
arpl
outsl
add
and
push
add
jp
add
add
push
add
add
insl
add
insb
add
add
arpl
outsl
add
and
push
add
jp
add
add
add
jne
inc
add
jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
add
fcomp
cmp
lcall
or
add
add
add
push
pop
or
add
add
add
add
add
xor
mov
add
add
ret
add
add
add
add
add
add
add
add
test
in
or
testb
into
add
add
addl
ljmp
add
add
add
add
add
call
add
addl
xchg
add
add
add
add
add
add
jle
inc
add
add
or
add
pop
add
faddl
adc
add
add
add
add
in
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
or
out
mov
add
add
xor
jmp
add
add
push
add
add
add
add
add
add
add
add
add
repnz
add
add
insl
add
add
add
add
or
add
add
addl
filds
inc
add
add
add
add
add
aas
add
add
add
or
add
mov
add
add
xor
xchg
addl
call
add
mov
jmp
add
add
stos
add
add
add
add
add
add
sbb
mov
add
add
add
jmp
add
add
add
add
add
add
cmp
or
add
add
sub
or
jle
dec
add
add
add
pop
jmp
cmp
push
add
mov
jne
push
add
add
add
add
add
add
add
pop
jno
jne
aas
add
add
add
add
add
xor
jge
filds
push
add
add
add
add
add
add
int3
add
add
add
add
add
xchg
add
addl
pop
add
add
add
add
addl
js
in
xchg
add
add
addl
mov
add
int3
add
add
addl
sub
repnz
testl
add
int
movsb
add
add
add
add
add
jmp
add
add
testl
icebp
add
add
add
add
add
xchg
add
add
add
add
push
xor
mov
addl
into
add
add
add
add
xor
add
add
add
add
add
add
sahf
add
add
add
add
add
add
stos
or
add
add
add
add
and
add
add
fwait
add
add
gs
add
add
add
add
add
add
add
jmp
add
add
add
pop
aad
mov
cs
int
sti
sbb
and
pop
push
jmp
test
or
movsb
scas
testb
orb
stos
mov
xor
cmp
dec
negb
pop
addb
pop
mov
ficompl
jl
dec
cwtl
cmpps
mov
or
repz
push
xchg
xor
jns
jne
sbb
or
mov
add
les
divb
jae
mov
out
arpl
xchg
imul
pop
mov
adcb
push
mov
in
xchg
push
mov
sub
fimull
lcall
enter
pop
lcall
lahf
cmp
mov
pop
pmaxub
sbb
clc
and
loopne
xor
ljmp
stos
mov
sar
pop
jge
or
mov
les
test
ret
pop
jb
pop
pop
imul
cmp
inc
mov
xchg
mov
mov
and
jno
leave
cmp
mov
imul
xchg
outsl
cs
montmul
cmpsb
inc
fwait
mov
lret
jno
dec
push
movsl
icebp
mov
jecxz
or
fnsetpm(287
imul
fnstsw
stos
cmp
xor
push
cmp
imull
stos
adc
loopne
mov
add
jle
loopne
sub
insl
inc
pop
testb
xchg
jno
xor
sub
xchg
sub
aad
aad
inc
cmp
repz
dec
fpatan
inc
mov
ss
cmp
or
pop
xor
sub
and
outsb
loopne
mov
inc
fs
mov
push
jae
xchg
ss
xor
imull
mov
dec
sar
xchg
incb
jg
mull
std
pop
icebp
add
add
roll
stc
test
notb
sub
sbb
dec
dec
aam
in
jbe
inc
jne
fisubs
add
negb
jge
mov
out
sti
push
fxam
lahf
jp
cmp
into
xchg
ret
adc
cli
leave
push
aad
push
lods
or
iret
pop
mov
adc
insb
cli
sahf
xchg
pop
pop
push
xor
cld
sarb
ret
xor
or
sub
cld
fcmovne
mov
das
push
inc
stos
popa
fiaddl
or
rcll
insl
push
push
jge
sahf
jne
pop
lock
xchg
and
pop
int3
jo
in
pop
shrb
insb
add
push
pop
addr16
sbb
int3
and
mov
test
add
pop
or
das
imul
mov
scas
push
sbb
enter
cwtl
sahf
mov
sub
imul
pop
leave
lret
lea
xor
cmp
pop
and
pop
add
add
add
add
loop
add
add
push
mov
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
roll
ret
push
repz
pop
addr16
aaa
fldl
push
push
inc
inc
popf
jae
bound
xor
and
roll
ret
push
repz
xchg
inc
adcl
mov
xchg
jae
arpl
xor
and
shll
jecxz
xchg
jbe
push
mov
mov
mov
arpl
adc
dec
xchg
mov
push
repz
push
pop
dec
or
xor
mov
fisubl
daa
mov
scas
push
sbb
insb
push
sbb
cltd
pop
mov
pop
pushf
out
roll
mov
mov
hlt
jg
sbb
std
sub
jae
mov
sub
and
roll
ret
push
cltd
and
ss
xchg
data16
mov
jbe
pop
or
mov
push
mov
and
adc
sbb
lret
push
xor
adc
inc
inc
lods
cld
ret
arpl
cmp
xor
out
or
ds
mov
mov
faddl
mov
pop
mov
ss
jecxz
xchg
inc
adcl
mov
jae,pt
arpl
xor
and
xchg
push
mov
lcall
cmp
adc
out
add
aad
addl
lahf
mov
cmpsb
push
xchg
push
pop
xchg
adc
add
psllw
out
jecxz
hlt
arpl
pop
adcl
jne
negb
adcl
mov
xchg
jae
arpl
xor
and
roll
ret
push
repz
xchg
inc
adcl
mov
xchg
jae
arpl
xor
and
roll
out
outsb
pop
int3
fsubrs
or
pop
outsb
mov
pcmpgtb
push
and
xchg
insb
pop
jae
sbbl
rcll
jne
jmp
mov
neg
hlt
and
sub
sti
and
icebp
bound
inc
xlat
sbb
test
nop
iret
inc
sub
adc
and
bound
push
mov
adc
stos
push
xchg
es
ss
jne
sarb
add
fidivl
jg
das
fnstenv
cli
aas
in
and
outsl
mov
jne
incb
fs
dec
dec
xlat
fcoml
xchg
cmpsb
lahf
or
and
or
push
je
lea
shrb
insl
movsl
cs
mov
iret
dec
mov
sub
mov
pop
ds
push
inc
lock
imul
imul
es
xchg
aaa
inc
daa
testb
or
rcrb
insb
push
fistpll
ja
inc
outsb
test
mov
mov
xchg
xlat
hlt
push
mov
inc
cmpsl
je
jno
outsl
adc
xor
sarl
lret
push
sbb
icebp
insb
push
call
sbb
stc
es
inc
sbb
ret
cld
cltd
inc
adc
or
mov
shll
jle
bound
adc
add
push
push
cmp
sub
sub
mov
lods
or
stc
imul
pop
cmpsl
xchg
test
add
leave
mov
in
outsl
push
insl
lret
cmp
mov
sub
outsl
sbb
xor
in
sbbl
sbb
fwait
dec
mov
xor
ja
cli
mov
mov
cmpsb
cmpsb
cmp
icebp
jae
pop
or
test
shrl
fs
fbld
lret
sub
sbb
sub
mov
mov
insl
push
loopne
fmull
or
loope
mov
mov
jns
cmp
int3
dec
cmpb
cmpl
push
popa
daa
fstpt
rcr
testb
iret
jbe
xor
iret
mov
adc
sbb
jmp
lods
lds
dec
fs
push
andl
or
jl
push
inc
jge
dec
mov
decl
mull
mov
cwtl
jmp
loopne
arpl
inc
arpl
lods
cmc
mov
ljmp
xor
jno
ljmp
ljmp
push
mov
pusha
jae
push
and
pop
sti
fildl
mov
je
push
mov
mov
test
xor
call
mov
jno
aas
xchg
or
mov
and
in
iret
lea
in
push
jle
notl
and
lds
and
int3
mov
data16
and
and
out
gs
mulb
mov
das
das
inc
ret
cltd
jge
adc
mov
shrb
aaa
push
pushw
fwait
aad
mov
jecxz
push
mov
cmpsb
in
mov
lods
and
xchg
fiaddl
hlt
or
and
xchg
sarl
std
arpl
movsl
jno
xchg
sbb
inc
aam
sbb
add
add
push
stos
push
dec
mov
add
cmpsb
inc
in
cmpsl
sbb
mov
fwait
mov
xchg
scas
test
mov
xorl
insl
sub
cli
sub
lea
mov
les
movsl
dec
scas
outsl
and
sub
jae
shl
push
xchg
cltd
shlb
xor
dec
mov
movsl
mov
enter
or
xor
cmp
xor
std
or
mov
iret
mov
out
cmp
ljmp
out
pop
arpl
xor
call
in
jl
and
adc
outsb
aaa
sub
mov
sbb
dec
xchg
lds
repnz
pop
lods
int3
popa
jmp
mov
fnstcw
cld
jmp
idivb
lods
add
adc
hlt
pop
or
insl
in
and
pop
stos
jp
pop
xchg
xor
lods
or
xlat
test
inc
push
loopne
xor
push
sarb
lds
in
mov
imul
xor
fimull
pop
inc
sti
push
mov
lret
push
cmp
jne
adc
movsb
xchg
adc
test
ret
sub
dec
testl
ret
cmpsl
pop
inc
shrl
cmp
pop
in
lret
leave
out
push
popf
int3
mov
and
jbe
imul
mov
xor
xchg
aad
add
cli
fwait
cmp
clc
push
loope
sub
xchg
sti
mov
repz
pop
shll
adc
dec
rcrl
ret
jne
pop
jb
add
out
or
arpl
pop
inc
push
into
insb
out
in
push
dec
push
mov
xlat
dec
cld
add
lret
mov
jecxz
mov
lahf
sbb
lret
hlt
lods
xor
sub
sbb
xchg
mov
inc
or
mov
call
test
push
jne
fmulp
cmp
xchg
call
sub
add
sbb
dec
das
cmp
or
jbe
iret
or
filds
dec
xor
and
insb
add
inc
movsl
mov
out
cmpsb
xor
daa
mov
dec
dec
sarb
cmp
jo
cltd
fwait
mov
xor
inc
int3
or
push
lret
push
adc
cmc
sub
jl
imul
ja
cltd
adc
add
push
adcb
cmp
fldt
pushf
lcall
in
push
add
ss
push
adc
jns
jge
pop
lods
adc
fadds
xchg
inc
sub
mov
loope
jle
add
lret
pusha
loopne
and
pop
xor
mov
mov
xor
push
or
jnp
cmp
cli
jne
ret
fstpt
xchg
lods
xor
test
sub
loopne
mov
add
and
adc
loope
std
jle
lds
fidivl
cmp
xchg
fnstsw
js
lahf
repnz
testl
mov
pusha
roll
or
xchg
std
mov
jbe
das
mov
add
ret
imul
rorl
pop
or
ds
lcall
and
dec
xchg
inc
int
mov
mov
test
push
outsb
push
stos
push
inc
cmpsb
push
movsl
and
cmpsb
fwait
rcrl
jno
jne
lea
or
mov
mov
daa
xor
mov
inc
pop
fdivr
xlat
xchg
lea
pop
fimuls
inc
jno
sti
rclb
ret
sub
xlat
sbb
adc
jmp
jmp
xchg
push
pop
jmp
cwtl
xorl
xor
or
push
pop
js
mov
js
and
sbb
jb
jae
jmp
jg
xchg
inc
push
sbb
sbb
leave
xor
jb
in
daa
arpl
pop
pop
add
aas
adc
or
xchg
push
in
or
sbb
sbb
pop
les
cwtl
js
xchg
test
dec
in
xor
xlat
mov
add
push
push
cltd
xchg
fsubr
push
outsb
adc
inc
mov
cwtl
mov
mov
inc
jne
scas
mov
aas
lcall
and
cpuid
dec
dec
xchg
jb
fmul
push
lock
push
adc
in
sbb
xlat
mov
adc
xor
jns
xor
inc
cli
pop
jbe
popf
scas
aam
pop
cmp
aas
cmp
and
sub
adcl
pop
ret
movntq
cmp
sbb
jmp
les
ja
push
and
inc
test
dec
and
sbb
xchg
jnp
adc
in
xor
mov
xchg
and
mov
mov
or
mov
das
jmp
aam
fimuls
xchg
rcll
mov
hlt
xchg
fildl
inc
popf
and
push
cwtl
les
mov
mov
pop
sahf
jb
mov
subb
xor
push
xlat
or
dec
push
orb
push
mov
cmp
idiv
jns
mov
out
call
inc
repz
mov
pop
sub
dec
ret
xchg
push
int3
mov
mov
adc
inc
call
and
cmp
and
sahf
jmp
insb
cli
std
mov
jae
shlb
call
cmp
in
pop
sbb
pop
jl
push
pop
imul
in
or
xor
jge
xchg
std
addr16
pop
push
dec
loopne
xchg
adc
aam
mov
cmp
outsl
insl
lret
aaa
xor
shlb
mov
ret
push
mov
mov
clc
je
sbb
mov
cmp
fstps
into
les
insl
sub
cmp
lret
jns
xchg
mov
xchg
and
sub
hlt
pop
std
and
shrb
jae
mov
fsubrp
jb
xchg
lods
cmpsl
jnp
mov
inc
int
sti
gs
out
hlt
sub
jae
fmull
test
ret
iret
jnp
rorl
sbb
or
mov
test
repz
dec
fcoml
inc
fdivl
bound
adc
xor
or
sbb
jno
daa
or
jge
je
sub
cmp
pop
imul
or
imul
lods
cmc
or
dec
mov
push
scas
jb
in
pop
scas
insl
cwtl
xor
shrl
in
pusha
sbb
mov
mov
lret
sub
insb
xchg
clc
bound
movsb
cmpsb
ljmp
mov
cwtl
es
xchg
js
out
je
mov
sub
lcall
ljmp
test
push
mov
sbb
daa
pop
vpsrlq
pusha
int
sub
sub
push
test
jo
ret
into
inc
xchg
pop
sbb
and
dec
mov
lods
test
ljmp
mov
mov
inc
dec
nop
jp
aam
adc
ljmp
out
mov
dec
mov
and
je
leave
xchg
outsl
out
cmc
fwait
outsl
xchg
das
push
es
lcall
fistpl
outsl
jge
bnd
inc
and
jae
test
jmp
and
pop
pop
sbb
push
scas
jmp
adc
ds
imul
loope
stos
fwait
xor
pop
out
sub
cmc
bound
push
std
sub
js
xchg
test
les
lret
sub
imul
cld
push
addr16
int
loopne
test
add
cli
arpl
lods
dec
sub
out
lock
mov
shl
dec
sbb
dec
cltd
adc
cwtl
jo
loop
push
clc
popf
sbb
mov
adc
arpl
mov
sub
cwtl
xor
fbld
dec
test
push
lods
das
imul
fs
push
xlat
data16
lret
and
gs
sbb
fnstcw
pop
jno
pop
and
pushf
xlat
repz
cmp
xor
cli
int
pop
jae
dec
mov
in
loopne
fwait
dec
sub
push
pop
mov
jecxz
cld
aam
xchg
adc
inc
sahf
test
pop
add
add
push
inc
scas
popa
mov
sbb
cwtl
stos
out
and
dec
jo
sti
push
xchg
cs
into
aas
aas
pop
adc
fsubrs
pop
stos
mov
sub
out
leave
loope
fnstsw
mov
fsts
scas
int3
add
lods
shl
rorb
cli
add
cmpsl
cmc
jl
test
fisttpl
mov
jbe
jmp
inc
mov
bound
push
sbb
lret
jge
loope
dec
lret
mov
jmp
icebp
xor
adc
pusha
dec
ficompl
add
fs
iret
pop
sub
sahf
fs
cmp
sub
push
inc
mov
or
fmull
mov
dec
mov
mov
enter
aad
hlt
mov
int3
cs
roll
loope
jo
hlt
fisubl
icebp
lds
leave
sub
loop
ret
mov
push
xchg
test
cmp
xor
sarb
xor
test
jo
mov
fadd
aas
xchg
in
inc
pop
shl
pushf
fs
push
ficompl
jo
gs
sbb
sub
fs
loop
fsubs
ljmp
mov
addr16
push
inc
xchg
and
sahf
movsl
pop
sbbl
mull
mov
or
xchg
pop
sub
ret
enter
mov
mov
cmpsb
pop
push
aas
mov
pop
fwait
cltd
test
push
jmp
fcompl
orb
repz
fdivrl
ja
pop
sub
icebp
adc
test
or
movsb
xor
in
fidivrl
sbb
iret
dec
repnz
shr
dec
xor
adc
fiadds
imul
inc
lea
outsl
jnp
or
outsl
cmovnp
fstl
xchg
sti
sub
cmp
xlat
cld
mov
jne
ja
lea
cwtl
jl
cmp
out
cs
lods
inc
sarb
aas
dec
and
pop
cld
cmp
and
mov
out
out
jg
push
rorl
push
sbb
jo
adc
push
sbb
inc
fwait
insb
and
sub
mov
jl
out
sub
and
or
stc
fbstp
pop
jne
adc
inc
cmpsl
mov
and
adc
insb
es
xchg
cmpsl
test
ss
and
sub
and
in
adc
pop
es
sub
dec
jmp
jb
enter
aad
test
fcom
adc
mov
dec
mov
xchg
inc
push
cld
je
inc
sbb
outsl
out
mov
into
outsb
int3
scas
test
jne
push
pop
fists
sahf
lahf
lcall
inc
repz
jmp
push
push
pop
jnp
sbb
cmpsb
push
inc
je
outsb
sub
jg
cmpsl
and
xor
call
test
int3
sbb
pushf
cs
mov
xchg
stc
mov
mov
inc
mov
fdiv
addr16
insl
in
jecxz
xchg
dec
ret
mov
add
ret
lea
jno
lahf
rorl
lds
iret
outsb
mov
mov
fildl
cmp
xor
xchg
mov
sub
cmpsl
andb
loop
insb
add
xchg
xchg
ss
fisubs
iret
sbb
outsb
fisubrs
jae
and
pop
cmp
lods
test
mov
cmp
sarl
cmp
add
xor
xchg
pop
mov
jae
mov
inc
pop
dec
sarl
js
dec
mov
dec
sub
push
mov
lods
mov
mov
outsl
ja
imul
xchg
sub
jae
loop
push
push
int3
push
scas
adcl
fstps
inc
push
jecxz
fsubs
jne
xor
nop
dec
jo
pop
jae
lahf
out
pop
push
and
dec
xchg
insl
and
popa
cmp
imul
sbb
mov
sarb
sbb
sub
insb
loop
movb
imulb
jle
dec
popf
fisubrl
cltd
dec
sbb
push
out
repz
les
dec
jge
imul
mov
sbb
lahf
mov
fs
fidivs
sub
lock
lret
outsb
test
shrb
in
in
test
mov
inc
xor
shlb
add
aaa
mov
cmp
mov
stc
popa
sub
sti
dec
dec
sub
push
pop
mov
add
jl
xchg
push
sbb
sbb
movsb
pop
in
pop
loope
test
shlb
dec
pop
scas
mov
mov
dec
test
test
imul
in
call
leave
cmc
inc
daa
icebp
push
sbb
sti
or
jle
hlt
mov
cmp
sbb
lods
and
mov
push
xor
mov
ja
repnz
outsl
pop
xchg
stc
je
pop
xchg
test
or
clc
lock
outsb
hlt
mov
ret
fisttpl
int3
pop
loope
out
push
jmp
int3
pop
sub
iret
xor
test
mov
xchg
shll
mov
add
loope
or
pop
into
xor
scas
loopne
adc
or
pop
add
cmp
shlb
mov
xor
icebp
js
jnp
les
fs
hlt
cltd
cmp
pop
pop
jo
fdivrs
movsbl
cmp
ffreep
iret
cmpsl
fistpll
or
mov
mov
repz
push
dec
mov
inc
out
mov
mov
jl
aad
pop
push
xorb
or
mov
ljmp
sub
mov
ss
mov
xor
cwtl
lock
push
sbb
rcrb
mov
ret
aaa
mov
pop
lret
add
push
xchg
dec
pusha
sub
adc
stc
mov
out
pop
fiaddl
into
dec
push
in
js
iret
and
lock
xchg
int3
add
add
pusha
sti
dec
push
jae
es
xor
mov
aaa
jo
jp
pop
scas
stos
cmp
cmp
das
sti
cmp
cltd
movsb
xchg
xchg
mov
dec
jnp
mov
hlt
popa
sbb
cmpb
xchg
pop
enter
scas
test
or
icebp
mov
adc
sbb
cmp
ja
adc
rorb
aam
and
int
push
mov
push
ret
adcb
scas
sbb
sbb
popf
dec
add
hlt
xchg
xor
popf
scas
and
xor
stos
sbb
jmp
imul
add
and
jnp
test
in
xorb
xchg
in
lds
leave
call
enter
daa
outsl
or
fisubs
enter
leave
outsb
flds
inc
cmpsb
inc
sbb
mov
ja
test
sbb
aas
add
jmp
out
aam
lods
aad
rcrl
and
cmpsb
inc
js
xchg
push
dec
stc
xchg
inc
add
add
pop
dec
lock
and
pop
sbb
adc
into
pop
jg
mov
lret
inc
push
dec
jae
iret
fwait
mov
mov
iret
adcl
rorl
xchg
jb
cltd
inc
movsb
or
rcll
cs
lahf
xchg
call
jmp
pop
and
cmp
sbb
test
pop
jb
mov
fucomip
js
ret
into
mov
pop
es
jno
cmc
sarb
xchg
sub
push
out
nop
clc
jl
xor
push
aaa
cmpsl
sub
mov
mov
cmp
loop
inc
adc
inc
mov
inc
pop
in
xor
lahf
mov
fwait
cltd
out
lds
popf
scas
rcrb
cmc
notl
push
push
popf
ds
mov
jle
and
mov
cs
and
cmp
mov
adc
inc
push
stc
popa
mov
and
cmpsb
mov
dec
data16
test
push
std
in
jmp
xchg
shlb
icebp
fistpll
pop
mov
sbb
and
pop
jae
cmp
inc
inc
rorb
jg
xchg
inc
and
adc
pop
or
sub
push
jb
fldenv
aas
movsb
pop
xchg
fidivrs
xchg
sbb
cltd
and
mov
mov
sbb
sub
fnstsw
push
mov
fdivrl
iret
cs
cmp
xchg
pop
aam
stos
or
xchg
jge
xor
cmpsb
cwtl
jp
mov
fcompl
ds
fstl
or
sub
lds
cmpsl
test
ljmp
mov
push
lods
mov
cmp
in
jne
ret
mov
mov
loopne
xchg
loope
scas
fwait
mov
xor
mov
xor
movntq
out
clc
xor
es
sbb
ss
lods
pop
sub
imul
xchg
dec
pop
pop
mov
or
std
inc
dec
sbb
jns,pt
mov
push
fcomip
xlat
les
ja
fisttps
mov
adc
jg
mov
mov
cmp
sub
out
adc
dec
addl
add
sub
xchg
ror
jecxz
loop
jp
insb
jb
jae
add
cmp
sub
sbb
mov
mov
mov
movsl
test
jae
std
fs
pop
and
and
ret
jns
loopnew
je
dec
shlb
out
add
cmc
dec
mov
imul
adc
outsb
cmpsb
outsb
sub
sbb
dec
and
pop
adc
js
rolb
lret
mov
push
dec
dec
jp
hlt
xchg
push
jb
sub
xor
pop
rorb
shr
jecxz
icebp
sti
xchg
fimull
pop
sub
sub
and
jno
outsl
stos
xchg
imul
push
add
or
add
jae
into
xchg
jmp
jp
ret
aas
pusha
sub
add
outsb
cld
cmc
aaa
jne
mov
ret
insl
xchg
push
jmp
sub
pop
cmp
insl
jl
mov
in
outsl
mov
mov
fst
or
jbe
int3
sahf
xor
test
aam
adc
mov
fldenv
sbb
sub
shlb
sbb
dec
mov
rcll
notl
push
sahf
clc
movsl
mov
pop
in
mov
inc
bsf
jmp
js
and
out
mov
int3
jo
jmp
cmp
push
test
fistpl
jge
daa
imul
or
fninit
mov
jg
inc
mov
iret
std
mov
ret
nop
xchg
repz
cmp
mov
test
insb
fs
xchg
mov
pop
lods
jecxz
dec
cmpsb
inc
fsts
arpl
pop
in
scas
negb
mov
repz
lret
int
into
xchg
inc
mov
adc
ret
aad
scas
aaa
jecxz
sbb
cmp
fiadds
push
pop
sub
arpl
push
adc
or
jp
ret
test
or
dec
cwtl
and
xchg
lods
iret
lds
ss
add
jb
xchg
and
push
pop
mov
addr16
xchg
fildll
push
sbb
ja
loopew
cltd
enter
jbe
push
jmp
cmc
jne
mov
inc
incb
aaa
jge
fsub
sbb
or
cmpsb
enter
scas
js
or
push
cltd
push
jno
xlat
popa
imul
pop
pop
and
dec
cli
sub
xor
popa
xchg
xchg
mov
mov
xchg
sbb
jne
inc
xlat
out
mov
out
cmpb
or
cmp
lea
xchg
sub
adc
and
mov
dec
cltd
arpl
les
xchg
add
pop
into
push
sub
mov
inc
push
outsb
and
mov
push
lret
add
add
pop
aam
lret
push
and
shll
shlb
ret
mov
push
cli
daa
pusha
push
add
mov
mov
nop
loop
lahf
fwait
hlt
mov
mov
lods
arpl
fwait
sbb
pop
pop
aam
dec
mov
jne
and
and
inc
adc
jge
das
xchg
loopne
mov
in
movsl
sub
test
test
jecxz
xlat
push
data16
mov
mov
out
pop
je
mov
ljmp
nop
inc
push
mov
and
ss
inc
adcl
mov
xchg
jae
arpl
xor
and
roll
ret
push
repz
xchg
inc
adcl
mov
xchg
jae
arpl
xor
and
roll
inc
sbb
jecxz
adc
cmp
push
xchg
jae
arpl
xor
and
shl
ret
bnd
xchg
inc
adcl
mov
cmp
cmpsb
arpl
arpl
push
mov
int3
int3
int3
int3
fiadds
out
mov
cmc
fisttpl
dec
pop
jle
outsb
xor
jne,pt
jne
test
xchg
movsl
out
mov
lds
nop
pop
add
outsb
xor
ds
test
xchg
movsl
out
mov
lds
cmc
pop
add
inc
pop
jbe
insl
or
inc
add
negb
xor
xchg
xchg
int3
push
and
test
or
arpl
mov
or
insl
pop
jg
adc
jmp
loope
sbb
aas
fst
and
xchg
inc
push
ss
jb
mov
ss
add
add
mov
call
iret
orb
sahf
aad
in
adc
repz
mov
push
data16
adc
xchg
pop
mov
mov
cli
mov
outsb
xor
fimuls
testb
mov
inc
outsl
and
adc
push
syscall
ds
mov
movsl
out
mov
lds
cmc
pop
add
outsb
xor
ds
in
hlt
repnz
fildl
dec
or
jbe
inc
jnp
adc
jp
fucomp
mov
fadds
scas
fstpt
pusha
dec
addr16
inc
sub
and
dec
add
and
shr
sahf
testl
adc
push
inc
push
push
ds
test
xchg
movsl
out
mov
lds
cmc
pop
add
outsb
xor
ds
test
inc
lret
inc
xor
inc
and
arpl
and
es
push
or
cmp
lret
fsubr
dec
int
in
xlat
lret
pop
outsb
jl
clc
stc
dec
mov
stos
fsubrs
ljmp
popf
or
sbb
mov
add
in
les
pop
push
adc
pop
repz
push
push
in
sub
pop
sbb
sub
sub
lods
and
inc
mov
insb
lods
jge
cmp
ret
push
mov
lods
push
mov
adc
cmpsl
dec
addb
rcl
xchg
pop
cmp
test
add
movsl
addl
adc
lcall
pop
adc
jmp
scas
mov
cmp
fdivs
adc
stos
movsl
add
pop
les
or
mov
dec
xchg
fwait
or
rorb
daa
and
jo
sbbl
mov
sbb
cmpsb
cmp
push
jl
repnz
pop
push
pop
mov
hlt
fidivrs
dec
hlt
fwait
call
adcb
xchg
cmpsl
icebp
aad
pushf
jmp
les
call
pop
outsl
pop
sbb
in
and
mov
mov
out
sbbl
and
fbstp
stos
jecxz
sub
int3
cltd
imul
lods
push
fwait
sahf
cmp
ss
xlat
je
jge
pop
sub
cmp
cmp
xchg
sub
pop
out
pop
push
clc
pop
inc
ss
rep
sub
in
dec
adc
mov
popf
insb
js
xor
fcomps
dec
das
mov
sub
mov
stc
sub
fsubr
clc
xlat
inc
mov
jns
push
enter
push
ja
or
xchg
fs
jne
divb
push
mov
clc
sbb
push
jmp
push
stos
movsb
pop
xchg
inc
push
shll
cmp
jl
fwait
in
dec
xor
das
popl
popa
jp
les
cmc
pop
sub
inc
decb
in
xor
subb
ds
xchg
or
cmc
xlat
ret
pop
lret
leave
ret
das
lock
mov
aaa
mov
aaa
jmp
add
push
xor
gs
sub
lods
dec
sbb
call
cmp
adc
ret
inc
repz
popw
lret
scas
mov
cmp
and
sub
inc
out
mov
add
test
sahf
loopne
dec
es
leave
mov
fs
lahf
sub
data16
add
jno
es
mov
push
fmull
ret
cmp
and
jns
adc
loopne
out
xor
mul
jge
clc
out
add
lods
clc
or
pop
or
xchg
sub
dec
std
xchg
dec
adc
mov
or
pop
mov
cltd
xchg
add
ss
scas
inc
outsb
pop
sub
and
jecxz
sti
lcall
xor
cwtl
movsb
dec
inc
cmp
popf
cmpsb
stos
sub
mov
xor
or
mov
mov
pop
inc
mov
mov
pop
or
out
xchg
clc
mov
jmp
push
stc
pop
lds
fdivrl
and
lds
xchg
in
sbb
add
jg
cli
sub
pop
dec
xchg
mov
mov
pusha
inc
dec
insb
sbb
movsl
push
add
pop
jge
shrl
mov
jne
in
clc
xchg
xchg
pusha
xchg
xchg
lret
frstor
ja
cli
jae
mov
mov
clc
movsl
sub
pop
enter
insb
sbb
int
fxch
xchg
insl
cs
xor
cmpsl
outsl
xchg
clc
push
enter
mov
test
in
mov
hlt
aas
call
adc
out
fcomps
adc
mov
mov
data16
cmp
mov
jbe
idivb
fldt
dec
fisubrl
jmp
xchg
dec
push
jmp
sbb
add
dec
lea
pop
xlat
int
xchg
cmpsl
fbstp
dec
pop
xchg
rcrl
sarl
or
push
outsl
adc
in
lahf
aaa
dec
dec
pop
sbb
popa
mov
and
loope
out
lret
jbe
jb
leave
mov
cmp
and
cmp
jnp
lock
adc
cmp
dec
ret
adc
dec
cld
ja
dec
sbb
popf
lds
out
punpcklwd
cmp
sahf
pusha
ja
sbb
adc
cli
adc
arpl
xchg
hlt
and
adc
and
aaa
pusha
and
repz
mov
into
mov
inc
popa
test
cli
add
mov
pop
pusha
pop
mov
ret
out
jno
mov
lcall
call
shrb
jnp
cmp
sub
jecxz
mov
mov
aad
pop
aas
addr16
cmp
push
jo
in
imul
das
into
and
xor
pop
mov
notb
pop
subb
int3
sub
movsb
repz
mov
icebp
div
std
pop
mov
popa
push
rorl
lcall
pushf
dec
inc
pop
pop
add
mov
adc
lahf
xchg
pop
test
sbb
xchg
test
fs
sbb
lock
outsl
cmp
sub
or
das
orl
rolb
xchg
inc
pop
sub
mov
repz
shlb
ret
andl
arpl
pop
dec
jo
movsl
cs
cmp
or
scas
scas
jno
popa
fidivl
ucomiss
fdivrs
cmpsb
mov
subb
xor
push
arpl
ja
mov
push
js
jne
lea
sub
inc
arpl
jp
aaa
int
inc
fwait
call
inc
fwait
icebp
or
shl
jnp
mov
ljmp
and
aaa
dec
sarb
daa
shrb
xchg
xchg
pop
scas
mov
mov
movsl
loopne
push
ret
xchg
jmp
sub
sub
mov
ret
mov
sbbb
xchg
ds
hlt
cmp
add
pop
push
div
movsl
jb
sbb
mov
or
int
and
lret
sbb
lcall
mov
push
push
jmp
mov
jle
movsl
or
fildl
ljmp
lods
int3
cmpsl
nop
mov
adc
add
cli
bnd
popf
xor
js
test
add
push
imul
dec
mov
ret
in
jnp
xlat
pop
fldenv
testb
dec
bound
pop
push
lahf
fists
pop
outsl
mov
outsl
movsb
fistl
pop
enter
es
icebp
xchg
rorl
fwait
push
xchg
pop
flds
popa
mov
aas
inc
cmp
push
outsl
roll
adc
popf
jbe
shll
pop
dec
popa
lret
sbb
dec
cmp
inc
and
aad
jne
in
xor
cmp
add
mov
mov
ja
aam
das
mov
xor
jne
popf
xchg
xor
pop
jbe
sub
push
mov
adc
mov
cmpsl
add
push
arpl
repz
insb
xchg
jno
ficompl
add
inc
andb
iret
mov
je
pop
sti
mov
out
rep
les
movsb
cwtl
fimuls
notb
hlt
inc
test
push
hlt
adc
fsubrs
or
insl
outsb
xchg
or
mov
and
mov
cmpl
aad
hlt
mov
and
sbbb
es
add
pop
xlat
inc
out
push
fiadds
mov
test
push
cld
or
stc
loope
xchg
xor
adc
xchg
sbb
fsubrl
pop
lret
pop
push
xchg
mov
fcmovnu
in
cld
push
dec
jge
xchg
movsl
add
aaa
shll
out
leave
mov
jb
loop
jb
incl
stc
and
aas
mov
int
or
or
inc
fistpll
shrl
int
mov
mov
mov
popa
cmp
incl
inc
adc
sub
in
xchg
mov
push
mov
mov
sub
push
ja
pop
mov
sbb
in
jecxz
sti
in
mov
xchg
xchg
cmpsb
ret
jae
jbe
jmp
mov
lock
dec
aad
dec
loop
jp
mov
outsb
out
lcall
movsl
inc
inc
outsl
jne
fxch
sub
sbb
dec
addl
jp
dec
es
andb
insb
lods
clc
in
data16
stos
bnd
lcall
fxch
and
pop
jle
mov
lcall
stos
nop
and
mov
mov
mov
mov
loop
dec
jle
dec
mov
add
hlt
call
sbb
inc
out
adc
push
hlt
add
scas
xor
cmp
scas
shlb
jno
jne
in
adc
roll
push
roll
ret
arpl
inc
sub
pop
fwait
movsb
pusha
pusha
inc
mov
dec
cmc
adc
pop
and
adc
lea
loop
sahf
sti
mov
jb
and
ret
clc
and
mov
mov
lcall
into
fimull
idivl
int3
mov
fsub
adcb
adc
sbb
hlt
lds
int
jge
mov
xor
addr16
mov
cmp
push
lods
cmovne
push
add
push
and
add
pop
pusha
cmp
lcall
jg
add
loopne
aam
outsl
mov
jno,pn
and
rcrl
cmp
pop
push
mov
cmp
xchg
call
call
or
mov
push
into
imul
out
add
les
pop
ficomps
push
stos
add
ljmp
dec
push
movsb
xchg
mov
inc
ret
cmpsb
in
out
stos
or
xchg
out
pop
xchg
mov
cmpsb
xor
xor
mov
sub
clc
ficoms
cli
rolb
in
hlt
loopne
in
cmc
test
daa
aas
adc
sub
idivb
scas
imul
mov
jns
stos
mov
cltd
bound
repz
movsb
xchg
and
jle
cltd
out
cmp
jb
test
sub
in
push
inc
pusha
insl
push
fists
loop
cltd
scas
cmp
movsb
and
pushf
data16
mov
sub
inc
aaa
push
push
out
or
add
inc
sbb
gs
popf
push
push
xor
add
and
adc
in
mov
es
out
xlat
mov
sub
mov
fldl
fcom
bnd
mov
adc
out
orb
test
fldl
xchg
mov
repz
lcall
xchg
insb
push
dec
push
in
adc
in
testl
aaa
jnp
stos
adc
loopne
fucom
fcompl
cmpsb
mov
in
fwait
std
dec
mov
sahf
cs
xchg
out
push
xchg
call
or
pop
jecxz
fsubrs
fnstcw
in
cwtl
inc
iret
jl
jne
pushf
add
adc
in
and
fstl
cmc
insl
loope
loope
sbbb
into
pusha
pop
and
mov
inc
pop
rolb
mov
inc
push
mov
das
or
adc
cmp
outsl
xchg
sub
xor
push
in
inc
push
jmp
or
in
jnp
mov
mov
adc
mov
das
cltd
rolb
imul
inc
sbb
xchg
push
xchg
mov
xor
jno
push
or
add
cmp
inc
jbe
jno
or
sbb
jge
das
sahf
mov
xor
mov
pop
shll
rcr
fistl
movsb
pop
adc
and
cwtl
clc
push
sub
test
repz
arpl
fiaddl
stos
in
aaa
arpl
mov
inc
sub
dec
push
inc
push
and
insb
adc
push
cmpsb
subl
mov
aad
mov
jae
dec
lock
ficompl
shrl
push
adc
mov
je
mov
into
lret
hlt
sub
xchg
bound
or
jge
jo
insb
lret
jecxz
ds
mov
xchg
mov
xchg
xchg
enter
mul
iret
fyl2x
repz
js
clc
enter
subl
jecxz
cmp
pushf
push
scas
dec
jae
les
adc
ret
cwtl
ja
imul
lahf
das
sbb
mov
fists
fwait
hlt
ljmp
add
rcll
stos
mov
mov
lcall
adc
push
cmpsl
or
sub
lret
sub
xchg
push
add
aad
dec
mov
ret
or
xor
rolb
clc
nop
loopne
adcl
out
mov
pop
sbb
inc
xchg
jns
insb
or
fisubrs
or
sahf
push
stos
arpl
rolb
sub
fadds
mov
test
lea
dec
aaa
xor
rorl
or
int3
jmp
add
inc
jmp
push
push
jnp
xor
je
repnz
dec
addb
shrb
mov
out
imul
in
push
pusha
cmp
xor
push
push
rcrb
and
cmp
aas
lret
cwtl
inc
mov
popa
pushf
fld
sbb
addb
stc
das
mov
test
push
mov
xchg
pop
mov
loopne
pop
and
pop
cmp
push
sbbl
insb
add
dec
mov
sbb
jge
sbb
int
enter
xchg
or
negl
ret
pop
icebp
ljmp
push
clc
sub
jge
or
pusha
loop
lret
mov
rcrl
mov
out
cmp
in
movsb
stos
ljmp
sarl
arpl
or
or
mov
add
out
pop
mov
rolb
mov
loop
sub
repz
cmp
mov
int3
or
mov
xor
pop
xor
push
std
shrb
dec
push
jbe
push
sub
into
insb
and
stc
or
mov
in
sub
sub
jge
loop
call
aaa
push
xchg
cmpsb
mov
mov
cmp
cld
xorb
jle
icebp
bound
test
xor
push
jg
ret
fbld
aaa
orl
push
or
clc
cld
adcb
pop
sbb
dec
popf
mov
xchg
or
imul
mov
fs
xor
int3
mov
cmp
adc
in
stc
pop
aaa
and
add
xchg
sahf
mov
jle
mov
sarb
pop
xor
mov
into
xor
or
xchg
sub
bound
mov
in
pop
enter
or
jbe
push
addr16
add
jbe
dec
or
leave
cmpsl
xchg
daa
or
sti
stos
fstps
pop
xchg
xlat
fsubs
mov
clc
lods
or
hlt
xor
movsl
mov
cld
scas
jbe
rorb
mov
dec
dec
push
push
push
or
cmp
and
insl
push
push
push
test
lahf
xchg
sbb
pop
fisubl
or
mov
out
fadds
in
mov
pop
lret
mov
lds
shr
outsb
cltd
fsubp
aaa
dec
stc
sbb
fstl
cmp
add
dec
and
pop
dec
mov
adc
push
xchg
mov
add
cmp
lret
push
call
add
cmp
outsb
mov
push
push
clc
push
ja
outsl
mov
sub
decl
sbb
test
fdivrl
jmp
add
xchg
ror
pop
loope
mov
fiaddl
cli
cs
lock
xchg
in
sub
adc
ficoms
mov
inc
aam
data16
mov
sbb
push
jno,pn
ret
clc
test
sub
adc
imull
filds
xchg
mov
xchg
lret
push
fs
push
call
sbb
aaa
mov
jg
fnsave
cmp
add
jle
xchg
adc
dec
outsb
jnp
xor
aaa
mov
xor
xchg
fisttpll
inc
aam
or
cmp
cmp
inc
ds
inc
cltd
cli
scas
jp
mov
sahf
test
in
lcall
or
sub
mov
fistps
test
mov
xchg
repnz
push
bound
outsb
xchg
daa
mov
fldt
iret
cmp
mov
not
dec
jg
sti
insl
fwait
sbb
lret
jl
pop
pop
aaa
mov
pop
xor
shrl
add
aaa
mov
rorb
dec
ret
es
mov
stos
add
popf
inc
inc
sub
or
popa
pop
repz
mov
fiadds
cmp
sub
ficompl
inc
jmp
scas
jnp
or
cmp
or
mov
xchg
pop
mov
xor
jae
jmp
ljmp
sub
jmp
out
xchg
mov
notl
dec
out
test
scas
mov
cmp
and
in
aad
pop
sahf
sub
ja
loop
movsl
cwtl
jg
sbb
pusha
jge
and
or
les
cwtl
lret
int
and
and
pop
cmp
inc
pop
inc
dec
push
xchg
cwtl
jnp
mov
fists
pushf
stos
fstps
insl
mov
clc
ret
pusha
rcll
inc
jl
stc
lock
fbld
dec
lret
loop
inc
xchg
leave
or
dec
push
or
lcall
sub
stos
fidivl
loopne,pn
les
inc
pushf
outsl
or
jmp
int
inc
jmp
enter
inc
mov
in
push
xorb
xor
data16
pop
insb
pop
pop
sti
mov
lea
pop
pop
jecxz
into
in
out
rorb
and
in
xor
dec
pandn
push
in
daa
fsubrl
sti
imul
aaa
mov
cs
cmpsb
ja
adc
sbb
jmp
les
sbb
flds
add
mov
jg
mov
mov
mov
sbb
adc
ljmp
les
push
ffree
imul
sahf
add
ljmp
sbb
aaa
dec
loopne
add
inc
cli
mov
jmp
inc
jno
jnp
movsl
cli
scas
add
cmp
add
mov
addr16
xchg
jmp
sbb
fbstp
dec
cmc
idivl
and
adc
in
push
loopne
and
mov
mov
cmp
jne
enter
push
mov
popa
xor
cmp
insl
push
mov
fwait
sub
test
adc
sub
xor
push
int
mov
shll
lock
roll
jns
jns
out
insl
or
dec
push
icebp
cmp
jne
popa
jmp
sbb
pusha
mov
sti
outsb
push
out
testl
push
xchg
inc
popf
cmc
shlb
inc
out
pop
xorl
hlt
dec
popf
pop
xlat
scas
outsl
es
cmp
or
stos
mov
add
fadds
movsb
std
lods
and
test
or
sub
mov
leave
mov
pusha
cmpsb
dec
or
push
inc
cmp
pop
and
int3
aaa
loopne
les
popa
mov
ss
cmp
gs
wrmsr
mov
cmpsl
mov
into
jle
mov
mov
or
lcall
test
cmp
dec
fildll
out
push
jnp
testl
mov
imul
or
mov
adc
inc
mov
cmp
add
adc
xchg
xchg
mov
pushf
inc
leave
and
hlt
ljmp
mov
test
popa
jns
dec
cld
cmpsb
addl
fcmovnb
es
push
jnp
and
negb
jnp
dec
sub
jbe
push
inc
mov
jp
jmp
and
jnp
xor
and
std
fisubrl
and
repz
sti
enter
mov
jb
fcmovne
fstps
mov
out
scas
loop
ret
dec
mov
in
loopne
inc
cmc
dec
cltd
or
jg
lahf
push
int
jo
fsubr
test
stos
xchg
lock
xorb
push
cmp
les
push
jg
lods
adc
mov
insl
les
fsubl
push
add
xor
movsb
stc
leave
arpl
cmp
lea
xchg
inc
lods
icebp
fsubrl
or
mov
sbb
ret
ret
push
fwait
outsb
add
adc
stos
ljmp
push
cmp
or
inc
scas
mov
xor
mov
inc
dec
sub
inc
lods
mov
push
cld
mov
pop
decb
rolb
inc
iret
imul
xor
hlt
inc
mov
add
push
sahf
ret
pop
adc
jp
lret
push
test
jbe
addr16
les
mov
ret
jo
fbstp
xor
fwait
enter
adc
adc
sub
cmp
adc
and
lea
call
imull
insb
into
xchg
jmp
nop
inc
not
inc
xchg
add
sub
test
imul
mov
cld
jne
mov
jmp
dec
xor
push
pop
lea
pushf
idivb
mov
adc
bound
leave
sahf
dec
bswap
nop
popf
test
xor
push
sub
xchg
add
dec
fbstp
mov
pusha
je
dec
sbb
lret
loopne
insl
movsb
sarl
flds
std
sub
jecxz
fnstcw
push
lcall
inc
or
inc
mov
lock
add
outsb
imul
je
sti
jecxz
test
ret
in
push
mov
sub
loope
aam
pop
fdivp
pop
xlat
lock
sub
cmp
mov
xor
idivl
cmp
inc
mov
pop
cmpsb
jne
cmp
enter
jmp
divl
sti
fdivp
jle
shrl
lods
sti
xchg
mov
sub
lret
mov
enter
ret
mov
pop
test
cld
nop
ljmp
xor
fimuls
mov
dec
dec
ficompl
aam
fsubrs
push
inc
lahf
ja
lcall
int
fsub
sub
or
and
pop
xchg
stos
push
mov
scas
pop
mov
repz
sub
jp
cmc
jne
test
dec
loope
sti
xor
icebp
push
dec
inc
lcall
mov
lret
sub
aaa
push
jge
popf
xchg
fstpl
nop
inc
pop
sub
ja
ret
hlt
jg
jne
inc
inc
xchg
stc
mov
loop
into
adc
mov
jbe
push
xchg
mov
imul
ja
mov
xor
cmpsb
sar
dec
inc
jecxz
cli
mov
bound
cmp
or
mov
and
sbb
roll
fiaddl
les
out
mov
lds
cmc
pop
add
outsb
xor
ds
test
xchg
movsl
out
mov
lds
cmc
pop
add
outsb
xor
ds
test
xchg
movsl
out
mov
lds
cmc
pop
add
outsb
xor
ds
test
xchg
movsl
out
mov
lds
xor
aam
outsb
inc
imul
rorl
int3
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
mov
mov
lea
push
movl
movb
movl
movb
movb
movb
movl
call
leave
ret
cmp
sub
sbb
or
jns
addr16
dec
mov
fucomi
leave
fsincos
fldpi
pop
sbb
or
or
jns
imul
mov
mov
jmp
jmp
mov
or
or
xchg
dec
jae
inc
mov
icebp
in
fcoms
xchg
jmp
sbb
sbb
jle
insb
imul
cwtl
lcall
daa
jmp
mov
nop
aad
cltd
popa
mov
aam
les
dec
mov
jne
push
fidivl
data16
sbb
and
add
push
fnstsw
out
push
test
es
cmp
sti
in
inc
sbb
sub
xchg
xchg
and
fs
push
push
fucompp
xor
adc
mov
cmp
scas
test
push
shlb
imul
int3
stos
mov
ljmp
sbb
notl
xchg
enter
xchg
mov
jge
je
mov
outsl
bound
jg
sbb
adc
mov
xor
stos
mov
xor
sti
leave
test
pop
or
jno
push
das
pop
and
adc
mov
iret
in
ret
xchg
je
dec
dec
imul
adc
js
adc
sti
fstpl
mov
adcb
dec
js
pop
dec
sub
imul
fwait
test
stos
stc
fucomi
lret
fsincos
leave
jmp
sbb
or
cmp
sub
imul
fwait
test
stos
stc
fucomi
lret
fsincos
leave
jmp
sbb
pop
mov
jnp
xor
pop
push
xchg
imul
inc
gs
cmpsl
adc
add
cmp
out
dec
and
xchg
enter
mov
into
cmp
icebp
push
jecxz
mov
sub
out
xchg
negl
mov
sub
jle
mov
jno
sub
sbb
loopne
mov
cmp
sbb
test
sub
pop
lea
test
rorb
pusha
out
loopne
rolb
ss
iret
jl
sbb
popf
out
jne
jge
leave
stos
rorb
inc
lret
mov
movsl
push
sub
dec
cmc
ret
cli
jmp
mov
cmc
outsl
loop
mov
mulb
mov
dec
sub
pop
or
jno
icebp
scas
adc
mov
mov
jmp
jno,pn
andb
jecxz
maskmovq
dec
cs
out
rclb
mov
outsl
in
jb
dec
mov
xor
dec
push
rcll
push
xchg
movsb
and
std
xor
sahf
lahf
or
xchg
cmp
push
xchg
adc
xchg
jbe
sbb
je
cs
cld
xchg
std
inc
sbb
add
out
and
push
cmc
rorl
jb
imul
ret
cli
sti
ret
pop
add
or
jb
iret
inc
lods
cmpsl
cmpsl
jmp
lea
lods
hlt
and
cltd
inc
mov
xchg
scas
in
xchg
mov
sahf
imul
jns
ss
push
dec
or
inc
xor
adc
cmp
sbb
fmull
lcall
xchg
outsl
xchg
iret
movsb
adc
inc
jmp
inc
jg
xchg
daa
sub
loope
xchg
sbb
hlt
inc
sub
jae
data16
fildll
mov
adc
ret
inc
popf
or
inc
pop
daa
sar
hlt
aas
dec
xchg
push
ret
dec
in
sti
fwait
adc
add
lods
sahf
push
pop
shlb
iret
or
lahf
sub
loopne
lahf
test
test
cmp
es
push
xchg
inc
std
out
cmpsl
nop
cmp
bound
sbb
lret
pop
stc
hlt
xor
shlb
ljmp
push
fadd
out
outsl
jno
ror
dec
mov
rorl
push
jo
xchg
jbe
les
xchg
shll
repz
jne
jge
jno
lds
cs
xchg
pop
loop
mov
xor
je
in
test
jae
cld
ljmp
add
ljmp
adc
xchg
outsl
jbe
cmp
mov
push
dec
sarb
gs
sbb
jno
jnp
mov
cmpsl
mov
nop
fmull
add
xor
gs
movsb
xchg
inc
push
lcall
mov
mov
pop
mov
aas
push
mov
shl
dec
sub
dec
out
outsl
inc
sub
pop
add
outsb
inc
jne
add
in
xchg
cltd
xchg
mov
sub
out
pushf
dec
test
fucomi
jo
jecxz
arpl
xor
push
and
add
xor
lret
icebp
sarl
and
test
push
out
movsb
push
pop
cmp
push
aam
fdivp
mov
fsubrs
cmp
cld
pop
jp
lock
stos
jno
xchg
pop
in
jne
iret
aam
xchg
lds
pusha
call
sub
inc
lea
pop
add
add
mov
imul
cltd
lods
sbb
ljmp
cmpsb
pop
leave
sbb
cmpsl
mov
cmova
adc
mov
and
xor
xlat
mov
push
fsubl
popf
pusha
mov
push
mov
gs
leave
xchg
pop
pusha
subl
mov
add
rclb
pop
sub
add
and
aad
in
jecxz
xchg
jg
xchg
pop
push
mov
pop
cmc
push
loopne
rolb
into
xor
aaa
in
repz
jge
mov
adc
sahf
xchg
inc
in
out
pop
push
addb
add
jg
rcrb
mov
mov
sbb
xor
decl
popa
xor
mov
dec
inc
ljmp
xchg
mov
idivb
xchg
xor
frstor
iret
jne
icebp
and
sti
pop
cmp
xchg
cmp
stc
sbb
lods
sbb
lret
pop
dec
pop
and
scas
push
mov
add
cmp
in
ficoml
dec
sbb
inc
test
cli
dec
gs
sbb
push
sbb
fs
mov
xchg
cltd
sub
std
jnp
fistl
frstor
movsb
repz
xorl
lock
pushf
adc
enter
inc
sub
jmp
jne
ja
mov
inc
xchg
sub
dec
mov
popf
xchg
mov
data16
push
jge
mov
jns
leave
push
dec
jmp
shlb
mov
mov
adc
sbb
mov
lods
xchg
push
xchg
and
mov
les
sbb
or
or
ja
aam
addr16
push
or
arpl
adc
insl
out
pushf
or
cmpsl
test
lcall
lock
repz
bnd
enter
testb
test
hlt
fistps
rcrb
rcr
movsb
adc
push
push
jno
dec
xchg
pop
mov
and
popa
mov
mov
popa
mov
xchg
xchg
and
hlt
call
stos
inc
ljmp
lock
sub
into
cmpsl
jge
cmpsl
add
hlt
adc
add
test
push
mov
call
mov
insl
sbb
bound
push
lret
in
ds
push
add
xlat
out
pop
or
scas
add
mov
xor
jns
ss
or
iret
lcall
addl
dec
xor
jns
pop
out
mov
and
ret
fiadds
jae
loopne
inc
mov
bound
pop
call
and
xchg
fadd
pop
mov
and
fistps
xor
dec
inc
ljmp
push
jbe
dec
mov
fiadds
mov
int3
inc
jecxz
dec
xor
movsb
loope
insb
jmp
aas
test
push
xchg
std
gs
imul
push
or
jbe
cli
lret
std
or
xchg
test
push
shll
pop
test
xor
dec
ficoms
xchg
pop
sbb
sarb
xchg
shll
rep
or
or
fisttpll
sub
movsb
out
inc
or
inc
aaa
dec
pop
xchg
jp
push
rol
mov
call
xor
push
and
movsb
dec
loope
sub
mov
and
fsubrs
insl
cmp
mov
mov
sub
fildll
xchg
out
cltd
inc
call
cmpsb
mov
jmp
xor
pushl
push
fwait
int3
inc
mov
dec
mov
loope
cmp
or
jns
dec
test
mov
scas
sub
pop
push
stc
fcoml
js
sbb
rclb
lcall
mov
xchg
out
jo
jmp
fldl
sub
shl
jb
lret
jnp
jne
add
push
and
andb
test
inc
incb
test
cld
pop
ja
adc
jle
cmp
lahf
in
or
decb
je
dec
push
arpl
scas
pushf
and
xrelease
call
std
shrl
inc
leavew
add
out
insl
stc
lret
push
cmp
xor
xchg
cwtl
push
xor
xor
sti
add
shll
scas
jmp
mov
je
and
sti
ljmp
mov
xchg
in
dec
movsl
push
in
scas
loopne
icebp
mov
fildll
adc
sub
stc
sbb
and
pop
fisubrs
pop
xchg
roll
lahf
int
movsb
add
insl
fs
add
ret
gs
lret
xchg
fcomp
xlat
jnp
testl
mov
cmp
adc
mov
mov
add
push
add
sbb
jp
mov
jnp
insb
fdivrp
nop
push
ja
aad
ret
fnsave
movsb
pop
iret
push
jg
dec
and
jno
jle
jne
outsl
adc
jb
movsb
insb
jb
inc
lods
orl
sbb
mov
cmpsl
mov
negb
mov
mov
in
push
mov
mov
inc
add
pushf
jg
xchg
sbb
xorl
xchg
fisubl
dec
dec
aad
je
or
imull
xor
mov
or
push
dec
and
lds
fildl
nop
push
dec
pop
loopne
movb
xchg
dec
cmp
ja
lock
cmc
xchg
lret
cwtl
call
faddl
lods
jg
and
xchg
fs
and
scas
mov
lds
outsb
jle
es
dec
dec
jp
or
mov
lahf
mov
shrl
jne
lods
mov
sbb
js
xor
scas
movsl
jnp
sbb
scas
push
clc
and
out
imul
das
lods
xchg
in
in
push
insb
test
mov
sub
mov
inc
test
push
mov
adc
mov
movsb
push
mov
js
jo
ja
or
ljmp
enter
sbb
inc
mov
inc
cmp
arpl
add
cmp
popa
cmp
je
sub
rorl
lahf
js
jecxz
lea
enter
sub
mov
mov
cli
push
sahf
mov
fcomip
lret
test
xor
sub
stc
adc
cmp
jne
scas
xchg
lcall
inc
dec
xchg
lret
adc
or
repnz
in
mov
testl
sbb
pop
popf
add
cmp
stc
gs
mov
stos
sbb
or
loop
shr
ss
inc
aas
lret
mov
addr16
xchg
stos
scas
jbe
add
mov
push
sbb
cmp
push
into
arpl
xchg
cs
or
sub
inc
test
nop
leave
movsb
pop
push
sbb
ret
int3
loope
jmp
pop
mov
ret
mov
mov
imulb
nop
inc
flds
aad
jmp
mov
pop
or
xchg
mov
jno
andb
fnsave
bnd
fidivl
xchg
xor
fwait
js
jo
sub
mov
cmp
inc
dec
ljmp
jmp
movsb
lcall
imul
push
xor
cld
sub
and
xor
push
cmp
gs
dec
pop
shll
cmpl
dec
xor
pop
icebp
jnp
jo
ja
cmpsb
in
cmpsl
mov
jns
adc
in
test
add
loop
in
pushf
mov
adc
mov
mov
xor
lds
lods
sahf
jp
jo
sub
adc
push
mov
mov
addl
push
test
push
push
cmp
cmpsl
imul
popa
pause
leave
mov
mov
movsl
jno
mov
aaa
cmp
ljmp
andl
inc
jno
xor
in
inc
xor
loop
scas
repz
push
or
ret
push
mov
jae
pop
pop
dec
repnz
fpatan
xor
xchg
pop
cld
and
push
pop
dec
rorb
or
cmp
or
mov
mov
addl
test
inc
and
pop
add
dec
sub
aad
int3
cmp
xlat
jp
xchg
leave
ret
push
xchg
and
cmp
ficompl
add
jnp
sbb
ds
xchg
pop
clc
jno
das
test
pop
inc
clc
jle
mov
jl
ds
insl
dec
pop
sbb
pop
mov
and
mov
pop
test
inc
daa
mov
nop
loope
and
dec
sti
pop
xor
popw
int
test
add
rcll
lcall
pushf
repz
hlt
mov
xchg
sbb
mov
and
repnz
ret
push
pop
in
cli
idiv
lds
mulb
xchg
in
pop
adc
repnz
gs
sub
push
jno
fsubrs
cli
or
ja
sbb
shl
push
jmp
lods
jns
sub
aad
stc
push
or
xchg
jns
mov
add
roll
stos
mov
mov
scas
mov
or
enter
mov
repz
xor
cmpsl
or
inc
sbb
lods
jno
cmpsb
lcall
iret
and
bnd
ja
or
add
cwtl
nop
pop
xlat
ret
mov
int3
xchg
mov
pop
mov
dec
lahf
imul
and
pop
cmpsl
test
pop
and
push
pop
mov
maxps
inc
and
adc
insb
or
fucomip
mov
add
and
dec
pop
loop
jno
shrb
ret
fmuls
cli
enter
mov
clc
dec
mov
pop
mov
pop
cmp
xchg
sbb
lahf
xor
lret
inc
ucomiss
outsb
sti
inc
add
add
xlat
fisubrs
insl
mov
push
lret
mov
dec
aas
icebp
mov
sub
fxch
mov
sarb
xor
mov
and
xchg
xchg
sub
jae
hlt
out
xbegin
les
sbb
aam
push
loop
adc
cmp
cmpsb
sti
fildll
sbbl
pop
xor
lret
loop
cmp
or
ds
xchg
and
aam
or
outsl
sub
jecxz
cmp
add
push
inc
scas
rcrb
xchg
xor
fnstenv
lds
pop
fimuls
inc
arpl
pop
fcomip
out
jb
lea
sub
mov
xor
int
bts
stos
inc
scas
popa
mov
sbb
cltd
sarb
mov
sub
stos
std
in
test
pushf
lods
daa
sbb
popa
lods
sbbl
not
push
mov
mov
ja
movsl
mov
jns
mov
ljmp
arpl
adc
xor
jecxz,pn
fldl
push
mov
lea
gs
mov
jmp
test
in
bound
adc
pop
imul
push
xor
movsl
clc
in
icebp
add
aad
sahf
neg
mov
les
repz
or
imul
dec
out
mov
sbb
xchg
or
pop
adc
sub
xor
mov
pop
dec
int3
rcll
mov
sbb
int3
pop
test
shlb
repnz
sbb
xor
or
test
add
push
jno
fsts
and
fisubs
xor
xchg
in
push
insb
push
push
jmp
xor
push
lods
push
pop
xor
add
xchg
sub
loopne
xchg
cmp
and
push
nopl
inc
push
add
pop
clc
enter
decb
add
es
xchg
dec
sbb
cmp
fsts
sbb
or
jmp
test
xchg
sbb
add
int
std
call
out
inc
aaa
mov
daa
adc
sti
pop
bound
adc
imul
bound
xor
int
imul
test
xchg
jo
js
pop
ljmp
ss
pop
inc
test
dec
dec
xchg
into
xchg
or
into
jmp
mov
bound
idiv
pop
push
add
adc
je
in
xor
out
xchg
test
or
dec
pushf
call
repz
sbb
icebp
test
loopne
loope
cltd
jne
fdivrl
into
pop
fists
jb
out
and
inc
in
mov
add
add
and
enter
sub
cmpsl
pop
mov
cli
dec
xlat
jp
sub
fwait
sub
mov
adc
in
in
xchg
mov
push
pop
and
xchg
or
inc
push
xor
inc
cmp
mov
in
and
lcall
loope
mov
inc
imul
sbb
sbb
xchg
or
cmp
test
ljmp
jmp
push
jb
ss
sbb
into
mov
sub
jne
jmp
fsubr
adc
lcall
cmp
es
xor
jb
cmp
int3
adc
lahf
scas
stos
push
jmp
xchg
ds
addb
mov
aad
jnp
shrd
fbld
jne
add
orb
fucompp
dec
sub
mov
fcompl
jnp
and
cmp
inc
fwait
sbb
adc
fwait
mov
into
lahf
mov
stc
jmp
xchg
inc
and
xchg
sbb
dec
cmp
scas
aaa
popa
jb
add
cmpsl
mov
jl
jne
outsl
jl
in
xorb
fidivs
aam
cmp
repnz
mov
fst
outsb
add
fimuls
or
or
les
add
ds
outsb
ret
pop
pop
dec
dec
jbe
adc
movsl
fsubrl
jecxz
jne
and
and
inc
mov
test
scas
sahf
enter
cmp
popf
adc
pop
adc
cmp
xor
sub
sbb
push
cmp
xor
dec
pop
sbb
je
test
or
or
int3
mov
bound
cmp
outsb
cli
mov
push
mov
add
rcrb
shlb
ret
sub
push
pop
xchg
adc
sub
shlb
loopne
sbb
cmp
rorb
dec
ja
leave
jo
mov
push
xor
xchg
sub
out
rol
adc
sub
jge
mov
in
lea
pop
sub
into
jle
movsl
in
pop
aas
cmp
jbe
sub
dec
mov
mov
addr16
mov
xor
lahf
nop
mov
mov
xchg
adc
push
into
inc
sti
enter
dec
sarb
rorb
inc
enter
scas
xor
pop
fcoml
mov
sahf
arpl
enter
xor
outsl
cwtl
ret
xchg
mov
mulb
pushf
mov
cmp
mov
and
mov
sbb
add
aas
sbb
out
sbb
mov
push
js
jmp
ljmp
cmp
push
aad
dec
scas
and
ret
sub
push
shlb
cmpsb
lods
sbb
pmovmskb
pop
lret
and
cmpsb
cmp
and
dec
jo
lcall
rorl
cltd
rclb
cmc
xchg
sub
inc
fxam
pop
or
mov
sbb
add
xchg
push
push
inc
cmp
push
rep
inc
or
sub
cmp
test
nop
div
mov
sti
shl
and
rdtsc
rcll
mov
jbe
push
sbb
insb
add
fdivrs
mov
insl
mov
popa
outsl
sahf
sti
xchg
sbb
xchg
pop
dec
add
lods
arpl
mov
fistpl
and
imul
jecxz
jnp
xchg
fnstenv
subb
mov
test
repnz
sbb
idivl
in
nop
jmp
aaa
cmp
cs
add
int3
xchg
popa
jp
mov
fbld
fildl
fcmovnu
jl
jo
push
xchg
movsl
xchg
mov
int3
jbe
mov
fildl
repz
dec
sbb
fwait
loopne
int
or
jns
add
jnp
lcall
data16
leave
mov
or
xor
fwait
cwtl
mov
fmuls
stc
ficoms
cmp
bound
lock
mov
xor
repz
sub
sbb
das
sti
push
nop
imull
cmpsl
push
pop
mov
scas
std
sbb
cmp
movaps
pop
imul
mov
aaa
insb
and
fisubrl
cwtl
or
shrb
jb
mov
xchg
push
push
push
mov
jae
adc
inc
loope
push
in
insb
adc
pop
pop
js
out
mov
xor
les
fildl
shlb
mov
data16
mov
fildl
out
out
cmp
jecxz
cmpb
aas
inc
std
and
inc
cli
rcrl
shlb
pop
sti
sbb
clc
sub
xorb
icebp
jno
repz
and
mov
inc
fiaddl
lcall
loop
sti
push
mov
lea
push
cmp
popa
ficoml
sbb
dec
mov
mov
mov
push
fidivrl
and
in
inc
sub
cli
adc
scas
ret
cmp
sub
iret
cmp
lods
dec
add
dec
jo
xor
jmp
inc
sbb
pop
fcompl
adcl
iret
dec
sti
cmp
add
into
in
sarl
outsb
jbe
lea
lea
dec
fs
dec
add
outsb
push
enter
stos
dec
out
jbe
mov
push
clc
mov
push
jbe
fbstp
scas
test
scas
or
xchg
inc
repnz
outsl
sbb
int
mov
xorb
jge
adc
mov
mov
lods
sbbb
lods
cmp
daa
mov
mov
imul
stos
jecxz
dec
jle
cs
dec
mov
scas
add
push
nop
sub
sbb
xorl
add
mov
fcoms
cwtl
cmc
ljmp
push
shrl
nop
sub
ds
arpl
loopne
sub
mov
xsavec
or
rorl
cmp
mov
add
sbb
fsubrl
outsb
test
or
les
icebp
pop
outsl
aas
call
mov
movsb
movsl
divl
mov
clc
les
mov
xchg
sub
les
mov
dec
or
cmp
flds
or
outsl
adc
lods
ja
cmpsb
popa
cmp
pop
xchg
pop
jnp
mov
xor
push
dec
out
movsl
adc
and
xchg
adc
xchg
adc
or
test
lds
push
mov
inc
cs
and
xchg
movsb
add
mov
mov
sti
push
pop
repz
arpl
push
fisubrs
mov
or
add
cmp
xchg
ret
mov
mov
mov
push
adc
sub
adc
into
std
cwtl
and
sbb
and
pop
enter
mov
cwtl
fidivl
cmpsb
xchg
add
mov
scas
xor
call
call
mov
inc
lret
sbb
or
fs
in
das
pop
cwtl
jle
arpl
loopne
jae
pop
xorb
pminub
mov
inc
mov
fwait
into
jns
mov
or
jle
sub
rcrb
cmp
jb
jp
shll
sub
pushf
mov
cli
push
ds
je
shlb
sbb
test
xor
popa
scas
lret
shll
jp
xchg
cmp
in
ljmp
add
popa
lea
xchg
push
cmp
das
cmp
pop
in
cmp
pop
xor
mov
pop
fwait
push
pop
scas
aaa
jp
add
lock
imul
leave
push
mov
sbb
test
mov
cwtl
icebp
add
in
lds
sub
push
add
inc
dec
push
imul
jb
in
jg
pop
test
shll
mov
ds
cld
inc
rcrl
add
mov
outsl
nop
mov
pop
push
or
jns
imul
fwait
test
stos
stc
fucomi
lret
fsincos
leave
jmp
sbb
or
cmp
sub
imul
fwait
test
stos
stc
fucomi
lret
fsincos
leave
jmp
sbb
inc
jns
or
jmp
jnp
imul
mov
and
sub
cmp
sub
jns
pop
sti
leave
imul
mov
mov
xor
add
adc
int3
int3
int3
int3
shlb
mov
nop
lret
rorl
sbb
sub
sbb
dec
arpl
jae
inc
jp
popf
mov
mov
repz
xor
call
jae
inc
jp
xchg
mov
mov
repz
in
rorl
and
adc
dec
jb
aaa
pop
and
sub
lcall
ret
es
dec
add
shl
jecxz
imul
cmpsb
arpl
jne
mov
pop
cmp
jecxz
jbe
lret
xor
ret
push
in
aad
aaa
ja
arpl
add
mov
js
test
xor
xchg
jne
mov
mov
pop
jae
mov
xchg
dec
stos
xor
out
inc
iret
repnz
jb
sub
or
push
gs
ror
push
lcall
repz
in
aas
cld
cmp
loopne
pop
jae
inc
subb
xchg
aaa
shll
push
cmp
lret
rcll
aad
cmp
mov
and
mov
lods
xchg
shl
ret
jecxz
adc
add
xor
and
push
arpl
push
arpl
stc
cmpsl
push
iret
sbb
scas
xchg
xchg
sbb
pop
push
and
cmp
sbb
iret
out
xchg
mov
stos
mov
dec
outsl
push
dec
jbe
or
jp
jecxz
test
iret
icebp
mov
repz
xor
add
adc
pop
jae
inc
jp
mov
mov
repz
xor
add
adc
pop
jae
inc
jp
mov
rclb
xchg
jecxz
add
fwait
inc
cmpsb
data16
sbb
fldenv
mov
rcll
into
dec
xchg
xor
push
pusha
nop
jnp
pop
cmp
shlb
icebp
push
adc
movsl
fbstp
lret
push
mov
pop
jae
push
mov
push
sbb
push
insb
fisttpl
in
jl
stos
daa
pop
arpl
cmp
mov
pop
fmul
subb
pop
add
jecxz
cmp
add
push
andb
jns
jge
cmp
cmc
inc
stos
push
mov
out
push
shr
xor
hlt
ds
adc
pusha
hlt
jnp
insl
xchg
ja
imul
mov
pop
and
adc
add
or
pop
and
xor
dec
cmp
jbe
xchg
xorl
push
sbb
dec
xchg
fsub
jno
subb
xor
sub
xlat
xchg
popf
xchg
sbbl
inc
pop
testl
xor
sub
popf
mov
push
xor
mov
xchg
cmpsb
push
sub
imul
sbb
inc
cmpsl
push
sbbb
mov
inc
cld
add
jl
xor
push
icebp
mov
pop
jg
pop
push
inc
mov
jle
jne
stc
mov
dec
or
fistps
adcl
sbb
cld
ss
daa
arpl
or
add
lret
lods
adc
inc
lcall
inc
pop
mov
dec
pop
repnz
mov
push
or
adcl
cmp
jae
in
lcall
imul
fisubl
or
mov
fisttpl
leave
lret
push
add
dec
inc
jg
clc
jg
mov
in
dec
or
mov
into
stos
shll
mov
lds
mov
cli
push
push
sti
pop
not
cmp
sahf
xchg
inc
inc
pop
pop
fstpl
data16
gs
into
into
rcl
insl
push
sbbb
mov
test
repnz
test
aad
aaa
push
rcr
pop
lods
mov
jmp
mov
push
cmpsb
lret
mov
scas
mov
adc
jp
cmpsl
fildll
jae
inc
imulb
cltd
push
stc
mov
or
es
bound
daa
int3
sti
ret
xor
push
xchg
cmpsl
jno
cltd
insb
mov
inc
push
pop
mov
aad
and
std
and
outsl
insl
inc
mov
sti
cli
xchg
push
into
cs
repz
das
cmp
jnp
pusha
xchg
ss
out
mov
ds
pushf
pushf
insl
pop
dec
jg
xlat
in
cli
leave
mov
shlb
mov
add
movsl
cmp
sub
push
cmc
add
xor
sbb
and
xchg
adcb
or
and
or
xor
sbb
dec
jae
jo
mov
pop
fmull
mov
loopne
insl
sub
lock
fcmovnu
dec
and
scas
lahf
iret
aad
inc
shlb
adc
jns
test
sub
inc
xor
movsl
xor
jmp
or
mov
jb
or
fnstsw
dec
mov
nop
sbb
add
adc
fs
lea
mov
hlt
adc
and
and
xchg
loopne
inc
iret
sahf
add
dec
movsb
out
lods
adc
add
lahf
mov
jne
into
add
nop
inc
xor
jb
repz
out
inc
out
aaa
xchg
gs
icebp
aam
mov
sbb
scas
sbbb
filds
inc
std
inc
cmp
mov
dec
lret
rcll
lret
cltd
out
add
fwait
cltd
xchg
push
jl
jnp
scas
dec
movsb
int
leave
lgs
gs
int3
out
test
int
rclb
mov
add
adc
mov
or
aam
test
shlb
mov
sub
push
lods
and
fcoml
in
mov
add
sahf
orl
mov
sbb
sbb
fmull
add
adc
clc
xor
ss
jne
test
and
sbb
int3
je
movsb
in
mov
cwtl
leave
popa
idivl
fisubrs
ds
dec
and
icebp
sub
add
add
outsb
push
lcall
lret
sbb
push
sahf
bndstx
push
sub
iret
in
rcrb
pop
stos
mov
jbe
mov
cmp
loop
sub
mov
adc
jae
sub
outsl
stos
inc
mov
mov
mov
dec
mov
dec
nop
pop
out
cmpsl
orb
loop
leave
nop
mov
pusha
pop
int
or
push
les
roll
rcll
inc
stc
test
mov
xor
xor
jmp
shl
push
jns
inc
mov
or
testl
mov
inc
add
imul
xor
leave
jle
cmp
shlb
dec
out
les
stos
cmc
ljmp
xor
inc
or
lds
xchg
mulb
iret
fwait
mov
call
lods
mov
sti
fucompp
or
mov
and
call
lods
or
sbb
and
xchg
int3
pop
imul
test
mov
inc
add
add
jl
and
sti
imul
rorb
adc
test
test
test
fdivp
out
xchg
loope
adcb
and
pop
insl
jno
data16
jp
fmull
sbb
outsl
imul
xor
mov
divl
test
fiaddl
add
fnsave
sub
imul
xchg
rclb
dec
mov
push
movsl
inc
sbb
repz
and
inc
imul
cwtl
lret
inc
and
push
jmp
mov
dec
add
faddp
call
mov
out
ret
dec
mov
pop
cmp
sti
sbb
shl
mov
push
xor
mov
or
jmp
data16
adc
out
ffree
inc
jae
inc
sbb
roll
lods
jns
inc
xchg
and
loope
cmc
aas
ljmp
fdivl
lahf
out
scas
pop
xor
mov
loopne
mov
inc
adc
xor
sahf
movsb
out
ret
pushf
in
push
shr
mov
mov
movb
fisttpll
fadds
jb
xchg
push
dec
popf
dec
bound
out
aam
add
test
push
jp
push
inc
push
inc
jp
xorb
adc
and
jmp
enter
lcall
rcrl
mov
dec
iret
and
or
push
or
push
pop
pop
std
pop
mov
fwait
loopne
pop
in
in
js
cmp
dec
xchg
outsb
fldt
shlb
loope
ret
xchg
mov
pop
inc
adc
or
xor
and
gs
mov
inc
ficompl
sub
ret
scas
cmp
daa
lahf
pop
mov
lea
mov
cmp
mov
inc
fs
in
push
jne
int3
mov
dec
adc
push
mov
or
insb
lods
push
pushf
or
xor
mov
shlb
mov
adc
add
push
cmp
call
jae
jmp
fsubs
es
and
shlb
ud1
pop
sub
dec
dec
cli
mov
mov
xchg
fisubl
ds
fs
adc
mov
imul
insl
mov
sub
das
sbb
popf
inc
test
mov
fstpl
orl
das
data16
inc
insb
jnp
or
xchg
cmp
movsb
xchg
pop
aam
shrb
xor
adc
mov
xchg
jae
in
cmp
cmp
mov
insb
mov
popf
rcrb
mov
mov
leave
fcmovnu
pop
cmp
mov
and
mov
ret
movsl
fistps
mov
push
jne
test
dec
sbb
gs
imulb
jae
lds
lret
mov
insb
inc
mov
orb
ret
mov
mov
divl
ja
rcrb
lret
lret
mov
cmp
pop
imul
test
mov
jle
adc
push
inc
and
dec
into
test
sub
stos
pop
movsl
int3
and
push
mov
pop
in
mul
imul
mov
pop
mov
pop
fistpl
and
int3
xor
gs
adc
inc
mov
sbb
dec
je
popf
push
pop
xchg
add
sbb
repz
mov
add
enter
in
lock
mov
sbb
movsb
adc
pop
shrl
xchg
push
adc
adc
shlb
inc
stc
jg
test
stc
adc
pop
and
ret
ret
pop
or
sub
loop
pop
cmp
sbb
sbbb
sub
sbb
iret
mov
aam
leave
push
pop
das
insb
iret
and
out
out
mov
out
mov
rorl
out
fmuls
pushw
mov
in
icebp
inc
fs
fwait
cli
pop
enter
je
adc
mov
cld
sbb
mov
push
imul
or
cmpxchg
sub
sub
in
cmc
pushf
jp
cmp
insb
movsl
mov
mov
jmp
jg
lods
std
call
pop
xor
adc
pop
jg
add
sub
out
xchg
mov
js
xor
movl
and
push
pop
jle
ljmp
mov
inc
rolb
fucom
jo
mov
mov
mov
xlat
and
inc
sti
mov
xchg
pop
jbe
fidivl
aad
sbb
xor
mov
sbb
hlt
push
test
sub
mov
ret
inc
inc
push
add
xchg
add
jp
repnz
xor
inc
jmp
mov
jno
push
lahf
jnp
and
dec
push
cmp
xchg
mull
pop
mov
xchg
lahf
mov
int3
mov
adc
ret
push
push
xlat
outsb
lods
push
pop
adc
pop
popf
sbb
lcall
mov
ja
out
out
rcrb
inc
subl
mov
js
popa
pop
sbb
and
jmp
xlat
pop
int
sbb
in
mov
mov
cmp
or
scas
and
call
sti
cmp
adc
xchg
adc
xor
pop
out
jmp
cmp
push
aas
push
push
sub
mov
mov
pop
push
inc
xor
jmp
in
nop
popw
cli
outsb
jb
notl
adc
lock
mulb
in
adc
lea
stos
insb
imul
add
imul
cmp
xchg
add
test
dec
jecxz
push
xor
adc
jecxz
int3
call
icebp
inc
push
enter
or
in
loopne
push
shrb
movsl
mov
fwait
pusha
push
leave
mov
fninit
out
mov
jne
cmp
scas
ds
rdmsr
or
js
stc
mov
ljmpw
mov
testl
xchg
mov
cmp
imul
in
adc
add
mov
cmp
xchg
lret
or
gs
mov
int
nop
dec
and
or
push
pushf
jg
xchg
jl
pop
cmc
jge
je
aaa
subl
fisttps
jmp
add
sbb
fidivrs
dec
inc
sbb
adc
push
popa
les
aad
test
cmpsb
lods
mov
push
mov
push
fs
mov
cmp
jbe
enter
cmp
into
cmc
dec
xchg
xchg
fwait
cld
jno
cltd
nop
and
ret
int3
bound
add
jge
fadds
adc
fimull
call
das
scas
mov
push
cltd
pusha
das
mov
jmp
jae
pop
mov
inc
or
loope
sub
push
push
les
pop
in
aam
leave
cmp
sbb
shrl
jae
clc
pop
insl
stos
xchg
mov
popf
fwait
adcb
scas
add
jno
rorb
ja
les
scas
jp
pop
mov
push
test
stos
mov
in
push
add
cli
popa
lahf
pop
mov
mov
and
mov
lret
push
inc
or
jmp
add
mov
cmp
sar
ud1
popf
shr
mov
pop
push
repnz
mov
jecxz
mov
ljmp
out
dec
hlt
test
or
cmpsb
loopne
pop
testl
int3
sbb
adc
std
aam
loop
test
movsl
cwtl
and
int3
push
leavew
cmp
ret
mov
pop
inc
mov
jne
and
std
shr
movsb
divb
lahf
ja
xlat
call
xlat
call
pop
cmc
clc
mov
cmp
leave
cmp
adc
pop
pop
cwtl
push
mov
mov
pop
aad
gs
out
cwtl
xor
sbb
stos
sbb
inc
dec
xor
or
aam
pop
iret
test
imul
int3
setno
cmp
push
ja
mov
dec
shlb
mov
les
cmp
or
repnz
out
mov
imul
xchg
jbe
jae
mov
jg
bound
repnz
cmpb
xchg
jge
dec
ds
push
je
insb
dec
push
ficomps
mov
fsubrs
mov
lret
mov
sub
cs
or
pop
outsb
push
xchg
sub
push
rcll
sarb
jle
in
xchg
lods
push
dec
dec
out
xchg
cvtdq2ps
outsb
mov
xchg
mov
mov
incb
dec
mov
lods
popf
insl
insl
ljmp
inc
stos
leave
mov
mov
out
xchg
out
icebp
movsb
sahf
mov
sub
out
mov
jae
or
mov
mov
jle
lds
or
shlb
jg
pop
fcmovbe
push
mov
cmp
stc
lods
subl
and
sub
cs
mov
cmpsl
ja
push
repz
aad
fdivl
scas
or
mov
in
push
jno
xchg
add
xchg
xchg
xor
int
or
adc
mov
ficompl
jle
mov
andb
and
dec
roll
mov
insb
inc
mov
arpl
leave
out
cmp
aad
rorl
daa
add
mov
loope
xchg
mov
or
or
pop
or
insl
fcmovne
pop
nop
mov
xor
outsb
insb
xchg
loop
or
int
or
xchg
and
test
mul
add
mov
jns
jae
fidivrs
test
test
cmp
jb
pop
insl
pop
popa
enter
jp
and
daa
push
mov
scas
movsl
test
into
sahf
sbb
mov
dec
or
and
les
mov
scas
out
jne
lock
roll
stc
xor
mov
lds
insb
adc
xor
mov
in
adc
push
or
mov
mov
cli
mov
gs
inc
shrb
and
inc
mov
fcoml
fidivs
loopne
or
movsb
movswl
dec
dec
xchg
out
mov
push
or
dec
jno
int3
test
and
mov
jecxz
das
jl
repz
xor
cmc
rorl
or
insb
aas
out
daa
mov
imul
sbb
jp
inc
sbb
shll
sub
dec
inc
sub
hlt
imul
mov
or
pop
call
test
rcr
repz
dec
insl
or
andl
imul
repnz
out
adc
cmp
xchg
dec
xchg
loope
xor
add
sbb
shlb
mov
jmp
mov
dec
inc
lahf
ret
cmp
jb
hlt
fsubs
jecxz
aaa
lahf
push
cli
push
mov
ja
fisttpll
xchg
rcrl
bound
add
mov
or
jno
ret
loop
pop
dec
insl
cmpsb
fsubrl
and
cld
lods
inc
cmc
mov
mov
ud0
insl
scas
sti
ljmp
mov
inc
fstl
pop
out
sbb
push
ja
cmp
in
andb
into
das
out
enterw
mov
sbb
imul
mov
test
lds
cmp
gs
icebp
lods
ficomps
imul
mov
call
mov
cs
test
cmp
out
xchg
push
xor
push
nop
cmp
lock
xchg
xchg
mov
into
pop
mov
aad
ss
divl
push
and
mov
pop
cltd
jp
test
ret
outsb
rclb
mov
sbb
sub
imul
fisubs
repz
and
jg
setne
fisttpll
iret
cmp
enter
push
pop
scas
cmpsl
mov
xor
fimull
mov
fldt
outsl
out
std
cs
pop
mov
pushf
jnp
add
push
xor
pop
daa
dec
ret
sub
jo
sbb
sahf
push
fstpl
clc
pop
ja
jno
jne
aam
in
mov
jno
mov
mov
daa
adc
out
jmp
mov
mov
push
aad
cmpsb
push
jns
pop
mov
loop
fdivl
sub
sbb
std
pusha
pop
imul
and
das
arpl
dec
xchg
push
lret
xorl
xchg
push
jne
into
outsl
sbb
pop
sbb
addr16
sbb
adc
push
dec
sub
and
out
add
or
outsl
cltd
xlat
xor
pop
push
sti
push
lret
arpl
popa
sbb
jge
cmpsl
jmp
add
add
sub
xor
push
sub
adc
jmp
cltd
xchg
inc
mov
fwait
xchg
cmp
mov
aam
mov
add
adc
mov
add
outsl
push
cmp
inc
sbb
test
mov
push
leave
ss
or
mov
jnp
push
jbe
ds
mov
mov
jne
jo
inc
mov
push
mov
mov
stc
cld
fs
adc
in
push
sbb
jge
popf
popa
mov
mov
rolb
not
std
ljmp
ds
sub
sub
inc
mov
or
and
mov
aaa
add
dec
jg
mov
fisttps
mov
mov
test
shrb
in
les
dec
inc
pop
adc
cmp
mov
mov
mov
or
jge
push
inc
movb
test
fwait
dec
pop
sub
addb
cs
push
jo
adc
pop
clc
inc
sbb
nop
push
xchg
jge
insl
inc
lods
mov
push
sbb
js
ss
stc
mov
mov
lds
pusha
ljmp
xchg
shrb
adc
iret
iret
jmp
inc
jmp
cltd
mov
scas
push
pop
repz
icebp
inc
mov
loop
faddl
mov
or
daa
xchg
xchg
inc
inc
xchg
test
push
daa
pop
dec
std
xor
notl
jne
lret
ret
imul
fdivrs
mov
sbb
push
daa
dec
lret
movsl
mov
movsb
ja
sbb
lea
arpl
cmp
xchg
insb
cltd
lcall
fwait
shll
jg
jns
inc
lods
pop
fwait
mov
aaa
fcomip
or
mov
cli
pop
decb
jbe
gs
in
lahf
fildl
leave
pmulhw
mov
dec
jmp
fmul
es
fbld
jecxz
testb
repz
cmp
mov
out
mov
jge
sbb
stos
jge
movsw
jne
xchg
fistpl
mov
adc
call
adc
dec
or
sbb
idivb
xor
xchg
push
xor
mov
mov
pop
add
fnstenv
push
mov
jae
xor
lahf
inc
xor
fsubs
adc
xor
xchg
mov
dec
add
dec
push
jo
loope
xchg
ficoml
xchg
sbb
mov
fisttpl
dec
dec
xchg
cld
jecxz
push
adc
push
movsl
jl
or
cmp
fadds
pop
mov
push
leave
pop
sbb
dec
les
imul
fcoml
push
mov
and
sub
mov
push
push
xor
pop
clc
cmp
xor
ds
test
jge
sahf
cmp
movsb
flds
add
and
xor
into
xchg
nop
mov
aaa
stos
mov
mov
pop
jns
sbb
repnz
in
or
clc
dec
sbb
push
sbb
cmp
mov
push
popf
rcll
les
mov
pop
and
inc
push
push
xor
popa
mov
ret
xchg
push
dec
lds
fimuls
incb
sbb
sbb
inc
in
mov
ret
pop
push
and
mov
push
mov
cmp
fs
dec
in
xor
pop
cmp
jae
and
aad
in
or
mov
xor
push
jne
and
and
sub
xorb
fiaddl
sub
inc
sub
dec
lods
cld
lret
shrb
pop
loop
xchg
jae,pn
fistpll
xchg
int3
imul
das
fistl
leave
repnz
jno
adc
es
ret
jp
mov
repnz
push
lret
dec
les
test
jl
jg
lea
int3
bswap
xchg
pop
cmp
mov
add
call
lret
fs
cmpsl
fisubrs
mov
mov
leave
shr
inc
mov
push
and
in
out
push
mov
roll
imul
loope
push
scas
jle
loopne
pop
insl
inc
outsb
jmp
sub
in
cmpsb
cltd
aad
mov
gs
decl
or
push
test
xchg
ljmp
repz
cmpb
outsl
xchg
mov
jle
and
iret
sub
push
inc
dec
scas
fdivp
popf
scas
notb
jp
pusha
push
mov
jge
xchg
pop
jnp
fucomp
push
or
sahf
sub
push
jo
mov
add
loop
cmp
movsb
ret
and
dec
paddw
lods
fmulp
je
aad
std
dec
or
sahf
xor
mov
insl
dec
xorb
jg
pop
ss
push
mov
push
jae
xorl
and
sub
lahf
push
xor
cmp
insl
adc
cmp
out
daa
outsl
loope
dec
push
shl
lods
nop
jle
mov
mov
or
xchg
out
rcr
mov
mov
mov
test
or
ficomps
xchg
sbbb
sbb
lcall
mov
and
test
adc
xchg
nop
pop
jecxz
dec
jge
mov
jecxz
repz
xor
add
adc
pop
jae
inc
jp
mov
mov
repz
xor
add
adc
pop
jae
inc
jp
mov
mov
repz
xor
add
adc
pop
jae
inc
dec
push
mov
cmpl
push
jp
cmc
and
cltd
addb
fs
mov
int3
int3
int3
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
jle
outsb
sbbl
mov
insb
lcall
fisubs
into
xor
jae
arpl
outsb
sbbl
mov
push
repz
xchg
out
pop
out
add
xor
and
jae
arpl
ja
inc
stos
push
mov
push
jmp
stc
out
int
orl
aaa
ret
or
filds
repz
cmp
insl
sbb
add
adc
or
leave
adc
and
mov
or
mov
xor
in
std
and
fsubr
xor
fwait
orl
or
std
pop
stos
call
test
pop
inc
fdivrl
jae
es
jle
xchg
dec
push
rcl
shl
xchg
data16
out
std
jmp
xor
adc
push
jecxz
rorl
rcll
mov
sti
decb
ds
sahf
out
insb
mov
sbb
sub
pop
sub
in
repnz
mov
jnp
imul
jno
gs
ja
pop
stos
dec
mov
push
repz
cli
out
negb
sub
cmp
imul
dec
rorl
push
lahf
push
xchg
jl
add
ss
inc
in
sbb
movups
pminsw
sarb
push
shrl
lea
xchg
mov
push
and
adc
pop
sbb
es
loopne
ret
push
repz
jecxz
adc
add
xor
and
jae
arpl
outsb
sbbl
mov
push
repz
jecxz
adc
add
xor
and
jae
arpl
inc
nop
loope
cmp
addr16
in
mov
or
movsb
cltd
movsl
push
sbb
stc
xchg
shrl
shlb
push
cmp
nop
jmp
outsl
sbb
ds
sub
cs
adc
leave
nop
sub
mov
cmc
inc
dec
and
jnp
mov
sub
out
outsb
push
mov
cmc
mov
fcomip
addr16
add
dec
dec
cmpsl
sarb
push
lea
add
int3
or
jle
jo
jg
sar
inc
adc
mov
adc
pop
sarl
call
cmp
sbb
mov
iret
push
mov
std
scas
sub
ret
jnp
test
dec
mov
push
pusha
jno
in
rclb
adc
test
ds
inc
sbb
out
add
jnp
fsubr
sbb
mov
pusha
xor
sbb
scas
repnz
sub
jge
subl
and
add
xchg
jnp
xchg
cmp
enter
add
les
scas
fstl
popf
adc
popa
loop
and
and
adc
sbb
sbbb
push
mov
push
xor
sbb
icebp
stos
sbb
xchg
inc
sbb
lods
mov
div
popf
cltd
outsb
dec
stos
insb
mov
mov
sub
jp
fsts
dec
cmp
aam
pop
inc
je
test
sbb
pushf
xor
fwait
adc
sbb
sub
rolb
sarw
sub
movsb
mov
sbb
xchg
pop
stc
int
mov
movsl
aaa
imul
xchg
jl
push
sbb
call
push
push
pusha
cwtl
ljmp
lods
icebp
or
inc
mov
bound
dec
stos
push
shll
filds
xlat
pop
pop
jl
roll
cmc
sub
adc
call
lret
fs
mov
xchg
dec
iret
lock
ror
mov
jno
lcall
inc
adc
xchg
sub
pop
pushf
int
mov
dec
imul
mov
data16
xor
std
fcoml
mov
out
je
pop
sbb
sub
xchg
pushf
arpl
in
and
mov
decb
iret
jns
add
mov
jle
ja
scas
or
ljmp
cmpsb
push
lcall
enter
bound
lods
js
xchg
notl
imul
es
xlat
xchg
insl
jg
je
aad
loope
adc
mov
daa
or
cmp
adc
sbb
stc
mov
dec
lahf
in
in
mov
shl
xchg
test
and
mov
daa
lods
or
push
ret
imul
test
in
jo
adc
repz
push
outsb
adc
movsl
sbb
jl
gs
pop
and
inc
pop
mov
pop
dec
or
divb
imul
or
clc
add
mov
push
loopne
into
add
cs
or
mov
mov
or
stos
insb
rdpmc
cmc
ljmp
xor
faddl
int3
hlt
sbb
aam
mov
or
and
xchg
out
mov
cltd
lahf
in
dec
xor
mov
inc
sub
clc
loop
insl
mov
jecxz
adc
sarl
mov
in
and
dec
sub
adc
or
mov
stc
scas
sti
pop
cmp
mov
or
fidivrl
push
or
mov
or
dec
loop
xchg
imul
cmp
fcomps
jl
lea
movsb
jl
sbb
sbb
repz
lea
push
mov
xor
bswap
lcall
hlt
jbe
fistps
cmc
jne
mov
xchg
rcrb
jg
cmpsl
inc
push
das
jg
into
jp
test
push
and
out
cmc
jb
sbb
out
call
cmpl
lods
jle
out
icebp
loopne
cli
nop
into
inc
mov
mov
outsl
ret
xchg
pop
pop
cli
jg
fidivl
jge
in
mov
adc
hlt
xchg
out
roll
lret
loope
into
aam
cs
repnz
mov
nop
adc
negl
clc
stc
sub
popa
cmc
jb
dec
jo
cmpsl
in
arpl
test
cmp
adc
mov
dec
lds
xchg
pop
stos
add
outsl
mov
push
lock
es
dec
xchg
fsubl
and
cmp
imul
xor
inc
xlat
cwtl
loop
dec
and
int3
mov
dec
mov
xor
dec
dec
adc
xchg
arpl
push
iret
pop
xchg
adc
in
orl
fisttps
pop
cmp
push
cmpb
ljmp
cmc
lcall
in
or
xor
fadds
mov
daa
xchg
lcall
cmp
test
sub
in
lds
loopne
xor
xor
push
adc
lea
sbb
movsb
ss
adc
jecxz
imul
pop
cld
addr16
sahf
pop
and
mov
xchg
outsb
jns
imul
jae
xchg
addr16
mov
sub
xchg
dec
mov
stos
mov
arpl
sbb
cmp
lds
or
mov
cmc
ja
push
mov
sbbb
add
cmp
in
mov
cmp
xor
cmp
test
mov
sub
pop
dec
cmp
dec
xchg
clc
lahf
and
push
andb
mov
xchg
xor
sbb
mov
push
pushf
stc
cmp
xlat
lods
stc
in
ret
pusha
mov
bound
and
xor
stos
test
std
cmp
jle
stos
sub
sub
int3
push
adc
jecxz
pop
cmc
std
sub
cltd
clc
pop
aas
in
hlt
jbe
pop
in
pop
fldcw
and
cwtl
cmpsb
lods
sub
jnp
adc
dec
andl
outsb
inc
lods
adc
jp
sti
int3
rorb
mov
jmp
cmp
lods
insb
xchg
mov
mov
lcall
pop
imul
lods
dec
dec
fwait
aaa
lret
loopnew
or
push
daa
in
mov
mov
movsl
inc
xor
arpl
popf
gs
and
in
test
jo
aad
sbb
gs
mov
jb
daa
lods
fwait
xchg
inc
sbb
xor
inc
out
decl
cmc
outsl
inc
insb
cmp
fucomp
mov
jg
imul
sar
je
scas
sbb
std
mov
mov
add
mov
stc
adc
ret
and
fmulp
cld
push
rclb
test
mov
pop
mov
dec
mov
pop
fidivrs
insl
push
cli
je
pop
xor
lcall
jb
mov
pop
movsl
mov
mov
jo
stos
enter
mov
fdivs
push
jne
pop
das
cltd
lret
jl
mov
jl
jne
pop
loopne
ret
xchg
dec
icebp
sbb
mov
test
das
lea
fcos
sub
int
mov
jae
dec
xchg
mov
mov
scas
mov
sub
fbld
cld
cmp
hlt
cmovne
shr
lods
mov
lret
xor
jae
dec
add
xchg
xor
out
push
add
insl
loope
lahf
jmp
roll
adcb
inc
test
fadds
or
ds
ss
jb
icebp
rolb
jmp
pop
xchg
dec
and
sbb
dec
pop
mull
shll
sbb
and
dec
stos
jge
pop
test
daa
xchg
iret
xor
xchg
cmp
adc
outsl
jne
jecxz
lahf
xchg
insb
sub
scas
aad
xchg
xor
test
jg
lret
jb
out
les
fisttpll
cwtl
enter
push
jnp
jnp
into
lods
push
jle
jg
push
push
xor
inc
sti
jge
pop
or
mov
jbe
lock
push
mov
lods
lret
je
cmpsb
arpl
cmc
add
mov
mov
test
idivl
repz
mov
cmpsl
pop
out
and
aas
pop
mov
mov
stos
and
cmp
sbb
insb
cmp
out
insb
mov
sbb
pop
aad
fs
xchg
out
jbe
add
movl
push
jne
sub
movsl
sbb
test
or
and
out
lret
cwtl
xor
sub
ja
addr16
cld
sbb
mov
popa
out
testb
je
aaa
imul
pop
sub
imul
push
xchg
jnp
push
push
add
call
mov
pop
aam
out
inc
sub
dec
cmp
dec
inc
aas
out
int
arpl
xor
fs
out
sbb
add
push
pop
pop
xor
push
in
sub
adc
xchg
imul
add
jae
not
pushf
cs
repz
jmp
lods
shlb
mov
sbb
or
out
or
call
std
lea
xor
and
sbb
xor
js
ss
push
shrd
adc
fcmovnb
dec
dec
add
cld
shll
mov
enter
pop
jae
adc
cmpsl
movsb
dec
iret
push
mov
mov
nop
mov
stos
push
loopne
sbb
aam
aam
or
imul
dec
sbb
pop
loope
fisttpl
mov
sub
mov
jb
cmp
int
mov
ret
roll
and
mov
add
data16
and
add
xchg
mov
into
inc
xor
aas
dec
jbe
rep
adc
sub
in
lock
cmpsl
loop
adc
loop
xor
inc
lret
lea
lahf
adc
mov
add
mov
and
mov
sub
cmpsl
mov
or
cmpsb
data16
fs
aaa
mov
rorl
aas
adcb
xchg
mov
push
in
int
inc
hlt
ror
xchg
jecxz
mov
pop
push
xchg
daa
wbinvd
xchg
inc
lods
ljmp
fldt
stc
pop
call
lock
loopne
lods
inc
inc
test
mov
jecxz
test
out
adc
cld
cs
add
mov
fwait
mov
mov
mov
push
shll
jns
nop
fwait
dec
sti
es
or
push
mov
sbbl
xchg
push
mov
sbb
sub
xlat
fucom
movb
insl
out
outsb
mov
insb
pop
loope
jle
aad
in
stos
sbb
adc
or
or
bound
adc
int3
jne
cli
pop
adc
andb
test
pop
xchg
out
repz
sbb
out
adc
cmpl
imul
add
mov
push
orb
sub
xor
sarl
dec
pop
adc
push
fwait
movl
sbb
inc
sahf
shrl
pop
pop
sbb
adc
cld
cmp
mov
xchg
loope
xchg
xchg
gs
shr
jae
add
or
jbe
pop
sbb
test
mov
cmpsl
out
add
add
jge
push
ret
cmp
pop
scas
das
add
pop
add
inc
imul
xchg
cmp
push
rcr
insl
aam
lcall
jp
pop
loopne
or
push
stc
pop
test
imulb
loop
mov
or
mov
loopne
or
xchg
ljmp
ljmp
lcall
push
imulb
pop
pop
pop
loop
test
es
cmpsb
loopne
xor
mov
mov
sub
cmp
cmc
aaa
test
cli
jae
sbb
xor
lahf
xchg
fmul
imul
les
cmp
imul
lea
push
sbb
fisubrs
adc
cmp
sbb
pop
pop
shlb
lahf
lock
scas
lret
and
lahf
in
sbb
jnp
fidivs
mov
je
mov
ret
xor
rcrb
mov
testb
mov
add
mov
clc
cld
or
cld
inc
rorl
push
fdivrs
and
and
push
jae
lds
popa
push
push
aad
cmp
inc
pop
inc
xchg
push
cmp
decb
int3
js
jp
push
aas
mov
sbb
cld
xor
stos
mov
cmp
add
mov
jo
fldcw
fisubrs
jge
jns
add
or
ret
xchg
lret
jbe
adc
call
in
push
les
mov
rcll
orb
leave
xchg
add
xchg
lahf
xor
fsts
shlb
ja
je
scas
push
insl
sub
mov
mov
adc
loope
push
subb
popa
xor
rclb
ficomps
mov
xlat
int
into
imul
jge
ret
and
pop
adc
adc
fistl
inc
loop
fldenv
jl
dec
mov
std
neg
jne
mov
xor
ret
gs
add
push
mov
sarl
cli
clc
sahf
pop
push
scas
inc
ljmp
bound
int
mov
les
imul
adc
xchg
push
mov
movsl
push
xchg
je
lret
test
adc
adcb
daa
shl
jp
inc
loop
cltd
xor
xchg
jge
das
add
scas
ret
add
pop
inc
mov
pop
sbbl
rolb
mov
jno
dec
xor
cs
lods
push
lahf
inc
lret
rolb
lahf
out
xchg
xor
mov
inc
movsb
fdivp
xlat
inc
stc
lods
dec
call
addb
mov
adc
lds
outsb
xchg
pop
cmp
lret
stc
inc
adc
imul
adc
add
push
sbbb
dec
mov
and
ret
fidivrs
xor
ja
outsl
jnp
int
push
xlat
xchg
fprem
repnz
leave
pushf
enter
jp
adc
mov
pusha
jbe
daa
push
testb
faddl
and
and
cmp
stos
test
or
ss
aad
xor
dec
and
xor
adc
shl
jg
push
jae
sti
jno
in
xchg
pusha
repnz
cli
or
pop
xchg
in
mov
dec
orl
in
xor
mov
add
test
xchg
xlat
sub
insl
fists
add
dec
fidivs
mov
adc
jb
jg
stc
into
inc
js
jo
lcall
scas
dec
call
rcl
mov
xchg
xor
xchg
push
es
inc
mov
imul
in
jbe
inc
dec
in
out
lods
fmuls
mov
pop
pop
dec
dec
mulb
cs
orb
push
cwtl
aam
or
jle
add
aaa
pop
and
sbb
cmpb
mov
and
sbb
addr16
sbb
in
cld
cmp
pop
jmp
iret
mov
adc
fcomp
sub
std
xchg
cmp
xchg
mov
icebp
jl
jl
pop
xchg
inc
call
out
imul
xor
mov
test
or
jbe
cmpsl
rol
lods
addl
add
addr16
subl
in
mov
leave
stos
fists
inc
pusha
imul
jg
fistps
lahf
bound
add
fwait
or
push
pop
orb
imul
subl
jge
push
movsb
jle
lods
push
cmpl
icebp
xor
dec
call
inc
mov
jae
dec
mov
in
cmp
xchg
cltd
and
mov
or
xlat
pop
in
rcrl
dec
jge
mov
movsb
jg
jl
sahf
notl
addr16
lock
test
xchg
aaa
lds
or
and
sub
lcall
ds
aam
decl
xor
dec
or
aad
xor
test
es
lahf
xor
cmp
adc
mov
pushf
sbbb
movsb
xchg
sub
pop
mov
lea
and
test
inc
or
xchg
adc
pop
icebp
arpl
mov
mov
xlat
call
and
xchg
sub
loope
shl
push
sub
push
and
call
inc
xor
xor
shll
filds
xchg
mov
or
out
pop
lods
xor
fxam
pop
push
push
mov
mov
jns
cmp
add
dec
lock
or
loop
adc
adc
ds
in
stos
jg
out
ret
cli
jne
inc
ss
and
stos
adc
cltd
inc
pop
sahf
inc
jp
cmp
push
dec
adc
inc
lock
jp
xchg
dec
fcom
cmc
cwtl
xor
loop
jl
mov
adc
insl
idivb
addr16
in
sub
cmp
lret
mov
adc
outsb
pop
repz
sub
jl
jg
mov
fiadds
sbb
and
sub
cmp
ret
js
notl
xor
add
incb
sbb
mov
loopne
adc
outsb
sbb
or
ficompl
and
lret
push
insb
arpl
js
cmp
inc
js
fldt
fsubs
xchg
stc
es
add
aas
ss
or
lds
rcl
loop
and
add
push
or
in
or
int
fstl
adc
xlat
and
call
add
outsl
mov
jno
xor
test
outsb
lock
cs
push
adc
inc
in
int
jge
leave
dec
cli
aas
or
and
mov
cmp
hlt
aas
push
ljmp
xchg
sub
mov
in
stos
xchg
adc
mov
mov
ss
add
out
insb
inc
mov
sbb
fs
js
fisubrl
ret
mov
push
sub
test
js
dec
cld
jno
cs
sbb
adc
cld
call
or
popa
mov
or
loop
fs
shlb
cmpsb
dec
mov
xor
in
or
and
mov
ficoml
push
cltd
ret
popa
mov
xchg
mov
or
mov
inc
and
mov
int
xchg
fcompl
or
xor
mov
mov
insl
mov
push
cmp
outsl
cmpsl
sub
fcom
dec
jle
daa
mov
jo
mov
aaa
ljmp
push
mov
imul
push
and
and
test
push
nop
jno
filds
ja
in
push
sbb
xchg
jb
adc
imul
push
ficoms
adc
adc
mov
repnz
lea
xor
imul
lcall
int
inc
add
cli
pop
adc
into
mov
data16
outsb
xlat
xchg
mov
nop
push
pop
movsl
push
nop
jl
mov
and
clc
icebp
add
mov
cmpb
das
je
mov
xlat
rcr
adc
movsl
subb
mov
cmpsl
mov
movsl
inc
inc
sti
jb
push
xor
jl
dec
rcll
or
xor
push
cltd
lea
push
mov
jp
mov
jg
xchg
lds
aaa
jge
lods
enter
aad
sub
adc
pop
sub
xlat
shl
gs
push
pusha
push
mov
mov
std
jp
xchg
rcll
negl
cmpsl
js
ffreep
adc
leave
test
xor
fs
xor
sti
mov
mov
add
pushf
pop
shrl
mov
mov
pop
xchg
enter
cwtl
arpl
repz
js
sbb
pop
inc
std
addl
jnp
aaa
mov
setae
mov
test
mov
adc
inc
mov
push
add
mov
bound
test
mov
aam
and
xchg
and
incl
loope
jle
sahf
cltd
dec
test
sub
mov
and
xchg
add
xor
in
sbb
mov
sub
add
lret
insl
sub
adc
jo
das
inc
push
je
sarb
test
mov
aad
and
pop
fmuls
jae
les
fsubrs
pusha
mov
lods
clc
into
mov
mov
inc
mov
enter
jno
mov
scas
adc
test
pop
mov
decb
jae
xor
adc
jle
repz
cmp
test
push
dec
add
jnp
adc
inc
movsb
lods
mov
push
adc
negl
adc
lods
lret
xchg
xor
or
xchg
xchg
sbb
in
pop
in
mov
ja
add
sbb
stos
lock
jmp
out
stc
jb
jmp
cmpb
sub
dec
mov
mov
cmp
lock
cmp
xchg
xchg
or
in
stos
sti
pusha
pop
jne
fstl
jnp
aam
shll
mov
mov
cmpsb
leave
pushf
cld
cwtl
aad
stos
mov
mov
cmp
popf
test
dec
icebp
jmp
add
adc
sbb
cmpsb
cmp
adc
dec
fadds
jbe
ljmp
test
shl
ret
bound
scas
hlt
push
push
adc
clc
fisttpl
leave
btr
xorl
mov
jo
movsb
xor
fsubs
iret
push
sbb
and
jge
mov
lods
js
stos
sub
inc
cmp
ret
mov
adc
sarb
in
in
inc
xchg
or
lcall
jmp
daa
pusha
test
fistpl
inc
pop
sbb
inc
aam
packuswb
icebp
dec
jns
xchg
sub
pop
mov
dec
inc
jno
out
sub
int3
xor
cld
cli
shrl
mov
fstps
aaa
sbb
mov
clc
test
lds
int
hlt
movsl
test
ja
push
xchg
iret
clc
nop
inc
notl
das
call
in
lods
int
pop
xchg
push
cmpsl
adc
and
jg
and
push
scas
jg
xor
and
cmp
test
bswap
add
test
in
adc
aad
sub
sti
shrl
push
stos
std
xchg
sbb
adc
xor
sarl
jge
mov
aam
lock
jmp
and
cmpsl
leave
and
inc
or
fwait
mov
or
dec
inc
dec
sbb
sub
adc
mov
das
xchg
rcl
push
push
cli
sbbb
inc
dec
int3
into
mov
xor
nop
lods
adc
sub
and
xlat
sub
js
popa
cs
pop
cmpsb
pop
cmp
mov
cmp
push
jno
test
mov
ficoml
adc
jae
mov
adc
pop
xchg
clc
lret
fdivl
adc
xor
or
jns
push
mov
mov
push
repz
jecxz
adc
add
xor
and
jae
arpl
outsb
sbbl
mov
push
repz
jecxz
adc
add
xor
and
jae
arpl
outsb
sbbl
mov
push
repz
jecxz
adc
add
xor
daa
mov
ja
addr16
insb
xchg
dec
mov
sahf
repz
add
adc
leave
cmp
or
sbb
int3
int3
int3
int3
push
mov
push
push
lea
push
mov
push
call
cmpl
je
cmpl
je
call
movzwl
mov
mov
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
not
mov
pop
mov
or
mov
leave
ret
add
call
xor
adc
js
xchg
push
movsl
js
jp
or
sbb
cmp
cmp
call
push
cwtl
gs
mov
movsl
dec
mov
lds
clc
in
cmc
cmp
lock
andb
mov
aad
sarb
dec
cmpsb
jbe
jle
cmp
je
and
add
ss
jns
ret
mov
cs
jecxz
and
aam
arpl
xchg
ljmp
add
cltd
and
mov
js
js
aad
mov
movsb
jne
aaa
jg
dec
mov
pushf
adc
xchg
cmp
sbbb
sbb
data16
cmc
cmp
call
stos
pop
cmp
jne
jne
sbb
xchg
pop
aad
sbb
lock
cmp
test
fs
clc
mov
sub
push
xchg
sbb
cmc
cmp
in
cmp
call
fidivrs
xchg
gs
push
jge
push
and
imull
enter
clc
xor
cwtl
gs
mov
movsl
jno
popa
lds
aad
in
cmc
pop
pusha
lods
jbe
arpl
jae
and
cmp
or
icebp
aad
and
and
cmp
xchg
dec
subb
push
jae
popa
fadds
je
and
push
stos
and
xor
divl
repnz
sbb
cmp
jp
ja
inc
lahf
pop
bound
push
lea
in
cwtl
gs
mov
movsl
push
aad
in
cmc
cmp
call
push
cwtl
gs
mov
movsl
push
aad
in
cmc
cmp
leave
dec
jmp
mov
add
mov
mov
xorb
or
mov
in
mov
mov
pop
mov
mov
add
pop
mov
mov
repnz
sub
repz
pusha
add
push
std
dec
mov
jp
push
ret
mov
push
fisttpl
rcrl
cld
jnp
stos
out
jne
push
sub
pop
add
xor
and
lret
hlt
popf
iret
ret
add
bnd
cli
std
into
cmp
sub
push
xchg
push
imul
outsb
or
inc
in
push
pop
add
test
jno
inc
jnp
adc
cmc
push
cmpsl
cmp
sbb
add
loope
cmp
cmp
aam
sbb
mov
test
jmp
ret
push
ret
mov
pop
sbb
aam
pop
xor
pop
dec
push
mov
gs
inc
mov
icebp
adc
fnstenv
mov
mov
sahf
aad
fcom
push
ss
clc
dec
push
hlt
jno
pop
push
scas
test
dec
ljmp
stos
sub
dec
movb
sub
imul
push
pop
fsubrl
daa
and
out
mov
repnz
dec
scas
fstpt
cld
fldcw
bound
push
add
jp
test
dec
pushf
xchg
push
xor
scas
jmp
mov
mov
shll
and
insl
shll
adc
pushf
push
mov
mov
sbb
inc
insl
add
aas
ss
push
cltd
clc
shl
mov
and
ja
dec
fnsave
push
out
pop
mov
dec
lret
add
dec
int3
orl
dec
mov
inc
mov
inc
movsb
mov
push
out
in
adc
repz
inc
xor
sbb
pop
mov
nop
mov
fs
pop
and
into
js
and
mov
jns
cmp
mov
repnz
pop
shll
mov
insl
nop
jo
push
adc
cmpsb
lahf
in
adc
movsl
mov
cmp
faddl
push
xchg
fs
es
outsb
pop
aaa
stos
repnz
push
add
pop
ds
leave
in
mov
add
aaa
jne
mov
pop
aam
loop
stc
hlt
gs
stos
cli
mov
sbb
jo
jns
addr16
dec
xchg
aas
int3
mov
push
mov
outsl
pop
shll
push
fsubrl
out
lcall
dec
xchg
mov
inc
pop
repz
and
mov
and
mov
lcall
ret
or
xchg
loope
in
aaa
pop
adc
shl
nop
mov
mov
cmp
mov
scas
jmp
sbb
imul
inc
int
pop
dec
fwait
les
mov
jecxz
data16
pop
or
shl
mov
leave
scas
push
hlt
mov
fyl2xp1
jl
dec
xor
xorb
imul
mov
jg
aas
into
scas
enter
stc
lahf
mov
insl
shrl
add
mov
jle
loopne
fwait
into
push
idiv
mov
mov
add
in
insl
ljmp
sbb
cmc
js
mov
and
pop
xlat
ljmp
sub
cmc
enter
cmp
insb
fwait
mov
jmp
add
iret
cmp
sbb
jle
mov
xchg
push
adc
rcl
adc
inc
outsb
inc
sub
push
sbbl
outsb
gs
adc
aam
daa
xchg
mov
xlat
sbb
outsl
and
in
je
icebp
pop
stos
jge
std
scas
inc
sub
ljmp
mov
lret
rcrb
xchg
loope
cld
mov
sub
push
xor
loope
xor
cld
stc
jo
jo
sbb
dec
into
mov
sarb
out
loope
dec
bsf
cmpl
xchg
sbb
lods
xlat
dec
ss
leave
test
cmp
fsubrl
adc
addr16
xchg
and
cmp
add
data16
dec
mov
xchg
test
in
sbb
cmpsl
pop
iret
add
movsl
sbb
sub
mov
push
xchg
out
insb
fimull
adc
dec
leave
inc
in
cld
cmp
mov
push
outsb
je
xchg
mov
mov
inc
push
fsubrs
add
xor
cmpsb
lock
mov
out
sbb
mov
pusha
add
and
adc
nop
pop
in
xor
rorl
xchg
mov
inc
add
mov
fildl
or
xor
nop
test
cmp
add
fistps
ds
ljmp
mov
inc
jb
mov
test
test
push
pop
repnz
cmpsl
xchg
mov
xchg
add
pop
and
cmpsl
and
mov
je
jnp
scas
fdivrl
pushf
clc
sub
sbb
je,pt
mov
pop
dec
mov
push
jnp
in
jo
push
jne
idivb
fs
sub
cmp
sub
jl
fsubrl
stc
enter
ret
mov
std
xor
ret
mov
test
mov
popa
mov
mov
fimull
in
cltd
movsl
es
cmc
pop
push
cltd
out
fxch
lret
xor
cs
mov
into
mov
pop
push
cld
lods
xchg
adc
int
imul
pop
insb
xchg
mov
bound
pop
xchg
stos
pop
or
dec
cwtl
and
mov
iret
sbb
jns
outsb
mov
mov
jg
pop
ss
addl
testb
pop
push
lock
cmc
sbb
jns
mov
cmp
aam
int3
jne
lock
sahf
xchg
mov
stc
faddl
inc
or
ret
sahf
push
lods
push
lds
mov
out
cmp
mov
mov
mov
repz
xorb
push
and
mov
int3
icebp
ljmp
add
pop
in
jge
mov
in
in
inc
pop
sbb
xor
fnsave
movsl
pushf
andb
sbbl
imul
das
aad
aas
pusha
out
push
xor
xchg
shll
lea
cs
and
adc
mov
jle
fisubs
nop
push
stos
scas
outsl
scas
daa
mov
subb
test
dec
dec
subl
sub
sete
push
pushf
bound
ret
push
loope
mov
sbb
mov
mov
fsubl
test
push
xor
popf
cmp
pop
iret
ss
pop
out
mov
cmpl
inc
sub
jno
stos
repz
or
or
lods
sub
mov
add
leave
mov
push
cld
repz
xchg
shrb
mov
push
or
sti
pusha
push
outsl
xor
int
dec
iret
or
rcrl
shll
inc
fiadds
xor
jecxz
rcll
out
test
cmp
or
pop
push
jp
inc
movsl
je
xor
or
imul
iret
xchg
shll
mov
sbb
or
fisubrl
addr16
rcr
mov
test
xor
jge
and
xlat
adc
not
outsl
ljmp
inc
dec
push
movsl
add
mov
mov
inc
es
mull
mov
add
cmp
lods
cmpsb
in
and
mov
or
dec
in
lret
fwait
or
stc
and
rolb
push
icebp
lods
or
add
jb
and
stos
or
into
idivb
adc
out
add
add
xchg
idiv
cmpxchg
jmp
pop
mov
jns
hlt
adc
jl
and
es
xor
sarl
std
and
xlat
push
in
inc
mov
mov
sbb
ret
dec
push
push
fldt
call
insb
in
shll
andb
jne
jle
ljmp
ffree
into
push
mov
xchg
lds
pop
add
test
xor
sbbl
mov
pop
adc
inc
test
mov
dec
mov
pushf
xor
out
dec
in
clc
jmp
les
sbb
lret
mov
movl
dec
xchg
fistl
mull
cmp
cmp
fbstp
inc
mov
jo
adc
dec
sub
movsl
cli
out
aas
cli
xchg
push
movsl
sarb
lcall
jle
adc
aas
cmovg
fistps
lods
in
or
lret
cmp
daa
dec
in
xchg
push
pop
mov
add
push
jne
cmp
test
cmp
mov
jmp
mov
add
mov
cmp
mov
jp
mov
lahf
sbb
ljmp
lret
inc
loopne
popf
aaa
dec
pop
fsub
sbb
push
ja
mov
popf
jl
andl
fisttpll
dec
lahf
fdivp
mov
sub
push
push
int3
xor
inc
fdivrs
insl
in
jle
sarl
or
adc
cmp
int3
dec
pop
in
mov
adc
or
add
out
sub
test
mov
adc
mov
ds
mov
or
dec
mov
ret
xchg
xlat
xchg
dec
pop
cmp
movsl
or
ror
cmp
std
shrb
fistpl
dec
mov
popf
lock
test
je
pop
sbb
jo
xchg
jle
push
ficomps
mov
jo
push
stc
jl
out
dec
outsl
jle
jecxz
movsb
pop
int3
dec
push
loopne
jecxz
fucom
lret
sbb
aas
ss
or
and
movb
mov
sub
or
cmc
mov
xchg
xchg
inc
xor
cmpsl
stos
inc
aas
loop
jg
je
jb
aam
add
test
sub
inc
fs
lods
jo
sbb
mov
les
pop
lds
out
jmp
lahf
fstpt
sarb
pop
shll
or
mov
paddusw
loop
cmp
call
test
sti
push
mov
mov
jns
pop
loop
mov
push
xchg
xchg
push
fs
mov
cmp
scas
stos
jo
mov
and
test
sbb
call
dec
push
dec
mov
jb
data16
jbe
pop
outsb
and
dec
inc
fldl
xchg
into
or
popa
in
sbb
jg
rcll
jge
std
xorb
into
pop
sahf
xchg
pop
sub
sub
add
out
sbb
dec
mov
inc
adc
mov
decb
add
stos
insl
loop
testb
pop
cltd
in
fdivl
sbb
inc
outsl
negb
iret
fwait
nop
push
and
in
pop
mov
hlt
enter
loopne
pop
jg
xchg
rclb
add
jb
imul
fldl
push
xor
inc
movsb
mov
rcr
inc
ss
xorb
dec
mov
enter
fwait
rcll
imul
leave
mov
push
sahf
pop
leave
mov
push
adc
roll
stos
daa
sbb
cmp
jnp
add
xchg
cmp
xor
mov
popa
rcl
aam
fbld
leave
rol
add
test
outsl
dec
jns
ret
out
xchg
xchg
mov
mov
pusha
call
mov
xchg
xchg
hlt
notb
mov
sub
mov
mov
cmp
pop
xchg
pop
mov
enter
inc
xor
insb
cmpsl
pop
ljmp
fwait
mov
and
mov
aaa
and
xlat
push
or
faddl
inc
fstp
inc
incl
rcll
push
cld
cmp
lret
dec
clc
popf
int
mov
mov
jmp
lahf
mov
roll
insb
add
inc
pusha
in
mov
add
and
das
out
dec
mov
xchg
push
sub
aam
les
mov
sbb
inc
dec
add
fisubs
sbb
fildl
adc
pop
xor
jp
js
mov
pop
loopw
mov
dec
mov
arpl
cmc
int
dec
or
sub
jne
jl
test
leave
dec
xchg
adcl
sbb
fdivr
mov
icebp
shrb
sub
add
dec
mov
pop
mov
enter
not
sub
repz
mov
ficompl
jb
imul
sub
ss
aam
adc
jmp
arpl
sbb
popf
sbb
sti
fistl
mov
cmp
stos
cmpb
sahf
jne
xor
pop
sbb
bound
scas
jb
fnsave
test
push
or
jns
xor
inc
dec
jno
mov
mov
iret
sub
or
add
inc
sub
inc
test
ret
loop
xchg
jl
mov
xchg
mov
lret
jnp
int
int3
push
shrl
xor
loope
negb
cmc
in
pop
pop
cmp
mov
out
test
jp
jnp
lcall
jg
out
sub
mov
in
lods
dec
ret
push
cmp
movsb
jecxz
adc
push
cmp
imul
inc
test
aas
add
xlat
cs
fcoms
and
dec
jp
sub
jbe
cmc
fdivl
jnp
ret
out
jmp
outsl
imul
aaa
test
xchg
js
cld
insl
xchg
add
pop
lcall
pop
sbb
xchg
cmp
lea
andb
icebp
and
or
pop
cmp
stos
xor
pushf
insb
xchg
ficompl
insl
test
fildl
xor
ss
daa
mov
inc
outsb
add
and
loope
dec
jge
dec
push
mov
adc
scas
adcb
addr16
int
outsb
mov
push
cli
stos
jmp
xorps
lret
xchg
jge
dec
mov
cld
jne
xor
sub
inc
jg
clc
and
repnz
insb
pop
loop
or
mov
movsb
adc
pop
push
pop
out
test
ds
xchg
test
test
fldl2t
push
cmp
push
clc
aaa
xchg
in
dec
push
jg
xor
lock
das
scas
push
sahf
cmp
mov
inc
cltd
fwait
xor
testb
mov
push
and
sub
fstpl
jo
push
rorb
and
xchg
out
cld
iret
xor
sub
adc
aam
out
push
or
or
in
push
mulb
addl
sbb
inc
sbb
daa
mov
sub
cli
mov
rolb
mov
cmpsb
inc
cmpsb
inc
sbb
insb
insl
lods
jecxz
stc
push
popf
ret
jo
cmp
dec
lret
cli
and
xchg
std
dec
mov
loope
jp
sti
ljmp
loop
fwait
and
daa
test
mov
cltd
sbb
dec
in
inc
adc
push
and
sub
out
mov
test
dec
or
arpl
loop
cld
iret
test
push
sahf
inc
cmpsb
mov
int
cmp
push
pop
push
sbb
je
cmpl
test
pop
sbb
adc
mov
fstl
push
lahf
movsl
fstpl
sub
push
aas
mov
dec
mov
mov
or
hlt
loope
decw
jmp
js
out
xor
cmp
push
out
mov
cmp
push
decb
outsl
loopne
push
lods
aad
cmp
cmp
invd
jg
fildll
out
xchg
rorb
andl
mov
sbb
adc
lcall
in
push
mov
stos
imul
xlat
push
push
sbb
dec
call
fidivs
push
adc
mov
mov
stos
mov
or
mov
imul
mov
cld
lahf
pxor
iret
cli
mov
push
or
das
and
mov
jns
cltd
and
sub
pop
xor
jecxz
mov
shlb
int3
xlat
inc
xor
dec
sti
and
push
dec
pusha
fidivs
fmulp
movsb
mov
enter
movsl
fwait
jecxz
dec
jle
je
dec
adc
sub
loopne
sub
cmpsl
cmpsb
inc
xchg
fsubrl
loop
mov
mov
bswap
sub
pop
subb
adc
adc
ds
pushl
inc
rcl
jmp
xor
mov
mov
addb
xchg
dec
lods
stc
xchg
loopne
mov
mov
imul
pop
xor
outsb
loope
ficoml
pop
addr16
dec
pop
scas
mov
scas
outsl
adc
mov
jge
and
fisttps
or
cmp
adc
clc
push
pop
add
jecxz
push
jbe
mov
dec
sub
jns
mov
add
repnz
mov
pop
inc
mov
and
mov
jbe
mov
in
jge
pop
aaa
sti
inc
pop
sbb
adc
test
jg
pop
stos
push
mov
hlt
into
inc
les
es
scas
mov
pushf
out
pop
lcall
sub
arpl
xor
push
cwtl
xor
mov
fcmovbe
jmp
test
sub
mov
fsts
fs
mov
shlb
into
movsb
sti
ret
rolb
inc
dec
cmp
int
aas
jle
cmp
ljmp
test
push
fcoml
ret
cwtl
mov
add
and
imul
xchg
dec
cmc
test
ljmp
mov
mov
sub
push
mov
jns
adc
es
or
adc
rcrl
shlb
lods
popa
sub
or
movsl
jl
fsts
stos
ret
fwait
loop
fidivrs
xlat
ljmp
xor
sbbb
mov
scas
xor
aaa
lea
andl
bound
jl
xchg
loope
or
mov
test
pusha
das
pop
xchg
and
testl
cmc
jne
push
sar
mov
sbb
cs
inc
jmp
push
test
xchg
data16
lret
hlt
inc
inc
jge
test
add
mov
sbb
aas
or
cld
and
movsl
mov
out
mov
fnstsw
mov
add
push
fisttpll
ss
fisubrs
dec
cmp
and
popa
sub
je
mov
xchg
cld
addr16
stos
aad
icebp
js
dec
cvttps2pi
mov
push
mov
nop
push
push
popf
pop
sub
aam
jns
into
out
mov
jno
inc
call
mov
push
pop
push
out
add
int
mov
mov
pop
xchg
lods
popa
sbb
dec
and
xor
jns
cmp
dec
or
push
lahf
test
in
nop
mov
sbb
ret
cmpsl
or
test
sub
fmull
mov
mov
icebp
addb
jnp
mov
push
sub
cwtl
lret
xchg
xchg
cmpsb
movsl
fistpll
repnz
in
and
mov
in
xor
pop
dec
movsb
das
inc
loopne
xchg
inc
enter
popa
jno
xor
call
push
push
enter
dec
adc
popa
out
mov
aad
test
mov
adc
lea
lds
test
mov
push
sbb
or
or
js
arpl
or
sbb
cmp
push
inc
inc
into
inc
dec
inc
daa
or
push
mov
adc
lret
clc
ss
or
sbb
adc
push
lock
imul
mov
mov
pop
add
mov
push
and
jge
sbb
xor
jae
scas
repz
mov
std
rolb
sub
stos
inc
push
into
in
xchg
inc
test
cmp
stc
cmp
pop
loop
repnz
sbb
das
dec
push
push
out
cs
xor
xchg
and
aam
movsl
cwtl
add
das
pop
sbb
mov
movsb
enter
dec
push
mov
push
and
jecxz
inc
pop
or
sub
fadds
cmp
aaa
dec
lock
inc
out
mov
lods
movsl
rcl
daa
dec
lods
dec
adc
mov
ds
mov
in
in
sti
addr16
or
inc
adc
bound
repnz
ret
jge
mov
gs
xlat
jp
fwait
xchg
cltd
jmp
stos
adc
cmp
push
mov
jo
into
scas
inc
loop
fldenv
int
in
lods
pushf
repnz
xor
idivb
xor
arpl
mov
cmp
rcrb
imul
leave
jae
cli
lds
cld
mov
or
xchg
loopne
out
mov
and
sbb
cmc
in
pushf
scas
adc
sub
jle
mov
pusha
inc
je
js
sub
push
outsl
aas
out
icebp
roll
sbb
mov
and
lock
xchg
push
das
cmc
xchg
inc
jp
cwtl
iret
fbstp
push
loopne
arpl
jnp
into
out
incb
shl
push
dec
dec
inc
jmp
cmp
je
hlt
inc
sbb
sarl
clc
inc
andl
jae
les
lret
pop
divl
xor
adc
dec
in
imul
xor
mov
out
fildll
pop
sub
or
jnp
dec
dec
xchg
jbe
jne
loope
xchg
and
dec
mov
xor
jge
insb
xorb
mov
out
mov
jb
ret
or
ficompl
sti
imul
or
sahf
jl
jo
lds
dec
stos
inc
jno
inc
pusha
sbb
mov
aad
cmp
shlb
insl
repz
cmp
out
adc
das
fiadds
loopne
jae
insb
mov
stos
addr16
sbb
xchg
cmp
sbb
ret
imul
xchg
sub
sub
mov
test
xchg
testb
pop
mov
cltd
outsb
sub
lods
push
mov
inc
fmulp
cmc
and
pop
dec
cmpsl
cwtl
aad
cmp
sti
dec
jnp
xchg
and
test
or
or
stos
inc
xor
pop
gs
out
cmp
fildl
dec
bound
mov
jae
cld
ret
sti
pop
repnz
loopne
or
cmp
popa
sbb
pusha
mov
adc
push
loopne
xchg
incb
repz
testl
mov
inc
lcall
mov
mov
sub
dec
test
stos
cmp
jle
mov
mov
and
ss
jl
test
pop
inc
mov
inc
js
xor
adc
daa
or
rolb
or
jmp
dec
adc
ds
clc
or
in
out
stos
push
idivl
imul
shlb
in
mov
insb
pop
or
push
adcl
inc
negb
cmp
and
aas
mov
rolb
push
jo
sub
flds
sbb
and
imul
or
cwtl
lds
dec
divb
in
sub
dec
popa
jno
fimull
into
nop
out
shlb
rol
cmp
xor
mov
or
shll
sbb
fsubrl
pusha
pop
adc
out
xor
data16
in
test
pushf
push
lret
ljmp
aaa
mov
mov
add
or
or
and
clc
inc
mov
gs
mov
movsl
push
aad
in
cmc
cmp
call
push
cwtl
gs
mov
movsl
push
aad
in
cmc
cmp
call
push
cwtl
gs
mov
movsl
push
aad
in
cmc
cmp
call
push
cwtl
in
cmc
mov
punpckhbw
out
xlat
or
int3
int3
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
pushl
call
call
mov
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
push
call
xor
leave
ret
dec
mov
ljmp
nop
into
rcrl
dec
xor
push
sbb
xor
inc
sub
mov
ljmp
ret
stos
rcrl
dec
xor
add
sbb
jae
inc
sub
mov
ljmp
ret
stos
rcrl
dec
outsl
sbb
adc
arpl
sbb
inc
push
stos
mov
mov
xor
cltd
xor
aas
dec
data16
cmp
sahf
stos
insl
enter
stos
inc
repz
xchg
stos
insb
fwait
sbb
fldt
sahf
mov
and
out
out
cmc
clc
xor
scas
pop
mov
gs
je
lcall
fists
jecxz
int
push
xchg
shll
outsl
push
sbb
addb
lcall
orl
es
sub
xor
sub
xor
outsb
jb
orb
stos
test
data16
xor
ljmp
dec
stos
bound
mov
es
subb
sub
inc
or
fcompl
outsb
pushf
or
test
ljmp
ret
stos
rcrl
dec
xor
push
sbb
jae
inc
sub
xchg
lds
std
cmpsb
iret
mov
adc
push
inc
or
pop
ss
mov
mov
out
fnstsw
data16
pop
add
jg
or
sbb
ss
cltd
test
repz
and
jp
push
sbb
jae
inc
sub
mov
ljmp
ret
stos
rcrl
dec
xor
push
sbb
jae
inc
sub
mov
mov
xchg
fisubs
mov
push
idiv
jecxz
test
xor
inc
loope
mov
push
out
xor
jp
out
xchg
and
fdivrl
jb
jl
push
in
mov
mov
mov
test
call
push
add
rclb
add
and
jo
adc
movb
and
jmp
jl
pop
add
cmp
enter
jne
ret
cmp
setnp
and
lret
jle
inc
aaa
mov
mov
shlb
dec
idivl
std
sarb
cmpsl
dec
lods
xlat
addr16
pop
xlat
out
out
pop
mov
les
xor
and
cli
cmp
cmp
add
pop
xchg
mov
sbb
cmpsl
int
xchg
jae
lock
jg
inc
pop
sbb
mov
out
mov
outsl
xchg
pop
decl
adc
loop
jl
push
jl
je
inc
pop
cld
hlt
dec
cmp
mov
xor
xchg
jle
test
jns
call
push
dec
rolb
into
sahf
adc
inc
dec
rolb
sub
pop
jnp
or
push
fdiv
mov
xchg
jae
imul
push
das
cmpl
icebp
adc
pop
flds
das
fsubrs
mov
daa
rorl
and
imul
mov
mov
lea
test
cmp
and
inc
mov
push
xor
mov
mov
cmp
adc
ja
out
setne
rcl
or
cmp
lods
adc
adc
sbb
into
lods
or
inc
lret
mov
fldcw
push
imul
arpl
fcomps
out
mov
pop
jmp
in
jbe
adc
lods
out
pop
or
aas
hlt
mov
fnstsw
jno
adc
bts
dec
inc
sarb
aam
mov
cwtl
jo
inc
mov
jecxz
aad
mov
sub
add
mov
fidivrs
mov
push
in
or
pop
and
fidivrl
repz
pop
popa
jl
mov
clc
dec
xchg
adc
stc
pop
call
cmp
sub
test
incb
or
test
adc
xor
es
cltd
ja
pop
pop
js
scas
leave
mov
incb
sub
sub
cwtl
hlt
fists
arpl
insl
xor
sahf
inc
fs
push
inc
js
mov
mov
push
cmp
lret
push
adc
jp
add
mov
and
fs
sbb
and
or
hlt
aad
jmp
push
push
or
insl
das
pop
fsubp
subb
out
sbb
stos
cmp
dec
xor
jmp
sub
ja
dec
jp
sub
lock
pop
das
movsb
rep
mov
xchg
and
out
push
cld
pop
cs
adc
lcall
fs
ljmp
pop
clc
push
xor
pop
pop
mov
and
loop
push
scas
enter
mov
pop
and
test
push
fisttps
rcrb
xchg
mov
loop
dec
jl
sub
mov
and
pop
mov
lret
adc
inc
fs
sub
sub
cli
imulb
jl
cmpsl
xor
in
pop
dec
and
xorl
push
test
ljmp
pop
jle
or
mov
mov
cmp
in
popf
cs
in
insb
adc
cmp
push
mov
push
sbb
add
jp
bound
test
jae
in
leave
jp
ss
mov
insb
loop
add
jp
fs
aam
push
enter
dec
imul
sub
inc
jae
jae
or
pop
sub
aad
pusha
pop
movsb
push
adc
adc
test
shll
or
mov
xchg
mov
pop
jae
cltd
out
pop
pop
adc
mov
cmp
cmp
push
sahf
mov
add
arpl
je
and
cli
sub
scas
lcall
push
pop
mov
xchg
mov
shr
in
out
adc
mov
jp
jnp
mov
sahf
hlt
cmc
in
mov
test
lret
xor
leave
mov
fstpt
cltd
jo
xchg
xor
inc
xlat
sti
and
aam
cmpsl
mov
out
nop
or
mov
and
inc
mov
mov
jnp
insb
and
rolb
and
jle
ss
jge
lods
adc
xor
mov
fwait
push
movl
sbb
scas
or
ret
mov
mov
inc
lock
in
inc
repnz
push
adc
out
inc
out
out
fcmovu
cmp
push
jne,pt
xor
test
mov
add
push
mov
and
add
inc
out
mov
andl
push
jb
call
rorb
mov
enter
dec
xlat
dec
xchg
stc
jmp
sub
int
sub
cmp
mov
push
pop
sbb
mulb
sbb
cwtl
mov
push
mov
xlat
dec
mov
loopne
insb
mov
rolb
lcall
or
lock
xchg
sbbl
inc
add
fisttpll
in
les
mov
je
lea
jnp
lds
ficomps
int3
inc
sbb
jnp
mov
aam
or
repz
mov
jg
add
jb
pop
fwait
outsl
jae
xchg
push
pop
ljmp
adcl
sub
mov
add
dec
xchg
sti
inc
dec
sub
scas
mov
pop
add
stos
jb
fnstcw
dec
pop
mov
adc
test
pand
push
icebp
sub
insl
or
dec
decl
lret
mov
sub
xchg
inc
repnz
sbbl
push
dec
outsl
insl
fsubr
push
pop
mov
dec
pusha
push
mov
pop
out
xchg
cmp
ficompl
mov
sbb
cmp
inc
gs
in
fwait
sub
cmpsl
lods
adc
or
fdivp
xchg
mov
lods
inc
jnp
pushf
xchg
mov
add
and
arpl
movsb
roll
test
pop
or
inc
inc
sub
fimull
push
xchg
out
jae
lahf
adc
repz
cmp
ret
fiaddl
adcb
cmpsl
sbb
cmp
les
lcall
ret
mov
lods
sub
je
nop
inc
repnz
repnz
xor
fistpl
add
jnp
sahf
pop
or
hlt
imul
jmp
and
xor
pop
or
sub
fadd
mov
imul
insb
loope
or
adc
push
cmp
sbb
add
in
data16
inc
inc
sbb
lea
lea
cmp
and
inc
iret
adc
mov
dec
das
push
int3
int3
mov
cmc
repz
xor
add
js
dec
push
dec
xor
xchg
push
mov
cmpsb
rclb
or
out
jge
aam
mov
daa
or
shll
nop
mov
call
or
fadds
repz
lds
cmp
push
push
add
xor
mov
or
adc
dec
mov
aaa
mov
sbb
sahf
popa
mov
leave
jmp
dec
mov
aas
cld
xchg
jns
iret
jnp
push
jecxz
pop
inc
rcll
inc
sbb
pop
addr16
daa
add
loope
outsl
mov
repnz
movsb
push
imul
jmp
dec
mov
xchg
xor
inc
cli
sub
lret
and
mov
repnz
imul
or
sub
dec
cmc
fisttps
push
adc
insb
mov
stos
outsl
mov
stos
or
pop
into
addb
cmovp
sahf
in
ret
xor
add
cmp
xor
loope
dec
call
jecxz
push
xchg
jo
sub
mov
imul
testb
sbb
insb
pop
jl
es
pop
and
and
push
lock
stos
jne
mov
rcr
sti
sub
mov
jne
dec
adc
cmp
mov
or
inc
imul
sbb
sbb
xchg
sbb
xchg
xchg
je
or
nop
mov
sbb
jg
sub
mov
pop
mov
push
insb
xor
lods
mov
jge
push
cmp
icebp
mov
pop
inc
mov
jg
testw
sub
or
cltd
dec
adc
insl
fcompl
sbb
push
in
lcall
cltd
mov
xor
test
push
add
adc
daa
movsb
scas
pop
ds
mov
sbb
dec
sub
mov
in
rcrb
xchg
shlb
xor
in
and
inc
sub
add
es
std
push
jp
jmp
push
ljmp
jge
jo
cmp
and
sub
stc
cmp
stc
pushf
fdivrl
out
pop
xchg
mov
pop
jmp
aas
sub
adc
lods
arpl
int
xor
mov
into
daa
test
lds
movsb
push
jo
mov
mov
adc
adc
mov
es
daa
ret
addb
rorl
jl
mov
dec
jmp
ficompl
mov
inc
pushf
jae
fsubl
call
xor
inc
xlat
mov
dec
mov
dec
bound
in
or
jg
jge
test
aad
mov
pop
mov
movsl
daa
fwait
int
pop
insb
inc
icebp
pop
push
jp
push
add
and
fildll
leave
sbb
jno
testl
fwait
sbb
sub
lock
in
pop
dec
popa
pop
jnp
gs
or
xor
into
mov
cld
jnp
dec
mov
sahf
mov
test
mov
and
cld
js
xchg
faddl
pop
xchg
test
cltd
lcall
test
in
mov
jmp
ffree
mov
push
pop
fld
aas
sbb
stos
popa
cmp
mov
mov
xchg
sbb
xchg
xchg
mov
mov
sub
or
lahf
in
jns
pop
add
dec
mov
add
test
and
les
pop
cli
ret
hlt
dec
enter
stos
dec
lds
pop
mov
arpl
inc
test
aaa
jl
add
xchg
dec
and
mov
or
lods
xchg
inc
leave
lods
pop
test
jnp
add
push
aas
fs
les
in
push
or
ljmp
imul
shrb
inc
int
push
loope
ja
daa
cmp
xchg
push
pop
ret
sub
fdivs
push
cmp
or
cmpb
clc
lahf
sti
and
xchg
sbb
aam
pop
mov
inc
inc
xor
add
jge
imulb
sbb
jge
divb
stos
ret
je
movsl
sbb
daa
std
push
cmc
mov
mov
add
pop
cmpsb
lock
scas
dec
xor
sbb
sub
rcrl
or
mov
and
mov
mov
inc
insb
and
add
not
lcall
dec
lret
sub
or
ja
addl
das
mov
test
cmp
scas
fcmovnbe
inc
in
xchg
inc
in
mov
or
push
add
xchg
outsl
jno
fsubrl
in
adc
jne
icebp
divl
fmull
aam
xor
out
outsl
cmp
inc
out
ret
push
mov
and
les
or
fisttps
inc
clc
incl
sbb
outsb
mov
cmp
aam
add
lds
sub
mov
in
movsb
mov
pop
repz
fcmovb
xor
decb
add
dec
pop
mov
stos
or
push
adc
popa
push
int
outsb
mov
into
stc
or
cmp
scas
adc
in
push
loope
sahf
inc
hlt
inc
in
or
das
fcmovnu
bound
inc
inc
xchg
cmpsl
mov
add
jne
xchg
test
add
test
stos
push
inc
loope
das
jle
add
or
cs
lods
jle
dec
push
push
int
loop
mov
notl
jbe
movsb
stos
cmp
ss
popa
imul
pop
and
fwait
jecxz
push
and
jecxz
cs
cmc
xchg
addl
mov
pop
adc
insl
add
out
hlt
mov
test
lea
mov
mov
clc
nop
ret
imul
sub
xor
jp
pop
cmc
xor
lods
ja
add
std
imul
jl
ret
jne
in
pusha
adcl
mov
sub
lahf
inc
pop
push
sarl
in
aam
shrb
and
sbb
sub
xor
fldt
pop
inc
push
gs
lods
push
sahf
mov
mov
jp
inc
or
movsl
xor
lret
add
inc
dec
adc
sarb
xor
nop
jl
push
clc
jns
xchg
add
ss
inc
adcl
sub
pavgb
jecxz
push
hlt
pushf
sti
pop
lcall
scas
add
or
int
jne
sbb
jmp
mov
push
sub
sbb
pop
enter
jo
out
in
sub
sbb
inc
decl
lods
fidivl
add
dec
scas
push
pop
push
push
repz
test
in
iret
je
scas
jne
cmpb
cmp
xchg
jb
repnz
and
pop
xchg
xchg
xor
rcrb
mov
jp
mov
fidivl
clc
jmp
stc
insl
jae
inc
adc
cltd
ret
xor
sbb
push
inc
push
pop
cmp
data16
loope
push
loope
les
adc
jbe
sub
testl
pop
shl
mov
loop
clc
neg
data16
xchg
inc
mov
cmp
lods
in
mov
pusha
sub
jae
xchg
mov
jne
sub
pop
cmp
sbb
ret
mov
dec
adc
push
hlt
push
xor
daa
ja
sbb
inc
stos
or
sub
cmp
aam
stos
pop
bound
pop
sub
xchg
sbb
sbb
inc
xchg
divps
or
lds
nop
dec
or
xor
lret
cli
popl
jo
ljmp
sub
lcall
sub
pusha
dec
xor
xchg
das
sbb
mov
fimuls
add
or
pop
lea
outsb
pop
mov
xchg
dec
pusha
dec
pop
jge
aaa
std
bound
mov
and
orw
cmp
fisubrl
lods
mov
lret
sbb
xor
nop
mov
xor
mov
adc
add
jno
pop
int
pop
mov
sahf
mov
push
fisubs
icebp
dec
bound
adc
push
in
sub
stos
cli
pop
jbe
add
cwtl
insl
jmp
pushf
inc
xchg
stos
xchg
in
cwtl
mov
push
sbb
outsb
pushf
xor
push
lods
mov
imul
cli
and
int3
xor
pushl
lods
mov
cli
push
inc
xchg
pop
xchg
inc
daa
lock
sub
mov
dec
icebp
shl
outsb
sti
stc
and
fstps
xor
cmpsl
rcll
add
fisubrl
loopne
xor
mov
call
sub
insb
or
push
dec
pop
xchg
popf
int3
pop
aam
push
sub
fbld
xor
jg
int3
jge
jns
lock
mov
outsl
aas
mov
pop
jns
mov
sbb
popa
xchg
leave
movsb
js
jecxz
mov
loopne
cwtl
and
imul
inc
out
arpl
cmpsl
jne
pushl
xlat
push
xchg
or
jecxz
aam
mov
or
mov
xlat
enter
adc
lock
insb
cmp
jae
imul
dec
mov
cmp
mov
xorl
push
nop
lods
lret
xor
mov
mov
cvtpi2ps
into
dec
inc
pop
nop
stc
fdivrl
je
cmc
mov
pop
and
mov
xchg
xchg
jns
jb
outsb
bound
or
rclb
in
test
jl
movsl
inc
ret
and
faddl
and
ljmp
push
add
pop
stos
decb
fdivrs
mov
inc
mov
add
cmpsl
add
pop
in
inc
ss
loope
imul
inc
ret
call
addl
sub
push
add
ljmp
lret
sub
imul
adc
in
jno
out
xor
cmp
cmp
into
lods
add
jge
mov
call
in
xchg
fsubrl
jo
dec
loop
out
sub
stos
jmp
test
push
sub
lcall
cmp
pop
xchg
scas
sub
sbb
lods
mov
jne
fsub
cli
mov
push
call
dec
mov
add
mov
nop
popf
cld
clc
sbb
fisttps
lods
inc
cmp
cmpsl
data16
sub
mov
enter
iret
pushf
and
sub
dec
mov
xchg
inc
jno
lock
cltd
mov
frstor
adc
inc
jne
in
mov
mov
rcr
and
sbb
icebp
and
into
or
enter
movsb
icebp
jb
cmp
xor
dec
push
loope
cmp
pop
xor
int
stos
xlat
jno
push
cwtl
add
adc
std
insb
mov
shrl
add
iret
imul
and
cld
jae
inc
and
in
iret
cmc
out
sub
sbb
push
mov
inc
repz
jp
xchg
xchg
rcr
xchg
pop
rclb
imul
push
inc
cmp
xchg
jg
in
clc
sbb
or
pop
add
jno
lods
pop
or
fstps
mov
fsubp
mov
jns
pop
dec
cltd
imul
shrl
cld
xchg
push
in
popa
push
popa
shll
push
jbe
int
daa
loop
xchg
and
jo
cmp
push
inc
lds
sub
sbbl
rcll
add
sti
fidivrl
clc
xor
loop
fwait
add
cmp
int
jo
xchg
dec
xchg
or
push
hlt
filds
xor
push
fadds
or
fimull
inc
ds
sbb
inc
cmpsb
aas
add
sarl
enter
inc
lcall
and
mov
or
dec
push
fidivl
dec
xor
out
orb
xchg
dec
test
decb
lret
xchg
mov
or
test
pop
sbb
cwtl
dec
in
jge
faddl
fimuls
or
adc
add
xchg
pop
mov
and
jb
pop
lret
or
out
loope
test
popf
lret
dec
push
pop
loop
imul
scas
sub
fldl
xlat
push
out
out
push
nop
jge
xchg
loop
outsb
test
scas
jmp
xchg
in
mov
adc
imul
lods
cli
inc
fbld
push
dec
lods
jne
push
xchg
gs
mov
fwait
shr
scas
stos
imul
xchg
mov
add
cmpsl
test
jbe
dec
mul
ret
sbb
shrb
mov
xor
out
add
mov
leave
negb
xor
test
pop
in
sbb
punpcklwd
push
es
pop
neg
in
rorl
je
or
and
pop
pop
movsl
or
or
and
rclb
mov
dec
cltd
in
jns
add
inc
xor
add
and
test
das
pushf
adc
scas
push
icebp
hlt
push
in
in
xchg
and
dec
dec
mov
shl
das
mov
pushf
scas
push
insb
insb
push
out
adc
out
int
ficomps
dec
sub
repnz
jmp
inc
dec
stc
cwtl
jo
insl
xor
sbbb
cwtl
inc
loope
push
sbb
loop
inc
and
inc
nop
inc
pop
addl
fnstsw
fidivs
fwait
adc
lods
lea
mov
inc
adc
std
lods
lods
dec
bound
aad
push
dec
ret
sbb
lret
fiadds
cli
dec
popf
in
jne
xchg
mov
inc
hlt
stos
fisubs
stos
sbb
fldl
mov
jae
and
xchg
dec
lret
cltd
cmpsb
cmpb
data16
outsb
adc
subb
push
shrl
inc
imul
push
or
aas
lea
insb
and
mov
lods
dec
je
and
lods
xchg
clc
add
lods
arpl
inc
out
mov
lret
pop
sub
push
xor
pop
stos
jae
hlt
ljmp
mov
imul
cmpsl
in
movsb
subl
aaa
cmp
mov
cmp
movsl
repz
xor
outsb
in
es
cs
pop
push
shrb
arpl
pop
sbb
dec
out
push
scas
repz
or
inc
pop
cmp
mov
jbe
arpl
xor
sub
cmpb
sub
and
andb
je
xchg
sub
mov
pop
test
mov
int3
lds
loopne
das
lods
jne
arpl
hlt
mov
xchg
stos
jecxz
sub
mov
scas
mov
aam
shrl
and
fisubrs
fstpt
cmp
sbb
gs
or
add
jge
cmp
lods
mov
jle
into
adcb
jo
add
fsubrs
and
cmp
mov
dec
outsb
dec
lods
adc
sbb
inc
cmp
test
outsb
call
fildll
aad
incb
push
ret
sar
out
imul
inc
pop
mov
inc
pop
andl
sub
fucomi
inc
fdivrs
repz
mov
lahf
pop
xor
adc
xchg
aam
xor
or
xchg
jmp
jmp
shrl
test
or
mov
push
push
xor
into
push
sti
sbb
int
cmp
fildl
into
push
test
lret
dec
clc
jns
xor
faddl
imul
cltd
cltd
cltd
or
lcall
sub
scas
sbb
fidivl
lret
push
fwait
cwtl
insl
push
repz
jp
jecxz
push
vmovapd
roll
pop
fs
pop
pop
mov
push
inc
subl
or
or
fsub
shll
bound
mov
sub
jmp
dec
leave
dec
xor
and
xor
call
es
ja
notb
push
lret
lret
pusha
xlat
fimuls
mov
sub
lcall
rcrl
dec
xor
push
sbb
jae
inc
sub
mov
ljmp
ret
stos
rcrl
dec
xor
push
sbb
jae
inc
sub
cmpsl
lret
sub
lcall
rcrl
dec
xor
push
sbb
jae
inc
sub
mov
ljmp
inc
stos
sub
fmull
rolb
push
insl
jmp
mov
mov
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
pop
mov
push
adc
arpl
mov
lret
sbb
or
pop
stos
dec
push
mov
push
sbb
or
cmp
sub
mov
lret
sbb
or
sbb
test
or
inc
jmp
ficoml
mov
mov
sub
dec
sbb
sbb
or
add
int
cmpsl
leave
and
dec
popa
mov
iret
loop
push
fwait
mov
sbb
jbe
jp
push
adc
scas
mov
aaa
add
or
test
or
sbb
loope
mov
xchg
je
cmp
adc
add
js
test
pop
lods
xor
pop
push
aas
mov
clc
cmc
jmp
iret
loop
inc
ljmp
xchg
scas
cmpsb
push
fistps
push
test
jbe
clc
mov
jle
bound
lds
leave
imul
fildll
dec
push
test
iret
jo
mov
fs
dec
xor
sti
or
or
insb
mov
imul
dec
jmp
sub
pop
sub
sbb
or
jns
imul
lock
je
jg
sub
mov
jno
dec
repz
sbb
pop
in
or
ret
cltd
mov
lea
pop
leave
loop
mov
xchg
sbb
add
cmp
sbb
lock
or
sub
pop
stc
or
cmp
sub
fidivrl
lret
sbb
or
pop
stos
dec
pop
mov
push
sbb
or
cmp
sub
fidivrl
lret
sbb
or
pop
stos
dec
pop
mov
xor
repnz
or
loop
cmc
or
imul
aad
int
xor
mov
ret
dec
adc
or
cmc
xchg
shl
pushf
or
icebp
inc
not
jg
xchg
lods
xchg
sbb
test
pop
adc
jp
lods
fnstenvs
test
into
les
pusha
mov
data16
xchg
jmp
and
pop
pop
add
add
mov
repnz
cmpsl
sbb
icebp
push
push
nop
pop
ljmp
icebp
adc
add
fcom
mov
pop
and
insb
ret
add
or
aam
mov
hlt
sar
add
sbb
xchg
xchg
inc
xchg
nop
jae
mov
lock
and
or
dec
xlat
xchg
sbb
inc
jne
fwait
rorb
fcmovb
xor
int
mov
cmp
xchg
push
fldl
jmp
inc
in
mov
cli
jecxz
xchg
out
dec
rcll
mov
push
mov
sub
mov
decb
scas
rcr
int
or
jge
dec
jbe
lds
push
mov
stc
cmpsb
add
scas
add
mov
aam
and
sbb
dec
sbb
call
jae
ljmp
sub
lock
add
mov
sub
std
adc
cmp
subb
xor
int
dec
xor
imul
fidivs
jle
lea
sti
fmuls
lret
mov
xchg
sbb
lret
mov
nop
and
fwait
pusha
stos
xchg
and
stos
int3
mov
jl
sbb
cli
mov
repnz
fisubrl
inc
push
jle
lods
movsb
fwait
jle
jmp
push
scas
js
add
xchg
xchg
outsb
inc
push
inc
jb
dec
jb
leave
pushf
jp
xchg
repz
jbe
cmpsl
outsb
mov
push
les
nop
orl
lcall
loope
xlat
test
mov
cmc
inc
leave
nop
jne
pop
push
cmc
stos
jg
roll
push
xchg
sub
aas
pop
sub
lods
out
incb
jnp
jmp
cld
sbb
adc
in
pop
mov
cltd
dec
dec
orb
inc
test
dec
pop
fisubrl
into
imul
jne
enter
daa
sahf
or
enter
lds
inc
out
fwait
movsl
icebp
leave
inc
push
fistpl
sbb
int
movsb
dec
scas
add
je
mov
dec
ret
sub
xorb
cmp
add
mov
cwtl
loopne
sub
enter
sbb
mov
movb
inc
stos
stc
in
sbb
or
xor
scas
mov
pop
movsl
js
les
jno
or
fidivs
sbb
mov
dec
mov
mov
or
aas
lret
incl
inc
enter
nop
push
outsb
sub
lcall
pop
cmp
fstl
mov
add
nop
mov
out
cmp
or
mov
xor
ret
mov
test
push
and
imul
repz
into
inc
rcrb
scas
jae
xor
rorb
int
xor
push
repz
xlat
das
push
dec
addl
cmp
loopne
cmp
push
aas
cmpsb
add
clc
mov
xchg
inc
ret
jno
sbb
cmp
outsl
cwtl
rcrb
sbb
add
mov
push
push
mov
adc
pop
std
fstpl
xor
gs
add
push
cmp
lods
cmp
fcmovnu
movsl
dec
enter
incb
popa
stc
push
test
pop
jp
dec
push
mov
mov
jp
xor
lret
scas
aas
sub
dec
jb
push
jge
xchg
ja
fdivrs
pushf
ja
jge
sub
insl
sbb
daa
mov
dec
xchg
sub
and
push
stc
push
cmpsb
sbb
pop
add
mov
cmpsl
pop
lock
or
lods
and
or
push
push
add
sarb
nop
dec
cmp
sbb
dec
cmp
dec
es
std
test
icebp
test
rorb
sub
or
cmc
and
sub
mov
xor
int3
fcoml
pushl
ja
inc
and
pop
in
test
mov
jle
ljmp
pop
repz
add
mov
jmp
mov
in
rolb
lods
test
jno
test
sbb
es
lods
dec
push
or
int3
mov
xor
out
cmp
gs
adc
pushf
mov
sub
add
and
inc
cltd
mov
sbb
mov
test
push
notb
dec
aad
mov
adc
mov
test
ljmp
fcom
lods
ss
push
pushf
daa
addr16
xlat
pushf
out
sti
test
ja
mov
xchg
leave
jge
mov
fdivrp
std
sub
data16
cmpb
push
inc
jp
push
stc
xchg
jmp
outsl
and
lds
pop
fwait
roll
pushf
or
xor
les
fiaddl
test
add
mov
das
dec
outsb
inc
in
pop
push
js
pop
or
sub
loop
mov
dec
or
jmp
das
movsb
iret
jae
stc
fwait
push
int
pop
loopne
mov
sub
movsl
sbb
and
scas
add
xor
test
jmp
data16
stos
dec
clc
dec
insb
movsl
mov
fwait
aaa
insb
dec
add
cmpsb
xchg
ror
in
or
div
sub
jl
xor
testl
inc
or
adc
lea
aaa
in
cmc
mov
loopne
inc
stos
or
ret
in
cmp
cmp
push
cmpsl
mov
push
js
sbb
std
mov
jle
xchg
int3
dec
and
mov
hlt
adc
in
std
test
rorl
xchg
dec
data16
xchg
loop
dec
and
loopne
xor
cmp
jnp
mov
stos
sbb
cltd
iret
imul
mov
enter
fildl
inc
push
cmp
xchg
std
and
popf
mov
stc
shlb
push
xchg
inc
mov
fcoms
test
pop
dec
sbbb
jmp
insl
sub
dec
mov
test
mov
repz
adc
test
rolb
je
cld
dec
js
adc
aad
fwait
pusha
push
dec
fwait
jp
in
pop
xor
mov
rcll
mul
pop
xchg
shlb
push
cmpsb
fnstcw
test
pop
fsts
mov
es
enter
adc
inc
sbbb
push
lods
fistl
mov
jbe
into
mov
outsl
out
pushf
dec
pop
pop
mov
shl
sbb
pop
lds
movsl
pop
add
mov
shlb
std
andb
inc
imul
or
cmp
repz
adc
jbe
xor
int3
mov
test
movsb
mov
xchg
adcl
aas
lcall
push
cld
push
adc
or
sbb
not
push
test
fs
sbb
push
xchg
bound
shl
xor
mov
outsb
pop
xchg
pop
sub
inc
adc
enter
aad
mov
je
sahf
mov
inc
in
jns
jne
insb
movsl
or
jmp
shrl
dec
mov
mov
lds
mov
fmull
dec
jle
jne
mov
sbb
enter
sub
sti
dec
rcrb
mov
xchg
js
push
jnp
mov
xchg
ds
xor
sub
mov
xor
test
jecxz
loope
sub
mov
andb
and
sbb
xchg
cltd
out
push
das
inc
or
xchg
fdivs
add
sbb
sbb
or
out
imul
inc
mov
movl
sub
fcoms
jp
dec
mov
xchg
ret
xor
ja
xchg
fwait
jl
fwait
decb
sub
mov
ror
sbb
repnz
xchg
jmp
shll
inc
and
push
int3
and
repnz
pop
xchg
cmp
cmc
push
aad
mov
cld
leave
dec
stos
int
mov
pop
ja
adc
push
push
dec
ret
mov
notb
xor
and
insl
sub
or
mov
xchg
int
xchg
negb
push
pop
jp
dec
mov
pop
lods
jne
xlat
shlb
lret
out
lahf
inc
iret
sub
cmp
pop
andl
das
and
push
and
jno
or
into
je
out
rclb
mov
cmc
fistl
jge
jg
cwtl
xor
pop
adc
cwtl
popa
push
mov
lock
arpl
xchg
cmpb
mov
lcall
mov
add
fwait
imul
add
xchg
inc
stc
cltd
ja
call
outsb
add
push
cmpl
push
lret
fldt
push
adc
inc
ret
pop
dec
jecxz
inc
lock
xorb
pop
bound
pop
or
cpuid
lcall
sbb
mov
adc
sbb
fistps
cmc
or
add
and
pop
push
dec
add
mov
repnz
jl
add
cmpsb
hlt
sti
fucomp
sbb
inc
in
sbb
lods
adc
xor
loop
pop
dec
inc
arpl
jns
add
adc
inc
adc
repz
add
inc
data16
aaa
sbb
add
lods
dec
aas
sbb
imul
xor
repnz
filds
push
aas
mov
psubd
mov
pop
mov
lock
add
into
andl
xor
int
inc
call
lds
and
adc
scas
dec
push
adc
scas
cld
push
add
xor
imul
in
push
stos
sbb
adc
xor
or
andl
or
sbb
add
mov
push
adc
inc
out
xchg
push
fists
lea
sub
mov
push
loop
dec
lods
mov
pop
or
pop
xchg
dec
mov
mov
out
jnp
xchg
dec
insb
mov
add
arpl
push
pop
jle
or
cmp
hlt
inc
test
xchg
into
test
int
dec
jnp
xor
mov
xlat
jb
push
jnp
aaa
xchg
pop
jbe
lea
adc
cmp
push
pop
push
cmc
push
adc
inc
loope
add
lods
pop
jmp
jae
pop
testb
daa
popf
loopne
jecxz
and
sti
sarb
cmpsl
imul
sbb
mov
sub
bound
aad
stos
xchg
cmp
jb
stc
inc
mov
lods
out
cmp
cs
pop
inc
add
cmp
cs
push
cli
stc
stos
es
inc
js
dec
es
clc
and
sbb
add
mov
aaa
mov
adc
lret
adc
dec
dec
push
outsb
or
or
jecxz
loopne
mov
dec
lret
lock
stos
fstpl
dec
and
fwait
inc
xor
fildll
xor
imul
adc
xor
insb
test
mov
mov
dec
loop
les
mov
test
cmp
sub
addl
sarb
gs
int3
pushf
and
pop
mov
cmp
fildll
inc
pop
enter
jae
mov
jle
cmp
pop
sub
fs
mov
jns
out
cltd
jae
and
mov
nop
cmpsb
sar
jbe
mov
add
mov
xchg
mov
push
jo
xbegin
xchg
imul
or
js
dec
mov
adc
sbb
and
xchg
lods
mov
test
incl
mov
fildl
ja
popf
arpl
mov
ficomps
imul
adc
cmp
sub
mov
push
adc
mov
jmp
stos
bound
mov
pop
dec
jg
dec
and
enter
mov
daa
mov
mov
loopne
insb
dec
faddl
add
movsl
insl
jecxz
inc
aad
scas
stos
or
repnz
inc
mov
mov
hlt
mov
bound
add
es
dec
mov
out
faddl
push
leave
mov
outsb
shrl
ds
in
mov
shll
inc
push
xchg
and
mov
pushf
ror
and
stc
pop
push
lds
cmpsb
mov
and
inc
xchg
inc
xchg
jmp
cmpsl
shlb
je
in
mov
pop
lret
mov
xor
cwtl
mov
sbb
xchg
inc
inc
cwtl
sub
lret
mov
add
aad
mov
dec
sbb
mov
xchg
aaa
shll
dec
sbb
aaa
adc
call
mov
iret
mov
sub
jl
jl
pop
std
or
xor
cmp
cmp
test
push
and
xchg
stos
push
mov
daa
cmp
or
roll
xor
fbstp
jl
sub
jno
sub
mov
insb
outsb
pop
das
stc
push
scas
movsb
scas
xchg
stc
xor
les
stos
mov
cmp
fsubrs
movsb
sahf
in
paddd
leave
inc
cmp
pminsw
mov
mov
ljmp
dec
sub
mov
sub
popa
xor
pop
pop
and
mov
outsb
repz
loop
mov
dec
dec
mov
and
cmc
jmp
out
mov
js
jp
mov
data16
gs
enter
and
mov
push
pop
lods
lock
add
sub
call
out
mov
fdivrl
ret
daa
jns
or
aam
jae
jg
cwtl
push
push
xchg
adc
adc
add
and
xchg
mov
bound
imul
jno
pop
loopne
les
fcos
movl
pop
rcl
jnp
pushl
hlt
sub
xchg
mov
rep
adc
cwtl
lahf
jmp
mov
dec
gs
xchg
jmp
div
adc
pop
cmp
cwtl
add
fcmovnu
mov
jecxz
jo
outsl
cwtl
mov
mull
or
icebp
cmpsb
mov
add
xchg
mov
pop
shll
push
push
dec
add
sbb
xchg
push
mov
jo
dec
ror
push
pop
aas
pushl
lods
adc
test
mov
cmp
nop
es
jbe
pop
push
out
sbb
cmpsl
jg
sbb
subb
ret
in
push
cmpsb
or
dec
dec
xor
ja
js
and
mov
lret
jecxz
mov
jb
in
xchg
xchg
xor
sub
fldcw
add
in
dec
test
out
dec
sub
mov
mov
ret
push
bound
arpl
cli
dec
mov
or
leave
lods
jne
in
push
mov
popa
push
pop
mov
cli
dec
sar
ja
mov
and
mov
lods
or
xor
fbstp
sbb
jbe
add
outsl
sbb
daa
push
add
lods
in
pop
cmp
inc
ds
mov
sub
std
inc
jnp
adc
xchg
roll
sub
mov
mov
dec
pop
lds
mov
lea
ss
add
scas
inc
and
xchg
call
icebp
aas
and
xor
xchg
push
or
mov
mov
out
pop
aaa
xlat
cmpsl
clc
sub
jg
pop
adc
push
imul
mov
mov
aad
inc
aaa
xchg
aas
xor
cltd
fidivs
or
pop
cmp
jb
jae
dec
addr16
imul
shlb
inc
sub
push
fsubrl
sbb
lock
inc
pusha
dec
ret
xchg
xchg
popf
xchg
cmc
pop
data16
push
inc
mov
int
repz
hlt
cli
fimull
aam
jge
mov
cmp
fs
sbb
dec
inc
aaa
lods
negb
xchg
mov
push
adc
idiv
mov
loop
andb
shr
or
or
push
outsw
and
pop
jge
add
stc
inc
aaa
push
ret
add
or
in
lods
sbb
cmc
jecxz
jl
inc
adc
cmp
mov
xor
mov
aas
hlt
sbb
std
add
lahf
dec
fdivrp
ret
jg
mov
popl
push
leave
hlt
sarb
sub
pop
das
xchg
mov
mov
adc
divb
mov
int
out
lret
es
fdivrs
in
sub
repnz
stos
sbb
or
pop
aas
repnz
xchg
and
add
xchg
divl
rcrb
adc
xor
jno
mov
aad
movl
xor
inc
in
xor
and
xor
sub
arpl
call
scas
pop
negb
mull
enter
loop
mov
jp
pushf
rclb
push
cmpb
lcall
inc
and
push
test
xlat
mov
iret
mov
push
pusha
xchg
jge
loope
les
or
mov
mov
jp
sbb
mov
push
push
push
jae
sar
lock
aas
test
push
push
insb
sbbl
xorl
sub
mov
xor
push
push
into
fwait
shl
xchg
out
sub
loop
mov
movsl
adc
jmp
mov
pop
inc
lcall
xlat
or
xor
sahf
dec
sti
mov
xor
stc
movswl
aas
inc
pop
loope
aas
data16
gs
fwait
mov
aas
scas
addl
push
fwait
push
push
cwtl
or
lret
les
pop
ret
scas
mov
out
inc
lret
leave
pop
xor
mov
repz
fisubrl
mov
and
inc
call
inc
test
test
js
mov
repnz
movsl
jno
xor
adc
lcall
pop
out
shrl
lock
inc
repz
mov
int3
adc
inc
mulb
scas
leave
idivl
add
fsubs
sbb
lods
cmp
push
gs
scas
cltd
pop
not
mov
fbstp
les
mov
dec
or
gs
jne
ret
add
push
jns,pn
push
test
movsl
movsl
xchg
sbb
pop
push
aas
jbe
lcall
repz
cmp
adc
add
jno
mov
inc
or
inc
xchg
mov
aaa
sti
sbb
stc
pop
cmpb
cwtl
mov
out
push
ficoml
rolb
lcall
sbb
push
push
popa
movsl
test
cmp
push
and
ljmp
push
xchg
aad
and
das
pop
dec
adcl
es
or
int3
ret
dec
movsl
clc
mov
es
addr16
notl
ror
outsb
xorl
shll
or
lea
cmp
pusha
xchg
fdivr
mov
and
daa
fs
xchg
xor
cmp
lret
mov
pop
insl
shrl
adc
mov
sbb
sub
fstps
adc
jnp
into
sub
xor
adc
test
add
subb
dec
and
imul
addr16
or
sahf
pushl
cld
outsb
in
adc
xor
pop
xor
cmpsb
std
inc
call
mov
xchg
jle
lret
test
mov
bound
and
aaa
and
jo
mov
and
addb
jnp
mov
popa
fidivrs
or
fnstsw
mov
sbb
ret
inc
inc
and
push
pop
outsb
push
and
pop
adc
cmp
jo
and
scas
mov
ja
sbb
push
xchg
inc
fsubrs
or
bswap
fsub
icebp
aaa
sub
jmp
loop
jle
push
push
xlat
add
loope
out
jmp
scas
add
pop
lret
shll
dec
fwait
sub
leave
mov
or
dec
add
hlt
jl
mov
pop
push
lods
cmp
mov
outsb
sbb
aad
pop
mov
cmpl
or
stos
push
in
sti
mov
mov
loopne
std
sub
add
subl
push
fldenv
mov
mov
mov
xorb
xchg
lock
push
cmpsl
adc
mov
into
sub
imul
les
sarl
jle
mov
add
stos
xchg
and
imul
pop
xchg
cmp
das
flds
ret
data16
inc
lret
mov
mov
insb
mov
test
shlb
sbb
int3
cmp
cmp
or
jg
pushf
xor
add
sahf
cltd
fwait
push
out
jle
jl
mov
or
cltd
aam
cmp
int3
xchg
xor
pop
cld
jns
pop
js
imul
jnp
pushf
mov
mov
cmc
imul
mov
xor
pushl
pop
je
dec
lea
or
out
xchg
add
xor
cmp
push
mov
mov
cmp
xor
loopne
insl
cmpsl
mov
jb
stos
pop
xchg
add
pushf
adc
xor
lea
fwait
pop
jge
sub
jnp
mov
mov
imul
arpl
in
enter
ret
and
aam
xchg
popa
sub
sti
xor
hlt
mov
mov
movsl
push
dec
out
add
imul
aaa
xchg
ljmp
push
mov
xchg
adc
cli
rcll
mulb
jbe
sub
jo
mov
leave
xor
js
dec
xchg
lahf
repz
jbe
dec
loop
cltd
xchg
int
mov
pop
insl
movsl
push
mov
push
pusha
and
std
inc
sbb
cli
data16
mov
adc
and
out
push
or
lret
in
mov
adc
fwait
and
cwtl
scas
jbe
mov
xchg
lcall
mov
scas
jae
cld
cmc
xchg
divb
inc
shl
jecxz
or
jbe
mov
lods
test
or
pop
jge
addr16
cmc
dec
jmp
enter
loopne
test
int
out
sub
mov
jae
sbb
cmp
pop
and
mov
inc
rorb
dec
fisttpl
pop
dec
outsl
push
lods
jo
outsl
mov
mov
lahf
or
mov
jb
and
sub
xchg
lret
ret
out
int
fisubrs
pusha
sbb
mov
ds
mov
adc
pop
out
push
or
imul
sbb
js
call
pop
daa
fisubrs
push
push
sub
loop
dec
mov
push
pop
push
inc
or
cmp
sti
add
outsb
fistpll
sar
push
add
test
divb
outsb
movsb
sub
iret
ret
pop
sub
jbe
sbb
or
cmp
sub
fidivrl
lret
sbb
or
pop
stos
dec
pop
mov
push
sbb
or
cmp
sub
fidivrl
lret
sbb
or
pop
stos
dec
pop
mov
push
sbb
push
imul
mov
out
or
pop
lcall
cltd
inc
mov
stc
sbb
cmp
stos
leave
fidivrl
xor
jle
icebp
add
int3
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
addb
lods
add
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
add
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
add
add
nop
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
push
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
push
add
lods
push
add
mov
add
mov
push
add
int3
push
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rolb
add
pop
add
adc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jl
add
je
add
insb
or
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
or
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
or
add
add
nop
or
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
or
add
or
add
or
add
add
or
add
adc
add
daa
or
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
or
add
add
pop
or
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
