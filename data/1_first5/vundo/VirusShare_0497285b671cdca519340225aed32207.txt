push
jmp
mov
es
jmp
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
fstps
or
push
clc
shll
aaa
movsb
or
adc
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
pop
mov
jmp
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
push
push
inc
pop
push
push
sub
pop
push
push
push
push
xor
mov
add
pop
pop
push
add
shr
shr
dec
pop
xor
cmp
je
mov
cmpl
je
push
push
push
push
push
call
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
push
add
pop
pop
push
push
push
push
call
xchg
sahf
jg
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
push
add
pop
pop
add
push
push
call
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
push
add
mov
push
push
push
push
push
push
call
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
push
add
ret
jmp
clc
shll
jmp
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
aam
pushf
movsl
jp
mov
inc
pop
xor
shlb
mov
add
push
add
pop
add
mov
xor
xor
jmp
into
out
cld
test
or
jmp
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
fildl
hlt
sbb
fidivrs
mov
push
call
push
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
push
add
mov
push
push
push
push
push
call
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
push
add
mov
lods
mov
push
dec
ror
mov
add
xchg
jmp
xor
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
jmp
sbb
fidivrs
ljmp
jmp
lea
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
push
xchg
test
sub
out
sbb
cli
stos
jmp
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
push
ror
pop
call
push
call
push
not
add
sub
pop
cmp
jbe
push
shr
rol
shl
pop
pop
jmp
mov
scas
jmp
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
aam
jb
inc
jns
pop
insb
xor
xchg
pop
pop
jmp
movsl
jp
mov
inc
pop
xor
shlb
push
dec
adc
div
fs
xchg
ror
into
out
cld
test
or
add
sub
add
jle
sub
cs
mov
sbb
xlat
jmp
les
cs
pop
gs
dec
loope
hlt
sbb
jmp
fidivrs
js
mov
and
inc
jmp
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
pop
pop
ret
pop
push
not
add
xor
pop
jmp
nop
push
call
sbb
cli
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
push
add
nop
cmpl
jne
jmp
push
call
daa
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
add
and
nop
push
push
push
push
call
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
sbb
add
add
nop
cmpw
jne
jmp
nop
jmp
clc
shll
jmp
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
aam
pushf
movsl
jp
mov
inc
pop
xor
shlb
nop
cmpw
jne
sub
push
push
not
mov
sub
pop
push
push
push
push
push
push
push
push
call
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
add
add
and
push
call
nop
push
mov
dec
lea
pop
nop
mov
push
push
push
push
push
call
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
push
add
nop
push
shl
shl
pop
nop
and
nop
push
sub
add
inc
pop
sub
nop
sub
nop
push
add
pop
ror
nop
push
push
shr
pop
nop
sub
jmp
xor
sub
xor
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
jmp
jmp
js
mov
and
inc
push
nop
mov
inc
lcall
cmpsl
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
and
movb
fstps
jne
push
dec
add
pop
nop
push
call
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
or
add
add
nop
push
push
push
push
push
push
call
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
and
add
add
add
jmp
pop
sub
je
push
push
inc
add
mov
xor
pop
jmp
lock
and
movb
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
jmp
andl
add
jne
out
jmp
or
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
loope
pop
aas
or
push
clc
shll
aaa
movsb
or
or
shl
dec
jl
push
call
or
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
push
add
call
push
lea
xor
rol
mov
xor
xchg
push
push
push
push
call
scas
mov
shll
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
adc
add
add
call
jmp
loopne
pop
aas
or
push
xor
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
jmp
add
and
outsb
setl
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
xor
push
ror
pop
sub
push
push
call
jmp
sub
mov
sbb
jmp
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
jmp
jmp
and
inc
push
nop
mov
lret
jmp
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
rorb
add
add
xor
push
push
add
not
mov
add
pop
push
push
push
push
push
push
push
push
call
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
add
add
call
push
push
push
inc
add
mov
sub
pop
push
mov
shl
ror
pop
push
push
call
mov
push
not
xor
pop
push
push
rol
lea
pop
push
mov
add
add
jmp
sbb
xlat
les
xor
cmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
aad
lret
test
cmpsw
jmp
push
std
repnz
sar
lahf
in
mov
mov
sub
push
xchg
test
xor
imul
stos
or
push
and
fstps
xchg
stos
fwait
cmp
jbe
in
add
push
dec
mov
push
push
push
push
call
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
push
add
xor
push
push
push
push
push
push
push
call
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
push
add
add
push
call
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
add
and
add
mov
push
push
push
push
push
call
xchg
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
push
add
xor
push
push
call
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
push
add
add
jmp
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
sub
mov
or
idivb
icebp
jmp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
jmp
push
clc
shll
jmp
aaa
movsb
or
push
das
cmp
repnz
dec
sub
daa
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
rep
jmp
mov
int3
adc
mov
int
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
push
call
cmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
add
add
mov
push
rol
lea
dec
mov
mov
add
pop
add
push
sub
pop
add
mov
push
push
push
push
push
push
call
jecxz
cltd
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
push
add
xor
push
push
push
push
push
push
push
push
call
jmp
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
push
add
add
push
sub
shl
dec
mov
xor
xchg
push
sub
pop
push
call
push
push
push
mov
lea
mov
add
pop
push
shl
add
add
pop
push
push
call
jmp
loopne
pop
jmp
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
shr
and
jmp
pushf
movsl
jp
mov
inc
pop
jmp
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
push
push
jmp
sub
mov
cmp
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
jmp
push
nop
mov
inc
lcall
std
jmp
repnz
sar
lahf
jmp
in
mov
mov
test
xor
imul
stos
jmp
or
push
and
fstps
fwait
cmp
jbe
in
add
push
mov
push
push
push
call
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
push
add
add
add
push
lea
pop
mov
xor
push
push
push
push
push
push
push
push
call
xchg
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
add
and
add
push
add
pop
mov
push
push
push
push
push
push
call
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
add
xor
push
push
push
push
push
push
call
dec
sub
daa
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
add
add
and
add
push
xor
pop
rep
jmp
cs
pop
jmp
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
jmp
std
jmp
repnz
sar
lahf
in
mov
mov
jmp
test
xor
imul
stos
or
push
and
fstps
cs
cltd
test
inc
shl
lea
mov
sub
pop
pop
mov
jmp
add
es
adc
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
jmp
aas
or
push
clc
jmp
shll
aaa
movsb
or
push
das
cmp
jmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
loopne
punpckhbw
movsl
es
fldt
call
sub
pop
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
push
add
push
push
call
lea
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
add
mov
push
sub
not
rol
add
pop
add
push
push
push
xor
inc
pop
push
mov
mov
jmp
daa
aam
jmp
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
mov
int
jmp
xchg
ror
into
out
cld
test
jmp
or
cs
cmp
jle
sub
mov
sbb
xlat
les
cs
pop
gs
cmp
dec
loope
hlt
sbb
fidivrs
sub
lea
nop
mov
inc
lcall
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
fsqrt
stos
or
mov
push
and
fldpi
negb
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
sub
mov
or
icebp
push
inc
sub
mov
jmp
enter
je
adc
xor
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
jmp
insb
xor
pop
mov
pop
add
and
outsb
setl
inc
pop
xor
shlb
int3
adc
div
fs
xchg
rolb
fcos
jae
popl
mov
push
push
call
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
add
add
and
add
push
push
push
push
push
push
push
push
call
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
add
add
xor
jmp
xchg
pop
add
cmp
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
jmp
out
cld
test
or
add
addl
jle
lea
push
inc
lea
pop
mov
jmp
pop
gs
dec
loope
jmp
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
jmp
repnz
sar
lahf
jmp
in
mov
mov
push
xchg
test
das
insl
mov
sbb
cli
stos
or
push
and
fstps
fwait
cmp
loopne
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
add
push
push
call
adc
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
push
add
xor
push
ror
rol
mov
pop
rol
xor
push
not
pop
inc
push
add
xor
pop
cmpb
jne
push
push
push
push
push
push
push
push
call
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
add
add
cmp
je
inc
jmp
cwtl
icebp
push
inc
sub
mov
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
jmp
push
das
cmp
sbb
inc
out
aam
jb
cmp
jb
push
ror
shl
mov
mov
pop
mov
push
xor
pop
add
movzwl
mov
add
push
call
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
add
and
mov
add
push
dec
add
pop
pop
pop
push
shl
lea
pop
pop
push
add
shl
ror
pop
leave
ret
xchg
aam
adcl
daa
adcl
add
jmp
xor
dec
lea
mov
xor
xchg
push
push
push
push
push
call
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
sbb
add
add
call
push
push
add
xor
add
mov
add
xchg
push
inc
mov
sub
xchg
push
ror
dec
pop
push
call
imul
push
dec
dec
mov
sub
xchg
push
push
call
fildll
push
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
push
add
add
push
mov
mov
xor
xchg
push
push
lea
mov
sub
pop
push
push
lea
shr
not
mov
add
pop
push
inc
mov
xor
xchg
push
rol
add
rol
inc
pop
add
push
call
jmp
popf
adc
loopne
pop
aas
jmp
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
jmp
pop
add
and
outsb
setl
inc
pop
xor
jmp
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
xorps
cld
rol
mov
pop
push
push
push
call
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
push
add
xor
add
push
push
push
xor
xor
dec
shr
mov
sub
pop
push
push
push
push
push
push
push
call
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
push
add
sub
add
push
push
push
sub
lea
mov
xor
pop
jmp
mov
sbb
xlat
jmp
lods
loop
xor
cmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
xlat
mov
test
cmpsw
push
std
repnz
mov
push
jmp
lahf
in
mov
mov
push
xchg
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
jmp
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
insb
inc
add
push
push
add
sub
not
shr
mov
add
pop
push
shl
pop
push
call
push
push
lea
add
rol
mov
mov
shr
not
pop
push
push
rol
rol
ror
mov
sub
xchg
push
push
ror
mov
sub
pop
push
shr
add
mov
pop
push
push
push
push
push
push
push
push
push
call
daa
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
push
add
call
imul
add
pop
push
push
push
push
push
push
call
jmp
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
push
add
push
push
shl
mov
sub
xchg
push
push
shl
lea
mov
sub
pop
push
push
push
push
push
push
push
push
call
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
sub
add
add
push
call
mov
push
add
sub
not
mov
sub
xchg
push
push
push
call
mull
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
adc
add
add
push
call
push
push
push
rol
shr
sub
mov
mov
add
pop
push
push
not
not
mov
mov
sub
pop
push
add
not
pop
push
push
add
shl
pop
call
jmp
dec
outsl
jl
sub
es
mov
cmpb
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
mov
push
push
push
push
push
push
push
push
call
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
push
add
mov
mov
jmp
xchg
cmp
jle
fildll
push
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
ljmp
mov
lea
nop
mov
inc
lcall
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
push
and
push
push
push
call
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
push
add
pusha
push
push
push
push
call
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
sbb
add
add
push
jmp
push
and
fstps
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
fucomi
das
or
icebp
push
inc
sub
jmp
scas
dec
fsub
mov
popa
xchg
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
loop
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
push
call
jmp
pop
add
and
pushf
movsl
jp
mov
jmp
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
jmp
or
add
cmp
jle
hlt
fucomip
cs
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
jmp
fidivrs
js
mov
and
inc
push
popa
push
shl
add
mov
sub
xchg
push
push
push
push
call
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
push
add
push
push
push
push
push
call
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
add
and
call
push
ror
mov
sub
xchg
push
push
push
push
push
call
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
subb
add
add
push
call
push
inc
mov
sub
xchg
jmp
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
adc
push
das
cmp
sbb
hlt
sub
cs
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
fisubrs
mov
inc
pop
xor
jmp
shlb
idiv
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
push
call
mov
push
push
shl
dec
lea
mov
sub
pop
push
add
add
rol
pop
push
push
jmp
pusha
sbb
mov
cmp
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
aad
jmp
xor
imul
stos
or
jmp
mov
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
jmp
mov
es
mov
cmpb
push
push
push
push
push
push
push
push
call
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
add
add
lea
push
rol
shr
pop
push
push
push
push
mov
add
pop
jmp
push
xlat
les
cs
pop
gs
dec
loope
hlt
jmp
sbb
fidivrs
js
mov
and
inc
push
nop
mov
inc
lcall
std
repnz
sar
lahf
push
push
sub
add
lea
mov
xor
xchg
push
shl
rol
inc
pop
push
call
call
add
jmp
mov
push
and
fstps
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
das
lods
jne
jnp
icebp
push
inc
sub
mov
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
rol
pop
mov
mov
mov
rep
push
ror
pop
pop
push
lea
push
dec
pop
push
push
push
push
not
shr
mov
sub
pop
push
push
mov
sub
xchg
push
push
call
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
add
add
and
push
push
ror
mov
not
dec
pop
call
jmp
sar
jmp
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
aam
in
add
push
dec
dec
outsl
jl
pop
mov
es
push
push
push
push
call
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
add
add
add
push
push
call
cmp
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
add
add
and
mov
add
mov
mov
push
push
push
push
push
push
push
push
call
add
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
push
add
mov
dec
push
not
dec
mov
inc
pop
add
not
push
add
pop
and
mov
push
push
push
push
call
mov
int
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
add
add
sub
push
lea
jmp
movb
jmp
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jne
jnp
icebp
push
inc
sub
rol
ror
inc
pop
push
jmp
inc
je
adc
loopne
jmp
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
aad
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
push
mov
jmp
sub
mov
jmp
int
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
loop
xor
cmp
dec
loope
lock
hlt
sbb
pusha
sbb
mov
js
mov
and
inc
push
nop
mov
lret
test
loop
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
add
not
inc
ror
mov
xor
xchg
push
push
push
call
out
sbb
cli
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
push
add
push
call
jmp
pop
mov
jmp
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
jmp
xchg
ror
into
out
jmp
cld
test
or
add
repnz
sub
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
jmp
sbb
fidivrs
js
mov
and
call
add
mov
mov
push
push
push
push
push
push
push
push
call
lcall
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
add
add
jmp
fsub
mov
popa
xchg
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
aam
jmp
inc
jns
pop
insb
xor
xchg
pop
add
jmp
and
outsb
setl
inc
pop
xor
shlb
int3
jmp
adc
div
fs
xchg
ror
into
out
cld
test
or
add
shrb
sbbl
push
push
call
cmp
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
add
and
rep
pop
jmp
mov
push
and
fstps
fwait
cmp
jbe
in
add
sub
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
jmp
icebp
push
jmp
inc
sub
scas
dec
fsubr
repz
das
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
ffree
sbb
inc
out
aam
jb
inc
jns
mov
push
lea
shl
pop
add
movswl
jmp
jo
jmp
outsb
setl
inc
pop
xor
shlb
int3
jmp
adc
div
fs
xchg
ror
into
out
cld
test
or
add
add
jmp
xor
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
shlb
nop
mov
lret
test
cmpsw
add
jmp
in
mov
mov
xor
lock
stos
or
push
and
fstps
fwait
cmp
jbe
in
jmp
add
push
dec
dec
outsl
jmp
jl
pop
mov
jmp
es
das
mov
pop
lods
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
popa
xchg
popf
adc
loopne
pop
aas
or
push
clc
rcll
repz
add
push
push
push
push
call
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
add
add
and
mov
mov
add
mov
push
push
push
push
push
push
push
call
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
push
add
add
jmp
es
mov
sub
mov
or
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
jmp
pop
aas
or
push
clc
shll
aaa
movsb
or
push
rol
lea
not
ror
pop
pop
push
push
push
push
push
push
push
call
ret
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
pushw
add
add
add
dec
or
jne
pop
push
push
dec
mov
sub
pop
push
push
call
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
push
add
push
call
push
xor
inc
shl
add
mov
xor
xchg
push
pop
push
push
call
push
push
add
not
pop
push
mov
add
pushl
push
push
push
call
cmp
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
cmp
add
add
and
call
or
jne
push
push
push
push
push
push
call
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
and
add
add
add
pop
push
push
push
push
push
push
call
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
add
add
and
pop
pop
pop
push
push
push
call
loop
xor
cmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
adc
add
add
add
jmp
cmpb
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
fcomps
shll
aaa
jmp
movsb
or
push
das
cmp
jmp
sbb
inc
out
aam
jge,pn
ret
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
jmp
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
add
add
ret
mov
push
xor
shr
shr
not
pop
or
je
push
push
push
push
push
push
push
push
call
fimull
call
cmp
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
add
add
and
push
push
inc
inc
mov
mov
xor
xchg
push
push
push
push
push
push
push
call
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
push
add
push
call
jmp
lret
mov
pop
add
xor
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
fucomi
pop
adcb
test
or
add
lock
out
cmp
add
jle
sub
mov
sbb
bnd
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
add
movswl
movswl
jmp
inc
push
nop
mov
inc
lcall
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
mov
push
and
fstps
fwait
add
add
push
inc
pop
push
push
push
push
push
push
push
push
call
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
push
add
jmp
push
push
xor
shr
pop
xor
push
push
push
push
push
push
push
call
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fisubrs
add
add
and
mov
jmp
mov
jmp
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
jmp
or
push
jmp
and
fstps
jmp
fwait
jmp
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
fimuls
jnp
icebp
push
inc
sub
scas
dec
test
je
or
test
je
or
push
inc
pop
test
je
or
cmp
jne
push
inc
xor
rol
sub
pop
mov
jmp
cltd
pop
aas
or
push
jmp
clc
shll
aaa
movsb
or
repz
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jmp
cmp
jne
mov
jmp
jmp
shlb
int3
jmp
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
jmp
mov
sbb
sub
lods
loop
xor
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
jne
jmp
cmpsw
push
std
repnz
shr
stc
ds
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
xchg
stos
fwait
cmp
jmp
jbe
in
add
jmp
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
inc
add
add
sub
popa
xchg
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
fdivrs
ret
inc
jns
sub
lret
mov
pop
jmp
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
jmp
ror
into
jmp
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
jmp
hlt
sbb
fidivrs
js
mov
cmp
jne
mov
jmp
jmp
nop
mov
jmp
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
and
movb
clc
push
jne
mov
push
lea
push
call
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
or
add
add
push
jmp
pop
add
and
pushf
movsl
jp
mov
jmp
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
jmp
or
add
cmp
jle
hlt
fucomip
cs
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
jmp
fidivrs
js
mov
and
inc
push
push
pushl
mov
add
push
push
push
push
push
call
mov
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
push
add
push
push
push
rol
mov
xor
pop
push
call
jmp
inc
je
adc
loopne
jmp
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
aad
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
call
add
add
jmp
int3
adc
imul
xor
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
jmp
jmp
les
cs
pop
gs
jmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
dec
push
call
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
push
add
or
jne
push
xor
pop
pop
push
call
pop
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
add
add
mov
mov
jmp
js
mov
cmp
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
and
movb
fstps
push
push
push
push
push
push
push
call
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
push
add
cmp
jne
add
push
shr
lea
mov
add
xchg
add
jmp
outsb
por
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
mov
jmp
int
xchg
ror
into
out
cld
test
or
add
cmp
jle
sub
mov
sbb
xlat
les
cs
mov
popl
push
sub
pop
jmp
mov
cmp
jne
push
lea
sub
lea
mov
xor
xchg
push
call
mov
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
or
add
add
push
call
push
push
call
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
adc
add
add
mov
push
dec
mov
add
sub
pop
mov
push
push
push
push
push
push
push
call
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
add
add
mov
add
push
dec
mov
mov
ror
mov
mov
shr
pop
pop
pop
pop
pop
jmp
aas
or
jmp
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
outsb
setl
mov
inc
pop
xor
shr
hlt
mov
push
dec
adc
div
fs
xchg
ror
into
out
cld
test
or
add
fidivs
addl
jle
sub
mov
sbb
xlat
add
push
ror
mov
xor
xchg
jmp
cmp
dec
jmp
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
jmp
std
repnz
sar
sub
dec
mov
jmp
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
pop
push
push
call
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
push
add
add
push
jmp
push
shr
add
dec
pop
push
jmp
mov
adc
mov
int
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
fsts
les
cs
pop
gs
mov
push
push
pusha
push
shr
sub
inc
add
ror
mov
shl
pop
mov
jmp
and
inc
push
nop
mov
inc
lcall
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
fsqrt
stos
or
mov
push
and
fldpi
negb
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
sub
mov
or
icebp
push
inc
sub
mov
sub
je
push
push
push
push
push
call
in
imul
xchg
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
push
add
mov
push
call
jno
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
or
add
add
sub
shr
push
call
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
add
add
mov
add
jmp
xchg
div
fs
xchg
ror
into
out
jmp
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
xor
sub
jmp
loope
hlt
sbb
pusha
sbb
xor
mov
js
mov
and
inc
push
nop
mov
lret
test
data16
cmpsl
push
std
repnz
sar
lahf
in
mov
mov
test
xor
jp
add
mov
sub
shr
push
push
push
push
push
push
call
sbb
cli
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
and
add
add
mov
add
add
mov
jmp
jns
pop
jmp
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
mov
mull
xchg
ror
jmp
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
jmp
cmp
je
push
push
push
push
push
push
push
push
call
xchg
arpl
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
add
add
and
cmp
je
cmp
je
jmp
push
xor
not
mov
lea
pop
mov
push
push
push
push
push
push
push
push
call
imul
xchg
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
push
add
and
add
jmp
push
push
push
call
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
push
add
mov
push
ror
pop
and
add
jmp
mov
push
xor
rol
add
pop
and
push
dec
pop
add
add
dec
jne
jmp
push
push
push
call
dec
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shrb
add
add
and
popa
pop
jmp
int3
adc
mov
int
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
jmp
lods
loop
jmp
xor
cmp
dec
loope
jmp
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
pop
push
push
push
push
call
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
add
add
and
leave
push
push
push
push
push
push
push
push
call
dec
sub
daa
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
add
add
and
ret
push
mov
add
push
push
push
push
push
push
push
call
loop
xor
cmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
push
add
push
push
push
xor
lea
add
pop
push
mov
mov
add
push
pop
mov
push
lea
rol
ror
pop
test
je
add
push
push
push
push
push
push
call
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
push
add
mov
push
push
push
push
push
call
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
push
add
push
push
shl
mov
sub
xchg
push
dec
add
pop
pushl
call
call
test
jne
push
push
push
push
call
dec
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
add
and
push
push
dec
rol
mov
xor
xchg
push
mov
pop
pushl
push
rol
xor
pop
call
push
push
push
push
push
push
push
push
call
pop
mov
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
pushw
add
add
call
test
jne
push
mov
pop
xor
jmp
dec
mov
test
xor
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
jmp
jmp
add
push
dec
dec
outsl
jl
pop
mov
jmp
es
mov
sub
pop
lods
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
popa
xchg
popf
adc
loopne
pop
aas
or
push
clc
rcrl
add
ror
dec
lea
pop
pop
push
add
ror
dec
xor
pop
pop
leave
ret
push
inc
add
mov
pop
mov
movl
jmp
pop
mov
jmp
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
jmp
adc
div
jmp
fs
xchg
ror
into
out
jmp
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
mov
mov
test
jne
mov
jmp
hlt
sbb
pusha
sbb
mov
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
jmp
mov
push
xchg
test
xor
imul
out
cli
stos
or
push
and
fstps
fwait
cmp
das
adc
in
clc
dec
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
add
jmp
adc
loopne
pop
aas
or
xor
pop
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
lret
mov
pop
add
and
outsb
setl
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
shr
loop
into
out
cld
test
or
add
addl
add
mov
mov
add
push
xor
dec
add
lea
pop
add
test
je
jmp
xor
cmp
xor
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
jmp
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
add
add
push
push
push
push
push
push
push
push
call
insl
mov
sbb
cli
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
sub
add
add
add
inc
inc
push
push
push
call
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
push
add
and
push
pushl
push
lea
mov
sub
xchg
jmp
fdivs
push
jmp
xchg
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
rolb
es
adc
mov
cmpb
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
jne
call
call
pop
push
dec
rol
pop
test
jne
xor
push
rol
pop
pop
pop
pop
push
push
push
push
call
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
add
add
leave
push
push
push
push
call
xor
cmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
push
add
ret
mov
push
push
push
call
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
add
add
and
addl
jmp
mull
xchg
ror
jmp
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
jmp
loope
hlt
sbb
fidivrs
js
mov
and
jmp
add
push
lea
inc
shl
pop
mov
jmp
mov
pop
push
push
call
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
add
add
pop
pop
jmp
sub
daa
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
sub
sub
pop
shlb
push
dec
adc
mov
int
xchg
ror
into
out
cld
test
or
add
sub
jle
sub
mov
sbb
xlat
les
xor
cmp
dec
loope
hlt
sbb
fidivrs
add
push
xchg
and
data16
push
push
push
push
push
call
mov
lea
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
push
add
push
jmp
pop
clc
shll
aaa
movsb
or
adc
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
xlat
setl
mov
inc
pop
xor
shlb
icebp
dec
adc
div
fs
xchg
ror
into
out
cld
test
or
add
orl
sub
shrl
pop
push
push
push
add
pop
mov
mov
add
mov
jmp
cs
pop
gs
dec
jmp
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
jmp
push
std
repnz
sar
sub
lahf
in
mov
mov
push
xchg
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
fsts
int3
add
pop
mov
add
xor
lea
push
push
push
push
push
push
call
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
add
and
mov
add
xor
rol
jmp
setl
jmp
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
aad
jle
sub
mov
sbb
xlat
les
cs
pop
xor
inc
push
push
push
push
push
push
push
call
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
push
add
cmpb
jne
cmp
je
push
rol
lea
shl
pop
inc
cmp
jb
mov
add
jmp
enter
je
adc
xor
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
fnstcw
cmp
xchg
pop
add
and
jmp
mov
inc
pop
xor
shr
mov
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
jmp
mov
sbb
xlat
jmp
les
cs
pop
gs
dec
jmp
jmp
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
inc
lcall
std
repnz
sar
inc
sbb
rorl
shr
sub
pop
pop
pop
pop
push
rol
pop
leave
push
sub
ror
lea
pop
ret
push
mov
jmp
movb
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
sub
jmp
pop
lods
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
push
push
jmp
movsb
or
adc
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
aam
jmp
mov
inc
pop
xor
shlb
int3
adc
mov
mull
xchg
ror
into
out
cld
test
or
add
cmp
jle
sub
mov
sbb
xlat
les
cs
pop
gs
push
mov
push
dec
ror
add
pop
bswap
mov
push
dec
pop
bswap
mov
push
add
pop
mov
push
push
inc
not
xor
pop
mov
jmp
nop
mov
jmp
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
mov
push
and
sub
fstps
fwait
jmp
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
shr
mov
jmp
mov
scas
jmp
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
fmuls
inc
out
jmp
aam
jb
inc
jns
pop
insb
xor
pop
mov
pop
add
sub
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
jmp
adc
div
fs
xchg
ror
into
out
cld
test
sti
push
push
push
push
call
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
push
add
mov
push
xor
shl
ror
pop
shl
push
not
xor
pop
mov
push
call
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
add
and
add
push
add
xor
pop
xor
lea
xor
sub
push
push
push
push
push
push
push
push
call
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
sub
add
add
mov
shr
mov
push
ror
pop
add
mov
shl
mov
push
lea
pop
add
xor
push
push
push
call
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
adc
add
add
lea
push
push
push
call
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
push
add
xor
sub
add
jmp
sbb
jmp
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
jmp
push
nop
mov
inc
lcall
std
jmp
repnz
sar
lahf
in
jmp
mov
mov
test
xor
imul
stos
or
in
push
and
fstps
fwait
cmp
jbe
in
pop
jmp
pop
mov
sub
mov
cmpb
jmp
jnp
icebp
jmp
push
inc
sub
scas
dec
fsub
mov
inc
je
jmp
adc
loopne
pop
jmp
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
ljmp
daa
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
dec
jne
mov
push
call
mov
jmp
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
or
add
add
pop
pop
pop
push
push
push
push
call
shll
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
push
add
pop
leave
ret
jmp
rcll
or
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
jmp
and
pushf
movsl
jp
mov
icebp
and
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
in
push
push
push
push
push
push
push
call
cmpsb
out
cmp
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
sbb
add
add
push
jmp
dec
xchg
stos
jmp
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
mov
scas
dec
fsub
jmp
mov
inc
jmp
je
adc
das
jecxz
cltd
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
loopne
aam
jb
inc
jns
pop
insb
xor
xchg
pop
mov
mov
shr
mov
push
shl
lea
not
dec
pop
mul
cmp
je
add
jmp
mov
int3
adc
mov
int
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
push
call
cmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
add
add
and
mov
jmp
add
push
jmp
dec
dec
outsl
jl
pop
mov
es
lock
jmp
pop
lods
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
jmp
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
mov
push
add
inc
pop
pushl
push
push
push
push
call
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
add
pushl
pushl
jmp
push
hlt
sbb
xor
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
fstpt
lahf
in
mov
mov
test
xor
jne
pushl
pushl
call
push
inc
pop
mov
push
inc
inc
add
pop
mov
sub
jne
jmp
push
and
jmp
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jne
jnp
icebp
jmp
push
inc
sub
scas
dec
jmp
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
push
rol
dec
pop
pop
push
push
push
push
push
push
call
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
add
pop
leave
ret
mov
mov
xorb
add
popf
sub
loope
hlt
in
lahf
cmpsb
inc
pop
mov
xor
lods
mov
aas
xor
dec
jl
inc
data16
sub
cmpsb
jno
xor
repnz
test
inc
add
subb
ret
mov
ficomps
mov
adc
sbb
addl
or
das
icebp
ja
push
not
sbb
int3
sub
or
cmp
jno
leave
inc
mov
pusha
pop
push
frstor
loopne
rorl
movsl
dec
out
ss
jl
cmp
mulb
mov
sbbb
push
jno
mov
icebp
inc
jnp
ljmp
cmp
xor
push
push
dec
test
push
jl
sarb
cmc
test
xor
inc
or
fdivr
jg
xchg
and
push
repz
cmpsb
dec
sbb
rorb
into
adc
push
mov
jb
mov
repnz
subl
lds
jne
push
imul
mov
lea
int3
mov
shlb
arpl
cmp
leave
mov
out
das
push
call
sbb
jae
test
dec
stc
movsb
jno
iret
lds
jecxz
mov
or
cs
sub
xchg
adc
hlt
jns
test
scas
mov
jne
cmp
cli
xchg
xor
push
scas
test
es
lods
inc
adc
push
negb
cmp
ss
mov
push
and
into
cmpb
cmc
xchg
or
adc
mov
sbb
arpl
dec
and
push
inc
scas
js
sbb
pop
and
xchg
xor
mov
aaa
or
xor
imul
popf
hlt
dec
xor
sub
fwait
sahf
push
leave
jns
push
sub
mov
add
cmpsl
rcll
outsl
fstpt
lret
pop
mov
xchg
sar
mov
mov
jp
sub
fsubs
leave
push
jp
push
into
inc
js,pn
std
stos
jmp
push
jnp
or
dec
sub
lods
hlt
add
sarb
in
and
inc
in
jne
aad
test
loop
leave
idivb
push
into
cli
xor
jmp
mov
mov
clc
dec
sub
ret
xor
xchg
iret
gs
mov
sub
mov
mov
lret
push
xchg
cltd
jecxz
add
in
addr16
inc
adc
pushf
out
arpl
mov
outsb
subl
push
call
iret
sarb
nop
test
mov
rorb
loope
push
out
inc
cmp
mov
xrelease
jg
inc
ljmp
std
pop
leave
push
mov
mov
call
sbb
xor
fidivs
sbb
mov
mov
jmp
das
mov
rcr
sub
into
lret
sub
push
cmc
gs
popa
push
cmp
hlt
inc
cmp
jl
lea
cwtl
mov
and
icebp
daa
or
stos
pushf
pop
add
jnp
stc
test
cmp
sub
leave
xor
jnp
and
testl
xor
cmpsb
out
push
xchg
xlat
dec
cs
fisttps
mov
jg
sbb
cmp
leave
push
jp
push
into
inc
js,pn
std
stos
jmp
push
jnp
or
dec
sub
lods
hlt
add
rolb
cs
das
push
xchg
loop
pop
pushf
ds
in
jne
and
fdivr
int3
xchg
stos
lcall
push
aam
test
and
adc
cld
stos
pop
filds
je
xchg
push
int
and
add
jp
inc
mul
pushf
mov
adc
decb
mov
sbb
jns
xlat
sub
push
les
nop
in
in
rorl
dec
repnz
jae
test
dec
or
fcmovb
hlt
fimull
mov
fisubl
int3
push
and
out
ret
movsl
mov
mov
inc
jl
add
sub
xor
shlb
push
cmp
mov
pop
sbb
jno
xor
push
xor
dec
and
leave
mov
xchg
push
movsb
mov
jns
mov
rclb
cs
loopne
adc
xor
mov
jle
dec
add
push
xor
repnz
bound
and
shrl
push
cmp
mov
pop
sbb
jno
xor
push
xor
dec
and
leave
lcall
shl
iret
test
lods
sbb
sbb
aad
loop
jmp
ja
xlat
inc
pop
pop
insl
jecxz
je
pop
push
int
dec
adc
adc
jge
jae
cmp
out
pop
cltd
mov
sbb
mov
jb
sbb
jecxz
out
jle
cltd
xor
pop
sahf
dec
lds
out
mov
jo
call
cwtl
jl
jno
shlb
cltd
xor
push
dec
jbe
lret
xchg
enter
add
xchg
push
leave
add
push
test
loop
adc
ret
mov
rolb
xchg
inc
cmp
inc
sub
sbb
loop
adc
cmp
mov
sarb
call
roll
add
mov
fwait
and
imul
imul
je
mov
fdivp
and
cmp
and
push
mov
xor
loop
cltd
inc
imul
xchg
push
arpl
mov
fs
and
flds
and
push
jg
push
call
iret
ror
lods
mov
ffree
enter
incl
into
cmpb
cmc
mov
stc
mov
daa
add
and
mov
xor
mov
and
jg
mov
lock
lea
push
mov
lea
adc
notb
ret
rcrb
mov
add
loope
ljmp
daa
jne
add
shll
xchg
sahf
aas
dec
mov
movsl
pop
push
mov
outsw
mov
ret
sub
outsl
ss
mov
add
sbb
sbb
cmp
cli
ret
dec
xchg
int3
dec
sbb
movl
insb
cmp
push
imul
xor
pop
jmp
jns
subb
stos
mov
inc
pop
lds
jl
mov
fs
dec
mov
ja
loopne
add
sub
cmp
aaa
cmc
pop
jecxz
outsl
pushf
lahf
fs
fcmovnb
jno
inc
inc
lods
lcall
jmp
addr16
sbb
adc
fwait
push
mov
fistps
push
push
push
mov
inc
stos
fs
push
dec
and
lock
push
xchg
test
outsl
in
sub
xchg
mov
and
xchg
cld
mov
idiv
xchg
pusha
ret
and
add
lock
adc
or
push
lock
xor
or
inc
lock
add
add
push
lock
lock
jge
or
xchg
lock
mov
lock
lret
add
lock
jmp
or
add
or
adc
or
and
or
cmp
or
dec
icebp
or
pop
icebp
or
insb
icebp
or
jp
or
mov
or
mov
icebp
or
fdivp
or
jmp
or
add
add
add
or
adc
or
sbb
or
xor
or
inc
repnz
push
repnz
pop
repnz
insb
repnz
jp
or
xchg
or
cwtl
repnz
mov
or
mov
repnz
lahf
loope
sbb
popf
gs
sub
push
fdivrs
xchg
and
mov
mov
xor
into
inc
adc
pop
adc
cmc
jle
out
dec
xchg
xor
or
rol
int
shll
push
into
xor
xor
xchg
sahf
push
aad
fwait
retw
shl
push
mov
xchg
stc
and
inc
sub
mov
adc
add
xor
das
sbb
stos
mov
insb
sbb
pop
subb
mov
repnz
fnstenv
cmp
dec
addb
sbb
outsl
bound
lahf
clc
xor
test
std
cmp
lret
sub
and
push
test
mov
push
pop
push
sub
dec
push
add
sbb
jge
cmpsb
cmp
paddusb
mov
insl
sub
stc
movsb
sbb
xchg
add
add
mov
mov
xchg
jp
addr16
gs
call
test
daa
ret
int
or
clc
js
data16
sub
push
lds
pop
pop
lods
imul
xlat
or
jge
mov
popa
test
sarb
sub
shrl
shrl
fstps
into
fidivrs
cmp
test
push
and
add
leave
push
fldt
mov
mov
pushf
scas
dec
xor
ja
jbe
xchg
mov
testb
das
inc
jne
inc
loope
sbb
fcomps
imul
xchg
mov
shll
outsl
gs
daa
subl
push
pop
cmp
sub
xorl
push
testb
pop
jecxz
jne
shlb
push
rolb
mov
test
aam
enter
in
jp
leave
or
cpuid
mull
mov
scas
out
pop
out
in
sub
dec
je
jecxz
add
bound
inc
and
ret
cs
xchg
iret
inc
rcrl
adc
pop
push
aam
cmp
mov
inc
lock
stos
mov
push
xchg
mov
fcomps
aad
mov
insl
and
je,pt
sbb
out
mov
fidivrl
cli
mov
mov
cmp
insl
popa
fcomps
push
imul
pusha
cmp
jnp
scas
cltd
xor
int
jmp
cmp
and
test
scas
xchg
aas
xor
cmc
mov
mov
imul
and
push
ss
mov
or
pop
xchg
sub
jne
daa
cli
push
or
dec
dec
jmp
or
xor
push
ja
add
xchg
mov
test
pusha
in
call
adc
inc
sub
fdivrs
popa
test
vmwrite
mov
loop
popf
cmc
and
jbe
repnz
sub
fistpll
lock
repz
push
js
int
icebp
xorb
dec
xchg
adc
sub
mov
pop
rclb
aaa
push
add
cmpl
sbb
ja
xor
lret
in
cmp
stos
sbb
ss
out
and
imul
int
leave
ss
xchg
aaa
sahf
fwait
mov
pop
push
inc
adcb
loop
xchg
push
divl
dec
fs
daa
js
int3
xchg
dec
ljmp
sahf
and
notb
xchg
or
mov
xchg
mov
enter
dec
js
stc
dec
test
fisubl
es
mov
in
hlt
in
leave
and
pop
fwait
loope
jb
sarb
loopne
jbe
shl
sahf
jno
push
jae
or
dec
dec
cmpsl
inc
inc
push
sbb
lds
push
sbb
aad
xlat
dec
ret
inc
adc
stos
stos
rcr
adc
sbb
cmp
shll
add
repz
insb
dec
lods
enter
mov
mov
icebp
fidivrl
inc
sbb
xchg
mov
ja
rorl
and
movsb
mov
js
xchg
sub
lods
push
xor
or
or
inc
cmp
adc
inc
xchg
lods
push
lea
in
push
lods
cmpsl
jbe
add
push
pop
popf
pop
inc
xchg
xchg
inc
inc
stc
inc
hlt
or
cmp
mov
dec
leave
imul
add
in
aaa
getsec
fistpll
xor
fwait
test
insl
push
test
mov
andl
jne
jl
pushf
jo
outsl
rcr
dec
xor
jmp
jecxz
dec
push
fisttpl
shll
fyl2x
ds
pop
jno
sbb
pop
sbb
add
fstpt
fs
repnz
push
mov
pop
pop
in
fs
notb
icebp
inc
out
and
scas
test
subb
and
jbe
push
inc
push
icebp
loop
dec
jae
bound
lods
and
imul
mov
divb
mov
jl
lds
jmp
lock
cmpsl
test
scas
cmp
sub
push
cwtl
sub
sbb
xlat
and
es
popa
sbb
cmp
out
and
sub
scas
in
pop
or
stos
sbbl
fwait
dec
push
ja
pop
repz
shll
sahf
jbe
int
cld
sbb
jno
int
movsb
pop
dec
sub
mov
lds
adc
rorl
dec
cmc
and
xor
mov
adc
pusha
and
xchg
mov
insl
mov
in
sarl
in
pop
cmp
push
cmc
subl
inc
adc
push
xchg
inc
out
and
data16
dec
pop
sub
aas
test
pusha
mov
pop
mov
ljmp
loop
jecxz
push
push
das
pop
pop
mov
and
push
call
in
adc
or
xor
push
push
mov
je
jne
jle
orb
inc
jbe
out
lods
pushf
push
xor
orl
push
sbb
mov
sbb
cmp
stos
sub
out
fists
push
mov
and
cmpsl
or
hlt
addr16
pop
adc
ficompl
lahf
es
pop
cmpsl
push
jnp
pusha
xchg
rorl
mov
cmp
sub
pop
in
std
xchg
and
mov
mov
cmp
in
data16
int3
or
or
sub
fldcw
push
inc
repz
mov
adc
test
xchg
jmp
dec
imul
stc
fwait
mov
xor
xor
push
sahf
sbb
enter
iret
pusha
sub
fucom
call
decl
and
jecxz
stos
push
mov
jbe
lahf
inc
mov
nop
mov
xchg
fcmovne
movsb
int
je
in
or
lcall
cli
dec
cld
xchg
xchg
nop
loope
mov
call
mov
repz
stos
xor
push
add
nop
fstps
js
cwtl
mov
and
inc
ds
test
mov
aam
xor
scas
rorl
xchg
or
push
call
outsl
cmovo
add
shl
jae
lds
dec
xchg
jmp
jmp
pop
cmp
cmp
inc
mov
dec
andl
jg
or
adc
jae
inc
jne
fcmovbe
jl
aad
fists
jl
or
jne
push
ret
pop
notb
adc
mov
imull
push
loopne
iret
ja
cmpsb
les
jbe
iret
dec
add
dec
dec
div
jnp
dec
pusha
icebp
push
les
jg
jle
les
push
mov
stos
iret
dec
or
push
adc
cmp
out
mov
clc
into
push
ret
mov
bound
in
sub
out
stos
movsl
in
add
xor
out
mov
xlat
jg
mov
sbb
xchg
sbb
loop
push
fwait
pop
pusha
pop
or
das
std
mov
shll
or
dec
xchg
out
push
nop
cmp
xor
or
pop
cmpsl
jno
inc
mov
dec
jle
lcall
jo
shrb
sbbb
sub
iret
cli
lcall
loope
bound
out
repz
push
in
test
test
cltd
movsl
int3
scas
push
repz
sbb
dec
out
arpl
adc
test
pop
jne
aam
adc
inc
test
push
mov
movsb
add
cmpsl
fwait
jbe
jge
test
cs
std
adc
or
jb
dec
loop
mov
xchg
xchg
jae
push
push
push
cli
stc
test
push
aad
imul
movsb
aaa
add
cmp
loopne
adc
outsl
call
mov
adc
int3
xchg
sbb
cltd
sub
loope
stos
fcompl
gs
adc
test
imulb
cmpsl
push
sub
inc
push
cltd
out
cli
icebp
sub
movsl
xlat
xchg
mov
outsb
inc
outsl
mov
jl
or
shlb
sbb
aas
inc
icebp
aad
popf
or
test
iret
lock
je
and
and
jo
test
incl
test
dec
adc
test
fs
test
mov
shll
insl
add
pushf
icebp
arpl
cltd
jns
mov
and
mov
cmp
lret
cmp
pop
pushf
mov
xchg
cmpsb
inc
clc
cld
cmp
push
pop
adc
push
pop
sub
movsb
push
repnz
lds
adc
or
std
fdiv
or
js
adc
fbld
repz
ret
outsb
xor
ficomps
hlt
ja
adcl
outsl
sub
adc
dec
cs
push
lahf
jnp
jge
je
ret
into
dec
push
push
sbb
cld
mov
dec
fsubrs
jge
lret
cmp
inc
outsl
data16
ljmp
stc
sub
inc
sub
rcl
push
fistps
push
sub
add
fildll
sub
add
stos
mov
push
bound
xchg
mov
icebp
mov
dec
push
push
data16
rep
dec
cmp
push
test
rdtsc
bound
xor
xor
dec
decb
cltd
xchg
loope
rcll
jo
icebp
mov
andl
mov
add
mov
lods
imul
inc
out
movsb
sub
enter
push
cmp
cltd
push
aad
insl
arpl
mov
aas
call
xor
andb
scas
lret
pop
arpl
insl
xchg
dec
aad
cwtl
mov
enter
push
shl
sub
int
adc
stos
int3
outsl
enter
fists
and
ret
pop
lret
mov
in
fisttpl
fcomps
push
scas
pop
xor
mov
scas
jg
ljmp
jecxz
in
mov
jle
mov
mov
sbb
or
imul
cld
jnp
je
or
repz
addr16
sbb
xrelease
mov
sbb
push
sbb
lds
fsubr
mov
lea
clc
xchg
gs
lds
dec
in
lret
mov
lcall
cwtl
clc
pop
aad
jo
xchg
and
stc
cld
mov
ds
add
inc
popa
leave
ret
push
nop
cltd
repnz
xchg
insl
nop
mov
mov
xor
orb
ret
adc
push
mov
sub
sarb
or
inc
and
loop
xlat
xlat
fisttps
mov
xchg
jecxz
pop
jge
int3
pushf
jne
scas
testb
repnz
push
pop
fsubrl
mov
xor
mov
pop
hlt
cld
cmp
sub
push
jbe
xchg
ljmp
push
rol
cwtl
xchg
xchg
dec
push
jns,pt
or
lret
lock
cld
stos
call
cli
sbb
repz
adc
outsb
mov
jl
ljmp
sbb
dec
cmc
add
pusha
cmp
stos
and
add
insl
pushf
xchg
and
scas
lcall
out
aas
add
rorl
jl
push
aad
in
jns
imul
rorl
jbe
fs
fstpt
push
mov
psllq
scas
jl
sub
shl
adc
lcall
sti
mov
stc
lcall
or
nop
call
ret
sbb
fists
dec
or
xchg
mov
sub
lahf
xchg
and
es
test
lock
xor
shlb
and
dec
push
in
rclb
dec
in
outsl
dec
cli
into
sub
leave
mov
adc
test
cmp
xchg
push
cmc
mov
dec
mov
mov
dec
addr16
cmp
fdivrp
stos
jge
sub
pop
inc
dec
sub
mov
fstps
popf
jb
cld
mov
push
inc
or
mov
rorb
outsb
pop
mov
push
mov
xor
or
or
std
and
cltd
test
aaa
mov
dec
mov
push
jp
cmpsb
clc
dec
cmp
stos
push
xor
adc
jle
sbb
sub
fucom
sti
sbb
les
mov
ljmp
xchg
imul
out
fxch
dec
mov
pop
ljmp
add
incl
xchg
or
mov
push
adc
es
dec
aam
sbb
adc
fiadds
stc
mov
scas
out
pusha
push
inc
inc
stos
xor
inc
dec
sbb
mov
push
rol
adc
popf
dec
cltd
inc
mov
mov
mov
mov
pushf
ret
in
idiv
jp
adc
dec
dec
pop
insl
outsb
xor
cmp
fistpll
aam
call
sub
ret
js
call
sbb
out
out
or
fs
push
sbb
cld
xchg
data16
mov
mov
sbb
fidivl
insb
xchg
out
xor
aas
cmp
push
mov
shl
xor
push
add
or
sbb
test
and
sahf
scas
pop
mulb
lahf
xchg
or
pop
ficompl
andb
aam
jecxz
pop
jg
fwait
or
std
sbb
out
ljmp
dec
mul
adc
iret
cmpb
mov
and
inc
jo
cli
insb
mov
add
mov
test
movsl
pop
cmp
loop
lcall
scas
sbb
stos
adc
pushf
mov
sub
xor
popa
out
aam
push
sub
out
lea
add
out
inc
int
or
cmp
fcomps
and
testl
or
sub
aaa
pop
movsb
fnstsw
fucomi
pop
mov
ljmp
in
iret
popf
pop
call
rorb
sbb
cmp
dec
fdivr
je
les
sbb
pop
fwait
push
mov
xchg
mov
jp
add
pop
mov
sbb
test
inc
ljmp
jmp
push
sub
divl
inc
out
ret
inc
mov
out
stos
stos
leave
push
sub
sub
dec
sub
lahf
xor
push
movsl
das
dec
repz
push
add
insl
sub
sub
movsl
xchg
out
mov
out
lods
pop
mov
in
adc
dec
mov
lea
mov
push
xchg
enter
stc
mov
mov
repnz
pop
xor
div
daa
stos
inc
jmp
setno
ret
stc
mov
test
lds
out
es
jge,pt
jl
movsb
sbb
fisubs
outsb
cltd
or
adc
jb
in
fisubrs
jbe
sbb
add
sti
or
in
sub
bound
test
adc
jae
sarb
shr
or
sub
jge
inc
xor
js
add
test
imul
aam
out
add
ret
cmp
mulb
jg
fisubs
inc
push
lret
mov
xchg
inc
push
and
sub
jle
mov
adc
incb
out
push
xor
or
cmp
sbbb
scas
dec
pop
imul
dec
mov
mov
adc
fdivrl
insb
movsb
push
shr
ljmp
shlb
fisttpll
insl
lods
repnz
sbbl
or
je
iret
aas
pop
lods
mov
xor
lea
lahf
jg
or
cmp
scas
push
out
orl
and
ret
jmp
add
cmp
pop
pop
jne
inc
sub
negb
push
lahf
ljmp
mov
sub
dec
sub
or
push
fiaddl
out
sub
in
sahf
loop
cmp
xor
adc
ret
call
fistl
lcall
cmp
ja
xor
adcl
xchg
cwtl
inc
test
mov
jle
xchg
and
inc
or
and
sbb
jp
rcrl
xchg
inc
js
pop
jmp
xor
fs
dec
pop
jp
es
push
insb
cmp
stos
add
lahf
and
inc
pop
adc
jl
loopne
sub
pop
mov
xchg
adc
sbb
inc
mov
xchg
dec
cmpl
pop
push
jb
inc
in
ret
jbe
aas
xchg
out
lea
loop
lds
push
dec
push
and
aad
subb
outsb
inc
lods
movsl
bound
jmp
into
arpl
fs
aas
add
mov
sbb
mov
in
jg
pushf
adcl
push
aam
ss
sub
test
push
inc
xchg
push
fstpt
jo
dec
or
mov
mov
repz
jl
inc
inc
stc
jae
aaa
mov
les
in
cmp
sub
frstor
adc
mov
or
inc
lock
imul
fisubl
ja
cwtl
std
shll
hlt
pop
testl
nop
pushf
pop
sub
add
fwait
scas
out
jb
adc
and
movsl
and
lods
pop
jno
add
sahf
dec
call
mov
cld
dec
sub
fwait
cmp
inc
leave
ret
sbb
push
cs
insb
xchg
dec
sub
lret
inc
negb
out
and
push
mov
call
or
int
inc
in
int
and
aad
mov
push
xchg
pop
cwtl
imul
xchg
and
mov
push
cltd
xor
fsubp
xor
xchg
in
adc
add
ret
and
outsb
push
sarl
jp
sbb
add
popa
popf
addb
push
dec
pop
jnp
pop
arpl
cld
call
inc
cmpsl
jp
das
inc
lds
push
mov
cmp
stos
ret
and
leave
repz
pop
mov
jg
ret
push
push
mov
xchg
js
cltd
and
jl
mov
lcall
push
or
shlb
pop
dec
lea
cmp
xor
aaa
shll
xchg
out
cltd
loop
out
les
jns
push
movsb
fbld
cld
cs
add
clc
xchg
add
push
aas
pop
fsubr
mov
xor
nop
and
das
cmc
add
sbb
pop
push
sub
pop
push
pop
xor
adc
and
iret
into
test
hlt
dec
fwait
pop
lods
xchg
xor
mov
xchg
mov
xor
lcall
dec
xchg
xchg
xchg
mov
mov
pop
pop
mov
or
pop
jns
mov
movsb
pop
push
shrb
outsb
idivb
popa
adcl
xor
mov
ds
ret
sti
adc
shr
pop
or
jmp
cltd
jbe
mov
mov
mov
addr16
jns
dec
mov
lret
mov
lea
aam
jg,pn
lock
sbb
and
mov
in
inc
mov
pop
or
sub
dec
and
mov
cmp
rorl
sub
push
lods
mov
stc
add
test
mov
shlb
dec
stc
xor
repz
and
xor
test
iret
mov
push
add
sarl
add
pop
sbb
je
lods
pop
push
sbb
lods
push
outsb
pop
test
movsb
sti
loop
sub
repnz
dec
push
ja
lds
enter
jno
pop
dec
vcvtsd2ss
dec
push
mov
mov
imul
rcll
popf
mov
loop
aad
fwait
mov
mov
mov
push
push
mov
adc
mov
aas
jnp
xchg
outsb
aas
cmp
push
mov
popf
jge
dec
aad
sbb
inc
fisubs
mov
pop
mov
mov
in
push
sub
hlt
and
not
pop
sub
xchg
jmp
and
sbb
xchg
push
jl
push
xor
jp
nop
dec
mov
xlat
insl
subb
cmp
insl
jp
cs
cmp
scas
test
pop
dec
mov
lret
pop
push
dec
cs
jge
or
mov
mov
inc
adc
sub
jmp
insb
gs
sub
test
aaa
js
xchg
mov
add
mov
loopne
sub
fwait
scas
inc
sub
fs
repnz
scas
mov
jp
xor
pop
push
jno
xlat
ljmp
push
mov
fnstsw
and
mov
repnz
loop
or
pop
or
jnp
movsb
imul
mov
fists
cmc
add
jl
in
ljmp
or
notb
aas
push
push
packsswb
mov
loopne
loope
push
fs
orl
jg
in
fadd
cld
mov
xor
loopne
gs
fwait
mov
into
jmp
xchg
imul
int
out
and
inc
dec
pop
push
stos
subl
push
jecxz
cmp
popa
lret
xorw
and
imul
addr16
fwait
popa
adc
xor
enter
mov
fsub
sub
addb
or
mov
insb
fisubs
mov
add
cli
mov
xchg
pop
shrl
sub
into
jle
arpl
insl
lcall
out
repnz
pop
in
jmp
jmp
pop
mov
dec
cmp
sbb
inc
out
loope
test
mov
rcll
fsubrl
jns
sub
popa
leave
mov
sbb
lea
sbb
sbb
jo
aad
iret
cmp
fnstenv
cmp
push
out
add
loope
adc
push
jmp
mov
mov
cmp
lret
sti
aas
fwait
into
inc
gs
ss
fimuls
sahf
adc
and
in
cwtl
push
and
lds
mov
dec
pop
jnp
mov
pop
outsl
jns
ljmp
mov
jecxz
xchg
and
hlt
xchg
ret
clc
clc
repz
ds
add
mov
cltd
mov
sbb
pusha
or
push
fadds
rorl
stos
pushf
cld
rolb
sub
pop
roll
rorl
jnp
je
and
repz
mov
dec
xor
decb
out
and
or
lods
addr16
xor
in
out
add
xchg
xchg
in
and
mov
addr16
ljmp
push
mov
inc
imul
cmpsl
and
mov
ret
test
lcall
sbb
xor
cs
push
in
lock
adc
mov
xchg
arpl
mov
repnz
xchg
push
daa
cs
sti
notl
out
sti
jo
mov
fstpt
aam
cwtl
loopne
jp
in
dec
fsubr
inc
mov
sbb
or
mov
push
out
xchg
mov
xchg
and
jge
jbe
jbe
or
shr
sub
mov
xor
sub
popf
rclb
cmp
mov
sbb
sti
scas
pop
xchg
mov
enter
mov
mov
rol
add
dec
mov
mov
xchg
xchg
int3
xchg
lret
adc
pop
jge
scas
mov
jae
xor
sahf
mov
sti
xlat
cmp
xchg
cmp
popf
cld
test
sub
jge
push
push
xor
xchg
lods
bound
out
jnp
pop
rcr
pusha
fs
sbb
pop
ficoml
ljmp
mov
fdivl
push
cmp
xchg
inc
add
and
mov
jge
adc
mov
pop
pop
sbb
mov
and
mov
xor
data16
lret
mov
xlat
gs
push
ljmp
mov
popf
cmp
les
seto
adc
dec
or
adc
sub
jmp
add
test
or
mov
mov
inc
sbb
mov
inc
sub
pop
jnp
jecxz
pop
aas
cmp
mov
pop
adc
push
movsb
mov
dec
call
pusha
data16
pop
adc
mov
filds
arpl
xchg
push
mov
push
enter
adc
mov
mov
repnz
adc
xor
inc
xlat
test
jns
add
call
pop
in
pusha
jecxz
es
arpl
add
inc
gs
arpl
div
mov
sub
dec
ja
test
nop
mov
cmp
outsb
loop
cli
cmp
sub
in
mov
setg
sarl
ss
iret
mov
sarb
rcl
add
adcl
sub
in
mov
adc
inc
clc
jnp
scas
adc
sub
and
imul
js
pop
out
sbb
addr16
popf
mov
loope
insb
negb
xchg
lock
jle
ss
lcall
mov
enter
fcompl
inc
cmp
addb
or
and
inc
xchg
popa
mov
push
clc
sub
test
mov
arpl
mov
adc
outsl
mov
push
sub
shlb
inc
sub
or
pop
adc
adc
adc
popa
hlt
push
scas
or
repnz
cmpsb
adc
or
sub
jb
fcmovbe
ds
add
inc
movzwl
mov
nop
andb
and
xor
add
pop
mov
aam
cmp
btc
loope
and
sbb
mov
mov
mov
stos
push
loope
sahf
ss
ds
lods
imul
mov
mov
aaa
rol
es
xchg
out
jae
ja
dec
pop
inc
rorb
aad
pop
lock
into
movsl
push
add
sub
pop
aaa
cltd
fwait
mov
shrl
hlt
mov
and
adc
ss
scas
rcrl
fcomps
stos
js
cmpsb
mull
loopne
setbe
imul
rcrb
push
lret
mov
sub
jo
lahf
dec
dec
ret
aad
mov
lds
sbb
xor
scas
test
or
dec
loopne
lods
pcmpeqd
xor
fstpl
pop
mov
push
pop
test
add
adc
arpl
bound
xchg
sbb
add
pop
mov
pop
or
shrb
push
leave
in
mov
lcall
pusha
push
jp
inc
in
int3
loop
call
insl
xchg
adc
daa
mov
gs
jge
flds
xchg
sub
push
mov
shl
jg
jns
xchg
ror
push
loop
testb
shrb
mov
jp
shl
sub
lock
inc
xchg
movsl
push
sub
cmc
imul
out
loopne
int
pop
push
fistpl
jmp
and
and
ss
sbb
int
adc
adc
pop
sahf
cld
dec
xchg
jns
fdivr
jae
fbld
lahf
push
mov
ret
ja
mov
jo
lret
dec
dec
popa
aad
jle
add
push
fldt
pop
xchg
mov
xchg
pop
sub
push
dec
mov
movsl
mov
stos
cmp
hlt
dec
xchg
xchg
pop
hlt
mov
movsb
mov
pop
pusha
fistl
pop
sub
cmp
add
xchg
or
js
xchg
xchg
dec
sub
cli
jmp
lahf
cmc
cmpsb
ljmp
out
ret
stos
cmc
inc
stc
mov
imul
popa
push
jecxz
cld
inc
inc
fdivrl
xchg
pop
dec
cmp
adc
pop
add
sub
sahf
adc
std
rol
daa
pop
or
adc
push
adc
push
sub
scas
out
mov
and
sbb
outsb
pop
scas
cli
cmpsb
lods
adc
outsb
and
std
cmpsl
scas
cli
fld
push
pop
sbb
jmp
xchg
iret
rcr
jge
adc
lret
orb
push
outsb
cmc
mov
fsubp
dec
jmp
pop
loop
cmc
pop
jbe
bound
test
dec
lock
lret
lods
sti
xor
pop
lds
out
shl
aas
pop
jp
aaa
mov
into
dec
adc
sahf
inc
push
out
sahf
movsl
fcomp
and
dec
repz
inc
pushf
jo
movsb
cmc
mov
xchg
leave
div
pop
pop
sbb
adc
repz
ret
lods
push
add
xchg
sub
inc
aaa
mov
cmp
push
lock
mov
ss
xchg
nop
mov
rclb
iret
cld
imul
in
mov
rcrl
lret
cmp
add
stos
or
jp
xor
out
sub
filds
sub
mov
inc
cmp
adc
fcmovnu
or
call
mov
xor
xor
jmp
lret
mov
xor
je
into
or
push
xchg
add
dec
push
add
jnp
mov
add
add
popa
shl
fldenv
sahf
test
aam
jae
jbe
mov
jl
add
sbb
jp,pt
shrl
xchg
inc
shrb
pop
xor
cmpsb
xor
in
pop
sbb
pop
test
in
xor
jecxz
leave
test
push
xchg
inc
mov
cmpsb
flds
add
push
adc
adc
out
lret
notl
mov
dec
mov
push
popa
fmull
mov
mov
xor
ret
rcrl
pop
jp
cld
add
dec
dec
xlat
jnp
xchg
int
in
pop
repnz
int3
xor
or
js
loop
je
or
pop
lods
in
es
push
jo
ficoms
cmp
dec
sbb
loopne
lret
adcl
hlt
jnp
or
or
imul
xchg
push
sbb
fidivl
xchg
add
or
outsb
and
adc
sub
scas
rclb
out
shll
leave
pop
dec
and
and
mov
sbb
inc
xor
subl
ljmp
jmp
xor
push
aad
js
lret
cmp
aas
sbb
push
sub
xor
insl
rclb
push
sub
stos
ds
pop
les
leave
call
mov
push
cwtl
ucomiss
dec
or
rcrl
or
push
in
xor
xchg
or
out
xchg
cwtl
lods
push
insb
push
roll
data16
jns
sub
or
jne
or
xlat
dec
or
dec
and
dec
or
xchg
cmp
adc
lret
jge
in
dec
add
lcall
mov
mov
js
mov
push
je
pop
cmp
dec
in
sti
pusha
jge
andb
repnz
pop
sbb
cs
push
insl
jle
ja
lcall
shll
shrb
int
mov
mov
add
sbb
ss
cmp
xor
ret
fwait
js
xchg
outsb
fnstsw
pop
or
cmp
lahf
inc
mov
jne
pop
jns
xlat
xchg
shlb
in
arpl
push
test
jmp
fnstcw
into
pop
add
mov
stc
call
jb
mov
fdivrl
adc
int3
push
push
dec
xchg
mov
addb
lds
pop
mov
in
xor
push
adc
pop
lds
xor
mov
data16
mov
sahf
pop
in
xor
jl
and
lds
dec
imul
xor
cld
pop
cmpsb
in
push
ljmp
xchg
mov
int3
and
cltd
int
or
mov
test
mov
fwait
pop
add
je
inc
pop
into
gs
lret
loop
mov
xchg
push
pop
cmpsl
in
mov
sub
cmp
test
dec
fmulp
pop
inc
fisubrs
pop
clc
or
sub
aad
pop
sbb
out
in
inc
inc
lds
test
dec
jnp
mov
mov
cmc
jle
lods
push
sub
ljmp
dec
enter
mov
push
imul
dec
push
add
sahf
pop
imul
pushf
scas
mov
inc
cmp
cwtl
jp
pushf
fisttps
push
dec
aam
pop
insb
mov
mov
or
xchg
jns
mov
push
and
and
xor
dec
in
ret
cmc
xchg
adc
jbe
dec
mov
jae
mov
stos
je
out
xchg
push
jge
xchg
cli
jge
mov
cli
cmp
add
mov
stc
in
movb
fcomp
fcomi
dec
xchg
in
xchg
bound
add
fiaddl
not
or
jmp
testl
dec
rol
jg
and
sbb
push
add
fistps
mov
lds
popf
push
lds
mov
sbb
movsb
inc
cltd
mov
jbe
jecxz
and
xchg
and
mov
scas
insl
mov
inc
cmpsb
cmp
cmpsl
adc
xchg
aam
popa
call
inc
mov
push
pop
add
outsl
rolb
lods
cmp
or
dec
mov
or
lret
jne
insl
pop
cmp
aad
in
or
jnp
mov
faddl
dec
insb
ss
stc
inc
fdivl
mov
mov
adcb
int3
xor
push
dec
push
cmp
into
cli
add
inc
icebp
mov
ljmp
pop
aad
in
cli
push
fwait
sub
nop
cmpsb
mov
and
fs
adc
ja
jle
in
arpl
and
xchg
push
sub
dec
push
rep
lret
pop
test
push
dec
js
add
sub
push
pop
jp
mov
sub
inc
jmp
rcrl
in
xlat
cmpsb
js
addb
add
mov
push
sarl
sti
push
aas
ss
movsb
push
pop
stc
scas
loop
loop
mov
lret
jl
pop
insl
and
or
ss
adcb
xor
ret
fsubs
inc
push
add
outsl
pop
pushf
push
pop
push
dec
cmc
test
notl
cmp
js
mov
mov
scas
cmp
mov
sti
es
push
jp
push
inc
test
mov
cmc
pop
out
and
push
xlat
icebp
insb
inc
fists
outsb
pop
dec
test
mov
sub
and
mov
jecxz
mov
dec
sbbl
inc
fmul
add
inc
inc
xchg
push
mov
imul
pop
scas
jg
not
push
ljmp
fdivp
sbb
jp
lss
mov
and
stos
mov
adc
icebp
out
mov
pop
iret
inc
sub
leave
outsl
out
sub
jo
inc
insl
lea
inc
add
and
or
inc
daa
add
jne
sbb
dec
cmp
hlt
inc
cwtl
aam
jo
lcall
xchg
jno
pop
adc
dec
inc
cmp
das
stc
out
mov
inc
imul
lcall
out
fstpl
hlt
mov
sbb
xor
movsl
into
pushf
jmp
cmpsl
and
filds
arpl
inc
iret
dec
fsubrl
pop
ds
sub
or
incb
jg
push
jmp
add
xor
popf
xchg
add
stos
jb
add
js
movsb
ja
and
xchg
xchg
sub
ret
hlt
mov
sbbb
movq
ret
dec
inc
push
test
jp
push
cmpsb
sbb
fs
repnz
loope
jb
sti
or
fadds
push
std
divb
mov
mov
pop
fistpll
and
aad
push
mull
xchg
jp
in
mov
xor
into
push
mov
ret
mov
sub
jb
sub
pop
dec
shl
mov
cmp
aaa
lds
mov
test
cmpsb
mov
pop
push
pushf
cmp
sti
popa
fsubrp
bound
cmc
lea
rorb
lret
and
adc
in
or
or
sti
inc
in
jle
mov
dec
add
fistpll
data16
pop
mov
mov
jns
xchg
cltd
out
sbb
cli
cli
out
sahf
xor
test
addr16
pop
in
adc
cmp
adc
mov
and
cmc
repnz
stos
push
ljmp
jg
and
pop
adc
sbb
pusha
repz
mov
xchg
call
jl
pop
fwait
jg
fucom
push
xor
lahf
xor
push
cmpsb
mov
xchg
sbb
lahf
sub
cmp
fs
mov
xchg
dec
negl
popa
cmp
push
adc
idivb
jns
cmp
adc
mov
sbb
cmp
in
jo
dec
mov
daa
push
adc
and
lds
popf
mov
adc
scas
adc
movsl
sub
jp
hlt
hlt
insb
call
ficomps
packuswb
jns
inc
fnsave
sub
jp
xor
jl
dec
dec
cmpsb
jmp
mov
addl
add
mov
stos
adc
fwait
popa
out
les
stos
inc
or
adc
jge
and
ret
lea
lea
iret
or
ljmp
push
jnp
sbb
in
xor
test
fsubl
movsl
jbe
repnz
ljmp
and
lret
inc
notb
lds
xlat
fdivrs
enter
adc
idivl
pop
pop
jg
in
xor
inc
jg
std
lret
mov
mov
push
jae
clc
push
mov
add
ja
pushf
mov
sub
jae
dec
hlt
jbe
dec
push
mov
mov
insb
repz
sub
inc
mov
dec
jecxz
inc
jl
and
lds
aad
scas
mov
push
out
ss
adc
arpl
mov
push
in
imul
aam
inc
fwait
and
out
les
test
pushf
sbb
adc
cmp
clc
cmp
fs
lea
aam
outsl
int
iret
add
std
fsub
test
imul
mov
bound
repz
jge
call
fisubs
mov
inc
mov
das
cmp
sbb
ret
mov
lock
sub
mov
mov
inc
shll
pop
xor
xor
pusha
orb
push
loop
mov
adc
enter
xchg
xorl
sbb
sarl
lods
mov
repz
xchg
push
pop
xchg
fstl
js
test
leave
add
int3
test
dec
jp
fnsave
les
fbld
shr
cmp
push
xchg
and
cmp
cmp
outsb
xchg
jne
pop
mov
inc
mov
jle
xchg
outsb
xchg
cld
push
test
sub
inc
mov
jmp
add
pop
iret
pusha
add
pusha
inc
inc
dec
mov
es
into
or
sahf
sbb
xchg
ret
mov
sub
mov
fldt
shlb
lds
fsubrl
cmc
dec
jae
cmp
pop
in
xchg
notl
fidivrl
pop
std
add
inc
dec
push
jae
pop
jg
fnsave
push
mov
adc
stc
sub
ljmp
sarl
sbb
sbb
into
mov
leave
adc
lahf
mul
pushf
xor
xchg
mov
add
push
inc
scas
mov
iret
or
dec
inc
out
cmp
cmc
cmp
subl
fistpl
dec
add
adc
addb
jge
loopne
in
dec
pop
jle
xchg
fbstp
jl
ljmp
fisubs
pop
movsl
or
jb
mov
add
jmp
mov
imulb
cli
adc
cmpsl
jl
bound
jae
sub
mov
mov
lcall
cmp
push
std
jp
scas
mov
pop
or
inc
ja
mov
test
sub
fistpl
cli
mov
xor
andb
xor
rolb
subb
push
stos
jl
mov
jmp
jge
fdivrs
into
jg
fs
sub
mov
inc
cmp
aad
push
into
int3
enter
in
cwtl
mov
icebp
cmpsb
imul
jns
dec
mov
cmp
and
jns
jge
push
sub
pop
in
cwtl
dec
add
pop
ret
adc
mov
in
in
ja
jns
xchg
shrl
cmpsb
push
rolb
lcall
jno
mov
push
adc
jb
push
push
xor
cmp
mov
and
out
sub
inc
scas
jno
pop
dec
ret
in
mov
xor
sbb
xor
fcmovu
lods
idivb
test
imul
js
jo
ret
xchg
rcrl
inc
xchg
cmp
xor
je
in
lahf
or
adc
lods
xchg
inc
cli
ss
lahf
push
and
xor
cmpl
lods
jae
inc
xchg
fcmove
pop
fidivrl
mov
xor
mov
sbb
sbb
outsb
lcall
popf
into
aaa
rorb
popl
and
icebp
int3
outsl
or
mov
mov
push
jbe
in
dec
xchg
mov
push
and
loopne
pushf
xor
xchg
mov
mov
or
xlat
loopne
cltd
cmp
loop
icebp
fidivrl
mov
and
mov
out
cltd
imul
xchg
mov
mov
jnp
xor
imul
mov
in
inc
sbb
jecxz
popa
mov
mov
loope
sti
shl
ss
add
jecxz
and
int
repz
leave
dec
dec
scas
or
mov
mov
repnz
sbb
call
orl
cmpsb
or
and
xchg
and
ja
or
mov
cmc
inc
xchg
repnz
cmp
add
aas
cmp
mov
pop
pop
add
sbb
sbb
mov
ds
and
popa
mov
adc
adc
addl
fwait
shlb
lahf
pop
adc
sub
sbb
jae
dec
adc
and
jg
xor
jg
aaa
nop
or
xchg
jo
lds
pop
adc
popf
scas
cmovp
sbb
mov
std
aaa
out
subps
jnp
sbb
mov
pop
fwait
xchg
xchg
jp
out
lea
rclb
cwtl
loopne
daa
jecxz
push
sub
movsl
jl
mov
cmp
popf
xchg
mov
lret
test
sbb
sbb
adc
outsl
sti
mov
repz
cld
xchg
adc
mov
mov
das
sub
jmp
push
mov
pop
push
mov
cmpsb
push
xchg
pop
xor
enter
jge
les
xchg
decl
sub
es
adc
xor
pop
pushf
and
jle
or
lret
or
pop
pop
mov
ja
clc
pop
add
dec
lret
sbb
dec
mov
dec
pop
popf
jns
or
mov
in
insl
sarb
mov
or
andl
movsb
les
mov
mov
cmp
push
push
insb
adc
push
xchg
cmp
xchg
mov
or
lods
dec
cmp
inc
rcl
fnsave
pop
sbb
jae
loop
loope
or
int3
or
adc
push
jo
jae
xchg
ljmp
dec
mov
mov
mov
cmpsl
mov
push
dec
and
cmc
sbb
jae
fstps
std
sub
mov
mov
and
cli
jno
insl
insb
push
adc
lret
scas
pop
test
loop
pop
jnp
adc
push
lock
aad
aam
or
xchg
aad
push
xchg
sbb
ret
rol
shlb
scas
pop
cwtl
rorb
mov
ficomps
call
int3
pop
sub
pop
xchg
rorl
adc
arpl
cmpsb
inc
repz
faddp
push
bswap
push
adc
add
push
mov
dec
clc
je
dec
cli
lcall
jno
scas
pop
lds
std
int3
inc
sarl
inc
enter
imulb
std
mov
movsl
xchg
cmp
cmp
push
pop
jne
daa
out
cmp
or
stc
xchg
xchg
lods
xchg
adc
push
aaa
add
add
pop
inc
or
and
fmulp
dec
jnp
ret
aad
js
negb
or
inc
jbe
xchg
or
lods
jno
xchg
les
mov
std
xchg
or
push
inc
cmp
call
cmp
sub
mov
icebp
lods
mov
or
xchg
sarl
enter
mov
ds
sub
fs
movsl
pop
add
js
out
dec
ficomps
jle
dec
inc
inc
or
fwait
xor
sahf
push
push
sysenter
inc
push
xchg
daa
lret
cmp
popl
xor
inc
adc
cmp
int
repnz
scas
jmp
aad
xor
adc
ja
out
ds
ret
cmpsb
add
lret
fldl2t
mov
xchg
mov
sbb
cwtl
lea
xchg
subb
loopne
xchg
leave
or
cli
cwtl
shl
sbb
jo
cmpsl
pop
push
mov
fstpl
enter
fildl
pop
insb
lcall
cmp
sti
retw
dec
mov
xchg
push
fst
xor
adc
add
sub
lods
mov
fs
push
test
xchg
xchg
imul
into
std
jl
mov
mov
dec
xor
aam
mov
jecxz
or
inc
stos
lret
push
mov
mov
push
xchg
inc
xor
jne
mov
jo
out
iret
aad
addr16
fstl
scas
sub
or
daa
rcrb
push
pop
add
or
insl
push
inc
dec
sbb
lret
inc
pop
fdivrl
jb
cmp
je
sub
mov
nop
pop
test
cltd
push
mov
mov
pusha
enter
aam
movsl
sar
rcl
xor
icebp
rorb
mov
pop
nop
pushf
pop
daa
into
or
push
ja
cmp
lret
sbb
jl
pushf
xor
xchg
push
ss
cwtl
cltd
xchg
fwait
ret
daa
mov
outsl
or
std
cld
ja
pop
pop
cmpsb
test
push
lods
jge
test
test
mov
inc
or
in
inc
dec
sbb
call
cmp
mov
push
pop
in
cmc
xor
test
ds
push
enter
jne
adc
popf
int3
stos
and
push
ss
jo
add
sbb
push
out
sbb
fs
bound
and
push
stc
xchg
lret
pop
inc
inc
cmp
mov
imul
cmpsl
rcll
and
nop
cmpsb
ja
in
cltd
stc
push
sub
out
push
data16
pushf
mov
jp
sbbb
sub
jno
pop
mov
adc
lret
fadd
add
add
bound
popa
mov
or
xchg
xchg
pop
dec
lret
mov
iret
mov
fnsave
cmp
push
loope
cmp
sbb
cmp
sub
adc
cmp
inc
pop
pushl
ljmp
out
lahf
jne
push
ss
cmp
dec
enter
sub
lock
sub
pop
and
outsb
inc
mov
loop
push
sbb
movsl
jo
daa
and
or
aad
sbb
lods
stos
xor
subl
and
stc
daa
cmp
mov
cmc
inc
or
pusha
push
mov
push
cmp
or
shlb
cli
pop
mov
mov
mov
mov
insb
pop
or
das
mov
jne
sbb
mov
fisubrs
sub
jns
pop
push
test
testl
mov
sbb
lret
sbb
and
sub
push
lret
shll
lret
mov
movsb
xchg
sbb
cmp
fs
inc
mov
aas
fistpll
movsl
in
ljmp
or
ds
ficoms
pop
inc
add
idivl
mov
popf
xchg
int3
test
jmp
out
add
jecxz
sbb
xchg
mov
dec
xchg
mov
mov
popf
cmpsb
add
out
sub
test
mov
test
outsb
insl
or
adc
inc
sti
leave
ret
jecxz
aas
sbb
mov
mov
fisttps
or
into
cmc
mov
pop
aad
and
mov
test
mov
xor
pusha
jns
or
addr16
enterw
sarl
xchg
outsb
stos
pushf
cmpsl
aad
scas
repz
mov
or
add
jnp
mov
sbb
lahf
xchg
gs
mov
fs
sbb
sti
lock
push
iret
add
rcll
cmp
test
pop
stc
repz
pop
dec
push
dec
mov
cltd
call
or
xchg
mov
mov
push
jmp
cmp
inc
data16
imul
out
and
push
inc
xchg
cmp
das
adc
sbb
push
push
inc
ret
mov
push
push
mov
mov
mov
imul
je
lcall
mov
bound
xor
orl
xchg
in
loope
or
mov
jecxz
hlt
jbe
xchg
pop
scas
sbbl
fisttpl
mov
insl
sub
adc
js
inc
pop
pop
push
jle
lcall
cli
dec
adcl
push
lret
push
mov
cwtl
insl
and
jl
daa
push
das
and
int
pop
loop
daa
nopl
aad
cmp
scas
mov
mov
out
jg
std
mov
inc
mov
jl
adc
sbb
mov
sahf
insl
inc
ret
jo
movsl
fbstp
not
sub
inc
xor
inc
mov
aad
ss
sbb
nop
call
fldcw
mov
push
mov
push
push
in
add
addr16
out
nop
mov
loope
jns
xchg
dec
dec
repnz
push
xchg
lods
push
and
hlt
push
mov
sbb
sahf
dec
mov
dec
xor
fsubr
jge
pushf
cmp
das
pop
test
icebp
rcll
sbb
xor
stos
mov
xor
push
jae
ret
insb
push
fbstp
scas
jle
aad
mov
xchg
mov
lock
push
pop
xchg
xor
pop
scas
shr
push
xor
test
loope
jl
push
mov
or
int
sahf
mov
pop
pop
cmc
mov
pop
js
pop
insb
push
movsl
mov
jl
jl
sbb
hlt
jg
jno
arpl
adc
adc
fistl
mov
sti
test
pop
xchg
dec
add
ss
mov
mov
pusha
lods
and
repz
call
and
mov
ss
sbb
fmull
insl
cmp
adc
push
fdivs
popf
nop
mov
shlb
xchg
xor
aam
mov
fstpt
pop
mov
sbb
mov
mov
ja
mov
jno
repnz
scas
js
inc
sbb
enter
cmp
fs
sarl
cltd
out
mov
ficoms
cltd
sub
ret
add
or
mov
push
dec
push
push
fisubrl
ss
push
or
into
sbb
jnp
sarb
mov
cltd
inc
xchg
shll
hlt
mov
mov
mov
pushf
cmp
mov
lret
rcrl
or
lds
xor
loopne
subl
out
fidivl
and
fwait
inc
sub
jno
dec
and
pop
stc
bound
das
jmp
ficoms
negb
pushf
or
inc
ljmp
shll
mov
mov
dec
dec
inc
sub
inc
sar
ret
mov
iret
xchg
lcall
and
push
mov
cwtl
xchg
push
xchg
add
push
push
xor
push
or
dec
pop
out
add
sbb
lret
out
call
push
aam
dec
dec
cld
into
adc
test
xor
adc
lret
test
mov
fldl
dec
fdivl
push
cld
cs
mov
adc
insl
lock
xor
outsb
addb
mov
mov
mov
lcall
insb
push
add
imul
shrl
xor
popf
dec
jp
clc
loope
lods
mov
xor
sbb
xor
sub
test
int3
jmp
ds
xor
push
test
jbe
push
cmp
lods
in
push
cmc
mov
inc
lret
inc
dec
in
mov
xlat
cli
bound
ret
add
imul
in
shl
popf
inc
adc
sub
ja
add
push
roll
jecxz
and
enter
stos
fcomps
sub
outsl
test
inc
dec
and
popa
rol
pop
fs
cli
into
push
add
bound
popf
mov
pop
adc
sbb
aam
mov
cmp
adc
pop
mov
nop
push
jle
mov
iret
sub
add
add
xchg
dec
leave
outsl
xor
fs
lret
add
aad
inc
out
mov
insb
repnz
popa
adc
pop
push
xchg
sbb
jl
cmp
fildll
cmc
jg
add
enter
call
xchg
pop
jnp
pop
movl
insl
andb
jbe
cmp
sbb
pop
inc
xchg
dec
sub
out
sbb
icebp
adc
or
and
ficomps
mov
mov
pop
pop
mov
mov
mov
inc
push
jmp
dec
mov
cmp
ret
pop
inc
sub
adc
add
es
ds
xchg
pop
pop
inc
jo
xor
cmpsb
jg
js
add
outsb
sub
mov
mov
mov
inc
push
xchg
or
outsb
sbb
xchg
lret
scas
pop
lcall
push
out
frstor
nop
sub
movsl
sub
ljmp
add
outsl
popw
cltd
faddl
lds
sbb
cmp
push
movsl
pushf
loope
fimuls
dec
inc
in
mov
jp
pop
push
mov
imulb
std
adc
clc
adc
mov
insl
pop
in
aam
shrl
mov
loopne
ret
dec
cwtl
xchg
fisubl
ds
jp
jecxz
or
rol
loopne
or
dec
mov
adc
enter
lds
and
ljmp
outsb
push
aas
mov
xorl
mov
ja
and
in
pop
ljmp
nop
mov
xchg
push
pusha
pop
push
popf
rcrb
shll
sbb
cltd
movsl
loop
test
jecxz
data16
pop
adc
xor
pop
cmp
pop
outsl
fst
aas
icebp
dec
cmc
and
pop
xchg
pusha
dec
sub
push
fsubl
mov
inc
lea
and
cli
lock
xchg
lret
add
addr16
les
push
out
cmp
dec
out
dec
aaa
adc
adc
and
mov
fbld
bound
inc
and
jle
lahf
lods
sbb
pop
and
lcall
xchg
lret
push
ret
dec
movsb
pop
inc
inc
mov
jmp
lret
jmp
mov
out
jle
and
push
adc
push
daa
stos
adc
shl
lcall
push
in
inc
rcr
rclb
jmp
stos
add
lret
push
jbe
xchg
mov
inc
jmp
shl
mov
pop
push
jno
mov
bound
fsubrs
mov
mov
call
push
push
cmp
xor
std
imul
push
jne
pusha
scas
xchg
mov
mov
fisubrs
nop
jnp
dec
les
dec
add
xlat
mov
stos
mov
test
popa
adc
push
in
mov
and
jle
lods
das
ret
in
aam
jb
inc
and
mov
inc
xor
dec
push
fs
adc
lea
in
push
daa
loope
cmp
lods
hlt
js
insl
push
fcmovne
inc
push
mov
popa
shl
aam
sbb
add
in
mov
cmpsb
jmp
jp
inc
ljmp
lret
xor
cmpb
push
mov
jecxz
jo
call
mov
mov
or
sub
aas
aaa
cmpsl
lods
mov
shr
and
push
mov
jg
jp
jg
or
sub
scas
mov
jp
mov
lods
sbb
pop
sahf
out
in
jo
shl
sbb
mov
incb
lcall
push
mov
cmp
jge
adc
das
and
mov
add
jmp
dec
dec
and
repnz
out
into
sub
pop
jecxz
jp
adc
mov
or
and
fdivl
dec
add
lods
outsl
inc
fsubrl
sub
comiss
xchg
and
mov
xor
inc
lods
and
test
rorl
jbe
or
jo
shlb
in
pop
int
cmp
sbb
jmp
push
repz
dec
outsb
enter
xchg
ljmp
fdivs
test
dec
xor
outsl
mov
mov
mov
je
in
xchg
jae
repz
xor
push
push
add
jo
icebp
outsb
in
xor
inc
fstps
test
lods
ds
ja
into
adc
rclb
push
xor
push
mov
mov
mov
push
cmp
test
jecxz
es
scas
sub
pushl
rep
dec
movsl
sub
fmulp
in
addr16
sbb
mov
push
mov
decl
pop
test
imull
mov
mov
mov
outsl
fmuls
jle
sbb
shlb
sbb
pop
mov
add
hlt
mov
popf
adc
jmp
enter
jg
adc
pop
sbb
sbbl
cmpsb
mov
fs
mov
dec
add
pop
or
popf
clc
jp
add
hlt
stos
xlat
sub
filds
nop
add
and
add
hlt
repz
in
pop
inc
movsl
iret
xor
arpl
xlat
sub
loope
cmp
lahf
dec
mov
ret
je
cmp
push
addr16
int3
xchg
aaa
das
lcall
das
inc
mov
mov
mov
mov
cmpb
addr16
cmc
add
paddsw
leave
cmp
xor
adc
cmpsl
push
test
xchg
dec
in
mov
sub
push
call
push
mov
in
dec
icebp
pop
clc
adcl
int
call
popl
jle
sub
loop
pusha
pop
mov
push
push
sbb
pop
fisttpl
or
and
cmp
xlat
pushf
mov
dec
push
aad
sbb
jmp
movsb
cmpsb
mov
jmp
pop
jge
mov
das
mov
inc
fsub
dec
mov
stos
or
cld
je,pt
popa
inc
int
daa
popf
rcrl
addb
pop
xchg
movl
inc
in
mov
int3
cs
and
mov
sub
pop
out
popf
ret
loope
pop
cmpsb
mov
mov
popf
stc
cmp
into
inc
jo
mov
jno
daa
addl
imul
loop
hlt
insl
pop
jle
sub
sub
pusha
fsubl
call
sbb
add
xor
jns
xchg
scas
hlt
orb
sub
mov
into
inc
out
pop
mov
test
xchg
dec
cmpsb
mov
jl
repnz
mov
xchg
leave
pop
sbb
adc
pop
fdivrl
mov
movsb
and
adc
test
and
mov
in
mov
int
aas
jmp
add
mov
jmp
mov
add
sbb
mov
lcall
adc
dec
into
pop
add
sbb
push
cmp
rorb
leave
push
rorl
xchg
xchg
xchg
ds
push
cmpsb
jns
in
pop
out
mov
les
xchg
jne
jns
mov
push
imul
in
jbe
cmp
mov
mov
ss
xchg
add
or
in
mov
pop
movsb
add
adc
xchg
sbb
add
cmpb
or
dec
pop
mov
pop
aad
xor
jl
cmpsb
or
mov
sbb
int
or
and
int3
les
sbb
mov
decl
mov
scas
test
or
push
outsb
shrl
scas
idivl
mov
repz
ret
cmp
xor
mov
in
sub
mov
mov
mov
mov
es
sbb
movsb
in
push
or
dec
fistps
imul
data16
sub
ds
mov
call
and
jae
into
inc
mov
mov
mov
mov
int
mov
and
dec
sub
in
inc
aad
out
cmpb
lahf
fisubl
jb
xchg
ss
adc
sbb
fwait
cmp
cltd
push
into
xchg
mov
pop
mov
jno
add
xor
repnz
cmp
or
mov
jae
pop
addl
popf
sbb
sysenter
mov
test
mov
jecxz
xlat
jge
pop
insb
mov
sbb
sbb
cli
mov
sti
stos
js
mov
mov
adc
mov
inc
test
jns
xchg
fdivrl
mov
clc
push
mov
sub
lret
inc
loopne
divb
decb
mov
cltd
sbb
mov
inc
or
xchg
mov
push
cli
xor
les
push
daa
mov
pop
sbb
push
pop
inc
add
cmc
xchg
addb
std
jo
call
test
mov
cmc
cmp
or
mov
lods
xrstor
int
jae
mov
into
or
ret
or
lahf
decl
lds
xbegin
jge
loop
cmp
popf
std
movsb
add
cmp
cwtl
fiaddl
cmp
enter
push
mov
sbb
mov
rol
cmpsl
push
mov
out
pop
loope
pop
mov
and
lcall
lret
dec
lods
pop
or
xor
cmc
sub
push
ss
ljmp
push
add
push
mov
xor
push
inc
or
aaa
lcall
jp
loop
sbb
push
or
mov
push
adc
pop
ret
lods
insl
out
xor
pop
sub
mov
mov
dec
rcrb
sbb
pop
mov
xor
pop
pushf
mov
push
jmp
adc
enter
lods
mov
or
pop
andl
or
lods
fcomps
xchg
aaa
jae
push
sbb
fbstp
call
push
xchg
push
sbb
stos
cmpsb
cmpsl
mov
cmp
mov
push
in
mov
cmpsb
cmp
cmp
lahf
jmp
sahf
push
stc
lods
in
xor
std
mov
mov
in
rcll
in
or
add
cmp
ljmp
mov
stc
imul
sub
adc
pusha
mov
pop
shl
loop
adc
xor
shl
adc
ds
adc
sbb
jmp
mov
sub
stc
loop
lcall
jge
adc
sbb
sbb
mov
or
cmp
fidivrs
add
fidivl
rcll
dec
xor
or
sahf
xchg
ljmp
jbe
gs
rolb
faddl
filds
rorl
lahf
xor
and
in
in
inc
pop
addr16
inc
pop
xorb
js
cmc
dec
leave
inc
add
pop
aaa
dec
aaa
push
mov
lock
pop
jne
gs
add
adc
in
mov
aad
ljmp
gs
adc
lods
lea
sub
add
inc
loop
fdivrl
dec
dec
aaa
or
pop
and
inc
push
outsb
jns
int
cmpb
testl
mov
jo
jbe
sbb
add
pop
or
scas
addr16
mov
or
idiv
arpl
arpl
mov
or
jne
mov
adcl
call
jmp
out
ficompl
es
fimuls
fidivrs
pop
sub
adc
pop
cmc
call
sbb
js
push
data16
mov
jmp
popa
jg
lock
push
mov
push
lcall
outsl
sbb
lret
xchg
lea
jnp
outsl
dec
fsubrl
cmp
aaa
fs
aas
cmp
cli
dec
pop
sbb
negl
dec
add
mov
sub
push
insl
dec
stos
fcomps
movl
add
movsb
loopne
ljmp
movsb
outsb
cmpsl
test
repnz
sbb
out
add
sub
mov
jg
pop
mov
gs
cmpsb
rol
cwtl
mov
repz
in
dec
cmp
pop
loopne
inc
aam
push
aas
mov
push
fmul
inc
aas
jmp
ficoms
cwtl
push
cmpsb
das
test
fisttpl
cmpl
xchg
sub
mov
xor
dec
insl
lcall
cmp
enter
enter
out
inc
push
push
aam
jns
sbb
ljmp
xchg
stos
test
ss
inc
or
mov
out
cmpsl
shr
sub
in
jp
je
js
push
dec
arpl
leave
add
sub
test
lods
into
rep
jmp
jl
xor
push
xor
push
movsb
mov
adc
mov
movsb
iret
xor
sub
inc
mov
xor
jmp
sbb
shll
das
push
adc
call
lea
adc
sub
leave
cltd
lds
sub
es
movsl
sti
faddp
jl
push
push
pop
mov
cwtl
add
cltd
mov
fisttpll
sbb
mov
test
data16
in
cltd
sbb
lret
std
push
loop
arpl
or
mov
sub
push
jl
push
rcll
xor
push
jecxz
sbb
les
je
cmpsl
pop
out
scas
shll
sub
or
dec
fcomip
add
mov
push
shrl
clc
add
inc
subl
xor
adc
cli
notb
sub
mov
fisttpll
arpl
xor
xor
aaa
pop
mov
mov
sbb
les
and
cmpsl
test
sbbb
sub
mov
das
inc
jmp
sub
test
aad
sub
push
sub
add
pop
in
std
inc
mov
lret
and
add
fwait
jns
lock
inc
xlat
insl
xor
cmpsl
sub
dec
pop
call
outsb
mov
lcall
mov
imul
data16
cltd
add
jmp
cs
and
and
dec
ss
clc
test
mov
lahf
dec
mov
add
in
sbb
jb
adc
mov
into
jbe
and
insl
add
dec
das
adc
cmp
push
jne
in
sahf
push
xor
cmp
pushf
cmp
loop
push
or
mov
push
stos
xchg
into
xlat
cmp
hlt
xchg
filds
sub
adc
mov
lods
loope
fwait
scas
add
aas
js
jbe
lcall
jg
adc
ja
out
mov
or
lret
das
bound
nop
call
push
mov
data16
call
daa
cmp
push
leave
pop
daa
rclb
notl
mov
addr16
push
pusha
add
jmp
sbb
push
scas
test
in
movsb
dec
fs
or
cmp
inc
ljmp
gs
rorl
iret
das
mov
bound
lods
mov
lret
jno
int
ret
xchg
add
in
popf
sbb
sub
mov
imul
pop
out
pop
sbb
add
shrl
mov
jns
adc
repnz
sub
outsl
mov
pop
rorl
sbb
xchg
mov
adc
imul
les
popf
ret
and
dec
pop
cmp
jg
add
jmp
sub
sbb
in
xchg
test
repnz
iret
mulb
mov
and
pusha
push
jae
fnsave
scas
fcmovnb
popa
jge
jg
cld
inc
loope
insl
shrb
mov
int
dec
test
inc
pop
fcomip
fstp
icebp
ret
stos
jo
jbe
ja
jbe
in
addl
clc
inc
and
loopne
jo
sub
clc
sbb
sub
push
ret
dec
dec
jb
in
xor
mov
out
test
fstl
out
aad
mov
je
lods
push
loope
sub
sahf
leave
adc
cmp
in
int
mov
pop
repz
add
sub
xor
mov
pop
addl
push
adc
pushf
pushf
lret
inc
sub
xchg
int3
adc
and
push
cmp
icebp
popa
jmp
jmp
and
lret
lret
add
jecxz
sbb
mov
dec
test
cwtl
in
and
in
sbbl
push
xlat
push
shll
adc
cmp
lahf
out
mov
adc
jmp
cmc
aad
lea
jno
std
and
out
out
loopne,pn
testb
adc
push
mov
adc
lret
inc
fisubs
mov
xchg
sbb
lahf
dec
inc
dec
adc
aaa
cmp
mov
cmpsb
sub
lods
outsb
pusha
cmp
jo,pn
sub
push
shll
jno
and
cs
dec
mov
push
adc
repnz
pop
push
adc
fdivrp
cmp
sarb
xor
ss
shlb
jmp
fimull
dec
daa
movsb
scas
jo
xchg
sti
push
mov
add
insl
sbb
push
fadd
inc
sbb
xchg
aad
mov
ds
push
mov
std
pusha
mov
and
jecxz
xor
test
or
cmp
or
das
adcb
mov
sbb
stos
sbb
jmp
jnp
mov
bound
inc
ljmp
cmp
mov
jl
push
lods
mov
ret
xor
aaa
and
xchg
mov
js
ret
xchg
mull
inc
sbb
stc
jg
gs
fmul
jl
in
push
mov
xchg
sbb
jbe
add
mov
mov
inc
mov
outsb
aad
sbb
out
test
jge
jecxz
pop
jb
aam
gs
popf
xor
push
xchg
rclb
ror
jb
xor
cmp
cltd
or
lcall
and
mov
outsl
addl
inc
insb
push
xor
xor
ja
and
and
and
enter
sbb
cmc
jmp
fmul
arpl
lods
push
icebp
ret
mov
call
pop
ret
popf
mov
fldl
lods
add
clc
fs
mov
js
outsl
test
ucomiss
jns
xchg
ret
aas
cmp
fidivrs
push
mov
bound
dec
fucom
jae
pop
gs
cmp
aam
adc
repnz
dec
pushl
mov
scas
mov
test
call
xor
leave
fmuls
add
daa
mov
push
mov
imul
sbb
ljmp
aam
mov
mov
mov
je
loop
out
xor
push
loopne
pop
fucom
fisubrs
lock
sub
call
pop
push
movsl
and
fwait
mov
ja
fwait
cmp
repnz
adc
loope
scas
lods
lret
cmp
in
dec
loop
xor
pop
jnp
xor
mov
scas
mov
in
shrl
and
sbb
or
js
outsl
cmp
xchg
jno
rorl
push
mov
and
ljmp
sub
icebp
enter
dec
stos
cmpsl
in
test
dec
decl
inc
ret
sub
sbb
js
mov
adc
push
mov
or
dec
sarl
mov
push
outsb
jno
sub
fdivrs
lret
test
icebp
imul
mov
sahf
mov
les
js
inc
xchg
cltd
punpcklbw
lea
adc
xor
push
push
xchg
stc
nop
cmp
ds
adc
adc
pop
or
mov
push
push
aas
lret
lock
daa
ja
xchg
rcr
cmc
iret
pusha
popa
mov
sub
repnz
fcomp
push
push
or
outsl
sbb
and
in
sub
or
inc
sbb
jbe
gs
adc
icebp
cmpsb
fstpl
xor
adc
stos
jmp
js
sub
cmc
sti
xchg
push
push
adc
mov
cmp
mov
lods
xchg
loopne
push
outsb
add
sbb
and
or
mov
scas
fidivrs
push
push
stos
cltd
popf
xor
inc
pop
jge
or
jo
fstpt
loop
push
clc
push
cld
stc
cmp
add
and
jecxz
call
fwait
xor
and
je
and
jbe
scas
pop
out
stos
aaa
lcall
scas
dec
insb
in
fisttpll
test
fxch
cmpsb
cmpb
sarb
dec
in
or
ljmp
or
inc
out
add
push
aad
sub
mov
mov
aas
xorl
lods
outsb
es
stos
or
pop
xor
push
sub
push
sahf
or
into
imul
fistl
cmp
pop
ret
pop
jbe
mov
push
push
pop
incb
aaa
add
push
aad
push
rcrl
jbe
loopne
mov
outsl
jbe
out
mov
dec
imul
in
fimuls
inc
mov
mov
sub
jge
add
mov
roll
adc
mov
inc
xchg
popa
xchg
jmp
popa
mov
xchg
out
add
test
in
fdivl
aas
mov
iret
into
add
inc
je
arpl
out
cmpsb
jge
imul
xor
in
push
xchg
or
push
push
inc
fistpll
enter
xchg
in
cmp
xor
sti
gs
and
sti
in
or
out
adc
call
xchg
and
sti
push
dec
mov
pop
inc
movsb
add
xchg
fidivs
cmp
in
inc
sbb
rcll
insb
dec
lds
inc
mov
push
int
and
pop
xchg
outsb
dec
insl
pop
ljmp
bswap
pop
push
sbbb
adc
inc
repnz
fildll
je
add
jo
popa
and
mov
lods
mov
hlt
in
adc
jae
jb
lcall
negl
mov
sarb
mov
pop
mov
inc
jge
in
pop
enter
fcompl
xor
inc
add
add
mov
cmp
sbb
sub
lods
movsl
test
fdiv
in
mov
out
mov
aam
ficoml
les
pop
push
push
rcll
dec
xchg
push
outsb
mov
mov
cld
mov
mov
jbe
mov
mov
lods
or
add
mov
arpl
paddsw
mov
pop
xor
xchg
int3
jae
xorl
or
push
xchg
adc
cli
in
stos
cmp
add
adc
ds
xor
mov
xchg
cmc
sbb
jge
test
cli
jnp
xchg
rcrb
lods
insl
add
mov
ret
or
sub
push
mov
je
or
adc
pop
inc
rcll
xorl
popa
sub
inc
out
add
popa
sbb
or
or
leave
push
mov
es
insl
add
test
or
sub
pop
stos
lods
mov
test
stc
jle
jle
sub
pop
mov
xor
loop
or
cmpsb
rcll
cmp
sub
lods
dec
push
jl
and
mov
test
movsb
adc
pushf
xlat
push
mov
fs
xchg
cltd
or
jae
jns
rcrb
shrb
pop
sub
pusha
arpl
pop
les
loop
sbb
and
in
cli
push
leave
or
sub
fwait
insb
iret
or
rcr
and
inc
stc
cltd
sahf
pop
jp
adc
push
jp
ljmp
sbb
out
inc
stc
fisubs
and
sbb
xchg
add
rorb
daa
sti
xor
jb
dec
testb
mov
pop
adc
popa
imul
mov
pushf
xor
iret
inc
dec
xlat
mov
pop
mov
jle
stos
and
mov
faddl
jo
xchg
dec
lcall
loop
xchg
cli
sbb
test
push
adc
int
inc
fdivs
sbb
ja
dec
pop
jne
dec
dec
mov
cltd
rorl
xchg
movsl
fstp
xor
daa
pop
sti
and
pop
dec
clc
inc
nopl
movsl
pop
sbb
vmovaps
fsubs
jmp
pop
jns
push
scas
dec
cmc
lret
and
pop
mov
xbegin
dec
add
int
cwtl
mov
cmp
jl
adc
loopne
push
lcall
jp
inc
iret
enter
xor
mov
pop
push
js
pushf
jle
mov
pop
push
mov
or
sbb
inc
adc
dec
popa
sahf
dec
dec
mov
add
mov
jb
mov
shlb
cmp
or
fbld
fisubl
divb
out
negl
data16
push
lds
dec
jnp
addl
rcrb
sbbb
pop
cmp
fsubs
lret
cmp
jg
sub
xchg
mov
shl
cs
sub
inc
lret
add
scas
mov
and
sub
cmp
ret
jge
mov
inc
cmpsl
test
cmpsl
fnsave
fldenv
aaa
sub
dec
je
inc
cwtl
dec
mov
int
inc
jmp
sahf
push
xor
sub
cld
lret
adc
mov
push
mov
sbb
aas
sbb
movsb
xor
pushf
stos
xor
loope
xchg
inc
fucomp
fidivl
and
test
mull
clc
cmp
cmp
pop
push
stc
mov
sub
xchg
pop
rorl
icebp
test
pop
mov
scas
repnz
push
mov
pop
xchg
test
sti
out
mov
shl
dec
xchg
fs
push
negb
and
xchg
out
loop
mov
in
jno
mov
fdivrl
mov
movsl
shlb
add
inc
aaa
fcmovnbe
cmp
inc
sub
sub
mov
lcall
repnz
aam
push
cltd
stc
xchg
lret
jmp
ja
ds
adc
jno
add
into
pop
stc
stos
sbb
pop
jno
pop
and
pop
lret
iret
push
std
sub
dec
xchg
sbb
jecxz
subb
fs
lea
test
pop
test
xchg
popa
mov
inc
iret
movsb
push
jecxz
xor
dec
das
icebp
js
test
outsb
mov
test
jbe
adc
sbb
jcxz
imul
mov
and
shlb
outsl
test
mov
dec
pusha
popf
jecxz
mov
icebp
ficoml
movl
cmp
es
jmp
stc
daa
imul
movsl
pop
xchg
xchg
rcrb
test
mov
imul
imul
sbb
mov
pop
and
aaa
sub
int
xor
inc
icebp
rcrb
dec
push
sbb
mov
and
push
stos
rcrl
setae
je
cli
std
movsb
out
sub
jp
inc
ret
test
pop
movsl
rcll
testb
mov
repnz
hlt
cmp
and
sbb
jnp
jno
loop
xchg
les
shlb
aad
mov
les
mov
repnz
sbb
pusha
cli
inc
jge
aas
adc
bound
stos
into
and
bound
lret
out
clc
ljmp
rorb
cmp
movsb
mov
outsb
add
shll
lock
and
jbe
test
call
int3
cli
cmp
test
sub
jmp
sahf
das
cmp
xchg
jecxz
mov
xchg
mov
or
add
es
push
sub
outsl
in
xlat
cld
mov
mov
sub
int
add
ja
ret
in
jno
icebp
xchg
xchg
lock
je
push
xor
jb
jmp
rclb
shll
and
sbb
cmp
call
jge
jno
in
insb
in
test
xor
mov
push
bnd
mov
adc
mov
xor
lcall
mov
xorb
push
cmpsb
in
dec
mov
adcl
insb
xchg
push
cwtl
xor
ret
adcb
test
daa
pop
mov
out
mov
sub
push
iret
pop
aas
xchg
lds
aam
lds
xor
mov
add
notl
repz
or
fsubp
loope
fists
ljmp
fdivrl
es
mov
movsb
mov
jns
xchg
push
cmp
xor
sahf
daa
add
xchg
sbb
scas
cmpsl
out
jle
or
push
mov
lods
dec
nop
rcll
pushf
mov
into
pushf
test
add
mov
pop
aam
cmp
mov
pop
mov
sbb
cltd
push
mov
sbb
xor
mov
sbb
mov
dec
or
jmp
je
jne
adcb
xor
call
mov
xchg
testl
scas
inc
push
pop
push
mov
and
enter
inc
fisubrl
dec
loop
mov
loop
idivb
pop
jb
lahf
pop
in
jmp
add
ljmp
clc
cwtl
cld
cmp
add
aam
push
fsts
fiadds
sub
pop
dec
xor
insl
mov
orb
push
xchg
test
mov
stc
ss
test
jne
mov
test
ret
pusha
gs
out
lods
dec
cwtl
cmc
jmp
xorb
lret
hlt
addl
cs
cld
push
orl
or
clc
xor
clc
mov
jbe
fs
imul
inc
ss
jae
push
sarl
xchg
ljmp
addr16
push
cmp
je
les
or
mov
cmp
cmp
or
or
mov
mov
add
push
push
jmp
out
sub
ds
sub
addr16
dec
jmp
mov
mov
rorb
pop
mov
cwtl
jg
sbb
testl
cmp
je
mov
das
jmp
pop
push
movsb
jmp
imul
cmp
adc
subb
inc
jp
ds
rolb
mov
fwait
clc
xchg
inc
imull
movb
xor
dec
mov
loop
cmp
leave
leave
xorb
out
sub
pop
loop
adc
cmp
xor
rcrb
jmp
dec
out
adc
jo
mov
leave
out
cld
aaa
pop
mov
clc
pop
out
push
jno
test
jg
pop
adc
das
shll
inc
mov
xchg
mov
mov
aam
mov
and
xor
sbb
lods
stos
mov
aad
in
in
in
mov
sub
sahf
cmpsb
cwtl
push
sub
cmp
sub
inc
call
int3
or
xchg
in
jmp
push
push
nop
jecxz,pt
cli
and
add
sbb
aas
mov
sbb
adc
lret
je
adc
daa
and
out
hlt
into
push
scas
xchg
cmp
and
mov
jmp
and
pop
add
daa
xchg
xchg
test
xor
lds
mov
xor
popf
repz
push
or
push
dec
in
inc
inc
aad
fdivp
les
fldcw
in
insb
inc
sbb
aas
pop
xchg
push
adc
fbld
sub
push
sub
dec
gs
and
and
inc
scas
nop
insb
jmp
push
cmp
cmp
push
fstl
pop
in
inc
sub
sub
sarl
lds
add
cmp
ljmp
test
popa
add
dec
push
enter
lcall
sbb
in
xor
out
int3
hlt
jno
inc
dec
inc
ljmp
push
sti
ljmp
mov
xchg
cmpsl
mov
mov
aad
andl
aam
adc
ret
js
jp
je
iret
mov
sarl
int3
cmp
ret
fyl2x
mov
in
sbb
pushl
add
or
pop
jg
and
outsl
push
pop
fdivp
das
pop
imul
jmp
pop
and
repnz
lcall
adc
inc
jmp
iret
movsb
rep
push
icebp
sub
pop
dec
jecxz
pop
nop
jmp
mov
shlb
fwait
sbbb
roll
cli
jl
lock
shl
push
or
xor
jp
popa
aad
mov
xor
mov
pop
lret
adc
sahf
push
in
cmp
shlb
mov
add
out
mov
push
push
in
xor
imul
cmp
aaa
in
pop
xchg
sbb
xchg
and
cmpsb
ja
xor
popa
mov
ljmp
adc
cmp
int
data16
loope
adc
std
xorb
test
xor
test
adc
push
cmp
add
arpl
pusha
pop
std
mov
mov
pop
iret
hlt
pop
xchg
fcmovnu
sub
cmp
imul
subb
push
fisubs
rcrb
in
sub
push
jno
hlt
enter
stos
xchg
ja
pop
fstpl
jl
cltd
xchg
inc
js
mov
lods
stos
add
pop
inc
xchg
cli
jge
imul
and
sub
push
push
popf
nop
mov
out
adc
cmp
lds
mov
jb
lret
sbb
arpl
dec
loop
rorl
cmp
movsb
fstl
test
imul
xlat
cmc
jge
outsb
out
xchg
jle
ljmp
mov
sbb
mov
loopne,pt
in
lds
addr16
test
es
es
test
xchg
or
sbb
mov
lock
xchg
pop
cli
push
xlat
stos
stos
jb
cmpsb
call
inc
jno
dec
pop
pop
jb
xchg
push
stos
mov
mov
xorb
push
std
gs
pusha
insl
cmc
and
mov
sbb
or
or
xchg
mov
ljmp
sbb
adc
inc
jg
loopne
test
sub
cmpsl
cmpsb
mov
or
in
pop
push
pop
xchg
add
cmc
jns
sbb
sti
jl
cmp
xchg
and
ret
dec
fildll
inc
dec
add
shlb
js
fistl
sub
or
das
je
jae
loope
into
dec
frstor
int
stos
cmpsb
and
data16
dec
xchg
inc
daa
or
ja
xchg
and
and
adc
sub
fwait
or
ljmp
pop
subb
xlat
or
mov
inc
mov
ja
insb
ret
rclb
xchg
cmp
pop
mov
mov
sbb
jg
cmpsl
cld
or
xchg
mov
inc
loopne
dec
fstl
add
push
inc
push
outsl
jle
cmpsl
fists
das
ja
std
mov
xchg
xchg
xlat
sub
pop
sub
jno
arpl
mov
nop
fisttpll
dec
jmp
sbb
jp
inc
lods
xchg
cmp
and
dec
sahf
add
addb
xchg
xchg
pop
mov
mov
jg
hlt
das
gs
xor
inc
int3
push
mov
sbb
enter
mov
jmp
rcll
mov
ss
cltd
testb
inc
in
adc
pop
dec
or
push
cmp
ret
cmpsl
jo
adc
mov
push
adc
ja
aaa
js
pavgb
or
and
xchg
jns
sbb
mov
repnz
fistpll
mov
adc
sbb
and
rolb
adc
in
push
in
clc
gs
insb
mov
inc
xor
rcll
and
xchg
jmp
mov
push
xchg
test
dec
test
out
movsl
popf
insl
std
lds
pop
mov
imul
push
rol
addl
mov
pop
lret
lds
sbb
fidivl
inc
movsl
jmp
push
cs
xchg
adc
adc
scas
jae
sarl
inc
sbb
sahf
jb
jnp
sbb
fwait
addl
mov
adc
stc
je
popf
xor
jge
xchg
mov
lcall
sbb
dec
bnd
ret
inc
ficompl
pop
xchg
rclb
pop
sarb
pop
push
inc
pop
add
addr16
adc
das
pop
sub
jne
adc
sahf
jne,pt
pop
push
fistpl
pop
pop
mov
push
xlat
xlat
imul
sub
test
adc
popa
sbb
cmp
stc
mov
sbb
pop
popf
mov
add
add
xchg
cmp
add
cmp
pop
cld
fadd
sub
ds
shr
sbb
and
clc
mov
or
mov
je
hlt
xchg
jnp
xor
add
iret
test
lret
mov
dec
jo
push
cmp
dec
xorb
mov
addl
inc
jl
out
stos
shlb
xor
sbb
clc
pop
xchg
ja
ss
inc
lret
out
cmp
lods
jnp
or
js
ja
mov
add
test
clc
repnz
mov
add
push
dec
dec
jne
imul
stos
or
sbb
lcall
negb
mov
xor
push
fistpll
test
call
inc
out
cld
subb
dec
dec
sti
out
jp
cmp
adc
dec
or
lahf
adcb
popf
cmp
loope
mov
sub
dec
pop
xor
lret
pop
mov
push
frstor
push
xor
hlt
cmp
adcl
or
fistl
lea
and
dec
lcall
mov
in
hlt
sub
incb
inc
xorb
xor
aaa
arpl
xchg
mov
out
xchg
xchg
dec
inc
cmpsl
add
push
xor
mov
xchg
dec
pop
ficoml
imul
push
pop
jg
pop
lods
dec
mov
mov
xchg
jbe
outsl
adc
and
fcmovbe
adc
addr16
inc
dec
inc
js
pop
push
push
shll
push
adc
jo
pop
add
daa
jo
sti
hlt
sbb
jb
mov
lcall
jge
fs
xor
mov
sbb
sub
outsl
mov
push
call
in
cltd
addr16
stos
loopne
sti
leave
lret
in
xor
inc
push
dec
adcb
pop
jle
lock
adc
push
mov
test
pop
mov
or
sub
lret
lcall
popa
rcr
push
mov
cmp
mul
mov
ror
bound
push
xor
add
loop
mov
fchs
jne
loopne
cli
sub
daa
mov
cmp
inc
loopne
dec
fs
and
mov
or
nop
cmp
mov
cmp
jno
int3
shlb
rolb
sbb
es
aaa
mov
mov
loopne
cmpsb
leave
xchg
push
push
mov
mov
popf
pop
repnz
xchg
sub
nop
push
repz
add
arpl
out
lret
popl
stc
add
mov
stos
ds
js
cmp
cmp
test
fimull
jge
or
or
or
and
adc
xor
cmp
lock
xchg
jb
stc
mov
cmp
cmp
jne
loopne
je
js
xor
scas
xor
dec
gs
push
dec
test
repnz
or
repz
mov
mov
shll
push
inc
sahf
inc
pop
mov
add
adc
push
dec
mov
fcoml
les
mov
pop
lret
sub
pop
sahf
pop
lods
inc
mov
cmpsl
cltd
fisttpll
sub
push
push
xor
sub
aad
push
xchg
mov
or
mov
cmc
rorb
aam
jne
sub
in
insl
push
or
cli
xor
rcll
enter
pop
into
cld
ficomps
aas
cmpsl
bound
fbld
push
lcall
jno
push
out
xchg
mov
nop
cmpsl
scas
and
gs
mov
push
call
xor
cmpsl
push
xchg
fiaddl
mov
adc
pop
xlat
insb
mov
push
pop
mov
cltd
mov
orb
mov
lods
sub
sbb
xchg
jle
data16
mov
dec
mov
neg
cs
cmp
xchg
add
jae
or
or
sbb
fisttps
or
jnp
mov
or
mov
mov
sti
in
adc
cmpsb
or
cmp
cmp
xchg
scas
sti
adc
mov
out
mov
jecxz,pt
jmp
or
movl
sbb
push
pop
aam
xor
cmc
test
stos
popa
int
dec
popf
sbb
mov
fsubl
pop
shlb
das
push
dec
daa
idivb
fnstcw
inc
movsl
in
dec
jne
aas
inc
orl
mov
or
aas
dec
push
cmp
pop
mov
imul
call
jnp
xchg
add
pushf
fisttps
cmpsb
mov
mov
mov
ror
mov
or
stc
loop
bound
cli
cmpl
cmp
movsl
mov
sbbl
adcl
notb
push
cmp
mov
pop
jle
sub
out
fucomip
mov
push
inc
roll
lret
cmpl
out
imul
movsl
mov
imul
adc
xchg
mov
lret
push
and
mov
int3
jge
inc
addr16
dec
mov
add
mov
icebp
mov
fsubp
or
inc
stos
add
adc
idivb
enter
enter
ds
jns
inc
sub
or
gs
fwait
jle
jl
jbe
js
outsl
test
jg
mov
fsubr
push
call
and
jge
jmp
dec
scas
inc
hlt
test
push
add
jne
ret
cltd
mov
jg
mov
xchg
aaa
in
inc
pop
add
mulb
dec
dec
mov
inc
roll
ror
in
inc
scas
mov
jne
icebp
loope
adc
aaa
jne
bswap
jno
pop
enter
push
inc
sti
inc
push
cmp
mov
adc
or
fdivr
mov
imul
jge
push
xlat
aad
out
fcomps
not
dec
daa
cmp
pop
push
inc
and
mov
push
or
loopne
movsl
in
adc
xorb
mov
or
mov
pop
sbb
push
add
imul
popa
mov
add
fwait
je
out
and
out
out
test
cmc
movsl
shll
fdivrs
ss
repz
cltd
mov
sub
sbb
mov
test
call
jno
daa
mov
popa
sub
inc
loop
ret
sbb
repnz
mov
stos
stos
jno
lock
lret
and
or
sub
cmp
dec
nop
or
xor
out
dec
sub
inc
jp
incl
out
mov
cli
aas
stos
popa
xchg
clc
test
imul
xchg
cmc
inc
clc
add
loope
fstpl
jge
jbe
inc
or
sbb
sub
or
scas
loop
add
call
or
inc
pop
pop
sbb
cltd
dec
mov
ffreep
sti
pop
fisttps
cmc
lock
mov
aam
adc
mov
and
add
sti
and
and
fisttpll
pop
jge
jmp
jo
sti
sbb
sbb
dec
lods
pop
insl
add
hlt
lods
xchg
insb
jmp
pop
lretw
iret
aam
or
xchg
in
movl
outsb
sbb
out
test
add
loop
loop
dec
pusha
mov
add
loope
enter
fwait
push
fnstsw
sub
cs
xor
out
dec
xchg
sub
dec
cmp
pop
dec
fcomi
out
mov
rcr
rorb
mov
add
lods
pop
dec
clc
push
dec
movsb
cmp
jb
push
add
add
ret
insl
push
xchg
mov
adc
cmp
insl
add
mov
cmp
mov
pop
loope
inc
sbb
push
mov
push
gs
lods
and
notb
loop
sub
stc
jae
rcrb
mov
shlb
and
adc
jae
fidivl
stos
mov
jno
leave
mov
das
or
repz
mov
shll
icebp
ds
xlat
outsb
enter
or
in
hlt
stc
hlt
stos
jmp
add
or
test
lock
inc
icebp
repz
push
xchg
pusha
cmp
add
fdivr
xor
mov
out
sbb
pmaxub
push
jbe
push
push
outsb
jle
mov
mov
mulb
in
rcr
xchg
add
orl
or
inc
jne
mov
fidivl
mov
inc
test
jp
push
in
xor
sbb
inc
mov
mov
fadds
sti
cmp
add
inc
aaa
inc
outsl
mov
add
jecxz
xchg
push
fsubrs
fisubl
jns
mov
and
xchg
mov
sbb
ja
ljmp
or
jge
cmpsl
dec
mov
xchg
cmpsb
insb
push
mov
out
into
pop
inc
pop
sti
cmpsb
inc
rcll
sti
sub
cmp
test
sbb
jle
out
sbb
adc
jns
ss
les
pop
pop
cs
cmp
mov
cmp
mov
cmp
adc
xchg
dec
insl
xchg
dec
dec
dec
dec
push
or
add
enter
mov
mov
scas
xor
inc
outsb
mov
andb
cmp
push
inc
leave
xchg
outsl
testl
xchg
adc
xchg
insl
xor
aaa
sti
popf
test
xor
add
mov
lahf
insl
popf
and
in
icebp
hlt
xor
xchg
adc
jle
add
adc
add
fucomp
push
clc
jns
mov
inc
jo
out
pop
icebp
insl
jo
rorl
test
lds
cmpsl
jecxz
dec
or
std
push
fisubrs
jmp
pop
jbe
pop
and
sbb
loope
out
out
lods
rorl
test
pop
cwtl
test
ss
adc
imul
xor
mov
inc
pop
nop
aaa
iret
inc
jne
inc
test
mov
scas
xor
mov
je
cmp
js
lret
leave
cltd
mov
rol
cwtl
dec
popf
ja
iret
xchg
mov
xor
xorb
mov
outsb
or
sub
xchg
popf
test
sub
lea
shr
add
in
push
and
aad
pop
daa
sbb
xchg
repz
ds
jp
test
xchg
lea
loopne
popa
mov
imul
add
cld
les
xor
clc
enter
cmp
dec
add
jne
dec
inc
adc
sti
jae
dec
lea
mov
aam
and
in
sbb
inc
ljmp
ret
test
and
out
jge
sti
setnp
es
mov
mov
push
and
icebp
cmp
scas
icebp
sbb
or
push
call
mov
mov
scas
mov
mov
and
xchg
inc
xchg
cmovno
jnp
out
cld
int
jl
repz
mov
jle
dec
cmp
push
jbe
out
and
loopne
pop
dec
lds
sbb
and
clc
adc
rorl
push
adcb
jp
les
inc
fmul
xchg
and
int3
sahf
and
xor
xchg
loopne
jne
sub
rclb
mov
xchg
inc
lds
test
mov
es
and
clc
in
mov
lahf
or
pop
pop
sbb
int
leave
shll
bnd
out
jge
xchg
jb
stc
jle
sti
roll
bound
sbb
aas
vmwrite
outsb
enter
add
scas
add
mov
leave
mov
push
stc
or
dec
lods
cwtl
movsl
repz
jle
dec
das
xchg
mov
pop
sub
sub
roll
sub
mov
mov
mov
add
mov
fcomps
sub
inc
cmpsb
int
test
out
sub
pop
dec
addb
dec
pusha
mov
addb
inc
lea
adc
outsb
daa
xchg
jmp
pop
add
scas
out
ss
out
xor
cmp
cmp
adc
pop
mov
or
int
loopne
inc
sbb
inc
or
xchg
lock
and
repz
add
andl
inc
and
decl
push
mov
sahf
leave
out
aaa
or
dec
addr16
mov
test
inc
data16
jmp
les
lret
icebp
cltd
movsl
cmp
shlb
cmp
jle
xchg
enter
xor
add
push
roll
pop
mov
xlat
sbb
cs
mov
test
mov
or
fwait
xchg
jmp
cld
aam
repnz
xor
and
dec
adc
les
scas
pop
and
ret
add
pop
fbld
into
dec
cmp
leave
jp
call
aad
insl
or
ffree
loop
fisubrl
or
xchg
cmpsl
adc
dec
xchg
leave
or
jne
out
cmp
adc
shl
push
imulb
push
dec
pushf
adc
inc
xchg
cmp
fs
mov
sbb
aaa
icebp
jl
or
loopne
mulb
dec
sbb
cmc
ror
andb
adc
cmp
and
xchg
dec
push
mov
test
nop
lea
push
inc
aad
in
je
cmp
xor
or
loope
pop
mov
arpl
into
fs
pop
rorl
sbb
or
push
adcl
lods
inc
inc
fwait
pop
repz
inc
imul
inc
xchg
hlt
leave
inc
sar
pop
cmpsl
dec
ss
xchg
or
dec
jne
jne
push
lret
fistpll
es
shl
sub
aas
and
pop
dec
sub
dec
adc
mov
jne
push
cli
push
push
into
adcb
cmp
popf
iret
xor
lcall
mov
inc
dec
jge,pt
mov
push
dec
adc
mov
in
xor
inc
lcall
dec
insb
scas
adc
pop
adc
addb
xchg
xchg
mov
push
cmp
or
lock
sbb
jge
xchg
in
cmpsl
push
movsb
outsb
mov
ja
jge
iret
ror
cmp
lods
inc
shll
in
mov
cli
loope
push
push
inc
les
push
pushf
xor
pop
xor
or
popf
frstor
rcrl
data16
ja
into
out
xor
fildll
roll
fsubrs
mov
scas
push
dec
in
dec
pop
popa
in
jle
nop
orb
sti
and
icebp
jl
addr16
pop
repnz
xchg
int
shrb
xchg
aaa
xor
cmp
pop
fstl
inc
sbb
xor
jbe
jp
jmp
into
mov
xor
sahf
std
fisubl
cmpsb
push
cmpsb
imul
dec
clc
push
les
jbe
cvtpi2ps
push
jb
pop
in
clc
cwtl
fidivrs
scas
lcall
jecxz
pop
addl
jmp
cltd
in
mov
mov
cmpsl
fwait
cwtl
jle
mov
cmpsl
shrl
clc
or
fwait
gs
mov
fiaddl
outsb
cmp
loope
dec
rclb
in
sbb
es
jecxz
fcmovnu
fwait
pushf
inc
adcl
mov
outsl
lds
and
cmp
sbb
js
shrl
dec
or
je
sbb
aam
or
sahf
daa
jns
or
inc
ret
pusha
ja
into
popa
inc
int3
test
sti
sub
mov
jnp
mov
ljmp
stc
mov
push
int
lcall
icebp
mov
scas
outsl
or
mov
adc
dec
mov
dec
test
mov
clc
or
repz
sbb
out
fs
push
test
add
jnp
lock
jl
add
jo
imul
mov
ret
xor
jge
mov
mov
fs
xlat
sbb
stos
jle
push
hlt
jmp
enter
lods
push
sar
sub
mov
cli
in
cmp
in
call
mov
inc
pop
dec
ret
clc
shrb
mov
mov
popf
cmp
imul
xor
imul
out
mov
sub
mov
pop
pop
push
sub
cmp
sub
xchg
push
aas
out
xor
jmp
pop
cmp
mov
repz
insl
clc
and
icebp
pop
lcall
movsl
mov
cmp
pusha
addl
add
xor
pop
dec
fsubs
mov
ds
insl
notl
testb
mov
icebp
in
outsl
gs
iret
jae
xchg
push
adc
inc
xor
xor
fchs
adc
cmpl
arpl
jo
sahf
in
sahf
rorl
mov
add
mov
loop
fs
sub
fnstcw
cmp
mov
cld
inc
incl
ljmp
jl
cmp
rcr
xor
lret
adc
mov
cmp
call
lret
adc
xchg
and
sbb
sub
repz
les
retw
pop
xorl
sti
outsb
jns
xchg
int3
shll
les
mov
in
xor
xor
test
outsb
ficomps
hlt
mov
pusha
cltd
sbb
cmc
stc
aad
shrb
sub
or
addr16
xor
lods
data16
and
scas
xlat
jl
push
xchg
or
jno
pop
data16
add
test
inc
mov
pop
fnsave
push
cld
in
idivl
adc
pop
mov
shll
test
xchg
pop
dec
mov
jle
adc
loopne
mov
add
popa
mov
fistl
in
icebp
aad
out
xlat
jno
push
sbb
xor
sbb
fsubrl
xchg
and
cmp
subb
dec
subb
daa
adc
int3
movsb
sahf
lcall
fisubl
xchg
add
test
xchg
xchg
popa
gs
int3
lods
mov
mov
and
and
mov
addb
or
or
movsb
xorl
cmp
ja
out
pop
pop
test
and
pop
dec
mov
test
in
mov
pop
sub
push
bound
or
in
mov
leave
shl
mov
inc
pop
out
cli
mov
sub
xchg
movsl
dec
mov
inc
xchg
out
push
mov
fimuls
mov
pop
aaa
sarl
int
stos
inc
pop
fwait
push
movsb
xor
pop
pop
mov
out
bound
jecxz
jb
add
negl
enter
sbb
les
cmp
push
jge
cmp
cmp
shrd
cwtl
int
iret
or
outsb
loop
jns
dec
pop
shlb
sub
mov
imul
mov
adc
jl
push
clc
ja
xor
cld
shrb
cmpl
push
popa
sarl
scas
push
lock
jecxz
push
cmpl
bound
jne
pusha
mov
bt
sub
jne
mov
fnstcw
adc
jge
sbb
lds
and
test
ficoms
dec
mov
ret
sub
mov
cmc
push
sub
inc
xchg
jl
sti
sbb
xor
xchg
pop
mov
xchg
or
daa
cli
and
mov
jnp
push
js
sbb
inc
pop
leave
adc
mov
mov
imul
insl
jle
pop
lret
pop
mov
add
inc
sbbl
adc
mov
mov
pop
pop
dec
push
inc
sub
push
and
pop
cmp
dec
out
sub
aad
mov
roll
jmp
dec
inc
jb
mov
add
mov
enter
aad
lea
enter
mov
xor
mul
jle
dec
repnz
mov
xorb
xchg
pop
or
lahf
imul
jbe
daa
insb
adcl
bound
inc
inc
mov
add
sbb
cmp
insl
mov
mov
dec
jno
fcompl
xchg
fwait
adc
repnz
mov
fdivs
sti
stos
ds
lret
ds
xor
adc
sub
mov
dec
inc
negb
dec
mov
cmp
enter
punpckhwd
adc
pop
push
popl
jmp
cmp
dec
or
sbb
test
adc
pop
xchg
inc
dec
stc
jne
sbb
lock
movsl
repz
lock
int
adc
sbb
sub
push
pop
cmpb
stos
std
pop
mov
xchg
xor
aam
fisttps
es
mov
int
hlt
inc
aam
mov
imul
mov
jno
push
cmp
jg
mov
fimuls
mov
pop
fwait
neg
daa
outsl
mov
xchg
cmpb
gs
jmp
jno
push
push
lods
test
dec
leave
adc
ret
dec
add
out
mov
or
into
in
mov
xor
mov
push
push
ds
adc
sti
or
jg
push
xchg
add
jns
mov
mov
cli
out
pop
fldl
sbb
add
out
rcll
or
pop
arpl
lods
adc
sub
jmp
jecxz
cmp
ret
jle
pop
out
ret
inc
stc
hlt
in
jl
dec
inc
mov
fsubrs
pop
call
out
jge
sbb
inc
cmpsb
mov
push
fs
cld
push
and
fprem
je,pn
and
ja
repnz
insb
add
in
sbb
aaa
and
in
mov
std
rol
fistpl
sbbl
xchg
call
xchg
test
sbb
sbb
dec
fwait
adc
xor
in
xchg
fdivrl
pushf
adc
loopne
sbb
xlat
sbb
or
mov
fwait
cmc
pushf
mov
not
or
push
pop
jmp
lcall
add
icebp
imul
std
inc
dec
sub
movsb
das
push
shrl
decb
rcrl
mov
bound
and
jp
pop
ret
rcrb
in
stc
push
iret
sbb
fcoms
mov
inc
pop
outsl
pop
cmovne
insl
jnp
push
sub
bound
dec
cmp
push
cmp
and
sbb
push
outsb
adc
mov
imul
cmp
dec
pop
gs
mov
pushf
cmc
sbb
imul
inc
aas
dec
pop
idivb
cmpsl
clc
adc
dec
xchg
fcompl
daa
cmp
cmpsl
xor
xchg
outsl
cmc
pop
xor
inc
call
aam
out
cmc
fwait
inc
inc
inc
jmp
sbb
inc
jnp
outsl
fsts
in
pop
in
jo
ss
adc
cmp
mov
or
sbb
cmp
cld
or
das
mov
adc
int
frstor
or
and
push
xor
add
cmp
ret
subl
int
jo
mov
cltd
cld
sub
dec
enter
test
insl
cmp
out
mov
stos
sub
jb
xchg
sub
loopne
mov
loop
add
xor
jecxz
in
mov
ffreep
cltd
inc
jecxz
addb
sbb
mov
mov
arpl
sub
clc
jmp
leave
mov
or
add
dec
lret
out
jno
push
cltd
popf
jne
lods
pop
sbb
fcmovb
add
subb
testl
xchg
mov
push
pop
mov
push
test
call
pushf
cmp
jb
mov
sbb
inc
sub
fcom
out
xor
ljmp
fsubr
adc
push
imul
cmp
test
pop
pop
ret
push
mov
cmp
test
mov
cmp
sbb
and
pop
mov
out
mov
xor
aas
add
stc
mov
sbb
pop
lcall
sbb
or
mov
mov
mov
pop
decl
imulb
ret
nop
pop
stos
push
das
repnz
xor
sbb
mov
incb
in
in
pop
insb
std
or
daa
mov
dec
push
xor
xchg
xchg
imul
jg
into
pop
dec
aas
push
rep
js
leave
int
jmp
mov
adc
jmp
mov
lds
stc
pop
mov
xchg
loope
ljmp
and
and
shll
xchg
rclb
jo
daa
mov
jnp
aaa
stc
xchg
mov
pusha
in
dec
push
bound
movsb
dec
lea
je
mov
popf
ror
icebp
clc
cmp
sbb
jmp
xchg
data16
jns
jo
gs
aad
mov
add
call
fcomi
dec
in
or
out
adc
fcompl
pop
scas
jl
fbstp
and
mov
loopne
add
or
stc
stos
dec
inc
lods
jo
or
mov
push
das
out
inc
pop
jmp
xlat
notl
dec
movsb
add
jl
inc
mov
dec
fldl
iret
add
sbb
outsb
pop
adc
xchg
and
pop
fsubl
cmp
js
sbb
xchg
adc
popf
xchg
movsl
push
xchg
cmpsb
jne
addr16
mov
pushf
adc
sub
jmp
add
mov
inc
push
mov
subl
addl
ret
jmp
mov
clc
jmp
xor
cmpsl
es
inc
adc
mov
cltd
bound
adc
iret
pop
std
call
hlt
out
cmp
xchg
test
test
xor
add
ret
cmpsl
mov
divl
pop
xchg
and
jo
pop
int3
xchg
mov
repnz
jae
rorl
and
xlat
push
and
jecxz
or
mov
xchg
add
adc
lods
sub
sbb
mov
cmp
andb
xor
pushf
push
mov
pop
repnz
lret
js
ss
adc
mov
push
mov
lret
inc
mov
dec
jge
scas
xchg
fidivl
dec
rcrb
mov
push
stos
xchg
lret
jns
clc
outsl
ss
mov
and
xor
mov
jecxz
sub
call
sbb
dec
mov
movsl
sbb
mov
and
push
data16
pop
mov
and
jle
push
xchg
fisttpl
pop
movsl
pop
pop
xchg
dec
clc
leave
xchg
xlat
lcall
push
xchg
push
popa
fdivl
loop
sbbl
pop
ror
mov
xchg
stos
orb
or
cmp
dec
pop
in
push
ja
movsl
inc
pusha
dec
fnclex
jp
rcrl
mov
imul
adc
loop
js
mov
fsubl
push
or
cli
mov
jno
dec
in
fdivs
shl
insl
mov
mov
imul
pop
test
cmp
cmp
push
or
cmpsl
insl
add
pop
lret
lock
mov
dec
xchg
lock
pushl
hlt
pop
push
inc
xlat
push
mov
mov
dec
test
cmpsl
dec
ret
pop
lret
jb
loop
dec
pop
lods
jmp
jbe
sbb
xor
sub
cmp
repnz
pop
push
pop
daa
add
imul
sbb
into
clc
cmp
mov
inc
mov
xor
aad
ss
push
sbb
ljmp
test
xchg
lret
out
mov
pop
jl
and
jae
dec
xchg
clc
push
dec
pop
adc
ds
add
adc
xor
mov
std
int3
sbb
std
adc
or
lahf
push
push
movsl
scas
test
sahf
mov
jns
xchg
sarb
push
movsl
popa
lcall
sub
pop
mov
inc
cmp
xchg
insl
scas
fdivr
jbe
jg
ss
std
push
addr16
push
add
popf
enter
or
jmp
push
movsb
mov
inc
aad
mov
and
int3
dec
sbb
rclb
and
xor
in
jge
pop
push
inc
push
mov
xchg
push
shll
push
call
cmpsl
pop
cmp
xchg
mov
frstpm(287
enter
stos
ffree
test
xchg
adc
push
mov
mov
or
mov
stc
stc
out
pop
ja
xchg
xor
popa
dec
sub
mov
push
inc
mov
cmp
rorl
je
loopne
lcall
fs
dec
xor
fsubl
hlt
test
push
mov
pop
inc
jle
outsl
outsl
add
mov
int
jg
mov
outsb
cmp
xchg
sar
jmp
stc
mov
aas
pop
ficoms
cld
js
lods
clc
in
sub
inc
lahf
call
in
lea
bound
fcompl
jmp
push
jl
fwait
lret
idiv
or
sbb
add
lods
mov
ja
nop
std
push
cltd
mov
pop
xlat
inc
mov
fstps
icebp
daa
lea
adc
xor
in
fidivrs
sahf
push
adc
cmovl
shll
rcrl
and
inc
loopne
sub
adc
icebp
add
xor
mov
sbb
test
push
fmuls
jns
jno
xor
mov
xchg
sti
or
es
xor
cld
inc
dec
fxam
mov
or
rdrand
xchg
fbld
add
ret
cmpl
cmpsb
push
xor
xor
movsb
push
mov
mov
je
push
dec
outsb
push
push
ljmp
xlat
sub
cmc
aam
test
pop
inc
inc
test
jbe
cs
les
in
dec
addb
out
mov
sbb
fsubrl
add
push
loope
pop
adc
add
mov
sub
dec
cmc
sub
fidivrs
bswap
mov
jl
insl
das
push
fstpl
inc
cld
inc
or
dec
sbbb
lret
xor
mov
pop
sub
iret
cmpsb
push
test
cmp
lahf
or
xlat
pop
insl
jb
mov
pop
sbb
pop
inc
add
test
push
subb
nop
sbb
add
dec
int
pusha
int3
jg
hlt
sub
mov
add
adcl
jo
adc
dec
adc
int
pusha
inc
bound
jo
push
fs
xchg
cwtl
shlb
ljmp
sbb
adc
test
mov
jne
sbb
imul
in
nop
mov
mov
add
sbb
or
and
sub
out
lods
mov
enter
ss
les
jecxz
test
lds
or
sbb
inc
inc
jp
xchg
ljmp
push
cmp
mov
or
push
pop
fstp
rcr
movsb
lret
imul
mov
xchg
jge
sbb
push
and
jge
or
je
jns
imull
lahf
mov
pop
hlt
les
out
fcmovnbe
lahf
subb
outsb
notl
mov
pop
es
pop
dec
push
push
fsts
push
scas
cltd
jle
subb
push
mov
setl
fnclex
push
loop
and
sbb
cli
pop
enter
pusha
mov
out
and
and
es
imul
xchg
sub
push
dec
inc
mov
sbb
jge
and
or
cmp
insb
enter
bound
arpl
bound
add
mov
mov
adc
das
js
and
mov
xchg
scas
movsl
mov
xor
push
in
add
cli
pop
lret
dec
cmpsl
cmpsb
ja
xor
inc
jo
pop
sbb
sbb
jg
stos
cmp
fs
mov
pop
call
cmpl
int3
inc
insl
scas
sub
add
sbb
insl
inc
pop
out
xchg
rorb
pop
or
pusha
lcall
mov
xchg
pop
fnsave
fbstp
insl
popf
mov
cmp
je
fisubl
sub
fdivrs
sub
lods
jmp
out
pop
dec
fsub
jo
stos
inc
and
lret
cmpsb
scas
ret
out
imul
pushf
xor
xchg
xchg
jmp
mov
push
in
sbb
mov
xor
pop
xchg
mov
shll
cmp
fisttps
das
mov
push
fldl
inc
stos
adc
loopne
jmp
mov
jg
arpl
orl
int
push
push
enter
mov
push
adc
sbb
adc
inc
popf
call
repz
ss
bound
cmpsl
adc
test
add
or
out
aad
bound
test
js
sub
imul
mov
mov
push
add
mov
out
int
shlb
xchg
jns
jo
mov
dec
xchg
pop
mov
adc
jnp
loope
clc
js
shl
loop
sbb
repnz
mov
adc
add
sub
test
ja
gs
add
adc
xchg
xchg
dec
into
shrl
add
xor
setle
pop
arpl
inc
in
subb
ja
push
enter
add
adc
mov
xchg
insl
cmp
xchg
mov
sahf
gs
das
or
in
mov
stc
ss
aad
loop
pusha
fstl
imul
xchg
fwait
adc
dec
daa
push
pop
jo
das
call
imul
in
cmp
popf
jle
mov
enterw
aam
movsl
das
push
mov
and
add
xchg
xchg
mov
mov
ficomps
pop
inc
les
sbb
das
inc
ja
into
aam
jae
mov
out
incl
pop
xor
sbb
fnstsw
cwtl
popf
lret
ja
pop
adc
addr16
inc
scas
addr16
loop
loope
mov
imul
push
dec
push
lods
pop
mov
pushf
xchg
mov
inc
mov
dec
mov
cmp
mov
aam
mov
xchg
ffreep
idivb
loope
es
rorl
lods
rcrb
push
inc
mov
sub
push
arpl
sub
and
call
das
les
jecxz
ljmp
and
ja
or
loope
push
pop
js
notb
fsts
push
xchg
stos
xchg
sub
test
adc
pop
adc
lock
out
lock
mov
data16
xchg
add
dec
sub
and
push
mov
push
mov
sub
pop
int
adc
movsb
dec
outsb
adc
sar
adc
adc
shrl
jns
sub
add
mov
xor
pop
lret
hlt
cmc
pop
mov
js
pusha
jle
pop
adc
jecxz
mov
jnp
pop
pop
jle
mov
pop
insl
loop
or
outsl
and
notb
inc
clc
inc
push
pop
xor
add
dec
cmc
fdivs
cmp
mov
sub
fidivs
hlt
cs
add
int
adc
jecxz
les
outsl
ret
fists
mov
mov
js
es
stos
out
mov
dec
mov
mov
inc
repnz
and
cli
inc
xor
dec
xlat
jb
sahf
out
in
loope
sbb
je
mov
mov
test
dec
stos
addr16
daa
inc
stos
cmp
pop
shl
fildl
add
cmp
int3
aaa
add
adc
out
pop
cld
leave
mov
hlt
sub
pop
movsb
mov
dec
mov
icebp
aaa
cld
or
push
loop
and
inc
hlt
sti
add
cs
mov
cld
or
adc
pop
cmpxchg
or
sarl
jno
aas
les
push
enter
xor
pop
push
inc
out
mov
mov
adc
push
jne
mov
out
mov
and
mov
jo
sarl
cwtl
div
mov
push
and
jne
cli
inc
sbb
cmc
jns
mov
mov
notb
out
cwtl
ss
in
les
nop
rorb
push
cmp
push
bound
cli
jnp
sbb
imul
popa
data16
int
dec
ret
lea
je
jp
imul
dec
popf
jnp
lcall
ljmp
in
jmp
insb
jmp
movsl
jo
jge
jne
push
or
add
mov
test
dec
movsl
daa
jge
pop
jge
loop
ja
fs
sbb
inc
jle
pushf
les
push
add
push
das
mov
mov
icebp
mov
inc
std
mov
xor
pushf
ljmp
jmp
mov
push
jb
loop
mov
arpl
sbb
push
mov
push
repz
out
cmp
xchg
pushf
out
mov
sub
or
or
push
adc
scas
out
std
sarl
lock
popf
dec
imul
jb
sbb
fs
out
jecxz
cmpsb
mov
imul
iret
xchg
fdivl
rcr
mov
mov
pushf
nop
pusha
lea
dec
mov
test
aam
pop
push
in
mov
xchg
int
std
ret
adc
xor
cli
jnp
and
push
dec
pop
into
in
test
jo
in
pop
xlat
leave
rol
xchg
jb
ds
or
cmp
xchg
enter
xchg
imul
arpl
xchg
arpl
lods
je
inc
lcall
push
push
xchg
xchg
xchg
xor
stos
inc
mov
xlat
or
fildl
jle
incb
xlat
loop
dec
sbb
sub
mov
xchg
or
sti
cli
sbb
rclb
arpl
sub
int3
add
mov
imul
fnstcw
mov
xor
jecxz
test
mov
mov
adc
andl
lea
and
cmp
outsb
xchg
mov
mov
xor
shl
mov
movsb
fcompl
fdivl
and
dec
adc
mov
push
test
or
mov
xchg
into
add
cmp
sbb
adc
loop
jae
ja
jne
pop
push
xchg
sahf
push
fdiv
js
xor
loopne
dec
push
inc
popf
push
out
xor
xor
stc
sub
gs
push
stc
mov
inc
lock
in
jnp
mov
insl
lret
add
add
add
ds
pop
and
pop
lea
pop
push
cmp
jbe
pusha
mov
imul
lods
sbb
out
dec
mov
dec
imul
inc
xchg
pop
lock
ret
outsl
mov
xor
and
xchg
leave
scas
xchg
jp
inc
dec
imul
aas
pop
mov
stos
cmpb
xor
mov
insb
sarb
pop
mov
cmp
mov
xchg
xchg
and
sbb
jg
icebp
mov
push
or
loop
imul
daa
lea
jae
int
push
xor
xchg
jo
jecxz
shlb
cmp
in
push
cmpsl
adcl
cmc
mov
cs
mov
fsubs
sbb
aam
icebp
adc
add
ja
cli
stos
adc
dec
cmp
stos
call
pop
xchg
mov
lods
or
cmc
in
rcll
outsl
in
fnstsw
mov
push
in
int
push
ja
addr16
and
pop
arpl
mov
icebp
cltd
xor
imull
lods
push
int
nop
jg
xchg
dec
cmp
cmp
cmpsb
dec
in
xchg
jns
lods
outsl
inc
xchg
out
push
jl
lret
imul
call
js
jb
sub
xchg
gs
in
ss
popf
xlat
lret
lret
iret
imul
movsl
add
push
dec
cmc
inc
mulb
mov
clc
addb
mov
shlb
fnsave
aas
movsl
sbb
dec
aaa
push
test
cmp
mov
in
or
inc
lods
lcall
and
sarl
outsb
xchg
mov
fdivrs
sbb
xchg
cmp
cmpsl
movsl
les
or
aad
enter
push
into
faddp
es
jle
int
inc
popf
iret
out
pop
jge
cltd
adc
mov
sti
push
ljmp
in
and
bound
sbb
adc
jl
pushf
cwtl
dec
stc
scas
arpl
iret
popl
dec
arpl
cmpsb
jmp
jae
and
divl
inc
jnp
je
cmp
push
adc
push
push
in
dec
pop
or
adcb
or
pop
jbe
dec
pop
fucomip
mov
pop
lcall
stos
fs
cltd
ljmp
sbbl
adc
inc
int
pop
cmp
addr16
scas
adc
inc
fmuls
cli
pop
call
fs
xchg
jmp
call
std
jo
xlat
jecxz
std
or
pop
aas
and
and
add
cld
inc
mov
inc
incl
mov
sbb
mov
adc
rcrb
mov
sbb
lret
aam
jb
pushf
lods
leave
push
lds
cs
lret
xchg
dec
or
stc
sbb
loopne
movb
inc
pop
add
jno
out
or
mov
or
mov
sysenter
mov
pop
xor
in
shlb
sub
jg
push
lods
jecxz
std
fcom
xor
ja
fnstcw
mov
push
ret
call
mov
pop
jo
es
and
ss
mov
pushf
ret
mov
pop
les
push
ret
jmp
sub
imul
mov
push
pusha
xchg
mov
fldt
aam
mov
shrb
or
and
aam
fs
flds
dec
paddsw
adc
fists
pop
cmp
ret
jg
scas
mov
leave
sub
fidivrl
imul
and
or
ja
fcmovnbe
mov
sub
test
filds
pop
icebp
mov
shr
xchg
cvtps2pd
ror
and
xor
adc
enter
cmp
fs
in
stc
cmc
dec
fwait
adc
cmpsl
pop
jg
out
inc
imul
stos
cs
dec
mov
sti
lods
fcomps
lds
mov
and
sbb
lods
leave
cli
rorl
jl
sub
sbb
test
mov
iret
cmpsb
xor
push
int
add
movsl
cli
out
lcall
stos
pop
jns
inc
jne
adc
mov
xor
jmp
lods
jg
mov
or
pop
or
test
mov
dec
sarb
mov
int
add
xor
adc
mov
and
int3
xor
fwait
lahf
inc
inc
sub
mov
outsl
repz
ss
aam
push
dec
and
popf
loopne
sbb
mov
lods
cltd
pop
sub
jmp
xor
mov
xchg
cmp
enter
adc
ja
mov
imul
sbb
repz
dec
jb
or
pushf
stos
shll
cmpsl
dec
cmp
lret
fsubrl
hlt
xor
xchg
or
in
sub
iret
pop
jle
push
push
in
dec
or
pop
jecxz
loope
or
inc
mov
leave
cmp
push
hlt
mov
pop
movsl
cmc
and
push
popf
mov
lret
hlt
fistps
xchg
jb
mov
jne
jnp
and
nop
mov
push
int
addr16
aaa
pop
fists
lret
fcompl
push
test
mov
or
and
inc
xor
jno
fcmovnbe
and
data16
cmp
lret
mov
int
jl
dec
vpmacsdqh
jae
les
notl
xor
outsb
pop
into
add
mov
cs
and
mov
mov
cmp
xchg
neg
mov
xor
lret
daa
sbb
hlt
int3
xchg
push
mov
mov
rcrb
cmpsl
call
pop
loopne
jmp
and
clc
lret
fcmove
iret
fisttpll
stos
xchg
inc
out
lret
rolb
cmp
arpl
ret
enterw
in
cwtl
iret
fwait
stc
daa
test
dec
push
out
arpl
stc
cmc
mov
inc
cld
jge
push
add
sbb
or
xor
imul
dec
fistps
sbb
and
adc
dec
mov
nop
ds
loop
and
loope
add
lea
mov
adc
imul
pusha
mov
add
lock
push
scas
cmp
push
jae
incb
lods
lcall
mov
insb
jbe
shll
mov
push
arpl
add
std
jae
cli
mov
mulb
repnz
sbb
add
adc
test
dec
pusha
adc
testb
mov
xor
sub
call
and
jb
sahf
inc
daa
fbstp
and
inc
rcrl
sub
sbb
lret
es
cmp
lret
adc
mov
push
inc
aad
icebp
jno
sbbl
jb
imul
sbb
xor
shl
loopne
xchg
dec
shrb
movsl
add
or
adc
mov
xchg
add
pop
and
mov
fistpl
ds
mov
mov
movsb
dec
cmpsb
sbb
addr16
test
inc
hlt
pop
test
dec
lds
adc
arpl
mov
jle
push
in
pop
ja
jnp
mov
mov
pushf
sbb
sub
shlb
ret
pushf
je
add
push
out
cld
jg
addr16
and
push
jl
ljmp
or
dec
mov
and
jp
rcrl
xchg
mov
inc
jle
jge
pushl
add
mul
stos
int
lods
pop
fdivs
aad
xchg
mov
cs
pop
sti
call
sarb
sbb
mov
dec
push
lret
in
ret
loope
pop
push
or
inc
jl
push
mov
inc
bound
repz
sbb
xlat
cld
repz
pop
inc
xchg
mov
sub
adc
add
loop
sbb
das
or
jmp
dec
and
add
mov
mov
fwait
push
out
std
xchg
jno
scas
call
inc
pop
roll
cwtl
mov
shlb
andb
ret
inc
or
dec
in
ret
cmc
inc
gs
call
cmp
fnstsw
dec
cwtl
pop
jecxz
insb
mov
fldt
ret
sub
loop
lock
loope
das
in
lret
jp
fwait
sbb
filds
mov
pop
loop
push
sub
mov
loop
addl
insb
sub
lret
aaa
jl
jns
dec
xchg
pop
push
fsubrp
and
jb
cmp
mov
fwait
call
jp
hlt
insb
sub
jnp
push
and
add
xchg
inc
out
fbstp
dec
xorb
movb
jne
jo
mov
inc
sahf
imulb
lea
and
cwtl
faddp
and
or
push
pop
push
add
inc
andl
and
shrb
orl
ljmp
movsl
out
inc
shrl
mov
xchg
cmpsb
add
repnz
popf
shl
daa
cld
enter
outsl
in
push
inc
es
or
loopne
idiv
sub
xor
fsincos
pop
push
jns
sbb
fldl2e
jp
lods
iret
xor
test
jmp
dec
jecxz
outsl
mov
or
fdivrp
out
and
out
imul
xchg
testl
test
std
jge
jl
xchg
lea
addr16
and
cmp
mov
or
stc
lock
mov
fnstcw
movsl
mov
outsb
in
or
ss
dec
enter
lret
add
scas
sbb
add
or
cmp
les
jge
pop
sub
into
mov
pop
mov
idivl
cmova
lret
out
mov
dec
sti
insb
fnsave
std
stc
dec
dec
ja
shlb
push
mov
and
inc
cmpsl
dec
dec
fcmovb
cltd
fs
mov
cmp
sub
push
test
xchg
sbb
dec
dec
adc
imul
mov
sbb
pop
sbb
leave
dec
jecxz
inc
cmp
lahf
push
sbb
loope
push
pop
fcmovnu
fldcw
inc
xor
cmp
gs
cmc
push
jno
sub
jmp
pusha
mov
xchg
inc
cmpb
cli
jmp
fwait
adc
mov
jno
jbe
out
addb
adc
jge
mov
xor
stos
imul
movsl
jmp
push
add
lds
add
mov
mov
add
shlb
loope
dec
rolb
add
mov
jns
fadds
fdivrl
movzwl
xchg
jmp
mov
xchg
stos
adc
enter
in
mov
pop
inc
cmpsb
stc
dec
repz
pop
je
aas
mov
push
shlb
and
xor
ret
imulb
mov
push
xchg
push
test
outsb
popf
push
xchg
fldl
ds
ret
jo
out
sub
cld
adc
cmpsb
jp
movsb
popf
mov
mov
xchg
iret
fmuls
data16
mov
enter
aaa
pop
fdivp
mov
inc
imul
nop
in
sbb
xor
shrl
sub
inc
dec
stc
scas
and
mov
fld
call
in
aam
imul
sub
nop
jne
mov
jo
mov
sub
adc
xor
mov
mov
cmp
mov
mov
inc
and
rcrl
insb
lock
inc
sti
das
call
mov
sbb
adc
fiadds
mov
sbbb
xchg
mov
js
xor
mov
test
ret
or
add
cmpb
mov
sbb
push
mov
dec
push
xchg
jmp
inc
in
jmp
and
lret
gs
dec
pop
inc
mov
sub
mov
or
xor
ret
andb
cmp
fs
adc
in
sbb
out
movsb
out
add
jg
test
sub
mov
pop
popf
je
daa
mov
into
add
push
sub
out
xchg
loope
adc
jg
sbb
sti
popf
push
bnd
mov
sub
mov
mov
icebp
sub
movsl
nop
mov
sbb
sub
mov
addr16
add
test
dec
fistps
pop
in
sub
icebp
xlat
pop
cmpsb
push
mov
mov
loope
xorl
int3
aas
sahf
movsb
movsl
inc
movsb
mov
sub
add
add
lods
mov
mov
xor
fld
pop
xchg
mov
adc
cltd
sub
arpl
loopne
push
inc
dec
loope
cmp
ficomps
pop
jne
ds
call
inc
push
addr16
dec
jmp
xor
xchg
push
inc
clc
push
jo
pop
aas
cmp
lret
xchg
xchg
test
rol
fstps
jnp
ja
jge
int3
stos
sbb
dec
rolb
pop
mov
data16
iret
hlt
or
lret
add
insb
jno
push
out
insl
in
mov
jne
out
xor
pop
imul
jp
pop
sti
inc
mov
mov
je
xorb
daa
sbb
cmpsb
mov
mov
repnz
lcall
inc
mov
ret
mov
jae
iret
arpl
dec
push
sub
inc
cli
ret
sub
outsb
scas
repnz
pop
icebp
inc
lcall
mov
or
lea
add
lods
pop
fdivrl
shlb
hlt
addr16
ret
pop
push
dec
mov
in
xchg
mov
pop
jp
dec
fadds
xlat
filds
xor
cmp
inc
or
int3
scas
iret
addr16
stos
int
mov
pop
xlat
je
pop
pop
xchg
ja
mov
push
repnz
fwait
cmp
mov
mov
popa
hlt
jae
sar
stc
xor
insl
jns
data16
leave
sahf
into
push
fdivrs
repz
sti
dec
push
xchg
push
paddusw
push
xlat
ss
popf
cmp
pop
mov
dec
cmp
leave
dec
jp
outsl
and
mov
popf
mov
je
cmp
mov
jnp
cs
or
xchg
xor
cmpsl
mov
xor
cmp
sbbb
pusha
adcl
mov
sub
movsb
push
insl
mov
pop
mov
hlt
inc
pushf
or
mov
lcall
lahf
fmull
mov
push
inc
pop
mov
data16
ret
fcomps
mov
cmpsb
cwtl
imull
or
pop
jmp
shrl
pop
or
jbe
add
cmp
sbb
sahf
insb
movb
aam
arpl
test
clc
and
and
fistpll
orb
movsl
aad
fcompl
mov
and
scas
jo
outsb
dec
jb
and
insb
in
sub
fisubrs
adc
scas
js
push
jle
ja
jb
inc
loop
aad
call
xchg
loope
notb
mov
adc
aaa
ret
mov
push
inc
cli
inc
lock
xor
mov
pop
mov
or
icebp
call
aas
mov
dec
cmp
and
out
outsl
sub
iret
int3
addb
dec
sub
fbld
jg
arpl
mov
cwtl
lret
jmp
lods
push
or
insl
aad
mov
adc
jle
mov
lahf
adc
sub
daa
cli
inc
inc
and
push
cmc
insl
add
test
lods
cmp
or
enter
and
xchg
mov
fcoml
in
rcr
ja
in
add
jo
mov
ljmp
stc
mov
loop
jecxz
sub
sbbl
xor
ljmp
inc
nop
mov
mov
mov
fdivl
mov
daa
xor
fs
scas
scas
insl
and
pop
in
cwtl
jge
mov
pusha
fistl
leave
ret
xchg
test
cmp
ljmp
mov
hlt
mov
xor
push
in
dec
fbld
xchg
dec
cwtl
jb
mov
out
push
arpl
fmul
outsl
cmc
dec
into
xor
mov
dec
mov
add
sub
scas
push
mov
jge
rorl
shll
mov
and
rcll
mull
cmpl
aad
movsl
lea
push
adc
rcrb
mov
inc
arpl
mov
sbb
mov
xor
in
fldl
adc
pop
pop
push
lcall
push
mov
sub
psrlq
mov
ja
push
in
mov
xor
in
cmp
push
adc
sub
mov
pushf
sub
xor
mov
jb
cli
lods
xchg
sbb
sbb
cmp
pop
out
fstl
aad
lods
jo
sbb
ja
shl
xchg
xor
push
ljmp
test
dec
negb
andb
mov
rcrl
dec
movsb
aas
fdivs
mov
pop
pop
pop
or
fldt
mov
negb
in
outsb
aad
test
jmp
mov
repz
jle
cmc
mov
ljmp
xchg
inc
fld
loope
dec
xor
aad
ja
and
xor
addr16
mov
jp
orl
mov
call
mov
aaa
push
adc
inc
sbb
dec
xor
shlb
push
fs
pushf
mov
sarl
jne
dec
enter
and
lea
mov
pop
pop
test
mov
push
mov
cmp
jl
adc
fwait
sbb
mov
cmc
je
jecxz
adc
js
aad
jb
out
inc
and
sahf
movsb
sbb
jo
addr16
imul
pushf
scas
cli
paddsw
fdivl
loope
mov
inc
pushf
mov
cmp
xor
sti
movsb
ret
jb
cltd
push
cmp
jns
and
mov
les
mov
movl
jns
adc
dec
xor
cltd
loop
lods
push
test
repz
cmp
das
dec
jno
js
jecxz
xor
lea
orl
dec
adcb
adc
cltd
pop
jbe
push
hlt
mov
pop
jo
xchg
fcoms
outsl
pop
pop
xor
mov
jnp
mov
cmp
inc
jbe
sti
jns,pn
jns
lahf
test
loop
xor
sub
loopne
test
jg
daa
mov
hlt
push
fldt
js
cmpsl
cli
push
fcomps
cmpsl
sbb
mov
adc
and
push
scas
je
mov
stc
pop
pop
enter
test
bound
mov
xlat
add
lcall
and
std
into
or
add
into
add
push
nop
arpl
xchg
repz
jae
ret
mov
xor
clc
negb
stos
stos
lock
xchg
lock
cmp
add
push
imul
xor
xchg
sbb
scas
push
or
loopne
int
add
xor
jg
hlt
out
sub
cmpsl
out
push
mov
or
gs
aas
pop
inc
push
mov
xchg
mov
sub
das
icebp
popaw
clc
repnz
mov
rcl
iret
bound
cltd
xchg
imul
das
add
pop
test
push
not
outsl
iret
add
jns
loope
int3
mov
mov
cmc
imul
adc
xchg
cmpsl
dec
fsubrl
add
iret
rorl
rcrb
ljmp
or
fnstcw
xchg
out
aam
hlt
cmp
fsubrp
jl
inc
out
es
into
cmpsb
lahf
arpl
arpl
repz
rcrl
xchg
dec
cli
dec
or
push
jle
es
sub
stos
jns
hlt
mov
xchg
push
adc
scas
fisttps
shll
shlw
and
pop
jne
push
das
pop
in
mov
xor
or
out
pop
call
mov
fcmovu
ds
in
ja
adc
out
les
fldenv
push
adc
mov
dec
pop
inc
pop
sbb
adc
test
and
rcl
dec
pop
jnp
mov
mov
push
jno
aad
iret
jp
das
pop
push
iret
jb
insb
lcall
mov
mov
inc
imulb
xor
aaa
leave
push
jmp
dec
xor
mov
xor
insl
push
push
pushf
push
and
das
cmp
ret
fdivs
fwait
dec
adc
sub
leave
push
push
mov
add
xchg
iret
cmp
mov
lcall
mov
jne
gs
cld
iret
mov
push
inc
dec
pop
sbb
pusha
sbb
xchg
sarl
xchg
and
pop
add
pop
and
dec
hlt
xor
mov
test
mov
push
jae
into
mov
cmp
or
rorl
pop
outsb
mov
adc
insb
mov
jnp
daa
sub
or
test
ds
loop
in
jae
loop
popa
shll
fisubl
not
pop
inc
es
adc
inc
out
mov
mov
inc
fsubr
mov
out
push
xchg
xor
lahf
movsl
ret
cmp
stos
or
std
fistl
lods
int3
cmp
inc
jmp
fadd
add
cmp
bound
mov
fnsave
ljmp
push
mov
nop
lret
mov
mull
jb
test
adc
mov
pop
inc
mov
pushl
mov
add
call
je
push
dec
cmp
lock
leave
xorb
or
mov
dec
jnp
push
push
fisubrs
pushf
adc
mov
ja
jno
mov
lods
daa
sbb
xchg
rolb
sub
sbb
dec
ror
ss
shlb
xor
inc
pop
pop
fimull
inc
mov
push
negb
data16
mov
sahf
scas
ja
cmpsl
ds
adc
iret
xchg
imul
and
xchg
pop
mov
xlat
mov
jns
sub
jae
sbb
inc
ret
scas
sbb
push
cmp
xchg
mov
scas
mov
push
mov
fidivl
mov
inc
loopne
lcall
imull
imul
fisttpll
addr16
mov
je
sbb
arpl
subl
sub
out
mov
cs
xchg
popa
mov
jns
test
xchg
ss
fiadds
xor
std
dec
negb
aad
push
es
pop
sub
bound
jge
ss
movsb
cmp
push
ds
stos
arpl
add
lcall
mov
pop
inc
popa
pop
out
lock
jp
add
jno
jp
test
add
add
scas
aam
cli
xchg
mul
leave
jg
mov
mov
sub
aad
pop
shll
jno
or
sbb
lods
das
fwait
jbe
out
iret
push
aaa
jae
pop
mov
test
jae
aaa
inc
add
mov
add
push
les
jg
lcall
pop
repnz
repz
xor
cmpsb
adc
cmpb
fs
or
subb
and
sti
pop
filds
iret
sub
sbbl
test
insl
stos
jb
pusha
mov
data16
shll
shll
imul
pop
push
popf
mov
test
out
jle
ljmp
stos
sub
out
inc
faddp
fistl
push
push
push
adc
mov
push
cmp
adc
mov
xchg
ds
push
nop
inc
inc
sbb
mov
fwait
testb
movsb
sbb
inc
adc
inc
dec
xchg
jmp
repz
in
dec
dec
add
or
inc
jne
inc
ret
repnz
outsl
adc
mov
sub
inc
pop
sbb
aaa
ja
fs
movsb
stos
dec
sti
ja
mov
into
mov
mov
xchg
cmc
fisubl
insl
inc
popf
add
inc
add
jo
inc
xchg
shlb
popf
das
xchg
sub
sub
mov
scas
popa
and
xor
es
ret
jb
cmp
cmp
dec
mov
mov
jg
cld
inc
fdiv
cmp
aas
mov
adc
inc
xchg
repnz
push
xchg
sbbl
dec
fistps
sbb
bound
xchg
mov
xchg
mov
xchg
lods
adc
hlt
sti
rclb
lcall
sar
jb
mov
dec
fwait
mov
iret
popf
mov
sub
xchg
nop
mov
dec
cmp
pop
mov
shll
sub
orb
adc
xchg
inc
adc
gs
dec
mov
sub
sbb
push
xchg
xchg
xor
or
es
in
xor
popf
das
jg
mov
sbb
mov
in
xor
imul
mov
inc
pop
push
adc
mov
outsl
ss
mov
loop
mov
aaa
mov
xchg
inc
push
scas
std
out
rorb
scas
xchg
pop
dec
jl
mov
cmovs
mov
ret
lret
movsl
cmc
mov
cwtl
push
jge
pop
andb
and
xor
subl
lret
sbb
test
add
xchg
dec
mov
cmp
lcall
xchg
ja
mov
xor
cli
lret
stos
test
cmc
jl
hlt
rcrb
adc
lcall
clc
enter
imul
mov
dec
cld
jnp
in
aad
ljmp
push
push
les
in
push
test
jns
add
dec
inc
je
add
cmpsl
cltd
mov
leave
rcll
insb
fld
out
or
hlt
jle
icebp
lahf
mov
xor
les
fadds
push
mov
fisubs
addb
data16
movsl
xchg
test
mov
sahf
aaa
idivb
mov
popf
out
imul
cld
push
mov
add
cmp
loope
mov
daa
jnp
fsts
push
push
and
mov
and
outsb
imul
lcall
jmp
gs
sub
testl
ret
mov
push
in
stos
inc
xor
int3
mov
push
imul
out
cld
dec
divb
ja
pop
fadd
pop
mov
and
push
cltd
dec
dec
push
jmp
sub
std
cli
fadds
mov
xchg
pop
adc
dec
stos
lret
adc
sub
adc
sbb
push
pop
jp
pop
push
mov
mov
jb
mov
xchg
sub
xrstor
movsb
sbb
lcall
dec
mov
dec
into
pop
je
inc
mov
adc
ljmp
enter
ret
fistpl
sahf
inc
leave
adc
mov
push
fidivrl
scas
inc
fwait
cltd
fwait
and
arpl
sbbb
mov
xchg
into
jge
push
add
int
insb
sbb
xor
xchg
mov
add
mov
add
sarl
sub
or
mov
mov
ds
pop
roll
stc
mov
mov
add
xor
fs
fcom
cmp
jbe
jg
ss
imul
daa
ret
push
lcall
std
scas
adc
jecxz
pop
mov
rcrb
cmp
cltd
mov
push
add
add
ss
jl
pushf
aad
push
inc
add
lahf
push
and
xchg
add
mov
aam
cli
cmp
add
and
xlat
imul
pop
and
push
sti
js
add
jecxz
sti
inc
addb
imul
jle
out
cmpxchg
das
jle
xchg
dec
fisubl
cmp
ja
stc
adc
dec
cld
sub
sti
and
jbe
mov
push
lret
push
dec
mov
push
mov
add
sarb
loopne
repnz
sub
std
push
ret
adc
xor
push
in
cmp
xorb
cmpsl
fisubs
and
push
loope
lods
aaa
xchg
xchg
jbe
subb
lock
pop
sbb
add
popa
mov
push
sbbb
or
inc
xchg
aaa
pop
sbb
lds
mov
insb
les
xchg
mov
xchg
mov
into
testb
or
sbb
mov
imul
cmp
arpl
mov
pop
xchg
jno
xchg
or
push
or
sbb
or
gs
mov
ret
xchg
outsl
addb
inc
gs
mov
inc
testb
adc
sub
push
jb
mov
jl
clc
test
arpl
aas
pop
xchg
std
push
cmp
cltd
int
shrb
cmp
scas
jecxz
inc
add
sub
lret
stos
mov
and
lods
icebp
stos
test
test
mov
jnp
inc
dec
push
xchg
mov
movsl
jl
pop
and
out
push
negb
imul
test
rcll
es
push
jae
mov
lock
xchg
int
and
fistpl
ljmp
pop
rcrl
push
ret
shll
cwtl
push
out
dec
xchg
xor
adc
scas
test
testl
pushf
mov
idivl
loopne
inc
clc
sbb
sub
addl
add
fcomps
cmp
cli
das
jecxz
hlt
or
loope
mov
adc
xchg
mov
dec
and
ljmp
and
mov
pop
mov
lret
mov
shlb
mov
mov
jg
popa
push
test
icebp
sbb
lahf
and
shlb
mov
and
cmp
pop
cmpsl
xchg
xor
cmpsb
mov
ret
and
mov
and
pop
xchg
sbb
add
xchg
dec
std
mov
inc
xchg
mov
clc
dec
pop
sub
aaa
sbb
mov
jns
cmp
insl
push
xchg
cmpsl
ret
cmc
mov
shl
icebp
test
push
jmp
lcall
xor
int
or
mov
pop
or
jp
sarb
sub
xchg
push
insb
lret
repz
les
or
dec
push
lret
jbe
std
dec
pop
sbb
and
dec
ja
cmpsl
fwait
jmp
dec
sub
mov
pop
decb
repnz
cwtl
aam
hlt
loop
iret
ss
je
pushf
int3
and
sub
add
add
ja
movsl
pusha
lods
repnz
cmp
pop
js
test
stos
mov
lods
shl
mov
enter
pop
jmp
hlt
mov
jne
cmpsl
push
add
adc
lcall
push
inc
mov
testl
dec
in
cltd
lea
aad
pop
mov
fsts
ret
dec
je
cltd
loop
es
pop
or
push
dec
test
xor
dec
xchg
dec
dec
sbb
fbld
or
fiaddl
scas
sub
outsl
es
mov
lock
sahf
inc
sbb
jle
inc
inc
cmovl
arpl
aam
or
pop
hlt
jecxz
jae
lods
pop
in
or
lods
jle
push
add
inc
mov
out
xchg
popf
xlat
mov
jl
lcall
dec
movsl
aam
cmp
loope
push
int3
sub
jmp
addr16
cmc
cld
into
ret
rclb
sub
add
in
jnp
jge
push
cmp
daa
lret
mov
dec
frstor
test
xchg
mov
cmp
jns,pn
into
icebp
movsl
push
dec
jne
sbbl
adc
or
orb
in
ret
mov
mov
mov
inc
push
cmp
jb
or
adc
imul
inc
adc
sti
scas
divl
ret
imul
fwait
cltd
aaa
or
aam
inc
nop
mov
shll
scas
int3
push
inc
movsl
fcomi
pop
pop
jo
nop
call
sub
inc
add
hlt
jns
repnz
pop
cmp
mov
nop
push
stc
adc
xchg
rorl
adc
scas
cmpsl
movsl
jg
cmp
sbb
pop
mov
mov
push
fs
cmp
rclb
notl
fistpl
add
in
jns
enter
testb
jb
sbb
push
add
or
lcall
jge
lahf
out
test
xchg
push
fstl
loope
and
sahf
test
xchg
pop
or
int3
mov
ja
dec
test
sbb
xchg
dec
inc
inc
repz
mov
adc
popf
dec
imul
call
pop
xor
fcompl
mov
xor
mov
jnp
adc
push
adc
sub
mov
sub
repnz
mov
dec
into
loope
lock
mov
scas
jne
xor
cmp
lahf
outsl
adc
mov
inc
and
jmp
imul
jne
xchg
pop
bound
stos
and
xchg
scas
daa
mov
je
push
cmp
and
not
adc
sub
test
pusha
inc
adc
and
jmp
gs
pusha
xor
pop
int3
lock
xchg
lret
mov
ds
push
pop
mov
mov
call
shrl
xchg
insb
inc
std
cmpl
mov
loopne
aam
pop
notb
dec
push
call
fidivl
dec
pusha
dec
push
or
and
fwait
jge
and
and
imul
aad
xor
imul
movsl
jge
lahf
jg
xchg
jmp
movsl
mov
fidivl
sbb
add
or
xchg
add
lahf
and
xor
mov
pop
jns
shlb
dec
fidivl
aam
ret
cmc
popa
test
push
jg
movsb
sub
in
add
adcb
cmpsl
cmpb
test
add
xchg
adc
in
test
movsb
int3
mov
sbb
cs
sbb
jno
jne
stc
push
sbb
mov
xchg
push
movsl
lahf
pop
xchg
add
mov
add
imul
jecxz
icebp
sbb
mov
inc
outsb
and
addr16
push
mov
daa
cmp
shrb
jmp
ds
icebp
pusha
fildll
movsb
mov
imul
pop
es
dec
dec
pop
aas
push
fistpll
mov
pushf
pop
repnz
or
int
jnp
bound
sbb
add
fsubrs
pop
xchg
push
hlt
xor
dec
dec
imul
aad
cmp
or
pusha
lret
mov
adc
pop
rcrl
hlt
nop
mov
fistl
xchg
arpl
dec
das
testl
mov
in
xor
or
flds
in
outsl
in
das
test
xchg
cmp
subl
push
sar
nop
adc
enter
sub
pop
movb
mov
dec
sbb
lock
fstps
mov
pop
jo
xor
xchg
ljmp
ljmp
mov
and
lock
jne
mov
lret
outsb
mov
jb
jno
mov
test
in
mov
nop
mov
aas
shl
pop
dec
negb
int
mov
ljmp
adc
out
cmp
enter
xlat
mov
mov
mov
lret
iret
mov
fcom
push
pusha
inc
dec
mov
and
cmpsb
jae
inc
shl
leave
jae
popa
bound
mov
ljmp
outsl
fmul
dec
xchg
icebp
mov
mov
outsb
mov
jae
insb
inc
out
rcrb
in
scas
cltd
and
jae
fnstsw
fldt
jecxz
pop
push
mov
jno
mov
fildl
xchg
repz
sbb
inc
test
outsb
add
inc
push
sub
xchg
push
adc
nop
inc
push
pop
add
lahf
pop
mov
pop
cmp
ret
out
mov
mov
sahf
jne
dec
xchg
fnstcw
sbb
xor
ljmp
mov
insb
movsl
fmull
or
xor
fistpll
xor
cmc
incb
mov
enter
mov
add
adc
inc
jno
aam
mov
mov
aam
adc
and
outsb
mov
mov
mov
pop
jg
pop
stc
mov
lret
cmp
fwait
mov
mov
nop
cmp
inc
cmp
aad
mov
lret
arpl
arpl
notb
xchg
push
out
mov
jecxz
in
sub
xchg
aam
dec
lcall
lcall
sub
in
inc
data16
adc
cmp
hlt
mov
rorb
inc
pop
leave
and
cmp
mov
addr16
decb
ss
mov
pop
xchg
push
cmp
fs
jno
imul
mov
loop
sub
push
insb
jbe
loop
stos
mov
dec
mov
mov
lret
dec
rcl
std
pop
addl
mov
push
js
sbb
fimuls
jl
jb
jl
shrb
push
add
sbb
xor
push
and
popa
lret
add
mov
push
dec
push
popa
jns
faddl
jo
or
into
or
leave
mov
inc
push
or
ljmp
cmp
scas
pop
rolb
sub
scas
xlat
jecxz
in
pop
mov
and
cmp
lods
mov
das
shll
or
test
popf
pusha
jns
int
xchg
mov
cmp
add
cmp
loopne
lods
mov
xchg
push
mov
and
add
stos
int
push
fsubrs
mov
mov
mov
jp
and
rorb
fdivrl
pop
adc
mov
data16
ret
ljmp
out
add
test
movsl
mov
out
dec
int
add
notrack
lahf
inc
and
xchg
jns
lock
mov
jecxz
push
int
push
mov
lret
mov
test
and
shl
push
sbb
push
xchg
aaa
in
stc
push
jp
mov
mov
divps
jmp
add
dec
movsb
gs
xchg
scas
mov
js
loopne
scas
sub
out
push
add
pop
jno
icebp
jle
lret
int3
into
pop
mov
rcr
sbb
lds
and
push
lret
or
sub
cs
pop
andb
mov
pop
loop
jo
popl
dec
xchg
gs
jecxz
mov
pop
repz
pop
cli
push
jne
sbb
pshufw
and
mov
inc
lret
repnz
jbe
insl
movsl
out
or
insb
loopne
hlt
insb
test
xor
add
dec
movsl
xchg
adc
push
test
int
call
add
clc
xor
flds
fcmovu
cli
push
mov
fimuls
test
fildll
ja
adc
ret
pop
push
test
cs
aas
inc
lcall
js
lret
int3
enter
nop
movsb
add
lcall
out
and
lahf
int
fcoml
fstps
mov
or
es
ret
xchg
call
test
mov
adc
lods
jmp
fs
cld
sbb
mov
mov
ret
jb
imull
testb
jae
dec
pop
popf
lret
shlb
fistpl
clc
fldcw
lret
arpl
or
outsb
dec
sbb
sub
or
int
stos
push
test
out
jecxz
xchg
dec
and
or
jecxz
call
imulb
pop
fisubs
add
lock
lahf
inc
lcall
aaa
mov
popa
cmp
jge
pop
ljmp
and
leave
pop
in
mov
mov
xchg
mov
xlat
push
mov
clc
cmp
cltd
leave
jns
and
loop
ucomiss
aaa
sub
mov
imul
sahf
sub
sub
pop
loope
add
dec
mov
out
enter
xor
fnstcw
out
push
jne
push
mov
popf
and
mov
cmpsb
mov
or
fbstp
mov
ffree
mov
dec
call
jo
fcomp
jle
pop
ret
xor
repz
lea
js
scas
mov
inc
add
and
mov
cltd
xor
xchg
sub
clc
cmp
ljmp
lret
mov
xchg
ja
cmp
and
cmp
mov
push
mov
push
cmp
std
pop
sub
sub
sub
fs
jp
and
jae
jge
xchg
std
movsb
or
sbb
mov
fcmovbe
pop
cltd
mov
fildl
adc
jnp
push
push
dec
outsl
dec
fstpl
add
xchg
add
cmc
test
je
push
or
mov
inc
cmp
nop
xor
int
cmp
ret
jmp
cli
inc
mov
icebp
in
push
add
jb
test
pop
ja
rorb
jae
adc
xchg
pop
stos
jo
arpl
pop
je
jb
shll
aad
outsl
inc
xchg
fistl
pop
mov
cltd
clc
pop
sbb
pusha
mov
pop
shll
mov
test
adc
push
insb
mov
rol
fdivs
dec
inc
mov
lret
mov
pushf
mov
sarb
sub
cmpsl
xorb
pop
push
fidivrl
in
or
fcmovbe
pop
mov
addr16
inc
add
dec
test
mov
icebp
shlb
and
ret
std
imul
data16
fidivs
add
imul
pop
mul
xchg
jbe
adc
add
sub
dec
dec
int
iret
jecxz
add
mov
mov
jbe
ss
jge
cli
mov
movsl
ret
into
push
inc
push
pop
ja
push
insl
repz
jle
movsb
imul
cmp
push
outsb
leave
fcomps
js
scas
cwtl
ret
ret
xchg
mov
test
aad
mov
cmp
dec
mov
or
lret
lds
stos
shrl
sub
cs
mov
pop
stos
xchg
in
and
inc
mov
sub
insl
jno
sub
jb
xor
cld
mov
lret
dec
mov
jecxz
sub
lret
jmp
or
jge
pop
sub
in
cmp
ror
ds
fcmovnu
or
data16
sub
subb
push
cmp
push
or
mov
mov
push
stos
fs
jbe
mov
xor
outsb
mov
shlb
push
jle,pt
mov
jp
push
mov
xchg
rcrl
ror
push
inc
add
lock
scas
jnp
mov
push
xchg
pop
push
inc
andb
mov
mov
pop
cmp
lret
outsb
incb
leave
jns
mov
cmp
fs
inc
pusha
xchg
fimull
xor
dec
cmp
into
jo
rcl
and
je
and
sahf
adc
ja
insb
mov
lret
cmp
sub
mov
les
iret
jmp
xor
clc
movsb
mov
jb
pusha
and
add
daa
insl
push
inc
gs
jg
fcompl
cs
xchg
mov
pop
lcall
cmp
add
inc
pushf
hlt
popf
push
in
mov
pop
xchg
push
jnp
cmp
lods
add
out
jg
repnz
xor
rclb
insb
inc
dec
jne
ss
popf
int
jns
fstpl
arpl
inc
xchg
sbb
jp
cs
test
dec
push
into
pushl
pop
push
sti
xor
das
pop
add
lahf
mov
jge
repz
cmp
xchg
and
cmp
inc
mov
movsl
stos
shlb
push
jge
fcmovne
insb
and
je
popf
stos
mov
mov
cmpsb
mov
lods
sub
pop
filds
imul
repnz
cltd
add
out
jo
and
xrelease
std
aad
cmp
test
adc
out
add
rcr
notl
adc
in
mov
inc
xor
dec
leave
dec
repz
ljmp
push
inc
call
std
pop
call
xchg
stc
addr16
ljmp
int
shlb
fwait
dec
leave
lahf
mov
push
jg
dec
ret
push
pop
cmova
push
inc
push
addr16
out
aam
gs
mov
dec
ret
pop
mov
fldcw
repz
sub
push
stc
movsl
cmp
test
mov
repz
aas
push
loopne
ret
and
stos
imul
jne
rcrl
pop
jmp
push
aaa
pop
fisubs
sarl
xchg
in
xor
inc
cmp
inc
in
mov
cld
xchg
shrb
loopne
sti
cmp
xchg
subb
xchg
mov
mov
jecxz
fsubrs
adcl
xchg
ljmp
mov
jns
dec
dec
pop
ja
bound
pop
push
and
cwtl
cmpsb
jnp
testb
mov
inc
fdivs
mov
jp
ss
cmp
cmp
push
in
cli
push
or
in
inc
xor
or
insb
int3
push
sbb
test
and
sub
jae
scas
in
pop
insl
jl
and
mov
dec
out
or
leave
fdiv
pusha
xlat
push
notl
int3
jne
inc
mov
sub
in
lahf
int
dec
jnp
std
push
cmp
dec
pop
and
sti
nop
test
mov
inc
lcall
adc
imul
sub
pop
imul
lods
xor
fsubrs
or
mov
mov
and
push
repz
sub
mov
lret
out
lock
pop
rolb
fadds
bound
xor
sub
push
and
pop
inc
jns
cmpsl
jge
aad
lds
sub
dec
jns
shll
les
mov
and
insl
adcl
jmp
sbb
push
es
cmc
loop
push
mov
cwtl
dec
add
and
xor
mov
movsl
jae
jno
popa
cmc
xchg
imul
pop
mov
push
lahf
aam
mov
mov
ret
imul
int
notl
clc
sbb
inc
xchg
pop
sahf
in
stc
xchg
push
cmp
testl
mov
xor
addl
arpl
add
pop
outsl
aaa
and
dec
les
lret
call
or
imul
mov
sbb
sahf
sbb
stos
lods
jo
insl
loope
inc
xchg
jmp
inc
fdivrl
aam
push
out
mov
dec
stos
in
ljmp
je
dec
and
mov
test
xchg
jmp
or
jno
outsb
or
nop
fsubrl
lcall
mov
xlat
test
lahf
dec
in
sub
pop
test
adcl
or
js
adc
test
adc
into
sub
cmpl
out
dec
lcall
jno
add
imul
jl
mov
mov
mov
inc
lret
shll
dec
aam
mov
jle
mov
loope
cmp
push
fmull
divb
sbb
into
dec
adc
add
mov
test
mov
ja
lods
pop
movsl
in
lret
call
jp
std
cwtl
xor
imul
push
sbb
dec
pop
popf
and
mov
out
mov
xchg
pop
stc
ret
dec
fadd
push
xchg
inc
leave
mov
push
mov
jno
test
outsl
inc
mov
mov
xor
daa
push
jge
ret
cmpb
dec
sbb
pop
mov
mov
push
push
sahf
or
sbb
jp
je
das
outsl
ljmp
fcoms
cmp
lret
pop
cmp
mov
repz
jne
and
push
xor
das
mov
gs
sbb
scas
adc
mov
sub
lea
pop
pop
shl
inc
xor
or
and
or
ljmp
jb
xchg
inc
mov
push
repnz
jmp
mov
test
push
push
cld
mov
pop
pop
outsl
mov
xor
js
dec
push
xlat
test
sahf
jge
std
add
lock
popf
jae
inc
fildl
cwtl
mov
negl
iret
inc
shrb
rorb
mov
nop
jae
mov
inc
sub
std
mov
jmp
wrmsr
mov
rorl
cmp
mov
ret
into
int3
aad
pop
icebp
gs
mov
sbb
mov
pusha
and
mov
push
xchg
sbb
sub
dec
pop
push
int
mov
stos
lods
pop
adcl
stos
ret
gs
rcll
sbb
out
aad
pop
lret
nop
imul
stos
mov
cmpsb
popf
mov
dec
mov
fsubs
out
ljmp
add
imul
lahf
sub
mov
or
cmpsl
cmp
cmp
loopne
mov
pop
std
mov
nop
jne
sub
pop
xor
cmp
xchg
jmp
cltd
xchg
arpl
std
jg
rcll
cmp
scas
jne
pushf
mov
push
and
int
rclb
call
pop
data16
dec
or
out
and
mov
mov
jg
bnd
jns
xchg
xchg
shr
mov
imul
push
mov
xchg
jns
cmp
or
or
ja
faddl
inc
sub
test
or
cmc
add
mov
arpl
dec
pop
and
sbbb
stos
push
pushf
and
repz
push
sbb
sbb
testl
ret
outsb
cmpsl
cmp
cmpsl
fwait
mov
negb
add
sbb
out
mov
rcll
xor
lds
ljmp
adc
jne
dec
ret
jg
scas
loope
sbb
bound
mov
sbb
iret
sub
xchg
fs
sahf
dec
popf
pop
pushf
lods
insl
mov
loopne
loopne
mov
movsb
or
shlb
popf
add
xor
ret
cmp
adc
pop
in
int3
mov
push
pushf
cmpsb
push
push
daa
adc
loop
or
sbb
inc
stos
out
add
pop
inc
push
mov
cmp
shr
aas
in
ret
and
imul
lods
cs
cwtl
cmp
in
outsl
and
jp
dec
pop
stos
mov
add
xchg
test
lcall
xor
adc
and
cmp
pop
shr
adc
iret
push
pop
cmp
lret
aam
xchg
xor
inc
shl
divb
xchg
xchg
gs
jo
mov
ja
push
and
inc
and
clc
dec
sub
int
fs
and
push
push
lock
pop
or
mov
sub
inc
xor
sbb
repz
popf
insb
pushl
fs
popa
repnz
das
out
mov
cmpsb
sti
pop
popf
jecxz
and
add
jae
pop
adc
cmpsb
xor
mov
and
xorl
add
js
testb
jge
jge
xchg
jno
sbb
jp
and
addr16
pop
ficoms
inc
sti
enter
arpl
mov
cli
pop
scas
or
das
mov
xchg
lods
fistl
inc
sarl
mov
lahf
and
add
push
jnp
cli
inc
aas
push
idivb
insl
add
mov
out
xchg
jmp
cmp
and
out
adc
mov
sbb
iret
aas
xlat
aas
pop
sahf
sbb
jb
rclb
std
add
iret
cld
cmc
in
xchg
loop
mov
sbb
sub
mov
mov
sub
cmp
mov
cli
pop
and
imul
test
sub
dec
mov
cmpb
and
ljmp
jg
lret
inc
lret
std
xor
ja
idivl
lock
scas
cltd
dec
fmulp
je
sub
mov
and
rclb
xchg
dec
push
inc
cmp
push
add
dec
jmp
or
cmp
aas
scas
in
ss
popf
and
sub
xor
pop
cli
ja
sub
pop
in
and
jo
jno
stos
dec
cs
mov
data16
andl
call
jnp
stos
adc
push
out
mov
mov
lock
cmp
clc
ret
add
pop
sbb
lcall
add
cltd
sbb
es
jae
inc
test
adc
js
js
jl
sbb
xor
push
dec
xchg
or
cmp
inc
mov
pop
loop
jge
and
cwtl
adc
fwait
and
nop
cld
xchg
jmp
dec
fldcw
push
dec
or
and
add
in
mov
sar
xor
ljmp
stc
mov
mov
iret
inc
pop
bound
stc
xlat
movl
cli
into
lods
fs
paddq
cmp
jle
cltd
mov
icebp
xor
cmpsl
sbb
add
xchg
dec
jg
or
enter
push
jmp
rcrb
mov
mov
bnd
fnstcw
lock
mov
cmpsl
ja
mov
in
sbb
or
push
jle
cs
mov
shl
dec
dec
jmp
loope
pop
in
cmp
cli
push
out
xchg
inc
stos
push
pop
aas
scas
int
loope
repz
cmp
cmpsb
sbb
jle
cltd
mov
lahf
mov
sbbb
call
iret
inc
out
xor
pop
inc
xchg
mov
jl
clc
stos
jmp
add
xchg
mov
or
cltd
xor
outsl
adc
xor
jge
addr16
inc
out
lods
xor
pop
cmp
std
or
ja
mov
inc
dec
ret
scas
pusha
inc
xchg
mov
dec
lods
ret
out
je
insl
insb
pop
dec
cs
arpl
inc
xchg
push
js
add
shll
sbb
jmp
sti
js
jp
imul
xor
mov
imul
dec
adc
cmp
repnz
jo
ficomps
jae
inc
outsl
pusha
ret
jns
lods
mov
adc
jns
imul
sub
dec
sti
xchg
cli
inc
fistpl
in
sbb
inc
in
int
cmp
arpl
aaa
stos
cmp
test
xor
stos
mov
fwait
insb
fsubrl
add
es
daa
mov
mov
stc
mov
hlt
dec
adc
test
pop
int
fisttpll
insl
shl
les
ret
add
lcall
adc
fsub
nop
nop
jo
push
mov
enter
jp
movsb
jns
repnz
xchg
or
mov
hlt
inc
or
outsb
push
in
or
xchg
cltd
sub
mov
ja
push
jae
or
test
inc
popa
lret
shrb
inc
aas
jl
mov
xor
sub
inc
sti
mov
cs
jle
aaa
mov
jnp
sub
loopne
es
ret
loop
std
repnz
inc
pop
add
mov
dec
jnp
push
aaa
adc
repz
loop
shl
gs
mov
fisttpl
jne
mov
push
lods
leave
pop
fdivl
dec
sti
sub
or
inc
in
mov
out
lock
add
xchg
cltd
cmp
mov
xchg
xchg
cltd
mov
adc
lcall
xor
rcrb
and
shrb
adc
sub
and
cmpsb
faddl
or
sbb
xchg
popa
imul
sbb
testb
movsl
pop
inc
scas
clc
or
pop
cmpsl
inc
sub
cmpl
mov
pop
xor
in
imul
outsb
cwtl
jmp
ret
mov
pop
adc
cmp
orl
jns
sub
pop
pop
scas
mov
std
push
es
mov
push
scas
cmp
dec
scas
ss
jno
mov
hlt
mov
fmul
sub
rorb
sbbb
cwtl
sub
xor
jp
out
xchg
xor
mov
push
sub
mov
and
inc
pop
inc
pop
cli
push
or
jo
dec
cs
xchg
xchg
push
pop
into
pop
push
clc
es
mov
inc
add
add
pop
shll
gs
js
push
lds
dec
ret
inc
lods
jns
stc
je
hlt
sub
shlb
push
mov
mov
cltd
push
daa
stc
sub
dec
mov
sbb
scas
mov
icebp
test
scas
or
dec
and
popa
test
push
rcr
fs
or
mov
into
mov
xchg
aas
test
inc
in
and
mov
in
lret
fstps
sbb
aad
pop
mov
repnz
mov
mov
lret
jns
mov
push
xlat
into
popf
jmp
cltd
shr
lds
inc
lods
lea
stc
push
mov
sbb
or
push
movsl
call
pop
movsb
jne
int
mov
icebp
mov
and
pop
add
sbb
push
sar
ja
mov
sbb
loope
hlt
loope
dec
insb
subb
push
fnstenv
xchg
into
nop
adcb
dec
mov
mov
cltd
jns
sbb
add
jle
or
lock
dec
movsb
js
xchg
movsb
jne
push
stos
loopne
adc
xorl
adc
mov
fdivr
ds
jp
and
imul
mov
jle
xchg
lret
inc
orb
mov
lcall
movsl
mov
jns
imul
cli
addr16
data16
sub
jmp
clc
inc
xchg
icebp
fistpll
in
popa
lods
js
lds
cmp
dec
imul
cmovs
dec
mov
lods
mov
push
lea
jp
and
jo
pop
adc
mov
dec
xorl
sub
sti
and
mov
push
xor
repz
xor
call
or
ss
sub
mov
js
jns
movsl
fisubl
mov
mov
xchg
mov
mov
fcompl
inc
jo
out
rcrl
add
int
sub
out
dec
dec
sub
sbb
xchg
aaa
arpl
xchg
in
jl
hlt
mov
jp
and
rcrl
pop
xchg
cmp
adc
pop
mov
leave
daa
lahf
xor
xor
lock
rcl
popa
lods
sub
lock
aad
mov
loop
cwtl
lods
inc
clc
pushl
out
xchg
cld
call
xchg
movsb
lods
pop
mov
sub
or
push
out
pop
sub
push
jbe
and
mov
lret
mov
insl
sahf
push
cmp
xchg
mov
and
mov
and
cmc
pushf
xchg
push
dec
dec
jmp
dec
mov
push
push
sub
add
xchg
jnp
adc
mov
mov
mov
in
movsl
rcr
or
mov
sub
cltd
ret
jle
mov
xchg
cmp
fdivrl
inc
xchg
xchg
sub
fs
dec
mov
frstor
lock
sub
mov
bound
cmp
rol
xor
loop
insb
sbb
outsl
repnz
rorb
pop
ret
test
in
dec
lret
out
sub
inc
cmp
mov
adc
pop
adc
mov
adc
sbb
inc
mov
std
ret
sbb
sar
lret
push
mov
lret
jae
pop
popf
sbb
push
fcmove
xchg
jae
pop
cwtl
mov
cmc
das
loopne
dec
fcoms
aam
fwait
scas
ret
dec
sub
mul
push
repz
in
lods
in
imul
push
inc
bound
ret
mov
mov
insb
xchg
insl
xor
jo
pop
std
jne
dec
sbb
mov
dec
or
popa
mov
maxps
inc
mov
mov
adc
mov
ret
testb
cmp
pop
aad
aam
test
jmp
std
push
inc
xorl
addr16
mov
sub
nop
lods
mov
loop
mov
add
clc
sub
pusha
jnp
lcall
daa
cmpl
pop
xchg
fldl
or
je
pushf
add
xchg
stos
gs
imul
icebp
adc
push
mov
enter
and
dec
outsb
js
xchg
jmp
repnz
add
cld
adc
pushf
subb
fcomi
xchg
pop
adc
jecxz
lret
fbld
stos
mov
pusha
repnz
sarb
or
pop
dec
mov
or
int
dec
lods
dec
lret
ds
or
mov
mov
imul
adc
dec
lea
scas
roll
mov
icebp
pop
cltd
fnstcw
adc
push
xor
inc
inc
in
mov
or
les
stos
hlt
jae
mov
mov
popf
xchg
rclb
xor
push
test
call
pop
adc
jne
aas
outsl
clc
inc
sub
xchg
mov
lcall
dec
xor
mov
dec
mov
push
test
pushf
sub
push
mov
sbb
and
sahf
icebp
sub
roll
push
lret
inc
ljmp
outsb
xor
enter
cmp
sbb
fldt
shlb
test
pop
test
mov
mov
xor
cs
and
cmpsl
adc
xor
inc
and
arpl
out
push
inc
fstpt
cwtl
sub
ds
repz
imul
push
mov
movsl
cmp
cmp
fldenv
lret
call
pop
loop
pop
nop
jns
cmp
shlb
lret
xor
adc
pop
pop
lds
sbb
stos
push
push
outsb
bound
gs
cmp
pop
xchg
das
iret
push
into
mov
orb
cld
lock
dec
jb
ds
push
pop
fsts
out
inc
and
mov
push
in
stc
inc
inc
leave
mov
jecxz
loope
push
aas
adc
sub
es
mov
imul
sbb
cmpsb
hlt
mov
jle
mov
fisubl
dec
pop
xor
jbe
shrb
xor
sbb
pusha
fcmovnbe
fdivs
ds
inc
add
mov
push
fdivl
fbstp
pop
roll
imul
jp
jno
lcall
aam
adc
add
sbb
jl
mov
mov
fwait
ds
mov
int3
in
call
adc
mov
fwait
sub
mov
jmp
pop
push
jb
gs
mov
cmp
addb
out
mov
push
pop
lods
and
clc
test
mov
sbb
jne
dec
mov
lea
pop
pop
cltd
pushf
add
fidivrs
out
lret
fisttps
popa
and
mov
sbb
jae
iret
arpl
mov
sub
add
xor
jne
mov
xor
push
add
fisubrs
call
push
out
ljmp
insl
push
pop
mov
push
and
mov
sbb
jecxz
rcll
test
sbb
lcall
jl
andb
sbb
scas
imul
and
cld
out
test
or
pop
movsb
out
pop
scas
stos
or
xchg
imul
mov
sbb
sub
in
popf
es
mov
shrb
or
mov
or
jp
jge
mov
fsubs
int
mov
dec
imul
imul
cmp
pop
insl
shlb
das
lahf
cmp
jo
sbb
je
fdivrs
push
pop
inc
jae
jle
rcrl
cli
pop
jae
fisubl
xor
xor
inc
and
and
push
test
add
or
rolb
aam
sub
xchg
push
pop
push
mov
mov
jmp
std
popa
hlt
mov
cld
jmp
in
sarl
stos
xchg
inc
repnz
ljmp
lods
or
lea
fcomip
mov
ljmp
cwtl
dec
lea
cld
mov
iret
iret
or
cmp
adc
jl
push
jg
test
inc
lret
sbb
xchg
xor
dec
les
fsubp
jbe
insl
outsl
mov
ds
mov
xchg
lods
test
scas
sub
mov
cld
add
sbb
lds
sub
push
fimuls
faddl
and
mov
lahf
and
dec
loop
inc
add
out
gs
test
xchg
sbb
xor
cli
cmp
jl
ja
mov
imul
out
xor
or
aaa
inc
jnp
cmpsb
mov
cmp
hlt
decl
dec
dec
in
dec
add
cmpsb
insl
mov
dec
mov
lret
add
mov
adc
ja
and
cmp
add
push
adc
mov
jl
jge
ror
pop
push
test
adc
fildl
loope
in
test
sbb
mov
add
mov
xor
xchg
loope
shrl
stos
cmp
popf
push
fisubrl
jnp
test
and
mov
mov
gs
cmp
adc
xor
cmp
pop
popf
jnp
jno
push
test
sub
inc
inc
pop
dec
pop
sbb
mov
sub
mov
lret
mov
sbb
xchg
jp
out
adc
pop
fisttpll
ret
dec
xor
xchg
push
shl
adc
fistpl
jno
shl
jb
cmpsl
aas
lea
and
loope
mov
call
push
loope
mov
dec
mov
push
jmp
inc
adc
pop
xor
sub
pop
daa
hlt
jmp
cmp
jmp
lret
adc
push
jp
outsl
sbb
inc
pop
xlat
cwtl
and
adc
xor
jge
add
scas
cmp
subl
in
dec
testl
stos
sarl
lock
lea
push
test
dec
sbb
mov
std
or
imul
push
pop
adc
jle
adc
in
fidivrs
cld
mov
sbb
jmp
adc
dec
daa
imul
cmpb
addr16
xchg
xchg
mov
and
and
outsl
dec
jle
sahf
das
lods
and
into
ret
adc
mov
lods
mov
pop
cmpsb
jne
incb
cs
scas
outsl
movsl
mov
cmp
gs
pop
push
dec
cmp
fisttps
stc
imul
xor
cmpsb
xor
pop
and
pusha
rorl
sub
sbb
xchg
incb
pop
mov
outsl
dec
pusha
inc
xor
repnz
pop
mov
mov
icebp
fbstp
aaa
pop
in
push
jo
stc
add
jns
pop
pop
gs
and
xor
sarl
sbb
mov
sub
inc
jge
xor
cltd
adcl
sbb
cltd
in
or
push
ljmp
shlb
bound
push
inc
int3
add
sbb
xor
rcl
dec
leave
push
mov
mulb
add
xor
out
fs
pusha
pop
mov
dec
cmc
aam
xor
sub
jno
or
cmovg
pop
std
test
ret
sbb
call
sbb
adc
and
bnd
imul
sbb
mov
outsb
hlt
xchg
out
into
into
mov
hlt
mov
and
cld
cld
mov
sti
ret
lahf
lretw
rclb
cmc
repz
gs
xchg
into
cmc
fisttps
push
cli
xor
cld
in
mov
push
fidivrs
mov
mov
js
mov
sti
enter
mov
incl
push
mov
loopne
mov
push
fucom
mov
fs
notb
cmp
cmp
jle
inc
imul
mov
adc
xchg
not
inc
int
sub
idivl
dec
fwait
mov
push
rcrb
scas
loopne
dec
sti
aad
loop
in
mov
clc
insb
xor
outsl
in
mov
ja
xor
pop
bnd
or
xor
mov
insb
jbe
cmp
shlb
add
addl
cmp
cli
add
adc
jnp
mov
xchg
sub
fimull
lds
das
pop
loope
xchg
pop
mov
ljmp
add
pop
in
std
or
push
inc
or
xlat
icebp
xor
das
and
addr16
ja
adc
jl
cs
xor
fwait
sbb
sar
popf
cmp
sti
call
outsb
sub
outsb
pop
imulb
sbb
lahf
rcll
loop
mov
adc
dec
sub
cwtl
or
stos
lods
push
int
pop
imul
sbb
enter
orb
out
xor
out
xor
lcall
shl
shl
jb
lea
add
cwtl
push
mov
and
addl
add
pop
fwait
adc
iret
fisubrl
sub
sbb
xchg
pop
cmpsl
pop
test
rep
out
sbb
hlt
mov
ret
push
xorb
or
enter
sbb
lcall
sbb
sbb
addr16
std
xchg
lcall
js
ret
notb
out
mov
cmp
cmpsl
sbbb
ljmp
add
jno
movsl
pop
in
xlat
jne
js
outsb
outsb
cmp
cmp
inc
cmp
mov
mov
adc
dec
jmp
movsb
xchg
std
movsl
or
adc
push
scas
pop
lods
loop
push
ret
xchg
jecxz
icebp
xor
js
ljmp
out
mov
cmc
arpl
dec
arpl
std
inc
and
xor
cmc
jne
data16
pop
pop
cmp
aam
xchg
and
jnp
test
dec
jmp
xchg
mov
stos
outsl
ja
pop
xchg
mov
add
push
outsl
cltd
dec
mov
roll
mov
hlt
xor
sahf
aad
fstl
rep
xlat
fcmovu
cmpsb
dec
mov
sub
mov
push
add
push
and
pop
pop
test
fidivs
int
fwait
iret
leave
pop
arpl
outsb
rcll
mov
insl
adcb
test
adc
popa
mov
sbb
fidivrs
js
in
or
xchg
dec
mov
ljmp
in
xor
push
lahf
mov
or
or
pop
cmp
std
and
cmp
sub
jp
popa
sub
test
lret
adc
add
jno
jecxz
mov
mov
jecxz
js
leave
push
in
jg,pn
repz
les
lret
sub
fs
rorb
aad
pop
jmp
and
jle
sub
add
das
sbb
sbb
int3
pusha
je
pop
xor
rcrl
out
cli
jg
in
mov
mov
xor
pop
inc
inc
ss
sbb
enter
mov
cmp
into
sbb
lea
pop
jge
cmpsl
rorb
or
jbe
mov
add
mov
les
inc
jo
jno
out
fdivrs
mov
sar
cmp
cmc
and
dec
mov
or
xlat
popf
mov
mov
mov
loope
cmp
push
adc
iret
or
push
xor
sub
add
add
fisubs
inc
cmpsb
in
mov
inc
jecxz
pop
mov
mov
xor
mov
cmp
fcoml
push
sub
dec
rorl
jno
rorb
cmp
scas
std
out
outsb
xor
cmp
dec
icebp
fbstp
adc
je
jb
sbb
test
dec
push
fistl
jmp
jb
je
popa
les
xchg
pop
ljmp
add
jns
xor
in
cmp
jp
cmp
loopne
clc
stc
je
out
pop
gs
stc
subb
or
outsb
add
xchg
xchg
movsl
xchg
pop
out
iret
cwtl
pop
scas
push
add
adc
mov
pop
stc
aam
push
je
pop
inc
orl
repz
adc
clc
xchg
xchg
in
mov
popf
mov
mov
jp
cld
sbb
arpl
cmp
sbbb
pop
test
ror
xchg
mov
dec
ja
cmp
pop
bound
xor
insb
xchg
pop
mov
sbbb
bound
add
mov
loope
pop
out
mov
mov
imul
sub
push
xchg
shlb
cmp
sbb
movsb
lcall
sbb
xchg
or
lds
mov
jae
mov
xchg
xlat
lods
pusha
jae
push
arpl
push
xchg
jo
lret
xor
in
dec
pop
data16
xchg
es
push
mov
ret
movsb
aas
adc
rcrl
sbb
cmpsb
xor
aaa
insb
shlb
xrelease
jb
jge
add
sti
stc
sti
adc
jg
int3
dec
add
lock
jge
loopne
cmp
mov
adc
repnz
sahf
jns
lahf
push
movsl
xor
push
std
or
enter
popf
sahf
xchg
jmp
mov
mov
icebp
roll
xchg
add
mov
and
sbb
adc
cmpsb
ljmp
dec
pusha
inc
aam
movdqu
aam
dec
push
in
ds
gs
pop
in
lock
cmp
scas
xchg
out
js
ja
ret
mov
popf
sti
lods
sahf
add
adc
or
jg
in
popf
dec
and
rcl
mov
xchg
sbb
and
push
shrl
jmp
add
pop
out
outsl
push
sub
sarb
in
sub
gs
xchg
enter
shlb
insb
std
dec
pop
xor
pop
test
sbb
dec
cmp
mov
ljmp
push
jge
inc
pop
pop
pusha
ds
inc
cltd
dec
insl
jg
push
fcoml
imul
xor
loope
sbb
rclb
mov
xchg
pop
stos
in
push
dec
sbb
mov
or
xor
shrl
jmp
imul
cmp
mov
mov
jae
dec
mov
xor
cltd
add
pop
push
fcompl
jbe
xor
imul
pavgb
out
popa
lds
cmpsb
mov
outsb
and
xchg
shll
jmp
push
xor
pusha
mov
enter
sub
cwtl
mov
mov
pop
pop
aaa
or
push
js
cwtl
dec
push
bound
push
or
cmp
jge
loope
or
fcmovnb
imul
divl
lcall
jp
or
sub
lahf
or
hlt
out
pusha
clc
jns
jecxz
cmc
add
outsl
jnp
xchg
ret
mov
jle
sub
pop
mov
push
mov
cmp
sbb
frstor
jmp
outsl
fisubs
adc
nop
test
in
test
and
aad
out
jl
jge
lret
aam
inc
inc
xchg
test
flds
push
xchg
js
or
and
cmp
mov
ja
loopne
fstps
pop
or
pop
lret
dec
cmpsb
sub
cmp
push
inc
mov
or
jb
mov
mov
push
sahf
inc
inc
fisubl
pop
fadd
rcrb
push
pop
jecxz
mov
std
ds
mov
mov
add
adc
pop
lcall
fnstsw
lret
xchg
movsb
mov
shlb
ror
push
aas
adc
push
push
repnz
dec
movd
jo
mov
sbb
mov
or
out
and
adc
add
daa
rcrl
test
mov
cmp
loopne
orl
mov
lcall
ljmp
sbb
in
test
fcomp
gs
add
inc
cld
mov
adc
lods
cmp
add
sarb
pop
add
jg
dec
adc
jmp
out
pop
pop
cmp
rorb
bound
imul
leave
mov
mov
lret
or
dec
adc
pop
hlt
cld
sub
idivb
ljmp
inc
in
mov
dec
clc
popl
call
fsubs
pop
movb
xor
subl
xchg
iret
roll
icebp
icebp
pop
repnz
jae
subb
jp
movsl
data16
dec
dec
into
mov
movsb
adc
pop
imul
mov
jecxz
inc
inc
fistpl
jp
js
ljmp
iret
rcll
adc
lock
pop
push
loopne
mov
stos
fidivrl
in
imul
stos
mov
int
push
pop
shll
daa
mov
sub
dec
xor
add
or
cmpl
pop
xor
jle
in
jo
jb
icebp
push
xlat
addb
push
xor
lods
shrb
push
fs
outsb
in
cltd
cmp
icebp
out
test
jge
inc
andl
ficoml
mov
dec
or
in
pop
jno
fdivrl
adcl
mov
mov
lret
popf
cmp
outsb
movsb
cmp
loope
out
rcl
loop
cmp
sbb
fisttpl
fsubp
fdivl
sbb
lock
movsl
loopne
sbb
mov
mov
addl
dec
pop
xchg
adc
into
imul
ret
popf
and
xor
inc
rcr
xor
insl
cli
xchg
ret
mov
shl
mov
aad
sahf
cmp
sbb
cmc
fprem
jnp
data16
int3
test
das
adc
jp
pop
imul
or
dec
or
jbe
mov
cmp
pop
sbb
out
adc
mov
mov
adc
sti
ljmp
fs
imul
lock
mov
push
or
cmp
jo
sub
jnp
xchg
xchg
mov
lret
int3
xchg
jnp
andb
lods
or
and
out
pushl
js
adc
push
ja
fldl
jnp
inc
fldenv
mov
lcall
dec
xchg
jnp
nop
outsl
sarb
and
in
rcrb
push
test
je
jmp
lcall
out
xor
movsl
sub
xchg
xchg
nop
idivb
or
and
cmp
addb
cs
adc
push
push
mov
push
mov
push
lds
cmp
loop
cmp
dec
add
push
mov
cmc
and
push
filds
icebp
popf
test
rcrl
cmp
xchg
in
add
mov
push
jno
add
mov
mov
jno
adc
xor
aas
in
fwait
in
dec
adc
mov
pop
dec
jmp
inc
hlt
pop
lock
cmpsb
mov
xchg
incb
push
lock
in
std
pusha
push
out
pop
mov
pop
adc
fs
es
dec
jmp
add
jecxz
ljmp
dec
pushf
push
cmp
mov
lahf
mov
sti
repz
ret
inc
mov
cmp
mov
xor
fsubr
fcmovnbe
or
jnp
lea
cmp
aas
cmpsl
cmp
lahf
inc
bound
mov
pusha
add
or
dec
dec
jbe
dec
rorl
inc
jno
lret
pop
fs
mov
aam
and
push
mov
cmp
pushf
jno
leave
movsl
imull
pusha
fistpll
cmpl
adc
mov
addr16
mov
into
sbb
out
and
mov
push
adc
pop
add
dec
mov
out
pop
mov
push
mov
mov
xchg
icebp
inc
ret
adc
mov
xor
dec
dec
addr16
mov
jle
jno
fisubrl
dec
imul
daa
stc
pop
cmp
lds
out
pop
xchg
dec
mov
fnstcw
ficompl
pop
pop
movl
pop
js
xor
outsl
add
xchg
insl
and
jbe
jle
popa
cmp
mov
mov
sbb
or
fsubl
push
test
ret
cmc
in
push
lods
in
pop
pop
pop
xor
addb
mov
dec
adc
jg
movsb
dec
push
dec
add
in
in
dec
dec
add
cmp
mov
es
addb
push
mov
dec
arpl
sub
enter
mov
and
or
stos
cwtl
cwtl
in
je
mov
jge
test
scas
add
sub
movsb
push
sbb
add
xchg
xor
xor
sbb
push
orl
fld
insb
fiaddl
push
lcall
fs
inc
mov
mov
ret
leave
mov
outsl
sub
test
repz
insl
sub
or
out
cmp
bound
sbb
leave
out
adc
sti
pop
mov
mov
push
clc
stos
into
cmpb
das
xlat
and
push
and
xchg
cmc
push
xor
dec
mov
js
rolb
mov
rolb
das
xor
jo
in
fs
or
mov
cmp
push
movsb
out
jp
xchg
cmpsl
lock
xor
test
dec
aaa
add
dec
mov
jge
xor
out
aam
movsb
pop
pop
orb
in
int
insb
gs
repz
ja
dec
mov
repnz
xor
inc
sbb
in
inc
pop
test
mov
jae
inc
popa
xorl
lcall
inc
lret
xchg
int3
dec
and
mov
cmp
shll
sub
fisttpll
mov
das
mov
lods
xchg
rcl
pop
popl
lret
inc
arpl
lcall
clc
lret
inc
inc
sbb
fistpl
lock
mov
mov
cmp
mov
sub
dec
xorl
push
daa
cmpsb
xchg
cld
mov
loope
movsl
decb
movl
jp
cmp
sbb
pop
push
dec
lock
pop
push
inc
and
pop
sub
bound
xchg
jns
jecxz
cmp
popf
cmp
xor
push
enter
adc
mov
scas
scas
daa
test
ret
xor
arpl
xchg
test
int3
stc
mov
notl
ret
dec
pop
xor
xor
sub
lahf
jl
stos
gs
js
mov
inc
lds
add
mov
bound
push
jle
cmp
addr16
mov
and
ja
pop
xchg
and
xchg
pop
jecxz
imul
add
add
cmc
rcrb
das
fwait
lods
pop
repz
mov
sbb
cmp
inc
push
clc
aad
int
add
dec
push
mov
cld
into
fdivp
mov
dec
and
pusha
test
push
push
and
scas
dec
mov
mov
pop
xlat
mov
mov
and
arpl
jp
dec
repz
sub
sbb
cmc
fisttpll
dec
fistpl
xchg
add
loope
or
add
gs
clc
stc
or
dec
inc
adc
push
pushl
loope
xchg
adc
nop
xor
out
inc
decb
xchg
and
mov
shlb
push
inc
js
sub
mov
cli
rcll
xchg
mov
psrlq
sbb
mov
pop
dec
xchg
push
mov
outsb
push
ljmp
cmp
mov
inc
inc
inc
add
lds
add
or
rorl
mov
int
mov
scas
cmp
mov
xchg
sbb
sbb
das
subl
test
and
dec
loopne
in
in
cmpsl
push
lock
jo
pop
mov
mov
xchg
cmc
int3
out
pop
cld
sub
pop
je
les
test
xchg
sbb
inc
or
mov
pop
xor
bound
push
sbb
lret
mov
jae
stos
cli
fsts
dec
daa
and
mov
push
and
mov
mov
in
or
inc
dec
xchg
dec
in
mov
push
or
clc
lret
mov
sub
andl
push
out
sub
xchg
add
sub
push
xchg
mov
in
nop
add
idiv
dec
pop
jbe
mov
or
in
sub
mov
imul
in
sub
or
aam
cmp
xchg
push
aas
repnz
sub
repz
dec
push
inc
jae
ds
mov
adc
inc
ret
stos
or
fcmove
ficoms
in
pop
arpl
bound
iret
add
adc
mov
xor
stc
dec
cld
repnz
sbb
cli
test
aam
ljmp
mov
cmp
and
cmp
jecxz
sti
js
sub
sub
cmp
lea
adc
aas
mov
out
or
scas
xchg
inc
jne
and
ja
in
std
sbb
icebp
inc
mov
mov
stos
xchg
in
call
sti
and
loopne
mov
loopne
sub
mov
xchg
jo
or
jo
jb
add
push
mov
nop
or
test
sarl
int3
jp
mov
mov
cli
xor
cltd
out
pop
movsb
jle
lret
repz
ja
mov
je
push
cmp
cltd
popf
outsb
or
ja
xchg
sqrtps
mov
mov
fcomi
lahf
dec
stc
aam
mov
sar
lock
sbb
cwtl
popf
aaa
dec
jle
mov
pop
sahf
sbb
mov
popf
xor
test
push
pop
inc
sbb
push
pop
in
inc
xchg
loop
jnp
push
ficomps
hlt
jne
lret
mov
aad
mov
mov
jge
xchg
inc
push
sbb
movl
jno
test
add
jae
mov
aam
and
push
int3
and
pop
aam
sbb
cmp
jo
inc
mov
imul
sti
inc
shll
sbb
inc
mov
dec
loop
sub
xlat
mov
adc
dec
push
dec
insb
fcomip
dec
inc
mov
sub
ret
cmp
cltd
outsb
mov
xchg
xchg
divl
or
add
add
jns
cmp
ret
mov
arpl
dec
testl
iret
insb
fcmovb
cmc
jae
test
jg
dec
mov
bound
aad
outsl
push
jne
push
xlat
inc
xlat
sahf
fistpl
adc
mov
push
test
or
data16
dec
mov
in
xor
popf
mov
jl,pt
sbb
and
pushl
outsb
lret
ficomps
std
fs
out
xchg
mov
cmpsb
cwtl
jbe
mov
lock
in
mov
and
and
or
push
jo
stos
jno
push
movsl
sub
xchg
pop
jl
lock
fbld
mov
cmp
or
insl
dec
nop
xor
or
push
or
pop
pop
nop
sti
cs
in
es
hlt
mov
movsl
jg
pop
adc
out
inc
xchg
hlt
ja
shl
inc
or
popf
ror
idiv
addr16
enter
aaa
sbb
lret
cmp
mov
xchg
push
hlt
push
fsubl
add
sub
loop
lcall
adc
hlt
cmp
popf
sub
sbb
jb
test
jle
sar
gs
mov
stos
xchg
addr16
mov
testb
or
sub
jae
rcl
add
lds
cmp
aas
cmc
sub
push
sbb
cmp
inc
sbb
outsb
out
push
lret
jb
adc
fwait
mov
dec
pop
jge
hlt
add
xor
cmp
push
inc
test
or
popf
push
mov
xor
popf
cmp
jp
jmp
test
pop
ja
rorl
jno
and
clc
xchg
xorl
add
dec
add
aam
sbb
popa
xor
jl
out
ds
xor
test
cmp
addr16
dec
rclb
loopne
xchg
xchg
les
or
adc
scas
mov
in
pushf
pop
repnz
jo
cmp
cmp
mov
in
mov
jp
adc
or
leave
mov
push
or
jmp
rcrl
dec
mov
movsl
rclb
xlat
sub
js
lds
adc
loope
shll
inc
into
daa
imul
adc
xchg
rorl
out
not
pop
inc
mov
lods
inc
in
or
imull
stos
mov
lahf
add
xchg
mov
and
imul
xor
lods
inc
add
mov
mov
mov
adc
je
pop
mov
lods
lods
or
sbb
pusha
cmp
lahf
mov
sub
or
push
std
xchg
popa
xchg
pop
icebp
mov
out
dec
cltd
orb
mov
call
inc
xchg
jns
test
in
dec
cmp
cltd
dec
jl
and
pop
je
clc
cwtl
mov
int3
int3
repz
and
cmp
call
inc
addr16
icebp
leave
outsb
cmpsb
mov
out
pushf
loope
push
xchg
inc
fistpl
aad
es
push
int
fnclex
sub
idiv
icebp
sub
push
mov
les
outsb
inc
xor
lods
pop
out
fistpll
push
and
push
pop
xor
stos
enter
add
dec
rclb
adc
pop
es
xchg
call
adc
xorl
das
xor
cmp
enter
stos
loop
dec
xchg
ja
cmpsb
inc
mov
repnz
jne
mov
ret
mov
sub
mov
mov
xchg
mov
cmpsl
cltd
sbbl
push
mov
push
jg
lods
xchg
js
mov
pop
sbb
mov
cmp
sbb
hlt
addr16
mov
aad
cli
pushf
xchg
arpl
xchg
jnp
enter
sub
jp
loope
jae
dec
inc
inc
or
cmp
jnp
jno
daa
lods
xor
insl
imul
ret
pop
and
mov
cmp
sub
xor
cmp
pop
sub
mov
lret
push
xchg
adc
addr16
arpl
mov
js
loop
add
adc
sub
sbb
ficomps
cwtl
sarb
loopne
add
adc
ret
sahf
and
sti
arpl
das
push
push
jbe
aad
test
push
push
sbb
and
in
pop
insb
push
aam
add
lcall
mov
mov
int3
push
mov
call
adc
and
das
test
sbb
inc
stos
movlps
inc
push
jbe
jns
sbb
push
add
shl
das
inc
inc
or
mov
sahf
dec
mov
push
jnp
and
test
jecxz
lods
lret
aad
mov
sbb
mov
incl
cld
inc
xor
pop
mov
imul
in
lretw
dec
push
cli
loopne
jle
push
add
sub
fwait
imul
sub
cmp
sbb
push
cmp
in
xchg
into
stos
cmp
ss
inc
sub
and
out
std
mov
add
sbb
mov
outsb
sbb
in
dec
test
loope
into
je
dec
xchg
lahf
ret
jecxz
adc
arpl
mov
fistps
add
xchg
rclb
movsb
lret
lret
mov
dec
ret
enter
xor
scas
addr16
imul
inc
add
mov
pop
mov
mov
push
es
rorb
std
and
dec
cmc
and
mov
in
pop
mov
and
jg
adc
movsb
cmp
mov
loopne
pop
mov
in
inc
adc
test
pop
pop
mov
cmp
sbb
dec
scas
add
xchg
lret
push
jp
or
and
test
negl
dec
sahf
dec
popf
jb
ret
cmc
xchg
jne
dec
dec
roll
ret
addl
movsl
xor
jno
out
insb
cmc
mov
and
add
test
lret
addr16
mov
fisubl
inc
jg
lods
pop
dec
or
push
or
out
pop
call
pushf
add
adcl
xchg
sbb
mov
ret
and
push
sub
lret
hlt
das
and
mov
push
lock
push
or
ja
out
pop
movsb
test
mov
imul
imul
scas
sub
test
dec
loopne
sbb
out
mov
test
call
pop
lods
push
xchg
jbe
in
idivb
pop
andl
lock
push
jo
cmp
cmp
insb
cmp
adc
gs
incb
bound
fmulp
cmp
lcall
jp
pop
jle
movzbl
dec
mov
lcall
cmp
xor
or
std
pop
pop
add
sti
mov
cwtl
and
sub
aad
lea
dec
loopne
jge
add
daa
push
push
push
ja
push
lret
shl
cmp
mov
mov
push
adc
mov
mov
or
pop
arpl
mov
mov
imul
sbb
mov
cld
xchg
pop
inc
mov
mov
xchg
mov
pop
scas
mov
sbb
cld
pop
out
pop
repz
jmp
and
adc
fwait
mov
or
rcll
inc
xor
xor
sti
adc
fists
mov
sbb
lahf
jbe
jmp
enter
dec
in
in
adc
add
shl
outsl
pop
mov
mov
fistps
jb
inc
test
xor
push
movb
repnz
cli
cmp
jle
mov
fnsave
add
pusha
cmc
pushf
pop
lret
pop
push
test
jmp
push
and
xchg
lahf
pop
dec
inc
xchg
jg
add
ds
imul
cmc
cltd
mov
pushaw
sub
cmpsb
xchg
jmp
cli
out
fwait
pop
pop
shll
scas
xor
xchg
out
xchg
pop
cmp
shll
aaa
pop
jmp
int3
lret
les
sbb
mov
int3
daa
pop
add
mov
outsb
movsl
lea
sbb
cmp
pop
inc
cli
sbb
dec
mov
mov
loop
es
xchg
xor
add
xchg
loop
mov
leave
ret
xchg
mov
mov
cmp
insb
adc
xchg
and
xor
pop
test
pop
mov
testb
daa
pusha
add
ss
outsb
push
int3
jle
lret
adc
andl
bound
xor
stos
iret
pop
mov
loopne
outsl
ss
mov
cmp
cwtl
add
jne
or
into
xchg
inc
and
in
shrb
pop
sub
test
mov
lret
or
inc
push
adc
push
fldl
and
xchg
jns
xchg
sub
movsl
ljmp
test
add
lret
pop
sbb
je
hlt
adc
jae
cmc
fadd
xchg
out
fmuls
inc
adc
jp
mov
insb
cmp
aas
stc
repz
in
ret
and
repnz
xor
test
aad
mov
das
movsl
and
lds
repnz
int
pop
jmp
inc
fistpll
dec
xchg
lods
outsl
fs
inc
loopew
and
loope
cs
test
and
inc
xorb
jno
testl
mov
jecxz
sub
push
aaa
mov
test
daa
sbb
xor
inc
mov
mov
pop
scas
push
cmp
xchg
inc
aam
lahf
and
sbb
lahf
lods
mov
out
aam
jl
sub
leave
cld
test
movsb
outsl
lods
push
and
or
push
dec
stos
or
mov
cmp
bnd
stos
pop
mov
lcall
jl
sub
jb
faddl
pop
and
int
call
jl
mov
pop
mov
popf
pop
cmpsl
pusha
pop
out
or
cmc
int3
xorl
dec
imul
mov
arpl
jecxz
sub
lahf
adc
jbe
cmp
aaa
pop
repz
lods
mov
scas
insl
adc
sti
pop
push
pop
je
adc
stos
or
fcompl
loope
mov
pop
out
or
popa
and
cmpsb
stos
sarl
gs
aad
scas
out
jge
mov
pop
dec
xchg
or
test
sub
sti
imul
bound
addl
and
leave
mov
repnz
fidivrl
mov
xchg
sbb
addr16
lea
cld
clc
jge
cli
push
sub
lret
push
ljmp
leave
sbb
pop
dec
pop
add
jo
or
sub
testb
cli
out
insl
mov
xchg
aaa
lahf
fisubrl
inc
shlb
adcb
dec
aam
cld
clc
pusha
sub
push
cmp
out
pop
jnp
xor
xchg
mov
add
fiadds
mov
test
rcr
ja
xlat
add
popf
loop
pop
push
pushf
cmp
clc
adc
fwait
aad
mov
xchg
fwait
mov
pop
int
mov
pushf
sbb
cmp
mov
ljmp
and
aas
sarb
gs
push
adc
sbb
pop
xchg
test
jg
std
adc
mov
in
gs
js
imull
dec
in
mov
movsl
cmc
shl
sbb
sub
mov
sarl
lret
inc
mov
xchg
sti
aaa
xchg
imul
dec
inc
icebp
or
adc
cmp
push
inc
test
mov
jle
enter
mov
sahf
and
mov
push
imul
xchg
push
add
test
dec
mov
inc
push
mov
cmp
push
pop
test
cmc
loop
std
incl
pop
fwait
mov
data16
jle
test
mov
fwait
mov
jl
jecxz
adc
test
dec
add
enter
mov
mov
add
ficompl
pop
aaa
aaa
cmp
cli
jns
or
les
popa
int3
outsl
sub
mov
lahf
pusha
mov
xor
mov
out
inc
cmp
xor
in
push
jle
sub
fwait
sti
fisttps
fcomps
cmpsl
mov
and
stos
cwtl
adc
pop
xlat
out
xor
int
loop
cmpsb
inc
and
gs
je
lcall
lock
xchg
adc
and
mov
dec
mov
dec
outsb
stc
out
cmp
loope
xchg
iret
inc
jp
adc
sti
je
aad
and
jl
movsl
lcall
fcmove
movsl
pop
mov
loop
sbb
xchg
jmp
mov
fnstcw
add
stc
insl
mov
push
loopne
pop
jae
xchg
or
dec
xchg
imull
sub
aam
xlat
mov
xchg
jmp
sbb
fwait
xchg
fldt
stos
xchg
imul
sub
fisttpll
dec
adc
dec
push
lods
imul
or
arpl
inc
push
mov
loop
pusha
sbb
dec
sub
or
loop
cwtl
mov
mov
or
outsb
cmp
mov
push
push
sub
movsl
jo
lcall
pushf
xor
mov
sub
cmpsb
cltd
push
shl
inc
sarb
fnstcw
push
cltd
loope
rorl
fidivs
xor
jl
mov
in
test
cmp
and
pop
stos
call
test
out
out
outsb
push
push
lcall
xchg
leave
sub
pop
jmp
mov
dec
movhps
xor
cs
sbb
test
push
xor
ret
mov
xor
mov
xor
lods
test
cmp
mov
mov
popa
cmp
jno
movl
mov
mov
mov
ret
mov
lods
or
sub
fsub
pop
in
test
adc
pop
ljmp
int3
mov
dec
hlt
adc
sbbb
pop
and
pusha
lds
mov
cmp
and
or
pop
cmp
shrb
mov
push
cmp
and
jl
and
jo
sub
aad
lcall
ficoms
xor
or
cmpsb
jg
lcall
ja
hlt
mov
inc
xlat
into
add
inc
scas
je
add
xchg
dec
nop
loopne
mov
mov
rcll
lcall
lret
lahf
inc
inc
imul
cmp
icebp
push
mov
push
mov
sub
xchg
in
sub
push
aas
repnz
cmp
inc
inc
pop
xchg
in
xor
lret
scas
xchg
push
std
pop
sahf
lcall
pop
lods
aad
sbb
outsb
xchg
flds
xor
cmp
stc
push
popa
loope
das
mov
in
jg
xor
aam
in
inc
mov
shll
xchg
and
aas
add
iret
std
pop
mov
fisubrl
mov
stos
xchg
ffreep
imul
xchg
loope
add
ljmp
or
sub
sarb
inc
or
adc
out
cs
ljmp
in
dec
xchg
xlat
dec
and
mov
leave
jno
adc
pop
fwait
mov
xor
loop
cmpsb
dec
adc
sbb
loope
mov
fs
mov
in
fsubs
push
and
loop
lock
or
sbb
movsl
sbb
adc
add
push
and
pusha
in
mov
sub
adc
lahf
dec
xchg
ss
arpl
mov
andb
xchg
dec
insb
cmp
dec
jns
je
enter
dec
out
ds
dec
notb
cld
repz
mov
inc
sbb
inc
jp
or
shrb
int
rorb
xor
cmp
xchg
lock
mov
repnz
je
dec
push
cmpsl
shll
sbb
je
or
repz
pop
jg
push
fidivrs
sti
scas
jp
dec
mov
mov
and
shrb
cltd
lds
sti
cmp
jo
in
pop
iret
test
or
imul
leave
jle
jecxz
pusha
and
mov
aaa
lods
rolb
shlb
add
repnz
adc
jge
iret
adc
jmp
and
jbe
addr16
adc
aaa
repnz
xchg
frndint
inc
sti
adc
repz
and
inc
jge
lock
jecxz
lcallw
sarl
pavgw
sbb
fsubs
xor
push
push
mov
out
in
inc
push
out
imul
adc
in
loopne
mov
iret
roll
xchg
mov
sbb
ljmp
fadds
add
inc
imul
and
dec
mov
loopne
mov
shrb
sbbb
xor
jns,pn
sbb
pop
pusha
int3
daa
out
fnop
scas
pop
add
lea
mul
pop
idiv
loope
push
stos
jmp
adc
mov
xchg
cli
outsl
mov
or
ficoml
ret
mov
xlat
add
jns
mov
add
outsl
mov
jnp
lahf
and
cmp
popa
xchg
xor
insb
iret
rolb
sbb
jecxz
or
mov
jnp
daa
cmp
ja
jns
cmp
lret
lahf
and
imul
cmp
mov
jb
sub
into
xchg
out
mov
mov
xorb
and
add
rol
jo
lahf
push
jg
cmp
test
push
aam
jb
mov
inc
push
fisubrl
cmp
adc
dec
or
cwtl
bound
xor
jmp
lcall
lret
cli
aam
xorb
in
and
pop
mov
dec
mov
pop
popa
push
rorb
lahf
jne
cmp
jle
and
mov
sbb
sub
mov
mov
fdivs
in
in
rol
aas
sbb
or
inc
test
inc
jo
in
adc
pop
test
out
and
rclb
mov
pop
adc
cltd
xchg
xchg
jno
outsl
dec
mov
adc
ret
dec
stc
and
aam
divb
je
xor
lret
xor
adc
leave
je
push
fs
push
adc
or
push
mov
shr
and
movsb
mov
xchg
stos
repz
jns
imul
test
xchg
pop
pusha
mov
mov
insb
xor
jo
fisubrs
push
ljmp
les
ljmp
push
dec
fs
adcl
xor
in
filds
sbb
mov
pushf
aad
lret
xor
or
mov
test
mov
pop
pop
test
lret
add
cmp
mov
or
jno
xor
fistpll
add
decl
pop
jl
ret
push
pop
test
or
pushf
loope
and
insb
mov
push
test
mov
out
mov
jg
cmp
arpl
mov
xor
push
ja
std
xchg
out
mov
repz
fcompp
adc
add
push
fidivrl
movsl
shl
jge
dec
add
inc
scas
jl
cli
jne
mov
loop
cmp
jg
xor
mov
sub
xor
insl
push
fcompl
push
mov
aad
or
jno
push
pop
dec
or
fidivrl
imul
jb
xchg
adc
mov
jp
scas
add
ret
imul
les
mov
out
mov
call
arpl
test
xchg
add
pop
jmp
xor
dec
jns
push
dec
sbb
and
icebp
out
popa
xor
mov
movsb
mov
jmp
cmpb
add
push
add
jle
test
loopne
cld
cmp
subb
cmpsb
mov
rcl
or
mov
adc
out
cmpsb
movl
out
decl
stc
bound
inc
mov
ret
adc
push
or
cmpsb
xchg
pushf
sub
or
in
jo
push
sbb
sbb
out
mov
dec
popa
sti
cmp
into
lret
hlt
and
push
or
sbb
aas
in
aas
fucom
test
push
xchg
dec
and
cmp
xchg
jbe
jge
adc
and
pushf
mov
jo
mov
or
adc
mov
inc
dec
dec
add
fldl
xor
adc
out
test
add
push
mov
jb
test
xchg
dec
cmpsb
into
decl
adc
dec
ret
push
xchg
jo
mov
or
fldenv
psubsb
sub
mov
cltd
pusha
sub
dec
adc
jo
ret
inc
lret
arpl
in
rclb
dec
test
inc
cld
imul
bound
aas
mov
sub
out
jmp
loopne
stos
mov
fs
out
lea
int
test
sti
push
hlt
xor
ljmp
arpl
adc
test
sbb
outsl
inc
mov
pushf
sub
sbb
in
mov
fyl2x
xchg
in
pop
rolb
inc
xchg
pushf
lret
andl
cmc
xor
bound
add
sub
pop
dec
cmp
mov
movsl
enter
jns
sarl
sbb
mov
in
push
cmp
scas
shll
push
dec
push
aam
test
and
les
orb
cmpb
loopne
stos
gs
scas
sub
push
xlat
push
xor
cld
inc
sti
std
mov
stc
or
stc
sbb
imul
cmp
push
hlt
cs
jg
lds
cs
ljmp
pop
lret
jns
jp
xchg
pop
inc
jecxz
fxch
out
les
dec
sbb
jg
cmp
rdmsr
test
ja
icebp
lahf
loope
insb
sti
push
pop
inc
ret
xor
push
repnz
lret
sbb
mov
cmp
cltd
jae
jp
out
mov
mov
add
jle
mov
cli
jo
add
fdivl
stc
jnp
and
add
test
mov
ret
inc
and
xor
adc
in
aam
ja
mov
mov
and
and
jbe
cli
jnp
sbb
sbb
shrl
pop
pop
mov
xlat
cmp
push
adc
lock
push
or
jge
pop
dec
jp
or
mov
je
aad
fpatan
cld
xchg
pop
sbb
jp
cmp
paddq
jb
nop
push
pop
popf
mov
jle
rorl
data16
dec
orl
and
lret
fstl
fwait
sbb
mov
push
jmp
das
outsb
push
jle,pt
xor
jbe
les
jl
add
movsl
mov
test
mov
mov
popl
cmp
insb
adc
sarl
ret
dec
imul
inc
push
jmp
out
and
popa
cli
test
and
push
lcall
sub
ret
gs
mov
cltd
jne
imul
pop
cmp
xor
sbb
push
mov
xchg
jo
sahf
and
incb
insl
movsl
xchg
mov
cld
in
xchg
cmp
or
out
mov
sbb
cmp
mov
cmp
or
loope
dec
fcoms
jg
jmp
dec
push
pushf
push
mov
inc
pop
jecxz
jno
and
popa
sub
pusha
rcr
xchg
xor
xchg
pop
insl
mov
mov
mov
and
neg
cmp
addl
jns
ja
xchg
and
lahf
mov
ljmp
xchg
mov
stos
mov
fwait
or
data16
jl
mov
nop
jmp
mov
imul
pop
loopne
test
popa
arpl
xchg
notb
aas
xor
mov
les
inc
divb
sbb
inc
push
lret
inc
popf
loopne
push
push
addl
fdivl
xchg
shll
add
lods
hlt
lret
sub
jle
push
in
pop
mov
pop
xor
push
ds
sbb
bound
add
inc
jle
pop
jmp
pop
mov
add
fwait
jns
cmc
jge
movnti
push
shl
xor
in
cmp
add
cmpsb
mov
popf
mov
jle
push
jae
pop
or
jno
mov
pop
mov
mov
jno
or
jns
out
out
jno
and
mov
scas
mov
jle
sbb
mov
add
and
push
xchg
mov
call
insl
andl
call
adc
cmpsl
aas
std
mov
and
push
push
fwait
daa
xor
fstps
shll
int
jl
mov
add
test
nop
das
inc
lret
mov
xchg
stc
scas
lret
push
sbb
mov
pop
jnp
cmp
jne
mov
jns
fsubr
fs
mov
sub
add
call
leave
inc
and
mov
andl
aas
repz
mov
push
mov
mov
insl
mov
adc
rcrb
jnp
mov
aam
das
ljmp
lret
and
lods
js
jno
inc
test
shll
or
jns
jg
insl
mov
xchg
inc
cmc
xchg
call
dec
lods
rep
ffreep
push
pushf
add
cmp
cs
shll
sbb
jns
imul
adc
fmull
add
in
inc
bound
pop
aad
mov
push
scas
xchg
call
add
pusha
pop
out
enter
xchg
decl
xor
fs
cmp
sub
inc
ror
scas
fiadds
call
mov
push
add
sbb
or
sbb
jle
lock
imul
icebp
in
add
pusha
sub
movsb
sbb
fmuls
pop
mov
lds
aad
push
lea
loopne
adc
imulb
pop
xor
dec
pop
fstl
jb
dec
sbbl
xor
mov
push
sti
mov
push
mov
mov
mov
lahf
addr16
scas
fwait
inc
fs
xor
push
pushf
stos
pop
adc
faddl
neg
insb
add
cli
jl
lret
insl
or
xchg
add
insl
add
jmp
adc
add
adc
mov
dec
repz
js
sbbb
inc
xchg
test
sbb
test
into
pop
push
rcl
arpl
sub
ret
jno
xchg
mov
cmpsb
popa
hlt
in
aam
jae
mov
in
jbe
xor
xchg
push
or
ds
or
sub
push
and
mov
or
adc
mov
fistpl
mov
jl
inc
or
jbe
imul
out
mov
xorb
lock
mov
das
push
jmp
dec
test
test
sbb
iret
mov
xchg
or
mov
pop
outsb
adc
clc
lods
aad
xorb
pop
enter
adc
fldl
jbe
dec
ja
std
movsl
cmpsb
movsb
mov
sub
arpl
inc
stos
movsb
add
pop
cmpb
push
movsb
in
dec
mov
in
aam
and
cmp
sub
and
adc
jmp
add
inc
and
adc
xor
in
cmp
mov
arpl
pop
mov
xchg
hlt
rclb
pop
push
lock
dec
jle
inc
inc
in
sahf
sbbl
xor
jmp
mov
stos
les
push
ficoms
gs
test
sub
sar
iret
fisubs
imul
orl
xchg
lret
sbb
shl
cmp
adc
cmp
inc
lds
movsb
xchg
and
mulb
cmp
lahf
adc
popf
imul
push
ss
pop
fsubr
mov
rol
push
imul
inc
mulb
insl
jmp
stos
add
dec
inc
sub
xor
fidivl
sbb
notb
fnstenv
and
stc
rorb
pop
pop
xchg
les
xor
popf
gs
lcall
xchg
mov
inc
adc
and
rcl
lahf
mov
mov
es
inc
sub
pusha
je
jne
add
mov
xor
sub
arpl
jp
fbld
out
aam
icebp
aad
xlat
or
ret
test
push
inc
dec
add
mov
and
cs
jle
push
sbb
xchg
repz
ret
adc
popf
cld
fwait
xchg
jp
mov
cmc
hlt
sub
push
or
std
js
mov
and
mov
movsb
loopne
adc
fiaddl
cmpsl
pop
jecxz
push
push
add
push
stos
idiv
dec
loop
add
cld
mov
mov
jb
mov
adc
movsb
movl
dec
or
adc
adc
stos
mov
lods
sbb
dec
mov
cli
push
in
arpl
in
sbb
std
cmpsl
dec
ret
jge
pop
jne
jmp
push
int3
in
xchg
aad
or
mov
adc
movsl
jmp
mov
sar
jl
ss
xchg
mov
fisubs
xor
or
inc
fidivl
or
mull
jge
aam
xchg
sub
cmp
outsb
das
dec
pop
in
push
pop
pop
sub
sbbl
js
mov
bound
sbbl
push
bound
repz
xor
sbb
and
fstps
test
stos
xchg
jne
xlat
cmp
xor
mov
test
sbb
cmpb
jmp
lahf
mov
test
push
sti
inc
or
mov
or
scas
ficompl
leave
jb
mov
shl
inc
movsl
ds
jg
sbb
das
testl
xchg
popa
mov
xor
xchg
jge
jle
lods
jb
sub
pop
pop
mov
notl
add
outsl
xor
movsl
lfs
das
inc
adc
cld
xor
ret
jl
scas
pusha
adc
dec
arpl
pop
pop
imul
stc
outsl
inc
or
scas
dec
and
addr16
ljmp
mov
ret
push
push
inc
int3
or
fsts
jne
js
cltd
sub
fwait
inc
gs
shlb
cmp
filds
sub
imul
xchg
aad
test
jecxz
xor
jg
les
pop
icebp
sbb
push
sub
xor
inc
pushf
push
movsb
jecxz
inc
dec
mov
and
xor
jnp
jl
sub
fwait
test
pop
jmp
out
xchg
rcll
ret
mov
mov
add
test
cmc
loope
lret
cltd
cmpsb
idivl
sbb
dec
mov
push
not
mov
popa
stc
mov
inc
hlt
fs
pop
push
jnp
ret
fadds
mov
fwait
sbb
aad
outsb
mov
and
ds
or
clc
push
mov
push
and
leave
jle
lcall
adc
jae
test
mov
push
cld
push
outsb
pop
sti
fsts
imul
stos
shlb
iret
dec
mov
cs
sbb
mov
push
loopne
jnp,pn
in
adcb
out
rcrl
mov
pusha
orb
repz
cmp
das
push
in
dec
sub
les
push
into
out
inc
adc
xorl
clc
cmc
mov
pop
jle
sbb
cltd
fisttps
and
jg
leave
mov
or
push
jnp
push
jl
mov
jle
data16
xor
aaa
jo
cmc
push
and
in
repz
xlat
lods
arpl
lcall
lock
push
mov
inc
mov
push
and
xlat
xchg
fs
xchg
cwtl
sub
dec
jg
je
adc
xchg
or
cltd
mov
fdivp
das
aad
mov
stc
hlt
lods
sahf
into
or
xor
iret
sarb
cs
rcl
pushf
iret
dec
in
mov
stos
mov
cmpsb
rorl
dec
insb
inc
jns
das
fbstp
or
mov
cwtl
je
sbb
iret
dec
cli
xchg
jp
dec
pop
jno
mov
jne
cwtl
enter
sub
xor
lret
lea
jb
mov
add
mov
scas
cmp
mov
pusha
out
in
inc
jbe
and
loop
dec
xchg
stc
sub
fnstsw
adc
cld
popa
pushl
in
cmpsl
shr
cmp
add
notl
jl
fadds
ss
popa
add
push
xchg
xor
sub
and
les
sarl
test
ret
std
clc
pop
fdivrl
dec
daa
push
mov
sub
jb
xor
incb
jae
inc
lods
aas
adc
or
xchg
and
jns
shr
fnstenv
pusha
lahf
push
sbb
jl
or
pushf
fbld
mov
loope
repnz
or
sub
mov
xchg
add
aad
frstor
lahf
data16
sahf
clc
into
add
das
mov
cli
pop
xor
and
push
xchg
or
iret
xlat
cmp
into
push
movsb
enter
cmpsl
outsb
pop
pop
jo
sub
add
pusha
jecxz
mov
outsl
aad
sub
and
adc
mov
subl
sahf
adc
lea
lea
mov
bound
out
imul
adc
pop
ret
sbb
sbb
in
mov
ja
mov
aas
push
push
mov
aam
push
lahf
jne
and
and
out
or
dec
and
adc
inc
rorl
cmp
jp
ja
fsubrl
andl
sub
xchg
cmp
pop
int
jmp
mov
mov
mov
sahf
mov
scas
adc
dec
push
call
cs
or
inc
mov
repz
int3
cwtl
inc
mov
mov
inc
mov
movsb
cmovge
push
jnp
fcmovnbe
jmp
fcmovb
scas
enter
push
jnp
pop
pop
out
inc
in
pushw
out
test
shrl
lahf
loopne
loope
or
jne
mov
gs
aas
test
ret
pinsrw
adc
negb
pushf
ret
add
nop
inc
sub
out
xchg
mov
jl
mov
adc
in
mov
lahf
sub
fdivr
fiaddl
xorb
sub
shll
outsb
pop
test
pop
mov
sub
inc
mov
shll
out
xlat
adc
daa
loope
xchg
push
cmpsb
xor
jae
subb
popf
jns
mov
jmp
addl
mov
test
push
push
outsl
cmp
mul
xor
adc
xchg
dec
cmpl
scas
mov
mov
xchg
sahf
cmpsl
cmp
push
sar
std
ror
out
loop
dec
xchg
add
cmpsb
inc
test
in
mov
in
cmpsb
jl
movsb
rorl
fs
mov
shrb
aaa
stos
faddl
ret
xor
mov
xchg
sbb
push
clc
iret
mov
push
lcall
pop
repnz
pop
sbb
inc
mov
mov
and
int3
dec
fidivrs
mov
stos
fistpl
mov
xlat
out
lds
movl
push
loop
push
fnstenv
decl
movsb
jg
aaa
ror
cltd
adcl
out
jl
arpl
test
les
and
in
fisubrs
xchg
movb
or
scas
dec
leave
push
jmp
fisttpl
push
enter
sbb
call
sbb
scas
cmp
pop
jne
out
sub
rcrl
jae
int3
add
inc
ds
mov
nop
dec
mov
push
mov
scas
clc
sarl
inc
mov
jmp
pusha
mov
sbb
sahf
scas
add
cwtl
mov
sub
jp
or
push
add
cmp
jmp
mov
or
mov
push
and
dec
push
fstpl
ljmp
ljmp
ja
ret
inc
hlt
jp
clc
fstl
cwtl
xor
adc
and
in
mov
aas
rol
lds
int
outsb
mov
pop
popf
adc
and
mov
add
adc
loop
xchg
xchg
stos
repz
mov
pop
fidivrl
xor
or
cmpsl
mov
xor
mov
add
movsb
cmp
and
and
in
imul
jge
mov
cli
jno
mov
pop
in
jo
sahf
daa
int3
lods
inc
ljmp
js
sub
jp
jo
aam
dec
mov
sbb
ds
rolb
dec
std
pop
adc
dec
test
mov
fisttpll
adc
adcb
fsubrl
cmp
jle
div
pop
mov
cmp
mov
lret
mov
cli
and
jmp
scas
push
lcall
inc
pop
and
stos
scas
out
lods
sar
inc
cltd
stc
inc
sub
je
lcall
mov
adc
mov
push
dec
arpl
mov
jg
add
lcall
scas
or
jle
or
std
scas
pop
jno
call
dec
or
or
popf
and
xchg
pop
xchg
sbb
pushf
dec
or
adc
jmp
push
int
out
xchg
mov
cmp
cmp
and
aas
jo
dec
push
lods
sub
or
out
imul
mov
jno
jecxz
outsl
cmp
pop
push
push
call
push
pusha
or
lods
popf
push
mov
push
jae
and
cmp
xchg
repz
in
xor
stos
repnz
jp
xchg
pushf
xor
xchg
das
add
mov
jge
enter
mov
lea
add
xor
xor
cmpl
cmp
nop
lcall
jp
arpl
or
and
sub
sub
or
xor
stc
and
pop
jns
xchg
sbb
orl
or
sbbb
jno
aad
adc
sub
xor
rcl
push
cmpsb
dec
fimull
cmp
aas
and
out
xor
int
add
and
or
add
cs
inc
test
or
adc
xrelease
mov
fdivp
mov
add
inc
xor
and
stos
xchg
mov
in
sbb
neg
pop
je
push
repz
pop
push
subl
out
inc
repz
and
data16
mov
jmp
pop
sbb
inc
push
and
int
lahf
dec
xor
mov
dec
ss
mov
sub
lea
fildll
and
sbb
push
sahf
pop
jg
int3
jnp
js
mov
mov
jns
or
insb
xor
iret
cwtl
xor
push
xor
ljmp
bswap
sbb
mov
lock
mov
mov
imul
sahf
xchg
mov
jp
inc
out
mov
add
outsl
out
jmp
shll
adc
inc
sbb
out
jge
mov
outsb
pop
iret
sahf
aad
mov
cmc
adc
pop
and
cli
cmpsl
fxtract
inc
dec
jle
mov
push
xlat
sahf
mov
subb
push
sbb
and
outsl
jge
or
test
xor
imul
fwait
dec
arpl
sbbl
std
jge
jecxz
xor
dec
and
aaa
adc
jnp
pop
roll
jg
insl
cli
dec
pusha
push
fists
xlat
and
and
and
cmc
push
cmpsb
rcrl
mov
inc
leave
fwait
or
jns
mov
je
pop
hlt
jle
daa
shll
mov
inc
sbb
in
mov
sub
push
icebp
mov
push
gs
inc
int3
ja
xchg
cltd
pusha
adcb
sbb
mov
loop
int
sti
mov
mov
int3
push
cmpsb
sbb
dec
pop
jmp
mov
imul
sub
mov
add
dec
xchg
jl
push
ja
and
cmp
je
inc
outsb
push
int
popf
xchg
mov
loop
mov
pop
repz
mov
ja
out
lods
xor
mov
lret
in
or
sbb
out
jmp
gs
mov
pop
lea
fs
mov
lret
loop
dec
loopne
pop
ret
inc
fldt
jl
cmp
pop
or
fcmovu
xchg
xchg
jle
hlt
pop
and
insl
pop
push
hlt
pop
jecxz,pt
aas
xor
xchg
pop
inc
into
jle
jbe
mov
xor
test
fimuls
jg
dec
js
mov
add
pop
cs
in
mov
in
and
or
repnz
ret
jnp
jne
repz
bnd
add
jecxz
arpl
aaa
jecxz
push
cmp
dec
add
cmpsl
mov
push
dec
push
xchg
inc
pop
xchg
pushf
and
jne
gs
fstl
dec
daa
jnp
ss
sbb
ret
mov
pop
insb
loop
shr
lods
add
mov
lods
pop
mov
nop
adc
adc
mov
lret
ja
or
fisttps
clc
out
jbe
jo
xchg
pop
iret
fs
mov
fcom
fs
pop
in
icebp
cmpsl
shlb
je
jle
xor
inc
mov
dec
cli
add
mull
aam
inc
cmp
mov
mov
jle
xchg
mov
cmpsb
or
xchg
bound
call
sbb
sti
into
loop
add
int3
add
outsl
or
mov
ljmp
aas
pop
xor
sub
leave
pop
push
std
cmpsl
mov
sub
cld
jmp
cwtl
addb
add
jb
les
and
inc
iret
push
aaa
and
cwtl
aad
cltd
jb
cltd
pop
js
push
mov
add
popf
bound
stos
imul
cmp
or
icebp
sub
dec
and
mov
popf
mov
lods
sbb
push
pop
push
std
inc
inc
and
adc
aaa
push
pop
sbb
adc
and
adcb
adc
jmp
sub
adc
push
mov
addb
inc
loopne
scas
fisubrs
lahf
inc
sub
insl
mov
lret
jb
sahf
orb
lret
jmp
xchg
movsl
fisubrs
xor
ficomps
test
pop
call
call
xor
clc
insb
xchg
mov
bound
lret
add
mov
mov
scas
push
fcmovbe
dec
adc
fscale
and
add
shll
test
cs
push
xor
jecxz
xchg
jl
push
out
fildl
lods
jge
xchg
inc
shll
sub
cmp
lret
push
push
and
popa
outsb
into
mov
jg
ret
sbb
inc
dec
adc
orl
xor
popf
adc
insb
mov
mov
inc
adc
lcall
jmp
test
mov
xor
mov
testb
dec
js
imul
xchg
mov
mov
xchg
push
sbb
cmpsb
mov
emms
lods
int
dec
jl
dec
scas
jle
pusha
xor
mov
xchg
fisttps
dec
shll
pop
daa
aad
das
jecxz
outsl
jl
mov
iret
dec
jae
fcomps
inc
xlat
jmp
xor
movsb
adcl
pop
push
ret
int3
mov
daa
push
jb
popf
hlt
fs
jo
nop
jae
cmp
push
jp
in
fstl
xor
fwait
cltd
in
dec
inc
ljmp
mov
mov
scas
insl
mov
xchg
je
pusha
inc
dec
scas
pop
xlat
jns
mov
pop
loope
push
cwtl
iret
mov
adc
jo
sbb
rorl
test
popl
iret
clc
push
push
lret
into
adc
pop
and
xchg
lret
test
adc
cs
cs
stos
xchg
sbb
adc
les
stc
icebp
icebp
mov
lret
cmp
jge
or
cwtl
xor
adcb
cmp
inc
adc
sub
insl
mov
pop
adc
xlat
pusha
mov
fnstenv
lahf
push
rolb
mov
xchg
inc
jl
inc
pop
scas
int3
ret
leave
push
mov
and
mov
fildll
pop
sarb
lcall
pop
xchg
sub
mov
test
dec
xchg
mov
mov
aaa
cmp
lds
jb
xor
dec
and
rcll
jecxz
push
ss
cmc
pop
test
xchg
jg
cmp
xchg
jb
mov
clc
sub
adc
ret
inc
cltd
sti
mov
push
test
add
or
xorl
add
negb
lods
shl
jmp
imul
test
dec
push
scas
pop
pop
or
sar
push
dec
xor
xchg
xor
jo
jns
icebp
push
pop
or
mov
insl
mov
inc
sti
ds
xor
push
xlat
cmc
mov
aas
sbbl
lret
in
pusha
mov
jmp
pop
or
xchg
call
add
testl
push
les
cmc
movsl
pushf
add
xchg
enter
mov
push
test
aam
add
fcoms
lea
orb
decb
clc
adc
pop
rcr
ret
push
dec
mov
cmc
out
mov
stos
scas
jmp
mov
push
lods
jle
subl
mov
xchg
les
xchg
movsb
jb
into
fwait
xchg
enter
movb
xor
fists
cmpsb
imul
and
mov
add
xchg
dec
pop
popf
std
jbe
or
test
sbb
and
add
jle
mov
fadd
ss
aaa
aam
sbb
sarb
inc
out
lcall
mov
cmp
jg
dec
ficoms
dec
inc
dec
shrb
arpl
fists
push
xchg
or
test
and
repnz
add
mov
push
pop
cmp
xor
fbstp
push
cmc
xor
or
or
stc
loop
push
pop
shl
push
add
out
roll
push
mov
scas
push
cmp
mov
mov
fcomps
inc
sub
push
and
cmpl
mov
sub
jmp
push
popf
mov
xchg
push
mov
popf
lcall
stc
mov
adc
mov
or
mov
mov
jb
cmp
pop
dec
out
stos
shll
cmp
jbe
das
addr16
subl
fistpl
aas
cmpsl
sbb
cld
mov
mov
aaa
sbb
fcmovb
jmp
xchg
inc
add
int
inc
fadds
mov
mov
call
rcll
xor
mov
bound
push
cmp
movsb
stc
loope
adc
rorb
sbb
leave
dec
insl
je
in
cmc
movups
dec
ljmp
ljmp
inc
cmp
sbb
outsl
mov
pop
in
cmpsl
test
xor
mov
pop
adc
sbb
loope
pop
fcmovbe
mov
lods
lock
fdivr
in
sbb
jbe
scas
xor
or
mov
sbb
dec
xorb
icebp
jl
sub
sub
sub
sub
out
je
xchg
push
test
or
sub
dec
inc
sti
add
into
pop
rol
dec
repnz
or
mov
test
push
and
sarb
into
pusha
sbb
pop
push
mov
or
pop
sbb
xchg
xor
jbe
insb
mov
outsb
jbe
and
adc
lods
and
add
push
push
jl
in
jle
std
dec
lcall
lods
jns
jns
or
movsl
in
es
in
mov
enter
in
or
dec
lahf
push
out
aad
mov
xchg
fcomps
fdivr
mov
icebp
daa
mov
jg
sub
jnp
xor
popa
pshufw
push
mov
mov
or
das
js
cld
adc
push
loope
jne
adc
rorl
mov
adc
jl
lds
lds
mov
popf
adc
ret
xchg
aam
cmp
sbb
cmpb
pop
mov
jo
outsl
out
inc
ja
cld
xchg
ss
test
push
xor
dec
lds
test
lcall
mov
cmp
push
jo
xchg
add
in
lcall
dec
mov
orl
addl
and
inc
cli
jge,pt
dec
push
add
decb
in
sbb
and
std
pop
int
arpl
mov
sub
pop
cmpsl
cmpsl
ret
dec
pop
ljmp
cwtl
out
enter
xchg
lea
cld
mov
pop
outsb
fidivrs
jae
test
add
rol
mov
mov
adc
sbb
dec
push
jne
sbb
call
xor
mov
xchg
jg
cmp
sbb
scas
aas
cmp
xor
inc
adc
push
fdivp
jge
cltd
push
jl
ss
negl
jae
mov
jno
cs
dec
jge
lods
mov
xlat
aaa
mov
dec
sub
psubd
or
push
pop
mov
sbb
add
cli
cltd
xor
bound
fimuls
outsb
push
xchg
iret
push
hlt
sub
xchg
leave
dec
mov
daa
incb
pop
xchg
and
vrsqrtps
cld
ror
add
daa
fnsave
pop
dec
mov
ret
cmp
pop
ljmp
sbb
out
je
sub
std
imul
cmp
jno
pop
jp,pt
jne
jg
iret
xor
inc
push
pop
mov
jp
scas
cs
xchg
xor
pop
dec
adc
pop
inc
ret
lods
cli
inc
push
adc
sub
mov
inc
lret
push
adc
sub
mov
dec
sbb
or
dec
dec
pop
jno
pop
frstor
mov
push
add
and
push
jmp
add
add
sbb
sub
lcall
test
xchg
clc
imul
sub
daa
in
sbbb
stos
nop
sub
int
and
into
xchg
push
test
pop
sti
inc
jge
ss
add
xchg
call
xchg
cmpl
or
pop
daa
fcomp
and
popf
pop
cmp
int3
call
fmuls
nop
xchg
fucomi
shll
in
sub
inc
notb
pop
data16
das
flds
and
xchg
rorb
jo
adc
loope
div
mov
mov
inc
mov
cmp
stos
dec
movsl
je
icebp
imul
xchg
adc
mov
adcl
inc
dec
ljmp
test
sub
and
xchg
add
test
jo,pn
sub
xor
push
xchg
add
out
pushf
mov
pusha
popf
jb
add
sub
add
jle
xchg
or
dec
scas
iret
fwait
push
inc
cmp
xor
inc
push
pop
inc
inc
fwait
xor
xchg
and
das
mov
mov
xchg
sub
mov
push
aad
fistl
mov
shrb
dec
dec
dec
mov
std
xchg
out
xor
pop
xchg
lret
mov
pop
adc
adc
adc
in
and
adc
ja
outsb
xchg
sub
xor
sahf
xorl
notl
ljmp
or
mov
ljmp
cli
mov
fisttps
xor
test
jno
push
test
clc
adc
pop
fnstsw
sub
ret
mov
sub
xor
call
push
sbb
movsb
xor
adc
idivl
stos
xchg
and
lahf
adcb
dec
cmp
mov
mov
xchg
arpl
mov
addl
popa
mov
dec
xlat
sub
adc
into
jae
enter
inc
pop
movsb
andl
xchg
testl
imull
scas
insl
and
dec
idivb
pusha
insb
mov
dec
negb
sti
int
subl
lods
or
clc
cmpsl
cmp
mov
mov
ret
jp
mov
inc
xchg
gs
jge
push
or
dec
sti
shll
or
gs
popa
mov
orl
insl
in
bound
addr16
adc
idivb
insb
inc
fstpt
test
adc
lock
iret
adcl
dec
and
inc
push
rolb
cmpl
stos
mov
orb
in
int3
inc
loop
es
xchg
aad
lock
jp
inc
jmp
out
jl
mov
insl
mov
adc
push
jne
mov
push
div
cmp
pop
dec
div
jne
mov
or
mov
dec
popf
xchg
ljmp
dec
les
or
adc
sub
dec
and
cwtl
jg
outsl
push
loopne
daa
add
adc
enter
cmp
lock
sub
xor
cwtl
mov
lret
mov
jmp
add
fwait
push
into
push
inc
cwtl
insl
mov
dec
add
mov
movsb
loopne
xor
inc
mov
or
jl
sub
sbb
fists
loopne
adc
push
in
cwtl
loop
rcrb
out
popa
sub
fimuls
xchg
in
aad
inc
xchg
and
and
cmp
dec
push
shlb
ljmp
es
addl
ljmp
out
mov
cmp
cmp
fistps
fildl
push
cmpsl
sbb
inc
xor
mov
insl
sbb
lret
out
push
int
aad
pop
clc
call
add
jnp
mov
push
int3
jb
scas
mov
xchg
out
dec
enter
ds
adc
stc
inc
ja
xchg
int3
cwtl
xchg
push
mov
clc
xor
or
adc
inc
outsl
mov
inc
nop
data16
cmpsb
cmc
jmp
repz
daa
pop
or
pop
out
int
out
aad
nop
sub
pop
lea
mov
adc
push
or
and
bound
xchg
repz
cmp
and
sub
inc
xlat
inc
fcmovu
jge
jl
cmpsl
push
cltd
ret
movsl
fwait
in
mov
push
inc
push
out
lret
xchg
dec
and
lods
cmp
xchg
int3
adc
shll
mov
bound
and
movsb
adc
je
int
leave
push
sahf
inc
or
inc
adc
movsl
mov
mov
inc
adcb
inc
fldt
lea
aaa
dec
mov
in
adc
mov
mov
movsb
or
ds
cli
mov
lds
ja
dec
mov
push
pop
lods
sarl
sahf
imul
cmp
aas
clc
lret
jbe
cmp
push
push
pop
xor
aaa
mov
lods
lret
lock
xchg
pop
leave
lods
push
dec
mov
push
jae
sub
cmp
pop
daa
loopne
in
add
loopne
ret
insl
mov
inc
adc
inc
sbb
in
psubq
mov
imul
loopne
movsb
dec
sarl
nop
push
jmp
add
ret
call
adc
add
fidivrl
insl
mov
aam
xchg
push
mov
leave
dec
rolb
into
adc
loope
pushf
push
xor
test
xor
mov
call
and
mov
mov
ret
or
mov
pushf
adc
dec
adc
pop
outsb
nop
sub
jp
inc
lahf
pop
outsl
or
jg
xchg
inc
scas
mov
std
cwtl
add
ss
mov
shl
leave
outsl
out
or
movsb
inc
fdivl
outsl
repnz
into
rcl
mov
pop
mov
clc
sahf
adc
sbb
js
push
scas
cwtl
scas
popa
bnd
add
adc
sbb
test
shll
mov
xor
es
fwait
add
call
jo
adc
sbb
in
sbb
testl
mov
icebp
mov
inc
mov
outsl
add
lods
dec
or
nop
sub
xorl
cmp
cmp
xor
lock
dec
mov
xchg
imulb
mov
sti
cmpsl
int
out
imul
testl
fdivrl
jno
pop
push
mov
ret
inc
scas
leave
cltd
ficompl
sbb
dec
cmp
in
ljmp
jns
xlat
xchg
sahf
jbe
xchg
sbb
test
jmp
mov
fs
subb
loope
sbb
xchg
or
popa
lods
cld
xlat
mov
inc
xchg
jb
cmc
pop
and
imul
or
or
pop
add
adc
aad
pop
mov
stos
iret
lock
pop
stos
pushf
inc
pop
enter
lcall
mov
dec
or
movsb
loope
sbb
outsl
inc
dec
insl
pop
scas
adc
or
or
push
movsb
cmp
mov
mov
jmp
daa
mov
xor
jnp
inc
hlt
iret
rcl
mov
les
sar
jle
jns
stos
ja
mov
dec
mov
push
jp
les
or
rcll
out
cmp
dec
aas
ja
out
lahf
push
xchg
int
jo
addr16
xchg
icebp
pop
mov
add
push
mov
mov
push
lea
mov
les
jmp
into
negb
iret
or
cmp
hlt
jecxz
inc
add
pop
cmp
leave
inc
movzbl
jle
popa
xor
fsts
jae
push
push
std
fsubl
xchg
dec
adc
xchg
movsb
popa
mov
adc
lods
test
mov
outsb
dec
mov
pop
mov
push
fsubrl
adc
pusha
das
xchg
enter
mov
xor
dec
loope
fdivl
pop
enter
lods
testl
mov
inc
mov
out
aaa
fwait
mov
lret
aas
xor
shr
mov
inc
notl
test
mov
adc
sub
cmp
fs
data16
jecxz
dec
push
hlt
sub
test
sub
inc
aad
jbe
loopne
cmp
sbb
enter
add
fcoms
or
add
ret
adc
movsl
out
loop,pt
sti
xlat
cmp
das
mov
pop
jb
insb
pop
pop
in
int3
xchg
clc
adc
loope
data16
lahf
shlb
mov
fistps
inc
dec
mov
scas
push
jae
jp
sub
sbb
cmp
in
cmp
adc
inc
filds
test
mov
into
sub
push
cmova
xchg
sub
jle
sub
fistl
test
jmp
repz
arpl
xchg
mov
cli
and
mov
mov
inc
xor
adc
cmp
adc
cmp
mov
aaa
jmp
xor
call
out
rcl
test
add
inc
xchg
mov
add
loopne
dec
add
mov
add
js
push
stos
xchg
jne
fbld
std
and
in
or
cli
rol
adc
int3
push
and
clc
je
lock
mov
xor
dec
cmp
aad
xchg
cmp
xchg
mov
test
push
mov
jmp
imul
adcb
add
iret
adc
ja
adcl
mov
imul
or
jno
jp
repnz
outsb
cmp
adc
adc
sbbb
je
ljmp
imul
push
clc
dec
repnz
call
xchg
jmp
push
imul
ljmp
fldl
mov
int3
pusha
push
popf
outsb
stos
sub
ficompl
jmp
insb
sbb
imul
or
iret
in
into
iret
pop
adc
xchg
scas
mov
mov
addr16
in
xor
stos
je
scas
dec
mov
or
mov
iret
pop
sub
movsl
add
pop
sub
enter
pop
or
jo
xchg
loope
int
lea
js
cld
lahf
ss
jmp
pop
inc
mov
insl
pushf
mov
pop
fwait
pop
lods
int3
insl
pop
ss
inc
addb
xchg
in
bound
push
inc
bound
lods
dec
dec
ret
stos
fwait
or
and
push
push
std
inc
dec
jecxz
push
xchg
cs
dec
jns
jecxz
aaa
rorl
lahf
in
imulb
cltd
sub
aas
scas
fldl2e
mov
or
mov
stc
jmp
aam
inc
add
out
add
mov
call
out
pop
push
jg
fdivrs
fistl
sbb
mov
rol
xor
pop
es
out
loopne
ficoml
out
inc
sbb
int
cmpsl
rorl
inc
push
add
gs
cld
mov
adc
test
negl
movsl
sbb
adc
mov
cmpsb
inc
pop
xchg
inc
int
xchg
test
insb
scas
push
jmp
add
xchg
sub
cmc
sub
imul
push
sarl
push
aas
mov
lds
xchg
repnz
aas
movsl
xchg
stc
jne
mov
add
loope
loopne
mov
test
mov
pop
insb
and
jmp
or
sub
ds
jg
fsts
cwtl
and
sti
rcrb
sbb
dec
push
dec
pop
mov
gs
xchg
pop
lock
jmp
roll
cs
ds
dec
cmp
ficomps
dec
jne
and
sbb
add
movsb
add
fcomps
and
insb
js
outsb
jns
test
call
adc
adc
jle
shl
scas
in
rcrb
or
sbb
addl
or
sbb
in
mov
inc
js
sbbb
into
jmp
pop
adc
subl
bound
dec
imul
mov
cwtl
mov
addl
shll
fcoms
dec
mov
call
xor
test
insl
inc
icebp
iret
in
xor
movsl
inc
dec
es
outsl
out
ds
lret
daa
mov
jge
mov
in
mov
sbb
cwtl
push
or
int
xlat
cmp
cs
mov
clc
mov
pushf
fimull
sbbl
inc
call
cmpsl
clc
mov
call
adc
or
lods
repz
addr16
mov
call
pop
inc
subl
lcall
fs
add
add
lods
mov
ret
dec
push
iret
or
push
call
out
xchg
cld
mov
cs
xchg
lret
clc
mov
adc
fsubrp
pop
dec
bnd
imul
outsb
mov
jns
jge
push
jg
pop
pop
cmpl
pusha
divl
repz
cmp
std
jmp
aam
sub
out
rcrb
shlb
sub
fstpt
inc
ljmp
sub
or
dec
jg
inc
push
mov
lea
or
insb
ljmp
mov
movb
dec
int
outsl
ja
cmp
adc
sub
test
loop
fs
pop
popa
imul
loope
or
cmp
ret
iret
mov
dec
pop
jle
dec
sub
les
xor
scas
or
jne
repnz
hlt
pop
add
outsb
and
pop
fsubs
xchg
adc
in
out
out
fucom
mov
adc
pop
mov
adc
mov
add
leave
das
jnp
inc
xor
inc
fs
lea
xchg
faddl
xor
xor
or
push
ja
stos
inc
leave
popf
mov
jle
popf
iret
pop
das
push
sti
dec
popa
stos
mov
inc
cltd
leave
inc
and
mov
cmpsl
sbb
sub
loope
add
mov
push
ret
in
push
aas
adc
mov
inc
fisubs
mov
adc
jns
das
addb
testb
and
dec
jle
sbb
xor
dec
lcall
mov
out
icebp
fiaddl
pop
test
ss
shll
mov
jo
ja
xchg
outsb
pusha
and
mov
daa
pop
dec
fcmovb
ss
fwait
adc
aad
fwait
cmp
xchg
rorl
shll
mov
inc
xchg
repz
ja
cmp
fstl
movsb
ja
dec
adc
inc
lret
imul
or
or
addb
movsl
mov
mov
inc
int3
xor
mov
les
cmp
ja
and
cli
call
push
test
inc
xchg
xchg
int3
stos
in
xor
mov
pop
sub
jbe
inc
repnz
pop
xor
mov
repnz
cmp
and
jecxz
ret
cli
shrb
push
inc
add
addr16
jb
scas
pop
sbb
inc
cs
mov
addb
xor
sbb
addl
xor
xchg
dec
pop
push
mov
adc
sbb
lcall
adc
or
fs
sarl
jmp
inc
sbb
push
add
enter
jns
jle,pt
les
movsl
pushf
mov
push
add
fwait
cs
or
or
popl
clc
sbb
cmp
xchg
and
cmpsl
xchg
pushf
fcomp
mov
pop
lods
jl
or
xchg
icebp
inc
fdivr
sbb
test
jb
add
pop
mov
cmpsb
lcall
sub
xor
add
mov
outsb
push
sbb
sbb
ud2
jmp
dec
pop
pop
std
aaa
mov
std
arpl
add
jle
movsl
mov
out
pop
les
dec
sub
xchg
cmp
leave
in
leave
insb
adc
loop
jns
popf
jnp
js
mov
insb
mov
in
jns
icebp
cli
or
adc
call
mov
mov
imul
mov
mov
and
pop
jge
add
xchg
das
dec
cmp
and
shll
push
lea
cmp
dec
ljmp
pop
out
ja
lret
cli
or
xor
jo
lods
rcrl
jg
ret
mov
test
xchg
sahf
pop
mov
or
out
xorl
popa
cltd
mov
add
leave
imul
pop
cmp
mov
js
fidivl
ljmp
push
mov
out
or
pop
or
cmp
cmp
loope
inc
lods
pop
cmp
test
call
fsubrl
wbinvd
inc
dec
enter
lret
adc
ljmp
test
adc
or
mov
lods
in
fisubrl
lret
dec
mov
pop
sub
jb
sbb
fdivrl
pop
jmp
push
cltd
pop
leave
movsl
stc
lods
popf
addr16
addr16
jge
aaa
mov
jp
shrb
data16
pop
add
mov
sbb
popa
sub
test
xor
add
ss
xlat
push
push
or
xchg
inc
fwait
jecxz
das
mov
shll
fdivl
and
movl
cmp
mov
es
or
je
dec
jp
cwtl
jae
nop
mov
stos
adc
dec
lock
shlb
div
add
mov
sbb
or
adc
xchg
pushf
cmp
loope
loope
pop
dec
fcomp
rcrb
cwtl
mov
cmp
fdivr
or
pop
push
sbb
jl
or
imul
xchg
lahf
rorb
push
inc
jns
jg
jno
call
lret
push
dec
cmovb
int3
out
out
flds
in
out
mov
push
or
inc
pop
xchg
mov
sbb
cld
test
jp
inc
dec
mov
add
or
out
inc
xor
xchg
in
fs
pop
mov
setnp
fldl
pop
push
jmp
push
sub
test
pusha
int
cwtl
xchg
fsub
adc
or
les
rcr
sbb
xor
in
mov
call
orl
and
stos
sti
movsl
ja
fadds
add
mov
cmpb
jg
or
sub
cmp
addl
and
push
rcr
adc
jo
mov
lods
inc
push
outsl
add
mov
mov
es
je
mov
pop
or
das
sbb
ja
int
in
sub
insl
jb
adc
gs
pop
sub
xor
out
lods
mov
pop
push
mov
push
in
cmc
inc
sar
dec
mov
sbb
andl
out
stos
push
mov
mov
dec
shlb
xor
xor
out
notl
pop
js
sub
push
pop
mov
add
pop
lods
add
mov
and
fiadds
iret
ss
jmp
cmpsl
aas
subb
inc
dec
or
cmp
or
xchg
mov
jbe
mov
stc
cli
sbbl
dec
mov
cld
bound
or
mov
sbbl
jne
mov
fldt
cld
cmp
mov
jns
jg
adc
sti
cmp
sarb
and
xchg
std
jl
and
xchg
testb
inc
ss
push
cmp
ficompl
cmp
sub
dec
mov
inc
aaa
dec
flds
lcall
xor
es
and
mov
fnstenv
xchg
shlb
cmp
or
popa
add
icebp
lret
or
push
je
mov
mov
cmp
flds
sbb
decl
sub
inc
dec
cld
aad
jae
sbb
inc
pop
dec
xor
push
mov
mov
jae
sti
out
fimuls
pop
fs
pop
stc
cmc
cmp
shrl
add
mov
push
test
ret
xor
xorb
jb
cmp
int3
add
dec
cmp
aam
adc
mov
add
xor
adc
ds
pop
sub
imul
stos
sub
clc
or
sbb
sbbb
sbb
mov
mov
scas
es
cltd
mov
stos
stos
hlt
sarl
and
sbb
or
nop
xchg
lods
xchg
or
or
and
shrl
inc
pop
mov
inc
mov
js
mov
and
pushf
fmull
inc
shlb
jb
push
ljmp
pop
lock
sub
loopne
test
outsl
in
outsb
add
into
xchg
inc
sbb
in
xchg
dec
lret
imul
push
and
mov
fsts
jae
fldcw
xchg
sbb
jmp
push
mov
add
loopne
movsl
loopne
in
sbb
mov
popa
add
sbb
roll
pop
sbb
fcomip
stc
jne
insl
jmp
insb
lods
or
jbe
add
and
js
inc
sub
pop
mov
pop
and
sbbl
aam
xchg
push
inc
stc
pop
icebp
adc
jge
andb
adc
push
dec
add
pop
jo
ljmp
je
mov
cmpsb
pop
icebp
push
pop
mov
dec
mov
xor
mov
fimuls
add
adc
mov
jb
xchg
jns
xor
adc
push
jne
push
sub
add
jecxz
adc
popf
pop
bound
imull
scas
imul
dec
push
push
loopne
insl
mov
nop
inc
sub
outsb
or
fxch
daa
inc
push
or
es
in
loope
pop
jge
mov
rorb
mov
scas
adc
push
sbb
mov
adc
lcall
scas
adc
xchg
xor
cmc
mov
lock
inc
mov
mov
jecxz
push
rcl
or
push
cld
nop
or
jmp
cltd
into
fst
lahf
mov
add
pusha
mov
repz
mov
ja
clc
mov
mov
bound
or
cli
test
pop
enter
pop
mov
scas
lock
loope
scas
sub
push
add
gs
aas
loope
pop
pushf
daa
insw
sub
lcall
les
pop
xor
je
popf
sti
inc
and
push
pop
push
icebp
sahf
xchg
pop
push
arpl
mov
mov
out
mov
out
bound
subb
loop
arpl
lret
cld
ret
cmp
enter
jnp
pop
fldt
out
pop
sbb
push
cmp
xchg
xor
in
mov
xchg
mov
int
jno
push
and
push
int
pusha
push
xor
cs
dec
or
aam
dec
mov
outsb
dec
ret
mov
dec
insb
inc
mov
inc
pop
jo
mov
cmp
out
inc
xor
daa
dec
or
jns
mov
outsl
dec
dec
imul
mov
int
cld
out
aaa
hlt
sbb
aaa
inc
stos
mov
ds
xchg
inc
cmpl
xor
jne
call
dec
mov
dec
repnz
test
popa
or
xor
repz
rorl
push
js
mov
sbb
push
and
cltd
cmp
es
inc
out
sti
or
sub
jo
sti
inc
fwait
iret
rclb
faddl
sbb
mov
test
rorl
iret
test
fcoms
cld
jns
dec
mov
jns
cld
xlat
xor
push
enter
mov
inc
xor
push
mov
xchg
or
lods
iret
jg
adc
mov
and
xchg
adc
in
idivb
push
xchg
pop
mov
push
pop
pop
aaa
mov
xor
mov
cld
or
and
dec
in
push
in
mov
lahf
mov
adc
jecxz
into
push
test
bound
adc
mov
xchg
jb
and
or
loope
dec
adc
mov
sarl
out
cmp
das
xor
icebp
jae
into
cwtl
loope
or
scas
lcall
cmpsl
pop
jmp
pop
lret
jns
popl
gs
jnp
pop
mov
xor
insl
fidivrl
add
adc
inc
jo
stc
gs
adc
pop
or
sub
into
mov
add
mov
push
jbe
movsl
sub
or
inc
sub
xchg
pop
aaa
test
push
out
loop
je
mov
enter
xor
add
enter
jo
add
sbb
mov
hlt
in
in
inc
pop
addr16
adc
lret
jmp
shr
push
inc
addr16
sbb
inc
dec
push
insl
xor
jb
sub
jge
cltd
fildll
movsl
popa
outsl
jmp
sub
mov
arpl
cmpsl
push
push
sub
xchg
icebp
stos
enter
mov
sbb
push
mov
int
xchg
scas
pop
push
mov
pop
push
fldenv
jg
jne
pushf
jge
cli
cmp
int3
jmp
cwtl
in
mov
outsl
fld
mov
and
inc
repz
test
add
loopne
adc
lea
mov
ja
lods
mov
add
xchg
cmp
pop
fsubs
xorb
imul
sub
mov
fldt
scas
mov
cmp
je
iret
repnz
out
out
jecxz
or
dec
and
jns
mov
mov
andl
xor
paddq
xor
mov
jnp
xchg
adc
hlt
ret
movsb
ja
popf
pop
inc
scas
imul
out
ja
mov
js
insb
cmp
lock
shrb
mov
imul
or
out
cmp
inc
sub
in
notl
cmp
or
xor
in
popa
jl
nop
pop
inc
add
cmp
pop
fadd
jge
or
shl
fldl
in
mov
dec
xor
cli
lret
je
sub
iret
stos
adc
out
loopne
cli
hlt
dec
insb
clc
pop
andb
pop
shlb
push
push
adcb
movsb
mov
aad
in
pop
lods
jecxz
push
mov
mov
imul
stos
bnd
rol
pop
cmp
dec
rcll
push
outsl
xchg
adc
and
push
test
imul
lcall
test
add
inc
cmpsl
jb
ret
cmp
pop
inc
fsubl
ljmp
and
les
push
std
mov
sbb
cmc
mov
cmpsb
push
mov
sarb
or
and
xlat
push
push
clc
out
mov
adc
jne
sub
iret
fs
lods
jl
sub
popf
test
sbb
mov
lcall
push
adc
xor
mov
pop
das
clc
in
pop
fldt
mov
stos
inc
or
repz
xchg
stos
jle
jmp
iret
lret
dec
pop
and
jmp
dec
jbe
notb
push
pop
or
push
or
ss
insb
ror
out
mov
in
shl
cld
fnstcw
dec
movsb
jns
call
xchg
jae
push
push
mov
xchg
pop
fisubl
subl
mov
mov
mov
mov
daa
cmp
out
ja
jp
and
push
inc
pop
or
imul
icebp
jmp
dec
add
and
addr16
loope
outsl
lods
mov
jbe
xchg
shll
add
sub
das
xor
inc
clc
pop
mov
inc
mov
in
sbb
xchg
jno
in
testl
add
add
cli
or
cltd
push
jge
sbb
int3
and
sub
or
lods
lds
fdivs
xor
push
jle
adc
xor
inc
les
lods
jg
jp
rcll
hlt
inc
test
push
lret
repnz
pop
out
mov
shll
mov
mov
mov
pop
fmull
dec
or
cmp
push
pushw
out
jg
popa
push
sub
pop
std
arpl
fdivs
adc
adc
orb
in
mov
test
add
cld
das
or
das
or
mov
pusha
cmpb
mov
fsubrl
lock
les
mov
scas
dec
fnstenv
adc
inc
xchg
sub
and
rorb
sub
sbb
cli
out
mov
arpl
inc
stos
mov
popf
jae
fistl
fs
arpl
sti
jo
data16
ja
jno
adc
push
push
dec
jbe
jnp
out
in
jmp
sbb
sbb
sbb
out
xchg
xchg
out
arpl
movsl
sub
mov
xor
mov
sahf
push
mov
jo
mov
xchg
xchg
or
and
sub
push
jge
mov
or
xchg
cwtl
xchg
sbb
negl
sbb
inc
dec
jno
pop
sbb
sub
insl
pop
stos
pop
inc
inc
out
cmp
dec
mov
jecxz
stos
jne
push
adc
add
mov
les
ror
push
cmp
stos
add
push
pop
lahf
hlt
inc
and
xor
ret
mov
add
adc
push
xchg
xor
push
lret
enter
push
or
push
call
mov
lock
leave
in
daa
and
dec
bndldx
roll
and
push
lods
pop
and
push
and
insl
daa
push
in
lea
mov
inc
cmpsl
inc
jmp
push
jle
std
repz
xor
inc
jg
xor
lret
pushf
adc
lcall
js
xchg
daa
mov
fwait
pusha
and
sti
rcll
mov
cmpsl
sbb
inc
push
dec
arpl
repnz
sub
cltd
pop
repz
sahf
subb
mov
adc
xchg
ret
lods
mov
dec
mov
xor
push
mov
inc
mov
icebp
xlat
sub
xchg
pop
adc
xor
xchg
loopne,pn
xchg
gs
cmp
and
loop
jle
cmpsb
mov
sub
pop
loopne
loope
notl
push
pop
dec
test
pop
xor
movsb
bound
lret
dec
icebp
jbe
cmpsl
mov
mov
ret
scas
xchg
and
mov
fs
aas
mov
inc
push
popa
je
cmp
lods
inc
adc
cld
jo
and
sbb
xor
adc
adc
in
lds
cmp
jmp
dec
inc
or
cmpsb
xor
mov
xchg
inc
or
cltd
and
mov
aas
icebp
add
push
dec
push
enter
push
sti
sbb
sub
pop
sbb
mov
inc
xor
lock
test
pop
jno
test
push
pop
sbb
sbb
ja
mov
cld
out
outsl
test
aaa
in
fadds
call
add
lret
cmp
sbb
mov
mov
mov
testb
roll
mov
imul
xchg
test
xchg
mov
dec
out
or
or
dec
outsw
hlt
iret
pop
jg
dec
xor
scas
ds
push
rcrl
or
cmp
cmpsl
loop
popa
and
orl
sbb
cmp
in
out
adc
xchg
sub
je
dec
aas
sbb
aas
mov
dec
bound
loop
aad
inc
repnz
dec
dec
mov
into
test
icebp
mov
int3
lods
int
or
mov
mov
js
stos
fidivrl
add
and
pop
jg
stos
sbb
push
or
inc
mov
sub
loop
cmp
sub
enter
test
sbb
shrb
test
lea
and
movsb
fldl
sbb
inc
sub
lret
jg
js
jmp
fwait
jno
sbb
mov
clc
sbb
popf
sub
mov
lea
cmpsl
repnz
imul
push
add
jbe
inc
push
xor
call
push
ljmp
jg
rolb
imul
cli
fstps
cmp
dec
ss
add
push
pushf
cmp
pop
jp
adc
pop
lret
lret
adc
test
pop
fnstenv
pop
push
popf
lock
mov
stos
xor
xor
or
dec
test
outsl
iret
sub
fsubl
mov
lret
loop
xchg
punpckhdq
stc
mov
aam
sub
sub
push
lea
mov
stc
push
scas
enter
loop
jbe
adc
xor
nop
push
shll
in
inc
repnz
jnp
clc
cmp
aaa
sbb
xor
xchg
xor
rcrl
sub
out
cli
xor
pop
push
insl
out
and
cli
cmp
rcrl
add
xchg
pushf
inc
je
mov
fsubp
imul
repnz
repz
pop
je
lods
mov
in
test
call
cmp
mov
add
test
fiadds
inc
add
and
push
xlat
or
cmp
int3
and
pop
dec
mov
mov
sub
mov
xchg
sbb
add
cmp
mov
cmp
pop
dec
jb
mov
xchg
bound
add
sbb
xor
iret
cmp
imul
shrb
jns
sub
sbb
xchg
xor
adc
daa
sub
jp
jp
insw
sub
ret
dec
xchg
inc
pop
mov
shr
sub
add
fdivr
or
sbb
clc
popf
sub
in
add
cs
sbb
popf
out
clc
gs
cmp
xorb
mov
cmp
sti
mov
insb
imul
xchg
sbb
rolb
cmc
sub
nop
sbb
js
and
mov
cwtl
jle
divl
mov
cwtl
nop
or
aam
mov
repz
ja
push
gs
outsl
mov
loopne
sbb
xchg
inc
inc
cld
pop
stc
jne
fwait
add
clc
out
popf
push
push
bound
cs
lock
push
aam
dec
in
dec
mov
pushf
adc
loop
mov
xor
stc
jmp
xchg
lahf
dec
mov
xchg
or
mov
repnz
popf
push
cmpsb
fmul
lret
lea
cwtl
inc
cltd
subl
sbb
lods
push
out
notb
test
ret
rorb
mov
inc
ss
mov
loop
ret
push
push
mov
addr16
out
and
add
vmulsd
xchg
ds
xchg
mov
idivl
xor
das
pop
sub
insl
hlt
enter
pop
ficompl
lods
jmp
mov
test
fs
rcll
push
jp
mov
sbb
adc
cmpsb
push
mov
sub
sbb
jg
cmpsl
or
pop
mov
pop
rorl
dec
fbld
fcomps
rcr
shlb
sbbb
ljmp
inc
out
sbb
dec
test
shr
es
test
xor
call
ljmp
mov
xchg
imul
cld
arpl
fimuls
popf
push
pop
pop
divb
mov
cmpl
xchg
pusha
mov
das
mov
adc
adc
mov
jle
popf
cli
jl
out
jle
mov
dec
jae
pop
cs
loope
push
add
mov
cwtl
push
mov
jno
push
mov
into
mov
stc
lcall
inc
stos
loop
insl
jne
inc
pop
pop
cs
sbb
pop
jmp
dec
lods
data16
sarb
jp
rorl
sti
inc
rcl
jmp
pusha
pop
into
aas
int3
and
scas
stos
cwtl
arpl
repz
into
adc
shlb
cmpsl
mov
movsb
adc
scas
jns
or
es
sub
xor
inc
adc
pop
cmp
add
loop
adc
inc
cli
ret
push
pop
cmpsb
cltd
jmp
int3
sbb
das
pop
mov
push
lock
fisttpll
pop
inc
pop
lret
sbb
inc
push
inc
fcompl
lds
sbb
not
xchg
and
mov
and
mov
int
mov
inc
and
cmpsb
mov
cmpsl
movsl
inc
jae
movsb
xchg
mov
jns
je
xor
nop
dec
aad
std
xchg
sahf
mov
scas
push
sahf
sbb
insl
pop
arpl
rcl
xor
mov
lret
add
cmpb
scas
repz
addl
fdivr
dec
inc
decl
cmp
lret
jae
inc
inc
enter
adc
push
and
jno
sub
jmp
lds
mov
add
test
jae
lock
push
dec
cltd
inc
cmpsl
bound
rcr
cmp
push
ss
push
xorl
sbb
add
addr16
dec
sub
pop
sub
jno
ret
push
insl
movsb
loop
cmp
pslld
aaa
and
pop
mov
lds
add
js
fsubs
fbstp
shr
xchg
and
mov
rolb
rcrb
test
aaa
int
inc
pop
mov
and
inc
fsubr
ret
mov
and
or
test
sbb
push
pop
icebp
loopne
cmpsl
js
shll
add
dec
popa
pop
adc
xor
xchg
ret
dec
loope
sub
jae
and
lds
or
or
sub
add
shrl
fbstp
inc
ds
mov
cmp
dec
pop
bound
bound
in
es
movsl
cmp
mov
fistpl
mov
jge
bound
es
add
mov
imul
sub
pop
cmp
subb
or
fnsave
mov
adc
popf
mov
and
mul
std
pop
in
stc
mov
mov
jno
pop
mov
sbb
sbb
and
cmp
movsl
cld
movsb
jnp
stc
xchg
jecxz
insb
lahf
fsubr
aad
loop
sbb
cmc
in
push
mov
ljmp
icebp
pop
lret
xor
addr16
jne
or
mov
movsb
rdpmc
repz
pop
loop
in
fsubrl
xchg
fst
adc
pusha
pop
mov
push
leave
mov
mov
pop
sbb
sub
loopne
sahf
xchg
xor
addr16
dec
enter
adc
mov
cld
lret
aas
xor
mov
pop
fcoml
and
test
sub
jae
in
sub
push
inc
push
push
stos
pop
xor
pop
xchg
int
jb
fidivrs
negl
jecxz
mov
popf
movsb
jb
incl
sub
xor
push
lock
cmp
ss
test
lret
mov
hlt
faddp
sbb
jo
mov
inc
jne
lock
xchg
ss
sub
jle
adc
lds
aad
lret
xchg
jl
jl
rcrb
dec
out
hlt
sbb
icebp
or
imul
ret
outsl
sbb
cmpsl
and
movb
in
cli
fmull
fistps
and
mov
pop
jmp
into
cld
lcall
pop
insb
popf
ds
es
out
and
add
mov
imull
mov
enter
xor
decl
in
jo
popf
adc
lock
mov
cmpl
fstl
popa
sbb
cmp
andb
test
mov
cmp
fwait
xchg
fldt
sub
push
push
mov
pop
inc
leave
xchg
daa
sbb
sbb
lods
sarb
mov
push
and
mov
xlat
xchg
inc
push
push
add
pusha
popf
insb
mov
adc
shrb
cmp
fisttpl
push
popa
sarl
pop
popf
cmp
out
push
push
pushf
lods
das
push
rol
das
fwait
add
insl
int3
stos
sbb
fadds
mov
movsb
push
aaa
stc
push
jnp
jne
std
add
ljmp
mov
push
sbb
jle
fidivrl
sbb
ret
iret
test
int3
inc
xchg
mov
jns
cmpb
pop
sub
scas
sub
sbb
pop
sub
xor
shlb
mov
cmp
mov
dec
ret
or
jno
cmp
int3
iret
jg
pop
popl
ja
adc
pop
inc
sbb
mov
mov
cmpsb
testl
and
out
movsb
shrb
icebp
rorb
xorb
scas
pop
xchg
xor
pop
add
mov
and
ds
inc
push
jmp
insl
xchg
or
in
mov
sub
lahf
aas
je
loope
pop
inc
ret
fldenv
jmp
add
sbb
int
stos
push
fdivs
clc
push
ss
cld
loop
cmp
ja
sbb
movsl
ret
inc
and
add
sarl
loop
dec
loopne
stos
push
push
pop
push
loop
cwtl
add
jno
in
mov
stc
popf
mov
cs
aam
in
aas
fmuls
mov
inc
xor
dec
scas
sbbl
add
pusha
adc
jecxz
addr16
sub
ljmp
pop
mov
out
jb
mov
mov
fdivl
mov
aaa
xchg
sbbl
cmp
mov
sbb
nop
clc
mov
mov
inc
subb
push
outsb
and
mov
fcoml
cltd
xchg
fwait
mov
gs
pop
pop
cmp
call
lcall
call
dec
and
inc
dec
sahf
inc
lahf
sub
push
adc
out
mov
mov
fildll
orb
je
sbb
sti
or
dec
add
in
jne
repnz
ja
negb
loope
inc
ljmp
pop
add
jno
push
js
mov
mov
hlt
dec
addr16
jnp
fst
mov
sbb
mov
xchg
add
xchg
mov
xchg
mov
cli
pop
cmp
xlat
sbb
cmpsb
js
xchg
inc
aad
imul
js
sub
into
icebp
dec
mov
dec
mov
jge
imul
loope
loop
adc
fmull
popa
push
in
inc
hlt
fdivs
xor
push
mov
jge
pop
decl
xchg
dec
adc
imul
dec
jg
fprem
hlt
aaa
mov
sahf
mov
mov
xor
xchg
xchg
adc
dec
lock
sub
mov
xlat
dec
push
ja
and
adc
aas
pop
inc
mov
insl
and
mov
jno
int3
lcall
and
pop
fistps
jle
fldcw
mov
test
pop
imul
pop
bound
or
xchg
mov
mov
pop
mov
aad
mov
pop
inc
mov
sub
add
outsb
jb
push
insl
adc
and
hlt
enter
aam
rcll
mov
mov
or
push
xchg
mov
add
mov
bound
or
leave
ljmp
aaa
fbld
arpl
xor
push
inc
test
in
xor
lea
cmp
pop
and
fldenv
mov
mov
das
inc
or
mov
shll
mov
jp
push
mov
or
push
scas
xlat
loopne
fsubs
mov
adc
adc
ds
pop
xchg
sub
lret
ss
lods
xchg
pop
xchg
xor
inc
dec
and
add
es
xchg
filds
mov
push
and
jns
in
and
andl
push
jecxz,pn
pop
sti
mov
ret
dec
sub
dec
fildl
mov
inc
mov
and
lcall
cmp
rolb
pop
sub
mov
fs
mov
jo
rclb
jae
jle
pop
movsb
dec
aas
mov
vmovaps
arpl
cli
out
rolb
xor
cmp
loop
and
cmp
push
into
sub
ret
cld
rclb
dec
pusha
stc
jl
and
ret
dec
fiadds
pop
fldenv
into
xchg
push
popa
sbb
mov
and
push
outsl
call
xor
inc
jp
ret
call
jl
dec
je
sub
clc
mov
sar
subl
rcrl
jecxz
movsb
pop
mov
in
or
dec
sbb
daa
jmp
insl
add
out
xorb
fisttpl
rcll
jae
loop
stos
in
xor
out
or
sbb
lock
fsubr
xchg
xlat
mov
push
push
mov
jne
mov
sbb
mov
mov
mov
in
repnz
scas
sbb
imul
test
je
ja
leave
add
push
add
stc
imul
inc
ljmp
xchg
xlat
sbb
xchg
jp
mov
mov
aaa
xlat
mull
jg
stc
mov
mov
dec
jns
mov
lret
add
mov
mov
lret
jns
out
mov
fistpl
xchg
mov
pop
fsubr
aam
push
pusha
mov
push
bound
push
ja
sub
fldenv
aam
test
pop
push
enter
mov
xor
dec
dec
jae
daa
xor
aam
and
sti
jne
mov
mov
ret
add
xor
movsb
pop
or
incl
cmp
test
filds
hlt
into
jbe
mov
or
adc
jg
icebp
push
addr16
movhps
stc
cmp
dec
in
xchg
push
or
mov
aam
cmpsb
out
push
ds
push
add
mov
mov
xor
adc
sub
mov
mov
dec
inc
jle
subl
dec
and
lea
jle
lret
in
or
out
insb
outsl
icebp
aad
jmp
pop
or
aas
sbb
sbb
xchg
mov
gs
sarb
lret
int
je
or
add
sbb
lods
jl
ror
or
jecxz
push
mov
cmpsl
sub
jo
jl
fcomi
mov
test
icebp
lahf
out
pop
adc
dec
insb
negl
or
inc
inc
mov
add
cwtl
jno
xchg
inc
cmp
sbb
xchg
adc
adc
mov
push
cwtl
mov
pop
dec
push
jecxz
es
push
cmp
cmpl
jae
pop
enter
push
or
fbld
cmp
sbb
push
lret
sub
stos
mov
mov
xchg
mov
or
sub
adc
inc
negl
shl
lods
sub
jns
icebp
sbb
sbb
lods
inc
pop
and
push
cmp
cmp
sub
dec
mov
mov
dec
and
sub
inc
pop
outsl
add
and
cmp
add
jno
adc
dec
mov
pop
or
leave
test
dec
adc
imul
push
cwtl
xchg
jp
dec
xor
lods
pop
pop
ds
sub
lods
or
jl
pop
clc
subb
cwtl
fwait
lods
shrl
pop
sbb
ret
cmp
inc
in
fs
xchg
dec
mov
sbb
int
sub
and
xor
xor
jne
mov
dec
mov
je
imul
inc
inc
xchg
sub
lock
lods
mov
jg
xor
jmp
adc
pop
add
call
xor
mov
imul
les
in
lds
mov
push
xchg
dec
icebp
push
imul
mov
xchg
dec
nop
inc
aas
mov
fsubrs
push
lret
push
notb
repz
dec
jae
pop
mov
jne
sbb
ds
stos
cmpl
insb
mov
inc
bound
adc
filds
sahf
mov
add
push
leave
and
sbb
iret
data16
mov
inc
xchg
fistpll
pushl
call
fwait
test
push
xor
jmp
loopne
xlat
aas
inc
es
int3
aam
jp
test
jne
notb
pop
in
xchg
in
fs
arpl
ret
and
cli
and
mov
cld
addl
cmp
or
push
jg
mov
mov
into
inc
int3
jl
je
push
mov
push
pop
loope
lods
inc
out
mov
loopne
iret
bound
sub
or
adc
sbb
xor
cmp
jle
xchg
sbbl
xchg
imul
arpl
fcom
dec
into
push
test
imul
sbb
xor
push
or
enter
insb
push
ret
fldcw
scas
cmp
cmc
add
test
pop
xor
mov
and
fs
aam
sub
jne
in
mov
sarl
inc
push
mov
frstor
js
jns
hlt
out
jge
add
lret
in
inc
lcall
fisubl
ds
cmp
outsb
stc
imull
je
inc
gs
sbb
sbb
xchg
inc
mov
jnp
imul
mov
mov
nop
gs
popa
cmp
icebp
pop
out
sub
fsub
mov
pop
or
xor
mov
xchg
insb
xchg
aas
jnp
mov
push
movsb
or
int3
pop
jbe
or
decl
pop
push
jb
push
dec
int3
push
cld
jl
adc
push
jge
fs
shrb
mov
jp
sbb
mov
cld
ljmp
leave
insb
shrb
sbb
push
sub
xor
mov
aam
cmpsb
mov
pop
mov
adc
jg
push
icebp
pushf
cmp
pop
mov
nop
fnstcw
push
imul
es
xchg
repz
mov
jae
and
xchg
xchg
pop
test
lret
or
sarb
add
cmpsl
mov
ljmp
sbb
int3
cmpsl
data16
lds
mov
mov
test
js
lds
pop
cli
scas
lcall
push
xchg
and
sbb
push
test
gs
dec
pushf
sbb
adc
clc
dec
pop
and
sbb
std
psllq
popa
ret
and
cwtl
ss
mov
add
jg
mov
test
fsts
loope
or
loope
dec
rorl
pop
addr16
adc
add
dec
icebp
out
mov
mov
jge
and
int
jns
push
pop
sub
or
fs
mov
push
fsubrl
inc
lods
push
jnp
push
mov
dec
sbb
subb
xchg
loope
cltd
ficoms
mov
pop
xor
xlat
inc
cmp
scas
imulb
cmpsb
ljmp
jbe
sbb
xor
jb
cmc
add
insl
into
adc
test
pop
roll
mov
pop
sbb
push
pop
xchg
xorb
jmp
dec
lret
add
xchg
loopne
fnstcw
pop
and
xchg
sbb
add
jmp
jno
test
and
fnstcw
in
inc
mov
jno
jo,pn
cmp
mov
pop
cmp
hlt
push
fsub
pop
pop
movsb
cmpsl
pop
int
mov
movsb
pop
xchg
ljmp
in
or
pop
test
outsl
dec
stos
sub
lods
xor
data16
and
in
xor
jg
inc
bound
pop
fiaddl
xchg
dec
fistpll
iret
fldenv
mov
adc
push
call
jae
ret
and
sbb
in
loop
repz
sahf
add
les
cli
mov
xor
jmp
mov
mov
pop
hlt
sbb
fwait
das
push
movsb
std
and
enter
lcall
lds
push
mov
int
xchg
in
or
and
xor
ds
adc
jo
xorb
xor
sti
insl
in
out
out
fildll
push
inc
jnp
arpl
pop
sbb
lods
pop
cmpsb
loope
mov
dec
pusha
fiaddl
fidivrl
sbb
cmp
out
sbb
mov
sub
scas
mov
or
cmc
mov
push
adc
fcoms
arpl
adc
xchg
push
sti
mov
repz
push
and
out
xchg
cld
add
out
or
scas
scas
and
mov
daa
mov
cmp
rcr
sub
ficoms
inc
adc
popa
adc
sahf
cmc
imul
out
scas
testl
cmp
pop
repnz
mov
xor
test
xchg
int3
dec
push
testb
adc
mov
ret
cmp
push
int3
push
fs
mov
mov
sbb
sti
mov
inc
jns
sub
or
jg
out
cmp
cmp
cmp
pop
pop
jns
inc
jae
or
jmp
mov
add
hlt
mov
fisubrl
adc
insb
add
int
jl
sbb
out
pop
inc
push
push
inc
stos
sbb
cmpb
mov
lds
jns
fdivr
inc
in
shrl
fadd
add
inc
inc
mov
sub
filds
cmpb
lcall
xchg
insl
insl
mov
popf
stc
pop
fs
mov
sub
fsubrs
mov
in
fists
sub
inc
mov
mov
push
mulb
sbb
mov
mov
dec
dec
rcr
cli
sbb
sub
mov
insl
push
pop
sbb
icebp
xchg
movsb
nop
arpl
sbb
loopne
xchg
mov
cmp
xchg
inc
icebp
pop
std
jbe
ret
mov
cli
int3
mov
stos
push
movsb
lds
pushf
xchg
cwtl
aaa
jns
xor
and
cmpb
clc
lods
pop
ljmp
inc
stos
push
xchg
lods
mov
mov
mov
sub
jle
addr16
stos
sbb
sar
cmp
ret
aas
mov
pop
mov
add
cmp
sub
mov
xchg
frstor
ret
jecxz
adc
mulb
pop
insl
pop
test
test
push
cld
test
repz
sti
lock
adc
pop
clc
aas
mov
mov
cmp
fnstsw
lret
adc
sbb
out
mov
jl
das
daa
xchg
insb
arpl
xorl
mov
inc
pop
mov
pop
bound
xchg
inc
push
pop
repz
loopne
arpl
icebp
or
push
jae
into
xchg
dec
test
inc
inc
sub
ss
xchg
insl
push
sbb
jl
cmp
pop
insb
pop
adc
outsb
test
cwtl
enter
fs
loop
enter
lods
pop
jb
cld
xchg
add
add
in
dec
fcomps
sub
mov
mov
mov
lahf
sbbb
inc
inc
loopne
sbb
aad
stos
mov
mov
xor
ljmp
sbb
mov
lahf
repz
mov
sub
push
mov
aad
js
scas
idiv
sahf
dec
decb
adc
sub
sahf
inc
in
movsb
xchg
negl
adc
bound
pop
push
ret
fmull
dec
imul
adc
lahf
hlt
outsl
leave
push
lods
aad
nop
mov
movsl
outsl
mov
lcall
jg
inc
inc
xor
dec
sahf
dec
ja
mov
jge
pop
js
insl
fisubrs
cmp
and
mov
xor
adc
loope,pt
mov
movsb
and
stos
xlat
xor
std
push
xorb
test
sbb
mull
jns
push
shl
pop
xchg
mov
jns
jmp
mov
add
jecxz
inc
xor
push
pop
out
jl
inc
dec
sub
jp
aam
sub
das
mov
test
push
movsb
or
imul
nop
inc
dec
xor
lcall
mov
mov
outsl
sbb
in
lods
inc
adc
int3
shll
sbb
in
mov
push
ret
push
icebp
out
xor
xor
xor
cs
jecxz
fcoms
in
inc
or
rolb
xchg
pop
add
mov
stos
xchg
push
lods
xchg
lds
xor
sub
push
xchg
js
mov
lods
inc
jns
dec
bound
xlat
xchg
imul
lcall
jo,pn
adc
pop
lahf
lahf
fcoml
pop
test
arpl
mov
xchg
xchg
sbb
mov
lods
adc
jecxz
and
xor
lret
mov
fidivrl
out
inc
adc
pop
pushf
filds
and
cltd
cmp
jno
xor
add
ss
imul
outsl
mov
stos
sub
jae
push
sbb
mov
leave
rcl
and
in
mov
mov
add
jecxz
insb
sbb
cmp
dec
aas
cmc
jmp
aam
cli
or
sub
movsb
scas
mov
iret
mov
dec
lods
xlat
aad
push
or
les
mov
mov
mov
dec
xchg
out
in
loopne
pop
xchg
jecxz
cmpsb
fsts
xor
push
sub
inc
repz
lock
cli
enter
push
push
xchg
mov
jns
mov
shl
add
lea
add
cwtl
bound
loop
scas
popa
jae
sbb
jns
cwtl
mulb
ficompl
and
jg
sbb
push
aam
xchg
adc
lahf
notb
mov
pop
popf
pop
cmp
jo
in
push
pushf
cmc
jae
sub
push
or
cmc
in
and
inc
ja
aas
mov
lret
pop
push
idiv
decb
aam
and
cltd
ljmp
sbb
fs
cmp
jae
inc
mov
cmpsl
testl
int
xor
mov
pop
je
clc
push
cmpsb
ret
sub
mov
mov
dec
xchg
dec
cwtl
dec
clc
add
ret
clc
xchg
pop
loope
inc
fwait
dec
dec
repz
mov
sbb
rcrl
jae
aaa
sbb
mov
jbe
fsubrl
or
xchg
sbb
mov
add
jne
jg
shl
fiaddl
add
sbb
adc
loope
jmp
roll
cltd
sbb
push
and
ss
inc
or
icebp
mov
pop
sub
pop
in
sub
cmpsb
push
sub
xchg
or
rorb
out
les
cld
xor
in
fcoml
push
adc
sub
xor
testb
inc
push
xor
push
fbstp
xor
sub
pop
sbb
aaa
cmp
jp
xor
pop
xor
or
pop
leave
adc
cli
mov
pop
out
cmc
sub
out
clc
jbe
test
xchg
pop
xor
mov
jo
pop
cmpsb
call
push
add
int
add
adcb
push
mov
and
mov
mov
loop
jp
pop
scas
sbb
xchg
popf
movsl
add
lds
xchg
lea
rcrb
pop
mov
sub
xchg
xchg
sub
pusha
mov
gs
add
dec
mov
mov
jp
pop
cmp
je
mov
xor
push
cltd
mov
out
cmp
cmpsb
bound
xchg
cwtl
ss
out
push
cld
dec
arpl
jge,pt
or
ljmp
mov
ljmp
mov
incl
or
or
xor
in
xchg
pop
lret
rcl
fs
idivb
shl
dec
push
xlat
mov
loopne
int3
and
sarl
xor
jbe
mov
push
aas
shrl
and
aaa
out
mov
jecxz
push
lods
sub
inc
inc
jnp
rcrl
sti
stc
call
rolb
clc
cmpsl
cmp
ret
mov
lea
inc
add
ja
loopne
cmpsb
push
xchg
pop
mov
or
xlat
cwtl
sub
test
cmpsl
loope
fdivrs
or
imul
sahf
adc
inc
subl
add
repnz
rorb
push
sbbl
dec
cmp
loop
or
jmp
fnstsw
mov
fld
movsl
and
pusha
xorb
loope
pop
adcb
sbb
or
pop
add
shr
mov
dec
inc
test
aam
adc
call
add
fimull
cmp
push
nop
dec
jmp
cmc
inc
push
mov
roll
out
movsl
outsl
and
addr16
cmp
insb
mov
mov
das
inc
clc
test
js
and
jbe
movsl
test
stos
inc
sub
cld
pop
mov
dec
xchg
fstp
rcll
pushf
push
outsb
xlat
mov
mov
insl
jp
aas
addl
imul
jmp
aaa
lock
in
wbinvd
test
sub
jge
xor
nop
bound
dec
dec
shr
adc
and
out
mov
mov
in
fs
and
xor
movsl
jo
pop
hlt
cmp
inc
cmpsb
jb
repnz
lret
add
xchg
pop
scas
outsb
cmpl
jb
js
out
pushf
push
adc
and
bnd
add
les
in
fldt
push
inc
popf
loopne
jmp
out
pushf
bound
sub
push
dec
jg
popf
sub
gs
and
enter
jecxz
jae
std
in
loope
nop
mov
lods
mov
lock
push
mov
and
xchg
xchg
add
xor
popa
mov
mov
hlt
cmp
incl
dec
xchg
test
int3
leave
cmp
dec
xor
mov
iret
sub
ds
cld
pusha
fstpl
push
xchg
mov
or
test
push
call
hlt
inc
ljmp
gs
dec
inc
rolb
mov
mov
call
daa
testb
rcll
test
in
test
arpl
hlt
andb
or
jl
test
add
push
inc
cs
dec
adc
xchg
in
cmp
or
push
dec
js
mov
addr16
ss
lcall
icebp
mov
sub
inc
lea
les
push
fdivrs
rorl
mov
clc
cmp
mov
and
dec
adc
jge
rcr
mov
sbbl
sub
adc
pop
movsl
mov
pop
fbld
push
jae
lock
cmp
xchg
mov
andl
std
sbb
inc
mov
push
xchg
mov
aad
jne
bound
in
pop
lods
sti
mov
fisubs
sbb
and
push
insl
rcrl
dec
mov
or
enter
mov
or
mov
test
jnp
imul
xor
or
mov
adc
popa
cmp
rclb
scas
sub
insb
jo
and
movsl
cwtl
lret
and
sti
cmp
rcrl
cmp
inc
popa
fildll
or
add
iret
mov
jg
mov
mov
xor
loopne
mov
xorl
shr
pop
sbb
daa
test
je
loope
fisubs
xor
mov
sbb
xor
pop
out
or
test
mov
mov
xchg
shl
repnz
adc
mov
and
pop
in
fsubrl
mov
jl
addr16
push
dec
sub
or
js
cmpsb
mov
movsb
mov
xchg
add
jmp
sbb
add
ficompl
ficoms
int
sub
inc
lock
loope
and
aaa
mov
out
or
mov
cltd
int3
lret
dec
push
mov
add
inc
mov
pop
lret
ror
pushf
pop
mov
jl
mov
jmp
repnz
cmp
push
mov
test
push
push
negb
sub
test
jle
fistpll
mov
lahf
or
mov
out
addr16
mov
test
add
mov
xchg
jg
out
cmc
add
push
add
pushf
jno
loopne
mov
pop
and
xchg
lret
dec
cmp
pop
sbb
call
out
orl
push
addr16
adc
stc
push
push
mov
pop
test
mov
or
incb
mov
or
xchg
push
jne
sahf
scas
pop
clc
ret
push
jge
push
fstpt
mov
sub
in
push
xchg
pop
icebp
jge
cmp
imul
and
xor
fwait
mov
ds
lds
int
jp
nop
sbb
push
sub
mov
dec
pop
loope
cmpb
call
ret
and
cmp
ffreep
repnz
repnz
or
jns
xor
dec
pop
lock
call
nop
pop
mov
jnp
cld
mov
jne
sub
fidivl
test
nop
xor
fwait
ds
ret
les
dec
sahf
sub
sbb
mov
addr16
xchg
mov
and
mov
dec
jecxz
mov
ljmp
jl
clc
setno
push
rclb
push
clc
or
loopne
sub
mov
imul
mov
push
in
mov
test
xor
inc
fmul
adc
cmc
gs
insl
insb
adc
popf
and
popf
out
push
mov
ror
adc
push
in
outsl
cmp
adc
sub
jbe
jg
jnp
adc
cwtl
sub
movb
and
dec
cmp
sbb
ret
test
mov
mov
mov
mov
mov
pop
mov
jns
lods
push
clc
sbb
les
ja
and
push
test
loope
inc
test
fwait
push
inc
aas
mov
jae
ss
setae
ret
cmp
stos
push
xor
mov
pop
into
std
and
movsb
fwait
pop
and
jns
in
cli
in
pushf
adc
iret
in
rclb
cs
adc
and
lds
push
repnz
ret
add
xor
fcom
cmc
mov
aam
pop
add
pop
paddb
in
xchg
cmpsb
mov
aaa
add
shll
mov
push
cli
xor
test
out
push
fnstenv
dec
adcl
mov
in
dec
lea
pusha
or
icebp
stos
mov
and
mov
sbb
arpl
jns
les
adc
sbb
std
int3
lret
xchg
orb
inc
mov
jle
das
out
mov
xor
test
jnp
loopne
daa
mov
sahf
insl
lret
lcall
adc
in
pop
fwait
mov
mov
pop
or
dec
xchg
inc
fcoml
and
xchg
jecxz
mov
xchg
mov
out
dec
mov
push
xor
xchg
cmpsb
push
in
xorl
xlat
repz
and
mov
sbb
cmpsl
cs
sbb
and
mov
int3
jmp
dec
mov
orl
aam
jbe
aam
lods
lahf
mov
aad
out
sub
xchg
add
inc
gs
leave
jle
ja
pop
push
ja
lahf
push
jecxz
mov
mov
stc
in
xchg
jg
lret
dec
lcall
rcl
mov
aaa
arpl
inc
jbe
test
stos
gs
cli
stos
xorb
pop
dec
mov
push
cmpsl
push
daa
jle
scas
dec
push
mov
sarl
es
mov
or
or
insl
cmpl
mov
lcall
jae
mov
lret
or
adc
inc
xchg
sbb
push
out
push
inc
movsl
cld
sbb
into
and
xchg
jmp
xor
pushw
dec
cld
dec
jae
stos
push
and
mov
sbb
cmp
aas
stc
mov
mov
or
mov
and
arpl
or
push
int
loope
cmp
mov
sbb
adc
subb
shrb
rcll
jbe
int3
mov
xor
movl
xor
push
dec
inc
aam
add
adc
xchg
test
sahf
repnz
js
addr16
sbb
fwait
xchg
xchg
cmp
ret
add
lds
arpl
je
es
mov
jnp
inc
sub
popa
dec
ja
sub
mov
cmp
stos
push
lret
clc
dec
cmc
lock
addr16
xlat
fstpl
cmpsb
test
pusha
mov
push
mov
testl
aad
inc
xchg
pop
enter
fildl
mov
out
test
push
movsl
es
xchg
mov
in
fiadds
sub
push
dec
jg
jl
out
inc
xchg
xor
and
aaa
cmp
mov
test
mov
cs
sub
xchg
pop
jb
incl
add
mov
out
sub
xlat
lret
les
dec
xor
call
push
push
dec
mov
loope
fisubl
mov
je
movsb
mov
out
jb
out
divb
or
nop
add
sub
sbb
mov
add
jno
push
fbld
lret
imul
cmc
out
jnp
jp
push
insb
inc
popl
scas
jmp
imul
aas
mov
sbb
adc
xchg
out
jbe
test
loop
mov
jg
push
pop
cmpsb
adc
adc
jo
shlb
popf
cmpb
and
cmpsb
hlt
lea
cld
and
push
xor
outsl
imul
loope
pop
dec
lods
leave
in
popf
adc
je
push
dec
xchg
sahf
aas
cmpsl
pop
dec
xor
pop
sub
mov
into
test
jb
gs
add
mov
in
fsubrl
push
jecxz
pop
xor
aam
repz
jl
fwait
jl
int3
enter
mov
inc
mov
push
mov
jno
loope
fdivrs
xchg
or
aam
cmc
adc
insb
mov
int
imul
mov
jp
mov
inc
lret
lcall
or
icebp
adc
fisubrs
inc
fnstsw
leave
jg
test
movsb
cmp
int
mov
lret
sbb
xchg
jb
mov
jae
mov
js
aad
shll
not
pop
xchg
mov
adc
movsb
lret
push
js
stos
push
or
pop
mov
daa
cs
sub
push
daa
mov
adc
mov
test
cmp
ret
inc
xchg
mov
mov
mov
mov
cmc
and
mov
sbb
in
jns
movsl
popf
jo
scas
mov
call
push
pop
push
mov
std
mov
fwait
push
scas
and
cld
pop
xor
mov
fbld
pop
loope
mov
call
das
mov
loop
repnz
aaa
pop
cmc
push
rcrb
data16
inc
jg
mov
ret
out
cmpsl
dec
pop
sub
adc
mov
jecxz
lahf
adcb
dec
mov
leave
fistps
add
xlat
jnp
js,pt
bound
test
jl
jnp
in
aam
divb
xor
jnp
jnp
pop
int3
or
ret
mov
or
and
rcr
push
and
aaa
mov
enter
cwtl
xor
aaa
cld
add
inc
dec
and
incl
les
out
inc
in
std
xchg
call
pop
mov
mov
pop
cmp
mov
pop
xor
aaa
enter
or
out
xor
adc
xchg
movsl
and
lods
dec
add
bound
cmp
std
mov
cmpsl
mov
push
or
push
xchg
cld
repnz
imul
add
add
out
hlt
insb
mov
stos
pop
jge
fnstsw
insl
xor
imul
sahf
dec
sbb
outsl
test
call
into
dec
test
je
ror
xchg
cld
jecxz
sub
or
mov
test
out
mov
jl
mov
imul
dec
stos
shll
ret
mov
call
ss
pop
ljmp
test
insb
push
addr16
bound
adc
add
ret
test
stos
shrb
mov
add
push
imul
hlt
mov
in
xchg
mov
and
xor
jle
in
movsl
jae
fisubs
mov
ss
pop
test
xchg
adc
sub
push
mov
test
popf
mov
test
push
in
mov
popa
inc
adc
cmp
scas
lcall
insl
sub
and
dec
jle
mov
imul
add
or
xchg
inc
xor
push
adc
roll
pop
sub
mov
and
cmp
xor
mov
insl
xchg
add
call
mov
loop
sub
pop
push
dec
add
xchg
enter
cmpsl
mov
movsl
cmc
clc
adc
test
bound
pop
add
xchg
sbb
or
rcr
stc
addl
jge
inc
jg
dec
pushf
adc
mov
mov
dec
aas
jge
push
je
lds
sub
cmpsl
dec
mov
pop
aas
lcall
push
repnz
or
test
mov
inc
mov
negb
push
cwtl
inc
sbb
cmp
add
sub
dec
cmp
mov
cmp
mov
icebp
hlt
rorb
jno
inc
push
stos
fbstp
push
insl
xchg
jp
mov
test
cmp
xor
xor
pop
mov
addr16
loope
xor
fs
jb
out
pop
jecxz
stc
insb
je
push
int
push
xchg
and
xor
and
repz
cli
inc
cs
add
arpl
push
bound
pop
sbb
out
lcall
test
scas
add
aad
push
es
lods
jle
shlb
lcall
push
shr
cwtd
ficompl
repz
mov
ja
pushf
cmp
and
add
inc
sub
lret
push
and
rcr
and
mov
add
in
xchg
xor
ret
cld
sub
in
mov
xchg
and
cwtl
scas
sub
pop
cltd
dec
popa
aaa
btr
cmc
sahf
iret
mov
rcrl
add
mov
xor
mov
int
dec
fsubl
push
fwait
pusha
add
aaa
popa
inc
call
sub
test
sarb
pop
mov
sbb
dec
xchg
mov
out
popa
pop
stos
popf
mov
sub
pop
int3
add
mov
inc
repz
mov
xchg
out
in
cmc
jbe
nop
mov
push
mov
pop
xor
jno
arpl
popf
sti
mov
sub
cs
lahf
cs
cmp
jl
test
sub
dec
insl
rcr
clc
add
add
mov
xchg
dec
mov
xchg
jae
in
push
push
inc
mov
inc
dec
cwtl
inc
cmp
push
mov
push
push
adc
adc
mov
or
pop
xlat
jp
sahf
mov
out
outsb
dec
aas
das
push
sbb
pop
mov
fadds
popa
jb
dec
mov
and
pop
filds
mov
jmp
lock
test
sbbl
mov
outsb
lock
dec
popa
pop
jle
mov
mov
add
leave
or
push
rclb
loope
mov
sbb
es
jo
jbe
mov
sub
les
mov
mov
mov
add
je
cmpsl
ret
mulb
in
lods
push
or
les
pop
dec
mov
test
pop
out
and
push
sub
jl
xlat
sub
cli
pop
stc
dec
jae
mov
sbb
and
and
insb
je
leave
mov
xchg
push
jmp
addl
std
and
push
idivb
push
loop
push
movl
adc
pop
test
cmp
mov
xor
add
adc
loopne
pop
rcrb
clc
scas
ljmp
add
xor
js
push
jb
adcb
ljmp
sbbl
push
js,pn
xchg
cmc
sahf
cmp
repz
jp
jbe
loopne
mov
ljmp
pop
xorl
dec
enter
xorb
inc
dec
aam
sub
jl
cmp
mov
cmpsl
loopne
jmp
push
jl
ret
and
out
cltd
mov
jne
cwtl
or
add
mov
es
popf
rorb
sub
decb
iret
adc
jmp
mov
push
rcll
push
add
dec
mov
mov
mov
fs
pop
test
and
mov
dec
sbb
sbb
pop
xlat
inc
mov
fnstcw
int3
add
push
fsubrp
push
jmp
lock
pop
or
jb
inc
push
mov
repnz
aam
outsb
gs
ficoml
xor
jmp
push
push
mov
sbb
xor
push
push
mov
jmp
push
or
arpl
fdivp
jb
movsl
icebp
call
adc
xchg
mov
lods
shll
insl
mov
pop
rolb
ret
xchg
test
cmc
jmp
test
cli
in
inc
mov
in
inc
jnp
push
inc
xor
fsubp
or
popf
xor
fs
jl
dec
pop
jno
scas
in
add
xchg
gs
xor
ljmp
jge
out
inc
inc
dec
scas
leave
jmp
call
xchg
jae,pt
mulb
add
pop
mov
xchg
sahf
adc
jl
pushf
xchg
xor
arpl
leave
add
jmp
roll
sub
lods
cmp
and
cltd
adc
or
xchg
cmp
mov
mov
sub
stos
xor
push
popw
lret
inc
cld
in
push
test
insl
cmp
xor
jmp
sahf
sbb
and
lea
jecxz
loope
add
ljmp
shlb
xor
jge
dec
jge
push
mov
ja
adc
pop
adc
movsl
cmpsl
fcomi
inc
pop
mov
jnp
mov
jp
or
lea
dec
dec
or
sti
sahf
sub
or
repz
add
mov
cmc
jno
outsl
pop
jns
sahf
loop
or
inc
pushl
xchg
xorl
ja
sbb
mov
pop
fwait
xchg
mov
dec
adc
mov
and
jnp
mov
insb
dec
jg
jne
jp
sbb
pop
sbb
mov
into
mov
push
loope
outsb
clc
pushf
mov
inc
cmp
movsb
adc
outsl
pop
mov
jle
int3
gs
pop
push
shrl
shrb
cmp
add
jg
jb
cmp
outsl
add
xchg
cmp
fists
or
add
pop
adc
push
pop
fldt
or
inc
lea
pop
sub
daa
xor
out
lcall
and
mov
dec
pop
sub
sub
pushf
mov
fcmovbe
jg
cmpsl
xor
pop
pop
mov
inc
test
mov
pop
add
or
loop
pop
stc
ret
mov
dec
test
sbb
push
repz
enter
adc
or
sti
pop
xchg
xor
inc
daa
mov
and
mov
push
gs
mov
test
imul
mull
lahf
sub
pusha
push
in
cmp
mov
loope
movsl
cmpsl
f2xm1
cmp
lods
pop
push
loope
gs
sbb
sub
std
cmp
orl
sub
outsb
ds
fildll
and
dec
jmp
fwait
icebp
xchg
das
flds
jns
setl
fs
xchg
dec
push
std
and
mov
pop
adcb
ret
mov
xchg
cli
imul
sub
imul
or
and
xor
xor
shrb
loope
fbstp
cmp
sub
in
jle
lods
negl
lcall
push
fdiv
push
mov
lock
push
adc
add
addr16
into
in
popa
nop
xchg
push
mov
out
outsl
sbb
ret
mov
pop
popfw
xlat
cwtl
dec
xor
rcrb
mov
andl
insb
sub
stc
jecxz
mov
faddl
adc
shrb
mov
out
cltd
sbb
pop
mov
or
inc
jbe
adc
jns
cmpsb
adc
popl
pop
or
jnp
outsl
mov
insl
and
fsubs
jp
shll
call
mov
movsb
popf
ret
icebp
cmpsb
dec
mov
insb
imulb
repz
push
mov
jnp
mov
push
shll
outsb
movsb
xchg
repz
pop
or
clc
mov
sbb
dec
insl
scas
or
xchg
repnz
sub
iret
outsl
cmpsl
pandn
cmpsl
fsubr
lods
shll
shl
mov
push
dec
mov
mov
cs
lret
lock
test
std
sti
push
pop
sub
lahf
jb
pop
cmpsl
mov
jmp
fwait
sbb
and
jb
bound
lds
jbe
ljmp
out
mov
adc
sbb
loop
xchg
cld
sti
jp
sysenter
xlat
xor
shr
inc
sub
jge
push
gs
dec
mov
outsl
xchg
psubb
les
xor
push
andb
mov
xchg
cld
adc
aam
aas
or
or
aas
imul
mov
aas
lds
cs
in
std
movsl
jl
jp
call
sti
add
leave
sub
rcll
popa
fadds
test
adc
or
dec
imul
and
xchg
inc
pushf
test
add
adc
repnz
inc
dec
test
push
pop
or
iret
mov
dec
es
jecxz
ret
test
mov
ja
loop
jb
pop
xor
in
pop
out
dec
or
xchg
stos
in
sub
adc
mov
pop
and
push
inc
fwait
lahf
lcall
mov
fstpt
and
cli
cmpsb
mov
jle
dec
or
pop
popa
aam
repz
mov
fwait
lcall
xor
aaa
mov
cs
dec
pop
movntq
out
xor
lret
adc
fcmovnbe
leave
or
mov
ds
lcall
orl
ljmp
cwtl
jg
clc
cmp
and
fldt
movsb
mov
sbb
lret
lds
inc
push
rorl
xorb
cmp
mulb
out
xchg
push
pop
daa
dec
or
adc
sbb
fnsave
dec
cmpsl
js
sub
push
pop
cmpsw
movsb
fdivr
lods
add
imul
jb
fdivs
mov
std
mov
testb
iret
je
arpl
jbe
mov
mov
in
lea
jmp
testl
movsl
xchg
push
mov
fnstsw
data16
pop
push
cmpl
mov
jbe
jp
sbb
pop
pop
data16
sub
ffree
mov
or
aam
push
movsl
enter
mov
mov
xor
inc
test
xchg
xor
je
out
push
jg
xchg
mov
ret
ljmp
or
adc
push
test
out
mov
xchg
lret
cmp
mov
pushf
scas
fs
stos
push
jnp
mov
in
cmp
jmp
xchg
imul
lds
jae
xor
cli
mov
and
cmc
outsl
xor
loop
cmpsb
mov
cli
mov
fisubl
pop
push
pop
mov
pusha
testb
cmp
rolb
aaa
adc
adc
lret
mov
imul
popf
xor
sbb
out
add
sbb
add
xor
push
push
and
adc
and
jo
test
mov
fisubs
orb
cmp
cli
xor
aad
sbb
cmc
sbb
add
push
pop
xlat
or
scas
mov
lods
inc
ficomps
add
add
fwait
loope
leave
mov
xor
cli
and
dec
lret
out
adc
test
and
inc
sarl
pop
xchg
xchg
inc
out
sbb
hlt
jmp
int
aaa
test
inc
add
dec
jge
mov
push
pop
push
mov
gs
push
mov
js
xchg
xchg
clc
out
lock
jo
add
or
sahf
sub
push
xorl
adc
jecxz
push
into
call
addl
jge
xchg
scas
mov
dec
pop
jmp
and
rcl
mov
daa
lea
push
mov
dec
dec
in
es
in
bound
mov
out
cs
cmp
icebp
cmc
inc
stos
sahf
and
push
mov
dec
adc
or
and
sbb
add
push
outsb
icebp
ljmp
cmp
pushf
sub
sbb
in
rolb
push
repnz
dec
push
add
push
jg
in
xor
bndstx
imul
aam
mov
xchg
lods
stos
jne
mov
dec
sbb
inc
dec
loopne
lods
xchg
lea
cmp
lea
inc
add
mov
xchg
and
fwait
aas
mov
push
mov
xchg
popa
mov
orl
mov
insb
mov
lcall
fildl
push
mov
pop
fistpll
xchg
and
outsl
outsl
and
lds
add
inc
ss
in
cwtl
sub
js
dec
dec
addr16
mov
loop
je
lahf
idiv
cwtl
mov
repz
int3
inc
shlb
push
das
mov
fs
cmp
je
jbe
iret
jg
sub
and
or
xchg
adc
scas
ja
xor
xor
push
lods
or
out
fcmovbe
call
call
cmp
arpl
mov
or
subb
and
lock
out
loop
jo
jg
push
test
les
les
dec
push
rol
mov
mov
xchg
mov
sub
orl
cwtl
aas
mov
mov
clc
jbe
inc
insl
lcall
imull
sbb
rorb
in
pop
or
sahf
repnz
add
repz
icebp
lcall
out
pop
mov
test
pop
in
or
int3
add
push
push
inc
or
adc
add
cmp
pop
jae
inc
popf
adc
sub
cld
mov
pop
inc
js
pop
mov
rolb
sti
and
mov
icebp
bound
pop
call
insl
mov
in
xchg
out
rolb
jo
mov
cmp
pop
xchg
in
xchg
cld
dec
push
add
arpl
stos
aaa
out
mov
push
jbe
lret
leave
dec
push
push
jae
mov
nop
xchg
or
aad
xorb
fisubs
scas
loope
and
fwait
adc
sti
cmpsb
or
lret
loopne
in
dec
je
dec
les
movsb
sub
pop
and
pushf
adc
into
gs
mov
cld
xor
daa
ret
lds
push
dec
dec
aam
pushf
ret
jle,pn
mov
insb
sbb
das
les
pop
jns
rcrb
adc
jno
mov
push
mov
subl
push
in
jg
jmp
jmp
jnp
rcll
pop
adc
lahf
jg
fistps
scas
movsb
jns
das
adc
pop
jnp
cltd
xchg
es
cmpsb
fiaddl
loop
subl
and
mov
iret
mov
jnp
gs
cmpsl
cmp
adc
into
cmp
ficomps
fnstcw
lods
arpl
aad
movsb
imul
leave
mov
divb
xchg
aam
jmp
adc
xchg
dec
ss
orl
pop
dec
insb
sub
aad
pop
je
icebp
jne
out
scas
sbb
pop
mov
arpl
aaa
push
push
mov
and
test
das
dec
gs
fdivrs
jmp
insl
and
lds
fdivs
jg
cwtl
add
cld
loop
push
fidivrs
jle
cwtl
or
aaa
and
cmpsl
fstpt
sbb
fdivrl
push
jge
cmc
ret
andb
call
hlt
xorl
rcrb
xorl
in
aaa
inc
rcr
inc
loop
rcll
mov
jle
enter
addr16
ret
dec
xchg
ds
xchg
lea
es
jg
outsl
pop
jl
bound
add
mov
pop
leave
lret
xchg
aam
mov
aas
cwtl
pop
shl
mov
push
cmpsl
fstpt
in
fwait
push
inc
and
cld
mov
add
test
xor
xchg
or
adc
out
iret
cld
adc
xchg
rolb
mov
iret
jmp
xchg
adc
pop
aad
jmp
leave
jb
mov
in
stos
xor
push
movb
lret
lods
jmp
add
dec
jbe
ja
aad
fists
dec
mov
adc
sub
pop
pop
cld
addl
cmpl
aam
xchg
adc
or
xchg
int
dec
pop
push
push
lock
adc
ds
xor
add
decb
ds
lock
bound
icebp
xchg
das
shrl
pop
and
mov
sub
inc
push
divl
leave
icebp
push
sbb
fcmovne
hlt
jg
mov
adc
outsb
xchg
popa
icebp
or
add
sbb
inc
and
loopne
call
js
ja
ljmp
fsubrl
enter
pop
or
or
ds
xchg
inc
aas
push
arpl
cmp
pushf
sbb
repz
pushf
or
jne
jo
push
add
add
insl
sbb
mov
xchg
in
lock
sub
ret
mov
xchg
out
lcall
pushf
mov
mov
sub
push
sbb
stc
or
cwtl
les
mov
in
or
push
or
cmpsl
out
sar
xchg
js
sbbl
outsl
jbe
jl
jle
adc
insl
pop
mov
mov
test
in
lahf
mov
clc
dec
test
mov
mov
into
cmc
lods
imul
shl
pop
mov
jbe
sub
pop
cmpsl
loopne
repz
cmp
nop
loopne
jnp
lret
das
call
jb
mov
adc
push
push
xchg
cmp
jae
mov
adc
pop
sub
sar
cmp
movsb
lahf
mov
push
sub
stc
dec
scas
gs
push
xchg
sub
dec
jno
jbe
and
xchg
out
inc
mov
push
dec
jae
dec
mov
sbb
cld
lret
and
jbe
int3
test
out
cmpsl
lock
dec
int3
sub
les
dec
jno
ja
push
cmpsl
je
mov
push
xchg
jns
popa
test
mov
ret
push
or
or
adc
xor
int
insb
mov
movsb
cltd
mov
xchg
sti
mov
inc
xchg
es
fmuls
ljmp
repz
cmp
shll
sbb
and
sahf
sbb
repz
adc
sbb
mov
fwait
sub
ds
loop
sub
mov
lods
inc
or
je
xor
dec
sub
int
dec
inc
jo
push
push
and
ret
xor
xor
out
sbb
cmp
shll
pop
in
imul
xor
push
push
adc
daa
mov
scas
jecxz
mov
aam
rcrb
ret
sub
xchg
int3
or
sbb
lds
lock
stos
scas
pushf
dec
in
enter
jg
movl
lcall
adc
jge
push
jae
test
pop
mov
mov
sub
lods
sbb
insl
lds
push
jb
push
and
lahf
pop
enter
fnsetpm(287
lahf
jecxz
inc
adc
mov
test
mov
sbb
popf
adc
fs
and
ficomps
dec
sbb
std
xchg
lds
test
mov
sar
add
sub
fistl
and
sub
popf
mov
hlt
jecxz
das
dec
add
mov
jns
mov
lock
test
roll
cmp
mull
in
dec
add
sub
mov
aas
push
xchg
push
mov
in
push
xchg
pushf
lea
in
fwait
and
mov
jns
inc
add
xchg
cmp
mov
loopne
mov
dec
lock
testb
jns
test
cltd
nop
clc
mull
shl
ljmp
test
adc
jnp
insl
scas
mov
fidivs
insb
jae
imulb
int3
xor
jnp
sub
or
lds
add
pop
pop
fistpl
sub
push
stos
push
not
add
inc
and
or
orl
mov
adc
jbe
cli
push
push
data16
daa
insb
add
scas
cmp
mov
cmp
stos
inc
test
xchg
lret
cmp
dec
and
leave
sub
inc
mov
cmovle
mov
dec
mov
mov
in
lea
jmp
hlt
add
aas
out
jp
sbb
inc
sbbl
sub
test
sbbb
pop
and
push
or
aam
je
cmpsl
mov
clc
xchg
popa
test
xor
das
xor
push
jbe
inc
flds
cs
and
mov
ret
adc
ffree
icebp
mov
mov
mov
gs
inc
push
inc
add
icebp
jo
add
mov
arpl
push
jge
iret
cmp
lret
lahf
icebp
fucompp
lods
jp
hlt
call
ljmp
jmp
lret
in
jg
dec
rol
push
dec
je
jne
ficomps
sub
es
ja
sub
mov
mov
xchg
push
xchg
fwait
pop
sahf
out
xchg
and
jb
adc
or
mov
loope
xor
into
dec
arpl
jae
sub
mov
in
inc
outsl
lods
add
push
jp
movsb
add
ret
mov
and
imul
mov
pop
jno
je
add
out
inc
mov
cmpsl
insl
adc
jg
add
std
pop
adc
sbb
lahf
pop
scas
ret
scas
mov
lds
hlt
pop
mov
aaa
pop
ljmp
sub
jecxz
not
sub
pop
cmp
adc
cmp
testb
push
jge
cmc
repz
orl
inc
addr16
push
and
inc
imul
test
jnp
pop
or
mov
cmp
imul
jae
nop
scas
jmp
cmp
fisttps
mov
xor
ljmp
mov
mov
jno
into
xchg
mov
lods
arpl
sub
aad
ja
dec
ret
movsb
xor
stc
xor
push
mov
out
cmp
push
cmp
inc
aad
push
push
ja
mov
jecxz
pusha
sub
scas
jl
inc
repz
xor
pop
mov
pop
or
jle
mov
pop
fwait
push
scas
inc
dec
mov
push
stos
in
cwtl
cmpsl
call
dec
adc
dec
arpl
cs
testl
mov
jb
jl
lods
xor
stos
insl
mov
sbb
iret
mov
mull
out
jge
mov
in
dec
addl
dec
es
popf
xor
jno
inc
push
push
xor
fnstcw
std
and
cmp
mov
hlt
sahf
fisubrl
xchg
lds
adc
mov
setnp
mov
das
ror
pop
xor
in
push
inc
nop
popa
xchg
push
xchg
inc
cmp
std
jle
xor
aas
mov
mov
daa
dec
jl
mov
sub
lcall
dec
enter
in
cli
in
mov
sarb
pop
mov
push
pop
bound
push
jns
bound
aas
gs
push
std
and
jecxz
adc
jbe
orb
xchg
sub
inc
movsl
int3
shrb
dec
test
aad
imul
inc
movsl
pop
fstl
add
fiadds
pop
inc
add
mov
dec
add
lcall
push
shlb
xor
cmp
fsubrl
lock
in
pop
mov
int3
add
test
and
xor
shl
std
mov
mov
pushf
insb
mov
loop
pop
ret
mov
or
inc
xchg
pop
in
xor
lea
pop
pusha
inc
das
mov
repz
movsb
pop
lods
ljmp
insb
scas
add
and
push
add
andl
dec
pop
testb
add
aam
push
xor
dec
xchg
lds
and
js
fcoms
nop
cmp
dec
dec
pop
push
out
inc
outsl
adc
out
mov
pop
xchg
aam
scas
shlb
js
or
add
add
mov
sarl
mov
jo
fildll
lea
cld
test
loopne
out
mov
push
in
push
aad
nop
adc
mov
dec
pop
out
lock
imul
clc
nop
in
fnstenv
pop
push
xchg
sub
lret
arpl
imul
dec
ja
xorl
push
sbb
and
dec
push
clc
aad
out
jbe
pop
cli
mov
imul
dec
mov
adc
pop
push
scas
or
add
ficompl
and
dec
sub
jae
jne
ss
fcoml
subb
push
fisubl
or
lret
out
mov
std
push
or
insb
leave
imul
fst
mov
sbb
mov
ds
lret
adc
inc
cmp
cs
stos
ja
insb
enter
push
jb
out
mov
jnp
jmp
lret
ret
fcomps
sub
push
add
jbe
mov
aad
xor
inc
inc
push
es
loopne
mov
loope
loopne
xchg
inc
std
push
sub
nopl
push
sub
je
clc
andl
jae
loop
and
or
dec
mov
xchg
bound
mov
mov
jecxz
adc
mov
mov
movsb
adc
test
and
loope
insb
cmpsb
push
bound
jbe
shrl
in
cmp
jmp
movsb
aas
xchg
mov
ja
fildl
pop
push
xor
les
shl
pop
push
inc
nop
sbb
dec
outsb
mov
movsb
lods
pop
ljmp
inc
mov
adc
jnp
testl
dec
ficomps
cmpsb
mov
lock
sahf
mov
inc
test
scas
imul
cmp
cwtl
out
xchg
jmp
lret
aam
fstpt
das
lcall
xchg
xlat
mov
pop
imul
push
sahf
push
movsl
sarb
lods
bound
push
dec
ret
in
mov
sti
in
ja
add
xor
jmp
push
dec
mov
int3
out
push
xchg
push
ret
xorl
mov
inc
xlat
sub
xchg
jns
roll
rcrb
jp
aas
mov
stos
dec
lods
shl
and
jle
pop
in
sbb
pop
mov
push
aaa
scas
into
pop
adcl
or
pop
push
mov
and
jecxz
mov
bound
cmpsb
cmp
cltd
mov
pop
lret
daa
inc
idivl
push
pop
jns
repnz
push
pushf
sub
scas
imul
leave
xchg
jecxz
out
mov
idivl
cwtl
and
pop
mov
test
push
ret
mov
jae
add
jge,pn
sub
mov
lock
fdivl
pop
sub
xchg
inc
test
jno
jo
mov
loop
fdivl
sbb
push
cmpsl
jge
and
out
jge
scas
xor
xorps
jl
cs
push
xor
addr16
test
jbe
xor
fmuls
xor
mov
pushf
sbbl
cmpsb
stos
lods
movsl
sbb
stos
iret
jmp
lods
adc
jbe
or
fucomi
cmp
sub
inc
lds
in
adc
cmc
jp
sbb
and
iret
dec
and
add
mov
pop
icebp
cmp
push
xchg
push
loop
cmp
notl
mov
mov
mov
add
adc
clc
cmpsl
jbe
lcall
push
mov
cli
into
adcl
popf
adcb
jae
dec
popa
mov
dec
and
shll
mov
xchg
add
cmc
in
hlt
xchg
orl
adc
fisubrs
gs
pop
sbb
mov
stos
cwtl
pop
iret
push
push
dec
rol
imul
xchg
pop
in
or
stos
sarl
lahf
cs
or
cmp
mov
xor
shll
les
or
int3
lcall
mov
rcrl
xor
sub
add
rol
jecxz
fadds
cmp
push
cmpsl
dec
sub
sub
mov
lahf
pop
out
jbe
mov
xchg
sbb
dec
mov
and
out
enter
jnp
sbb
iret
cmp
insl
hlt
push
in
es
cltd
movsb
xor
aad
mov
dec
push
or
enter
or
push
jnp
lret
enter
daa
sbb
push
je
add
xchg
movsb
ret
add
sbb
xor
nop
jo
shll
ret
jno
call
scas
and
int
int3
pop
cmp
inc
xchg
pop
jp
rolb
movsb
push
outsl
mov
dec
nop
inc
int
cli
sbb
dec
aaa
inc
fidivl
or
sahf
sarb
adc
mov
xchg
jl
dec
xor
outsl
mov
lcall
cld
shll
hlt
push
pop
or
lret
pop
sbb
test
pop
sti
fs
pusha
orl
adc
dec
adc
mov
sub
inc
jecxz
pop
dec
inc
cmp
inc
test
outsb
xor
ret
jne
mov
xchg
in
jb
cmc
push
pop
cld
jae
pushf
loop
ret
cmp
fstpt
bound
stos
jb
pop
mov
call
sub
inc
xchg
adc
aad
xlat
ljmp
xor
orb
sbb
les
mov
out
rcrl
jno
scas
sub
imul
jb
adc
into
lds
pop
and
fadd
lret
sub
cmp
add
das
roll
sub
sbb
test
loopne
xchg
dec
shll
xlat
jecxz
dec
inc
add
lret
jecxz
rcr
lods
sti
mov
stc
mov
lods
push
out
jge
lret
cwtl
dec
push
in
xor
inc
push
jp
loope
xchg
bound
mov
or
leave
push
inc
add
add
bound
popf
aaa
mov
cltd
rcrl
cld
cmp
stos
ja
cld
jecxz
sbb
or
vmulss
push
test
inc
cs
mov
sub
addr16
jb
dec
push
cmpsb
or
and
movsl
inc
mov
mov
pop
sub
inc
call
mov
jno
and
adc
xor
aad
insb
mov
inc
fmulp
jbe
into
pop
stos
loopne
push
enter
imul
mov
or
jno
fisttpll
movb
xchg
pop
or
sar
mov
mov
aaa
jne
stc
xlat
pop
jns
lret
push
js
inc
sbb
stc
mov
sub
loope
aad
sbb
cmp
repz
lahf
mov
test
push
cmp
mov
int
jo
mov
mov
sarb
mov
pushf
aaa
xor
mov
cmpsb
jp
xor
test
sti
cmp
sub
add
inc
cmp
outsl
inc
push
cmpsl
ficoms
subb
leave
fadds
in
gs
movsl
jo
pop
call
cli
cmp
daa
pop
cwtl
int3
mov
or
iret
jb
faddl
out
imul
dec
add
or
pop
pop
sahf
jg
movsb
push
adc
popf
enter
or
jno
and
sub
pushf
inc
xor
fbld
mov
cs
dec
aaa
xchg
fs
int
dec
push
or
and
movsl
out
sbb
fsubrs
cmp
mov
add
leave
call
jp
xlat
jae
push
daa
cmp
loop
fmull
cmp
pop
lret
inc
inc
pop
hlt
mov
jbe
dec
and
jne
cmp
xor
jg
mov
movsb
int
xlat
dec
fists
push
adc
pop
insl
cltd
pop
dec
dec
jge
leave
test
out
push
cmpsl
pop
rsm
jmp
mov
xchg
ljmp
test
icebp
add
out
arpl
ja
inc
enter
clc
adc
movsb
ljmp
mov
and
ljmp
push
xchg
andb
test
cmp
cmp
lock
test
jbe
imul
cwtl
xor
ja
in
idivb
lods
ret
mov
out
out
lock
in
cmpsb
shl
mov
inc
outsl
call
pop
adc
addr16
lret
sub
hlt
ret
inc
in
test
mov
in
stos
pop
ret
scas
dec
setns
add
lea
add
hlt
pop
pushf
aad
arpl
mov
in
call
cmp
or
pop
pop
das
flds
test
mov
daa
cmp
dec
or
xchg
jl
push
and
sbb
js
push
lods
or
out
into
jge
out
sub
add
cmp
xchg
insb
inc
inc
or
rolb
mov
test
mov
data16
mov
jno
or
sbb
insb
cld
rorb
push
mov
sub
scas
xor
arpl
ret
es
xchg
addl
divl
cld
pushf
lods
lods
cmpsl
bound
and
xor
ss
mov
pop
lock
ljmp
neg
xchg
test
lea
test
push
and
cmpsl
push
in
push
sub
jle
jne
rcll
loop
and
sbb
dec
in
add
stos
adc
ret
jnp
xchg
shlb
jp
cmpsl
dec
inc
insl
lret
gs
and
push
nop
sbb
mov
dec
lahf
inc
push
adc
sub
and
fbstp
inc
out
xchg
lret
stos
sbb
inc
scas
mov
lods
lahf
mov
decb
cmpsb
shl
push
or
xor
cmp
js
icebp
lods
cmp
out
jnp
or
test
std
sbb
ret
das
aas
nop
fdivr
jno
mov
hlt
cmpsl
scas
xchg
xor
xor
sbb
xchg
rcl
sub
orb
xchg
jmp
xor
cmp
ds
and
cltd
popf
sbb
aaa
and
push
adc
fwait
fs
cmp
aaa
push
movswl
popf
inc
rorb
lods
inc
negl
push
lcall
add
aas
pushf
jne
mov
sub
lock
ljmp
and
addb
out
push
xor
jge
cmpsb
xchg
xchg
sysenter
cli
leave
or
mov
fs
shll
int
xor
shlb
or
or
add
mov
ja
mov
or
jne
adc
fstpt
divl
dec
fdivl
fsubrl
rcll
and
sub
int
loop
nop
loopne
mov
into
jb
mov
dec
and
mov
jbe
out
push
pop
pop
adc
cmp
fildl
movsl
shll
roll
mov
mov
add
mov
fwait
lcall
bound
dec
stos
imul
lods
stos
fisttpl
jns
popl
repz
data16
cmp
lds
insl
pop
les
sbb
in
roll
pop
popl
pop
imul
js
inc
insb
nop
jno
pop
xchg
cmp
mov
and
xor
cmp
mov
lds
jg,pn
xor
xor
xor
out
mov
cli
inc
add
pop
test
aam
mov
dec
inc
mov
dec
loopne
inc
insb
inc
clc
out
jl
push
sub
icebp
int3
ljmp
sub
and
mov
aad
daa
mov
cltd
hlt
push
repz
ljmp
testb
jbe
out
mov
xor
mov
movsb
dec
aam
xchg
insl
jp
test
xchg
bnd
jae
out
add
xchg
sub
dec
leave
lds
mov
push
or
lea
push
cmp
pop
adc
sti
and
pop
out
push
sub
xchg
dec
jmp
aaa
jbe
into
adc
lock
jo
aad
add
int
sti
nop
testb
ret
popf
cmpsb
ds
jnp
push
dec
mov
mov
subb
mov
insl
mov
and
notb
insl
mov
xchg
xor
flds
mov
adc
je
test
rolb
cmp
scas
cmp
adc
cmpb
mov
lock
sub
and
sbb
lcall
sub
sarb
out
iret
inc
inc
mov
out
hlt
and
out
jle
pop
and
mov
and
cmpl
js
xchg
xchg
nop
jo
lret
mov
push
xchg
aaa
jge
scas
ds
test
sbb
mov
push
sbb
movsb
adc
xchg
repnz
lcall
insb
movsb
jno
fwait
or
sbb
xchg
mov
imul
xchg
ficoms
shrl
sarb
aam
add
imul
jecxz
in
stc
test
add
xchg
adc
test
adcb
xchg
inc
mov
in
repnz
adc
std
push
jb
jle
sub
add
mov
repz
jmp
mov
and
fldenv
dec
ret
pop
and
pop
pop
pop
jnp
adc
das
jle
sub
pop
jg
ja
pop
lea
imul
push
out
push
mov
jecxz
ret
int3
add
inc
jnp
jbe
mov
xor
cs
or
sysret
sub
cmp
aaa
xor
add
ds
mov
ss
adc
inc
mull
int3
sub
mov
ja
gs
adc
pop
xchg
or
rcrb
inc
xchg
mov
sub
repz
sub
xor
adc
jo
sub
mov
pop
xchg
gs
stc
icebp
repz
mov
mov
xchg
test
push
ss
lods
pop
xchg
push
xor
add
xchg
push
jp
add
mov
xor
icebp
mov
fucomi
xchg
pop
and
and
cmpsb
jp
ja
add
cmpsl
iret
sbb
bound
jl
sbb
roll
mov
iret
popa
xor
xchg
cli
mov
mov
xchg
xchg
lret
mov
or
imul
mov
icebp
lret
addr16
jnp
test
mov
mov
ja
sbb
out
clc
dec
pop
jbe
pop
shlb
mov
fcmove
sub
xchg
cmp
jae
cld
pushl
mov
cmpsb
xor
iret
xchg
std
xchg
bound
andb
mulb
dec
mov
cld
jecxz
loop
lret
outsb
xchg
das
fisubs
add
leave
ljmp
enter
mov
xor
hlt
jns
push
aam
cmp
rcll
ss
dec
push
pop
stos
jl
xlat
push
fnstenv
neg
aam
enter
jg
mov
call
mov
xchg
push
pop
dec
test
push
mov
mov
sub
cmpsl
mov
testb
imull
cmp
insb
push
xor
mov
test
or
adc
in
dec
leave
nop
inc
daa
jnp
mov
in
jne
dec
cmp
adc
push
sub
in
lea
sbb
jae
je
mov
fs
and
inc
iret
lds
rorb
xchg
arpl
xchg
push
rorb
adc
push
or
pop
mov
cmpl
adc
cmp
call
push
inc
mov
aaa
les
aaa
xchg
std
call
push
mov
xor
jno
mov
movsl
mov
mov
das
mov
shll
das
cmp
jae
out
ret
je
cmp
data16
sbb
jne
aam
adc
cmp
and
call
bnd
paddb
sub
mov
imulb
movsb
push
sbb
shll
push
and
fstpl
fucom
pop
out
sbb
faddp
or
fwait
jno
test
int
lret
xchg
xchg
in
loopne
nop
cwtl
mul
js
dec
xchg
jle
xchg
insl
icebp
or
adc
add
dec
hlt
andl
xor
pop
push
mov
and
push
cmp
inc
lret
decl
xchg
das
or
les
mov
leave
lods
jmp
pop
or
leave
xor
inc
rorb
ret
mov
shll
or
std
fdivrp
adc
mov
out
mov
repnz
jl
pusha
aaa
jmp
mov
in
push
or
adc
fsub
push
mov
aam
sbb
pop
call
adc
movsl
dec
push
jl
mov
insl
rcll
clc
pop
xchg
jg
jns
mov
aas
cmp
pop
mov
fadds
jns
sbb
adc
sub
lds
or
std
dec
repz
out
lock
add
push
add
and
pop
cmp
dec
fimull
mov
mov
pop
mov
push
les
push
sub
outsb
push
sub
jo
or
cmp
notl
fstl
fidivl
jmp
clc
push
jnp
mov
pop
ret
hlt
imul
pop
dec
addr16
dec
stos
dec
cld
inc
xor
gs
inc
lahf
das
mov
xchg
and
adc
hlt
cmp
aaa
mov
jnp
test
cmc
mov
or
sti
and
fdivs
inc
popa
mov
adc
push
stos
shl
mov
movsl
jne
call
or
jp
fwait
jl
adc
fstps
lods
pop
je
jg
mov
mov
sbb
repnz
in
push
fwait
lods
repz
insl
jne
sbb
push
xlat
or
pop
xchg
in
sub
in
in
imul
dec
push
mov
dec
jge
push
outsb
mov
les
inc
mov
jp
fs
daa
in
cmp
cmp
push
push
xlat
fidivrs
bound
xchg
cld
rolb
sbb
outsb
push
mov
daa
int3
out
sbb
rcrl
cmc
lods
mov
sahf
cld
lret
fldenv
iret
lock
jb
aas
fucomi
jb
jmp
pop
lods
inc
stc
sub
pusha
and
adc
add
rorb
in
jg
xchg
fdivrs
push
cmp
out
adc
pop
test
sub
repnz
cmpsl
push
cld
test
lods
and
push
or
int
jae
out
push
push
faddp
pop
push
shl
daa
rorb
cld
dec
xchg
xchg
and
sbb
js
dec
xchg
sub
cmp
dec
and
lcall
sbb
push
mov
lock
mov
add
lret
icebp
cmp
nop
sbb
or
cltd
pop
add
hlt
jecxz
dec
push
cld
loop
in
cli
dec
add
jecxz
jge
and
adc
sahf
pop
mov
adc
xchg
inc
inc
mov
adc
mov
fld
dec
cmp
or
mov
xor
fnstsw
lret
movsl
aam
xor
ficoms
mov
test
sbb
xchg
jmp
cmpsl
mov
dec
jo
inc
mov
push
shl
push
sahf
sub
negb
xor
aas
stc
sbb
fildl
clc
addr16
cmp
mov
and
adc
mov
jmp
in
jnp
sub
xchg
adcb
pop
jg
es
jb
outsb
loope
pop
inc
enter
pop
iret
stos
inc
cmc
cltd
shr
in
inc
ljmp
xchg
pop
push
inc
outsb
loop
xor
or
icebp
jmp
out
out
adc
xor
xchg
xchg
push
or
inc
dec
add
push
xor
dec
xor
dec
popa
cmc
int
xor
out
sbb
bound
or
ror
mov
lahf
push
jmp
mov
mov
dec
mov
rclb
mov
cmp
pop
pop
or
cmp
pop
loope
add
cs
out
rcl
int
add
fucomip
add
btr
cltd
sbbl
pop
cli
push
cld
xchg
push
pop
mov
sub
cmc
daa
inc
cmp
adc
scas
js
out
inc
ja
xor
push
jmp
pusha
pop
out
lock
repz
ficomps
cmp
mov
inc
fcomps
clc
jmp
sbb
cltd
sahf
jmp
jae
adc
adc
and
adc
inc
int
and
xor
out
cmp
mov
inc
push
cmc
std
mov
aad
inc
mov
jo
sti
in
cmc
mov
mov
fnstsw
test
push
sahf
add
test
sub
xchg
push
xchg
xchg
pop
mov
xor
and
add
sbb
imul
clc
push
or
jmp
mov
adc
idivl
ret
scas
fwait
jp
xchg
addr16
push
xchg
dec
std
jmp
push
add
mov
dec
mov
pop
adc
cmp
xor
sub
decb
shlb
ljmp
ds
jnp
outsl
sbb
sbbb
repnz
add
vcvttss2si
jb
repnz
push
arpl
mov
push
push
fdivrp
adc
icebp
imul
fisubs
jmp
sarb
ret
rolb
movsl
cmpsb
out
dec
sbb
movsl
mov
dec
repz
icebp
add
jle
pop
scas
or
iret
sbbl
sub
push
push
fucomp
loop
xor
sarl
popa
sub
xlat
lods
repz
cltd
push
ds
inc
mov
adc
mov
xor
xor
call
jmp
push
rolb
cmc
imul
xorb
push
cmp
cmpsb
push
lahf
rolb
jp
xchg
movsb
mov
sbb
aaa
adc
dec
fstpt
lea
repnz
jbe
gs
hlt
stos
adc
cmpsl
ret
jae
fwait
ljmp
call
xlat
stc
cmpsl
xor
lock
insl
mov
xchg
jge
jmp
mov
adc
lock
hlt
jns
fimull
add
pop
and
add
test
popf
cwtl
inc
in
addr16
adc
js
xor
cli
mov
and
xorl
mov
cmp
es
cmp
mov
ret
hlt
or
hlt
out
mov
cmp
lret
mov
bound
pop
frstor
addr16
mov
xlat
imul
cmpsl
and
enter
inc
fwait
popa
test
inc
data16
call
sbb
mov
fistl
pusha
mov
out
jne
loop
lods
mov
push
rcl
enter
mov
jmp
mov
ret
imul
jg
pop
cmp
data16
cmc
ss
xor
adc
sub
fdivl
xor
mov
pop
mov
pop
push
jmp
ljmp
testb
sub
rorl
pop
dec
mov
lcall
mov
push
lds
scas
leave
popf
call
mov
gs
xor
sahf
pop
mulb
aad
lcall
add
loop
sbb
insb
andb
clc
lret
add
dec
sub
or
sbb
imul
insb
ds
lock
je
inc
pop
adc
mov
das
shlb
add
sbb
pop
sbb
lcall
ret
mov
inc
fildll
ljmp
push
or
push
xchg
aaa
mov
xchg
dec
adcb
cmpsl
daa
in
mov
hlt
pop
out
jns
xchg
ret
dec
mov
jno
xchg
lods
cld
dec
fisubl
push
les
pop
add
sbb
pop
inc
add
sub
roll
inc
pop
imul
jae
mov
or
aaa
jno
inc
sarb
into
pushw
stc
cmp
dec
sbb
jge
mov
clc
push
repz
xchg
and
add
scas
cmpb
dec
enter
test
or
pop
pop
push
aam
outsb
fnstcw
outsb
subl
dec
add
cli
aaa
xchg
loope
icebp
mov
adc
aaa
stos
or
scas
int
mov
and
sub
dec
cmpl
sbb
aaa
rcr
and
jl
pop
test
and
cmp
jle
loop
nop
js
pushf
jne
aaa
stos
cwtl
fdivs
lods
dec
mov
pop
jp
out
test
lods
inc
mov
adc
cltd
push
and
or
or
aaa
pop
jmp
push
lahf
bound
adcb
hlt
lcall
div
call
ret
pop
aad
mov
test
xchg
imul
hlt
sub
test
aam
jle
in
sbbb
out
sub
mov
jmp
add
sub
loop
jo
stos
or
sti
sbb
adc
jo
popf
fisttpll
repz
scas
repnz
sarl
sbb
scas
jns
popa
sub
jae
lcall
cmp
xlat
adcl
test
push
sbb
adc
sti
or
mov
add
pop
movsb
and
cld
nop
cmp
sbb
aad
add
addr16
pop
std
sub
scas
clc
js
mov
out
or
hlt
popa
or
dec
or
neg
mov
popf
mov
fidivs
push
imul
jmp
ss
test
add
adc
and
test
push
adc
jle
add
adc
insb
mov
cld
xor
push
xor
add
cmp
int3
xor
pop
sbb
cmp
aad
mov
ror
fldenv
add
push
dec
cmpb
pop
dec
mov
sarb
sbb
imul
jbe
std
inc
push
pushl
cmpsb
popf
mov
lcall
sbb
xchg
dec
fwait
push
movsb
loope
data16
sub
xor
movsl
mov
test
jge
fstpt
bound
bound
or
push
add
addl
push
mov
adc
mov
test
int3
in
dec
lcall
shll
xchg
call
adc
pop
adc
or
adc
or
xorb
inc
mov
addb
stos
data16
cmp
sarb
jae
pop
lods
cmp
addl
push
movsl
push
repnz
hlt
cmp
jl
cld
xor
repz
cmpsl
subb
add
mov
mov
xchg
loop
addr16
dec
in
out
jg
add
fs
xchg
xlat
test
add
call
pop
ja
int
stos
adc
or
xchg
orb
mov
and
mov
enter
cmp
fadds
enter
mov
nop
cmp
mov
pushf
sbb
addb
inc
push
and
fisubs
mov
int
jnp
adc
add
or
cmpsl
sti
inc
pop
xor
jp
leave
or
and
push
insb
xchg
xor
xlat
nopl
cmp
sbbb
daa
xchg
nop
cmp
xchg
rclb
adc
lahf
and
push
xor
mov
xchg
in
pop
mov
pop
xor
cwtl
add
or
pusha
mov
subl
sti
add
push
dec
fisubrl
sti
jmp
cmp
cmp
mov
adc
sbb
std
fidivrl
sub
sub
loop
lock
stos
push
js
push
shrl
mov
dec
adc
sbb
shlb
mov
cmp
push
je
pop
call
jge
movsl
sahf
mov
mov
adc
sbb
lret
cmp
jo
cltd
stc
ds
imul
scas
outsl
jae
mov
or
mov
xor
aas
fiadds
repnz
aaa
andb
cmp
repz
xchg
cwtl
pop
pusha
loop
stos
mov
out
mov
jg
jae
sbb
sarb
mov
stc
add
scas
push
rclb
nop
and
push
cmc
addl
sub
adc
es
xchg
insb
and
arpl
out
xchg
mov
sub
inc
movsl
mul
and
popf
sbb
lock
sbb
pop
out
xchg
lret
ss
xchg
rorl
push
cmp
add
lret
ds
pop
sbb
xor
adc
jl
adc
mul
repz
stos
mov
pop
inc
mov
adc
adc
pushf
and
popa
lods
cmpsb
test
push
dec
sub
jmp
rcr
mov
push
ret
jb
js
or
test
mov
in
imul
inc
test
xchg
aaa
xchg
dec
bound
xor
adc
jns
in
jns
xchg
xor
jns
fmuls
leave
sub
inc
clc
sub
nop
lahf
psubusw
jno
enter
xchg
int3
xchg
cmp
outsl
pop
mov
pop
repz
mov
mov
clc
xor
pushf
push
dec
and
sub
xor
xor
pop
test
push
adc
push
inc
mov
cmpsb
ja
js
jge
cmp
stos
push
xor
out
sub
xchg
push
mov
mov
dec
sahf
add
mov
mov
loop
jecxz
mov
bnd
mull
cmp
sbb
rorl
inc
ret
jecxz
movb
push
mov
insb
arpl
ljmp
loop
sbb
mov
push
sbbl
notl
jge
rol
sbb
push
pop
push
push
jns
loope
out
mov
test
bound
stc
xor
jns
pushf
sti
xor
mov
jno
fs
mov
mov
jmp
dec
jp
and
lock
aam
lock
fistl
addr16
test
sbb
pop
push
mov
fnstsw
adc
clc
xchg
mov
rol
cmp
xchg
ret
lock
or
and
push
adc
popa
jg
pop
sbb
imul
mov
ror
sub
add
gs
fldcw
enter
xchg
push
xchg
mov
dec
xor
pop
xchg
xor
outsb
sub
cld
mov
faddl
pop
in
popf
and
scas
jp
adc
sbb
push
inc
notl
cmpb
nop
adc
push
push
cmp
push
cmc
mov
mov
loopne
mov
mov
add
js
lret
mov
jb
jmp
shr
rcrb
mov
push
add
push
fisttpll
cmp
out
xchg
ljmp
pop
decb
aaa
test
test
insl
icebp
push
loopne
push
std
fstps
mov
enter
xchg
lcall
lcall
jnp
loop
shrl
out
test
xor
jnp
lods
dec
cmp
rorl
jae
rcr
xlat
dec
xlat
ret
jmp
scas
fidivl
inc
xor
dec
lret
out
sar
push
pop
cmc
or
outsb
mov
imul
stc
mov
das
call
mov
gs
and
jo
jl
rcr
insb
clc
mov
in
ja
jle
ficomps
in
and
stos
lahf
mov
fmull
fnstcw
fmuls
jb
int3
cltd
dec
mov
mov
mov
in
ret
jbe
xchg
les
push
cmp
iret
pop
movsl
pop
imul
jo
mov
push
gs
mov
inc
cmp
mov
and
lods
flds
je
movsl
aam
add
ret
sub
push
les
dec
cbtw
xchg
imul
push
fstps
push
movsl
sub
pop
sub
push
addr16
xchg
jnp
in
fiaddl
sti
imul
aam
cmp
stos
jg
int3
imul
fcom
inc
repnz
push
xlat
idivb
pushf
push
adc
cmc
out
jne
sbb
xchg
pop
jg
loope
data16
pop
movsl
and
mov
loope
jae
fs
les
push
jl
bound
inc
scas
or
test
sub
jb
xor
adc
rolb
jmp
lret
loopne
xor
gs
mov
in
repz
ljmp
dec
xchg
addr16
je
or
cmc
push
xchg
pop
cmc
jl
mov
inc
inc
sbb
xchg
int
and
cmc
mov
mov
mov
arpl
inc
lret
loope
sub
cmpsl
mov
ja
into
mov
jne
fdiv
xor
jl
lods
jge
pop
mov
fisubs
adc
aas
jmp
mov
mov
xor
bound
fdivrl
les
pop
adc
jg
push
inc
pop
adc
xor
mov
movsb
pop
nop
lds
pop
mov
cmp
sbb
fs
adc
jns
pop
in
inc
jno
enterw
and
stos
and
loopne
sbb
or
sbb
mov
imul
add
fildll
hlt
sub
shll
add
insl
cmpsb
cmp
lahf
mov
push
sbb
and
xor
imul
in
nop
cmp
rorb
jmp
cld
movsl
les
cmp
repnz
enter
or
inc
fwait
into
pop
mov
xor
and
cmp
scas
sub
and
jae
pop
test
repnz
cmp
and
jge
inc
push
out
popf
add
push
or
jns
fiaddl
shr
test
mov
jne
xchg
jne
cmp
out
xor
cmp
pop
xor
mov
insb
in
xlat
or
jp
mov
shll
adc
pusha
or
scas
jno
xchg
sub
xor
mov
stos
inc
sbb
inc
inc
popf
mov
shlb
xchg
iret
mov
xor
lahf
enter
loope
mov
mov
jle
es
shll
roll
cmp
in
ret
mov
adc
insl
shlb
insl
jnp
nop
jo
mov
push
into
and
lcall
adc
lahf
sahf
inc
mov
out
bound
adc
dec
daa
call
fwait
xor
pop
in
out
mov
cmp
sbb
inc
xlat
mov
sub
lcall
push
popf
imul
ret
and
loope
mov
js
mov
test
pop
mov
push
xchg
xchg
pop
cmpb
out
fwait
pop
pushf
add
jmp
dec
pop
subb
loopne
imul
mov
add
ret
es
divb
lods
push
stos
test
rcrb
popa
xor
xor
cmp
fs
pop
jecxz
mov
rcll
ret
outsb
add
xchg
ja
add
test
mov
inc
scas
repz
mov
xchg
cmpsb
add
jb
cltd
dec
mov
xchg
adc
lcall
fldl
cmp
mov
popf
push
jmp
mov
ja
xor
fst
js
jns
push
fsub
jo
push
cs
inc
sbb
fmuls
and
push
fcoml
mov
inc
lods
cmp
leave
cmp
or
xor
jle
mov
or
lea
jp
xchg
fstpl
adc
stc
hlt
xor
loop
mov
mov
jo
out
sbb
lahf
repnz
pop
jge
xor
decl
xchg
sar
std
jg
add
jmp
or
dec
adc
xor
xor
xorl
xor
hlt
sar
lret
push
ret
mov
int3
addr16
or
fisubrl
jns
mov
sarb
sbb
pushl
jl
pop
xor
push
xchg
stos
jno
and
mov
ret
lods
call
addr16
push
pop
lds
pop
and
daa
lds
and
ret
lds
test
mov
dec
add
adc
mov
repnz
cmp
mov
sbb
jl
push
add
into
pop
inc
inc
ds
add
or
push
fisubl
push
jae
stc
loopne
jle
adc
cmp
lcall
adc
push
mov
mov
lret
rcll
sub
aad
push
mov
insl
pop
rcr
jne
test
push
insb
lods
inc
push
mov
aas
movsb
jg
mov
jg
cli
scas
movsb
es
fwait
or
mov
push
aaa
fisubrl
adc
js
imul
pop
mov
loopne
xor
bound
xchg
daa
push
push
push
data16
sub
inc
out
pop
and
jge
in
daa
and
xor
push
dec
ret
push
inc
dec
cmp
sub
xchg
push
leave
inc
xchg
es
stos
int3
add
cmc
push
cmp
jne
ror
push
push
js
arpl
es
sub
cmpsb
dec
mov
add
or
dec
stos
mov
call
and
pop
cld
dec
rcr
insl
xchg
insl
pop
in
push
cli
cwtl
js
xor
mov
or
repnz
cmpsl
push
stos
mov
pop
push
into
lods
scas
mov
fsubp
nop
mov
mov
es
fwait
mov
lcall
je
jae
pop
ret
clc
test
xor
adc
add
pusha
mov
cmp
mov
data16
mov
ret
addr16
mov
cmpsl
or
aad
imulb
fldcw
jb
inc
sahf
xchg
stc
push
cmp
cld
xchg
cmp
ds
lret
cmpsl
test
inc
shlb
sbb
adc
imul
add
add
jl
or
inc
mov
mov
add
int3
rcr
call
mov
out
sub
mov
xchg
imul
xlat
dec
or
add
mov
les
dec
pusha
mov
leave
sti
fistl
sti
jl
das
add
lahf
repnz
test
cmpsb
cmp
xchg
sub
js
or
test
cmp
int
mov
push
xchg
outsl
push
and
lret
adc
jle
pushf
mov
es
shrl
pop
pop
shrb
add
mov
stos
fadds
sub
aam
outsb
or
xchg
xor
jae
ds
cmc
pop
fisubs
mov
xor
mov
loopne
les
in
pop
in
mov
add
and
pop
loopne
jecxz
jae
lods
sbb
shlb
in
loopne
ja
ss
mov
jb
cmp
jns
and
out
pop
neg
sbb
xchg
dec
push
or
dec
lds
cltd
flds
add
fsubp
mov
push
cmp
sbb
cmovl
pop
adc
cmp
pop
xchg
sub
add
sbb
test
rolb
pusha
mov
fstpl
dec
jb
pop
inc
xor
push
push
stos
pop
xor
xchg
add
js
xor
out
es
push
cmp
mov
sub
arpl
adc
test
sarl
insb
in
adc
sub
ret
insl
jmp
mov
fisubl
cmp
push
inc
js
inc
cmp
mov
sarl
mov
stos
data16
lock
mov
xchg
das
cmp
cld
xor
mov
jne
xchg
pop
stos
sbb
in
adc
mov
xchg
out
mov
int
xchg
in
pop
mov
pop
sbbb
mov
test
movzwl
or
or
fildl
adc
ret
mov
int
aad
and
jb
clc
je
pop
xlat
lret
mov
mov
sbb
icebp
out
dec
in
aaa
sub
cmp
pop
jne
and
lods
fisubrs
rorl
cmpsl
sbb
pop
ds
fbld
push
inc
es
cmp
mov
insb
aad
dec
xchg
xchg
dec
fwait
stos
ffreep
fidivl
cmpsl
out
aas
or
mov
push
and
inc
push
pop
push
push
mov
nop
mov
fiadds
cltd
pushf
mov
nop
imul
ficompl
mov
nop
or
popa
sahf
add
inc
enter
cld
pop
aam
adc
movsb
arpl
jle
xchg
sub
or
sbb
xor
jle
xor
sbbb
fucomp
das
fnsave
or
rclb
inc
mov
call
or
push
sbb
call
pushf
sub
fs
mov
mov
adc
roll
ret
sbb
aad
jmp
xchg
je
fdiv
mov
mov
pop
dec
shlb
shlb
lods
push
or
mov
pop
jb
scas
jne
ret
mov
rorb
sbb
sbb
add
lahf
or
stos
push
and
scas
sub
cli
jl
adc
xor
nop
add
mov
js
fwait
pop
jecxz
movsl
and
inc
stos
mov
mov
es
xchg
inc
pop
in
in
insl
nop
lods
inc
mov
ss
cmp
add
push
testb
xchg
dec
lods
out
add
jb
adc
insl
fld
sub
bound
repnz
lods
fwait
enter
mov
out
push
inc
jno
aam
lds
push
cmp
pop
mov
jl
popfw
add
cmp
add
xchg
inc
xchg
add
test
shr
neg
push
push
pop
jmp
and
movsb
pop
fstps
aas
cmp
sbb
popf
fs
xor
mov
add
test
mov
leave
mov
dec
jae
sub
xchg
iret
in
loopne
xchg
test
jae
push
std
and
lods
clc
mov
out
or
push
cmp
imul
mov
jb
jecxz
cli
ja
lock
sbb
jns
mov
insl
sbb
lret
test
in
sbb
ljmp
mov
into
fwait
inc
mov
es
sbb
leave
not
rcl
orb
decb
lock
xor
mov
xchg
inc
rol
andl
dec
mov
mov
and
add
pusha
pop
aaa
pusha
jl
inc
enter
jl
cmpsl
inc
mov
bound
adc
inc
and
sbb
xchg
and
in
outsl
mov
mov
js,pt
push
roll
out
std
add
pop
adc
imul
add
movd
imull
mov
mov
xchg
out
dec
in
mov
je
xor
cltd
jo
jns
and
mov
push
and
or
push
stc
inc
popl
clc
stos
cwtl
fwait
out
mov
cmp
in
cmp
in
movsb
inc
in
sbb
roll
pop
aas
std
inc
rcl
or
jnp
inc
aaa
push
repz
dec
sbb
lcall
rcrl
xchg
mov
test
mov
xchg
in
pop
xchg
jae
pop
out
inc
inc
xchg
out
push
std
imul
jno
sti
xor
je
pop
mov
mov
sub
sbb
add
xchg
mov
and
lods
xchg
cs
ds
push
and
loope
pusha
cmpsl
das
lods
test
push
stos
cmp
xor
jp
xchg
rorb
inc
loope
aaa
gs
adc
or
shll
cmp
in
iret
mov
pusha
and
fiadds
addr16
push
xchg
jecxz
jmp
rolb
adc
and
dec
fbld
add
sbb
leave
xor
push
jne
aam
and
lea
cli
jbe
dec
mov
pop
stc
sbb
pop
sarl
mov
lds
movsl
xor
adc
ret
cli
add
fldt
mul
push
fstl
out
arpl
push
jo
jmp
fisubrs
insb
dec
rcl
mov
xchg
ss
icebp
iret
add
jb
push
pop
push
mov
ss
popf
fisubrs
cld
jnp
push
fisttps
fwait
sub
adc
lret
mov
shlb
lock
adc
mov
sarb
xchg
jecxz
mov
mov
psubq
out
ds
dec
fsubs
adc
sub
cs
insb
xchg
jbe
sbb
test
cmpsl
test
cmp
or
movsb
mov
mov
or
and
insw
lock
inc
push
fnsave
xor
lods
pushf
or
ret
jmp
jp
inc
push
fcoml
lock
pushf
ret
adc
dec
and
idivl
in
aad
pop
icebp
push
push
icebp
fidivrl
and
imul
push
incb
push
stos
xchg
cmpsb
jp
mov
mov
or
mov
mov
lret
sub
jp
push
sbb
mov
inc
ss
stc
push
or
sbb
or
mov
and
inc
nop
addr16
mov
mov
daa
leave
insl
cmp
clc
xor
or
arpl
jbe
and
sub
mov
mov
cltd
dec
adc
mov
andl
mov
invd
in
mov
push
outsb
ss
cmp
fs
or
jae
cmc
adc
jg
xchg
adc
out
mov
sub
fcoml
add
sarb
cmp
std
int3
lods
mov
ss
push
inc
adcb
addb
xchg
repz
sub
and
data16
mov
imul
push
sbb
jne
mov
out
data16
inc
shll
lea
int3
insl
inc
stos
ljmp
mov
out
push
test
jae
adc
ret
loope
pop
xchg
loope
movsl
xchg
popa
mov
sbb
cld
idivb
dec
in
insl
int3
in
jl
cmp
leave
push
lea
mov
out
insl
lods
stc
jae
bnd
cld
mov
cmpsl
test
fildll
cmpsb
es
test
icebp
jge
mov
mov
test
cld
and
add
lods
cmp
sbbl
adc
cmp
fs
mov
jbe
clc
daa
stos
icebp
push
xor
and
mov
adc
inc
loope
out
loopne
push
inc
inc
cwtl
add
fcmovne
jecxz
test
fdivl
mov
jp
mov
inc
xchg
sbbl
xchg
cmp
cltd
mov
fdiv
inc
test
insb
pop
mov
or
sbb
into
sbb
inc
hlt
mov
pop
repnz
fwait
ljmp
add
pop
pop
or
pop
jecxz
adc
pop
scas
push
pushf
in
add
clc
dec
test
fs
clc
xor
inc
icebp
sbb
dec
loope
xlat
mov
cli
lods
test
xchg
mov
call
pop
cld
jge
cmpb
pop
negb
jle
into
leave
mov
dec
push
bound
jecxz
fsubrs
jns
data16
inc
insb
sbb
mov
jns
mov
stos
adc
jmp
loopne
dec
dec
or
inc
outsb
aaa
mov
mov
xor
fwait
xor
or
out
push
and
pop
xchg
xlat
xor
pop
insl
push
mov
lods
cltd
adcl
xchg
aaa
adc
outsb
pop
lds
sti
out
lret
movsl
in
aas
cld
popf
movsb
scas
roll
pop
aam
push
inc
push
jge
push
pop
and
imul
pop
repz
cwtl
sub
repnz
cmp
pop
mov
inc
sahf
or
lcall
pop
mov
xor
or
mov
ss
sub
and
push
jb
insb
in
movsl
ret
out
pop
jb
out
in
lock
lods
fsts
pop
and
or
sti
lcall
fisubl
call
std
je
fs
mov
push
fadd
int
jo
or
js
icebp
scas
ficoms
and
xchg
scas
leave
clc
cmp
ja
jbe
add
pushw
push
out
das
sti
xchg
and
fstl
xor
jg
incl
sub
call
test
cmpsb
push
orb
push
out
mov
loop
fstpt
jb
cli
xchg
mov
out
std
dec
insb
jmp
sub
mov
mov
stos
cmpsl
rorl
push
cli
in
inc
iret
and
xor
fildll
jmp
jl
lcall
xchg
subb
push
mov
adc
aad
push
in
in
test
xor
scas
aas
dec
and
push
adc
js
into
dec
mov
and
dec
dec
out
jle
adc
ret
or
stc
stos
xchg
xchg
ja
cmp
mov
or
shll
or
and
xor
jecxz
mov
pushf
sahf
lret
daa
push
add
and
dec
je
or
add
adc
jno
in
pop
scas
es
xchg
jb
int
int3
ficoms
sub
repnz
clc
or
jge
aam
push
dec
pop
sbb
cmp
outsb
xor
fstpt
mov
cmp
enter
add
subl
cmp
out
ret
cmc
aas
dec
fisttpl
cmp
decb
or
xor
int3
jne
pop
cmpsb
das
sbb
xchg
mov
jns
push
js
xor
lret
imul
add
mov
and
or
mov
popf
xor
jno
xlat
cmp
cmp
pop
insb
in
dec
pop
jl
push
push
cli
fdivp
mov
push
inc
and
push
jno
mov
jb
dec
outsb
adc
jno
inc
sub
jp
into
adc
fidivrl
push
mov
enter
mov
jns
push
xchg
add
fiaddl
xchg
sbb
pop
mov
nop
xchg
push
repnz
mov
adc
sarl
cmp
ss
mov
les
js
dec
mov
inc
rclb
arpl
sbb
sbb
xlat
outsb
add
xor
enter
aas
sub
sbb
arpl
xlat
out
push
jge
push
ficomps
lds
mov
arpl
hlt
fs
test
push
in
push
xor
lds
je
push
xlat
pop
inc
adc
cmp
loope
ljmp
in
mov
dec
fisubs
inc
ret
mov
fs
imul
and
push
cmp
outsl
dec
js
cltd
pop
pushf
or
push
mov
ljmp
ss
lea
lret
jno
fsubrs
cs
push
outsl
xor
repz
pop
shr
test
aas
adc
enter
and
jbe
fwait
pop
faddp
out
lahf
movsb
fcomi
adc
sbb
outsl
sbb
dec
jns
out
pop
fdivs
xchg
xor
lds
cltd
or
add
jp
sbb
mov
xchg
pop
xor
test
pop
fldenv
xor
repz
mov
ds
adc
rolb
out
push
bound
pop
mov
or
loopne
cli
inc
cmc
xor
push
aas
imul
push
flds
sub
movsl
or
mov
pop
mov
mov
ja
outsb
imull
cwtl
in
push
les
imul
add
jle
and
and
xor
imul
ja
sub
fisubrs
sbb
leave
mov
jp
mov
into
movsb
mov
jns
fadds
jo
push
sub
sahf
sahf
jp
loope
cmp
sub
and
nop
test
punpckhbw
xchg
cmp
or
pop
outsl
in
popf
push
push
mov
add
adc
cmp
add
insb
add
push
cmp
cmp
mov
inc
xchg
fs
add
mov
loop
push
pop
inc
xor
lcall
mov
xchg
es
mov
push
push
adc
loope
test
pop
adc
lret
jp
cwtl
shlb
call
jo
je
insb
call
jl
fsin
add
pushf
xor
jg
push
or
lock
sarb
sub
outsl
dec
pushw
pop
addr16
xor
xor
sbb
rorl
roll
neg
mov
pop
xor
mov
push
rcrb
shrl
jl
nop
or
fnsave
inc
in
out
into
loope
mov
or
pop
movsl
call
loop
insb
push
push
and
inc
testb
or
js
xchg
xchg
stos
daa
lcall
fnstenv
mov
add
call
sub
ret
xchg
enter
xrelease
add
xchg
aad
mov
in
mov
xchg
fdivs
and
dec
inc
lods
mov
ror
aas
adc
lcall
sub
orl
stc
mov
and
rcrb
or
repnz
xor
fimull
pop
fst
jno
stos
jmp
int
mov
adc
inc
inc
cwtl
and
enter
jmp
cmpsl
inc
jno
mov
lret
ljmp
xor
lock
lods
ss
mov
push
adc
enter
scas
pop
mov
sbb
imul
jne
jno
push
sub
dec
clc
aam
pop
out
or
or
sahf
scas
sub
inc
jge
push
xor
mov
subb
fabs
mull
js
outsl
inc
sub
lods
stos
xchg
out
and
roll
test
ljmp
and
jp
icebp
aad
cmp
mov
cltd
movsl
call
jecxz
mov
hlt
bound
adc
cmpsb
daa
leave
xchg
push
mov
sbb
je
not
push
jl
xor
scas
mov
out
std
jl
sbb
adcb
aad
or
fisttpl
pop
cli
imul
jae
lahf
test
mov
scas
fdivrl
rcrb
sar
fcompl
and
cmp
das
test
popf
adc
jne
mov
xchg
mov
jp
xchg
push
stc
cmp
push
or
not
sub
jecxz
pop
pushf
popa
leave
faddl
cmc
dec
aad
sub
adc
jmp
adc
testl
jl
test
inc
add
jo
add
dec
clc
pop
and
loopne
fwait
and
cld
neg
lcall
dec
or
repz
dec
into
scas
mov
test
xor
push
lcall
sbb
je
xlat
dec
adc
scas
pop
pop
sbb
mov
dec
lret
insb
sub
int3
push
pop
xor
pop
lds
out
rcl
stos
dec
push
hlt
rcl
adc
jp
std
pop
push
inc
dec
and
lcall
imul
mov
sbb
push
test
aas
jmp
jns
dec
jno
mov
sbb
and
sti
pop
out
bound
leave
sub
xor
fistps
js
xorl
dec
xchg
push
mov
std
lret
pop
and
sbb
or
adc
sbb
icebp
das
insb
aad
ja
repz
std
sbb
cmp
sub
and
pop
or
repnz
pop
das
sahf
mov
xchg
jecxz
jecxz
shlb
mov
cs
ret
xchg
cld
mov
stos
ret
mov
out
cmp
add
lods
ss
imul
inc
das
jmp
mov
hlt
cltd
pop
jb
push
clc
cmpsb
xchg
inc
cmpsb
adc
lret
dec
push
out
test
xor
lahf
shr
sbb
sub
fwait
inc
cli
fstps
lret
mov
cmc
add
ret
pop
mov
hlt
cltd
cmp
idiv
pop
xchg
sti
cmc
cmpsb
ret
add
or
int3
inc
rcl
mov
sbb
cwtl
mov
cmp
data16
mov
inc
aaa
sti
jle
or
rcrb
inc
ljmp
les
fs
cmpl
fcmovnu
xchg
popf
inc
pop
fwait
lret
jg
lcall
stos
scas
xor
fdivl
out
or
jns
jg
out
pop
xchg
mov
push
jl
enter
jmp
jl
leave
cld
push
testb
test
cmpsl
aaa
jecxz
in
push
rorl
and
pushf
and
imul
xchg
lahf
cmp
pop
cld
movsl
sbb
nop
out
mov
lock
mov
loopne
sbb
les
push
movsb
jnp
and
xor
jnp
daa
ss
xchg
outsl
push
cmp
sbb
in
xor
enter
hlt
sti
arpl
pop
out
pavgw
stos
push
aaa
ljmp
fidivrs
lods
push
push
outsl
inc
je
mov
mov
add
and
add
imul
nop
pop
icebp
mov
nop
fisttps
jp
fwait
sub
jns
inc
idiv
lods
adc
cpuid
jg
jmp
lahf
xchg
fiadds
mov
imul
sbb
sahf
mov
jmp
cs
lcall
cs
adc
mov
out
ja
test
cmp
fwait
pop
mov
and
test
xchg
enter
fs
loopne
stos
push
sub
lret
mov
in
inc
dec
pop
xchg
and
xchg
loop
mov
les
flds
inc
xchg
pop
pushf
int
sarl
pop
mov
pop
jb
out
mov
shlb
test
push
fisubl
cltd
pop
frstor
std
subl
cmc
pop
sbb
repz
cmp
cmpsl
xchg
dec
cwtl
mov
jno
push
stc
dec
cmp
mull
dec
sbb
mov
pop
pushf
mov
jl
pop
repz
loope
pop
pop
push
out
es
or
add
faddl
lcall
push
jl
addl
sub
adc
push
fs
or
inc
jg
imul
shll
mov
xchg
jbe
pop
push
pop
sbb
bound
call
test
out
scas
pusha
out
imul
stc
sub
daa
pop
push
jbe
int3
add
inc
into
jns
sub
inc
rcrl
loopne
push
add
data16
negb
dec
arpl
int
ja
dec
imulb
je
lods
fsubrs
xchg
pop
xchg
call
jle
push
cltd
sbb
push
or
sub
cmp
cmp
lea
xor
xorb
repz
popw
and
add
int3
xchg
enter
sahf
and
xor
insb
ds
in
xor
out
movntq
popfw
lods
fdivrl
adc
jge
ret
bound
clc
lds
or
sbb
xor
fldl
jecxz
test
mov
mov
or
and
sti
dec
scas
jne
cli
lea
mov
push
shlb
sub
mov
insl
insl
push
call
jp
pop
outsl
or
jecxz
jmp
movsb
mov
jle
or
adc
jno
lods
adc
scas
out
lods
cs
push
push
aad
cwtl
pusha
or
push
fiaddl
cmp
inc
xchg
js
mov
cmp
dec
sub
jnp
fcmovnu
mov
fwait
dec
adc
sub
xchg
pusha
movsl
jnp
add
cli
sbbb
xor
xor
jbe
inc
in
mov
mov
pop
mov
jp
fucom
sbb
xchg
hlt
xor
shlb
call
pop
cmp
std
push
sbb
dec
add
scas
andl
jl
call
mov
mov
std
xchg
repnz
jge
inc
rcrb
lahf
and
cld
popf
sbbb
xor
xchg
pusha
push
push
push
mov
cmpsl
xor
mov
or
test
jns
mov
xchg
testb
testb
es
xor
cmpb
adc
mov
je
dec
adc
pop
or
popa
test
mov
cmp
mov
idivl
push
stc
mov
jnp
add
xor
mov
dec
fists
add
jge
add
jg
and
xor
outsb
jnp
les
mov
pop
rclb
popl
push
jnp
sbb
push
fcomps
xchg
iret
ja
jbe
mov
test
mov
popa
test
jnp
negb
sbb
hlt
test
sub
mov
nop
enter
inc
stc
mov
cwtl
jp
jb
in
lods
mov
cs
xchg
push
js
xor
mov
lahf
aam
add
sub
cld
negl
movsl
cld
orl
dec
and
notl
sbb
xor
arpl
jmp
xchg
std
xor
icebp
jle
jp
fildl
scas
push
xor
dec
fidivs
cmp
push
inc
inc
mov
pop
imul
mov
xor
cmpsb
push
pop
lret
cmp
popa
pop
sub
inc
xlat
mov
sbbb
pop
icebp
mov
fldt
pop
sbb
in
jmp
pop
push
jmp
pop
data16
cmpsl
sarl
push
push
and
gs
cltd
ret
sahf
pop
push
jge
jnp
mov
out
jno
in
xchg
lret
outsb
aam
shlb
addr16
mov
mov
in
mov
outsl
into
pop
fnstenv
push
xchg
pusha
shl
cmpsb
push
into
imul
lods
push
ds
lds
sub
icebp
sahf
push
aaa
nop
dec
mov
stos
sbb
in
mov
nop
test
push
daa
leave
mov
dec
sub
push
xor
or
cmp
and
ficomps
dec
jo
icebp
out
pop
enter
dec
jmp
leave
sbb
cmc
and
scas
adc
rolb
mov
xchg
es
pop
pushf
les
negl
mov
in
int3
js
cmp
cmpsb
aas
inc
dec
pop
test
nop
mov
xorb
cmp
imul
aam
sbb
call
orb
push
dec
dec
scas
lret
fnstenv
pushf
loopne
push
xchg
movsl
mov
fs
arpl
add
mov
cmpsb
shrl
xchg
in
scas
or
fsubp
ljmp
popa
or
ss
ss
inc
add
jae
mov
adc
push
jns
cmp
pop
cwtl
stc
adc
aas
cmp
test
jae
lea
lods
cpuid
push
ret
adc
pop
add
mov
adc
hlt
xchg
jo
loop
sbb
push
and
push
or
cmpsb
sti
ss
scas
pop
loope
mov
jecxz
insb
add
scas
mov
cli
or
jbe
stos
cltd
sbb
mov
fadd
imul
cmp
insl
rorl
jnp
adc
or
pop
sub
or
in
mov
xchg
add
pushf
rcrb
push
inc
and
jno
mov
pop
repnz
jmp
adc
mov
mov
sub
pusha
xor
and
into
dec
sbb
adc
stos
pop
int3
ljmp
inc
imul
movsb
sub
push
adc
shlb
adc
jecxz
std
sbb
jae
mov
mov
lret
pop
test
pop
ds
push
jb
sub
int
shlb
dec
imul
and
outsb
scas
in
pop
imul
and
incl
adc
jle
enter
outsb
mov
cmp
aad
scas
mov
jmp
add
mov
pop
leave
sti
cld
addr16
stos
jae
clc
sbbl
add
xor
test
cmp
mov
mov
pushf
aas
das
out
gs
ja
call
ja
inc
sbbb
lods
insb
dec
aaa
push
and
mov
icebp
cmp
in
add
push
add
insb
fisubrl
adc
jg
xchg
xchg
addr16
or
jl
mov
jp
test
jmp
add
mov
pop
inc
xchg
dec
pushf
fistps
and
outsl
shll
jno
mov
pop
icebp
pop
shrb
pop
sub
mov
lea
xor
xchg
xor
mov
add
iret
push
cmp
cmpsl
mov
xorl
aas
mov
loopne
addr16
out
jl
mull
push
arpl
mov
jo
mov
test
nop
push
cmp
adc
sub
pushf
imul
sti
sbb
ljmp
cmp
test
data16
subb
push
mov
cltd
xchg
lea
add
loop
pop
fs
hlt
sbb
mov
sbb
pop
test
xor
gs
shll
fsubs
push
xchg
aaa
inc
fsts
pop
jae
loope
repnz
sahf
mov
outsl
mov
icebp
in
mov
add
mov
arpl
aas
mov
adc
mov
mov
call
jae
es
out
xor
and
daa
adc
jne
or
fisttpl
mov
inc
lret
add
or
in
xlat
pop
or
pop
cmp
imul
mov
out
dec
mov
xchg
jne
sub
jnp
sbb
mov
jo
add
push
nop
loopne
je
int3
fldcw
fmulp
mov
imul
sub
pop
xchg
mov
sub
jne
and
pop
and
and
and
jl
scas
push
lahf
lds
xchg
push
mov
xchg
jae
cwtl
push
or
xor
adc
ret
dec
stc
in
aas
xor
aad
aam
lcall
js
fisubrs
movsl
fs
icebp
arpl
repz
adc
aaa
rcll
sub
mov
mov
xchg
xchg
dec
gs
testb
inc
xchg
cltd
cld
insl
cltd
inc
lods
mov
pop
gs
dec
jno
push
fwait
dec
repnz
or
outsb
mov
dec
jle
movsb
and
data16
xchg
out
add
adc
lahf
rcrb
arpl
test
loop
imul
and
add
stos
jge
int3
imulb
push
xor
pusha
ret
cmp
ja
test
int
dec
jecxz
add
repnz
ja
jl
pop
fs
rorb
inc
xchg
xchg
lea
pop
imul
and
add
fidivrs
in
mov
push
adc
jmp
rcrl
push
in
daa
test
mov
test
into
popa
jns
add
and
xlat
mov
mov
test
mov
lock
sbb
jo
ret
pop
mov
mov
sub
sub
dec
ljmp
orb
mov
cld
sbb
sub
leave
pop
push
adc
sbb
fldl
jbe
pop
inc
hlt
repz
stc
aad
pop
dec
imul
cmp
mov
addr16
push
dec
jecxz
ret
cmp
andl
jno
enter
mov
mov
in
sub
clc
jmp
shlb
aas
in
aad
out
inc
mov
or
sbb
jg
push
jae
gs
add
pop
ret
stos
jmp
insb
mov
dec
movsl
cmp
mov
cld
or
mov
pusha
dec
xchg
jae
stc
cld
das
mov
and
jb
mov
loope
xor
dec
and
gs
rcrl
and
mov
pop
cwtl
shlb
das
pop
shlb
gs
push
sub
add
int3
bound
bound
xchg
aad
mov
jmp
jg
push
sbb
stc
daa
ret
fwait
hlt
jmp
testl
inc
sbb
push
and
movsl
popf
xor
pop
cmpsb
xor
loopne
int3
pop
or
lods
repnz
lock
mov
stos
and
mull
xor
mov
xor
sbb
iret
sub
ljmp
add
xchg
je
incb
nop
les
jmp
adc
je
les
mov
lock
xchg
bound
scas
jno
mov
test
sarb
mov
icebp
adc
sbb
mov
mov
iret
in
mov
and
cld
push
shl
lods
jecxz
xchg
pop
test
xor
imul
xchg
mov
sub
mov
push
lock
jmp
les
jne
les
lea
sub
adc
xchg
jae
cld
arpl
rorb
subb
add
mov
imul
mov
add
repz
adc
xor
lret
xor
push
repnz
dec
subl
sub
aas
cmp
fiaddl
push
aad
mov
lret
xlat
inc
lods
adc
in
frstor
mov
dec
jmp
aaa
int3
adc
in
inc
xchg
xor
xchg
mov
add
mov
shl
ret
push
testl
jge
or
mov
mov
push
test
das
clc
xchg
stos
rol
sbb
mov
rorb
lds
inc
push
adc
jo
and
mov
aad
in
mov
mov
cwtl
inc
push
shll
xchg
cmpsb
inc
sub
popf
jns
and
dec
push
test
dec
testb
mov
outsl
iret
mov
sti
sub
mov
test
sbb
inc
pushf
mov
dec
xchg
pop
movsb
inc
and
fldl
imul
adc
and
sbb
inc
iret
fbld
daa
into
or
push
cmp
add
xchg
sub
mov
cmp
loope
insb
push
cmp
fs
jmp
leave
addl
imulb
jae
xlat
insl
push
js
push
aad
int
xor
sub
rclb
dec
dec
mov
push
mov
push
inc
int3
dec
loope
mov
testb
push
jmp
shrl
repnz
mov
dec
stc
aas
jns
fnstsw
cltd
jle
je
js
in
sub
aad
gs
pushf
in
les
push
pop
std
push
out
inc
and
dec
gs
rcr
bound
fstpl
test
das
adc
pop
lahf
push
dec
cwtl
cmpl
pop
mov
mov
mov
test
movsl
out
addb
mov
pop
dec
dec
das
xchg
leave
divb
repz
sarb
rcrl
or
pop
rcll
cmp
xchg
adc
xchg
rorl
sbb
lods
les
inc
jle
rolb
mov
and
fstpt
aas
adc
cmp
dec
and
lret
and
rolb
fdivr
xchg
jecxz
nop
pop
rcrl
fnstenv
in
adc
push
nop
jmp
nop
repz
jecxz
xchg
shlb
mov
jnp
popa
inc
clc
outsb
bound
lea
push
lret
xor
test
cli
popa
test
mov
xor
in
ds
lds
and
sbb
jne
lds
push
add
insl
int3
sti
popf
push
int
dec
test
xchg
aas
inc
or
int
es
jbe
and
xor
jae
inc
adc
aaa
in
pop
mov
sti
add
push
movsl
mov
insl
test
in
xchg
push
jecxz
pop
xor
lods
stos
push
cs
test
pop
pop
xor
arpl
mov
repz
pop
test
cmp
fistl
std
sbb
jl
pop
loop
scas
jecxz
imul
lcall
mov
std
cmp
cmc
cltd
mov
mov
aas
xor
ja
lret
cwtl
cs
cmp
lahf
daa
and
fwait
sub
es
jmp
push
sti
in
rcl
call
fisttpll
stc
dec
push
imul
mov
nop
adc
mov
imul
mov
dec
stos
dec
push
pop
fs
jbe
maskmovq
negl
pop
cli
arpl
ljmp
push
nop
cmpsl
push
hlt
orb
dec
loopne
cs
push
out
adc
outsl
les
add
sub
or
mov
and
iret
scas
pop
iret
ljmp
pop
and
insl
cs
into
cwtl
popa
fs
jnp
out
and
xor
pop
dec
out
push
mov
pusha
or
add
flds
add
fisubrs
insl
int3
adcl
jl
adc
add
in
std
popf
mov
in
cli
stos
sub
cmpsb
push
xor
mov
fcompl
mov
or
mov
pushf
jmp
pop
sbb
mov
or
sarl
out
xchg
jo
adc
cmpsb
mov
pop
mov
jb
loope
and
gs
sub
arpl
into
ficompl
lods
jmp
mov
out
flds
jmp
movsb
sbb
cs
sahf
movsl
pop
into
cwtl
push
pop
xlat
pop
sub
adc
mov
test
outsb
or
xchg
jmp
inc
scas
shrb
add
loop
add
scas
and
ficoml
movsl
pop
pushf
xchg
mov
or
mov
inc
or
push
ret
sbb
mov
daa
stc
inc
aas
filds
pushf
inc
aam
or
sub
add
sahf
xchg
loope
fisubrs
push
pop
mov
dec
mov
es
ret
push
pop
test
pop
sub
xchg
pushf
popa
dec
into
xor
mov
xchg
cld
sbb
push
xchg
xorl
jae
mov
icebp
mov
push
ret
mov
pop
adc
fs
aam
repz
jae
add
pop
mov
loope
cmp
je
sbb
shrb
data16
or
cmp
xchg
jbe
dec
scas
scas
out
adc
sbbl
push
or
jg
and
or
dec
pop
js
stc
popa
adc
addb
shll
in
outsl
sahf
jno
or
adc
xchg
or
scas
or
mov
dec
dec
pop
jecxz
push
jg
or
ljmp
sub
xchg
mov
jo
mov
mulb
jo
mov
insl
outsl
pop
sub
decb
mov
push
fisttps
pop
dec
jg
icebp
sahf
fsubs
idivl
cltd
jecxz
fs
fbstp
push
mov
cmp
xor
xor
cmp
pop
add
xchg
aas
push
inc
arpl
jb
adc
cmp
scas
jno
in
repnz
jg
outsl
lock
aas
faddl
xchg
fwait
jmp
mov
push
out
loopne
testb
jmp
pop
jl
and
dec
sbb
ss
mov
daa
mov
outsb
shlb
inc
cmpl
xchg
test
sbb
xabort
mov
pop
pop
inc
ds
jno
negb
shlb
add
lds
xor
jae
aaa
nop
cmp
add
xchg
push
xor
or
jge
dec
les
repz
scas
adc
ret
out
lcall
dec
popa
aaa
std
nop
and
xlat
push
push
test
aas
pop
mov
sarl
icebp
pop
pop
inc
xor
pop
sbb
or
inc
mov
inc
ror
and
mulb
notb
push
jmp
push
inc
ficoml
ljmp
mov
popfw
fdivrp
gs
test
sqrtps
sahf
xor
cmpsl
ret
idivb
and
and
je
imul
div
popf
roll
hlt
mov
mov
adc
mov
pop
sbb
stc
mov
std
inc
sub
loope
ror
and
jle
sub
sbb
cltd
pop
lret
xor
push
cvttps2pi
insb
call
adc
sub
fcmovnb
mov
push
sub
mov
lahf
add
push
nop
std
or
inc
xchg
movsl
push
into
mov
ds
pushf
lret
push
sahf
mov
fisubl
pop
xor
jne
mov
and
xchg
push
mov
loop
xchg
cmp
sub
adc
push
jp
popa
rcrl
inc
xor
cmp
imul
shlb
and
and
cmp
inc
dec
mov
adc
push
out
mov
sub
nop
cmp
divl
pusha
push
xor
dec
jp
subb
or
fnstenv
mov
fs
pop
mov
adc
data16
in
mov
out
cli
shr
cld
xor
out
inc
xchg
shr
test
into
je
rcrl
aas
jle
out
jo
sti
mov
insb
loop
xchg
fistpll
out
xchg
sub
pop
sbb
xor
push
shlb
inc
pop
mov
sbb
stos
shll
push
test
or
xor
push
testl
imul
dec
cmp
push
data16
pop
ror
push
dec
cmp
jmp
push
mov
sub
dec
pop
shlb
js
jno
sub
jns
stos
test
inc
pop
dec
mov
arpl
inc
jge
adc
pop
out
daa
mov
fsubl
es
push
mov
cmp
insl
fstl
mov
enter
aad
sbb
es
divl
sbbl
sti
pop
insl
dec
jbe
jle
mov
jl
lret
push
cmc
shlb
popf
dec
inc
add
mull
jo
or
pop
out
dec
or
xchg
ja
mov
lret
push
sub
jle
cmp
sub
orb
xchg
dec
aas
pop
mov
adc
mov
fs
and
mov
jecxz
dec
cmpsb
pop
nop
insb
jmp
rcrl
pop
fnstcw
fisubl
mov
aam
push
jne
adc
sbbl
neg
adc
cld
mov
sub
cmp
adc
sbb
nop
pop
inc
mov
scas
push
dec
ficoml
and
sub
xor
cmc
or
sbb
push
sti
mov
aaa
shll
xor
cltd
leave
out
dec
nop
into
loope
push
add
cli
test
pop
inc
mov
data16
movb
mov
mov
adc
jp
adc
ja
test
mov
sbb
cmp
xchg
fsts
push
xchg
pop
cmc
mov
bound
rorl
mov
imul
xor
out
stos
add
sbb
adc
inc
in
test
pop
mov
mull
sbb
add
lods
sub
mov
insl
dec
out
jbe
cmpsl
jae
xchg
in
rsqrtps
out
and
sbb
mov
repz
rorb
and
pop
adcl
sahf
stc
inc
loop
bound
cmp
adc
fcom
je
insb
iret
loop
mov
mov
dec
push
pushf
adc
inc
rcl
lret
jmp
cmpsl
jne
scas
sub
cli
pop
out
add
mov
pop
pop
dec
mov
sub
repz
test
xor
add
push
cwtl
loopne
aas
pop
imul
mov
cltd
pop
fwait
in
push
test
pop
pop
jg
aaa
enter
and
xor
addb
out
vshufps
adc
or
sub
lock
cli
adc
call
cmp
popf
pop
in
negb
popf
rorb
push
in
mov
and
inc
pop
add
ss
jmp
mov
mov
cwtl
test
shrb
mov
mov
hlt
pop
xorl
aad
dec
cs
push
pop
sub
mov
inc
push
outsb
popa
push
dec
cmc
cs
test
pop
mov
sub
pusha
aam
jne
sbb
pop
fs
std
add
dec
push
daa
fdivrp
push
pop
cmpsb
js
jnp
jno
aas
cmp
mov
mov
fisubl
lcall
dec
sbb
jo
outsl
inc
xchg
or
pop
fsts
adc
lock
fcomps
popf
nop
pop
or
icebp
or
and
mov
mov
in
hlt
imul
cmpsb
cmp
sbb
sbb
fbstp
push
cltd
mov
push
inc
scas
in
xor
pop
sbbb
cmpsl
xor
push
adc
ret
cmpsb
jnp
pop
mov
ss
lods
pop
lcall
mov
xchg
mov
jbe
int3
push
sub
pusha
xchg
inc
jg
or
sub
xchg
mov
and
lods
sbb
into
and
pop
jp
dec
cli
mov
rorb
pop
das
cs
or
push
mov
sarb
les
xor
push
mov
imul
xlat
mov
xor
sbb
in
xchg
testb
pop
mov
xchg
dec
mov
clc
std
pop
fisttpll
ss
or
jmp
les
jle
xchg
rcrl
or
mov
imul
xchg
pop
lea
sbbb
sbb
push
mov
xchg
loop
dec
rcrb
add
stos
out
cmp
movsb
icebp
test
xchg
adc
xchg
xchg
pop
loope
jg
stos
pop
mov
out
jnp
std
adc
fildll
xchg
dec
insl
push
xor
dec
lcall
xor
or
pop
add
sub
lahf
pushf
sahf
and
loopne
xchg
insb
stos
push
stos
movsl
imul
dec
mov
into
aad
subb
jne
fisubrl
add
lea
xor
sti
cmpsb
mov
dec
jbe
mov
int
mov
and
mov
dec
insb
or
jmp
fsubr
dec
jle
outsl
ljmp
arpl
jns
push
xchg
cli
push
push
push
or
sub
insb
sbb
lret
and
mov
and
cli
xor
mov
ret
mov
inc
pop
mov
lcall
icebp
mov
sbb
pushf
int3
lret
arpl
test
cmpsb
lahf
xor
dec
insb
xchg
adc
out
leave
xor
and
mov
cmp
inc
sbb
xchg
xchg
das
cmp
popa
add
xchg
mov
mov
cmpl
mov
push
and
daa
out
xchg
inc
mov
push
or
sub
cmp
mov
push
cmp
pop
scas
test
ror
push
int
cmpsb
mov
stos
sbb
xor
cmp
sbb
data16
imul
xchg
out
paddq
adc
xchg
stc
outsb
daa
xchg
sub
push
add
xchg
fadd
ror
mov
sbb
sbb
mov
sahf
add
mov
repnz
movsl
sbb
mov
jle
push
loope
out
jno
test
mov
push
testl
push
push
shll
sub
pop
shr
sub
int
sbb
fdiv
mov
repnz
mov
ret
mov
bnd
rclb
lret
das
add
fisubrl
popf
jge
rol
push
cmpsb
out
lahf
repz
sub
shrb
sbb
or
fadds
pop
mov
xchg
dec
push
enter
rcrb
mov
dec
test
xor
pop
push
adc
mov
shrl
xchg
lret
sbb
add
jae
aad
cmpsl
sub
call
call
into
xchg
int3
sbb
mov
cmpsl
jle
and
test
sub
lret
test
lea
push
icebp
mov
push
adc
xchg
repnz
mov
sbb
sub
scas
test
pop
scas
jnp
int3
mov
and
sbb
mov
in
js
loopne
xchg
cmp
xchg
mov
add
mov
jp
aaa
imul
and
pop
sub
js
pop
cmpsl
les
lds
popf
gs
push
sub
adc
xor
mov
mov
enter
idiv
arpl
dec
xchg
sub
bound
cmp
inc
jo
roll
out
push
loopne
fxch
pop
xchg
xchg
lods
add
mov
sbb
data16
xchg
and
mov
test
cmp
sbb
add
cltd
jo
inc
mov
inc
sbb
insb
jne
in
cmpsb
cmp
dec
pandn
ret
iret
aaa
fdivs
inc
lea
popf
jg
push
push
pop
xor
ficomps
stos
inc
cld
or
cmp
lods
mov
roll
shrl
sub
in
mov
xchg
adc
push
mov
lock
adc
cmp
pop
rorl
dec
mov
push
mov
sar
push
in
xchg
adc
xor
out
xor
repnz
dec
or
cmp
in
mov
sub
mov
inc
mov
and
clc
pop
negl
cmp
jmp
popa
rol
dec
xchg
xor
sbb
test
les
mov
call
lcall
xor
scas
repnz
shrb
mov
imul
mov
lods
jmp
repz
ljmp
loopne
pop
hlt
and
mov
inc
lahf
push
lock
cmp
pop
out
jo,pn
xor
push
jns
xchg
jno
mov
fimuls
in
outsl
xchg
rorl
inc
cltd
mov
sub
sub
pop
jo
sahf
or
adc
test
pusha
xor
xchg
rclb
nop
aam
mov
or
in
cmc
push
arpl
imul
sbb
outsb
cmp
adc
addl
in
in
ret
gs
movsb
leave
mov
dec
loop
pop
js
orl
sbb
dec
shrb
lcall
mov
cmpsb
jae
out
loop
push
pusha
xlat
mov
lret
je,pt
std
mov
fimuls
sahf
mov
jp
aaa
fcmovbe
xor
xchg
rcrb
fcmovnbe
mov
mov
sub
mov
pop
test
mov
out
add
push
inc
ret
fs
sub
mov
pushf
xchg
rcrl
mov
out
and
hlt
leave
outsl
sbb
xor
mov
nop
mov
mov
insl
stos
mov
jmp
fs
fneni(8087
and
std
mov
adc
call
stc
sti
sahf
push
gs
jp
mov
dec
insb
negb
leave
aas
xor
fwait
lods
jno
mov
xchg
les
es
nop
xor
lds
repz
sti
ds
jecxz
xor
shll
pop
xchg
inc
dec
push
mov
add
or
mov
and
mov
lock
mov
popa
lea
nop
mov
jbe
insl
aam
out
sub
in
mov
adc
inc
imul
cmp
ljmp
cmp
mov
adc
mov
push
fstpt
pusha
aam
sub
jno
adc
xchg
ds
jbe
push
pop
sub
and
mov
movsb
imul
js
mov
repnz
and
or
es
dec
sub
mov
pop
pusha
or
nop
sbb
jbe
sub
arpl
and
pop
fwait
scas
push
mov
popa
into
mov
lcall
mov
das
fdivrs
push
loope
lret
cmpsb
hlt
pop
push
sahf
mov
sbb
in
xchg
mov
jbe
or
dec
in
and
aad
aad
pop
dec
jb
ret
push
aam
mov
xchg
and
hlt
je
jmp
movsb
arpl
bound
cltd
loopne
sbb
xchg
inc
scas
sbb
mov
sub
mov
fcmovne
mov
cmp
push
xchg
mov
in
lock
lcall
mov
pop
dec
cld
mov
fcmovne
dec
out
stos
in
test
push
and
mov
fcom
test
fbld
jno
imul
xchg
js
or
push
pop
cld
je
sub
push
jno
out
mov
mov
sub
mov
and
icebp
test
movsl
cmp
aad
bound
in
mov
frstor
aaa
mov
movsb
mov
mov
jp
cmp
mov
orl
jae
xchg
lahf
jae
icebp
adc
shlb
rorl
and
jb
xchg
arpl
dec
jno
and
les
sub
in
jle
push
adc
adc
push
adc
call
cmp
xchg
and
adc
sub
and
movsl
xor
inc
incl
in
dec
and
mov
sar
xor
stc
dec
inc
pop
lock
inc
fdivr
js
xchg
arpl
loopne
fistl
int
dec
imul
mov
imul
inc
push
pop
push
pop
sbb
mov
ret
xchg
ficompl
sbb
cli
mov
addl
jge
lods
addb
and
dec
cmc
lea
push
xor
stos
xchg
fwait
test
mov
cltd
std
sti
clc
adc
push
cs
xor
incb
out
mov
cmpl
dec
arpl
dec
lds
and
arpl
and
pusha
xchg
jb
in
adc
sbb
add
mov
xorl
jne
jmp
out
lock
jl
xchg
shrl
xchg
lcall
dec
sbb
xchg
add
dec
mov
mov
sub
xor
or
addr16
shll
in
rolb
loope
mov
lcall
add
push
mov
fildl
out
or
cltd
test
ljmp
cmp
adc
inc
sub
push
out
cld
dec
test
dec
daa
push
dec
cmp
mov
xor
push
add
adc
movsl
xor
aaa
push
pop
inc
data16
mov
xorb
into
adc
push
xchg
xchg
sbb
pop
add
icebp
dec
imul
push
repz
or
imul
aaa
mov
mov
add
sub
lcall
jl
xchg
mov
dec
fiadds
push
fists
push
add
xor
out
sbb
pop
mov
mov
ljmp
sbb
stos
xchg
in
xor
jmp
cld
inc
dec
mov
int3
daa
cmpb
out
cmp
stos
pop
cli
out
pusha
out
rcrl
leave
cmpsb
adc
inc
scas
mov
sbb
sub
inc
jbe
dec
fdivrp
in
das
bound
sub
dec
addb
sub
add
out
or
pop
adc
mov
sbb
sub
dec
pop
mov
fcmovnu
dec
lea
test
mov
out
sub
sbb
xor
push
pop
mov
out
and
into
pop
ds
lea
or
jo
pusha
pop
or
pop
cmp
sbb
xlat
and
bound
xor
fs
imul
fsub
cmp
or
mov
or
ja
dec
scas
cmp
sub
rorb
pop
addl
repnz
sub
dec
fnstenv
icebp
int3
lock
mulb
hlt
je
xor
lahf
shlb
push
sbb
push
enter
lds
xor
loope
pop
leave
mov
or
adc
cwtl
pop
xchg
pop
xchg
cmp
movsl
cmc
fidivrs
outsl
pop
mov
mov
aas
imul
loopne
mov
push
cmp
cmp
test
pushf
scas
or
jae
dec
popa
lahf
shl
cli
out
enter
dec
xor
inc
pop
push
cmpsl
rorl
mov
stos
jecxz
sub
fs
stc
das
outsb
mov
lahf
lret
add
xchg
push
inc
mov
lahf
ss
adc
sub
fistps
lahf
mov
shrl
pop
sbb
xor
lahf
and
out
sbb
jnp
and
pop
push
mov
sub
fs
mov
rorl
rorl
cs
inc
jo
jge
push
addr16
std
xor
in
test
add
cwtl
repnz
rcll
xor
pop
insl
cmp
mov
shr
jmp
cmp
lods
call
pop
jp
adc
xchg
xchg
ror
mov
outsl
inc
pop
cmpsb
adc
dec
rcrb
sub
mov
loope
adc
es
insl
lods
add
inc
xchg
fwait
out
pop
daa
cmpsb
sbb
popa
and
cmp
jmp
test
stos
add
mov
add
ss
shl
fdivl
call
insb
stc
mov
xchg
lcall
mov
mov
loope
insl
jb
cmp
mov
mov
faddl
pop
sub
cmp
cmp
scas
test
add
mov
cltd
ja
pop
xchg
lea
push
ror
lods
pop
nop
lret
loope
add
add
jg
sub
sahf
pop
sti
stos
push
adc
adc
es
and
inc
push
xchg
cmpsb
scas
mov
in
push
cmpsb
jg
stos
jnp
jge
fcmovne
cltd
push
les
cwtl
rclb
and
mov
xor
dec
mov
mov
jl
outsb
leave
xchg
dec
fsubrl
dec
jg
std
daa
ficompl
pusha
and
adc
mov
mov
stc
es
ljmp
incl
push
cmp
cmc
xor
mov
int3
or
adc
xor
cli
add
sarl
stc
push
pop
movsl
sub
cmp
sub
les
mov
loop
xchg
mov
sub
push
sub
or
mov
push
cmc
xchg
out
popa
out
push
add
xchg
jmp
in
mov
inc
mov
sub
and
cwtl
scas
dec
fnstsw
stos
jge
loope
das
test
subl
cmp
sub
cltd
ss
mov
scas
je
cld
pop
call
pop
jge
rclb
mov
cmpsb
sub
mov
mov
call
aam
mov
ljmp
adc
repz
stc
adc
hlt
imul
pop
adc
mov
push
jl
int
pushf
cmpsb
popa
pop
or
int
dec
outsl
fiaddl
clc
jbe
push
inc
push
shr
xchg
arpl
fwait
outsl
jg
pop
jne
dec
inc
in
insb
xchg
movsl
xchg
push
cld
mov
push
and
loopne
ss
pop
mov
lgs
cld
lds
cs
mov
add
dec
fcmovne
dec
loopne
orl
cmp
push
inc
ljmp
iret
sbb
mov
daa
lods
dec
jo
push
es
push
xchg
sti
jecxz
arpl
mov
insl
sbb
inc
test
imul
jne
xchg
xor
inc
jp
daa
add
dec
pop
mov
and
mov
pop
xchg
ret
jbe
mov
stos
mov
mov
mov
mov
insb
push
jo
pop
lcall
xchg
scas
sub
push
lods
shll
lret
xchg
mov
mov
xchg
fcompl
mov
aad
je
and
adc
lcall
add
mov
imul
aad
and
in
shlb
mov
dec
stc
gs
cld
movsl
nop
sbb
popf
mov
stos
mov
or
lret
imul
push
data16
or
call
and
nop
out
jo
push
sti
adc
mov
pop
in
mov
rol
pop
int
out
adc
add
call
repz
adc
aas
enter
sub
leave
js
push
int3
mov
cmpsl
ficoml
int3
andb
aas
sbb
rol
xchg
push
and
loopne
out
xchg
dec
pop
add
mov
flds
add
test
xchg
lds
pop
push
push
cmc
pop
mov
jae
inc
xor
push
push
xor
sbb
add
movq
lods
pushf
xor
cmp
and
add
xchg
inc
icebp
xchg
std
jns
sahf
mov
das
lret
mov
ljmp
outsb
shl
add
iret
scas
xchg
dec
mov
jnp
fcoms
es
mov
mov
cmp
cmpsb
xchg
sarb
mov
and
xor
ljmp
mov
jge
fcompl
xor
dec
adc
push
in
mov
mov
aas
iret
mov
fists
das
xor
jecxz
in
neg
mov
cmp
mov
or
xor
cmpsb
ud0
sbb
dec
jge
ficoml
adc
ret
sub
jnp
mov
fmulp
pop
and
fwait
dec
iret
sbb
cmc
jbe
std
xchg
pusha
xor
leave
xchg
push
or
pop
sbbb
call
out
ljmp
test
rolb
xor
nop
insb
mov
push
pop
hlt
sbb
mov
mov
inc
and
xlat
movsl
jo
sub
inc
sahf
stos
insb
xchg
nop
pop
and
mov
pop
mov
jmp
sub
xchg
idiv
in
xchg
pop
sbb
jle
add
lock
cmp
xchg
add
push
sub
sti
add
jno
adc
inc
mov
dec
shll
push
xchg
fmul
xor
daa
and
shr
inc
fsubs
call
sub
stos
rolb
push
fcompl
movsl
lret
or
lea
int
ficoml
mov
cs
jae
aaa
mov
pop
fidivrl
xchg
add
pop
int
in
fdivs
cltd
xrelease
js
cmp
dec
lret
inc
dec
out
scas
pop
jecxz
test
daa
ret
das
mov
pop
mov
cmp
push
pop
push
mov
jg
and
les
mov
inc
and
cltd
fstpl
into
fcoml
cmp
cmp
inc
bound
in
daa
aas
mov
cmp
cmp
sahf
sub
aam
sub
mov
pushf
jp
aas
clc
add
nop
pop
loopne
mov
rcl
jecxz
mov
insl
pop
sub
lret
dec
insb
daa
test
dec
xor
gs
ljmp
mov
stc
rorb
out
int3
jnp
rcll
inc
pop
ljmp
scas
mov
push
pop
adc
sahf
mov
out
mov
sub
mov
or
inc
loop
push
sub
jmp
out
mov
fdivs
inc
push
into
lea
xor
out
ficoml
sbb
lea
mov
call
loopne
xchg
insl
gs
mov
mov
sub
inc
je
test
mulb
mov
hlt
inc
pushf
imul
mov
scas
pop
cmp
xchg
out
add
pop
fdivs
out
or
shl
sub
pusha
and
sbb
rolb
mov
sahf
mov
sub
outsb
bound
jp
addl
scas
lds
fists
xchg
xor
imul
inc
mov
add
ret
mov
inc
into
shlb
xor
fs
scas
dec
sahf
inc
stos
mov
add
in
inc
adc
addr16
test
adc
xchg
dec
sahf
jno
push
inc
inc
add
jne
xor
icebp
adc
dec
and
mov
out
push
rcrl
nop
lret
outsb
movsb
mov
add
cli
mov
fdivp
fdivs
xchg
jp
ja
push
mov
push
pop
jg
adc
push
dec
jne
push
xor
sbb
ret
pop
movsb
nop
mov
iret
sub
push
and
jbe
mov
inc
cmp
ja
pop
and
sub
test
movsl
and
dec
and
jle
cmp
adc
int3
outsl
pop
mov
jmp
xchg
xchg
sbb
iret
cmpsl
add
lea
xchg
lock
cmp
sbbb
mov
les
mov
xor
dec
lods
jae
insl
imul
and
sub
cmp
out
clc
add
shlb
adc
loop,pn
lock
out
imul
adc
or
jle
fiaddl
cmpsb
or
and
xchg
xchg
insb
decb
sbb
movsb
inc
and
jbe
sub
out
mov
adc
popa
subb
dec
imul
adc
or
sub
and
mov
xchg
and
rcrb
jmp
adc
jae
inc
data16
mov
xchg
aam
xchg
insb
or
and
xor
push
sarl
adc
lcall
jl
mov
js
sti
mov
addr16
dec
subl
scas
dec
adc
push
std
mov
mov
cmp
or
insl
jmp
xchg
fistpl
mov
mov
add
dec
jg
test
jecxz
mov
loopne
mov
xchg
jge
fcomps
out
lcall
js
data16
imul
loop
and
and
fildll
ret
pop
xor
movsl
stos
jns
dec
scas
add
out
idivb
insl
jbe
push
push
push
sbb
gs
mov
push
sub
push
bound
jmp
sarl
fs
or
mov
out
push
ljmp
jmp
sbbl
add
outsb
or
outsb
clc
ss
and
xor
xor
pop
scas
and
rclb
pop
nop
shlb
mov
fwait
mov
jae
dec
sbb
divl
in
icebp
pop
pushl
outsl
pop
sub
or
mov
into
pusha
cmc
lcall
outsl
movsb
sbb
push
mov
fs
pushf
push
sbb
lret
test
mov
push
fiadds
cmp
imul
push
cmp
loope
scas
push
lock
pop
jbe
pop
pop
mov
rol
or
push
dec
out
fistpll
imul
aam
xor
xchg
inc
pop
dec
sub
fistpll
repz
insl
shll
xor
icebp
loope
iret
sbb
negb
add
and
push
and
loopne
loope
mov
call
nop
mov
test
subb
xchg
xorl
repnz
lea
dec
jb
pusha
inc
and
cmp
lods
sbb
push
jns
ffreep
push
xor
xor
mov
ret
rorb
mov
movb
repnz
pop
add
adc
call
inc
ret
mov
enter
pop
mov
in
sub
jge
sbb
add
cmp
cmp
ss
mov
das
popa
inc
and
fistps
les
roll
ljmp
mov
mov
test
aaa
sbb
popl
sbb
sbb
leave
dec
aaa
sbb
cli
mov
aaa
loop
pop
ficomps
stc
loope
testb
sti
ret
xchg
mov
xchg
push
add
cmpsl
stc
mov
daa
movsb
mov
rolb
xchg
cmpsl
or
mov
gs
or
and
cmp
push
rcr
movsl
out
into
jl
push
aam
adc
imul
in
js
mov
aas
lds
inc
hlt
mov
mov
add
ret
divb
jp
das
adc
mov
sub
arpl
jp
imul
dec
adc
pop
in
cltd
repnz
shl
inc
fimuls
arpl
aaa
or
repz
test
push
hlt
dec
jmp
or
dec
nop
xor
rcrb
nop
mov
adc
push
fs
push
aam
sub
ja
sub
lcall
mov
pop
shll
lret
inc
jge
sub
or
jge
fiadds
xlat
pop
shrl
push
sub
loopne
jne
js
jno
mov
or
and
cmc
gs
sbb
sbb
mov
addb
jl
add
fidivrl
pop
mov
aas
inc
clc
lea
lret
and
and
xchg
rcrl
popf
adc
lcall
dec
test
jg
in
cmc
out
and
jge
fldl
pop
pop
push
push
in
push
xchg
out
sub
shrl
cmp
lret
pop
mov
in
fs
stc
pop
or
mov
shll
into
hlt
mov
andl
add
ljmp
stos
mov
insl
push
cmc
mov
push
jge
daa
mov
xchg
adc
pop
sub
pop
mov
ljmp
fistpl
mov
fildll
inc
nop
movsl
loop
xlat
nop
sbb
and
aad
xlat
test
neg
jl
inc
push
jnp
movsb
mov
xchg
adc
pop
mov
lock
hlt
pop
mov
or
cmpsl
dec
or
inc
pop
out
stos
sub
pushf
lret
ret
into
push
sub
mov
clc
xor
xor
icebp
repnz
xchg
mov
stos
xor
add
out
cmp
adc
mov
mov
jo
imul
dec
and
inc
dec
scas
mov
sbb
push
push
sub
xor
popf
xchg
faddl
shl
lds
pop
clc
mov
xorl
insb
popa
out
inc
mov
repz
dec
push
pop
je
mov
cltd
cmpsl
push
push
push
mov
cmp
cld
mov
nop
adc
fldcw
or
leave
push
les
outsl
cld
xchg
sub
lahf
cli
jg
cltd
xorl
sbb
nop
xchg
mov
call
lea
xchg
jae
hlt
sub
js
sub
xor
jno
out
cmc
xor
push
addr16
jo
insb
sub
adcb
sub
mov
lds
push
leave
dec
push
sub
push
mov
pop
xor
push
cld
hlt
mov
and
cmc
mov
pusha
or
lret
es
sub
mov
or
push
andb
jne
test
hlt
cmp
cmp
arpl
std
mov
repnz
stos
sbb
sub
cmpsl
jae
inc
nop
insb
and
decb
pop
cmp
pop
pushf
test
popf
adc
sbbb
mov
popf
gs
jl
jae
lahf
insb
jns
and
dec
adc
hlt
out
sub
adc
test
outsl
fwait
mov
mov
xchg
andb
cs
push
dec
push
inc
stos
adc
push
pop
adc
subb
repnz
dec
filds
adc
sub
xor
repz
or
push
xor
mov
pop
sub
cmp
lods
iret
mov
xchg
xchg
pusha
jno
push
nop
cmp
call
js
inc
subb
mov
pop
mov
mov
mov
ss
mov
nop
jecxz
jb
je
faddp
push
inc
rol
rclb
cmpsb
jno
mov
jmp
adc
fmull
mov
xchg
mov
cmpsl
dec
mov
test
inc
mov
arpl
cmp
fcmovnb
inc
and
addl
dec
or
lods
test
and
fcmove
in
scas
inc
scas
and
sbb
jge
dec
sbb
std
xchg
into
sbb
roll
in
pop
pop
lods
bound
xchg
stos
xchg
mov
dec
lcall
shl
or
movsl
xchg
dec
aas
stos
mov
inc
movsl
bound
jl
gs
in
mov
sbb
mov
pop
pop
sbb
push
pushf
lahf
je
sub
pop
movsb
aam
add
mov
push
inc
ja
into
and
inc
add
fisubrs
push
in
add
pop
inc
enter
nop
faddl
inc
shr
push
mov
xor
subl
movsb
pop
xchg
mov
hlt
xor
xor
adc
xchg
dec
sbb
cmpsl
inc
ficomps
mov
sbb
sub
out
jmp
lret
mov
xor
or
jae
in
pop
fs
xchg
rol
add
das
psubq
jae
or
jle
jmp
adc
popf
cs
dec
push
neg
cmc
pop
jbe
mov
imul
mov
push
mov
adc
clc
push
xchg
jnp
push
lret
mov
cmp
scas
cmp
jge
mov
sbb
std
lcall
or
mov
and
jno
lea
push
sbb
addr16
mov
loope
cld
das
cs
jle
sub
mov
daa
push
fadd
popf
push
dec
insb
stos
loop
aad
es
es
shll
mov
sbb
pop
xchg
mov
imul
test
dec
aas
cltd
cmp
movsl
cmp
es
xchg
cld
cmp
ficoml
xchg
jb
fs
aad
ficomps
xchg
bswap
cmp
and
frstor
cmp
aas
dec
pop
sbb
mov
mov
lahf
mov
pop
sbb
cmp
push
enter
push
sbb
jmp
dec
orb
clc
jecxz
push
mov
mov
xchg
call
imul
jns
jmp
enter
add
sbb
xor
mov
inc
fimull
cli
dec
mov
pop
pop
ds
xchg
inc
out
inc
hlt
xchg
and
andb
mov
mov
and
adc
push
mov
cmpsl
lcall
shlb
push
and
js
popa
push
cmp
cmp
andb
fcomps
mov
xor
sbb
rclb
lods
in
or
jmp
push
jmp
icebp
pop
mov
xor
addl
rclb
mov
xchg
mov
aas
cmp
pop
clc
mov
mov
xchg
movl
jno
push
mov
xor
lods
cmpsl
or
pusha
sbb
push
add
ret
cmp
inc
mov
neg
shrb
mov
lock
jg
mov
adc
push
pop
or
pop
mov
or
shlb
mov
sub
inc
mov
pop
insl
fisubrs
and
mov
mov
add
jno
cmp
or
pusha
in
and
dec
xor
xor
sti
das
shll
add
iret
and
into
jno
popa
ja
loopne
xchg
sub
test
leave
test
pushf
sub
int
xor
aam
cltd
ret
sbb
js
jne
mov
xorb
shrl
cmpsb
stos
icebp
notb
sub
jl
xor
daa
adc
out
xchg
fisubl
mov
push
lret
pop
jmp
jae
ret
cmpsl
loop
sub
mov
jle,pn
cmp
mov
pop
sar
clc
insb
jns
push
cwtl
cwtl
and
add
rol
mov
push
into
sbb
xchg
leave
xor
scas
stos
add
popa
mov
xchg
out
repnz
inc
jns
lcall
fidivrs
or
cmp
fnstsw
xor
call
dec
jno
jge
dec
mov
adc
inc
fst
dec
xchg
jmp
xor
shr
pop
sub
lock
jnp
xchg
pushf
lret
pop
xor
loopne
jnp
xchg
js
imul
enter
mov
orb
std
or
lods
pop
lahf
jbe
add
mov
jnp
mov
ret
sub
dec
dec
inc
inc
rcll
cmp
bnd
outsl
aas
scas
add
mov
movsl
or
mov
stos
xor
hlt
xchg
adc
push
cli
dec
bound
daa
sbb
imul
jbe
jnp
int
pop
mov
mov
lds
imulb
cmp
xchg
push
loopne
push
and
and
fs
divl
xchg
pushf
ds
sub
hlt
scas
gs
jle
sub
dec
insl
popf
mov
or
sbb
lds
jbe
xchg
lods
add
dec
jnp
inc
lock
in
sbb
dec
push
pop
xchg
loopne
aam
mov
jecxz
mov
mov
or
rclb
arpl
jne
adc
rcll
adc
das
mov
push
fwait
pop
adc
icebp
dec
mov
ds
shrl
pop
dec
lret
xor
cmc
xchg
and
fwait
mov
shlb
in
sahf
push
sbb
fldenv
shrl
loop
push
mov
push
ret
xor
xchg
int
shlb
jge
or
pop
loope
lock
out
pop
into
push
push
lods
cmc
sar
dec
dec
inc
inc
mov
push
je
lods
xchg
test
cltd
xchg
mov
jo,pt
push
dec
adc
bound
cmp
aaa
mov
jge
int
out
push
mov
in
and
push
fs
sub
push
stc
pop
daa
or
das
cmp
jmp
out
lcall
cmp
imul
in
in
inc
sub
jno
es
adc
xchg
push
ljmp
mov
fstpl
jne
mov
test
mov
ftst
mov
xchg
lods
sbb
xor
and
or
repnz
movsb
mov
mov
cmp
scas
cli
or
scas
cmovb
lds
push
lcall
fildl
ret
iret
fidivrl
jae
inc
test
sahf
xchg
inc
jmp
or
nop
shlb
and
cmp
shl
popf
pop
out
mov
int3
pop
and
xor
xor
jb
bound
mov
sub
mov
stc
cmpps
bound
mov
fcmovnu
lcall
or
mov
cmp
sub
call
lea
jle
push
pop
jb
imul
pop
sbb
mov
add
ret
in
cwtl
and
aam
sbb
adc
push
lcall
pop
jo
pop
sub
cmp
fisttpll
test
rol
adc
and
sub
lret
iret
xor
ret
iret
das
iret
cmp
jnp
loope
cmpsb
jmp
pop
jl
es
mov
outsb
gs
push
mov
cmpsb
jle
jb
rorl
add
mov
in
pop
rcl
add
mov
aam
mov
xchg
xchg
pop
push
add
in
mov
mov
sub
cld
sbb
sub
dec
test
leave
sbb
pusha
xchg
fwait
jae
mov
jno
xor
mov
stos
sbb
cmpsl
fwait
ret
push
push
iret
xor
aad
push
jae
sarl
lahf
or
mov
push
mov
imul
movsb
mov
pop
dec
leave
mov
and
repz
mov
jno
pop
cmc
xchg
les
aam
faddl
mov
dec
mov
mov
or
dec
in
and
inc
sub
inc
hlt
or
pop
scas
adc
mov
es
push
inc
mov
in
ljmp
lahf
cmpsl
adc
or
and
pop
sbb
mov
out
xlat
mov
or
add
adc
cld
sahf
or
and
and
jno
cli
repz
inc
sub
xchg
das
repnz
mov
movsl
icebp
repz
push
mov
mov
lret
scas
inc
jnp
cs
sti
ja
cmpsl
xor
cmp
rorb
and
imul
fs
fcmovnu
dec
push
mov
mov
mov
jle
add
jno
mov
out
imul
lods
inc
pusha
jl
hlt
imul
xor
xchg
mov
repnz
cwtl
pusha
inc
cld
jge
lods
dec
push
outsb
sub
jmp
mov
jno
xchg
mov
pop
inc
jbe
movsl
sub
mov
cmp
xor
movsl
imul
imul
scas
mov
push
pushf
pop
cwtl
push
or
das
xor
jge
ja
pop
fildl
movsb
std
fidivs
jle
int3
mov
pop
fidivl
jg
loope
sarl
out
leave
sbb
jbe
or
int
add
lcall
xchg
cmpsb
xor
ljmp
dec
out
loope
lods
push
sub
js
xor
push
jne
mov
test
cli
test
enter
and
int
dec
fnstsw
outsb
mov
and
mov
push
test
adc
lock
pop
insl
imul
addb
push
movsb
inc
ret
jo
add
sbb
push
mov
push
mov
or
sub
test
push
pop
ja
xchg
loope
out
cmc
imul
mov
movsl
ficompl
dec
enter
jmp
sbb
testl
out
test
repz
fstpt
xchg
pop
jne
rcrb
mov
andnps
cmp
inc
inc
outsb
repnz
test
adc
lods
add
jecxz
push
adc
ja
mov
add
test
sahf
addl
xchg
and
cmp
jb
mov
add
xchg
or
in
jno
jnp
jae
add
add
xor
in
pop
push
cmp
pop
jle
incb
xor
jle
dec
mov
ljmp
out
push
mov
dec
les
andl
xchg
sbb
ja
ret
lret
and
xor
pop
xlat
fs
jmp
xlat
pop
sub
pop
adc
dec
and
enter
fnstcw
xchg
mov
mov
shlb
lds
mov
push
mov
lea
xchg
pop
pop
add
mov
insb
push
mov
mov
or
mov
jle
and
add
loope
loop
popa
and
loop
gs
into
cmp
sbb
jbe
stos
test
jno
inc
call
shll
pop
jp
cltd
std
jb
xchg
lret
cmp
ja
dec
mov
and
orb
andb
adc
adc
xchg
or
insl
and
or
cmp
adc
adcl
jl
addl
popf
cmc
mov
clc
mov
cmp
fnsave
jae
mov
sub
movsl
rorb
in
mov
cld
or
repnz
gs
add
cmp
insl
sti
or
enter
and
ret
sbb
insl
sub
nop
repnz
jp
jo
int
xor
jb
adc
jae
rcl
pusha
push
lods
mov
jg
add
push
mov
xchg
call
cli
jge
and
fisubrs
jns
imul
dec
imulb
mov
mov
clc
mov
lods
sub
hlt
mov
lahf
sub
les
int3
and
cmc
rcr
and
xchg
and
xor
mov
sbb
mov
push
rep
mov
outsl
mov
and
fisttps
stos
push
dec
outsl
sbb
push
pop
cltd
sbb
lret
cld
mov
shlb
cmp
in
js
scas
adc
or
cmp
fistpl
mov
repnz
dec
mov
int3
aam
xor
dec
rcrl
arpl
icebp
jns
cld
out
mov
lods
pop
ficoms
scas
repz
jp
jo
fs
int
pushf
mov
xchg
xchg
mov
push
sub
iret
sbb
mov
mov
push
cmc
adc
popf
rcrb
sub
cmpsl
mov
jmp
xchg
imul
mov
mov
rolb
or
jnp,pn
mov
and
negb
test
sbb
dec
ja
sbb
or
inc
std
jp
dec
or
jo
and
adc
je
aaa
imul
push
mov
add
lds
outsb
jnp
enter
test
mov
clc
jle
dec
icebp
adc
mulb
sbb
dec
xlat
jge
scas
ret
lds
jne
cwtl
in
or
loope
mov
ret
cmp
pop
fwait
jl
inc
mov
fwait
stos
pop
pop
movsb
test
cmpsl
mov
ljmp
test
push
std
iret
or
fiaddl
jp
push
les
clc
jb
cld
jae
hlt
popa
ja
pop
inc
enter
testb
push
arpl
mov
testl
scas
out
xchg
mov
sbb
xchg
arpl
mov
add
loop
pusha
or
push
mov
cmp
mov
dec
loopne
and
lea
js
scas
xchg
pusha
scas
cmp
xchg
loopne
or
fwait
cmp
add
mov
lock
js
mov
jge
sbb
test
dec
pushf
xor
aam
cmp
out
xchg
cltd
aam
inc
in
ss
stos
scas
clc
or
loope
repz
jbe
xor
shrl
adc
ja
ja
jl
sub
push
ja
push
fstl
jnp
es
pop
stc
outsl
arpl
pop
mov
lods
enter
pop
mov
and
dec
aad
ret
fisubrs
ffree
es
rclb
lods
cmp
enter
gs
shll
xor
dec
test
in
hlt
xchg
dec
test
pop
sbb
xchg
stc
push
negl
cmp
loopne
dec
out
sbb
xor
nop
pop
and
pop
sbb
subl
push
inc
stos
inc
or
or
mov
fwait
int
or
shlb
sub
pop
push
jo
push
sbb
xlat
mov
popf
pop
aaa
mov
fidivl
gs
mov
pop
shll
inc
xchg
and
movsb
mov
shlb
sahf
daa
sub
adc
xchg
lcall
push
push
clc
push
nop
pop
iret
jp
sub
dec
cwtl
bound
sahf
cmp
mov
xchg
fwait
sti
dec
loop
pop
pop
daa
loopne
shll
sarl
pushf
imul
xchg
aas
jle
pop
jo
mov
push
cld
sbbl
mov
test
cltd
loop
pop
xor
xchg
andb
jbe
mov
sub
daa
mov
jp
aas
int3
lods
cmpl
loop
rcrl
mov
cmpsl
jae
jge
adc
or
inc
nop
jmp
nop
jle
iret
xor
jns
inc
mov
stos
in
int
mov
or
pushf
jno
icebp
jno
pop
xor
insb
pop
out
ficoms
lea
movsl
out
in
jecxz
push
mov
movsb
in
insb
daa
add
dec
subb
add
pop
mov
call
jge
pop
fdiv
inc
jno
inc
in
cltd
rol
mov
test
out
xchg
loopne
dec
adcb
aas
xchg
xor
pop
sub
ret
aas
mov
rcl
cs
pop
notb
ja
es
sahf
lahf
cmp
sahf
lahf
mov
out
lret
xor
fdiv
cltd
mov
insb
lahf
std
mov
pop
sub
imul
es
movsb
push
cmp
mov
sbb
int
insb
add
test
rcrl
jno
fildl
mov
pop
or
mov
bound
lret
cmp
enter
pushf
mov
adc
sbb
xlat
jne
jne
pop
hlt
adc
jl
lcall
out
inc
and
dec
icebp
jge
add
sub
test
adc
pop
nop
aaa
fstps
cmp
repnz
push
inc
movsb
sbb
jecxz
inc
sbb
dec
jle
imul
stc
das
jg
xor
nop
jg
sbb
mov
nop
fcoml
jp
cmp
jmp
imulb
sbb
jnp
insl
add
dec
fstpl
pushf
ss
aas
add
pusha
xor
int3
nop
jle
mov
shrb
or
fstpt
adc
cmp
ret
hlt
lret
ja
loopne
test
push
sahf
scas
push
sbb
call
push
jns
cmp
shl
cltd
dec
into
shrb
stc
ret
fdivr
cli
adc
cli
scas
gs
in
pop
out
jb
sub
push
add
push
int3
mov
jae
ds
scas
icebp
addr16
rcl
or
pop
in
enter
mov
dec
pop
rcrl
out
mov
inc
ds
push
pop
call
out
mov
test
xor
jmp
imul
and
dec
xchg
clc
mov
rcr
xchg
das
gs
mov
arpl
mov
jge
notb
and
movsb
lcall
fcmovnbe
lods
xchg
dec
frstor
pop
mov
xchg
fstl
pop
cmp
les
xor
in
fdivrl
in
lock
jno
and
add
jno
data16
shlb
pushf
cmp
and
sub
push
cld
sbb
sub
cmc
or
mov
divl
mov
loope
jge
imul
mov
lea
fwait
jle
out
xlat
and
loopne
push
mov
scas
cmpsl
in
mov
jle
aad
xor
push
fnstsw
push
cli
mov
mov
cmp
dec
sbb
roll
pusha
inc
sbb
aas
xchg
fs
lds
jle
lret
and
subl
xchg
adc
fnsave
ss
inc
push
mov
lret
xchg
add
cmp
jae
out
movsb
cmpsl
icebp
cmpsb
pop
mov
dec
and
and
aam
mov
cld
xchg
dec
scas
push
push
mov
mov
fs
jnp
dec
mov
pop
add
loopne
adc
repz
enter
movsb
push
rclb
std
mov
inc
fstl
xchg
xchg
jg
int3
dec
in
xor
push
lock
ret
mov
loope
dec
push
mov
call
xor
insl
nop
sub
aad
fcompl
add
testl
sbb
jg
inc
mov
int3
in
jmp
pushf
faddp
bnd
pushf
and
push
jl
mov
dec
mov
rcr
lock
pop
in
add
pop
inc
add
stc
pop
xlat
sub
cmpsl
xor
lods
movsb
cmc
repnz
in
mov
movsl
mov
in
add
stos
fstpl
cli
dec
hlt
lock
rcrb
jmp
inc
lods
pop
pop
not
fstpl
sbb
push
sbb
in
mov
sahf
imul
xchg
pop
jmp
stos
sub
mov
inc
out
popa
push
lahf
xor
outsb
jg
addl
sub
bnd
xor
xchg
or
mov
addr16
lds
pop
jge
popf
fs
arpl
sub
std
xchg
stos
mov
inc
sbb
jnp
out
sub
mov
sbb
jg
inc
push
or
out
test
ja
cmc
pop
jle
xor
pusha
mov
xor
jbe
push
push
and
pusha
pop
jp
loop
mov
push
inc
jl
imul
ror
sbb
push
fcos
int3
pop
call
divb
push
xchg
cld
cmc
mov
mov
xlat
sbb
sbb
das
pushf
cmc
xor
xchg
jp
inc
dec
out
fbld
jmp
mov
cmp
fcomps
sub
mov
push
lock
test
mov
xor
cmpl
ret
inc
rcl
inc
jo
dec
sub
subl
cs
adc
call
cmp
shrl
scas
inc
adc
std
mov
mov
sbb
or
lret
cli
mov
or
clc
loopne
pop
xchg
repz
scas
cmp
mov
jge
cld
and
ficompl
jo
shr
iret
cmp
cmp
sub
das
pop
decb
into
std
int
es
jo
mov
jmp
push
negb
and
imul
sub
les
mov
mov
mov
icebp
aaa
sbb
pop
push
call
int
jno
arpl
add
pop
sub
add
jg
popl
adc
sbb
push
test
sbbb
ds
xor
lods
jns
pop
cld
sbb
mov
jge
subb
mov
jno
icebp
lods
stos
inc
jb
sub
and
mov
push
xor
mov
sahf
addl
stc
pusha
cltd
loope
inc
mov
dec
insl
int
inc
shl
fadds
sub
sub
ss
mov
popa
daa
cmp
addb
sbb
outsl
jbe
imul
and
or
rcll
aam
lods
inc
jo
add
and
sub
sub
jns
out
popf
pop
nop
dec
mov
push
cmp
mov
push
cmpsb
mov
clc
jbe
repz
push
sub
inc
mov
add
sub
fadds
jb
adc
call
dec
push
mov
ja
and
sbb
sahf
xor
push
std
adc
push
jb
addl
jns
pop
jo
icebp
pop
pop
shll
mov
ret
jbe
js
ret
ret
dec
fldt
jecxz
sbb
lea
test
mov
jnp
loope
xchg
cmpsb
imul
sub
add
lds
cmp
add
push
mov
push
aas
jecxz
pop
inc
in
ret
mov
leave
ljmp
mov
dec
aaa
push
inc
stos
mov
push
ja
jecxz
fisubrl
xchg
pop
mov
dec
mov
jb
pop
fidivrl
ja
push
rolb
outsl
popa
fimuls
insl
xchg
std
lret
insl
pop
rcrl
in
jbe
scas
sbb
fwait
xchg
and
fnstsw
insb
inc
arpl
ja
stc
push
cmpsb
sti
cmp
add
mov
push
cli
dec
sbb
cmp
jle
dec
fwait
mov
or
ds
test
xchg
mov
xor
imul
enter
mov
xlat
mov
daa
pop
inc
or
and
cwtl
popa
xchg
not
pop
add
mov
iret
add
fildll
add
pop
sarl
iret
inc
cltd
jbe
and
js
xchg
ja
xor
pop
sub
lods
gs
popa
test
add
int3
xchg
int3
roll
mov
mov
jmp
movsl
out
adc
subb
add
test
or
mov
jp
or
mov
loope,pn
out
cmp
lock
jge
xchg
lods
js
out
ret
sub
scas
or
mov
lods
mov
arpl
in
test
bound
cmpsb
shr
fsubs
andl
fstps
xchg
pop
adc
in
adc
repnz
push
pop
fimuls
loopne
mov
push
inc
push
xchg
push
xor
mov
sub
popa
mov
stos
icebp
cld
jb
push
or
fldenv
imul
divb
sti
xchg
imull
xchg
loop
jl
mov
scas
divb
pop
mov
xchg
pop
pop
mov
mov
xchg
daa
push
mov
pop
loop
fmul
imul
jle
cmpsl
lret
les
mov
jg
jp
push
div
pushf
sub
or
sub
mov
mov
add
mov
jge
jp
pop
jb
xor
jmp
jb
xor
int
ss
icebp
push
jg
call
aam
cmpsb
mov
sub
fsubl
test
test
cmp
fwait
xlat
mov
jg
aad
in
inc
fimull
mov
int3
adc
test
movsl
push
push
movsb
mov
pop
lea
les
mov
xor
add
xorb
sub
cmp
mov
pop
in
frstor
xor
sbb
mov
loopne
xor
add
cltd
cmp
sub
dec
push
imul
pop
cli
std
leave
mov
fwait
inc
ret
clc
push
xchg
xchg
adc
cld
dec
xchg
outsl
pop
test
add
mov
jmp
jl
stos
push
mov
sub
adc
scas
dec
insb
dec
adc
leave
cmp
inc
in
stos
jbe
fsubp
mov
dec
pop
addr16
cs
cmp
shlb
pop
jg
sbb
fsubs
dec
inc
ret
xchg
push
arpl
dec
mov
mov
lock
rcll
sub
std
sbb
jge
bound
jb
outsb
fildll
xor
fsubl
push
mov
mov
repnz
arpl
cld
fdivl
add
jo
inc
xchg
outsl
push
pop
pop
xor
xacquire
popa
scas
enter
pop
dec
out
sarl
sbbl
ljmp
loopne
xor
and
loope
scas
adc
jge
xchg
add
mov
popf
or
pusha
fstpl
dec
fildl
dec
mov
lock
push
inc
inc
xchg
mov
aaa
rolb
je
mov
xor
jne
add
in
jns
movsb
mov
mov
lock
aam
icebp
jnp
jnp
cmp
mov
mov
arpl
jle
cmp
cvtdq2ps
sti
add
inc
sarl
mov
outsb
sbb
sub
cs
cwtl
loop
add
push
xchg
add
pop
cmp
jg
stc
addr16
adc
xor
idiv
shll
jo
lret
mov
cmp
test
xor
fdiv
mov
sti
and
jo
insl
cmp
icebp
in
dec
outsl
test
pop
cwtl
xor
test
ds
lahf
hlt
pop
mov
dec
les
ljmp
aad
pop
subl
repz
in
fdivrl
adc
mov
push
ret
cmpsb
in
ret
mov
mov
or
cmp
inc
push
in
mov
jmp
adc
inc
into
xor
test
cmp
xor
inc
sub
pop
movsl
cld
sub
xchg
mov
adc
mov
jecxz
movsl
movsb
mov
mov
mov
xchg
test
pop
xchg
push
ret
xor
xor
jae
dec
pop
fbld
ret
inc
gs
enter
push
mov
imul
jne
pop
pushf
rep
sbb
mov
mov
xchg
jp
sahf
cmp
adc
scas
stc
insl
leave
cmc
scas
pushf
shlb
xlat
sbb
cld
sub
push
cmpsb
mov
cwtl
cmc
ljmp
mov
lcall
cmp
in
cmp
outsl
and
out
gs
push
xor
lcall
mov
hlt
inc
jo
lea
movsl
mov
mov
out
gs
fnstenv
mov
test
mov
daa
jmp
pop
lds
mov
lock
test
xor
push
fnstenv
leave
and
pop
cmc
stc
lds
or
xchg
in
rclb
hlt
mov
pop
cmc
lahf
in
shll
fcoms
push
xchg
add
dec
cmp
daa
stos
pop
xorb
in
push
in
dec
sbb
pop
dec
in
test
inc
or
popa
cld
or
cmp
fwait
scas
push
mov
lea
mov
sbb
pop
dec
lret
xchg
cmpb
ret
mov
and
fwait
adc
js
inc
xor
out
cltd
xchg
cmpsl
push
int
push
lahf
cmp
pextrw
mov
pop
mov
popa
mov
add
xchg
xchg
jbe
jle
jmp
pop
inc
or
and
xchg
mov
jns
mov
inc
fs
cmp
xor
push
lds
mov
sub
xchg
or
lahf
xchg
fistps
inc
fnsave
sbb
fldt
add
lret
stos
int
mov
lea
inc
jb
dec
fdivrs
and
sbb
push
mov
cmp
sub
popf
inc
dec
mov
gs
imul
push
mov
xchg
rolb
pop
inc
sub
xchg
xor
out
mul
xor
xor
js
and
cli
mov
xchg
mov
test
mov
lock
inc
mov
daa
stc
int3
mov
mov
or
dec
add
push
xor
cli
jns
pop
inc
inc
pop
test
jne
lret
movsb
fdivs
mov
inc
cmpsl
jle,pt
lods
stc
out
xchg
loop
mov
mov
dec
rcrl
enter
and
mov
gs
jecxz
cmp
dec
les
dec
dec
test
mov
jb
ds
pop
push
xor
and
js
or
pop
inc
mov
mov
cmp
push
or
mov
mov
mov
or
add
xlat
jge
dec
testl
pop
ds
inc
mov
rcrl
mov
cmc
pop
sbbb
jnp
insl
ja
insl
push
jecxz
stc
leave
and
aaa
or
es
insl
in
loopne
dec
std
mov
jl
mov
adcl
sub
push
adc
jne,pn
insl
sarl
loope
lcall
les
adc
test
arpl
fistpll
mov
mov
into
push
dec
adc
ss
dec
xchg
cmp
cltd
dec
icebp
ds
enter
inc
pop
inc
pop
out
data16
fisubrs
shlb
pop
fcomps
mov
aaa
popf
and
ret
and
cmp
mov
shll
fisubrl
leave
xchg
popa
mov
jo
cld
adc
and
hlt
jno
xor
pop
pop
fistps
test
xor
insb
lcall
mov
ret
sti
arpl
test
psrad
mov
mov
cwtl
mov
sti
mov
and
aaa
dec
pop
or
adc
aad
sub
inc
xchg
pop
push
lods
push
pop
jae
mov
pop
mov
mov
cmp
sbb
xor
out
jno
inc
or
int3
dec
dec
repnz
ret
mov
xor
iret
dec
cmp
xchg
stos
add
in
sahf
pop
test
or
ret
lcall
jae
pushf
add
fcmovnu
sub
inc
pop
mov
mov
movd
ss
ja
sbb
xor
or
insb
test
pushf
insl
mov
ja
aas
dec
jae
test
mov
push
push
rorl
fldt
loop
adc
fisubrl
in
movsb
add
cmp
popf
andb
adc
fs
mov
lods
cmp
mov
pop
int3
lahf
jne
ljmp
ss
aad
push
sarb
xor
pusha
lret
enter
and
icebp
or
icebp
inc
sub
xor
inc
loope
cmc
mov
dec
sub
test
pop
sub
mov
cmp
flds
inc
ljmp
int3
andb
push
ss
stos
add
xchg
mov
inc
inc
cld
adcb
rcrl
out
das
ret
mov
cmpsb
popf
and
xor
mov
add
and
popa
mov
inc
pusha
cmp
mov
sarb
mov
xchg
xchg
xchg
movsl
dec
push
mov
scas
adc
lods
sbb
cli
cmpsl
into
adc
sbb
fiadds
fdivr
fcoms
lahf
dec
jbe
imul
mov
push
stc
loope
aad
dec
mov
mov
cs
mov
sbb
fdivrp
inc
movsl
lret
xchg
scas
faddl
jle
and
xor
lea
notl
mov
dec
lahf
nop
sub
int3
or
xor
add
pop
test
fdivrs
cmp
jle
in
dec
add
push
mov
jl
gs
inc
pop
js
inc
addr16
pop
mov
push
xor
mov
repz
push
mov
cwtl
popf
fcoms
fwait
sbb
mov
ljmp
sub
mov
cmp
ss
dec
and
lcall
jge
sahf
and
pushf
cs
outsl
mov
rep
and
imul
icebp
push
ds
lds
repz
or
jb
gs
stc
push
outsb
sarl
xor
jl
dec
sub
xchg
and
ss
or
jo
mov
call
mov
mov
cli
mov
xchg
xor
xor
lds
mov
sub
js
insb
idivl
pop
movsl
mov
xor
cs
lcall
int3
sbb
inc
pop
subl
and
mov
js
sbb
pop
mov
shrd
xchg
movsl
mov
rorl
scas
nop
xor
into
mov
mov
shrb
sub
mov
ror
adc
dec
sub
orl
loopne
jle
jl
mov
test
jb
and
insl
sub
stos
jae
jb
sub
jo
mov
pop
or
data16
inc
adc
mov
or
push
jecxz
popf
movsl
je
mov
dec
ds
or
outsb
pop
push
movsl
scas
sbb
stos
pop
mov
mov
mov
nop
movsb
and
pop
cs
xor
jbe
sahf
fisubl
cs
dec
mov
dec
ja,pn
xor
and
mov
out
sahf
insl
imull
dec
nop
add
adc
jbe
cmp
sub
jg
imul
pop
adc
add
das
stc
imul
decl
push
in
and
dec
insl
lea
mov
sub
es
adc
adc
and
std
mov
pop
add
imul
push
sbb
mov
ficomps
jne
adc
test
mov
out
scas
inc
lcall
sahf
or
test
sbb
xor
and
jo
push
clc
rcll
pushf
push
out
jg
aas
das
not
cmp
jle
lcall
rcrl
jle
and
fs
cmp
xlat
mov
leave
loopne
inc
sub
fcoml
and
mov
inc
cld
std
push
sbb
pop
fistps
lea
xor
dec
or
cmpsb
mov
add
add
mov
lret
pop
imul
push
push
jmp
mov
push
cld
stos
mov
mov
mov
mov
add
inc
inc
nop
dec
insb
lcall
dec
push
pushf
push
adc
lcall
push
jmp
nop
pop
xchg
inc
fldenv
xchg
fisubrl
pusha
push
sub
subb
cmp
pop
sub
icebp
nop
push
jecxz
xchg
int
push
jmp
mov
lahf
add
cli
mov
lods
mov
js
jecxz
inc
pop
pop
mov
insl
std
mov
mov
mov
and
sub
pop
xchg
sub
inc
rcrl
setp
aas
into
orl
call
arpl
test
icebp
out
lods
xchg
fcomi
mov
stos
inc
subl
or
cwtl
aam
je
lds
aad
addr16
dec
push
ja
inc
cmc
and
inc
jae
mov
fisttps
mov
out
add
pusha
jg
adc
jo
mov
add
push
pop
out
addr16
stos
sub
xchg
push
dec
mov
cs
jl
sti
cwtl
cmp
inc
insb
int3
xor
cmpsb
rcrl
xchg
xor
xor
movsb
addb
js
insl
dec
shll
inc
loop,pn
pop
imul
cltd
rorl
jle
fwait
int
lret
sbb
mov
inc
and
mov
xchg
lock
adc
mov
mov
popf
lods
mov
adc
mov
xchg
push
int3
jmp
shrl
movsl
sbb
xorb
rcl
xor
mov
sub
setl
push
jnp
add
movsl
mov
adc
jae
les
scas
ret
lcall
pop
jno
jnp
adc
mov
cmpsl
and
mov
stos
sub
pusha
je
ret
loop
loop
dec
and
or
in
mov
adc
pusha
idiv
jne
inc
rolb
out
stos
jbe
lods
inc
in
push
lcall
test
or
and
pushl
mov
sub
jne
and
enter
pop
mov
lods
cs
imul
and
or
lret
out
jns
push
into
mov
sbb
vpunpcklqdq
push
loop
jnp
xor
stos
jge
mov
or
in
dec
out
add
mov
dec
addb
aaa
mov
out
xchg
mov
scas
sub
pop
enter
testb
test
push
or
out
or
stc
lods
leave
mov
push
and
pop
mov
add
dec
aad
lock
cmp
mov
inc
mov
sbb
ret
fadds
pop
and
inc
mov
mov
xorb
das
add
cmc
popf
push
out
dec
xchg
les
iret
jo
pop
aad
les
icebp
inc
repz
sbb
xchg
movsl
pop
lods
bound
jp
ss
loopne
in
gs
movsl
cmp
jecxz
pop
cmc
pop
lret
imul
mov
pop
lods
xlat
inc
xchg
sti
jle
mov
push
push
sbb
mov
fcomps
loope
cli
push
lea
test
mov
mov
pop
push
pop
add
out
mov
out
push
fildll
jle
and
inc
dec
adc
sub
shl
scas
divl
test
popa
into
inc
xor
xchg
mull
into
lods
sbb
sbb
cmp
inc
xchg
inc
pop
mov
test
popf
xor
jg
out
scas
xchg
sub
adc
cmpsb
aam
js
pop
ret
mov
pop
daa
jp
sti
insb
adc
jbe
mov
insb
insb
nop
mov
stos
and
imul
sbb
inc
scas
push
xchg
cmp
mov
call
adc
xchg
vpcmpgtw
add
mov
mov
inc
loope
hlt
out
repz
imul
mov
xor
push
das
cmc
mov
insl
sti
test
ret
and
adc
xchg
sarb
leave
push
cltd
mov
fisubl
cmp
les
xchg
fisubrs
vpcmpeqw
sub
std
xor
pop
add
push
mov
push
lahf
enter
mov
repnz
jbe
mov
mov
mov
push
add
xor
sub
sub
scas
mov
xor
dec
sub
icebp
lods
push
popa
mov
xchg
sub
pop
inc
mov
test
mov
or
add
sub
pop
and
loop
insl
lods
es
cld
pop
xchg
sbb
lock
xor
push
loopne
cmpl
shlb
sub
jnp
mov
pop
push
testl
orl
xchg
jge
or
arpl
aas
rcrb
loopne
test
insl
loope
push
cltd
js
sbb
loope
sbb
mov
push
test
test
insl
test
pusha
pop
and
mov
test
mov
mov
mulb
popa
lret
mov
mov
xchg
int
pop
and
push
xlat
jg
mov
sub
das
dec
push
and
lds
ds
popa
and
sbb
jno
jl
shrd
dec
enter
lods
popa
mov
xlat
xchg
adc
cmp
sub
sbb
cli
divb
outsb
loopne
insb
testb
lret
in
or
stos
mov
jne
jge
lea
pusha
inc
test
push
dec
add
and
and
testl
std
and
in
add
pop
les
dec
shll
xchg
mov
mov
test
repz
pop
jle
cmp
jmp
test
push
add
aad
fwait
push
inc
stos
or
push
jle
add
fucomp
dec
cltd
jno
jne
data16
push
cld
test
test
lods
lret
test
pop
dec
inc
mov
test
xor
ja
cmp
inc
movsl
cli
pop
mov
mov
mov
push
shlb
je
push
ds
mov
rolb
mov
pop
fsubr
pop
jno
mov
mov
outsl
dec
pop
cmp
dec
daa
sub
cltd
xchg
jle
mov
mov
dec
mov
push
out
add
mov
xor
dec
lahf
or
or
mov
push
push
push
popa
push
outsb
inc
add
or
mov
in
arpl
dec
jge
in
lcall
enter
adc
mov
mov
xchg
pop
pop
and
mov
jmp
dec
dec
fcoms
in
fidivs
adc
xlat
and
inc
and
int3
jl
dec
sbb
cmp
jle
divb
imul
cld
jb
shrb
cltd
and
push
and
jecxz
test
test
lds
iret
jecxz
or
mov
mov
pop
cmp
dec
xchg
jg
test
cmp
cmp
fiaddl
cmpl
imul
popa
xchg
inc
push
and
data16
dec
push
push
jbe
es
sbb
stos
add
dec
popl
mov
mov
ret
cmpsb
int3
add
inc
out
sbb
xor
aaa
xchg
imul
sub
imul
outsl
or
ret
mov
mov
cmc
inc
jb
fcmovbe
sub
inc
imul
fsubrs
mov
jo
sahf
sbb
or
xor
cld
sub
jmp
repnz
loope
sti
fldcw
sub
add
rcrb
xor
jmp
lds
mov
inc
iret
enter
mov
jl
sbb
mov
mov
xchg
xor
stc
sbb
icebp
push
mov
icebp
inc
andb
test
xchg
gs
cmp
mov
int3
push
sub
push
and
sub
into
std
mov
mov
push
xchg
xlat
lods
sub
or
lock
and
xchg
mov
nop
or
sub
add
or
stc
shll
loope
imul
les
mov
cmpsb
mov
cmpsl
ljmp
cld
shlb
out
addb
or
mov
push
pop
mov
insb
xchg
in
int3
jmp
nop
dec
lds
or
jno
movsl
cmp
inc
test
dec
and
addr16
mov
pop
mov
sbb
pop
loopne
xchg
sub
cli
mov
addb
jmp
inc
lcall
inc
add
mov
test
xchg
inc
int
popa
xor
xchg
cmp
scas
jo
inc
je
xchg
jb
mov
inc
incb
mov
mov
jg
xor
bound
cwtl
sub
faddl
imul
inc
jge
imul
mov
test
add
std
push
dec
leave
mov
mov
jl
push
out
adc
jb
push
cmp
cltd
cmp
cmpsb
mov
inc
cs
mov
inc
sahf
mov
jnp
jo
cmp
andb
adc
and
sub
xchg
call
in
or
popa
inc
push
inc
xor
mov
div
add
iret
pop
rclb
adc
cmc
cli
inc
ljmp
std
aad
add
stos
movb
jg
pop
repz
mov
add
cwtl
leave
or
rclb
mov
sub
or
insl
mov
mov
push
fs
jmp
dec
add
mov
dec
sbb
mul
cmp
adc
loope
sbb
lret
repnz
mov
add
jge
pushf
gs
add
sahf
push
push
sub
sbb
inc
cltd
inc
xor
mov
addr16
sub
nop
xorl
add
out
xor
cmp
insl
add
mov
adc
insl
scas
cmp
mov
inc
into
mov
stc
xchg
jb
jmp
sub
jno
push
xchg
add
jl
icebp
push
call
push
cmp
pop
mov
lea
fcmovnb
repz
mov
push
sub
mov
inc
call
sti
add
or
mov
in
mov
clc
dec
pop
shlb
xchg
xchg
xor
jo
jo
aaa
aam
adc
imul
test
inc
or
sub
xchg
punpckldq
aaa
adc
iret
mov
movsl
pop
int
psubd
sbb
insb
jnp
jo
fwait
push
inc
and
inc
mov
das
sbb
push
cmpsb
sahf
nop
push
mov
pushf
push
jnp
sub
cmpsb
nop
jbe
icebp
fwait
lods
int
cmp
cmp
mov
dec
outsl
ficoml
loopne
mov
xchg
add
incb
and
andb
test
xor
in
xchg
call
movsl
xlat
jmp
xchg
sbb
leave
movsb
sub
sbb
out
in
sub
jmp
cmp
in
dec
or
les
lret
rcrb
lods
cmp
mov
mov
out
or
cmc
cmc
leave
test
divb
into
jne
cmp
cld
fbstp
pop
cmpb
gs
test
imul
pop
outsb
popa
pop
arpl
fwait
idivl
xchg
in
xchg
shlb
ffree
pop
mov
aad
pop
mov
shlb
dec
mov
inc
mov
iret
jl
ficoms
inc
mov
loopne
pop
push
jb
push
pusha
mov
aam
out
rcr
inc
mov
leave
aas
inc
pushf
push
or
cmp
enter
jno
or
std
mov
or
lea
mov
nop
sbb
sub
mov
sbb
sar
cmp
inc
inc
cltd
or
sbb
sub
inc
mov
adc
and
sbb
push
xchg
mov
mov
dec
in
hlt
popf
sbb
cmpsb
add
and
xchg
pop
mov
mov
push
add
mov
xadd
addr16
outsb
loopne
movl
test
mov
filds
das
pop
mov
push
push
mov
lods
mov
addr16
inc
movsl
push
xor
adc
pop
jle
lds
dec
repnz
sub
shrb
cvttps2pi
pushl
movsl
int3
bswap
jnp
popa
std
sub
bound
and
or
or
stc
mov
subb
cwtl
movsb
pop
in
das
jle
sbb
fcom
push
xor
inc
std
iret
pop
arpl
test
hlt
pop
or
or
in
adc
mov
xchg
lahf
pop
jno
movsl
movsb
icebp
push
fnstenv
mov
lds
test
pop
xchg
sub
sub
jge
movl
jge
jbe
cmp
push
fwait
jmp
fs
in
insb
jmp
into
fs
icebp
mov
mov
cmp
bound
and
sub
cmc
subl
add
dec
ds
inc
movsl
mov
cmpsb
jp
fsubl
stos
sarl
mov
add
pop
and
inc
cmc
adc
mov
inc
lods
push
jae
aam
xor
jg
jmp
loop
jo
push
sub
lock
mov
inc
xor
clc
cmp
popf
rcrb
xor
out
fcompl
inc
cmp
xchg
pop
dec
cwtl
lret
sbb
jl
pop
push
inc
addl
pcmpeqw
adc
scas
sbb
pop
lahf
jge
xchg
or
mov
and
cs
jmp
jae
shll
or
pop
fs
aad
addr16
ja
xor
inc
mov
pop
sbb
add
xor
cmp
xchg
add
mov
iret
cld
lahf
mov
pusha
rcll
inc
push
fwait
inc
adc
data16
mov
mov
mov
sbb
cwtl
sub
js
aas
loope
xchg
scas
or
jg
insb
pushf
fstp
sbb
movsb
lea
enter
or
xor
mov
hlt
cld
mov
fs
test
ja
aaa
pop
pop
push
xlat
lahf
mov
jo
arpl
int3
nop
or
clc
aas
lret
into
adc
add
mov
mov
les
sti
ss
pop
fidivrs
inc
out
push
xchg
jo
out
push
movsl
divl
sbb
repnz
lods
outsl
jno
hlt
cmpsl
inc
ss
or
jle
js
mov
mov
mov
adc
and
add
jae
aas
lahf
test
xchg
dec
and
aas
orl
js
mov
jge
loope
testl
addr16
pop
mov
push
nop
adc
lret
punpckhdq
pop
loopne
cs
ja
jle
mov
lods
lret
loop
and
pop
xor
test
jmp
cltd
lret
or
sub
ret
hlt
inc
stos
add
jl
fcompl
fcmovnb
xchg
mov
xchg
jne
sbb
pop
push
pusha
mov
repz
and
dec
ds
shl
jns
pusha
mov
and
sbb
nop
loope
insb
xlat
cmp
push
sub
lcall
jg
mov
pop
lret
adc
insl
pop
divb
testb
enter
or
js
jb
aad
and
push
cmp
popa
ja
mov
bound
inc
out
cmp
mov
inc
movsb
pop
dec
dec
push
popa
jb
and
sbb
movsb
pop
or
mov
ret
mov
push
shlb
enter
jb
loope
inc
popl
mov
cmp
mov
test
pop
and
aam
mov
xchg
sub
gs
cld
mov
mov
fwait
sbb
and
lock
mov
ss
cmovle
xchg
aad
inc
stc
fildll
xchg
popa
int
lods
ja
inc
into
jecxz
add
in
movsb
push
lret
xchg
out
outsb
inc
addr16
ret
adcl
test
dec
pop
sbb
call
ds
xlat
adc
movsb
sar
push
sbb
mov
jo
adc
dec
loop
mov
cltd
xor
hlt
sahf
fcmovnu
inc
pop
ret
jge
mov
enter
sbb
sub
pusha
mov
test
xor
ds
sarl
inc
insb
pop
sub
loop
lahf
jb
jnp
aaa
jne
stos
aad
jae
sub
xor
push
push
xor
mov
pop
and
push
sbb
in
push
adc
leave
popf
xor
mov
mov
lret
dec
fldcw
mov
mov
push
or
mov
imul
inc
push
dec
je
daa
lock
mov
arpl
xchg
insb
outsl
loopne
test
pushf
mov
adc
and
scas
clc
adc
pusha
push
adc
xor
testl
popa
loope
adc
inc
fnstsw
scas
sbb
daa
repz
lea
dec
js
sbb
jge
cmc
sub
mov
dec
gs
rorl
xchg
cs
std
dec
push
mov
enter
out
mov
addr16
xchg
mov
mov
dec
inc
cmp
cltd
jmp
add
xor
pop
push
and
mov
jo
sarl
or
nop
int
je
sbb
inc
mov
sbb
fiadds
pop
jns
or
inc
pop
ss
gs
loopne
js
mov
sbb
and
or
inc
mov
ret
jecxz
dec
aas
inc
inc
test
mov
push
lret
pop
jecxz
lods
out
mov
jno
cmp
testb
push
ljmp
pop
imull
jp
clc
add
jg
push
sub
cli
mov
mov
mov
mov
jecxz
mov
jl
push
sbb
and
imul
and
add
mov
es
scas
rcrl
jmp
repnz
scas
insb
popf
sub
mov
xchg
jecxz
lahf
pop
scas
fisubl
cmp
mov
lock
mov
jp
notb
cli
cmp
lds
dec
lods
push
inc
ficomps
insb
arpl
jl
pop
dec
cmpsl
fcoms
stos
shlb
sub
mov
push
mov
rol
pop
mov
xlat
mov
call
cwtl
and
inc
insl
insl
sbb
adc
lret
inc
ret
dec
sbbl
scas
sbb
call
mov
jge
xchg
sbb
aam
push
and
sbb
dec
call
jae
repnz
rclb
or
sub
mov
mov
shlb
fucomip
mov
push
addb
xchg
aad
jnp
gs
ljmp
popf
pop
inc
or
dec
into
jle
std
lret
cwtl
lret
jge
cli
dec
push
mov
int3
fidivrs
and
jecxz
push
push
lock
push
cmovge
dec
scas
jg
in
inc
inc
fistps
sub
xchg
cmpsb
pop
cmp
mov
js
cmc
cmp
stos
in
mov
cmpsl
lods
fidivrs
mov
ret
add
mov
ss
mov
rcrb
jecxz
dec
pop
mov
sbb
cmp
xchg
mov
xlat
out
fimull
jmp
mov
push
lahf
push
fwait
mov
rorb
push
add
cmovp
cwtl
ud1
add
arpl
sub
call
cmp
cmpl
jnp
lods
scas
lock
clc
dec
lea
lahf
sbb
sub
inc
dec
inc
aaa
and
and
int
sbb
and
loopne
mov
nop
mov
sub
push
out
mov
jns
in
push
ja
es
ret
and
jp
mov
loope
jge
mov
arpl
jns
xchg
xchg
scas
cmp
or
pop
aas
dec
les
ds
rolb
out
adc
mov
pop
dec
ret
xor
adc
xchg
loope
and
and
sbb
aad
and
mov
mov
insl
test
inc
pop
push
adcl
jns
mov
dec
iret
push
mov
push
xor
pop
icebp
fcoms
ds
shlb
mov
ficoml
lods
dec
adc
fbstp
insb
in
fstl
or
xor
insb
jae
pusha
push
xchg
push
les
outsw
ja
mov
jecxz
jecxz
icebp
push
jae
decl
in
pushf
mov
or
icebp
add
movl
xchg
test
out
lock
lahf
daa
push
push
add
insb
fmuls
cld
addl
leave
std
xor
sti
jns
add
mov
daa
dec
xchg
and
cmp
push
mov
jbe
xchg
xor
fldenv
iret
hlt
pusha
lahf
mov
dec
scas
negb
dec
xor
out
sub
mov
sbb
xchg
insb
push
std
push
test
or
test
fistpl
add
arpl
inc
xor
adc
jae
pop
pop
cmp
movsb
xchg
adc
mov
dec
adc
or
push
fs
cmp
out
jmp
ljmp
andb
ficomps
xchg
or
or
add
dec
jbe
or
loop
rorl
sbb
shr
stos
lods
arpl
lods
add
cmp
mov
xchg
movsb
push
adc
pop
or
sub
dec
repz
insb
inc
adc
add
xor
push
test
mov
jmp
sub
dec
mov
data16
adc
lea
dec
lcall
and
jne
imul
xchg
enter
lods
mov
sbb
pop
in
mov
add
leave
pop
mov
stc
faddl
cmp
out
out
adcb
sub
mov
jo
xor
into
push
in
and
mov
and
jae
aas
mov
adcb
or
push
push
mov
push
inc
cmp
cmp
lcall
iret
mov
aas
add
mov
push
imul
dec
lahf
in
ja
insb
pushl
ss
jnp
mov
jnp
das
and
inc
dec
xchg
into
sbb
data16
popf
ret
test
fdivrs
mov
daa
idiv
pop
cmp
into
add
lods
stos
es
jno
jo
inc
adc
pop
sbb
loop
adc
mov
add
push
push
ret
dec
in
push
ss
sub
mov
sub
sbb
call
xchg
xlat
fidivrs
aaa
dec
icebp
aas
xchg
testb
out
xor
cltd
xor
scas
ljmp
and
xor
add
xor
xor
out
sub
or
add
cltd
push
xchg
or
push
dec
bound
fldt
push
out
out
rsm
sbb
mov
out
mov
and
jne
or
cltd
lods
sahf
push
lret
pop
add
xchg
xor
jge
add
sbb
xchg
push
or
mov
push
adc
aaa
test
arpl
repz
cld
cmp
popa
mov
mov
call
movsl
das
enter
pop
test
lods
add
jno
cmpb
add
lock
repnz
push
dec
lods
ja
fldt
ret
inc
pop
pushf
push
and
cmc
dec
sub
mov
cmp
inc
adc
movsb
xchg
ljmp
inc
daa
fistpll
mov
mov
inc
xor
cmc
and
jl
or
push
sbb
sbb
mov
fisttpl
test
add
xchg
repz
mov
push
push
cmp
mov
fistps
mov
cltd
sbb
jb
mov
dec
mov
jge
pushf
mov
std
cmc
aam
loop
sbb
popa
pop
insl
sub
sub
adc
pop
dec
xlat
inc
ja,pn
mov
cmc
daa
pop
pushf
lret
push
ljmp
xor
imul
jnp
mov
xchg
cmp
fmulp
out
mov
xchg
outsb
stos
leave
ss
movsl
sbb
dec
sbb
iret
stos
jg
cli
in
sub
fcmovnb
pop
or
pop
sub
fstpt
push
or
enter
cltd
out
mov
mov
shlb
push
int3
in
fiaddl
outsb
aaa
add
push
cwtl
jb
je
mov
in
inc
loop
lock
push
cltd
movsl
lret
fsts
hlt
push
scas
xchg
orl
loopne
bound
mov
cli
push
rcr
jge
repz
mov
stos
addb
cltd
jnp
mov
add
scas
pop
out
push
pop
sbb
mov
in
rcll
ror
fmuls
sbb
cli
pop
push
hlt
fdivl
cmpsb
dec
mov
lret
jno
lea
xchg
inc
xchg
ds
aaa
imul
push
inc
into
mov
mov
mov
imul
int3
or
lahf
insl
orl
dec
sbb
movsl
aas
or
jge
add
sub
jnp
pop
cmc
pop
lods
xor
pop
cmp
push
xchg
lahf
pop
mov
cs
dec
push
sti
cmpsb
out
fdivs
repnz
loopne
cs
sbb
push
jmp
lock
fwait
push
jl
lods
into
cltd
or
pop
sbb
dec
pushf
adc
sub
cmp
popa
mov
push
inc
mov
pop
and
js
sbb
rorl
out
pop
push
outsl
negl
mov
stos
mov
jne
popa
incb
push
pop
jecxz
cmp
sbb
mov
cmp
sbb
jb
out
ficomps
mov
stos
mov
sub
dec
movsb
nop
outsb
sbb
fcompp
jb
iret
add
cmc
imul
or
push
push
in
addr16
outsb
jge
xor
loope
mov
fbstp
call
cld
mov
jns
loop
mov
jle
mov
mov
aad
sbbl
and
ss
fnstsw
popa
mov
imulb
aaa
aaa
mov
rcl
sbbl
inc
sti
add
or
cmpsl
sbb
outsb
xchg
jge
inc
lods
pop
inc
test
les
dec
and
clc
idivb
aad
pop
jo
dec
push
sar
inc
pop
adc
cs
leave
in
arpl
data16
dec
sbb
xchg
data16
and
enter
sub
ja
push
stc
js
cld
loop
rcll
adc
ljmp
icebp
cmpsb
in
mov
mov
insb
repz
scas
adc
inc
jle
aad
or
jnp,pn
gs
cmp
ret
cmpsl
push
fsub
in
jae
sbbb
iret
ret
in
inc
jno
inc
arpl
inc
jb
pop
dec
sub
jae
add
inc
and
dec
mov
jg
faddl
push
in
push
mov
xor
in
sbb
jmp
or
mov
fnsave
dec
lcall
jmp
rol
jle
sbb
xchg
adc
mov
or
in
std
popf
cwtl
or
inc
adc
add
and
stos
scas
daa
leave
mov
dec
movsl
bound
dec
cwtl
aas
mov
dec
cmp
popf
orb
les
and
pop
xchg
sub
sbb
dec
pop
pop
int
ret
addr16
clc
shrl
roll
pop
pop
xchg
xchg
je
ret
fmul
xlat
mov
and
xchg
mov
mov
aaa
movsl
fadd
test
adc
xor
fsts
push
mov
enter
xchg
push
out
and
fadds
js
push
mov
orl
mov
adc
sarl
and
out
rcrb
xor
mov
dec
les
mov
iret
out
dec
dec
xchg
test
xor
push
fldl
rorb
push
into
bound
rorl
std
inc
mov
push
pop
push
inc
fs
or
fildl
out
pop
mov
data16
mov
and
movsl
hlt
out
push
hlt
daa
add
iret
mov
jbe
jp
sbb
xchg
mov
jecxz
pop
not
daa
mov
pop
push
sbb
add
in
dec
mov
cmp
adc
test
nop
xchg
jns
mov
mov
mov
jmp
test
lret
mov
push
pop
adc
dec
push
insb
push
inc
mov
jns
scas
dec
rorb
sub
jnp
and
aas
push
or
test
test
push
dec
lods
rorb
and
push
loop
sub
cld
mov
or
lea
sbb
jo
lea
imul
push
ret
out
add
orb
mov
popf
xchg
inc
mov
pusha
les
fstl
push
in
scas
sub
jbe
shlb
sbb
leave
rolb
das
rorl
xchg
mov
sub
sub
sahf
mov
out
cwtl
test
push
scas
rcrl
sub
out
lcall
out
push
dec
pop
cltd
jmp
jmp
aad
add
jp
imul
jecxz
fcoms
mov
hlt
xlat
mov
pop
popa
adc
inc
xchg
incl
or
add
push
aaa
subb
rclb
or
ret
sub
cld
rcl
dec
xchg
sti
xchg
popf
mov
pop
and
mov
and
mov
mov
aad
daa
push
es
xor
sbb
sbb
push
imul
outsb
xor
stc
loopne
ficoml
daa
ss
popf
cmp
inc
lea
movsl
stos
lret
in
add
int
dec
leave
jmp
jae
repnz
cltd
adc
xchg
insb
popf
out
xor
pusha
dec
jge
inc
jo
inc
movsl
push
xor
jnp
aam
into
mov
daa
pop
dec
jmp
cmp
stos
loope
je
xlat
mov
in
push
aad
out
mov
test
sbb
fmul
pusha
pop
pushf
inc
dec
jge
jae
stos
sub
testl
pop
shl
stc
mov
out
cmp
xchg
push
dec
and
das
xchg
xchg
popf
addb
hlt
fwait
mov
xor
push
xchg
mov
push
dec
movb
cmp
mov
xchg
movl
das
shr
pop
fdivs
scas
sub
push
data16
pop
fisttpll
and
mov
sbb
out
jno
and
xor
fildll
jmp
sub
xchg
mov
push
or
jne
jns
sub
es
cmp
lret
sub
mov
int3
aas
and
scas
sbbl
flds
mov
jmp
and
pop
dec
push
rcrb
aam
stc
push
xchg
repnz
loop
fdivrl
add
inc
and
adc
add
or
fldl
adc
or
arpl
ja
dec
cs
loope
ljmp
add
aas
das
outsl
fcomps
fstpt
out
dec
adc
cmpsb
mov
ds
mov
ret
push
mov
loopne
xchg
adc
loopne
fwait
pop
inc
daa
mul
mull
push
xchg
jno
sbb
aad
jns
pop
jb
mov
das
roll
mov
or
jg
inc
and
jge
or
negl
xchg
lds
ret
movsl
inc
into
cwtl
les
rcrb
fimuls
cmp
es
xor
jne
or
dec
xor
mov
shll
in
pop
push
pop
xor
mov
xor
mov
mov
inc
xchg
popf
add
out
cli
lods
fwait
adc
mov
fistpl
out
add
push
lahf
cs
dec
or
sub
sbb
rcl
xchg
xorl
test
xor
cmp
jmp
mov
sbb
inc
in
je
popf
in
mov
dec
out
pushf
pop
loop
stos
sub
xchg
mov
jns
dec
push
lock
mov
xor
fistps
sub
fwait
and
xor
cmp
sti
test
dec
push
and
out
jnp
cltd
xchg
out
xchg
movsl
sti
data16
ja
cmc
inc
push
or
imul
int
les
dec
push
sar
mov
xchg
add
push
pop
stos
jo
or
pop
sub
outsb
icebp
xor
add
lret
hlt
lea
into
sbb
incb
ljmp
stos
and
xor
push
sub
cmp
fimull
add
adc
stos
jmp
xor
mov
sub
cmp
and
adc
fistpl
inc
mov
jno
jmp
out
sarb
or
incb
fldcw
outsl
jge
sbb
jnp
or
imul
push
insb
jmp
sub
inc
mov
xor
mov
lcall
insl
sahf
jmp
cmp
aam
push
adc
add
inc
rcrl
cs
cld
cmovge
xor
mov
xchg
mov
fwait
sbb
shll
bound
cltd
icebp
inc
stos
or
mov
mov
mov
or
dec
inc
bound
push
ljmp
jl
hlt
pop
ja
add
mov
in
jmp
negl
stc
push
sub
inc
aam
scas
xchg
or
mov
add
xor
lcall
jmp
aas
mov
shl
dec
mov
icebp
add
imul
jle
jg
enter
cmc
call
dec
pop
sbb
clc
xor
clc
bound
je
enter
mov
insw
add
lcall
iret
decl
add
xchg
out
das
cmpsb
hlt
sahf
push
stos
add
pop
into
pop
lahf
mov
mov
std
fldcw
jmp
mov
mov
mov
scas
mov
clc
push
push
stos
sub
in
out
ja
sbb
sahf
add
rclb
cmp
sbb
out
loope
cmp
and
leave
add
and
xchg
pop
add
cld
ljmp
push
add
inc
jge
rcl
out
cmovne
cli
jg
xor
pop
ja
pop
pop
lret
lea
cmp
orl
imul
adc
mov
mov
loop
clc
cmp
mov
sub
push
sub
in
or
je
jb
shll
add
js
sub
loop
add
aas
js
mov
filds
cmpsb
negl
stos
out
enter
fsts
insl
pop
jo
mov
out
addb
mov
push
or
std
xchg
fwait
repz
pop
std
adc
lds
addb
loop
outsb
xchg
xchg
jb
negl
mov
insl
insb
mov
jbe
imul
push
pop
push
cmp
pushf
cs
aas
or
pop
jmp
xchg
and
rcrb
push
sahf
pop
cli
shlb
xorb
aam
fwait
pop
stc
sbb
inc
and
jmp
jp
mov
sub
fildl
jno
sub
mov
mov
in
les
mov
lods
fbld
dec
in
fs
dec
shrb
xor
jns
cli
mov
popf
mov
cmp
jge
inc
jns
mov
cmp
stos
cmp
xchg
repz
out
xchg
int3
xchg
push
sub
xor
out
jae
push
push
push
out
mov
mov
ja
lret
jne
jmp
jle
xchg
popf
rorb
fimuls
fiaddl
ret
cmp
les
push
xlat
inc
add
and
aas
test
and
aad
sti
and
ljmp
lea
sbb
sbb
jae
adc
pop
jecxz
mov
call
jp
mov
push
and
cltd
popa
das
mov
cltd
xor
out
outsb
mov
pop
push
sbb
cmp
mov
das
cmpb
repz
mov
add
fwait
cmp
filds
fildl
jge
scas
mov
push
fadds
xchg
stos
sbb
sub
scas
sbb
ret
mov
pop
dec
lods
fwait
adc
out
or
adc
mov
icebp
ds
mov
adc
fiaddl
lds
push
lret
or
add
pushf
adcl
outsl
stos
test
orl
nop
mov
popa
mov
xor
jecxz
sbb
outsb
lock
pop
call
dec
lahf
mov
mov
cmp
jl
mov
mov
cs
mov
into
scas
or
aaa
mov
pop
cmpsl
cmpsl
mov
xor
bound
ret
pop
mov
out
loop
jnp
cmp
mov
lcall
dec
cmc
sar
push
in
push
adc
fstpl
pop
sahf
cltd
fwait
xor
add
pop
loope
jg
adc
jmp
jp
mov
test
cmpsl
xchg
pop
daa
clc
mov
pop
sub
jg
or
push
cmpl
or
mov
arpl
and
fistl
sbb
inc
mov
xor
fsubrl
add
cmc
popf
mov
xchg
xchg
in
cwtl
les
sbbb
loop
add
sarb
lea
jg
test
jbe
into
adc
scas
lock
out
pop
icebp
xchg
jl
jmp
push
xor
xchg
sbb
jle
pop
jecxz
rcrl
mov
rolb
jne
xchg
lcall
sti
xor
call
jle
popf
mov
inc
jmp
sbb
aas
xor
or
jle
mov
arpl
insl
ss
aad
cmpsl
shl
mov
fwait
jg
sbb
inc
cmpsb
shlb
popa
lret
sbb
aas
xor
push
stos
pop
jle
pop
jno
jns
mov
dec
ret
addr16
gs
push
pop
mov
sarb
shrl
adc
xchg
sbb
cli
outsb
mov
xchg
fbld
or
out
scas
jecxz
push
or
mov
mov
imul
pop
jae
sub
movsb
enter
cmp
lods
mov
mov
cld
add
mov
test
inc
decb
and
loopne
mov
gs
ret
mov
loop
push
mov
movsb
and
aaa
shll
pop
sub
loopne
pusha
add
ja
lret
mov
cmp
sbb
pop
je
insl
sbb
pusha
mov
outsl
fisubrs
cs
lret
leave
arpl
popf
cmc
xchg
and
mov
scas
popf
out
scas
mov
mov
sub
roll
mov
inc
push
jno
mov
mov
les
dec
test
or
ja
mov
mov
push
lds
loopne
js
hlt
pop
frstor
mov
sar
sahf
add
enter
push
adc
pop
daa
gs
xchg
insb
ret
push
jne
fnsave
pushl
aaa
aaa
adc
leave
aad
icebp
sbb
call
mov
into
mov
push
std
jecxz
add
push
sahf
add
xor
pop
add
in
test
fwait
pop
xchg
lret
fldcw
push
xchg
movsl
mov
inc
ss
repz
xchg
inc
ror
fsubl
lahf
xchg
jmp
adc
inc
cmc
jbe
and
sahf
push
push
mov
fmuls
or
int
nop
cltd
xchg
test
sbb
in
mov
subb
loopne
jmp
inc
cltd
mov
pushf
repz
inc
sub
subl
adc
iret
pop
mov
xchg
mov
xchg
bound
add
ljmp
ficoms
mov
test
scas
mov
xor
dec
push
addl
negl
push
cltd
adc
push
faddl
push
jb
repz
lret
inc
les
inc
add
mov
mov
cmpsl
jno
ret
sti
sbb
sub
iret
ds
dec
mov
push
iret
loopne
dec
push
loope
mov
or
dec
add
cmpsb
mov
adc
push
ja
jnp
pushf
je
and
cltd
push
xlat
in
cmp
lock
push
outsb
in
xor
xchg
iret
adc
aaa
cltd
aad
shll
mov
push
lea
mov
sub
or
mov
jb
incl
daa
cmpsb
dec
repnz
push
adc
rcrl
pop
mov
add
dec
ljmp
lret
scas
in
fwait
mov
pushf
xchg
jae
mov
or
je
mov
mov
push
in
outsl
cmp
pop
lcall
inc
mov
dec
cli
jb
push
mov
loop
sbb
and
enter
ss
dec
jbe
pop
mov
movsb
negl
hlt
in
push
inc
mov
sbb
xor
lahf
test
add
xor
mov
ja
mov
fwait
les
imul
int
and
mov
pop
mov
dec
inc
jge
inc
or
xor
pop
neg
add
movsb
xchg
dec
mov
xor
aad
lods
in
sbb
out
cli
sarl
cltd
imul
jmp
mov
out
out
mov
cld
pop
fidivl
and
sahf
scas
fbld
mov
adc
fnsave
pop
sub
push
int3
lcall
mov
ja
jg
mov
lea
dec
add
outsl
push
test
or
leave
in
cmp
popa
mov
pop
sbb
cld
push
repz
add
xchg
or
add
rcl
addb
jnp
cwtl
scas
addr16
test
lods
inc
jmp
mov
push
xchg
sub
xor
adc
call
negl
dec
ds
jne
insb
popa
mov
push
subl
and
jmp
lea
cltd
pop
pop
xchg
ljmp
bound
aaa
mov
jp
ds
add
jmp
scas
test
jo
rolb
aas
cmp
sbb
pop
adc
sub
imul
adc
cmp
and
lahf
popa
faddp
nop
push
adc
sti
add
stos
inc
jbe
sub
xor
add
addr16
dec
dec
cmp
ljmp
dec
xor
sahf
out
lods
sbb
rorl
pop
dec
lods
stc
in
stos
sub
and
sbb
in
add
sub
pop
popl
cli
xor
push
cmp
addl
cmpsb
sbb
hlt
out
jge
mov
xor
cmp
in
test
call
movsl
cmp
xor
aas
ja
imul
fs
pop
int
movsb
je
inc
sbb
cmpb
push
imul
mov
push
mov
inc
mov
jmp
push
test
cmc
push
add
shrl
sub
mov
push
xchg
lock
or
ljmpw
cmp
dec
insl
push
mov
rorb
xlat
in
mov
or
push
aas
push
ret
mov
push
cmove
arpl
adc
insl
cmp
sub
and
sbb
mov
sbb
sub
cmpsb
inc
and
pop
push
pop
xchg
mov
in
ja
ss
insl
mov
hlt
cmp
in
sbb
movsb
mov
xchg
js
psrlw
push
and
dec
mov
hlt
inc
test
pushf
mov
mov
cmp
dec
sub
loope
test
test
or
pop
inc
sahf
jp
adc
fwait
aas
scas
sarb
adc
mov
subl
stos
xor
ds
addr16
in
lcall
jno
filds
loope
sbb
test
aas
out
jne
xor
loope
push
xor
xor
ret
mov
xchg
push
xlat
adc
in
neg
test
out
fnstcw
push
stos
mov
rorb
outsl
push
inc
push
jl
inc
xor
xchg
jnp
clc
dec
enter
or
fwait
test
ret
and
xchg
sbb
xlat
shlb
pop
mov
fdivp
ja
jecxz
sarb
mov
cli
jns
testl
cld
dec
daa
inc
pop
sahf
shlb
or
test
or
cmp
fs
ret
cmc
jo
pop
rorb
mov
xor
cmp
sub
loop
add
sub
xchg
stos
xchg
lret
popf
push
push
int
push
ret
jle
lds
lea
jnp
cmpl
enter
movsb
mov
push
pop
loop
scas
imul
adc
inc
fdivrl
pop
frstor
cmpl
in
xchg
xchg
lret
nop
pop
add
fcomps
and
cmpb
jecxz
jns
xor
loop
rolb
or
jo
xlat
or
fdivs
sbb
cmpsb
mov
mov
popf
cmpl
sahf
inc
imul
lock
iret
in
xchg
jmp
dec
das
adc
es
sub
testb
pop
fstps
inc
cli
push
xor
cmp
pop
fstl
fadds
jl
test
sti
jno
inc
inc
xchg
out
loop
sbb
std
mov
leave
jnp
push
push
hlt
xchg
scas
sti
cld
add
int
sbb
pcmpeqb
ljmp
jecxz
sub
ljmp
jae
jnp
punpckhwd
jecxz
out
jb
sbb
or
imul
repz
mov
add
push
dec
cld
push
or
push
dec
push
jg
xchg
dec
jae
iret
ds
sbb
mov
inc
arpl
add
xchg
movsl
push
in
lret
insb
sbb
jge
ret
sub
je
aad
pusha
cmp
cmpsb
movb
lods
dec
pop
adc
and
bound
mov
shrb
mov
in
popf
or
cmp
mov
cli
inc
cwtl
inc
pusha
jae
ljmp
loop
xlat
loopne
mov
loope
test
cmp
sbb
jmp
jae
mov
cmpsb
aas
xlat
mov
xor
in
pop
push
fisttpll
fmuls
ja
mov
aad
push
fistpl
add
outsl
cmp
stos
cmp
push
push
adc
pop
pushl
mov
xchg
xchg
cmpsb
pop
imul
test
ljmp
xchg
aaa
inc
or
adcb
push
sub
fdiv
repnz
fwait
jge
aam
adc
cmp
pop
shlb
xchg
inc
push
gs
push
fwait
pop
and
outsb
sbb
call
mov
out
dec
adc
pop
cmpsb
lods
fs
push
xchg
fdivrl
xor
push
data16
dec
ficoms
int
cmc
jp
or
test
inc
adc
es
or
clc
icebp
lock
outsb
sbbl
and
and
shl
mov
and
and
pop
lods
xchg
fs
jb
out
mov
or
stos
add
pop
dec
or
cmpsb
loopne
sti
or
pop
or
fidivrl
mov
into
xchg
and
or
jns
sarl
fcmovnbe
inc
or
and
adc
leave
sbb
add
int3
sbb
jne
mov
fadd
iret
push
pop
mov
jbe
jo
adc
add
lods
dec
push
sbb
push
mov
and
add
std
shlb
cmp
push
test
xchg
inc
mov
out
sub
fildl
fld
mov
mov
push
jns
push
xor
lcall
daa
xor
cmp
int3
xchg
addb
ret
xchg
popa
sub
inc
xchg
xchg
and
mov
mov
hlt
dec
mov
fldt
xlat
pop
pop
fsubr
fisttps
pushf
outsl
jle
out
xchg
ds
nop
xor
cmpsb
mov
mov
lret
mov
in
sub
nopl
inc
cmp
xor
stos
dec
sbb
pop
inc
mov
mov
or
xor
mulb
adc
push
and
jle
rcr
or
pop
sub
les
and
cli
sar
and
daa
adc
xchg
add
or
shll
enter
shlb
inc
lds
jo
sbb
jae
pop
sub
lock
sbb
push
aas
in
aas
jmp
cld
jmp
xor
sahf
sti
fmuls
mov
mov
xchg
adcb
xor
js
outsb
xchg
mov
lea
push
in
in
lcall
gs
loop
pop
mov
jle
lea
jbe
leave
jae
out
mov
inc
rcrb
adc
test
dec
or
daa
jl
xchg
push
inc
jmp
and
sbb
dec
pop
lods
mov
sbb
and
test
int
movsl
inc
or
aaa
arpl
je
jno
dec
daa
cld
xchg
mov
shlb
push
inc
xor
les
sbb
arpl
sbb
call
xchg
rorl
scas
xchg
sbb
scas
stos
sbb
out
ljmp
xor
out
lahf
and
add
push
jbe
cmp
adc
jecxz
pop
stc
and
push
adc
lock
inc
push
push
icebp
add
lahf
bound
mov
inc
in
cmc
outsb
cmp
cwtl
adc
push
mov
and
sbb
sbb
mov
jns
push
outsb
daa
mov
loope
sub
mov
jae
inc
xchg
sbb
leave
or
ss
ret
pushf
push
mov
push
jg
cmp
addr16
mov
inc
aas
mov
lds
insb
xlat
jmp
lods
mov
test
jb
sub
outsl
mov
lret
test
arpl
test
jbe
inc
sub
orl
jmp
xor
test
test
lods
cltd
push
sbb
fs
sbb
pop
in
xchg
sti
or
pop
and
xchg
mov
xchg
pop
aad
jp
enter
mov
xchg
jle
cmp
inc
fnsave
lret
lea
push
cli
pop
in
xor
test
test
or
sbb
insl
js
ret
shll
mov
call
call
fisubs
test
add
insb
xor
sarb
cltd
gs
sbb
in
add
addb
push
sbb
lcallw
sti
rol
mov
or
dec
mov
pusha
xchg
inc
das
cld
sub
and
ret
sbb
scas
push
aas
adc
cs
out
mov
xchg
aad
and
mov
push
sbb
xor
or
sbb
aad
adc
aaa
cmpsl
aaa
pop
outsb
sti
stos
jmp
mov
mov
adc
or
xor
stos
mov
push
cmc
adc
dec
dec
inc
gs
or
popa
rolb
mov
addr16
mov
mov
repz
orb
lahf
fstps
mov
mov
pop
rcr
xchg
jns
inc
jg
push
xchg
jae
adc
das
cmp
add
scas
insl
imul
sahf
hlt
fsts
mov
inc
out
cmp
in
insb
addr16
pop
les
fistl
or
jp
and
test
mov
stos
scas
xor
sub
xchg
aas
sub
push
int3
xor
mov
stos
dec
mov
lcall
jl
cwtl
clc
or
fistpll
sahf
and
inc
addr16
push
out
test
outsl
mov
repz
inc
jge
push
jge
leave
adc
jle
or
adc
cltd
outsb
lahf
adc
fldl
xchg
sti
dec
push
push
mov
or
das
or
icebp
cs
fucomp
sbb
pop
push
mov
sub
mov
or
in
movl
jmp
insl
push
loop
addr16
inc
adc
jo
pop
fsubp
mov
insb
sub
push
bound
mov
je
push
xor
stos
jecxz
and
mov
gs
xor
sub
pop
pop
cmp
arpl
fldln2
xchg
aas
cmp
pusha
jecxz
out
jbe
call
or
adc
mov
test
cmpsl
je
imul
ds
cmp
fxam
ljmp
pop
pop
add
push
push
into
in
mov
nop
mov
mov
mov
or
dec
and
clc
push
push
outsl
fdivs
sub
sub
fmulp
mov
mov
loopne
dec
add
mov
shl
lods
shrb
sub
add
adc
pushf
es
inc
je
push
fwait
sub
fs
lcall
pop
or
sub
inc
sub
and
dec
add
inc
jnp
pop
cmp
cli
fistpl
fmul
icebp
mov
cmp
pusha
sti
sahf
push
adc
ja
sub
jl
icebp
in
stc
jbe
add
adc
xchg
cmpsl
xlat
test
imul
sub
add
fstpl
inc
mov
dec
scas
pop
adc
sbb
test
mov
adcl
jbe
cmc
popa
push
scas
jbe
jmp
jnp
inc
js
jecxz
in
jne
mov
aam
ds
pop
adc
adc
lods
mov
cmpsb
imul
adc
adc
jg
lahf
lds
fnsave
insl
out
add
pop
stos
pop
cmpsl
adc
sub
scas
sub
test
and
data16
out
inc
ret
je
ss
add
cs
add
je
shll
jl
jno
jl
adc
cmpsb
inc
insb
hlt
xchg
cli
cmpsb
inc
repnz
mov
aam
inc
mov
scas
or
shll
fs
jl
sbb
test
adc
sub
shlb
sub
xchg
mov
adc
jb
pop
ret
mov
adc
cltd
xchg
pop
xchg
subl
cmc
pop
and
sbb
shrl
sub
adc
popf
ds
adc
ret
repnz
and
or
loop
fwait
test
imul
pop
or
dec
icebp
pop
outsb
and
and
add
repz
or
pop
push
addl
sbb
ljmpw
fdivrp
xor
cmp
xor
mov
and
cld
cmp
inc
add
mov
enter
pop
push
test
push
cmp
pop
repz
mov
rcrl
lcall
pop
and
jge
add
and
mov
mov
mov
sti
mov
rclb
mov
cmc
xchg
pusha
adcl
fs
mov
adc
bound
sti
cmp
mov
imul
jns
or
fsts
ret
dec
hlt
rorl
js
fwait
movsb
sub
jge
mov
aas
fs
cmp
add
push
mov
add
sbb
adc
mov
jno
or
aam
loope
fimull
jge
js
xor
jno
les
nop
sahf
xchg
pop
adc
mov
pop
int
insb
inc
mov
lcall
mov
and
inc
xchg
dec
add
in
inc
sbb
cmpsb
pushf
shrb
dec
ds
dec
out
jg
divb
or
add
imul
cmpsl
push
jne
inc
add
std
push
mov
outsl
outsl
mov
mov
scas
mov
inc
sbb
es
sbb
sti
jno
inc
pop
push
insl
sub
mov
lods
lods
jns
adc
xchg
lock
pushf
jb
jbe
cs
lods
push
jp
imul
lds
mov
andb
sub
jmp
es
mov
lcall
test
inc
lods
inc
jno
jge
leave
pop
sbb
lahf
fstl
sbb
scas
test
addr16
and
add
xchg
push
in
fsubs
gs
jl
pop
xor
sti
sub
jne
mov
testl
dec
fimuls
loope
jne
shrb
mov
or
push
iret
and
push
inc
popa
jo
mov
orb
add
int3
fsubrl
loopne
mov
adc
in
insl
lret
insb
or
arpl
adcl
pop
mov
js
sub
mov
stos
shrl
mov
movsl
shll
push
jbe
in
push
stos
daa
inc
inc
mov
int3
mov
popf
in
xchg
inc
jo
aaa
mov
push
jbe
js
stos
adc
gs
jae
or
adc
xchg
cmpl
adc
and
out
and
mov
mov
fistpll
mov
push
std
dec
movsb
sbbb
popf
dec
dec
scas
aas
adc
push
test
mov
loope
cmp
inc
mov
mov
xchg
loopne
sub
test
ret
add
mov
xor
pop
push
ret
dec
sub
scas
xlat
test
and
push
push
cmp
mov
cmp
cmp
adc
ljmp
cmovae
pop
cli
push
call
inc
das
scas
das
dec
imull
jbe
pushl
mov
add
jbe
pop
out
scas
nop
mov
js
add
mov
xchg
cmp
sti
cmc
lret
xor
push
stc
ds
push
adc
add
test
popa
das
xchg
pusha
push
fldt
mov
pop
fstpt
push
pop
pop
mov
sub
inc
gs
jp
arpl
mov
aaa
sub
fisttpl
aam
cmp
dec
dec
or
and
sbb
je
push
jmp
or
inc
ljmp
jl
fs
ret
sbb
mov
mov
in
lods
int3
in
lds
inc
jmp
mov
cmp
xchg
lahf
add
ljmp
mov
xor
inc
mov
push
shll
sub
aas
ds
mov
and
sar
mov
pop
inc
push
pushf
pop
dec
or
mov
pusha
lret
insl
or
es
push
cmp
push
das
out
fidivrs
fcmovbe
sub
mov
push
lret
out
xchg
pop
pop
popa
dec
test
arpl
ljmp
stc
pop
jmp
jne
xchg
jns
cmp
nop
mov
inc
mov
sbb
std
ljmp
sbb
and
cmpsb
push
aam
test
subl
add
cmpsl
loop
aas
dec
or
sarl
inc
xchg
fsub
push
push
jp
imulb
rcll
adc
mov
lock
xchg
inc
mov
push
leave
addr16
jmp
mov
pop
cmp
lds
dec
jle
cli
sub
testl
cmc
mov
xor
or
pusha
mov
nop
clc
push
pop
inc
xor
std
mov
or
popa
sbb
call
xchg
adc
mov
pop
popa
dec
ja
subb
cli
dec
cmpsb
dec
mov
imul
cltd
jmp
add
xchg
xor
and
dec
pop
pop
or
ljmp
jb
sub
or
push
pop
imul
in
lds
call
push
sti
out
mov
sarl
push
cltd
mov
and
lcall
jle
push
inc
sbb
enter
mov
push
pop
inc
cmp
pop
cmp
lret
adc
out
enter
xchg
push
mov
xchg
jmp
or
dec
or
inc
fldcw
lret
jae
in
inc
mov
pop
and
sbb
pop
mov
push
insl
mov
mov
mov
sub
psubd
ret
xor
fidivs
xchg
fildl
repz
adc
jmp
aam
sub
mov
inc
test
aaa
in
ljmp
lods
test
in
subb
push
add
mov
fcmovbe
inc
repz
or
addr16
lea
sub
or
popf
shlb
test
subb
or
cmp
int
cmc
cmp
shll
mov
sub
sub
imul
mov
add
mov
dec
lret
and
xlat
mov
xor
sub
ljmp
mov
in
cmpsb
rcl
loop
fstpt
push
cltd
cmpsb
call
xchg
add
adc
push
pop
cmp
cmp
js
or
int3
test
das
rorl
stos
xchg
pop
pop
bound
xchg
cmpb
and
adc
test
cmp
mov
stc
dec
fildll
xchg
stc
scas
arpl
sbb
data16
ljmp
mov
mov
sbb
aam
js
xchg
xchg
addr16
data16
and
cmp
or
sub
pop
mov
call
xchg
rcr
jnp
fs
pushf
push
push
stos
jmp
push
out
or
mov
dec
ret
xlat
or
jne
test
pop
xchg
in
adc
cmp
rcl
and
les
pop
int3
cld
aas
ficomps
dec
mov
xor
mov
stc
sbb
adc
fldt
pop
jl
add
xchg
ret
mov
add
cmp
sbbb
xor
jg
mov
mov
not
ficoml
stos
int3
stc
jb
jnp
xlat
jne
push
mov
fmuls
mov
xchg
imul
in
ret
xchg
sarl
nop
test
cmpsb
pop
push
push
and
dec
testl
adc
jg
mov
and
jns
icebp
orb
cmp
jle
sub
push
push
jne
fadds
lds
jae
sti
stc
insl
roll
les
adc
jno
adc
jge
mov
mov
out
stos
call
subb
cwtl
lock
xchg
scas
mov
pop
or
out
xchg
adc
xor
dec
cmpsb
stos
mov
push
ret
xor
movsl
out
dec
pop
sbb
inc
imul
rorb
pop
subl
out
cmpsl
mov
adc
bound
repz
adc
lea
pop
fisubs
adc
sub
fs
clc
push
out
push
lret
jno
xchg
mov
test
pop
mov
mov
ja
rcrb
ljmp
xor
jo
aam
adcb
xchg
cmp
shrb
xchg
dec
dec
adc
pop
xlat
stos
dec
inc
imul
sbb
push
and
fdecstp
cmp
sub
xchg
and
dec
mov
loop
inc
xchg
cs
push
inc
jl
imul
mov
rorl
ja
jl
ret
in
jge
outsl
push
aaa
movsl
into
mov
pop
stc
lea
jns
icebp
insb
cmpsl
outsl
adc
negl
aaa
cmp
sbb
push
cli
push
shll
push
ret
aad
pushw
rclb
stc
dec
xchg
loop
negl
cmp
adc
push
pop
cmp
popa
addl
jno
imul
aaa
sbb
addb
imul
insl
fistpl
or
jb
adc
jle
mov
lea
enter
mov
mov
xchg
pop
ds
jmp
inc
repz
roll
or
into
rcl
mov
mov
jne
mov
pop
test
add
or
sti
stos
mov
fadds
lret
std
sbb
in
lods
sbb
int3
pop
jb
xchg
push
cmp
in
xchg
push
outsb
xor
mov
jecxz
pusha
mov
xchg
or
adc
and
enter
aas
and
loope
nop
movzbl
popl
mov
flds
movsl
pushf
xchg
and
sahf
icebp
mov
mov
adc
xchg
das
jns
aam
fdivs
push
and
int
inc
int
jbe
orb
scas
sbb
sarb
xor
fs
cmpsb
icebp
popa
mov
xchg
sarl
or
mov
pusha
push
jl
mov
test
xor
push
jmp
mov
je
js
in
lods
add
repnz
push
pushf
add
or
sbb
sbb
repz
in
jae
add
in
pop
cwtl
jo
mov
movsl
sahf
sub
cld
testl
ja
mov
loop
jge
out
jae
mov
aam
adc
cmp
insl
in
mov
and
or
xor
in
dec
lcall
fidivrs
xchg
mov
xchg
inc
dec
loop
dec
out
jecxz
xor
jecxz
sub
pop
into
mov
mov
clc
cmp
dec
adc
orl
fdivr
pop
mov
mov
mov
pop
das
bound
insl
dec
je
int
cmp
ss
arpl
fidivs
jnp
divb
ljmp
xchg
insl
adc
cmp
lock
add
push
out
mov
ljmp
jae
es
nop
push
mov
lret
cmc
mov
xchg
dec
mov
fistl
jo
sub
movsb
addb
mov
xchg
mov
jno
bsf
ljmp
jecxz
dec
adc
push
xchg
ja
insb
adc
pop
les
sqrtps
cmpsl
cmp
pop
xchg
and
ja
inc
lods
sub
or
xchg
addr16
cmc
xchg
adc
jp
and
and
lea
mov
into
fsubs
xchg
jbe
mov
jl
shll
loopne
push
xor
ljmp
add
add
outsb
cmpb
xchg
lahf
mov
aas
roll
addr16
or
fmull
mov
aaa
sub
test
add
mov
leave
jge
test
fldt
sbb
aam
dec
addr16
fwait
xchg
sub
mov
inc
je
pop
stc
out
test
ficoms
daa
jp
outsb
dec
xchg
rorl
adc
mov
mov
xor
pop
sahf
cmpsb
or
out
xchg
iret
inc
mov
div
add
lahf
ds
call
les
add
pop
loopne
stos
dec
iret
stos
imul
and
sbbl
fcoms
push
rcr
sbbb
cld
rclb
cwtl
repnz
pop
or
pop
xchg
mov
xlat
adcl
xor
dec
push
mov
jg
add
pop
shlb
jb
fcoms
mov
repnz
and
xor
call
mov
mov
es
pop
mov
repnz
sar
add
inc
ja
fdivs
mov
call
add
or
mov
or
les
aad
xchg
and
mov
pop
cld
jb
xchg
mov
nop
mov
stos
out
jnp
sub
push
clc
sbb
add
sarb
jno
sbb
and
jne
adc
sbb
scas
xchg
and
cld
mull
pop
divb
shrb
inc
cli
jnp
mov
push
iret
xchg
dec
clc
sub
cli
inc
out
fadds
out
rcll
inc
es
sbb
int3
aas
nop
clc
loop
jp
shl
jmp
in
sub
stos
jo
nop
out
xlat
xrelease
mov
xchg
movsb
fildl
cmpsb
popa
pop
mov
inc
lret
ja
mov
add
popf
or
inc
jbe
jmp
xor
insb
in
aaa
fisttpll
lods
push
jg
dec
or
out
dec
jg
mov
cmp
insl
test
pop
sub
jle
and
dec
mov
jae
pop
mov
pop
pop
and
inc
scas
or
js
push
int
jge
sbb
vmovntdq
fnsave
pusha
in
fcmovbe
mov
fstp
xor
rorb
mov
mov
jecxz
in
pop
xor
mov
dec
icebp
cmp
loop
sbb
mov
hlt
into
mov
push
pop
jb
repnz
into
adc
cmp
sub
xchg
fldcw
xor
mov
xor
loope
and
xchg
inc
xchg
cli
push
mov
pop
movsl
test
add
in
cwtl
sbb
fidivrl
testb
mov
and
sub
add
std
icebp
xchg
cmp
inc
inc
ret
lret
push
stc
gs
inc
push
jno
mov
lcallw
jmp
out
leave
dec
jae
scas
xchg
and
cmp
call
mov
xor
push
in
mov
fstl
xor
jb
inc
jg
in
call
inc
or
mov
daa
into
push
lock
test
cld
fs
test
lods
testl
iret
inc
fimull
test
dec
lret
faddl
xlat
lret
das
subl
mov
mov
es
push
mov
add
idivl
pop
jne
ret
dec
aad
mov
and
movsl
pop
and
jae
add
lods
cmp
and
dec
dec
pushf
dec
adc
add
pushf
jnp
andb
ja
xchg
rol
aas
imul
call
enter
data16
popa
add
subb
cs
adc
enter
dec
fbld
add
adc
mov
sbb
or
xchg
xchg
jge
add
loope
dec
test
add
jnp
cmp
call
lret
xchg
incl
inc
aam
lcall
dec
in
popf
dec
popa
fdivl
mov
dec
jg
fcoml
test
popa
push
mov
fidivl
mov
scas
popf
cltd
cwtl
or
dec
ret
jo
fstpl
xchg
mov
sub
fcoms
movsb
push
mov
sub
adc
fwait
in
aaa
mov
iret
aam
pushf
rclb
mov
lcall
sti
out
mov
jge
and
test
sub
rcll
dec
adc
mov
bound
xchg
outsb
loop
incb
in
mov
mov
test
jg
orl
lret
and
in
cli
cltd
push
nop
idivl
mov
sub
addr16
mov
pop
sbb
imul
cli
xor
icebp
mov
ljmp
arpl
inc
shlb
cmpsl
lods
inc
shrb
cmp
or
jnp
push
shl
mov
minps
xchg
inc
xorl
add
or
fbstp
mov
loop
adc
fs
pop
out
xchg
pop
xchg
test
sub
xorl
mov
loopne
lods
xor
inc
push
cmp
insb
scas
cmpsl
pop
push
sbb
and
outsl
mov
push
xor
and
ret
jo
add
pushf
fs
into
cmpsl
push
xchg
xchg
mov
mov
add
add
mov
jnp
gs
iret
mov
jb
sbb
add
jo
push
cmp
lock
xlat
cmc
and
jo
test
fildll
gs
sub
sbb
fisubs
pop
or
imul
sarb
inc
push
fstpl
arpl
or
out
fs
rcl
outsb
cwtl
int
ljmp
icebp
iret
test
adc
add
stc
mul
lods
inc
outsb
mov
mov
insl
test
xchg
gs
clc
cmpsl
out
pop
xchg
notb
xchg
cli
adc
or
loopne
movsb
enter
shlb
lds
mov
out
mov
shr
inc
out
stos
lret
shll
lock
mov
repnz
push
jae
cmc
inc
arpl
xor
xchg
and
aaa
pop
push
add
cs
je
lret
dec
icebp
cmp
xor
hlt
fcmovnbe
xchg
xorb
out
add
xchg
sbb
push
lods
xchg
sub
xchg
jecxz
std
outsl
adc
out
cmp
fiaddl
int
stc
pop
jnp
mov
cwtl
mov
les
arpl
jmp
outsl
sub
rcrb
sub
sbb
push
test
mov
add
popf
mov
lds
xor
inc
jl
out
inc
pop
inc
pusha
ror
inc
imul
pop
cmp
cld
fiadds
xchg
ds
inc
cmpsl
in
or
mov
dec
inc
sti
xor
movsb
rorl
into
pop
xchg
lods
cmp
pushf
xlat
pop
cs
dec
fidivrs
xchg
mov
roll
out
mov
push
or
mov
into
mov
and
fs
or
iret
push
xchg
lret
xor
dec
add
adc
pop
jge
lret
les
loopne
or
test
fcoms
jp
sbb
mov
cmc
stos
daa
sub
or
negb
xchg
adc
mov
icebp
dec
xchg
xlat
icebp
mov
push
and
xor
imul
sub
lock
ficoml
and
xrelease
loope
xor
adc
repz
repz
or
aas
sub
and
je
dec
js
push
test
xchg
int3
add
in
push
out
or
or
rcrb
imul
mov
mov
gs
pop
mov
test
adc
mov
in
fisttpl
xchg
test
xchg
push
or
repz
cld
aas
bound
inc
or
mov
rcrb
fwait
sub
xor
mov
mov
jmp
jecxz
lret
loope
cmp
pop
mov
pusha
fisttpl
out
scas
shrb
dec
insb
sbb
jmp
dec
cltd
int
mov
lods
mov
xor
cltd
andb
lock
iret
dec
scas
add
xlat
ja
arpl
into
sub
fists
testb
cmp
mov
push
addr16
cmc
loope
es
adc
jle
jle
cmp
jp
lea
mov
mov
jns
adc
push
add
outsl
jp
lar
mov
fcmove
repnz
sub
iret
loopne
and
les
jg
leave
pop
add
lea
push
mov
jns
mov
sub
pop
push
fbld
inc
pusha
std
jno
cli
mov
mov
test
stc
add
jns
arpl
inc
es
sub
cmpsb
sub
enter
insb
or
leave
add
add
pop
jne
mov
push
je
mov
out
mov
xchg
mov
loop
push
dec
aam
mov
and
clc
inc
lods
addr16
push
inc
push
clc
mov
scas
push
mov
or
xor
lock
xor
int
movsl
ret
imul
mov
shll
dec
movsb
adc
and
divl
in
push
or
jne
and
lods
push
and
inc
pop
cmpsl
lret
fsubrp
lahf
push
enter
cltd
jecxz
rcrb
insl
test
pop
add
jnp
push
inc
mov
jnp
int3
movsl
cmpsb
xchg
and
stos
orl
in
ds
sub
rcr
jno
pop
push
call
aad
leave
xor
or
aas
negl
jecxz
push
fcompl
sub
in
ljmp
incl
stc
adc
das
in
add
pop
popa
ds
daa
test
imul
xor
shlb
jl
test
inc
xchg
fsub
and
in
pusha
leave
test
or
mov
cmp
mov
ljmp
rol
dec
mov
in
jae
mov
je
stos
stos
cmc
push
or
mov
scas
mov
bound
cli
iret
psubw
mov
inc
cmpsl
aam
hlt
cmp
es
gs
jge
mov
out
outsb
cwtl
fiaddl
jns
lods
imul
cmp
or
pusha
adc
sub
je
int3
push
mov
sbb
pop
cmc
mov
pop
daa
mov
adc
aad
int
cmc
imul
cltd
out
fwait
xor
jnp
xchg
dec
call
or
mov
cmpsb
xor
inc
jae
lahf
hlt
sahf
movsb
out
scas
cmp
das
sub
les
dec
mov
fstpl
inc
cs
pop
cmp
and
add
mov
inc
rorb
insb
xchg
adc
adc
sbb
inc
mov
mov
andl
adc
negl
lea
sar
or
push
loope
cmpsl
orl
push
push
sub
mov
mov
push
or
sub
push
mov
hlt
into
pop
jne
cmpb
push
pop
and
pop
icebp
lret
sbb
loop
mov
aad
and
fcoml
cmp
mov
insb
jae
jp
fsubrp
xor
iret
jmp
enter
clc
outsl
inc
sub
lea
inc
stc
mov
add
or
jl
push
jne
addb
xchg
jge
dec
stos
ror
mov
popf
cmc
lods
imul
imul
popf
popf
cmp
push
in
sbb
mov
ja
jae
xor
hlt
inc
and
mov
out
stos
jecxz
xchg
sti
inc
shlb
mov
mov
imull
sbb
lods
in
xor
outsl
adc
mov
cmp
xor
pop
lahf
addr16
bound
inc
mov
pop
inc
cmp
or
lcall
xchg
enter
clc
mov
ljmp
adc
push
pop
push
into
push
inc
data16
addl
idivb
adc
and
mov
ja
add
jge
cld
dec
add
in
call
adc
pop
in
mov
sub
enter
xchg
enter
mov
fs
xor
sbb
cmp
filds
leave
or
push
flds
test
jge
int
push
jns
mov
xorl
adc
mov
add
xor
or
je
rolb
mov
pop
xchg
popa
push
sub
je
mov
mov
mov
imul
xor
and
cmp
dec
rorb
jg
and
jg
ret
xchg
adc
pop
pop
sbbb
mov
movsb
call
pushf
cld
icebp
dec
loop
cmp
loopne
mov
mov
pop
hlt
jg
pop
mov
insl
movsb
lods
add
xchg
setne
mov
es
cld
lock
js
lret
pushf
addl
xchg
ret
nop
clc
adc
lea
pushf
ja
xchg
jecxz
test
sbb
enter
cs
pop
add
sbb
mov
or
cmc
adc
in
fnstcw
dec
out
incl
test
fstps
mov
pusha
shl
sar
xor
in
push
stos
add
xchg
stos
arpl
jle
dec
std
decl
movsb
pop
sbb
insl
sub
sbb
bound
les
mov
test
jge
scas
mov
cmp
fistps
pop
sub
push
adcb
cwtl
mov
mov
xchg
movsl
mov
cmp
pop
sub
cmp
inc
sub
stc
cld
nop
jmp
pop
loop
lds
pushw
adcl
test
loopne
mov
gs
sub
fnsave
xchg
push
inc
fimull
cli
ss
push
xchg
cmc
cmp
adc
sub
dec
mov
and
mov
sarl
mov
add
adcb
jae
xor
lret
or
xchg
dec
sub
aaa
loopne
add
or
out
inc
lds
lock
arpl
inc
out
lahf
push
sub
xchg
lahf
xor
enter
sti
inc
lock
addr16
fildl
push
push
repz
ficoms
ljmp
insb
insb
mov
push
or
xor
orl
push
subl
push
xor
fdivl
or
adc
xchg
xchg
mov
and
mov
sbb
es
cli
mov
scas
inc
shll
sbb
jnp
push
movsb
pop
inc
or
lods
in
mov
sub
adc
cmp
fists
pop
jbe
and
repnz
fmull
sbb
in
cltd
push
std
push
sbb
out
cmp
fs
test
mov
jmp
ja
stos
xchg
adc
mov
test
cmc
sbb
nop
lea
mov
jmp
push
inc
xchg
loop
sti
repz
stc
mov
stos
pop
ret
or
dec
icebp
pusha
outsb
loop
mov
dec
xorl
adc
and
je
sbb
or
les
push
insl
gs
push
mov
dec
pop
int3
addb
subl
movsb
xlat
movsb
gs
stos
xchg
imul
lods
inc
ja
popa
bound
or
div
sbb
leave
fwait
int3
cwtl
mov
insl
call
sub
xor
cmp
cld
mov
adc
ljmp
aaa
add
iret
ljmp
mov
pop
xor
lcall
cmc
lea
das
leave
in
fimull
mov
mov
jo
rcrb
lea
and
imul
icebp
xor
aaa
pop
jecxz
into
test
dec
xchg
pop
pop
mov
mov
xor
lock
mov
pop
fadd
daa
mov
fsts
mov
mov
mov
in
mov
mov
lahf
mov
subl
dec
inc
cmpsb
add
or
push
inc
lcall
jge
popf
push
xchg
jno
cwtl
dec
push
inc
loopne
push
xchg
shll
xchg
repz
jp
and
jae
pop
stos
int
std
and
add
xchg
in
stos
xorb
add
pushf
lods
add
int3
nop
in
out
xchg
xchg
jae
mov
fbstp
xor
cmp
js
call
sbb
fistpl
test
int
scas
cmpsl
imul
xchg
ret
sbb
push
clc
adc
xchg
fisubs
sub
lock
mov
cs
dec
adc
scas
popf
ja
mov
mov
xchg
and
and
movsl
mov
std
clc
fsub
jg
mov
into
or
pop
lods
dec
je
dec
and
into
cmp
in
xchg
inc
scas
push
pop
inc
add
aam
or
cli
inc
fisubrs
xchg
movsl
inc
pop
push
mov
mov
mov
jl
sub
stos
xchg
dec
ret
sub
sahf
test
shl
iret
incb
insb
ds
xchg
inc
mov
push
shrb
pushf
scas
add
lret
and
in
pop
cli
and
mov
insl
and
into
imul
adc
cmp
movsl
dec
lea
fstpt
pushf
aam
add
shrb
jno
jnp
call
pop
call
adc
mov
cmp
fcoms
pop
fidivl
shl
and
iret
push
loop
jge
adc
sahf
xor
lds
shlb
jle
push
dec
jno
popf
mov
arpl
xchg
mov
mov
les
xchg
outsl
xchg
xor
or
adc
cmp
mov
adc
adc
sbb
shlb
jl
push
loope
leave
add
mov
cmpl
stos
jnp
cli
or
add
pusha
jo
inc
ret
xor
add
in
ja
js
into
ja
mov
mov
pusha
pop
sub
ljmp
xchg
fmull
inc
ja
xor
loop
sbb
pop
es
mov
mov
pop
lods
shll
lcall
test
dec
aas
insl
stc
dec
test
push
hlt
dec
sub
loop
pop
test
cltd
js
int
inc
xchg
loope
sub
mov
hlt
mov
daa
cmpsl
push
das
ds
or
mov
lock
cmpsl
cmp
int
dec
nop
les
testl
cmp
push
les
rorl
ja
sub
dec
scas
jo
or
add
insl
and
imul
or
dec
and
xchg
imulb
lcall
call
xor
out
push
sub
cmp
outsl
and
out
sbb
fildll
add
cmp
cld
data16
sub
test
mov
sub
adc
es
or
cmpsb
sbb
mov
loop
and
sub
div
sbb
xchg
and
andl
xchg
aad
push
fistpll
push
mov
addr16
cmova
call
lcall
xor
mov
xchg
jg
notb
mov
leave
push
jae
subb
aad
push
aas
dec
enter
fs
push
popf
dec
ja
in
scas
adc
mov
cmp
jp
xor
int
jns
mov
dec
pop
fs
push
mov
dec
out
call
popa
ret
cmp
xlat
push
push
in
ja
ss
mov
inc
cmp
iret
pop
ret
jbe
shlb
fsin
xchg
dec
cwtl
mov
sub
sub
mov
cmp
pop
xchg
dec
jg
mov
inc
xchg
stos
jbe
sub
jmp
sarl
aaa
xchg
mov
rcll
or
pusha
test
imul
sbb
clc
call
ljmp
jns
xchg
cmp
pop
sbb
push
sarl
fs
mov
inc
dec
xchg
lods
push
loope
test
in
js
shrb
int3
jnp
cmc
out
shll
scas
cmp
jae
out
cmpsb
test
push
imul
sub
lea
cmp
pop
jae
inc
pop
or
push
cmpsb
sysret
test
lahf
sub
fistl
pop
lea
xchg
fadd
jae
xchg
mov
sub
ljmp
ret
xor
in
or
jge
dec
ss
mov
pop
push
std
shlb
mov
xchg
jmp
in
pop
movsl
fwait
xchg
xchg
fimuls
and
shlb
je
lock
popf
push
mov
xchg
outsl
out
gs
add
cmpsl
jmp
nop
mov
std
inc
push
pop
fbld
popa
popf
sub
aad
cli
xchg
adc
aad
cmp
shl
ja
add
jge
or
sub
nop
mov
pop
mov
mov
cmp
scas
test
and
addr16
je
nop
dec
and
lahf
int
es
outsl
adc
add
or
jle
cmp
adc
inc
adc
fbstp
dec
shrb
out
mov
xchg
movntps
sub
cmp
jne
addb
mov
imul
or
sbb
insb
movsb
pusha
mov
in
mov
rcrb
bound
mov
lods
popa
pushl
jg
mov
jne
aas
xchg
loop
stc
ud2
jno
jo
pop
shr
lahf
jne
dec
cmc
aas
mov
jns
stos
pop
pop
jle
nop
cmc
outsl
pop
xchg
xor
sub
sub
stc
and
inc
mov
inc
inc
imul
push
mov
sub
arpl
sbb
inc
xchg
push
sbb
push
inc
cmc
mov
mov
ror
xor
jmp
add
dec
leave
xchg
push
sbb
pop
sbb
stos
outsl
push
and
ljmp
and
fwait
xchg
push
iret
xchg
lods
aad
mov
pop
pusha
xor
andb
mov
add
mov
lahf
xor
orb
sub
or
jbe
cmp
mov
jecxz
out
sti
mov
js
push
push
push
push
lret
out
je
mov
sarl
push
cmp
inc
enter
addl
rclb
xor
icebp
sub
cmp
add
cld
push
adc
add
xchg
cmc
dec
ss
dec
cmpsb
sub
enter
jns
jmp
lds
loope
cmp
mov
pop
enter
xchg
jns
fldl
std
sub
adc
jecxz
pop
pushf
mov
and
shr
push
xor
jle
mov
stc
sbb
das
inc
imul
out
sbb
js
pop
je
cmp
mov
test
cmp
cmp
inc
stos
cmp
out
mov
xor
ds
mov
sbbl
fdivr
add
movsl
sub
cmp
xchg
push
pop
lret
mov
notb
gs
dec
and
push
adc
mov
sahf
cmp
jl
pop
lret
sbb
xor
decl
cmp
xchg
leave
and
push
call
cwtl
dec
inc
adc
stc
daa
inc
outsb
cmp
sub
jecxz
aas
test
mov
sub
mov
pop
xor
lahf
xor
pop
lcall
jge
movsb
lret
xlat
xor
dec
xor
mov
pop
mov
jle
outsb
push
push
pusha
out
jne
jb
jl
adc
test
mov
pop
sbb
testl
xor
mov
mov
jb
jg
testl
dec
adc
xor
je
push
xlat
lods
push
xchg
mov
mov
push
test
loope
mov
addl
mov
popf
xchg
push
dec
out
test
inc
dec
rcr
stc
mov
mov
push
daa
mov
addr16
pop
cltd
insl
add
fwait
pop
fbld
mov
xor
pop
fidivrl
push
shl
cli
xchg
sbb
pushf
cmp
fdivl
test
jns
and
xor
faddp
fucompp
inc
outsl
mov
fs
add
jbe
movsl
sbb
jmp
and
pop
push
mov
fidivrl
xchg
ja
into
sub
cs
stc
and
aam
pop
int3
out
inc
push
bound
emms
inc
test
into
fbstp
pop
adc
sti
movntq
mov
aam
into
add
outsl
call
mov
loopne
pop
movntq
sub
ret
cmp
cli
pop
sub
add
out
scas
sbb
fdiv
push
rcr
test
hlt
lods
fyl2xp1
xchg
ret
push
shlb
decb
xor
cmc
cmp
push
xor
add
sub
in
pop
xor
push
and
addr16
aas
rorb
add
jbe
xchg
mov
add
orb
pusha
sub
jmp
push
mov
sbb
or
cwtl
rol
lods
fisttps
ret
pop
inc
inc
or
sub
push
das
out
pop
cmp
push
and
cmp
andb
push
and
ret
xchg
xchg
mov
sbb
mov
add
in
test
mov
leave
push
mov
sbb
jae
loopne
and
out
clc
xor
cmovo
sahf
je
xor
or
loope
in
mov
add
enter
imul
mov
jg
mov
sbb
jg
mov
add
ret
in
iret
sbb
fucom
popa
push
aaa
xor
pusha
jg
movsb
lods
call
pop
xchg
loop
mov
outsb
dec
sahf
sub
fisttps
or
lock
sbbl
cmp
add
or
mov
js
jb
stos
fsub
jle
stos
rclb
xor
mov
movsb
daa
les
test
addr16
js
cli
pop
push
inc
jge
cmp
pushf
push
xor
lahf
xchg
mov
or
es
adc
pop
addr16
cmp
sbb
xchg
add
and
pop
dec
out
rcrb
pop
test
jo
repz
mov
sti
les
aas
dec
outsb
imull
jnp
call
scas
inc
sbb
dec
and
pop
jne
out
mov
push
mov
clc
outsb
cmp
xchg
push
aad
cmc
sbb
and
bound
push
dec
fcomps
imul
loop
pop
icebp
jge
mov
fisubrl
in
aas
adc
frstor
ret
push
dec
icebp
mov
or
add
fs
mov
dec
mov
xchg
loopne
rorb
ret
fwait
daa
test
add
pop
push
sti
fsts
pop
shlb
sub
mov
cli
cmpsl
push
cmc
xchg
add
jns
shll
roll
mull
shll
mov
cmp
sbb
lock
xor
ja
and
popf
mov
sti
test
shrl
and
sub
aaa
js
xor
sbb
js
cmp
popf
fwait
mov
ret
adc
jb
push
inc
push
imul
stos
push
inc
mov
ficompl
cmpb
cmp
jp
xor
pop
hlt
jmp
lret
imul
sar
jmp
or
repnz
or
mov
rcll
cltd
fnstcw
lock
xchg
inc
loopne
push
mov
jl
int3
push
arpl
leave
dec
mov
popf
or
imulb
jge
mov
cmp
adc
addr16
pop
adc
aad
ljmp
cwtl
subl
or
fsubrl
icebp
into
xchg
dec
inc
xor
fwait
daa
adc
mov
popf
jb
dec
add
clc
stos
xchg
fsubrs
dec
test
in
gs
test
lahf
fstpl
dec
jge
push
movl
les
cmpsl
out
test
arpl
cmp
in
test
ret
popf
and
idivb
push
fisttps
cltd
test
or
push
or
dec
fmull
adc
xorb
dec
fdivp
xchg
sbb
push
sub
out
mov
in
stos
dec
xor
aam
mov
jbe
fmulp
cmpl
movsl
dec
nop
out
or
xchg
lock
pop
icebp
sub
testl
out
inc
push
jge
sub
test
js
mov
xor
xor
fmull
cmp
out
mov
push
mov
psubsw
dec
mov
mov
aam
mov
inc
sbb
push
add
mov
jp
pop
mov
mov
rcll
faddl
fiaddl
ja
and
jo
lock
jb
add
mov
dec
shr
leave
pop
bound
scas
dec
stos
imul
xor
or
fninit
adc
ljmp
mov
jmp
fstpl
pop
push
imulb
icebp
dec
int3
stos
daa
jne
loopne
mov
jecxz
jmp
mov
sti
and
sub
cmpsl
jmp
loope
test
sahf
lea
jmp
loope
aas
jnp
push
xlat
jbe
sbb
gs
sbb
inc
push
shll
arpl
jl
fstpt
fisttps
dec
addr16
cmpsl
adc
cmpsb
mov
stos
inc
sub
movl
movb
and
adc
cmp
leave
movsl
pop
test
jg
insl
push
andl
and
sbb
lds
fidivs
fldenv
test
dec
mov
or
sahf
pop
push
mov
cmp
xchg
es
xchg
dec
dec
cmp
adc
push
mov
decl
loop
cmp
lock
sbb
lret
cld
popa
mov
mov
mov
adc
xorl
inc
inc
insb
push
sub
lock
out
or
mov
push
ljmp
dec
jp
out
dec
sbb
std
fistl
inc
rol
icebp
xor
fsubl
int3
scas
inc
pusha
stc
jp
and
adc
leave
loop
sbb
cmp
dec
push
dec
push
mov
fsubrs
cmp
adc
sbb
cmp
jnp
lret
mov
test
pusha
in
or
xchg
cmp
or
lea
sbbl
sub
cmp
mov
popa
pop
pop
xchg
insb
jno
xor
and
adc
neg
mov
dec
push
mov
add
dec
out
cs
iret
adc
das
inc
shr
clc
adc
dec
sub
insl
ret
xchg
sahf
std
sub
add
addr16
lods
push
loop
mov
dec
in
and
movsb
pop
es
rcrb
sbb
mov
xchg
inc
loop
cwtl
arpl
sbb
fcmovb
jg
sbb
ret
hlt
dec
lahf
fdivs
xor
cltd
cwtl
jecxz
cltd
jmp
dec
pop
shl
notb
jbe
sbb
dec
jl
inc
push
add
adcb
pop
les
push
xchg
js
bound
hlt
sbb
stos
or
divb
pop
lahf
jecxz
test
rorl
sub
fnstsw
pop
push
mov
mov
add
je
add
pusha
popa
scas
jb
es
sahf
es
je
shlb
push
add
mov
inc
adc
arpl
pop
jae
sub
xor
mov
test
inc
ret
jae
cli
out
mov
mov
int
call
lahf
mov
stc
mov
das
and
jns
inc
mov
sahf
ljmp
repz
hlt
sti
shll
xor
push
fiaddl
mov
pop
cli
mov
mov
sub
jbe
xchg
sbb
mov
xor
call
dec
movl
stos
pop
jg
repnz
mov
inc
and
jae
ja
push
dec
rclb
repnz
dec
clc
lret
sbb
movsl
and
popf
out
adc
mov
mov
xor
out
push
cwtl
shll
cmp
lret
shl
adc
jle
pop
cli
inc
scas
jbe
cwtl
mov
loop
popa
dec
popa
sbb
and
mov
xchg
jbe
leave
std
xor
xchg
sub
rorl
xchg
and
lret
pop
lods
jp
pop
dec
dec
lods
aas
movb
cmp
or
jge
pop
inc
lea
add
or
cltd
inc
mulb
sub
rcr
xchg
loope
hlt
xchg
sbbb
xchg
inc
hlt
rolb
cmp
pop
test
les
or
mov
mov
test
xor
scas
out
daa
mov
mov
sti
pop
popf
sbb
enter
loopne
pop
scas
mov
xchg
outsl
mov
ja
mov
mov
adc
cld
repz
lds
mov
inc
inc
out
roll
pushf
or
nop
rorb
gs
divb
adc
fstpt
and
push
popf
xchg
int3
arpl
lahf
mov
sub
jle
xor
pusha
pop
ja
dec
lds
add
pop
aaa
cmc
mov
icebp
andl
mov
xchg
out
insb
jb
sbb
push
scas
push
mov
and
pop
cs
push
dec
jg
mov
mov
inc
divl
sub
jecxz
enter
jge
mov
pop
shl
jecxz
mov
bound
test
sbb
mov
movsl
fidivrl
sbb
pop
add
nop
gs
pop
negl
dec
clc
mov
jmp
add
jbe
je
test
fisttpll
mov
pop
and
fwait
pop
divb
frstor
in
cmp
cmp
das
inc
push
in
sub
aad
xchg
das
dec
pop
or
jb
mov
mov
or
imul
call
popf
adc
int3
xorb
mov
push
mov
lock
mov
jmp
mov
out
sbb
vpunpckhqdq
enter
mov
jnp
cmpsl
loop
xchg
cltd
cmpsb
pop
jg
data16
mov
les
pop
scas
xchg
fwait
outsl
ret
ds
adc
ret
push
and
test
stos
shl
cltd
lret
pusha
pushf
mov
lods
dec
lcall
lds
sub
into
in
shll
pop
loopne
lret
stc
adc
out
dec
xchg
push
out
adc
jge
and
mov
add
cltd
push
cmp
jmp
arpl
adc
and
arpl
push
add
inc
jae
ljmp
inc
sbb
das
cmp
ds
in
and
ds
test
subb
mov
shlb
push
ljmp
xlat
fstl
sbb
or
shlb
push
sbb
fdivr
mov
xchg
fidivrl
insb
jbe
popa
fiaddl
or
loop
dec
movsb
call
push
pop
fs
inc
fmull
insl
jmp
jg
cli
inc
nop
add
or
xchg
leave
push
jbe
mov
inc
jle
cwtl
xchg
out
aaa
jnp
pop
mov
loope
add
mov
xor
rorl
hlt
mov
lahf
lods
sub
bound
test
push
jl
inc
outsl
mov
push
add
sub
push
and
xchg
lea
loope
xchg
cmp
cli
out
mov
sahf
pop
xor
dec
cmpsl
repnz
mov
fldcw
shlb
adc
mov
push
mov
push
data16
push
ret
dec
and
jecxz
adc
jmp
push
cs
icebp
pop
pop
mov
adc
addl
mov
mov
mov
test
xchg
mov
lods
shll
or
lcall
or
lds
fists
js
mov
xchg
or
cmpsl
pusha
jge
xor
test
int
leave
sub
out
and
lahf
int3
inc
xlat
push
insl
nop
sbb
sbb
mov
sbb
push
add
sbb
mov
pop
pop
dec
jb
push
and
dec
test
arpl
test
fidivl
cwtl
fwait
in
mov
outsb
pop
mov
sahf
add
push
and
jne
lock
aas
push
jno
out
daa
sub
push
mov
out
push
test
cmc
add
lock
pop
cltd
out
inc
fdivl
lods
nop
nop
lea
jae
add
xorb
aam
iret
in
adcl
push
popf
mov
sbb
mov
in
rolb
add
jne
dec
pop
neg
mov
pop
int3
cli
ret
testb
cmpsl
mov
lcall
sbb
or
inc
sbb
lret
mov
xchg
mov
sub
pop
lea
andl
sub
adc
arpl
ss
inc
push
mov
sub
xor
mov
movsb
repnz
stc
rcll
xchg
sbb
mov
push
or
jle
xchg
daa
int3
jge
inc
cmpl
cmp
lret
and
pop
cmp
and
or
sub
mov
in
shll
and
cmp
test
aad
push
pop
test
icebp
ds
imul
sbb
loope
and
pop
test
push
insb
shlb
pop
repnz
pop
adc
mov
mov
and
scas
sti
movsb
or
cs
push
into
lds
das
lea
repnz
push
pop
mov
xchg
add
or
psrlq
cmpsb
stos
cmpsl
scas
cwtl
add
jg
cmp
aas
push
add
jbe
in
sarl
pop
jecxz
leave
in
inc
test
cmp
mov
fnsave
cwtl
sarb
adcb
mov
xchg
fiaddl
mov
inc
lds
sub
loop
push
mov
fimull
outsb
in
into
push
rcrl
push
lods
lahf
xchg
or
jge
xor
ds
mov
adc
stos
sub
mov
jmp
enter
orl
mov
subb
xchg
pusha
mov
int
outsl
int3
pop
int
pop
leave
push
aad
movb
outsb
mov
mov
push
or
add
loop
jns
xor
add
jge
jmp
jb
ja
divb
sahf
push
pusha
pop
cwtl
gs
mov
dec
fidivs
lds
shll
add
out
lods
push
add
xor
pop
pop
repz
inc
insl
out
or
shl
pop
jne
aad
cmp
xchg
je
test
inc
and
jp
cld
pop
in
push
mov
movsl
xchg
jl
push
jmp
jecxz
mov
rcrb
or
cltd
std
adc
aas
hlt
stos
orl
sti
pushf
adc
dec
push
je
or
in
xchg
in
push
sub
dec
mov
jp
sub
dec
js
test
xor
mov
mov
ret
inc
mov
xchg
or
inc
mov
into
lods
popl
pop
cli
sbb
clc
mov
sub
sbb
push
push
in
mov
mov
push
pop
ret
pushf
les
ds
pusha
imul
ret
mov
lret
mov
fadds
push
or
repnz
pusha
jle
aas
insl
jo
popa
loope
mov
movsb
lds
cmpsb
nop
stos
xor
out
mov
popf
cli
ljmp
fs
fadds
cld
testb
addl
add
cli
fcmovne
scas
inc
xchg
roll
scas
sub
in
cld
loop
shlb
imul
sbb
adc
add
mov
xlat
fnstcw
scas
loop
test
add
inc
fnstcw
outsl
xchg
cli
dec
jnp
xchg
and
sub
test
inc
xchg
fsubs
jno
or
cld
cmp
mov
fidivs
bound
loop
ret
orl
mov
aad
in
enter
mov
cli
out
jb
or
jns
aad
cmpl
xchg
adc
adc
push
mov
jno
mov
in
shll
bound
inc
daa
sbbl
xor
iret
pop
lret
dec
sub
and
push
or
mov
inc
xlat
test
jne
pushf
fisubrl
xchg
fstps
mov
add
jne
xchg
int
ljmp
ds
data16
jge
mov
daa
scas
comiss
mov
xchg
repz
lea
stos
ss
pop
neg
ja
or
stos
jg
and
loope
push
pop
jl
stos
mov
in
dec
or
jge
jmp
pop
mov
mov
pop
sub
clc
cmpb
mov
jbe
rol
jne
mov
pop
ret
test
dec
cmpb
fwait
sbbb
xchg
out
nop
cmp
fisttpl
notl
pop
mov
add
jns
mov
loop
aad
sarl
ljmp
mov
fisubrl
test
jns
cmp
xlat
cmp
add
jg
outsb
or
inc
ficomps
call
or
cwtl
cltd
and
push
pop
or
sbb
or
fabs
inc
stos
mov
outsl
or
sub
jae
outsb
pop
gs
outsl
mov
fisubrl
mov
cmp
out
ljmp
enter
mov
mov
std
adc
ljmp
inc
das
xchg
arpl
dec
rolb
bound
cmp
sbb
aaa
push
pop
mov
xchg
cli
repnz
mov
sub
pop
mov
xchg
mov
jns
out
push
xor
xchg
test
mov
call
hlt
ds
aam
mov
adc
dec
insb
mov
cmp
adc
push
push
roll
sub
ljmp
and
orb
out
mov
loope
fidivs
pusha
test
ss
xor
imul
lods
adc
jno
dec
mov
push
cmp
iret
out
and
hlt
in
mov
mov
imul
and
aad
test
inc
pop
inc
movsb
sub
lret
cmp
cmp
test
sahf
xchg
adc
sbb
dec
inc
xorl
lock
iret
inc
jns
cltd
mov
pop
nop
pop
jb
lods
or
cli
mov
pcmpeqd
cwtl
mov
outsb
sub
adcl
andb
cmp
xlat
mov
hlt
in
push
loopne
sbb
pop
fldt
shrb
daa
inc
pop
or
loop
pop
les
mov
mov
fstpl
ss
rol
mov
add
and
mov
loop
js
movsl
cmpsb
jae
sbb
mov
sbb
lahf
subb
push
sbb
inc
outsl
frstors
lret
add
out
iret
cmp
xchg
sbb
clc
fscale
mov
filds
jl
mov
repnz
mov
fs
shll
ja
push
roll
pop
fdivrs
test
mov
mov
ja
sub
mov
ret
mov
aaa
add
push
jno
mov
cld
mov
cs
mov
dec
mov
imul
cmp
es
add
mov
fcoms
cli
clc
jno
pop
clc
sbb
xor
sub
mov
or
out
push
ljmp
sub
xor
ljmp
outsb
push
clc
cltd
push
xchg
push
daa
mov
sbb
nop
shr
fwait
sbbl
into
into
stc
out
imul
rolb
lea
and
pusha
pop
mov
nop
jecxz
dec
pop
fimull
mov
jmp
cmpb
jle
cmpsl
sbb
imul
pop
mov
sbb
mov
pop
mov
rcrb
sti
lods
cmp
lcall
ljmp
imul
lret
leave
imul
arpl
inc
sbb
add
lahf
cmp
sbb
sbb
xor
lcall
jecxz
call
cmp
aad
aad
pop
scas
fisubs
or
bound
shrb
addr16
shrb
xor
xor
push
pushf
in
aas
lahf
ret
lret
or
mov
out
movsb
and
adc
sti
cld
push
test
lret
xchg
gs
movsb
xchg
push
xchg
rorb
sahf
sahf
into
in
out
out
xor
inc
cltd
mov
movsb
aas
cmp
sub
pop
add
out
inc
dec
sub
inc
ffreep
into
rorl
xchg
aas
stos
out
fsubl
lods
shlb
fmuls
adc
jne
div
push
notl
adc
movb
sahf
out
inc
ja
push
cmp
mov
fidivrs
inc
push
pop
sub
orb
ss
popa
push
bnd
dec
mov
les
xchg
stc
lcall
xchg
outsl
push
aas
push
lret
out
sub
jle
mov
aas
cmp
in
je
int
dec
sbb
mov
adc
push
out
jg
xor
cmp
mov
fldcw
movsl
fst
mov
sarb
sbb
xchg
idivb
jno
mov
push
lahf
and
jbe
insb
pop
dec
sub
mov
imul
stos
dec
fistpl
daa
pop
push
adc
or
cmp
dec
lods
jmp
cmp
xchg
inc
sub
cmc
shrl
mov
js
lods
in
aam
fstps
inc
mov
sub
in
xor
ss
imul
add
jp
dec
cmp
mov
jno
outsb
adc
xor
inc
mov
cmc
inc
cmp
dec
cmp
negl
call
ja
jne
adc
dec
aad
and
cmp
es
push
mov
call
dec
or
fstl
add
frstor
lret
jg
cmp
mov
icebp
mov
add
scas
clc
add
xchg
mov
out
sub
jb
clc
ficoms
add
aam
xchg
inc
sub
jg
hlt
loope
mov
dec
xchg
aas
jl
or
adc
in
in
xchg
outsb
insb
jge
rol
cmp
and
lret
sbb
cltd
and
ret
mov
xchg
in
adc
movsb
repz
das
lock
lcall
cmp
enter
stos
and
sub
pop
and
outsl
insl
rcll
fisttpl
push
pop
sub
gs
jle
push
mov
jae,pn
shl
pop
cmp
fmull
push
data16
pop
mov
aam
lahf
int
ret
int
call
movsl
jl
pmulhw
mov
jp
mov
into
add
stc
push
jbe
daa
xchg
inc
cwtl
push
pushl
lahf
xor
ret
push
push
ljmp
aas
cld
ja
mov
bound
jbe
lock
or
inc
push
sbb
pop
daa
push
mov
mov
nop
jne
scas
ret
mov
or
iret
sbb
movsl
lds
dec
mov
mov
jae
leave
or
xorb
pop
add
mov
cs
icebp
sbb
stos
jecxz
pop
out
cmpb
adc
dec
cmpsw
ret
and
push
loop
pop
push
sbb
cmp
jo
rorl
sahf
inc
cmpsl
jmp
jne
pop
nop
xor
in
push
adc
mov
and
mov
cld
jge
cmp
pop
outsl
ja
aam
or
test
mov
insb
adc
sbb
mov
lock
inc
add
mov
out
xchg
lods
std
pop
jne
pop
aad
sarl
mov
jns
sub
adc
dec
int
adc
lcall
sub
je
mov
fstl
popf
push
imul
fsubr
fdivrl
dec
in
xchg
stc
sbb
pop
xchg
lds
sub
push
inc
and
mov
add
imul
pop
scas
jns
enter
or
mov
cmp
mov
xchg
mov
out
pop
call
adc
aam
mov
outsb
imul
aas
in
je
push
and
jae
aad
mov
or
cmp
outsb
fsubs
les
xchg
nop
xchg
loop
mov
mov
mov
and
sbb
jl
mov
scas
scas
add
pop
or
test
loopne
in
jb
rcll
cmp
jne
fbld
jl
test
or
outsb
adc
hlt
sbb
popf
cltd
aam
imul
aad
mov
push
loope
mov
jle
out
adc
fisttpll
mov
mov
push
cwtl
pop
adc
dec
sbb
lods
in
jmp
insl
stos
push
or
imul
enter
imul
lret
iret
popf
sbb
out
test
push
push
jno
mov
pop
cmp
cmp
pushf
push
sub
in
in
mov
xor
dec
push
jp
fdivrl
jae
mov
fidivrs
inc
scas
push
outsl
jno
es
xchg
pop
add
mov
fstpl
push
mov
xor
xchg
push
jp
jle
pop
mov
es
imul
sbb
repz
push
std
push
mov
cmp
jecxz
adc
and
in
js
repz
jbe
aaa
jecxz
xchg
lds
mov
jmp
xchg
ret
jmp
dec
jns
lods
addr16
jns
arpl
fstl
aas
std
popf
ljmp
xchg
je
lret
iret
orl
fimuls
lret
scas
xchg
movb
loopne
mull
shll
push
mov
push
lods
cmpsb
maskmovq
divl
mov
mov
dec
sbb
adc
mov
pusha
xchg
movsl
mov
aas
push
dec
adc
pop
repnz
loopne
inc
aad
inc
mov
mov
lret
jae,pn
das
pop
stos
jl
in
fstpl
fcomi
ds
sub
xadd
mov
int
add
das
sbb
ja
stos
shl
ds
adc
mov
mov
mov
inc
cmpsl
and
int
lds
mov
pop
mov
mov
jecxz
xlat
xchg
sbb
movsl
mov
stos
xor
jb
fnstsw
shrl
push
sbb
jge
lods
loopne
rorb
insb
cmp
sub
push
rol
cmpsl
sub
cmpsl
loop
ret
push
xor
mov
xchg
lea
shrl
push
push
and
movl
sbb
call
inc
jl
add
aam
push
and
loope
pop
mov
cmp
stos
xchg
pop
cwtl
xor
and
cmp
cmp
mov
push
imul
jp
rcrb
pop
pop
iret
out
pop
int3
pop
out
in
mov
cwtl
adc
ds
aam
mov
not
xchg
aaa
cli
dec
pop
add
mov
mov
lcall
arpl
xor
push
aaa
sub
imul
call
fisttps
fwait
jl
cld
add
inc
stc
and
inc
pusha
in
shll
xchg
xchg
jbe
or
or
cwtl
clc
jbe
sub
mov
or
jg
inc
mov
and
lcall
daa
into
adc
nop
fiaddl
adc
sbb
gs
arpl
jmp
pop
xchg
mov
xchg
jl
mov
addb
sbb
add
adc
lods
mov
loop
add
loopne
add
xor
ljmp
lahf
test
test
es
add
or
rorb
mov
push
cmp
push
fisubs
dec
stos
movsb
xor
es
dec
lret
adc
imul
add
std
jmp
cmp
or
push
in
fstps
mov
mov
leave
add
orl
pop
shrl
out
cmp
push
jmp
and
jge
jnp
pop
pop
repz
xor
xor
mov
fs
adc
xor
mov
sbb
out
loopne
pop
ds
enter
jnp
inc
xor
rcrl
cmp
mov
loop
lds
push
pusha
inc
rcr
and
cltd
iret
int
or
inc
nop
mov
cltd
mov
mov
mov
jns
aad
into
lahf
jmp
stc
cld
stos
call
dec
outsl
fldenv
dec
cli
lods
cmp
xchg
outsb
mov
fcoml
mov
push
xchg
js
insb
fildll
sbb
adc
and
aam
xor
jge
cli
xchg
repz
mov
mov
push
pop
loope
sbbl
hlt
xor
les
mov
ficoms
push
jmp
lods
out
test
cmc
pusha
mov
ret
dec
nop
jne
push
int3
insb
fists
mov
nop
js
sbb
fdecstp
test
nop
shlb
shr
or
popa
adc
pop
and
gs
sbb
addr16
in
push
loop
add
rorl
or
fstl
xchg
clc
cmpsb
cmp
jno
push
jb
xchg
xchg
hlt
les
push
lods
inc
mov
dec
mov
lock
inc
test
fisttps
add
out
test
and
push
int3
rcl
adc
jb
inc
and
outsb
inc
fs
mov
xchg
insb
outsl
push
dec
push
xor
aad
mov
cld
sbb
mov
fsts
pop
mov
push
ret
and
inc
scas
or
int3
add
xor
daa
fsts
pop
repnz
push
outsl
jl
inc
jae
sbbb
or
jl
jo
aam
mov
adcb
shll
mov
mov
inc
lret
ja
pop
inc
aam
jg
cli
out
mov
mov
xor
iret
inc
daa
push
push
test
shr
cli
stos
mov
or
pop
adc
fsubs
std
push
fistpl
or
std
clc
mov
push
test
idivl
inc
sub
sub
fsincos
mov
int3
push
cltd
push
adc
cld
fcoms
aas
mov
add
push
loopne
dec
cmp
sub
sub
adc
jl
jl
cmp
fcmovnu
movsl
cmp
jle
mov
pop
and
xor
fisttpl
push
mov
jecxz
jbe
arpl
test
inc
xchg
pop
pusha
and
sbb
mov
push
push
jmp
subl
hlt
dec
mov
repz
es
lcall
or
push
aas
shll
add
xchg
dec
jmp
hlt
repnz
sbb
fldt
int3
mov
sub
rcl
loopne
cld
imul
jl
push
mov
pusha
xchg
push
icebp
add
cmpsl
adc
insl
mov
inc
cmpsb
jae
xor
xor
gs
stos
cmp
bound
int
ds
dec
mov
add
inc
mov
cwtl
inc
jbe
and
xor
sbb
popf
les
adc
shrb
cmp
jbe
xrelease
dec
cmp
and
rcr
sub
sub
xchg
mov
pop
mov
pop
fildll
xorl
pop
lret
add
push
xchg
aam
pop
cwtl
mov
push
aad
mov
int3
imul
add
dec
cmpsl
movsb
into
mov
and
pusha
mov
shll
cltd
push
mov
cs
lret
xor
popf
add
mov
pop
adc
inc
adc
fimuls
roll
call
xchg
xor
xor
cmpb
pop
mov
pop
push
mov
cmp
sbb
add
mov
cli
xchg
inc
push
fdivl
dec
dec
inc
loope
scas
jmp
iret
pop
sub
mov
stos
das
lea
xchg
mov
cmp
inc
push
pop
push
sbb
push
sub
iret
in
inc
std
push
call
push
mov
arpl
test
mov
pusha
aas
add
mov
shll
xchg
fwait
lret
jg
pop
fldl
dec
push
or
test
popf
pushf
xchg
aad
shrl
js
xchg
sarl
shlb
adcb
cld
insb
idivl
ficoms
jecxz
in
adc
rcr
fstl
and
cmpsb
push
aas
mov
jecxz
or
mov
add
sbb
in
insb
sbb
push
imul
xor
lods
loope
add
sahf
push
xor
lcall
ficoms
cmpsl
xor
outsb
shl
xabort
hlt
xor
out
ret
mov
fisubrs
sti
cmpsl
add
insb
ss
xor
mov
or
in
mov
mov
fsubp
lcall
mov
cltd
sub
xor
xor
mov
pop
orl
loop
jp
sbb
push
push
popf
subps
jp
rcll
stc
jno
lret
lret
iret
adc
mov
nop
dec
popa
dec
mov
mov
adc
outsb
jo
sub
mov
pop
jle
dec
xchg
in
xchg
pop
test
das
in
pop
cltd
mov
jae
mov
mov
sbb
xchg
xchg
jb
inc
movsb
jmp
in
lahf
mov
xor
pusha
mov
inc
outsl
loop
fldt
mov
xchg
rcrb
pop
pop
push
imul
ja
pop
dec
cmpsb
pop
leave
jmp
cmpb
adc
adc
sub
mov
and
xchg
adc
mov
push
jl
pusha
jmp
push
cmpsb
lds
in
adc
inc
into
into
mov
popf
aas
mov
xlat
into
outsb
pop
cmp
jo
xchg
pop
hlt
pop
mov
sub
add
leave
xchg
inc
inc
xor
push
in
and
sbb
push
ljmp
xor
cltd
ds
pop
mov
jg
mov
xchg
aaa
dec
test
or
and
fsub
sbb
xchg
dec
xor
mov
dec
or
fistpl
insb
cmp
mov
rorl
in
stc
jp
aad
out
std
sub
pop
mov
fwait
xchg
and
cmp
mov
push
jle
xor
inc
jb
bound
mov
and
dec
fildl
leave
inc
arpl
xor
adc
sbb
push
dec
add
mov
roll
cmp
or
or
xchg
xor
in
or
dec
add
fldenv
bound
jecxz
pop
leave
loop
es
mov
outsl
inc
mov
mov
insw
in
addr16
pushf
fldenv
adc
in
pusha
add
push
dec
and
mov
mov
and
cmp
in
inc
outsb
xchg
pop
adc
dec
push
mov
push
out
sub
add
cld
push
and
cltd
cmc
rcl
push
inc
pop
or
mov
or
mov
xor
xor
mov
mov
xor
xorl
scas
lock
ja
ja
lar
outsl
sub
and
lock
outsl
pop
insb
nop
rep
pop
inc
sub
adc
cli
mov
cmp
dec
std
mov
jge
cld
popf
adc
inc
and
push
push
cld
roll
jno
push
in
cmp
xor
push
insl
dec
pop
orl
xchg
mov
ss
adc
jmp
das
pop
jmp
inc
sub
stos
push
adc
sbb
dec
cwtl
xlat
imul
push
sbb
push
xor
cwtl
in
shll
sbb
fmull
and
sbb
pop
xchg
lret
in
push
outsb
xchg
out
repz
cmp
aam
gs
jl
mov
dec
ja
jbe
dec
push
sub
mov
add
cld
int3
mov
je
fwait
ror
aad
dec
and
rorb
and
mov
outsl
pop
mov
inc
sub
fstps
clc
xchg
cmc
jmp
push
push
mov
cmp
aas
idivb
inc
mov
pop
sub
jb
jl
mov
mov
insb
or
fstpl
js
dec
jl
nop
data16
imul
jl
adc
ja
in
xor
xor
add
mov
push
jmp
and
dec
rcl
arpl
sub
xchg
push
pusha
inc
nop
negb
jne
xor
xchg
cmpsl
or
adc
push
jp
ret
mov
push
mov
popa
aad
push
mov
jmp
insb
add
mov
bound
push
dec
sub
outsb
xor
sarb
ret
dec
cmpl
inc
pop
rolb
mov
inc
test
lods
push
mov
push
test
popa
mov
movsb
shlb
lahf
scas
pop
pop
mov
add
jle
sbbb
insb
sub
sbb
adc
inc
cmpsl
xchg
jl
mov
ja
nop
sub
mov
add
ret
bound
cmp
and
mov
shlb
inc
jno
mov
cwtl
and
fwait
sbb
movsb
sub
data16
pop
dec
inc
cmc
inc
add
scas
test
mov
cwtl
adc
mov
adc
leave
rcll
popa
inc
out
cmp
gs
int
cs
push
jo
cmpsb
sub
mov
jl
mov
stos
ss
out
adc
push
jl
pop
fnstenv
adc
les
scas
out
cmp
mov
pop
mov
mov
adc
sbb
xchg
cmpsb
dec
mov
adc
add
imul
add
test
dec
sub
cvtps2pd
mov
jge
xor
mov
mov
inc
jns
xchg
mov
dec
mov
mov
in
mov
clc
fimuls
mov
or
xchg
insb
andb
mov
sub
push
xchg
mov
and
test
and
or
aad
jp
add
jae
aaa
ja
imul
mov
popf
mov
mov
adc
std
stos
mov
loop
shl
aas
fstps
pop
je
popf
dec
shlb
mov
push
cltd
ret
xor
xlat
xor
xchg
outsl
stos
fdivr
push
jecxz
pusha
gs
loop
sbb
test
outsb
jle
add
sahf
add
sbb
or
add
mov
repnz
fldl
stc
lgs
cwtl
jle
cmc
int
int3
hlt
lret
and
and
xchg
stos
cmp
adc
cmp
mov
jb
stos
dec
push
loop
or
roll
push
sub
jns
aas
sbb
and
das
jo
pop
mov
and
jns
stc
std
je
ds
jge
cmpsb
imul
and
jg
add
jb
enter
icebp
lahf
sti
dec
add
popl
cmp
pop
push
shlb
mov
daa
cld
lds
push
rcr
cld
sbbb
cmp
pushf
cmpsl
xor
and
jecxz
mov
ret
stc
jl
idiv
orl
adc
jns
mov
dec
mov
jecxz
add
in
outsl
movsl
adc
xor
xchg
sbb
ljmp
popf
arpl
add
dec
repnz
in
je
mov
scas
push
loop
xor
xor
in
xchg
fsubs
insl
sarb
divl
or
mov
dec
dec
sbb
stc
int
in
mov
rol
call
outsl
push
pop
cmp
xor
sbb
scas
hlt
divb
aaa
mov
repz
lcall
hlt
rclb
sbb
jle
sti
add
addr16
loop
mov
or
in
mov
in
nop
out
mov
push
lret
insb
outsb
jmp
lds
cli
inc
sbb
mov
jno
cmp
mov
arpl
scas
push
popf
aas
scas
fnstenv
sbb
insb
popa
push
mov
cwtl
push
mov
jmp
scas
repz
adc
inc
loopne
out
fadds
add
pop
popf
shrl
sbbb
cmp
add
mov
decl
inc
xchg
cmp
push
fimull
jmp
pop
cli
daa
add
mov
push
xor
js
rol
icebp
das
nop
xchg
stos
pop
xchg
dec
notl
subb
inc
hlt
gs
mov
push
xor
mov
stc
xor
add
jle
mov
lds
out
ja,pt
add
inc
testb
xadd
add
push
sub
mov
repz
sbb
imul
aaa
ret
xchg
dec
mov
pop
push
push
das
or
inc
imul
inc
cmp
div
and
lods
scas
clc
scas
sbb
dec
test
sbb
and
ret
rolb
repz
push
ret
test
jle
jnp
cli
jmp
mov
sub
cltd
ret
pop
mov
in
mov
les
push
cmp
push
imul
push
loope
dec
in
sub
dec
mov
sbb
ja
fimuls
inc
std
jne
push
push
inc
fildll
xchg
xchg
js
daa
mov
fsts
adc
dec
and
loope
sahf
xor
cli
jge
bound
rol
xlat
xor
orb
in
cmp
sub
xchg
cmpsl
imul
jo
stos
and
daa
sahf
pop
data16
xor
or
popa
pop
fistl
sub
ljmp
mov
jns
call
in
int
es
cs
mov
dec
xlat
aas
mov
loope
mov
jae
add
fwait
mov
mov
mov
push
addr16
ret
scas
jecxz
mov
adc
xor
subl
dec
push
or
in
lods
lret
jb
inc
sbb
popa
scas
lea
negb
pop
add
sub
repz
repnz
lock
xchg
outsb
out
lock
popf
add
fadds
insl
inc
es
in
xor
stos
daa
and
imul
stos
dec
add
movsl
jmp
mov
int
imulb
mov
mov
clc
cmp
push
out
call
lret
or
fwait
sbb
add
add
std
fsub
jge
xor
jno
mov
icebp
mov
jge
stos
and
adc
xchg
repz
stos
push
xchg
mov
push
pop
xchg
and
pop
gs
dec
dec
cmpsb
mov
cmp
add
ret
cmc
jg
js
cli
es
cmp
pop
lods
test
jns
shll
and
fcomps
pushf
inc
shl
pop
or
cld
fidivrl
push
mov
std
cmpsl
js
inc
or
movd
inc
in
idiv
inc
sbb
cmp
xchg
cltd
in
or
add
mov
push
pushf
and
stc
fadd
jbe
xchg
addr16
cmp
popa
jg
adc
btcl
xchg
fistpl
jp
jne
mov
ja
push
bound
sti
xchg
jge
jecxz
and
cltd
inc
xor
pop
es
cmpsl
sub
add
jecxz
or
mov
lcall
pusha
ja
ljmp
std
andb
ljmp
popf
pop
ret
repz
sti
mov
mov
jge
insl
mov
dec
je
ljmp
jne
dec
test
cmc
insl
mov
add
cli
loop
dec
jnp
iret
aaa
aaa
mov
pop
repnz
xor
test
repz
aaa
pop
je
fidivs
add
ret
push
xor
inc
pop
pop
add
jo
adc
out
jb
sbb
ja
sbb
negb
sub
xchg
popf
mov
sbb
or
dec
fmuls
xchg
pop
cltd
int
subl
int
cltd
xor
popa
inc
or
popf
jge
xor
dec
outsl
fildl
mov
or
sub
cmp
push
jecxz
mov
dec
add
sti
fsubs
repnz
jbe
imul
xor
in
push
push
shl
aas
lahf
xchg
cmpsl
test
fnstenv
mov
push
sahf
add
xchg
in
and
dec
ret
jl
xchg
cmp
xchg
mov
jbe
jg
movsl
mov
cli
cmp
lahf
dec
adc
adc
or
sbb
pushf
addr16
sbb
mov
push
push
mov
mov
and
or
xor
xorl
les
scas
inc
push
hlt
jl
stos
int
stc
stc
negl
cmp
dec
push
arpl
fidivl
adc
xchg
scas
mov
sbb
movsl
pop
es
jp
shrl
pop
gs
cmpsb
and
aas
add
jmp
jo
test
icebp
adc
arpl
lret
xor
mov
adc
dec
xor
dec
mov
ds
jbe
loop
sbb
stc
int
jl
adc
stc
mov
or
push
ret
stos
cli
int3
inc
mov
sbb
cmpl
das
inc
iret
lret
call
clc
pushf
sub
pop
inc
and
sbb
in
mov
enter
jbe
cmp
push
cs
sbb
dec
and
imull
xchg
jle
jg
mov
adc
push
fnstenv
dec
and
in
movsb
inc
test
aaa
dec
insl
mov
fistpll
jae
mov
xor
xchg
xchg
lds
hlt
jnp
jl
loopne
divl
sahf
push
push
adc
sbb
test
adc
iret
in
dec
jmp
sbb
das
push
bound
in
xor
jp
daa
pusha
int3
jl
inc
fnstcw
out
xor
cbtw
add
stos
xlat
mov
aas
jnp
adc
and
mov
sbb
addr16
dec
adc
sti
mov
cmp
int3
enter
insl
imul
fwait
je
inc
jnp
mov
mov
fwait
sbbl
lods
rorb
or
mov
dec
mov
shrl
scas
sbb
movswl
jmp
in
cmp
push
scas
in
xchg
stc
movsl
and
mov
jne
sub
sbb
cmp
mov
ja
hlt
mov
cmp
mov
dec
inc
stc
xor
or
dec
push
sbb
mov
ss
je
movsb
cmp
sti
in
movswl
or
cld
int
push
mov
aaa
int
pop
xchg
jmp
mov
jae
dec
and
dec
clc
mov
mov
iret
xchg
imul
imul
adc
loop
adc
mov
scas
and
push
inc
jbe
js
sti
mov
mov
xor
jne
inc
xor
lahf
enter
addr16
sub
dec
shrb
jp
inc
dec
scas
test
lock
or
inc
jl
pop
dec
xchg
sahf
or
mov
mov
out
adc
jnp
xchg
mov
adc
and
shr
adc
sbb
mov
ret
pop
mov
rcl
mov
je
push
lret
mov
movl
push
sbb
add
popf
cmpsb
sub
pop
pusha
fwait
and
add
pop
mov
lret
xchg
sbb
cmp
insb
inc
mov
cmp
lcall
mov
or
pop
rorb
lds
adc
and
ljmp
push
pop
sbb
push
xchg
dec
mov
jge
stc
cmp
movsb
adc
mov
and
inc
stos
mov
sbbb
dec
sbb
enter
enter
in
lret
int
mov
call
xor
mov
aas
packssdw
mov
rolb
cmp
ret
cmp
or
jecxz
ds
divw
and
lret
and
mov
push
icebp
pushf
add
fsubrs
pop
or
xor
jns
bound
imul
lods
sahf
movsl
xlat
jno
pop
call
and
outsb
lods
mov
mov
adc
das
lahf
test
xchg
jno
cmp
jb
out
out
loopw
adc
and
clc
jl
cld
fimull
test
loopne
cli
add
xor
in
paddq
addl
lods
jl
xchg
xchg
in
imul
mov
mov
cltd
sbb
adc
mov
shufps
xor
xchg
in
enter
dec
adc
or
add
pop
pushf
jbe
sub
push
push
pop
jbe
xchg
lret
jne
jne
ljmp
cmp
mov
jecxz
sub
into
xor
and
cmp
cmp
das
idivl
adc
es
pop
adc
sub
inc
jg
xor
jp
and
add
in
pop
insl
stos
cltd
and
or
mov
cltd
movl
inc
cmpsl
movsb
icebp
jmp
popf
add
shl
pop
inc
in
shlb
lock
mov
loope
cmpsl
call
mov
in
dec
std
jo
inc
pop
dec
fmull
dec
aaa
mov
push
cmpsl
test
loope,pn
mov
mov
adc
jae
fwait
mov
ja
fisttpl
cmpl
inc
sub
fisubrs
push
mov
add
xor
xchg
lock
inc
mov
sub
inc
pop
xchg
shrl
push
pop
out
sbb
data16
mov
lret
adc
sbb
sub
sub
sub
xchg
hlt
int
mov
cwtl
leave
sub
cli
cmpsb
int
sub
lahf
test
ror
jo
adc
orb
jge
test
mov
adc
test
dec
dec
dec
dec
popf
andl
ja
cmp
dec
sub
jmp
adc
pushf
push
sbb
loope
in
pusha
inc
test
sarb
dec
add
arpl
scas
xchg
xchg
int3
pop
ret
and
cmpsb
pop
arpl
dec
imul
jl
lock
add
xlat
xor
mov
jns
and
dec
lret
rolb
xchg
in
mov
and
call
cmp
push
mov
push
scas
out
ret
sahf
dec
xchg
fistps
fs
xchg
jo
out
push
jne
outsb
xor
jmp
cltd
jmp
push
jecxz
call
and
cmp
dec
mov
scas
jmp
lcall
aam
bound
movsl
mov
inc
jmp
cmp
aam
xchg
wrmsr
xlat
xor
xor
mov
lahf
adc
clc
daa
push
xor
sbb
sub
and
movsb
bound
xchg
movsl
scas
or
cli
fimull
pop
test
sbb
jmp
xor
inc
add
pop
add
sub
xor
fidivs
mov
inc
cmp
adc
ljmp
loope
stc
and
loop
icebp
xor
cltd
repz
out
call
aas
xor
pop
jns
addl
popa
repz
xorl
leave
cmp
sub
jbe
insl
cltd
dec
lahf
mov
imul
int
inc
inc
xchg
in
lea
movsb
aad
cmpl
aas
iret
lret
mov
loopne,pn
out
cmp
mov
push
jle
mov
les
inc
cmpsb
outsb
mov
mov
sbb
xchg
das
or
cmc
xchg
gs
lds
inc
pop
sahf
push
pop
sarl
dec
mov
mov
xchg
inc
mov
stos
jnp
cmpsb
xor
pop
lcall
adc
fbstp
mov
mov
jge
inc
jo
sbb
lock
sub
andb
std
jmp
xor
mov
inc
mov
out
js
outsb
sub
inc
pop
les
xor
xchg
dec
jp
add
test
cmpsl
or
clc
jno
sub
call
mov
out
push
icebp
push
lret
lret
insl
loopne
fsubs
fidivl
and
enter
cmp
aaa
add
out
pop
out
mov
out
jmp
mov
test
movsb
jg
mov
loopne
push
cltd
repnz
iret
pop
mov
jp
mov
push
add
rcrl
lahf
jne
mov
je
mov
or
fwait
aas
sbb
fcomp
add
pop
fisubrl
dec
adc
je
insl
mov
std
sbb
xchg
cmp
mov
stos
inc
adcb
or
pushf
push
xchg
mov
push
adc
mov
jns
scas
mov
das
pop
sti
jecxz
xorb
dec
cltd
cmp
lods
and
cmpl
sbb
mov
out
cli
enter
fwait
int
movsb
jne
push
add
xor
daa
out
stos
jbe
int3
lock
add
fsubs
fisttps
in
mulb
mov
out
jg
popf
jmp
add
mov
jb
xor
xor
xchg
aad
in
push
push
mov
cmp
loop
imul
dec
lock
jecxz
pop
popf
je
fistl
insb
inc
and
testb
xchg
int
sub
inc
jb
iret
gs
js
pop
cld
fidivl
push
subb
rcrl
lahf
jge
sbb
mov
testl
jnp
outsl
cmp
sbb
or
out
xchg
push
dec
movsl
out
orl
xorb
mov
add
adcb
dec
or
cmp
inc
mov
add
aaa
and
shrl
and
pop
lds
add
inc
push
out
pop
dec
push
es
stos
and
dec
adc
inc
sub
cli
inc
mov
popa
lret
lods
mov
pop
in
cmp
mov
stos
push
push
sarl
jb
sbb
dec
pop
cwtl
mov
adc
pop
sub
shl
inc
push
or
dec
popf
lahf
push
xchg
shr
mov
ror
push
mov
iret
push
mov
fsubrp
cld
xchg
dec
cmp
data16
adc
inc
mov
adc
fsubs
js
movb
jg
aam
pusha
test
xchg
sbb
pop
jecxz
dec
mov
jae
jecxz
out
mov
outsb
pop
xor
jne
pushf
cli
mov
sub
mov
mov
fsubs
sub
inc
jecxz
or
ds
mov
cli
fdivrl
in
push
sbb
dec
adc
scas
or
call
les
pop
jno
pop
mov
jl
in
dec
enter
pop
cwtl
maskmovq
test
dec
pop
push
and
out
jae
loope
int3
arpl
in
mov
int3
testl
cmp
sbb
cltd
fisubrl
lods
fs
mov
idivl
rcrb
pop
mov
sbb
jnp
stos
shrl
aaa
imul
or
mov
mov
fsts
daa
adc
dec
aad
lds
pushf
push
dec
cltd
repz
mov
dec
pushf
sahf
or
clc
xchg
xor
xor
cmp
std
dec
cld
lock
sahf
pop
lahf
xor
and
add
push
inc
xchg
push
dec
pop
mov
test
add
pop
je
mov
dec
aas
insl
sbb
out
aas
and
imul
add
xchg
aam
fmull
sbb
filds
pusha
push
sub
sbb
das
xorb
adc
sbbb
in
jne
cmc
or
push
mov
sbb
push
add
xchg
xchg
outsb
fwait
add
jbe
fbstp
inc
pop
add
and
and
gs
ja
sbb
inc
xchg
jle
ljmp
xorb
mov
cmp
dec
loopne
mov
pop
push
push
clc
aad
jb
cltd
pop
mov
repz
dec
xor
daa
xor
mov
insl
sbb
rolb
insl
mov
scas
pxor
mov
xchg
mov
insb
shrl
dec
jmp
mov
movsl
dec
fs
adc
mov
fisubl
and
lcall
fldenv
imul
popf
mov
test
cmpsb
push
pusha
fnsave
and
lods
out
sarb
cmc
repz
dec
adc
pop
jp
out
and
lock
jne
pop
dec
add
ss
mulb
dec
cmpsb
pop
fistps
test
mov
sub
shl
sbb
add
stos
push
clc
test
shl
fnstsw
aaa
fstpt
call
sbb
dec
movsb
cmp
test
and
test
pop
divb
sbb
and
jae
adc
and
movsl
add
push
ds
stos
js
outsb
filds
sub
std
lret
sarl
into
sbb
cmp
mov
pop
lods
std
sbb
push
pop
jp
xchg
out
push
fstpl
jno
out
ds
or
sbb
int3
inc
xchg
push
adc
ja
lods
mov
sub
dec
into
cmp
push
dec
mov
cmp
ficomps
pmaxub
and
mov
sbb
pop
push
rep
aad
ljmp
pop
sub
mov
loope
xchg
cwtl
fldenv
or
rolb
dec
pop
mov
push
adc
aas
push
xchg
lock
shll
adc
or
mov
xor
push
pop
mov
in
jae
loop
fidivrl
inc
dec
pop
jle
jae
and
adc
call
mov
or
nop
enter
adc
sbb
xor
sbb
out
adc
lahf
jb
inc
aas
jae
xchg
es
and
repnz
stos
ret
rcll
mov
jge
mov
sub
ss
jecxz
mov
adc
jg
mov
xchg
adc
pushf
push
ret
pop
sbb
subl
ds
inc
lods
lahf
adc
xor
mov
orb
push
imul
adc
jns
mov
push
or
sub
cmp
adc
loopne
push
fidivl
inc
dec
mov
mov
test
push
jbe
ror
stos
add
xchg
inc
mov
mov
mov
adc
jbe
mov
fwait
inc
cld
xchg
cld
mov
stos
rorb
and
dec
cmpsl
inc
or
jns
mov
andl
fiadds
inc
enter
aaa
inc
sub
sub
les
sbb
and
sbb
shrb
inc
mov
mov
lret
loop
sub
fistpl
lahf
xchg
out
or
out
dec
lods
ss
int
test
cmc
mov
pop
dec
mov
icebp
xor
jp
test
fcomps
popa
lret
push
pop
fidivrl
int3
jl
pop
ret
cmpb
pop
dec
lods
push
cmc
sub
shrl
and
dec
mov
icebp
jmp
rcrb
js
pushf
sbb
adc
mov
scas
push
or
sti
inc
out
mov
mov
cmp
adc
clc
loop
fs
jno
jge
fisttps
adc
inc
xor
inc
lods
and
dec
add
gs
dec
test
and
mov
imul
or
ljmp
lock
sub
pop
arpl
jae
mov
mov
pop
xor
push
mov
pop
or
rcr
dec
lock
jae
lahf
mov
ljmp
stos
mov
mov
into
xchg
cmp
psllq
insb
and
cmp
fmull
jecxz
sbb
insl
cmp
imul
dec
incl
adc
cs
lock
cmp
pop
xor
sarl
inc
mulb
pop
popa
xchg
inc
pop
add
adc
cmpb
fdivp
ljmp
sahf
and
mov
lret
sub
pop
sti
mov
enter
scas
mov
mov
rorb
xchg
insl
jle
shll
push
cltd
mov
call
jmp
jo
xchg
mov
ret
inc
movsb
out
push
es
fs
je
sti
jmp
adc
std
mov
in
cmp
add
or
movsb
or
aad
xor
loope
pop
les
and
xor
xchg
shlb
push
scas
popf
sub
pop
decb
and
lock
xchg
loopne
icebp
ret
push
mov
pop
outsl
pop
and
sbb
out
data16
add
add
loopne
popa
out
xor
mov
add
rcl
leave
mov
shrb
lret
aam
sarb
imul
mov
mov
mov
repnz
mov
test
into
data16
iret
jp
xor
dec
add
pop
xchg
jne
insb
xchg
addr16
in
in
sbb
pusha
xchg
in
mov
js
xchg
cwtl
push
push
pushf
mov
jp
cmp
in
mov
mov
int
mov
movsl
ja
xor
popf
lahf
dec
lret
xor
into
repz
push
mov
push
gs
hlt
test
xchg
jp
dec
sbb
sbb
mov
push
fnstcw
mov
leave
rorl
mov
lods
sti
inc
shll
ljmp
xchg
lods
loope
icebp
cmpsb
fwait
dec
mov
adc
nop
or
mov
roll
jae
scas
add
mov
clc
aas
out
dec
sti
aam
movsl
push
jo
adc
mov
cs
stc
js
push
xor
pop
movsl
jg
jle
repz
je
es
scas
cmp
lods
adc
das
ret
and
xchg
ret
push
mov
mov
gs
scas
push
ficoms
inc
pusha
lret
cmc
repnz
pusha
icebp
pop
rcll
cmp
inc
fsubrl
sahf
xchg
jnp
xor
in
pop
xchg
xor
xchg
jmp
xor
into
mov
inc
sbb
cmp
pushf
push
repnz
fwait
cmp
sbbl
shl
mov
lea
mov
dec
int
fsubs
xchg
add
pop
ror
and
inc
lock
push
dec
rcll
stc
sub
dec
test
inc
sti
pop
inc
push
mov
hlt
push
call
idivl
or
add
push
cmp
or
scas
mov
fwait
adc
mov
sti
xchg
popf
in
inc
lds
lahf
push
div
popa
cmpsb
inc
sub
push
stos
inc
push
jge
gs
in
lret
xchg
dec
mov
enter
pop
jmp
add
std
sub
js
add
lds
bound
loopne
repnz
testl
and
js
aaa
aaa
movb
mov
sbb
dec
filds
push
lods
jecxz
lea
lods
clc
pop
add
stos
ret
push
int3
repnz
into
pushf
cmc
lret
jg
aad
cmpsl
aam
sub
sub
inc
roll
mov
push
push
sub
jle
jg
data16
popf
fcmovb
notb
es
push
sub
lcall
cmp
sub
sbb
mov
adc
push
movsl
in
mov
loop
or
jmp
adc
test
shlb
push
mov
cmpb
mov
out
mov
push
or
mov
pop
sbb
adc
add
sub
adc
fbstp
adc
mov
pop
pop
and
xor
fiadds
shll
and
pop
mov
xor
pop
js
inc
sbb
cmp
rclb
jl,pt
add
test
push
ja
int3
mov
xchg
fsubrs
sub
and
lods
lahf
mov
jge
or
clc
pop
lods
jae
inc
test
pop
cmp
jl
lock
mov
sbb
xchg
mov
arpl
xchg
mov
cmpl
mov
iret
movsl
insl
push
mov
call
pushf
loope
sub
push
jnp
add
out
mov
sub
cmc
xor
pop
hlt
adc
insl
call
mov
pop
iret
mov
test
jb
into
jnp
insl
pop
popa
fldcw
pop
test
sti
and
add
pushf
pop
mov
jo
movsl
jno
js
repz
push
es
cli
and
fstl
dec
xor
fcmovu
pop
sub
sub
cli
lahf
push
popa
sbb
jmp
pop
dec
xor
pop
pop
add
cmp
mov
xor
imul
cld
sbbl
or
dec
push
cmpsb
arpl
mov
mov
sub
lret
in
aas
jne
xor
mov
shlb
inc
mov
in
stos
xchg
add
mov
in
in
pusha
mov
mov
sarl
pop
or
jge
xor
xor
cmp
inc
dec
sub
push
test
jge
test
mov
add
outsl
cwtl
dec
cld
or
mov
push
pushf
xlat
lcall
into
push
push
icebp
fisttpll
ss
adc
loop
push
push
mov
ss
insl
cmpsb
ret
fildl
adc
lock
ss
hlt
lods
test
fisttps
lahf
lock
movl
insl
xor
sub
mov
inc
shl
sbb
pop
imul
xchg
push
push
sahf
outsb
jp
mov
fmuls
cmp
ljmp
fxch
xchg
ret
stc
add
faddp
dec
addr16
inc
cmpsl
hlt
cltd
add
jnp
dec
loop
ret
cwtl
pop
dec
stos
addb
sub
sbb
xlat
push
sbbb
clc
movsb
pop
or
sub
out
insl
push
lock
fdivrs
xchg
insb
inc
test
push
shr
lret
cmc
je
add
dec
test
ja
and
jae
xchg
stos
in
push
out
fcoml
mov
std
xchg
lock
and
int
sub
pop
mov
mov
pop
fwait
repz
xchg
jnp
rorb
mov
lea
outsb
imul
mov
and
add
mov
mov
in
leave
out
lahf
cmpsl
add
push
nop
push
repnz
add
dec
push
or
shlb
add
insb
inc
inc
test
lods
inc
inc
cmc
call
inc
push
pop
popf
mov
fwait
xor
sub
repnz
mov
cmp
cmc
loop
jne
mov
mov
mov
out
sub
mov
inc
out
xor
cmp
loop
xchg
inc
in
sarl
daa
loop
pop
mov
add
push
das
dec
mov
push
les
lods
xor
inc
mov
dec
mov
cmp
adc
pushf
imul
sar
jnp
pop
or
pop
mov
inc
loope
ret
fbstp
mov
mov
mov
add
pop
out
inc
push
aam
and
in
enter
repz
mov
xor
cmp
outsb
push
test
es
mov
sub
loopne
add
dec
inc
adc
xchg
cmp
testl
push
xlat
idivl
scas
out
push
int3
js
ss
jecxz
mov
add
add
shr
jne
xor
aas
and
add
xchg
mov
outsb
dec
jl
pusha
imul
insl
nop
jmp
inc
pop
jne
nop
fsubrl
pop
fcomps
and
outsb
sti
imul
dec
xor
xor
mov
rcll
or
stos
rcrb
adc
int
push
dec
add
minps
push
or
jae
outsl
jo
mov
jno
cld
outsl
sti
jnp
or
jns
jo
je
insb
cmpsl
aam
and
cmp
popf
mov
mov
movsl
ss
dec
xor
rcrl
and
cmp
mov
inc
push
xchg
inc
dec
dec
and
push
outsl
dec
cmp
cmp
push
clc
mov
sub
outsl
jmp
test
pop
inc
push
cltd
mov
xchg
push
sahf
inc
cli
lcall
sbb
and
sbb
leave
stc
sbb
jo
push
xchg
push
pop
mov
mov
push
mov
ja
add
xor
out
frstor
out
or
test
mov
mov
xor
cltd
lahf
push
push
es
pop
add
pop
pop
std
adc
inc
lods
mov
cmp
adc
in
data16
xor
cltd
sub
push
outsb
or
or
push
call
sbb
out
pop
push
sbb
xor
inc
xchg
ret
insl
out
in
sub
cld
je
push
mov
divl
das
stos
out
jg
movsb
hlt
into
stos
adc
addb
and
test
cltd
insb
lods
mov
sub
inc
adc
and
push
pusha
sbb
cmp
bswap
xchg
lods
adc
insb
fildl
movsl
sahf
mov
fcmovu
test
insl
lret
lret
iret
adcl
mov
shrb
negb
inc
add
lahf
in
or
lret
fnstcw
aaa
cld
dec
inc
jmp
xchg
testb
mov
mov
xchg
movsb
xchg
push
stos
ljmp
push
add
ret
pusha
outsb
cmp
das
and
test
sti
inc
mov
mov
or
in
popa
xchg
test
mov
pop
or
add
jns
cmpsl
xor
cmp
jns
pushf
outsb
gs
addr16
imul
aad
dec
popa
lock
ja
fdivrs
ds
xor
lea
das
cltd
jo
pop
jl
repz
frstpm(287
mov
jl
sbb
outsl
adc
loope
xchg
not
fwait
adc
adc
cmpl
xor
inc
push
mov
lcall
cld
popa
sub
xchg
xchg
push
mov
rorl
shrb
sub
mov
jp
repnz
cmp
mov
push
or
stc
xchg
xchg
int3
pop
pop
hlt
dec
pop
repnz
daa
stc
popf
call
or
mov
jle
pop
enter
ret
cs
pushl
push
call
lret
bnd
pop
and
ss
jp
daa
xor
push
aas
hlt
push
add
dec
iret
jnp
mov
xor
stos
call
pop
cld
ds
jl
cmp
mov
pop
and
push
inc
inc
lret
aas
sbb
mov
cmpsl
inc
sbb
xchg
and
in
mov
cmpsb
mov
push
clc
pop
dec
cmp
pop
loop
repnz
daa
adc
mov
lret
mov
lds
mov
fmulp
cmp
mov
or
xchg
addr16
jle
call
sbb
into
leave
add
xlat
fsubrs
push
pop
fldenv
and
cld
adc
xor
add
mov
jnp
incl
sub
push
xor
pop
adc
lahf
pand
scas
lahf
ret
idivb
mov
jbe
and
das
out
xchg
mov
mov
xchg
pop
mov
pop
or
mul
stos
ss
pop
jmp
ret
add
jnp
sub
xchg
or
push
sub
xchg
pop
add
test
lds
popa
lods
adc
xor
pop
mov
rcl
mov
dec
orl
popf
test
push
jmp
lods
rorb
or
dec
cmp
es
sbbl
scas
icebp
push
ss
push
outsb
mov
or
jb
fstpl
add
icebp
jmp
insl
mov
fcoms
insl
lahf
pop
xlat
mov
insl
add
cltd
mov
addr16
movsb
push
adc
xchg
cmpsl
sti
inc
xchg
cmpsl
dec
imul
aam
mov
xor
dec
int
mov
push
dec
arpl
push
push
lret
pop
xchg
cmp
lock
jbe
inc
xlat
dec
out
add
ss
sahf
mov
popa
subl
div
ret
pop
aam
pusha
jb
dec
stos
dec
psllq
in
sub
adc
jbe
rcrl
clc
pop
test
xchg
xor
xchg
and
lods
push
sub
and
ds
pusha
xor
ja
lret
in
or
in
cmc
insb
adc
sbb
test
add
loop
pop
cmpsb
mov
sbb
pop
in
inc
imull
xchg
jp
sbb
lcall
xchg
mov
mov
sahf
imul
push
push
push
xchg
cmp
push
int3
out
mov
push
mov
popf
ss
xchg
jge
lcall
fcmovb
jle,pn
cmpsl
out
out
pop
sbb
dec
icebp
in
pop
jae
push
cmp
jl
pusha
sub
inc
push
and
xchg
inc
jg
dec
das
pop
sub
pop
sbb
mov
add
iret
fimull
mov
mov
mov
jl
mov
clc
lods
inc
jns
popf
mov
cmp
or
nop
testl
mov
adc
sub
push
push
dec
int
gs
cld
cmp
push
mov
popf
cmpsb
inc
and
ja
adc
cmp
dec
cmpsb
sar
popf
pop
cmpsb
sbb
ljmp
cmpsb
hlt
les
dec
shrb
xor
nop
loop
aas
data16
push
pop
inc
movsl
inc
popa
push
out
cmc
dec
stos
inc
addr16
jbe
ja
mov
jl
insl
call
repnz
jno
xchg
shrl
ja
ret
out
mov
ds
ja
xchg
sub
loope
pusha
gs
sbb
mov
push
push
xor
adc
mov
sti
pop
xchg
push
stc
test
pop
ja
cmp
loope
inc
jne
cmp
xchg
aad
push
in
mov
push
dec
cmp
mov
in
sti
ret
pop
sub
mov
pop
imul
fdivrp
loop
in
mov
shrl
enter
daa
popf
jbe
sti
cmpsb
movsl
adc
sbb
mov
into
add
xchg
mov
shll
pop
cmp
nop
std
jne
or
pop
push
jno
sbb
std
adc
xor
shl
xor
mov
aad
rdmsr
mov
sbb
outsb
inc
pop
into
lret
or
mov
sarb
daa
pusha
mov
icebp
cwtl
jle
sub
insb
push
sti
popa
leave
cmp
mov
mov
cmp
rcll
and
add
push
xor
loope
sub
and
insb
jg
nop
sete
xchg
add
cwtl
test
sub
out
cmp
outsl
or
mov
enter
sub
cmpsl
dec
xchg
in
jo
mov
push
push
repnz
lock
adc
mov
mov
sbb
fisubrl
imul
lcall
movntps
xor
or
hlt
scas
or
ffreep
xlat
mov
mov
lods
pop
push
push
push
mov
and
sbb
pop
out
or
xlat
popf
jge
or
cmp
scas
mov
pop
push
fildll
mov
mov
repnz
push
andb
push
jbe
xor
mov
dec
fstpl
add
ret
cmp
fs
fdivrl
jnp
xchg
cs
add
cmp
sbbb
testl
or
sbbb
sbb
imul
dec
daa
xorl
mov
sti
mov
inc
ljmp
dec
xor
ljmp
mov
dec
psrld
or
and
lahf
push
shlb
inc
xchg
test
push
rcll
inc
fs
push
aas
sti
mov
mov
mov
icebp
mov
addr16
mov
xchg
sbb
rorl
xchg
mov
loopne,pt
and
rorb
jp
shr
push
push
int
enter
xor
stos
mov
aam
push
insb
bound
shrl
fmuls
out
fisubrl
or
cmp
mov
imul
jno
pusha
call
out
lret
xor
push
outsb
into
or
pop
or
fdivl
fildll
adc
jns
fcoml
fcoml
fstpt
int
xor
out
aas
jnp
jb
or
pop
sub
in
adc
aam
mov
inc
xor
xchg
or
mov
xor
xor
jle
rcrl
insb
out
mov
mov
sbb
pop
int
mov
pop
push
dec
and
jge
aaa
fisttps
pop
and
out
xchg
sbb
scas
cltd
dec
jecxz
mov
adc
and
adc
and
sub
insl
xchg
rcrl
mov
or
sarb
mov
scas
pop
mov
fisttpll
sahf
enter
jle
cwtl
insb
jnp
std
ss
sbb
xchg
cmp
shl
and
mov
push
imul
and
mov
aas
pusha
dec
outsl
inc
sarb
icebp
roll
add
jmp
cld
mov
inc
rorb
xor
cmpsb
arpl
mov
call
popa
adc
push
add
mov
leave
dec
or
clc
fiaddl
mov
les
and
and
push
cmp
fwait
adc
cmpsl
das
sub
xor
hlt
sbb
test
mov
cmp
push
mov
fidivs
sbb
loop
adc
cmp
es
inc
or
cltd
mov
add
add
push
rclb
std
push
add
ljmp
incb
xor
xor
pop
js
shlw
stos
mov
sbb
sbb
or
mov
pop
popa
inc
addr16
jle
loop
mov
repnz
dec
imul
adc
push
jle
stc
test
inc
push
or
sub
inc
xor
sbb
test
sub
xor
xchg
pop
test
fs
dec
push
cmp
int3
adc
int
test
mov
sbb
inc
outsb
mov
sahf
xor
outsb
dec
mov
popf
mov
stos
lods
mov
pop
mov
pop
lods
xor
clc
fiaddl
mov
imul
popf
mov
outsl
in
call
mov
aas
inc
movsl
enter
pop
rorb
js
cs
lods
add
shl
dec
mov
cs
push
cmp
sahf
repnz
mov
ficoms
ret
pop
dec
pushf
mov
cmpsb
outsl
iret
mov
or
jno
jle
lods
test
divb
jo
rol
mov
push
sahf
fwait
mov
in
cmpsl
sbb
dec
dec
inc
xchg
xchg
sub
out
xchg
std
xchg
cmp
mov
gs
sub
lret
jle
pop
inc
xchg
test
cmp
dec
lahf
icebp
rcll
aas
add
xor
inc
jnp
add
insl
imul
push
test
iret
test
shrl
icebp
jb
xchg
inc
adc
mov
jns
inc
mov
jbe
dec
cwtl
test
inc
fisttpl
pop
mov
fisubrl
call
dec
mov
xlat
jno
inc
hlt
mov
outsb
cli
mov
xor
and
mov
int3
je
bswap
push
in
daa
lcall
xchg
fimull
push
sub
mov
call
mov
ror
inc
mov
data16
jno
shrb
pop
mov
dec
add
dec
push
outsl
outsb
jae
or
loop
ja
arpl
push
je
adc
push
icebp
xor
mov
testb
xchg
cltd
jns
lock
cwtl
vcvtsi2sd
fcoml
in
scas
or
mov
sub
imul
push
sub
rcrl
popf
ror
sti
fs
jp
sub
jne
incl
ds
sbb
mov
mov
pop
xlat
sub
scas
inc
rcl
hlt
mov
xor
xor
pop
cmp
adc
rcll
les
sbbb
fcomp
ds
xchg
xor
mov
aad
mov
das
cli
test
shll
push
and
jns
jbe
fmuls
aad
loop
push
enter
pop
xchg
mov
mov
pop
dec
sub
lds
add
mov
lds
pop
cli
loope
or
ljmp
stc
push
push
aas
mov
movsb
fsubs
jecxz
orl
shrl
aaa
pop
jno
mov
push
mov
call
mov
gs
lods
cmpb
pushf
mov
lret
mov
std
fs
sub
jns
ret
mov
lea
jle
aad
sahf
xchg
scas
in
adc
mov
inc
dec
cmp
in
mov
jne
test
test
pushf
and
insb
add
push
roll
or
out
addr16
aam
imul
ror
lret
lret
adcl
mov
test
push
aas
add
daa
es
xor
lcall
scas
stc
subl
test
out
arpl
mov
popf
adc
cli
pop
add
jnp
push
in
cmpsl
sub
rolb
mov
cmpsl
jo
mov
fwait
sbb
test
stos
test
je
push
mulb
or
in
mov
sub
cltd
mov
outsl
sti
xchg
lret
mov
cwtl
fnstcw
je
xchg
fwait
jbe
movsb
insl
pop
mov
daa
ja
xor
mov
or
xchg
push
lea
sbbb
js
adcl
and
adc
push
je
add
sbb
repnz
jbe
lret
int
or
xor
xor
xchg
loope
movsl
mov
sbb
shl
ja
enter
pop
arpl
jns
test
cmp
xchg
stos
ret
rol
out
mov
inc
xor
sub
dec
xor
add
cld
iret
push
mov
outsb
mov
pop
test
push
cmpl
arpl
xchg
mov
leave
loop
pop
cs
push
pop
repnz
or
ret
sbb
es
int
insl
test
inc
imul
pop
pop
mov
pushf
or
cli
xor
push
testl
popl
in
mov
icebp
xchg
mov
iret
pop
xor
add
jg
jle
ds
jecxz
hlt
pop
iret
aas
mov
xchg
jp
push
dec
xor
negl
cltd
fstpl
aad
mov
pop
sbb
rorb
xchg
sbb
jo
mov
xchg
lret
inc
repnz
sbb
data16
test
test
sub
adc
lret
repz
mov
add
outsb
imul
jl
mov
scas
adcb
mov
shrb
in
sbb
jo
movl
mov
push
push
push
jmp
lds
push
hlt
pop
scas
inc
sub
fwait
arpl
cli
add
dec
test
jmp
test
aad
cs
in
out
aaa
mov
xchg
dec
jp
mov
cmp
jge
aas
lods
rcr
clc
clc
cltd
dec
or
aaa
xchg
loope
lahf
lods
popa
lahf
inc
cltd
add
and
fwait
cmpsl
sub
jp
and
stos
mov
lods
inc
jecxz
mov
pop
cltd
adc
pop
outsb
mov
xor
sti
aaa
pushf
in
xchg
inc
mov
push
xchg
pop
fcoms
xor
jne
dec
mov
inc
lret
rolb
dec
ret
cmpsl
test
sbb
dec
lods
scas
push
aad
shll
out
dec
test
adc
sbb
lret
dec
shrb
icebp
dec
outsb
cmc
mov
fwait
adc
xor
cld
fwait
cwtl
outsl
scas
es
in
call
bound
repz
sbb
test
loope
inc
adc
leave
push
jb
pop
pushf
jnp
pusha
cltd
push
subb
push
outsl
mov
cmp
lock
cltd
test
push
ret
push
jmp
sbb
enter
stc
test
ljmp
ljmp
jbe
frstor
aas
decl
addb
les
fld
cwtl
aas
pop
es
fdivr
or
mov
addr16
test
in
xor
cmp
mov
adc
or
mov
fs
pop
and
push
aaa
or
dec
push
stc
dec
push
mov
lods
call
in
sbb
ds
std
loope
lds
fsub
in
pop
xor
xchg
xor
mov
loopne
cmp
fldcw
mov
inc
outsb
data16
andb
inc
mov
dec
push
jl
add
in
dec
push
out
cmp
mov
pop
pop
je
lock
xchg
fstl
xchg
inc
inc
xor
test
scas
adc
and
mov
out
xor
push
jge
addb
sbb
ds
imul
stc
jmp
cmp
xor
sbb
subb
jne
mov
xor
es
cli
aaa
mov
jecxz
adc
mov
shlb
aad
push
xchg
dec
rclb
inc
push
aas
fsubl
dec
stos
xor
push
sbb
ljmp
enter
or
sbbb
pop
inc
mov
aaa
js
iret
fists
repnz
cmp
roll
push
test
mov
shlb
imul
inc
xchg
arpl
popa
stc
mov
fs
cli
pop
xor
or
faddp
insb
cmp
pop
ret
loopne
mov
xchg
mov
push
inc
jg
cmp
outsb
xchg
shl
mov
or
xorb
xchg
test
test
mov
mov
shll
pop
stos
pop
xor
lret
pop
lods
lock
mov
push
ret
ja
pop
test
mov
and
lahf
ror
jp
popa
dec
test
xor
insb
js
and
ljmp
test
clc
js
lret
rcrb
cltd
mov
dec
sub
sarb
cmpb
mov
push
or
icebp
stc
jp
sarl
pop
xchg
jg
les
sbb
adc
sbb
push
test
mov
push
aad
adc
fnstcw
sub
in
into
or
inc
cs
adc
ret
mov
imul
dec
sub
mov
clc
adc
les
in
jnp
pop
leave
or
inc
xchg
and
mov
mov
aas
lods
daa
xchg
loop
push
outsb
mov
cmpsb
pop
ds
in
popa
sub
pop
ss
add
xlat
add
sub
shrb
mov
jp
or
and
and
cmp
inc
in
adcl
mov
mov
imul
adc
shll
fcoms
popl
push
dec
out
pop
arpl
loopne
jle
inc
filds
enter
pop
push
jl
push
je
pop
dec
sub
adc
add
push
add
mov
xchg
mov
push
jp
mov
sub
mov
inc
and
mov
xchg
ret
sub
pop
lods
imul
mov
rorb
cmp
adc
sbb
xchg
sub
push
cmp
push
xor
mov
pop
adc
dec
pop
in
scas
jp
push
out
jb,pt
pop
leave
fst
push
outsl
cs
mov
cmpb
test
adc
decl
xchg
dec
push
xchg
or
pop
xchg
sbb
pop
jl
dec
outsl
mov
cmpsl
ljmp
jbe
xchg
push
mov
fstpl
adc
dec
divl
push
adc
cmp
pop
movsb
push
jns
test
xchg
fldt
ret
popa
mov
cmpsl
push
mov
and
inc
arpl
lods
add
bnd
or
mov
jnp
xchg
insb
insb
lcall
frstor
ret
pop
bound
in
mov
mov
push
cltd
std
test
inc
cmp
lock
ss
mov
sbb
in
or
xchg
daa
adc
add
ret
test
shrb
xor
jbe
sarb
es
imul
jae
nop
ret
push
mov
je
push
pop
mov
push
pusha
mov
mov
bound
call
push
mov
xlat
pop
jne
adc
jp
popa
test
ss
jmp
jl
fs
aaa
mov
pop
and
outsb
stos
sbb
enter
mov
cltd
stos
div
pop
push
xchg
sbb
dec
fwait
rclb
add
sub
or
testb
sbb
xor
jns
aam
lea
pop
mov
inc
rclb
pop
insb
sbb
sub
popa
arpl
xchg
js
fs
repz
nop
movsl
add
xor
lahf
dec
adc
cmp
and
xor
cmp
shlb
push
push
lds
mov
dec
xchg
xor
or
push
cmpb
dec
fs
adc
push
xchg
jp
push
arpl
aam
and
es
fisttps
push
pushl
jnp
scas
jl
fstpt
or
fimuls
je
cmp
dec
aaa
rcl
jnp
pusha
xchg
add
rcrl
sahf
mov
inc
xor
gs
mov
mov
dec
xchg
mov
xchg
lds
data16
xchg
mov
insb
mov
movsb
mov
imulb
or
dec
in
adc
in
mov
cmp
mov
add
jge
fmuls
inc
ficompl
mov
cmpsb
jbe
jno
repnz
insb
in
mov
mov
jbe
pop
leave
or
cmpsl
xor
sbb
mov
and
sti
and
push
inc
fsubr
out
into
or
jmp
mov
je
cmp
xchg
or
lds
mov
jp
mov
or
xchg
xchg
mov
push
cli
dec
aam
shl
movsb
call
stos
rcr
xchg
idivl
out
loope
xlat
mov
loope
in
lret
cmp
repnz
outsl
cmp
xlat
xchg
xchg
insl
xor
pop
mov
xor
jo
stc
aas
aam
addr16
aad
in
out
and
jecxz
push
jmp
lock
nop
fisubl
leave
cltd
adc
fcmove
shrl
mov
inc
scas
inc
movsl
pop
ds
shlb
push
cs
dec
mov
cmpsl
mov
xor
mov
inc
adc
out
sbbb
cmpsb
xchg
clc
mov
xchg
pop
idiv
and
rorl
subb
push
push
std
orl
sub
adc
sub
cmp
and
adc
xlat
fcomp
test
scas
cmpsb
ficoms
enter
aas
adc
jp
enter
xchg
aas
lods
pop
stos
rolb
testb
ret
ror
cld
stos
adc
lcall
sbb
adc
jno
rcrb
mov
loopne
scas
insl
cmc
xor
or
arpl
mov
and
cmp
sbb
lcall
xchg
test
mov
sbb
lds
enter
jae
lret
mov
and
inc
mov
or
das
jg
out
adc
jle
sub
or
lret
push
push
pop
jle
lahf
out
jl
daa
sub
jnp
push
jmp
cmpsb
add
dec
pusha
mov
mov
mov
dec
repz
dec
inc
jp
add
enter
out
lcall
adc
pusha
push
mov
scas
out
loop
dec
adc
inc
ja
icebp
ret
lret
lods
rcrl
push
jns
imul
test
pop
sbb
pop
jl
ret
xchg
sbb
add
dec
adc
fdivp
jmp
sub
jne
dec
and
sub
scas
sub
insl
or
and
jns
and
cmp
pop
scas
jae
mov
cmp
push
clc
aad
inc
pop
pusha
aam
dec
pop
lods
cmc
mov
stc
mov
sbb
xor
and
ljmp
xchg
add
pushf
cmp
cmp
sub
sbb
or
sti
shll
push
test
into
push
sbb
mov
adc
xchg
xchg
repnz
lret
sub
pop
movsl
ja
aas
in
push
inc
mov
sbb
into
filds
hlt
sub
xorl
pop
xchg
adc
mov
jle
sbb
outsb
mov
push
or
ret
push
xor
faddl
adc
cmp
in
dec
icebp
pushf
sbb
sub
mov
xor
test
cmp
mov
outsb
jnp
adc
je
pop
add
xor
pop
or
inc
dec
insl
jno
int3
xchg
pushf
loop
loope
std
dec
cmp
dec
adc
inc
dec
adc
out
xchg
daa
adc
jb
out
addr16
pop
add
jno
mov
or
sti
cmpsl
add
gs
cmp
xchg
xchg
leave
xchg
jle
div
push
sub
mov
jp
push
repz
jmp
cmp
cli
sti
mov
mov
test
sub
sub
ja
cs
fwait
inc
sbb
add
in
or
mov
and
test
movsl
aad
pop
scas
lods
in
ss
sbb
xor
mov
jge
shrl
cs
fistpll
fwait
pop
loope
lret
scas
sbb
push
cmp
mov
daa
fwait
mulb
sbb
call
mov
dec
pop
dec
loope
repnz
lea
xchg
or
push
rorl
dec
out
push
adc
aam
add
xchg
sbb
xor
ljmp
test
loop
jp
sub
pop
and
cmp
jg
flds
and
mov
adc
sub
xor
sub
dec
mov
xchg
aam
imul
sub
rcrb
stc
mov
mov
cs
cmp
addr16
jecxz
mov
mov
lret
inc
sahf
aaa
nop
push
pop
negb
jl
pusha
add
sbb
mov
insb
mov
fisubl
inc
fwait
mov
jmp
loope
andb
out
cmpsb
stos
dec
testb
sahf
stos
stos
cmp
mov
and
mov
loope
gs
jnp
dec
add
sbb
cmp
and
movsl
fsubrl
inc
push
fstpt
movb
test
pop
adc
and
add
jl
mov
js
push
jg
dec
gs
jo
xor
lds
test
imul
xlat
ds
mov
mov
test
sub
fiadds
dec
movsb
pusha
movsl
pushf
out
jbe
lahf
pop
dec
or
xchg
shlb
pop
mov
insb
in
xchg
xchg
mov
outsb
xchg
cmp
push
iret
je
cmp
adc
hlt
cs
es
inc
pop
jno
mov
and
cltd
clc
jae
xchg
dec
mov
mov
xchg
in
inc
loope
ret
cmp
cmc
insb
or
stos
lcall
mov
sub
cmp
movsb
jle
mov
sbb
cli
xor
jge
outsb
cli
lock
inc
pop
xchg
adc
sbb
ret
mov
scas
loopne
std
mov
xor
cmc
pop
js
cmpsl
outsl
push
sub
inc
fdivrl
add
cmpsb
mov
repnz
xchg
mov
and
aaa
cmpsl
in
mov
pop
sub
and
xchg
push
jb
mov
icebp
adc
cmpsb
push
arpl
dec
xor
add
mov
cmp
or
xchg
xlat
lods
push
inc
scas
or
cmpb
xchg
xchg
mov
mov
outsl
out
add
mov
cltd
add
adc
shll
lcall
stos
stos
xor
inc
ret
insb
in
xchg
cltd
or
or
popa
ret
ds
aam
inc
mov
pop
dec
dec
add
js
dec
inc
movsl
and
push
mov
mov
sbb
js
pushf
cli
pop
movsl
rol
or
addr16
or
je
pushf
push
xor
mov
or
xor
aas
or
cmp
or
xor
enter
cld
mov
jge
shll
pop
shrl
mov
in
push
je
fstps
andb
ds
add
push
inc
stos
dec
or
push
push
jmp
jns
fldcw
mov
fs
loope
popa
gs
sahf
rcll
and
iret
mov
sbb
fs
sub
mov
xor
sub
push
fnstcw
cmp
insb
sbb
sbb
fstps
inc
repnz
and
in
addr16
nop
dec
in
in
in
xor
ljmp
push
sub
repz
jmp
rcl
arpl
int
data16
mov
cmp
dec
mov
dec
sub
outsl
xlat
cwtl
ret
inc
out
pop
pop
sub
mov
mov
outsb
dec
add
paddd
ds
pop
lods
incb
leave
pop
ret
push
lret
mov
lahf
xchg
push
jmp
aad
sub
sbb
pop
push
cwtl
add
mov
jb
inc
xchg
lds
leave
and
inc
fmull
shr
dec
pop
mov
push
movsl
daa
out
aaa
sbb
adc
ds
xor
insb
das
lods
iret
shll
push
out
int3
mov
cwtl
inc
mov
movsl
rcrl
cmpl
leave
mov
lret
lcall
inc
js
cld
es
jo
mov
mov
add
dec
mov
jle
sti
mov
scas
pop
mov
pop
and
fs
imul
imul
mov
push
mov
clc
lea
push
cmp
data16
sbb
outsb
push
lcall
js
out
hlt
sarb
mov
fnstenv
xor
jg
and
jnp
mov
gs
jge
push
xor
adc
scas
dec
mov
pop
fdivrl
xchg
in
xor
arpl
ret
sti
sbb
incl
sbb
pop
loop
mov
test
stc
xor
pop
inc
insb
push
push
adc
dec
sbb
nop
pop
and
and
mov
jge
jbe
fadd
cmpsb
stos
xor
push
int3
rcl
cmp
cmpl
outsb
add
shrl
and
mov
mov
test
out
jl
cmpb
xchg
fists
dec
aaa
inc
jns
stc
aad
roll
cmp
add
nop
aad
hlt
sbb
cmp
jnp
js
fs
loopne
cltd
cltd
jb
xor
mov
xchg
cmp
xor
and
lahf
pop
xchg
sbb
movsb
dec
rep
lods
ret
stos
push
mov
xlat
scas
mov
jecxz
lods
and
js
xchg
add
ret
inc
mov
and
adc
add
icebp
loopne
ds
fmuls
inc
sub
imul
es
mov
rorl
outsb
movsb
cmp
xor
pop
cmp
inc
xor
je
ret
imul
shr
out
or
mov
mov
push
cmc
fisubs
sub
cmc
cld
mov
add
sarb
insb
aam
mov
mov
test
sti
xchg
sbb
xchg
mov
xchg
mov
cmp
or
dec
jbe
xchg
pusha
test
cld
stos
push
sub
aas
repz
out
inc
sbb
pop
repz
aaa
arpl
pop
mov
cmp
bound
sbb
cmp
mov
scas
add
andb
iret
mov
test
in
int
jmp
sarl
aad
clc
xor
jnp
sbb
sub
ret
test
mov
xchg
mov
imul
cmpsb
dec
mov
call
sbb
inc
call
inc
js
mov
stc
or
jp
pop
pop
ljmp
int3
aas
mov
jbe
xor
das
in
adc
bound
and
xchg
sub
test
jb
rep
add
aaa
hlt
hlt
fcompl
sarl
pusha
pusha
pop
mov
jg
in
jae
push
ret
mov
xchg
adc
push
lret
std
or
movsb
xchg
out
or
movsb
cmp
cmp
mov
jg
xchg
add
cld
sbb
jno
pop
cli
bound
sbb
inc
test
mov
and
movsl
ldmxcsr
call
xchg
jp
daa
xchg
das
jb
and
mov
dec
mov
data16
mov
mov
cltd
and
repz
sbb
subl
and
mov
ret
roll
div
hlt
cld
sbb
mov
jo
mov
test
jnp
data16
inc
gs
icebp
mov
mov
sub
cmpsb
dec
pushf
mov
stos
divl
inc
jbe
cli
jmp
mov
xchg
dec
inc
les
xor
lds
mov
loopne
and
lea
cmp
push
pusha
test
hlt
push
test
icebp
jnp
xor
into
shlb
and
xchg
arpl
repz
das
mov
loopne
ret
inc
repnz
fs
movsb
xrelease
mov
rcrb
cmpsl
mov
loopne
loop
dec
mov
mov
or
nop
push
mov
pop
data16
pop
test
dec
and
movsb
cmp
xchg
sbb
das
mov
dec
sub
fsub
push
jp
jne
xchg
insl
cltd
xchg
adc
sbb
icebp
popf
imul
mov
aad
inc
jp
or
shrl
out
pusha
adc
hlt
jb
adc
lahf
data16
xchg
movsl
in
mov
aaa
push
push
jp
add
inc
dec
cmp
adc
in
pop
add
cli
jl
ret
adc
sbb
mov
adc
mov
mov
xchg
push
mov
std
pusha
mov
decl
adc
inc
add
sub
repnz
outsl
das
ljmp
hlt
pop
pop
mov
inc
adc
sub
int3
notl
xchg
into
sbb
leave
lret
mov
in
mov
push
cmpsb
xchg
sub
ja
and
sbb
outsl
cmp
push
or
dec
idivl
push
lcall
imulb
mov
pop
scas
jecxz
aam
lods
pusha
je
aaa
push
mov
jmp
addr16
push
adc
lods
and
xor
les
or
rolb
xlat
ror
lock
pop
adc
loopne
loop
call
cmp
popa
stos
push
mov
or
xor
inc
clc
push
repz
dec
dec
xor
jmp
sahf
les
imul
lods
fcomps
or
pop
xchg
stc
iret
insb
or
testl
out
push
sarl
cltd
pusha
fcoms
lahf
dec
in
ret
xchg
jbe
roll
daa
movsl
fucomip
enter
xchg
mov
inc
popa
ficoml
loop
sbb
cmp
xchg
arpl
out
mov
nop
mov
mov
xchg
ljmp
push
js
xchg
xor
cli
daa
fcoml
jae
cmpsl
mov
gs
jmp
xor
fisubrs
lods
fdiv
loopne
cmp
mov
movsb
aaa
inc
inc
stc
or
jo
mov
and
sbb
xor
loop
mov
call
shll
xchg
inc
mov
push
dec
enter
cmp
add
lret
call
xor
cmp
jmp
mov
clc
subb
push
jb
pop
cmp
das
in
insl
ficomps
cmc
and
mov
inc
pushf
or
and
jge
add
push
leave
sarb
inc
ret
rorb
into
push
hlt
jnp
mov
int
ljmp
inc
lret
xor
cmp
mov
icebp
sub
add
inc
cmp
jp
mov
xchg
aad
lret
inc
cltd
mov
and
inc
sub
popa
shlb
cwtl
xchg
vmread
push
sub
push
pop
ret
add
push
adc
xchg
add
and
mov
fsubl
jmp
dec
addb
jmp
mov
sbbl
mov
scas
jno
subl
sub
test
push
popa
faddl
pop
and
fisubl
adc
je
xor
mov
shl
pop
and
int3
pop
cmp
movsb
or
add
stos
mov
xchg
sub
arpl
out
ljmp
test
scas
and
xor
nop
xchg
cld
push
jp
pop
and
popa
loope
pop
es
into
mov
and
repz
mov
mov
and
sarb
xchg
mov
data16
aam
ficoms
addr16
sub
push
outsb
fs
sub
jecxz
stc
dec
daa
mov
cmp
mov
lahf
or
bound
push
mov
dec
pop
pop
and
test
mov
iret
arpl
adc
call
push
leave
cwtl
ds
xor
pop
add
insl
mov
jge
mov
divl
push
mov
icebp
inc
dec
ja
push
fmull
sbbl
movsb
pop
xchg
adc
fisubrs
in
sub
lret
mov
xchg
cli
xor
xchg
rol
push
mov
sbb
stc
lcall
add
test
sarb
loope
push
sbb
jp
ds
sub
jge
mov
inc
pop
xchg
adc
sbb
pop
je
push
ds
sbb
das
cmpsb
adc
fiadds
inc
lahf
sbbb
nop
std
movsl
ucomiss
push
ret
cmc
jno
pop
testl
movsl
int3
cmpsl
dec
mov
test
sub
popa
js
pop
pop
cmpps
es
aas
je
cmpsl
push
jno
lock
lds
xlat
cmp
iret
or
rcrb
mov
out
mov
mov
leave
inc
aas
inc
mov
mov
je
test
call
sbb
lret
or
push
aas
aaa
mov
push
dec
enter
enter
sarb
inc
div
xor
filds
fwait
xor
xchg
inc
push
mov
or
or
mul
std
in
shlb
and
and
scas
imul
into
test
xchg
sub
and
mov
mov
jge
idivl
xchg
enter
cli
pop
pop
gs
inc
lods
pop
decb
insl
rolb
sub
mov
lahf
mov
adc
inc
jno
sbb
sbb
inc
dec
inc
arpl
mov
mov
aad
and
xchg
imul
insl
adc
repnz
xor
in
in
lods
cli
scas
std
cmp
sbb
fsubl
mov
mov
mov
js
push
popf
fadds
fs
mov
jl
push
inc
mov
jecxz
pop
sbb
pop
mov
mov
inc
js
decl
mov
xor
mov
sbb
push
dec
repnz
dec
xor
das
stos
mov
mov
clc
icebp
adc
cmc
mov
lcall
mov
or
and
or
and
jns
cmp
cld
cmp
mov
lock
lea
lods
mov
fs
mov
mov
xor
mov
and
xorps
sbb
cld
addl
test
rolb
sbb
addr16
jbe
outsb
jne
into
call
ds
mov
decl
add
mov
imul
xor
jo
jns
cli
pop
out
inc
adc
int
xchg
scas
fwait
xor
hlt
xchg
mov
iret
dec
cld
fistpl
mov
les
add
add
bound
inc
add
inc
movsb
mov
imul
es
inc
jp
adc
imul
les
push
fistpl
movsl
int3
es
gs
add
sbb
rorb
mov
shr
mov
or
std
test
je
nop
pop
arpl
and
push
stos
xchg
cli
lahf
mov
pop
mov
test
sbb
sti
jns
mov
or
enter
icebp
in
idiv
jl
push
adc
int
cmp
aaa
cs
sahf
or
imul
sbb
push
test
add
sbb
pop
adc
les
and
push
xor
mov
pop
bound
xchg
jo
push
cmp
add
lahf
mov
sub
inc
sub
mov
dec
push
outsl
aam
ss
add
lods
dec
sti
xor
in
sub
bound
cmp
add
pusha
es
lea
push
dec
lcall
mov
mov
mov
xchg
pop
test
sub
xor
mov
iret
out
insb
ja
je
lea
and
add
fistps
rcll
dec
adc
xchg
cmp
ljmp
je
sub
push
xchg
mov
sub
cmp
or
xor
in
fdivl
mov
popf
cli
roll
dec
pusha
aas
int3
shll
or
das
adc
aad
dec
inc
add
cmp
stc
jp
push
addb
inc
pop
or
sbb
arpl
jmp
andl
sbb
sub
and
jo
test
fstpt
faddl
int
js
stos
xchg
fwait
or
push
mov
mov
push
sbb
pop
es
add
adc
jo
jne
cs
imul
push
testl
ds
into
pop
inc
mov
roll
ja
cli
xchg
icebp
jbe
test
les
pop
roll
pop
push
cmovle
push
dec
inc
jmp
jbe
test
jmp
into
jmp
arpl
enter
int
popa
test
cld
sub
mov
pop
and
xor
push
les
sub
in
push
repz
sub
jbe
in
es
rorb
and
sub
test
dec
sbb
jae
push
sti
dec
inc
inc
sbb
or
ds
and
adc
cmp
out
adcb
sbb
ljmpw
mov
aaa
scas
mov
sbb
lahf
xor
test
ret
test
add
aaa
insb
cmpsl
sbb
insl
lds
ror
sub
lods
mov
stc
fisttpll
mov
inc
sub
inc
leave
int
jno
into
add
xor
mov
xor
mov
jg
lea
xchg
int3
fcoml
jbe
inc
xlat
jo
mov
scas
adc
mov
pop
es
cs
nop
int
jnp
sbb
in
popa
push
cmp
and
push
jge
pop
push
data16
or
fisttps
dec
or
inc
dec
or
adc
test
jmp
push
out
push
pop
ret
jne
outsb
sbb
xchg
or
cmp
pop
adcb
ja
roll
stc
jmp
jle
inc
fadd
cmp
in
push
cmpsl
push
inc
add
lret
jno
xchg
mov
fsincos
fwait
jno
out
fdivr
aad
xor
movsb
dec
out
jge
jge
mov
jo
push
sbb
in
sti
jl
ja
loope
fs
xor
jmp
jo
inc
ror
sbb
mov
test
arpl
add
lds
add
mov
cmp
add
call
decl
into
cmp
mov
mov
push
aad
jecxz
aas
inc
outsb
xchg
repz
pop
pop
mov
sbbb
nop
push
fsubrl
sahf
cwtl
adc
pop
and
adc
inc
fsubs
jl
movl
mov
pop
pop
xchg
sbb
mov
push
push
pop
or
fildl
aam
mov
inc
shll
push
sbbl
pop
cmp
sub
arpl
loop
les
xchg
push
orb
sub
js
out
push
push
iret
jmp
pop
cwtl
or
pop
test
dec
popf
icebp
lds
pop
dec
xchg
stos
movsb
xor
movsb
add
xor
xor
or
shl
xor
faddl
imul
adc
sbb
pusha
xchg
sub
adcl
xor
push
and
xchg
push
dec
xchg
adc
mov
fldcw
negl
es
rorl
jno
or
push
nop
and
jecxz
jb
fwait
push
out
sbbl
xor
sbb
or
lods
adc
push
mov
mov
test
mov
adc
inc
push
push
adc
sub
aas
mov
lock
bound
sbb
sbb
xchg
test
sbb
out
movsb
xchg
ljmp
jmp
xor
test
scas
arpl
push
sahf
dec
mov
dec
les
sbb
mov
mov
gs
inc
sti
jmp
xchg
fisubrl
ds
mov
scas
enter
iret
jo
mov
rcr
mov
jle
outsb
pop
mov
mov
mov
shrb
gs
fimull
adc
dec
mov
outsl
cmp
fwait
iret
enter
inc
mov
out
aas
cli
lds
out
nop
daa
rorl
lahf
ss
fcomp
es
sbb
xor
test
jmp
or
pop
mov
jle
fs
sar
data16
sub
mov
push
adc
add
je
and
popa
mov
mov
js
mov
push
pop
push
mov
rorb
push
jle
mov
mov
cs
cwtl
bound
push
push
cmp
cmpsb
dec
inc
add
andl
adc
mov
or
adcb
loop
es
xchg
or
jne
mov
sub
mov
rorl
aam
push
push
adc
or
mov
mov
jne
rorl
ss
ljmp
dec
lahf
pop
out
xchg
mulb
xor
inc
loopne
jbe
pop
loop
xlat
test
sub
cmp
mov
out
cmp
mov
push
or
mov
fiaddl
in
adc
pushf
sahf
cmp
fidivs
iret
nop
xor
mov
adc
adc
movsb
fstps
dec
jl
jne
mov
sbb
fs
and
data16
addl
stos
jmp
inc
dec
pop
scas
sti
sahf
dec
aad
pop
sahf
dec
popa
rorb
rorb
test
sub
test
adc
cwtl
and
jle
movsb
subl
xor
incb
push
imul
sbb
push
mov
roll
ret
hlt
imul
pop
popa
or
outsl
jb
out
fbld
arpl
jl
cltd
xchg
xor
inc
rcll
xchg
ret
cmp
pop
or
mov
xor
test
out
jo
xor
sub
data16
andl
xor
ss
push
jg
sub
cmpl
mov
fmull
jb
push
inc
in
es
xorl
scas
imul
push
add
rcr
jl
mov
mov
cmp
mov
inc
pop
add
mov
pop
sub
xchg
leave
mov
decb
xchg
icebp
mov
add
aaa
add
or
lcall
outsb
push
inc
je
lods
je
lcall
mov
pusha
adc
pushw
cld
movsb
cmc
dec
mov
arpl
cmp
lret
mov
dec
inc
loopne
test
or
sub
inc
or
scas
insb
test
push
xchg
mov
cltd
test
call
cwtl
and
mov
shl
sub
nop
pop
add
cmpsb
xchg
loopne
out
lcall
fnsave
ret
lret
push
cmpsb
and
repz
fwait
aaa
leave
ds
fstl
adc
pop
adc
bound
imul
lcall
enter
outsb
and
xor
mov
testl
insb
gs
out
lahf
dec
into
or
cwtl
lahf
ss
sub
push
aam
stos
lret
adc
mov
stc
fmul
adc
dec
fcomps
repnz
add
push
jno
shlb
xor
rolb
mov
cmp
jne
or
icebp
test
dec
sti
sbb
jl
popa
mov
into
inc
xchg
pop
mov
orb
cld
push
les
push
jbe
mov
out
mov
and
mov
outsl
jl
sub
js
xchg
or
inc
cltd
and
mov
sti
test
pop
cmpsb
sbb
sub
insb
icebp
icebp
add
jnp
decb
std
jg
lock
push
mov
xchg
adcl
mov
push
fwait
ljmp
outsb
mov
xor
add
push
add
in
xor
mov
jae
rclb
insb
pop
inc
push
pop
in
push
push
js
jle
cld
fisttps
mov
in
int3
subl
jns
ja
adc
dec
jae
and
jg
int
ljmp
inc
push
cltd
cmp
jmpw
inc
jns
pop
rcrb
or
scas
pop
in
xor
cwtl
pop
push
dec
jle
xchg
jae
test
jg,pn
dec
clc
lahf
jle
ss
mov
xchg
xor
imul
xchg
imul
mov
adc
outsb
rorb
ficoml
movsl
sbb
push
push
pop
adc
stos
ds
inc
cmp
pop
cmp
mov
fstpl
push
mov
mov
xor
adc
adc
xor
or
in
mov
in
sub
sub
cmc
into
jne
jnp
pop
dec
sbb
outsb
jnp
ja
add
mov
lahf
stos
sub
out
loopne
mov
movsb
dec
inc
or
or
das
and
repz
aaa
mov
mov
jecxz
leave
xor
dec
sahf
jb
rcll
sbb
je
mov
out
inc
adc
dec
scas
ror
push
jmp
adc
repz
xchg
inc
shl
addr16
mov
mov
xchg
pop
dec
add
test
or
iret
push
adc
and
lods
or
mov
insl
xor
inc
hlt
or
cmp
jno
pop
adc
imul
ret
push
dec
cmpsl
nop
int3
add
aas
cmp
ljmp
nop
sbb
jmp
mov
mov
sbb
sub
movsb
xchg
clc
ret
shlb
popf
mov
mov
adc
cwtl
jbe
sarb
insb
mulb
and
dec
sti
shll
inc
dec
movsl
iret
add
or
cli
mov
jmp
fs
addl
mov
mov
cmp
jae
pop
ja
das
cwtl
pop
xchg
dec
add
jp
cwtl
push
sahf
sub
outsb
push
mov
sub
and
out
gs
xchg
cmp
inc
cmp
dec
jge
xor
sbb
mov
sub
and
ljmp
mov
stc
mov
adc
xchg
xor
out
or
in
arpl
mov
jno
pop
sarb
ja
or
je
jae
sub
sbb
push
sbb
and
add
jle
cmp
inc
mov
test
int
pop
cwtl
jae
jmp
lds
sbb
sub
mov
in
leave
jp
mov
jecxz
sub
std
add
mov
mov
and
jmp
cmp
in
xchg
xor
out
pusha
and
rorb
clc
sbb
iret
dec
stos
cmpsl
inc
pop
inc
push
pop
add
bound
push
push
ret
xor
pop
inc
or
inc
mov
icebp
mov
sub
jbe
imul
sbb
loopne
sbb
imul
cmp
testl
clc
xchg
mov
movsl
pop
cs
mov
stos
aas
xchg
imul
xchg
inc
xor
xor
xor
dec
leave
mov
or
pop
nop
mov
mov
xchg
lcall
push
sbb
dec
dec
adcl
cltd
mov
lods
cmp
ljmp
and
jge
xor
hlt
mov
sbb
cmp
ds
je
add
push
inc
sub
je
cwtl
insl
cmp
xor
dec
xchg
mov
cmp
stc
xchg
push
fisubl
out
mov
dec
out
sbb
pop
sub
aaa
out
lea
add
jle
in
pop
sub
jmp
xor
push
sahf
mov
ffree
ljmp
push
loopne
clc
push
loop
mov
or
mov
loope
arpl
cmp
fnstsw
adc
dec
mov
xchg
xchg
orb
iret
mov
lcall
jp
data16
pop
mov
mov
lcall
ja
test
arpl
mov
outsl
scas
popa
cmp
jnp
mov
bound
call
mov
enter
mov
mov
std
or
mov
fnstsw
rclb
xchg
icebp
jno
out
push
xchg
sar
loope
inc
adc
addr16
js
fsubrl
mov
jge
add
shr
rorl
pop
in
xchg
or
push
test
push
loop
fists
shlb
push
dec
dec
cwtl
outsb
imull
push
outsl
jmp
inc
xlat
jae
movsb
shr
xor
aam
int3
mov
in
push
or
xchg
jbe
jbe
lret
in
sbb
push
adc
mov
and
dec
pop
xchg
jbe
call
incl
lods
cmp
lcall
aaa
divb
or
out
jno
adc
inc
cmp
aaa
aaa
mov
out
sahf
arpl
stc
pop
adcl
fdivrl
push
fadd
divl
hlt
adc
movsl
cmp
inc
add
in
xchg
mov
js
jns
or
mov
aam
inc
mov
push
pop
out
pop
push
push
shlb
pop
popa
lea
xchg
je
and
jbe
and
je
mov
and
test
in
push
and
cmp
mov
lods
jae
ret
inc
mov
and
mov
pop
fwait
jl
inc
push
into
aad
lahf
jp
clc
lods
test
icebp
iret
fcompl
lret
int
cld
or
aad
jg
or
in
pop
xchg
mov
fisubrs
push
add
mov
xchg
inc
pop
adcl
faddl
push
pop
adc
push
dec
out
mov
and
mov
rolb
arpl
push
std
loope
mov
and
push
int
lcall
pop
ja
aad
mov
imul
inc
cmc
scas
pop
sti
out
pop
lods
das
cmp
xor
fwait
imul
cmpsl
or
sub
jns
std
push
out
sbb
sub
rclb
adc
out
push
xchg
repnz
jne
push
movsl
push
mov
cmp
lods
mov
aad
fmul
jl
dec
or
pop
rolb
mov
and
call
les
push
dec
ficomps
aam
inc
fistpll
lret
pop
notb
repz
int
popa
aad
imul
jle
in
mov
push
movb
xor
jae
xchg
sub
inc
cmp
sub
insl
out
shl
jns
js
fisttpll
aaa
jne
cmp
rolb
push
mov
ds
jge
fcomps
rorb
jb
push
sti
push
lcall
lds
jle
subl
xchg
nop
pop
xor
jo
push
sbb
out
jp
cmpsb
fbld
push
add
bound
xchg
mov
lret
pop
pop
test
dec
or
jb
cmpb
and
je
imull
cmp
cmpsl
mov
stos
adc
dec
sbb
out
xchg
movb
fmulp
or
and
test
push
or
push
shrl
push
mov
push
xor
or
scas
push
aaa
int
scas
fisubs
cmp
mov
dec
mul
fstpl
retw
fidivrl
pop
dec
out
inc
or
inc
out
xchg
pop
pop
leave
scas
pusha
jno
ljmp
jl
mov
test
aam
mov
repz
add
fcoml
shrb
dec
inc
cmp
test
adc
addr16
insl
fsubr
pop
loop
lret
push
es
and
jg
mov
add
lods
hlt
cmp
arpl
mov
mov
and
dec
lds
mov
mov
pop
cmpsb
stc
imul
mov
cmp
das
mov
dec
jp
mov
aam
mov
gs
das
in
inc
fisubl
imul
adc
or
insb
jg
sbbb
xchg
jmp
ja
sub
shl
add
gs
in
sbb
cmpsb
pop
das
rclb
fsubl
dec
cmp
out
xor
popf
ja
int
push
and
lahf
fs
js
imul
adc
cmp
inc
mov
mov
jae
sub
push
jno
orb
jbe
push
jne
inc
or
and
sbb
push
lret
xorb
cmpsl
ds
popa
lea
decb
adc
sbb
mov
xchg
sub
sahf
inc
push
shll
std
cmp
sarb
pop
je
lret
jp
jge
cltd
into
push
loop
mov
xlat
mov
imul
mov
add
lret
and
pop
movsb
dec
push
div
jo
mov
repz
and
icebp
sub
into
mov
jle
xlat
inc
jnp
outsl
iret
inc
aaa
sbb
shll
jmp
aaa
sub
jo
shlb
add
ljmp
lret
fdivl
push
fdivl
sub
loop
push
dec
xor
lcall
jp
cmp
xor
mov
test
pop
ret
pop
or
hlt
loope
and
popa
pusha
aaa
jno
jmp
movsl
scas
int3
fstpl
imul
and
jle
inc
dec
inc
clc
add
cmp
add
mov
mov
fwait
cmpsb
dec
lods
imul
pop
cwtl
pop
call
xchg
and
add
ljmp
xor
inc
xor
cmp
loope
inc
mov
cltd
sbbl
and
push
int
xor
dec
dec
enter
jl
fs
scas
inc
clc
rcll
add
xor
mov
adcl
mov
ss
sbb
test
mov
jg
adc
lret
cmp
inc
mov
xor
repz
dec
pop
cld
cmpsb
mov
ljmp
popa
jo
gs
popa
mov
insb
dec
lods
mov
adc
jp
sar
inc
sbb
fs
popa
sub
inc
sti
stos
sub
inc
stos
push
adc
js
addr16
rorb
ja
cmp
mov
mov
mov
jnp
scas
pop
into
aaa
pop
push
jp
cmp
push
fisubs
fisubl
cmp
in
adc
frstor
xchg
sub
cltd
repnz
jb
mov
imul
pop
cmp
mov
add
jns,pn
fiadds
cmp
fsubrs
cmp
jecxz
push
lahf
pop
sub
test
rorl
cltd
sbb
mov
sahf
rorb
inc
jbe
pop
mov
imul
cmp
or
or
ret
inc
add
jge
leave
add
enter
addl
repnz
std
lret
pop
push
push
dec
stc
jecxz
dec
jns
pop
xchg
add
data16
adc
xchg
rorb
adcl
add
imul
push
push
jns
xor
nop
push
pop
xchg
mov
inc
or
ret
inc
and
sub
insl
xor
push
and
lock
push
inc
mov
fldcw
inc
push
jmp
movsb
mov
shrl
fnstsw
sub
sub
xchg
test
and
inc
mov
mov
das
pop
xchg
mov
sbb
movsb
jne
addr16
in
mov
xchg
sub
lods
push
data16
cmpsl
xor
popa
cltd
jne
xchg
or
mov
and
js
or
xchg
and
inc
cld
pop
add
mov
aad
movzbl
xchg
inc
jno
jae
popa
in
inc
fmuls
pop
and
outsb
pop
pushf
les
mov
add
xchg
dec
mov
sbb
jno
out
mov
push
loope
sar
test
arpl
fmull
pop
xchg
or
inc
xor
inc
adc
sbb
stc
cld
cmp
add
add
sub
repnz
stc
cld
shl
pushf
iret
xchg
push
xchg
xchg
mov
movsb
xchg
mov
jge
push
cmp
hlt
inc
pop
ja
cmp
mov
push
jle
adc
iret
xchg
fwait
loop
dec
jp
adc
fwait
ret
xchg
mov
addb
add
jle
imul
cmpsl
in
xor
inc
stc
mov
movsl
jmp
jmp
fidivrs
fsub
pop
mov
repnz
pop
outsb
out
fmuls
cltd
test
mov
in
xchg
cmpl
xor
out
pusha
cmc
dec
rolb
mov
cmp
adc
mov
aad
bound
inc
dec
bswap
insl
ljmp
aas
loop
or
mov
xor
inc
fwait
lods
clc
loope
icebp
test
inc
outsb
push
lcall
stc
jno
xor
sbb
adc
lds
push
xchg
aaa
xchg
hlt
or
inc
leave
lods
sahf
dec
jp
pop
out
pop
and
aam
sub
dec
xchg
or
adc
stos
and
lds
les
ja
add
imul
and
cmpsl
mov
ret
sbb
mov
gs
adc
daa
inc
mov
or
adc
xchg
jp
repz
xchg
icebp
sub
sub
mov
jae
shl
xor
sbb
ds
push
push
xchg
pop
scas
mov
sbb
scas
lods
pushf
sub
sub
cli
jns
or
jbe
jno
shll
loopne
jg
mov
adc
sbb
dec
xchg
push
xchg
mov
std
imul
mov
push
pop
xchg
fucom
mov
icebp
add
clc
xchg
inc
pop
add
cmc
pop
lods
xor
lahf
orb
xor
xchg
dec
stos
xchg
dec
cwtl
insb
out
xchg
and
mov
bndstx
lcall
rolb
sub
mov
outsl
mov
rcrl
icebp
inc
lea
adc
sub
jl
mov
sbb
jmp
daa
in
dec
pusha
ffreep
xchg
lahf
loopne
jmp
xchg
aad
shrb
sub
mov
movsl
inc
faddl
adc
ret
inc
popa
in
pop
add
aad
inc
push
xchg
clc
cmp
pop
push
sub
es
data16
or
mov
jns
aas
adc
lods
sahf
push
mov
rolb
daa
in
cld
cmp
sub
cmp
shlb
outsl
and
sti
lods
mov
push
mov
shrb
jle
mov
mov
fnsave
test
dec
lods
or
and
fcompl
sbb
cmpb
cli
aam
xor
jo
jp
test
mov
sub
incb
mov
push
iret
leave
mov
jne
cmp
mov
rcrb
loope
push
cmp
js,pn
fcomip
dec
pop
dec
lahf
int
jge
iret
arpl
js
test
jb
xor
ret
stc
add
cld
or
repz
jl
or
mov
movl
inc
out
cmpsl
jle
inc
mov
mov
xorb
inc
pusha
stc
mov
xor
jo
xchg
test
movsl
xchg
pop
xchg
xchg
jns
mov
sbbl
fadds
stos
jmp
push
ret
je
leave
psubsb
div
jno
cmc
mov
insl
cmpsb
xchg
mov
xor
mov
loope
mov
sub
cmp
push
cltd
xchg
movsl
fs
lret
aas
idivb
cwtl
fmull
pop
stos
lcall
xchg
mov
fs
sub
cmpl
cwtl
mov
sbb
ljmp
lods
jne
out
sti
push
jg
cmp
aaa
out
jecxz
jns
mov
lds
popa
inc
add
xor
mov
out
lcall
dec
outsl
xchg
in
mov
divb
pusha
test
dec
cmpsb
add
pop
mov
push
ret
lds
mov
inc
in
or
lea
mov
mov
lcall
fadds
vcvtsi2ssl
or
pop
aad
lcall
pop
jle
imul
fiaddl
mov
dec
sbb
loop
je
xchg
fisubrl
xchg
jne
imul
sub
xchg
test
xchg
inc
enter
std
sbb
inc
fs
add
mov
ret
mov
pop
inc
xchg
xchg
clc
pushl
je
pop
sarb
enter
cmp
xor
aas
loop
xor
xlat
mov
les
add
xorps
hlt
jle
addl
jns
outsb
pusha
xchg
out
pop
dec
loopne
rcr
inc
cld
mov
adc
jl
push
adc
jecxz
addb
hlt
or
cmc
mulb
stos
iret
popa
inc
sbb
dec
dec
loop
adc
inc
in
adc
cmp
sahf
cwtl
add
lods
out
pop
mov
adc
xchg
dec
fbstp
and
jbe
dec
sbb
and
leave
clc
out
lret
call
or
inc
insb
push
mov
pop
mov
ret
in
rolb
add
push
fistpll
mov
or
sbb
ficoms
push
or
xlat
xlat
sbb
rolb
cs
mov
cmp
clc
adc
sbb
stos
mov
mov
xorb
xchg
xor
dec
aaa
fstpl
xor
jg
es
or
mov
ss
jno,pt
xor
movsb
subl
dec
ljmp
mov
stos
lock
push
jg
pop
shll
out
inc
jge
push
cmp
xor
cli
push
dec
jle
dec
mov
push
push
mov
adc
fldt
push
dec
iret
push
inc
add
push
fsubrp
jo
ss
fldcw
test
cwtl
sub
int
lods
jl
jae
jl
or
fimull
icebp
int
ficoml
jle
fistpll
clc
push
xor
pop
leave
xchg
insb
outsb
xor
dec
pop
in
add
jp
hlt
call
adc
popf
test
push
scas
push
pop
add
mov
jbe
ret
popf
or
cmpb
sbb
mov
mov
fstpt
roll
mov
sbb
pop
lock
sub
dec
mov
sbb
mov
xchg
mov
adc
nop
push
mov
data16
mov
sbb
dec
xor
jle
add
and
pop
adc
xchg
xor
inc
fsubrl
out
xchg
cmp
addl
fs
xor
out
push
in
mov
icebp
mov
add
and
test
es
dec
xchg
repz
or
sahf
sbb
int
imul
clc
js
jae
je
pop
es
leave
aaa
movsb
inc
lods
sbb
push
call
aaa
clc
movsl
decb
xor
cmp
push
outsl
cmp
and
cmp
int3
xchg
sub
dec
icebp
jae
mov
jle
roll
scas
sub
js
jb
sbb
push
repz
std
push
sbb
pop
rclb
inc
mov
outsb
or
in
jne
push
fcompl
les
xchg
arpl
adcl
shll
aaa
out
popf
dec
imul
lahf
std
rcrb
stc
addr16
dec
mov
int3
ret
lea
stc
scas
aas
add
lea
aas
add
nop
cltd
jmp
and
adc
or
rolb
ljmp
dec
aas
jne
jne
fidivrl
push
scas
jp
jmp
out
mov
bound
fwait
arpl
mov
or
inc
mov
sahf
addr16
lds
inc
push
stos
xchg
mov
mov
xchg
in
enter
inc
pop
roll
inc
or
push
xor
dec
pop
xchg
adc
adc
mov
ss
mov
out
mov
andl
sbb
out
mov
test
out
inc
lds
hlt
popf
and
sub
movsb
jne
xchg
adc
imul
cmp
fnstcw
pushf
das
sbb
add
inc
xchg
inc
xorb
test
pop
cmpsl
cmpsl
pusha
notl
arpl
repz
jge
add
sub
lock
xchg
jg
sti
pop
mov
cmp
jmp
inc
cwtl
jo
mov
push
stos
mul
cmp
mov
push
negl
push
outsb
jmp
dec
das
push
sti
repnz
push
invd
mov
sbb
adc
mov
adc
cmp
outsl
std
sub
std
fcomps
inc
push
imul
clc
fs
es
stc
shlb
or
daa
jmp
bound
test
shr
pop
inc
xor
scas
movsl
jb
pop
lahf
push
adc
inc
hlt
sqrtps
ljmp
insb
and
or
fnsave
adc
dec
popf
shll
and
mov
in
lock
xchg
jle
mov
out
adc
ret
cmp
adc
xchg
sbb
xor
fdivl
hlt
scas
fcoml
dec
je
fnstcw
mov
loope
jbe
push
dec
frstor
mov
mov
mov
or
cld
cmp
mov
cmp
push
jge
cmp
cmc
add
hlt
dec
and
adc
lods
dec
or
mov
mov
push
cmp
insb
pop
aas
ljmp
push
push
jne
cmp
insb
xor
cmpsl
test
xchg
adc
std
inc
jnp
cmp
jecxz
sbb
sub
cmp
and
js
sar
cmp
adc
aad
push
jmp
sbb
mov
push
dec
and
dec
jl
jg
sub
rclb
hlt
gs
or
push
xchg
dec
lcall
ss
cmp
adc
out
or
es
jp
jns
jae
fldz
sub
inc
cld
dec
pop
jb
test
lcall
fs
ffree
insb
int
mov
pop
xor
xchg
in
dec
inc
xchg
leave
sbbl
mov
lcall
loop
lret
mov
mov
sub
stc
mov
movsl
adc
das
shll
mov
or
mov
les
outsl
adc
inc
arpl
sti
nop
and
pop
push
cwtl
fwait
test
arpl
call
adc
fidivrs
sub
inc
sbb
out
aad
mov
sub
cmp
sub
add
push
fistpll
or
mov
pop
mov
bnd
jo
dec
sbb
mov
xchg
and
mov
sahf
ret
or
jno
scas
leave
pop
in
inc
stos
xchg
bound
in
add
mov
ja
inc
fcmovb
cld
adc
add
fidivl
mov
or
scas
sbb
outsb
dec
dec
sbb
sub
aaa
shl
cmpsl
jg
scas
jg
lcall
fistps
push
push
data16
sub
push
scas
into
or
dec
xchg
adc
sti
inc
jo
push
add
aaa
xchg
lret
mov
jg
std
lock
int
push
add
addr16
sbb
nop
or
test
inc
out
jl
mov
out
dec
push
pushf
cs
pop
test
int3
jno
and
adc
data16
xor
sub
push
sub
dec
xchg
fisubl
js
sub
repnz
in
ja
add
dec
mov
scas
nop
dec
xor
cmp
or
and
mov
cmpsb
inc
mov
xchg
mov
cli
shll
dec
clc
jmp
out
int
mov
fldenv
rcrb
cmpsb
outsl
les
adc
dec
mov
or
jp,pn
push
into
bound
add
sub
adc
inc
jge
mov
lret
testb
inc
adc
in
cmc
insl
push
movsl
add
or
int3
xchg
iret
cmp
xor
and
inc
insl
rol
add
dec
mov
lods
nop
mov
popa
push
or
neg
repnz
lcall
push
push
fimull
daa
push
iret
imul
push
adc
sub
mull
push
jbe
addr16
push
jmp
and
leave
daa
pusha
jb
loop
inc
fistpl
jb
jne
push
adc
xchg
mov
movsb
fsubp
cmp
inc
js
inc
jmp
repz
inc
lods
lea
jmp
sbb
cli
daa
imul
mov
push
sbb
add
pop
cmc
outsb
aaa
fcmovu
mov
imul
test
sbb
jae
insl
mov
add
xor
cltd
les
mov
data16
scas
pop
lock
and
mov
sti
mov
lahf
mov
mov
loopne
inc
jg
pop
xchg
or
inc
adc
or
subl
mov
lcall
xor
or
xchg
mov
or
xor
aad
mov
stos
add
cmp
lcall
out
lea
push
inc
cmpsb
daa
sbbb
sti
jne
fdivrs
aad
in
daa
loopne
lea
das
inc
arpl
jl
xor
repz
inc
mov
ja
shrl
sti
pop
rcll
pushf
jl
inc
or
xchg
sub
jbe
in
movsl
adc
mov
and
insb
cld
inc
divb
ja
mov
pop
pop
int
push
bound
add
or
xchg
or
pop
pop
pop
push
les
or
into
or
stos
test
cld
fnstenv
jle
hlt
clc
lock
jb
sub
cmp
decb
cmp
pop
loope
inc
fcom
cmp
add
scas
arpl
scas
cmp
pop
fisubrl
pop
loope
mov
xchg
mov
std
sbb
push
imul
push
dec
adc
jmp
mov
adc
mov
sbb
adc
loope
ljmp
pop
xchg
xor
xchg
cli
stos
ret
mov
test
fldcw
mov
and
mov
cltd
ret
push
lcall
repnz
add
xor
pusha
out
cmc
jno
jmp
out
stos
sbb
push
cli
mov
push
rol
in
outsl
ds
in
xorl
dec
mov
pop
or
mov
pushf
and
lds
stos
mov
push
mov
andb
hlt
fcompl
sbb
add
test
hlt
cmpl
add
jle
in
dec
push
fdivrl
imul
repnz
mov
mulb
mov
jmp
aad
js
repz
std
xchg
xor
xor
pop
pop
int
xchg
jge
out
mov
adc
shrl
adc
loopne
xor
ljmp
adc
cwtl
ret
jae
ljmp
cmp
out
lods
mov
push
xchg
shrb
cli
sbb
push
mov
jb
aaa
or
xor
add
and
daa
pop
and
cs
aas
hlt
lods
mov
fcmovnbe
adc
fs
pop
xchg
sub
sub
cld
push
repnz
popa
or
lret
push
cltd
sysret
pop
ss
xchg
fwait
mov
mov
xchg
popf
into
jl
push
mov
adc
pop
out
lock
adc
jecxz
inc
je
pusha
out
testb
inc
je
lods
cltd
mov
out
mov
xchg
or
loopne
imul
test
out
lea
pop
sub
je
popf
in
in
ss
faddl
scas
test
sbb
aad
cmp
movsl
je
cmc
and
inc
lods
mov
jne
cmp
xchg
cmp
dec
lock
mov
push
xchg
cmp
cmp
sarb
push
xlat
fwait
xor
lret
cmp
repnz
push
dec
pop
pusha
mov
inc
xchg
addb
jo
mov
test
enter
cwtl
jnp
or
pop
sbb
or
scas
popf
mov
or
jne
mov
fmuls
sbbl
and
les
repz
arpl
int3
dec
leave
xchg
adc
or
dec
shll
lahf
xchg
test
movsl
dec
roll
xchg
inc
lcall
add
pop
sbb
jns
xchg
lcall
inc
dec
cltd
pop
rorb
mov
jbe
shll
shl
jge
nop
cmp
and
push
mov
pop
loop
mov
stos
cmp
add
rsm
cwtl
test
sbb
or
mov
shrl
xchg
icebp
insl
in
or
adc
add
xchg
lahf
xor
subb
fucomi
mov
and
test
lret
pop
aad
rcll
cmpsl
icebp
cwtl
ret
sbb
stos
push
out
cmp
xor
jmp
pop
test
inc
jg
clc
mov
insl
pop
inc
mov
sbb
xchg
ds
xchg
dec
inc
xor
xchg
ret
lret
pop
arpl
jecxz
sbb
jecxz
ret
sub
and
push
imul
or
js
push
xchg
sbb
and
pushf
lcall
or
cmp
jg
sub
es
and
aad
adc
pop
aam
rcrb
fcompl
lea
andb
cmc
movsl
mov
scas
jmp
sbb
iret
js
pop
dec
dec
inc
stos
jmp
cmpb
mov
jo
dec
fmul
mov
dec
dec
out
jge
in
loope
xchg
mov
out
push
sub
aas
jns
ja
arpl
adc
fmulp
push
pop
fsubp
movsb
add
mov
pop
add
cld
into
addb
push
outsl
adc
mov
inc
or
cmp
lods
mov
jnp
jg
adc
out
lods
test
dec
pop
cmpsb
xor
mov
dec
or
dec
push
jb
repz
mov
and
ss
pop
and
jmp
pusha
jle
push
add
dec
xchg
mov
xor
fcmovnb
das
sub
push
jae
int3
pop
in
pop
loopne
dec
cwtl
lds
shrd
cmpsl
iret
mov
scas
xor
sbb
das
sbb
jns
shlb
lds
jns
iret
xchg
loopne
bswap
add
bound
push
call
add
lods
mov
outsb
mov
aaa
in
loopne
loop
mov
push
jg
pop
mov
shl
dec
mov
ds
ds
jge
mov
loop
xchg
sbb
sub
push
fsubrs
dec
pop
adc
sbb
mov
jge
rolb
mov
ret
lea
fidivs
pusha
ret
adc
push
mov
pop
int
cmp
sub
mov
cmp
imul
dec
and
filds
sbb
imul
dec
jp
loopne
push
mov
aas
cmp
adc
movsb
inc
xorb
adcb
sub
or
dec
xor
mov
mov
sbb
js
or
xor
mov
repz
dec
test
sub
insl
ds
bound
stc
insb
out
movsb
test
xchg
test
pop
xor
or
xor
lock
in
mov
ds
in
sar
xor
adc
lcall
iret
and
xchg
xchg
pop
out
dec
push
pop
scas
xchg
push
lds
mov
push
sbb
gs
call
dec
cmp
out
js
push
arpl
pop
daa
or
pop
fistps
repnz
lds
mov
mov
add
fwait
cltd
adc
out
enter
ds
ljmp
and
jne
adc
xchg
mov
push
fs
popaw
cmp
in
fistl
or
lret
and
jp
dec
and
cs
mov
add
jge
jle
xor
in
jl
adc
outsl
sbb
jmp
inc
inc
out
lcall
push
mov
dec
push
ficoml
jle
cs
lea
adc
hlt
in
in
xchg
or
dec
repnz
dec
enter
inc
rcrl
xchg
and
jno
dec
mov
jl
pop
cltd
inc
out
push
sarl
mov
rorb
dec
mov
push
jmp
popf
pushf
shr
push
cli
push
xchg
ja
in
xchg
mov
leave
xchg
mov
push
inc
fstps
mov
ss
testl
add
mov
jle,pt
pop
and
into
mov
add
dec
inc
pop
fisttpll
inc
xchg
fs
push
enter
aas
and
in
sbb
cli
pusha
or
sub
mov
cmp
rclb
adc
push
int3
mov
jecxz
cmpl
icebp
sub
in
insl
push
adc
cmp
fisubl
sbb
cld
adc
lahf
jp
xor
cmp
jno
push
aad
movsb
sub
leave
pop
out
lock
inc
jmp
pop
xchg
sbb
adc
mov
xor
jl
sbb
shlb
dec
pop
in
jmp
int3
aas
outsl
enter
mov
and
xchg
pop
sbb
sbb
inc
fxch
mov
push
imul
and
mov
cmp
roll
or
aad
push
fisubrs
popa
dec
push
and
adc
in
xchg
mov
jne
in
push
aad
sub
aam
ja
mov
out
je
push
ficoml
insb
fldenv
ret
mov
insb
jecxz
es
aam
test
pop
out
cmp
mov
roll
xchg
out
mov
cmpsb
xor
stos
and
inc
or
sub
out
mov
jg
push
cmp
xchg
movsb
inc
jp
test
xor
out
jge
mov
pop
aaa
int3
into
xchg
subl
cmp
sub
adc
xchg
sbb
lcall
jl
mov
push
in
xchg
add
or
sbb
xor
fidivs
adc
mov
shll
fidivl
cmpsl
or
jecxz
xchg
sbb
mov
push
lret
xor
in
push
jle
ficomps
popf
push
jmp
cmp
pushf
push
loopne
mov
test
addr16
sub
xchg
add
jp
cmpsl
divl
dec
ljmp
inc
push
inc
cmpsb
cltd
mov
dec
rep
adc
inc
imul
adc
data16
sub
jge
push
adc
jae
cmp
insb
xchg
neg
ds
add
stos
inc
jmp
mov
testl
mov
inc
lds
or
icebp
mov
nop
xchg
inc
dec
xor
add
cld
add
fstps
imul
push
and
lds
aam
loope
adc
ja
cmp
loope
sti
gs
es
cwtl
mov
push
and
gs
decl
mov
cwtl
ror
jbe
loop
rcll
in
pop
xor
xchg
push
lds
cmp
into
lcall
jb
add
push
dec
lret
pop
dec
xchg
cmpl
andl
jno
mov
inc
je
lret
adcl
and
dec
in
push
mov
dec
in
xchg
and
sbb
mov
into
out
test
cld
das
dec
and
or
inc
sbb
inc
add
rorb
lahf
lds
in
lds
fcom
jle
mov
imul
in
bound
out
test
loope
mov
xor
cwtl
imul
jle
inc
sub
jnp
add
subl
push
pop
es
hlt
cmp
test
sbb
cmpsl
arpl
dec
pcmpeqw
jbe
mov
sbb
jns
subb
xor
pop
jb
insl
mov
divps
mov
pop
hlt
cld
cmpl
je
int3
fs
dec
sbb
jo
pcmpgtw
jno
sbb
xlat
cmpb
and
xorb
mov
loop
jbe
jmp
cld
xlat
cmpsl
dec
mov
sub
js
sub
and
lock
cmp
or
inc
popa
jle
cld
and
pop
cmp
sbb
cld
test
les
icebp
loop
mov
dec
pop
jge
push
and
mov
int3
add
in
mov
jmp
mov
and
mov
adc
jecxz
push
ss
mov
lahf
dec
test
push
test
dec
or
cmp
jp
jmp
icebp
int3
pop
and
test
sbb
jbe
jb
fsubr
jge
movsb
mov
mov
mov
adc
push
inc
push
mov
mov
lahf
in
jp
pop
scas
mov
xorb
cmp
loopne
or
rclb
outsb
jns
ret
push
or
aaa
xor
xor
xor
push
loopne
jae
daa
add
outsb
js
mov
call
or
adc
cltd
int3
or
pop
int3
mov
push
fdivl
or
push
dec
jne
jb
mov
out
aam
loop
xchg
call
xor
cli
daa
sub
sti
in
cmp
sbbl
dec
jp
sub
sub
cld
lock
into
add
and
xchg
icebp
scas
scas
movsb
test
ret
loopne
sub
adc
sub
dec
out
mov
fistpl
movsb
cmpsb
mov
mov
dec
rclb
jbe
push
xor
mov
js
or
mov
xchg
ret
push
inc
mov
repnz
imul
clc
repz
test
push
in
insb
xor
cmp
ss
lret
in
orl
idivl
sbb
rol
pop
mov
aad
cmpsb
fbstp
out
xchg
ret
mov
or
xchg
pop
call
jnp
sub
popw
into
sub
cmp
pop
fistpll
sub
or
shlb
mov
lret
rcll
jl
jmp
adc
sbb
and
jnp
scas
testl
test
insl
loopne
xchg
and
mov
lock
sbb
lock
scas
inc
stos
cmpsl
xor
daa
subb
test
xor
push
cs
jnp
sub
jbe
fadds
fisubs
mov
cli
aad
mov
pop
stos
out
scas
add
cli
xor
fstpl
gs
shrl
mov
stos
adcb
nop
sbb
jnp
sub
xchg
push
andl
dec
xchg
pop
cmp
div
icebp
pop
add
add
dec
inc
out
inc
sbb
add
test
ret
push
cmp
mov
pop
lods
imul
jno
mov
sub
push
adc
lret
sahf
inc
movsl
push
cli
jbe
arpl
mov
and
orl
or
pop
jmp
add
cmp
xchg
cmc
call
loopne
add
mov
rorl
pop
pop
xlat
push
jmp
mov
adc
aaa
or
outsl
call
pop
or
xor
jg
iret
add
or
adc
loopne
out
cmp
in
shl
push
fsts
inc
jmp
gs
fxam
ljmp
orb
js
cmp
mov
mov
sbb
pop
arpl
out
inc
leave
lock
testb
add
lods
mov
imul
sti
mov
imul
push
xchg
ds
pop
movsb
clc
inc
pop
sub
xchg
mov
dec
clc
inc
out
and
mov
mov
pop
subb
gs
and
sahf
inc
adc
and
push
xchg
sarb
lds
insl
scas
dec
or
testb
xlat
cmpsl
jl
scas
adc
jae
fisubs
mov
inc
xchg
lea
icebp
xor
and
addr16
loope
cmp
push
int
push
cmp
rcrb
jl
pusha
pop
cmp
outsl
in
in
sub
or
inc
fisttpl
stc
mov
aam
mov
int
mov
and
jge
mov
and
lock
stos
sbb
push
adc
jl
stos
int
inc
xchg
mov
mov
inc
pop
adc
mov
andb
xchg
cmpsl
cmc
test
adc
popa
ljmp
inc
inc
mov
cltd
addr16
inc
nop
push
inc
inc
mov
mov
loop
and
mov
mov
out
adc
jmp
pop
test
cmp
xchg
mov
add
or
imul
pop
fwait
xchg
pop
adc
std
call
push
xchg
sbb
add
cmc
insl
lret
sub
andl
sub
sti
mov
jmp
jb
mov
push
mov
xchg
lcall
cmp
scas
mov
stos
push
icebp
dec
cli
lcall
push
hlt
lds
sub
test
pop
fwait
mov
clc
shlb
jge
push
mov
mov
sub
xchg
shrb
je
pop
mov
loop
mov
push
cs
subb
pop
push
dec
mov
xchg
out
and
push
sbb
loop
push
add
sub
cmp
addl
fimuls
icebp
add
add
add
jbe
ficoml
repz
cmp
test
lock
jbe
jecxz
sub
push
inc
les
mov
pop
mov
mov
aas
repz
jo
in
ror
dec
push
rorl
add
inc
sub
mov
mov
loop
xor
lret
daa
std
test
inc
inc
sub
push
push
adc
mov
mov
ret
mov
mov
lret
adc
pop
hlt
rolb
sbb
lcall
dec
ret
mov
insl
add
push
shrl
adc
push
je
mov
hlt
xor
test
jle
mov
subb
mov
test
mov
sub
cltd
iret
sti
aaa
sbb
jmp
mov
cmp
inc
and
add
jge
aaa
jl
xor
push
addr16
adc
sarl
jne
cmc
or
lds
das
or
call
or
mov
sub
popa
sub
lock
nop
clc
ljmp
sarl
mov
cli
in
movsl
hlt
adc
xchg
push
mov
mov
jl
ret
out
cmp
xor
pop
loopne
fdivl
imul
xor
push
das
mov
dec
repnz
cmp
pop
push
ret
mov
cmpsl
fidivl
movsl
xchg
cmpsl
jg
clc
data16
mov
lods
and
jl
imul
cld
lods
fsubrl
imul
cmpsb
sub
stos
loopne
sbb
ret
inc
pop
dec
loop
leave
aam
fdiv
pop
shrb
cmp
and
inc
mov
or
loopne
jp
insl
push
cmp
addb
sahf
out
xchg
add
nop
inc
jne
ffreep
or
pop
sarl
ret
enter
nop
int3
sub
fs
xchg
xchg
in
cmpsl
pop
das
int3
pxor
sub
sbb
cltd
xchg
pop
sbb
add
mov
cmp
aam
aam
insb
fmul
push
mov
add
mov
mov
ret
aad
ret
and
jge
push
sti
inc
and
enter
xor
stc
rcrb
mov
sbb
and
ljmp
dec
pop
scas
or
xchg
add
movsb
jmp
stos
pop
push
ljmp
lret
jne
push
or
out
ss
mov
out
in
cmp
xchg
mov
fcompl
fsubs
lock
pop
loope
shl
dec
hlt
testb
pop
pop
pusha
push
xchg
jmp
hlt
fs
jmp
xor
push
lahf
ljmp
cmp
subl
or
xchg
cld
adc
sub
fwait
iret
js
push
in
push
cmp
inc
push
xor
cwtl
xchg
aad
cvtps2pi
sbb
or
mov
dec
hlt
scas
and
sub
push
mov
mov
nopl
not
pushf
in
icebp
mov
hlt
or
adcb
rcll
std
movsl
cld
push
das
ror
in
negl
insl
mov
xchg
insb
and
sbb
and
adc
xchg
popa
mov
xlat
aas
pop
pushf
sbb
add
lret
push
sbb
inc
ljmp
adc
inc
mov
loope
int3
imul
fucomi
stos
push
mov
shlb
mov
pop
arpl
adc
addr16
bound
sub
and
lret
push
ret
shrl
in
mov
pushf
std
movsb
rol
fists
sub
adcl
push
mov
inc
sahf
inc
push
mov
push
push
pop
cmpsl
clc
cmp
pop
insl
fdivs
bound
adc
pop
pop
pop
mov
adc
loopne
cltd
lods
jae
incl
fcoml
cs
leave
add
cmp
adc
lahf
pop
lret
enter
add
push
ds
mov
cltd
xchg
insl
dec
neg
sub
loope
jae
lea
in
outsb
push
sbb
inc
jae
sub
jo
sub
mov
sbb
sbb
aaa
jge
outsl
dec
sbb
andb
inc
repnz
pop
int3
aas
mov
mov
mov
pop
sbb
mov
gs
clc
jne
decl
ret
ss
ret
mov
pop
and
call
shlb
mov
mov
data16
sbb
lret
jno
push
int
jp
das
or
push
mov
mov
out
aaa
push
xor
insb
inc
in
arpl
or
scas
sbb
icebp
or
scas
into
xchg
or
les
in
dec
xor
mov
mov
aam
inc
aas
mov
fwait
cmp
pusha
and
cmp
lret
scas
xor
mov
rcll
dec
cmp
test
jb
push
arpl
decl
adc
mov
aam
xchg
jmp
sub
adc
daa
adcl
sbb
adc
push
lcall
fs
imul
jbe
ret
mov
or
js
xchg
out
xchg
add
add
ficoml
push
bound
cld
jns
es
inc
mov
push
push
xor
sbb
lea
mov
mov
xor
mov
pop
adc
ljmp
scas
mov
les
add
ret
cmp
sahf
lahf
icebp
fcoms
push
in
sub
popa
pushf
fs
xor
negb
jp
andl
add
lock
fildll
andl
fisttpll
clc
sub
je
jge
push
mov
hlt
and
xor
and
pop
cs
popa
jmp
pop
sub
sub
xchg
adc
or
fwait
mov
and
xor
adc
int
sbb
lret
data16
sub
fstl
nop
pusha
mov
cli
mov
fisubl
shr
ret
out
xsaveopt
pop
mov
xchg
mov
pop
mov
mov
iret
aad
test
sub
sbb
shlb
lods
fs
push
mov
call
add
pop
sbb
pusha
and
jg
cmpb
lods
adcl
mov
cmp
or
ss
fdivr
pop
stos
lcall
xchg
cmp
mov
mov
cmp
into
cs
cmpsl
rolb
nop
mov
inc
cmp
sbb
jns
data16
mov
enter
stos
aad
pop
cmp
jge
out
daa
inc
fwait
pop
fdivs
movsl
pop
out
add
arpl
jae
hlt
sbb
test
add
out
dec
or
mov
out
nop
ret
inc
add
movsb
pop
and
mov
imul
mov
dec
push
xlat
inc
repz
sbb
adc
sub
jle
pop
xor
mov
fs
rclb
into
xlat
cmpsl
xchg
int
xlat
push
stc
shlb
xchg
mov
cltd
jl
and
fdivs
pop
cltd
jo
push
popa
rorb
movsb
cmp
repz
lds
xchg
notl
mov
sbb
mov
bound
mov
repz
sub
dec
es
inc
dec
out
push
arpl
in
dec
nop
es
in
cmp
outsl
xchg
out
inc
shrb
sub
idivl
mov
fisubl
and
in
push
lock
cmpsl
aad
std
xchg
and
cmp
push
pop
sbb
mov
and
dec
xchg
push
cmc
inc
scas
sub
aas
test
imul
jnp
aaa
dec
cmp
jecxz
sbb
popl
stos
lods
dec
and
mov
loope
lahf
lcall
pop
stos
xchg
mov
dec
pop
xlat
add
mov
inc
mov
adc
sub
ret
sub
pop
sbb
inc
lret
adc
fdivr
aam
adc
push
mov
lock
sbb
add
mov
or
nop
jno
dec
xor
jp
testb
cmpsl
jns
lods
push
or
fdivrl
stc
out
and
xor
notb
cmp
pop
mov
loope
sbb
mov
xchg
push
mulb
push
imul
lock
push
sub
cmp
mov
arpl
jne
adc
out
push
and
repnz
fisubl
addl
cld
aam
sub
pop
cld
mov
push
cmpsb
pop
loop
frstor
fists
sti
push
add
push
fisttpll
ds
and
pushf
or
adc
fcomi
add
lcall
movsl
add
add
lahf
jne
dec
mov
pusha
outsb
or
jo
jnp
in
cmovne
in
push
divb
sbb
sbb
rol
int3
xor
add
outsb
test
mov
jnp
dec
inc
jnp
fstps
hlt
lea
aam
cmpsl
dec
mov
push
inc
incl
icebp
adc
jne
icebp
push
hlt
hlt
cmp
arpl
mov
fisubl
loope
jmpw
mov
mulb
mov
cmc
pop
out
adc
std
sarl
lcall
jno
and
andb
inc
cli
fcompl
xchg
and
xor
lcall
jne
or
imul
xor
hlt
addr16
adc
daa
lea
add
imul
jns
popf
dec
xchg
push
push
jo
out
pop
xchg
push
xor
clc
mov
movsl
or
iret
ficompl
lods
cmp
testb
sub
or
or
adc
sbb
pop
push
fidivl
push
stos
pop
mov
mov
push
dec
iret
movsl
pushf
fs
out
and
adcb
xchg
mov
inc
test
scas
mov
xchg
or
ret
in
jle
out
leave
cmpsb
or
dec
adc
mov
aaa
rolb
shrl
and
xor
and
xor
dec
inc
fcoml
lret
imul
xlat
fcoms
dec
jno
mov
or
icebp
into
dec
out
iret
in
int
xor
mov
push
mov
icebp
ljmp
sarb
push
stc
inc
jo
adc
int
inc
in
inc
imul
wbinvd
jns
cmp
xchg
mov
pop
cld
jecxz
push
ret
xor
xor
das
ja
in
cwtl
fdivs
mov
sbb
and
push
adc
xchg
notb
and
jne
cmpsl
cmp
mov
call
dec
mov
pop
in
mov
mov
js
mov
pop
xor
dec
cs
mov
hlt
repz
scas
push
mov
ficompl
add
shlb
dec
bound
push
pop
imul
xor
jno
std
mov
sbb
test
jmp
push
push
xor
push
mov
dec
scas
enter
jnp
loope
int
mov
add
or
sub
xor
call
cs
mov
out
push
sbb
adc
scas
mov
in
jae
push
xchg
pop
jle
xchg
lahf
xor
ss
push
call
aam
xor
gs
jle
in
imul
in
clc
jb
lods
xor
in
dec
xor
cltd
push
imul
and
clc
jmp
jne
or
push
scas
hlt
xchg
js
mov
call
mov
cmp
dec
mov
test
fwait
or
mov
jne
push
pushf
sub
jmp
push
imul
repz
pushf
lret
jne
push
movsl
shll
or
xchg
and
dec
clc
pop
fsubp
into
sub
mov
sbb
xchg
fs
in
jecxz
jle
add
stos
pop
out
push
pop
mov
test
adcb
inc
enter
pop
jg
cmc
mov
addl
jg
sub
push
rcrl
mov
sub
int3
or
push
xor
jle
and
mov
pop
test
or
jne
icebp
inc
push
hlt
mov
sub
inc
add
xor
and
cmp
sbb
adc
mov
shrl
inc
call
pop
mov
ss
mov
dec
sbb
shll
orl
push
xchg
lods
xchg
mov
add
dec
repnz
inc
mov
mov
or
pushf
mov
jge
xchg
cmp
cwtl
pop
mov
nop
mov
loopne
xchg
nop
loopne
jnp
pop
popf
outsl
pushf
cmp
jle
sbb
std
sets
add
je
add
and
jle
xor
ret
add
jle
hlt
sbb
std
subl
mov
sub
hlt
jge
out
out
sarb
leave
movl
lret
imul
adc
xchg
or
pop
pop
out
cmp
add
sbbb
jne
pop
jns
sti
mov
fs
cmp
jmp
add
and
push
fistps
sub
pop
cwtl
xchg
mov
sub
fisubl
cmpsl
jle
aaa
push
shrb
mov
out
das
in
cmc
out
pushf
scas
xchg
ss
popa
and
and
xchg
mov
mov
loopne
lret
rcrb
sub
jmp
insl
test
or
cmpsb
mov
jmp
sarl
pop
cmp
jge
push
or
push
or
cli
loop
test
fcmovne
outsb
call
mov
dec
mov
xchg
dec
add
push
loope
sbb
in
and
lret
add
add
insl
sbb
xor
lret
xchg
popf
xchg
loop
je
into
dec
fwait
insl
outsl
ds
pop
std
adcl
lahf
scas
and
sbb
mov
sbb
jne
std
popa
into
neg
mov
cmpsb
mov
jbe
sbb
adc
jne
insb
jne
insl
mov
xor
test
jne
out
ds
mov
sbb
dec
and
loopne
xor
pop
imul
in
rolb
lea
test
lock
in
fists
ficompl
cmc
dec
inc
xlat
popa
push
cmpsb
imul
pushf
inc
imul
pop
int
sub
ja
pop
lods
cmovnp
cmp
scas
sub
push
inc
xchg
jbe
in
pop
xchg
call
xchg
adc
je
int3
out
jbe
inc
adc
adc
cs
mov
jp
and
fdivr
push
pop
jmp
xor
shll
orl
pushf
cmc
and
repz
fisubrl
mov
cli
test
jl
mov
pop
stos
aam
cs
aam
ljmp
cltd
pop
push
and
xlat
pop
es
bound
hlt
adc
ret
xchg
xor
xor
movq
loope
xor
rorl
and
mov
inc
scas
push
les
dec
scas
push
mov
add
sub
pop
xchg
xchg
sbb
inc
insl
sbb
cmc
sbb
movsl
cmp
xor
in
roll
fnstcw
adc
dec
push
xlat
cwtl
incb
jae
mov
xchg
rclb
mov
test
fldenv
xchg
lcall
adc
and
repnz
add
mov
cmpsl
push
cmp
xchg
add
adc
jae
cmp
jbe
jmp
jae
testl
in
mov
cmpsb
cmc
out
mov
jns
sti
notl
ja
loopne
std
mov
cltd
sub
cmp
enter
out
jbe
adc
nop
or
loopne
push
sbb
lcall
lret
sub
jbe
scas
push
insl
cmp
push
lret
mov
je
add
push
imul
dec
cwtl
push
mov
xchg
jmp
xchg
xor
mov
inc
jge
cli
loopne
repnz
add
push
adc
popa
pop
xor
lods
lds
xchg
and
fldenv
cwtl
xor
icebp
addr16
push
push
lahf
lar
inc
out
mov
cmp
shlb
jns
lds
pusha
call
cmpsb
cmp
data16
push
rclb
mov
out
rclb
outsb
xor
sahf
sahf
push
movsl
xchg
jno
scas
sti
jle
dec
push
xchg
ficoml
shll
andl
and
adc
aaa
in
push
dec
add
sbb
scas
jecxz
out
dec
sbb
xchg
mov
sbb
or
jae
and
mov
push
mov
outsl
mov
dec
lahf
mov
mov
out
inc
and
ret
mov
cmp
mov
fidivrs
add
xor
lahf
outsb
rcrb
stos
push
cltd
les
cmp
jne
inc
dec
push
jb
push
mov
lea
lret
in
jo
aas
jne
inc
test
enter
pop
es
mov
mov
fsubrl
xor
mov
xor
xchg
pop
sbb
push
xor
mov
rolb
cmp
mov
aaa
mov
xor
loop
in
shll
jns
sub
insl
lock
pusha
ret
std
mov
cli
sub
add
outsb
ds
cmp
mov
mov
lock
jne
xor
xchg
push
jnp
vaddpd
shll
xor
push
dec
rol
sub
insl
push
clc
xchg
int3
dec
push
add
or
enter
inc
push
ss
mov
insb
movsb
mov
popa
sarb
add
or
notb
sub
aaa
or
sbb
test
dec
xchg
aaa
inc
jge
fldl
or
xchg
loope
push
mov
data16
jl
pop
in
push
out
push
repz
lods
das
outsl
roll
mov
mov
cli
mov
jne
or
sbb
ja
or
and
mov
int
fwait
jle
and
fld
push
addr16
icebp
mov
outsl
push
dec
lcall
roll
lods
ret
pop
pop
and
mov
imul
leave
xchg
and
js
subb
cs
das
push
ret
filds
or
xor
imul
push
adc
sbb
push
sahf
push
cltd
call
clc
mov
xor
add
fisubrl
jge
push
pop
ficoms
mov
sti
cwtl
sarb
je
mov
inc
cwtl
dec
xlat
into
dec
mov
les
sbb
xbegin
in
dec
std
xchg
andb
xchg
mov
add
nop
test
jg
je
jo
addl
adc
das
or
mov
sahf
loopne
jecxz
lods
fistps
mov
sbb
or
jo
in
add
fyl2x
xchg
ret
enter
jg
mov
lea
rcll
pop
inc
sti
lahf
ss
out
mov
sub
mov
imul
je
test
sub
inc
outsl
xchg
inc
mov
inc
sub
xchg
in
pop
popa
sub
push
rorl
push
push
je
lds
test
pop
aam
mov
popf
insb
jbe
repnz
ret
push
inc
sub
mov
fwait
adc
xchg
add
xchg
and
adc
push
enter
jmp
pop
push
sub
ror
mov
sarl
xor
cltd
fidivrl
sbb
xchg
add
int
xor
mov
daa
lret
out
into
lock
aas
movsl
xorl
movsb
jb
xlat
dec
mov
push
pop
in
sbb
adc
adc
inc
es
cmp
xchg
clc
mov
pop
arpl
daa
data16
outsl
shl
out
jne
int3
push
xchg
int
sub
jo
imul
pop
cli
data16
jl
test
pop
ljmp
xor
mov
mov
sbb
xor
dec
mov
pop
lds
sar
or
icebp
jmp
pop
cmp
orb
jmp
push
test
cmp
dec
xor
sbb
andb
repz
dec
pop
jne
mov
push
bound
cmp
xor
frstor
or
sbb
icebp
lret
movb
testl
jo
cmpsl
out
mov
loopne
loopne
cld
icebp
arpl
scas
mov
pop
hlt
push
pop
rcl
out
xchg
push
cmc
movsb
ljmp
pop
movsl
mov
insl
xor
popf
dec
pop
xchg
lock
mov
or
mov
jmp
add
mov
lret
ja
push
loope
shrb
repz
mov
sbb
dec
ljmp
in
push
pop
rolb
lds
fstl
sub
xor
sbb
jle
ficoml
mov
push
or
gs
inc
test
push
push
add
pop
lock
and
inc
push
ds
jae
pop
mov
mov
and
das
test
lea
push
movsb
push
sbb
jb
mov
mov
sti
ja
push
jg
jl
pushf
fisttpl
shlb
xor
push
daa
or
add
pop
rorb
pop
cmpl
test
and
mov
popa
xor
jnp
cld
sbb
xor
jbe
add
xchg
fsubs
insb
icebp
sbb
addl
repz
out
hlt
outsb
inc
in
cmp
fistpl
sub
les
pop
jle
icebp
adc
dec
pop
xchg
mov
popf
inc
jle
dec
loop
clc
add
lea
sbbl
stc
fbstp
jle
mov
nop
and
jmp
stc
jns
xchg
mov
xor
movsl
stc
push
data16
fs
or
stos
adc
push
andl
lods
cmpsb
repnz
xchg
xchg
cmpl
dec
push
xor
mov
lods
jae
mul
int
rolb
pop
jge
stos
dec
xor
rorb
and
xor
push
push
sbb
repz
push
dec
mov
jnp
xchg
je
js
fisttpl
mov
aas
cmpsb
fcomps
cs
stos
dec
add
popf
loop
int
movsb
push
or
inc
insb
push
or
imul
push
sarl
push
je
sahf
loope
ljmp
roll
add
sub
scas
xor
pop
das
push
sbb
nop
shlb
fidivrl
pop
dec
out
jno
repnz
sub
adc
ds
sub
addr16
push
xor
pop
shll
fcompl
out
sbb
insl
test
loope
pop
shl
adc
mov
add
add
mul
ffree
cltd
xchg
xchg
sub
jno
or
hlt
fwait
cmp
ret
push
bound
lret
mov
dec
sbb
cwtl
outsb
movsb
cmp
sahf
inc
push
xchg
cs
mov
pop
cmpsl
fisubrs
adc
pushf
sub
jmp
push
mov
fsubrp
sub
jg
lret
lret
mov
popa
mov
rorl
pop
lods
jo
ss
insb
leave
adc
sbb
rolb
bound
ss
aam
push
int3
mov
sbb
movsb
pop
iret
or
cmpl
xor
push
gs
xchg
bound
test
adc
sti
sub
push
rorb
repnz
scas
sti
mov
stos
fistps
repz
aam
push
cmpsl
sahf
pop
xchg
test
lahf
pop
or
cmp
movlps
sbb
cmp
mov
mov
addr16
rolb
cmpsl
sub
arpl
jnp
mov
jp
add
jle
cld
push
dec
cli
cs
add
and
inc
sbb
add
jmp
and
mov
mov
je
idivl
mov
mov
adc
mov
mov
fnstenv
aad
jge
shl
addr16
xchg
inc
hlt
pop
push
or
ljmp
fwait
test
aaa
add
rorb
inc
sahf
push
sub
mov
or
and
add
push
js
pop
and
push
or
andl
mov
jecxz
outsl
movsb
incl
dec
fidivrs
and
sub
pop
xchg
test
loop
popa
mov
push
mov
int
add
lahf
pop
mov
pop
push
or
iret
punpckhwd
outsl
pop
mov
jbe
les
scas
les
inc
lret
jbe
lcall
jb
in
aam
dec
clc
adc
jns
f2xm1
xor
jle
leave
inc
jns
loopne
lods
mov
into
pop
repnz
call
cmc
dec
push
xorb
sub
jp
mov
loopne
mov
sbb
and
pop
aad
aas
clc
icebp
out
sbb
mov
lcall
sbb
call
mov
out
data16
lcall
sub
lahf
xor
je
inc
pop
sti
inc
pop
mov
adc
fildl
iret
mov
scas
sar
cli
jae
orl
jno
mov
mov
xchg
dec
mov
mov
mov
sub
cmp
ds
adc
je,pn
adc
mov
es
rolb
mov
jnp
xchg
shrl
xchg
push
pop
mov
in
adc
cmp
fadds
dec
test
dec
and
mov
sub
in
push
test
lret
cmp
dec
cmc
inc
mov
ss
xchg
cmp
pop
mov
jmp
pop
xchg
into
int
or
sub
mov
neg
movsl
or
sbb
movsl
and
xor
lret
lods
mov
push
cmp
mov
imul
inc
addb
xor
xor
sub
mov
mov
mov
aas
dec
lcall
dec
adc
fnstcw
push
lret
pusha
cmp
in
loope
jbe
or
scas
mov
into
push
sub
fisttpll
pop
push
cltd
xchg
mov
imul
mov
cltd
unpcklps
cltd
push
or
ss
arpl
pusha
adc
jno
pop
loopne
add
ret
mov
xchg
lahf
pop
dec
pop
sub
xor
nop
mov
dec
movl
cmc
and
xchg
fiaddl
sti
outsl
fldcw
ret
or
into
xchg
ficoms
cmp
xor
ds
je
dec
jnp
adc
mov
ljmp
mov
repnz
mov
pusha
cmp
push
pop
xor
cmp
in
xchg
mov
xor
jb
and
mov
mov
xor
subl
mov
das
xchg
inc
iret
repnz
aas
mov
xchg
int3
ja
dec
mov
pop
jnp
dec
pop
shlb
fdivs
jp
pop
out
or
mov
cmp
popa
loop
lods
jmp
rcrl
xlat
aad
lods
or
jecxz
inc
jbe
gs
sarb
cmp
mov
aam
pop
jbe
mov
gs
and
inc
xchg
xchg
cmp
out
xchg
stos
lahf
cmpsl
aaa
inc
dec
lock
je
sbb
jbe
loopne
cld
pop
dec
jnp
mov
xchg
push
popl
mov
in
add
jle
pop
push
fists
and
push
pop
or
dec
ljmp
xor
pop
sbb
fwait
push
cmp
mov
sub
dec
xor
xlat
out
dec
cmp
dec
bound
dec
ficompl
mov
mov
fstp
push
dec
inc
pop
mov
dec
test
and
lock
push
jg
das
outsl
subl
in
cli
iret
fidivl
in
pop
pusha
aaa
out
aam
cli
fcomp
imul
movsl
dec
sahf
in
and
movsl
inc
scas
xchg
cmp
add
rclb
mov
sbb
and
pushl
lds
pop
xchg
call
inc
or
daa
daa
test
push
ret
nop
jo
movsl
jle
push
mov
sbb
cmp
push
rcll
pushf
and
jnp
sbb
fmuls
mov
scas
pushf
or
rorb
pusha
aad
out
sbb
jle
in
push
xor
xor
das
xor
jmp
and
dec
cmp
lahf
mov
xchg
fimull
add
repnz
in
mov
nop
sbb
lret
pop
fdivr
xor
mov
outsl
es
into
dec
ficoml
dec
fnstenv
push
mov
xor
push
test
test
das
mov
push
mov
pop
fistpll
dec
cli
push
mov
jae
adc
dec
scas
pop
cmp
mov
test
pop
outsb
inc
sub
movsl
aas
dec
add
mov
jno
inc
cmpb
or
pop
and
stos
inc
popa
add
das
cltd
mov
movsb
push
outsl
shrl
sub
cmpsl
rorb
mov
enter
pop
add
pop
popf
mov
mov
mov
sarb
fprem1
push
add
jmp
repnz
push
fstl
daa
xchg
popf
ja
inc
fwait
ja
fildl
cs
pop
jno
jne
jl
lret
lret
aad
xchg
lods
mov
mov
lcall
mov
xorl
cmp
add
push
fildll
out
or
data16
mov
inc
mov
outsb
fldl2e
orb
std
dec
outsl
std
jp
insb
fs
in
adcl
xlat
add
and
lods
xchg
pop
mov
mov
jo
out
xchg
fldt
push
imulb
lret
in
fs
push
outsb
aam
adc
pop
out
dec
mov
cmp
popa
push
pusha
add
testl
out
or
fsubl
pop
mov
mov
cmp
push
mov
scas
dec
or
aas
rcll
add
sahf
std
sbb
stos
mov
andb
xor
push
imul
sar
fnsave
cmp
ret
mov
out
push
lret
xchg
fucomi
fsubl
xor
mov
mov
sbb
ret
dec
imul
in
and
ret
jl
nop
ret
jecxz
xor
cmc
add
test
bound
pop
movsb
fcomip
lock
in
outsl
sbbl
or
rorb
inc
inc
leave
in
movsl
movsl
enter
inc
movsl
rolb
xchg
loope
lcall
push
pop
mov
cmpsl
sbb
rcrb
xchg
adc
out
dec
pusha
cmc
fwait
clc
xchg
sti
jnp
jge
js
int3
je
div
sub
es
push
xor
push
shrb
jns
push
out
psrld
pop
push
shl
push
jne
dec
jle
es
popa
das
rcll
add
mov
fistpl
lret
loope
addr16
fptan
push
xor
dec
in
data16
sbb
mov
sub
fwait
mov
or
xchg
xlat
cmp
fwait
loope
jne
sti
mov
nop
sub
arpl
adc
data16
push
hlt
push
sbb
arpl
insl
add
xchg
mov
xor
dec
push
inc
call
xchg
xchg
sub
jmp
or
lods
xor
cmp
or
repnz
aas
add
adc
inc
cmp
jmp
xchg
add
push
stc
push
mov
stos
dec
fs
in
addr16
inc
arpl
fcmovbe
dec
mov
mov
lods
xchg
push
push
jg
sar
inc
cs
push
shll
das
and
xchg
lret
xor
xor
pop
repz
leave
sub
enter
loop
adc
dec
jnp
sbb
xchg
scas
fmul
aam
xchg
adc
sub
mov
in
inc
outsl
inc
pop
push
cmp
lds
pop
scas
sub
xor
fnstcw
pusha
lret
push
and
repz
scas
pushf
mov
and
or
sbb
shll
cmpsl
pushf
nop
shll
imul
xchg
and
push
lods
jg
pusha
jbe
mov
subl
mov
dec
inc
push
rcrb
sbb
stc
and
test
mov
subb
ja
daa
push
std
push
in
adc
les
mov
xorb
out
pop
jo
mov
or
pop
pop
dec
loop
pop
add
in
enter
lds
pushf
xor
stos
ja
mov
dec
push
loope
repz
add
inc
cmp
scas
pop
aaa
mov
cld
inc
dec
add
fnstcw
rclb
mov
xor
pop
xlat
and
inc
cltd
jns
and
aaa
xor
xor
cmp
das
jmp
mov
mov
int
mov
jo
lds
cmpl
sbb
lret
lea
adc
xlat
loope
xor
pop
nop
sbb
sarb
pop
or
inc
mov
pop
je
iret
out
rorb
dec
in
inc
pop
cmp
and
add
lods
xchg
icebp
jae
lret
sahf
les
icebp
or
ja
add
add
cld
fs
es
or
scas
pusha
xlat
xchg
adc
scas
xor
cmp
push
xchg
sbb
in
mov
push
outsb
sub
outsb
xchg
popf
push
ret
outsl
push
mov
icebp
divb
mov
mov
inc
movsb
cli
dec
aad
xchg
add
inc
fimull
in
lods
xchg
jecxz
dec
cmpsb
aaa
add
add
add
in
sahf
pop
leave
lea
rep
xchg
insl
out
pop
mov
or
out
movsb
mov
mov
jmp
insb
push
xchg
stos
sub
xchg
fprem
enter
loopne
insb
jb
pop
jnp
cmpsl
loop
cmp
and
adc
js
adc
out
cltd
aad
stc
loopne
ja
leave
mov
fldl2e
dec
cld
push
aaa
mov
cmc
aas
test
data16
mov
in
fsub
dec
ret
push
inc
inc
stos
pop
popa
iret
mov
push
lret
cld
adc
stos
adc
xor
or
cmp
jle
sarl
xor
xchg
rorl
or
aam
adc
sbb
or
push
jp
lret
lock
enter
out
mov
jg
xchg
mov
loop
add
pop
push
sub
dec
xchg
in
or
and
mov
imul
and
neg
imul
xlat
push
fsts
push
insl
ret
mov
jmp
stc
das
sub
fwait
pop
subl
pop
mov
int
insl
dec
mov
push
pop
inc
add
xor
push
int
add
pop
jle
pop
fmuls
inc
mov
mov
add
imul
push
imul
jne
iret
add
sub
xchg
cltd
add
add
mov
xchg
and
dec
sbb
xor
das
jmp
data16
push
mov
sub
js
jecxz
jne
pop
sub
leave
insb
cli
push
pop
push
pushf
adc
xor
cwtl
lods
inc
notb
mov
in
pop
cli
mov
das
leave
jg
jge
cmc
xchg
xor
adc
clc
push
pop
jnp
dec
bound
daa
ljmp
mov
fnstcw
jmp
jmp
icebp
xchg
call
loope
mov
pushf
mov
in
subb
inc
nop
cmc
fidivrs
xor
cltd
arpl
arpl
incb
in
pusha
loope
sub
stos
out
inc
stos
ljmp
xor
and
int
or
xor
fwait
ror
fstpt
je
in
mov
divl
mov
fcmovnbe
sbb
lods
mov
adc
pop
pop
inc
push
rclb
ret
mov
ss
jle
rcr
jb
cli
leave
adc
jle
mov
shll
pop
test
bnd
incl
mov
call
aad
cld
cmpb
jb
pop
jnp
mov
xor
add
lea
loop
sbb
cmp
pop
int
je
push
arpl
mov
inc
push
fucomp
or
xchg
loope
jge
repnz
bound
dec
xchg
sbb
into
mov
je
div
cmc
cmp
fisubrl
fdivr
and
jecxz
pusha
mov
dec
fwait
mov
sub
inc
scas
cs
mov
xor
hlt
cmp
inc
dec
jae
dec
or
sbb
in
lds
mov
and
push
push
add
inc
insb
lahf
call
push
adc
sub
es
xchg
mov
jmp
fs
sbb
pop
sub
jae
inc
cmp
test
aad
sub
or
mov
lods
ljmp
rcl
add
dec
pop
pusha
aad
and
jmp
push
js
repz
out
xchg
cmpsl
pop
shlb
call
das
je
outsl
fstpl
aaa
mov
out
or
xchg
in
lock
movsl
ret
mov
mov
push
mov
mov
sbb
jo
pushw
outsb
or
jbe
sbb
mov
push
jecxz
pop
out
or
repz
mov
clc
jns
sbb
xor
insl
lahf
mov
xchg
pushf
inc
js
test
push
rcll
jge
lods
mov
inc
jge
shl
inc
popf
push
pop
xchg
jns
or
test
out
testl
xor
adc
je
sarl
sti
into
inc
psllq
out
push
and
cld
add
mov
sbb
bound
xchg
sarb
pop
push
push
mov
addr16
sbb
or
dec
out
sti
inc
frstor
sub
adc
test
push
roll
xchg
cmc
mov
xlat
mov
or
mov
jg
xchg
mov
test
andl
dec
test
or
dec
movsb
sahf
mov
jb
xchg
or
imul
sub
mov
and
mov
add
pop
jae
in
int3
cmp
fstpl
insl
sub
pop
or
mov
out
decb
in
or
loop
push
mov
sbb
insb
cld
mov
xor
in
pop
shll
mov
push
jle
mov
loopne
mov
and
or
adc
push
popa
jne
push
ds
cmc
ljmp
stos
jb
sub
and
dec
xor
notl
insb
cmpsl
fucomi
lods
adc
adcb
push
xchg
insl
and
fnstcw
mov
mov
inc
cmpl
aam
adc
cmpsb
cmp
call
sbb
addr16
fbld
dec
mov
inc
push
jae
push
mov
pop
push
lea
xor
pop
inc
data16
xchg
sti
jnp
imul
cmp
arpl
lret
imul
fs
std
jae
cs
push
mov
bound
fidivrl
sub
add
push
lret
aad
xchg
idivl
cmp
pop
mov
cld
outsl
cwtl
or
orb
shrl
daa
hlt
addl
inc
sub
sub
mov
dec
pop
push
mov
loop
sbb
cmp
jns,pt
adc
out
dec
xchg
rol
repnz
adc
jp
jl
add
adc
adc
xchg
lret
addl
sub
xchg
xor
xor
jo
and
repnz
clc
add
push
out
test
sub
push
push
data16
rcrb
mov
gs
addr16
xor
loop
in
scas
dec
sti
or
pushf
lret
hlt
das
or
dec
mov
fcmovbe
jmp
lret
mov
dec
into
push
mov
mov
jne
push
out
mov
rol
dec
repnz
cmp
dec
rcrb
cmc
mov
sbb
jmp
int
loopne
push
loope
sub
mov
adc
shl
or
arpl
out
mov
divl
cmp
pop
push
sub
push
loopne
inc
in
mov
inc
xor
lahf
push
mov
add
add
inc
cmp
nop
into
jae
mov
and
cmp
cs
cmp
add
xor
cmc
dec
and
icebp
aaa
add
mov
jge
mov
mov
mov
xchg
scas
faddl
es
jae
add
dec
mov
mov
ljmp
daa
dec
arpl
mov
jnp
cmp
aam
inc
jns
and
popf
jo
jmp
rcl
into
nop
loope
cmpsl
enter
cld
inc
pop
aas
je
adc
jbe
fimuls
lods
hlt
fldl
jecxz
jns
sbb
mov
call
je
out
subl
adc
lock
pop
ljmp
ret
iret
jecxz
xor
andl
lds
je
dec
pop
stc
ds
int3
lea
sbb
push
aaa
addr16
jnp
sti
xor
push
sti
xor
arpl
outsb
push
fcoml
pop
lret
and
and
push
out
ficoms
stos
pusha
dec
mov
pop
pop
leave
mov
mov
jl
and
xchg
lods
mov
lret
add
cmpb
lods
jbe
xchg
xlat
fwait
push
mov
push
lcall
adc
inc
lea
pop
xor
or
sti
mov
fstps
je
pop
dec
or
mov
popa
pop
fwait
xlat
cmp
int
adc
jge
sub
ljmp
sub
pop
sub
cld
pop
or
inc
scas
insl
push
push
and
hlt
pcmpgtw
mov
push
adc
dec
outsb
cmp
cmpsl
outsb
sub
push
sub
mov
jne
imul
lock
aas
sbb
cli
pop
jbe
rcrl
rcrb
orl
add
push
imul
ja
int3
lods
popa
mov
cmpsl
popf
insl
scas
rorl
ret
cs
mov
cwtl
or
add
les
or
lock
test
jmp
add
and
ffree
inc
adc
cmp
xor
pop
mov
jb
mov
jg
jo
int
and
xchg
out
mov
inc
dec
arpl
mov
jge
bound
push
push
movsb
orb
rcll
addr16
clc
xchg
push
pop
mov
xor
icebp
loopne
inc
pusha
fldcw
addr16
mov
cmp
mov
jmp
int3
ja
dec
cmp
mov
movsl
shlb
cmovno
outsl
jno
or
cmpsl
mov
cmp
stos
sarl
cli
pop
cmpsb
scas
psubsb
mov
sub
or
mov
xchg
push
movsl
mov
mov
ljmp
out
pop
fisubrl
inc
scas
mov
mov
and
cwtl
arpl
daa
les
lea
jl
insl
push
js
loopne
ret
pop
add
xlat
nop
das
arpl
xor
lcall
clc
sbb
push
les
sub
jg
pop
lea
inc
out
mov
xchg
mov
jg
mov
add
xor
cmp
jne
jo
imul
scas
dec
js
int3
xor
outsl
mov
add
sbb
stc
fdivrl
jne
cmp
jne
adc
mov
test
lret
fs
xor
cmp
sub
lock
popa
fidivrs
add
xchg
pop
sub
fldt
fsubl
and
ss
cmpsb
ficoml
gs
jno
cmp
mov
test
cmp
xchg
xchg
sbb
dec
inc
xor
pusha
inc
pop
adc
xchg
mov
xor
push
mov
js
sub
lcall
dec
cwtl
filds
loop
adc
push
shr
push
es
inc
jns
cmpb
push
push
insb
mov
pop
in
daa
stos
cmp
lret
push
imul
xor
sub
adc
out
rcrb
xor
nop
inc
sbb
repnz
cmpb
xor
dec
shlb
fs
daa
js
sahf
xchg
mov
into
lods
jo,pn
aad
jno
mov
mov
push
xchg
bnd
and
and
dec
jno
xlat
aaa
cmpsl
push
sub
adc
or
sub
in
mov
mov
mov
push
lahf
pop
sub
dec
out
test
mov
inc
pushf
ficoml
fdivrl
lret
cli
leave
lea
and
lahf
lret
mov
push
and
push
adc
xchg
iret
scas
sbb
mov
loope
cltd
jbe
aad
and
mov
lahf
in
xchg
mov
push
cwtl
ret
orl
stos
xchg
insl
clc
push
inc
jb
jmp
addl
ljmp
add
in
inc
loopne
and
mov
sbb
and
mov
adc
in
outsb
incl
jbe
scas
lods
fcom
outsl
xor
mov
sub
push
jne
not
ds
lds
push
int3
cmpsl
or
and
inc
mov
add
cmp
cmp
xor
shl
test
mov
and
insl
mov
test
ljmp
add
repnz
fiaddl
inc
inc
cltd
or
gs
adc
inc
cmp
inc
sub
xchg
repnz
xor
cmp
push
push
fsts
adcb
test
sbb
jp
or
xchg
nop
je
sbb
sub
incb
xchg
cmp
psllw
dec
fs
sub
pop
std
pop
cltd
sbb
xlat
mov
mov
inc
loopne
fs
stos
sbb
mov
shl
lret
lock
inc
in
adc
cmpsl
jne
gs
jmp
cmp
add
mov
pop
sbb
daa
mov
test
fsts
pop
push
iret
ss
jecxz
lret
mov
push
insb
add
push
fstl
lret
cmp
lock
sub
adc
and
pop
mov
dec
xor
inc
lods
pop
dec
jmp
or
gs
lahf
push
cld
and
sti
xor
rcrb
cwtl
mov
lahf
sbb
clc
mov
imul
push
or
repnz
add
add
scas
pop
xchg
js
gs
aam
ret
fcompl
fistps
dec
sub
aaa
repz
xor
mov
pushf
push
out
fdivrs
jno
sbb
bound
mov
sbb
jg
mov
ja
aas
mov
mov
repz
pusha
cmp
gs
andl
cmp
mov
imul
jns
dec
imul
push
inc
cmpsl
push
mov
push
xor
push
inc
bound
loop
mov
adc
sub
adc
hlt
push
mov
bound
add
gs
insb
cmpb
mov
sbb
jae
js
or
mov
es
subl
pop
negb
mov
test
pop
addr16
xchg
jp
mov
ja
jmp
xchg
cltd
sub
imul
lods
ds
xrelease
pop
btcl
xor
call
inc
push
rol
sub
xor
dec
jae
add
arpl
inc
fwait
or
pusha
xchg
cmp
xor
sbb
test
adc
je
jns
mov
mov
xchg
xchg
enter
shrl
and
pop
add
pushf
or
sbb
xchg
dec
pop
cmp
mov
cmpsb
xchg
jecxz
les
scas
call
lret
sub
xor
lret
jno
adc
sti
mov
cmp
fisttpl
out
mov
arpl
cmp
jae
stc
sbb
pop
test
in
cmp
mov
cmp
lods
inc
mov
or
sub
jmp
inc
sbb
pop
repz
cld
inc
outsb
xlat
or
paddq
jp
movsb
mov
pusha
je
pop
cmp
fabs
and
add
inc
ja
shll
enter
mov
stc
or
mov
xor
mov
das
mov
pop
mov
lock
ret
dec
loopne
sbbl
lea
pop
jbe
mov
ljmp
or
jno
xchg
outsb
ljmp
jp
pop
andps
das
loope
pop
jl
mov
out
xchg
and
and
aaa
je
stc
mov
sbb
jp
jmp
push
inc
fwait
sbb
and
or
loop
add
andb
jo
aad
jnp
loopne
or
js
inc
setno
cwtl
mov
or
clc
jne
or
jb
or
es
and
inc
pop
fldt
jb
mov
mov
test
cmp
loopne
push
sbb
ljmp
call
dec
mov
ljmp
orb
inc
stos
sahf
movsl
cltd
sbb
decl
mov
and
inc
xorl
inc
sub
push
jo
adc
add
mov
les
inc
dec
sub
mov
daa
ret
in
int
and
xor
mov
lods
xchg
hlt
je
or
mov
cmp
cwtl
cli
cmc
mov
lea
cmp
dec
push
cmp
ds
adc
cmpsl
inc
pop
out
and
enter
lods
sbb
inc
cmp
push
xor
mov
outsl
add
xchg
pop
or
sbb
sti
cmpsl
xchg
jnp
lods
mov
into
push
mov
gs
sub
addr16
insb
clc
push
cs
cmpsl
aas
sub
fsubl
adc
inc
xlat
ficompl
push
repz
notl
pop
and
mov
loopne
leave
or
in
outsl
jmp
js
xor
outsl
push
mov
in
xchg
jb
sub
mov
cmp
jmp
lret
sub
jmp
inc
pop
jl
loope
daa
xchg
hlt
scas
aaa
outsl
out
xor
sarb
mov
lret
xchg
or
mov
pop
std
mov
int3
test
push
dec
inc
andb
hlt
add
mov
out
jo
ja
pusha
xchg
lcall
int
push
and
out
enter
iret
cltd
mov
scas
jnp
lret
mov
cmpsb
arpl
inc
pop
inc
or
adc
movb
lret
ret
std
fs
loop
cmpsb
les
inc
loope
imul
sti
mov
les
and
pop
incl
cli
or
jecxz
pop
adc
mov
insl
out
in
mov
gs
pop
fwait
add
fsts
fildl
imul
sarl
push
push
gs
sbb
jmp
inc
repz
cmp
sub
dec
sub
adc
push
adc
gs
mov
out
movsl
in
pop
or
addr16
mov
stos
xor
push
add
add
cmc
cmpl
pop
mul
push
sub
jecxz
mov
xor
es
jge
pop
mov
popf
test
jae
mov
stos
mov
sbb
lcall
pop
adc
push
pusha
loope
push
push
xor
jno
test
ror
or
inc
adc
fwait
lret
repnz
push
aas
cld
cwtl
adc
ret
dec
push
inc
sahf
adc
mov
hlt
push
mov
je
test
adc
lods
arpl
sbb
xor
fadds
jae
mov
stos
mov
cmp
jne
add
xor
ljmp
adc
mov
ror
gs
add
jmp
mov
out
daa
push
xor
push
mov
ljmp
dec
popa
fisttpll
in
mov
add
scas
push
dec
push
push
jmp
add
out
push
cmpsb
adc
and
sahf
jmp
mov
mov
or
sbb
in
mov
mov
and
add
ljmp
adc
cmc
push
shr
imul
mov
cmp
fisttpl
sub
or
dec
decl
mov
dec
push
dec
stos
aaa
fcmovne
and
mov
mov
ds
adc
fstps
imul
lods
add
push
js
push
sbb
repnz
xor
pop
xchg
cmp
xor
aam
arpl
aas
outsb
dec
mov
push
stos
sub
xchg
push
xchg
pop
push
out
mov
mov
rcr
inc
mov
mov
xor
jnp
xchg
mov
add
pop
scas
sub
xor
and
out
pop
imul
inc
lret
pop
lods
hlt
adc
shll
loopne
sbb
xchg
gs
mov
in
jno
icebp
mov
or
jae
xchg
int
xor
adc
xor
mov
aad
sbb
insb
mov
inc
test
call
pop
mov
lahf
inc
js
enter
insl
push
xchg
fwait
insl
dec
lds
call
and
adc
loopne
mov
leave
jae
movsl
in
add
fcmovnb
add
insb
mov
sub
xor
and
stos
fisubs
shll
pop
fnstcw
sub
cmpsl
inc
stc
sub
sub
add
cmpsl
bound
pop
and
fisubrl
pusha
insl
cmpsl
js
pop
push
sti
add
push
sbb
fildl
andl
stos
inc
lahf
repz
cmp
in
imul
out
out
cmp
inc
scas
pop
ds
sub
jl
outsb
push
mov
test
push
shll
cli
int
or
pop
stc
dec
lcall
xchg
imul
jg
inc
mov
mov
and
inc
or
sahf
xor
add
mov
aaa
add
daa
clc
dec
mov
fs
and
test
ret
je
dec
dec
andb
xlat
add
iret
or
xchg
and
call
mov
push
mov
fwait
lea
xor
into
sti
movsb
in
clc
lea
push
ja
mov
mov
mov
jns
orb
test
push
or
mov
ds
out
aam
push
mov
mov
mov
mov
jp
jae
inc
add
push
cmpsb
jne
lahf
sub
shl
ret
xchg
xchg
jg
in
sbb
movb
dec
mov
sti
pop
sub
inc
jle
mov
cmpsb
mov
dec
lock
mov
sub
sarl
fmuls
int3
ret
xor
test
arpl
into
je
mov
out
es
ret
mov
pop
fstp
jmp
push
push
mov
and
mov
outsl
sti
xor
adc
mulps
mov
fwait
xor
pop
in
pop
sbb
hlt
sub
sub
dec
adc
stos
stos
scas
mov
jb
dec
dec
cmp
mov
cmp
pop
mov
adc
frstor
scas
loopne
mov
and
adc
inc
inc
cmpsl
xchg
and
sub
aaa
push
mov
xor
dec
in
sti
push
mov
mov
mov
dec
iret
fisubl
mov
cmc
xchg
adc
outsb
and
lret
xorl
sbb
push
jge
lcall
pop
fadd
cmp
mov
daa
shl
push
add
xchg
cmp
inc
test
push
xlat
inc
dec
out
mov
push
shlb
in
inc
cmp
mov
adc
add
sahf
notb
daa
shrl
jmp
cmpsb
mov
test
xor
shrb
inc
adc
add
inc
or
cltd
sub
adc
sbb
das
clc
mov
mov
adc
les
xchg
aaa
dec
cmp
and
jae
mov
and
mov
out
or
dec
sub
mov
dec
aam
xor
incb
jb
push
mov
cltd
and
jne
fildll
cld
sbb
into
enter
stc
sahf
out
jle
dec
in
pusha
cld
arpl
xor
imul
stos
fs
lcall
pop
mov
jecxz
daa
pop
into
ss
cmpsb
outsl
in
inc
dec
mov
mov
in
mov
mov
das
cmp
ja
dec
aad
stos
in
add
daa
mov
mov
or
insl
sub
jae
mov
pop
jmp
ljmp
into
inc
inc
dec
sbb
add
and
jno
jmp
lret
aam
pop
cmpsl
out
loope
and
outsl
out
outsb
push
psrlq
mov
mov
push
lret
sbb
sbb
inc
insl
into
adc
pushf
sub
pop
push
out
push
inc
xchg
adc
push
add
nop
xchg
push
sbb
sbb
les
sahf
stc
mov
decl
jl
out
xor
in
mov
sub
lahf
cmc
fidivl
cmpsb
push
push
outsl
push
and
out
jb
imul
fstl
sub
jbe
sbb
mov
es
pop
out
mov
adc
into
add
xor
icebp
in
out
sbb
into
test
gs
out
sub
imul
adc
test
xor
mov
push
daa
lods
mov
or
ljmp
and
popa
adc
mov
in
sbb
mov
push
daa
iret
and
in
push
into
or
fiadds
add
scas
ljmp
jns
mov
roll
cmp
pop
out
loopne
push
and
jge
mov
mov
cmovnp
imul
cli
jl
mov
addl
pusha
adc
int
arpl
lods
adc
out
into
icebp
xchg
or
mov
pop
lds
test
cmp
fdivs
push
test
inc
jo
popa
inc
cmp
int
add
das
out
out
pop
add
ja
ret
xchg
aam
xchg
lock
jno
push
push
xchg
xchg
lds
xchg
pop
inc
pop
cmp
xchg
jecxz
call
cmpsl
fwait
mov
inc
insb
out
mov
mov
les
and
pop
mov
pusha
sub
stos
xor
or
mov
mov
mov
pushf
repnz
or
add
jl
mov
add
cmpsb
in
lahf
adc
dec
lea
leave
pop
sbbl
imul
mov
mov
dec
fcomps
adc
xchg
inc
mov
into
scas
bound
ret
sbbl
aaa
jnp
faddl
adc
and
pop
popf
bound
cli
pop
xlat
sahf
lds
adc
mov
mov
dec
push
dec
cld
jmp
cmp
adc
lds
enter
sbb
xchg
pop
cld
jl
repz
daa
jb
mov
fwait
xor
addb
pop
test
add
push
push
dec
sub
mov
xchg
sub
push
idivb
jmp
xchg
scas
mov
cmp
cs
mov
dec
out
imul
dec
lahf
nop
paddq
rcrl
scas
push
or
mov
rorb
jle
mov
adc
pop
insl
and
insb
sbb
sub
lret
sub
mov
pop
ljmp
addr16
insb
push
pop
adc
ja
jle
sti
insb
out
add
sbb
dec
insb
add
fcomi
mov
into
loop
lock
shrl
cmp
outsl
mov
repnz
sub
dec
mov
mov
ja
jmp
xchg
xchg
pop
jbe
icebp
je
mov
out
sub
test
sarl
jb
pop
mov
and
xor
pop
insl
out
popa
xor
adc
ret
arpl
jo
cli
icebp
mov
inc
pop
cwtl
aad
push
adc
sbb
push
fwait
mov
fadd
jg
ret
pop
adc
or
dec
mov
in
mov
fdiv
add
inc
aad
inc
lret
out
bound
fists
mov
inc
lock
int3
idivb
push
in
pop
mov
aad
into
inc
mov
dec
sbb
jnp
jmp
cmp
lahf
je
cmpsb
push
pop
scas
push
push
mov
mov
fildl
fsub
inc
adc
mov
add
aad
xor
aaa
push
test
out
jge
add
popa
test
xchg
aad
lods
dec
cmpsb
dec
jbe
pop
cld
xchg
pop
pop
push
add
je
pushf
out
jmp
mov
pop
daa
int
xor
jb
push
add
pop
test
cmp
pushf
lea
sub
add
dec
sub
pop
in
out
imul
rorl
dec
mov
push
scas
cwtl
xchg
xchg
ss
mov
add
xchg
sti
test
popf
popf
dec
jnp
arpl
outsl
push
clc
mov
inc
stos
push
adc
outsl
leave
mov
stc
inc
ja
push
int
mov
lock
jmp
xchg
lds
push
xchg
jns
mov
ja
sahf
cmp
fld
jge
sahf
loopne
lcall
jg
fwait
add
rol
std
loop
repz
xchg
jge
mov
jle
mov
adcb
add
cmp
test
adc
loop
lret
scas
dec
or
out
adc
ds
stos
dec
flds
pushl
push
test
sub
sub
shll
inc
pop
ljmp
inc
or
insb
jp
xchg
fucomp
movsl
cmc
push
jbe
cmpsb
je
push
xor
adc
inc
mov
dec
mov
imul
loope
cltd
jl
test
mov
or
call
in
sub
inc
insb
dec
adc
pop
pop
add
shlb
adc
jl
bnd
out
xor
cmp
cli
mov
cmp
dec
dec
outsb
pop
stos
lods
cmp
pop
inc
std
xchg
lret
cs
stos
aam
mov
dec
jmp
outsl
jle
mov
ror
fstpl
cmpsb
xchg
cltd
xorl
jecxz
jge
movsb
inc
jb
rcr
arpl
notb
test
mov
stos
jnp
pop
dec
cltd
mov
mov
xchg
sub
and
xor
fldt
adc
imul
add
mov
xor
addr16
xor
in
cmp
inc
orl
xchg
add
sub
inc
in
cld
icebp
aad
jbe
mov
or
aad
jo
in
xchg
pop
jnp
jmp
ret
adc
insl
adc
pop
inc
sub
xor
aaa
jnp
push
dec
xchg
xchg
mov
cmp
push
xor
mov
xchg
pcmpgtd
or
imul
and
in
lods
cs
mov
mov
sub
lret
cmp
lahf
insb
clc
mov
sub
cmpsl
sbb
je,pn
cwtl
xchg
and
sbb
lret
pop
push
hlt
add
mov
popa
jnp
push
popf
test
cmc
xor
push
xchg
inc
mov
inc
inc
inc
hlt
cli
jne
test
inc
cmpsl
mov
call
or
in
mov
jp
inc
jg
xchg
cmp
sub
xchg
pop
and
das
cmpl
loope
loopne
cltd
addr16
je
mov
movsl
jge
gs
test
jo
push
mov
dec
push
enter
clc
fisubrs
dec
pop
pop
xchg
xchg
int
adc
movsl
adc
jnp
mov
aaa
js
js
inc
push
aaa
push
loopne
lds
js
out
pop
adc
test
cmpsl
xor
mov
mov
scas
movsl
ffree
jecxz
stos
push
sbbl
xchg
pop
int3
or
fcmovbe
in
inc
imul
ds
xchg
out
mov
dec
inc
pop
js
mov
jns
outsb
rorl
cli
imul
inc
pop
test
inc
popa
sub
aam
ja
nop
push
mov
lcall
hlt
iret
femms
xor
cmp
test
ds
xchg
jl
sar
push
and
or
mov
iret
mov
xor
iret
cmp
lret
xor
push
cli
cwtl
imul
sbb
subb
fldt
pop
repnz
add
push
loopne
mov
jne
xchg
sti
insl
xor
inc
aam
xchg
int3
dec
repz
adc
sub
or
pop
test
jne
into
pop
fisubrs
lret
leave
mov
dec
xor
sbb
loopne
incl
inc
inc
inc
xor
aas
mov
or
mov
inc
test
cmp
xchg
cmpsb
push
cmpsb
xor
mov
out
jb
hlt
lods
push
or
mov
lahf
shll
fstp
inc
loopne
lcall
jno
mov
aaa
loopne
test
mov
mov
sbb
jne
push
out
inc
lods
js
popf
pop
xor
into
and
pop
mov
shll
cmp
bound
sbb
cmpsb
push
sti
cld
mov
jg
negb
pop
pusha
xlat
divb
xor
sbb
lock
and
or
inc
sub
sub
push
jp
sbb
lods
mov
loopne
cwtl
mov
and
cmp
inc
xor
outsl
jmp
jl
mov
outsl
imul
sub
scas
cltd
inc
jle
fsubrl
adc
and
ret
xor
lahf
rcll
lea
scas
pop
loop
addb
push
lahf
dec
pop
js
pop
dec
mov
jnp
enter
mov
jb
movsb
lods
mov
inc
scas
addr16
repnz
jo
add
inc
in
test
mov
aad
inc
push
and
mov
mov
sub
imul
push
std
sbb
lret
int
sbb
sbb
xlat
scas
adc
pop
sub
jg
orl
pop
in
stos
aas
rorl
sub
imull
rolb
loop
test
mov
add
or
jge
lret
std
xchg
push
dec
cli
xlat
mov
es
mov
in
cs
adcb
mov
adc
out
mov
adc
or
sub
push
inc
mov
or
cmp
lret
mov
mov
mov
adc
repz
jg
xlat
and
outsl
xchg
xor
push
xchg
xchg
mov
test
aad
fimull
clc
or
cmp
jns
cld
sub
clc
add
dec
out
sbb
adc
imul
stc
cmp
repz
lds
pushl
push
loopne
rorl
mov
loopne
mulb
sahf
mov
xor
mov
sbb
adc
loopne
clc
insb
mov
ds
xchg
shr
mov
dec
mov
push
or
sbb
call
pop
or
mov
movsb
les
inc
pop
mov
pop
adc
insl
cmp
and
jae
or
and
scas
in
xor
pop
push
inc
adc
test
jno
aas
ja
mov
dec
cwtl
adc
loop
and
push
jnp
cmp
mov
sbb
push
sbb
rcll
or
negl
sbb
mov
rcl
jmp
push
loope
imul
ret
roll
sub
loopne
cmpsl
mov
mov
andl
xchg
mov
jb
and
stos
inc
cmp
xchg
sbb
xchg
in
test
mov
cwtl
jge
sub
mov
int3
dec
gs
cmp
lock
leave
pop
sub
lcall
icebp
or
cmp
fistpl
in
push
xor
adc
mov
lea
lahf
or
sahf
fimull
and
sbb
add
int3
pop
call
test
jl
sbb
sub
inc
addr16
cmp
aas
popf
gs
xor
sbb
pop
jb
pop
xchg
js
push
xchg
dec
sbb
fwait
loopne
pop
inc
cmp
clc
mov
bound
mov
popa
sub
xchg
in
mov
fmull
mov
jbe
jl
cmp
lahf
scas
shrl
and
rol
mov
sbb
push
aam
rclb
ror
in
aas
add
pop
cmp
xchg
push
divl
cmc
clc
or
shl
and
aas
cli
jge
and
push
xchg
sbb
ja
adc
jnp
hlt
jecxz
xor
push
ret
scas
scas
cmpsb
fsubl
xor
mov
cli
or
mov
and
mov
mov
jg
sbb
ret
es
xchg
call
arpl
imul
mov
fidivl
insb
stc
sub
cs
add
push
test
aad
or
addr16
jmp
and
pop
push
mov
in
mov
mov
sbbl
lods
imul
pop
mov
fimull
mov
in
movsb
sti
lock
add
lock
movsb
lahf
inc
lods
or
mov
test
pop
aad
std
test
nop
push
pushf
or
inc
add
sbb
jecxz
cmpsb
cmp
mov
gs
test
pop
inc
adc
pop
and
or
pushf
scas
mov
mov
imul
inc
push
outsl
mov
or
cmp
fidivs
ss
sti
loopne
xchg
lods
call
mov
lea
insb
mov
js
test
sti
push
mov
pop
cmp
inc
roll
pushf
add
mov
push
jmp
sub
push
daa
jle
add
dec
xor
repnz
shl
mov
nop
add
imul
inc
in
sub
mov
orl
xchg
aam
dec
popa
xchg
jp
and
pop
rorl
xchg
mov
repz
cwtl
jbe
lret
mov
mov
mov
mov
ret
orb
imul
sbb
dec
mov
xchg
and
pop
outsb
mulb
in
out
addr16
insl
lahf
stc
pop
pop
movsb
in
repnz
xchg
sub
arpl
fnstenv
lods
adc
cli
push
mov
movb
sbb
push
push
fildll
dec
les
ret
xchg
add
jns
outsl
nop
cmp
flds
pop
je
push
test
jle
adc
pusha
dec
add
pop
iret
arpl
data16
fcomp
seta
nop
scas
sbb
sahf
xor
push
pop
xchg
dec
pop
ds
jl
sub
mov
or
jo
lea
mov
scas
inc
xchg
std
or
fstpt
xor
insb
imul
icebp
mov
fdiv
repnz
push
or
aad
xor
cmp
dec
mov
mov
jns
jge
jecxz
ljmp
push
sbb
jecxz
sbb
ss
rol
popa
sbbl
cltd
xchg
mov
in
adc
cmp
cmpsl
and
out
lret
nop
movsb
or
cli
mov
shr
in
popa
scas
sbb
repnz
sbb
adc
outsl
lret
and
and
mov
or
invlpg
jl
jne
add
adc
and
adc
inc
popf
cmp
rcl
xchg
outsb
aad
sahf
mov
pop
dec
jl
fsubr
aad
adc
in
cmpsl
fcoml
push
arpl
cld
and
jo
and
fldenv
mov
pusha
leave
pop
mov
jecxz
es
stc
and
jg
cmpsb
sahf
add
cltd
insb
aas
stos
aad
inc
pushf
pop
dec
or
xlat
loope
xorl
or
out
adc
xchg
pop
stos
pop
or
xlat
xchg
mov
jno
out
xchg
loopne
out
or
stos
xchg
add
adc
inc
mov
shrl
xor
inc
mov
sahf
pop
sub
test
xchg
pop
lock
mov
lods
call
inc
es
sarb
push
sub
insl
dec
dec
sbb
lods
fistps
std
and
lret
mov
mov
lds
dec
adc
xchg
sub
das
cmc
mov
pop
aad
mov
dec
xchg
mov
xchg
cmpsl
ret
lods
cmp
xchg
mov
push
fs
mov
jl
pop
dec
xchg
mov
in
stc
jno
mov
pop
jl
pop
out
add
jno
mov
mov
leave
mov
dec
jmp
ja
jmp
jo
push
or
rolb
sub
add
out
sbb
push
push
jnp
dec
cltd
imull
inc
repz
test
test
rorb
mov
test
loopne
inc
test
mov
aad
ljmp
cmp
cmp
add
cmp
cli
scas
push
test
adc
arpl
adc
das
imul
mov
fsubr
test
sar
insb
mov
movsl
data16
sarb
inc
stc
rcrb
dec
mov
xchg
dec
sbb
mov
push
add
xchg
adc
push
xchg
in
cmc
cmp
push
fmull
push
into
ret
pop
push
dec
out
and
inc
test
and
pop
push
mov
fcoms
xor
and
mov
cmp
fwait
pop
xor
das
add
repnz
adc
cmp
ret
jmp
push
frstor
fcmovnu
or
cmc
sub
stos
adc
mov
imul
push
xor
pop
jno
mov
scas
movsb
or
dec
dec
int
popa
int
nop
insl
sbb
mov
repz
aas
push
xor
dec
movsb
in
cmpsl
fistpll
pushf
or
cmp
mov
mov
jge
js
lcall
push
mov
xchg
inc
ds
lret
mov
and
xchg
sub
cmpb
fldcw
loopne
out
sbb
icebp
push
sub
jnp
out
mov
leave
push
jo
cs
lds
push
push
sbb
dec
sbb
or
aad
xchg
test
rol
fdivs
mov
jge
add
aam
std
mov
mov
pop
pop
leave
scas
cmpsb
mov
out
test
mov
lcall
nop
cmpsl
fisubs
jp
xor
pop
adc
daa
sub
cld
cwtl
xor
adc
cmp
pop
scas
leave
in
xor
mov
xlat
test
dec
shr
pop
dec
insl
cmp
fldl
es
inc
hlt
aam
sbb
scas
movsb
adc
scas
ret
and
push
dec
cmpsl
xchg
aad
adc
xchg
subb
xchg
jl
jmp
or
inc
fucomip
scas
test
push
mov
fs
cmp
test
in
mov
sbb
fmulp
clc
icebp
jmp
inc
pop
or
sub
adc
sbb
sub
leave
daa
nop
mov
push
adc
cmpsl
popf
out
in
stos
stos
mov
xchg
insl
pop
pop
add
cmc
ret
xor
add
movsl
popa
mov
ret
in
stc
aad
xor
or
in
cmp
mov
imul
mov
cmp
push
aam
adcl
sbb
fcoms
loope
cmpb
std
sbb
jne
xchg
ss
dec
movsl
cs
mov
mov
mov
fwait
push
loop
cmp
repnz
mov
inc
mov
dec
pop
pop
sbbl
insb
insb
sarb
dec
orl
or
mov
jmp
inc
xor
jl
lea
dec
loop
jmp
mov
push
cltd
test
popf
and
sub
call
inc
pop
stos
mov
movb
cmp
or
mov
imull
int
lods
addr16
outsb
mov
and
loope
and
fildl
imul
enter
xlat
scas
imul
adc
out
jo
pop
push
pop
xchg
xor
loopnew
pop
testl
cmp
pop
aad
xor
adc
fimull
lahf
mov
or
stos
pop
xchg
jl
in
add
icebp
fdivrl
loopne
jg
push
sub
hlt
add
mov
push
cs
xchg
adc
fstps
xchg
pop
scas
jg
and
mov
test
dec
loop
dec
lahf
and
adc
and
mov
inc
out
shrl
arpl
shll
or
pop
popa
add
jg
aas
cmp
pop
nop
jno
sbb
call
jecxz
push
sbb
lcall
aam
fnstsw
and
adc
jl
loopne
pop
sbb
repnz
pushf
jmp
and
aam
jne
outsb
popa
clc
jmp
add
xchg
push
cmpsb
dec
sbb
sub
loope
inc
xchg
sbb
js
push
lods
stos
mov
push
sar
xchg
xor
push
cltd
sbb
or
fnsave
sbb
or
push
outsl
pusha
insb
dec
mov
pop
rorl
sbb
in
pop
icebp
aam
icebp
mov
test
in
mov
and
gs
xchg
stos
cmpsb
adc
popl
addr16
cmp
jp
adc
pushf
jb
pushf
mov
cmp
and
aam
js
fsubrl
or
sub
mov
mov
xor
mov
daa
add
bound
add
pop
ficomps
insl
xchg
push
lret
iret
jg
out
dec
and
mov
sub
lock
loop
push
inc
xchg
mov
push
xchg
sub
cmp
adcb
add
mov
xor
dec
push
sub
inc
aad
lcall
add
mov
lds
clc
daa
xor
pop
inc
push
mov
xchg
cmp
add
or
ret
jo
call
push
xchg
sbb
lea
dec
aas
mov
cmp
push
fwait
adc
pop
fstpl
add
sbb
ja
dec
pop
fsubp
and
movsl
pop
ja
lods
pushf
adc
mov
bound
imul
jl
int3
push
xchg
lock
filds
int
mov
push
fdivs
frstor
mov
adc
gs
adcl
mov
dec
cmpsb
cltd
cmp
int3
in
jbe
inc
jnp
sub
out
ss
jo
xchg
imul
xchg
mov
mov
pop
push
mov
pop
xor
jb
inc
xor
outsl
leave
xchg
cmpsl
add
jmp
pop
xor
sub
and
minps
inc
and
mov
shll
push
dec
insb
jb
mov
cmpsb
imul
pop
stos
ljmp
pop
imul
mov
call
cltd
mov
mov
out
pop
or
push
xchg
and
lret
xor
pop
lahf
xchg
push
pop
mov
orl
pop
in
outsl
faddl
and
pop
xor
jmp
sbb
jbe
and
or
sub
shll
fsubs
lcall
stos
or
fstpl
and
xor
and
in
stc
dec
testl
mov
mov
push
js
pop
cwtl
cld
jge
ja
lea
adc
pop
ret
push
mov
dec
fistl
jbe
fcoms
adc
fwait
mov
movsl
sbb
adc
pop
ret
add
adc
shrl
jp
fidivrl
push
ljmp
add
pushf
xor
mov
mov
adc
test
sbb
gs
add
dec
mov
fwait
out
cmp
dec
cmpsl
jmp
mov
sub
fmull
mov
call
call
jp
jne
hlt
repnz
pandn
fmuls
and
scas
lret
ud0
aas
movl
test
idivb
inc
adc
cmc
cmp
mov
int
aad
div
rol
ret
outsb
out
cmp
xor
and
or
xlat
nop
xchg
daa
cmp
inc
pop
push
adcb
movsb
fdivrl
adc
xchg
les
jb
dec
mov
addr16
out
dec
push
add
shrl
push
stc
jno
mov
movsl
out
aas
cmpsb
cwtl
scas
or
scas
fdecstp
lcall
xchg
sub
sarb
stos
fildll
jo
test
notl
sub
out
fisubrs
sbb
sub
bound
mov
cmpsb
pop
nop
sbb
outsl
fwait
cmpsl
lret
and
ljmp
movsb
add
lret
repnz
mov
enter
mov
arpl
push
imul
mov
and
ja
insb
mov
xchg
mov
xchg
adc
mov
sub
fwait
pop
cmp
mov
test
xchg
jb
sti
popa
jge
insl
mov
cmp
xchg
mov
jns
rcrb
xchg
cmc
dec
nop
out
cmp
and
ffree
syscall
pop
sbb
pop
cmp
scas
movsl
cwtl
xchg
sbb
adc
xchg
sbb
stos
stos
fiaddl
sbbl
jecxz
inc
leave
add
mov
popa
hlt
scas
in
mov
inc
or
out
push
ret
das
pop
loopne
pop
jle
orb
loope
xchg
sub
es
andb
pop
inc
jne
cmp
lock
loopew
sub
and
loopne
nop
mov
pusha
mov
aas
bound
testl
mov
mov
jmp
lods
or
fcom
xlat
addr16
in
sbb
adc
inc
mov
inc
push
sbb
xchg
movsb
loope
shrb
sbb
insl
cli
dec
rcll
fadd
push
aas
and
popa
es
scas
mov
inc
push
jl
sub
jmp
xchg
jmp
sub
mov
jo
pop
jg
lcall
cmp
sbb
fwait
xor
or
sub
lock
mov
lock
pushf
jne
push
or
and
mov
or
pop
gs
pusha
fnstenv
in
andl
xor
call
fwait
sbb
and
add
addr16
mov
xor
ret
pop
jmp
lcall
pop
in
push
dec
cmp
mov
cld
les
xchg
and
fmull
imull
or
and
pop
test
pop
hlt
jecxz
out
jne
mov
in
shrl
push
jne
jg
popa
mov
and
mov
in
jecxz
jno
xor
xlat
jbe
int3
mov
mov
ficomps
jbe
test
sub
repz
sbb
pusha
pushf
sub
push
sbb
jb
call
sbb
jo
popf
pop
fwait
mov
inc
shlb
popa
cmpsl
fidivs
xchg
add
scas
mov
out
dec
inc
mov
dec
call
mov
aas
sbbl
das
mov
adc
stos
shll
shll
jnp
mov
popa
push
mov
popf
xchg
fstps
in
sbb
inc
movsl
pop
movsl
lahf
daa
or
fs
cmp
mov
mov
lret
xor
sbb
or
xchg
sub
cmpb
lret
repz
push
in
outsl
inc
and
mov
imul
hlt
push
adc
xor
aaa
push
icebp
roll
dec
call
pop
mov
in
addr16
or
iret
xor
push
sub
sbb
ja
cmp
mov
rol
mov
lods
lahf
imulb
jo
push
and
fucomip
stc
adc
adc
mov
dec
jg
imul
sbb
scas
cld
and
adc
enter
je
or
xor
mov
push
je
insb
fcmovnu
xor
jnp
ss
pushf
test
out
adc
out
push
or
fadds
loop
push
sbb
enter
jp
cmc
push
inc
push
xor
gs
adc
dec
mov
ret
pop
dec
repnz
outsb
pop
les
xchg
push
jmp
ret
shll
push
sbb
inc
add
movsb
stc
leave
int
ret
mov
inc
out
jae
or
xchg
mov
loopne
lods
adc
fnsave
pushw
lret
mov
arpl
addb
popf
pop
cmp
neg
insl
loopne
stos
mov
movsb
test
mov
push
nop
dec
mov
jle
das
outsl
sub
ja
jo
adc
jno
adc
sbbl
jg
sbb
jmp
dec
in
test
enter
cmpsb
insb
mov
cmc
mov
stos
inc
call
push
mov
sub
jnp
adc
in
test
das
aad
ret
xor
xchg
dec
dec
sub
pop
fiadds
sub
inc
xchg
sbb
sbb
fisubrl
loop
bound
mov
ret
jne
xor
push
or
mov
data16
xchg
scas
jno
addr16
inc
dec
adc
fmull
mov
cli
clc
inc
aas
adc
cmc
js
fildll
gs
or
cmc
cli
lcall
xor
pusha
incb
sub
aas
push
enter
lea
push
je
mov
pop
xor
add
cmpsl
sbb
cmp
aas
lds
cmp
mov
xlat
les
insb
sti
adc
outsl
pop
dec
sub
sbb
mov
inc
cli
ret
testl
push
adc
stc
fdivrs
popa
cmp
sti
xchg
xchg
dec
rcrb
dec
xor
mov
mov
jne
pop
loop
lahf
insb
and
mov
mov
pop
fld
rcpps
cmp
xor
jle
mov
dec
shlb
dec
clc
daa
dec
fldl
or
mov
mov
fadd
int3
lods
dec
or
inc
xchg
add
mov
sbb
sbb
mov
xchg
clc
xchg
push
fs
push
sbb
xor
imulb
cmpl
sbb
rcrb
xor
pop
shrb
scas
movsb
pop
xchg
insb
mov
xor
xchg
mov
add
add
sub
std
aaa
iret
cmp
add
dec
push
pop
bnd
mov
or
add
add
or
jl
xchg
pop
in
stos
fs
mov
jnp
add
fstps
adc
mov
aam
ret
popf
repnz
iret
into
jle
cwtl
fwait
ret
add
into
cltd
mov
mov
lea
xchg
aaa
or
jg
pushf
push
pop
movl
fisttpl
in
shlb
lock
pusha
and
inc
scas
pop
add
pop
dec
jp
pop
scas
scas
jge
push
testb
xchg
mov
xchg
xchg
pop
cs
cmp
jmpw
loopne
daa
insl
adc
cmp
sub
jns
mov
dec
inc
adc
incl
cs
stos
mov
frstor
mov
cmc
push
iret
cmpsl
out
add
add
mov
mov
add
push
repz
xchg
fdivr
push
testl
mov
mov
lea
mov
xchg
cltd
lcall
add
sub
mov
dec
cmpsb
xchg
xor
mov
subl
jnp
mov
fstpl
cmc
or
repz
xor
push
orb
cmp
imul
lds
test
add
pop
cmp
and
pop
lods
mov
aad
loopne
mov
dec
sub
dec
jo
mov
imul
mov
int3
inc
mov
sbb
jecxz
aas
test
outsl
loop
jecxz
dec
and
cmp
pop
idivb
mov
cmp
js
xor
xor
and
or
jne
add
pop
inc
leave
sbb
stc
sahf
xor
and
xlat
movsl
jmp
jbe
fldenv
cmp
lahf
mov
mov
mov
in
mov
rol
into
sbb
xor
jge,pt
repz
mov
or
fisubl
mov
xchg
mov
pop
addr16
add
sti
outsb
dec
xchg
xchg
fdivl
dec
pop
mov
repnz
mov
inc
fidivs
add
mov
cli
lret
fld
mov
xor
or
pop
in
inc
xchg
sbb
mov
lcall
pop
mov
add
hlt
std
xchg
fcoms
insl
pop
pop
nop
adc
pushl
mul
das
adc
or
jnp
sbb
je
aad
adc
adc
lds
fisubs
and
xchg
test
scas
jg
icebp
call
addl
sbb
pop
lods
dec
push
mov
lods
and
sbb
in
insb
repz
mov
xor
fstl
pop
mov
lret
clc
in
insb
repnz
fldl
dec
ds
in
mov
pop
or
push
sub
scas
dec
ljmp
sub
div
or
inc
add
sbb
adc
cmp
jnp
dec
adc
rcl
stc
mov
or
divl
jp
push
andl
aam
js
ljmp
xchg
sbb
sub
test
mov
outsb
add
and
repnz
popa
and
push
pusha
inc
dec
movsb
jb
nop
adc
push
xor
arpl
sub
push
mov
out
xchg
sbb
sbb
push
dec
mov
lods
or
push
sbb
jnp
pop
bound
inc
mov
add
mov
xor
gs
dec
je
dec
faddl
xor
pop
add
adc
push
sbb
icebp
dec
sbb
lcall
add
sahf
les
sub
cmp
popa
in
call
sbb
mov
scas
popf
sti
dec
jae
mov
cmp
loop
sub
mov
movsl
inc
outsl
aaa
push
jle
mov
jmp
mov
sub
dec
push
cmc
lar
aaa
nop
loop
add
dec
jb
xlat
cmp
xlat
cmp
into
mov
les
sarl
xchg
sbb
cltd
in
mov
orb
fsubrl
pop
jb
jne
pop
cmpsl
mov
jne
call
push
lock
loope
mov
repnz
pop
dec
xchg
push
scas
nop
fldenv
mov
in
fwait
test
pop
scas
mov
cmpsb
fmulp
cmpsb
pushf
xor
fsts
jg
or
add
add
adc
call
ljmp
dec
or
lods
and
scas
mov
cmpsl
or
bound
jns
and
icebp
ss
push
and
shr
xchg
mov
jp
shl
cltd
mov
mov
mov
push
jb
fs
incl
in
lret
decb
test
cmp
fdivrl
mov
ficompl
mov
jge
cmc
lea
pop
xor
aas
fstps
inc
jmp
jne
test
cmp
enter
jl
jbe
bound
cld
adc
mov
cmp
enter
pop
or
cmc
movsl
es
cs
jns
mov
subl
mov
push
pushf
adc
sbb
sbb
inc
and
pop
add
mov
adc
adc
push
mov
es
lret
lahf
into
xor
mov
fsubrp
push
mov
test
inc
mov
mov
cmc
mov
sbb
mov
lret
or
scas
add
aaa
aad
mov
enter
ljmp
insl
push
mov
mov
mov
cmp
shll
fcmovne
out
add
sbb
cmpsb
out
addr16
pop
int3
mov
aad
les
inc
mov
cmc
sbb
or
xlat
push
add
jne
xor
mov
and
jmp
fidivrl
aas
mov
or
dec
fadds
or
aaa
dec
adc
dec
pushf
gs
dec
daa
in
pop
sahf
jo
pop
cmpsb
pop
pop
mov
pop
dec
imul
filds
cmp
test
daa
or
sbb
ret
in
mov
repz
xor
pop
pop
pop
and
dec
test
mov
inc
cld
mov
lcall
add
pop
mov
and
sbb
mov
and
jge
fldl
lea
mov
xchg
ficomps
cmpb
or
repnz
push
xor
mov
pop
out
roll
sbb
jne
cmpsl
xlat
shl
cli
mov
sahf
mov
sbb
push
hlt
cmp
imul
mov
mov
xchg
cli
xlat
adc
cltd
mov
lcall
icebp
repz
jp
testl
in
or
sti
ds
mov
shll
jae
dec
and
call
in
jle
inc
lahf
xor
cmp
clc
ja
js
out
mov
mov
cmova
mov
and
popa
jne
pop
xchg
test
jmp
insb
mov
popa
cltd
nop
and
testl
insb
xor
mov
jne
jp
mov
mov
movsb
adc
inc
lds
iret
jae
or
cmc
ss
imul
in
cmp
rcr
loopne
mov
lds
cmc
sbb
shlb
xchg
outsb
loopne
repz
mov
dec
ds
mov
sbb
std
andl
imul
daa
js
pop
ficomps
mov
mov
enter
movsl
cmp
jmp
xor
mov
sahf
jmp
xchg
out
adc
int3
dec
xchg
jecxz
movsb
dec
dec
mov
push
insb
dec
movsl
push
adc
mov
ja
jmp
push
cmc
pop
jmp
iret
stos
iret
sbb
xor
fimull
aam
xchg
arpl
xchg
clc
pop
aas
inc
pushf
and
nop
scas
or
inc
pop
in
popa
idivb
mov
xchg
push
mov
sbb
pusha
adc
pop
adc
fistps
shr
scas
cmp
sbb
pop
and
in
shlb
cmp
mov
xchg
adc
cwtl
pop
test
jbe
pop
loopne
stos
push
data16
push
lods
xor
sbb
addl
orl
adc
fidivs
in
test
and
or
sub
shll
insb
das
fimull
inc
cmp
mov
loopne
les
jle
arpl
adc
sarb
cmp
icebp
in
mov
pusha
lods
xchg
or
push
scas
cli
sub
xchg
mov
aaa
jecxz
into
sbb
xor
jnp
jne
push
data16
loope
mov
jecxz
mov
and
loope
sbb
add
cmpb
sub
mov
sbb
inc
or
repnz
adc
jle
adc
xchg
push
dec
gs
test
cltd
push
pop
dec
out
mov
cmpsb
in
inc
inc
jge
gs
cmpsl
dec
jno
stos
dec
dec
in
lcall
imul
imul
sbbb
jb
repnz
and
mov
lods
pop
mov
aad
ret
ret
lret
pop
inc
fwait
loop
popa
inc
lods
fistpl
fistps
gs
pop
test
out
sub
jno
test
adc
add
scas
jbe
jno
cmp
sub
mov
sbbl
xchg
xor
mov
or
add
xlat
or
loop
push
adc
mov
adc
fistps
sub
cli
insl
int
shl
insb
loopne
xlat
clc
pop
xchg
or
or
sub
stc
ja
dec
ds
insb
fisubs
sbb
jmp
ret
or
push
ret
arpl
pop
test
jl
ficoml
icebp
out
into
popf
imull
jne
in
ss
inc
icebp
mov
or
int3
pop
inc
push
cltd
xor
jnp
mov
es
push
add
mov
xchg
fs
dec
add
js
cmp
movsb
test
jns
cmpsl
jle
push
mov
inc
cmp
ja
xchg
shrl
inc
mov
out
shll
jb
add
dec
xorb
fimuls
push
pop
jecxz
in
ds
adc
lds
fildl
fcoms
imul
sub
in
inc
outsl
and
ds
mov
fldl
and
xor
pop
pop
push
xor
in
arpl
shlb
icebp
or
inc
or
stos
popf
mov
xor
sub
lods
xor
xchg
int
in
adc
push
mov
add
sbb
sbb
aas
xor
mov
popa
and
test
cli
push
jnp
pop
out
aad
je
fiaddl
and
pop
movsl
pop
icebp
test
jp
in
jnp
push
sub
fistpl
test
ja
sbb
imul
jle
call
test
sbb
add
mov
xor
or
sbb
jo
adcb
je
cltd
in
mov
clc
or
or
in
jmp
shlb
pushf
loope
sbb
les
mov
in
les
lods
adc
inc
jo
fmull
add
gs
insl
jb
jmp
int3
push
cmc
in
test
sbb
enter
sub
sbb
loop
sub
jae
daa
jb
mov
mov
jl
mov
dec
dec
outsb
add
sbb
sub
mov
mull
mov
int3
testb
call
lahf
aas
clc
add
xor
pop
push
cmc
jge
lds
push
and
mov
test
aas
xor
cmp
inc
int3
sub
cmp
dec
fdivl
mov
mov
mov
mov
outsb
xchg
add
cmp
test
shll
out
popf
sub
imul
shl
ljmp
ret
pop
add
and
push
iret
mov
mov
jge
psubw
cmpsl
mov
xchg
gs
and
pop
dec
sbb
sub
sbb
dec
sbb
sbb
dec
insb
mov
cs
lods
popa
es
fwait
mov
pop
push
insb
jge
out
loop
les
dec
cmpsl
or
dec
enter
popf
cld
dec
popf
data16
cmpsl
addr16
insb
jl
stos
adc
test
xor
outsb
add
test
roll
xchg
fstps
ss
xor
fdivs
sub
sbb
xor
lret
xchg
cmp
call
aaa
inc
mov
outsl
fadds
mov
and
cmp
out
fcmovb
cmovns
sbb
mov
cmpsb
int
stos
stc
adc
adc
and
in
subb
xchg
ja
roll
outsb
fwait
outsl
dec
loopne
cmp
inc
cltd
ljmp
call
dec
pop
add
insb
or
popa
repnz
sbb
ja
dec
cmpsb
and
mov
add
rclb
mov
int3
ret
push
push
mov
xor
shrl
cld
cmp
stc
dec
mov
or
mov
adc
and
std
xchg
sub
xchg
in
mov
push
mov
xchg
clc
pop
mov
ljmp
and
jne
or
jecxz
jns
push
adc
mov
dec
dec
pop
add
aad
pop
lahf
jbe
roll
cmp
push
jp
or
pusha
xchg
adc
cmpsb
ficoml
xor
pop
push
repz
testl
stos
inc
je
push
cli
fiaddl
in
mov
pop
jg
mov
insl
jmp
sub
fstpt
cmp
add
inc
cld
jne
fistpl
js
cmp
aaa
jmp
ss
clc
out
push
mov
lcall
in
xchg
ds
iret
ljmp
cmp
push
cmc
out
outsl
fidivrs
ja
sbb
pop
and
sub
out
fucom
push
jl
imul
pushf
pop
mov
cmp
out
cli
fadds
push
cld
jno
xor
xchg
std
jmp
lods
cmp
dec
pop
loop
sub
dec
test
fwait
add
subl
sbb
jp
inc
adc
cli
mov
mov
in
mov
fiadds
and
xchg
mov
push
mov
fbstp
inc
or
push
lahf
loopne
popf
fsubl
jbe
divb
mov
add
push
popf
bound
clc
cld
lock
push
daa
pushf
xor
test
cs
mov
in
sub
push
sbb
lea
mov
sbb
pop
adc
movsb
sub
mov
xor
imul
jbe
stos
cmp
and
jbe
sub
dec
xchg
dec
dec
mov
mov
rorl
sub
stos
movsb
pop
mov
add
pushl
shlb
scas
jecxz
gs
into
mov
scas
out
jb
mov
cwtd
pop
or
xchg
xchg
int
cmp
in
repnz
mov
xor
dec
idivl
sti
inc
lret
cmpsl
xchg
je
mov
push
stos
xlat
jl
inc
push
test
and
fldenv
xor
adc
aas
adc
pop
mov
inc
xchg
mov
test
mov
and
rcll
es
xchg
fisttpl
and
orl
sub
loop
mov
inc
xor
scas
scas
imul
cmp
mov
mov
mov
mov
stc
lea
mov
jmp
mov
xor
je
outsb
rcrl
data16
or
mov
adc
sbbb
arpl
adc
nop
jns
xchg
cli
adc
inc
lea
pushf
xchg
insb
dec
adc
inc
jge
push
ret
icebp
sbb
cmpsb
outsl
sub
ljmp
sub
sbb
jnp
dec
pop
or
inc
mov
test
in
testb
push
jge
inc
pop
xor
bound
xchg
out
cmp
movsl
rcrb
mov
test
je
and
and
loope
add
mov
lds
inc
into
negl
cmp
push
sub
cmp
mov
lcall
pop
idivb
cmp
enter
inc
and
jle
push
int3
iret
in
pop
stos
lea
popf
lods
out
cmp
int3
mov
das
jae
push
xorb
cmp
jmp
xor
mov
stos
fsubrp
in
call
and
dec
adc
es
aaa
test
jge
add
add
lahf
fsub
mov
repnz
xor
pop
mov
sub
cmp
pop
pop
sub
pop
xchg
mov
cmp
test
negl
xchg
jg
hlt
sub
test
ret
pop
push
lcall
loop
adc
loop
jns
jle
mov
cli
js
dec
mov
or
and
dec
push
mov
push
pop
outsl
sbb
fiadds
mull
xor
mov
inc
fs
cmp
insb
sbbb
cwtl
jne
dec
ljmp
cmpsl
ficompl
push
pop
int
jge
and
mov
push
fisttpl
sarl
popf
clc
aaa
jns
inc
sub
mov
in
orl
outsl
pop
addb
lods
push
mov
push
cmpsb
add
mov
mov
insb
pop
or
add
push
or
sbb
ret
pop
sub
push
push
shll
sub
test
and
mov
test
pop
push
inc
roll
cmpsb
and
mov
jge
jne
ret
aad
mov
mov
xchg
arpl
rorl
cmp
je
int3
ss
lds
adc
sbb
pop
rcll
push
gs
ljmp
jl
scas
sahf
xchg
cmpsb
inc
jae
adc
push
mov
xor
lea
dec
push
push
push
pop
rorl
sub
mov
sbb
call
add
loope
inc
sub
lcall
push
xchg
imul
int
xchg
movsb
out
cmpsl
mov
cld
xchg
movsb
loopne
fnsave
fdivrs
xor
adc
lret
lock
imul
iret
cwtl
sbb
lods
shrw
mov
xchg
sbb
add
sub
xchg
adc
stos
rolb
add
andb
pop
mov
addb
or
push
and
cwtl
fisubl
in
pop
insl
mov
lods
rcr
call
in
test
inc
xor
jmp
mov
ja
imul
in
and
cmp
mov
aad
mov
push
fwait
and
mov
inc
negl
pop
gs
ficoml
fisubrl
cmp
enter
jmp
loope
jmp
sub
jmp
jge
jp
cmpsb
dec
lcall
dec
outsb
fs
xchg
xchg
mov
sub
mov
lret
ss
push
dec
add
es
mov
pop
jecxz
mov
cs
fstps
mov
stc
mov
popa
sbb
push
mov
mov
and
stc
cmpsl
mov
mov
inc
inc
xrelease
dec
popf
jmp
mov
ret
mov
aam
and
mov
fcmove
adc
es
rcrl
aam
rcrl
adc
gs
sti
rcrl
sub
jge
xchg
iret
rolb
mov
jle
imul
sub
push
cmpl
outsl
imul
jmp
imul
test
div
dec
pop
or
add
and
filds
push
shr
xor
mov
jb
out
mov
add
xchg
addb
push
xchg
mov
inc
add
inc
js
fidivl
xchg
pop
fbstp
cmp
xor
push
adc
cli
adc
push
or
and
jo
or
clc
scas
addl
lcall
movsb
lret
sbb
pop
lret
rcr
sbb
jge
sub
or
test
aam
sub
lahf
es
mov
cwtl
sbb
je
jecxz
je
gs
scas
and
insb
cmp
mov
dec
xor
add
mov
jmp
les
rclb
cmp
ret
sbb
lret
std
imul
mov
jne
mov
fdivrl
jmp
cmpsb
mov
cmpsl
clc
dec
cmc
pop
mov
mov
jne
inc
stos
pop
dec
loop
mov
or
int3
mov
addr16
pop
add
sub
or
hlt
add
cmpsl
aaa
dec
int3
mov
inc
mov
out
adc
push
dec
fldcw
lods
push
lret
arpl
sarl
xchg
inc
xchg
dec
rclb
loop
aam
xchg
aas
aas
cmp
cmc
hlt
push
xor
popa
lahf
pop
xor
xchg
add
out
mov
push
mov
cmp
mov
movsl
pop
push
fildl
jl
mov
nop
adc
adc
xlat
pop
in
cmp
pop
dec
push
imul
ds
xor
scas
mov
mov
mov
sbbl
rol
shlb
insl
xor
adc
out
xor
pmulhw
mov
jle
or
xchg
loopne
ret
push
out
imul
jmp
clc
adc
sub
pop
cmp
sub
xor
push
js
adc
fwait
loop
sarb
mov
imull
push
dec
movsl
mov
sti
into
and
push
das
or
xchg
sahf
cvttps2pi
push
out
sbb
pop
sub
stc
int3
or
sbb
jg
inc
leave
xor
xor
pop
lods
mov
mov
pop
mov
push
sub
lods
pop
sub
movb
pop
adc
sub
mov
jnp
mov
sbb
aam
mov
fs
insb
dec
out
test
mov
mov
lcall
bound
ljmp
in
dec
xorb
mov
mov
ror
loope
arpl
and
mov
sub
cmp
test
les
mov
push
int3
sbb
push
scas
shrb
mov
add
mov
jl
scas
test
stos
adc
mov
push
xchg
fisttps
inc
int
arpl
xchg
lea
outsb
jle
enter
jbe
xlat
ret
jbe
cpuid
adc
adc
orb
aad
out
mov
pop
xor
roll
test
pop
sti
dec
repz
in
xor
and
outsb
stos
xchg
popf
mov
les
pusha
xchg
pop
cmp
pop
lahf
mov
dec
imul
or
lahf
call
iret
inc
orl
push
mov
testb
aas
je
adc
mov
es
add
and
dec
push
test
addr16
mov
or
or
inc
and
pop
movsb
sub
mov
push
out
scas
add
pushf
xchg
stos
rcrb
or
sbb
fiaddl
std
push
lret
and
dec
cwtl
leave
bound
sub
inc
or
daa
mov
psubw
xchg
sub
xchg
add
insb
sbb
push
pop
gs
cmp
aaa
imulb
cmp
push
ja
ret
mov
jmp
cwtl
add
in
in
stc
push
lret
jne
xchg
add
adc
notb
fldenv
scas
mov
cmc
nop
jg
add
add
lods
sbb
repnz
leave
cmp
shlb
pop
pop
cmc
sbb
pop
pushf
jecxz
adc
mov
mov
mov
push
fadds
lret
in
mov
insl
mov
test
stos
fisttps
es
filds
sbb
xchg
xchg
push
int
sahf
addr16
fimuls
pop
mov
subl
les
dec
jb
xlat
xlat
push
lods
lahf
inc
jns
pop
pop
shr
cmp
pop
test
inc
cmpsb
jne
and
lods
mov
out
xor
mov
mov
in
out
inc
outsb
push
sti
sub
cli
pop
stos
push
inc
test
pop
dec
mov
mov
xor
ss
sub
enter
imul
lea
cmp
pusha
aas
push
adc
and
push
mov
mov
ljmp
add
cld
cmpsl
lock
fdivr
fwait
pop
fmulp
out
faddl
stc
std
xlat
mov
dec
add
into
icebp
xor
gs
push
aaa
std
insl
mov
pop
jnp
mov
jnp
inc
arpl
call
std
imul
cli
lds
ret
cmp
adc
inc
and
loopne
mov
pop
push
adc
lods
adc
rcll
add
jb
push
xchg
mov
mov
daa
xor
mov
es
mov
sarl
std
in
repz
in
xor
push
and
dec
xchg
cmp
cmc
pop
add
mov
xor
fdivrs
mov
cmpsb
lock
mov
out
add
sbb
sbb
add
cmp
cmpsl
jbe
dec
mov
xorl
mov
shrl
push
mov
pop
mov
adc
hlt
dec
scas
or
insb
mov
xor
pop
fcmovbe
mov
add
xchg
mov
ljmp
mov
jle
imul
lds
cmp
lds
jbe
jmp
push
pop
pop
es
mov
mov
adc
mov
sbb
sbbb
dec
sbb
rcrb
sbb
imulb
cmp
dec
add
push
mov
sub
adc
push
fiaddl
or
fcmove
jno
pop
cmpsl
mov
or
inc
aam
dec
inc
bound
inc
icebp
outsb
dec
jg
push
adc
fcomps
imul
stos
test
cmovle
cs
jle
pop
jno
xchg
dec
imul
test
add
fidivrs
aam
jle
addl
dec
ficomps
mov
cmpsb
jg
loopne
and
lcall
sbb
adc
rclb
jo
sbb
into
mov
incl
decl
bound
lods
jge
sub
in
xor
scas
popf
es
mov
clc
jge
sbb
xor
inc
sbb
mov
jge
pop
push
cmp
popa
cmp
icebp
xchg
addr16
fiadds
inc
inc
pop
jbe
js
sarb
push
adc
mov
mov
rorl
inc
dec
aam
pop
fnstsw
xchg
mov
out
cmp
mov
testl
xor
and
pop
nop
into
mov
xlat
lds
in
fsub
sti
inc
int
fistpl
ss
xor
ret
scas
sti
dec
and
xchg
xchg
xorb
adc
add
add
in
icebp
fbld
mov
lret
sub
movsb
adc
out
push
xlat
inc
jns
mov
das
in
ret
xchg
movl
mov
repnz
mov
subb
or
ret
addr16
pop
ja
xchg
stos
and
popf
shll
clc
pop
shrb
xor
jo
aas
mov
xchg
adc
pop
subl
insl
xchg
sub
push
enter
dec
jnp
hlt
and
add
pop
aad
testb
shlb
mov
mov
dec
pop
sub
out
jae
xchg
pop
mov
rcrl
cs
sbb
mov
add
push
ljmp
jae
push
lods
xchg
in
int
add
jge
xor
sub
push
sbb
das
mov
inc
dec
outsb
fwait
jle
fisubs
sub
mov
stos
cmpsb
sbb
test
adc
sar
lcall
and
xchg
das
inc
mov
aad
adc
push
xor
sub
arpl
xorb
add
subl
imul
cmp
sub
mov
lods
fs
fiadds
pop
and
fcmovnu
pop
and
xor
mov
fbstp
or
das
adc
push
es
adcb
movsb
sarb
ljmp
pop
insl
sub
daa
fcmove
jmp
mov
cs
cmp
mov
loope
test
xchg
decb
cli
pop
add
bnd
cmpsl
and
jle
inc
add
test
fwait
nopl
xchg
mov
dec
les
outsb
xlat
add
or
cmp
adc
push
test
out
inc
sbb
push
testl
cmp
and
sub
push
mov
cmp
cld
lret
ret
sbb
cmp
movsl
mov
std
jnp
lahf
mov
or
push
out
mov
adc
jno
or
mov
fbld
inc
push
push
jl
aam
mov
flds
xchg
aas
inc
push
adcb
add
enter
adc
scas
jnp
clc
push
es
stc
call
pop
je
xor
dec
fnstsw
sub
mov
faddp
das
lock
in
cmp
out
sarb
push
divl
leave
arpl
jl
and
jg
mov
out
lahf
fs
push
xchg
out
gs
jmp
xchg
movb
add
mov
mov
daa
xchg
pop
mov
leave
cld
fsubrl
rcrb
cmc
je
xchg
add
sti
jb
pop
imul
sbb
cmp
cltd
mov
lahf
shlb
pushf
imul
jo
fucomip
pop
xor
out
lods
cmc
lahf
push
dec
aam
shll
mov
mov
test
and
cld
push
aam
leave
test
or
adc
cmp
mov
adc
mov
aam
xor
out
dec
cld
dec
pop
in
inc
and
shr
push
mov
or
mov
sbb
sahf
inc
addr16
push
in
xchg
ret
adc
sbb
jb
aad
ss
mov
out
gs
lcall
lret
in
fs
je
push
mov
iret
jb
dec
and
or
and
add
leave
adc
popa
test
jnp
inc
popa
adc
jnp
sti
inc
jae
mov
push
icebp
xor
jae
mull
outsl
test
mov
cld
mov
dec
jo
push
stc
mov
test
stos
call
test
xchg
imul
mov
iret
push
lret
je
ss
mov
mov
stc
dec
mov
js
test
cmp
hlt
daa
push
xor
pop
loopne
push
mov
clc
mov
out
das
fnsave
sbb
cmpsl
xor
push
xor
xchg
fisubs
scas
fimull
lret
jl
jmp
orl
mov
aaa
lods
mov
cmp
aam
mov
scas
into
shlw
js
outsb
cmp
negl
lea
jecxz
jo
adc
xor
xor
or
sub
jo
stos
mov
cmp
ret
add
mov
xorb
sub
cli
sbb
out
add
stc
sbb
es
aaa
sbb
and
or
cmp
inc
pop
stc
arpl
lods
xor
push
adc
pop
int
sti
cld
fmuls
in
movsb
loop
xor
aas
sbbl
daa
dec
outsl
or
jecxz
ds
fucom
adc
loop
in
mov
jns
out
mov
pushf
ss
jmp
mov
stc
push
jge
in
dec
mov
lds
cmp
sarb
xchg
lcall
mov
cwtl
lock
adc
inc
test
rcrb
out
in
dec
dec
adc
dec
xorl
sbb
out
cmp
and
cmp
clc
sub
inc
scas
les
fistl
cld
mov
bound
inc
cmp
mov
repz
jmp
fnstcw
mov
lock
mov
nop
imulb
test
sbb
sahf
xor
mov
movsl
js
xchg
sub
pop
add
jno
fwait
add
mov
xorl
out
and
push
fstpl
mov
lfence
test
inc
cmp
cmp
pop
cld
xlat
aas
mov
adc
mov
cmp
xchg
leave
add
mov
not
jno
test
jp
xchg
cmp
arpl
sub
nop
and
push
mov
out
jne
mov
lahf
pop
popa
rorb
mull
cs
and
loope
push
roll
sti
or
rclb
xor
mov
xchg
loope
inc
sub
dec
sub
scas
sbb
sbbl
xchg
divl
jne
cmc
inc
jne
in
fs
jg
sub
imul
dec
adc
mov
sbb
addb
lds
lcall
mov
and
jmp
sub
dec
xorb
sub
ficomps
push
sbb
or
rorb
addb
pusha
in
outsl
cmp
or
les
adc
fisttpll
in
inc
pop
pusha
pop
inc
sti
roll
push
and
int
mov
pop
xor
jno
lret
adc
add
jmp
xor
inc
xchg
dec
sub
test
test
repz
sub
cs
sbb
lock
jle
sub
or
fwait
enter
fdivrs
imul
out
iret
dec
fiadds
push
cmc
popf
add
mov
cli
dec
loope
fisttpl
lret
jae,pt
divb
add
inc
mov
stos
xchg
xchg
fcomps
pop
sbbb
add
jle
mov
sub
xchg
js
cmp
cs
daa
sub
jb
notb
rcll
out
insb
leave
jne
sub
xor
ret
pop
es
and
mov
sar
cmpsb
jecxz
inc
xchg
aad
rcl
lods
test
mov
lcall
negb
cmpsl
xchg
scas
fisubrl
bound
and
cs
out
ss
rorl
mov
fdivs
repnz
xor
sahf
dec
push
repz
lcall
sar
xchg
mov
ds
lret
stos
ss
push
jmp
je
int3
mov
repz
icebp
sbb
sub
sbb
cwtl
dec
adc
aas
pop
dec
add
cmp
push
push
xchg
daa
es
jae
into
aas
push
sbbl
xor
mov
mov
je
push
dec
imul
mov
into
mov
or
pop
xor
sahf
add
or
mov
imul
cmc
clc
jnp
fistpl
and
popa
push
fwait
dec
faddl
pop
movsb
stos
lods
test
stos
shr
test
jnp
xor
aad
outsl
adc
mov
imul
sub
xchg
sub
or
out
sub
mov
mov
mov
dec
push
inc
int3
daa
pop
xlat
push
jmp
loope
aaa
ljmp
pusha
mov
lret
mov
hlt
stos
popf
fcmovnu
mov
lcall
fistpll
and
jge
inc
xchg
sub
dec
repnz
push
push
data16
mov
xor
lcall
adc
pop
and
imul
aad
push
inc
mov
jg
jb
jns
lcall
fs
push
xchg
leave
fstp
mov
loop
add
xchg
leave
adc
insl
sub
and
popl
dec
mov
xchg
mov
xchg
push
jb
jns
hlt
jp
scas
mov
dec
adc
mov
jns
xor
add
ret
in
inc
test
xchg
fisubrs
les
mov
in
mov
enter
and
int
mull
sbb
lret
cmpsl
scas
lahf
xchg
shr
ja
insb
in
and
sbb
add
jo
mov
xlat
out
aaa
xchg
pushf
shrb
js
jns
lea
inc
popf
bound
dec
xchg
rclb
imul
leave
mov
or
dec
orl
adc
add
fldl
notb
inc
mov
sbb
addr16
push
imul
mov
pop
inc
daa
cmp
mul
xor
sahf
and
jle
mov
or
int3
fstp
jl
cmp
push
cmpb
dec
imul
cld
pop
sahf
lds
movsl
or
add
mov
mov
push
and
add
aad
in
in
mov
les
inc
mov
imul
es
std
dec
pop
ficompl
out
decb
rolb
cmp
inc
clc
push
gs
and
in
aaa
daa
and
mov
mov
sub
add
adc
nop
sbb
insb
sbb
sub
sub
xor
xor
test
leave
jmp
test
enter
pop
cld
jmp
xorb
nop
cmpsl
mov
cltd
es
hlt
push
add
stc
push
mov
in
jb
jno
fnstenv
scas
add
lods
adc
popf
add
rcrl
sub
xor
in
int3
or
xor
sub
stos
shll
bound
clc
xchg
xchg
xor
inc
sub
mov
mov
mov
adc
sbb
je
rcrl
js
fsubrp
into
pop
mov
rorb
in
or
fldcw
cmpsl
cld
aam
mov
jg
adcl
xchg
adc
enter
mov
mov
ret
aam
inc
vpminub
lock
sub
int3
fs
stos
dec
out
icebp
movsl
lahf
in
cmp
dec
pop
and
loopne
jns
stc
inc
adc
cwtl
jbe
jo
xlat
lock
ret
inc
jecxz
pop
or
movsb
test
sbb
fldcw
xlat
sub
dec
mov
in
fwait
push
out
cmp
push
jg
fildll
ja
sub
dec
jmp
loope
xchg
push
lods
xor
pusha
shrl
arpl
or
mov
sbb
jns
sub
cmpsl
daa
ja
popa
mov
push
nop
arpl
sub
cltd
aad
dec
bound
test
add
inc
ret
roll
lods
cmp
lds
das
and
pop
orb
sbb
ret
iret
jnp
int
adc
and
enter
out
add
in
mov
ret
jmpw
or
xchg
xlat
and
push
xchg
out
fnsave
sti
shl
jge
jo
inc
and
data16
cmp
fcmove
or
fnstenv
int3
push
cmpsl
stc
cmc
sbb
dec
neg
and
sbb
mov
mov
in
lahf
add
sti
lods
push
inc
xorb
inc
sub
ljmp
mov
push
jg
aaa
ljmp
xchg
sbb
andl
jne
addr16
mov
out
fisubl
mov
daa
inc
mov
adc
mov
loop
and
mov
xchg
decb
add
jge
mov
add
mov
mov
cmpsb
jno
movsb
mov
aaa
cltd
movsl
mov
jae
lahf
ljmp
or
and
or
dec
stos
enter
xor
negb
insl
xorl
lds
cmc
popa
dec
dec
xchg
xlat
xchg
cmp
xchg
inc
mov
imulb
xchg
push
jle
mov
add
push
lcall
adc
lods
movsb
adc
add
iret
pop
pushf
ss
cmp
sbbb
mov
sbbl
lds
call
scas
stos
outsb
je
shll
pop
jo
fld
scas
sar
xchg
fadds
mov
rorl
cwtl
ds
xor
movsb
insl
xchg
xor
mov
les
ljmp
clc
inc
insb
xorb
sahf
movsl
and
dec
div
fistl
aaa
loope
push
xchg
pop
mov
push
and
hlt
ja
repz
sub
mov
xchg
in
pop
sbb
fdivrl
dec
fisubrs
inc
div
mov
push
push
icebp
jb
sub
sahf
iret
push
sbb
xchg
mov
pop
mov
xor
bound
test
into
test
xacquire
or
jmp
lret
in
and
jle
mov
sbb
test
into
xchg
cs
shr
mov
bound
dec
xchg
inc
sub
pop
test
dec
or
ss
lret
cwtl
mov
or
inc
push
daa
sbb
pusha
ret
fnsave
fsts
mov
cld
mov
testl
in
adc
sbbl
sub
xchg
out
cmpsl
cmp
rol
cs
movb
shl
in
outsb
jbe
mov
xor
xor
cmpsl
push
push
nop
das
mov
adc
push
movsb
icebp
loopne
aaa
andb
lahf
pop
jae
jle
pop
pop
mov
cmp
inc
dec
or
mov
xchg
pop
xchg
rcrl
mov
mov
xchg
and
xor
pop
adcb
jnp
mov
xor
mov
cmp
lock
lcall
in
arpl
mov
cs
test
mov
jno
push
sbb
push
dec
xor
jecxz
sub
sub
push
pop
or
push
pop
sbb
shrb
sbb
add
lret
add
mov
xor
sub
inc
mov
mov
mov
dec
xchg
or
jnp
jmp
ret
xor
cli
mov
mov
jae
dec
in
lods
xchg
xor
popf
shlb
out
fstl
mov
pop
xchg
test
add
inc
mov
jl
xchg
lahf
mov
mov
mov
inc
sbb
aaa
outsb
clc
xlat
dec
fcmovu
add
mov
pop
cmp
loop
imul
shlb
cmp
mov
mov
ficoms
push
in
out
jns
sbb
out
cmp
sti
jmp
in
std
or
shr
xchg
fisttps
loopne
shrb
insw
sahf
lods
sbb
jmp
outsb
jle
dec
jb
mov
outsl
add
arpl
je
xchg
pop
loope
mov
imul
xor
insb
shr
test
cmp
fsubrl
insl
pop
jecxz
decl
lock
xchg
mov
aas
dec
subl
shrb
pop
movb
xchg
mov
jl
xchg
adc
jns
jge
cmp
incl
nop
add
pop
and
test
repnz
sbb
mov
mov
loop
js
mov
mov
jne
xchg
test
mov
push
sbb
or
sbb
adc
test
dec
push
lea
mov
js
mov
lods
inc
frstor
jg
mov
rcr
xchg
repz
lods
push
pop
mov
jecxz
icebp
jg
jg
push
sub
hlt
or
pop
mov
fidivs
inc
xor
cmove
dec
fidivs
cmp
xlat
cmc
cli
adc
cli
push
adc
rorl
or
loope
sbb
mov
cmp
mov
test
inc
mov
loopne
mov
push
add
mov
mov
cmpsl
sbb
mov
or
shrl
xlat
dec
mov
push
add
sahf
jo
movsl
jbe
das
das
pop
repnz
push
and
push
in
dec
aaa
xchg
jg
pop
ret
out
ret
hlt
scas
cmp
pushf
les
cmp
jb
push
or
add
incl
jae
fnstsw
fstl
nop
dec
enter
sbb
jb
xor
lret
loop
cmp
mov
mov
scas
stos
xchg
add
and
push
mov
adc
inc
mov
mov
std
lea
push
lcall
push
sub
dec
mov
test
test
jl
std
or
inc
push
mov
pop
dec
pop
fildl
jo
bound
sub
ss
jne
into
adcl
sub
pusha
inc
push
inc
insl
bound
test
sbb
in
cmp
push
fcomi
mov
call
pop
xchg
popa
scas
ds
loop
inc
or
test
scas
fs
add
aad
and
xor
add
dec
xchg
or
sub
sub
outsb
aas
cmp
mov
xor
mov
cwtl
jae
nop
divb
push
aam
mov
inc
sbb
adc
icebp
shrl
or
sub
pushf
mov
adc
pop
sbb
ds
mov
jae
inc
sub
test
cmp
mov
stos
iret
xchg
call
jnp
push
jns
shl
rdpmc
inc
sub
and
cs
jp
loop
imul
addr16
test
and
int
in
sub
sub
xchg
and
arpl
pop
cmp
andl
sti
xchg
mov
leave
outsb
cmp
loope
adc
mov
rorl
ret
jg
lock
call
icebp
inc
dec
xor
inc
xor
mov
inc
cmp
or
add
and
pushf
rcl
mov
mov
and
inc
loop,pn
int
es
mov
pop
call
shr
mov
and
popf
test
ret
cmp
loopne
jns
mov
adc
or
loop
popl
dec
mov
push
cmp
pop
cwtl
adc
fsubl
scas
mov
mov
cltd
mov
rcll
loopne
mov
cmp
adc
push
jmp
and
xchg
mov
cltd
scas
and
lret
in
movl
sbb
fstl
insb
push
setl
pushf
insb
lea
outsl
push
xor
cmp
shlb
pushf
xchg
aad
in
jns
xchg
mov
iret
pop
mov
enter
jnp
in
jge
out
push
sahf
fdivrl
imul
xor
ljmp
add
jmp
fs
or
or
jo
icebp
sub
arpl
adc
lcall
push
cmp
icebp
adc
jo
lock
sbb
mov
xor
push
mov
mov
std
arpl
push
jne
fldcw
inc
mov
sub
pop
out
pop
bound
rcrl
mov
popa
and
sub
cmc
gs
push
pop
mov
cmp
scas
insb
jmp
clc
mov
sub
push
dec
bound
adc
dec
jne
or
aaa
fcomip
out
jecxz
ret
cmc
imul
jle
jne
adc
in
hlt
dec
push
pop
mov
cmp
sbb
movsl
mov
std
scas
aas
in
add
addr16
pop
cmp
lcall
movl
adc
adc
and
xor
sub
fdivrs
fnstenv
mov
add
mov
out
add
adc
dec
cwtl
in
mov
sbb
jmp
sbb
hlt
sub
xchg
mov
addr16
xchg
ss
imul
insl
sarl
dec
xchg
add
sub
dec
mov
cmp
fcomi
sub
inc
mov
mov
add
xchg
jno
mov
dec
add
dec
popl
cmp
gs
mov
lret
xchg
in
xchg
out
dec
lds
rclb
mov
jl
cli
pop
push
jns
adc
bound
enter
xor
sbb
sbb
popw
mov
out
mov
or
push
call
test
jle
ret
xchg
mov
sarb
loope
push
jg
enter
ds
lcall
in
jnp
jge
pop
jp
lods
jae
loopne
test
or
mov
pop
mov
push
sbb
sbb
sahf
aad
mov
push
call
mulb
stc
xor
test
sub
aad
push
pop
lock
inc
jbe
stos
lret
inc
mov
fs
jns
sub
popa
vmovaps
mov
and
or
ds
inc
jbe
xor
js
mov
movsl
xor
jmp
lods
sbb
xchg
add
and
or
pop
scas
sub
mov
mov
or
shlb
jp
pushf
add
lret
mov
sbb
jb
mov
xor
pop
push
movsb
jle
or
inc
or
xchg
idiv
mov
mov
jnp
mov
mov
xchg
dec
mov
mov
pop
fwait
xchg
fwait
mov
das
fstl
jmp
mov
int3
out
push
sbb
cld
mov
adc
jb
lds
dec
je
pop
clc
xor
lock
stc
stos
mov
ret
sub
clc
std
cmp
mov
inc
repz
or
or
out
dec
movsl
push
xor
or
ret
pusha
insb
mov
dec
mov
jnp
mov
inc
sahf
cltd
mov
fdivp
gs
dec
xchg
fcomps
imul
repnz
into
push
aad
push
inc
push
roll
mov
inc
out
mov
xchg
cmpsl
stc
add
xor
pop
sbb
mov
mov
dec
repnz
push
jae
imul
lret
jnp
xchg
icebp
fmuls
imul
mov
repnz
leave
scas
add
sbb
jmp
pop
icebp
xor
fwait
addl
dec
cltd
hlt
into
adc
je
in
jg
test
stos
cwtl
xchg
jmp
imul
cmp
insb
sub
call
mov
inc
sbb
adc
insl
in
repz
test
add
add
bound
shl
add
mov
mov
hlt
and
repnz
add
pusha
dec
in
andb
daa
sub
xor
mov
adc
or
pop
mov
out
cmp
sbb
movsb
mov
ficoml
insb
sbb
adc
enter
mov
inc
xchg
inc
filds
cltd
push
insb
adc
xchg
cwtl
add
imul
test
mov
cld
jg
popa
sub
arpl
fstl
lods
or
mov
sub
cld
sbb
xchg
cmpsl
cmp
adc
sbb
movsl
cmpsb
push
sbb
sub
dec
mov
push
pop
xchg
int3
daa
aaa
je
cmc
pusha
mulb
aam
xlat
mov
xchg
addl
mov
xor
inc
or
cmp
push
shrb
jmp
and
addr16
rcrb
or
jne
notl
and
mov
add
cmp
fsts
pop
dec
xchg
mov
pop
or
pop
and
jl
subb
dec
sbb
scas
imul
mov
test
stc
ret
sti
cltd
das
stos
lcall
jp
mov
add
cld
cmp
js
shr
fidivrl
or
add
lods
push
sbb
sub
xchg
and
inc
jno
dec
inc
sar
jnp
add
popa
cmpsb
ja
and
je
popa
das
dec
hlt
jb
lock
mov
test
jp
push
call
addl
xorb
std
out
dec
dec
sub
fnstcw
pop
cli
js
sbb
loope
pop
call
pop
inc
or
std
xchg
sub
mov
shl
scas
outsl
insl
scas
xlat
push
bound
jno
mov
pop
inc
imull
das
ror
cltd
add
adc
scas
xor
inc
jmp
and
xlat
or
add
push
push
push
mov
icebp
mov
lret
in
adc
xorl
test
stos
jmp
cmp
subl
xchg
cmp
mov
mul
insb
push
pop
testb
sahf
xor
mov
add
pop
mov
lods
shl
out
not
xor
lret
mov
rsm
aaa
push
cmp
sub
xchg
lahf
das
mov
adc
push
mov
out
movhps
ljmp
jne
js
push
fwait
cmp
xchg
jmp
clc
add
out
push
shlb
mov
xchg
dec
pop
mov
clc
or
hlt
imul
push
stos
cmp
pop
mov
scas
sahf
and
jmp
out
arpl
scas
rcll
addr16
shrl
imul
mov
push
cmp
sahf
ficompl
lods
icebp
outsb
shrb
das
rorl
test
dec
xchg
lds
ret
mov
adc
loopne
sti
je
pop
inc
jl
push
dec
push
cmp
adc
stos
mov
out
mov
sbb
fdivrs
loopne
xor
xchg
daa
push
je
scas
adc
dec
or
pop
outsb
addr16
push
add
shl
add
aas
mov
shll
mov
lds
adc
jno
inc
imul
sub
cmp
inc
xchg
pop
cmpsl
add
or
mov
sbb
cs
int3
xor
sub
imul
and
sahf
jmp
push
cltd
lahf
add
pop
xor
pop
imul
pushfw
aaa
push
repz
lret
sarl
mov
lea
xlat
shrl
add
andl
or
lahf
xor
dec
adc
add
add
emms
ljmp
push
jl
rcr
jnp
adc
pop
out
push
cmp
xchg
jp
call
and
xchg
cmp
test
mov
mov
bound
stos
scas
jl
daa
loopne
shlb
je
aad
daa
sub
lods
inc
js
sbb
dec
jecxz
pop
mov
jnp
jg
aas
cmp
mov
pop
sub
sahf
xor
stc
outsl
add
daa
out
add
mov
mov
sub
or
lahf
scas
in
sti
mov
or
enter
ljmp
push
cltd
or
pop
inc
std
push
hlt
push
jno
xchg
push
mov
mov
int
jns
mov
je
or
xchg
aas
xchg
orb
cmp
mov
stc
or
enter
int
daa
sbb
iret
sub
mov
jnp
ljmp
cmp
loop
rorl
ss
mov
cmp
sbb
js
jb
mov
mov
cmpsl
iret
mov
mov
rorb
inc
fistpll
mov
ljmp
out
dec
add
insb
popf
popf
sbb
cmp
mov
mov
or
xor
testl
lock
or
fdivrl
in
xchg
push
fs
out
dec
dec
push
push
cwtl
xchg
add
outsb
sbb
out
scas
mov
scas
inc
fwait
call
mov
mov
push
or
xor
mov
xchg
cmpsb
int3
fidivrs
or
ja
mov
fnsave
push
or
dec
and
inc
dec
xchg
lods
pop
ja
mov
out
dec
adc
pushw
xlat
ljmp
mov
jno
pop
dec
xor
ret
das
setns
jp
mov
call
flds
xor
fcomps
jge
pop
leave
dec
mov
pop
jne
cmp
cmpsb
idivl
scas
mov
insb
jle
call
out
nop
stos
jno
aad
mov
mov
into
bound
das
loope
out
add
das
push
fisttps
aad
stc
xchg
mov
bound
aaa
out
or
rclb
bound
mov
cmp
insb
fmulp
or
push
cmp
lret
jge
stos
fsubp
popf
sbbl
xchg
adc
testl
repnz
jle
mov
pushf
xchg
xlat
andb
push
daa
mov
add
jb
call
pushf
dec
mov
addr16
ret
adcl
jle
mov
pop
push
push
and
loop
push
inc
out
push
test
sar
jp
xchg
nop
stos
mov
je
adc
call
iret
daa
inc
ljmp
dec
pusha
adc
xor
fadd
jb
std
es
xchg
or
test
popa
dec
cmp
or
xor
dec
or
push
lahf
add
sub
pop
ljmp
and
fiaddl
cld
sub
jae
orb
sbb
inc
insb
inc
out
in
shlb
xor
mov
fcompl
xlat
cmc
push
imul
js
sub
mov
loop
popf
nop
jl
ret
xor
sbb
cmc
xchg
mov
fcmovu
xchg
test
push
push
cmp
in
push
ss
out
dec
or
testl
jb
xchg
cmp
cmp
imul
into
dec
ffree
and
add
rcrb
mov
mov
loope
sub
add
cmp
jbe
fstpt
sahf
test
mov
cmp
sub
xor
gs
jb
jge
jp
pusha
rcrb
add
test
mov
add
sbb
shll
mov
cltd
frstor
jns
sbb
sub
les
jmp
pop
cmp
xchg
rorl
roll
sub
shl
push
mov
pop
or
rol
loopne
mov
jo
pusha
mov
sub
xor
test
out
lret
mov
cwtl
sti
test
push
add
hlt
cwtl
lock
and
jg
test
jno
pop
out
data16
aaa
ljmp
cmp
pop
mov
xchg
xchg
sub
and
jno
js
repz
out
adc
fstpl
mov
fmul
mov
jb
sbbl
or
pop
xchg
xchg
cmp
filds
or
popf
out
pop
mov
std
lea
push
cmpsl
pop
jno
addr16
js
mov
scas
pop
inc
notl
lds
add
leave
or
pop
ret
push
dec
cld
push
loop
hlt
jmp
mov
dec
or
mov
xor
add
mull
gs
jl
cltd
enter
sbb
cmp
jmp
cmpsb
pop
cmpsl
out
mov
add
rcll
pop
shlb
mov
mov
outsl
dec
and
and
fwait
lock
faddl
mov
iret
mov
push
aad
mov
add
in
or
leave
xchg
xor
xor
inc
mov
mov
jg
in
mov
add
nop
and
jno
xchg
mov
lret
cmp
adc
mov
sar
andl
mov
mov
pop
sub
lods
hlt
loopne
das
pop
mov
cmp
test
add
enter
jno
jb
cmp
add
gs
add
cmp
or
mov
mov
mov
pop
xchg
outsl
sub
mov
rolb
loopne
lock
in
mov
sti
cs
lcall
mov
aad
std
mov
mov
cmc
mov
mov
out
mov
mulb
jb
adc
std
xor
mov
dec
pop
sahf
shrl
or
movsl
push
sbb
mov
out
mov
fs
pop
jecxz
mov
mov
das
mov
xchg
jp
push
insl
ret
and
popf
icebp
push
cltd
push
xor
int
fisubl
jae
mov
cmpsb
not
sub
int
imul
addb
pushf
pop
and
das
nop
sub
cmp
or
xor
popa
fisttps
mov
or
lea
xchg
push
fsubrl
pop
xor
cmp
lods
in
stos
dec
xchg
daa
sbb
out
jle,pt
sahf
or
xchg
add
jb
pop
add
adc
mov
xchg
imul
sbb
je
fbld
push
inc
dec
lret
dec
or
aad
cmpsb
mov
sub
stc
pop
adc
lret
xor
cld
lcall
fisttps
xlat
pop
out
cmp
mov
fcomi
cltd
lcall
or
inc
mov
jno
mov
inc
lret
fisubrl
mov
or
mov
mov
sbbb
sbb
in
loopne
and
ror
xor
sub
mov
mov
scas
fistps
ss
adc
jo
pushf
mov
fs
loopne
push
mov
lds
fiaddl
loopne
fdivp
push
sahf
sbb
fnsave
inc
data16
pop
mov
nop
aam
xor
bound
jae
xchg
int3
jl
adc
outsl
dec
cwtl
stos
xor
inc
rclb
xor
ja
fistpll
push
xor
sbb
std
mov
push
xchg
rclb
add
movsb
into
inc
jl
and
jnp
stc
dec
add
ljmp
dec
fdivr
vcvtss2si
inc
das
mov
icebp
xchg
fdivl
test
and
pushf
lahf
add
mov
dec
stc
pop
xchg
xchg
cmp
movsb
outsl
and
mov
adc
cmp
loope
push
movsl
xor
sarl
dec
pop
xor
ss
lock
jecxz
rcrl
dec
repz
cmp
lcall
mov
pop
and
aas
or
stc
lds
push
addb
add
adc
popa
shlb
pop
rcrb
ret
lea
push
xor
sub
mov
cmp
aaa
mov
repz
lahf
push
xchg
lea
cs
adc
pop
cmpsb
or
mov
push
xchg
aam
inc
mov
pop
ds
inc
adc
or
mov
ret
sbb
xor
mov
ss
mov
push
jecxz
mov
andl
data16
aad
xchg
jp
add
and
in
dec
mov
mov
pcmpgtd
inc
shl
add
fidivl
or
ds
cmp
test
sub
dec
mov
and
pusha
addr16
cmpsl
xorb
fisttps
mov
sti
mov
hlt
add
sbbl
imul
and
inc
mov
je
sahf
rcll
dec
push
int
scas
in
or
xlat
clc
mov
test
push
or
lock
push
insb
imul
and
dec
shr
or
cli
clc
icebp
scas
dec
in
jmp
mov
nop
xchg
jl
out
fistpl
mov
cmp
divl
nop
mov
or
mov
stc
mov
pop
std
add
jg
nop
jae
enter
lcall
add
rolb
or
mov
stos
test
test
scas
enter
dec
mov
jo
or
data16
jne
xchg
sahf
in
jb
mov
fadd
stos
ret
xchg
adc
cmp
test
jmp
pop
and
stc
insb
push
cmpsb
mov
push
adc
adc
pushf
xlat
jnp
xchg
or
add
dec
mov
pop
in
ret
iret
mov
push
cmp
negb
xchg
xor
sbb
push
data16
push
fistl
xchg
subb
jns
pop
pop
push
jo
adc
and
fbstp
out
and
test
and
jle
ds
shlb
stos
mov
dec
imul
dec
pop
ds
pop
pop
pushf
adc
add
mov
aaa
jns
push
push
pop
ss
int3
xorb
stc
loopne
pop
sub
xor
or
add
stc
cmp
pop
stos
mov
in
mov
sbb
insb
shr
sarl
push
fidivl
xchg
out
cltd
sar
jg
mov
das
ljmp
scas
fnstsw
data16
pmullw
adc
xor
add
repz
loopne
jne
xor
inc
leave
cmp
movsl
test
cmp
test
lret
pusha
mov
icebp
sub
cmp
cmc
addr16
and
in
jp
dec
into
jecxz
cmp
adc
fdivl
iret
add
cwtl
push
jne
aam
inc
int
loop
stc
sarl
cld
push
jl
cmp
cmp
imull
outsl
mov
push
adcb
jns
or
inc
inc
in
adc
or
inc
mov
push
sbb
and
enter
jno
sub
cmpsb
cs
xchg
mov
push
jne
or
pop
cwtl
jge
pop
not
aas
popa
sbb
pop
mov
cmp
ficoml
xor
shr
jge
cmp
mov
aas
jne
mov
inc
scas
and
mov
or
adc
pop
dec
xlat
push
sbb
cmpsw
xchg
jge
repz
mov
cmp
test
mov
ds
mov
aad
int
jns
popf
lret
and
insl
js
and
fwait
mov
bswap
mov
mov
dec
add
sbb
pop
jb
jno
and
out
enter
inc
and
mov
test
xlat
cld
xor
inc
and
stos
lods
dec
mov
inc
pop
fstpl
adc
mov
pop
add
or
fs
hlt
jnp
sbb
and
notl
sub
adc
cmp
fidivs
sar
clc
stc
xor
sbb
fcoml
mov
mov
aas
lahf
aad
push
sbb
jmp
lods
jge
pop
dec
negb
add
in
sbb
push
jb
enter
enter
cmp
fimuls
xor
enter
lret
add
push
adc
jmp
sub
out
cmp
aaa
or
loope
movsb
mov
aad
enter
mov
adc
inc
pop
es
pop
daa
sbb
and
notb
sti
dec
xchg
lret
push
lock
lret
mov
push
xchg
dec
sbb
fnsave
fdivs
stc
dec
sub
pop
aaa
fdiv
push
std
sbb
in
xchg
std
addr16
xor
iret
cmp
and
mov
imul
mov
arpl
daa
stos
pop
loope
or
popa
sbb
mov
cli
aad
fs
insb
std
loop
jne,pt
xchg
push
xchg
mov
insb
push
add
add
xchg
inc
jno
sub
bound
movsb
test
sti
mov
mov
call
nop
cmc
jno
cmp
and
sub
jg
lods
ficoml
inc
arpl
je
fs
pop
mov
clc
sbb
popa
test
fistpll
inc
popa
into
mov
push
popl
outsb
jno
in
jae
aas
adc
add
push
cmp
dec
mov
movsl
in
sahf
fbstp
jecxz
push
subl
imul
sti
loop
cs
xlat
jecxz
les
lods
out
aas
lret
inc
or
movsl
inc
fistpl
inc
in
das
sbb
cmc
gs
jbe
xor
cmovl
mov
mov
icebp
cmc
adc
jns
and
out
mov
shlb
popl
sub
mov
icebp
mov
js
out
inc
pop
int
cmp
mov
not
jb
je
add
mov
cmc
pop
fs
and
int3
enter
pop
cmp
mov
and
dec
pop
adc
cmp
jmp
add
lds
add
sahf
mov
cmp
mov
loopne
jo
mov
dec
push
clc
lcall
stos
or
stos
pop
pop
fistpl
pop
or
lods
fisubrl
test
adc
loop
repz
clc
jae
ficoml
out
imul
data16
lds
hlt
cmp
and
xor
scas
add
das
pop
add
leave
push
xor
pop
jle
rcll
push
jmp
xchg
mov
cmp
inc
mov
and
int3
jne
or
inc
popf
in
sub
iret
inc
dec
out
rcrb
mov
sbb
add
xchg
mov
movsb
sbb
xorb
jmp
or
mov
mov
ljmp
pop
jecxz
inc
lods
xchg
es
sub
mov
xchg
test
push
add
inc
clc
push
dec
mov
popf
push
fwait
mov
fwait
rcrb
sub
mov
rol
inc
fmul
inc
ja
jp
xchg
dec
dec
fwait
sub
adc
add
add
outsl
add
and
inc
add
jo
jb
add
jae
and
push
add
je
jne
jo
xchg
push
add
imul
je
popa
add
add
outsb
add
and
dec
add
je
insb
add
outsl
add
and
inc
add
jo
jb
add
jae
and
ja
imul
and
popa
add
add
and
jne
outsb
add
outsb
add
je
popa
add
add
add
add
and
dec
add
arpl
jb
outsl
add
outsl
add
je
and
dec
add
je
insb
add
outsl
add
and
dec
add
ja
jae
jb
add
add
jb
add
add
add
jb
add
add
outsl
add
and
jae
jne
jb
add
add
outsl
add
and
ja
popa
add
je
and
je
outsl
add
add
outsb
add
outsb
add
je
popa
add
add
add
jne
je
insb
add
outsl
add
and
inc
add
jo
jb
add
jae
aas
add
dec
add
je
insb
add
outsl
add
and
inc
add
jo
jb
add
jae
and
arpl
popa
add
and
outsl
add
insb
add
and
bound
add
add
outsb
add
je
popa
add
add
add
add
outsb
add
add
outsl
add
jo
jne
je
add
jae
and
jb
jne
outsb
add
imul
and
push
add
outsb
add
add
jae
and
cmp
xor
add
and
push
add
outsb
add
add
jae
and
dec
add
add
add
add
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
add
add
jne
je
insb
add
outsl
add
and
inc
add
jo
jb
add
jae
and
push
add
add
add
outsb
add
add
add
outsl
add
add
add
jne
arpl
arpl
add
jae
data16
insb
add
add
add
add
add
jae
and
ja
imul
and
jb
add
outsl
add
add
add
jne
je
insb
add
outsl
add
and
inc
add
jo
jb
add
jae
add
add
add
add
add
outsl
add
and
ja
imul
and
je
outsl
add
add
outsl
add
je
imul
add
add
add
jne
je
insb
add
outsl
add
and
inc
add
jo
jb
add
jae
and
dec
add
imul
popa
add
add
popa
add
add
outsb
add
add
popa
add
insb
add
jb
add
add
add
bound
outsl
add
je
imul
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
add
add
add
add
jo
popa
add
imul
add
add
add
add
add
bound
outsl
add
je
imul
add
add
add
jo
popa
add
imul
add
add
add
jae
and
insl
add
jae
jae
imul
and
popa
add
add
add
add
add
add
js
jo
outsl
add
je
add
add
add
add
bound
outsl
add
je
imul
add
add
add
add
jae
jae
and
inc
add
outsl
add
and
push
add
je
jne
jo
cmp
push
add
imul
ja
imul
and
jb
add
outsl
add
add
add
add
and
inc
add
add
add
jae
and
inc
add
outsl
add
add
add
add
add
add
outsl
add
and
ja
imul
and
je
outsl
add
add
outsl
add
je
imul
add
add
add
push
add
je
jne
jo
and
ja
popa
add
and
outsb
add
je
and
add
je
imul
insb
add
and
jae
jne
arpl
arpl
add
jae
data16
insb
add
add
add
je
jne
jb
add
add
jo
add
popa
add
add
and
outsl
add
and
jne
outsb
add
outsb
add
je
popa
add
add
and
insl
add
jns
and
bound
add
add
jb
outsl
add
insb
add
insl
add
je
imul
add
or
push
add
jb
jbe
imul
jae
pop
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
push
add
popa
add
add
add
je
popa
add
add
outsb
add
jb
jns
pop
add
add
add
add
jns
jae
je
add
pop
add
add
push
add
add
popa
add
insb
add
add
add
jb
outsl
add
add
outsl
add
add
push
add
add
add
jae
and
push
add
outsl
add
add
outsl
add
add
popa
add
add
and
imul
add
jae
jns
and
je
outsl
add
add
add
add
add
sub
add
insb
add
add
outsb
add
add
outsb
add
add
outsb
add
je
and
outsb
add
ja
jae
add
outsl
add
jo
jae
add
add
insb
add
outsl
add
add
jb
outsl
add
imul
jae
and
popa
add
arpl
add
jae
and
je
outsl
add
add
add
and
push
add
outsb
add
add
jae
and
inc
add
add
add
jae
and
inc
add
outsl
add
and
popa
add
add
add
add
add
je
outsl
add
jns
and
jae
add
jbe
imul
jae
add
add
outsb
add
je
popa
add
add
add
add
jne
imul
jae
and
popa
add
add
add
jae
je
and
dec
add
je
add
outsb
add
je
and
inc
add
jo
insb
add
jb
add
and
xor
add
and
ja
outsl
add
imul
add
outsl
add
jb
add
je
insb
add
add
add
add
data16
add
outsl
add
and
arpl
outsl
add
je
imul
add
and
jae
add
add
and
insl
add
jns
and
outsb
add
je
and
bound
add
add
bound
insb
add
and
je
outsl
add
add
add
je
outsl
add
add
add
add
and
jo
jb
add
imul
jae
and
jbe
add
jae
imul
and
outsl
add
and
je
push
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
add
add
outsl
add
and
ja
popa
add
je
and
je
outsl
add
add
outsl
add
je
imul
add
add
add
add
add
add
add
outsb
add
push
add
je
insb
add
outsl
add
and
inc
add
jo
jb
add
jae
or
dec
add
jne
outsb
add
push
add
imul
dec
add
je
insb
add
outsl
add
and
inc
add
jo
jb
add
jae
and
dec
add
ja
jae
or
add
add
outsb
add
je
and
dec
add
ja
jae
or
add
add
outsb
add
je
and
dec
add
imul
inc
add
add
add
jae
and
inc
add
outsl
add
adc
dec
add
je
add
outsb
add
je
and
inc
add
jo
insb
add
jb
add
add
push
add
popa
add
insb
add
add
add
imul
add
je
push
add
popa
add
insb
add
add
imul
popa
add
add
add
add
add
jae
and
push
add
add
popa
add
add
add
pop
add
jne
and
insl
add
jae
je
and
push
add
and
popa
add
add
outsb
add
jae
je
jb
popa
add
add
and
jo
jb
imul
insb
add
add
jae
and
je
outsl
add
add
outsb
add
outsb
add
je
popa
add
add
add
add
jae
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
push
add
add
add
outsb
add
outsb
add
je
popa
add
add
add
popa
add
and
outsb
add
je
and
arpl
outsl
add
jo
insb
add
je
add
add
add
jne
arpl
arpl
add
jae
data16
insb
add
add
pop
add
jne
and
insl
add
jae
je
and
jb
add
je
popa
add
je
and
jns
outsl
add
jb
and
arpl
outsl
add
jo
jne
je
add
and
data16
jb
and
je
push
add
outsb
add
outsb
add
je
popa
add
add
add
add
add
outsl
add
jo
insb
add
je
add
add
add
add
add
add
outsl
add
and
ja
popa
add
je
and
je
outsl
add
add
add
je
popa
add
je
and
jns
outsl
add
jb
and
arpl
outsl
add
jo
jne
je
add
and
outsb
add
ja
aas
add
add
add
bound
insb
add
and
je
outsl
add
add
insb
add
add
popa
add
add
add
add
outsl
add
jns
add
add
add
bound
outsl
add
je
imul
add
add
add
push
add
imul
je
popa
add
add
outsb
add
and
dec
add
je
insb
add
outsl
add
and
inc
add
jo
jb
add
jae
and
add
add
popa
add
and
jo
jb
add
add
je
and
dec
add
je
insb
add
outsl
add
and
data16
outsl
add
and
data16
outsb
add
je
imul
imul
add
add
add
add
add
outsl
add
and
ja
imul
and
je
outsl
add
add
outsl
add
je
imul
add
add
add
push
add
imul
je
popa
add
add
outsb
add
and
dec
add
je
insb
add
outsl
add
and
inc
add
jo
jb
add
jae
and
add
add
popa
add
and
jo
jb
add
add
je
and
dec
add
arpl
jb
outsl
add
outsl
add
je
and
push
add
outsl
add
add
add
jb
outsl
add
and
data16
outsb
add
je
imul
imul
add
add
add
add
add
outsl
add
and
ja
imul
and
je
outsl
add
add
outsl
add
je
imul
add
add
add
add
add
jae
jb
popa
je
add
push
insb
jae
gs
popa
insb
jne
add
push
gs
jne
jb
outsb
je
imul
jns
add
inc
gs
imul
add
jb
jo
inc
add
test
add
sbb
insb
gs
jne
insb
imul
je
add
dec
insb
gs
jb
popa
je
dec
imul
insb
gs
js
add
gs
jb
popa
je
dec
imul
insb
add
dec
insb
gs
jb
popa
je
dec
imul
gs
insb
jne
push
bound
jb
add
inc
outsl
dec
outsb
imul
push
arpl
imul
outsb
imul
add
inc
outsl
inc
gs
jb
popa
je
jae
insb
popa
jae
add
inc
outsl
inc
gs
je
outsb
fs
jb
dec
popa
jb
push
dec
insb
gs
gs
jne
outsl
inc
outsl
outsb
jbe
jb
add
dec
insb
gs
outsl
arpl
jne
outsb
imul
outsl
jo
je
dec
popa
insl
gs
outsl
inc
insl
je
add
push
gs
gs
jae
push
je
dec
gs
push
gs
jb
push
outsl
push
gs
data16
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
inc
jb
popa
je
inc
jne
add
inc
outsl
inc
gs
insb
popa
jae
dec
bound
arpl
inc
outsl
inc
gs
outsb
jae
popa
outsb
arpl
jb
insl
inc
imul
gs
outsb
jae
popa
outsb
arpl
jb
insl
dec
push
je
jb
add
inc
outsl
inc
gs
outsb
je
jb
popa
arpl
outsb
fs
gs
gs
jae
push
je
gs
insl
add
inc
outsl
inc
gs
popa
insb
insb
outsl
arpl
add
inc
gs
bound
arpl
popl
add
je
add
add
outsl
ja
ja
gs
outsl
jo
jo
add
push
gs
outsl
arpl
add
dec
outsl
popa
fs
jne
jae
jb
jb
insl
inc
imul
popa
fs
arpl
insb
gs
je
jb
inc
add
inc
gs
gs
popa
addr16
add
inc
outsb
fs
popa
imul
popa
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
inc
gs
jb
jns
popa
jb
je
add
gs
dec
outsb
jne
add
gs
je
dec
inc
dec
push
imul
add
gs
je
inc
arpl
insb
gs
je
jb
popa
bound
add
inc
push
jo
jb
add
inc
push
js
inc
add
inc
push
dec
outsb
jne
add
add
add
push
inc
add
dec
add
dec
loopne
push
and
add
add
adc
add
add
add
adc
add
adc
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
jo
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
add
add
add
rorb
add
add
add
je
js
add
add
and
add
adc
add
and
add
add
add
add
pusha
cs
je
add
add
pusha
add
add
add
add
add
add
add
gs
je
add
add
add
add
add
add
add
add
jb,pn
popa
je
add
add
or
add
add
add
add
add
jb
jb
add
add
and
add
rorb
add
adc
add
addb
add
add
add
loopne
add
add
loop
add
push
adc
scas
inc
bound
and
and
sub
pop
or
pop
repz
test
cmp
and
out
stc
ficomps
sti
sbb
loope
popf
push
cmpsb
lcall
pop
pop
mov
mov
int3
repnz
mov
movsl
xchg
mov
jl
xor
test
or
dec
repz
int3
mov
and
in
enter
dec
jbe
jo
out
inc
mov
push
dec
cmp
or
jmp
jecxz
sbbb
les
pop
and
lods
loopne
js
fdivrs
jmp
push
out
jns
in
negb
mov
test
pop
jo
repz
pop
shll
fwait
mov
cmp
insb
ficomps
lods
pop
out
ret
rorl
daa
mov
cmc
pop
adc
adc
pop
mov
pop
push
stos
mov
dec
aam
xor
je
sbb
icebp
jnp
fnstsw
xchg
cmc
lcall
ret
repz
mov
pop
in
jnp
cld
pushf
les
iret
icebp
mov
mov
arpl
sub
xor
pop
dec
outsl
ret
xor
flds
out
mov
imul
push
mov
aad
ret
lods
inc
or
pop
addb
fsub
mov
icebp
inc
imul
cwtl
push
data16
cmpsb
push
dec
lret
jmp
inc
pushf
enter
andps
and
imul
out
jg
in
and
inc
sub
and
inc
sti
jae
stos
outsb
sbb
daa
sub
push
dec
adc
loopne
loope
cmpsl
inc
scas
sbb
or
movsb
mov
or
add
mov
adc
repnz
xchg
testb
lds
lds
adc
dec
pop
jp
testl
aas
in
inc
mov
push
aaa
lahf
mov
outsb
jns
mov
jb
movsb
xchg
std
inc
in
ret
arpl
in
cmp
pop
push
inc
test
xchg
push
dec
call
in
shrb
or
sub
inc
push
mov
pop
scas
mov
stos
sarl
leave
xor
jmp
shll
mov
pop
into
xchg
popa
push
stc
xlat
mov
imul
aaa
pop
in
push
orb
mul
cli
pop
shl
xor
mov
pcmpgtb
loopne
mov
mov
xchg
dec
sbb
repz
pusha
out
mov
push
into
arpl
mov
into
scas
dec
push
imulb
imul
cmpsb
mov
and
jecxz
inc
fs
xchg
jno
es
les
int
add
fwait
pop
aam
xlat
pusha
mov
test
mov
add
sar
leave
clc
in
int
xchg
push
adc
jle
sub
push
pusha
lcall
iret
adcl
add
inc
in
jne
jge
addb
js
aad
sbb
mov
insb
mov
pop
add
jp
xor
fcoml
sub
insl
repz
mov
dec
add
push
xor
mov
cmp
sbb
inc
push
les
adc
outsb
lret
lock
notl
pushf
fdivrs
pop
inc
pusha
clc
loopne
cmp
sahf
adc
push
push
push
xchg
cmpsl
jg
es
movsb
imul
movb
add
rcr
xor
pop
rolb
ljmp
mov
cmpsb
notb
popf
adc
pop
imul
add
and
fmuls
lea
lods
adc
aaa
in
xchg
js
mov
cli
dec
ret
and
or
sub
sti
pop
js
mov
jns
cld
leave
inc
hlt
jnp
jl
add
or
pop
subb
push
ja
xchg
inc
mov
mov
sbb
pop
or
xchg
mov
pop
cmpsl
mov
adc
and
in
dec
mov
fimull
pop
inc
rcrl
lcall
inc
dec
loope
pop
int3
xor
pop
cmp
adc
aaa
mov
int
add
in
cwtl
dec
sbb
jns
gs
icebp
cltd
hlt
push
jl
sub
push
adc
push
jns
mov
inc
orl
out
daa
lea
mulb
subl
push
fldl
mov
fisubrs
xor
ficoml
xchg
es
pop
dec
mov
adc
cmc
nop
push
popf
sbb
rorb
stc
xchg
les
push
scas
xor
mov
lret
inc
jp
ljmp
loopne
mov
into
mov
adc
cltd
scas
push
lock
jecxz
push
adc
sub
cmp
ds
adc
fmull
push
cmpsb
int3
push
data16
jo
or
push
and
in
xor
out
mov
cltd
and
nop
jae
mov
pop
cmp
push
fidivrl
pop
rclb
std
cmpsb
push
cmp
int
adc
xor
or
pop
adc
lcall
jmp
xor
adc
sbb
loop
gs
test
push
stc
je
andl
cmp
xor
iret
add
jp
out
inc
stos
hlt
mov
adcb
dec
jmp
xor
gs
fiaddl
cmp
sub
les
jnp
mov
inc
outsl
add
out
pop
jl
dec
dec
clc
push
inc
sub
aad
pop
testb
jmp
test
xchg
clc
andps
add
notb
sub
daa
mov
mov
jmp
pop
pop
out
push
cld
stos
lret
dec
mov
cmpsb
cli
adc
or
mov
inc
movsb
mov
das
dec
out
jge
mov
out
shrb
add
loope
sbb
loopne
loope
test
jne
cmpsb
xchg
test
xlat
adc
mov
and
iret
fwait
push
or
aas
aad
cmpsl
inc
mov
orl
mov
pop
cmc
add
cmp
xchg
xchg
mov
push
or
ror
mov
arpl
push
mov
xchg
adc
lahf
sahf
fs
cltd
imul
sub
icebp
and
in
leave
out
data16
nop
out
adc
cmp
jb
pushf
push
lea
imul
pop
mov
repz
jns
adc
mov
in
push
fidivrs
lcall
mov
enter
aad
cwtl
test
subb
cmp
fnstsw
fistpl
scas
cwtl
or
cmpsb
lock
sub
and
xor
mov
push
dec
pop
mov
mov
push
call
jge
jge
sti
mov
dec
fistpll
out
shll
sar
push
add
or
ja
inc
push
push
inc
lock
lods
loop
dec
imul
adc
popf
in
push
cld
jmp
sti
scas
inc
inc
test
stos
xorl
js
adc
ss
scas
outsl
xchg
ret
add
or
test
pop
lcall
xor
jge
nop
fsts
in
mov
jg
aad
je
mov
int
sti
add
and
cmp
fst
sahf
jg
fmulp
lods
les
pop
cltd
aad
inc
push
or
adc
xor
mov
div
pop
in
dec
rcr
stos
add
js
mov
mov
and
bound
inc
jmp
jge
ja
xor
int
push
inc
jmp
push
jnp
xor
or
or
rclb
lahf
out
add
sub
pop
or
cld
sub
dec
fiaddl
notb
xchg
push
push
jne
inc
jp
adc
xor
and
adc
imul
sub
scas
aaa
xor
dec
sbb
loope
push
mov
cmpsl
inc
xchg
iret
sbb
out
jne
push
mov
jge,pt
dec
jne
stos
push
jo
mov
lods
lods
pop
jbe
mov
or
mov
inc
scas
inc
lahf
xchg
into
mov
lods
dec
test
inc
imul
cli
and
inc
out
lcall
stc
jge
and
cmp
xor
imul
icebp
dec
ret
scas
xchg
push
rcl
es
pushf
pusha
xor
xlat
mov
mov
das
les
cmpsb
lock
ja
mov
cmp
adc
push
je
insb
push
insl
jb
jne
pop
aas
popa
insl
mov
cli
in
imul
and
movsl
std
insl
stos
mull
cmc
shr
adc
adc
push
mov
inc
in
cmp
pop
notb
shlb
mov
dec
mov
pop
cmp
adc
pop
test
mov
lods
push
shl
rolb
and
sbb
sahf
shll
xchg
shrl
pop
lods
xor
int3
dec
test
fisttpll
rcrb
jne
and
subb
fwait
clc
adc
jb
pop
aas
inc
jae
cltd
clc
dec
lret
sbb
into
xchg
xchg
jp
cwtl
movsl
mov
out
mov
and
dec
vmaxsd
mov
mov
mov
adc
scas
mov
mov
or
aas
shll
shlb
lock
xor
iret
mov
cmp
dec
xchg
inc
popf
adc
aas
les
xor
vaddsubpd
rcrl
rol
sub
jp
jno
popa
add
adc
xchg
je
in
sub
insl
xchg
into
ret
sbb
and
fistl
ljmp
in
dec
dec
dec
or
cli
test
mov
into
or
or
xlat
daa
push
rclb
cli
bound
cmpsl
fcompl
leave
out
pop
push
jbe
pop
mov
out
idivb
adc
sub
adc
loop
mov
add
imulb
add
inc
cmp
lds
mov
mov
mov
or
add
lret
pop
xor
popf
jbe
aaa
jnp
movsl
pop
fistpl
push
arpl
jl
or
add
aas
jl
dec
push
jne
mov
and
out
dec
in
adc
rcrl
dec
jp
inc
shr
mov
pushf
xor
popl
push
hlt
mov
mov
cmp
mov
int3
mov
mov
adc
pop
icebp
ret
mov
mov
jge
xchg
mov
lahf
inc
inc
rol
cmp
pop
adc
lock
and
lods
xor
ficomps
bnd
and
xchg
push
rorl
cmpsl
pop
shll
dec
mov
adc
icebp
ret
push
lods
sbbb
ljmp
aas
fs
fsubrl
addb
add
icebp
imul
popa
inc
mov
fs
jno
lar
mov
xchg
aas
inc
sub
mov
lret
int
fcoml
stc
jo
pop
cmpsw
arpl
and
mov
mov
enter
jecxz
sbb
int3
add
divl
sar
in
stos
sbb
xchg
fcoml
enter
cmp
jg
movsl
xchg
movsl
cmp
jnp
adc
push
call
arpl
or
popf
sbb
fs
pop
mov
xchg
push
jne
mov
mov
push
xchg
daa
aas
lock
fucom
nop
cmpl
mov
movsb
push
add
push
filds
mov
adc
push
fnsave
xor
xchg
and
jb
mov
inc
sbb
addr16
lods
addr16
xor
aad
out
or
adc
xor
dec
icebp
xor
divb
dec
addr16
dec
mov
scas
mov
in
cmp
xor
aaa
test
fmull
push
sbb
jecxz
adcl
inc
ljmp
bound
fbstp
imul
std
mov
dec
out
decb
mulb
out
movsb
cmc
loope
enter
aam
pop
fstl
repz
mov
gs
jge
inc
xchg
orl
shrb
sub
cmp
stc
adcb
sub
aas
lds
mov
jo
inc
mov
jns
add
std
stc
sub
xlat
sub
mov
pop
cmp
adc
mov
push
jno
inc
inc
addr16
int
bound
in
xchg
sub
pop
mov
mov
inc
mov
or
shrb
outsb
add
inc
std
jne
shl
movsb
jp
mov
clc
or
xor
pop
aas
jp
test
dec
inc
jg
cmp
xchg
inc
aad
fisubrl
xor
mov
lret
hlt
fmul
rorl
xchg
lods
jb
int3
jge
lret
fildll
loopne
mov
xor
js
mov
shrl
xor
shl
cmc
add
mov
and
dec
sbb
dec
sub
aam
jnp,pn
add
loop
mov
icebp
nop
stc
hlt
lea
inc
xlat
int
fsts
pop
cmpsb
mov
jp
iret
sub
mov
or
push
push
add
push
adc
rep
push
call
nop
pop
scas
insb
xchg
sub
or
rcrl
jnp
bound
jb
or
push
repz
push
dec
push
sbb
cltd
pop
insb
dec
push
mov
jb
inc
pop
add
ret
lret
add
outsb
pop
roll
int
add
sub
xchg
inc
dec
clc
inc
in
cmp
xchg
imul
bound
test
mov
or
daa
adc
push
sub
and
sahf
repz
mov
aaa
repz
mov
adc
sub
dec
sbb
movsl
fidivs
jo
mov
xor
in
cmp
in
or
jl
cmp
pop
jbe
xchg
cmp
mov
dec
push
inc
aaa
pop
xor
dec
mov
xlat
aad
lds
sbb
aas
fimull
add
cmp
dec
sbb
pop
add
enter
into
stos
dec
call
add
pop
dec
mov
adc
aam
mov
push
insl
pop
adc
out
jge
fs
test
repnz
bound
adc
pop
inc
out
cmp
inc
add
adcb
add
inc
xchg
mov
nop
rolb
add
inc
mov
adc
mov
xchg
sub
leave
xor
xor
cmpsl
adc
inc
push
xchg
push
pop
ja
push
push
mov
lcall
popa
pop
outsl
jl
mov
push
xchg
in
xchg
mov
pop
mov
dec
mov
xchg
xchg
imul
push
std
xor
addl
fstpl
sub
popa
dec
jo
fildll
es
jmp
push
pop
rcr
sub
push
mov
inc
inc
fld
arpl
pop
xchg
sub
mov
test
ds
or
xor
xchg
leave
adcb
sub
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
mov
mov
push
add
pop
push
mov
cld
adc
in
cmp
jl
pushf
test
and
mov
cmpsl
mov
pop
ss
out
movsl
sahf
int3
iret
mov
cmpsl
or
cmp
fildll
and
cmp
sbb
pop
inc
push
jle
test
mov
xlat
ja
loopne
cli
sub
sbb
adc
lahf
jb
push
sahf
in
rorb
mov
iret
scas
sbb
mov
xchg
out
xchg
clc
mov
adc
push
fsubl
jno
loopne
push
jl
and
or
pushf
fnstcw
stos
push
push
insb
xor
xor
sub
int3
adc
mov
mov
mov
addr16
ljmp
xchg
sub
stos
sbb
add
adc
inc
dec
dec
push
ds
jne
and
sub
mov
pop
sub
mov
fstps
fnstcw
xlat
fsubrl
xchg
clc
rclb
jecxz
lea
mov
data16
cmp
add
jl
iret
push
gs
mov
insl
pop
sbb
std
stc
aad
fldl2e
insl
or
nop
lret
adc
pusha
stos
adc
out
scas
and
mov
aas
in
les
scas
pop
in
mov
mov
ds
imul
push
out
popf
jae
xchg
ja
popf
push
nop
or
cmc
loop
push
mov
test
cmpsl
dec
inc
jae
fwait
push
and
out
daa
jmp
lock
push
in
loopne
sahf
lock
jae
and
dec
aas
sub
jmp
dec
fmuls
lds
push
notrack
aaa
push
cld
lcall
mov
lret
mov
add
popf
lods
rcl
xchg
std
fnstcw
cli
int
jae
mov
insl
pop
jmp
add
dec
mov
add
sub
scas
sub
int3
hlt
add
insl
jmp
sub
scas
push
mov
aas
or
jmp
test
add
cmp
loope
or
xchg
mov
mov
push
insb
mov
push
stos
xor
dec
scas
cs
add
pop
jo
pop
mov
lahf
cmp
andl
imull
mov
mov
lret
iret
pushl
rcll
push
imul
or
mov
and
inc
sbb
imul
or
sub
pop
pop
adc
add
scas
movsb
cld
fnstenv
dec
in
fwait
cmp
cld
xchg
ljmp
sahf
je
pop
aaa
and
lahf
cwtl
add
mov
xor
dec
jne
iret
push
xor
push
sti
testl
cs
sbb
pop
inc
repz
or
push
pop
ja
dec
mov
pop
rorb
cld
push
xor
sbb
sbb
in
and
or
daa
push
xchg
scas
sub
xchg
xchg
rcrl
push
xchg
ss
or
pushf
test
loope
call
mov
jae
movsb
mov
dec
xor
cmp
jecxz
fcomps
iret
cmp
addr16
push
mov
mov
mov
dec
dec
jo
inc
addr16
pop
or
fcompl
notl
jae
ja
mov
mov
dec
scas
xchg
ret
cmp
sub
loopne
mov
xor
adc
aas
gs
in
das
pop
shll
lahf
ljmp
int3
sub
cmp
out
repz
jnp
idiv
cwtl
outsl
jge
fcomi
xchg
out
pushf
test
mov
aam
incb
nop
xchg
js
mov
shl
insl
sub
out
mov
testb
popa
sbb
pop
or
sbb
mov
cmp
jle
push
pop
push
cmp
and
and
mov
push
jge
movsb
cmpsl
jp
rclb
leave
sbb
xchg
xor
in
push
add
call
mov
mov
fnsave
mov
aas
call
outsb
movsl
xchg
es
xchg
data16
adc
inc
imul
inc
aaa
cli
inc
clc
push
out
in
inc
push
and
xchg
jnp
pop
push
pushf
push
add
lea
cld
js
repnz
hlt
lock
or
xchg
pop
cmp
inc
sahf
ret
mov
xor
push
in
aas
inc
jmp
xorl
enter
into
add
stos
mov
lcall
and
cmc
mov
divl
or
fs
insl
xor
and
cmp
add
mov
in
inc
mov
add
push
mov
lock
cs
xor
jo
mov
pop
fxch
movsb
test
ss
in
cltd
adc
adc
clc
sub
subb
std
inc
lods
xorl
xchg
cmp
out
loopne
lahf
fcomps
jns
loope
outsl
sar
jnp
cmp
inc
jae
sbb
jecxz
xbegin
lahf
call
push
inc
in
mov
stos
jnp
movsb
and
xor
rcr
xor
jae
add
add
add
add
jne
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
