or
mov
test
jmp
or
lea
jmp
mov
push
pop
leave
arpl
xchg
dec
jne
jmp
nop
nop
nop
nop
nop
push
xchg
xor
push
pop
inc
nop
call
xchg
jmp
nop
nop
nop
push
addr16
jmp
or
and
sub
and
mov
mov
push
mov
lea
jmp
push
xchg
push
xchg
pushl
cld
pushl
push
pop
call
leave
jmp
jmp
sub
addr16
push
addr16
push
mov
push
mov
push
push
pop
jmp
sub
mov
add
inc
or
add
sub
mov
andl
nop
push
nop
push
nop
push
mov
push
xchg
push
mov
add
xchg
jmp
or
or
and
mov
add
push
xchg
push
or
mov
xor
sub
xor
and
add
mov
and
add
add
xor
shl
ror
or
sub
dec
test
jne
pop
xor
mov
rol
mov
mov
call
push
cld
shl
and
inc
pop
sub
shl
shr
and
dec
mov
mov
pop
inc
or
dec
shr
inc
mov
add
jmp
push
mov
call
mov
jmp
call
addr16
jmp
nop
push
mov
push
mov
push
addr16
jmp
nop
nop
nop
nop
nop
push
mov
jmp
and
addr16
jmp
push
xchg
jmp
nop
nop
push
xchg
or
and
and
mov
mov
jmp
push
mov
push
mov
push
mov
push
mov
test
jmp
sbb
jne
and
add
pop
jmp
or
add
ret
mov
call
mov
test
jmp
jne
and
sub
sub
add
mov
sub
shl
shl
pop
ret
jmp
cmp
nop
nop
nop
nop
xor
nop
rorl
jmp
sbb
nop
dec
jmp
push
nop
xor
test
jmp
lret
and
shr
mov
pop
ret
jmp
nop
nop
nop
nop
nop
shl
shl
shl
or
or
pop
jmp
ret
jmp
shlb
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
xor
add
mov
inc
mov
mov
and
addr16
jmp
mov
dec
mov
movzbl
jmp
inc
cld
mov
mov
mov
mov
jmp
push
mov
pushl
cld
push
push
pop
pushl
shr
or
sub
shl
push
mov
push
dec
and
pop
add
sub
mov
sub
add
dec
test
jne
pop
pop
call
xor
mov
push
popl
lea
jmp
mov
jge
push
mov
call
mov
jmp
push
xchg
push
xchg
pushl
ror
rol
mov
mov
and
push
add
add
add
add
and
mov
shr
and
sub
and
add
mov
shr
add
dec
test
jne
pop
pop
call
add
and
ror
xor
mov
mov
lea
jmp
or
leave
jmp
movl
cld
shl
add
mov
rol
mov
shr
jmp
in
and
shlb
rolb
mov
xchg
ret
jmp
fstps
nop
nop
nop
nop
nop
shr
and
rol
or
pop
sub
and
mov
pop
call
push
pop
cmpb
xchg
je
cmpb
xchg
jne
sub
mov
jmp
mov
mov
lea
jmp
insl
sub
ficomps
inc
addr16
push
xchg
mov
nop
mov
mov
lea
jmp
cmc
enter
sti
jmp
shr
add
add
in
push
and
mov
push
ror
shl
or
ror
rol
pop
add
inc
dec
test
jne
pop
push
xor
and
xor
pop
call
test
jmp
mov
lret
add
add
push
mov
call
cld
sub
mov
pop
pushl
xor
pop
jmp
mov
xchg
push
and
ror
add
mov
sub
dec
test
jne
pop
pushl
ror
or
dec
or
sub
pop
call
push
mov
push
shl
push
or
mov
push
shl
or
xor
shl
and
pop
or
sub
sub
sub
dec
test
jne
pop
pop
call
test
jmp
sub
add
jmp
test
jmp
jo
test
or
add
data16
cld
test
jmp
jns
imul
arpl
add
nop
nop
push
mov
cmpl
mov
jne
push
xchg
lea
jmp
scas
push
mov
push
addr16
push
xchg
jmp
inc
and
mov
jmp
adc
lahf
nop
nop
nop
pushl
xchg
xor
push
shr
and
and
xor
inc
mov
inc
sub
dec
test
jne
pop
lea
call
neg
jmp
push
sbb
insb
sbb
jmp
scas
inc
jmp
jge
arpl
fsubr
add
ret
jmp
inc
mov
mov
nop
nop
nop
nop
sub
xchg
mov
mov
andl
xchg
push
push
pop
xor
mov
and
mov
jmp
nop
nop
nop
add
add
add
out
mov
or
shl
and
add
add
rep
jmp
sbb
aaa
xchg
push
adc
add
or
and
pop
mov
shr
add
and
add
lea
jmp
sub
add
xchg
jmp
xor
pop
jmp
inc
sub
sub
sub
and
add
pusha
jmp
inc
lret
repz
xor
mov
sub
or
mov
push
xchg
call
mov
add
xchg
mov
movb
xchg
jmp
mov
mov
lea
jmp
xchg
mov
mov
leave
call
mov
push
push
pop
or
push
add
or
add
mov
and
add
mov
xor
xor
mov
add
mov
rol
dec
test
jne
pop
lea
mov
call
test
jmp
mov
leave
mov
test
add
jmp
dec
add
dec
add
pop
or
mov
ror
or
and
add
add
inc
shl
mov
add
addr16
movzwl
jmp
sarb
fildl
jmp
movl
nop
call
addr16
popa
jmp
cmp
mov
and
mov
pusha
jmp
pop
lret
mov
popa
jmp
in
jmp
mov
ret
jmp
nop
nop
nop
nop
nop
je
call
mov
nop
nop
nop
nop
nop
test
jmp
aad
test
add
add
mov
xor
mov
sub
and
sub
add
pop
lea
jmp
out
shlb
call
mov
sub
xor
sub
xor
mov
pop
jmp
and
mov
jmp
mov
push
push
mov
mov
jmp
xlat
inc
inc
sbb
lea
jmp
mov
jmp
sbb
jae
icebp
mov
jmp
jbe
add
lea
jmp
cmp
cmp
add
pushl
sub
inc
pop
jmp
popf
xor
sub
push
pop
shr
jmp
insb
outsl
shl
test
jmp
jmp
ret
or
pop
sub
mov
jle
jmp
xor
shl
xor
mov
shr
mov
mov
cld
mov
mov
mov
add
xchg
mov
xchg
or
shl
xor
mov
sub
inc
xor
mov
or
and
or
rol
shr
mov
rep
jmp
xchg
push
cltd
ja
dec
addr16
lea
jmp
jne
incl
and
jbe
je
jmp
xor
xor
and
mov
mov
movzwl
jmp
and
add
xor
shr
mov
jmp
jl
dec
and
mov
add
sub
or
mov
add
push
pop
movzwl
jmp
je
incl
mov
add
xchg
cmp
addr16
jl
mov
mov
jmp
rcrl
jmp
lock
cmp
mov
jmp
loopne
loopne
add
pushl
ror
inc
add
add
shr
pop
jmp
add
rol
or
or
sub
mov
sub
addr16
mov
mov
mov
xchg
jmp
nop
nop
nop
nop
nop
movb
push
pop
incl
addr16
jmp
and
sub
sub
xor
mov
jmp
jne
shl
add
or
ror
and
add
and
push
pop
add
cld
add
push
pop
add
xchg
inc
xchg
inc
mov
dec
jmp
inc
jbe
xchg
pusha
jmp
data16
fadds
cld
pushl
and
xor
mov
mov
pop
add
xchg
mov
mov
jmp
add
sahf
jne
add
addr16
cmpl
xchg
jne
ror
or
add
sub
mov
xor
dec
mov
mov
mov
inc
pop
add
push
pop
jmp
push
in
icebp
loopne
lret
sub
xor
mov
mov
add
xchg
cltd
jmp
or
mov
movsl
and
xchg
add
addr16
sar
jmp
mov
mov
add
add
loop
shr
adcb
les
mov
jmp
incl
mov
xor
xchg
inc
nop
mov
and
mov
jmp
and
ror
mov
pop
push
popl
or
and
xor
mov
pop
leave
jmp
ret
jmp
mov
lea
nop
lea
jmp
xor
sbb
jmp
mov
mov
add
add
test
jmp
mov
jle
jmp
jmp
inc
xchg
inc
push
pop
shr
jmp
sbb
imulb
mov
add
test
jmp
sbb
test
add
add
cmp
inc
sub
and
xor
ror
mov
mov
push
pop
sub
xchg
sub
xchg
decl
jmp
jge
dec
mov
test
jmp
push
stos
stos
and
rol
dec
mov
add
mov
inc
and
mov
mov
sub
mov
mov
xchg
incl
mov
jmp
sbb
fsubs
lock
sub
jmp
dec
and
jmp
dec
sub
test
incl
mov
jmp
int3
xchg
mov
jle
nop
nop
nop
nop
nop
add
mov
mov
xor
dec
or
dec
mov
add
cld
add
xchg
jmp
es
mov
jmp
int3
add
add
xor
jne
jmp
mov
xchg
mov
mov
nop
nop
nop
nop
nop
jmp
call
xchg
test
jmp
pop
push
lea
add
cmp
mov
jne
jmp
jo
pushf
dec
jmp
aas
jne
test
jmp
test
pop
adc
nop
mov
jmp
jae
bnd
mov
dec
and
jmp
ss
jmp
add
jno
dec
call
jl
aad
decl
add
xchg
nop
nop
nop
nop
nop
je
mov
sub
xor
mov
sub
cld
add
sub
or
add
mov
mov
mov
incl
mov
jmp
lret
mov
shr
mov
xor
xchg
add
mov
jmp
data16
dec
mov
mov
jmp
xlat
or
jmp
jmp
dec
jmp
test
cmp
test
ljmp
push
pop
nop
nop
nop
nop
nop
push
xchg
pushl
xchg
push
mov
add
or
mov
dec
push
shr
shl
xor
inc
shl
dec
ror
mov
add
add
add
dec
test
jne
pop
lea
call
mov
push
pop
lea
jmp
cmpl
and
ret
shr
dec
dec
add
mov
add
xor
mov
add
shl
or
mov
mov
dec
test
jne
pop
lea
call
jmp
push
xchg
mov
leave
jmp
dec
push
pop
dec
xchg
or
add
add
or
mov
jmp
mov
imul
sar
loopne
add
test
jmp
je
push
mov
call
push
pop
test
jmp
ds
and
jmp
jne
jmp
jle
enter
jmp
ss
jmp
repz
or
sub
add
addr16
nop
nop
nop
nop
nop
incl
xchg
jmp
push
inc
je
rol
add
or
dec
mov
add
rol
mov
mov
mov
jmp
mov
lea
jmp
adc
or
divb
jno
dec
mov
call
nop
cmp
nop
jb
inc
xchg
cmp
xchg
jb
inc
mov
jmp
xor
xor
iret
lock
jmp
rol
shl
mov
mov
xchg
jmp
orl
xchg
jmp
push
or
incb
fisttpl
addl
add
pop
jmp
arpl
mov
sub
and
add
rol
mov
add
mov
push
and
pop
add
jmp
xor
test
jmp
mov
add
sub
mov
mov
mov
add
dec
mov
sub
cld
mov
nop
incl
mov
dec
nop
jmp
hlt
jl
rep
jmp
jb
and
and
dec
mov
xor
sub
or
or
mov
push
xchg
push
mov
pushl
xchg
call
cld
jmp
mov
jmp
xor
decl
xor
push
pop
jmp
les
add
xchg
pushl
xchg
call
mov
dec
add
and
mov
test
jmp
pop
mov
jmp
jnp
push
ljmp
add
jmp
sub
in
mov
jmp
add
or
and
shl
xor
mov
or
mov
ror
and
add
mov
mov
xchg
incl
xchg
incl
mov
mov
cld
jmp
mov
mov
add
addr16
sub
nop
jmp
and
mov
ror
shr
mov
sub
xchg
jmp
inc
xor
xor
xchg
cmpl
mov
je
and
mov
shl
mov
mov
mov
add
or
pop
sub
mov
add
add
dec
add
pop
leave
jmp
loop
mov
jmp
cmp
nop
nop
nop
nop
nop
shr
jmp
test
jmp
lea
jmp
mov
jmp
sbb
jns
nop
nop
nop
nop
jle
mov
xchg
nop
nop
nop
nop
nop
and
or
mov
movzwl
jmp
jns
ror
mov
and
push
pop
cmp
cld
jne
nop
nop
nop
nop
nop
and
mov
add
mov
add
push
pop
add
mov
sub
sub
xor
sub
inc
mov
addl
nop
decl
jmp
fucomp
sbb
inc
lret
jl
test
inc
add
mov
nop
nop
nop
nop
nop
cmpl
push
pop
jne
mov
mov
test
jmp
loopne
je
lea
jmp
cmpl
push
pop
je
jmp
nop
nop
nop
nop
nop
mov
shl
mov
add
add
sub
mov
add
push
pop
push
mov
push
add
mov
inc
add
sub
push
xor
mov
mov
push
ror
mov
and
dec
pop
xor
or
add
or
dec
test
jne
pop
pop
mov
call
nop
nop
nop
nop
nop
cmp
addr16
nop
nop
nop
nop
nop
mov
jmp
push
xor
test
pop
and
or
shl
ror
mov
test
jmp
xor
test
add
add
pop
and
and
or
mov
pushl
shr
shr
pop
nop
nop
nop
nop
nop
and
inc
ror
add
mov
add
mov
nop
nop
nop
nop
nop
xor
or
or
rol
sub
mov
add
xchg
test
jmp
cmpsl
addr16
test
add
add
enter
loope
leave
and
add
test
jmp
add
daa
inc
nop
nop
nop
nop
nop
jns
nop
nop
nop
nop
nop
movzwl
jmp
mov
push
jmp
add
addr16
add
addr16
nop
nop
nop
nop
nop
push
cld
nop
nop
nop
nop
nop
pushl
cld
push
add
shl
or
dec
mov
rol
and
shr
mov
sub
dec
test
jne
pop
mov
sub
mov
call
add
mov
mov
xchg
sub
mov
add
xchg
nop
nop
nop
nop
nop
test
jmp
sbb
lds
test
incl
cmpl
xchg
jne
mov
jmp
addb
divl
mov
xchg
shr
mov
mov
mov
nop
nop
nop
nop
nop
shr
sub
mov
nop
nop
nop
nop
nop
pushl
rol
dec
shl
inc
sub
pop
mov
mov
cmp
xchg
jne
pushl
sub
ror
shr
mov
pop
add
addr16
dec
shr
shl
shr
pop
nop
nop
nop
nop
nop
mov
xchg
pushl
mov
sub
and
pop
add
mov
sub
and
add
pop
and
ror
pop
add
xor
or
or
mov
add
add
shl
rol
sub
pop
ret
jmp
or
dec
mov
nop
nop
nop
nop
or
jmp
xor
mov
mov
shrb
ss
sub
aam
pop
sub
shll
adc
jle
mov
sbb
test
and
insb
jo
jle
popf
fnstenv
pop
call
es
sub
lods
out
stc
cltd
int3
push
mov
push
adc
aad
cs
clc
xchg
dec
push
enter
add
mov
sbb
add
add
in
arpl
sub
adc
xor
fsubs
mov
xchg
jp
pop
aas
mov
lds
inc
pop
and
negb
sbb
add
pop
loope
add
cmp
fidivrs
xor
xchg
ret
aaa
bnd
rolb
in
jae
imul
add
popa
sqrtps
scas
ljmp
fisttps
jge
mov
mov
lods
cld
xor
out
fstl
bound
lahf
ja
dec
sub
and
cmpsl
jp
add
adc
in
push
decl
sub
cs
das
clc
mov
sbb
sbb
add
repz
lahf
sbb
inc
mov
dec
repnz
xor
ds
pop
dec
lahf
decl
arpl
in
testb
mov
sub
lds
cmc
add
mov
sahf
and
pop
dec
dec
cltd
aaa
divb
popa
rol
icebp
pop
adc
sahf
xor
repnz
adc
ja
loope
cmp
shll
mov
call
out
dec
push
or
adc
ficoml
xor
pop
sbb
in
bound
lahf
call
push
ljmp
xchg
neg
ljmp
cmp
and
daa
or
xlat
aas
dec
arpl
or
pop
call
fs
or
jns
loopne
jmp
cmp
jge
mov
xchg
je
mov
jno
lods
and
push
cmpsb
clc
or
movsl
sub
sbb
ss
fdivrs
popa
mov
in
js
mov
fwait
sub
ficoml
mov
orl
je
jecxz
cmp
add
sub
repnz
addr16
fisubrs
xchg
jno
shrl
out
or
out
mov
dec
sbb
mov
cwtl
mov
in
sti
push
lea
jae
ds
pop
shl
sbbb
loope
rclb
cmc
data16
imul
push
scas
push
into
daa
pop
inc
jnp
jmp
inc
hlt
adc
in
xor
sbb
fwait
add
mov
xchg
in
add
lea
sbb
lcall
add
cmp
dec
int3
ficompl
xchg
popf
lock
xchg
mov
imul
mov
xchg
out
aas
jle
sub
sbb
mov
lods
push
sbb
ss
jmp
repz
xor
push
sub
ds
xchg
pop
sbb
out
gs
clc
mov
ret
or
xor
bnd
xchg
mov
bound
ja
add
fwait
lret
cmp
loope
mov
sub
sbb
and
ret
sbb
into
mov
push
daa
rol
cmp
adc
imul
cmp
add
adc
pop
test
jecxz
add
pop
mov
xchg
cld
or
inc
dec
clc
lret
fcomps
or
sub
test
mov
mov
lret
leave
adc
lock
bsf
in
mov
cltd
and
stos
sbb
lock
push
push
sahf
test
lock
xlat
lods
movsl
push
jl
xchg
dec
push
xchg
dec
clc
cmc
add
mov
push
gs
dec
push
pop
adc
shlb
xchg
lods
pushf
mov
aaa
mov
iret
push
and
cmpl
je
cmp
adc
insl
ret
inc
xor
mov
fs
scas
aam
iret
mov
loop
pushf
popf
inc
testl
pop
sub
fiaddl
int3
insb
adcl
in
dec
xchg
fstpl
adc
push
loopne
sarl
cmp
int
dec
and
or
int
lds
push
loop
repz
test
dec
pop
dec
pop
jns
sbb
mov
add
mov
adc
add
mov
or
sub
stos
movq
cmpl
test
je
shlb
pop
ja
pop
mov
call
in
inc
add
xchg
jmp
insl
movsb
stc
movsb
push
out
push
adc
popf
jno
cmp
arpl
pop
cwtl
sub
and
inc
in
cmpsl
sbb
jecxz
dec
cmpsl
shr
xchg
stc
mov
adc
and
add
jg
push
xchg
add
into
stos
hlt
movsl
cmp
jbe
stos
repz
push
dec
inc
xor
dec
xchg
jnp
fadd
fstpt
mov
fstl
int
add
push
sbb
inc
shrl
sbb
in
adc
mov
sub
add
cmp
out
out
mov
xchg
inc
adc
sub
lahf
add
push
sbb
dec
dec
sahf
cwtl
mov
rcr
pop
out
mov
js
shrl
ss
jb
cwtl
cmp
jle
scas
into
push
or
std
addr16
mov
movsl
jae
dec
mov
ja
lds
frstor
mov
adc
mov
mov
repnz
xchg
dec
enter
jle
stos
cmp
sub
jp
mov
jbe
les
insl
arpl
xchg
aaa
movsb
repz
jnp
nop
scas
cmp
leave
rolb
jmp
daa
insb
in
mov
cmp
fdiv
icebp
ljmp
push
iret
outsl
dec
sti
xchg
cmp
roll
and
dec
push
rcrb
pusha
adc
fs
enter
fs
and
push
inc
jnp
roll
ja
mov
sub
lahf
cmpsb
jecxz
xchg
shlb
adc
cmpsb
xor
rcrl
and
in
xchg
jge
popa
sub
xchg
repz
jl
pop
jmp
dec
fidivrl
insl
or
push
or
mov
into
xchg
rolb
rcll
adc
mov
push
ss
add
dec
data16
inc
out
cld
pusha
pop
mov
jbe
pushf
or
jne
aam
pusha
inc
dec
dec
xchg
jp
scas
push
outsb
inc
and
dec
xor
push
dec
lahf
cmp
mov
in
pop
xor
mov
scas
adc
mov
cmp
and
pop
add
hlt
fildll
add
repnz
inc
lods
mov
mov
pop
loop
jnp
mov
loopne
lea
pop
inc
inc
iret
sti
fdivrs
gs
dec
mov
test
lret
loope
fsincos
jns
mov
loopne
sar
cld
movsl
aad
add
xchg
add
leave
lock
cltd
push
mov
lds
xchg
lds
and
jno
xchg
cmc
arpl
push
outsl
or
cs
adc
popl
fistps
scas
ja
leave
fcmovbe
xchg
mov
sub
xor
movsb
adc
insl
mov
add
push
xor
cmpsl
daa
lds
lret
das
mov
shl
daa
add
inc
mov
and
pop
push
push
sbb
sti
add
adc
outsb
in
jb
popa
ret
ret
cmc
or
inc
cmp
cmp
test
insb
ljmp
into
cs
sbb
int3
cmpsb
or
mov
js
in
pop
data16
rcr
imul
push
lock
int
and
iret
aaa
adc
movsl
and
iret
push
and
pop
adc
cmp
daa
fsubrs
sbb
mov
mov
mov
fiaddl
mov
popa
incb
or
jnp
mov
and
dec
repz
loopne
rcrb
jbe
sub
mov
adc
into
fsubl
testl
or
sub
adc
lea
leave
fdivp
xor
or
mov
or
lock
lods
lea
lods
vpaddq
xor
adc
ret
stos
mov
jge
dec
cmp
xor
hlt
cmp
push
and
hlt
lods
mov
xchg
sbbb
pop
mov
nop
mov
push
mov
in
stc
popf
mov
fbld
out
andb
icebp
pop
andb
pop
sbb
popa
shrb
jne
jmp
pop
jae
arpl
movsb
or
negl
in
sub
fcomps
mov
roll
dec
ljmp
and
push
out
push
mov
jb
fbstp
or
xor
arpl
loop
mov
jmp
add
mov
dec
mov
fldt
mov
popw
pop
push
xchg
xor
add
mov
mov
in
stos
mov
push
add
popa
sub
push
test
shll
cmp
cmpb
jmp
and
and
das
or
mov
and
inc
pop
jnp
popa
jno
hlt
outsl
dec
push
sti
xor
adc
rol
sub
jb
sbb
enter
or
push
cmpsl
sub
add
inc
push
shlb
add
pop
mov
pushl
jb
xchg
faddl
out
mov
inc
mov
cmpsl
call
nop
bound
mov
popf
add
push
push
es
cmp
mov
rcrl
jnp
bound
or
xchg
xor
into
push
inc
rcl
xor
test
cmp
xor
aaa
ss
in
cmp
jle
mov
cwtl
xor
adc
iret
mov
add
cltd
out
imul
incb
je
jp
push
ds
pop
ss
dec
push
lds
ja
andl
addr16
inc
or
jno
imulb
mov
mov
dec
push
inc
mov
add
push
fnstenv
call
xchg
push
xor
test
adc
cld
lea
pushf
mov
cmpsb
inc
pop
int3
xor
mov
mov
add
fdivl
cmp
fs
push
std
out
xchg
or
lds
or
scas
jne
pop
cmp
xchg
mov
pop
les
and
jns
movsb
and
mov
in
out
mov
inc
mov
add
xor
out
or
jge
daa
pop
push
in
lods
sbb
push
pop
int3
cmc
push
inc
daa
push
sbb
pop
mov
in
dec
cmp
jnp
and
sub
xchg
fldenv
mov
mov
or
es
mov
sub
in
sub
fs
in
mov
pop
xlat
rolb
test
sub
js
mov
out
insb
sti
jl
ja
mov
fwait
imul
into
dec
jge
fs
popa
pop
inc
adc
push
inc
sub
repz
sub
mov
push
sbb
imul
aas
and
movb
lea
mov
clc
pushf
inc
das
cs
mov
xchg
xchg
ljmp
ja
pop
mov
mov
in
adc
and
stos
iret
jecxz
xor
add
sub
hlt
push
xor
insl
jle
add
ret
cld
call
sbb
push
jb
cmpsl
jno
xor
scas
pop
and
sbb
lods
mov
inc
sti
shll
jne
mov
mov
insl
xchg
into
pop
push
push
add
int3
xchg
arpl
adc
pop
mov
xchg
pop
lock
ret
pop
push
je
push
shl
ret
hlt
or
cmp
jmp
sarl
data16
popw
add
pusha
xor
dec
mov
test
cltd
mov
scas
xor
sbb
pop
cmp
popl
or
mov
lret
inc
dec
sub
mov
test
push
dec
adc
xor
push
push
clc
repnz
pop
outsb
ficoms
test
loop
and
pop
sub
fs
add
push
negb
mov
out
push
in
rorb
in
or
ljmp
mov
mov
aam
fcoms
and
xorl
jbe
push
mov
or
push
lods
push
imul
cmp
mov
adc
pop
pop
mov
js
hlt
mov
fisubrs
negl
jae
or
xchg
adc
pushf
push
push
mov
push
pusha
push
repnz
push
aaa
pop
add
in
subl
ficoml
nop
and
mov
call
sbb
scas
je
mov
popl
loopne
pop
orb
fnstcw
mov
add
add
daa
sub
pop
aaa
icebp
xchg
imul
cmp
push
sub
inc
push
je
test
sub
sub
test
sub
jmp
and
les
hlt
lahf
mov
or
mov
repnz
lods
adc
ja
sub
mov
dec
daa
les
add
push
and
dec
inc
dec
sar
addr16
xor
ret
add
cmc
fidivl
mov
xor
aaa
into
popa
fcoml
push
mov
add
xchg
movsb
roll
aaa
jge
dec
fcomps
popa
cmpsb
inc
inc
sti
rep
add
mov
mov
xor
movsl
dec
outsb
and
mov
bound
nop
xlat
aad
jle
jne
pushf
xchg
mov
aas
jg
xchg
pop
jae
and
sarl
sahf
or
imul
shlb
in
cmpsb
outsl
push
push
fisubs
addb
pop
data16
cmc
cmp
mov
pop
or
adcl
lahf
das
inc
sub
aam
pushf
inc
filds
push
sbb
or
cltd
fldt
out
sbb
xchg
and
icebp
mov
ret
cmp
iret
sbb
scas
scas
andl
add
jbe
lret
push
out
in
adc
mov
jae
je
inc
icebp
gs
aad
xlat
lret
das
sub
mov
into
scas
clc
les
mov
pop
mov
cmpsb
nop
xchg
add
out
sub
dec
mov
int
xor
and
xorl
in
cltd
sub
mov
or
mov
adc
cmpsb
sub
flds
mov
insb
adc
sub
in
xor
nop
lret
in
not
sub
pushl
adc
test
into
lock
pop
repz
jmp
fildll
xchg
loop
add
in
lods
imul
out
pop
cltd
add
les
cmp
push
hlt
push
cmc
out
sub
mov
pop
pop
int3
lods
xlat
and
adc
mov
lods
sbb
fwait
mov
sub
cltd
dec
push
and
adc
push
icebp
xor
jle
sub
sub
mov
pop
adc
test
push
les
push
inc
cwtl
cmp
int3
das
adc
int
fsubl
repz
cmpsb
sbb
pop
mov
pop
jo
lret
fcoml
fs
inc
clc
mov
xor
add
mov
lock
and
lcall
push
decb
ja
in
jp
or
push
shlb
inc
movsl
xor
shlb
mov
sbb
mov
cwtl
sub
inc
loope
aad
popa
inc
iret
mov
enter
push
data16
arpl
je
add
das
dec
xchg
mov
jp
test
jl
test
loop
and
add
pop
jno
mov
pop
ret
rol
test
xchg
push
lahf
loopne
minps
sbbl
fnstsw
mov
cmp
jge
mov
movl
lahf
into
inc
mov
lods
sub
jno
cmp
xor
push
enter
ja
and
pop
imul
shrb
jbe
test
je
lcall
xchg
les
ja
add
dec
cmc
addr16
inc
insl
inc
inc
test
mov
dec
scas
mov
loop
xor
outsb
and
dec
lock
or
lret
fiaddl
shlb
mov
gs
push
mov
xchg
add
je
in
fwait
xchg
aas
data16
sti
rcrb
shl
mov
push
fisubrs
jae
pop
movsb
mov
lods
xor
mov
mov
push
jne
pop
mov
notl
or
and
xor
adcl
inc
int3
xor
daa
add
adc
add
mov
stos
test
inc
mov
call
pop
or
mov
add
sub
dec
dec
pop
jmp
lods
mov
addr16
mov
dec
cmp
cs
mov
and
push
loopne
pop
dec
orb
pop
loopne
mov
or
arpl
inc
mov
hlt
or
in
int
adc
fs
scas
or
cmp
adc
aaa
fimull
jge
pop
add
mov
ficompl
les
stos
adcl
andb
sahf
mov
es
and
movsb
pop
rol
xchg
mov
jnp
dec
pop
lcall
push
sarb
jae
jbe
outsl
ljmp
push
xchg
ss
fsts
inc
push
jg
dec
scas
ret
shrl
lret
mov
gs
out
das
addr16
lods
not
pop
jnp
cmp
sbb
mov
sti
div
mov
outsb
fwait
xor
jle
mov
iret
movsl
lcall
push
enter
mov
jno
jp
hlt
mov
mov
inc
call
scas
lods
rcrl
inc
jg
cmpsb
cli
rolb
les
dec
iret
xchg
cmp
stos
sbb
cmc
inc
mov
pop
inc
test
gs
push
test
or
cmp
scas
push
adc
imul
xchg
cs
repz
mov
cli
outsl
push
push
ret
inc
adc
test
adcl
mov
mov
mov
xchg
adc
jbe
test
adc
mov
mov
loop
sbb
movl
stc
sbb
push
in
out
test
sub
ds
push
mov
lret
or
sub
lea
pop
and
cmpsl
xchg
js
test
pop
adc
fnstsw
pop
jmp
pop
loopne
outsb
mov
sub
movsb
mov
sub
lret
aam
mov
clc
scas
or
sbb
inc
call
sbbb
leave
movsl
mov
and
add
mov
cmp
adc
in
jg
fcomps
insl
subb
andl
dec
clc
and
add
xor
dec
add
cltd
iret
shlb
xor
pop
and
sbb
pop
fnstsw
cmp
cmp
and
cmpsb
shrb
out
push
out
bound
sbb
sub
pushf
popf
sub
test
mov
mov
dec
mov
roll
xor
out
dec
ret
push
xlat
xchg
scas
arpl
popf
dec
ljmp
cwtl
mov
or
sub
push
das
out
cmpl
adc
jb
mov
imulb
xchg
out
push
popf
fists
push
popf
ret
sub
test
outsb
aaa
jmp
dec
sbb
push
and
jbe
inc
fisttpl
ret
sub
fmull
cmp
jae
enter
call
stos
popl
mov
lock
push
out
mul
adc
jge
ret
dec
push
pop
call
and
lea
out
jecxz
sbb
pop
packssdw
mov
sub
jge
sarl
push
push
add
cmc
mov
push
pop
jmp
mov
sbb
jmp
lahf
popa
xor
sbb
push
xlat
jnp
xchg
insl
sbb
dec
vpsubusb
xor
sbb
movsl
push
push
ljmp
mov
fmuls
pop
push
dec
nop
ja
cltd
jecxz
adc
push
ja
mov
cld
dec
dec
xor
or
fadds
mov
dec
mov
and
popa
mov
sbb
iret
shl
add
add
data16
cmp
lds
xor
in
lock
push
adc
scas
push
pop
aad
push
cs
outsl
cmpsb
jg
pop
adc
lea
jl
adc
aas
imul
inc
dec
sbb
xchg
pop
sub
jle
popf
jmp
andl
xor
adc
aas
in
test
pop
cmpsb
shll
fiadds
out
fisubrl
sbb
pop
xchg
pop
xchg
les
shl
mov
sbb
adc
sub
imul
es
cmp
repz
mull
push
xchg
popf
xchg
lods
nop
orl
add
jl
add
outsl
cmp
lods
mov
xor
pop
shll
or
xlat
loope
dec
push
dec
add
or
pop
sbb
jle
push
pop
or
mov
pop
inc
push
push
inc
inc
mov
mov
clc
adc
nop
cld
push
xchg
cmp
and
xchg
mov
sbb
push
cmp
xor
enter
aad
cmp
rclb
sub
outsb
fwait
dec
pop
mov
out
push
sbb
pusha
clc
bound
lahf
dec
test
cmp
push
dec
lcall
stos
jmp
jns
movsb
les
sbb
popa
divl
xor
cmp
hlt
cld
cs
imul
xchg
sub
mov
or
sbb
int
pop
daa
pop
lret
xlat
ficoms
mov
adcl
mov
nop
jle
and
mov
fsts
data16
fdivl
push
push
cmp
testb
mov
fiadds
lret
inc
lret
lods
out
jecxz
fwait
not
dec
decl
jnp
leave
push
cmp
fcompl
aas
or
pop
xchg
cmpsl
jnp
dec
stc
out
int
jnp
out
jl
adc
jl
outsb
adc
mov
xor
sub
adc
lock
add
scas
lea
das
imul
nop
sar
insb
arpl
adc
pop
aad
cmp
int
sub
insb
pop
insl
ja
lods
xor
clc
pop
out
sub
into
jmp
pushf
xor
add
add
or
lcall
jno
pop
jno
xor
fdivl
jge
mov
adc
cmp
cmpl
loop
lahf
push
sub
gs
call
jae
or
add
pop
loopne
lods
ss
or
mov
xor
cwtl
test
mov
insl
test
xchg
xchg
outsb
mov
repz
or
mov
aas
mov
xlat
xor
stos
xchg
dec
out
jno
sub
or
loope
stos
loopne
inc
ret
and
jl
mov
dec
sub
push
call
xor
mov
mov
dec
dec
scas
xor
cwtl
cs
dec
xchg
or
into
add
dec
pop
and
jne
cmp
jmp
popa
dec
clc
sub
lods
test
call
mov
jbe
mov
lret
add
adc
xchg
clc
inc
inc
dec
scas
jg
jmp
out
add
in
push
dec
cmp
xchg
mov
mov
jmp
ljmp
sbb
xchg
addr16
mov
test
loope,pn
and
gs
inc
lock
lcall
and
loopne
xchg
ds
iret
imul
pop
mov
outsl
and
add
in
jg
repnz
sbb
sub
je
jbe
bound
cmp
nop
es
stc
push
je
adc
sbb
je
lods
sub
int3
andb
adc
rcll
aad
mov
xchg
inc
mov
cmp
shll
imul
mov
cmpsb
mov
mov
inc
sub
fidivrl
cltd
shlb
outsl
push
stos
loope
sti
push
xchg
xor
jge
pop
lcall
mov
into
fidivl
sbb
and
pop
pop
mov
adc
fwait
cld
imul
shr
loop
daa
iret
sbb
pop
sbb
insb
push
adc
pop
cmp
pop
sub
dec
sbb
inc
cltd
rol
mov
enter
dec
sbb
int3
sarl
stos
popa
decl
push
mov
aaa
dec
insb
movsl
fistpl
es
mov
sar
lods
mov
sti
lds
or
add
movsb
aam
arpl
adc
fs
stos
jg
pop
mov
pop
jecxz
push
lar
pop
sub
les
les
das
pop
cmp
popf
mov
daa
and
mov
inc
dec
mov
cmp
adc
jecxz
push
mov
cmc
cmpsb
mov
inc
or
mov
push
mov
adc
icebp
out
pop
subl
pop
rcrl
push
mov
xor
test
xor
pop
sub
xchg
lods
or
pop
push
out
or
jge
stos
cmp
dec
inc
jb
cwtl
scas
or
mov
xor
push
or
iret
inc
sbb
outsl
cmp
dec
mov
dec
jns
mov
scas
call
pop
mov
adc
sti
or
lods
add
into
inc
icebp
push
movsl
gs
clc
iret
shl
push
pop
dec
cmp
into
mov
addb
stos
cmp
cli
cmc
mov
dec
cmp
dec
jno
rolb
mov
insb
mov
cs
adc
jno
xchg
clc
adc
pop
mov
and
es
ds
cmc
cmp
or
pop
mov
daa
movsb
jbe
inc
incb
jns
ds
push
sbb
jno
adc
or
lret
mov
mov
cmp
xchg
aas
xchg
and
fmull
lock
cld
icebp
cli
dec
cmp
pop
mov
jns
add
out
sbb
test
movsl
arpl
orb
imul
pop
inc
outsb
push
test
cmp
sbb
testb
push
xchg
js
lea
popa
scas
jne
movl
jg
js
sub
inc
xlat
jp
push
call
dec
push
push
dec
mov
cld
aam
mulb
dec
test
jmp
hlt
insl
mov
lahf
pop
xchg
ja
stos
imul
xchg
lods
push
cs
stos
into
adc
test
adc
out
xchg
dec
js
push
sub
xor
jge
xchg
shll
imul
push
sub
push
aam
xlat
std
xchg
cli
sbb
leave
movsb
xchg
fs
xchg
addr16
scas
adc
out
enter
or
fiadds
into
xor
out
xchg
outsb
jp
inc
mov
and
dec
cmp
dec
push
rclb
xchg
xchg
mov
mov
sbb
xchg
dec
hlt
xchg
and
mov
mov
mov
mov
xlat
mov
mov
sub
cmp
add
xchg
jle
nop
test
mov
rorb
rorb
and
fnstenv
xor
pop
lea
int
mov
mov
push
sahf
and
js
rolb
push
fisttpll
cmpsl
mov
jecxz
adc
jle
sub
sahf
adcb
sbb
cld
into
push
std
imul
fwait
mov
dec
lahf
pop
mov
divb
jb
push
pop
mov
andb
fnsave
cmp
fidivrl
xchg
sub
cwtl
or
and
dec
xchg
jge
into
sti
xchg
add
push
mov
xchg
push
jp
inc
cmp
adc
cmp
icebp
jo
add
mov
mov
mov
repnz
add
xchg
and
adc
and
push
mov
mov
aam
lcall
push
int3
add
aad
cmp
push
lock
popf
lock
pop
adc
cli
mov
sub
outsl
repz
cmp
and
frstor
jp
ficompl
pusha
inc
stos
inc
xlat
jp
inc
iret
rorb
pop
inc
adc
pusha
sbb
or
daa
fistl
or
stos
cmp
incb
pushf
movsb
rcll
xchg
mov
xor
sbb
xor
jmp
mov
int3
and
jg
lcall
jbe
push
dec
pop
mov
push
xchg
outsb
and
jl
iret
insl
or
or
scas
scas
sub
add
das
or
and
xchg
cmp
add
lret
imul
rcrl
xor
bound
mov
popa
push
and
pop
ds
inc
sti
jb
or
cmp
cmpsb
jp
ret
jg
aas
mov
or
mov
les
es
ds
data16
pop
push
jg
movsl
test
dec
pop
clc
dec
cs
test
add
pop
xchg
rdmsr
jns
cmp
jae
push
rcrl
pop
sbb
inc
mov
sahf
xor
cmc
jecxz
or
xchg
sahf
and
xchg
sbb
inc
outsb
fiaddl
or
sbb
push
xchg
lcall
fcoms
pop
xor
push
pop
js
popa
pop
add
fidivrs
adc
cld
dec
mov
inc
sbb
imul
cmc
pop
jp
inc
mov
fidivrs
fsubrl
leave
jnp
jecxz
into
les
jno
inc
sbb
xor
dec
call
cmpsb
fildl
jl
incb
mov
shrb
aad
clc
push
std
jmp
daa
fisubl
test
pop
popa
mov
inc
push
cmp
cmp
jns
dec
in
lcall
scas
movsb
mov
mov
or
lods
mov
dec
ds
int3
or
or
jb
mov
mov
add
pushw
dec
mov
loope
lahf
push
cltd
cmp
daa
pop
adc
mov
dec
lock
mov
pop
shlb
test
ds
and
jle
adc
adc
xchg
xchg
fistpll
pop
xchg
aam
jne
sti
movsb
cmpsl
cmp
add
clc
test
mov
pushf
sbb
mov
push
dec
cmc
icebp
shlb
xchg
mov
nop
divb
pusha
mov
es
dec
fidivs
push
lahf
dec
js
mov
jae
jbe
scas
jecxz
mov
aad
cmc
pusha
in
jno
inc
or
and
imul
adc
push
insl
ucomiss
aad
and
mov
mov
jge
sbb
fnstenv
push
sbb
outsb
jbe
inc
clc
pop
push
mov
mov
movsl
push
test
fs
popf
xlat
mov
hlt
scas
shll
jg
test
ss
sub
push
clc
dec
dec
cmp
test
sub
out
xor
shlb
xchg
xchg
add
sbb
divb
jge
sub
fbld
pop
mulb
scas
ret
sahf
mov
addr16
call
push
rcll
and
inc
rcrl
popf
out
loop
pop
fsubrs
data16
jns
jg
mov
js
mov
test
lcall
test
push
gs
jl
std
in
sbb
int
std
das
cmpl
mov
cmpsb
mov
xchg
lcall
out
shrl
fst
jmp
movsl
push
orl
xchg
lock
sahf
rorl
cmc
fidivs
arpl
jo
sbb
inc
and
notl
testl
fsubrp
cmpsb
aam
pop
sahf
test
mov
ret
call
push
out
movsb
pop
stos
xchg
fucom
movsb
dec
nop
xor
jge
loopne
push
imul
cld
out
call
push
and
dec
mov
push
cmp
jb
and
sbb
mov
out
rclb
adc
insl
pop
aam
pop
xchg
ds
adc
xchg
nop
xchg
xchg
dec
subl
std
cmp
jb
inc
mov
cmp
sbb
outsb
out
inc
sti
test
sbbb
inc
ficomps
xor
cmp
sbb
jae
loopne
or
insl
sub
inc
xchg
es
push
fs
push
in
or
push
orb
leave
test
shrb
add
int
mov
jo
dec
inc
out
or
js
mov
shll
imul
adc
fisubs
mov
inc
in
call
test
flds
dec
sbb
pop
push
scas
add
iret
outsb
adc
sbbb
aaa
xlat
lock
mov
sbb
stos
sub
test
cmp
clc
fwait
es
roll
mov
xchg
add
fdivr
jmp
dec
dec
cltd
dec
addr16
in
mov
fwait
ret
daa
and
aam
and
push
dec
push
cmp
jp
leave
sub
or
fistl
sahf
js
aas
neg
fisubl
orb
push
js
inc
dec
ja
sbb
adcl
inc
mov
aas
jne
es
sub
daa
imulb
xchg
ret
mov
bound
mov
add
jb
cmp
xchg
push
adc
add
shl
dec
outsl
mov
addr16
cs
xor
lahf
std
or
out
cli
inc
sbb
push
test
add
fbld
mov
loop
out
mov
adc
out
jle
or
lods
pop
jle
inc
dec
and
mov
std
out
xchg
inc
jmp
dec
sbb
cmpsb
inc
subb
mov
pop
mov
lds
sub
mov
ja
push
jns
int
pop
enter
aad
mov
sbb
pop
outsb
lock
sbb
lret
and
shrl
sub
cmp
xchg
pop
enter
cs
or
or
cmp
lods
add
mov
cmp
xlat
lods
std
add
cld
dec
push
sbb
xchg
push
mov
dec
cmpsb
mov
fists
push
xor
add
mov
mov
cmp
sub
enter
stos
push
loop
aaa
ret
mov
js
stos
call
and
mov
dec
dec
mov
std
or
dec
xchg
or
mov
js
mov
xchg
rclb
nop
or
jb
sub
add
int
sbb
jnp
xchg
pop
xchg
cld
or
mov
aaa
jg
sub
pop
pop
mov
mov
test
dec
ljmp
pusha
rorb
out
int3
cmp
je
leave
in
dec
and
in
adc
push
and
inc
hlt
cmc
and
lds
push
add
or
divb
dec
mov
scas
dec
cmp
mov
jmp
repnz
out
stos
fstl
add
or
push
ret
imul
mov
jns
insb
in
xor
jle
inc
sbb
cs
and
aas
and
std
testl
jmp
xor
hlt
inc
xchg
mov
cmc
mov
push
outsb
jnp
sub
negl
jae
pushf
sti
test
jae
movsb
jle
xchg
push
or
dec
data16
jg
out
aaa
inc
jb
addr16
xchg
sub
mov
jmp
scas
fadds
lret
loope
xorl
jecxz
rcr
mov
inc
add
pop
dec
jl
mov
jno
enter
gs
or
add
idivl
repz
push
xchg
sbbl
les
test
rorb
das
adc
insl
pop
fistps
pop
jb
in
add
ret
fisttpl
les
lcall
loop
mov
mov
bound
cmp
pop
mov
imul
sbb
xor
movsb
sets
mov
xor
dec
out
sbb
pop
out
movsb
cmp
mov
gs
xor
sarb
dec
ljmp
inc
fldl
aas
lds
pop
lea
jnp
mov
jle
and
push
xchg
outsb
fistpll
dec
xor
sbb
mov
sbb
lds
jg
mov
xchg
fsubrl
pushf
out
js
jne
pop
cld
xchg
or
fucomp
test
jne
nop
mov
inc
orl
shll
movsl
adc
ficomps
das
inc
movsl
jae
fnstenv
cmp
pop
das
inc
jle
clc
mov
or
adc
add
fimull
ljmp
mov
cmp
cwtl
xchg
aad
out
loope
push
ds
daa
out
dec
add
dec
mov
lds
and
call
jl
pushf
int3
jb
add
push
push
adc
push
rcl
lock
mov
gs
daa
clc
rolb
movzwl
inc
aam
lods
xor
aad
xorl
nop
jge
or
popf
mov
out
leave
sarl
add
stc
aam
fmull
pop
movsl
loope
mov
cmp
je
xor
mov
cmpsb
or
jnp
add
je
mov
mov
in
jo
push
sub
sub
sbb
das
decl
shlb
es
xor
jb
xchg
outsl
andl
and
add
mov
push
ljmp
stc
dec
out
int
mov
mov
lock
cmp
mov
sbb
fsubrl
cmp
mov
sbb
into
imul
mov
cmc
xchg
popf
push
pop
arpl
mov
lret
xor
orb
push
jecxz
popa
and
lds
stos
cwtl
mov
fsubrs
ret
in
mov
and
into
or
out
jp
xor
insl
in
sub
jne
or
outsl
adc
cmp
daa
xchg
cmp
add
and
inc
mov
adc
lock
rorl
jb
jne
negb
popa
push
es
cmp
in
dec
or
shr
xchg
icebp
xchg
mov
test
lods
and
cmpsb
xchg
mov
fcmovnb
repnz
cs
dec
dec
sbb
xorl
scas
xor
pop
lcall
mov
dec
xor
in
mov
cli
leave
mov
loope
xchg
push
mov
mov
mov
cmpsl
adc
push
push
ss
imul
cmp
or
inc
mov
pop
or
add
mov
lock
jmp
and
out
push
sbb
pop
sub
insl
push
insb
faddl
and
lods
mov
sarb
xchg
aaa
push
mov
or
sbb
fimull
les
jbe
mov
das
fnstenv
outsb
pop
mov
in
jecxz
push
incl
inc
mov
cld
popf
push
and
xor
xchg
mov
push
sub
insl
leave
test
movsl
sub
xchg
adc
and
jns
test
and
dec
in
dec
dec
push
stc
stos
rclb
test
mov
mov
jle
push
or
mov
stos
fisubs
push
or
sub
imul
adc
sar
mov
sti
mov
stc
imul
in
test
and
jo
inc
jmp
movsb
add
mov
lods
cmp
xchg
sarl
das
mov
sbb
mov
mov
nop
cmp
xchg
repz
push
test
arpl
popa
stc
scas
popf
mov
mov
mov
push
stos
inc
dec
sbb
pop
push
push
hlt
add
repnz
xchg
pop
decb
clc
fcmovnbe
cs
in
dec
and
ss
jno
ret
push
shrl
bound
popa
repz
mov
xorb
jae
mov
sub
adc
pop
fdivs
mov
adc
add
adc
push
or
jmp
sub
aaa
dec
in
push
xor
push
lock
int
js
aam
adc
imull
mov
mov
pop
inc
ja
mov
jmp
mov
rorl
jbe
dec
xor
cmp
mov
xchg
sbb
lock
push
in
fldpi
xor
arpl
fsubp
sbb
jae
imul
addr16
inc
cmp
mov
adc
mov
daa
fs
pusha
out
push
jns
push
mov
dec
mov
jmp
imul
mov
adc
pop
lock
sbb
mov
or
mov
mov
cmp
addr16
leave
les
inc
pop
inc
stos
int3
xchg
add
inc
xchg
or
cmp
rol
jns
or
dec
divl
mov
push
ret
xchg
lcall
mov
cmpsb
insl
in
mov
or
add
sbb
add
mov
dec
jno
xlat
lods
negb
std
data16
enter
iret
je
or
pop
pop
mov
cmp
and
neg
dec
stos
dec
das
or
xchg
sub
ret
popf
scas
xchg
and
push
cs
std
sub
add
mov
sub
in
repz
leave
stos
and
xchg
push
jb
cmpb
ffree
xchg
pop
mov
and
and
leave
jg
sub
cmp
or
inc
jns
jl
pop
fdivrs
js
jle
push
rorl
cli
mov
sbb
xchg
push
mov
add
aad
outsb
fwait
ss
outsl
add
arpl
test
or
cmp
and
imul
les
mov
in
out
jno
mov
outsb
out
push
inc
mov
inc
fnsave
inc
insl
push
js
or
cltd
popf
and
push
in
push
mov
inc
fcmove
push
popl
addr16
loopne
call
mov
repz
jno
pop
add
mov
xor
push
xchg
jl
add
shll
mov
or
fldt
bound
aad
dec
lods
out
dec
das
xchg
clc
mov
in
jnp
mov
outsl
lock
lds
bound
mov
fisttpll
sub
and
mov
stos
lcall
jo
xchg
pop
insl
mov
sub
mov
cmp
sbb
jae
mov
cmpsl
addr16
jbe
into
jb
mov
outsb
cmp
pop
jge
xchg
mov
mov
xchg
jnp
ss
rcr
push
cmpsl
daa
shll
and
inc
gs
jp
inc
cli
pop
dec
inc
fs
in
and
sub
cmc
cwtl
add
cmp
aaa
test
mov
std
lock
lret
adc
lock
jo
icebp
sub
sarb
ljmp
mov
and
nop
pop
push
div
cwtl
stos
cmp
pop
mov
inc
jo
pop
or
push
xchg
insb
das
adc
sbb
and
push
inc
out
and
mov
sub
pop
pop
jmp
cwtl
aas
aas
addl
push
test
pushf
imul
inc
pmulhw
in
out
imul
fs
lock
and
or
clc
lahf
add
imul
push
mov
pop
adc
mov
mov
inc
cltd
outsb
loop
adc
push
mov
cmc
jnp
pop
dec
sbb
lahf
adc
add
das
dec
stos
enter
nop
imul
cli
ret
push
sub
mov
add
in
lahf
test
js
scas
into
adc
add
das
dec
push
push
mov
inc
push
push
inc
aas
mov
std
pavgb
and
and
push
xor
xchg
mov
jb
dec
imul
leave
mov
dec
jb
aam
ja
and
call
cmp
repnz
loop
cmp
sahf
pop
xor
jns
stc
dec
enter
add
adc
jns
xchg
xchg
fsubl
jge
inc
pop
sub
mov
and
add
outsb
sbb
aam
xchg
std
adc
lahf
js
jno
loope
jecxz
in
sbb
dec
lods
mov
lret
cmp
xchg
nop
mov
mov
stos
inc
inc
push
push
jno
out
jb
lods
add
int3
mov
dec
dec
cmp
repz
loopne
test
mov
mov
mov
inc
pushf
sub
inc
push
inc
test
jbe
mov
pop
jno
out
push
xchg
mulb
xor
test
enter
push
sti
fcom
in
loopne
in
add
pop
cmp
mov
in
outsl
or
cmpsl
jbe
sbb
bound
dec
xchg
in
andb
call
rorb
cmp
pop
push
jmp
lret
xchg
mov
add
stos
daa
rcll
std
inc
daa
jp
inc
inc
out
xor
fisubrs
jg
cmpl
push
rol
and
sub
jo
jno
xchg
aaa
inc
xchg
add
pop
mov
mov
xor
gs
ret
in
dec
and
out
mov
test
and
sub
lret
push
xchg
push
mov
sub
or
dec
test
outsl
jne
dec
sub
mov
mov
inc
in
btc
pop
daa
mov
das
adc
mov
xor
fisubl
clc
cmp
mov
mov
popf
lcall
mov
jnp
dec
pop
enter
mov
sub
push
pop
cli
into
loopne
popf
js
ja
pop
fwait
mov
repnz
test
fsubrs
ret
jmp
jb
ds
aam
inc
inc
jb
xor
in
mov
inc
iret
daa
aaa
loope
xor
lods
lea
jg
mov
repz
test
pop
push
mov
out
jge
cld
pop
mov
scas
pop
stos
adc
jnp
sbb
xchg
stos
sbb
lret
and
mov
lret
push
enter
call
xchg
push
jnp
daa
mov
repz
jp
daa
insb
adcl
insb
cltd
and
pop
jl
pop
loopne
jg
scas
pop
out
inc
xlat
cmp
fidivl
mov
cmp
xchg
stc
pop
xchg
jg
syscall
jne
cld
adc
lret
in
cmp
push
and
sbb
sbb
arpl
cltd
mov
jb
or
jecxz
sub
ficoml
ljmp
push
aam
subl
and
dec
push
ret
pop
loope
insl
loope
pusha
sbbb
mov
sbb
jmp
lea
xor
and
addl
rorl
jle
aam
fists
mov
mov
dec
mov
sbb
psubsw
inc
test
mov
sbb
add
imul
jg
xor
movsb
sub
stos
popf
xchg
fcoml
rcr
into
and
pop
push
cmp
sub
pop
or
sarl
push
jno
out
cmp
pop
shrl
add
ss
aam
or
cs
imul
fnsave
std
mov
jbe
jnp
and
gs
cwtl
xor
push
aas
push
push
adc
push
pop
xchg
jp
xor
sahf
mov
mov
je
addb
lds
xchg
cmp
iret
js
popf
jmp
dec
mov
or
pop
sbb
rcr
cli
fstp
and
sahf
mov
push
aaa
sbbb
into
clc
repnz
rcr
bound
or
cmp
push
cmpsb
cmp
flds
inc
and
add
aas
pusha
gs
ret
xchg
adc
inc
repz
mov
add
mov
scas
pop
inc
xchg
movsl
fcmovne
mov
add
jp
push
das
mov
and
sbb
cs
fstpt
dec
or
stos
ja
rol
lret
pop
iret
ds
repnz
fst
or
adc
cltd
cmp
insb
loopne
fisttps
mov
or
jbe
push
cmp
pop
jnp
push
push
cmpsl
sbb
push
cli
jl
push
adc
lock
icebp
dec
jbe
and
dec
stos
or
and
imul
xchg
mov
popa
and
adc
not
ds
scas
sbb
dec
adc
inc
xchg
adcb
push
cmp
loope
or
xor
icebp
inc
or
outsl
adc
sbb
dec
stos
dec
or
lret
mov
outsl
fwait
arpl
jb
sbb
popf
int
je
mov
pop
rcrb
decl
popf
xlat
jle
fptan
andl
stos
or
add
jae
adc
jno
iret
frstor
stos
lods
cmp
cmpsb
or
push
mov
lahf
pushf
addl
mov
or
cld
cmp
iret
lods
imul
stos
test
stc
and
fcoml
xor
jmp
push
cld
out
imul
psubw
or
gs
push
push
lcall
adc
fcmovb
aas
xor
test
out
sub
mov
inc
mov
test
movsl
jmp
push
ljmp
aas
rclb
xor
repnz
or
fmull
push
mov
xor
cli
in
pop
jmp
dec
je
jno
sbb
dec
adc
sub
dec
jne
in
out
ficoms
test
xchg
js
test
stc
mov
jmp
pinsrw
xlat
fidivrs
and
popa
mov
jb
and
dec
xchg
mov
movsb
mov
sub
dec
loopne
lret
mov
mov
sub
lods
inc
push
dec
lret
add
cltd
cmp
dec
sbb
or
ljmp
mov
adc
mov
xchg
aas
mov
loop
or
mov
loop
loopne
push
pop
dec
fwait
imul
sub
repz
mov
lock
in
xchg
jmp
mov
scas
movsb
fcomps
lods
push
movsl
sahf
jb
pop
sub
aaa
out
xchg
add
fnstenv
mov
cmp
stc
xlat
add
mov
es
shrb
aad
fnsave
pusha
push
mov
addl
clc
push
push
push
addr16
call
inc
dec
push
in
or
cmc
fdivrs
jns
mov
fimuls
in
cmc
aam
cmpb
fs
jb
jg
jae
mov
push
sub
lcall
mov
clc
imul
cmpsb
mov
repnz
and
xchg
gs
xchg
loop
xor
popa
sbb
pop
push
or
jecxz
push
or
lret
insb
or
pop
inc
icebp
jbe
xor
loopne
pop
les
clc
jns
cmp
lods
xchg
sbb
lret
xlat
insl
or
jb
ret
into
sub
jnp
orb
lods
fcoms
and
cmp
jmp
cmp
cmp
test
mov
push
pushf
xor
pushf
ud0
rorl
pop
mov
fistl
cmpsb
lret
sbb
insb
xor
insl
arpl
mov
mov
fdivrl
push
pop
flds
dec
test
hlt
fwait
mov
mov
xchg
scas
xor
sbb
dec
lret
and
sahf
mov
add
test
scas
push
dec
cmpsl
fcmovu
stos
pop
dec
cs
push
lds
dec
mov
or
mov
mov
jns
sub
xchg
out
repnz
add
loope
jl
loopne
cmp
jb
inc
stos
mov
mov
out
enter
jns
inc
push
adc
fisttps
cmc
hlt
stc
jns
sub
rcrl
lret
dec
xor
and
push
jo
push
aas
aas
insb
pop
addb
test
and
lods
test
js
mov
mov
popf
pop
mov
adc
push
mov
pop
xor
sub
out
inc
add
divb
mov
test
sbb
es
adc
dec
lds
fistpl
cld
test
ja
sub
add
jge
jbe
and
and
popa
xchg
xchg
or
add
inc
sbb
int
and
inc
into
add
jp
sbb
gs
repnz
ficompl
adc
pop
inc
lea
call
jge
adc
jo
sti
sahf
pop
jb
mov
xor
adc
xchg
nop
outsb
das
imul
movsb
mov
out
fldenv
push
mov
push
xchg
ret
push
adc
xor
xchg
sub
cwtl
je
dec
je
rcl
xor
mov
inc
jle
xchg
nop
add
lret
add
mov
out
adc
idivb
rclb
shlb
jl
sbbb
mov
popw
mov
mov
mov
pop
jbe
add
cmp
popa
jge
and
inc
fstpt
xor
cmp
sbb
jbe
arpl
int
test
rorl
push
stc
and
std
xor
iret
push
inc
addr16
pop
or
and
jl
or
lret
fbstp
mov
mov
sbb
mov
sbb
xor
pop
mov
fcompl
or
jecxz
movsl
jle
js
mov
dec
sbb
sbb
pop
jle
cmpsl
sahf
lds
sbb
xor
fidivs
scas
fwait
cmp
jns
and
or
jecxz
enter
jl
jno
enter
xor
ljmp
jnp
jne
inc
mov
call
adc
rcrb
stos
in
aad
cmc
or
sbb
outsb
in
sahf
jo
mov
out
inc
test
adc
cmp
cmp
dec
xchg
mov
test
adcl
test
mov
mov
dec
pop
sub
jmp
add
mov
jl
rcrb
sarb
cs
scas
pop
mov
in
mov
xor
rcll
and
mov
mov
xchg
fs
js
adc
je
jecxz
xchg
mov
les
xchg
add
addl
pop
push
jo
push
mov
pop
xchg
cmpsb
cli
mov
testb
inc
xchg
rcll
lcall
mov
sub
mov
push
cmc
pop
cmpsl
shll
and
push
cmp
pop
je
mov
jp
sahf
fwait
xlat
je
inc
movzwl
cmpsb
jno
movsb
cmpsb
mov
ja
lods
inc
arpl
lahf
testb
fsubl
mov
push
cltd
pop
sbb
xchg
push
jnp
dec
push
divl
insl
out
push
aam
jbe
insb
mov
scas
push
push
movsb
jle
repz
mov
repz
jmp
ficoml
inc
sarb
mov
imul
xor
push
mov
sub
or
negb
add
jbe
ss
jl
add
adc
fstps
and
popf
aam
int3
inc
pop
push
outsb
pusha
or
dec
mov
add
movsb
nop
cmpsl
add
mov
mov
cltd
cmp
je
cs
out
lock
andl
mov
ds
add
xchg
pop
xchg
inc
dec
ja
pusha
hlt
aaa
push
pop
out
sbb
pop
pop
or
dec
lret
adc
jb
and
out
movsb
cmp
mov
cli
push
ss
in
das
push
bound
mov
jns
jns
sub
pop
arpl
data16
out
pop
lods
test
pop
ljmp
xor
dec
int3
mov
push
mov
pop
daa
enter
lea
jo
cld
scas
arpl
mov
aad
dec
push
xchg
jae
sub
cltd
and
out
adcl
roll
inc
popa
dec
faddl
xchg
ret
out
cwtl
add
jbe
adc
aam
loop
or
sub
arpl
xchg
xchg
lahf
out
stos
sbbb
pop
sub
pop
or
pop
aaa
or
ret
cmp
arpl
push
iret
scas
dec
push
xor
incl
jne
xor
cmpsl
mov
and
mov
or
mov
repnz
popa
inc
divb
pop
cmp
and
insb
fbld
or
add
pushf
jne
in
inc
ja
mov
adc
lret
lock
mov
lea
push
push
inc
sub
pop
cs
scas
push
iret
pop
test
out
imul
inc
and
arpl
push
mov
push
mov
dec
enter
lea
or
addl
sbbl
pop
mov
push
mov
stc
push
popf
data16
inc
cmpsb
orl
in
aas
mov
icebp
insl
js
hlt
push
cwtl
outsb
test
cs
sbb
aas
fdivl
add
mov
popa
mov
sub
cmp
aaa
scas
push
and
adcb
push
inc
les
jne
and
mov
xchg
movsl
fstl
pop
jl
mov
lea
das
adc
std
push
shlb
adc
push
dec
mov
lcall
pop
adc
nop
scas
xchg
xor
adc
stos
fidivs
inc
sub
cmpl
fisubrs
inc
int3
inc
and
xchg
sbb
scas
adc
mov
sub
push
inc
es
push
jl
pop
and
popa
xor
stos
gs
jbe
xchg
outsl
cld
in
enter
int
add
hlt
push
adc
pop
int
and
pop
adc
popa
movsl
mov
add
sbb
dec
jmp
jmp
fsubl
stc
pop
add
ja
xor
xor
out
sbb
cmp
jb
xlat
cli
ret
and
push
mov
pop
push
mov
jp
lret
in
iret
sub
cmpsb
adc
aaa
pop
xor
bound
lea
jg
addb
sbb
xor
enter
inc
xchg
inc
aas
loopne
cli
stos
sti
and
adc
xor
sub
xchg
cs
add
push
cmp
mov
cmpsl
fildl
bound
in
pop
dec
scas
mov
not
push
aas
pop
cmp
je
pop
scas
loope
insb
xor
adc
dec
ficoms
or
mov
jmp
jno
mov
ss
outsl
ret
push
test
test
aas
xlat
xor
sub
dec
lock
bndstx
and
in
inc
jbe
fstpl
ja
je
inc
mov
add
fstpt
andb
aad
out
xchg
xchg
dec
pusha
add
xor
gs
push
ss
mov
test
inc
add
pop
adc
jns
stos
insb
fildl
in
cmpb
adc
imul
push
sbb
lea
pop
popf
stos
xor
sub
nop
push
fnstsw
pusha
insl
repnz
mov
and
jmp
sub
add
dec
lret
mov
push
pushf
rep
cmpsb
inc
inc
dec
dec
inc
in
add
arpl
mov
ret
clc
and
adc
nop
mov
pushf
xchg
jb
cmp
xchg
out
insl
call
mov
cli
add
jg
mov
loopne
call
out
xchg
mov
ljmp
nop
xchg
ret
in
jecxz
add
push
mov
call
mov
add
outsl
dec
pop
jmp
cmp
bound
idivl
out
out
test
add
inc
xchg
hlt
or
lret
sbb
inc
xor
push
imul
pusha
dec
popw
ss
andl
ja
je
aaa
mov
cli
icebp
jnp
xchg
insb
or
repz
add
out
xchg
lret
adc
xchg
push
and
out
mov
adc
test
mov
bound
ja
imulb
std
mov
and
mov
ror
xor
ficomps
sub
lds
test
and
adc
outsl
jnp
xchg
call
mov
outsb
xor
mov
out
lcall
or
sub
fdiv
test
push
test
add
or
fadds
popl
jnp
pop
cmpsl
mov
sub
lret
mov
std
mov
stc
fwait
int3
xor
dec
inc
xor
enter
ficompl
push
in
lock
gs
pop
push
scas
sbb
or
daa
push
cmp
rclb
mov
sub
stos
mov
mov
cmp
push
push
fmul
mov
fidivl
lret
xchg
sub
xchg
loopne
add
pop
popl
jbe
sti
xor
jno
aam
subl
inc
or
mov
mov
bound
fwait
jbe
adc
mov
sahf
xor
aas
or
daa
or
pop
xor
dec
clc
jg
sub
and
or
daa
movsb
imul
jecxz
xchg
mov
cmp
jne
push
adc
xchg
mov
add
xor
sub
add
add
xor
pop
es
pop
dec
jge
ja
jno
push
xor
or
add
pop
and
dec
jp
je
insl
cmp
fs
prefetchwt1
popa
sub
es
pop
dec
jge
ja
jno
push
fs
jecxz
loopne
in
push
sub
jmp
in
.byte
.byte
movsl
