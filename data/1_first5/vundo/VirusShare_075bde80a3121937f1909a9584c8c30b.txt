add
pushl
call
mov
push
push
push
mov
mov
mov
mov
mov
call
pop
xor
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
movzwl
xor
mov
inc
cmp
jl
cmp
jg
xor
push
push
push
push
pushl
call
push
call
test
je
orl
jmp
andl
push
push
push
mov
call
xor
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
and
ret
int3
int3
int3
int3
int3
mov
push
mov
cmpl
je
orl
jmp
andl
pop
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
push
push
mov
call
movl
movzwl
movl
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
testb
push
push
push
push
push
mov
push
je
push
jmp
push
pushl
call
push
call
mov
push
push
mov
push
push
pushl
call
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
push
pushl
call
mov
call
mov
push
push
push
pushl
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
pushl
pushl
push
push
call
add
pushl
call
cmpl
jb
mov
leave
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
push
push
push
pushl
call
push
pop
pop
ret
push
mov
sub
push
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
push
pushl
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
mov
push
push
push
call
mov
call
push
push
push
mov
call
lea
push
push
push
call
add
mov
mov
push
push
push
call
push
push
push
push
push
pushl
call
pushl
call
push
push
pushl
pushl
pushl
call
push
push
push
push
push
call
pop
pop
jmp
lea
push
pushl
call
mov
lea
push
call
pop
push
lea
push
push
push
push
call
lea
push
pushl
call
jmp
push
call
xor
pop
leave
ret
push
mov
sub
mov
andl
andl
mov
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
andl
push
mov
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
sub
cmpl
mov
push
je
cmp
je
lea
push
push
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
test
jne
mov
not
mov
or
mov
lea
push
call
mov
pop
leave
ret
add
add
add
add
add
outsl
and
out
dec
pop
loopne
add
add
add
add
fldl
add
insb
add
pusha
popa
jge
add
add
add
add
add
in
push
add
push
add
add
add
insb
add
jb
push
jb
add
dec
pop
add
push
std
movl
add
sahf
xor
pop
push
lea
add
add
in
push
cld
addb
cmp
push
in
imul
je
test
cld
pushl
in
add
push
incb
push
insb
leave
lea
or
in
outsl
std
add
adc
inc
ror
cmp
fcoml
in
add
add
add
popl
incl
fildl
insb
popf
cmp
add
add
and
mov
and
adcl
inc
sarb
icebp
clc
decl
add
stc
pushl
dec
xor
add
adc
add
add
add
add
in
js
add
outsl
add
pop
lcall
add
add
add
imul
imul
je
add
gs
gs
outsb
jae
add
dec
add
jmp
popa
lahf
imul
add
push
jne
popa
jno
jns
outsl
imul
push
insb
dec
insb
push
popa
push
add
add
imul
flds
add
add
dec
add
frstor
inc
iret
int3
adc
imul
push
and
cmp
sub
sbb
dec
std
mov
iret
sub
pusha
xor
add
xorb
dec
in
xchg
into
mov
popf
loopne
inc
lea
insb
mov
mov
arpl
pop
lods
ror
push
outsb
ljmp
in
mov
leave
ret
push
mov
popf
xchg
mov
fs
out
cld
ss
out
adc
sbb
inc
rolb
sbb
popf
jl
pop
sub
push
mov
cwtl
sbb
mov
out
or
aam
xor
aas
adc
fcomps
enter
lods
imul
cld
in
ss
lods
inc
pop
aad
xchg
addr16
sbb
sbb
out
mov
and
pop
xor
cld
xor
pop
pushl
pop
fwait
mov
out
push
loop
iret
xor
add
orb
movsl
orl
fsubr
cmpsb
fdiv
or
pop
pop
adc
fsubs
in
into
mov
pop
jl
loop
mov
hlt
jl
jge
cs
inc
scas
cmp
cmp
in
push
sub
loope
adcl
lods
scas
in
mov
jp
aam
adc
jo
das
sbb
or
cmp
lea
xchg
xchg
dec
push
add
pop
test
push
aaa
stos
mov
mov
repnz
mov
shlb
mov
push
and
pop
mov
or
cmc
test
xchg
imul
iret
cmp
cmp
fs
dec
push
sbb
jle
mov
insl
stos
je
addr16
outsb
xchg
int3
jb
dec
mov
pop
adc
insb
fdiv
icebp
mov
mov
mov
je
sub
xchg
add
cmpsl
hlt
jo
sbb
fidivl
dec
inc
mov
dec
int3
jle
mov
insb
xchg
cmp
rol
jae
bound
idivb
sub
adc
push
lods
mov
test
imul
fnstenv
stos
cli
decl
leave
in
popf
out
sti
mov
cld
outsl
xchg
lock
shr
push
stos
mov
popa
push
stos
dec
xor
fldcw
notl
adc
inc
je
and
imul
jbe
addr16
dec
aam
ret
sub
mov
and
aaa
sub
fdivl
pop
mov
sub
lods
das
jnp
xor
test
or
mov
shr
ret
movsl
incb
fadd
bound
jmp
testb
cli
daa
cli
or
pop
test
test
xorb
dec
cmp
jnp
imul
imul
lods
or
jbe
and
adc
push
fmul
ss
lret
jge
push
loope
addps
repnz
xchg
push
inc
insb
dec
mov
xor
pop
pop
cmpsl
sahf
cmp
dec
ficoms
lahf
leave
xlat
faddl
xor
mov
jns
test
sahf
dec
sub
cmp
push
iret
dec
dec
or
sbb
repz
pop
enter
mov
das
mov
xchg
xor
scas
dec
push
fidivs
test
cs
adc
hlt
add
jge
mov
mov
adcb
xor
dec
xor
mov
push
mov
pop
mov
adc
dec
cmc
sub
into
push
loopne
lret
xor
sub
orl
mov
in
movsl
adc
cmpsl
imul
mov
xchg
sbbl
lret
scas
imul
insb
push
fs
cmp
shlb
mov
jp
or
xchg
push
mov
mov
jnp
imul
sub
int
inc
and
popf
and
jno
popf
insb
sbb
add
add
sub
push
add
movntps
ret
lcall
and
mov
and
mov
lds
mov
jg
sub
test
add
in
repnz
call
cli
fwait
cmpsl
and
out
in
adc
push
push
and
mov
inc
mov
push
add
jecxz
call
movsb
mov
in
mov
outsb
dec
iret
int
ss
mov
cmp
sub
and
push
aaa
dec
rcrl
pusha
cmp
xchg
fimuls
movsb
sbb
mov
out
xchg
fsubl
dec
cmpsb
xorl
rclb
mov
sahf
push
jecxz
aas
loope
lahf
cwtl
xchg
fstps
push
shrb
pop
jnp
cmc
cmc
jno
adc
movl
repz
out
mov
cltd
sub
pop
sbb
mov
xchg
arpl
mov
mov
inc
jno
int3
mov
sbb
inc
stc
popa
mov
pop
mov
cmpsb
sahf
cmc
cmp
stos
out
imul
neg
arpl
cmp
gs
leave
mov
lea
ss
shl
mov
mov
mov
imul
jnp
cmc
test
in
icebp
add
rcrl
ss
lret
sahf
inc
xchg
mov
int
cmpsb
and
push
testb
dec
and
ljmp
test
mov
out
mov
or
inc
cwtl
mov
cmp
dec
sbb
lret
jns
lret
pop
push
imul
mov
push
xchg
sbb
aas
rclb
xchg
lret
idivb
mov
adc
xchg
push
shll
icebp
add
fnstsw
bound
loope
pop
jl
lahf
add
add
sub
or
jae
es
ljmp
call
inc
aaa
out
cmovae
push
jl
ret
cmp
in
mov
cmp
add
lods
xchg
aas
sbb
js
mov
xchg
repz
aaa
outsb
and
push
or
stos
enter
outsb
sub
and
cltd
jmp
jp
insb
fimull
aaa
cmp
or
mov
cmp
lock
mov
mov
xchg
lcall
jne
mov
rcrl
mov
sbb
inc
pop
lods
push
dec
ss
aad
jl
nop
pop
lret
mov
inc
adc
dec
adc
out
mov
or
out
nop
push
cmp
cltd
popa
into
addr16
pushw
in
and
push
sbb
inc
jae
lods
inc
xor
addr16
adc
jp
and
and
push
and
xor
adc
sub
enter
stos
jecxz
add
mov
or
inc
ljmp
sbb
outsb
or
addr16
inc
icebp
fsts
sub
adc
in
jb
jmp
test
and
in
sub
fwait
iret
scas
mov
xchg
aas
mov
mov
adcb
pop
add
int3
test
xchg
and
movsl
push
jle
cmp
fimull
xchg
xor
fs
mov
repz
inc
call
into
inc
dec
inc
lods
inc
hlt
or
dec
and
je
leave
cmc
in
push
xchg
incl
shlb
jb
inc
mov
cs
pop
enter
pop
shl
je
push
test
and
dec
adcb
into
adc
int3
addr16
jg
adc
stc
and
xchg
jge
popf
sub
cwtl
xchg
test
jp
jno
or
mov
in
shr
cmp
roll
fdivr
xor
dec
test
movsb
mov
add
pop
add
movsb
push
xchg
jle
int
in
ss
rcrl
or
add
inc
lods
mov
je
stos
outsl
jne
fs
adc
xor
lods
pop
scas
cmpsb
xor
mov
sbb
jne
dec
std
adc
inc
mov
add
sub
aam
sti
in
outsb
pusha
mov
scas
out
mov
stos
sti
in
scas
mov
mov
mov
cmp
test
rcr
nop
cmp
push
jo
and
jbe
pop
jae
clc
stos
mov
sbb
add
or
movsl
sub
push
or
push
adc
push
bound
in
in
or
add
outsl
in
aaa
daa
sbb
fs
mov
rorb
and
shl
fisttpll
fsincos
inc
bound
cwtl
les
test
dec
dec
into
fimull
popf
or
pop
icebp
imul
or
adc
mov
and
ror
out
jbe
ljmp
test
xor
in
xor
or
mov
sbb
jo
andb
and
out
mov
dec
nop
fwait
daa
and
xchg
adc
push
mov
test
cwtl
gs
mov
push
dec
mulb
call
add
cmp
into
xor
cmpsb
fsts
adc
aaa
xchg
adc
mov
lret
js
adc
or
cli
rcrb
mov
ja
xor
mov
iret
sub
pop
xchg
jmp
icebp
adcl
mov
sarb
push
xchg
xchg
cmp
sub
out
lds
dec
cmpsl
in
or
push
xchg
ret
or
sahf
sbb
les
ljmp
je
fsubs
inc
out
in
cmpsl
je
mov
in
push
jno
xor
ja
or
repnz
dec
lcall
fadds
sub
xchg
mov
mov
loopne
std
ror
add
mov
jne
enter
cmpsb
mov
insb
scas
mov
out
into
out
jp
dec
xor
dec
adc
lock
and
pop
jl
int
fsts
popa
xor
nop
mov
cmp
cltd
sbb
andb
mov
repnz
insl
int3
lcall
rol
movsb
mov
leave
popf
add
test
cs
addl
and
mov
enter
add
lock
std
ljmp
shll
adc
loop
clc
xchg
addr16
jl
xchg
jae
push
cltd
add
addb
or
inc
adcl
icebp
leave
jnp
mov
xlat
xor
shrl
pop
add
and
int3
in
aaa
xchg
xchg
jo
jp
push
jns
sub
lds
ficompl
xor
scas
fisubl
xchg
iret
outsb
pop
jmp
popf
cltd
aam
push
int3
and
mov
pop
mov
dec
push
xchg
loop
fbstp
pop
jno
adc
das
xor
jle
jnp
dec
rorb
out
mov
adc
pop
xor
jle
lret
adc
call
xor
dec
aaa
jo
rcrb
pushf
add
call
mov
xchg
loop
das
push
pop
and
add
repnz
pushf
adc
pusha
imul
out
les
sbb
cmpsl
dec
pushf
jb
outsl
mov
add
std
loop
js
sub
iret
lods
fs
je
cmp
dec
movsb
lea
dec
sar
sbb
imul
stos
mov
push
imul
xchg
leave
add
movsb
leave
mov
xlat
jae
imul
xchg
pop
aas
addr16
ss
loopne
push
adc
ds
cmp
add
add
xchg
sbb
inc
ret
cmpl
jo
sbb
jge
jle
loop
shlb
jle
or
iret
jo
xchg
cmp
mov
add
orl
cmp
fisubl
and
sub
fldl
int
loopne
lret
xlat
fnsave
pop
mov
dec
test
enter
scas
fdivrl
loope
lods
xchg
nop
cli
jge
mov
fld
xchg
jmp
mov
mov
bound
scas
cmp
cld
cmp
mov
sahf
adc
jge
push
out
mov
repnz
sbbl
xchg
aaa
sarl
sbb
js
iret
xchg
test
pusha
mov
out
in
or
cmc
mov
adc
mov
les
pop
jb
ret
inc
fucomp
mov
imul
inc
cltd
fcoml
pusha
push
addb
data16
inc
or
fsubrp
pop
movsb
push
cli
mov
xchg
push
mov
mov
pop
rcrb
fcoms
aaa
cld
js
lahf
or
mov
jno
popa
mov
mov
dec
xchg
mov
fsub
addr16
pop
push
fwait
iret
shr
xchg
inc
jl
xorb
popa
repz
loope
repnz
es
es
mov
dec
xchg
push
xchg
mov
out
inc
lea
mov
adc
cs
stos
mov
mov
aaa
xchg
xlat
es
not
push
jp
leave
das
pop
inc
cmc
jmp
inc
gs
pop
adc
sbb
negl
sbb
pop
cld
imul
sub
addr16
xor
andb
push
neg
lahf
push
adc
popa
ss
inc
mov
adc
pop
shlb
movsb
cmpsl
or
fs
pop
pop
ljmp
and
cmpsb
push
xchg
fisubl
data16
add
cmp
js
out
stc
cmc
mov
push
daa
jle
mov
cwtl
mov
xchg
imul
loope
js
adcb
scas
push
cmc
xchg
andl
inc
inc
jecxz
mov
ds
test
mov
mov
js,pt
inc
cmpsl
push
jge
dec
sub
cli
outsb
movsb
stos
sub
adc
mov
cld
xchg
mov
add
mov
lods
sbb
das
aad
arpl
xor
lock
xchg
add
push
jecxz
imul
push
xchg
add
dec
jne
sbb
xor
subb
testb
pop
push
xor
pop
push
or
into
cmpsb
sbb
push
pop
sarl
aad
inc
and
mov
icebp
test
adc
aam
mov
cmp
icebp
adc
cld
cmp
cmpsl
cmp
popa
xor
push
sbb
inc
sbb
pop
push
loopne
mov
fs
jns
icebp
inc
cwtl
bound
mov
mov
dec
pop
inc
cwtl
xlat
loop
and
mov
test
mov
mov
test
stc
push
and
sbb
xchg
xchg
pop
sbb
out
xchg
xchg
idivb
jbe
mov
test
or
mov
popa
setns
jnp
orb
xchg
mov
pop
xchg
dec
popa
test
pop
jmp
int3
jecxz
in
incw
mov
movsl
dec
adc
out
addr16
sub
push
jno
inc
mov
rcr
jno
bound
sbb
mov
lcall
out
push
int3
insl
jp
or
out
addr16
and
ret
sbb
pop
mov
or
jae
aad
pop
dec
sbb
pop
js
loopne
xlat
je
fistl
cmp
jge
fcoml
mov
mov
int
pop
adc
int3
inc
clc
bound
cmpsl
pop
fisttpl
mov
xlat
iret
mov
add
fucomip
jmp
or
pop
pop
outsl
clc
adc
xor
jge
xchg
jo
mov
and
mull
and
movsb
fidivs
je
mov
test
imull
lea
dec
iret
popf
daa
add
popf
mov
jno
sub
iret
popf
push
mov
nop
movsb
pop
dec
fs
jecxz
int
and
adc
mov
sbb
sbb
movsbl
and
sti
sub
aad
mov
adc
in
fldt
fsts
mov
enter
sbb
lcall
mov
dec
jns
daa
add
inc
lcall
movsl
arpl
sbb
pop
mov
loopne
push
mov
stos
in
lods
mov
aaa
into
fmuls
in
sub
push
loopne
cmc
mull
shll
pop
popa
mov
or
push
pop
pusha
pop
aaa
out
or
sbb
push
stos
inc
or
jp
push
or
adc
push
inc
cmpsb
cwtl
jl
mov
jns
xchg
cmpsb
lock
sbbl
push
and
shll
xchg
mov
jl
mov
dec
cmc
test
adc
fisubl
fldenv
lds
out
stc
mov
std
adc
movsl
mov
add
push
push
dec
push
jp
push
sub
inc
jp
xor
pop
ljmp
jmp
mov
test
jl
std
add
into
inc
pop
adc
or
jecxz
idivl
call
lock
leave
push
push
rorl
gs
inc
inc
cmp
rcr
cmp
dec
push
loope
mov
sub
add
sbb
xchg
lret
out
mov
push
js
pop
push
stc
dec
ret
jp
mov
cmp
sub
or
dec
adc
stos
jns
es
enter
test
mov
repz
pop
adc
insl
xchg
mov
arpl
or
insb
push
rol
fisubrl
das
loopne
jle
repnz
movsb
loopne
outsb
pushf
test
push
jecxz
dec
sbb
hlt
repz
cmp
jns
inc
inc
jne
mov
std
dec
dec
js
sarb
push
int3
xor
fwait
push
scas
adc
std
je
std
xor
popf
rcrb
add
out
cmp
outsb
mov
pop
cmp
mov
dec
test
insl
jne
sbb
adcl
mov
mov
push
nop
jmp
push
jle
out
mov
push
lcall
ds
loopne
movsb
cmp
test
or
add
test
sbb
xchg
call
jnp
fsubr
push
in
sbb
cmp
mul
test
cli
and
cmp
enter
xor
pop
scas
jns
icebp
cli
aad
shlb
and
push
outsb
sbb
mov
adc
icebp
push
rcrl
scas
cli
call
insb
xchg
in
add
xchg
into
stos
and
cmpsb
gs
shl
jno
dec
push
and
jmp
out
aad
fdivs
dec
fld
outsl
rorl
js
pop
pop
out
cli
jo
aas
andl
test
mov
and
pop
insl
ficoms
pop
dec
shll
adc
pop
pop
sbb
cmc
mov
int3
push
pop
popa
ss
and
pop
fwait
call
inc
or
adc
xchg
jl
jge
fcoml
ror
cmpb
mov
sbb
mov
hlt
shr
andb
or
mov
cli
subb
fnstcw
fsubl
imul
rolb
mov
pop
scas
or
dec
dec
or
sub
shll
lds
mov
push
movsl
fwait
imul
mov
mov
sub
das
cmp
sbb
inc
lahf
sub
out
sub
jbe
fstps
jb
scas
hlt
test
dec
xchg
loopne
and
cmp
and
pop
xchg
dec
adc
cmp
push
lret
mov
jns
and
sahf
in
mov
iret
rcrb
stos
cmc
adc
ud1
shl
push
sbb
jo
fiaddl
daa
xchg
cmp
mov
push
je
rolb
mov
inc
cmp
scas
popf
lock
in
leave
movsb
pushf
lods
cmp
cli
jo
sub
loopne
in
inc
movsb
mov
outsb
add
cli
iret
lcall
or
cs
clc
and
add
cltd
in
std
fldl2t
xchg
pop
mov
cmp
shll
xchg
mov
inc
lret
loop
arpl
push
fiadds
sub
cltd
xchg
in
xor
int3
nop
sub
xchg
dec
push
xchg
movsb
mov
adc
mov
jle
jo
insb
dec
arpl
cmpsb
mov
push
adc
push
sub
daa
mov
cld
inc
push
pop
add
xchg
push
xchg
inc
out
add
push
dec
jae
out
dec
and
in
mov
xchg
jae
pop
sbb
scas
xor
fcomi
test
jmp
mov
sti
daa
in
cwtl
cwtl
cld
ja
lds
cmc
icebp
cmpsl
or
scas
pop
bound
jnp
mov
xchg
or
lret
jbe
fcomp
jle
sbb
jg
push
out
mov
jo
lret
add
xchg
rolb
loop
pusha
sbb
imul
test
mov
enter
sub
fistps
and
and
jp
mov
sbb
sbb
adc
call
into
dec
mov
bswap
push
mov
mov
mov
and
icebp
pop
jnp
and
shll
fisubrs
xor
mov
jnp
inc
test
rcr
aaa
add
cmp
dec
sub
mov
push
mov
loopne
negb
gs
loopne
or
add
mov
int
cmpsl
mov
repnz
adc
ss
mov
cmpsl
shll
clc
shrl
inc
cmp
jecxz
mov
pop
imul
sbbl
lds
push
mov
packssdw
mov
push
mov
push
loope
pop
and
adc
shll
xchg
adc
cmp
hlt
ror
cwtl
stos
es
jge
xor
jbe
mov
dec
pop
push
pop
sub
in
shll
pop
pop
and
xchg
mov
ljmp
add
add
jmp
add
add
add
leave
add
pop
add
mov
addb
nop
add
addb
rolb
subb
lock
add
add
add
add
add
pop
add
add
in
add
adc
add
addb
add
stos
stos
add
ja
xchg
mov
incl
incl
add
int
popa
gs
add
add
add
add
fwait
add
add
imulb
mov
add
je
add
and
add
outsl
data16
add
add
xchg
add
add
add
movsl
add
add
add
pop
jae,pn
push
arpl
je
fisttpl
add
jne
push
inc
aaa
add
hlt
test
mov
mov
adc
mov
lea
inc
testb
cs
fwait
jecxz
adc
add
clc
add
xor
jge
out
mov
lea
decl
mov
gs
inc
rolb
jbe
cmpl
add
adc
xor
push
push
call
cmp
add
pop
adc
adc
mov
lea
add
adc
mov
clc
inc
roll
add
incl
cmp
add
add
push
lock
popl
or
add
add
fiaddl
addb
add
add
push
roll
sub
clc
add
add
push
imul
lcall
gs
inc
add
arpl
outsl
jg
add
inc
push
popa
gs
and
add
gs
addr16
push
dec
jb
inc
mov
push
fs
imul
add
add
add
stos
cmpsb
cmp
add
add
mov
add
add
aaa
ficompl
mov
push
adc
mov
mov
addr16
adc
xchg
popa
adc
dec
mov
mov
cli
cwtl
bswap
pop
dec
dec
cmp
fidivrs
xchg
push
lods
ja
mov
ret
gs
and
dec
inc
fidivrl
icebp
rol
xlat
or
add
pop
pop
repnz
xor
adc
inc
inc
dec
fistl
shlb
adc
imul
mov
fs
repz
pusha
movsb
inc
insb
decb
inc
gs
lods
cmc
add
or
pop
mov
and
or
dec
jno
test
mov
loopne
mov
push
cli
pop
inc
mov
xchg
adc
dec
adc
xchg
pop
sub
add
push
jno
negl
pop
add
push
cli
lock
lahf
addr16
das
push
push
push
push
push
dec
adc
lea
sub
aad
cltd
jne
or
cmc
and
push
rcl
jp
jb
pop
cmp
dec
or
pop
inc
shrl
loopne
xor
inc
jbe
call
xchg
jbe
xchg
add
xchg
push
fs
aaa
pusha
lock
push
leave
inc
subl
data16
mov
jno
mov
out
xchg
shl
sbb
inc
adc
xchg
push
jmp
cmpsl
pop
scas
addr16
aas
in
iret
and
ljmp
call
repnz
cmp
dec
test
mov
sbb
dec
fisttps
out
pop
movsb
push
jecxz
pop
cmc
fldcw
sub
test
int
mov
or
loopne
xchg
sbb
cmpsl
push
aas
pushf
jl
popl
jne
loopne
sub
mov
jno
in
gs
lods
es
test
jns
push
inc
mov
xchg
push
jmp
and
shlb
inc
imul
popa
mov
pop
je
inc
pusha
cltd
mov
out
enter
push
outsb
fcmove
pop
rcrb
das
push
pop
in
xchg
cmp
out
test
out
or
mov
in
and
in
adc
push
movsl
push
jge
dec
or
mov
das
xchg
out
imul
mov
jp
jne
or
or
cmp
leave
jnp
aaa
dec
push
xchg
xor
sub
lret
cs
sub
sarb
push
adc
fsubp
aam
mov
roll
xor
jno
xchg
cmp
or
mov
loop
mov
xor
cltd
adc
enter
mov
lcall
fwait
aaa
cld
stc
mov
or
jmp
add
stos
pop
sub
data16
hlt
push
iret
ficoml
xchg
mov
mov
mov
decl
add
scas
jae
arpl
jle
and
dec
test
int3
loop
mov
sub
and
dec
dec
and
loop
cli
movsb
das
jae
jmp
or
mov
sti
xchg
mov
mov
pop
dec
call
int3
popa
andb
and
sbb
push
ret
cld
es
push
sub
rcrl
mov
xchg
daa
scas
push
rolb
inc
sti
mov
xor
add
sub
push
sub
cltd
push
pop
sarl
lods
inc
mov
out
test
aaa
mul
dec
rolb
cmpsb
pop
pop
xor
imul
loop
enter
call
repnz
pop
addr16
test
sbb
xchg
repz
mov
fwait
mov
in
lock
paddw
xchg
scas
inc
in
and
dec
cmp
repnz
cld
mulb
xor
int
push
xor
lcall
scas
mov
pusha
push
in
xchg
push
adcl
int
mov
push
in
outsb
sub
xlat
push
sbb
add
push
repnz
inc
fsub
add
out
inc
movsl
in
sub
jl
adc
push
push
enter
push
imul
cmp
insl
clc
xor
loop
xchg
sbb
ss
mov
mov
lock
push
adc
enter
mov
loope
inc
lcall
fstps
and
xchg
shll
insb
clc
and
mov
leave
push
xor
ret
jmp
in
and
jne
arpl
mov
icebp
mov
lcall
pusha
test
jmp
cmp
mov
push
mov
loope
inc
dec
dec
add
iret
xlat
mov
outsl
sub
xchg
decb
aaa
xchg
fsubr
popf
sub
push
insb
mov
fwait
jg
lea
mov
outsl
subl
jno
xchg
jb
pop
je
loopne
cld
mov
fistps
cmp
loop
cmp
inc
jge
das
mov
mov
aam
enter
cmpsl
cmpsb
imul
mov
cmp
mov
scas
test
or
dec
stc
notl
aad
sbb
shr
sub
aas
mov
imul
mov
sub
adc
sub
inc
xor
lret
out
adc
xchg
push
enter
or
lock
mov
xchg
or
cli
loopne
jg
cmp
mov
roll
dec
sbb
sbb
add
outsl
outsl
dec
imul
jbe
sub
ficoms
ss
movsb
int3
faddp
es
sub
imul
movsl
xchg
mov
add
mov
fcmovnb
lock
jae
cwtl
sub
xor
movsl
adc
cld
in
mov
mov
dec
cmp
cmp
jle
lret
pop
xchg
nop
pop
cmp
cwtl
stc
sub
ret
cmp
sub
mov
jmp
sti
mov
rol
xlat
or
ret
fmuls
arpl
jecxz
lret
or
lea
xor
test
jle
lea
ficomps
add
loopne
adc
int3
add
movsb
std
aam
and
push
int
or
mov
cmpb
and
inc
cmpsl
lahf
lcall
mov
inc
inc
mov
dec
inc
sbb
mov
inc
shrb
dec
lret
pop
add
mov
into
das
xchg
lret
mov
adc
pushf
jo
dec
inc
dec
and
fidivs
rep
sbb
add
fs
cmp
xor
pop
dec
mov
clc
movsb
sub
and
jnp
cmpsl
or
pushf
scas
mov
mov
pop
test
mov
add
adc
insb
shl
paddw
or
xor
pop
xchg
mov
test
and
movsb
and
out
fsub
loopne
pusha
push
mov
pop
push
add
in
insb
dec
or
jno
ficoms
add
or
or
inc
aam
push
mov
and
daa
sbb
popf
fcmovnb
fbstp
add
sbb
into
mov
pop
mov
sub
cltd
addr16
imul
fwait
or
inc
out
mov
xor
adc
lods
js
scas
xor
adc
loop
mov
js
jbe
mov
shll
mov
mov
jl
push
in
add
fbstp
std
jmp
repz
aad
loopne
cmp
xchg
xchg
sub
and
das
fcoml
inc
xor
sub
push
cwtl
shll
in
imul
add
jle
push
lahf
adc
xor
sbb
xor
ds
aad
fld
das
mov
push
out
mov
adc
movb
cld
cli
and
das
fidivrs
inc
lea
sbb
mov
shlb
xor
inc
inc
push
ds
movsb
repz
xorb
dec
pop
dec
cmp
cld
cltd
lock
in
mov
lret
in
stos
call
push
int3
icebp
adc
fisubrl
out
push
scas
movsl
test
xchg
test
in
adc
ret
pop
imul
shlb
js
test
int
and
lds
clc
pop
aaa
dec
push
mov
or
dec
push
xor
cmc
mov
mov
divl
out
jb
insb
in
mov
loopne
fcmove
rorb
fidivl
push
jb
roll
jnp
add
xor
jae
ja
mov
xor
test
pop
inc
jnp
jmp
outsb
out
stos
pop
enter
in
inc
int3
pop
arpl
xor
out
push
jae
xor
mov
add
negl
mov
imul
mov
rcl
mov
mov
jb
shl
sub
lds
stc
jp
dec
popf
xchg
into
sbb
pop
inc
pop
dec
push
bound
lods
inc
inc
or
adc
data16
nop
ret
mov
mov
xchg
fcompl
jmp
jle
fistpll
push
or
in
push
stc
inc
stc
fs
aaa
sahf
dec
lods
lcall
shl
mov
xchg
xor
add
fsubrs
mov
push
aam
sub
aam
xchg
pop
cmp
test
xchg
int
fwait
shll
and
inc
and
cs
lds
push
and
and
sbb
push
shrb
or
sub
in
mov
fisttpll
xchg
test
sub
jb
imul
pop
fadd
cmp
in
push
enter
cltd
xchg
cmp
inc
fldcw
fildll
mov
and
mov
mov
lock
xchg
dec
jns
mov
sbb
std
addr16
sahf
xchg
and
lock
aam
or
xchg
push
xchg
jno
fistps
aas
mov
xchg
or
and
inc
outsb
cmp
mov
or
rorb
cmpsl
imul
fucomi
aam
cmp
stos
adc
pop
subl
fdivrs
dec
dec
mov
push
mov
jne
pop
cld
or
inc
fldpi
dec
mov
cwtl
mov
andl
and
mov
xchg
xor
lods
jns
xchg
xchg
aad
in
bound
inc
mov
jno
popa
test
cmpsl
test
add
sarl
hlt
xlat
or
inc
in
inc
jb
inc
cmp
into
adc
xchg
xor
xchg
mov
inc
sub
sti
pushf
inc
push
inc
sbb
cmp
sbb
mov
dec
xchg
mov
cmp
sbb
pushf
sbb
push
iret
dec
and
mov
mov
cmp
push
mov
in
adc
add
ds
dec
aad
call
faddl
mov
in
lcall
aad
in
ja
add
sbb
adcl
test
xor
mov
cmpsb
and
gs
stos
cmp
sarb
mov
int3
ret
int
enter
push
jl
xchg
fildl
inc
lods
negb
ds
sub
inc
outsb
mov
add
aas
mov
pop
inc
sti
xchg
and
imul
sbb
pop
pushl
ss
shr
js
and
jp
lret
std
shrl
mov
push
lret
push
outsl
or
mov
in
in
mov
dec
ljmp
aaa
ja
xor
inc
add
sbb
pop
jmp
add
jmp
mov
push
pop
ds
cld
pop
xchg
lock
lods
add
cmpsb
lds
mov
in
xchg
lods
pop
dec
lods
cld
lahf
jge
xor
and
jns
xlat
ret
mov
int
out
mov
pop
insb
push
jae
insb
xchg
sbb
pop
loop
ret
cmp
mov
aaa
mov
pop
mov
les
pushf
movsb
sbb
adc
scas
pop
sub
xor
in
andl
lahf
mov
es
inc
mov
in
lods
popf
sbb
push
data16
fs
cmpsb
mov
les
or
stos
cld
add
out
bound
cmp
out
push
push
stc
out
push
sub
loop
pop
cmp
mov
add
dec
gs
push
push
imul
jns
mov
lock
sbb
cltd
fs
and
jne
inc
pop
jns
shr
aam
and
mov
push
fisttps
adc
shrl
popa
pop
sti
daa
scas
mul
push
adc
mov
add
sbb
sahf
fdivl
mov
ficomps
pop
iret
int3
adc
pop
aaa
pop
sti
jecxz
pop
or
jnp
imul
jg
inc
xor
xor
in
dec
xor
mov
mov
daa
sub
pop
fildl
enter
call
leave
mov
mov
dec
jecxz
pop
fmull
stc
lret
adc
add
aam
mov
jbe
shll
test
into
ret
xor
popf
dec
cmp
cmpsb
jg
adc
repnz
or
mov
cmp
sbb
popf
popa
vunpcklps
test
pop
popa
addr16
push
cmpsl
lret
jg
ljmp
mov
test
mov
and
jnp
or
adc
jg
push
dec
inc
divl
rolb
fdivs
sbb
push
xchg
rorl
mov
out
repnz
mov
mov
jl
int
push
out
fwait
shrl
and
mov
test
mov
orb
fidivl
ljmp
mov
insb
xor
out
fs
dec
inc
dec
push
push
pop
repnz
jo
inc
subl
jp
fnsave
js
add
or
push
sub
push
std
jge
sub
out
mov
add
jle
js
cmp
and
outsb
xchg
loope
push
movsl
cltd
and
fs
lret
lret
mov
push
dec
stc
in
inc
jp
ret
sarb
cmp
js
mov
sbb
add
push
jo
fdivs
lock
jno
inc
pop
or
ret
in
imul
js
jae
mov
jb
ror
in
jle
xchg
sub
xor
shrl
lds
shl
pop
adc
lret
inc
or
sub
in
stos
sub
int3
mov
push
or
mov
cmp
inc
mov
mov
fnstcw
xchg
push
sbb
mov
test
or
dec
pop
add
fs
cli
sub
ret
dec
sub
call
sbb
daa
lret
sub
sti
xlat
cltd
repnz
pop
xchg
call
sub
push
data16
push
sbb
dec
cmpsl
fwait
ljmp
insl
inc
mov
out
in
mov
lods
cmp
loope
cmove
mov
add
add
inc
mov
dec
sub
std
mov
or
popa
loop
jne
cmpsl
mov
movsb
call
repz
enter
stos
mov
xor
cld
pop
mov
mov
sbb
fldt
call
mov
pop
jae
repz
scas
jmp
cmp
shll
in
sbb
adc
test
les
cld
and
lahf
xchg
sub
push
insl
mov
ss
data16
push
inc
rolb
sahf
pop
ljmp
mov
dec
popf
jno
lahf
in
in
and
scas
outsl
mov
daa
idivl
dec
jp
fisttpll
push
xchg
fsubrp
divb
adc
or
inc
dec
and
sub
fstpt
pop
mov
sbb
inc
jg
xchg
mov
inc
fsubs
pop
movsl
mul
nop
ret
sti
mov
inc
aad
lods
or
rorb
cmc
mov
push
jl
inc
outsb
or
mov
je
loop
lock
dec
je
out
aam
cmp
and
cmp
in
jbe
pop
dec
pusha
inc
cwtl
add
movsl
xchg
lret
fsubs
cmp
jg
inc
lret
adc
outsb
mov
pop
xchg
pop
loope
sahf
fmulp
jb
add
popa
sub
sbb
xor
rcrl
cs
lret
cmpsb
lret
dec
add
fisttpll
adc
and
pop
outsl
add
cmp
das
ret
lods
sahf
mov
fadd
xchg
push
cmpsb
imul
push
mov
jnp
fidivs
push
mov
sar
lahf
mov
adc
or
jb
ret
jecxz
pushf
shl
frstor
fisubs
mov
or
nop
aaa
pop
divl
cmp
stos
mov
jg
subl
out
jmp
mov
cmp
aam
sbb
push
mov
jge
sub
mov
xor
xorb
ror
add
push
pushf
clc
adc
popf
lcall
aam
or
push
int
adc
and
pushf
add
cmpsb
jmp
mov
inc
imul
adc
cmp
dec
hlt
arpl
ret
stos
push
pop
push
push
ja
xor
popl
sti
scas
orb
stos
adc
lret
bound
in
subb
jne
add
das
enter
mov
cmp
add
mov
lock
mov
mov
adc
stos
or
mov
je
aas
call
push
mov
sbb
inc
cmp
fdivp
cwtl
fbld
sub
or
gs
push
or
pop
jl
aad
adc
out
or
xchg
mov
inc
add
or
mov
or
push
mov
outsl
cmpsb
je
jp
aam
add
xchg
call
mov
aaa
push
data16
rcrl
call
aad
xchg
fiadds
add
lret
repz
lret
push
or
sbb
mov
sbb
lea
mov
jge
push
dec
xchg
inc
jne
jae
sub
arpl
movsl
repz
fisubs
xchg
and
popf
inc
int3
or
in
dec
cmp
jp
xor
mov
mov
test
test
adc
inc
or
pop
push
and
movsb
pop
call
ljmp
icebp
jae
sbb
push
popa
xchg
mov
xchg
in
cmp
cmp
push
push
jno
xor
fstpt
xor
ljmp
shlb
sub
stos
stos
stc
mov
dec
mov
lock
inc
ja
mov
cmp
push
and
push
in
sahf
mov
sti
cmpsb
lds
xor
sub
dec
jmp
mov
add
pop
clc
add
push
loope
outsl
push
sbb
cmp
arpl
push
push
cltd
int3
lret
test
xchg
lds
add
cwtl
loop
xor
or
inc
and
fs
lcall
std
adc
in
push
mov
push
or
hlt
inc
lea
jge
and
mov
dec
insb
pop
insl
jnp
mov
insl
and
push
mov
cmp
repnz
push
xchg
push
push
adc
push
div
arpl
xchg
jp
xchg
xchg
cmp
outsl
inc
sahf
cld
mov
xchg
jg
sti
js
or
sahf
pop
pop
stos
insb
lret
aam
jo
mov
stos
mov
cmp
test
xlat
mov
and
pop
pop
jno
jp
pop
testl
add
adc
repz
out
cmp
xor
jmp
xchg
inc
dec
dec
das
ss
addr16
sahf
sbb
std
push
in
cmp
dec
lock
sub
cmp
repnz
pop
in
mov
inc
jns
cmpsb
stos
jns
inc
adc
push
mov
jb
ss
clc
add
jp
push
testb
add
mov
in
mov
push
cwtl
push
mov
fucomp
jge
cmp
sbb
pop
xchg
popa
icebp
fmull
adc
mov
inc
inc
pop
xor
nop
shll
stos
sbbl
push
rclb
and
or
dec
int
aas
enter
lret
xchg
sbb
dec
inc
mov
jno
xchg
inc
loopne
fsubrl
xor
je
mov
xchg
mov
pop
imul
int
push
out
jp
mov
xor
xor
push
dec
and
mov
mov
jle
sub
pushf
jb
stos
mov
mov
cli
imul
xchg
push
mov
insl
inc
cli
fs
mov
stos
lea
inc
in
adc
jge
and
push
inc
fdivr
mov
xor
xchg
cld
and
jmp
loop
mov
xchg
nop
jge
das
rcrl
dec
clc
xorl
push
into
or
xchg
and
lods
notb
xor
mov
xor
jge
xchg
inc
jnp
pushf
out
pop
xchg
sub
xor
xchg
scas
add
and
mov
movl
mov
push
ljmp
cmpsb
fldl
sbb
cs
xchg
mov
fisubs
and
cld
jne
lock
push
fnsave
push
mov
dec
addr16
int
test
iret
in
mov
fistps
cmpsb
inc
xchg
sahf
mov
xor
cmc
incl
aaa
clc
mov
push
sbb
sbb
shrb
call
mov
pop
subl
pop
cbtw
fwait
test
sahf
dec
xchg
mov
pop
clc
sub
dec
cmpsb
sub
sbb
sub
cmp
faddl
cmp
add
es
xchg
or
add
add
fwait
add
add
js
add
imul
add
add
add
data16
add
add
add
add
lret
add
add
add
ja
mov
mov
add
add
add
imul
add
adc
adc
add
popl
dec
add
jne
add
add
add
shlb
add
in
add
add
add
add
add
add
xchg
add
sbb
jne
dec
outsl
je
jb
outsl
pop
dec
popa
jo
out
insb
addr16
enter
jecxz
out
popa
fcmove
dec
cmp
rcrl
clc
inc
mov
add
dec
add
push
lcall
std
std
incl
ljmp
pusha
add
push
pushf
or
xor
mov
pop
pop
add
push
add
push
call
jge
nop
add
push
add
ljmp
add
add
test
ljmp
cmp
test
test
inc
loopne
pushl
add
or
call
repz
push
add
adc
add
idiv
mov
ret
movsl
lea
add
push
call
loopne
add
adc
sbb
add
add
add
add
add
add
add
add
add
lds
add
add
je
imul
popa
adc
add
add
add
add
add
mov
imul
inc
dec
js
push
xor
je
pop
add
add
jo
add
je
add
inc
dec
xor
add
add
add
add
jnp
add
add
add
add
mov
movsb
scas
aad
adc
push
push
lds
fwait
cmp
cmc
int3
scas
arpl
les
aam
and
mov
adc
in
add
pop
add
mov
mov
cmc
inc
aam
or
adc
inc
mov
ljmp
cs
push
xchg
rcll
jg
ret
jno
xchg
pop
in
sarb
or
lds
scas
xchg
icebp
adc
das
mov
test
add
mov
push
loope
xor
mov
lea
xchg
gs
nop
mov
lret
mov
fisubrl
push
sub
cwtl
mov
cmpsb
subb
lcall
loop
jle
push
mov
addr16
or
in
xlat
xor
add
decl
xor
int
lret
dec
sbb
adc
cmp
enter
adc
ret
mov
mov
push
sbb
filds
xor
sub
cmpsl
imul
icebp
pop
pushf
ja
fucomi
dec
lock
fst
mov
fmulp
imul
out
xchg
aas
mov
sbb
sbb
shll
mov
inc
mov
shrb
mov
xchg
mov
push
mov
sub
push
cmpsl
mov
outsl
adc
mov
and
test
add
xor
mov
sbb
mov
push
sti
cmp
jge
lahf
andl
inc
inc
push
mov
mov
lcall
sbb
adcb
incb
jl
mov
jbe
bound
jns
imul
and
mov
mov
and
dec
mov
pop
lret
push
cmp
and
aad
and
sub
cmpsl
je
movsl
push
push
movsb
cld
add
and
push
je
sbb
and
xor
and
frstor
inc
cli
mov
xchg
mov
sbb
xor
pop
fstpl
inc
pop
mov
mov
cmp
push
aas
fcomps
cmp
fs
dec
pop
jne
in
jb
mov
cmp
test
rcll
inc
push
sahf
pop
sbb
xorb
scas
push
sub
popf
inc
daa
int3
rcrl
xor
and
sub
test
sbb
imul
mov
adc
mov
lods
imul
xchg
dec
mov
pusha
out
punpckhbw
and
push
pop
fwait
stc
mov
pop
aam
sahf
cmp
in
fmuls
xor
pop
sub
xchg
fdivl
out
xlat
sarl
jae
fstpl
dec
xchg
cwtl
cmp
mov
xchg
out
jb
mov
lock
mov
adc
mov
ds
cld
cmp
gs
mov
xor
in
or
jb
dec
sub
pop
xchg
adc
adc
pop
imul
das
mov
push
lea
mov
fs
pop
into
jecxz
xor
popf
fists
repz
lock
or
jg
adc
adc
popw
into
fisttpl
aas
jns
adc
sbb
fisttps
mov
dec
ja
subb
cmpsl
mov
inc
sub
sub
or
xor
mov
jbe
xor
push
dec
sbb
in
ds
inc
test
stc
leave
xchg
icebp
mov
sbb
bound
jae
out
sbb
xchg
jp
mov
xor
mov
xor
in
into
stos
inc
sbb
and
inc
dec
mov
push
loope
inc
popf
xor
and
inc
data16
lahf
add
dec
pop
sub
or
push
das
xor
and
adc
jl
insl
fnsave
in
xor
lea
icebp
xor
pop
adc
inc
xor
push
jnp
jg
jp
fcompp
ja
mov
sub
or
cld
loop
cmp
js
repnz
inc
sahf
xchg
xchg
sub
inc
loope
mov
xchg
or
mov
sbb
insb
fs
mov
dec
addr16
ret
and
cmp
clc
fstp
cs
cmpsl
xchg
and
xlat
cwtl
cmpsl
cld
pop
pop
cmp
cltd
adc
fisubs
jecxz
add
cltd
sahf
and
imul
xchg
rcll
ror
in
std
and
iret
roll
insb
add
sub
cli
popa
daa
pop
pop
fsubs
push
fisubs
test
adc
in
jg
mov
push
mov
enter
fiadds
sbb
data16
into
pop
orb
add
fsubp
cmp
lret
jns
xchg
rolb
push
outsl
push
pop
aam
xchg
adc
push
dec
rol
nop
rcl
sub
addr16
pop
shrb
adc
fdivrp
cmc
in
xor
mov
mov
or
lea
xor
push
jns
js
lahf
fisttpll
and
ret
pop
out
xor
push
xor
mov
cmp
scas
and
jne
push
or
jl
gs
sub
mov
gs
dec
xchg
shl
shlb
dec
nop
or
mov
in
add
je
jns
ljmp
mov
adc
movsb
test
or
jae
ja
adc
les
test
adc
push
in
das
outsb
mov
cmp
push
clc
dec
sbb
mov
fcoml
mov
orl
daa
je
push
inc
stos
push
les
xor
daa
popf
mov
mov
and
inc
pop
lods
shrl
lret
ffree
sbb
aaa
adc
insb
add
out
lcall
rcr
in
xchg
sbb
cmp
mov
data16
loopne
test
aas
inc
scas
movsb
stos
xor
adc
push
inc
adc
mov
push
sbb
loopne
nop
popl
out
test
and
and
enter
outsb
adc
mov
mov
fiadds
jg
or
scas
lods
push
addr16
sub
dec
cltd
push
js
mov
out
adc
push
pusha
fildll
push
jb
shl
cmp
icebp
jmp
das
insl
nop
add
outsb
sub
dec
pop
sbb
and
inc
rolb
cwtl
xor
mov
fistpll
jl
xchg
shr
inc
xchg
xchg
lahf
jecxz
xor
pusha
lret
dec
shll
pop
inc
jp
add
sub
inc
add
ss
xlat
or
jno
lret
call
test
hlt
sbb
push
push
jno
shll
mov
push
xchg
popf
push
fwait
push
ja
sbb
mov
pop
shl
and
inc
add
add
jb
sbb
gs
mov
stc
fdivrl
jmp
jne
and
dec
push
add
outsb
ret
pop
sub
iret
sti
stc
clc
mov
orl
xchg
add
push
test
xor
adc
sub
pop
loop
sahf
push
adc
cld
add
mov
std
pop
popf
and
std
pusha
sahf
xchg
pcmpgtw
loopne
adc
or
das
and
fldenv
icebp
xor
xchg
pop
mov
sub
test
lods
and
mov
and
out
pop
out
scas
add
and
stc
push
pop
adc
add
popa
mov
inc
sbb
pop
xchg
or
cmc
insb
or
xor
adc
and
cmp
xchg
or
int
mov
jno
inc
jbe
mov
mov
popa
es
imul
mov
xlat
xchg
jo
pop
push
pop
cmp
leave
xor
inc
mov
fsubs
dec
dec
lahf
out
push
sbb
pop
cmp
cltd
insb
mov
cli
std
xor
push
jnp
or
sbb
enter
popf
cmp
aas
mov
lahf
mov
int3
dec
push
roll
push
dec
jbe
repnz
shrl
into
add
or
push
cmpsl
aam
addr16
jmp
loop
dec
add
xor
pushf
sbbb
mov
movsb
fucomi
and
jle
inc
andl
les
push
inc
sbb
xchg
aaa
cs
daa
push
sbb
fsubs
sbb
outsb
push
stos
js
add
lds
mov
das
shlb
xor
in
ljmp
nop
dec
cmp
rol
push
fs
adc
int
mov
in
push
push
inc
inc
dec
mov
dec
in
add
addr16
or
clc
and
mov
stc
stc
test
fmull
xor
addb
out
lds
cwtl
dec
xchg
cs
adcl
fisttpl
fs
and
push
push
sub
add
enter
imul
add
push
nop
je
mov
cmpsl
ds
mov
cmp
aam
cmpsb
out
insl
stos
mov
loope
fcmovnbe
pop
mov
dec
sub
cmp
dec
test
and
lock
movsb
or
int
mov
xor
mov
ja
cli
jo
into
push
or
mov
sar
inc
add
jbe
pop
push
mov
dec
push
sub
lock
mov
mov
xlat
jecxz
leave
in
orl
sub
mov
insl
dec
sti
xorl
test
icebp
ret
pop
xchg
insl
push
sub
aas
or
roll
lock
inc
std
and
sbb
es
mov
mov
addl
in
stos
ds
mov
jl
jmp
daa
daa
jb
lea
mov
shl
pop
in
jmp
add
sbb
dec
int3
or
popf
push
repz
inc
dec
aam
scas
jno
aaa
cmp
into
movsb
test
stos
sub
ja
es
sahf
rolb
iret
adc
pop
inc
shlb
push
mov
jle
loop
mov
popf
les
pop
inc
popa
mov
stc
mov
dec
mov
or
movsb
cmpsl
push
mov
aam
bound
arpl
gs
xor
and
dec
push
lret
mov
mov
push
shrl
movsl
push
imul
dec
subl
mov
mov
shll
pop
loope
out
leave
jno
adc
sub
in
scas
jle
jae
les
or
scas
push
push
mov
pop
push
xlat
fstps
nop
inc
int
adc
gs
mov
dec
add
sbb
filds
push
push
out
mov
pop
cwtl
sub
subb
fimuls
sahf
nop
out
fs
repnz
ret
aas
mov
push
movsb
pop
lds
std
xchg
xor
or
enter
addr16
stos
insl
dec
adc
paddusb
and
js
loopne
aaa
add
pop
mov
xor
and
lock
stc
mov
ja
mov
bound
push
call
sbb
sbb
hlt
mul
in
js
sub
arpl
add
jo
jle
fcompl
add
test
jle
mov
jmp
test
iret
lds
mov
adc
add
cs
mov
out
outsb
int
test
ja
cmp
push
dec
jl
sbb
or
movsl
fidivs
sbb
xchg
xor
and
adc
xor
icebp
imul
mov
ret
add
out
out
mov
cmpsl
mov
sbb
cmpsb
add
loope
imul
or
add
pushf
add
adc
out
fidivrs
repnz
pop
roll
imul
in
xor
jg
xchg
cwtl
mov
arpl
mov
std
mov
mov
shl
ficoms
in
xchg
filds
jb
cmpsl
shr
dec
scas
push
addr16
push
icebp
pop
add
stc
mov
ret
stos
pop
jmp
push
push
sbb
nop
clc
leave
fnsave
cs
fiadds
jmp
mov
cmpsb
pop
push
cmc
repz
cmp
push
mov
jbe
ss
jo
adc
sub
sub
nop
push
iret
adc
jo,pn
fnstenv
push
pop
sbb
add
adc
push
dec
outsl
out
imul
xor
and
sub
out
pushf
fstpt
cli
fstpl
mov
stc
test
lods
push
mov
jl
sub
mov
and
andnps
jo
jmp
dec
dec
pop
push
cmp
push
fmul
xchg
mov
jecxz
in
jno
outsb
mov
inc
mov
pushf
test
mov
into
push
xor
cmp
negb
mov
mov
and
cmp
scas
sti
jnp
dec
xlat
repnz
xor
xchg
cmpsb
cmp
mov
mov
in
sarl
lahf
add
lret
out
jecxz
mov
test
test
pop
fwait
add
lahf
sub
int3
sub
add
jae
dec
inc
xchg
jo
push
dec
sbb
dec
pop
pusha
bound
loop
mov
sti
out
pop
mov
mov
xor
dec
inc
mov
xchg
mov
add
int3
sub
dec
or
dec
out
int
std
jnp
gs
and
pop
sub
pop
aas
clc
stc
cmp
js
inc
mov
push
xchg
and
mov
lret
lds
and
or
dec
lret
loope
xor
mov
dec
pop
insb
sub
les
jl
pop
sbb
dec
cwtl
push
imul
pop
pushf
inc
or
jmp
xchg
and
mov
nop
cwtl
js
push
push
stos
push
adc
and
jb
fstps
and
arpl
or
lods
ss
icebp
out
loope
addr16
aaa
test
incl
leave
out
mov
jnp
sarb
jns
mov
lock
in
xchg
bound
sbb
sub
call
add
mov
mov
pop
pusha
dec
push
decb
fadd
hlt
jp
adc
imul
roll
jne
push
and
adc
adc
sbb
int
ss
imul
test
mov
xchg
in
jb
lret
mov
dec
push
lret
rcrl
jle
or
mov
lods
ljmp
js
push
repnz
mov
jns
add
push
mov
jne
push
cli
sbb
and
adc
test
mov
movsb
jp
repz
adcb
jge
test
pop
call
aas
dec
je
inc
or
cmp
or
pop
test
rolb
push
jp
cmp
sub
cmp
mov
jg
sahf
jne
jo
inc
jbe
out
jg
xor
xor
data16
xchg
pop
push
pop
xchg
jo
cmp
pop
cmp
mov
data16
adc
pushl
inc
sbb
lods
adcb
xorl
sbb
push
pop
mov
pop
gs
cwtl
je
mov
shrl
std
fdivrs
inc
loope
insl
shrl
adc
into
xchg
shlb
jae
das
xor
adc
jecxz
or
js
fcmovnbe
add
xchg
pop
dec
xchg
scas
pop
push
xchg
pushf
cmc
in
jg
push
jae
mov
or
xchg
sub
mov
sbb
sahf
daa
ljmp
mov
shll
jae
icebp
in
cmpps
sbb
lods
divb
jae
fcmove
jno
pop
lods
pushf
cmc
call
sar
das
loopne
roll
inc
stos
sub
adc
mov
iret
dec
sbb
in
pop
sbb
sbb
mov
mov
inc
or
pop
dec
fcoms
adc
bound
out
out
jne
pop
sbb
loop
mov
adc
aad
js
adc
add
pop
jle
pop
sub
xor
jl
mov
sbb
pop
mov
jmp
mov
imull
subl
xchg
scas
in
in
rorb
jle
das
add
lods
ljmp
mov
push
push
add
mov
jae
adc
lret
cmp
inc
sbbl
in
gs
mov
aas
aad
add
mov
mul
idivl
sti
sbb
int3
aam
fwait
mov
push
hlt
push
dec
dec
add
or
les
mov
adc
inc
jnp
fsubs
iret
fcmovne
add
cld
test
or
mov
fiadds
jg
les
dec
and
repz
outsb
lea
mov
mov
cmpsl
out
xchg
xchg
pushf
cli
inc
sub
jbe
daa
adc
sbb
sarl
xchg
hlt
inc
adc
rcrl
mov
push
stos
in
xchg
mov
adc
or
and
sbb
pop
sub
or
out
and
jmp
scas
push
push
loop
mov
and
rorl
cmp
jp
push
cli
daa
insb
lea
mov
push
push
lret
cltd
mov
inc
add
loopne
daa
insl
stos
mov
fnsave
xor
in
testl
lret
sbb
cwtl
jmp
mov
mov
lea
mov
sub
or
movhps
divl
inc
notb
cld
rorb
push
sarb
or
xor
out
arpl
and
xor
test
lahf
mov
cli
mov
jbe
cmc
bound
ret
scas
movsb
shlb
insl
loop
push
push
shlb
aas
sub
xchg
push
push
cmp
xchg
popl
movzbl
lret
out
xorl
dec
sub
or
ds
imul
xor
pop
xor
or
push
popf
shr
cmc
sub
adc
add
imul
sbb
add
ds
push
pop
dec
iret
movsl
mov
ljmp
lret
shlb
dec
gs
dec
mov
cs
sbb
and
ret
scas
bound
pusha
push
pushf
nop
je
stos
adc
sbb
fstl
add
lretw
push
push
ficompl
mov
xchg
loope
mov
or
sbb
pop
bound
cli
out
and
aad
mov
add
jb
jae
push
scas
adc
dec
xor
cltd
mov
or
mov
push
xchg
popf
les
ret
dec
imul
iret
mov
mov
ss
fidivrs
cmp
and
repnz
rcll
adc
lahf
sbb
sbbb
shr
call
outsl
xchg
pop
add
pop
popf
aad
inc
std
or
dec
mov
dec
arpl
inc
dec
cmpsb
jge
and
adc
movsb
jmp
shl
stos
dec
jb
loope
addr16
xchg
mov
scas
mov
sub
lods
sub
push
addr16
call
sub
dec
mov
icebp
insb
lods
xlat
add
outsl
sub
cmp
pop
arpl
add
dec
jnp
dec
enter
ljmp
jne
lret
out
jle
rcll
mov
mov
xchg
xor
sti
fcom
or
test
subb
adc
xchg
sbb
inc
in
aaa
loopne
mov
sbb
mov
sub
mov
mov
cmp
dec
sbb
pop
sub
add
jb
loope
notb
in
popa
rorl
mov
leave
cli
cmpsb
sbb
fwait
cmp
adc
jo
loopne
call
or
jg
in
inc
mov
dec
sahf
bnd
dec
xchg
push
fisubrl
lcall
xchg
push
pop
cmp
imul
mov
pop
cmc
dec
sahf
dec
mov
jl
inc
and
out
push
jne
hlt
mov
mov
jno
mov
dec
dec
repz
xchg
add
mov
cmp
sbb
outsb
or
sub
lahf
test
scas
mov
pop
mov
xor
int
add
roll
bound
bound
mulb
push
inc
dec
jmp
or
fldt
add
insl
mov
adc
xchg
dec
leave
pushf
xor
adc
cmp
pop
xor
or
in
cmp
es
ret
adc
cmp
jl
rorl
push
mov
outsb
lods
dec
sub
ljmp
daa
mov
ss
iret
imul
or
dec
sub
jge
inc
mov
cmp
mov
mov
loopne
icebp
int3
sarb
fwait
int
and
cs
cmpl
fdivs
test
jo
pop
xchg
repnz
fdivrp
fs
mov
mov
out
rol
xchg
dec
sbb
mov
mov
rcr
xor
or
cmpsb
cmp
jp
pop
adc
push
pop
mov
pusha
shl
orb
movsl
je
cmp
add
es
call
sbb
cld
cmp
pushf
xlat
xlat
push
imul
sahf
sbb
test
mov
lcall
pop
mov
mov
xchg
pop
lods
sbb
dec
jle
stc
lock
pop
repz
cmp
xor
mov
push
push
in
je
xor
add
add
movsl
add
imul
push
add
sti
add
lds
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
rclb
add
mov
jo
jo
add
add
add
add
or
and
or
or
cwtl
add
add
add
add
add
add
push
add
add
or
add
add
add
add
add
out
add
add
ja
add
add
add
add
add
and
outsb
xchg
pop
inc
mov
popa
jo
push
imul
add
cld
or
dec
lea
inc
in
cmp
adc
push
lea
adc
cld
mov
mov
call
push
mov
push
push
dec
push
dec
ror
lret
ret
mov
push
test
decl
int3
add
pop
push
push
or
loopne
cld
jmp
or
clc
jne
add
test
test
std
or
cld
or
adc
push
push
pop
adc
push
clc
push
cmp
mov
inc
mov
push
in
push
push
movl
add
movl
add
add
inc
inc
inc
dec
gs
outsl
je
test
sbb
inc
inc
gs
gs
je
arpl
arpl
dec
sub
jb
addr16
add
gs
imul
gs
xor
add
add
dec
cmpsl
add
add
cmp
add
add
add
add
test
add
add
popa
sub
cmc
xor
mov
cmp
push
add
and
mov
dec
and
dec
jno
push
sub
in
mov
dec
jecxz
adc
into
inc
lea
fiadds
xor
and
loopne
rorl
adc
add
mov
sbb
cld
inc
jecxz
push
sub
pop
repz
call
enter
jle
std
adc
lods
jne
xchg
push
mov
push
pop
stos
test
mov
sti
repnz
pusha
dec
and
mul
dec
je
hlt
lahf
and
cmp
lea
clc
push
push
int3
cmp
fxrstor
mov
stos
fcompl
and
arpl
mov
xor
and
or
int
push
int
push
dec
js
ret
test
in
outsl
dec
imul
or
lret
shll
cmp
lret
jge
mov
stc
mov
xchg
std
fists
xlat
orl
leave
cwtl
cmp
orb
dec
fistps
nop
aas
inc
xchg
aam
int3
xchg
scas
sbbb
pop
xchg
enter
push
roll
mov
lods
sub
pop
add
jle
out
jnp
mov
shrl
mov
and
loope
xor
xor
dec
sub
ds
loopne
pop
clc
aaa
adc
fisttpll
call
inc
pop
aam
push
cmpsl
sbb
mov
into
xchg
icebp
pop
mov
mov
rorl
popf
popa
fsubs
xor
int
aam
bnd
or
push
pop
xchg
mov
pop
out
mov
popa
xchg
adc
lea
or
mov
xchg
lock
lock
pop
loope
movsb
push
xor
mov
sbb
addr16
mov
js
xor
cmpsl
lds
imul
bound
xchg
stos
adc
inc
adc
in
sbb
stc
mov
aas
iret
mov
data16
notl
jns
bound
adc
or
mov
dec
sbb
mov
push
negb
mov
sbb
fnsave
mov
pop
iret
insl
mov
sahf
rolb
sbb
push
lcall
push
mov
es
jmp
xor
mov
insb
pop
lods
cmpsl
add
into
dec
mov
rcl
push
ja
imul
aaa
xlat
fsts
add
dec
gs
scas
push
stos
pop
mov
inc
mov
jp
aad
fwait
ror
jmp
mov
sbb
push
out
sub
mov
jmp
stos
fsubs
stos
push
js
das
nop
outsl
xchg
ja
push
shlb
and
mov
push
xchg
pop
outsl
pushl
add
fstps
outsl
push
mov
dec
jg
jne
rcl
lret
adc
into
jns
jecxz
popa
add
iret
pop
aaa
xor
mov
push
pop
int3
jnp
jns
repnz
push
cwtl
push
jae
jg
jg
das
enter
inc
dec
dec
cmc
test
pusha
jp
fwait
insl
xlat
push
xchg
jge
hlt
sub
sbb
inc
sbb
fbstp
push
dec
dec
sbb
adc
add
repz
das
repz
inc
inc
cmp
xor
mov
fst
xchg
insl
lods
lods
repnz
jo
std
dec
adc
jecxz
dec
lods
mov
jno
lods
inc
ja
pop
icebp
nop
dec
jg
push
pmullw
ds
sbb
and
mov
push
out
cmp
mov
aad
or
push
pop
and
test
push
cmpsb
pop
pop
inc
mov
leave
xor
inc
repz
popa
adc
or
imul
popf
or
xchg
int3
insl
dec
out
dec
add
mov
jmp
push
push
insb
fcomps
cli
icebp
mov
inc
jg
in
xor
xor
dec
mulb
jbe
mov
stos
jg
out
cwtl
xchg
leave
mov
mov
xchg
pop
shrl
int
popa
cmpsb
daa
pop
in
ss
mov
sarl
es
pushf
fidivrl
mov
mov
pop
inc
in
mov
mov
mov
push
mov
hlt
dec
cwtl
loope
or
pop
cmp
insl
out
jge
stc
jbe
sbb
aaa
adc
bound
enter
cmp
loopne
xchg
scas
or
out
fsubl
jl
stos
hlt
dec
lahf
out
fs
loope
data16
jp
ret
insb
inc
and
or
jne
adc
stos
cmp
inc
mov
cmp
cmp
popf
xchg
stos
mov
lahf
aam
pop
mov
arpl
pop
push
pop
mov
loop
xor
xchg
dec
mov
les
push
mov
jp
push
dec
in
std
pop
imul
cmp
dec
in
dec
enter
pushf
roll
mov
loop
push
fs
xchg
push
lahf
cmc
and
xor
pusha
ljmp
test
xor
pusha
test
xor
mov
mov
jb
dec
add
sbb
or
pop
fstpt
aas
xor
sahf
outsb
fmuls
adc
ret
or
pop
and
mov
push
in
xlat
rorb
cwtl
xchg
inc
addr16
mov
mov
mov
lea
lds
loop
inc
into
fs
pop
push
push
inc
sub
adc
mov
cmp
dec
movsl
lds
inc
fstpl
pop
jno
xor
xor
int3
inc
xor
mov
pop
sub
mov
fldcw
inc
inc
mov
inc
dec
mov
dec
jl
mov
xchg
clc
sub
ds
dec
pushf
inc
jns
les
call
jge
jmp
mov
push
movsb
cmpsl
push
fcoms
push
cmpsb
dec
cmc
out
cmp
cmp
xor
pusha
das
dec
ds
fcoms
sub
sarl
insl
lds
test
subl
aam
sbb
pop
and
jp
aas
mov
jae
push
mov
xchg
jns
out
leave
aam
xchg
insl
lahf
xchg
mov
mov
cwtl
addl
or
lds
stos
jns
and
inc
addr16
dec
jmp
clc
or
xchg
les
repnz
ss
xchg
jnp
sub
adc
or
sti
pop
push
fisttps
scas
fbstp
xchg
insb
stc
xchg
repnz
xor
mov
or
repz
imul
test
pop
and
lods
lock
mov
ds
or
aaa
rolb
jo
rolb
int
mov
xor
add
jbe
and
mov
jp
jecxz
mov
test
mov
icebp
cmp
jb
test
test
mov
mov
andl
mov
fnstsw
ror
cmp
fdivs
fstpt
fstpt
js
stos
inc
mov
push
fadd
pusha
nop
sbb
outsl
push
sbb
lods
les
adc
shr
mov
push
mov
push
orb
mov
rcll
test
mov
mov
mov
daa
nop
pop
repz
mov
push
and
xor
cmpsb
pusha
mov
xor
mov
dec
push
out
not
and
add
or
push
inc
dec
mov
push
jne
jbe
inc
and
and
icebp
pop
jge
in
dec
cs
sub
insb
xor
adc
orl
pop
scas
xchg
cli
cld
lahf
push
push
sbb
cmp
ret
and
pop
cmc
pop
push
or
jg
mov
punpckhwd
adc
push
jne
sbb
movsl
aad
or
out
int3
in
fmul
inc
push
enter
stos
xchg
inc
sti
ss
fsubr
sub
jl
loop
stos
dec
adc
pop
sti
xlat
mov
push
jmp
dec
hlt
cmp
mov
in
outsb
sbb
in
sub
fcmovnu
fstl
ljmp
mov
popa
pop
add
ffreep
daa
push
push
test
fistl
mov
sahf
add
call
jnp
xor
gs
dec
mov
cmp
cli
xlat
cmp
xchg
jl
jge
cmp
dec
js
jnp
pop
cmpsl
push
in
sub
xor
cmc
mov
or
cwtl
dec
clc
jae
enter
out
pop
push
jbe
rsqrtps
mov
cli
in
adc
lods
pop
push
inc
stos
xlat
shrb
insl
xor
into
inc
int
mov
ret
xor
jmp
xchg
lcall
xchg
es
aas
and
flds
sbb
mov
les
cltd
shll
fmull
out
sbb
test
jne
test
add
add
dec
cld
pop
icebp
xlat
dec
jl
leave
xchg
jg
lds
push
hlt
bound
insl
sti
jp
int3
inc
sub
or
iret
lods
sti
xchg
dec
out
jne
inc
jo
sub
push
test
addl
adc
mov
xchg
sbb
and
add
and
fs
je
int
adc
mov
insl
mov
mov
sbb
add
movsl
inc
mov
inc
mov
pop
sub
add
in
fiaddl
repz
push
movsb
adc
jmp
xor
pop
inc
pop
icebp
mov
call
mov
mov
insb
and
or
or
fisubl
in
daa
fwait
lds
loopne
cwtl
jne
inc
andl
sub
add
jno
cwtl
mov
ds
inc
and
fmull
jb
xorl
bound
pop
das
mov
lods
sbb
sarl
jae
jl
fadd
sbb
sbb
push
jno
test
mov
mov
push
insb
cli
notl
adc
mov
add
roll
arpl
jmp
loope
lds
je
cwtl
jns
pop
or
push
divb
outsl
sbb
jo
adc
cmpsl
or
sub
imul
push
inc
cmp
xor
loope
push
cmc
pop
hlt
inc
dec
jno
pop
mov
inc
or
ja
xchg
or
sbb
roll
lcall
cmp
lds
enter
loop
dec
in
int3
dec
jge
mov
shrb
int
cmpsb
jae
adc
call
test
cmp
loope
sar
push
aaa
pop
xor
jecxz
movsl
lahf
call
lock
cmpsb
jne
daa
push
in
cmp
and
mov
movsl
clc
adc
aaa
add
lahf
movsl
or
inc
aaa
cwtl
fsubs
inc
insb
scas
les
mov
sub
push
fimull
lcall
int3
pop
add
or
shlb
cmp
aaa
lods
inc
mov
mov
jmp
adc
push
int
int
sub
push
pop
mov
or
repz
xlat
movsl
aaa
mov
es
in
test
frstor
insb
inc
mov
scas
jp
ja
sbb
dec
popf
cmp
pop
xor
mov
pop
repz
inc
mov
decb
test
int
adc
sub
imul
daa
stos
pushl
jge
add
fists
push
push
aaa
pop
xor
adc
jne
or
outsl
cltd
inc
decb
fsubrl
mov
mov
cmp
mov
lahf
int3
adc
xchg
fsts
xchg
cmp
adc
stc
out
insb
inc
je
jnp
scas
push
sbbb
mov
into
jbe
jp
loopne
stos
mov
mov
test
pusha
mov
mov
loopne
sbb
imul
inc
dec
inc
scas
pop
jne
loopne
and
cmpsl
xlat
dec
sarb
sbb
movsb
nop
mov
adc
jb
inc
into
push
xor
out
das
repnz
add
inc
dec
mov
dec
or
inc
jmp
xor
aaa
sbb
mov
sahf
loop
pop
inc
cmp
push
sbb
xchg
sbb
andb
es
popf
imul
fcmove
sti
jle
inc
rorl
and
pusha
pushf
into
imulb
notb
mov
sub
add
xchg
es
ljmp
jb
mov
mov
les
sub
or
bound
or
cmp
fbstp
push
mov
mov
imul
mov
pop
repz
stos
sub
call
and
cmp
nop
lcall
mov
imul
mov
and
inc
ret
lea
xchg
mov
sbb
scas
pusha
outsb
xchg
lahf
xor
lcall
push
pop
mov
cmp
addr16
sbb
out
xlat
aas
test
imul
nop
out
jg
xchg
pop
lahf
and
clc
andl
xlat
jle
lods
xor
scas
inc
mov
sub
repz
mov
pop
or
or
push
aaa
inc
cmp
test
sub
clc
arpl
mov
xorl
cltd
pop
xchg
xchg
addl
inc
add
popa
mov
ret
xor
cmp
mov
fiadds
pushf
gs
in
lea
pop
aaa
or
inc
mov
and
imul
cmp
xchg
pop
scas
add
inc
mov
push
aad
or
mov
movsl
nop
sti
dec
dec
aad
jnp
cld
test
inc
xor
adc
jecxz
push
or
scas
lahf
xchg
jbe
xchg
icebp
push
sbb
cltd
ljmp
movsl
aad
ds
fistl
dec
adc
push
loopne
fcomps
and
fdivl
dec
adc
mov
enter
jno
mov
mov
jnp
and
nop
mov
xor
jge
pop
ret
aas
lock
dec
das
fadd
aas
xor
xchg
sub
sbb
dec
dec
loop
cmp
subb
push
push
fldt
adc
inc
inc
cltd
das
and
filds
in
clc
imul
out
fistpll
subl
aaa
pop
negl
dec
clc
dec
inc
fimull
mov
jmp
je
inc
sbb
in
cmpsb
gs
add
push
adc
out
in
fisubl
pushf
push
ljmp
mov
mov
stos
push
aad
ret
gs
les
lret
push
jp
pop
and
adc
negb
sub
mov
mov
adc
xchg
dec
dec
stos
xor
outsb
gs
cmp
sub
add
fidivs
add
jmp
bound
ljmp
in
jl
rcrl
jo
and
mov
mov
ret
arpl
mov
mov
add
cmp
ja
addr16
dec
es
fstpt
pop
jmp
xchg
mov
scas
subb
fcoml
jne
shlb
test
in
fxch
cmp
xchg
or
data16
cmp
mov
cwtl
fbstp
test
inc
dec
or
repnz
mov
add
or
sub
mov
repnz
adc
fmuls
xor
xchg
and
push
test
jb
xorb
and
aas
out
xchg
and
cmpsb
cmp
jne
mov
fistps
dec
jecxz
scas
lret
push
sub
cmp
push
mov
test
data16
sbb
and
mov
or
sbb
out
pop
add
xchg
movsl
mov
imul
fnstenv
sbb
js
stos
push
das
ja
ljmpw
clc
je
scas
sahf
xchg
repnz
mov
insb
inc
das
add
xor
negl
mov
fwait
jg
or
adc
ljmp
imul
mov
jl
fstps
addr16
jg
dec
adc
cwtl
pop
jg
lods
lcall
test
add
and
xchg
out
push
pop
nop
int
sub
popl
pop
cli
add
out
inc
mov
imul
imul
mov
je
mov
dec
aad
adc
js
std
adc
adc
and
xor
sub
hlt
xlat
das
enter
ja
arpl
rcr
push
push
sbb
add
mov
ds
xchg
repz
push
cmpsl
xchg
pop
or
mov
int
subl
dec
cmp
adc
jbe
or
push
dec
or
mov
mov
push
cmp
adc
and
popa
adc
ds
pop
xchg
sbb
in
or
movsb
xor
aaa
mov
jbe
jne
adc
or
cmp
sarb
adc
fnstsw
rcrl
xchg
shlb
mov
scas
stc
cmp
inc
hlt
cmp
movsb
aad
adc
mov
mov
ss
ja
pop
adc
call
shlb
push
adc
daa
jns
cs
lods
and
js
mov
std
pop
popf
xchg
lea
lea
sub
scas
popa
jmp
outsb
jae
cmp
add
subl
inc
leave
push
mov
mov
sbb
sbb
imul
vsubpd
sub
cmp
cld
push
popa
mov
mov
and
pusha
notl
xor
inc
inc
push
sub
aad
adc
jns
iret
push
and
pop
mov
inc
mov
and
adc
xchg
fsts
pop
lods
outsl
xlat
call
xchg
xchg
xchg
mov
mov
das
add
insb
mov
jmp
les
insb
jge
sub
jo
fsubrs
mull
jecxz
mov
jl
movsl
into
int3
jecxz
mov
jl
test
jmp
in
insl
cmp
xchg
rcll
pop
inc
clc
aad
mov
fistl
arpl
iret
dec
repz
mov
inc
mov
inc
enter
jecxz
cmp
mov
jg
lahf
fdiv
sub
pop
push
mov
nop
and
stos
negb
test
cltd
jp
imul
daa
lock
icebp
lock
loope
cmp
mov
vpsllq
scas
cmc
and
lea
push
notl
cld
adc
ss
in
cmpsb
inc
test
push
inc
aam
push
fcompl
in
out
shll
les
mov
cli
pop
fbstp
sbb
dec
mov
cmpsb
daa
xchg
loope
mov
icebp
je
daa
call
mov
jl
imul
jnp
cltd
cmp
adc
adc
hlt
stos
call
or
lea
dec
mov
bound
xor
popa
cltd
jl
in
into
mov
and
or
fs
mov
adc
shlb
pop
adc
mov
sbb
mov
outsl
and
mov
and
ficompl
notl
in
loope
xchg
adc
jae
mov
int
test
addr16
ror
mov
in
jecxz
pop
lds
xlat
inc
jg
or
stos
scas
data16
cmp
mov
sub
call
scas
mov
cmp
pop
cwtl
lcall
pusha
mov
adc
and
or
pop
stos
cltd
xchg
jno
xchg
subl
es
cmp
decl
int
push
fnsave
mov
shl
cltd
insb
mov
push
pusha
mov
or
dec
ss
les
inc
test
dec
xchg
xchg
test
or
adc
mov
movsb
xor
mov
out
push
xor
xor
push
jp
pop
jg
mov
rep
hlt
lahf
rolb
mov
xchg
and
aam
or
test
add
sub
fsubrs
and
addr16
jg
in
dec
cmc
sbb
divb
aas
or
gs
cmp
jb
ss
shlb
dec
cmp
push
je
sahf
push
fbstp
nop
out
fdivr
sbb
push
cwtl
inc
fs
js
fisubrl
call
xor
xchg
adc
clc
imul
repz
jo
mov
jmp
sub
push
cmp
ds
shlb
push
js
cltd
mov
nop
notl
mov
push
sbb
pop
or
lods
dec
or
push
fistpll
repz
out
or
stos
cmp
push
mov
adc
mov
cmp
and
cs
rorl
lods
stos
mov
jl
mov
push
push
stc
jo
mov
repnz
rorb
lcall
pop
xchg
mov
dec
lods
in
cmp
cmpl
dec
or
test
popf
add
xchg
cltd
mov
add
or
and
mov
xchg
dec
mov
andb
shlb
pop
and
imulb
mov
loop
xchg
cmpl
or
mov
sti
in
push
jecxz
xchg
or
into
xchg
enter
mov
fs
insb
je
lock
aas
add
add
add
add
add
add
mov
mov
add
add
movl
push
add
add
or
add
add
add
add
add
add
add
add
clc
add
add
ja
add
add
add
stos
stos
add
ja
mov
call
add
add
dec
fs
add
add
adc
add
add
add
adc
add
jbe
add
add
add
add
popa
and
add
arpl
rolb
add
add
sbb
add
dec
add
add
add
add
add
add
add
push
jne
arpl
outsb
and
add
add
je
mov
sahf
xor
orl
xchg
lcall
lea
mov
add
jne
jne
call
std
test
push
das
add
lret
test
add
add
mov
mov
add
rclb
test
incb
add
data16
in
xor
and
loopne
add
adc
incl
ss
call
mov
push
cmp
loope
call
cld
add
add
jne
push
inc
ja
push
fisubrs
test
clc
verr
mov
test
addr16
xbegin
add
adc
adc
pop
jne
imul
pop
add
add
add
add
cmpsl
sbb
pop
add
add
add
add
add
add
add
aaa
fs
inc
add
add
outsb
inc
insb
gs
das
imul
push
insl
add
js
add
add
add
push
jns
popa
pop
je
test
jae
push
insb
pop
gs
cs
jne
pop
add
pop
add
cmpsb
add
xchg
add
push
add
daa
add
xchg
add
adc
lahf
lcall
repnz
daa
sbb
jle
mov
outsb
mov
stc
out
mov
pop
daa
dec
int3
inc
rcr
es
dec
push
jns
sub
inc
jl
lods
sahf
fisttpll
enter
sub
cmpsb
sbbl
mov
fists
insb
cli
mov
outsb
cmp
cmp
fbstp
ret
mov
testl
pop
mov
shrl
or
js
jnp
jl
pushf
xchg
mov
fdivrs
movsl
and
cmp
fstpl
les
lock
mov
cmc
loopne
enter
sbb
aam
out
xor
and
push
or
std
mov
cmpsl
mov
into
dec
xor
push
dec
js
jmp
xor
push
jle
test
in
mov
inc
or
cmp
hlt
sbb
pop
xchg
in
aad
jns
sub
loope
arpl
xchg
push
sub
sub
dec
inc
ret
cmc
sub
pop
fs
fnstcw
jb
add
jne
ljmp
jnp
or
shll
jge
cmp
sub
xchg
dec
mov
loopne
adc
outsl
fnstsw
xor
add
out
clc
jns
aaa
aam
sti
int3
mov
mov
add
cltd
xor
add
int3
or
mov
dec
fs
xchg
jbe
mov
jne
mov
sbb
push
aaa
mov
in
insl
pushfw
dec
cmpl
push
fs
lods
mulb
sbb
mov
mov
jmp
stc
iret
scas
jl
cmp
loopne
mov
nop
mov
aas
push
sbb
mov
push
ss
add
loopne
pmulhw
push
leave
jl
addr16
xor
push
dec
xchg
mov
out
or
clc
cmp
inc
test
divl
jo
out
es
xchg
fwait
push
cld
adc
jmp
mov
dec
popf
and
clc
pop
sti
mov
adc
and
adcl
lcall
cmpsb
addr16
mov
mov
add
shl
repnz
jae
es
xor
imul
sti
mov
ret
ficompl
ss
mov
pop
arpl
rolb
mov
sarb
cmp
mov
or
xor
idiv
mov
jo
jnp
fstpt
lods
scas
cmpsw
icebp
in
roll
pop
enter
popf
pop
push
push
push
cmp
popf
mov
sti
sbb
xor
es
and
shll
test
xchg
sub
adc
xchg
dec
int
dec
sbb
push
lret
push
pop
inc
add
sbb
popf
add
ficompl
sub
cltd
and
imul
outsl
cmp
fmulp
insb
js
cmp
sti
and
inc
lods
lds
and
aaa
call
fsubrs
push
and
lods
loop
cmp
mov
inc
xchg
mov
mov
xchg
call
inc
sbb
jmp
dec
pop
dec
push
xor
fdivrs
jecxz
test
push
xchg
dec
jnp
lret
mov
or
mov
dec
inc
test
data16
jb
inc
jecxz
mov
fmuls
insb
push
mov
insb
mov
js
mov
xor
aam
testl
pop
loopne
push
sub
dec
ret
jge,pt
jle
les
push
fildll
sbb
mov
pop
push
cmp
and
dec
dec
cmc
add
negb
jno
iret
shrb
int3
push
mov
cmp
mov
rcl
imul
in
std
fldcw
jo
adc
lds
movsb
idivb
jno
mov
das
movsl
jnp
test
insb
dec
mov
push
call
add
mov
imul
aaa
mov
and
cmp
lods
jg
mov
filds
push
inc
xchg
in
and
je
sbb
into
mov
data16
insb
sbb
dec
xor
and
pop
adc
loopne
inc
nop
popa
sub
mov
shrb
rol
es
push
shlb
fcompl
adc
xlat
sbb
es
iret
sub
test
cwtl
shll
movb
mov
cs
popa
mov
ficompl
mov
fiadds
add
ret
cld
daa
and
out
push
sub
call
pushf
push
mov
mov
mov
jb
mov
insb
cwtl
lods
sub
add
enter
mov
jae
aaa
add
adcb
pop
mov
xchg
pop
jbe
mov
inc
mov
int3
pop
mov
sub
sub
loopne
fxch
jae
add
in
out
ret
push
data16
push
movsb
out
inc
jne
push
xchg
pop
inc
cmp
xlat
inc
inc
pop
push
sub
and
cmp
shlb
adc
xor
daa
adc
sub
mov
mov
fucomp
sti
or
sub
cld
and
mov
stos
ret
fnsave
or
test
mul
gs
sub
adc
or
sarb
mov
mov
popa
or
sbb
aas
repnz
pop
adc
cs
cmp
mov
sbb
xor
pop
shlb
mov
sbb
fisubl
mov
and
sbb
addr16
or
mov
jb
insb
push
ret
aaa
loop
mov
mov
inc
or
push
fcmovnb
rorb
test
adc
test
call
je
and
jecxz
mov
pop
dec
call
or
mov
xchg
sti
cs
and
ficoml
in
adc
dec
cmp
test
inc
push
sbbb
in
adc
or
pop
fcmovnbe
call
dec
mov
sti
ds
inc
ljmp
xchg
xorb
inc
xchg
mov
adc
mov
inc
cmp
dec
jo
icebp
pop
mov
mov
xchg
mov
push
pop
cmc
mov
inc
dec
fwait
mov
rolb
rorb
andb
movsb
mov
lret
push
dec
or
add
or
outsb
std
xor
inc
aas
inc
push
xlat
dec
outsl
mov
imul
adc
ret
xor
pop
jae
jno
xorb
push
movsl
inc
ljmp
inc
sti
jae
addr16
cmp
mov
gs
jb
repnz
fistpll
inc
sub
mov
das
xchg
dec
xor
je
fcmovnu
stos
jmp
ret
iret
add
xchg
outsb
stos
shr
pop
roll
shlb
jbe
inc
dec
insl
test
dec
adc
jge
pop
ja
inc
les
int
cwtl
xchg
outsl
adc
adc
pop
cmp
push
xchg
lret
xchg
ja
sub
xor
jecxz
jne
iret
inc
mov
fildl
adc
pop
pop
mov
inc
shlb
adc
dec
cmp
xlat
xchg
popa
lods
lods
xchg
je
stos
bound
add
cmp
xchg
push
add
mov
dec
dec
clc
movsl
mov
mov
clc
adc
or
xchg
xor
jp
cmp
xlat
sub
xor
jo
jle
xorb
mov
dec
and
imul
or
adc
sbb
adc
sbb
adc
mov
dec
pop
add
outsb
in
mov
test
sub
in
cmp
push
sub
adc
sbb
pop
les
inc
clc
xchg
mov
mov
in
fldt
jg
xor
mov
xor
jno
dec
in
push
daa
adc
pushf
inc
aas
test
bnd
mov
sub
div
cltd
xor
push
stc
jae
aad
dec
and
das
add
pop
shrl
sahf
jp
sbb
insl
pop
fldt
cld
cmp
fisttpl
dec
int
inc
push
and
out
imul
shrb
dec
inc
mov
sub
inc
mov
mov
fists
lock
cli
sub
pop
push
js
pop
icebp
lods
cltd
or
mov
rclb
xchg
xor
test
aas
in
addr16
ret
jb
cmp
sub
and
pop
adc
dec
pushf
mov
sub
orl
lea
xor
loopne
inc
loopne
in
jp
push
iret
jno
pusha
fucom
mov
mov
cmc
fs
stc
fildl
adc
scas
jo
jmp
mov
sbb
dec
push
jge
xor
lret
notb
jbe
and
jl
pop
sti
les
mov
dec
add
xor
add
ljmp
movsb
lahf
pop
xor
pop
rcll
and
dec
or
push
dec
cli
cmp
jne
out
cmpsb
js
lods
cwtl
mov
push
decb
sub
dec
adc
out
in
mov
or
or
dec
movsb
sub
out
div
sub
add
jmp
mov
inc
xor
mov
cmovs
stos
xchg
pop
addr16
or
loope
lahf
fsubl
mov
push
add
shlb
sbb
jne
push
push
rclb
add
jge
outsl
inc
addr16
pop
insl
notb
xchg
pop
aas
mov
jne
adc
bound
cmp
in
cmp
sub
push
cli
xorb
or
std
xchg
enter
std
leave
inc
pop
inc
in
call
jmp
push
xchg
or
inc
loop
out
mov
mov
or
ds
imul
setl
dec
lret
mov
call
int
sbb
sbb
in
iret
pop
fnstsw
xor
fdivl
push
push
dec
xor
push
dec
scas
sbb
fldl
mov
or
dec
insl
xchg
adc
sbb
sub
push
mov
int3
push
cmp
fs
dec
ret
dec
xchg
jb
mov
and
sbb
sub
cmpsb
adc
out
mov
push
push
add
xchg
lds
or
xor
mov
shll
mov
sbbl
mov
sbb
leave
insb
jmp
cs
mov
shrl
push
mov
bound
mov
shll
sbb
out
addl
ja
insl
adc
pop
bound
repz
jp
xchg
mov
out
cltd
sbb
jb
stc
adc
loopne
rcrl
mov
lret
cmpsb
arpl
jbe
dec
mov
stos
mov
add
push
pop
xor
pop
push
fistpl
imul
cli
mov
push
xchg
jle
or
xchg
adc
xor
call
xchg
fdivrl
dec
ret
stos
repz
idiv
adc
into
jl
sahf
mov
fwait
adc
xchg
out
xchg
cmp
cmp
cmp
dec
xor
loope
pop
pushf
outsl
push
sbb
insb
clc
mov
mov
xchg
xor
es
mov
test
int
vsubpd
sub
sub
mov
out
mov
sbb
mov
ljmp
adc
cmp
or
pop
push
xor
js
mov
repz
push
xor
mov
inc
imul
xchg
loop
dec
dec
sahf
lds
into
dec
gs
sbb
inc
jmp
sbb
das
in
scas
repnz
lock
push
push
and
mov
into
fiadds
sub
xor
mov
jp
aam
pop
mov
sbb
int
jp
es
lds
push
loop
mov
loopne
bound
ret
dec
mov
dec
iret
mov
jo
inc
lret
or
stc
and
mov
ss
and
imul
sub
aaa
push
adc
popf
mov
mov
inc
pop
xchg
aas
out
dec
jae,pt
push
cs
or
in
in
cmp
test
pop
stos
setg
cmp
jo
and
push
loope
push
fwait
jae
jl
out
loop
and
or
sbb
popl
inc
adc
jne
add
push
scas
sub
mov
add
inc
inc
mov
inc
lret
testb
sbb
xchg
inc
or
mov
hlt
xchg
sti
push
adc
sti
cmp
ljmp
daa
or
adc
lods
fiadds
rorb
stos
shrl
xchg
in
mov
add
fstps
pop
mov
jno
push
das
mov
fbld
test
or
addb
push
test
jmp
add
lock
and
pop
mov
sbb
sti
xchg
fs
mov
adc
fsubrl
jne
dec
jo
in
mov
sarb
out
xor
push
fisubrs
adc
adc
sub
pop
fs
rcll
imul
div
adc
jmp
mov
test
dec
push
mov
insb
stc
repnz
pushf
outsb
bound
push
xchg
in
inc
cmp
andl
xchg
xchg
xor
add
sub
imul
push
mov
ficomps
scas
and
ret
jp
in
inc
cmp
add
push
dec
jl
ss
push
pushf
mov
jb
bound
adc
leave
das
les
ja
in
fcmovnbe
cld
cs
lods
notb
fidivrl
stos
add
xchg
test
jo
cld
pop
sbb
hlt
or
and
out
out
pushl
xor
hlt
sub
sbbl
cmpsl
popl
and
adc
xchg
imul
push
jns
push
sbbl
push
pop
sub
inc
inc
adc
and
repz
rcr
jle
in
lds
sbb
nop
fildll
pop
xchg
mov
in
inc
pop
and
jle
lahf
xchg
pushf
add
push
xchg
pop
jmp
mov
mov
mov
loope
mov
mov
inc
dec
mov
jg
divl
jp
dec
add
inc
mov
mov
adcl
pop
jne
pop
mov
insb
leave
ret
aam
je
xchg
popf
fcmove
gs
insl
lods
add
popa
push
pop
xorl
mov
add
pop
cltd
cld
xchg
int
int3
fisubs
rcll
mov
mov
cmp
rolb
push
es
jnp
sub
stos
jg
mov
cmc
and
mov
out
inc
cmpsb
addb
loopne
push
mov
fwait
mov
nop
jecxz
fistpl
test
jl
ficomps
xchg
cmp
icebp
movsl
icebp
mov
xchg
mov
aam
jp
insw
rolb
loope
or
pop
adc
inc
mov
inc
loop
out
popa
insb
xchg
mov
insb
xchg
mov
subl
icebp
xchg
add
imul
inc
iret
in
xchg
pop
fsubl
or
subb
mov
or
or
cmp
fidivrs
mov
dec
out
shl
dec
cmp
pop
sub
pop
push
rcll
daa
js
dec
movsb
outsb
pop
mov
jg
cmp
repz
add
jp
mov
lods
and
pop
mov
imul
lahf
jne
jbe
aad
mov
xor
fstpl
push
xor
ljmp
dec
and
sbb
cmpsl
stos
mov
fistps
hlt
push
mov
data16
jp
push
inc
xchg
mov
sbb
xchg
mov
xchg
pop
lcall
imul
cld
inc
jno
push
data16
movsb
pusha
cmp
push
cli
fsubr
add
addr16
int3
shll
mov
cmc
lds
add
pop
mov
sub
cmpsl
lock
fsubl
adc
lock
sbb
xchg
and
leave
ja
dec
mov
sub
xchg
fbstp
lcall
or
xlat
fisubrl
inc
xchg
loop
push
cmp
clc
mov
shl
and
push
and
jo
jecxz
imul
iret
call
jb
pop
push
pop
inc
inc
loopne
jns
push
int
add
cmp
pop
leave
out
pop
movsb
jno
xchg
push
orl
dec
sub
ret
add
loope
enter
mov
mov
js
std
pop
push
into
inc
repz
test
ficomps
div
mov
push
mov
jns
sarb
lret
es
rolb
jo
pop
leave
jmp
or
mov
sbb
les
xchg
jg
fidivl
daa
xchg
je
mov
inc
divb
test
jbe
mov
xchg
mov
mov
pop
and
push
pop
cmc
xchg
cmc
jae
call
mov
xchg
out
pusha
imul
roll
xchg
cmc
xor
imul
rorl
stos
sarl
push
cli
mov
jmp
out
push
add
loope
sub
xor
jmp
int3
cmp
mov
add
lret
jle
imul
inc
xchg
out
and
cmpl
leave
push
lods
dec
out
addr16
xchg
xlat
outsb
push
adc
lahf
push
pop
inc
jnp
in
in
pop
push
pop
or
aaa
dec
pop
daa
jge
xor
cs
fsubr
mov
lock
sub
adc
jb
and
push
fsubl
adc
cmpsl
adc
test
adc
loopne
addr16
in
jns
std
xchg
ds
icebp
adc
xchg
icebp
adc
adc
subl
fdivrl
mov
dec
mov
mov
shl
inc
xor
pop
cltd
cmpsl
and
cwtl
jg
add
ret
sbb
fwait
aaa
loop
inc
popa
pop
enter
or
arpl
into
mov
mov
push
jle
or
or
sbb
bound
mov
test
mov
pusha
mov
xchg
sbb
push
popf
fimull
sub
pop
mov
cmp
nop
sub
jle
mov
inc
pop
ds
add
cmp
mov
sbb
cmc
scas
push
cmpsb
push
xor
mov
mov
cmpsb
insl
xor
ret
aas
fadd
mov
mov
ljmp
jge
push
pop
mov
xchg
test
lret
sbb
xchg
pop
cmp
das
jnp
and
or
sbb
insl
cmpsl
data16
inc
hlt
mov
dec
xor
test
adc
cmp
inc
cltd
push
adc
inc
mov
not
jnp
lret
xor
dec
shrl
icebp
cmp
or
popf
aas
iret
out
je
xor
push
pop
in
or
movsb
bound
xor
adc
fwait
xchg
mov
pop
ljmp
lods
xchg
sub
inc
iret
out
xchg
lds
test
ret
jnp
stc
ja
adc
aaa
movsb
fxch
and
rcrl
lock
jns
aam
loop
pop
jbe
dec
pop
in
nop
jns
scas
dec
dec
aas
data16
ja
mov
popa
ret
nop
test
inc
cs
movsb
push
jmp
aam
in
cmovs
xlat
or
cmpsl
aad
push
call
cmc
outsl
out
xor
inc
dec
sbb
push
or
mov
js
cs
jecxz
push
repz
jge
lock
cmp
mov
mov
lret
fwait
push
and
or
icebp
cmp
or
add
xor
mov
idivb
popf
fsubrs
or
ret
aad
sti
aas
out
mov
mov
push
aaa
mov
inc
mov
sahf
jp
pushf
mov
push
and
rolb
addr16
sub
dec
scas
mov
adc
je
jns
jg
hlt
adc
cltd
das
daa
dec
jg
mov
xchg
leave
xor
dec
pop
fsubrl
test
hlt
ds
or
dec
xchg
mov
cmc
mov
mov
aas
inc
lds
arpl
loopne
xchg
mov
adc
xchg
rcl
test
imul
mov
xchg
cmpsb
nop
jecxz
xchg
mov
adc
cld
jge
sub
pop
pop
xchg
jnp
pushf
lods
test
inc
js
mov
out
insl
push
dec
scas
push
hlt
push
jno
mov
adc
in
cs
push
dec
sti
shlb
and
popf
dec
fld
and
or
mov
jb
adc
stc
cli
mov
lock
sahf
mov
loope
xchg
lret
cmp
push
cmpl
sbb
repz
push
mov
ljmp
or
cmovno
in
imul
shr
dec
and
cmp
fisttpll
out
insl
clc
dec
sbb
add
cmp
jno
cmp
loop
push
inc
shlb
or
jnp
adc
and
mov
or
cltd
iret
nop
dec
sar
mov
jle
lahf
movsl
jae
fiadds
ret
lods
cmpsb
push
or
subb
jg
xchg
sbb
xchg
pop
jnp
mov
and
push
movsl
adcb
mov
sbb
popf
in
xor
xor
inc
jecxz
mov
push
jle
adc
pushl
addr16
ret
cld
pop
ret
sbb
lock
xor
mov
jl
in
mov
push
out
add
xchg
add
add
pop
add
xchg
add
cmpsl
add
push
add
aaa
add
jbe
add
add
add
add
add
add
add
add
add
add
push
add
ja
mov
incl
add
add
add
add
or
add
add
add
add
add
add
insl
add
push
add
add
js
sbb
push
add
insb
xor
loope
add
sbb
sbb
sbb
sbb
sbb
jno
sbb
and
pop
dec
js
add
pop
outsb
push
jae
jae
dec
add
lods
push
and
add
xchg
push
mov
pop
js
sbb
adc
mov
pop
adcl
test
add
dec
test
xchg
or
adc
adc
add
push
incl
cld
or
orb
orb
decl
add
add
leave
sub
jmp
add
mov
add
xor
add
decb
je
push
in
loopne
decl
lock
push
sub
push
add
incl
adc
call
adc
inc
faddl
enter
inc
call
lea
clc
push
adc
add
add
add
xor
pop
add
add
std
sbb
sbb
sbb
sbb
sbb
flds
sbb
sbb
add
add
inc
add
gs
imul
insb
add
fs
inc
gs
jns
dec
outsl
gs
call
insb
insb
add
and
gs
outsb
inc
add
add
outsl
fs
insb
dec
insb
jb
enter
add
add
add
add
add
pop
add
and
add
add
add
add
mov
add
add
add
add
add
push
sub
shll
ja
in
xchg
hlt
outsb
cmp
int
jbe
out
je
movl
sbb
jbe
and
xor
std
dec
jnp
xchg
cld
mov
sub
mov
sahf
ljmp
dec
push
rcrb
cmc
shlb
xchg
add
push
xchg
xor
aam
ret
sti
pop
stos
bt
cwtl
jmp
ror
push
pop
add
fcomp
pop
mov
sti
in
daa
mov
cmp
mov
nop
std
xor
lret
into
inc
rcl
xor
fsubl
imul
mov
jmp
repnz
in
and
xor
test
dec
jg
adc
int3
repz
mov
and
jns
or
jne
into
dec
outsb
sbb
ja
adc
lods
push
les
mov
out
push
or
popa
xchg
xchg
cwtl
xchg
mov
adc
sti
sbb
jne
pusha
repnz
fnstenv
fwait
adc
xchg
in
mov
mov
mov
dec
cld
sbb
loop
sub
jge
mov
push
pop
cmp
lods
jle
out
clc
xchg
sub
pop
pop
movsl
dec
push
aas
mov
xchg
and
loope
sbb
cwtl
jge
jecxz
int
jge
out
mov
dec
lods
dec
sub
pop
lret
daa
adc
cmpsb
mov
lret
and
daa
ss
out
pop
jo
clc
xchg
rorb
add
mov
jg
push
xchg
xchg
inc
mov
dec
es
add
pop
or
push
xchg
cmp
int
in
lods
subl
int3
sbb
insl
jo
mov
scas
inc
mov
dec
sbb
movsb
hlt
pop
pusha
mov
gs
lahf
sub
pusha
mov
lea
loope
xor
lods
mov
jmp
pop
loopne
les
sub
out
add
mov
cli
jg
popa
leave
popf
push
cli
xorb
and
jne
push
xor
jmp
mov
pop
shll
daa
xor
or
sbb
adc
pop
and
jbe
scas
mov
jl
jecxz
jne
scas
lea
sub
mov
mov
xchg
pop
loope
dec
inc
push
sub
mov
pop
mov
mov
xor
mov
inc
jnp
push
mov
sub
dec
inc
aad
and
push
cbtw
cmp
dec
rcr
sahf
daa
dec
popa
rcrl
repnz
pop
shll
idivl
popa
mov
sarl
mov
jns
cld
gs
adc
stos
aaa
lods
scas
mov
movsl
lods
movsl
hlt
stos
sub
add
andl
lcall
mov
xchg
adc
push
push
pop
loope
lret
js
push
add
push
iret
and
stos
insl
test
adcl
fdivrp
ljmp
sbb
xor
pusha
stos
repnz
shlb
outsb
pop
mov
or
jo
aas
test
jb
mov
lods
and
inc
sbb
repnz
xlat
inc
sub
das
or
mov
gs
sarb
cli
js
sub
arpl
push
adc
cwtl
imul
inc
lcall
lds
pop
cmpsl
xor
aaa
pop
cmpsl
fbstp
test
repnz
std
push
aam
xchg
into
movsb
xchg
push
mov
leave
mov
mov
dec
lret
xor
jno
or
stos
fldcw
jne
sub
push
pusha
aas
ljmp
ja
xchg
pop
call
push
clc
int3
loop
xchg
mov
aad
mov
sub
ss
outsb
loopne
int3
rcr
in
dec
add
out
xor
xchg
xchg
insb
mov
lea
dec
jp
mov
mov
stos
mov
scas
add
bound
sbb
jne
xchg
add
imul
aas
xor
mov
jb
mov
mov
cwtl
sub
inc
sahf
jno
inc
xchg
pop
bound
pop
int
push
loope
notb
mov
mov
or
push
and
jmp
mov
das
rclb
cli
cmp
jge
test
shl
das
cmp
insb
stos
das
jne
xor
out
popf
fcomi
fildll
pop
adc
dec
rcrl
nop
push
inc
dec
jo
dec
mov
loope
shlb
and
pop
sbb
xlat
fstpt
xchg
pushf
adc
pop
outsb
in
jg
cmp
inc
pusha
into
mov
divl
mov
fmull
cmpsl
divb
push
and
aaa
ret
cwtl
xchg
adc
jmp
enter
pop
fwait
jle
pusha
mov
pushf
pop
and
and
or
mov
xor
jbe
iret
out
adc
andl
lea
and
xchg
inc
sbb
mov
into
int3
inc
inc
pop
sbb
pop
xor
cwtl
sub
fs
xor
mov
mov
add
aaa
int
fiadds
or
mov
pop
pop
leave
lock
jne
xchg
jl
cmp
push
mov
movsl
jnp
test
scas
push
sbbb
test
dec
push
cmp
movsb
pop
xor
out
dec
push
cmpsb
mov
adc
aad
sbb
jns
dec
xchg
mov
icebp
push
fnstsw
dec
ja
aaa
outsl
jp
cmpsb
jno
cs
push
mov
das
pop
ljmp
lods
nop
sbb
ljmp
pop
pop
pop
pop
pop
pop
xlat
sahf
int
xchg
arpl
add
cld
repz
dec
nop
push
gs
inc
int
mov
lcall
ja
movsl
or
test
ret
addb
xor
lahf
in
enter
movsb
into
in
sub
test
lcall
jbe
lds
mov
xchg
push
xor
int3
imul
dec
flds
ret
movsb
insb
adc
and
jnp
dec
sbb
push
pop
notl
int3
aas
rep
xchg
or
mov
divb
inc
or
nop
call
sub
inc
xchg
lret
ret
xchg
repnz
adc
jge
adc
jo
adc
mov
adc
cmc
push
imul
mov
aad
rcll
and
aas
test
rcrb
push
cmpsb
dec
adc
and
xchg
sub
mov
roll
insb
test
inc
das
iret
xor
testb
mov
hlt
sub
jns
enter
cli
add
and
popf
inc
and
add
lahf
mov
cmp
xor
pop
adcl
and
push
xchg
daa
add
jno
mov
cmpsl
out
xor
xor
cmpsl
adc
mov
mov
jns
xchg
fisttps
cmp
roll
cltd
enter
roll
lcall
jp
cld
mov
repz
add
cltd
cmpsl
and
pop
ja
adc
or
das
fiaddl
cmp
fimull
popa
rclb
enter
push
push
inc
jl
dec
dec
out
test
in
dec
inc
pop
out
rcrl
daa
lcall
sbb
jo
insl
aas
xchg
push
dec
jno
or
lock
xor
mov
mov
push
sbb
inc
lret
ficoml
sbb
fisubl
dec
rorb
mov
inc
lods
xchg
or
imul
dec
mov
add
push
outsb
jp
out
out
mov
mov
ret
cmp
loop
mov
adc
mov
fdivs
in
les
jno
jno
gs
insl
xlat
cli
xchg
mov
rcr
ds
mov
mov
cltd
stos
cmc
inc
cmp
addl
mov
lahf
push
and
push
idivl
pop
popa
jae
inc
sub
jle
inc
push
pop
out
fwait
sbb
push
cmp
aam
outsl
cmp
out
and
sbb
jb
sbb
fstpt
lock
adc
insl
and
test
les
adc
jle
inc
push
xchg
cmp
stos
xor
mov
divl
icebp
mov
in
ds
xor
movsb
imul
xchg
inc
mov
jbe
ss
jmp
pop
loop
sahf
fimuls
pop
xchg
jmp
mov
pop
adc
fdivrl
push
in
pop
and
call
dec
repnz
adc
jno
push
and
loop
jnp
bound
cmc
aad
fdivl
and
pop
and
int
imul
fisttpll
inc
sbb
xchg
ja
xabort
movsl
bound
or
xor
sbb
test
jns
jecxz
push
mov
jmp
mov
into
or
add
adc
lock
call
jo
jmp
out
leave
in
xchg
daa
xchg
mov
xchg
push
push
stos
in
lret
stc
cmp
mov
xorb
sbb
cmp
sub
mov
sbb
adc
jbe
int3
and
inc
mov
ja
cmp
mov
rolb
call
aaa
adc
in
aaa
lock
inc
shll
jl
mov
aam
in
push
xor
fildl
inc
stc
sub
jp
ljmp
pop
lods
ffree
into
in
dec
add
and
jb
int
out
push
add
orb
cmp
adc
test
dec
sar
inc
imul
adc
mov
push
jecxz
popa
insb
add
mov
mov
inc
sbb
lds
movsl
mov
mov
scas
pushl
or
xor
add
add
xchg
outsb
jno
push
rclb
pop
sub
pop
cmpsb
jne
jl
push
dec
rcrl
and
xorl
pop
dec
mov
mov
add
lahf
mov
leave
pushf
lods
jb
or
adc
sbb
and
in
mov
pop
sbb
test
inc
mov
dec
sti
fidivs
loop
cwtl
mov
sbb
pop
jle
out
jbe
sbb
pop
pop
fsqrt
adc
clc
push
jb
xor
repnz
mov
loop
shll
incb
lcall
xor
pop
push
and
xor
nop
jbe
ljmp
rcrl
scas
adc
int3
test
int3
push
mov
fcomps
fs
and
xchg
loopne
pusha
lock
popf
add
hlt
adc
push
fnstsw
movsl
jns
add
dec
pop
pop
pop
jae
or
popf
inc
clc
sar
ljmp
fistpll
xchg
nop
or
xor
mov
jae
ret
xor
adc
sarl
imul
push
les
fldl
xlat
push
call
iret
dec
test
je
jne
cmp
movsb
jae
push
test
or
or
sbb
jb
arpl
aas
ror
outsb
jno
loop
iret
add
pop
shlb
mov
hlt
add
adc
aad
hlt
out
into
cs
cmp
cmpl
gs
les
repnz
mov
xchg
and
jle
cmpsl
push
xor
push
out
cmpsl
lcall
or
daa
xchg
divb
push
cli
int
sub
js
xlat
ds
xlat
cmp
sbb
pop
nop
dec
into
lret
sub
and
addr16
push
leave
mov
push
inc
sbb
out
sarl
subb
push
push
out
stos
push
aad
lret
mov
and
fcos
inc
mov
idivb
cmp
fidivl
icebp
outsl
pop
or
nop
cmp
repz
stos
bound
aad
sub
push
or
push
add
pop
lret
pop
or
cli
cld
std
mov
sub
xlat
int3
aam
sti
pop
lcall
fs
hlt
scas
mov
mov
std
mov
rcll
repnz
cmpsb
jb
xor
xor
or
push
cmp
stos
nop
mov
dec
stos
pop
pop
xchg
jge
pop
jg
sub
mov
ret
xchg
inc
adc
out
int
cmp
xor
outsb
push
pop
mov
dec
sbb
imul
inc
push
sub
imul
add
cli
pop
call
lea
mov
fsubrl
adc
xor
sar
inc
std
dec
sbb
push
jnp
insb
cltd
push
push
dec
cmp
filds
and
outsl
enter
xor
roll
push
inc
in
cmp
xor
test
pop
movsl
aam
push
movb
push
es
mov
js
arpl
mov
icebp
mov
test
mov
cld
insb
stc
xor
jp
mov
cli
cmp
mov
outsl
out
dec
dec
or
sbb
dec
les
cmpsl
sub
in
and
push
ljmp
inc
or
dec
push
cli
jg
add
out
shll
jecxz
js
xor
xor
mov
je
or
adc
mov
dec
ret
add
ror
scas
bound
inc
cmp
scas
out
sbb
insb
shrl
insb
into
and
xor
hlt
pop
iret
jecxz
cmp
xor
push
xor
test
adc
xchg
inc
rcr
adc
rcr
push
pushf
xlat
repnz
xchg
pop
inc
sub
aad
jle
aam
jg
inc
cmp
dec
movsl
pop
pop
test
loopne
xor
pop
inc
dec
fsubl
mov
cmp
xlat
sub
xor
and
cmp
fstps
adc
movsl
pop
shll
out
adc
mov
pop
mov
repz
adc
pop
aad
aas
inc
jb
inc
or
stc
or
data16
int3
mov
or
xor
lahf
dec
jae
adc
push
lods
jo
and
fdivrs
pop
enter
mov
adc
lods
fcompp
fmuls
pop
push
stos
fs
hlt
mov
daa
sarl
mov
xchg
fstpl
fsub
sub
lret
pop
out
push
aas
jge
xor
and
jb
jbe
in
lret
mov
adc
pop
xchg
sti
push
lods
rcrl
lods
mov
dec
shrb
mov
pop
sbb
ret
xor
sub
push
clc
inc
sbb
popa
lret
mov
pop
scas
test
xor
rorl
jne
xor
outsl
mov
sbb
hlt
mov
add
mov
inc
dec
pop
hlt
mov
push
mov
xchg
jp
in
popa
imul
adc
in
jg
nop
fstl
push
add
in
xor
mov
repz
push
sbbb
dec
dec
cld
shl
jmp
jecxz
bound
imul
repz
mov
sbb
cmp
movsl
ss
and
push
sub
in
xchg
or
hlt
mov
pushf
adcl
mov
stc
fmull
das
or
xlat
mov
cmpb
jl
data16
sbb
cmp
sub
adc
mov
scas
mov
outsb
jb
or
xchg
outsb
gs
or
vpunpckhqdq
sub
jecxz
neg
insb
mov
mov
mov
jle
dec
pop
mov
lret
mov
ja
or
or
sub
jne
push
repz
xchg
lret
or
sbb
and
sti
jmp
aaa
cmp
mov
mov
es
cli
roll
cwtl
js
mov
shll
jno
jne
sub
cltd
pop
int3
loop
movsl
das
inc
push
lcall
dec
mov
sub
fs
xchg
repnz
or
das
insl
jns
fldenv
mov
test
jns
cmpl
cmp
bound
std
lds
roll
and
jbe
in
jne
pop
dec
mov
ret
cmp
cmp
mov
sub
fisttpll
ljmp
adc
nop
and
testb
out
ja
outsl
mov
test
push
pop
add
mov
das
leave
dec
and
lcall
popl
cld
dec
jmp
test
fdivl
into
movsb
iret
jnp
arpl
int3
bound
sub
sbb
pop
pop
pop
mov
out
dec
adc
mov
testl
addr16
ljmp
lret
insb
sub
pop
in
jb
pop
les
xlat
mov
pop
stos
aaa
movsb
out
scas
shlb
sti
adc
adc
aas
xchg
in
mov
mov
jmp
xchg
inc
push
cmp
lods
mov
lods
mov
and
cmc
jmp
or
sub
push
sub
push
pop
jns
jge
mov
stos
push
ja
shrl
out
out
sbbb
mov
dec
adc
gs
sub
push
cli
ds
ds
sbb
and
fiadds
call
jl
xchg
mov
and
stc
lds
in
or
bound
icebp
or
and
and
pop
test
mov
pop
popf
cmp
pop
push
adc
jo
sahf
enter
jno
mov
mov
pushf
daa
mov
into
in
lret
add
inc
stos
or
and
out
push
adc
fisubrs
or
mov
adc
pop
test
pushf
inc
in
mov
add
rcr
mov
cmpsb
rclb
sub
lret
jl
mov
cmp
sahf
negb
enter
test
sbb
ret
ds
lret
inc
mov
add
aam
push
cwtl
sarl
xor
clc
aaa
lods
sub
push
cmp
jecxz
ds
ljmp
mov
mov
sub
addr16
es
int3
inc
push
pop
lods
xchg
xchg
pop
cmpl
cmp
xor
add
roll
or
in
pop
rorb
push
inc
fiadds
and
fimull
cwtl
dec
adc
fidivrs
inc
data16
sarl
jge
push
andl
daa
sbb
iret
mov
push
je
mov
pop
jbe
test
pop
es
push
iret
xor
xchg
cmp
sbb
call
cmp
jnp
sbb
mov
sub
fnstsw
push
lock
xor
pushf
sub
std
push
repz
push
clc
and
add
jge
or
adc
gs
cmp
push
and
inc
jecxz
stos
jle
or
mov
fmuls
pop
scas
ljmp
xor
jno
ficoms
cmp
mov
hlt
sbb
jle
popa
insb
stos
mov
push
mov
les
out
mov
adc
add
ja
shrb
cmpl
ljmp
cmp
aas
cmc
inc
arpl
mov
sub
daa
stos
xor
hlt
sub
stos
pop
cmpsb
mov
xchg
call
je
or
nop
in
in
push
pop
stc
jno
insl
xchg
xor
xchg
test
rclb
xlat
rorb
rol
cs
js
mov
xchg
out
and
mov
inc
pop
or
fisubrs
adc
ds
add
arpl
push
xchg
pop
scas
mov
inc
scas
movsl
pop
pushf
in
enter
adc
or
cmp
popf
pop
pop
and
fmull
and
mov
pop
cmp
jle
add
xor
add
fnstsw
test
mov
xor
push
mov
pushf
jmp
imul
jmp
xlat
popw
and
push
daa
push
xchg
or
dec
sub
cmp
test
outsl
sub
sti
lods
push
pop
fimull
pushf
sbb
pop
inc
mov
int3
shll
rol
loopne
push
lahf
fadd
xchg
ret
pushf
xlat
in
jmp
mov
ss
inc
mov
xchg
insl
sbb
push
push
xlat
dec
xor
jge
in
cmp
sbb
inc
adc
mov
push
adcl
icebp
or
lret
inc
sbb
mov
sub
loopne
cmpl
mov
push
cltd
imul
jb
push
jo
pushf
les
fwait
mov
sahf
cwtl
push
mov
je
repz
test
add
sbb
scas
cmp
cmpsl
fcmovbe
ret
shrl
test
push
out
outsb
lret
jne
shl
shll
fistl
dec
dec
cmp
stos
cmpsb
xchg
sub
inc
pop
iret
shl
mov
adc
xchg
and
pop
mov
or
jns
fidivrl
sti
mov
and
push
cmpsl
mov
mov
or
push
in
rol
pop
cwtl
or
mov
repz
fwait
sti
add
mov
enter
pop
fsubs
xor
xchg
hlt
xchg
dec
leave
sub
je
dec
pushf
sbb
outsb
pop
mov
aaa
cmp
in
jne
mov
aad
insb
xlat
xor
stc
adc
or
push
pop
adc
mov
mov
mov
cmp
lret
dec
inc
inc
xor
aaa
or
and
jns
sti
xchg
outsb
lret
add
cmp
cmp
rclb
aam
mov
inc
ds
mov
sbb
cmc
xchg
or
adcb
adc
cmp
repnz
pop
xor
jmp
addr16
adc
inc
cmp
cmp
mov
or
add
add
add
mov
add
dec
add
xor
add
add
add
add
roll
add
add
insl
add
push
add
add
add
sbb
add
add
add
loope
add
add
add
add
add
addb
add
add
stos
stos
cmp
mov
lcall
jle
add
add
pop
and
and
outsl
and
les
mov
add
add
pop
add
add
sbb
add
add
add
add
or
add
fs
mov
add
add
cmpsb
sbb
sbb
daa
dec
sbb
pop
xor
add
and
jb
push
dec
mov
jb
fs
add
push
outsb
or
cld
stc
xor
out
sti
mov
dec
inc
in
jmp
fdivr
or
decl
subl
ret
add
adc
leave
dec
inc
add
decl
pop
in
mov
jno
pop
ret
in
add
adc
sbb
add
adc
and
push
inc
cld
stos
aam
rolb
adc
loopne
mov
or
lea
pop
add
jmp
std
pop
std
je
push
xor
imul
and
push
adc
push
adc
loopne
add
dec
jne
sarb
jo
dec
adc
push
call
add
push
add
mov
and
je
add
add
add
add
xchg
sbb
sbb
add
cmp
cmp
out
add
sbb
jae
outsl
gs
insb
movsl
insl
insl
add
inc
je
add
movsl
outsb
jmp
inc
outsl
gs
imul
jae
insb
je
push
push
insb
imul
inc
push
jne
gs
jae
add
jae
loopne
insb
add
add
add
enter
add
mov
ret
jle
jge
out
das
addr16
idivl
mov
xchg
mov
cmc
lods
repz
ss
fcmovbe
jge
imul
or
push
mov
push
sbb
jae
xchg
sahf
nop
mov
pushf
push
aad
inc
dec
inc
test
cmp
test
ret
and
add
dec
jmp
xor
inc
pop
jle
pusha
outsl
or
dec
std
daa
orb
mov
sbb
dec
lock
aaa
jbe
jbe
adc
cmp
std
jb
rolb
add
pminub
daa
or
adc
pop
add
mov
mov
ret
xlat
jno
pop
adc
or
hlt
int
lret
repnz
adc
test
pop
pop
jbe
and
fnstenv
mov
mov
into
out
mov
es
pop
xor
push
inc
sub
leave
shll
mov
fsubr
push
sub
ret
fwait
loop
or
out
mov
movsl
or
xor
jecxz
sarl
sarl
jmp
sub
rcll
shl
jns
sahf
pop
inc
and
jbe
lods
mov
push
mov
test
fsubs
nopl
mov
sub
jle
xchg
fwait
test
push
fstpl
push
movsb
jbe
repnz
jnp
push
lds
daa
jns
xchg
inc
cmp
lret
mov
cld
mov
jp
fstl
ror
cli
mov
leave
jne
je
or
je
in
shl
daa
xchg
lods
sbb
loope
jge
lahf
adcl
jl
in
imul
ret
stos
cmp
sbb
stos
mov
adc
aas
cmp
ds
mov
lret
ljmp
movsb
add
aas
sahf
add
mov
mov
mov
adc
lock
mov
int
pushf
push
inc
adc
in
mov
sbb
jl
icebp
or
pushf
and
mov
lahf
add
mov
and
sub
push
add
aam
xlat
cmpsb
pop
sbb
push
xor
add
adc
mov
div
push
outsl
inc
xchg
pop
add
jno
xorl
dec
xchg
pop
pop
dec
pop
in
out
mov
mov
push
push
dec
pop
lock
stos
mov
lea
or
ds
inc
xchg
jo
repz
daa
das
jo
lcall
data16
cmp
stos
xchg
xor
out
les
or
sub
cltd
add
sbb
out
data16
inc
jp
jle
add
jnp
inc
cmp
and
xor
pop
xor
js
shl
mov
jo
in
sti
mov
imul
mov
jg
in
lds
mov
cmp
mov
stos
mov
gs
rclb
lahf
mov
aad
sti
loop
lcall
sahf
cmp
sbb
push
pop
and
icebp
lock
sahf
ret
jae
and
cltd
popf
fs
push
outsl
xchg
mov
xlat
orb
call
out
jae
imul
xlat
pop
inc
jle
and
cltd
dec
mov
push
into
xlat
lds
clc
ficoml
repz
add
cmc
push
test
test
int3
or
cltd
movsl
in
fldt
lcall
testl
cmpsl
lock
lcall
pusha
jne
mov
sbbb
xchg
dec
xor
jle
mov
mov
cmpsb
out
popf
sbb
mov
scas
out
pusha
inc
je
mov
and
cmp
sbb
jno
popf
fisttpll
lock
ljmp
cwtl
inc
mov
cmc
ret
xor
pop
xchg
inc
and
xor
cmp
in
inc
mov
pop
push
cmc
aad
xor
and
lock
mov
fsubl
ret
test
cmp
sbb
cmp
fwait
cmp
and
sub
out
xchg
pusha
jo
fbld
sub
lret
bound
cmp
add
out
dec
cs
add
jecxz
adc
dec
les
xchg
sbb
push
xor
loope
sbb
jbe
and
ret
lock
jl
jl
push
pop
movb
push
sbb
adc
mov
cmp
inc
aad
andl
gs
mov
mov
mov
push
les
scas
ja
sub
aam
xor
es
lret
pop
xor
lret
jno
push
adc
fcoml
aaa
add
adc
fcoml
lcall
in
sbb
enter
mov
ljmp
test
gs
push
test
add
xor
adc
jno
pop
adc
mov
cltd
test
mov
pop
pop
inc
adc
loop
nop
mul
mov
sarb
pop
pop
add
jb
dec
mov
das
inc
mov
inc
call
dec
xchg
inc
nop
and
dec
add
cwtl
icebp
mov
or
repz
in
scas
mov
or
call
mov
or
xchg
aad
stos
fsub
push
nop
and
leave
mov
sbb
mov
insb
sti
and
add
or
xchg
push
mov
cmp
dec
test
je
mov
xor
xchg
test
push
js
mov
xor
inc
gs
dec
or
adc
stos
sub
repz
mov
jmp
pusha
xorb
repnz
mov
and
lcall
pushf
pop
stc
sub
stc
js
xchg
push
mov
adc
cmp
dec
fmull
pop
bound
mov
je
loop
mov
add
aaa
xor
pop
enter
sbb
daa
push
ret
xchg
scas
inc
or
rclb
push
mov
inc
xchg
out
clc
int
les
push
and
faddl
ret
pop
sbb
inc
jp
das
test
xchg
pushf
jno
inc
pusha
adc
dec
push
ret
shl
cmpsb
add
mov
stos
aam
cli
xlat
pop
xchg
int
mov
insl
jb
lahf
mov
pop
popf
std
xor
push
inc
dec
mov
sbb
sub
dec
mov
or
inc
cmp
jp
mov
add
cmp
mov
xchg
xchg
aaa
xor
cmp
push
or
adc
icebp
nop
mov
adc
and
scas
mov
test
add
dec
cwtl
in
push
dec
mov
pop
pushf
clc
ret
cmpsl
pop
lret
pop
mov
and
lods
mov
das
pop
rcr
test
mov
js
xchg
or
cmp
cld
aaa
push
fsubr
popf
adc
jno
xchg
pop
fdivrl
pushf
movsb
bound
inc
divl
arpl
lcall
enter
jmp
push
les
in
pushf
fs
rcll
mov
loope
sbb
lret
jnp
sbb
sub
mov
sub
push
bound
imul
push
jnp
into
pop
mull
lahf
or
mov
pushf
pop
out
mov
fs
push
xchg
je
fiadds
lcall
fisttpll
in
xchg
int3
lock
in
sti
cmp
popa
jns
inc
in
ret
sbb
sub
add
mov
leave
std
mov
mov
ss
leave
add
test
sbb
in
adc
push
daa
jo
in
xchg
ret
incb
cltd
call
pop
fsub
dec
stc
pop
sbb
lods
lock
movsl
incl
lock
sbb
jnp
mov
mov
shll
popa
aam
iret
js
loope
pusha
dec
out
lods
stc
pop
jb
fildll
lcall
pop
rclb
xor
sbb
out
push
mov
pop
shl
stos
in
mov
int3
dec
in
cwtl
lcall
sub
loope
jecxz
inc
pop
adc
jge
dec
bound
mov
add
sub
aad
rcrl
sbb
dec
ss
je
ljmp
cmpsl
adc
aam
movsb
dec
iret
js
test
out
das
and
mov
adc
pop
add
inc
rorb
mov
pop
cmp
sbb
popf
mov
clc
mulb
gs
sub
shll
mov
push
ficoms
mov
inc
je
aam
pop
ffree
out
xchg
adc
pusha
push
mov
mov
popa
adc
in
mov
loope
pop
nop
add
push
shl
nop
cltd
dec
stos
cmp
shr
cmp
movsl
xor
jecxz
sbb
or
xchg
and
mov
or
mov
adc
dec
imul
pusha
or
stc
push
lret
xchg
jns
repz
repnz
add
jg
sbb
out
dec
fdivl
lods
inc
ss
and
rcr
jl
stos
and
sbb
adc
nop
xchg
jae
hlt
mov
mov
ss
push
jns
xchg
xor
insl
lcall
ljmp
movsb
jmp
lock
mov
push
icebp
jle
movsb
mov
push
push
or
ret
lods
adc
cmp
push
add
push
sbb
jo
leave
into
mov
inc
lds
adc
cmp
clc
bound
jl
mov
in
test
ljmp
ja
adc
xorb
push
int3
hlt
pusha
sbb
ret
dec
xchg
faddp
mulb
cmp
xor
push
lds
pop
xlat
and
js
pop
into
outsl
xchg
mov
mov
adc
insl
sub
or
cmc
mov
test
cmp
cmp
jnp
cltd
jmp
xchg
jle
cltd
ret
sub
pop
dec
dec
sti
mov
xlat
std
xor
push
dec
sbb
loop
xchg
push
nop
sbb
adc
or
das
xor
rorb
roll
or
mov
out
jecxz
data16
jns
outsb
push
sarb
enter
pop
mov
pop
push
cmp
pop
hlt
mov
test
cli
loope
sbb
lahf
xchg
or
pop
loop
js
in
testl
and
sti
ret
jae
sbb
mov
enter
std
cli
xlat
les
sarl
addl
mull
rcl
roll
in
push
cltd
inc
or
pop
icebp
rorl
adc
test
shr
xchg
sub
push
dec
and
insb
movsb
push
sub
adc
loopne
out
ficoml
mov
cltd
arpl
and
cld
add
insl
pop
inc
and
mov
push
shlb
jl
stos
adc
add
jae
addl
cli
aad
imulb
into
fisttps
gs
xlat
mov
aas
mov
es
inc
int
jl
lahf
cwtl
jns
and
xchg
ja
sbb
out
pop
mov
ja
loope
inc
stos
roll
mov
and
or
enter
cltd
movsl
hlt
pop
xchg
cmovns
dec
or
adc
cmp
push
mov
mov
lret
out
cmp
test
pop
xchg
mov
mov
inc
xor
xlat
cmp
rolb
sub
or
jo
add
int
mov
cmp
scas
and
fwait
or
hlt
int3
lods
sub
jl
popa
mov
clc
testb
adc
in
int3
mov
pop
dec
call
fwait
mov
aad
jge
mov
popf
jbe
scas
ret
inc
and
xor
dec
xlat
xor
add
sbb
nop
ja
inc
adc
fldl
lock
inc
add
rorb
addr16
push
pop
sbb
cwtl
jb
subl
lea
jmp
adc
sub
lds
js
test
imul
fimull
pop
mov
push
shl
pushf
mov
sbb
cmp
jl
mov
cltd
inc
push
dec
and
int
lock
sahf
sbb
sbb
jmp
popa
cmp
mov
cwtl
jnp
and
push
lds
xchg
mov
and
cs
jns
call
mov
je
mov
mov
lock
or
push
mov
bound
movsw
mov
jecxz
sub
jnp
lock
xchg
pop
outsl
stos
xor
push
inc
stos
dec
jmp
adc
and
pop
adc
fcompl
jmp
loop
mov
push
adc
stos
jo
daa
sub
test
mov
xor
inc
in
push
mov
xchg
or
push
pop
adc
stos
sti
dec
add
mov
out
out
je
mov
mov
adc
add
repz
xchg
jno
cld
mov
jbe
mov
inc
and
addr16
fsubr
insb
rol
cltd
movl
xor
xchg
cmp
cmp
cld
or
jle
js
pop
mov
loop
sar
loope
add
stc
stos
pop
adc
or
pop
movl
xchg
jne
jge
movsb
push
popf
daa
loop
popf
xchg
mov
mov
xor
mov
divb
dec
shll
jmp
mov
lcall
mov
sahf
push
mov
ja
sbb
int
stos
pop
push
jp
repz
or
inc
aad
mov
ret
adc
adc
add
mov
jge
pop
dec
mov
ret
stc
xor
xlat
jnp
cs
scas
cmp
mov
mov
lret
and
imul
sbb
cmp
std
mov
mov
mov
mov
loop
jle
repnz
mov
mov
ljmp
xchg
push
cmp
out
cmp
inc
nop
pop
lods
cwtl
sbb
dec
push
gs
js
daa
xor
outsl
loop
mov
xchg
pop
and
out
mov
pop
fwait
leave
mov
mov
dec
mov
cmp
pop
scas
push
push
shlb
jbe
cmp
cmp
or
ret
pop
js
in
jno
mov
mov
call
rcrb
int3
xchg
js
mov
sbb
xchg
adc
bound
xchg
stc
decl
jmp
scas
aad
mov
pop
sbb
cmp
mov
and
pop
inc
xor
call
jae
jbe
or
mov
dec
lret
clc
and
scas
sbb
lea
xor
in
or
mov
sbb
mov
push
ja
inc
and
out
movsl
repnz
xchg
sbb
pop
jno
lock
sbb
pop
fsubrs
inc
xchg
cld
je
out
or
int3
repnz
in
adc
jo
jo
sbb
xchg
mov
std
xchg
mov
sbb
adc
add
aas
out
repz
out
pop
adc
outsl
and
das
sub
scas
ret
cmp
push
mov
repnz
fdivrs
iret
int
shll
mov
push
dec
cmpsl
fadd
sub
mov
popa
popa
popf
sub
jmp
pusha
push
cmp
fstpl
cmc
xor
ss
jl
push
lcall
loop
xor
pop
stos
lock
repz
jne
push
mov
popf
icebp
adc
sub
in
or
push
loopne
or
dec
dec
aam
aam
add
adc
xor
arpl
pusha
jb
mov
scas
fldt
push
mov
arpl
int
or
push
fistpl
popf
mov
ret
xchg
sbbl
fld
fisubrl
in
adc
jmp
or
xchg
and
fisubrl
popf
mov
jg
mov
ss
fsubrs
pop
adc
xor
imulb
les
inc
mov
add
cmp
pushf
jns
je
out
add
mov
add
aam
ljmp
mov
int3
sarb
stos
cmpl
mov
ljmp
outsl
push
cmove
mov
dec
sti
or
icebp
cmc
mov
ds
or
repnz
sarb
adc
dec
pop
cmp
sub
mov
sbb
push
and
es
clc
lods
cld
xor
mov
test
lods
cmpsb
outsb
into
lret
dec
test
es
mov
sbb
dec
js
cmp
int3
test
add
jg
or
test
ja
js
shll
and
ss
or
cmp
loopne
mov
ljmp
or
sub
pop
add
out
repnz
xchg
add
aaa
xor
adc
stos
stos
push
jg
and
push
pop
jp
jbe
std
jb
sub
cld
imull
cmc
int3
jg
sahf
stos
enter
and
loop
aaa
sub
sbb
xchg
out
cs
sub
repz
pop
push
dec
xor
and
sub
inc
daa
lret
in
lods
pop
cmpl
fsubs
mov
xchg
mov
adc
lods
xchg
mov
jp
es
mov
push
mov
adc
push
fdivs
std
push
rorb
pop
int
test
lds
push
sbb
lret
lock
inc
mov
push
arpl
add
int
sbb
cmp
fucom
fs
outsl
mov
add
hlt
mov
inc
in
pop
rcll
test
fmuls
mov
fsub
jbe
lods
adc
outsb
leave
lret
xchg
xchg
mov
inc
pop
std
aam
xchg
inc
lret
insb
add
push
jecxz
sbb
cmc
in
xor
adc
dec
lock
js
jg,pn
mov
adcb
mov
add
jnp
adc
pop
cld
ja
dec
pop
lods
add
addr16
out
inc
dec
pop
push
and
sub
and
ds
fstpl
shlb
inc
data16
subl
sub
leave
stc
dec
mov
sub
push
imul
movsl
mov
cld
cltd
aaa
add
mov
test
das
mov
mov
cld
lea
mov
lods
jo
pop
inc
xchg
leave
and
sarl
xorl
jnp
mov
add
pop
push
push
push
jns
sub
cmc
stos
nop
fsubl
rol
jg
push
xchg
mov
test
mov
popa
cltd
jno
repnz
mov
push
idivl
sub
hlt
jne
pusha
adc
adc
aam
adc
js
ficoml
fmuls
pop
sub
mov
sbb
hlt
subl
inc
cmpsb
and
mov
leave
mov
testl
idiv
mov
sub
out
mov
add
stos
call
fcoms
imul
idivl
sbb
mov
and
loope
mov
inc
sub
fwait
movsl
rcll
icebp
push
add
inc
adc
ret
test
outsb
adc
call
or
sbb
stos
mov
push
jo
movsl
jne
movsb
mov
inc
scas
jo
cmpsb
pop
mov
mov
push
lods
fnsave
mov
aad
ficompl
mov
dec
lahf
adc
cld
push
bound
sar
push
dec
cmp
lods
xchg
push
xor
jge
pop
ja
pop
cwtl
insl
lret
pop
fsubrs
mov
aad
cltd
jge
mov
xchg
cmpb
jbe
loopne
or
pop
dec
ljmp
dec
cmp
and
add
mov
call
dec
daa
fs
add
dec
icebp
push
jmp
push
out
add
mov
hlt
cs
sbb
add
fcmovb
xor
add
cmp
fidivs
dec
jno
mov
dec
lcall
mov
push
js
cwtl
aam
into
xchg
lcall
iret
repz
adc
sti
add
fstpt
mov
xchg
cmp
or
popaw
and
mov
dec
aad
int3
addr16
fs
ds
ret
test
daa
es
shlb
frstor
jns,pn
add
popf
and
sbb
fnstenv
sbbl
in
push
std
cmp
add
stc
xchg
mov
pop
stos
pop
or
das
pop
xor
int
out
out
and
lds
aaa
into
lds
or
cmp
inc
shl
fstp
or
pop
xchg
xchg
loope
jnp
and
mov
push
and
add
jno
and
in
xchg
sub
lds
sub
bound
push
push
stc
fidivrs
mov
mov
push
mov
jb
ret
fsub
dec
pop
fwait
dec
sbb
imul
mov
jo
loop
adcb
jo
test
sub
sahf
and
add
jne
push
aam
adc
mov
sbb
pop
mov
call
mov
insb
loopne,pt
daa
inc
shlb
call
imul
pusha
jge
cld
scas
mov
cwtl
pop
inc
mov
jns
jg
dec
ret
sub
cltd
xor
mov
movsl
fidivl
add
dec
out
cmp
add
add
add
push
add
pop
add
add
imul
add
add
add
add
subl
in
in
in
inc
add
add
ljmp
ja
mov
push
mov
push
push
push
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
mov
pop
add
mov
mov
cmp
je
cmp
jg
mov
mov
mov
movb
movzbl
sub
inc
test
jne
jmp
mov
movb
call
mov
mov
movzbl
sub
je
incl
jmp
push
push
push
push
mov
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
dec
add
adc
je
insl
add
add
add
add
add
add
add
add
jne
add
push
add
add
add
add
add
lds
add
add
add
add
sub
clc
push
add
ljmp
push
pop
fs
jae
inc
and
ja
mov
inc
roll
jecxz
sbb
loopne
add
fadds
xor
or
push
inc
cmp
incl
clc
ljmp
or
or
jmp
test
push
mov
adc
subb
mov
pop
cmp
incl
repz
mov
add
push
adc
add
adc
lods
add
xor
adc
decl
push
test
sar
add
push
shl
add
add
repz
add
test
xorl
clc
add
clc
adc
addl
hlt
inc
adc
add
add
insb
adc
add
mov
add
add
add
push
add
add
insl
jbe
inc
inc
outsb
inc
outsb
outsl
jne
adc
jo
insb
inc
imul
outsb
jns
inc
inc
gs
inc
mov
add
push
imul
push
cmp
insb
gs
insb
insb
jae
outsl
jne
inc
outsb
jb
xor
inc
je
insb
add
add
add
add
add
add
les
dec
mov
nop
aad
xor
aaa
fcomp
leave
repnz
pop
xchg
stc
inc
inc
jmp
mov
pop
outsl
mov
xor
jp
inc
mov
cmpsl
pop
or
lret
insb
sbb
dec
jl
and
mulb
test
mov
out
out
fldl
gs
xor
in
and
outsl
xor
push
mov
and
jb
icebp
outsb
ffreep
idivb
add
enter
push
xor
fsubl
pushf
and
or
pop
mov
mov
popf
jl
cltd
sub
imul
dec
and
jne
jno
jbe
aad
leave
popa
mov
stc
into
mov
jg
add
and
mov
jno
mov
scas
dec
call
inc
cmp
stos
mov
cmp
repnz
xor
jmp
rorl
lods
leave
mov
xor
movsl
and
and
cmp
adc
jmp
ljmp
inc
cmp
jo
fnstsw
sbb
sbb
outsl
rol
dec
mov
out
ret
adc
sub
cs
repz
mov
add
mov
pop
and
faddp
scas
mov
adc
pop
loop
je
data16
testl
push
daa
imul
popf
dec
int3
les
and
scas
insb
fucomip
call
int
test
jno
push
fdivs
xchg
push
ds
sub
fmul
sbb
xor
cmp
lods
test
stos
loop
clc
adc
add
cld
pusha
enter
sbb
jmp
and
inc
rorl
bound
adc
inc
xchg
icebp
sbb
in
int
mov
nop
or
mov
sbb
pop
mov
inc
cld
mov
sub
std
xor
xchg
mov
dec
push
pusha
jp
adc
lea
sbb
scas
sbb
fs
jmp
js
xor
and
dec
inc
push
fs
mov
pop
or
lock
mov
mov
mov
adc
mov
pop
xchg
stos
fsub
adc
inc
pushf
lret
scas
cmp
pop
hlt
push
arpl
and
xor
aas
adc
jae
cld
aaa
and
xor
jno
shll
adc
scas
adc
leave
mov
dec
pushw
and
sbb
adc
sahf
jg
cli
adc
adc
jns
xchg
sub
jp
or
pop
sub
sahf
sub
les
loopne
iret
popf
clc
adc
sub
outsb
out
cld
and
out
roll
fisubl
jae
inc
and
adc
fistpl
push
xchg
fsubl
mov
popl
jns
pop
sub
cmpsl
mov
pop
scas
fs
cmp
leave
mov
pop
adc
in
jo
dec
les
push
test
fstps
pushl
mov
es
mov
xchg
jmp
lods
push
inc
fmuls
lods
pop
adc
iret
ds
dec
out
mov
es
loopne
push
aad
fisubs
sbb
popa
or
adc
pop
xchg
call
test
and
mov
lea
pop
in
mov
arpl
mov
inc
adc
jg
aas
pop
lcall
js
inc
fmul
dec
push
les
scas
or
mov
frstor
pop
push
sbb
or
mov
add
adc
dec
dec
sub
jb
sub
jnp
xor
dec
inc
mov
out
inc
pop
xor
mov
push
mov
popf
std
movsl
pop
sub
dec
jae
cmp
test
sahf
or
in
test
jae
sub
sub
and
sub
jns
lods
mov
not
cmpsb
popf
and
shrb
push
and
dec
or
push
outsb
cmc
cmpsl
cmp
sub
xor
iret
or
lods
cs
or
call
adcb
cli
cmp
mov
sahf
inc
ret
daa
and
ror
test
in
mov
sbb
push
cmpsb
xlat
adc
out
cmp
mov
jecxz
iret
inc
dec
push
rorl
movsb
cmp
pop
fs
sbb
mov
std
push
xchg
incb
and
inc
cli
sbb
mov
and
xor
clc
ret
loope
cmp
pusha
cmpsl
adc
lea
roll
stos
test
leave
iret
insb
ja
ret
andl
jge
sub
inc
adc
fbld
or
outsl
mov
xor
insb
roll
add
sbb
loop
in
add
dec
cmp
dec
outsl
jecxz
icebp
or
ljmp
ss
and
mov
div
cmp
popa
add
out
push
adc
pop
loop
dec
cld
jge
mov
pop
imul
icebp
cmc
mov
jne
or
es
jo
pop
push
push
test
and
xchg
out
in
inc
stos
jp
jo
or
jmp
push
insl
xchg
adc
mov
dec
in
mov
sbb
aas
cmp
aam
pop
xor
jbe
test
hlt
scas
daa
rcr
inc
jno
add
mov
pusha
push
adc
dec
icebp
rorb
lods
cwtl
dec
push
adc
push
rcrl
adc
pop
jl
pop
call
mov
ret
add
or
push
mov
dec
shlb
push
aas
mov
fisubs
push
roll
pop
shrb
or
loopne
push
loop
mov
lds
in
or
dec
mov
jge
inc
or
mov
lds
popa
and
jnp
sub
push
or
cmp
ljmp
movsb
mov
xor
jg
dec
add
negb
pop
lahf
jg
notl
pop
jnp
pop
mov
pop
fcomps
cmp
cmc
test
hlt
jp
into
addr16
fs
pop
aaa
test
dec
inc
sbb
shlb
push
testl
fistps
add
into
aaa
xor
mov
bound
jle
pop
data16
sub
shlb
mov
push
jbe
gs
mov
sub
mov
nop
cmpsl
shlb
icebp
cmp
jecxz
out
fldz
movsl
hlt
icebp
cmp
pop
xor
in
popa
xor
sub
lcall
cwtl
addl
outsb
in
xchg
nop
aaa
xchg
shlb
cwtl
mov
les
add
in
sub
mov
xchg
push
xor
mov
popf
cmpsb
or
xor
push
mov
insb
xchg
xor
mov
scas
popa
adc
aam
jge
xor
fisubl
adc
addr16
incb
jmp
sub
icebp
repz
mov
cmp
lret
push
in
test
fwait
cmp
inc
sbb
add
lcall
popf
int3
stos
inc
and
stc
dec
loope
pop
xchg
mov
dec
dec
gs
add
ljmp
repz
push
push
in
push
sti
cs
lock
cmp
scas
xchg
xlat
pop
dec
je
call
popf
mov
push
cwtl
and
jae
ja
jno
fistps
sub
sbb
xchg
movsb
mov
aaa
adc
insl
call
sub
leave
out
in
aam
stos
cld
mov
popf
js
aas
pop
aam
ds
sarb
jne
divl
add
inc
mov
loop
sarl
popa
das
jecxz
adc
add
fdiv
imul
jne
in
cmp
movsl
dec
xchg
daa
jnp
bound
loope
dec
xor
addr16
dec
aad
xor
es
fcoml
xchg
sub
ret
popa
pop
jbe
stos
mov
mov
sub
push
shll
inc
inc
ja
push
daa
push
jp
mov
lret
xchg
adc
xlat
mov
stc
les
aas
push
fcmovnbe
pushf
push
sbb
sub
lods
jb
jo
shl
addl
jae
adc
mov
test
xchg
cmovne
jno
pop
adc
mov
push
inc
mov
pop
mov
mov
cmp
pop
loope
fisttpl
stc
or
jecxz
ja
jmp
outsb
push
mov
and
sbb
push
je
push
fwait
cwtl
cmp
popf
xor
xor
pop
cmpsl
aaa
fimuls
dec
dec
mov
xor
stos
push
dec
decl
cmp
push
dec
ja
mov
pop
mov
jle
out
mov
push
into
or
rolb
pop
mov
stc
arpl
inc
push
sti
cmc
imul
pop
inc
sub
pop
push
mov
mov
ja
push
loop
stc
test
pushf
inc
adc
int
sub
leave
hlt
jle
jecxz
adc
adc
mov
out
enter
add
cld
icebp
rcrl
add
incb
aad
jle
adc
mov
or
mov
xchg
loope
fimull
loopne
jne
aas
mov
imul
push
rcrb
dec
and
and
insl
daa
shrl
fwait
cs
xor
cmp
cmp
mov
aas
xor
pop
insb
push
push
rcrl
dec
nop
dec
repz
push
pop
dec
rcl
xchg
cmp
sbb
pop
scas
xchg
mov
cmpsl
sub
xor
mov
jno
outsl
clc
sahf
add
mov
cli
mov
dec
mov
push
fildl
xchg
or
cmp
jns
pop
xor
jbe
shl
pop
std
adc
std
aaa
aad
repz
push
in
arpl
movb
fwait
mov
cld
cmp
out
mov
lea
aas
cwtl
adc
lods
ljmp
rorl
adc
xor
mov
ss
in
mov
dec
icebp
ret
scas
push
cli
icebp
dec
adc
pop
dec
pop
pop
in
ja
lahf
mov
mov
sub
jle
lock
add
and
in
cmc
inc
stc
mov
mov
lds
mov
push
jno
lods
or
push
sub
push
movsb
inc
jno
jae
cmp
jl
das
push
push
scas
jmp
mov
lods
mov
add
into
stc
sbbb
or
pusha
in
add
pop
movsl
cmp
inc
outsl
in
cmp
sbb
sbb
dec
xchg
mov
sbb
pop
sti
inc
inc
mov
mov
xchg
sub
into
pop
cld
dec
add
mov
push
in
xor
movsl
in
cmp
or
push
lcall
push
jmp
sbb
lahf
in
sub
inc
mov
mov
rcrb
je
push
shlb
test
or
push
inc
call
jno
push
into
adc
daa
mov
xchg
xchg
add
jl
cmpb
hlt
orl
mov
sbb
or
jp
xor
adc
cli
repz
into
mov
daa
or
jmp
push
dec
push
sbb
jnp
pushw
test
mov
xchg
lea
iret
mov
das
sub
std
stc
xchg
cwtl
outsl
mov
pop
xchg
inc
adc
pushf
test
fwait
mov
fxch
jb
dec
add
mov
cmpsl
iret
aaa
push
mov
imul
mov
arpl
or
xchg
insl
rclb
xor
mov
cmp
sub
lods
in
push
andl
scas
lods
cmp
hlt
push
fidivrs
hlt
into
xchg
mov
mov
inc
sti
lea
stos
xor
in
movsl
call
jbe
into
cmpsb
clc
in
gs
inc
jmp
mov
xor
or
inc
arpl
xor
and
cltd
sbb
aaa
adcb
or
fisubrl
fsubrs
cmc
inc
pop
mov
loope
inc
pop
test
cmp
mov
cwtl
xor
test
cmp
les
or
mov
in
inc
sarb
jbe
mov
add
sbb
fnsetpm(287
mov
sub
ret
popf
cltd
and
daa
push
xor
mov
and
pushl
push
sbb
mov
pop
je
adc
iret
pusha
shlb
call
ljmp
rolb
loope
stos
movsl
xchg
bnd
repz
add
gs
mov
and
sbb
inc
fcmovnb
jne
out
jo
test
mov
loop
das
cmp
clc
pop
sarb
aas
daa
lret
push
adc
outsl
bound
add
scas
in
subb
movsb
mov
mov
sbb
bound
test
dec
call
pop
inc
fidivrs
and
push
nop
xlat
jmp
repnz
in
or
mov
sub
xlat
jb
pop
xchg
pop
mov
inc
inc
into
sub
jb
pop
pop
or
inc
jbe
sahf
cmpsb
int3
popf
movsb
divl
push
fsubrl
mov
jbe,pt
imul
cmp
or
loop
push
mov
dec
iret
cmp
ljmp
shl
aas
pop
mov
nopl
js
sbb
or
jg
es
jae
pop
push
sti
push
mov
repz
sti
mov
adc
scas
pop
mov
test
pop
enter
cli
test
xor
push
xor
mov
jp
dec
mov
iret
mov
or
andl
jne
lods
das
pop
data16
pop
xchg
adc
daa
int3
jbe
xchg
pop
out
sub
jne
add
jg
mov
jbe
movsl
nop
jne
test
int
pop
mov
jmp
mov
adcb
stos
enter
mov
je
pop
js
push
pop
xchg
bound
mov
push
sbb
mov
pop
mov
and
mov
adc
repnz
mov
je
int
pop
fsts
pop
inc
arpl
xchg
fdivr
pop
jecxz
inc
scas
cmpsb
sub
pop
ja
inc
inc
mov
shlb
mov
roll
loopne
push
mov
cmc
pusha
lods
jae
pop
pop
cld
push
mov
dec
xchg
jne
mov
int3
pushf
adc
testb
sahf
lds
adc
push
mov
or
or
mov
lods
scas
sbb
mov
xlat
dec
out
mov
mov
dec
pop
mov
cmp
sbb
jge
xor
mov
ss
push
out
mov
mov
push
int3
mov
mov
add
clc
push
push
cltd
jmp
mov
jmp
das
inc
jae
cmpsl
fsubl
dec
pop
loope
jp
xchg
out
jno
push
test
dec
dec
ljmp
jo
mov
jmp
sti
ss
pusha
jnp
inc
and
and
or
shll
mov
mov
add
nop
mov
sbb
jp
cmp
xchg
repz
and
and
outsb
idivb
jle
fistpll
loopne
sub
aas
or
xchg
clc
minps
rcpps
mov
lds
stos
sbb
decb
xchg
pop
scas
sbb
loop
pop
push
imul
sub
pop
sub
mov
cmp
and
sbb
daa
lret
fisubs
sub
push
xor
inc
mov
fdivl
xor
mov
push
int3
dec
pop
push
mov
popf
sub
movsb
xor
pop
loope
bnd
cwtl
push
jns
lods
jmp
jmp
mov
pop
lea
pop
adc
sub
ljmp
out
std
xor
outsl
test
lret
lret
lret
in
test
adc
xchg
fsubrl
add
addr16
sahf
push
cmp
loopne
outsl
mov
int
xor
xchg
repnz
daa
sbb
mov
cld
lea
xlat
jmp
jp
xor
cli
push
imul
dec
cmc
push
lea
dec
les
cmpl
int
mov
das
lret
notl
lahf
inc
in
adc
roll
movsl
ja
inc
and
rclb
dec
cs
mov
call
fists
sub
ret
push
out
ficoms
mov
xorb
aas
mov
lcall
movsb
adcb
arpl
mulb
in
lret
xchg
push
xchg
aaa
test
push
lods
mov
aad
outsl
ret
mov
aaa
sahf
out
cld
es
jg
dec
stos
mov
xchg
rorb
das
rclb
xor
dec
into
fisubl
pop
nop
xor
xchg
repz
mov
insb
mov
mov
and
push
sub
inc
xor
mov
jo
call
ja
insl
jecxz
lods
jl
mov
andb
pop
lcall
pop
mov
pop
fsubp
dec
in
enter
es
sub
mov
mov
mov
outsl
shl
push
sbb
lcall
pop
test
scas
jmp
push
test
or
mov
pushf
and
loop
rclb
jnp
inc
sbb
xchg
dec
mov
and
inc
and
jnp
mov
loopne
dec
inc
inc
jae
test
xchg
mov
lock
sbb
mov
mov
mov
arpl
or
push
in
cmp
in
ja
or
push
pop
repz
cmc
xor
arpl
enter
out
mov
and
inc
lcall
cmc
or
cmc
fcompl
mov
dec
sbbl
popa
shlb
stc
decl
mov
cli
insb
sub
add
dec
repz
xchg
jle
jae
ret
sub
scas
xchg
xor
imulb
cmp
and
cld
or
movsb
into
xchg
or
sbb
std
fldcw
xchg
rclb
mov
dec
dec
out
xor
xor
int3
pop
daa
pusha
mov
out
or
and
sub
mov
mov
adc
mov
es
jle
pop
in
sbb
mov
or
add
or
dec
scas
adc
rol
or
and
cli
lahf
adc
icebp
les
addb
dec
jnp
or
jbe
dec
push
out
iret
mov
cli
sbb
mov
push
add
aad
adc
dec
dec
add
dec
cmp
cltd
imul
adc
addr16
adc
add
daa
stc
jmp
mov
xchg
ljmp
mov
movsb
pop
cmc
cmpsl
int
dec
adc
ret
sbb
mov
aam
jae
arpl
lods
data16
inc
add
mov
scas
cmp
cwtl
in
xchg
pop
dec
sahf
test
push
add
mov
xchg
xor
cs
in
push
daa
or
pop
or
pop
dec
jbe
push
repz
cld
push
scas
nop
lea
icebp
or
mov
icebp
add
sarb
fninit
nop
and
fmull
inc
mov
xchg
cmp
int
iret
ret
stos
fidivl
dec
pop
cli
rcrl
push
aas
push
xor
jb
pushf
sub
sbb
aam
jp
add
repnz
push
rol
add
cmpsl
test
xlat
mov
cmp
sbb
cs
jbe
jp
leave
notb
xor
sub
rcll
mov
rorl
das
adc
iret
push
mov
insb
push
sbb
sub
push
out
sbbb
in
add
dec
icebp
push
das
and
movsl
out
and
in
icebp
xchg
iretw
cmp
mov
inc
iret
js
in
out
sbb
bound
xor
out
push
js
cmp
and
repz
in
dec
arpl
cmp
and
mov
add
mov
jb
xchg
test
das
icebp
int3
dec
mov
test
cmp
lret
xlat
mov
add
rorl
push
or
dec
outsb
cmp
mov
pop
in
add
fwait
cmpsb
stc
xlat
mov
push
xchg
mov
aad
inc
pop
kxnorb
out
das
push
push
fwait
push
mov
pop
mov
add
std
scas
fidivs
push
inc
lcall
jp
jl
mov
mov
sbb
inc
stos
mov
mov
sub
enter
popa
mov
and
mull
cwtl
and
and
call
mov
xor
fwait
aas
sti
enter
daa
notb
cmpsb
mov
in
aas
push
sub
call
lret
jle
ficoml
pop
inc
push
ret
loop
jae
cmp
mov
ret
dec
adc
movsbl
mov
fs
sbb
pop
adc
pusha
adcb
inc
add
inc
fbstp
dec
mov
mov
in
xor
fwait
andb
cmpsb
gs
stos
pop
mov
shrl
inc
aas
jge
test
cmp
filds
inc
push
stc
mov
push
dec
mov
jo
orb
aaa
xor
add
add
add
add
testb
add
add
add
add
add
add
add
add
or
add
add
sbb
add
xor
push
add
mov
sub
add
addb
subb
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
in
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fucomip
add
int3
in
add
in
add
mov
in
add
lods
in
add
movsb
in
add
pushf
in
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
in
add
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
in
add
mov
in
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
out
add
dec
out
add
push
out
add
pop
out
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
out
add
cwtl
out
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
add
sbb
add
inc
lock
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
mov
lock
movsb
lock
pushf
lock
xchg
lock
mov
add
test
add
jl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fdiv
add
loopne
add
in
lock
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
js
add
cwtl
icebp
add
shl
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
repnz
push
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
jo
add
js
add
mov
add
pushf
repnz
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
