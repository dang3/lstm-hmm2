pop
out
cmp
mov
xor
stc
xor
in
xor
cmp
es
push
int3
and
jno
sbb
add
pop
jbe
mov
fisttpl
push
ret
sub
xor
xchg
pop
outsb
cmpl
out
xchg
jle
cld
cmp
jle
xchg
mov
rorl
add
mov
cmp
mov
mov
sarl
or
inc
push
mov
dec
js
lods
fstps
shl
pushl
add
ss
sbb
mov
jle
repz
les
std
xchg
pop
add
adc
aaa
sbb
test
cmp
mov
in
cwtl
xorl
test
outsb
aad
ljmp
jmp
sbb
movsl
sub
fwait
push
xor
adc
test
adc
enter
insl
jne
out
adc
push
mov
dec
shlb
xor
mov
fildl
inc
pop
push
cmp
stc
pop
push
pop
call
jae
out
ss
pushf
cmp
incb
xchg
movsb
inc
adc
mov
push
mov
cmpl
cmp
repnz
xchg
cli
inc
popa
xor
dec
scas
push
outsb
mov
iret
call
mov
les
lcall
push
cmp
xor
sbb
jns
sbb
adc
pushf
negb
jp
push
mov
mov
out
jmp
inc
cmpsb
cli
inc
int
mov
adc
sti
lock
out
ja
cld
xchg
push
inc
or
pop
jb
fnstsw
jle
fadd
mov
test
pop
push
xchg
xor
jne
mov
jmp
pop
scas
lret
clc
inc
bound
dec
mov
pop
into
mov
repnz
add
xchg
xor
push
xchg
add
ret
lret
push
aam
pop
and
outsb
ss
push
mov
jne
cld
mov
cmp
sub
fistpll
xor
cmc
lret
call
into
xor
leave
xchg
nop
decb
movsb
sbb
jns
std
pushf
lret
pop
int
lock
xchg
mov
daa
fisttpl
stos
inc
mov
push
in
pop
mov
inc
push
dec
and
test
imul
daa
popa
dec
lret
mov
cmpsb
int3
dec
jns
jp
dec
push
mov
add
gs
jg
das
int3
push
or
out
sahf
mov
out
dec
pushf
cmpb
jmp
xor
adcl
xchg
jo
hlt
xor
rcr
loopne
fwait
std
fbld
push
mov
rcll
cmp
xor
mov
dec
xorb
dec
pusha
push
ljmp
lea
test
loope
jle
mov
mov
ljmp
std
test
xchg
xor
cld
xlat
mov
sub
aaa
stos
jl
fisubrs
repz
adc
cwtl
pop
cli
dec
mov
cmc
out
add
push
inc
into
or
and
sarb
push
hlt
int
inc
xchg
ret
cmp
adc
mov
xchg
shll
inc
out
aaa
cli
imul
loope
adc
addb
test
or
pop
mov
xchg
pop
enter
inc
or
shrl
add
lods
enter
shl
and
test
or
mov
sub
cltd
inc
sbbb
shlb
xchg
or
shl
js
xchg
sub
mov
bound
sbb
sbb
cld
sub
out
pushf
mov
hlt
cltd
mov
or
xchg
lahf
cmp
lea
ret
cmp
and
cmp
ljmp
cmp
outsl
repz
add
notl
mov
and
ljmp
aas
cmpsl
push
or
xlat
imul
dec
bound
push
inc
sti
dec
fnsave
orb
loopne
aas
icebp
fsubr
inc
push
out
xchg
and
cmp
fs
scas
pop
cmp
imul
mull
repnz
fisttpll
lods
push
pop
pushf
imul
es
dec
jp
fnstenv
sar
imul
sahf
xor
vpcmpgtb
dec
pop
pop
adc
fsubs
xor
in
lods
push
sub
in
out
sbb
les
movsb
inc
add
jbe
mov
fstpl
xchg
and
sub
mov
push
add
xchg
idivl
das
fcomps
loopne
xor
lret
xchg
adc
xchg
outsl
sub
insl
in
inc
add
stc
mov
push
out
dec
and
add
or
or
and
fnstenv
mov
sbb
sbb
xchg
popf
dec
mov
sub
fcomi
jge
mov
hlt
jg
fldenv
add
xchg
and
dec
mulb
mov
jp
pushf
out
mov
and
sbb
cmpsb
aas
mov
mov
and
nop
cmp
and
mov
and
stos
les
pusha
adc
xchg
pop
mov
sub
adc
push
adc
mov
test
sub
mulb
dec
scas
rolb
ja
pop
aam
mov
push
loopne
or
pop
xchg
fisubrl
out
jbe
cmc
insl
and
lods
adc
adc
xchg
push
dec
adc
insl
push
hlt
repz
pop
push
xor
mov
pop
or
lods
incb
cmp
loope
out
rolb
leave
xchg
dec
aas
xor
xchg
push
adc
loope
sbb
mov
imul
imul
adc
into
push
decl
and
adc
lahf
add
lods
mov
push
pop
dec
fisubrl
push
cmpsl
dec
rcr
add
loop
imul
call
movsb
fmull
das
inc
frstor
ror
andl
in
xchg
daa
xchg
stos
not
mov
dec
rcll
rorb
ja
pop
push
pop
mov
aas
out
jnp
jmp
scas
mov
cmpsl
sbb
shll
sbb
jle
or
test
shlb
ret
sub
stc
sub
push
mov
call
sub
xor
pop
insl
into
mov
xchg
ror
pmaddwd
je
inc
popf
jb
pop
les
and
push
inc
dec
ds
pushf
in
mov
cmpsb
out
cmp
and
and
cltd
decl
xor
xor
jge
add
jo
push
inc
addr16
push
out
mov
sub
sub
push
cmp
sub
sub
mov
bound
xchg
push
mov
xchg
xchg
lds
and
mov
pop
out
aad
inc
rcl
cmpsl
imul
in
je
adc
mulb
icebp
cld
lret
push
or
arpl
aam
and
lcall
push
call
fptan
lcall
mov
icebp
cmp
inc
mov
xchg
das
xchg
test
out
pusha
push
pushf
jno
or
push
or
fisubrl
or
decb
mov
addl
xor
cwtl
cmp
dec
pushf
sbb
sbb
pop
xor
pop
mov
out
fsubrs
jl
xchg
add
xchg
pop
pushf
add
das
lock
repnz
jb
pusha
jge
mov
inc
xchg
inc
and
sub
push
and
in
movsl
adc
not
rclb
sbb
jle
mov
je
std
ss
fstl
dec
insb
push
inc
jecxz
jl
out
xor
mov
push
cmp
push
cmpsb
or
adc
fsts
and
jp
loop
sbb
push
xchg
ja
cmpsl
incl
fadds
sbb
mov
cmpsb
sub
fnstenv
push
pop
sahf
add
clc
inc
arpl
test
push
leave
dec
inc
pop
add
jp
push
dec
or
cmp
jne
imull
jbe
in
repnz
mov
xchg
fsubp
iret
daa
push
ds
lods
dec
adc
lds
inc
lds
test
test
sbb
insb
cltd
xor
scas
cmpsl
sub
push
in
jno
pop
jne
mov
imul
lea
jns
pop
jne
jecxz
inc
mov
add
repnz
inc
cmp
shr
and
divl
div
lahf
fisttps
rol
daa
arpl
add
hlt
es
out
loope
inc
out
sbb
fcompl
add
xor
test
xchg
inc
push
xchg
push
sub
ja
aad
bound
int
div
xchg
push
ss
cwtl
fs
test
xor
cmp
daa
sbb
jmp
push
out
inc
test
push
mov
inc
in
add
and
mov
or
pop
jns
push
les
ret
int3
push
movsl
imul
aas
mov
adc
mov
mov
lds
fdiv
std
icebp
sbb
mov
enter
push
icebp
aas
into
jns
inc
faddl
push
mov
andl
arpl
jns
jb
into
fwait
test
pop
in
push
fidivrl
xchg
add
or
mov
mov
movsb
insl
xchg
int
fsub
xor
pop
jno
cmp
lea
jbe
cmp
dec
sub
xor
lds
aad
stc
das
pop
je
pop
mov
test
cmp
or
notb
hlt
jo
mov
sbb
repz
cmc
push
popa
mov
sub
sbb
lcall
xchg
push
push
xchg
xchg
mov
xchg
ficoml
sbb
into
pushf
negb
jae
outsl
push
inc
aaa
mov
add
sbb
aaa
je
adc
lods
sahf
data16
in
or
mov
push
inc
and
mov
lret
cltd
inc
sub
loope
cltd
mov
cmp
aad
fldcw
sbb
xchg
mov
mov
and
fwait
gs
cmp
xor
cltd
mov
fidivrl
sbb
jnp
loope
jp
jmp
dec
iret
inc
and
out
lods
mov
and
adc
les
pop
lret
aaa
stc
xor
pop
fldl
aaa
fs
lds
inc
movsl
jae
mov
inc
jg
jle
lods
nop
scas
mov
or
and
stc
jg
js
dec
inc
popf
or
jb
scas
lcall
loopne
push
adc
test
adc
or
in
lret
push
sbb
push
push
aaa
cmpsl
es
call
inc
not
xchg
mov
inc
adc
dec
insl
add
push
shlb
mov
dec
loope
sub
sahf
add
fistl
pop
pop
mov
inc
ror
mov
sub
aaa
pop
jge
leave
mov
arpl
mov
mov
iret
jno
sub
aad
je
sti
leave
aad
sub
sarl
or
sub
sbb
jns
imul
mov
add
shll
dec
adc
mov
xor
fsubrp
pop
dec
daa
adcb
cmp
or
pop
xlat
int
in
sbb
ret
mov
push
jno
aam
fucomi
pop
add
cwtl
and
fs
xor
sub
std
sub
mov
pop
test
sub
fisttpll
mov
cmp
and
xchg
mov
dec
add
mov
sub
push
jle
pop
xchg
sbb
xor
shl
mov
pusha
pop
cld
test
je
jmp
jmp
xchg
mul
inc
mov
dec
mov
das
xor
and
sahf
rclb
mov
faddl
or
test
or
out
sbb
and
xchg
leave
je
cmpsl
andps
ret
dec
out
push
shlb
mov
aas
aas
dec
push
sub
fisubrs
adc
jne
pop
cmp
fcomip
ja
mov
lea
aas
inc
iret
pop
lret
inc
aaa
sbb
sub
out
pushf
repz
push
dec
jl
lret
lds
sbb
flds
aam
pop
push
or
sti
xor
lods
mov
add
ficomps
mov
push
in
out
pop
sub
test
mov
mov
jmp
imulb
leave
add
xchg
aad
xchg
aad
cmovb
pop
pop
std
mov
xor
add
outsl
pop
pusha
sub
aas
adc
loop
xor
mov
ret
pop
mov
add
test
xchg
data16
sbb
lock
mov
or
test
mov
xchg
mov
iret
xor
mov
sub
push
inc
je
mov
jne
jecxz
mov
shrb
imul
cmp
xor
jl
pop
sub
push
adc
stos
int
pop
inc
cwtl
repnz
test
xor
mov
mov
mov
xor
int3
es
dec
fisttpll
nop
mov
test
push
xor
ror
and
out
jbe
sti
test
mov
mov
mov
scas
mov
leave
incb
xor
outsb
fdivl
mov
cli
sbb
and
and
movsl
or
push
lea
push
mov
js
xor
sub
xchg
push
dec
or
out
xor
push
pop
testl
clc
xchg
aam
imulb
shll
sub
dec
push
outsl
inc
jbe
shlb
jae
push
cmp
out
pop
pop
scas
pop
or
cmc
sbb
inc
adc
lds
mov
push
aam
js
inc
movsl
lods
clc
in
cmpsb
cwtl
cmp
push
mov
scas
and
test
mov
jp
and
ficompl
or
es
movsb
insb
imul
mov
leave
mov
fcomps
fildll
arpl
xchg
and
inc
adc
mov
loopne
mov
or
add
inc
add
dec
mov
jo
addr16
aam
dec
js
xor
std
cmp
sbb
or
aaa
das
pop
mov
cmp
inc
mov
js
adc
mov
ja
lock
lods
mov
fwait
mov
dec
mov
jp
outsl
mov
inc
imul
push
lods
fsubrl
xchg
loopne
xchg
daa
sbbl
adc
dec
pop
lcall
inc
pop
sub
push
cmp
jg
scas
push
or
cmp
out
push
pop
repz
enter
movsl
xor
adc
sub
push
clc
outsl
push
push
or
fmuls
jae
mov
xor
sbb
fdivrs
je
xchg
test
dec
sbb
pop
xchg
cld
inc
push
xlat
push
insl
jo
pop
lcall
xchg
cli
fistpll
jns
and
inc
aaa
push
and
dec
sbb
mov
stos
adc
lcall
sbb
mov
or
mov
mov
cmpsb
mov
push
push
ds
add
sub
cs
ret
adc
dec
inc
cmpsl
notl
xor
inc
and
mov
sbb
xchg
inc
pushf
ror
jb
sbb
lcall
sbb
ficompl
pop
jle
je
addr16
push
mov
nop
aad
je
filds
adc
addr16
pop
scas
dec
outsb
loop
dec
lret
sbb
mov
pushf
dec
test
push
pop
xor
sahf
lret
and
scas
xchg
fwait
pusha
insl
jnp
ret
mov
pushf
push
cli
push
adc
dec
enter
iret
stc
das
in
les
sbb
ror
mov
popa
ficoml
push
fildll
add
xchg
scas
pop
data16
mov
or
add
cli
popf
out
arpl
mov
or
bound
lcall
adc
cmpsl
enter
dec
arpl
int3
inc
cmp
jmp
cld
xchg
ret
adc
sbb
xor
pusha
dec
loopne
sbb
dec
adc
jae
mov
pop
mov
imul
push
mov
test
arpl
insl
scas
lret
mov
jb
mov
mov
sub
and
push
lea
add
push
test
gs
or
ss
aaa
ficomps
jle
mov
jl
cmp
push
inc
xchg
xchg
scas
shll
sti
outsb
into
idiv
fnsave
jo
or
ss
or
jmp
sbb
and
sti
imul
jnp
out
repz
pusha
inc
jl
stos
pop
adc
divb
or
xor
flds
pop
xlat
out
test
adc
inc
ds
pushf
rcl
cmpsl
push
xor
out
sbb
mov
mov
icebp
enter
lock
xlat
inc
call
xlat
sti
les
jecxz
lcall
xchg
xchg
add
xorb
lcall
or
jp
lcall
xor
movsl
shl
iret
loop
clc
pop
dec
xchg
aaa
in
roll
loope
or
cmp
scas
insb
cwtl
sbb
mov
ds
shll
imul
mov
mov
subb
cmp
pop
loopew
sbb
dec
rcrl
mov
cmp
lods
ficoms
aam
sbb
or
inc
cmpsl
call
icebp
mov
inc
int
outsb
lock
lods
sub
mov
jge
scas
pop
mov
cmp
rcl
cmp
cmp
mull
fwait
cmp
mov
jge
or
and
mov
icebp
jno
mov
push
icebp
enter
les
sub
lods
inc
push
mov
sub
mov
or
sub
jl
pop
icebp
mov
push
inc
loopne
lret
into
repnz
push
xor
aam
sub
jnp
cmp
lahf
pop
test
pusha
in
shrb
call
ror
jno
push
xchg
pop
ds
test
mov
push
loope
fstpt
imul
mov
xchg
testb
xchg
nop
pop
or
mov
dec
xchg
inc
dec
imull
mov
getsec
xchg
leave
push
bound
adc
xchg
xchg
repz
jl
scas
jno
mov
xchg
add
stos
push
mul
cmpsb
lods
pusha
sub
push
inc
repz
xchg
push
loope
sub
sbb
dec
xlat
lock
fnsave
rcrb
dec
mov
aad
test
sub
xchg
ja
mov
jg,pn
les
jmp
or
sub
test
js
nop
popa
test
out
push
aas
fsubl
and
mov
mov
lahf
jmp
loope
pop
mulb
mov
outsb
xchg
adc
outsl
cmp
je
mov
ret
stos
addr16
aas
fmuls
ds
jo
mov
in
cmp
push
ja
jecxz
inc
divl
pop
mov
dec
ret
test
test
scas
push
sbb
shlb
sbb
mov
hlt
enter
mov
fstps
xchg
add
cmp
aas
lock
mov
xor
roll
mov
ret
arpl
jb
mov
xor
inc
addl
add
mov
push
xchg
lods
aas
jb
mov
xchg
cmp
mov
imul
push
adc
cmc
test
dec
mov
xor
fucomi
cmp
cmp
jns
cmpb
jbe
gs
inc
in
mov
repz
cmp
inc
imull
or
add
aas
adc
push
jno
pop
and
cltd
scas
mov
lds
push
mov
inc
std
insl
push
scas
dec
cmpb
cmp
xlat
daa
jbe
xor
mov
dec
cmp
repz
sbb
xor
sbb
icebp
addr16
cmp
adcb
sbb
mov
clc
jno
xchg
xchg
pop
enter
nop
in
nop
jp
xchg
sbb
clc
imul
ds
cmpsl
mov
scas
mov
sar
jecxz
push
call
or
imul
fstps
cmp
inc
sub
lret
xor
mov
push
lret
in
cs
cld
push
mov
sub
lds
adc
pop
cmp
in
rcrl
mov
int3
dec
push
and
bound
xchg
add
fcmovnbe
insl
out
mov
or
repnz
les
mov
fisttpll
fnstsw
xchg
push
int3
jno
mov
sbb
mov
sbb
inc
sub
les
pusha
cmpl
leave
sub
fdivr
sbb
daa
pop
lcall
sbbb
lcall
lock
or
rclb
mov
mov
xor
imul
jp
hlt
jmp
xlat
enter
jle
xchg
stos
xchg
sbb
mov
xor
add
dec
or
je
es
in
dec
push
mov
out
stos
mov
imul
shlb
jmp
cmp
xchg
inc
inc
ja
jae
adc
imul
push
xor
imul
enter
aad
bound
dec
out
movsb
pop
mov
xchg
loopne
xchg
xchg
scas
mov
and
test
fisttpl
ret
mov
push
pop
mov
sahf
push
add
cmp
stos
mov
and
pop
mov
xchg
sti
dec
arpl
lods
outsl
xor
sub
jmp
lods
lahf
mov
mov
cs
push
mulb
pushf
push
js,pt
sbb
xchg
and
push
and
lods
sbb
add
imul
fildll
movsb
inc
stos
addr16
incl
and
je
push
or
adc
pop
inc
xchg
popf
pop
mov
std
test
cmc
out
mov
aad
pop
je
push
lret
dec
push
mov
imul
pop
add
pop
mov
ja
es
jo
pop
xor
into
in
fcomps
xor
push
xor
mov
mov
es
push
mov
cltd
xchg
lahf
cmp
push
xor
inc
cmp
pop
je
mov
sub
subl
daa
mov
rorb
scas
lahf
mov
repz
cmp
test
test
leave
inc
in
in
mov
inc
add
fadd
push
mov
in
in
stos
jb
leave
arpl
mov
sub
push
dec
popf
stos
push
movsb
enter
fs
fs
adc
shrl
popl
cmp
inc
cmp
movsl
sub
ljmp
das
roll
jecxz
inc
ss
mov
xchg
stos
imul
imul
movsb
cmp
fsubrl
sub
out
cwtl
bound
sahf
or
mov
imul
xchg
adc
pop
subb
cld
pop
and
in
mov
out
jno
adc
loop
mov
cmpsl
xchg
xor
and
cmp
fsub
sahf
orl
ss
xchg
add
sub
pop
dec
push
mov
jmp
cmpsb
adc
sub
int
int
or
jns
fiaddl
es
push
sub
push
sahf
and
cmc
mov
jecxz
or
in
jne
fisubrl
or
decb
or
push
loope
sub
scas
cli
mov
rolb
out
dec
inc
sbb
test
sbb
sub
jge
enter
imul
xchg
in
sbb
adc
les
jns
xchg
pop
adc
jb
les
mov
xchg
adc
mov
addr16
fsubl
sub
cltd
dec
jb
adc
daa
fs
scas
mov
cwtl
add
adc
sub
xor
add
mov
pop
movsb
push
arpl
sbb
jmp
push
xchg
loope
pop
gs
ret
stos
or
pop
xlat
mov
push
sbb
sti
movsb
pop
sub
pop
int3
inc
dec
pop
push
inc
jbe
adc
mov
ja
mov
in
icebp
in
call
dec
cld
and
or
jmp
in
out
push
or
xchg
in
and
pusha
sub
mov
addb
or
fsubrs
notl
sbb
fisttpll
push
adc
je
sbb
or
nop
enter
adc
je
mov
push
push
mov
lahf
add
fcompl
popa
loop
xor
fwait
push
cmpsb
jnp
ljmp
sub
xchg
incb
incb
das
xor
jo
xor
mov
sbb
pop
fisttpll
or
push
jmp
xchg
or
add
lcall
cltd
sti
jge
test
and
xchg
cmp
leave
cmp
pop
xchg
pop
stos
ja
xlat
xor
stos
outsb
dec
imul
pop
push
stc
out
lret
stos
mov
or
push
pop
pop
lds
jnp
inc
das
push
inc
inc
out
rcl
out
xchg
movsb
mov
sbb
adc
and
xchg
cwtl
push
mov
add
sub
inc
sahf
test
xchg
push
jl
lea
ret
insl
cmp
xor
divb
mov
mov
mov
out
sub
jmp
jo
mov
ljmp
xor
pop
add
push
mov
test
aam
add
repnz
inc
jb
sarl
jnp
adc
add
or
clc
mov
aas
pop
and
jmp
adc
push
sbb
pop
mov
cwtl
lea
and
jns
sarb
mov
test
icebp
xchg
je
std
ret
xchg
shrl
cld
cs
ljmp
outsb
adc
and
lcall
ficomps
inc
inc
lret
leave
repnz
and
mov
leave
xchg
repnz
dec
adc
movsb
cmp
cli
inc
jnp
cmpsl
ds
inc
ud0
push
mov
fs
dec
jb
outsb
mov
add
or
xor
dec
lret
and
in
fistl
loope
pusha
test
test
imul
cmp
pop
mov
pop
pop
xchg
inc
cmc
fwait
mov
movsb
ljmp
out
addr16
out
popf
sahf
stc
cltd
cmp
rorl
adc
xor
outsl
addr16
dec
notb
das
jns
mov
adc
pop
and
cmp
mov
mov
add
test
stc
and
stos
shlb
aas
xor
inc
mov
enter
adc
in
inc
and
aam
rorb
lods
cld
pop
add
mov
rorb
mov
into
and
fnsave
mov
cs
sti
mov
push
stos
push
jne
icebp
call
push
xor
jg
push
inc
dec
or
ficoml
lahf
sbb
mov
or
out
jnp
xlat
lea
inc
jo
aaa
ret
sbb
iret
imul
fdivr
lret
and
mov
dec
inc
mov
mov
push
sub
in
cmpb
aad
call
mov
mov
movsb
jnp
adc
inc
mov
and
in
out
repnz
xchg
ret
sub
ja
xchg
mov
jno
pop
popa
xor
xchg
ljmp
fists
jmp
stc
lahf
jne
stos
xor
and
mov
cmp
dec
je
and
imul
add
aam
pop
cmpsl
push
leave
xor
push
sub
pop
aam
inc
mov
xor
cmp
loopne
jmp
mov
fisubs
sbb
cmp
xor
inc
sbb
test
inc
mov
lock
xor
and
dec
pop
out
les
sbb
scas
xor
imul
inc
in
std
loop
sub
loop
dec
mov
lahf
and
ffree
xor
ss
hlt
push
jnp
push
loopne
ds
in
mov
and
in
js
dec
sbb
push
add
push
push
test
into
frstpm(287
mov
cmpb
xor
and
xchg
sbb
jle
mov
into
out
stos
cmp
mov
sti
scas
inc
insl
addr16
xor
jp
pop
dec
cmp
mull
sub
pop
loope
sbb
xorl
jg
and
popf
in
jne
fwait
test
dec
repnz
jg
dec
movsl
jbe
mov
cmp
sarb
mov
jge
fsts
sbb
cmp
fcomps
sbb
pop
mov
fcoms
adc
mov
add
lods
adc
mov
int
push
sti
outsb
inc
shlb
scas
add
or
pop
pusha
adc
jp,pn
lret
push
jno
push
sub
xor
mov
xchg
pop
pop
scas
mov
push
repz
jns
push
stos
addb
out
fsubr
mov
daa
rcrb
rcl
mov
dec
xor
stos
rorb
icebp
cmp
mov
adc
movsb
push
pop
pushf
in
sbb
adc
jl
insl
in
mov
sub
cmp
lahf
inc
mov
and
les
loope
aas
repnz
push
cmpsl
xchg
cmp
sbb
xor
mov
sbb
dec
pop
mov
pop
pusha
fsubrl
js
ret
jnp
cmp
ret
andl
xchg
jb
jle
and
cltd
fs
scas
mov
test
movsl
cmpsb
shll
lea
ss
jns
lds
mov
fsubs
sti
jg
adc
dec
jge
jmp
iret
stc
xchg
pop
sbb
xor
out
pop
jmp
mov
lahf
jno
imul
iret
or
cmp
cmp
pusha
sub
lds
push
cmpsb
mov
test
push
xchg
mov
sub
in
aas
leave
push
cmpsb
imul
pop
jno
mov
push
popa
add
rolb
or
insb
and
push
dec
pop
sbb
mov
cli
dec
or
xor
test
xchg
mov
jmp
fiaddl
xor
ljmp
sbb
popf
and
in
and
cmpsl
dec
and
sub
cli
lret
dec
mov
into
fcomp
adc
inc
imul
cmp
inc
pop
dec
push
incb
loopne
test
add
lea
addb
or
icebp
jle
sub
stc
or
sub
adc
push
hlt
dec
jmp
mov
jp
cmp
ret
push
js
popf
xor
aad
notb
push
cmpsb
fadds
push
test
dec
loopne
fidivrl
mov
lods
jbe
enter
lea
jbe
cs
dec
push
loopne
and
cltd
mov
cmp
dec
pushf
sub
mov
dec
sub
or
fsubrs
mov
aam
loopne
cli
idivl
jecxz
xchg
pop
data16
and
cmp
daa
gs
mov
mov
imul
sub
xor
xchg
cli
call
mov
mov
mov
mov
mov
jecxz
jp
mov
jg
sub
aad
cld
rcl
fdivr
cmpsb
cwtl
jge
loopne
inc
mov
jo
fcom
out
push
rcll
test
mov
fsubl
rcl
sub
in
out
adc
xchg
lods
push
mov
and
dec
jns
xlat
fidivs
mov
adc
sub
add
and
addl
loope
loope
aad
int
in
pop
lcall
loope
dec
mov
mov
fdivrl
jns
xor
cmpsl
dec
shr
mov
call
inc
orl
lret
fwait
sbb
mov
sub
sub
jmp
mov
jnp
movsl
mov
mov
loope
test
dec
js
and
fs
fnsave
jae
inc
cmpsb
cli
mov
notb
pushf
jecxz
stos
and
sbb
xor
xchg
nop
pop
in
in
ds
dec
sub
push
scas
cmp
jb
mov
inc
lock
inc
mov
inc
outsl
aas
ja
mov
cmp
mov
mov
mov
cltd
loopne
lock
loopne
jle
aam
add
fsubr
je
and
dec
dec
lcall
sti
lcall
lahf
arpl
das
xchg
adc
lret
cmp
pop
pop
xchg
xchg
or
in
jecxz
sbb
pop
mov
hlt
pop
push
clc
ljmp
fisubl
mov
jle
pusha
repnz
or
inc
dec
outsl
loope
inc
sub
les
imul
xchg
les
cmp
mov
or
push
das
cmp
int3
ror
movq
jns
mov
sbb
and
lods
sbb
adc
sub
and
decb
add
sbb
ret
sub
js
pop
sarb
ret
and
sbb
pop
adc
out
jge
shlb
adc
movsb
repz
pop
jle
mov
aas
or
xor
fstp
sub
gs
adc
xchg
xchg
push
in
xor
xor
call
sub
stos
repz
sbb
jae
loop
add
pop
jp
inc
sti
test
sti
and
pop
xchg
adc
enter
add
shl
into
negl
cmp
rclw
cmp
mov
fs
inc
cmp
popa
das
sub
aaa
test
cli
lods
xchg
mov
adc
out
mov
insl
sar
cmp
aad
xor
push
push
out
rclb
jne
lcall
movsl
stc
test
and
inc
pop
xchg
mov
arpl
push
adc
or
mov
cli
sbb
andb
dec
xor
push
inc
add
xchg
inc
hlt
shl
rorb
add
pop
jnp
mov
mov
bound
mov
mov
push
inc
or
jnp
xchg
jecxz
xchg
cmpsb
xor
jl
push
dec
sbb
mov
ljmp
testl
lea
push
scas
lahf
repnz
mov
cmp
cs
sub
out
negb
in
inc
fstl
push
xchg
or
lods
mov
sub
imul
mov
rorb
daa
imul
mov
das
std
rcrl
or
ljmp
mov
dec
hlt
pusha
or
mov
add
mov
das
lods
and
xchg
mov
xchg
or
jb
enter
jae
movsl
imul
sub
imul
mov
fiaddl
fwait
dec
inc
jmp
sub
mov
adc
mov
push
add
and
rcr
aam
xor
into
ja
shl
movsb
pop
stos
test
mov
loope
add
das
xorl
cwtl
xchg
mov
push
in
addr16
enter
mov
arpl
fwait
arpl
jge
in
cmpsb
in
inc
or
dec
fisubrl
pop
xlat
sahf
mov
and
cmpsb
add
arpl
adc
fisubrs
insb
jecxz
hlt
neg
xor
mov
xchg
js
sbb
popf
cmpsb
mov
lods
add
stos
faddl
bound
lcall
push
push
addr16
hlt
outsb
mov
fcmovbe
cmp
clc
pop
js
movsl
cmp
jg
push
mov
and
xchg
pop
add
bswap
test
mov
test
inc
xchg
scas
mov
and
enter
mov
mov
mov
add
cmp
pusha
sbbb
xchg
mov
pop
or
xor
mov
dec
and
test
testl
loope
lahf
mov
push
loopne
fidivl
or
xchg
das
cmp
imulb
or
xchg
adcb
push
scas
inc
mov
add
imul
mov
repnz
jne
inc
mov
out
ror
jle
inc
nop
addr16
out
stos
movsl
stos
push
xchg
stos
xchg
add
mov
stc
stos
jb
out
xor
jp
lods
in
andl
popf
fsubrs
nop
push
jb
leave
pop
push
lahf
xchg
xlat
add
pop
push
xchg
jo
xchg
or
in
push
xlat
xchg
movsb
mov
cwtl
loop
mov
xchg
jge
sbb
mov
repnz
shrl
cld
xor
in
movsb
lds
out
rol
jle
or
or
lea
stos
xchg
mov
jb
dec
aad
cmp
stos
outsl
cs
xor
pop
lods
loope
data16
popf
fsubrs
xor
jns
pop
push
lahf
adc
pop
push
xchg
jo
xchg
or
in
push
xlat
xchg
movsb
mov
cwtl
loop
mov
xchg
jge
sbb
mov
repnz
shrl
cld
xor
in
movsb
lds
out
rol
jle
or
or
lea
stos
xchg
mov
jb
dec
aad
cmp
stos
outsl
cs
xor
pop
lods
loope
data16
popf
fsubrs
xor
jns
pop
push
lahf
adc
pop
push
xchg
jo
xchg
or
in
push
xlat
xchg
movsb
mov
cwtl
loop
mov
xchg
jge
sbb
mov
repnz
shrl
cld
xor
in
movsb
lds
out
rol
jle
or
or
lea
stos
xchg
mov
jb
dec
aad
cmp
stos
outsl
cs
xor
.byte
add
push
xor
mov
jmp
push
addl
call
test
jne
jmp
pop
jmp
mov
call
jmp
sub
add
mov
jmp
pop
pushl
call
pushl
jmp
ret
push
pop
ret
nop
nop
nop
nop
nop
add
jmp
shr
and
mov
ret
nop
nop
nop
nop
nop
push
subl
push
subl
push
jmp
mov
jmp
pop
mov
idiv
jmp
pop
ret
nop
nop
nop
nop
nop
movzwl
xor
mov
and
push
pop
cmp
jmp
test
jne
jmp
xor
mov
xor
jmp
push
jmp
test
jmp
call
jmp
add
push
call
jmp
jne
jmp
test
jmp
mov
xor
mov
mov
jmp
test
nop
nop
nop
nop
nop
pop
lea
push
jmp
push
push
call
jmp
nop
nop
nop
nop
nop
mov
mov
test
lea
jmp
mov
push
jmp
push
mov
jmp
lea
sub
jmp
nop
nop
nop
push
jmp
mov
add
mov
jmp
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
jmp
push
subl
push
addl
call
ret
nop
nop
nop
nop
nop
jne
pushl
jmp
pushl
jmp
lea
jmp
push
pop
cmpb
je
jmp
test
je
jmp
call
add
pusha
jmp
push
push
xorl
push
addl
jmp
sub
mov
add
jmp
pop
jne
add
mov
jmp
add
call
jmp
push
push
call
jmp
pop
leave
ret
nop
nop
nop
nop
nop
test
jmp
nop
subb
pushl
jmp
je
subl
lea
push
jmp
nop
nop
nop
nop
nop
pushl
pop
push
pop
cmpb
je
jmp
nop
nop
nop
nop
nop
nop
push
or
mov
sub
push
jmp
andl
jmp
mov
add
sub
push
pop
cmpl
jmp
addl
push
addl
nop
nop
nop
nop
nop
push
addl
push
subl
call
push
pop
cmp
jmp
shr
push
mov
jmp
mov
mov
and
jmp
ret
mov
push
pop
cmp
jne
jmp
mov
push
pop
jmp
call
mov
mov
jmp
xor
jmp
mov
add
lea
mov
jmp
jmp
addb
push
jmp
test
pop
je
lea
jmp
push
xorl
push
subl
call
test
jmp
push
subl
push
subl
jmp
jne
mov
and
jmp
call
mov
jmp
je
call
nop
nop
nop
nop
nop
call
jmp
mov
jmp
mov
jmp
push
push
call
push
pop
cmp
jmp
add
jmp
xor
mov
leave
ret
nop
nop
nop
nop
nop
mov
test
jle
mov
jmp
nop
push
mov
xor
jmp
push
jmp
mov
jmp
pushl
jmp
shr
test
jle
jmp
mov
push
push
addl
pushl
jmp
test
jmp
mov
jmp
jle
mov
jmp
push
jmp
nop
nop
nop
push
and
mov
push
jmp
je
xor
mov
push
pop
cmpl
je
jmp
call
jmp
je
and
mov
jmp
add
add
jmp
je
popa
popa
jmp
nop
nop
nop
nop
nop
jmp
push
jmp
nop
nop
sub
mov
andl
push
jmp
mov
jne
mov
movzbl
jmp
mov
push
jmp
push
pop
jmp
je
push
mov
jmp
push
pop
jmp
lea
push
jmp
test
jmp
call
mov
jmp
push
cltd
jmp
nop
nop
nop
push
and
mov
push
jmp
push
push
push
pop
jmp
cmpl
jne
push
pop
cmpb
jmp
xorl
and
jmp
mov
movl
mov
jmp
lea
jmp
push
call
jmp
nop
nop
nop
push
xor
mov
push
mov
jmp
push
jmp
lea
call
pop
test
jmp
xor
push
subl
push
xorl
jmp
mov
and
incl
incl
nop
nop
nop
nop
nop
push
lea
push
call
jmp
xor
mov
jmp
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
nop
pop
add
mov
pop
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
or
adc
adc
adc
add
xor
add
sub
add
and
add
sbb
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
add
orb
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sbb
add
cmp
add
pusha
or
adc
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
mov
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
add
sbb
add
sub
add
cmp
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
add
add
cmp
mov
je
jmp
mov
mov
jmp
sub
add
sub
add
dec
jmp
je
call
jmp
mov
test
jne
jmp
jne
push
xorl
push
addl
call
jmp
ret
call
jmp
sub
sub
sub
jmp
test
je
jmp
mov
xor
mov
jmp
mov
jne
jmp
mov
mov
jmp
call
test
jmp
or
mov
add
push
pop
cmpl
jne
jmp
mov
add
mov
popa
jmp
sub
decl
jmp
pop
je
push
subl
mov
jmp
mov
nop
nop
nop
nop
nop
add
add
jmp
jne
jmp
pop
jmp
jmp
nop
nop
nop
nop
nop
jne
mov
jmp
pop
lea
jmp
test
jmp
push
call
jmp
mov
test
jmp
mov
push
push
call
jmp
push
pop
pop
jmp
je
jmp
mov
test
jmp
lea
push
call
jmp
pop
ret
nop
nop
nop
nop
nop
jle
and
mov
add
add
jmp
sub
add
pop
jmp
dec
jmp
lea
jne
jmp
je
push
subl
push
xorl
jmp
test
je
push
pop
cmpl
jmp
call
test
je
xor
mov
jmp
jne
push
pop
cmpl
jne
push
jmp
jne
jmp
mov
test
jmp
push
call
jmp
mov
test
jmp
je
and
mov
sub
jmp
movzwl
jmp
add
jmp
push
pop
jmp
call
jmp
jle
or
mov
shl
jmp
mov
jmp
push
xorl
jmp
test
je
jmp
shr
jmp
mov
jmp
andb
incl
jmp
push
addl
mov
call
nop
nop
nop
nop
nop
test
je
and
mov
mov
jmp
mov
jmp
or
xor
jmp
jmp
mov
push
jmp
test
jmp
add
dec
jne
jmp
pop
movzbl
incl
jmp
add
push
pushl
call
jmp
je
mov
mov
jmp
jmp
pop
pop
pop
jmp
and
mov
and
add
add
jmp
test
jmp
leave
ret
nop
nop
nop
nop
nop
shr
je
jmp
je
add
mov
jmp
mov
testb
je
jmp
test
je
mov
xor
mov
jmp
add
mov
jmp
mov
push
subl
push
xorl
and
nop
nop
nop
nop
nop
pushl
add
push
subl
call
jmp
sub
jmp
test
jne
nop
nop
nop
nop
nop
add
jmp
test
mov
je
jmp
mov
mov
nop
nop
nop
nop
nop
incl
dec
jne
jmp
jmp
and
jmp
jmp
push
subl
push
subl
nop
nop
nop
nop
nop
call
test
jmp
jmp
mov
jmp
push
pop
jmp
mov
jmp
pop
jmp
je
nop
nop
nop
nop
nop
sub
mov
lea
push
jmp
push
pop
jmp
pop
pop
pop
jmp
jmp
call
test
jmp
pop
pop
ret
nop
nop
nop
nop
nop
push
addl
pushl
push
nop
nop
nop
nop
nop
call
pushl
jmp
pop
jne
push
pop
cmp
jne
nop
nop
nop
nop
nop
lea
push
call
jmp
mov
sub
pushl
push
nop
nop
nop
nop
nop
push
call
add
push
subl
jmp
test
pop
je
nop
nop
nop
nop
nop
mov
jmp
push
addl
call
test
jmp
add
mov
sub
mov
mov
jmp
je
add
mov
nop
nop
nop
nop
nop
pushl
push
jmp
incl
dec
jne
jmp
call
push
jmp
jmp
sub
jmp
pushl
push
call
jmp
jmp
sub
add
sub
jmp
add
push
xorl
jmp
mov
shl
movzbl
nop
nop
nop
nop
nop
add
incl
add
mov
lea
jmp
push
addl
nop
nop
nop
nop
nop
call
jmp
push
call
push
pop
cmp
pop
jmp
push
subl
push
xorl
pushl
jmp
jb
sub
add
nop
nop
nop
nop
nop
push
pop
cmp
jmp
call
jmp
jb
sub
add
jmp
push
pop
cmpl
jne
jmp
push
pop
cmp
jae
jmp
push
pop
cmpl
je
jmp
push
pop
cmpl
nop
nop
nop
nop
nop
jne
jmp
add
sub
add
jmp
push
pop
cmpl
je
mov
and
jmp
test
je
mov
jmp
lea
add
push
push
xorl
jmp
or
mov
sub
nop
nop
nop
nop
nop
mov
mov
jmp
pushl
push
nop
nop
nop
nop
nop
call
mov
jmp
incl
dec
jmp
test
je
pushl
jmp
jne
mov
jmp
add
pushl
push
jmp
jmp
mov
mov
jmp
push
call
add
add
jmp
mov
mov
incl
incl
jmp
testl
lea
jne
jmp
mov
push
pop
cmpl
je
mov
nop
nop
nop
nop
nop
pop
jmp
call
push
pop
pop
nop
nop
nop
nop
nop
pop
pop
leave
ret
nop
nop
nop
nop
nop
sub
pop
pop
leave
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
add
add
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
add
dec
adc
add
add
add
adc
add
add
xchg
add
add
add
adc
add
add
pop
adc
add
adc
add
adc
add
add
adc
add
adc
add
add
ljmp
add
add
add
adc
add
adc
add
adc
add
add
dec
adc
add
add
add
adc
add
add
xchg
add
add
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
mov
je
popa
insb
inc
jb
gs
add
jb
jne
insb
push
jb
je
arpl
mov
je
popa
insb
inc
insb
insb
outsl
arpl
add
push
dec
inc
dec
xor
cs
insb
add
push
add
je
imul
add
push
popa
imul
inc
imul
push
imul
jae
cld
add
je
jne
jae
jb
outsl
jae
add
inc
push
outsb
jne
je
insl
add
inc
push
xor
cs
insb
add
sub
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
inc
add
test
dec
imul
inc
inc
dec
xor
cs
insb
add
add
lds
add
add
add
add
add
add
fxch
xor
add
pusha
add
add
add
mov
add
add
add
fsub
je
das
add
add
add
add
add
stos
imul
add
loopne
addb
add
add
add
rcll
pop
or
add
add
add
fdiv
mov
and
cmp
loop
mov
cltd
ficoms
add
add
jnp
scas
jo
and
add
and
cmp
fnstcw
nop
std
add
faddl
add
divb
dec
cmp
cmp
xor
xor
ds
xor
push
ss
xor
jecxz
pop
aaa
in
ljmp
ds
xor
push
cmp
ss
ret
ss
ss
xor
cmp
outsb
cmp
cmp
fidivrl
cmp
pop
aaa
pop
ss
xor
xor
sbb
enter
out
out
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fdivrs
fdivrl
loopne
in
dec
cmp
jo
ja
jl
cmpb
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
add
pushf
xor
xor
adc
add
xor
push
pop
pop
popa
sub
es
pop
dec
jge
ja
jno
push
xor
pop
inc
pop
add
pop
sub
push
orb
je
insl
cmp
scas
test
lahf
lcall
inc
loope
outsl
shl
pop
