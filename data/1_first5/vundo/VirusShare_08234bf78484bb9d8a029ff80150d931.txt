add
insb
add
add
popa
add
add
add
arpl
arpl
add
jae
imul
insb
add
je
jns
pop
add
imul
inc
add
outsb
add
add
jae
je
add
add
push
add
insb
add
arpl
je
add
add
jp
add
add
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
jo
jo
add
jb
popa
add
arpl
add
add
ja
and
push
add
push
add
jae
add
add
xor
add
xor
add
push
add
insb
add
arpl
je
add
add
add
add
add
add
add
add
add
add
add
add
js
add
bound
add
add
push
sub
add
add
sbb
add
sub
add
add
add
add
add
mov
add
das
add
jl
add
jl
add
in
add
pushl
add
add
add
mov
add
js
add
bound
add
add
push
sub
add
add
sbb
add
mov
add
add
add
add
add
add
mov
add
das
add
jl
add
jl
add
insb
mov
add
jl
add
dec
add
add
add
icebp
xorb
add
add
add
add
dec
add
add
adc
add
add
add
add
add
push
add
outsl
xor
sbb
sbb
sbb
cmp
jae
sbb
fbld
arpl
js
add
imul
outsb
add
push
push
aaa
add
xchg
mov
or
add
orl
add
test
inc
test
adc
adc
add
decl
repz
inc
push
test
mov
incl
add
add
add
adc
leave
adc
incl
add
pop
sti
add
mov
add
xor
add
mov
xor
adc
loopne
jmp
inc
dec
or
lea
adc
lock
push
add
call
adc
call
adc
cmp
inc
add
incl
lea
inc
add
add
add
pop
icebp
or
add
add
ficompl
sbbb
sbb
sbb
sbb
sbb
add
push
add
je
jae
imull
imul
inc
jae
imul
inc
insl
popa
outsl
inc
popa
inc
outsl
popa
jo
insb
outsl
add
add
loop
inc
gs
add
add
dec
jbe
data16
push
insb
inc
insb
push
push
add
add
add
jge
in
loope
add
add
add
add
xlat
mov
cltd
xlat
testb
add
in
imul
inc
ret
sbb
pushl
jbe
in
les
pop
lods
push
repz
xchg
imul
ret
out
mov
jo
mov
jecxz
and
push
mov
fwait
leave
mov
sahf
ja
inc
popf
addl
mov
xor
xchg
repz
fnstsw
in
ljmp
pop
rcl
xor
push
jno
push
and
jecxz
cld
mov
jp
scas
xchg
mov
inc
jne
testl
cmp
dec
testb
push
into
ljmp
xchg
mov
sbb
add
jmp
lahf
or
push
xor
jmp
jp
loop
lods
push
jg
cmp
and
xor
pop
shlb
lods
fwait
call
xchg
clc
loopne
xchg
repz
stos
push
xor
in
sub
lret
xchg
pusha
cmp
aad
ja
mov
call
mov
cltd
dec
xlat
ret
xor
adc
mov
jp
push
push
popa
cltd
and
lea
pop
xor
or
jno
shr
xor
adc
jmp
test
lock
sbb
push
jb
loopne
movsb
adc
add
xchg
xor
sub
scas
outsb
inc
pop
sub
mov
mov
rol
lret
push
ret
sub
stc
sbb
ja
mov
jecxz
test
inc
movsl
add
movsb
mov
out
nop
outsb
int3
mov
outsl
mov
std
insl
imul
fucomp
mov
or
dec
bound
mov
xchg
adc
rorb
icebp
insl
sbb
adcl
nop
push
push
and
in
push
push
adc
movb
mov
jb
out
or
pop
jae
jo
lea
mov
lahf
lods
add
sub
gs
lods
pop
xlat
je
or
fisubrl
jb
shll
jecxz
addr16
xchg
sbbb
mov
nop
pop
xchg
xor
adc
les
push
jae
jae
xor
inc
cmp
sbb
xor
sahf
cld
jge
inc
push
pop
movsl
js
stc
xchg
movb
sarb
lret
push
ret
push
xor
add
push
add
pop
inc
fildll
lock
cmpsl
jnp
dec
imul
lds
outsl
shll
adc
fildl
and
sbb
dec
scas
adc
xor
pop
mov
mov
push
popf
sub
inc
adc
mov
sbb
lret
mov
pusha
mov
or
out
add
pop
imul
mov
das
and
movsb
sbb
inc
outsb
cmpsb
xor
mov
shrl
pop
sbbl
call
pop
fcompl
xchg
adc
inc
hlt
mov
adc
adc
les
cmc
ss
out
cmp
adc
jb
jno
mov
loopne
inc
dec
adc
sub
int3
and
push
sbb
sub
xor
adc
inc
imul
in
int3
in
jbe
icebp
sub
in
pusha
loopne
xchg
addb
mov
test
rcrb
pop
push
test
clc
pop
in
imul
enter
flds
loope
sbb
vpunpckhwd
cli
out
jl
pop
or
mov
jbe
test
mov
cmovge
stc
mov
or
mov
jne
pop
mov
stos
push
mov
test
iret
ficompl
pop
mov
inc
cmp
outsl
xchg
arpl
sarb
dec
faddl
cmp
notl
push
push
movsl
bound
add
lret
daa
mov
mov
inc
out
add
sahf
push
stos
fisttpl
push
dec
add
or
ds
cltd
sub
icebp
fsubrl
notb
add
xchg
scas
inc
repz
jno
stc
adc
lret
aam
loop
inc
pop
jo
mov
push
push
cmc
mov
loopne
aas
sub
cmpsl
popa
pop
sub
sub
js
fwait
sbb
rolb
icebp
out
cmpsb
ror
sbb
cmpsb
mov
add
push
data16
es
adc
or
adc
cli
pusha
inc
pop
push
test
rorb
outsl
dec
clc
sbbl
addb
and
jo
mov
adc
repnz
adc
outsl
sub
ret
push
enter
adc
cmp
nop
add
leave
loopne
cmpsb
adc
mov
adc
push
cmp
mov
xchg
jnp
addr16
fisubrl
pop
jle
in
adc
dec
mov
js
in
inc
fadds
dec
nop
mov
xor
push
cld
jbe
sub
and
and
loopne
inc
jns
lods
cmp
xor
mov
mov
dec
das
notl
outsl
stos
sbb
push
jecxz
adc
and
and
ja
insb
loopne
addl
fadds
mov
xlat
or
mov
pop
pop
push
pop
pop
pop
lret
xchg
dec
mov
jno
imul
orb
test
pop
call
sub
or
cld
cmp
pop
stc
xchg
xor
fsave
add
xor
lods
xchg
xchg
cwtl
repz
lcall
xchg
jns
imul
sub
and
movsl
add
mov
sub
jle
addr16
push
out
add
daa
imul
push
fwait
bound
mov
mov
iret
jecxz
xlat
cmp
xor
sbb
rcrl
aad
mov
xor
aad
mov
mov
sub
mov
add
xor
mov
fwait
pop
jp
dec
add
inc
cmp
lcall
cld
notl
sub
popa
pop
ret
mov
repz
pop
dec
push
pop
fiadds
iret
mov
sbb
push
mov
and
xor
cmpsb
stos
jbe
js
sbb
arpl
cmpsb
pop
mov
jb
sbb
ret
xor
fs
int
inc
mov
les
addr16
dec
pop
mov
xor
in
mov
in
lcall
mov
pushf
mov
mov
rcr
inc
movl
mov
xchg
lea
ljmp
bound
mov
in
mov
les
add
enter
repnz
mov
subl
sti
inc
xchg
loop
pop
cmpsl
mov
push
inc
int3
in
je
cs
daa
mov
insl
pop
mov
or
adc
movsl
xor
add
inc
or
les
mov
jb
test
adc
jbe
xor
and
mov
mov
mov
scas
sbbb
fidivl
dec
call
xor
jbe
add
push
jns
add
aaa
push
push
test
mov
imul
jp
pop
mov
loop
push
mov
add
sbb
add
sarb
jae
sbb
jnp
jnp
xlat
test
addr16
push
std
hlt
mov
or
imul
iret
mov
insl
mov
xorl
mov
in
push
movsl
scas
xchg
dec
fisttpll
daa
and
movsb
pop
out
push
popa
dec
sub
mov
mov
jl
add
movb
fs
aas
xor
aas
add
sbb
lret
sbb
cmp
xchg
cmc
inc
inc
mov
adc
inc
das
dec
ja
ret
or
aad
sahf
ret
mov
jge
adc
and
aad
repnz
ds
xchg
loope
aaa
fwait
push
push
adc
or
pop
or
cbtw
inc
xrelease
mov
ret
test
movb
test
jp
push
mov
jg
jg
inc
or
out
std
dec
add
imul
adc
jge
mov
mov
aad
mov
or
in
mov
or
mov
mov
push
ja
sar
std
lahf
ror
sbb
mov
movsb
xor
or
loope
sub
fcompl
jecxz
mov
ss
add
add
mov
xor
das
aaa
jmp
addr16
scas
aaa
fbstp
mov
outsl
repnz
add
ret
call
or
shll
inc
fidivs
adc
out
ljmp
xchg
scas
cmp
pop
loope
aad
and
sarb
xchg
sahf
pop
and
xchg
push
pop
push
pop
mov
repnz
mov
mov
aaa
mov
ss
xlat
push
dec
mov
sub
adcb
leave
jnp
and
sbb
sub
push
in
loope
mov
test
icebp
nop
lcall
icebp
popf
sbb
push
mov
fmulp
push
loop
aaa
inc
mov
or
clc
repz
inc
xor
mov
sub
test
or
lods
jecxz
rep
daa
sub
test
jae
xor
cmp
insl
lahf
cwtl
cli
aam
nop
cmpsb
add
dec
cmp
aad
push
js
mov
mov
push
adc
or
inc
mov
into
pop
mov
fstpt
adc
mov
andb
mov
mov
test
js
js
lret
lods
mov
push
ss
jne
rol
cwtl
daa
dec
and
pop
xchg
push
aad
ss
fldcw
test
push
dec
ficompl
out
mov
in
cmpsl
scas
sub
push
dec
sub
xchg
fnsave
nop
enter
add
push
push
adc
clc
xchg
xchg
loopne
cld
lret
mov
stos
out
bnd
cmp
xchg
and
addr16
sub
xor
push
je
jge
pop
adc
xchg
clc
dec
fnstcw
pop
sub
sahf
inc
pop
mov
inc
push
xor
and
inc
das
fmul
loope
jae
int
incb
sbb
out
test
or
call
mov
xchg
xchg
lods
pop
sub
int
inc
sahf
push
dec
dec
add
cmp
inc
popf
xor
scas
fucomp
loope
mov
sub
ja
not
fldl
pop
mov
out
sar
inc
lds
jl
jne
test
xor
cmp
push
inc
xchg
fidivl
cmp
cmc
rcrl
add
pop
shll
mov
leave
in
imul
inc
movsb
mov
add
mov
ret
and
or
pop
mov
notl
or
xlat
mov
xor
jge
pusha
jle
fwait
stos
add
sbb
mov
out
lea
mov
pop
push
dec
xchg
pop
jle
push
mov
test
jo
or
orb
outsb
or
lret
inc
mov
jb
and
jg
and
add
inc
mov
sub
mov
mov
repz
clc
adc
data16
call
mov
daa
leave
jl
or
enter
lahf
shll
add
jne
unpcklps
xchg
mov
push
ret
mov
int3
cltd
jo
imul
dec
push
cmp
pop
xchg
imul
test
fcomip
out
bound
sbb
negl
jge
xchg
lret
jo
jnp
adc
dec
jl
mov
mov
je
fists
stos
setns
inc
pop
and
lods
push
xor
cwtl
adc
out
fmull
xchg
add
leave
jno
push
into
dec
and
mov
xchg
lea
mov
or
push
inc
xchg
cmpb
roll
decb
adc
cmp
mov
jecxz
push
cmp
mov
cwtl
xlat
inc
shl
mov
jp
or
jno
in
and
in
mov
lods
inc
cmp
mov
ds
int
sbb
xor
pminub
stc
and
mov
add
inc
xchg
mov
cmc
in
sbb
and
and
inc
mov
sti
lock
push
rcrb
test
test
jno
scas
and
cmpsb
pusha
aam
andb
mov
jp
cli
imul
mov
xchg
fisttpll
ljmp
iret
push
push
sahf
sub
and
mov
aas
scas
scas
imul
jecxz
dec
rcrl
xchg
insb
addb
and
les
jbe
aas
fmul
aas
loopne
dec
push
and
notb
jb
add
arpl
cmp
and
xchg
fmuls
pop
lods
leave
ljmp
leave
mov
and
push
scas
shll
jp
rol
scas
xchg
fwait
shr
pusha
push
pop
cwtl
cmp
dec
lret
sbb
add
inc
mov
pop
mov
jns
dec
test
xorl
xchg
cmp
iret
cwtl
je
in
mov
shrl
cmp
scas
sub
sti
ss
jge
jecxz
push
lahf
repz
int
clc
out
mov
mov
pop
lods
shll
sbb
clc
cmp
jns
mov
or
adc
gs
pop
mov
push
push
in
mov
pop
and
aam
inc
sbb
and
jne
mov
test
rcl
je
dec
pop
add
shl
and
es
enter
sub
ret
xor
xor
dec
test
mov
mov
or
xchg
inc
push
std
push
fbld
jne
jp
and
fmuls
fcoms
xor
lret
cmpsl
rorb
sub
insb
stc
ficoms
jmp
imul
fs
xchg
clc
out
jne
hlt
push
or
inc
push
fs
dec
lock
adc
cmp
sbb
xchg
aad
pop
stos
data16
jb
je
xor
push
call
mov
jb
and
jb
inc
aaa
add
jbe
jne
push
test
xlat
mov
shl
cmp
mov
xchg
or
repz
pop
int
push
cmp
push
mov
push
push
dec
or
sbb
mov
out
ja
lods
inc
mov
divl
mov
enter
xchg
or
test
movsb
mov
push
call
hlt
sub
xor
mov
jecxz
in
cmpsl
mov
jp
jp
push
add
cwtl
push
add
fldt
xchg
ret
mov
cmp
into
mov
pop
inc
cld
ljmp
fdivp
mov
mov
jne
jbe
add
or
add
outsl
xor
mov
stos
sbb
add
mov
js
dec
sbb
cs
or
mov
dec
test
cmp
mov
push
pop
mov
and
or
jmp
je
xor
inc
cli
adc
and
movsl
adc
or
inc
addr16
push
fwait
decb
or
adc
cmp
popf
lret
imul
adc
bound
fstpt
outsb
hlt
pop
xor
insl
stc
inc
ljmp
xchg
test
cmpsb
cltd
out
cwtl
mov
jo
scas
mov
cmpb
nop
add
in
sub
xlat
xchg
insb
cmp
stc
ret
test
ss
push
xlat
pusha
gs
repz
xchg
into
mov
cli
ja
mov
stos
pop
fisubl
or
sti
cmpsb
sub
lcall
add
sarl
sbb
push
xlat
sbb
pop
das
xchg
cmp
iret
sub
pop
cltd
ret
adc
push
lods
stos
mov
jo
movsb
cld
fs
shrl
dec
movsb
sahf
int
mov
test
xor
add
loopne
or
inc
mov
xor
or
cmp
mov
jne
lahf
adc
mov
adc
sub
cld
sub
dec
lods
addr16
cs
cmpl
xchg
lea
cltd
mov
dec
sbb
adcb
pop
cmc
repnz
je
ret
mov
in
cld
int3
push
mov
pushl
fisttpl
lret
dec
or
xchg
sbb
inc
clc
push
inc
push
pop
cmp
stos
subb
mov
jecxz,pt
inc
iret
fwait
nop
les
enter
push
cld
push
mov
mov
gs
mov
inc
xchg
or
pusha
xor
out
stos
and
in
xlat
cmp
dec
scas
lods
jmp
icebp
pop
jne
and
cs
in
mov
xor
mov
cs
fcmovnbe
lds
xor
orl
movsb
push
dec
sub
fiaddl
mov
test
lods
xchg
int
dec
loop
std
shrl
mov
ljmp
add
sub
sub
dec
push
mov
and
aas
mov
xchg
pop
cs
cld
push
in
mov
cmp
and
xchg
add
or
xor
rcr
fistpll
ds
add
sbb
ret
fiaddl
jmp
or
aaa
sbb
xchg
xchg
jp
mov
idivb
xchg
idivb
out
pop
mov
pop
mov
movsb
imul
pusha
cs
test
loopne
loopne
add
cmp
lcall
shr
nop
lds
ret
add
dec
cltd
mov
iret
lret
imul
xor
xchg
out
add
ret
cmp
ja
jmp
out
ret
jmp
jecxz
cmc
inc
inc
and
out
add
notl
nop
dec
mov
jle
pop
hlt
fdivrl
les
or
push
rcll
das
subb
das
je
lods
pop
jmp
popa
add
xchg
cmp
jecxz
dec
clc
pop
mov
aad
and
clc
jno
pop
ljmp
ljmp
imul
movsb
and
mov
mov
sbb
sbbb
mov
jmp
ja
out
out
mov
pop
andl
jmp
jge
call
mov
and
lcall
xor
mov
shl
shll
loop
xchg
out
sahf
shlb
imul
cmp
jmp
std
scas
shlb
and
and
sahf
inc
ret
pop
les
cmp
mov
lock
and
jae
test
and
fistpll
xchg
or
pop
push
dec
jg
pop
scas
test
roll
into
rcrl
xchg
mov
or
mov
rorb
mov
lahf
adc
push
cmp
pop
xchg
mov
and
mov
jo
insl
adc
dec
inc
mov
pop
jnp
pushf
add
jmp
loope
sbb
or
cmp
jmp
sbb
ficoml
sbb
test
add
dec
adc
pop
xchg
aad
dec
out
les
add
and
imul
and
icebp
in
jae
je
mov
js
add
insb
add
add
add
add
add
add
movsl
loope
add
add
add
add
add
add
add
add
add
and
add
add
add
add
int3
addl
add
ljmp
ja
cltd
incl
push
mov
sub
lea
push
push
push
pushl
call
cmpl
je
mov
cmp
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
pushl
call
pushl
call
mov
jmp
push
lea
push
push
pushl
call
xor
mov
push
push
push
push
pushl
call
pushl
mov
pushl
pushl
push
push
call
lea
push
pushl
call
lea
push
call
pop
push
lea
push
push
push
push
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
pop
xor
leave
ret
pop
mov
or
add
add
add
pop
popl
sbb
adc
or
add
add
add
jb
add
add
add
jecxz
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
jns
jne
dec
outsl
je
jb
outsl
pop
dec
mov
addr16
enter
jecxz
out
popa
fcmove
dec
incb
dec
inc
clc
inc
mov
add
dec
add
push
dec
add
std
std
incl
call
lock
clc
push
pushf
or
xor
mov
pop
pop
add
push
add
push
call
jge
push
add
dec
add
ljmp
add
add
test
ljmp
cmp
test
test
adc
pop
rolb
orl
push
test
call
push
push
add
xor
mov
mov
movsl
lea
add
push
dec
call
loopne
add
adc
sbb
add
add
sbb
add
sbb
sbb
sbb
sbb
sbb
add
add
je
imul
popa
shrl
add
add
add
add
add
popa
insb
gs
imul
inc
dec
js
push
xor
je
lar
add
jo
add
je
add
add
insb
inc
dec
xor
add
add
add
add
mov
add
pop
add
sub
add
add
add
add
mov
movsb
scas
mov
aad
adc
idivl
jge
lods
cmp
rol
hlt
rol
sahf
mov
mov
jno
dec
cli
xor
lcall
jbe
cmpsb
dec
rcrb
inc
mov
adc
iret
outsb
shl
scas
fwait
inc
jp
and
xchg
and
cmp
push
jg
les
sbb
lea
and
or
mov
ret
movsb
inc
fidivl
aas
movsl
scas
cmp
jnp
bound
jns
std
sbb
mov
mov
in
nop
dec
mov
inc
rcll
or
dec
mov
pop
aad
add
add
lock
and
bound
xchg
push
fs
inc
mov
cmc
outsb
push
sub
mov
xchg
mov
lds
add
out
jne
jb
push
cmp
xchg
pop
out
fldenv
jp
testb
inc
jns
sbb
ret
xor
gs
das
mov
nop
jl
pop
fnstenv
pop
jp
and
loopne
add
int3
sub
cmp
jp
out
push
mov
sahf
inc
shr
jle
icebp
shl
fiaddl
pushf
sahf
imul
in
adc
test
add
lret
call
cmp
in
or
fiadds
cmc
pop
push
movsb
into
jb
sub
sub
pushf
nop
movsl
leave
xchg
js
jge
jo
jb
stos
cmp
in
adc
jecxz
lods
mov
xor
daa
fstps
movsb
and
aaa
js
lds
or
imul
xchg
ss
pop
inc
push
mov
add
mov
mov
dec
and
inc
hlt
push
ja
pop
cmpb
enter
sbb
mov
in
jne
loope
jne
outsb
adc
push
or
clc
inc
or
call
daa
mov
mov
scas
loopne
sub
and
cmc
add
xor
sbb
push
mov
inc
clc
lea
cmp
and
std
lret
stos
dec
outsl
dec
add
hlt
cmp
sarl
and
aam
jb
sbb
xor
lahf
out
loop
mov
pop
stos
sub
dec
repnz
lcall
pop
or
ds
mull
cmp
mov
and
test
clc
push
mov
fbld
adc
outsl
out
mov
lock
scas
out
or
sbb
xchg
lahf
mov
repnz
jo
mov
adc
sti
jl
test
sub
dec
mov
mov
dec
push
add
insl
and
xor
add
adc
fdivl
inc
jbe
sbb
into
jns
pop
repz
popa
ds
push
pop
fimuls
std
cli
push
lods
sub
cltd
clc
ficomps
lret
xchg
mov
push
stos
mov
jns
push
dec
lret
test
popa
lea
push
mov
push
ficompl
cwtl
push
dec
add
aad
shl
test
mov
mov
aam
testb
stos
in
test
fldl
jmp
fwait
cmp
add
repnz
adc
adc
inc
int
sahf
sub
lods
addl
adc
lcall
mov
mov
jmp
push
outsb
lret
pusha
push
push
outsb
push
pop
gs
sarb
sub
adc
and
and
iret
cltd
push
lret
test
andl
negb
lds
ljmp
ss
stos
mov
test
cmpsb
pop
adc
mov
mov
adc
push
jg
test
push
cmp
and
lret
repz
pop
out
lret
push
push
addr16
test
movsl
and
mov
mov
adc
imul
adcb
out
dec
jl
sysexit
loope
mov
jo
int
adc
fdivl
push
sbb
ds
sti
fldcw
ljmp
adc
cltd
aad
mov
rorl
jno
pushf
cli
mov
and
mov
pop
jno
ret
adc
test
push
mov
or
push
adc
push
inc
clc
daa
xchg
stc
ljmp
fisttps
sub
and
sub
jae
mov
ss
xlat
icebp
shrb
testl
cmp
sub
pop
es
lds
xlat
in
sahf
mov
inc
out
mov
mov
daa
or
cmp
shll
inc
pop
dec
jne
ret
cmpb
xchg
mov
mov
gs
iret
xchg
xchg
inc
fs
in
dec
out
adc
aad
pop
jle
addl
xor
pop
push
jl
test
push
fsub
xchg
pop
in
inc
andb
jnp
and
outsb
cmp
or
fsubrs
aad
xchg
iret
xor
aam
push
popa
cmpsb
subw
xor
xchg
cli
lods
out
adc
push
jecxz
push
sub
inc
mov
xor
fmulp
push
test
aaa
out
jl
xlat
ret
icebp
mov
icebp
mov
insb
push
out
movsl
insb
rcrb
test
nop
add
cld
mov
sub
out
pop
sbb
pop
lret
push
inc
call
inc
xlat
inc
jno
enter
aam
xor
mov
les
adc
out
and
mov
pop
adc
test
rorl
test
mov
call
and
stc
cld
pop
subl
popf
xchg
repnz
sub
test
inc
movsl
rcll
pop
jb
shlb
outsb
mov
jmp
mov
xchg
push
aas
sahf
rolb
inc
mov
inc
cmpsb
push
mov
cmp
mov
into
sbb
pusha
movlhps
aaa
sub
push
pop
dec
into
cwtl
push
int
push
xorb
les
xor
mov
mov
insb
xchg
data16
cmpsb
jno
into
push
movsb
mov
xchg
mov
xor
les
call
and
pusha
cmp
mov
mov
mov
mov
mov
mov
inc
dec
jle
sub
push
int3
out
jle
mov
iret
stos
gs
ret
in
fwait
movsb
lcall
cmp
and
aad
mov
sub
int
mov
mull
push
adc
fs
sbb
jmp
dec
loop
shll
jb
add
arpl
pop
gs
fidivrs
push
xor
ljmp
lret
push
loopne
sbb
imul
cwtl
or
bound
sub
addr16
jb
dec
loopne
faddl
scas
cmp
inc
xor
data16
mov
es
shl
inc
pop
daa
xor
add
inc
or
jecxz
adc
mov
loopne
out
and
fdivs
insl
adc
arpl
or
leave
mov
enter
rcl
push
jge
and
fs
mov
das
jmp
or
out
ja
outsl
sbb
push
sahf
cmpsl
mov
or
xchg
mov
pop
daa
call
mov
jl
sbb
sbb
insb
pop
jne
jg
inc
sbb
add
mov
call
pop
iret
je
xchg
enter
outsl
sbb
ret
add
dec
push
sub
rolb
dec
mov
ret
xlat
mov
push
ret
xchg
mov
xor
mov
outsb
stos
lret
inc
loopne
add
sbb
mov
mov
stos
aam
loop
mov
in
and
inc
mov
rclb
jne
sbb
fnsave
orps
jae
cmp
js
mov
gs
loop
inc
or
pop
and
or
mov
shrb
outsb
call
mov
mov
mov
in
push
aad
pop
push
jge
pusha
pop
and
pop
popa
in
push
shrb
insl
icebp
ds
mov
cli
push
popl
push
and
aaa
sbb
daa
jecxz
adc
pop
lock
or
or
imul
sbb
jmp
xchg
loope
pusha
jo
in
lods
imul
xchg
xlat
leave
mov
sbbb
je
int
outsb
pop
orl
into
push
fstps
mov
ds
or
push
cmp
sub
ljmp
cmpsb
sub
out
in
pop
and
call
lahf
sub
leave
jp
inc
lds
xor
xchg
mov
cmp
mov
mov
mov
inc
xchg
mov
mov
js
in
sub
inc
imul
aas
je
push
push
push
daa
repnz
xor
icebp
icebp
fnstenv
rcr
or
pushf
xadd
xor
cmpsb
loope
out
push
sbb
inc
sti
jle
sbb
jnp
jb
mov
push
jo
std
xor
jecxz
lcall
or
je
enter
adc
xchg
cmc
mov
and
xlat
popf
inc
xchg
scas
add
mov
int3
movsl
aad
mov
jge
push
or
xor
dec
and
insl
in
mov
scas
adc
add
mov
xchg
mov
int3
iret
loope
lock
xorb
push
movsl
adc
inc
mov
mov
in
inc
hlt
out
ss
add
dec
ja
popa
dec
repz
outsl
mov
in
ficompl
push
in
popa
out
or
fldln2
cmpsl
jmp
and
or
jecxz
and
jb
mov
incb
adc
fstpt
push
std
mov
test
fldenv
pop
ljmp
mov
cmc
out
mov
jle
dec
cs
arpl
stos
loopne
inc
sub
mov
pushf
jno
divl
pop
imulb
ss
idivl
jp
lahf
mov
xchg
icebp
dec
xor
jg
and
xchg
mov
cmc
push
shl
cli
xorl
ljmp
lahf
pop
jp
xor
mov
mov
sub
sbb
cmp
dec
jnp
sti
ret
sbb
mov
arpl
test
inc
pop
pusha
mov
mov
faddl
aaa
cmc
fwait
test
jmp
les
dec
adc
lea
fistpll
lods
out
sub
pop
cmp
je
mov
sbb
jecxz
js
mov
lods
sbb
pop
inc
nop
sub
dec
and
cwtl
adc
jo
pop
jge
js
add
mov
je
inc
sti
fidivl
dec
inc
iret
icebp
aaa
sub
pop
mov
pop
adc
lret
jns
test
cs
mov
mov
mov
adc
mov
sbb
es
pop
imul
fdivl
icebp
xor
jle
inc
cltd
out
js
cmpsl
sarb
into
mov
rcrb
enter
inc
cwtl
lret
cmp
dec
stos
icebp
push
cmc
mov
mov
push
out
pop
ja
hlt
jns
or
mov
sub
ss
mov
jae
or
ficoms
outsl
mov
dec
lret
inc
jl
inc
dec
add
jecxz
xchg
add
jge
leave
jmp
ljmp
jne
dec
lds
inc
sub
mov
mov
pop
inc
into
out
xchg
andb
xorb
js
aam
mov
mov
xchg
sti
cmp
jecxz
in
push
ljmp
outsl
mov
xor
jecxz
icebp
sub
aam
mov
jae,pt
pop
or
stc
aaa
add
and
sub
push
test
outsl
dec
cmpsl
jnp
xchg
scas
sbb
push
sbb
pop
je
xor
lcall
xchg
stos
cmp
xor
sbb
cs
repz
sub
ja
pop
outsb
add
mov
movsl
les
and
subb
or
mov
mov
dec
fs
add
lods
les
add
imul
je
popa
fldt
imul
stc
push
mov
mov
or
jb
cmpsl
pop
xchg
inc
jp
leave
sbb
cmp
push
mov
stos
stos
xchg
push
scas
add
sbb
jb
and
ret
dec
int
pop
or
mov
mov
stos
test
mov
dec
lahf
inc
scas
xchg
daa
fisttps
into
scas
inc
sub
cli
xor
pop
pop
ror
ret
icebp
lcall
loop
hlt
das
ja
pop
lret
sbb
mov
outsb
enter
add
jo
ja
punpckhwd
outsb
inc
jne
std
adc
mov
jle
cmp
outsl
mov
mov
add
aaa
aad
int
lahf
jae
jge
sub
ss
test
xor
rcl
jo
fwait
nop
mov
jbe
lods
repnz
xor
xor
nop
cli
das
shrl
push
fisttpl
call
in
outsb
imull
xchg
cmp
sbb
fstpl
xchg
ret
and
cmp
arpl
mov
outsb
rcrl
ret
adc
scas
ret
decb
cmp
xor
in
inc
aam
stc
fsubrs
push
scas
push
stos
add
mov
mov
jg
pop
outsb
dec
lret
push
popa
pop
out
insb
xchg
ja
cmp
jge
stos
xchg
and
add
inc
data16
jbe
pop
xchg
mov
push
adcb
and
lret
cld
fnstsw
jno
push
test
and
push
adcb
pop
dec
pop
mov
sbb
push
mov
in
mov
je
adc
popa
ljmp
rcll
push
dec
gs
dec
ret
push
xor
add
dec
mov
rcrb
fcoms
mov
or
xchg
adc
or
inc
scas
xchg
inc
pop
ljmp
inc
out
mov
mov
xchg
test
or
xlat
xchg
pushf
mov
shlb
pop
add
nop
packsswb
xchg
and
pop
cltd
les
ss
mov
jge
loop
inc
vunpcklps
xor
rorl
push
loop
lea
jo
mov
jnp
adc
cmp
dec
je
decb
or
fcmove
add
cwtl
scas
pop
enter
and
xchg
sub
mov
cmp
les
iret
pop
repz
inc
call
pop
push
out
sbb
stos
push
popl
and
mov
push
cmp
insl
add
jbe
adc
movsl
cmc
in
in
pop
inc
ljmp
in
lahf
sub
icebp
sub
push
shr
dec
in
dec
or
ljmp
sub
lahf
mov
loop,pn
nop
test
cli
or
js
je
xor
into
stos
repz
rcr
cmp
bound
mov
ret
jb
ljmp
inc
mov
sub
push
mov
cmp
cmpsb
jmp
add
and
and
xchg
test
inc
aaa
sub
xchg
sti
mov
stc
call
jmp
adc
push
sub
dec
pop
add
ret
sub
rorb
mov
test
in
enter
inc
adc
jo
or
lods
stos
leave
and
aaa
hlt
sub
mov
pop
mov
loope
jno
dec
bound
pop
sbb
cmp
or
push
mov
mov
imul
movsb
inc
push
lcall
sti
scas
mov
push
sub
jl
ret
push
scas
std
xor
jne
cltd
movsb
imul
xchg
imul
push
cmp
shlb
aad
rclb
push
nop
add
push
push
cld
adc
fdivrp
in
dec
pusha
push
rol
stc
push
inc
enter
flds
xchg
inc
inc
into
in
hlt
ficompl
int3
xchg
fsubr
test
pop
sbb
mov
push
sub
fs
add
test
test
add
idivl
cwtl
xorl
cli
xor
cmovg
adc
pop
into
test
imul
mov
lret
ja
loope
std
stos
fistl
test
xchg
test
in
mov
divb
cli
jae
ret
mov
movsb
push
and
mov
into
enter
cmp
test
test
inc
cmpsl
cmp
add
xchg
add
int
lea
adc
jg
xlat
mov
dec
cmp
outsl
cmp
daa
setl
ds
pusha
mov
pop
pop
lods
pop
pop
xorl
sbb
jl
inc
push
adc
sbb
iret
cmp
loope
outsb
out
xchg
int3
adcl
cmp
jae
push
cmpsl
inc
add
xchg
inc
in
or
iret
and
and
add
lcall
sbb
jne
in
adc
mov
in
xchg
mov
push
stos
xor
sahf
cmc
xor
cwtl
scas
pop
movsb
adc
jae
roll
jbe
dec
testl
out
outsb
popf
stos
and
imul
in
out
shlb
jecxz
movsb
dec
out
cmc
ret
and
xchg
rorl
cvtps2pd
insb
lock
popf
in
push
scas
sahf
sub
or
test
add
add
inc
scas
jne
mov
scas
imul
pop
icebp
leave
push
xchg
xor
out
adcb
mov
nop
pop
lcall
adc
in
hlt
scas
test
call
mov
pop
pushf
add
rcrb
fwait
inc
mov
mov
mov
and
or
adc
lcall
lods
call
aad
std
mov
in
ficoml
and
push
fcmovb
cmp
ror
jnp
das
jne
xchg
or
add
and
lock
inc
out
lods
das
lret
mov
add
dec
mov
insl
aas
int3
jbe
das
mov
shll
mov
sub
xchg
sbb
inc
scas
xchg
imull
out
mov
fcmovnbe
mov
sti
jmp
pop
adc
in
fptan
jge
movsb
out
cltd
push
es
cmp
jp
xchg
out
mov
push
rorl
xchg
sbb
cs
cli
out
mov
int3
cld
dec
cmp
mov
pusha
add
add
xchg
jg
fimull
arpl
jle
sub
push
mov
in
pop
mov
or
push
jg
testl
aad
leave
xchg
roll
inc
inc
jp
xchg
mov
icebp
push
push
mov
mov
cmp
inc
cmpsl
js
bound
xchg
insb
dec
cmp
jl
mov
adc
lods
mov
movsb
and
jg
jmp
es
xchg
xor
mov
insb
out
or
mov
hlt
mov
lds
jnp
jmp
inc
rclb
pushf
sbb
hlt
jb
jno
scas
js
push
sarb
adc
sub
lods
in
xor
add
push
add
push
add
add
fiaddl
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
rolb
add
jo
jo
inc
jg
jne
pop
mov
inc
add
add
pop
and
and
outsl
and
les
das
cmp
and
add
add
pop
add
add
xchg
stos
or
add
or
add
add
add
cmpsb
sbb
sbb
rorb
or
xor
add
and
jb
push
dec
add
jb
fs
add
push
outsb
or
cld
stc
xor
sar
clc
dec
inc
in
jmp
fdivr
or
decl
setnp
ret
add
adc
leave
dec
lret
hlt
cld
decl
pop
in
mov
std
repnz
ret
in
add
adc
sbb
add
adc
aam
push
inc
cld
stos
aam
rolb
adc
loopne
mov
rolb
xor
push
add
jmp
std
pop
std
je
push
xor
in
rcll
or
call
loopne
lock
push
adc
loopne
add
dec
jne
sarb
jo
vrcpps
push
call
add
push
add
cmp
add
add
add
add
xchg
sbb
sbb
cmp
out
add
sbb
jae
outsl
gs
iret
insb
movsl
insl
insl
add
inc
je
add
movsl
outsb
addr16
inc
outsl
gs
imul
jae
insb
je
movsl
push
insb
imul
inc
push
jne
gs
jae
or
jae
jae
loopne
insb
add
add
add
jmp
add
add
add
add
add
add
repnz
push
sbb
cmp
int3
data16
mov
ss
nop
scas
push
pop
mov
test
out
mov
mov
sub
xchg
fdiv
movsb
lcall
pop
pop
mov
clc
mov
stc
lds
dec
jb
add
lods
int
jp
sub
sub
shrb
mov
xor
or
cmc
les
push
iret
push
jo
mov
mov
repnz
mov
outsl
sti
cld
xchg
addb
or
inc
test
mov
mov
push
xor
pop
pop
fidivrl
out
out
ljmp
mov
mov
dec
das
icebp
stos
fdivrs
shll
test
or
pop
fucomi
sarb
xchg
mov
mov
cld
jg
cmc
ja
cld
cltd
xchg
push
insl
pop
adc
mov
rcll
insb
ss
or
out
or
sub
mov
or
out
mov
int
sub
pushf
add
sbb
xor
fdivrs
add
push
ret
mov
cld
mov
jg
mov
daa
jbe
pop
mov
xchg
pop
cmp
nop
les
imul
lods
mov
push
jo
mov
shl
lock
pop
das
stc
add
mov
push
stc
ret
cmp
hlt
rorb
jb
pushf
popa
xchg
dec
mov
insb
adc
bound
decl
dec
cmc
pop
leave
xchg
or
fstpl
sbb
adc
fnstenv
inc
inc
les
aam
scas
add
fmull
fisttpl
mov
cltd
fisttpll
mov
mov
sbb
cmp
test
mov
and
xchg
inc
sbb
push
jne
jmp
call
clc
xlat
cmp
sbb
aad
dec
and
pop
sub
or
adc
idivb
scas
bound
cmp
inc
int
mov
lods
xor
js
out
inc
mov
push
mov
scas
mov
and
flds
add
or
mov
repz
test
pop
adc
or
mov
mov
adc
data16
fmulp
cs
ja
or
or
movsl
push
mov
or
mov
outsb
fwait
cmp
shr
daa
xor
cld
in
cwtl
lods
outsl
xorb
lret
push
adc
and
jl
push
sbb
mov
outsb
jae
test
push
or
mov
pop
bound
out
repz
sarl
jle
jg
dec
pop
je
mov
jb
jns
and
out
jnp
dec
dec
adc
sbb
mov
ljmp
shlb
mov
or
or
jno
push
inc
add
int3
add
adc
lds
inc
inc
mov
pushf
dec
jp
push
mov
movsl
push
dec
imul
rcll
dec
lret
inc
push
inc
mov
je
mov
cmp
sbb
lahf
xchg
add
dec
daa
jno
mov
enter
out
lea
cmp
xchg
jmp
sahf
rcr
push
pop
mov
adc
xor
pop
xchg
dec
adc
inc
ss
jmp
push
cmc
or
inc
inc
fsubrl
and
xlat
sub
push
pop
out
lcall
and
sbbb
jns
out
push
repz
mov
out
mov
daa
dec
xchg
push
das
inc
psrld
mov
test
inc
mov
sbb
sbb
xor
dec
adc
lods
dec
daa
mov
mov
inc
shlb
popf
sbb
sub
loope
out
scas
ret
mov
or
jp
fldt
pushl
pop
adc
mov
mov
xchg
push
mov
aaa
rorl
sti
test
and
jo
in
in
inc
popf
xchg
xchg
fsubs
and
pop
cmp
lock
cmpsb
ljmp
stos
xchg
das
sbb
dec
xchg
repnz
lock
cmpsl
and
call
cmp
cmpl
push
mov
ds
xlat
lods
xchg
and
or
mov
call
or
push
adc
mov
inc
mov
sub
adc
xchg
fs
stos
sarl
mov
lock
ja
or
sub
fwait
aaa
roll
cmp
cli
mov
xchg
in
mov
add
repz
ret
jge
xor
mov
jecxz
push
sbb
push
cltd
and
add
aaa
stc
mov
inc
dec
fildl
movsb
repz
adc
or
and
adc
addr16
jo
jge
in
or
adc
dec
es
or
iret
xor
mov
push
jp
repnz
mov
xchg
nop
aam
dec
cmp
dec
lods
rorl
lcall
and
jp
xlat
push
cmp
mov
pop
jnp
bnd
or
mov
es
mov
jle
pop
inc
mov
pushf
fdivl
clc
push
lock
mov
stos
jg
fidivrl
jo
outsb
mov
scas
sub
popa
mov
or
and
jecxz
push
sub
subb
aas
cmp
mov
push
pusha
int3
mov
mov
jg
mov
push
repz
add
add
xorb
pop
push
das
xor
andl
enter
addr16
or
jo
xor
out
jo
sbb
and
pusha
mov
jp
jl
pop
scas
fcomi
mov
popa
test
call
out
inc
movzwl
insl
push
shrb
hlt
dec
pop
data16
xchg
loopne
sarb
fisttps
and
cmp
shrb
sbb
addr16
hlt
sbb
jbe
sahf
enter
mov
mov
lods
push
sarb
vpshldvq
bound
or
test
mov
cltd
xchg
mov
or
negb
mov
xlat
dec
xchg
ss
push
pusha
ljmp
sbb
fdivrl
adc
test
pop
test
xchg
xor
stc
cmp
adc
dec
and
xor
xchg
xlat
test
movsb
int
pop
call
call
loopne
inc
adc
notl
outsb
popl
sub
inc
loope
mov
pop
pusha
rorl
xor
mov
cmp
add
push
pop
pop
xor
inc
lcall
mov
cmp
mov
xchg
aaa
mov
mov
test
xor
mov
mov
add
cmc
xchg
sub
dec
nop
jge
mov
mov
mov
stc
mov
and
inc
jp
bound
jp
inc
leave
sub
sahf
or
and
cmc
ljmp
icebp
dec
or
in
cmp
jbe
jb
xor
jno
aad
mov
shll
fidivl
push
lods
xor
mov
cli
aad
pusha
rcrl
mov
in
int
inc
fwait
push
out
dec
pop
pop
mov
inc
in
or
push
inc
mov
xchg
jge
inc
cmpsb
pop
xchg
push
cmc
dec
adc
cmp
ss
insl
push
sbb
mov
pop
das
sbb
push
sbb
push
jb
dec
scas
dec
outsb
xchg
lock
int3
mov
sub
out
dec
ret
sbb
aad
mov
fbstp
arpl
mov
xchg
and
jne
roll
jl
test
nop
std
inc
icebp
cmovnp
sub
fwait
push
adc
jb
push
add
mov
hlt
push
ret
xor
sub
sti
adc
jns
or
pop
cld
out
lret
cmp
or
imul
cmpsl
push
mov
mov
jne
jg
mov
fisttpll
xchg
popf
faddl
add
inc
mov
imul
pop
sti
sub
imul
scas
adc
cmp
popf
mov
xor
cwtl
cmc
sub
sti
aas
stos
icebp
ljmp
ret
pop
add
mov
pushf
and
sahf
inc
inc
xchg
inc
stc
sbb
gs
in
mov
adc
mov
fbld
inc
add
les
jp
sbb
sar
xchg
fstps
ds
fistpl
int
cs
cmpsl
lcall
test
mov
lods
xchg
pushf
idivb
xor
mov
mov
and
jp
xchg
mov
mov
pop
in
jo
cmpsb
cs
sarb
dec
sub
xor
das
pop
xchg
movsb
outsb
dec
jge
orl
shr
loope
inc
or
cmp
xor
les
fnstsw
outsl
add
pop
sbb
push
fnstsw
mov
lahf
pop
xor
iret
test
inc
mov
cmp
subb
pop
cmc
gs
add
stos
cmpsb
aaa
shl
push
pushf
imul
mov
je
adc
cmp
xor
sub
mov
push
testl
sbb
js
enter
sbb
out
in
repnz
mov
dec
in
lods
in
sub
jae
pop
aaa
mov
jno
out
iret
gs
push
mov
or
or
cmp
xchg
scas
dec
or
es
mov
and
jp
lret
push
fsubrs
shl
or
mov
jb
push
sahf
jbe
jne
movsl
cli
lret
adc
jo
in
cmpsl
sub
inc
mov
add
scas
dec
adc
push
fs
mov
push
or
sub
scas
jns
stos
hlt
jne
mov
shlb
addr16
mov
stc
out
jmp
imul
icebp
jbe
sub
cmpsb
push
pop
repz
and
cmp
test
je
repz
iret
xchg
jno
sbb
insl
dec
mov
mov
in
cmpsb
mov
push
xchg
jae
pushf
jmp
sbb
insl
gs
lcall
pop
fcmovne
clc
scas
ja
xchg
aas
imul
pop
cmp
add
xchg
push
inc
push
iret
inc
lahf
dec
or
cli
mov
loopne
mov
jg
jp
cs
adc
rcll
pop
fidivrl
sbb
popf
or
leave
sbb
xchg
xchg
gs
loopne
addr16
gs
std
pushf
sub
out
pop
xor
jmp
mov
pusha
adc
inc
cmc
or
outsb
xchg
mov
jmp
out
cmp
sbb
ret
and
jae
or
das
or
mov
test
frstor
ss
inc
xchg
jbe
test
aas
shll
xchg
xchg
out
mov
push
push
stos
push
push
mov
lret
jno
inc
add
mov
or
cmc
js
lds
out
cmp
xor
mov
sub
jecxz
add
push
push
shlb
imul
or
sbb
daa
sub
pop
jo
and
mov
out
fstp
dec
xor
dec
daa
adc
pop
mov
mov
andl
sbbl
ds
dec
ljmp
jns
mov
test
pop
and
andb
iret
add
ss
push
jne
inc
dec
sub
ds
jmp
mov
fadds
cmp
rcll
cld
mov
mov
sbb
sbb
filds
mov
cltd
dec
arpl
pop
inc
push
jmp
mov
xorb
sarb
mov
mov
loope
sbb
jle
test
inc
mov
mov
push
dec
jecxz
xchg
roll
int3
outsl
or
xchg
jp
aas
add
shl
mov
pop
adc
arpl
inc
cmpsl
sbb
lahf
sbb
push
push
scas
sbb
dec
adc
dec
int3
test
jl
addps
or
add
sub
push
rcr
mov
ds
pop
mov
lock
cltd
call
cld
inc
cltd
fistpll
and
lret
sbb
ret
roll
fistl
mov
mov
aas
dec
mov
ljmp
movsb
imul
sahf
sub
jne
and
adc
test
test
in
adcl
shll
inc
pop
xor
insl
mull
das
shll
pusha
popa
pop
xchg
insb
lds
push
ljmp
fistl
lret
sbb
pop
repz
add
inc
in
lods
jl
dec
jp
push
cltd
xchg
xchg
outsb
pop
sbb
mov
and
inc
mov
filds
cmp
sbb
inc
xor
hlt
arpl
pop
push
mov
dec
push
in
ret
mov
cmp
ja
mov
rol
fidivrs
scas
int3
cs
fisubl
lds
sbb
lea
jo
dec
cmp
es
je
mov
mov
cmp
mov
xchg
inc
adc
bound
test
addr16
es
sti
or
add
add
nop
pop
fsubrl
out
and
mov
notl
and
ss
push
loop
or
bound
xchg
xchg
gs
dec
cmp
test
fiaddl
xchg
cmp
outsb
mov
popf
xchg
mov
stos
js
push
xchg
pushf
sbb
jne
pop
xchg
jp
clc
xor
xor
outsb
dec
xor
popa
or
outsb
lock
jecxz
and
loop
mov
nop
subb
xchg
add
out
mov
clc
imul
sahf
mov
shl
cwtl
lods
shll
dec
push
adc
lock
out
ret
fucom
shlb
cli
int
adc
mov
clc
xchg
sub
push
inc
sub
mov
sbbb
in
lock
xor
push
mov
icebp
out
inc
mov
mov
sti
fbstp
mov
add
inc
mov
xor
aad
inc
ja
push
pop
lret
xchg
nop
int3
sbb
arpl
xchg
pop
sub
insl
les
sub
popf
shrb
loope
sbb
and
int3
into
test
cmp
jbe
movsl
pop
and
jge
dec
push
and
jle
inc
inc
in
into
jg
dec
sub
repnz
popa
test
and
inc
add
bound
loope
rorl
pop
cmc
jp
out
xchg
jge
cli
and
xor
mov
addr16
mov
dec
pushf
pop
gs
fst
test
push
xchg
rol
outsl
fadd
daa
cltd
jge
xchg
dec
aas
mov
push
imul
or
test
in
movsl
mov
jg
scas
pop
sbb
jmp
outsb
call
sbb
popf
dec
adc
sbb
and
push
cmc
cmp
fiadds
inc
push
mov
xor
rcrl
stc
das
stos
out
idivl
pushf
add
jnp
sbb
movsb
in
add
jb
cmp
jo
inc
out
mov
arpl
xlat
test
add
fwait
mov
hlt
sbb
test
pusha
cmc
xchg
sbb
jne
pop
inc
imul
jo
jne
sbb
data16
insb
std
imul
repnz
sub
sbb
sbb
dec
lea
andb
sub
mov
clc
push
mov
mov
clc
lret
rolb
xchg
mov
mov
ljmp
leave
inc
jle
push
leave
mov
roll
add
cmp
or
cltd
pop
cs
movsb
movsb
inc
sub
wrmsr
mov
adc
jae
sbb
adc
cli
ds
fdecstp
outsl
sub
jne
bound
sbbb
or
add
adc
xchg
jbe
cmp
jmp
dec
mov
daa
xchg
add
mov
or
inc
xorl
adc
xchg
icebp
mov
xor
push
and
push
sub
push
push
or
adc
xchg
pop
adc
lds
jmp
decb
cld
add
cmc
jge
stos
adc
in
cld
add
push
pop
bound
xor
lods
adcb
xlat
jnp
inc
cmp
mov
in
mov
rorl
inc
sub
xchg
ja
cmpb
xchg
repnz
outsb
xor
cmpl
rolb
pop
adc
push
mov
fcompl
fs
dec
dec
aas
sbb
cmp
jp
or
adc
cmpsl
mov
mov
ja
outsb
push
add
mov
pop
mov
mov
in
mov
inc
pushf
jecxz
arpl
pop
and
push
pop
push
xlat
pushf
in
mov
stos
mov
and
incl
insl
add
aaa
dec
scas
hlt
jb
rcl
sub
adc
bound
push
testl
cmp
imulb
hlt
test
fsubl
ret
jbe
mov
shlb
incb
jg
repnz
subb
cmp
push
sbb
leave
enter
jle
and
shrl
rorl
push
or
outsl
add
rcr
push
ljmp
daa
push
inc
pop
xor
xchg
movsb
sti
loope
push
or
test
pop
stos
mulb
js
mov
sbb
dec
jns
aam
and
mov
je
fsubp
out
inc
xor
mov
fwait
lds
ljmp
mov
mov
pushw
in
pop
insb
scas
push
in
xor
ret
lea
repz
lret
out
mov
fisttpll
xchg
mov
aaa
fimull
add
out
ret
pop
aam
popf
ja
mov
mov
test
lahf
adc
adc
andps
sbb
dec
xor
in
and
adc
mov
dec
pop
ret
mulb
out
ds
lds
dec
nop
push
arpl
jle
pop
push
idivb
mov
mov
dec
popa
outsl
sahf
mull
lea
sahf
scas
or
mov
icebp
test
fwait
push
inc
test
outsb
subb
push
loope
notb
addl
in
add
jmp
add
and
in
fidivrs
mov
jge
call
and
mov
jecxz
leave
rorl
inc
js
mov
inc
pop
cli
in
add
push
test
jmp
imull
or
shrl
fwait
lea
mov
pusha
push
out
std
dec
sahf
adc
mov
push
outsb
imulb
arpl
xchg
dec
or
dec
jmp
add
add
add
lret
fs
add
add
jmp
add
add
add
add
add
add
imul
add
add
add
add
add
or
in
in
inc
in
inc
add
add
addb
stos
stos
adc
ja
js
js
js
js
push
mov
sub
orl
mov
inc
mov
pushl
pushl
pushl
push
push
call
add
mov
cmp
jbe
andl
cmpl
jne
call
mov
add
push
pushl
call
mov
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
push
push
push
call
push
push
push
push
push
pushl
call
pushl
call
push
push
pushl
pushl
pushl
call
call
call
call
call
call
push
push
call
mov
call
mov
push
push
push
call
push
lea
push
push
call
add
pushl
pushl
pushl
call
add
pushl
pushl
pushl
call
mov
pushl
pushl
call
mov
pushl
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
push
pushl
call
mov
pushl
call
cmpl
jb
mov
leave
ret
add
add
add
add
add
outsl
and
inc
add
test
add
add
add
insb
add
add
add
add
add
add
sub
add
push
add
add
add
into
add
jb
push
jb
add
dec
pop
add
push
pop
movl
add
sahf
xor
pop
push
lea
add
add
in
push
cld
addb
cmp
push
lea
imul
je
test
cld
pushl
in
add
push
incb
adc
push
insb
leave
lea
or
in
int
add
add
adc
inc
ror
cmp
fcoml
in
add
add
add
popl
incl
fildl
insb
aas
sti
ljmp
incl
incl
jmp
or
cld
pop
mov
and
adcl
inc
rcrb
or
call
stc
pushl
decl
xor
add
adc
add
pop
add
add
add
in
js
add
int
fwait
lcall
add
add
add
imul
js
outsl
insb
outsb
add
push
add
je
shll
jb
outsb
jae
add
dec
add
dec
add
imul
add
push
jne
popa
shrl
mov
inc
push
insb
dec
insb
push
popa
push
add
add
add
sti
add
jnp
add
add
add
sbb
inc
iret
int3
adc
imul
push
xorl
int3
jbe
xor
cld
sbb
ss
ret
push
mov
inc
inc
pop
and
mov
pushl
cld
mov
sbb
in
loope
adc
sub
cli
lods
outsb
popf
sub
es
leave
jne
inc
add
dec
or
pop
sbb
inc
faddl
in
pop
xor
push
xor
sbb
jge
xchg
aas
inc
scas
sub
adc
mov
push
mov
mov
jbe
je
jecxz
loop
fldl
cmp
inc
add
or
mov
nop
pop
dec
das
cli
lret
mov
push
cmp
sub
or
shl
lds
cmpsb
outsl
and
mov
fbld
cwtl
stc
xchg
nop
push
push
sub
ret
sahf
push
xchg
adc
gs
or
pop
lea
in
outsl
jae
inc
mov
jo
push
add
fs
ret
fistl
daa
in
xor
sub
or
mov
pop
jle
mov
mov
add
enter
xchg
cld
orb
sub
sub
fisubl
das
xchg
push
xchg
ret
push
rorl
shl
ds
lret
test
mov
cmpsl
in
mov
lods
mov
push
mov
add
add
bound
jecxz
jg
js
lods
cli
subl
jle
int
jno
rcrl
popa
std
fiadds
xor
cmc
mov
xchg
add
mov
test
jmp
mov
fisttpl
xor
popf
testb
mov
loop
xchg
imul
xchg
inc
mov
cs
mov
into
adc
cmp
inc
mov
push
inc
jmp
int3
sti
pop
shlb
inc
jmp
jbe
loop
cltd
mov
popf
cli
aad
mov
mov
ret
or
pushf
je
lods
pop
pushf
xor
movsb
fsts
ss
int
fldt
push
adc
daa
das
jne
negb
dec
push
fdivrs
sub
lods
cmpsl
aad
pop
sub
and
xchg
daa
rol
in
xchg
int3
adc
xchg
ret
sub
add
push
imul
gs
jb
mov
aaa
inc
dec
push
aad
test
fnstcw
pusha
pop
push
cli
push
push
dec
stos
inc
repnz
sbb
imul
leave
adc
insl
dec
fstps
jge
or
fcomps
lret
rclb
sub
adc
add
rorb
and
xchg
jmp
out
fbstp
pop
fdivrs
shrl
adc
lahf
xor
sahf
lock
jle
jnp
and
dec
fs
test
shlb
xchg
mov
daa
jge
sbbl
sbb
push
cmpsl
cmp
jae
xchg
jmp
das
incb
pop
mov
clc
scas
mov
xor
cwtl
insb
arpl
push
out
icebp
scas
sbb
inc
repnz
out
push
mov
or
test
test
mov
sub
sub
sbbl
sbb
mov
jbe
xlat
inc
sbb
iret
mov
mov
inc
push
cmp
xchg
repz
pop
inc
sbb
mov
mov
fstpt
sub
push
sbb
cmp
insb
push
out
mov
popa
inc
jne
int3
fcoms
mov
adc
dec
cli
xor
fsts
je
hlt
lds
aas
aad
jecxz
lret
insl
cli
leave
test
cli
ret
inc
mov
sub
enter
push
sbb
dec
sahf
push
sub
xor
mov
out
sbb
push
inc
xchg
dec
cmp
out
xlat
sub
imul
test
nop
xchg
xchg
scas
jmp
lods
or
cmpsl
adc
sub
imul
cwtl
enter
jmp
insb
mov
int3
sbb
inc
data16
push
stos
xor
add
aam
or
or
imul
mov
daa
mov
push
ljmp
add
jb
test
call
and
cltd
mov
je
repnz
test
int
mov
addr16
jmp
and
and
mov
xor
ljmp
dec
fsubrl
iret
xchg
dec
jno
dec
inc
mov
test
daa
and
sub
int
sub
pop
into
push
adc
rcl
add
fwait
fwait
sahf
daa
mov
sbb
lcall
ss
es
sbb
popa
pop
mov
mov
push
outsl
sti
cmpsb
sbb
fdiv
loop
push
fldt
push
ret
pop
mov
mov
sub
mov
and
dec
xor
mov
xor
and
sbb
mov
mov
xor
xchg
jb
rorb
pop
test
or
inc
insb
inc
outsl
aad
imul
aad
sub
sahf
push
out
prefetcht2
ja
imul
jo
jg
movsl
xlat
fisttpll
lret
int
jl
fsubs
nop
inc
popf
ljmp
sahf
add
xor
xchg
jmp
ds
and
sbb
add
xor
aaa
dec
jl
mov
pop
jae
cmp
inc
mov
aam
or
mov
iret
and
rcl
aaa
xlat
pop
add
sbb
into
in
sbb
adcl
mov
shlw
mov
pop
pop
cwtl
jl
test
push
fs
fisubrl
test
rcrl
pop
jno
jb
repz
call
push
mov
je
outsl
add
int3
inc
jmp
fsubl
mov
leave
ss
jl
das
adc
rcr
push
arpl
out
and
mov
mov
jns
mov
cmp
test
test
mov
add
sbb
and
in
push
or
jo
push
out
ficoms
cmp
mov
icebp
push
push
shlb
sti
xor
test
mov
jl
or
mov
cmc
and
dec
scas
dec
movsb
leave
mov
add
sub
and
cmp
cmp
dec
iret
add
push
sbb
mov
cmp
ds
dec
mov
lods
mov
movsb
sahf
and
shlb
xor
xlat
xor
mov
dec
mov
cmpsb
into
mov
cmp
push
or
call
dec
movsl
out
mov
cmc
nop
mov
add
inc
mov
fldenv
sub
xor
dec
add
in
sar
stos
mov
inc
ss
xchg
jns
jmp
jbe
je
xchg
fstps
xchg
jbe
jl
sbb
cmp
lahf
mov
and
jno
out
aam
jnp
jg
cltd
out
inc
bnd
push
adc
gs
std
xor
push
cmp
dec
in
mov
imul
bound
or
repz
aad
aaa
cmp
jecxz
cmp
in
mov
outsb
in
dec
mov
testl
jnp
fs
loop
scas
dec
mov
dec
jb
clc
outsl
xchg
xchg
sub
aaa
and
push
xchg
lret
push
les
arpl
xchg
aad
xchg
aad
dec
adc
adc
inc
mov
dec
sub
mov
jg
dec
gs
jl
xor
push
push
xchg
cwtl
mov
stc
xchg
cmp
lret
sub
and
icebp
ja
cmp
cmp
loope
lods
cli
or
das
pop
xlat
pop
loopne
aam
mov
pop
fnstcw
and
aaa
xor
adc
insb
pop
add
in
mov
in
fsubrs
push
rorb
js
and
js
xchg
roll
push
ds
push
xchg
ret
sbb
and
test
jecxz
test
les
pop
clc
cmp
jb
pop
ficompl
loopne
cmpsl
fidivs
xchg
pusha
fsubr
in
cwtl
or
sahf
push
clc
or
lds
cltd
or
cmp
adcb
dec
sbb
fsubl
pushf
aam
and
scas
sub
fnstenv
and
xchg
out
in
jmp
cwtl
sbb
enter
and
mul
mov
loope
addr16
test
push
sahf
int
jae
mov
pop
adc
mov
adc
xchg
or
jle
subl
incb
cmp
xor
push
sarb
test
in
jnp
mov
pop
xor
std
jb
or
rorl
outsb
push
cmp
cmpl
movl
bound
dec
orb
pop
jmp
gs
lods
jbe
sbb
xchg
out
sbb
daa
inc
push
jne
and
inc
int3
mov
xchg
inc
adc
insl
jno
test
pop
cmp
mov
addb
jne
loopne
or
inc
sub
xchg
add
xchg
shlb
loopne
stos
push
divb
fs
fnsave
addb
mov
push
sub
in
test
js
fistpl
nop
jns
cmp
jecxz
push
cmp
fwait
in
jne
jmp
mov
aam
mov
push
js
out
cmpl
ficompl
pusha
push
cli
and
or
or
dec
jnp
and
leave
sbb
insl
test
lds
in
repnz
jecxz
int
jl
flds
mov
lods
add
jl
mov
inc
das
xchg
xlat
sbb
push
mov
sub
xor
loopne
stc
jbe
ds
cld
andl
outsl
or
test
sub
pushf
mov
push
sub
mov
test
inc
add
xor
sbb
in
rorb
jo
push
jae
mov
aaa
inc
insl
popf
shl
ret
lock
repz
sub
sub
mov
shrb
shll
shrb
call
mov
call
icebp
xchg
xchg
xchg
fdiv
pushf
pop
xorl
dec
mov
sbbb
mov
js
pop
shr
push
or
fxch
dec
sub
ja
fildll
push
ja
fwait
push
mov
adc
popa
adc
or
xor
mov
and
push
mov
stos
mov
jnp
and
js
jns
push
xchg
xor
daa
mov
test
or
mov
pop
aam
int3
roll
nop
scas
mov
outsb
rcrl
ret
mov
dec
js
loope
mov
dec
inc
and
lahf
inc
fsubl
imul
or
push
bts
cmp
ljmp
fistpll
loope
lret
pop
lock
dec
xchg
out
fsts
cmp
arpl
mov
adc
mov
dec
jp
push
push
xor
out
jae
and
pop
or
and
scas
jo
stos
add
imul
cli
cli
lds
aam
sub
in
xor
in
or
cmp
jo
out
push
mov
in
cwtl
mov
pop
lods
mov
adc
and
push
pop
xchg
loop
call
das
lret
in
jne
data16
aas
dec
inc
shr
icebp
xchg
jl
push
in
push
mov
jne
fcomps
loop
mov
push
jg
out
push
aam
jnp
int
cmpsb
inc
mov
push
in
dec
mov
in
cli
and
mov
test
add
out
ds
sbb
stos
pop
test
int3
jg
or
test
lret
xlat
test
cltd
cmpsb
jl
adcb
mov
push
mov
and
leave
in
repz
add
mov
mov
loope
mov
mov
mov
cld
popf
mov
sbbb
paddsw
cmp
lahf
add
add
pop
push
stc
in
fistpll
jg
icebp
mov
lods
and
test
inc
xor
jne
pushf
push
dec
ds
dec
xchg
rolb
test
mov
popa
mov
arpl
fldcw
push
iret
sbb
push
stos
out
jge
push
loope
mov
lea
pop
add
test
xlat
push
xchg
andl
mov
in
ja
dec
inc
xchg
and
inc
mov
mov
pop
xchg
stc
shll
pop
ret
es
lods
rorb
add
fbld
addr16
mov
mov
loope
add
mov
lret
insl
dec
dec
xor
aaa
mov
int3
shrb
insl
jae
sahf
orl
mov
test
adc
mov
faddl
rcl
mov
daa
aam
ljmp
mov
cmp
mov
aam
fcomp
xchg
lcall
mov
jp,pn
xchg
inc
mov
inc
ja
cmp
movsl
cmp
pop
repnz
rorb
test
and
pop
inc
in
enter
repnz
ds
sbb
dec
ret
imul
lea
sbb
sbb
pop
movsb
add
mov
mov
dec
jp
fidivrs
mov
test
out
cmp
cmp
mov
mov
mov
add
mov
roll
out
arpl
das
sbb
fmull
test
fsubrp
jmp
mov
mov
rclb
jns
mov
sbb
call
push
in
dec
out
mov
enter
popa
xchg
in
mov
adc
push
dec
dec
out
mov
mov
std
and
cmp
push
inc
mov
and
pop
push
rcrl
testb
sub
fcmovu
sbb
jb
xor
or
cmpsb
xor
mov
mov
data16
fmulp
add
lret
inc
ret
and
mov
pop
or
es
ret
jno
loopne
pop
into
add
loop
inc
xor
cmp
repnz
fs
xlat
pop
loope
dec
pop
add
arpl
push
sbb
cwtl
lcall
stos
pop
ja
and
scas
in
int3
jno
push
push
ret
aas
xchg
sub
inc
sub
jno
sbb
repnz
mull
xchg
rcll
daa
or
pop
ret
scas
and
jne
and
inc
roll
nop
jmp
rcrb
mov
lea
xchg
mov
jb
das
filds
jge
mov
sub
std
add
xor
mov
xchg
fstl
sbb
rclb
push
mov
cmp
ret
clc
test
or
lods
pop
and
mov
icebp
sbb
cmp
pusha
and
or
rcrl
imul
inc
push
pop
lods
cmp
lods
mov
jae
cmp
fistl
xchg
fldt
ja
fildl
sbb
mov
cmpsb
xor
xchg
insb
push
jl
mov
mov
add
xchg
cmpsl
lahf
out
push
push
xchg
fidivrs
cmc
adc
adc
stos
xchg
mov
pop
test
jle
cmp
das
fldcw
in
shlb
fimuls
repz
loope
out
pop
xor
aaa
enter
xor
pop
xchg
sarl
rorb
mov
mov
pop
push
and
mov
fidivrs
jae
push
mov
and
test
imul
mov
ss
pop
push
jecxz
mov
or
dec
leave
push
jae
out
pop
scas
add
scas
repnz
fildl
inc
lock
add
push
pop
xchg
out
rcrl
imul
push
ret
sub
mov
xlat
leave
or
arpl
je
daa
rcr
adc
xchg
scas
lcall
mov
cwtl
fbld
jno
jno
pop
jecxz
push
or
stc
lret
xchg
leave
mov
pop
and
cmp
cli
jecxz
pop
loope
out
cmp
jno
enter
sbb
out
lcall
push
pop
jl
pop
add
inc
ja
ds
ret
xor
sbb
lds
mov
dec
pop
sbb
or
ds
gs
out
xchg
call
cwtl
paddw
cmpsl
adcb
cmp
mov
adc
add
mov
adc
lods
mov
adc
pop
jns
or
push
jl
mov
pop
hlt
mov
mov
loopne
ret
aad
aaa
sbb
xchg
stos
add
inc
xchg
pushf
cmp
lret
mov
sbb
lret
cmp
mov
insb
inc
dec
aas
jne
mov
shll
cmpb
pop
inc
push
adc
jb
insl
or
fidivs
imulb
out
loopne
in
dec
dec
xchg
push
insl
mov
into
fldenv
inc
xchg
sbb
insb
sbb
sub
ss
mov
fwait
int
adc
push
mov
dec
xchg
xlat
in
scas
in
jae
xchg
xorl
test
mov
shll
fs
repz
push
cmp
cltd
pop
jge
leave
inc
mov
mov
stos
lcall
lcall
adc
jno
movsb
mov
stos
outsb
lock
xchg
test
sbb
movsb
shrb
fsubrl
pop
stos
mov
ljmp
add
sub
fsubl
cli
mov
sub
test
xchg
adc
lea
cmp
ss
xchg
mov
psubd
adc
add
out
sbb
iret
in
jae
xchg
pop
flds
insl
add
xlat
xchg
xchg
jo
cmpsb
add
mov
outsl
adc
inc
adc
inc
aaa
jg
mov
movsl
xchg
cld
cmp
das
or
icebp
cmp
fistpll
lahf
and
imul
adc
pop
or
addr16
cmpsb
es
test
xchg
pop
sahf
pop
mov
ljmp
enter
insb
dec
shl
fldt
dec
in
ljmp
adc
shll
pushf
imul
cmp
repnz
ds
popf
mov
jmp
test
xchg
dec
out
in
sbb
adc
jno
push
push
mov
dec
xor
in
cmp
sbb
add
sub
add
adc
sub
movsb
arpl
test
in
in
addr16
les
loopne
nop
repnz
add
pusha
inc
aas
mov
or
insl
enter
call
lahf
mov
into
xchg
clc
aaa
stc
mov
repnz
lods
mov
adc
xlat
lea
and
mov
aad
das
pop
sub
stos
jp
sarb
xorb
cmp
hlt
mov
xor
sbb
pop
mov
mov
cli
rolb
subps
xor
xchg
or
out
sbb
shl
xchg
mov
lret
jl
add
add
stos
add
fildl
add
add
add
add
sti
add
add
xor
nop
add
cmpb
imul
add
lock
add
add
add
add
add
pop
add
and
add
adc
add
addb
add
and
mov
incl
push
mov
sub
mov
push
mov
push
movzbl
mov
sub
je
call
mov
incl
movzbl
jmp
cmpl
je
cmpl
je
call
mov
xor
call
mov
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
not
mov
or
mov
call
mov
pop
pop
leave
ret
push
mov
mov
mov
mov
mov
add
add
mov
push
mov
pushl
add
mov
mov
mov
call
mov
call
mov
mov
mov
movzbl
movzbl
sub
je
addl
xor
mov
push
push
push
push
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
ret
push
mov
push
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
movl
movl
mov
movl
call
push
push
mov
call
push
mov
call
pop
pop
ret
push
mov
sub
push
pushl
call
mov
pop
movl
push
andb
call
mov
mov
andb
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
movl
movl
movl
pushl
movl
call
pop
test
pop
jne
push
pop
jmp
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
push
push
push
pushl
call
call
push
pop
pop
ret
jae
jb
jo
add
call
add
push
pushl
call
push
push
push
push
push
call
push
imul
jb
je
arpl
add
add
dec
jo
gs
add
dec
add
add
and
add
add
add
add
roll
add
add
add
mov
add
add
insb
inc
sbb
add
add
add
add
add
add
add
and
cs
push
outsb
dec
jae
dec
jae
jb
inc
and
add
shl
fidivl
leave
push
js
mov
adc
push
cmp
test
add
divb
mov
add
push
clc
add
push
pop
or
cmpb
sub
push
push
lcall
push
icebp
adc
sarb
sub
add
push
incb
call
lea
jno
add
pushl
push
cmp
add
and
cld
dec
adc
mov
loopne
adc
lea
loopne
clc
dec
ror
or
push
clc
clc
inc
adc
add
push
add
add
add
imul
add
add
nop
inc
add
inc
add
mov
inc
inc
push
inc
lock
arpl
je
inc
sub
jns
dec
add
jl
gs
insb
dec
icebp
imul
jns
cli
inc
gs
push
add
popa
outsl
imul
add
add
add
add
adc
add
add
add
add
addl
add
add
add
add
add
add
jmp
movsl
push
fidivl
push
mov
addl
and
inc
mov
push
xchg
cmc
cmp
mov
sbb
jmp
mov
push
sbb
call
and
inc
arpl
imul
or
aaa
cmp
mov
insl
testb
xor
loopne
add
imul
pop
imul
loopne
pop
adc
inc
cli
stc
es
mov
sub
mov
ret
sub
ds
out
loope
fadds
and
arpl
pop
fldenv
or
fidivl
mov
mov
jle
es
or
add
sbb
xor
lret
xchg
out
das
mov
stos
mov
mov
push
sbb
mov
push
movsl
sbb
pop
mov
xor
add
jb
sahf
cltd
test
test
xor
jg
pop
gs
std
dec
inc
fnsave
ret
test
mov
push
mov
cmpsl
sbb
sbb
das
ret
or
leave
or
jo
mov
loopne
and
movsb
out
sub
je
das
fwait
sub
cli
inc
mov
hlt
mov
add
pusha
fsub
xorl
add
fldl
mov
inc
push
test
jne
mov
sub
inc
les
imul
aaa
xor
popa
pop
pop
xor
hlt
popa
lahf
add
and
cld
mov
lods
iret
and
mov
or
nop
mov
std
xchg
pop
mov
push
int3
xchg
mov
into
pop
jno
mov
push
mov
hlt
in
sub
lock
cmp
pop
ret
popf
push
xchg
dec
mov
scas
xor
dec
sbb
std
arpl
dec
push
mov
xchg
cli
stos
out
cli
push
xchg
jle
sbb
arpl
pop
inc
rep
out
pusha
in
mov
rcrl
cmp
push
mov
mov
adc
mov
jp
add
jb
sbb
mov
sub
int3
in
jb
movsb
int3
mov
sar
and
aam
pop
clc
repnz
stos
sub
mov
into
cli
movsl
mov
cmp
xlat
sub
imul
inc
mov
cmpsb
cmp
arpl
pop
std
xchg
imul
inc
adc
jg
sub
call
xchg
mov
pop
popa
movsb
rcrb
scas
push
gs
insb
xor
pop
dec
add
je
les
bound
inc
cs
stc
stos
loop
mov
aaa
pop
pop
mov
sub
leave
outsb
imul
imul
stc
cmp
or
add
pop
pusha
call
lret
fimuls
in
lcall
and
jmp
int
sub
push
push
xchg
fxch
out
xchg
xlat
add
mov
insb
mov
call
in
hlt
mov
cmpsl
sub
fists
int
and
leave
push
imul
imulb
lds
cmp
pop
sbb
js
sbb
pop
js
int3
fwait
jbe
lret
jnp
mov
jl
push
js
dec
fimull
adcb
addr16
fcmovu
push
xor
out
repnz
scas
imull
xchg
cmpsb
jno
xchg
fidivrs
and
call
stos
cli
xchg
dec
sbb
sbb
xchg
sbb
jno
xor
pushf
in
jecxz
and
int
insb
movsb
inc
sbb
jl
repnz
fiadds
pop
mov
les
adcl
sub
adc
push
pusha
dec
or
jbe
insl
fiadds
xor
lods
mov
mov
sarl
fbld
xchg
and
cmp
mov
out
inc
pop
orb
jmp
adc
or
fs
rcrb
lds
xor
inc
mov
sbb
xchg
cs
jecxz
xor
ret
xchg
add
icebp
dec
xor
xchg
cmp
inc
shll
or
jl
je
lock
sub
loopne
push
jg
imul
and
mov
xchg
ss
xor
scas
cmp
inc
loop
pushf
ficoms
or
fisubl
fimull
sub
pop
pop
xor
mov
mov
in
testb
push
push
pop
shlb
ss
sbb
ffreep
push
inc
js
inc
shll
push
int3
out
and
push
xlat
cmpsb
mov
mov
lret
leave
pop
ret
cwtl
inc
mov
imul
mov
sub
adc
dec
outsl
mov
aad
or
sbb
cld
pop
jb
sub
cmp
sub
pop
in
imul
mov
test
push
xor
push
add
loop
ja
mov
fsubrl
cli
jecxz
pushf
dec
mov
movsl
cmp
mov
xchg
cli
cli
clc
out
loop
dec
pop
cmp
fstpl
test
xor
rol
sub
sti
adc
or
cs
in
js
adcl
push
mov
iret
add
and
adc
push
movsl
std
lcall
mov
imul
xor
sbb
jb
pop
insl
lods
xor
repnz
inc
aaa
dec
popf
jns
pop
sub
imul
mov
pop
jb
cmp
sbb
imul
push
call
pop
cmc
dec
mov
sub
iret
push
add
cwtl
ret
mov
fwait
jmp
loope
fwait
imul
dec
fwait
dec
xor
dec
data16
insl
cli
das
inc
lret
pop
out
in
dec
jo
stos
push
adc
jg
std
xchg
lods
push
add
pop
sub
add
stos
int
jp
lods
adcl
jl
in
or
jb
inc
aaa
mov
push
or
rorb
outsb
jge
imulb
jno
mov
cli
mov
cmp
dec
sub
dec
mov
pop
push
push
sarb
or
push
xor
jbe
dec
mov
sub
xor
push
rcll
sub
sub
inc
out
mov
mov
mov
fdivrs
cmp
sub
add
pop
pop
jno
lock
mov
jne
xacquire
ss
xchg
lcall
mov
pop
inc
add
pop
dec
jne
or
fnsetpm(287
xchg
mov
cmp
mov
ds
and
push
jecxz
adc
cli
mov
fwait
aaa
jne
lcall
adcb
aam
xor
mov
repz
das
fildl
cmp
inc
lahf
pop
in
daa
pop
dec
pop
pop
popf
cs
dec
das
cmp
rorb
rolb
cltd
sarb
jne
cmovp
fs
popa
sbb
loope
out
or
arpl
gs
jae
cli
sbb
data16
dec
mov
xchg
sbb
imul
call
hlt
dec
mov
xchg
stc
xlat
data16
mov
lods
or
push
sbb
es
sub
dec
loope
fldt
adc
xor
pop
or
adc
hlt
jp
mov
jno
pushf
jg
cmpb
mov
sbb
je
jmp
scas
sahf
mov
mov
push
adc
xor
mov
jo
mov
jp
inc
stos
pop
cmpsl
lods
dec
dec
push
stos
in
stos
xor
hlt
leave
or
xchg
js
out
ds
and
sub
dec
dec
cs
mov
int3
cld
push
imul
dec
mov
es
xchg
iret
sahf
je
mov
shlb
cmp
loope
mov
call
cmpsl
adc
jb
sbb
and
dec
gs
mov
cli
push
adc
orl
mov
pop
and
and
inc
imul
out
scas
mov
shl
xchg
cs
pop
dec
jbe
cmpsl
dec
pextrw
adc
in
inc
rcrb
sbb
push
loop
jmp
lods
data16
xchg
inc
sub
rcll
dec
out
and
xchg
jno
pop
call
sbb
adc
mov
push
andb
jmp
mov
ffreep
aaa
repz
test
adc
mov
lods
aad
xor
scas
jecxz
cwtl
test
jae
sti
mov
shl
adc
movsb
add
xor
ret
lods
test
outsl
xor
movsl
xor
cmp
jne
out
out
shll
popf
add
dec
push
data16
lahf
out
cli
jp
push
sbb
adcl
pop
mov
insb
inc
rorl
dec
repnz
pushf
sbb
cmp
and
cwtl
or
pop
and
in
xchg
je
xor
test
adc
or
push
dec
adc
bound
addr16
mov
pop
fnstcw
ds
or
inc
pop
nop
jnp
cmp
push
cwtl
cmc
movb
fadd
sahf
loopne
pop
mov
add
dec
rorb
out
jmp
daa
out
stc
push
insb
test
lods
add
scas
jae
xchg
mov
hlt
outsb
sbb
aam
jnp
cmp
add
xchg
jmp
movsl
mov
enter
push
inc
hlt
hlt
rcl
cvtps2pd
imul
scas
pop
shlb
cmpsl
or
into
clc
jecxz
mov
movsl
xchg
andb
xor
mov
shrb
shr
xchg
and
outsb
int3
outsb
xchg
out
cmp
sub
hlt
mov
dec
lcall
add
and
stos
lea
pop
lcall
adc
cmp
sbb
xor
loope
stos
insb
pop
add
push
xor
daa
adc
stos
jl
add
sub
call
jg
jbe
iret
mov
jne
cmp
loope
addr16
inc
mov
out
pop
fs
daa
loope
push
test
out
sbb
adc
mov
inc
mov
push
call
or
sbb
dec
dec
add
lret
cli
pop
filds
mov
xchg
mov
out
test
or
sbb
pop
loopne
ret
mov
fwait
push
aas
sbb
loopne
scas
fcmovnu
rolb
xor
inc
shrl
js
mov
push
std
add
stos
aaa
inc
dec
les
pusha
fdivrl
ja
inc
inc
xchg
fwait
test
xchg
xor
push
repz
scas
add
pop
pop
xchg
pop
and
movsl
add
rorb
popf
sarb
dec
js
idivb
rol
xchg
push
aad
ficoms
dec
rcr
sbb
sbb
femms
mov
inc
adc
jecxz
imul
push
pusha
xchg
push
sahf
fildll
les
mov
test
ja
add
inc
imul
fwait
mov
xchg
js
pusha
xchg
pop
push
aam
dec
pop
xchg
loope
sub
and
xor
call
cli
jo
xor
inc
imul
add
leave
divl
je
hlt
add
shlb
adc
lods
cmp
adc
aas
lret
repnz
cmc
mov
outsb
das
call
push
sarl
rol
out
pop
ss
pop
push
xchg
pop
xor
xor
adc
lods
jmp
stos
xchg
adc
mov
mov
cmp
add
scas
mov
sti
jl
ret
add
dec
pop
mov
push
jg
adc
pop
ljmp
pop
and
or
test
pop
ja
call
xlat
push
loope
movsb
shll
test
les
call
arpl
fwait
mov
mov
add
xchg
jecxz
popf
mov
sub
inc
cs
mov
jns
mov
xchg
cli
cs
sbb
test
mov
arpl
push
aaa
xchg
mov
mov
stos
push
outsl
dec
push
or
push
xchg
lahf
loope
lock
insl
mov
scas
leave
push
dec
push
xlat
sub
icebp
clc
sbb
lods
gs
out
fsubp
fcmovnb
fisttpll
insb
nop
insl
sti
cld
int
aaa
mov
into
jo
dec
cmpsl
shrl
in
and
add
scas
or
or
fcoms
adc
or
popl
adc
in
push
mov
nop
mov
add
add
aaa
sbb
xchg
ds
sbb
outsl
dec
push
sub
mov
sub
add
mov
je
mov
cmpsb
sbb
fnstenv
das
popa
rcl
mov
lret
dec
or
jmp
pop
mov
fcomps
xor
mov
pop
fsubrl
mov
inc
xchg
cmp
pusha
xor
nop
xor
push
rep
jno
mov
es
sub
mov
out
mulb
pop
icebp
mov
ret
xchg
pop
popa
adc
fimuls
lds
xlat
adc
adc
mov
test
shlb
pop
sbb
stos
adc
jp
sbb
mov
ljmp
push
cmp
xor
negb
incl
test
stos
shrl
movsl
pop
lods
mov
mov
fsubl
dec
addr16
and
push
pop
adc
push
or
stos
inc
mov
jo
mov
aam
adc
xchg
test
iret
and
push
and
scas
pop
imul
jp
mov
lret
decb
sub
xlat
inc
test
scas
jecxz
imul
iret
stc
mov
stos
cs
xchg
xor
dec
pop
sbb
hlt
insl
push
jnp
cbtw
mov
push
popl
dec
jne
push
lret
test
gs
xchg
sbb
add
cmc
loop
stc
mov
cltd
or
gs
out
mov
jb
out
fstp
sub
pop
pop
sub
xor
jl
jecxz
sti
clc
adc
fisubrs
add
lea
push
adc
repz
lods
mov
divl
pop
roll
sub
lahf
imul
and
or
lds
pusha
jge
mov
jns
cmpl
jge
aaa
mov
lods
aam
jno
adc
cmpsl
adc
jecxz
pop
xor
cmp
out
fs
iret
mov
ss
ret
dec
std
mov
or
add
push
in
xor
and
xchg
jmp
test
pop
mov
rorl
add
xor
lret
jb
cmp
cmp
jae
or
adc
xor
pop
mov
mov
leave
xchg
insb
dec
fmull
aas
xor
mov
stos
jl
lcall
xor
xchg
push
pop
jmp
push
out
jp
in
sbb
clc
adc
enter
mov
stc
and
mov
dec
lds
lret
lock
and
cwtl
xor
jg
ds
inc
sbb
data16
adc
mov
mov
pop
lods
test
mov
sbb
and
fmull
and
dec
insl
loope
aas
ja
cli
xchg
or
dec
ja
rorb
loop
cmpl
mov
aaa
jecxz,pn
pop
ss
mov
pop
cmp
out
jge
or
xor
inc
push
adc
pop
xchg
mov
rol
sub
std
shlb
ja
sbb
pop
mov
aam
pop
jno
nop
and
or
imul
scas
mov
into
mov
or
shll
addr16
jae
aaa
cld
adc
jl
out
fisttps
push
leave
mov
dec
xor
icebp
int
or
push
or
adc
mov
or
cmp
insl
mov
adc
mov
cmp
add
imul
inc
mov
or
pop
mov
mov
insb
mov
jns
leave
push
sbb
daa
std
notb
inc
mov
out
jmp
mov
fs
mov
xor
inc
cmp
jo
cmp
and
cmp
dec
sub
outsb
enter
outsl
inc
mov
adc
cmpsl
leave
scas
test
or
add
call
ds
shrb
cmp
inc
idivb
xchg
pop
ret
adc
push
add
jbe
push
sub
mov
mov
push
add
pop
xlat
xor
add
xchg
sbb
inc
xchg
push
cli
sub
mov
loope
xor
or
jae
and
je
bswap
xchg
icebp
clc
repz
insb
cmp
add
or
pop
outsb
int3
dec
mov
aad
mov
inc
xor
cltd
sarb
push
cmpsb
pop
push
test
cwtl
xor
xchg
movsl
pop
cwtl
aad
ret
imul
xlat
in
or
pop
adc
test
adc
aaa
test
insb
stos
movsl
mov
jo
pop
mov
fmull
xlat
aaa
mov
int3
inc
jmp
ret
in
outsl
mov
push
mov
std
sub
fucomp
mov
sahf
pop
movsl
dec
data16
mov
sub
mov
xor
shll
nop
mov
jno
mov
cmpsl
ficompl
std
bound
add
xchg
sbb
mov
dec
mov
test
cltd
mov
jg
imul
mov
adc
popf
mov
adc
mov
adc
cmpsb
cli
arpl
jecxz
lds
mov
aad
fcmovnbe
add
test
pmulhuw
daa
scas
mov
outsb
dec
or
cld
lds
adc
mov
pop
add
mov
cmp
in
xor
xchg
sub
jmp
cmpsb
xor
jle
dec
mov
movsl
mov
test
pop
fstpl
push
or
btcl
or
test
popa
pop
pusha
sbb
int3
inc
lods
fstl
loop
mov
lcall
rclb
mov
dec
mov
dec
hlt
icebp
push
add
sub
popa
iret
and
dec
xor
inc
and
int3
mov
in
mov
minps
inc
or
aaa
sub
xchg
je
add
push
out
push
mov
mov
leave
data16
mov
leave
sbb
adc
pop
mov
push
stc
add
push
loop
repnz
int3
xchg
mov
lret
mov
fcoml
test
out
push
out
enter
fstpt
mov
and
rorb
dec
shr
xor
xchg
mov
fmull
xchg
ret
nop
lds
in
repz
sbb
mov
jae
mov
mov
repnz
add
rorl
imul
cmp
inc
sbb
mov
pop
jnp
inc
aaa
pop
mov
sti
stos
repz
and
fnstcw
cltd
jp
mov
sarl
xchg
mov
pusha
dec
lock
cli
sbb
add
add
add
add
test
add
add
popa
cmp
add
add
add
add
leave
addl
add
add
add
add
add
add
jmp
add
add
mov
add
add
jns
add
stos
stos
add
ja
mov
incl
dec
add
xchg
push
mov
push
insl
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
push
add
push
add
add
add
sub
clc
movl
jo
add
push
pop
fs
jae
inc
mov
je
fs
mov
inc
roll
jecxz
sbb
jb
add
fadds
xor
or
push
inc
cmp
ljmp
or
or
jmp
test
repz
adc
subb
mov
sar
incl
lea
sbb
add
push
adc
add
adc
add
xor
adc
decl
jmp
popf
pop
cld
call
sar
add
push
shlb
in
cld
add
repz
add
test
daa
jne
lret
clc
add
clc
adc
adc
add
incl
hlt
inc
adc
add
add
insb
xchg
add
add
add
add
push
add
fs
jb
jbe
inc
inc
outsb
inc
outsb
outsl
jne
adc
jo
insb
inc
imul
outsb
jns
aad
gs
mov
add
push
imul
cmp
insb
gs
insb
insb
jae
outsl
jne
inc
outsb
jb
xor
inc
je
insb
add
add
add
add
add
add
bound
add
add
add
les
dec
xor
gs
nop
aad
xor
lret
in
push
sub
cmp
dec
scas
dec
mov
icebp
sti
jge
jno
scas
bound
jg
std
mov
enter
fisttpl
mov
leave
xor
in
sub
or
shrb
movsb
dec
sarb
and
mov
jle
shl
push
je
les
stos
sbb
pop
sahf
xor
das
fldcw
arpl
int
test
in
les
in
pop
data16
cwtl
mov
nop
insb
xchg
dec
xor
daa
ret
inc
or
jne
push
je
sbb
lret
sbb
mov
cltd
jmp
pop
ds
adc
mov
test
and
shlb
pop
jno
push
ja
lock
or
and
insb
cmpsb
mov
sbb
mov
pop
cmc
sbb
mov
in
scas
sub
xchg
mov
pop
push
fs
jge
dec
xchg
add
mov
inc
mov
out
xchg
mov
dec
xchg
mov
fcompl
loope
out
fldl
mov
sub
insl
cs
mov
lret
and
xchg
rorl
cmpsl
pop
inc
lahf
or
jb
add
mov
leave
push
mov
sbb
pusha
int3
adc
xlat
sti
test
arpl
mov
jns
mov
cmp
icebp
dec
and
add
xor
std
out
cmp
enter
xchg
jecxz
jmp
push
jne
cmp
cwtl
mov
and
mov
test
faddl
or
or
jns
dec
les
rcrb
testl
sbb
mull
add
push
std
adc
adc
sbb
pushf
pop
ljmp
jle
cs
sub
rcl
inc
lds
loope
cmp
xchg
les
data16
xor
ffreep
adc
sub
mov
loope
mov
push
cli
std
pop
jb
jl
js
stos
sub
pop
xchg
enter
mov
xchg
inc
add
pop
sub
sbb
or
fsub
lret
mov
adc
pop
jg
insb
adc
call
pushf
shlb
jle
cmovae
setae
cmp
dec
mov
stos
arpl
cmpsb
idivl
popa
cld
rcr
dec
movsl
sbb
dec
test
pop
scas
rclb
movsl
mov
lahf
loop
aaa
icebp
popa
pushl
add
scas
jns
sub
pop
push
or
bound
or
push
xor
lret
leave
lret
divb
aas
add
mov
movsb
sub
iret
std
ds
dec
xor
lds
rcl
in
jmp
xchg
shrl
out
jge
xchg
push
int
imul
fwait
loop
icebp
fsubp
jb
das
loop
cmp
int
cld
test
icebp
push
mov
pushf
insb
flds
pop
xor
xchg
sub
xchg
out
es
stc
lock
xchg
jg
xchg
icebp
cmp
icebp
cmp
subb
lret
push
jecxz
sahf
mull
and
sbb
js
stc
mov
stc
xchg
lods
std
icebp
pop
jle
inc
ret
dec
mov
jns
movsb
sbb
icebp
outsl
test
jecxz
and
xor
cli
and
mov
jp
jae
loop
jg
cmp
add
adc
je
mov
adc
lock
lahf
mov
mov
mov
push
mov
pusha
jne
jmp
aas
mov
jmp
and
pushf
xorb
inc
scas
cmpb
mov
faddp
push
mov
out
mov
rolb
sahf
jne
mov
ror
jecxz
dec
fisubrl
loop
jne
ljmp
inc
daa
mov
cmp
test
cmp
mov
pop
subb
cs
out
or
sub
in
jae
in
ljmp
idivl
mov
test
inc
nop
enter
adc
addr16
lea
test
shll
popa
js,pt
mov
cmpsl
scas
lahf
nop
jbe
shlb
xor
xchg
stos
mov
addr16
in
fs
cld
fsubs
shlb
xor
fldt
lods
pop
cmpsl
js
imul
in
fidivl
and
test
or
add
mov
test
cltd
xchg
pusha
adc
mov
sbbb
or
and
mov
fldcw
jge
mov
loopne
pop
ss
repz
cli
mov
push
push
xlat
cmp
dec
push
xchg
push
cltd
sub
gs
paddsb
sub
cmp
pop
stos
inc
xchg
push
enter
addr16
dec
cmpsb
outsl
shll
add
in
push
and
lahf
in
dec
push
cmp
loope
adc
sbb
mov
mov
push
mov
cli
test
add
pop
and
pop
scas
pop
jbe
fwait
shll
cmpsl
mov
sub
pop
repz
pop
dec
mov
imul
sub
lret
and
dec
mov
into
sub
sub
lret
mull
pop
into
int3
js
cwtl
pop
clc
or
fstpl
sbb
rorl
stos
mov
mov
ret
mov
fwait
cmp
mov
call
and
or
out
inc
fnstsw
enter
shl
mov
pop
pop
enter
popa
outsl
adc
inc
loope
rcrb
adc
insl
sti
pop
lea
lahf
adc
ss
dec
lahf
in
les
push
int3
sbb
lahf
ret
adc
pop
mov
ss
scas
dec
cltd
push
es
neg
mov
loopne
pushf
mov
movsb
clc
jae
movsb
punpckhdq
dec
iret
insb
mov
or
jge
or
or
sub
rcll
mov
decb
cmpsl
loop
insl
xor
dec
and
pop
sub
push
mov
jmp
filds
into
aad
mov
stos
rorb
rolb
sti
aam
jmp
adc
fwait
mov
aam
pop
xor
and
test
std
mov
adc
inc
cmc
mov
push
mov
jae
xor
or
mov
pop
adc
stos
bound
lret
test
stc
xor
clc
xor
test
ds
fnsave
push
xchg
mov
adc
cmp
data16
cmp
adc
iret
pop
std
dec
mov
pop
xchg
sbb
mov
out
cltd
out
aad
jbe
mov
loop
fs
jne
push
into
test
lods
cmp
lcall
enter
out
sbb
fwait
mov
push
and
bound
and
push
inc
push
cmpb
inc
or
es
scas
sub
or
dec
repz
jbe
data16
aad
jnp
sub
outsb
mov
adc
xchg
xor
sbb
cmpsb
add
mov
rcll
adc
das
leave
push
add
mov
mov
inc
lcall
addb
jmp
jecxz
add
test
cmp
adc
jb
mov
cmp
fs
dec
icebp
push
push
jae
int3
sbb
fldt
faddl
jecxz
ljmp
sahf
push
sbb
pushf
xchg
pop
aad
sub
ss
scas
mov
sbb
mov
dec
cli
mov
cmp
cmp
iret
pop
push
jns
xchg
dec
push
add
mov
nop
in
lds
and
inc
subb
pop
out
inc
cmpsb
fdivs
in
cli
inc
push
out
sbbl
xchg
fimull
pop
sbb
jo
and
inc
push
fs
jb
movsl
ja
and
lods
jnp
jmp
ds
in
std
cmc
xor
jno
mov
mov
outsl
test
popf
imul
add
dec
push
mov
leave
xor
aaa
xor
and
xchg
pop
jo
and
push
mov
dec
ss
popf
xchg
cli
and
dec
pop
jecxz
nop
mov
mov
jne
add
nop
inc
xor
mov
bnd
cmp
loop
js
aas
addr16
sub
jmp
adc
push
push
push
adc
mov
outsb
stos
or
fldcw
jmp
pop
insl
push
repz
vpunpckhbw
jne
xchg
loopne
cmp
add
popf
clc
cmp
push
addb
add
pusha
cwtl
xor
adc
hlt
mov
lods
stos
cmp
or
xlat
and
loopne
test
rorb
pop
cmp
out
insb
push
or
adc
jmp
mov
mov
xchg
adc
sbb
imul
insb
inc
imul
es
fistpl
mov
add
sarb
push
int
mov
data16
pop
repnz
fstl
push
sbb
shl
inc
mov
xor
fnsave
cmovo
cmpsb
mov
adcb
mov
push
add
xchg
mov
mov
jno
push
xor
dec
jle
loop
and
dec
jg
clc
lcall
pop
adc
imul
icebp
and
inc
rorl
cmc
push
xchg
jg
std
push
ljmp
test
out
daa
adc
xor
dec
inc
pop
out
dec
dec
mov
xorb
int
and
sbb
mov
sub
pop
cmp
inc
add
push
and
rcrb
inc
addl
fiadds
out
aam
mov
cltd
cmp
add
mov
pop
aam
xchg
outsl
leave
add
in
dec
fwait
pop
xchg
dec
sub
xlat
sahf
lods
xchg
and
stc
leave
rol
les
add
movsl
stc
jg
inc
hlt
sub
shll
scas
dec
sbb
out
pop
nop
ss
jmp
add
jecxz
and
xor
sbb
cmp
jg
push
sbb
xchg
lcall
xchg
test
dec
push
scas
mov
aas
xor
fmull
or
push
jg
jle
arpl
stos
cmp
pop
fisttpll
xchg
inc
movsb
cli
sbb
push
ret
fsts
imul
stos
xor
mov
insb
dec
insl
xchg
outsl
xor
hlt
fists
loop
fldcw
lcall
insb
dec
or
iret
xor
popa
mov
adc
lcall
sbb
xor
sub
jne
testl
dec
js
jecxz
gs
mov
movsl
gs
cmp
xor
pusha
xor
fistps
icebp
mov
ja
sub
jp
mov
sbb
mov
push
push
adc
jne
fcomip
js,pn
sbb
sti
jb
lods
leave
jmp
shrl
xor
lods
icebp
cmp
test
paddb
and
out
sub
ret
xchg
xor
mov
lret
stos
subb
loope
rorb
xor
or
push
push
mov
mov
in
scas
xchg
daa
cli
xor
aaa
les
add
sbb
sub
cmp
inc
je
push
lret
loope
push
xchg
outsb
xor
popa
jno
loope
imul
fcmovb
sub
adc
jge
test
inc
sub
push
or
xchg
jge
repnz
lret
sub
xchg
sub
fisttpll
xchg
xchg
imul
lea
and
mov
pop
mov
jl
test
pop
data16
add
fisubrs
daa
popf
fsubrs
testl
sbb
inc
nop
pushf
sub
negb
pop
jecxz
dec
fstl
cmc
aaa
aad
xchg
data16
in
fmul
sbb
sub
ljmp
pop
lea
mov
add
jnp
inc
iret
pop
dec
lret
jg
xchg
sbb
jb
mov
ret
push
test
cs
imul
mov
pusha
mov
fistps
out
std
popf
sub
mov
lock
cld
rolb
pop
mov
int
lds
cmp
pushl
stos
pop
dec
mov
out
xchg
lret
push
insl
rorb
cmpsl
rcl
inc
sbb
mov
xchg
push
sbbb
jno
hlt
incl
mov
lcall
jl
iret
imul
xor
add
pop
xor
insl
les
cld
scas
pushf
cmp
cmp
jae
mov
inc
sbb
xchg
cld
leave
icebp
test
add
stc
push
lahf
pusha
pop
push
or
lods
mov
lcall
inc
leave
inc
lock
mov
dec
lret
jns
stc
cmp
jns
and
xchg
jge
es
adc
cmpsl
add
sbb
lds
ret
xor
mov
pop
inc
adcl
cli
mulb
ret
sbb
push
and
ror
repz
pop
xchg
push
out
pop
lods
or
cmpsl
shrb
or
lcall
std
jge
faddl
pop
imulb
vmread
xchg
fwait
xor
je
jo
jno
jo
frstor
xchg
mov
out
int
and
rcrb
je
dec
mov
cld
rorb
aas
mov
aad
sub
aaa
and
push
mov
cmpsl
divb
lret
push
repnz
roll
negl
dec
int3
mov
aad
clc
and
fwait
shll
sarb
gs
add
std
mov
push
test
js
pop
xchg
dec
mov
or
lret
sub
adc
lret
roll
sub
jae
jnp
pop
mov
loop
stc
jg
inc
es
rorb
movsb
pop
out
push
inc
jecxz
test
mov
nop
and
nop
loopne
mov
cmp
sbb
jne
lea
inc
adc
fisubrs
jle
and
add
sub
mov
int3
inc
xor
andl
rcll
or
shl
lds
sahf
mov
lret
cmp
rorl
mov
sub
push
into
test
sbb
les
xchg
pusha
aad
pop
sub
mov
pop
stos
mov
cltd
jns
test
push
fildll
and
push
rorb
jbe
and
cwtl
arpl
add
hlt
xor
or
pop
aad
js
sub
jg
cltd
xchg
insb
sbb
cmp
and
jae
pusha
push
int3
mov
jne
std
push
mov
cs
lock
scas
or
roll
mov
addl
loope
lret
pop
je
push
pop
mov
or
ja
or
dec
add
push
les
lea
imul
out
mov
mov
mov
inc
and
sub
xor
and
sahf
mov
adc
pop
repnz
je
cmp
pop
out
mov
mov
punpcklwd
cmc
sti
jb
push
xor
repz
js
inc
mov
mov
insl
xchg
js
js
xchg
adc
mov
orl
cmpsl
orl
jmp
sbb
lret
mov
dec
or
add
bound
arpl
jb
ds
cmp
inc
in
jl
xor
mov
fs
sub
mov
testb
sub
mov
jbe
mov
aam
lds
stos
add
fisttpll
ror
int
fsubrl
test
dec
lods
cmp
adc
jo
push
sahf
pop
mov
fadd
push
mov
int3
xchg
test
aam
pop
adc
call
inc
dec
and
mov
inc
or
cmpl
das
xchg
ret
adc
sbb
xchg
sahf
ret
mov
add
push
jg
enter
movsb
xchg
sbb
inc
jnp
xchg
inc
imul
sbb
imul
addr16
lds
ljmp
push
insl
lcall
inc
jl
stos
enter
add
mov
push
iret
pop
and
mov
dec
xor
adc
pop
pushf
jo
jo
dec
pop
arpl
jle
xchg
hlt
mov
lock
das
sbb
popa
push
jmp
hlt
in
leave
jp
fldcw
leavew
jno
push
adc
rcl
ret
xchg
repz
add
dec
dec
bound
push
dec
xchg
test
mov
pop
xlat
in
mov
pop
add
jl
in
ret
std
adc
outsb
sbb
cmp
xor
cmpb
ljmp
pop
jne
lret
dec
adc
cmp
cmp
mov
sub
fsub
out
int3
sarl
or
push
and
out
std
fsubrs
jecxz
repz
jno
mov
adc
bswap
in
sahf
mov
sub
push
jno
scas
mov
sub
mov
lret
mov
inc
addr16
add
aaa
sbbl
movsb
adc
out
rcll
sti
enter
adc
stc
mov
mov
mov
mov
add
pop
push
jno
sahf
dec
sub
cmp
out
ss
sti
xor
jne
xlat
pop
add
test
xor
inc
inc
addr16
addr16
inc
sbbb
int
jge
cmp
mov
sets
adc
sub
out
icebp
repz
frstor
fistps
jmp
or
in
lcall
aad
mov
call
jo
imulb
xor
cmp
cmp
cmp
pusha
and
and
sbb
xor
jg
mov
divb
mov
or
stc
mov
xchg
add
dec
xchg
mov
ja
ret
nop
pop
test
sarb
mov
cmp
cmpsl
or
andb
xor
cmp
pop
loop
pushf
lods
popf
sti
xlat
cmpsl
mov
outsl
popa
xchg
adc
clc
dec
gs
nopl
fsubs
mov
mov
sbb
fcoml
js
mov
jmp
mov
xchg
imul
pop
sbb
fmulp
shl
out
sbb
xor
icebp
loopne
outsl
bound
fidivl
push
je
adc
scas
decl
sub
sub
add
push
mov
lods
sub
cmc
jne
pop
sbb
shr
or
lods
cmp
pop
pop
int3
repz
sahf
adc
sahf
cltd
mov
mov
in
cmc
mov
outsb
hlt
push
mov
je
lock
ds
add
mov
faddp
daa
jb
add
divb
aaa
addb
fsubrs
xor
adc
add
jne
es
pop
test
mov
idivl
dec
out
sbb
xlat
xchg
iret
addl
add
add
add
add
add
and
add
add
add
add
add
add
xchg
add
repz
add
add
add
add
or
add
add
jnp
add
xor
sbb
sub
mov
sub
notl
adc
cmp
ljmp
ja
mov
add
add
add
dec
fs
add
or
adc
add
add
add
adc
add
xchg
add
add
add
inc
add
add
and
add
arpl
mov
add
rolb
add
sbb
sbb
sbb
jecxz
cmp
jne
and
inc
imul
add
imul
fsincos
sahf
xor
orl
xchg
js
cld
mov
pop
lea
mov
add
jne
jne
call
std
test
push
sub
clc
sub
pop
popa
fs
mov
mov
add
incl
cmp
add
push
add
and
loopne
add
adc
incl
aam
jmp
push
push
call
mov
push
cmp
loope
call
cld
add
add
jne
push
inc
jo
push
cmp
lea
verr
mov
test
pusha
cmp
and
incl
adc
adc
adc
mov
adc
add
add
add
add
add
mov
sbb
sbb
sbb
sbb
sbb
pop
add
xor
inc
add
add
outsb
inc
insb
gs
sub
jl
push
outsl
je
dec
push
insl
add
js
add
add
add
push
jns
popa
sbb
dec
jb
outsl
push
insb
pop
gs
cs
jne
mov
add
nop
add
hlt
add
and
add
add
adc
lahf
lcall
repnz
sub
fsts
scas
lahf
hlt
nop
mov
mov
es
data16
adc
std
cmp
and
test
sub
fsubrs
mov
add
sbb
rcrb
cwtl
add
xor
mov
rcr
sub
test
adc
stos
sbb
jmp
js
shrl
or
pop
xor
add
push
ja
das
imul
nop
xchg
loop
mov
mov
jne
movsl
movsb
and
adc
lahf
pop
adc
cli
and
bound
ja
add
ficoml
jns
add
les
orl
mov
add
push
or
pushf
scas
dec
xor
rorb
lea
outsb
pop
lock
mov
imul
xor
xchg
les
movsb
in
inc
mov
cld
in
insl
inc
fsubs
mov
inc
leave
push
sub
jecxz
inc
cmp
adc
and
push
mov
mov
sub
into
rcll
test
orb
nop
xchg
loopne
xlat
mov
leave
sbb
xchg
loope
mov
in
aas
dec
ret
adc
add
cli
pop
add
sbb
lahf
mov
iret
mov
fidivrl
std
mov
mov
lods
nop
inc
adc
xchg
mov
movsb
cld
or
lcall
pop
arpl
int3
mov
cld
out
out
les
iret
out
mov
sub
pop
and
inc
push
jae
pop
xchg
scas
test
mov
sbb
repz
xor
lahf
sbb
fstpt
fsubr
pushf
jg
iret
inc
jno
cmc
cli
mov
cmp
das
nop
xchg
imulb
shl
arpl
faddl
out
iret
fildl
push
cmp
in
lret
xor
dec
or
adc
cmpsl
or
int3
mov
and
repz
loope
adc
adc
insb
add
inc
inc
lahf
or
cmpsl
push
cmpsb
out
imul
mov
or
dec
mov
movsb
jno
es
push
inc
imul
cs
adc
xor
add
lcall
aam
leave
arpl
add
loop
leave
sbb
shlb
ret
ja
loop
mov
fdivl
sub
sbb
sbb
rol
jne
lret
fisubrs
sbb
pop
jge
push
les
cmc
fdivrp
mov
and
and
push
pop
ds
outsl
cmp
cmpsb
jg
aad
daa
std
mov
xorb
pop
call
into
and
cmp
add
imul
cmp
mov
xor
jns
enter
sbb
andl
pusha
outsb
or
clc
data16
mov
shl
lods
pop
or
test
dec
adc
xlat
and
mov
cmpsl
push
ret
mov
mov
daa
push
loopne
pop
pop
in
push
lcall
pop
orl
xchg
and
outsb
aaa
ds
outsb
imul
mov
xchg
sbb
pop
enter
cltd
leave
add
push
addr16
dec
pop
add
xor
adc
adc
fcoml
dec
xrelease
sub
fxch
sub
cmp
mov
jne
shll
and
adc
inc
inc
mov
mov
loope
lock
in
ljmp
shl
mov
xor
jnp
xor
inc
pop
stos
aam
idivl
push
inc
adc
push
and
jne
test
xchg
pop
cltd
adc
mov
cmpsb
fidivrl
push
inc
sub
loop
fwait
movsl
cmc
cmc
je
mov
in
ja
sub
cmp
fistpll
adc
xor
sahf
fwait
rorb
push
loop
movsb
movsb
push
cli
sub
xchg
hlt
adc
fildl
loope
scas
mov
imul
jecxz
adc
idivb
rorb
mov
lock
fildll
arpl
pop
imul
pop
xor
aas
or
cltd
sub
mov
testb
add
fcmove
push
jnp
hlt
and
lock
into
lock
cmp
lock
js
sarl
imul
jl
ret
mov
out
mov
jae
sahf
pusha
stos
add
js
or
adc
stc
gs
lahf
les
enter
fistpll
imul
mov
jb
icebp
jae
and
push
call
mov
pusha
adc
popf
repnz
enter
out
test
jns
hlt
sbb
mov
jnp
jbe
mov
pop
jbe
jns
pop
ss
inc
sahf
and
je
std
lcall
arpl
lods
sub
push
aad
repz
jb
pop
popf
pop
sub
ljmp
dec
or
cmp
jne
fstpl
cmc
dec
movsl
mov
jns
mov
outsl
mov
insb
sub
xor
mov
fs
ret
xchg
push
divb
shrb
pop
jle
out
inc
dec
mov
add
cwtl
inc
inc
push
sbb
add
loopne
fisubrs
scas
jl
xor
jmp
test
leave
sahf
sub
stos
enter
xlat
mov
loop
push
xchg
lahf
mov
cmp
xor
or
add
in
fadds
dec
inc
mov
movsl
mov
mov
dec
hlt
inc
cmpsb
movsb
clc
repz
inc
outsl
mov
nop
or
movsb
divl
and
or
outsl
add
adc
scas
popf
leave
nop
rclb
in
xor
push
mov
add
mov
mov
out
scas
test
js
addr16
dec
adc
push
mov
test
add
jnp
jecxz
push
lret
aaa
mov
sbb
mov
sbb
push
in
test
xor
outsb
inc
test
inc
jp
hlt
mov
movsl
clc
mov
rcrb
mov
xor
xchg
test
push
xlat
ss
lret
lds
dec
pop
jmp
ret
aad
jo
lods
into
scas
adc
jp
subl
cmp
mov
push
dec
sbb
pop
test
pop
out
scas
pop
mov
or
cmp
push
fcoml
dec
push
in
xchg
pop
mov
jno
mov
roll
inc
xor
and
pop
nop
jl
mov
lods
mov
sub
dec
movsl
jecxz
clc
mov
mov
int3
mov
xor
repnz
scas
loop
sbb
mov
out
lret
mov
jo
fstl
mov
push
addr16
jge
nop
push
jno
mov
sbb
sub
loope
popf
sahf
push
and
test
dec
lahf
dec
movsl
insb
xor
lock
aas
arpl
dec
in
repz
outsl
push
test
and
mov
into
mov
fcomip
mov
xchg
cmp
and
and
pop
shlb
or
scas
sbb
xchg
cmp
xor
jl
stc
cmp
pushf
push
sbb
fwait
pop
inc
jp
lret
sbb
inc
mov
loope
xor
mov
push
int
sbb
push
test
jg
scas
mov
clc
stos
mov
fucomip
mov
adc
and
je
dec
pop
adc
pop
adc
mov
add
fs
fmuls
sahf
loop
lret
imul
pop
fsts
test
or
sub
mov
add
pop
aas
and
lret
push
push
mov
mov
js
fcoms
mov
adc
addr16
adc
out
ss
or
ljmp
mov
and
out
and
lea
mov
orl
rorl
insb
pop
mov
add
or
popf
push
lock
mov
mov
mov
mov
cmp
popf
push
sarb
add
adc
mov
mov
sub
cmp
push
mov
clc
jmp
lret
inc
in
lds
inc
or
push
fists
sti
movsb
fs
into
stos
lods
xor
mov
push
adc
push
jp
sbb
mov
stos
cmp
je
aad
xor
fdivl
adc
stc
push
sub
push
movsl
xchg
sarl
fnsave
mov
xlat
andl
xor
mov
push
jns
sti
je
pop
and
mov
lock
popf
stc
sub
mov
addr16
pusha
call
out
add
cld
inc
cmp
mov
xor
ss
push
push
pusha
mov
inc
icebp
sti
test
mov
pop
and
mov
sarb
dec
adc
mov
sar
adc
and
pop
mov
xchg
in
or
push
sbb
add
test
mov
faddl
mov
in
xchg
lds
repnz
dec
popa
shrl
arpl
xchg
sbb
movswl
repz
dec
cmc
ss
pop
push
lret
lret
pop
daa
in
int
mov
xchg
lcall
lahf
add
aaa
outsl
jns
dec
iret
jno
aas
call
shrl
ficompl
int3
imul
pop
inc
mov
inc
fsubr
mov
insb
ja
cmp
lea
leave
add
sti
pop
shl
inc
lods
cmp
xor
and
cli
pop
int
sbb
inc
sahf
jle
mov
sahf
loope
leave
pop
mov
push
sbb
scas
fimuls
fmul
pop
sub
scas
cmove
xor
mov
push
sbb
push
mov
mov
lret
mov
push
les
pop
or
pusha
xor
xchg
pushf
loope
jnp
xchg
or
add
sbb
mov
in
test
into
pop
andb
pop
cmp
cli
imul
mov
mov
inc
adc
loopne
aas
mov
xchg
scas
pop
and
dec
cmp
sar
cs
test
add
lea
aam
jp
addr16
xchg
and
fadd
adc
test
cs
dec
int3
in
jl
push
push
lea
inc
int3
testl
fs
mov
pushf
popa
mov
adc
and
jae
xchg
outsb
jb
scas
mov
xchg
insl
xor
dec
xchg
es
mull
dec
mov
insl
out
dec
xchg
lock
pop
fcoms
and
push
jno
inc
pushf
shrl
inc
adcb
or
pop
xor
imul
outsl
push
mov
cmovo
rcrb
pop
enter
xor
dec
pop
push
adc
fistl
int
outsl
je
mov
mov
and
sbb
or
jle
loop
leave
mov
popl
jae
cmp
out
fwait
lcall
mov
bound
pop
shlb
jecxz
or
dec
inc
data16
nop
lds
fwait
and
or
jp
add
and
cmpsb
jnp
xor
inc
jg
rol
imul
lahf
mov
daa
mov
cli
dec
outsl
test
xor
xor
xlat
adc
aad
pop
mov
addb
lock
xor
mov
sbb
inc
popf
test
jle
mov
inc
scas
loopne
mov
cmp
inc
fnsave
icebp
fwait
testb
test
int3
inc
cmp
out
mov
iret
cltd
lea
pop
fimuls
jae
fistpll
push
mov
pop
cwtl
dec
mov
in
sbb
jmp
xchg
insb
xchg
call
out
sarl
movsb
xlat
push
sti
inc
dec
jl
das
dec
je
jo
outsl
je,pt
mov
roll
mov
mov
stos
sbb
jmp
mov
out
dec
testl
jno
sti
fwait
sub
add
outsb
jb
inc
cli
pop
mov
in
pop
push
adc
sub
lea
dec
test
nop
pushf
xor
or
shl
mov
jae
lods
pusha
test
jge
adc
mov
stos
test
ror
dec
push
mov
jb
or
dec
fcoml
popf
ljmp
xchg
xor
adc
shll
je
jnp
mov
mov
push
lods
pop
push
das
outsb
lahf
mov
or
adc
repnz
andl
jl
sub
lret
xchg
pop
inc
inc
and
xchg
mov
test
sbb
dec
jle
xlat
mov
out
push
ss
xor
pop
pop
mov
inc
jae
insb
ds
push
or
jno
mov
aas
sub
loopne
dec
fs
loop
int
mov
mov
jno
mov
lret
fdecstp
fimuls
sbb
sub
cmp
std
aas
cmp
xlat
iret
stos
xor
ljmp
inc
fdiv
in
or
sub
jecxz
push
test
ret
cmpsb
fistl
mov
pop
cmp
data16
mov
subl
cmp
add
inc
jmp
dec
loopne
xor
xor
push
jl
push
push
sub
icebp
dec
jns
std
or
or
pop
adc
and
lods
movsl
incl
hlt
push
test
mov
pop
jg
and
stos
cmpsl
jmp
sub
lds
push
push
roll
out
call
jb
mov
adc
push
xlat
bnd
inc
sub
adc
jmp
inc
dec
or
scas
imul
movsl
pop
push
sbb
or
pusha
aaa
jmp
or
imul
xlat
push
cmp
ljmp
mov
xor
sbb
pusha
cmp
cmp
push
fs
nop
sub
in
adc
cs
jle
test
out
mov
jae
sbb
jp
pop
aaa
lds
push
push
mov
stos
loopne
imul
pop
movsb
stc
push
lret
xor
movsl
popa
out
fsubs
loopne
js
ss
dec
xor
lret
in
push
mov
loopne
inc
or
incl
icebp
dec
sbb
pop
inc
test
pop
fldt
lds
scas
shlb
stos
out
out
push
or
jbe
push
fidivs
outsl
pop
js
pushf
daa
adc
pop
push
add
fs
cmc
mov
ret
mov
mov
sub
push
cmpsb
mov
es
dec
sbb
xchg
pushf
sub
loop
ds
dec
mov
jbe
adc
push
shlb
push
imul
adc
rcll
movsb
scas
and
loopne
pop
ret
ljmp
pop
repz
xchg
lcall
sub
push
pop
dec
call
mull
fimull
jns
xchg
popa
data16
pop
and
cmp
xor
icebp
fwait
nop
jnp
stos
jb
and
imul
lret
xor
nop
testb
inc
and
in
test
xchg
cwtl
idiv
repnz
daa
scas
out
sub
push
fisubrs
xor
stc
nop
das
je
push
xchg
lahf
xchg
mov
jge
out
push
aam
dec
xor
lahf
add
jge
pop
pop
jae
nop
mov
mulb
test
call
movsb
xor
pop
fisubs
daa
mov
pop
xchg
rorl
push
adc
mov
mov
scas
movsb
jmp
movsl
adc
cmc
lcall
jnp
mov
xor
xor
or
dec
loope
mov
jge
mov
das
mov
push
pop
pushf
rcll
cs
mov
loope
lret
mov
inc
adc
stos
mov
scas
xor
cmc
or
dec
mov
aaa
into
cmpsl
push
movsl
mov
push
jno
sbb
sbb
cmp
and
mov
repnz
inc
or
xchg
sti
pop
mov
push
mov
repz
test
or
xchg
push
stos
sub
pop
dec
stos
sub
xchg
sahf
inc
pop
fcomp
repnz
andl
add
mov
data16
jae
int
sbbl
jns
mov
pop
push
sbb
loope
pop
dec
push
lret
mov
imul
clc
lret
add
sbb
inc
out
mov
loop
ja
mov
cmp
mov
out
inc
insl
fwait
daa
xor
mov
cmp
xchg
mov
add
lret
in
lods
sti
mov
lahf
aad
pushf
clc
cmpsb
sbb
idivb
ret
jp
fsts
mov
enter
ror
faddp
cmpsb
adc
das
out
or
and
lea
stos
fnstenv
push
jge
lret
and
inc
adc
out
ret
lcall
sub
or
hlt
dec
and
pop
sub
fs
lds
mov
jo
out
push
adc
pop
enter
in
in
push
ftst
ret
in
mov
pusha
dec
dec
das
scas
lcall
add
inc
sub
mov
jmp
add
test
data16
push
adc
jmp
inc
dec
lock
mov
fs
xor
in
inc
mov
nop
push
cwtl
push
xor
dec
fistps
inc
push
push
cmp
adc
pusha
scas
xorl
lret
push
add
xchg
xor
inc
or
push
shll
inc
xor
rclb
leave
mov
xchg
or
or
sbb
xchg
lret
xchg
pop
clc
popf
call
mov
jno
imul
int
mov
insb
imul
outsl
lods
ret
out
inc
xor
jge
aas
out
cld
es
divb
dec
pop
pop
or
loope
mov
fistpll
push
add
imul
ret
push
mov
icebp
ret
cltd
cmp
push
cld
pop
pop
xchg
mov
pop
adc
adc
or
jmp
jl
hlt
adc
mov
xor
gs
jle
cmp
gs
push
out
arpl
add
sbb
fdivs
dec
popa
cmpsb
cmp
add
jmp
mov
leave
sub
mov
xor
push
fwait
jle
fdivrl
outsb
mov
mov
dec
inc
xor
fcomps
hlt
fwait
inc
add
repnz
mov
xor
pop
rcl
cmp
incl
mov
xchg
out
xchg
loop
cmp
shlb
mov
add
jl
loopne
xor
lods
pop
and
sbb
dec
pop
add
pusha
add
and
add
add
aam
inc
add
nop
add
hlt
add
add
add
and
add
add
add
mov
add
stos
stos
add
ja
mov
incl
add
add
add
or
and
or
or
les
add
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
roll
add
stos
add
add
xor
add
add
add
and
outsb
pop
inc
jae
inc
loope
ja
dec
popa
jo
push
imul
add
cld
or
dec
lea
inc
in
call
ljmp
lea
adc
cld
mov
mov
call
push
mov
push
push
dec
push
dec
ror
lret
ret
mov
push
test
add
mov
lea
int3
add
pop
push
push
or
loopne
cld
jmp
aam
push
adc
push
clc
jne
add
test
test
std
or
cld
push
mov
add
or
push
push
lret
adc
push
clc
push
cmp
mov
inc
in
add
jne
jmp
adc
movl
add
add
sbb
add
add
add
add
jns
inc
inc
adc
outsl
test
sbb
inc
jo
rolb
gs
gs
je
arpl
arpl
dec
jno
push
inc
jb,pn
addr16
add
gs
imul
add
gs
xor
add
add
adc
add
add
add
add
add
jmp
add
add
fwait
add
popf
sub
shl
xor
mov
cmp
jae
lcall
pop
test
pop
jnp
mov
dec
dec
in
pop
icebp
stc
clc
negb
mov
aaa
push
and
shlb
mov
xchg
pop
and
in
fwait
pop
cmp
sub
cmc
dec
mov
fwait
xor
hlt
add
lret
adc
sub
mov
gs
test
out
aad
sbb
inc
ja
stos
xor
imul
adc
jnp
adc
jns
loop
and
xor
popf
leave
adc
ja
cmp
push
mov
and
sub
les
jl
jle
popa
outsb
shl
dec
in
jmp
sub
mov
nop
cmp
sub
cmp
es
inc
cmpsb
mov
pop
test
or
test
fs
data16
notb
push
decb
jb
jg
add
sub
orps
addb
add
jl
dec
lret
pop
daa
xchg
sbb
stos
inc
fidivrl
lret
jns
push
push
inc
mov
xchg
mov
cltd
lock
jge
mov
jmp
mov
lcall
in
mov
out
and
add
out
dec
jp
lods
shrl
jbe
push
cmp
lods
pop
inc
xchg
cmpsb
adc
iret
lahf
je
rorl
and
cmp
or
cmp
jbe
push
and
shl
rclb
or
les
cmp
out
push
in
insw
mov
add
leave
and
or
jbe
push
cmp
fs
sub
or
cli
outsl
add
mov
sub
stos
push
mov
and
clc
dec
cmp
rclb
repz
andl
clc
push
add
sbbb
add
out
aas
out
push
shlb
sub
cmp
mov
xchg
lcall
xor
stos
sbb
loop
ss
sub
or
pop
ret
into
and
hlt
sbb
cli
call
or
lea
scas
idivl
dec
rol
repz
adc
js
jg
xor
xor
cmp
inc
loop
xchg
sbb
cmp
imulb
mov
outsb
popf
ficompl
scas
ret
mov
dec
jle
dec
mov
jmp
push
mov
inc
jge
mov
insl
mov
sbb
sub
jae
xchg
inc
pop
popa
xchg
daa
mov
mov
cwtl
pop
jne
negl
push
idivl
stos
adc
jo
adc
push
or
jbe
sub
in
push
lret
sub
xchg
sbb
shl
inc
mov
fists
stc
mov
es
test
ljmp
lock
ljmp
mull
xchg
stos
sbbb
dec
mov
sahf
mov
test
fyl2x
push
jb
int
push
dec
push
and
sub
mov
and
pop
dec
pop
jae
sub
das
mov
lock
clc
pop
inc
push
and
lds
push
aaa
xchg
test
mov
leave
cmpsl
xchg
insb
adc
xorl
pop
adc
cwtl
aaa
fisubs
lret
gs
in
daa
xor
cmc
repz
sub
inc
sub
pop
pop
lcall
std
movsl
mov
popf
cmp
mov
sub
pushl
jg
sbb
cmpl
add
jecxz
icebp
dec
mov
out
lock
mov
lock
and
repz
sbb
lods
iret
jecxz
out
fsubl
inc
aaa
std
sub
inc
lahf
xchg
xchg
sahf
repnz
or
xor
or
repnz
dec
add
std
aam
shll
adc
addr16
mov
push
jbe
or
lods
mov
fsubrl
fidivs
adc
adc
jp
adc
xchg
or
inc
out
insl
adc
scas
lods
outsb
sti
xchg
dec
sbb
out
mov
mov
and
cltd
pop
jl
mov
sbb
add
add
push
mov
adc
mov
aad
push
mov
mov
and
mov
sahf
out
fcmove
inc
jp
outsl
xchg
ret
pop
stos
arpl
add
fwait
xor
jne
push
outsl
test
mov
cmp
adc
stc
xor
popa
or
sar
sub
fsubrs
xor
lahf
fdivrl
mov
fisttpl
jl
sarl
sahf
pop
stos
push
cmp
pop
add
loop
fwait
lock
sub
sti
loopne
push
and
xor
inc
cld
dec
xor
add
addr16
mov
mov
movsb
enter
sub
test
ds
shl
push
push
test
push
das
sub
subb
sbb
adcb
mov
addl
fst
mov
push
cmpsl
adc
clc
aaa
jo
setb
dec
imul
stos
pop
ja
out
dec
outsb
push
pop
cmp
or
mov
pinsrw
pop
lods
jl
jmp
push
sbb
orl
mov
inc
sub
sbb
negl
adc
dec
jmp
fiaddl
cld
jb
mov
jb
inc
mov
shll
sub
int3
enter
enter
mov
push
sbb
push
inc
mov
push
fs
and
xor
mov
outsb
stc
outsb
insl
stos
call
cmp
lds
shrb
sbb
shlb
lret
outsb
push
fnstsw
mov
andl
jb
bound
pop
out
inc
stos
add
test
mov
push
dec
add
mov
test
pop
hlt
or
rcrb
lahf
xchg
push
mov
dec
sbb
js
and
aam
jae
mov
ret
or
sbbl
dec
daa
jns
and
gs
push
or
and
push
repz
push
sbbb
icebp
ret
pop
lock
call
or
arpl
cmp
out
pusha
add
dec
ret
and
popf
and
xorb
mov
aaa
addr16
fidivrl
push
push
or
mov
pop
push
mov
sub
out
cltd
int3
in
pusha
iret
mov
and
dec
in
ret
dec
xchg
sub
or
aas
lods
or
out
pop
cmp
loop
jbe
fisubrl
pop
call
ret
pop
ds
negb
ret
fwait
addr16
clc
xlat
shl
cmp
pushf
or
jae
cltd
or
pop
pmaddwd
ljmp
inc
lahf
xor
push
mov
mov
popf
and
sub
cli
loope
insl
movsb
push
add
add
xor
outsb
loopne
ret
cli
push
pop
dec
jl
int3
lret
pop
pop
xor
clc
stos
jg
dec
push
idivl
and
insl
jmp
mov
mov
mov
daa
inc
xchg
roll
js
push
xchg
xchg
mov
mov
push
jbe
incb
xchg
cmp
inc
bt
ss
dec
mov
mov
push
lahf
call
icebp
sub
or
mov
dec
mov
sbb
nop
xor
jg
xchg
fcmovne
mov
mov
call
sub
sbb
mov
cwtl
dec
dec
fsubr
mov
bound
mov
xor
adc
insb
jmp
sahf
sti
repz
xor
cld
add
movsb
xor
xor
les
jl
pop
rcr
cmp
loope
dec
inc
rcl
xor
pop
jle
xchg
cmpsb
push
mov
or
insl
add
mov
and
clc
add
stc
dec
and
adc
sub
mov
jge
aad
scas
out
jb
pop
xor
adc
adc
or
push
pop
mov
inc
cltd
add
push
cmp
sbb
stc
mov
push
and
cld
mov
add
fidivrl
and
mov
std
fistps
add
mov
fs
out
mov
add
mov
outsb
ljmp
jno
pushf
or
and
ja
iret
pop
nop
add
movsb
dec
sbb
jle
sbbl
pop
mov
fidivrl
jno
pushf
mov
loop
in
fildl
ljmp
mov
sub
dec
sbb
popf
xchg
cmp
repnz
jecxz
stos
adc
push
movsl
dec
sbb
mov
xor
hlt
lods
xor
cmp
in
push
xor
sub
jg
cmp
loop
push
testl
adc
xchg
xchg
mov
mov
lcall
add
nop
out
xchg
dec
lcall
jecxz
adc
pushf
shll
push
and
push
fmuls
popf
pop
scas
testb
stos
fstpt
dec
cltd
inc
loope
fimull
mov
dec
mov
icebp
xchg
xchg
pop
mov
roll
add
xor
std
stos
pop
fstpl
or
jo
fidivs
ja
mov
je
push
fcomps
pop
mov
mov
pop
insb
dec
pop
int3
jge
fldl
idivb
out
std
mov
fnstsw
fwait
mov
lret
dec
lods
popa
xchg
sbb
loope
dec
testl
dec
jno
sbb
xor
adc
out
out
cmc
mov
pop
mov
lahf
je
gs
mov
xchg
enter
cmc
outsl
adc
push
lds
cmp
cmc
idivb
push
dec
pop
aam
jb
in
fstl
wrmsr
orb
or
int
xor
out
fmuls
add
nop
lock
shll
in
add
push
fincstp
pop
loop
sub
in
cltd
aas
rcrl
imul
mov
inc
fisttps
je
adc
shl
adc
mov
call
mov
cmp
mov
dec
push
sti
inc
out
jge
fsts
je
aam
aaa
xchg
mov
cmpsb
jmp
sahf
pop
mov
lret
and
mov
test
dec
push
or
sti
imul
icebp
pop
push
ficoml
cwtl
repz
and
shrb
sar
rclb
cmp
fldl2e
fimuls
and
loope
jp
gs
mov
push
cltd
test
lock
add
jg
aad
jns
aam
insb
cmp
xchg
decb
dec
and
iret
shr
inc
cs
cli
in
sub
out
xchg
xchg
cli
fmull
mov
dec
push
call
mov
test
mov
sbb
xor
dec
rol
mov
inc
fs
loop
fbld
icebp
jnp
flds
sbb
movsb
mov
js
les
adcl
mov
pop
sub
push
out
in
or
or
jbe
lahf
addr16
lods
cwtl
or
aam
sub
push
in
fs
fdivrs
ret
fnstsw
loopne
outsb
in
or
imul
push
mov
iret
mov
out
xchg
jl
loope
jne
lds
fs
jbe
inc
push
and
cmp
inc
jnp
lahf
lcall
jp
jle
out
add
call
es
add
add
adc
jle
sbb
jne
pop
cmp
or
dec
sub
mov
in
mov
jne
xor
pop
decl
xor
leave
fwait
aad
jno
jl,pt
dec
xor
cmp
dec
jb
jno
sub
sbb
popa
cltd
jb
xchg
adc
pop
inc
push
dec
stos
sarl
ret
les
inc
outsl
and
sub
mov
and
inc
sub
adc
sahf
and
and
mov
sub
jmp
insb
push
out
mov
pushf
clc
daa
int
pushf
aad
and
jp
inc
cwtl
test
mov
adc
jb
jae
jns
jg
rorb
arpl
jo
or
repnz
popa
lods
andb
cmpb
dec
dec
les
scas
jl
add
adc
jl
lcall
ja
clc
shrb
rol
mov
cltd
in
pop
and
test
or
sub
pop
pop
fisubl
jno
popf
push
push
in
lcall
bound
fmul
push
lods
in
jmp
mov
addr16
mov
fsubrs
loope
iret
xor
jl
sahf
xor
dec
clc
loope
xchg
add
fwait
push
add
movsl
fwait
aaa
movsb
orb
mov
ret
es
mov
loop
xchg
pop
inc
cmp
adc
xor
push
adc
in
stc
and
sub
test
lds
jge
cmp
mov
jnp
mov
xlat
mov
jnp
mov
adc
lea
outsl
push
sbb
jl
cmp
stos
cmp
xchg
or
sahf
shl
test
clc
mov
lret
inc
fcomp
rorl
jns
lods
push
orl
xchg
pop
sub
pop
aad
pop
ret
mov
subl
test
mov
aam
mov
sbbl
mov
sub
fsubs
ja
mov
loopne
adc
imul
pop
cmp
fxch
es
jp
lds
cmp
pop
dec
into
mov
mov
sub
jae
aad
fidivs
in
rcl
mov
dec
lods
outsl
jp
pushl
sbb
clc
adc
movsb
push
div
insl
shrd
inc
jbe
das
xor
in
push
pop
xchg
cmp
idivb
pop
fcmove
xlat
inc
push
data16
aas
push
nop
cli
ja
out
xchg
inc
lret
cvtps2pd
loop
stos
fwait
or
mov
xlat
mov
icebp
jecxz
fstpt
pop
daa
sub
fwait
inc
jp
cmpsl
dec
iretw
jns
enter
mov
mov
adc
leave
jl
jb
popf
xchg
cmp
push
push
mov
and
xchg
xor
mov
sbb
sahf
sbb
add
lds
xchg
mov
pop
loope
mov
pop
ss
sub
and
adc
fldpi
out
mov
mov
gs
test
push
pop
adc
sbb
push
mov
fcoms
push
aas
mov
sub
divl
cmp
xor
rorb
and
jmp
pop
and
fsubp
inc
fmuls
inc
sti
jp
int3
push
in
addr16
addr16
push
jno
xchg
add
ja
or
cmp
jge
pushl
lcall
jns
outsl
or
and
hlt
aas
les
push
lock
aam
testl
pop
add
or
jmp
lods
cmp
push
inc
fdivl
mov
sahf
mov
xchg
js
sub
loope
cld
popf
cmp
mov
pop
jecxz
push
adc
ss
mov
sbb
rolb
leave
pushf
mov
mov
adc
imul
popf
scas
adc
cmpsb
push
or
xchg
lret
dec
dec
jl
outsl
cmp
popa
dec
movsb
push
leave
sub
rorl
cwtl
jnp
fs
sub
imul
jp
stos
scas
ss
jp
ret
push
inc
or
xor
cmp
rorl
shll
std
pop
or
pop
cmp
lods
dec
movsb
shrb
xchg
popa
push
or
mov
repz
push
jle
cs
pop
jge
adc
leave
out
mov
and
sub
call
movsb
xchg
cmp
sub
jo
mov
mov
in
mov
mov
std
icebp
pop
xor
jp
sbb
xor
adc
xor
bound
sbb
leave
mov
jne
cmp
out
sbb
pop
sbb
dec
cs
cmp
daa
pop
cmp
pop
lds
mov
inc
mov
xor
push
mov
xchg
xor
rcr
jge
popf
or
js
cmpsl
cmp
push
xchg
jno
es
xchg
loop
je
lahf
sub
cwtl
movsl
pop
incb
scas
aas
xchg
pop
gs
movl
in
sub
movsl
out
outsl
mov
data16
sub
aas
popa
dec
lcall
mov
pop
dec
and
aam
inc
hlt
stos
imul
inc
ret
lahf
xor
stos
mov
and
jne
stc
pop
adc
clc
enter
bound
inc
js
mov
clc
pop
movsl
ja
sarl
in
jle
daa
nop
xor
push
inc
scas
into
pusha
cltd
dec
fistpl
or
into
rcrb
js
push
and
leave
scas
cmp
pop
sbb
pop
add
shrl
adc
cld
dec
or
xchg
test
mov
movsb
ss
mov
sub
jecxz
add
je
xchg
popa
fs
scas
test
cmp
mov
mov
sbb
int3
mov
inc
testl
jecxz
adc
mov
scas
xor
gs
inc
adc
ficompl
xor
arpl
or
jge
add
inc
call
pop
xor
sahf
and
orb
inc
ljmp
and
gs
and
pop
mov
aam
lret
mov
pop
cmp
mov
in
cmc
fmul
imul
xchg
icebp
mov
rclb
mov
adc
sahf
or
jb
lcall
push
xor
jne
dec
mov
ret
not
aas
or
sbb
sub
cmp
jl
mov
aam
mov
mov
fstpl
lock
pop
pushf
cmpsl
out
cmpb
inc
ret
insb
push
ja
push
mov
jecxz
xchg
jp
fs
jne
lods
inc
test
test
addl
jbe
test
fsubs
mov
outsl
cmp
fldl
mov
addr16
test
sub
clc
xchg
pop
sub
int
cli
movsl
loopne
leave
pop
movsl
in
in
mov
xchg
sub
ljmp
cmp
rorl
jge
xor
adc
pop
inc
mov
mov
mov
adc
or
pop
cld
cmpsl
cmp
repnz
xchg
jns
adc
loop
adc
jae
mov
mov
jno
std
sub
pop
mov
out
cmpsl
mov
ljmp
xchg
out
andl
jbe
push
xchg
pop
jmp
out
punpcklbw
or
movsb
or
pop
xor
aad
lock
pop
out
cmpb
cmp
pop
jle
pop
pop
scas
xchg
nop
and
ja
mov
cmp
jno
or
les
jo
jecxz
scas
xchg
xor
mov
outsb
cmc
out
out
stos
jns
fistpl
call
add
add
xor
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
fwait
add
add
inc
add
add
add
addb
sar
hlt
stos
stos
add
mov
clc
clc
incl
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
aad
add
aad
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
outsl
add
pop
add
push
add
dec
add
inc
add
cmp
add
xor
add
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
nop
add
pushf
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sub
add
dec
xlat
add
jo
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xlat
add
int3
xlat
add
aam
add
add
in
add
in
xlat
add
hlt
xlat
add
pop
fadds
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
add
sub
add
cmp
add
dec
fadds
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
flds
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
fiaddl
add
add
adc
add
or
add
add
add
cld
flds
add
flds
add
flds
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
fiaddl
add
add
pop
fiaddl
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
fildl
add
fildl
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
fildl
add
add
lods
fildl
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
fildl
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
