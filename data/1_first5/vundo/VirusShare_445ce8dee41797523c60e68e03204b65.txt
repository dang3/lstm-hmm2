push
outsb
or
icebp
and
or
icebp
cmc
pop
add
jle
add
add
or
icebp
xor
add
push
mov
xorw
sbbl
pop
jmp
xchg
or
addr16
loopne
fldenv
dec
icebp
xor
sbbb
lods
shrb
lcall
idiv
cmc
cld
xchg
xchg
pop
movsl
or
xor
jmp
push
xor
mov
pushl
popl
mov
mov
lods
mov
jmp
out
or
icebp
inc
xor
arpl
add
arpl
jmp
jle
std
into
fistpll
push
push
cmc
loope
pop
mov
rol
sti
and
fisubrs
test
adc
push
cmp
xlat
andl
test
loop
aas
xor
mov
add
push
push
push
push
jmp
xor
jmp
hlt
cmpsb
cmpsb
ficoml
iret
sbb
pop
aas
inc
or
mov
jmp
cmp
mov
dec
cmc
aas
fwait
loope
cmpsl
xchg
push
add
daa
hlt
sbb
sub
xchg
daa
nop
mov
pusha
and
dec
adc
sub
jae
mov
jmp
mov
aaa
inc
cmp
jle
mov
fstpt
jg
push
xor
add
add
mov
add
xor
lea
mov
add
mov
jmp
mov
in
andl
xchg
hlt
inc
cltd
in
mov
nop
cmpsb
inc
insl
mov
and
stos
in
mov
stos
sahf
lcall
mov
xchg
inc
imul
cmp
std
cltd
push
jae
jno
push
rcl
imul
test
lret
popf
popf
in
imul
mov
rorb
rol
pop
xor
inc
cmpb
jne
cmp
je
inc
cmp
jb
mov
add
push
popl
movzwl
mov
add
mov
add
pop
cmp
jbe
cmp
jae
pushl
jmp
push
dec
fcmovnu
xchg
add
test
cld
js
mov
xor
and
imul
or
lods
inc
jbe
test
call
cli
loope
mov
or
adc
mov
xor
imul
not
mov
shr
inc
mov
xor
pop
addl
pushl
call
call
pop
pop
pop
pop
leave
jmp
dec
push
ds
mov
mov
fwait
mov
es
in
jbe
push
gs
test
xchg
dec
xor
jmp
adc
add
arpl
ja
fldcw
push
and
pop
test
jl
sbb
add
in
push
mov
fldcw
or
es
jb
lea
adc
or
call
test
jne
ret
push
push
pushl
popl
je
push
mov
andl
addl
pop
mov
call
push
add
add
mov
xor
xchg
addl
push
call
push
push
push
not
mov
mov
xor
pop
mov
pusha
call
mov
push
push
dec
xor
mov
xor
pop
jmp
imul
enter
popa
cmp
addl
sti
out
pop
movsbl
add
lahf
in
loopne
jl
cltd
cmc
and
pop
pusha
xor
lock
or
arpl
push
jmp
push
sarl
pop
std
and
clc
leave
lahf
push
sarl
aad
aaa
adc
sahf
movsb
lea
ret
and
dec
je
mov
add
clc
push
add
push
call
cmpl
jne
jmp
jmp
push
xor
or
popl
mov
jns
call
cmp
mov
lds
lods
sbb
dec
repz
sub
mov
popf
daa
jns
or
cmpsl
aaa
cmpb
jb,pn
int
ret
andb
inc
insl
push
std
jns
jne
mov
adc
insb
sbb
or
lret
jne
inc
lock
pop
movsb
pop
jae
stc
arpl
xchg
outsb
mov
cli
popl
popa
pusha
call
mov
push
add
not
mov
sub
xchg
addl
push
and
mov
popl
mov
push
call
mov
mov
xor
xor
rol
inc
jmp
pushf
mov
jecxz
jp
sti
or
repz
sbb
and
xor
xchg
xchg
add
imul
adc
mov
mov
pop
arpl
push
push
fwait
out
sti
lcall
shrl
fdivr
jp
dec
div
sbb
inc
xchg
mov
cmp
je
cmp
jne
popa
shl
push
xor
push
call
int3
jmp
popa
jmp
xchg
and
and
out
add
shll
int
in
adc
inc
js
jmp
leave
aam
popf
into
pop
inc
jne
inc
repz
lea
or
cld
call
push
ds
push
xor
push
call
orl
jb
push
mov
andl
orl
pop
push
mov
push
jmp
addw
jb
call
cmc
or
loop
and
int
imul
mov
adc
lods
popa
mov
add
repz
inc
mov
test
test
dec
pop
sbb
mov
cmp
mov
inc
jmp
dec
dec
push
shl
out
in
push
or
mov
and
rcrl
loop
popa
arpl
adc
inc
cmp
add
sbb
jns
call
mov
sbb
rcl
ja
ljmp
les
or
push
dec
adc
andb
and
pop
xchg
adc
mov
in
int
nop
sbb
push
mov
add
xor
idivb
push
sub
jmp
sub
test
mov
shrl
add
mov
push
mov
mov
rep
pop
pop
push
push
mov
xor
pop
push
xor
jmp
jmp
inc
nop
cli
arpl
push
jbe
stc
iret
mov
adc
add
lahf
in
sub
into
adc
mov
jo
dec
in
fidivrs
fsubr
cmc
aas
xor
notl
xchg
jle
xchg
icebp
pop
popf
test
enter
add
fcmovnb
stc
xor
push
inc
lock
js
ljmp
cmp
and
add
or
jne
add
jmp
jmp
imul
push
jl
sahf
sbb
pop
out
xor
cmp
mov
push
xchg
push
or
jae
fdivrl
push
bound
xchg
into
mov
add
shr
shl
xorl
mov
jmp
sub
mov
push
popl
cmp
jne
mov
add
cmpw
jne
ret
call
std
mov
out
sbb
or
aas
das
xor
ret
mov
push
pop
pop
mov
push
scas
arpl
cmpsb
jo
pop
pop
jmp
sub
rorb
xor
ret
repz
jbe
popf
inc
xchg
subl
sbb
xor
jae
arpl
dec
xchg
leave
or
lahf
rcl
pop
adc
fdivr
add
sbb
inc
leave
adc
jl
les
pop
pop
push
movsb
inc
push
cmpb
push
cmpsb
incl
and
ja
jl
add
popa
xor
lods
sub
and
jp
mov
mov
sbb
sbb
imul
xor
pop
dec
push
xor
rcll
je
popa
sbb
fsubrl
inc
xchg
pop
stos
push
insb
mov
xchg
xchg
or
mov
cwtl
mov
dec
out
int
sbb
adc
jbe
bound
xor
jb
sbb
jae,pt
std
xor
xchg
push
movsl
and
negl
or
clc
pushf
and
xlat
loopne
repnz
dec
pop
or
bound
adc
out
cmpsl
shl
cld
dec
jns
lahf
int
pop
lea
cmp
pop
mov
inc
jmp
pop
and
and
mov
jae
sbbl
je
mov
fldenv
jne
pop
jne
xor
pop
and
repz
andb
mov
fnstcw
ss
mov
push
adc
ss
adc
pop
mov
popf
pop
xor
subl
loopne
xchg
std
nop
fnstsw
dec
jne
imul
mov
xor
and
jns
fildl
dec
push
sub
int
arpl
movsb
dec
mov
roll
popf
xchg
sahf
jge
ficoml
imul
cmc
stos
faddp
sti
jge
arpl
xchg
cmp
and
jnp
mov
xor
fistl
cmp
jae
inc
sub
enter
xchg
clc
cmp
stc
loopne
add
cld
sbb
pop
lods
call
test
push
push
pop
or
sahf
shll
setae
add
into
addr16
add
js
fsubrs
dec
cmc
sub
ficompl
jb
rcl
xor
fdivrp
popf
insb
loopne
das
cld
aam
fldt
jle
pop
mov
aaa
mov
mov
cmp
xchg
aad
xchg
nop
ret
push
test
adc
pop
js
or
mov
inc
mov
jmp
imul
lods
mov
xor
test
sbb
jae
repnz
xor
xorb
and
cwtl
adc
xchg
cmc
push
testl
in
popf
pop
sbb
jae
imul
cmp
jle
xor
xor
or
mov
inc
mov
sbb
fwait
rorb
in
jg
dec
lock
lds
cwtl
dec
jge
add
sub
mov
lcall
in
mov
insl
or
arpl
popa
add
jo
mov
pushf
imul
cld
fcom
pop
iret
cld
js
adc
dec
cmc
dec
inc
mov
pusha
lea
adc
and
decl
sbb
sub
jno
movl
jecxz
mov
add
jb
mov
pusha
adc
outsl
inc
hlt
dec
andl
pop
cmpsw
pop
das
call
inc
mov
jb
outsl
mov
sbb
adc
or
and
pusha
lock
mov
mov
stos
pop
jecxz
jge
iret
sbbb
negb
mov
dec
add
hlt
cwtl
iret
inc
push
sub
cmp
pop
testb
dec
jnp
stos
cmpsl
xor
add
flds
lcall
pop
jae
adc
cmpsl
jmp
sbb
sub
mov
jns
xlat
and
cmc
push
mov
sahf
repz
pushf
in
test
sbbl
mov
in
ret
push
dec
cld
mov
pop
dec
ror
push
clc
cmp
push
lret
cld
sbb
mov
sar
sbb
push
in
repz
test
lret
outsl
loopne
pop
mov
repz
mov
push
dec
push
call
popa
inc
decb
sbb
jae
xchg
xchg
inc
out
nop
cltd
shll
xor
out
or
ret
or
std
jg
movsl
enter
negl
int3
xchg
or
xchg
arpl
mov
dec
movsl
mov
in
call
adc
inc
jae
cli
inc
dec
cld
sbb
xchg
mov
popa
movsb
jb
xchg
dec
fldl
push
dec
push
lcall
shll
cli
inc
lret
sub
sbb
cld
sbb
xchg
xchg
lea
loop
jmp
imul
inc
add
cli
add
xchg
repz
and
sahf
popf
lret
test
fldenv
fsubrl
out
jl
mov
xchg
cmp
inc
es
orb
jo
mov
dec
call
mov
mov
mov
je
mov
ds
jge
outsl
fsub
xchg
or
ds
xchg
xchg
loope
lcall
mov
add
std
jle
movsl
jae
das
pop
xor
movsl
mov
or
popf
out
and
or
test
adc
lds
xchg
sbb
pop
push
mov
sbb
arpl
pop
addl
add
nop
mov
lcall
out
les
xchg
jnp
inc
in
add
jo
push
xchg
mov
cmpsb
add
inc
int
xchg
push
fldenv
imul
test
dec
jbe
mov
or
bnd
jg
mov
or
sbb
jae
xchg
jl
cld
sbb
int3
in
dec
sub
pop
andl
pushf
cs
jnp
rorb
dec
cmp
sbb
ljmp
jg
repz
sbb
or
xchg
mov
in
adc
adc
fisttps
xchg
adc
int
out
inc
movsb
mov
pop
mov
mov
popa
jno
cmpsl
jb
mov
leave
mov
jge
pop
mov
and
repz
dec
adc
scas
pop
int3
dec
push
sbb
jl
cwtl
testb
cli
lea
jmp
hlt
push
test
dec
or
popa
jge
jecxz
sbbb
imul
or
stc
data16
das
push
push
aaa
fstpt
mov
imul
xor
int3
sbb
les
movq
sbb
push
jl
sbb
mov
sub
mov
popa
jns
sbb
jne
inc
std
inc
out
push
cs
xchg
addl
je
sbbb
add
cli
mov
cli
pushf
cmp
adc
fcmovne
xor
outsb
cwtl
xor
mov
or
xor
xchg
and
or
addr16
je
arpl
std
mov
jne
fimull
push
dec
sub
rcl
jl
mov
andl
cltd
arpl
xor
das
and
cld
sbb
cmp
inc
je
popa
sbb
inc
into
adc
push
and
add
pop
mov
xchg
mov
mov
popa
jae
imull
popf
sub
push
mov
sbb
aad
in
mov
sbb
mov
jo
sbb
pop
inc
push
add
inc
mov
cld
sbb
ret
je
popa
sbb
push
mov
mov
test
cmc
cmp
push
scas
xlat
jp
jno
popa
xor
inc
movsl
iret
leave
cmp
adcb
mov
ret
insl
es
adc
sub
outsb
test
jl
adc
push
mov
mov
cmp
xchg
test
push
pop
int
pusha
stos
push
jns
xchg
push
aad
push
into
es
pushf
mulb
into
in
push
sbb
leave
xlat
mov
enter
mov
ds
frstor
jns
lret
stos
stc
repnz
add
sbb
pop
leave
mov
adc
sub
leave
xchg
les
sti
mov
lds
dec
pop
inc
imul
inc
out
pop
andl
sub
in
xor
mov
adc
mov
push
ds
inc
inc
mov
das
jbe
mov
in
adc
inc
adc
inc
jp
add
imul
xor
icebp
inc
mov
in
imul
enter
mov
sbb
add
jmp
push
mov
jns
lea
mov
or
inc
vpmadcswd
inc
int3
or
mov
dec
xchg
ljmp
dec
cmp
sbb
mov
ds
iret
insb
shlb
jle
xor
lods
push
subl
and
adc
and
shl
lods
fsin
pushf
xchg
adc
out
das
in
stc
scas
pop
inc
mov
cmp
gs
sub
adc
rcr
mov
insb
jmp
mov
test
xchg
lods
pop
hlt
inc
gs
or
js
push
cltd
or
mov
imul
int
xchg
daa
test
and
push
std
loopne
inc
cmpsl
push
mov
and
fildll
cmp
cmpsb
mov
ficompl
aas
imul
xor
push
jle
nop
dec
sbb
es
insb
test
jbe
cld
sbb
cld
das
mov
imul
mov
add
js
pop
pusha
pop
sbb
mov
lret
sub
dec
sub
cmpsl
mov
and
scas
test
push
imul
jp
cwtl
cld
sbb
mov
sahf
cs
out
jmp
in
dec
xor
insb
jg
rorb
call
mov
in
imulb
lods
ss
mov
add
cmpsl
fisttpll
inc
fists
in
jne
pop
cld
loopne
fldenv
xchg
mov
aas
sub
je
orl
dec
xchg
cmc
cs
mov
loop
xchg
cld
sbb
in
shl
sbb
shr
add
cld
fcomip
xor
mov
das
mov
add
fcomps
sub
xor
sbb
std
fldl
cmpsl
mov
jb
dec
scas
or
mov
pop
shlb
fs
jns
or
shrl
cld
rorb
jmp
clc
add
mov
inc
and
leave
es
mov
cmpsl
mov
xchg
jne
xchg
inc
sti
mov
add
loope
mov
call
sub
test
adc
movsb
push
inc
fidivl
std
jo
jge
push
shrb
fimuls
jecxz
inc
jne
fwait
jle
mov
dec
and
jo
cmpsb
pop
mov
stc
mov
ja
and
push
std
fdivr
dec
push
stos
sbb
cmpsl
call
jo
mov
idiv
adc
cld
stos
xchg
in
out
fiadds
pop
rorb
sub
aaa
push
roll
inc
fcompl
pop
fcoms
popa
sbb
push
int
xchg
sub
pop
dec
dec
cmpsl
lret
push
or
adc
data16
fsub
sbb
hlt
daa
std
je
ljmp
rorl
dec
dec
xor
aaa
jnp
add
stos
or
aad
sbb
pushf
je
addr16
add
and
mov
fwait
mov
add
pushf
ret
xchg
xor
mov
xchg
inc
lcall
sbb
stos
je
popa
sbb
lock
cwtl
int3
fmuls
xchg
mov
aad
bound
mov
push
xor
adc
flds
jbe
out
xor
lock
lock
add
mov
sub
sbb
lret
jno
leave
jo
pop
xor
mov
add
jbe
dec
push
icebp
andb
rclb
pop
scas
fwait
xor
dec
mov
cld
and
cld
sbb
sar
in
add
popa
sbb
mov
sbb
push
xchg
mov
pop
enter
or
lods
enter
lock
jp
sub
sbb
jmp
cld
sbb
xchg
xchg
rcrl
jp
mov
iret
js,pn
push
pushf
test
daa
mov
pop
daa
popa
sbb
xor
gs
sbb
leave
je
popa
sbb
sbb
fdivr
fiadds
xor
stos
aaa
inc
mov
ret
fs
or
pop
adc
cmpsl
jne
inc
insl
xchg
jmp
test
repz
jl
je
sbbb
pop
mov
jg
divb
roll
sbb
jae
mov
test
dec
and
pop
imul
dec
or
mov
cmp
sbbl
addb
jbe
mov
cmp
in
pusha
rorb
out
aas
popa
pop
call
and
inc
fists
xchg
lods
dec
ffree
gs
popa
je
xor
fs
fucomip
mov
sbb
dec
cld
sbb
fisttpll
sbb
imul
sbb
dec
jbe
sbb
in
push
cmpsb
mov
or
jmp
lds
jmp
sahf
jecxz
mov
in
movsb
xchg
test
push
inc
dec
add
loop
dec
inc
cld
sbb
sbb
mov
rcr
jp
pop
in
je
xor
out
push
xor
sbb
in
pusha
push
jl
push
or
push
cmp
mov
jmp
sbb
pop
lds
in
mov
mov
movsb
cmc
dec
jg
or
mov
xor
enter
dec
out
sahf
popf
insb
cmpsb
icebp
fisttpll
sbb
test
or
mulb
insl
mov
mov
jecxz
mov
in
insl
add
push
call
or
add
data16
scas
flds
xor
pop
inc
xchg
mov
xchg
es
xlat
pop
push
cmpsl
addb
and
pop
aad
rcll
cld
popa
data16
lahf
lods
mov
xchg
fidivrl
inc
adc
sti
xchg
inc
pop
dec
pop
popa
sbb
jae
jl
outsl
in
jae,pt
mov
leave
add
push
add
inc
push
mov
ja
xlat
imul
jge
orl
jmp
mov
daa
xchg
xchg
in
pop
hlt
pop
bound
cmp
in
daa
das
pop
imul
mov
cmp
pushf
insl
jb
loope
mov
pop
push
adc
push
pshufw
addl
and
jae,pt
js
sbbb
push
fs
scas
mov
lret
aaa
out
jbe
add
or
sub
faddl
adc
mov
add
sub
jae
xchg
sub
jae,pt
in
mov
dec
aas
dec
movsl
scas
dec
sub
push
pop
fwait
ds
xor
and
dec
and
fwait
icebp
es
mov
xchg
adc
cli
dec
dec
or
stc
xchg
outsl
adc
jne
pop
loop
inc
in
fldt
sub
and
fiaddl
push
xchg
mov
mov
test
jae,pt
jo
fildl
sub
xchg
gs
push
movsl
jge
lahf
shlb
add
mov
les
jp
xchg
adc
pop
insb
insl
xchg
sub
test
test
cmp
add
xchg
push
inc
mov
mov
shlb
jecxz
xchg
xchg
inc
pop
pop
lret
in
pop
add
mov
adc
push
testb
pop
jbe
loop
mov
xor
dec
dec
add
push
and
inc
notl
stos
push
inc
ds
pop
dec
in
adc
push
jp
mov
dec
test
test
xchg
fistps
int3
push
aam
sbb
push
jae,pt
repnz
es
bound
ss
pop
adc
hlt
push
mov
lds
addr16
leave
and
addb
sub
arpl
mov
cmp
xchg
ja
and
testl
dec
dec
or
push
insl
sbb
nop
movsb
mov
movsl
dec
jns
hlt
popa
mov
loop
in
lea
xchg
jg
add
sub
sbb
mov
xor
jno
pop
ror
xchg
std
mov
into
dec
xor
sbb
cltd
xchg
mov
fcmovnu
push
mov
dec
repnz
sarl
aaa
fcmovnu
movsl
fildll
ljmp
mov
jae,pt
daa
pushf
lcallw
ficoms
ret
sub
js
adc
std
test
xchg
imul
inc
mov
jecxz
stos
sub
sti
fistl
inc
mov
daa
lret
int
mov
fdivr
je
fadd
stos
sahf
int
mov
sub
mov
fstp
pushf
add
and
jns
push
loopne
loope
popa
mov
mov
ja
or
cld
sbb
cld
sbb
pop
shll
clc
push
sbb
ret
cmp
pop
cmp
inc
fdivl
les
stos
lret
test
xchg
or
cmp
cmpsl
and
jbe
pusha
xchg
jmp
and
fwait
xchg
fcomps
cld
sbb
cmpsl
mov
popa
call
mov
dec
out
pop
jno
or
adc
scas
or
repnz
push
inc
es
push
mov
mov
or
xchg
fstpt
and
mov
sub
xchg
mov
popa
push
lods
xor
movsl
pop
or
pushf
or
or
sub
dec
dec
sub
ds
and
es
sbb
cmpsb
jne
adc
movsl
subl
pop
sbb
sbb
loopne
in
push
in
jae,pt
pushf
xchg
mov
sub
fisttpl
pop
add
in
push
adc
jo
lcall
jae
pop
jno
mov
push
dec
push
push
sbb
xor
es
inc
and
cmp
pop
call
mov
fs
hlt
pop
push
push
fs
pop
pop
mov
popa
pop
add
arpl
dec
pop
movsl
mov
sahf
or
mov
nop
pushf
call
stos
push
sub
cld
sbb
rcrl
sub
xor
lret
js
cwtl
cs
ljmp
ret
sbb
sahf
dec
hlt
inc
cli
popf
jmp
nop
jno
adc
jae
lea
pop
mov
movsl
mov
and
aas
aam
lea
ja
or
repz
pop
fdivr
sbb
repz
stos
mov
popa
imul
add
cmp
sbb
das
push
mov
cmovnp
push
ret
jecxz
push
sbb
ret
fldcw
mov
sbb
jae,pt
movnti
mov
fdivrl
cld
or
lahf
mov
xor
push
xor
add
inc
jne
cs
add
cmp
and
imul
adc
std
sbb
dec
push
xor
and
pop
daa
fwait
mov
popa
dec
xor
loop
xorl
mov
enter
lds
xchg
repz
les
outsl
mov
fistps
jae,pt
gs
mov
test
dec
xor
cld
sbb
adc
xchg
faddp
inc
clc
cli
shlb
ret
push
or
pop
jb,pt
and
push
sbb
jb
insl
out
or
dec
push
dec
cli
loopne
scas
out
or
mov
stos
das
or
int
and
cmpsb
add
fsubl
xlat
sbb
popf
jae
xor
sbb
add
xlat
inc
loopne
add
loope
sbbl
and
or
js
cld
sbb
jo
andb
xchg
push
shrb
xchg
cmpsl
ret
cltd
adc
inc
sbb
pop
adc
push
cmpsl
adc
orl
ljmp
dec
mov
dec
test
popf
clc
xchg
adc
sarb
push
leave
rolb
inc
outsb
xor
lret
jae
sub
jmp
movsb
test
popa
push
das
outsl
dec
rcl
jl
enter
dec
popa
sub
jge
movsb
out
mov
les
inc
jge
out
xchg
xchg
cltd
aas
xchg
in
xor
add
leave
out
stos
mov
cmp
ja
adc
je
adc
push
dec
jecxz
adc
outsl
hlt
mov
aas
pop
jns
and
cmp
fcmovu
negb
loope
xchg
fst
push
and
lahf
stos
or
mov
inc
jg
sub
sarl
jae
inc
and
xor
jae,pt
out
addl
dec
adc
and
mov
or
mov
out
pop
aam
dec
std
aam
sbb
xchg
xor
test
ret
stos
mov
std
pushf
and
mov
jmp
adc
adc
jmp
mov
mov
dec
xlat
pop
cmp
fidivrs
xchg
arpl
popa
or
pop
inc
dec
or
mov
pushf
cmp
push
popa
add
lock
mov
fidivrl
aad
loopne
pop
adc
mov
fistpll
dec
out
xor
enter
test
jle
scas
mov
je
outsb
fcompl
jp
int
cwtl
scas
adc
add
rcrl
cmp
cmp
es
repnz
dec
ret
aad
xchg
add
sub
mov
scas
cmpsb
sbb
data16
xchg
xor
sahf
xchg
jae
lcall
cwtl
pop
mov
mov
inc
jmp
pop
aad
popa
sbb
jae
adc
scas
inc
push
add
in
xchg
fisubs
adc
mov
sub
in
push
or
call
mov
jg
pop
and
mov
test
repnz
cmc
sub
mov
pop
push
mov
jle
and
int3
mov
pop
dec
lret
insl
jnp
gs
sbb
rcrb
jae
aas
popa
sbb
sbb
xchg
sbb
in
dec
sbb
pop
leave
or
std
dec
or
stc
or
loope
pop
cltd
and
fistps
in
add
je
dec
sahf
in
es
xor
testl
push
push
int
cmp
pop
pop
movsl
adc
outsl
fisttpl
cmp
leave
aam
iret
out
cltd
cmp
cmp
add
jg
ss
in
pop
sbb
add
inc
mov
aas
fs
ret
push
dec
out
loope
fwait
ret
enter
adc
sbb
out
and
iret
aad
out
jge
dec
fildll
inc
loope
pop
lods
pop
adc
mov
adc
sahf
inc
push
ljmp
movsb
imul
jb
and
je
jg
cld
test
inc
adc
dec
jp
mov
adc
sub
jbe
pop
cli
xlat
loopne
sti
add
inc
cmp
dec
mov
inc
xchg
subl
sbb
xchg
mov
pusha
mov
sbb
cld
inc
push
iret
dec
lahf
arpl
and
enter
lret
daa
lods
mov
stos
sbb
dec
shll
add
sbb
imul
adc
push
ss
or
int3
cmc
jmp
cmp
mov
jmp
test
stos
push
push
push
xor
repnz
jb
cmp
sbb
push
insb
arpl
push
mov
nop
add
in
sub
or
lds
jo
fmull
test
adc
ds
mov
hlt
xchg
lods
and
mov
dec
test
xor
imul
inc
xor
jnp
push
aas
or
and
gs
dec
add
jge
ret
outsb
pusha
ret
into
out
jmp
std
adc
xchg
daa
out
dec
sbb
imul
inc
sbb
sar
sub
cld
sbb
jmp
sti
xchg
dec
jb
sbb
in
jae,pt
fs
sbb
aas
mov
test
scas
mulb
mov
mov
pop
jl
lods
mov
ss
adc
sbb
inc
ret
sub
xchg
jmp
mov
xchg
push
adc
xchg
cmpb
xchg
sub
cmp
leave
inc
cltd
popa
adc
adc
push
push
xchg
sbb
fcomi
imul
mov
arpl
mov
xlat
sub
inc
jae,pt
adcl
bound
push
fistl
es
popf
jmp
sti
test
cmp
outsb
aaa
xchg
jns
mov
xor
leave
mov
pop
pop
sbb
mov
pop
decb
xchg
cmp
aad
outsl
lcall
mov
mov
and
sbb
jmp
xchg
cmp
sbb
sbb
or
mov
mov
cmp
mov
maxps
pmaxsw
or
inc
lods
test
shlb
imul
cld
sbb
dec
mov
clc
push
incb
push
dec
lret
mov
repnz
les
add
cmp
in
push
pop
test
inc
fisttpl
sbb
mov
xchg
nop
jmp
outsb
cmp
arpl
fnsave
cmc
jns
xchg
push
mov
loop
int
sbb
shll
enter
fdivr
jb
rclb
loop
xlat
outsb
testb
neg
xor
in
dec
jg,pn
push
jno
inc
jmp
inc
sbb
xchg
mov
popa
es
xchg
or
push
je
icebp
cmp
sahf
mov
inc
fsubs
mov
arpl
pop
dec
cmpl
push
test
xchg
dec
in
push
in
sub
inc
dec
xchg
das
inc
cmpsb
jae
adc
adc
jae
or
rcrl
sbb
clc
jp
pop
xor
jmp
push
mov
popa
ja
pop
jo
xlat
mov
jo
pop
mov
fs
scas
pop
mov
push
or
lds
std
iret
ds
out
mov
pop
js
mov
repz
cld
add
std
pusha
jecxz
pop
das
fldt
inc
pusha
jmp
ret
lea
inc
les
xchg
and
jmp
movd
add
aas
in
jg
pusha
mov
ljmp
push
mov
and
mov
sbb
addb
out
negb
test
fwait
dec
sub
xor
sub
sbb
cmp
loopne
mov
hlt
jae
or
ss
adc
das
inc
push
pop
in
pop
push
in
cmp
xchg
test
cmpl
cmp
pop
mov
jae
das
sbb
pop
lds
xchg
jecxz
bswap
jbe
cmc
dec
add
xchg
pop
test
jno
or
or
sbb
jns
mov
imul
cmp
iret
mov
lods
repnz
sub
loop
dec
ds
sbb
dec
sbb
sbb
ret
mov
jnp
out
dec
xchg
dec
lcall
inc
aam
cmpsl
inc
lret
lahf
sbb
xchg
dec
mov
sub
clc
mov
popa
mov
lock
jbe
test
xchg
insb
xchg
jbe
add
cmp
lock
test
test
loope
inc
out
fisttpll
pop
andps
movsl
and
fcmovu
les
dec
int3
test
adc
bound
or
dec
adc
cld
sbb
pushl
insb
in
nop
aam
pop
add
mov
aas
ljmp
in
pop
in
push
xchg
outsl
sub
fs
xchg
in
inc
cmpsb
test
jo
mov
jno
add
xchg
pop
bound
outsl
lret
cmp
data16
lret
psubd
mov
jo
dec
fiadds
out
in
inc
mov
pop
xchg
js
sahf
lds
or
fsts
or
out
call
movsb
adc
scas
pop
cmpsl
scas
lcall
adc
dec
jae
xor
cld
or
xrelease
jo
hlt
es
inc
test
dec
xor
jbe
test
xchg
pop
popf
adc
imul
mov
das
adc
cmpsl
sub
jbe
dec
jnp
jle
inc
jp
jge
mov
aam
fmuls
add
mov
xor
fucomip
mov
push
sbb
adc
movsb
xchg
jp
rolb
loope
aas
jae,pt
fs
sub
push
incb
xor
repnz
cmp
mov
les
dec
pop
pop
dec
int
fsubrl
jl
mov
dec
popa
sbb
mov
popa
mov
sub
test
dec
adc
sub
daa
imul
mov
dec
push
bound
pop
or
push
test
push
xor
mov
mov
or
sbb
sbb
mov
popf
fldenv
cmp
or
leave
cmp
add
mov
rcr
mov
int
cmpsl
cmpl
popa
sbb
cmpsl
jge
shrb
jo
icebp
sbb
jae
cmp
lock
fldenv
or
adcl
push
rolb
rcl
and
jp
sub
faddl
cmpsl
cmpl
jge
pop
add
stc
inc
leave
jbe
pop
pop
sbb
push
popf
movsl
xchg
ja
fsubl
cmp
sbb
xchg
sub
out
stos
sub
cwtl
and
mov
sub
loope
fwait
inc
or
add
and
pop
dec
sub
fs
dec
xor
sbb
movsb
stos
cmp
fcoml
test
dec
aad
scas
pop
fcomi
jae
mov
and
cmp
push
outsl
xchg
gs
xor
jbe
mov
cmc
aam
insl
out
mov
xchg
fcmovnb
ror
lcall
pop
jo
add
test
push
xchg
push
mov
leave
enter
sbb
sbb
orb
popa
sbb
pop
js
add
pop
ds
mov
inc
push
leave
xchg
sub
dec
ss
imul
add
push
push
pop
jmp
xor
in
add
mov
mov
fidivl
mov
and
sbb
sbb
notb
pop
sbb
repz
cmp
mov
dec
ss
sbb
pop
mov
pop
inc
pop
jns
inc
and
xor
popf
push
loope
ret
mov
inc
xchg
xchg
mov
jae,pt
sti
cld
sbb
sbb
imul
ds
fwait
adc
mov
push
push
mov
ljmp
rcrb
sbb
jae
xchg
cld
lahf
mov
sbb
mov
adc
pop
sbb
jae
or
data16
sti
pushf
sbb
sbb
icebp
lcall
movsl
inc
mov
aad
sbb
js
mov
adc
pusha
outsl
popf
adc
ret
addr16
push
dec
jl
subb
int
pop
adc
arpl
cld
sbb
orb
dec
clc
nop
adc
mov
jae,pt
xchg
dec
sbb
popf
mov
call
dec
cmp
pop
cmp
bound
rcl
int3
pop
jge
cmc
sbb
out
out
mov
mov
popa
sbb
mov
mov
pop
addl
add
pop
xor
sbb
mov
bound
roll
in
out
decb
ss
push
adc
inc
imul
sub
xchg
mov
popa
stos
mov
adc
negb
loope
movsb
sahf
inc
xchg
mov
movsl
outsl
out
push
hlt
popf
xchg
std
and
xchg
inc
jb
push
dec
inc
cld
sbb
pop
dec
orl
inc
aas
add
mov
pop
ret
push
and
mov
jae
leave
cwtl
push
xor
mov
or
inc
shr
imul
sbb
lahf
dec
js
or
out
repnz
push
cmp
mov
mov
mov
lds
and
add
aaa
xchg
test
cmp
fwait
dec
cltd
or
test
fsubs
mov
mov
test
leave
je
popa
sbb
and
das
rcr
imul
push
das
sub
scas
mov
add
dec
sahf
sbb
or
adc
sbb
bound
sub
push
mov
sub
cmp
xchg
mov
loop
mov
jl
hlt
xor
cs
sbb
add
or
cmp
insb
ret
cld
mov
dec
cmpsl
das
fmul
rclb
in
xchg
cwtl
sbb
aaa
psrld
filds
or
cli
call
lods
iret
mov
daa
aas
cmp
jmp
sbb
jp
cmp
das
popa
sbb
fcoml
enter
mov
pop
pop
xchg
fwait
mov
adc
test
bound
and
cld
jno
pop
pop
add
hlt
mov
mov
je
mov
cmpb
aaa
loope
inc
aaa
inc
mov
jnp
dec
pop
or
mov
pop
jae
jae
cld
pop
pop
popl
stos
insl
cmpsb
stos
inc
aam
push
push
sub
into
inc
mov
js
leave
jp
mul
pop
mov
popa
sbb
popa
outsb
push
adc
frstor
lea
into
pop
iret
stos
lds
aad
mov
sub
cmp
jl
dec
sbb
repz
insb
xchg
popa
mov
das
lcall
test
xor
out
push
into
mov
pop
test
test
push
ljmp
and
sbb
dec
add
and
mov
pop
jg
loop
sti
mov
cld
sbb
test
mov
cwtl
adc
ss
and
cmp
dec
cltd
cwtl
fs
and
push
sub
out
shll
adc
sbb
cs
or
lea
push
repz
fbstp
jno
test
jae
adc
adcl
addr16
ret
jae
fwait
scas
adc
in
inc
ja
imul
mov
fcomps
or
xchg
data16
movsl
mov
scas
add
mov
rcll
pop
scas
adc
pop
xor
adc
jg
lods
es
mov
sub
fisttpl
cmp
fdivrs
arpl
mov
sbb
sbb
push
dec
xor
les
dec
push
xchg
mov
pop
movsb
std
xchg
adc
adcl
loop
icebp
cltd
gs
scas
loopne
jno
lcall
sub
sbb
call
cld
sbb
shll
std
push
repz
cli
cli
push
add
sbb
cmc
push
mov
in
jae,pt
push
jb
call
addr16
push
xchg
add
jecxz
ja
test
add
cmp
sbb
push
daa
inc
pop
mov
jle
sub
ljmp
pop
lods
and
xor
and
daa
in
dec
push
arpl
loope
rclb
lcall
mov
movsl
mov
or
cmp
lcall
pop
stos
mov
paddd
sbb
addb
mov
sbb
sbb
daa
loopne
aam
sbb
sub
jbe
xchg
hlt
bound
mov
pushf
bound
inc
xchg
cmp
push
inc
incb
push
sbb
xor
add
into
shlb
movsl
pop
and
or
ds
cmpsb
xchg
mov
dec
lcall
sub
pushl
xchg
cld
add
mov
cmp
cmpsl
jl
adcb
cltd
test
jmp
inc
xchg
jb
xor
mov
loopne
movsb
add
mov
in
adc
dec
xchg
ret
or
or
inc
sub
or
in
mov
push
rcrl
push
movsl
sbb
lcall
adc
xor
inc
dec
mov
xor
sbb
cmp
arpl
inc
sbb
mov
popa
sbb
mov
push
sub
fsts
inc
lret
in
jp
mov
aaa
adc
push
icebp
cmpsl
mov
inc
in
jg
gs
pop
cmpsb
sbb
outsb
jne
popa
sbb
sbb
in
jb
add
shlb
sbb
inc
sbb
pop
stos
adc
bound
mov
push
mov
es
push
sub
push
adcl
cli
xchg
pop
imul
pop
std
pop
or
arpl
rorb
cmp
sub
mov
or
out
cmp
mov
xchg
sbb
cmpsl
sbb
mov
dec
adc
pop
out
lret
repz
iret
insl
mov
test
outsl
ss
test
ret
vcvtdq2ps
mov
add
loope
leave
das
and
sub
sbb
and
enter
dec
imull
popa
sbb
scas
jns
sub
push
push
jl
ss
sub
sarb
mov
cmp
clc
out
shlb
push
jmp
jo
pop
push
or
jge
mov
cld
sbb
scas
mov
popa
nop
lock
les
pushf
into
xchg
lock
test
and
cld
pushf
std
dec
test
stos
dec
imul
popf
out
aam
fdivrl
mov
sahf
sub
xchg
jecxz
inc
or
outsb
jg
xor
inc
jmp
int3
and
mov
adc
or
adc
xchg
mov
dec
dec
mov
ljmp
push
nop
push
push
mov
testb
pop
in
lahf
arpl
mov
sub
das
daa
mov
rsqrtps
xchg
outsb
sub
push
loopne
xor
and
repnz
test
xor
insl
jp
pop
fistl
xchg
ja
pushf
cmpsl
insl
mov
cmpsl
or
add
mov
mov
subl
lahf
incl
add
mov
add
xchg
icebp
mov
icebp
addr16
pop
mov
fwait
sbb
pop
and
insb
cmp
add
dec
cmp
mov
xchg
sbb
divb
pop
xchg
adc
imul
popa
sbb
in
and
test
fwait
rcr
fwait
cmp
int
pop
ljmp
inc
sbb
cld
pop
push
js
add
jne
insl
shlb
cmp
int
xchg
aam
cld
in
jae,pt
cmp
dec
mov
es
push
fldcw
movsl
rcrl
pop
insb
hlt
xchg
aad
enter
ljmp
fldenv
mov
dec
shll
add
jae
shrb
les
dec
dec
push
or
push
pop
cmp
xchg
outsl
loopne
jl
xchg
shr
daa
xchg
loop
lds
sub
aam
pop
das
dec
dec
jg
int3
out
sbb
mov
dec
arpl
adc
xor
xchg
push
jb
es
inc
fsubs
nop
jo
fdivrs
enter
jns
add
in
icebp
jl
xor
xchg
and
jo
pop
xchg
sub
mov
push
xor
pusha
lea
push
dec
fdivp
sbb
std
iret
dec
pop
mov
fwait
cmc
mov
sub
or
or
sti
imul
mov
lcall
push
xor
push
into
fldl
pop
je
dec
mov
loope
jmp
jl
sub
outsb
cmc
pop
or
popf
dec
xor
cmp
dec
sbbl
sub
sub
dec
cmp
sar
ljmp
sub
sti
cmp
dec
popa
sbb
add
cmp
int3
pop
lock
mov
andb
gs
push
mov
or
mov
sbb
icebp
jae
dec
stos
push
push
aam
sbb
sub
ret
incb
mov
rorl
lahf
mov
and
repnz
inc
in
ds
scas
sub
adc
scas
shrb
in
mov
in
addr16
and
or
les
aas
mov
mov
mov
cmp
adc
add
jno
incl
push
push
mov
jne
popa
sbb
bound
lahf
xchg
push
rolb
outsl
xorl
adc
mov
inc
pop
mov
call
dec
push
out
push
jp
ficoms
and
aas
shl
sub
push
inc
xor
insl
dec
clc
dec
and
cld
sbb
decb
notb
movsl
repnz
cmpsl
xor
pop
das
pop
lods
mov
mov
jne
push
rcrb
push
les
leave
or
adc
imul
in
jae,pt
add
sbb
hlt
push
xchg
mov
aaa
imul
pop
repz
push
add
jmp
jp
rorl
push
xchg
lods
adc
or
decb
dec
and
out
sub
xor
pop
xchg
fldt
loop
icebp
mov
or
inc
int
mov
decl
imul
imul
popa
sbb
and
arpl
mov
cmp
out
lods
imull
sub
bound
mov
and
mov
dec
lods
lock
jno
ss
enter
fldl
cmpsb
cmp
sub
fbld
ja
and
cwtl
add
movsb
loopne
rcll
xchg
sbb
and
xlat
arpl
lcall
aaa
cmpsl
add
roll
adc
jae
fwait
adc
leave
data16
jmp
and
adc
add
add
jo
iret
sbb
jae
fdivrs
leave
repz
sbb
mov
out
ss
xor
fwait
es
mov
pop
dec
into
rolb
ljmp
adcb
jae
cli
and
cld
sbb
mov
jns
aas
and
mov
cltd
sbb
mov
pop
jne
popa
sbb
sbb
mov
pop
push
test
jnp
repnz
adc
mov
mov
mov
into
xlat
push
pop
popa
ljmp
rcrb
dec
cmp
jp
lret
xchg
push
push
adc
pop
int
add
add
mov
sbb
fwait
push
pusha
dec
int3
add
in
jbe
cmp
cwtl
and
in
hlt
sbb
pop
mov
popa
sbb
in
int
ss
add
sub
popf
lahf
ret
aam
les
mov
sbb
push
mov
mov
xchg
movsb
idiv
icebp
sahf
punpckhbw
xor
xchg
addr16
mov
mov
mov
movsb
dec
pop
mov
mov
pushf
mov
xor
mov
insb
add
psllq
sub
and
lret
mov
es
jae
push
push
cs
sti
inc
inc
lret
js
xor
xchg
sahf
add
push
jo
mov
cwtl
jnp
fs
or
js
jg
fwait
scas
or
decb
stc
sbb
pop
cmpsl
adc
adc
jl
dec
dec
jp
scas
xor
push
dec
sbb
jl
xchg
mov
xchg
or
dec
and
inc
add
pop
mov
enter
xchg
dec
add
lea
ret
adc
pop
imul
or
aas
stos
add
dec
dec
and
ds
dec
and
add
sbb
pop
popf
adc
lods
or
dec
mov
mov
stos
lret
mov
fmuls
mov
lret
sbb
adc
scas
mov
popa
std
insb
add
sub
and
ss
daa
mov
stc
jo
sub
jp
out
dec
movsl
mov
cmp
cld
repz
push
jno
into
mov
adc
stos
std
push
sub
pop
movsl
adc
or
ljmp
add
mov
xor
cwtl
fucomip
add
aaa
push
jecxz
cli
add
arpl
dec
or
jl
push
pop
rorb
cli
dec
adc
sbb
cmpsl
sti
std
mov
in
scas
loop
fldl
lea
dec
xor
xor
jne
push
aas
call
jl
xchg
fimuls
sbb
cmpsl
andl
popa
sbb
mov
mov
inc
pop
adc
mov
loop
divb
lcall
inc
mov
out
dec
test
mov
mov
lret
mov
fwait
xchg
xchg
sbb
sbb
sarb
mov
stos
adc
jmp
call
scas
lahf
in
sti
fildll
sub
lret
fwait
popf
or
shrb
bound
add
jae
adc
inc
or
jae
adc
ss
jae
sbb
pushf
jbe
sbb
mov
pop
add
mov
push
xchg
pushf
add
sti
and
das
roll
clc
pushf
mov
and
jbe
push
mov
outsb
jb
xchg
loope
push
or
or
cmp
add
push
push
adc
sbb
cld
mov
cld
lock
movl
push
aaa
sbb
or
or
mov
ficomps
fnstsw
je
popa
sbb
or
fisubrl
mov
mov
insb
ds
popf
jge
sbb
jno
mov
shlb
mov
jae,pt
pop
push
add
sbb
jae
mov
xor
mov
and
push
mov
jbe
in
cmp
leave
test
in
push
ds
inc
lcall
xor
les
pusha
cmp
push
lods
pushf
leave
enter
pop
inc
rorb
and
rclb
sub
jae
add
jae
adc
xor
and
cli
rcl
mov
pop
outsl
fstl
or
repnz
xor
adc
out
inc
jae
std
mov
mov
out
adc
mov
movsl
pop
xchg
std
inc
popa
dec
mov
out
out
push
cmp
cmp
xchg
inc
sarb
repnz
adc
pop
add
push
jae,pt
xchg
pop
sbb
mov
popa
sbb
lahf
ss
xchg
sub
cld
sbb
shlb
js
cmp
mov
shl
push
inc
popa
xor
fsubp
dec
mov
sahf
lret
dec
lret
dec
loope
in
cmp
xchg
and
andb
or
dec
js
mov
cmp
pop
divb
call
lret
sbb
mov
fmuls
push
enter
out
leave
jg
in
orb
sbbl
cmpsb
dec
pop
lods
lods
mov
mov
pop
frstor
stos
cmpl
push
ret
inc
xchg
aaa
add
movsb
sbb
jecxz
popa
pop
in
pop
mov
and
jecxz
sbb
pop
mov
cmp
jae
push
xchg
xor
cmpsb
or
sub
pop
fdivrs
mov
outsb
dec
or
mov
lea
xor
cli
add
std
xchg
ret
jnp
dec
rclb
jl
iret
mov
lret
and
clc
push
push
mov
ljmp
dec
outsl
std
adc
addl
std
cli
cmpsl
or
pop
in
out
mov
pop
pop
dec
sub
sti
je
cld
sbb
mov
imul
xlat
adc
push
pushf
cs
lods
mov
addr16
or
jmp
movsl
in
mov
pop
sbb
cmpsl
fwait
add
lods
and
push
dec
cmpsb
dec
or
arpl
sbb
popf
cmp
or
popa
daa
jle
jae,pt
push
dec
inc
cld
sbb
test
imul
shrb
int3
shlb
insl
xchg
add
mov
cwtl
test
jno
pop
popa
sbb
sahf
push
jae
adc
cld
sbb
loop
in
xchg
sbb
dec
js
pop
dec
jae
ss
mov
shll
popa
pop
cmp
incb
cld
cmpsl
mov
sub
cld
cmpsl
add
push
popf
clc
mov
cmp
mov
insl
inc
lcall
lock
pushf
aad
dec
ds
push
jne
repz
jno
nop
ja
test
and
cmpsb
xor
lahf
mov
add
xchg
mov
push
push
add
sbb
jae
test
sbb
out
es
pop
cmp
mov
cmp
call
push
jae
arpl
popf
lea
in
push
push
dec
ds
sbb
aam
sbb
in
mov
push
pop
mov
sub
sub
ljmp
adc
ss
xor
sbb
movsl
mov
mov
pop
cld
data16
les
sbb
xchg
ja
jecxz
or
jno
dec
call
sbb
mov
jg
sub
or
inc
or
sarb
add
ficomps
repnz
in
movsl
lods
sub
push
push
sbb
cltd
xor
test
inc
push
aaa
mov
xlat
or
das
jbe
xor
cmp
stos
push
mov
cmp
push
pop
in
sbb
cld
lock
sbb
cmp
ss
sti
xchg
pop
inc
pusha
mov
mov
fbstp
test
scas
jne
mov
aad
daa
xchg
dec
dec
test
xorl
adc
mov
sub
test
sub
mov
lcallw
sbbb
adc
sbb
mov
in
out
out
sbb
mov
fldl
add
mov
xchg
out
sbb
stc
xchg
push
or
sahf
add
daa
mov
ljmp
jp
out
dec
xchg
inc
test
jmp
js
pop
ljmp
int3
addb
ss
jb
inc
movsb
in
push
mov
std
pushf
inc
adc
dec
mov
jb
add
stos
pop
orps
shrl
sub
jl
ficompl
lcall
inc
jmp
jb
mul
lods
push
jmp
adc
mov
out
nop
sbb
sbb
cltd
into
cmp
xor
dec
lret
mov
aas
sbb
outsl
and
pop
pushl
mov
xchg
test
dec
rcrl
popa
or
in
jl
std
lcall
sub
test
fistpl
or
sti
dec
inc
adc
jno
mov
push
and
xchg
jp
out
xor
cmp
ffree
dec
add
push
adc
mov
mov
jns
mov
call
cmpsl
sub
jge
push
push
lods
fwait
jmp
add
push
pushf
mov
pusha
cmpsl
jle
xchg
shr
pop
or
pop
adc
fstl
xchg
or
dec
subb
push
jle
negb
ss
push
aas
add
bound
data16
shl
fildl
jbe
pop
xlat
fidivl
sti
cs
inc
je
pop
daa
push
in
mov
cs
inc
jg
xor
lds
pop
sbb
mov
sti
fiadds
or
push
sub
mov
pop
mov
popa
sbb
or
jl
and
xor
shll
not
xor
add
mov
mov
inc
jle
jo
sub
outsb
mov
push
aas
outsb
push
and
sbb
cmp
dec
pushf
rcrb
jbe
lahf
popf
mov
hlt
dec
and
repz
arpl
stos
iret
xchg
adc
cmp
loope
loopne
push
jo
cli
sub
inc
mov
in
xorb
clc
mov
fwait
jnp
fisttpll
outsb
push
dec
gs
sarb
xchg
or
cli
imul
orl
cmpsl
lock
xchg
jmp
daa
mov
sub
cmp
out
daa
out
push
testb
movb
out
xchg
or
cmp
cwtl
test
frstor
ja
idiv
push
mov
adc
mov
jbe
xchg
jb
rolb
mov
and
rcrl
arpl
mov
call
xchg
inc
scas
filds
cmpsl
mov
xor
fwait
in
pop
shrl
jmp
sbb
outsb
xchg
fisttps
hlt
mov
stos
jge
xor
mov
in
daa
test
outsb
sub
pop
sub
push
int
lret
mov
add
cmpsb
mov
idiv
push
pushf
mov
sarl
sbb
lds
imul
pop
in
jl
mov
addr16
dec
mov
adc
cmp
mov
int3
out
xor
roll
inc
jbe
push
mov
and
pop
jl
adcb
pusha
sbb
push
cmpl
mov
cld
sbb
pop
popf
ret
mov
aaa
or
lds
jo
cmpsb
out
pushf
mov
rcl
adc
xor
jae
push
pop
daa
mov
xchg
mov
rol
lds
idiv
test
shrl
mov
jo
outsl
push
sub
sti
push
xchg
fisubrs
das
movsb
fsubl
pop
and
inc
inc
inc
fwait
leave
jne
xchg
jbe
sti
mov
cld
sbb
push
and
dec
mov
adc
jl
cmpb
fdivl
ror
je
add
cwtl
mov
lret
test
inc
jae,pt
pop
push
mov
mov
sub
jmp
sbb
stc
sbb
inc
sub
mov
xlat
je
dec
filds
push
add
cld
push
incl
cld
sbb
cs
jae
loopne
adc
inc
mov
inc
and
ljmp
loope
decb
push
mov
dec
stos
sbb
dec
mov
sbbb
psubb
in
mov
adc
je
mov
inc
pop
and
pushf
sahf
scas
leave
pop
sbb
or
and
mov
and
rorb
fstps
and
mov
mov
sti
pop
test
mov
xor
cmpsl
pushf
cmp
cmp
mov
xchg
add
loop
add
sbb
jae
inc
stos
dec
test
cs
mov
test
xor
adc
mov
into
je
aas
das
movq
pushf
hlt
pop
jno
ds
fstpl
dec
push
mov
jb
fiadds
.byte
