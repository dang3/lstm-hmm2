jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
rorb
imul
aam
cmpb
mov
clc
cltd
js
add
push
add
or
add
push
add
add
add
data16
add
inc
add
add
mov
add
in
jbe
cltd
add
fs
add
add
add
add
movsl
add
add
add
add
pop
add
add
add
mov
cmp
mov
xchg
add
add
add
and
xor
testl
sahf
add
push
add
cmp
dec
add
movsl
add
inc
add
mov
daa
add
cmp
xlat
add
jb
add
pop
add
add
add
add
add
push
add
add
sbb
sub
int
cmp
add
sbb
push
add
add
add
push
add
add
mov
verw
cmp
xlat
add
jb
add
adc
pop
add
add
adc
add
leave
add
inc
add
testl
cmp
aas
add
js
mov
add
testb
add
add
add
jae
pop
add
add
pop
add
add
testl
jno
push
add
jno
out
add
xor
testl
movsb
add
add
add
add
sbb
pop
add
pop
add
insl
add
add
add
out
cmp
add
adc
push
add
cmp
xlat
add
add
adc
add
pop
add
add
add
sbb
add
push
add
pop
add
add
add
add
add
add
add
add
cmp
pop
add
add
add
add
pop
add
add
add
dec
add
add
and
pop
add
add
add
add
movb
add
mov
cmp
push
add
add
testl
testl
mov
jne
movsl
add
insl
add
add
add
add
add
addb
add
add
add
or
loopne
ret
add
add
add
add
xchg
add
testl
jne
int3
add
push
add
js
clc
add
add
add
cmp
inc
add
add
testl
arpl
dec
add
add
mov
add
add
testl
xchg
add
add
add
add
add
add
inc
add
jmp
add
test
xor
testl
ds
add
add
add
add
add
in
cmp
push
add
rolb
add
addb
add
add
add
jnp
adc
add
add
add
add
add
add
add
jnp
incb
sahf
add
cmp
testl
cmp
add
incb
aam
addb
add
add
jne
inc
add
add
add
sahf
add
add
add
ds
add
add
add
add
xor
push
add
dec
add
add
pop
add
add
mov
sub
insl
add
add
xor
pop
add
add
add
cmp
mov
add
add
add
add
add
add
jne
cli
add
add
add
test
jne
sub
add
add
add
add
js
push
add
add
add
add
dec
add
test
ljmp
add
add
add
jg
xchg
add
add
add
add
add
add
add
add
xchg
add
add
pop
add
add
mov
sarb
push
rcll
xor
jl
xchg
shrb
or
icebp
imul
add
fwait
jno
cs
mov
xchg
arpl
popf
mov
repz
ss
lcall
daa
or
notb
in
sub
cmp
push
and
repnz
mov
enter
push
mov
xor
cmp
sub
subb
dec
aas
bound
add
cwtl
add
sahf
and
mov
jmp
lcall
jne
lret
dec
mov
sar
sub
inc
int3
movsl
decb
jno
sbb
andl
pop
call
pop
sub
fidivrl
push
test
insl
scas
push
imull
push
cld
stos
cmp
repz
ja
dec
pop
cwtl
hlt
jg
inc
push
mov
fstpl
insl
cmp
mov
repnz
cwtl
push
mov
inc
jns
inc
push
or
imul
arpl
int
xchg
imul
dec
sbb
xchg
dec
mov
inc
mov
mov
push
and
movsl
imul
sub
mov
outsb
pop
cmpsb
push
mov
mov
xchg
push
outsb
loopne
cli
xor
ss
cmp
shr
rcrl
xchg
rolb
mov
movsl
push
inc
leave
jg
add
inc
mov
mov
and
arpl
mov
repnz
shlb
testb
pop
xor
inc
sahf
call
aaa
sbb
xor
stos
dec
inc
adc
push
and
jecxz
mov
sbb
jo
cmp
adc
shll
push
pop
add
jle
flds
les
stos
int
aas
and
adc
pop
push
pop
hlt
sahf
mov
movsl
adc
fs
and
inc
dec
add
or
dec
rcrl
cld
adc
mov
aas
xchg
add
data16
fdiv
pop
and
dec
es
jb
es
jbe
cmp
lods
cli
sbb
push
enter
mov
cmpsl
or
mov
pushf
mov
mov
cld
add
push
cli
test
ret
dec
ret
movsb
push
dec
pop
and
sarb
popf
dec
stc
or
sub
adc
pop
rolb
pusha
inc
and
repz
cmpsl
fildl
pushf
outsb
adc
xor
fcomip
jbe
fmuls
loopne
add
or
icebp
inc
sti
lods
mov
incb
movsb
jb
or
repnz
push
fwait
ljmp
bound
rcl
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
xor
movsl
add
mov
lds
cmc
mov
movsl
adc
cmc
inc
in
aad
lds
test
mov
lds
push
in
lea
and
in
aad
lds
test
mov
lds
push
in
cmc
mov
movsl
ss
stos
push
popf
adc
push
jl
and
mov
in
rcr
outsb
mov
pusha
pop
in
dec
jle
cmc
inc
pop
out
test
mov
stc
mov
pop
pop
in
mov
inc
jno
ljmp
lock
aam
cmp
iret
lea
sub
stos
mov
push
out
gs
push
insb
push
mov
add
mov
lea
stos
sub
ljmp
lea
lret
lds
cmp
pop
push
popl
cli
pop
pop
test
or
js
out
xor
add
cmc
les
in
iret
inc
insl
ffree
and
inc
in
aad
lods
pusha
imul
mov
lds
push
in
cmc
mov
movsl
adc
cmc
inc
in
aad
lds
orl
mov
add
hlt
jl
adc
inc
jmp
xor
loopne
lock
shlb
test
inc
xchg
rorb
insb
aam
rclb
mov
cmpsl
xor
sbb
fnstsw
shlb
gs
in
cmc
mov
movsl
adc
cmc
inc
in
aad
lds
test
mov
lds
push
in
cmc
mov
movsl
adc
cmc
inc
in
aad
lds
test
ja
mov
cmpsb
and
push
leave
push
arpl
rorl
dec
mul
xor
out
jbe
arpl
push
jge
shlb
lcall
movsl
fldl
jb
stos
mov
sbb
loop
push
arpl
pop
leave
mov
xchg
sub
jno
in
dec
xor
push
in
xlat
test
fnsave
out
pop
das
adc
mov
mov
jnp
repnz
xor
sub
sbb
push
adc
xchg
mov
sahf
shll
scas
sub
xorb
or
push
add
fldcw
sbb
outsl
or
leave
cmp
nop
js
test
imul
gs
cmpsb
lock
dec
andb
inc
pop
pop
mov
jo
push
in
je
mov
xchg
scas
test
xchg
lds
or
and
dec
cmp
xchg
dec
movsl
lahf
loop
mov
xchg
stos
jmp
sbb
push
repnz
adc
xchg
ret
test
mov
xor
add
mov
add
sub
out
lcall
cltd
jmp
inc
add
out
rcll
bswap
mov
adc
xlat
into
push
lods
pop
xchg
sbb
loopne
cmp
shrl
adc
xchg
dec
mov
ja
mov
popf
fsubrl
cld
jecxz
das
sbb
and
xchg
mov
ret
or
aas
sbb
cmp
mov
add
loope
xchg
adc
mov
std
in
iret
push
test
dec
int
mov
out
inc
sbb
xor
pop
in
movlps
xchg
cmpsl
adc
jle
jb
test
aas
mov
or
xchg
lock
lret
adc
shlb
xchg
ret
adc
adc
xlat
outsl
jbe
loope
sbb
sbb
call
sbb
int
decl
jb
mov
cmp
shlb
sub
cld
iret
cltd
fdivrs
jae
dec
or
cmp
push
and
sbb
cmpsb
pop
jno
insl
pop
adc
pop
sahf
divl
xor
out
and
push
dec
ficoms
push
and
or
shl
fsubr
popf
scas
pushf
mov
xchg
fimuls
xchg
mov
sub
inc
stos
stos
add
cmp
dec
stos
scas
push
sub
iret
sbb
aaa
out
nop
sbb
cld
sbbb
mov
dec
sbb
jg
cld
pop
ja
and
xchg
sub
dec
push
mov
int3
cmp
call
lea
aad
inc
rcrb
mov
dec
jmp
adc
lret
push
or
mov
popf
pop
insl
fisubrs
out
fisubs
jns
mov
aad
dec
sbb
jl
or
movsb
xchg
ret
gs
inc
and
pop
scas
ret
rcll
pop
popf
sub
and
jg
and
dec
stos
sahf
into
testb
mull
stos
xor
pop
stos
inc
nop
inc
incl
scas
xchg
xlat
adc
inc
mov
popf
adc
sub
xchg
cli
fmul
and
dec
fistl
xchg
mov
fistpll
xchg
xor
adcb
dec
cwtl
jae
add
scas
push
leave
dec
pusha
movsl
push
push
add
lods
movsl
xlat
dec
or
movsb
sub
inc
lods
sub
loopne
stos
jecxz
ret
cmpsb
imul
push
adc
inc
fildll
lea
outsb
jae
xorb
movsl
leave
mov
jo
or
sbb
das
iret
lods
in
out
dec
mov
jo
inc
push
movsb
mov
dec
out
lds
push
loop
and
test
mov
hlt
test
in
lret
pop
arpl
cmp
push
shrb
js
aad
mov
jae
inc
pop
push
rcrl
adc
adc
insb
test
test
out
lods
sbb
out
xchg
lahf
rcr
adc
shr
or
jae
jecxz
push
adc
adc
dec
lds
cwtl
sbb
inc
fstps
push
adc
sub
rol
scas
and
mov
movsl
mov
enter
scas
fidivs
and
add
sbb
ds
and
dec
test
mov
mov
adc
pop
sar
and
test
cmpl
mov
repnz
pop
lods
ja
add
out
sti
nop
sti
add
cmp
out
ret
pop
add
sahf
out
cmp
mov
dec
xchg
gs
leave
lea
add
in
mov
push
iret
imul
dec
inc
cs
fwait
shll
add
enter
push
inc
push
adc
outsb
js
pop
push
movsb
sar
jp
int3
std
movsb
pop
xchg
int3
jo
and
xor
lret
icebp
add
dec
mov
int3
xchg
imul
addb
popf
rcl
scas
aaa
add
xor
aaa
pusha
sub
cltd
loop
mov
mov
das
and
jmp
xlat
ljmp
cmp
sbb
jns
dec
push
push
lea
cld
sub
ret
leave
and
push
fcoms
add
fstpt
inc
movsb
pop
add
or
andl
bound
sar
cmp
out
mov
fildl
inc
add
pop
pop
mov
xchg
cmpsb
arpl
xlat
xchg
cmpsb
push
rcll
incl
nop
push
sbb
out
xchg
sahf
lods
xchg
aad
dec
adc
sbb
push
enter
mov
dec
fists
adc
adc
outsl
add
xchg
sti
jo
addb
adc
cltd
mov
mov
je
ret
daa
and
pop
jl
out
popl
cmpsl
lret
or
mov
fdivs
out
xor
fucomip
mov
mov
fsubs
data16
sti
mov
sub
sbb
dec
hlt
pop
mov
fs
outsl
fcoms
movsb
stc
or
nop
xor
mov
rolb
rorl
fnstcw
not
xchg
jecxz
scas
mov
inc
push
mov
loope
jne
push
mov
out
adc
xor
mov
add
lea
sub
ret
sub
lock
lcall
out
mov
adc
lcall
push
mov
movl
add
movsl
aaa
push
push
pop
cmp
lea
pushf
je
cmpsl
push
aam
clc
and
test
ss
push
ja
addr16
push
mov
int
jg
movsl
cmp
insb
mov
fwait
sub
fcomp
adc
pop
push
rclb
lret
adc
in
mov
inc
std
sbb
dec
int
test
xchg
jns
adc
mov
rorb
mov
hlt
in
inc
inc
mov
cli
xlat
repz
iret
fstpl
sbb
inc
xchg
lcall
lret
dec
adc
jg
push
mov
into
jnp
xchg
adc
inc
lea
dec
push
push
push
cltd
inc
out
dec
fnsave
loope
out
sub
std
jle
insb
dec
push
pusha
cmpb
cmp
mov
std
call
and
addl
addr16
xchg
daa
lock
xor
jl
mov
sarl
enter
mov
scas
or
and
repz
jno
rclb
mov
cmp
int3
mov
inc
xchg
loop
cmp
inc
sub
mov
nop
rcrb
mov
jmp
push
hlt
jno
mul
rcrl
mov
xchg
sub
popf
xchg
inc
mov
cmpsb
sbb
sbb
insb
xchg
pop
xor
bound
cld
loope
popf
gs
jae
sti
adc
dec
aas
insb
lock
leave
fs
pop
adc
xchg
aad
push
ret
inc
mov
lods
ret
lods
mov
aad
test
jnp
fldl
lcall
mov
lock
inc
cmpsl
mov
mov
inc
push
mov
jecxz
cmc
adc
and
idivl
clc
jg
sub
or
xor
fs
push
xchg
movsl
out
pusha
aam
mov
loop
dec
sub
fadds
out
cmpsb
into
fidivrl
and
pop
adc
scas
fmull
xchg
leave
jl
jb
int
aad
jae
and
orl
fsubrl
pop
xor
lret
rolb
jg
pop
pop
sub
mov
pop
dec
cmp
fcmovnbe
xor
sbb
push
repz
gs
adc
and
push
fdivl
mov
lret
dec
mov
mov
xor
leave
ljmp
mov
lahf
inc
fiadds
sbb
jnp
jb
lds
sub
ja
cmp
adc
jle
aaa
aad
pop
stos
int3
add
or
mov
lahf
into
adc
pop
push
int
ja
ret
add
sub
insl
xchg
pop
inc
mov
out
xchg
xor
sbb
shl
cli
inc
loope
testb
dec
lret
inc
xchg
cmp
mov
cld
pop
pop
orb
and
arpl
or
test
and
lock
sahf
cld
inc
stos
outsb
mul
int
dec
loop
sahf
or
mov
in
test
xchg
hlt
inc
inc
jge
lods
int3
add
rcll
or
sub
fsubl
mov
cmp
popa
pop
or
fwait
pop
mov
sub
ret
fildl
add
push
mov
pushf
stos
jns
inc
gs
and
jno
ficoms
es
push
mov
jnp
aaa
inc
sbbb
outsb
push
jg
sub
pusha
mov
call
pop
aas
int
adc
dec
adc
add
mov
push
dec
pop
xor
imul
cwtl
pop
push
jp
mov
xchg
jb
arpl
fsubp
daa
mov
jb
lret
lret
push
mov
mov
fiaddl
shr
orb
icebp
outsb
inc
jmp
dec
xchg
ss
es
jge
movb
dec
stos
jne
lcall
jg
mov
ficoml
das
mov
out
adc
flds
xchg
outsb
xorb
in
aam
scas
xchg
xlat
mov
movsb
mov
xlat
dec
aas
or
jb
leave
lods
mov
test
xchg
popf
js
mov
push
sub
jo
fwait
mov
sarb
mov
ret
and
pop
enter
xchg
pop
test
jo
ret
movsb
add
hlt
ret
mov
scas
movsb
push
enter
test
and
and
ret
inc
ret
cmpsb
shll
mov
loope
mov
ret
push
lret
sahf
enter
loop
push
dec
js
cmpsl
xor
test
in
sti
mov
inc
iret
lea
and
sub
mov
push
orl
sub
sub
mov
add
pushf
jnp
jg
int
hlt
dec
or
out
and
mov
js
mov
xchg
sbb
sub
in
mov
in
cmpsl
popa
mov
mov
adc
jmp
test
in
cmp
xor
stos
push
jnp
neg
aas
lock
into
dec
movsb
pop
rclb
cld
mov
imulb
adc
dec
out
jp
dec
test
test
mov
rcl
adc
jo
mov
mov
mov
sub
pusha
xchg
addr16
js
lret
fmull
and
sbb
lock
adc
and
std
lret
hlt
push
incb
mov
stos
adc
or
dec
push
and
jmp
mov
mov
mov
lds
or
cmp
dec
push
sub
aam
movsb
inc
int3
or
inc
popa
es
jns
adc
dec
lods
shl
movsl
out
ss
sbb
xor
xchg
jecxz
inc
mov
push
cmc
pop
jecxz
ljmp
std
mov
fisttpl
xor
gs
adc
jl
push
xchg
sub
shr
test
dec
stos
jnp
rorl
subl
pop
mov
pop
add
add
xorl
pop
push
mov
stos
mov
out
mov
and
fldt
hlt
hlt
in
shrb
jo
es
add
sub
stos
popa
mov
push
mov
adc
arpl
jbe
sbb
ja
push
call
imull
ds
add
pop
ss
lds
out
jecxz
and
jbe
rorl
mov
movsb
inc
into
test
ss
sahf
ljmp
xor
std
fists
out
mov
jae
jg
lock
inc
or
cld
loop
push
popa
jge
daa
and
hlt
xor
mov
std
jmp
inc
jp
ficompl
cmp
add
repnz
add
mov
in
dec
loop
sub
add
inc
fldenv
rcl
jbe
es
lods
scas
aas
ja
or
mov
jmp
sti
dec
jl
jno
mov
mov
ds
jmp
push
add
and
stc
push
insb
push
rcl
adc
adc
loopne
ret
dec
xor
cmp
jns
and
fistpl
jnp
arpl
inc
pop
movsb
mov
out
mov
mov
mov
dec
add
xchg
and
adc
pop
pop
inc
push
sti
in
mulb
leave
cld
jnp
or
adc
adc
adc
dec
or
jp
bound
adc
mov
and
add
mov
push
xor
dec
das
and
aas
out
jecxz
repz
mov
jbe
fisubrl
stc
sub
mov
sti
jo
sbb
scas
cmc
mov
jo
pushf
xor
rcr
and
lods
pop
insb
ds
mov
pop
daa
test
icebp
sub
out
int
sti
cmp
jmp
jecxz
data16
leave
std
or
sbb
outsb
and
aaa
test
push
and
add
cmp
mov
aas
sarb
xchg
rolb
leave
shll
call
jle
imul
out
pop
sbb
dec
les
inc
or
lret
cmc
cmp
add
repnz
inc
in
sti
xorb
lret
pop
push
push
sub
jae
or
and
adc
adcb
pop
inc
jno
push
adc
pop
sub
out
pop
jmp
stos
add
cmp
repnz
push
adc
and
jle
pop
es
add
lcall
dec
fs
ret
arpl
sub
mov
mov
mov
mov
pop
repnz
orb
push
int
push
pop
loope
ret
adc
lods
push
fs
enter
inc
push
scas
jne
or
mov
push
fnstcw
sub
mov
jecxz
inc
fsubr
mov
cmp
sub
stc
cmp
movsb
inc
lea
mov
insb
inc
xlat
sub
in
std
xor
jmp
xlat
stos
xchg
mov
int3
inc
cmp
jl
inc
mov
xchg
clc
sub
cmp
jb
fsts
push
cmp
clc
push
nop
jb
xchg
jnp
popf
lret
rorb
inc
insl
add
jl
daa
loopne
cmpsb
dec
dec
and
sbb
loope
jge
jns
clc
popa
lret
jne
inc
mov
xchg
mull
or
fidivrs
xchg
aad
pop
jge
enter
cs
test
jg
fnsave
insl
xchg
cmp
mov
nop
imul
cmp
sti
jp
inc
movsl
pop
insb
outsl
enter
pop
test
insl
push
push
lds
adc
cwtl
pop
sbb
and
xchg
push
test
mov
jne
loop
mov
xor
xor
adc
pop
push
pop
outsb
das
inc
fildll
dec
iret
sahf
out
dec
xor
xchg
inc
pop
adc
mov
xor
dec
pop
incl
or
jae
adc
add
pop
jl
xor
fidivs
nop
or
mov
sbb
fcomi
sub
fistpll
jnp
mov
dec
jae
pop
insl
mulb
lock
push
adc
cmp
pushf
imul
addr16
outsl
mov
sti
push
js
jge
mov
pop
inc
shlb
popl
pop
lret
cmpsl
outsl
cmp
aam
fyl2xp1
out
mov
fidivrs
rcl
mov
pop
push
lea
sub
mov
ja
sahf
rcrb
insl
or
cwtl
inc
mov
outsb
cltd
push
xor
or
push
cwtl
in
subl
sbb
jecxz
in
adc
mov
and
sbb
pop
insb
mov
jne
shrb
mov
clc
rolb
ljmp
mov
xor
mov
movsl
dec
mov
pop
out
in
xchg
bound
cmp
pushf
mov
lret
jmp
fwait
pop
mov
movsb
lahf
xchg
adc
lret
pop
push
jno
lds
cwtl
nop
adc
arpl
cmpsl
stos
mov
sbb
jg
in
rcrb
frstor
mov
dec
cmc
jle
scas
fcmovne
cltd
test
adc
fldcw
pop
arpl
xchg
aaa
iret
xchg
lock
jnp
cmp
cmp
dec
es
rclb
and
mov
imul
sbb
push
fstpl
sub
xor
mov
pop
jae
jo
xchg
les
movsb
outsl
sbb
lcall
pop
mov
ret
adc
push
jg
pop
fwait
lea
xchg
pop
xchg
je
popf
mov
jmp
push
loope
xchg
dec
pop
mov
inc
ds
mov
fwait
outsb
xchg
push
and
in
mov
mov
aam
mov
or
sbb
push
gs
fs
mov
shll
cs
test
jno
aad
rorb
rcll
or
ljmp
rcrb
jg
call
aad
pop
adc
mov
inc
into
jg
mov
rcl
test
add
ljmp
cmpl
insl
aad
aas
mov
enter
lods
icebp
push
dec
xor
xor
push
or
jno
xchg
sub
jne
jle
push
push
dec
add
mov
add
cmc
out
imul
subb
fsubrl
lcall
pop
sub
aad
sbb
sbb
cmp
mov
or
xlat
sbb
xor
jne
pop
xchg
cmp
and
das
pop
sbb
dec
roll
pop
pop
jmp
or
or
cmp
pop
push
adc
gs
fmul
int3
xchg
mov
lcall
inc
dec
daa
push
mov
and
mov
int3
es
out
dec
xchg
sub
adc
push
bound
push
sti
lea
jmp
pop
dec
adc
mov
scas
popa
daa
jnp
in
and
inc
or
xchg
mov
outsb
icebp
leave
fistpl
lods
inc
and
lock
ficomps
pop
adc
mov
cmc
in
data16
mov
loope
xchg
add
dec
mov
insl
scas
rorl
imul
insl
inc
test
push
cmp
cmp
cwtl
mov
jno
mull
mov
js
add
jne
or
pop
dec
fbld
out
cli
icebp
sbb
inc
pop
xor
imul
repnz
dec
cltd
int3
inc
cltd
addr16
mov
pop
fldl
ffreep
push
fwait
mov
inc
aaa
inc
lahf
movsb
mov
cmp
out
jle
iret
jne
dec
mov
test
sti
push
pushf
fisubrl
pop
std
mov
and
ljmp
jle
mov
out
cld
aam
mov
aas
loopne
push
divl
nop
decb
pop
daa
cmp
dec
mov
adc
fisubl
jp
fcmovu
push
mov
xchg
clc
stc
sub
std
dec
scas
xor
lcall
and
mov
sarb
aaa
daa
fucomip
ss
sub
or
sbb
ret
gs
or
jge
cmp
bound
and
cli
cmp
sub
lret
cmc
push
xlat
loop
mov
and
out
repz
cs
inc
jmp
inc
cmp
mov
xchg
and
vmwrite
stos
test
jno
mov
inc
insl
divb
sbb
push
addr16
mov
aaa
repz
add
jbe
iret
int3
xchg
push
clc
repz
mov
mov
insl
insl
or
push
insb
pop
or
add
xchg
call
clc
or
test
lret
or
movsl
fldcw
lea
adc
cmp
jg
aaa
daa
sbb
cltd
mov
in
pop
xor
add
test
test
stos
mov
out
out
fs
cmp
mov
sti
xchg
ds
or
icebp
sti
pusha
arpl
pop
add
icebp
and
or
sarb
cmpsl
or
adc
push
pop
outsb
sbb
daa
mov
insl
int
add
jb
paddb
dec
pop
jp
mov
loopne
mov
in
aaa
xchg
nop
inc
sbb
or
in
pop
jno
leave
jl
ret
adc
inc
and
in
lds
in
loopne
and
ror
xor
lock
aas
rcrb
inc
orl
jge
push
xchg
inc
sub
inc
lcall
inc
stc
inc
cmp
cmp
sub
fstpt
pop
pop
mov
inc
roll
mov
movsl
add
aad
in
cmc
mov
movsl
adc
cmc
inc
in
aad
lds
test
mov
lds
push
in
cmc
mov
movsl
adc
cmc
inc
in
aad
lds
test
mov
lds
push
in
cmc
mov
movsl
adc
cmc
inc
in
aad
lds
test
mov
lds
push
in
cmc
mov
movsl
mov
or
stos
sub
dec
scas
jns
imul
fiaddl
jmp
outsb
mov
mov
imul
fnstcw
leave
das
stc
push
jmp
outsl
mov
mov
imul
fnstcw
ljmp
cmp
xor
cmp
cmp
int3
add
push
inc
pop
add
fsubl
shl
inc
out
inc
adc
add
push
mov
mov
xchg
xchg
add
out
or
push
roll
inc
rolb
loopne
sbb
outsl
mov
out
push
cmpsb
scas
and
dec
and
mov
and
add
or
aas
fsubrl
jmp
addb
cmp
test
mov
jno
imul
pusha
xlat
sub
sub
inc
rcrb
fsts
mov
outsl
mov
or
push
cld
pusha
xchg
and
sub
lds
sarl
loopne
bswap
sub
jg
aaa
test
mov
xor
cmp
aas
mov
or
lock
fidivrl
jle
stos
mov
mov
imul
fnstcw
leave
das
stc
pop
jmp
outsl
mov
mov
das
into
jl
data16
push
mov
lods
mov
pop
or
sub
sub
cmp
in
jl
inc
stos
jl
insb
loope
pop
scas
pop
test
pop
outsb
sbb
stc
sarb
ret
sbb
decb
aas
cli
or
pop
int
out
cmp
sub
fnstcw
leave
das
stc
pop
jmp
outsl
mov
mov
imul
fnstcw
leave
das
stc
pop
jmp
outsl
mov
mov
push
dec
leave
or
inc
daa
jecxz
cmp
mov
push
stos
ds
iret
push
push
hlt
hlt
lock
sub
or
imul
sti
sti
push
push
xchg
dec
jg
or
lds
aad
sub
cmp
mov
leave
and
jae
mov
mov
push
jo
sub
aad
pop
pop
call
lea
cwtl
jmp
or
int
aas
cmpsb
mov
jmp
adc
shll
repnz
push
and
push
sbb
mov
mov
loopne
and
int
pusha
out
inc
jl
mov
hlt
outsb
iret
icebp
xchg
fildl
ret
dec
jnp
add
pop
test
sub
push
fcoml
test
xor
and
mov
push
loop
mov
ss
stos
inc
push
sti
lock
pop
jbe
shrb
jmp
mov
sbb
jge
addr16
xchg
ljmp
outsl
xchg
pop
dec
and
addr16
jmp
and
cld
cmpsl
jp
mov
mov
sarb
nop
stos
mov
and
hlt
fisttpll
daa
scas
mov
mov
jl
scas
fidivl
insl
and
sbb
repnz
shlb
lods
add
mov
inc
mov
xchg
jo
add
cli
fiadds
idiv
sub
inc
xchg
lret
cwtl
push
pop
jnp
inc
ja
hlt
lds
cmp
sbb
mov
dec
and
int
fucom
mov
repnz
fbld
inc
add
das
jecxz
out
insl
xchg
sub
lret
mov
test
mov
mov
add
in
mov
jnp
xchg
pop
mov
xchg
jl
shll
test
ja
dec
jle
xor
or
cmp
clc
ds
xor
sub
lods
inc
push
mov
loope
in
push
dec
or
arpl
lods
adc
pop
lods
sbb
aam
xchg
adc
dec
xchg
sub
adc
or
and
sub
sbb
push
mov
jmp
or
lock
xlat
cli
data16
in
or
mov
loope
jle
xor
lcall
xchg
sub
cltd
push
push
stos
ret
dec
pop
popl
xlat
fildl
ljmp
cmp
cmpsl
ja
mov
xchg
loopne
add
int3
jnp
mov
sbb
scas
scas
push
mov
mov
jb
into
and
call
adc
mov
push
push
inc
sti
fsubs
mov
shlb
mov
jle
mov
cmp
jbe
adc
movsl
ljmp
loope
or
ljmp
xor
jecxz
jne
pushf
xor
sbb
clc
sub
jp
cli
rorb
ret
mov
push
addr16
inc
push
pop
faddl
inc
dec
cwtl
fstl
mov
push
lods
insl
mov
repnz
out
test
or
das
cmp
adc
enter
insb
lcall
jmp
mov
or
rorl
aad
mov
and
cmpsl
shrb
nop
and
fs
mov
dec
and
dec
jbe
mov
bound
sbb
js
stos
xchg
mov
subl
lea
adc
sub
push
cmpsb
stos
es
push
cmc
shl
xchg
inc
lock
or
jae
or
lods
icebp
test
bnd
pop
and
sbb
push
insl
xchg
sbb
sub
stos
pop
jns
movsb
jns
js
rcrb
jp
rorb
sub
cmpsb
in
loopne
add
test
rol
xor
outsl
adc
fistps
jle
push
fildll
nop
stos
repnz
rorl
jle
xchg
insb
stc
and
dec
daa
ss
test
test
iret
inc
mov
sbb
add
mov
xchg
into
push
iret
imul
push
ss
and
fsub
inc
fmull
lret
cmp
idivl
sbb
sub
and
sti
imul
aam
mov
fcmovnbe
mov
pop
sbb
outsb
xlat
pop
jbe
hlt
sahf
jecxz
jecxz
add
lcall
mov
xor
sub
stos
xchg
sbb
test
test
out
mov
stos
outsl
mov
jp
mov
aaa
jbe
add
inc
aam
push
mov
sbb
call
cld
insl
outsl
dec
in
xchg
das
imul
nop
mov
push
test
mov
addr16
fcompl
cmpsb
gs
push
jno
or
subl
fisttps
in
xchg
sub
cmp
test
stos
lcall
mov
imul
xchg
mov
cmpsb
lock
scas
movsl
sarb
inc
pop
insb
ja
popf
sarl
sbb
dec
push
pop
mov
dec
dec
xchg
mov
into
cmc
rol
xchg
orl
dec
xchg
les
pop
mov
out
int
stos
or
pop
adc
dec
lret
ds
movsl
or
lahf
popf
cmp
xor
lods
int
xchg
jge
adc
mov
mov
insl
push
test
cmpsb
in
lahf
cmpsb
das
push
fsub
test
shlb
mov
or
popf
mov
popl
add
mov
mov
mov
adcl
fadd
aas
jge
sbb
xor
cmp
in
mov
push
fcoml
jbe
fdivrs
or
jp
in
push
adc
jnp
fwait
cmp
test
xor
inc
scas
xchg
add
jge
mov
jge
add
or
pop
mov
push
loopne
pop
scas
nop
adc
and
bound
movsl
pextrw
pop
in
aam
push
insb
ja
xor
dec
mov
mov
dec
mov
repnz
xchg
xor
jno
xor
das
loop
ja
jae
jnp
in
inc
roll
rcrl
pop
stc
lahf
loope
pop
gs
mov
fadds
or
loopne
push
jae
or
mov
insb
dec
adc
pushf
mov
int
pushf
add
loopne
mov
dec
add
mov
enter
shll
stos
sti
lret
idivl
loopne
xchg
jge
pop
fsin
loopne
push
pop
pop
push
or
mov
mov
int3
stc
xchg
mov
cs
mov
clc
lahf
js
outsb
cmp
movsb
sub
je
mov
int
in
mov
or
addr16
stc
insl
imul
sbb
jp
addr16
inc
rolb
test
mov
jle
or
mov
push
das
push
jecxz
add
dec
int3
in
hlt
push
mov
jnp
xor
push
pop
xor
insl
ret
jns
xchg
and
push
lret
adc
gs
jno
dec
xor
sub
loope
mov
xor
mov
jmp
imul
scas
pop
in
adc
xchg
mov
bound
imul
jns
mov
mov
sbb
imul
notb
das
stos
push
jns
insl
out
pop
into
cmc
fmull
mov
loopne
mov
sub
lret
dec
cmp
js
mov
not
and
cmp
and
lcall
fbstp
push
adc
jmp
addb
pop
scas
pop
or
std
xlat
inc
xchg
mov
je
test
push
mov
xchg
jl
jnp
mov
dec
loope
push
daa
aaa
cmp
out
mov
scas
mov
lcall
or
in
sbb
and
outsb
pop
stos
mov
popl
xchg
sub
pop
aad
in
push
fwait
les
mov
xor
ss
loop
cmp
mov
add
ss
dec
add
jecxz
dec
dec
pop
xor
insb
mov
fldcw
jle
pop
xor
mov
mov
mov
aam
out
add
insb
test
adc
inc
mov
aam
xor
int
pop
popf
or
outsb
xor
dec
arpl
cmpsb
mov
cmp
push
jge
fucompp
cmpsb
lods
pop
insb
les
sbb
inc
mov
outsl
fmull
jne
sbb
std
leave
mov
ljmp
push
mov
push
jge
pop
mov
sub
lea
scas
xchg
inc
mov
pop
jl
cmp
divps
and
mov
xlat
or
xchg
sub
mov
sbbl
scas
inc
rcr
lcall
cli
mov
pop
pop
inc
xchg
stos
cmpsb
and
pop
ljmp
movsl
arpl
add
xacquire
jae
or
outsl
inc
loopne
cmp
push
jnp
or
scas
lcall
cmpsl
jns
mov
mov
adc
scas
mov
xchg
mov
push
add
push
loop
fbstp
je
dec
cmp
push
lret
outsl
sbb
out
mov
mov
sahf
lock
xor
cltd
and
pushf
inc
jmp
mov
fisubrs
and
jmp
pop
gs
ljmp
jp
xor
and
scas
icebp
adc
roll
adc
popf
int3
lods
xor
sub
std
enter
fstpt
pushf
imul
and
pop
adc
dec
popl
xlat
aad
mov
mov
cli
push
icebp
mov
inc
loopne
xorb
js
xchg
sub
ljmp
stc
mov
push
nop
or
mov
je
enter
jl
adc
adc
adc
inc
dec
bound
nop
fildll
add
mov
das
sbb
xchg
fcompl
into
iret
ret
xchg
push
mov
js
sarl
mov
mov
sbb
daa
sbb
xchg
popa
test
push
fldcw
add
mov
hlt
imull
mov
dec
fsubrs
std
sbb
and
loope
ds
repnz
sbb
in
xor
aad
mov
pop
cli
aas
dec
pmaxsw
or
mov
or
mov
loope
in
and
mov
mov
roll
add
pop
mov
data16
fisubl
mov
int3
xchg
int
or
sbb
in
push
inc
mov
xchg
jns
fldz
aaa
add
adc
inc
add
movsl
pop
mov
vpsubd
jp
xor
fisttps
and
loop
or
push
pop
nop
in
sbb
psrlw
out
clc
mov
rorb
nop
test
sahf
cld
jno
aad
std
mov
outsb
out
pusha
in
jg
mov
or
pop
jno
xchg
sbb
fs
daa
cmp
jne
in
and
mov
pop
daa
add
jp
lds
outsl
fldl
out
rclb
cltd
mov
cmp
push
popaw
mov
popa
test
cmpsb
mov
test
inc
adcl
sub
mov
shr
cld
push
ja
pushf
push
inc
negb
jb
pop
jns
out
ss
jne
jnp
mov
inc
aam
lahf
jp
dec
xchg
stos
js
cs
dec
les
int3
popa
ss
ss
hlt
fprem
aam
pop
and
lods
lock
jno
jecxz
dec
mov
xlat
mov
mov
mov
inc
xor
mov
lea
xlat
sbb
cmpsb
outsl
mov
pop
mov
pop
daa
std
notl
push
cmp
sbb
in
or
sahf
dec
and
mov
pop
pop
imul
addr16
ds
jo
ret
in
mov
aad
addr16
aaa
js
jge
inc
out
out
lods
lods
or
jge
or
mov
pop
inc
dec
clc
push
mov
push
mov
sbb
pop
add
cmp
js
retw
push
into
stos
rolb
outsb
cmp
cmp
add
repz
sub
movl
or
sahf
lret
xor
pop
jp
mov
call
and
test
mov
iret
cld
mov
cwtl
inc
sub
inc
clc
inc
pop
mov
jbe
pop
rcrl
pushf
cmp
das
and
imul
cld
and
rolb
je
jnp
jg
out
or
and
outsl
into
add
sbb
mov
mov
mov
outsl
or
dec
ja
movsl
mov
dec
clc
das
dec
popf
push
movsb
dec
lcall
imulb
cli
adc
test
sub
in
or
in
xchg
int
lss
test
jl
or
mov
cmp
mov
call
push
add
cmc
dec
cmp
scas
test
fnstcw
lahf
pop
test
pop
inc
ja
xor
ret
addb
and
mov
jle
adc
aaa
aas
pop
xor
pop
repnz
push
mov
cltd
mov
xlat
jbe
push
xchg
or
ret
shl
push
cmpb
jp
movlps
movsl
jg
imul
test
sarb
clc
in
outsb
ret
dec
cmp
daa
mov
cmp
or
xchg
mov
add
imul
mov
push
jl
mov
or
xchg
mov
fsubrs
loop
adc
adc
cmpsb
mov
ss
cmc
es
insb
adc
rorb
jnp
push
into
ljmp
or
sub
popa
mov
out
test
fs
es
sbb
aam
mov
or
loop
adc
shll
or
xor
xchg
push
cmp
sbb
mov
mov
jo
push
scas
mov
jl
mov
sub
adc
dec
cmp
fcom
add
lods
jle
jo
push
je
lcall
std
and
adc
les
and
aas
push
in
push
test
ds
loope
jae
ficoml
cmp
flds
fldt
dec
hlt
movsl
pop
cmpsl
test
roll
mov
dec
sbb
dec
lock
push
mov
push
pop
gs
shll
mov
push
imul
ret
cmc
jmp
cli
nop
lods
stc
mov
sub
adc
ds
and
fcmovnb
in
loope,pt
data16
cmp
mov
fmuls
and
pop
movsl
lea
scas
pusha
fucomi
popf
push
mov
mov
push
xor
outsb
sbb
repnz
cmpsb
fnstenv
test
dec
sahf
pop
dec
dec
out
xchg
or
pop
pop
pushf
xchg
mov
shlb
cmpsl
les
pop
xlat
out
pop
adc
sub
out
mov
jbe
loop
in
dec
xor
jmp
pop
pop
dec
mov
fwait
mov
and
xchg
dec
adc
sti
xor
stc
addr16
je
mov
int
inc
push
or
push
and
xchg
push
xor
sarb
dec
decb
aad
rorb
or
jge
movsb
insb
inc
test
mov
xchg
add
push
movsb
cld
mov
movsl
aas
sub
pop
pop
cmpsl
cs
std
or
loop
jns
mov
loopne
mov
inc
icebp
iret
sub
xorl
cmpb
mov
loopne
inc
adcb
cmp
xchg
add
xorb
iret
push
aaa
loop
aaa
in
fs
sbb
rclb
dec
je
push
push
xchg
xor
sub
push
mov
cmpsb
imul
mov
rcrb
mov
or
scas
and
dec
imulb
xor
or
sti
adc
orb
xchg
addb
dec
jl
je
xchg
cmp
mov
mull
imul
cmc
jne
outsb
pop
out
add
sbb
mov
mov
sub
xchg
jp
sbb
xor
push
test
ljmp
jns
mov
pushf
pop
rcll
inc
bound
push
inc
or
cmp
and
pop
ljmp
or
or
out
jl
into
pop
add
pop
cmp
movsb
ja
jge
fsub
je
out
cltd
es
movsb
sar
addl
xor
loope
pushf
or
vpaddb
test
js
xchg
dec
std
dec
sub
pop
mov
and
cmp
negl
les
jle
test
jno
adc
xor
adc
lret
loopne
pop
push
mov
mov
in
sub
pop
dec
repz
push
fwait
mov
cs
lods
sub
mov
add
hlt
stos
or
jge
cmc
sbb
mov
cmp
add
and
out
mov
or
and
ljmp
cmp
and
into
cmp
jne
imul
push
jns
jecxz
scas
lock
mov
pop
add
mov
sub
lods
test
lret
imul
lret
pop
mov
fidivs
ja
mov
hlt
fwait
cli
enter
leave
inc
cs
out
ret
mov
pop
and
sbb
loopne
jp
adc
sub
pop
mov
inc
cltd
std
or
je
dec
mov
lods
js
testb
jae
mov
out
xchg
sub
pop
jg
jle
rcrl
push
pop
imul
je
pop
mov
in
or
sbb
pop
cwtl
or
or
xlat
mov
sub
sbb
lea
cmpsl
pop
or
add
sti
mov
mov
sbb
jnp
sbb
xchg
push
ret
cld
pop
mov
cmp
push
or
rorb
int
mov
std
push
popf
int
adc
push
inc
xor
gs
ds
lock
pusha
sbb
lahf
popf
inc
inc
repz
sub
stos
mov
mov
out
mov
shlb
add
mov
mov
loope
fsts
push
cmp
dec
adc
aad
stos
icebp
icebp
push
cli
xchg
jnp
jae
mov
std
jecxz
inc
xor
les
or
xchg
mov
pop
inc
clc
mov
outsb
jnp,pn
fstpl
xchg
jge
xchg
dec
fmul
push
movsl
mov
mov
add
nop
rcll
add
mov
shl
sub
std
scas
mov
lds
insl
push
add
lods
adc
nop
cmpl
mov
inc
pop
add
pop
dec
jne
cmp
sarl
outsl
sbb
loope
sahf
jecxz
jbe
das
jp
push
jno
cld
jmp
mov
dec
xchg
outsl
push
aas
push
push
cltd
mov
fdivrs
sbb
iret
daa
pop
arpl
cs
js
sbb
fstp
out
push
js
dec
xor
mov
adc
jmp
movsb
xchg
dec
jmp
and
cs
add
xchg
out
aas
add
cmp
ret
push
push
sbb
mov
sbb
xlat
mov
cmc
daa
xlat
xor
xor
rolb
scas
daa
imul
in
and
repz
xor
imul
fs
mov
jno
push
sar
leave
cltd
js
mov
repnz
stos
loope
mov
mov
adc
loope
shl
cmc
je
sarb
aad
lcall
shr
dec
les
jecxz
icebp
jl
or
mull
test
arpl
hlt
pop
icebp
scas
fistpl
iret
add
sbb
xor
popa
ss
add
cwtl
dec
mov
and
mov
xor
push
lcall
mov
jne
and
jmp
lret
sub
loopne
lds
mov
bound
mov
sub
pop
mov
and
mov
pop
and
sbb
lret
and
push
and
mov
in
jmp
fstps
inc
mov
mov
xchg
inc
dec
in
dec
push
mov
or
and
adc
mov
fwait
or
imul
mov
and
mov
sbb
ja
out
fdivs
mov
sub
ret
lret
orb
fadd
vphaddwd
aad
jae
cltd
filds
sbb
push
insl
mov
iret
popf
mov
or
cli
or
in
push
jg
stos
sarl
cmp
cltd
adc
test
xor
imul
pop
sbb
fisubl
push
xor
inc
add
jmp
add
repnz
or
mov
or
adc
inc
fwait
pop
xchg
loopne
cbtw
mov
aad
fcoml
jmp
sub
sbb
scas
mov
mov
or
push
inc
dec
mov
lods
mov
icebp
outsb
outsb
cmpsb
inc
add
mov
es
push
scas
or
pop
pop
fisttpl
icebp
pop
sub
js
int
lods
sbb
xor
jg
mov
lahf
scas
xor
cmp
or
or
pop
int3
xlat
xor
push
pop
xor
arpl
adc
rcl
imul
fsubl
addl
fcompl
add
loop
inc
test
cmp
push
mov
cmp
xchg
mov
jb
jo
ds
and
mov
push
not
xchg
xchg
sti
lods
cmp
add
fdecstp
int
insl
adc
cmp
ret
mov
adc
scas
cmp
mov
jo
jp
out
adc
nop
lcall
or
xor
notl
or
dec
lds
adc
push
lods
scas
scas
inc
lahf
imul
fnstcw
leave
das
stc
pop
jmp
outsl
mov
mov
imul
fnstcw
leave
das
stc
pop
jmp
outsl
mov
mov
imul
fdivrs
leave
das
stc
pop
call
outsl
mov
mov
imul
es
test
jmp
nop
inc
mov
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
test
push
movsl
arpl
jl
add
xor
jecxz
repz
adcl
mov
xchg
push
movsl
arpl
adc
and
xor
jecxz
repz
jne
test
push
movsl
arpl
adc
and
xor
xchg
cld
adc
sbb
movsl
or
and
pop
lock
stc
or
fldt
adc
xor
jno
int
push
sar
add
aad
sbb
nop
sub
loop
jle
notb
repz
loop
sbb
pop
dec
mov
filds
and
push
adc
pop
jne
test
ror
scas
mov
loop
rclb
lods
cmc
int3
mov
nop
mov
mov
pop
inc
jp,pt
jne
inc
out
mov
mov
in
aas
inc
test
xchg
stos
outsl
xor
aad
lods
add
pop
jbe
sahf
push
mov
rcr
repz
push
and
xchg
push
movsl
arpl
adc
and
xor
jecxz
repz
adcl
mov
loope
int3
or
sbb
outsl
cmpsl
adc
cmpsb
jo
and
loop
loopne
mov
lock
shlb
lds
ja
push
cmpsl
xor
inc
cmpsb
daa
xorb
or
add
loopne
xchg
add
or
push
mov
aad
in
cmc
xor
jecxz
repz
adcl
mov
xchg
push
movsl
arpl
adc
and
xor
jecxz
repz
adcl
mov
mov
cmp
lcall
lods
fcmovnb
imul
push
mov
sub
ret
imul
pusha
loopne
jl
jle
adcb
es
mov
movsl
ret
outsb
sub
sub
jmp
std
js
repz
sbb
lods
sar
fwait
addb
ja
and
cmp
ret
arpl
pop
fldt
fs
fnsave
mov
test
mov
pop
xchg
and
pushf
mov
cmp
shll
iret
or
shrl
jecxz
and
outsb
xchg
ret
cmp
xchg
and
pop
xorl
imul
insl
push
mov
adc
ss
mov
add
les
xor
mov
jne
movsl
xchg
inc
and
add
pushf
fimuls
add
pop
repz
or
cltd
jg
pop
push
aam
dec
jo
lret
es
push
mov
pop
loopne
adc
fstpl
lcall
fildll
mov
and
stos
bound
sarl
shll
repz
outsb
hlt
jle
lcall
push
jecxz
jbe,pt
inc
sti
nop
fs
enter
test
shl
aas
nop
xlat
mov
push
push
add
cmp
pop
push
ret
xchg
nop
sub
roll
add
push
pop
jmp
mov
ds
sub
fs
lds
add
jmp
int3
sub
dec
je
icebp
cmc
cmp
fwait
imul
sub
lock
sub
sub
jae
jns
pushf
das
jns
xor
dec
add
adc
jle
fwait
mov
hlt
shlb
or
adc
std
and
popa
lea
pop
stos
in
out
in
mov
out
clc
cmpxchg
inc
lahf
inc
sub
pop
dec
mov
arpl
cmpsb
xchg
pop
xchg
push
push
ret
inc
sahf
dec
add
lcall
jmp
pop
cwtl
xchg
xor
cltd
inc
out
mov
push
push
mov
fcomip
jg
jle
xchg
movsb
adc
inc
and
jbe
scas
adc
mov
fcoms
testb
adc
push
ljmp
push
jns
ljmp
lods
test
mov
aas
mov
jb
dec
pushf
fwait
es
sbbl
es
cld
out
mov
popf
xor
insb
pop
dec
push
leave
sbb
xlat
add
stos
xchg
inc
and
mov
ds
hlt
xchg
or
sub
cmpsb
or
dec
mov
jp
jmp
fisubs
hlt
adc
lea
pop
test
jecxz
mov
cmp
mov
shlb
push
jbe
pop
nop
lock
andl
rorl
dec
std
shrb
ja
mov
loope
addr16
iret
roll
lock
xor
mov
jmp
nop
xchg
mov
lcall
outsl
mov
push
inc
lret
sub
push
dec
add
stc
lds
pusha
imul
fmul
mov
insb
ss
mov
jns
mov
inc
incb
xchg
out
lret
pop
or
xchg
enter
orl
nop
and
int
xorl
pop
jns
jp
push
int3
mov
mov
xor
sub
js
xor
push
mov
inc
inc
in
pop
dec
pop
pop
cld
movsl
pusha
pop
icebp
ljmp
in
mov
adc
jg
inc
and
fst
test
in
push
ljmp
nop
outsb
sbb
or
sahf
ss
clc
sub
adc
adc
fsubs
stc
lahf
les
cmp
imul
insl
inc
je
push
jo
xor
imul
mov
inc
adc
jnp
pop
sub
inc
loopne
push
test
daa
test
sub
mov
inc
mov
jbe
inc
lea
inc
mov
addr16
cmp
leave
xchg
adc
push
pop
jns
pop
or
cmp
movsl
mov
and
cld
je
or
outsb
int3
ss
hlt
jae
jns
cmc
into
out
roll
and
mov
sbb
nop
ljmp
or
xchg
sbb
inc
add
pop
pop
dec
cmp
rcrl
xor
push
dec
mov
jb
cltd
mov
test
mov
jge
leave
pop
sbb
mov
cld
mov
movsl
fcompl
cwtl
call
lcall
cmp
or
xchg
pushw
pop
aad
aas
cld
jae
xchg
pop
lret
mov
lret
loopne
inc
sbb
sbb
xor
es
push
adc
pop
dec
decb
dec
sub
mov
stc
data16
xchg
jl
pop
inc
lret
push
es
repz
inc
leave
adc
arpl
es
sarl
popa
loopw
add
xor
mov
test
mov
xor
ljmp
shll
jbe
aad
push
sub
dec
dec
out
pop
jg
imul
sahf
fldenv
mov
pop
sub
stos
mulb
sub
inc
int3
dec
jb
lcall
or
lahf
push
jl
push
outsb
fistps
lods
test
insl
sti
repz
push
outsl
outsl
cmp
jge
xor
jmp
jns
in
push
and
xchg
add
nop
lods
add
sbb
and
test
cld
insb
and
bound
mov
jge
dec
fs
leave
xchg
decb
pop
dec
inc
mov
cs
stos
push
add
dec
inc
jmp
dec
jecxz
inc
push
xor
out
lds
pop
cli
pop
mov
outsb
or
adc
popf
push
insb
dec
pop
mov
sbb
xor
xchg
incb
pushf
sub
cmp
out
ljmp
stos
inc
adc
aad
add
push
mov
add
cmp
sbb
xbeginw
add
stos
leave
fldenv
xchg
jo
or
addr16
cmp
fbld
xor
jp
ret
leave
sahf
sbb
outsb
dec
mov
mov
xchg
sbb
sbb
rcl
push
aas
pop
mov
inc
cmpsb
arpl
mov
jno
add
sqrtps
andb
xchg
push
rcr
push
sub
dec
in
out
inc
imul
popa
hlt
dec
jae
or
movsb
ljmp
cmp
iret
cld
mov
fs
cli
mov
scas
insb
push
xchg
add
shlb
repz
lret
outsl
xchg
fistpl
pusha
cmp
jge
pusha
inc
mov
mov
push
cli
pop
andl
leave
out
out
int
sbb
and
xchg
fildll
push
cs
loop
arpl
popa
iret
mov
lock
mov
mov
xchg
mov
xor
cmp
xlat
xchg
fwait
aaa
popf
pusha
add
ret
repz
cmp
xor
movsl
push
rorb
jo
cli
dec
sahf
andb
xchg
aam
push
shlb
adc
lret
in
cld
stos
pop
mov
leave
jmp
add
in
mov
movsb
inc
dec
into
jecxz
xchg
mov
jns
sub
pop
repnz
out
mov
jmp
lds
xchg
mov
int3
dec
mov
sbb
scas
enter
sub
data16
sbb
mov
je
dec
repz
dec
jle
gs
test
test
test
outsl
lret
jae
test
xchg
xchg
push
enter
lahf
sub
and
das
mov
xor
lock
mov
mov
xchg
inc
setge
outsb
test
nop
push
pop
xor
sahf
or
lods
outsb
push
aam
aad
mov
and
cli
pop
sub
pop
xor
stos
add
cmp
hlt
sbb
mov
cmc
push
dec
xchg
push
rorb
outsl
lret
sbb
and
inc
nop
inc
inc
lcall
mov
or
xchg
pop
lea
stc
push
jnp
ret
fwait
aad
loope
mull
and
xlat
mov
add
lahf
cli
push
mov
inc
mov
mov
adc
cmp
dec
rol
adc
subl
add
mov
sahf
outsb
adc
cmp
dec
outsl
sub
push
mov
xchg
int3
and
lcall
xchg
js
adc
jae
jno
cmpsb
add
pusha
js
and
cld
mov
or
and
aas
or
fists
cmp
adcb
gs
aas
xchg
loop
cld
in
pushf
idiv
repz
repz
rsqrtps
dec
adc
nop
mov
push
add
aaa
mov
push
sub
push
ret
jp
cmp
mov
xor
jno
inc
sarl
ficomps
ja
mov
enter
inc
mov
lahf
pop
pop
jno
rorl
int
mov
jmp
aaa
test
xlat
fwait
mov
cmpsl
call
shll
mov
stos
arpl
push
jb
nop
pop
inc
loop
or
fdivl
shlb
sbb
push
lahf
and
jne
into
repnz
push
jecxz
icebp
sub
xchg
test
enter
add
adc
outsb
push
cmpsb
cmp
nop
pop
ss
addr16
iret
lods
xchg
das
cmp
add
xor
jbe
sbb
cmc
fistps
mov
jg
stos
test
mov
ret
icebp
cmp
fcmovbe
push
push
and
outsb
jle
ja
enter
dec
xchg
jle
lock
push
pop
insb
cld
sbb
enter
xor
test
data16
and
inc
mov
mov
jne
and
inc
in
adc
add
mov
cmp
cmp
daa
push
sub
mov
xorb
in
push
decl
ljmp
xchg
jl
mov
or
mov
hlt
jp
xchg
stos
outsb
inc
stos
push
sbb
out
adc
int3
loopne
mov
cmc
and
mov
inc
mov
or
imul
fucomi
test
cltd
jno
aaa
adc
push
xor
sbbb
rorb
ljmp
call
and
into
scas
mov
fstpt
ss
insb
ss
adc
mov
aas
ja
xor
cmpl
data16
mov
xor
xor
xor
jae
sbb
cmp
popa
stos
jmp
xchg
lods
sbb
sub
imul
add
mov
adc
scas
aas
sbb
imul
orb
fdecstp
daa
jno
mov
xchg
inc
dec
xor
mov
jnp
int3
fidivrl
or
add
in
mov
jnp
insl
adc
sub
or
jno
pop
fnstcw
sub
cmpsl
sbb
in
inc
jno
mov
push
sub
cmpsb
aas
push
popa
mov
cli
or
out
push
pop
cs
inc
ja
push
jl
scas
addr16
mov
add
push
cs
stc
dec
sub
adc
fsubrs
outsl
xchg
fisubrs
loop
add
jp
cmp
imul
mov
test
push
leave
xor
or
mov
sbb
sbb
call
xor
jbe
add
xor
push
lds
stos
cmp
aad
jp
popa
fstpl
xchg
inc
mov
mov
loop
sbb
cmpsb
push
fisttpll
sub
inc
pop
into
es
or
xchg
push
push
dec
ljmp
stos
push
push
call
ffree
pop
sub
addl
jmp
fnstenv
lret
and
ss
iret
out
clc
andl
jae
add
push
fnstcw
js
jp
adc
mov
cld
iret
outsb
pushf
mov
imull
scas
cmpsb
pop
sub
std
xor
cmp
fwait
push
fcompl
subb
adc
cmp
cmp
inc
lods
aad
lods
xchg
cmp
lret
push
xchg
rorb
or
rcrl
add
mov
out
mov
or
imul
pop
pushf
data16
adc
xor
pop
xor
ss
outsb
pop
cmp
fisttps
mov
test
add
fdivs
or
cltd
inc
test
icebp
push
or
cmpsl
scas
and
into
dec
push
push
jb
rcll
stos
mov
lcall
adc
stos
push
adc
pop
mov
push
int
dec
aam
jns
pop
ja
push
rclb
pop
dec
jae
pop
xchg
add
scas
and
fcompp
cltd
dec
aaa
jp
pop
jne
ret
mov
dec
into
pop
adc
jp
ret
or
push
std
data16
xchg
and
ret
inc
ds
mov
fldt
adc
push
xlat
ss
push
in
sbb
adc
mov
fwait
in
pop
xor
push
pop
mov
mov
dec
das
and
cs
scas
mov
lret
test
jecxz
adc
fnstenv
xlat
je
mov
ret
pop
sbb
pusha
popa
into
xor
xor
and
inc
fdivp
and
imul
inc
and
loope
xchg
pop
es
mov
movsl
sbb
sub
cmpsb
push
decl
stc
es
scas
loope
adc
push
mov
add
and
rolb
jle
out
mov
fstpl
mov
in
imul
loopne
outsl
jns
push
cmc
out
lock
mov
loopne
or
cmp
xor
jle
cmpsl
or
stc
xchg
dec
rolb
in
mov
in
mov
cmp
outsb
shll
and
mov
sbb
mov
mov
jg
xor
loop
insl
pop
movsb
push
cld
cmp
sub
sbb
push
inc
push
cmpb
push
sub
xor
mov
dec
jo
add
pop
mov
dec
cmp
xlat
out
add
jg
or
push
jne
pop
mov
push
add
jg
addr16
das
dec
and
inc
jmp
lcall
loope
xchg
test
jo
xchg
or
push
mov
imul
push
mov
loop
cltd
mov
dec
pop
cmpsb
fwait
loop
and
and
ficomps
das
mov
sbb
insb
sub
js
test
and
xor
insl
insl
push
add
xor
xor
adc
cmp
xchg
in
pop
or
into
and
xchg
sub
mov
add
cmp
jg
jl
adcb
dec
cmc
sti
outsl
cmp
fldcw
xchg
mulb
push
mov
dec
sbb
loopne
cs
cli
sbb
aad
ljmp
mov
cmpsb
and
pop
dec
sbb
pop
in
and
fldenv
add
fdivl
pop
sbb
jns
loop
movsl
cld
push
mov
scas
or
cmpsb
jmp
jecxz
dec
out
mov
jns
or
cmp
push
fs
shrl
lock
jp
and
dec
inc
dec
roll
sub
mov
mov
fistl
mov
arpl
notb
outsb
push
add
sbb
mov
les
fistl
and
loope
or
sbb
and
mov
loop
test
mov
lahf
sbb
push
sub
inc
movsb
push
inc
aas
cwtl
push
adc
xchg
out
int
inc
inc
push
push
mov
pop
ljmp
add
sahf
lret
or
jecxz
leave
int3
loopne
insb
pop
in
mov
pop
mov
test
test
mov
stos
enter
ret
sub
into
add
sbb
jbe
xor
cmpsb
insb
adcl
pop
stc
push
outsl
dec
in
cmp
out
xor
mov
pop
pop
fisubrs
jne
fscale
xor
sbb
fwait
scas
xor
push
lret
mov
dec
or
aam
xor
lds
xchg
mov
and
mov
ja
enter
pusha
pop
lret
dec
xlat
aam
jno
cmp
outsb
xchg
jne
movsb
xor
or
in
cmpsl
xchg
adc
aad
sbb
cld
inc
lret
bnd
inc
cmc
add
lcall
sub
adc
sub
int
push
aaa
sbb
aad
mov
cmpl
mov
adcb
bound
push
les
imul
clc
mov
in
add
push
push
cmp
lea
add
dec
repz
mov
cmp
in
jns
jge
add
adc
pushf
dec
inc
daa
fwait
scas
daa
sbb
lds
aas
cld
jne
inc
fadd
loop
daa
test
add
push
pop
xchg
adc
cmpsb
pop
jmp
sbb
add
or
addr16
cwtl
leave
stos
cmp
movl
push
aas
shll
push
sbb
stos
sbb
adc
xchg
sahf
movsb
movsl
jge
test
test
lods
fldl
pop
mov
dec
cmp
mov
int
or
pavgb
sbb
dec
pop
pusha
and
mov
pop
jo
jns
mov
outsb
mov
dec
sahf
jae
scas
xor
mov
repnz
jo
into
stos
test
inc
lock
call
int3
dec
xchg
ret
and
push
mov
ds
sbb
lret
mov
dec
mov
add
pop
leave
lods
nop
sbb
pop
jns
pop
ret
cmp
ret
push
adc
inc
or
sbb
push
movsl
loop
movsb
add
inc
or
jnp
inc
fsubl
xchg
dec
mov
adc
mov
lcall
out
pop
stc
stos
inc
add
push
ret
nop
loopne
lods
xchg
xchg
mov
or
mov
sbb
pop
pop
ja
xchg
jne
test
call
shl
and
lret
mov
stos
mov
fimull
mov
aam
idivb
add
lea
cwtl
pop
fmuls
idivb
outsl
clc
out
cmc
and
frstor
inc
xchg
ja
pop
pop
sti
pop
bts
dec
and
mov
push
sub
push
and
out
pushf
cmp
cmp
push
or
inc
inc
cmpsl
mov
mov
lds
mov
movsl
add
xor
jecxz
mov
cmp
das
sbb
mov
dec
pop
in
xchg
or
push
fbstp
loopne
mov
or
cmp
fwait
jb
push
fs
xlat
inc
inc
test
mov
adc
jne
ja
cmc
jnp
xlat
xor
cltd
inc
cmpb
push
add
rorl
rcrb
pushf
out
negl
scas
push
adc
test
and
flds
nop
movsl
jne
fldl
fimull
arpl
test
ret
push
lahf
jmp
les
enter
jne
mov
mov
mov
inc
mov
add
mov
dec
mov
outsl
sub
dec
xchg
mov
repz
testb
xchg
ds
pop
dec
xchg
xchg
iret
fimull
mull
out
dec
sbb
push
or
add
inc
icebp
negl
ret
dec
scas
pop
fstpl
mov
or
xchg
lods
lods
cmp
inc
adc
sbb
xchg
out
cltd
shll
movsl
and
pop
aad
cld
cmpsl
fistpll
xor
repz
xor
cwtl
lods
sahf
sbb
jae
add
mov
mov
jo
mov
xor
inc
js
jg
sbb
jne
mov
aas
test
sub
inc
dec
clc
mov
mov
shrl
mov
das
jne
clc
rol
mov
or
mov
add
insb
lcall
scas
mov
or
loop
lret
jge
pusha
push
mov
add
jecxz
repz
lret
icebp
mov
std
mov
cs
mov
mov
mov
mov
jl
outsl
or
imul
push
xchg
xchg
bound
xchg
or
mov
les
xor
loope
mov
jg
fsubrl
cmpsl
imul
in
ds
shrb
adc
test
xchg
leave
sbb
push
xchg
adc
pop
mov
jecxz
pop
xor
sahf
clc
je
out
sub
pop
pop
cltd
or
fiadds
rsm
fisubrl
pop
out
or
adc
mov
cmpsl
sbb
es
lods
in
popl
pusha
fsubs
push
pusha
hlt
ss
mov
aad
cli
or
inc
mov
cmp
shll
loope
aaa
and
leave
jns
shlb
jne
lret
adc
ret
std
sub
adc
or
fsub
xchg
loopne
lock
sub
std
dec
rorl
push
incl
jbe
pop
mov
into
ret
mov
inc
imul
loopne
popf
pusha
mov
shll
mov
push
and
sbb
jae
add
adc
and
xor
jecxz
repz
adcl
mov
xchg
push
movsl
arpl
adc
and
xor
jecxz
repz
adcl
mov
adc
jae
add
xchg
in
jne
add
jecxz
repz
adcl
mov
xchg
push
movsl
arpl
adc
and
xor
jecxz
test
pop
add
rorb
pop
repnz
cmp
ljmp
jge
jmp
jbe
bound
and
rorb
pop
repnz
sbb
jmp
fnstenv
jo
adc
fstpt
dec
cli
pop
ljmp
sbb
test
mov
test
pop
sbb
or
repnz
sub
cwtl
cli
pop
data16
cli
sub
dec
cmp
hlt
pop
cmp
sbb
sbbl
pushf
mov
push
lea
dec
adc
js
inc
sarl
lods
sub
xchg
insb
out
jmp
or
lea
cmpsl
jns
or
fdivl
pushf
jns
imul
sbb
stc
mov
xor
dec
ds
inc
xchg
roll
or
mov
cli
add
add
data16
cmp
fdivrl
or
aaa
icebp
mov
das
cmp
mov
xor
aad
ret
pop
repnz
sbb
leave
jnp
imul
cltd
xor
xchg
xchg
push
pop
repz
into
jl
subl
cmc
adc
dec
in
pop
ss
cmp
dec
sbbb
popa
cmpb
mov
adc
inc
xchg
ret
sub
cmp
jmp
fnstenv
add
xor
jns
dec
loop
repnz
sbb
leave
fnstenv
add
xor
jl
les
lock
or
jg
daa
divb
sub
xor
mov
dec
js
call
adc
pop
in
xlat
popa
xchg
push
push
aam
test
movsb
mov
mov
xor
mov
and
inc
dec
or
or
pop
push
dec
lock
loopne
in
cwtl
mov
sub
cmpsb
xchg
jno
icebp
jo
cmpsl
addr16
rcrl
ljmp
pop
iret
cld
mov
jle
push
mov
ficoml
and
xchg
scas
adc
int
inc
sub
inc
mov
mov
iret
lahf
sbb
cmpsb
jne
icebp
jge
cmp
addr16
les
outsb
xchg
out
cmp
add
data16
inc
xchg
jmp
sub
pop
scas
pop
call
mov
adc
cmp
xor
stos
or
or
add
cmp
je
xchg
inc
and
fmul
dec
push
out
and
fcmovbe
and
fsubrs
adc
mov
pop
lahf
xchg
cmp
mov
mov
inc
mov
and
in
mov
adc
push
in
cmpsb
jg
test
sub
mov
call
jl
subl
xor
mov
pop
mov
cmpb
daa
cli
and
and
xchg
hlt
lods
or
mov
ret
ret
cld
lods
push
cli
in
jnp
icebp
inc
pop
cmp
insb
in
sbbl
add
pop
add
std
mov
inc
das
out
cltd
lock
xchg
repnz
xor
fistpll
fisttps
test
sbb
movsl
sbb
in
imul
jle
jne
add
jmp
jns
mov
fadd
cmp
test
hlt
in
loop
inc
cmp
cmp
hlt
imul
xor
or
dec
aaa
daa
sub
cs
mov
pusha
cmp
xchg
into
xchg
mov
loopne
push
leave
rcrb
and
pusha
dec
xor
and
mov
mov
xchg
sub
jmp
cmc
and
shll
adc
cmpsb
sub
divl
addr16
sbb
dec
in
cltd
loop
bound
jmp
xor
popf
lret
negb
in
imul
sbb
jecxz
daa
into
pop
mov
lret
jne
add
sbb
jg
mov
mov
xor
xchg
xor
xchg
mul
xchg
cmp
pushf
cmpsb
pop
mov
mov
fwait
or
aad
xchg
adc
ret
cli
scas
push
mov
repz
int3
mov
push
dec
mov
xor
out
sbb
jecxz
lods
mov
out
ss
mov
mov
lcall
ret
addr16
pushf
pusha
xchg
mov
push
mov
aas
xchg
addr16
mov
push
mov
arpl
xchg
or
les
and
rcrb
jns
into
in
icebp
inc
pop
pop
jmp
mov
je
rorb
sbb
repnz
cmp
aam
inc
sbbb
ss
fcoms
lock
pop
sub
xor
jnp
pop
enter
mov
aaa
cmpsb
sub
xor
jb
jne
rorl
fwait
or
stc
xchg
jae
fidivrs
or
scas
add
test
cltd
cmpsl
stos
lods
and
push
lret
xchg
push
push
lret
and
jmp
or
sahf
lock
push
sar
adc
aam
sbb
insb
cwtl
into
test
loopne
and
inc
int
arpl
mov
pop
pop
repz
sub
sub
or
or
mov
add
pop
in
sbb
dec
or
jne
mov
dec
pop
and
fldt
es
inc
aad
sahf
orb
adc
test
inc
sysexit
cmp
cs
ss
daa
std
push
dec
repnz
sbbb
call
je
or
mov
adc
pop
repnz
xor
cmp
pop
sbb
aad
xchg
pop
fs
inc
mov
pushf
pop
dec
lds
cltd
pop
icebp
adc
movsl
inc
mov
push
in
push
aas
xchg
sub
adc
leave
cmp
int3
test
popl
mov
rcrl
in
cmp
cwtl
clc
lcall
daa
inc
xchg
subb
sbb
lea
daa
dec
or
jnp
mov
push
xchg
pop
les
xor
jae
mov
ret
insl
dec
mov
dec
inc
sub
xchg
idivl
pop
xchg
xchg
or
cmp
ljmp
test
jmp
cmp
adc
cmp
fisubrs
lcall
popa
mov
pop
stos
int
mov
test
enter
fwait
and
sub
jecxz
sub
imul
xlat
and
add
js
ret
aam
cmpsl
sub
sbb
cs
adc
fstl
fists
sbb
scas
push
adc
pusha
push
movsl
insl
inc
les
je
adc
cld
enter
mov
hlt
into
loope
jne
popa
je
xchg
push
mov
mov
mov
pop
pop
popa
enter
dec
das
jp
jne
lods
ret
mov
push
adc
loopne
mov
fs
jg
jl
es
fmull
jns
xchg
or
jg
out
push
notl
in
std
adc
jno
bswap
hlt
pop
push
push
cmpsl
push
into
push
das
ficompl
cmp
jmp
mov
sbb
jl
loope
inc
push
test
test
add
push
insl
sbb
pop
xchg
pop
sbb
jne
pop
loopne
fmull
xchg
js
mov
icebp
test
addr16
jns
push
mov
lods
data16
mov
sbb
repz
jle
cmp
in
jno
cwtl
jge
inc
sub
ja
outsb
clc
iret
jle
mov
inc
jnp
mov
pop
adc
cmp
jnp
cltd
loopne
sub
rcrl
in
jne
add
push
notb
jb
xlat
fdiv
xchg
out
and
mov
jle
ss
cmp
xor
inc
fcom
aam
rcrl
adcl
leave
cltd
out
lcall
or
call
mov
out
sti
and
sbb
mov
shlb
repnz
fcomps
mov
std
outsl
push
sbb
lcall
notl
add
enter
mov
lds
dec
xchg
hlt
movsb
push
push
fstl
mov
js
fmul
add
pop
testl
sub
pop
aaa
jmp
mov
out
sub
jno
and
adc
jns
lods
or
into
add
stos
add
mov
jo
lock
cmp
push
xchg
or
cmp
clc
lods
lahf
iret
dec
gs
rcrb
leave
cmp
imull
nop
push
out
dec
popa
mov
dec
xor
mov
jmp
stc
cmp
pop
cmp
sbb
leavew
or
insl
push
mov
jecxz
outsb
push
call
arpl
stos
rcrl
add
lahf
in
rcll
sbb
jne
or
xor
mov
jae
push
je
adc
and
lret
clc
cmc
mov
mov
fistps
repz
add
bound
fidivrl
add
lods
mov
pop
push
xor
int3
adcl
dec
push
push
rcrl
adc
mov
fmull
xor
aad
inc
arpl
lods
adc
push
dec
shrb
loope
mov
lret
pop
or
dec
jae
testb
ja
cmpsl
in
lea
dec
nop
and
adc
repnz
cld
ljmp
movsl
scas
mov
enter
addl
pop
adc
pop
push
ret
pop
aad
jmp
push
xor
shr
mov
xadd
in
add
daa
and
sbb
adc
adc
or
or
xchg
lods
shlb
test
xor
loopne
outsl
insb
lahf
push
pop
and
lcall
test
add
in
sahf
jne
sbb
subb
std
roll
fstl
or
xchg
es
imul
loopne
pop
xor
pushf
lods
mov
inc
mov
pop
fsts
out
mov
push
dec
adc
ficomps
in
adc
pop
pop
mov
fnstenv
or
xorb
mov
inc
jbe
pop
insb
mov
hlt
adc
push
cmp
pop
push
lret
in
xor
dec
std
fisubrs
cs
scas
xchg
push
jb
pop
std
add
adc
pop
jae
mov
int
stos
sbb
arpl
imulb
mov
mov
in
jo
mov
stos
push
stc
out
sbb
mov
pop
int
mov
fldt
xchg
insl
mov
jle
arpl
int3
fstpt
sbb
mov
lahf
lods
adc
fs
addr16
mov
jno
push
mov
push
jbe
add
pop
inc
fdivr
add
imul
outsl
xchg
ds
bound
fndisi(8087
mov
sub
sbb
pop
cmp
adc
adc
into
ds
xchg
mov
test
add
jnp
push
pop
adc
imul
inc
cmp
lods
sbb
add
outsb
ds
int3
and
das
lret
jg
dec
or
jbe
lods
pop
lods
loop
mov
aad
ficomps
sub
dec
lcall
mov
or
inc
insl
std
lret
jae
sbb
pop
mov
les
mov
pop
dec
mov
test
mov
sbb
mov
popa
add
pop
arpl
nop
gs
ret
inc
mov
ficompl
call
dec
xor
mov
cmp
daa
push
sahf
inc
mulb
push
gs
out
jmp
push
fucomp
mov
push
sub
imul
push
sub
test
lock
sub
ret
and
and
xor
mov
sysexit
mov
pop
pop
xchg
leave
shrl
dec
push
lods
pushf
hlt
jmp
pusha
test
dec
mov
mov
and
out
pop
cmp
or
inc
ret
pop
icebp
xchg
ficoms
sbb
mov
pop
movsl
or
or
arpl
imul
add
cmpsl
mov
cmp
and
ja
popl
pop
fwait
lret
sbb
inc
cld
rcll
dec
fmul
dec
test
or
push
xor
sub
imul
outsb
iret
xlat
aas
jmp
dec
jl
outsl
add
or
aad
in
aam
mov
cmp
and
xlat
mov
out
pop
pop
dec
mov
cmc
imull
push
add
push
xorb
jle
test
push
nop
xchg
push
out
xchg
dec
and
lahf
dec
adc
ret
jecxz
jg
push
xchg
dec
jle
jg
mov
out
push
sbb
popa
lea
jne
push
dec
and
loop
adc
repnz
pushf
repnz
int3
orl
mov
cli
shrl
in
cmp
cmp
orl
cmpsl
sbb
push
lds
mov
pop
mov
imul
ss
ret
push
je
sub
mov
xlat
dec
jmp
pop
ror
stc
pop
xor
cmp
mov
fldl
or
sbb
mov
jmp
sbb
jl
jns
hlt
dec
jbe
into
cs
sarb
out
inc
lcall
xchg
sarl
mov
cli
jae
adc
fcomi
mov
jmp
add
cmpsl
dec
jbe
cmp
clc
sti
jmp
add
sbbb
cmp
pop
pop
pop
mov
pop
mov
lcall
loopne
add
mov
in
and
imul
sbb
cmpsl
je
les
mov
push
pop
loop
mov
rcrb
loopne
loop
rcll
fst
sbb
and
jo
add
imul
clc
or
rorl
push
jnp
sar
out
jg
push
loopne
pushf
ret
or
push
and
lods
or
les
xchg
sub
subb
mov
sbb
inc
xor
clc
loope
or
dec
lods
push
sti
cwtl
push
out
inc
sbb
adcb
shl
sub
arpl
aaa
sarb
sub
subl
mov
loopne
inc
inc
shll
div
in
cs
cmpsb
mov
cmp
add
scas
sbb
rcrl
arpl
mov
subb
jae
or
popf
and
and
mov
lods
test
and
mov
sub
call
sub
inc
mov
xchg
dec
filds
mov
dec
sub
mov
xchg
push
into
mov
sbb
popf
mov
mov
mov
jo
scas
dec
add
lea
or
cwtl
mov
rol
cmp
cmp
sub
dec
xchg
xchg
mov
mov
in
fnsave
sub
loop
les
sub
lret
icebp
mov
imul
mov
insl
push
aad
adcb
push
enter
pop
pop
dec
pop
sahf
sbb
pusha
test
jge
jle
in
into
xlat
pop
cli
mov
movsl
sbb
movsb
xorl
xchg
xor
cs
mov
adc
xchg
xor
arpl
dec
cmp
add
or
negb
xchg
jg
mov
mov
mov
iret
in
mov
aad
stos
test
cltd
sbb
push
sub
fcoml
out
sbb
pop
jno
out
sbb
insb
das
bound
das
cwtl
es
sahf
in
cwtl
rcll
cmpsb
xor
xchg
sbb
jle
test
add
mov
je
dec
pop
push
inc
sbb
xchg
fwait
mov
psrlw
insl
mov
xor
inc
xor
rcl
xchg
cmc
test
aam
in
cmp
inc
rep
sbb
xchg
lret
popf
in
lds
fisubrl
xchg
sahf
test
jmp
xor
pop
xor
pop
jecxz
sub
into
jge
fcmovbe
mov
ja
mov
js
popf
lods
mov
jge
xor
push
call
push
jb
inc
icebp
divl
nop
rcll
mov
jmp
xchg
or
fcoms
lsl
add
inc
push
mov
test
test
pop
mov
pushf
jg
outsl
sahf
clc
jnp
adc
dec
mov
or
and
sbb
jno
adc
in
inc
mov
inc
imul
popf
std
lahf
ret
push
arpl
inc
inc
cld
mov
xor
adc
fwait
je
movsl
add
call
aad
mov
iret
aad
mov
dec
mov
outsb
mov
hlt
lods
pop
mov
fadds
cmp
xchg
outsb
sub
or
pop
lods
lcall
in
rcll
subb
iret
aad
cmp
push
divb
jmp
or
stos
scas
push
dec
sub
cld
jle
jb
scas
adc
sarl
sbb
sbb
js
sbb
enter
iret
inc
cwtl
shll
push
inc
lds
mov
jecxz
pop
and
ret
cs
cwtl
push
loopne
cmp
sti
adc
dec
in
fnstsw
lcall
jp
loope
test
das
mov
bound
or
rcrl
sub
pop
call
leave
xlat
cld
jns
jecxz
cmpl
push
xlat
out
lods
outsl
repnz
lret
scas
cmp
xchg
popa
in
movsl
lock
inc
pop
fs
pop
pop
lcall
test
push
jb
adc
jmp
push
js
fwait
shll
push
dec
xor
inc
xchg
std
mov
test
outsb
xor
in
lds
rcrb
fs
idivl
lods
xor
mov
rcl
shrl
dec
cmpb
mov
push
daa
jp
mov
out
in
mov
and
jb
mov
sarl
adc
adc
mov
nop
push
jecxz
pop
aad
scas
test
push
pop
fdivs
or
push
aam
mov
sbb
in
fistps
repnz
test
mov
xchg
xchg
imul
daa
mov
xor
xor
sahf
mov
daa
ret
push
xchg
pop
fnstsw
insl
and
inc
add
adc
xchg
int
lods
push
add
fnstenv
xlat
cmpb
insl
leave
fisttpl
and
cltd
fldl
clc
lods
push
cli
addb
movb
inc
cmp
push
adc
test
mov
pusha
cmp
sbb
outsb
cmpsl
pop
lods
push
adc
and
dec
repnz
push
in
mull
lcall
cmpsl
lahf
movsl
push
out
xchg
cld
idivb
push
or
sarb
push
push
jl
push
iret
test
or
xor
fcmovnb
or
xchg
out
loope
push
inc
sub
lcall
test
stos
push
jp
adcb
dec
xor
pop
mov
xchg
xor
aam
mov
pop
maxps
xchg
iret
xchg
add
je
add
test
xor
mov
add
out
pop
adc
mov
mov
sbbb
ret
ds
lcall
mov
cmp
sbb
xor
fisttps
orb
pop
pop
in
mov
into
dec
jns
mov
fiaddl
adc
mov
mov
ret
aas
aam
sbb
dec
inc
repz
subb
das
stos
inc
fiadds
in
or
add
cmp
pop
adc
popa
int
ret
mov
aad
xchg
push
pop
cmp
cmp
rol
std
adcb
or
mov
push
mov
sbb
mov
icebp
jecxz
mov
pop
mov
popf
pop
aas
in
sub
inc
fdivrs
adc
mov
lcall
sarl
loopne
popa
and
movsl
add
push
sbb
or
push
mov
jns
jl
jne
cmp
sbb
xchg
mov
sbb
inc
push
adc
popa
shrb
out
jge
push
adc
push
loope
mov
jbe
dec
popa
mov
lahf
mov
int
mov
fsub
movsl
xchg
ds
push
add
cmp
lods
push
stos
iret
push
leave
inc
push
mov
adc
cmp
dec
dec
jo
iret
jecxz
add
dec
mov
imul
jle
and
or
shlb
ds
sub
cld
addb
pop
insb
jg
mov
mov
nop
rcrl
sbb
sub
daa
xor
push
xor
andl
mov
mov
in
ds
add
in
mov
stc
das
sar
jle
jl
or
test
repz
xchg
mov
push
xchg
inc
call
out
sub
xlat
cmpsl
mov
cmc
sub
icebp
pop
dec
decl
and
or
and
sbbb
cltd
into
rorb
imul
ficompl
xor
adc
dec
sbbl
aas
jae
xor
jle
lcall
adc
xchg
sbbb
out
jmp
out
push
shrb
mov
sbb
mov
shr
inc
sbb
sbb
sarb
dec
push
sar
or
in
add
shl
cmp
cs
xor
dec
mov
daa
into
pop
dec
add
push
rclb
or
add
aad
jmp
test
addr16
clc
andb
jbe
fwait
aaa
mov
xor
sarl
aad
jg
add
cmpsl
xorl
syscall
xor
mov
rorb
adcb
popa
mov
stos
mov
cmp
push
flds
hlt
outsb
lret
shl
cmp
pusha
mov
or
call
cltd
test
incl
add
mov
xlat
int3
mov
out
mov
test
vsqrtss
jae
or
sar
aad
pop
lock
fadds
jo
jle
or
sub
push
sbb
pop
mov
jno,pn
xorb
pop
pop
stc
insb
in
enter
or
inc
and
pop
mov
and
cmpsl
add
insb
xlat
fdivp
cmp
movsl
inc
add
push
addr16
call
push
pop
in
inc
jl
inc
add
test
mov
dec
cmp
gs
cli
push
sbb
xor
je
mov
pop
and
jmp
ja
call
sub
adc
jae
pop
lds
jg
jns
mov
cld
mov
jge
cmp
jg
and
or
push
mov
fsubrp
xchg
push
andl
pop
mov
ja
mov
jecxz
clc
insb
mov
dec
dec
add
or
pop
pop
subb
scas
mov
roll
lret
and
shrb
jnp
lods
pusha
add
cmp
and
lock
inc
add
lret
shll
dec
les
inc
pop
inc
xchg
shlb
or
and
stos
outsb
repnz
pop
fwait
mov
pop
repnz
sbb
leave
fnstenv
add
xor
jns
dec
loop
repnz
sbb
leave
fnstenv
add
xor
jns
dec
loop
repnz
sbb
leave
fnstenv
add
ss
out
repnz
sbb
inc
stc
clc
arpl
add
jbe
dec
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
lahf
jbe
repnz
loop
pushf
jmp
movb
add
inc
out
pop
mov
out
xchg
and
repnz
loop
xchg
andb
push
mov
out
adc
and
je
and
xorb
es
push
pop
push
push
enter
cmpsb
add
xor
pop
ret
push
xchg
xor
out
adc
inc
mov
jmp
jle
sbb
xchg
es
mov
cltd
sbb
push
dec
mov
xchg
jbe
sub
andb
repnz
rep
adc
sbb
mov
xchg
shrl
xchg
mov
push
xchg
aaa
jge
mov
mov
repz
popf
cmp
push
aas
lcall
add
imul
ljmp
sub
loope
add
bound
ret
push
inc
xor
std
jp
aaa
fstpl
stos
or
xchg
dec
add
xorl
loope
ret
push
mov
ss
es
sbb
mov
jl
jb
sbb
xor
mov
mov
mov
cld
pop
mull
jae
jbe
lcall
jnp
insb
filds
gs
aaa
dec
sub
push
sub
sti
push
jecxz
fidivrs
push
push
add
popa
fldenv
inc
jecxz
call
andb
xor
pop
andb
push
mov
out
adc
and
repnz
loop
xchg
andb
push
mov
out
adc
and
pop
movsb
mov
in
js
mov
mov
sbb
cmp
iret
cmp
addr16
mov
pop
lret
mov
pop
or
push
imul
sbb
jae
push
jb
cld
insb
push
push
fldt
push
dec
loope
int
std
aas
rclb
dec
mov
scas
insl
aad
cli
aaa
fistpl
xor
push
in
ja
aad
movsb
inc
mov
in
push
add
lcall
add
cmpsb
pop
mov
int3
push
cmp
movsl
shrb
in
cs
sahf
in
push
adc
sub
inc
cmp
add
pop
lret
cmc
lret
pop
jg
shrb
inc
icebp
mov
mov
cmp
jg
push
xor
cmp
in
adc
mov
mov
jae
sub
popf
in
adc
repnz
xor
fwait
dec
sti
push
xchg
and
jmp
cmp
and
or
stos
pop
pop
push
jo
jg
mov
cmc
insl
jg,pt
mov
mov
ret
fadds
aam
xor
into
loopne
push
add
inc
sub
in
inc
stos
mov
jb
scas
movsb
and
insb
or
adc
test
icebp
or
xchg
lcall
jl
mov
cwtl
mov
in
xchg
push
cli
adc
rcll
lahf
jne
ja
pop
call
adc
or
dec
test
pmaxub
pushf
cmp
jno
loop
fidivrl
stos
popf
inc
bound
rcr
in
into
xchg
jns
jle
lds
pop
or
mov
push
adcw
loopne
and
pusha
test
jo
imul
cld
xchg
mov
insl
insl
sbb
mov
mov
cmp
or
fs
or
xor
fildll
inc
cmp
mov
jns
lea
pusha
lret
sub
or
into
and
xchg
pop
mov
sub
jbe
mov
sbb
adc
xchg
add
cmp
out
inc
mov
mov
stos
loope
xchg
mov
popa
mov
adc
in
lret
aad
xchg
jmp
popf
sub
inc
and
adc
adc
in
in
mov
mov
cwtl
add
inc
jno
cmpsb
xor
test
in
shlb
shlb
les
adc
es
dec
or
xor
flds
jne
ljmp
mov
pop
xorl
add
repz
pop
fisubrl
shr
mov
outsl
or
push
dec
rclb
fisttpl
fwait
xor
xchg
sbbb
pop
shl
divb
loop
popf
add
sub
sub
inc
xchg
leave
in
sub
faddp
in
adc
mov
mov
xchg
dec
scas
jmp
sahf
sub
pop
pop
sti
pop
jb
xor
scas
add
test
fnstenv
imul
cli
sub
lods
push
pushf
jp
aad
sbb
jbe
sahf
aaa
shll
xchg
adc
jno
in
out
cmp
mov
pop
rorl
fs
aaa
das
inc
and
jl
fwait
mov
outsb
divb
leave
mov
aaa
mov
jl
nop
test
into
pusha
in
in
jge
mov
int3
enter
jg
adc
dec
shl
outsb
leave
xlat
sbb
mov
mov
fadds
rcl
pushf
lods
sub
sub
inc
push
mov
add
sbb
push
dec
cmp
lahf
jg
inc
cmp
int
imul
arpl
ss
xor
xor
fmull
fldl
ficoms
push
jle
sbb
test
pop
push
add
mov
xchg
xchg
subb
pop
adc
adc
dec
fildll
xchg
test
jl
shll
add
mov
xchg
or
ss
push
arpl
add
jge
push
testl
xchg
in
scas
add
sub
and
dec
xor
insl
adc
insb
or
push
xchg
add
ret
dec
inc
hlt
ljmp
int
cmp
mov
cmp
mov
push
jg
dec
cmp
rcl
jbe
je
xlat
xor
in
mov
insb
aaa
xor
orb
mov
out
cmp
pop
jb
aas
cmc
jp
out
dec
lret
ds
loop
incl
data16
jns
cmp
je
mov
stos
mov
stc
fisttps
xchg
aad
shlb
and
pop
inc
scas
jnp
cmp
mov
mov
mov
fs
jo
add
leave
xchg
push
and
or
mov
adc
jg
jg
in
lods
push
xchg
fbld
ljmp
mov
loopne
fidivs
imul
nop
loopne
adc
mov
jge
mov
imul
inc
fidivl
pop
test
and
push
fidivl
lret
imul
push
inc
scas
pop
negl
lret
les
cmp
roll
pop
testl
pop
shrb
ss
cli
rol
movsb
cmp
hlt
mov
leave
and
mov
sbb
js
push
add
fstpl
fwait
cmp
lods
insl
or
add
outsl
mov
mov
dec
js
imul
add
in
dec
inc
pop
fidivs
repz
insb
mov
xor
or
sub
xchg
imul
jl
into
ret
es
ret
fwait
inc
lds
mov
cs
xchg
xchg
inc
push
insb
mov
mov
push
insl
jp
imul
enter
lea
xor
call
inc
ljmp
bound
adc
cltd
bound
push
nop
outsb
xlat
sahf
mov
mov
lock
and
add
mov
insl
inc
sbb
aam
and
clc
lock
cwtl
jl
loop
loopne
es
xorb
inc
cmp
jge
nop
fsts
insb
rcrb
fs
mov
stos
scas
lahf
adc
dec
adc
ficoms
add
and
jae
and
add
imul
adc
jbe
xor
ds
insb
fcmovnb
data16
call
cmpsl
ret
test
imul
pushf
push
lods
enter
sub
pop
mov
in
push
add
jg
jg
shlb
outsb
pop
cld
cli
lods
dec
mov
sub
sbb
mov
test
jbe
dec
or
and
stc
faddl
sbb
pop
roll
push
adc
jle
xchg
pop
xchg
xlat
sbb
shr
cmp
mov
xchg
mov
ss
and
lea
negl
std
push
xchg
fldl
lods
sub
mov
outsb
js
xchg
adc
mov
mov
cli
mov
xchg
ficompl
push
sahf
iret
push
mov
sbb
mov
out
pop
insl
push
mov
push
lcall
jae
or
lret
popa
inc
fldl
mov
pop
idiv
cltd
pop
inc
sti
scas
aas
cmpb
stc
dec
mov
call
fnsave
pusha
dec
add
repz
dec
mov
push
cmp
mov
push
pop
into
nop
cli
mov
loope
sarl
xchg
daa
push
push
fisttpl
cmp
push
aaa
fnstsw
ljmp
pop
mov
clc
mov
jae
fsubrl
std
inc
popf
sti
adc
imul
icebp
mov
into
adc
fcoms
inc
sub
imul
sbb
jge
mov
lcall
xchg
int
dec
es
outsb
std
or
inc
add
jbe
stos
fisttps
jg
add
pop
mov
inc
add
sub
clc
popa
inc
xor
and
ja
dec
test
mov
nop
jmp
push
sbb
pusha
movhps
xor
orl
ljmp
lret
inc
flds
out
push
mov
xchg
rcrb
hlt
mov
or
mov
je
push
sub
js
pop
inc
fcmovb
addr16
fcomps
pop
jl
or
and
push
les
loop
lret
push
shrb
or
cmpsl
xor
stos
fwait
and
push
lds
insb
sub
jp
push
mov
test
repnz
push
addr16
mov
sub
xor
hlt
jmp
or
and
mov
enter
jne
cmp
add
maskmovq
imull
lods
mov
push
push
mov
cmp
out
cmc
mull
sar
fdivl
sub
jl
fnstenv
bound
and
xchg
arpl
xor
cmp
shll
gs
dec
xchg
fcmovnu
scas
mov
sbb
lock
cmp
insl
add
fwait
popa
loopne
andb
aad
cmc
sbbl
ficomps
push
es
ja
sbb
xchg
pop
test
icebp
aas
aas
rol
ret
out
xchg
aad
and
xchg
aad
iret
mov
test
mov
std
inc
ljmp
icebp
mov
mov
cltd
cmpsb
clc
mov
jbe
push
cld
jbe
dec
cli
js
pop
and
jnp
int
cmp
lods
jnp
push
gs
pop
or
jle
mov
movsl
cmc
mov
adc
xchg
mov
stc
out
fiadds
imul
or
rorb
inc
dec
and
dec
xchg
jae
in
inc
loope
xor
clc
lock
stos
cmp
pop
lret
or
js
jmp
sti
test
jmp
iret
hlt
icebp
imulb
dec
xchg
xchg
pop
mov
lock
pop
mov
fisttps
mull
push
mov
inc
mov
hlt
add
sarb
hlt
fidivl
repnz
cmpsb
mov
stos
xchg
mov
mov
sbb
xchg
and
movsl
mov
mov
call
mov
into
jo
fisttpll
push
imul
and
scas
mov
mov
mov
sub
push
xor
das
cs
pop
pop
ret
int
int3
fidivrl
cmpsb
cmp
adc
ljmp
push
jge
cmc
mov
addl
mov
inc
push
adc
aad
push
adcl
or
rep
inc
dec
into
and
ret
repnz
mov
xchg
negl
and
in
lret
mov
lock
loopne
pop
sub
mov
in
subl
hlt
rcrb
xor
jl
out
es
sbbb
rcll
xor
xlat
pop
scas
jne
insl
pop
daa
pop
bound
xchg
das
pop
clc
call
xor
mov
faddl
adc
das
lcall
bound
cmp
popa
lock
add
mov
repz
xchg
jns
add
jbe
push
pusha
push
lahf
or
adc
xor
inc
jmp
mov
outsb
cmp
rorl
jp
or
inc
sub
shrb
or
xchg
fmuls
dec
xchg
mov
fldenv
dec
xor
popf
scas
leave
cmp
inc
jge
leave
push
or
lods
mov
jp
pop
sub
inc
cli
dec
inc
scas
xor
pusha
mov
xlat
pop
in
iret
inc
insb
and
lcall
and
std
pop
icebp
jg
pop
pop
lahf
fdivrs
test
popa
xchg
jle
arpl
cmp
inc
jge
dec
pushf
cli
nop
mov
xchg
insl
lret
push
pusha
sti
cltd
dec
jge
xlat
jge
leave
sbb
xchg
scas
xchg
mov
stc
dec
dec
and
inc
add
push
data16
jnp
lahf
fs
push
mov
aas
push
and
cmp
lret
ss
and
popf
jo
mov
mov
sarb
dec
dec
mov
xor
push
popf
sbb
data16
repz
lret
call
xchg
fcmovnb
mov
and
int
adc
or
mov
push
pop
mov
cmp
xor
mov
jne
stos
adc
jecxz
outsb
cmc
pop
push
mov
cltd
cmp
sub
in
cmp
dec
xor
aas
out
icebp
dec
push
xchg
cmp
aaa
sbb
aas
sub
dec
icebp
inc
imul
ljmp
in
dec
mov
setl
jge
sbb
stc
jb
sub
lret
xchg
push
loope
jbe
outsb
loopne
mov
test
sub
add
bswap
cmpsl
stos
jbe
aad
ret
add
rclb
adc
ljmp
ds
into
sbb
sahf
cmc
enter
mov
mov
push
daa
mov
add
insl
xor
mov
inc
data16
jnp
jecxz
lcall
xchg
push
cmp
dec
dec
icebp
scas
add
adc
clc
stos
jmp
mov
repz
adc
and
cwtl
lret
lds
mov
loope
test
and
push
cli
test
mov
xor
xlat
or
add
inc
add
cmp
cmp
jne
cld
mov
sub
roll
sub
sbbl
jo
mov
dec
inc
cmp
jae
popf
addr16
push
pop
icebp
or
sbb
adcl
shll
pop
or
test
push
jmp
jmp
jns
inc
loop
pop
jo
nop
cli
mov
daa
push
rorl
fdivr
fisttpl
and
or
mov
xor
mov
ret
gs
push
sarb
cld
ja
inc
add
fadds
xchg
pusha
daa
rolb
js
push
movsb
pushf
ja
mov
mov
mov
cs
in
push
sbb
mov
ljmp
xchg
xlat
jle
push
mov
out
push
cmp
xor
mov
xor
add
pop
sub
in
mov
test
aaa
icebp
cmp
cs
sar
outsb
jg
mov
and
inc
fnstsw
repz
jae
popf
fimull
sub
fiaddl
pop
je
call
dec
aam
and
jecxz
jge
mov
and
sbb
push
or
sbb
dec
lret
mov
sahf
jo
jo
sub
fimuls
xchg
pop
xchg
dec
std
pop
xchg
ds
dec
push
dec
sub
int
lds
mov
insb
mov
andl
popa
lds
jo
inc
lods
mov
lods
imul
out
cmp
repnz
dec
mov
dec
lret
adc
movsb
rcrb
movsb
insl
and
jle
xchg
or
push
inc
and
out
popa
in
cltd
les
mov
xchg
test
andl
lods
cmpsb
je
add
and
sub
adc
les
stc
add
pop
push
mov
cmp
in
in
push
inc
ja
or
pop
cmp
inc
cld
lahf
pop
sub
mov
sub
inc
outsl
pop
mov
xor
fcmovne
adc
push
mov
out
inc
cmp
test
xor
mov
xchg
lods
jae
insl
in
push
cwtl
sbb
sbb
ds
das
add
mov
dec
int3
and
cmp
das
mov
jbe
sub
mov
dec
outsl
mov
jb
mov
js
sbb
xchg
bound
rcl
sbbl
add
mov
xor
pop
jecxz
daa
xchg
sbb
outsl
lock
mov
mov
sub
cmp
aam
xor
or
push
mov
lea
mov
dec
call
mov
cmpsb
int3
dec
mov
push
ficoml
test
adc
cltd
in
add
lret
stos
pusha
ret
adc
out
pop
aas
stos
pushf
ret
mull
sarl
iret
aaa
pop
push
idivl
mov
fbld
orl
inc
dec
inc
xorb
testb
mov
lret
mov
fistpll
lret
leave
cld
jl
test
jmp
lods
add
sahf
arpl
xchg
js
pop
push
mov
imul
out
lahf
loop
sub
lods
dec
mov
andl
cmp
or
mov
std
ja
pusha
push
sbb
mov
das
frstor
push
fcomi
inc
lods
cmpsb
nop
stos
add
adc
rcrl
adc
lcall
xor
push
sti
xor
lahf
in
jl,pn
fstpl
push
out
mov
jecxz
xor
adc
xor
arpl
shll
repnz
js
xchg
leave
dec
jle
add
add
xchg
pop
inc
cmp
pop
jl
aad
icebp
les
js
mov
rolb
hlt
leave
inc
jo
aaa
inc
xor
call
pushf
push
inc
mov
adc
mov
pushl
xor
mov
mov
fcmovnbe
jle
sub
and
xchg
mov
loope
push
jl
xchg
push
dec
lods
and
shll
adc
mov
aaa
cltd
dec
lds
stos
push
in
or
lret
add
fwait
mov
sbb
pop
shl
push
insl
out
iret
sub
mov
jg
mov
mov
call
rcll
popf
out
sub
sti
es
jns
pushf
aaa
push
jbe
or
push
inc
popf
into
dec
cmpsl
sahf
sbb
mov
xor
les
push
jb
inc
xor
imul
sti
xor
ret
stc
testb
inc
ja
cmp
cmp
mov
jge
or
negb
adc
jmp
cmpsl
out
mov
aam
mov
icebp
adc
jmp
addb
sti
inc
xchg
push
pop
dec
gs
jo
mov
jle
lds
faddp
sub
or
cmp
mov
imul
lea
and
mov
mov
mov
lods
lret
and
mov
mov
xchg
movsl
or
aaa
cli
cmp
cs
outsl
mov
lahf
sub
sbb
imul
into
cmc
adc
pop
inc
add
mov
push
push
call
push
and
or
pop
xor
fidivrl
jg
scas
mov
sbb
lods
and
fidivs
and
add
fwait
push
xorl
xchg
xor
scas
or
mov
adc
mov
pop
shll
jmp
enter
fsubrl
mov
mov
mov
or
push
add
outsb
das
inc
nop
mov
lcall
inc
mov
xchg
loop
data16
sub
test
ret
cs
or
lret
enter
dec
or
lods
ret
jge
movsb
bound
mov
out
push
add
imul
jbe
out
and
push
add
arpl
cmc
cltd
xchg
push
push
jge
cmc
xor
xor
and
mov
call
sarb
and
xchg
xor
movsb
mov
lahf
pop
cli
fcoms
fcmovne
addr16
jne
loope
xor
cli
add
out
cli
in
mov
mov
aad
add
mov
in
loop
mov
sbb
jno
add
xchg
mov
mov
int
ljmp
mov
push
popa
repz
mov
sbb
cmovle
fisttps
dec
xchg
pop
fnsave
decl
ljmp
and
add
and
xor
sub
mov
push
jge
sub
ja
ret
loope
jecxz
sub
jno
inc
mov
rcr
and
xchg
pop
into
pusha
mov
pop
push
aad
mov
mov
push
dec
bound
loopne
insl
outsl
xchg
aam
mov
loopne
not
outsl
push
out
insl
mov
rorl
gs
loope
jmp
imull
cltd
sbb
xchg
loopne
cltd
push
push
mov
icebp
ds
loope
fs
xor
jae
mov
aam
add
dec
enter
xchg
insl
cmp
sahf
rcr
sbb
daa
imul
jmp
scas
int3
sbb
mov
jb
push
push
dec
or
jne
outsl
cwtl
int
mov
pop
loop
les
pop
inc
js
or
lret
xor
push
div
mov
xchg
xchg
mov
sub
loope
jb
movsl
lea
cmp
gs
fildll
push
mov
cld
adc
jne
sbb
shlb
pop
or
movhps
inc
add
add
rcrl
xchg
push
xchg
jae
cli
jne
movsb
jmp
pop
mov
dec
mull
lcall
bound
adc
fbld
mov
xchg
jmp
dec
pop
ret
cmp
sub
and
cmp
push
inc
xchg
push
aam
jl
xchg
xchg
arpl
adc
sub
mov
lds
xchg
roll
leave
jnp
push
inc
hlt
push
mov
lcall
mov
cli
cltd
adc
dec
loope
and
inc
cs
aas
jmp
dec
xchg
mov
cwtl
xchg
xchg
sbb
sbb
out
lods
add
pop
pusha
inc
mov
ja
outsl
in
sub
push
call
movsl
push
push
incb
andb
push
mov
out
adc
and
repnz
loop
xchg
andb
push
mov
out
adc
and
loop
loop
xchg
xchg
mov
mov
out
data16
adc
adc
jp
lret
ss
cmpsb
mov
and
push
or
mov
mov
imul
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
shrl
test
mov
movsb
and
mov
inc
or
popa
adc
and
rcll
movsb
xchg
aam
les
push
inc
add
adc
and
aaa
xor
fadds
int
fsubrl
mull
cs
sbb
adc
jbe
mov
rclb
jo
and
mov
jb
mov
adc
push
leave
lds
pop
cmpl
aam
push
and
rcll
adc
je
sub
imul
push
addb
push
xchg
mov
mov
xor
roll
hlt
addb
mov
sti
inc
aam
fucomi
pop
add
subl
cmp
movsb
push
in
cltd
xchg
jno
and
cmp
leave
into
je
fwait
cmp
push
outsl
outsb
out
andl
adc
xor
pop
push
xor
mov
je
xchg
fcoms
xchg
xchg
les
or
sbb
sub
sbb
je
add
mov
movsl
loop
out
cld
cwtl
mov
jl
popa
add
pop
inc
je
or
les
divb
insl
and
jno
and
es
inc
sbb
mov
lods
loope
aad
rcr
mov
mov
add
xor
and
push
add
and
roll
add
push
adc
add
xor
and
push
add
and
out
add
xchg
mov
jmp
jg
gs
call
pop
jle
scas
cli
mov
cli
mov
pushf
lcall
pop
popa
pop
test
or
inc
dec
aaa
adc
or
sti
clc
jne
or
stos
mov
xchg
testb
mov
imul
std
inc
pop
pop
decl
out
test
pop
xor
dec
mov
rcrb
ss
call
ljmp
dec
jl
sbb
xchg
or
ss
repnz
add
cwtl
mov
adc
stos
mov
lcall
push
jb
leave
pop
fisttpl
hlt
mov
insb
lcall
jb
dec
add
push
xchg
cmp
pop
sbb
aad
push
jae
mov
sub
mov
push
fs
push
jl
jno
and
pop
push
leave
in
cmpsl
xor
or
inc
or
add
mov
hlt
fpatan
mov
and
and
lret
sub
aaa
mov
ds
sub
mov
iret
mov
mov
scas
orb
jns
cmp
clc
push
cwtl
daa
push
ret
in
jo
hlt
sti
std
roll
aad
fdivr
test
jl
pop
jp
mov
sbb
shlb
sbb
fnstcw
pop
pop
shlb
or
and
mov
fldt
js
inc
mulb
sbb
pusha
scas
cmp
push
negb
icebp
test
or
ret
xchg
fldcw
lock
dec
pop
dec
xchg
pop
mov
cmp
jg
sub
jns
add
rolb
mov
adc
sub
jnp
push
insb
mov
and
cmp
add
lret
lock
inc
push
dec
aad
out
lock
dec
mov
xor
jae
mov
jno
mov
ss
and
cmp
test
in
imull
dec
int3
jl
and
leave
pop
notl
rcll
push
pop
loopne
mov
les
mov
cli
test
mov
xchg
mov
int3
outsb
and
lds
gs
fists
jnp
call
addr16
jp
adc
aam
mov
dec
orb
ret
rorl
jns
add
sbb
js
dec
xchg
adc
xchg
pop
xlat
rorl
xor
les
jp
mov
cwtl
call
mov
or
rol
pop
lret
das
daa
push
lods
aaa
pushf
and
xchg
loope
jmp
cltd
aad
jb
and
lahf
inc
les
scas
es
icebp
or
add
lahf
jne
pop
inc
mov
adc
push
enter
push
mov
add
push
push
stos
mov
mov
jle
sbb
mov
inc
cmp
faddl
xchg
sbb
jne
adc
cli
pop
adc
and
sahf
fs
dec
adc
test
pop
rcll
movsb
mov
insl
inc
nop
hlt
xlat
inc
xchg
stos
mov
pop
cmp
cmc
adcb
or
sbb
dec
dec
clc
and
addr16
pop
ret
out
or
scas
ds
mov
adc
xchg
mov
sahf
push
iret
sub
cmpl
jge
pop
nop
push
in
xor
xor
in
or
mov
push
xor
mov
jno
mov
fstps
jne
cld
das
push
mov
xchg
dec
mov
idivb
mov
bound
push
adc
movsb
mov
pop
jne
jl
stos
xor
xchg
mov
lea
insl
lret
addr16
inc
int
mov
pop
xchg
xor
lock
cmpsb
fwait
add
repz
sbb
test
sub
movsb
shll
xor
or
imul
add
pop
bnd
aaa
in
fs
dec
stos
mov
jns
mov
stc
mov
push
jl
shlb
inc
out
imul
mov
lds
and
scas
xchg
or
mov
jle
jno
ret
push
mov
pop
xchg
fimull
pop
mov
lahf
jecxz
cmc
inc
pop
or
pop
mov
xor
pop
push
movsl
pushf
lds
in
stc
push
push
daa
fists
push
arpl
sbb
aad
cmp
stos
dec
mov
shlb
test
fldcw
dec
jb
jle
jl
test
jg
pop
movl
inc
mov
fbld
mov
cs
fidivl
jg
jnp
dec
and
push
or
sub
jp
and
sarl
adc
ja
mov
imul
jle
pcmpgtb
jmp
int
sbb
inc
rorl
push
ftst
xchg
dec
push
fisttpll
loop
stc
cmp
inc
repz
xchg
xorl
mov
pop
mov
mov
mov
xchg
mov
mov
dec
adc
in
mov
addr16
mov
popf
pop
in
loope
adc
add
rcl
stc
cld
out
stos
pop
in
jl
stos
mov
mov
mov
jp
gs
or
outsl
insl
lods
jp
lret
mov
sub
mov
fiaddl
xchg
aas
test
stos
add
ja
iret
loop
aas
sahf
push
and
hlt
fsubrl
adc
bound
mov
add
aas
ficoml
int
pop
jmp
sti
cmp
lret
lock
mov
mulb
mov
xor
dec
jp
or
mov
sbb
stos
jns
data16
fdiv
daa
pusha
popa
sbb
cmp
jp
pop
cwtl
daa
xor
test
or
in
gs
and
sub
mov
jg
test
popf
jnp
pop
sbb
sete
dec
cmp
das
jne
stc
cmpb
cld
rol
vdivss
sahf
sbb
adc
in
int
cld
xor
push
push
inc
dec
mov
leave
xchg
jno
mov
fwait
push
and
sbb
adc
cs
cmpsl
add
mov
xchg
lret
jp
test
out
sub
mov
int3
pop
insl
ljmp
fidivl
ror
cmp
int3
in
imul
and
das
cmp
loopne
in
out
push
xchg
pop
int
out
mov
jmp
mov
mov
dec
into
pop
pop
jb
aam
ljmp
cmp
pop
cmp
inc
movsb
jns
pusha
test
and
inc
sbb
call
test
xor
adc
insl
xchg
icebp
add
and
loopne
jp
add
dec
enter
mov
enter
cs
lods
out
fsubrl
cwtl
lods
bound
or
ret
inc
cmp
xor
xchg
vpmuludq
jmp
push
lock
ror
ljmp
cmp
sub
popf
mov
icebp
mov
xor
mov
jnp
sub
jno
mov
scas
cmp
ud0
mov
add
cli
push
dec
repz
dec
popa
lods
pop
lar
in
in
call
or
andl
das
xor
out
mov
add
cmp
movsb
es
or
and
pop
jb
cmp
dec
mov
std
add
or
mov
cli
fwait
orl
fbstp
nop
mov
enter
and
pop
mov
mov
mov
inc
fcmovnb
cmp
in
push
xchg
clc
ds
xor
cmp
hlt
add
xlat
dec
mov
sbb
jbe
lea
in
push
mov
sub
lret
out
fs
fcmovnbe
imul
aam
push
xor
je
add
mov
mov
repnz
mov
jge
xor
jl
hlt
and
adc
decl
lahf
cwtl
andb
les
repz
or
inc
mov
cwtl
inc
and
mov
adc
add
push
stc
adc
push
adc
xchg
subl
mov
in
inc
loope
loope
pusha
jno
mov
mov
inc
inc
int
int3
loope
mov
mov
movsb
test
sbb
jp
push
or
clc
into
dec
movsl
xchg
xchg
ss
clc
inc
cmpsl
dec
sub
mov
mov
lret
lods
fwait
cmp
or
sub
roll
push
arpl
fbld
insb
and
test
cmp
lret
jnp
int
jmp
xchg
mov
movsl
bound
sbb
inc
jo
mov
xchg
push
ret
lret
fildl
mov
pop
ja
xchg
dec
iret
repz
repz
outsl
sbbb
jle
inc
sub
push
sarb
sbb
filds
add
jno
into
fistl
scas
adc
jmp
add
sti
gs
push
fmull
test
in
jle
ret
push
jg
aad
les
sbb
mov
pop
xchg
mov
mov
sbb
adcb
mov
push
popf
inc
mov
lds
mov
xor
inc
addr16
mov
inc
addr16
jle
sub
stos
dec
mov
inc
mov
xlat
adc
push
pop
sub
xlat
inc
mov
mov
mov
jmp
mov
rol
dec
xchg
in
pop
push
adc
ret
jmp
and
pop
jge
sti
test
sub
out
push
punpckhwd
pop
icebp
jae
out
mov
mov
cmp
jmp
xlat
inc
adcb
xor
jo
std
subl
cmpsl
das
sub
test
enter
or
into
ljmp
ja
fisttpl
push
cwtl
test
push
repnz
stos
jb
dec
xchg
fwait
push
xor
pop
sahf
lock
mov
push
nop
xchg
imul
xchg
fs
mov
pusha
insb
adc
push
and
adc
inc
inc
imul
xor
leave
pop
rcrb
push
cli
and
ret
inc
inc
adc
add
cmp
icebp
inc
pop
js
mov
or
cmp
or
fcoms
lret
cmc
addr16
out
cld
or
jecxz
fcmovb
sbb
cmpsb
mov
rorl
push
mov
cli
je
roll
mov
mov
mov
test
lods
add
inc
scas
popf
mov
xchg
enter
jbe,pn
sub
xchg
inc
push
int3
fwait
sbb
sub
mov
mov
sbb
cmpsl
les
add
inc
out
inc
sbbl
in
fcoms
xor
aas
fdivl
js
pushf
icebp
loop
cmpsl
fstpt
sbb
cwtl
mov
mov
and
xchg
pop
out
push
in
xchg
mov
movsb
sysret
clc
sub
rcll
push
nop
popa
movsb
mov
mov
out
jae
cmpsl
mov
fstl
pusha
adc
sub
mov
mov
aam
repnz
loop
in
pushf
dec
enter
inc
out
outsb
loope
outsb
add
ja
dec
mov
cmc
stc
repz
push
sub
loopne
dec
dec
ret
in
popa
xchg
mov
sub
jge
mov
aad
push
movsb
dec
jg
loop
jo
xchg
ror
jl
loope
movl
dec
xorl
jb
loop
insl
jecxz
jle
sub
insb
and
mov
push
mov
loopne
cmc
fwait
pop
xor
in
push
cmp
mov
jnp
inc
sbb
dec
cltd
jo
cmp
pmulhuw
aam
loop
or
sbb
loope
mov
cld
insb
dec
and
or
jecxz
add
scas
mov
test
pushf
idivl
dec
fdivrs
sti
pop
xor
inc
lcall
push
pop
inc
inc
mov
add
fcomps
mov
ficomps
sbb
push
and
dec
in
push
dec
sahf
ja
addr16
sahf
cmpl
mov
inc
imul
popa
xor
sbb
js
fdivrp
mov
push
mov
jmp
mov
aas
xor
pop
in
fdivl
in
jne
loop
mov
adc
fwait
sbb
jmp
jle
clc
dec
push
lret
cmp
ds
jge
mov
aas
sbb
jmp
dec
mov
pushf
jg
cli
lds
jg,pn
aam
jnp
jne
sbb
roll
xchg
cmp
xchg
xlat
sub
xchg
mov
push
mov
xadd
ret
sub
mov
pop
shrb
stc
or
add
pop
addb
ret
cmp
add
and
xor
les
inc
cwtl
scas
pop
cld
xchg
std
jae
inc
xchg
lahf
das
jmp
inc
lret
push
xchg
call
or
jecxz
arpl
sub
cmp
sub
push
insl
mov
ss
fadds
popa
lahf
loop
test
outsl
mov
shlb
push
call
add
mov
dec
pop
stc
adc
jge
in
adc
cmpsb
fdivrs
sub
push
enter
stos
pop
jae
dec
fnstenv
in
jmp
pop
and
icebp
dec
repnz
pop
dec
mov
add
aam
mov
xchg
or
xlat
add
test
pop
jno
sub
lods
mov
sub
jge
fistpll
loopne
in
outsb
jbe
dec
mov
insl
arpl
mov
xchg
repz
lods
ficoml
mov
data16
xchg
and
movsb
leave
das
cmovne
dec
sub
daa
or
out
pop
xor
push
sbb
lret
mov
pop
rcr
outsl
rclb
mov
iret
ficomps
insb
insb
mov
add
pop
scas
mov
ror
mov
inc
enter
mov
mov
daa
jb
xchg
ficompl
adcl
push
movsl
int
pop
cmpsb
inc
push
pop
push
add
dec
movsl
jns
push
lods
ror
mov
cwtl
movsl
dec
loopne
xchg
xor
sbb
sub
mov
movsb
in
xchg
jecxz
aam
mov
rcrb
push
dec
sbb
mov
sbb
rcr
mov
out
or
fisttpl
scas
lds
mov
fiaddl
mov
pop
pop
jb
sbb
out
je
mov
and
inc
mov
adc
rclb
sub
loopne
jae,pn
cltd
iret
push
pop
mov
mov
call
sahf
and
loopne
xlat
pop
pop
call
shlb
pop
mov
out
shrl
xchg
iret
jno
pop
pushf
mov
and
call
daa
sbb
inc
sbb
loop
xor
fsts
aam
aam
mov
scas
rolb
stc
pop
fistps
push
lcall
mov
jae
or
jg
or
add
dec
xchg
int3
in
repnz
cs
lods
lods
mov
leave
mov
out
stos
cmpb
and
cwtl
lds
push
push
pop
gs
inc
lea
sub
adc
adc
mov
xchg
shl
inc
jg
sbb
cmovbe
stc
mov
fistl
cltd
inc
imul
or
aad
call
jbe
out
add
sahf
sub
sahf
add
sub
gs
or
push
movsb
pop
fidivl
adc
xor
cmpsb
inc
or
std
adc
or
xor
daa
dec
jl
sti
xor
jb
shll
jg
popf
addr16
shrl
in
sub
jbe
in
out
inc
sub
sahf
jnp
lret
jle
popf
fabs
xor
xchg
rcrl
dec
push
jae
aas
ficoml
or
ficoml
xchg
dec
push
xchg
loop
outsb
iret
js
and
mov
xchg
shrl
aam
js
ret
sub
lcall
mov
push
out
sbb
sbbb
push
and
repnz
sbb
nop
jg
in
lods
ljmp
lahf
in
push
push
jbe
push
jae
dec
sbb
into
push
mov
jge
cmpl
cmp
mov
add
pop
or
fisubrl
jae
xor
cmp
jl
outsl
push
movsl
sbb
xchg
in
into
jmp
insl
sbb
jae
add
sbb
jae
mov
and
fmul
jecxz
insl
lods
mov
mov
xchg
push
mov
xchg
and
ds
shrb
int
cmc
mov
in
lcall
sahf
das
faddl
add
enter
adc
push
mov
loope
xor
andb
sub
sbb
sub
imul
pop
mov
pop
mov
mov
mov
mov
das
aas
lods
lahf
jmp
xchg
mulb
call
xchg
sub
pushf
dec
out
dec
add
sub
cs
cmp
in
pop
in
jp
mov
mov
hlt
std
push
scas
subl
add
in
insl
je
jae
nop
pop
bound
insl
idivl
cmp
sbb
mov
jae
stos
cmp
test
cmpsl
lock
cmp
ss
rcll
cmp
push
push
mov
stos
pop
outsl
and
sbb
push
in
cmp
xchg
ss
xor
push
ret
pop
out
cwtl
pop
out
cmp
mov
fcoml
fldenv
mov
cmc
xchg
mov
jge
jns
mov
mov
inc
xor
mov
pusha
testl
inc
inc
lea
xor
jno
in
cmpsb
int3
roll
rcrl
mov
jno
jnp
lret
or
movb
imul
int
mov
pop
repnz
out
xchg
jmp
cmp
loop
sbb
mov
cmp
jne
je
test
scas
push
repnz
fsubrl
dec
sub
ja
xchg
cmpsl
pop
ret
push
jmp
cli
mov
ret
call
fistpl
inc
int3
inc
incb
xor
mov
xor
mov
out
mov
inc
pop
push
leave
sub
inc
sub
mov
adc
xor
aaa
cmp
jle
push
mov
inc
mov
addr16
dec
cltd
shl
mov
test
lds
mov
xor
xchg
shll
sub
mov
in
xlat
daa
loopne
aas
jl
out
pop
jg
xchg
arpl
jmp
icebp
sbb
sub
stos
ret
loopne
jmp
mov
sbb
aaa
and
dec
xchg
lock
push
movsl
mov
repnz
add
pop
inc
fcomps
pop
sub
push
enter
xor
fmull
gs
lret
cmp
loopne
pop
testl
fmuls
in
adc
lret
dec
cli
push
mov
mov
rcrl
repz
pop
jmp
fimuls
push
cmp
out
mov
ret
fcomi
dec
test
aaa
dec
neg
mov
add
xor
les
in
call
and
cmp
mov
push
js
pop
adc
loope
aas
lods
ds
iret
push
cmp
jb
pop
ret
cltd
dec
cmp
xchg
pop
cmp
add
icebp
jmp
lock
adc
sub
push
pop
hlt
popa
test
inc
aad
lock
and
and
in
xor
jl
push
mov
jbe
aam
stos
sbb
gs
xor
add
mov
test
mov
mov
jmp
popa
pop
mov
add
addr16
xor
mov
out
pop
cli
pop
subb
push
jb
or
xchg
sbb
inc
push
mov
inc
or
je
mov
mov
out
push
pop
jle
jb
enter
pop
sarl
repz
sbb
movsb
and
push
sbb
pushf
fnstcw
push
cmp
divl
pushf
sub
lret
mov
mov
rep
aad
mov
jo
popf
mov
sbb
int3
push
negb
rcrl
jbe
addb
xchg
adc
mov
pop
sub
or
fcmovnu
mov
adc
lcall
cmp
ss
pop
sbb
je
or
add
rcr
xor
mov
mov
sub
inc
cld
jbe
lods
adc
cli
inc
mov
sarb
push
pslld
mov
pop
in
cmp
push
adc
inc
cmpb
fucomi
popa
lods
mov
xor
cmp
mov
je
xchg
icebp
imul
into
enter
cld
jne
arpl
push
xchg
fmul
jae
insl
imul
add
pop
int
xor
pop
mov
add
insb
psubw
xchg
in
ljmp
dec
jns
mov
repz
jmp
sub
adc
pop
push
clc
fsts
xchg
sbb
addr16
push
jle
fdivs
sbb
push
cmp
adc
lods
insl
xchg
cwtl
sbb
sub
and
pop
jne
lret
int3
in
out
sti
inc
sbb
imul
push
dec
mov
lods
jae
loope
push
mov
push
pop
sarb
repz
jmp
pushf
fwait
ljmp
push
insl
mov
mov
mov
cmp
xchg
cmp
and
adc
sti
pop
loope
xchg
aam
les
adc
add
xor
and
push
add
and
roll
add
push
adc
add
xor
and
push
add
and
roll
add
push
adc
add
xor
and
xor
rcll
movsb
xchg
aam
les
hlt
and
scas
adc
scas
push
data16
fwait
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
adc
aam
inc
push
jns
lds
dec
test
je
fs
cmpsb
inc
xor
notb
add
hlt
push
in
aam
les
inc
sub
lock
je
inc
xlat
push
cmpsb
inc
xchg
pop
and
push
out
scas
data16
in
jl
dec
mov
cwtl
push
stos
movsl
pop
fimuls
ret
aaa
mov
pusha
mov
mov
mov
inc
das
lods
mov
shll
fsubrp
xchg
sub
enter
push
loop
cli
jg
cmc
mov
mov
pop
sti
aam
pusha
push
repnz
cmp
push
sub
sbb
inc
into
xor
lahf
out
pushf
jle
push
xadd
xchg
mov
adc
and
aam
adc
xor
hlt
rol
lret
mov
int3
mov
jnp
mov
mov
idiv
out
jmp
xchg
loope
pushf
in
test
xchg
jecxz
xchg
addr16
and
jmp
test
aam
js
je
or
stos
push
pop
pop
xor
in
dec
hlt
push
adc
push
es
mov
movsb
jbe
rolb
sbb
rolb
sbb
fadd
adc
push
cmpsb
je
inc
xchg
pop
ljmp
data16
xor
and
and
sub
lahf
push
andl
arpl
aas
xchg
cmp
call
mov
fisubs
scas
fs
outsl
jp
push
push
test
add
xchg
data16
push
cmpsb
inc
xor
and
adc
add
hlt
push
in
aam
les
inc
movsb
jbe
data16
push
cmpsb
inc
xor
and
adc
add
hlt
mov
call
jmp
clc
or
sysexit
pushf
mov
and
cmp
enter
xor
pushf
fmulp
movsl
adc
inc
cmp
test
jo
ljmp
xlat
mov
scas
jnp
testb
in
iret
dec
jp
das
jmp
pop
popa
lahf
mov
inc
pop
mov
cmpsl
adc
pushf
cmp
push
fscale
sbb
dec
enter
and
or
mov
xchg
nop
dec
in
imul
mov
js
xor
mov
out
jmp
mov
or
nop
and
std
neg
push
mov
inc
popw
into
or
xorb
jle
ret
idivb
pop
das
jecxz
popf
lret
jns
jl
sub
sarl
into
or
cld
out
mov
jecxz
in
rolb
push
inc
mov
xchg
ja
jns
fnstcw
mov
inc
mov
shl
push
repnz
mov
mov
cmpsl
lcall
cmp
lock
out
jge
inc
xor
ljmp
sarb
enter
cli
stos
mov
adc
jge
cmp
mov
aaa
inc
daa
icebp
call
fsubrp
sbb
mov
pop
imul
sub
and
mov
pop
dec
arpl
mov
add
mov
mov
jle
clc
pop
jae
test
dec
lret
es
mov
cmp
mov
jmp
and
cwtl
ret
push
jecxz
mov
mov
shll
pop
mov
sbb
cmpb
aam
mov
inc
inc
pop
es
pusha
mov
repnz
dec
std
mov
push
push
gs
lahf
cwtl
aaa
fsubr
repz
and
mov
jnp
push
popf
pusha
in
divb
jge
and
add
adc
aad
xchg
dec
call
push
stos
imul
ljmp
fiaddl
xor
pop
adc
outsb
mov
jbe
rcll
icebp
ja
pop
jg,pn
and
mov
add
inc
pop
jle
push
adc
jmp
lock
or
in
xor
sub
int
lahf
gs
nop
xchg
xchg
xchg
jle
movsb
aaa
out
fwait
jge
sti
inc
sbb
mov
int3
fcmovne
sbb
push
imul
in
cmp
fwait
adc
xor
and
add
jne
movsb
cmp
into
fnstcw
lock
add
add
pop
xchg
popf
cmp
push
rorl
stos
pop
and
sub
ret
jae
mov
ret
jb
bound
mov
jno
xor
test
sbb
iret
jne
sti
pushf
jge
pop
xor
push
cmp
mov
xchg
shlb
cmc
sahf
ds
push
xor
ljmp
hlt
sarb
jge
sbb
lds
out
or
mov
nop
into
out
sbb
stos
imul
fists
ds
jae
test
add
add
imul
adc
mov
lea
popf
cmp
mov
sbb
mov
xor
cmpsl
jle
and
pop
push
cli
pop
loopne
lret
sub
int3
aam
and
mov
out
adc
adc
xchg
push
add
jecxz
pop
loopne
push
daa
adc
mov
xlat
das
push
xchg
in
dec
aam
cmp
or
in
mov
pop
xchg
inc
icebp
xorl
pop
mov
cwtl
icebp
orl
dec
cmp
or
imul
sbb
addr16
aad
and
add
insl
push
add
fcom
out
sub
cwtl
ret
ds
mov
or
jo
daa
mov
mov
imulb
bound
out
jmp
xor
push
mov
movsb
mov
stos
inc
xchg
jp
divl
fs
cmc
scas
cmpsl
movsl
scas
lret
cmpsl
sub
lahf
or
divl
add
mov
jo
xchg
aam
scas
add
test
adc
xchg
cmpsl
jae
jmp
push
outsb
add
mov
cltd
or
mov
cmpl
loopne
out
jg
dec
jno
adc
into
stos
add
mov
xor
fadds
xor
popf
xor
mov
scas
cs
pop
add
mov
or
mov
cld
cmpsl
fld
mov
pop
dec
adc
push
jmp
nop
aaa
jp
scas
nop
lock
push
and
push
outsl
iret
lea
sarb
sub
pusha
push
ret
mov
out
add
insb
int
xor
mov
test
shrb
test
notl
add
jge
jge
orb
in
push
shrl
mov
pop
adc
faddp
dec
pop
jb
rcr
shrb
and
insl
fdivs
jbe
add
sahf
xor
cmc
dec
lods
or
jg
mov
sahf
nop
scas
mov
fidivs
push
lcall
sub
fnsave
pusha
les
clc
mov
outsb
shll
pop
daa
ret
popa
nop
lods
mov
xor
adc
shlb
sbb
pop
xchg
icebp
lock
test
push
imul
push
rol
imul
jbe
lcall
inc
jp
aam
jno
fs
inc
add
lahf
lcall
dec
cmp
or
and
stc
xchg
xchg
add
adcb
outsl
or
fldl
dec
xor
jl
or
push
clc
lcall
pop
out
dec
mov
pop
and
insb
mov
in
mov
push
mov
enter
add
mov
dec
jl
movsb
mov
cmp
not
xlat
jp
mov
inc
in
leave
enter
pusha
xchg
jb
repz
adcb
inc
in
jmp
inc
sbb
js
pop
push
and
adc
and
idivl
rcll
cltd
cld
xor
lret
sti
mov
jmp
stc
cmp
sub
loope
imul
andnps
call
aam
cwtl
pop
mov
mov
stos
push
xor
scas
aad
sbb
xor
pop
mov
repz
jne
pop
repz
out
cmp
mov
in
dec
addb
mov
sbb
fmul
or
imul
loope
sub
test
jmp
xor
dec
mov
pop
in
push
pop
jecxz
pop
icebp
or
in
sti
xchg
pop
cld
jb
adc
inc
addr16
ficomps
int3
mov
enter
xchg
rolb
lret
lds
repz
inc
sub
pop
repnz
xor
or
and
lcall
mov
cmp
xor
aam
sbb
pop
add
inc
mov
jecxz
mov
and
fucom
dec
cmp
sbb
pop
sahf
xchg
cmp
dec
cmpsb
ljmp
mov
addr16
gs
dec
sbb
scas
pop
xchg
stc
jae
loopne
pop
addl
in
outsl
adc
xor
jne
out
popa
rol
push
std
fadd
int
ja
jo
push
xor
or
lods
scas
pop
in
les
jle
enter
adc
pop
sub
add
mov
push
add
push
mov
stos
cmp
sbb
lods
scas
sarl
adc
sbb
pushf
and
jecxz
lret
scas
aas
push
xor
enter
push
jb
or
jmp
mov
iret
js
and
dec
inc
xor
pushf
pushf
lcall
jmp
lods
adc
dec
sarl
imul
insl
cmpsb
in
insl
in
push
imul
push
dec
jmp
xchg
and
adc
aas
fwait
and
gs
dec
out
icebp
mov
out
andb
jecxz
aas
push
xor
pusha
ret
xor
xchg
mov
imul
ljmp
dec
or
fs
cwtl
daa
in
fsubrs
adc
fisttpll
or
pop
jle
or
xchg
dec
mov
mov
movsl
lcall
inc
jmp
push
or
lcall
lret
sub
pop
cmc
sbb
xchg
add
outsl
in
inc
dec
movsb
xchg
pop
out
ret
aas
mov
mov
fisttpll
test
add
pop
icebp
xchg
imul
mul
cld
lcall
xor
stos
pushf
addb
lret
out
mov
mov
fcomps
negb
adc
js
aaa
fsub
xor
icebp
add
mov
fidivrl
sbbb
std
ljmp
imul
cld
and
addr16
jle
test
lret
ficoml
mov
or
ss
jge
testb
lea
push
adc
addr16
gs
insb
dec
loope
lods
or
add
xchg
mov
jnp
lods
test
xor
std
or
icebp
test
fcmovne
pop
bound
in
add
or
jae
inc
dec
mov
xchg
nop
out
pusha
pop
jge
addl
test
movsl
pop
nop
movsb
sub
cmpsl
mov
ja
push
push
fidivrl
push
outsl
sub
movsl
outsb
push
aaa
inc
adc
pusha
shlb
inc
das
sub
jg
pop
test
mov
add
pushf
scas
adc
or
adcl
lret
sbb
repz
pop
rorb
stc
inc
or
loop
sbb
sub
stc
out
sbb
add
repnz
lret
out
stos
dec
and
aaa
mov
prefetcht0
and
cmp
lahf
leave
mov
in
rcr
mov
and
cmpsl
not
cmp
sti
push
data16
out
sahf
shld
pushw
mov
lahf
les
stc
scas
cmp
jnp
sub
and
and
mov
lret
mov
cwtl
pop
pop
sub
test
in
scas
add
pop
mov
cmp
or
push
fs
in
mov
popf
leave
sbb
mov
std
loope
icebp
insb
sub
in
jecxz
sbb
mov
push
inc
mov
push
addb
dec
mov
stc
cli
in
outsb
jg
aaa
movsb
mov
pop
pop
pop
xorl
and
sub
jge
mov
mov
xchg
jnp
adcl
pushf
cmp
sbb
push
iret
imul
dec
enter
jge
adc
jbe
sbb
popa
cltd
es
xchg
pop
cmp
lea
push
sbb
mov
ljmp
sarb
shrb
mov
loopew
sub
add
dec
jmp
cltd
pop
ret
add
pop
cmp
or
in
iret
sbb
dec
jle
jmp
out
jge
inc
mov
arpl
int3
stc
cmp
fisubrl
arpl
jo
pop
in
fdivrs
lcall
cmp
cmp
into
cwtl
push
sub
lods
mov
lcall
repnz
out
mov
pop
ret
fcmovu
pop
or
pop
add
mov
lea
sbb
pop
push
pop
loope
in
push
scas
xor
inc
jb
gs
arpl
push
cmp
movsl
mov
std
cltd
lds
jmp
xchg
mov
cmpl
loope
mov
mov
push
add
mov
xor
fiadds
insb
add
cmp
jnp
ror
sbb
jecxz
or
test
pop
add
jmp
test
repz
xchg
and
mov
int3
adc
cmp
xchg
loope
push
imul
sbb
imul
dec
xchg
out
inc
scas
cwtl
pop
jno
jno
pop
out
ficoms
pop
adc
adc
xchg
jo
nop
cli
xlat
bnd
call
cmpl
imul
xor
dec
rcr
dec
jb
out
dec
int
lea
mov
hlt
cmc
rclb
cvtdq2ps
dec
mov
fs
leave
jns
adc
xor
in
ljmp
inc
mov
sub
xor
aad
pop
sub
inc
int3
ds
pop
ja
leave
clc
in
push
xor
cmpsl
dec
in
idivb
xor
imul
mov
cltd
lock
aam
int3
lock
sub
ja
jg
dec
jb
sub
ret
mov
push
out
or
xchg
popa
cwtl
jp
pop
icebp
fcoms
or
in
push
and
rcrb
cmc
jge
and
xor
mov
adc
push
fxch
ds
mov
cld
lods
out
pushf
aas
stc
imul
sbb
cmp
cmpl
mov
arpl
or
sbb
dec
dec
lahf
fdivs
pusha
lret
aaa
into
sarb
sbb
push
inc
popl
aad
adc
bound
mov
jge
ret
cmpsl
push
decl
or
pop
fcmovbe
lea
jmp
mov
add
sub
fwait
sbb
out
dec
mov
dec
xchg
cli
jae
pop
ja
lcall
pop
push
ret
push
add
stos
sub
dec
sbb
xor
add
int3
cltd
adc
xlat
pop
leave
mov
repnz
push
dec
outsl
inc
and
loop
mov
push
in
mov
and
lret
xchg
push
inc
jle
pop
jae
leave
lds
xchg
outsb
inc
mov
or
xlat
add
or
xchg
out
pop
insb
fcoml
hlt
cmp
sub
xor
push
pop
sub
or
jecxz
insb
xor
mov
aam
sbb
lahf
aam
push
sar
push
pop
daa
popa
xor
dec
cmc
cmp
cmp
jae
icebp
sbb
outsb
test
sbb
fidivrs
sbb
and
lds
push
dec
xchg
arpl
jle
push
mov
stos
push
xchg
mov
fwait
mov
je
jne
mov
fsts
stc
repnz
add
jge
mov
repz
cmpl
cmc
insl
dec
insb
lcall
and
scas
or
sbb
adc
fldcw
test
stos
test
rcl
pop
and
arpl
push
add
cmpb
outsl
dec
inc
stos
pop
inc
cmp
cmp
outsl
lea
adc
push
mov
mulb
push
xor
lock
repnz
in
repz
imul
mov
and
pushf
nop
sub
pusha
fcmovnb
pop
out
mov
adc
in
or
xchg
aad
inc
mov
inc
xor
scas
and
adc
or
push
mov
or
mov
mov
sbb
push
adc
jnp
inc
hlt
aam
sarb
add
mov
test
fcomps
movsb
pop
xchg
xchg
ljmp
je
addl
or
sahf
mov
jnp
cmp
cmp
add
adc
adc
lods
js
mov
dec
or
inc
jns
lcall
cltd
jns
iret
inc
mov
inc
dec
xchg
sub
dec
add
xor
pop
cltd
loop
push
fnsetpm(287
mov
xchg
mov
int
adc
out
or
add
sbb
jno
xor
clc
mov
pop
cli
popa
jge
lret
sub
gs
pop
pop
loope
adcl
add
repnz
push
sub
cmp
cmp
jmp
push
cvttps2pi
ja
add
daa
xchg
mov
add
les
rcr
push
inc
es
dec
cmpsb
ds
std
jns
mov
stos
push
mov
jl
mov
ror
out
xchg
js
nop
sub
insb
sbb
jae
mov
cmp
ret
repz
mov
rclb
mov
cwtl
in
popf
lcall
out
loop
push
icebp
jp
cltd
arpl
out
js
scas
stos
inc
pop
jmp
xchg
cmp
clc
mov
push
aam
pop
int3
sub
add
fwait
xchg
repz
adc
in
orb
push
mov
adc
das
ljmp
jb
pop
mov
mov
fcomi
dec
cmp
ja
sbb
dec
ret
mov
mov
pop
xchg
push
jno
fldt
test
test
adc
int
pop
movl
jbe
sbb
xchg
jne
lcall
shrl
gs
int
testb
jne,pt
outsl
mov
cmp
loope
jp
mov
stos
jp
loope
inc
xor
mov
mov
test
jmp
and
loop
lahf
sbb
fsubs
mov
gs
xor
vrsqrtps
cmpsl
jp
jmp
ret
lret
bound
nop
shlb
add
pop
loope
or
push
mov
out
test
mov
in
mov
and
data16
pop
insb
imul
fwait
jle
push
cmp
cmpsb
xchg
cli
div
dec
or
mov
aas
sbb
inc
enter
and
push
and
and
ret
and
fisubs
andb
pop
std
push
mov
shlb
mov
xor
push
sub
shrb
test
scas
pop
fistl
scas
movsl
dec
mov
sub
push
cltd
aas
movsl
jb
pop
les
cli
adc
sub
aam
cli
inc
dec
pop
pop
stos
fbstp
lock
cmpsl
shlb
mov
adc
sub
cmc
pop
mov
sbb
repnz
mov
add
push
imul
std
xchg
mov
jmp
ret
cmc
inc
inc
dec
fbld
mov
and
push
loop
sbb
fildll
js
inc
pop
insb
jns
push
into
icebp
add
call
insb
jmp
orb
mov
add
ret
jnp
pop
dec
aaa
inc
hlt
leave
fstps
sbb
ret
les
sbb
jbe
sbb
xor
sub
loopne
xor
xor
je
rolb
mov
jbe
bound
lds
jp
sti
sbb
fs
sbb
cmp
inc
ds
mov
push
lds
test
rcll
lahf
mov
push
push
pop
inc
std
out
adc
mov
and
push
sahf
add
dec
jno
and
ja
in
adc
adc
add
sub
mov
in
fistps
sub
es
int3
outsb
xlat
sub
outsb
js
addr16
fisubrs
dec
inc
stc
xchg
aam
cmp
jp
xor
jbe
xor
loope
sbb
push
sbb
mov
push
js
cmp
pop
mov
mov
aad
data16
sub
mov
push
stc
dec
dec
mov
cwtl
fucomip
xor
xchg
sbb
push
adc
and
stc
into
fimull
loope
dec
lahf
sarb
mov
cli
sub
cmp
in
mov
int3
cwtl
scas
and
mov
inc
out
cmc
sbb
clc
lret
mov
inc
push
fstp
lret
fwait
jle
outsl
popf
sbbl
clc
fs
jg
push
lea
cmp
test
sub
jae
dec
mov
push
ljmp
cmp
jae
ss
add
and
call
mov
xlat
cmp
mov
xchg
adc
or
daa
ljmp
or
push
dec
pusha
cmp
daa
xchg
jnp
dec
sub
xchg
stos
rcrl
aad
or
or
pushf
ljmp
fsub
testl
push
push
inc
out
xor
fcmovbe
hlt
dec
jbe
mov
or
loop
out
pop
xchg
jo
mov
or
test
inc
jecxz
movsb
and
mov
xor
daa
sub
test
xor
inc
daa
xchg
jecxz
pop
icebp
popa
sub
or
fstpl
repnz
jbe
mov
pushf
dec
add
mov
jo
mov
pop
push
xchg
lcall
mov
inc
xorb
push
lret
das
adc
sbb
aam
out
and
imul
push
pop
xor
sub
add
gs
imul
cmpsb
repz
lock
jbe
int3
push
cmp
push
xchg
sbb
sbb
lcall
adc
je
cld
sbbl
pop
clc
mov
out
xor
movsl
mov
insl
mov
mov
jl
pop
cmp
jmp
data16
add
ret
cmp
pop
pop
fcmovne
mov
jb
xlat
push
fbstp
lahf
lret
adc
aam
cmp
push
scas
cmp
mov
push
add
jmp
jno
clc
adc
je
cs
adc
lcall
insb
nop
fcomps
pop
cwtl
outsb
sahf
lret
mov
mov
shlb
or
jae
imul
arpl
dec
or
cmpsb
fwait
cli
pop
cli
pop
push
jnp
mov
shl
sbb
loope
mov
mov
imul
out
pop
jne
jg
out
loop
lret
and
movsl
dec
movl
ret
cmc
popa
or
lret
mov
cli
dec
cmp
xchg
in
notb
test
adc
shl
imul
xchg
inc
xor
jnp
insl
jne
enter
iret
insb
cmpsb
hlt
cli
fs
leave
sbb
adc
mov
jns
arpl
jb
or
sub
dec
enter
outsb
push
loope
addr16
ret
fisttpll
cltd
cmp
or
jmp
lea
dec
mov
mov
sub
enter
mov
adc
add
pop
lahf
mov
rcrb
push
lea
push
test
xchg
dec
adc
dec
sbb
in
mov
inc
movsb
jbe
data16
push
cmpsb
inc
xor
and
adc
add
hlt
push
in
aam
les
inc
movsb
jbe
data16
push
cmpsb
inc
xor
and
adc
add
hlt
lods
push
lods
es
mov
or
xchg
cmpsb
test
push
cmpsb
inc
xor
and
xor
add
hlt
pop
in
aam
lds
push
movsb
jbe
out
xchg
mov
sbb
cmpsb
xor
jmp
sti
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
push
xor
pusha
adc
add
sub
fs
je
stos
lods
mov
sahf
or
sbb
push
and
adc
add
pop
pusha
outsb
push
jle
test
jl
into
loopne
sar
rclb
pop
out
mov
jbe
inc
inc
sub
imul
icebp
lret
mov
xchg
movsb
jle
push
popa
bound
gs
jg
cltd
pop
roll
pop
rclb
mov
das
icebp
mov
xor
decl
scas
mov
inc
dec
popa
pop
push
outsl
mov
jb
mov
sbbl
addr16
cld
lock
sbb
inc
jle
add
pop
fidivs
push
and
adc
add
dec
push
xchg
testb
loop
dec
in
insl
scas
das
pop
mov
ja
dec
lcall
inc
sahf
popa
jle
outsb
mov
mov
lcall
out
iret
push
fbld
mov
repz
aad
mov
push
inc
jno
popa
lock
inc
mov
movsl
push
cmp
stos
into
mov
sub
pop
jo
pusha
outsb
push
rclb
or
int3
push
out
enter
xor
dec
jl
insb
sub
xor
cli
repz
rcr
xor
mov
test
dec
arpl
cmp
xor
add
cmp
rcrl
mov
mov
mov
inc
sub
dec
jl
insb
ss
pusha
outsb
push
jle
mov
mov
loopne
sar
rorb
push
and
adc
add
pop
pusha
outsb
push
jle
mov
mov
loopne
sar
rorb
fnsave
insl
push
out
popa
pop
leave
jecxz
sbb
sub
mov
lret
xor
mov
dec
lcall
sub
xor
adc
imul
mov
rcrl
and
fsubr
mov
iret
xor
inc
or
inc
or
mov
xchg
ret
or
jne
rolb
cmc
push
add
lods
and
mov
movsl
pop
std
mov
jle
xchg
mov
out
ljmp
push
inc
test
cmpb
mov
in
mov
adc
jg
iret
loopne
adcb
sub
int3
push
xor
jmp
cltd
push
mov
test
icebp
addr16
sub
sbb
or
push
mov
jp
adc
inc
call
enter
jle
mov
popl
lods
movb
xlat
jnp
dec
sub
lock
xlat
push
dec
addr16
fildll
enter
sub
jmp
mov
jb
or
rorl
icebp
mov
push
dec
clc
xor
or
mov
sbb
dec
mov
int3
inc
jmp
fldt
jae
or
lds
sbb
inc
or
shl
fld
rcll
cmp
jae
insb
sub
test
popa
aam
mov
pop
cwtl
xchg
sbb
aad
add
or
dec
mov
out
or
jne
scas
imul
mov
mov
lahf
lods
jp
pop
lock
xchg
jecxz
or
mov
clc
cld
push
les
push
fsubp
ret
in
lock
es
and
jb
in
jp
dec
inc
incb
sbb
adc
insb
push
sub
cmc
les
dec
pushf
jge
sbb
and
jno
fdiv
aaa
mov
jbe
xor
icebp
cs
mov
neg
cmp
mov
mov
mov
cmpsl
std
add
dec
sbb
out
adc
mov
jle
xchg
clc
cmc
loop
bound
dec
insb
repnz
dec
scas
lret
mov
mov
inc
jle
add
push
mov
fisttpll
pop
fisttpl
or
js
xchg
fwait
and
push
es
push
test
xor
stos
test
inc
dec
mov
mov
and
out
fiaddl
je
push
fistps
std
cmp
add
mov
inc
aas
and
scas
sbb
aas
jnp
jns
mov
dec
fdivrs
lds
lret
fsubrs
out
dec
jae
loope
jb
ds
sti
int3
jno
gs
jne
daa
addr16
js
pop
gs
and
xor
into
inc
lock
insl
push
imul
xchg
sti
cli
sub
xchg
cmpsl
pop
push
pop
loopne
aaa
mov
clc
outsl
out
mov
and
ds
test
mov
dec
movsb
xor
add
cmp
lret
sub
fwait
adcl
mov
pop
mov
mov
bound
leave
aas
adc
dec
jge
out
inc
ja
loope
xor
add
and
push
xchg
bound
push
imul
lcall
and
test
les
mov
dec
mov
scas
addl
add
pop
push
and
xchg
xor
into
lahf
dec
fildll
jno
sub
and
insb
push
dec
imul
sub
adc
and
or
insb
mov
adc
in
lock
sub
mov
std
jnp
sub
xor
pop
adc
inc
stc
adcb
outsl
jno
jmp
mov
test
or
mov
or
push
inc
xlat
add
xlat
popa
push
xor
in
int
pushl
push
cmp
fs
and
cmovae
xchg
notl
lahf
cmp
add
je
xchg
scas
lea
in
movsl
stc
adc
mov
filds
xchg
xlat
mov
stos
std
cwtl
roll
jbe
cmp
fidivs
adc
cmp
jge
pop
lahf
popa
std
lahf
inc
push
pop
pushf
mov
loope
int
aas
imul
popa
mov
jae
ficoms
fldl
das
insb
es
pop
xchg
out
cmp
sarb
cwtl
insl
jecxz
and
pop
jl
or
sbb
or
xchg
push
xchg
dec
enter
mov
sbb
adcb
int3
mov
push
mov
dec
insl
lea
lods
or
cmp
stos
cmp
mov
dec
fisttpll
in
cmp
insb
push
in
imul
pop
or
xrelease
aas
aad
cmpsl
add
cmp
pushf
ficoms
push
subl
aad
pop
cmpsb
sbb
cmc
fisubrs
xor
aas
cmpl
mov
inc
mov
dec
xchg
iret
jmp
pusha
call
inc
or
mov
pop
cmc
bound
push
cmp
rclb
out
in
aad
sub
shlb
lret
push
sub
lcall
into
jge
hlt
stc
int3
inc
loope
push
arpl
test
in
stos
aad
push
or
sahf
pop
fidivl
inc
imul
ljmp
out
out
sahf
push
es
jae
clc
pop
addr16
cmpsb
xchg
in
testb
test
aad
push
inc
inc
test
jo
mov
out
insl
dec
push
stos
scas
mov
leave
fwait
xor
mov
in
pop
xchg
std
imul
push
cmp
in
jle
inc
inc
jge
adcb
out
dec
and
loop
jge
jo
pop
mov
rolb
xorl
mov
jg
leave
lods
fs
fsubrs
pushf
dec
mov
pop
or
dec
lret
push
ds
jecxz
pop
xchg
pop
pop
mov
lock
xor
shll
xchg
and
imull
lock
fwait
lcall
outsl
and
jl
into
stos
inc
or
pop
cmp
scas
cmpsl
test
movsb
lock
jle
stos
cmp
jl
mov
stos
cmp
jle
popa
in
mov
aaa
add
cmp
pop
lds
out
jns
fxch
in
orl
cmpsb
pop
sub
push
fwait
cmpsl
push
mov
dec
repz
int
lea
adc
adc
dec
pusha
jnp
push
and
ss
mov
nop
addl
lods
paddq
mov
dec
jmp
add
mov
push
jl
jp
cs
jecxz
add
push
adc
inc
imull
dec
xor
in
xor
scas
adc
adc
sbb
push
xchg
push
xchg
inc
aaa
jmp
imul
icebp
cmp
mov
dec
enter
jno
adc
push
add
stos
mov
mov
sbb
int3
scas
jne
lahf
cmp
pop
adc
dec
sub
or
inc
sub
shlb
into
test
mov
xor
outsb
ret
fstpt
pop
nop
gs
aaa
add
incb
xchg
in
flds
xchg
js
pop
icebp
xor
sti
mov
je
push
in
push
push
pop
push
out
ljmp
les
add
add
lahf
xor
andl
pop
mov
addr16
mov
shll
lret
daa
ljmp
dec
cmp
test
dec
adc
fldcw
movsl
jns
stos
fists
loop
lock
sti
or
add
divps
je
orb
pop
sbb
movsl
cmp
dec
loope
or
xor
js
and
fildll
mov
std
orl
jg
cmp
mov
inc
mov
stos
cmp
fwait
cmc
or
bound
fstpl
dec
add
aad
cmp
out
mov
mov
mov
sbbl
sbb
lahf
pop
adcl
add
data16
cmpl
js
push
push
mov
fnsave
into
imul
lret
sysenter
imul
ret
cmp
mov
jl
mov
cmpsb
mov
cld
lods
int3
mov
int
ljmp
jge
ret
dec
sbb
sbb
or
xor
out
and
or
and
ds
lea
test
jp
ss
fsubrs
mov
fcoml
test
es
xchg
jo
cmpsb
repz
xchg
xchg
int3
jo
loope
shrb
add
iret
inc
lret
mov
daa
xchg
dec
cmp
and
insb
fistpll
inc
mov
roll
sub
cmp
fisubs
xlat
ljmp
in
adc
push
stos
jns
daa
xchg
pop
sbb
mov
or
aad
lea
mov
scas
es
mov
inc
push
push
sub
cmp
jp
movsb
sarl
lock
push
ret
sbb
xor
cs
xchg
sarl
imul
pushf
mov
sub
jp
inc
dec
dec
or
xor
sar
aam
mov
sub
movsb
add
pop
sub
inc
fs
push
lods
add
add
rorl
ss
pop
add
mov
xchg
cmpsl
out
sbb
lcall
xor
clc
pop
push
lcall
in
jo
and
push
cltd
sarl
xchg
decb
in
mov
lea
or
lea
dec
je
test
cmp
cli
fimuls
xchg
dec
idiv
push
mov
pushf
pushf
and
fldenv
in
aam
push
inc
mov
mov
inc
jp
test
movsb
add
push
leave
dec
xor
fidivs
insb
in
push
rol
out
es
cld
les
add
aad
jae
mov
sub
dec
lods
mov
xor
in
aaa
xchg
inc
adc
imul
lods
mov
mov
fiaddl
add
push
sub
sub
sar
shl
mov
sub
jmp
adc
xor
lods
adc
mov
xor
and
cmp
bound
jge
add
jbe
xor
xchg
cli
pop
pushf
repnz
cmp
add
mov
je
or
pop
push
gs
sub
js
and
and
xabort
inc
iret
xchg
xchg
pop
xor
loope
add
arpl
daa
js
mov
inc
roll
push
sub
and
adcb
push
arpl
cli
pop
add
aaa
sbb
rorb
xor
shr
iret
ss
inc
insb
mov
aad
fwait
icebp
fsubr
lret
dec
dec
lcall
into
iret
aas
dec
mov
cmpsb
mov
cli
movsb
and
push
and
movsl
dec
in
mov
fisubs
fsubs
push
sbb
in
in
mov
data16
loope
mov
jecxz
sti
pop
and
pop
mov
fmuls
jb
mov
addr16
in
inc
jecxz
cmp
or
ds
mov
sar
shld
mov
xchg
jecxz
loop
sbbl
push
pop
jge
repnz
mov
push
mov
std
into
pop
xor
dec
sub
lods
adc
inc
push
add
dec
sbb
jge
outsl
mov
rorb
cli
cmpl
bound
lock
xchg
fnstenv
jg
add
jo
xchg
push
pop
sub
mov
movsl
addl
enter
pop
dec
in
sbb
les
pop
lds
dec
adc
jl
mov
xlat
sub
decl
xor
dec
and
outsl
xlat
clc
mov
stc
sbb
cmpsl
xchg
mov
fwait
pop
jl
pop
jne
xchg
insb
aas
aas
les
or
and
sub
pop
xorl
repnz
push
scas
xchg
or
inc
jne
mov
popa
xchg
lret
mov
popf
js
cld
ljmp
cmc
popf
mov
pop
fwait
lret
popa
or
mov
int3
cld
xor
xchg
daa
arpl
push
add
into
or
fadds
nop
fidivl
aam
xor
xchg
inc
cmp
dec
ja
mov
les
mov
popf
dec
or
adc
push
and
add
mov
fiadds
cmp
stos
mov
cmpsl
inc
daa
ljmp
pop
jge
jg
addb
jg
cmpsb
je
gs
out
movsb
roll
mov
cmc
mov
adc
push
int
and
gs
movsl
shll
inc
inc
scas
xchg
out
xorb
mov
dec
mov
lock
add
cmpsl
test
inc
push
xchg
mov
adc
stos
jecxz
xchg
ljmp
lret
push
cmpsl
pop
insb
jo
test
fsubrl
jne
mov
enter
cmp
sarl
lret
xchg
add
sbbl
fs
fcmove
pop
sub
mov
dec
insb
stos
mov
mov
arpl
fisttpll
mov
arpl
insl
dec
mov
stc
jp
clc
rorl
adcl
adc
fcmovnb
dec
xchg
cltd
ljmp
inc
in
and
pop
scas
pop
inc
in
std
adc
ret
fwait
cmp
les
inc
sar
pop
mov
mov
insb
xor
aad
push
adc
dec
push
dec
lea
cs
cli
inc
shrb
outsl
mov
inc
adc
out
push
scas
xchg
fnstenv
jae
dec
pop
inc
std
jmp
push
dec
inc
loopne
aaa
pop
mov
inc
inc
pop
push
sub
ss
cmp
ljmp
stc
fimull
iret
xor
sar
add
cmp
sub
into
movsl
in
ss
pop
outsb
popa
xchg
in
add
jmp
adc
mov
hlt
sbb
xchg
gs
mov
imul
push
cmp
fwait
or
adc
mulb
rclb
scas
or
pop
mov
test
bound
push
mov
add
addb
scas
repz
pop
pop
pop
cmp
into
adc
aad
push
jmp
loopne
stos
icebp
adc
and
cmpsl
and
shl
dec
test
push
lret
test
pop
add
ret
mov
inc
in
jecxz
mov
dec
out
and
add
in
jg
sub
movsb
fsts
inc
and
mov
ret
inc
pop
sbb
ret
int
and
push
lea
dec
outsb
push
adc
sub
add
mov
jp
mov
mov
insb
rcrb
mov
out
mov
and
xor
jge
cmpl
test
cwtl
mov
push
clc
dec
push
jmp
je
sub
je
cmpsl
cmp
inc
cs
inc
leave
sti
or
add
xor
jp
inc
hlt
push
ficomps
cmpsb
jns
add
push
xchg
dec
std
fsts
hlt
arpl
sub
push
push
daa
push
dec
jecxz
fs
mov
push
or
mov
sahf
push
bound
adc
mov
dec
inc
pop
add
xchg
into
incb
add
inc
push
andl
jbe
jbe,pt
and
jg
sbb
jb
stos
std
fistpl
jmp
add
jb
mov
pop
jp
ret
and
push
sub
push
scas
ss
aam
pop
cmp
inc
hlt
and
imul
mov
iret
mov
push
add
popf
cmp
adc
das
cmpsl
push
mulb
sub
jae
enter
mov
lret
push
mov
pop
es
popa
lret
push
mov
popa
push
xchg
cmp
out
mov
int
repnz
xchg
sbbb
notb
sahf
mov
xor
mov
lret
data16
sbb
lods
push
adc
sarb
mov
sbb
xor
outsb
add
mov
sahf
mov
popa
inc
hlt
sub
jno
ret
and
outsl
xchg
leave
into
shrl
add
test
xchg
adc
in
sbb
push
in
fistpll
pop
rcrl
xchg
call
mov
cld
mov
test
push
sbb
jo
insl
aas
cmp
pop
fdiv
cmp
movsb
sti
rorb
xchg
fildll
dec
dec
inc
add
lea
gs
andb
jns
xchg
mov
scas
dec
push
xor
fs
int3
test
fcoms
inc
testb
xchg
cld
or
dec
movl
imul
inc
nop
lret
jno
mov
sbb
mov
shl
ljmp
pop
jge
sub
jecxz
jmp
xchg
and
sub
jmp
and
stos
push
mov
inc
push
fbstp
xor
and
cltd
fidivs
or
sub
xchg
sub
add
ds
hlt
jg
xor
pop
icebp
in
mov
xor
adc
aas
and
cmpsb
jns
mov
nop
out
xchg
push
mov
push
std
js
push
push
repz
push
popf
add
jg
xchg
mov
add
test
xor
popa
sub
leave
test
pop
imul
imul
fucomip
dec
jae
mov
mov
movsb
push
mov
jo
imul
lret
mov
pop
nop
and
mov
inc
sbb
mov
fildl
push
lds
sti
mov
adc
adc
call
or
bound
dec
insb
out
dec
cmp
je
decl
aaa
push
or
jg
mov
loop
inc
cs
cmpsb
dec
imul
dec
out
pop
jnp
fidivrs
andl
pop
mov
and
adc
mov
xor
das
ja
mov
sbb
subb
in
jg
and
fldt
or
sub
pop
nop
ja
mov
testl
int3
idiv
aad
mov
repnz
mov
ds
imul
pop
sbb
scas
inc
jmp
fiaddl
insb
sbb
fsubl
cmp
imul
aad
fadd
xchg
lcall
pop
push
sbb
in
stos
xchg
dec
mov
scas
das
ljmp
jge
cmp
rclb
nop
test
pop
pop
fisttpll
movsb
outsb
add
dec
int
cs
jecxz
inc
mov
popa
or
and
xor
lcall
int3
and
mov
ret
add
mov
push
xchg
adc
push
xor
leave
xchg
sub
push
lcall
and
cltd
popa
es
lahf
sbbl
loope
arpl
and
mov
and
mov
and
mov
sub
insb
jg
and
lcall
sbb
push
loop
mov
cmp
xchg
test
rorb
pop
inc
test
repz
xchg
mov
pop
addb
int3
out
out
and
add
in
in
xor
nop
push
ja
inc
les
and
and
popa
mov
in
mov
inc
jns
sub
fdiv
sbb
loop
shlb
adc
leave
lret
add
mov
es
xchg
lret
test
popl
arpl
sahf
fs
inc
lds
je
cmp
mov
int
inc
cli
in
push
or
ret
mov
mov
mov
out
mov
outsl
sub
rorb
xchg
xchg
leave
dec
icebp
aaa
lret
sti
or
data16
iret
testb
xchg
or
jns
repnz
out
cmpl
adc
in
sbb
scas
mov
add
movsl
sbb
insb
pop
push
fldenv
mov
add
xchg
sub
sub
leave
cld
loope
in
mov
cmp
shlb
ror
stc
test
inc
sub
ljmp
jmp
cli
jbe
pop
fldenv
scas
addr16
test
mov
adc
sub
xchg
dec
insl
xor
ret
and
inc
or
imul
push
stc
jmp
imulb
divb
js,pt
sub
jbe
dec
xor
lcall
xor
cmp
insb
xor
jg
lret
push
adc
js
out
jnp
bound
outsl
mov
sub
xor
cmp
jmp
lea
jb
xchg
jle
stos
or
push
lods
add
jo
shr
mov
dec
jae
cwtl
add
sbb
push
add
sbb
or
mov
xchg
push
fidivl
in
rclb
sub
fsubrp
jns
imul
jae
pop
pop
out
mov
xor
add
divl
push
aas
mov
xchg
push
mov
mov
xchg
pop
jbe
loop
dec
mov
cmp
xor
shlb
out
mov
sub
cmp
mov
scas
cmpsl
fistps
aas
in
adc
aaa
out
ljmp
lea
roll
mov
je
loopne
out
add
xor
xor
mov
pop
sub
sbb
xor
fbstp
xchg
sbb
push
mov
pop
insl
and
popa
sub
or
sub
or
movsl
shl
add
lcall
cltd
ja
sti
subb
div
pop
xchg
in
ljmp
xchg
dec
add
cmpsb
mov
xor
dec
push
inc
sub
roll
shlb
add
pop
pusha
outsb
push
jle
mov
mov
loopne
sar
rorb
push
and
adc
add
pop
pusha
outsb
push
jle
mov
mov
loopne
sar
rorb
push
cs
add
jo
or
jle
mov
mov
loopne
fxch
and
aam
les
hlt
ds
dec
jo
pusha
out
sar
xorb
or
mov
cwtl
adc
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
