add
add
add
add
add
outsb
add
xchg
add
add
jl
add
add
add
jl
add
jl
add
jl
add
mov
add
ret
add
xor
add
add
js
add
bound
add
add
push
sub
add
add
sti
xor
add
xor
add
add
add
add
add
add
outsb
add
xchg
add
das
add
jl
add
mov
add
jl
add
jl
add
jl
add
add
add
mov
add
js
add
bound
add
add
push
sub
add
add
sbb
add
add
jl
add
jl
add
inc
outsl
add
jl
add
fisubrs
add
aas
add
jl
add
add
add
jl
add
jl
add
jl
add
or
add
js
add
mov
add
js
add
bound
add
add
push
sub
add
add
sbb
add
add
jl
add
jl
add
inc
outsl
add
jl
add
fisubrs
add
aas
add
jl
add
add
add
jl
add
jl
add
jl
add
push
xor
add
mov
add
js
add
bound
add
add
push
sub
add
add
sbb
add
add
jl
add
jl
add
inc
outsl
add
jl
add
fisubrs
add
aas
add
jl
add
add
add
jl
add
jl
add
jl
add
lds
add
js
add
mov
add
js
add
bound
add
add
push
sub
add
add
js
add
sbb
sub
add
add
ficompl
jmp
lock
mov
add
push
add
add
imul
add
add
add
add
push
clc
add
add
add
add
add
add
jb
arpl
mov
add
add
add
loopne
pop
add
add
add
add
add
add
add
push
add
data16
out
add
sbb
sti
add
add
sub
data16
add
add
add
add
add
add
add
add
faddl
inc
add
inc
add
add
add
push
add
add
add
add
add
add
add
add
or
push
add
or
dec
add
add
mov
mov
add
out
faddl
inc
add
or
mov
add
add
or
or
or
sub
stos
add
add
add
add
add
add
add
cwtl
add
stc
add
add
add
add
or
scas
add
add
add
xor
mov
add
add
add
or
in
jl
sub
sbb
in
faddl
cltd
add
add
push
add
add
data16
add
js
inc
add
add
mov
jb
add
add
push
add
add
add
add
add
add
cltd
add
add
out
push
add
add
add
add
mov
add
add
add
add
lea
faddl
and
pop
add
add
add
add
add
add
add
add
add
add
flds
add
add
iret
add
add
mov
lret
add
inc
add
add
add
add
add
add
add
xor
data16
add
add
add
add
add
add
add
add
add
fildl
xchg
add
xor
dec
add
add
add
add
add
add
add
insl
add
or
call
add
add
lea
pop
add
add
add
test
scas
add
add
lea
ljmp
add
add
add
add
add
cs
loop
add
sub
inc
add
test
or
or
dec
add
add
add
inc
add
scas
add
add
add
jb
or
add
add
add
test
stos
add
add
data16
add
add
inc
add
movsb
add
add
dec
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
leave
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
lcall
add
test
out
add
add
add
scas
add
insl
add
add
stc
add
movsb
add
add
add
add
or
mov
add
pop
add
add
add
add
add
add
sbb
outsl
mov
pop
imul
loope
aam
jp
cli
mov
loopne
pusha
jmp
mov
lds
dec
sahf
mov
pop
push
sub
fistps
data16
fcompl
inc
imul
pop
lret
ljmp
lods
bound
insb
mov
xchg
jmp
lret
jecxz
bound
out
das
ret
scas
in
call
jg
movsb
aam
sbb
push
jle
out
out
filds
movsl
call
loop
xor
dec
mov
adc
cmp
xor
rcr
int
rorb
subl
test
jbe
outsb
pushf
pusha
loop
mov
mov
fdivrl
pop
mov
xchg
aas
pop
xor
add
jmp
out
lret
mov
push
inc
std
in
arpl
sub
and
out
pushf
inc
xor
or
jl
cmc
lods
jmp
cmp
and
ljmp
stos
and
fdivrl
cwtl
scas
call
cld
pop
mov
cmpsb
in
int
lods
lea
jae
popf
iret
sarl
push
lret
adc
push
in
jle
mov
ret
icebp
shll
imul
cmp
loopne
push
xor
pop
lahf
loope
imul
cmp
out
xlat
mov
data16
push
add
sub
mov
push
sbb
sub
and
insl
mov
iret
xchg
dec
or
cld
cmp
xchg
je
jg
adc
push
das
outsl
xchg
cltd
mov
push
or
push
pop
or
imul
jl
mov
les
inc
xchg
sbb
jno
xchg
and
jns
mov
loop
pop
inc
push
rcr
rclb
das
movsb
xor
in
xchg
jbe
adc
pushf
adc
sub
out
popf
dec
jb
adc
sbb
lret
insb
xchg
or
iret
add
inc
nop
xor
dec
adc
xor
stos
loope
stc
mov
jg
jmp
fcom
inc
loopne
hlt
mov
shrb
mov
mov
xchg
into
push
int3
xor
push
mov
cli
icebp
out
sbb
lcall
rcl
xor
jns
shl
mov
xchg
sub
dec
jg
popf
shll
push
adc
aaa
push
pop
in
add
ret
dec
fs
cmp
xchg
jmp
lret
dec
pop
cli
adc
inc
outsb
repnz
aas
fstpt
aaa
movsb
lcall
jne
popf
inc
sbb
mov
aad
sub
gs
cmp
ss
dec
rclb
aas
imul
sub
inc
jecxz
jge
jle
addr16
dec
popa
sbb
sbb
aas
cmp
dec
cwtl
outsl
jl
and
fdivl
adc
call
push
add
add
add
add
add
add
add
push
mov
push
push
push
call
mov
movb
mov
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
ret
out
scas
fistpll
into
fistl
outsl
das
pop
aas
dec
dec
aas
pop
sub
xchg
lahf
out
scas
fistpll
and
lahf
sti
pop
jg
dec
add
dec
dec
push
cmp
outsl
pop
jg
push
insl
pop
out
sub
int
adcl
push
jae
dec
add
outsl
push
or
into
mov
lcall
cld
push
cmp
sbb
and
sbb
xorl
test
jae
mov
jnp
mov
aas
shlb
aam
lret
in
out
push
repnz
aas
loope
in
scas
xchg
fwait
cmp
add
repnz
rcl
rol
pop
shrb
pushf
fbld
pop
lret
call
iret
ljmp
fs
jo
orb
shlb
testl
dec
xor
mov
iret
sub
jg
cwtl
cmp
mov
push
or
or
lahf
push
push
into
sbb
inc
clc
daa
sub
filds
jae
jg
pop
mov
pop
shrb
pop
outsl
mov
rol
iret
mov
inc
paddw
lea
das
adc
outsl
pop
sbb
lods
jmp
loope
lret
stos
sar
sahf
ljmp
pop
es
xor
pop
cmp
mov
je
cmpsb
sarb
jecxz
sbb
dec
cmp
cmp
cmp
jle
fs
test
lods
mov
fildll
movq
outsl
das
pop
aas
dec
dec
aas
pop
das
outsl
pop
jg
lcall
iret
iret
mov
decl
das
pop
aas
dec
dec
aas
pop
das
outsl
pop
jg
lcall
pop
jl
jecxz
es
jnp
ljmp
sbb
sbb
adc
pop
inc
and
addl
adc
pop
sbb
loop
imul
dec
pusha
mov
loop
lock
sbb
mov
stos
inc
dec
adc
stos
dec
popf
mov
xorl
push
daa
popa
add
xor
ret
subl
and
adc
inc
leave
push
pop
ja
sahf
icebp
jns
inc
or
xor
push
out
fistl
cmp
cmp
in
or
dec
das
fmull
dec
dec
xor
fimuls
mov
jmp
lcall
mov
arpl
ret
js
cmpsb
cmpsb
jle
xor
movsb
cli
cmp
movsl
testl
mov
cmpsl
std
sub
push
inc
xchg
outsl
rcrb
movsb
sbb
cmc
push
jne
cli
jmp
fdivl
movsl
xchg
int
popa
stos
mov
stos
dec
mov
dec
dec
pusha
adc
jl
mov
push
mov
adc
inc
push
repnz
mov
lea
fwait
pop
shlb
outsb
lods
push
icebp
xchg
lret
daa
jno
lods
xor
repz
adc
pop
ja
insb
insb
cwtl
popa
ss
out
jle
xor
xor
pop
leave
in
pop
dec
mov
ja
and
dec
clc
pushf
cmpl
pushf
xor
test
xchg
sub
out
mov
xchg
sbb
fwait
cmp
loope
ljmpw
cmp
pop
mov
movntq
or
xchg
call
mov
pop
dec
enter
movsl
xchg
dec
xchg
adc
xchg
xchg
imul
leave
mov
sbbb
pop
in
dec
repnz
scas
test
cld
popa
daa
les
lahf
jns
into
sar
fldl2e
popf
sub
imul
out
negl
cmp
insb
add
mov
je
rclb
jae
in
icebp
sti
popa
enter
jne
jge
add
fsts
sbb
mov
push
pop
sub
test
ss
xchg
lea
xchg
mov
pop
icebp
inc
int
push
in
outsb
je
jae
xor
insb
inc
inc
or
cmp
mov
out
outsb
pop
inc
data16
jle
sahf
mov
cmc
sbb
cmp
sti
sbb
cmp
xor
testb
cltd
xchg
test
cld
in
dec
push
pop
shr
loope
out
sahf
repz
ds
insb
aaa
test
int3
mov
lret
cld
or
push
mov
iret
xchg
imul
jmp
mov
or
clc
lret
leave
sub
cltd
xor
scas
jp
jge
andl
insl
in
cmpsb
sbb
xchg
icebp
add
dec
cmp
jbe
fdivs
scas
jg
cltd
clc
inc
dec
popf
xlat
in
push
jg
jmp
add
pop
dec
and
scas
push
sbb
or
add
add
xor
imul
cs
cmpsb
rcr
int
js
mov
in
cmp
mov
cmp
adc
leave
pop
sub
mov
jg
fwait
xchg
add
cltd
xchg
mov
adc
mov
xchg
jecxz
and
flds
ret
pop
sbb
inc
ret
xchg
negb
or
fisubs
popa
icebp
mov
cli
mov
sbb
push
int3
pusha
sub
add
push
cmp
sbb
cld
sub
pop
daa
stos
jg
and
xchg
sub
mov
add
dec
test
imul
mov
shrl
mov
cmp
mov
mov
mov
fcoms
in
ds
mov
xor
ret
sbb
xchg
adc
testl
jg
mov
push
xchg
loop
jno
pop
outsb
jl
xchg
sahf
mov
ror
inc
testb
add
adc
lock
js
lods
movsb
shll
xor
xchg
out
fdivs
lock
xchg
cmp
out
in
jge
rsm
test
add
int
cmp
sbb
pop
xor
inc
or
cmp
popa
mov
adc
js
mov
pop
int3
test
xchg
pop
dec
and
pop
lret
jmp
xor
dec
dec
shl
jno
lea
cld
repz
movb
fsts
inc
push
loopne
loope
lret
cmc
pushf
aad
pop
icebp
dec
jmp
insb
xchg
inc
cltd
sbb
test
pusha
movsb
popa
pop
std
mov
repz
ja
movsl
jle
out
iret
mov
insl
push
sti
ret
cwtl
xchg
inc
mov
push
and
lahf
adcb
in
out
inc
xchg
or
mov
push
or
pushf
and
push
enter
jg
fstpl
add
repnz
cmp
cld
xor
mov
dec
cmp
mov
mov
cmp
lods
imul
lods
sbb
or
imul
inc
jg
pop
pop
xor
xor
popa
pop
sub
push
sub
cmp
xor
sub
jle
inc
sbb
mov
icebp
sub
dec
fiadds
push
jp
lock
inc
mov
jp
dec
pop
jecxz
push
cmpsl
lods
or
cs
subb
push
cmp
les
pmullw
jb
out
xchg
jo
mov
sbb
add
fnstcw
shrb
cmp
cli
frstor
lods
fsubrl
out
cs
imul
xchg
mov
and
outsl
mov
fisubrl
lods
leave
arpl
inc
inc
mov
push
jne
jb
lds
pop
inc
push
jo
outsl
data16
mov
aaa
mov
mov
fcompp
mov
dec
sub
sbb
pop
in
or
rcrb
push
outsl
inc
xchg
js
stos
sbb
out
scas
movsb
fildl
popa
call
xchg
and
jp
pop
sub
mov
stos
mov
jle
xor
push
sti
mov
mov
or
mov
cmp
stos
pop
mov
bound
push
and
in
mov
jg
in
int3
mov
ret
xchg
roll
fistpll
sub
mov
add
pop
fimull
add
push
dec
add
inc
push
pop
scas
sub
cmp
mov
pop
push
cmpsb
repnz
add
loope
sub
cmp
cmp
fstpt
popf
dec
les
push
add
mov
mov
cmp
mov
xor
int
enter
out
iret
shll
daa
xor
imulb
mov
pusha
jmp
mov
mov
pop
in
add
nop
cmp
insb
in
fstpt
jb
push
nop
xchg
dec
mov
insl
test
out
pop
xchg
push
push
push
pushf
jmp
inc
sub
pop
or
jo
lret
and
xor
ror
and
imul
jnp
xchg
das
andl
adc
shr
or
retw
test
mov
xor
call
stc
mov
adcl
push
xchg
or
inc
cli
ljmp
mov
cli
in
into
lahf
js
stos
popf
out
or
fwait
push
mov
cwtl
and
hlt
pop
mov
mov
hlt
cltd
lock
push
adc
xor
int
call
cwtl
or
out
mov
loopne
mov
push
lahf
cmp
neg
jns
pop
mov
xor
in
in
push
lds
lahf
dec
xchg
adc
call
mov
inc
call
fists
jnp
bound
lret
jo
or
stos
pop
xchg
mov
adc
in
and
push
in
loop
imul
dec
or
frstor
cmp
call
adc
mull
mull
jne
and
add
fdivrl
aad
std
fwait
jno
clc
mov
jp
in
in
ret
push
or
pop
or
push
inc
xchg
mov
xorb
lock
push
jo
daa
pushf
lcall
fidivl
stos
and
js
xchg
ljmp
out
or
mov
js
inc
iret
mov
mov
mov
push
cli
lcall
cmp
or
mov
add
fisttps
mov
aad
lock
sub
lods
cs
lock
test
imul
andb
test
repz
cli
outsb
std
cmp
pushf
test
jbe
sbb
sub
mov
jbe
mov
sbb
cs
adc
enter
adcb
popf
sbb
lock
sahf
pop
mov
xchg
xor
cmc
cld
jo
mov
aam
or
mov
dec
int3
in
call
ror
pop
mov
dec
mov
outsl
test
push
imul
push
cwtl
sbb
mov
sar
mov
ja
in
mov
les
inc
mov
cmpsb
nop
fisubl
mov
mov
jae
dec
shll
push
add
divl
dec
cmc
test
sti
jp
fwait
stos
or
sti
jb
mulb
andb
mov
xor
nop
adc
push
cwtl
cmc
bound
shl
xchg
ljmp
dec
gs
fadd
adc
xchg
ja
push
mov
jne
rcrb
rorb
lret
mov
inc
xchg
movb
fmul
push
lea
fucomi
jne
mov
jl
lods
xchg
mov
cli
xchg
ljmp
je
xor
leave
or
pop
adc
mov
xchg
cmp
mov
xorl
mov
and
pop
cmc
ss
inc
lds
cmpsl
cmp
lret
rcll
js
push
or
xchg
mov
push
or
xor
div
dec
sbb
inc
dec
push
push
shl
xchg
movsl
ret
aam
ret
mov
sub
lcall
mov
adc
outsb
push
pop
pop
addr16
cmp
push
xor
rol
xchg
movb
jne
into
lock
sbb
stos
or
outsb
push
shlb
imul
hlt
inc
jg
mov
cwtl
fistpll
stos
inc
mov
std
inc
inc
or
pop
xchg
inc
xor
clc
inc
sbb
ja
adc
addr16
in
imul
adcb
movsl
pusha
mov
sarl
pop
cltd
or
inc
xchg
mov
mov
addr16
mov
xchg
and
jo
cli
ds
jge
adc
xchg
cli
push
movsb
pop
das
xchg
mull
dec
fistpll
scas
xchg
mov
aam
dec
pop
adc
out
movb
push
inc
dec
insb
cmpb
xchg
les
pop
pop
push
or
pop
idivb
and
into
inc
cs
out
fnsave
popf
pop
ror
insb
adc
enter
add
or
mov
das
xor
roll
cmp
jmp
fst
adc
sub
fcoml
or
pusha
iret
push
sahf
shlb
mov
imul
adc
push
sub
cmp
jns
xor
mov
test
aad
and
push
lds
into
sbb
outsl
sub
adc
or
imulb
ds
xlat
jle
jp
mov
xchg
pop
jl
jle
sti
cmpsl
push
mov
std
aad
icebp
inc
lea
sbb
cmp
jl
adc
push
cmp
or
dec
jns
out
jmp
out
fldenv
xchg
fadds
adc
mov
clc
fimull
push
mov
sbbb
jns
faddl
adc
add
sub
xchg
push
negl
dec
popa
in
mov
enter
jge
lods
and
add
and
dec
enter
adc
mov
daa
xchg
pop
jbe
lcall
push
sbb
nop
sbb
out
pop
popa
imul
push
inc
xchg
mov
push
mov
test
cmp
jl
jle
jle
je
mov
idivw
dec
inc
cmp
loop
out
cmpsb
mov
add
jnp
rcrb
dec
inc
jp
sahf
or
lret
xor
clc
lahf
dec
enter
push
sbb
scas
notl
mov
lods
xchg
sarb
push
jae
jns
jl
jbe
imul
sbb
rorb
test
mov
or
push
stos
dec
rolb
addr16
fs
stos
xchg
stos
gs
cmp
jb
cs
push
jne
add
sub
push
in
es
imul
push
in
push
jge
mov
xor
pushf
jg
in
xchg
inc
cmpsb
loopne
mov
lret
out
sbb
insb
mov
das
cltd
lea
dec
xchg
sbb
jnp
decb
in
lret
fsincos
dec
stos
leave
dec
and
mov
outsb
cld
mov
clc
mov
cmpsb
lcall
cld
and
mov
jg
dec
rolb
sub
gs
xchg
or
mov
out
dec
scas
aas
cmp
mov
jne
and
sbb
lds
push
pusha
add
cs
scas
sub
sahf
add
jle
cmc
xor
cmp
push
mov
xchg
xchg
lret
add
pop
sub
test
jecxz
lcall
push
push
out
sub
lcall
cli
jecxz
mov
lods
mov
pop
jno
sub
subb
push
xor
inc
xor
push
das
mov
call
sbb
shrd
stc
pop
push
or
icebp
lods
mov
adc
add
cmp
fldt
scas
pop
xchg
mov
xor
imul
repnz
lods
bound
sub
xchg
jnp
and
popa
ret
mov
movsl
xchg
rol
dec
fmuls
ret
fisubl
addr16
push
es
popf
adc
jle
xchg
rolb
xchg
dec
jecxz
mov
mov
push
sbb
xchg
call
jle
pop
fstpt
fdivrs
jb
or
mov
nop
xor
mov
arpl
out
cltd
testl
ret
shll
jnp
and
push
mov
mov
in
fwait
mov
sub
pop
outsl
and
shl
jae
jae,pn
lret
clc
mov
shll
sbb
outsb
push
cmp
xchg
cmc
pop
je
aaa
jmp
cwtl
mov
mov
sub
mov
sub
mov
jne
mov
insb
fldt
push
fistpl
inc
leave
notl
push
imul
sarb
int
rcr
jl
xchg
sti
cmpsb
jmp
xchg
xlat
leave
cmovbe
sbb
sbb
fistl
lods
fwait
jp,pt
popf
es
inc
scas
divl
shrd
inc
imul
in
jb
fimull
mov
and
gs
xor
pop
jae
push
adcl
cmp
pop
lds
out
mov
xchg
movsl
in
mov
dec
pushf
adc
xchg
mov
int
or
jmp
jne
and
dec
lea
inc
push
or
pushf
xchg
in
in
div
mov
pop
xor
rolb
adc
inc
andb
dec
fcoml
in
ljmp
xor
test
sub
jo
enter
je
test
mov
shrl
enter
dec
cmpsl
shl
incl
jle
fldenv
cmc
sub
jp
jne
cmp
loop
leave
lahf
pop
pop
mov
aam
push
sub
adc
jbe
inc
fucom
mov
test
outsl
or
add
pushf
dec
lcall
inc
lods
add
lret
lea
fcmovnbe
adc
mov
push
lods
pop
dec
out
inc
mov
ss
lahf
test
inc
int3
gs
cltd
adc
loop
sub
jno
xor
adc
mov
jl
jle
sub
hlt
test
mov
bound
cmp
daa
shrb
nop
aam
ret
ja
pushf
in
jmp
ss
out
es
or
dec
pop
loopne
mov
push
orb
sub
test
jns
rolb
xor
adc
bound
add
loop
sbb
mov
jae
rcrl
sub
jnp
sti
inc
adc
inc
sbb
or
cmpsl
add
shrb
adc
inc
mov
daa
mov
dec
add
mov
add
fcompl
xor
test
insl
xchg
pop
adc
mov
enter
sbb
adc
leave
mov
iret
mov
pop
sub
lahf
rclb
jmp
lods
in
fidivrl
jecxz
sbb
bound
cltd
call
std
add
xor
repz
push
repnz
sbb
xchg
cmp
loope
mov
outsl
das
and
sbb
mov
xor
test
dec
push
jecxz
or
das
lret
mov
ja
cmp
pop
loop
shll
and
mov
and
ljmp
add
subb
data16
or
fsubr
stc
cli
les
add
sbb
sbb
xor
jmp
mov
and
in
loopne
les
out
outsb
jne
ja
leave
aam
test
inc
out
push
pop
add
test
cwtl
movl
xor
inc
int
lods
pop
gs
pop
adcl
popf
jl
xchg
xchg
sub
mov
movb
fstp
cmp
das
jmp
dec
stos
fdivrs
sub
dec
jge
imull
mov
ds
aam
insb
shlb
and
xchg
jbe
clc
push
push
or
fdivp
icebp
xor
mov
ja
pop
lahf
out
iret
cmpsb
lret
xchg
imul
sub
xchg
cmp
xchg
scas
push
pop
outsl
test
fnsave
fldenv
dec
les
and
jmp
out
xor
outsl
sbb
jns
aam
repz
rorl
andl
inc
xorb
mov
loope
andl
in
push
pop
lds
lcall
and
sbb
in
ljmp
xchg
cld
fiaddl
imul
jo
popf
fisubl
das
ret
mov
fadd
fidivl
sbb
aam
fisubl
cwtl
pop
mov
and
mov
cmpsb
popf
pusha
sahf
test
jo
leave
push
cmp
pushf
jmp
adc
inc
scas
hlt
push
lcall
mov
js
cmc
xlat
jnp
cmpsb
add
ret
push
or
jl
jae
inc
sbb
push
fiadds
mov
pop
mov
cmpsl
jmp
test
push
mov
push
movsl
pop
stos
cmp
and
fcompp
ljmp
push
ret
adc
lods
stc
es
aaa
jg
repnz
rcr
loopne
cmpsb
out
cmpl
clc
add
daa
xchg
es
lods
test
mov
pop
and
and
push
jp
mov
lret
sbb
in
fnsave
in
xor
pop
aam
mov
sbb
negb
rcrb
push
rorb
push
in
outsl
mov
and
mov
push
pop
and
fnstcw
ss
adc
les
sbb
stos
in
cmp
ljmp
bound
adc
icebp
xchg
xor
xchg
sarl
lcall
addr16
shlb
jg
xchg
inc
stc
rcl
cmp
mov
pop
and
call
clc
int
jnp
inc
or
ret
shrl
cmpsl
out
inc
adc
mov
ret
ja
addb
adc
daa
mov
insb
mov
cltd
stos
mov
mov
inc
jnp
xchg
leave
inc
stc
popf
sbb
push
fldl
mov
dec
fwait
lods
sub
inc
sahf
cltd
ljmp
mov
jl
push
stc
imul
es
and
andb
ror
outsb
jge
into
ja
jno
jl
sub
xor
sub
ss
cltd
cmpl
sub
mov
xor
enter
outsl
add
and
add
popf
sbb
jns
mov
mov
jno
jno
pop
lds
lock
rcl
or
sbb
inc
jnp
mov
pop
das
lea
lea
xorl
inc
jns
loop
jns
loop
lock
and
int3
jge
inc
sub
insb
adc
les
dec
test
lds
shlb
sahf
push
push
or
dec
xorl
pop
sarl
fwait
and
loopne
out
sbb
sub
fxch
cmp
mov
inc
push
shrl
sbb
jnp
test
dec
out
sub
pusha
loop
dec
cmpb
cmc
clc
fbld
pop
mov
fwait
rorl
cmpsb
outsb
nop
cmp
mov
mov
jno
add
xchg
stos
sub
sbb
or
jb
scas
or
dec
or
cmp
dec
lea
decb
jnp
push
icebp
pop
cld
xor
mov
iret
imul
mov
or
and
cs
aas
arpl
xor
int
and
rcll
pop
lods
lods
out
inc
xchg
mov
jae
jno
repz
fistpl
jg
adc
das
ficomps
pop
lret
cmp
pop
sbbl
xor
cltd
ror
pop
outsl
lods
sbbb
inc
mov
leave
mov
fimull
xchg
pop
out
mov
pop
dec
dec
rcrb
ret
mov
iret
iret
mov
decl
das
pop
aas
dec
dec
aas
pop
das
outsl
pop
jg
lcall
iret
iret
mov
decl
das
pop
aas
dec
dec
aas
pop
das
outsl
pop
jg
lcall
into
mov
decb
es
cmp
aas
inc
das
imul
seta
mov
daa
fists
scas
out
pop
jg
jo
aas
cmp
mov
rclb
add
int
pushf
mov
lea
repz
and
dec
inc
cmp
arpl
iret
fnsave
lods
jecxz
repz
jg
insl
inc
jge
dec
add
std
arpl
popa
in
xor
imul
movsb
mov
std
test
xchg
addr16
xor
sub
sub
aaa
dec
das
or
mov
push
shll
fmuls
and
jl
mov
adc
ja
outsl
mov
ss
ss
push
outsb
pop
jle
cmc
std
test
dec
mov
sbb
push
andb
jmp
shlb
adc
push
sub
dec
or
inc
fstpl
cmp
shrl
add
int
mov
xchg
jae
jl
sahf
or
and
sub
push
lock
insl
and
jbe
push
push
push
mov
jl
push
or
cmp
cmp
movb
jl
jns
dec
pop
into
outsb
add
loop
sbb
mov
mov
push
xchg
lds
jne
inc
add
pop
cmp
jae
ljmp
int3
lods
jmp
ret
xchg
icebp
repz
adc
adc
xor
jle
sbb
imul
shrl
mov
push
stc
cmpsb
loope
add
or
sub
cmp
inc
or
push
ret
mov
jecxz
repz
jge
insl
and
dec
inc
cmp
jae
cmp
in
mov
mov
repz
jge
insl
and
dec
inc
cmp
jae
cmp
push
cld
jae
or
lods
fwait
sbb
pop
subb
stos
int3
mov
lea
push
push
sub
leave
mov
xchg
test
push
jns
les
imull
mov
mov
mov
fldenv
enter
cmpsb
scas
push
notb
adc
stos
stc
cmpsb
push
xchg
ds
nop
mov
aas
orb
test
dec
out
aaa
mov
pushf
std
mov
sub
fidivrs
jns
adc
sbb
mov
dec
lcall
enter
inc
mov
push
xlat
dec
mov
push
ret
es
fsts
idivl
sub
or
mov
push
stos
fmul
dec
jae
jle
test
inc
push
lea
jne
inc
loop
call
andl
and
dec
enter
or
xor
inc
stc
cmp
fsubl
shlb
adc
xchg
add
sub
iret
xor
adc
bound
jb
dec
bound
outsl
jmp
leave
aad
cmp
addb
stos
inc
sbb
in
add
mov
xchg
add
jge
or
mov
dec
repz
into
jae
mov
push
fidivs
pop
mov
ret
clc
and
in
adc
pop
pop
rol
loop
cmp
insb
in
pop
mov
insl
lcall
mov
testl
repnz
scas
rcl
inc
bound
dec
fidivl
pop
push
mov
movsb
ja
test
outsb
insb
cmp
aam
int
call
loope
test
jns
pop
sti
lcall
push
lcall
inc
dec
mov
mov
adc
inc
or
jle
iret
add
jne
push
stc
mov
sub
outsb
jle
enter
movsb
aas
mov
mov
ss
xchg
cmp
add
ffreep
push
in
push
jne
in
inc
cmp
adc
mov
fdivrs
cmp
bound
data16
lcall
dec
push
inc
icebp
mov
popa
into
mov
bound
mov
inc
mov
add
mov
lcall
or
jo
gs
jbe
iret
adc
bnd
xchg
stc
push
or
or
mov
call
hlt
and
pop
dec
aad
insb
jecxz
and
shlb
scas
ja
pop
mov
out
int3
lods
test
mov
xchg
mov
or
int
iret
out
mov
and
xor
out
push
xchg
mov
out
and
mov
test
mov
in
xchg
pop
inc
and
fisttps
xor
adc
xchg
adc
adc
leave
pop
lcall
xor
je
ljmp
jle
lahf
inc
rolb
getsec
andl
bound
sbb
aas
call
add
mov
fsubrl
sahf
mov
ds
mov
sbb
and
lret
hlt
shrb
mov
sbb
fidivrs
pop
leave
pushf
push
cmp
and
das
daa
gs
lret
add
pop
dec
out
ret
mov
sub
arpl
into
into
rorl
sbb
lods
cmc
mov
dec
jmp
inc
mov
adc
lods
and
es
imul
cli
mov
sbbl
adc
lret
mov
push
ret
mov
lea
in
mov
and
pop
gs
jnp
test
sbb
xchg
cmp
inc
cwtd
das
enter
imul
sahf
shll
add
push
push
pusha
dec
shrl
or
xor
mov
inc
jnp
lods
mov
loopne
subb
loope
mov
mov
sbb
xlat
hlt
outsb
mov
bound
mov
repz
pop
jl
cmp
cmc
int
fbld
fldl
xchg
xchg
fs
shl
out
xor
adc
sub
popa
inc
call
xchg
pop
jbe
xor
popf
outsw
in
shll
repz
xchg
aad
mov
sar
mov
int
push
fwait
pushf
std
aas
jbe
xchg
push
push
fs
dec
insl
lea
mov
jl
push
or
int3
jno
jno
dec
insb
push
into
clc
pop
mov
test
gs
nop
cmp
test
mov
mov
jbe
jle
mov
data16
pushf
xchg
leave
cwtl
aad
push
pop
ljmp
jnp
xor
fmul
xchg
fsub
ss
add
std
ret
int
inc
mov
js
sti
and
cltd
test
mov
adc
xchg
sbb
out
outsl
outsl
fdivrl
dec
push
push
lahf
loop
xchg
aam
push
fimuls
mov
adc
add
mov
addb
ret
xchg
pop
mov
test
daa
push
test
cmp
fidivrl
xlat
icebp
sbb
jl
pusha
out
sub
pop
mov
cli
jb
inc
bound
xor
sub
outsl
mov
pop
push
and
dec
call
ret
test
pop
lahf
dec
sbb
jp
adc
add
mov
mov
shrl
push
test
xor
mov
cwtl
sbb
cwtl
mov
fs
call
int3
and
repnz
lods
xchg
jmp
fucomp
lcall
out
dec
cmp
mov
xchg
or
dec
push
dec
jl
dec
and
add
loop
inc
push
inc
adcl
ja
jg
inc
int
or
pop
and
pop
cwtl
fcoms
cmp
jmp
mov
xchg
int
imul
mov
jno
lea
xchg
addr16
mov
xor
xor
test
xlat
dec
ds
push
add
jmp
sti
push
xchg
or
lcall
inc
adc
nop
bound
inc
idivb
std
lods
sub
jnp
lds
ljmp
add
fldcw
jecxz
shrb
cmc
dec
movsb
aad
pop
jl
popf
xchg
das
adc
or
mov
enter
lds
mov
sub
xchg
push
push
mov
mov
lcall
mov
pop
inc
and
dec
mov
and
add
mov
out
sub
adc
dec
jae
pusha
scas
popa
gs
sbb
adcb
xchg
or
mov
repz
aaa
popa
push
aad
jecxz
sub
jne
outsl
and
mov
push
cmpsb
pushf
add
stos
pop
push
cmp
jno
cmp
fdivrs
add
adc
and
mov
cmp
jle
push
fdiv
loop
xor
lret
dec
xchg
cwtl
jne
in
pop
hlt
mov
adc
fdivl
xchg
js
lock
mov
xor
cmpsb
mov
push
shl
inc
sbb
xchg
ds
in
test
jns
shlb
and
ret
lods
mov
xor
adc
lds
inc
loop
sbb
xchg
cld
adc
cmc
sahf
cmp
sub
mov
insl
sub
in
divl
dec
in
fstpl
test
mov
test
mov
ljmp
sub
aad
cld
adc
pushf
pop
inc
dec
ja
pop
mov
loopne
je
push
and
lods
mov
xchg
gs
int
xor
mov
loop
cmpsl
jnp
sub
push
cwtl
lret
or
dec
lahf
xchg
mov
jns
sub
loope
cli
mov
call
leave
loope
pop
jno
jno
dec
jae
fidivs
or
fsubr
mov
or
test
mov
cld
ds
rclb
xor
mov
adc
pop
and
div
mov
mov
add
call
mov
push
pushl
pop
pop
mov
mov
js
fisttpll
push
or
aaa
mov
xlat
sahf
sbb
ret
dec
inc
leave
insl
stos
sub
js
andl
jo
scas
pushf
divb
inc
pop
ja
xor
cmp
inc
add
popf
das
jnp
lods
mov
in
pop
fxch
test
stos
xchg
mov
mov
xor
mov
fiaddl
xor
das
pop
jno
cmp
data16
mov
push
pop
or
inc
dec
loopne
ret
lret
cld
movsbl
cmp
out
add
sti
mov
sbb
mov
or
mov
aad
mov
loopne
scas
and
xchg
imul
out
mov
sbb
or
push
push
mov
inc
pop
jl
xlat
inc
mov
mov
movsb
fs
stos
xor
xchg
mov
mov
int
or
jnp
push
mov
mov
ret
xchg
inc
cmc
lahf
stc
mov
ds
clc
mov
push
mov
jns,pn
lock
je
mov
rcrl
or
test
movsl
adc
aam
xchg
or
test
roll
hlt
or
sub
cld
dec
dec
xchg
add
jnp
dec
ret
vmovq
push
push
push
out
cmc
fcomp
fdecstp
adc
aad
jne
pop
cli
dec
dec
hlt
xor
add
jae
nop
push
mov
test
mov
mov
add
add
mov
icebp
push
jne
xchg
inc
dec
xchg
jnp
mov
mov
iret
aaa
push
cmp
rcll
push
fistpl
movsb
jge
lock
ret
test
mov
lea
shlb
loope
cs
test
fs
xchg
adc
icebp
inc
sub
lods
push
push
iret
xchg
insl
mov
mov
or
jb
cli
lds
imul
out
aad
pop
adc
movsb
fimuls
inc
or
or
xchg
lds
cmp
add
in
jmp
xlat
cwtl
aad
mov
mov
rorb
cmc
fcomp
fimuls
cmp
jae
mov
pop
js
and
fsubl
call
sbb
mov
in
repnz
xor
ja
push
sarb
fdivrl
ret
mov
aas
cmpsl
les
es
stos
aad
mov
rcr
bound
sbbb
gs
add
push
pop
pop
ja
dec
xchg
rorl
test
mov
sub
addr16
add
sub
push
add
outsb
adc
icebp
add
rcrb
ds
ficoms
cmp
mull
mov
jl
arpl
jmp
mov
aad
subb
gs
ret
cmp
cld
adc
jge
jecxz
fwait
xor
ret
mov
out
jno
and
pop
cli
sbb
cmc
pop
sub
xor
repz
cwtl
and
xor
shlb
cli
push
xchg
lock
clc
sub
clc
sub
data16
cmpb
sbb
push
mov
xchg
insl
pop
repz
test
dec
iret
outsl
inc
frstor
loopne
mov
call
xchg
cmp
mov
inc
jae
add
mov
in
add
cld
sahf
pop
pop
add
icebp
out
sahf
andb
or
rorl
push
xor
sbb
mov
loope
outsl
cltd
repz
aam
jp
xor
repnz
and
aam
mov
dec
mov
ja
push
push
ret
pop
sub
fsubp
xchg
clc
sbb
pop
outsb
sbb
out
ret
iret
aam
jno
push
jbe
and
add
and
sub
inc
mov
iret
mov
xchg
shrb
lds
push
or
xchg
pusha
ret
dec
pop
cwtl
nop
jmp
xchg
xor
cmp
xor
loop
ret
addr16
sub
sub
pushf
add
or
lcall
jbe
test
gs
lods
mov
mov
fwait
aad
fwait
in
mov
repz
mov
popf
test
inc
test
push
lock
and
fsts
int3
mov
jmp
in
or
sbb
sbb
xchg
loope
dec
cli
inc
xor
les
ljmp
mov
sub
es
or
icebp
ret
stos
mov
xchg
mov
rcl
cld
cmp
aas
sub
mov
jbe
test
pop
pop
shl
sub
xchg
popa
jp
mov
inc
sbb
iret
push
xchg
pusha
jns
out
pop
push
mov
lods
jns
inc
sub
mov
pop
movsb
ds
and
lds
mov
sbb
sub
shrl
or
mov
dec
fdivl
adc
mov
shlb
int
mov
push
cmp
loopne
loop
push
push
jb
dec
js
xchg
lret
clc
movsb
xor
fstps
pop
add
dec
jecxz
add
dec
not
mov
pop
outsl
xchg
fwait
shr
shll
xchg
adc
mov
divl
sbb
jp
adc
pop
daa
pusha
pop
mov
inc
sbb
inc
xchg
xlat
inc
sub
push
outsl
inc
add
int3
jnp
loope
mov
jns
insl
addr16
loopne
fwait
mov
add
mov
lcall
sbb
xchg
inc
cmpsl
enter
push
jp
repnz
js
and
fwait
mov
inc
jnp
adc
and
cltd
hlt
adc
push
adc
xchg
or
xorb
pop
mov
lods
pop
insb
loop
clc
bound
bts
adc
fwait
cwtl
enter
xchg
nop
stos
leave
bound
lret
push
inc
ret
jl
add
mov
imul
test
mov
popf
add
insl
adc
fsts
sub
jno
add
cmpb
pop
or
mov
mov
sahf
lahf
jl
shl
leave
pop
mov
jmp
push
rorb
enter
xor
std
xor
jmp
dec
pop
adc
fisttpll
mov
xor
xor
data16
out
loopne
inc
imul
cmp
jnp
je
ljmp
push
inc
jle
pop
pop
jl
mov
mov
rolb
popf
lods
mov
cmpsl
sbb
test
adc
fidivs
pop
xor
xchg
icebp
jns
stc
stos
pop
gs
push
add
push
xor
test
cs
outsb
ljmp
inc
push
lea
mov
mov
mov
or
test
popf
cmp
call
push
jl
jge
pop
call
cmc
std
push
lret
mov
sub
out
xchg
jmp
xchg
mov
mov
cli
mov
rolb
inc
dec
pop
cmp
addb
pop
add
sbb
push
or
push
dec
pop
je
test
jb
ljmp
lcall
xchg
pusha
jmp
pop
or
cmp
cwtl
sub
mov
and
inc
dec
ret
push
sbb
jb
add
cltd
fimuls
pop
aam
imul
xor
push
jp
lds
dec
les
jge
decb
pop
shlb
addr16
sub
loopne
mov
cmpsl
jbe
jno
or
mov
inc
hlt
pusha
lods
jmp
jbe
movsl
push
dec
popf
faddl
xlat
sub
xlat
fdivr
sub
loop
add
cmpsb
jle
shlb
rcl
adc
out
mov
jb
pop
xor
aas
roll
shrl
lods
adc
sub
pop
sahf
cld
cwtl
lcall
xlat
in
xor
jl
and
pop
cmp
ffreep
scas
dec
lds
adc
add
dec
mov
ss
jns
loop
mov
xchg
or
xor
cmp
scas
dec
movsl
orl
in
fsubs
sti
ljmp
mov
pop
lret
sub
rorb
mov
fnstenv
mov
fsub
mov
popa
shlb
ds
sahf
mov
stc
jmp
cmc
pop
mov
jg,pn
leave
mov
cmpsb
das
ret
aam
out
test
loope
jnp
cmp
hlt
xchg
popf
cmp
dec
xchg
add
ss
push
sub
outsl
pop
or
scas
clc
ss
movsb
ljmp
cwtl
sbb
jmp
sbb
sbb
testb
das
arpl
and
pop
sti
cwtl
imul
jb
ss
into
leave
int3
movsl
clc
sub
mov
jne
xor
imul
ret
xor
jle
pop
outsl
hlt
addr16
je
cmpsl
cltd
mov
sub
popf
pop
arpl
cmp
dec
jle
sarl
cmp
sbbb
mov
int
sub
aad
popf
inc
data16
psubq
add
mov
add
outsl
xchg
rclb
xchg
push
iret
je
enter
test
nop
ror
enter
outsl
lret
adc
aad
sbb
insl
pop
lahf
sub
jnp
lret
int
addr16
sbbl
cmp
inc
mov
fstps
bound
cmp
aaa
jo
and
pop
xchg
rol
mov
add
xchg
jl
outsb
mov
in
in
sub
xchg
rclb
inc
ret
push
inc
call
lret
mov
loope
sti
cmpb
xchg
mov
push
mov
cs
adc
sbb
inc
sahf
lret
and
pop
cmp
repz
cs
xchg
sbb
pop
cmc
mov
mov
or
and
mov
add
pop
add
or
or
scas
gs
dec
scas
negl
test
jae
xchg
mov
jle
jl
mov
jmp
dec
data16
icebp
scas
jns
sbb
insb
lock
dec
pop
sbbb
hlt
rcrb
pop
mov
inc
insb
mov
push
xchg
xchg
mov
mov
mov
sahf
loop
fistpll
sub
mov
jne
out
shlb
mov
icebp
pop
push
push
push
cmp
loop
inc
cmp
fldenv
aas
mov
loopne
jo
mov
xchg
lcall
cmp
jge
lods
movsb
mov
mov
lcall
adc
adc
mov
sub
clc
fcompl
jecxz
mov
xchg
mov
popf
mov
loop
movsl
jp
rorb
xchg
push
sub
xor
jbe
and
aas
mov
out
add
xchg
jb
adc
shll
dec
and
popa
mov
icebp
inc
push
outsl
push
jns
mov
adc
fidivs
outsl
enter
jp
cmpsb
insb
rcrl
or
cmp
imul
lea
fisubrs
imul
push
and
test
mov
mov
icebp
push
xlat
scas
sbb
xchg
stos
sahf
pop
out
pop
fstpt
cmpsb
pop
scas
push
sub
mov
and
frstor
sahf
mov
add
scas
sahf
add
or
or
out
icebp
mov
jl
jle
pop
addr16
loope
pop
mov
mov
push
or
shlb
push
adc
fdivs
loopne
popf
sub
push
cmpsl
fdivrl
jno
mov
inc
and
pop
jns
push
cmc
inc
sahf
adc
out
dec
jnp
clc
aas
ss
jns
sbb
fldcw
bnd
imull
push
loopne
aaa
ljmp
adc
sbb
sahf
mov
js
outsl
cmp
loopne
or
call
jl
cmc
mov
mov
mov
mov
sub
inc
sub
inc
jmp
pop
in
addb
mov
sub
lods
imul
das
and
sub
out
inc
mov
aad
mov
push
mov
mov
xchg
call
xchg
lock
icebp
cmc
mov
add
fbld
mov
subl
sub
sti
ja
inc
jg
lret
and
sahf
les
push
mov
ret
xchg
jmp
xchg
sahf
xor
sub
fistps
enter
xlat
add
xchg
sahf
cmpsl
jae
test
cwtl
scas
push
cmp
aas
fcmovne
or
nop
fldenv
scas
xor
add
les
cwtl
pop
imull
xchg
xor
add
mov
test
test
das
addl
sbb
add
add
sbb
gs
cs
push
icebp
insl
lods
xchg
adc
loop
adc
in
es
sti
and
mov
pop
shrl
adc
add
sub
xchg
mov
das
pop
in
adc
fucomp
mov
std
clc
divl
fisubrs
gs
ljmp
push
fs
fistpl
std
gs
mov
hlt
aas
dec
push
xorl
sub
cmpsl
hlt
mov
imul
mov
add
insl
ret
mov
xchg
test
adc
push
adc
jmp
psrld
xor
test
ja
push
cmpsl
mov
xor
add
mov
inc
test
and
mov
fnsave
adc
push
mov
shlb
pop
pop
inc
imul
iret
cmpsl
dec
pop
mov
clc
sahf
xor
and
xor
jmp
daa
xchg
adc
daa
popl
add
fwait
push
inc
ror
into
arpl
popf
repz
lcall
cmp
adc
insl
jbe
repnz
jl
cltd
aam
jge
es
push
and
ja
dec
pop
lock
cld
daa
loope
cmp
push
adc
dec
mov
push
or
aaa
mov
cmp
pop
fistps
mov
call
test
inc
loop
sbb
jge
movsb
inc
dec
dec
lret
fdivr
setae
andb
and
fst
in
in
mov
ret
mov
repz
jge
insl
and
dec
inc
cmp
jae
cmp
in
mov
mov
repz
jge
insl
and
dec
inc
cmp
jae
cmp
in
ret
fnsave
lods
jecxz
xor
rcrl
dec
inc
cmp
fwait
or
stc
fstl
lods
jecxz
jae
add
mov
cmp
mov
push
mov
sub
andl
push
mov
push
pushl
movl
movl
movb
movl
movb
call
andl
mov
mov
push
push
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
pop
leave
ret
pop
push
outsl
pop
adc
dec
cmp
sub
idiv
cld
out
fcompl
mov
jl
dec
outsl
pop
pop
sub
cmp
or
xor
in
iret
cld
mov
out
fcompl
mov
mov
pop
sbb
je
push
das
cs
iret
fisttps
in
inc
clc
push
sub
or
sbb
lds
adc
aaa
adc
lahf
mov
jae
xlat
aam
repz
xor
repz
sub
loope
jb
push
pusha
mov
push
shll
adc
push
lds
roll
movsl
in
add
test
aas
pop
push
inc
ficompl
pop
sbb
or
pop
pop
cmp
or
int3
inc
xchg
fildll
sbb
xor
frstor
out
mov
mov
push
mov
ds
loopne
iret
xor
adc
lea
mov
cmp
iret
sarb
mov
stos
mov
les
testb
dec
pop
jg
outsl
pop
pop
sub
cmp
or
mov
in
iret
push
dec
out
loopne
nop
push
mov
insb
adc
and
xor
inc
push
pop
jns
pop
sahf
scas
lret
mov
out
sti
clc
sti
cmc
pop
sub
xor
arpl
gs
das
mov
sahf
stos
in
cli
jecxz
mov
ss
sub
pusha
aas
or
sbb
in
iret
cld
dec
out
fcompl
mov
jl
dec
outsl
pop
pop
sub
cmp
or
sbb
in
iret
cld
dec
out
fcompl
mov
sub
xor
lds
filds
int3
or
filds
mov
mov
adcl
or
dec
outsb
in
cmp
mov
js
fnsave
lock
xchg
and
notb
in
push
pop
cmc
sbb
dec
dec
push
mov
ret
xor
push
enter
dec
ret
repz
lret
sbb
dec
scas
fcmovne
mov
enter
add
roll
cs
sub
jmp
arpl
inc
fdivrl
add
inc
mov
stos
sub
cs
incb
mov
sbb
mov
pop
mov
dec
movsb
jno
sbb
enter
or
es
jb
pusha
sub
movb
shll
iret
or
sub
pop
ret
loopne
enter
test
cmp
aad
mov
add
repnz
dec
adc
lods
jmp
mov
sbb
jno
sbb
imul
jl
mov
inc
sbb
in
mov
mov
iret
je
bound
das
sbb
mov
dec
lret
stc
push
enter
push
movsb
push
xor
add
pop
out
sub
push
fisttps
fbstp
dec
icebp
in
or
dec
cmp
in
jb
jmp
shll
arpl
mov
enter
adcl
movsl
fsubrs
jge
xchg
mov
sbb
fidivrs
lret
mov
dec
mov
fsubrl
in
mov
or
push
jae
imul
cmc
test
jg
pushaw
inc
and
sahf
fisubrs
fnstsw
pop
aaa
pushf
add
loope
call
mov
cltd
lahf
xchg
mov
xchg
iret
sub
mov
adcl
movsl
pushf
out
ret
pop
pop
inc
push
push
pop
jnp
push
add
icebp
or
nop
jnp
adc
test
mov
mov
into
pop
sub
and
push
popa
pushf
xlat
data16
mov
jmp
pop
lcall
mov
nop
lcall
jnp
push
cwtl
stos
mov
sub
aaa
push
inc
lahf
aaa
jbe
out
fsubl
jle
mov
pop
mov
and
jno
test
rorl
das
pop
int
sahf
sbb
lods
jno
fsub
lret
lods
xchg
lahf
testl
mov
mov
adc
jge
test
lahf
jnp
lea
cmp
movsb
add
dec
mov
cmp
cmp
das
push
adc
sarl
jmp
scas
xor
lods
push
sti
addr16
xchg
xor
fsub
fisubrl
mov
pop
dec
jmp
leave
pxor
fwait
sbb
fildl
dec
repnz
jo
push
cmp
loop
adc
lea
cltd
sbb
loopne
sub
and
imul
es
xchg
adc
bound
test
mov
fwait
pop
mov
inc
jmp
cmp
adc
lds
xchg
es
repnz
popf
cli
int
fisubrl
roll
pop
add
sbb
mov
je
dec
fsubp
sub
in
jae
dec
scas
mov
dec
repz
stc
arpl
lds
dec
cmp
and
stc
repz
jl
xor
add
pop
decl
pop
pop
pop
push
jbe
add
inc
mov
adc
xchg
mov
fucom
or
add
lods
cmp
divl
stc
popa
pop
decl
lcall
icebp
es
pushf
repz
addl
lahf
fiadds
jle
insl
sub
cmpsb
push
loop
mov
out
inc
jg
std
ljmp
popa
add
in
push
rcrb
aad
not
lods
ficoml
push
dec
lods
or
dec
pop
cwtl
outsl
pop
pop
add
sbb
push
inc
in
test
cli
pop
inc
cmp
icebp
cmp
shrl
call
ret
xchg
lret
dec
lods
pop
std
inc
scas
test
outsl
sub
pop
mov
jle
jo
push
mov
inc
les
jmp
imul
dec
xchg
jmp
cmp
jg
gs
lret
inc
cmp
sbb
jo
addl
inc
testl
mov
aad
nop
mov
test
xchg
adc
add
xchg
and
xchg
cmpl
or
sbb
push
lcall
mov
push
mov
lahf
pop
mov
flds
fistpll
pop
popf
movsl
cmp
push
push
jno
or
fdiv
stos
daa
jge
xchg
ds
xchg
mov
jge
rolb
xchg
repnz
push
nop
adc
push
and
mulb
popf
test
lret
repnz
in
inc
aaa
cltd
test
cmp
scas
mov
lahf
and
xchg
push
insl
sbb
pop
xor
pop
pop
movsb
push
jne
clc
mov
sbb
sbb
test
push
outsb
ss
sbb
mov
fwait
mull
cmc
and
sub
pop
lods
ftst
sub
cwtl
jmp
in
movsb
js
scas
jo
loope
hlt
aad
fimull
add
xchg
outsb
adc
in
rsm
daa
adc
jb
fsubrs
sbb
inc
repnz
push
and
dec
fucomp
pop
std
or
cmp
mov
push
shl
xor
mov
test
cmp
pop
lret
xchg
out
xor
lcall
andb
xor
loopne
push
add
stos
loopne
mov
push
or
mov
and
mov
cmpsl
jnp
cld
lods
or
xchg
mov
pushf
insl
sub
adc
pop
dec
jns
imul
das
or
mov
jg
fwait
jle
cmp
pop
mov
jp
sub
popa
stos
cmp
or
and
call
lahf
mov
push
lds
testb
push
outsb
movl
cmp
mov
fcompl
sub
sarl
push
or
inc
testl
add
outsb
sub
xchg
jg
jl
rcll
xor
and
lods
jg
pop
ja
xor
xchg
jo
rolb
dec
test
or
xchg
enter
xchg
stos
test
dec
insl
fidivrs
push
lret
xchg
test
shl
repnz
out
or
pop
dec
test
in
inc
or
lahf
sbb
ret
cmp
push
cmp
mov
ds
lahf
sbb
std
or
dec
out
cmpsl
pop
addl
push
mov
call
jno
out
movsl
sub
or
jmp
push
roll
jnp
sub
aaa
push
xor
cltd
mov
scas
fisttps
sahf
jae
adc
jb
mov
xorps
mov
sbb
mov
adc
call
xchg
mov
push
fdivr
arpl
cmp
sbbb
sub
mov
add
cli
movsb
cwtl
out
and
jl
xchg
roll
pop
std
lds
mov
jb
lock
mov
aas
fsub
push
ret
push
push
loopne
inc
xchg
jecxz
pop
repnz
lods
adc
sbb
outsl
mov
rcll
pop
mov
pop
pop
nop
inc
sbb
movsl
push
or
dec
inc
cmpsb
jg
pop
sbb
jge
dec
cld
push
jne
les
lahf
push
lret
cli
fcomip
out
rcll
jl
sarb
cmc
and
in
mov
and
fcmovbe
inc
cmpsb
stc
pop
in
stc
sbb
dec
aam
mov
jp
lods
mov
in
push
out
out
pop
jmp
mov
in
fucomip
add
and
icebp
ret
shlb
lods
js
sbb
xchg
lods
aas
inc
clc
sbb
cmp
adc
adc
in
loope
fsub
push
les
inc
xor
std
jmp
fdivrs
bound
inc
cwtl
mov
popa
arpl
in
es
add
imul
pop
cmp
ret
jmp
shr
pusha
mov
cmpsb
xchg
dec
and
or
add
sub
ror
test
das
sbb
int
daa
inc
shlb
test
ss
repnz
fcoms
cmpsb
adc
test
jb
popa
cmp
pop
dec
adc
mov
xchg
mov
fistl
mov
xor
je
jge
mov
mov
adc
dec
xlat
jg
jne
incb
cmp
inc
adc
dec
out
in
std
push
imul
in
loope
out
mov
mov
jnp
sub
js
mov
add
or
andb
cmpsl
in
xchg
mov
sub
or
adc
jecxz
insb
loopne
push
int
sub
mov
leave
movsl
rorb
add
pusha
inc
pop
dec
pusha
sbb
jmp
push
sub
scas
jae
xchg
out
adc
jle
mov
adc
push
repz
in
stos
sarb
and
jae
pop
movsl
adc
hlt
test
push
xchg
je
adc
ds
pop
fwait
jecxz
mov
sub
loope
or
loope
in
mov
fs
cmp
mov
mov
movsb
hlt
fisubrs
popf
jns
push
cli
mov
in
xchg
xchg
mov
cmp
bound
mov
arpl
mov
inc
push
dec
lret
popf
cmp
mov
jge
imul
push
jmp
mov
mov
ja
jo
pop
setb
jl
mov
add
adc
sub
mov
dec
lods
and
sbb
mov
fincstp
fiaddl
in
mov
jmp
cmc
push
mov
movsb
adc
loop
filds
push
int
shl
sarl
adc
and
rorb
enter
ss
ljmp
call
nop
repnz
xchg
or
jg
cltd
add
sub
xchg
je
addr16
stc
ret
push
fbld
mov
test
inc
push
clc
xchg
mov
dec
sub
mov
loope
fnstsw
and
cmp
insb
imul
outsb
das
add
fs
pushf
pop
adc
lock
stos
cmp
loope
xor
xor
movsb
mov
jno
iret
push
ss
add
pusha
xor
rol
repnz
or
js
rcl
push
sub
mov
loopne
adc
and
adcb
out
in
shll
adc
inc
shll
dec
xor
pop
mov
push
aam
xor
jp
aad
int
ret
jp
sub
cmp
xchg
bndldx
inc
sub
add
daa
jbe
add
cmp
xor
push
push
subl
ret
xor
jecxz
data16
outsl
mov
xor
inc
nop
leave
cmp
mov
ret
in
pop
fdivl
sbb
into
xchg
sbb
inc
fwait
mov
and
ret
sbb
in
cmp
jb
std
imul
jnp
push
cmpsl
and
xchg
adc
pushf
bswap
push
imul
xchg
cmpsb
cwtl
rorl
add
and
icebp
cmp
into
out
data16
hlt
cmp
jne
mov
and
outsl
shlb
cld
mov
outsl
es
xor
rol
add
jmp
lds
lret
pop
jbe
push
mov
and
sarl
push
aaa
push
mov
pop
xor
out
mov
mov
xor
dec
xlat
sahf
inc
add
sti
call
pop
js
push
jb
sub
sub
xchg
inc
cmp
adc
add
js
push
dec
sbb
inc
jns
mov
xor
inc
mov
ret
mov
shrl
inc
fstps
add
imul
mov
in
inc
inc
sbb
cwtl
inc
push
add
stos
es
scas
mov
into
clc
xor
mov
adc
cs
add
cltd
pop
int3
mov
or
dec
push
insb
movsb
ja
je
push
iret
imul
and
rcl
lahf
test
lahf
and
sahf
add
sub
addr16
sbb
pop
push
add
aad
imul
inc
fwait
loopne
test
mov
fists
dec
mov
outsl
xor
leave
mov
je
faddl
mov
or
inc
mov
enter
pop
pop
dec
xchg
or
dec
push
loope
jmp
jae
and
ja
pop
dec
mov
aaa
cmp
data16
testb
lock
mov
cmpl
fwait
or
std
sarl
xlat
into
dec
dec
inc
es
in
testl
ja
stc
sbb
loop
dec
imul
cmpsb
fcmovnu
outsl
xor
push
dec
cmp
xchg
aam
xlat
popf
in
sbb
jg
add
dec
xor
aaa
mov
push
push
inc
popa
std
push
movsb
and
sbb
or
cmpsb
addr16
mov
cmp
mov
jae
inc
xor
adc
cmp
add
jbe
mov
or
addb
cmp
stc
cmp
and
push
xor
add
add
mov
ljmp
jl
loope
xchg
sahf
sbbb
outsb
out
cmpsl
xchg
rorb
jns
sahf
out
loope
pop
jnp
push
mov
popf
rol
mov
jg
push
test
inc
adc
insb
out
jae
loop
mov
out
shrl
pop
xor
loop
ret
in
mov
out
jg
mov
mov
sti
push
mov
jmp
xchg
inc
mov
es
out
ret
xlat
xor
enter
into
ja
daa
jne
mov
loope
test
cs
pop
lret
js
adc
dec
inc
sbb
push
repz
sahf
fidivrl
adc
pop
leave
inc
push
jne
scas
push
in
jno
adc
inc
sub
mov
cmp
fucomip
stos
cmc
cmp
addr16
push
xchg
mov
dec
jecxz
cmp
les
bound
or
cmpsb
xchg
movsl
roll
cmp
sbb
mov
aas
mov
jp
xchg
shrl
cmpsb
fisttps
jne
adc
dec
push
popf
popa
jg
and
or
fwait
dec
or
or
pop
jmp
sub
into
lds
in
sub
mov
lock
pop
ret
fbstp
mov
pop
push
repz
shlb
jecxz
jl
outsl
inc
push
jne
aas
call
jle
inc
pop
repnz
nop
mov
bnd
xor
ret
js
push
xchg
mov
imul
jle
out
dec
test
jg
lea
or
mov
mov
les
popf
push
outsl
inc
nop
stos
pop
movsb
sub
stc
cmp
xchg
pop
add
es
repz
mov
push
dec
mov
and
jbe
jp
stos
jecxz
sarb
test
sti
and
jl
adc
stos
mov
sar
and
inc
lcall
xor
dec
in
loopne
repz
pop
loop
inc
add
add
cmp
scas
add
sbb
inc
jecxz
pop
repnz
and
pop
jmp
outsb
cmp
mov
push
push
mov
shll
stos
aad
mov
and
stos
loope
stos
mov
jl
les
xchg
push
add
iret
jl
or
cmpsb
je
jecxz
sub
push
jmp
sub
adc
movsl
add
fildl
jb
xchg
cmp
pop
insb
mov
push
dec
test
pop
clc
jno
mov
imulb
jb
dec
sub
add
pushf
insb
cmp
sub
out
and
mov
cld
test
inc
jle
ljmp
movsl
les
mov
ja
adc
out
mov
sbb
jne
sbbb
jecxz
add
iret
xor
ret
loop
jae
cmp
jmp
aas
stos
pop
icebp
in
sbb
or
mov
xlat
jecxz
add
test
and
sarl
lret
adc
push
loope
outsl
cld
xor
sbb
addr16
mov
cmp
pop
push
leave
ds
cmp
dec
cmp
pop
push
hlt
cmp
rclb
mov
outsl
dec
mov
lods
rorl
insb
jmp
mov
fisttps
lret
pop
inc
adc
out
inc
cmp
faddp
les
jmp
xorb
push
subb
pop
nop
add
pop
fiadds
add
pop
repz
outsb
inc
xor
das
cmp
jl
test
stos
jge
lods
or
adc
cmp
and
dec
lock
shl
aam
push
sbb
fucomip
lds
jl
inc
hlt
mov
add
sbb
ret
jmp
in
insl
mov
xor
jge
push
icebp
mov
ds
mov
pop
sub
add
enter
pop
cmp
repnz
dec
fucomi
insl
outsl
out
mov
xlat
frstor
xlat
and
cmc
mov
sahf
add
adc
int
fstpl
nop
pusha
jle
pop
or
lret
mov
mov
cld
push
mov
jmp
mov
lcall
movsl
or
in
inc
jbe
lcall
jmp
sub
add
cmp
lea
fidivs
dec
cmp
pop
push
scas
pop
xchg
test
das
test
loop
std
mov
xchg
jae
iret
pop
incl
mov
mov
push
inc
push
lea
jne
in
xchg
aam
jl
mov
or
in
mov
lock
cli
ret
adc
and
xor
sub
imul
push
outsw
lds
mov
sarl
jmp
dec
push
cmp
das
sbb
notb
adc
icebp
out
cmc
lcall
pop
mov
addb
and
test
std
or
popf
or
pusha
stos
loop
dec
popa
pusha
fwait
incl
adc
fstpl
inc
jge
jb
out
push
adc
scas
popf
fs
or
in
mov
and
inc
xor
jp
fildl
clc
aaa
cmc
das
notb
or
imul
push
push
inc
add
and
mov
dec
popf
add
pop
mov
jecxz
inc
loop
out
or
push
loope
or
jnp,pn
test
jmp
scas
ret
fldcw
mov
movsl
fimuls
inc
in
sbb
ret
sar
rol
and
enter
adcb
popf
lds
adcl
mov
out
and
scas
aad
loop
jb
sti
fistpl
dec
ljmp
scas
mov
add
push
sub
jns
mov
push
lods
outsl
lea
jo
ror
push
xlat
fdivl
cmp
push
pop
lock
pop
cmpsl
cs
jle
sarb
cwtl
sbb
jmp
repnz
adc
jo
sbb
insb
jae
adc
stos
inc
jo
xchg
hlt
push
cmp
inc
pop
cltd
mov
jmp
xchg
xor
roll
push
cmp
icebp
pop
inc
xor
xchg
jae
addb
sahf
and
jecxz
sbb
xor
adc
mov
sub
inc
dec
daa
dec
sbb
shll
dec
inc
or
pop
pop
iret
xor
inc
mov
lret
sub
push
xlat
out
and
or
push
cmp
icebp
call
mov
jl
pop
xorl
data16
mov
lds
loop
clc
icebp
jge
loope
nop
int
pop
in
mov
fcompl
nop
movsb
inc
sub
insl
adc
lcall
jnp
jbe
xlat
xchg
mov
xchg
jg
cltd
setle
pop
inc
std
mov
out
leave
cmpsl
xchg
jg
stc
aad
std
sbb
shl
fwait
shlb
pusha
cli
jno
rolb
jne
aam
cli
mov
js
dec
das
mov
xchg
iret
popf
call
mov
add
push
xor
pop
push
test
fbld
mov
dec
adc
push
std
add
cmp
sbb
push
test
xchg
jnp
mov
pop
dec
push
insb
movsb
mov
push
push
xchg
mov
mov
mov
jmp
jae
jae
test
add
nop
cmp
scas
jno
popa
movsb
subl
leave
cmc
daa
or
adcl
cmp
mov
add
fcmovbe
test
sub
push
adc
lret
inc
mov
xchg
push
or
dec
decl
push
xor
inc
push
aaa
xlat
dec
dec
insb
rolb
cmp
xor
sub
and
mov
std
test
jl
fadd
dec
cmp
int3
push
loopne
xchg
jle
mov
adcb
stos
sbb
mov
inc
les
pop
push
jae
mov
pop
das
mov
xchg
push
sbb
gs
fidivs
lods
push
insb
add
push
jo
jno
shll
lcall
arpl
pop
es
push
mov
mov
test
rcrb
dec
outsl
pop
pop
sub
cmp
or
sbb
in
iret
cld
dec
out
fcompl
mov
jl
dec
outsl
pop
pop
sub
cmp
or
sbb
in
iret
cld
dec
out
fcompl
mov
jb
push
outsl
pop
pop
sub
push
aas
or
sbb
in
iret
clc
dec
out
aad
test
mov
pop
mov
jg
outsl
sbb
sub
cmp
mov
adc
push
push
int3
out
stos
call
hlt
push
in
mov
out
xchg
sub
mov
xor
outsl
adc
popa
or
push
fbld
out
xchg
lahf
loope
icebp
mov
and
jg
popa
adc
popa
aas
jno
inc
das
push
mov
notl
cmpsl
shrl
and
adc
xor
arpl
push
mov
mov
jge
daa
xor
push
testb
inc
pop
pushw
test
pop
test
push
outsb
mov
push
cmp
cmp
ficompl
adc
pop
cli
aas
inc
shrb
or
test
jp
outsl
push
or
mov
inc
add
rcrl
popa
repz
aas
mov
fbstp
pusha
loopne
loope
sub
and
call
and
inc
dec
jb
pusha
loope
push
repnz
xchg
mov
jle
lahf
and
test
aas
add
and
dec
mov
sub
push
mov
add
pop
test
push
das
push
push
mov
out
xchg
mov
lahf
icebp
mov
and
add
pop
popa
pop
jno
inc
das
pop
mov
stos
bound
mov
mov
movsb
scas
mov
or
or
or
or
inc
xor
loopne
sti
nop
sbbl
rcrl
sub
push
jge,pn
push
fs
dec
xor
aas
mov
cmc
xchg
xlat
lea
rcrl
dec
xor
outsl
adc
popa
aas
inc
das
push
fbld
out
xchg
lahf
loope
icebp
mov
and
jg
outsl
adc
popa
aas
inc
das
push
fbld
pushf
inc
repz
paddusw
out
sbb
test
inc
fisttpll
ret
movsl
pop
lcall
sbb
push
xor
mov
enter
adc
push
sbb
mov
int
jb
stos
aad
push
icebp
movb
add
ds
mov
clc
data16
movsl
xchg
adcl
or
mov
jae
sub
add
push
scas
outsl
mov
aam
pop
mov
mov
loop
gs
mov
sub
sbb
leave
jl
fs
sub
jno
sbb
mov
dec
and
add
inc
add
popa
mov
jae
dec
xchg
scas
adc
or
shll
pop
cmp
jp
dec
mov
or
sub
jle
jg
jmp
loope
inc
mov
sbb
sbb
push
stos
nop
je
adc
push
inc
sbb
popf
mov
sbb
pop
je
leave
shlb
mov
enter
adc
fbstp
aad
sub
dec
push
or
pusha
insb
inc
add
aaa
cli
or
mov
or
test
sub
in
in
add
outsb
or
push
dec
aas
add
outsb
mov
inc
sbb
sbb
scas
sti
dec
fildl
inc
pop
mov
pop
mov
jle
call
cmp
sub
mov
shr
or
lea
pop
lahf
les
fdivs
mov
inc
bound
push
mov
adc
pusha
cli
inc
inc
in
and
jno
das
fidivs
in
mull
setl
mov
cltd
out
stos
mov
mov
movsl
leave
test
fstl
pop
int3
and
xor
insl
in
mov
adc
inc
mov
out
cwtl
aad
jmp
out
cmc
insl
xor
cld
pop
filds
insl
sti
sahf
test
fwait
into
fs
hlt
dec
push
iret
xchg
insl
out
push
roll
adcb
xor
in
imul
push
pusha
jp
cmp
mov
xchg
dec
push
arpl
push
ds
adc
xor
or
inc
mov
jmp
mov
and
jb
pop
gs
pop
loop
nop
or
cmp
jns
mov
rcrb
bound
int3
inc
jp
mov
pushf
stos
iret
xor
push
outsb
pop
mov
sub
fimuls
push
aad
hlt
imul
sub
push
push
jge
fisubl
inc
in
add
xchg
out
xchg
mov
jecxz
mov
push
ljmp
push
dec
in
add
push
jb
lret
dec
rclb
cmp
sub
scas
adc
add
xlat
xor
in
mov
loope
bound
mov
add
or
push
mov
fmuls
fwait
enter
dec
cwtl
stc
sbb
mov
inc
xor
testb
sbb
cli
in
das
shrb
and
cld
in
xor
std
jecxz
mov
hlt
push
sbb
cmc
and
sub
adc
xor
adc
mov
cmp
xorb
pop
pop
xchg
repz
push
sahf
icebp
int3
mov
jecxz
mul
add
dec
aad
or
lds
sbb
insb
arpl
push
and
pop
out
push
mov
mov
ret
xor
adc
push
pop
sub
fwait
jno
xor
xchg
dec
arpl
pop
push
dec
sbb
pusha
xor
cld
cmp
sbb
hlt
and
loopne
mov
test
cmp
adc
push
sahf
cmc
rolb
sub
sbb
ljmp
xchg
xorb
jo
fcompl
mov
dec
push
adcl
cmp
cmp
adc
fsubr
push
lahf
fcoml
pop
clc
lret
pop
into
ret
pop
mov
cmpb
xchg
fisubl
add
and
cli
xchg
jb
in
sahf
fisttpl
xchg
add
out
jp
inc
popf
mov
addb
repz
lds
pushf
in
xchg
movsb
call
clc
mov
les
lcall
out
rclb
mov
rcrb
and
xlat
dec
add
mov
data16
inc
insl
push
xchg
inc
jb
test
xchg
sbbb
mov
scas
lods
cmp
xor
dec
dec
adc
in
das
bound
pop
and
daa
add
call
xor
loopne
push
addr16
cmp
push
mov
push
and
xlat
inc
adc
ss
shlb
pop
and
push
xchg
mov
mov
adc
into
ret
test
nop
mov
in
int
inc
shll
mov
fmul
cltd
outsl
clc
mov
adc
pop
pop
push
push
in
mov
sub
mov
into
fdivrp
dec
push
fisttpl
and
jle
sbb
leave
orl
daa
xor
push
mov
dec
icebp
sbbb
test
lock
xor
into
mov
sahf
fcoms
jb
dec
lea
out
mov
jge
add
adc
movl
sti
fwait
jle
insl
inc
loopne
jo
push
sbb
ds
cwtl
dec
adc
mov
mov
in
icebp
cs
mov
andb
dec
mov
lods
enter
mov
jge
push
enter
cs
scas
adc
push
mov
fldcw
rcrl
inc
xor
jbe
add
faddp
pop
push
mov
clc
or
cmpsb
lret
adc
fdivr
clc
adc
cltd
cwtl
mov
dec
mov
and
adc
test
adc
and
jnp
xor
popf
fistpl
inc
dec
mov
out
lcall
mov
shrl
pop
int3
dec
xchg
rorb
xchg
jl
jle
pop
xor
and
mov
mov
add
fs
rclb
insb
push
addr16
xchg
pop
out
or
jne
xchg
fdivl
popl
xor
lcall
mov
int
shl
or
xchg
pop
cmp
sti
out
and
pushf
push
cmp
adc
xchg
pop
lahf
push
xor
sub
dec
xchg
out
cmp
or
lret
lock
and
pop
cmp
cltd
pop
adc
inc
mov
adc
push
sahf
or
hlt
or
dec
push
cmp
out
cwtl
add
push
mov
nop
sbb
push
fidivs
pushf
lods
push
jecxz
adc
and
in
jnp
and
inc
dec
pop
call
fldenv
jmp
xchg
std
adc
mov
aad
mov
mov
pop
xchg
dec
jp
ret
out
es
lret
mov
mov
cld
mov
xor
inc
push
cmp
xchg
outsb
lods
push
inc
and
dec
mov
mov
imul
mov
in
jecxz
lock
ret
inc
add
adc
cld
mov
cli
std
adc
repz
scas
or
cltd
push
rcrl
mov
xor
insb
nopl
xor
ds
pushf
mov
into
enter
cmc
pusha
mov
test
fimull
add
in
pop
pop
sbb
imul
xchg
fisubrl
mov
sbb
dec
les
daa
shlb
aam
imul
test
jnp
orps
je
orl
cmpsb
enter
xchg
bound
mov
or
imul
mov
add
jo
fs
bound
cmc
and
movsb
jmp
stc
cmp
pusha
leave
and
pop
lret
mov
mov
sbb
and
sub
or
dec
xor
jge
das
mov
jle
add
outsb
rorb
jp
loope
mov
mov
sbb
mov
data16
jle
mov
pop
cli
andl
jae
pushf
mov
inc
enter
xor
push
adc
xor
aad
xchg
adc
cmp
xchg
repz
mov
push
sahf
pushf
ret
data16
movsl
pop
rcr
stc
jmp
imul
inc
fdiv
cmp
mov
std
inc
add
js
subb
popa
loop
adc
in
xor
jns
out
cmp
or
xchg
and
xor
mov
push
clc
mov
pop
cmp
jnp
imul
cltd
in
cmp
movb
xor
dec
push
mov
sbb
cmpb
push
vpmadcswd
mov
in
xor
jne
or
jae
sub
and
into
cmpsl
idiv
push
xchg
dec
adc
or
xchg
mov
cmpsb
mov
mov
sbb
jns
addr16
push
gs
mov
xor
mov
lds
mov
pusha
mov
mov
xlat
or
and
roll
into
call
std
sub
mov
lds
mov
pushf
mov
cmp
adc
jb
mov
nop
stos
jno
fcomip
xor
scas
jbe
and
leave
aad
jg
adc
in
cltd
int3
fbstp
push
push
xor
sbb
leave
frstor
pop
imul
fistpl
sub
js
pop
mov
cmpsl
sub
aad
sahf
push
in
mov
cs
mov
push
sub
int
mov
repnz
xchg
mov
es
sti
mov
das
and
add
fwait
xor
test
xchg
mov
cmp
pushf
roll
dec
sbb
mov
xchg
cwtl
fidivrl
xchg
movsb
and
rorl
insb
addr16
je
and
adc
test
xor
jp
jecxz
daa
pop
mov
scas
xchg
and
jo
fcomps
mov
les
xchg
push
mov
sub
stos
cmc
mov
repnz
fwait
gs
mov
mov
lret
mov
outsb
out
push
sahf
xor
and
jl
outsb
dec
loop
jne
mov
cli
jns
adc
mov
inc
adc
mov
shrw
mull
xor
fildll
inc
adc
xor
jmp
push
rcr
ja
popl
add
sbb
add
cmp
sbb
xor
sahf
cs
int3
mov
fnsave
je
push
mov
mov
je
mov
or
ret
or
and
rorb
xor
inc
cmp
decl
imul
and
sbb
je
aad
mov
mov
cmp
jmp
clc
sub
mov
int
sbb
mov
cmp
pop
add
ds
mov
addr16
test
sub
xor
gs
add
mov
cld
pushf
or
sub
insb
jl
imul
hlt
mov
or
test
dec
dec
popf
inc
jns
inc
jnp
sahf
jnp
aam
xor
mov
pop
sub
xchg
jbe
mov
out
adc
push
jnp
pop
jae
or
mov
cmp
jb
out
or
rorb
add
mov
ficoml
xor
incb
ror
fdivl
sub
lcall
mov
mov
jle
dec
dec
addb
inc
dec
push
aad
shlb
lods
cmpsl
inc
sub
add
xchg
add
jg
and
mov
bound
xor
sbb
inc
jns
push
lret
cmp
shrb
out
cli
out
push
clc
outsb
add
or
pop
jnp
push
in
pop
push
jnp
repz
pop
int3
sarl
fsubrl
dec
out
sub
bound
mov
in
mov
sub
cmp
xor
sub
sbb
push
scas
xor
sbbl
ljmp
cmp
push
popa
rolb
inc
sbb
xor
int3
mov
leave
push
stc
fst
cmpsb
stos
aaa
jno
add
mov
xchg
das
adc
inc
xchg
shrl
aas
fstl
xchg
loop
aaa
push
ds
or
je
jae
push
lret
mov
or
sahf
inc
mov
mov
fistpl
ss
out
stos
inc
ret
into
cmpb
mov
sub
lret
sbb
dec
enter
jo
jb
movsb
enter
xchg
gs
add
pop
test
pop
lret
call
inc
rcr
push
fsubrl
mov
add
scas
lock
jns
xchg
ret
nop
cmpsb
push
in
jg
sbb
repz
pop
popa
mov
mov
int3
bound
out
cs
add
lods
lock
inc
push
xor
test
push
dec
scas
mov
add
or
gs
dec
jae
int
push
lods
repz
aad
add
adc
rolb
cmpsb
add
stos
xchg
inc
cli
cwtl
sahf
and
mov
lret
rolb
mov
addr16
pop
loop
mov
sbb
or
cmpsl
pop
cmp
ret
cwtl
mov
cmp
pop
mov
sub
cmp
and
mov
out
pop
out
or
out
mov
push
adc
gs
ljmp
pusha
jbe
mov
nop
push
add
push
mov
shlb
lods
add
dec
test
add
jecxz
enter
mov
popf
imul
cmpl
xor
fs
sbbb
xchg
orb
enter
imul
push
ss
lea
adc
out
sub
sbb
mov
adc
arpl
lods
sub
loope
mov
mov
jmp
or
ss
pop
lds
dec
mov
push
std
in
popa
js
xor
xor
jmp
fs
jp
enter
jg
repnz
or
mov
arpl
push
or
mov
mov
cmpsb
xchg
lret
mov
jg
out
mov
lahf
pop
scas
aaa
repz
xchg
neg
push
xchg
mov
frstor
jb
rolb
sub
gs
push
outsl
sbb
fcmovb
sub
out
mov
lods
int
cld
pop
push
ret
les
xchg
cwtl
les
scas
out
push
les
jp
cmp
jl
daa
sub
mov
xchg
cld
arpl
mov
adc
pop
sti
adc
ret
sbb
mov
mov
es
lea
push
lahf
in
and
nop
imul
inc
push
inc
pop
mov
add
mov
hlt
sbb
xor
add
icebp
mov
sub
xchg
je
jl
mov
jmp
cmp
xchg
mov
loope
add
add
pop
aad
mov
inc
cmpsb
inc
insl
xchg
or
ja
sbb
ja
insb
into
inc
jle
push
mov
hlt
lock
lock
adc
push
in
add
mov
pop
cli
in
fists
in
int
add
sub
lock
stc
pop
push
dec
xlat
pop
aaa
xor
nop
mov
xchg
jno
ljmp
sub
cmpsl
push
cmpl
dec
subl
xchg
shlb
inc
in
aas
cs
inc
in
mov
lahf
stos
lock
jne
aam
sub
cmpsl
dec
cltd
add
fst
cmp
clc
inc
cmc
inc
mov
push
test
xlat
push
and
dec
out
scas
dec
adc
outsl
lret
mov
movsb
lret
outsb
in
addl
jl
or
sti
jae
xchg
adc
out
push
fs
call
fwait
cmp
aaa
xchg
fadd
andb
sti
push
hlt
add
pop
pop
stc
xchg
test
dec
xchg
daa
iretw
inc
mov
in
jmp
scas
es
pop
dec
dec
clc
fs
sub
mov
rolb
jl
pop
in
rcrl
push
mov
cmp
mov
add
or
sbb
inc
jbe
das
sbb
jo
daa
xlat
js
mov
push
dec
out
jne
pop
xchg
in
wbinvd
das
sti
adc
mov
and
scas
cmpl
subb
bound
lea
lods
add
lock
cli
adc
fimull
mov
loop
cmpsl
dec
outsb
mov
shl
jg
jecxz
test
int
jmp
sub
int
cmp
out
pop
push
sbb
pusha
push
test
and
and
xor
loop
jle
repz
cmp
inc
fdivs
das
sahf
aas
or
pop
jecxz
cmp
mov
jo
cmp
add
repz
cmp
pop
mov
dec
add
cwtl
sub
dec
sahf
loopne
mov
dec
lret
ds
mov
loop
int
or
pop
push
mov
es
sub
mov
xchg
or
sub
lods
movswl
or
addb
test
outsl
jmp
dec
aad
shrb
mov
shrl
aaa
icebp
fsub
adc
addr16
imul
aam
and
lahf
xorb
js
cld
sbb
adc
xor
ljmp
jb
repnz
xchg
mov
push
mov
mov
sub
rcl
jp
hlt
mov
insl
dec
loope
dec
sbb
movsb
jmp
stc
push
jl
push
lret
mov
push
add
loop
test
loop
sub
fsubs
pop
roll
xchg
ljmp
imul
dec
outsl
inc
les
into
aas
mov
mov
inc
push
iret
mov
push
test
arpl
xlat
or
clc
mov
insl
jne
iret
cmpsl
arpl
inc
std
mov
push
outsb
lods
cli
fsubrp
mov
inc
mov
mov
pushl
pop
rcl
push
std
cmpsb
mov
shrb
mov
pop
xchg
add
inc
xchg
jns
pop
and
into
das
fsubrs
xchg
movsb
push
push
add
loop
jl
adc
cli
shl
inc
lds
stc
fcoml
push
dec
cli
fnstsw
jg
mov
xor
mov
lret
call
inc
dec
xorb
rolb
dec
or
add
sub
jmp
dec
sahf
lret
out
test
and
dec
push
dec
xor
mov
pop
jae
fcomi
ret
popf
xor
xor
xchg
and
adc
and
mov
nop
test
adc
mov
data16
insb
mov
lock
in
adc
fiadds
icebp
and
sbb
xor
int
stc
iret
fsts
andb
sub
and
pop
gs
jbe
sub
dec
jmp
clc
cmc
stc
dec
inc
pop
and
push
inc
mov
sti
push
out
rcrl
ret
stos
fwait
into
mov
mov
dec
hlt
mov
insl
jns
insb
loop
outsl
cmpsl
mov
mov
add
out
iret
push
cld
dec
adc
mov
and
mov
sbb
pop
lahf
and
lods
jl
fwait
cwtl
mov
fstl
insb
ja
sbb
fisubs
jge
mov
sbb
pop
les
or
mov
fwait
mov
mov
daa
inc
lea
fwait
js
xor
or
mov
and
mov
mov
add
push
scas
push
jmp
in
push
jno
lcall
sub
pop
movsb
lcall
into
mov
mov
sbb
in
pop
outsl
fiaddl
rcrb
int
lock
mov
loope
imul
mov
mov
mov
aam
mov
xor
xorb
clc
dec
sbb
fstpt
ds
mulb
out
mov
repz
cwtl
aas
sub
sti
ds
fisubs
loope
mov
lret
or
push
pop
cmp
sbb
xor
dec
xor
or
int3
inc
fisubrs
rcl
cs
mov
movsl
pop
mov
push
test
adc
adc
inc
aam
popa
out
enter
mov
push
inc
mov
adc
cmp
rcr
xor
mov
push
pop
dec
mov
xchg
inc
in
sbb
push
mov
lea
lahf
mov
adc
inc
mov
mov
idivb
pop
cmp
and
push
jl
mov
imul
push
mov
aad
dec
test
push
push
push
in
sub
sbb
dec
mov
cmp
out
jmp
xor
cmp
pop
jp
push
and
clc
ljmp
test
negl
mov
pop
adc
mov
out
mov
inc
fs
push
xlat
sbb
xor
loop
outsl
pop
ja
ljmp
sub
mov
push
sbb
pop
fcmove
int3
rorb
cmpsl
jno
out
test
fwait
sub
lret
ret
jno
rclb
adc
jge
aaa
pop
sub
fs
mov
mov
and
fmuls
jecxz
xchg
outsb
lcall
aas
pop
push
stos
mov
inc
sub
inc
cwtl
fcmovnbe
subl
popf
imul
jne
ret
push
rcr
jl
dec
out
mov
dec
rcl
xchg
popf
push
jae
mov
mov
repnz
dec
xchg
adc
xlat
dec
mov
arpl
mov
fidivrs
sub
lahf
loope
icebp
mov
and
jg
outsl
adc
popa
aas
inc
das
push
fbld
out
xchg
lahf
loope
icebp
mov
and
jg
outsl
adc
popa
aas
inc
das
push
fbld
out
nop
lahf
loope
icebp
mov
and
jg
outsl
adc
pusha
push
jno
inc
sub
mov
sub
jno
inc
das
mov
add
push
mov
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
pusha
sti
loopne
rcr
ror
add
mov
pusha
push
dec
inc
pop
xor
and
sti
loopne
rcr
ror
mov
cmp
ja
imul
inc
dec
xor
sub
sbb
or
loop
repnz
rcl
mov
adcb
and
pop
xor
xorb
lods
cmp
push
js
fs
mov
adc
ret
mov
inc
in
jb
sti
insl
popa
movsl
rolb
pop
sbb
add
or
mov
pop
fbstp
jmp
repz
loope
fucomip
mov
sbbb
cmc
jo
xor
xor
xchg
xchg
sbb
aaa
movsl
loopne
lock
cwtl
mov
mov
pusha
fwait
cmpsb
xchg
push
movsb
test
rolb
jae
add
or
or
and
mov
nop
xchg
and
xchg
repnz
dec
cmp
add
lahf
pop
and
push
xor
push
adc
mov
adc
lret
adc
add
rol
ror
mov
adcb
inc
inc
push
xor
and
adc
add
test
movsb
cltd
mov
mov
in
sbb
imul
and
inc
pop
insb
sub
je
scas
xchg
mov
movsb
aad
in
out
clc
mov
sub
and
sub
pop
jg
sti
into
jmp
mov
mov
mov
pusha
imul
dec
xor
and
adc
add
lock
loopne
rcr
ror
mov
orb
pop
inc
dec
xor
and
adc
add
lock
in
pop
pop
xchg
leave
ret
xor
push
xchg
divl
inc
push
dec
adc
rcl
or
pop
in
arpl
add
pop
pop
or
mov
repz
mov
and
cmp
xlat
inc
pop
pusha
or
mov
fs
dec
dec
push
add
repnz
fbstp
loop
movsl
ret
jne
mov
dec
dec
mov
jecxz
ja
sbb
js
mov
mov
xlat
xorl
xor
scas
shll
lret
out
inc
jb
mov
push
push
data16
xor
sbb
imul
fidivrl
pop
mov
add
and
mov
in
add
push
cld
push
test
push
xchg
xor
clc
ret
lret
test
push
fstl
lret
into
roll
cwtl
dec
movsl
pushf
cld
sbb
int
mov
xchg
shrl
push
add
xor
es
std
fsubs
push
dec
aas
xchg
pop
inc
mull
jbe
xor
mov
mov
mov
lds
movsb
outsl
into
xorl
bound
jg
adc
or
das
data16
in
fsub
mov
sub
lahf
mov
mov
xor
add
or
xchg
inc
sbbl
mov
repz
inc
outsl
cwtl
inc
cmp
mov
and
fwait
out
or
ds
out
cmc
jle
fsubp
lods
dec
push
add
sti
ja
mov
sbb
shlb
and
les
mov
mov
neg
push
aaa
pop
xchg
push
fwait
ret
repz
in
insl
fs
in
jo
mov
cmp
dec
test
sbb
data16
pop
pop
sub
js
sub
push
pop
cmp
popf
inc
mov
fistl
pop
stos
popa
test
inc
cli
sub
pop
add
or
test
mov
pop
cmp
lret
add
imul
jnp
std
push
dec
sarb
cmpl
cld
ljmp
dec
cmpsl
aad
bound
filds
mov
adcb
sti
xor
das
imul
movb
jnp
cmp
jl
mov
rorb
in
insl
mov
iret
add
movsl
inc
mov
popf
cltd
sub
push
cli
ja
pop
lods
or
pop
leave
mov
sbb
xchg
outsl
arpl
push
imul
into
jno
or
mull
sahf
pop
xorb
les
push
in
push
mov
cmpsb
adc
fcmovnu
mov
dec
dec
dec
stos
xchg
dec
mov
pushf
dec
jno
ljmp
dec
sti
addr16
pop
dec
sub
test
clc
addr16
ljmp
xchg
fmuls
es
ds
push
out
xchg
xchg
hlt
pushf
inc
cmpsl
lret
sbb
cmc
xchg
sbb
mov
lods
add
mov
fists
cmp
sbb
dec
aad
cmpsb
xchg
push
push
testl
jmp
mov
xchg
xor
ss
adc
mov
push
fs
loopne
gs
dec
in
pop
roll
jae
jnp
sub
xor
js
mov
cli
push
push
pop
mov
pop
and
push
sbb
std
aad
enter
push
pushf
std
inc
mov
push
insb
sbb
or
sbb
test
inc
mov
xor
dec
jp
mov
lods
cmp
in
fadd
xchg
cmc
cmp
push
lret
dec
in
testl
icebp
frstor
jbe
adc
dec
jns
cs
push
hlt
fdivrl
dec
jecxz
pop
sub
cli
hlt
test
fidivs
je
loopne
movsl
mov
push
or
arpl
cmp
sub
jo
pop
push
cld
inc
mov
gs
cmpsb
leave
into
adc
dec
iret
push
or
insl
mul
addr16
loopne
aaa
and
dec
arpl
js
push
das
decb
aam
int3
mov
bound
push
adc
das
jp
lds
mov
pop
dec
shl
or
lcall
pop
icebp
mov
inc
ret
gs
pop
pop
fcomps
mov
shlb
rolb
add
xchg
das
or
lret
xor
nop
leave
mov
xchg
adc
cmpsl
rcrl
lret
mov
inc
ret
mov
xor
xlat
inc
cmc
cltd
adc
and
es
nop
sub
movsl
test
cmp
pop
mov
sub
inc
popa
pushf
das
cmp
mov
sub
mov
sub
xchg
icebp
xchg
fdivrs
add
and
int3
mov
inc
and
insl
out
xor
add
inc
xor
push
addr16
inc
push
xchg
lock
rolb
bound
shr
scas
cmp
sub
dec
lock
into
pusha
bound
fidivs
add
xor
int
pop
pop
pusha
jns
arpl
test
sbbb
hlt
lds
shll
test
stc
cmp
es
xchg
adc
xorb
stos
lds
sub
ljmp
je
sbb
xchg
into
das
and
xor
lods
and
jl
xchg
add
jmp
adc
aad
jle
pop
xlat
std
je
sbb
xchg
xlat
rcll
dec
jmp
xor
or
fsubrl
imul
cmp
scas
aam
mov
inc
stos
and
aaa
sub
mov
fcmovb
movsl
fnsave
sub
loopne
roll
dec
cmpsb
rolb
mov
add
pop
pop
ror
cltd
cmp
lahf
xorb
loop
aaa
rcl
loopne
test
sub
push
push
mov
xor
fsubr
cmovae
mov
pop
cwtl
js
sub
mov
orl
ret
int
mov
daa
xlat
repnz
daa
pop
or
mov
lret
jmp
add
dec
cmp
or
or
mov
sbb
sub
leave
mov
jle
pop
mov
std
cmp
jge
mov
addr16
sub
addr16
add
daa
imul
mov
sub
cmpsb
not
ds
fs
aad
add
cmpl
inc
inc
test
iret
or
dec
rcrl
push
bound
and
dec
jl
mov
loopne
cmp
inc
loop
inc
inc
push
cmp
test
or
adc
mov
add
dec
aaa
jno
sub
cmp
cmp
cltd
sti
inc
out
les
repz
fdivrp
mov
lcall
out
lret
jl
bound
adc
pop
ds
cmc
sahf
add
xor
fistl
in
pop
subl
cltd
insl
push
pmaddwd
rolb
sub
adc
jo
inc
or
sub
dec
ror
sub
dec
add
mov
xor
pop
and
xor
pusha
fisubl
add
clc
bound
shlb
inc
rcrb
cbtw
ss
xor
iret
jns
jbe
sub
and
mov
ja
cmp
mov
lcall
ds
or
addb
sarl
mov
or
mov
or
or
insl
fildl
fsubrl
cmc
daa
xchg
stos
xor
jb
jle
or
sbb
enter
xor
fistpl
fwait
mov
mov
adc
sbb
int3
jbe
lock
iret
sarl
cltd
cltd
aaa
lds
mov
lret
and
push
cmp
icebp
and
aas
imul
pop
dec
push
addr16
dec
pop
aam
test
outsb
mov
xor
shr
push
sti
xchg
shrl
cmp
push
insb
je
stc
dec
mov
subl
cs
das
bound
stos
loope
xchg
mov
mov
jl
test
push
repnz
add
lock
adc
add
and
push
imul
sahf
fadds
insl
mov
push
sahf
inc
js
pop
sbb
mov
mov
mov
ror
insb
mov
into
pop
rorb
xor
mov
pop
dec
imul
dec
push
test
mov
pop
in
dec
rorl
idiv
mov
cmp
cltd
mov
sbb
sub
xchg
pushf
sub
clc
inc
jno
jbe
lret
loopne
sahf
fstl
jecxz
pusha
cmp
rcrb
xchg
or
sbb
cmpsl
mov
sbb
xchg
data16
repz
xor
push
mov
push
sub
mov
fldt
add
addb
sub
lds
lods
xchg
cmp
incl
xor
stos
dec
sbb
mov
enter
add
lcall
fcmovnbe
stos
add
sub
jl
cmp
pusha
test
push
jbe
cli
loopne
int3
jb
frstor
and
pop
dec
mov
aam
adc
lret
and
dec
stos
into
push
arpl
mov
outsl
xchg
pop
sti
cs
sahf
movsl
xor
dec
pop
and
fists
add
or
insb
sub
loop
sbb
pop
cmp
fldt
cmp
cmp
push
push
mov
add
bound
cmp
pop
jle
pusha
mov
rorb
scas
and
lret
outsb
xor
mov
mov
xchg
add
xchg
adcl
push
cld
xchg
ret
sbb
fisubrl
das
cmpsb
pop
sarb
bound
inc
xchg
xor
sub
push
jg
inc
and
test
push
mov
hlt
in
insl
mov
push
adc
stc
sbb
insb
and
repz
jmp
mov
out
mov
testb
xor
pop
push
icebp
stos
cld
dec
dec
mov
and
dec
lods
ret
add
mov
mov
pop
ljmp
jno
shr
and
pop
test
add
stos
jmp
mov
jmp
mov
lods
pop
sbb
sahf
push
cmp
stos
mov
mov
sub
cmp
rep
stos
sbb
mov
xlat
mov
es
inc
insl
push
xchg
insl
loop
cmp
mov
movsb
push
out
sub
out
pop
pop
jbe
cmovno
dec
das
mov
push
cmp
sbb
xchg
jo
leave
adc
sub
mov
imull
pop
push
stos
and
inc
sbb
cli
adc
ja
sarb
jbe
insb
ret
fidivl
pop
sti
mov
sub
xor
jle
add
inc
sbb
pop
pop
push
cs
jae
std
inc
and
and
movsb
bnd
push
mov
sahf
inc
out
mov
pop
xor
or
add
mov
inc
mov
xchg
adc
pop
aas
and
mov
xor
xchg
je
iret
jb
loop
ljmp
sub
lret
addr16
das
das
add
jns
fistl
push
mov
fadds
push
inc
rcrl
test
std
mov
xor
ret
nop
push
xchg
ljmp
cmc
stc
leave
inc
dec
test
clc
adc
sbb
fwait
cmp
and
insb
stc
fimull
inc
stos
aaa
sub
inc
fisubl
lahf
dec
cld
xor
push
sub
mov
pop
lods
scas
xorl
inc
fwait
lods
pop
sti
repz
push
aaa
or
push
jmp
mov
imul
imul
jp
mov
daa
test
cmp
idivb
test
or
fs
add
movsl
push
add
xchg
push
jbe
sbb
inc
or
rolb
aam
mov
dec
aaa
adc
sbb
pop
fwait
pop
lret
int
dec
into
pop
push
pop
pushf
dec
add
imul
dec
fs
jns
mov
and
inc
pop
sti
sar
rcrl
out
add
mov
lret
and
dec
mov
jecxz
add
jg
in
aas
lret
repz
mov
fistpl
or
iret
rclb
addr16
ljmp
and
test
cmpsb
movsb
push
pop
sbb
xor
insb
fisubl
nop
inc
stos
jecxz
xorb
jb
or
sub
mov
push
pop
xorl
pop
pop
incb
mov
jp
xchg
xchg
inc
addl
push
adc
cmp
ret
push
xor
mov
cmp
sub
and
jecxz
pop
pop
push
frstor
push
ljmp
mov
inc
jno
lcall
or
add
mov
jge
push
movsl
fs
mov
leave
fdivs
popf
pop
jae
arpl
mov
dec
mov
mov
les
jo
scas
mov
inc
xchg
filds
je
ljmp
aas
mov
jl
out
cmp
or
js
sub
sbbl
out
adc
lods
in
jbe
sub
daa
shll
inc
add
cltd
pop
jmp
and
or
mov
and
cmp
imul
rcrl
push
lods
into
inc
iret
mov
cld
inc
xchg
add
std
mov
pop
subl
imul
mov
xorb
shl
fwait
popf
jmp
xor
mov
and
mov
cwtl
jne
mov
daa
sbb
stos
ljmp
cmp
loopne
mov
daa
pop
lds
into
dec
cmpsb
xchg
jmp
adc
xor
into
xchg
repz
movsl
push
push
jecxz
loop
xlat
out
adc
sub
jl
adcl
loopne
sub
sar
sub
into
cli
and
xchg
sbb
subb
loop
mov
add
fdivrs
roll
imul
lods
inc
in
add
movb
pop
out
mov
cmpsb
lahf
or
jns
mov
or
ja
aas
stc
mov
jnp
mov
pop
loop
mov
leave
lret
shl
loop
mov
xor
mov
xor
mov
pushf
cwtl
xchg
dec
mov
jb
sbb
pop
into
std
xchg
pop
popa
fadds
ljmp
mov
jae
sbb
jbe
fisubrs
out
mov
pop
or
pop
repz
iret
mov
push
lret
mov
dec
movsb
jne
shll
cli
sahf
call
hlt
mov
sub
dec
cmc
mov
lds
jb
dec
inc
inc
movsl
mov
repz
push
cmp
cmp
test
inc
insl
xor
data16
push
xchg
cwtl
xor
orb
aad
rorl
jno
xor
nop
out
cli
subps
fmul
mov
xchg
and
adcl
adc
jl
lahf
jg
lahf
push
push
test
add
aad
push
mov
mov
ror
push
imul
ja
xor
jnp
sahf
add
mov
add
jo
push
pop
lahf
cmp
inc
or
xor
aaa
push
in
adc
sbb
mov
rcrb
enter
mov
dec
fbld
push
push
ss
jg
and
dec
lods
into
dec
imul
lret
push
fs
outsb
inc
jno
stos
xor
lret
cltd
push
and
scas
jl
and
mov
jp,pn
mov
rcl
lret
adc
mov
inc
adc
add
dec
cmp
and
adc
inc
push
testl
mov
add
cmc
mulb
sub
mov
inc
stos
sarb
jle
inc
sub
loopne
inc
push
or
push
loope
popa
mov
inc
mov
repnz
adc
mov
adc
xchg
xor
jb
pop
outsb
or
push
inc
fucom
les
mov
xor
mov
pop
dec
push
lret
outsb
and
sub
aaa
jge
in
out
nop
xchg
nop
and
ds
int
or
mov
mov
inc
sbb
add
mov
sub
push
push
nop
cmp
outsl
add
xor
jbe
sbb
add
adc
movsl
outsb
cmpsl
stos
outsl
dec
pop
push
pop
xor
ret
scas
int
mov
outsl
dec
sbbl
adc
lcall
int3
mov
dec
fs
sub
popf
movntq
add
sbb
cli
fidivs
xchg
incl
adc
push
leave
pushf
mov
fsubrl
inc
notb
lock
jnp
mov
lcall
sbb
ret
mov
lahf
jmp
add
adc
adc
test
cltd
aaa
sbb
mov
dec
mov
or
pop
inc
cmp
add
cmpsl
and
mov
rcrb
jno
sbb
loope
push
pop
adc
dec
addb
push
xor
cs
xchg
xorb
add
nop
mov
add
icebp
insb
sbb
sub
lret
inc
in
push
pop
jae
pop
imul
fcmovb
test
pushf
cmpsb
int3
jbe
inc
lds
xchg
lock
push
pop
shl
jle
shl
ljmp
mov
cmp
inc
inc
inc
std
in
pop
sbb
dec
pop
dec
gs
inc
jg
mov
lds
pop
test
cmp
lods
stc
incb
imul
fsts
and
and
or
ret
addb
pop
gs
addl
jae
xor
cmp
adc
and
cmp
pop
adc
out
dec
mov
mov
cwtl
imul
xchg
jno
xchg
ljmp
fnsave
fcomps
adc
mov
pop
addb
in
inc
shrl
xor
cmp
and
sahf
and
or
sbb
cmc
cwtl
push
xor
ret
test
pop
ljmp
stc
inc
ja
or
xchg
scas
dec
pop
out
lret
movsb
inc
mov
inc
xor
add
in
dec
in
movsb
inc
adc
sti
cmpb
fnstsw
dec
sub
test
mov
mov
xor
cs
scas
fwait
sbb
mov
insb
sbb
negl
cmp
inc
cmp
dec
push
shrl
cs
pop
out
dec
xchg
hlt
mov
sbb
xor
lcall
dec
adc
fwait
jbe
and
sub
mov
roll
lods
jg
faddp
push
sub
fdiv
fcmovb
xchg
jl
sbb
addr16
xchg
das
cli
jno
inc
loop
dec
inc
add
fs
add
leave
shl
addr16
aam
adc
sbb
add
mov
xchg
fcmovb
fildl
outsb
loope
rorb
cmp
pop
imul
mov
mov
or
adc
add
push
das
std
jnp
aad
insl
cmpsl
mov
push
sub
insl
clc
sub
mov
jbe
push
adc
xor
mov
mov
sti
stos
jnp
hlt
shll
pop
dec
cmp
jg
andb
in
dec
mov
cmp
cmpsb
imul
pop
in
jne
stos
in
lods
xchg
in
adc
subl
scas
mov
jne
movsb
mov
sbb
cmc
cmp
adc
int
fwait
aaa
lock
xor
scas
cmp
jns
ss
xor
push
adc
mov
fstp
into
fnstsw
xchg
adc
xor
gs
xchg
mov
mov
ret
pusha
std
test
cmp
add
fcompl
adc
cmp
cld
and
cmc
roll
popa
mov
fsubl
cwtl
mov
pop
test
push
mov
push
imul
pushf
in
sbb
adc
adc
xor
outsl
or
dec
daa
sbbl
aam
adc
maskmovq
testl
cmp
aas
shl
sbb
outsl
icebp
popa
fwait
daa
lcall
push
add
jl
or
sub
lret
dec
push
testl
adc
jg
cmpsl
xchg
repz
sub
es
pushf
xchg
xor
mov
fstl
out
add
sub
inc
enter
lret
out
push
mov
adc
movsb
nop
add
xchg
std
mov
cld
lret
dec
dec
push
insb
call
dec
xor
pop
sub
mov
nop
sub
add
lcall
adc
cmp
mov
xchg
icebp
or
lcall
push
loope
inc
jae
jl
ds
sti
xor
movsl
pop
ljmp
xchg
xor
repz
push
cmpsl
add
xor
inc
ds
jbe
mov
ss
mov
push
or
das
int
imul
jg
imul
jbe
sub
int
and
inc
sub
cli
insb
xor
subl
lret
lods
cmp
adc
add
push
lods
pop
shll
and
pop
push
sub
loop
mov
or
xor
push
testb
in
std
cmp
adc
inc
or
mov
loope
xchg
sbb
loopne
pop
or
cmp
popa
int3
sub
jmp
fcmovnb
lret
mov
mov
mov
pusha
imul
dec
xor
and
adc
add
lock
loopne
rcr
ror
mov
orb
pop
inc
dec
xor
and
adc
add
lock
loopne
rcr
ror
mov
orb
pop
inc
dec
xor
and
adc
add
icebp
jmp
out
rcr
ror
mov
orb
pusha
sar
inc
cmp
mov
push
out
pushl
in
sub
lea
push
mov
push
call
cmpl
je
cmpl
je
lea
push
call
mov
movzwl
mov
mov
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
not
mov
pop
mov
or
mov
leave
ret
lret
lods
fstpt
test
xchg
fmull
pop
cmp
or
sbb
insb
sbb
sub
lret
lods
fstpt
in
fwait
cld
stos
int3
mov
pop
imul
lret
insb
sbb
cmp
fstpt
in
fwait
cld
stos
int3
mov
cmp
push
je
pop
ds
pop
xchg
lods
mov
int
sub
pop
mov
mov
xor
pop
mov
idivl
aas
sahf
cmp
cmp
ljmp
push
lret
mov
faddp
xchg
or
sbb
fwait
hlt
shrl
add
sub
dec
rorl
ret
imul
loope
insl
mov
cmp
lret
mov
sti
pushf
lods
in
mov
cs
mov
push
xchg
repz
pop
subl
cmp
or
shr
fwait
jmp
mov
repz
fcompl
in
jnp
cmp
cmp
sub
jo
dec
cltd
imul
pop
stos
cmp
sbb
sbb
outsb
pop
mov
mov
mov
fwait
cld
stos
int3
mov
cmp
or
sbb
insb
sbb
cmp
and
cmc
mov
mov
dec
imul
or
jge
scas
lods
mov
out
mov
fsubrl
push
or
insl
jnp
or
jne
inc
sub
scas
in
out
test
xchg
stc
in
fwait
cld
stos
int3
mov
cmp
or
sbb
insb
sbb
cmp
fstpt
in
fwait
cld
stos
int3
mov
cmp
or
sbb
insb
sbb
cmp
cmc
jbe
aam
jne
jmp
jne
testl
lea
mov
js
fistpll
mov
pop
jmp
pop
outsb
xor
loop,pt
loopne
cs
subb
inc
pushf
lret
mov
cld
adc
mov
mov
out
test
cltd
scas
pop
mov
cltd
sbb
pop
jge
cmp
into
jae
push
fwait
or
push
mov
xorl
pop
jo
add
inc
or
repz
mov
stos
jae
rorl
inc
xchg
cld
movsb
push
mov
push
adc
mov
mov
adc
add
data16
in
jmp
mov
lret
cmp
stc
xor
hlt
inc
xchg
mov
test
adc
aas
aaa
push
dec
gs
inc
xchg
push
movsl
xor
aaa
fisubl
fldcw
aaa
fcoml
sbb
sarb
dec
bound
and
lock
mov
lcall
rolb
sti
imul
or
nop
push
ficompl
cwtl
xor
mov
cltd
shrb
jo
dec
xlat
xor
sub
sbb
xchg
gs
test
fsubl
nop
jbe
push
jecxz
and
in
dec
jmp
pop
push
icebp
nop
xchg
mov
push
sub
inc
stos
movsl
jge
or
or
dec
out
mov
sub
nop
outsb
in
data16
insb
scas
mov
test
movsb
ja
testl
push
or
mov
iret
cmp
pop
mov
sarl
enter
push
jp
fimuls
mov
inc
pop
fstps
sbb
bound
sub
fs
dec
fstpl
mov
fcmovu
dec
push
push
or
xchg
inc
inc
repnz
andl
pop
and
jge
daa
es
cld
sub
push
loope
jmp
mov
out
test
lahf
pop
lahf
cmp
pop
insb
sbbl
add
sub
and
and
in
xor
test
xchg
xchg
das
cmpsb
iret
lret
inc
fists
ror
sub
fidivl
ds
xchg
lcall
int3
jg
jb
jns
imul
adc
xlat
js
test
mov
lret
xchg
sbb
jns
lock
add
dec
jne
out
inc
fdivrs
xor
add
leave
incb
and
into
add
mov
mov
mov
daa
fimull
sti
negl
sub
frstor
hlt
xor
pop
aam
mov
test
sub
lock
imul
fldt
mov
outsb
sub
xlat
jmp
jmp
push
clc
xchg
xchg
fbstp
daa
adc
repz
and
mov
adc
sbb
push
sbb
sahf
ds
in
lret
pushw
sub
and
daa
jle
nop
dec
jns
push
shlb
scas
cmp
lcall
or
in
jmp
jnp
mov
jne
xor
stos
stos
push
inc
sbb
cmp
movsl
stc
and
sti
adc
ss
add
add
mov
arpl
in
gs
add
sbb
fsubrl
pop
lret
adc
xor
dec
repnz
push
stos
test
sub
jmp
add
push
or
ljmp
enter
movsb
xchg
negb
test
mov
sbb
test
mov
jle
mov
adc
enter
push
leave
jl
in
jae
push
mov
xchg
cs
movsb
cmp
imul
add
test
or
and
mov
add
cmp
cmp
pop
movsb
idivb
bnd
inc
pop
cmc
das
outsl
popf
push
gs
insl
imul
shlb
xchg
das
rolb
dec
in
inc
adc
mov
cmpsl
decl
loope
xor
dec
in
mov
insb
popf
out
ror
repz
ja
enter
dec
stc
cwtl
sbb
enter
xor
cltd
daa
xchg
pop
and
andnps
xchg
push
test
xor
jg
sub
sbb
test
push
rolb
cli
push
dec
pop
xchg
pop
lds
incl
inc
jecxz
add
mov
pop
pop
sub
push
fnstsw
shrb
and
sub
pusha
fists
shrb
or
inc
mov
sahf
mov
cmpsb
dec
outsl
movsl
or
bound
scas
out
pop
jecxz
lods
dec
mov
lcall
les
stc
and
xlat
mov
dec
enter
jecxz
jl
pusha
pushf
pop
inc
arpl
aad
mov
push
mov
and
xchg
sub
insl
mov
aad
mov
jle
into
rolb
cwtl
mov
jecxz
cmp
mov
adc
mov
jno
or
sti
imul
sahf
loop
cli
bound
js
push
add
cmp
in
out
stos
cmpsb
pop
loopne
mov
imul
jge
cld
adc
dec
int
nop
mov
sbb
cmp
dec
dec
and
mov
addr16
push
mov
pushf
dec
mov
les
andl
js
xorb
jns
push
ja
mov
sahf
jmp
loopne
push
inc
or
outsb
arpl
adc
aaa
lcall
fcomp
dec
es
dec
inc
es
es
push
aad
inc
les
leave
call
inc
inc
ds
out
mov
pop
xchg
xchg
mov
push
jb
movsb
adc
inc
sbb
int
fadds
out
shr
push
sbb
cmp
sti
cmp
push
mov
movsb
jl
mov
stos
cmpsl
fistl
fwait
adc
sahf
pop
push
test
rolb
cwtl
addr16
cltd
inc
add
xchg
add
dec
push
push
mov
mov
mov
sar
in
jno
jmp
fmull
jmp
pop
loop
xor
data16
and
cmp
xchg
cmc
jns
pop
inc
xchg
jmp
inc
or
loopne
nop
leave
fs
or
imul
mov
xchg
xchg
adcb
std
int3
popa
cmp
mov
lock
lret
mov
les
add
test
shlb
subl
lods
jmp
jmp
mov
sbb
int3
push
lret
mov
stos
xchg
push
das
cs
jbe
pop
push
loop
pop
dec
roll
les
jnp
sahf
mov
loopne
jnp
xor
jg
mov
sub
sbb
jnp
lds
test
fmul
stc
out
mov
les
push
aam
enter
jmp
in
or
lea
mov
ja
icebp
cmp
idivb
test
inc
shll
mov
push
ret
nop
inc
sub
sbb
xchg
or
or
and
mov
push
dec
add
xchg
mov
test
std
out
or
pop
sarb
push
jne
jl
loope
xchg
pop
pop
mov
push
sbb
mov
cmp
test
push
aas
and
cmp
movb
or
cs
jp
jecxz
xor
adc
sbb
add
or
pushf
cmpsl
pop
in
mov
pusha
mov
loope
or
cmp
or
lods
jne
mov
sbb
icebp
sub
xchg
push
icebp
clc
push
mov
out
lods
pop
mov
cs
std
jl
pop
push
inc
adc
ret
je
cltd
sbb
dec
mov
and
jge
fldenv
inc
cmp
sub
insb
pop
push
aam
arpl
jae
sbb
enter
or
sbb
jae
les
call
ret
movl
dec
outsb
pop
sub
pop
popa
cmp
ficompl
xor
push
inc
fisttps
push
sbb
outsl
aad
pop
pop
push
cli
dec
jae
push
or
pusha
std
gs
cmp
ja
adc
cwtl
pop
loop
imul
in
and
repnz
dec
xchg
mov
xchg
cmp
jae
sarb
aaa
sbb
mov
fs
add
ret
jb
cli
dec
fiadds
test
xchg
inc
std
add
jns
cmpsb
pop
es
xchg
push
popf
test
dec
aas
mov
mov
test
lret
adc
shr
imul
cmp
or
mov
mov
js
add
orb
mov
cmp
loop
mov
add
sbb
stos
dec
pushf
pop
sbb
test
cli
cmp
ret
ljmp
pop
add
lcall
jmp
clc
gs
movsb
std
jg
mov
mov
push
pushl
imul
bound
mov
jno
add
add
add
cmc
pop
xchg
mov
hlt
data16
sub
dec
push
jne
add
xchg
test
mov
notb
ljmp
je
jmp
mov
sub
out
jecxz
rep
pop
xchg
push
and
adc
and
stos
mov
stc
pop
repz
mov
ficoml
cmp
sbb
cs
mov
fisubrl
test
iret
pop
in
cwtl
and
adc
orb
es
xchg
fimuls
int
mov
sbb
ja
add
add
adc
push
mov
xchg
adcl
lahf
cs
push
lcall
iret
and
jp
andl
sbb
dec
xor
xchg
ds
loop
pop
bnd
add
push
sub
rolb
mov
and
mov
mov
and
inc
push
sub
jnp
enter
push
lahf
inc
mov
subb
jae
adc
cmpsl
cwtl
out
out
cmpsl
mov
cli
sub
ret
stc
int
sbb
or
add
cwtl
pop
int3
jg
aaa
xchg
push
add
cmpsl
pop
mov
mov
cs
mov
adc
pop
mov
adc
icebp
daa
push
rolb
into
ss
scas
pop
cmpsb
testb
cmp
pop
mov
jo
rorb
sub
adc
cltd
xorl
lods
push
ljmp
xor
sub
jnp
inc
pushf
or
jmp
fisttpll
or
dec
jle
cmp
stos
insl
inc
pop
sub
arpl
mov
jnp
jecxz
insb
mov
shl
fwait
pop
mov
lods
cmpsl
cmpsl
nop
add
aaa
sub
push
es
mov
mov
mov
popf
cli
xchg
jmp
out
mov
push
mov
mov
mov
into
mov
dec
inc
in
inc
in
jmp
pushf
mov
dec
in
stc
xchg
xchg
out
imul
mov
or
test
fmul
dec
xchg
leave
mov
je
cmpsl
mov
incl
dec
mov
xor
jbe
push
mov
pop
or
xchg
or
dec
xchg
xlat
push
push
add
stos
xchg
fisubs
filds
mov
pusha
xchg
cmc
pop
js
jmp
out
in
sbb
mov
add
insb
mov
pop
jmp
sbb
dec
mov
xchg
insb
test
inc
and
add
loop
jnp
lahf
out
outsl
cmp
outsl
shll
mov
push
push
scas
adc
cmpsb
mov
rorb
in
mov
xchg
aad
aaa
inc
add
sub
adc
jg
lret
adc
mov
cltd
inc
aam
cmp
xchg
imul
push
mov
adc
clc
jno
push
xor
cmp
ss
jno
shlb
adc
mov
push
push
xlat
push
xchg
jae
push
mov
sub
inc
push
imul
nop
out
jb
andb
pop
inc
ds
mov
pushf
loopne
pushf
or
out
cmp
fsubr
imul
add
jge
in
popf
cmc
loope
xchg
jle
fs
ljmp
nop
lret
in
das
mulps
and
push
mov
pop
pop
sub
les
stos
ja
mov
jne
fnclex
mov
or
enter
imul
add
push
xor
jl
and
fiadds
sbb
int3
mov
popf
jo
ljmp
pop
cmp
rorb
push
xor
cmp
lret
sbb
sarl
adc
jo
ds
xor
inc
pop
mov
gs
mov
dec
cmc
push
je
sub
fdivrs
pop
fwait
addr16
lds
push
add
sbb
inc
mov
adc
enter
mov
inc
xchg
mov
adc
dec
sti
lret
mov
fmull
js
sub
sbb
xchg
or
fstl
jle
sti
loop
imul
fldt
add
add
scas
jp
lods
sub
insb
push
mov
out
mov
lea
mov
mov
shl
lcall
sub
mov
and
std
js
mov
inc
pop
clc
aad
sub
inc
push
sbb
sahf
sets
mov
push
fs
and
pop
mov
xorb
or
stos
dec
dec
push
cmp
hlt
bound
shr
flds
outsl
test
inc
dec
outsl
out
repnz
push
and
inc
test
movsb
mov
aaa
xor
sbbb
lds
push
sahf
sub
inc
adc
and
mov
stos
sbb
cwtl
xor
lock
addr16
and
jns
cmp
add
addr16
inc
pusha
rcr
or
push
addl
adc
xchg
jo
lcall
fwait
jae
insl
mov
out
cltd
fiadds
pop
mov
mov
mov
push
mov
test
fwait
neg
lret
aaa
jnp
jl
sbb
push
aam
cmp
in
aam
push
mov
cmp
xor
push
ret
add
or
cli
adc
adcb
nop
mov
jo
adc
les
pop
mov
add
aad
nop
dec
nop
lret
jecxz
ficoml
aad
dec
inc
stc
mov
rcrl
push
cmp
push
nop
jbe
sti
sbb
cmpsb
cmpsb
arpl
xchg
outsb
das
sti
nop
mov
les
repnz
dec
inc
ss
cltd
pop
scas
add
inc
in
xchg
mov
mov
sbb
pop
int3
adc
ss
notl
push
xor
pop
inc
stos
push
dec
fwait
lods
push
dec
cs
mov
aas
repz
arpl
or
xor
les
aaa
cmp
push
aad
hlt
dec
push
addl
mov
scas
pushf
mov
lret
cltd
out
loop
outsl
dec
xchg
adc
ret
push
ret
mov
jnp
sysexit
jns
inc
push
mov
xchg
dec
jno
mov
aam
cmp
inc
push
adc
add
fidivs
test
xlat
in
pop
cltd
sbb
push
or
cmp
cwtl
dec
mov
sub
sbb
or
jle
adc
fsubs
dec
push
sub
cmp
mov
lret
pop
mov
sahf
xor
adc
in
inc
xor
mov
loope
mov
cmp
jmp
cmc
test
ret
sbb
in
in
iret
push
pop
jle
andl
dec
mov
out
xchg
xchg
cs
sti
daa
dec
in
add
jb
xor
stos
popl
fs
movl
mov
sub
lea
pop
sbb
es
inc
xchg
cltd
xor
dec
loope
sbb
jno
sar
nop
jb
mov
pusha
out
mov
clc
loop
in
cwtl
mov
popf
rcll
mov
pop
aas
enter
dec
adc
pop
int3
dec
iret
stos
inc
xor
out
movsl
add
rclb
xor
pop
cmpsl
jge
push
pop
orb
dec
cltd
popf
adc
adc
les
test
fs
pop
and
stos
cmpsl
sub
lahf
scas
sbb
aam
add
clc
daa
inc
int3
push
mov
call
sub
out
fmul
mov
jmp
imul
fisubs
xor
xlat
mov
pop
pushf
outsl
call
add
ret
inc
sub
ds
mov
popf
and
push
push
fwait
push
bnd
and
lods
fcmovb
dec
es
arpl
mov
out
sahf
jne
xchg
pop
push
mov
mov
imul
lds
jl
push
imul
adc
add
dec
addr16
push
xor
jle
jmp
das
mov
push
jbe
fnstsw
in
sub
dec
sbb
and
add
mov
jb
fwait
cmp
outsb
jg
add
cmp
pop
cmp
sbb
push
fst
xor
jmp
mov
into
pop
push
xchg
inc
shr
jnp,pn
dec
mov
loope
and
jl
mov
sbbl
lcall
ficoms
stos
dec
out
lea
xchg
test
psllq
jl
addr16
pop
dec
not
shlb
dec
outsl
jmp
cwtl
jb
pop
sbb
jnp
cli
or
cmc
aad
jecxz
or
adc
sub
jo
aam
jmp
cmp
sbb
out
push
and
mov
mov
ret
mov
cmc
xor
jb
lds
int3
loop
push
mov
and
cmp
mov
and
push
cs
mov
repnz
mov
repz
aas
add
cmp
jb
sbb
sbb
push
jno
sub
mov
jp
out
xchg
scas
ja
fsubs
sbb
inc
adc
push
and
and
add
and
outsl
adc
outsb
rolb
sbb
je
pop
fwait
push
sbb
cmp
cmp
test
in
imul
out
dec
dec
test
jge
mov
shlb
mov
sub
lret
cli
jae
adc
arpl
xor
xor
data16
std
inc
mov
repnz
outsl
out
stos
cwtl
xor
push
lahf
cmp
shlb
aas
sbb
aas
insb
inc
inc
cs
push
xlat
in
jb
cld
jle
mov
test
lcall
test
fs
xlat
cmp
or
push
mov
lock
icebp
cmp
sub
imul
sbb
sbb
pop
shl
mov
imul
outsb
lock
in
jg
and
std
or
or
in
xchg
or
sub
and
flds
adc
mov
push
lea
mov
hlt
lret
mov
fs
and
insl
fldpi
cmpsb
xchg
sbb
jecxz
push
sysexit
mov
mov
adc
rclb
sbb
iret
xchg
gs
xor
pusha
and
jmp
mov
out
and
cmpsl
shr
shll
negl
psubusw
xchg
lea
xorl
in
imul
and
xchg
add
sahf
dec
test
mov
mov
arpl
pop
je
daa
inc
lret
fwait
test
lock
mov
in
aam
push
jmp
jno
add
dec
push
lods
add
inc
xchg
int
int3
pop
test
adc
xor
pushf
stos
jg
mov
mov
pop
or
test
cmc
dec
push
ja
mov
aaa
data16
dec
jnp
pop
xchg
sub
loope
cmp
push
cmp
aad
xchg
sarl
or
int3
jg
jle
sub
sub
icebp
or
enter
cmc
repnz
gs
icebp
push
aas
sbb
jl
adc
lret
ds
movl
idivl
dec
nop
cmpsl
rcll
bound
ror
cmp
enter
popf
jmp
xlat
jmp
sar
leave
and
int
jo
outsb
jmp
xor
xchg
xchg
bound
lea
sbb
adc
les
mov
inc
or
and
mov
add
mov
lcall
ss
mov
jbe
jne
push
jmp
adc
jg
xchg
mov
cmp
aam
cmp
dec
ret
shlb
xor
mov
inc
rcrl
lods
push
push
test
jnp
das
adc
inc
mov
mov
loop
adc
dec
pop
cs
std
cmpsl
repnz
fadds
mov
pop
adc
cld
fidivrs
sbb
push
pop
into
jns
mov
sti
mov
or
rcr
stos
mov
data16
arpl
sub
adc
out
adc
mov
and
xchg
or
xlat
push
inc
shll
stos
cli
add
aaa
dec
sub
daa
int
aad
daa
sub
or
adc
js
xorb
lock
pusha
inc
add
mov
xor
fwait
out
je
hlt
mov
push
xor
insb
cltd
jb
divl
int
mov
mov
fwait
cld
stos
int3
mov
cmp
or
sbb
insb
sbb
cmp
fstpt
in
fwait
cld
stos
int3
mov
cmp
or
sbb
insb
sbb
cmp
pop
cmp
or
pushf
or
fwait
jl
int3
cmp
dec
lods
pop
cmp
or
sbb
insb
sbb
cmp
fstpt
in
fwait
cld
stos
int3
mov
xchg
rorl
jnp
imul
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
call
pushl
call
jmp
pushl
call
call
mov
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
push
call
xor
leave
ret
pushf
or
aad
stos
jp
add
jp
xor
nop
cmp
sub
pop
lret
dec
fstpt
cli
pushf
or
fmull
pop
cld
push
pop
sbb
or
cmp
sub
pop
scas
dec
fidivrl
cli
pushf
or
fmull
pop
cld
push
jp
mov
mov
pop
mov
xchg
popl
push
jns
pop
shl
fwait
mov
imul
ss
sub
roll
scas
xchg
adc
jae
inc
inc
push
mov
pop
int3
xlat
add
add
mov
push
shrl
sub
stos
arpl
out
clc
in
mov
push
xchg
ss
mov
sub
test
out
insb
ss
xchg
insb
mov
xor
in
lcall
sarl
or
dec
cmp
or
cmp
push
aaa
and
in
mov
cmp
sbb
push
cmpsl
mov
addl
or
xchg
push
xor
add
cld
repz
mov
int3
filds
mov
ljmp
mov
dec
int3
pop
cld
push
jp
mov
cmp
sub
pop
lret
jl
insb
mov
cli
imul
mov
punpckhbw
insb
cli
imul
sbb
clc
jbe
in
pop
mov
cmp
imul
int
call
adc
dec
mov
dec
leave
inc
cltd
js
pop
cld
push
jp
mov
cmp
sub
pop
lret
jl
insb
cli
pushf
or
fmull
pop
cld
push
jp
mov
cmp
sub
pop
lret
jl
insb
cli
pushf
or
xor
inc
sar
or
icebp
xchg
push
cltd
push
roll
jns
push
push
mov
cld
sti
fldl
scas
std
mov
int3
out
xor
sbb
js
inc
lods
dec
inc
stc
insl
roll
mov
sbb
hlt
int
jb
xchg
add
xchg
scas
add
fwait
out
cmp
dec
ret
cmp
fidivrl
pop
jbe
aas
adc
movb
sub
mov
dec
data16
push
xchg
or
pop
push
rol
pop
loop
loope
repz
mov
sub
insb
loop
pop
aas
std
mov
and
sub
rclb
fwait
out
inc
mov
sub
cmp
out
bound
xor
xor
cmovbe
push
ja
xor
fnstsw
ljmp
cmp
or
pushf
jp
xor
aam
xchg
int
mov
fists
jge
in
jne
sti
inc
adc
sub
cmpb
popf
xor
dec
or
inc
inc
mov
xchg
xor
test
loop
push
adc
lret
sub
movsb
push
inc
cmp
ret
les
push
add
in
add
xor
ret
jge
push
ret
in
mov
notb
pop
in
xchg
ja
sbb
scas
lds
and
jae
in
push
pop
dec
lods
aam
ficomps
mov
xchg
fistl
mov
outsl
xchg
clc
add
imul
mov
jnp
imul
mov
push
stos
push
jp
cld
ljmp
xchg
sub
mov
mov
sbb
push
out
iret
dec
pop
outsl
xchg
cmp
xor
imul
push
dec
shlb
sbb
inc
stos
fstps
mov
add
rclb
pop
cmp
push
xor
jns
stos
test
jmp
cmp
pop
push
out
inc
adc
cs
adc
xchg
mulb
or
mov
xor
mov
mov
xchg
jbe
push
scas
cmpsb
scas
mov
and
mov
out
clc
push
test
push
xchg
mov
pop
mov
fs
jo
pusha
cld
arpl
inc
and
bound
mov
int
sbb
add
or
inc
mov
xchg
and
cmpsl
mov
lods
cmp
lds
cmp
ja
xchg
lock
push
fdiv
xor
subl
mov
call
mov
pop
icebp
mov
nop
push
pop
cmp
xor
int
sub
push
jp
add
je
xchg
sbb
stc
push
xor
mov
xor
jp
dec
push
decb
scas
addr16
fwait
push
jbe
mov
js
push
int3
ja
xor
jl
or
mov
leave
mov
xlat
out
bswap
scas
lock
outsl
mov
call
jno
mov
scas
insb
jae
adc
rorl
xor
xchg
push
add
xchg
inc
loope
push
pop
push
adc
hlt
mov
pop
cmp
fistpll
bound
shl
stos
sti
and
testb
mov
mov
mov
inc
fildll
hlt
push
nop
push
pop
mov
add
push
cmp
out
pop
add
rcrl
fwait
push
jmp
stos
insl
repnz
push
jo
movsl
inc
ja
dec
mov
pusha
icebp
sub
jbe
std
popa
fisubrs
mov
push
das
mov
jl
jmp
adc
mov
adc
push
sar
adc
mov
fwait
sub
pop
lahf
add
mov
stos
rcrb
icebp
add
repz
pop
sub
cld
sub
or
add
adc
mov
pop
les
fstps
jbe
sbb
pop
add
xor
lret
lods
mov
mov
push
fsubrp
sti
push
push
push
ljmp
dec
xchg
push
sbb
imul
out
push
xchg
sbb
or
clts
enter
loop
jns
je
push
push
pop
loop
mov
scas
lahf
and
icebp
add
pop
test
in
les
repnz
stos
testb
mov
sbb
xor
xor
imul
add
notl
nop
mov
pop
movsb
sbb
sti
sbb
xchg
cmp
mov
test
and
push
mov
fidivl
add
push
sub
dec
adc
mov
in
iret
mov
add
inc
cmpsb
pop
xor
bound
lods
mov
sbb
fxch
fs
push
mov
in
lock
jl
xchg
xchg
out
es
mov
add
cmpsb
stos
int
ja
mov
popf
or
mov
sahf
pop
xor
mov
outsl
sub
fxam
and
pop
or
rclb
lret
sub
cmc
sub
popf
sub
dec
lahf
cmp
cwtl
rcrl
fnstcw
popf
adc
mov
sub
add
mov
out
push
xchg
mov
push
cli
aas
mov
arpl
addr16
lahf
std
mov
mov
scas
pop
xor
repz
adcb
xchg
repz
or
cwtl
orb
ret
push
or
pop
cmp
sub
sbb
push
jmp
adc
mull
aam
iret
aam
jb
adc
pop
or
and
xchg
iret
aaa
orl
dec
add
js
stc
mov
push
cld
sbb
adc
aam
dec
imull
cwtl
mov
xchg
into
mov
push
in
inc
cwtl
adc
jmp
mov
push
sbb
mov
les
cs
mov
mov
fmuls
inc
cmp
cmp
int3
cwtl
popa
lods
xchg
push
inc
in
lret
pop
pop
cmc
lret
dec
push
into
push
ja
pop
fcoml
sarb
js
pop
into
cld
xor
in
fs
stos
imul
insb
lea
pop
xorl
xchg
xchg
int3
sbb
movsl
jns
mov
or
les
mov
mov
rol
inc
dec
sub
ret
push
adc
popa
and
adc
inc
movsb
test
leave
aam
dec
lret
push
inc
adc
neg
pop
aad
rolb
add
jae
adc
or
xchg
mov
test
sub
sub
add
das
das
sbb
das
mov
sbb
lds
aaa
insl
mov
xchg
int3
ja
ss
cmp
iret
dec
pop
mov
cwtl
jnp
adc
add
xor
ja
sahf
or
scas
cmc
and
in
xchg
fdivl
repz
lret
out
sti
sub
cmp
cmp
andb
jge
pop
cmp
dec
dec
xchg
xchg
scas
ret
inc
pushf
int3
pop
stc
dec
sti
loope
imul
mov
aaa
push
pop
scas
push
push
or
testb
adc
ds
rcl
jecxz
xor
ret
sahf
xchg
in
mov
fstpt
lea
mov
mov
mov
mov
mov
lret
int
and
imul
add
ret
clc
push
dec
dec
dec
out
int
shlb
dec
cmp
mov
lahf
inc
loop
popa
ss
jno
cltd
or
mov
inc
inc
and
dec
sbb
xorl
mov
test
inc
push
mov
inc
mov
adc
cld
xor
sbb
fcoms
lock
mov
cwtl
mov
repz
inc
or
jmp
ja
out
xor
scas
imul
inc
fildl
and
fdivrs
das
mov
mov
lret
sahf
mov
xor
fsubs
add
imul
scas
data16
mov
mov
mov
push
stos
movsb
jns
add
loope
lods
fisubrl
enter
or
cmc
or
fidivs
movsl
mov
and
insb
push
gs
sbb
bound
mov
repz
mov
shlb
sbb
imul
cs
and
xorl
cltd
aad
sbb
mov
mov
shlb
pushf
or
dec
dec
hlt
aaa
jno
sbbb
adc
or
sub
sahf
fwait
inc
xor
les
lahf
or
stos
sub
add
push
mov
insl
insb
mov
das
test
aad
sub
test
aam
adc
lret
mov
mov
pop
dec
mov
and
scas
mov
das
dec
icebp
add
xchg
jmp
push
shrb
ja
test
sbb
mov
daa
shl
xchg
js
scas
mov
fsubrl
std
or
out
cltd
or
loope
sub
cmpsb
pop
sarl
test
pop
add
fistpl
in
or
mov
dec
mov
sahf
xor
push
fdivr
jmp
adc
jmp
scas
add
push
jp
out
mov
xchg
into
and
inc
cmp
mov
push
rol
pusha
in
roll
lcall
xchg
cmp
xor
mov
das
test
jl
sub
hlt
mov
push
std
stos
dec
nop
sub
fildl
xchg
frstpm(287
xorps
fiadds
testl
mov
daa
sub
dec
inc
mov
shl
jmp
cmp
stos
fisubrs
outsb
push
push
mov
jne
xor
adc
icebp
xchg
sti
dec
add
andl
mov
rcll
pop
cmp
dec
bound
call
and
inc
push
mov
shlb
xchg
cwtl
cmp
fldl
cltd
mov
and
inc
adc
pusha
xchg
pop
cmp
mov
push
inc
icebp
inc
xor
leave
ss
inc
mov
mov
xchg
mov
arpl
xchg
enter
sub
cmp
jg
inc
pop
pextrw
test
mov
adc
push
lods
dec
jae
pop
cmp
js
cmc
fdivrs
incb
test
dec
pop
cs
jno
popf
adc
mov
add
std
loop
mov
outsl
pop
loopne
add
mov
addr16
aas
sarl
pusha
sbb
fsubrl
dec
mov
mov
pop
ja
push
clc
cmc
mov
or
sbb
jb
mov
hlt
test
lret
push
int
add
push
mov
fistpl
dec
mull
pop
stc
es
ja
lds
jnp
xchg
ljmp
sbb
int3
pushf
xchg
aas
add
sti
out
stos
and
addr16
sbb
mov
adc
sub
pop
push
popa
mov
aas
xor
das
movsb
std
xor
adc
pusha
int3
scas
add
sub
les
or
push
fldenv
jle
test
shll
mov
lret
mov
insb
pop
dec
aas
xor
mov
in
mov
dec
jg
or
jns
pop
cwtl
push
fidivrs
scas
push
shll
xchg
out
mov
add
gs
lcall
inc
popf
jmp
sbb
add
dec
xor
adc
je
in
mov
or
ljmp
push
gs
fs
jp
cltd
cmp
and
mov
jno
or
push
pop
daa
insl
addb
mov
jne
inc
repnz
cmp
add
ds
push
push
cmp
ds
sti
pop
cmp
pop
xor
aas
cmp
add
jl
shlb
mov
mov
jns
inc
sbb
adc
jmp
jecxz
pop
dec
aaa
xchg
sahf
inc
rol
bound
pushf
stos
or
lea
stos
pop
mov
sub
popa
rcrb
iret
cmc
push
sub
jae
xchg
dec
imul
add
jg
sub
sti
shrl
sub
or
and
lds
int
push
mov
sbbl
and
data16
imulb
mov
add
push
sub
push
pop
data16
imul
add
cld
cmp
mov
jnp
enter
xchg
sub
push
pop
jb
sbb
bound
add
adc
shll
fldt
call
scas
sbb
mov
xchg
xchg
addr16
jle
movsl
imul
sub
lods
movl
inc
push
mov
repz
pop
and
adc
push
lcall
or
sbb
dec
mov
jmp
mov
mov
in
sub
jnp
mov
lods
add
or
sub
shrb
and
xchg
pushf
inc
cmc
lret
dec
cmc
mov
and
fwait
xchg
shr
xchg
push
push
jl
std
sub
outsl
jo
rcl
jecxz
or
lea
sub
mov
lret
jno
dec
inc
or
push
jmp
xor
and
loope
test
test
mov
sub
xchg
cmp
ret
aam
and
jne
mov
jmp
test
orl
cmp
or
movsl
pop
lahf
call
in
xorl
out
cmp
insl
ja,pn
mov
or
and
je
or
repnz
imul
mov
test
daa
subl
iret
aam
push
mov
mov
mov
in
adc
shl
enter
and
stos
cmpb
add
sub
shll
clc
or
lods
jg
iret
add
push
xchg
mov
pop
repz
out
cmp
pop
ror
xor
add
dec
idivl
push
mov
repz
leave
or
xor
xchg
mov
pop
adcb
ja
add
pop
push
pop
fucom
int3
sub
push
push
cmpsl
pop
rorl
cli
fimuls
add
xchg
xor
adc
or
push
shll
mull
sbb
cld
pop
fidivs
inc
and
push
sub
pusha
testl
aad
push
fiaddl
stos
xor
cltd
sbb
notl
test
mov
mov
icebp
call
in
outsb
fcomip
frstor
jns
push
add
xor
fsubs
xchg
adc
adc
icebp
sub
inc
popf
imul
fsubs
xchg
mov
inc
sub
dec
jl
add
xchg
stos
mov
fsubrp
cld
mov
int3
xchg
int3
fisubl
int
sub
out
ficompl
inc
mov
out
push
js
add
xor
negl
sbb
mov
jns
aad
enter
xchg
scas
sub
jbe
pop
mov
mov
imul
xchg
add
loopne
mov
adc
jno
pop
out
adc
dec
scas
rol
xchg
push
addl
jno
jnp
xchg
das
cmp
adc
add
jg
icebp
stos
or
rolb
mov
lods
sub
fdivrl
shrl
int
or
hlt
pop
aad
xlat
dec
daa
mov
shll
fbstp
and
rcll
outsl
and
mov
jne
jno
pop
push
in
test
jge
scas
pushf
mov
ljmp
xlat
jecxz
lods
sbb
and
lret
lahf
insb
xor
sub
daa
cli
mov
fstps
push
cli
or
insl
inc
in
and
add
test
xlat
pop
push
enter
stos
repz
jne
daa
dec
jl
outsl
gs
insl
and
loopne
sub
xor
mov
call
inc
jmp
jl
or
add
ficompl
adc
int
es
in
mov
clc
ja
and
pop
push
add
mov
or
rcr
and
das
mov
dec
lret
inc
mov
lret
aam
push
fadds
cmpsl
ljmp
icebp
push
test
mov
iret
xor
push
mov
int3
sbb
cwtl
jne
ss
fsubrl
and
mov
test
subb
jge
xchg
mov
stc
inc
push
mov
pushl
xlat
and
jg
out
and
fidivl
icebp
cli
pushf
out
mov
inc
addb
outsl
push
adc
pop
in
or
cmp
adc
and
cld
int3
out
mov
jle
jno
jecxz
stc
or
mov
jne
shll
and
push
dec
lods
int3
push
sub
pop
push
inc
and
pop
ficompl
cmp
sbb
jecxz
xor
mov
dec
xlat
mov
mov
or
mov
mov
mov
out
push
cmp
sar
stc
or
mov
fsts
jge
xor
fwait
popa
sub
mov
and
push
iret
daa
or
mov
divl
and
sub
pushl
nop
mov
sub
enter
xchg
in
add
add
xchg
xchg
negl
jg
fwait
insl
push
arpl
std
sahf
jge
mov
xchg
and
gs
jg
or
sub
cli
adc
add
ljmp
add
popfw
dec
jp
mov
sbb
sub
adc
mov
sti
mov
cmpsb
std
cmpsb
jg
fstpl
sbb
stc
dec
out
fwait
lea
cmpsb
push
enter
daa
lods
jno
xchg
imul
stos
or
sbbl
dec
adc
mov
sub
or
or
xchg
mov
adc
mov
cmp
sar
out
cwtl
loop
pop
loope
into
add
push
jecxz
inc
mov
jg
pop
cmp
jl
xchg
xor
adc
sub
dec
rorb
cld
es
int3
sahf
test
sbb
xchg
leave
ret
jbe
shll
sbb
jno
fdivrl
inc
pushf
lea
out
shll
add
jg
in
out
dec
fstpt
xlat
aas
lock
mov
mov
jge
rcll
push
subb
in
add
pop
jno
jo
mov
es
cmc
aaa
sub
iret
mov
js
xor
add
push
xchg
and
push
lods
and
loopne
lcall
and
ficoml
nop
dec
mov
cmp
inc
rcll
cmp
leave
xor
push
jb
lret
testb
imul
xorl
out
sbbb
out
mov
or
sbb
add
cmp
pop
pop
sahf
stc
push
dec
cmpsl
aaa
dec
shrb
icebp
pop
xor
mov
add
jo
xor
xchg
scas
inc
jb
xchg
add
in
out
mov
sti
rclb
and
pusha
ljmp
mov
leave
andl
inc
fwait
mov
popf
fcomps
sbb
push
inc
outsb
in
xchg
push
pusha
lds
push
pop
mov
sbb
mov
cmp
movsb
loopne
xor
ret
mov
pop
sbb
pop
fistpl
sbb
or
sti
mov
xor
mov
sbb
in
inc
mov
dec
lret
andl
sbb
fisttpl
sar
adc
stos
pop
push
and
repnz
cltd
clc
push
mov
push
or
sub
xorl
mov
mov
std
in
xchg
in
mov
pop
dec
loop
jmp
notl
cmp
into
mov
dec
popf
dec
push
call
stos
movsl
cli
sbb
pusha
jmp
pop
pusha
jnp
xchg
and
xchg
sbb
in
pop
sbb
lcall
xlat
aas
sbb
loope
mov
xchg
mov
loope
lahf
loope
or
cs
dec
stos
leave
lahf
sub
movsl
testl
gs
mov
je
js
ds
lods
rcrb
addr16
in
pop
cmp
pop
jg
push
mov
add
les
mov
gs
out
enter
mov
mov
mov
dec
sbb
mov
ficoms
fwait
mov
popa
sbb
and
mov
mov
ret
stc
pop
adc
sub
test
nop
cmc
inc
fcmove
and
or
popf
pop
ss
jno
mov
testb
fimull
imul
dec
outsb
pop
push
sbb
into
mov
pop
lods
clc
arpl
mov
pop
int3
test
add
xchg
push
ret
aas
xor
or
cmp
push
jbe
das
mov
mov
dec
arpl
jo
push
and
std
sbb
xorl
xchg
or
jb
sub
ficomps
pop
mov
or
adc
idivl
dec
add
cmc
aaa
lret
pop
cmp
mov
push
inc
cmc
js
ja
addb
lret
push
sub
fdiv
dec
jge
dec
xchg
je
negb
cli
test
dec
fisttps
xchg
aas
mov
cmp
dec
int3
pop
cld
push
jp
mov
cmp
sub
pop
lret
jl
insb
cli
pushf
or
fmull
pop
cld
push
jp
mov
cmp
sub
pop
lret
jl
insb
cli
pushf
or
fmull
pop
cld
push
jp
mov
cmp
sub
fidivrl
insb
cli
pushf
or
fmull
pop
jl
insb
mov
xchg
stos
sub
sub
and
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
leave
loopne
lock
mov
rcl
mov
add
inc
add
and
xor
arpl
test
xor
shlb
repz
sbb
jo
inc
loope
push
dec
inc
xor
arpl
mov
lcall
mov
hlt
nop
adc
push
pop
xor
jl
push
add
arpl
xchg
cmpl
cmpb
rorb
sbb
cmp
cli
mov
sub
gs
dec
xchg
mov
js
pushf
mov
adc
cmp
add
cld
int3
push
cs
and
lahf
add
inc
push
loopne
std
cli
stos
popa
popf
test
xor
jae
lds
ss
std
arpl
faddl
lods
xor
movsb
test
movsl
xchg
aam
call
mov
ljmp
xor
jg
and
into
xor
mov
jae
jl
ljmp
cmp
ljmp
es
inc
xor
add
jge
shrb
nop
outsb
mov
enter
cld
and
mov
push
arpl
loopne
lock
mov
ret
mov
cli
nop
or
jo
inc
cmp
and
jae
jp
loopne
out
rol
mov
scas
fyl2x
mov
sbb
jno
and
daa
push
push
jns
pop
xchg
test
shlb
jmp
add
jbe
push
xor
add
jg
movsb
mov
mov
mov
mov
mov
and
adc
jo
inc
and
and
jae
arpl
xchg
loopne
lock
mov
mov
and
adc
jo
inc
and
and
jae
arpl
xchg
loopne
cwtl
ljmp
sub
adc
sbb
imul
cmp
xchg
insb
in
inc
loope
adc
out
sub
lcall
lock
mov
imul
pushf
sbb
mov
mov
mov
cmp
fdiv
adc
cmp
jmp
js
inc
jo
out
ret
shl
cmp
push
dec
xlat
test
push
xor
and
mov
es
push
scas
outsb
nop
subb
push
jg
test
and
cmpsl
adc
call
pop
jo
mov
jl
mov
cwtl
xchg
fadd
call
scas
loope
adc
jo
dec
fldcw
rorl
mov
push
fwait
xor
adcb
je
loope
ficoms
or
sarb
into
test
mov
iret
push
loop
cwtl
iret
cmc
sahf
dec
cmp
inc
js
cmc
push
stos
rorb
dec
popf
sti
cld
xchg
xchg
mov
dec
stc
sub
cmpsl
shl
jne
stos
in
in
push
jno
pop
popf
out
arpl
adc
xor
cld
pop
adc
out
fcmovnb
hlt
dec
push
movsl
add
sbb
test
aad
adc
mov
arpl
lock
jns
sub
mov
mov
add
sub
aas
fwait
pusha
cmp
or
push
sti
mov
push
xchg
ret
xor
mov
push
rcr
das
dec
dec
arpl
hlt
je
mov
bnd
out
add
test
sbb
sub
ja
adc
xor
and
dec
fwait
pop
jae
loopne
push
dec
shl
daa
out
add
cmp
out
dec
test
pushf
mov
imul
xor
sub
out
or
pop
push
testb
hlt
mov
jno
fsubl
mov
add
loop
add
fcoml
mov
inc
xor
pop
movsl
dec
flds
xor
inc
or
add
jle
inc
popf
inc
inc
cs
aad
cmpsb
scas
bound
ljmp
mov
adc
xchg
xchg
adc
sub
cld
push
pop
sbb
sub
aam
lea
ficompl
adc
sti
fsubr
sbb
js
imul
pop
mov
jge
test
mov
xor
lods
in
push
cmpsb
cmpsb
mov
ja
add
lock
jo
push
xor
insl
ret
nop
mov
adc
push
dec
adc
in
pop
dec
mov
and
cmp
mov
popa
jmp
add
mov
movsl
xchg
lds
les
loopne
and
into
notb
dec
dec
xor
test
cmp
xor
and
call
out
frstor
stos
shrb
pop
mov
stc
mov
adcb
loop
mov
pop
leave
mov
push
gs
or
arpl
push
in
nop
mov
jmp
push
cmp
inc
stos
stc
sub
addr16
mov
test
mov
loope
xchg
cs
mov
imull
jae
or
scas
cmp
mov
cltd
or
iret
push
test
aad
popf
push
push
shrl
sub
sarb
inc
sub
pop
push
repnz
push
mov
ror
mov
mov
data16
xchg
jecxz
or
jmp
test
push
xlat
test
arpl
test
popf
mov
ljmp
outsl
fcmovbe
mov
dec
fmuls
mov
sub
or
xchg
mov
jge
jge
mov
fisubl
incl
aas
je
or
lea
pushf
in
cwtl
xor
sbb
or
pop
into
and
add
sbbl
mov
test
cmc
loopne
push
outsb
leave
sub
js
insl
iret
std
adc
add
test
data16
mov
jb
insl
dec
scas
sub
cmp
adc
or
xchg
xor
loope
sbb
sbb
push
push
shrl
jns
push
outsl
sbb
stos
xlat
push
dec
adc
loopne
ljmp
add
xor
jmp
lahf
dec
sbb
jns
lods
std
les
pop
stos
push
sahf
pop
jae,pn
mov
fisubrs
jecxz
mov
jns
sbb
mov
xchg
inc
fstp
arpl
push
aaa
mov
and
mov
mov
sub
ljmp
imul
addr16
push
mov
repz
adc
andl
xlat
rcr
in
add
push
icebp
mov
cmp
cmp
movsb
cmpsl
nop
cmp
pop
insb
lods
stos
iret
leave
outsl
mov
or
imull
lods
loope
jbe
pushf
add
cmc
xchg
push
ljmp
inc
test
bound
out
cmp
push
dec
add
or
xchg
jns
sbb
mov
push
pop
push
push
sub
arpl
dec
test
pop
xor
xlat
push
xchg
or
sub
lcall
sub
sub
mov
and
cmp
xchg
fimuls
pop
leave
jge
push
fs
jecxz
jmp
sub
outsb
iret
ss
rcrl
inc
cld
sti
pop
enter
scas
mov
cmc
mov
js
sbb
ret
fcomps
inc
xlat
cli
aam
mov
jbe
and
pop
jp
int3
mov
jns
and
xchg
pop
push
fdivrl
cwtl
movsb
sbb
shr
mov
push
dec
mov
pop
xor
mov
mov
bnd
insl
iret
jge
xchg
cmp
loope
sub
push
mov
cmp
mov
sbb
imul
loope
mov
adc
cmp
cmp
jbe
aas
sbb
adc
xchg
push
movsb
in
jbe
pushf
iret
cmc
int3
sbb
jg
or
test
lock
dec
out
xor
xor
daa
xor
xchg
pop
push
fs
outsb
nop
fcoms
fildll
pushf
ficoml
fimuls
movsl
lret
mov
cmp
xchg
pop
or
shrb
inc
sub
push
enter
sub
fsubl
daa
dec
push
lods
cltd
mov
dec
pop
push
inc
inc
dec
nop
and
ss
dec
fmuls
lret
cmp
jecxz
mov
sbb
loop
mov
pop
xchg
dec
je
movsb
xcrypt-ofb
cmpsl
in
xor
and
fistpll
dec
add
dec
or
pop
cmpsb
int3
dec
inc
xor
inc
adc
cmp
nop
jle
sbb
inc
loop
pop
cmp
push
lahf
push
pop
iret
mov
or
push
push
mov
jb
jge
sbb
jecxz
std
push
and
adc
lret
test
and
jle
clc
push
sub
and
int3
das
das
jp
nop
sarl
dec
in
rcl
push
push
stos
push
shlb
adc
mov
xchg
fstl
xchg
gs
dec
and
leave
push
icebp
outsl
fidivl
dec
xor
stc
cld
aam
mov
cmp
ljmp
loop
dec
lcall
arpl
cld
push
or
ret
lea
out
fwait
or
inc
lods
lea
and
fcompl
adc
mov
aam
push
mov
jne
into
mov
and
addr16
mov
mov
jbe
sub
jmp
rcrl
mov
out
ja
adc
and
or
test
pop
testb
mov
pop
orl
bound
mov
cs
data16
out
and
lahf
lahf
popf
adc
clc
and
je
lcall
dec
in
cmp
clc
cli
sbb
mov
pop
xor
adc
add
aam
ljmp
dec
test
adc
push
push
inc
neg
lds
mov
cmp
inc
push
push
das
push
lea
or
lods
inc
xchg
fsubrl
test
push
outsb
fisubrl
sub
xchg
movsl
or
mov
mov
jo
inc
js
and
out
mov
or
inc
push
add
scas
scas
xchg
or
xchg
cmp
jno
fs
sbb
stc
mov
cmc
popf
and
jbe
mov
stos
cmp
mov
rcl
jmp
scas
sub
sbb
xchg
aaa
and
daa
das
or
negl
mov
ds
dec
and
pop
sbbb
lds
mov
loopne
jle
dec
cmp
pop
pushl
xchg
dec
aaa
ds
popf
loope
ret
jge
xor
or
lods
ds
movsl
jae
sti
jne
out
loopne
cmpb
outsb
mov
jb
sbb
sbb
dec
inc
dec
hlt
loop
xor
jg
inc
lret
fsub
std
lock
sbb
loopne
lcall
ss
mov
in
sub
aaa
aad
sbb
sbb
push
push
int3
bt
adc
fwait
sbb
xchg
insb
movsb
or
sbb
pop
and
cmp
lret
test
dec
lods
test
fadds
add
das
lret
push
cmp
lock
hlt
popa
sub
mov
adc
mov
or
insb
mov
and
lahf
popf
inc
push
arpl
push
ret
cmp
or
mov
pop
mov
sub
cmc
mov
mov
mov
xchg
test
leave
test
aas
into
mov
insl
mov
jo
cwtl
aad
mov
inc
arpl
jl
into
ret
adc
jmp
fcmovb
cmpsl
pop
cltd
ret
roll
adc
lea
sub
xlat
push
movb
test
push
pop
dec
int
ja
popa
in
push
mov
insl
mov
lods
mov
push
xchg
enter
ret
push
inc
jnp
test
popf
jmp
sbb
cmpl
out
scas
cmp
daa
jo
xchg
movsl
pop
jmp
cmp
aad
lcall
jge
in
adc
rorl
push
repnz
sub
push
mov
mov
test
inc
mov
sub
sarb
push
sbbl
insb
or
sub
leave
ds
and
push
mov
or
and
mov
movsl
into
fwait
xor
int3
js
mov
mov
xchg
dec
aas
or
mov
cs
jp
xor
add
adc
add
movsl
iret
loopne
push
cld
mov
sahf
dec
adc
push
call
in
jle
jno
pop
aaa
inc
push
xchg
sub
sbb
pop
cltd
js
cwtl
idivl
xchg
mov
scas
lahf
mul
and
sub
dec
inc
in
mov
mov
loopne
pop
push
dec
lods
shrl
xor
mov
inc
jne
jecxz
push
ret
in
out
cld
mov
icebp
sahf
sub
jae
in
rcrb
inc
clc
jbe
sub
xlat
or
std
fidivl
xlat
jae
mov
mov
xchg
xor
adc
push
inc
jg
pop
loope
es
dec
inc
stos
mov
sbb
fdiv
sbb
xchg
dec
mov
pop
mov
add
jecxz
jp
mov
push
int3
aam
xor
out
xchg
mov
cld
push
adc
or
dec
imul
sbb
test
fwait
push
xchg
nop
xchg
or
aas
mov
enter
xchg
fdivr
sbb
or
mov
mov
in
jl
inc
sbb
adc
inc
sub
aas
insb
pushf
or
add
and
out
or
dec
pop
adc
fisubs
jmp
ja
jg
xchg
pop
lcall
dec
inc
adc
sbbl
or
notb
sbb
dec
cmp
mov
jecxz
mov
sub
cld
mov
cli
out
lret
add
mov
or
lods
cli
les
jne
std
iret
pop
icebp
adc
in
int3
cld
xchg
inc
xor
lock
jl
jle,pt
iret
pop
addr16
lods
sub
adc
outsb
xor
insl
ss
xchg
out
repz
jecxz
lock
into
divl
cmp
push
sub
insl
ret
push
insl
outsl
aam
lahf
js
add
aam
inc
aas
sub
inc
in
lret
sar
xchg
roll
adc
lods
movsl
leave
es
pop
cmp
xchg
repz
les
clc
divl
test
dec
push
adcl
jle
cwtl
dec
fsubl
xor
dec
jo
mov
or
jbe
jo
push
std
filds
je
pop
cmp
pop
sub
fsubr
loope
sub
xchg
cmp
rclb
add
add
scas
repz
adc
xchg
cltd
add
adc
inc
lds
xlat
outsl
mov
jecxz
push
jnp
lahf
ljmp
das
aas
aam
mov
sbb
arpl
add
xchg
push
push
inc
sahf
mov
add
stos
fsubl
in
push
repnz
out
stos
fmuls
divl
mov
fadds
cmp
cmpsb
mov
pop
xlat
in
push
add
push
xor
shll
jns
fildll
or
xchg
movl
cmp
addb
sbb
inc
xchg
mov
loopne
cmp
pop
xlat
push
inc
xlat
push
std
cmpsb
repz
jb
jl
in
adc
fs
jb
call
xchg
and
cli
mov
dec
jmp
mov
cltd
xor
jl
adc
inc
out
inc
mov
loop
add
outsb
jl
popw
adc
leave
jnp
das
lods
mov
lret
and
sub
pop
mov
mov
and
das
mov
push
add
neg
loopne
xchg
xor
insb
jo
cltd
in
repnz
jno
stos
insl
daa
xor
push
shrl
test
mov
mov
and
sar
je
pop
jae
outsl
jg
adc
cmp
test
mov
lret
push
pop
loopne
mov
xchg
aam
or
in
ljmp
lock
inc
pop
push
imulb
push
hlt
mov
inc
arpl
pusha
jb
int
xor
jle
mov
mov
dec
sbb
in
jo
lods
or
push
insl
nop
xchg
push
shlb
cs
mov
aam
push
icebp
pop
pop
bound
inc
into
cmpsl
les
mul
jle
sbb
push
hlt
adc
rol
pop
adc
hlt
pop
mov
pop
adc
outsb
insl
data16
out
les
pushl
int
sbb
iret
sarl
cmp
inc
daa
cld
test
shl
mov
jbe
psrlw
int
adc
add
imul
ss
in
mov
and
fdivs
push
mov
mov
dec
jbe
lds
cmp
imul
popw
xchg
loopne
sbb
mov
push
jno
adc
outsl
push
pop
inc
ret
adc
adc
mov
push
pushf
push
or
or
inc
xor
pop
push
fmull
sub
push
enter
add
ret
cmp
insb
sbb
adc
fcompl
mov
pop
xchg
out
ja
dec
mov
in
xchg
sbb
mov
rorb
xchg
fs
loopne
mov
js
mov
gs
add
out
stos
adc
mov
or
movsl
inc
test
xor
daa
data16
or
aas
rol
pop
shl
aaa
push
loopne
addr16
mov
js
pop
cmp
sub
mov
xor
xchg
pop
sti
out
sub
bound
or
xchg
nop
push
jae
xchg
popf
dec
mov
gs
inc
out
sub
lds
mov
mov
cmp
lcall
aad
mov
mov
add
data16
jb
mov
adc
stos
mov
movsl
xor
xchg
test
out
dec
jle
cmp
ja
mov
sub
jle
addl
and
mov
icebp
sbb
or
and
pop
xchg
xor
out
jl
lock
lea
in
mov
xor
mov
mov
sbb
cld
in
out
jne
sbb
mov
sub
sbb
inc
push
lcall
cmp
je
daa
enter
aas
xor
mov
aaa
cmp
and
sahf
push
outsl
sbb
clc
or
mov
jns
cli
push
mov
fs
push
xchg
xor
sbb
add
mov
sbb
and
pop
jae
jle
stc
xchg
movsl
cmp
cmpb
cmp
mov
add
mov
ljmp
jns
xchg
jg
bnd
clc
ja,pt
mov
adc
pop
mov
push
es
push
pushf
shlb
or
dec
xchg
test
mov
rol
jg
xchg
fwait
xchg
iret
dec
cli
test
leave
std
mov
xor
jle
pop
and
mov
je
int
adc
mov
movsl
aas
xchg
jp
in
xchg
mov
lar
or
or
daa
addr16
cs
add
inc
inc
xchg
out
ja
shlb
fmull
mov
or
aam
adc
dec
fs
inc
movsl
adc
xchg
mov
xor
lcall
into
pop
jle
cmp
insl
imul
mov
popf
mov
cmp
fisttps
xchg
shlb
push
dec
cmpsl
pop
inc
sar
pop
xor
test
mov
test
popf
pop
in
jbe
or
scas
cmpsb
fnstenv
icebp
fcomi
xor
push
or
push
mov
xchg
push
js
jp
out
lock
fbld
int3
mov
dec
push
cmp
inc
jbe
xor
imul
sub
push
sub
cmp
adc
and
enter
iret
ret
inc
or
out
rcrb
test
sub
ljmp
fnstsw
icebp
test
shlb
mov
cmp
je
pusha
lcall
insl
test
in
mov
ja
enter
mov
out
mov
mov
xchg
xlat
xor
lods
pop
lods
push
cli
xchg
call
inc
std
sarb
push
enter
add
push
sub
cmpsb
out
test
ds
rcl
lahf
and
or
and
mov
sub
add
mov
and
or
loop
icebp
fsubrs
adc
jnp
aam
pop
xor
sbb
out
add
int3
pop
stc
or
notb
out
fisttps
scas
xchg
aam
mov
jae
ds
ja
cmc
pop
pop
push
inc
fwait
cmp
or
and
mov
sub
or
shlb
clc
dec
andb
orl
aad
sarb
mov
mov
ds
out
repz
dec
pop
lcall
outsl
pop
mov
stc
jns
es
in
test
scas
or
adc
pusha
xchg
xor
or
gs
and
stc
fldt
sbb
insb
mov
mov
cmc
fidivl
out
mov
popf
sbb
xor
xlat
push
subl
call
jo
mov
into
mov
pop
ret
mov
jl
test
inc
mov
xor
test
insb
xchg
and
mov
xchg
ret
cltd
xchg
jmp
dec
inc
cmp
mov
popf
movsl
popa
mov
push
xchg
xchg
aas
mov
rorl
cmp
add
inc
add
and
fldl2t
movsb
pusha
jmp
xchg
or
outsb
push
and
sbb
scas
inc
daa
push
popf
add
insb
lds
fld
mov
xor
in
idiv
out
sahf
arpl
test
adc
das
jno
ljmp
ret
mov
pushf
cli
in
sub
jnp
push
xchg
lods
xchg
fldcw
push
mov
add
cmp
int3
clc
dec
mov
je
mov
scas
push
sti
add
mov
pop
adc
mov
mov
mov
dec
mov
pop
in
ret
or
rcrb
cmp
sbb
pop
mov
and
sub
or
movsl
pop
sub
dec
cltd
inc
push
jmp
cmp
out
or
jmp
fsts
inc
mov
call
andl
notl
sub
inc
fdivrp
push
cmp
push
dec
repz
push
fistpl
clc
sbb
jmp
or
ds
inc
mov
pop
mov
mov
daa
ret
dec
loopne
add
mov
outsb
mov
dec
orl
or
aad
xchg
or
mov
inc
xchg
cmp
ret
andl
jl
dec
mov
push
in
mov
dec
adc
inc
push
cmp
out
shrl
lds
imul
repz
cmpsb
ss
mov
adc
out
fsub
xchg
pop
sbb
fildl
add
in
pop
and
jmp
cmp
dec
int
inc
mov
test
dec
inc
push
mov
loopne
icebp
xor
fwait
push
in
fisttpl
sub
subb
sub
lds
add
loope
imul
adc
xor
add
jp
in
mov
push
lods
push
push
icebp
ror
stos
cmp
fstpt
pusha
repnz
dec
jo
call
cmp
pop
je
mov
ret
xor
or
or
sti
cmp
jecxz
in
cmp
pusha
sub
adc
add
or
shl
mov
neg
aad
scas
scas
adc
orl
rorb
lock
shlb
repz
adc
jo
inc
and
and
jae
arpl
xchg
loopne
lock
mov
mov
and
adc
jo
inc
and
and
jae
arpl
xchg
loopne
lock
mov
mov
and
adc
jo
inc
and
and
jae
push
adc
shlb
jae
arpl
cltd
inc
and
and
lret
iret
mov
pushf
out
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
push
call
mov
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
outsl
clc
add
pop
clc
add
push
clc
add
dec
clc
add
inc
clc
add
cmp
add
xor
add
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
nop
clc
add
pushf
clc
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sub
add
dec
stc
add
jo
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
stc
add
int3
stc
add
aam
add
fdivr
add
in
add
in
stc
add
hlt
stc
add
pop
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
add
sub
add
cmp
add
dec
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
