mov
movl
dec
pop
mov
sub
cmp
push
mov
mov
push
aaa
je
test
je
and
je
pop
or
pop
add
ret
popa
jnp
mov
pop
xor
pop
je
pop
mov
push
mov
inc
or
rorb
or
dec
adc
push
lahf
mov
and
or
adc
sbb
sub
fnsave
je
dec
mov
mov
lret
inc
sbb
or
sbb
mov
or
xor
pushl
cld
int3
lcall
push
push
pop
mov
mov
and
shr
lea
inc
cmp
addb
jb
pop
pop
testb
into
push
call
or
jne
into
sbb
cmp
add
cld
jbe
add
jmp
fdivs
and
pop
pop
pop
mov
or
or
leave
ja
sub
je
testb
add
cld
mulb
fs
jle
and
add
xlat
in
rcrl
inc
add
sti
pop
clc
mov
cmpsl
xor
in
jo
dec
or
add
xchg
fmul
lock
mov
mov
mov
scas
xor
sbb
sbb
xchg
out
lcall
lock
cs
dec
xor
out
and
sbb
and
lea
and
ljmp
push
mov
aam
dec
mov
push
xchg
shll
sub
pop
out
mov
loop
lea
mov
shr
mov
mov
shr
xor
jae
out
mov
shlb
adc
iret
adc
adc
adc
repnz
adc
adc
repz
push
adc
and
push
sbb
jns
std
cmp
sbb
and
xor
sbb
xchg
cmp
sbb
sbb
sbb
repz
repnz
es
xor
sbb
pop
sub
out
sbb
sub
loope
add
roll
addb
frstor
jl
dec
mov
jne
ret
pop
mov
les
loopne
push
push
pushf
ss
jge
xor
mov
imul
sub
adcb
and
cs
mov
xor
xchg
push
inc
xor
arpl
pop
lea
adc
test
mov
mov
mov
mov
xor
addb
mov
mov
mov
nop
aas
push
ss
push
push
andb
xchg
jne
pop
push
pop
fcmovnb
pusha
idivb
pop
out
push
arpl
out
dec
xor
imul
nop
sahf
sbb
lcall
sbb
dec
imul
cmpsb
sub
add
adc
leave
loopne
pop
rcrl
clc
incl
or
orl
mov
jmp
sahf
push
adc
pusha
test
dec
push
sbb
mov
call
jo
das
or
pusha
xchg
pusha
pop
out
sbb
push
jmp
mov
fs
adc
sbb
mov
das
lea
mov
inc
shl
aad
shrl
cli
bnd
call
into
sub
call
sbb
data16
push
sbb
or
xor
inc
mov
cld
aaa
clc
jle
dec
mov
jne
dec
mov
cmp
jge
mov
sbb
sub
add
mov
and
or
cmp
fistps
inc
xor
in
cli
sbb
sbb
mov
loope
mov
sub
or
xchg
xchg
andb
and
push
orb
decl
rol
add
movsl
mov
mov
and
rep
lea
add
mov
mov
icebp
fcompl
call
inc
stos
sarb
stos
xchg
adc
pop
add
push
lcall
into
and
mov
push
add
jo
sub
xor
add
pop
mov
add
inc
jne,pt
cli
rorb
xchg
sbb
lret
push
push
jns
out
in
lock
pop
shrb
sahf
in
cmp
inc
or
dec
adc
ret
mov
sub
and
mov
jbe
nop
cmp
imul
pop
dec
add
add
adc
xor
shll
and
sub
xor
shll
xor
mov
add
inc
adc
and
jl
jle
rol
ljmp
push
dec
shr
mov
rcll
and
xor
iret
sbb
sbb
cmp
repnz
sbb
xor
iret
sbbb
enter
sbb
mov
fiadds
xchg
in
nop
and
and
lret
in
mov
aaa
shrl
sbb
sub
mov
pop
dec
sub
lods
cmp
outsb
and
or
lock
add
mov
clc
cmp
fwait
cmp
fiaddl
shll
jl
psrlq
mov
loope
into
pop
mov
lds
rorl
adc
imul
push
icebp
test
push
mov
pop
popa
icebp
sub
insb
inc
dec
ds
push
in
mov
and
sub
lds
xlat
jmp
sbb
or
aad
jle
lock
and
push
xor
mov
mov
mov
mov
push
lcall
out
add
repz
roll
pop
shl
ja
icebp
push
int
push
pop
sbb
lds
pop
shll
sub
cltd
out
movsb
sub
mov
push
dec
out
iret
xor
add
mov
je
out
fnsetpm(287
sti
mov
pop
rolb
jns
dec
or
inc
insl
stc
sub
sub
inc
mov
data16
or
push
mov
std
jnp
dec
lea
push
in
stos
mov
jbe
rorb
sub
pop
jle
popa
cmp
push
push
int
out
lock
jge
cmp
iret
mov
xor
mov
fisttpll
sbb
nop
mov
aad
in
loopne
mov
jns
pusha
cmp
inc
or
cmp
clc
jo
add
add
inc
pusha
stos
adc
xchg
push
repz
test
sub
mov
lock
cltd
xor
xor
add
iret
shll
ljmp
pop
jle
cmp
jg
mov
mov
sub
pop
je
das
xchg
cmp
jne
add
mov
into
mov
ja
lea
jmp
pop
lea
pushf
adc
sbb
or
or
dec
jne
and
bound
fwait
das
rol
jl
loopne
cs
fcmovu
popa
add
cwtl
insb
fcmovnbe
pop
add
sub
xchg
sar
or
pop
push
cmp
push
cmp
jle
cltd
cmp
push
mov
add
mov
push
push
or
cmp
mov
cmp
ja
cmp
jge
jo
sbb
add
cld
imulb
cmp
lock
add
inc
xor
out
neg
std
jne
mov
add
inc
mov
mov
push
fwait
ljmp
lret
nop
addb
lock
jb
add
jmp
pushf
adc
or
mov
inc
cmp
jge
je
sub
mov
pop
push
cwtl
pop
mov
sbb
push
xor
push
sti
or
adc
div
out
jp
lea
lea
jno
mov
xor
mov
fimuls
dec
jne
jbe
mov
mov
pop
mov
pop
and
loope
mov
add
mov
sub
and
sub
sub
daa
sub
push
sub
lock
or
sbb
push
ja
jl
xchg
lea
cmp
pop
xchg
test
mov
inc
inc
ljmp
hlt
add
push
sbb
cli
adc
lea
xor
add
js
mov
mov
mov
jne
mov
or
iret
lock
push
out
jge
pop
and
bound
mov
and
jl
cmc
mov
mov
inc
jne
repz
xchg
dec
jae
repnz
stc
mov
div
orl
jo
leave
cli
iret
inc
outsb
cli
mov
rorl
orb
pop
pop
ret
iret
adc
mov
jl
shll
add
inc
sub
pusha
repz
xor
mov
or
call
mov
xor
xchg
jl
mov
rcl
ret
sbb
or
and
insl
mov
dec
add
sbb
adc
fdivs
pop
adc
out
inc
jnp
imulw
rcr
push
push
mov
rclb
fidivl
pop
cmpsl
fwait
sbb
xchg
movsb
or
sbb
jno
mov
xchg
es
mov
sbb
gs
sbbl
or
push
add
aaa
dec
into
mov
mov
pop
aas
or
mov
adc
push
sbb
mov
push
xchg
pop
xor
shll
sbb
jo
pop
sti
scas
cs
push
jnp
pop
push
std
sbb
pop
fisttpll
adc
push
or
dec
enter
out
adc
add
push
sbb
xor
inc
adc
xor
xor
pusha
js
mov
mov
adc
sbbl
mov
sub
ret
pop
sahf
mov
mov
sub
jno
dec
xchg
or
int3
and
decb
mov
push
decl
add
out
jl
adc
shrl
in
xchg
repz
ljmp
movsb
loopne
lds
sbb
mov
adc
cmp
cwtl
cmp
fisubs
cmp
fisubl
xlat
xor
add
sbb
add
sbb
push
fs
imul
push
sbb
lods
or
and
adc
or
mov
adc
mov
or
daa
or
pop
push
sbb
fnstcw
loope
cmp
cld
adc
cli
mov
insl
notb
sbb
adc
ljmp
scas
sbb
ds
adc
add
pop
js
adc
or
add
sbb
enter
add
sub
adc
lea
mov
pop
and
imul
add
add
push
sbb
cltd
add
pop
je
sbb
imul
mov
push
jl
dec
js
inc
xchg
xchg
sub
pop
pop
and
jns
push
push
push
xor
enter
mov
gs
adc
pop
dec
enter
pop
pop
inc
cmpsb
fs
push
push
sbb
enter
cs
stos
adc
mov
notl
push
ud0
outsb
repnz
dec
lea
mov
aam
jmp
xor
sub
adc
int3
xor
push
dec
pop
es
inc
cmc
and
hlt
lock
and
sub
xchg
das
push
fmull
enter
inc
nop
dec
sahf
sbb
xor
in
mov
mov
xlat
movsb
sbb
andb
sub
adc
add
pop
jnp
or
jnp
pop
ret
fwait
push
cmpsl
addr16
dec
xchg
dec
jnp
mov
sbb
mov
daa
fidivrl
test
sub
sub
mov
cmpb
mov
cltd
pop
push
ja
add
xor
mov
adc
lock
cmp
xor
push
popa
je
cmp
in
push
push
sahf
adc
push
pusha
test
and
sub
lea
sbb
and
add
sbbl
and
xor
popf
sbbl
nop
or
and
sub
or
pop
push
dec
ret
sbb
or
sbb
seto
and
fimull
and
hlt
fisubl
push
mov
ljmp
push
mov
pop
out
add
aaa
and
jg
push
push
push
push
lea
mov
sbb
aad
jb
jmp
add
sbb
movzbw
mov
mov
cli
std
sub
mov
ret
mov
negl
mov
je
xor
je
mov
mov
mov
push
cs
dec
and
add
inc
and
cmpsl
stc
sti
add
movl
in
cmpsl
adc
mov
inc
xchg
cmp
pop
dec
xchg
add
mov
enter
loopne
hlt
pop
add
or
xor
push
add
test
pop
clc
fsubs
sub
cmp
push
push
mov
mov
and
mov
push
mov
mov
fidivrs
ret
sub
or
add
shlb
hlt
adc
call
push
jo
sub
add
or
mov
mov
rorl
add
out
movswl
and
cmp
clc
push
insw
add
push
or
jns
fwait
loope
shl
sub
push
mov
xor
jl
adc
mov
push
sub
add
and
add
cwtl
sub
rol
loop
jg
or
cltd
or
lea
jl
mov
lea
mov
add
ljmp
subb
fs
out
or
and
pop
cmp
push
adc
call
cli
mov
lea
loop
sub
sti
cmp
roll
out
mov
or
test
shll
sub
mov
sti
mov
pop
cmp
add
adc
or
or
pop
mov
mov
xor
pop
ret
inc
idiv
or
jae
mov
orb
push
add
push
pop
icebp
rorb
pop
add
test
inc
cmp
fadds
fs
push
ret
sub
sbb
jg
sub
push
push
neg
push
push
push
xor
or
pop
add
mov
sub
xor
dec
push
xor
lock
push
es
xor
movl
cltd
mov
out
and
leave
sub
icebp
cld
jg
jg
dec
xchg
jecxz
dec
lea
loopne
adc
andb
cwtl
int
ret
dec
jg
add
add
mov
popf
xchg
mov
ficompl
pop
fmuls
insb
rclb
inc
into
push
out
push
lock
add
mov
js
test
lods
out
mov
and
mov
ret
rclb
data16
mov
sbb
sbb
setl
jge
sbb
cmc
hlt
dec
xor
sbb
mov
add
xchg
adc
fstpt
rorl
insl
fistl
adc
xchg
sbb
int3
sarb
cmp
lret
jp
mov
xlat
loop
sub
jo
add
rorl
fisttps
push
jl
pop
mov
cmp
xor
add
incb
lock
and
shl
mov
sub
daa
mov
rorl
cwtl
ja
sub
rcrb
sarl
mov
loope
push
int3
add
leave
sbb
bnd
sbb
mov
insl
cmp
add
push
pop
mov
inc
mov
mov
pusha
dec
pop
push
in
stos
mov
lods
push
xor
iret
add
and
aas
push
call
cltd
ljmp
xlat
popa
push
jo
adc
rorl
add
sbb
cmp
and
or
cmp
loopne
insb
sbb
cltd
sbb
push
adc
mov
add
roll
ss
ss
dec
sub
inc
or
xor
xor
jmp
jle
inc
popf
movl
pusha
xchg
add
push
rcr
pop
fdiv
mov
push
cwtl
repnz
testl
pusha
push
fdiv
sbb
lock
dec
or
sub
and
sub
loopne
inc
inc
add
sbb
cmp
jne
mov
in
sbb
mov
or
call
push
loopne
jp
and
jge
aam
lods
adc
lea
push
loop
mov
sub
add
and
adc
xchg
sti
ret
or
lret
mov
mov
xor
loopne
pop
or
pusha
insl
and
xchg
mov
fwait
mov
mov
add
xchg
or
das
loope
icebp
or
push
or
add
push
sub
mov
adc
add
ljmp
pop
clc
mov
or
sbb
mov
sti
xlat
dec
cmp
or
add
mov
out
loopne
mov
push
dec
lock
ljmp
or
cmp
and
outsb
mov
clc
inc
sbb
or
and
push
adc
leave
sub
mov
outsl
test
cld
outsb
enter
jae
or
or
or
fcompl
mov
adc
jno
or
cmpsl
mov
jmp
and
cmpsb
pop
and
fstl
xchg
xor
stc
push
or
add
or
cmp
mov
and
movsl
ret
cmp
xchg
or
xor
inc
lea
and
je
outsl
ja
repnz
or
or
ret
rorl
push
jle
insb
or
add
ss
jge
pop
pop
and
mov
nop
aaa
or
ret
lock
bound
cmp
xchg
sbb
mov
ljmp
sti
pop
aas
imul
lock
imul
or
adc
lock
xchg
adc
and
sub
rolb
add
and
cmp
lock
mov
in
cmp
inc
mov
push
out
sbb
call
ret
pop
inc
push
xor
fbld
cmp
xchg
shr
add
and
add
into
subb
faddl
fbstp
push
and
push
add
and
push
push
xor
rcll
push
pushf
xor
push
lods
fdivp
lods
jb
out
push
lea
and
adc
mov
mov
lock
and
xor
push
adc
xchg
std
jg
pop
push
xor
cmp
je
jmp
fdivrs
pop
xchg
int3
jle
xor
leave
inc
or
out
sti
pushf
hlt
movsl
test
mov
iret
add
pop
ret
push
inc
cmp
add
or
inc
add
push
cmp
daa
lock
fcomps
xchg
mov
fwait
inc
in
cmc
sbb
push
call
add
ljmp
rol
pop
jle
xchg
add
cmp
jne
bound
adcl
inc
lock
jne
scas
ja
enter
data16
inc
push
inc
or
or
mov
adc
dec
and
mov
shlb
dec
add
ret
mov
je
inc
pop
adc
inc
in
lahf
call
jp
out
push
mov
push
push
jle
push
mov
and
int3
mov
into
mov
loope
cmp
and
sarb
mov
adc
incl
cmp
xchg
xor
mov
push
scas
jg
or
push
loopne,pt
leave
mov
mov
xchg
std
sti
adc
test
je
mov
adc
jo
mov
psrld
rol
outsl
scas
call
shl
or
jmp
cmp
je
cmp
push
xor
xor
and
dec
and
xor
cmpb
sbb
adc
sub
lds
fdivrl
aas
fmull
add
cmp
hlt
ret
pop
xor
loope
push
xchg
jecxz
into
mov
sub
cmp
sbb
loopne
mov
adc
mov
cmp
int3
in
pop
rolb
incl
dec
sarb
mov
nop
sbb
xor
pop
xor
add
stos
sbb
fs
xor
dec
sub
aas
pop
fldt
fmuls
enter
add
and
add
popa
in
jno
mov
aad
push
pop
mov
push
and
push
sbb
mov
jmp
mov
push
mov
dec
lock
ja
or
in
ja
in
adc
in
mov
add
push
jge
fldenv
add
lcall
pushf
xchg
mov
adc
sti
mov
or
and
and
and
fsub
loope
lods
into
in
jno
sbb
lods
les
and
xor
shll
sbb
dec
ja
cmp
push
js
ds
pop
adc
add
sbb
lea
pop
sub
or
and
add
cmp
mov
out
pushl
cmp
jne
cmpl
adc
inc
jne
outsb
out
jo
jo
jne
mov
es
push
outsl
push
jp
add
jmp
pushl
loope
outsb
and
rorb
xor
mov
rcrl
adc
ret
mov
mov
dec
add
inc
in
push
fisttpl
clc
inc
add
adc
ss
and
in
or
into
mov
sahf
pop
lock
lahf
push
pushl
pushf
call
call
sbb
xor
cmp
pop
pop
jbe
mov
pushl
daa
inc
cmp
out
inc
sbb
pop
ret
pop
bound
inc
push
das
cmp
mov
dec
popa
rclb
mov
sbb
pop
andl
data16
inc
xor
push
dec
pushf
push
sbb
jbe
or
jle
push
adc
pushl
xor
fsts
fscale
jo
dec
call
and
mov
call
cwtl
and
pop
mov
jmp
mov
mov
pop
clc
ja
jg
popa
xor
jmp
pop
subb
xor
add
out
jae
mov
mov
cld
aaa
pop
loope
scas
add
test
nop
jo
pop
leave
outsb
mov
lock
push
or
add
cmp
adc
clc
jo
push
mov
inc
push
mov
jo
or
lea
push
dec
push
les
cmp
push
sub
or
inc
jns
aaa
negl
add
cld
mov
add
mov
add
adc
data16
es
pop
add
out
ja
mov
and
ds
ja
or
sar
clc
jb
lea
test
jmp
cmpsb
adc
scas
push
fldcw
sub
and
loopne
inc
inc
inc
test
outsb
cmp
je
movzwl
add
push
fcompl
pop
out
mov
mov
incl
push
inc
mov
dec
mov
or
in
mull
pop
shl
inc
adc
jnp
adc
mov
or
push
lds
add
add
add
pop
dec
mov
dec
pop
inc
stos
ret
sub
or
inc
add
andb
cmp
xchg
inc
in
push
pop
je
inc
fildl
into
dec
andl
cli
or
add
or
mov
cmpsb
add
xchg
ds
dec
cwtl
es
fiadds
inc
out
outsb
mov
sbb
dec
sqrtps
jo
adc
add
fdivrs
ljmp
add
or
imull
rolb
sbb
test
xchg
adc
pop
push
scas
xor
daa
jge
mov
iret
sub
sub
aas
mov
inc
cmp
pop
xor
je
rclb
dec
mov
js
fstl
ss
adc
mov
pop
or
inc
pop
sahf
xor
push
push
mov
enter
cmp
lret
rcrl
push
pusha
or
or
adc
out
push
or
cmp
ret
adc
push
cmpsl
mov
cvtpi2ps
stos
fdivs
pop
cmp
dec
cmp
sbb
dec
jnp
negl
sbb
inc
push
mov
cmp
mov
add
add
inc
shrl
jp
jae
or
xchg
dec
icebp
pop
pushf
inc
mov
sarb
rorl
ret
mov
mov
ret
push
push
sti
cmp
sub
bound
jb
fldcw
mov
sbb
or
daa
adc
sub
push
add
shlb
inc
or
in
pop
push
int
push
cmp
inc
or
cmp
js
idivb
je
dec
je
mov
lock
add
int3
pusha
add
daa
movl
mov
out
enter
sub
dec
mov
pop
and
or
xorl
pushl
stc
sub
pop
jbe
inc
jne
mov
add
rorb
jne
xor
int3
jno
sete
and
push
loop
mov
sbb
clc
je
divb
jge
jge
jne
jo
jle
inc
and
pop
bound
sbb
dec
movsb
lea
pop
cld
inc
pop
roll
je
pushl
push
jmp
pushl
test
pushl
inc
or
or
sbbl
mov
push
inc
add
es
jo
sub
mov
ss
lret
test
js
cld
mov
lods
or
cmp
ds
int3
dec
sub
test
lock
push
push
loope
out
push
xor
pop
pop
shl
sbb
dec
add
push
adcl
add
sub
fimull
mov
cmp
inc
xchg
cmpl
jne
andl
ja
push
add
or
pop
jae
push
daa
out
pushf
clc
mov
test
test
arpl
shr
or
rcll
sbb
data16
pop
cmpsl
jecxz
insl
movzwl
clc
imul
or
or
jle
or
cmpsb
int3
or
jmp
cmp
dec
jg
or
jmp
xchg
jmp
sar
leave
out
xor
push
pushf
add
push
icebp
cmc
lock
pop
call
jg
loopne
mov
or
fsubr
ret
sub
xor
mov
jnp
mov
xchg
jmp
adc
call
push
pusha
in
pop
jne
push
loope
mov
sub
sar
lea
add
addl
fdivs
dec
inc
mov
mov
cltd
sub
mov
testb
push
adc
mov
mov
jae
mov
mov
cmpsl
nop
pop
leave
test
jg
jmp
inc
add
cmp
mov
orl
mov
sbb
adc
and
push
mov
std
push
mov
in
cmc
push
shufps
inc
mov
incb
jb
rclb
add
sub
call
mov
push
mov
push
fidivrs
pushf
jl,pn
inc
push
xor
imull
adc
lea
push
or
js
jge
mov
add
shl
loope
fmul
cmpsl
push
push
push
lcall
fistpl
or
pusha
icebp
out
cmp
xor
cmp
fdivs
adc
cmp
push
mov
aas
fsts
mov
cmpsl
rorl
movsb
iret
push
imul
push
pushl
inc
or
xchg
and
inc
dec
mov
mov
jl
and
scas
xchg
sub
sarl
adc
add
imulb
xor
je
mov
js
popa
add
rorb
rcrl
jne
lea
lea
and
lret
add
xor
loopne,pt
xor
fs
ljmp
or
or
mov
movb
faddl
xchg
xchg
push
dec
inc
inc
imul
sub
mov
mov
or
cmc
es
or
lea
clc
push
test
or
insl
xor
jne
cmp
pop
cld
cs
imul
push
call
dec
imul
cmp
sbb
sub
lcall
dec
imul
inc
iret
out
add
in
pop
aaa
mov
jl
mov
add
stc
push
sbb
neg
push
fistl
sbb
sbb
push
dec
fstpt
mov
popa
pop
fisttpll
mov
out
and
ja
xor
mov
mov
mov
ret
inc
or
test
pop
sbb
scas
inc
test
pop
es
pusha
call
xor
push
fildl
jns
jmp
or
and
push
rcrb
sbb
and
insb
stos
mov
jp
nop
pop
fs
loope
or
add
xchg
xlat
jbe
adc
fstpt
pop
or
inc
lret
pop
add
lahf
mov
add
cmp
mov
mov
pusha
stos
xor
adc
outsl
lods
lods
inc
sub
push
adc
cmp
xchg
xchg
push
dec
lcall
mov
aam
add
add
push
sbb
je
pop
hlt
push
pusha
fcomps
pusha
mov
imul
inc
or
in
push
sub
aas
pusha
dec
add
pop
movl
jl
push
inc
loopne
fstps
out
jo
xor
mov
or
ret
sub
dec
mov
inc
test
add
lock
mov
push
push
mov
fs
jnp
addb
loopne
inc
inc
jmp
and
jge
pop
jl
and
sar
fmull
add
cli
inc
dec
fucomip
les
cmp
xchg
add
fdivs
gs
add
flds
mov
xor
mov
rorb
fmuls
loopne
pop
or
fs
push
dec
fidivl
loopne
fs
loopne
in
pop
sub
fistpl
xchg
xor
in
mov
cmp
je
jne
nop
push
ret
sbb
sbb
push
popf
sub
xor
and
mov
jne
jl
data16
mov
lret
imul
pop
mov
pop
sub
inc
and
and
in
rcl
jmp
addr16
fwait
or
dec
add
shrd
sbb
push
jl
decb
sbb
daa
push
push
std
jg
hlt
mov
mov
andl
les
xor
lock
or
enter
jle
dec
je
mov
xchg
subl
test
test
xchg
ds
and
cwtl
push
scas
cmp
sbb
aas
loope
xor
and
push
lods
es
adc
clc
inc
or
inc
adc
sbb
mov
sbb
jno
in
iret
cmp
cmp
xchg
adc
pop
cmp
inc
inc
add
pop
outsb
aaa
stos
inc
push
call
pop
shll
xchg
push
add
pushf
sbb
divb
clc
mov
in
mov
xchg
cmp
mov
xlat
cwtl
lcallw
pop
sub
jmp
push
add
add
clc
cmp
mov
cwtl
cmp
jmp
addl
jo
ja
imul
push
stos
and
dec
imul
inc
not
adc
cmp
hlt
pop
fcmovnu
imul
add
bound
mov
add
stos
aam
mov
in
adc
inc
pop
jmp
clc
push
shrl
xchg
rcrl
sbb
push
push
nop
loopne
mov
push
inc
mov
adc
mov
sbb
mov
loopne
xor
lock
loop
movl
shlb
push
enterw
or
shrb
aaa
jmp
jns
loopne
push
mov
jae
out
das
or
sub
inc
xor
push
or
cmpsl
sbb
inc
je
popa
inc
daa
cs
shr
cmp
lret
pop
movsl
inc
adc
cltd
jl
mov
call
push
push
das
inc
mov
sbb
aaa
adc
add
push
or
das
cmp
das
arpl
xchg
das
inc
orl
scas
cld
insl
dec
lock
add
jnp
jbe
ret
pusha
add
inc
out
cmp
cmpsl
or
mov
mov
jb
std
int3
mov
xor
pop
mov
repz
push
ljmp
sub
pushf
cmp
jne
jmp
or
mov
inc
and
pop
cmp
in
cmp
and
sub
add
aas
dec
mov
pop
cmp
lods
inc
lret
add
xchg
bound
push
aaa
push
and
pop
cmp
add
push
and
sbb
rolb
pusha
sbb
and
push
push
add
je
loopne
fmull
ret
xchg
es
aam
js
cmp
xor
movsl
cmp
decl
icebp
adc
or
andb
enter
lcall
mov
or
fxch
xor
into
imul
mov
cmp
push
call
fmuls
inc
add
push
push
hlt
stos
sbb
xor
push
push
daa
es
scas
cld
push
and
test
call
adc
jne
inc
das
outsb
outsb
sub
push
xor
cmp
jne
mov
or
cmc
push
ja
fs
mov
sbb
jmp
inc
sbb
test
lcall
dec
push
ss
test
mov
and
pop
xor
push
and
jb
ds
push
dec
sbb
lock
xlat
jns
je
sbb
xchg
out
mov
mov
shlb
mov
mull
test
es
push
dec
loopne
int3
cmp
sbb
mov
jo
das
lock
lods
jbe
push
jbe
xor
mov
lret
lret
lret
or
mov
cs
into
lahf
pushf
pushf
popl
add
mov
clc
cmp
mov
jl
add
cld
mov
enter
mov
imul
adc
push
fsubs
jl
add
cmp
aam
pop
and
cmp
sub
hlt
pusha
scas
lock
sub
sbb
out
incl
test
or
mov
jnp
ja
or
sub
sbb
or
dec
mov
or
cs
fwait
pop
push
fdivl
into
mov
test
pop
dec
push
ret
adc
stc
test
aas
mov
imul
add
pushf
insl
sub
and
cmpl
push
sub
or
xchg
in
mov
mov
inc
lret
cmp
int3
push
ja
into
jne
mov
inc
add
or
add
mov
call
loope
mov
sub
push
push
nop
mov
movsl
jle
add
add
aaa
jne
mov
push
cmpb
jne
inc
adc
push
loopne
push
cmp
cmp
repnz
jl
jbe
test
pushf
movsb
pusha
testb
sub
rolb
mov
push
and
leave
adc
pop
jmp
push
pop
push
push
push
ds
pop
mov
pushl
inc
cwtl
test
loopne
es
xchg
mov
or
push
je,pt
test
mul
and
mov
dec
push
int3
inc
ret
mov
mov
adc
dec
ss
out
mov
movl
test
add
adc
stos
lea
dec
mov
add
aas
push
dec
std
add
enter
xchg
dec
mov
inc
add
inc
stos
mov
cwtl
adc
add
sbb
aaa
sub
cld
adc
ljmp
xchg
shrb
gs
fsubrp
decl
mov
adc
and
inc
add
or
cs
fistpl
add
xor
fs
out
lret
push
cld
or
inc
mov
in
add
add
mov
icebp
mov
fwait
lea
and
push
and
or
push
pop
mov
lock
xor
orb
and
adc
sbb
gs
out
cmp
and
cmc
mov
mov
mov
je
movl
add
xchg
jmp
ret
sub
push
push
cmpb
add
push
in
decl
lea
cmovns
pop
jl
je
dec
pop
lea
aaa
pusha
in
add
call
sahf
lods
add
cmp
subb
mov
add
and
sbb
in
cld
sbb
sbb
add
jg
ss
ljmp
sub
sbb
ja
push
outsl
add
push
add
inc
pop
test
mov
test
mov
sbb
xorb
mov
in
add
cld
dec
sub
push
incb
adc
sub
sti
pop
call
cmp
mov
addl
enter
or
insb
add
cmp
int3
sbb
jg
icebp
or
adc
out
jmp
mov
add
test
xor
push
movaps
insl
mov
sub
add
sahf
mov
cld
add
inc
mov
cld
mov
add
cmp
add
aam
fstps
push
call
out
rol
mov
push
xor
jle
inc
inc
les
and
mov
mov
test
fisttps
dec
inc
push
movsb
je
add
mov
or
inc
push
mov
xor
je
js
or
enter
jb
mov
fstpt
push
pop
or
jge
or
fdiv
data16
push
pop
arpl
in
fstpt
jo
xor
clc
je
push
jmp
mov
push
fcmovnu
pop
cmp
mov
into
clc
xorb
pop
aam
or
push
js
jp
test
add
test
jbe
outsl
fistl
jmp
xchg
add
sbb
cmp
xor
fdivl
add
js
idivl
jno
xor
pop
ret
push
push
sub
lock
push
or
cli
mov
adc
sub
mov
sbb
mov
call
adc
dec
cs
or
add
xor
xor
cmp
outsl
in
lock
cld
mov
mov
orl
mov
inc
push
push
cld
fildl
pop
cmpl
jb
test
xor
ja
orb
fistpll
pop
sbb
mov
push
push
or
push
xor
outsl
push
add
mov
movsb
in
inc
enter
jnp
aad
xchg
pop
pop
and
pop
inc
pop
sub
or
xchg
js
cli
test
adc
push
sub
fistl
add
in
test
jne
mov
sbb
mov
xor
gs
mov
adc
xlat
hlt
mov
pop
mov
dec
pop
test
and
push
rcrl
pop
or
cmp
shrb
adc
call
push
xchg
arpl
pop
xor
mov
pop
mov
mov
lea
sar
lea
jne
mov
sarb
int3
dec
js
stos
and
or
rorb
cld
fwait
lret
xchg
lcall
push
push
subl
ljmp
add
mov
jo
adc
js
adc
add
ficomps
sub
std
xor
push
and
sbb
cld
sar
push
lds
js
movsb
cld
xor
lret
fs
or
test
ret
mov
shll
add
mov
movsb
and
pop
incl
dec
push
mov
or
les
pop
or
cmp
pop
imul
cmp
push
shrl
ret
dec
outsl
sbb
push
sub
mov
mov
mov
adc
adc
mov
test
pop
cs
int3
add
push
js
sbb
aam
xor
mov
sub
lret
rcl
scas
cmpsb
nop
jmp
bswap
movsb
dec
mov
lods
ds
or
or
decl
rcr
push
loope
xchg
adc
pushf
cmpl
add
test
add
arpl
ljmp
dec
jb
pop
or
or
addb
adc
fistpl
orb
add
push
sbb
sub
inc
ds
fs
call
lret
in
jmp
lock
mov
push
push
cli
xchg
or
push
mov
lods
cli
xchg
mov
or
adc
xchg
pushf
add
lahf
cmpsb
data16
movsb
fisttpl
sti
test
hlt
or
je
xor
pop
nop
sti
push
or
imull
in
dec
inc
out
rorb
mov
outsb
pushf
aas
lock
mov
dec
or
lock
inc
ret
mov
cld
xor
jne
push
push
clc
aas
insb
inc
cmpsb
imul
xor
mov
and
aaa
adc
sbb
dec
shrb
lock
shll
mov
scas
cmp
add
mov
xor
cmp
mov
mov
test
fisubs
pextrw
cwtl
mov
mov
and
enter
or
jg
xor
adc
lret
push
jb
sub
ljmp
mov
out
fsub
mov
jmp
or
mov
sbb
jmp
mov
insl
mov
pop
clc
cmp
flds
dec
cmpsb
inc
dec
call
decb
fcoms
add
add
rcrl
add
and
loop
je
fdivl
add
mov
xchg
sbb
or
sub
push
sbbl
inc
scas
nop
fisubrs
pushf
push
xchg
test
pop
loopne
orb
mov
fbstp
jmp
add
js
fcoml
mov
and
and
push
jmp
fsubl
mov
incb
pop
imul
mov
fnstcw
mov
jo
gs
das
movsb
je
ss
lea
add
cmp
xchg
loopne
mov
js
add
cld
pop
sbb
inc
gs
jae
clc
xchg
imul
adc
or
pusha
pop
cmp
sar
push
mov
xor
shrb
lock
xchg
lret
inc
and
loop
sar
rcr
xlat
aas
push
and
insl
xchg
test
lahf
fisttps
mov
mov
sahf
sbb
mov
lds
mov
hlt
inc
or
ds
mov
or
imulb
xchg
add
pushf
mov
push
sub
test
cmp
loop
sbb
push
ss
inc
mov
pop
mov
ss
cmp
and
adc
add
std
xor
testb
jbe
pop
and
add
test
jle
gs
push
in
pop
push
lds
outsl
lock
and
sbbb
test
add
je
clc
les
xor
or
mov
add
data16
test
pop
cld
xchg
call
les
je
adc
push
cmc
inc
stos
fwait
scas
jne
loop
add
dec
cmp
mov
mov
inc
mov
add
hlt
mov
mov
add
or
cltd
call
adcb
adc
shlb
aad
mov
push
aad
int
out
gs
or
inc
cmp
pop
push
rclb
nop
jno
call
fdivp
or
inc
test
mov
mov
push
orl
fcoms
jp
jl
mov
mov
test
sbb
and
test
mov
xor
mov
push
sar
add
lret
testb
fbld
jmp
xchg
lret
adc
push
js
incb
stos
outsl
mov
gs
and
call
push
pop
daa
std
xlat
jmp
ds
jb
pop
mov
mov
push
outsl
aaa
push
or
sahf
adc
lea
movl
xor
mov
add
push
out
cmc
cmpsb
sbb
paddusw
aaa
add
add
add
xor
push
incl
jmp
mov
lea
mov
fidivs
sbb
mov
shl
inc
and
sti
jecxz
add
call
dec
aad
sar
insb
and
push
ss
pop
fidivrl
mov
xor
leave
mov
mov
pusha
fcos
fadds
std
lea
fstpl
add
loope
xor
mov
jmp
std
pop
adc
inc
cmp
test
rorb
add
push
sub
sbb
mov
sahf
jmp
and
or
divl
stos
test
dec
xchg
sub
ret
enter
jo
aad
fistpl
mov
add
push
sbb
cmp
mov
fcoms
jecxz
dec
sti
lcall
add
je
push
incl
adc
addb
and
decl
les
xchg
int3
mov
jg
bound
incl
clc
adc
lcall
sbb
ret
add
loop
std
test
stos
fcoms
je
cmp
sar
mov
mov
push
ds
push
jne
filds
sti
mov
sub
push
sub
icebp
scas
sub
sbb
adc
je
jl
add
hlt
adcl
dec
push
inc
cld
push
test
aas
add
mov
outsb
dec
repnz
or
and
pop
dec
adc
cmp
insl
in
push
arpl
push
xchg
xor
jg
aam
fs
add
call
stos
mov
insl
push
push
pop
loopne
or
or
pop
testb
or
shlb
inc
mov
es
addr16
out
ss
pop
cwtl
rcr
push
xor
int3
push
dec
xor
cmp
push
hlt
clc
sbb
lods
jg
inc
and
popf
or
std
push
clc
jbe
fs
sete
push
daa
jno
sbb
push
cmp
bound
lret
int3
nop
push
pop
sub
inc
mov
adc
pop
roll
inc
push
push
add
lods
push
ds
fwait
add
outsb
ret
and
hlt
jmp
push
in
rorl
or
scas
and
test
movl
and
movsb
or
pop
push
test
test
sbb
out
int3
mov
cmp
sbb
pop
cmp
cmpsb
xor
jg
inc
mov
mov
add
out
push
inc
cmpsb
insl
cld
cld
add
jns
imul
push
adc
xor
dec
or
xor
call
dec
adc
frstor
jbe
test
push
loop
xor
push
add
lret
add
mov
cli
in
stos
mov
test
fbstp
mov
mov
cmp
mov
jge
scas
js
mov
add
test
leave
mov
add
cmp
cld
mov
pop
call
cld
decl
insb
scas
cmp
push
outsb
imul
mov
sbb
movl
push
lods
mov
pop
inc
cld
jge
rcll
xchg
xchg
test
test
incl
jmp
jae
lods
adc
inc
mov
dec
mulb
in
push
dec
ljmp
int3
sbb
int3
call
mov
in
fiadds
lock
outsl
add
fdivs
and
test
rolb
rcll
pop
mov
data16
push
mov
push
clc
lea
cld
hlt
loopne
adc
ret
adc
out
mov
sbb
das
push
loop
loopne
mov
ret
mov
mov
sarl
jmp
and
pop
in
aaa
mov
mov
mov
xor
or
sbb
inc
gs
mov
xor
pop
les
aad
pop
cs
nop
xchg
xorb
dec
mov
movsb
loope
sub
jbe
ret
push
jne
dec
or
xlat
arpl
cmpsb
cmp
mov
jne
pusha
lret
xchg
mov
cld
inc
lock
inc
dec
ficompl
pop
scas
hlt
les
adc
xlat
js
jle
fidivs
mov
loopne
cmp
push
push
inc
xchg
std
push
pushl
jne
sub
or
sub
xchg
add
lcall
mov
mov
or
faddl
sbb
jo
xor
fbld
inc
incl
mov
push
adc
test
add
and
dec
rolb
adc
fidivrl
imul
out
and
lock
push
les
cmp
test
ss
push
add
mov
xchg
inc
icebp
insb
push
mov
or
pop
test
stc
adcb
ljmp
dec
sub
mov
je
add
xor
xor
pushf
imul
enter
fsubs
stos
imul
push
sbb
jl
mulb
test
add
push
add
loope
jae
fdiv
inc
adc
loopne
shrb
push
std
testb
jmp
add
test
mov
adc
add
mov
jb
test
add
and
lea
inc
int
pushf
sbb
ja
jmp
decl
xchg
xlat
int3
mov
pushl
mov
mov
pop
sub
gs
mov
mulb
das
cmp
in
jne
sub
mov
xor
xchg
cmp
xchg
dec
or
cmp
dec
outsb
push
lods
push
aad
mov
lock
mov
mov
repz
sub
pop
push
test
decl
adc
mov
and
and
lret
addl
sbb
add
cld
push
inc
ret
dec
hlt
shrl
and
inc
add
jle
gs
sub
add
sub
mov
lret
and
jl
ja
pop
push
sub
adc
repz
jg
pop
not
test
pop
mov
sub
loope
cltd
fs
test
mov
and
pop
sub
clc
pop
pop
or
or
xlat
and
and
orb
sbb
mov
inc
inc
callw
pop
imul
lret
mov
add
add
inc
lods
xor
mov
mov
mov
mov
aaa
test
clc
dec
shr
dec
add
push
cwtl
sbb
in
outsl
mov
cmp
ja
mov
mov
iret
rolb
mov
stos
or
inc
daa
fmull
nop
dec
xor
inc
test
inc
mov
mov
add
mov
enter
aas
in
rorb
or
adc
je
ret
cmp
into
es
enter
sub
cmp
pop
sbb
sbbb
je
lock
push
insb
jl
cmp
xchg
movsl
mov
mov
add
pop
adc
data16
mov
xchg
jp
xor
scas
outsb
and
sub
andb
push
mov
fimuls
and
mov
fisubs
xor
call
push
lea
jle
inc
ret
cmp
mov
cmpsb
mov
outsl
pop
lock
enter
push
les
jne
lcall
cmp
and
inc
add
push
xchg
mov
jbe
pop
dec
js
rcrb
imul
mov
inc
call
or
decl
add
movsb
cmp
push
mov
adc
push
sub
and
lock
jg
fmul
push
sub
je
cmp
les
mov
push
dec
dec
jle
orl
mov
decl
mov
orl
in
jle
nop
mov
jae
ss
outsb
xor
push
inc
dec
or
clc
mov
inc
data16
arpl
mov
dec
fildl
sub
pop
lock
jb
lea
sbb
and
and
sbb
movsl
aam
je
or
les
sub
mov
pop
mov
push
test
inc
mov
loop
mov
dec
pop
sub
dec
add
jne
add
out
je
push
data16
push
jae
push
scas
es
xchg
mov
push
inc
sbb
mov
push
push
rcrb
movsl
sbb
aas
add
sbb
jae
mov
add
punpckhbw
inc
push
add
ss
push
or
push
add
cmp
mov
inc
jns
mov
push
and
and
cmp
std
fbld
aaa
mov
adc
ss
aam
pop
inc
mov
ljmp
add
incl
mov
or
inc
push
call
dec
mov
jo
add
mov
push
cmp
add
test
jbe
jmp
rep
inc
jno
add
call
cmp
xor
or
ret
push
popl
pop
rol
cmpl
sar
fdiv
add
fdivl
cmp
in
mov
add
btr
add
pop
loopne
or
inc
jne
sub
mov
and
jge
je
mov
jae
in
adc
insb
xor
cmpb
sbb
dec
xchg
adcl
loopne
inc
ret
push
pshufw
xchg
aam
mov
push
jne
cmp
push
jo
jnp
add
push
pop
add
adc
pusha
clc
mov
xor
leave
in
das
rcll
rolb
pusha
incl
mov
fcmovbe
jmp
adc
orl
dec
mov
leave
dec
xor
sub
lods
pop
mov
fdivr
jle
push
push
add
mov
notb
add
cld
adc
mov
and
not
les
dec
inc
sbb
mov
int
mov
int3
mov
jb
mov
mov
push
nop
xchg
pop
mov
push
add
cld
mov
ljmp
mov
sahf
inc
lock
decl
add
xchg
add
xor
cs
popf
add
mov
pop
pop
push
andb
test
add
mov
mov
jg
adcb
add
enter
add
scas
xor
clc
lret
push
push
pushl
push
sub
testb
loope
jl
cmp
pop
ds
mov
adc
or
jmp
sub
adc
dec
rcrb
test
xchg
lret
and
sti
adc
cmp
popa
les
loopne
ss
dec
movsl
cmpsb
inc
pop
mov
sub
das
xchg
enter
push
fs
addb
mov
rcrb
sbb
adc
pop
fisttpl
idivb
mov
and
pop
adc
sbb
dec
loopne
dec
push
mov
or
cmpsb
mov
xor
adc
add
test
add
ret
cmp
cmp
adc
add
and
push
push
push
div
loopne
aaa
sbbl
sub
mov
mov
clc
loopne
add
jmp
xor
inc
inc
xor
mov
pusha
inc
stos
add
aas
lock
fstpl
ret
loope
or
and
add
lds
sub
call
fdivl
incb
clc
add
push
ret
bound
mov
inc
ljmp
inc
and
inc
cmp
idiv
pop
push
xchg
je
lock
movups
lock
idiv
fcomp
cmp
add
sub
aad
ja
add
sub
cmp
add
call
inc
nop
sahf
and
je
insb
std
jg
dec
mov
int3
jo
notb
dec
mov
rorb
and
decl
xchg
add
rorb
or
outsb
test
push
sbb
pop
mov
push
movl
xchg
cs
mov
push
movb
push
mov
mov
jo
fdivrs
jg
cld
mov
out
add
leave
mov
andb
sbb
cmpsb
or
out
sahf
or
jl
mov
dec
in
mov
aam
inc
adc
test
rolb
ds
dec
or
lea
ret
mov
insb
fadds
cmp
and
add
outsl
or
lahf
add
es
push
jno
cli
subb
movsb
ret
and
nop
push
mov
call
or
in
popf
or
xchg
repnz
xor
hlt
movl
sahf
or
add
inc
jnp
lods
dec
das
and
cmp
aaa
sub
push
inc
hlt
js
in
sbb
test
sub
dec
mov
cmpsb
iret
inc
int
cmp
repnz
add
sbb
shlb
push
add
pop
mov
xchg
mov
pop
aaa
ret
shlb
mov
sbb
add
out
out
int3
push
adc
std
test
pop
call
fmuls
icebp
or
enter
sbb
sbbl
sub
incb
test
inc
push
loope
adc
jne
add
mov
cld
push
add
jno
adc
fmul
jl
test
lock
dec
xchg
push
mov
mov
mov
sbb
clc
xlat
pop
lock
pop
mov
adc
or
add
dec
xchg
push
addb
mov
and
fistps
ret
and
lret
pop
cs
leave
outsb
repnz
cmp
dec
xor
addl
mov
pop
push
mov
push
into
hlt
mov
test
push
push
jl
test
or
rclb
adc
mov
mov
xchg
lods
push
jp
mov
je
jne
add
icebp
out
xchg
sub
add
call
add
push
cmp
mov
js
adc
mov
in
out
xor
mov
xorb
pop
xor
jne
inc
int3
sub
xor
dec
add
push
sbb
sbb
imul
lods
push
imul
das
call
pop
jp
inc
dec
adc
jmp
jge
out
mov
and
jle
incl
outsb
push
jmp
call
outsl
fmull
ljmp
jb
lahf
add
incl
push
or
and
mov
push
pushl
inc
and
push
inc
nop
rol
cmp
out
nop
imul
pusha
fs
adc
or
sahf
test
sub
xor
add
adc
mov
add
pop
add
ret
movl
sti
push
cmp
mov
adc
clc
gs
push
or
mov
jp
push
xor
inc
rorl
std
fdivrp
ss
mov
stos
inc
sub
adc
push
xchg
dec
xor
mov
test
push
mov
or
or
add
fwait
rcr
inc
pop
hlt
xchg
jae
mov
pop
and
pushf
cli
cwtl
loop
mov
cmp
adc
ja
or
mov
add
add
mov
int3
loopne
testl
pop
movsb
les
push
adc
sbb
mov
pop
mov
add
inc
sbb
jmp
inc
gs
lret
mov
decl
mov
sbb
mov
mov
mov
ret
scas
mov
xor
pop
inc
fiaddl
add
int
dec
outsl
lock
xchg
call
imul
add
arpl
fs
loope
add
push
pusha
rorl
pop
jbe
cs
loopne
push
and
push
mov
push
rcll
lock
decl
push
push
out
or
jmp
leave
call
std
pop
fdivr
jl
adc
mov
adc
cli
add
lea
push
sbb
loop
loop
mov
mov
pop
ja
mov
pop
push
incb
jno
insl
sub
xorl
test
hlt
add
adc
add
pop
call
add
pushf
inc
rcrb
mov
mov
sbb
cmp
mov
jg
push
jo
test
sbb
in
jmp
push
add
add
incl
jne
adc
vmread
out
filds
push
inc
sbb
add
test
add
popf
mov
aaa
outsl
jo
shr
imul
inc
push
or
or
add
pop
mov
inc
xor
test
cmc
add
add
repz
loope
lahf
jle
add
mov
sbb
aam
add
cld
or
pop
dec
sbb
movsb
and
mov
and
test
adc
jg
mov
sbb
imul
pop
sti
push
pusha
xlat
cli
int3
pop
inc
adc
xor
loopne
pop
jo
inc
inc
call
adc
rclb
ds
shrl
les
fsub
mov
inc
bound
pop
clc
loopne
je
mov
and
leave
nop
push
ja
test
lock
rclb
outsb
insl
ljmp
pusha
push
pop
xor
dec
cld
dec
in
pop
shrb
rorl
add
xchg
adc
mov
lahf
mov
pop
lcall
push
push
jne
stos
or
jg
push
add
call
mov
push
int
sub
mov
add
jmp
and
or
xchg
das
sbb
pop
dec
xchg
scas
mov
mov
mov
jge
loop
data16
jp
xchg
add
xchg
xor
sbb
ds
mov
popa
push
out
cmp
mov
xor
bnd
or
jecxz
aad
inc
int3
push
add
and
ficoms
lcall
mov
adc
mov
orl
cld
mov
ret
sub
mov
pcmpgtw
adc
sbb
jp
cmp
clc
xor
add
jg
mov
fildl
imul
lea
cmp
mov
pop
mov
loop
sbb
cmp
fs
jo
inc
lods
push
and
sbbb
js
sub
inc
add
rcll
jl
mov
subb
inc
or
jl
add
xor
jbe
lock
data16
orb
cmp
dec
aam
fldt
mov
add
sahf
lds
jmp
fs
js
sbb
mov
push
push
jns
inc
in
mov
fidivs
add
add
int3
or
js
pop
mov
scas
in
mov
mov
outsb
push
lods
push
adc
pop
add
jg
xor
movl
mov
cmp
ret
inc
dec
or
jne
add
inc
iret
lea
add
pop
xlat
loopne
and
bound
lahf
je
or
repz
jmp
or
lcall
das
jmp
inc
inc
rcrb
push
cmp
jle
push
push
mov
shll
mov
push
xor
push
mov
pop
je
xlat
inc
cld
and
enter
lock
out
mov
pop
aaa
jbe
loopne
add
inc
cld
adc
sbb
outsb
lods
call
imul
sub
call
and
push
decl
push
ljmp
dec
sbb
add
pop
lds
rcl
leave
subb
and
push
jns
ret
inc
mov
mov
je
add
add
xor
fsubrs
js
mov
or
jmp
add
jmp
mov
in
pop
mov
scas
lods
add
out
push
ret
lds
push
mov
mov
sar
lcall
mov
push
adc
jl
mov
sbb
insb
adc
rcll
mov
js
xor
in
mov
mov
je
sub
add
xor
mov
lock
ljmp
or
adc
loope
mov
push
sub
int3
mov
fcmovu
nop
scas
or
fsin
dec
mov
out
fdivr
adcb
je
inc
orb
xchg
xor
push
stc
mov
fwait
add
mov
push
sub
shll
int3
fsubrl
mov
sahf
cld
add
xor
pop
pop
ja
mov
in
xor
xor
inc
jmp
pop
and
loopne
dec
call
jae
dec
xchg
mov
pop
fidivrl
or
ret
inc
mov
sub
inc
ret
int3
int3
inc
ret
and
mov
loopne
and
and
add
aad
std
adc
adc
sub
dec
aas
mov
xor
cmp
out
sbb
notl
inc
lock
and
into
fucomp
jmp
rorb
mov
ljmp
test
jl
adc
in
out
xchg
or
xor
cli
push
jne
fwait
dec
xchg
pop
test
sbb
mov
adc
aaa
xor
call
test
or
mov
je
sar
mov
or
shrb
add
add
adc
addb
pop
gs
subl
hlt
ljmp
test
in
pop
js
cmp
pop
jo
push
dec
call
cld
xor
decb
xchg
cmp
test
nopl
jb
mov
add
hlt
or
addl
outsb
roll
inc
lret
insb
add
cli
jmp
pop
xor
push
sub
lret
add
out
sub
test
out
xor
pop
push
cwtl
mov
ret
lock
popa
jecxz
gs
test
or
jb
andw
gs
inc
mov
nop
mov
test
test
enter
je
dec
add
popf
dec
adc
call
lock
push
incl
mov
push
dec
mov
loopne
pop
hlt
or
jmp
push
popf
or
pop
dec
data16
pop
jg
mov
or
and
pop
xor
mov
ret
je
mov
pushf
loopne
loopne
mov
lock
pop
lock
clc
or
cwtl
jb
jmp
pop
jl
fsubs
inc
mov
nop
mov
iret
cmovne
mov
mov
jo
cmp
dec
sbb
in
cmpl
or
pop
loope
inc
push
xchg
les
push
icebp
adc
fcmovnu
pop
cld
pop
mov
and
shlb
add
dec
lea
ds
lahf
movsb
push
mov
js
xlat
mov
mov
ret
lahf
lret
scas
sbb
jae
dec
outsl
mov
into
test
sub
or
push
enter
das
out
jmp
dec
mov
push
loope
mov
cld
adc
xchg
js
sbb
mov
add
mov
add
sbb
push
adc
in
mov
inc
and
jle
shrb
in
sarl
sbb
push
add
mov
or
push
sbb
cld
mov
icebp
sbb
push
fiaddl
cs
ficoml
pop
jg
es
or
roll
call
loopne
mov
mov
add
mov
mov
mov
mov
adc
aaa
aaa
push
sub
ret
jmp
push
cmp
cmp
sahf
jmp
add
pop
xor
rcrb
jo
call
push
and
enter
orb
fdivrl
push
ja
incl
push
stos
push
add
push
inc
loopne
pop
ss
jle
push
adc
call
outsb
test
test
or
mov
in
sbb
cmp
sbb
cli
xor
mov
cmp
cli
jne
pop
or
sbb
lcall
pop
mov
out
repnz
jne
inc
xchg
adc
cld
mov
xor
pop
add
xchg
dec
lret
loope
jbe
inc
test
adc
test
mov
push
mov
mov
push
jg
in
jmp
mov
mov
lcall
clc
imul
loop
cmpsb
jnp
fimull
lea
sub
ret
ss
lock
or
adc
or
mov
orl
cmp
call
pop
aad
lcall
push
pop
sub
movsb
add
dec
int3
add
push
xor
inc
test
js
add
fistl
mov
std
test
mov
std
jo
mov
fildl
ds
mov
push
xchg
and
fsubr
sub
loope
pop
lea
mov
testb
test
cmp
pop
pop
push
push
adc
lods
add
ljmp
cmp
aas
imul
arpl
es
inc
out
or
scas
clc
mov
rolb
lcall
push
add
add
push
or
bound
push
sub
popf
fstpt
jo
add
std
add
call
pop
or
push
xchg
in
push
jmp
mov
adc
jbe
dec
push
jle
mov
push
ljmp
fnsave
lea
repnz
lock
add
fdivp
cmp
mov
mov
push
pop
int
cmp
push
add
mov
add
dec
incl
hlt
xadd
add
add
xor
mov
dec
mov
sub
test
add
mov
pop
jmp
mov
out
hlt
mov
fadds
jmp
jb
mov
pop
push
add
sub
mov
mov
ret
add
inc
fidivl
je
jbe
hlt
fadds
push
inc
cmpsb
push
cmpb
dec
and
test
pop
pusha
and
push
and
enter
mov
mov
mov
push
xlat
xor
ljmp
push
or
add
js
rcl
push
inc
imul
shll
sub
mov
insb
ret
add
jo
fistl
mov
xchg
add
push
fmuls
cli
sbb
or
jbe
cmp
sub
test
adc
push
cmpl
dec
xchg
add
xchg
add
mov
hlt
shrb
movntq
sahf
add
mov
ret
andb
cld
out
mov
cld
scas
les
add
pop
xor
adc
mov
in
pop
inc
je
or
jle
push
mov
testb
sub
repnz
add
stos
fsubr
cmp
std
jb
into
lods
ljmp
das
cmp
and
add
test
call
loope
mov
decl
or
xor
lcall
ss
arpl
add
dec
fisttps
mov
cmp
test
dec
cmp
dec
rolb
adc
jmp
enter
inc
add
xchg
shr
inc
loop
ds
pop
in
ja
adc
and
movsb
push
mov
mov
and
dec
loop
add
pop
or
push
mov
inc
add
inc
sbb
ret
sbb
jg
xor
jle
cmp
jo
push
mov
add
cmpsl
out
decl
mov
pop
lea
jmp
outsb
in
add
or
scas
mov
or
hlt
sub
ljmp
push
jl
repnz
mov
test
lcall
push
mov
pop
andl
shlb
xchg
aaa
cmpsl
adc
pushf
adc
push
sarb
pop
std
jg
adc
jg
adc
stc
cmp
add
rorl
and
loopne
iret
and
scas
jb
call
or
mov
dec
hlt
movaps
or
inc
and
sub
orb
sti
mov
xor
jmp
les
inc
inc
and
loopne
lea
rol
hlt
mov
push
movb
test
cmp
outsb
stos
je
pop
mov
or
sar
cld
popa
decb
push
add
push
pushf
mov
test
aaa
jmp
adc
sbb
mov
in
cmp
call
mov
lock
stos
sub
test
int3
xor
fldcw
ret
outsl
das
jb
add
push
dec
ret
sbb
add
aad
add
push
mov
in
inc
call
mov
and
xchg
test
push
or
adc
mov
push
shll
clc
std
loopne
outsl
jp
mov
idiv
andl
ljmp
mov
sub
out
cmpsb
clc
sbb
push
or
scas
xchg
fcoms
and
icebp
sbb
add
push
test
sbb
cmpb
ss
bound
mov
ds
push
jl
popf
int3
jns
cmpsb
jl
mov
loop
hlt
push
in
jns
jge
add
add
cli
mov
sbb
ljmp
mov
mov
decl
pop
add
psllq
loop,pn
imul
jp
xor
aam
out
mov
and
cmp
xchg
std
es
shll
fs
js
mov
xor
mov
cmp
jb
xlat
addb
cmp
sbbl
pop
roll
stos
jns
stos
add
notb
ret
cmp
and
adc
aas
cmpsb
pusha
rcll
lock
push
xchg
call
add
push
aam
rol
scas
push
jmp
xor
mov
jb
pop
adc
jl
push
mov
inc
test
or
add
fs
shrl
fcmovne
sbb
sub
int
clc
inc
incl
lods
jo
loopne
pushl
movb
mov
js
std
addl
push
ljmp
out
and
sti
xor
pop
sbb
pop
sbbl
les
inc
xchg
push
sarb
adc
cmpb
mov
ds
mov
add
std
push
mov
call
mov
xchg
push
xor
add
scas
push
aaa
repnz
pusha
or
add
sbb
lsl
mov
sbb
adc
hlt
das
clc
xor
pushl
je
mov
orb
dec
xchg
movsl
add
inc
sub
cmpsl
push
sahf
adc
es
andl
out
jp
xchg
loop
add
nop
mov
enter
mov
add
sub
add
inc
mov
add
je
mov
dec
xor
add
cld
aaa
cld
mov
sbb
imul
add
lea
add
shrb
dec
sbb
and
add
addl
adc
push
enter
bound
mul
ljmp
or
test
loopne
mov
icebp
push
lcall
call
addl
sti
pop
push
pop
movsb
and
lods
or
std
inc
jo
testl
popa
and
adc
cwtl
xor
sub
add
inc
jl
jg
add
jmp
jmp
ds
cmp
jnp
cld
jg
rcrb
push
inc
jns
or
ret
push
fcoms
xchg
test
xchg
inc
add
add
sub
rolb
push
ret
add
lcall
cmpsl
cwtl
je
fmull
xchg
sar
xor
mov
xor
jl
bsf
aaa
or
push
andps
dec
lods
pop
ds
cmp
mov
lock
pop
jecxz
mov
cmp
mov
mov
sub
ret
das
cmp
arpl
add
push
jl
sahf
rorl
loope
sub
mov
int3
rcrb
out
cmp
dec
insl
inc
mov
mov
xchg
pop
mov
sbb
push
in
stos
fsubl
push
add
int
sbb
fsts
jb
sub
mov
hlt
mov
sub
add
test
add
pop
pop
push
mov
sbb
xor
movsb
add
hlt
dec
pop
push
dec
loope
and
test
gs
in
xchg
jmp
jmp
jne
dec
popf
rclb
and
pop
jo
loope
shlb
sub
add
stos
mov
pusha
jmp
mov
adc
xor
scas
int3
cmp
mov
push
or
orb
incl
decl
data16
je
inc
xor
mov
mov
push
add
test
mov
mov
inc
out
shrl
adc
sub
or
pop
jbe
mov
xor
push
cmp
in
push
add
mov
push
test
cmp
je
loopne,pn
mov
test
or
imulb
aam
lods
int3
nop
add
mov
mov
mov
cmp
adc
inc
shr
sub
mov
lock
mov
xchg
cld
rsqrtps
dec
pop
adcl
inc
mov
dec
add
dec
sarl
aaa
push
cmpxchg
jmp
add
add
add
push
adc
pusha
rclb
add
outsl
scas
shlb
lock
inc
test
andb
mov
ds
testb
add
fistl
sub
in
and
mov
clc
arpl
push
dec
sbb
fsubl
outsl
add
push
aaa
jb
mov
in
pop
add
aas
cmp
add
jns
cmc
add
mov
shll
jne
adc
and
cmp
std
pop
xorb
mov
or
or
xor
pusha
sbb
pop
outsb
je
insb
je
jl
and
mov
inc
add
push
jb
fcoml
mov
gs
xchg
fsubs
fiadds
nop
or
xchg
in
scas
pop
xor
mov
mov
pop
pop
pop
inc
jmp
add
mov
xchg
mov
repnz
jg
mov
add
push
push
outsb
push
inc
inc
test
jl
inc
mov
shrb
pop
into
or
jo
jbe
cmp
test
andb
mov
sbb
lcall
pop
add
test
jp
movl
scas
add
stc
push
and
in
sub
hlt
gs
cmpsb
xchg
pop
mov
adc
cmp
inc
adc
sti
rol
cld
or
js
test
add
cmp
insb
test
mov
adc
ds
adc
ss
aam
adcb
pop
testb
pop
and
or
adc
add
sub
push
lea
lock
sub
or
outsl
jp
sub
loop
adc
sub
add
inc
enter
loopne
data16
cmp
mul
hlt
mov
sti
dec
loopne
js
lcall
notb
mov
adc
add
int3
insb
add
fdivrl
or
add
add
enter
pop
call
mov
cmp
add
fsubl
cmp
test
push
ret
mov
les
mov
test
outsb
cwtl
and
adc
ljmp
sbb
push
pop
pcmpgtw
fcos
push
xchg
pop
mov
pop
hlt
loope
inc
das
adc
jbe
push
lock
sbb
sti
mov
mov
mov
fists
cmp
cmp
adc
rolb
test
pushl
nop
mov
adc
divb
push
add
push
ret
push
pop
nop
inc
pop
jb
push
push
mov
pop
mov
insb
pop
sbb
adc
mov
push
insb
das
js
add
loope
call
ret
jne
and
sti
and
add
test
inc
aaa
cmp
pusha
das
cmp
bound
adc
insb
inc
imul
jne
sbb
fsubs
sbb
add
aad
xor
xor
cs
or
pusha
dec
and
outsl
loope
and
mov
xchg
sub
xchg
incb
hlt
cmp
vmptrst
push
cwtl
dec
push
call
call
and
ret
mov
cmpsb
ret
faddl
jbe
or
push
outsb
mov
lock
fisubl
mov
add
cwtl
ret
jmp
inc
sysret
andb
js
test
inc
je
jmp
xor
call
decl
inc
lret
push
jne
int
scas
fadds
std
mov
flds
push
mov
and
dec
movsb
push
incl
aam
mov
cld
sub
sbbl
jbe
rcll
lock
std
mov
std
stos
pop
pop
cmp
inc
dec
lea
mov
mov
outsl
push
inc
adc
int3
movl
sub
aad
sub
push
call
outsl
cmp
pop
adc
mov
imul
ljmp
rol
es
mov
call
std
mov
add
cli
lea
enter
dec
push
cmp
cmp
mov
inc
cwtl
add
mov
or
lcall
setl
and
mov
je
xor
or
test
scas
call
out
inc
jg
pop
je
and
pop
mov
add
ja
mov
cmp
mov
loopne
add
test
test
pusha
lock
les
adc
shl
aad
push
fiadds
loopne
inc
test
jmp
adc
add
pop
es
mov
mov
cli
test
push
and
mov
mov
sbb
mov
call
jg
sub
divb
inc
mov
push
cmp
repnz
xor
sub
xor
jge
fs
and
push
or
enter
bound
aam
loop
sbb
inc
sbb
std
push
jmpw
mov
out
mov
mov
leave
jge
pop
ret
fisttps
push
push
subl
mov
pusha
sti
aas
jmp
je
je
jne
cld
mov
je
dec
shlb
or
adc
ret
loopne
test
jne
push
clc
mov
add
in
popf
or
jno
cmp
pop
add
adc
xchg
ljmp
outsb
test
mov
cmp
xchg
push
ds
push
std
stos
or
ss
sub
ljmp
decl
ss
incl
mov
jl
jne
cmp
cwtl
stc
or
add
movb
or
cwtl
jle
push
outsb
out
aad
call
mov
inc
andl
pop
stos
sahf
mov
rorl
xor
roll
les
aaa
add
rcl
jmp
or
dec
adc
and
xor
mov
or
push
dec
jnp
lods
xor
dec
pusha
jbe
add
mov
sbb
adc
outsb
mov
xchg
adc
mov
adc
jbe
jmp
and
orl
call
rclb
fdivs
lock
mov
inc
aam
sar
jbe
lds
cmpl
jb
adc
cwtl
cli
je
cld
ffree
or
and
jmp
test
adc
in
pushf
add
movl
mov
mov
jb
cs
inc
xor
fcmovb
add
jo
in
fidivl
or
sbb
pop
mov
je
cmc
mov
outsl
mov
xor
jmp
clc
lea
call
leave
inc
ljmp
pop
js
xorl
bound
mov
pusha
dec
hlt
ret
inc
les
add
add
add
dec
add
sub
gs
or
sbb
pop
or
or
pop
ljmp
sbb
addl
in
in
dec
decb
dec
je
lea
and
mov
xor
int3
in
stos
xor
xchg
add
xchg
outsb
sub
inc
sub
fcmovnu
push
xor
push
and
mov
push
push
mov
in
cmp
clc
add
pop
aaa
test
jmp
ljmp
gs
push
xor
pop
cli
push
mov
mov
hlt
add
ud0
xor
les
push
sti
or
or
fdivr
insl
adc
test
inc
jge
lea
nop
or
ss
jo
sbb
mov
or
pop
cmp
movsb
test
inc
rcl
cmp
hlt
add
inc
pop
fsubp
js
or
xor
ljmp
xchg
insb
test
cwtl
inc
adc
mov
mov
adc
add
cmp
mov
sub
fs
out
xchg
adc
add
push
inc
lcall
mov
notb
aam
sub
push
repz
rcrl
and
adc
mov
insb
call
dec
add
sub
dec
push
and
push
mov
adc
add
rolb
or
scas
aam
test
call
pop
xor
loope
cmp
cmp
adc
jg
scas
test
pop
rolb
ficoms
mov
outsb
push
jo
je
jb
mov
sub
mov
add
jmp
inc
jae
decl
add
cmp
aam
test
push
pop
aam
xor
and
and
call
ja
sbb
lea
ljmp
and
bound
adc
scas
pushf
pop
mov
fs
mov
xchg
lock
mov
test
xchg
femms
add
insb
dec
pop
adc
push
jns
add
jle
push
mov
imul
jne
decl
adc
mov
xchg
stos
jle
pop
push
inc
mov
add
popl
xor
sbb
push
pop
out
enter
mov
push
pusha
clc
out
jbe
or
mov
je
jmp
add
inc
push
int3
rclb
and
add
lds
jl
inc
push
inc
fiadds
imul
xchg
es
imul
adc
adc
sti
inc
ret
push
adcl
cmp
icebp
push
data16
inc
mov
xor
fisttps
mov
add
subl
pushf
jg
push
fwait
lcall
lcall
mov
sbb
sub
cmc
fldenv
les
mov
push
loope
dec
sub
sti
call
push
mov
jmp
or
js
std
xchg
subb
lock
test
pop
jg
loopne
enter
mov
pop
inc
push
lcall
sbb
and
mov
lea
lea
ds
stc
mov
ret
shrb
inc
hlt
adc
mov
test
mov
lock
push
addb
lret
push
jnp
jmp
and
cmp
inc
cld
int3
inc
adc
xor
inc
fcoml
notb
fs
add
fmuls
mov
lods
sbb
lcall
int3
sub
sarb
fnstenv
clc
orb
mov
push
jno
sub
add
imulb
fdivrs
sbb
xchg
cmpsl
add
jl
mov
inc
or
xor
and
movb
and
pusha
jne
and
data16
lods
cld
jne
or
inc
sub
mov
fsubl
push
push
test
lret
xchg
sub
fiaddl
fstl
mov
mov
jp
cmp
sbb
xchg
pop
mov
aam
cmp
cmp
jmp
inc
rorl
test
popa
jmp
fstpt
ret
jge
mov
xchg
xchg
push
jl
mov
sarb
pop
fidivs
jmp
mov
cmp
xor
cs
jmp
sti
jmp
mov
jb
mov
loopne
adcl
jle
inc
fidivrl
dec
cli
pop
lret
arpl
or
jo
mov
data16
pop
and
sar
mulb
icebp
sub
xor
call
sbb
pop
inc
and
clc
fdivrl
lea
adc
mov
adc
rol
decl
adc
out
lahf
and
jge
mov
push
loopne
movsb
int3
dec
pusha
shrb
mov
xor
test
xchg
cmpsl
and
outsb
pusha
adc
or
jb
sub
or
xorl
in
jno
push
hlt
and
push
inc
jnp
adc
or
fbstp
mov
ss
add
repnz
call
mov
into
addl
in
and
push
xor
inc
stos
push
es
roll
add
insl
adc
shll
rorb
div
mov
insb
mov
sbb
dec
shl
mov
lods
notb
je
test
add
jmp
cwtl
decl
pop
inc
test
popf
incl
scas
fisubrs
test
cld
sub
std
add
dec
cmp
rcll
ss
mov
adc
call
mov
and
sbb
push
mov
sar
stos
push
or
popf
test
pop
mov
xchg
add
mov
je
clc
mov
mov
and
outsl
ss
je
mov
push
lock
adc
fsubrl
daa
fidivs
xorb
mov
clc
mov
cwtl
in
scas
mov
lods
mov
into
xorb
loope
push
int3
test
add
xor
cmp
lea
aas
sbb
inc
pop
dec
nop
push
dec
pusha
sbb
rcll
sub
jne
pop
inc
decl
push
out
mov
pop
cmpsb
sbb
mov
movb
push
adc
dec
mov
pusha
pop
orl
test
xchg
call
push
aam
pop
adc
mov
push
nop
push
cmp
mov
cmp
mov
andb
mov
fmull
jbe
cmp
pop
rcrb
cli
cmp
test
rcr
in
push
mov
inc
lcall
ret
int3
repnz
call
cmp
into
shrl
push
inc
jp
arpl
idivb
adc
pop
or
add
loope
add
test
cld
add
loop
sbb
cs
cmp
inc
cmp
inc
adc
outsl
cmp
adc
mov
cmp
pop
out
sbb
or
push
in
dec
xchg
pop
mov
cld
int3
rcrb
push
paddb
mov
cmp
outsl
jmp
push
mov
push
jne
je
js
mov
test
shll
sbb
outsl
xchg
jp
aas
push
movl
call
dec
fiaddl
inc
xchg
cmp
sti
xor
cs
outsb
aaa
or
out
js
dec
lds
mov
push
or
xchg
add
add
jg
outsb
jb
mov
ror
rorb
pop
add
in
mov
add
cmp
push
loope
mov
and
popf
fldt
mov
in
lret
gs
xor
addb
sbbb
sbb
pop
leave
cmp
je
aam
es
rclb
repz
jo
movsl
add
call
negb
add
pop
cmc
das
and
pushl
mov
mov
imul
cmpl
pmaxub
lcall
mov
je
int3
lock
xchg
jb
inc
testl
jne
push
xor
jge
decl
dec
inc
loop
ret
mov
mov
lret
mov
xchg
dec
lcall
jecxz
dec
pop
mov
mov
add
mov
pop
cmpb
insl
xchg
xchg
cmpsb
cmp
int3
mov
adc
pop
mulb
jle
fcoms
andl
and
std
inc
rorb
mov
adc
adc
lea
pop
js
jle
pusha
mov
imul
inc
incl
adc
int3
sbb
outsb
addb
stos
cld
push
in
fwait
outsb
sub
pop
add
push
nop
negb
jb
push
lock
loopne
movsb
jns
mov
push
adc
add
inc
pop
dec
or
lock
pusha
in
int3
jp
clc
jg
adc
fs
xor
dec
dec
call
cmp
es
add
jne
mov
mov
cmpsb
jecxz
test
adc
jp
add
push
jb
movsb
shr
sbb
jbe
or
jbe
fcoml
int
adc
add
inc
call
add
leave
add
mov
or
pop
es
mov
adc
cli
mov
add
call
adc
xor
and
add
pop
mov
pop
cld
dec
lock
lock
sub
mov
adc
push
es
mov
je
sbb
stos
inc
ds
add
ds
jl
xor
imul
add
pop
shr
fisubl
adc
xchg
sbb
cmp
test
sahf
lea
test
pushf
nop
add
mov
xchg
jmp
jbe
test
cmp
imul
mov
outsb
add
mov
insb
push
xor
je
shlb
cmp
decl
adc
add
dec
rolb
pop
and
xor
add
xlat
add
jbe
movq
and
fcompl
add
rcrl
adc
cwtl
push
jl
adc
xor
lea
fistps
xor
std
stc
mov
stc
and
jae
nop
insb
dec
push
jge
dec
push
lea
fmuls
lea
loopne
cmp
outsl
mov
cmp
mov
fildll
inc
jmp
jns
or
or
fdivs
dec
mov
test
lock
adc
jnp
pop
mov
sbb
pop
push
hlt
or
movsl
inc
jb
lods
add
jp
scas
sarb
lahf
jmp
movups
out
cld
daa
fsubrl
mov
push
dec
or
dec
mov
mov
sbb
lock
jge
add
js
adc
push
push
push
scas
sub
adc
push
push
std
dec
pusha
sbb
mov
adc
jbe
out
test
mov
add
and
cmp
jne
push
mov
add
inc
orl
std
cmp
arpl
cmp
jno
inc
mov
in
xchg
cmp
dec
hlt
lea
jo
dec
nop
mov
pop
xchg
movsl
scas
jo
out
mov
fcomi
or
sbb
mov
repz
dec
data16
mov
js
mov
leave
out
xchg
std
push
and
or
in
xorb
mov
push
inc
xor
sbb
adcb
push
jne
mov
adcl
mov
in
cmp
adc
roll
inc
jnp
call
xor
pop
pop
mov
add
insb
lret
aad
imul
push
lret
mov
add
decb
jecxz
push
jnp
xor
je
es
loope
jp
push
in
pop
add
lock
sbb
push
lcall
cmp
add
sub
call
loop
stos
xor
andl
mov
add
pusha
add
dec
mov
or
adc
jl
outsl
icebp
addl
add
cmc
add
ss
mov
sub
add
fucomp
je
fcomip
loope
orb
test
mov
mov
inc
decl
jecxz
dec
js
or
aam
ja
int3
data16
sbb
fiadds
push
or
push
push
xor
jl
std
cmpsb
test
lret
pop
lcall
cwtl
add
mov
fadds
gs
xor
and
jmp
gs
mov
mov
jp
adc
sub
xor
js
jne
pop
aad
adc
dec
ffree
or
mov
dec
jg
lret
sbb
inc
jle
nop
jne
nop
pop
adcb
pop
sahf
inc
push
cmp
aam
aam
mul
sbb
call
imulb
gs
aaa
sub
pushf
sbb
loopne
add
add
scas
jb
add
push
cmp
adc
aaa
inc
ret
jb
out
pop
jmp
test
in
imul
scas
in
lea
stos
cmp
jmp
push
test
cmpsb
inc
push
mov
lcall
ret
sub
or
pop
adc
fmull
pop
inc
insl
decl
lds
gs
sbb
fs
xchg
xchg
sub
dec
mov
push
clc
stos
stos
cmp
sub
pop
sbb
daa
mov
xchg
outsl
dec
les
cmp
mov
sahf
nop
cmp
pushf
call
arpl
fs
add
inc
add
mov
jb
push
pop
movsl
inc
les
lock
jge
mov
pop
insb
fsubl
test
and
gs
dec
cwtl
inc
inc
mov
das
scas
mov
add
cld
xlat
pusha
dec
push
and
mov
addl
jp
call
mov
test
push
sbb
ds
test
inc
xor
int3
rcrb
jne
or
pop
inc
inc
inc
push
enter
lods
repnz
sbb
and
mov
mov
in
and
mov
aas
js
push
add
inc
fxch
and
push
incl
insl
add
popf
cmp
call
stos
shrl
inc
jo
cs
movsl
mov
jo
cmpsb
call
test
add
jne
in
push
push
stos
xchg
inc
loopne
or
sbb
pop
loop
push
fs
test
fdivs
je
mov
jo
loope
inc
shlb
xchg
or
jmp
flds
pop
out
or
mov
push
mov
push
adc
xlat
jne
add
adc
push
faddl
mov
dec
push
leave
pop
fmuls
push
mov
mov
inc
mov
lea
push
cmp
std
ret
imul
pop
mov
and
pop
jmp
push
int3
add
fiaddl
push
sbb
adc
sub
inc
mov
or
shr
xchg
xorb
pop
clc
aas
push
ficoml
xchg
test
test
mov
mov
xor
push
icebp
add
adc
clc
or
lea
inc
jae
pop
or
cld
mov
mov
int3
sbb
incb
daa
mov
fs
ret
push
and
addl
push
addl
mov
mov
js
dec
push
mov
jp
pushf
add
xor
ss
and
call
pop
ffreep
sub
cmp
add
or
add
jne
push
add
push
inc
push
mov
data16
outsl
add
jmp
push
pushl
inc
inc
xchg
sbb
jb
test
jle
pop
dec
or
aas
loopne
pusha
dec
xchg
mov
mov
inc
mov
pop
and
add
xor
clc
lcall
fadds
pop
mov
push
cmp
call
inc
rorl
inc
sbb
aaa
xor
mov
xchg
inc
cli
sahf
call
xchg
popa
pop
or
inc
mov
or
push
dec
mov
and
pop
subl
cld
ret
add
dec
cs
mov
in
jmp
sub
add
mov
lods
mov
add
mov
nop
insl
sbb
sbb
cld
ret
cmp
rorb
push
pop
fldcw
pop
pusha
outsl
xchg
jne
add
aam
fadds
and
cmp
pop
dec
push
into
mov
push
xor
or
jo
add
pop
fcompl
test
xor
cmp
push
das
andb
inc
xor
aam
aam
test
or
rorb
aaa
push
fldl
jge
push
aaa
int3
mov
mov
in
push
or
iret
xchg
mov
pop
clc
add
clc
pushl
push
xor
jl
pop
cmp
and
faddl
inc
hlt
int
or
call
call
das
clc
sub
cmp
add
fsubrs
shl
adc
add
rorb
and
adc
mov
cmp
jmp
pop
push
outsl
clc
pop
mov
xor
xor
add
jle
dec
jecxz
xor
fbld
or
call
mov
inc
dec
movsb
les
repnz
cmp
push
std
push
and
lea
inc
adc
shlb
xor
cmp
cmp
es
mov
mov
int3
add
push
or
rclb
cmpsb
notb
cmpsl
inc
mov
jge
adc
dec
mov
data16
cmp
ja
test
xor
jge
ret
int3
jno
dec
call
adcb
ret
pop
sarb
xchg
outsb
and
movsb
stos
lea
xor
ss
inc
push
push
ret
push
rcr
adcb
dec
lea
pop
add
add
arpl
cli
in
outsl
adcb
cmp
mov
mov
dec
mov
add
jb
pushf
dec
add
sub
or
aam
inc
enter
mov
inc
xor
imul
iret
sbb
add
add
sbb
xchg
repnz
jmp
mov
xchg
incb
pop
test
mov
rcrl
std
push
or
mov
movl
sbb
insb
push
add
jne
in
jbe
lock
add
or
dec
sbb
adc
sbb
add
pop
or
mov
test
sbb
mov
jl
pop
scas
xor
xchg
orl
mov
test
xor
sti
sbb
sub
shll
int3
add
inc
add
hlt
dec
scas
and
add
fbstp
dec
push
fiaddl
daa
rcrb
stc
out
add
dec
cld
jg
lret
xor
xchg
push
add
xadd
incl
int3
mov
mov
add
incl
sub
sahf
ljmp
pop
orl
loope
test
dec
cmp
cmp
mov
aas
and
pop
shrb
movsl
mov
add
addl
popa
push
pop
sub
mov
mov
lods
decl
dec
jns
and
jle
test
jle
add
lahf
pop
pop
clc
xchg
dec
sbb
es
cs
sub
mov
push
sub
inc
fimull
or
leave
sub
adc
je
popf
nop
jmp
add
mov
mov
or
add
insb
sbbb
test
out
fs
push
jb
adc
jo
sbb
loope
aam
push
shlb
push
sub
scas
add
scas
xorb
add
test
insb
xchg
stos
sub
adc
pop
or
mov
gs
cmpsb
rcll
lds
xor
pop
jns
add
andl
xchg
add
cmpl
pop
sub
mov
dec
insb
stos
cs
movsb
mov
cmc
mov
fisttpl
test
sarb
sahf
xor
jl
mov
inc
sub
rorb
sub
fadds
mov
push
stc
mov
sub
xor
push
inc
and
mov
mov
std
popf
test
lea
xor
das
xchg
xorl
and
xor
loopne
jo
lea
xchg
and
or
scas
and
les
out
testb
sbb
inc
call
jbe
inc
xchg
sub
add
loop
repnz
je
adc
js
les
pop
lea
and
scas
cmp
aam
mov
fidivl
mov
or
xchg
and
aas
and
cld
adc
push
cld
xor
inc
je
xchg
sub
mov
mov
cmp
jbe
aaa
push
sub
dec
sbb
lcall
or
add
push
sbb
inc
inc
stos
mov
and
lock
test
stc
jb
pop
loop
jl
xor
inc
push
push
insl
clc
cmp
jg
jge
movsb
pop
pop
and
mov
and
insb
add
aaa
cs
mov
pop
aaa
sub
in
mov
push
and
or
popl
das
cs
pop
cld
shl
enter
or
inc
add
repz
mov
inc
dec
or
outsl
fcmovu
or
and
sbbb
lar
mov
test
adc
push
xchg
jbe
sahf
mov
sub
rclb
and
add
lea
mov
lret
mov
pusha
test
popa
xchg
lods
inc
ljmp
movsl
cmp
sub
cmp
test
mov
ss
adc
sub
mov
les
lea
mov
shl
pusha
add
leave
inc
inc
sbbl
mov
inc
jl
cmp
or
and
and
repnz
int3
mov
add
inc
fimull
fistpll
lock
je
push
clc
popa
push
movb
sbb
rcll
mov
test
mov
cmp
scas
xor
fs
test
and
mov
mov
mov
test
test
or
push
push
fsubs
lcall
add
outsb
loopne
in
mov
lock
loopne
pushf
cmpl
mov
inc
xchg
push
lcall
movsl
inc
cmp
pop
mov
lods
or
shrb
outsb
xor
pop
jp
lcall
adc
or
cmpsl
gs
adcb
sbb
loopne
inc
test
inc
sub
std
jge
jne
dec
inc
push
rcrb
add
xchg
lods
stc
scas
mov
sub
cmc
sbb
mov
sub
sbb
lcall
adc
and
and
push
mov
add
in
dec
ret
aaa
xchg
fs
mov
mov
add
pop
add
mov
lods
sbb
jecxz
dec
jno
cld
mov
call
rcll
sub
addr16
incl
fwait
mov
inc
jb
adc
add
xchg
push
and
sbb
mov
cmp
push
mov
push
add
call
xchg
push
movl
loope
or
movsb
rorl
rolb
stc
mov
add
add
adc
popa
mov
cmp
mov
cmpl
pop
mov
mov
sbb
sbb
or
sub
sahf
or
push
jb
xchg
rol
punpcklbw
test
jo
test
xor
xor
push
inc
jl
mov
sarb
repnz
in
pop
outsb
push
mov
add
or
adc
xchg
dec
pop
and
mov
scas
and
in
dec
jbe
call
mov
fwait
mov
ret
loope
mov
test
and
hlt
psrld
and
mulb
push
mov
loope
push
push
add
jnp
mov
xchg
insb
jge
fdivs
push
rclb
loope
std
xor
mov
sbb
outsl
fidivs
lods
ljmp
test
lock
push
enter
adc
cmp
mov
mov
cmp
add
test
dec
cmp
inc
mov
cmp
dec
dec
cmp
dec
push
xorb
push
adc
ds
xor
ret
imul
add
add
arpl
lods
incb
test
add
pop
and
jne
test
add
jmp
add
adc
hlt
mov
clc
movl
jmp
aam
dec
push
mov
pushf
jb
test
lcall
mov
cld
lock
add
repz
sbb
stc
jmp
jl
xchg
jp
inc
cmpsl
ficomps
fldl
rcl
xor
pop
mov
test
iret
add
push
mov
inc
or
cltd
or
cmp
cmp
push
adc
hlt
cli
pop
pop
sbb
xchg
les
test
loop
aad
or
pop
push
fld
adcb
mov
push
inc
pushf
lea
add
or
mov
push
int3
inc
push
xchg
cmpl
inc
inc
xchg
inc
mov
mov
negb
xor
or
add
fildl
ss
repz
mov
adc
pop
mov
sub
dec
dec
push
push
lock
mov
mov
je
loop
pop
mov
clc
push
pushf
mov
ret
cmp
and
or
scas
movsb
mov
xor
add
icebp
push
cmp
mov
sbb
sbb
cmp
and
mov
mov
lock
nop
push
movl
test
and
hlt
mov
inc
cmp
or
add
sti
loopne
cmc
pop
outsl
mov
sarl
das
sar
push
lods
and
push
push
dec
sbb
fimuls
sub
icebp
cmp
push
mov
and
mov
icebp
fisttps
or
pop
popa
lds
aas
inc
push
rcr
ret
add
or
es
hlt
call
test
mov
cmp
lea
or
inc
test
push
xchg
out
or
add
lret
in
mov
push
je
lods
movsb
pop
mov
orb
or
mov
lock
ret
add
fstpt
jb
push
ret
aad
sub
loope
ds
add
xchg
add
fidivrs
xor
mov
push
mov
add
je
dec
xchg
jl
xor
push
popf
in
cs
pop
jl
fcoml
add
jbe
lahf
filds
outsb
mov
add
adc
imull
mov
push
inc
fdivl
and
and
fldt
shrb
aam
data16
rol
std
into
adc
or
shl
fsubs
int3
stos
push
ja
dec
mov
outsb
push
shr
xor
test
jo
fidivs
push
xchg
add
icebp
xlat
inc
mov
repz
pushf
dec
adcl
push
gs
outsl
pusha
or
mov
dec
outsb
insb
and
cli
pop
sbb
cld
shlb
negl
sarl
nop
add
pop
lcall
ret
pushf
lods
shll
roll
adc
cmp
pop
jb
popf
push
aaa
cmc
inc
push
test
insl
xlat
inc
adcb
cld
data16
test
pop
lea
cmp
or
or
push
mov
mov
push
add
dec
mov
cwtl
leave
out
inc
into
ficoml
add
out
rcrb
inc
adc
cmp
ljmp
outsb
sbb
hlt
push
mov
inc
aas
sbb
inc
adc
pop
in
xchg
and
sub
add
pop
orb
out
pop
mov
addr16
push
enter
out
xchg
js
xor
inc
orl
popa
add
adc
dec
sarb
scas
pop
sub
popf
js
pop
outsb
dec
mov
and
pop
adc
mov
aas
mov
or
aam
mov
loopne
int3
ds
loop
pop
adc
sbb
call
cltd
faddl
test
ret
call
mov
sbb
pusha
inc
push
lds
ret
divl
leave
test
jmp
out
jo
or
in
cli
sub
loope
jge
inc
addl
insb
cld
pop
subl
clc
add
or
std
fidivrl
cld
sbb
ret
xstore-rng
cmpsl
add
cmp
inc
jg
test
mov
jmp
je
mov
push
popf
lea
dec
test
add
je
dec
arpl
or
cld
jecxz
movsb
jle
outsb
lahf
data16
sar
add
dec
ret
xor
adc
cmp
push
fadds
pop
js
adc
test
faddp
je
pop
fadds
mov
mov
call
scas
stos
add
mov
push
aas
sub
jmpw
sbb
mov
insl
mov
mov
aaa
rcl
and
inc
adc
hlt
pop
add
adc
js
push
add
andb
xchg
fsubrl
arpl
test
imul
hlt
incl
pop
test
inc
mov
xchg
and
lea
stc
push
mov
inc
std
repz
loope
and
mov
or
mov
dec
in
les
insb
or
cli
add
pop
and
push
test
andl
cmpsl
fimull
orl
add
mov
fwait
push
loopne
ffreep
or
jmp
pushl
call
xor
mov
mov
and
idiv
pusha
inc
cmp
inc
pop
jbe
mov
cmp
nop
or
es
xchg
fs
mov
movsb
adc
xchg
xchg
std
es
add
negl
decl
movsl
push
jg
shll
push
in
mov
mov
push
jnp
ljmp
jbe
test
cmp
cmp
xor
clc
adc
cmp
rolb
cs
or
jmp
pop
mov
jnp
lcall
jp
in
pop
popa
sub
adc
inc
sbb
or
addb
adc
add
andb
test
and
inc
cwtl
pop
xchg
adc
push
pop
fs
pusha
lea
test
mov
ret
push
test
lret
and
mov
fs
lret
mov
subb
data16
arpl
out
mov
sbb
mov
sub
lahf
sbb
mov
sbb
and
mov
adc
call
mov
sub
mov
mov
push
and
push
pop
int3
add
cmp
push
cli
push
xchg
loop
call
pop
movb
and
jge
cld
add
jo
mov
addl
adc
ds
add
aam
out
xchg
add
decb
xlat
mov
in
mov
rcl
or
ljmp
add
sub
cld
pop
rcr
gs
adc
cmp
jmp
and
xchg
adc
or
ret
dec
adc
jne
and
push
push
das
cmpsb
push
pop
into
xor
push
adc
sahf
xchg
sbb
aas
shll
sarl
cmp
sahf
inc
pop
hlt
push
subb
xor
jg
jg
stos
and
push
aam
xor
mov
push
sbb
pop
and
push
mov
pop
inc
pop
jne
cld
je
inc
xchg
mov
adc
xchg
push
lcall
cld
mov
sbb
popa
mov
repnz
add
pop
addr16
lret
push
and
dec
test
add
lret
insb
push
or
ret
push
mov
clc
jbe
test
or
cld
mov
lea
inc
dec
lea
ljmp
mov
call
dec
push
mov
mov
xor
jo
mov
mov
psubsw
pop
adc
stos
add
es
es
dec
test
movsb
bound
pop
test
lcall
aas
jl
dec
loop
out
sbb
enter
mov
jg
push
lea
into
mov
mov
add
jb
in
leave
adc
daa
xchg
movb
les
lcall
xor
dec
cwtl
push
pushf
fimuls
adc
or
inc
push
out
add
insl
lea
data16
testb
adc
push
cmp
pop
int3
xchg
xor
adc
outsl
cmpsl
mov
lcall
jecxz
sbb
ljmp
ret
inc
xor
mov
addl
xor
addb
call
ds
divb
adc
mov
mov
and
out
or
push
and
and
fisubl
cwtl
xchg
add
popf
jae
push
ljmp
adcl
mov
xor
sbb
cmp
add
rcrb
pop
pop
mov
push
xchg
insl
sti
cld
in
push
std
test
push
ret
sti
push
dec
mov
insb
inc
fldt
xlat
inc
ret
xchg
das
hlt
test
inc
adc
mov
cmp
and
call
movsb
dec
cmc
mov
and
mov
lods
clc
insl
push
test
ds
mov
mov
cli
incb
lods
sub
jle
push
mov
clc
push
rolb
push
jbe
add
and
pop
or
fs
and
cli
rcrb
out
stc
fimull
loopne
loope
and
loop
das
jge
jbe
insl
mov
nop
test
mov
xlat
out
icebp
mov
iret
add
lcall
arpl
js
add
jb
ret
mov
add
push
add
movsb
or
add
adcl
pop
lea
xor
fprem
push
add
adc
cld
fucomi
loopne
pushf
push
dec
jb
cmpsb
jle
fld
mov
lret
adc
xor
push
std
inc
inc
or
orb
stos
testb
nop
xchg
add
scas
aad
aad
cmp
ss
and
add
and
cmpsb
das
test
int3
mov
je
pop
in
jno
jnp
sbb
or
xchg
call
fistpll
int3
lea
in
movsl
add
pop
lock
fbstp
add
mov
in
sbb
cmp
js
cld
cmp
sub
lods
jae
dec
ret
mov
push
adc
push
push
mov
jo
nop
ret
call
aas
into
ss
dec
pusha
bound
sub
test
fwait
inc
add
into
or
pop
and
insl
add
loop
sbb
adc
xchg
test
or
popf
push
mov
sub
roll
add
jge
lds
cmp
in
pop
adc
inc
mov
push
dec
aas
adc
lcall
cmp
adc
jl
int
jmp
pushf
mov
das
add
push
insb
daa
cmp
lods
test
adc
mov
dec
outsl
clc
cmc
mov
pushf
ret
insl
and
ss
and
or
test
sbb
rolb
pop
mov
adc
pop
xchg
jo
or
adc
fs
adc
xorl
sub
fisubrl
and
mov
fbld
pop
sar
test
lods
push
mov
sub
jp
mov
dec
ficoms
out
clc
add
or
and
lods
mov
and
movsl
and
push
pop
cmpsb
xchg
dec
popa
rcrb
mov
and
dec
call
hlt
lret
lods
add
nop
out
out
call
adc
jno
je
mov
mov
adc
pop
fisubrl
push
idivb
orl
mov
or
dec
add
and
mov
enter
icebp
jmp
adc
testl
xchg
inc
ja
and
ja
pop
jb
lret
pop
test
pushl
leave
push
cmp
dec
xchg
popa
ror
mov
sarb
sub
outsb
inc
push
pop
or
stos
sub
ds
test
test
cmp
faddl
pop
cmp
dec
sub
repz
inc
incl
add
es
stos
jmp
or
rolb
pop
push
addr16
cmc
or
ror
sbb
inc
add
mov
sub
adc
xorl
adc
fdivs
mov
stc
insb
or
jp
lcall
out
mov
xchg
fisttpl
or
mov
sub
pop
cmp
sub
xchg
adc
push
lea
decl
mov
cli
inc
push
testb
fstp
push
rcrb
inc
jbe
ss
out
adc
faddp
push
in
ljmp
inc
push
adc
xor
add
sub
push
mov
pop
gs
lahf
mov
xlat
test
movsl
js
xor
jb
lods
push
mov
and
add
mov
jg
ja
mov
aam
push
push
test
mov
out
push
sbb
jge
mov
sahf
add
ljmp
jnp
pusha
pusha
pop
cld
push
mov
pop
cwtl
mov
xchg
pop
or
jmp
xchg
dec
or
xchg
ss
push
in
outsb
adcb
add
push
sbb
jbe
mov
mov
mov
mov
cs
dec
jae
xor
sub
adc
xor
inc
push
lock
push
push
filds
cmp
adc
or
sbb
test
add
mov
mov
lea
mov
pop
pop
mov
adc
pop
adc
test
cmp
js
cmp
push
pop
int3
inc
fs
cld
jg
sub
je
xor
add
and
add
fistpl
or
push
push
push
mov
jg
scas
dec
aaa
cld
mov
pushl
pop
sar
sbbb
lock
ljmp
je
adc
jo
xor
dec
mov
lock
push
lods
fsubrl
stos
ret
adc
mov
test
and
mov
pop
and
rorl
jle
push
add
loopne
aaa
lock
cmp
xor
fs
cmovne
data16
and
jmp
sub
decb
test
call
loop
mov
ret
cmp
push
enter
int3
fistl
fisttps
call
insb
or
out
mov
xchg
push
enter
mov
mov
cld
dec
push
jl
add
sbb
push
rorb
xchg
push
aam
mov
mov
lods
or
jp
pop
push
mov
adc
stos
mov
mov
decl
ds
adc
mov
jns
push
sub
cmp
add
jmp
cmp
pop
ss
mov
cmp
pushl
ljmp
jmp
rolb
ds
mov
add
into
dec
faddl
push
or
sahf
cmp
nop
out
xchg
test
pushf
jge
loop,pn
adc
xchg
xor
sbbl
mov
mov
ljmp
addb
cwtl
fisubs
push
fidivrs
rorb
loopne
je
aaa
mov
rol
push
pop
scas
cmp
push
and
jle
jne
inc
and
std
push
mov
in
int
scas
or
lea
xor
xor
mov
movb
mov
mov
clc
ljmp
adc
mov
adc
pop
inc
pushf
jmp
dec
and
mov
mov
fldcw
fabs
add
mov
pushl
jle
add
mov
mov
inc
inc
aaa
scas
xchg
int3
ljmp
dec
leave
loopne
cmp
adc
push
and
push
mov
pusha
push
iret
pop
add
out
jg
std
xchg
mov
add
jne
cli
jo
jne
paddsw
pop
mov
rol
push
sbb
enter
ljmp
shll
mov
je
ret
popa
das
out
or
fcmovnb
add
dec
aas
or
xchg
cltd
push
outsb
lcall
jge
lcall
adc
stos
pop
sub
js
pop
cmpsb
idivb
add
js
or
ret
push
jl
and
enter
jo
rclb
jl
push
and
loopne
pop
sahf
xor
arpl
inc
test
inc
add
ljmp
mov
xor
adc
and
mov
cmc
mov
mov
ret
orb
arpl
mov
test
test
je
mov
xchg
xorl
mov
dec
aad
mov
jbe
jl
iret
decl
add
mov
add
aas
lods
mov
cmp
movsl
js
push
pusha
xchg
das
inc
clc
fwait
dec
addb
dec
mov
jge
and
sub
enter
test
pop
std
add
out
dec
shl
inc
js
movb
les
pop
aam
fsubrl
js
xor
ret
stos
loop
and
and
push
fisttps
pop
or
pop
test
sub
inc
cmp
fimull
adc
mov
data16
pop
or
mov
mov
pop
sbb
or
test
call
push
xchg
add
aaa
insb
jns
test
pop
mov
movl
jl
push
sar
cltd
mov
add
aad
and
incl
and
ret
mov
std
mov
lsl
push
cld
or
add
lcall
inc
mov
enter
movsb
jb
push
fimuls
and
outsb
sub
mov
shlb
push
adc
mov
inc
pop
iret
aas
and
push
shl
or
inc
divb
push
push
push
mov
push
pop
shrb
dec
mov
xor
mov
sub
mov
cmp
fcmove
es
fistpll
jmp
push
push
lea
push
insb
inc
mov
jo
jp
divb
xchg
sbb
adc
test
mov
sbb
in
push
les
int3
push
gs
and
sahf
decl
dec
loop
sbb
cmc
inc
popa
out
iret
ficoml
stos
insl
popf
test
mov
jns
sub
mov
cld
inc
mov
mov
mov
lea
nop
xchg
cli
or
repnz
and
xchg
mov
in
addr16
mov
lock
mov
jne
inc
call
jnp
mov
popf
add
push
mov
cli
mov
je
and
call
xchg
push
add
in
rolb
push
xchg
mov
inc
xor
sbb
inc
sbb
pop
aaa
or
add
ret
adc
fiadds
push
hlt
add
jbe
je
cltd
rorb
rorb
sbb
pop
dec
push
dec
mov
or
jmp
cmp
and
je
clc
mov
mov
mov
fs
lea
xchg
movsb
mov
cli
jmp
dec
mov
add
mov
mov
mov
xchg
inc
shll
je
xor
pusha
mov
call
xor
add
push
jmp
aaa
cmp
mov
cs
and
add
add
add
loopne
jo
fs
cld
insl
mov
test
inc
pusha
xor
or
fs
mov
adc
mov
movb
xchg
mov
push
nop
xlat
mov
mov
int3
cmp
sbb
inc
push
sbb
push
xor
bound
sbb
dec
xor
call
add
rorb
push
mov
stc
mov
inc
push
cmp
adc
ds
lds
shlb
les
inc
mov
les
inc
stos
adc
mov
push
push
test
cmp
jbe
dec
cmp
incb
xor
movsb
lea
idivb
push
adc
sti
fsubrs
xor
test
inc
mov
in
cmp
or
mov
mov
das
pop
add
inc
add
push
daa
jecxz
push
sti
shlb
icebp
mov
leave
xchg
adc
out
adcl
pop
mov
mov
jo
pop
adc
cmp
cwtl
movsl
sbb
sbb
pushf
and
fs
test
aaa
test
call
fisttps
fs
insl
and
dec
call
jb
dec
pop
lcall
add
mov
sahf
mov
mov
cld
cli
jle
push
push
or
jle
pop
mov
adcb
cs
mov
xor
ret
adc
push
pop
stos
xor
add
outsb
xchg
mov
push
icebp
movsb
adc
pop
test
xor
and
loope
adc
jno
and
sbb
add
scas
cmp
xor
lods
neg
mov
cwtl
loop
ja
mov
and
dec
dec
popf
xchg
pop
test
bound
jmp
clc
jg
jne
inc
mov
push
push
dec
xor
jnp
seto
jnp
cmc
int3
filds
inc
adcb
bound
pop
mov
xor
dec
add
sbb
sbbb
and
or
shrd
outsl
mov
cld
addl
xor
add
shrb
loop
test
jl
ss
sub
rcpps
pop
sbb
and
jl
push
out
mov
insb
xor
push
sbb
add
cmp
shl
cli
add
inc
mov
clc
call
cs
ds
ja
mov
jb
mov
mov
add
jle
incb
mov
ds
decl
out
clc
inc
cld
cli
ds
lea
ja
mov
mov
xchg
adc
mov
ds
outsb
clc
int3
pop
insb
push
jno
mov
lret
in
notl
dec
imul
add
cmp
inc
fwait
pop
cs
push
je
push
xchg
push
mov
and
iret
sarb
rclb
push
mov
cmp
aas
and
in
imul
inc
push
into
cmp
in
mov
scas
mov
sub
dec
lcall
ljmp
and
sbb
push
shlb
ss
inc
sbb
and
cmpsb
outsl
inc
jge
inc
test
ret
xor
push
out
sbb
add
and
push
mov
mov
test
xor
sbb
jmp
cs
add
repnz
insb
xchg
incb
push
fimuls
push
dec
js
les
test
rclb
push
push
imul
rorl
out
and
push
inc
mov
and
pop
push
or
ret
mov
mov
dec
sub
mov
or
pushf
call
sbb
sbb
adc
dec
adc
mov
jl
inc
and
or
in
dec
sbb
sbb
add
add
out
outsl
fadd
decb
jne
call
adc
adc
and
xchg
cmc
pop
add
std
cs
xor
inc
cmp
xchg
and
inc
mov
int3
test
sbb
mov
stos
div
enter
sbb
int3
add
xchg
ret
push
add
insl
push
shr
pusha
cmp
fdiv
ret
stc
add
sbb
call
pop
mov
shufps
cmp
adc
movsl
push
pusha
gs
fwait
cmc
sbb
xor
mov
adcb
add
dec
movsb
test
inc
mov
push
push
add
pop
aas
js
sbb
in
mov
std
push
hlt
testb
jb
call
push
out
ret
ret
faddp
or
mov
sbb
lret
lods
fmuls
std
lods
push
mov
cld
push
push
arpl
pop
test
push
inc
stos
push
dec
add
push
jmp
idivl
jmp
in
pop
add
scas
call
mov
ljmp
in
lcall
movl
mov
xorb
rol
and
xor
pop
cmp
jbe
jge
sahf
mov
loopne
cmc
add
jmp
ss
jl
jns
cmc
cltd
outsl
adc
paddw
int3
out
clc
cmp
push
clc
out
mov
xor
xchg
mov
lods
rolb
lret
adc
inc
adc
or
mov
cmp
std
call
fadd
pop
add
ss
push
push
jg
movl
mov
mov
adc
popf
psubd
xlat
aam
jg
andb
clc
dec
pop
test
stos
jne
xor
xor
xor
lahf
mov
jmp
add
movsb
dec
mov
aam
add
mov
push
es
je
sub
ret
inc
lea
inc
addr16
push
rorb
jbe
sarb
call
or
sub
mov
adc
push
ret
test
idiv
rorb
movq
xor
adc
push
push
ror
rolb
and
sti
mov
ror
movsl
cmp
std
push
sub
xor
mov
xor
in
stos
xchg
or
shll
xor
cmp
mov
scas
cmp
andl
mov
call
add
push
cld
mov
mov
inc
push
jmp
pop
sub
push
xchg
mov
loop
shl
jmp
jle,pn
mov
push
push
leave
adc
jmp
dec
and
inc
cwtl
adc
sbb
fs
push
jl
ret
inc
mov
mov
pop
cmc
push
insb
mov
jmp
fstps
lds
adc
fdivp
or
jo
icebp
cmp
adc
in
mov
push
add
loop
push
repz
shrd
inc
loopne
push
aaa
adc
inc
or
sbb
push
dec
std
pop
jecxz
das
stos
push
cmp
push
pop
ret
push
ret
nop
mov
add
push
fs
mov
call
sub
push
out
dec
mov
dec
loopne
test
fs
lods
mov
push
rorl
jb
mov
movsb
andb
popa
cld
sbb
sbb
jp
sbb
push
dec
out
xor
pop
je
xchg
sub
lock
lcall
inc
sub
leave
push
push
jae
adc
add
lret
sbbb
dec
test
xor
dec
add
rcrb
or
bnd
mov
cmc
enter
jb
jns
or
fistpl
cmp
jg
aam
pusha
out
std
mov
add
add
or
inc
push
popa
jmp
add
pop
je
cmp
jb
or
cmp
popf
clc
lock
testb
ret
xor
repnz
icebp
inc
dec
cmpsb
push
mov
in
xor
mov
xchg
sbb
cli
mov
push
orb
shrb
std
mov
push
jl
cmpsb
mov
js
jmp
decb
sub
xchg
cmp
sub
int3
cld
dec
jg
ja
decl
add
cmp
pop
test
inc
lret
data16
mov
pop
push
mov
jbe
scas
xor
xchg
in
mov
js
rolb
lock
or
sub
imul
inc
fidivs
pop
dec
lea
loopne
in
mov
ret
jbe
cmp
jmp
jecxz
or
das
push
cld
xchg
and
and
cltd
mov
add
hlt
push
rorb
mov
int3
push
or
inc
pop
push
fisttpll
sbb
jle
jne
mov
test
ret
or
loope
fcompl
in
clc
adc
lods
mov
mov
rolb
test
pop
movl
dec
add
leave
jmp
xor
test
test
lea
jge
lret
cli
add
cli
xlat
das
rcl
aam
and
les
inc
aad
adc
and
inc
imul
dec
mov
je
add
add
in
add
data16
jge
or
mov
adc
jne
loopne
push
lock
pop
ror
jg
ja
jp
add
adc
add
jecxz
loop
and
sbbb
aas
or
cmp
push
mov
std
adcl
mov
cmp
pop
inc
and
sub
jg
test
aam
imul
cld
xor
adc
out
add
sub
mov
or
mov
jns
cmpsl
sahf
add
push
and
add
fcoms
push
lret
adc
inc
inc
test
xchg
and
mov
pushf
sbb
fs
incl
test
in
aad
into
rorb
adc
test
jle
push
incb
lret
xlat
jae
lea
je
clc
adc
xor
fdivr
fstp
inc
fildl
lock
jb
shll
add
inc
xor
xor
mov
pop
test
loope
imul
repnz
pop
rcll
ret
and
not
adc
ret
sub
push
cld
cmp
pop
push
inc
add
jno
push
adc
mov
test
ss
or
push
dec
pop
xor
clc
xchg
cmp
cli
push
jb
gs
int3
sbb
inc
call
imul
and
pop
and
xchg
cmc
mov
add
cmp
inc
ror
fcomp
outsb
pop
adc
sbb
add
push
popa
insb
mov
pop
test
jecxz
incb
mov
cmpsb
test
in
mov
adc
loopne
frstor
mov
shr
jecxz
ret
mov
pop
push
and
dec
clc
idivb
bound
aas
test
ror
inc
dec
dec
icebp
add
decl
cmp
pcmpgtb
add
cld
xor
add
adc
jge
mov
or
imul
push
lock
test
jae
or
xchg
push
jle
pop
xchg
pop
xor
mov
push
push
test
add
cmp
shll
adc
dec
add
dec
mov
addl
gs
or
and
sbb
int3
loop
outsb
inc
adc
push
dec
int3
inc
push
insb
scas
sbbb
mov
and
xchg
push
lock
xor
cmp
inc
bnd
icebp
add
lods
rcr
or
iret
or
aam
or
inc
rorb
jb
cli
loop
and
clc
inc
test
add
js
stos
das
push
xor
jp
adc
fmuls
not
aaa
loopne
mov
xor
or
mov
test
xor
fdiv
faddl
xchg
add
lcall
cs
dec
cli
nop
adc
pusha
mov
shll
lea
insb
les
shr
dec
stos
dec
sbb
mov
xchg
cmp
cmp
sbb
test
rcrl
jle
popa
add
cmp
test
xchg
cmp
lea
lea
call
decl
push
inc
dec
mov
call
jae
pushf
mov
add
decl
adc
repnz
pop
out
xchg
adc
data16
cs
push
jmp
fistpl
mov
clc
jne
arpl
cmp
add
mov
rorb
fistps
adc
ret
subb
and
sub
mov
out
push
test
pop
xor
cmp
mov
sahf
in
xor
or
push
mov
inc
dec
inc
sub
out
jo
adc
insb
push
pop
jne
sub
mov
divb
adc
cmc
pop
mov
mov
mov
jne
jge
xor
push
inc
sahf
data16
loope
pop
shlb
cld
inc
call
add
add
lret
es
loope
fistps
mov
or
push
push
leave
subl
rol
cmp
add
add
jp
mov
enter
hlt
or
dec
mov
sub
dec
insb
fsubs
fstp
mov
or
xchg
add
add
mov
push
in
hlt
jle
cld
mov
ja
add
lods
imul
into
rcrb
test
rorb
mov
add
mov
cmp
push
inc
int3
mov
or
cs
lock
test
mov
cld
add
push
ja
hlt
jmp
add
xchg
clc
push
push
ret
mov
cli
cmp
ret
outsb
ret
adc
add
pop
jbe
cmc
adc
pop
in
push
lock
inc
mov
rcrb
add
jns
dec
mov
outsl
lcall
rclb
mov
test
std
cwtl
xor
jmp
push
ds
pop
adc
or
popa
mov
jmp
add
inc
pop
adc
and
push
jae
enter
mov
notl
faddp
mov
jl
push
test
sub
ret
pop
insb
push
add
mov
sbbb
out
dec
pop
hlt
pop
rcrb
mov
adc
ja
je
add
mov
aam
dec
mov
call
xchg
push
xorl
mov
xor
loope
ror
test
jmp
or
popa
push
inc
push
lcall
adc
xchg
jne
leave
fcmovb
mov
jge
pop
enter
fldt
stos
scas
cmpsl
aam
push
fstpl
adc
jne
cmp
test
and
sbb
lock
cmp
dec
sbb
outsb
push
cld
pushw
jge
add
cld
push
int3
cmp
ret
dec
jecxz
lcall
icebp
cmp
add
xor
pushl
adc
add
jmp
mov
aaa
push
int3
jge
mov
add
cli
dec
inc
add
jne
pop
jecxz
jmp
mov
push
jb
sbb
mov
loopne
aaa
cld
cmp
fildll
sahf
cmc
mov
lods
std
incb
enter
and
cmp
mov
rorl
jne
maxps
and
or
inc
and
push
adc
sub
xchg
jge
movsb
push
jge
and
xor
sbb
mov
pop
and
cs
xor
xchg
sbb
pushf
nop
cs
lret
push
je
mov
or
push
push
push
push
test
inc
push
loopne
push
insl
xor
divb
ja
sbb
inc
repnz
mul
lods
outsl
xchg
or
sbb
cmp
pop
jbe
loop
sub
rcrl
add
adc
dec
mov
es
gs
je
and
or
inc
test
pushl
jo
or
jmp
xlat
in
or
movsl
sbb
adc
pop
rol
rcll
jo
mov
je
rclb
jp
add
sbb
xchg
data16
cld
sub
adc
cmp
icebp
push
mov
out
mov
add
dec
jp
aas
cmp
push
jp
aaa
lcall
xchg
or
in
dec
sahf
lds
repnz
push
mov
fnstcw
or
or
test
cmp
add
std
inc
xchg
pop
cmpsb
or
push
sub
ret
inc
rolb
out
sub
ljmp
sub
pop
jmp
call
xor
jl
aaa
fsubrl
ret
ds
xchg
scas
stos
mov
aam
pop
add
test
push
test
outsl
push
inc
add
ljmp
or
push
std
shrl
and
xor
pushf
pop
loopne
cs
xchg
adc
ds
and
call
adc
and
add
das
fdivrp
imul
sub
jb
sbb
mov
pop
lahf
rcrb
das
clc
dec
pop
rolb
mov
mov
push
lock
and
push
clc
push
shll
popa
inc
lret
add
int3
inc
pop
adc
and
pop
test
mov
mov
and
rcrb
cmpsl
xor
add
jle
mov
jmp
mov
adc
cmp
out
rcll
call
cmp
stos
xchg
mov
mov
inc
popa
jb
sbb
push
xor
je
mov
je,pt
test
pop
mov
mov
cmp
jle
idivb
cmpsb
push
arpl
cmpsb
roll
sbb
cwtl
jne
mov
push
jecxz
iret
adc
mov
test
cli
sbb
add
push
imul
test
and
dec
movl
inc
jae
cs
add
leave
decb
clc
sbb
out
subb
aaa
roll
mov
mov
mov
add
dec
or
mov
test
cmpsb
push
and
add
mov
sub
in
push
dec
sbb
inc
shr
jmp
push
and
inc
dec
es
les
mov
pop
xorl
sub
mov
xchg
stos
xor
push
add
dec
add
std
mov
pop
push
mov
aam
push
cmp
inc
cmp
cld
pop
add
test
dec
insb
jns
add
std
rcrb
dec
pop
cmp
es
adc
adc
pusha
je
es
call
mov
call
clc
sti
xchg
lock
orb
call
je
es
movsb
mov
movsb
js
and
test
pop
pop
fsubs
jae
clc
mov
loop
adc
jge
and
in
jle
mov
pushf
jne
push
mov
int
addl
pop
jne
push
dec
lahf
dec
lods
dec
cmpb
outsl
pushl
xor
jmp
cmp
hlt
xor
clc
inc
popa
adc
or
and
pop
ja
jns
mov
aam
rorl
dec
js
test
cmp
adc
xor
jecxz
loop
sub
loop
imul
mov
shll
enter
aaa
lea
hlt
rorl
mov
enter
xchg
dec
sbb
movl
pop
rorb
and
inc
sub
adc
arpl
dec
movsb
mov
pushf
or
int3
lret
add
and
push
push
cli
lock
lret
pop
les
gs
addb
or
loop
dec
mov
xlat
jne
test
adc
mov
pusha
xchg
gs
mov
dec
ret
cmp
mov
fistps
jmp
and
incb
hlt
pop
jb
fsubp
loop
inc
mov
sub
dec
add
call
rcrb
adc
rclb
jmp
aam
fildll
je
add
out
jne
lock
mov
dec
and
aam
xchg
push
mov
pop
js
pop
or
inc
leave
mov
test
jo
pusha
mov
fcoms
cmp
mov
jo
or
adc
inc
std
cmp
jp
push
mov
in
inc
jmp
pop
cmpsb
jbe
xor
nop
mov
add
ss
xchg
jmp
cmp
cwtl
test
arpl
cs
bound
sub
incb
leave
mov
sub
or
add
aad
mov
test
ds
cmp
mov
mov
shrb
xchg
mov
out
sub
pop
and
push
pop
jle
mov
je
add
cmpsl
jnp
cwtl
out
in
cwtl
lods
dec
es
xor
faddl
xchg
loopne
mov
lock
inc
mov
mov
lea
les
push
or
dec
fadds
push
mov
xchg
lcall
push
mov
pop
pop
jecxz
test
rolb
inc
push
inc
int
jmp
cmp
sub
sbb
add
mov
inc
fwait
hlt
pop
or
insl
mov
inc
je
mov
xchg
orb
sar
push
je
pop
ficoms
lock
icebp
cmp
xchg
add
test
inc
push
mov
out
pop
jmp
rcl
xor
test
inc
mov
cld
jns
test
mov
pop
jmp
lea
call
cld
push
push
and
mov
ds
and
insl
ss
adc
jge
cmp
inc
xor
mov
cmp
mov
xchg
sbb
clc
inc
decb
or
push
incb
stos
in
in
add
adc
mov
jo
sbb
mov
push
sti
push
clc
lea
push
push
adc
inc
adc
ja
or
notb
or
dec
loop
xor
cmpb
mov
xchg
fcoml
ljmp
inc
outsl
mov
inc
inc
sti
mov
fsubl
enter
or
push
fdivrl
pop
lea
push
or
inc
or
test
pushl
jge,pt
lcall
adc
nop
add
sarb
mov
xor
mov
adc
pop
mov
decb
sub
cmp
jmp
rcl
mov
add
fmull
inc
ljmp
int3
test
jle
xchg
mov
mov
pushl
lods
fdivr
addr16
clc
testb
push
or
repz
and
push
lcall
push
call
pushl
sub
es
ret
add
adc
aam
cmp
fcmove
push
cmp
inc
inc
lods
adc
cs
xor
push
dec
mov
add
sbb
xlat
jnp
jo
ret
data16
dec
jmp
cmp
pop
cmp
leave
psubsw
or
and
pcmpeqw
fs
xor
or
mov
lea
dec
lea
or
pop
pop
mov
or
xchg
inc
pushf
aad
popa
mov
inc
test
cli
or
jmp
ret
sbb
lret
adcl
or
cld
adc
cwtl
and
outsb
jmp
mov
pop
inc
xchg
pop
inc
ret
inc
into
pop
add
mov
xchg
fstl
enter
push
xlat
sub
mov
sub
xor
fadd
add
repnz
imul
mov
lods
ljmp
or
pop
push
pop
cli
imul
inc
pop
fcoms
je
enter
adc
dec
loop
aam
jg
pop
pop
rcrb
call
and
pop
add
push
adc
sub
adc
stos
daa
out
add
ja
stos
and
or
push
dec
sub
data16
mov
pop
icebp
pop
or
push
sahf
cmp
add
and
mov
je
outsl
shlb
xchg
popa
mov
jecxz
clc
cmp
mov
xor
inc
das
or
js
jmp
ljmp
mull
push
das
test
and
fisttpl
mov
les
sbb
ds
test
mov
test
adc
xchg
xor
or
or
push
clc
jbe
xor
sub
mov
pushl
in
push
in
cmpb
push
cmp
sti
fst
faddl
pusha
lea
cld
and
inc
mov
rorb
mov
decl
lods
push
inc
aaa
movsb
or
ret
inc
je
cmp
ljmp
sub
and
push
gs
sub
xchg
les
push
mov
mov
sub
inc
sbb
mov
std
adc
mov
int3
test
adc
call
xchg
mov
jne
mov
sar
or
push
popa
push
or
shlb
push
xor
push
test
or
pushfw
or
mov
inc
fwait
cli
mov
push
add
jbe
inc
ret
jge
adc
test
ret
cwtl
mov
mov
push
inc
cmp
dec
xor
add
hlt
pop
scas
cwtl
call
shlb
aas
imul
into
test
call
add
mov
mov
push
mov
jo
add
scas
xchg
push
jg
push
out
or
mov
pop
inc
decl
hlt
sub
sahf
jo
dec
clc
pop
stc
ret
or
xor
fsubs
inc
dec
cmp
jmp
sahf
dec
fs
inc
test
lea
inc
pop
push
xchg
ja
js
add
dec
clc
add
push
sub
or
pop
push
jb
fcomip
dec
loop
lea
add
dec
dec
push
add
loope
mov
out
jmp
ret
repz
push
lea
fcmovb
std
cwtl
dec
aad
adc
or
movsl
xchg
ss
inc
std
and
outsb
mov
aas
adc
ret
shll
jnp
push
hlt
shl
mov
loop
push
imul
fcoml
mov
dec
xchg
mov
push
mov
mov
ljmp
add
dec
push
mov
add
xchg
loopne
sub
sbb
add
sbb
adc
xchg
cmp
enter
cs
cmpsl
shrb
push
sarb
out
adc
push
arpl
mov
or
push
das
dec
or
fcoms
lods
test
lcall
and
test
decb
jmp
add
add
je
lahf
out
cli
or
clc
loop
call
scas
clc
call
add
fmull
sub
and
test
orb
xchg
mov
xchg
lcall
call
mov
xor
int3
cmp
gs
ja
scas
mov
and
jo
fsubr
int3
cmp
fdivp
xor
les
ret
ret
call
jmp
cmp
cmp
sub
or
inc
hlt
cmp
jp
mov
and
je
xchg
cmp
hlt
mov
and
sub
or
inc
dec
jno
cmp
into
mov
push
call
das
dec
loop
jo
push
je
add
jge
mov
xor
jne
pusha
push
incl
addl
jmp
or
mov
dec
mov
jmp
sub
push
inc
clc
jne
push
ret
inc
pop
push
adc
in
push
test
jg
jmp
xor
leave
pushl
inc
or
leave
and
xor
cld
jmp
xor
in
cmp
sub
push
cmpsb
repnz
xor
sub
pop
mov
or
in
clc
mov
shlb
shrl
ja
addb
jmp
mov
dec
das
idivl
jb
outsl
filds
mov
xchg
pop
movsl
mov
jne
mov
sbb
mov
dec
js
and
pop
adc
cli
std
clc
ret
sbb
cmp
cld
jne
lcall
ret
add
cs
add
push
push
pop
sub
mov
push
pop
test
jl
xor
les
pop
mov
push
inc
fnsave
sub
call
mov
test
inc
inc
test
insl
adc
and
enter
mov
inc
shrb
add
xor
xchg
cmpsb
add
sub
clc
inc
repz
ror
cmpb
add
aaa
sub
mov
sbb
fmuls
std
jmp
push
push
cmp
insl
mov
fidivs
xor
add
enter
pop
fcompl
add
fs
mov
xchg
mov
aam
loopne
mov
add
mov
mov
mov
push
call
mov
cmp
ds
les
mov
lods
scas
test
and
add
std
mov
push
imul
ljmp
push
mov
fmuls
stos
aam
adc
ds
add
or
pop
nop
sbb
movsb
enter
inc
inc
in
inc
lcall
mov
jl
fnstsw
je
pop
lods
call
cmp
call
ljmp
mov
cmp
or
and
dec
jb
inc
jmp
xor
dec
imul
cld
movl
and
movb
add
xchg
fdivrl
lcall
push
bound
pop
cmpb
adc
jne
rolb
cmp
mov
fistl
cltd
ljmp
lock
sub
push
ss
jnp
add
inc
add
fsubl
add
mov
dec
mov
xchg
add
jmp
and
pop
pushf
cld
inc
push
jg
push
insl
add
xchg
inc
or
push
jge
lods
nop
mov
add
xor
pop
xchg
cmp
add
loop
jg
push
push
pushf
jmp
lock
outsl
pop
cmp
cmp
ret
mov
adc
orl
xor
shll
add
xlat
int
lds
add
cmp
inc
gs
mov
sbb
push
sbb
dec
jmp
pop
pop
mov
pop
push
es
dec
push
lcall
sub
fidivrl
and
push
data16
dec
mov
lea
sbb
cmp
paddb
bound
xchg
or
loopne
lea
das
jp
push
cld
cs
inc
into
xchg
dec
inc
pop
push
sub
cmp
mov
cmp
mov
add
sub
call
call
aam
loop
sbb
aad
gs
sti
mov
dec
incl
inc
push
pop
cmp
mov
cmpsl
cmp
orb
adc
push
cwtl
test
fisubrl
pushl
cli
add
jo
mov
dec
jge
push
xchg
aam
popa
sub
dec
or
xor
enter
je
xor
cmpsb
pop
add
es
inc
xchg
fcomi
jo
adc
fdivr
ret
mov
aas
shl
iret
mov
fists
ret
and
in
jbe
inc
adc
rorb
or
mov
popa
gs
adc
mov
jno
std
das
sub
adc
clc
lea
adc
fiadds
dec
nop
add
in
loope
fbld
rorl
ljmp
mov
rorb
lock
dec
dec
jmp
incl
push
inc
cmp
and
jnp
adc
pop
call
push
xor
or
push
push
mov
popa
pop
loopne
pop
push
bswap
fsubs
jmp
outsl
or
sti
in
push
mov
cmp
jle
mov
fcoms
mov
mov
mov
lcall
cmp
and
jmp
test
pusha
lods
mov
jecxz
idivb
cmp
adc
or
imul
push
arpl
cli
add
lret
add
test
wrmsr
loop
mov
int3
pushf
adc
icebp
mov
adc
outsb
jo
clc
in
loope
add
fs
cmp
dec
std
int
push
inc
cmp
or
inc
test
push
mov
pop
pop
or
ja
mov
sti
sub
out
repnz
pand
addb
rclw
hlt
jne
std
sub
mov
inc
pop
or
movb
inc
pop
clc
dec
mov
push
stos
roll
push
push
mov
test
push
out
adc
icebp
shlb
cmp
push
add
mov
sbb
push
lock
or
jbe
jb
or
imul
xchg
scas
and
sbb
mov
or
andb
in
push
fs
add
loop
push
or
ja
shrl
imul
jb
jg
loop
push
call
inc
sbb
jb
dec
mov
mov
cmp
cli
pop
adc
das
cld
pop
inc
pop
inc
mov
mov
cmp
adc
adc
mov
ljmp
shr
fidivrl
add
xchg
sahf
loopne
mov
push
pop
fisttps
test
mov
push
ret
or
sbb
cs
sub
mov
push
sub
and
push
imul
sbb
mov
aam
sbb
or
cmp
xchg
adc
inc
shrb
ret
add
and
or
je
or
mov
push
icebp
scas
les
cmp
loop
jle
xor
test
in
pop
aad
inc
cwtl
pop
enter
dec
jmp
test
aas
lret
add
data16
xor
mov
inc
cld
mov
inc
pop
or
adc
mov
push
nop
fisubs
add
imul
adc
call
add
mov
push
or
clc
xor
lret
hlt
jb
push
stos
inc
sub
sarl
jo
mov
das
and
outsb
xchg
pop
mov
mov
stos
add
notb
ds
aad
mov
in
push
push
movsb
incl
aas
addb
ljmp
add
cld
push
or
mov
cs
pusha
and
mov
es
pop
scas
and
inc
fidivs
and
mov
loop
pop
jno
jmp
data16
mov
lds
push
push
mov
add
jne
sub
cli
add
sbb
inc
mov
subb
mov
pusha
insl
divb
mov
aas
es
push
cltd
pop
push
dec
cld
popf
loope
and
cmp
fmuls
add
jne
xor
jb
enter
cmp
or
in
mov
sar
imul
adc
lods
pop
pushl
idivl
mov
xor
push
cld
cmp
pop
pusha
xor
je
in
cli
add
xchg
push
nop
out
push
and
sti
fldl
push
les
fs
lret
loop
and
push
push
incl
cmp
jmp
sbb
or
jb
xor
hlt
or
inc
movsb
jp
int3
or
and
movl
adc
out
pop
mov
or
les
clc
outsl
or
pop
out
call
shr
add
and
addl
imul
repz
pop
clc
mov
mov
add
insb
add
add
loopne
movsb
je
and
dec
mov
outsb
adc
xchg
inc
or
je
sbb
sub
add
in
out
dec
ret
push
adc
pop
add
xchg
sbb
xchg
or
mov
add
mov
jge
pop
ja
dec
or
push
add
fldt
sti
je
das
jmp
test
adc
mov
cmp
leave
jl
mov
rolb
out
push
out
fisubrl
mov
jmp
js
icebp
inc
pop
sbbb
push
push
pop
int3
je
enter
mov
ljmp
or
enter
addl
test
decl
rorb
inc
cmpsl
lcall
inc
add
xchg
mov
add
fdivp
inc
xor
divl
call
movsl
in
mov
inc
cld
cmp
ds
mov
dec
lock
cmp
xchg
jmp
xchg
sahf
mov
dec
add
sub
xchg
pop
add
call
cmp
sar
clc
insb
push
cmp
rcl
inc
test
push
je
pusha
and
lds
arpl
jne
pop
loopne
or
cmp
mulb
shrb
pusha
sarb
mov
push
movsl
in
lcall
lds
shll
cmp
cmp
adc
icebp
cs
divb
fidivl
in
fnstenv
loope
loopne
add
push
pop
imul
imul
mov
add
add
pop
xchg
out
les
cmp
inc
push
mov
dec
push
jno
sub
repz
pop
sub
sub
in
inc
push
or
jg
inc
incl
or
jmp
jmp
or
pop
or
aad
mov
lret
lock
inc
and
fldt
sbb
dec
inc
jae
sub
push
int
jne
movsb
push
add
push
pop
fisttps
push
stc
ficoml
push
sbb
loop
cmp
sub
mov
push
fdivs
and
test
divb
enter
mov
pop
pop
es
fisubrs
cli
xchg
out
add
adc
lds
mov
test
push
inc
cli
lcall
inc
rcll
lods
add
lea
imul
gs
add
int3
loope
pop
sub
xor
push
test
or
sub
dec
sbb
xchg
pusha
nop
cmp
cmpl
jl
adc
ljmp
lcall
add
cmp
mov
xor
cli
orb
add
test
in
fs
lcall
mov
jmp
lea
adc
or
jo
pop
push
cmc
push
jmp
mov
and
stc
addl
jmp
mov
xor
add
out
cli
fbld
jb
enter
call
stc
out
and
jg
or
in
or
jbe
push
mov
fwait
orb
call
adc
push
xorl
int3
xchg
inc
clc
out
mov
jge
cld
pop
adc
data16
adc
ljmp
or
cwtl
add
adc
adc
or
loopne
fcomp
inc
dec
push
lods
sbb
fdivr
add
pop
je
les
mov
test
outsb
adc
leave
push
insl
test
dec
sbb
andb
rcrl
and
mov
dec
mov
mov
inc
pusha
out
mov
push
inc
or
xchg
push
scas
jb
test
dec
mov
imul
mov
std
int3
imull
adc
mov
aam
loopne
adc
popa
into
pop
mov
cmc
pop
mov
cld
pushf
test
lea
shlb
test
mov
je
mov
and
add
add
lea
clc
adc
push
or
or
cltd
sbbb
fs
xchg
dec
cmp
pop
inc
jmp
lret
add
mov
dec
adc
decb
ret
mov
pop
je
push
push
mov
xor
dec
testl
adc
mov
jge
jmp
cs
dec
or
cld
in
testb
dec
movsb
popl
xor
mov
ss
mov
mov
mov
jnp
shr
mov
shll
sbb
push
add
adc
stos
add
js
outsb
xor
add
sbb
ljmp
pop
jg
push
dec
movsb
push
fs
xchg
xchg
jmp
push
mov
cmpsl
adc
jae
fiaddl
push
inc
stos
stos
inc
xchg
sub
add
shll
cld
cmp
inc
aaa
jo
push
bound
in
sahf
mov
jno
xchg
push
data16
push
stos
xchg
jmp
adc
add
data16
xchg
pop
xor
jg
and
push
adc
int3
pusha
ss
push
or
js
nop
sbb
in
sub
cmp
add
mov
xor
push
cmp
push
test
adc
pop
or
add
inc
sbb
call
sbb
notb
lea
popf
pop
mov
shlb
xchg
pop
mov
pop
push
pusha
mov
adc
or
cmpsb
in
xchg
in
adc
pusha
sub
sub
sbb
pop
fisttpl
jmp
and
sub
add
incb
push
dec
loop
call
adc
mov
fists
mov
fcompl
adc
adc
lcall
pop
jl
das
adc
sub
call
xchg
fs
jg
mov
test
scas
push
push
cmp
call
fidivs
cmp
xchg
pusha
cmp
cmp
hlt
aas
es
jne
mov
cmp
loopne
test
outsb
cmpsl
les
pop
mov
mov
js
mov
mov
add
sub
shlb
xor
dec
lea
idivl
sbb
adc
xor
lret
in
push
pusha
add
int3
jmp
and
scas
adc
ljmp
push
xor
pop
dec
add
inc
and
cmpb
ret
inc
filds
cmp
add
bound
jl
xor
mov
or
jge
repz
add
xchg
push
and
mov
adc
int3
rcr
iret
fbld
stos
adc
loopne
dec
test
cld
sub
mov
mov
call
imul
loopne
das
in
push
cmpsb
or
or
fs
outsb
es
push
pop
mov
adc
sbb
fcomps
negl
inc
adc
mov
dec
jbe
push
or
imul
nop
inc
mov
sbb
lret
mov
scas
lock
xchg
hlt
mov
or
push
push
mov
adc
repnz
inc
push
jl
push
ljmp
mov
adc
push
mov
cmp
je
xor
mov
jne
adc
xor
out
inc
mov
mov
test
invd
mov
xchg
ja
sbbb
cmpsb
lock
jne
pop
repz
push
inc
mov
pushf
es
pop
ret
mov
lret
subb
cwtl
stos
mov
inc
mov
ret
or
call
or
and
pop
and
dec
adc
mov
pop
bound
fwait
or
in
jno
data16
push
inc
movl
push
rorb
push
or
add
jae
mov
ljmp
out
je,pt
sarb
add
test
les
nop
ss
in
inc
push
je
push
mov
mov
mov
and
cmp
jmp
pop
sbb
dec
adc
mov
outsb
test
xchg
cmp
jbe
lods
adc
jno
cs
jno
fimull
xor
fbld
aad
cld
into
and
adc
lds
pop
add
mov
or
das
push
add
pop
insb
rcll
fadds
fdivr
and
stc
cmc
andl
dec
clc
ret
lret
xor
inc
adc
cmp
ljmp
push
cmp
xor
xor
and
lret
sub
adc
pusha
lea
aas
icebp
push
jle
dec
fidivs
nopl
adc
jmp
sub
mov
push
rclb
and
jmp
add
push
mov
ds
jns
popa
xor
mov
jno
mov
mov
cmpb
cmp
repnz
add
push
xchg
mov
ljmp
jbe
jo
xor
je
or
push
dec
lods
xor
cs
mov
fildl
adc
and
add
sbb
cmp
inc
addl
push
dec
push
sub
rclb
xor
outsl
jmp
leave
fidivrl
loopne
insl
sbb
mov
loopne
mov
xchg
mov
imul
das
call
repz
add
add
and
sbb
lock
or
jg
fimuls
fisttpl
ds
jmp
aaa
test
mov
mov
inc
loope
pop
inc
call
fmulp
cmp
adc
mov
shlb
negb
mov
mov
out
and
adc
std
ret
cld
cld
aas
lock
data16
loope
addl
mov
mov
and
jae
shl
pop
test
dec
mov
mov
pop
lea
jno
pop
xchg
pop
mov
sbb
and
cwtl
mov
push
and
jecxz
mov
and
jg
sbb
in
outsl
dec
lock
or
adc
adc
push
xor
filds
push
pop
mov
call
fs
in
rolb
dec
jo
pop
ret
mov
notl
push
loopne
imul
mov
add
xor
jle
add
lods
lret
scas
sbb
add
out
add
movl
lods
fmuls
enter
test
sbb
test
pop
outsb
or
in
xor
add
xchg
sbbb
mov
movsb
mov
and
scas
mov
mov
mov
pop
push
jae
mov
and
test
mov
pop
mov
cmp
test
std
pop
push
lcall
ds
iret
mov
pop
and
adc
aaa
aaa
popf
out
mov
ret
test
mov
add
rcll
clc
das
mov
jo
cld
addl
xchg
sbb
lahf
mov
movsb
xchg
shr
repnz
mov
pop
lahf
mov
and
das
push
sti
notb
or
push
cli
push
mov
lock
es
sbb
sbb
sub
pushf
lret
and
push
mov
xor
repnz
cmp
cli
insl
pushl
call
ljmp
cmpsb
mov
adc
shlb
pop
jbe
inc
add
das
lods
scas
push
inc
fs
bnd
into
les
inc
cmp
mov
sti
mov
xor
movaps
mov
add
sarb
adc
mov
fdivr
test
divb
decl
lcall
sbb
test
aas
pushl
jge
cli
or
testl
movb
xor
outsb
test
mov
pop
mov
std
lea
aas
adc
sub
mov
repz
jb
push
flds
lock
data16
mov
cs
inc
bound
test
push
fsubs
and
mov
leave
cmp
jp
outsl
lret
mov
inc
mov
pusha
mov
or
movl
fsubrl
ficoms
popf
or
jp
into
fmull
mov
repz
mov
out
mov
or
adc
adc
sub
cmp
dec
ljmp
rorb
pop
loope
rorb
add
movsl
in
loope
cmp
inc
and
ss
jne
add
mov
addl
shlb
decl
and
xor
and
xor
mov
mov
stos
or
insl
or
inc
pusha
add
and
add
mov
dec
mov
ds
jmp
or
lcall
push
lea
sub
inc
add
push
mov
xchg
lea
std
loop,pn
scas
and
mov
mov
movsb
xchg
mov
push
subb
aas
mov
mov
inc
orb
mov
adcl
loop
inc
mov
mov
dec
daa
or
test
mov
dec
or
inc
std
and
movsl
add
fisttpl
or
jle
push
loop
testb
mov
call
adc
movsb
lret
mov
mov
fs
mov
push
pop
ja
mov
or
fiaddl
mov
jo
push
clc
mov
sub
push
loopne
dec
cmp
and
ss
shll
pusha
fsubs
syscall
test
sub
push
sti
inc
cmp
mov
jl
cld
xor
inc
inc
and
lock
jmp
jo
mov
orb
adc
shrl
icebp
add
pop
shl
pop
push
add
aad
mov
jecxz
push
paddb
push
fsub
mov
add
cli
cmp
call
or
out
adc
cltd
and
adc
add
scas
xchg
lods
push
cld
inc
sahf
aas
mov
cmpb
fimull
repz
mov
mov
push
jae
jl
subl
je
in
sbb
lcall
adc
pop
ds
movsb
clc
aas
sar
xor
mov
outsl
and
cld
addr16
rcrb
and
lock
xlat
je
aam
fs
cmp
movsl
xchg
outsl
lea
pop
xor
and
add
and
ss
cmp
call
ret
push
adc
mov
mov
jae
jmp
call
push
es
das
push
jne
and
push
clc
sbb
lods
inc
rorl
mov
xchg
les
mov
movsl
les
dec
sub
inc
loopne
xchg
and
daa
jae
xor
adc
dec
fsubrl
call
inc
addb
stc
hlt
rcl
adc
or
out
mov
adcl
lea
sti
inc
xlat
decl
mov
mov
adc
and
or
pop
lods
xor
xchg
mov
popf
lods
and
mov
xor
inc
fisubl
mov
decb
test
jae
and
xchg
push
push
sbb
popf
test
lcall
lock
notl
xor
dec
aad
mov
add
pusha
js
push
xor
les
inc
repz
test
add
rorb
decl
sub
fs
jb
inc
dec
std
sbb
pushw
ret
cmpsl
xchg
nop
dec
ss
mov
adc
adc
push
arpl
pop
dec
pop
cmp
or
xchg
pop
push
sub
jp
test
or
adc
mov
sbb
xchg
push
add
xor
std
mov
bnd
xchg
sarb
cld
add
mov
je
mov
decl
inc
pop
add
stos
inc
int3
std
pop
je
sbb
enter
push
cmp
mov
xchg
pop
sbb
jp
dec
or
in
push
add
mov
cli
sbb
adc
add
xor
je
pop
push
adc
into
add
mov
fcomps
negb
fadd
pop
or
nop
push
add
or
jbe
std
test
pop
jge
xchg
jo
cmp
adc
or
dec
in
mov
add
sahf
xchg
jl
mov
mov
loope
xor
push
jecxz
sbb
xor
cmp
push
mov
mov
loop
xor
xchg
xor
aas
mov
cmpsb
push
lcall
cmp
mov
fsub
add
out
dec
aaa
dec
aas
jecxz
sarb
inc
test
adc
dec
in
or
je
and
mov
lods
cmp
add
cmp
sbb
push
movsb
pop
mov
sub
rcll
das
xchg
imul
xchg
fcomps
or
dec
mov
jo
adc
lahf
clc
inc
xor
cmp
mov
add
push
mov
mov
je
outsb
mov
push
sub
loopne
cli
fcomps
lods
push
cwtl
inc
punpcklbw
aam
pusha
lds
sub
orb
push
fiaddl
shrb
loopne
inc
add
orb
jg
je
mov
push
pop
and
jg
repz
push
add
xor
fsubl
push
mov
in
push
es
lock
test
jae
clc
mov
rcrl
add
inc
xor
aaa
mov
jno
hlt
and
out
pop
outsb
sub
es
aaa
mov
push
push
lea
outsl
fadds
cwtl
xor
mov
or
and
push
test
sub
scas
int
xor
push
outsl
insl
dec
pop
jmp
fidivrl
test
lock
mov
dec
imul
xchg
push
ror
or
movsb
faddl
outsb
push
aad
add
adc
pop
and
push
push
mov
or
or
or
dec
enter
push
cld
add
add
dec
decb
dec
mov
pop
loopne
int3
cmc
lods
dec
add
mov
movsl
pop
xor
loope
adc
call
clc
nop
mov
and
les
inc
shlb
hlt
arpl
sbb
cmpsb
stos
push
xor
jmp
mov
jbe
xchg
dec
aam
pop
test
xchg
cmp
mov
adc
neg
test
or
cmp
loop
jmp
lods
inc
inc
inc
cmp
scas
mov
mov
or
cmp
mov
xor
mov
cmp
ficoms
ja
mov
call
sub
or
fdivr
or
jg
jge
mov
pop
outsb
push
aad
lods
insb
or
add
jg
rcll
and
xchg
xor
fcomps
mov
add
push
adc
call
adc
or
push
cltd
jne,pt
stc
add
lret
add
sahf
test
adc
loop
jmp
push
push
adc
mov
jl
push
test
push
xchg
jo
cmp
call
lock
std
and
sub
and
jge
clc
idivl
stos
ss
idiv
mov
pop
cmp
mov
sar
adc
inc
pop
xchg
mov
mov
dec
lods
lahf
ljmp
pop
and
mov
loope
jmp
mov
int3
pusha
test
add
push
jne
jp
and
lock
shll
inc
push
xchg
push
push
fstp
ss
xor
mov
add
loop
pop
lea
mov
mov
sbb
sbb
mov
loopne
sbb
aas
push
adc
mov
insb
and
xchg
sti
push
clc
mov
pop
sbbb
push
mov
pop
and
jmp
test
pop
adcb
add
out
leave
add
inc
pop
gs
lahf
jle
jp
hlt
les
outsb
cmpsb
pop
inc
mov
and
jecxz
and
adc
loop
jbe
out
fimuls
mov
js
pop
push
xchg
mov
icebp
pushf
push
scas
push
mov
sub
mov
and
notb
pop
adc
push
mov
and
jne
jne
pop
sub
test
inc
adc
mov
ja
mov
sbb
push
insb
push
sub
fsubrl
cwtl
mov
mov
cmp
xchg
sub
dec
sahf
stos
mov
dec
rolb
movsl
push
pop
add
add
jge
loop
push
push
adc
jmp
call
bound
addl
pop
fcmovu
std
les
push
mov
or
lret
pop
mov
push
inc
jb
cli
sahf
push
push
xorl
inc
pop
jge
push
rcrb
cs
repnz
cmp
and
les
mov
mov
cs
sub
jb
push
pop
mov
jb
lea
jae
sub
mov
pushf
daa
lcall
xor
pop
sbb
adc
popa
push
scas
lods
inc
inc
adc
xchg
in
dec
leave
ret
test
sub
xor
mov
add
enter
cmp
xchg
jle
push
sub
mov
outsl
data16
sbb
or
mov
adc
adc
sbb
int3
decl
fucom
scas
outsl
fiaddl
negl
hlt
sahf
insl
inc
clc
xor
clc
das
mov
in
lret
push
add
decl
pop
inc
fsubrl
pushf
out
mov
cmp
les
mov
xchg
les
es
hlt
push
daa
jbe
dec
fidivl
push
mov
xlat
jae
subb
inc
shl
jl,pn
sbb
mov
sbb
call
fsub
test
outsl
bound
pop
cmp
jecxz
add
mov
outsl
lcall
data16
inc
adcb
pop
movsl
call
scas
test
mov
jb
add
dec
icebp
push
xor
data16
not
lods
fcmovnu
fidivs
lock
cmp
in
jp
push
shll
cmp
mov
fdivrs
gs
push
mov
sbb
ss
mov
stos
inc
imul
cs
sbb
in
and
sbb
pop
cmp
sbb
pop
jmp
adc
or
fimull
out
mov
je
lock
mov
ret
out
out
xor
testb
call
xor
adc
les
rcll
fwait
inc
jp
sbb
data16
jne
mov
enter
pop
scas
cmpl
mov
int3
mov
stos
test
push
fcmovnbe
adc
jp
sub
testb
inc
or
push
or
inc
or
or
pop
mov
aaa
das
cli
mov
aam
add
jae
adc
xchg
jno
stos
mov
into
repnz
scas
es
mov
mov
add
sbb
ljmp
sbb
pop
inc
adc
jbe
pop
je
fs
pop
loopne
xchg
cld
data16
rcll
adc
or
xor
in
decl
jl
push
clc
xor
xchg
adc
cmp
aaa
adc
mov
lret
mov
push
sbbb
push
test
sub
or
add
cmpsl
fstpt
cwtl
dec
mov
loopne
movsl
lret
cmp
nop
outsb
mov
add
dec
shr
imul
inc
xor
jmp
shlb
jbe
punpcklbw
sar
lea
and
std
rcrb
add
jl
inc
lea
push
pusha
test
dec
sbb
aad
jbe
jbe
pop
lea
rolb
scas
inc
bnd
mov
pop
inc
mov
jmp
iret
pop
add
cmp
add
repnz
inc
sbb
out
dec
daa
or
cmp
popf
push
dec
xor
mov
test
xor
xor
push
inc
xor
adc
mov
fisubrs
and
push
or
ss
mov
mov
sbb
pop
adcb
or
mov
nop
cmpsb
sub
xorb
cwtl
les
je
int
lcall
xor
mov
inc
daa
sbb
mov
dec
xchg
rcl
pop
mov
push
lea
outsb
in
push
mulb
es
push
jl
xor
push
push
cli
push
insb
nop
ret
mov
mov
xchg
psubusb
daa
mov
add
push
cld
mov
adc
pop
pop
std
mov
mov
les
mov
cmpb
jmp
stc
push
scas
es
add
push
adc
test
add
rcrl
gs
push
mov
mov
dec
aam
in
xorb
les
sub
adc
cmp
orl
loopne
pop
shlb
outsl
rolb
rcr
push
mov
cmp
aad
xchg
inc
add
subps
sbbb
stc
sub
and
xor
dec
mov
ret
loopne
add
nop
dec
xor
inc
push
cmp
inc
stos
add
push
data16
pop
cmpb
outsl
mov
mov
inc
shll
dec
aam
xor
xor
or
push
sbb
in
dec
sti
scas
jmp
add
pusha
je
sbb
xchg
jp
call
test
mov
mov
push
nop
addl
subb
idivl
ljmp
mov
mov
pop
pop
addb
sbb
push
push
in
std
and
pop
adc
jne
push
cltd
inc
ret
cmp
dec
nop
sbb
dec
pop
sub
into
lds
popa
sub
cmp
mov
xchg
add
xchg
push
or
js
dec
push
les
or
inc
popa
xchg
in
cmp
loop
mov
aad
lret
add
aas
je
cmpsb
push
les
and
sub
jg
jmp
nop
sbb
loope
mov
pop
jmp
popa
adc
call
push
in
dec
add
and
je
ss
int3
outsl
leave
mov
inc
push
xor
and
add
fwait
add
cld
add
xor
lock
insb
in
testl
mov
jg
inc
in
and
dec
fdivs
or
test
jl
adcl
dec
inc
inc
xor
mov
adc
cmp
xor
bound
dec
cmp
push
sbb
jbe
dec
xchg
ficompl
bound
sbb
or
push
jnp
pop
sbb
push
mov
adc
mov
sbb
dec
scas
sub
inc
adc
add
ret
or
bound
mov
dec
test
lock
aad
mov
mov
data16
cmp
push
aad
std
mov
sar
sarb
clc
scas
aas
clc
add
push
dec
mov
cmpsl
or
ljmp
lea
fists
lret
js
shll
adc
ret
and
pop
push
xor
pusha
mov
pop
pop
add
nop
dec
cmpsb
sub
mov
mov
mov
imul
sbb
jo
push
leave
es
sbb
mov
clc
call
gs
test
adcl
xchg
lea
inc
incl
push
mov
call
jmp
imul
clc
outsl
and
add
mov
add
or
aam
dec
inc
pop
mov
xor
outsb
dec
decl
xorb
add
inc
loopne
fstps
ja
in
inc
pop
arpl
test
test
jmp
test
mov
push
cmp
cmp
add
jb
or
add
mov
cmp
rorl
xorl
sbb
inc
xchg
cmc
test
jl
loopne
cmp
mov
or
push
or
fadd
sub
or
sub
adc
fcoml
fisubrl
push
lcall
ja
fwait
push
cmp
mov
fistpll
dec
cmp
jp
test
mov
cmc
adc
rolb
loop
cwtl
dec
adc
push
cld
jo
call
adc
mov
call
inc
call
imul
dec
in
mov
push
nop
push
inc
add
add
mov
hlt
mov
pop
repz
inc
inc
dec
jmp
mov
cmp
aad
xchg
into
xor
out
jae
jg
aas
aam
repz
lock
inc
pop
cmp
add
add
pusha
mov
and
add
mov
je
xchg
mov
lcall
test
inc
jae
xorb
fwait
dec
and
aam
push
int3
les
jmp
stc
cmp
hlt
push
jle
adc
popa
rcrb
xlat
popf
sbbb
js
fs
mov
outsb
xorl
mov
xchg
insb
imul
int
add
xor
push
in
test
push
loop
xchg
test
adc
ret
lock
pop
adcb
inc
fcoms
es
pop
sbb
mov
inc
pop
loop
rol
mov
push
push
jb
jne
aas
xchg
clc
pop
inc
mov
xor
cld
xor
fs
push
testb
loope
ret
cld
or
and
jmp
inc
push
and
dec
mov
inc
test
dec
stos
test
xor
je
and
mov
hlt
mov
fwait
rorl
rolb
out
inc
push
shlb
or
xchg
mov
orl
pop
cmp
adc
xor
jnp
push
aam
sbbl
nop
pop
call
scas
and
pop
aaa
jno
not
incb
mov
sbb
js
pop
pop
scas
sub
jo
mov
mov
test
sub
inc
icebp
add
adc
insl
and
testl
cli
mov
sbb
clc
scas
outsb
xchg
movsl
inc
add
clc
in
xchg
std
cmp
or
push
and
push
bound
push
lahf
rorb
inc
call
sbb
inc
cs
rorb
jmp
cmp
cmp
and
popf
push
push
jp
int
push
mov
ret
sub
rol
dec
cmp
je,pn
in
push
dec
xor
inc
cld
or
pop
push
mov
adc
lods
xchg
pop
dec
pop
mov
jne
cld
lock
fmull
mov
sti
cmp
loopne
lret
test
mov
sbb
inc
sub
fstpl
mov
inc
mov
push
std
popf
andl
pop
fwait
inc
adc
push
inc
js
ljmp
aam
shl
sub
inc
push
icebp
add
push
or
cmp
adc
jecxz
mov
xchg
jle
xor
push
shrb
std
push
xor
jb
les
xor
add
and
fiaddl
sub
add
clc
inc
jb
sbb
mov
sub
cmp
mov
fcompl
add
jl
sbb
push
adc
sub
test
js
rorb
inc
or
sub
sub
adc
mov
sti
incl
push
xor
bound
add
inc
and
test
ds
test
mov
stc
or
push
pop
inc
sbb
ds
ud0
pop
inc
inc
cmp
mov
adc
std
or
mov
decl
push
cld
mov
xor
push
inc
mov
push
add
xchg
inc
pop
dec
loope
lret
into
adc
ret
rorb
fdivr
dec
sahf
mov
xchg
fsubl
add
fmuls
xchg
std
inc
ror
in
mov
int3
push
cmp
jno
je
out
sub
cmp
mov
loopne
test
mov
out
mov
pushf
and
push
sub
clc
dec
jg
xor
les
add
mov
fs
fidivrl
cmpsb
sub
pop
add
pop
repnz
test
jne
mov
cld
divb
pop
mov
or
mov
sbb
stc
mov
std
xor
inc
add
orl
and
les
mov
mov
testb
mov
orb
pusha
into
jbe
xchg
adc
cmpsb
push
cmp
stc
sarb
inc
arpl
xor
xor
or
fs
add
sub
out
cmp
xchg
mov
jle
dec
sbb
or
mov
loop
add
add
cld
scas
adc
pop
incl
push
outsb
add
jmp
dec
divb
dec
sub
xor
pusha
sahf
dec
arpl
add
push
mov
push
cld
add
xorb
test
cmp
lods
pop
mov
jmp
mov
popf
ret
scas
sti
ljmp
adc
push
add
push
aas
loopne
or
lock
arpl
fmuls
xchg
mov
ds
or
or
push
add
jne
das
orl
and
sub
and
adc
ja
incl
xor
paddq
adc
push
pushw
jb
inc
xorl
clc
int3
xor
subl
mov
scas
cltd
xor
push
out
movsb
ja
je
push
insl
jg
clc
outsl
pusha
sub
pusha
leave
add
adc
push
dec
inc
cli
or
test
add
push
fists
adc
and
rclb
jle
and
pusha
testb
adc
bound
sarl
xor
dec
call
cmpsb
push
push
scas
lea
call
jmp
ss
test
or
mov
sbb
mov
inc
or
push
mov
mov
ret
sbb
xchg
cmpb
mov
or
xor
mov
jb
xor
adc
call
add
ret
incl
ficomps
inc
xor
stos
cmpsl
xchg
mov
sub
pusha
js
push
lock
bound
add
add
mov
push
sub
inc
push
out
sub
cmp
adc
imul
std
fwait
mov
xor
inc
mov
lcall
roll
pusha
sbbl
mov
jle
pop
mov
push
jo
push
aaa
movsb
rcrb
sbb
or
inc
aaa
mov
cmpsl
jo
and
js
inc
int3
push
out
cmp
out
je
sbb
std
mov
das
fwait
and
fucomip
fcomip
lods
in
pushf
dec
cmp
maskmovq
testl
cmp
rcrb
push
adc
imul
add
mov
mov
add
inc
add
call
outsb
push
in
adc
sahf
dec
imul
popf
push
xchg
fildl
adc
jl
je
mov
inc
jecxz
pop
stos
add
dec
lds
mov
loop
xchg
adc
adc
sub
stos
push
nop
pop
data16
cmp
outsl
pop
fcmovnbe
xchg
shl
data16
push
add
xor
jg
push
push
enter
stc
punpckhdq
or
in
adc
fs
ljmp
loopne
sub
fcmovbe
ficoms
out
dec
int3
push
ljmp
add
and
mov
pop
lea
mov
inc
test
in
sahf
faddl
lods
testl
rcrl
cmp
xor
or
test
adcb
rcr
rorb
cmp
outsb
shrb
inc
mov
sbb
and
aam
dec
addr16
dec
clc
adc
mov
cli
or
sarl
inc
jo
add
test
add
mov
loope
sub
pop
cli
paddb
jno
xchg
hlt
push
push
sbb
lock
icebp
test
or
push
jp
into
adc
push
mov
mov
mov
pop
scas
cs
data16
clc
push
notl
inc
or
cli
bound
adc
incb
faddp
adc
or
popa
hlt
fisttps
jl
xor
loop
lcall
mov
stos
add
adc
ret
jae
lods
xchg
and
add
jge
and
ja
add
hlt
fcomps
inc
mov
mov
jb
mov
inc
arpl
das
xchg
movb
mov
inc
jmp
jg
cld
out
cld
xor
imul
mov
in
fucomip
mov
test
shrl
sub
inc
mov
push
pop
test
xchg
in
cld
jb
icebp
andb
push
xor
addb
js
or
fsubrp
addl
cli
test
aaa
pop
enter
in
xor
add
add
fisubrs
and
xor
or
lar
incl
adc
jmp
add
and
adc
fldt
inc
push
or
or
and
mov
inc
pop
mov
sub
xchg
jbe
push
push
nop
cltd
mov
stc
lea
xchg
or
orl
sbb
adc
inc
sub
add
xor
sti
add
push
mov
xor
mov
xchg
cwtl
inc
adc
cli
in
push
jmp
add
pop
mov
pushf
push
mov
in
fistpll
movb
adc
aaa
lock
cmp
jmp
roll
jmp
pop
mov
cli
pushw
out
jge
xor
and
cmc
incl
loopne
push
popf
add
jmp
jb
add
and
mov
add
call
and
out
and
cli
pushf
xor
add
push
hlt
cmp
scas
fidivrl
or
add
psraw
aaa
mov
aam
mov
jg
mov
and
into
cmp
push
lret
notb
jmp
push
push
rcrb
jle
inc
imul
lcall
clc
lret
jb
or
pop
sub
data16
pop
pop
sbb
into
mov
xor
pusha
test
iret
dec
je
cli
cs
movsb
xchg
loopne
outsb
add
fidivrs
test
push
cmp
test
std
incl
mov
push
inc
xor
sbb
add
and
jge
add
mov
loopne
pop
xchg
ss
lcall
mov
and
adc
adc
lea
insb
fdivs
sub
pusha
lock
leave
add
je
adc
js
pop
icebp
stos
dec
jp
push
xchg
xchg
in
and
test
or
lea
mov
jl
scas
mov
daa
mov
stos
cmpsl
enter
sahf
addr16
test
push
sahf
xchg
mov
add
add
test
mov
lock
cli
dec
sub
and
mov
jae
mov
std
pop
fs
outsb
movsb
add
push
test
js
fildl
je
mov
arpl
push
fistps
and
jp
je
pusha
pop
rorl
adc
test
push
mov
adc
mov
inc
mov
sbb
add
dec
sbb
mov
jge
mov
adc
add
nop
test
sbb
lahf
or
xchg
inc
pop
add
sub
sbb
call
jne
sub
mov
or
inc
inc
or
popl
cmp
lock
mov
movsb
inc
dec
lret
fwait
pop
cmp
repnz
lock
and
js
inc
sbb
mov
mov
push
xor
sbb
cmc
insb
inc
call
push
cmp
in
fistps
and
inc
inc
xchg
push
and
lods
les
sahf
add
pop
fwait
aam
push
mov
cmp
add
enter
push
sbb
std
testb
mov
inc
lcall
jbe
jp
loopne
loopne
data16
pushf
test
mov
data16
out
aam
adc
mov
pop
mov
in
jle
adc
xor
test
incl
leave
mov
movl
jmp
loope
rcrl
sbb
test
xchg
fistpl
cli
test
call
in
les
out
call
mov
outsl
clc
xlat
iret
inc
pop
xor
repnz
add
jle
jbe
fisttpl
test
add
test
and
jb
clc
les
xchg
adc
pushf
shl
data16
jg
jle
fisubrs
adc
test
les
sahf
in
and
loop
mov
or
jle
and
fisttps
mov
lahf
out
inc
cmpsb
adc
add
cld
xor
test
and
push
fcoml
mov
in
pop
push
push
jne
addr16
push
pop
cld
dec
pushl
idivl
mov
cmp
sbb
add
add
out
nop
jmp
call
push
cld
adc
mov
scas
decb
cld
in
inc
lea
lea
gs
inc
adc
incb
cmp
clc
lock
push
push
scas
push
or
push
xchg
fsubs
pop
sbb
subb
cwtl
cs
cmp
cmp
insl
push
xchg
test
cmp
and
bound
outsb
xchg
loope
push
incb
inc
fsubrs
inc
xchg
insb
loopne
arpl
add
scas
jo
pop
cmp
roll
std
xchg
testb
pop
pop
movlps
cmc
or
push
inc
jmp
loopne
push
pop
shll
sbb
push
or
lock
and
mov
loope
cli
dec
fcom
popf
fs
movsb
sub
in
xchg
sbb
push
inc
and
fstpl
xor
orb
shl
dec
dec
push
std
xor
pop
stos
push
cld
inc
jmp
sbb
inc
leave
je
je
pop
icebp
mov
xchg
and
sahf
das
cmp
mov
rorb
outsl
pop
lock
icebp
aaa
push
jae
inc
jne
sbb
std
jg
les
mov
jmp
jne
rcrl
test
les
cli
fsubrp
or
sbb
mov
and
popf
jge
lea
mov
aaa
sbb
test
out
fiaddl
into
cmpsb
or
pop
subl
cmp
xor
into
or
scas
lods
add
mov
enter
das
inc
xchg
cmpsb
stc
mov
mov
push
dec
ret
je
inc
add
sarl
mov
adc
xchg
ret
and
push
mov
out
mov
cmp
enter
cld
pushl
test
pop
sbb
cmpsb
scas
adc
sar
mov
aas
pusha
jmp
mov
aam
incb
sbb
fucompp
xor
pusha
sti
or
pmaxub
dec
mov
fidivrs
movsb
mov
pushl
push
or
xor
sub
lock
clc
inc
push
ret
xchg
mov
jmp
sbb
testb
insl
incl
jmp
mov
rol
dec
aaa
filds
popa
ss
pop
testb
sbb
mov
xchg
rclb
cwtl
and
cmp
or
inc
cmpsb
out
and
pop
aad
popa
je
mov
dec
cld
jg
ret
sbb
test
sub
add
rorb
inc
push
subl
and
sub
enter
inc
fsubs
xor
push
inc
inc
xor
cli
fbstp
add
or
jp
cmp
or
sbb
popf
xor
out
sbb
imul
faddl
sbb
adc
fnstsw
add
inc
into
ret
inc
push
and
je
mov
test
pop
jno
incb
add
inc
test
fisttpl
xor
xchg
leave
mov
shrb
iret
xor
jge
ss
xchg
sbb
mov
cmp
push
fmuls
incl
ret
mov
int3
push
jmp
lret
fmull
push
test
enter
push
pop
icebp
adc
sub
push
std
mov
les
jne
and
mov
lods
pcmpeqd
call
mov
mov
call
es
sub
aaa
mov
jne
push
arpl
mov
data16
xchg
inc
pop
divb
mov
jb
imul
lds
std
inc
adc
int3
push
pushl
je
shl
test
jp
and
xchg
inc
xor
pop
mov
sub
lods
sbbb
movsl
cwtl
lret
inc
adc
dec
jl
or
scas
test
push
clc
xchg
inc
add
adc
mov
xor
sbb
dec
pusha
repnz
adc
mov
mov
loope
jp
lock
add
jmp
xor
mov
mov
add
scas
repnz
int3
test
mov
sbb
imul
insl
xchg
add
push
dec
mov
add
jb
add
mov
mov
mov
cld
fcomip
movsb
insb
stos
add
add
subl
push
xchg
jbe
clc
pop
pop
add
xor
jb
push
jo
jb
loope
mov
cmp
cld
fbld
cmp
loop
lcall
clc
inc
inc
pusha
mov
test
pop
push
aam
push
rolb
cmp
and
jo
inc
inc
pop
scas
js
adc
movsb
adc
adc
dec
fcompl
adc
push
imul
lea
push
icebp
and
test
and
in
pop
daa
imul
push
fildll
jmp
dec
data16
loope
call
mov
jmp
xor
and
adc
mov
dec
clc
pop
adc
cmpsb
sbb
cmc
add
test
pop
nop
push
cmp
je
push
vpcomb
mov
test
push
mov
scas
xchg
inc
push
adcl
sbb
mov
add
push
mov
mov
mov
nop
inc
mov
push
jmp
cmpsb
popa
jno
sbb
shr
fiadds
stos
sub
mov
xorl
lcall
sub
sysret
cmp
inc
mov
lock
add
and
bound
mov
push
icebp
dec
add
cmp
jmp
popa
testb
pusha
add
mov
or
js
adc
fmull
jno
data16
add
jmp
inc
mov
mov
xor
gs
mov
mov
adc
jge
mov
mov
ljmp
sbb
shrb
add
lea
add
or
dec
inc
pop
les
test
in
rcll
and
daa
dec
and
xor
add
adc
addr16
add
je
sar
and
and
adc
xor
xchg
cmp
add
and
je
add
push
dec
xor
ds
mov
lods
mov
sbb
scas
add
fdivrp
push
push
arpl
push
mov
test
sbb
nop
adc
add
cmp
cld
incl
xor
aas
sub
xor
pop
pop
insb
fists
stc
mov
mov
cmpsb
sub
out
jnp
in
mov
mov
pop
mov
push
push
add
dec
and
addb
or
inc
mov
test
movsb
lea
call
call
and
xor
push
stos
dec
sbb
mov
inc
or
jp
rorb
orb
jg
dec
mov
test
scas
pop
in
push
mov
decl
jnp
popa
fcoms
outsl
push
dec
mov
ljmp
mov
xor
int3
or
push
test
outsb
idivb
xchg
push
xor
cmp
aam
out
fbld
or
adc
daa
xor
cmc
jg
mov
jne
sbbl
outsb
pop
fsubl
das
clc
adc
add
mov
pop
xchg
mov
ret
in
inc
lock
iret
push
and
sub
adc
adc
sbb
aas
iret
andl
and
push
ljmp
js
xchg
testb
sub
dec
dec
or
or
clc
cmp
add
add
pop
or
movb
jae
shll
xor
insl
mov
mov
mov
ljmp
in
fs
push
mov
adc
das
adc
mov
add
or
add
push
push
clc
stos
push
enter
push
pusha
add
cmpl
stos
push
push
adc
xor
ret
and
cld
mov
lea
call
loop
mov
rorb
mov
and
test
push
cld
test
stc
xor
mov
jb
xor
xor
jg
add
dec
xchg
sahf
mov
add
mov
xchg
mov
mov
sbb
ret
pop
jo
dec
ror
adc
jle
pusha
or
push
clc
or
mov
inc
rolb
sarb
and
mov
cs
idiv
add
mov
jmp
jmp
je
pop
dec
mov
mov
cmovb
dec
lock
loop
js
push
add
pop
and
inc
nop
orb
pop
ljmp
adc
add
clc
sets
ret
shl
les
loope
add
es
mov
or
sub
sbb
mov
add
int3
inc
adc
and
jbe
outsb
ret
popa
aam
mov
pop
nop
add
rclb
add
and
xchg
mov
add
pop
push
xor
or
push
add
call
jge
inc
sar
cwtl
cmp
fdivr
xchg
add
pop
mov
adc
ss
psadbw
mov
pop
push
inc
adc
mov
sub
xchg
cli
icebp
shrl
jp
mov
negb
lea
sub
cs
clc
inc
push
jmp
shl
add
adc
pop
cwtl
cltd
sbb
stc
push
push
mov
hlt
push
or
add
mov
hlt
mov
and
jg
inc
cld
in
inc
add
mov
push
lcall
jmp
frstpm(287
sbb
mov
cmp
cs
fcoms
mov
lock
push
push
fyl2x
daa
ljmp
sub
mov
cld
das
mov
mov
pusha
mov
enter
cmp
je
xor
fdivrl
dec
stos
icebp
xlat
ss
jb
push
jne
jae
push
shlb
push
or
stos
movsb
jb
std
push
jecxz
sbb
movsl
jmp
dec
lret
or
out
push
mov
jae
repnz
fiaddl
sbb
pop
outsl
outsl
sahf
and
test
adc
mov
mov
add
mov
mov
aam
jne
pop
lea
pop
push
insl
and
orl
or
and
or
shll
or
pop
add
push
add
or
add
std
lock
rol
adc
cltd
mov
imul
orl
and
push
hlt
rorb
mov
mov
mov
jg
lds
in
push
test
and
ljmpw
ficoms
sbb
mov
ss
adc
je
inc
jmp
sbb
and
stos
movsb
cmp
sarb
inc
push
cmp
mov
leave
push
lock
push
shrl
lret
pop
das
mov
movl
cmpsb
testb
add
mov
ljmp
inc
and
push
nop
cmp
push
aaa
aas
mov
and
and
pop
mov
push
test
xchg
stc
in
call
cld
push
mov
mov
pusha
xorl
xchg
and
cwtl
int
add
add
add
out
dec
mov
frstor
cvttps2pi
les
cmp
push
inc
mov
aaa
negb
push
int3
ret
mov
into
mov
add
sub
sar
mov
decl
movsb
adc
addb
bound
cmp
push
inc
and
or
orl
add
je
mov
pop
dec
loopne
jp
pop
out
push
and
decl
push
mov
dec
push
sub
and
push
dec
push
jb
jne
dec
or
and
pop
inc
mov
push
lock
jmp
sbb
jb
mov
fisubrl
in
int
push
dec
add
sbb
xor
movsl
xchg
sbb
test
fcoml
or
cmpsb
scas
lret
jl
mov
aam
push
mov
jp
mov
out
shlb
loopne
mov
sbbb
jbe
es
shll
ljmp
in
sbb
shlb
fcoml
dec
je
imul
mov
and
arpl
or
clc
xor
inc
push
or
sub
add
daa
mov
cs
add
mov
in
inc
test
push
cmp
jge
push
in
pop
aaa
pop
sarl
bound
in
and
loopne
stc
push
std
outsl
adc
test
lret
call
pop
icebp
sbb
cli
sub
mov
mov
dec
inc
shrb
inc
hlt
add
cwtl
jae
test
mov
and
mov
psrlq
js
lcall
jecxz
add
cmp
or
add
mulb
and
clc
and
push
push
fadds
jb
push
pop
add
add
nop
push
xchg
das
aaa
jle
lock
adc
data16
inc
sub
jbe
push
sbb
lret
cmp
sub
inc
outsl
xchg
mov
orb
jp
cli
in
and
pop
and
std
lret
idivl
test
push
push
sbb
in
jmp
pop
shl
adcb
es
jmp
mov
out
loope
inc
ljmp
jb
inc
lret
xchg
fldl
xchg
pop
dec
cmp
adc
std
dec
ds
adc
bound
cli
stos
push
mov
subb
sub
cs
adc
clc
mov
testb
adc
daa
sub
mov
push
mov
gs
or
addb
adc
hlt
je
mov
add
sub
add
ljmp
loope
in
mov
cmp
cli
pop
sbb
or
incl
cmpsb
shl
lock
std
addl
jle
in
mov
jbe
test
sub
push
mov
outsl
or
add
test
xlat
adc
imul
je
nop
fwait
sarb
stos
cwtl
lcall
cld
cmpsb
pop
lock
push
popa
nop
adc
jge
or
shlb
add
dec
fsts
xchg
sahf
mov
mov
arpl
add
aas
mov
adc
adc
shlb
dec
adc
aaa
push
mov
clc
pop
je
sub
inc
mov
push
dec
pop
test
or
pop
dec
mov
lock
sbb
or
mov
clc
psadbw
idivb
nop
bound
cli
loopne
sbb
pop
ljmp
movsl
test
cmp
cld
mov
mov
inc
push
adc
fadds
sub
add
aam
push
out
icebp
or
add
sbb
icebp
sbb
add
test
mov
pop
mov
mov
adc
pop
lock
insl
inc
push
sub
and
add
movl
mov
pusha
aaa
adc
in
int3
sahf
mov
leave
call
or
dec
inc
cmpb
mov
mov
mov
aam
call
xor
icebp
cmpsl
mov
sbb
mov
or
bound
xchg
popa
scas
lret
mov
out
cmpsb
xor
imul
adc
adc
jnp
mov
daa
add
test
cmp
mov
nop
mov
dec
push
icebp
jbe
xchg
adc
sarb
mov
add
aam
adc
adc
ret
push
pop
mov
out
addb
xor
inc
pop
mov
sub
test
pop
insl
nop
insb
scas
adc
dec
xor
ss
je
xor
fiadds
jp
ja
repz
adc
push
in
pusha
das
lcall
cmpsb
jp
nop
mov
jns
cmp
add
bound
push
call
dec
mov
sub
shrb
imul
les
or
andb
sbb
in
outsb
testl
sbb
push
cmp
add
roll
orb
mov
dec
inc
cmp
cli
ss
and
or
add
sbb
and
hlt
fs
add
sub
cwtl
les
add
jae
or
push
dec
movsb
mov
mov
push
cmp
add
pop
add
mov
cmp
adc
loope
and
sbb
xor
push
adcb
es
push
or
mov
add
xchg
data16
mov
pusha
fs
add
pop
mov
sbb
lods
add
outsl
subb
stc
add
insl
mov
fisttps
sbb
adc
xorl
lea
jecxz
outsb
sub
sar
sti
ljmp
jb
and
call
cli
mov
insb
sbb
mov
mov
jbe
in
test
xchg
js
lods
xchg
enter
shlb
push
inc
push
dec
inc
cli
xor
add
jo
push
inc
lods
push
push
out
mov
pop
mov
ja
pop
and
ja
dec
adc
adc
pushw
dec
call
mov
xchg
fdivs
sbb
shrb
mov
enter
xor
insb
adc
jb
popa
jb
mov
outsl
pop
mov
xchg
cmp
out
push
sbb
cmp
or
dec
inc
das
jecxz
mov
push
mov
dec
unpcklps
mov
and
in
lock
xor
add
inc
popa
movsb
mov
and
mov
cmp
xor
leave
pop
dec
dec
inc
and
shl
outsl
jg
icebp
add
jbe
add
xor
inc
add
fisttpll
filds
dec
repnz
das
push
push
jmp
adc
add
or
pop
pop
dec
jb
fisttpll
pop
and
mov
call
les
test
int3
lds
out
add
imul
dec
push
ret
lahf
mov
cltd
pushf
mov
and
int3
out
push
ret
add
enter
jle
add
shrl
push
sbb
push
out
xchg
cwtl
xor
test
sahf
adc
nop
popa
call
sub
push
inc
sbb
test
inc
lods
add
add
sub
cmp
mov
pushf
mov
pushf
jbe
push
cld
les
inc
insl
mov
sahf
sbb
fistps
xor
pop
push
xor
jb
arpl
test
incl
jge
and
in
mov
pop
mov
ds
repnz
mov
rcrb
push
mov
inc
pop
adc
mov
rorb
and
fs
repz
push
pushf
mov
test
fmull
mov
lods
aam
push
add
mov
enter
sub
ss
ret
adc
mov
add
push
movsb
sub
push
mov
call
push
adc
decl
adc
or
cld
test
push
mov
jb
lds
adc
imul
dec
int
add
or
push
mov
sbb
xor
or
repnz
and
add
std
cmc
and
add
mov
pop
nop
pop
or
and
add
or
sub
sbb
push
clc
in
xchg
xchg
mov
sub
xor
pop
xchg
push
pop
enter
pushaw
test
stos
or
sub
mov
scas
inc
out
jb
leave
inc
testb
push
sbb
test
nop
inc
fildl
cmp
pop
mov
xor
test
lock
inc
mov
es
or
clc
xlat
jg
cld
mov
ss
dec
imul
lcall
push
mov
or
or
dec
cmp
jno
addl
push
clc
sarl
cmp
add
mov
inc
add
inc
jmp
mov
fcomps
fcomps
adc
inc
loopne
cmp
add
xorl
test
add
shrb
pop
push
movsl
pop
sarl
cs
cwtl
pop
adc
and
xchg
ret
adc
movsb
sub
ret
add
jae
xchg
sbb
push
fsubrp
fld
pusha
jb
ljmp
pusha
inc
jnp
or
inc
addb
test
sub
fwait
mov
clc
aas
push
in
adc
sub
xor
cmp
dec
icebp
adc
cmp
int3
cmc
ljmp
xor
pcmpgtw
cmp
dec
mov
cwtl
cmp
divl
add
xor
cwtl
pop
push
mov
xorl
orl
mov
cmp
jge
xchg
push
clc
insb
ds
ror
sahf
cmpl
xchg
test
sbbl
sbbl
sarb
mov
mov
adc
fistpl
jbe
cli
add
inc
xor
and
pusha
int3
cld
sahf
push
mov
pop
push
push
inc
lea
inc
xchg
out
or
cmp
aad
cltd
inc
pop
movsb
inc
lcall
push
inc
pop
inc
inc
and
xchg
lock
sbb
add
std
lahf
popa
jae
lock
sub
and
mov
cmpsb
push
xor
pushf
call
in
ret
push
mov
clc
test
aas
std
imul
rclb
jno
mov
lock
push
or
push
out
jae
adc
les
loopne
cld
int
repz
rolb
push
xorl
pop
mov
loopne
movsl
push
sar
add
inc
sbb
mov
sub
cmp
in
lcall
lea
and
mov
xorl
push
out
js
movsl
jmp
pop
push
testb
popa
mov
clc
adc
xchg
mov
add
mov
jmp
mov
cwtl
and
xlat
js,pn
cld
aam
add
jbe
popf
pop
sbb
and
sub
mov
push
sub
mov
push
shl
negb
pushf
xchg
add
in
jl
mov
in
pop
add
push
stos
cmp
mov
fs
fildll
inc
mov
adc
call
add
insb
push
and
mov
gs
mov
xchg
or
cli
jne
stos
and
cmpsb
inc
xor
dec
add
push
test
cmp
movsb
xor
inc
sub
inc
je
loopne
idivb
enter
inc
push
sub
xchg
je
test
lea
pop
aam
push
adc
push
js
xchg
sbb
enter
movlps
sub
out
xorb
push
into
aam
mov
in
test
add
push
hlt
call
cmp
sbb
add
mov
lret
sbb
cli
pop
in
inc
loopew
pop
push
cli
andl
movsb
and
xchg
xchg
ret
add
scas
or
push
jne
jbe
inc
mov
xor
mov
add
in
mov
add
test
xchg
xchg
sarb
inc
aaa
or
dec
push
incb
inc
shll
inc
push
jo
ret
cmc
pop
cld
cmp
nop
mov
pusha
mov
fs
cmp
xor
pop
push
mov
or
jb
idivb
mov
push
push
test
push
adc
int3
jne
std
mov
add
mov
decl
adc
test
or
pop
cld
add
inc
lds
jge
inc
fs
push
loop
push
aas
add
jb
sub
cld
pushl
or
xor
orl
and
cmp
in
add
jb
push
xchg
and
pop
insb
sub
clc
jmp
sub
cwtl
xchg
fstps
aas
sbb
mov
inc
pushl
ljmp
dec
push
and
sar
mov
shrl
out
and
lcall
mov
add
jle
addb
add
and
mov
clc
dec
pushf
stos
mov
clc
and
xor
lock
fldt
jb
mov
sbb
scas
cmp
push
divb
jl
sbbb
add
adc
es
inc
fwait
push
jg
xor
imul
push
dec
ss
and
out
adc
ss
test
mov
sub
push
and
into
inc
push
test
mov
xlat
fbstp
fnstcw
ret
flds
pop
pop
xchg
add
aaa
andb
mov
daa
loop
push
jmp
mov
stc
cli
popa
inc
and
test
pop
add
call
bound
push
and
fsubrl
add
cmpsb
nop
sub
int3
mov
mov
decl
push
inc
unpckhps
and
mov
sbb
int3
and
cmp
add
sbb
lds
push
call
xor
ret
pop
cli
scas
xchg
mov
sub
icebp
xchg
shl
push
jns
push
ret
and
mov
adc
inc
jbe
sbb
mov
push
pushw
sub
roll
push
mov
clc
callw
imul
add
test
jne
mov
clc
popl
cmpsb
clc
dec
inc
int3
and
jg
sbb
push
idiv
adc
sahf
bound
and
hlt
mov
dec
shlb
lea
jg
add
and
out
sbb
adc
or
jbe
inc
inc
pusha
push
cld
push
or
inc
pmaxub
xchg
std
inc
pop
push
rol
nop
rcrb
push
mov
pop
std
test
dec
mov
cmp
mov
push
xor
or
dec
out
cld
push
leave
add
push
lea
mov
adc
mov
mov
cmpsl
inc
add
aas
sti
pop
push
jns
insl
mov
call
jo
ss
add
movsb
outsl
es
incl
cmp
mov
rorb
faddl
xchg
inc
push
test
push
sbb
mov
dec
fsubrl
mov
xchg
sbb
stos
test
jbe
fsubs
lcall
cmovno
or
test
std
scas
inc
xor
inc
mov
call
rcll
cmpsl
dec
xchg
push
push
movsl
hlt
sahf
ss
popf
cmp
inc
scas
data16
stc
lret
sbb
lock
sbb
mov
inc
cs
xchg
mov
sarb
mov
mov
add
push
jb
daa
cmp
sub
or
xchg
popa
push
out
outsb
fimuls
dec
jmp
or
outsl
stos
stc
testl
or
inc
pop
shlb
mov
push
adc
push
cmp
je
fs
or
mov
mov
clc
mov
pushf
stc
xchg
jo
movsb
adcb
into
mov
stc
or
mov
sbb
ret
or
and
mov
sbb
cli
inc
lods
mov
mov
rcl
mov
add
xchg
mov
inc
shlb
jb
mov
pop
movsb
inc
ret
sti
lods
adc
movb
push
mov
insl
sbb
into
pop
popf
jp
dec
mov
mov
push
jp
xchg
repz
shrb
inc
pop
mov
icebp
call
cld
sbb
jb
push
aaa
std
call
add
mov
adc
aas
ret
adc
cli
in
mov
xlat
enter
push
enter
mov
leave
push
stos
outsl
inc
inc
jbe
inc
add
cmp
and
inc
xor
push
movsb
aaa
int3
ljmp
test
and
orb
fsubrs
loop
cwtl
in
pop
dec
or
xor
mov
jle
pushf
mov
je
adc
scas
push
pop
fdivs
nop
and
fldl
jbe
lea
faddp
in
xor
or
cmp
mov
sarl
sar
es
jae
in
add
push
outsl
ja
ret
shrl
add
mov
xor
call
dec
test
call
fcoml
jmp
insl
push
hlt
shr
js
xor
hlt
add
cld
pop
mov
test
gs
subl
mov
mov
xor
xor
and
jmp
or
mov
sbb
xchg
push
insb
sub
shrl
fiaddl
and
mov
std
cld
dec
inc
ret
popa
xor
mov
mov
push
or
test
push
lea
sbb
inc
gs
push
clc
sbb
inc
fistpl
jns
insb
scas
das
add
ucomiss
mov
ds
sti
clc
or
and
scas
cmp
mov
add
decb
mov
in
rclb
add
sub
pop
in
clc
dec
test
movsb
inc
stos
test
or
jge
ret
cmp
sbb
push
sbb
cmp
stos
mov
mov
orl
and
movsb
test
rcll
cmp
sbb
ja
clc
in
and
in
mov
lea
ljmp
pop
call
jle
fcoms
mov
shl
cmp
mov
inc
cld
pop
inc
mov
jno
leave
sahf
lea
add
jae
pop
mov
test
xor
add
cld
mov
ffreep
rcll
adc
rcl
sub
ficoms
mov
xor
xor
test
push
aas
lahf
pop
and
cmp
insb
cld
xchg
mov
jge
adc
mov
lods
mov
mov
into
fwait
jge
je
add
push
mov
mov
aam
outsl
std
int3
ret
fadds
cld
add
mov
xor
add
mov
cld
enter
sbb
fisubs
jmp
dec
jg
sbb
xor
jg
or
add
or
jge
cmp
mov
xor
cmpsl
xor
int
push
aas
mov
inc
push
push
or
in
push
cmpsl
jle
scas
inc
mov
nop
loopne
incl
mov
sahf
jne
pop
int3
and
add
push
loopne
ss
and
test
mov
sub
or
gs
add
ds
xor
sti
dec
sub
mov
cld
add
xchg
mov
imul
xor
and
lret
gs
sbb
das
mov
enter
andl
or
test
jo
jbe
xor
std
pop
sbbl
mov
mov
icebp
pop
and
jbe
adc
push
adc
inc
jp
sbb
xchg
or
and
std
add
push
in
mov
pushl
sub
cmpl
data16
insb
test
sahf
xchg
push
test
hlt
mov
sbb
clc
scas
inc
cmp
daa
inc
imul
mov
enter
push
or
or
test
faddl
sub
add
mov
or
push
push
sub
xor
in
xchg
das
les
call
std
ret
dec
mov
add
mov
pushf
dec
push
cwtl
mov
add
clc
inc
mov
ud0
insb
cmp
add
push
mov
push
pop
lock
mov
xor
repnz
pop
data16
push
jp
push
and
scas
pop
cld
rorl
xlat
mov
push
inc
cmp
jle
test
mov
adc
outsb
cmp
rcll
lret
mul
ret
test
and
jl
jb
ds
jg
jne
push
adc
movsl
xchg
test
or
add
add
xor
mov
sbb
mov
jne
or
inc
mov
jbe
adc
push
push
adc
xor
inc
dec
cmp
lret
ret
inc
adc
cmpsb
sbb
clc
or
mov
enter
scas
mov
cmp
pop
inc
add
call
add
sarl
or
mov
and
test
mov
mov
and
inc
dec
push
leave
jne
xor
mov
ss
adc
push
jne
test
xor
enter
adc
lea
cmp
sbb
mov
lods
in
lock
mov
call
xor
adc
mov
sub
pop
aam
push
mov
popa
adc
mov
add
adc
in
aas
ljmp
fwait
pusha
pop
add
in
inc
lret
and
into
cli
ss
or
jae
dec
nop
fmull
sub
je
sbbb
add
mov
jmp
xor
enter
gs
add
add
fcomip
jo
in
mov
lea
incb
or
out
cmp
repz
mov
add
cmpl
dec
push
sub
push
and
mov
scas
cli
clc
aaa
lock
shl
mov
xchg
enter
mov
in
loopne
cmp
mov
in
gs
rorl
push
add
js
adcb
shl
lea
adc
mov
clc
outsl
stc
sbb
aaa
je
add
fnsave
dec
lods
add
shl
push
push
mov
mov
inc
push
out
out
inc
lds
push
sub
cmp
pop
pusha
add
shlb
fldl
test
sbb
das
xor
sub
cmp
cmp
cmc
cmp
mov
dec
in
cmp
divb
gs
inc
aas
cld
mov
roll
scas
mov
sbb
mov
jmp
pusha
sbb
jmp
sbb
lcall
jne
cld
scas
clc
xchg
xchg
imul
add
push
in
pushf
and
jmp
xchg
mov
shll
push
or
mov
out
adc
ret
xor
xor
movnti
stos
bound
sar
add
jl
inc
mov
call
ret
adc
mov
add
flds
mov
push
dec
xchg
push
scas
and
hlt
subb
mov
loopne
mov
xchg
adc
stos
test
adc
push
sbb
jecxz
dec
insb
ds
test
push
mov
cpuid
and
mov
cmp
repnz
push
roll
and
push
lret
jecxz
nopl
add
jb
shrb
arpl
lcall
inc
imul
jge
sbb
sub
ret
pop
inc
sbb
cmp
jle
clc
inc
in
cmp
cmp
arpl
inc
jle
dec
adc
aam
lods
mov
pop
add
and
pushf
pushf
pop
loopne
dec
ds
call
ret
mov
filds
mov
mov
cmc
or
jmp
ljmp
lret
cs
test
sub
jle
or
push
jbe
jge
adc
testb
mov
andb
dec
cmpsl
icebp
lcall
loope
pop
inc
jbe
pusha
pop
xor
and
call
push
cli
or
fimuls
xchg
loop
cmp
jb
jmp
loop
sub
daa
inc
test
shlb
insl
xchg
shl
data16
mov
popf
jg
dec
movsl
or
lret
add
pop
or
incl
inc
add
adc
mov
add
test
xor
sti
or
cmp
insb
mov
sbb
outsb
fiaddl
mov
fs
mov
pop
decl
sbb
and
int3
cmp
add
jo
inc
mov
insl
and
jne
jb
push
xchg
cmp
lock
incb
test
pop
mov
and
cmp
jmp
adcb
push
dec
mov
test
cmp
or
mov
jp,pt
mov
pop
jle
mov
pusha
mov
xor
rol
clc
mov
movsb
mov
mov
andb
aaa
lret
pop
int3
pop
push
dec
and
add
jp
cmpb
jb
sub
pop
dec
push
xchg
cmpsb
dec
mov
xor
cld
outsl
movsb
testb
or
xor
dec
and
ret
push
jle
or
imul
cmp
pop
int3
jl
decb
mov
dec
hlt
repz
bound
dec
bound
and
mov
mov
jmp
cmp
insl
mov
xchg
dec
stos
ret
jbe
adc
pop
stc
ljmp
clc
jge
jns
loopne
mov
mov
mov
cmp
mov
insb
cmp
hlt
push
fs
add
xorl
in
rolb
push
pop
jmp
aam
push
sbb
mov
mov
pop
add
adc
xorb
test
jge
outsb
dec
fidivs
jo
push
je
cmc
pmuludq
push
jne
mov
loop
pop
es
fistps
enter
jo
int3
andb
enter
cmp
jge
insb
ljmp
sbb
push
mov
mov
xor
lahf
lods
cmp
lcall
mov
scas
negb
enter
rolb
out
sbb
popf
push
les
mov
mov
xchg
movl
lret
and
mov
cmpsb
je
adc
lds
push
jb
pmaxub
stos
push
inc
idivb
push
js
call
int3
sbb
fsubrl
mov
mov
and
cli
add
sbb
push
sub
add
mov
cmp
aas
and
jle
xchg
cmp
sbb
lds
pusha
mov
add
icebp
scas
pop
je
jmp
js
mov
scas
frstor
mov
sub
testb
popl
cmp
push
xchg
cld
test
add
cld
xor
ljmp
jp
and
pop
call
sub
out
pusha
jb
adc
jmp
lock
inc
test
out
add
mov
jmp
or
cmpsb
nop
mov
insb
imul
lods
inc
testb
jmp
jne
in
mov
dec
js
push
and
sub
jne
add
or
xor
insb
int3
mov
loopne
inc
and
int3
ds
mov
mov
lcall
inc
lret
add
sarb
call
inc
xor
push
add
pop
decb
push
push
test
add
movsl
and
call
mov
mov
hlt
cmp
into
push
flds
enter
inc
and
mov
pop
testl
loope
cmp
imulb
ret
and
sbb
int3
and
jg
test
loopne
or
jno
rclb
call
hlt
add
and
adc
fsubrs
dec
in
repnz
sbb
mov
in
ljmp
and
inc
or
xchg
add
mov
and
rol
or
and
add
push
add
imull
lret
inc
clc
jmp
push
mov
std
decl
ss
push
cmp
inc
mov
add
mov
js
clc
stc
fdivr
shll
shlb
cmovno
cmp
sub
rolb
nop
flds
orb
push
add
mov
addl
mov
shlb
cli
jg
xor
xor
xor
cmp
and
jp
mov
push
dec
fsubrs
xor
scas
adc
push
jmp
lcall
mov
loop
sub
add
cwtl
fs
shrb
push
scas
ss
xor
sbb
arpl
pop
lock
fs
pushf
push
and
test
push
adc
pop
je
jge
mov
mov
lea
pop
cli
mov
mov
outsb
clc
pop
fdiv
mov
out
or
jb
nop
and
pop
inc
arpl
jl
and
insb
add
xchg
jle
mov
sar
jmp
or
setle
cld
add
adc
lcall
data16
jl
in
xor
inc
or
and
enter
or
in
pushf
out
pop
push
inc
notl
push
loope
mov
ret
dec
xchg
dec
push
ds
inc
shl
jo
jbe
icebp
ljmp
add
jmp
movsb
xor
pop
push
cmp
fiaddl
test
in
fcoml
ret
sarb
cmp
inc
sbb
add
stos
repnz
andb
inc
outsl
pop
scas
icebp
mov
popf
jmp
mov
mov
int3
sti
mov
test
xor
mov
dec
in
inc
or
mov
ljmp
push
push
outsl
and
in
shl
ret
mov
add
mov
sub
cmp
cmp
mov
push
inc
mov
int3
push
dec
enter
mov
clc
cs
jl
daa
ljmp
push
call
mov
leave
icebp
cmp
mov
lods
pop
fsubrs
ss
outsl
inc
lea
mov
les
into
mov
sub
or
cmp
xor
adc
int3
sbbb
ret
sbb
and
mov
and
repnz
and
mov
ljmp
or
xchg
int3
mov
mov
adc
scas
aad
cld
int3
ret
gs
pop
loope
adc
sbb
arpl
sub
add
mov
mov
inc
adc
push
mov
or
pop
pushf
sub
cmp
cmpsb
mov
mov
inc
das
and
jbe
outsl
add
lea
push
adc
inc
xor
cmp
inc
push
jmp
lods
andb
dec
lods
push
in
add
hlt
negb
mov
dec
sbb
or
aaa
sti
push
jo
pushf
ss
and
into
push
test
cmc
sub
hlt
iret
add
aas
call
xchg
adc
aaa
fidivrs
addl
nop
add
adc
das
leave
ja
or
jge
mov
jb
pop
sub
sbb
fcomp
pop
lret
lcall
and
push
inc
push
add
adc
mov
cwtl
jmp
addb
lret
sub
movsl
cmp
aaa
test
inc
push
adc
pushf
js
mov
xlat
das
bound
je
xor
in
sbb
add
push
pop
cmpsb
xchg
push
pop
sub
jbe
mov
sahf
mov
xor
pop
aam
adc
pop
jo
dec
addl
js
mov
jg
jbe
cmpl
mov
dec
ret
cmp
dec
cmp
jmp
push
mov
in
cmp
and
int3
xor
push
clc
call
adc
aaa
push
jl
inc
pop
cmp
lock
xlat
repnz
push
mov
cmovo
arpl
add
jle
adc
adc
xor
and
in
enter
or
lcall
pusha
stos
inc
and
orb
repz
jp
int
lret
or
ss
mov
mov
lock
mov
cmp
xor
sbb
push
mov
call
fadds
insb
cwtl
iret
sbb
push
cld
xchg
and
jge
sub
mov
idivb
stos
nop
in
jg
mov
push
lcall
and
or
or
push
or
inc
icebp
test
push
dec
dec
inc
movsb
nop
sbb
gs
push
sbbl
std
inc
mov
pop
out
mov
fdivrl
inc
subl
sub
cmp
aam
push
push
testb
push
popf
orb
ret
sahf
les
ljmp
add
dec
add
fadds
call
inc
or
add
sbb
ret
or
or
jmp
push
aam
xchg
dec
inc
sub
add
push
pop
ret
jmp
into
js
std
or
xchg
movsb
lods
adc
lahf
add
popa
pop
shlb
in
rol
sub
nop
pop
adc
out
sub
repnz
sub
or
and
sarb
xor
mov
shlb
je
mov
insl
dec
in
mov
nop
cwtl
fiaddl
cwtl
notb
jno
fwait
ss
push
daa
and
jne
inc
xlat
pop
or
out
dec
push
pop
data16
into
xor
lahf
out
sbb
test
into
jno
int3
add
dec
cli
mov
testb
push
orb
pop
or
adc
sub
sbb
add
outsl
outsl
mov
push
jle
test
mov
test
ret
pushf
pusha
lea
ret
dec
pop
dec
adc
ficoms
and
add
adc
cmpsb
call
idiv
std
cmc
outsl
adc
mov
xor
mov
subb
bound
xchg
js
fdivr
inc
std
lods
shll
rcl
xlat
cmp
cli
xor
push
fadds
in
add
push
stos
pop
dec
outsb
lea
mov
call
js
add
clc
sbbb
mov
sub
scas
and
adc
sub
adc
fs
dec
add
or
sbb
add
andl
mov
jb
or
or
sbb
icebp
or
ljmp
ss
aad
add
add
rorb
sub
out
mov
add
ret
aaa
add
outsl
and
jmp
aas
scas
les
pop
add
inc
or
divps
add
movsb
add
jne
xor
das
mov
loopne
mov
mov
inc
cld
jle
fs
jmp
je
sub
push
add
lock
inc
mov
es
daa
xor
sub
imul
je
adc
lahf
mov
dec
and
out
inc
incl
repz
mov
call
std
fbstp
test
pop
and
xor
push
fstl
mov
mov
xchg
mov
add
or
mov
jbe
add
std
and
xchg
call
xlat
into
test
js
loope
pop
shrl
data16
stos
xor
mov
pop
cli
jmp
mov
pop
xor
mov
xor
mov
mov
addr16
adc
mov
adc
push
hlt
fistl
pop
fcoms
add
mov
jl
jl
push
testb
jb
mov
sub
jle
stos
lret
icebp
lods
adc
add
es
mov
dec
dec
jbe
push
push
jge
pop
cld
add
in
shlb
test
iret
lods
shlb
fs
and
cmp
push
or
adc
sbb
incb
notb
adc
fwait
inc
dec
sbb
mov
or
movsb
out
aam
xor
loopne
jle
inc
inc
mov
mov
pop
mov
mov
cltd
jecxz
aad
addl
and
inc
lock
push
icebp
sbb
hlt
fldl
test
inc
mov
sahf
inc
cld
sbb
xchg
push
sbb
xor
lcall
cmp
jge
mov
jl
add
jae
push
jmp
jae
or
jp
mov
jp
or
push
ret
pop
jne
mov
push
sbb
dec
mov
add
mov
jmp
push
mov
je
hlt
jg
xchg
pop
loope
add
jmp
inc
xor
add
inc
inc
push
stc
sbb
add
jno
adc
iret
pusha
pusha
jmp
loopne
push
push
xchg
out
lods
xor
mov
rorb
and
rolb
or
aaa
mov
jmp
aaa
mov
fisubrs
lcall
sbb
xor
xor
cmpsb
call
shrl
enter
mov
fxch
test
or
shlb
outsb
mov
in
ja
adc
bnd
fisttps
int3
repz
lock
or
fildll
add
call
aaa
js
lret
add
mov
add
sbb
cmp
out
push
call
mov
add
or
mov
movsb
gs
cmp
or
pop
js
mov
pop
sbb
jne
out
mov
sbbl
mov
push
add
sub
int3
cmp
mov
loopne
lods
daa
out
mov
lret
add
pop
lock
test
ret
sbb
fadd
and
jne
xor
push
std
das
repnz
and
repnz
adc
add
and
mov
test
mov
test
mov
mov
dec
aas
call
push
push
shrl
addb
aad
sbb
dec
dec
in
popa
dec
dec
jb
std
int
imul
decl
idivl
mov
hlt
pusha
cld
and
in
mov
pop
data16
cli
or
push
adc
mov
sbb
pop
decl
sub
es
test
push
and
lods
pop
or
xchg
orl
call
pusha
cwtl
faddp
js
test
scas
pop
nop
mov
in
mov
rorl
ljmp
mov
mov
push
icebp
sub
add
inc
sarl
inc
push
insb
mov
mov
rorl
mov
add
mov
inc
in
ljmp
test
dec
or
outsl
pushl
and
gs
add
out
add
psubw
lods
jp
add
subl
add
clc
ret
xchg
or
cmp
xchg
and
test
outsl
sub
adc
in
out
xor
xor
xor
mov
push
scas
adc
test
adc
inc
mov
add
sbb
mov
cmp
shl
lcall
jne
xor
mov
icebp
mov
pop
xchg
cwtl
mov
xor
add
push
xchg
outsb
mov
pusha
sbb
xor
xchg
add
pop
mov
cmp
fwait
mov
mov
adc
jae
jecxz
xchg
push
test
and
fs
sbb
adc
add
push
shll
icebp
or
mov
add
rcll
int3
rolb
and
pop
mov
add
rcr
xchg
adc
mov
inc
mov
sti
push
sti
mov
outsl
push
subl
mov
idivb
out
mov
mov
ficompl
mov
jo
push
mov
mov
popa
fdivrs
mov
insb
add
lods
aaa
subl
cli
addb
add
jmp
stos
and
rcrb
and
incl
sbb
sbb
test
xchg
dec
and
mov
in
sbb
sbb
test
push
cld
sbb
mov
cld
popa
popa
xor
xor
outsb
in
cmpsb
adc
jge
mov
sub
hlt
aaa
add
jno
or
mov
pop
call
xor
inc
or
and
rclb
fimuls
call
jp
cwtl
dec
loop
push
lods
and
insl
push
jmp
pop
pusha
out
sbb
clc
adc
loopne
gs
data16
cs
adc
mov
fadd
or
mov
push
nop
dec
mov
push
push
pop
shrb
adcb
mov
lods
jne
out
cmp
push
jle
pop
push
mov
or
inc
pop
jo
scas
dec
imul
dec
lret
pop
mov
test
fmulp
mov
test
in
xor
pushf
or
push
pop
mov
and
xor
arpl
xrelease
imul
or
arpl
ret
mov
inc
push
stc
pop
mov
cmp
push
push
cltd
fadds
fdivr
repnz
mov
lock
pcmpgtb
jbe
inc
cmp
jb
dec
decl
sti
add
mov
adc
jo
and
sti
ljmp
jecxz
push
inc
cwtl
jne
xchg
xor
inc
jae
dec
pop
push
outsl
inc
lret
inc
mov
push
push
out
mov
pop
ret
inc
add
mov
outsb
add
icebp
mov
mov
test
inc
or
and
cwtl
inc
xchg
sti
pop
xor
aad
dec
loopne
mov
fisubs
xchg
icebp
xor
mov
adc
mov
stos
push
dec
push
sbb
push
cmpsl
push
cmp
std
xchg
imul
xor
outsb
aam
and
inc
call
push
movsb
push
add
jp,pn
cmp
cli
ja
pop
lock
and
ljmp
push
insb
mov
rolb
push
das
xor
outsl
stos
mov
adc
pop
push
add
add
adc
cmp
dec
fcoms
cmc
aaa
popf
sub
out
mov
lods
decl
sub
clc
std
dec
push
dec
inc
or
lods
inc
scas
adc
push
jl
mov
push
ljmp
jns
fcompp
dec
dec
sbb
push
jo
push
push
lahf
js
imul
fdivl
popa
push
shld
call
jle
and
pop
jg
inc
leave
push
mov
pop
sbb
jmp
call
push
xchg
lret
adc
pop
push
je
push
push
rcl
pop
or
ret
inc
add
mov
dec
or
cmc
push
inc
push
dec
push
push
sahf
mov
push
out
adc
hlt
and
sub
das
mov
jle
push
adc
sub
mov
cmp
out
and
push
jno
pop
lea
and
outsl
cmp
or
mov
mov
inc
push
push
aaa
lods
testb
sbb
bound
mov
mov
fsubrs
mov
dec
mov
push
mov
sub
js
push
mov
dec
hlt
outsl
movsl
decl
push
cmp
xchg
stos
loop
aaa
rcrl
loopne
push
xlat
xchg
dec
push
xor
outsl
xchg
or
mov
cmc
or
jne
nop
jbe
scas
lcall
and
data16
loopne
inc
sub
sub
adc
popa
pusha
jecxz
pop
lret
cmp
std
inc
xorl
jbe
clc
push
add
jp
xor
pmaddwd
lock
adc
test
je
sbb
leave
add
and
loopne
aas
cld
jp
pop
dec
js
sbb
sbb
push
add
movsb
cmpsb
sbb
int
mov
les
pop
lock
cwtl
adc
roll
or
ret
add
ret
das
imul
or
sahf
mov
lock
mov
mov
xchg
sbb
mov
ljmp
add
call
push
sbb
outsw
das
or
inc
cmpsb
and
add
push
jle
adc
xor
push
dec
arpl
mov
push
adc
in
shlb
mov
adc
push
cmp
sbb
adc
call
pop
adc
adc
arpl
lods
push
movsb
jo
lea
dec
sbb
jb
es
push
in
test
xorb
mov
aam
sbb
cmp
addl
imul
xchg
gs
lods
push
inc
movsb
lea
dec
aad
or
xor
mov
outsb
fdivrs
rorl
inc
pop
cmpsl
je
call
sub
test
push
test
lock
lret
mov
xchg
xchg
push
pop
mov
pop
push
push
js
mov
sbb
popa
mov
adc
jmp
inc
pusha
pop
or
aam
inc
enter
inc
idiv
in
fbstp
mov
insl
mov
sub
mov
je
adc
adc
movsb
aam
ret
cltd
dec
push
xchg
push
f2xm1
lock
into
fs
jmp
loopne
adc
addr16
fldl
dec
add
and
cld
add
lock
aas
in
push
mov
test
dec
shl
dec
lret
inc
jecxz
repnz
xchg
scas
and
fcomp
pushf
addl
mov
mov
insb
sbb
das
lcall
addl
mov
jmp
or
add
pop
jecxz
mov
cwtl
ret
and
or
pusha
test
cld
cmp
adc
add
cmpsl
sbb
jo
adc
xor
daa
movsl
fbstp
call
xor
adc
jmp
mov
or
sbb
mov
add
pop
dec
fists
outsb
add
fists
ja
mov
add
sbb
insl
xor
add
add
or
ds
ss
jo
jbe
fcomp
outsb
call
xor
push
mov
inc
call
inc
addb
leave
sub
decb
dec
test
mov
int3
and
gs
cmp
xchg
jg
push
and
dec
add
mov
out
adc
mov
adcl
add
adc
mov
mov
fldenv
incl
add
lock
cwtl
mov
mov
loop
jo
gs
sbb
sbb
push
mov
lods
test
push
mov
or
mov
inc
cld
dec
add
incb
jno
xcrypt-ofb
cmpsl
lods
test
test
gs
sbb
cmp
inc
pcmpeqb
pop
xchg
movw
cld
inc
cmp
rcll
cmp
xchg
dec
insb
add
cmp
cmp
data16
or
pop
xor
popf
mov
mov
push
ja
test
int3
add
data16
pop
adc
add
adc
dec
xchg
cmp
dec
mov
pushl
mov
movsl
inc
jne
bound
lods
push
cmp
mov
add
mov
mov
ud1
ljmp
and
fdivl
mov
and
fisubl
pop
test
call
xor
shl
or
mulb
cld
gs
jl
nop
aaa
sub
loopne
push
mov
int3
mov
sbb
xchg
jmp
xor
add
inc
test
pusha
push
xor
les
mov
fadds
push
adc
pop
jmp
sbb
push
add
imul
push
ljmp
lock
mov
push
adc
adc
jno
sahf
adcb
call
pop
xor
or
loop
jo
adc
inc
mov
cmp
xor
ja
xchg
push
idivl
inc
test
push
xor
negl
rcl
gs
or
adc
test
push
inc
mov
inc
sbb
ret
movsl
pop
push
jbe
inc
jbe
in
dec
jle
testb
jmp
cmp
pusha
loopne
adc
mov
xor
inc
pop
fdivs
or
test
dec
rolb
je
sbb
push
push
rorb
movsl
mov
sahf
adc
mov
xor
test
add
push
sub
pushl
and
or
pop
mov
pop
ret
test
add
shlb
push
or
testl
data16
sahf
jne
bound
repnz
inc
mov
pusha
ljmp
inc
jmp
dec
inc
mov
inc
nop
inc
or
sbb
fistpl
rcll
mov
or
lcall
jg
jne
addr16
xor
push
inc
fisttpl
mov
out
ret
mov
cmp
jbe
adc
push
insl
fs
cmp
arpl
popa
adcl
mov
incl
mov
inc
cmp
push
fucom
push
sub
shlb
fstpt
pop
cli
cwtl
hlt
or
inc
or
adc
out
add
mov
add
loopne
xchg
ds
cmp
adc
roll
inc
and
scas
fcomps
cmp
adc
inc
lock
lds
cmp
mov
dec
mov
aaa
sar
add
in
or
sahf
leave
dec
cli
inc
xchg
loopne
cmp
xlat
or
icebp
push
ljmp
mov
sbb
xchg
pop
test
insb
dec
imul
push
jle
stos
std
jg
add
les
pusha
call
lds
test
outsl
mov
and
dec
pop
dec
pop
insb
pop
cli
fcoms
inc
jmp
push
pop
call
adc
push
call
and
cmp
aas
push
call
pop
add
mov
add
and
in
and
in
lock
sub
xor
outsb
lods
jle
xchg
jle
pop
mov
mov
test
sbb
add
add
push
clc
push
jge
cmp
and
sbb
jmp
aaa
mov
pop
xchg
push
notb
ds
and
push
push
xchg
dec
jo
and
push
mov
daa
jg
or
and
adc
or
sbb
mov
test
push
lea
shll
je
or
xor
mov
adc
adc
pop
shl
ljmpw
cmp
add
jne
lret
push
call
push
mov
fdivrl
test
and
cmp
scas
sub
loope
jg
scas
subb
and
cld
jbe
mul
fsubl
add
inc
jns
inc
cmp
mov
sub
test
push
mov
adc
jae
sub
or
add
je
es
adc
adc
push
inc
dec
sbb
inc
in
in
dec
inc
push
add
inc
inc
or
lea
xor
jle
jle
repnz
mov
add
cmp
dec
int3
fwait
mov
and
inc
decb
sbb
and
jmp
jne
push
jle
sub
push
mov
push
cmp
or
sti
fisubrl
push
pushl
repnz
hlt
xor
ja
mov
jmp
inc
call
ljmp
adc
psllq
sar
aad
mov
and
std
das
inc
xchg
push
dec
test
mov
fwait
or
std
in
rcr
cld
std
jp
fs
inc
inc
ljmp
push
push
dec
sub
cmp
adc
call
pop
outsl
sbbb
xor
shll
adc
jge
push
mov
mov
fcoms
lods
push
push
pop
aaa
mov
sbb
xor
icebp
push
jmp
cs
inc
xchg
pop
in
fcmovu
inc
inc
cld
sar
fmul
les
mov
test
in
dec
xor
aad
loopne
or
adc
data16
sbb
pop
les
add
lods
ret
mov
pop
adc
mov
jo
mov
nop
shll
sub
dec
sub
scas
xchg
call
sbbb
sub
push
loop
jmp
pop
xchg
rorb
leave
imul
push
or
add
push
push
out
loop
xchg
add
pop
jae
or
xor
repnz
xchg
lods
mov
scas
mov
mov
fidivl
pushf
stos
stos
xor
mov
cs
add
add
movsl
lcall
pusha
mov
mov
popf
inc
jnp
lcall
loop
xchg
pop
mov
hlt
and
xor
testb
and
push
je
lea
nop
inc
les
decb
dec
shlb
push
test
mov
adc
lock
xor
adc
cmp
cmpsb
pop
into
scas
pop
enter
scas
mov
add
cs
data16
cs
loop
out
movsb
mov
adc
cli
adc
inc
test
movsl
push
fnstsw
push
lods
lea
cmp
inc
xor
repnz
cli
mov
add
test
out
sbb
and
xchg
test
push
adc
push
push
test
fistl
cmp
add
stos
inc
sub
sbb
mov
mov
test
mov
mov
hlt
in
mov
and
hlt
idiv
fs
xchg
mov
inc
jb
call
jb
mov
dec
jecxz
pop
pop
mov
and
mov
jb
adc
rcrl
adc
or
lahf
or
std
pop
mov
xor
jl
push
mov
add
addl
ss
sbb
int3
mov
clc
xchg
or
mov
data16
push
sbb
mov
jne
in
call
in
fistpll
dec
std
mov
je
fs
pop
out
jo
pushf
push
movsl
xchg
mov
ljmp
aam
mov
mov
push
jge
int3
mov
incl
xchg
and
jmp
inc
add
pop
stos
imul
push
add
adc
and
pop
test
test
or
and
clc
cld
mov
subl
pop
jle
mov
sbb
add
sar
decl
or
in
mov
mov
leave
sti
fisubrs
mov
mov
ret
adc
mov
mov
mov
push
cmp
rorl
int3
sub
push
nop
xor
fmuls
xchg
loopne
adc
outsl
inc
and
stos
mov
add
push
push
aas
insb
dec
js
rorb
push
clc
les
fadd
incb
bswap
jge
pop
pusha
jl
roll
insl
adc
call
test
and
xchg
or
or
add
pop
push
jmp
push
cwtl
imul
inc
aam
inc
inc
loope
lods
popa
mov
incl
pop
mov
inc
adc
add
hlt
gs
and
fwait
sub
adc
jp
loopne
mov
loope
xor
and
loop
adc
test
add
scas
fstpl
nop
rcrb
add
fsubr
flds
xchg
mov
mov
dec
mov
ds
loopne
int
dec
lods
pop
dec
fs
xor
rcr
lods
pop
mov
scas
cli
ja
mov
imulb
test
pop
insb
mov
dec
into
clc
mov
mov
jmp
inc
or
inc
mov
cmp
test
inc
in
jb
js
rcrb
mov
ljmp
dec
enter
out
push
xor
test
cmp
sti
adc
loopne
or
clc
jbe
push
pop
sahf
outsb
mov
and
mov
addb
and
jp
push
cmpsb
ret
mov
and
push
orb
outsb
insb
addw
push
stos
adc
push
pop
inc
cld
jle
add
cmp
lea
or
jne
sar
and
adc
mov
enter
cli
cmp
dec
out
xchg
jg
push
mov
je
je
xchg
int3
mov
daa
shlb
inc
mov
gs
adc
sub
sarb
sub
add
xchg
mov
add
lcall
add
loope
fsubrl
cmp
call
sbb
mov
push
push
icebp
scas
jge
fcmovbe
lcall
pop
sbb
ret
xor
sub
inc
outsb
or
popa
stos
push
mov
loopne
lret
or
jmp
adc
add
add
jmp
call
or
outsb
mov
call
inc
sbb
and
jae
adc
std
mov
dec
add
js
int3
fcmovnbe
jmp
fwait
xor
push
xor
roll
lret
add
imul
ds
jb
xchg
mov
and
dec
jge
push
adc
pop
mov
or
hlt
sub
fcmovnb
int3
add
and
pop
cld
or
outsb
inc
mov
ljmp
or
pop
fisubrl
mov
xchg
loope
pop
ljmp
add
add
xchg
mov
test
adc
add
jmp
push
fsubrs
cwtl
or
adc
dec
mov
adc
cmpsb
outsb
add
test
lods
hlt
dec
dec
sbb
lea
mov
mov
add
add
lea
pop
stos
call
cmp
call
xor
enter
outsl
sbb
into
mov
fwait
pushf
mov
push
jns
xchg
inc
pop
into
sbb
pop
pusha
or
pop
mov
loope
mov
pop
les
xor
xor
push
inc
pushf
xchg
pushl
push
adc
imul
and
mov
icebp
adc
test
cmp
mov
xor
mov
es
push
fcomp
loopne
pop
xlat
jl
jp
mov
xchg
mov
xor
mov
adc
sti
rcrl
iret
pop
iret
add
shl
iret
hlt
roll
lock
iret
cmp
incl
enter
jmp
leave
add
inc
add
push
scas
or
jne
mov
hlt
sbb
cmp
fimuls
addr16
in
or
in
jo
pop
aam
dec
add
outsb
push
ja
push
call
cs
lret
ret
movsb
inc
xor
bound
scas
mov
into
mov
or
pusha
fadds
or
push
clc
jb
adcb
cmpb
lock
mov
push
jo
cli
sub
mov
adc
into
stos
inc
adc
fmul
add
popa
in
pop
push
jecxz
mov
lret
loop
insb
subl
mov
xor
jne
mov
cli
push
outsb
adc
loope
scas
mov
ret
xchg
push
jae
mov
sub
test
fstpt
ljmp
push
imul
fimuls
jg
bound
jae
je
adc
push
add
test
lods
push
mov
sahf
shlb
in
fs
and
push
loop
inc
mov
and
push
jecxz
enter
repnz
enter
test
mov
dec
cmp
je
sbb
push
sub
xor
mov
popa
add
in
push
mov
lock
push
cld
mov
mov
lods
loope
ljmp
call
cmp
rorl
rcrb
cmp
mov
cvtps2pd
mov
or
pusha
dec
or
lock
and
bound
orl
dec
mov
lcall
call
add
or
inc
push
fstpt
mov
push
push
bound
aas
fscale
xchg
push
and
dec
insl
mov
leave
inc
cwtl
outsb
daa
or
subb
jne
addl
mov
cli
icebp
xor
pop
mov
inc
into
je
adc
arpl
call
movsb
ljmp
mov
inc
xlat
es
in
and
jg
xchg
push
add
mov
jo
pop
adc
pop
mov
in
into
mov
ss
fcomi
int3
xor
push
cwtl
popa
cmp
push
rorl
les
push
test
add
faddl
push
and
mov
lcall
add
pop
lock
pop
xor
push
push
jmp
jl
pusha
je
sub
lea
scas
insl
test
push
or
push
cmp
adc
ja
add
ljmp
fs
std
sub
xchg
scas
mov
incb
rcll
mov
or
aaa
push
push
add
mov
out
ljmp
jne
inc
mov
das
inc
add
add
lock
shlb
dec
mov
push
fcoms
out
or
enter
xor
xchg
clc
pushf
sub
test
imul
mov
push
inc
dec
adc
repz
lock
inc
adc
inc
pop
aas
push
inc
subl
mov
adc
stos
test
inc
pusha
add
mov
sub
stos
testb
gs
std
push
or
push
xor
loopne
sub
decl
add
mov
testl
xchg
inc
adc
ds
push
xor
pop
mov
adc
test
aas
adc
push
sbb
push
xchg
loope
pop
xorb
inc
pusha
les
inc
lods
or
ds
inc
push
adc
pop
add
xchg
pop
fisubrl
xor
inc
inc
inc
mov
cmpsb
mov
sub
xor
hlt
in
adc
mov
je
mov
push
dec
jmp
and
sub
push
mulb
aas
movsb
aam
psraw
jo
push
inc
mov
insl
push
jmp
adc
and
mov
fwait
pusha
cmpsb
pushf
push
push
lea
jecxz
mov
cmp
stos
mov
fs
push
jne
push
inc
ret
mov
and
ss
xor
cmp
loop
jne
dec
dec
mov
cmpsb
fiaddl
decb
lods
jg
sbb
call
out
or
mov
dec
jb
mov
sbb
fldt
call
xchg
add
jmp
mov
fcoms
jge
xor
jge
mov
add
sbb
jmp
pop
int
pusha
jno
test
ret
xor
add
and
fmuls
ss
es
push
shrl
neg
inc
inc
mov
push
push
in
pop
pop
or
rclb
cmpsb
xor
xor
mov
and
pop
lods
pop
mov
cmpsb
push
faddl
decl
xchg
outsb
insb
enter
xor
ret
mov
push
hlt
shlb
inc
stos
cmp
or
clc
sbb
enter
aas
sub
pop
push
mov
adc
add
movsb
mov
dec
or
add
mov
test
lahf
in
test
push
sub
std
lcall
aad
addr16
jmp
mov
mov
int
add
push
xor
pop
inc
out
jmp
or
xchg
out
lcall
jmp
or
add
sbb
sub
fildll
inc
cmp
or
inc
inc
stos
inc
ja
dec
aas
adc
repz
call
aas
and
ljmp
aam
addb
cmpl
fwait
inc
or
loopne
dec
loope
hlt
lcall
lea
push
les
pusha
mov
mov
sub
mov
mov
divb
bound
jbe
lock
ret
jmp
mov
jg
into
in
jecxz
call
sbb
xlat
arpl
test
sbb
xchg
mov
stos
mov
pop
sbb
in
jecxz
cmp
sahf
push
or
adc
jmp
mov
xor
mov
or
mov
and
mov
mov
xchg
sbb
fs
lods
in
jnp
mov
push
mov
sbb
jbe
pop
push
adc
push
insl
test
xchg
mov
nop
sar
lock
outsl
lods
xor
int3
mov
mov
cmp
int
hlt
jo
loope
and
jmp
decb
sub
sub
lock
and
add
adc
jmp
lods
js
xor
stos
movsb
cmp
call
lret
mov
pop
lea
and
int3
das
shlb
push
mov
std
xchg
mov
mov
stos
loope
test
jbe
insb
test
fs
std
cs
pop
xor
pop
push
dec
and
shl
lock
jbe
mov
and
dec
mov
dec
bound
push
xor
adc
or
movsb
and
and
push
test
push
jne
mov
mov
mov
pop
dec
je
push
xlat
mov
inc
int3
mov
xchg
shrb
lock
jg
push
xor
imul
xor
fimuls
push
out
push
pop
cmpsl
out
and
and
cmp
js
push
mov
shlb
call
add
pop
add
push
sbb
jmp
push
lock
pop
bound
addr16
ret
inc
xchg
adc
inc
je
sub
jmp
ljmp
add
pop
adc
mov
aaa
xor
sbb
cmpsb
aas
dec
jbe,pt
push
push
outsb
ss
add
daa
push
add
fsub
addr16
cmpsl
push
mov
lcall
xor
cli
add
mov
adcb
cmpsl
push
nop
sub
ss
adc
out
adc
push
jae
cs
pop
adc
repz
je
nop
mov
aas
mov
adc
cmp
subl
jmp
add
push
cs
decl
decl
inc
jb
push
lea
mov
mov
gs
aaa
lods
add
mov
mov
adc
mov
jg
shrb
add
nop
xor
mov
jmp
ja
fcomip
lock
mov
pop
loopne
inc
mov
es
push
push
hlt
rcl
sbb
mov
sar
fistpll
xor
sbb
js
adc
fisttps
mov
push
add
cmp
dec
add
mov
jbe
call
insl
add
add
or
shll
inc
inc
fdiv
pop
xor
addl
jecxz
mov
mov
fcomp
push
pop
lea
inc
push
xchg
pop
jl
push
and
and
fisubrs
dec
inc
mov
inc
xchg
xor
mov
jecxz
push
or
pop
mov
adc
push
test
icebp
lock
adc
pop
mov
frstor
divb
xchg
aaa
popf
rcl
shll
test
js
sbbl
incb
cli
or
je
ret
add
decl
sub
dec
shlb
call
xorb
mulb
mov
xor
push
mov
add
and
adc
xchg
mov
sbbl
or
mov
cmpsb
test
mov
into
lock
es
cli
sbbb
bound
lods
sbb
ret
sti
orb
pop
out
mov
and
push
sbbl
jle
add
inc
idivl
sbb
pop
add
mov
scas
push
lock
in
jo
and
int
mov
jge
jbe
sub
mov
dec
cmpsb
sti
or
sub
mov
and
sub
call
or
xchg
lock
or
and
call
mov
pop
inc
xor
mov
and
scas
pop
mov
inc
mov
xchg
push
inc
inc
ret
pop
adc
xchg
cmp
jg
inc
dec
mov
data16
xchg
dec
outsb
mov
sbb
stos
xor
shll
mov
fwait
inc
je
outsb
fnstenv
fadd
and
jp
or
adcb
xchg
fiadds
push
jo
orb
es
lods
lcall
mov
test
les
push
les
lahf
add
aaa
add
xchg
push
push
stc
aam
andl
sti
dec
pop
add
sbb
sub
mov
out
xor
and
adc
cmp
push
dec
movsb
mov
icebp
sbb
ds
inc
sub
mov
call
mov
push
or
aaa
or
popa
cmpb
mov
fildl
push
xor
dec
sub
add
out
cs
ret
inc
decb
xchg
mov
ss
cli
add
dec
mov
pop
push
dec
sarb
lcall
xchg
fwait
add
cmp
cld
pop
shlb
in
dec
mov
popa
pop
and
cmp
and
out
fdiv
pop
test
mov
test
jno
nop
fbstp
andl
cmp
idiv
dec
push
ja
inc
ret
cmp
or
pop
cmp
push
jne
fs
mov
addl
mov
mov
lods
loope
pusha
lahf
mov
into
in
cmp
jns
sbb
dec
adc
sti
or
sub
fcoms
insb
inc
cmc
out
push
rclb
sub
xor
cmp
out
mov
add
test
jl
ja
jb
repnz
popf
dec
gs
mov
test
das
adc
push
jle
pop
pusha
mov
nop
dec
dec
dec
call
pushf
cmove
sti
and
jmp
dec
sub
inc
cld
test
and
in
push
adc
adc
push
push
imul
stos
cmp
in
mov
jmp
cli
and
xchg
mov
dec
cmp
sbb
fmull
pop
push
es
mov
lods
sub
mov
pop
sbb
cmp
call
call
stos
enter
inc
cwtl
jo
out
mov
mov
mov
cmp
cmp
andb
shlb
push
add
insb
mov
out
push
dec
sbbb
inc
adc
sbb
fbld
inc
call
js
inc
js
dec
mov
adcb
aad
mov
xor
incl
pop
push
sub
outsl
fldl
jl
ret
adc
rorl
mov
cmpsb
pop
fadd
rclb
push
mov
test
mov
mov
loope
cmp
jo
outsl
and
jnp
mov
mov
decl
add
repz
js
push
test
cmp
ljmp
jg
faddl
mov
mov
out
push
mov
std
mov
fldenv
push
mov
lea
and
std
dec
rclb
jnp
cli
or
call
dec
cwtl
push
arpl
cmovp
bound
shlb
cmp
insb
sub
mov
cld
jmp
std
mov
cmp
adc
lods
cld
notb
test
js
push
je
cmp
mov
cmp
js
jecxz
sub
enter
push
lea
xorb
jle
decl
push
inc
lea
gs
lock
mov
sub
fistpl
ror
fwait
pop
imulb
rclb
enter
addb
loop
adc
mov
mov
push
movsb
jbe
mov
fisttps
jmp
lret
mov
clc
cs
add
les
add
lock
out
enter
jl
and
sbb
stos
ja
adc
loopne
rclb
shl
push
es
shll
call
sbb
add
sub
sbb
mov
mov
cld
ljmp
push
rcll
or
or
jne
add
divl
sub
mov
sti
into
jae
setno
sub
nop
pushl
cld
cmp
and
adc
xchg
jne
mov
shl
dec
and
adc
enter
lret
clc
test
fs
aad
mul
xor
les
pusha
ljmp
mov
les
inc
cmpl
mov
or
div
testb
adc
add
rcrb
mov
cli
fsts
inc
xchg
jp
test
cmpsl
mov
adc
mov
or
je
jno
inc
jg
clc
pop
fisubrs
ret
dec
adc
jne
in
add
push
clc
in
ja
cmpl
xor
mov
sbb
xchg
push
push
add
mov
imul
pushf
mov
fs
adc
iret
pushf
jl
cmp
add
pop
jb
or
es
cmp
push
pop
shlb
and
outsb
cld
movsb
test
jg
lcall
lcall
or
mov
or
leave
inc
test
rorl
mov
and
push
shrl
jle
sbb
mov
cmp
pop
js
pop
jge
rorb
inc
addr16
or
sbb
or
jl
dec
sbb
mov
test
mov
push
jp
mov
stc
or
rclb
xchg
test
test
sbb
adc
jmp
push
jo
int
cld
fimuls
and
sub
lfence
fistl
loope
fsubs
and
call
cmp
into
add
pop
shrb
mov
and
push
lahf
ds
bound
mov
mov
imul
outsl
testl
push
and
push
stos
imulb
rcrb
inc
and
outsb
sub
ja
adc
push
movsl
adc
int3
push
mov
sub
jle
and
icebp
scas
incl
push
and
add
and
jecxz
cmp
std
and
out
mov
loop
adc
adc
add
or
std
loopne
pop
decb
dec
mov
dec
outsl
aam
cmp
shufps
mov
push
test
cs
test
push
mov
and
inc
sbb
xor
mov
add
ljmp
test
loopne
jmp
test
cs
push
mov
sub
fidivrs
jge
dec
or
add
test
mov
push
popa
call
xchg
mov
addl
test
mov
mov
lcall
movb
inc
push
mov
scas
mov
gs
scas
dec
fiaddl
add
leave
jl
rorl
or
xchg
icebp
bound
insl
test
pop
pusha
fiaddl
inc
mov
mov
inc
rolb
dec
lea
or
push
cld
pop
lock
pushf
rorl
outsl
adc
jg
jmp
rol
push
and
adcl
icebp
xchg
xchg
and
mov
fdivr
out
fsubs
inc
mov
cld
shrb
cmp
lret
mov
mov
out
es
es
roll
les
fnop
inc
xchg
pop
adc
les
mov
out
mov
js
ret
mov
stos
out
push
roll
push
sbb
add
jp
adc
mov
cmc
out
insl
inc
or
pop
movsl
pop
lds
hlt
cwtl
pop
sbb
add
xor
cmp
add
push
push
incl
lea
adc
jg
jb
mov
rorb
mov
cwtl
incl
orl
push
xchg
cmp
mov
pop
out
adc
inc
test
loope
in
cs
adc
ljmp
ss
add
pop
imul
mov
call
loopne
mov
call
pop
rol
pop
push
loopne
sub
mov
jl
xor
pop
mov
dec
and
or
repnz
dec
adc
gs
rcr
mov
jp
sti
call
inc
jae
add
sbb
faddp
loope
and
sbb
xor
mov
loop
shrl
rorl
dec
sub
sbb
inc
enter
addb
lcall
fsubrs
imul
in
divps
sbb
cmp
sub
fsubl
mov
jmp
push
daa
mov
testb
ret
or
mov
pop
es
push
push
jg
xchg
ja
mov
mov
pushl
incb
lret
fstp
push
inc
test
cli
loope
sar
xorl
scas
mov
and
dec
cmp
mov
cwtl
add
mov
push
jge
clc
mov
dec
sub
jo
imul
xor
js
mov
mov
enter
aaa
xchg
repnz
movsb
loope
divl
push
lea
and
mov
jb
nop
mov
test
mov
leave
rorb
insl
sbb
pop
fs
in
jmp
xor
jmp
mov
mov
inc
add
pop
add
ja
clc
sbb
fsubr
popf
mov
push
xchg
add
in
mov
push
cwtl
mov
or
sbb
loopne
fisubs
mov
push
in
cli
call
jl
sub
add
jecxz
cmp
pop
inc
add
lret
mov
test
cmp
or
cmp
jecxz
daa
jmp
push
imul
add
xor
xor
enter
lret
add
pushf
fdivrl
sub
xor
inc
adc
or
push
add
pop
loopne
push
je
add
dec
mov
js
jmp
cmp
xchg
jno
cmp
mov
decl
fbld
push
cmp
lods
jo
xchg
mov
sti
and
scas
je
jg
mov
lock
jo
jae
push
flds
or
je
adc
push
fadds
xchg
cmp
in
jb
sbb
xchg
test
push
jb
adc
and
pop
in
addb
and
outsb
add
sub
jno
adcl
jle
int3
cmp
push
outsb
push
sqrtps
cmc
add
jbe
call
push
pop
incb
or
fidivs
outsb
sbb
sbb
rcll
push
push
shrl
xor
mov
loopne
adc
push
int3
or
mov
test
data16
cmp
mov
jo
cmp
pop
and
nop
push
push
push
adc
pop
adc
movsl
aam
xor
data16
and
add
loop
bound
stos
mov
or
cld
cmovno
add
cmp
jl
push
mov
sub
cmc
sbb
ret
popf
mov
mov
mov
fcoml
test
mov
aaa
fmull
sbb
push
divb
inc
mov
mov
mov
fs
lock
sarb
pop
mov
hlt
mov
pop
and
inc
imul
cli
mov
mov
std
dec
pop
cmp
leave
sarb
pushf
es
mov
cmp
shrb
ljmp
dec
or
add
cmc
or
xor
insl
mov
mov
andl
pusha
cmpsl
add
fs
cli
scas
xchg
das
inc
push
pop
lret
or
mov
orb
adc
push
jle
mov
lcall
ror
shlb
jb
mov
jp
incl
cmp
call
inc
loope
push
inc
loop
out
jle
push
cmp
jecxz
xchg
cmp
in
push
xchg
je
nop
push
xabort
outsl
mov
push
arpl
pop
dec
add
inc
xchg
test
rorl
movsb
lods
sub
xchg
cli
mov
mov
add
and
adc
inc
int3
pop
negb
cli
sbb
add
nop
pop
mov
adc
ss
xor
imul
adc
or
add
mov
sub
loop
mov
or
ret
xor
pop
repz
mov
je
or
adc
fcomps
loopne
pop
dec
test
adc
add
shrb
jnp
dec
dec
int
mov
test
jno
arpl
pop
cli
das
popa
pop
ds
iret
or
fbld
das
lock
call
push
xor
scas
dec
je
lea
data16
int3
ja
pusha
js
call
ret
mov
mov
add
sar
subl
nop
add
push
jo
les
lock
cmp
call
lcall
cld
xchg
ljmp
mov
cld
or
pop
push
add
cmp
lods
repz
inc
cmp
inc
cld
test
push
adc
xchg
mov
push
mov
fists
daa
sub
jo
push
mov
sub
call
xor
stc
xor
mov
mov
std
and
test
mov
sbb
inc
xor
ljmp
std
incl
fcoml
cmp
and
sub
les
ret
lock
xor
mov
hlt
push
jns
pop
shlb
mov
mov
es
cmc
sub
les
add
adc
sbb
jbe
jno
push
cmp
inc
leave
adc
jb
fs
add
sub
or
mov
loopne
push
inc
cmpsb
inc
and
jmp
or
rolb
inc
stos
aad
mov
loop
std
iret
inc
jb
cli
or
push
dec
mov
adc
sbb
push
cli
pusha
and
in
fcmovbe
add
cmpb
cltd
mov
lock
add
cld
xor
push
cmpsb
inc
xchg
push
test
hlt
addb
dec
mov
sub
inc
adcl
dec
mov
adc
js
fcompp
test
mov
push
fsubp
mov
push
in
xor
hlt
sbb
add
pop
inc
mov
cmpsb
or
cwtl
xor
enter
mov
add
test
mov
lea
cmp
std
mov
sbb
jne
mov
lods
js
jne
add
rorl
pop
pop
inc
imul
shll
sbb
xor
les
subl
stc
out
fiaddl
pop
lock
nop
xor
xchg
aam
and
adc
lret
push
or
add
inc
jle
xchg
lret
scas
ljmp
sub
or
mov
or
xchg
push
sar
pushf
das
mov
xor
mov
add
insl
jmp
hlt
rolb
add
and
pop
cmp
push
outsl
test
jo
shlb
sbb
mov
je
nop
shr
add
push
mov
ret
fwait
movsb
test
cld
cmp
std
lahf
adc
ja
jp
inc
jle
lret
pop
add
aaa
insl
add
mov
fisubl
jne
mov
mov
stos
sbb
jge
lcall
xchg
push
add
jle
adc
mov
jge
out
in
or
mov
dec
rclb
enter
add
jge
fwait
jge
and
push
or
js
fs
mov
addl
stos
out
sub
sub
mov
add
test
push
or
or
or
mov
push
nop
push
leave
xor
push
clc
cli
mov
call
cwtl
mov
sub
jmp
mov
pushf
add
mov
adc
xor
cmp
in
in
cmpsb
inc
mov
in
push
loopne
jne
push
mov
cmp
jne
aam
jle
test
push
inc
cli
dec
loopne
cltd
dec
and
sbb
outsb
adc
mov
or
nop
pushl
data16
es
jle
mov
jmp
xor
xchg
test
inc
int3
sbb
xor
inc
dec
push
dec
add
and
das
cmpsb
adc
push
cmp
adc
and
lea
sub
aaa
test
movsl
leave
adc
and
add
adc
push
scas
sarb
push
jg
enter
cmp
add
incb
and
ss
data16
nop
fcmovnu
fistpll
pop
mov
gs
mov
lods
mov
mov
xor
call
or
add
sub
add
data16
lret
adc
mov
pop
ret
lahf
outsl
push
adcl
inc
pop
adc
xor
adc
add
negb
leave
mov
mov
mov
add
ljmp
jbe
arpl
cmp
loopne
inc
test
inc
and
inc
subb
sub
push
int3
cmp
aad
cmpl
mov
sbb
xchg
rolb
push
mov
setp
icebp
add
nop
adc
inc
push
lock
dec
pop
sbb
mov
dec
cmp
fists
mov
push
dec
enter
adc
inc
adc
nop
lea
push
sbb
cmp
insb
es
std
ret
mov
mov
adc
pushw
leave
mov
adc
test
sahf
loop
mov
shrb
dec
stos
xor
add
out
les
and
jmp
lds
jmp
ret
lock
adc
icebp
pop
rolb
add
inc
adc
std
jl
inc
add
insb
popa
mov
mov
aam
or
mov
push
or
inc
mov
inc
ficoms
xorl
repz
aam
cmp
cmp
inc
jbe
les
jecxz
xorl
hlt
cmpb
das
pusha
clc
adc
pushf
push
push
xor
hlt
mov
xor
push
push
stos
sub
in
inc
sub
lods
push
pop
call
or
mov
cld
cmp
call
shrb
mov
xchg
dec
adc
inc
jecxz
lods
mov
cmp
je
icebp
push
in
sbb
and
mov
pop
rorl
fsubl
lea
lods
xchg
lds
adc
xor
add
add
sti
lods
and
add
pop
call
jae
out
inc
xchg
clc
ret
test
loopne
out
enter
enter
daa
stos
loop
mov
push
mov
cs
lcall
jb
sub
cmp
sarb
xchg
add
pushf
push
insb
inc
push
js
add
mov
add
lea
pushl
lea
es
out
je
std
push
push
jle
pop
add
mov
insl
sbb
mov
pusha
mov
je
fcomps
in
lea
push
rclb
add
dec
pushf
cmp
and
arpl
jo
pusha
mov
sbb
shll
std
outsl
scas
setl
jo
mov
push
call
xorl
mov
push
or
mov
xor
and
pop
and
sbb
xor
inc
je
inc
aad
push
jl
jbe
or
add
test
in
or
inc
jl
mov
out
shrb
cmp
subl
incb
int
inc
out
mov
adc
jge
rolb
lods
mov
mull
sbb
jg
push
leave
push
xor
inc
lds
std
mov
inc
mov
aam
pop
sbbl
rolb
loope
mov
or
mov
mov
stc
add
outsb
adc
xchg
loopne
int3
lock
push
es
mov
cltd
ljmp
add
push
dec
rcrb
movb
and
lret
jge
aam
lahf
cmpsl
mov
mov
not
test
inc
fisubrl
adc
test
mov
or
in
incl
sbb
out
js
test
and
fs
gs
mov
nop
sub
jno
in
loopne
ret
mov
jge
fadds
shl
push
mov
mov
mov
dec
int
jecxz
add
xor
out
lea
adc
hlt
mov
add
dec
mov
in
cmp
fs
add
cli
pushf
push
insb
jns
popl
push
clc
andb
mov
xchg
or
or
mov
jbe
icebp
sub
dec
sub
jp
enter
orb
shrb
mov
data16
dec
shrb
mov
inc
aam
stos
or
pop
cld
mov
sbb
daa
xchg
mov
nop
gs
mov
icebp
inc
mov
xchg
test
decb
and
mov
adc
pushl
adc
clc
jne
xchg
movsb
pusha
inc
popf
xor
hlt
jo
mov
int3
clc
ret
push
jmp
cmpl
and
rorl
adc
es
stc
or
push
inc
cs
loop
xor
inc
test
inc
repnz
push
ss
jp
clc
cmp
mov
adc
call
cmp
adc
inc
mov
mov
add
sbb
add
in
xor
cld
push
out
movsb
mov
xor
and
int3
dec
cwtl
sbb
or
fdivl
jle
add
mov
arpl
ja
xchg
or
cs
aad
mov
mov
mov
fisubrs
std
ds
mov
cmp
cmp
stos
jne
add
mov
or
out
sub
lea
inc
jne
inc
push
mov
add
rol
out
lods
mov
and
add
mov
jl
aam
lods
mov
adc
rolb
test
xchg
incl
jne
pop
test
jmp
les
inc
test
aas
cwtl
sbbl
and
jp
push
xor
mov
fs
rorl
or
rorb
cmp
in
incl
add
pusha
nop
daa
mov
cmc
push
sbb
dec
mov
and
jle
add
xor
jmp
fbld
inc
loopne
pop
leave
and
gs
ljmp
test
cld
cld
mov
ja
add
inc
and
js
sbb
add
addb
xor
push
sub
cmp
sbb
inc
loop
pusha
xchg
fs
stc
mov
mov
push
push
add
pop
inc
cld
fs
call
je
loopne
ret
mov
rorb
add
cmp
inc
loopne
mov
stc
sub
cld
lret
ljmp
inc
push
jmp
in
and
clc
mov
fdivr
sub
leave
sbb
push
mov
inc
or
pop
das
cwtl
sbb
std
jbe
xor
roll
out
sub
call
inc
sbb
imul
shlb
adc
pop
lea
les
jecxz
pop
clc
xor
test
call
pop
mov
mov
das
mov
ficompl
push
jnp
pop
ja
popf
push
icebp
cmpsl
or
jb
aam
and
cmp
sub
je
je
rclb
jae
inc
dec
test
test
imul
insb
adc
jl
sub
leave
mov
add
or
mov
xor
pop
iret
mov
test
xchg
test
fldt
enter
inc
leave
jne
mov
jnp
in
or
adc
loop
mov
mov
inc
cwtl
or
dec
ss
insb
sub
mov
fs
dec
loopne
pop
fs
leave
jae
mov
dec
push
cmp
inc
aaa
inc
fdivrl
jb
sahf
mov
inc
imul
push
mov
sub
test
add
lock
xor
les
mov
stos
mov
add
sub
cmp
ret
sbb
mov
lods
lods
sbb
jno
xchg
incb
xor
adc
xor
and
and
adc
subl
ret
xor
lock
lcall
push
inc
mov
loopne
je
or
xlat
push
fucomi
push
outsb
in
or
cmp
inc
xor
jae
xchg
pop
mov
arpl
sbb
sbb
xor
or
dec
mov
mov
adc
push
push
aaa
jge
cmp
gs
push
pop
loope
jb
cmp
rclb
jg
stos
int3
sub
add
cmp
dec
or
and
lret
push
push
adc
mov
loopne
idiv
inc
or
mov
insb
rorl
jmp
shlb
or
aam
ja
jne
sub
jge
mov
add
mov
gs
jg
fisubrs
push
sbb
xchg
je
push
fisttps
shl
cmp
jne
and
in
add
push
insb
add
out
inc
pop
add
mov
xor
sub
mov
adc
rcrl
std
in
call
sub
push
pushf
sbb
and
data16
fmuls
hlt
repz
call
lods
in
out
dec
stos
fisubs
adc
shl
mov
jge
mov
adc
call
popl
jl
hlt
add
sarb
incl
sbb
popf
int3
je
jb
mov
xor
cltd
push
nop
je
aam
std
mov
ret
push
add
lret
jmp
ret
je
jge
nop
mov
stc
lea
add
loope
sbb
or
or
mov
mov
outsb
add
mov
pop
pop
jne
mov
std
mov
xchg
add
inc
in
and
mov
sbb
mov
dec
cmpsb
and
mov
inc
pop
jb
call
or
pop
stos
std
cmp
dec
adc
jo
sub
test
ja
push
pusha
sti
mov
push
cltd
push
xchg
push
xor
or
sbb
dec
dec
jle
mov
cmp
and
adc
push
jp
nop
fs
or
les
xor
inc
cld
mov
test
call
push
cld
pop
push
xchg
shll
push
jbe
add
inc
into
pop
stos
pop
imul
mov
jmp
jecxz
jge
cwtl
dec
lea
in
cmpsl
rorl
push
push
add
or
paddd
push
mov
orb
mov
sub
cmp
mov
in
push
sub
cmp
incl
adc
cmp
test
xchg
pop
mov
mov
push
mov
sbb
lcall
fistl
and
loop
sbb
pop
andb
pop
pop
test
dec
cmp
clc
incb
sahf
filds
test
dec
cmp
mov
adc
or
jmp
inc
js
dec
fidivl
enter
enter
push
push
sbb
aam
fdivrs
rcll
xor
arpl
sbb
mov
enter
inc
and
icebp
rcll
xchg
in
sbb
rorb
insl
add
jp
push
jmp
dec
push
mov
mov
nop
dec
jmp
and
and
mov
sub
xchg
adc
cwtl
stos
inc
popf
cmp
arpl
rolb
notb
pop
nop
sub
mov
mov
mov
ss
mov
add
cmp
shlb
pop
mov
mov
sarb
inc
inc
add
mov
adc
add
popa
mov
push
or
shl
call
dec
cmp
shlb
lock
adcl
insb
inc
outsl
pop
shlb
int3
cli
adc
mov
push
loopne
dec
mov
xor
add
aad
dec
insl
mov
clc
xor
inc
pop
ret
cwtl
int3
sub
out
sub
mov
sarl
sahf
fcoms
mov
inc
test
fs
add
jp
fadds
dec
and
sarb
lock
andb
dec
les
rorb
lods
cmp
mov
call
imul
add
das
mov
les
push
push
stos
je
mov
push
sar
sbb
dec
int3
add
pop
mov
aam
cmp
sub
lock
mov
adc
jno
and
cs
pop
add
push
fwait
cli
test
insb
xor
fmull
mov
sub
jae
mov
aam
or
ja
push
push
xor
jmp
fdivl
pop
in
adc
cmp
test
dec
cwtl
scas
xor
push
mov
jno
dec
dec
fiaddl
adc
outsb
xchg
icebp
stc
push
cmpl
inc
addl
sub
xchg
test
icebp
test
ljmp
loopne
out
xor
testl
loopne
pop
mov
iret
ljmp
lcall
shr
push
mov
data16
movsb
push
push
cmp
xor
mov
stos
inc
in
push
push
pop
orl
adc
lods
xor
shlb
mov
fistpl
cmp
sbb
add
cmp
iret
inc
shlb
lods
mov
add
fistpll
sbb
pop
cmpsb
ds
sbb
pusha
and
stos
mov
xor
cld
or
xlat
inc
clc
cmp
dec
push
aam
xchg
push
mulb
dec
mov
mov
je
xor
or
fisubrl
pop
push
xor
in
pop
decl
ret
aaa
mov
in
mov
inc
movsb
jge
shll
lods
inc
mov
push
std
add
pushf
jo
and
lods
imul
push
lods
mov
jmp
pop
jle
mov
add
mov
je
test
int3
xchg
inc
pusha
ds
pop
fcompl
add
lea
push
sbb
add
or
in
jno
fidivrl
sbb
clc
push
mov
mov
sbb
int3
inc
cld
data16
outsb
in
cmp
aaa
mov
add
add
test
rcrb
push
xor
imul
mov
test
and
fs
lret
push
mov
adc
lock
lea
sbb
add
fwait
subb
movsb
and
xor
mov
test
or
inc
add
std
add
push
cmp
inc
ret
int3
sti
int3
unpcklps
cmp
in
pushf
call
dec
add
or
rolb
cld
mov
adc
rclb
pop
faddl
scas
cli
xchg
in
sbb
jno
and
dec
and
and
mov
test
pop
aaa
adcb
jb
call
and
es
es
call
xchg
mov
cmp
add
sub
dec
xchg
pop
imul
push
lsl
incl
xchg
cmp
mov
scas
sub
cld
insb
shrb
jge
jae
aad
xchg
push
xor
js
cmpsb
inc
loop
mov
adc
mov
pushf
add
negb
mov
push
and
mov
mov
outsl
pop
xchg
cmp
mov
inc
or
cli
mov
lock
add
xchg
rol
pop
sub
mov
xchg
pop
aaa
xchg
push
hlt
jmp
add
dec
ret
dec
mov
scas
add
or
xlat
adc
loopne
pop
jecxz
sub
mov
aas
push
cli
sbb
add
and
or
orb
pop
fisubrl
xor
jmp
xor
push
add
in
bound
leave
push
pusha
add
or
push
iret
lea
cli
scas
movb
lea
pop
mov
fidivrl
aam
mov
xor
daa
ret
daa
push
out
mov
test
mov
les
xor
cmp
pop
inc
test
jne
inc
inc
sbb
sahf
ret
push
test
call
adc
jg
jl
dec
jp
dec
sub
mov
push
and
leave
xor
or
mov
pop
and
lcall
xchg
adc
sbb
inc
outsl
xchg
xor
data16
adc
adc
push
inc
insb
and
sbb
call
pop
aad
and
rcr
push
call
xchg
loopne
push
fmul
jmp
jl
mov
mov
jns,pt
mov
ds
lcall
loope
call
in
hlt
cmpsl
addb
pop
push
add
ret
adcb
fidivs
mov
mov
push
insb
orb
push
mov
xchg
xlat
decl
rolb
arpl
stos
es
fisubrl
shlb
leave
and
jo
std
nopl
pusha
mov
les
mov
pop
pop
add
and
adc
add
pop
xchg
push
shrl
and
push
cmp
add
sbb
or
push
faddl
push
push
cmp
cmp
outsb
shlb
push
js
sub
ljmp
jle
fiadds
fcomps
inc
mov
xchg
mov
push
cli
sbb
insb
imul
push
std
and
andl
jp
cmp
mov
jb
insl
xor
es
mulb
dec
mov
rcpps
outsb
lods
ret
inc
adc
pusha
cs
and
test
pusha
incb
dec
dec
insl
push
mov
ja
cmp
es
mov
repz
push
and
stos
cmp
xchg
aad
pop
or
dec
push
shlb
push
pop
pop
adc
push
bound
test
shl
loopne
sub
or
sbb
mov
jo
movsb
xorl
loopne
int3
xchg
mov
jo
adcb
cmpsl
adc
imul
mov
int3
out
fdivs
icebp
stos
mov
mov
mov
sbb
xchg
cmc
ret
xor
loop
mov
mov
mov
test
mov
insb
and
test
call
add
mov
lods
or
lods
xorl
outsl
cli
xor
mov
outsb
int3
pop
add
add
add
mov
or
movsl
inc
fcoml
icebp
mov
je
in
mov
aaa
cmpsb
rcll
jl
adc
loop
xor
inc
test
negb
in
ror
std
inc
mov
and
fistl
daa
adc
mov
lods
sbb
pusha
cmpsb
jp
cmp
idiv
in
les
in
cmp
icebp
add
fisubs
fadds
mov
xchg
mov
lahf
aad
es
xchg
stos
testb
les
js
dec
cmp
inc
jb
ror
mov
dec
or
and
mov
or
lock
test
adc
mov
gs
mov
cwtl
mov
outsl
daa
nop
adc
dec
data16
mov
sbb
pop
icebp
push
dec
xor
in
jae
fmul
jmp
fisubrs
push
ljmp
movd
cmp
ffreep
jmp
out
push
lea
xchg
shlb
jmp
jle
mov
xchg
mov
dec
pop
and
and
pop
leave
lret
aaa
cld
repnz
rorl
adc
subb
pop
adc
mov
adc
lods
jbe
je
insb
push
idiv
cltd
xor
inc
shrb
jo
mov
mov
cld
and
stos
mov
push
loopne
test
xor
push
dec
in
dec
ret
mov
gs
rolb
push
sub
xchg
ret
mov
cmp
pop
or
push
gs
pop
shl
call
push
andl
xchg
sbb
mov
sub
lods
lret
and
adc
mov
clc
out
push
adc
push
and
sub
lds
cld
cmpsl
pop
lods
rcrb
or
gs
loopne
add
adc
pop
add
aam
lea
cli
pop
fs
mov
jo
inc
in
adc
cmp
mov
jmp
jb
add
sub
xchg
jmp
or
imul
add
pop
cmp
xorb
scas
mov
xor
mov
test
and
inc
pop
push
adc
mov
dec
push
adc
dec
xor
mov
mov
lret
lock
add
clc
les
mov
je
cli
movd
call
or
cmp
push
dec
mov
jmp
dec
call
repnz
loope
je
jns
add
scas
inc
test
add
rcll
cmp
add
stos
std
pop
mov
push
mov
mov
sub
push
sub
cmpb
cmp
or
mov
call
das
cmp
lea
movsl
adc
loop
adc
inc
imul
movsb
je
std
jl
cmp
clc
gs
pop
inc
inc
int
or
movups
lock
xor
cld
sbb
or
dec
mov
mov
and
pop
cs
fs
clc
orl
or
sbb
jl,pn
jecxz
pop
xchg
leave
dec
inc
fwait
push
add
lret
lret
mov
je
in
jecxz
push
push
js
ret
ja
jbe
or
cli
out
add
add
push
pop
cld
test
xchg
mov
pushf
gs
and
invd
lock
and
mov
mov
dec
mov
dec
dec
ficoml
xor
test
xor
mov
scas
fsubrs
adc
mov
aas
adc
fidivl
push
ljmp
pop
and
fmull
inc
push
mov
pop
pop
pop
adc
jo
xorl
hlt
adc
pushf
shlb
jne
dec
mov
jl
add
jb
push
xor
add
bound
rcl
or
shll
or
add
movsb
out
inc
xchg
lock
loopne
mov
push
push
pop
int3
fs
or
inc
adc
rclb
loope
fwait
test
mov
jne
mov
mov
sbb
mov
xchg
add
xor
jecxz
sarl
jnp
outsb
shrb
mov
bound
mov
mov
test
into
cld
aam
ss
stc
inc
cmp
pop
jl
gs
pop
shrb
decl
sub
inc
scas
fnstsw
sarb
rorl
mov
in
jne
loop
shl
push
or
mov
inc
aam
jmp
dec
loopne
cmpsl
push
sbb
add
pusha
push
adc
rep
sbb
sahf
addb
push
cmp
dec
cmp
rolb
out
jno
rcrb
dec
and
jmp
pop
icebp
jg
testb
pop
jge
sub
xor
rolb
jle
rol
and
mov
aas
cmp
add
mov
fists
add
xchg
test
add
sub
addr16
mov
mov
jbe
push
mov
xchg
clc
out
mov
repnz
add
mov
rolb
add
or
adc
out
push
pop
mov
ljmp
in
push
cmp
inc
test
jl
pop
or
mov
add
mov
fnsave
and
mov
dec
lcall
dec
inc
lea
add
and
adc
fmuls
js
xchg
movsb
dec
dec
sbb
xorl
je
inc
and
cmp
mov
scas
xlat
aas
lods
mov
mov
outsl
mov
out
clc
out
cmp
lods
sbb
clc
inc
or
inc
and
or
pop
push
mov
fs
movhlps
mov
mov
int3
mov
pop
jne
jmp
mov
push
ror
jmp
stos
inc
push
fucomip
dec
pushaw
scas
pop
test
inc
push
pushf
or
clc
flds
std
cmpsb
insb
push
jne
mov
sahf
and
push
adc
aad
cs
mov
stos
or
add
push
aas
xchg
jno
rcl
aad
mov
sub
cmc
jmp
dec
and
loopne
inc
dec
xchg
dec
popa
or
dec
mov
sbb
lcall
inc
sahf
push
jl
jge
and
or
mov
pop
sub
js
fistl
repnz
xor
mov
push
xchg
sub
inc
and
adc
aas
fmuls
or
mov
sub
fs
push
lea
xchg
and
add
addb
pushw
mov
mov
dec
xor
xor
sbb
push
dec
aam
add
cmp
rol
insb
ds
ficoms
dec
cmpsb
outsb
sar
sbb
jge
mov
cltd
push
insl
or
dec
or
sbb
mov
pop
ds
lret
xor
stos
mov
call
imul
mov
lea
xchg
loop
adc
xor
in
aam
jp
push
movsl
outsl
out
fsubrs
mov
test
clc
mov
aad
xor
ljmp
jb
inc
push
xor
mov
push
cmp
call
hlt
or
jp
std
add
push
sub
mov
inc
lcall
fimuls
jge
dec
sub
sti
mov
mov
pop
incl
aam
ret
decl
nop
mov
pusha
inc
sbb
cld
sar
inc
lods
mov
fs
dec
or
xchg
or
mov
sti
xchg
scas
add
mov
adc
rol
aam
pop
cld
adc
pushf
mov
sub
and
dec
imul
mov
les
sbb
add
ret
and
sti
dec
mov
jns
mov
ret
push
cmc
push
inc
ds
sti
mov
mov
and
or
std
cltd
dec
test
test
scas
adc
subb
mov
xchg
in
xor
sub
lock
inc
fsub
int3
sub
rorl
aaa
or
cmp
inc
mov
ffree
cmpsl
cmp
fs
call
into
cmc
sti
push
push
xchg
mov
jo
leave
lcall
push
push
mov
jp
xchg
pop
adc
xor
mov
insl
arpl
inc
push
pop
loopne
mov
inc
adc
xorl
mov
cmp
lss
xchg
xchg
pop
cmp
adc
call
mov
repnz
insb
ds
push
lcall
call
test
mov
js
jl
inc
lods
push
pop
add
call
mulb
xchg
sub
popa
xchg
push
mov
js
add
or
and
sti
movsb
inc
adc
call
insl
aad
fidivrs
cmpsb
es
dec
and
lods
cld
in
nop
push
mov
pop
dec
decb
jg
sbb
xor
inc
xor
or
out
jmp
pop
bound
adc
data16
test
or
pop
jmp
addr16
mov
bound
hlt
adc
js
les
stc
xchg
aaa
xor
push
loopne
push
testb
cmpb
mov
sbb
pop
mov
outsl
or
insb
stc
movsb
xchg
dec
test
or
rclb
daa
adc
dec
ljmp
aad
outsb
push
push
or
in
lcall
jle
xor
je
shrb
fs
mov
sbb
ds
inc
push
testb
add
cmp
add
sbb
push
mov
fs
push
ret
add
call
shrl
push
mov
adc
je
sub
push
lea
in
inc
xor
inc
ja
ja
mov
pop
cli
pop
push
or
call
jo
jecxz
insb
xchg
fnstenv
pushl
add
mov
adc
cli
pushf
pushl
imul
xor
pop
sbb
lods
adc
sub
shlb
fistl
jbe
inc
xchg
rcl
pop
sub
and
seto
divl
or
loopne
and
sub
lock
xchg
int3
leave
mov
jmp
loop
cmp
pushf
cmp
inc
in
rclb
or
cmp
mov
or
fimuls
push
adc
sub
push
jle
pop
jmp
lods
inc
adc
cld
and
jmp
mov
xor
or
xor
adc
pushf
addr16
mov
push
push
out
jmp
orl
and
rolb
add
lret
jae
pop
cmp
push
loopne
jmp
mov
aam
mov
inc
fsts
call
outsl
clc
or
insb
mov
xor
inc
inc
int3
aam
xor
mov
mov
push
pop
dec
out
xchg
push
or
mov
push
add
pop
daa
lds
test
test
sbb
lods
arpl
sbb
je
pop
xchg
adc
popf
cld
sub
inc
mov
jle
dec
cli
xor
out
scas
es
mov
adc
int
enter
je
sbb
and
xor
xchg
cmpl
inc
cmp
xchg
adc
sub
xor
stos
ja
das
je
int3
mov
in
add
mov
push
mov
pop
test
adc
sbb
dec
into
push
inc
insl
push
add
pop
push
cmp
inc
pop
jg
jbe
sub
clc
push
push
test
dec
xchg
inc
add
clc
shld
in
mov
adc
sub
inc
xor
das
pop
pop
sub
jle
inc
cmp
dec
lock
scas
ja
push
mov
xor
fidivs
sbbb
or
jg
sbb
enter
adcl
icebp
jmp
test
mov
adc
jp
lock
ret
cmp
mov
loopne
enter
aam
fs
int3
or
cmp
and
ret
inc
sub
mov
pop
cs
mov
aad
add
sub
xchg
adc
je
mov
add
cld
lock
loope
daa
adc
iret
dec
mov
mov
cmc
aaa
adc
rol
pop
lcall
pop
mov
gs
xor
je
add
mov
mov
or
ficoms
jg
mov
xchg
fsub
sub
push
loopne
test
jmp
inc
aas
adc
mov
inc
in
pop
arpl
and
hlt
inc
jmp
jb
inc
mov
push
cld
or
ja
pop
rorb
adc
add
pushf
ret
incl
call
ret
jne
rcll
mov
jge
sub
mov
or
lret
loopne
fwait
negb
ret
xor
pop
out
mov
or
sbb
push
ds
es
je
jno
clc
inc
lock
ds
popa
mov
fimuls
ffreep
mov
gs
andb
je
adc
and
fiaddl
enter
push
mov
xor
cmp
rorb
mov
lds
and
adc
outsl
fwait
mov
pushf
gs
sub
mov
aaa
inc
push
inc
stc
pop
cltd
movsl
mov
lahf
pusha
add
lcall
in
push
decb
mov
lcall
mov
xor
shrb
shrl
call
dec
inc
jle
and
fs
cmp
call
inc
call
dec
inc
subb
mov
mov
std
fdivs
push
jecxz
movsb
push
dec
xor
ret
fs
xchg
js
les
and
mov
pop
nop
lock
nop
stos
pop
xor
cs
adc
push
decl
aam
mov
mov
adc
repnz
cmp
mov
dec
jge
mov
cld
iret
fadds
mov
daa
push
sub
or
and
inc
outsb
inc
mov
sub
ljmp
adc
lock
mov
std
enter
iret
jb
loope
add
aam
enter
add
lods
stos
cmpsb
add
or
imul
push
bound
test
lock
cmp
insb
inc
push
jo
pop
call
dec
dec
ljmp
add
in
int3
xor
and
das
adc
or
or
push
add
lds
fdivrs
mov
js
push
or
pusha
adc
dec
ss
jp
sbb
js
ret
or
jl
nop
mov
push
push
pop
cld
add
mov
or
push
inc
inc
js
mov
cmp
das
cmpsb
push
in
sub
push
test
dec
clc
sbb
je
mov
mov
cld
ret
sbb
scas
jne
add
mov
xchg
sub
sti
je
adc
jmp
or
jle
push
and
add
into
pop
adc
or
mov
jbe
fimull
pop
loopne
dec
leave
mov
inc
mov
cld
incl
sahf
add
push
ds
mov
icebp
add
adc
subl
cmp
dec
jge
cmp
cld
xor
lock
jb
inc
pop
inc
pop
jecxz
lcall
lods
or
mov
cmpsb
mov
orb
adc
movsb
scas
sub
stos
pop
out
jne
test
push
xor
mov
ds
and
inc
adc
insb
orb
inc
xchg
pop
ret
stos
sarb
adc
rolb
mov
jle
insl
inc
mov
rorb
push
incl
in
mov
push
xchg
push
sub
add
push
sbb
dec
ret
or
inc
mov
jne
mov
and
jmp
fsubrs
push
push
fwait
push
adc
add
sbb
loopne
sbb
adc
add
dec
data16
jecxz
add
and
insb
dec
mov
sub
lahf
outsl
add
fwait
les
clc
les
incb
idivb
push
push
push
sar
push
mov
test
insl
and
xchg
outsb
inc
and
mul
popf
and
add
test
ret
lret
sbb
pop
cmp
or
leave
or
dec
and
hlt
inc
in
call
sahf
test
mov
incl
ja
sub
test
loop
cmpps
mov
test
orb
dec
xor
cmp
hlt
jae
je
mov
sub
cwtl
pop
lret
cld
outsl
mov
mov
mov
sbb
test
or
ficoms
cmp
fsubrl
push
aad
jmp
inc
dec
and
add
mov
add
adc
cld
and
mov
mov
xor
gs
jecxz
incl
test
push
adc
mov
mov
pop
add
aam
insl
add
in
mov
mov
cwtl
jp
add
stos
adcl
data16
xor
mov
ljmp
sub
mov
out
les
fsubrs
faddp
push
mov
adc
xchg
flds
cs
mulb
call
mov
cmp
outsb
pop
test
cld
sub
or
fldcw
mov
mov
js
push
push
pop
inc
or
push
and
lcall
push
daa
inc
xor
or
sub
jg
push
adc
repnz
call
fmul
in
ret
add
cmpsb
aam
cli
mov
int
dec
push
ficompl
cli
push
call
in
jecxz
aam
movsb
int3
repz
decl
pop
es
subl
dec
fiaddl
and
xchg
cmp
add
sbb
je
out
repnz
and
mov
call
lea
cmpsb
or
js
and
push
ja
sub
call
pop
mov
idiv
and
int3
add
in
pop
and
and
sbbb
andl
mov
add
shl
sarl
incl
push
int3
aas
adc
push
sub
out
loopne
mov
insb
and
add
add
and
lods
inc
push
sbb
mov
add
inc
pop
inc
ret
and
push
pop
stos
decl
mov
mov
rol
dec
inc
inc
int3
call
fldt
or
and
jg
jge
push
movsb
push
xchg
push
and
pop
insb
hlt
and
incl
out
add
add
and
test
test
aaa
sub
mov
out
fcoml
cmp
inc
sub
addr16
stos
out
push
add
adc
ljmp
adcb
and
lea
cs
dec
ret
dec
push
pop
add
mov
fistpl
xchg
ret
push
out
push
or
je
das
lock
daa
lret
xor
pushl
xor
test
imul
pop
mov
sarl
outsb
loop
addl
add
fiadds
inc
aad
add
addl
rol
aam
inc
jge
or
adc
jp
xor
and
dec
insb
shll
fsubr
or
inc
testl
popa
mov
lret
dec
and
fisubl
cs
push
mov
inc
inc
mov
fcoml
fidivs
faddl
js
pop
lods
inc
inc
mov
jne
loop
mov
lods
std
add
push
ljmp
push
mov
mov
xor
in
inc
and
and
stos
xchg
and
movsl
add
outsb
inc
sbb
jg
mov
pop
movsb
adc
notb
add
jb
fldl
incl
mov
mov
inc
insb
add
fs
addb
mov
lods
adc
adc
add
mov
lods
cmp
inc
push
nop
test
sub
rcr
movsl
pop
ret
push
and
dec
call
jge
inc
rcr
cmp
inc
sub
push
mov
jg
push
jmp
repnz
xor
lods
ss
std
mov
pop
incb
add
xor
dec
sbb
lods
add
pop
fs
fildl
popa
and
and
ss
rcrb
xchg
xor
sbb
cmpsb
jne
push
mov
adc
insb
sbb
cli
jo
lods
je
xor
lea
ret
and
decl
adc
mov
cli
nop
jnp
xor
push
mov
add
push
je
mov
inc
sbb
pop
insb
shrl
inc
mov
call
mov
add
push
call
jp
ljmp
test
cld
lcall
sub
push
jns
leave
inc
stos
xchg
lods
js
jmp
ds
xor
pop
gs
jae
shrb
stc
add
fisubrl
mov
hlt
les
inc
add
mov
insb
aas
sbbb
push
pusha
inc
push
inc
je
xor
push
lods
push
pop
push
lahf
in
sub
rolb
sub
jno
pop
dec
jmp
xlat
nop
loop
push
push
xorl
jno
xor
inc
xchg
out
test
xchg
ret
ficoml
jb
pop
loope
cwtl
movsb
dec
sub
fiadds
ja
jmp
and
lock
mov
int3
and
pop
or
cmp
popf
addb
loopne
mov
push
sbb
sub
rorb
jb
and
icebp
add
imul
incl
xchg
loopne
cmp
push
pand
jae
nop
dec
add
or
nop
movl
imul
jl
push
test
syscall
xlat
movsl
mov
scas
pop
pop
or
push
sub
xor
push
stos
push
fildll
add
cwtl
mov
call
mov
xor
test
dec
mov
jge
push
adc
sub
stos
mov
push
cmp
out
mov
push
push
push
sub
ret
decl
push
mov
repnz
sub
pushf
test
inc
mov
mov
cmp
add
adc
aam
fstpl
cmp
inc
jb
in
xchg
hlt
add
adc
clc
add
cs
jne
dec
addb
cmp
mov
shlb
ds
call
cmp
test
je
in
sub
cmc
call
imul
fbld
stc
sub
mov
mov
pop
sbb
fsubp
pop
jo
shlb
jo
ret
hlt
fstpt
fmull
cmp
and
ret
push
mov
xchg
push
cs
and
cmp
call
or
mov
ljmp
mov
pop
and
inc
xor
js
js
aaa
test
mov
jno
aas
mov
lds
inc
mov
sub
mov
test
and
test
mov
aas
mov
jecxz
push
fs
sub
call
loopne
and
dec
cwtl
cmp
hlt
sbb
leave
sub
adc
rolb
mov
and
test
je
dec
in
std
dec
adc
inc
lock
and
testb
push
lcall
jmp
cli
pop
push
clc
pop
mov
sbb
and
fwait
pushf
jl
inc
add
mov
cld
xor
lea
daa
push
aad
pop
add
push
dec
cmp
std
fneni(8087
inc
js
les
test
pop
sub
lock
fisttpl
test
push
adc
mov
add
inc
mov
xchg
pop
loop
ret
inc
cmpsb
jb
jb
push
daa
sub
pop
insl
xor
sahf
pop
loopne
loope
jp
xchg
cmp
push
fimull
cld
shl
push
mov
repnz
pop
sbb
jbe
aam
cmp
push
and
cmp
xorl
jo
pop
xor
or
jbe
outsl
in
push
dec
ret
leave
sbb
cmp
mov
mov
fxam
add
test
call
std
pusha
push
pop
popa
fldl
add
pop
pop
cmp
outsb
add
shl
add
pop
jecxz
and
adc
clc
cmpsb
sbb
cmpsl
add
cmpb
mov
adc
pop
mov
cli
sbb
addl
scas
xor
movsl
add
lss
mov
sub
ret
mov
and
add
pusha
in
ret
push
fmuls
add
in
stos
inc
test
xor
imul
rcrb
cmp
push
cli
mov
mov
pop
incl
inc
sbbl
inc
mov
add
lret
add
cmp
fiaddl
std
pop
div
rorb
call
cmpsb
ljmp
jb
mov
outsb
jle
jg
inc
pop
cli
js
lods
add
out
or
dec
add
push
pop
cmp
push
dec
push
jne
stos
fs
jge
jmp
push
jmp
push
test
adc
sbb
jne
cmp
pop
and
and
add
js
push
cmp
and
gs
loop
rcrl
sahf
add
add
mov
test
push
mov
xor
push
inc
mov
add
push
pop
cmp
sbb
outsl
pop
mov
inc
test
pop
call
mov
jmp
mov
push
xchg
fisubrl
mov
lock
adc
ss
clc
out
lds
add
cmpsb
xor
push
lods
les
lea
lea
mov
jne
cmc
add
pop
cld
jb
fst
lock
lret
push
into
pushf
dec
mov
fucomip
pop
gs
or
mov
rcrb
stos
mov
cmp
mov
push
ds
inc
mov
lock
push
inc
xor
push
add
lcall
les
add
inc
adc
test
sbb
les
mov
clc
xchg
mov
pop
jge
call
dec
or
xor
jle
jo
mov
outsb
es
int3
les
mov
xor
mov
fisubrs
push
and
sbbl
pop
mov
dec
popa
out
sub
or
inc
push
push
das
mov
push
xchg
in
jl
mov
js
mov
dec
call
inc
dec
or
rcll
lods
push
push
ss
rol
lock
lods
les
test
shll
mov
decl
mov
decl
cld
test
mov
push
pop
call
pop
clc
movsl
push
pop
xchg
mov
push
xor
cld
or
fs
pusha
sub
das
xor
ds
fisubrs
leave
adc
adc
adc
mov
sahf
roll
faddp
pusha
insb
mov
call
push
or
xor
cmp
nop
push
std
add
push
or
push
test
pushl
add
cmc
mov
xchg
je
ds
les
sbb
arpl
inc
sbb
shlb
and
push
dec
ljmp
test
lods
push
push
add
pop
aad
inc
test
mov
or
dec
movsb
inc
jl
scas
in
sub
push
lret
pusha
xor
adc
push
xor
loop
adc
and
insb
xchg
loope
lods
jp
jb
jno
stos
inc
cmpsb
js
or
fmull
sar
jae
xor
jmp
std
test
push
loopne
pushl
fcmovnb
dec
es
dec
push
int
xorb
push
mov
orb
cs
xor
sbb
popl
mov
push
cs
test
inc
xor
test
add
cmpsb
aad
push
xor
xor
pop
bound
add
pushf
adc
andl
or
fildll
pop
add
addb
inc
mov
and
inc
jl
std
cmp
and
test
repnz
mov
pop
insl
cltd
out
adc
push
loop
dec
sbb
pop
add
pop
add
xor
in
adc
inc
push
mov
fiaddl
xor
test
and
push
nop
adc
std
cmpsb
mov
cmp
hlt
std
pusha
andl
cltd
js
sub
inc
mov
xchg
inc
data16
shrl
fcmovbe
xor
mov
bound
movlhps
and
add
fbstp
pop
xor
add
push
dec
js
jb
jo
enter
mov
sbbb
pop
shrl
mov
or
jmp
in
jp
je
cmp
jne
loope
adc
inc
push
push
sti
cld
push
fsubl
mov
lcall
adc
ss
push
out
hlt
mov
cmp
sbb
xor
mov
push
out
push
adc
loopne
add
lcall
movsl
mov
pop
push
mov
das
mov
psadbw
add
sbb
mov
xchg
mov
jl
sub
call
je
inc
in
push
mov
dec
cmp
add
out
sub
jo
jbe
ret
pop
mov
sbb
cli
es
loop
test
shlb
cld
inc
popf
sarb
and
push
fs
in
add
test
pushl
inc
enter
mov
add
movsb
std
xor
sbb
dec
inc
pusha
or
dec
or
shlb
or
jno
jmp
rcll
or
call
push
cmp
mov
lock
bound
dec
sbb
and
stos
popf
into
aaa
inc
sub
and
mov
pop
jmp
je
decl
and
sti
lcall
sbb
add
shlb
jmp
add
inc
lcall
dec
or
fwait
add
cmp
dec
dec
dec
adc
sub
shlb
adc
wrmsr
jle
shll
jnp
stos
or
sub
lods
movsl
ja
jl
xor
in
mov
fs
daa
push
push
sub
fs
mov
inc
mov
fldenv
inc
aam
aam
icebp
call
int3
xor
stc
pop
mov
test
jle
add
adcb
int3
mov
pop
cmp
add
fs
les
push
ret
sbb
cmp
popa
push
or
movsl
push
pushf
adc
or
sub
mov
xchg
or
hlt
fcomp
sti
stos
cmp
lods
hlt
sub
inc
xorb
rorb
call
mov
xchg
test
pop
cmp
push
mov
push
cltd
out
mov
push
fsub
je,pn
xor
test
inc
inc
cmp
incl
mov
pop
jge
jbe
mov
lock
dec
les
mov
xchg
ja
xchg
call
icebp
xlat
and
mov
jns
stos
flds
jmp
mov
add
mov
icebp
sub
lcall
cmp
popa
sub
jbe
lea
cmp
inc
inc
movsb
push
jb
and
pushl
add
mov
push
xchg
cld
insb
ret
mov
or
jnp
outsb
jne
pop
xchg
nop
call
mov
sbb
pop
stos
and
xchg
jbe
pop
mov
mov
pusha
and
fs
les
mov
adc
or
je
adc
xchg
cld
mov
lea
mov
cmpsl
or
adc
fs
add
ret
inc
ret
mov
into
mov
ljmp
int3
shrl
lock
mov
pushl
pop
jmp
or
popf
je
arpl
sti
js
cmp
clc
xchg
mov
hlt
mov
adc
inc
mov
cld
pop
push
and
jmp
mov
or
je
or
pop
push
dec
outsb
sbb
test
xchg
cmp
ss
push
ret
or
dec
clc
pop
sub
test
dec
dec
inc
incl
add
subl
hlt
fisttps
add
xor
jb
push
push
jae
lods
je
sub
rclb
cwtl
sbb
sarb
xor
lods
add
inc
data16
icebp
mov
mov
out
pop
sbb
inc
incl
idivb
decb
mov
inc
xchg
call
jo
mov
ss
ljmp
push
inc
cwtl
test
mov
loop
cmp
push
jne
cld
sbb
xor
jae
call
push
fcoms
pop
sbb
repz
add
jo
movsl
call
inc
ret
inc
cmp
add
pop
inc
insb
mov
insb
nop
push
sbb
mov
not
rolb
dec
adc
mov
and
add
jl
test
add
jbe
shrl
or
loopne
dec
cmp
mov
ret
xor
jp
test
aaa
insl
and
adc
outsb
incl
cmp
sub
mov
jmp
leave
xor
pushf
lea
in
add
mov
data16
push
jle
call
insb
rcll
lods
sbb
cmp
adc
data16
lcall
push
js
adc
cmp
scas
push
cmp
ljmp
stos
jmp
sub
nop
add
mov
add
test
lock
es
cs
mov
push
jne
sbb
insb
adc
or
in
inc
pop
add
push
clc
adc
xor
cmp
mov
dec
jbe
mov
mov
aaa
sbb
push
sub
push
push
mov
push
adc
push
xchg
or
inc
pusha
mov
sbb
push
rol
stos
xchg
sbb
insl
out
inc
sub
addb
jno
pop
sbb
inc
xchg
push
testb
or
fs
lea
pushf
jne
pop
or
xchg
inc
push
mov
and
into
cmp
fisubl
and
sub
test
lock
xchg
jge
mov
mov
cli
orl
inc
or
out
mov
inc
inc
push
jl
mov
outsb
cmp
pop
sbb
je
push
rolb
aaa
or
shr
pop
inc
loopne
or
push
pop
loopne
mov
xlat
or
pop
mov
inc
pusha
dec
and
push
cmp
adc
and
xchg
std
es
stos
gs
adc
pop
xorb
adc
adc
repz
dec
add
pop
cmpsb
aam
pop
cmc
xchg
test
data16
sarb
dec
std
push
and
and
push
xchg
enter
cmc
cmp
mov
lock
test
test
je
or
imul
cmp
test
lcall
nop
mov
push
xor
mov
je
pop
or
aaa
xchg
test
stos
mov
and
cs
mov
sbb
pushf
inc
ret
mov
out
hlt
xor
fmull
cmp
push
sarb
pop
or
and
orl
popa
adc
mov
enter
dec
pusha
adc
adc
or
push
pop
fldl
lea
push
pop
movl
ret
and
movsb
lea
jg
mov
mov
add
gs
push
jmp
repnz
in
add
call
push
add
add
mov
lock
decl
test
cmp
clc
pop
mov
cli
call
ret
mov
nop
adc
test
in
in
and
call
pop
enter
aaa
push
inc
sbb
adc
je
adc
pop
lds
ljmp
and
int3
mov
mov
arpl
shl
ja
and
xor
rcll
mov
mov
push
or
fsubrp
inc
push
shr
push
shlb
or
sub
inc
in
push
push
or
mov
mov
pop
mov
add
pop
mov
or
inc
je
jge
inc
pop
pushf
shrb
cs
inc
or
aam
adc
shlb
hlt
pushl
rorb
mov
data16
lock
cld
outsl
mov
cmp
mov
sbb
stos
mov
je
cs
cmp
jae
stos
sbb
dec
push
xchg
movsl
sbb
dec
add
xchg
sarb
sbb
ljmp
lcall
add
pop
add
out
dec
pop
arpl
and
mov
test
push
add
add
xchg
push
cmp
cs
hlt
mov
adc
nop
fs
mov
orb
pusha
pop
or
jnp
pop
rorb
sub
mov
rolb
pop
andb
outsb
and
fcompl
or
add
inc
push
sub
pop
call
cs
cld
cwtl
xor
or
sub
icebp
divb
call
sub
test
inc
dec
push
mov
insb
jb
subb
add
stos
adc
mov
push
pop
mov
mov
ja
inc
add
push
int
js
andb
sti
test
mov
or
mov
cmp
jo
je
inc
lods
idivb
nop
loop
push
sar
dec
test
inc
push
test
cmp
jge
test
jne
les
push
mov
test
inc
xorl
sub
cmpsl
sub
leave
js
xchg
lea
pop
je
outsl
adc
mov
sbb
mov
outsl
push
cmc
fldenv
inc
dec
mov
pushl
adc
xchg
lcall
add
negb
push
test
add
inc
clc
outsb
xchg
fisttpl
test
test
jnp
movsl
mov
loop
sub
add
push
jl
les
scas
mov
push
adc
xor
inc
loop
outsb
les
pop
test
lods
ficompl
je
jne
in
call
sbb
pusha
insl
pop
dec
stos
mov
push
lods
lea
aaa
mov
pop
adc
scas
or
cmp
pushf
mov
popf
mov
daa
jmp
inc
nop
pop
jbe
pop
test
push
lock
call
cmpsl
add
mov
push
mov
repz
dec
dec
sbb
jmp
loopne
push
dec
and
xchg
movsb
adc
push
std
mov
addb
js
les
mov
lods
sub
sbb
into
repz
jb
filds
jns
loop
push
sub
es
ljmp
orl
testb
cmp
lock
inc
je
je
jne
fstpt
nop
add
and
aam
cltd
scas
das
nop
jbe
pushf
mov
and
faddl
fidivl
mov
mov
daa
cmpsb
jle
sbb
test
jb
push
add
jo
leave
lcall
rclb
je
fs
mov
test
xchg
or
adc
and
pop
in
fiadds
cs
jne,pt
push
mov
lds
xor
shrb
int3
je
cmp
mov
orb
into
std
inc
sub
call
fcomps
mov
movsb
mov
add
add
lea
push
imull
insb
and
add
sub
fmull
adc
cmp
inc
push
movb
hlt
movd
test
shlb
add
lcall
addl
xor
add
call
jb
mov
dec
mov
aas
and
testb
insb
mov
push
inc
fmull
mov
mov
sbb
rcrb
dec
xchg
or
loopne
and
push
add
icebp
add
mov
adc
scas
test
dec
stos
or
movsb
test
in
outsl
adc
cmp
add
mov
ljmp
or
adc
or
std
outsb
es
add
mov
jb
aam
mov
daa
or
adc
inc
inc
insl
adc
adc
sub
pusha
test
add
dec
sbb
dec
or
test
or
mov
shrb
enter
fisubl
inc
rclb
jb
ret
sub
sti
int3
mov
pushl
inc
jmp
and
adc
jge
cwtl
pop
pusha
shrb
ljmp
mov
push
inc
out
enter
dec
mov
es
rclb
push
in
jecxz
xor
fs
shlb
subl
xorb
push
call
bound
jp
inc
cmpsb
pop
and
dec
add
scas
xchg
icebp
leave
and
adc
push
dec
inc
or
adc
jne
pushf
sub
pop
enter
ja
pop
jg
sub
fnsave
adc
lods
mov
ret
cmp
call
push
je
dec
nop
int
popf
movsl
shlb
lea
sub
jp
jmp
ret
popf
pushf
dec
cld
pop
cmp
adcl
adc
scas
insb
sbb
out
jg
jg
movsb
adc
test
icebp
les
fimull
jne
add
cmp
push
test
sbb
test
add
pop
sub
ret
xor
push
dec
dec
sar
call
scas
xor
add
or
dec
inc
push
jg
loop
std
xor
in
pushl
or
add
adc
aas
push
xor
lock
fdiv
xor
lods
mov
sbb
add
inc
mov
outsb
bound
mov
adc
flds
out
or
sub
and
adc
out
pop
jecxz
fistps
or
mov
ljmp
xchg
fwait
loope
jl
xchg
jb
or
mov
or
es
add
mov
inc
adc
lcall
bound
mov
add
xor
notb
add
clc
fadds
and
jle
ja
push
mov
add
int3
shll
mov
inc
pop
sbb
pop
dec
adc
and
xor
and
add
fldcw
and
lock
and
dec
inc
mov
ljmp
and
and
sub
adc
sahf
andl
out
cli
xchg
inc
mov
mov
jge
mov
imul
add
std
in
movsb
mov
xorb
shrb
or
insb
int3
popf
inc
jle
cmp
push
cmp
add
cli
out
clc
cltd
dec
ficoml
mov
or
into
jbe
jo
ror
js
and
popa
insb
fmuls
mov
jle
sub
test
ret
xor
xchg
pop
pop
in
hlt
pop
incl
jo
mov
mov
mov
push
daa
fs
mov
adcb
nop
pusha
mov
aaa
jge
push
je
mov
add
sti
mov
nop
pop
adc
sub
cmp
mov
lds
addr16
loope
insb
dec
adc
sub
jbe
hlt
jns
clc
jmp
fs
cmp
fimull
dec
sub
add
mov
sbb
mov
or
xchg
test
cld
es
xchg
xor
pop
push
test
enter
ljmp
push
and
or
push
shrb
sub
pop
sub
cmovb
test
lret
in
inc
add
push
fcoml
lret
call
out
andb
les
int3
inc
test
pushl
add
inc
aam
test
pop
pop
movsl
dec
imul
call
pop
xchg
mov
call
inc
addr16
fs
mov
stos
decl
clc
xchg
pop
add
mov
inc
aas
xor
mov
mov
sub
adc
fstl
mov
jne
lahf
add
inc
xor
pop
or
mov
pop
jne
ja
int3
dec
insb
sbb
or
clc
into
or
push
inc
xchg
push
jecxz
insb
jmp
lcall
sub
cmc
xor
not
mov
cs
test
xor
shr
push
mov
pop
aas
or
adc
nop
scas
push
sub
or
ds
loope
add
popa
lds
xor
test
jp
gs
mov
jle
mov
jno
xchg
in
mov
mov
insb
mov
mov
jmp
mov
jns
insb
inc
jbe
int
push
std
inc
sti
xchg
pop
xor
int
mov
xchg
xor
ds
push
adc
ljmp
movsb
test
into
cs
cli
scas
fadds
notl
and
sbb
ds
push
push
shlb
rclb
pop
dec
mov
pop
test
or
pusha
test
inc
mov
or
outsb
inc
cmp
xchg
int3
sbb
mov
shlb
call
mov
and
add
and
dec
mov
outsb
sub
repnz
cmp
jp
mov
and
mov
add
cmp
call
inc
je
lea
test
inc
lret
sbb
add
sub
ss
add
call
in
out
jne
add
sbb
dec
mov
imul
insl
test
ja
push
rcrb
lret
popa
xchg
inc
push
or
outsl
loopne
es
sbb
enter
icebp
and
rcll
xchg
enter
outsb
push
orl
add
mov
sub
pop
popa
fwait
and
cs
movsb
lock
insb
xchg
nop
pop
call
ret
imul
or
inc
jne
push
das
aad
adc
or
xchg
rolb
hlt
leave
add
sbb
xor
adc
pop
add
incb
push
push
inc
push
sbb
push
mov
inc
inc
movsl
ficomps
cmp
dec
cmp
jbe
mov
and
sub
cld
push
rcll
add
or
or
push
xor
roll
cli
add
shll
addr16
test
push
xor
mov
cld
lret
in
les
mov
aaa
mov
and
pop
arpl
int3
ret
add
xor
ss
rol
sbb
mov
pusha
cld
cwtl
icebp
jbe
mov
mov
rolb
cmp
adcl
push
xor
mov
add
outsb
pop
inc
xchg
push
push
pop
and
negl
notb
lods
popf
push
or
push
test
test
ljmp
mov
incb
mov
sti
cmpsb
or
jo
add
or
shll
cmp
fists
fdiv
cli
cli
cmp
dec
pop
movsl
stos
scas
pop
sbb
mov
dec
cmp
jg
enter
psrld
jg
mov
mov
leave
hlt
mov
sbbl
das
push
mov
ficoml
push
scas
adc
and
mov
in
mov
jecxz
insl
cmpsb
cmc
inc
push
pop
test
jmp
and
lcall
inc
inc
jae
ds
jbe
or
pop
shr
add
out
nop
lret
inc
jo
push
xor
inc
inc
test
add
fcom
add
jg
cmp
mov
notb
cmp
adc
mov
test
push
inc
add
outsb
xchg
or
inc
pop
mov
pminub
pop
pusha
outsl
jge
or
inc
out
mov
andl
xor
loop
jp
mov
or
or
aam
dec
push
outsl
andb
xchg
mov
cmp
mov
push
sbb
test
push
cld
sub
mov
sbb
mov
xchg
std
push
adc
fcom
or
add
shlb
or
or
rcrb
xor
insb
xor
add
insl
jg
mov
je
push
mov
mov
enter
pop
add
add
gs
and
mov
or
lahf
and
mov
mov
jne
fadds
rorb
push
add
xchg
ficoml
pop
pop
lret
or
mov
sbb
lock
sub
sbb
pop
push
cmp
gs
faddl
scas
and
adc
test
mov
push
xchg
pop
in
add
cmp
mov
pop
push
inc
imul
push
cmp
adc
dec
cld
fcoml
push
insb
loope
cmc
fs
sahf
mov
or
add
cld
roll
lea
push
ret
cmp
mov
ret
mov
mov
cmp
push
add
cmp
gs
test
sub
adc
cli
mov
pop
mov
out
adc
mov
fidivs
lcall
adc
testb
cli
jl
or
cld
sbb
mov
out
test
pop
push
mov
pop
push
popf
dec
jg
or
inc
inc
test
rclb
cmp
andl
mov
pop
inc
test
add
jb
cmp
adc
jne
cmp
add
insl
xor
js
jp
xchg
rcrl
push
adc
mov
cli
adc
pop
std
or
dec
dec
push
mov
sbb
je
ljmp
fstpt
pop
je
je
push
mull
jge
xor
mov
insb
movsb
push
mov
add
jmp
fnsave
fsubrl
testl
rolb
xor
mov
mov
jb
fcoml
mov
or
push
outsl
push
adc
sbbl
pop
aam
hlt
lcall
add
adc
insb
cmp
xchg
add
inc
dec
cmp
add
or
sub
dec
mov
loop
cmc
push
push
push
xor
and
push
fwait
in
mov
mov
bound
fsub
pop
pcmpgtw
cld
js
mov
dec
gs
gs
fwait
dec
test
jp
ret
mov
mov
dec
push
sahf
and
mov
inc
and
push
push
mov
aas
lods
rcrl
or
popf
mov
pop
mov
std
dec
cmp
adc
or
and
clc
add
or
ss
jnp
mov
adc
mov
push
dec
imul
sub
ficomps
pop
push
sbb
and
xchg
ss
push
nop
inc
fsubrs
mov
adc
mov
or
mov
lods
fidivl
in
add
dec
test
pop
adc
push
pop
pusha
dec
in
outsl
outsl
xor
mov
jmp
sbb
pop
out
add
mov
add
cmp
cmpsl
js
lock
int
add
jbe
decl
add
insl
and
mov
je
imul
pavgb
add
cmp
add
push
adc
test
adc
or
stos
pushl
fs
inc
add
inc
add
loopne
aam
lea
jl
xchg
sbb
inc
push
add
pop
movb
lods
xor
icebp
jl
sahf
gs
cmp
jne
cmp
and
mov
cmp
sarb
addb
ret
cmpsb
clc
add
cmp
outsb
je
cmp
cmp
hlt
or
jae
inc
and
stc
jl
jmp
lcall
push
jmp
xor
rolb
xor
in
add
dec
and
jb
test
int3
bound
hlt
jge
leave
or
out
jbe
mov
mov
or
mov
call
aad
adc
aam
inc
les
add
fmul
xor
in
inc
movsl
xchg
lods
add
pop
jmp
loop
lcallw
xchg
aam
je
pusha
out
fs
stos
test
mov
jae
test
lods
enter
lret
inc
add
test
pop
cli
add
pop
add
jo
or
cmp
repnz
shlb
or
mov
add
pusha
test
add
les
and
cmpsl
sub
push
xor
movsb
int
aad
or
int3
pop
mov
or
pusha
rcll
dec
adc
mov
insb
pop
inc
pop
std
pop
sar
xor
add
fcoml
mov
or
jne
xor
in
outsb
mov
imul
sti
rorl
call
cmp
and
dec
pop
loop
or
stc
push
pop
and
ret
outsl
mov
jmp
fiaddl
add
shll
lret
sub
mov
and
hlt
rol
jnp
ljmp
in
cwtl
lds
flds
test
mov
add
inc
dec
mov
add
test
mov
push
ds
add
mov
jb
add
adc
jmp
pop
ret
pop
repnz
fs
push
fwait
mov
clc
mov
fsubs
and
add
add
mov
or
add
adc
popl
movsb
xor
xchg
lods
sbb
les
pop
mov
and
pop
sar
cmpb
mov
and
outsb
in
push
data16
push
push
cld
jle
inc
push
rolb
inc
or
test
jbe
xor
jbe
jge
cmp
cmp
inc
mov
mov
jg
pop
mov
xor
mov
mov
dec
inc
jle
push
dec
mov
xchg
add
sbb
mov
inc
stos
xchg
cmc
mov
jb
ss
xchg
insl
out
push
test
adc
ficoml
and
call
xor
xor
add
test
lods
push
out
add
pop
mov
test
cmp
jo
cmpsb
push
inc
add
stos
in
int3
ret
sbb
mov
outsl
leave
push
insb
mov
and
sbb
or
je
test
fnstcw
sub
adc
addr16
cli
idiv
mov
sbbb
jle
add
clc
lods
add
jmp
shlb
jp
push
xchg
add
cmp
sub
dec
out
mov
loop
sbb
jnp
push
cmp
mov
xor
dec
fldl
pop
jo
mov
aam
adc
aas
push
xchg
mov
std
fisubrs
sbb
mov
neg
pop
filds
add
loope
loopne
dec
push
add
mov
sbb
addr16
sub
jo
add
ss
adc
icebp
filds
or
cmp
test
xor
bound
dec
fsubrl
add
incl
push
in
loope
ficoml
setbe
adc
sub
pop
call
push
mov
inc
dec
andb
adc
int3
pop
push
adc
je
sbb
fwait
or
mov
insb
fs
jmp
inc
pop
inc
dec
jmp
jp
mov
outsb
lea
push
lcall
mov
mov
add
or
pop
sidtl
andb
in
nop
pop
add
fcmovb
je
call
push
and
push
popf
test
push
mov
mov
pop
fiadds
cmp
xchg
mov
adc
push
ror
mov
insb
cmpsl
mov
cmp
aaa
insb
fbld
jmp
push
aas
mov
xor
cmc
inc
out
xor
push
push
lods
aaa
add
pop
les
push
je
or
jle
adc
cld
push
push
je
push
xor
adc
test
sbb
cmpsl
cmpsl
nop
jl
pop
add
add
xor
out
pop
std
cmc
std
std
add
mov
testb
addl
cmp
xorl
aaa
jmp
adc
lock
jge
stos
aaa
jmp
stos
cbtw
pop
pop
shlb
fxch
movsl
ret
mov
outsb
js
mov
faddl
pusha
mov
call
loopne
sbb
loopne
ljmp
lea
cs
add
mov
pop
je
insb
std
outsb
mov
je
cmp
dec
ljmp
les
jb
ljmp
or
into
ljmp
mov
add
cmpl
xor
add
cs
je
adc
jne
pop
mov
mov
popl
inc
sarb
cmp
out
adc
dec
sub
mov
cmc
jg
dec
cld
arpl
cmp
inc
lahf
adc
loopne
movsb
call
ljmp
hlt
cld
add
add
int
dec
arpl
mov
mov
ret
sbb
call
and
inc
cmp
mov
lret
pop
add
loop
add
xchg
iret
xchg
push
movsb
push
call
jmp
push
xor
test
mov
cld
ret
add
mov
std
pop
mov
cmp
and
push
test
rolb
sahf
and
cmp
xor
sub
push
cmp
nop
sub
fs
mov
andb
lock
addb
movsl
jb
sub
shlb
clc
nop
stc
fcmovnb
jbe
adc
add
aam
cmp
fsubs
rclb
loopne
ret
sub
push
pop
out
test
mov
pop
sub
aas
shlb
popa
push
hlt
lea
mov
int3
mov
adc
sbb
pop
adc
jg
inc
xor
clc
lcall
in
mov
xchg
lcall
or
sarb
mov
lret
mov
add
or
in
cmp
stos
mov
push
push
inc
adc
xor
inc
lahf
xor
and
inc
les
adc
push
xor
push
sbb
fistpl
cmpsb
or
movsb
jb
push
ss
adc
call
push
aam
add
adc
aaa
jns
aaa
add
dec
or
or
idivb
push
call
add
outsb
outsl
negb
rcrl
jge
push
inc
xor
stos
bound
ret
call
sub
or
adc
mov
sbb
iret
rolb
cmp
add
xor
or
popa
push
push
xor
sbb
mov
push
and
scas
in
pushf
lea
gs
sbb
test
inc
fistpl
xor
cmp
add
lcall
nop
mov
cli
sub
add
cs
sti
inc
call
les
push
sbb
sahf
rorb
push
stc
cmp
clc
ljmp
out
dec
mov
mov
add
js
dec
repnz
fdivr
mov
ror
add
test
sub
mov
pop
outsl
cld
leave
lock
dec
int
es
fcoml
sbbb
ljmp
adc
addr16
shr
jbe
lods
decl
pop
and
cmp
pop
movsb
repz
shrd
add
cmp
ret
dec
sbb
lcall
subb
test
or
push
into
jl
push
mov
enter
bound
mov
int
dec
inc
xchg
mov
leave
in
pop
int3
adc
jae
push
inc
aam
sar
shll
or
mov
cmp
in
mov
in
jg
or
orb
lea
stos
xorb
jl
into
mov
mov
clc
push
add
loope
dec
std
inc
test
mov
or
outsl
mov
mov
mov
test
push
je
jbe
mov
add
mov
cmp
push
or
inc
jne
mov
call
jo
jne
mov
loop
in
mov
xor
sub
dec
aas
cld
fs
fs
sbb
call
xchg
fisubl
into
ret
shll
xor
adc
out
cmpsl
sub
mov
outsl
mov
push
jns
mov
cmpsb
cld
in
inc
gs
mov
dec
dec
test
in
pop
sbb
fisttps
push
jle
cltd
inc
loope
pop
or
mov
jl
shlb
sbb
mov
cmc
cmp
push
jge
xchg
and
mov
add
adc
mov
fs
mov
in
adc
xor
rclb
fsubrs
inc
mov
adc
mov
inc
fimull
repnz
sub
in
cmp
sbb
sbb
add
outsl
add
mov
mov
or
xor
push
mov
stos
or
ds
or
shrb
inc
shlb
dec
xchg
mov
push
in
ds
mov
clc
pop
dec
jl
inc
xcrypt-ecb
cmpsl
dec
or
mov
mov
lods
test
out
lea
jle
mov
nop
jmp
data16
fcmovnu
lds
mov
rolb
pop
add
jle
test
roll
sub
pop
je
stc
pop
mov
shl
ds
call
sub
in
movsb
sbb
sub
or
ret
pop
cmp
pop
mov
outsb
push
push
mov
dec
pushf
insl
sbb
cmp
je
pop
movsb
sbb
test
adcl
push
test
loopne
mov
adc
mov
inc
dec
loope
in
push
dec
mov
mov
aam
fimuls
sbb
rclb
fisubl
loopne
add
and
jge
and
cmp
inc
test
cli
jg
jno
outsb
jne
mov
mov
adcl
sub
adc
movsb
jp
mov
xorl
dec
xchg
movb
or
std
mov
and
je
add
or
divb
lcall
sbbl
scas
push
clc
mov
scas
pop
jne
inc
add
nop
test
add
push
ja
adc
outsb
xor
and
lret
aaa
jl
push
sbb
add
movl
dec
sti
ss
mov
es
inc
and
sub
push
jne
scas
add
faddl
add
pushl
les
sub
or
inc
cld
subl
test
rcr
fidivl
cwtl
jb
cli
aas
add
add
cmp
enter
dec
cmp
rorb
add
aam
sub
xor
adc
jg
add
out
add
repnz
out
jb
adc
add
les
int3
mov
mov
push
dec
xchg
call
mov
outsl
pop
or
mov
neg
les
sbb
inc
iret
or
pop
dec
aaa
sbb
imul
adc
std
negb
adc
push
xor
andb
popf
or
shrb
inc
lret
aam
ret
ficomps
in
mov
push
mov
dec
inc
mov
jp
test
sbb
lods
insb
bound
mov
call
or
scas
adc
push
ds
mov
mov
push
hlt
mov
mov
in
push
bound
insl
push
bound
or
or
push
mov
insl
das
sbbb
pop
mov
call
mov
adc
mov
pop
clc
push
aam
xor
sbb
mov
rcrb
std
or
add
int3
inc
or
loopne
push
out
decb
jno
and
xor
push
ss
lahf
insb
fstpl
test
int3
ret
and
inc
pop
xchg
popa
insb
mov
addb
inc
and
inc
mov
scas
mulb
push
movq
call
int3
sbbb
test
mov
nop
push
test
shl
mov
push
ss
stos
add
mov
sbb
dec
push
lds
out
xlat
pop
mov
pop
in
insl
outsl
mov
pop
xchg
mov
sub
pusha
xor
test
stos
je
and
aam
incb
pusha
jb
cmp
jmp
sti
mov
xchg
cmpb
push
xor
pop
sbb
cwtl
or
dec
push
test
jno
lds
pop
sti
sti
pop
add
add
adc
jae
pop
adc
add
xchg
xor
dec
int3
fs
loopne
push
fs
push
and
mov
cltd
in
clc
push
push
mov
fwait
dec
mov
mov
and
and
sahf
dec
add
ret
shlb
data16
cs
and
pop
adc
int3
push
lcall
add
mov
jge
das
sub
add
jae
push
mov
mov
pop
cltd
movl
insl
xor
and
das
icebp
ljmp
test
cmp
or
and
sbb
add
lea
test
mull
lahf
sbb
jmp
or
jl
pop
pop
jecxz
jg
xor
add
incb
std
add
cwtl
cmp
mov
jb
inc
je
jb
ljmp
dec
in
xor
inc
stos
aaa
insb
mov
bound
ret
add
rol
inc
jno
push
test
lret
push
lea
shlb
xchg
add
jle
addl
jg
add
adc
adc
push
push
mov
leave
ficomps
cmp
push
cmc
lock
mov
jge
add
or
inc
xchg
insb
add
or
popa
pop
cmc
jle
adc
js
setne
dec
xor
sbb
pop
cltd
incb
adc
mov
rclb
test
aas
or
xacquire
push
mov
push
pushl
call
jl
rorl
ret
inc
jne
push
inc
add
push
mov
push
insb
jae
cmc
fninit
add
adc
bound
adc
sti
adc
push
stos
mov
and
mov
repz
pushf
mov
fbld
and
lahf
lods
add
stc
ljmp
sub
jge
push
mov
cmp
fs
pop
ret
js
mov
and
push
mov
push
or
inc
pop
pop
shrb
xor
mov
rdpmc
shlb
not
out
adc
in
out
call
mov
repz
push
push
jmp
jmp
cmp
lret
mov
rclb
cmp
loop
les
add
add
inc
adc
das
js
mov
dec
push
pop
je
sbb
pop
adc
adc
test
inc
push
cmp
push
outsb
add
push
pavgb
mov
xchg
mov
adcl
adc
inc
inc
mov
std
lcall
je
sti
mov
roll
daa
inc
out
mov
push
mov
fisttpl
push
in
test
movl
cli
inc
mov
add
dec
cmp
clc
mov
mov
and
push
or
mov
loopne
sbb
bnd
push
icebp
outsb
test
or
mov
mov
xor
add
mov
jo
add
dec
shlb
push
mov
push
push
lret
jno
adc
or
popa
hlt
push
jne
and
dec
adc
push
ljmp
jmp
int3
add
mov
inc
loopne
lcall
dec
pop
sub
add
push
jne
sub
stc
sbb
jno
je
xchg
ss
mov
sbb
sbb
test
xchg
pop
clc
adc
lret
pop
jmp
dec
add
andb
jnp
jbe
xor
sbb
mov
ret
nop
inc
les
cmp
push
add
and
rcrb
add
xchg
push
dec
cmpsb
dec
es
pop
in
add
and
xor
mov
sbb
popf
jl
fiaddl
out
xor
add
xchg
outsb
mov
pop
pop
mov
outsl
int3
sub
mov
sti
pop
cld
dec
lds
cmp
popa
xchg
inc
es
pop
push
or
mov
daa
push
shrb
scas
ret
mov
adc
clc
in
pop
pusha
mov
les
out
into
add
outsb
stos
inc
in
testb
inc
or
mov
loopne
loopne
test
nop
pop
add
fcompl
and
add
sti
dec
dec
outsb
sbb
and
js
mov
sbb
add
xor
mov
fsubrp
ss
shr
and
dec
push
aas
jae
mov
mov
fiadds
shlb
add
or
mov
pusha
jmp
cmp
and
pop
cli
push
addl
cli
dec
clc
inc
dec
pop
fsts
pusha
xor
fbld
test
decl
dec
mov
mov
jne
push
mov
xor
icebp
insb
jne
adc
inc
test
mov
mov
lods
lret
fistl
sbbb
inc
imulb
fwait
test
cmpsb
test
add
cld
push
mov
mov
sbb
mov
adc
sbb
adc
dec
sub
xchg
mov
adc
in
cmp
inc
out
insl
aam
sub
push
sbb
nop
fwait
add
std
sub
or
je
insl
je
mov
or
ljmp
mov
dec
and
lock
loop
jmp
lcall
add
int3
add
jbe
add
icebp
loopne
scas
lea
aam
pop
fs
call
sub
push
fisubrs
lock
icebp
pop
xor
sbb
sarl
out
fadds
dec
jb
cmp
inc
jae
mov
fcoms
mov
adc
mov
or
pusha
cld
outsl
push
les
or
test
in
es
out
push
pushf
xchg
mov
jle
mov
jo
shll
arpl
es
ds
xor
mov
shl
fdivrs
inc
sub
das
add
cmp
cmp
adcl
cmp
add
insb
or
jne
bound
add
xlat
jmp
popf
insb
shlb
js
and
mov
ljmp
cld
rorb
call
xchg
xor
fs
pop
push
sub
mov
cmp
jp
loope
mov
push
rclb
mov
rcr
std
sub
mov
jp
mov
daa
loope
mov
sbb
mov
cs
mov
loope
xchg
test
and
mov
mov
cwtl
pop
dec
loop
pop
js
jns
add
inc
sbb
into
add
rclb
pop
jmp
jmp
clc
cmp
nop
cli
adc
push
mov
enter
mov
cmp
pusha
dec
adc
pusha
sbb
lock
pop
mov
call
dec
cwtl
push
add
ja
aas
sub
dec
inc
inc
sbb
jne
clc
or
test
and
lea
jbe
xchg
push
xor
pop
gs
hlt
lea
pop
insb
clts
cmp
xor
ljmp
decb
push
test
adc
sub
test
dec
mov
mov
std
sub
call
fs
dec
add
sti
sbb
js
cld
sbb
dec
lahf
cli
dec
test
sub
scas
or
inc
dec
adcl
add
mov
ror
movsb
decb
mov
xchg
push
or
mov
sbb
xchg
test
out
fsubrp
insl
rorb
lcall
adc
dec
sub
gs
jne
adc
or
add
sub
xor
add
cltd
jmp
ret
mov
imul
hlt
adc
sbb
call
mov
clc
ret
mov
pushf
add
hlt
movl
into
lock
cmc
mov
xchg
cli
jno
stc
incl
sub
incb
adc
mov
add
or
lea
adc
add
or
jmp
pop
push
enter
add
sbb
pusha
and
inc
int3
nop
push
add
ja
push
or
push
lahf
scas
call
test
or
xor
push
dec
sub
ret
test
add
lcall
cld
inc
xor
jo
sbb
shl
pusha
xor
out
pop
imulb
fldt
lods
add
xchg
or
insb
shrb
imul
mov
sub
push
aas
cmc
testb
xchg
clc
or
push
call
mov
sub
jmp
add
stos
add
ja
add
mov
ret
ficoms
xlat
inc
and
xor
in
ret
pop
sub
add
dec
mov
clc
test
call
jo
adc
test
cmpsb
jmp
xchg
cmp
xor
push
add
and
push
mov
incb
imul
mov
add
adc
or
dec
pop
lods
lea
or
dec
cmc
shll
sbb
cld
scas
push
imul
dec
je
push
or
fidivl
or
scas
push
mov
test
add
stos
xchg
mov
sbb
lret
pop
sarb
sti
inc
mov
fmul
movsl
xchg
mov
icebp
mov
pusha
inc
test
lcall
adc
jmp
xchg
xchg
and
jne
mov
cmp
inc
and
push
add
imul
inc
inc
ret
add
xlat
adc
cmp
add
ss
bound
add
cmp
lock
stos
shrb
or
sbb
or
ss
inc
xchg
clc
inc
dec
mov
dec
icebp
mov
or
hlt
pop
and
enter
mov
call
inc
idiv
pop
std
sub
shrb
mov
outsb
es
inc
inc
outsb
clc
cwtl
inc
xor
xchg
adc
in
lcall
sar
adc
push
jne
test
mov
sahf
sar
xor
push
mov
xchg
imul
daa
fildl
idivb
sbbb
add
push
subl
test
inc
clc
sbb
fwait
stos
cmp
xor
add
add
mov
je
dec
xchg
aam
ds
sahf
jne
out
cli
mov
or
ret
add
lahf
call
push
test
and
aad
cmp
or
aad
ret
pop
bound
rcr
inc
xor
or
mov
in
stos
cli
xor
repz
cmp
add
mov
int
mov
test
js
call
mov
je
dec
nop
inc
add
xor
mov
aam
or
inc
add
lea
nop
push
sub
test
pop
push
icebp
dec
inc
pop
mov
hlt
inc
jbe
push
adc
push
and
aam
add
jg
rclb
adc
je
cmc
test
cld
les
jp
push
push
dec
jo
movsb
rcrb
sbb
adc
sbb
mov
jl
inc
add
insb
ds
hlt
data16
lea
pop
mov
mov
pop
jmp
adc
add
add
push
rclb
add
std
test
push
jmp
int3
fs
scas
aaa
add
mov
cmp
add
mov
lret
lahf
sti
mov
inc
retw
jbe
cmp
mov
scas
pop
call
dec
pop
out
mov
push
push
xor
push
sbb
mov
movsl
inc
decl
dec
mov
out
jmp
adc
loope
and
ret
add
push
sar
sub
inc
pandn
mov
jl
xor
mov
add
xchg
xchg
int3
nop
mov
sub
push
mov
outsl
xchg
cmp
insl
inc
mov
sbb
pop
mov
mov
stos
je
cmp
loope
fs
pop
in
jb
push
shlb
jge
push
outsl
or
mov
mov
test
jo
and
divl
outsb
cmp
imul
xchg
dec
bound
and
push
loopne
aas
movb
int3
aam
mov
pop
repz
call
mov
sub
clc
sub
mov
and
cmp
rcrb
xor
cmp
dec
test
pop
or
mov
lret
mov
sbb
movl
cmp
cli
dec
jecxz
aaa
mov
nop
mov
push
mov
pop
rcrl
dec
mov
or
scas
mov
adc
and
lea
adc
test
cmp
and
or
test
inc
mov
or
pop
xor
mov
out
push
mov
mov
dec
jge
adc
testb
insl
scas
sub
inc
cmc
aas
pop
mov
js
and
sarb
pusha
imul
les
adc
inc
inc
stos
push
push
test
dec
or
rclb
bound
sub
faddl
lock
cmp
pop
fiadds
mov
rorb
jmp
xor
inc
mov
push
push
pop
fiadds
aam
out
outsl
dec
adc
inc
push
push
sub
jg
cmp
inc
lcall
mov
mov
adc
popa
add
fs
bound
add
inc
jo
aam
push
push
sub
loop
leave
jle
aam
fdivl
add
xorl
jg
ljmp
and
sub
add
xor
push
cs
and
test
shl
push
cmp
xchg
push
dec
sub
call
inc
pop
and
mov
and
push
push
in
data16
lcall
mov
notb
sub
push
test
clc
fildll
mov
push
in
and
xlat
decl
test
mov
push
push
jmp
call
add
sub
pop
rorb
xchg
andnps
xor
fcomp
dec
xchg
or
das
push
push
add
icebp
inc
pop
add
mov
call
jp
add
push
cltd
and
sub
fst
ret
push
push
leave
outsb
stos
add
je
cmc
add
lock
cmp
rcr
mov
loope
sub
or
push
cmpsl
jmp
sbb
lods
test
inc
add
jmp
in
in
sbb
mov
add
lock
movsl
loop
sbb
lcall
and
call
mov
mov
test
adc
jp
push
rcrb
adc
rorb
mov
inc
mov
add
xor
icebp
lods
ret
dec
test
xchg
sbb
inc
movsb
aas
lahf
mov
sub
mov
outsl
movsb
mov
in
adc
popf
data16
cmp
sbb
add
jne,pn
cmp
pop
or
xor
test
and
sbb
fdivp
ja
inc
insb
loope
adc
pop
outsb
lret
add
push
xchg
jo
loope
jl
ljmp
rcrb
mov
pop
insb
mov
jne
imul
add
testl
movsl
lret
add
loopne
and
insb
or
push
pop
sbb
sbb
test
mov
sbbb
clc
sbb
add
mov
pop
xchg
mov
sub
pop
mov
icebp
dec
or
mov
xor
xchg
push
cmp
fldl
cmp
jae
sub
ret
add
aaa
pop
cwtl
sub
mov
loopne
push
test
inc
and
pop
rolb
push
mov
sbb
lcall
sahf
test
shlb
nop
dec
fs
andb
cwtl
divb
clc
add
lock
sub
sarl
mov
loope
mov
mov
jp
call
call
lds
jno
cmp
movsl
int
dec
push
xor
xor
or
add
xchg
adc
cmpsb
retw
lock
adc
dec
das
imul
and
or
sbb
pop
xchg
cs
xor
cmpsb
mov
cmp
pushf
jbe
out
ret
push
jo
or
addr16
clc
and
mov
inc
add
mov
inc
out
and
clc
dec
jae
and
mov
xchg
faddl
faddl
sub
xlat
jmp
push
push
add
sbb
insb
inc
jmp
cwtl
mov
pop
je
add
and
jmp
push
ss
insb
shr
and
jns
cmp
adc
je
scas
and
rolb
jae
and
push
popa
push
cld
mulb
lcall
mov
cmpsb
dec
cli
mov
movsb
mov
fisubs
mov
xor
movsl
mov
push
mov
xchg
sub
clc
or
xchg
and
aam
and
imul
inc
mov
mov
mov
subb
jecxz
lea
jbe
jle
push
call
cmpsb
inc
push
call
pop
lcall
sbb
aad
sbb
mov
adc
mov
sub
loopne
sbb
sti
sub
addb
push
cltd
inc
out
les
shll
and
xor
fnstenv
xor
jge
scas
ret
lock
call
fwait
cli
or
ss
test
and
jle
jbe
xchg
and
adc
popa
movb
push
test
das
js
sbb
inc
push
insb
fimull
fcompl
or
scas
mov
mov
jbe
pop
std
or
test
lcall
cld
aaa
cmp
fsubrs
insl
rcrb
cmpsl
lods
enter
shr
cmp
mov
sub
orl
xchg
mov
ss
aas
lods
mov
and
add
jp
or
das
cli
adc
pop
ret
cli
lods
cmpsl
add
out
lea
mov
push
jl
mov
jg
sbb
jmp
add
xor
xor
aaa
enter
fs
outsb
sti
in
loope
add
sbb
add
adc
sahf
xor
ss
sub
fcmovu
imul
outsl
pop
jns
lea
push
je
xor
lret
add
add
cmpsb
xor
test
dec
testl
jmp
in
mov
lods
cwtl
mov
fdivr
cmp
jl
add
mov
outsb
fisttps
mov
aam
sbb
pushf
sbb
push
add
push
inc
rclb
cwtl
mov
icebp
outsl
xor
push
outsl
add
in
jmp
cmpsl
mov
dec
ja
adc
cld
cmp
push
or
test
iret
inc
clc
sbb
gs
mov
dec
insb
pusha
cmp
mov
ret
scas
add
mov
fucomip
push
shlb
push
push
or
xor
loopne
xchg
xor
out
mov
sbb
jne
lcall
movmskps
adc
push
mov
cmp
add
sub
jmp
add
adc
jne
adc
push
addb
pop
mov
enter
inc
jo
in
add
adc
orb
jb
add
vmptrst
and
cmpsb
int3
push
xchg
rclb
add
pop
add
jb
mov
pusha
loopne
add
mov
andl
lea
jne
mov
sub
imul
mov
mov
and
push
cld
xchg
int3
gs
sbb
fiadds
xlat
int
xchg
stos
test
stc
shll
in
les
lock
imul
sub
ljmp
push
loope
jmp
add
out
xor
roll
shlb
mov
jle
adc
add
cwtl
pushf
fldt
je
ss
pop
mov
push
mov
mull
push
gs
push
adc
mov
test
orl
xlat
bound
push
in
lret
push
test
or
or
pop
cmp
pop
cmp
dec
cmp
adc
or
add
adc
push
jecxz
adc
adc
xchg
pop
cld
sub
aas
mulb
pop
cmp
mov
sbb
pop
mov
mov
adc
dec
icebp
mov
leave
mov
jl
cmp
push
pop
lock
mov
cmpl
push
push
call
jl
push
and
popa
mov
add
out
dec
push
dec
cs
rcrb
xor
shlb
test
add
pop
adc
mov
add
pop
hlt
xchg
fs
mov
js
std
dec
push
jb
mov
decl
pop
jae
inc
mov
clc
xlat
popl
jp
add
ficomps
push
xor
push
jno
push
pusha
add
xor
pop
sbb
mov
int3
nop
xor
or
pop
pusha
fidivs
ds
and
xor
push
cld
push
or
test
sub
lea
sub
dec
pop
into
int3
mov
inc
and
gs
js
ljmp
push
xor
lock
hlt
test
mov
mov
mov
dec
call
test
je
test
adc
or
dec
adc
push
call
addl
adc
mov
ljmp
and
fnstcw
loope
pop
cmp
clc
aaa
je
xlat
inc
fimuls
fmull
pop
xchg
or
adcb
or
sbb
sub
sub
sub
lock
fwait
adc
stc
push
gs
mov
pop
or
xorb
test
test
add
mov
fisubl
test
pop
jnp
mov
je
add
sub
push
pop
add
xchg
mov
adc
xor
aam
outsl
call
pop
pop
mov
scas
cmpxchg
mov
or
pop
mov
jb
dec
push
cwtl
notb
inc
clc
xchg
insb
jmp
das
jmp
add
lock
leave
out
jo
adc
or
ret
push
les
sarl
loop
sub
and
inc
sar
gs
aas
fs
xchg
pop
insb
addl
adc
fmuls
add
add
add
pop
int
sbbl
in
and
pop
add
adc
jae
incb
cld
jg
je
dec
mov
repz
ret
jl
xchg
dec
mov
mov
push
out
adc
push
dec
lea
adc
jns
jmp
adc
add
sbb
or
or
fdiv
imul
cmp
mov
adc
bound
faddl
cmp
adcb
mov
test
add
jl
push
xchg
or
lahf
sub
aad
jge
pop
adc
fsubrs
and
inc
mov
cmp
movl
aas
push
call
rorl
ret
pop
and
test
int
adc
dec
adc
js
jmp
mulb
push
pop
hlt
or
xchg
pop
and
mov
add
cld
sbb
pusha
inc
adc
dec
push
ret
fldt
push
xor
xor
jnp
pushf
push
je
dec
xchg
mov
push
adc
push
push
adc
test
xor
decl
loopne
adcl
mov
stos
pop
jne
rcrb
cmp
jo
test
xor
stos
add
xor
icebp
ds
call
jecxz
mov
push
sub
dec
push
fmull
insl
addr16
add
or
ss
pop
or
es
jge
and
sti
int3
imul
xchg
and
enter
je
cmp
addl
jl
lea
clc
push
es
inc
jmp
je
mov
or
sbb
dec
call
outsb
lahf
inc
mov
rolb
fdivr
sbb
xor
adc
inc
cld
adc
out
nop
or
js
sub
sbb
fsubrs
outsl
push
xor
fdivr
loopne
orb
ss
dec
add
aam
lret
xchg
lret
inc
fisubrl
icebp
mov
xor
mov
mov
and
xchg
jmp
leave
and
add
iret
test
es
push
adc
sarl
lods
rcll
jmp
adcb
inc
lret
and
dec
add
push
call
lods
push
mov
pushf
and
pusha
std
fstl
pop
cld
mov
adc
inc
mov
mov
mov
int3
jmp
addl
movsb
push
daa
mov
scas
jmp
sub
xor
adc
push
sub
movsl
inc
scas
lods
or
test
aam
add
push
cmpsb
cmp
jle
ret
lcall
add
push
xor
mov
pop
aas
sbb
test
movsb
or
xchg
jmp
pop
inc
mov
push
mov
xor
negb
nop
xor
xchg
mov
insb
add
push
std
mov
adc
xor
imulb
sub
mov
stc
pop
sbb
dec
adcb
mov
and
sub
inc
adc
aaa
cmc
incl
in
push
push
in
pop
movl
pop
or
inc
fsubp
sbb
incl
adc
cmp
xor
ret
lea
sarb
add
fmull
aam
jg
in
push
std
js
call
jmp
call
test
pop
jge
rorb
mov
sbb
mov
xchg
xor
ds
mov
add
enter
add
push
mov
add
movsb
and
lahf
outsb
adc
out
adc
nop
adc
ljmp
add
mulb
or
insb
adc
lea
icebp
stos
inc
jp
cmpl
mov
lcall
hlt
push
push
roll
movsb
sub
pushl
loopne
test
movsl
sub
sbb
or
gs
clts
adc
pop
ds
arpl
add
mov
sub
les
dec
fldt
mov
push
pop
xor
cmpsb
pop
les
mov
sub
int3
mov
or
mov
je
data16
xchg
jbe
cmp
mov
mov
mov
push
das
call
and
mov
decl
push
sbb
lds
add
push
mov
bound
cwtl
js
int3
push
fdivl
and
jo
ja
add
and
or
jecxz
sub
in
test
push
sarl
call
jnp
mov
jno
lock
mov
add
fs
xor
pop
jae
sti
fildll
adc
and
sub
andl
adc
es
mov
outsl
lcall
dec
or
mov
sbb
mov
pop
int3
test
jmp
int
push
jbe
mov
jp
or
adc
dec
mov
mov
sbb
roll
outsb
stos
aam
shrb
jae
add
lods
outsl
dec
cld
lock
mov
inc
xlat
loope
das
cs
or
ljmp
test
pop
movsb
cli
fmulp
xor
mov
fcoms
sub
mov
push
cmp
pop
or
mov
jle
xchg
fisubrs
pop
mov
mov
dec
mov
xchg
cmp
jmp
inc
loopne
gs
sbb
lock
jp
adc
cwtl
fadds
push
cmp
js
and
sar
sbb
popa
lds
mov
mov
add
fimull
mov
mov
aaa
add
or
mov
adc
addb
jae
add
pop
jge
pop
sub
mov
mov
add
cmp
jl
push
mov
lds
xor
sub
das
mov
mov
pop
sbb
push
insb
sbb
mov
xor
and
pop
ret
sahf
push
xor
aas
fbstp
int
mov
adc
add
pop
inc
shr
pop
int3
sub
scas
call
cmpl
mov
mov
mov
pop
lock
mov
mov
jbe
add
jmp
aam
add
or
add
jle
movsb
loopne
and
pop
add
test
and
push
xor
push
test
push
or
rcr
jmp
jae
rcrb
push
cmpsl
sbb
add
das
ret
std
adc
clc
xor
test
cld
cmp
jmp
push
inc
std
insb
push
ds
mov
loopne
popa
xor
cmp
sbb
and
in
pushf
call
mov
inc
dec
not
mov
rolb
sub
popa
xor
shlb
data16
int3
xchg
cmpb
sub
push
xchg
aaa
ret
lods
ret
enter
inc
inc
push
pop
xor
add
mov
xchg
pop
cmp
mov
xchg
call
jne
outsl
jle
cmp
and
call
int
or
mov
add
std
add
inc
mov
es
push
shll
fcom
dec
mov
pop
inc
es
mov
or
sbb
push
negb
mov
sub
push
push
adc
aaa
xor
sbb
sbb
xor
push
add
or
in
mov
cltd
mov
sti
cld
jne
pop
mov
aam
out
fisubrs
lods
xchg
xor
mov
and
das
jle
add
fs
test
orb
inc
pop
pop
je
cmp
dec
notb
mov
push
mov
push
push
arpl
test
xchg
mov
push
fwait
add
mov
mov
inc
mov
fdivr
jbe
cs
mov
inc
inc
sti
jae
mov
push
adc
mov
pop
sbb
bound
outsb
jb
or
hlt
pop
sbb
jl
int3
dec
pop
inc
mov
dec
fadds
mov
in
lahf
fs
mov
mov
push
insb
and
test
xor
in
add
pop
or
loopne
pop
inc
pushf
xor
xchg
in
cmp
jns
jmp
gs
lcall
xor
ret
cmp
pop
mov
mov
mov
test
push
mov
lds
arpl
sub
fldt
or
sarb
inc
add
shlb
nop
and
xor
or
jecxz
sbb
mov
sub
insb
xchg
cld
push
cmc
pop
add
imul
xchg
xchg
mov
sbb
or
nop
je
int3
pop
ds
add
adc
mov
xchg
jno
xchg
sub
adcb
into
rcrb
xchg
adc
jg
mov
mov
add
loopne
cmc
inc
inc
lea
lock
int3
loope
or
outsb
add
sbb
inc
stos
outsl
inc
pop
addb
push
and
bound
cld
jle
dec
add
inc
adc
or
rolb
mov
lods
paddd
hlt
insb
mov
dec
xor
lods
or
inc
xchg
notb
inc
bndldx
mov
jg
cld
or
ss
dec
dec
add
in
fdivl
add
xchg
mov
call
imul
jmp
adc
call
ret
loope
sbb
pop
mov
cld
into
sahf
int3
mov
add
jg
add
stos
mov
pusha
and
add
incb
pop
out
mov
mov
fisubrl
or
lret
fistps
or
test
xor
xor
or
fcmovnb
mov
test
inc
fistpll
inc
push
call
mov
mov
mov
ret
mov
jno
subb
int3
fs
in
add
mov
insb
sbb
fxch
enter
cmpb
pop
cmp
stos
dec
adc
movb
jp
push
leave
ja
mov
and
cmpsb
cld
mov
incl
fcoms
sub
test
hlt
into
pop
add
pop
jmp
test
mov
sbbb
loopne
jg
adc
sub
xor
and
jmp
fidivrs
add
push
dec
dec
inc
lock
pop
xor
mov
out
or
add
fsubl
push
movl
adc
fcmovnbe
push
sub
mov
rorb
jo
mov
xor
cmp
in
les
push
mov
cs
imulb
cmp
pop
ret
pop
js
fcmovb
adc
adc
or
ss
mov
adc
sbb
je
testl
rorb
adc
es
mov
hlt
pop
pop
jg
inc
inc
testl
adc
je
pop
mov
inc
pop
into
pop
adc
jae
xor
fs
ds
mov
out
jle
sbb
aas
push
mov
gs
out
sub
in
pop
xchg
cmp
mov
incl
dec
add
not
inc
push
mov
pop
inc
or
test
adc
add
add
inc
push
inc
imul
inc
cmp
add
push
test
mov
call
mov
outsb
clc
aas
cld
mov
test
stc
adc
push
or
mov
dec
mov
cmp
add
fisubs
jl
xchg
pop
cli
jg
mov
add
addl
xor
adc
push
mov
add
sbb
and
call
cli
fmull
ss
movsl
cwtl
insb
push
nop
cld
pop
lods
and
or
or
int
pop
hlt
mov
and
mov
mov
std
int
add
and
lods
sub
jbe
lock
jle
lea
out
jge
inc
adc
fsubs
aaa
icebp
add
add
out
data16
loope
shlb
and
mov
xlat
dec
scas
jmp
add
push
push
lret
call
jge
rorl
adc
ficompl
mov
das
movsb
loop
mov
std
aam
add
rclb
negb
adc
push
push
imul
lea
insl
or
pop
mov
mov
stos
add
mov
subl
push
mov
add
pushl
dec
test
mov
inc
pop
xor
and
rolb
sub
push
mov
lcall
xor
cwtl
test
pushfw
ret
mov
pop
clc
inc
add
pushf
mov
pop
pop
push
pop
lea
add
insb
push
mov
mov
pushf
xchg
and
mov
gs
std
call
adc
sub
call
or
pop
add
rorb
loope
insl
ljmp
lea
push
inc
mov
add
outsl
pop
cld
push
or
into
je
loope
fcomp
mov
test
outsb
mov
sti
adc
js
jge
fdiv
fmull
sub
test
mov
sub
xorl
shlb
sub
leave
lods
dec
xor
and
mov
adc
pop
push
push
and
test
aas
and
fidivrl
lret
out
cmp
fs
mov
xchg
inc
push
sub
xlat
mov
cmp
sub
lret
scas
inc
mov
jno
loopne
add
push
inc
push
xor
mov
or
adc
mov
or
pop
test
or
mov
cmovns
mov
sbbb
loopne
mulb
es
or
lds
stos
push
je
fidivrl
insb
ret
mov
pop
inc
pusha
adcb
dec
ds
or
aad
dec
insb
and
jno
je
add
add
mov
addb
push
push
mov
in
hlt
xorl
inc
loopne
mov
push
fdivrs
mov
add
ret
xchg
mov
mov
or
xchg
cwtl
add
xchg
and
or
pop
add
add
cld
inc
jecxz
and
mov
jle
sbb
and
dec
push
fs
push
adc
aas
test
lret
ja
dec
or
xchg
movb
mov
ljmp
inc
popf
cmp
test
adc
mov
fld1
sub
jg
icebp
mov
imulb
mov
stos
and
hlt
mov
sub
mov
incl
add
add
xchg
jle
or
jbe
jbe
dec
ret
push
int3
mov
sub
jb
jp
or
add
xchg
xor
test
aam
ret
rorw
xchg
ret
cld
pusha
push
icebp
int3
sarb
lods
insb
fstl
sbb
add
enter
dec
enter
loopne
aas
ds
mov
mov
fldl
inc
push
sbbl
out
pop
xchg
push
or
shlb
ljmp
out
sbb
push
sbb
and
std
sahf
pushf
int3
repz
xchg
lods
cs
mov
inc
push
xor
inc
popa
addl
jae
adc
and
dec
push
hlt
xchg
jne
push
aam
mov
sub
pop
sar
xor
loopne
nop
jp
mov
sbb
push
mov
roll
std
pop
jne
jb
mov
add
pop
int3
dec
mov
idivb
or
decb
call
inc
into
and
adc
inc
inc
test
or
sbb
gs
push
inc
nop
enter
nop
popa
pop
add
xorl
jg
hlt
aaa
cmpsb
into
xor
lret
jmp
jmp
cli
incl
push
mov
add
or
dec
jl
orl
sub
push
les
xor
xchg
lret
call
hlt
nop
inc
cmp
jmp
dec
mov
xor
cmpsb
je
add
ds
call
or
lods
xchg
lea
cltd
inc
sti
mov
push
call
push
cmp
mov
test
mov
jp
xor
mov
lods
sbb
push
rclb
ficompl
mov
scas
xchg
orb
push
mov
cld
cmpsb
js
pop
leave
dec
subb
loope
cs
adc
xchg
mov
and
inc
call
dec
lcall
or
adc
in
mov
mov
push
adc
lods
call
cmpsb
add
pop
adc
or
aam
loop
push
in
cld
mov
in
ss
xor
pop
and
cmp
pop
mov
pop
ret
inc
push
add
cmp
das
add
pop
mov
cmp
incl
outsb
jp
push
loopne
testb
call
mov
mov
jmp
sar
xchg
adc
dec
insb
test
nop
xor
dec
pop
and
sti
xor
jp
or
sbb
sbb
push
pop
fwait
sub
cmp
xor
dec
jl
adc
and
mov
xchg
mov
add
cmpsl
sbb
into
dec
or
fimuls
sub
cld
mov
std
pop
das
add
popf
cwtl
fs
movl
push
movsb
subl
push
cmpsl
mov
xlat
adc
inc
in
inc
nop
cmp
pop
sbb
adc
movsl
sub
stos
and
cmpsb
ret
cmp
les
pushf
leave
and
cmp
arpl
push
xchg
test
pop
xor
lock
mov
sub
insl
hlt
jmp
mov
pop
inc
adc
cli
xor
sbbb
pop
jge
cmc
imul
push
cmp
push
lret
mov
or
adc
jl
sarb
int
fs
sbb
js
xchg
dec
inc
dec
enter
add
sarl
test
mov
ret
dec
insb
jmp
imul
mov
pusha
and
nop
push
call
and
sti
or
and
mov
sub
jmp
lahf
add
or
mov
pop
or
testb
and
mov
inc
and
adc
push
xor
mov
js
add
mov
dec
add
add
jne
imul
repnz
ds
fwait
xchg
push
mov
xor
add
lea
dec
popa
add
and
lock
add
mov
or
cmp
add
mov
or
aas
insl
ss
sbb
shrl
roll
mov
pusha
mov
std
push
mov
push
adc
jge
push
push
mov
ret
cmp
mov
gs
cmp
decb
push
shlb
or
pop
orl
cmpsb
cmp
addr16
xor
cmp
icebp
ja
inc
sbb
hlt
xor
ljmp
push
lea
and
push
xchg
xchg
fisttpl
jg
idiv
mov
out
push
fistpl
jnp
push
add
xorb
aaa
leave
adc
add
or
push
mov
insl
pop
es
xor
rcrb
mov
sub
xor
mov
sti
xchg
and
jo
enter
cs
int3
mov
sbb
dec
inc
mov
or
lcall
mov
enter
mov
pop
add
push
cld
adc
fwait
mov
mov
outsb
mov
jp
sbb
mov
mulb
add
sbb
adc
xor
cli
or
ljmp
adc
cmp
cmc
sub
inc
sbb
cmp
add
mov
xchg
rorb
cld
int3
xchg
xor
shl
test
jg
inc
push
cli
mov
insl
mov
movsb
and
es
or
push
add
sbb
cld
and
inc
jl
xor
sub
mov
aad
mov
loopne
add
dec
push
lea
adc
xor
adc
or
push
sub
jo
and
daa
add
and
dec
sbb
push
or
std
adc
add
call
test
pop
adc
jne
and
adc
ja
imull
add
mov
adc
dec
cs
aas
dec
in
mov
add
or
pop
fadd
push
jo
jne
pop
push
add
sub
fmull
leave
sbb
fcmove
ret
push
xchg
adc
into
adc
xor
sbb
or
push
shrb
cld
pop
into
and
lcall
mov
or
test
xchg
cmp
and
push
dec
cmpsb
enter
inc
xor
jbe
sub
mov
push
push
ljmp
andl
push
test
jg
and
mov
adc
scas
mov
push
stos
xor
nop
inc
xor
aad
sbb
aam
imul
fnstcw
xchg
pushf
ret
pop
sbb
xor
add
dec
in
fildl
divb
xor
icebp
fcmovnbe
loopne
push
sub
xchg
and
sub
sbb
push
push
push
add
mov
loope
pop
add
hlt
or
hlt
fistpll
sub
pop
aaa
push
movsb
ret
mov
loop
push
sarl
push
fsubs
mov
cld
add
cmp
in
push
and
inc
in
jns
int3
cmpb
and
gs
inc
mov
and
ljmp
sbb
dec
outsb
ljmp
pop
add
xchg
popf
mov
xor
inc
pop
or
mov
sbbb
push
adc
dec
xorl
dec
ss
fucomip
mov
lcall
aaa
aas
mov
pushf
jl
dec
pop
mov
icebp
clc
test
fwait
je
sub
aaa
insb
push
adc
adc
pop
dec
test
mov
add
xor
mov
sub
sbb
xor
mov
mov
hlt
incl
enter
out
push
mov
jp
or
push
nop
lock
jb
pushf
and
addl
shlb
shr
outsb
adc
es
xor
dec
push
mov
adc
sbb
mov
call
mov
mov
call
inc
xor
push
push
add
cmp
addl
mov
add
mov
scas
pusha
fmul
pop
fcom
or
and
pop
add
hlt
add
mov
xor
add
push
jmp
das
mov
add
mov
lret
je
popf
aaa
sub
out
jl
or
add
sub
orl
outsl
sbb
outsl
add
jo
cli
rcrb
test
icebp
ret
fwait
mov
add
mov
std
jg
sbb
cmp
mov
mov
loopne
mov
sbb
pop
add
dec
rolb
mov
adc
cmp
and
mov
or
fdiv
jmp
shll
shr
fcompl
in
pop
test
insb
mov
addr16
jbe
subb
add
arpl
cmp
ss
cmp
mov
xor
sub
jo,pn
and
pushf
shlb
leave
insl
fisubl
lcall
push
sbb
add
out
cmp
inc
aas
sub
fsubl
nop
dec
mov
cmp
push
cmp
cld
adc
cmp
shr
ss
and
push
push
xor
xor
mov
addr16
add
add
push
roll
cmpsl
rorl
insl
in
and
xchg
stc
xchg
mov
push
jbe
add
and
mov
inc
inc
gs
sbb
xchg
or
mov
cmp
inc
or
insl
dec
loop
gs
inc
jns
and
in
pusha
call
std
je
xchg
sahf
scas
push
add
jb
dec
inc
mov
cld
jge
in
enter
insb
and
dec
je
incl
sbb
xchg
jb
push
inc
aad
mov
and
fisttps
sub
add
xor
mov
sti
xorb
and
rclb
pop
push
mov
inc
inc
hlt
jbe
test
push
pop
clc
jb
mov
mov
iret
inc
lea
mov
insl
push
sbb
adc
clc
push
outsb
sbbb
mov
push
push
sbb
push
xor
and
jmp
aad
lock
mov
data16
adcl
or
into
push
mov
decl
push
orb
sti
lods
push
test
je
adcb
arpl
mov
das
lods
adc
mov
mov
ja
fs
arpl
imul
insb
sbb
inc
mov
inc
fcompl
lea
lds
or
movsb
je
lret
imul
push
or
sar
and
andb
mov
je
loop
imul
stos
sub
mov
lcall
les
shll
imul
xor
ds
sbb
sub
and
lock
dec
insb
gs
mov
not
xchg
push
sub
outsl
push
and
mov
sub
jbe
je
in
push
test
sbb
add
bound
mov
decl
fcoms
pop
cwtl
movsb
shlb
enter
scas
push
stos
mov
jne
or
rcr
or
sub
sub
outsb
sub
or
push
mov
sahf
jb
pop
pop
pop
cli
add
insb
in
rcll
mov
mov
rolb
addb
xchg
les
pop
bound
jb
insb
sbb
fcoml
pop
js
dec
mov
or
addl
jg
pop
sub
inc
shl
adc
push
pop
imul
nop
mov
insl
je
mov
incl
leave
leave
js
push
xchg
movl
jmp
add
aaa
outsl
cmp
bound
pop
jle
mov
in
orb
lcall
loope
gs
and
add
outsl
js
pop
cli
imul
adcb
cmp
jae
arpl
jb
pop
popa
jnp
outsb
call
jle
and
lcall
out
pop
and
jb
cmp
dec
sbb
or
push
testb
gs
pop
push
insb
popa
idiv
lock
mov
cld
dec
loope
mov
push
testl
inc
jne
je
jae
mov
inc
pushf
mov
push
or
jl
lods
orl
fisubrs
popa
xchg
nop
movsb
inc
sbb
lret
test
mov
mov
add
divl
cs
mov
push
adc
dec
lock
mov
js
cwtl
adc
ss
jae
mov
push
xor
mov
mov
dec
cwtl
add
loopne
add
inc
hlt
jo
loopne
lcall
push
enter
or
enter
pop
or
dec
js
call
or
loop
xchg
or
out
dec
mov
mov
push
mov
movsb
inc
inc
add
scas
mov
or
outsb
or
je
in
fistl
je
mov
imul
push
fwait
adc
dec
test
fbld
inc
or
sahf
std
push
and
fs
mov
or
sarb
shll
loope
pop
adc
push
outsl
in
add
cmp
jo
cmp
mulb
maskmovq
mull
cmp
cmpb
je
pop
ljmp
push
xchg
sbb
call
fstpt
or
xor
xchg
shlb
pop
xor
pop
jno
fisttpll
test
jge
es
call
and
inc
pusha
hlt
and
sbb
clc
or
pop
call
ljmp
into
mov
call
arpl
inc
mov
test
sub
lret
jmp
adc
cld
dec
jg
clc
call
fcompl
imul
cmp
cld
mov
mov
test
es
xor
shlb
incl
add
push
xor
add
ud0
mov
ret
out
jae
hlt
movb
loopne
arpl
insl
push
ja
into
and
popa
imul
sbb
ja
fsubr
pushf
mov
mov
lea
nop
gs
insl
loopne
movsb
pop
and
mov
pop
or
outsl
cmp
imul
sarl
add
jbe
repnz
sub
gs
inc
into
je
insb
add
test
adc
aam
jae
clc
mov
adcb
xchg
push
xchg
imul
pop
mov
js
imul
or
mov
mov
adc
pop
data16
push
jne
js
cmp
or
out
je
add
push
test
movsl
movsb
shrl
lods
mov
jmp
cld
rorb
push
ljmp
int
jmp
add
jae
adc
pop
add
mov
mov
call
jmp
fsubrs
jno
outsl
push
test
jb
fisubrs
or
cs
fs
add
in
call
push
scas
pop
lock
insb
cs
jae
cmpb
pop
sbbb
aaa
insb
lods
clc
das
push
push
pushf
lcall
jb
xor
ret
sub
incl
enter
jbe
shrb
adc
jl
push
ljmp
mov
nop
ss
outsb
outsl
data16
and
jne
addb
movsl
dec
inc
enter
cmpsb
or
mov
in
sub
sbb
enter
dec
mov
inc
imul
inc
xchg
push
add
and
sbb
test
icebp
pop
pop
sarl
popa
push
or
outsb
and
adc
arpl
ret
scas
xor
mov
pop
out
pushf
push
subl
enter
add
mov
icebp
jg
outsb
xor
enter
je,pn
mov
jge
je
adc
sarl
xor
popa
push
inc
testb
push
aam
mov
mov
ret
arpl
addl
pop
cld
jg
gs
lock
cmp
sbb
aaa
mov
push
and
push
cmp
push
pop
xchg
pop
decl
xorl
data16
inc
lcall
and
inc
mov
cmp
inc
call
push
test
dec
push
xor
jb
add
notl
xor
jmp
mov
add
in
fwait
dec
cmp
add
arpl
mov
imul
insl
shlb
add
arpl
test
cld
push
lea
inc
adc
cmp
sbb
addr16
in
push
in
xor
mov
roll
je
push
adc
xorl
cld
adc
das
test
add
inc
push
dec
data16
cltd
add
ds
popa
fsubl
xchg
cli
minps
mov
lahf
xor
test
pushf
push
xor
cli
movsl
mov
andb
nop
xchg
adc
jae
pop
movsl
test
cmp
xor
cld
negl
sbb
imul
push
push
rolb
adc
pop
xchg
aam
or
mov
pushl
cmp
mov
outsb
jne
sub
cmp
pop
lock
push
aas
xor
cmp
mov
sub
push
mov
into
nop
sbb
inc
sbb
mov
push
mov
pop
inc
movq
rorb
pop
xor
mov
leave
mov
push
mov
inc
push
lods
mov
sub
push
sub
sub
cld
test
bndstx
ljmp
sbb
push
push
mov
test
sbb
lret
daa
pushl
loope
jae
insl
cmpl
mov
add
ja
clc
subb
pop
fadd
xor
addl
cmp
pop
orl
inc
sbb
aaa
aam
outsb
mov
xorb
mov
test
ds
testb
rclb
mov
xor
test
cmp
pop
test
orl
jb
sub
inc
into
add
cmp
pop
add
bound
rcrb
sub
mov
arpl
pop
adc
rcl
jp
push
xor
mov
adc
in
imul
and
pusha
mov
push
mov
dec
call
adc
and
ss
push
fs
mov
add
xchg
fiaddl
jle
pop
mov
sahf
neg
jmp
add
add
mov
rorb
xchg
test
xchg
cli
jg
je
roll
pop
push
dec
push
test
cld
mov
sarl
jg
imul
add
and
lret
jmp
pusha
pop
adc
shl
dec
inc
push
jp
sub
sub
das
fmull
loopne
cld
mov
outsl
xchg
push
aam
ljmp
sbb
jl
or
pusha
inc
add
out
in
dec
ret
and
in
int
mov
movsl
inc
mov
mov
insb
imul
clc
stos
xor
and
mov
test
cs
int3
inc
aaa
ret
int3
xchg
pusha
cmc
mov
sbb
push
push
mov
adcb
gs
pop
mov
arpl
add
or
push
jo
xchg
adc
or
jb
je
fisubl
add
inc
lods
add
inc
call
mov
mov
jbe
add
sub
outsl
sbb
mov
in
data16
test
push
dec
in
pop
movsl
data16
sub
shlb
mov
mov
lea
cld
das
xor
out
nop
push
daa
push
int3
jg
adc
jecxz
divps
es
cmp
add
mov
call
mov
xor
pop
mov
cld
call
push
push
popa
fcoml
mov
fisubs
outsl
call
dec
and
push
add
cmpsb
add
cmp
movsb
jecxz
or
shlb
add
fisubrl
dec
scas
add
mov
insl
mov
pop
mov
insb
call
sub
movsb
xchg
push
mov
lock
orl
or
divl
out
xchg
lock
loop
shl
test
dec
mov
add
adc
inc
xor
add
mov
mov
xlat
incl
sub
adc
loopne
jne
sub
add
cmp
adc
inc
imul
jl
rclb
gs
ds
lods
fsubrs
sbbb
dec
jmp
lock
aaa
adc
sbb
and
outsb
insb
aad
sbb
lock
insb
mov
mov
das
mov
or
bound
ret
mov
mov
test
cmp
mov
dec
cmp
in
xor
cmp
insl
add
or
add
cmp
std
aas
sub
jmp
es
inc
mov
icebp
lock
call
call
loope
mov
and
addl
push
pop
sbb
pop
cld
or
std
sarb
add
ret
sbb
cmp
scas
idivl
fmuls
mov
call
dec
push
jmp
adc
adc
cmpsb
push
add
fstpl
push
mov
loop
or
add
fcoms
les
mov
loopne
add
mov
mov
bound
or
outsb
std
xor
das
rcrb
mov
push
pop
mov
dec
mov
jmp
imul
dec
insl
pop
sbb
int3
sub
aas
movsb
aam
push
scas
sub
sbb
dec
or
loope
mov
fimull
pop
xor
ljmp
inc
push
pop
shl
loopne
push
psubusb
sbb
lret
into
rclb
jnp
adc
xchg
inc
push
inc
add
repnz
add
inc
adc
leave
xchg
das
sti
add
add
push
ret
xor
in
and
mov
leave
push
pusha
sti
les
push
pusha
mov
dec
enter
std
ss
mov
xor
mov
push
outsb
ljmp
push
leave
xor
sub
jae
aaa
cld
sbb
dec
mov
scas
repz
in
xchg
dec
cmp
mov
push
jne
mov
rcrb
in
in
xor
out
xor
push
ret
sahf
adc
mov
adc
bound
push
fbstp
test
lock
outsl
add
add
sbb
rolb
movsb
and
pop
sarb
cwtl
push
push
fucomip
xchg
jno
push
cmp
insb
inc
sub
sub
decl
mov
bound
in
inc
in
mov
es
and
imulb
push
outsb
decl
mov
xor
sbb
adc
dec
sbb
sahf
or
add
das
mov
pop
andl
enter
mov
je
or
mov
mov
hlt
mov
jl
lret
sbb
xor
ja
inc
jb
data16
je
aas
ljmp
sahf
pop
xchg
dec
push
stos
add
jne
decl
jl
push
push
adc
aaa
outsb
mov
add
test
mov
call
pop
adc
inc
shl
gs
mov
pop
sbb
mov
mov
push
mov
push
js
jge
inc
dec
and
push
mov
jge
arpl
shlb
in
dec
fs
or
mov
loopne
xchg
test
in
push
fildl
xchg
dec
lds
movsl
pushl
cwtl
mov
adc
push
mov
add
xor
and
out
fwait
mov
mov
jne
lock
es
inc
cmpsb
les
lcall
dec
int3
std
pop
fidivs
popl
test
addl
js
imul
inc
lods
push
mov
icebp
sbb
push
dec
cltd
cmp
jge
nop
sub
fs
loop
clc
push
inc
imul
add
cmp
inc
cmp
pop
cmp
enter
dec
hlt
jo
fbstp
scas
push
lods
xchg
shll
out
int3
aam
push
dec
cmp
mov
jecxz
xchg
inc
pusha
fistps
mov
repz
in
adc
add
push
lds
outsb
ljmp
pop
dec
inc
sti
jle
rcr
push
xchg
jmp
and
aam
add
add
stos
iret
test
mov
pop
lea
add
cs
mov
dec
dec
hlt
cmp
dec
decl
test
stos
xor
sub
add
enter
cmpsl
rcl
dec
mov
add
test
cmp
in
clc
jg
lods
or
lea
inc
notb
pop
pop
cli
in
aas
fsubrs
dec
xchg
sub
cmp
ljmp
negb
std
pop
clc
stos
or
loopne
pop
lcall
cmp
or
sub
mov
mov
or
loope
mov
and
push
in
sbb
xor
faddl
cmp
pop
jl
and
add
xchg
repz
add
push
cmp
ja
mov
out
lock
cvtps2pi
and
icebp
or
mov
cmp
aam
mov
faddp
push
call
cmp
or
ljmp
test
ret
fldt
pop
push
js
int3
push
in
andb
stos
rolb
mov
mov
ds
stos
insb
lahf
les
jo
push
xor
push
xchg
jle
int3
pop
jge
stos
divb
xor
mov
xchg
mov
js
fadd
cmp
and
cmc
mov
arpl
add
fbld
arpl
xchg
pop
shr
add
test
dec
in
gs
pop
add
fiadds
mov
pusha
insb
adc
mov
add
stc
dec
rcrb
inc
cmp
mov
outsb
push
inc
repnz
add
cwtl
push
xlat
test
int3
ds
popa
dec
xor
mov
and
gs
stos
cmp
jmp
std
cmp
xor
adc
movb
push
add
fisubrs
sub
mov
inc
sahf
sti
lock
mov
add
or
sbb
add
mov
xor
inc
stos
mov
jmp
sbb
popf
mov
cld
xorl
test
out
movsb
xlat
push
pop
lcall
adc
mov
push
mov
mulb
add
lea
jne
jbe
and
xchg
inc
sbb
push
add
jg
add
jb
fsubp
add
clc
mov
inc
sbb
push
xor
inc
sub
xor
gs
movsb
sub
add
pop
cli
pop
aas
add
lock
pop
mov
test
rcr
dec
mov
jns
movsl
cli
andb
rorb
sub
or
cli
pushf
notb
btc
shl
mov
cmp
sar
or
rolb
xor
inc
mov
mov
enter
mov
add
xlat
rcll
cmp
add
lcall
cli
add
idiv
stc
ds
jb
mov
loope
lock
xchg
sbb
and
fsubr
jns
mov
lcall
adcb
mov
xor
inc
adc
data16
push
int
cltd
sbb
pop
mov
pop
jmp
sbb
and
test
fsubrl
fidivrl
mov
add
into
sbbb
subb
cmp
popf
outsb
lea
mov
inc
mov
push
xchg
cmc
pop
xchg
push
and
pop
rolb
add
add
xor
xchg
pop
or
data16
and
mov
inc
and
rclb
imul
aaa
push
sti
inc
mov
adc
sbb
dec
pop
inc
or
add
lea
mov
js
test
adc
add
dec
sbb
jp
clc
xor
insb
push
or
flds
mov
mov
dec
dec
mov
or
adc
jbe
push
or
je
insb
ljmp
fdivs
mov
add
add
sbb
ds
test
rolb
test
test
pop
pushf
test
jne
cmp
popf
xor
cmp
enter
sub
and
shr
test
shlb
add
in
popf
jp
scas
mov
push
sub
loop
or
cmp
mov
imul
popa
and
repnz
push
mov
lcall
sbb
sti
shr
scas
mov
cmp
imul
mov
mov
call
je
cmp
in
dec
loop
dec
sbb
mov
decl
mov
jne
ficoms
adc
add
je
add
inc
inc
and
testl
mov
mov
gs
shlb
mov
or
movsb
mov
es
aad
outsl
xchg
cmp
cmp
jbe
adc
add
sarb
add
push
or
mov
inc
inc
std
sub
shll
es
sbb
add
popf
adc
test
or
add
lahf
xchg
loope
lock
ss
cmp
lret
push
stos
sarb
mov
ja
push
imul
andb
mov
pop
fimuls
mov
add
add
fwait
jo
xchg
mov
sub
insb
loope
sub
call
mov
jmp
add
or
mov
adc
scas
ficompl
fmuls
decl
lods
mov
lret
hlt
or
test
cmp
lds
mov
daa
arpl
or
mov
clc
std
jne
push
cld
ds
pop
jae
incl
add
rolb
inc
je
fbstp
add
or
cmp
pop
rorb
cmp
fdivr
icebp
bound
in
inc
filds
mov
sbb
pop
and
cmp
loopne
icebp
orb
cmpsb
cmp
add
inc
stc
and
negl
xor
or
jle
mov
dec
or
outsb
push
xchg
cmpb
aas
test
data16
push
add
mov
xor
dec
enter
call
or
pushl
sbb
hlt
aaa
mov
dec
lret
mov
scas
shrb
mov
add
add
out
pop
sub
les
aaa
push
pop
shrb
jle
push
inc
adc
inc
cld
push
cld
adc
in
rolb
xchg
out
push
rcll
lret
adc
push
push
adc
in
mov
push
inc
push
mov
adc
or
mov
sti
mov
int3
sbbb
rolb
mov
adc
jb
jne
dec
add
lahf
lods
sbbl
jg
scas
incb
int
xor
jno
adc
cmp
jno
lea
fs
cld
adc
cs
hlt
icebp
cld
inc
arpl
mov
pop
subb
push
push
int3
or
mov
xchg
int
xor
in
fdivr
push
jl
into
xor
mov
out
xchg
hlt
das
add
pop
addl
and
test
add
lea
push
pop
leave
pop
sub
push
out
and
roll
loope
mov
xorl
pop
sbbb
jge
add
jnp
mov
and
mov
sbb
dec
mov
fcmovb
pop
sub
pushl
mov
and
push
mov
xor
xor
cmp
jbe
addl
push
sub
stos
inc
mov
outsl
jp
add
pop
or
scas
mov
aam
sarb
pop
dec
pop
sub
mov
cmp
xor
add
push
pop
and
mov
test
push
jb
lret
adc
push
call
xor
sbb
dec
test
inc
ljmp
js
mov
pop
xor
nop
decb
add
loopne
ret
scas
cs
outsb
data16
nop
pop
mov
ret
inc
and
daa
insb
inc
jmp
push
cmpsb
test
xchg
pushl
aas
dec
cmp
push
adc
movsb
sbb
loop
mov
pop
xchg
mov
cld
push
mov
lret
cmp
push
mov
les
cmp
or
push
mov
push
mov
xor
mov
add
xor
js,pn
fwait
loop
mov
sbb
int
mov
mov
push
dec
jbe
push
nop
call
call
and
mov
jo
pop
nop
fistps
enter
out
aam
pushf
rolb
pop
ss
push
loopne
inc
or
adc
loopne
cmc
movsl
mov
cli
pop
pmaxsw
sbb
idivb
adc
es
addl
out
push
mov
fld
fldl
mov
add
lea
dec
add
fisubrs
pop
inc
adc
ret
dec
add
dec
clc
adc
sbb
inc
or
mov
pop
pushf
adc
mov
xchg
sbb
push
lcall
outsb
add
mov
jmp
push
jbe
and
in
repz
xchg
imul
stc
cmp
rol
jb
insb
dec
imul
cmpsb
xor
sub
data16
int
sub
push
jbe
dec
movsb
dec
pop
cmp
fwait
or
cwtl
ds
ret
jp
or
mov
inc
pcmpeqb
call
jp
jno
test
push
out
je
hlt
xor
dec
pop
fisubrl
out
or
jo
aam
mov
add
push
cmp
cmp
xchg
mov
and
pop
lret
mov
and
inc
xor
add
cmp
cmp
fsubrl
mov
fcmovu
and
ret
xor
mov
mov
mov
cld
add
rorb
inc
jg
xor
lock
push
xchg
mov
push
ja
add
mov
leave
call
jmp
rcll
insl
push
sub
add
mov
sub
addl
inc
and
lcall
test
mov
subb
sahf
xchg
test
mov
orb
pop
fstpl
mov
pop
nop
cmp
push
int
and
xchg
ret
push
jno
jo
pop
or
test
andl
mov
test
or
lds
in
jmp
or
les
mov
cli
add
mov
in
and
test
mov
aam
fsubl
inc
push
mov
pop
sahf
leave
and
sbb
jbe
xchg
or
ret
or
sbb
leave
mov
xchg
inc
roll
sub
add
imul
mov
inc
mov
inc
rcrb
test
ja
cli
mov
and
adc
add
pushl
test
leave
pop
add
call
aam
adc
les
mov
in
les
and
aad
cmp
pop
push
in
or
daa
add
lock
jmp
test
das
rorb
data16
jo
int3
pop
lea
lock
clc
outsb
xor
add
mov
add
inc
add
jl
mov
ret
add
sub
call
add
sub
test
adc
aaa
fs
xchg
invd
cld
fbstp
movl
int3
int3
data16
sar
mov
push
dec
ret
stc
and
aaa
adc
add
jne
pop
rcrb
inc
adc
xchg
mov
jbe
mov
scas
and
and
in
inc
enter
scas
popa
cmp
fcoms
dec
mov
shrb
stos
and
and
push
ss
xor
push
lods
jmp
pusha
xchg
loopne
shll
pushf
inc
ds
inc
clc
fsubrs
or
imul
sbb
sub
int3
scas
sub
push
sbbb
mov
data16
push
gs
insb
lock
rolb
lea
or
mov
and
mov
mov
push
jmp
mov
enter
cmp
inc
pushl
add
xor
cmp
out
fdivr
dec
push
fdivs
js
adc
push
shl
pusha
cmp
sarb
inc
cmp
jne
sbb
mov
mov
dec
test
gs
mov
inc
je
sarb
jo
cwtl
push
add
add
inc
shrb
pop
pop
xor
dec
mov
das
fs
in
inc
jne
inc
int3
and
push
hlt
and
adc
aas
push
push
popf
xchg
ret
je
push
in
aaa
add
pop
lods
xchg
ret
or
or
sbb
les
aas
orb
push
jle
loope
pop
js
lcall
cmp
mov
add
ror
mov
cmp
inc
pop
cltd
loope
mov
cmp
test
iret
gs
or
sub
cmc
cmpsl
andb
push
or
add
lock
xor
dec
adc
insl
hlt
and
int3
cmp
pop
je
movsb
push
in
mov
jle
mov
clc
xor
sbb
xlat
mov
pcmpeqb
xor
add
pop
inc
test
rcl
adc
add
ds
adc
mov
aaa
cmp
int3
shlb
cmp
mov
push
orl
jo
dec
cmp
pop
add
push
test
mov
mov
mov
push
hlt
fdivrs
call
dec
pushl
call
mov
adc
inc
mov
pop
push
push
and
mov
sarb
clc
xchg
mov
xlat
scas
sti
jo
cmc
add
mov
cmp
add
in
into
add
add
test
aaa
outsb
scas
andb
push
cmp
decl
or
adc
pop
mov
std
jne
sbb
fld
ljmp
jle
inc
fcos
push
insl
sub
nop
push
ds
lods
push
mov
pushf
pop
add
hlt
mov
push
xchg
mov
pop
inc
shrb
jp
test
inc
cmp
sti
xor
inc
jmp
mov
int3
mov
jbe
pop
push
push
mov
mov
sahf
mov
aad
add
and
sub
cmp
incb
out
cmp
add
lea
mov
incl
xor
aam
lahf
pop
jle
and
jecxz
push
push
insl
adc
xchg
inc
int3
aam
mov
mov
mul
jmp
sbb
jo
stos
test
sub
ret
mov
cmp
pop
dec
js
or
cmpsb
pop
adc
pop
call
test
lock
push
inc
mov
dec
mov
add
fisubrs
in
in
mov
push
call
and
mov
xor
sti
mov
or
and
push
push
lcall
test
push
adc
push
mov
sar
pop
dec
sbb
and
test
popf
lock
add
test
daa
stos
xor
xchg
inc
cmp
and
call
add
test
incl
cmp
fadd
mov
sbb
les
or
shll
call
cli
or
pop
cmpsb
outsl
das
lret
icebp
rolb
inc
imul
mov
inc
dec
mov
popa
test
pop
add
pushf
aaa
pop
xor
ret
mov
inc
jge
mov
dec
sbb
mov
ud0
sbb
mov
mov
loopne
int3
push
adc
pop
aad
xchg
fcoms
jo
mov
jmp
subl
push
pop
pop
mov
mov
cmp
push
out
adc
loopne
ret
int3
xor
int3
push
addb
rclb
fwait
xor
lock
sub
ja
aam
push
pop
xchg
sub
push
cmpb
notl
addr16
or
ljmp
pop
pop
bound
rorb
xchg
inc
cmp
mov
mov
leave
sbb
decl
insb
or
sbb
dec
and
loopne
cld
push
lea
mov
xchg
jne
adc
mov
shrl
int3
mov
fneni(8087
jmp
sarb
in
test
ret
call
xor
fcomp
xor
and
fs
add
and
add
enter
scas
mov
icebp
xor
test
mov
test
mov
mov
sbb
dec
mov
or
mov
daa
xor
pop
out
ds
sub
jne
insl
iret
jne
pusha
outsb
cli
mov
or
push
cmp
loopne
inc
rcrb
dec
adc
pop
lock
aam
and
cmp
test
adcl
lret
cli
mov
out
lea
or
inc
and
mov
dec
mov
jg
jg
out
or
inc
je
and
dec
jmp
aaa
jp
cld
nop
jae
sub
pop
push
add
xchg
sbb
dec
or
das
inc
in
inc
pop
add
subb
es
xor
pop
pop
sahf
push
jge
sub
and
testb
sbb
shlb
lds
inc
dec
mov
data16
mov
jg
rclb
add
js
pushl
enter
enter
push
cmpb
sub
dec
insb
call
stos
mov
inc
sbb
xchg
shr
scas
in
push
inc
xor
dec
rclb
pop
fdiv
leave
fadds
push
lods
mov
sub
movb
pushl
mov
insb
adc
in
scas
sub
andb
dec
adc
push
pushl
jne
out
call
pop
mov
xchg
adc
pop
int
sub
mov
addb
mov
sar
add
mov
inc
push
mov
lock
add
stos
js
nop
push
hlt
insb
mov
sub
icebp
sbb
mov
add
loopne
or
mov
cmp
mov
mov
xchg
cmp
or
push
mov
movsb
test
incl
orb
add
jle
lock
mov
rcrb
shlb
push
ja
sub
dec
and
enter
mov
imul
cmp
fidivl
scas
cli
sbb
pop
callw
pop
jns
outsl
pop
dec
dec
lea
cmc
cmpsb
cmp
lock
pushf
add
push
cmc
jmp
inc
adc
add
je
pop
sbb
movsl
out
push
pop
and
push
mov
sbb
and
xor
push
es
or
mov
dec
loopne
mov
cld
daa
lret
add
notl
mov
inc
loopne
or
or
mov
jmp
cli
pop
adc
inc
xor
add
cmp
sbb
roll
push
inc
or
sub
jbe
pop
inc
nop
rcrl
adc
or
shrb
dec
jg
adc
sub
or
push
shll
pop
or
sub
mov
roll
mov
call
hlt
add
testb
mov
sub
jo
decl
rorb
lahf
mov
leave
adcb
add
mov
popl
pop
mov
xor
add
hlt
clc
push
or
movsl
adc
dec
inc
push
or
mov
xchg
mov
xchg
inc
das
int3
in
xchg
pushl
push
xchg
orl
std
call
fs
push
lcall
sbb
rolb
xchg
cmp
mov
sub
and
les
jo
mov
cmpb
dec
xchg
lock
inc
fcoms
pushf
je
xlat
xchg
and
lret
iret
or
cmc
lods
sbb
jle
push
movsb
adc
fs
mov
jne
or
adc
mov
fidivrl
test
fldenv
mov
mov
loop
sti
cmp
jns
popf
push
gs
and
inc
or
xlat
sub
push
test
outsb
push
cmp
call
mov
gs
out
adcl
add
test
std
inc
cmp
jmp
xorl
cwtl
inc
xor
adc
sbb
rcrb
repnz
mov
and
or
insb
cltd
inc
loop
lods
sbb
xchg
fldl
jle
mov
push
sbb
hlt
dec
or
mov
mov
inc
fcoms
add
jg
movsb
pop
push
mov
mov
shufps
adc
test
sbb
filds
test
das
cmp
sub
setl
popa
or
jg
push
or
mov
dec
mov
or
call
xchg
jb
jmp
adc
xor
push
lcall
sbb
inc
cwtl
gs
dec
mov
mov
push
pop
and
xorl
dec
hlt
push
clc
loope
xor
movl
mov
into
test
add
pop
xor
sbb
fdivl
dec
fsubrs
dec
loop
or
sbb
push
dec
scas
mov
inc
gs
in
mov
pop
lock
mov
in
pop
aad
lock
fs
xchg
jg
push
scas
inc
pusha
sbb
jg
test
adc
outsl
aad
push
sbb
or
incl
fdiv
dec
rclb
lock
loopne
cld
jg
jp
dec
pop
add
dec
pop
sub
adc
call
sbb
push
jo
sbb
xchg
aam
lock
push
inc
sbb
add
sbb
xor
and
or
add
cmp
xor
xlat
loop
and
fs
insl
fwait
xchg
add
loop
jl
adc
adc
add
and
mov
and
cmp
and
das
and
rcrb
mov
push
dec
jmp
js
adc
sub
add
std
push
test
dec
and
gs
mov
lea
fs
inc
add
popf
add
and
xor
aam
xchg
lods
loop
cmpb
testl
mov
cmp
lds
adc
and
icebp
lock
and
shll
xor
aaa
pop
add
in
ret
negb
ret
xor
test
push
jno
add
xchg
ljmp
push
and
xor
jl
sbb
aam
push
fisttps
and
or
push
aas
and
dec
mov
sub
popa
sar
xchg
fs
sti
or
aaa
scas
push
sbb
mov
push
cmp
mov
cltd
sar
add
inc
xor
dec
mov
fisubrl
jp
sbb
psubd
cmp
and
test
test
callw
out
mov
add
dec
push
mov
mov
pop
loopne
insl
inc
xchg
or
loopne
movb
inc
adc
lock
mov
push
test
mov
nop
sub
cs
add
add
data16
cvtps2pd
and
push
js
je
push
test
push
dec
sbb
jecxz
fxch
dec
inc
mov
xor
stos
insl
sti
sbb
dec
mov
lds
add
lods
adc
and
add
rep
imul
je
arpl
lahf
mov
pop
jae
orl
out
test
scas
call
fisubs
inc
mov
add
push
adc
push
idivb
or
decl
pop
mov
push
adc
es
inc
and
sub
test
xor
xchg
lock
mov
dec
pusha
add
and
mov
push
aam
cmp
or
cmc
inc
daa
cmp
jae
lcall
push
nop
sbb
icebp
mov
data16
or
ja
adc
movsb
mov
adc
push
xlat
rolb
cmp
adc
push
movsb
add
adc
mov
mov
stc
sbb
rorb
mov
push
adcb
push
add
mov
add
mov
cli
lcall
push
push
data16
fs
lods
pushf
pop
mov
jge
push
popa
lods
and
mov
fcoml
faddp
xchg
mov
rcrb
stos
test
xchg
dec
sbb
leave
xor
jmp
ljmp
jae
inc
test
cmp
mov
adc
cmp
call
test
sub
imul
push
adc
inc
inc
ljmp
enter
negl
adc
mov
mov
push
adc
pop
mov
and
mov
aas
add
mov
pop
je
mov
rorl
in
mov
icebp
cmp
or
add
inc
jne
adc
std
push
or
cmp
fwait
ret
enter
inc
push
insl
cmp
push
je
and
inc
mov
pop
test
inc
mov
xchg
push
int3
xchg
pop
popa
cld
jno
xor
adc
inc
inc
mov
push
dec
xchg
addl
int3
je
push
push
adc
or
adc
aam
push
push
xor
inc
mov
lods
ja
out
add
sbb
xchg
mov
add
xor
lock
xor
sbb
scas
mov
xor
push
mov
jp
inc
add
adc
call
fistl
ss
fmull
sub
sub
fs
test
cld
rclb
jne
pop
push
sbb
and
or
or
int3
cs
out
test
lock
add
stos
mov
push
hlt
outsl
sub
xchg
test
mov
rcll
ret
std
jo
cmp
and
mov
dec
adc
cmc
out
dec
incl
jmp
jle
mov
mov
data16
xor
sub
pop
fs
idiv
into
push
dec
adc
push
jmp
nop
test
jb
mov
loope
icebp
bound
ret
cld
cmp
sub
imul
push
fs
imulb
mov
or
call
sub
mov
fs
mov
jbe
add
cs
jp
sub
dec
push
call
in
jae
push
rol
cmc
jmp
inc
or
loope
mov
mov
sbb
jg
cltd
cmp
mov
insb
cmp
xchg
push
push
mov
lret
test
xor
cmp
rclb
inc
sbb
pop
mov
push
sub
dec
xchg
dec
lea
sub
or
mov
int3
adc
jb
sbbb
push
adcb
data16
jne
loopne
pop
adc
cwtl
hlt
nop
push
sub
jo
mov
jle
mov
add
adc
xor
sbb
push
lea
and
mov
les
sbb
fadds
sbb
mov
pop
xchg
addl
inc
jne
shlb
std
mov
push
test
div
dec
aas
into
rclb
xor
adc
call
dec
lds
ss
mov
and
ficoml
cmp
inc
dec
ja
xchg
xor
adc
adc
xor
mov
insb
sub
pusha
int3
lahf
adc
mov
push
std
sbb
xor
icebp
add
adcb
int3
dec
jle
into
aaa
shr
adc
test
jmp
jmp
and
je
add
adc
dec
and
xor
lods
sbb
pandn
test
dec
xchg
xchg
push
enter
out
mov
and
test
in
push
sub
into
or
xchg
andb
stos
jle
inc
pop
mov
repnz
add
loopne
sub
addb
mov
enter
xchg
test
mov
mov
and
mov
test
xor
push
xor
push
sbb
clc
dec
enter
pop
les
test
jns
lcall
lods
pop
in
mov
addl
sbb
stos
mov
mov
lcall
mov
int3
sub
je
mov
cmp
mov
mov
sbb
lds
inc
frstor
cmp
jne
and
xor
push
push
add
aad
movsb
jg
or
cmp
add
sbb
insl
inc
pop
fcoms
add
add
xor
xchg
push
jne
mov
jecxz
cwtl
inc
cmova
mov
test
and
add
in
jne
jbe
aad
and
not
outsb
xchg
mov
std
fcmovne
mov
insb
mov
push
push
add
xor
xchg
sbbb
aas
cmp
sbb
and
add
or
cmc
jecxz
or
xor
and
xor
test
je
imul
or
jno
fsubl
dec
test
xor
and
loopne
adc
fidivrl
out
push
add
orb
ss
pop
push
sbb
cmp
cmp
push
inc
push
mov
push
sub
dec
dec
and
addl
add
mov
ret
jne
mov
xchg
popf
sbb
test
test
outsl
xor
sub
mov
pop
jge
mov
inc
inc
or
push
lods
in
fwait
or
pop
fcoms
data16
cmp
add
cld
xor
inc
mov
mov
mov
or
or
in
xor
mov
testb
outsb
mov
test
nop
jge
inc
push
fdivrl
inc
ds
xchg
in
cmp
dec
outsb
pop
adc
fisttpl
xor
stos
test
adc
and
bound
aaa
inc
pop
add
xchg
push
mov
mov
cli
nop
dec
xor
outsl
jle
fwait
jmp
cmp
mov
out
std
jmp
and
clc
sbb
int3
nop
inc
test
cmp
xor
mov
mov
call
cmpsl
xor
xorl
js
sub
cmp
aad
adc
jne
cmp
dec
dec
mov
mov
cld
mov
hlt
mov
dec
pop
pop
dec
push
dec
pop
mov
adc
js
fdivs
adc
pop
loopne
call
mov
in
inc
xor
lret
inc
add
xor
add
mov
int3
adc
fdivp
std
xor
cmc
aaa
add
mov
adc
mov
dec
test
loop
idiv
fs
jecxz
shrb
mov
adc
inc
and
push
rol
loop
je
push
push
xorl
mov
lock
repz
add
dec
sahf
in
lock
test
test
xor
and
ljmp
cld
data16
test
pop
call
jne
dec
push
loopne
mov
push
add
pop
aas
jb
cmpsb
nop
sti
dec
push
add
push
lock
mov
and
ret
mov
and
push
pop
sub
dec
jo
inc
inc
cld
popf
js
push
pop
pop
jle
psubsw
jb
inc
add
push
nop
nop
sarb
sub
les
add
clc
adcl
cld
mov
pop
push
mov
jmp
or
inc
ljmp
popf
mov
mov
test
pop
pop
and
enter
mov
mov
adc
and
call
add
sbb
mov
fadds
xchg
and
cmp
stos
scas
inc
add
bound
inc
push
andnps
xor
repnz
push
cld
mov
fmul
cli
pop
inc
test
mov
pop
mov
jl
adc
dec
xchg
push
push
adc
mov
push
and
xchg
pusha
add
nop
mov
inc
std
ret
dec
shll
add
mov
int3
inc
inc
ljmp
xchg
and
ds
roll
negb
cld
sbb
movsl
sbb
push
inc
cmc
es
jnp
js
mov
and
gs
add
push
lea
xor
pop
xchg
pop
sub
mov
cld
push
cmc
pop
les
dec
add
idivb
inc
inc
pushl
add
and
mov
es
cld
imulb
mov
xor
add
clc
pop
push
cmpsb
test
inc
sbb
call
rorb
mov
xchg
pusha
test
orb
sbbl
loopne
enter
adc
rclb
imul
jne
je
dec
xchg
xor
add
call
sub
test
pop
pusha
ret
or
test
mov
popf
dec
adc
adc
xor
push
mov
push
outsb
addl
adc
push
lcall
and
testl
test
insb
jae
cltd
aaa
xor
add
push
add
mov
aad
sub
inc
notb
xchg
push
lock
out
and
mov
daa
test
data16
fstpl
and
and
js
cmp
adc
test
stos
std
pop
pusha
shl
test
mov
jbe
or
xchg
adc
ds
ret
inc
and
les
mov
in
pop
sub
sub
or
lock
cld
orb
push
pusha
lods
pop
scas
and
xchg
add
dec
sbb
out
js
mov
ss
xor
add
mov
mov
and
lods
lea
mov
test
loope
mov
pop
xchg
call
data16
and
inc
std
jae
pushf
xchg
and
data16
aam
pusha
or
clc
leave
add
mov
loopne
add
add
loop
lds
pop
dec
in
mulb
mov
mov
test
xchg
cs
ds
mov
xor
add
mov
pop
mov
sub
lods
movsl
aas
cld
outsb
scas
cmovne
out
dec
loop
je
adc
nop
lea
add
adc
push
call
mov
and
push
fiadds
insb
jmp
dec
push
xor
dec
add
dec
fldenv
idivb
mov
or
inc
les
inc
cmpsb
aaa
add
mov
adc
add
rcrb
xor
nop
and
test
jne
pop
testb
lods
mov
pop
shll
sahf
mov
call
call
lds
xchg
outsb
push
lock
outsb
mov
and
push
xorb
cmp
stos
jp
cmp
ror
sub
push
cmp
add
sti
jae
cmp
xchg
pop
cmpl
ret
pop
movsb
std
mov
push
in
push
xchg
test
pop
jp
add
call
sbb
into
fwait
mov
xor
sub
pop
sub
movsb
test
and
ja
lret
add
xor
ds
cmpb
out
cld
jge
xor
test
addl
cli
ds
cmc
mov
adc
inc
aas
lcall
push
jno
mov
test
lock
cmp
xor
add
movups
or
loopne
add
lcall
pop
sbb
cli
enter
insl
shlb
stc
or
inc
xorl
pop
or
inc
cmp
mov
mov
incl
lods
sahf
add
mov
add
add
sub
adc
add
clc
xchg
js
jle
icebp
stos
pop
mov
xchg
call
jmp
mov
insl
xchg
sbb
cmp
xor
popf
inc
inc
in
and
aam
or
and
faddp
push
lods
sub
pop
int3
adc
das
jb
xor
lret
lret
pop
adc
adc
cmpsb
aaa
in
xchg
cmc
mov
aam
dec
stc
aaa
lea
je
pop
js
adc
inc
rorl
hlt
cs
cmp
xor
in
cmpsb
mov
or
dec
in
decl
cld
jmp
je
fsubr
pop
inc
int3
and
pop
adc
and
mov
aaa
lahf
imul
cmc
dec
loop
jge
jb
mov
adc
adc
loope
jg
push
ret
jmp
or
cmp
outsb
sarb
xchg
jo
fwait
movsb
int3
lret
sub
mov
pop
enter
les
ja
cmp
and
data16
pop
test
sub
and
push
add
hlt
adcl
pop
push
and
mov
or
xor
enter
sbb
addl
subl
in
xlat
inc
subb
mov
push
mov
cmp
xchg
dec
adc
xor
js
inc
lock
and
sbb
shrb
mov
shrl
mov
pop
xor
inc
adc
sub
sub
jo
and
jb
orb
hlt
push
repz
mov
outsb
xchg
cli
sbb
cmp
addl
mov
fstpt
nop
lahf
movsb
add
cwtl
fisttpl
mov
pop
addb
xorb
nop
and
test
jg
mov
scas
ffreep
mov
int
jg
add
lret
clc
mov
push
inc
pop
cmp
call
mov
jns
xor
loopne
sbb
ret
mov
rolb
or
scas
cli
enter
add
stos
jmp
rorb
xchg
icebp
mov
push
std
and
xor
cmpsb
sarb
addl
mov
faddl
mov
icebp
adc
inc
jmp
jno
push
shlb
adc
shlb
mov
xor
jmp
dec
sbb
mov
inc
data16
inc
mov
pop
je
adcb
aam
lds
ss
out
loop
pop
testb
or
shlb
les
cs
clc
xchg
scas
dec
add
les
dec
mov
mov
sahf
xchg
pop
addb
add
dec
xor
adc
pushf
pop
mov
subl
aad
enter
loop
aas
add
clc
movsl
or
sub
decb
test
mov
icebp
jg
lea
and
push
int
inc
add
push
insb
mov
jae
adc
ret
sub
es
xchg
les
adc
xchg
mov
mov
jne
into
or
mov
mov
cmp
jle
fildll
js
aam
sub
shr
sbb
decl
adc
inc
stos
lock
pop
sarb
mov
std
adc
mov
idiv
mov
call
test
push
daa
inc
pusha
hlt
mov
adc
clc
cmpsb
mov
or
sbb
push
addb
push
lea
in
and
xchg
add
in
fisttps
inc
test
ljmp
sbb
aam
push
jne
icebp
pop
clc
sub
lahf
or
pusha
pop
push
dec
push
mov
adc
out
jno
fnstsw
mov
inc
pop
sbb
xor
call
aad
or
jl
cmc
dec
adc
mov
or
je
xchg
sar
dec
mov
cmp
das
jl
lods
or
mov
mov
nop
cmp
sbb
incl
jg
loopne
mov
loope
in
mov
push
xor
inc
mov
xor
sbb
fadd
aas
dec
test
jmp
lods
or
mov
test
aam
loop
sub
je
jo
lea
cmp
out
mov
xor
sbb
ljmp
and
or
mov
inc
mov
test
xor
insl
lret
js
adc
test
xchg
test
icebp
jg
movsb
pop
mulb
jo
std
int3
add
es
mov
add
dec
lcall
cmpsl
add
sbb
add
push
xchg
mov
pushf
ds
les
lcall
adc
add
xchg
fwait
rcrl
into
ret
inc
dec
andb
inc
push
mov
shrb
incl
lock
rolb
push
sbb
and
ret
je
xchg
dec
cmovbe
mov
push
mov
xor
movsb
je
test
inc
jecxz
cmp
mov
adc
pop
mov
xchg
push
movsl
mov
shll
lock
jmp
sbb
jle
lret
push
fiaddl
loopne
xor
sahf
mov
cmpb
ss
mov
xor
dec
dec
push
int3
sub
stos
inc
adc
dec
add
pusha
push
xchg
cld
or
fdiv
mov
sbb
test
es
jbe
pop
in
add
dec
rol
shl
ret
cmpsb
scas
push
lock
lcall
jmp
fdivrs
mov
shrb
cli
cmp
dec
jb
mov
test
push
xchg
inc
inc
pop
pop
dec
mov
cwtl
add
inc
inc
or
jmp
sbb
ja
mov
call
xor
xor
movsb
add
and
inc
adc
push
mov
hlt
call
or
cmp
sbb
loopne
xor
dec
mov
cld
inc
jl
jb
add
inc
jl
push
or
popf
loop
movl
sub
cmp
movsl
mov
js
arpl
pop
mov
decb
adc
jl
mov
int3
sub
jbe
mov
mov
add
les
mov
mov
popf
sahf
jb
hlt
sbb
mov
jbe
insb
xchg
test
mov
pop
movsl
popf
add
push
sub
pusha
test
shll
and
or
fcoml
push
sbb
adc
loopne
adc
push
call
jp
cld
cmp
iret
mov
inc
adc
bound
sbb
jmp
push
aaa
sar
notl
lock
mov
push
jl
in
mov
or
ds
push
cmp
pop
call
push
sub
add
xchg
mov
or
xchg
mov
pop
mov
shl
push
mov
fdivs
and
sbb
mov
movsb
iret
push
in
les
leave
cmp
sub
clc
cmp
call
jecxz
sbb
mov
int
cld
mov
adc
push
aaa
test
add
jne
pushf
lcall
in
mov
test
ss
sub
add
fcomps
mov
add
jno
int3
popa
movsl
loope
lret
inc
inc
cmp
mov
or
pushf
pop
or
add
jb
or
mov
fildll
sub
sbb
mov
cmp
insb
push
mov
adcb
loope
xor
aam
or
dec
faddl
inc
test
add
lcall
rolb
dec
incb
xor
sahf
or
mov
push
imul
mov
dec
mov
adc
sbb
mov
outsb
lods
cwtl
push
clc
pop
mov
movsb
dec
je
rolb
loopne
rclb
lock
xor
or
dec
cld
dec
pop
jo
pop
mov
in
nop
enter
ja
sahf
std
rclb
sub
mov
fwait
hlt
in
jge,pt
or
call
call
imulb
push
add
and
std
mov
inc
rcrb
divb
cli
mov
adc
mov
push
or
and
or
pop
mov
or
push
mov
inc
ja
adc
cs
or
sbb
imulb
inc
add
push
nop
inc
jge
loop,pt
out
and
and
pushf
inc
mov
dec
mov
negb
call
imul
pop
fcomp
sahf
jg
mov
repnz
aam
les
push
mov
cmp
push
orl
xchg
cmp
fcoml
inc
out
xchg
jp
movups
mov
popf
fisubrl
xor
mov
or
testl
push
pushf
add
or
or
call
std
push
jnp
andl
pop
and
xchg
mov
shlb
cmp
sub
in
jmp
jbe
sbb
adc
and
mov
or
mov
mov
in
aaa
push
mov
mov
idiv
lea
nop
js
mov
loopne,pn
std
push
mov
push
jbe
add
std
mov
xchg
push
lea
cmp
push
jne
add
mov
call
rolb
inc
push
cmpsl
mov
std
stos
shld
inc
push
aas
dec
mov
test
dec
add
icebp
adc
push
imul
adc
ret
sarb
roll
mov
mov
ds
or
adc
mov
clts
lret
aas
mov
shl
mov
inc
and
int3
sub
jp
add
test
rcll
outsl
insl
mov
cmp
cmp
push
mov
adc
and
ret
sbb
cmpsb
out
sahf
mov
jb
sbb
sub
sbb
adc
sbb
push
int3
mov
icebp
adc
jno
cmp
inc
lcall
loopne
mov
insl
je
fsubrs
add
push
dec
stc
gs
fbld
pop
sbb
into
fcoml
and
pop
xchg
push
loope
xchg
mov
jb
mov
dec
add
imul
nop
push
add
rcrl
xchg
shl
sbb
push
loopne
pop
add
jge
shrb
sub
inc
pop
movsb
lods
sbb
jl
push
sahf
insb
fwait
jle
loopne
nop
adc
add
pop
pop
cmp
call
int
cld
jmp
outsb
je
xor
mov
fldcw
or
push
movsl
out
cmp
loopne
testl
ss
pop
fdivs
into
mov
lock
inc
push
and
je
je
decl
test
lret
movsb
mov
sub
mov
sub
mov
adc
xchg
jns
pop
call
inc
push
movsl
inc
in
mov
and
outsl
mov
jge
cltd
push
xor
hlt
cmpsb
pop
sbbl
neg
or
loopne
inc
test
mov
xchg
movsl
push
shl
test
test
inc
divb
sti
xchg
nop
lcall
inc
add
fwait
icebp
push
sbb
xor
mov
cwtl
test
jbe
call
mov
mov
rcll
pusha
mov
lcall
into
jne
push
mov
decb
xor
int3
mov
jb
or
outsl
test
adc
cmpsl
aas
ret
mov
push
and
int3
add
xorb
jle
je
incb
or
adc
jle
call
fdivrs
in
push
dec
inc
push
incl
and
mov
xchg
gs
ffreep
cmpsb
lcall
testb
repnz
clc
mov
gs
mov
sbb
aam
adc
mov
insb
mov
sti
mov
add
or
and
arpl
rolb
data16
enter
and
xor
mov
gs
insl
dec
cmp
sbb
setle
lods
jge
add
pop
xchg
push
add
and
test
ljmp
jecxz
pop
ficompl
push
sarl
shrb
imulb
adc
inc
out
mov
call
push
mov
inc
je
pushf
xor
ss
push
scas
and
movsb
mov
fdiv
sub
mov
pop
jecxz
inc
test
pop
pushf
sbb
push
hlt
test
hlt
outsb
xor
pop
add
ss
jg
test
ror
xor
push
fs
push
xor
je
lcall
clc
decl
add
cwtl
add
cli
dec
ficomps
call
lret
pop
xchg
sbb
or
cld
fildl
or
mov
jle
inc
add
mov
jp
adc
cld
incl
mov
stos
outsb
add
xor
sarl
add
add
test
dec
ljmp
or
imulb
shlb
mov
fs
in
add
test
int3
leave
test
in
push
sarb
sahf
rcr
call
cmpsb
adc
sbb
lock
icebp
xchg
insb
mov
jge
dec
xchg
push
nop
test
sbb
shlb
ss
or
xor
movsb
xor
call
jnp
cmp
xor
pop
aaa
call
nop
mov
mov
mov
lea
inc
add
pop
sub
jmp
push
scas
cmp
adc
lock
add
and
fs
mov
sub
cs
hlt
mov
xor
adc
popf
push
lcall
push
inc
adc
js
lods
fstpt
aad
sti
divb
mov
jl
inc
outsb
and
push
jge
pop
stos
push
xchg
push
xchg
inc
and
push
incl
adc
es
loop
and
daa
inc
incl
vmread
inc
ret
inc
mov
inc
not
jo
mov
roll
pushf
orb
mov
push
mov
inc
int3
fs
dec
or
sbb
adc
pop
cli
rol
mov
push
idivl
add
mov
mov
jno
les
inc
nopl
dec
dec
add
lea
pop
les
add
aad
or
push
or
adc
push
inc
loopne
int3
dec
dec
pop
cmovp
or
test
out
mov
scas
pusha
adc
pop
mov
outsb
std
jmp
and
pop
and
fs
mov
mov
lcall
mov
repz
push
or
adc
movsl
lock
incb
push
mov
dec
lret
push
push
fdivrl
pop
or
mov
and
push
nop
out
in
add
rol
mov
mov
mov
pop
pop
sub
or
mov
adc
enter
pop
lock
cld
adc
or
jmp
and
jmp
push
inc
or
incb
mov
mov
push
cwtl
lret
lret
mov
xor
or
jne
btc
mov
push
pminub
movsl
sub
idivb
dec
lock
cld
lret
shl
test
add
push
sbb
xor
ret
bound
fwait
inc
add
add
xchg
loop
jecxz
clc
ss
cmp
push
add
lahf
push
xor
dec
pop
int3
les
shl
cmp
mov
add
ss
pop
add
jne
and
mov
popl
nop
jno
lret
mov
lods
stos
pop
daa
jp
faddl
cld
cld
xor
faddl
mov
fadd
in
pop
pop
sbb
add
push
popa
mov
push
pop
mov
ret
push
pop
pop
push
outsb
pop
or
or
idiv
sub
in
sbb
pop
cs
hlt
add
add
fcomps
test
sbbb
cs
add
lret
neg
insl
lock
push
shl
jbe
mov
sub
push
xor
sbb
or
add
rorb
push
clc
cli
add
test
mov
adc
mov
xchg
pop
fidivs
scas
mov
or
jb
insb
loope
aam
push
data16
aas
rclb
push
inc
push
dec
int3
cld
dec
inc
xchg
and
jne
jmp
jl
add
orl
push
sbb
decb
shrb
mov
add
dec
fs
mov
inc
mov
mov
jle
les
add
cld
or
push
and
dec
cli
iret
cmp
jmp
inc
adc
mov
shrb
xor
cltd
inc
or
sub
mov
pop
mov
data16
int3
fidivrs
adc
adc
xchg
rorb
aaa
jb
pop
inc
out
push
xor
outsb
mov
outsl
jle
adc
cmp
pop
mov
xor
out
xor
dec
cmp
inc
mov
dec
ljmp
pop
sbb
inc
ret
aam
inc
ljmpw
inc
in
pop
mov
cltd
loop
adc
stos
and
push
jl
mov
test
push
adc
sbb
xchg
mov
andb
mov
jl
out
xchg
jne
xchg
leave
push
std
push
or
pusha
mov
or
out
aam
mov
bound
wbinvd
decl
faddl
push
add
test
jl
fmull
mov
xor
push
mov
add
shr
push
or
or
nop
mov
push
xor
ret
lea
dec
mov
mov
jo
jle
add
xor
test
mov
scas
sbb
or
add
lcall
cmp
popf
je
inc
movswl
aaa
or
and
test
icebp
lock
pusha
aad
add
rcll
lds
xlat
rol
inc
ret
stos
inc
orb
or
push
ja
outsb
dec
push
aas
mov
hlt
dec
or
dec
cwtl
and
jl
loop
cmovo
lea
ss
stos
inc
push
xor
cwtl
pop
adc
outsl
cmp
add
adc
addb
mov
lods
mov
dec
push
addl
and
push
decl
mov
pop
pop
pushf
jl
rol
inc
nop
loop
cmp
mov
lock
test
enter
or
adc
sub
jg
adc
call
int3
push
negb
xor
push
aaa
stos
xlat
test
sub
inc
xor
inc
jg
and
push
mov
mov
dec
mov
int3
faddl
adc
cmp
xor
add
mov
lds
in
out
jle
les
push
sbb
jae
mov
push
dec
pushf
jmp
adc
dec
clc
aaa
mov
data16
xor
push
mov
pop
mov
es
and
fildl
ret
dec
or
sub
gs
cli
pop
dec
jbe
sub
inc
mov
cmpsl
stc
insb
cli
xor
push
dec
push
or
ret
ret
jbe
or
xor
adc
fadds
test
das
add
data16
ficoml
lock
jp
and
adcl
or
aad
cltd
ret
in
stos
mov
ljmp
add
jmp
iret
sahf
test
js
je
cmp
gs
test
pop
sub
movb
call
adc
outsb
shrb
ja
mov
jle
mov
xchg
andb
mov
fnstenv
push
xor
pop
mov
loopne
loop
mov
in
sbb
cs
push
ret
inc
clc
call
cmp
push
imul
pop
xlat
lods
ljmp
mov
daa
dec
push
loopne
xor
add
pop
push
jb
mov
scas
dec
cld
mov
adc
je
add
loop
call
jne
fcomps
andb
ret
movsl
mov
push
insl
hlt
sub
dec
sti
enter
movsl
mov
mov
pop
push
push
add
data16
adc
mov
add
lcall
int3
loop
mov
add
add
push
dec
add
adc
mov
push
xchg
jno
mov
fadds
fisubrl
nop
and
negl
les
test
cmpsb
xorb
lea
ret
pop
fisubl
mov
dec
paddsb
push
jne
cmc
pop
fiaddl
rorb
movsb
xchg
inc
push
cs
sbb
out
push
lea
in
in
jb
movsb
or
sbb
addl
add
sub
jb
push
loopne
adc
jne
and
xor
inc
sub
and
pushf
popf
nop
mov
dec
ljmp
mov
add
dec
mov
and
mov
xchg
inc
pop
pop
mov
std
add
and
mov
inc
push
mov
mov
push
add
xchg
arpl
sbb
xchg
cli
pop
sti
lods
ret
mov
sub
iret
fdivrs
cld
cmpsb
aad
pushl
incl
ja
test
adc
mov
pop
mov
enter
cli
fisubrs
add
xchg
mov
pop
jle
cmc
cmp
or
ficoml
inc
adc
adc
iret
call
mov
call
adcb
inc
ret
push
scas
les
icebp
pop
clc
call
adc
jmp
push
sbb
sbb
decl
inc
outsl
dec
push
testb
push
xchg
pop
leave
mov
stos
aad
mov
push
add
arpl
inc
insb
cmp
inc
push
fmuls
xorl
push
mov
adc
das
les
push
out
ret
push
xchg
movsb
pop
sbb
push
roll
daa
ds
sub
jns
call
inc
push
ljmp
shlb
in
fwait
dec
nop
and
pop
js
mov
movsbl
rorb
cmp
lcall
cmp
fbld
adc
cld
call
or
jge
decb
jge
mov
jl
outsl
sub
rcrl
push
ret
outsl
dec
and
movsb
sbb
mull
inc
cmp
mov
pop
add
or
push
outsb
divb
add
ret
inc
test
test
push
mov
fidivl
mov
add
mov
push
sar
inc
paddd
cmc
and
imul
inc
hlt
add
inc
test
ss
mov
nop
pop
insl
fsubrl
jo
inc
pop
jb
lods
rol
and
pop
add
cmp
add
ja
add
xchg
sbb
mov
mov
fcomp
inc
inc
jle
jg
scas
dec
test
aas
data16
lret
fists
add
test
fs
mov
ret
test
daa
mov
out
sub
dec
add
jo
lods
dec
rol
outsb
push
shrb
imul
jne
sub
push
jge
aad
in
loopne
mov
sarl
add
lret
add
rcll
xor
inc
adc
push
mov
lahf
insb
adc
dec
push
or
dec
or
fcmovnb
orb
roll
jp
sbb
ja
loop
jmp
pushf
lea
xchg
loop
sub
shrb
cmpsb
lcall
scas
or
hlt
push
call
adc
cmp
push
add
push
inc
mov
mov
add
or
mov
inc
cmp
ljmp
je
test
pop
sbb
call
call
rclb
adc
and
aaa
cmp
push
and
cld
jp
add
incl
dec
mov
and
inc
jl
sub
cmp
repnz
mov
mov
add
addb
ljmp
add
mov
les
lods
sub
cli
loop
xchg
icebp
stos
jb
xor
push
add
pop
adc
inc
adc
or
mov
fldt
push
mov
pop
push
clc
dec
cmp
incl
cltd
das
out
or
jmp
adc
bound
sbb
enter
sub
shrl
push
int3
fbld
enter
test
fidivs
and
nop
dec
cmpsb
jae
fldenv
sti
fucomip
addr16
or
popa
mov
cmc
cmpsl
mov
leave
call
push
rorb
scas
fcoml
jo
push
lock
inc
mov
pop
sub
ret
scas
shl
jnp
call
je
fisubrs
dec
out
mov
call
lock
push
adc
xlat
inc
xor
push
fwait
add
sub
movsb
pop
adc
xlat
mov
push
cmp
inc
daa
clc
test
push
insl
pop
push
fisttps
out
pop
lea
adc
shll
test
mov
sbb
bound
adc
cmp
imul
sarb
mov
push
mov
pop
aam
xchg
or
addl
or
sahf
or
jmp
insb
dec
and
hlt
mov
push
sub
stc
dec
js
and
lods
pop
mov
out
xor
jns
push
add
cld
mov
mov
cmp
push
fldcw
mov
xor
add
flds
add
push
and
push
jmp
movsl
out
push
fiaddl
or
inc
stos
outsl
mov
scas
test
enter
mov
sbb
sbb
lret
incl
fbld
faddl
push
push
js
adc
mov
fsubrs
dec
sahf
adc
out
fs
std
test
cmp
data16
mov
cs
inc
test
add
pop
cmp
call
xor
or
xor
lret
gs
sbb
or
sub
mov
pop
jbe
inc
add
jo
push
mov
pop
outsb
int3
sbb
ljmp
xchg
pop
sub
cwtl
or
and
xorb
clc
mov
and
addl
inc
mov
call
push
pop
push
cmc
mov
add
mov
mov
mov
sbb
push
mov
shlb
in
notb
lods
clc
fimull
call
sti
push
repz
xor
ljmpw
fdivrs
hlt
call
mov
adc
xchg
scas
nop
push
xchg
imul
xchg
and
or
decl
dec
dec
cmp
movsb
mov
test
popl
ss
mov
shlb
sub
in
pop
pop
adc
and
cmpsb
out
repnz
dec
sar
inc
negb
cmp
loope
shlb
je
inc
aad
ljmp
rclb
shll
add
leave
pusha
stos
mov
in
mov
icebp
and
out
int3
je
sub
mov
lcall
inc
lods
pop
dec
dec
inc
sub
jg
incb
dec
sbb
push
sbb
incb
push
outsl
push
aas
icebp
sar
cmp
in
mov
inc
lret
and
leave
and
test
adc
std
lock
das
dec
pop
mov
mov
or
movsb
mov
scas
hlt
jg
orb
fs
mov
dec
inc
aad
or
sub
mov
xchg
mov
insb
ljmp
pusha
add
push
stos
xor
ret
stos
shll
push
mov
sbb
pusha
dec
push
imul
mov
jl
push
movsb
cwtl
push
repz
mov
clc
dec
ret
mov
inc
insl
fmull
jg
xchg
call
mov
xor
jb
aam
dec
fwait
test
xor
adc
dec
push
push
jns
movsbl
cs
int3
xchg
cmc
adc
cs
fadds
push
loope
call
inc
outsb
cld
sbb
xchg
sbbb
add
xor
ficomps
sbb
int3
aaa
mov
mov
cmp
dec
and
inc
in
mov
inc
gs
mov
push
fildl
mov
or
test
stc
cmp
xor
mov
mov
and
cmp
lods
pusha
mov
adc
inc
cmp
into
mov
pushl
add
rolb
hlt
in
je
pushf
shrl
es
jo
pop
and
rcrb
sub
or
sbbl
and
cld
in
push
jb
mov
repnz
jbe
cmp
fdivrs
xor
dec
cld
pop
sub
out
cs
cmp
aaa
add
imul
lock
pop
push
push
pop
les
fiadds
ss
outsb
mov
outsl
add
lods
pop
push
xchg
shlb
mov
fimuls
cmp
dec
leave
xchg
int3
notb
nop
sub
xor
xlat
jo
ret
mov
push
ret
inc
ja
mov
and
lret
int3
ss
cmovne
sti
into
add
jmp
jo
stc
adc
ljmp
push
pop
aaa
js
lock
and
mov
out
mov
ret
ret
lea
cwtl
push
add
clc
push
test
sbbl
mov
fildl
push
imulb
pop
xor
lods
dec
jmp
inc
std
push
je
call
cwtl
add
int3
call
cmove
add
mov
adc
jne
pop
jbe
test
out
mov
cmp
xchg
sbbb
int
lods
cwtl
add
jo
inc
jo
xchg
fildl
out
xor
std
sbb
adc
icebp
inc
mov
addb
add
inc
fdivrp
sti
add
cld
cmp
xchg
xchg
or
les
lock
nop
aas
mov
sub
add
pushf
outsb
cld
std
inc
and
xor
cld
std
add
xor
ret
adc
rolb
adc
mov
pop
cmpsb
das
add
aaa
scas
adcl
inc
mov
testb
mov
dec
mov
push
sar
fistl
sub
sbb
add
push
mov
add
pop
xor
pop
lock
jo
test
daa
int3
xor
inc
cmp
push
ret
aad
inc
shl
call
add
outsb
pop
test
movsb
aam
subb
jo
pop
mov
sub
jge
jmp
enter
into
cmc
dec
fldl
orb
sub
add
aaa
jg
mov
xor
cmp
adc
inc
and
hlt
aas
fldl
roll
jmp
mov
jne
sbb
loop
sub
adc
mov
call
push
or
ss
lret
ret
push
fst
cmpsb
ret
xor
xor
and
addr16
jecxz
push
enter
mov
std
pop
cmp
mov
jl
fmul
shll
mov
fcom
cs
dec
ljmp
test
rorb
pop
push
xor
adc
and
outsl
testb
sarb
mov
shll
add
gs
push
repnz
push
adc
aam
cld
mov
hlt
decl
int3
pop
lods
xor
mov
int3
mov
popa
adc
push
mov
sbb
in
xchg
loope
cmp
shl
addr16
aaa
cwtl
cli
mov
sbb
inc
mov
adc
xor
mov
cmpsb
in
add
sub
call
inc
es
shrb
dec
and
add
mov
mov
add
insl
loope
cmpsb
add
push
and
mov
jbe
mov
out
push
push
dec
clc
loope
mov
push
jae
dec
loopne
or
xor
inc
scas
ret
jmp
hlt
mov
loopne
leave
add
jbe
xor
ja
shr
and
add
add
jl
dec
xchg
pop
test
push
and
or
pop
jo
loop
xor
push
or
aad
sub
pop
ds
pop
mov
dec
lea
push
mov
shll
mov
mov
cld
add
jb
cmc
mov
repnz
fs
sbb
push
ret
add
or
subb
insl
imul
push
cwtl
stc
inc
adc
mov
add
shlb
jbe
dec
dec
xor
jo
add
fs
push
lock
and
add
movl
mov
add
inc
lea
xchg
inc
jle
mov
jmp
and
fcom
les
movsb
xchg
jmp
std
mov
or
fadd
outsl
test
scas
jb
lret
rorb
cmpl
push
push
les
pusha
cmp
clc
adc
pop
fdivs
xchg
cmpsb
cwtl
mov
std
ret
es
dec
or
and
or
dec
mov
outsl
pop
nop
push
mov
aas
je
mov
popf
subb
stc
xlat
add
lahf
xor
xchg
ficomps
dec
adc
push
in
mov
jne
test
adc
in
dec
stc
sub
push
xchg
jo
cmp
sub
mov
mov
adc
mov
fimull
push
jo
ljmp
lahf
mov
cmp
cmp
pop
jne
sub
jmp
xchg
xchg
and
sbb
adc
push
mov
cwtl
or
sbb
aaa
and
roll
xchg
fcomps
mov
inc
faddl
sbb
adc
pusha
mov
push
call
jle
add
mov
and
cmp
adcb
les
aam
add
sahf
out
jg
lcall
mov
push
push
cmp
incl
enter
push
push
sbb
add
adc
es
ret
ret
push
xor
adcb
repnz
inc
add
mov
mov
add
jecxz
rcrb
xor
add
js
in
ljmpw
enter
and
fisttpll
call
add
dec
or
push
mov
je
dec
sub
inc
mov
mov
aam
pop
or
sub
lea
sbb
rorl
mov
fidivl
clc
gs
or
cmp
add
out
push
or
leave
mov
out
cmpsl
sbb
add
pop
inc
loope
clc
inc
pop
mov
outsl
cli
jge
test
mov
in
xor
lea
aas
jb
es
inc
inc
test
aad
push
jo
mov
mov
cld
mov
call
and
add
adc
add
fs
mov
ret
cmp
add
push
xlat
push
sbb
xor
inc
jb
push
push
sub
xor
clc
push
adc
arpl
mov
mov
rclb
nop
mov
nop
mov
rcrb
jne
insb
add
xor
push
push
and
cmp
cmp
push
adc
inc
lock
cmpsb
mov
ret
fistps
mov
cmpsl
cmp
jge
nop
pop
xchg
fists
mov
rorb
mov
je
pop
insb
std
in
mov
rcrb
push
add
mov
fisttps
je
sahf
je
and
mov
inc
test
shlb
inc
nop
jae
lods
pop
sub
jp
push
nop
loopne
xor
mov
mov
jle
or
cld
pop
popa
inc
lea
arpl
adc
ljmp
stos
cmp
shl
cld
sub
sub
cmp
mov
jmp
add
push
mov
push
jb
inc
push
push
fs
out
test
in
sar
inc
and
push
cmp
mov
adc
pop
add
push
clc
ja
xchg
xor
inc
fists
cltd
inc
repz
sub
adc
pop
stos
sbb
mov
insb
leave
scas
ss
out
adc
mov
sbb
add
mov
hlt
mov
mov
int3
mov
mov
push
jmp
ds
dec
sub
add
clc
add
shr
jmp
mov
pop
cmp
xor
inc
mov
je
adc
in
adc
mov
push
adc
push
decl
push
cmp
xchg
icebp
js
or
adcb
incl
fwait
pop
mov
mov
data16
loopne
inc
cmp
in
mov
jl
dec
dec
stos
or
mov
mov
lret
jne
xchg
fbstp
cwtl
inc
adc
ss
ja
arpl
xchg
repnz
enter
xor
or
xor
flds
call
pop
test
adc
jge
mov
mov
mov
push
sbb
xchg
push
in
sbb
and
mov
sahf
cmc
add
lea
daa
cmpsl
and
cmp
popa
test
ds
icebp
int3
dec
push
adc
inc
call
xchg
pop
lock
call
cli
icebp
call
dec
cmp
repnz
cld
sbb
hlt
mov
push
cli
lcall
enter
dec
pop
mov
inc
lds
adc
push
adc
fs
lods
cmp
pop
popa
sub
xorl
or
hlt
xchg
std
xor
rdpmc
testb
xlat
mov
outsb
shll
jp
sub
popa
aaa
movsb
xor
add
or
adc
jne
push
pop
mov
jnp
rcll
pop
push
cmp
movsl
mov
mov
push
ljmp
adc
mov
jge
in
sbb
dec
xor
loope
or
addl
mov
shrb
or
sub
and
lock
cmp
sbb
pop
inc
cmp
xor
xchg
inc
push
adc
dec
add
xchg
xor
call
inc
adc
adc
inc
pusha
mov
mov
pop
les
jbe
std
push
and
mov
sbb
incl
dec
or
ficompl
add
add
pushl
nop
addl
mov
or
mov
ret
mov
mov
adc
sbb
adc
incb
aam
jo
mul
inc
or
xor
cld
ss
sbb
addl
pusha
mov
out
in
cmc
insl
ljmp
fsubl
in
or
mov
repnz
mov
out
push
adc
xchg
cltd
dec
jp
ss
clc
and
xchg
les
call
add
jg
sub
push
cmp
test
mov
or
je
iret
notb
jmp
jne
rclb
sbb
movsl
pop
sbb
or
mov
xor
les
cmp
or
jo
sub
push
push
std
andb
ja
push
das
dec
arpl
mov
fdivrs
or
and
adc
and
cwtl
and
and
dec
inc
sbbb
and
pop
dec
pusha
popa
mov
movsb
add
addb
jg
loopne
andb
enter
dec
dec
pop
jle
lods
lock
xchg
sub
lods
adc
jg
cs
pop
jmp
in
push
js
push
inc
add
jmp
iret
ret
enter
pop
mov
and
sbb
pop
ljmp
jl
out
sub
mov
movb
xchg
push
sub
inc
xor
das
addb
and
je
incl
roll
fs
push
dec
xchg
jge
mov
and
adc
jl
mov
outsb
loop
nop
adc
cld
psubsw
xor
adc
clc
std
icebp
cs
or
adcl
mov
cli
clc
data16
pop
cmp
in
call
inc
xchg
lahf
mov
jle
mov
mov
outsl
popfw
and
sbbl
cltd
xchg
add
fs
mov
test
pushf
add
das
xchg
adc
sub
push
lods
inc
call
outsl
repnz
in
call
or
movb
jns
inc
jb
je
imul
loop
push
add
push
pop
cld
data16
popf
shrb
push
xor
call
or
add
add
mov
xor
jge
xor
adc
aam
push
pusha
push
aam
fisttpl
aas
or
xor
lds
fisubrl
data16
out
hlt
adc
ds
push
and
push
push
push
pusha
loopne
inc
push
add
mov
andb
and
jnp
or
add
cmp
jae
inc
test
mov
mov
adc
mov
or
gs
add
inc
xor
je
sub
cmp
cmp
inc
movb
jmp
push
outsb
mov
and
comiss
ljmp
rclb
stc
sbb
shrb
xor
push
mov
aas
loopne
mov
test
nop
dec
fisttps
xor
jge
mov
stc
stos
inc
mov
jnp
call
lahf
xchg
dec
xchg
or
mov
mov
and
inc
sbb
es
jecxz
std
jbe
ljmp
arpl
xchg
lea
jbe
inc
mov
std
ret
inc
inc
outsb
aaa
in
test
or
xor
ss
sbb
lea
mov
pop
orb
daa
es
push
pop
add
xchg
int3
add
je
stos
add
loopne
pushl
out
inc
scas
and
mov
pop
cmp
add
sub
sbb
sbb
test
xor
inc
fnstsw
adc
and
leave
cmp
fidivrs
enter
adc
jo
scas
imulb
jge
orl
cmp
push
pushf
mov
in
incl
sbb
shlb
inc
inc
or
adc
pop
mov
notl
adc
mov
adc
pop
lock
imul
ja
into
push
loop
out
jge
xor
pop
pop
test
dec
lret
scas
nop
cwtl
cmp
les
mov
std
insb
mov
dec
fsub
xchg
push
push
adcl
call
movsb
jae
mov
mov
cwtl
addb
cmp
adc
cmpsl
pop
mov
xor
and
push
jmp
xorl
add
call
cmpb
mov
in
mov
ret
jle
leave
or
ss
mov
clc
clc
pop
add
adc
adcl
add
dec
scas
xor
cmpsb
ret
add
sbb
pop
in
lea
cld
mov
movsb
cld
sbb
pop
int
test
xchg
lret
add
aam
loope
add
repnz
imul
push
cmp
in
stos
mov
js
jg
inc
addl
ss
inc
pop
push
cmc
test
pop
out
out
pusha
inc
mov
subb
testl
and
jne
inc
inc
int3
pop
dec
push
in
arpl
mov
push
mov
cmp
mov
sbb
negb
cmp
add
mov
mov
push
inc
clc
xor
sub
dec
dec
movsl
add
int3
or
add
and
and
outsl
cmpsb
loopne
cmp
mov
push
out
lea
outsl
clc
mov
lcall
xor
insb
js
lea
stos
inc
xchg
adc
test
inc
pop
shlb
js
in
clc
insb
lods
fbld
test
mov
in
clc
adc
jbe
mov
mov
mov
or
leave
inc
test
jg
lret
cmp
in
adcb
lahf
call
dec
sbb
adc
or
call
xor
insb
mov
cmpsb
mov
or
push
loopne
sbb
jbe
lods
push
or
mov
sbb
cmp
test
lds
sub
out
pop
andb
cmp
cmp
clc
or
mov
xchg
std
jae
sbb
lcall
call
sarl
scas
sub
or
inc
push
es
adc
adc
stos
add
test
fildl
mov
pop
mov
les
push
pushf
mov
sub
add
push
je
into
in
outsb
add
or
lahf
jl
scas
xchg
fnstsw
jne
imul
cwtl
push
test
push
arpl
sar
jg
stos
mov
inc
loope
in
mov
and
popa
push
mov
push
or
rclb
and
mov
popf
inc
sbb
and
inc
mulb
inc
and
xchg
dec
loope
adc
mov
sbb
push
and
mov
sbb
fs
lock
or
mov
dec
aaa
push
xor
imulb
push
adc
jge
mov
inc
and
xor
sub
push
inc
clc
cld
stc
loope
ds
mov
jle
xor
lea
push
sti
adc
add
mov
insb
sti
mov
xor
sub
dec
cmp
push
and
rcrl
push
js
rcrb
ud0
mov
cmp
notb
repnz
scas
push
push
sbb
dec
cwtl
js
add
add
in
inc
pop
or
ljmp
outsl
sbb
int3
adc
adc
rcrb
fimull
pop
inc
mov
sti
sub
pop
das
gs
std
cwtl
nopl
lock
cmp
loop
add
std
dec
adc
subb
pop
push
pusha
push
xor
aaa
mov
and
call
add
pop
sub
dec
and
pop
idiv
mov
push
sub
push
pop
test
lock
jmp
sbb
out
lock
add
cmp
pop
push
push
cmp
fwait
int3
dec
jl
add
push
mov
lret
push
call
enter
in
call
push
cmp
subb
push
shlb
les
sbb
add
data16
pop
pusha
xchg
jbe
mov
pop
testb
add
inc
pop
in
je,pt
jbe
imul
es
dec
test
jne
add
vmovsldup
shll
nop/reserved
aaa
cmpl
push
inc
mov
cmp
test
repz
cli
add
cld
pushl
or
mov
xor
ret
pop
cmp
pop
lcall
jmp
cli
repz
xor
sub
mov
xor
push
mov
xor
std
in
push
lcall
push
int3
or
inc
movsb
dec
mov
subl
add
lea
and
xor
push
imul
mov
nop
cmp
push
or
les
pop
sub
enter
push
dec
loopne
add
cld
push
mov
sbb
js
lods
fwait
or
daa
incl
es
insb
mov
dec
add
aaa
std
and
shlb
mov
dec
loopne
xchg
push
push
pop
mov
shlb
gs
lcall
cmp
clc
aas
cmpsl
lcall
mov
ficompl
add
sub
or
jo
in
sbb
sub
popf
push
pop
inc
divb
pop
xor
scas
push
add
nop
loop
mov
add
out
jne
stos
mov
inc
adcb
xor
sub
fs
adc
test
add
push
jg
sub
or
in
outsl
or
sub
stos
and
lret
mov
mov
xor
push
testb
sbb
cmp
scas
pushf
and
aad
aam
or
shrb
adc
andl
addl
inc
pop
test
ror
sbb
das
add
xor
arpl
loopne
adc
in
xchg
jp
das
adc
fcomp
or
js
add
roll
rorb
xchg
push
lcall
pushf
cmp
inc
push
pop
mov
or
or
adc
inc
cli
mov
and
fcmovnbe
popf
mov
aaa
adc
outsb
pop
or
stos
movl
lods
xor
add
or
cwtl
inc
mov
xor
call
sub
out
cmp
mov
test
jle
incb
inc
mov
and
into
loope
ljmp
or
pushf
push
and
push
and
loopne
sub
jae
cs
cmp
or
push
adc
rolb
inc
popf
add
lcall
cmp
inc
inc
push
dec
loope
xchg
or
loop
add
arpl
in
pop
and
incl
adc
or
add
push
mov
xorb
iret
mov
xor
out
aam
adc
mov
push
outsl
mov
cmp
leave
std
shrl
sbb
shlb
jg
jno
icebp
mov
fldlg2
mov
adc
adc
or
adc
sub
add
incl
test
xchg
sub
jge
clc
xorps
cmp
sbb
mov
sbb
test
xor
push
mov
mov
pop
or
shlb
xor
lret
push
push
sti
dec
rorb
popf
or
or
enter
mov
push
xchg
and
mov
dec
popa
mov
pusha
pop
incl
out
fadd
popf
out
sub
jle
je
xor
cli
mov
push
inc
dec
addw
dec
nop
gs
lret
add
add
or
int3
cld
imul
popf
xor
adc
adc
push
shlb
imul
or
add
into
mov
adc
shlb
test
mov
or
adc
test
inc
add
mov
lret
jb
dec
mov
add
aam
sub
cld
in
jge
mov
call
inc
test
inc
leave
jbe
adc
orl
mov
jb
aam
adc
jmp
call
test
fs
jge
mov
fcomp
ds
aaa
shl
into
lcall
adc
xchg
inc
addr16
add
bound
dec
hlt
lock
push
or
adc
out
incl
lahf
je
cmpb
out
adc
sbb
xor
inc
pop
add
mov
mov
xor
adc
in
add
push
cmpl
mulb
or
jg
cmp
addr16
mov
mov
cmp
scas
pop
push
jge
jmp
data16
divb
add
mov
push
filds
dec
xlat
cmp
jb
add
daa
or
inc
push
pushl
dec
xor
movlps
jecxz
push
aam
iret
shll
fcomps
sub
mov
js
ret
xor
mov
and
nop
mov
jge
fs
adc
adc
xor
xor
xchg
fdivrp
dec
mov
fimuls
push
scas
out
sub
push
mov
in
imul
cwtl
push
inc
pusha
mov
add
xor
adc
mov
gs
adc
sar
je
loop
dec
cmp
test
push
call
lods
mov
and
lcall
xchg
test
je
test
aam
outsl
fsqrt
cmp
pop
test
loop
int
sbb
int3
nop
rdpmc
inc
in
fs
lea
and
pop
push
ret
push
sbb
sarb
decb
loope
mov
ret
inc
push
sar
in
jge
out
loop
je
inc
add
adc
mov
fimuls
push
ret
iret
sbb
popl
lret
jl
mov
add
shl
testb
and
mov
fadds
rolb
and
xor
pop
mov
lret
arpl
pop
in
mov
sbb
lea
inc
test
add
sub
lret
mov
mov
jg
fdivl
add
mov
pop
sub
int3
sub
push
rcrb
aam
sahf
leave
adc
add
add
daa
rolb
mov
push
outsb
ljmp
icebp
lock
je
push
jle
and
push
mov
imul
or
adc
dec
mov
popa
call
mov
lods
test
dec
rorb
mov
xor
jp
jo
ret
out
and
add
pushf
pop
fdivrs
lahf
clc
mov
xor
jae
sahf
and
sbb
lea
loop
ss
lods
lea
inc
mov
push
bound
xor
and
imul
aaa
add
shrb
aad
cli
sbb
pop
js
dec
pop
andb
pop
jnp
decb
shl
fists
sarb
mov
or
cmc
insb
aaa
loop
dec
orb
ret
jne
out
shl
sar
cld
inc
mov
adc
add
or
pop
test
addl
push
decb
call
xor
inc
mov
pop
or
xor
lods
ret
ljmp
add
ljmp
add
push
dec
cld
outsb
test
les
hlt
jbe
jmp
aam
mov
aaa
in
push
jmp
jnp
dec
mov
adc
mov
xchg
mov
mov
and
jl
inc
nop
stos
xor
jo
pop
lea
xor
xor
testb
mov
fistl
aaa
fdivrp
and
inc
cmp
dec
and
and
ljmp
mov
and
push
mov
mov
test
adcl
aad
test
aad
pop
dec
pop
sbb
pop
mov
test
jne
or
ljmp
and
add
and
bound
clc
add
aaa
mov
test
lods
sub
mov
or
sub
mov
lret
rcll
push
push
fadds
xor
scas
lcall
mov
stos
add
and
sbb
mov
out
and
xchg
push
aam
cmp
lahf
sbb
cmp
adc
jg
int3
push
adc
xor
push
push
pop
push
or
fnsave
enter
loope
in
test
aas
test
jne
in
pop
inc
test
mov
adcb
mov
push
inc
jae
or
in
sub
cmp
mov
ret
fldl
mov
sbb
cmp
mov
dec
es
xchg
jmp
int3
push
add
sbb
push
inc
clc
inc
xor
push
cmp
mov
sbb
incb
sahf
xchg
inc
push
shll
inc
in
jle
xchg
or
sarl
inc
inc
scas
mov
inc
mov
popa
pop
test
fdivrl
xor
mov
rep
out
ljmp
dec
rol
mov
ljmp
add
adc
mov
pushl
jl
insb
ds
mov
xchg
mov
orl
int3
push
inc
push
push
cwtl
das
push
outsl
ret
cmp
cmpb
mov
add
test
stos
sbb
jg
sub
test
mov
push
sbb
test
pop
mov
push
xchg
inc
xor
xor
je
inc
inc
fldt
into
outsb
lea
je
jns
je
loopne
loopne
add
fsubl
or
push
stc
pop
xor
das
les
cld
mov
jmp
mov
sub
nop
jle
inc
mov
push
add
push
movsl
test
push
mov
mov
adc
leave
mov
add
cli
test
sub
lock
lods
push
inc
and
mov
add
adc
ss
sbb
and
and
sti
xchg
push
loopne,pt
dec
jb
nop
inc
ja
inc
rcrb
sub
inc
rcr
push
or
dec
jge
pushl
push
mov
jne
add
icebp
xchg
adc
or
je
push
repnz
and
cs
or
push
and
testl
mov
jge
es
loopne
movb
sub
mov
push
push
add
sarb
push
inc
int3
mov
jbe
dec
in
inc
pop
loop
aam
lea
mov
mov
test
ret
nop
xor
push
cmp
pop
xor
push
gs
pop
lret
mov
mov
in
in
sbb
in
cwtl
xchg
call
je
mov
dec
pop
add
and
movl
add
dec
adc
jmp
adc
xchg
nop
rcrb
sbb
faddl
rcll
lods
scas
fnstenv
jg
cld
movb
insb
cmp
loope
or
pop
xor
mov
out
adc
and
or
rcll
push
sbb
push
and
fwait
adc
std
jne
xorl
aam
movsl
jnp
adc
jge
rorb
add
push
push
xchg
push
imul
fs
jecxz
out
test
jne
leave
jae
lea
jmp
inc
jne
xor
sbb
stos
std
ret
cld
mov
lock
std
mov
adc
xchg
add
cmp
cli
xor
sti
cmp
adc
div
xor
iret
lods
adc
or
mov
mov
jns
repnz
fdivp
addr16
sub
pop
sbb
pop
lods
push
lcall
test
xchg
or
lock
mov
mov
pusha
xor
lock
mov
pushf
xor
into
cmpsb
and
or
int3
jno
aas
out
adc
add
repnz
pop
pusha
add
movsl
arpl
mov
ljmp
dec
inc
fisubs
jb
push
rorb
push
data16
scas
push
mov
xor
add
add
mov
es
mov
pushf
cmc
pop
pop
cld
dec
mov
into
and
outsb
sbb
out
adc
and
inc
sti
push
lods
push
xor
inc
adc
les
pop
bsf
cld
filds
jbe
ds
idivb
pusha
mov
orl
into
adc
es
cmp
pop
jo
sub
data16
int3
clc
xchg
mov
mov
push
cmp
jo
pushf
jbe
xor
clc
icebp
mov
sub
ret
add
es
pop
add
into
push
mov
icebp
push
or
loopne
pop
push
testb
or
push
loopne
mov
push
jmp
cld
hlt
test
aam
xchg
mov
inc
push
addb
adc
mov
push
stos
push
dec
lcall
cmp
adc
xchg
push
sahf
pop
xchg
sahf
inc
push
sarl
adc
fsubr
in
rcrb
push
mov
add
or
in
rorb
das
jb
sarb
or
add
lea
xor
out
movsl
iret
lahf
das
clc
xchg
test
pop
testb
cmp
ret
mov
out
xorb
push
sbb
andb
in
sti
aad
std
addb
adc
cmp
out
cli
cs
incl
sub
jbe
dec
mov
dec
mov
sbb
mov
adc
push
lcall
ds
xor
jl
cmp
sub
adc
shl
xor
adc
fists
ss
adc
dec
sub
jb
cmp
in
add
test
mov
adc
mov
mov
fs
movsb
pop
push
jb
sahf
lock
add
ficompl
int3
add
loopne
repnz
add
ret
pop
cmpsb
add
arpl
scas
push
add
mov
subl
stos
dec
rolb
push
cld
inc
int
push
sbb
push
push
pop
mov
repz
mov
mov
mov
mov
adc
dec
in
gs
xchg
mov
lcall
inc
insb
push
xchg
sbb
inc
mov
and
jne
movsl
adc
add
les
mov
pop
dec
lcall
sbb
cld
mov
cmp
dec
pop
clc
ja
int3
lcall
xor
andl
and
sub
xchg
les
xor
mov
loop
fildll
call
adc
cltd
pop
xor
dec
test
sti
movsb
mov
ret
call
aad
mov
mov
mov
or
inc
and
mov
xchg
pop
js
sti
loop
jmp
jp
and
mov
shr
add
or
fwait
mov
in
lods
add
mov
inc
call
cmp
pop
or
orb
testb
test
dec
idivb
sbbl
fs
in
sbb
jl
mov
inc
bound
push
mov
add
mov
sbb
or
jle
lret
fisubs
sub
mov
push
cmp
cmp
lds
mov
sti
xorb
js
mov
ret
jge
pop
mov
aam
sbbl
scas
negb
stos
dec
sbb
sbb
fs
movsl
mov
xor
sub
lss
testb
clc
xchg
pop
hlt
loopne
jl
push
mov
inc
push
cwtl
xlat
pop
sbb
xor
push
sti
push
push
imul
push
inc
push
leave
int3
pop
mov
cld
dec
fidivl
push
lea
mov
add
imul
xchg
xor
xchg
pop
mov
testb
sub
xor
or
push
or
rorl
push
mov
sbb
je
adc
mov
sbb
popa
mov
daa
push
fadds
test
icebp
push
orl
inc
add
and
xor
aam
std
lea
add
loop
push
lret
fs
jl
push
xchg
cwtl
test
aam
sub
stos
dec
cmp
push
push
jo
or
pusha
and
pop
inc
adc
push
sbb
orl
fidivs
aaa
mov
cmpl
mov
xchg
add
xor
imul
call
pusha
dec
or
pop
test
test
insb
inc
fiadds
sbb
or
mov
mov
add
adc
add
cmp
cmp
sbb
mov
inc
rcll
adc
inc
xor
and
outsb
mov
ret
lock
add
nop
rolb
orb
sar
scas
mov
push
pop
cmp
into
movsb
mov
and
sub
aam
and
fisubl
push
cmp
cmp
inc
ja
add
sub
mov
jmp
arpl
mov
add
xor
mov
dec
outsl
testb
jmp
push
subl
mov
inc
inc
xchg
push
push
repnz
or
pop
mov
xchg
sbb
ret
and
add
es
cli
pop
mov
xchg
ret
cld
fadd
sbb
psubb
sbbl
xor
push
jle
sub
out
inc
and
movl
adc
xor
sbb
push
add
lock
outsb
rorb
lahf
clc
in
addl
mov
or
mov
into
push
mov
pop
or
cltd
cli
lock
stos
or
arpl
ljmp
loope
call
fwait
ret
mov
xchg
jbe
push
add
cmpsb
loopne
es
testl
das
fs
in
loopne
call
mov
push
les
mov
cld
lcall
sbb
lock
subl
mov
jbe
aaa
mov
dec
cld
or
sbb
push
add
add
push
pop
add
adc
fwait
mov
sahf
jp
ljmp
xor
pop
cs
movsl
dec
loopne
mov
inc
mov
jle
hlt
scas
dec
add
mov
hlt
int3
inc
mov
rcrb
lcall
sub
call
cmp
xor
mov
pop
call
rorb
test
or
add
xchg
int
adc
clc
lods
js
inc
aas
in
fwait
cli
ret
push
inc
push
push
cld
pop
and
dec
xchg
cmc
lret
and
jb
pop
adc
les
add
xchg
pop
in
xor
dec
mov
hlt
rep
adc
out
add
sarw
outsl
pop
push
xor
mov
xchg
pop
jl
call
adcb
dec
push
adc
and
sbb
add
nop
lock
movsb
mov
adc
mov
inc
movb
insb
adc
fnsave
fsubrl
ret
or
push
hlt
mov
mov
and
rcrb
cmp
in
cli
sbb
push
push
adc
push
imulb
adc
adc
int3
test
gs
ficoms
loopne
mov
pushf
icebp
mov
in
mov
adc
test
xor
xor
ds
out
sub
push
lret
clc
push
add
xchg
test
mov
or
aad
clc
or
mov
mov
lock
xor
mov
cmp
cli
add
cmc
aam
sub
push
pop
mov
xor
std
fmuls
out
push
add
push
in
lock
mov
inc
shrb
sti
hlt
add
aas
call
jg
push
inc
test
push
gs
clc
mov
incb
mov
call
adc
outsl
mov
xor
push
in
roll
push
adc
inc
mov
addb
cli
xchg
orb
hlt
mov
inc
mov
sbb
sbb
lahf
add
xor
daa
sub
cmp
jp
hlt
outsb
unpcklps
clc
cmp
xor
and
hlt
sub
sbb
add
dec
and
push
jo
inc
lahf
dec
push
push
jl
rorb
pop
or
sub
inc
push
sbb
inc
fbstp
mov
push
mov
in
xor
repnz
adc
es
repnz
jl
inc
xor
cli
adc
pop
xorb
sbb
or
add
or
sti
or
mov
xchg
pop
hlt
mov
jno
mov
inc
mov
mov
push
jns
in
in
testl
daa
jle
sub
or
sbb
or
adc
mov
ficompl
pop
xor
fwait
lcall
clc
adc
mov
std
je
fldl2e
clc
idiv
add
fcoms
mov
addb
push
notb
inc
popa
gs
dec
ret
xchg
rorb
cmc
mov
movsb
incb
mov
push
stos
clc
inc
jmp
test
dec
dec
push
sti
xchg
cs
or
shlb
mov
push
or
in
mov
push
lret
pop
gs
out
adc
pop
sub
ljmp
sub
xchg
jbe
hlt
inc
test
loopne
mov
dec
stos
test
jb
add
xor
adc
jp
push
aaa
mov
jl
mov
ret
pop
loopne
adcb
jbe
dec
mov
int3
sub
pop
out
in
cli
pushl
or
jb
in
push
fildl
sbb
inc
fisubl
dec
or
and
ja
test
int3
mov
push
dec
sub
xchg
mov
das
xlat
aas
and
nop
cmp
inc
mov
loopne
stos
adc
data16
or
fs
push
mov
and
sahf
jo
bound
ds
lock
aaa
mov
pusha
jo
je
push
add
inc
dec
nop
das
mov
inc
insb
mov
jae
mov
out
pop
cld
ds
pop
loopne
add
cwtl
push
data16
pop
incl
loop
sbb
cwtl
sub
inc
pop
push
movb
in
mov
pop
add
adc
std
call
push
repnz
add
push
add
sar
inc
negb
xchg
fdivs
call
test
mov
loopne
pop
jbe
mov
push
cmp
das
push
add
mov
xor
data16
jmp
ss
push
inc
fcoms
notb
dec
dec
add
xor
mov
jo
pop
cld
inc
ljmp
and
fwait
or
sub
push
imul
add
mov
testb
xchg
inc
sbb
leave
out
add
xor
decl
push
decb
outsl
clc
mov
hlt
mov
xor
push
imul
pop
jo
add
mov
jae
pop
mov
lods
mov
test
test
and
cmc
and
sub
fcomps
push
xchg
or
hlt
cs
mov
xlat
mov
in
xchg
xorl
and
add
adc
jbe
aad
pop
pop
or
sub
add
dec
push
cmp
mov
xchg
cmp
clc
mov
or
ds
dec
jmp
enter
push
pop
push
mov
ss
push
push
inc
mov
mov
inc
cmp
cltd
rorb
sbb
pop
mov
push
clc
cld
pop
loopne
ss
inc
or
cli
les
cmp
insb
xor
aad
sub
mov
cmpsl
test
xchg
adc
push
rol
jl
test
mov
lock
dec
std
or
mov
movb
cmp
jnp
mov
pop
cmp
inc
imull
js
cmp
push
aas
pushf
jmp
sbb
xchg
dec
add
add
inc
mov
aad
sub
shll
je
xchg
push
sahf
push
add
mov
enter
xchg
outsb
lcall
orb
andb
cmp
int3
sub
jnp
mov
pop
add
rcrl
mov
xor
sbb
stos
add
sub
mov
ret
lcall
cmp
cmp
sub
sbb
cli
scas
cmp
adc
popa
int3
lea
scas
pminsw
push
add
inc
xor
pop
ss
pop
fnstcw
add
lock
jle
inc
mov
sub
pop
dec
xor
mov
dec
jmp
test
call
scas
test
jb
test
or
cmc
outsl
andb
mov
lret
push
es
adc
mov
dec
aad
orb
pop
cmp
pusha
push
jl
stos
add
adc
clc
mov
push
pop
xchg
nop
inc
cmp
es
add
outsb
mov
aad
mov
lock
jl
mov
add
pop
mov
xor
xchg
andb
jp
add
js
movl
shll
jle
add
inc
pop
cmp
xchg
inc
fiadds
mov
inc
pop
sub
insb
pop
test
inc
xchg
mov
in
adc
xchg
jp
mov
jl
and
push
scas
sbb
ds
sbb
lret
xchg
mov
pop
lods
fs
stos
clc
inc
in
add
lcall
lcall
inc
or
in
lea
mov
push
jmp
loopne
cmc
or
or
loopne
add
add
cmp
push
sbb
sarb
sub
mov
xor
cmp
pop
mov
lret
adc
and
sbb
xchg
leave
mov
adc
or
sbb
lock
faddp
xchg
stos
cmc
cwtl
sahf
mov
jbe
jp
add
pop
fadd
in
popa
and
sub
bound
cld
movsb
test
or
cmp
test
xchg
inc
cld
mov
in
jg
jp
or
dec
test
mov
jecxz
lcall
or
add
lock
rcrb
cmp
xorb
ficoml
pop
push
dec
mov
je
in
out
adc
adc
je
pop
mov
cs
mov
test
leave
mov
push
cli
loope
mov
out
adc
push
daa
push
mov
aas
outsb
imul
xchg
add
sbb
mov
cmp
dec
or
icebp
mov
into
mov
out
hlt
sub
cmp
mov
push
push
lods
and
outsb
xchg
jmp
sub
movsb
add
sbb
push
sbb
mov
outsb
test
cmp
loop,pn
call
pop
out
push
rolb
sbb
mov
or
fcmovb
cmc
das
sbb
inc
filds
jl
push
cmp
pslld
inc
arpl
ss
cld
addb
lea
jb
jne
pusha
inc
xchg
into
mov
js
cs
loopne
mov
out
or
dec
or
and
rcr
jle
dec
loope
call
xor
and
jp
inc
push
lock
cmp
jl
aam
sti
fimull
loope
mov
push
shl
lock
loopne
dec
mov
jns
gs
loopne
inc
fmull
push
adc
mov
xor
cld
jb
adc
popf
shrb
sarb
testb
adc
push
sbb
sbb
xor
cltd
xor
and
inc
js
push
sbb
add
jne
test
dec
mov
push
aaa
adc
jg
dec
ljmp
dec
dec
movsl
mov
les
dec
and
cld
das
xchg
shrb
push
push
pop
and
jne
test
xchg
lock
add
stc
xchg
sbb
stos
dec
dec
push
loop
js
test
add
lock
push
clc
lock
je
rorl
shlb
pop
cmpsb
mov
subl
mov
int3
leave
rolb
mov
dec
fdivs
push
div
movswl
decb
jo
int3
mov
mov
fistpl
or
insb
and
gs
dec
sub
inc
cmp
jae
les
cmpsb
ret
jp
sarb
pop
xchg
loope
inc
fadd
and
sub
decl
jb
jo
andb
sti
fbld
pop
push
and
xor
mov
test
movsb
push
inc
sbb
sbb
xchg
mov
add
push
cld
or
add
dec
adc
mov
pop
push
pushf
mov
pop
in
fs
adc
inc
je
sub
and
stos
inc
inc
add
pop
sub
pusha
cmc
xor
loopne
adc
out
insb
sbb
inc
pop
shlb
jle
or
xor
add
push
addb
and
lcall
mov
lods
add
rorb
imul
mov
sbb
and
cmp
mov
and
in
mov
pop
push
hlt
push
or
loopne
int3
test
nop
in
dec
sbb
sahf
adc
test
aas
lods
faddl
bswap
pushl
negl
les
popa
in
int
ret
cmp
push
jmp
in
add
cmovg
nop
mov
pop
adcb
jb
int
fsubr
dec
push
or
dec
cld
pop
mov
arpl
jae
shlb
mov
rclb
sub
orb
and
cs
mov
fimuls
xor
xor
add
push
rclb
ljmp
adc
aam
ds
neg
push
inc
dec
int3
into
in
jmp
or
fsts
jb
imul
dec
cli
and
mov
clc
cwtl
sahf
test
inc
mov
dec
in
push
push
mov
enter
loope
adc
dec
arpl
push
cld
fdivrl
mov
andl
aam
pop
xchg
inc
adc
jae
lret
add
adc
daa
sbb
imul
data16
call
sub
cmpsb
ds
mov
mov
xchg
cmp
mov
movsb
or
aaa
stos
dec
jo
ljmp
ljmp
add
sar
rolb
ret
xor
inc
and
cmp
andl
sub
cmc
test
push
mov
jecxz
cmpl
mov
je
test
dec
in
and
sbbb
jnp
sbb
mov
jne
and
mov
fidivrs
or
jbe
jbe
enter
mov
or
shlb
add
inc
cmp
enter
mov
jo
lods
hlt
add
cmp
mov
or
add
rolb
and
add
cmp
sbb
das
mov
push
lods
adc
and
mov
add
pop
imulb
outsb
add
and
add
rclb
cmp
mov
int3
shl
fsubs
push
pop
stos
xchg
pop
xor
inc
shlb
add
clc
pop
in
ja
fdivl
pushf
dec
psubb
outsb
pushf
xchg
add
adc
std
or
inc
and
aad
or
js
adc
je
test
cmp
and
lcall
mov
push
cwtl
sti
jo
imul
or
insb
sub
push
jle
dec
xor
jmp
or
push
sbb
add
adc
add
pushf
pop
mov
xor
in
jbe
push
lcall
mov
adc
iret
rol
in
inc
add
mov
test
mov
leave
sub
cmp
push
or
popf
pop
sbb
inc
shl
pop
mov
shll
or
or
sub
cmc
adcb
mov
ljmp
or
mov
or
cmp
and
fcomps
lahf
or
rorb
mov
mov
decl
fcmovne
imul
adc
je
xchg
xchg
inc
or
test
lods
mov
dec
cmp
cmp
shlb
push
jg
les
mov
dec
pushf
loope
dec
ret
popf
cmpl
test
xor
nop
dec
xchg
xchg
xchg
ficomps
fisttpl
push
sarb
pop
mov
xor
or
mov
adc
xchg
cltd
pop
inc
xorl
je
lret
mov
movsl
sub
sub
loop
mov
xchg
pop
cmp
ret
jbe
cmp
cltd
pop
xchg
jl
inc
cvttps2pi
movsl
mov
int3
dec
add
sbb
sbb
shrb
gs
jge
fldenv
sub
dec
mov
clc
jne
repnz
cmp
test
gs
or
cmc
fsubrs
popa
or
mov
lret
push
push
mov
mov
mov
push
jle
ret
and
adc
push
add
mov
cmpl
inc
push
sub
push
or
mov
test
add
and
adc
sbb
fmuls
mov
jne
pop
add
lahf
rolb
je
pop
push
cmpsl
or
mul
jl
inc
and
fbstp
pop
incl
jge
les
pop
aaa
js
sti
pop
push
inc
test
and
stos
or
out
inc
jb
jne
cmpsb
mov
pop
mov
xor
call
or
or
sbb
xor
dec
fidivs
dec
sbb
sub
sbb
xor
or
pop
add
add
inc
mov
or
adc
inc
sub
mov
enter
xor
movsl
inc
or
xor
pushf
js
inc
test
cmp
jae
jo
enter
scas
or
sahf
movsb
fstps
scas
add
mov
xor
inc
inc
rolb
and
or
push
xchg
fidivrl
cli
scas
scas
js
rol
jns
test
fistps
mov
push
insb
repnz
jmp
loop
mov
std
aas
dec
pop
adc
pop
repz
test
gs
mov
adcb
xchg
inc
jae
enter
test
test
xor
outsb
mov
insl
imul
xor
mov
je
push
enter
in
pop
test
pushf
pop
push
mov
adc
movsb
push
push
test
mov
pushf
push
or
js
mov
out
adc
stos
test
rclb
xor
cmp
or
pop
jle
call
or
jnp
dec
loopne
sbb
and
mov
push
adcl
addb
lock
xchg
mov
insb
aaa
movsl
or
test
inc
push
push
push
or
mov
hlt
xchg
inc
sar
or
cmpsl
mov
sub
pusha
xchg
cld
xor
rolb
or
je
or
push
mov
lock
aam
mov
jle
pop
fiadds
push
test
stos
add
jmp
and
or
sbb
stos
jbe
dec
outsl
fisttps
sahf
mov
cld
sub
aas
in
dec
mov
sub
add
andl
fs
aam
ffree
jmp
out
xor
mov
lahf
les
in
adc
ret
mov
iret
add
and
lock
fsubs
xlat
cmpsb
sti
testl
test
push
pop
enter
or
scas
fldcw
clc
inc
loope
adc
ret
loopne
mov
jle
and
push
inc
fstpl
mov
xor
cld
pop
aam
or
pop
insb
jmp
test
jmp
mov
inc
je
insb
stos
add
ds
test
fisubrl
add
fistps
outsb
xor
jne
push
loopne
mov
mov
sbb
pop
int3
pop
nop
xchg
or
inc
std
inc
dec
push
inc
pop
push
push
pop
jno
lods
push
inc
mov
jne
sarl
add
test
arpl
ret
icebp
push
lret
lock
mov
and
lahf
and
xor
loope
jnp
or
inc
lea
vandnps
mov
fiaddl
shll
mov
into
adc
lea
add
pushf
pop
jl
or
test
cwtl
test
fs
mov
insb
movsb
inc
fiaddl
adc
or
test
push
insb
cmp
imul
mov
mov
sbb
add
repz
rclb
mov
xor
xor
cwtl
push
push
sti
lahf
mov
mov
std
lea
add
inc
cmc
dec
xor
or
pop
and
mov
mov
adc
sti
lret
push
push
adc
je
add
or
int
xchg
jl,pn
sbb
mov
mov
outsb
mov
jno
pop
mov
push
xor
fiaddl
mov
jg
and
cld
mov
mov
xlat
in
cmp
ljmp
cli
shll
add
dec
and
xchg
mov
jbe
mov
or
ret
or
jae
jl
sar
ret
sarb
sti
mov
push
jb
gs
aam
push
aam
lea
mov
std
mov
or
loopne
mov
or
xor
push
movsb
add
je
outsl
pop
hlt
push
rclb
lods
jmp
add
and
loop
pop
test
dec
ja
dec
fsub
ret
mov
pop
add
loope
movsl
dec
cmpsb
add
xor
fdivs
ret
or
in
ljmp
jle
loopne
jge
pop
pop
push
inc
adc
pop
adc
out
adc
xlat
imulb
xchg
add
fidivrl
xchg
ret
xor
fwait
jg
cmp
add
jne
push
jb
or
push
push
push
pop
jge
add
add
lret
inc
popa
xor
and
pop
and
pusha
arpl
in
dec
jle
minps
insl
cmp
push
lods
mov
adc
dec
push
inc
mov
add
mov
pop
testl
xor
shl
jb
lcall
int3
dec
lea
sub
jmp
ret
std
push
jne
bswap
in
adc
adc
mov
push
outsl
mov
addb
inc
xor
push
and
or
aad
pop
adc
push
add
aam
dec
jg
xchg
mov
cmp
cmp
mov
and
push
inc
fwait
pusha
sub
dec
pop
dec
inc
sbbb
xchg
rcrl
push
lcall
stc
adc
xor
call
scas
mov
mov
inc
sbbb
clc
int3
pop
cmp
mov
or
mov
adc
sbb
sub
insl
in
sbb
iret
les
mov
sbb
shrb
sarl
lret
sub
push
add
push
icebp
mov
dec
frstor
call
or
mov
push
ss
push
jp
jnp
rorl
insb
jp
jl
rclb
push
fdivl
dec
shlb
sbb
adc
cmp
add
jg
mov
or
sbb
je
xor
pop
cld
in
int
xchg
mov
cld
call
cmp
inc
inc
pushl
jne
call
incl
jmp
cmp
inc
sbb
cmpsl
xorl
push
sub
add
outsb
mov
sub
pop
mov
fwait
sbb
jo
adc
sbb
xchg
mov
stos
xchg
inc
push
dec
loop
xor
xchg
lods
jne
loopne
rcrb
mov
mov
jecxz
cli
xchg
arpl
mov
dec
mov
dec
cwtl
mov
fidivl
insb
push
int3
icebp
add
push
test
stc
addl
lods
mov
mov
aaa
mov
icebp
add
fs
sti
outsl
ret
push
decb
add
cmp
mov
std
das
inc
push
adc
mov
mov
mov
mov
mov
loop
inc
and
pop
mov
pop
outsl
stc
pop
push
cmc
xor
or
or
inc
data16
je
inc
mov
inc
push
mov
std
or
and
jnp
clc
fnstsw
repz
push
sar
call
rorb
outsl
aam
enter
ljmp
subl
add
mov
out
mov
sub
movnti
out
hlt
loopne
inc
loope
adc
adc
mov
jmp
or
popa
lea
mov
sub
inc
add
push
sbb
out
push
je
add
inc
movb
jmp
xor
cmp
js
mov
ficoms
push
sbb
inc
or
loope
and
xor
inc
pop
or
in
jbe
pop
das
je
fcoms
test
stc
inc
sbb
or
movsb
push
ret
cmp
push
inc
aad
aam
inc
xorb
xor
adc
popa
subl
test
mov
mov
mov
shl
test
nop
js
and
movsb
cli
ss
les
mov
pop
jno
push
xchg
push
lds
jl
rcrb
cli
fbstp
or
adc
add
push
jne
sbb
rcrb
pop
push
cs
pusha
mov
xchg
add
enter
xchg
es
xor
jg
pop
jae
into
and
add
cmp
rcll
push
fs
scas
ja
int
out
cmp
js
dec
cmp
inc
ret
lods
add
imul
lcall
mov
aam
push
orb
xor
cwtl
rcr
adc
fnsave
jp
and
pop
inc
in
xor
pop
addb
mov
fs
jne
add
add
inc
loopne
sbb
ret
pop
mov
pusha
fisubl
sub
rcl
testb
je
cmp
add
pop
push
incb
ret
xor
ljmp
enter
push
aam
push
dec
mov
add
imul
rolb
cld
mov
ret
movsl
add
push
sub
cs
inc
fistl
nop
push
or
push
pop
dec
push
std
xchg
loopne
lcall
cli
test
daa
inc
add
mov
lods
sbbb
inc
cmpsb
mov
add
cld
pop
mov
mov
je
ljmp
scas
add
mov
push
mov
inc
mov
test
in
js
cli
mov
mov
aam
add
or
inc
mov
inc
mov
ret
pop
ljmp
outsl
clc
push
mov
loope
data16
test
aaa
jb
scas
sbb
pop
fs
adc
and
and
in
hlt
push
adc
cmp
bound
add
popf
add
test
jle
mov
outsb
mov
inc
fs
mov
movsb
jle
hlt
jbe
cmp
push
cmp
fimuls
movl
repnz
loope
aam
dec
mov
outsl
test
push
test
in
inc
mov
cld
or
insb
push
hlt
or
push
mov
outsb
loop
mov
bnd
cld
jmp
push
push
scas
pop
add
and
outsb
push
mov
mov
dec
xchg
xchg
adc
ja
inc
or
hlt
sbb
pop
add
cld
call
mov
loopne
mov
rolb
or
in
push
lcall
rclb
icebp
ja
sub
push
push
cmpsb
cld
aas
mov
dec
jp
aaa
adc
cmp
call
mov
sub
outsb
testb
daa
movsl
mov
or
jmp
push
inc
leave
inc
mov
cs
dec
pop
test
sbb
inc
loopne
pop
mov
sbb
les
lods
adc
pushl
cmp
cld
scas
sub
sub
and
add
mov
inc
lock
mov
test
mov
imul
push
ret
incl
orl
sahf
add
jl
add
lret
add
and
sbb
loope
adc
or
divb
loop
inc
enter
cmp
fwait
inc
jnp
add
repnz
add
insl
es
sahf
mov
mov
test
adc
stos
pushf
xchg
roll
loop
pusha
loope
loope
repnz
add
or
adc
outsl
test
pop
cli
movl
dec
fadds
clc
fbld
jecxz
xor
xor
xlat
jne
inc
push
and
or
subl
sbb
addb
adc
into
mov
inc
jl
mov
xor
push
rcrb
shll
add
sahf
mov
adc
call
mov
push
out
rclb
xor
int3
pop
xor
and
mov
xchg
mov
push
cmp
dec
addl
test
push
rclb
xor
in
and
gs
enter
add
and
fisubs
loop
xor
xor
pushf
sbb
gs
fs
adcl
adc
retw
adc
cmp
xor
xor
lock
stc
shlb
test
adc
rorb
aam
and
test
add
nop
xor
ret
loop
push
popaw
mov
push
out
lret
adc
fsubrl
and
loopne
lock
aad
and
jecxz,pn
icebp
int3
je
ljmp
test
lcall
test
inc
push
sbb
lcall
mov
pop
lods
cmp
xchg
jae
push
sbb
test
lret
scas
in
lea
fnstsw
call
xlat
pusha
in
aad
addb
jae
les
mov
inc
call
xor
les
shlb
ja
pop
mov
ds
push
adc
out
mov
dec
inc
dec
call
jmp
pushf
adc
lock
hlt
das
stos
add
adc
push
jcxz
dec
jl
data16
in
add
outsl
xchg
sub
dec
xor
lret
mov
mov
mov
hlt
lea
jb
mov
mov
and
xchg
fldt
adc
ljmp
mov
lock
sub
adc
jle
add
sbb
outsl
pop
int3
pop
mov
stos
add
mov
call
imulb
adc
lcall
mov
xor
movb
inc
dec
adcb
fisubs
les
inc
aad
decl
movsb
push
mov
push
je
pop
shrb
lods
mov
push
out
mov
ja
shll
sbb
fadds
inc
dec
push
push
mov
cmp
fdivr
jg
cli
mov
ds
mov
xor
jg
mov
test
pop
dec
addb
fistl
call
call
mov
or
pop
jo
outsl
mov
inc
gs
dec
cld
mov
clc
insl
gs
cwtl
inc
and
xor
incb
or
std
push
cmp
test
jno
cmp
or
add
scas
push
sub
xlat
mov
jge
lods
add
and
and
icebp
clc
int3
or
adc
shlb
jo
add
add
hlt
adc
call
add
sub
cmp
arpl
je
mov
aam
xchg
nop
inc
fistl
pop
jno
pop
sar
out
andb
mov
sahf
xchg
and
and
aas
add
push
aam
mov
nop
and
adc
adc
stos
flds
mov
inc
fdivl
ss
push
mov
and
je
pop
push
cmc
clc
jmp
mov
sbb
push
push
lcall
mov
xor
xchg
xor
scas
or
call
jmp
sub
rclb
sub
or
int
ja
imul
cmp
ret
dec
test
xor
push
push
push
ljmp
add
decb
and
push
pop
push
dec
mov
sbb
add
test
pushf
or
inc
cmp
enter
shlb
push
js
rolb
add
push
setl
mov
and
add
inc
pusha
dec
inc
mov
cmp
imul
push
xor
je
mov
fisttpll
adc
inc
adc
nop
ret
add
mov
cmpsl
push
shlb
dec
add
mov
inc
mov
daa
inc
cmp
loop
popl
sbb
wbinvd
loop
or
add
xor
sbb
decl
insb
jecxz
sbb
mov
cmc
cmp
inc
std
movb
inc
add
mov
push
cmp
sub
fs
xchg
andb
push
inc
sbb
sbb
add
loopne
push
jl
sbb
lods
orb
add
cmp
push
mov
das
push
test
pushf
adc
je
xor
xchg
je
add
xchg
add
mov
cmp
lods
aad
sbb
sti
adc
jmp
mov
stos
jno
decb
adc
mov
movsb
mov
jo
gs
push
clc
cmp
add
imul
out
subl
test
call
xor
icebp
xlat
filds
xor
xor
mov
sbb
test
ljmp
mov
add
in
call
ljmp
mov
jle
loopne
lock
push
inc
movb
mov
add
test
push
stos
mov
pop
cmp
arpl
add
jl
test
fbld
ret
mov
rorl
filds
mov
cmp
cld
pop
and
jle
jns
int3
jmp
rorb
xor
lea
mov
fsubp
mov
inc
std
mov
mov
cwtl
push
fmuls
lret
dec
or
cld
add
mov
inc
inc
jl
lea
cmp
decl
std
adc
test
add
shl
cwtl
aaa
and
or
push
push
push
sub
xor
sbb
inc
or
mov
dec
and
lods
sub
add
ss
mov
and
pop
add
mov
test
xchg
lods
mov
inc
cmp
push
ret
pushf
or
ret
mov
ljmp
mov
mov
rcl
cmc
fisttpl
sbb
loope
mov
loopne
mov
test
add
push
es
adc
push
and
int3
mov
mov
clc
popf
mov
test
aam
push
add
addl
aas
or
cmpsb
mov
inc
push
xchg
or
mov
loopne
dec
inc
jne
ljmp
inc
cmpb
filds
pop
dec
mov
mov
cmp
mov
or
mov
mov
sbb
ss
sarb
mov
cmpb
call
sub
pop
mov
jp
xchg
lcall
rorl
pop
frstor
jmp
xlat
subl
lret
mov
jnp
mov
addb
cmpsb
add
push
mov
push
sbb
xor
or
sub
loopne
fwait
test
xchg
iret
fistps
fcoml
bound
rorb
rcll
mov
cld
add
mov
in
sub
cmp
bound
neg
push
jbe
hlt
pop
std
nop
test
stos
rorb
cs
add
add
mov
test
add
nop
test
in
xchg
in
js
sbb
lock
add
test
adc
rcll
or
rcll
mov
and
and
cmp
add
pop
pop
ret
push
mov
test
mov
stos
adc
jb
lds
jl
enter
cmpsl
sbb
and
add
ljmp
inc
jp
bound
jo
xor
push
push
outsb
mov
inc
decl
enter
ret
les
int3
sbb
mov
test
cmc
xchg
lock
jmp
sub
and
mov
hlt
adc
push
dec
fnstsw
or
inc
xor
bound
dec
xchg
cli
loopne
inc
cmp
xor
out
in
jecxz
or
mov
pop
jecxz
and
bound
std
ja
lahf
int3
rolb
int3
adc
outsl
xchg
loope
fadd
nop
data16
pop
push
xchg
ds
data16
inc
xor
lret
rolb
mov
push
push
bound
and
cmp
xor
jle
testb
int3
les
out
cmp
jnp
mov
lea
outsl
out
pop
in
or
mov
mov
js
adc
clc
dec
out
dec
push
and
adc
rcll
das
mov
adc
add
sbb
bound
data16
xlat
adc
clc
jbe
dec
xchg
js
add
std
enter
lcall
aad
sbb
idivb
pop
sar
pop
shr
enter
dec
push
lcall
je
jl
xor
ss
addr16
sub
fbld
xchg
push
mov
stc
rolb
pop
pop
addb
push
adc
sub
pop
inc
sub
jle
addb
push
bound
popf
jo
pop
sti
repz
outsb
insl
inc
mov
mov
clc
jg
cmc
mov
xchg
push
rol
ljmp
fadd
push
sub
call
adc
mov
rolb
lock
gs
xchg
push
mov
fptan
sbb
je
ret
sub
cmpsl
inc
in
call
ljmp
fs
lret
imul
push
inc
adc
cwtl
add
rclb
jle
and
pop
mov
sub
dec
mov
cmp
sub
adc
adc
testb
fwait
jmp
pop
mov
gs
test
and
lret
rcrb
notb
pop
shlb
outsb
sbb
loope
add
and
push
outsb
xchg
cmc
mov
pop
lods
jl
cld
ds
pop
cmp
dec
push
loopne
add
outsl
sbb
js
in
ljmpw
adc
mov
cmpsb
ljmp
mov
xor
and
dec
adcl
inc
adc
jbe
xchg
out
add
mov
dec
rol
pop
adc
pusha
pop
fwait
incb
fadd
add
mov
mov
sbb
out
push
inc
cmp
add
mov
insl
sbb
pop
add
or
push
loopne
cmpsl
cmpsl
jmp
lods
shrl
xor
pop
les
jecxz
dec
mov
adc
mov
shrb
out
xor
test
ret
xlat
adc
cmp
call
test
add
sbb
mov
push
xlat
fdivs
dec
js
mov
or
popf
push
dec
push
add
xchg
push
mov
cld
lods
sti
jne
ficomps
mov
push
cmc
addb
test
mov
test
decl
cmp
or
cltd
jo
jmp
xor
add
ret
jo
add
jne
dec
xor
rcr
js
and
iret
mov
jl
adc
mov
sbb
hlt
push
adc
int
daa
xor
or
mov
or
js
add
push
and
loop
lea
pop
inc
pop
dec
jg
mov
push
pop
sub
cmp
hlt
out
add
adc
incb
in
loopne
and
xor
or
adc
add
jle
outsb
decl
adc
xchg
adc
ljmp
leave
pop
test
or
mov
push
jle
inc
mov
and
add
sbb
je
and
pop
sbb
test
testb
sbb
sbb
push
xchg
push
push
jl
pop
sub
loopne
ds
clc
addr16
pop
mov
add
fs
push
mov
push
ret
rolb
push
adc
dec
loop
ret
sbb
movsl
test
sub
sbb
test
int
lock
xchg
ljmp
push
mov
or
or
cld
push
adc
sahf
inc
push
adc
cmp
in
jmp
sub
out
push
test
test
call
cmpsb
add
xor
lea
push
pusha
sahf
daa
xor
xchg
ds
mov
inc
imul
sbb
mov
fists
and
inc
mov
ret
jb
enter
insb
add
mov
scas
mov
xor
push
xchg
mov
or
inc
pop
les
in
shlb
add
push
or
jg
add
aad
mov
pop
ret
or
sub
shr
and
es
or
cli
xor
inc
mov
cld
lock
mov
push
mov
add
sbb
fidivs
cmp
and
push
mov
xchg
cmpb
data16
dec
repz
insb
and
sbb
add
test
add
testb
out
xor
andl
inc
adcb
or
mov
insb
mov
in
filds
subl
call
fadds
jle
fs
pop
add
les
cmp
clc
fs
mov
add
les
inc
sbb
lahf
cs
jge
cli
mov
xchg
pop
add
enter
jle
addb
jge
cmpsb
dec
inc
push
mov
sub
and
call
loope
mov
push
into
push
cmpsl
lahf
push
flds
jne
pop
push
insb
adc
cmpb
mov
mov
ljmp
js
enter
mov
mov
push
hlt
cmpsb
lods
cli
daa
push
jp
mov
fidivrl
jbe
inc
ja
lea
mov
mov
loope
inc
maskmovq
testl
xchg
data16
push
cli
sub
je
inc
popf
dec
cmp
ja
aad
add
sub
jo
adc
das
and
and
and
icebp
test
loopne
inc
inc
cld
pop
add
sub
hlt
int3
jmp
subb
je
mov
loope
sbb
cmpsl
push
ljmp
mov
mov
xor
imul
adc
mov
xchg
sbb
add
mov
loop
aaa
adc
add
call
inc
les
push
xchg
sbb
push
add
jb
add
inc
ret
nop
loopne
mov
or
lods
nop
pop
mov
aam
popa
ret
mov
fmul
fistps
mov
add
clc
add
mov
mov
mov
test
add
ds
mov
orb
pop
dec
rclb
push
int3
cmp
scas
push
push
push
fcomip
ja
xor
mov
push
sbb
mov
add
cwtl
je
cmpsb
and
adc
adc
sbb
pop
pop
add
das
cmp
pop
sbbb
add
fistps
cmp
sub
sbbl
sbb
cmpsb
adc
enter
push
orl
or
dec
jb
out
cmp
pusha
cmp
cmp
add
into
sub
jecxz
xor
mov
adc
test
dec
or
addb
push
pop
adcb
stos
sar
not
enter
add
subb
sbbl
jmp
add
fcoms
lea
aas
xchg
add
addr16
push
aam
nop
inc
pop
je
push
dec
pop
out
es
add
pop
cmp
loope
mov
ds
adc
jmp
nop
inc
cli
inc
push
cld
add
popf
or
dec
add
and
xchg
pop
mov
lret
and
cmp
or
mov
cmp
je
push
push
insl
js
fnstsw
adc
loopne
mov
mov
enter
adc
in
mov
rorl
movsl
decb
dec
add
mov
jbe
mov
sbb
xchg
push
fmull
mov
pusha
daa
pop
stos
icebp
push
lret
sub
xor
dec
pop
or
ficompl
cmp
add
in
test
or
stos
lea
mov
mov
and
ret
pop
mov
cmp
mov
subb
mov
mov
cmp
mov
mov
pop
insb
rorl
aas
cmc
adc
stos
ds
and
add
mov
mov
push
lods
or
cmp
push
cld
inc
mov
and
sbbb
cmpl
pop
les
add
test
adc
mov
cli
stos
cmpl
rclb
in
adc
aam
cwtl
stos
hlt
scas
cs
inc
das
or
push
add
xor
push
xchg
dec
dec
decl
inc
add
or
mov
add
xchg
push
mov
xchg
rcl
rclb
shll
push
lods
aas
jo
inc
jp
es
pusha
xor
fadds
jecxz
xor
lock
mov
add
adc
outsl
mov
cmp
push
ja
inc
loop
sub
xlat
adc
pop
sub
xchg
cmpsb
xchg
cwtl
test
cli
dec
mov
push
sbb
je
setl
test
mov
jg
add
aam
push
add
push
mov
imul
cmpps
lahf
cmp
and
push
lods
mov
inc
sbb
mov
mov
pusha
mov
mov
mov
xor
andl
cltd
mov
sub
clc
data16
pop
adc
push
dec
and
push
sub
dec
pushf
xchg
push
add
or
fidivs
pop
ds
jle
xchg
mov
sub
push
inc
xchg
push
push
lock
je
push
and
cmp
test
out
mov
mov
pop
lock
mov
int3
scas
shrb
push
lods
sahf
movsl
jmp
negb
add
add
xlat
lock
push
mov
pop
add
les
mov
jg
xor
sahf
or
and
lea
shrb
test
add
lock
mov
int3
jo
test
and
jp
or
inc
outsl
push
aam
and
out
clc
inc
sub
xor
bound
aam
lret
icebp
out
ljmp
roll
inc
cmp
mov
je
loopne
and
cwtl
call
out
sti
insb
mov
or
int3
mov
popa
push
inc
push
insb
cld
outsb
xchg
xor
andl
dec
fmul
sahf
mov
and
add
xchg
push
lret
movsl
xchg
cld
rorb
mov
xor
jb
in
and
xchg
jnp
mov
dec
pop
addl
loop
int3
test
adc
aam
dec
cwtl
and
outsb
adc
or
and
icebp
int3
xchg
sub
inc
int3
xchg
pop
roll
shrb
or
push
add
dec
cmovs
add
dec
lret
call
clc
fisttps
push
mov
aas
cld
push
js
leave
pop
add
lret
inc
test
push
cmp
sub
push
sbb
mov
or
mov
shlb
mov
xor
push
fdiv
cld
push
mov
sub
cli
dec
clc
call
insl
and
in
push
xchg
gs
inc
lea
jl
adc
ss
sub
or
fs
cmp
hlt
les
push
mov
pop
sbb
je
or
push
xlat
mov
push
inc
outsl
cli
pushf
cs
add
call
enter
aam
popa
cmp
push
add
and
xchg
push
bound
mov
push
les
data16
cmp
out
stos
ret
testl
aam
add
jbe
sub
call
movsl
data16
mov
in
dec
or
stos
cmp
jl
enter
jl
xor
mov
push
ljmp
mov
cli
call
es
sub
or
pop
xchg
pop
cmp
and
das
xchg
adc
insl
mov
cld
lods
jbe
mov
pop
cld
test
push
mov
into
mov
aas
mov
ss
lods
or
mov
gs
fisttps
add
dec
rorb
loop
push
dec
cmpl
mov
dec
sbb
sti
in
sbb
mov
clc
inc
shl
test
xor
add
push
je
popa
sbb
je
xchg
and
cmc
xor
outsl
incl
cld
mov
outsb
pushl
std
adc
or
movsb
rorb
js
mov
mov
inc
xchg
mov
xchg
push
push
inc
xor
ret
shlb
cs
xor
and
jb
xor
pop
daa
cltd
push
sbb
jnp
dec
lods
mov
adc
sub
add
mov
mov
lea
divl
push
jg
xchg
outsb
mov
aaa
js
lcall
lcall
mov
dec
lods
jb
imul
inc
lret
add
aam
sti
mov
xor
out
push
lahf
movsl
or
lret
subl
xchg
mov
mov
stos
ds
cmp
pop
std
sbb
cmp
mov
divb
sbb
and
jmp
mov
mov
test
inc
adc
pushf
xchg
inc
stos
scas
push
and
push
lods
loop
mov
inc
pop
xchg
out
rcrb
xor
clc
push
dec
rclb
cmp
inc
call
xchg
add
sbb
test
mov
push
inc
pop
clc
mov
adc
push
inc
test
cmpsb
incl
jle
bound
arpl
loope
leave
insb
in
rcrb
lock
imul
leave
fwait
and
or
scas
ds
sbb
pushf
xchg
in
jmp
insl
or
dec
cmp
inc
and
aas
mov
push
cld
call
outsb
ret
push
dec
rclb
adc
push
cmp
adc
xor
sub
fcoml
sbb
or
gs
jp
inc
sbb
and
inc
xor
add
enter
mov
fs
pop
adc
decl
sahf
scas
mov
push
mov
loope
mov
mov
loope
mov
fisubrl
lods
mov
lret
pop
insb
call
or
scas
mov
mov
xchg
mov
lock
pusha
mov
ds
mov
movsl
shld
inc
pusha
rorb
cld
jg
pop
fbld
lea
pop
ljmp
jb
pop
outsl
mov
clc
aam
paddusw
xchg
add
cli
cltd
inc
add
adc
add
pusha
or
or
ja
mov
lret
cmp
js
pop
push
and
loope
cmc
push
shr
xor
push
cld
pop
cmp
clc
pop
addl
mov
dec
lock
jmp
and
dec
mov
cmp
cmp
push
push
dec
jno
mov
call
in
pusha
adc
jne
sub
push
pop
and
sub
pop
add
testb
aaa
pushf
mov
or
adc
popf
clc
hlt
push
or
data16
push
pusha
add
iret
push
adc
shlb
jp
dec
mov
xor
je
mov
cwtl
mov
adc
roll
jle
cmpsb
push
rclb
inc
add
mov
rorb
mov
or
sbb
push
lock
clc
xor
ret
sub
inc
daa
push
mov
pushf
adc
test
mov
mov
or
add
mov
int3
or
ds
mov
addr16
clc
stc
jle
mov
add
ret
push
mov
jecxz
mov
add
xchg
xchg
and
sbb
jp
jns
xor
call
mov
scas
push
or
or
cmp
repz
pushf
cmp
dec
push
xor
subb
lcall
je
push
xorl
cwtl
inc
add
fidivs
add
xor
mov
adc
sub
push
mov
mov
aad
in
loopne
incl
mov
mov
mov
pop
clc
cmp
clc
xrelease
lock
inc
lahf
mov
inc
dec
rorb
xchg
xchg
cmp
or
mov
xchg
inc
inc
fbld
cmp
jmp
pop
roll
mov
fdiv
ret
or
and
mov
add
inc
jp
and
mov
pop
adc
pushf
ss
sti
push
mov
lcall
pop
fisubrs
and
sbb
or
stos
sub
add
mov
into
inc
jp
lock
clc
mov
movsb
sbbb
sub
cwtl
push
add
push
lret
lea
int
ljmp
cld
pop
dec
jmp
scas
in
sbb
pop
push
imul
add
lea
lea
call
mov
mov
cmp
push
aad
outsl
std
mov
mov
add
imul
inc
mov
mov
testb
push
push
outsl
clc
and
xchg
push
pop
loopne
push
loopne
lods
push
int3
adc
lcall
sub
out
mov
arpl
mov
pushf
adc
test
fcomps
push
push
and
outsl
loope
dec
jl
std
jmp
icebp
jbe
aad
mov
pop
incl
lea
pop
add
mov
std
push
loopne
mov
fisttpl
addb
push
sub
cmpsb
mov
cmp
fimuls
add
add
xchg
and
sbb
pop
psadbw
je
add
fildl
es
add
pcmpeqb
dec
fdivr
les
shl
and
add
or
rcrl
mov
dec
adc
cwtl
mov
add
xchg
jp
ret
pop
aam
aam
adc
arpl
scas
and
sub
test
add
push
mov
dec
sbb
inc
pop
popf
mov
xor
adc
incb
js
test
nop
mov
mov
clc
mov
inc
push
push
inc
ljmp
loopne
mov
or
pop
mov
outsb
push
out
es
push
mov
les
sbb
push
test
clc
out
push
lret
test
cli
stc
sar
leave
call
inc
sbb
add
sbb
inc
jo
adc
xchg
test
mov
and
bound
das
inc
push
fs
add
push
faddl
std
mov
gs
outsb
dec
push
rclb
or
fsts
ficomps
movsl
sub
add
or
add
and
jne
fisubrl
cmp
lcall
jecxz
push
mov
and
jmp
lock
jge
mov
or
fldt
cmp
iret
out
outsl
fsubs
sbb
clc
sub
jbe
shrl
sbb
enter
popf
nop
inc
stos
mov
pop
jae
sti
dec
xor
scas
xor
cld
push
es
push
push
inc
push
push
mov
mov
dec
cmp
mov
xor
cmp
jbe
test
std
into
fsts
push
lcall
addb
mov
mov
mov
outsb
mov
xor
adc
pop
rol
inc
xor
clc
adc
test
xor
push
adc
in
aas
cwtl
faddp
jae
jo
imull
mov
iret
push
in
mov
adc
loopne
adc
cld
into
pushf
mov
daa
hlt
and
outsb
inc
roll
add
adc
add
add
data16
jl
pop
cmp
pop
hlt
push
push
xchg
dec
sbb
stc
test
push
cmp
xchg
mov
js
flds
adc
ss
xor
add
xchg
decb
in
push
nop
or
rcrl
dec
or
shlb
push
cmpsb
fsubs
in
data16
fadd
or
cmc
cmp
add
stos
in
inc
adc
hlt
jge
inc
or
cld
cs
call
pop
loope
mov
jle
and
loopne,pn
cmp
negb
inc
movl
dec
and
sbb
and
mov
sbb
adc
and
and
push
mov
ja
ficomps
cmp
shrl
push
mov
sub
lods
sbb
cmp
lods
fisttps
mov
out
pop
xlat
push
xchg
adc
adc
jge
dec
call
jmp
loope
inc
pop
sbb
xchg
outsl
cmp
sbb
lahf
adc
push
or
ljmp
sbb
mov
popf
push
in
sub
push
and
lcall
mov
pushf
fcompl
or
sbb
arpl
cmp
stos
push
inc
je
jge
lock
sbb
movsb
rolb
shrb
and
rcr
test
test
shll
shl
ret
add
xor
in
mov
add
jmp
or
xchg
cmp
adc
insb
pop
adc
push
adc
add
jp
sahf
push
fistl
or
mov
or
ss
cmp
dec
add
ds
out
mov
ficoms
jb
daa
out
loop
jns
addb
sbb
jne
dec
lret
add
mov
and
cmp
and
stos
or
sub
mov
xor
cld
push
push
das
pop
fsubl
test
clc
cmp
icebp
cld
xchg
iret
adc
aam
int
adc
add
adc
in
movsb
or
stos
loop
mov
xchg
push
mov
je
cld
ljmp
or
js
lret
js
mov
je
clc
push
jecxz
mov
sbb
sbb
clc
jg
das
sbb
cmp
push
gs
inc
adc
and
jnp
inc
scas
xor
and
inc
sbb
out
sbb
push
mov
ljmp
push
and
and
xchg
sbb
and
test
jl
sub
inc
test
jne
jl
jmp
pop
jne
dec
cmp
jg
inc
mov
cmp
and
in
and
rol
xor
mov
dec
jo
in
cmp
pusha
xor
adc
ret
mulb
ljmp
or
dec
mov
xchg
mov
mov
stos
sbb
dec
call
inc
jbe
dec
rclb
pop
repnz
xchg
or
fcmovnbe
lea
push
movsb
test
add
out
xor
dec
loopne
pop
jle
push
dec
adc
xor
mov
push
fidivrs
jo
xor
bound
inc
fimuls
pop
in
inc
clc
test
and
adc
leave
cld
outsl
pop
cld
add
push
push
xor
mov
mov
pop
and
pop
aad
call
inc
jo
adc
push
repnz
add
add
mov
sub
pop
jmp
cwtl
incl
ds
and
dec
movsb
pop
or
rclb
xor
pop
ret
xor
aas
clc
push
std
jmp
js
or
sahf
sbb
es
jmp
call
loopne
hlt
mov
test
stos
into
int3
dec
loopne
ret
jecxz
push
jmp
shr
lret
pop
scas
or
lods
and
mov
les
shlb
enter
inc
popf
es
push
cmp
gs
daa
or
push
out
stos
cmp
cli
mov
imul
test
push
adc
in
clc
xor
jecxz
pop
sbbb
pcmpeqw
test
add
xor
bound
pop
shll
mov
sbb
pop
push
add
push
add
jns
js
and
adc
mov
inc
sub
iret
cmp
cli
mov
sarb
andl
call
negl
insb
clc
decl
xor
xor
fs
addl
mov
in
add
ljmp
mov
test
jge
popf
push
or
jo
and
and
mov
push
rorb
faddl
xchg
cmpl
sbb
push
mov
sbb
mov
scas
cs
test
inc
sbb
mov
rcrb
mov
inc
push
hlt
and
cmp
push
mov
or
jp
sbb
push
popf
cmp
mov
push
push
or
adc
sahf
cmp
inc
movsb
sub
hlt
adc
dec
jp
push
and
push
lret
mov
jg
subb
inc
adc
sbb
pop
mov
ljmp
jl
mov
in
mov
bswap
add
int
testb
jp
xchg
add
sbb
test
je
fiaddl
push
lcall
lods
xchg
push
int3
mov
popa
inc
das
imul
scas
cmpsb
les
hlt
push
adc
dec
inc
inc
pop
subl
adc
or
enter
push
dec
adc
mov
icebp
inc
adc
cmp
outsl
js
lods
pop
or
sti
push
popa
aam
dec
add
test
mov
push
pop
mov
or
dec
xor
ds
mov
and
arpl
jg
push
or
and
mov
xchg
aas
add
xchg
sbb
pop
push
jne
or
cmp
ret
pop
frstor
adc
insl
push
and
or
imul
out
in
push
das
add
in
and
shrb
pop
adc
pusha
roll
mov
mov
pop
movsl
or
fcoml
jp
pushf
mov
push
sub
push
jle
repnz
lds
jl
cwtl
out
inc
movsl
pusha
scas
and
adc
mov
cmp
jp
rcr
pop
inc
pop
std
push
mov
fdivl
sbbl
inc
les
bound
repz
enter
push
pop
sub
add
pop
rcrb
js
pushf
mov
mov
push
inc
add
sub
add
loop
divb
inc
or
mov
and
movsb
les
mov
dec
push
sbbl
fcomip
les
arpl
out
push
out
adc
enter
add
xchg
lea
pop
std
mov
inc
les
adc
clc
das
sar
and
test
push
add
push
orl
cmpsb
push
mov
insb
cli
adc
pop
stos
scas
pop
pusha
adc
js
sub
add
cmp
cld
add
adc
mov
or
pop
jp
out
test
int3
pop
adc
add
mov
mov
test
xor
hlt
adc
push
fwait
and
or
or
inc
push
mov
inc
scas
subl
cmp
jg
inc
loop
ds
subb
cmp
stc
pop
mov
pop
ret
dec
test
xor
mov
int
mov
xchg
add
cmp
adc
mov
sbb
sbb
mov
and
mov
mov
sahf
xor
pushl
jl
lods
pop
aaa
jne
sbb
lds
cmp
mov
mov
add
sbb
mov
test
and
adc
pop
mov
jb
sbb
pop
and
mov
outsl
in
xor
push
sahf
pop
cld
pop
call
jno
xor
dec
sbb
ds
xchg
sahf
or
inc
xor
loop
clc
test
mov
aam
sub
pop
std
cmp
mov
jmp
adc
int
jo
bound
sub
sar
cmp
gs
les
aad
push
dec
insb
cmp
add
dec
add
fs
fisubs
aas
mov
adc
xor
aaa
jl
lock
mov
loopne
outsb
and
xlat
adc
sarb
mov
in
add
jb
call
bound
and
or
pushl
cmp
cs
mov
ljmp
sub
test
subl
adc
adc
push
out
sub
pushf
enter
loop
clc
sbb
add
push
pop
or
add
fdivr
imull
incl
and
cmpsl
std
imul
jmp
lods
jbe
pop
push
popa
add
je
call
dec
mov
add
or
data16
or
mov
adc
dec
jg
jbe
jl
push
ret
or
push
cmp
test
and
or
xchg
lea
test
push
mov
add
dec
inc
or
push
jmp
fs
jge
mov
and
test
or
test
push
fmull
stos
push
mov
loop
faddl
outsl
adc
or
or
xor
sbb
adc
sub
inc
je
jo
divb
adc
mov
push
dec
scas
cs
push
mov
sbb
xchg
stc
int3
filds
test
or
adcb
aam
mov
sub
aaa
mov
inc
mov
mov
jmp
pusha
mov
out
call
adc
sbb
sbb
sub
add
push
aaa
stos
nop
cld
pop
jmp
mov
pop
push
gs
lea
js
pusha
xor
mov
xchg
xchg
test
inc
adc
loope
andw
mov
mov
add
mov
mov
lcall
add
push
add
lock
mov
int
notb
inc
call
inc
mov
sbb
jp
mov
es
and
mov
shrb
fildl
cmp
cmp
mov
dec
mov
pop
mov
pushf
ret
dec
xor
cld
rcrb
or
adc
mov
iret
cmp
xchg
rcrb
add
cmp
sbb
or
inc
cs
insb
sub
outsb
fisttps
or
or
pushf
mov
xlat
int3
ja
mulb
mov
dec
cld
push
mov
add
ds
ss
cmp
mov
push
xor
or
mov
or
insl
sub
mov
shlb
movl
jl,pt
mov
fisttpll
inc
std
adcl
lea
cmp
sub
es
testb
test
hlt
std
mov
sub
and
adc
jmp
add
sar
add
mov
popf
add
addl
data16
xchg
outsb
jbe
lock
mov
fstpt
in
out
push
lock
les
shrb
loopne
dec
sbb
pushl
and
pop
mov
pop
mov
inc
push
decl
addb
in
or
mov
clc
add
jecxz
push
repnz
jge
sbb
mov
cmp
into
pop
insl
mov
add
and
clc
and
or
push
add
hlt
cmp
pop
mov
fsubr
fidivl
je
push
mov
cmp
mov
sub
in
add
daa
sahf
adcb
out
mov
and
rcr
mov
das
adc
int3
pop
add
ss
divb
lret
adc
int3
adc
icebp
jg
mov
mov
adc
pop
dec
test
or
inc
jb
xlat
loop
xchg
xor
push
fisttpll
test
nop
push
loopne
insl
add
sti
pop
and
push
test
cs
jb
push
dec
add
test
pop
loopne
call
dec
pop
movb
and
call
push
add
mov
xchg
dec
sbb
xor
mov
ret
cmc
mov
aad
and
stc
mov
daa
mov
int3
cmp
sub
nop
aam
rolb
cmpsb
lods
pusha
jb
adc
js
adc
inc
js
ljmp
test
gs
jle
sahf
cmp
subl
add
cmpsb
fimuls
popa
sbb
call
lock
or
push
sarb
sbb
call
push
adc
mov
cmp
xchg
or
sbb
inc
jno
push
fisubl
jmp
inc
lret
addb
test
out
loopne
dec
push
je
mov
hlt
dec
mov
iret
xchg
in
notl
ss
mov
rorl
fiaddl
jmp
and
sbb
push
cmp
pusha
das
jge
es
adc
sbb
mov
add
clc
inc
jbe
push
inc
rorb
movsb
xchg
mov
das
mov
mov
std
aas
js
orb
arpl
testl
pushf
rorl
aad
push
jb
add
adc
data16
cmc
bswap
xchg
sub
inc
das
roll
jl
pop
xchg
incl
xor
adc
jle
mov
loopne
pop
and
fisttps
add
insl
adc
pushf
scas
push
mov
push
pusha
mov
call
push
add
mov
mov
std
inc
cmp
sub
or
push
divl
outsb
rol
sub
push
jl
call
jmp
xchg
or
adc
ds
pop
pop
je
or
fiadds
int3
pop
adc
adc
mov
test
outsb
roll
ss
and
mov
daa
icebp
mov
add
mov
adcl
lret
or
mov
and
lds
mov
daa
pop
movb
push
call
and
cld
push
insl
fadds
or
sbb
js
xchg
pop
bound
inc
jg
shr
sub
inc
movlps
lock
test
stos
stos
test
clc
mov
sbb
jle
xlat
sahf
and
pop
or
push
mov
fwait
rclb
dec
xor
xchg
je
jl
pop
ss
insb
test
movsl
stos
loop
int3
in
rolb
cmpsl
jne
insl
push
add
sbb
dec
add
iret
in
cli
loopne
ds
inc
sarb
sbb
nop
sbb
mov
inc
into
stc
dec
enterw
lcall
movsb
inc
sub
je
or
or
ljmp
adcb
push
ficomps
cld
or
mov
push
adc
ljmp
add
jae
and
inc
inc
int3
dec
push
add
add
mov
jp
outsb
mov
add
decb
cmp
mov
fisubrs
push
adc
lock
dec
pop
mov
xor
cs
push
add
stos
and
push
push
sub
out
incb
ret
je
cmc
and
and
fcmovnb
incl
ret
sbb
cld
mov
push
fadds
add
in
mov
lcall
add
jne
jle
cs
lods
addr16
clc
push
ljmp
cltd
sar
cmp
test
jne
fists
inc
mov
xor
mov
pop
cwtl
and
adc
stos
lea
stos
mov
xchg
test
xchg
and
adc
pop
retw
xor
pop
and
data16
mov
push
adc
dec
insb
or
cmp
bound
and
popl
lock
ss
pushf
push
ret
inc
xlat
pusha
rcrl
jmp
pop
jl
dec
add
push
mov
sbb
pop
pop
sbb
sub
aas
jp
repnz
and
test
or
dec
adc
and
xchg
mov
hlt
ud2
inc
stos
gs
push
adc
or
movl
int3
adc
push
pop
fisubrl
cld
inc
mov
rolb
sbb
mov
sahf
clc
sbb
test
loop
and
xchg
sub
lock
shrb
pop
jle
into
fldl2t
ljmp
test
inc
cmp
mov
push
xchg
sbb
and
pop
xlat
adc
pop
stos
adcl
mov
xchg
pop
shl
cs
fxtract
jg
les
fstpt
lock
and
ret
cmpl
test
lock
pop
pop
cmc
je
add
cmp
or
mov
jne
pop
insl
je
mov
inc
add
clc
inc
stos
adc
xor
dec
sub
scas
jp
mov
jae
add
jg
push
je
inc
das
in
push
push
lock
adc
cmp
adc
stos
mov
or
jae
add
incl
int3
lds
jae
shlb
push
jne
xchg
dec
pop
cli
inc
and
sub
rorb
aaa
push
jmp
add
mov
decb
xchg
or
mov
cmp
mov
push
sbb
xchg
dec
test
addr16
push
stos
push
ret
or
or
cld
push
add
push
or
jp
rorb
cs
dec
fs
xor
add
rcll
xchg
cmp
es
push
mov
fcoms
xchg
mov
loope
popa
stos
dec
inc
dec
test
adc
shrb
fdivrl
in
mov
idivb
je
inc
and
and
jl
mov
jg
mov
xlat
fdivs
and
test
add
jg
mov
ret
add
adc
inc
inc
adc
fs
add
push
xor
jmp
cmp
push
and
in
inc
add
out
and
gs
fsubr
sbb
mov
incl
aad
push
iret
cmp
sahf
mov
and
jle
sub
out
inc
add
cs
or
addl
mov
add
mov
aad
dec
pop
add
cmp
or
insl
movsb
jp
push
push
jge
movb
ds
xor
pop
mov
popf
orb
daa
xchg
dec
xchg
ja
mov
pushf
mov
cld
or
push
cwtl
hlt
insb
sub
je
je
adc
push
push
sub
or
mov
dec
sbb
mov
test
sub
movsb
jge
pop
test
cltd
pop
dec
je
sbb
aaa
sub
pop
insb
jbe
push
xchg
fcmovne
hlt
xchg
lock
sub
mov
nop
dec
pusha
dec
push
daa
xorl
fstpt
jle
or
push
adc
mov
fstps
push
enter
lea
sub
xor
aam
xor
jge
sub
in
les
dec
mov
adcb
flds
ds
inc
pop
hlt
jne
sbb
add
fimuls
inc
push
and
lods
or
jne
adc
or
cwtl
mov
and
decb
lret
pop
and
outsb
dec
dec
js
jle
adc
and
sbb
pop
call
dec
xchg
or
sub
xlat
jb
jl
jne
movsb
mov
push
pop
xor
push
mov
xor
into
cmp
hlt
add
ret
push
push
adc
jle
add
mov
inc
dec
sbb
or
cmp
push
clc
shlb
add
and
xchg
and
lret
andb
xchg
leave
push
outsb
je
push
sub
daa
or
int
pop
mov
ja
inc
jmp
dec
push
push
test
in
sub
add
fsubl
xchg
or
fildll
add
xor
test
test
stc
test
push
mov
push
inc
ss
cmp
pop
xor
in
gs
aaa
or
andb
imul
jge,pt
push
movaps
sbb
jle
xor
adc
in
mov
adc
and
in
in
scas
xor
mov
sub
cmp
and
sub
xor
mov
cmp
fimuls
decb
xchg
add
lcall
push
sbb
or
into
adc
ret
cwtl
fmuls
data16
fiaddl
push
jle
and
loop
xlat
xor
cmpb
call
push
outsl
daa
inc
xorl
or
cld
aam
mov
mov
sbb
mov
add
jmp
xchg
stos
les
add
mov
insb
subl
lcall
fcompl
clc
sub
inc
ljmp
lcall
or
mov
xchg
add
inc
aam
sub
je
pop
xchg
mov
mov
cmp
subl
ss
cmp
cmp
cmpsb
add
xor
loopne
jmp
inc
aas
int3
adc
lea
dec
inc
add
hlt
lcall
jle
int3
movsb
mov
movsb
repnz
incl
xor
xor
data16
fidivrs
ss
movsl
insl
inc
or
xchg
push
xchg
inc
fdivp
add
pushf
outsb
sub
fiadds
inc
pusha
movl
xchg
or
mov
lods
xchg
loop
mov
and
push
xchg
ljmp
inc
loopne
sbb
pop
push
or
int3
loope
shlb
lcall
les
adc
mov
jo
cmp
and
lods
rcll
pushf
rclb
aas
push
jp
movsb
mov
mov
pop
jl
in
jb
cmp
jns
xchg
je
push
push
inc
pop
or
cs
fwait
rcrb
aas
dec
popf
xor
adc
sub
ds
addl
jecxz
add
mov
sbb
xchg
sarb
outsl
ds
lret
jecxz
bound
stos
and
adc
std
ja
adc
jne
je
loopne
jmp
inc
jg
insb
leave
leave
mov
sbb
test
push
mulb
add
sti
gs
pop
or
jecxz
xorl
adc
out
or
push
std
and
jne
mov
scas
mov
mov
aaa
xchg
jmp
push
xchg
inc
adc
sub
jl
add
sub
and
mov
repnz
mov
pop
aam
jns
push
ret
sarl
xchg
add
outsb
mov
add
inc
rclb
cltd
lcall
and
jmp
cmp
inc
pop
rclb
push
jne
adc
add
push
mov
enter
mov
sub
outsl
aam
les
std
jle
and
in
loop
fildll
mov
add
lods
jmp
in
sbbl
push
mov
push
roll
stos
sub
in
pop
lock
mov
rol
dec
not
stc
call
test
int3
ret
pop
outsl
jmp
cwtl
dec
add
or
icebp
fistps
push
shlb
mov
insb
out
dec
cmp
add
inc
fcomps
pop
js
pop
sbb
mov
mov
mov
cmp
test
xor
mov
mov
mov
xchg
push
jne
and
test
or
cmp
fiaddl
out
xchg
xchg
pusha
pop
pop
inc
sarb
in
jne
ret
loope
jle
es
push
loope
cli
jbe
imul
mov
sarb
loope
add
popa
popf
xchg
les
mov
or
and
xor
addb
sub
or
xchg
js
jns
aaa
jmp
jo,pt
and
adc
imul
dec
add
inc
fnstsw
cmc
sahf
and
ja
ret
in
xor
adc
lret
insb
rolb
test
mov
lock
les
dec
nop
jo
ret
dec
ret
bound
and
inc
sti
mov
mov
fdivrs
add
rcrb
inc
jg
mov
push
add
push
inc
mov
cld
dec
xchg
pushf
call
add
std
sbb
or
pop
and
nop
ret
scas
dec
mov
fs
dec
adc
mov
cmp
nop
mov
leave
push
cmp
insb
pop
jnp
fdivs
xchg
fadd
popf
jp
or
push
fadds
out
xor
xlat
rdmsr
lock
and
xchg
rolb
cmp
xor
outsb
cmp
rcl
addb
fdivl
dec
xor
push
sbb
imul
mov
ret
int
cmpsb
lahf
or
mov
es
out
sbb
ljmp
mov
xchg
mov
inc
test
pop
jle
pop
mov
faddl
loopne
adc
sbb
lar
xor
sbbl
enter
js
or
jmp
pusha
cmpsb
xor
call
pop
cli
ret
pop
jne
decl
cmp
adc
mov
xchg
scas
add
sar
std
mov
push
mov
out
jne
jl
xor
adc
lods
scas
dec
pop
push
rolb
sub
in
add
sub
ret
cmp
movsb
inc
leave
ljmp
test
sahf
pop
add
out
clc
push
or
cmp
ret
sbb
les
sbb
jbe
cmp
movsb
ljmp
ja
xor
and
or
outsb
dec
test
add
icebp
inc
rorb
mov
mov
clc
add
pop
outsl
repnz
sti
dec
jo
test
clc
test
rol
and
dec
xchg
setne
stc
and
std
cmpsl
movb
outsb
and
lock
sbbb
xchg
pop
rclb
pop
jl
mov
adc
f2xm1
stos
push
fsubs
cld
fisubrs
and
pop
std
test
push
mov
xchg
mov
in
add
jg
push
xchg
xor
or
enter
aaa
cmc
jg
lods
push
mov
inc
mov
sbbb
push
mov
sub
fwait
call
and
enter
xor
cmp
jmp
adc
js
je
rolb
pop
idivl
test
sub
ror
fwait
xchg
enter
stos
addr16
mov
or
clc
out
push
and
or
inc
sub
mov
je
inc
lret
stos
cmove
lcall
mov
push
or
add
inc
cld
ret
add
cld
mov
sub
in
scas
decl
mov
xor
test
ret
loopne
mov
jmp
std
pop
mov
inc
or
cmp
sarl
mov
inc
inc
or
mov
je
nop
ret
push
adc
gs
inc
push
sub
loop
lcall
icebp
in
loope
xchg
push
mov
adc
mov
sbb
adc
xor
in
xor
sub
inc
or
mov
push
pop
push
add
and
pop
mov
sarb
xor
daa
andb
cmp
inc
mov
lods
sub
dec
addr16
pop
xor
xchg
adc
sbbb
repnz
jl
mov
fnstsw
js
ljmp
in
inc
inc
push
inc
cmp
mov
dec
mov
test
insb
pushl
pop
push
insb
andb
gs
dec
pop
and
shl
testb
stc
sbb
orb
sahf
sbb
aad
inc
dec
pop
mov
pop
push
mov
push
loop
outsl
in
jne
or
les
dec
in
xor
les
jns
mulb
mov
or
cmp
add
ss
scas
scas
sbb
mov
and
or
adcl
call
fwait
add
je
cmpsb
dec
test
cmp
mov
mov
and
pmullw
fcoml
inc
iret
pop
pushf
adc
cmp
and
or
inc
movsb
inc
fisttpl
cmp
shrb
mov
adc
push
adcl
es
test
add
in
mov
pusha
sarb
jl
dec
setg
outsb
add
mov
inc
add
push
inc
push
or
cmp
cld
xchg
les
fbld
adc
hlt
inc
test
and
adc
inc
fdivr
notb
push
ss
rclb
or
cmp
cld
push
add
push
inc
or
sbb
cmp
pop
subl
cld
xor
pop
dec
movsb
rorb
rep
jp
cli
or
je
and
lea
cmp
mov
lock
cld
or
call
add
pusha
lods
ss
int3
push
call
gs
mov
lret
shrb
pop
push
je
test
sti
movsl
mov
xor
data16
pop
cmp
loop
jmp
add
sti
adc
dec
mov
insb
push
add
push
or
les
pusha
jp
rclb
filds
mov
sbb
clc
inc
push
faddl
movsl
ljmp
and
add
add
clc
outsb
test
pop
fs
xchg
icebp
push
gs
sbb
adc
enter
je
clc
lret
sar
push
push
and
jle
xor
loope
adc
and
push
xor
sub
or
inc
mov
sahf
push
cmpsb
in
rcll
push
fcmovu
xchg
push
shlb
push
cmp
push
cld
dec
test
xor
outsb
sbb
sub
clc
xor
push
push
mov
add
scas
je
fcmovb
enter
or
ja
out
cld
mov
outsb
push
test
out
inc
inc
adc
and
mov
outsb
cmp
movl
mov
psadbw
ret
call
dec
or
sub
call
cs
mov
mov
fwait
cmc
sub
call
dec
je
movsb
push
inc
lea
fnstenv
push
mov
mov
pushf
mov
xor
jp
dec
add
mov
pusha
je
jle
push
dec
test
adc
or
mov
pop
dec
nop
mov
aam
clc
addl
cmp
scas
inc
addl
sub
mov
je
add
icebp
push
in
dec
movl
xchg
je
cmp
mov
repz
xor
pop
gs
das
push
jp
add
mov
fcompl
or
and
inc
pop
add
insl
mov
or
fcmovnu
xchg
dec
sbb
sbb
push
lret
jmp
data16
or
es
lahf
ror
sub
sbb
add
and
add
les
test
call
sbb
pop
testb
or
jno
call
sarb
cli
sbb
xor
fimuls
aaa
mov
call
stc
clc
sarb
push
ffree
mov
mov
out
rol
cmp
pop
jno
mov
into
or
mov
loopne
add
inc
push
xchg
jbe
and
mov
pop
call
add
inc
test
add
adc
das
push
adc
cli
hlt
and
ret
sbbb
je
insb
xchg
xchg
test
push
adc
mov
subb
or
ret
andb
popa
out
enter
sub
sbb
sti
faddl
out
cmp
cmp
mov
mov
aam
cmp
push
cli
dec
jns
dec
test
cli
push
mov
js
jae
mov
lods
add
movb
or
gs
push
std
aas
xor
add
cwtl
push
pushf
subb
push
or
cmc
pop
cmp
add
push
scas
fdiv
xchg
lcall
in
sub
aas
add
and
add
inc
jbe
cmp
xor
imul
dec
mov
hlt
inc
sbb
push
adc
dec
in
mov
mov
test
sete
jge
or
or
cmc
dec
hlt
xchg
inc
clc
cmp
loop
push
sub
insb
or
ret
mov
dec
or
push
sbb
jp
js
fidivl
and
test
push
pop
mov
pusha
cmp
lods
loopne
std
gs
push
rorb
rol
lock
shlb
mov
push
popl
and
or
push
into
pop
jp
je
lea
lock
mov
and
leave
inc
lods
dec
cmp
dec
jo
push
inc
xor
pop
jge
or
test
mov
inc
ljmp
add
and
pop
push
sub
movsb
ss
mov
sub
movsl
pop
es
adc
mov
lods
ss
rorb
xchg
mov
sub
inc
lea
movl
mov
and
mov
aam
mov
aaa
mov
push
inc
test
mov
lods
shr
fcoml
arpl
mov
or
das
js
cmp
testl
fildll
lock
lock
imul
lock
lds
aaa
cmpsb
push
jo
xor
and
mov
les
clc
or
and
nop
push
mov
add
mov
jmp
dec
and
aaa
pushl
rcrb
repnz
push
and
or
adc
cmp
add
subl
pop
add
ffreep
jg
mov
xor
mov
mov
jp
pop
push
mov
mov
fstpt
punpcklbw
or
testl
ja
hlt
inc
subb
mov
add
cmp
mov
push
xor
xchg
adc
or
icebp
cmp
xor
dec
jb
xchg
inc
stos
xchg
add
push
cmp
inc
push
rolb
inc
int3
push
jmp
jbe
pusha
and
add
xlat
and
js
mov
push
frstor
loope
push
pushf
and
aad
jle
ss
or
cmp
ss
movsb
mov
lcall
lods
sbb
bound
incb
dec
mov
in
cmp
dec
jl
in
cmp
int3
loopne
add
sbb
fcomp
add
test
dec
mov
inc
mov
popf
cmp
dec
ljmp
fs
cmp
clc
jle
rep
aas
repnz
sarb
jge
lods
jecxz
mov
mov
fbld
test
mov
sti
int
xorb
and
test
lea
push
loope
dec
ljmp
cld
mov
inc
sub
mov
add
or
ret
rorb
mov
rclb
cmp
xchg
clc
add
adc
ds
fcmovbe
insb
mov
adc
mov
jb
aam
lock
jmp
mov
std
push
ljmp
push
cli
pop
adc
pop
push
je
mov
sar
mov
cmp
inc
andl
ud0
or
add
xchg
cld
xor
lea
sbb
stos
xchg
push
je
jle
and
and
out
shlb
push
add
call
jl
dec
or
xor
pop
test
adc
decl
iret
cmpsb
sbb
gs
cmc
cmpb
scas
push
test
adc
or
xchg
pop
push
push
dec
jecxz
mov
dec
pop
jmp
test
call
imul
rolb
orl
iret
les
or
das
adc
mov
test
adc
add
pop
sub
push
lods
std
push
mov
sub
loopne
pushf
cmp
inc
push
add
test
call
sbb
nopl
cmp
xor
add
add
loopne
stos
int3
fcmovnu
outsb
inc
pop
or
cmp
push
xor
adc
cld
push
bound
xchg
push
das
clc
mov
gs
inc
je
add
sub
pushf
dec
cld
adc
ret
enter
mov
rcll
mov
push
aam
push
addl
push
and
loope
add
jle
je
push
mov
xchg
ljmp
lock
lret
sub
adc
rolb
sbb
cli
nop
or
pop
ja
fmuls
push
add
push
adc
mov
mov
jl
test
or
push
mov
ficoml
push
mov
in
test
add
add
test
xor
push
pop
pop
sarb
xor
inc
jo
les
adc
sub
push
add
sub
fcomp
les
test
jbe
mov
push
call
mov
popf
cmp
jo
sti
pop
add
nop
add
mov
movsb
push
das
mov
cmp
xor
repz
cmp
in
imul
pop
fwait
push
dec
enter
and
aam
or
mov
xor
pop
in
mov
cmp
loop
daa
test
mov
inc
test
andl
mov
dec
nop
test
and
dec
cld
int3
insb
cmp
clc
loop
lcall
repnz
test
dec
ret
inc
mov
cmp
mov
and
in
ret
stos
std
outsb
faddl
mov
aaa
push
call
sub
push
push
push
adc
adc
push
inc
pshufw
incb
add
pop
ja
loop
adc
insb
nop
sbbb
fmull
mov
lods
popf
mov
dec
imul
pop
mov
mov
and
sbb
cmpsb
jge
mov
icebp
pop
fs
pop
test
mov
jbe
push
scas
movsb
push
cmc
or
call
fwait
pop
fsubp
mov
mov
mov
pop
mov
and
push
adc
dec
add
push
outsl
inc
bound
fdivrp
stos
mov
push
inc
mulb
ficoml
orb
or
clc
lods
mov
dec
das
xor
outsb
adc
or
or
adc
js
hlt
xor
adc
pop
xchg
push
hlt
mov
xor
cmc
decl
push
mov
mov
aaa
add
lcall
push
or
mov
dec
in
call
sahf
dec
test
push
or
outsl
add
pushl
mov
inc
lods
jge
je
adc
jl
outsb
add
push
jo
and
in
mov
mov
dec
lock
in
pop
xchg
icebp
push
add
or
push
mov
call
hlt
scas
lock
mov
mov
inc
mov
test
jge
dec
movsb
pushl
lods
jne
clc
cmp
jno
push
jle
fildll
cwtl
xchg
sarb
and
call
js
fimuls
repnz
cli
add
jne
std
or
sub
push
clc
cli
filds
pusha
pushf
adc
add
cmp
clc
pop
insl
pusha
fnsave
cld
rclb
xchg
pop
out
sub
add
and
insl
cli
mov
hlt
cld
cmp
data16
pushf
testl
fbstp
jl
adc
or
inc
jp
sbb
mov
cmp
fsubr
jp
pop
popf
rcl
mov
test
push
or
in
nop
push
jo
popa
jl
inc
cld
cmp
movsl
mov
mov
push
out
jecxz
mov
sub
mov
and
mov
add
xlat
test
pushf
pushl
add
jmp
stos
adc
inc
dec
mov
add
lds
loop
jge
imulb
cmp
xor
rorb
call
movb
das
pushf
test
push
call
sub
inc
jl
push
mov
imul
adc
mov
bound
push
subb
leave
add
jbe
nop
cmp
adc
cmp
xchg
mov
out
ljmp
jb
movsb
aad
inc
test
sub
call
inc
pop
mov
sub
push
add
jmp
outsb
es
fcmovnb
jb
cmp
or
inc
call
pushl
sub
dec
cvtps2pd
push
pop
add
ljmp
bound
cld
xchg
out
pop
sub
ja
cmp
loope
xchg
cmpsl
lods
add
out
mov
xor
leave
mov
inc
inc
inc
mov
out
orb
adcl
loopne
dec
loope
add
lret
or
cmp
fdivl
adc
pop
pusha
cld
xor
iret
movl
pop
jl
inc
pop
push
rorb
gs
fdivrs
jge
sbb
jbe
outsb
xor
js
pop
int3
or
test
xchg
clc
inc
mov
cli
incl
cwtl
out
out
jno
inc
push
mov
add
jb
push
push
ficomps
sbb
movsb
clc
mov
push
adc
mov
es
mov
xor
xchg
xor
inc
xchg
inc
mov
sub
mov
xchg
cmp
test
shl
add
pop
in
mov
mov
push
jbe
ret
mov
les
enter
sbb
dec
jp
movsl
das
std
pop
ret
mov
hlt
arpl
cmp
push
lea
loop
dec
xor
jle
sti
push
or
rcrl
fs
mov
fs
jle
dec
insb
mov
push
xchg
and
push
cmc
push
xchg
cld
jmp
pop
in
addl
cmp
fadds
pop
adc
lods
mov
lods
pop
fcmovu
mov
popa
xlat
sub
jp
push
sub
xchg
add
xorb
cs
push
adc
push
les
and
rorb
aam
jae
add
clc
xchg
or
mov
adc
lods
pop
xor
jg
je
jne
call
test
ss
ja
adc
imul
mov
fwait
decl
mov
mov
je
rclb
xchg
xor
cs
test
push
sub
adc
dec
shr
add
test
int3
in
sbb
push
scas
ss
pop
je
lea
pusha
add
js
wrmsr
hlt
fadd
xchg
cmp
std
out
mov
sbb
scas
push
loope
add
cmp
cmpsb
pop
push
push
push
arpl
cmp
les
push
jmp
dec
mov
add
scas
sbb
jne
std
push
or
mov
xchg
clc
inc
push
mov
jne
call
lods
push
nop
test
add
adc
aas
inc
and
adc
jno
insl
je
cs
adc
jbe
push
or
movsb
inc
xchg
adc
mov
inc
inc
fnsave
pop
push
inc
mov
mov
and
call
les
sub
mov
inc
push
adc
xor
sub
xor
cld
mov
insb
push
mov
movups
jb
add
xchg
divb
shl
add
lea
xchg
lcall
jae
mov
and
bound
dec
gs
test
add
cmp
jg
mov
inc
pop
enter
add
add
aam
pop
imul
add
add
jb
inc
dec
rorb
test
test
shll
sbb
add
mov
dec
stc
imul
or
mov
jo
sbb
mov
mov
pop
mov
shr
je
rorl
lea
mov
push
mov
test
cmp
test
xchg
pop
add
or
subb
add
fwait
adc
lret
dec
clc
mov
add
mov
pop
repnz
sbbb
add
inc
idiv
fisubs
push
mov
sahf
out
push
outsb
fldenv
movsb
xlat
pop
adc
jp
sub
daa
or
fs
mov
fcoms
cmp
test
jmp
insb
cmc
repnz
or
repnz
rclb
mov
mov
add
sbb
inc
pop
test
mov
movlps
adc
insb
or
es
xor
push
dec
sbb
mov
nop
adc
add
push
ss
pop
lret
or
push
xlat
xchg
sarb
or
push
outsb
clc
aam
ret
jl
inc
nop
in
dec
mov
mov
sub
nop
xor
inc
ljmp
push
loope
and
xchg
aas
and
cld
and
mov
dec
sahf
in
test
lcall
cmp
inc
lret
scas
js
into
xor
pop
mov
repz
movb
inc
adc
dec
push
and
nop
fadd
inc
loope
fidivl
xchg
icebp
ja
movsb
inc
pop
rolb
stos
sbbb
mov
add
out
dec
jmp
xchg
cmp
rcrb
inc
les
sbb
rcl
sbb
push
add
repnz
inc
fmuls
test
incb
pop
inc
mov
or
stos
pusha
mov
or
pop
movsl
aas
jno
lea
cwtl
mov
or
push
loop
add
add
cmp
ret
cwtl
pop
sbb
jl
pop
test
xor
and
jmp
and
shlb
add
adc
mov
or
sbb
cmpsb
add
popf
arpl
adc
test
push
test
loopne
cmp
sbb
jp
enter
mov
inc
fmuls
xchg
lret
sarb
jo
lret
enter
je
ret
cmp
sub
mov
pop
loopne
mov
mov
add
aam
add
std
je
add
punpckhdq
ss
push
lock
fsub
sub
aad
jne
adc
js
jne
lock
pusha
pop
xlat
sbb
hlt
movsl
enter
add
or
out
xor
mov
sbb
sub
ret
das
xchg
inc
push
std
xchg
push
sub
add
jne
lret
push
test
add
mov
add
add
aas
or
scas
shrl
dec
cmp
js
incl
and
or
mov
push
mov
mov
hlt
pop
mov
and
and
rolb
jecxz
mov
int3
sbb
push
mov
fimull
mov
mov
testl
push
into
adc
lcall
aaa
mov
aam
jne
subb
xor
or
jg
clc
scas
lsl
and
test
cwtl
mov
sbb
or
lea
jo
add
mov
push
call
inc
sbb
fdivrs
mov
lds
movl
test
insb
cltd
fsubrp
add
ret
std
sbb
pop
cltd
roll
and
lret
in
inc
loope
add
ret
add
cwtl
sahf
lds
call
fsubs
cmpsb
lods
xor
inc
mov
sbbb
stos
add
mov
mov
add
xchg
adc
shl
inc
shrb
push
push
jne
inc
add
pusha
add
jle
std
sbb
pop
call
cmp
pop
dec
jl
arpl
and
sbb
or
aam
ja
decb
sbb
mov
dec
cmp
loope
ret
inc
xor
mov
pop
xchg
add
sub
icebp
subb
data16
adc
inc
adc
clc
call
addb
pop
mov
sub
out
pop
in
inc
jge
test
lds
jp
mulb
cld
inc
outsl
mov
ret
fisttpl
mov
mov
jmp
call
or
inc
les
mov
fs
icebp
sbb
mov
inc
dec
cmpsl
push
pmulhuw
xor
into
scas
and
rclb
shll
rolb
loopw
sbbb
pushf
lock
pushf
pop
lods
xlat
pop
int3
dec
cmp
push
push
push
or
xor
imul
popa
mov
push
sbb
cld
aaa
shrb
in
or
inc
jb
push
jecxz
mov
ret
pop
or
ja
mov
clc
or
sbb
shrl
addb
repnz
lock
dec
sbb
sub
add
add
cli
inc
jo
fistl
xchg
xorl
mov
pop
inc
lcall
push
push
mov
inc
outsl
clc
pop
push
adc
fs
and
fs
xchg
mov
aam
movsb
movsb
js
jne
sti
and
jl
add
xchg
enter
hlt
pop
movsl
ret
or
inc
pop
jle
bound
mov
push
movsl
mov
pop
clc
add
lock
mov
mov
fdivrs
push
loop
mov
add
pop
mov
lods
lret
mov
push
or
mov
dec
inc
jl
mov
mov
mov
sbb
roll
sti
popl
cli
dec
push
je
mov
xor
push
cmp
jns
sbb
loope
mov
pop
push
mov
pop
mov
lcall
add
sbb
jb
aam
gs
in
fdivr
ret
and
mov
fbld
adc
insb
ljmp
sub
mov
popl
and
add
push
adc
lret
mov
call
ret
push
xor
in
xchg
mov
cmc
cmpsb
mov
insb
pop
xor
lahf
mov
add
mov
loopne
cmc
decl
int3
inc
sub
adc
rcr
jge
lea
or
push
adc
mov
jne
or
jne
mov
pushl
add
test
repnz
xchg
push
cmp
inc
cld
mov
add
add
insb
or
jnp
stos
mov
pop
sub
inc
insb
sub
adc
stc
repz
fsub
arpl
or
je
and
ret
mov
dec
pop
xchg
or
popa
mov
repnz
mov
jge
sbb
mov
pusha
and
pop
repnz
xchg
fs
pushl
rolb
add
mov
push
push
mov
in
test
mov
adc
mov
mov
fisttps
je
test
inc
call
and
gs
fsubr
subb
loopne
jg
test
pushf
xor
inc
and
push
pop
imul
mov
addl
jle
add
or
mov
call
loop
add
xchg
mov
ret
arpl
add
test
mov
pop
div
outsb
inc
mov
outsb
mov
fcomps
mov
in
mov
inc
out
jb
adc
dec
out
add
dec
pusha
lea
push
loope
lods
inc
cli
jbe
add
adc
clc
cmp
ficomps
inc
xor
adc
scas
mov
push
test
les
mov
jl
out
sbb
sub
roll
out
fcompl
les
or
jbe
jmp
inc
insb
popl
or
mov
cmp
pop
sbb
add
add
aaa
popf
out
clc
jle
add
or
mov
sbb
or
std
add
cmpsb
mov
inc
jmp
aad
scas
and
cwtl
int3
test
inc
imul
adc
or
inc
sbb
inc
rcr
inc
cld
mov
add
mov
das
inc
jp
dec
xchg
and
std
unpcklps
adc
lods
sbb
mov
sti
das
lea
push
inc
or
add
mov
je
movsl
fninit
cmp
out
or
test
jl
fbld
xchg
mov
push
dec
test
dec
push
int3
rcll
inc
ficompl
inc
sub
mov
inc
insl
mov
mov
in
loop
lcall
xchg
cld
mov
nop
lock
hlt
es
scas
rorl
shrb
das
ret
mov
mov
lcall
in
pop
ss
sub
pop
bound
loope
aad
sti
or
data16
mov
and
cli
pop
push
insb
mov
shll
repnz
sbb
addr16
fadds
cld
in
pusha
shl
push
mov
ret
and
mov
orl
add
test
loope
and
push
mov
dec
mov
adc
or
ficoml
scas
mov
mov
incb
in
mov
add
sbb
add
pop
inc
mov
jge
jae
es
jmp
out
inc
or
bswap
xor
cmp
leave
testb
push
clc
not
dec
test
fistps
dec
fistl
fdivrs
aas
adc
jg
orps
xor
xchg
dec
cmp
inc
xor
add
or
incl
mov
adc
and
jge
outsl
ret
test
xor
adc
ret
pop
and
cmpsl
inc
jmp
push
push
push
outsl
sgdtl
rcr
add
and
sbb
xor
mov
scas
rorl
mov
aam
test
and
inc
scas
insl
lods
push
jo
push
in
add
push
cmpsb
and
push
rolb
mov
fsubr
mov
inc
dec
daa
adc
add
dec
adc
xor
fildl
cwtl
xor
xor
icebp
test
push
xor
testl
loop
mov
mov
ss
or
sbb
jmp
cmp
ss
jne
test
fimull
fstpl
mov
aad
mov
in
adc
adc
ret
fildl
cmp
pop
insb
mov
shl
push
fstpl
cld
sbb
pop
adc
adc
repnz
ss
fldcw
xchg
cli
xor
add
add
push
call
push
cld
mov
test
lods
shlb
mov
push
call
push
mov
addr16
mov
test
scas
add
xor
ret
adc
sbb
ret
pop
or
dec
mov
jge
and
nop
cli
mov
mov
jno
xchg
add
loopne
dec
or
fs
jae
ljmp
or
and
hlt
inc
lock
dec
push
push
add
cld
je
mov
dec
mov
jmp
mov
cmp
push
xchg
mov
xchg
adc
jb
xor
repz
adcb
sarb
mov
mov
push
mov
mov
pop
mov
mov
and
fdivs
add
jno
pop
loopne
pushf
movl
add
int
jnp
mov
xorb
and
xor
or
add
xchg
sub
inc
mov
mov
jmp
add
mov
pop
dec
stos
mov
xchg
mov
lahf
lods
imul
fcoml
sar
mov
jmp
pushl
sbb
mov
inc
dec
jecxz
adc
cmp
add
test
ffree
fcos
sbb
mov
or
add
lret
test
hlt
xor
stos
add
lcall
cltd
sbb
jb
jge
data16
idiv
add
sbb
sub
je
testb
xchg
movsb
xchg
mov
mov
push
ret
inc
dec
leave
repnz
pusha
add
pusha
or
fdivs
imul
sbb
add
in
adc
test
pusha
popa
jo
cmp
dec
sbb
push
gs
bound
push
add
cmp
movsb
or
aaa
xor
adc
call
or
lret
mov
xchg
mov
add
test
mov
pshufw
imulb
adc
mov
inc
push
sbb
sahf
sahf
add
add
in
add
jo
inc
push
sti
jne
addr16
cld
adc
mov
or
pop
inc
inc
inc
cmpsl
sbb
sbb
arpl
mov
in
inc
mov
ja
outsb
xchg
and
add
insl
iret
xor
push
cmp
inc
mov
shll
gs
and
inc
in
cmp
cmp
lcall
aam
mov
rclb
orb
adc
data16
add
repnz
mov
add
popf
adc
cmpsb
out
aad
pushf
inc
mov
inc
es
mov
test
mov
ret
pop
test
adcb
xchg
cmp
je
outsl
push
js
jne
sbb
push
dec
iret
movsb
pop
push
imul
cwtl
and
mov
icebp
mov
mov
cmp
testb
inc
ds
mov
int
push
mov
inc
xor
mov
sub
outsl
push
inc
adc
mov
dec
ret
mov
sbb
fsubl
cmpsl
dec
ja
jmp
test
test
dec
mov
aam
add
jg
outsb
je
xchg
cmp
idivb
xor
lcall
jbe
xor
adc
sub
add
fcmovb
mov
mov
xchg
sbbb
inc
repnz
push
or
jp
hlt
mov
mov
ret
lret
push
test
cld
or
push
cmp
call
js
jne
test
fsts
out
or
test
addr16
xor
cmpl
out
adc
add
incb
ucomiss
sbb
sub
hlt
and
dec
adc
and
js
xchg
das
dec
lahf
add
divb
rorb
inc
lods
outsb
std
sub
add
add
push
xor
ret
fadds
daa
sbb
push
inc
test
imul
fsubs
add
and
lods
pop
stos
ss
mov
es
into
jl
cmp
mov
xor
push
fwait
add
and
outsb
mov
lcall
dec
sbb
shlb
clc
jle
mov
push
mov
pop
jge
fiaddl
repz
ja
and
inc
mov
data16
jecxz
sbb
inc
inc
dec
sub
mov
aam
sub
xor
sbb
pop
mov
lods
int3
mov
sahf
out
icebp
inc
loopne
js
pop
add
and
cmp
push
push
pop
inc
and
inc
call
or
cmp
dec
sbb
rclb
loopne
or
sbb
mov
fmuls
daa
inc
stos
push
sub
push
push
jle
jno
insl
mov
cld
loopne
dec
mov
jno
scas
mov
cmpps
add
xchg
stos
adc
push
or
mov
and
pushl
push
xor
cmp
add
clc
dec
std
int3
add
cld
xor
je
mov
pusha
jge
dec
mov
jl
mov
dec
fiadds
mov
sbb
mov
subl
faddp
rorl
inc
das
inc
fsubr
or
leave
test
or
xchg
jmp
xor
fldt
pop
call
mov
ret
push
cmpb
push
loop
jg
movl
test
and
jb
test
div
cmp
mov
push
std
add
inc
cmp
test
add
mov
push
inc
inc
jg
push
es
rolb
inc
push
mov
xor
mov
or
clc
inc
push
sub
movsb
jbe
inc
lret
pop
nop
add
mov
js
cltd
mov
fs
dec
in
imul
insb
adc
into
jb
or
jnp
lock
inc
pop
add
and
sbb
jle
lea
mov
push
and
andb
call
add
mov
jne
jmp
loopne
int
push
dec
shlb
and
add
add
lahf
mov
adc
or
sbb
xor
or
rorl
je
outsb
adc
cli
ss
inc
mov
adc
cmp
jle
jne
sete
lds
dec
push
sahf
sub
clc
lock
test
ret
ret
bound
and
mov
jb
sub
mulb
push
call
mulb
or
scas
es
popf
sbb
cltd
add
pop
fdivrs
rolb
ret
sub
jge
sar
cltd
inc
cs
jo
push
mov
out
mov
push
mov
cs
or
rolb
enter
cmp
mov
pop
cmp
pop
and
push
add
adc
cli
mov
xlat
test
mov
loopne
xchg
mov
sti
add
xor
mov
inc
sbb
cmp
adc
push
inc
mov
cmp
push
ret
imul
test
inc
mov
mov
js
test
and
pop
or
andl
movsb
lea
daa
loope
lea
test
in
mov
loop
clc
mov
outsl
push
mov
or
fisubl
add
push
xchg
decl
sbb
lret
adc
xchg
and
inc
sbb
push
lret
js
fldt
mov
movsl
pusha
add
loopne
push
je
es
jg
adc
pop
fdivrl
test
mov
sbb
mov
xchg
jb
jp
cmpsl
mov
into
daa
and
movsb
ds
incl
stc
xlat
adc
dec
mov
decb
es
mov
mov
std
xor
cmc
clc
stos
ljmp
push
test
xor
icebp
dec
jecxz
push
test
ret
or
add
jno
testb
push
into
inc
mov
xchg
outsb
mov
push
icebp
stos
aaa
dec
sahf
add
mov
jmp
aaa
jmp
and
adc
out
adc
daa
jl
outsl
js
or
andb
shl
aaa
pusha
add
std
mov
bound
cli
lret
jb
adcl
and
js
loopne
push
dec
inc
cmp
sub
push
add
cwtl
add
push
add
lods
pop
mov
test
stc
mov
test
ret
adc
int3
and
xchg
into
add
mov
fimuls
mov
or
fistl
add
loop
sarl
pop
cld
xchg
xchg
je
mov
ret
hlt
or
and
jnp
orb
push
jle
data16
mov
sbb
dec
inc
ljmp
mov
pop
sahf
inc
xlat
jns
ret
in
xchg
cli
or
adc
and
and
add
in
ret
jnp
cwtl
cmp
push
dec
inc
mov
inc
push
in
hlt
add
push
hlt
test
aas
rcr
cmp
cmp
fildl
or
lahf
pushl
xchg
mov
bound
jbe
lcall
cwtl
xor
sub
push
inc
femms
xor
mov
aam
push
mov
jl
push
lahf
sbbb
mov
push
sbb
pushf
aas
ficompl
xor
jae
imul
imul
test
fs
push
cmp
push
sar
push
outsb
jo
inc
je
call
dec
loop
fdivrs
fiadds
mov
dec
xor
data16
test
mov
decl
jno
add
sahf
and
mov
or
jg
pop
fsubrs
dec
pop
mov
je
repnz
xchg
push
lock
mov
les
mov
inc
les
push
fdivrs
inc
and
mov
std
add
push
es
dec
xchg
lea
adc
dec
or
icebp
sbb
jne
push
test
fbld
cmpsl
addb
cmp
pushf
sahf
pop
jne
add
xor
out
mov
clc
push
pop
test
lock
jns
loopne
ss
outsl
insl
jne
add
call
pop
call
ret
bound
or
test
loop
inc
sbb
mov
and
popf
push
and
pop
sbbb
mov
enter
adc
out
pop
sar
test
mov
andl
sub
xor
addl
add
and
jae
mov
cs
pop
shlb
cld
push
mov
lret
pop
inc
cmp
pusha
mov
push
cmp
mov
cli
nop
roll
dec
insb
addl
cmp
pop
inc
push
nop
push
xor
push
xor
loope
push
pop
inc
push
adc
mov
test
mov
inc
decl
mov
mov
movsb
stos
mov
pop
pop
sbbl
push
lods
pop
jae
data16
loopne
jl
cwtl
pop
and
mov
mov
mov
int3
add
fwait
mov
stos
shll
pusha
push
shlb
insb
sub
inc
in
jnp
ret
fimuls
sub
pusha
leave
call
lea
mov
xor
ss
mov
push
jmp
inc
and
jl
xchg
outsb
xor
les
loop
mov
add
lds
repz
ret
sub
sub
cmp
sbb
mov
in
jmp
test
dec
cmpsb
pop
jl
cmp
pop
add
imul
jb
clc
popa
adc
pop
mov
aaa
rol
mov
adc
mov
hlt
inc
xor
xchg
cmp
cmp
fs
inc
in
inc
inc
pop
push
and
adcb
sub
push
or
cmp
fildl
cli
push
fldenv
loope
sub
nop
and
outsl
adc
lea
mov
inc
add
xchg
or
adc
cmp
push
mov
sbbb
cli
aam
push
or
cld
addr16
imul
xor
icebp
scas
stos
dec
pop
bound
call
pop
push
js
mov
adc
mov
mov
inc
xchg
mov
cld
insb
pop
pushf
jno
in
nop
and
mov
mov
pop
jg
adcb
jbe
sub
xchg
loop
sub
mov
lods
stos
jmp
cmp
jmp
jo
call
or
sub
test
cli
pop
stc
xchg
dec
mov
clc
cmp
and
adc
rcrl
enter
push
xor
add
xorl
mov
addl
push
sahf
fcoml
outsb
pop
addb
xchg
aas
push
shll
cmp
setne
mov
imul
fadds
and
mov
and
subl
mov
fisubs
push
mov
add
and
jp
push
lea
add
pop
push
test
dec
push
out
or
cltd
inc
mov
out
cli
insb
gs
pop
add
cld
mov
pop
clc
in
adc
mov
xlat
mov
xchg
mov
pop
mov
arpl
aaa
cmp
test
fwait
inc
adc
scas
add
pop
ljmp
mov
lret
sub
add
shlb
mov
test
inc
cmp
in
jp
mov
test
bts
sub
mov
dec
adc
out
mov
add
das
xchg
jo
mov
or
mov
and
add
adcb
mov
sub
movsl
lods
test
add
push
adc
fwait
punpcklwd
in
xor
int3
inc
mov
out
ja
je
cwtl
push
adc
shlb
push
outsl
xchg
jo
shlb
rcll
cmp
sub
mov
test
mov
sti
mov
shll
lods
xor
or
mov
adc
mov
or
lcall
dec
jg
fimuls
jb
popa
adc
pcmpgtw
mov
push
cmpsl
dec
mov
xchg
dec
ds
push
mov
xrelease
cmpsl
push
arpl
shlb
fmulp
popa
popa
lcall
cs
sbb
cmp
test
rorb
stos
dec
cld
adc
mov
cmp
lods
cmp
xor
cmp
test
pop
rorb
incl
js
pop
insb
fstpl
popa
mov
gs
rcll
add
fisttps
and
jmp
push
sbb
adc
adc
and
repnz
fcoms
lods
inc
cmpsl
push
push
mov
push
outsb
push
ds
dec
jle
ds
pop
enter
inc
push
add
add
push
dec
or
pop
jle
xchg
mov
xchg
dec
data16
ret
jle
cmp
imul
test
adc
in
cmp
cmp
mov
jns
cwtl
inc
hlt
int3
push
mov
int3
lods
cltd
aaa
orb
lret
popa
and
pop
data16
pushf
dec
aam
popa
or
cld
stos
pop
jbe
test
xor
push
popa
xchg
dec
pop
jb
ror
push
mov
loopne
and
fsubrl
xchg
and
mov
pop
add
stc
das
imul
push
push
push
jle
gs
add
mov
incl
incl
mov
and
inc
sub
decl
xor
jp
test
add
pusha
push
mov
or
xchg
cs
add
loopne
mov
cmp
adc
cmp
and
cld
sbb
js
cli
into
cmp
mov
xor
ljmp
rolb
fiadds
rcrb
into
ficoms
xor
call
fwait
xor
pop
aad
add
inc
dec
in
enter
pop
hlt
xor
sub
push
mov
in
xchg
xchg
mov
addl
mov
cmp
insb
test
rcrb
or
jbe
std
sarb
mov
mov
mov
stc
js
dec
pop
loopne
out
push
mov
or
xchg
gs
inc
mov
xor
enter
out
inc
add
pop
pop
cmp
inc
loopne
dec
fsubl
or
and
jg
xchg
insb
push
inc
push
test
dec
sub
outsb
loop
loop
and
loopne
add
in
int3
mov
lods
ja
test
dec
dec
mov
mov
dec
pop
or
repnz
loopne
scas
push
sub
cmp
add
cli
clc
in
xor
cmpsl
pusha
push
imul
sbb
xchg
inc
pop
pusha
mov
orb
and
inc
lret
movsl
outsb
xor
out
inc
jl
dec
dec
bound
lock
imul
mov
sbb
jmp
jmp
mov
mov
mov
xchg
lods
sahf
std
mov
cwtl
mov
lods
orb
test
sub
and
in
and
sbb
dec
jne
aad
mov
pop
adc
pop
inc
xchg
in
stos
xor
mov
sub
cld
pop
jmp
je
xor
mov
fwait
sub
pusha
call
or
xor
enter
and
test
insb
add
fs
push
xor
mov
push
es
cmpsb
leave
std
sbb
add
jno
push
popa
xchg
fmuls
inc
cmpsb
rorl
fs
lret
loope
idivb
lock
mov
push
cs
fadds
call
push
jle
mov
test
js
in
dec
adc
aam
push
dec
xor
inc
std
ss
mov
mov
and
movsb
xor
mov
nop
adc
jb
test
pop
lea
xor
sub
mov
test
xchg
testl
push
mov
into
loope
push
add
addr16
xor
pop
push
fcmovnb
pushl
nop
xchg
xor
inc
fisttps
mov
mov
dec
push
popf
xchg
mov
xor
je
push
add
pop
rolb
sti
test
sub
add
cmc
adc
movsb
jb
sbb
sbb
ret
add
je
test
sub
mov
xor
add
xor
add
in
out
push
insl
mov
data16
lock
adc
or
xor
fistpl
push
and
push
fidivl
push
adc
jne
dec
mov
fmull
ret
insl
add
test
adc
add
or
notb
or
ret
sbb
cmp
jb
push
push
scas
xchg
and
adc
aad
test
or
xchg
and
out
mov
mov
jmp
notb
pop
call
dec
inc
lock
pop
dec
daa
lret
dec
fdivs
aas
or
mov
cmp
push
xor
inc
lods
or
lret
aam
mov
shll
hlt
xchg
lahf
cmp
call
fldenv
or
inc
push
inc
rolb
cmp
std
xchg
add
lods
xor
call
jne
mov
mov
jb
je
adc
je
xor
push
int3
mov
push
dec
pop
enter
popf
ret
std
xchg
add
js
mov
xchg
jecxz
jmp
push
aaa
pop
or
mov
dec
cs
mov
xorb
fisttpll
clc
or
cld
adc
cmpsb
or
cld
mov
push
cmpsb
in
mov
xchg
cmpsl
and
cltd
sub
cld
test
push
inc
psrld
pop
pusha
and
pushf
pop
push
xor
dec
nop
mov
sahf
lods
push
xadd
jecxz
mov
loopne
shll
xchg
fldt
ret
push
sub
dec
lock
ds
mov
int3
inc
add
push
mov
cld
xchg
push
add
jl
or
loope
or
and
mov
add
inc
add
cmp
ficoml
or
inc
cmp
loop
adc
and
or
ret
call
or
mov
outsb
dec
insb
push
movq
and
xor
jbe
data16
repnz
push
adc
sbb
push
call
int3
jne
mov
xchg
dec
loopne
jecxz
cmp
mov
jmp
cmp
xor
addb
arpl
jmp
add
gs
jne
data16
or
add
cli
add
pop
popl
cmp
cmp
ja
sbb
sub
dec
add
dec
cmpsb
lock
test
mov
sbb
hlt
pop
and
mov
call
push
pop
lahf
mov
mov
pop
std
lcall
push
jl
jb
and
xor
sub
add
data16
lea
or
push
adc
xor
sub
mov
xor
in
or
mov
xchg
push
push
cmpsb
lahf
jne
inc
adc
sbb
psrld
add
xor
aas
enter
gs
xchg
push
pushf
push
icebp
cmp
iret
ret
cmc
dec
inc
out
call
popl
call
inc
sub
xchg
je
test
inc
in
adc
out
mov
push
in
add
add
in
test
xchg
rcrb
cld
outsl
cltd
adc
mov
sbbl
mov
push
sbb
lret
xchg
dec
rol
push
lods
mov
add
push
sbb
inc
sub
pop
xchg
mov
in
or
push
push
imul
stos
pop
pusha
std
cmp
outsl
pop
call
add
stc
inc
adc
mov
movsb
pop
and
lret
sahf
mov
mov
nop
push
pop
add
hlt
or
pusha
jb
aam
sbbb
inc
jecxz
data16
inc
call
jo
mov
jne
jl
iret
jmp
out
mov
out
or
mov
cmp
lods
mov
sbb
mov
mov
xor
movsb
adc
inc
mov
mov
loop
lcall
je
or
push
pop
rorb
insb
xor
sub
adc
ja
repz
add
pop
lcall
out
mov
sbb
cwtl
outsb
xor
sbb
inc
decl
or
xchg
sbb
add
inc
movsl
lock
push
sub
movl
insb
xchg
outsb
push
sbb
sbbl
pop
cld
xchg
mov
push
pushf
lods
test
adc
shrb
mov
or
inc
sbb
jle
hlt
add
adc
call
inc
fmuls
and
lret
les
in
pop
jb
and
pop
cltd
xor
mov
sbb
and
imulb
mov
in
ficomps
jmp
loop
dec
mov
push
or
fmuls
mov
movsb
pusha
xchg
add
icebp
incb
and
jmp
cmp
out
aas
popa
inc
aam
xor
xchg
xor
xor
fsubrl
mov
dec
data16
adc
les
lods
in
mov
pushl
out
pop
adc
bnd
and
fiaddl
push
arpl
nop
adc
rcrb
inc
inc
push
and
lea
push
push
push
push
icebp
ret
mov
jle
loop
jmp
push
jae
mov
mov
cmp
xor
repnz
xchg
mov
mov
test
test
sub
jl
xchg
lea
mov
push
dec
test
out
decb
xlat
shrl
faddp
mov
cmp
sarb
adc
clc
add
mov
mov
push
lcall
and
add
cs
lock
add
hlt
inc
jbe
mov
call
js
cwtl
lcall
rolb
mov
movsb
fsubs
xor
sbb
outsb
adc
fidivrl
cmc
xor
pusha
mov
push
mov
shlb
fisubs
push
cmp
loope
test
repnz
and
add
pop
scas
movsb
mov
inc
add
jmp
rcll
inc
shll
xchg
mov
fsubrp
into
mov
sbb
gs
add
in
fcomps
lods
pop
mov
out
jb
dec
push
sub
cld
aaa
cli
sti
lret
push
lcall
mov
mov
add
test
insl
add
inc
mov
inc
add
jmp
fcmovne
data16
cld
bound
stos
sbb
jge
addl
test
dec
rorb
out
int3
sbb
adc
push
clc
out
pusha
mov
lock
lock
outsb
mov
jp
sub
jl
les
movl
push
or
fdivl
sbb
sti
cli
daa
dec
pop
sub
js
stc
add
mov
rolb
hlt
push
push
jecxz
js
insb
sbb
rolb
mov
adc
xor
mov
bound
ds
call
movsl
mov
push
xor
xchg
call
pusha
insb
jle
ljmp
and
js
lods
mov
inc
adc
dec
sbb
push
add
add
or
jle
aad
dec
in
les
cli
mov
nop
xor
imul
push
jae
mov
mov
dec
test
test
pop
add
dec
xchg
push
and
data16
add
call
lcall
add
mov
adc
roll
nop
cmp
arpl
notl
clc
sub
stos
xchg
into
fadds
fs
outsl
dec
es
inc
shufps
lock
incl
adc
mov
std
ret
sbb
popf
sbb
repnz
fdivrl
dec
out
out
dec
adc
xchg
nop
scas
pop
pop
push
test
pop
add
dec
inc
mov
cwtl
les
add
cmp
and
sbb
add
adc
fsubs
lods
xlat
inc
mov
into
add
mov
das
ljmp
notl
and
shrb
jnp
test
sub
and
xor
and
dec
hlt
pusha
and
or
xor
and
pop
adc
or
js
sub
lret
sbb
add
or
or
cli
push
dec
xbegin
rolb
pop
push
lods
leave
jne
and
ret
cli
dec
add
in
mov
mov
adc
scas
out
and
add
and
inc
sbb
mov
sarb
or
mov
push
add
clc
stos
sbb
push
mov
push
movsl
mov
pop
test
push
fwait
hlt
ljmp
sbb
jle
mov
es
popa
dec
push
aas
adc
inc
adc
xor
adc
lock
cmc
cmpsl
adc
mov
mulb
sarb
sti
jmp
sbb
and
push
std
hlt
mov
fdivrs
outsl
cmp
inc
leave
nop
fs
adc
int3
rclb
sbb
jb
sbb
imul
pop
mov
pop
clc
rcr
sbb
adc
je
test
test
or
sbbl
std
into
aas
adc
icebp
outsl
insl
nop
push
sarb
sub
mov
data16
inc
cmp
sub
mov
push
andb
int
xor
mov
mov
sub
in
ret
mov
and
call
inc
mov
xchg
sub
sub
cmp
cmp
adc
lea
adc
add
push
sbb
adc
ljmp
pop
and
dec
push
dec
inc
sbb
ret
lcall
add
lret
or
adc
and
inc
mov
or
lret
ljmp
fdivrs
or
add
adc
jg
mov
lcall
dec
mov
or
mov
inc
jp
incb
and
jl
sbb
call
mov
push
shrl
sbb
ss
and
sub
fs
mov
xchg
das
jp
or
mov
xchg
testb
int3
hlt
cmp
or
int3
push
push
cmp
test
push
cmpsl
mov
add
and
aam
movsb
ret
lea
dec
sub
xor
icebp
xchg
xor
test
push
je
xor
and
inc
inc
insl
inc
ret
inc
add
jno
xor
push
popf
jbe
jmp
addb
adc
mov
xor
pop
inc
dec
push
cld
xchg
sti
lar
sub
movsb
gs
or
or
push
lahf
sub
clc
outsl
sub
ljmp
pusha
and
push
pop
dec
push
sbb
push
push
xor
lea
pop
cmp
push
dec
dec
inc
jle
icebp
dec
rclb
mov
jle
lcall
ljmp
inc
xor
and
xor
push
sbb
pop
mov
es
ss
adc
std
inc
or
push
mov
mov
int3
fsubrl
cmpb
mov
ljmp
sub
pushf
xchg
dec
or
cmp
aam
sbb
aad
add
jnp
add
or
in
fisubl
sbb
pop
loopne
rclb
mov
push
stos
lods
lds
cs
aaa
adc
or
call
add
out
cs
dec
mov
mov
mov
sub
jb
clc
incb
data16
subl
adc
add
pop
push
aaa
mov
les
sub
sub
and
xchg
fiaddl
inc
dec
test
adc
mov
test
sarl
lcall
sar
js
adc
xchg
and
pushf
or
imul
lcall
adc
stos
adc
outsl
ljmp
test
pop
lock
stos
cmp
add
scas
test
push
mov
daa
push
cltd
push
clc
outsl
push
sub
or
movb
ljmp
xchg
add
insb
jo
jl
push
js
adc
scas
test
push
fiaddl
sarb
cmp
add
hlt
into
adc
push
cmpsl
jmp
gs
sbb
push
jmp
and
out
inc
aas
jle
mov
cli
fistpl
dec
xchg
jle
call
add
scas
push
jle
adc
push
aam
mov
addb
inc
cmp
mov
divb
mov
clc
cmp
lea
or
cmp
jo
mov
or
mov
adc
sub
cld
dec
jl
dec
pop
gs
sbb
inc
cmp
repz
xorb
dec
pop
push
xchg
pop
cmp
push
mov
adc
in
push
jmp
sbb
fdivp
shlb
push
sub
shr
cwtl
roll
mov
sarb
inc
or
fs
sub
sbb
mov
faddl
pushf
add
mov
xor
mov
cmp
pushw
rolb
add
jl
add
pop
sub
call
inc
enter
cmc
enter
jne
adc
push
push
xchg
aad
add
call
jg
push
mov
addr16
rol
clc
mov
push
test
xor
and
lods
xchg
lock
dec
push
mov
fwait
inc
adc
es
sub
lock
xor
sub
mov
shll
mov
sbb
push
add
jo
lcall
add
add
add
rcr
stos
mov
loope
test
pop
push
dec
push
mov
inc
sbb
pushf
pop
aas
fnsave
mov
ficomps
testb
dec
cli
ficompl
ss
and
stos
shll
flds
bound
xor
sti
sub
jb
mov
mov
mov
push
popw
and
push
clc
mov
mov
push
inc
pop
dec
aas
ret
clc
ror
sbb
outsl
push
xor
push
xlat
or
inc
push
inc
jg
xor
add
test
rorl
xor
dec
cld
or
lods
test
cmp
sub
je
movlps
add
or
in
push
mov
mov
mov
sbb
loopne
test
sub
clc
ds
js
or
xchg
add
and
jl
pop
je
push
add
dec
loopne
dec
or
int3
imul
push
jo
pop
gs
pop
test
mov
cmp
imul
mov
jo
bound
mov
lods
mov
dec
loop
dec
add
xor
ss
fidivrs
push
adc
pop
add
out
adc
xor
push
and
mov
cmp
mov
or
push
test
sbb
add
ret
xorl
cli
or
fistpll
lcall
loopne
lea
sub
js
mov
mov
add
cmc
push
ret
sbb
jge
push
sbb
je,pn
loope
push
push
loope
xor
enter
fmuls
subb
in
inc
dec
sub
sahf
xchg
mov
rolb
inc
jecxz
inc
cmp
ss
mov
pop
add
jle
sbb
fdivrs
mov
jns
mov
sbbl
dec
lock
push
cmp
inc
mov
fadds
push
xchg
add
data16
test
outsb
xlat
mov
pop
mov
int3
test
sub
adc
into
imul
ficoml
loope
mov
leave
js
jecxz
and
je
dec
pop
insl
loopne
pop
xchg
pop
cld
in
clc
stos
iret
add
dec
xorb
jecxz
js
lock
xchg
or
adcb
movsl
fadds
lret
inc
inc
cmp
or
data16
fwait
fwait
push
or
test
sbb
sbb
sbb
mov
sub
pop
add
fs
mov
sub
cmp
loop
int3
jl
sbb
mov
je
pop
test
jle
mov
popf
mov
inc
xor
ret
pop
inc
adc
das
pop
lcall
fildll
mov
bound
or
or
push
mov
or
fidivl
out
xchg
mov
dec
jge
mov
cld
ss
movsl
xor
es
sbb
mov
scas
mov
aaa
cmp
pop
je
or
dec
jmp
call
push
std
push
int3
iret
ja
inc
iret
rorl
aaa
dec
push
outsb
add
dec
add
dec
inc
inc
cmp
adc
call
mov
sbb
lret
shlb
leave
inc
push
hlt
incl
cs
testb
in
test
cld
aaa
std
loop
push
adc
push
jo
jmp
adc
xor
in
test
sub
xor
add
stos
incl
js
mov
and
std
xchg
aam
insb
dec
loop
test
in
cmp
cli
dec
jb
sub
mov
ljmp
xor
dec
push
pop
and
or
out
sti
jo
push
pop
push
pop
cld
push
push
incb
jbe
add
ds
lahf
mov
in
xor
mov
push
xor
cmpsl
call
cmp
mov
je
push
push
pusha
jo
xlat
std
pop
add
hlt
sbb
inc
inc
sbb
popa
inc
xor
outsl
add
xchg
jp
rcr
dec
scas
or
cwtl
mov
loop
dec
adc
sbb
cli
test
inc
out
mov
lret
xchg
mov
and
mov
adc
xor
or
mov
mov
ficomps
loopne
loope
inc
in
jmp
rol
xchg
dec
pop
jne
push
call
icebp
adc
js
outsl
decb
mov
adc
inc
mov
out
lock
in
push
pop
call
call
xor
xorb
int3
shlb
pop
lods
test
pop
add
sbbb
cmp
xor
repnz
xchg
aas
pop
inc
in
and
sub
xor
fsubrs
mov
push
inc
pop
lret
scas
mov
mov
mov
xor
dec
fs
lock
mov
imulb
dec
inc
add
xor
andb
cmovge
outsl
test
push
sub
adc
push
call
sub
push
outsb
mov
in
jae
cmc
fistl
jle
xor
cld
adc
xor
lret
adc
push
add
xchg
jo
leave
adc
xchg
adc
pop
mov
push
jg
cmpsl
mov
add
ja
push
push
mov
adc
sub
mov
dec
sbb
rcrb
lds
sbb
xlat
out
xor
ljmp
mov
or
sub
into
stos
adc
psubw
scas
sarl
or
xor
in
pop
mov
movsl
inc
or
fsts
and
ss
js
adc
dec
dec
add
shrl
lea
dec
mov
cmpsb
fidivs
push
pop
dec
call
or
mov
mov
hlt
lods
push
push
or
imul
sub
ror
pop
xor
ljmp
mov
mov
mov
and
inc
sbb
mov
mov
aaa
and
ljmp
cmp
mov
nop
je
movsl
add
lea
mov
and
pop
sub
data16
sub
mov
out
jecxz
jecxz
rcrb
sub
subb
sbb
and
add
daa
xchg
add
cmc
sbbb
shll
std
loopne
xchg
push
jno
divl
repnz
cs
push
jne
push
xor
mov
movsb
push
cld
fists
cwtl
call
dec
outsl
mov
push
mov
jmp
or
in
ds
inc
insl
cli
insl
pop
mov
lcall
mov
fists
xor
sbb
or
and
aad
cmp
das
cmp
cli
loopne
out
and
cmc
mov
pop
jb
and
add
jl,pn
orl
movsb
sbb
mov
or
push
fsubl
add
ss
fst
mov
cmp
std
int3
dec
xor
andl
pushl
and
dec
mov
mov
pop
data16
cs
push
mov
loopne
push
int
out
sbb
xor
popa
or
fadd
or
mov
je
mov
and
movsl
mov
into
stos
fcmovb
or
fcmovne
cwtl
shl
aaa
xchg
push
xchg
int3
push
mov
sbb
and
arpl
cwtl
mov
lea
pop
cwtl
movsl
das
ss
xchg
sub
testb
push
out
jg
aam
adc
mov
pop
mov
push
adc
outsl
ret
fs
enter
clc
cmp
or
rol
int3
scas
daa
mov
xor
mov
inc
cwtl
add
dec
inc
inc
pusha
ljmp
cmp
fcmove
add
mov
rorb
mov
push
push
jp
add
test
call
fwait
in
testb
popf
mov
std
cli
push
test
scas
rcrl
lahf
stos
sbb
sbb
lea
mov
ja
loope
dec
test
sbb
inc
sub
pusha
cmp
adc
jl
push
faddl
mov
dec
call
dec
call
mov
jmp
cmp
sar
mov
and
test
in
add
add
sub
jp
test
ret
pop
or
inc
loopne
sarb
sub
mov
shl
push
add
and
inc
ljmp
bound
fiaddl
cmp
sbb
jae
jmp
inc
stos
stc
mov
decb
pop
or
inc
mov
ja
push
and
push
push
push
push
pop
into
testb
mov
or
and
fisubrs
pop
sbb
mov
adc
jae
mov
add
xor
sbb
jle
movsl
dec
push
add
and
aas
adc
lea
dec
mov
jo
mov
sbb
jns
out
outsl
loope
add
push
clc
stc
cmp
je
adc
cmp
es
push
mov
or
mov
stc
push
mov
rclb
sbbl
adc
mov
xor
jg
dec
push
inc
and
sar
and
rol
call
idivb
add
mov
xor
inc
loope
cmpb
aaa
repnz
push
sbb
adc
stc
xchg
les
push
xor
pushf
aam
mov
sub
add
inc
stos
inc
adcl
inc
ret
mov
into
push
lods
mov
insl
jg
xchg
xor
adc
lea
mov
test
loopne
sub
bound
ljmp
xchg
mov
dec
jp
test
inc
test
inc
jp
jmp
push
sbb
div
xchg
adc
dec
sub
lret
fs
add
sub
jg
adc
mov
movsb
jg
inc
mov
sahf
jne
outsl
test
call
add
je
cmp
add
enter
shll
adc
push
adc
mov
xor
adc
ss
adc
ret
movl
dec
js
ljmp
cmpsb
sub
pusha
or
test
outsl
loopne
add
dec
decb
and
adc
sbb
cmp
jo
movsb
loop
inc
loope
adc
mov
push
mov
test
and
mov
insb
lret
mov
sub
in
lea
movsb
pop
inc
add
add
lea
aam
test
cmp
cmp
sbb
dec
frstor
outsb
add
xchg
push
cmp
icebp
inc
fdivrp
push
adc
jo
jb
jno
jae
sbb
enter
xchg
xchg
push
inc
jmp
loopne
or
and
mov
push
and
sbbb
std
out
add
xchg
fildl
lock
pop
addl
cld
mov
jmp
jbe
pop
mov
das
xor
pusha
and
sub
sub
add
mov
sar
enter
outsl
jae
mov
xchg
out
push
gs
sbb
mov
jnp
aaa
add
lret
rorb
insb
fsts
or
dec
mov
sub
decb
cmp
cmp
mov
decb
sar
rolb
sbb
mov
fmull
ret
xor
and
cmp
xor
and
jg
jmp
mov
addb
fistpl
add
jmp
imul
cmp
call
push
xor
or
in
loope
sbb
xor
pop
enter
call
int3
push
or
es
jl
into
xchg
ljmp
push
shll
inc
cli
jne
xor
mov
add
xchg
add
in
cli
adcb
push
jge
hlt
add
jle
mov
inc
push
int3
push
push
adc
add
int3
inc
or
pop
and
repnz
mov
movsb
mov
hlt
les
and
sbb
cmp
cmp
aaa
lock
clc
xchg
pushf
mov
sbb
lods
mov
sbb
add
outsl
faddl
test
add
and
add
lea
pusha
inc
dec
adc
inc
push
adc
jb
aad
lcall
cmp
lock
cld
xlat
loop
xor
and
jmp
roll
out
sbb
pop
xchg
aam
lret
or
add
call
mov
mov
mov
xor
cmpsb
xchg
sbb
jmp
jae
add
mov
jp
jae
inc
or
or
or
xchg
popf
ljmp
orl
shlb
push
or
push
mov
mov
xchg
stc
xor
pop
inc
jecxz
scas
xor
jo
cli
jg
in
cmp
les
mov
andl
dec
imul
add
sub
clc
pop
jo
shr
lock
add
lds
jmp
mov
inc
push
mov
cmp
pop
push
mov
and
insl
pop
mov
inc
movl
shrb
add
fwait
xchg
cmc
orl
xor
push
jne
cld
call
das
push
addb
add
je
sbb
pusha
jb
test
arpl
stos
insl
adc
das
mov
push
sbb
in
sarb
dec
stc
and
fmuls
xor
pop
push
pop
or
loopne
jbe
push
lods
lods
jle
dec
mov
mov
enter
xor
mov
sarb
jmp
div
pop
xorb
bound
inc
xor
ret
push
in
rol
in
jl
or
mov
jne
inc
push
rolb
test
push
add
psrld
dec
in
imul
push
add
lods
or
add
decb
adc
pop
cmp
mov
sub
repnz
mov
ss
ja
push
mov
cmp
int
sub
les
loopne
push
movsb
xor
movsl
scas
ficoml
push
pop
incb
push
lods
xor
in
bound
xchg
xchg
sub
inc
clc
int3
and
add
fwait
repz
add
add
adc
cmp
add
imull
mov
pop
lar
ret
jge
mov
cmp
mov
popa
das
cmp
dec
les
push
ja
mov
mov
mov
add
mov
or
push
push
sbb
int3
add
mov
mov
rorl
lock
mov
push
jmp
out
push
add
in
mov
dec
or
je
scas
cmp
out
aad
xchg
or
lods
pop
add
push
push
pop
cli
lret
es
or
inc
xchg
call
ljmp
push
aam
gs
lret
js
ud0
mov
cs
add
in
dec
in
mov
dec
ret
mov
add
mov
sbb
sub
rcl
cltd
loop
jmpw
lar
and
incb
fsubl
fs
add
aaa
or
push
movsb
in
enter
push
aaa
bound
movsb
mov
push
lret
or
jne
hlt
adc
push
push
dec
mov
stos
dec
cmp
inc
xor
mov
mov
mov
mov
or
cwtl
or
decb
add
outsb
pop
sbb
out
mov
push
pop
dec
dec
mov
push
mov
adc
push
cmp
and
inc
mov
push
mov
push
xorb
sub
push
fs
pushfw
mov
or
mov
mov
jb
xchg
push
fimull
pop
cmp
rorb
add
mov
sbb
gs
push
jecxz
pop
test
pop
pop
jp
pop
mov
cld
loopne
or
ljmp
test
cltd
xor
call
or
mov
and
icebp
dec
mov
cs
inc
add
cltd
enter
into
mov
bound
or
xchg
push
jl
pop
cli
loope
mov
jge
adc
add
inc
xchg
inc
lret
xor
adc
sbb
cmp
sbb
outsb
bound
lods
out
hlt
or
testb
shlb
dec
push
dec
es
int3
int3
push
popa
cmp
sahf
addl
and
add
push
pop
les
jl
push
dec
fimull
jmp
call
pushf
and
xor
or
cmpsl
mov
rclb
pop
inc
jnp
push
pushf
or
lods
add
sbb
orl
push
and
push
jp
pop
ret
icebp
xchg
cld
jo
cmp
sbb
xchg
or
push
mov
scas
inc
add
rcrb
adc
dec
adc
aas
add
test
pushf
dec
push
push
rorl
std
idivb
cs
xor
mov
adc
shl
inc
add
out
adc
xor
je
icebp
mov
cmpb
push
out
dec
mov
or
lea
pop
ljmp
out
pop
test
je
hlt
rorb
imull
pusha
mov
loop
add
inc
test
mov
aad
mov
ss
xor
push
mov
push
mov
jge
cmpsb
std
add
shl
ss
cli
incl
jl
test
test
ret
mov
cli
mov
pop
inc
ljmp
jmp
inc
pop
and
adc
pop
sbb
call
and
loop
std
out
inc
mov
fwait
mov
jne
ret
mov
in
jmp
sahf
call
cmp
mov
mov
cwtl
sbb
jbe
es
add
lock
or
aas
and
int3
cmp
jg
lock
decl
aas
adc
xchg
mov
pop
and
ret
frndint
hlt
xchg
pop
jle
dec
xor
sbb
cmp
mov
adc
inc
pop
or
add
adc
lds
and
inc
gs
add
push
jge,pt
inc
int3
ds
cmp
and
inc
int3
xor
fsubrl
stc
dec
ret
sbb
cmc
fiaddl
andb
sbb
push
std
mov
lods
lret
jmp
pop
or
or
mov
test
dec
nop
fcoms
inc
sub
mov
pusha
mov
cwtl
sbb
pushl
adc
and
and
inc
stos
stos
sbb
xor
mov
cmp
push
hlt
add
rorb
mul
xor
cmp
or
add
jg
add
and
cmp
or
repz
add
adc
cld
in
dec
push
xchg
mov
dec
jmp
cld
inc
mov
jge
inc
test
test
aaa
notl
fildl
nop
test
test
mov
rcrl
enter
inc
add
sbb
pop
in
ss
movsl
mov
and
and
cli
xor
sbb
mov
xor
adc
mov
bound
cld
cld
daa
xor
dec
sub
pushl
les
es
movsl
xchg
and
movsb
sbb
mov
je
loopne
test
out
movsb
test
push
push
push
jge
popa
push
or
mov
xchg
shrb
inc
xchg
repnz
out
xor
ljmp
bts
data16
add
mov
pop
pushf
test
mov
adc
or
push
xchg
in
dec
lea
mov
dec
xor
push
add
push
cwtl
dec
push
lods
push
jmp
mov
adc
pop
enter
xor
mov
nop
adc
test
nop
mov
mov
cwtl
adc
mov
xor
xchg
daa
cmc
lcall
jbe
add
clc
jns
add
pusha
xor
add
dec
movsl
cmp
jp
aad
mov
inc
xor
xchg
repz
cmp
xor
out
int3
fmull
iret
mov
sar
inc
mov
incb
and
repz
sbb
xchg
pop
xor
dec
rcrb
inc
pusha
std
int3
movsb
pop
test
mov
mov
clc
adc
push
enter
sub
fidivs
cli
push
fiadds
stos
sub
inc
test
data16
add
pop
pop
lods
cwtl
bound
dec
or
add
add
mov
or
addl
push
test
mov
paddb
add
xlat
add
jmp
adc
xor
decl
and
and
imul
outsl
pop
sbb
xchg
int3
mov
pop
jae
jl
aad
cmp
sahf
push
pop
mov
pusha
loopne
adc
shrl
ret
cmc
jg
dec
or
std
adc
mov
or
jne
clc
mov
test
mov
sub
adc
fcom
pop
pop
mov
test
cmp
int3
gs
je
inc
push
ficomps
cld
fisubrl
dec
test
pusha
movsl
je
in
out
hlt
push
adc
into
mov
cmp
test
pusha
jnp
test
push
push
jne
lods
mov
xor
in
jle
or
enter
or
clc
sub
orb
pop
cmp
loopne
push
jecxz
push
inc
shlb
insb
mov
orl
adc
lret
lcall
sub
lcall
sbb
icebp
push
ret
xchg
inc
mov
jl
jo
daa
mov
out
push
je
sbb
jmp
sbb
test
dec
ds
sbb
push
mov
daa
je
mov
xchg
insb
inc
ret
inc
and
xchg
testl
pusha
stos
cmp
rcrb
jge
mov
call
call
clc
fisubrs
les
adc
in
inc
adc
daa
insb
mov
sbb
data16
fdivrp
adc
xchg
out
cld
sbb
xor
popfw
loope
inc
add
add
stos
adc
xchg
ljmp
and
inc
shrl
dec
and
loop
loop
dec
push
dec
rclb
adc
out
mov
mov
call
or
mov
jo
inc
pop
pop
jle
mov
pop
rorb
fisubl
adc
mov
push
pop
popa
aam
xchg
push
test
adc
js
out
scas
xor
cmp
outsb
inc
shl
cmp
and
test
and
jle
sbb
fcos
or
mov
push
loopne
push
test
xchg
mov
mov
push
or
mov
ret
call
or
adc
sbb
adc
adc
scas
push
mov
call
dec
loopne
cld
adc
or
aad
imul
insl
subl
daa
add
js
cwtl
pop
and
push
inc
pop
sahf
test
test
push
rolb
inc
add
aam
inc
mov
mov
jne
mov
imul
rorb
loop
fsubrp
hlt
xor
pushl
es
test
movl
adc
jbe
imul
xchg
stos
jnp
mov
pop
movsb
cmp
mov
lods
add
push
out
inc
pop
add
adc
movsb
stos
enter
mov
push
mov
mov
push
push
pop
add
push
pop
xchg
ds
and
mull
imul
hlt
decl
roll
pushl
faddp
mov
cmp
popf
adc
inc
leave
addr16
je
mov
icebp
xchg
cmp
pop
cmp
paddb
pop
lock
leave
mov
lcall
cmp
je
addr16
and
jb
lods
xor
scas
loope
push
mov
push
outsb
pop
sbb
lds
or
add
test
loop
xchg
push
jle
movsl
decl
or
mov
push
jle
cmpb
inc
push
je
adc
sbb
xor
pushf
inc
mov
lock
sub
add
xchg
mov
xchg
loop,pn
inc
mov
fdivp
fisubs
and
inc
pop
or
test
adc
das
cmp
lock
add
add
jg
or
loop
mov
loop
add
sar
or
ds
mov
pop
xlat
rolb
shrl
pop
sub
std
mov
loop
and
movsb
icebp
adc
and
adc
movsl
scas
repnz
push
testl
inc
inc
jle
test
adc
cmp
adc
hlt
and
mov
mov
mov
addb
push
add
lret
mov
dec
nop
mov
decl
adc
decl
bound
xor
mov
clc
notb
cmp
adc
aaa
xor
pop
clc
call
jmp
jle
testb
lcall
dec
mov
jle
jp
movd
rclb
add
or
ficompl
and
adc
aam
cmp
into
mov
dec
mov
add
jp
inc
sbb
or
lahf
sub
cld
subl
mov
subl
hlt
test
icebp
sbb
shlb
mov
std
clc
jmp
jmp
test
cwtl
pop
cli
test
lcall
clc
inc
or
or
mov
adc
aad
mov
jb
cmp
rclb
or
bound
and
dec
int3
ret
mov
outsb
cmp
mov
add
push
scas
mov
gs
and
pusha
xor
push
adc
add
mov
inc
incl
mov
or
dec
mov
push
xor
shrl
mov
enter
mov
mov
push
iret
inc
lds
mov
pop
adc
and
mov
pop
jle
ret
mov
in
pop
stos
mov
call
xor
jne
movsl
add
dec
dec
jo
and
jl
sub
xor
xchg
or
ljmp
or
or
pusha
or
scas
push
sbb
divb
pop
push
xor
add
or
or
or
mov
xchg
es
or
dec
jo
enter
inc
and
fcoml
sbb
mov
sub
pushl
shlb
pop
lock
push
lret
gs
clc
adcb
jo
jo
pop
mov
clc
loopne
sbb
sub
repnz
pop
dec
int3
and
mov
dec
pop
mov
inc
insl
bound
shl
mov
pop
and
mov
sbb
xchg
rclb
fs
fsincos
mov
jl
es
mov
jmp
stos
pop
sub
orb
pop
add
xchg
mov
lret
or
cmp
hlt
push
sbb
mov
adc
sbb
or
xchg
adc
insb
and
lock
xor
inc
sub
add
imul
je
cmp
cmp
xchg
stos
mov
jle
icebp
mov
orl
lret
add
ret
mov
adc
das
adc
negl
adc
or
push
mov
rorb
jle
mov
push
lods
lods
loopne
aas
sbb
data16
out
inc
adc
shlb
add
add
lret
lahf
dec
jecxz
loopne
dec
adc
jle
sahf
nop
mov
push
es
pushl
incb
xor
arpl
adc
decl
mov
cmp
and
ds
ds
jg
xor
sbb
out
mov
jne
leave
mov
ljmp
js
sub
push
or
push
jmp
push
je
inc
call
mov
sahf
adc
adc
jg
and
adc
dec
push
inc
pop
mov
push
notb
stos
test
inc
je
test
cmp
loopne
pop
inc
fadd
inc
call
mov
push
sbb
int
jge
dec
outsb
add
mov
sbb
gs
cmc
mov
lcall
mov
mov
mov
cmpsb
out
cmc
pusha
xor
mov
je
cmp
insb
adc
scas
cld
xchg
xabort
push
or
push
cmpsb
cld
mov
adc
push
and
adc
cmp
bnd
mov
shlb
outsb
push
test
loopne
fmuls
fs
loopne
jno
lock
inc
stos
dec
and
cld
nop
lds
int3
mov
and
stc
mov
and
ljmp
cmp
sbb
sbb
push
mov
fadds
add
push
cmp
xor
xor
les
sub
roll
pop
sbb
or
cli
or
xchg
test
jl
push
lea
movsl
sub
shrb
mov
jne
aam
pop
push
enter
dec
fcmovnbe
mov
ljmp
and
sub
push
mov
in
mov
push
mov
shrb
inc
sbb
add
es
decl
push
mov
lret
je
dec
pop
push
mov
decb
cmc
inc
leave
ficoml
add
je
or
int3
xor
jle
into
roll
xchg
int3
je
ret
fidivrs
mov
fsubrl
aas
and
js
and
inc
dec
pushf
imul
movsl
push
nop
lods
pop
sub
mov
gs
test
jle
pop
xchg
or
mov
lea
je
insl
inc
mov
or
shl
pop
cli
outsb
movsl
or
inc
lock
mov
test
add
push
mov
or
enter
xor
jb
sub
inc
ret
mov
adc
fwait
xor
xor
adc
stos
mov
rcr
outsb
inc
stc
cmp
inc
or
xor
xorl
mov
or
push
add
sub
mov
dec
dec
sub
mov
push
push
bswap
mov
jl
test
pop
mov
push
add
es
cld
call
int3
cmp
pop
addb
js
xor
sub
add
mov
add
adc
adc
test
mov
push
add
mov
std
dec
cmpl
in
movb
inc
mov
and
sub
orb
inc
add
aaa
scas
test
pop
sub
aas
lret
dec
imul
sub
add
jle
mov
sbb
shlb
test
aad
fcoms
push
mov
or
call
and
and
inc
into
cwtl
push
mov
pxor
lret
cld
mov
loopne
cmpb
dec
jo
fimull
clc
insl
imul
or
mov
add
and
mov
rclb
roll
sti
add
mov
pop
xchg
jne
rorb
inc
xchg
out
dec
cs
add
push
mov
mov
cmc
sub
jmp
test
in
mov
push
mov
inc
push
dec
dec
adc
stos
subb
inc
cs
js
mov
adc
scas
push
jbe
inc
inc
lret
inc
or
js
and
ss
ret
mov
out
rcrb
mov
xchg
inc
loop
fisttps
add
movb
nop
and
or
loopne
inc
mov
push
mov
imul
adcb
cld
jmp
loopne
es
sub
enter
dec
mov
mov
test
dec
call
inc
inc
pop
test
or
and
adc
imul
add
movsl
or
enter
or
lock
xlat
dec
and
rclb
push
mov
and
aam
insl
inc
mov
daa
or
test
outsb
add
or
cld
mov
and
push
and
sub
out
outsl
jo
and
xor
xorl
pop
push
sbb
jmp
addl
outsl
stos
les
xchg
cmp
cmpsb
loope
das
ret
jne
cmp
test
pop
notb
xadd
adc
loope
add
mov
jge
mov
pop
xchg
adc
push
rorb
sbb
inc
push
fnstcw
repz
test
insl
or
and
es
mov
dec
loope
dec
xor
gs
inc
mov
aam
inc
setb
mov
sbb
mov
add
adc
add
xchg
fdivs
repnz
mov
xchg
out
adc
jp
dec
or
pop
imul
inc
push
and
and
loope
sbb
je
ret
mov
cld
mov
mov
fcomps
push
je
jl
lods
xchg
rclb
mov
cmp
push
add
add
xchg
pusha
push
sbb
and
jmp
in
dec
push
mov
sbb
jle
fldt
lcall
and
std
mov
rorl
xor
sub
out
pop
or
mov
sub
mov
notl
or
addr16
xlat
push
test
push
jmp
xor
icebp
cld
jbe
sbb
std
in
in
inc
cmp
xor
push
test
inc
stos
test
add
and
and
daa
les
mov
jl
mov
cs
mov
mov
or
sbb
pop
or
jecxz
add
stos
push
push
sub
js
pop
inc
push
mov
dec
pop
push
insb
call
lods
jmp
mov
insb
cmp
and
pop
push
and
or
push
int3
mov
test
sbb
cmp
mov
loopne
inc
js
sub
xchg
add
jns
imul
mov
dec
iret
push
mov
push
lock
fs
testl
xor
cmpsb
add
xor
pop
ficoml
mov
mov
push
mov
push
mov
scas
test
fdivl
add
andl
clc
push
mov
or
test
add
mov
push
push
mov
mov
nop
xor
testb
jl
mov
inc
mov
in
cmp
in
and
je
cmp
in
dec
aam
xchg
hlt
mov
push
inc
xor
adc
and
cmp
and
xor
jmp
sbb
add
test
scas
push
jg
lods
sbb
test
and
dec
clc
or
sbb
cld
inc
loopne
bound
test
fmull
pop
pusha
roll
lret
xorb
and
mov
mov
dec
ror
cli
push
pop
inc
pop
das
ret
stos
sub
pop
int3
inc
adc
push
inc
sub
jne
inc
sub
andl
insl
pop
add
jl
aam
xor
incl
aas
ret
pop
cmc
invd
inc
add
push
xorl
push
cmp
imul
mov
mov
fbld
inc
mov
je
and
ljmp
cmp
adc
pop
add
loopne
mov
dec
push
mov
or
dec
xor
xchg
add
xchg
icebp
dec
lods
jbe
hlt
adc
mov
mov
xor
jb
dec
clc
sub
push
divb
sbb
jl
sbb
add
mov
fs
inc
jg
xchg
mov
xchg
mov
movsl
or
pop
fdivrs
mov
aaa
insl
sbb
pop
addr16
sub
pusha
jmp
push
les
jmp
sub
std
mov
pop
call
inc
pop
aam
rcll
mov
movsb
shl
push
decl
mov
lret
push
enter
pop
inc
dec
jmp
bound
loop
mov
je
clc
int3
xor
jecxz
lret
cltd
sub
mov
lcall
sub
inc
xor
sub
cmpsb
jo
out
xchg
movl
cmp
hlt
das
mov
push
or
push
addl
testl
xchg
add
add
jbe
or
inc
pop
fimull
pushf
push
or
sub
xor
incl
fadds
test
or
inc
shlb
enter
clc
dec
sbb
dec
push
push
inc
ss
in
pop
test
imul
add
pop
cmp
mov
int3
lock
xor
cmpsl
mov
sub
in
div
pop
adc
push
xchg
sub
aam
imul
lds
xor
dec
and
lahf
xor
loope
clc
pop
pop
out
xorl
jge
mov
jne
sbb
and
xor
pusha
movsl
popf
fcom
mov
push
dec
mov
sti
arpl
fstp
shrl
cmpb
xor
in
jo
pop
adc
cltd
call
mov
mov
rol
dec
xor
cs
js
xchg
inc
icebp
mov
mov
pusha
add
cmp
stc
mov
push
or
adc
ljmp
ror
outsb
push
push
addl
test
aam
enter
aas
add
inc
rorb
stc
lahf
fs
stos
and
inc
shrb
jge
or
xchg
inc
jl
es
mov
push
or
sub
jl
test
sti
bound
mov
push
mov
jo
add
mov
fdivrs
cmovns
rolb
rol
clc
sbb
int
xchg
inc
nop
loope
push
and
adc
jne
movsb
cmp
je
subb
pusha
push
push
js
push
mov
not
push
xor
gs
test
inc
add
bound
fcmovb
pop
test
divb
dec
mov
sub
out
add
fistl
cmpsb
pop
ret
add
int
add
clc
loop
aad
mov
mov
arpl
dec
pop
shrb
and
mov
cmp
add
lock
loope
mov
jno
sub
cmp
sub
sbb
dec
mov
sub
pop
pop
sub
sub
roll
pop
movb
push
pop
lea
orl
je
sbb
repz
lds
ljmp
call
or
sbb
call
push
sub
or
pop
adc
push
sbb
aas
add
sbb
jae
mov
ret
bound
mov
pop
insl
dec
icebp
rcll
inc
push
adc
rcrb
adc
adc
loop
and
out
test
pop
fidivrl
add
dec
xor
ffree
test
aam
add
cmp
outsl
add
fadds
imul
clc
push
loopne
add
test
inc
and
cmpsb
int3
andb
fimuls
movsl
das
pop
push
les
jmp
pop
mov
push
fdivs
paddd
adc
push
and
cmp
aaa
pop
dec
or
aad
shlb
xor
in
clc
xchg
xor
flds
fiaddl
ljmp
js
mov
jae
retw
lock
js
pushf
add
cmp
pop
sub
mov
jg
hlt
je
cltd
xchg
cs
fs
xchg
adc
outsl
push
pushf
je
jle
test
lcall
in
movsl
and
rorb
push
or
jb
xchg
dec
sub
orl
scas
inc
loope
and
or
sbb
xor
cld
mov
mov
push
ret
in
xchg
xor
push
add
cmc
es
xchg
mul
add
loopne
rcll
ret
enter
test
push
and
jge
mov
xor
les
out
cmp
icebp
sbb
push
sbb
or
insb
or
loopne
mov
outsl
rolb
movsb
mov
adc
lea
movsb
pop
jecxz
imul
hlt
mov
inc
push
xchg
call
or
clc
int
call
sbbl
add
inc
adc
into
inc
mov
shl
dec
enter
loope
jp
ret
cmp
xchg
enter
nop
jle
jmp
test
and
push
fadd
enter
jo
push
stos
gs
rorb
sbb
push
loopne
sbb
jne
cwtl
push
lock
mov
incl
jb
clc
test
xorb
xor
pushf
aaa
inc
clc
inc
sub
jmp
xchg
aaa
aad
pop
jo
pop
push
nop
mov
gs
pop
adc
test
mov
inc
and
push
lcall
outsl
inc
xor
mov
push
adc
push
or
adc
mov
andb
cli
sub
dec
js
jg
addl
fcoms
je
out
loope
inc
mov
xchg
cmp
je
mov
mov
mov
test
adc
lock
in
or
fistl
pusha
mov
repnz
push
sbb
call
push
js
pop
sbb
fdivl
test
dec
cmp
out
nop
ss
mov
test
jae
mov
cmp
xor
jmp
ret
jnp
cmc
rcr
push
push
ret
or
fwait
mov
mov
cmp
push
sbb
les
pop
push
dec
jecxz
inc
xchg
enter
roll
mov
scas
or
mov
cli
add
add
mov
sbb
or
insb
jp
ret
je
xor
outsl
add
xchg
push
jmp
jmp
dec
lds
add
mov
lock
xchg
ret
jne
cmp
iret
add
hlt
je
call
xor
push
lock
pop
test
in
lea
popa
cld
test
and
fs
push
dec
xor
or
call
shr
call
lcall
inc
dec
fsub
imull
cmp
fucomi
dec
or
js
sub
push
push
shlb
pusha
mov
clc
adc
xchg
lods
mov
int3
mov
xchg
xor
test
mov
xchg
inc
xchg
lods
and
push
cmp
mov
pop
sbb
ret
movsb
mov
add
hlt
jle
pop
lods
dec
test
dec
jecxz
push
mov
xchg
push
aas
outsb
push
mov
xchg
pop
xor
and
inc
fsubrs
enter
out
rcl
movsl
andb
add
je
inc
ret
imul
pushl
mov
push
sub
lock
inc
xor
rcr
mov
and
hlt
fisubs
adc
daa
and
and
inc
adc
fwait
push
or
hlt
dec
std
lea
push
dec
mov
jmp
enter
icebp
xor
inc
ret
mov
inc
pop
lretw
xchg
jp
push
ret
or
in
cmp
push
inc
add
add
ljmp
adc
or
xor
push
xor
mov
push
fildl
jb
jle
mov
sub
sbb
add
lret
adc
ficomps
movb
xorb
loopne
jo
test
mov
push
gs
inc
pop
cmp
xchg
dec
dec
and
xchg
rolb
add
add
push
inc
cld
decl
inc
lea
xor
mov
call
loopne
in
pop
es
fdivrl
or
ret
iret
inc
mov
pcmpeqb
jmp
add
mov
aam
cmpl
ja
flds
int3
pop
push
sbb
lock
mov
inc
pop
mov
cmp
inc
pop
jbe,pn
push
and
es
mov
push
mov
pushf
mov
sub
out
enter
add
movl
sbb
push
sbb
add
stos
inc
sub
stos
sub
dec
adc
add
cmp
mov
scas
movaps
outsl
sub
lret
inc
mov
mov
push
push
cmp
inc
fcoms
fildll
mov
or
stos
mov
and
mov
mov
adc
bound
push
mov
dec
ljmp
mov
push
lret
and
clc
std
ss
lods
test
rorb
insb
test
inc
pop
in
shl
out
andb
push
push
lret
je
mov
ja
mov
pop
inc
and
xor
mov
pusha
mov
push
add
das
or
ficoms
lea
sub
adc
mov
inc
sar
mov
testb
leave
mull
shlb
imul
sti
arpl
orb
xchg
fdiv
ret
out
lcall
aam
sbb
push
push
mov
fidivs
lock
nop
inc
call
aam
adc
repz
jmp
push
pop
xor
xchg
enter
dec
ds
test
fsubrp
push
jbe
sbb
fadd
data16
lock
pop
cmp
lods
cmp
push
mov
add
pushf
ret
pop
fs
std
jb
testl
push
jge
hlt
imul
adc
cmpsb
test
lock
pop
ret
push
sbb
push
aas
jle
mov
cmp
jp
xor
jo
cld
inc
mov
mov
inc
pop
push
les
mov
es
negb
insl
rcr
add
jle
aam
jbe
mov
dec
dec
or
lret
test
jmp
or
adc
jp
inc
add
mov
mov
sar
add
outsl
adc
rolb
inc
sarb
gs
and
test
cmpb
adc
or
push
fs
mov
loop
push
xor
jge
add
push
mov
rolb
fs
pop
cmp
js
cmp
and
mov
test
cli
mov
cld
mov
xor
mov
cmp
aam
sbb
add
cmpsb
test
cmp
inc
addl
nop
lcall
in
ficoml
cmp
cld
int
rcrl
jle
clc
pop
and
repz
test
into
xchg
push
addl
cld
ret
call
jae
mov
mov
jb
jmp
push
mov
aam
push
nop
cld
fsubl
mov
xchg
sbb
cmp
and
out
shrl
and
mov
in
or
inc
add
movsb
sub
inc
adc
loopne
in
add
dec
or
dec
sbb
xchg
or
int3
cmc
ja
add
jmp
hlt
jne
xor
cvtps2pd
push
pushf
push
cld
fildl
loopne
shrb
push
cmp
sub
adc
fcompl
loope
incl
test
pop
mov
add
pusha
jmp
nop
out
leave
movsb
pop
in
test
pop
outsb
pushf
out
fdivl
mov
fidivrs
inc
sbb
outsb
inc
sub
or
test
shrb
incb
jmp
adc
xchg
jbe
bound
inc
std
or
push
ljmp
dec
sbb
aad
int3
out
and
stos
adc
mov
cld
xchg
fdivp
cmp
mov
inc
inc
std
je
daa
mov
pop
mov
or
popf
int3
push
gs
jbe
loope
dec
clc
data16
clc
and
adc
mov
orl
push
enter
lret
push
inc
mov
pop
xor
jmp
popa
pop
outsb
cs
lds
xor
xchg
and
pop
mov
in
fnstenv
leave
jnp
pusha
shr
jmp
les
jno
jbe
push
stc
push
mov
test
stos
sbb
jne
ret
aam
pop
jecxz
call
int3
movsb
push
jmp
lds
xchg
dec
cmp
mov
push
cmp
inc
or
popf
arpl
lods
adc
cli
or
lods
nop
jge
or
sbb
dec
jle
rorb
cld
or
mov
push
addl
xor
nop
lret
mov
xor
push
adc
in
shlb
jb
pop
pop
sbb
sbb
stos
nop
jno
test
push
jg
pop
and
cmp
repz
inc
push
sbb
pop
xchg
pop
add
outsl
jp
sub
or
jo
adc
mov
and
rcrb
add
orl
test
xchg
mov
sbb
lods
enter
or
stos
dec
jle
ficoms
xchg
loop
inc
flds
pop
test
pop
inc
sbb
mov
add
les
push
pop
push
insl
or
mov
in
icebp
and
mov
jo
inc
adc
or
mov
cmp
clc
dec
inc
sbb
push
das
cld
aaa
and
jle
enter
push
les
cmp
push
and
dec
add
add
fdivr
fcomip
int3
xor
scas
insb
add
push
add
insb
ss
push
xor
cmp
jge
test
or
add
cmp
loopne
fwait
mov
add
popf
sahf
sahf
mov
dec
pop
cmpl
jbe
mov
adc
inc
adc
fmuls
push
inc
pop
or
shr
scas
dec
into
adc
test
rclb
jle
loope
rorl
aaa
cmp
sbbb
push
fdiv
jne
popf
insb
loop
js
pushl
pop
mov
lea
loopne
and
call
mov
sub
xchg
movsb
hlt
cmp
mov
outsl
clc
pop
mov
sbb
cmpl
mov
or
push
bound
mov
adc
popf
and
mov
pop
jb
mov
jne
fcmovb
insl
push
xor
inc
inc
popa
mov
inc
dec
xlat
enter
les
xor
mov
ljmp
aas
lea
jmp
push
test
lods
or
and
adc
push
loopne
leave
push
mov
push
pop
or
insb
lods
adc
cli
xchg
push
or
in
in
mov
sarb
jmp
dec
add
adc
das
es
push
sub
ljmp
fisubrs
jns
ds
xor
cmp
clc
dec
mov
rolb
sub
jae
fbld
xor
add
xchg
test
fstpt
xorl
sub
test
iret
imul
and
push
and
out
xchg
sbb
mov
sbb
je
xor
push
lods
add
jbe
or
nop
les
and
stos
adc
cmp
sub
scas
mov
push
inc
jno
loop
insb
or
ret
gs
push
or
pop
xor
imul
inc
jl
mov
js
sbb
xor
inc
addb
or
sahf
mov
push
and
cmp
out
int3
xchg
rolb
and
push
sti
adc
or
mov
in
push
aad
mov
add
add
inc
dec
stos
xor
jmp
ss
ljmp
inc
pop
push
lods
mov
xorb
mov
fwait
pop
xchg
push
imul
incb
cmp
ds
or
fsubr
in
mov
fiaddl
ljmp
addl
mov
add
pop
clc
mov
js
lcall
das
jmp
shrl
push
push
jp
inc
dec
ljmp
pop
das
pop
mov
inc
lret
mov
or
push
in
xchg
sub
icebp
fcoms
jae
int3
push
xchg
movsl
pop
xorb
loopne
nop
push
fsubrl
cwtl
xor
mov
push
das
cmp
int3
test
bswap
aam
lock
testb
inc
into
push
call
and
test
pop
pop
sbb
in
adc
xchg
fldl
sub
shrb
insl
fbstp
mov
call
jo
int3
outsl
jo
pop
insb
or
mov
and
ret
mov
dec
dec
int3
gs
scas
gs
mov
pop
jno
fisubrl
outsl
sub
gs
imul
add
adc
idiv
insb
dec
dec
fnsave
subb
jl
data16
gs
insb
test
pop
and
inc
sar
pop
push
cwtl
add
and
dec
cld
test
xor
dec
clc
push
sbb
adc
scas
loope
out
add
ss
pop
loopne
add
sahf
push
mov
xorb
inc
mov
test
fcomi
leave
clc
add
lods
cmp
mov
mov
pop
or
test
incb
inc
cmp
fadd
xchg
add
mov
adc
inc
cld
test
sub
jp
and
cmp
pop
jmp
inc
xor
mov
ljmp
mov
xlat
push
shlb
lods
cld
push
add
jmp
push
pushf
adc
in
xor
xor
cld
mov
fidivrs
mov
lock
inc
lods
jl
cmp
je
enter
mov
push
aam
xor
cmc
mov
iret
inc
push
outsb
add
or
adc
add
arpl
sbb
shrb
dec
and
dec
push
push
fmul
loopne
es
pop
jmp
test
mov
aaa
jb
imulb
inc
orl
push
pop
jmp
mov
push
sbb
inc
hlt
push
stos
or
sbb
adc
push
insl
and
inc
and
repz
mov
cld
psubsw
jb
inc
inc
pusha
call
clc
dec
adc
mov
add
jne
in
dec
mov
add
sub
jecxz
and
or
ret
xchg
dec
adc
icebp
or
clc
pop
dec
lret
mov
stc
movzbl
xor
push
insb
and
scas
or
shrl
test
xchg
or
or
jg
sub
mov
cmpb
xchg
xor
inc
push
jmp
xchg
mov
ret
je
mov
dec
inc
pop
ret
adc
and
add
fdiv
mov
jmp
lret
adc
push
je
andl
push
pop
add
mov
mov
add
test
addl
cwtl
sbb
loope
cmp
mov
mov
pusha
add
mov
ljmp
mulb
and
test
mov
push
addr16
xchg
repnz
mov
dec
test
add
sbbl
loopne
int3
add
inc
push
fisubs
outsb
push
ds
pop
pop
movsb
and
leave
fs
mov
hlt
ljmp
jl
dec
pop
sbb
fcom
xchg
es
or
pushw
je
sbb
into
ret
out
push
and
xor
ja
sub
test
sub
clc
mov
cmp
repnz
mov
stc
test
mov
test
mov
stc
pop
pop
sbb
xchg
mov
ficoms
loope
jae
add
orb
jo
or
jg
adc
push
and
test
inc
pop
xchg
or
and
pop
ss
xor
add
and
adc
pop
push
xchg
xor
or
ljmp
fsub
not
stos
xchg
dec
inc
je
enter
cmp
arpl
mov
and
jmp
js
jne
in
clc
psllq
dec
add
int3
jae
popf
cli
inc
mov
pushf
push
loopne
ljmp
dec
pop
out
andl
je
add
mov
repnz
call
mov
daa
mov
cmpsl
ror
lds
or
push
dec
push
fimull
das
pop
movsb
jbe
aas
add
sub
inc
scas
xor
mov
inc
pop
data16
lods
sbb
mov
dec
xchg
inc
xor
lcall
call
shrb
adc
adc
mov
push
inc
and
movsb
in
dec
rolb
test
icebp
mov
mov
mov
movsb
loopne
loop
sar
pop
pop
adc
je
mov
rorb
cmp
pop
lea
inc
cli
mov
std
pushf
rcrb
addr16
mov
test
jmp
pop
push
adc
mov
sub
mov
adc
inc
pop
push
and
sbb
dec
inc
and
es
insb
sbb
push
lock
clc
pushf
test
rcll
push
call
or
pop
and
test
stos
add
inc
cli
rorl
add
mov
mov
mov
sti
jbe
adc
notb
mov
inc
loope
mov
add
loope
inc
xchg
xchg
jno
jbe
or
push
or
mov
loope
push
mov
testl
sub
out
aam
mov
int
repz
fdivrp
cmp
outsl
jl
ficomps
xchg
or
dec
and
mov
subl
xor
pop
decb
push
shl
test
std
out
arpl
ja
loopne
xchg
push
pop
add
test
aam
je
jbe
aaa
push
pop
mov
xchg
cli
mov
clc
pop
outsb
sbb
push
mov
adc
lds
les
or
mov
xchg
mov
imul
or
sub
test
aaa
pusha
cmp
rclb
mov
movsb
push
rol
outsb
loop
pop
lret
subl
jl
leave
jbe
inc
insb
test
add
add
stos
inc
lock
rolb
test
inc
call
test
push
pop
adc
gs
fwait
popl
divb
and
and
loopne
loop
fcomps
fsubrs
cwtl
lea
mov
xchg
mov
inc
cmp
and
push
out
stos
sub
test
inc
or
rcrl
xor
aam
lds
rorl
fdivrp
jb
hlt
inc
cmp
sbb
cld
decb
pop
or
add
xor
fmul
push
pop
inc
push
cld
test
or
mov
cli
mov
ds
mov
cmpsb
jg
pop
or
inc
leave
mov
xor
or
dec
loope
or
data16
pop
stos
jo
and
inc
test
push
push
xor
add
jmp
inc
push
jne
ds
dec
push
data16
test
mov
adc
ljmp
stos
and
mov
and
jno
sbb
ds
push
xchg
add
movsb
sub
fwait
dec
sarb
push
add
insb
es
push
xchg
pop
and
adc
adc
or
pop
inc
and
cmpsb
jb
js
rorb
cmpsl
pop
add
inc
jecxz
negl
inc
mov
das
cmp
mov
ret
cmpb
mov
mov
xchg
and
xor
jo
fidivrl
movsb
sub
decl
test
cmp
out
dec
mov
sbb
outsb
aaa
sub
inc
loopne
or
mov
or
or
xor
aad
clc
xor
inc
pop
stc
dec
data16
dec
shl
fwait
pop
jmp
xchg
or
sub
sbb
dec
or
lret
lock
adc
sub
hlt
push
imulb
addb
push
lods
add
or
popf
clc
lock
or
push
pop
inc
rorb
scas
sub
mov
mov
mov
xor
mov
das
xchg
addl
lods
mov
or
test
lods
daa
mov
jl
int3
sbb
mov
leave
shlb
test
cmp
pop
cmpl
sahf
and
outsb
or
xchg
mov
sti
xorb
and
out
pop
mov
add
push
inc
insl
cli
insl
and
cmp
test
inc
ljmp
jmp
add
ljmp
in
sarb
push
and
xchg
fists
push
mov
add
pop
or
adc
fcomps
mov
inc
insb
rorl
pop
sahf
push
jl
test
mov
movsb
jb
fisttps
in
repnz
loop
notl
cld
add
jbe
in
test
repnz
sub
test
jmp
push
push
mov
lea
mov
push
or
cmp
ds
xor
hlt
jmp
xor
inc
roll
stc
sarl
add
and
or
sti
add
jne
adc
push
clc
lods
pusha
adc
lret
into
scas
addb
jg
mov
mov
decl
mov
test
push
adc
incb
mov
inc
ss
dec
sar
pop
and
mov
int3
test
pop
sar
sarb
cmp
mov
or
xor
adc
cmp
xchg
mov
push
pusha
push
inc
dec
dec
ret
lock
je
call
mov
out
loop
daa
mov
push
push
xchg
pop
jp
hlt
loope
pop
rclb
fstpl
cmpb
outsl
lcall
ds
in
and
and
int3
div
lcall
in
incb
xlat
cs
ds
cli
loopne
xor
ret
iret
and
push
sub
icebp
or
paddd
pushf
ret
stos
add
sub
mov
test
cld
sub
dec
fidivrl
mov
and
ds
not
cmp
push
pop
dec
imul
leave
mov
inc
add
xor
xor
fimull
push
inc
cmp
push
push
outsw
add
das
push
shlb
mov
inc
mov
inc
xchg
lods
and
add
cli
add
sub
push
ds
out
data16
data16
inc
adc
ljmp
lds
testb
aas
fidivrs
mov
sub
js
pop
sub
jl
adc
add
pop
or
xor
shlb
cmpsb
add
test
pop
pop
push
jns
mov
orps
nopl
mov
cmp
lret
sub
cwtl
push
xchg
insl
pop
mov
cmp
sbb
mov
mov
push
xchg
outsl
mov
mov
lret
add
mov
xor
shr
inc
push
fwait
das
adc
rclb
movl
mov
sahf
and
add
push
addb
jne
pop
int3
xor
shr
cmp
push
inc
movsb
call
leave
inc
shlb
sbb
adc
std
mov
or
jne
lock
push
inc
incb
mov
sub
jne
test
pop
testl
xor
mov
je
in
mov
fs
add
call
pop
inc
adc
add
ret
incl
sub
inc
add
ds
stc
dec
pop
dec
repnz
je
add
bswap
jae
ret
pop
call
fs
stc
negb
cmp
gs
je
movsl
inc
jae
dec
test
sub
pop
sti
pop
sbb
enter
fsubs
add
mov
mov
or
add
push
aad
or
jecxz
mov
jmp
neg
shl
bound
and
jmp
fs
lods
jns
mov
shl
ja
inc
call
mov
inc
add
xor
add
outsb
pop
in
add
test
adc
mov
cmp
ljmp
subl
push
fstps
rcrb
mov
popa
xor
xor
and
xor
and
add
dec
les
decl
out
jae
lods
cmpsb
into
scas
mov
adc
or
mov
pop
or
add
inc
cld
mov
dec
fldcw
cmp
jno
add
mov
mov
push
or
cltd
test
lea
mov
insl
add
adc
mov
xor
aam
or
jecxz
out
pop
jbe
int3
inc
or
mov
lock
xor
or
sarb
decb
rorl
insb
xor
add
rcl
addb
cmc
fisttps
push
push
fwait
test
pushf
add
ds
lret
lret
push
ret
inc
push
dec
repnz
lret
std
jg
sbb
sbb
and
hlt
sub
mov
xor
sarb
push
push
inc
sbb
lea
push
jo
mov
test
jo
in
rolb
xor
imul
pop
xchg
loope
ret
nop
mov
lcall
jle
int
fdivrp
pusha
test
add
movsb
testl
sub
insl
jp
nop
xor
dec
cs
popa
xor
ficomps
jge
shll
cmp
lds
jecxz
mov
adc
or
or
mov
xor
int3
inc
sarb
fwait
mov
inc
mov
movsl
and
inc
decl
pusha
push
push
lods
inc
cld
gs
inc
sarl
pop
js
inc
cli
add
mov
push
sub
add
xor
data16
call
push
add
addb
cli
pop
das
and
inc
push
cmp
ss
je
test
aaa
leave
fidivs
inc
js
pushf
es
add
shll
mov
movsl
cmp
loopne
test
xlat
sub
jb
sbb
sub
popa
in
outsl
pop
inc
add
stc
cmp
sub
xchg
mov
js
les
cmp
lea
cld
inc
jg
push
nop
adc
sarb
je
mov
pop
mov
sub
mov
and
push
int3
add
sub
or
in
cmp
add
pop
aam
pusha
pop
mov
ret
add
pushf
call
sbb
dec
addr16
cld
jmp
insb
dec
add
pop
adc
add
and
cmp
test
movsl
ss
mov
sbb
loope
icebp
add
jno
mov
adc
lods
push
les
out
mul
enter
add
inc
hlt
adc
popa
sti
not
je
dec
rolb
scas
dec
pushf
movsl
dec
cmp
adc
fchs
jmp
enter
jbe
jb
mov
mov
stc
adc
mov
push
push
sub
push
data16
movsb
mov
es
les
andb
outsb
or
mov
lods
movsb
cmp
fs
call
lds
and
int3
xor
jg
clc
mov
adc
lcall
adc
dec
andl
adc
mov
xlat
gs
addb
mov
add
orl
adc
jmp
mov
pop
inc
pop
jne
inc
outsb
insb
int
sbb
test
es
sbb
ficoml
add
dec
mov
xor
imulb
call
or
sarb
and
in
andl
int
pmaddwd
add
aaa
scas
dec
arpl
ret
adc
inc
mov
jbe
repz
inc
stos
mov
test
aam
push
jo
pop
fldt
sbb
mov
mov
push
scas
enter
cmp
fistps
xchg
or
aaa
cld
arpl
add
inc
test
sbb
inc
mov
cmpsb
jecxz
repnz
scas
dec
shlb
xor
nop
push
inc
xchg
pop
jns
iret
sbb
call
push
or
les
mov
cs
andb
arpl
das
xchg
xchg
inc
jge
ret
xchg
movsb
sub
shlb
pop
inc
cmp
or
in
sub
xor
dec
add
jbe
pop
outsl
scas
and
int3
inc
jne
push
add
add
or
add
repz
aaa
cmp
mov
push
loopne
cmp
mov
cmp
push
movl
shlb
mov
stos
xchg
add
scas
and
clc
hlt
push
push
scas
xor
sub
add
or
add
xchg
ficoml
pop
sub
push
add
sbb
or
or
sbb
popa
add
dec
in
or
push
cmp
cmp
lea
sub
insb
or
push
dec
cli
pop
dec
pop
call
inc
cmp
aad
add
push
cld
mov
xor
mov
mov
lds
or
xlat
mov
pop
add
rorb
jmp
inc
mov
xchg
repnz
sbb
add
sub
jg
loopne
fs
inc
jg
hlt
add
pop
xor
out
inc
cmp
call
cmp
add
lock
add
mov
psubb
cld
xorb
test
add
sahf
loope
test
sbb
add
inc
push
or
movsl
nop
loope
cmp
fwait
jmp
pop
or
mov
fistpl
push
jne
movsl
and
push
ja
mov
push
mov
mov
scas
add
dec
sti
xor
lea
push
jnp
gs
sbb
jo
les
mov
lock
dec
inc
mov
outsb
mov
inc
outsl
add
mov
ljmp
push
insb
js
pop
add
std
es
inc
adc
adcl
mov
add
outsb
dec
sub
es
push
testb
aaa
sub
out
sbb
orl
loopne
lock
add
std
sbb
outsb
inc
or
mov
and
push
fwait
jb
add
push
ret
loopne
mov
jmp
and
jge
add
hlt
xchg
mov
repnz
adc
shlb
cmp
mov
mov
inc
loopne
pop
frstor
icebp
add
cmp
xchg
pop
cli
mov
xorl
and
test
add
outsl
inc
inc
inc
xchg
aas
add
and
push
outsb
data16
rclb
fimuls
or
test
loop
mov
shll
push
dec
scas
xorb
push
mov
jl
push
xor
push
mov
popa
popf
push
mov
inc
jmp
mov
pop
aam
clc
xchg
movsb
flds
xor
outsb
stos
insl
mov
sub
dec
sub
lds
push
adc
inc
test
push
jb
cmp
out
add
cld
and
mov
sub
push
and
and
inc
mov
xor
add
popa
xchg
inc
ret
jle
insl
fstpt
sti
jmp
insl
testb
insb
mov
cmp
sbb
ret
fldcw
mov
sbb
or
push
sbb
xor
jl
jp
pop
stc
sbb
jle
mov
and
mov
jmp
inc
cwtl
cmp
jmp
push
or
push
push
xor
or
add
pop
jb
scas
inc
lcall
mov
push
or
mov
sbb
or
js
or
lret
push
mov
pop
adc
pop
mov
xchg
rcrl
and
pusha
or
ljmp
mov
loope
mov
into
mov
nop
aad
cmpb
movl
or
sbb
stos
or
sti
inc
lods
jg
jle
mov
dec
add
mov
inc
xor
or
enter
mov
sar
mov
fistpll
lea
outsl
movsl
ficoml
aas
sub
xor
lods
outsl
sbb
cmp
push
lcall
gs
and
and
xchg
call
add
cs
jmp
lea
mov
cli
rolb
loopne
sub
shlb
cwtl
adc
pop
fs
or
aam
mov
mov
mov
ret
stos
subb
nop
rorl
sbb
les
mov
lret
gs
out
pop
cmp
or
sub
aam
jno
int3
xor
fs
pop
push
mov
sbb
mov
adc
clc
js
push
mov
pop
dec
jge
mov
inc
ds
or
stc
stos
mov
dec
rorb
xor
mov
call
lcall
pop
imul
or
js
sub
je
push
int3
push
int3
and
cltd
inc
xchg
ss
jo
ljmp
das
mov
push
rclb
jecxz
loop
add
cmp
int3
pop
je
and
dec
push
push
add
push
dec
xchg
or
scas
fwait
xor
test
adc
xor
adc
xchg
mov
popf
inc
jo
jmp
xor
cmp
pop
repz
adc
sub
xorb
adc
add
jg
decl
xchg
push
add
cld
jl
rep
cwtl
mov
je
addr16
wbinvd
or
push
jle
mov
or
clc
adcb
push
shrb
ficoml
aas
fildl
xor
loopne
addb
test
push
jecxz
push
je
add
or
cmc
cmp
sbb
sub
and
and
test
jns
push
negb
je
dec
je
sahf
push
dec
jp
push
pop
cmpb
aaa
sub
insb
add
jmp
add
pop
subb
jb
adc
mov
jg
cmpb
andl
adc
inc
push
call
push
popa
mov
pop
jb
xor
iret
add
fildl
testl
clc
sub
dec
ret
xchg
pop
mov
mov
movsb
test
sub
adc
jp
push
fbstp
rorl
adc
xchg
push
add
shl
push
stos
fisubrl
add
ljmp
mov
mov
jmp
push
cmc
push
push
andb
into
lea
push
test
fstpt
test
mov
ja
push
loope
add
ret
mov
sub
mov
sbb
mov
cmpsl
fdivrl
inc
fmuls
roll
outsb
ss
lret
imul
pop
or
push
gs
xor
sarb
cld
inc
add
je
pop
mov
out
push
pop
push
imul
pusha
mov
aad
cmpsb
outsb
stos
test
fisubrl
pop
mov
mov
mov
or
mov
push
stos
lret
stos
test
outsb
mov
shlb
xlat
ds
incl
push
mov
inc
sub
add
mov
int3
add
jp
cld
pop
cld
sub
inc
insb
sbb
jno
mov
js
push
xor
enter
test
addl
mov
fiaddl
mov
dec
fs
inc
bound
mov
or
notl
call
mov
sub
movups
test
cmc
xchg
stos
xor
adc
je
inc
loop
in
push
jmp
mov
test
dec
pop
cld
push
mov
pop
cmp
fidivl
insl
mul
mov
testb
call
lea
cmp
xor
popa
loope
pop
inc
and
and
and
dec
je
sbb
rorb
add
xchg
push
hlt
int
lods
int3
xchg
push
loope
call
das
jno
xor
cwtl
dec
push
idivb
xchg
ret
std
lcall
mov
sub
push
cmp
push
sbb
add
ficomps
jge
test
in
add
std
popl
cmp
mov
jns
and
aas
lret
out
mov
lock
push
xor
cli
jno
pop
inc
hlt
jne
push
mov
adc
sbb
mov
into
sbb
pop
clc
add
mov
int3
mov
inc
ja
test
ss
and
sbb
mov
scas
fcompl
adc
add
es
sti
cmp
push
lock
imul
cmp
subl
and
mov
jp
cmp
jmp
js
fisubl
inc
pop
adc
je
jmp
lods
mov
mov
adc
xchg
and
std
aam
add
jle
mov
in
xor
test
xor
mov
mov
lea
jl
ret
loopne
sub
outsb
push
adc
inc
aas
rol
mov
andl
into
jne
clc
sub
out
push
mov
ja
icebp
xchg
sub
sub
push
xchg
adc
push
inc
xchg
push
hlt
sub
lods
mov
pop
stos
and
adc
leave
outsb
sbb
int3
sub
loop
pushf
mov
cwtl
ss
jge
in
testb
lea
add
add
insl
xchg
and
enter
test
xchg
subb
loopne
ss
hlt
prefetch
pushf
push
insl
mov
add
out
ret
push
or
lea
lods
inc
enter
jle,pn
outsb
mov
nop
out
fs
dec
push
or
call
cmp
dec
jbe
cmp
ret
je
negb
jp
push
xchg
inc
inc
xor
and
mov
les
rol
cmp
dec
mov
push
mov
sub
cmp
xchg
jo
gs
pusha
jno
in
insb
add
je
sub
push
push
dec
jg
push
jnp
mov
aas
in
rcr
imul
sub
adc
incb
scas
xchg
aam
hlt
cli
lea
pop
arpl
test
pusha
push
jl
add
mov
hlt
and
rcr
repz
inc
mov
add
addl
xor
sub
cmpsb
enter
cmp
icebp
mov
adc
hlt
mov
iret
inc
push
jne
popa
inc
pushf
add
adc
fs
push
faddl
cwtl
sub
xor
in
bound
rclb
xor
faddl
jle
sub
and
xchg
push
or
sbb
test
push
test
hlt
test
xchg
mov
or
push
xor
insb
mov
dec
push
push
pop
pusha
mov
add
and
sub
or
inc
or
pop
lock
lock
test
adc
ss
pop
sbb
lods
sub
mov
pusha
hlt
push
sbb
adc
add
mov
and
dec
add
and
out
test
push
cmp
inc
std
out
or
dec
sbb
pop
add
push
cmpsb
mov
stos
clc
mov
ss
dec
add
adc
or
and
xor
cmp
mov
negb
mov
popf
pop
xlat
fildll
outsl
int3
enter
cmc
mov
mov
lds
int3
inc
mov
out
dec
rcrb
mov
in
mov
fs
sbb
sub
push
mov
lret
sbb
add
push
js
add
or
push
sti
outsl
outsl
pop
pusha
xor
mov
or
rep
enter
mov
sub
add
mov
push
pop
bound
adc
mov
insb
and
testb
lcall
lock
ds
xchg
xor
cmc
xor
fmul
sahf
xor
subl
mov
pusha
je
jbe
and
dec
add
inc
js
mov
add
add
divl
js
shll
adc
add
mov
mov
loop
sarl
push
mov
xchg
pop
je
mov
popa
aam
sbb
popf
fidivrl
arpl
loope
mov
rolb
xor
cltd
mov
rorb
sub
andl
or
nop
mov
push
shrl
lock
push
test
dec
jo
jno
cmp
ss
push
sub
lea
or
out
fs
lahf
push
fcoml
pop
xor
push
mov
add
aas
daa
jo
aaa
mov
fmuls
sub
or
xor
adc
imulb
add
push
lods
mov
lahf
mov
popa
in
aaa
mov
hlt
cli
mov
xor
shll
out
adc
push
rolb
pusha
aam
sbb
sar
adc
mov
mov
push
ss
push
add
mov
ret
mov
push
push
shlb
pminsw
add
sub
movsl
test
or
pop
lock
sbb
jno
push
iret
les
add
mov
push
loope
xchg
sbbl
sbb
neg
sub
enter
dec
push
cmp
incb
fcmove
mov
je
add
cltd
jp
sarb
bound
decl
cmp
ret
add
in
rcrb
or
jbe
mov
stc
mov
mov
push
pop
dec
adc
ret
mov
xor
push
cmp
push
mov
inc
pop
loopne
inc
inc
mov
xlat
xor
icebp
or
add
jge
sarl
les
dec
shrb
orb
pop
or
mov
stc
jo
push
std
pop
pop
in
or
push
push
add
call
add
adc
lods
jmp
lock
ds
clc
push
mov
test
test
ret
push
push
xchg
in
dec
add
sub
pop
pusha
xor
xor
mov
add
decl
and
sbb
mov
test
aam
sub
inc
jne
pusha
mov
adc
insb
cld
adc
test
lcall
mov
int3
pusha
mov
jmp
cld
pop
xor
rolb
test
icebp
push
mov
cld
popf
fmull
adcb
cmp
sub
aas
movsl
test
mov
jmp
mov
notb
cmpb
lock
pop
lods
call
lea
test
or
xchg
or
sub
push
adc
scas
cmp
cli
cltd
sbbb
jae
ja
push
adc
icebp
add
jge
pop
sarb
orl
lea
call
orl
cmp
ss
dec
pop
push
in
decb
and
inc
nop
push
outsl
mov
sub
pop
incl
xor
dec
sub
punpckhwd
add
push
aam
sbb
jge
flds
fiadds
sbb
or
inc
or
dec
or
dec
inc
mov
add
adc
lock
or
sbb
pop
pop
push
xchg
add
or
mov
xchg
inc
shrb
jb
inc
push
shll
pushl
stos
add
cmp
push
pop
sbb
mov
cmp
pop
push
add
xchg
xchg
push
add
ret
ret
adc
pop
inc
daa
shrb
jo
add
clc
add
push
sahf
push
mov
dec
call
jno
inc
sbbb
fmull
lods
sar
push
daa
and
push
loope
xor
xor
ja
push
insl
cld
xchg
call
ss
icebp
add
bound
aam
dec
mov
pop
adc
rclb
cmp
xchg
jbe
dec
cmp
jbe
xchg
cmc
movsl
mov
sahf
dec
loope
insw
xchg
cmp
mov
pop
iret
imul
in
mov
jge
es
sbb
or
mov
sbb
loop
ret
jae
push
je
mov
push
cmpsb
pushf
nop
sub
orl
push
lea
adc
mov
jecxz
nop
jmp
add
cmp
pop
xchg
ss
inc
xchg
je
cmpsl
pop
mov
or
xor
test
adc
dec
loop
add
movsb
lods
scas
and
hlt
pop
xor
add
scas
sbb
cmp
or
pop
dec
int3
mov
cmp
add
cld
fsub
cmp
das
mov
outsb
std
dec
sub
es
dec
sbb
push
dec
into
inc
sbb
mov
test
pushf
pushf
inc
adc
mov
lods
cmpsb
mov
nop
je
test
pop
fs
imul
fildll
and
clc
mov
and
cmpl
movsb
xchg
pushf
lcall
mov
fcmovb
jno
mov
xorl
loopne
fdivl
push
test
lret
cmp
jmp
pop
sbb
mov
in
add
lock
idivb
mov
ret
add
call
add
clc
jno
mov
dec
cmp
leave
and
dec
xor
mov
addr16
loopne
out
lods
inc
mov
or
jo
scas
adc
adc
ret
add
push
dec
fcmovnb
jge
push
sahf
gs
test
test
adc
cmc
cmpsl
popa
xor
and
loope
stos
mov
jb
mov
or
adc
push
ljmp
add
je
adc
fs
lock
pop
dec
imul
mov
push
rorb
lock
lret
adc
xor
pushf
lock
icebp
and
movsl
mov
add
xlat
fadd
inc
push
mov
lods
imul
and
lret
test
std
xor
and
dec
dec
xchg
std
and
sub
outsb
test
cmp
lret
push
fnstenv
sarl
mov
add
pop
add
sbb
adc
xor
mov
aaa
ljmp
prefetch
insb
in
incl
sub
xlat
sbb
je
pop
inc
aad
cwtl
add
add
pop
push
loopne
mov
sbb
cmp
jge
mov
icebp
sahf
mov
push
pop
sbb
pop
add
sbb
dec
cmp
mov
je
inc
mov
sbb
and
cld
notb
aaa
push
cmpl
push
ret
jbe
xchg
loope
adc
lea
sbb
and
es
lods
aaa
mov
inc
mov
mov
mov
push
in
stos
mov
dec
cld
jno
test
jmp
les
jo
pushl
push
push
imul
add
adc
or
call
ljmp
mov
or
xlat
inc
das
inc
outsl
or
ret
movsl
xor
nop
mov
sbb
sbb
or
fdivl
cmp
push
test
test
mov
icebp
push
add
push
fsubr
cmp
hlt
sub
outsb
add
rorb
out
ret
out
inc
mov
push
in
je
mov
inc
push
xchg
rol
rorb
xchg
mov
cmp
in
mov
dec
add
aaa
and
inc
incl
inc
in
push
or
cmp
add
addl
jmp
pop
mov
ljmp
test
stc
incl
movsl
and
inc
jmp
mov
je
int
lahf
mov
lcall
je
rolb
push
into
sub
jb
js
divb
add
xor
xchg
adcb
add
pop
fidivl
jnp
pop
les
mov
loopne
or
in
aad
cmp
je
adc
cmp
insb
sbb
jl
add
push
push
cmp
xchg
or
popa
xor
pop
xor
mov
call
add
lea
in
jmp
rcll
xor
data16
mov
or
ret
push
or
cmp
fwait
jecxz
sub
lret
mov
jo
add
or
xor
push
dec
mov
imul
or
mov
and
pop
mov
push
mov
lcall
inc
cwtl
mov
test
xor
ja
movnti
es
icebp
xchg
mov
jns
mov
shll
ret
add
jp
lock
xchg
or
ljmp
inc
ret
rcrb
dec
movsb
or
add
or
ja
fsubrl
adc
outsb
in
add
cmp
loope
xchg
mov
inc
xchg
push
xchg
rorb
push
sbb
xchg
xor
and
lret
mov
andb
incb
mov
pop
test
sarb
dec
pop
lea
pop
mov
cli
add
cmp
in
outsl
inc
dec
add
adc
lcall
scas
shrl
jmp
mov
test
cmp
add
mov
add
mov
stos
nop
callw
sbb
imul
dec
jb
dec
and
xchg
test
mov
pop
stos
pop
cmp
xor
sub
sbb
push
sub
lock
xor
out
jle
testb
jmp
mov
call
add
lret
lret
test
loope
push
test
push
mov
mov
cmovns
outsb
es
into
movhps
test
inc
mov
push
bound
jb
jo
mov
fadds
xor
pop
cld
cmp
add
pop
and
push
mov
or
sbb
cmp
les
es
cli
add
inc
push
clc
dec
or
dec
leave
into
or
xor
inc
movsb
ljmp
xchg
adc
push
std
orb
add
or
ljmp
mov
das
sarb
add
xor
cmpxchg
and
sbb
ss
mov
cmp
sub
xor
mov
inc
jge
lock
mov
sbb
xorb
es
pop
shlb
lea
pop
sbb
mov
loop
and
ja
jmp
inc
dec
ljmp
std
mov
sar
fmuls
mov
mov
outsl
inc
shll
add
mov
mov
inc
push
mov
movsb
mov
mov
hlt
ss
aaa
mov
jne
ds
or
sbb
idiv
adc
in
sub
pop
mov
in
sub
std
loope
int
rol
cmp
inc
cmp
cmpsb
call
mov
insb
cmp
mov
mov
mov
mov
outsl
stos
xchg
add
xor
inc
mov
movl
call
pop
jecxz
mov
je
out
adc
orb
stc
jge
adc
and
jo
adc
and
adc
ret
test
xorl
push
outsl
xor
adc
jmp
hlt
pop
sarb
adc
jne
mov
mov
mov
cld
cmpsb
int
xor
adc
es
shrb
mov
adc
sti
insb
clc
and
add
inc
scas
dec
ret
fcompl
jl
dec
mov
sbb
cli
mov
loopne
and
iret
loop
pop
icebp
sbb
add
add
aam
push
inc
adc
das
mov
adc
mov
cmc
test
push
jg
add
push
xor
push
jl
push
cltd
clc
sti
xor
negl
adc
xor
xor
lods
cmc
pop
rolb
jp
xor
and
mov
adc
push
jle
cli
jb
std
mov
jp
sbb
rcrb
test
or
inc
andb
jne
push
cmp
inc
sub
movsb
sbb
adc
sub
ficompl
and
mov
mov
jl
xchg
pop
lock
adc
adc
fmuls
cmp
lea
or
xchg
mov
sbb
cwtl
inc
dec
loopne
adc
hlt
push
out
les
xor
sub
scas
mov
sub
jl
enterw
cli
sar
sbb
ss
imul
push
xor
test
dec
pop
sub
adc
adc
and
jo
jae
test
push
jno
adc
stos
icebp
mov
gs
push
mulb
adc
arpl
ds
scas
clc
push
hlt
jmp
inc
mov
push
test
test
jle
xchg
mov
cmp
mov
hlt
nop
ja
test
xor
test
popa
jno
scas
flds
call
or
hlt
pop
xchg
pop
add
mov
jl
insb
xor
jbe
stc
sbb
adc
mov
pushw
mov
faddl
rcl
inc
adc
mov
inc
inc
or
ja
dec
lods
lret
add
lcall
and
in
adc
adc
insl
and
adc
fists
fildl
jmp
and
mov
jp
jno
sbb
inc
add
xchg
mov
add
pop
push
dec
imul
jg,pn
pushf
lret
loopne
jecxz
les
fnstcw
sbb
push
and
and
sarb
push
in
sub
push
sbb
pushl
inc
and
adc
je
ficompl
fcmovb
loopne
and
test
jnp
mov
not
sub
ja
and
clc
cmp
loope
inc
jg
jo
jg
push
push
fsubrs
adcb
cmpl
xchg
push
loope
push
movl
mov
add
cmpb
mov
push
or
mov
int3
mov
sub
ret
add
shll
fidivl
fcoms
xchg
leave
cld
call
shl
inc
mov
mov
test
xor
mov
test
pusha
or
push
push
hlt
imul
inc
lea
lea
adc
fs
and
inc
dec
call
in
in
push
adc
loopne
femms
push
sbb
test
pop
jge
mov
lock
int
test
cmp
jg
js
and
xchg
out
dec
cmp
lea
lahf
mov
jbe
enter
loopne
cmp
or
push
inc
push
inc
outsb
stos
pusha
add
sbb
clc
or
std
out
call
fdivr
mov
in
inc
ljmp
sbb
xor
dec
push
push
mov
lcall
jae
addb
loopne
and
jbe
out
insb
rolb
add
subb
add
rolb
sbb
test
pcmpeqw
loop
jle
outsb
sbb
mov
rorl
push
add
mov
mov
popf
adc
mov
pop
int3
das
mov
aaa
dec
push
adc
test
sbb
ljmp
dec
es
push
jl
test
push
insb
mov
cld
xchg
vshufps
adc
add
clc
cmpb
fstpl
jae
pushf
dec
mov
xor
add
rolb
scas
daa
push
mov
fldcw
icebp
faddl
shrb
jecxz
inc
lock
push
outsb
clc
lret
repnz
in
jae
popa
mov
clc
ret
movb
jl
incl
mov
push
xor
push
jbe
adc
jle
mov
gs
insb
jb
xor
mulb
push
xor
decl
inc
nop
and
sub
call
fisubrl
pop
test
mov
xchg
xchg
mov
clc
and
ss
ret
cs
cmp
mov
push
fimuls
hlt
push
fadd
lcall
test
pusha
add
mov
push
xchg
xchg
pop
aam
xor
pop
dec
mov
outsb
and
fs
adc
out
mov
sbb
push
pop
nopl
cmp
inc
or
or
test
pushf
in
mov
adc
or
inc
inc
inc
jb
aam
inc
dec
mov
inc
fstpl
mov
ffreep
xchg
test
cli
add
fs
or
and
test
imulb
call
inc
sbb
mov
ds
pushw
push
xorl
sub
sbbb
lea
or
pop
jns
lods
fwait
adc
dec
sub
cmp
xorb
divb
cvtps2pd
add
xchg
dec
add
mull
jp
push
stc
dec
test
inc
rcrl
xlat
and
push
incl
cld
orb
rclb
loope
and
pop
mov
inc
mov
push
loopne
and
sub
or
cmpsl
sub
mov
test
insl
push
lcall
sti
xor
mov
mov
nop
jmp
ljmp
ret
add
and
adc
cmpsl
dec
and
dec
jge
subb
push
hlt
add
add
icebp
add
or
int3
mov
push
mov
mov
mov
into
in
insb
dec
add
add
sub
ret
sbb
push
xchg
push
rcrb
dec
outsb
jmp
push
push
out
xor
fistps
adc
pop
dec
scas
add
nop
icebp
sub
mov
mov
stos
incl
jle
push
lret
outsb
int3
sub
pop
ret
xchg
ret
sub
mov
ret
sbb
loop
orb
call
adc
call
sar
dec
sti
cltd
adc
lcall
mov
and
fnstenv
jo
aaa
pushf
lea
mov
fcoms
xchg
dec
add
and
inc
jb
les
cmp
mov
xor
xchg
cmp
lock
out
test
jno
loopne,pn
je
push
cld
pandn
add
adc
sub
repnz
fldz
inc
xchg
aas
jb
xorb
pop
inc
mov
mov
insl
xchg
jecxz
fdivr
movsb
cmp
les
push
sub
adc
pop
call
inc
xchg
mov
adc
je
xor
clc
or
jmp
mov
ds
mov
int
mov
jbe
jle
incl
lods
fwait
test
or
pop
push
ss
inc
mov
add
xchg
and
inc
daa
and
dec
adcb
movl
sub
addb
clc
ljmp
subl
mov
mov
mov
cs
and
aam
sub
outsl
or
sahf
or
movsb
bnd
adc
sub
mov
mov
adc
xchg
mov
xorb
movl
inc
push
punpcklwd
inc
or
inc
or
test
push
xchg
adc
mov
jmp
stos
gs
and
xchg
jbe
test
adc
xchg
and
mov
cmp
mov
call
push
enter
inc
pushf
jne
rolb
adc
adc
jp
mov
push
mov
sti
repz
mov
mov
mov
stos
pushf
push
dec
jecxz
cli
push
fimull
lods
loopne
add
ss
mov
sub
jno
mov
cs
dec
cmpsb
or
je,pn
sar
clc
cmp
push
mov
mov
push
mov
mov
push
jno
sbb
les
adc
fiadds
jo
shrl
lock
mov
int3
inc
or
mov
ss
pop
neg
icebp
ret
mov
andl
les
pop
popa
jecxz
xchg
pusha
mov
lods
add
jl
leave
les
out
int3
rorl
add
pop
jne
outsb
push
dec
pop
push
inc
loopne
xchg
add
mov
je
in
jl
test
push
cmp
dec
pop
add
add
xor
fs
inc
xor
mov
jo
hlt
cwtl
add
insb
imul
mov
sbb
sub
cli
int3
push
push
test
stos
mov
enter
add
movsb
cmp
hlt
sahf
cmp
jge
je
pop
aas
test
cmp
jnp
mov
fcoms
movsb
inc
cmp
negb
sub
mov
aas
jmp
movsl
cmp
push
xor
cwtl
stos
xor
inc
mov
cmp
xchg
jb
or
mov
push
mov
lret
aaa
scas
movsb
decl
mov
test
test
push
jo
in
cmpsb
mov
mov
in
mov
push
xchg
mov
call
dec
out
lock
incl
push
out
loop
cmp
cld
sbb
fcomps
xchg
inc
mov
arpl
pop
push
lods
jnp
loopne
or
mov
inc
stos
mov
fldl
mov
sbb
pop
dec
rorb
push
sub
ja
push
lods
fldl
and
dec
pop
fiadds
cmp
or
mov
sbb
out
push
rolb
rolb
push
jo
andb
jno
fcmovnu
mov
push
add
loope
aam
inc
push
push
jne
rcl
out
in
mov
clc
sub
lock
cmp
mov
js
xor
push
mov
mov
andl
nop
ss
jge
incl
push
xchg
xor
dec
jne
gs
popa
jo
pop
test
cmp
bound
sbb
cmovge
sbb
pop
add
pop
sub
mov
gs
les
cmp
add
ds
jo
lods
in
es
loop
add
in
in
adc
movsl
add
test
push
pop
sub
shlb
in
xchg
test
outsb
lods
and
insb
fwait
mov
add
lcall
test
leave
add
rolb
pop
hlt
insb
inc
int
or
push
add
push
mov
pop
popa
or
xchg
adc
jae
mov
push
or
fcmovb
adc
dec
cwtl
rclb
cmp
imul
mov
mov
ret
jl
icebp
fadd
and
xchg
imul
loope
rcrb
das
data16
int3
or
adc
sbb
loop
dec
add
adc
call
add
ja
dec
mov
jl
js
pop
pop
repnz
add
ficompl
sub
and
inc
imul
or
dec
mov
loopne
pop
dec
push
clc
mov
jmp
test
xor
pop
add
add
mov
mov
pop
mov
dec
dec
int3
ret
jl
mov
mov
mov
outsl
jle
ds
in
rcrw
js
mov
add
mov
movb
sbb
in
dec
mov
int3
cmp
jno
jle
adc
shrl
push
adc
les
and
pushl
into
xor
lea
sbb
ds
lock
cli
out
test
inc
test
jne
test
or
adc
das
xchg
mov
jmp
mov
xor
mov
insb
push
dec
nop
mov
scas
je
adc
push
cmp
and
jle
cli
push
adc
cmp
mov
adc
mov
fucomip
addl
nop
jb
sub
ds
sub
adc
sar
xor
call
pop
data16
inc
clc
adc
cli
cmpsb
gs
les
mov
test
sbb
shlb
scas
insb
mov
mov
xchg
outsb
je
sbbb
dec
sbb
enter
cmc
hlt
negb
mov
outsb
inc
rcr
push
lahf
lret
roll
and
mov
aam
pop
jbe
fstl
xchg
incl
filds
adc
or
cmpsl
rclb
and
pop
repnz
mov
dec
inc
add
mov
lea
je
data16
insb
pop
rep
lock
push
push
and
mov
cs
jne
push
bound
dec
jp
inc
shlb
jbe
call
sub
add
lock
mov
dec
pop
push
mov
ljmp
pop
je
sti
or
adc
lahf
push
inc
mov
xchg
mov
mov
jo
fwait
loope
inc
out
jb
inc
xorb
cmp
adc
pushf
pop
mov
das
add
inc
outsb
cmp
and
aas
sbb
add
and
and
insl
or
ljmp
je
mov
and
mov
ss
sbb
shrb
mov
repz
jo
pop
cmp
lea
adc
cmp
and
push
inc
js
nop
adc
mov
xchg
push
mov
jne
movsl
inc
xchg
rorb
call
xchg
push
out
sub
xchg
js
sbbl
pop
nop
or
mov
lret
pushf
mov
jns
xchg
idivb
push
ret
pop
mov
icebp
mov
add
inc
aaa
sbbb
imul
push
adc
add
cmp
push
fidivrl
xchg
mov
pusha
pop
xchg
mov
mov
cld
call
sbb
mov
lea
pop
sti
ret
sbb
jno
jnp
xor
jl
mov
push
mov
mov
sub
push
xchg
pop
mov
mov
mov
mov
jbe
xchg
sti
push
mov
cmp
xor
int3
sub
cmpsb
cmp
sub
push
jb
or
jle,pn
mov
and
repnz
sahf
mov
lods
pop
sub
push
je
mov
rcrb
push
cmp
inc
mov
testb
ljmp
lret
adcb
xlat
lods
mov
xorb
push
mov
cmpsb
jle
sarb
jl
jo
clc
xchg
sub
test
sub
jg
scas
mov
dec
and
push
mov
lret
cmp
push
out
inc
movsl
fs
jl
dec
xchg
nop
cmp
jg
fdivs
test
andb
jmp
cs
push
sar
pop
cli
loopne
xchg
sub
push
sub
aaa
add
push
shll
pushf
repnz
insl
sbb
add
adcb
test
fcos
inc
sahf
and
inc
add
inc
das
pop
outsb
pushf
loopne
decl
sbb
mov
add
mov
push
sbb
jmp
push
push
js
mov
and
mov
inc
push
sbb
xor
dec
mov
and
mov
repnz
outsb
nop
cmp
movb
or
adc
push
cmp
ljmp
cld
testb
adc
xchg
movsb
mov
mov
cmp
sbbb
mov
adc
push
cmp
nop
adc
jne
pop
scas
aad
dec
jge
idiv
or
inc
mov
shr
sub
les
inc
fmull
shl
stos
mov
pop
push
rcll
inc
and
mov
subb
mov
xchg
insb
andb
add
mov
xor
push
jmp
xchg
dec
sub
and
insb
cmp
incl
das
dec
jecxz
adc
push
hlt
int3
xor
xor
ljmp
outsl
dec
push
test
addl
xchg
or
push
inc
pop
inc
mov
mov
and
adc
mov
mov
push
jl
rcrb
test
add
lods
mov
cmp
cld
mov
pushf
clc
fstpt
pusha
outsl
and
inc
adc
add
outsb
test
pop
cmp
and
pop
movsb
sbb
daa
rolb
mov
mov
shlb
mov
nop
xor
icebp
adc
pop
gs
leave
pushf
ljmp
or
add
fsubrl
inc
in
mov
jo
or
sahf
je
xchg
xor
aam
cmp
mov
pop
add
xchg
adc
test
mov
push
or
pop
lret
aaa
cli
fcoml
add
data16
je
add
jo
add
sbb
mov
sub
mov
jb
mov
cmpsl
sbb
push
nop
push
add
inc
rorl
add
cld
jmp
push
sti
push
movsl
and
push
sbbb
push
inc
ret
subb
pop
or
int3
loopne
clc
and
mov
mov
dec
add
inc
dec
or
addr16
push
and
call
dec
incl
xor
jne
icebp
add
or
lahf
push
mov
xchg
inc
arpl
pop
mov
mov
xchg
pop
inc
hlt
in
lgs
mov
jmp
cmp
scas
bound
or
pusha
in
fsubr
fbstp
iret
call
cs
and
mov
mov
push
out
push
xor
jb
xchg
dec
inc
mov
mov
mov
stc
push
sub
cli
rcrb
or
ret
dec
pusha
inc
push
mov
dec
push
inc
out
enter
xchg
inc
sub
outsl
es
jne
mov
dec
xor
lret
inc
jge
incb
mov
sbb
pop
lods
ds
mov
call
sub
jmp
cmp
out
pop
xor
subb
push
out
into
xchg
pop
sar
mov
adc
cld
call
fldt
test
lea
adcl
lea
sbb
jmp
jo
mov
inc
adc
scas
fwait
adc
pop
pop
wrmsr
lret
call
inc
in
dec
outsb
mov
aad
add
adc
imul
test
and
clc
xor
arpl
or
mov
cmp
add
mov
test
out
cmp
jp
or
mov
pusha
xor
jb
popa
das
jmp
or
aas
inc
xor
in
add
arpl
int
mov
cmp
mov
mov
dec
cld
popa
cmp
fs
xchg
jo
inc
ret
popa
fidivrs
mov
cmpsl
das
inc
mov
hlt
sti
iret
or
jle
clc
mov
jae
lods
test
adc
in
lods
insl
aad
sbb
roll
sti
test
cmp
mov
mov
push
add
xor
cwtl
decl
cld
test
or
std
mov
cwtl
add
add
lcall
fdiv
and
test
pop
clc
mov
pop
adc
xor
cltd
jbe
or
sbb
or
stos
mov
movl
mov
je
pmulhw
icebp
lods
call
mov
jmp
ret
maskmovq
mull
push
adc
mov
subb
inc
enter
fs
add
sub
add
imul
in
pop
adc
repnz
xchg
subb
idiv
in
and
das
mov
pop
loopne
fstpl
and
mov
adc
imul
mov
push
test
push
inc
inc
xchg
add
sbb
or
push
jb
aam
adc
stos
pop
inc
add
push
test
ficoml
mov
push
or
call
out
loopne
imul
push
test
scas
dec
push
cmp
psrad
rcrb
outsl
inc
bnd
inc
rolb
xchg
push
push
sbb
imulb
gs
cmp
in
test
xchg
push
push
fs
mov
push
pop
hlt
sbb
pop
ljmp
xor
mov
movsl
add
xor
scas
mov
loop
rcrb
push
fsubrs
inc
sbb
fiadds
inc
int
pop
ds
xor
pop
ss
cmp
and
sub
sub
mov
jl
dec
repnz
pop
out
pop
push
or
and
adc
in
pop
or
shrb
js
testl
xor
inc
cmp
stos
aam
outsl
mov
test
mov
ds
add
inc
call
sahf
stos
xchg
lock
jo
outsb
jp
stos
js
out
add
or
mov
push
xchg
jl
mov
mov
inc
test
stos
insl
jo
pop
loope
adc
test
leave
xor
and
vmptrst
jle
shlb
xor
clc
mov
pushl
pop
ror
add
loope
std
adc
sub
aas
push
sbb
pusha
lock
popa
mov
enter
test
jge
data16
aas
sarb
and
addb
movb
and
fmul
ret
xlat
sbb
add
mov
fcomip
mov
inc
addb
imul
cmp
mov
subl
test
sub
sub
push
pop
sbb
mov
mov
inc
into
add
add
add
push
cmc
test
pusha
mov
xcrypt-ecb
cmpsl
or
outsl
jl
fcomps
and
or
stos
xchg
cli
cmp
push
sbb
mov
loopne
jo
out
sub
or
sub
jno
add
add
jbe
push
mov
fisttpll
or
dec
push
or
test
inc
push
pop
or
push
sahf
pop
testl
cmp
js
call
lret
adc
push
sbb
cmp
or
enter
and
aad
or
and
stc
or
mov
push
adc
les
cmp
outsl
xchg
sub
jae
pushf
cmpl
ljmp
mov
mov
adc
adc
fwait
enter
push
mov
wrmsr
jb
jmp
mov
imul
adc
push
std
mulb
hlt
adc
scas
cli
sahf
xor
mov
test
cwtl
imul
xchg
cmp
test
inc
add
sub
mov
add
pop
lcall
in
lea
icebp
aad
mov
pusha
xlat
xchg
js
push
add
pop
mov
clc
adc
xchg
nop
and
hlt
mov
cmp
push
sti
push
adc
stos
pop
pop
push
and
add
sbb
imul
arpl
push
push
bound
pushf
mov
xlat
jmp
ljmp
out
pushf
fidivl
mov
mov
sbb
and
lods
js
std
sbb
add
xor
add
fwait
ret
cmp
or
cmp
aad
add
and
xor
mov
cltd
push
jbe
cmp
xlat
lcall
std
movsb
test
mov
test
mov
rorb
mov
aad
outsl
jge
and
mov
das
jle
pop
push
cld
insb
mov
push
xor
xchg
scas
cli
or
xchg
add
mov
hlt
lea
call
aam
and
sti
addl
push
inc
cld
int3
mov
xor
inc
sarb
push
nop
mov
mov
mov
or
add
cmp
sahf
cmc
dec
inc
inc
or
out
fwait
loop
mov
adc
dec
inc
dec
stc
cmp
mov
loop
xchg
mov
in
ljmp
dec
int3
jne
inc
push
mov
jne
pop
loop
popf
sub
sub
sbb
rorl
add
ud0
movsl
aas
rolb
and
or
lock
push
je
cmp
push
jb
xlat
adc
inc
out
ret
add
ja
add
dec
call
add
inc
xor
cs
cld
leave
outsl
push
dec
or
mov
rolb
gs
fildll
lea
aaa
push
and
loope
aam
sahf
sbb
cwtl
jle
sbb
add
dec
jns
addb
dec
or
mov
mov
jl
cmpb
or
je
sbb
sbb
add
sbb
sbb
mov
xor
jmp
add
scas
adc
inc
push
cs
divl
lea
mov
inc
dec
sarl
cmp
and
xor
enter
loop
clc
in
xchg
in
into
pushf
nop
and
adc
push
push
cmp
pusha
mov
ja
adc
movb
testl
mov
int3
sub
jg
adc
imul
xor
pop
aam
adcb
ss
icebp
or
cld
aaa
fs
lret
sub
jmp
pop
lods
pop
rclb
test
call
mov
push
aam
add
rcrb
mov
stos
nop
inc
js
jecxz
ss
push
sub
lds
fildl
repnz
push
incl
rcr
negb
cmp
push
cld
call
in
add
push
jo
lds
jb
pop
pusha
mov
cli
sub
jbe
add
fwait
fistps
pop
xor
add
and
lods
and
mov
cmp
xchg
pop
popa
mov
mov
mov
push
add
jne
insb
dec
arpl
xlat
jb
ljmp
lock
popf
push
adc
add
mov
jle
mov
adc
dec
ret
or
mov
cld
clc
jle
mov
int3
jo
or
xor
cmp
or
cmp
push
push
push
inc
int
rclb
or
push
ds
ret
inc
mov
jo
call
pop
xchg
icebp
dec
add
xchg
dec
mov
pop
int
pop
pusha
repnz
rorl
mov
cmc
ljmp
ret
add
jmp
inc
test
cwtl
js
call
add
popa
dec
mov
sbb
cmp
les
cmc
add
mov
dec
jne
mov
xor
xchg
inc
jo
cmp
test
lahf
and
xor
lods
push
jno
xor
pop
sbb
xor
and
or
sbb
xor
les
add
adc
xchg
push
mov
push
mov
std
jg
inc
push
int3
pop
mov
cmovp
mov
add
nop
jp
push
leave
arpl
xchg
pusha
test
ret
clc
mov
stos
sub
push
loope
or
inc
adc
cmpsb
inc
lea
insb
sub
aad
pop
mov
rclb
cli
dec
pop
sbb
inc
xchg
xor
mov
add
outsb
loope
movsb
sahf
inc
gs
sub
or
sub
xchg
push
jmp
xor
inc
fldcw
cmp
jmp
xor
push
push
adc
mov
push
loopne
cmp
mov
mov
mov
jg
or
dec
lock
dec
adc
sub
adc
jb
aad
sbb
test
or
jbe
push
add
add
xor
inc
inc
insl
std
aaa
push
es
inc
outsb
pushf
fs
add
mov
mov
testl
inc
je
call
pop
ret
jl
cwtl
or
movsb
sar
inc
and
adc
test
jecxz
mov
pop
fildl
dec
xor
dec
fsubrl
sbb
mov
xor
xchg
scas
cmp
nop
es
inc
outsb
mov
xor
sub
cs
std
in
xor
ljmp
add
in
push
dec
adc
clc
gs
fstpt
adc
in
incl
add
mov
mov
mov
xor
sbb
xor
fadds
cmp
or
mov
sbb
rcll
jne
pop
icebp
and
add
dec
insb
stos
imul
rcrl
jb
lcall
sub
rclb
data16
sahf
cld
dec
pop
cmp
add
push
jge
rolb
pop
xchg
sbb
or
dec
mov
scas
orb
jg
and
cs
dec
jo
and
cmp
jne
lock
inc
lret
cmp
push
pushf
jl
bound
xor
xor
pop
push
test
testb
orb
cli
add
mov
mov
and
adc
hlt
popf
push
add
test
roll
cli
mov
les
mov
mov
push
adc
sbb
xor
sarl
insb
pop
cs
add
ret
adc
pop
sti
mov
inc
pusha
ja
pop
inc
mov
jp
xchg
xchg
mov
jb
fst
arpl
inc
mov
sub
sti
jmp
xlat
scas
cld
push
and
in
les
out
xchg
or
dec
test
pop
int3
mov
daa
test
mov
leave
sti
stos
inc
sbb
mov
aaa
aaa
xchg
cmp
lock
test
aaa
pop
dec
add
mov
pusha
mov
sub
test
add
push
insb
jmp
and
xchg
loopne
add
mov
sub
scas
fidivrl
stos
lods
mov
mov
stc
xor
daa
shll
push
mov
mov
mov
adc
daa
add
xor
stos
push
or
incl
jns
mov
cld
inc
add
shr
or
in
mov
jnp
es
jb
movsb
pop
jmp
sub
rcl
xchg
lcall
or
sbb
inc
out
xchg
sub
mov
add
xchg
data16
call
add
ljmp
push
std
mov
mov
ret
jmp
add
mov
rcl
aaa
dec
loope
clc
xor
insb
dec
mov
xchg
add
sar
mov
ret
pop
addb
inc
je
add
idiv
mov
mov
cmp
mov
mov
and
mov
dec
add
jmp
pop
pushf
call
xchg
sbb
incl
inc
and
adc
sbb
and
js
sbb
push
or
or
cwtl
bound
outsb
sub
jmp
sub
pop
mov
or
inc
rclb
adcb
jo
jmp
mov
sarb
out
xor
mov
sti
fs
or
xor
sbb
push
test
and
adc
xor
push
add
scas
outsb
fmuls
mov
call
enter
das
nop
decb
inc
mov
call
and
subb
loopne
cmp
dec
nop
loopne
sahf
pusha
mov
push
jmp
adc
rolb
jb
sub
pop
das
inc
mov
imul
inc
xor
test
xchg
inc
mov
add
ljmp
mov
notb
aaa
inc
mov
and
ret
lods
cli
ja
dec
outsl
jbe
or
loopne
pop
inc
mov
adc
das
push
jg
sahf
jg
mov
sbb
xor
cmp
inc
cmpps
out
xchg
in
das
pop
ret
inc
jmp
loop
mov
in
push
mov
repnz
into
insb
sbb
loopne
inc
jl
xchg
sub
iret
test
mov
sbb
add
add
pop
jns
stc
js
sbb
inc
mov
adc
inc
hlt
decl
adcl
lea
iret
push
test
and
psrad
dec
loope
inc
gs
xor
add
adc
and
mov
adc
push
pushl
pop
ret
mov
aam
inc
aas
dec
out
pop
je
filds
add
mov
push
in
call
fstpt
push
mov
or
add
dec
jp
nop
jno
mov
icebp
mov
fldenv
sbb
fs
mov
dec
xchg
xchg
test
enter
pop
insb
mov
push
enter
xchg
push
and
jo
xor
decl
decl
mov
mov
gs
ss
pushw
xchg
mov
mov
fcmovb
stc
ret
or
dec
mov
je
add
push
pop
movb
and
ljmp
shrb
imul
add
daa
push
lock
and
mov
add
mov
sub
xchg
push
add
and
and
jl
decl
hlt
mov
rdseed
inc
int3
decb
lea
pushl
mov
mov
inc
adcb
fs
test
add
push
lahf
movsb
loopne
and
push
stos
lods
mov
insl
and
addr16
sub
pop
push
push
fs
mov
push
insb
mov
adc
jbe
out
int
clc
dec
popa
or
mov
cmpsb
push
mov
ljmp
sub
push
cli
pop
push
aas
pop
inc
sbb
out
orl
sbb
jne
sbb
lock
enter
or
ljmp
sbb
lods
pop
loop
push
pusha
inc
lea
or
js
adc
add
leave
mov
sbb
and
rolb
mov
sbb
dec
add
xchg
or
adc
adc
cmp
mov
inc
imull
inc
inc
cmpsb
fistpll
dec
adc
jbe
xor
or
xchg
cmpsb
add
mov
mov
jne
inc
xor
or
shlb
xor
push
or
sub
shrl
jl
lods
jae
add
les
or
mov
push
fs
test
in
aaa
mov
icebp
pop
inc
add
cmp
out
pop
mov
mov
hlt
mov
push
adc
jmp
mov
inc
icebp
inc
test
pushf
push
push
test
loopne
mov
add
jp
enter
jne
sub
add
push
enter
add
inc
rclb
xchg
pop
popa
pop
rorb
adc
rclb
push
adc
gs
inc
adc
fiaddl
pop
xor
lret
push
aas
push
test
jge
fsts
lcall
insl
inc
cwtl
insb
push
and
inc
mov
fsubl
sub
or
aaa
sbb
jecxz
or
shlb
jge
dec
inc
add
lea
adc
add
mov
mov
rorb
or
mov
imulb
and
lock
movsb
imul
orl
and
jo
repz
bound
mov
setl
fidivs
sub
jo
inc
repnz
mov
mov
mov
ret
mov
in
loop
xlat
add
push
sub
mov
push
in
daa
pop
mov
xor
xchg
cld
or
sbb
cli
ljmp
jg
push
xor
or
ucomiss
sti
xor
pushf
cmp
loop
add
mov
xlat
jge
pop
push
dec
jns
test
test
add
in
mov
sbb
mov
and
add
xor
jo
mov
push
rclb
fcmovne
cmp
fisttps
add
push
gs
sub
in
cld
cmp
push
mov
dec
sbb
or
mov
rol
push
mov
mov
lock
dec
xor
mov
sub
sbb
fistpll
xor
mov
fwait
les
les
push
sahf
mov
cli
mov
pop
leave
push
jmp
push
loopne
sgdtl
out
jp
mov
push
cmp
jle
sub
dec
sub
int3
xor
rclb
scas
pop
inc
sbb
cmovne
add
dec
jbe
rolb
lea
pop
adc
rclb
pop
test
mov
inc
push
call
or
pop
das
inc
cld
js
add
add
dec
leave
lock
adc
lock
mov
mov
mov
or
or
pushl
and
inc
inc
cld
add
inc
or
inc
adc
insb
mov
jl
add
dec
mov
adc
insb
ds
sti
xor
mov
addl
add
mov
subl
hlt
incl
add
add
int
add
xchg
pop
and
fnsave
push
int3
xor
cmp
pop
sbb
loopne
lods
adc
cwtl
mov
les
push
test
rcrb
dec
nop
sbb
fimull
cmp
push
int
sbb
into
dec
dec
fcom
cltd
mov
mov
ret
in
insl
pop
push
pop
out
jle
inc
lds
sub
xor
xchg
lods
add
jle
and
outsb
aaa
call
enter
mov
or
xchg
lods
xchg
andb
test
add
xorl
fidivs
add
test
pushf
movsl
mov
mov
sar
jne
mov
data16
popf
sbb
fiadds
jle
jno
xor
push
mov
aas
sbb
jo
jge
add
adc
xlat
pop
and
push
adc
ficompl
or
xor
sub
jbe
jmp
mov
mov
cmc
imul
xor
or
dec
leave
outsl
cmp
insl
stos
and
stos
mov
pop
lcall
in
dec
int
inc
add
xorb
loop
push
rorb
inc
filds
stc
dec
sub
mov
je
iret
push
cmpsb
push
or
bnd
loopne
jmp
lcall
push
mov
loop
stc
mov
dec
push
int
cwtl
mov
mov
inc
test
or
idiv
jmp
lock
xchg
and
xchg
jno
mov
nop
inc
lcall
stos
or
repz
or
pop
inc
and
mov
dec
movsl
push
xchg
ficoml
cmp
push
sbb
stos
les
pop
div
jp
mov
call
lea
mov
into
add
inc
incl
out
les
push
mov
inc
pusha
xlat
xor
mov
rcll
mov
pop
push
shlb
mov
ror
adc
adc
and
lea
pop
faddp
mov
es
ljmp
sbb
pop
push
ljmp
out
and
stos
mov
jmp
test
loope
and
cmpsl
mov
cmp
enter
push
insb
mov
or
jmp
add
mov
aad
aas
push
inc
lea
cmp
sbbb
in
shr
scas
mov
hlt
das
inc
or
push
push
and
push
inc
decl
pop
cli
push
push
xchg
mov
ds
mov
push
je
pop
or
incl
or
cmp
push
test
jle
mov
pop
clc
jle
test
sbb
in
jb
repnz
sub
jp
out
push
fwait
add
outsb
mov
jle
adc
push
lcall
adc
mov
nop
rorl
lods
and
cwtl
push
fdiv
or
sahf
mov
in
sbb
repnz
jmp
imul
fstl
bound
cmp
or
or
inc
cli
xor
or
stos
lock
cli
js
sub
adc
dec
pusha
add
add
lea
fisubl
push
ss
cmp
jbe
dec
inc
push
or
jecxz
clc
loope
lea
cmp
inc
pop
std
das
sbb
xchg
sti
out
mov
shlb
sub
hlt
cmp
xor
cltd
cwtl
insb
std
out
push
xor
rorl
push
cmp
ljmp
lea
mov
push
mov
xor
push
xor
dec
shufps
ror
test
fs
adc
mov
arpl
jl
sbb
mov
inc
mov
in
inc
mov
xor
mov
add
sbb
inc
lock
cmpl
sub
insl
sbb
mov
cmp
scas
mov
scas
cmp
sub
jl
cs
add
mov
insb
add
jmp
push
outsl
int3
or
cmp
mov
sub
push
es
add
cmp
mov
inc
mov
rolb
shr
push
xchg
decb
mov
lock
sbb
call
arpl
rol
repnz
push
jo
das
adc
test
inc
jo
inc
ja
mov
dec
add
ret
int
mov
cmp
stos
jmp
mov
add
aas
mov
mov
jmp
adc
xchg
data16
sbb
ja
fdiv
dec
in
xlat
imul
add
outsl
out
cmc
inc
or
push
mov
mov
add
adcb
insb
clc
pop
mov
mov
push
fld
xor
call
fwait
ljmp
ret
inc
into
or
jb
outsb
pusha
fbld
add
cmp
cmp
push
sarb
add
sbb
div
insl
sbb
inc
les
es
and
call
insb
das
and
test
popa
cwtl
inc
and
add
imul
out
or
adc
and
or
clts
xchg
jne
mov
mov
xor
or
sahf
lods
jo
jne
jl
inc
or
push
cmp
cmpsb
daa
xor
push
pop
iret
add
outsb
dec
cli
das
rcr
aas
lock
jp
incl
insl
push
ret
sbb
pop
push
cmpb
jmp
or
dec
push
fiadds
dec
incb
test
aaa
sbb
or
cltd
ret
push
jmp
mov
adcl
fisubrl
inc
push
cmp
push
scas
lret
add
test
push
hlt
adc
mov
shll
jb
xor
int
icebp
jbe
sub
push
shll
lret
fnstenv
adc
cmc
push
add
cmpl
mov
mov
inc
outsb
dec
fisubrs
scas
or
lahf
mov
xor
adc
inc
push
jo
pop
push
rol
mov
mov
pop
loopne
nop
cli
std
mov
jecxz
dec
out
cli
clc
push
xor
les
push
call
and
xor
add
jl
push
jbe
jbe
icebp
push
test
dec
push
cmp
dec
int3
cmp
mov
or
add
and
shll
adc
mov
jmp
cmp
das
xchg
push
xor
push
or
mov
icebp
pop
add
mov
sbb
loopne
pop
sbb
frstor
enter
jp
cmpsb
pop
movsb
adc
mov
add
adc
jl
pusha
fcoms
pop
jno
mov
lock
jg
xor
aaa
je
sar
sub
mov
cltd
in
cmp
sbb
xor
add
push
ficoms
loopne
stos
and
mov
fs
test
iret
push
mov
dec
inc
loope
lds
and
pop
push
pop
pop
mul
int3
js
pop
cmp
jbe
push
cmp
jb
push
push
lock
aam
mov
push
bound
test
and
orb
dec
cwtl
fisubs
cmp
xor
fwait
in
mov
add
mov
test
outsb
inc
shrl
sub
data16
adc
or
ds
sarl
rorb
dec
adc
mulb
rorb
sub
jp
sar
jg
add
jg
jge
push
rcrl
std
add
push
cs
mov
cli
add
add
adc
movsb
cli
mov
lock
hlt
jb
pop
pop
scas
cmpsb
js
add
and
add
roll
jge
mov
and
jo
je
icebp
mov
push
into
testb
or
enter
hlt
movsb
lret
test
add
lea
loopne
fsubrp
push
mov
push
in
shrb
and
ds
lds
int3
jne
and
cmp
out
xchg
lea
jmp
inc
push
shr
mov
int3
pop
inc
mov
int3
sbb
xchg
dec
cs
jl
sti
paddq
push
loopne
lcall
cmp
mov
mov
dec
inc
cld
pop
iret
loopne
add
add
dec
push
cld
and
xchg
or
test
cmp
ljmp
xor
test
je
insb
jne
loop
in
mov
outsl
inc
inc
dec
sbb
push
jp
push
adc
add
outsb
test
sarl
cmp
pop
xchg
pusha
mov
rcll
in
jl
scas
push
popf
ret
inc
add
out
mov
mov
add
outsl
clc
cld
mov
in
lea
lods
pop
dec
es
jmp
rcl
jmp
sti
test
pop
cmp
pop
gs
adc
pop
bnd
movsb
mov
and
add
dec
and
in
sahf
ds
and
sub
cmp
cmp
add
lea
test
test
pop
cmp
lret
jl
dec
pop
stos
fcomps
push
dec
adc
jnp
test
popa
xchg
pusha
adc
pop
mov
mov
xchg
mov
clc
adc
fs
mov
inc
add
js
add
shlb
and
rorb
das
dec
pop
and
mov
fmuls
test
mov
sub
je
rcrl
dec
addb
fwait
mov
call
imulb
add
or
outsl
addb
rolb
leave
shlb
cli
mulb
test
scas
and
dec
xor
dec
ljmp
in
f2xm1
add
std
mov
outsb
ja
aam
mov
js
lock
call
imul
les
out
add
add
and
push
pop
lock
jl
cmp
xor
mov
sub
dec
inc
arpl
fidivrl
pop
xor
sbb
ss
test
pusha
mov
inc
mov
lods
enter
scas
lea
adc
ljmp
add
cmp
mov
cmpb
sbb
xchg
sbb
into
call
mov
mov
lret
insb
shlb
push
cmp
push
sub
cwtl
or
call
and
int3
mov
lock
push
std
adc
jp
mov
jae
jns
in
xchg
lcall
sub
push
push
dec
movsl
cld
or
push
inc
sti
push
xchg
mov
add
sbb
in
test
jae
sbb
mov
adc
add
mov
test
movsl
add
es
inc
push
sub
outsl
lods
shlb
sub
adc
push
push
cltd
nop
jne
rclb
inc
in
inc
sub
add
push
test
mov
arpl
add
xor
push
adc
shlb
mov
fs
push
mov
ftst
movsb
sahf
fisubrs
in
aas
push
push
je
cwtl
rorb
xchg
mov
les
sbb
or
jnp
sub
push
mov
push
or
and
and
lock
push
das
push
mov
or
pop
push
dec
js
pop
sub
pop
mov
inc
push
nop
hlt
add
xor
cli
inc
xor
xor
or
pop
loop
movsl
inc
push
dec
inc
or
fimull
jmp
ds
and
inc
inc
cmp
adc
fs
push
jl
jbe
push
pop
mov
sarb
mull
and
adc
sub
push
rcr
imul
fidivs
xchg
rclb
imul
ja
adcb
mov
mov
insl
pop
push
cli
inc
cmpsb
inc
je
test
push
lcall
call
mov
xor
xchg
rcrb
jp
call
lea
mov
xchg
insb
cmp
fs
cmp
xchg
push
sub
dec
pushf
inc
rdmsr
add
adc
pop
std
stos
data16
add
sbb
cmp
cld
test
and
or
and
les
loopne
into
lods
mov
xor
ja
callw
rol
push
mov
push
inc
ret
fidivrs
inc
inc
sbb
ljmp
push
je
addb
out
pop
imul
push
mov
xor
aam
rclb
lahf
scas
or
inc
and
out
or
and
jp
enter
test
fnsave
jo
rcrb
jle
jne
sbb
pop
push
sbb
dec
mov
and
insl
mov
mov
out
out
test
decb
adc
js
ficoml
add
or
jle
wrmsr
out
add
int
sub
mov
jb
lods
lock
push
and
inc
push
jmp
std
sub
push
push
ret
call
mov
fcos
lods
add
decl
jl
or
out
mov
push
or
popf
insl
fmull
push
daa
negb
insl
push
lcall
insb
mov
shr
mov
fstps
push
clc
mov
gs
pop
and
fwait
push
inc
loopne
test
je
test
push
in
clc
lods
aad
hlt
mov
cmovne
ja
add
loope
inc
mov
jle
xchg
dec
inc
call
xchg
and
ljmp
mov
cmp
and
adc
adc
inc
mov
xlat
pop
inc
xchg
pop
jb
pop
jp
lahf
and
jmp
lock
and
scas
scas
xchg
add
cmp
jne
arpl
push
out
or
arpl
in
inc
push
lods
enter
int3
push
cwtl
test
addb
popa
pop
scas
in
jmp
sahf
aam
add
push
or
and
and
push
and
subb
mov
jo
adc
adc
add
mov
push
int
ds
mov
addb
negl
add
xchg
xchg
into
sar
fildl
inc
fdivp
dec
fdivl
mov
outsl
push
popf
mov
xchg
inc
lea
fdivr
inc
test
or
mov
xor
dec
push
mov
jle
insl
or
test
sub
push
outsb
enter
mov
aam
sbb
clc
add
adc
int3
dec
enter
adc
cmp
add
sar
test
xor
decl
adc
inc
pop
pusha
insb
decl
rol
mov
aaa
test
mov
inc
cmpsl
icebp
ret
shll
xorl
xchg
cmp
subl
mov
fwait
ljmp
and
bound
popa
and
mov
mov
dec
or
pop
jbe
inc
xor
push
sub
and
or
mov
pop
sub
inc
sbb
loopne
ret
push
int3
push
mov
andb
ffreep
aam
fadd
fwait
int3
and
cmp
adc
inc
imul
and
mov
xor
mov
jbe
lret
pop
fldl
adc
mov
jmp
into
fcmovb
sbb
test
sti
fcomip
orl
mov
add
push
and
xor
adc
mov
pop
fsubrp
add
jecxz
mov
inc
cs
lds
jl
adc
xor
je
xor
push
cld
movsl
aaa
mov
sbb
bound
scas
stc
lret
jno
add
inc
push
jge
xor
or
sub
inc
or
je
adc
mov
dec
push
std
adc
hlt
sbb
adc
mov
movsb
push
into
lock
fadd
inc
inc
and
dec
sahf
dec
inc
test
push
lods
cmpsb
mov
add
or
aas
imul
sahf
hlt
fmull
cmp
mov
or
lock
dec
pop
jl
sbb
adc
mov
ret
nop
push
fwait
push
js
or
mov
adc
rorb
mov
pop
into
in
sbb
xchg
mov
and
sub
mov
pop
add
aaa
inc
idiv
xor
aam
je
and
inc
jo
clc
add
cli
and
xor
shlb
fadd
sbb
jl
int3
stc
sub
es
adc
clc
rcr
push
pop
fiaddl
inc
les
js
lods
push
or
push
sbb
jge
inc
mov
add
lahf
incl
inc
jl
leave
add
lock
leave
sub
orl
add
jge
je
pop
and
mov
pop
ror
outsl
or
xor
call
nop
cmp
or
jmp
dec
leave
gs
por
inc
jnp
ret
stos
mov
outsb
inc
inc
push
jb
and
fmul
les
or
dec
loopne
fcoms
ret
ljmp
rorb
push
adc
mov
nop
inc
xor
stos
mov
push
lock
sub
dec
cmp
cltd
push
lods
xor
inc
mov
arpl
push
or
ljmp
pop
mov
cmp
mov
int
and
cld
inc
movsb
loopne
ret
and
mov
dec
xor
xor
lock
xor
es
push
add
adc
andl
jo
sbb
push
push
add
stos
addr16
jne
adc
dec
les
mov
ja
stos
adc
pop
or
clc
jnp
add
inc
je
or
jge
push
fcoml
sub
adc
add
ss
mov
mov
fdivs
mov
mov
add
in
sub
out
mov
stos
inc
cmp
lcall
adc
adc
inc
mov
mov
in
lods
mov
fmuls
stos
adcb
sub
pop
outsb
jp
add
mov
mov
push
or
test
dec
or
mov
push
js
adc
inc
test
je
dec
add
cmp
std
aam
or
in
adc
xchg
rolb
clc
fst
inc
mov
push
ds
mov
cld
shlb
adc
call
insb
mov
inc
icebp
xor
mov
outsb
sbb
cmp
orb
ret
sub
jo
or
gs
push
ret
pop
or
add
testb
loop
std
push
xorl
lea
dec
pop
or
lret
cwtl
dec
xchg
push
rorb
lahf
dec
inc
fsubrs
inc
rol
ret
rcrb
cmc
dec
mov
lahf
dec
insb
jmp
push
pusha
bsr
outsb
jp
pop
sub
xor
movsl
mov
test
nop
es
inc
sahf
lret
xor
fdivrs
inc
js
mov
outsb
cmp
je
frndint
rclb
incb
push
dec
ljmp
or
dec
enter
pop
dec
clc
add
pushl
ljmp
add
orl
js
and
dec
jb
push
je
fdivs
and
fisubrl
dec
dec
add
icebp
pop
xchg
jbe
loop
push
jb
orl
popa
insb
dec
and
hlt
push
jne
insb
xchg
jmp
rclb
xor
testl
push
nop
jmp
js
pop
push
sahf
sbb
jmp
push
sbb
cld
pop
mov
jle
xor
dec
lods
or
push
mov
and
dec
arpl
mov
pop
add
dec
call
xor
inc
or
pop
nop
adc
cld
mov
or
xchg
jo
adc
and
sub
hlt
add
aam
mov
inc
inc
andb
les
pop
mov
mov
js
dec
pop
xchg
or
inc
dec
adc
add
pop
pop
mov
add
test
nop
ljmp
add
cs
fmuls
ss
lds
xchg
adc
testl
push
mov
cltd
int3
stos
lds
dec
movsb
ret
or
xor
lret
rolb
outsl
bound
mov
dec
insb
movsl
and
pop
je
cmp
adc
jg
sbb
int3
outsl
xor
sub
cmpsl
mov
or
jnp
stos
ret
enter
mov
sub
mov
mov
mov
mov
xchg
mov
loopne
sub
inc
push
xchg
call
add
push
and
nop
cli
adc
loope
lock
mov
push
les
pop
sbb
xor
inc
add
adc
cwtl
inc
decb
mov
sbb
pop
sub
mov
add
adc
jp
mov
xor
fsubrs
add
or
inc
sub
rdmsr
jno
mov
and
sub
idivl
jbe
xor
dec
les
fwait
add
out
push
test
add
pop
jmp
sub
dec
mov
sarb
xor
cmpsl
ds
cmc
add
push
push
push
mov
out
outsl
jne
fisubl
mov
pop
xchg
mov
ret
fisubrs
shll
loopne
out
push
add
out
add
sarb
test
push
pop
lcall
mov
fildll
popf
mov
adc
adc
adc
inc
inc
rorb
and
lret
out
jle
xor
cmp
add
xor
mov
enter
adc
scas
mov
sti
mov
and
adc
add
sbb
and
insb
inc
hlt
imul
pusha
int3
rcrb
inc
cli
mov
sub
call
les
dec
push
mov
sub
js
sub
stc
xchg
sar
shlb
dec
jnp
mov
sbb
cs
push
hlt
mov
std
lgdtl
add
adc
cmp
xor
cmp
jp
repnz
pop
cmp
sub
sbb
sbb
hlt
insl
call
jge
adc
mov
rorl
jbe
clc
call
push
sbb
add
jle
testb
mov
inc
leave
js
stos
aam
cmp
jmp
adc
rcr
or
cs
test
addl
inc
in
dec
dec
loopne
add
inc
andb
outsb
cmp
addl
dec
jo
push
roll
jle
inc
dec
js
loop
loope
std
adc
push
movsl
cs
rcrb
incl
add
sub
add
add
data16
arpl
and
jnp
ja
vrsqrtss
sti
in
mov
test
add
pop
pop
xchg
cmp
mov
test
inc
and
push
outsb
std
push
popa
test
push
add
shr
inc
out
lock
inc
pop
sarb
loop
inc
add
mov
mov
pop
adc
gs
mov
test
fs
add
cmp
mov
subl
push
fimull
mov
adc
mov
sbb
jp
lret
rolb
mov
mov
push
add
mov
xchg
shrb
xchg
call
push
push
aam
push
push
sub
enter
pop
sarb
adc
push
jl
push
sbb
test
push
add
dec
nop
add
push
cmp
outsl
mov
and
sahf
mov
jns
sarb
sbb
dec
xor
jg
mov
pushf
jnp
push
aas
cmp
push
and
in
movsb
inc
aad
sahf
xchg
lcall
pop
push
and
imul
dec
test
inc
pop
mov
mov
sbb
sbb
pop
lods
jg
je
mov
jle
or
add
incb
dec
int3
cmp
pusha
test
dec
mov
jg
std
mov
mov
test
hlt
push
pop
xlat
clc
les
aam
jae
bound
xchg
cmpl
lret
inc
icebp
adc
sahf
push
ret
add
enter
sbb
loopne
clc
fdiv
movsl
pop
mov
jle
mov
lock
xlat
cld
and
mov
lcall
loop
push
and
mov
aas
mov
xchg
xor
and
push
aaa
add
push
sbb
fdivr
cmpsb
andb
addb
and
jp
shr
mov
add
nop
add
insb
mov
shr
outsb
add
lods
incb
shl
sub
cltd
mov
push
and
or
mov
push
push
call
jb
pop
xor
sahf
inc
jnp
adcb
push
dec
jl
aas
fcoml
dec
je
xor
jbe
sbb
ds
or
push
sub
cmp
push
adc
in
cld
jg
loopne
nop
imulb
xor
pop
inc
in
sub
add
sbb
mov
and
xor
xchg
lea
dec
mov
fs
and
adc
cs
jmp
test
sbb
out
gs
stos
dec
das
clc
aas
inc
and
push
sbb
stc
jns
cmpsb
sub
cmp
loop
pushf
popa
and
inc
jne
sbb
imul
into
lock
xlat
mov
mov
fs
filds
inc
mov
sarb
add
lock
or
inc
and
push
imul
pusha
inc
dec
xlat
xchg
push
bound
xor
mov
repz
js
jl
inc
xchg
add
sub
or
mov
or
mov
cmp
jecxz
mov
pushf
xchg
test
inc
adc
pop
mov
xchg
push
inc
int
mov
push
iret
adc
and
popf
and
push
test
and
adc
fs
push
ret
loope
push
outsb
cli
adc
dec
add
and
call
in
in
jg
hlt
adc
cmp
outsl
pushf
sub
sahf
es
add
sub
cmp
or
jb
xor
push
xor
inc
push
cwtl
and
clc
mov
shrb
shlb
or
pop
cs
shrb
or
pop
cmp
push
push
push
or
push
mov
pop
notb
test
btr
lock
adc
and
mov
jae
push
adc
add
int
mov
sahf
xor
ljmp
add
pushl
mov
cltd
xchg
inc
adc
test
xchg
decb
test
sbb
mov
sahf
je
mov
pop
mov
and
adc
jae
adc
imul
inc
sub
cld
arpl
push
sub
xlat
cmp
stc
add
xchg
pop
push
nop
nop
call
push
and
lcall
leave
inc
push
enter
sub
je
imul
pop
mov
mov
std
daa
fadd
mov
jle
or
fcom
dec
fcoms
shr
shl
shld
test
sbb
jle
jp
testb
loop
mov
jbe
sbb
fmuls
jnp
push
jb
push
cld
lock
ret
pushf
outsb
pushf
scas
add
rclb
xor
push
cwtl
test
scas
mov
inc
inc
or
cmp
aad
and
add
push
ret
cli
divl
adc
lds
add
inc
adc
movb
sbb
cli
mov
bound
je
push
push
lcall
jnp
push
decl
adc
es
test
out
orl
addb
cmp
orb
lods
xchg
int3
mov
and
add
sub
push
clc
cld
inc
mov
data16
add
mov
sbb
cmp
or
jl
movsb
test
add
dec
lock
pop
dec
inc
cli
xlat
mov
add
mov
adc
push
pop
scas
mov
or
cwtl
fdiv
std
inc
mov
mov
cli
rclb
lea
dec
inc
movsl
mov
add
notb
repnz
fisttpl
push
aaa
lret
mul
push
cmp
push
fdivs
inc
xchg
or
cmp
inc
aaa
lcall
shll
fisubrs
mov
xor
repnz
testb
call
xor
rolb
and
jo
push
ficomps
jle
adc
push
rcrb
xor
movzwl
dec
adc
inc
lods
pop
add
cli
sub
ret
pop
inc
xor
dec
faddp
push
or
pop
or
movsb
es
dec
cmpsl
add
cmp
rorb
pop
fmull
ljmp
in
notb
dec
incb
dec
sub
xor
lcall
sbb
mov
loopne
mov
inc
fsubl
pop
fs
xchg
push
push
inc
inc
pushf
lret
clc
inc
ret
les
add
mov
jne
ds
xchg
inc
int3
shlb
sub
test
and
mov
incb
jmp
pop
rcrb
shll
inc
scas
push
clc
mov
push
xor
icebp
sahf
jne
push
testb
xchg
push
icebp
sub
mov
je
inc
or
adc
mov
cli
jg
cmp
ret
sub
std
mov
aas
adc
pop
fs
test
test
inc
mov
stos
xchg
push
inc
mov
add
sub
push
fstl
lahf
testb
movsl
je
inc
or
fiaddl
xchg
insb
mov
in
pop
adc
push
lock
add
sbb
sub
jo
and
xchg
js
pop
es
jo
les
push
lods
and
rorl
inc
lcall
movsb
push
inc
data16
sub
enter
scas
add
aas
mov
add
rolb
scas
sub
ss
and
out
stc
clc
data16
or
push
pushf
mov
rorl
fidivrl
xor
call
test
xchg
jo
in
mov
dec
jl
mov
mov
xor
and
cmp
sbb
arpl
push
rolb
pop
movsl
cmpsb
scas
shrb
add
push
dec
and
xchg
adc
mov
jl
cs
mov
add
inc
aam
or
or
or
lods
inc
movsl
movsl
xchg
lcall
scas
arpl
int
je
pop
add
adc
add
cmp
mov
cmp
pushf
or
ds
shrb
cmp
xor
jne
dec
sbb
mov
jbe
sub
popa
jp
lcall
jl
cmp
cmc
sub
mov
xchg
stos
mov
das
int3
lds
fstpt
int3
hlt
xor
test
into
ds
add
test
cmp
mov
adc
mov
cli
sti
mov
stos
lods
or
pop
loop
or
in
cld
inc
mov
lea
mov
xor
mov
lock
xor
js
mov
mov
inc
in
mov
or
push
shlb
out
shlb
mov
mov
pop
jp
add
push
pop
inc
cmp
outsb
and
stos
and
cltd
cli
dec
push
int3
xor
sbb
sbb
js
mov
testb
test
orl
lods
sub
data16
jb
clc
lahf
ret
xor
pop
inc
adc
hlt
push
je
lea
mov
popa
mov
adc
mov
mov
call
xor
movsl
sub
mov
cltd
fidivrs
mov
lar
clc
filds
test
adc
xabort
jecxz
lods
icebp
lock
call
movb
mov
inc
add
out
arpl
pop
out
mov
mov
push
out
pop
unpcklps
or
jp
outsb
insl
ljmp
add
push
fcoms
adc
dec
mov
jg
or
loop
out
das
jmp
xchg
pop
sub
int3
mov
incl
pop
sub
mov
pop
in
push
lcall
pop
add
push
decl
out
pusha
fldl
cmp
push
mov
sub
cmpl
ret
push
dec
xchg
mov
cmp
mov
and
inc
xchg
mov
fcmovb
or
out
loopne
test
jg
jo
aaa
pop
push
and
jo
pop
icebp
outsl
and
mov
addl
clc
lods
sbb
mov
jge
xor
sbb
rol
hlt
adcl
lock
dec
aam
idivb
or
jns
mov
stc
adc
sahf
rcrb
ljmp
in
cmpsb
sar
pusha
dec
inc
je
test
xor
xor
mov
push
xor
xor
add
add
and
test
loopne
inc
mov
loope
test
mov
push
shl
les
loopne
aaa
adc
inc
lret
fcoml
call
cmp
sbb
adc
and
push
cld
pop
push
hlt
sub
xor
or
mov
das
test
adc
inc
ljmp
xchg
mov
or
adc
lods
fiadds
push
sub
sbb
fsubr
add
mov
es
out
int
adc
adc
insb
or
call
sub
mov
lea
xchg
jae
push
pop
lret
enter
inc
testb
inc
stos
sub
in
ja
mov
mov
out
ds
int
std
cli
jne
mov
inc
shl
xor
test
and
movb
mov
ljmp
sub
enter
mov
mov
fs
jmp
les
and
or
fsubrs
xchg
mov
push
dec
pop
enter
and
sbb
insl
jle
fwait
xor
and
addps
aaa
sahf
push
inc
xor
addl
lods
and
adc
add
pop
ret
jne
push
cmp
ds
mov
push
xor
jl
in
pop
inc
cltd
lea
push
cs
push
push
jle
ds
test
jb
pop
jmp
pusha
sbb
rolb
call
in
insb
or
movsl
scas
int
pop
enter
xor
loop
dec
mov
fcomps
cs
add
inc
cmp
inc
add
jmp
ret
xchg
mov
rclb
mov
cld
jo
xor
nop
xchg
mov
loopne
or
push
mov
sarl
push
xor
cmp
lret
int3
and
and
jp
scas
jg
mov
loopne
push
ds
jp
or
pop
or
xor
nop
cmp
and
or
idivb
jp
adcl
hlt
push
jmp
sub
scas
add
or
sbb
add
pop
xchg
jle
push
inc
stc
data16
add
lock
and
xchg
push
dec
stos
imul
mov
push
test
cwtl
add
and
inc
sbb
push
hlt
inc
das
push
movsb
cmp
and
mov
inc
adc
idivb
push
enter
inc
dec
outsl
mov
pop
lods
push
or
int3
mov
mov
fcmovbe
mov
jmp
push
inc
out
adc
mov
push
push
hlt
lea
test
xchg
lcall
mov
xchg
test
xchg
ret
call
sbb
mov
call
fidivs
test
mov
out
mov
cwtl
mov
iret
orl
loop
fcmovbe
test
cmp
inc
xor
add
adc
shlb
daa
cld
add
cmp
inc
das
push
pop
add
lret
ficoml
sbbb
loopne
shlb
out
pop
insl
and
pop
js
mov
push
sub
loopne
in
imul
test
push
mov
or
pop
mov
push
lret
arpl
shlb
test
stos
movb
hlt
add
pop
ljmp
es
mov
sbbl
jo
lahf
and
mov
mov
mov
push
dec
fstp
and
cs
popf
mov
sub
add
test
scas
test
cmp
add
xor
adc
ja
or
cmp
dec
icebp
adc
test
push
pop
push
lods
adc
cmpsb
call
int
testb
cmpsb
add
inc
xor
mov
adc
xor
push
or
inc
repnz
push
or
sub
and
pop
stc
cmpsb
cli
test
or
sti
add
sbb
cmp
mov
push
xchg
fsts
mov
cmpb
and
cs
add
rorb
inc
xlat
sbbb
adc
pop
mov
clc
sbb
aad
pop
mov
sbb
add
sub
ficoms
add
adc
mov
jnp
dec
sbb
ljmp
mov
in
and
fisubrs
add
and
lret
pop
cli
test
xchg
decl
xchg
push
gs
push
leave
bound
mov
mov
push
sar
xor
lods
ret
insb
xchg
sahf
xor
lock
mov
adc
or
or
or
ret
sub
sbb
arpl
iret
xchg
or
and
and
xchg
jne
cmp
mov
aas
test
test
jb
inc
sbb
mov
ficomps
mov
gs
push
add
ljmp
fisttpl
push
ret
xor
add
mov
cmp
fldl
jp
add
mov
movb
gs
inc
or
and
or
xchg
sub
pop
adc
call
dec
jp
stos
xor
add
mov
inc
test
cmp
pushf
addr16
int
divb
scas
jb
rep
jp
jbe
xor
mov
addr16
sbb
pop
add
pop
and
jae
es
xorb
enter
sub
pop
clc
rol
cmp
mov
push
mov
outsb
inc
jg
pop
xchg
add
loopne
inc
sar
loop
ljmp
xor
test
aam
bound
in
jl
cs
xor
test
add
scas
jg
cld
roll
inc
scas
cmp
cld
push
js
sti
dec
inc
fwait
mov
adc
dec
cmc
pusha
jl
loopne
mov
mov
loopne
push
xorl
lods
sbb
mov
movsl
in
xor
popf
mov
insb
push
push
fldenvs
cmp
lret
daa
add
jo
cmp
shrb
pusha
aaa
adc
mov
js
lret
rcr
cmp
out
add
leave
pusha
or
mov
push
js
cmc
dec
lcall
and
mov
ret
push
insl
test
push
fcomps
mov
mov
inc
sbb
dec
add
lock
cmp
outsb
add
xchg
nop
sub
dec
push
shll
push
mov
mov
lret
push
inc
push
or
es
or
add
fildl
out
jg
bound
add
je
mov
fwait
jo
imul
jo
aam
aas
cmpsb
mov
dec
call
mov
test
out
ficoml
ficoml
mov
adc
xchg
lock
push
sub
mov
icebp
push
xchg
imul
or
idivb
sti
hlt
test
jle
xor
adc
sahf
xchg
push
xchg
inc
leave
jno
dec
xor
mov
mov
aas
xor
push
divl
aaa
adc
cs
mov
adcb
xor
mov
negb
push
mov
cli
bound
call
dec
jmp
nop
sub
movsl
rcll
lahf
lea
mul
andl
pop
cmp
xchg
outsl
jp
inc
fidivl
inc
scas
lahf
loop
sbb
push
push
cmpsb
jb
gs
test
mov
inc
rcr
outsb
mov
stos
or
rolb
pop
das
mov
scas
shlb
and
and
mov
sbb
push
mov
pop
leave
sbb
xor
into
push
push
and
dec
mov
rcrb
cmpsb
hlt
mov
sub
push
aaa
aam
lcall
or
inc
fstpt
mov
xchg
push
pop
jo
mov
adcl
adc
outsb
test
dec
inc
cs
push
adc
cmp
jge
ja
xchg
jnp
jo
mov
sbb
add
icebp
idiv
bound
mov
cmpsl
inc
push
mov
mov
movsl
loope
push
cld
daa
loop
imul
aaa
mov
arpl
out
or
or
pop
repnz
and
cmp
stos
add
cmp
jmp
sub
push
add
sbb
sbb
inc
push
xor
push
sub
xchg
enter
leave
aam
cwtl
mov
push
sbb
into
loopne
ljmp
in
outsl
or
cmp
or
std
data16
xor
add
mov
pop
test
je
test
outsl
call
xchg
mov
xor
outsl
fisubrl
push
adc
incb
in
xchg
dec
call
jnp
rolb
jo
sub
adc
sahf
je
add
sbb
pusha
jl
shll
add
ret
pusha
movsb
xchg
or
aaa
int3
mov
inc
push
pushf
xchg
dec
es
jmp
les
cld
add
dec
add
inc
clc
add
mov
push
bound
mov
pusha
inc
cmc
adc
ljmp
fs
push
aas
fucomp
push
or
dec
or
outsb
ss
pop
les
ret
subb
and
sbb
mov
pop
and
dec
or
addl
fnstenv
je
adc
cld
outsb
data16
out
xchg
pop
and
xchg
clc
push
ret
adc
push
sub
mov
std
mov
dec
xchg
add
pusha
shrb
inc
sub
cld
mov
adc
in
in
push
xlat
and
jb
dec
sub
data16
xchg
icebp
fbld
pushf
and
aam
xchg
dec
inc
dec
es
into
clc
cld
inc
lea
test
mov
ret
cmc
pop
mov
xchg
cmp
sub
inc
pop
xchg
pop
dec
xor
xchg
js
adc
fsubl
pop
je
mov
push
inc
cmp
and
int3
xchg
je
pop
mov
fisubrl
sub
pop
sub
sahf
pop
lahf
or
or
cli
add
test
loop
pop
fidivrl
mov
push
jl
or
adc
jmp
dec
sti
add
lret
dec
inc
adcb
cmp
push
jmp
add
ljmp
jge
rcll
lea
mov
mov
imul
inc
mov
pop
fs
imulb
add
ffreep
and
loop
sub
mov
idivb
aam
inc
addl
jp
add
aas
adc
add
icebp
movsb
pushf
cmc
bound
bound
lahf
inc
xor
mov
jno
std
int3
push
mov
mov
dec
mov
dec
pop
add
cmp
xchg
jne
fs
adc
push
icebp
pop
mov
popf
push
dec
sub
int3
add
push
inc
pop
adc
fmuls
cmp
scas
outsb
cmp
sub
movsb
jo
push
test
ljmp
out
cmp
push
daa
xor
nop
and
inc
push
sub
dec
adc
pop
pusha
mov
and
push
mov
mulb
inc
call
psllw
cmp
mov
addb
ret
popa
shll
sub
and
fmuls
pop
dec
sub
ficoml
or
jg
sub
xor
inc
stc
sbb
call
push
dec
xor
cs
pop
xchg
inc
imul
outsb
xchg
xor
jp
cli
enter
orl
xchg
cmpsb
inc
pop
fistps
push
rolb
fildl
and
hlt
cmp
lea
pushf
inc
xor
sbb
loopne
outsb
shlb
int3
cmpl
popa
pop
push
hlt
pop
test
inc
mov
repnz
or
mov
dec
scas
cs
rclb
mov
ret
mov
jg
les
mov
sbb
sub
daa
add
in
icebp
cmc
fs
inc
xchg
mov
in
or
mov
stos
gs
js
sbb
mov
shrl
ret
je
jmp
inc
rcr
incl
xor
push
and
push
aaa
lock
enter
jne
shlb
mov
cmp
xchg
jle
cwtl
push
add
in
ret
and
mov
push
mov
mov
ret
aam
out
les
xor
dec
or
xor
or
pop
jb
aad
xchg
outsl
jg
push
sub
aam
dec
jne
cmp
push
scas
push
adc
mov
pop
add
mov
inc
or
add
jle
add
shrl
cmp
add
daa
xor
push
xorb
push
test
push
mov
cmpsb
mov
lods
sub
jg
and
push
data16
inc
fidivs
jecxz
sbb
jo
push
add
cmp
inc
pop
std
nop
pop
mov
adc
mov
xor
cmpsb
sub
push
cmp
sub
mov
or
loopne
xor
jmp
test
dec
bound
scas
jo
sbb
inc
xor
fwait
rcrb
dec
in
test
aaa
outsb
mov
adc
jmp
mov
cld
repnz
mov
fs
push
mov
sbb
hlt
dec
xor
test
pop
test
movsb
sbb
es
jmp
addb
push
add
xlat
aaa
rcrb
mov
gs
int3
pop
xchg
pop
jo
mov
shrb
les
cli
xchg
rclb
es
in
cmp
push
push
or
xchg
jb
add
inc
xor
rcl
popa
scas
or
out
je
adc
pop
pop
ret
lods
stos
cmpb
fcomps
sub
sarb
push
hlt
imul
dec
sbb
insb
out
or
inc
scas
mov
sbb
or
pop
cld
adc
andl
and
or
cmp
mov
stc
stc
sub
dec
call
lret
clc
and
cltd
ficoms
jnp
popa
stc
adc
rorb
xchg
ret
icebp
addr16
lcall
xchg
ficompl
add
adc
cmp
jecxz
mov
pop
push
call
push
sub
ret
mov
xor
or
mov
pop
push
cmc
sub
dec
pusha
test
xor
daa
jo
inc
data16
pushf
mov
cmp
rorl
cltd
cmp
aam
call
fs
das
nop
adc
mov
xchg
in
test
xchg
xchg
ret
mov
inc
xor
cwtl
cs
add
push
cmp
inc
push
js
and
int3
add
push
xchg
ret
adc
push
je
fs
mov
jae
sbb
rcll
or
dec
fdivl
leave
mov
andl
and
pop
test
enter
mov
test
int3
push
mov
or
sbb
fisubs
sbb
or
xor
test
outsb
fisttpll
pop
adc
xor
fstl
inc
ja
sub
and
push
push
js
fdivl
jle
add
les
push
inc
fists
sti
ds
cmp
push
stc
xor
cld
arpl
int3
mov
mov
jo
idivl
adc
mov
mov
mov
sub
neg
sbb
pop
mov
cld
inc
stos
or
dec
add
push
mov
push
xor
cmp
in
sub
add
nop
ds
and
inc
or
pop
pushl
filds
sar
in
pop
xor
mov
test
sbb
mov
scas
inc
pop
jne
mov
xchg
inc
and
add
push
test
loopne
xchg
mov
and
movsl
xor
pushf
mov
push
pop
mov
adc
mov
mov
decl
push
mov
test
mov
sahf
into
daa
adc
push
aas
adc
clc
movsw
pushl
inc
pop
mov
mov
and
mov
mov
or
dec
inc
and
ficoms
xor
mov
ss
xchg
and
stos
mov
mov
js
jmp
je
adc
aas
cmp
test
dec
icebp
mov
rorb
pop
xchg
aam
inc
cmp
mov
push
test
in
aas
inc
inc
dec
mov
cs
dec
cmp
ljmp
movsb
dec
sahf
or
loope
mov
push
loop
lcall
push
call
sbb
or
jb
orl
adc
or
push
jne
add
mov
sbbl
sub
test
or
mov
xor
sbb
lret
dec
pop
subl
xor
into
jne
mov
pop
in
je
mov
mov
shlb
push
push
and
mov
jecxz
extrq
inc
fisubl
lods
mov
adc
enter
popa
ret
repnz
fcompl
das
jle
xor
scas
push
enter
fsts
and
jnp
jge
lcall
push
std
adc
lock
sbb
imul
mov
inc
mov
cmp
adc
dec
fdivrl
sbb
stc
ljmp
aam
mov
repz
cmpsb
out
dec
mov
inc
adc
dec
push
idiv
xor
and
lea
xchg
add
cli
inc
movb
lret
mov
mov
mov
mov
ss
inc
add
add
movb
es
mov
ret
aam
jmp
mov
pop
and
add
mov
dec
cmp
sub
add
push
or
pop
adc
orl
ret
fisttps
jnp
fistl
add
or
push
push
push
xor
mov
xlat
adc
rorl
cld
imulb
psubusw
incl
push
rcr
ret
rcrb
push
ds
ljmp
pop
pop
je
mov
add
lods
std
cmpsl
add
lcall
mov
or
les
xor
subl
test
xchg
xchg
push
sub
insb
das
les
popa
in
lret
testb
cmpsl
mov
cli
call
lods
mov
mov
adc
push
adc
rolb
ret
or
inc
sahf
leave
sub
push
mov
and
je
pop
jne
popf
inc
imul
test
pop
adc
adc
xor
pop
jle
dec
sbb
aas
sbb
stos
xchg
push
cmp
ret
test
cmp
clc
imul
add
mov
mov
add
add
mov
outsb
xchg
mov
inc
pop
pop
cli
call
clc
cld
mov
jmp
repnz
pop
ds
jp
push
and
add
push
std
shlb
test
data16
mov
cld
call
mov
sub
pushf
push
add
sar
cltd
loope
sbb
sbb
lea
xor
inc
outsl
push
lea
xor
out
xor
mov
jp
or
mov
and
mov
fdiv
jg
and
fcomps
xor
wrmsr
add
bnd
cld
xor
loopne
adc
sub
sar
and
dec
xor
push
les
dec
movsb
push
enter
pushl
or
mov
mov
addb
incl
subl
jno
dec
inc
mov
nop
add
clc
inc
test
fs
in
sbb
clc
or
data16
sub
aaa
mov
test
cmc
push
fimull
insb
lea
test
push
inc
orb
add
or
jne
outsl
mov
stos
das
es
mov
cmp
test
rolb
ds
mov
fcompl
or
fs
mov
addl
fdivs
fs
mov
je
mov
mov
outsb
xchg
jecxz
sbb
push
jmp
xchg
push
jbe
adc
inc
mov
es
fisubrl
daa
jbe
mov
jg
lcall
cmpsb
divb
out
xor
adc
dec
dec
sub
mov
push
fs
mov
lods
lds
les
or
shl
adc
pop
adc
rolb
mov
push
je
cld
add
and
subl
mov
pusha
mov
cmp
mov
mov
loopne
pusha
andb
xchg
mov
add
inc
mov
adc
and
sub
pop
fs
inc
push
dec
push
in
and
ds
add
push
rclb
add
test
xchg
mov
sub
call
mov
mov
inc
add
cmp
and
rcl
std
bound
dec
sub
int3
mov
lods
adc
aam
fsub
leave
add
stos
or
fiaddl
add
mov
sbb
je
sbb
insl
aas
loop
stos
mov
inc
adc
jge
mov
call
test
loope
xor
movsb
dec
fistps
scas
daa
ljmp
or
add
ds
idivb
stc
sub
xchg
and
dec
hlt
ds
sub
mov
adc
mov
sti
push
push
das
add
rcll
callw
dec
add
shrl
pop
xor
and
test
or
rclb
inc
sub
inc
popf
test
dec
push
int3
xchg
inc
popa
fisttpl
outsb
fcmovb
xchg
loope
xor
leave
adc
sbb
addb
mov
or
mov
icebp
mov
divb
jmp
push
gs
mov
dec
shrl
loopne
adc
fistpl
xchg
push
push
mov
mov
adc
sti
cld
push
adc
int3
sbb
out
inc
test
mov
mov
sub
inc
shrb
mov
loop
adc
das
or
xor
call
enter
and
loope
mov
adc
clc
fcmovbe
ret
scas
inc
outsb
les
push
mov
pop
outsb
sti
mov
sub
cld
add
call
push
repnz
xor
fsubl
cli
ret
and
aas
push
mov
ljmp
cmp
push
mov
xor
pop
fisubrl
mov
xor
clc
mov
or
dec
xchg
and
cmp
dec
cltd
out
std
inc
push
or
ljmp
pop
ret
mov
popf
jo
mov
sub
fdivl
sub
xchg
dec
dec
addb
test
add
mov
mov
push
mov
fistpl
scas
fisubrs
xor
add
je
add
pop
mov
add
stc
mov
ret
lods
ss
mov
or
push
movsb
xchg
cmp
call
sbb
pusha
mov
dec
leave
ss
sbb
aam
aas
sub
add
xor
xchg
arpl
mov
or
mov
jge
adc
and
js
or
aam
xchg
cmp
in
push
push
xchg
daa
cmp
xchg
mov
push
push
pop
stos
and
leave
add
mov
je
ss
test
mov
fidivrl
insb
mov
jmp
xchg
loope
xor
addb
daa
divb
test
lock
aas
push
lcall
jp
cwtl
loope
push
and
jno
fs
xorl
lcall
std
mov
aam
sahf
sub
loopne
outsl
ja
inc
je
mov
xor
pop
pop
clc
sbb
inc
cs
inc
pop
cmpsl
nop
cmp
pushl
loope
mov
mov
inc
enter
jb
rorl
adc
jp
inc
cmp
mov
inc
cmp
or
adc
mov
call
loopne
pop
mov
cs
loope
add
cwtl
jge
mov
push
mov
rclb
ja
cmpsl
pop
call
and
int3
es
rolb
sahf
push
call
cmp
mov
xchg
mov
aad
xchg
nop
inc
adc
lea
add
and
insb
outsb
sbb
mov
sbb
adc
inc
cmp
dec
mov
push
cmp
mov
mov
out
mov
ret
xor
aam
mov
inc
fcompl
cmp
push
insb
imul
data16
lcall
movsb
cmp
push
out
push
mov
xor
pop
fdivs
call
cmp
add
mov
shlb
sub
xchg
xchg
or
jne
push
pop
sbb
and
shr
sbbl
sub
mov
enter
adc
outsl
cmp
fnsave
dec
ficomps
mov
icebp
cwtl
lcall
mov
sbb
cmp
pop
call
push
incl
and
sbb
dec
jp
aam
xor
inc
rcrl
push
call
push
rcl
push
pop
add
mov
sahf
mov
sbb
rcr
push
shl
icebp
lods
pop
movsb
sub
mov
lock
and
std
jns
or
dec
xor
adc
or
enter
mov
es
dec
pusha
movl
mov
cmc
xchg
shrb
ret
cld
mov
fs
xor
aas
sbb
xchg
loop
jb
inc
inc
int3
clc
dec
jecxz
into
adc
inc
call
xor
int3
ss
xchg
insl
lods
mov
cmp
cmp
dec
lock
or
lea
ficomps
xor
pop
push
push
adc
mov
bound
and
jae
mov
add
fbstp
mov
pusha
adc
scas
add
das
and
stos
dec
cli
pop
insb
movsb
loopne
adc
push
sub
inc
js
jmp
cmc
mov
inc
add
push
jge
sbb
jmp
add
sub
adc
ficoms
cmp
add
enter
sbb
push
dec
mov
adc
jmp
fwait
cltd
add
hlt
mov
inc
rcrb
fisubrl
in
dec
sar
pusha
enter
push
jl
jp
loopne
mov
cli
xchg
stos
or
dec
pushw
les
push
add
stos
sarl
imul
cmp
sub
das
inc
xor
test
sub
call
add
or
jmp
jle
int3
shlb
scas
mov
pop
call
adc
decl
adc
lods
pop
call
popf
mov
lock
fcoml
pop
pop
les
je
pop
add
das
push
decb
add
ljmp
jmp
mov
pop
cmpl
pushf
fisttps
popa
push
rolb
xor
dec
fsubr
and
aaa
lds
pop
sti
roll
sub
mov
mov
movsl
sbb
dec
xor
add
sub
scas
fldt
push
clc
mov
add
ss
mov
push
cs
les
mov
adc
dec
add
and
push
or
arpl
decb
inc
mov
add
sbb
mov
or
pop
add
mov
js
imul
sti
pop
push
fmull
cmpb
js
adc
cmp
or
je
xlat
cmp
out
xor
inc
add
int3
and
xor
fmulp
inc
push
mov
cmp
lret
jb
or
aas
push
in
add
pop
in
decl
out
xor
mov
cld
filds
add
add
ret
cmpsb
inc
clc
jb
pop
mov
mov
cmp
mov
inc
push
adc
jmp
xor
mov
lods
emms
aad
lock
and
add
sbb
std
out
jo
and
mov
cmp
pop
shll
int
add
jle
in
mov
jne
xorl
adc
cmp
ret
xchg
mov
mov
lods
pop
pop
rcrb
movsb
mov
es
xor
or
pop
or
adc
push
mov
xor
jmp
add
and
sbb
outsl
xchg
imul
cmpsl
test
enter
adc
lods
psubsb
push
cmp
int3
out
pop
add
or
loop
arpl
test
scas
xor
add
add
subps
test
or
push
es
push
sub
or
xor
cmp
mov
lcall
lahf
xor
sub
je
mov
andl
or
mov
insb
pop
ljmp
sbb
xchg
ret
cwtl
cmpsb
dec
mov
adc
jo
lcall
mov
pop
lods
xchg
push
popa
outsl
test
loopne
jbe
jne
lods
das
lods
imul
cwtl
or
outsl
push
daa
movb
or
aam
enter
subl
mov
push
hlt
pop
adc
movsb
aad
test
add
addl
dec
mov
cmp
cmp
pushf
inc
inc
mov
lcall
adc
xchg
inc
lea
adc
clc
mov
sub
int3
popa
repnz
inc
pop
jp
ja
test
push
sub
out
iret
mov
loopne
mov
bound
mov
jae
shr
mov
push
sbb
gs
add
jg
clc
mov
cmp
jmp
push
mov
pop
push
cmp
jmp
sub
adc
test
push
push
test
bound
scas
test
mov
xlat
mov
add
fcomps
cmp
cmpsb
ljmp
int3
gs
lea
dec
call
pop
call
and
lods
mov
push
push
mov
aaa
sbb
fwait
sbb
in
pop
test
and
mov
dec
jo
mov
sti
pop
paddw
or
jbe
jb
mov
mov
adc
and
test
cmpsl
cmp
cmc
mov
ret
inc
loopne
sbb
dec
adc
sub
insb
bound
std
into
push
pop
xor
xlat
out
add
push
dec
les
add
inc
jae
rcrl
xor
add
lahf
jb
adc
jle
sub
clc
pop
jle
add
fildll
imul
pop
ljmp
sbb
sbb
jp
add
sbb
or
mov
push
pop
lea
mov
stos
int3
dec
aaa
xorb
push
mov
push
scas
movsl
cmc
xchg
ljmp
daa
or
push
pop
in
nop
push
add
or
cmp
push
movsb
sti
push
mov
mov
aas
sub
push
xchg
cli
dec
dec
dec
mov
cmp
test
add
les
add
arpl
add
cwtl
mov
pop
and
add
or
mov
push
sub
or
pop
lock
sbb
mov
in
push
shll
out
in
inc
sti
pushl
mov
sbb
sub
fs
fisttpll
adc
jno
jge
outsb
call
adc
and
push
and
sbb
shrb
push
js
inc
add
add
insl
addb
pop
push
inc
bound
and
lea
mov
push
add
fimull
add
test
mov
xchg
xor
push
repnz
and
fisubrs
js
dec
lret
mov
nop
test
decb
and
aam
push
fdivl
push
shlb
xor
add
jne
xor
stos
dec
imul
icebp
pop
xor
ss
cli
pop
cld
jp
push
es
ret
push
notl
dec
dec
jbe
test
mov
dec
push
je
aad
mov
xlat
mov
mov
xchg
insl
push
mov
dec
push
inc
push
xor
or
pop
adc
fwait
cmpb
add
inc
mov
add
mov
xor
xchg
adc
mov
and
add
mov
add
shl
mov
pop
mov
sti
shlb
jecxz
jne
mov
out
pop
mov
xor
mov
xor
push
add
add
pop
xchg
dec
shr
dec
sarb
pop
add
adc
mov
in
add
cs
push
sub
lock
sub
das
jmp
clc
mul
test
cs
aam
add
jmp
rorb
rcrb
aas
xor
movsb
test
imull
jo
lods
out
jne
idiv
out
nop
push
sahf
rep
cli
lret
jo
mov
adc
pop
lock
orb
inc
in
lahf
ret
je
movsl
jb
add
and
cmp
dec
xorb
loop
push
into
xor
sbbb
loop
insb
ret
xchg
jg
mov
push
add
test
loopne
mov
fwait
xor
orb
push
repnz
and
movsb
fstpt
push
push
xor
add
or
push
mov
into
or
shlb
jbe
stos
push
add
std
paddd
movb
fcmovu
and
jl
and
adc
or
cmp
dec
dec
loopne
inc
xlat
lds
ljmp
imul
out
jp
insb
inc
sub
data16
cwtl
inc
jne
ss
add
fiadds
sbb
or
icebp
or
push
cmove
cli
lea
adc
pop
lock
ret
sbb
sbb
lods
cmp
and
insb
pop
pop
ljmp
loopne
or
xchg
push
mov
jmp
sbbb
mov
ret
loop
addl
dec
push
add
orl
inc
gs
es
xchg
sbb
adc
cli
xor
inc
aad
int3
inc
rorb
in
rcrb
mov
into
repnz
jg
xchg
sub
aam
inc
sarl
cmp
xor
mov
clc
inc
add
jl
adc
jbe
push
jb
outsl
pop
pusha
adc
dec
in
adc
mov
mov
mov
imull
ficomps
icebp
and
je
fdivrl
sti
ds
lods
and
push
loopne
inc
adcl
mov
pop
jmp
rolb
insl
test
call
cmpb
and
adc
dec
rclb
loopne
adc
pusha
sbbl
in
out
push
and
aam
add
sub
jg
push
cld
add
mov
adc
fs
push
jne
faddl
or
jne
mov
mov
fmull
data16
pop
mov
mov
push
jg
or
push
cmp
test
std
sbb
outsl
bound
pop
jno
xor
mov
rcr
into
rcrl
mov
jmp
mov
lods
pushl
in
xor
and
cmpsb
shlb
or
jl
mov
aaa
mov
adc
pop
or
adc
and
mov
jp
jle
pop
jne
inc
inc
push
push
ret
clc
dec
inc
and
mov
rcr
mov
add
aam
out
push
inc
jg
lret
insb
faddl
sbb
decl
aam
outsb
fcoms
and
fdivr
xchg
cli
mov
pop
pop
add
loopne
js
cmp
in
ret
subb
or
call
hlt
mov
add
mov
mov
pop
aas
movsb
and
les
push
xorb
jmp
xchg
xchg
push
pop
stc
xchg
sub
add
mov
add
rorb
and
ljmp
repnz
sub
pop
push
test
loope
scas
inc
cli
inc
int3
into
mov
dec
jo
into
pop
mov
sub
fs
or
mov
jne
outsb
lret
pop
jge
stos
in
and
sarb
dec
sbb
sbb
adc
adc
and
cmp
aaa
adc
push
cltd
mov
and
inc
inc
jb
mov
cld
aaa
cmpsl
test
mov
je
xchg
dec
adcb
in
xor
cmpb
movsb
lea
mov
cmp
pop
push
in
cmp
mov
sub
adc
pop
or
push
insb
pop
push
movsb
mov
or
nop
mov
lcall
or
cmp
jb
mov
je
inc
gs
or
add
push
cmpsb
cmpsl
lods
inc
out
jp
and
sbb
fisubrl
inc
lret
pop
add
jo
and
mov
cmc
sti
pop
inc
dec
push
mov
dec
mov
inc
and
sub
in
jo
xchg
xor
fadd
sbb
cmp
gs
and
ret
addl
and
mov
rorb
jne
or
fcoml
mov
sarb
or
mov
xor
bound
mov
add
and
sbb
pop
adc
push
cld
dec
aaa
lods
lahf
hlt
cmp
push
je
sub
add
jg
lret
cli
push
mov
jb
and
sbb
loop
clc
pop
and
shlb
ficoml
or
lcall
test
sub
pushf
fs
jge
jne
aas
mov
std
cmpsb
mov
es
adc
cmpsl
nop
cmp
mov
xchg
push
push
imul
add
lret
adc
inc
repnz
data16
adc
mov
push
xor
jmp
je
out
push
lock
test
enter
push
mov
adc
push
cmp
loopne
jecxz
mov
fadd
inc
adc
cmp
test
cmp
and
sbb
jp
and
push
test
pop
test
dec
nop
into
clc
dec
std
push
ja
ficoms
jne
movsl
jge
mov
movswl
loope
add
add
push
xchg
cmpsl
in
or
stos
xchg
test
dec
mov
inc
movsb
mov
adc
call
ret
and
loope
push
or
shll
hlt
out
xor
jmp
inc
mov
and
adc
dec
mov
inc
outsb
ljmp
cwtl
adc
and
pusha
test
sbb
sub
ja
idivb
add
push
out
outsb
dec
fs
pop
push
inc
or
je
inc
inc
aas
call
pop
rolb
push
xchg
stos
or
lahf
mov
xor
test
orl
mov
inc
nop
inc
cld
shr
js
outsb
bound
aaa
sub
data16
popf
rcll
push
xchg
bound
bound
or
mov
fiadds
dec
and
mov
push
ror
cmp
jmp
fidivs
or
adc
adc
test
push
push
mov
popa
hlt
push
sbb
or
clc
loopne
pop
cmp
mov
and
lock
push
xor
pop
jne
outsb
daa
je
and
cmp
lods
push
or
or
fcoms
mov
lret
push
ds
inc
decl
mov
xlat
jle
push
outsl
jl
push
jmp
adc
int3
jmp
jmp
xchg
mov
shlb
dec
in
flds
aam
push
pop
pop
ss
cld
movsb
push
push
into
popf
js
mov
outsb
shrl
cmp
add
push
or
or
decb
outsl
add
lea
incb
sti
fwait
dec
inc
movsl
rclb
lret
leave
and
inc
xchg
ret
sbb
xchg
clc
test
jl
and
std
mov
in
scas
inc
jbe
in
add
data16
jnp
mov
daa
jnp
data16
lock
sbb
enter
and
mov
mov
add
cmpsb
push
cmp
mov
mov
dec
fidivrs
add
jg
jmp
or
jle
adc
imul
in
icebp
adcb
or
dec
mov
dec
and
inc
sbb
xchg
and
and
imul
cmp
or
test
push
test
pop
dec
fs
pusha
pop
add
push
repnz
mov
pop
std
jbe
dec
mov
ret
push
jae
ret
sbb
add
jmp
sbb
cltd
push
clc
aaa
pop
scas
fucomi
pop
mov
loopne
aaa
icebp
xchg
mov
iret
push
loop
inc
test
cmp
cmpb
push
in
add
cs
hlt
and
decb
testl
rcrb
ret
or
adc
loopne
ret
push
or
lock
test
call
repnz
xor
inc
and
mov
mov
daa
movsb
mov
sbb
xchg
push
sbb
je
dec
test
sbb
and
sar
xor
mov
xchg
lret
lods
jmp
sbb
cmp
and
aas
xchg
scas
js
shlb
push
rorb
mov
jl
adc
stos
jne
inc
std
lods
std
xlat
add
aam
or
test
scas
adc
pop
xchg
or
hlt
pop
shrb
add
inc
daa
jbe
into
and
cmp
and
or
push
sub
sti
push
popf
test
and
mov
dec
aam
lea
orb
push
movsb
aam
sub
add
mov
incb
xor
movups
push
mov
sbb
pop
mov
jl
push
mov
cmpsb
push
scas
xor
mov
fisttpll
push
jecxz
mov
movsb
cmp
push
push
pop
into
push
int3
data16
push
xchg
ss
and
mov
js
jno
or
gs
mov
add
test
pop
dec
loop
stc
mov
call
lea
cmp
xchg
movsb
test
rorb
call
inc
cli
ss
in
push
shl
sbb
inc
fld
test
nop
adc
outsl
dec
lds
js
fstpl
shlb
push
sbb
mov
lock
int3
out
aam
inc
jb
std
lods
and
aad
imul
add
int
jmp
cld
mov
push
or
pop
pusha
scas
or
pop
out
xchg
and
push
push
mov
add
ljmp
loop
mov
movsb
popa
mov
cld
mov
xor
mov
incl
adcb
cmp
sarb
pop
add
lds
mov
repz
xor
sbb
call
adc
mov
lcall
inc
mov
add
test
adc
push
jge
or
mov
inc
call
adc
adcb
in
mov
shll
mov
dec
jmp
inc
sbb
jmp
bound
dec
jmp
jl
push
dec
dec
add
sub
xchg
sub
mov
jmp
sbb
sbb
cmp
or
jle
push
and
cmp
cltd
mov
mov
sahf
or
fcompl
enter
ficoms
mov
cmp
aaa
mov
push
mov
push
ss
xor
xor
or
xor
or
jo
xor
jg
or
pop
cli
fldcw
mov
arpl
nop
icebp
hlt
and
call
xor
rcr
out
mov
cmpsb
add
aas
cmpsb
fs
loop
add
adc
les
jnp
mov
jbe
mov
and
test
je
rolb
ret
inc
add
pop
outsb
push
push
imul
mov
lret
inc
pop
add
xchg
inc
mov
pop
insb
sbb
jl
pop
add
fdivrs
add
orl
add
pop
sbb
loope,pn
mov
lock
mov
cli
test
rclb
ret
mov
je
pop
int3
inc
pop
loopne
movsl
mov
inc
push
sbb
rcrb
es
add
inc
js
lods
sub
repnz
std
dec
pop
push
inc
sbb
mov
pop
sbb
mov
push
mov
decl
push
add
inc
mov
daa
push
sub
inc
adc
inc
adc
inc
mov
mov
push
fmull
orb
and
lods
lret
fistl
inc
xchg
xchg
subb
fcmovb
jo
add
inc
mov
shlb
int
ror
outsl
test
add
or
inc
xor
fadd
pop
aam
mov
aam
inc
lcall
enter
addb
adc
xor
pusha
mov
cmp
int3
dec
stos
push
mov
cli
mov
mov
dec
fldt
mov
or
outsb
inc
pop
push
sub
dec
test
cmp
pop
in
in
stos
push
and
sahf
push
mov
jle
jl,pn
xor
mov
jbe
inc
add
aaa
in
xchg
push
mov
sbb
fs
es
shrl
sti
mov
popa
adcl
push
push
and
push
lods
xor
lock
xchg
xor
loop
loop
out
mov
mov
data16
hlt
lea
leave
push
adc
or
test
adc
pop
xchg
and
dec
dec
push
dec
enter
lcall
fadds
sbb
ret
cli
jmp
mov
or
inc
shrb
mov
cmp
mov
push
jl
xchg
orb
add
dec
pop
dec
mov
fnsave
adc
mov
cmpsb
mov
dec
and
repnz
push
pop
pop
into
push
add
mov
sbb
lds
lock
and
and
add
add
in
jl
and
adc
xor
push
and
dec
adc
or
push
sub
mov
xor
fscale
rcr
aad
aaa
mov
dec
inc
xor
adcl
pop
jo
rorb
mov
sub
xor
enter
jecxz
bound
mov
idivl
add
aam
pop
sbb
in
aad
es
mov
fisttps
xor
lret
dec
fdivrp
push
pop
lods
dec
das
jbe
loopne
aad
imul
mov
sbb
sbbb
arpl
js
xor
in
idiv
sar
cs
add
push
es
sbb
outsl
int
mov
test
adc
sub
scas
dec
xchg
adc
leave
sbb
pop
cmp
sbbb
add
lret
idiv
gs
adc
add
add
lret
xor
push
pop
testb
int3
test
add
push
shrb
jp
inc
cltd
test
fcomps
int3
mov
hlt
push
sbb
std
sar
or
pop
and
test
mov
push
mov
jo
pop
nop
jp
cmp
roll
xchg
adc
aas
rclb
push
lea
mov
fcomps
jns
sub
xor
movsb
insb
jne
aam
and
or
mov
xor
adc
fdivrl
jp
push
inc
cld
push
test
or
pop
int3
iret
add
add
ret
lea
fldl
sub
test
dec
lods
xchg
sub
aam
dec
lret
push
in
loope
mov
adc
lock
aam
test
jmp
in
push
pop
or
icebp
jge
and
dec
in
or
movsb
push
repz
dec
or
fcomps
rcrb
xchg
pop
dec
rclb
gs
pop
mov
in
jbe
push
out
pop
fisttpl
and
or
push
out
mov
jnp
or
ja
pushl
fdivl
scas
cmpsb
pop
mov
int
mov
ret
xlat
idiv
aam
jmp
cmp
nop
aam
adc
xor
test
jne
add
dec
push
ficoml
dec
mov
mov
xchg
dec
stos
jbe
adc
cld
or
push
pop
loopne
push
jmp
push
xchg
ljmp
inc
arpl
pop
xor
push
and
push
push
mov
test
aaa
mov
insb
push
outsb
xor
inc
rorl
mov
sub
enter
dec
lods
inc
push
dec
aas
ret
push
adc
loopne
pop
stos
sbb
std
adc
sbb
push
xor
lcall
jmp
pop
ret
and
xor
cmp
shrl
jecxz
add
shl
pop
mov
dec
gs
js
mov
ret
pop
insb
push
adc
xlat
xor
and
rorl
sub
sub
push
pop
mov
scas
stos
int
or
outsb
and
push
inc
adc
cli
add
mov
xor
mov
les
add
movsb
js
pop
nop
scas
call
cmp
sub
sub
inc
lock
add
fimuls
add
or
mov
xchg
xchg
or
adc
mov
adcb
cld
dec
rorl
bound
mov
dec
je
ljmp
adc
subb
push
adc
add
sbb
fs
clc
lods
roll
or
gs
movsl
test
push
mov
pop
std
out
leave
xchg
sbb
push
adc
jecxz
adc
into
adc
sbb
mov
mov
inc
es
pop
je
cmp
mov
rclb
test
and
lret
decl
subb
and
add
orb
repz
mov
fsub
std
fs
xor
gs
shlb
lods
mov
mov
dec
dec
aam
mov
pushf
sub
jbe
ss
fistpll
add
add
sub
cwtl
adc
or
and
add
fld1
lret
mov
fsubrl
mov
sub
pushf
fldl
cmc
jle
orb
sub
or
scas
add
and
inc
or
and
imul
loopne
cmpsb
push
adc
loopne
mov
pop
cli
out
and
out
push
pop
xchg
sub
rolb
push
lret
ret
pop
inc
ds
js
lds
mov
out
inc
xchg
add
movsb
lea
sub
dec
in
cmpsb
mov
push
fdiv
push
cld
rclb
mov
les
gs
lcall
dec
mov
cli
sub
dec
inc
adc
xor
add
and
adc
adc
mov
js
xchg
lods
mov
adc
pushf
aaa
das
pushf
je
dec
sbb
pop
push
mov
pop
shlb
ret
pop
inc
in
push
add
mov
sub
jne
sbb
jmp
sub
jnp
or
mov
lods
mov
push
add
stos
lods
dec
lds
pop
pop
add
rol
es
jge
arpl
cmp
std
or
mov
xor
pop
or
lcall
cmp
or
mov
fwait
mov
lret
push
add
popf
mov
mov
lds
mov
lock
mov
shrb
inc
shrb
or
test
jecxz
divps
lods
cwtl
push
sbb
or
adc
or
pushf
mov
xchg
ss
pop
add
inc
insb
mov
mov
dec
jbe
push
shr
push
xor
je
cltd
adc
in
stos
lods
fwait
or
or
shlb
cli
mov
dec
push
jp
push
cltd
push
dec
add
adc
sbb
or
imul
mov
push
adc
insb
and
call
push
mov
xchg
xchg
in
or
rcll
cli
das
add
and
jp
movsb
mov
cwtl
mov
or
cmp
inc
ficoms
mov
stos
popf
mov
cli
xchg
sbb
lock
sub
add
inc
lock
pushf
mov
add
movsb
or
push
inc
xlat
dec
add
mov
and
fldt
or
int
push
xor
inc
mov
insb
sbb
test
inc
mov
push
adc
movsb
xor
sbb
icebp
fwait
test
adc
or
inc
pop
jp
imul
loopne
mov
ss
ljmp
push
leave
je
push
test
das
inc
iret
es
outsl
out
mov
pop
lock
mov
lock
jp
cmp
cmp
das
fisubrl
and
in
cmc
loopne
mov
add
ja
inc
adc
sbb
test
xchg
xor
nop
xchg
pop
movsl
dec
jne
jl
in
xor
cli
push
mov
and
lods
or
fwait
lods
sbb
mov
mov
fs
inc
mov
inc
mov
jg
cld
mov
pusha
scas
enter
jmp
movsb
mov
adc
sbbb
cmp
sti
dec
fadds
push
pop
ret
jl
andb
outsb
faddl
jecxz
pushf
push
add
call
cmp
test
jo
cmp
popf
adcl
jmp
dec
cwtl
ljmp
fildll
iret
ficoms
outsl
push
je
push
push
add
adc
mov
je
pusha
push
jecxz
pop
cmp
sub
fcomp
sub
jo
fisubrl
push
roll
xchg
fmuls
adc
in
mov
push
or
fimuls
lods
mov
push
pop
add
roll
or
ljmp
imulb
jecxz
cli
cwtl
mov
push
aaa
gs
xor
add
cmp
sub
popa
dec
loopne
inc
add
add
loopne
jmp
pop
test
cld
adc
call
jmp
jmp
hlt
xchg
ret
inc
or
mov
cmp
jo
test
push
adc
push
inc
rolb
pop
or
or
mov
mov
fadds
int3
setle
mov
lret
jo
jbe
aam
sar
sbb
in
mov
sub
pop
and
insl
mov
pop
mov
cmp
pop
fmull
jne
rclb
icebp
aaa
loop
inc
out
negl
mulb
call
mov
sbb
mov
outsb
je
loopne
out
mov
je
xor
inc
insl
add
cmp
notb
inc
jecxz
jmp
repnz
orb
fs
les
bound
push
inc
mov
mov
xchg
mov
xchg
cmp
cs
cmp
repnz
in
hlt
shl
gs
and
es
push
fcmovnu
ljmp
add
push
test
inc
add
add
or
outsl
aaa
pusha
loopne
jo
jb
cltd
cli
pop
loope
push
fisttpl
adc
fs
jne
loope
sbb
movsb
or
dec
lock
inc
mov
sub
xor
push
add
dec
in
jecxz
inc
push
test
jne
add
ret
hlt
arpl
mov
mov
mov
push
inc
nop
inc
inc
sbb
sbb
shl
dec
movl
data16
bound
and
jmp
push
add
pushf
push
insl
ret
data16
ss
cmp
mov
or
test
push
imul
cld
out
loope
inc
adc
jo
pop
nop
fwait
xchg
ss
mulb
or
inc
mov
add
aam
pop
jl
sbb
pusha
add
rcr
ds
cmp
or
fs
cs
negl
cmp
lea
xchg
clc
mov
je
pop
xor
sbb
mov
mov
sub
stos
test
xchg
inc
sub
jbe
sub
cmp
jo
dec
sbb
or
push
or
lods
fs
cmp
mov
mov
pop
xorb
cltd
push
add
lret
jl
and
or
je
xorb
and
mov
fcoms
scas
mov
mov
cmp
loopne
cld
sbb
push
and
es
div
push
sub
jge
add
js
mov
out
shll
jmp
nop
out
xorb
es
jb
call
mov
idiv
push
mov
in
les
neg
scas
dec
pusha
pop
inc
pop
aaa
mov
xlat
push
adc
in
mov
out
jo
scas
aam
es
cld
je
xor
jne
scas
push
mov
inc
faddl
mov
or
imul
cli
xchg
call
inc
and
jne
sbb
dec
loop
das
and
test
cmp
shlb
sub
mov
test
lods
and
lea
shrl
adc
dec
js
dec
and
or
inc
sub
jo
dec
subb
add
xor
pusha
andl
mov
loope
faddl
int3
cmp
mov
add
sbb
outsb
jmp
push
outsl
adc
or
call
or
rcl
out
bound
xor
push
add
shll
pop
xchg
xor
dec
call
and
jp
lock
jne
push
add
pop
fiadds
push
adc
pop
mov
inc
push
sarb
push
and
adc
nop
mov
cmpl
add
and
mov
push
cli
ljmp
mov
fimuls
mov
pop
cmp
xchg
adc
mov
jmp
xor
sbb
hlt
pop
push
adcl
push
inc
aaa
sbb
ficompl
mov
push
sub
test
mov
adc
in
dec
push
fwait
mov
push
ficoms
xchg
or
std
jmp
mov
fs
loope
imulb
push
mov
lea
call
hlt
mov
lds
push
lea
mov
rclb
scas
cli
xlat
lret
mov
mov
xchg
rorb
and
mov
idivl
cmp
insb
xadd
gs
es
enter
lock
sti
fisubrl
ljmp
jmp
push
imul
pop
pop
or
jge
loopne
jbe
rcrb
jle
jle
add
add
cmp
add
hlt
adc
rorb
cli
adcl
faddl
std
xchg
pop
test
push
pushl
in
push
enter
sbb
shrb
or
adc
ret
push
lock
mov
adc
jmp
jge
int3
pusha
ljmp
test
mov
xor
mov
mov
mov
adc
ja
dec
cld
push
lods
add
cld
add
rclb
fs
jmp
les
sbb
std
jg
jb
std
adc
and
loope
cmp
sub
mov
cmpb
gs
xchg
insb
jl
mov
rol
jecxz
adcl
add
sub
lock
mov
cmp
fidivl
pop
inc
test
pushw
dec
loopne
movsl
mov
ror
shufps
add
mov
out
fmulp
lea
jb
fadd
xor
xor
mov
mov
ret
mov
push
lahf
or
xchg
cmp
dec
inc
je
loopne
add
sub
pop
mov
and
bswap
sub
movsl
test
lret
fidivl
jg
adc
lea
sbb
jl
mov
adc
xor
pop
xor
jle
cltd
movsb
gs
pop
pop
inc
add
outsl
pop
shrb
std
and
or
or
aam
ret
add
insb
mov
add
push
sub
mov
pop
push
in
add
shlb
pop
enter
sub
mov
mov
inc
ret
mov
and
sub
push
add
sbb
movb
ljmp
push
imulb
xchg
xor
add
jp
jecxz
popf
movsl
and
js
sub
mov
test
clc
es
push
jge
sub
sub
cmp
and
xor
xchg
xchg
mov
push
mov
scas
rcl
cmp
pop
inc
inc
das
js
cmpsb
out
sub
es
push
xor
mov
push
cmp
cmovbe
and
xor
fisubl
pusha
jbe
xlat
and
push
pop
popa
mov
lods
jg
pusha
rcll
pop
mov
outsl
cmp
fwait
aam
and
push
inc
scas
pop
or
leave
sub
push
mov
pop
fiaddl
imul
push
push
clc
dec
and
rcrb
sahf
add
lret
and
sub
mov
xchg
inc
fiaddl
inc
xlat
mov
or
xor
out
fadd
cli
pop
arpl
pop
pop
and
pop
sti
xor
mov
jbe
push
xor
outsb
push
hlt
lock
mov
ja
mov
movb
jb
push
mov
pop
adc
mov
adc
sti
les
fcmove
outsl
pop
mov
push
pcmpeqb
pop
push
ret
test
sub
adc
push
mov
pop
push
jge
xchg
add
jae
dec
cs
pop
add
ljmp
je
pop
nop
pop
mov
iret
fs
ret
mov
cld
cld
jge
nop
ljmp
adc
xchg
negb
jae
jns
enter
jb
xor
jl
sbb
inc
sti
shll
xchg
ret
mov
adc
mov
int
cmp
scas
mov
pop
mov
incl
cmp
je
sbbb
rcl
push
dec
popa
mov
cmp
setne
push
inc
push
mov
add
fmuls
pop
add
loop
cmp
test
jbe
mov
push
xor
inc
test
movsl
jmp
sbb
inc
sar
cmp
adc
loope
add
push
in
mov
call
inc
adc
push
xor
jge
or
out
clc
cmpb
hlt
sarb
or
mov
push
pop
push
or
int3
mov
insb
pop
xor
mov
xchg
sbbl
pop
scas
divb
fcoms
inc
jbe
adc
decl
loopne
mov
dec
pop
outsb
mov
lcall
add
lea
or
mov
es
scas
xor
in
mov
sbb
sub
push
in
push
cs
mov
adc
sub
sbb
flds
add
mov
add
mov
call
jb
add
inc
jne
stos
jns
pop
inc
inc
dec
mov
cmc
rcrb
push
xor
xchg
or
xlat
mov
test
mov
xor
fmuls
or
dec
cmpsb
xchg
clc
adc
jo
push
inc
push
xor
pop
stos
cmc
jg
add
push
mov
adc
icebp
roll
jl
mov
icebp
call
pop
std
jg
cmc
sub
enter
inc
inc
jg
inc
jns
es
pop
xchg
jbe
xlat
scas
fs
insb
or
out
jl
mov
push
add
lock
ja
push
cmp
dec
imul
div
mov
insl
push
inc
lea
pusha
add
lcall
sbb
or
int3
lods
push
add
adc
das
insl
test
sub
cs
mov
push
dec
aad
push
mov
pop
outsb
xchg
or
add
xor
imul
or
sarb
adc
jle
fs
or
xor
push
aaa
xchg
cmp
xor
mov
and
aaa
decb
ret
lret
call
jae
out
mov
fistpl
rol
inc
rorb
stos
inc
das
xor
dec
addb
sbb
dec
xor
push
icebp
inc
jmp
test
add
div
push
or
sbb
movsb
xor
mov
inc
loop
dec
and
js
dec
sbb
fiaddl
jmp
and
push
int
mov
nop
add
jg
jp
andl
mov
stos
jle
imul
bound
push
or
and
dec
mov
jne
jle
je
inc
dec
cli
lahf
lods
cmp
sbb
pop
unpckhps
lods
cmp
pop
adc
add
aas
sahf
cs
in
and
dec
add
pop
les
dec
pop
xor
add
clc
pop
out
push
and
mov
mov
xchg
test
ds
and
sub
outsb
adc
add
sbb
test
ss
jle
mov
pop
or
sub
call
mov
dec
push
loope
mov
mov
fdiv
inc
imulb
cwtl
clc
pushl
dec
add
adc
dec
andb
incl
fdivl
mov
dec
sbb
inc
clc
fimuls
lods
mov
add
stc
add
repnz
testb
mov
ljmp
negl
js
push
and
xchg
push
xor
add
stos
incb
push
inc
or
fistl
ds
shll
test
mov
pop
mov
xlat
push
xchg
std
ficomps
xchg
jbe
add
mov
push
dec
js
push
cs
add
shl
dec
fs
push
mov
or
push
xor
inc
std
and
mov
in
je
rolb
sbb
add
roll
insl
mov
test
pop
mov
fs
jmp
test
out
enter
mov
call
or
inc
int3
int
cld
insl
imul
mov
push
push
mov
and
and
pop
clc
adc
mov
sbb
leave
sub
aam
add
scas
aam
bound
stc
mov
adc
dec
cmp
lret
inc
jno
ds
pusha
in
call
call
mov
push
adc
mov
rorb
in
jo
add
add
ret
or
pop
pop
cmc
sahf
and
or
negb
push
and
pop
aaa
insb
incl
mov
pop
push
imul
orl
testb
push
cmp
enter
sub
xor
push
adc
dec
cmc
pusha
ds
cmp
mov
inc
loopne
sbb
adc
pop
scas
pop
pop
stos
xchg
scas
or
mov
pop
js
add
lea
insb
int
mov
jb
jne
xor
xchg
clc
sbb
cmp
test
push
inc
shll
lock
xchg
nop
pop
inc
rclb
add
decb
mov
cmp
mov
push
inc
sbb
push
dec
loop
inc
clc
cmp
rcll
aaa
loopne
and
mov
movb
in
cmp
inc
iret
and
orb
add
loope
lcall
popa
mov
cwtl
mov
xchg
aaa
ret
xchg
shlb
xor
xor
push
cmp
cmp
lcall
loopne
push
into
fiadds
inc
test
cmp
xchg
out
jae
test
outsl
stos
inc
sub
in
rcrb
add
cmc
test
pop
loop
mov
push
js
daa
fistpll
lret
mov
sub
or
xchg
xchg
rorl
jp
js
loopne
sbbb
or
or
pop
pop
mov
pusha
sub
push
outsl
sbb
dec
or
inc
adc
testb
jge
rcll
xor
jge
and
or
decl
inc
xor
jmp
mull
add
rol
lock
push
mov
inc
jo
or
pusha
subb
test
aam
hlt
int
mov
fimuls
sbb
and
enter
mov
mov
inc
in
jle
test
xchg
sbb
sbb
mov
and
loope
inc
mov
hlt
push
repnz
movsl
xor
pushf
or
inc
outsb
inc
repz
clc
and
in
add
jmp
mov
adc
loopne
sub
mov
insb
mov
xor
stc
sub
mov
mov
pop
jne
lcall
bound
das
mov
sub
push
inc
ret
sbb
and
push
or
cld
mov
dec
std
sbb
xor
sub
push
repnz
ret
das
mov
orb
jge
pop
pop
dec
pop
inc
cwtl
insb
repz
out
and
push
das
mov
add
jl
cld
or
fwait
insb
jbe
inc
inc
add
bound
addr16
adc
pop
xchg
push
cmp
jb
icebp
rclb
scas
xchg
mov
add
pop
enter
fdivrs
cmp
jno
popa
cs
enter
loopne
clc
xchg
sbb
std
mov
inc
mov
mov
outsb
faddp
push
fcomps
rolb
or
sti
dec
mov
xchg
int
test
pop
xor
xor
xor
daa
adc
pop
adc
pop
jmp
aam
jmp
cmp
incl
in
mov
lahf
insb
sbb
lea
xchg
cmp
dec
cli
les
add
sub
adc
mov
ss
std
int3
iret
mov
and
xor
js
lea
pop
lds
aad
je
icebp
ret
mov
je
test
xchg
mov
int3
ret
mov
test
inc
mov
lods
inc
shlb
insb
enter
lret
mov
add
pop
insb
mov
mov
mov
imul
xor
fiaddl
aaa
jne
inc
std
mov
lea
cld
mov
je
dec
loop
inc
sub
int3
fcoml
rcl
rol
cli
test
lea
add
push
out
clc
inc
mov
mov
add
push
push
add
push
test
or
lods
mov
out
add
xor
ret
sub
mov
mov
cmpb
sub
hlt
daa
or
sti
add
in
je
pop
clc
ds
sub
add
xor
aaa
jns
xor
pop
cmpsb
scas
mov
cmpsb
mov
dec
inc
sub
loop
test
pop
test
cmp
mov
jb
dec
sahf
sub
xor
xor
test
testb
gs
shlb
faddl
std
pop
aaa
clc
popa
das
loopne
xchg
test
insb
mov
inc
push
and
in
xor
and
sub
dec
mov
fistpl
fisubl
or
clc
arpl
bound
pop
stos
pop
lock
mov
xor
mov
aaa
nop
sub
inc
mov
mov
push
enter
mov
flds
add
mov
call
cmp
jne
shlb
or
pusha
mov
mov
insb
mov
js
pop
mov
flds
xchg
enter
add
lahf
sub
or
mov
mov
in
or
push
shr
jns
adc
cmp
push
inc
inc
out
push
test
or
cmp
test
dec
pusha
add
dec
std
mov
ficoml
push
outsl
jnp
ja
sub
xchg
xchg
push
insb
inc
test
mov
add
or
dec
dec
push
enter
hlt
pusha
das
push
out
jo
testb
minps
sbb
push
je
dec
or
pop
cmp
mov
cmp
push
jecxz
les
popa
mov
mov
fwait
or
mov
adc
push
push
test
hlt
call
add
movsb
or
fsubs
jno
fidivs
jle
fcom
aam
rcl
inc
add
lods
mov
ljmp
rolb
push
jle
rcll
mov
js
les
adc
add
stos
mov
jmp
or
mov
mov
les
add
movsl
es
pushf
sbb
push
aad
xor
sbb
lods
jne
add
popf
orl
pop
jp
jp
pushf
cmp
leave
add
xchg
push
clc
js
jns
bound
loopne
roll
hlt
mov
popa
test
xor
cs
out
jge
and
push
inc
ds
sbb
cmp
call
aaa
add
or
aad
in
pop
insb
xchg
fs
in
xchg
push
adc
mov
mov
jne
int3
int3
add
ljmp
lret
xchg
ss
inc
push
ljmp
std
cld
aas
mov
cli
push
test
push
test
adc
lcall
es
add
sub
movb
aam
insb
hlt
cwtl
stc
stos
mov
shlb
cmp
loopne
call
andb
pop
repnz
mov
xor
add
push
aas
push
push
les
jmp
sbb
mov
mov
fldl
rclb
mov
jbe
lea
cli
imul
push
mov
mov
les
push
inc
mov
in
sub
je
pop
in
xchg
cmc
das
xchg
dec
push
adc
lock
or
rcrb
rclb
je
movl
adc
mov
or
or
sbb
sti
in
push
sub
js
xlat
es
sbb
sub
pop
inc
cmp
aaa
pop
icebp
int3
mov
adc
cmp
sub
dec
clc
out
xchg
sbb
push
add
call
je
jl
dec
or
inc
dec
js
mov
dec
mov
adc
mov
push
clc
jmp
adc
jns
push
in
add
sub
mov
icebp
test
add
push
call
call
ret
add
inc
das
rol
in
add
sub
lahf
into
rcrb
mov
push
lcall
or
cmp
mov
adc
mov
adc
pushf
and
xor
dec
fstpt
enter
out
cmp
jp
lret
hlt
pop
fsubrl
add
negl
lock
loopne
add
mov
jbe
jb
mov
rorb
ret
sub
lock
sub
and
or
int
imul
inc
stc
dec
rorb
divb
sub
pushl
jmp
push
lock
and
test
mov
pop
sti
lret
or
inc
sub
test
fadds
and
adc
mov
cmp
lea
jecxz
inc
sbb
mov
mov
sub
cli
xchg
sbb
insl
adc
xchg
sub
push
jne
mov
mov
inc
adc
paddb
cmpsb
fstps
jne
sub
add
push
pop
and
add
imul
ret
push
xor
imul
fcmovnb
or
lock
push
push
add
inc
or
movsb
dec
call
sub
test
lea
push
inc
pop
add
xor
repz
rclb
dec
mov
push
jp
xchg
push
sub
push
andb
adcl
insb
adc
iret
jl
ret
gs
jecxz
jbe
jo
insb
pop
push
xor
inc
mov
add
inc
or
jg
pusha
shr
push
jecxz
sbb
xchg
xor
lea
cli
sar
fistpl
xchg
ds
mov
cli
icebp
xor
jo
mov
mov
pop
sbb
sbb
xor
mov
xchg
xchg
sar
cmp
dec
pop
add
scas
sub
std
test
sbb
mov
dec
aas
rclb
loop
gs
pop
or
and
mov
jge
faddl
push
pusha
add
mov
rorb
push
pop
mov
and
ret
pop
into
mov
add
movsl
xor
push
cmp
out
inc
test
push
add
cld
sbb
loopne
sub
sub
add
or
mov
mov
dec
mov
push
mov
adc
mov
fnstsw
pop
pinsrw
pop
clc
loopne
adc
lods
cs
push
fcomip
into
rol
movsl
sti
pop
enter
leave
neg
mov
dec
outsl
mov
es
inc
aaa
dec
mov
loop
xchg
xchg
out
scas
dec
arpl
mov
pop
jmp
ret
push
shlb
mov
jno
pavgb
adc
or
xchg
ret
mov
dec
add
and
push
inc
sti
jo
xchg
clc
nop
adc
and
and
and
xchg
roll
sub
into
push
sub
js
xor
insb
pusha
mov
hlt
cmp
sbb
aas
add
inc
repnz
stos
pop
aaa
mov
push
jae
and
ds
pushl
pop
mov
pop
pusha
add
xchg
mov
movsb
lea
mov
paddq
int3
sub
stos
inc
cwtl
call
or
inc
push
mov
pusha
inc
push
pop
sbb
movsb
or
dec
cltd
xchg
movsb
pop
ljmp
mov
rolb
inc
jecxz
cld
movsb
adcb
imul
lock
jo
es
push
xor
roll
fcoms
test
sbb
loope
ljmp
sarl
decl
jne
adc
add
or
out
or
testb
cmpb
imul
rclb
jns
push
fisttps
call
lods
clc
fcmovnb
std
cmp
jnp
incb
mov
fs
je
pop
hlt
dec
aaa
add
jmp
rorb
push
jle
add
in
ljmp
adc
mull
inc
adc
arpl
cld
add
sbbb
add
pop
in
mov
repz
xor
lods
jbe
lock
xchg
fadds
repnz
or
cld
push
lods
sbb
or
or
jmp
nop
inc
cmove
push
aas
fucomp
sbb
inc
ret
ds
and
push
sbb
fld
aad
les
ret
sbb
mov
and
cmc
dec
or
or
xor
add
clc
rorb
and
sub
hlt
mov
lock
test
jae
add
jl
pop
adc
lea
add
mov
add
inc
mov
aad
lcall
mov
xor
call
test
jo
sub
push
loope
mov
test
fdivrp
pop
mov
adc
sub
sub
xchg
nop
sarb
xlat
jb
xor
cld
ret
push
pop
aam
xor
ret
sub
pop
repnz
ja
pop
push
add
inc
mov
inc
testb
or
dec
mov
lods
dec
mov
push
call
cli
stc
push
cmp
xor
adcb
push
inc
xchg
testl
aad
sbb
fistps
add
inc
pushl
mov
pusha
popa
adc
inc
jns
inc
in
je
pusha
outsl
xchg
mov
incl
test
pop
or
inc
add
pop
inc
adc
and
fstps
inc
movsl
mov
out
mov
sti
enter
adc
ret
add
xor
incb
lods
notb
hlt
dec
push
mov
fildl
sbb
pop
jge
shrb
prefetch
inc
xchg
adc
pop
pushf
cmp
push
cwtl
fdiv
das
mov
inc
ss
fs
inc
cmp
fdivr
pop
or
incl
aaa
scas
rcll
lock
std
gs
jb
fcompl
add
outsb
pushf
adc
mov
pop
cmpsb
sbb
mov
fdivrs
ss
and
repnz
sub
lret
inc
xchg
shrb
in
and
xchg
hlt
pop
ss
sbb
cmp
dec
xor
mov
add
shl
and
in
sub
or
insl
cli
pop
fs
loope
add
sar
adc
xor
enter
jg
in
inc
iret
testb
std
scas
inc
imul
xor
push
sbb
inc
js
aas
mov
push
out
testb
jbe
push
bound
inc
nop
loop
mov
jmp
dec
pushf
clc
cmp
xor
gs
enter
mov
dec
pop
stc
cmp
mov
push
sbb
gs
test
je
and
xchg
shll
test
rorb
leave
xor
sub
cld
dec
jg
or
inc
addb
add
lahf
cmp
add
dec
add
in
jge
pop
add
je
jle
outsb
cmp
call
push
and
hlt
inc
dec
lret
and
fadd
sub
jle
sub
inc
out
sub
hlt
outsl
sbb
mov
xor
subl
add
mov
insl
jb
je
stos
pop
insb
loope
and
pusha
xchg
jmp
add
notb
ljmp
mov
and
mov
in
je
nop
pop
std
aad
adc
loopne
push
inc
add
lds
test
mov
dec
xchg
fisttpl
fidivl
in
xor
sub
pop
mov
rclb
cmp
adc
and
into
cmpsb
ljmp
xorb
or
in
xor
mov
test
std
and
orb
push
mov
mov
bound
mov
adc
or
dec
inc
sar
je
mov
fcomps
enter
add
mov
jge
mov
shlb
lock
aas
and
push
shlb
loop
in
outsl
sar
mov
and
ffreep
nop
ret
add
dec
clc
and
mov
pop
mov
mov
mov
xor
adc
cmp
ja
rclb
inc
inc
adc
iret
test
xchg
sbb
call
inc
pop
push
push
fsubs
cmpsl
adc
and
bound
lock
or
sub
or
jg
adc
pop
mov
add
pop
sub
and
std
ret
call
inc
cmpsb
cs
test
xchg
cmp
pop
dec
insb
arpl
ds
jle
fsubrl
pop
add
movsb
push
fs
mov
adcb
int3
lea
add
out
add
push
loope
push
icebp
inc
add
pop
or
or
xchg
leave
sarl
jl
adc
test
es
adc
rcrb
imul
pop
lcall
imul
dec
mov
inc
add
jb
xlat
ret
or
mov
add
gs
and
cmp
loop
inc
sbb
or
cli
cmc
push
inc
add
push
xor
add
ret
aam
imul
sub
add
je
pop
repnz
nop
push
adc
and
mov
push
es
shrl
push
test
add
repz
adc
testb
fxch
dec
fs
std
add
pop
or
or
rolb
push
fisubl
cmp
push
pop
push
dec
cwtl
divb
cmp
dec
pop
add
popa
xchg
popa
cmp
jb
test
das
faddp
stc
test
in
push
mov
mov
sbb
inc
sbb
or
lock
adc
insl
test
nop
add
inc
sub
xchg
fsubs
dec
cmp
mov
or
addr16
xchg
imul
adc
movsb
inc
inc
mov
mov
sti
orb
xor
lret
or
js
int3
jp
adc
xorb
arpl
inc
movsl
lock
pop
push
add
mov
inc
jnp
sbb
push
dec
cld
add
inc
sub
leave
pop
push
cmp
ret
xor
mov
aam
dec
push
ret
ret
data16
pusha
fimull
xchg
filds
sub
dec
inc
mov
adc
mov
test
sbb
push
cmpsl
lret
sub
xchg
mov
pop
mov
mov
and
add
mov
sbb
popa
xorb
xchg
xor
loop
in
mov
fs
push
aad
sub
push
incl
xchg
mov
and
jge
int3
or
mov
pop
subl
sti
les
test
xchg
push
js
dec
or
sti
in
popa
subl
xchg
sub
push
std
inc
movsl
push
and
iret
dec
push
ret
enter
push
push
pop
push
inc
xor
mov
dec
cmp
movsb
and
mov
nop
repnz
cmp
adc
mov
pop
jne
mov
es
jle
hlt
fwait
lock
push
push
inc
or
rolb
push
lock
cmpsb
aaa
cld
xchg
push
in
jbe
xchg
orb
shrb
mov
cmp
jmp
sbb
test
dec
pop
dec
js
dec
loope
aaa
mov
jne
add
ret
jb
dec
push
cmpb
mov
in
adc
jne
loopne
sbb
aaa
pusha
loope
shl
outsl
xor
sbb
mov
outsl
xor
int3
call
imul
lea
rolb
mov
add
push
outsl
push
shrb
mov
xchg
cs
cmp
test
arpl
add
xchg
je
call
pop
loope
add
sbb
enter
adc
push
mov
out
mov
mov
test
mov
jb
inc
mov
decb
test
lea
push
out
sbb
and
rolb
mov
out
lcall
js
xor
rolb
jb
sbb
sub
or
lea
mov
seta
add
push
outsb
shlb
and
out
adc
mov
dec
shl
decl
incl
xchg
scas
xor
movsb
add
fdivs
lea
lock
inc
cmp
jmp
pusha
add
xor
imul
mov
rorb
mov
mov
pop
test
or
imul
fldl
add
loop
cmc
inc
mov
mov
pop
ds
or
mov
stos
inc
and
jp
leave
cmp
call
lock
loop
jle
jb
call
cmp
or
cmp
push
and
push
mov
aam
shrb
adc
and
lock
dec
and
jmp
fstpt
movl
pusha
into
and
dec
lods
fidivrl
fnstcw
lds
inc
test
add
push
jbe
enter
xor
lock
push
loopne
sub
push
test
mov
add
pop
mov
xchg
aad
cmp
sub
push
mov
inc
push
adc
push
lock
mov
movsb
mov
jmp
cmpl
jle
js
inc
adc
push
pushl
dec
mov
or
xorb
into
xchg
jmp
clc
mov
xchg
lock
sbb
nop
sbb
cld
add
bound
mov
data16
jmp
int3
cli
lcall
pop
hlt
setns
dec
add
aam
or
loop
je
jo
hlt
scas
adc
push
gs
jl
clc
jnp
mov
pusha
inc
cmc
dec
mov
pop
pop
out
adc
addb
xchg
add
or
sub
xchg
test
pop
scas
stos
jne
test
mov
inc
pop
adc
call
push
shlb
sub
mov
fisttpl
mov
js
or
add
cmpsl
icebp
cmp
mov
aad
xor
or
ss
rcrb
inc
jbe
and
subb
imul
push
mov
sahf
add
cli
xor
xor
add
pusha
mov
xor
call
enter
enter
lods
sbb
ljmp
dec
mov
push
xchg
insl
pop
in
sub
pop
dec
bound
scas
cmp
sub
insb
push
push
faddp
sub
adcl
sub
pop
add
dec
cli
add
or
popl
mov
add
and
std
jl
push
cld
leave
dec
xor
int3
push
sbb
cld
xchg
push
jp
and
movsb
cmp
cmpb
imul
mov
subb
and
push
movsb
adcb
adc
xchg
sub
loopne
scas
add
lcall
add
ja
mov
mov
sbb
xchg
mov
inc
mov
add
test
fsubrl
push
inc
xchg
shr
push
push
cld
sub
add
ljmp
mov
cld
stos
test
mov
jmp
test
xor
or
repnz
vmread
mov
jl
sbbb
lcall
lea
call
test
bound
aad
mov
test
push
les
dec
sbbl
and
insb
xchg
call
outsl
mov
mov
mov
push
dec
fcoms
fdivrs
xor
test
stos
decb
mov
and
std
dec
jp
cmp
cmp
mov
popa
pop
je
or
mov
mov
cmp
outsl
lods
jmp
jo
ds
add
pop
clc
stos
sub
stos
inc
dec
inc
clc
push
dec
rol
clc
inc
xor
cmp
cmp
mov
ja
lea
or
adc
subl
pop
mov
in
shlb
jl
xchg
dec
cli
xor
mov
shrb
enter
xor
call
add
and
movsb
dec
lock
inc
mov
push
push
incl
clc
xchg
jb
cwtl
jmp
shl
sbb
jp
jmp
xchg
add
out
xor
push
and
pusha
fdivs
mov
ret
inc
loop
dec
pop
daa
push
xchg
movl
std
mov
sbb
sti
jmp
xor
dec
or
lahf
inc
xor
adc
mov
inc
decl
add
leave
clc
push
cmp
inc
xor
pop
test
lds
nop
loopne
ljmp
fdivr
inc
mov
pusha
add
dec
add
mov
dec
dec
dec
cwtl
inc
cli
dec
pushf
lock
int3
call
dec
hlt
pop
rolb
ret
negb
add
cmpb
addl
inc
mov
jp
jae
lret
fcmovnb
xor
mov
pop
rclb
mov
add
adc
xor
sti
test
adc
fcoml
mov
sub
fisubrl
arpl
in
aas
cwtl
xor
pop
lock
xor
xor
int3
adc
dec
subl
pop
sbb
xlat
pop
dec
pop
or
movl
data16
test
xchg
add
push
dec
mov
ret
push
clc
test
xchg
sub
or
ficomps
aam
dec
hlt
add
fadds
pop
sahf
fs
lods
add
mov
jecxz
add
inc
decl
and
je
or
int3
xor
test
lock
aam
pop
mov
pushw
add
xor
ret
adc
hlt
mov
add
pop
imul
inc
xor
add
push
push
mov
mov
insb
orb
add
clc
mov
test
add
cmc
ljmpw
jg
lcall
notb
andl
push
adc
mov
xchg
push
pusha
inc
or
sti
mov
sbb
dec
mov
inc
dec
add
incb
sbb
and
mov
popa
add
jno
mov
mov
bound
aas
test
pop
mov
dec
mov
push
add
push
andl
inc
and
ja
sti
int3
fwait
xor
cld
scas
sub
fildll
xchg
int
fdivrs
add
or
sbb
and
mov
test
sub
pusha
push
or
jl
dec
push
and
adc
shlb
inc
cld
or
rcll
test
sub
inc
mov
lcall
pop
mov
addb
sbb
or
out
and
icebp
cld
data16
inc
adc
out
xchg
and
popa
cmp
jge
inc
xchg
inc
push
push
inc
push
ret
out
and
add
jmp
jge
push
add
mov
push
cwtl
clc
inc
dec
fs
sbb
cmp
xchg
xor
xchg
test
xchg
test
mov
dec
leave
popa
ret
mov
mov
mov
lret
test
or
sbb
call
in
sbbl
sbb
mov
cli
add
mov
xchg
mov
xor
aas
mov
jbe
ss
cmp
enter
mov
aaa
test
notb
out
sbb
mov
sbb
movl
or
add
sub
sbb
xor
inc
jb
add
mov
mov
call
cld
leave
lods
insb
push
mov
fdivl
insb
cmp
add
push
in
aad
mov
sbb
add
jmp
mov
mov
scas
ss
add
and
push
cli
insb
push
sub
add
add
mov
int
dec
dec
sbb
cmpsb
call
add
imul
and
push
std
ljmp
inc
inc
jo
adc
sbb
je
in
cmp
or
insb
mov
shrb
lret
add
hlt
ss
inc
cmpsb
mov
push
stos
push
adc
ds
jmp
mov
mov
add
mov
dec
call
xor
adc
xchg
leave
mov
aaa
cld
add
popf
adc
mov
push
int3
jns
shll
jge
fiadds
aam
cli
sahf
data16
mov
andl
test
sub
mov
pop
sbb
jo
outsl
mov
xchg
popa
push
dec
jo,pt
dec
and
loop
sbb
mov
test
sub
ss
gs
insb
push
inc
fwait
lcall
imulb
cmp
fs
icebp
frstor
dec
aas
incl
rclb
fadds
xor
in
add
or
mov
xchg
cld
fdivl
and
add
and
cmp
pop
lret
notl
cli
leave
test
jl
out
xor
mov
aam
imul
fmuls
inc
aaa
pop
add
nop
lcall
xchg
mov
cltd
js
mov
xchg
xchg
nop
jle
xchg
push
xchg
test
rolb
and
sub
and
stos
out
xor
clc
push
push
fstl
filds
call
or
mov
mov
and
fwait
loope
xchg
push
pushf
push
repnz
mov
stos
andb
jb
leave
dec
std
or
adc
jno
hlt
cld
popa
and
and
xchg
outsl
iret
call
or
xor
negl
xor
out
jge
les
movsb
pop
mov
daa
fisubs
aaa
cld
and
add
jmp
fwait
loopne
pushf
int3
inc
cmp
mov
int3
inc
movsb
inc
xor
pop
mov
add
or
mov
mov
inc
xor
lret
mov
sti
pop
cmpsb
add
mov
inc
decl
mov
add
xor
call
jmp
and
mov
add
add
xchg
movsb
cwtl
stos
fisubl
clc
inc
push
pop
shlb
in
cld
lds
into
sar
push
subl
sub
call
lock
and
sub
mov
fcoml
ret
add
rorl
cld
addr16
fadds
add
mov
add
stos
sbb
call
xchg
sbb
or
mov
sub
push
sub
movsl
dec
or
mov
mov
pop
lcall
lcall
jae
cmc
lds
lea
xor
inc
mov
add
jge
or
and
dec
sub
lods
adc
push
cmp
push
sbb
cli
jmp
cmp
out
mov
xor
jge
in
lock
adc
bound
inc
in
imul
mov
mov
xchg
inc
aas
or
adc
outsl
adc
add
xorb
jo
jmp
push
or
test
mov
push
push
cmp
inc
push
aam
dec
test
push
les
loop
outsl
and
movsb
lea
ss
lock
xor
and
adc
mov
dec
xor
push
dec
add
inc
adc
daa
cmp
cmp
xorb
mov
inc
cmp
cs
cltd
pop
into
outsb
mov
lea
loope
or
js
pushf
out
cmp
sub
decl
cmp
mov
mov
cmp
inc
scas
and
xor
loope
mov
and
mov
mov
inc
fdivp
mov
bound
sarb
push
xorl
andb
stos
arpl
cmc
add
jle
sub
dec
cld
push
add
sub
fists
or
inc
or
sub
dec
decl
psubsw
push
daa
js
test
inc
call
call
mov
leave
sub
mov
jo
dec
subb
xchg
je
pop
shl
push
fldcw
lock
incl
mov
mov
int
mov
mov
idivb
leave
rclb
pop
loopne
prefetcht1
popf
daa
push
or
es
aam
jb
lods
nop
push
mov
xchg
lret
test
mov
clc
mov
add
mov
sahf
and
shlb
push
jge
jmp
cli
adc
in
shrb
and
or
inc
lret
jno
lods
pusha
mov
addb
sub
add
push
push
push
adc
fldlg2
sub
mov
push
mov
scas
rolb
aam
xor
or
mov
insl
dec
sbb
cmp
scas
cli
jg
mov
addb
dec
add
pop
cld
rcrb
call
or
or
push
call
sbb
call
dec
mov
mov
xchg
push
sub
and
mov
push
ret
pop
mov
mov
push
jg
rcll
test
fidivs
push
cld
pop
pushf
mov
sbb
push
dec
jge
pshufw
sbb
jo
rcrb
mov
lret
jbe
lock
push
and
mov
mov
and
xchg
push
adc
mov
aaa
and
add
pop
ret
imul
jbe
push
hlt
pop
filds
in
push
dec
push
cwtl
lods
mov
or
lods
mov
dec
mov
cmp
xor
mov
rol
stos
cli
outsl
pop
xchg
test
idivb
fimuls
sbb
jnp
int3
ret
test
mov
in
add
inc
rclb
je
jne
sbb
and
les
cmp
dec
fcompl
popf
and
jne
in
or
dec
sub
cmpsl
push
xor
das
or
cld
scas
or
dec
pop
cmpsb
orl
xor
inc
ss
inc
jns
hlt
inc
loope
je
mov
lock
and
nop
mov
int
icebp
popf
mov
push
add
fadd
or
lods
mov
sbb
mov
data16
mulb
add
and
jo
xchg
push
pop
rolb
subb
scas
test
dec
xchg
mov
push
pushl
call
shr
leave
adc
mov
adcl
push
pop
push
push
jns
clc
lret
mov
jb
jl
add
adc
mov
sti
mov
aaa
and
ret
lcall
loopne
icebp
cmp
cmp
jecxz
stos
lods
xlat
jl
inc
mov
sub
push
aam
mov
push
cmp
push
pop
add
mov
testl
mov
popf
lea
das
cld
jge
inc
xor
loop
out
mov
cmp
jmp
pop
add
adc
adc
mov
std
insl
or
dec
xchg
jne
cmpsb
add
nop
adc
jl
add
push
mov
mov
push
mov
gs
dec
adc
ja
mov
jno
jo
sbb
and
push
mov
xchg
adc
aas
push
and
out
lods
mov
add
add
inc
mov
and
lret
insb
pop
push
or
inc
out
lea
jmp
xlat
mov
push
pusha
inc
or
pop
mov
push
mov
push
decb
cld
decl
aaa
call
loopne
mov
scas
jo
sub
fcmovnbe
hlt
xchg
ret
pop
inc
add
je
xor
cmp
xor
es
adc
cmp
or
int3
push
inc
fidivl
test
push
mov
lsl
fwait
rorl
xor
or
jecxz
inc
jno
out
pop
lahf
sahf
fdivrl
or
int3
sbb
nop
jmp
loopne
ficomps
adc
std
push
movsb
push
into
push
add
ss
adc
xchg
inc
cmp
stos
pop
fisttpll
or
cwtl
gs
add
mov
ret
outsb
adc
pop
cs
std
jb
jb
movsl
push
test
call
imul
out
cmp
sub
dec
jne
in
lret
mov
sbb
es
push
adc
in
in
mov
inc
pop
pushf
mov
stos
or
inc
icebp
push
xchg
fs
and
xchg
in
lock
dec
mov
add
jne
jnp
cmc
inc
add
test
adc
pop
jecxz
rorb
push
xchg
push
mov
test
fwait
rcrb
dec
je
push
cli
test
loop
mov
scas
mov
sbb
add
add
and
add
scas
inc
cmp
add
rol
cmpsb
mov
or
jb
iret
mov
sub
or
fs
cmp
push
mov
in
in
add
inc
push
push
xor
add
ljmp
mov
loop
push
mov
sbb
shll
rolb
pushf
mov
imul
movsl
push
xor
mov
outsb
ja
icebp
lea
push
push
add
test
gs
nop
clc
lcall
bnd
pop
loopne
js
adc
sar
inc
jl
adc
push
mov
das
clc
or
insb
pop
cmp
ss
mov
push
pop
jo
adc
popa
jo
roll
je
stos
inc
xor
jp
shlb
mov
mov
lock
test
xor
cmp
das
fidivrs
mov
inc
push
cltd
inc
push
mov
and
push
bound
mov
jp
lcall
add
repnz
sub
inc
inc
adcb
shll
mov
jg
add
pop
lock
sarl
push
into
test
dec
push
bound
insl
shrb
mov
cmp
sub
xor
sbb
pop
add
lock
out
mov
cmp
insb
int
lcall
sub
push
cld
aam
dec
dec
dec
je
rclb
rclb
sbb
jae
rorb
lahf
test
mov
lds
ret
add
data16
lock
fwait
movsl
in
dec
rcrb
fldcw
xor
xor
adc
push
test
icebp
mov
jge
mov
add
xor
inc
or
mov
sbb
into
jl
mov
mov
call
leave
push
or
out
push
popa
shlb
or
fildll
in
adc
dec
test
inc
dec
fmull
cmp
js
sub
sahf
push
jbe
mov
and
push
int
mov
cld
push
xor
clc
data16
cmp
xor
mov
sbbb
je
movnti
loop
cmp
iret
inc
sti
mov
cmp
and
flds
pushf
add
mov
les
fadd
scas
ret
rclb
jl
shl
and
cmpsb
push
xorl
add
mov
shlb
shlb
sbb
inc
adc
leave
xor
inc
lods
sub
push
adc
scas
pop
add
and
mov
ljmp
les
add
push
aaa
sub
add
outsb
mov
dec
call
add
call
mov
je
jg
movsl
jp
adc
mov
jl
lods
push
push
pop
sti
mov
xor
push
mov
inc
dec
dec
jl
mov
inc
testl
and
sbb
lock
sbbl
enter
xor
ljmp
and
cmp
mov
pusha
sbb
in
inc
cwtl
js
add
nop
mov
mov
divl
std
enter
xor
jge
lret
mov
xor
mov
shl
inc
jb
adc
andb
jge
cs
dec
or
or
hlt
adc
stos
cmp
jnp
jp
and
mov
or
cmc
dec
sbb
jle
popa
daa
lock
sub
xchg
push
and
in
sbb
pusha
adc
adcl
ds
mov
aas
lcall
cmp
loopne
out
mov
xor
mov
dec
mov
push
push
loope
in
andl
shl
call
push
pop
mov
inc
cmp
cld
jae
in
mov
test
mov
filds
jne
outsl
mov
data16
shr
mov
sbb
dec
fwait
dec
lds
mov
add
mov
push
xor
call
dec
std
stos
andl
movsb
push
aaa
push
sbb
mov
mov
loop
sti
cmp
add
cmp
loope
mov
fst
popf
push
je
or
test
add
out
jo
fldt
insb
and
int3
movsl
fwait
movsb
mov
push
mov
movd
xorb
int3
andb
inc
ljmp
loopne
mov
call
adcb
adc
sub
xchg
sbb
cli
iret
push
je
outsl
xor
inc
cltd
push
push
in
repnz
mov
enter
push
xor
or
fdivrs
mov
push
bound
cld
ret
sar
fistl
fildl
dec
adc
jbe
jge
dec
mov
addr16
aas
mov
adc
jg
mov
mov
pop
shrl
les
pop
push
in
sbb
and
call
les
sub
and
inc
mov
pusha
xor
adc
and
push
mov
cwtl
das
out
push
pop
dec
les
jle
es
xchg
jno
mov
dec
fidivrs
push
stc
mov
and
jge
or
mov
dec
cmp
pop
adc
push
aaa
fs
cld
lock
jno
xchg
gs
push
xchg
push
pop
adc
add
aaa
sub
push
out
cli
std
mov
xor
mov
gs
add
into
add
add
xor
mov
jb
outsb
push
cmp
push
mov
pop
adc
xor
push
fs
arpl
in
movsb
xchg
lret
loopne
mov
and
adc
xchg
cmp
and
sbb
or
push
jns
addb
outsb
mov
int3
add
add
dec
sub
pop
adc
dec
cwtl
loopne
lock
int3
jae
es
mov
adc
pop
dec
pop
jne
js
fcoms
mulb
xor
ret
jmp
jl
jbe
pop
jno
rcr
dec
pusha
mov
std
daa
or
test
mov
push
xor
fs
sbb
in
test
sub
lret
add
mov
mov
inc
dec
add
lods
scas
inc
popa
clc
gs
insl
les
shrl
lahf
pop
dec
test
jbe
pop
enter
xor
mov
push
add
sub
inc
das
mov
jno
mov
mulb
sbb
insb
inc
ss
in
push
daa
sarl
cmpsb
es
testb
and
push
jne
std
xchg
pop
push
adc
dec
ss
loopne
mov
fwait
cmpb
xchg
cld
cld
jb
cld
mov
std
in
mov
sbb
add
loope,pt
shl
or
sti
rcr
sahf
mulb
adc
push
in
dec
repnz
adc
mov
inc
sbb
pop
js
es
adc
pop
dec
sbb
sbb
adc
push
xor
lock
mov
mov
pop
push
je
mov
adc
push
or
push
aam
stos
lcall
lods
pop
xor
nop
ret
and
nop
dec
call
mov
add
shrl
clc
push
call
adcl
add
in
mov
mov
mov
std
pop
jae
adc
icebp
adc
into
or
sar
jp
cmp
in
mov
lret
push
push
cwtl
sbb
sbb
or
test
xor
pop
jl
sahf
stos
addb
ja
adc
adc
test
mov
cltd
in
ret
jle
push
dec
and
ret
adc
pop
pop
mov
push
cmp
inc
lds
jmp
cwtl
add
cmp
int3
lock
xorb
push
cmp
jb
sbb
adc
mov
inc
xchg
jbe
gs
aas
or
das
jo
data16
into
out
xor
subb
jp
mov
mov
outsb
cwtl
insl
frstor
adc
xchg
pop
inc
jle
call
mov
inc
adc
pop
xchg
icebp
cmp
call
in
into
ret
pop
test
dec
test
mov
leave
ljmp
iret
pusha
push
loop
int3
push
fstps
fnsave
shrb
push
popa
popa
ret
sub
clc
ret
icebp
xor
aam
mov
mov
call
inc
adcl
push
mov
jle
je
inc
mov
sbb
cmp
dec
stos
loop
ljmp
add
jg
inc
dec
dec
inc
mov
and
in
xor
icebp
inc
shrb
call
dec
cld
clc
push
leave
inc
jne
cwtl
and
pop
push
push
cmp
adc
sahf
int3
push
and
push
and
cmp
jg
inc
mov
inc
js
loopne
ljmp
add
add
dec
sbb
in
shlb
stos
push
ret
mov
jmp
out
or
xlat
repz
cmp
mov
ret
push
cmp
jmp
xchg
and
getsec
mov
scas
lret
test
movsb
mov
add
dec
add
mov
jb
adc
dec
lret
mov
inc
add
adc
push
mov
mov
shl
repnz
inc
push
sub
adc
in
and
stc
push
out
movsl
je
xor
outsl
in
mulb
addl
and
test
push
imul
push
ds
loop
fcoms
mov
movsb
add
pop
test
loopne,pt
test
fstpt
fidivrl
testl
mov
loopne
jmp
and
rclb
call
addr16
mov
out
xchg
data16
fs
mov
incb
cli
outsl
push
test
sbb
or
shrl
add
dec
sbb
sbb
jp
dec
fs
or
pop
movb
in
sub
jne
pop
mov
mov
dec
push
cmp
shll
xor
sbb
dec
pop
imul
adcb
push
jp
add
roll
test
dec
sbb
push
adc
mov
pop
cmp
mov
cmp
call
adc
cmpsb
mov
mov
fwait
orl
jmp
in
sub
insl
mov
adc
testb
mov
pusha
adc
jmp
xchg
jg
jle
jmp
mov
and
icebp
inc
jmp
outsb
ss
inc
cmp
push
out
push
push
or
lea
les
add
pushf
mov
push
jne
xor
stos
add
pop
adcb
dec
jge,pn
cld
lea
mov
div
add
movsb
call
pop
cmp
sub
or
mov
jecxz
rcr
js
test
and
cld
cmp
adc
push
movsb
ret
push
adc
gs
inc
push
xor
jo
xchg
sub
cli
fildll
or
push
adc
or
leave
icebp
push
add
cmc
movsl
mov
xor
insl
sahf
xchg
mov
add
out
add
sarb
xor
xor
or
xbegin
or
dec
es
mov
and
push
adc
idiv
loopne
lcall
imul
and
jecxz
loop
push
mov
mov
stos
dec
sub
mov
into
jb
aam
add
fwait
lret
push
jne
dec
jecxz
sbb
push
and
dec
movl
xchg
ljmp
fwait
out
lock
pop
cmp
aaa
xchg
jbe
cmpsl
cld
aas
add
mov
mov
shrl
fs
cli
outsb
jne
js
adc
pop
mov
sbb
cmp
ss
add
fcoms
cmp
movb
add
push
in
int3
inc
fiaddl
add
call
sahf
add
push
and
mov
jp
jae
mov
icebp
inc
fwait
lods
test
std
add
cs
cmc
mov
cmp
sbb
push
push
test
outsb
mov
in
sahf
mov
sbb
push
cli
loopne
mov
test
mov
add
shrb
add
enter
mov
hlt
lahf
dec
loopne
mov
add
inc
pop
mov
popa
mov
mov
int3
mov
jp
push
outsb
dec
shrb
inc
push
call
or
filds
iret
sbb
adc
cld
inc
inc
adc
addl
inc
add
sahf
lods
xor
xchg
xchg
pop
adc
setl
inc
sahf
jo
shl
shrb
cwtl
dec
lods
call
nop
ret
sbb
jno
aad
sbb
mov
decb
jl
xchg
fidivs
mov
inc
testb
jl
pop
cli
lock
mov
push
fdivp
mov
lret
enter
std
and
adc
loop
int3
pop
push
add
es
add
into
iret
adc
sub
mov
mov
inc
push
test
or
cmp
cmp
or
and
js
inc
out
cmpsb
movsl
and
loope
dec
or
pop
push
adc
and
push
je
rorl
les
clc
push
mov
hlt
test
push
out
les
icebp
jnp
loop
jmp
flds
push
or
and
push
movsb
cld
push
fld
inc
mov
ret
clc
outsb
shrb
mov
test
and
xor
push
mov
vmovsd
add
ret
in
mov
sbb
icebp
aaa
sub
add
jle
loope
sbb
push
aaa
clc
sbb
xor
lock
jmp
adcl
lds
mov
mov
mov
push
call
xor
pop
data16
jbe
mov
clc
fwait
leave
int3
and
call
movsb
dec
mov
inc
inc
push
aam
cld
fldcw
outsl
aam
xor
and
je
sti
int3
sbb
mov
inc
xlat
xorw
cmpsb
jne
add
insb
mov
inc
loopne
xor
call
mov
fiaddl
addb
lea
test
je
jbe
sti
fldenv
ds
sub
push
xor
cwtl
and
fildl
mov
mov
adc
and
xor
pushl
inc
incl
jg
pop
mov
fistl
jmp
repz
ss
loopne
mov
inc
std
addb
jae
adc
sar
or
mov
mov
mov
mov
lcall
cmpsb
ds
mov
inc
sub
outsl
sub
pusha
mov
jae
xor
hlt
lds
pop
call
clc
out
mov
pop
mov
add
cld
mov
imul
mov
mov
ljmp
loopne
sub
out
and
aam
xor
fisubs
sbb
call
out
jl
or
imul
xor
fdivl
sti
cmpl
push
push
loopne
mov
incl
mov
shrb
cli
add
fcoms
cmpsb
fstps
inc
data16
stos
inc
adc
jge
test
or
and
dec
adc
arpl
insl
jnp
mov
push
ret
movsl
push
mov
ljmp
or
push
sbb
or
push
cmp
and
icebp
ljmp
rclb
and
leave
rclb
adc
mov
pushf
inc
push
mov
test
mov
add
fchs
test
push
add
dec
push
ljmp
sbb
mov
mov
add
push
inc
ljmp
or
sbb
push
cmp
lock
mov
ret
test
adc
addb
sbb
add
mov
dec
pusha
add
sahf
push
push
pop
loop
enter
xchg
pop
insl
sub
sbb
push
or
mov
add
cli
push
sub
std
jle
jo
push
adc
push
pushf
out
pop
pop
or
mov
inc
mov
dec
cld
gs
cmp
adc
push
pushf
push
mov
aas
loopne
insb
mov
cmp
dec
in
daa
xchg
andb
jle
movsb
scas
mov
ja
and
dec
into
fs
outsb
pop
jno
push
shll
cld
fildl
mov
push
movsb
aaa
mov
sahf
mov
repnz
insb
cmpsb
push
cmpsb
lcall
or
push
adc
xchg
and
int3
push
dec
popf
xchg
mov
hlt
adc
push
outsl
adc
imul
add
add
pop
lods
jb
cs
enter
fisttps
jmp
push
or
push
pop
xor
outsl
es
pop
mov
push
jne
push
xchg
push
jns
cli
mov
mov
xchg
inc
data16
xchg
mov
adc
dec
jno
scas
popa
icebp
inc
movsl
outsb
out
push
enter
add
int3
jmp
movsb
inc
jmp
cmp
notb
xchg
dec
test
hlt
cs
clc
inc
aaa
cwtl
test
sbb
jbe
sbb
inc
xchg
les
dec
cli
fs
cmc
cli
into
sub
or
sbb
loopne
sbb
and
sti
mov
clc
mov
test
push
inc
inc
test
push
movsl
mov
seto
loopne
and
cmp
jmp
lcall
push
dec
xor
cs
lock
jo
dec
sbb
call
mov
cmpb
shll
mov
hlt
or
mov
out
inc
and
lcall
stc
jp
test
adc
pushf
push
push
mov
sub
pop
xor
int3
lss
sub
pop
lock
mul
dec
lcall
imul
cmc
loopne
enter
adc
inc
jecxz
adc
add
jbe
pop
jle
or
adc
int3
mov
daa
jb
mov
xchg
xchg
es
jbe
sarl
mov
fs
in
fld
inc
mov
inc
rorb
test
add
jbe
fcmovnbe
mov
cmp
cs
add
fs
xchg
std
mov
test
mov
movsb
scas
mov
je
cmp
sbb
adc
divb
jo
mov
mov
cmc
mov
lea
testl
pushf
std
push
mov
jb
test
mov
shll
lea
fcompp
ffreep
mov
call
dec
inc
mov
dec
fs
sarl
movsb
loopne
cmpsl
fstpt
sub
jns
mov
jne
sub
fdivrs
inc
adc
dec
incb
xorl
addb
movl
mov
fs
pop
cmc
or
ss
stc
add
and
icebp
push
pop
je
lods
fldt
in
insb
add
or
mov
mov
negb
xorl
adc
call
push
pop
popf
adc
ret
cmp
xchg
fsubs
cmpsb
call
sbb
add
ret
cmp
mov
dec
bnd
popa
xor
pop
xor
call
xlat
mov
add
fildl
or
mov
dec
and
dec
mov
push
ljmp
into
imul
mov
add
insb
sub
cwtl
mull
push
nop
jmp
int3
push
aaa
pop
mov
mov
out
mov
mov
jge
popf
ret
xorb
mov
ljmp
out
and
mov
push
xchg
out
mov
loope
pop
outsl
rol
outsl
aad
lcall
std
mov
lret
test
and
push
test
lret
mov
cld
subl
sbb
dec
lret
stos
rorb
pop
les
push
pop
inc
adc
pop
jae
inc
xchg
outsb
fsubl
sbb
mov
mov
test
jmp
test
daa
mov
cld
add
cltd
loopne
stc
fildll
adc
shll
push
lea
adcb
fcmovbe
push
cmpl
js
or
outsb
cld
nop
scas
xor
test
inc
leave
jno
je
rclb
lods
xor
cmp
shlb
sbb
sub
push
push
push
mov
ss
push
fdivs
les
sti
shrb
rclb
push
cmpl
cltd
mov
cs
loopne
push
or
or
movsb
mov
cmc
push
push
add
add
xchg
dec
lea
call
pop
adc
inc
cmc
pop
jbe
test
outsb
ljmp
gs
xor
jne
cmp
sbb
aad
inc
push
into
and
pusha
aaa
hlt
outsb
push
and
aam
add
insb
jo
fsub
pop
enter
cmc
movsb
rorb
popf
dec
mov
xlat
test
fimuls
mov
sbb
cmp
movsl
in
mov
lods
fsubs
fdivrs
and
mov
pop
scas
outsl
and
lock
hlt
pop
out
xchg
fsubs
lea
ljmp
xor
flds
cmpsl
pop
movsb
into
adc
fildl
test
push
push
pop
and
push
sub
je
nop
mov
mov
addb
test
negb
sbb
call
test
loop
rcll
push
or
clc
lock
clc
add
inc
sub
push
sbb
jmp
js
loopne
adc
lock
lods
dec
push
loopne
test
scas
push
sti
lods
and
movsb
mov
inc
mov
jmp
push
mov
mov
sub
xchg
pop
mov
add
lock
ljmp
rcl
dec
loope
and
xor
pop
sar
nop
dec
mov
push
je
mov
push
loopne
push
aam
rorl
out
pusha
push
mov
rol
lldt
jmp
sbbb
fcmovnb
lea
rorl
popa
or
sbb
in
inc
fcoml
in
test
ss
jne
mov
rcrb
mov
popf
adc
loopne
ret
rcrb
jne
flds
ret
outsb
jb
insb
inc
lret
ds
aaa
sub
push
cld
or
push
test
data16
mov
xchg
and
in
mov
lock
mov
test
pop
aas
adc
xchg
mov
data16
mov
push
xlat
dec
push
adc
ljmp
je
insl
stos
adc
and
push
cmp
add
imul
cltd
loopne
sbb
xchg
mov
in
stc
dec
fbld
test
push
push
and
ret
movsl
xorl
mov
ds
sbb
fdivs
pop
adc
aaa
decb
inc
in
or
mov
add
test
mov
leave
and
stos
lock
ljmp
xchg
nop
adc
pop
mov
push
adc
add
sbb
outsb
mov
add
fisttpl
call
cli
xor
mov
clc
andl
call
gs
and
push
or
rcl
xchg
inc
xchg
push
mov
jbe
or
lods
sub
mov
inc
xchg
and
lds
adc
dec
out
or
inc
and
aas
pop
push
push
jg
clc
mov
jle
in
adc
pop
xor
inc
inc
aaa
call
sbb
dec
add
or
cs
inc
addr16
mov
leave
dec
inc
adc
mov
mov
repz
aam
loopne
push
add
leave
xor
std
mov
movsb
pop
add
rclb
or
mov
mov
imul
cltd
call
mov
mov
mov
int3
dec
fsubs
xor
add
adc
add
push
sbb
jne
ret
mov
ret
std
xchg
cli
and
and
ret
push
leave
iret
push
stos
mov
lock
shrb
mov
lods
es
inc
repz
mov
test
pop
push
xchg
adc
lds
lret
jge
rcll
mov
or
mov
rcrl
xlat
push
jg
add
push
jle
clc
push
rolb
inc
adc
mov
cmpsb
and
dec
cld
fsubr
flds
lcall
sarb
pop
clc
sub
loopne
mov
mov
mov
or
int
ror
xor
jmp
jmp
push
add
adc
push
out
mov
cwtl
incl
test
and
lods
fldl
popf
loope
cwtl
push
push
incb
sub
data16
nop
and
andl
lcall
into
mov
fs
xor
insb
test
mov
inc
cli
mov
mov
shlb
lret
in
dec
outsl
nop
in
insb
pop
pop
data16
loope
mov
gs
dec
cmpsb
push
pusha
jp
xchg
in
fsubrl
aaa
inc
fildl
inc
cmp
insl
or
aam
loop
adc
jle
popa
mov
inc
sub
hlt
ja
and
dec
and
push
test
sub
fldenv
adc
jo
dec
lock
and
mov
cmpb
test
sub
rol
mov
add
test
pop
cmp
inc
dec
cmp
pop
aam
dec
and
fistl
rclb
sbb
push
push
mov
mov
sub
ds
sub
and
jg
xor
pop
lock
lods
incb
insb
addr16
push
pushf
mov
sbb
shlb
pop
shlb
js
push
loope
mov
mov
sub
ljmp
lcall
fcompl
mulb
pusha
incl
jle
inc
test
outsb
inc
test
lods
xchg
icebp
test
mov
mov
fwait
rorl
push
in
add
cmp
adc
mov
push
inc
lds
je
fnstenv
movsb
push
push
outsb
xor
int3
lea
test
insb
xchg
add
push
xchg
mov
cmp
or
inc
mov
add
dec
data16
and
xor
xorb
test
push
mov
push
adc
add
jbe
outsb
push
dec
call
in
test
fists
das
int3
pop
pop
call
mov
push
xor
inc
incl
int
fiadds
fwait
pop
lret
sub
pushf
add
xor
stos
aad
jne
lods
or
or
push
add
dec
andl
loopne
call
push
and
add
mov
mov
pop
js
js,pt
les
push
in
cmp
stos
xchg
in
es
push
adcb
mov
ja
or
jle
fiadds
push
cwtl
sbb
scas
mov
push
mov
xchg
das
and
adc
daa
enter
lods
and
lahf
push
clc
test
ja
test
add
gs
mov
ja
or
inc
dec
sbb
add
xchg
cltd
jbe
test
js
xchg
test
adc
aad
pop
jle
sbb
loop
or
sbb
mov
movsb
pop
add
mov
push
jg
mov
mov
jns
addl
ljmp
hlt
test
push
gs
gs
push
inc
inc
xchg
jl
cmc
iret
or
pop
or
imul
repz
ja
mov
mov
jae
dec
cs
clc
idivb
xor
imul
push
sbb
les
enter
mov
test
lret
flds
add
cmc
dec
adc
mov
jle
test
add
pop
pop
and
pop
or
mov
mov
push
mov
dec
test
push
pop
int3
xchg
add
add
add
mov
cs
pop
out
lea
mov
adc
xor
mov
inc
cli
mul
cld
adc
adc
mov
test
pop
lcall
push
or
jge
inc
sbb
xor
outsl
fs
mov
dec
lods
or
mov
fisubs
lcall
out
xor
hlt
sub
ljmp
add
dec
insl
push
cld
and
adc
out
sub
imul
and
sarb
flds
test
dec
push
pop
dec
mov
psubsb
insl
xor
movsb
mov
jmp
push
adc
xor
jmp
dec
pop
icebp
mov
add
sbb
xchg
dec
cmp
cmp
call
xor
or
cmc
mov
in
add
add
ret
or
push
js
push
adc
and
jne
test
js
andb
outsb
inc
add
lahf
loopne
and
jmp
xor
out
das
mov
pop
icebp
cmpsb
fisubrl
mov
icebp
push
xor
adc
int3
fldcw
jecxz
jo
data16
roll
mov
out
fcoms
pop
ljmp
sub
pop
decb
sub
ljmp
push
in
out
into
roll
scas
ficoml
xor
js
and
add
cltd
cs
mov
mov
sbb
insl
add
inc
jbe
cmpsl
add
decb
cmp
stos
test
les
data16
xor
int
data16
jle
jo
xor
inc
pusha
mov
pop
pop
mov
inc
pop
jo
jmp
fdivr
jl
push
inc
pop
rolb
push
jnp
fsubr
jp
xchg
xsavec
inc
lock
mov
in
and
pop
push
jae
cmp
decb
pop
jo
push
loopne
cmpb
sbbl
mov
jne
adc
loope
bound
sbbb
les
or
test
mov
or
cmp
fwait
ret
or
popa
mov
es
push
loopne
add
inc
inc
mov
in
lret
cmp
or
movsl
mov
xor
push
movsl
dec
sub
ss
ret
clc
xor
test
push
ja
mov
shlb
push
or
or
test
aas
insb
js
dec
pop
mov
js
push
push
mov
call
es
imul
insb
movsl
push
mov
adc
and
lock
pop
hlt
and
cmp
ja
std
cmp
mov
jmp
arpl
xchg
inc
cmpsb
lret
jmp
add
push
pop
lods
pop
mov
push
call
cmc
push
mov
mov
pop
mov
aam
outsl
inc
inc
scas
push
inc
add
subb
xor
nop
lret
inc
adc
lods
push
inc
leave
clc
aam
cld
jno
mov
rorb
mov
add
cli
adc
sub
adc
call
or
dec
loopne
mov
imul
add
inc
mov
aas
push
mov
or
std
jbe
mov
mov
dec
adc
push
sub
inc
loop
orl
hlt
nop
icebp
xor
xchg
fisubl
shrb
loope
sub
inc
push
test
xor
inc
push
xchg
xor
add
insb
and
lea
decl
std
push
mov
sbb
dec
lea
mov
outsl
sbb
add
mov
mov
incb
xchg
icebp
push
call
mov
stos
imul
mov
add
cli
shlb
and
bnd
fsubrs
aas
adc
mov
push
push
push
loope
nop
jle
adc
push
mov
xor
pop
test
push
popa
lock
lret
push
push
cmpb
jge
dec
xchg
jge
push
xor
repnz
xor
cmp
rol
cmp
andb
cmpsb
mov
sbbb
pushl
inc
std
call
fcmovu
es
push
pop
pop
inc
or
mov
mov
push
or
mov
and
icebp
aas
or
cld
lcall
push
call
mov
movsb
jl
stos
jbe
hlt
mov
sbb
mov
gs
adc
add
ret
or
pop
sub
sbb
aaa
clc
test
or
or
pushf
iret
data16
mov
aas
push
inc
pop
lret
xchg
xor
testb
adc
data16
pop
adc
imul
rolb
jl
cmpsb
push
sub
gs
mov
inc
mov
fnstenv
clc
decl
add
outsl
mov
std
pop
ds
adcl
pop
je
cmpb
dec
xor
mov
popa
nop
and
pop
add
pusha
dec
dec
push
in
enter
clc
jecxz
xchg
repnz
add
adc
clc
mov
pusha
dec
pop
cmpl
rorb
sbb
aam
xchg
imul
cmpsb
xor
inc
clc
jg
jmp
std
adcl
jg
call
push
mov
mov
cmpsl
sbb
jno
pop
mov
pop
inc
and
call
in
mov
lret
push
ds
xchg
lock
ret
push
ret
sbb
cpuid
inc
add
mov
cs
jmp
call
lea
cmc
mov
xor
inc
clc
adc
mov
sub
sub
loop
cmovl
fisubs
dec
add
ret
push
popf
inc
in
lock
std
inc
cmp
and
js
xor
push
std
test
adc
inc
inc
sbb
lods
rcrl
incb
orb
insl
hlt
mov
mov
push
outsb
call
mov
mov
xchg
rol
adc
sbb
jg
out
ja
nop
dec
movl
sti
out
lea
cli
adcb
cld
mov
sub
repz
sub
in
and
jne
jmp
outsb
imul
mov
xchg
ficoms
mov
mov
sub
sahf
lea
jb
scas
and
test
roll
mov
push
xchg
xchg
add
into
push
inc
jg
mov
dec
add
mov
xor
push
clc
ret
jb
mov
mov
mov
cld
pop
pop
mov
in
mov
clc
clc
pop
mov
aad
add
hlt
add
test
inc
js
cmp
push
adc
push
ds
cwtl
jp
mov
pop
aaa
mov
imul
dec
and
decl
xor
mov
push
xorb
sub
dec
ror
sbb
and
mov
pop
mov
movsb
and
test
lock
lcall
push
mov
sub
pop
push
push
pop
pop
in
jne
sbb
cmpsl
jg
push
dec
jmp
std
xor
jno
fists
pushf
insl
mov
imul
and
fs
jl
in
outsb
adc
mov
pop
mov
mov
clc
push
sbb
ss
add
adc
jbe
movsb
pop
xor
inc
jge
cmp
leave
test
scas
inc
sbb
jl
clc
inc
je
inc
xor
mov
push
pusha
cltd
mov
mov
popa
and
mov
cli
add
call
inc
fidivs
inc
mov
or
jle
mov
pop
push
push
lock
je
enter
lock
xor
mov
sub
pop
xchg
hlt
in
lcall
sub
loop
mov
shlb
mov
sarb
data16
add
mov
push
jmp
xor
iret
inc
push
aaa
ficomps
push
shl
push
test
sbb
shlb
ds
insl
xor
fmuls
mov
inc
push
mov
pop
dec
in
repnz
adc
xor
or
add
imul
mov
adc
incl
push
xchg
mov
jmp
mov
rolb
fidivs
dec
and
aad
or
or
mov
mov
les
fcmovb
xor
cwtl
lock
inc
pop
js
mov
xchg
push
xchg
mov
fcomps
inc
ficoml
ficomps
imul
or
aam
mov
fdivr
add
push
enter
nop
call
push
pop
pushf
inc
es
and
adc
sti
mov
xchg
inc
clc
or
aad
gs
push
inc
xor
cmp
add
ss
sbb
aam
rorb
ret
arpl
call
pop
and
cmp
sti
push
add
sub
mov
imul
enter
or
jns
push
and
or
popa
fcompl
stos
mov
xor
cmpsl
into
imul
and
pop
xchg
push
xchg
shlb
mov
pop
mov
xor
push
repz
fs
xchg
sub
or
jb
xchg
jb
adc
xor
pop
inc
push
mov
push
fsubr
mov
icebp
filds
decb
cs
addr16
js
mov
fildl
xor
jo
adc
push
mov
out
inc
pop
sbb
cmp
mov
mov
jl
fisubrs
push
mov
cmc
orl
inc
mov
int3
push
ret
cmp
xor
mov
and
clc
jg
insb
pushl
mov
push
repnz
sbb
or
adc
inc
pop
or
mov
dec
or
pop
mov
adc
jmp
movsb
cmp
dec
cli
inc
xor
mov
dec
pop
sub
popf
idivb
or
dec
push
inc
sub
mov
cmp
sbb
icebp
fistpl
iret
test
mov
leave
cmp
sub
push
in
dec
loopne
mov
or
gs
or
cmpsl
nop
popl
jl
mov
mov
inc
mov
add
push
push
xor
mov
push
daa
shr
aad
push
inc
sarl
mov
mov
aam
or
ret
mov
push
inc
push
adc
dec
fnstsw
cmpsl
cmp
jp
incl
jmp
std
xchg
ljmp
fcoml
xor
sub
lods
push
jmp
mov
iret
sti
lock
hlt
call
negl
leave
add
sbb
adc
jo
das
or
mov
les
xchg
mov
push
mov
jg
popf
sbb
mov
cmpsb
pop
hlt
or
sbb
or
fwait
or
in
incb
call
push
mov
inc
inc
cmc
add
xchg
aaa
adc
inc
mov
jle
dec
fdiv
push
push
add
sub
push
add
insb
dec
mov
push
inc
jp
push
jmp
cmc
mov
cmp
nop
mov
sbb
push
aam
repz
and
aad
clc
xor
mov
xor
push
and
adc
adc
test
inc
dec
pop
jae
test
rorb
ja
dec
jo
add
mov
test
push
mov
pop
sbb
cmp
inc
cmp
cld
ss
inc
subl
add
fcomps
add
inc
lret
xchg
mov
sbbl
int
or
in
and
ret
add
sub
and
loopne
adc
add
enter
test
mov
or
in
xor
pop
fdivr
dec
scas
pop
icebp
fs
test
lock
fs
fildll
cld
push
repz
sahf
add
xor
mov
inc
dec
inc
inc
lock
jp
sbb
popf
sbb
push
dec
loop
add
mov
adc
test
jle
mov
pop
add
sub
sbb
mov
clc
cmp
cld
lcall
aam
mov
js
mov
dec
inc
inc
jo
mov
call
mov
insb
in
xor
pusha
add
add
sbb
andl
scas
call
mov
jnp
cmpsb
xchg
fdivrp
call
cld
mov
ss
xor
mov
dec
enter
adc
mov
test
imul
jmp
mov
push
adc
xor
das
jle
inc
shlb
jg
jo
cmp
inc
fldl
enter
push
dec
insb
enter
lea
add
xor
cmp
jp
add
ficoml
mov
or
dec
test
ljmp
insl
inc
pop
sti
cmp
mov
loopne
icebp
xor
ret
lds
dec
cmp
clc
push
pop
push
sbb
popf
push
imul
mov
inc
xorb
mov
dec
int3
inc
jb
outsl
push
ja
lock
adc
loopne
jbe
jmp
push
mov
fs
aam
mov
jle
or
inc
int3
mov
andl
and
jl
add
cld
push
push
adc
cmp
gs
inc
mov
add
lret
clc
dec
mov
and
clc
incl
loopne
xchg
pop
adc
push
bound
cmp
icebp
std
mov
xor
pop
push
lahf
test
mov
cmp
fistpll
mov
cli
add
add
pop
cmp
xor
in
je
jg
lods
sbb
jno
inc
dec
movsb
incb
movsb
add
aas
push
icebp
js
mov
and
lcall
sub
mov
add
mov
out
decl
mov
outsl
adc
dec
add
outsl
pop
jp
call
lcall
fwait
pusha
mov
test
cmp
adc
cld
inc
sarb
ljmp
aaa
jnp
push
inc
rcl
add
xchg
xchg
sub
lock
loope
mov
ljmp
test
and
jp
mov
or
inc
cmp
clc
fnstsw
pop
pop
adc
add
imul
notb
repz
fistl
aas
aaa
mov
call
sub
or
leave
mov
or
adc
sti
daa
add
push
pop
mov
xchg
mov
stos
in
push
clc
nop
mov
into
dec
sbb
nop
in
inc
subl
das
into
adc
inc
add
add
inc
rcrb
repnz
lea
int
mov
in
mov
sti
pop
pop
lea
inc
leave
mov
xor
cmp
movsb
test
sbb
mov
sbb
xor
push
mov
cwtl
jo
sbb
cld
fs
fsubr
inc
cmc
dec
bound
mov
push
ljmp
inc
scas
sbb
jg
or
or
pop
jmp
clc
mov
clc
por
xor
jmp
push
cmp
push
or
pop
jg
mov
inc
dec
add
fisttpl
mov
gs
mov
or
pop
hlt
into
sub
sarb
and
frstor
fdiv
ds
dec
repz
mov
dec
mov
and
fidivl
jp
hlt
or
sbb
cmp
xor
push
mov
maxps
in
and
mov
add
ficoml
or
mov
incl
mov
and
call
xchg
ret
and
jge
push
add
fmuls
add
call
out
add
test
lret
lods
pop
jns
xchg
inc
adc
adc
bound
push
and
or
mov
arpl
arpl
mov
mov
sarb
in
or
sbb
mov
adc
test
lock
sub
and
xchg
push
or
jmp
clc
adc
popf
adc
dec
lods
add
shrb
rsqrtps
cmp
clc
push
ss
je
dec
or
jae
cmp
cmp
mov
mov
cld
sbb
mov
ret
add
mov
cmpsb
clc
add
or
dec
aam
adc
cmp
jno
add
jnp
push
or
js
cmp
stos
fstps
mov
push
inc
test
pop
testb
jge
or
jecxz
mov
xor
je
and
inc
cli
cs
and
int3
add
adc
rol
adc
jno
inc
into
out
mov
mov
rolb
data16
loope
clc
pop
push
sub
mov
and
inc
leave
lods
and
cmp
rorl
pop
lock
test
or
mov
subb
outsl
pusha
sbb
xlat
lret
test
je
and
or
add
jne
mov
arpl
cwtl
xorl
add
and
repnz
aad
push
and
in
xor
cli
adc
dec
out
or
pop
push
or
mov
dec
xlat
pop
cli
loopne
mul
mov
fwait
cmp
mov
call
inc
rcr
cmp
popf
out
inc
dec
bound
and
dec
push
stc
fimuls
leave
fsubs
lods
sahf
inc
adc
subl
pop
push
aaa
rcl
mov
mov
jne
adc
mov
int3
and
orl
jae
test
add
add
mov
lods
mov
inc
popa
hlt
add
push
ret
sub
mulb
push
jo
push
push
out
call
sub
xchg
out
sti
xchg
adc
cmp
movsb
nop
push
lcall
mov
dec
sahf
paddb
lret
cld
mov
pop
pop
cmp
and
dec
push
hlt
pushf
and
jne
mov
mov
or
imul
ja
push
sub
xchg
cmp
mov
xor
or
aam
or
clc
lds
mov
and
lods
loopne
inc
cltd
mov
jmp
mov
add
rclb
pop
jno
xchg
bound
aaa
xchg
loope
inc
xor
sahf
sub
and
jmp
inc
outsb
mov
hlt
add
fistps
cmp
xor
sub
mov
dec
dec
add
cs
test
rcl
inc
stc
mov
popa
push
les
rclb
pop
pop
fsubrs
push
cld
add
mov
push
fcmovnb
push
sub
ret
icebp
mov
push
cmpsb
mov
xchg
test
fldcw
push
sbb
test
pop
test
dec
xor
das
xor
mov
lret
je
xchg
loope
aas
push
sub
sub
out
sub
xor
sub
ss
cmp
push
int
pop
push
mov
scas
dec
fldcw
push
cmp
xor
es
sbb
xlat
adc
js
pusha
sbb
enter
push
mov
mov
adc
js
mov
ljmp
sub
sbb
push
fdivs
mov
es
jbe
mov
decl
out
shll
fdivr
test
rcrl
add
jmp
xlat
pop
cld
adc
insl
popa
mov
jb
fcompl
out
adc
adc
inc
cmp
mov
sti
sarl
inc
popa
lods
mov
int3
add
int
imul
xor
mov
mov
push
es
inc
ret
mov
cld
int
ret
mov
cltd
loop
cmpsb
mov
xor
bound
jne
push
or
sub
jae
lea
orl
adc
int3
push
adc
jmp
gs
out
or
or
adc
dec
jmp
sbb
inc
add
and
pop
add
aaa
pop
add
inc
push
iret
xchg
in
enter
xor
lock
mov
cld
clc
mov
dec
mov
mov
bound
and
jg
and
or
scas
xlat
jnp
rorb
flds
pop
ficomps
push
xor
clc
cmpsb
mov
scas
ret
in
lahf
movsl
pop
movsb
xchg
and
notb
push
rcrb
pop
hlt
out
cmp
ror
cmp
xor
add
inc
push
int
sub
pusha
pop
xchg
sarl
add
jle
rcll
inc
inc
pop
and
fcoms
xor
inc
add
outsl
push
mov
sub
dec
or
loope
sbb
mov
xor
push
into
outsb
cltd
mov
pop
dec
lock
xlat
and
test
aad
sub
mov
inc
fiaddl
add
sbb
push
jb
dec
and
mov
inc
call
lods
lds
dec
cwtl
mov
push
push
sbb
je
std
aaa
and
je
mov
xchg
jp
decb
or
xchg
add
bound
enter
fadd
mov
insb
mov
mov
es
pop
sbb
test
in
ficompl
shlb
rorb
lock
xchg
inc
jmp
rcll
adc
and
mov
xchg
std
ss
shlb
ret
int
jle
push
fisttpl
pop
leave
mov
inc
mov
adc
pusha
in
xlat
mov
push
xor
push
fists
or
push
inc
daa
pop
je
adc
ds
inc
mov
gs
mov
gs
mov
sub
nop
inc
push
cld
jb
and
jno
cld
mov
push
insb
jp
lcall
push
push
enter
test
insb
mov
dec
insl
insb
adc
push
mov
ficoms
pop
jo
push
dec
adc
cmp
jp
cld
aad
pop
jmp
inc
mov
jbe
je
nop
inc
inc
je
push
adc
aas
or
pop
add
into
bound
rolb
arpl
jo
movsb
sbb
std
andl
testb
add
and
jle
jb
push
inc
jmp
xor
les
lods
outsb
in
and
testb
or
pop
xchg
mov
rol
lock
jno
lock
stos
lret
adc
inc
push
shlb
dec
je
or
xchg
lock
arpl
repnz
push
test
sahf
xorb
call
sub
leave
es
jge
add
jne
cmp
call
push
pop
xchg
clc
jmp
loop
lcall
inc
into
pop
dec
es
adc
je
pop
ret
pusha
fadd
inc
push
pop
fsubrs
adcl
into
push
and
inc
testb
push
int3
dec
and
pusha
push
sbb
add
or
mov
je
mov
and
std
shlb
or
out
mov
jle
or
insb
inc
lods
cld
mov
mov
nop
ret
es
pop
incb
pop
movsl
dec
test
ret
loopne
int3
xchg
pusha
or
les
sub
fmuls
in
rcll
xlat
and
inc
clc
lret
cmp
sbb
jmp
repz
sub
push
dec
mov
out
lds
push
mov
xor
or
mulb
mov
mov
inc
clc
testb
pop
inc
aam
mov
sbb
sub
ret
and
lret
cmp
out
lock
mov
callw
add
addl
add
and
lea
scas
pop
jge
or
mov
out
fcmovnbe
fs
scas
dec
sbb
or
scas
sbb
rorb
rcrb
xorl
pop
leave
lahf
sub
push
jne
movl
je
data16
sub
push
fdiv
jge
rorb
xor
out
mov
mov
test
mov
out
orl
daa
xor
inc
imul
movsb
in
xchg
inc
cmc
dec
mov
fsubrp
pop
sub
mov
add
push
xchg
scas
push
xchg
sti
loopne
add
mov
cwtl
rolb
orb
imul
sbb
loop
es
mov
pop
or
into
sbb
shl
or
daa
dec
testb
pop
mov
fwait
test
sbb
in
adc
xchg
xor
xor
outsb
pop
add
sub
ljmp
cwtl
mov
sub
jmp
mov
cmp
xor
ret
dec
dec
and
inc
lcall
rorb
insb
adc
loopne
jl
jle
fdivr
jae
adc
les
mov
invlpg
add
pop
test
push
fisubs
in
test
test
adc
fs
mul
repnz
inc
test
int3
les
or
xchg
sub
int
lahf
inc
std
outsb
lock
add
add
sub
dec
call
push
stos
inc
cli
pop
jecxz
and
test
pop
xchg
mov
test
jno
test
gs
mov
clc
xor
fldt
push
insb
out
sbb
insb
sti
aas
out
and
int
push
xchg
or
push
pop
test
rorl
push
and
xorb
sbb
push
dec
sbb
push
pop
mov
inc
dec
jo
clc
and
orb
or
cmp
aas
mov
movsl
test
test
adc
pop
xor
push
int3
in
mov
adc
inc
inc
ret
out
pop
imul
clc
fs
scas
mov
cmp
call
jae
data16
inc
mov
test
jnp
xchg
pop
jmp
and
fs
mov
addb
xchg
ds
lds
lods
idiv
scas
sub
jl
ret
sub
add
sub
and
inc
push
sbb
adc
inc
add
mov
push
mov
inc
and
xor
lds
stos
lock
inc
dec
inc
sbb
stc
mov
inc
jg
stos
xchg
ret
ds
shrb
cmpb
add
xor
pop
xchg
push
pop
add
int3
paddw
jle
fs
lea
test
fisubrs
or
sbbb
jo
jo
jne
mov
inc
sbb
mov
mov
test
xor
loope
sub
mulb
pop
dec
cmp
es
jbe
popa
cli
inc
or
shr
pusha
ret
cmp
test
mov
sbb
and
sub
insb
int3
push
les
cmc
push
xchg
adc
dec
lcall
adc
pop
mov
lea
sub
inc
pop
mov
pop
push
imul
les
call
loopne
mov
aas
mov
sbb
or
xchg
fnstcw
call
jb
js
test
ljmp
incb
filds
imul
or
popf
and
jecxz
jmp
movsb
add
jnp
dec
adc
shl
adc
fldl
js
shll
add
push
cwtl
jecxz
icebp
stos
add
jo
mov
sar
push
fisttps
and
sub
test
inc
mov
ljmp
jmp
clc
sbb
dec
fildl
in
dec
out
mov
mov
or
mov
stos
fldcw
pop
cvttps2pi
test
dec
adc
into
iret
cmc
xor
push
lret
or
je
call
cmp
mov
ret
stos
test
les
loope
mov
push
dec
adc
cvtpi2ps
cwtl
xor
jne
pusha
push
inc
movb
or
lods
sub
sub
fstpl
jo
call
pop
lea
mov
int3
test
daa
or
mov
and
fidivl
cmp
ds
addb
push
or
push
test
push
insb
xor
icebp
dec
mov
cmp
jo
xchg
push
notl
add
push
rorb
fcmovb
arpl
sub
and
push
mov
push
and
lods
fdivp
pop
or
mov
lock
rorb
ret
test
hlt
push
mov
mov
pop
xchg
cs
incl
xchg
aas
ret
inc
add
or
sbb
inc
inc
rcrl
push
sbb
popf
mov
fs
gs
mov
push
push
inc
jnp
aaa
inc
fstps
sbb
fcoml
and
fcompl
fimull
pop
mov
aam
scas
scas
xor
or
cwtl
jp
inc
lahf
in
and
push
xor
xorb
shll
les
rolb
cmpsb
jmp
jb
mov
jo
mov
cld
pop
push
rol
loopne
push
xsha256
cmpsb
xchg
mov
nop
adcb
scas
or
and
repnz
and
cli
add
fistl
mov
lret
push
pop
sub
movsb
std
mov
fimull
ja
sub
dec
lcall
fcomps
ret
inc
push
mov
adc
push
mov
ret
mov
icebp
adc
or
fwait
jle
adc
xchg
sbb
aaa
les
mov
jp
dec
cmovo
insb
jle
loopne
push
inc
sbb
lods
clc
divl
add
mov
jg
jo
mov
adc
lahf
add
in
mov
and
nop
jle
pop
mov
xchg
mov
add
fsubrl
jbe
shl
push
clc
mov
cmp
xchg
or
sbb
xor
hlt
sbb
or
jne
hlt
and
xchg
xor
xor
cs
insb
adc
call
divb
add
or
mov
xor
mov
std
fists
push
std
outsl
add
and
rcrb
lock
xchg
or
inc
fsubp
xchg
mov
insl
xchg
inc
jb
push
out
add
push
int3
xchg
js
sbb
int3
shll
and
jae
mov
mov
ds
mov
pop
push
out
lea
int3
jnp
ljmp
mov
jg
mov
pop
ficoml
inc
cmp
call
daa
fiadds
subl
inc
dec
mov
pop
sbb
aaa
mov
bound
loopne
adcl
xchg
add
mov
data16
dec
inc
and
push
or
fdivrp
std
xor
adc
popa
and
mov
inc
dec
xchg
nop
adc
bound
push
or
lea
push
sub
dec
sub
scas
dec
adc
leave
pop
pushf
add
xchg
stos
xchg
xor
push
loop
out
lea
inc
push
movsb
push
lods
cwtl
aam
enter
inc
mov
xchg
xor
dec
sub
in
jne
rolb
push
fs
sti
xchg
hlt
mov
mov
xchg
call
push
loopne
jmp
xchg
sbb
pop
pusha
call
outsb
cmp
outsb
mov
lret
push
es
xchg
clc
fidivs
cmp
adc
or
push
inc
and
addl
xchg
lods
inc
sbb
jbe
or
and
push
add
hlt
mulb
test
cmp
inc
int3
cmp
adc
sbb
inc
fcoml
add
mov
std
movsb
test
call
std
inc
or
cmc
push
pusha
add
std
push
popa
lret
sbb
int
call
jne
push
lea
aas
mov
pop
push
icebp
imul
mov
and
mov
or
push
xor
test
adc
inc
push
cmpsb
hlt
push
push
ja
shlb
cld
test
mov
mov
sbb
int
inc
lods
js
ljmp
lret
cmp
mov
add
clc
mov
adc
dec
jmp
sbb
lahf
inc
cli
js
mov
add
out
xchg
sarl
lea
ja
fcoms
jp
pop
ret
inc
adc
mov
mov
mov
mov
sti
mov
dec
imul
shl
jb
sbb
xchg
sub
rcl
jo
pusha
movsb
lret
int
jge
dec
fldt
outsl
or
mov
loopne
in
xchg
imul
mov
mov
pop
aas
sbb
mov
jne
in
adc
mov
aaa
dec
add
test
push
adc
and
test
push
idivb
mov
cmp
mov
push
popf
sbb
pop
insl
loop
jmp
dec
adc
scas
cvtps2pd
shll
mov
into
ror
imul
adc
test
andl
and
mov
ja
insb
sub
inc
popf
xorb
xchg
fidivs
stos
dec
sbb
call
xor
icebp
pop
inc
mov
or
mov
push
push
decl
xor
cli
ss
jbe
push
lea
mov
pop
fistps
adc
pop
nop
loopne
push
mov
testb
jne
cli
and
cmp
sbbl
adc
sbb
jno
dec
add
cmp
adc
test
les
add
xchg
xchg
cmp
sbb
inc
decl
and
out
and
jb
test
mov
or
push
pop
fcmovb
pushf
daa
loop
inc
or
push
xchg
leave
outsb
pusha
cwtl
into
xor
push
out
cmp
push
pop
pop
add
mov
stc
test
dec
sbb
sbb
imulb
push
inc
pop
and
lods
mov
mov
cmove
aas
adc
insb
cmp
or
adc
cmp
test
mov
push
adc
mov
cwtl
inc
mov
mov
lret
gs
mov
mov
shlb
fidivs
stos
nop
gs
mov
mov
mov
xchg
cltd
mov
mov
xor
add
inc
pop
pop
sbb
hlt
or
add
mov
sub
sbb
shlb
in
cmp
dec
inc
pop
sbb
or
jge
pop
pusha
xchg
dec
pop
sbb
jmp
mov
cmovne
mov
inc
adc
loop
push
sarl
mov
sbb
sbb
subb
cwtl
mov
jne
mov
inc
pop
push
xor
je
jo
insb
inc
ss
jp
pop
test
mov
dec
push
test
xlat
nop
pop
lret
aas
hlt
push
clc
add
pushl
and
mov
lcall
popf
xor
sbb
push
cld
loop
or
cmp
out
mov
pop
cmpl
pushf
push
ljmp
sbb
jnp
js
nop
cmp
sub
movl
aaa
mov
xchg
push
aas
rolb
shl
mov
fmul
xor
enter
mov
ret
mov
or
scas
mov
sub
or
cli
mov
bound
xchg
dec
loopne
push
add
pop
sbb
dec
pop
jg
shrl
inc
add
mov
or
cmc
add
into
xor
fs
enter
stos
sbb
lds
mov
sbb
test
mov
xchg
test
fdiv
pop
shll
push
loopne
and
add
in
cltd
or
shl
std
mov
jg
stos
je
pop
inc
mov
dec
fs
popa
adc
test
add
mov
push
or
adc
xor
xor
push
pop
inc
std
or
lock
push
ja
decl
pop
fs
mov
push
ljmp
nop
xor
push
js
rorl
push
or
jg
fidivrs
cld
push
cmp
and
movsl
outsb
dec
sbb
insb
in
orb
cwtl
xchg
clc
outsb
dec
or
loopne
lock
loope
ss
pop
rcrb
call
fldl2e
ret
mov
pop
out
andl
sbb
xor
cmpsb
mov
inc
or
lea
rclb
outsb
shll
push
xor
mov
pop
cmp
testb
dec
cmp
or
insb
and
rol
cld
and
test
out
icebp
push
test
cmp
lret
inc
and
inc
push
cmp
inc
int3
push
or
pusha
pop
in
inc
roll
ror
in
push
pusha
stos
pop
mov
fcom
or
and
or
push
test
sub
add
mov
clc
inc
nop
xchg
inc
jge
mov
push
push
cld
sub
icebp
cmp
mov
and
ret
or
cvtps2pd
xorb
adc
hlt
xchg
cs
int3
jne
gs
sub
push
jl
dec
adc
lret
in
imul
ss
cmp
mov
lret
push
cwtl
stos
mov
adc
mov
sarl
mov
and
movsb
mov
mov
pusha
into
shll
dec
addb
xor
jl
pop
adc
xchg
js
into
sbb
inc
mov
dec
cmp
aam
shrb
std
les
nop
mov
out
inc
and
popa
loope
stos
mov
aas
cs
pop
add
sarb
pusha
xchg
inc
add
and
push
sbb
ss
and
cld
iret
and
fs
stos
shl
adc
push
loopne
pop
ljmp
movsb
sti
fldl
sub
mov
cmc
int3
loop
decb
and
nop
arpl
aam
aam
xor
xor
mov
mov
inc
in
cltd
inc
xor
or
fdiv
mov
or
sub
sbb
pop
mov
movsb
pusha
lods
xchg
iret
mov
rcll
and
push
mov
punpcklwd
add
xchg
mov
call
mov
add
fcoms
add
and
mov
je
adc
shl
mov
dec
lods
mov
int
cli
loop
sub
push
incl
push
xchg
inc
or
or
add
sub
mov
popa
rep
mov
insb
js
add
imul
mov
das
rorb
and
push
push
or
and
cld
lret
loopne
sub
in
movsb
jg
adc
mov
mov
mov
push
add
mov
jle
shrl
sbb
push
test
and
or
lahf
clc
mov
clc
sbb
ja
adcb
jbe
sti
dec
sbb
and
call
mov
out
add
dec
sti
mov
leave
fdivr
iret
push
les
ds
add
xchg
cmpb
test
loope
mov
js
jbe
call
sti
mov
sub
insl
arpl
inc
dec
inc
scas
lcall
mov
fs
cli
out
test
fildl
dec
xor
bound
mov
and
daa
xor
pop
sbb
das
jb
call
mov
loopne
and
lcall
and
pop
leave
dec
call
ret
sahf
mov
out
pop
addb
mov
dec
or
sub
fs
push
xlat
icebp
mov
mov
mov
add
mov
cmp
dec
sub
xor
xor
aam
and
dec
icebp
imul
loope
in
lock
xor
outsb
out
out
call
adc
lcall
stc
cmp
jp
les
inc
and
mov
push
shlb
clc
imul
add
rep
fdivs
call
mov
mov
inc
inc
jne
xchg
test
mov
mov
ds
or
shr
xor
xchg
mov
sub
pop
pop
cmpl
cmp
lods
xchg
fwait
push
inc
test
inc
sub
roll
add
cld
sbb
sbb
movsl
mov
js
or
cmc
sbbb
mov
pop
add
lods
sbb
int
pop
mov
in
mov
dec
push
add
dec
or
inc
enter
mov
lret
adc
dec
in
push
fwait
sub
clc
mov
sub
adcl
imul
mov
cmp
mov
and
mov
sub
xchg
push
add
loopne
xor
test
call
ds
mov
jmp
dec
call
je
lods
sbb
je
adc
mov
cmp
adc
adc
cli
repnz
and
arpl
stos
inc
sub
jp
xorl
jb
cmp
and
pop
push
call
loopne
and
pop
fcomps
and
push
sbbl
and
dec
mov
add
int3
psubd
pop
subl
cs
lock
jmp
mov
dec
decl
adc
pusha
xchg
pusha
push
push
mov
scas
xor
test
gs
and
adc
adc
sub
jb
cltd
fldcw
sub
clc
jl
div
je
mov
jae
mov
mov
test
inc
push
dec
or
mov
mov
inc
xchg
in
iret
ss
add
arpl
loop
pop
je
sbb
into
add
sarl
sub
add
push
pop
mov
rcrb
or
mov
leave
nop
and
push
push
addr16
fiadds
fnstcw
xorb
and
cmpsb
in
test
ljmp
or
push
in
xor
xchg
sub
lock
mov
pop
or
int3
mov
add
movsb
mov
or
mov
stos
jne
push
mov
pop
inc
js
add
enter
lds
lcall
xchg
fstpt
or
sbb
mov
inc
dec
test
iret
cmp
aad
mov
ret
sbb
cmc
outsb
inc
daa
jecxz
fsubs
dec
mov
mov
imul
xchg
sub
or
jb
inc
xor
mov
jmp
std
test
pop
sub
int3
fsubrs
mov
ror
and
imul
arpl
popf
outsl
mov
roll
into
in
shll
mov
icebp
movb
xor
fs
in
dec
je
push
jle
mov
mov
mov
sbb
sub
das
stos
fidivs
jbe
stos
addl
jne
jge
decl
pusha
dec
inc
in
xor
mov
sbb
std
mov
add
lret
push
into
outsb
dec
jb
push
adc
sbb
sbb
in
orb
hlt
push
and
aaa
es
pop
xor
add
inc
test
mov
mov
jecxz
dec
imul
int3
call
hlt
mov
or
xor
fwait
les
xor
pusha
cwtl
jle
stos
add
rorl
ret
ja
and
jne
push
test
cmpl
fsubr
cmpsb
push
dec
lods
ret
push
inc
or
jg
icebp
add
xorl
and
xchg
scas
push
sub
insb
jp
lock
xor
cmp
or
dec
rorl
mov
pushf
push
sarb
xor
mov
ret
adc
mov
xor
dec
in
cmpsb
lcall
adc
testl
std
inc
aad
ret
fistpll
and
cmp
popa
push
jmp
or
sub
loopne
fstp
adc
dec
push
movsl
push
mov
push
jle
pop
flds
fwait
push
sub
mov
mov
mov
popa
pop
or
fisubrs
mov
sub
sbb
add
mov
mov
and
inc
shl
loopne
mov
mov
mov
pop
les
dec
mov
mov
js
sbb
inc
inc
mov
dec
repnz
aas
hlt
push
jmp
inc
imul
push
xor
dec
inc
je
sub
sbbl
hlt
das
scas
int3
adc
orb
add
mov
outsl
cmpsb
aam
inc
ret
sbb
lods
push
inc
xchg
and
mov
je
adcb
fwait
nop
loope
data16
sub
fsubrl
hlt
mov
lods
inc
test
or
data16
shll
push
scas
lcall
jne
mov
popa
and
cmp
mov
sub
hlt
inc
loopne
mov
push
and
pop
cmp
adc
inc
mov
add
pop
mov
inc
out
clc
adc
addr16
push
rorl
int3
jb
cld
jl
lock
frndint
test
mov
gs
adc
out
adc
push
jge
xchg
std
aaa
xchg
in
push
aam
dec
loop
sbb
ret
xor
push
jge
mov
test
stc
dec
xchg
lea
inc
sahf
inc
xor
mov
call
mov
jge
pop
cmc
outsl
loop
and
mov
jb
ror
call
shrb
push
mov
inc
int3
lds
xchg
in
add
jge
xchg
cmp
mov
sbb
dec
scas
orb
push
pop
jl
jne
ljmp
mov
add
or
in
mov
movsb
inc
adc
sbb
xchg
jp
push
pushf
mov
scas
inc
orb
xchg
push
push
mov
ss
rol
loope
inc
pop
inc
test
jge
pusha
add
mov
test
pop
mov
xor
sub
xorl
scas
push
cmp
xchg
adcl
pop
mov
inc
dec
adc
and
ljmp
insl
dec
pop
and
and
jo
leave
dec
mov
hlt
adc
les
clc
fs
enter
aaa
inc
ljmp
mov
cs
mov
xchg
addr16
divb
pop
js
and
es
push
mov
cli
and
jbe
pop
rcl
pop
unpcklps
adc
adc
mov
xchg
sub
test
leave
mov
add
mov
clc
mov
into
dec
call
stos
rolb
push
add
jo
mov
push
enter
and
pop
rolb
loopne
in
xchg
hlt
call
dec
aam
lea
cmp
xchg
push
faddl
jbe
or
cmp
mov
pop
lock
mov
adc
dec
scas
adc
sahf
xchg
jbe
pushf
fdivrs
hlt
xchg
lea
inc
cmp
loope
and
nop
or
push
push
push
int3
rep
pushl
add
lcall
pop
inc
lock
mov
sub
adc
inc
adc
push
dec
sub
cmp
pusha
adc
push
nop
adc
jl
les
push
aam
ret
fistl
push
xchg
jmp
fidivrs
mov
cmp
mov
in
outsb
add
jp
sbb
repnz
test
or
mov
or
mov
je
daa
addl
aam
inc
lock
adcb
iret
xchg
add
push
mov
test
bound
cli
jle
mov
dec
jle
inc
or
mov
sbb
clc
sbb
les
xor
push
mov
lea
cmp
lcall
loop
push
or
shlb
jl
xchg
and
push
lock
outsb
movsl
imul
inc
cmp
sbb
adc
push
pop
xchg
and
push
adc
loop
cld
bound
das
jno
push
jmp
xor
and
sbb
subb
cld
mov
dec
bound
inc
push
call
dec
aas
imul
leave
dec
fxch
les
dec
enter
ljmp
aas
sbb
push
or
idivb
loope
mov
lock
pop
mov
or
sarb
mov
je
mov
sub
cs
popf
idivb
or
lcall
push
dec
addr16
cli
data16
inc
or
loopne
cmp
cmp
in
aad
imul
dec
mov
je
cmpsb
hlt
jge
cld
mov
add
push
test
mov
mov
jo
mov
cmp
add
push
xor
mov
xlat
add
push
lods
in
fdivr
adc
ja
cmp
ljmp
cmp
jge
mov
mov
ss
mov
sub
shlb
adc
std
mov
dec
xor
mov
test
in
sbb
mov
insl
test
addl
jmp
outsl
cwtl
sbb
test
lock
ret
push
jo
add
add
mov
inc
inc
cwtl
or
fs
leave
mov
lds
push
add
cwtl
adc
scas
pop
or
xchg
out
mov
and
inc
test
push
cld
jmp
into
call
mov
cld
xor
pop
sub
lcall
push
clc
push
sbb
dec
push
xor
inc
push
imul
mov
ljmp
aas
push
mov
jg
mov
je
stos
stos
or
addl
test
in
cmpsl
clc
call
add
jb
sub
call
daa
ret
mov
sti
int3
in
arpl
mov
sbb
mov
cs
ds
push
mov
shld
and
sub
mov
push
push
rcl
jl
sbb
cmp
scas
insb
jmp
mov
inc
jnp
add
jecxz
das
loopne
jo
push
je
leave
mov
adc
dec
cmp
mov
pop
dec
movsl
popa
xchg
jp
push
mov
rolb
sbb
pop
cmpsb
jmp
xor
xor
mov
inc
mov
dec
mov
inc
inc
and
mov
jnp
je
ret
test
mov
add
or
dec
je
scas
out
ret
xchg
int3
jb
lock
xchg
dec
pop
add
je
rclb
jl
sub
pop
mov
sbb
lret
dec
xor
xchg
int
out
mov
adc
test
xchg
adc
outsb
in
adc
mov
mov
jle
mov
push
xor
mov
push
jl
add
mov
test
jle,pt
add
sbb
mov
xchg
push
int3
mov
dec
outsb
mov
outsb
add
mov
add
or
jge
and
push
mov
fsubs
dec
push
lcall
push
ds
sbbb
add
cli
clc
and
xchg
add
inc
push
fdivrs
mov
mov
push
and
mov
add
int3
fldt
gs
mov
pusha
adc
mov
pop
jp
adc
sbb
sbb
outsb
movsb
add
dec
ljmpw
inc
ret
loopne
inc
sbb
jae
push
adc
arpl
js
and
push
data16
ja
enter
test
add
inc
roll
sbb
cmp
push
mov
call
pop
nop
out
mov
jp
cli
je
mov
and
pop
aam
pop
xchg
add
jge
imulb
dec
xor
mov
cltd
push
std
ret
add
mov
pop
xor
push
scas
fs
xchg
xor
add
faddl
mov
cmp
cmpb
jne
ds
cs
inc
add
mov
popa
cmc
pop
adc
mov
mov
cwtl
in
dec
ret
fwait
loope
and
xor
pushf
pop
add
outsl
ret
out
jl
sbb
and
inc
mov
rcrb
add
or
mov
jo
les
inc
scas
scas
sbb
pop
mov
pop
or
mov
and
cmpb
push
testl
xor
fcompl
les
mov
pop
fs
movl
sti
cld
cbtw
or
sbb
in
hlt
mov
add
push
les
jle
mov
dec
inc
cs
cmp
data16
cmp
cmp
addb
add
mul
enter
xchg
dec
lea
mov
in
add
insl
cmp
cmp
outsb
dec
sbb
std
xor
jmp
dec
movsl
jmp
push
xor
bound
jns
cs
cld
jne
jo
jle
push
sub
dec
out
cmp
out
adc
dec
test
std
ret
mov
adc
mov
loop
or
pop
inc
sbb
idiv
push
mov
es
test
add
sub
pop
inc
push
push
or
sti
loopne
jge
mov
mov
jg
xor
test
dec
rcrl
mov
mov
int3
mov
push
mov
mov
scas
fs
call
in
sbb
mov
mov
pop
lret
or
mov
mov
out
rcr
push
jecxz
cmp
add
dec
lea
fsubs
lret
push
les
push
xor
dec
fimull
add
or
mov
fimull
add
jae
cmp
js
adc
pop
in
pushf
lods
lock
pop
sub
mov
jp
imul
dec
js
mov
clc
test
mov
pop
add
or
aas
push
add
test
push
fs
stos
inc
mov
mov
incb
add
popf
leave
inc
or
std
clc
dec
add
fs
in
stos
loop
pop
or
cwtl
push
movsb
mov
sub
cmp
in
inc
cmp
mov
in
arpl
loop
cmpsb
dec
add
and
je
lret
addl
data16
or
push
jg
cmpsl
je
mov
dec
mov
call
incl
imul
ljmp
test
jo
or
or
js
cmc
or
stos
or
gs
ljmp
andl
mov
sub
lcall
and
loopne
jne
sub
fstl
scas
imul
adc
sbb
rolb
in
sbb
dec
xchg
xchg
roll
cmpsb
clc
sbb
or
mov
mov
add
xor
and
inc
test
adc
cmp
and
push
dec
out
xor
adc
call
sbb
dec
int
outsl
loop
data16
rol
fsubp
lock
pcmpeqd
xor
test
cs
or
push
fdivl
jecxz
nop
add
gs
pcmpgtb
mov
mov
sub
in
add
mov
sub
loope
out
mov
std
xor
cmp
push
jmp
adc
lods
and
clc
test
imul
dec
subl
lcall
pop
add
pop
jmp
xchg
jle
inc
loope
adc
add
clc
loop
fiaddl
int3
fcomps
pop
ljmp
popf
mov
jle
test
rorb
mov
out
or
dec
inc
test
mov
xchg
jmp
andb
mov
push
call
loop
aas
je
clc
sub
fucomp
sub
cmp
data16
or
jle
pop
mov
inc
data16
sub
sbb
xchg
mov
pop
xor
mov
mov
ret
cmovo
int3
mov
push
jbe
mov
pop
push
fs
push
pop
sbb
int
loopne
test
imul
dec
add
or
ss
inc
test
inc
scas
add
xor
call
jmp
dec
xchg
call
sarl
adc
lret
in
arpl
aam
xor
fdivrl
or
add
test
mov
push
je
lock
mov
mov
je
fs
or
inc
add
aam
pop
fidivrs
clc
sub
popf
and
repz
mov
adc
outsl
pop
testb
notb
push
add
inc
pop
js
aaa
incb
clc
push
jb
add
push
add
mov
pop
js
call
std
push
test
lcall
clc
dec
lods
mov
adc
lcall
push
mov
fwait
ss
sbb
adc
add
adc
push
xchg
sub
loopne
sbb
and
imul
data16
sub
and
cmp
add
adcb
arpl
inc
cmp
xchg
xor
xor
je
cmc
gs
or
add
mov
xor
jno
scas
repnz
jo
sub
arpl
jg
mov
mov
adc
or
lods
sbb
add
or
jb
test
and
mov
mov
sbb
aas
clc
out
adc
pusha
cwtl
mov
call
jbe
test
clc
int3
xor
add
fdivr
push
push
dec
push
jmp
outsb
add
dec
in
insl
push
enter
fimull
daa
shlb
hlt
push
lcall
jg
push
xchg
cld
mov
cmp
bound
cli
cmp
or
fidivrl
gs
mov
fs
xor
mov
int3
call
ret
pcmpeqw
out
push
out
xor
in
xlat
lcall
hlt
xor
adcb
xor
mov
je
loopne
and
push
imul
xor
mov
sub
xor
mov
std
fwait
inc
sti
mov
test
cld
add
outsl
xor
or
jne
popf
lock
sub
dec
std
cs
add
push
mov
enter
lock
cmp
cmpsl
call
push
es
and
cli
fbstp
mov
dec
xchg
dec
sbb
mov
in
ss
fsubr
inc
mov
lret
or
jp
icebp
scas
xor
incl
xor
in
cmp
inc
pop
rorb
mov
mov
mov
xchg
push
es
mov
rorb
lock
loopne
or
leave
or
out
pop
fs
mov
adc
or
ja
inc
data16
outsb
insb
mov
test
insl
mov
mov
or
mov
mov
clc
sbb
fsub
jle
mov
or
push
aam
insl
sbb
pop
dec
cwtl
inc
imul
call
cwtl
int3
out
movsb
push
mov
shll
jb
mov
mov
push
loopne
mov
cld
dec
jmp
adc
loopne
cli
in
add
hlt
pop
or
test
adc
stos
les
enter
inc
test
negl
or
in
xor
and
push
pop
add
xchg
inc
negb
xor
add
ljmp
mov
push
mulb
cli
add
jge
loopne
movl
pushf
mov
aas
pop
dec
pop
aam
cmp
call
adc
lods
rclb
inc
das
mov
add
jbe
ror
out
je
push
ficompl
jnp
dec
push
mov
dec
test
inc
lock
ds
dec
xor
pusha
inc
js
xor
and
dec
notb
jo
push
jbe
call
cmpb
call
shrl
add
call
dec
sub
add
cmp
and
inc
nop
arpl
idivb
clc
xchg
push
movsb
pop
aam
arpl
inc
or
cmp
xchg
ret
clc
aam
pop
fadds
cmp
movsb
addb
loope
mov
jo
push
xor
dec
mov
shlb
adc
loope
push
dec
ficompl
shll
mov
rclb
in
adc
inc
cli
loopne
xor
jg
movsbl
sub
int3
cld
mov
push
stc
mov
push
push
outsb
test
lods
ret
mov
fistl
dec
shl
and
cmovl
xchg
call
sub
mov
mov
in
xorl
decb
sbb
dec
cmp
movsb
js
push
add
or
push
call
jmp
xor
cld
jle
es
call
xor
push
cwtl
xchg
loopne
mov
push
pusha
fcmovbe
pop
aas
push
pop
dec
bound
cmpsb
add
push
mov
sbb
jp
insl
lods
bound
int3
sbb
xchg
cld
test
sbb
cmpsb
pusha
mov
cmp
test
push
js
xor
jge
mov
ret
test
mov
movsl
out
fadds
jbe
xchg
push
test
xor
mov
mov
outsl
sub
sbb
cmp
cmp
push
pop
push
or
push
adc
dec
insl
dec
jo
dec
loopne
sbb
mov
mov
movsb
jno
mov
ret
sti
bound
mov
sub
xlat
les
xor
les
subl
dec
stos
add
cld
xchg
mov
stos
lret
jp
fdivrl
adc
inc
sub
push
jmp
je
pop
inc
ret
sbb
jne
adc
jae
sub
insb
sbb
jne
aam
inc
push
idivl
add
or
aas
xchg
xor
ss
shlb
or
add
xor
sbb
ljmp
sbb
push
xor
mov
rcll
mov
lea
mov
adc
lock
cwtl
push
aad
xchg
cmp
out
and
sbb
shl
push
pop
pop
das
pop
inc
je
ljmp
xchg
mov
pop
nop
sbb
ss
xchg
call
std
adc
sbb
mov
xor
cmpsb
push
xorb
inc
inc
shrl
stos
mov
mov
push
pop
lods
mov
in
ss
inc
clc
leave
sub
xchg
sbbl
stc
and
add
push
add
mov
add
mov
push
jecxz
insl
outsl
call
xchg
push
arpl
mov
cmp
mov
adc
mov
push
jl
pop
dec
aam
pop
sbb
dec
xchg
movsb
add
or
out
repnz
mov
int3
rorb
add
incl
ret
xor
jb
rcl
in
push
jmp
xchg
cmp
inc
incb
adc
mov
lods
mov
test
call
jne
pop
or
mov
je
test
es
lcall
push
mov
pop
imul
push
cmp
outsl
fisubrs
in
sbb
dec
push
or
pop
push
and
outsb
pop
inc
pop
stos
inc
bound
call
mov
adc
and
aad
lcall
ds
push
jbe
fsubrs
rclb
mov
sub
mov
push
hlt
cmp
sarb
or
mov
cmp
mov
adc
jo
mov
icebp
or
jno
stc
jmp
jle
cs
int3
insl
or
pop
gs
and
mov
lock
popa
std
add
push
lret
or
out
jl
pop
lret
call
push
xchg
popa
movsl
sub
fsubrl
mov
mov
lret
scas
ss
aam
sbbb
or
add
mov
cmp
sti
sbb
dec
xor
mov
decl
pop
sbb
dec
push
cmc
push
fs
out
dec
adc
jno
adc
clc
mov
ror
hlt
andb
sub
or
sub
adc
xor
fdivl
fmuls
dec
insl
push
mov
sbb
lea
movsb
je
jo
lock
dec
cmpb
adc
out
dec
push
insb
mov
pop
mov
popa
jp
out
add
in
stos
or
or
dec
lock
aas
test
loopne
test
insb
push
pop
pushf
add
or
jl
jecxz
jge
leave
adc
xor
jl
in
insb
inc
add
or
xor
and
and
add
pop
xchg
sub
lock
inc
pop
hlt
sub
sbb
pop
cld
push
mov
shr
pop
out
mov
xor
das
fldenv
roll
pop
xchg
sbb
shl
loopne
mov
into
jo
rolb
pushf
fistpll
inc
inc
push
push
sbb
dec
imul
push
jp
hlt
adc
in
adc
je
orb
inc
sub
fbstp
or
mov
sub
xorb
fstpt
mov
adc
lea
insl
and
xor
nop
hlt
insl
stos
lock
xor
bswap
mov
rolb
movsb
cmpsb
and
shlb
pop
add
add
push
dec
mulb
inc
pop
xchg
pop
shll
je
les
inc
jp
jge
add
and
xor
adc
decb
lods
push
rolb
lock
add
ljmp
inc
mov
dec
loop
add
mov
xchg
add
xchg
das
add
cmc
cmp
fldl2e
int3
pop
xor
test
jo
loope
cmp
or
cld
addr16
pop
das
cli
int3
test
rcr
inc
imul
loope
mov
push
imul
jl,pt
leave
test
xor
push
divb
pop
push
push
and
xchg
notb
mov
jmp
and
mov
dec
lods
int3
mov
and
jnp
shrl
mov
les
sti
add
inc
and
or
inc
adc
je
call
push
fildll
mov
add
mov
and
xchg
mov
mov
adc
jbe
mov
mov
clc
ret
faddl
das
lcall
mov
sub
xchg
inc
or
inc
je
push
cld
fdivrl
cmp
call
jbe
shll
and
insb
add
lret
cli
inc
mov
add
lret
sbb
rclb
add
xor
sbb
mov
cmp
xor
mov
insl
push
inc
push
mov
aas
cmc
or
jns
adc
inc
cld
sbb
jge
xor
mov
sbb
pop
xor
mov
outsb
out
adc
rclb
mov
xchg
mov
and
push
mov
arpl
jg
je
shl
mov
mov
int3
push
mov
dec
fisubrl
or
and
lock
add
loopne
loopne
out
adc
insl
mov
and
das
out
ds
xor
sub
lods
adc
out
cmp
out
adc
or
and
jg
sti
adc
cli
or
add
push
mov
xchg
add
jnp
insl
and
add
inc
inc
and
jp
ss
jb
in
insl
jp
test
pop
cmc
inc
rol
cmp
lea
dec
push
and
sub
mov
dec
mov
xor
xchg
js
cld
push
xchg
pop
orl
hlt
add
ds
gs
mov
sub
test
sti
inc
prefetch
or
dec
sbbl
rolb
sbb
xlat
mov
das
xor
movsb
je
mov
gs
fldcw
push
mov
and
fistpl
push
mov
shrb
sub
jmp
sub
mov
push
add
daa
outsl
mov
out
loopne
dec
js
or
rclb
dec
fnstenv
movl
xor
push
cmp
loop
ret
sbb
data16
sarb
pop
nop
js
mov
or
mov
sarl
or
mov
sub
jo
inc
movsb
loop
sub
insb
fs
mov
in
repnz
inc
jne
rcll
push
outsb
subb
xchg
pusha
in
mov
bound
mov
xor
sub
xor
dec
mov
cli
je
sbb
push
mov
fisubrl
mov
mov
xor
xorl
push
and
cld
sar
stc
adcb
data16
jo
icebp
mov
fmuls
pop
push
test
inc
mov
js
inc
aaa
push
je
or
jb
es
xor
mov
adc
or
sbb
test
ljmp
addl
mov
adc
and
call
clc
insb
pusha
adc
push
mov
cli
insb
or
push
or
add
cmc
adc
pusha
cmpb
mov
fs
out
adc
mov
add
call
das
push
lock
les
aam
into
data16
ss
pop
clc
or
jmp
sbb
aaa
cmp
call
faddl
subb
add
or
imul
ret
mov
imul
sahf
lret
adc
loope
mov
aaa
dec
clc
sbb
loope
call
cld
adc
fistl
sahf
fs
inc
lea
rdpmc
ror
sbb
jge
scas
push
and
inc
mov
mov
cmp
sub
add
sbb
jae
dec
shr
fsubrl
lods
sub
mov
pop
in
rcr
add
std
lea
movsb
aam
in
xor
icebp
jmp
xchg
bound
pushf
outsl
and
mov
addb
adc
retw
shlb
hlt
lea
clc
xsavec
xor
add
fadds
xor
sbb
std
pop
fiadds
or
in
push
test
jmp
jo
push
rorb
lods
push
test
adcl
inc
sti
cmc
or
mov
sarl
jbe
xor
lea
filds
rcll
lods
inc
mov
dec
loop
iret
in
loopne
mov
in
call
xor
push
and
sahf
and
dec
xorl
jne
push
testb
mov
lods
rolb
mov
lock
shrb
fdivl
pop
call
pop
stos
mov
mov
es
sub
outsb
int3
mov
dec
mov
pop
push
movsl
push
or
mov
add
roll
sahf
lea
push
lds
test
in
xchg
inc
cmp
sub
and
adc
jo
xor
movsl
add
mov
test
cld
je
clc
sub
add
sbb
sbb
cmp
push
or
pop
divl
adcb
cmpsl
test
hlt
stos
dec
lea
xchg
dec
in
mov
loope
loop
mov
es
mov
mov
and
fidivs
call
sbb
xor
push
rcr
sub
jle
push
and
movsl
test
loopne
decb
add
jbe
sbb
mov
aam
xor
and
fstps
call
push
sbb
cmc
cmpsb
lods
mov
inc
jl
adc
int3
call
pop
cld
addl
dec
mov
jb
adc
xchg
in
adc
pop
push
xor
or
lods
mov
call
loopne
adc
pushf
adc
pop
adc
sbb
push
pop
jne
adc
jl
push
imul
ret
ret
jmp
xor
out
add
rol
lods
mov
xor
sbb
adc
dec
clc
pop
cmp
imul
mov
in
xchg
ljmp
stc
dec
cltd
cmpl
inc
mov
fs
aad
clc
ds
rcl
cli
imul
lcall
inc
push
mov
sub
inc
push
inc
adc
xchg
lods
imul
xor
sub
fcomps
mov
lods
sti
mov
and
shl
inc
mov
mov
sahf
std
sbb
pop
or
sub
push
pop
popa
insb
jae
jle
sar
push
pop
mov
div
pop
sarb
fld
pop
jmp
lcall
movb
xchg
adc
nop
aam
lock
adcl
test
insl
pop
inc
mov
rclb
and
les
nop
add
push
mov
push
lret
in
mov
inc
mov
cmc
jmp
or
test
clc
xor
mov
push
push
imul
inc
pop
incl
fcompl
xor
xor
es
xchg
pop
jmp
stos
dec
fdivs
pushf
push
cmpb
loopne
decl
icebp
fistpl
adc
cli
dec
aam
push
inc
bound
and
mov
dec
or
stos
shlb
daa
addb
pop
inc
jl
and
and
call
int3
ret
xor
xchg
xlat
push
addl
sbb
pop
sbb
and
je
out
pop
sub
movl
movsl
imul
xchg
inc
mov
adc
ss
fs
and
push
or
push
cli
js
icebp
add
sub
aad
xor
rorb
add
ds
jg
lds
fs
je
cmp
lock
add
dec
hlt
aas
aaa
test
push
cmpsl
enter
arpl
lea
cmpsb
cmpsl
aaa
mov
test
adcl
xchg
mov
xor
int3
flds
adc
dec
dec
call
sub
add
mov
push
js
or
push
in
add
and
adcb
lret
add
and
inc
in
mov
push
addl
mov
fildl
pop
cmp
das
mov
hlt
mov
testb
bound
inc
pop
adc
pcmpeqb
adc
mov
or
add
imul
push
call
dec
adc
jge
pop
mov
add
sahf
test
cwtl
rorb
loope
fiadds
push
cld
ss
inc
adc
fdivl
mov
mov
or
mov
cmp
mov
aad
push
scas
scas
movsl
sbb
and
inc
sahf
shlb
rolb
xchg
mov
mov
sbb
cmp
or
gs
adc
pop
mov
mov
inc
data16
pusha
cwtl
andb
addl
and
xor
cmp
add
fidivl
and
jo
gs
outsl
mov
dec
pushf
stc
sub
add
jbe
lea
mov
jg
shl
rorb
and
or
mov
pop
call
mov
xor
dec
xchg
mov
movl
ds
ss
aam
loopne
jmp
mov
sbb
pop
cmp
jle
mov
jp
fistl
xchg
andl
add
pop
and
int
dec
fildl
add
pop
cmpl
std
push
lret
and
or
mov
lea
add
aam
add
push
add
rcrl
cmp
jbe
push
test
incb
mov
inc
jl
ret
cmp
xchg
pop
je
call
pop
mov
sarb
stos
pop
roll
xchg
in
push
dec
inc
lea
pop
shr
fcoml
sbbl
nop
stos
fsubp
or
inc
loopne
push
iret
pusha
lods
enter
int
sub
mov
mov
mov
or
addl
xor
std
jl
mov
adc
je
ds
int3
nop
lea
popa
pop
movsl
dec
and
sub
sub
testl
mov
inc
test
je
add
aam
xchg
test
cli
lahf
or
xor
mov
out
xchg
je
mov
add
rolb
mov
popa
adc
mov
add
loopne
or
and
neg
mov
xlat
push
fs
and
dec
pop
je
xchg
sbb
sbb
push
inc
popf
rorb
stc
int3
xchg
adc
inc
push
pushf
incb
lea
test
xchg
mov
pop
call
mov
scas
inc
dec
mov
leave
stc
inc
ret
int3
out
pop
mov
js
inc
mov
inc
sbb
mov
negb
mov
inc
ds
adc
sbbl
fildll
xchg
or
cwtl
outsb
pop
rclb
iret
pusha
jmp
shl
int3
insb
and
pop
inc
mov
mov
adcb
js
xor
cwtl
xor
cmp
rcrb
sub
jmp
pop
and
mov
ljmp
ja
mov
outsl
daa
mov
xor
inc
xlat
xchg
adc
jb
outsl
loopne
imul
mov
or
lock
jns
shrb
mov
jns
push
test
fldenv
loopne
push
inc
iret
lock
xchg
xchg
pop
mov
mov
ret
or
insb
sub
loopne
imul
stos
adc
cld
push
mov
xor
test
sbb
divb
lods
inc
call
fs
orb
mov
cmp
fmull
dec
jmp
push
lret
rorl
js
ror
rcr
aas
lock
inc
fisubrs
push
lcall
add
js
cld
xchg
cwtl
decl
pop
cmp
push
nop
ret
pop
push
push
xor
mov
cmp
jp
test
mov
xor
jne
cli
data16
fs
mov
adc
call
mov
inc
adc
adc
dec
lret
outsb
nop
push
test
jnp
sbb
and
push
mov
mov
adcl
xchg
bnd
ret
nop
jmp
out
inc
xor
sub
loope
loope
adc
mov
or
test
imul
sbb
pop
push
mov
xchg
rorl
cmp
sar
sbb
popf
loopne
int3
enter
add
test
add
push
push
mov
jae
test
adc
inc
mov
js
in
xchg
jns
mov
push
inc
mov
mov
push
mov
js
adc
xor
loopew
adc
push
int
sub
andb
movsb
cmp
repnz
add
xor
rorb
icebp
sti
sbb
sbb
sub
arpl
mov
jl
sub
outsb
enter
dec
nop
mov
loopne
into
mov
pusha
mov
cmp
pop
mov
rol
mov
gs
add
int3
and
test
movsb
dec
in
in
push
jmp
lock
mov
and
add
stos
jg
and
lea
push
jne
cli
and
arpl
icebp
push
imul
pusha
mov
es
xchg
leave
lods
xor
sub
add
in
inc
cmpb
idiv
sbb
xlat
jge
lock
imul
gs
fs
pushf
mov
add
lods
xor
sub
ret
aad
jo
ja
mov
lea
hlt
ret
add
xor
xchg
enter
dec
fdivl
lock
into
adc
inc
insb
fstpt
lods
mov
jg
test
push
adc
fildll
inc
xor
xlat
mov
cmp
out
xor
adc
cmp
push
or
cmp
add
push
or
dec
cli
dec
push
adcb
adc
inc
inc
add
lret
jg
dec
sbb
aaa
push
fwait
adc
pop
adc
fs
cmp
jp
loope
inc
mov
dec
ds
inc
lods
loop
or
sub
shr
add
push
xorl
inc
pop
cmp
dec
lcall
mov
shrb
mov
jp
or
loope
xchg
add
cmp
adc
inc
out
outsb
test
pop
ss
in
push
mov
push
sub
push
aam
ljmp
adcl
xchg
fldl
lea
mov
pop
ret
ret
hlt
add
movsb
ret
jge
dec
add
imul
pop
fbld
rcl
pushl
scas
cmp
aad
jle
call
cs
ret
push
cmp
test
pop
cwtl
rol
or
or
inc
rorl
cltd
jp
fmull
rcrb
leave
mov
lock
dec
inc
sub
mov
mov
mov
ljmp
ds
fsubs
pop
test
mov
xor
xchg
and
inc
cmp
dec
shl
ret
loopne
es
je
es
or
jecxz
or
push
add
push
adc
bound
int3
movsb
push
lahf
loope
mov
mov
add
in
int3
outsb
sbb
add
add
outsb
decl
xchg
loope
mov
mov
imul
call
jg
jle
incl
movl
pop
inc
add
adc
push
jg
lea
push
add
sub
add
sbb
inc
sti
add
inc
loope
jle
adc
test
in
adcb
cmc
push
add
xor
mov
xor
push
xchg
inc
xor
inc
std
pop
pop
pop
ss
or
jmp
xchg
bound
aam
insl
adc
enterw
sbb
jb
jnp
push
or
add
movsl
jmp
lock
jl
fstl
and
sbb
mov
mov
adc
daa
sarb
int3
xor
xor
das
xor
mov
dec
cld
test
movsb
pop
mov
movsb
repz
lods
pop
add
pop
sbb
mov
add
or
faddl
fdivs
pop
movswl
decl
aaa
mov
push
inc
mov
jnp
inc
fisttps
cmp
test
inc
icebp
orb
in
or
or
add
inc
pop
inc
sbb
add
es
jno
incb
insb
add
inc
or
incl
pop
in
push
and
cli
pop
lea
insb
pop
add
mov
push
ret
mov
xorb
aas
push
mov
inc
loopne
pop
pop
leave
ret
into
push
push
jo
jno
xchg
movsb
mov
out
xchg
cmp
dec
cmp
xchg
call
test
inc
outsl
mov
xor
nop
in
call
test
cmpsl
lods
push
repnz
js
pop
add
and
add
jb
shl
rolb
roll
lock
and
int3
push
jne
adc
inc
clc
cwtl
test
loope
insl
int3
sbb
add
out
sbb
inc
je
add
std
cld
data16
mov
das
lods
das
rolb
jge
mov
arpl
lret
imul
arpl
movsl
push
ret
sbb
es
movsb
jmp
sti
cmp
and
or
pop
push
adc
or
into
xchg
clc
popa
dec
jo
cmpsl
icebp
pusha
pusha
ret
mov
enter
or
push
int3
or
xchg
jb
jne
or
xor
pusha
es
and
cmp
ds
call
cs
mov
adc
cmpsl
lock
sbb
shll
lret
fdivl
sub
in
mov
mov
dec
jecxz
inc
mov
sub
pop
xchg
in
dec
mov
insb
mov
or
je
fmulp
pop
add
rcll
adc
mov
incb
push
mov
add
inc
into
nop
mov
mov
jo
mov
je
push
out
inc
incl
or
fcomps
pop
dec
insl
push
xchg
aaa
inc
ret
push
shlb
xor
mov
dec
outsb
jo
movsb
push
push
rcll
inc
push
adc
or
pop
add
ljmp
inc
addl
or
shlb
mov
adc
inc
adc
shlb
mov
jmp
jno
loopne
mov
pop
cmpsb
mov
pop
or
gs
adc
dec
jmp
mov
push
in
inc
or
int
mov
js
std
scas
jo
int3
sub
inc
lcall
icebp
out
scas
cs
fs
push
cmp
clc
aad
and
stos
lea
inc
sub
inc
not
push
or
push
leave
add
xchg
add
or
dec
jo
mov
cli
test
add
cld
mov
cwtl
int3
lret
mov
scas
xlat
and
add
sbb
sub
xchg
jbe
inc
mov
sbb
xor
pop
cli
xlat
xor
pushf
insb
shll
fdivs
push
cmp
frstor
xor
mov
sub
das
push
stos
cwtl
test
in
pop
jp
mov
xor
aam
pop
mov
adc
sti
xor
add
and
and
test
jecxz
sbb
jecxz
lock
popf
in
mov
mov
pop
adc
sahf
pop
cltd
or
outsl
push
shlb
push
push
into
mov
and
shlb
dec
adc
cmp
call
push
mov
shrl
int3
ficomps
or
push
nop
pop
mov
out
inc
xor
xor
sbb
pop
xchg
push
adc
sbb
push
mov
sbb
add
nop
mov
push
jbe
dec
jl
xchg
inc
imul
cmp
cld
or
adc
enter
cmc
aam
mov
clc
bound
mov
pop
add
dec
inc
insl
dec
cld
lea
jne
insb
icebp
xor
mov
inc
mov
mov
pusha
xchg
add
stc
jb
scas
loopne
inc
xchg
mov
pushf
cmp
add
inc
push
adc
jo
lret
aad
xor
inc
or
enter
movsl
les
jbe
inc
stc
cmp
ret
adc
clc
in
hlt
fdivrp
mov
rorl
mov
out
faddl
cli
mov
insb
mov
xchg
push
sbb
add
add
add
jle
aad
lcall
aam
lsl
mov
mov
test
roll
mov
and
aam
sbb
repz
cld
mov
cmpsl
jp
mov
xor
push
sbb
jne
xor
pop
aas
dec
sti
sbb
xchg
je
inc
jae
dec
call
pop
out
nop
adcb
pop
je
mov
mov
testb
add
xor
cwtl
push
andb
mov
hlt
or
int3
jo
outsl
pop
add
clc
adc
jb,pn
cmp
xor
addl
or
cmp
subl
adcb
rcll
mov
jecxz
pop
sub
lea
ja
lahf
rcll
pop
and
ljmp
pusha
ljmp
lcall
adc
pop
mov
dec
es
push
xor
stos
jmp
add
scas
lock
and
xor
mov
scas
std
push
jl
mov
pop
cwtl
das
repnz
mov
xor
cmc
inc
push
sub
xor
mov
inc
cmp
pop
mov
push
into
xor
jb
out
gs
in
les
insb
outsb
adc
xor
sbb
in
xor
rorl
xor
xor
out
and
inc
stc
lret
jo
xor
sub
cmp
sbb
das
ret
es
and
stc
sub
xor
push
std
push
push
sub
mov
out
push
lret
insl
sbb
mov
dec
loope
pusha
ss
mov
mov
divb
cwtl
xchg
fwait
adc
mov
shrl
or
sub
or
in
jb
and
adc
cmp
das
inc
cltd
xorl
ljmp
in
cwtl
je
outsl
rorl
mov
jp
test
push
mov
and
add
test
sbb
dec
ret
aam
mov
loope
test
mov
stos
and
add
bts
out
pop
dec
testb
or
lods
adc
mov
adc
sbb
or
js
push
add
lret
add
cs
adc
in
cwtl
js
push
popa
js
mov
stos
and
inc
sbb
rclb
out
arpl
pop
sbb
mov
xchg
cs
mov
pop
xor
dec
sbb
hlt
xchg
jle
test
add
or
jo,pn
int3
add
dec
mov
mov
aaa
mov
mov
js
sub
mov
push
sub
int3
ss
pop
sbbb
push
sub
test
mov
and
sahf
fadd
fcoml
push
out
into
or
xor
push
jae
or
and
or
test
xchg
inc
sub
mov
xor
pop
adc
mov
mov
xchg
ss
fdivr
jmp
std
fstpl
rclb
xor
jno
cmp
inc
aas
test
ja
sbb
mov
arpl
pop
push
cmovbe
inc
outsb
and
dec
mov
orb
loopne
sbb
popf
jg
push
jns
mov
addb
sub
dec
adcl
cmp
sub
mov
mov
nop
and
cs
mov
mov
xchg
lock
call
insb
push
add
and
lret
xchg
ret
ss
in
pushf
xor
shrb
mov
xor
and
or
inc
jo
mov
lcall
fbstp
int3
or
call
lcall
inc
es
js
lret
cli
push
lahf
dec
adc
and
push
in
lret
mov
mov
xor
int
jnp
gs
jl
jne
sbb
dec
jmp
jl
push
lcall
or
inc
cltd
aas
addb
cmc
fistps
mov
mov
sti
inc
cld
into
push
jns
gs
inc
add
push
fsub
rcll
cs
mov
rolb
push
mov
sub
lock
repz
jge
adc
sbb
dec
xor
or
sbb
adc
sub
xor
lock
lahf
mov
lcall
push
ljmp
adc
or
ljmp
xor
lock
sbb
nop
test
ja
jg
pusha
movl
add
aam
xchg
adc
mov
test
inc
sarl
or
push
dec
mov
mov
pop
inc
sbb
inc
out
aam
rol
ret
popl
xor
int3
test
fs
and
shr
add
xchg
add
xchg
pop
inc
add
inc
pop
push
sti
jae
clc
jo
mov
or
pusha
adc
in
cmp
dec
out
inc
add
pop
mov
cmp
mov
inc
pop
sbb
jne
cmp
pusha
cmc
cli
and
xlat
add
sub
icebp
inc
mov
sbb
and
aaa
jl
push
pop
inc
test
in
aaa
loope
and
adc
xchg
lock
insb
cmp
int3
shlb
jo
stos
outsb
ljmp
xchg
fadd
aaa
es
ljmp
pop
fldl
add
dec
mov
icebp
dec
lret
addr16
or
je
stc
adc
fsubrs
or
mov
push
mov
loop
cmp
add
ljmp
inc
dec
inc
and
sbb
rolb
rorl
js
push
sbb
push
or
xor
mov
cmp
lcall
fwait
inc
inc
enter
popf
pop
loop
nop
jo
and
std
pop
mov
loopne
fistl
adc
out
pop
addr16
xchg
dec
adcl
or
mov
repnz
mov
insl
mov
push
pop
add
mov
push
sub
ljmp
sub
nop
adc
test
std
pop
mov
mov
push
inc
ja
mov
aam
rolb
or
mov
xchg
lods
mov
inc
ja
sbb
jb
call
mov
jo
sar
mov
xor
enter
test
sub
cmp
aam
or
inc
and
inc
ror
inc
cmp
pop
popa
inc
arpl
jp
mov
xchg
or
jmp
push
mov
jp
repz
and
push
leave
mov
insb
mov
jns
fiadds
jne
jmp
fiaddl
sbb
mov
dec
push
outsb
mov
test
cmp
dec
xchg
adc
pushl
push
call
dec
mov
rcl
xor
popa
push
pop
pusha
test
ljmp
cld
sub
es
cmp
sbb
sar
bound
push
xlat
push
je
ror
lock
insl
pop
ss
sahf
xchg
loop
hlt
fstpt
lea
pop
dec
add
clc
sbb
lock
mov
cld
inc
fildl
xchg
test
and
aam
mov
dec
sub
mov
test
cwtl
mov
cmpsl
cmc
jp
out
nop
test
adcb
xchg
repz
mov
dec
mov
inc
or
jl
or
dec
jp
push
push
sub
int
sbb
in
mov
stos
dec
dec
sub
adc
leave
push
xor
xchg
sbb
or
inc
mov
xor
rcrl
incb
jne
mov
scas
stc
jae
sbb
arpl
push
cmp
and
mov
iret
sbb
mov
mov
jge
lock
xor
add
and
mov
push
dec
lea
stc
push
test
clc
and
xor
clc
add
mov
add
in
aam
lret
mov
sbb
jo
hlt
out
loopne
dec
mov
mov
dec
fstpl
setp
sub
rclb
and
inc
fs
sbb
xor
sub
or
mov
push
cmp
mov
xchg
test
mov
lock
cmp
sub
push
test
mov
push
add
fldt
sub
push
jnp
adc
push
lret
pop
clc
inc
jae
jo
cmpxchg
dec
inc
add
in
or
cmp
inc
lock
insb
or
push
mov
pop
jmp
or
push
int3
movsb
mov
mov
mov
mov
push
mov
aam
jne
cmp
push
mov
repz
and
pop
push
jg
jb
push
xor
cmpsb
adc
test
rorb
push
xor
adcb
loopne
cmp
inc
lods
mov
rcr
jmp
sahf
cwtl
mov
test
or
sbb
push
lret
das
rcr
imul
sub
aaa
mov
test
push
cmpsb
inc
aad
loopne
inc
push
repnz
cli
dec
sbb
aas
outsl
pop
scas
cmpb
inc
xchg
mov
mov
inc
call
and
adc
mov
or
pop
jmp
push
jae
mov
or
loope
sarl
mov
push
andb
and
ret
pop
test
popf
and
xchg
subb
out
insb
adc
in
cmp
movsl
and
mov
add
and
jae
sbb
cmp
rol
scas
clc
add
cld
mov
xor
push
imulb
push
push
jecxz
mov
loope
add
fsubrl
mov
dec
or
cmp
sbb
out
enter
push
mov
add
sub
and
call
add
stc
insl
add
fcomps
mov
adc
daa
sbb
mov
jmp
xchg
sahf
inc
pushf
mov
xchg
inc
xchg
push
data16
mov
icebp
shlb
or
pop
mov
outsb
push
in
xchg
push
add
in
cwtl
mov
test
add
pop
adc
mov
cld
mov
int
push
inc
sahf
call
xchg
jne
sahf
fnstcw
test
sar
jne
adc
sbb
enter
gs
sub
xchg
loop
pushl
cwtl
xor
aad
pop
pop
addb
push
push
faddl
pop
lea
and
repnz
or
cmp
add
inc
pop
nop
mov
fnstcw
xor
xor
cmp
enter
sbb
fdivl
repnz
call
xchg
xor
jbe
inc
sbb
sbb
xor
dec
ss
mov
sbbl
movsb
xor
jnp
jmp
je
les
and
mov
rorl
push
into
cmp
and
xor
sahf
mov
mov
ret
xlat
inc
mov
sbb
xchg
adc
mov
or
jge
popf
shl
test
cmp
andb
lock
xor
lret
add
insb
sub
or
out
ret
ret
aas
lock
cmp
lock
shll
adc
sar
test
adc
test
mov
lods
or
std
aad
dec
pop
pop
adc
dec
pop
dec
or
mov
adc
dec
add
mov
jge
xchg
and
sbb
cmpsb
adc
loopne
inc
lret
cs
mov
jmp
movl
hlt
mov
jp
mov
nop
loope
sahf
adc
lcall
jne
cmp
dec
adc
rolb
mov
fdivrl
outsb
add
clc
push
or
ret
movsl
add
mov
xchg
ja
inc
jne
push
icebp
push
sub
xor
add
sbb
mov
stos
cwtl
jl
aam
push
fimull
mov
std
pusha
push
cmp
ljmp
pop
mov
call
mov
mov
xlat
mov
push
sbb
sahf
mov
cmp
test
insl
adc
jl
dec
daa
mov
insb
pop
enter
mov
testl
movsl
adc
mov
call
or
pop
or
or
mov
nop
push
push
jl
mov
xor
xchg
or
or
rclb
pop
out
cld
mov
fs
jo
cwtl
aam
push
mov
aas
aam
in
testb
jb
add
repnz
ss
mov
ds
or
ret
inc
lea
lea
mov
mov
fdivr
in
and
out
lock
sub
nop
pop
test
lea
fwait
inc
xorl
push
adc
icebp
push
push
xchg
lret
jbe
paddb
push
call
call
dec
rcl
sbb
push
int
sub
popf
rolb
cwtl
testb
cmpsl
cmp
sbb
or
add
mov
mov
imulb
shrb
mov
adc
xor
inc
movb
subl
daa
ss
mov
test
dec
mov
rcll
and
test
clc
mov
add
add
jmp
mov
inc
and
xor
pop
fldcw
mov
mov
add
inc
adc
gs
sub
inc
lret
fcoml
out
pop
mov
mov
dec
adc
xor
jae
sbb
push
leave
fcmove
push
in
pusha
sub
mov
shll
mov
in
or
add
daa
sub
andb
rcrb
mov
dec
and
fadds
outsb
mov
add
inc
into
add
lock
shl
adcb
jle
ds
sub
and
loopne
mov
add
clc
adc
mov
aam
adc
xor
push
or
dec
cmp
loope
loopne
pop
movsb
int3
inc
loope
inc
adc
lea
ret
sbb
sbb
inc
or
ret
or
pushf
add
movb
add
shlb
std
mov
subl
int3
shlb
ja
mov
aaa
and
subb
or
and
pop
fisubrs
adc
dec
xchg
outsl
xchg
mov
cmp
je
lods
push
mov
mov
jl
in
hlt
lea
sub
aas
add
jmp
inc
mov
push
subb
adc
pop
push
call
or
bound
mov
aas
mov
pop
fsubrs
enter
pop
cs
sub
cli
xchg
ficomps
insl
cmp
test
jmp
cli
xchg
mov
add
fdivs
xorl
xchg
sub
push
xchg
insb
inc
rcll
xor
mov
arpl
lret
push
sti
sbb
std
insl
in
aam
dec
dec
rorb
mov
lods
or
add
dec
rcl
and
ss
cld
in
out
xchg
dec
call
adc
mov
add
mov
mov
pusha
or
or
sahf
sbb
sbb
mov
xor
mov
sub
jmp
filds
ret
add
imul
aaa
call
pop
je
mov
push
movsb
or
xor
iret
xor
jne
sbb
lock
call
das
js
jae
jl
push
sbb
add
cmp
push
or
in
fcomps
shl
push
fwait
cs
fdivr
lcall
xchg
xchg
cmp
sarb
in
xchg
pop
jo
aad
lods
xchg
inc
adc
and
or
and
and
gs
jg
mov
push
and
shlb
pop
es
mov
or
mov
lock
and
dec
cmpb
mov
ret
push
add
push
insl
xchg
xor
out
pop
popa
xchg
mov
xor
pusha
mov
xor
int3
inc
shlb
mov
xchg
sbb
imul
fldl
push
or
inc
adc
faddl
jne
rcrb
loop
test
push
adc
or
insb
ficoml
loop
mov
loop
sbb
cmp
dec
dec
loopne
sarl
insl
fs
push
and
or
nop
dec
jnp
in
mov
outsb
add
mov
lock
and
xor
jle
ss
xor
push
add
or
mov
test
rcrb
es
incl
dec
and
push
clc
sub
lods
inc
notb
fdiv
dec
lods
ret
and
sub
leave
nop
pop
adc
lods
les
push
pusha
dec
mov
incl
inc
sbb
and
insl
in
xchg
aam
mov
adc
pushl
fisubs
imul
xbegin
test
sbb
mov
fcoml
push
daa
popa
dec
hlt
mov
dec
shrb
cmc
test
and
jnp
push
jns
mov
dec
jae
ja
xor
aas
cmc
mov
cmp
mov
lret
idivl
push
lret
ret
popa
fisttpl
push
dec
sbb
cmpsb
add
mov
leave
xor
aam
mov
rclb
enter
adc
add
mov
push
rolb
je
and
mov
ds
sub
fs
add
enter
ret
imul
xor
adcl
jnp
roll
inc
xor
insb
xor
popf
inc
iret
inc
cli
outsb
je
mov
jge
ret
mov
addb
dec
call
pop
lcall
add
xchg
add
add
adc
inc
cmp
pusha
jge
cmp
jb
push
add
lock
inc
out
cmp
sbb
cmp
inc
jb
add
sub
inc
add
fs
adc
add
or
lea
mov
lahf
movsb
aas
jp
cmp
mov
cmp
lods
push
data16
test
mov
push
and
push
xor
ret
int
lcall
add
or
or
je
in
xchg
dec
loopne
dec
cld
fistpl
xchg
test
test
cmp
js
push
add
pop
mov
push
jo
jl
insl
test
adc
push
inc
jl
test
cld
dec
xor
cmp
sub
add
add
push
push
or
test
push
stos
pop
push
jnp
cld
fsubr
jbe
push
adc
inc
popf
fcomps
iret
mov
cmp
test
pusha
loope
cmp
call
jnp
xor
andl
push
bound
in
addl
or
cs
lock
xor
pop
rcl
mov
popf
adc
sbb
jge
xchg
insb
sbb
jle
movsb
aam
add
dec
pusha
add
pop
clc
fldenv
andl
dec
mov
push
mov
xorb
clc
roll
ret
js
sbb
pop
js
push
push
sbb
xchg
pushf
ss
ret
push
mov
ret
jo
or
aas
mov
jno
add
lea
ret
js
mov
or
cwtl
add
add
out
mov
lods
push
adc
mov
jne
cmp
push
cmp
out
jle
push
movsl
shlb
inc
js
es
inc
psrld
outsb
insb
pop
cmpsb
push
inc
pop
cwtl
xor
in
inc
lock
stos
xor
cmp
fldl
lods
in
enter
jne
adc
inc
aas
dec
rclb
push
xchg
mov
dec
mov
jo
adc
sar
inc
pusha
inc
push
adcb
lods
repnz
adc
dec
fadds
add
ret
rorb
or
ljmp
lcall
stos
mov
inc
inc
inc
pop
mov
test
test
jno
jg
jp
mov
jl
loop
insb
cld
out
pop
mov
adc
push
push
fcmovnbe
pop
jp
mull
adc
or
push
mov
sbb
faddl
jo
paddw
mov
fistpll
fmul
xchg
mov
les
sbb
jae
pop
fcom
cli
ret
push
test
adc
cmp
add
lcall
in
or
ror
out
test
ss
test
insb
dec
jp
jae
adc
mov
fs
push
int3
cmp
shl
stos
push
jo
test
lcall
add
or
cmpl
lea
mov
add
std
and
add
lds
push
jb
pop
or
hlt
pop
xchg
cmp
mov
add
testb
sahf
push
inc
cwtl
orl
lea
inc
ret
mov
jp
xchg
loope
xor
mov
xor
cld
adc
jmp
dec
fsub
cs
mov
dec
push
jb
std
stos
mov
sub
testb
cmpl
int3
sub
mov
cld
je
decl
mov
test
cmp
sbb
push
and
daa
call
dec
push
and
sarb
push
xchg
or
enter
sbb
dec
stc
add
pop
dec
out
or
push
or
push
lods
dec
add
jmp
dec
dec
loope
cmpsb
mov
push
popf
dec
xor
mov
sbb
xor
test
dec
sbb
imull
ds
and
fs
jg
inc
mov
and
add
xchg
or
in
add
push
pushl
test
out
call
cli
inc
xor
cs
cli
dec
push
loopne
inc
and
inc
jecxz
inc
add
pop
xor
fcmovnu
leave
into
and
push
push
lret
sbbb
js
and
inc
lock
into
sub
sarb
fwait
dec
push
fistl
inc
jo
push
test
int3
cmp
aam
cmp
dec
adc
aas
xor
pop
push
inc
movb
repz
push
adc
js
sbb
adc
push
push
inc
and
mov
mov
or
loop
sbb
cmp
ret
or
test
test
add
mov
int3
decl
aam
sbbl
xor
lock
pop
inc
jg
mov
lret
sub
mov
or
pop
jae
loop
andl
pop
lock
adc
push
xchg
mov
adc
or
sbb
out
jmp
add
popa
push
in
loope
call
mov
mov
bound
adc
mov
mov
inc
aam
ret
and
decl
jmp
xor
inc
jmp
rcl
jne
cmp
xor
sub
je
outsb
ds
push
iret
push
jmp
je
xchg
mov
iret
clc
insl
je
pop
push
test
mov
out
adc
push
jb
xchg
and
inc
jns
inc
push
xchg
gs
and
scas
add
mov
and
bound
mov
dec
bound
dec
pop
sub
inc
pop
sub
add
mov
cld
push
inc
xchg
mov
idivb
jmp
inc
dec
fimull
aam
xorl
inc
ret
sar
mov
xchg
pop
ficoml
sub
push
sub
out
xchg
and
test
ret
xchg
push
jle
imull
fdivrs
jl
pop
push
insb
aam
mov
push
or
lock
mov
inc
push
add
dec
mov
dec
pop
push
pop
xchg
test
jmp
sysexit
xor
push
jp
lcall
mov
pop
mov
add
shrb
lock
js
add
mov
or
je
lock
orl
ret
mov
add
testb
int3
add
cmp
mov
lock
cmc
fwait
xchg
ret
mov
or
lret
pop
push
icebp
mov
mov
mov
mov
mov
movsb
loope
or
and
dec
adc
cld
mov
inc
dec
incb
ret
sub
sahf
add
sub
and
stos
mov
jge
inc
mov
adc
outsb
popa
inc
loope
pop
mov
push
xlat
jnp
xchg
lcall
lock
popa
pop
outsb
dec
shll
add
pop
jl
and
mov
stc
sub
sub
int3
int
jne
inc
add
ds
fisubs
mov
xchg
ds
or
xor
pop
pop
mov
jb
add
push
jl
hlt
mov
mov
test
add
pop
cltd
lret
sub
inc
xor
stos
lret
test
shl
loopne
jo
push
xor
xor
push
repnz
mov
add
xchg
jp
xchg
fisubrl
xchg
stos
inc
push
bound
adc
xor
imul
das
jo
jl
test
or
cmpsl
in
or
pop
fisubl
clc
int
or
and
xor
jmp
adc
sarb
and
dec
cmp
in
loope
adcl
into
inc
push
xor
adc
testb
push
cltd
addb
scas
jb
inc
sub
in
call
insb
int3
or
das
cli
push
call
leave
insl
jne
popf
mov
add
dec
jecxz
pusha
jmp
xor
mov
test
mov
push
mov
sub
pop
sbb
or
dec
call
das
je
js
pop
push
rolb
into
push
mov
dec
sti
add
or
leave
push
jb
add
xchg
imul
xchg
push
cld
sbb
push
cmpsl
sbb
pusha
fnstsw
lret
mov
and
inc
fildl
enter
and
cmpb
jmpw
jl
pop
sbb
test
stos
mov
into
pusha
clc
xchg
popf
push
or
jg
mov
add
cld
aas
mov
push
shrl
nop
dec
push
ret
lea
dec
bound
ret
imul
pop
add
leave
push
scas
cmp
stc
inc
mov
sarb
test
inc
cwtl
enter
adc
and
or
push
dec
xor
andb
xor
aas
mov
cmp
adc
inc
inc
mov
cmp
sub
ret
movsb
push
aam
jno
cld
fimuls
dec
lds
or
push
xchg
push
push
mov
push
sub
cmp
adc
pop
jae
adc
inc
ret
push
rcr
notl
adc
and
add
pusha
mov
push
je
cmp
hlt
jg
add
xchg
xor
dec
jmp
push
add
or
pop
add
call
lcall
pop
mov
incb
and
or
mov
adc
sbb
or
xor
pop
pusha
fiadds
fnstcw
lods
inc
add
mov
je
add
cmp
lcall
add
popl
inc
and
std
push
repz
aas
and
or
mov
xchg
mov
js
and
fsubl
push
or
adc
shl
cli
lock
mov
adc
push
xor
dec
cmp
inc
jmp
jecxz
push
push
mov
add
sub
or
add
icebp
pop
cltd
sbb
cwtl
add
addr16
es
jmp
push
jp
lods
xchg
adc
std
decl
shl
ret
outsl
add
add
mov
or
sbb
leave
clc
fnsave
and
sub
nop
int3
mov
dec
hlt
cmp
in
adc
dec
cli
pop
repnz
inc
sti
push
punpckhwd
sarl
push
jns
rorl
push
loopne
mov
cmpsl
hlt
cmpsl
mov
loopne
mov
fs
dec
clc
outsb
add
cltd
and
test
mov
xchg
mov
xor
xor
sbb
imul
add
stos
push
mov
stos
lret
and
enter
addl
fsubrl
and
call
loopne
sub
inc
insl
test
push
int
je
add
enter
inc
out
inc
mov
test
mov
and
add
jge
adc
cmc
shlb
iret
ds
fwait
sub
fwait
lea
movsb
paddb
pusha
jae
and
pop
sbb
rclb
dec
push
in
adc
lcall
fwait
movsb
decl
sub
ja
outsb
mov
push
add
cld
and
andl
push
ja
xchg
push
outsb
cmp
and
push
mov
movsb
xor
or
lock
dec
or
aad
ret
add
int
sub
push
mov
addb
outsb
push
cmp
xchg
fcom
add
jne
fnsave
rclb
data16
std
inc
test
lea
sub
xor
and
data16
ds
adc
cmp
xchg
lret
sbb
js
ljmp
fwait
adc
mov
sub
outsl
shrl
cwtl
adc
and
shll
or
sti
inc
sti
push
inc
daa
aaa
pop
sarb
dec
mov
ret
push
aam
mov
xor
fidivl
pop
push
sarl
inc
sar
inc
pop
add
inc
xchg
je
fwait
xchg
sbb
jmp
push
js
insb
in
add
mov
jo
int3
inc
xor
pop
mov
mov
and
bound
mov
test
lds
jns
les
mov
or
xor
outsb
and
mov
ja
fwait
mov
push
dec
sub
scas
and
addb
fdiv
fistl
lock
push
arpl
and
cli
mov
aam
mov
cmp
add
push
xor
pop
xchg
test
push
mov
jb
loope
icebp
in
daa
sub
push
and
fldenv
out
sbb
loop
lock
es
insb
inc
adc
mov
mov
inc
lds
pop
shlb
pop
testb
aam
inc
cwtl
sub
fwait
add
dec
sub
sbb
outsl
add
movl
aaa
or
sbb
ret
roll
sbb
add
jl
push
push
aad
inc
inc
and
mov
dec
test
mov
mov
cli
cmp
test
xchg
mov
orl
movsl
cmpsb
mov
sub
push
scas
popa
and
pushl
ficompl
cs
cmp
hlt
push
inc
push
push
mov
lcall
inc
adc
push
or
or
cmp
push
sub
jmp
fiaddl
pop
inc
pusha
push
sub
shll
cld
push
shll
ja
movb
test
jbe
fs
shlb
lcall
adc
mov
xor
sub
pop
ds
pop
push
neg
inc
int3
jno
lods
xor
es
jge
xor
xor
clc
out
jp
inc
jb
data16
xor
push
int
arpl
jbe
xor
inc
test
movsb
into
add
je
xorl
jo
cld
xor
xor
aaa
mov
jb
into
vmovss
xchg
clc
mov
inc
faddl
adc
fs
pop
mov
clc
jg
push
adc
and
test
repnz
cli
and
add
lret
dec
pop
les
mov
or
cmp
stos
cmc
push
mov
mov
andb
add
xchg
adc
jbe
push
mov
les
inc
popf
sub
or
push
lock
lock
jne
push
mov
inc
out
outsl
orl
pop
lar
orl
jp,pt
ss
mov
jp
leave
outsb
fisttps
inc
loopne
mov
ret
or
insl
iret
pusha
test
cld
pop
pop
xchg
addl
outsb
pop
push
arpl
mov
cmp
jg
jmp
lret
add
mov
repz
mov
pop
mov
add
ror
test
cld
jge
incb
roll
push
push
incb
and
dec
movsb
pop
xchg
aaa
add
gs
ret
push
pop
test
movb
xchg
shll
dec
rcrb
popa
mov
dec
cmp
pop
lods
cmp
adc
movsb
out
inc
ret
sbb
push
xchg
cmp
jl
push
xlat
adc
arpl
or
pusha
pop
push
sub
add
xchg
or
push
xchg
out
and
outsl
aaa
mov
push
and
mov
sar
jp
mov
fldt
lea
lock
bound
rclb
mov
push
xor
cmp
and
in
push
fcmovbe
mov
or
cmpsl
add
call
loope
xor
sub
arpl
bnd
and
and
mov
push
mov
mov
ret
cld
sarb
cs
mov
fimull
or
add
xor
scas
cmc
aaa
or
mov
inc
jmp
lea
add
or
push
dec
jbe
mov
xor
stos
push
mov
mov
sbb
mov
inc
pop
add
in
sbb
loope
add
jl
or
mov
adc
and
adc
cmp
add
adc
jne
mov
stc
scas
sbb
mov
mov
xchg
and
mov
lcall
cmp
xor
mov
dec
test
xorb
xor
mov
jle
shrb
pop
xchg
cs
push
out
dec
and
cltd
data16
inc
sbb
inc
es
aas
call
dec
pop
int3
sub
ljmp
add
jbe
sbb
cmpsb
pop
lods
xor
or
inc
and
or
lea
mov
test
jne
or
cwtl
mov
mov
push
movsl
daa
int3
xchg
movsb
insb
and
jmp
push
jb
movsl
and
movsb
imul
jne
std
adc
dec
scas
mov
mov
mov
aam
je
xchg
mov
cmpsl
pop
inc
pushf
aam
popf
test
int3
stc
add
inc
stos
nop
fsubr
xor
enter
and
pop
mov
dec
inc
dec
jmp
ret
sbb
cli
loopne
je
inc
neg
xor
mov
mov
nop
ret
outsl
jl
mov
add
dec
test
jmp
pop
push
jmp
call
test
push
pop
xacquire
mov
cmc
mov
xor
xor
negb
mov
fldt
adc
jge
out
loop
jb
insl
push
shlb
lods
add
sub
adc
imul
ds
fidivs
jp
bound
mov
test
add
jb
cmpsb
push
loope
inc
add
scas
mov
leave
inc
ljmp
mov
loope
cld
inc
mov
adc
add
dec
push
jb
add
xchg
adc
lcall
sti
hlt
ljmp
std
mov
test
sbb
cwtl
sbb
mov
fmuls
cli
add
fisubs
fs
pusha
mov
cmp
xchg
adc
sbb
adcl
jmp
mov
pop
pop
call
jecxz
jp,pn
xchg
push
jo
mov
hlt
enter
scas
mov
jge
fmull
shrb
insl
or
andb
push
dec
push
sbb
and
jmp
cwtl
mov
adc
test
lret
pop
dec
sbb
enter
cli
mov
mov
or
ljmp
fisubs
inc
push
and
or
mov
je
in
push
ds
cmp
scas
add
ds
xchg
and
or
mov
ret
pop
stos
fwait
or
push
xchg
je
push
adc
leave
pop
or
adc
mov
mov
push
add
cmp
inc
fsubs
add
mov
lods
xchg
or
cld
aas
fcomps
test
ljmp
outsb
mov
cltd
sub
inc
popa
test
in
jle
icebp
adc
adc
mov
pop
sbbb
or
call
dec
aas
dec
int
sub
cmp
adc
ljmp
pop
arpl
fildl
enter
cld
out
mov
iret
sub
fisubrl
aam
ret
xchg
push
push
gs
add
test
mov
clc
mov
int3
cmp
push
mov
sub
in
in
outsl
mov
cmp
jp
or
movsb
mov
mov
call
test
repz
sbb
or
jnp
add
mov
cld
das
je
pop
add
add
dec
dec
pop
push
jmp
lods
mov
es
int3
js
das
dec
test
loop
mov
int3
sti
filds
movsb
xchg
rorb
lods
lret
or
inc
lods
repz
inc
and
mov
shlb
call
ljmp
mov
fidivl
es
incl
xchg
mov
popa
push
or
fs
add
jb
test
cld
icebp
adcl
cmp
jmp
sbb
push
data16
mov
call
inc
loop
out
adc
out
mov
dec
mov
mov
jmp
jl
add
movsb
pop
sub
cmp
aam
add
cld
jae
call
out
pop
lret
test
andl
ret
pop
test
sbb
fs
cmpb
mov
mov
mov
dec
jg
jno
push
lods
mov
xor
addb
cmpl
mov
jne
jo
dec
xor
andb
xchg
je
mov
and
or
mov
sbb
dec
mov
test
testb
orl
add
je
sar
arpl
sub
or
pop
cmp
pop
int3
add
pop
mov
repnz
cmp
sahf
sub
pop
js
hlt
mov
mov
jae
roll
jle
pop
mov
dec
outsl
add
and
mov
cmc
sbb
and
mov
or
add
xchg
push
mov
adc
ret
pop
out
das
shll
mov
mov
and
or
xchg
and
sub
lock
push
pop
mov
xor
scas
cmp
cs
or
sbb
mov
les
push
repz
push
sub
jg
cmp
cmovge
mov
data16
pushf
sub
mov
mov
dec
push
mov
popa
fistpl
jmp
mov
ss
xor
subl
fs
mov
cld
sub
dec
push
add
or
out
or
incb
orb
cmp
push
adc
or
lock
mov
jmp
aaa
and
test
jmp
insb
and
fsqrt
xchg
and
incl
jle
add
xchg
lods
pop
andb
sub
sub
xchg
jbe
jl
clc
pop
ljmp
xchg
xchg
test
lods
adc
xchg
mov
xchg
push
lods
sbb
sahf
inc
movsl
fimuls
jb
int3
outsl
fs
mov
mov
jne
hlt
or
push
xchg
mov
js
inc
in
insb
xor
pop
push
inc
fildl
push
xchg
add
pop
es
sbb
call
add
adcb
push
loopne
test
call
dec
or
fwait
dec
add
lods
xchg
bnd
das
test
pop
mov
sub
inc
mov
pop
and
add
scas
pusha
sub
mov
insb
mov
and
in
test
adc
and
adc
loope
jp
mov
test
add
fbstp
sub
xchg
pop
es
repnz
mov
adc
add
mov
int
adc
dec
jb
inc
mov
ret
inc
test
mov
and
adc
test
adc
lock
ret
xor
xchg
mov
and
and
nop
or
loope
fadd
push
push
into
add
jp
mov
inc
inc
mov
xchg
neg
cmp
ja
inc
std
xchg
outsb
mov
xlat
lahf
add
push
loope
fs
add
mov
std
dec
mov
in
aaa
cmp
sub
pusha
ds
bound
mov
or
and
lcall
sbb
push
stos
movsl
pop
and
and
inc
and
cwtl
add
orb
mov
pop
je
ljmp
sub
push
push
int
xorl
shl
and
push
mov
fnstcw
jecxz
popf
addb
bound
sub
push
mov
pop
test
sub
loopne
mov
and
push
mov
mov
adc
sbb
add
in
or
push
call
clc
dec
lock
lcall
data16
aaa
cmp
or
hlt
push
pop
dec
cmp
sbb
xor
dec
sub
aaa
aas
add
rcrb
push
and
jge
pop
loop
lock
cmpsb
sbb
lock
mov
inc
insb
aaa
fcmove
mov
aas
adc
std
rclb
or
or
aaa
int3
enter
dec
sbb
and
mov
inc
adc
inc
jecxz
cwtl
mov
add
push
jb
sahf
inc
fnstenv
nop
add
nop
leave
movsl
ja
fmulp
or
mov
fnstcw
je
imul
icebp
push
stos
xor
xor
pop
mov
loop
mov
sbb
or
inc
mov
in
xor
or
sbb
orl
dec
dec
push
add
jmp
in
cmpsl
loop
xor
sub
gs
fs
je
lds
or
rolb
fcoml
add
lods
inc
lock
mov
sub
inc
dec
push
sbb
adc
insb
and
loopne
xor
jp
test
js
inc
dec
pop
xor
lret
push
and
or
add
dec
lock
popa
pushf
in
lock
arpl
and
cmpsb
xor
mov
lcall
pop
pop
add
push
mov
cmpsl
xor
and
mov
call
pusha
dec
jl
sbb
push
ret
push
jae
and
or
es
xor
add
movsl
aam
inc
mov
clc
xorl
adc
repnz
push
mov
add
sbb
sbb
insb
inc
test
je
setae
dec
add
push
jp
lcall
ret
xchg
mov
push
sbb
bound
sbb
jne
mov
imul
push
aam
pop
inc
or
aam
cmpsb
push
shll
pop
adc
add
std
sub
add
sub
dec
data16
pop
adc
cmc
mov
mov
sbb
mov
incl
adc
push
xorb
pop
scas
fiaddl
mov
jge
pop
es
ret
or
push
shr
sbb
add
outsb
shll
gs
pop
mov
aad
movsb
mov
push
lret
mov
cld
aam
scas
and
xchg
loopne
mov
sbb
cmpsb
jo
mov
loope
add
mov
xor
push
lds
fmuls
jae
mov
aaa
ret
clc
movsl
insb
mov
subb
pop
incl
cmp
ja
xorl
and
mov
cmp
mov
divb
std
mov
and
mov
and
mulb
je
sbb
adc
nop
pop
enter
ss
lods
cmp
mov
inc
lock
int3
mov
bound
lods
mov
xchg
mov
xchg
mov
and
lock
cmc
push
cmp
jae
test
mov
push
call
mov
sbb
sub
mov
push
adc
cmpsb
inc
lret
mov
enter
mov
inc
fildll
shrl
repnz
loope
cmpsl
mov
fisubl
mov
lret
sarb
pop
mov
shlb
lcall
fidivs
cli
es
dec
and
xlat
dec
xchg
jle
jecxz
das
or
rol
or
inc
mov
in
and
pop
mov
add
fs
mov
je
adc
mov
pop
cmp
jp
add
or
jle
mov
jae
aaa
incb
add
ret
cmpl
loopne
sti
jbe
mov
call
psrld
adc
ss
dec
pop
push
popa
insb
and
push
dec
push
cs
rolb
jbe
clc
xor
movsb
mov
mov
mov
inc
call
and
push
jp
xlat
pop
push
or
imul
xchg
aad
adc
hlt
sahf
pop
sbbl
movb
sbb
jg
sbb
mov
add
adc
call
sti
lds
xchg
mov
mov
pop
and
cmp
inc
gs
pop
mov
mov
int
add
add
lds
int3
push
mov
jle,pn
sub
xor
rorl
jnp
les
mulb
and
xchg
mov
xchg
ljmp
cmc
ret
push
mov
adc
rolb
jle
sub
inc
mov
sbb
push
mov
dec
adc
shll
inc
push
xor
xor
shr
xor
inc
and
jle
insb
inc
push
cld
outsl
cmp
aad
in
enter
and
dec
jbe
jne
mov
inc
or
aad
and
data16
not
sub
or
loop
push
es
jno
xorb
mov
xchg
mov
inc
adc
mov
inc
js
scas
mov
xchg
mov
jo
test
add
mov
mov
jmp
loop
jo
mov
popa
pushw
rorl
test
fdiv
sbb
mov
xchg
push
mov
xchg
xchg
and
test
adc
call
push
mov
movsl
je
add
scas
aas
add
add
jmp
and
push
sub
aad
inc
fidivl
fs
push
push
aas
adc
add
sub
mov
test
mov
loopne
scas
adc
sub
je
xor
rclb
ljmp
je
or
mov
push
std
test
xor
test
ss
cmpb
or
les
and
or
test
push
jp
xchg
ss
clc
mov
into
dec
adc
mov
shlb
dec
xchg
adc
jne
ficompl
stos
mov
mov
and
inc
add
mov
jb
loope
aas
or
mov
dec
mov
test
xor
sbb
pop
enter
shrl
je
xor
xchg
aam
shll
outsl
ret
xchg
adc
aaa
adc
xor
ficomps
cmpsb
adc
outsb
fsubl
call
adc
cltd
loope
inc
xor
mov
cld
scas
lea
mov
lock
jmp
cmc
imul
cmp
sub
pushf
int3
xchg
mov
in
sarb
sbb
add
or
xor
mov
xchg
ss
mull
dec
fwait
push
in
jno
lret
outsl
test
push
out
test
pop
cmp
dec
je
aad
mull
addl
aam
popf
pop
js
adc
je
test
dec
mov
inc
shll
mov
lods
mov
cs
lcall
in
cli
pop
mov
and
aad
and
push
push
mov
adc
or
and
test
xor
cmp
shl
push
rol
sbb
or
loope
mov
xor
pop
xor
jb
xchg
inc
jo
fwait
cli
adc
arpl
adc
aam
sbb
add
int3
xor
push
xor
mov
sbb
or
jmp
xchg
les
inc
insb
xchg
std
jle
cmpb
mov
xor
inc
mov
lods
es
mov
in
add
mov
stc
jnp
and
adc
je
dec
and
lds
inc
out
fisttps
mov
movl
aam
mov
ds
ret
push
fs
sub
aam
adc
mov
xchg
insl
jp
sbb
push
or
gs
or
jle
js
in
clc
sbb
and
adc
cmp
sub
cld
mov
xchg
dec
mov
sbb
cmp
data16
inc
or
stos
pop
test
ss
clc
push
jne
pop
popa
lds
push
std
xor
fcomps
mov
add
add
mov
mov
aaa
xor
and
test
sub
cmp
clc
mov
lahf
and
dec
or
adc
pop
xchg
cwtl
dec
push
push
and
sub
push
inc
dec
stos
lret
and
add
xchg
cmpl
pop
mov
add
outsb
decl
shlb
je
gs
aas
push
movsb
testb
ret
inc
lcall
jb
mov
add
in
mov
cld
push
push
repnz
pop
imul
dec
in
int
mov
nop
sbb
or
icebp
dec
mov
or
cld
add
bound
dec
fsub
add
push
shlb
push
inc
cmp
fmulp
mov
add
mov
into
inc
dec
fbld
cmp
test
mov
mov
mov
repnz
pop
fld
jb
sbb
push
and
scas
pop
push
push
push
or
aad
call
loop
test
orl
inc
lds
cld
std
adc
int3
push
nop
cld
inc
into
xor
sbb
ds
add
add
add
jmp
push
cli
ss
dec
sbb
cs
in
loopne
xchg
int3
roll
cmc
daa
sbb
int3
lea
pop
shl
mov
cmpsb
shrb
ljmp
mov
push
rolb
cmp
ficoms
sub
ret
sub
mov
inc
sbb
mov
add
add
mov
push
add
inc
insb
cmpsb
shrl
pusha
or
test
pop
and
push
adc
inc
aas
jb
mov
mov
cmp
int
ret
pop
and
ja
adc
shrl
mov
jle
ljmp
testb
lahf
call
imulb
dec
mov
std
xchg
mov
mov
pop
adc
dec
mov
xchg
push
adc
fdivl
repnz
xor
jle
nop
orb
push
in
les
pop
stos
int
adc
inc
insb
mov
adc
or
ror
push
dec
loop
cli
add
jne
out
sbb
inc
sti
dec
jns
movsb
es
push
mov
call
xchg
mov
bound
adc
mov
ret
jge
push
call
or
inc
jmp
push
in
adc
inc
push
xchg
fiadds
dec
or
push
sbb
push
sbb
loop
shlb
push
add
pushf
inc
repnz
in
mov
inc
add
or
andb
sbb
andb
mov
jle
jmp
out
in
cmpsb
dec
push
adcl
xor
inc
minps
mov
psraw
js
and
sbbl
pop
push
dec
xchg
jbe
jmp
mov
andb
cmpsb
dec
dec
lcall
push
sbb
push
sub
and
pop
cmp
mov
movl
movsb
jl
pop
mov
and
mov
ds
push
jg
mov
ljmp
pop
cmp
xchg
jne
mov
dec
push
pop
mov
push
rorb
mov
add
jmp
mov
les
clc
inc
mov
stos
lock
jno
dec
andl
jns
lock
call
pop
ret
sub
jmp
mov
mov
cmp
lret
fistpll
xchg
cmp
push
inc
rolb
inc
pandn
aam
jp
cmp
out
cld
jl
scas
dec
jno
adc
mov
fisubl
movsb
orb
sub
push
in
fisttps
pop
call
mov
mov
mov
or
jge
dec
jecxz
add
jecxz
adc
jl
push
into
and
hlt
lods
fnsave
lret
jbe
push
insb
in
test
testb
push
sbb
and
pusha
test
push
les
imul
inc
fiaddl
fdivrl
int3
xor
and
mov
mov
xor
sub
mov
cs
add
rol
pop
adc
pushf
jae
sbb
sbb
pop
or
test
ss
push
pop
mov
mov
mov
fs
pop
push
cli
push
sbb
lea
in
movsb
adc
js
fisttps
dec
adc
int3
add
lock
setle
or
mov
xorb
sub
ds
sbb
adc
jne
shl
jne
popf
clc
insl
push
push
mov
push
and
sbb
adcl
mov
and
add
lods
jbe
jp
decl
fs
pop
push
mov
inc
outsb
cmpsb
outsb
adc
cmp
loop,pt
loopne
das
cmp
std
or
push
cmp
or
rcll
pop
adc
shr
jne
and
mov
rorl
mov
xor
daa
sahf
dec
mov
roll
or
sub
imul
dec
adc
adc
call
mov
test
sub
add
outsl
imul
cmp
xchg
and
sub
sbb
push
mov
push
or
jmp
lret
jo
fstpl
pop
push
adc
aad
add
inc
xchg
adc
enter
fistpl
cwtl
mov
cmp
or
or
aad
fsubrp
loop
les
add
add
add
pop
push
mov
inc
push
cmpsb
call
gs
enter
test
pop
mov
push
jo
sub
xor
dec
es
cmp
mov
mov
mov
push
push
out
push
mov
cld
test
shrl
push
mov
outsb
push
or
jle
pop
xor
mov
xor
std
jle
mov
hlt
aas
push
xor
push
sbb
jp
pop
or
xchg
or
mov
inc
pop
out
ljmp
push
rcll
adc
arpl
test
test
push
movsb
jno
sub
pop
adc
jl
fildl
call
push
inc
fnsave
push
push
es
hlt
cmpsb
insl
or
dec
out
scas
mov
pop
and
mov
pushf
fsin
call
test
sub
incl
add
or
in
xchg
mov
shl
push
xchg
leave
add
popf
pushf
and
test
mov
or
nop
mov
cvtps2pi
popa
insl
sub
or
int
ja
push
mov
fadds
add
pusha
cmp
dec
mov
adc
mov
test
inc
stos
lret
jge
ds
les
sar
pop
cvtpi2ps
je
mov
inc
sbb
and
lss
sbb
adc
mov
jbe
test
dec
cwtl
mov
dec
pop
sbb
jne
mov
outsl
pop
hlt
les
and
dec
push
dec
popa
sub
inc
sub
add
inc
push
clc
cmp
orl
and
sbb
dec
add
mov
jmp
xor
cmp
nop
push
js
cli
fnstcw
push
test
nop
rclb
hlt
je
add
scas
inc
imul
push
mov
xor
lods
insl
stos
fisttpll
adc
dec
clc
arpl
xor
into
xchg
cmp
sbb
icebp
fistpl
std
mov
pop
xor
pushf
clc
and
in
push
lods
mov
and
mov
jae
clc
adc
movsb
std
push
sarl
push
mov
je
and
xlat
mov
xchg
push
push
fsubs
mov
fbld
mov
fistl
push
sbb
mov
ret
pop
push
adc
ljmp
add
aaa
outsb
mov
mov
mov
push
adc
dec
mov
int
mov
inc
jmp
pushl
push
daa
mov
push
jns
add
ds
dec
xchg
push
mov
mov
inc
clc
jecxz
test
push
cmp
lea
jnp
push
mov
mov
inc
and
ret
loop
aad
push
popf
adc
rolb
xor
push
aam
sub
test
add
xchg
hlt
and
cmpw
popa
std
popa
fisubl
iret
xchg
xlat
jg
pusha
sub
bsf
ds
push
lcall
add
add
rolb
mov
mov
or
popf
inc
jo
adc
jae
push
adc
mov
inc
mov
jp
dec
je
insb
aam
sbbb
sahf
test
imulb
loope
incb
cmp
loopne
ret
lret
lahf
push
cmp
sub
insl
or
pop
shlb
ret
sbb
cmp
int3
pop
lock
nop
sbb
mov
sbb
and
push
mov
push
adc
inc
cs
mov
or
test
es
mov
mov
setle
cld
jo
loopne
push
test
cld
push
fs
push
mov
mov
rolb
or
cmpb
jmp
push
pop
mov
or
inc
or
pusha
dec
mov
insl
jno
xor
cmp
fstpl
adc
push
and
mov
stos
push
stos
push
fisttps
xchg
mov
or
xchg
test
leave
aas
cld
and
add
jge
sub
addb
dec
push
es
mov
xchg
cmpsb
call
sub
jae
add
pop
push
in
adc
cmpb
mulb
mov
jno
cmp
adc
loopne
sbb
adc
jmp
dec
or
jl
jb
xchg
pop
je
and
add
inc
test
add
test
push
loopne
add
cs
mov
pop
test
pusha
jo
adc
js
sub
push
cwtl
int3
dec
mov
arpl
clc
lods
loop
fldl
inc
mov
movsl
cmp
dec
cmp
add
repz
aam
pop
data16
inc
xorb
push
fisttpl
sarb
pusha
lods
ds
xor
mov
add
xor
gs
imul
movsb
sub
fs
xor
rcr
aad
xchg
push
push
or
xor
dec
pop
sub
decl
shrl
in
cmp
jmp
pop
inc
je
in
rcrl
ficomps
lret
adc
loop
push
fmull
rolb
and
js
mov
cld
pop
add
call
add
pushl
pushf
xchg
xlat
insb
adc
int3
mov
jb
add
inc
adc
bswap
and
push
push
dec
adc
adcb
mov
or
mov
idivb
test
push
cld
push
cmp
sbb
add
mov
push
aaa
sbb
xchg
pusha
gs
iret
aas
mov
pop
xchg
push
sub
push
pop
inc
inc
xor
int3
xchg
test
sub
mov
sub
test
inc
xor
push
pop
jno
cmp
out
lcall
dec
rorl
adc
idivb
bound
jb
mov
aam
rclb
cwtl
addl
mov
adc
sub
cmp
aaa
test
xor
or
test
push
clc
les
nop
push
nop
jle
or
or
sub
jbe
movsb
jle
ret
in
mov
je
ds
nop
or
pushf
lea
add
hlt
push
mov
rcr
mov
ror
loop
popf
lea
lret
or
jo
ret
sbb
cmp
mov
cld
pushf
xorb
add
or
xor
push
test
ds
sub
inc
lea
mov
ds
ret
insb
inc
xor
sbb
mov
fcoml
inc
push
cs
xor
movsb
xchg
and
or
adc
test
jg
and
test
push
push
test
mul
xchg
push
mov
mov
adc
movb
in
and
sub
xor
enter
mov
jnp
mov
sbb
jl
jp
or
add
add
inc
pop
add
nop
push
pop
sarb
sbb
or
jp
outsl
dec
mov
shll
push
adc
pop
mov
lret
subb
incl
test
pop
push
cmp
nop
push
test
jl
mov
or
subb
adc
cmc
out
cmp
orb
push
jp
data16
mov
inc
adc
mov
rorb
fcomp
hlt
and
lcall
popa
pusha
mov
shlb
ljmp
mov
incl
loope
data16
mov
add
pop
fimull
das
test
clc
aam
lcall
in
xor
adc
aas
mov
je
mov
cmpsb
mov
lcall
call
sahf
or
movsl
mov
add
div
test
lods
mov
add
xchg
pop
pop
lock
inc
mov
xchg
adc
jmp
mov
inc
fisubrl
xor
xor
test
push
mov
mov
mov
adc
loope
hlt
xchg
ds
push
hlt
push
mov
lea
test
adc
cmpsb
sub
stos
scas
xor
push
stc
adc
or
mov
jecxz
shlb
pop
incl
or
mov
mov
xchg
pop
inc
cwtl
mov
mov
jno
mov
mov
pop
sbb
push
push
sbb
nop
adc
or
or
outsl
push
dec
mov
fisttpl
push
hlt
sti
mov
dec
and
jle
xor
fidivrl
pusha
mov
pmulhw
aaa
dec
jge
test
stos
jp
jg
mov
cmp
sbb
push
hlt
call
adc
cmp
mov
sub
jmp
inc
test
push
ljmp
adc
sbb
sub
and
dec
xor
test
das
push
add
ljmp
add
jp
jne
inc
mov
mov
incb
and
or
sbb
test
inc
xchg
sub
bound
push
cmpsl
gs
nop
push
rolb
xor
jge
pop
outsb
jle
and
mov
jp
jo
inc
std
or
or
sar
fisttpl
test
pushf
inc
loop
pushf
xor
mov
mov
push
push
popa
mov
pop
rclb
movsb
test
loop
cli
sub
and
cmp
cltd
xlat
xchg
gs
test
jmp
idivb
push
pop
add
test
popa
aad
fidivrs
add
fdivl
es
mov
or
stos
pushl
loope
cmp
pop
jne
sbb
jmp
incl
push
dec
or
ljmp
inc
int
out
cwtl
enter
adc
xor
fmuls
push
fidivrl
sub
ret
inc
mov
cs
mov
test
bound
notb
cmp
clc
and
mov
sub
push
pop
push
mov
push
lods
or
push
add
xchg
in
inc
xor
xor
or
mov
jo
stos
cmp
mov
cli
dec
push
ror
rorb
je
jg
push
mov
pop
mov
mov
fdivrl
fiadds
xor
push
ss
jl
pop
jns
mov
mov
hlt
xchg
jge
xchg
sub
pop
ljmp
or
xchg
adc
pop
sub
mov
scas
dec
cmp
xchg
cmp
xchg
ss
jl
adc
adc
or
mov
sbb
xor
ret
sub
loope
jl
dec
jmp
mov
les
sbb
daa
mov
loop
xchg
push
int
ja
mov
orb
aam
stos
sub
shlb
or
fs
mov
and
scas
fidivl
out
test
subl
add
dec
adc
or
cmpsb
sbbb
push
outsb
dec
xchg
xchg
fs
leave
or
out
mov
in
inc
fmuls
mov
inc
test
or
and
sub
push
enter
mov
cmp
add
mov
adc
mov
test
bound
sub
jmp
xor
xchg
pop
xchg
add
call
fimuls
add
dec
cmp
hlt
sbb
jle
sub
mov
jmp
add
pop
int3
xor
mov
cmp
mov
call
fsubr
dec
das
cmpsb
out
mov
cmp
mov
ss
insl
xchg
cmp
test
cmp
mov
add
or
and
loope
or
insb
push
mov
ja
xchg
jmp
sbb
mov
pusha
inc
sbb
jl
cmp
inc
and
loopne
stos
lock
pop
rclb
xchg
out
cld
mov
test
dec
mov
decl
les
inc
mov
adc
mov
mov
jl
arpl
dec
cmp
mov
xchg
push
aaa
lret
mov
dec
pop
popa
push
je
movsb
dec
inc
loopne
adc
add
mov
jne
insb
call
imul
js
jmp
dec
xchg
add
dec
add
push
test
mov
sahf
je
out
inc
and
inc
adc
add
inc
lock
pop
lret
mov
adc
sbb
xor
xchg
sub
xor
jb
push
or
push
lock
add
add
inc
shr
lock
shrb
adcb
mov
pop
insb
movsb
loopne
mov
adc
pop
call
push
setno
scas
mov
mov
jnp
fisubrs
in
in
mov
or
cmp
mov
or
es
push
mov
mov
inc
les
dec
mov
lcall
add
push
inc
loopne
inc
leave
pop
dec
mov
mov
in
sbb
and
and
es
nop
mov
xor
pusha
mov
and
repz
inc
sub
nop
push
std
mov
push
add
notb
pushf
mov
je
cmpsb
inc
dec
filds
ds
add
jmp
testb
adc
hlt
or
test
adc
imul
ret
push
pop
add
dec
lcall
sub
orb
testb
add
inc
pop
incl
aam
lods
mov
sbb
imul
or
jl
cmp
dec
ljmp
and
jle
int
inc
push
xor
mov
pusha
mov
mov
nop
cmp
je
dec
push
dec
mov
data16
mov
rcl
or
xchg
test
mov
pop
pusha
add
jmp
fdivs
and
mov
aam
or
push
in
rol
add
mov
push
jle
sbb
mov
push
and
mov
or
push
insb
loopne
push
push
testb
cld
pop
mov
add
inc
mov
jle
add
pusha
or
jbe
dec
push
ret
cmc
test
mov
out
sub
xor
clc
xor
cmpsb
mov
push
jle
loopne
jae
jmp
inc
adcl
sbb
hlt
adc
cld
inc
enter
push
cmp
iret
faddl
clc
inc
cltd
hlt
add
ret
cmp
push
jle
xchg
or
mov
rolb
push
gs
push
mov
add
mov
push
in
mov
gs
cmpb
rorl
push
imulb
mov
push
xor
insb
cmp
scas
sub
or
loopne
cmpsb
cmp
cs
push
pop
add
imul
dec
xor
push
mov
xor
pop
adcl
dec
shrb
jecxz
sub
pop
rcrb
jne
or
mov
pop
ds
roll
or
data16
pushf
push
add
dec
fldt
pop
mov
pusha
xorb
inc
loop
std
call
sbb
ficompl
ds
dec
sub
mov
adc
and
ss
or
shll
sbb
dec
or
mov
push
push
sarb
adc
and
sub
rorb
and
data16
cld
gs
aas
fsubs
hlt
scas
arpl
data16
stos
call
add
pop
loop
mov
pop
int3
fimull
je
cmp
dec
shll
lods
adc
ds
rorb
xor
pop
mov
add
int3
out
xor
dec
popf
adc
mov
mov
cmp
clc
mov
mov
cmp
decl
push
mov
movsl
push
pop
inc
dec
mov
push
decb
dec
fidivrl
insb
and
aas
clc
pop
pop
push
je
inc
loopne
mov
add
lock
push
sub
enter
add
adc
mov
cli
sbbb
ficoms
lea
add
dec
popl
and
mov
mov
fdivp
adc
adc
out
xor
pop
dec
inc
pushl
add
xor
mov
dec
jmp
mov
lea
xchg
adc
pop
cmpsb
addb
scas
cs
or
mov
lcall
xorb
lock
call
lock
push
clc
pcmpgtd
push
sbb
pop
jmp
mov
and
mov
enter
adc
and
fisubs
push
insl
stos
mov
loop
scas
add
je
mov
mov
call
mov
sarb
push
mov
mov
js
ficompl
xor
pop
incl
push
hlt
and
cmpl
lahf
xor
nop
mov
mov
movl
inc
push
mov
mov
adc
push
mov
loop
test
inc
adc
ja
or
mov
xchg
xor
or
push
adc
lods
push
jecxz
mov
push
add
rclb
call
testb
add
imul
sub
mov
xchg
rcrb
andl
std
xchg
data16
or
push
xchg
and
and
mov
mov
push
and
inc
cltd
ds
cmc
dec
jp
add
jae
or
dec
insb
mov
cmp
pop
repnz
cli
hlt
push
jmp
dec
add
sub
stc
adcl
fisubs
test
cmp
das
lock
imul
xor
xchg
test
je
divl
mov
adc
or
cltd
clc
fisttpll
je
test
add
mov
xor
xor
or
mov
hlt
jmp
jl
xchg
std
and
add
aad
daa
mov
xor
icebp
or
push
lcall
adc
xor
aas
push
lods
add
mov
ljmp
orb
sbb
mov
cmp
ficoml
or
push
mov
rclb
popf
mov
cmp
loop
add
mov
incl
sar
add
int3
int
jb
dec
pop
js
pusha
adc
inc
or
test
icebp
outsb
lret
or
adc
nop
fldl
insb
inc
fcomp
pushl
std
sub
inc
add
adc
or
pop
or
int
mov
jns
aaa
push
pop
mov
push
sub
push
or
xor
mov
mov
lcall
hlt
inc
ss
add
inc
imul
sub
jno
aam
sbb
cmp
push
bound
inc
cmp
push
ljmp
lcall
or
outsb
inc
cld
pusha
arpl
dec
jp
jle,pn
out
and
dec
popa
movsl
push
jo
ret
push
dec
sub
or
pop
ja
jnp
adc
fdivrs
xor
lret
jp
std
aaa
push
notl
pop
aam
ret
add
push
ljmp
call
xor
es
cmp
sbb
pop
test
jg
mov
ljmp
pop
push
rorl
xchg
je
inc
jl
xchg
mov
mov
loop
addl
pop
add
inc
sbb
xchg
orl
sbb
mov
dec
insb
or
mull
push
sbbb
fidivl
mov
decl
jmp
shrb
add
aaa
cltd
insl
movsb
mov
test
and
aam
dec
dec
sub
adc
add
pop
inc
cmpsb
mov
imul
call
jb
mov
push
jle
add
mov
pop
add
dec
mov
enter
inc
adc
aam
sbb
sub
shlb
mov
or
shll
push
add
add
dec
xchg
mov
and
clc
push
out
jae
filds
jne
cmp
push
mov
pusha
test
sub
in
js
mov
sbb
sti
call
fildll
jl
xchg
pusha
adc
orb
popa
push
not
daa
inc
les
clc
mov
inc
cli
mov
xchg
ret
or
aam
mov
push
icebp
dec
or
xor
xor
je
and
inc
add
aas
jne
out
add
stos
inc
cld
push
xor
fistps
or
mov
out
cmp
pop
dec
lea
cld
sub
push
inc
lods
in
mov
and
in
mov
and
push
push
adc
sub
push
stos
jbe
or
pop
pop
xor
mov
mov
hlt
and
popa
xlat
push
shl
inc
fisttps
gs
dec
inc
std
lahf
icebp
sarb
out
or
stc
pop
and
into
push
and
rorb
dec
sbbb
stos
add
ret
mov
aam
or
push
cmp
pop
inc
mov
add
movsb
mov
mov
aaa
sbb
adc
cmp
mov
push
mov
fsubrl
push
scas
and
xchg
cli
ljmp
test
push
pop
test
sbbb
mov
in
push
ss
cmpsl
fadds
in
mov
hlt
imul
and
sbb
and
test
push
dec
push
jp
imul
inc
jl
push
movsl
icebp
clc
cmc
xchg
loop
int3
add
enter
fsubrp
xor
add
pusha
cmp
push
rcl
adc
inc
push
les
xchg
push
xchg
cmc
pop
sub
out
or
xchg
mov
cmp
inc
js
jg
lfs
jb
mov
dec
inc
mov
fidivrs
mov
imulb
adc
and
push
jmp
pushf
std
lds
mov
push
jne
test
nop
pop
and
sbb
mov
and
nop
mov
push
pop
cmp
mov
xchg
fdiv
inc
cmp
scas
add
mov
cmp
rol
pop
or
je
or
jmp
js
mov
ret
fdiv
mov
push
gs
pop
cld
add
enter
fiadds
les
pusha
adc
jo
stos
push
jl
xor
in
es
sub
fsub
push
pop
divb
mov
add
lret
add
add
mov
int3
sub
and
mov
jno
stos
dec
mov
data16
sub
mov
mov
push
jns
cmp
xor
adc
cmp
rorb
mulb
gs
dec
ja
sub
mov
test
fdivs
xor
inc
adc
cwtl
imul
ja
or
psllw
or
aad
dec
loope
shrb
inc
push
shl
mov
loopne
dec
pusha
adc
add
in
pop
call
jmp
ss
fstpt
loopne
out
push
inc
pusha
int
sbb
or
mov
mov
je
int3
decb
cmp
addb
jg
hlt
add
push
pop
jo
pushf
stos
bound
inc
fcomi
aaa
adc
call
pop
mov
shrl
inc
push
add
cmc
adc
mov
xlat
xchg
jo
lods
dec
push
in
ret
insb
jne
pop
push
out
dec
and
in
loop
cmc
aam
nop
outsb
mov
push
js
xchg
inc
add
add
and
int3
xchg
push
sub
adc
pop
push
inc
cmpl
dec
mov
fwait
mov
js
sub
nop
sar
das
and
imul
xchg
sbb
cld
add
mov
mov
retw
and
add
push
mov
and
insb
adc
mov
in
jnp
lods
nop
scas
mov
je
out
test
subl
xorb
out
pop
lcall
inc
lods
outsb
or
data16
push
add
fcompl
and
cmpsb
or
sbbb
test
sbb
dec
mov
nop
data16
lret
inc
test
xchg
mov
lret
inc
pop
arpl
xchg
sbb
rcrl
ss
push
push
je
test
xor
lock
out
mov
jno
adcb
pop
cmp
jne
and
mov
adc
adc
inc
add
adc
pop
push
sbbl
mov
mov
add
push
jecxz
fwait
testb
repnz
jo
inc
push
loope
and
ret
push
inc
push
sbb
imulb
jmp
pop
gs
sarb
movsb
dec
jmp
push
push
cmpsb
push
jno
push
xchg
add
adc
lds
das
stos
orb
mov
loope
push
leave
mov
popf
test
pushl
test
inc
inc
gs
dec
pop
cmpsb
movsl
inc
adc
loopne
ror
jno
paddd
cmp
stc
add
mov
std
push
sub
push
lock
mov
je
ret
pop
ss
stos
cld
imul
push
fnsave
lock
cmp
xchg
push
inc
jl
leave
out
and
fs
popf
mov
xor
mov
push
push
mov
dec
insb
push
cltd
cmp
push
lcall
push
or
fcompl
je
mov
mov
add
push
push
adc
and
cmp
icebp
xchg
sbbb
xor
loop
push
add
inc
push
adc
inc
ret
push
mov
mov
lret
mov
adc
xchg
mov
cmpsb
pop
insl
mov
sub
push
add
clc
shll
fs
sub
dec
mov
popa
xchg
je
sahf
mov
pop
daa
pop
jo
dec
and
xor
cmp
cmc
mov
inc
dec
mov
jl
dec
daa
and
fcomps
jmp
shll
loop
cwtl
cmpsb
push
cmc
notl
sub
out
ret
repnz
add
push
cmp
dec
inc
sbb
movsb
nop
mov
jo
add
mov
jge
mov
xorb
or
loop
inc
lds
ds
sub
or
jle
mov
fsubs
push
dec
les
xor
lahf
push
dec
pop
fisubrl
adc
mov
inc
dec
cwtl
test
iret
dec
out
rclb
dec
adc
xchg
sbb
fdivs
add
repnz
mov
and
insb
pop
std
pusha
dec
or
out
aas
sbb
call
loopne
les
and
jno
push
enter
mov
scas
adc
pop
cld
adc
in
push
xchg
test
mov
mov
cmp
ss
in
enter
aad
push
movsl
jmp
pop
cmpl
and
adc
je
out
and
inc
mov
int3
cwtl
jp
call
mov
jp
cmp
or
adc
fs
or
sub
xchg
mov
pop
pop
aam
out
mov
andb
sbb
fstl
push
sbb
add
dec
in
add
nop
sub
les
mov
in
pop
add
jg
scas
popa
loop
inc
sbb
push
loopne
dec
push
inc
push
pop
or
mov
cmp
data16
mov
insl
pop
cmp
mov
test
jmp
mov
ret
in
xorb
stc
add
mov
test
stos
mov
add
jl
jl
cmpsl
icebp
gs
popa
nop
mov
adc
pop
aas
add
adc
jnp
test
adc
inc
inc
add
call
aam
add
jge,pn
add
push
bound
jg
sub
fsubs
mov
dec
pop
mov
jb
xchg
jne
push
push
inc
jo
jne
test
push
jo
cmp
incl
jb
and
cmpsl
adc
jb
inc
in
jb
test
jbe
or
ljmp
je
mov
mov
mov
clc
jle
enter
jbe
or
xor
mul
dec
inc
jbe
cmc
jmp
aaa
jb
imul
fiadds
pop
cmp
add
call
sub
mov
push
xchg
movsb
push
mov
mov
enter
idivb
lcall
add
add
adc
ret
jmp
xchg
or
clc
mov
outsl
push
pop
pop
popa
add
add
xor
daa
mov
sbb
es
fs
pusha
roll
les
push
ret
and
fs
loopne
mov
xor
aam
ds
outsb
rolb
inc
insb
mov
mov
cli
fwait
enter
jmp
leave
scas
rolb
rolb
fldl
xor
or
subb
inc
cltd
pop
add
sbb
rcrb
xor
ret
int3
jle
ret
sbb
fs
rorb
cld
push
mov
push
pop
add
jo
or
fcom
inc
fiadds
ret
gs
in
and
inc
cld
dec
pop
test
add
xor
sbb
push
out
or
sar
sbb
push
xchg
subb
push
add
mov
ret
dec
push
add
popa
lea
pop
add
cmp
dec
xchg
cltd
add
adc
rolb
xchg
pop
cmc
out
jp
xchg
inc
dec
sahf
push
test
fists
mov
mov
dec
adc
lds
cmp
or
repnz
mov
dec
jl
in
cmpl
xor
std
mov
push
mov
push
cmpsl
push
movsl
lods
pop
rcrb
mov
outsl
out
aam
pop
pusha
gs
jnp
call
lock
cmpsb
pop
andl
sub
push
or
arpl
iret
pusha
inc
rcrl
sub
pop
inc
int3
jo
sbb
loopne
mov
pop
js
dec
or
movsb
mov
dec
add
sub
cmp
stos
and
mov
jo
cmp
inc
jo
push
lods
aam
aam
aad
lret
lahf
sub
push
jl
or
add
imul
add
or
scas
lods
enter
lock
cmpb
pop
pusha
fidivl
sbb
and
sub
int
shlb
mov
rol
or
and
push
jae
std
adc
mov
adcb
enter
cld
sub
gs
loop
mov
sahf
mov
les
scas
xchg
dec
test
hlt
mov
push
cld
inc
inc
add
xchg
into
scas
movsb
add
pop
or
inc
leave
inc
add
xchg
je
mov
inc
dec
add
or
cli
mov
inc
test
pop
jecxz
sub
add
mov
inc
push
test
into
cli
add
jae
dec
mov
add
or
pop
lds
push
repnz
int3
push
and
fidivl
adc
jle
andb
and
mov
sub
sbb
insl
add
mov
call
std
sbb
mov
cmpsl
xor
movsb
out
sbb
dec
clc
in
in
repnz
test
mov
and
mov
int3
push
jo
nop
mov
out
ret
test
xor
lods
gs
stos
insb
push
xor
daa
pop
dec
ljmp
es
sbb
or
push
xor
adc
mov
int
adc
leave
pop
inc
push
sub
ret
ret
cmp
shlb
popa
orb
mov
mov
mov
mov
and
adc
mov
jge
mov
pop
cmp
add
testb
xchg
cmp
cmpsb
push
bound
xlat
arpl
lock
ds
add
andb
mov
mov
stos
cmpsl
mov
pop
fildll
addr16
xlat
into
rolb
imul
mov
les
and
cmp
push
dec
sbb
push
push
rorb
je
dec
sub
add
enter
mov
mov
loope
pop
adc
adc
or
inc
mov
into
insb
mov
jne
xor
inc
aad
dec
mov
data16
adc
add
es
dec
or
int3
cld
test
sahf
jne
icebp
add
lret
outsl
dec
xchg
movsl
subl
pop
call
mov
add
imul
fwait
lock
dec
push
push
aam
insl
cli
dec
xor
aas
loopne
add
dec
sbbb
popf
inc
sbb
ret
adcb
roll
lret
cli
push
cld
decb
inc
mov
and
ds
dec
test
inc
pop
add
inc
js
pop
sarl
adc
out
ret
jg
pop
icebp
add
cli
loop
mov
test
or
push
dec
clc
mov
and
int3
out
movb
pop
jae,pn
jle
hlt
mov
repz
push
dec
je
xor
rorb
mov
rcll
mov
mov
cwtl
add
and
mov
mov
lds
xchg
or
into
pushl
sbb
xor
add
mov
testl
jae
cmp
cmp
cwtl
aam
xor
lds
mov
push
xchg
movsb
call
or
and
mov
xchg
dec
mov
xchg
mov
inc
aaa
sub
xorl
je
mov
cli
xchg
pop
subl
mov
andl
jg
ljmp
mov
ss
lods
inc
add
add
fldcw
ret
cmpsl
rol
inc
les
mov
add
add
and
push
dec
data16
mov
ret
cmp
push
movsb
lods
jecxz
loopne
ret
outsb
mov
mov
inc
cli
cmp
pop
mov
mov
mov
and
jge
push
lret
jbe
stos
popa
insb
or
sahf
adc
cld
mov
sub
ret
jo
and
mov
mov
xor
inc
adc
inc
nop
notb
dec
push
add
andb
mov
mov
inc
rolb
adc
mov
mov
mov
mov
ror
clc
je
push
sbb
sbb
sub
call
adc
call
and
cmp
movsl
add
xor
push
stos
mov
lock
call
das
xchg
xchg
ret
push
inc
and
dec
or
push
mov
jle
push
dec
fwait
adc
xor
out
push
rcrl
shlb
std
es
subl
pop
pop
cmp
push
addl
mov
clc
aaa
xlat
call
jo
sbb
das
pop
push
cmp
jmp
push
ljmp
lret
in
or
mov
fadds
mov
mov
loope
sub
loopne
cmp
push
gs
push
adc
push
push
adc
test
inc
negb
popf
test
test
rorb
loop
add
push
sbb
xchg
or
ret
insb
add
test
je
push
or
push
push
mov
mov
movl
loope
cmovnp
dec
test
or
mov
fcoms
movsb
sub
daa
mov
mov
sbb
stos
dec
inc
add
gs
cmp
je
ret
fsubrs
adc
xchg
and
mov
mov
lock
ret
inc
bound
and
das
loop
call
aaa
sbb
add
mov
push
shll
cli
push
pop
add
nop
mov
mov
out
jmp
push
ror
push
cmp
lock
mov
push
test
inc
aam
rcrb
push
cli
push
in
push
xchg
mov
cmp
pusha
inc
pop
push
fst
gs
mov
lock
shufps
mov
jne
insl
jg
addl
inc
xor
adc
sbb
dec
insl
pushl
add
fcoms
dec
out
aaa
cmp
mov
loop
push
movb
ret
ret
push
repz
shlb
push
add
lcall
add
pop
add
test
pop
inc
pusha
pop
and
jl
test
sub
sub
adc
rcrb
clc
xor
add
leave
sbb
or
and
cmc
pop
pop
jl
mov
xor
sbbl
lcall
movsl
mov
inc
sub
sbb
jb
fcoms
test
mov
or
test
pop
inc
cmp
pop
leave
mov
and
rol
hlt
test
xor
cld
dec
mov
lcall
jp
in
jne
jl
push
test
std
add
int3
inc
add
lea
inc
insb
sub
outsl
clc
inc
mov
sub
push
int3
cs
inc
xor
cld
mov
out
xchg
dec
push
pop
sub
or
jo
sar
into
lret
in
mov
mov
adc
or
cld
adc
call
push
xorl
sub
jae
jmp
repnz
mov
add
jb
pop
shll
aaa
mov
cmp
leave
pop
mov
sbb
cli
sub
or
mov
cli
out
inc
inc
adc
jmp
test
lods
inc
pop
sbb
pop
mov
mov
push
rorl
mov
movsb
call
call
lock
lret
fidivl
js
cmp
lahf
push
in
loop
pop
lods
xor
add
fst
inc
call
jmp
adc
loope
rcrb
jo
into
shlb
icebp
xlat
clc
add
xor
pop
clc
lcall
in
clc
push
inc
sbb
ret
fwait
or
and
addb
cwtl
loopne
add
bnd
jl
nop
js
push
shrb
jecxz
jecxz
dec
or
cmp
lcall
in
mov
adc
negb
adc
push
in
adc
or
mov
push
sub
fs
mov
adc
int3
shll
jmp
mov
nop
pop
repz
stc
push
mov
or
jge
push
mov
insb
xchg
imul
sub
sarb
cmp
jle
lds
add
mov
lock
dec
push
inc
in
mov
adc
scas
test
insb
lcall
add
push
ret
rorl
push
ret
jp
or
cmp
je
scas
cltd
xor
xor
outsl
andb
mov
cmp
mov
inc
add
arpl
and
mov
mov
mov
mov
movsb
add
add
test
and
push
mov
push
popa
testl
xor
test
popa
push
mov
sub
inc
mov
pushl
jecxz
sub
push
rcll
test
aas
mov
sbb
hlt
jmp
repz
pcmpgtb
sarb
inc
adc
adc
or
xor
mov
js
call
shlb
xchg
mov
mov
ds
call
pop
sub
mov
push
add
inc
je
test
testb
mov
xlat
pop
nop
fisubl
mov
adcb
clc
push
sbb
andl
in
lret
sbb
or
mov
add
add
movsb
mov
push
lods
cmp
fcmove
fmull
dec
sarb
mov
cs
dec
dec
push
stos
stos
movsb
xor
roll
ficomps
push
mov
scas
and
pop
dec
mov
nop
mov
je
mov
inc
je
subl
jne
aad
pushl
popa
lock
push
ret
fiaddl
iret
es
inc
mov
push
loopne
add
jle
out
mov
push
addl
pop
mov
in
lcall
add
and
test
mov
add
repz
xchg
jmp
mov
jo
lock
push
or
sbb
call
mov
test
adc
add
mov
lcall
mov
aam
push
lcall
mov
and
scas
xor
shl
dec
inc
xor
add
cmp
call
and
dec
jmp
js
push
jo
movl
std
mov
add
xlat
ja
call
dec
xchg
outsb
mov
test
shrb
pop
fs
call
adc
into
popa
out
jo
popa
fwait
es
xchg
dec
jge
lcall
adc
cmp
les
sub
xor
mov
mov
and
add
das
sub
cmp
insb
orl
xor
mov
ret
mov
lock
testb
add
nop
and
ret
scas
mov
jne
dec
add
mov
out
test
fistpl
jl
mov
mov
int3
clc
jo
mov
test
mulb
push
sbb
xor
mov
rcrb
std
add
cmp
ffreep
rorb
outsb
test
jne
and
jne
adc
add
pop
and
pop
ja
fmuls
or
outsl
dec
xor
sbb
mov
popa
test
dec
inc
addl
in
repz
jbe
cmpsb
add
hlt
or
xchg
add
pusha
cmc
fwait
push
cmp
or
popf
popa
xchg
lock
aas
dec
insb
cld
mov
bound
adc
dec
popf
jne
sub
dec
cmp
sbb
jl
test
inc
xchg
xchg
sahf
sub
jl
and
test
add
push
inc
add
dec
les
xor
adc
idivb
push
neg
xor
negb
fiadds
jae,pt
and
cld
push
lcall
xor
pop
mov
pop
js
push
test
mov
aam
push
fsubrs
sbb
in
dec
sar
rclb
add
jmp
orb
orl
into
jp
inc
decb
cmp
icebp
and
adc
ja
es
inc
inc
sti
dec
sti
pusha
mov
bound
or
cmp
cmp
shlb
sahf
jmp
test
lock
xchg
push
and
aas
in
pusha
cmp
sub
sahf
pop
or
rol
push
andb
pushf
lods
pop
jo
sub
sbb
aaa
dec
incl
sub
add
or
push
jo
test
inc
add
xor
pop
push
add
das
addb
test
or
loop
push
movsb
pop
add
push
mov
dec
mov
imul
mov
testb
in
inc
test
int3
cs
add
test
imul
test
fiaddl
loop
sti
jmp
or
and
in
mov
clc
mov
les
sub
decl
test
xchg
cmp
cld
mov
xor
pop
mov
mov
orb
pop
mov
cmp
mov
inc
nop
jmp
adc
hlt
les
rclb
outsb
notb
test
call
push
adc
test
lret
fwait
mov
push
xchg
xchg
je
mov
pop
sahf
loope
and
push
bound
fisubl
les
inc
jne
and
jecxz
or
int3
into
mov
sbb
rcl
sbbl
push
add
push
add
push
orl
xchg
jecxz
xorb
insb
int3
idiv
cld
shlb
xchg
jle
data16
inc
mov
jmp
aam
push
push
mov
xchg
push
or
add
mov
pop
test
xchg
push
incl
mov
mov
inc
test
sar
pop
xor
jecxz
jnp
mov
xor
add
dec
int
jbe
out
test
lods
push
xorb
fiadds
jo
jle
mov
sar
es
rcrb
sub
xchg
mov
inc
and
bound
shrb
ds
jg
mov
inc
testb
fildl
and
leave
rcl
ss
mov
xchg
pop
in
push
cmp
and
jge
loope
add
add
lods
add
insb
cld
or
or
jb
test
jg
call
cld
dec
mov
xor
mov
push
mov
push
push
pop
or
into
push
sahf
or
sub
dec
dec
mov
popa
std
dec
dec
or
xchg
ljmp
andb
and
addb
mov
pop
pop
scas
test
xor
jne
loopne
sar
sahf
dec
cld
insl
ret
pop
dec
jb
mov
out
aaa
fs
aam
add
add
loopne
nop
cmp
adc
outsl
jp
rclb
xor
jl
xor
mov
mov
aaa
les
adc
call
sbb
push
push
lret
cmp
ja
sub
push
add
sti
inc
xor
out
pop
push
inc
xor
mov
mov
cmp
movb
inc
mov
and
sbb
pop
inc
jge
shrb
sahf
inc
mov
push
and
enter
sbb
test
push
push
hlt
pusha
pop
cmp
mov
clc
dec
arpl
cs
ljmp
add
je
in
inc
fldt
xorb
pusha
fmuls
push
mov
fcoml
mov
inc
in
pop
add
cld
mov
fiadds
dec
cmpsb
cmp
inc
leave
into
fdivrl
pop
cmp
push
push
mov
pop
push
pop
data16
and
pop
jno
cmp
int3
sbbl
fucomp
cmp
jp
jmp
mov
lahf
lea
dec
sub
pop
stos
push
sbbl
fwait
mov
cmpl
xor
loop
scas
test
roll
mov
sti
sub
push
inc
jge
ret
notb
xchg
popa
dec
mov
inc
adc
adc
xor
popa
mov
dec
xor
pusha
pushf
inc
dec
icebp
inc
push
sbb
jge
xor
and
xor
insb
inc
mov
push
or
xor
pop
fdivrs
inc
sbb
enter
mov
fdivl
outsl
inc
jns
fsubl
cmp
mov
rclb
xor
jmp
insb
in
sti
aas
js
pop
push
xorl
fmuls
in
fsts
push
sub
cmp
dec
mov
pop
pusha
ret
add
lea
movsb
addl
mov
lock
jecxz
arpl
sbb
dec
in
mov
jg
hlt
pop
je
fstl
leave
lods
push
dec
push
movsb
xor
inc
icebp
iret
test
clc
fmuls
jo
mov
js
outsl
push
inc
js
add
stc
cmp
mov
sahf
test
sbb
les
call
jmp
aas
cwtl
inc
es
mov
mov
pop
push
mov
lods
cli
add
push
loopne
lret
and
push
decl
add
mov
or
les
shrb
jl
xchg
js
test
mov
add
xchg
mov
std
xchg
cli
cltd
call
mov
dec
pop
push
mov
ds
and
mov
add
jl
xor
push
inc
jecxz
add
test
inc
call
stos
outsl
clc
xchg
test
out
fistpll
mov
addb
sarb
out
inc
mov
testb
gs
subb
je
mov
nop
cmpsb
test
pop
inc
call
or
loop
mov
mov
mov
and
inc
sbb
xchg
pop
inc
test
inc
jmp
sub
push
adc
sub
aaa
dec
outsl
cmpsb
icebp
adc
cmp
push
sbbb
inc
inc
jnp
jo
pop
out
cli
cli
aad
fistl
nop
jge
call
mov
or
mov
mov
inc
pop
rolb
fstpt
inc
and
mov
mov
outsl
or
in
push
add
xchg
fs
and
cld
psrld
adc
stc
xor
jg
lock
adc
icebp
push
lea
adc
adc
jns
pusha
ljmp
add
aam
outsl
xchg
push
fsubrl
int3
xchg
jecxz
sub
inc
call
and
ucomiss
lahf
push
cld
cmp
pop
std
jl
push
jge
push
and
les
push
lea
mov
adc
push
sbb
pop
push
rolb
ss
jmp
scas
bound
pop
dec
rolb
push
aad
sbb
inc
and
iret
les
add
das
mov
fiaddl
mov
mov
push
sub
push
dec
sbb
loop
mov
je
push
sbb
adc
or
mov
inc
pop
adc
jp
add
je
lods
stos
shlb
xor
les
nop
and
add
sarb
adc
and
int3
cli
fnsave
ret
cmc
push
test
cmp
orb
push
and
inc
js
and
and
inc
and
stos
xchg
push
cmp
adc
push
jp
or
pop
pop
dec
aaa
ljmp
xchg
or
xchg
mov
out
mov
or
jne
out
mov
cmp
insb
sub
sahf
test
test
inc
jo
push
ss
cld
out
xor
push
lea
add
call
roll
cmp
push
negl
es
mov
cld
gs
and
mov
shl
pop
movsb
into
or
push
fiadds
or
xor
jmp
jnp
adc
inc
out
les
sub
sub
mov
xchg
add
adc
push
mov
dec
mov
xchg
popa
in
in
add
or
mov
or
adc
jb
sbbb
and
mov
add
sbb
in
adc
cmp
negb
std
lahf
loop
fadd
cltd
push
jb
inc
push
sub
mov
incl
and
jae
test
and
inc
add
add
jp
std
inc
pop
mov
nop
push
inc
test
add
test
lret
adc
xchg
outsb
es
inc
xor
sbb
push
shrb
arpl
test
data16
add
push
stos
push
loope
fcom
hlt
and
inc
call
push
inc
mov
push
sarb
and
sub
mov
fcomps
das
pop
mov
inc
je
cli
push
fldcw
lret
ret
inc
hlt
int3
push
pop
std
into
mov
and
rcrb
ret
mov
popa
adc
xchg
push
add
bound
std
and
sbb
jae
cld
shlb
xor
add
pushl
inc
int3
inc
mov
add
pop
js
test
mov
or
cmp
pop
pop
lock
mov
cltd
cmpsb
push
xchg
mov
dec
mov
ja
fwait
pop
mov
adc
sub
hlt
push
push
jg
or
imul
pop
inc
cs
aaa
cmp
xlat
and
incl
lcall
movsb
insb
sub
cmp
sbb
jns
dec
leave
andb
pop
icebp
loopne
or
mov
and
mov
idiv
xor
cs
test
scas
xchg
inc
cmc
int3
fisubl
ljmp
push
lcall
loope
xchg
cmpsl
jo
mov
push
xchg
or
fdivrp
dec
js
sub
jl
push
lock
pusha
push
mov
or
mov
sub
dec
and
loop
push
inc
adc
mov
mov
pop
mov
push
sbb
mov
add
fadds
adc
lret
push
inc
push
shrb
mov
ret
or
adc
xchg
gs
sub
adc
or
push
add
pop
mov
mov
out
js
gs
xor
sbb
or
push
dec
fidivrl
mov
push
xorl
cmp
inc
jge
lret
clc
add
mov
fwait
sbb
sbb
inc
and
inc
pusha
add
jo
std
or
push
mov
test
mov
and
add
xor
pushl
add
mov
jo
push
sbb
adc
or
ds
aam
xor
mov
push
leave
mov
xchg
and
mov
xchg
shlb
lea
flds
insl
cld
mov
adc
mov
jmp
xchg
push
mov
clc
or
lret
sbb
adc
push
jl
and
out
and
cmc
loope
jl
enter
xchg
inc
cmp
call
std
test
stos
and
imul
push
or
or
ret
add
call
jle
mov
xor
aaa
jbe
sub
ss
sbb
mov
bound
add
je
test
rorl
mov
sub
push
push
sahf
push
stos
dec
or
push
jl
add
mov
push
bound
pop
in
jl
rcrl
sbb
pop
imul
dec
xor
sub
mov
sub
inc
dec
ficomps
sahf
rclb
inc
inc
cld
push
push
fs
push
xorb
dec
adcb
faddl
shlb
add
mov
out
cmp
mov
in
je
or
fwait
sub
push
ljmp
adc
push
add
gs
add
jle
inc
imul
scas
push
stos
push
or
cltd
rclb
jmp
stos
ljmp
jge
jmp
adc
pop
stos
adc
test
lock
pop
addb
and
nop
adc
out
mov
push
test
adc
xchg
in
add
pop
xor
andl
je
cmp
lcall
sbb
mov
push
sbb
into
aam
or
add
xor
mov
mov
mov
push
cwtl
leave
adcb
test
inc
mov
adc
dec
test
ds
arpl
push
call
push
mov
int3
sub
rorb
fs
arpl
pushf
mov
add
cmp
inc
jmp
push
aam
push
jbe
jb
add
xor
out
or
pop
outsb
psubsw
mov
mov
pop
xchg
and
adc
fwait
loope
clc
int
faddl
mov
add
loope
pop
mov
scas
xor
xorb
into
push
sbb
add
or
cli
imul
adc
mov
or
test
push
or
and
mov
push
test
ret
das
inc
std
xor
xchg
gs
mov
pusha
gs
push
dec
clc
push
pop
push
loopne
data16
rol
cli
rorb
mov
aam
jbe
pop
lock
and
push
xchg
aas
cmp
add
pop
push
lret
loop
fstpt
mov
pop
adc
pop
cmp
inc
mov
fsubrs
add
add
mov
push
cmp
jbe
aam
xor
jbe
and
lcall
es
push
sbb
rol
andb
xchg
pop
leave
push
or
adc
into
popf
dec
or
jl
add
adc
add
loop
mov
adc
lods
ljmp
in
and
and
pop
sub
inc
aam
cmp
ja
cmp
adc
and
xchg
loop
jg
adcl
cli
call
loopne
aaa
push
inc
stos
xchg
cmc
lods
fwait
insb
dec
or
mov
xchg
push
xchg
push
in
fisttpl
movsb
xchg
mov
ss
push
clc
icebp
clc
push
cvttps2pi
or
jle
in
pop
ficompl
inc
incb
je
or
adc
or
incl
mov
scas
mov
cs
xor
sub
sbb
xor
rcrl
and
shlb
mov
mov
call
mov
call
add
idivb
inc
jg
push
inc
xor
cld
and
cmp
xor
outsb
cmp
rclb
push
jge
or
cmp
ja
clc
mov
popa
xchg
cmp
add
or
nop
inc
mov
add
dec
add
loope
pushl
loopne
jo
inc
leave
int3
jno
mov
push
and
adc
sti
pop
sub
push
je
mov
xchg
in
pop
sbb
sub
stos
hlt
xchg
cmc
xchg
pushw
xor
incl
movsl
mov
push
adc
inc
sub
mov
jl
repz
or
xor
bound
fsubs
nop
bound
pop
jbe
sub
loope
scas
add
pop
sub
loope
mov
pop
cld
cmp
cmp
inc
xchg
push
mov
xor
pop
mov
cmp
add
mov
sbb
and
and
data16
pop
push
das
mov
push
or
js
adc
orl
inc
mov
push
push
pop
pop
push
mov
xchg
fdivs
mov
into
dec
mov
pop
mov
out
mov
pusha
mov
test
cltd
or
push
dec
push
jo
sbb
pop
clc
inc
or
mov
lcall
call
push
aas
fstpl
stc
int3
pusha
je
cmp
add
mov
sub
mov
mov
test
xor
loopne
add
add
testb
popa
icebp
sub
mov
mov
call
je
cmc
insl
jne
dec
jb
jnp
mov
push
lcall
sub
and
inc
mov
adc
loop
mov
clc
rcll
inc
mov
mov
dec
cmpsb
dec
xor
jle
add
and
mov
movsb
icebp
and
out
cs
incl
pop
shrb
out
jl
dec
add
enter
adcl
ja
or
mov
aad
push
incb
dec
jo
mov
xorb
std
pop
jmpw
cmp
cld
cwtl
clc
adc
add
adc
xor
and
add
and
icebp
out
dec
jmp
jmp
sub
and
lock
adc
push
and
sub
and
aaa
mov
add
xor
and
sarl
cmp
mov
test
sub
lret
jne
pop
jge
lcall
and
jle
or
sub
in
lea
or
jae
mov
mov
lea
add
sbb
mov
mov
and
je
inc
test
inc
xchg
xor
xchg
mov
rclb
imul
mov
movsl
outsl
pop
ficoms
push
scas
mov
jge
push
movsb
js
pop
cmpsl
subb
nop
sbb
lods
mov
data16
test
sbb
dec
sub
loopne
stos
jle
mov
push
leave
jle
pop
call
push
pop
xor
push
test
jl
dec
ss
test
pop
lock
das
shll
jmp
fs
mov
outsb
adc
mov
push
rclb
scas
mov
test
pop
fs
insb
cmc
or
xchg
lock
push
sub
ret
push
test
sarb
mov
xchg
call
js
mov
andb
addb
outsb
test
jne
aam
xor
xor
insl
inc
push
js
and
push
decb
sub
adc
mov
mov
push
push
xor
lret
xor
jo
pop
cmpsb
jo
xor
inc
fistpl
fidivrl
sub
mov
inc
mov
push
add
je
pop
inc
push
outsl
bound
or
shrb
pop
xchg
rcrb
inc
add
fnstcw
xor
rcr
ret
push
out
lret
aam
jmp
roll
xor
or
add
test
xor
ret
out
fildll
inc
rolb
lods
ret
inc
xchg
test
xchg
test
insb
jp
test
xor
enter
rolb
insb
add
push
mov
push
sbb
js
icebp
xor
pop
andb
mov
lret
xor
jp
push
mov
sub
add
cld
ljmp
loopne
test
insb
mov
push
mov
inc
mov
insb
cmp
je
rcrb
push
add
stos
jecxz
xchg
sbb
mov
repz
fsubrl
adc
jecxz
jmp
test
push
cmc
fistps
ror
mov
test
add
aas
inc
add
in
pushf
movsb
jne
push
dec
insb
loope
aam
dec
mov
dec
sub
xor
cld
test
mov
sahf
push
add
mov
cmpsb
sub
cmp
aas
in
mov
add
push
sub
test
and
movsl
sbb
xchg
cmpsl
and
out
cmp
adc
pushf
lds
out
push
les
scas
pop
push
or
pop
inc
imulb
fs
dec
jp
out
mov
clc
or
sbb
jno
add
add
rorl
pop
jae
inc
mov
sti
cmp
mov
adc
sahf
inc
lods
mov
jnp
xor
xchg
mov
and
jmp
cli
or
insb
and
std
mov
sbb
ror
inc
or
adc
movb
out
aam
adc
rolb
push
call
xor
in
xchg
adc
call
dec
fmul
pop
add
push
arpl
xor
sub
and
jle
call
inc
push
ds
xchg
mov
rolb
fsub
call
xor
aad
out
cmp
js,pn
leave
test
test
cmc
sbb
xchg
repnz
fisubl
sbb
testb
outsl
out
ret
mov
and
call
mov
jecxz
fmull
dec
mov
fcomps
popf
push
test
and
orb
mov
gs
sub
sbb
or
jbe
push
cld
das
test
hlt
or
orl
adc
testb
and
mov
movsb
andl
inc
dec
pop
loope
push
rol
inc
push
xchg
loopne
xchg
stos
in
adc
and
sbb
insb
pop
pop
in
add
push
sahf
add
and
popa
cmpsl
mov
test
popa
mov
mov
adcl
sbb
stos
mov
xor
lcall
xor
or
push
movl
sbb
jle
jge
push
pushf
clc
call
rolb
inc
in
movsb
hlt
incl
add
je
movsb
xchg
pop
lea
xor
test
xchg
push
test
mov
scas
mov
mov
fmull
add
stos
shrl
sub
jne
sbb
mov
inc
mov
fisttps
xor
mov
clc
imul
js
js
cmp
call
mov
xchg
sbb
sbb
and
std
aaa
sbb
xor
rclb
push
fsubrl
dec
cs
pop
int
jge
cmp
clc
and
xchg
stos
sub
add
dec
add
cmp
add
rorb
adc
test
nop
push
mov
mov
movsb
push
inc
adc
ljmp
jne
cltd
sbb
xchg
cmp
and
mov
hlt
test
shrb
imul
enter
mov
mov
mov
fcompl
scas
mov
push
insb
insl
sbb
fbstp
fs
add
cmp
cmc
cmpsl
int3
pusha
fsubrs
pop
clc
mov
xor
cmpsb
test
inc
arpl
loope
push
jl
or
cmp
rcl
fildl
cmp
int
dec
lea
lock
pop
xor
xor
cwtl
push
push
loope
cmpsb
mov
xor
cli
in
dec
adc
xchg
mov
enter
clc
adc
outsl
dec
leave
cmp
mov
call
jp
adc
push
mov
push
xorl
jne
outsb
sub
dec
add
inc
test
push
mov
inc
fldl
lcall
shlb
mov
stos
mov
outsl
pop
or
pop
fdivp
pop
push
jg
push
sub
inc
es
mov
scas
ljmp
fdivl
add
push
and
orb
adc
inc
test
mov
xchg
loope
jmp
mov
xchg
push
jle
sbb
adc
cmpsl
rcll
adc
mov
jmp
stos
or
inc
scas
inc
xchg
in
rol
les
or
js
cmp
jno
adc
and
pop
inc
dec
test
ljmp
sbb
cmp
movsb
ficomps
and
adc
les
adc
rorb
or
js
xchg
pushf
data16
call
imul
push
cmp
adc
mov
ljmp
push
clc
xchg
or
pusha
outsl
dec
xor
cwtl
adc
add
add
sub
push
mov
call
jp
lret
gs
inc
sbb
lcall
inc
add
loopne
jp
mov
and
inc
cmp
jb
lcall
pop
jg
fadd
cmpsl
dec
sub
push
testb
loopne
decb
mov
cmp
mov
fmull
int3
mov
rolb
pusha
lcall
cmp
cmpl
jae
sub
add
out
adc
dec
cmp
mov
fsubrl
push
mov
adc
xchg
out
pop
gs
mov
sub
ss
and
data16
fisttpl
jp
push
data16
pop
xorb
inc
add
iret
mov
gs
add
adcb
or
nop
sbb
loopne
jb
jmp
pushf
cld
hlt
pop
pop
sarb
lock
push
xchg
sbb
xchg
push
mov
enter
sub
aam
mov
cwtl
in
bound
mov
xlat
dec
sbb
add
ss
test
into
lods
in
inc
mov
and
mov
test
gs
mov
outsl
push
nop
inc
nop
fcoml
mov
adc
test
stos
xchg
push
test
push
je
mov
call
sub
and
pop
jbe
mov
mov
and
mov
cmp
push
je
lods
sarl
adc
mov
stc
leave
shlb
pop
or
mov
int3
inc
mov
sub
fldenv
xor
jne
adc
inc
xchg
aaa
js
mov
pop
sub
outsl
inc
or
add
or
inc
ret
and
aam
inc
sti
xchg
mov
push
lret
mov
add
pusha
mov
inc
enter
movsb
jne
adc
jo
or
inc
and
cld
outsb
dec
popl
and
test
xchg
or
cmpsl
hlt
icebp
inc
push
pop
cmpb
clc
xchg
pop
lret
sub
xor
imul
and
cmpsb
in
cmc
stos
sarb
jecxz
push
mov
addl
and
icebp
jnp
call
cli
cmp
cmp
jmp
gs
ret
sbb
pop
fs
mov
inc
dec
stc
and
sub
clc
gs
cmpsb
xchg
je
pop
dec
js
add
inc
dec
movsl
push
cld
inc
sbb
loopne
push
jle
sbb
dec
stos
push
pop
out
popa
inc
xchg
adc
mov
fbstp
mov
call
mov
jbe
andl
add
pusha
notb
loopne
inc
shl
and
mov
jge
jne,pn
pop
add
push
in
dec
mov
bound
add
lcall
push
pusha
icebp
vcvtps2pd
cmp
and
cmp
fnstenv
lcall
mov
outsb
push
jge,pn
dec
cmp
or
xchg
enter
xor
aas
dec
jl
fcomps
mov
push
movl
or
sti
add
incl
push
inc
daa
ss
adc
fisubrl
cld
adc
and
push
adc
sub
leave
call
in
stc
xor
rcrb
jmp
mov
cmc
fdivl
aam
dec
loope
mov
fs
adc
add
xor
scas
mov
in
or
out
dec
inc
adc
mov
inc
sbb
or
cld
add
movsb
add
lock
outsb
fsubs
lea
mov
mov
mov
dec
xchg
pop
or
test
inc
out
jo
pusha
lea
roll
sbb
push
mov
push
xchg
mov
jmp
clc
out
jnp
in
inc
mov
fs
mov
inc
push
mov
sub
mov
mov
popf
cmp
outsb
popf
push
or
rcrl
cmpsb
adc
vxorps
mov
icebp
shl
cmp
push
fs
outsb
and
inc
ljmp
loopne
push
cmp
xor
call
addl
stos
add
jo
dec
mov
sub
mov
cmpb
clc
sub
int3
push
jae
je
ds
rolb
adc
inc
arpl
cltd
out
cmp
sbb
test
push
mov
push
or
jbe
add
cwtl
push
cs
mov
lea
sbb
inc
mov
push
inc
jle
loopne
or
mov
push
sub
mov
ljmp
movsb
mov
call
inc
out
sub
scas
insb
push
jecxz
popa
in
sti
sbb
gs
push
inc
adcl
pop
add
add
push
cmp
push
mov
cmc
jmp
sub
lock
xor
rolb
notl
cmp
nop
daa
add
lods
push
movsb
sarb
dec
sbb
cs
sub
push
outsl
push
cld
jg
sub
mov
pmovmskb
jae
add
xor
inc
cld
jecxz
mov
push
es
fbstp
mov
test
shr
and
cmp
test
fs
div
cld
xor
pushl
mov
sub
pushf
dec
and
jb
sti
jmp
cmp
sbb
cld
push
xor
fs
inc
pop
mov
cmpsb
xchg
push
fdivrs
xchg
push
test
jae
xchg
imul
movsl
sub
rclb
in
stos
push
into
dec
add
je
call
xor
pop
movsb
xor
adc
bound
push
sbb
dec
pop
xor
mov
loopne
test
sbb
jb
das
xor
cmpsb
data16
or
ss
push
ds
push
and
xchg
mov
insb
cltd
loopne,pt
push
sub
add
push
cmpb
stos
push
je
jmp
inc
mov
adc
xlat
lcall
or
fs
or
test
pop
lock
mov
icebp
adc
movsb
iret
add
push
xor
xchg
sbbb
lret
das
fs
add
aaa
cld
pushl
enter
push
and
rcrb
test
push
add
data16
incb
pop
push
mov
jo
mov
jg
sahf
jge
push
dec
movb
add
scas
and
sbb
outsb
je
pushf
add
jg
outsl
mov
or
jecxz
jmp
xchg
notb
hlt
add
pop
mov
mov
adc
mov
adc
push
mov
int3
lods
mull
pop
js
adc
push
shrl
je
dec
and
push
bound
cmp
or
adcl
jp
call
inc
and
jecxz
xchg
lea
or
faddp
loope
mov
shrl
or
stos
leave
ss
mov
int
push
loop
push
in
cs
dec
pop
stos
lods
loop
inc
cmp
mov
and
mov
add
ret
lret
sbb
aas
dec
in
test
js
xor
movb
scas
stos
cmc
pop
mov
push
andl
adc
lret
pop
repnz
sbb
sti
rorb
inc
out
dec
push
or
loope
fs
clc
ljmp
inc
and
and
and
outsl
dec
js
xchg
or
loope
loopne
or
add
lahf
insb
xchg
dec
dec
ljmp
mov
cmp
cli
std
or
and
add
inc
cld
adc
scas
pushf
rclb
outsb
cmpsb
adc
lret
clc
or
cmp
xor
cltd
mov
add
mov
mov
xor
mov
js
bound
mov
jle
inc
js
pusha
pop
add
divb
aam
orb
adc
adc
test
pop
mov
bound
nop
cmp
std
in
pop
hlt
pop
mov
inc
sbb
or
pop
pushl
lret
rclb
ret
push
jae
pop
adc
mov
and
xor
aas
push
mov
jl
adc
add
sbb
cld
or
imul
loopne
adc
mov
inc
push
mov
push
ret
push
outsl
ret
lret
lock
mov
inc
jmp
add
push
inc
mov
xor
arpl
mov
mov
xchg
push
cmp
daa
sub
ss
xlat
inc
xor
push
mov
xor
outsb
lock
mov
icebp
je
sbb
je
jo
mov
lcall
scas
cmp
fimuls
lret
inc
mov
lcall
divb
xchg
rcll
xor
divl
lahf
icebp
cs
rol
cmp
xor
test
mov
inc
or
lock
nop
xorl
lahf
cmc
shrl
fs
hlt
sbbl
mov
xchg
pushf
pop
and
subl
push
jp
movb
pusha
xor
sbb
and
cli
ret
mov
data16
test
inc
aaa
inc
jp
in
pushf
jno
or
data16
or
repnz
and
cmp
retw
imul
insl
adc
add
sbb
cmp
fildll
cmp
cmp
pop
jmp
push
inc
adc
fwait
ja
push
dec
inc
or
pop
inc
xchg
add
mov
stc
punpcklwd
cld
jbe
inc
inc
mov
loopne
mov
stos
xor
fcoml
mov
insb
pop
mov
pop
lds
clc
pop
cltd
call
cmp
mov
je
hlt
sbb
jne
push
jg
fadd
cld
sub
ds
sub
and
aas
clc
mov
xor
sbb
test
pop
mov
clc
testb
cli
cli
aas
pop
push
in
push
shrb
pop
and
mov
add
ret
push
mov
dec
sahf
jmp
mov
mov
aas
ret
arpl
adcl
inc
andb
clc
add
jo
xchg
mov
mov
sarb
dec
pusha
ret
jbe
icebp
rol
inc
in
xor
and
push
fdivs
xchg
mov
shlb
cmp
cwtl
sub
mov
loope
mov
ljmp
add
dec
push
cld
cs
mov
mov
mov
hlt
or
call
inc
pusha
pop
fcoms
push
sahf
pop
pop
adc
xchg
push
icebp
push
add
je
or
add
inc
out
in
es
add
xchg
adc
dec
push
jbe
out
call
pop
push
mov
rorl
pushf
sbb
loopne
subb
pop
jp
frstor
icebp
iret
std
cmp
loope
imulb
pop
push
mov
cld
jbe
movsb
test
push
adc
jbe
test
cmpsl
lock
add
pop
and
xor
sbb
push
shll
loope
fdivr
mov
jp
sub
xor
loope
add
fsubr
or
ss
cmp
cli
cmp
rcl
xchg
leave
or
dec
aam
dec
push
fcoms
ss
add
xchg
xor
mov
lret
test
jb
mov
icebp
aad
shrb
shl
or
call
outsb
mov
push
fisttpl
cltd
sti
inc
sub
cs
pop
pop
or
adc
pop
fdivrp
aaa
mov
push
jmp
mov
rolb
inc
add
sub
popf
inc
imul
dec
xchg
call
incb
push
pop
mov
adc
mov
mov
shlb
adc
clc
cmpsb
incl
push
movsl
sahf
adc
adc
js
aas
cmpb
push
inc
jbe
mov
cmc
loopne
je
mov
pop
in
push
fdivr
rclb
push
sbb
inc
movl
aaa
xor
add
lock
adc
js
int3
lods
hlt
push
pop
lods
pop
shll
pop
mov
sub
cs
jno
adc
cmp
lock
xchg
inc
push
ret
mov
enter
scas
hlt
jmp
aad
fwait
es
lret
push
cs
in
mov
add
lea
pop
mov
dec
lock
push
adc
ret
lea
and
cmp
nop
pop
pop
shlb
rol
leave
add
mov
addr16
daa
lret
fidivl
aam
mov
dec
mov
in
push
mov
or
loopne
xor
fwait
jb
sub
cwtl
incl
aam
and
push
lock
or
sbb
mov
add
jmp
jl
sub
jg
dec
js
add
add
nop
and
lods
mov
dec
out
dec
xor
in
and
lea
aas
dec
adc
xchg
imul
shll
clc
add
in
and
pushf
lods
incl
adc
add
test
loop
inc
push
lret
push
js
and
sbb
mov
cmpsb
xchg
mov
ret
xchg
push
sbb
addr16
pusha
ret
lea
mov
jbe
ljmp
fsubrl
cmp
add
std
and
in
mov
shrl
pop
sbb
push
push
mov
inc
dec
js
xlat
cmpsl
loopne
mov
fstl
jmp
or
xor
pop
add
mov
or
jb
push
rorb
mov
insb
ss
ret
sbb
xor
icebp
ret
sub
rolb
cmp
push
push
mov
ljmp
and
lret
mov
bound
add
mov
inc
scas
fs
std
in
dec
inc
adc
or
dec
sbb
push
or
decb
mov
adc
push
dec
sub
push
sbb
adc
mov
push
jns
dec
xorb
mov
mov
aaa
lods
dec
push
leave
rorb
repnz
mov
and
lock
je
hlt
lods
pop
shr
and
mov
and
push
mov
mov
bswap
enter
lock
push
jge
dec
inc
adc
xor
sbb
in
call
or
jmp
imul
bound
sbb
push
fstpt
pop
es
pop
adc
sbb
add
or
repz
mov
cs
sub
cwtl
inc
dec
mov
movsb
add
sub
leave
out
or
inc
das
pusha
sub
aaa
pop
or
in
dec
add
push
ljmp
sbb
ljmp
push
push
sub
es
jo
push
dec
aad
outsb
push
lock
fmull
cld
dec
inc
mov
mov
outsb
mov
shlb
sbb
add
dec
ret
xchg
sbb
fcompl
mov
inc
dec
add
sub
and
push
dec
add
subb
sbb
mov
shlb
xchg
adc
jbe
mov
je
je
les
xchg
push
lods
lods
sbb
loopne
ljmp
sbb
and
in
filds
incl
pop
dec
add
add
shlb
sub
push
cltd
shrb
imul
add
push
gs
sbb
mov
push
les
imul
xchg
jle
sbb
lcall
xor
stos
test
pop
sub
push
enter
das
inc
adc
push
pushf
imul
sub
mov
mov
inc
ret
and
mov
jne
add
in
lcall
ficoms
pop
popf
xchg
pop
lds
dec
mov
insb
push
cmpsb
call
add
and
push
jp
movsb
xchg
mov
fcoms
es
outsl
push
sahf
push
adc
or
or
push
mov
mov
out
sbb
es
jbe
insb
mov
inc
jp
mov
push
pusha
and
sbb
sub
add
push
and
ja
dec
mov
cltd
shlb
or
push
adc
cmpsb
fdivl
pop
lods
std
std
add
push
add
inc
jmp
push
pop
add
fmull
and
and
or
stos
sub
or
scas
pop
popf
lret
icebp
fistl
fidivrl
ret
or
int3
loope
pusha
loop
sahf
ret
cmp
sub
mov
push
fmuls
js
or
xor
mov
mov
dec
mov
mov
adc
into
lock
xor
xor
or
into
and
cwtl
shlb
add
add
xchg
jmp
xor
inc
xor
push
lock
lcall
inc
cmpsl
or
push
push
pusha
clc
es
and
xchg
cmp
stos
mov
pop
inc
test
lea
mov
and
mov
inc
mov
cld
pop
je
sub
mov
loope
sti
add
sahf
sub
neg
add
test
adc
fadd
inc
add
std
sbbl
xchg
xchg
xchg
xchg
shrb
cld
jle
adc
into
je
rcrl
sbb
frstor
mov
outsb
fisubl
or
cmp
jb
cmp
clc
cmp
dec
std
or
xor
add
or
inc
xor
sub
cmpsl
sub
add
in
iret
and
or
cli
xorb
adc
mov
jbe
bound
sub
data16
add
pop
push
movsl
mov
mov
inc
hlt
xlat
adc
cld
cmp
fcmove
inc
push
inc
test
sbb
aam
sbb
mov
cwtl
loopne
mov
adc
inc
xor
push
push
jp
mov
add
cmp
sbb
inc
jmp
xchg
rolb
lcall
clc
jp
mov
and
push
ret
mov
aas
inc
pop
inc
mov
xchg
pusha
mov
into
adcb
lcall
push
adc
ret
mov
popa
jl
or
sbb
shlb
add
xchg
lods
xor
fdivrp
or
ret
mov
pop
mov
cld
jne
ljmp
ficoml
mov
subl
add
and
sub
test
and
movsb
pop
fs
sbb
pop
cmpsl
mov
divl
add
lods
inc
adc
adc
mov
sar
or
pop
push
jne
ss
xor
xchg
test
clc
clc
in
xor
mov
push
lret
and
xchg
mov
pop
sub
pop
mov
scas
dec
and
cmp
aam
add
in
cld
lock
adc
dec
jle
int3
in
nop
popl
lea
data16
in
push
mov
loopne
call
lret
xchg
or
fsubs
ret
stos
pusha
push
sbb
and
fs
mov
jmp
in
cmp
ds
add
mov
sub
cmp
daa
pop
sbb
jne
cmpsb
or
cmp
add
call
cmp
cwtl
xchg
cmp
std
sbb
pusha
divl
icebp
js
adc
dec
add
inc
mov
aaa
sbb
or
pop
add
test
push
dec
int3
gs
roll
into
or
out
mov
and
outsb
push
fs
mov
rcrb
jne
mov
addb
or
push
mov
xor
nop
insb
aam
outsb
cmpsb
mov
mov
push
rcl
xor
jbe
je
add
push
test
mov
inc
call
xchg
test
xorl
je
fsubrs
inc
inc
dec
loopne
fistpl
sub
sbb
add
out
mov
jbe
lahf
cmp
push
enter
shll
in
test
mov
sbb
adc
add
dec
mull
push
pushf
daa
or
call
and
call
icebp
push
jg
cld
test
fiaddl
adc
sub
call
cld
inc
ffreep
popa
xor
push
mov
clc
pop
or
cld
mov
orb
out
repnz
nop
or
pop
dec
add
sub
xorl
adc
sbb
push
insl
xchg
inc
es
sarb
loopne
ret
movsb
jp
add
inc
inc
push
xchg
enter
push
push
pushf
pop
test
roll
gs
adc
jmp
cmp
test
data16
and
add
or
test
or
cmp
push
fs
mov
dec
dec
jle
push
push
sbb
and
adc
xabort
ret
jne
gs
idivl
clc
cmp
sub
inc
aas
ud0
je
inc
pop
and
test
xor
loopne
je
cmp
loopne
cmp
iret
push
adc
mov
lcall
push
hlt
mov
mov
push
ljmp
test
sub
adc
lret
cmp
mov
and
aaa
mov
movsl
mov
fsts
push
dec
pop
ret
adc
lcall
lret
cmp
add
or
or
pop
sbb
insb
sbb
dec
push
push
inc
mov
pop
cli
sub
xor
in
aam
outsl
add
aas
js
dec
mov
test
and
jmp
movsl
inc
loop
push
popf
add
add
inc
inc
jl
call
lcall
cmp
push
and
cltd
lret
enter
imul
pusha
aaa
inc
xor
and
mov
movb
hlt
in
mov
jmp
adc
js
rcrb
imul
jle
mov
mov
push
add
mov
pop
push
fisubrl
jle
xchg
loopne
mov
sub
jmp
pushf
inc
pop
inc
xlat
pop
insb
lret
mov
add
mov
pop
dec
jo
push
data16
testb
fsubrs
gs
mov
jo
dec
filds
pop
mov
ret
inc
lods
mov
pushf
sub
dec
push
clc
loope
movups
mov
mov
mov
sbb
mov
sub
push
test
or
lods
jg
frstor
test
dec
mov
inc
mov
jb
call
nop
push
popf
xor
insl
push
sub
call
add
incl
dec
and
cmp
push
out
adc
ss
clc
fs
sar
mov
pop
xor
clc
mov
sub
lea
mov
mov
mov
adc
mov
mov
push
mov
cmpb
xor
popa
mov
mov
jge
loopne
out
call
push
mov
ljmp
push
push
sbb
outsb
test
sbb
sub
ss
and
inc
stc
or
mov
dec
dec
cld
mov
xchg
and
mov
inc
and
cmp
punpckhdq
or
test
inc
repnz
dec
imul
pminub
push
andl
fstpt
fdivl
dec
cwtl
mov
sub
movsb
push
loopne
sub
add
in
push
sbb
push
or
mov
fdivrl
sahf
inc
xor
test
mov
decl
inc
fidivl
sbb
je
dec
xchg
aaa
cli
push
dec
jmp
jne
mov
adc
bound
jnp
sub
mov
lea
or
mov
sub
and
enter
adc
jo
sarb
sbb
push
jne
and
sti
xchg
je
in
pop
addb
inc
or
jge
out
jne
pop
addl
stos
or
jne
mov
sbb
mov
inc
clc
decb
pop
aam
push
dec
mov
push
xchg
shlb
inc
push
mov
add
mov
or
dec
ret
enter
mov
leave
push
imul
mov
faddl
pop
lods
push
les
push
clc
jbe
mov
dec
es
scas
fdivp
popa
loope
jne
inc
xor
decb
je
mov
or
and
rcr
mov
add
aam
add
dec
adcl
and
lock
or
jl
add
add
and
and
cwtl
add
cmp
lock
inc
std
test
jns
les
subb
mov
and
loope
incb
lret
int
xor
dec
adc
fs
and
inc
push
jne
ret
dec
fisubl
ret
pop
or
xor
jg
or
decl
inc
push
movsb
dec
sub
out
mov
jle
fstps
adc
inc
shrb
cld
inc
fidivs
clc
inc
je
inc
arpl
mov
sbb
xor
add
das
lods
sub
ds
mov
mov
rol
test
add
pop
movsl
mov
cmp
and
and
inc
fcom
or
xor
and
mov
sar
cli
lret
and
add
fisttpl
add
gs
mov
lock
ret
pusha
mov
inc
jo
out
cld
pop
jno
dec
mov
sub
adc
mov
lods
and
fcomp
mov
pop
inc
lea
faddp
fadd
aam
mov
lcall
mov
je
inc
add
jecxz
adc
push
test
mov
dec
nop
mov
and
mov
lcall
popa
rol
jge
adc
test
jne
and
inc
cmp
shr
add
inc
mov
sbb
sti
aam
add
xor
int3
mov
movsb
mov
push
dec
daa
sbb
mov
adcl
ret
imul
push
cmpb
push
test
push
shrl
lock
inc
jb
mov
out
lea
cmp
test
pop
dec
imul
imulb
outsl
jo
cmp
fcoms
nop
mov
sbb
sbb
mov
push
jo
test
add
je
xchg
jno
dec
push
cwtl
clc
addr16
xchg
push
rorl
movsb
push
stc
shlb
cs
test
inc
xor
divb
orl
mov
mov
jmp
add
jno
sbb
mov
aad
testb
inc
xchg
cmpsb
and
mov
pushl
push
test
ret
mov
jne
mov
add
jmp
mov
inc
jmp
lret
mov
xor
lea
pop
and
sbb
aaa
push
in
lea
ljmp
loope
xchg
gs
lret
adc
nop
je
adc
inc
hlt
call
mov
je
pop
gs
es
add
mov
or
inc
cmp
sbb
bound
je
pop
cmp
rolb
icebp
aad
inc
xor
gs
cld
mov
clc
jg
lock
inc
push
mov
xchg
adc
mov
dec
bound
je
xor
stos
aad
mov
sar
jno
jp
es
inc
jg
shll
aaa
dec
mov
divb
mov
out
ud2
push
jmp
clc
add
pop
enter
push
in
mov
pop
outsl
imul
mov
fdivrp
push
pop
je
dec
add
push
out
pop
pop
or
dec
xor
mov
aam
mov
lods
inc
sub
inc
cli
push
shll
loopne
adc
add
dec
lahf
jo
std
mov
xor
hlt
or
push
push
pop
adc
inc
clc
add
xorb
push
cmp
lret
out
sub
testb
sbb
push
cs
lea
stos
cmp
pop
xchg
jle
xor
cld
push
cmpsb
int3
adc
ret
dec
dec
mov
xchg
push
mov
xchg
mov
cmp
movsl
pushf
push
cmp
dec
jo
add
faddl
add
lods
shrl
pop
insl
sti
pop
push
push
pop
mov
popf
xor
pop
sub
ds
popf
ret
xor
mov
xor
inc
cli
mov
mov
fdivrp
in
fmuls
mov
inc
in
jbe
shll
rorb
jmp
jle
hlt
jge
and
mov
mov
adc
test
enter
in
jb
inc
sbb
movsb
xor
clc
xchg
and
not
scas
inc
test
cwtl
je
push
cmp
inc
sahf
dec
jp
push
repnz
cmp
xorl
dec
popf
and
mov
loop
sub
and
ja
jle
pop
lea
and
dec
decl
in
push
jmp
mov
xor
fs
nop
sub
push
sbb
lcall
adc
add
in
fbstp
push
lcall
push
fcomi
data16
rolb
or
int3
jmp
sub
call
mov
lods
and
add
lea
adc
fnstcw
mov
cli
sbb
xor
negl
mov
xor
es
and
push
es
adc
cli
shrb
inc
fmull
adc
aas
out
add
fdivs
sbb
jno
mov
es
inc
push
cmp
mov
mov
pop
clc
pop
jne
pop
mov
or
sbb
iret
jecxz
cld
mov
mov
pop
mov
push
jmp
cmp
mov
les
aad
pop
subl
xor
inc
jb
call
inc
scas
push
push
jmp
hlt
pavgb
pop
push
inc
and
fwait
xchg
mov
test
sub
outsb
sbb
lods
scas
cli
sahf
mov
cmp
mov
mov
sbb
cmp
mov
test
lcall
pop
popf
lea
jae
mov
out
inc
in
push
bound
add
out
or
outsb
mov
or
mov
stos
test
xor
jnp
push
mov
mov
push
xchg
push
jmp
or
dec
jp
iret
test
pop
dec
lret
inc
rol
pop
mov
add
lea
inc
mov
inc
mov
push
mov
nop
gs
adcl
jns
mov
push
inc
pop
cmp
pop
cmp
std
add
lcall
loop
xlat
adc
mov
scas
xchg
add
gs
xchg
ds
sbb
test
xchg
xor
das
aam
addr16
popa
jge
into
aaa
jl
clc
inc
jecxz
push
mov
xor
or
jge
ret
into
in
jae
ss
movsl
clc
mov
push
call
push
dec
pop
aam
insl
xor
clc
xor
adc
cld
stos
jg
mov
cmpsb
inc
xor
out
shl
mov
push
ror
mov
cli
das
add
adc
lret
or
push
test
jecxz
mov
outsb
es
rclb
jo
movsl
test
dec
dec
add
and
out
icebp
mov
outsb
sti
loop
sub
cli
jmp
cmp
idiv
lahf
xor
nop
or
ret
mov
nop
dec
adc
push
loopne
jl
loop
test
push
xchg
pop
push
aaa
decl
mov
mov
mov
loopne
xor
inc
jl
fldcw
les
pop
incl
inc
inc
mov
add
dec
or
sarl
push
cmpb
ret
mov
lea
xor
jge
mov
cld
nop
sbb
ret
jge
rcrb
mov
sahf
pusha
ds
add
add
and
decb
add
push
mov
adc
cmp
cmp
outsl
inc
push
shll
push
inc
adc
and
pop
jl
lea
enter
lods
stos
call
xor
lods
push
test
push
sub
add
adc
lods
push
mov
jne
inc
rcrb
xchg
mov
sbb
and
mov
pop
inc
mov
add
rcll
dec
add
inc
mov
jo
repz
mov
test
push
xchg
xchg
or
sub
and
sbb
jle
lcall
bound
cld
jmp
insl
pop
in
xor
xor
xor
nop
or
mov
xchg
fdivl
and
vpunpcklbw
fs
cld
mov
nop
daa
pop
push
cmp
or
add
dec
adc
push
arpl
push
cmp
mov
push
cld
movsb
xor
int3
fimuls
mov
sarl
or
push
mov
mov
jne
mov
dec
mov
rcrb
add
inc
xchg
shlb
enter
ret
xor
mov
in
adc
sub
sbb
jmp
mov
sbb
aad
lret
dec
stos
add
mov
or
inc
mov
push
mov
outsb
push
xor
inc
or
or
mov
je
push
js
push
adc
xor
jno
lea
mov
push
or
cmpb
and
xor
mov
dec
push
push
push
cmp
dec
cmp
or
sahf
adc
stos
xchg
hlt
cmp
cli
cmp
mov
push
inc
and
push
add
add
sbb
dec
pop
rol
mov
jne
jl
mov
hlt
xor
and
sub
enter
call
add
push
pop
test
and
dec
jmp
sub
filds
popa
mov
mov
fiadds
or
mov
add
fbstp
test
push
add
mov
sbb
push
pop
jae
ljmp
lods
sbb
mov
cmp
loope
test
jo
mov
call
cmp
hlt
add
add
sbb
popa
call
push
orl
rorb
xchg
mov
adc
add
add
adc
pop
jns
cwtl
pop
or
jle
rorb
cli
xor
int3
mov
in
pop
pop
cmove
sbb
add
mov
add
cmpsb
jno
inc
sub
mov
dec
das
cwtl
xor
add
lods
jp
jb
push
test
fstpt
je
test
movlps
addb
inc
imul
movsb
jne
andl
enter
ss
mov
aad
data16
adc
xchg
adc
inc
gs
sbb
push
xorb
or
lock
add
cld
sbb
hlt
outsb
int3
sub
and
push
push
and
sub
ficoms
sub
scas
and
push
or
dec
int
es
cli
mov
mov
dec
test
pop
rclb
sub
or
cmpsl
lds
adc
mov
test
push
or
int
lock
stc
dec
mov
or
lahf
add
mov
dec
cmp
adc
jns
mov
fdivp
pushf
jmp
cmc
push
loopne
mov
xor
mov
loopne
loopne
sbb
rcrb
or
test
aas
or
sub
or
out
xor
lods
add
sbb
mov
push
insl
call
fistpll
cs
add
jb
sbb
push
add
or
cmp
data16
xchg
out
add
pop
testb
jle
sub
sbb
and
sub
dec
dec
aaa
adc
es
add
hlt
pop
sbb
push
dec
mov
jmp
add
in
xor
je
push
xchg
dec
inc
ljmp
jmp
sbb
cld
jnp
cmp
pmuludq
das
test
dec
jge
pop
lea
jle
rcrb
rcrb
pop
xchg
lret
lret
daa
jmp
movsl
or
test
add
xchg
mov
jne
push
or
lods
inc
cld
stos
das
dec
inc
sar
movsl
jecxz
loopne
sbb
in
incl
out
xor
cmp
in
push
mov
data16
aam
push
mov
sub
scas
loop
add
test
loopne
sbb
fsubrs
adc
sub
dec
jge
or
enter
mov
fdivr
sub
mov
xchg
inc
jnp
incl
xor
cs
add
jne
xchg
and
icebp
cmp
shlb
mov
inc
adc
add
fs
xor
test
add
xchg
movsb
into
daa
push
icebp
push
xor
mov
inc
xchg
hlt
cmp
inc
loopne,pn
dec
insb
pop
rclb
mov
clc
and
andb
inc
div
mov
mov
stc
dec
sbb
xor
mov
push
test
and
mov
add
popl
test
fisttpl
xchg
cmp
and
add
pop
icebp
xor
adc
lret
jae
ds
adc
test
mov
mov
xor
add
dec
les
xor
popl
int3
dec
xchg
adc
adc
and
add
cmp
hlt
xorl
mov
loope
mov
or
std
or
or
cmc
mov
cmp
test
sub
xor
mov
in
dec
cmp
add
and
push
ret
outsl
out
es
fsts
out
jmp
es
xchg
add
push
jo
mov
pop
aam
adcb
test
mov
pop
jo,pn
scas
jne
in
aam
pop
enter
add
add
mov
test
mov
push
or
mov
pop
les
rol
mov
inc
pop
lock
push
test
stos
jge
push
clc
xchg
dec
sar
das
mov
push
inc
negb
xor
or
aaa
cmp
test
std
xor
jp
sbb
add
push
stos
push
pop
jne
mov
push
test
test
lods
imul
fisubrl
notb
push
dec
test
or
repnz
xchg
jecxz
dec
popf
cmpsb
xchg
loopne
inc
pop
sub
and
push
clc
jle
push
jge
jle
sbbb
xchg
int3
nop
shlb
dec
popf
pop
out
lods
sub
rcrb
add
sub
xor
mov
pop
js
loopne
aaa
push
popa
or
push
mov
adc
leave
rolb
call
mov
in
cmp
mov
jg
mov
jl
xlat
dec
add
decb
pop
leave
icebp
push
mov
jbe
jmp
inc
out
xchg
lea
loope
dec
dec
and
out
fmull
jp
lds
les
and
mov
stos
sbb
loopne
mov
or
and
es
xchg
pop
and
pop
decl
lock
push
jns
inc
mov
mov
pop
fdivrp
push
add
jg
mov
pusha
dec
adc
int3
mov
loopne
cmp
lret
test
or
cmp
xchg
js
push
mov
sub
repz
push
pop
fs
push
hlt
add
scas
pop
push
in
mov
or
or
mov
clc
jns
rcll
inc
mov
addr16
repnz
add
sar
fs
jl
dec
add
xchg
dec
dec
push
rol
lcall
lock
sbb
sbb
adc
nop
sub
lcall
loop
adc
pop
or
cld
loopne
pop
test
inc
pop
inc
mov
outsb
inc
xor
nop
outsl
sub
and
shrb
cmp
adc
adcb
dec
test
data16
jb
rolb
test
or
insb
pop
cmc
adc
cmp
xchg
insl
pop
mov
push
pop
push
dec
add
nop
sbb
pop
les
clc
leave
decl
dec
outsl
in
lds
aam
sarb
sub
or
nopl
adc
mov
sub
push
inc
jge
sbb
ja
lea
push
push
shlb
dec
inc
fcmovb
adc
cmp
add
hlt
push
jo
lea
lock
lods
mov
dec
or
lods
mov
jp,pt
sti
xchg
fimuls
bound
lret
sbb
inc
sub
mov
jp
mov
loopne
inc
sub
jb
into
lahf
inc
jmp
lock
add
ss
aaa
imul
addb
sbb
jmp
adc
push
xor
pop
sbb
insl
in
push
popf
dec
lock
or
jno
sti
mov
sub
cs
jo
inc
scas
and
repnz
add
leave
cmp
sbb
loopne,pt
sub
int3
iret
sub
icebp
pusha
add
lock
push
int3
sub
dec
mov
jge
or
test
movsl
ljmp
jecxz
fstpt
mov
jbe
push
sub
adc
insb
test
mov
sub
test
fcoml
adc
fildl
sub
push
mov
lea
mov
add
mov
pop
es
push
mov
adc
out
clc
call
aad
inc
stos
loop
add
mov
sbb
js
add
dec
pop
sbbb
hlt
popf
jne
call
test
lods
xor
sbb
addr16
or
fwait
inc
in
pop
sub
push
mov
aad
push
ljmp
and
push
push
xchg
pop
xor
incl
sbb
test
cmp
mov
mov
test
jo
sarb
and
inc
push
lock
adcl
xor
xchg
scas
jns
nop
nop
lds
call
sti
pusha
push
arpl
aam
inc
xchg
push
push
and
repnz
bound
pop
add
hlt
push
inc
cmpsb
push
ret
aam
push
sub
outsb
sahf
stos
enter
into
push
and
fwait
jp
jle
xor
xorb
push
ljmp
add
adc
or
xor
pop
fmul
jmp
adcb
call
movsl
es
fistps
cmpsb
add
ss
sub
cmp
xor
mov
test
xor
lods
pusha
sbbl
push
fs
les
lret
leave
add
and
fiadds
sub
add
and
xor
hlt
add
pop
jb
push
cld
cmp
xor
pop
and
incl
sbb
adc
movb
data16
fistl
cmp
inc
mov
int3
call
xchg
mov
inc
cmp
outsb
push
sbb
jp
push
insl
insb
faddl
adc
adcb
outsl
push
movsb
insb
push
mov
push
arpl
mov
dec
shrb
dec
adc
lcall
mov
nop
lea
bound
aad
inc
es
dec
test
ljmp
mov
jle
mov
or
test
cmp
inc
lea
mov
push
sub
inc
std
jmp
and
out
mov
xor
xchg
out
adc
fcmovnbe
push
fadd
sbb
xchg
jno
in
popf
xor
xchg
and
sbb
push
dec
pop
int3
cmp
inc
cmp
mov
pop
pop
pop
movsb
mov
xchg
push
sbb
adc
rol
pop
push
jge
push
mulb
ss
sub
loop
pop
cli
mov
add
push
push
pop
inc
sub
je
insl
push
inc
idivl
adc
test
rcrb
shrb
mov
xchg
fadds
xor
push
push
stos
push
push
rorl
push
popa
test
repnz
subl
shll
xchg
movsl
test
pop
adc
lods
mov
mov
add
or
sub
call
adc
xchg
inc
and
sub
lea
dec
mov
ss
loopne
in
jmp
push
mov
std
mov
fwait
inc
pop
scas
cmp
sbb
cmpb
adc
fwait
sub
inc
popa
in
in
and
fwait
ja
mov
call
add
rcrb
xlat
insl
push
pop
rolb
loopne
inc
and
mov
adc
sbb
pop
test
inc
adc
push
enter
cmp
xchg
clc
insl
cltd
ficomps
and
dec
sahf
enter
enter
push
jmp
sbb
pusha
je
shll
shrb
mov
jmp
mov
arpl
xor
add
mov
or
and
fisubrl
xor
fcoms
mov
scas
jg
adc
push
push
jae
sbb
inc
sub
ljmp
mov
sbb
enter
mov
add
push
insl
dec
mov
loope
xor
sub
fdivrl
jle
inc
mov
divb
movsb
pop
jae
push
outsb
push
mov
push
in
push
push
dec
inc
jne
aam
sub
xlat
ljmp
mov
insl
push
jl
int3
cwtl
inc
adc
sub
sub
jp
jg
pop
cmc
into
or
or
sub
push
hlt
cmp
mov
mov
add
mov
jle
inc
dec
xchg
dec
push
lock
sub
jl
cmp
dec
test
xchg
faddl
jo
xor
popa
imul
inc
in
js
xor
jo
push
dec
pop
or
popa
mov
xor
mov
hlt
mov
jge
sti
rcrb
pop
out
and
scas
push
addb
pop
xchg
jle
add
adc
rorb
fmul
jg
xorb
jbe
push
sub
adc
jg
hlt
sub
addr16
pop
xorb
jo
orl
mov
cmp
pusha
test
hlt
pop
pop
xchg
adcb
xor
add
es
cmp
or
hlt
outsl
add
add
sahf
xchg
mov
mov
fwait
and
orl
pop
data16
loopne
fisubs
pusha
jo
sahf
ljmp
ret
shrd
push
ss
test
pop
sbb
jmp
test
insb
and
add
or
test
cld
mov
sbb
bndstx
repnz
loopne
mov
cmp
dec
mov
mov
mov
not
push
push
fs
mov
test
call
fwait
sub
call
movhps
dec
pushf
pusha
cmp
jmp
cld
mov
subl
jne
jb
and
out
inc
call
lods
xchg
jmp
in
jne
jnp
ljmp
push
out
xchg
add
loopne
and
sbb
adc
hlt
or
movsb
jne
lods
in
dec
push
lea
je
jns
dec
hlt
jmp
rol
pop
mov
pusha
pushf
outsb
add
mov
pop
ja
push
adc
loop
loop
dec
or
pop
test
push
ja
ret
imul
dec
inc
lock
and
jbe
call
jno
add
repnz
fdiv
sbb
cltd
add
cld
rclb
sbb
loop
icebp
or
pop
jb
sbb
jmp
ja
shrl
sbbl
inc
mov
push
je
repnz
sar
push
mov
test
pop
rcr
mov
cld
push
and
push
xor
adc
out
push
mov
mov
sub
aas
push
and
ret
sub
call
add
sub
pop
mov
dec
and
es
push
stc
outsb
inc
in
addb
mov
or
mov
jl
cmp
mov
cwtl
inc
xchg
push
aad
adc
inc
xor
cmp
xchg
dec
ret
ficoml
sub
test
sar
lods
les
pop
xor
fisttpll
pop
mov
pop
xchg
sub
mov
mov
sahf
sub
lret
xlat
pop
sar
add
add
jmp
je
adc
add
and
cmp
pop
ret
les
xor
push
jbe
loop
jl
lret
sub
adc
pop
leave
dec
or
mov
mov
jg
dec
mov
add
xchg
cmc
mov
inc
test
cmp
sbb
sbb
enter
shrb
inc
lret
rorb
dec
fs
and
lret
pop
mov
ljmp
ss
or
enter
std
imull
sarb
jae
es
cmp
imulb
scas
pop
pop
lock
call
cmp
push
push
xchg
push
or
stos
cmp
roll
std
sub
nop
das
sbb
or
je
jecxz
sbb
test
or
jo
push
push
fildl
mov
cmp
test
add
je
jge
ret
lds
push
ss
pop
or
xor
jg
push
lret
lock
pop
inc
les
cli
mov
pop
lea
cmp
out
in
add
ljmp
dec
test
andl
xor
xchg
hlt
addl
shll
pop
or
push
pusha
dec
mov
jle
push
jae
or
push
sbb
mov
and
push
jo
imul
inc
cmp
icebp
in
mov
add
xchg
shrl
rolb
pusha
pop
mov
and
mov
fwait
dec
hlt
in
cmp
or
js
test
jge
mov
xchg
fmul
cs
pop
fs
gs
cmp
xor
cmp
lds
xor
mov
sbb
xchg
dec
jmp
jo
dec
xor
imul
sbb
add
stos
out
inc
sbb
jge
lcall
push
out
jmp
into
test
lahf
pop
cld
leave
int
jle
mov
lods
and
sbb
cmp
test
push
cmp
jge
int3
test
sub
mov
adc
out
aaa
or
ss
push
and
sub
outsb
shlb
and
add
inc
cmp
xor
call
or
xlat
mov
push
in
dec
or
hlt
decl
fs
dec
inc
jmp
cmpsl
mov
adc
cmc
lock
adc
mov
mov
adc
arpl
into
sarb
pop
adc
add
adc
incb
aad
and
mov
or
jl
subl
sti
push
call
imul
je
cmp
inc
xor
or
add
mov
fmuls
dec
pop
call
adc
std
inc
dec
rorb
push
jbe
inc
rclb
bound
inc
mov
stos
push
xchg
sub
ret
inc
cli
sbb
lea
js
jmp
and
pop
les
xorl
mov
push
gs
mov
cs
dec
lock
cmpsb
push
leave
add
pop
push
push
and
xchg
call
fmuls
js
insb
jl
push
sub
cmp
jae,pn
lock
aaa
add
mov
xor
push
js
leave
sub
invd
jecxz
xor
inc
loopne
or
movsb
add
int3
xor
jo
ret
push
and
push
and
and
mov
push
add
out
insb
or
dec
or
sub
inc
push
mov
dec
popa
and
pushf
push
push
add
movsb
or
jo
insb
cmc
fsub
xor
into
jb
fsubrs
and
cmpxchg
mov
mov
subb
and
mov
and
sti
pop
arpl
cmp
dec
ficoml
xor
stc
lcall
push
and
push
test
roll
jmp
dec
adc
dec
ret
sbb
sbb
or
in
pop
int3
fists
orl
adc
scas
add
push
popa
adc
push
push
stos
mov
ds
fdiv
xchg
add
cmpsl
jnp
je
aaa
iret
lods
fsubl
sti
cmc
adc
push
mov
es
and
jle
push
rolb
push
and
xor
dec
xor
pop
es
rorl
movl
dec
mov
inc
or
orb
inc
jle
cmp
inc
inc
adc
push
sub
xchg
or
mov
pandn
testb
ss
hlt
rcrb
int3
inc
in
pop
or
je
mov
je
xchg
jo
js
test
or
nop
roll
jb
jecxz
pushf
movsb
faddl
in
push
and
test
mov
dec
jge
mov
orl
jp
ljmp
push
out
inc
adc
insb
ljmp
add
aam
and
push
aaa
adc
mov
mov
jmp
gs
ljmp
es
cmp
shr
and
lods
in
jp
fstpt
sub
cmp
into
cwtl
push
cld
fcompl
lcall
aaa
mov
call
scas
mov
enter
and
test
je
push
xchg
ret
das
jp
mov
test
inc
fsubs
std
imul
push
mov
mov
adc
scas
out
cwtl
lock
inc
inc
dec
push
popa
xchg
sbbb
ljmp
pop
mov
scas
lods
add
sahf
push
add
insb
adc
xchg
push
cwtl
daa
add
cli
inc
aad
sbb
test
push
jl
cld
mov
rorl
or
sbb
and
bound
push
push
and
decb
ret
and
scas
push
jmp
or
inc
push
pop
or
test
inc
jmp
xor
add
pop
add
rorb
add
or
and
out
pop
and
fs
mov
fists
and
inc
inc
leave
xor
dec
xor
jo
inc
push
es
fs
or
imul
test
inc
shll
cmp
push
mov
test
shrb
xor
cmp
sbb
pop
and
movl
lock
mov
inc
add
lods
test
loope
loop
js
mov
inc
shrb
sub
add
sub
lock
mov
inc
cmpsl
jmp
prefetch
cmp
add
cmc
ret
cmp
and
mull
adc
inc
cmp
add
repnz
pusha
lock
leave
nop
fs
ud0
dec
sbb
xchg
jo
adc
inc
jg
das
adc
fcmovb
mov
xor
push
mov
dec
inc
add
add
dec
mov
clc
and
sub
or
fsubs
icebp
dec
sub
test
and
push
adc
and
xchg
mov
xchg
or
inc
add
push
push
ret
pop
idiv
fs
push
push
xor
gs
add
clc
push
ret
pop
jg
cmp
in
cmp
xchg
test
insl
push
test
jp
mov
push
movsb
hlt
bound
ja
mov
sti
pop
cmp
ficompl
fcmovnu
das
push
mov
pop
inc
push
pop
shl
or
ss
and
xchg
int3
movsb
xchg
and
dec
pop
rolb
xor
daa
pop
add
sbb
mov
sahf
test
sbb
popa
xchg
xchg
and
fs
loopne
pop
mov
cmp
rolb
or
push
jge
ficoms
push
cld
ss
cpuid
fidivs
ljmp
xlat
or
ja
add
call
inc
inc
ret
xchg
dec
inc
mov
jne
push
jle
adc
mov
push
mov
mov
mov
aam
insb
je
jbe
sbb
xchg
cmp
sub
insl
ds
mov
clc
lods
les
push
push
cltd
sarb
push
xchg
fs
adcl
int
mov
enter
subb
or
insb
or
jmp
push
and
add
out
add
fistpl
push
cld
jne
sbb
adc
popa
cmp
popa
add
ss
aas
rcl
call
xor
int3
in
push
push
out
ret
dec
icebp
pushf
inc
call
ret
inc
clc
mov
rcrb
scas
test
mov
mov
loopne
mov
ret
push
xor
or
stos
and
xor
cmp
jecxz
push
mov
mov
pop
or
jo
jb
jmp
shl
or
icebp
inc
pusha
jno
mov
in
adc
mov
add
repnz
adc
mov
inc
out
xchg
stos
mov
jge
loope
test
adc
or
in
dec
xor
decl
mov
add
jne
vfmsubadd132pd
sub
ret
mov
fmuls
fmull
lret
mov
les
insl
test
gs
cld
lods
fcoms
inc
jb
xchg
lds
adc
push
sbbl
lds
push
fdivrl
push
add
notb
sub
cs
inc
repz
add
sbb
mov
push
push
das
ss
lcall
icebp
fisttpl
cmpsb
bound
or
repnz
push
in
xor
inc
rcrb
movb
incl
in
xorl
add
fsubs
mov
gs
int
ret
mov
sbb
cmp
loopne
inc
or
loopne
and
cli
pop
aam
incl
sub
sahf
cld
movl
mov
sub
push
xchg
cs
pusha
lahf
mov
sub
hlt
pop
fmuls
push
inc
fiaddl
cwtl
xchg
mov
cmp
push
cmp
test
subb
mov
ret
jo
pop
mov
pop
test
xor
into
jmp
push
sahf
ss
popf
les
or
bound
mov
loope
cld
pushf
test
jmp
mov
and
sub
mov
mov
sbb
test
clc
sub
inc
xor
sbb
dec
mov
add
call
loopne
fdivs
or
mov
jo
sub
mov
test
and
cmp
test
ficomps
jno
sub
inc
push
add
incl
test
and
cmp
fisttpl
call
push
cmp
call
pop
les
or
adc
push
cld
add
pop
imul
or
sub
xor
imul
sub
lret
inc
fstpt
push
dec
xor
dec
xchg
js
and
ret
and
je
gs
fsubl
fldt
fsubl
dec
push
movb
sub
mov
push
jnp
add
xchg
xor
jbe
sti
stos
insl
mov
push
xor
fwait
inc
popf
mov
push
or
sub
aam
and
xchg
movsb
hlt
jb
or
ficoml
dec
enter
movsl
mov
and
insl
je
cmp
cmp
jbe
sarl
cmp
add
cmp
test
push
mov
xchg
or
mov
aam
stc
mov
mov
jl
pop
xchg
lock
pop
push
aaa
jl
nop
jecxz
lea
sbb
adc
or
xor
movsl
push
add
and
and
xchg
inc
xchg
add
sbb
or
xor
jmp
or
add
inc
add
ss
adc
cmc
mov
jecxz
sbbb
lock
adc
jbe
movsl
jno
mov
nop
sub
incb
dec
pop
mov
jns
outsl
mov
adc
add
push
add
nop
loopne
lea
in
sbbb
push
rorb
ficoms
jbe
or
lcall
lock
jo
aam
push
or
xchg
ret
decb
mov
xor
mov
mov
or
fsubrp
test
inc
push
add
andb
pop
pop
lock
jl
notb
mov
mov
aas
sbb
dec
loopne
sahf
ljmp
movsl
insb
cmpsb
test
decb
pop
or
mulb
push
pop
cld
sbb
inc
pop
adc
loopne
bound
test
or
mov
push
loopne
popa
mov
ds
or
ds
xchg
sub
dec
inc
into
jno
les
loop
and
rcrb
iret
decl
cmp
gs
add
xchg
add
ss
pushf
push
insl
mov
mov
pushf
and
aam
cwtl
sbb
jbe
fsubrs
rorb
adc
mov
js
add
xchg
mov
aam
lret
sub
inc
push
rcrl
cwtl
ds
sbbb
adc
push
rcrb
lock
pop
push
add
bound
mov
dec
es
inc
pusha
jne
sbb
adc
outsl
mov
sub
popf
sub
insl
xchg
pusha
fisttpl
sbb
sbb
es
inc
test
add
pop
lea
mov
and
jp
call
cmp
mov
sub
inc
test
lock
aam
fdivrl
mov
cmp
xor
push
mov
ja
in
mov
adc
addb
jge
sbb
push
call
rol
jl
icebp
insb
leave
push
add
dec
stos
fimull
scas
js
mov
ret
scas
add
push
push
loopne
pop
or
mov
jne
add
or
and
mov
push
push
adc
jo
inc
nop
enter
sbb
je
adc
shlb
cwtl
mov
call
inc
push
jbe
movsl
and
pushf
cmp
sub
dec
scas
test
mov
enter
mov
sbb
pop
cs
or
mov
sub
push
cli
lods
mov
inc
adc
sbb
sbb
negb
mov
xchg
icebp
and
jo
push
pop
lock
jle
push
dec
xor
xor
int
std
push
fprem
cmc
jae
out
or
push
adc
cli
insb
adc
nop
xchg
adc
mov
ret
sbb
jae
or
adc
or
add
sub
add
cwtl
xchg
pop
lret
sub
loop
aaa
sbb
or
in
pop
hlt
sub
push
leave
cmp
mov
inc
push
mov
push
pushf
les
js
lock
adc
xor
mov
mov
pop
das
lods
outsb
loopne
out
mov
cld
jmp
inc
cld
jle
call
add
fnstcw
mov
outsl
pop
in
mov
fcomps
jl
lock
loope
loop
rol
mov
mov
cmp
imul
xor
inc
and
js
cli
decl
inc
das
cmp
mov
stc
mul
jg
das
int3
mov
mov
loop
imul
cmp
outsb
enter
sahf
pushf
jbe
or
jno
and
add
rol
mov
xchg
hlt
sbb
in
jo
ja
xorl
dec
jl
or
rolb
push
dec
in
mov
dec
jmp
add
and
jle
mov
pushf
in
push
call
jl
cmp
push
and
je,pt
or
dec
jge
in
xor
mov
pop
add
jp
sbb
shll
sbb
sbb
flds
add
push
and
add
dec
enter
push
adc
std
dec
pop
jnp
xchg
push
in
adc
je
inc
sub
pop
lret
jb
test
repnz
cli
stos
test
cmp
pop
xor
insl
dec
data16
lcall
sub
lods
push
daa
data16
adc
icebp
outsb
sbb
mov
mov
and
inc
loopne
std
xchg
mov
aam
nop
lock
les
cld
add
xlat
push
mov
dec
push
es
push
mov
movsl
push
lock
push
nop
jo
mov
inc
pop
mov
pop
inc
out
cmp
cwtl
pop
dec
lret
in
sbb
imul
dec
dec
xor
adc
cmp
push
pop
mov
cli
icebp
insl
call
mov
jle
add
pushl
jbe
movsb
pusha
mov
fmuls
cmp
push
xor
pop
das
or
nop
mov
xchg
add
sbb
out
cmpl
call
dec
xor
je
inc
sub
stos
call
addr16
cmp
mov
push
mov
inc
es
das
mov
push
push
sub
call
adc
pushf
inc
mov
fcom
mov
test
jbe
push
and
inc
cwtl
ljmp
je
loopne
andb
leave
sub
je
sub
cwtl
sbb
or
inc
inc
add
into
mov
sbbb
cli
push
cmp
das
fsubr
or
out
decb
add
push
xor
das
add
jl
cmp
lea
xchg
cld
shlb
pop
xor
cmp
inc
rorl
stos
push
icebp
push
aam
dec
movsb
fcoml
jmp
pop
sub
icebp
jb
sub
jne
test
dec
fnsave
fs
fdivrs
add
push
inc
shlb
ss
sub
shrb
mov
adc
xchg
jg
popa
adc
loope
shl
je
xchg
xchg
add
clc
clc
inc
add
cmp
ficoms
and
aad
cmp
push
add
xor
movsb
rclb
push
verr
dec
cli
mov
fwait
sub
sbb
insl
sbb
mov
mov
pop
xor
and
inc
dec
ret
aaa
cmpsb
loope
divl
test
out
xchg
lcall
jmp
pop
push
test
shll
rcll
sarl
add
aam
insb
xchg
sub
test
prefetchw
mov
pop
push
roll
cmp
cmp
or
inc
jmp
add
lds
movsb
cltd
push
mov
mov
pop
cld
xlat
mov
dec
xchg
jl
call
ljmp
xor
jg
pop
xsavec
and
ret
push
dec
cmp
sahf
mov
mov
testl
add
add
popf
mov
fsubrp
xor
idivl
add
fmuls
mov
fs
xchg
jo
pop
sbb
not
fiadds
mov
jne
jge
dec
sbb
sbb
insl
inc
inc
inc
adc
les
insb
ljmp
or
adc
pushf
xor
out
mov
lea
sub
mov
ucomiss
call
push
cmpsb
icebp
mov
ret
in
pusha
ljmp
cmpsl
mov
int
jge
pop
pop
and
imul
popa
addr16
mov
mov
int3
add
push
test
cs
push
xchg
bound
ss
xor
cli
in
jmp
insb
cmp
xorl
add
testb
scas
inc
push
es
and
mov
movmskps
inc
int
je
sbb
and
push
and
adc
arpl
push
jo
out
out
inc
mov
or
ds
les
or
sbb
pop
pop
sbb
dec
push
push
in
gs
inc
lock
xor
mov
ss
inc
or
adc
push
test
or
cld
or
dec
sub
ret
mov
and
sbb
cmc
xchg
ss
mov
cmpsb
jmp
inc
jl
lret
loope
mov
sbb
xor
push
push
into
pop
cmc
outsl
mov
sti
or
jb
insb
imul
push
push
lret
add
subl
call
pop
ret
cmpsl
inc
add
rolb
cmp
dec
mov
jbe
dec
mov
gs
pop
jno
or
repnz
sub
inc
pusha
dec
xor
test
pop
ret
inc
mov
loope,pn
aam
ss
push
adc
sub
cmp
or
rorb
cmpsb
mov
loop
fidivrl
mov
mov
or
mov
lods
mov
ljmp
add
ljmp
adc
mov
or
mov
loope
movsb
add
sbb
cmp
in
movsb
aad
das
push
mov
jns
cmpsb
add
test
pop
mov
inc
inc
xchg
jl
xchg
cmpb
sbb
or
push
xor
push
and
xchg
loop
scas
pushf
je
decl
shlb
scas
adcl
mov
push
xlat
or
rclb
push
js
sahf
pop
call
lods
cmpsb
or
js
dec
idivl
inc
mov
adc
pop
orb
push
int3
jo
and
clc
faddp
adc
and
push
shrb
movsl
lret
fdivr
std
inc
xchg
mov
push
scas
bound
in
test
test
test
push
or
cmp
ret
clc
jmp
push
dec
inc
popf
fstl
dec
js
push
add
add
movsb
lds
adc
fadd
das
rorb
cld
push
lds
cmp
jne
pop
and
mov
mov
fcmovu
ljmp
pop
xchg
mov
sahf
or
mov
es
push
shr
mov
jmp
in
inc
stc
decl
add
scas
inc
xchg
mov
ret
fistl
add
sub
test
pop
lea
push
jmp
xchg
pop
stos
ret
cmc
fs
push
jo
push
je
cmp
int3
icebp
jbe
add
ljmp
jl
dec
pop
enter
test
and
test
js
icebp
sub
ret
mov
add
adc
jbe
rclb
mov
jge
pop
cltd
jge
add
cmp
inc
mov
loopne
lea
sbb
lea
nop
pushf
adc
mov
add
add
xor
test
jmp
loopne
xchg
sub
lea
fadd
in
test
jne
es
xchg
enter
mov
jne
sbb
jle
dec
inc
aam
jnp
orb
xor
hlt
add
test
test
push
jg
sub
test
mov
cmpb
jg
or
dec
jbe
add
cmp
mov
into
and
ror
loopne
dec
jecxz
clc
mov
inc
or
mov
les
xadd
sarb
or
push
xchg
pop
fisubrs
push
cmp
andl
mov
repnz
pop
fdivs
ljmp
ret
shrb
insl
or
mov
fadds
fnsave
push
gs
xor
sahf
lods
das
rclb
sub
dec
pop
mov
sbb
xor
dec
or
push
aaa
call
mov
sbb
insl
js
or
jbe
pop
lret
push
xlat
repnz
push
pop
enter
les
cvtps2pi
add
inc
lret
shrb
ljmp
js
cmp
jne
sbb
cmpsb
pop
cwtl
xlat
mov
jge
push
mov
add
jno
dec
gs
mov
dec
faddp
xor
inc
add
lret
fldenv
mov
lcall
in
cmp
test
ret
xor
and
jb
ss
mov
lret
pop
in
test
add
xchg
pop
inc
sub
cmp
lods
push
das
mov
sbb
cmp
adc
test
pusha
popf
adc
rolb
adc
inc
cmp
push
mov
inc
and
cmp
aam
xor
lods
in
incb
inc
xor
movsl
insl
sub
mov
push
xor
mov
lock
lcall
in
add
pop
cli
mov
add
xor
xchg
je
test
dec
ljmp
push
fadds
xor
cmp
mov
lea
push
jo
ds
je
xchg
mov
mov
dec
sub
xchg
adcl
mov
jno
jo
jg
push
xchg
pmaddwd
jae,pt
stos
mov
ret
insl
sbb
jg
pop
xlat
rcll
adc
dec
xchg
or
lea
jle
sub
sti
jge
std
adc
out
and
loopne
call
push
inc
jl
adc
mov
push
cmp
test
stc
add
fidivrs
inc
adc
cmp
aam
or
add
std
cmp
push
fists
test
adc
pop
pusha
loop
mov
xchg
and
push
pop
and
mov
clc
pop
lret
dec
sti
xor
cmp
fs
mov
rorl
and
push
cwtl
fildll
adc
lods
jl
je
push
xchg
lods
add
fdivrl
ret
out
into
insb
xor
pushf
in
orb
dec
inc
aaa
jne
sbb
jl
cmc
push
clc
mov
pop
push
call
hlt
lahf
mov
sub
adc
jg
cmp
cwtl
test
cmp
cld
push
je
add
dec
xchg
les
xchg
mov
call
shrl
stc
cmp
adc
jecxz
gs
push
aaa
sbb
or
add
fwait
mov
pushf
jbe
clc
call
or
inc
bound
cmp
jbe
push
mov
jo
in
std
incb
jo
in
inc
add
sbb
or
sahf
or
inc
add
mov
and
out
pop
lock
dec
or
test
and
je
ljmp
sbb
push
mov
xor
xor
test
add
mov
rclb
jge
inc
xchg
jo
incb
in
scas
add
add
xor
or
xlat
scas
sbb
xor
pop
mov
and
mov
std
xchg
jb
mov
cld
or
push
lea
inc
lock
pop
cwtl
mov
push
push
lods
mov
or
mov
mov
outsl
mov
popf
push
push
stc
mov
sub
push
jo
and
mov
or
or
cmp
mov
popf
or
xchg
movsb
loopne
aam
mov
cvttps2pi
pusha
push
add
pminsw
call
cmp
cmp
xor
mov
popf
push
outsb
icebp
bound
xor
push
shr
pop
dec
mov
push
les
rcrb
dec
push
dec
adc
stos
test
fs
inc
cmp
aam
push
les
pop
es
rorb
fld1
dec
mov
in
aam
sub
xchg
mov
das
shrl
pop
xor
ja
fnstenv
mov
sbb
in
mov
imul
int3
push
inc
jne
or
adc
incl
ret
lcall
in
mov
out
cmpb
aas
lock
rclb
add
sub
xchg
mov
dec
push
xor
lret
adcl
je
sub
pop
negb
outsb
sub
add
call
dec
cmpsb
add
mov
dec
cli
xchg
stos
cli
jmp
sbb
in
jae
cld
rcl
xor
cmp
fiaddl
incb
pop
sahf
push
icebp
jg
push
rcrl
lahf
fists
push
jg
clc
outsl
loopne
inc
call
cmp
sbb
xchg
pushf
pushf
out
push
lahf
adcl
pop
and
mov
sub
inc
jl
popf
comiss
cmp
pop
and
cmp
aaa
pop
test
mov
aas
pop
sub
test
inc
fists
lock
aad
and
test
mov
scas
mov
mov
push
mov
adc
call
loop
mov
jge
fstl
jae
mov
mov
js
dec
add
dec
dec
lret
test
insl
fcoml
cmp
add
fs
adc
push
sub
push
enter
pop
jb
or
int3
cli
pop
sbb
mov
lret
push
aaa
add
add
pusha
jl
xchg
xlat
mov
loop
pop
sbb
jmp
mov
test
push
mov
xor
les
push
fisttps
cs
cmc
mov
and
add
aam
mov
pop
clc
out
jecxz
loopne
or
dec
cld
fs
jle
mov
pop
hlt
dec
mov
dec
push
dec
fmuls
xor
testb
fs
es
shll
mov
mov
in
jl
cmp
xor
lods
inc
sahf
mov
jg
aad
mov
imul
repnz
sahf
in
cmpl
mov
loop
mov
push
jbe
and
loope
test
shld
xor
fsubl
add
and
pop
jae
add
aaa
push
jbe
mov
loop
xor
mov
ds
or
and
jb
jbe
pop
jne
mov
dec
fs
sti
inc
orb
ret
cmp
push
push
arpl
int3
push
mov
mov
fwait
popa
jl
mov
or
out
inc
inc
push
addb
stos
adc
outsl
cmpl
cmp
mov
or
mov
loopne
dec
adc
sarb
or
pop
or
mov
mov
push
add
rolb
mov
pop
mov
jmp
add
mov
dec
fldt
push
aam
sub
pop
xlat
ret
xlat
push
push
out
add
or
mull
mov
outsb
or
xchg
sub
add
or
mov
dec
inc
adc
sbb
pop
mov
cld
mov
push
lret
push
push
or
and
lods
pop
adc
mov
xorb
xchg
cli
fists
pop
xor
push
mov
push
js
scas
scas
cmp
jg
test
or
fdiv
ljmp
or
scas
jge
imul
stos
add
or
or
cs
cmpsb
inc
dec
pop
adc
add
loope
mov
lods
test
xchg
push
and
popf
inc
adc
push
rorb
jp
test
inc
pop
mov
mov
mov
outsb
mov
add
adc
jne
ds
cmp
movsb
dec
test
pusha
inc
arpl
push
fisubs
inc
int3
xchg
call
outsb
hlt
adc
push
imul
sbb
xchg
shrb
into
lcall
push
test
jp
test
adc
shlb
jmp
inc
adc
mov
fdivrp
cmp
or
push
sbb
add
enter
cld
stc
sarb
ret
inc
mov
lret
lock
adc
adc
shrl
mov
sbb
out
and
jo
sub
jmp
sbb
push
cld
lds
stos
sti
sub
mov
mov
insb
sbb
ja
andl
jmp
jb
lock
xchg
iret
shr
push
mov
sub
mov
cmp
add
lcall
add
or
push
jbe
or
cld
add
test
aaa
daa
lock
es
loope,pn
inc
xor
adc
and
cli
pop
or
or
inc
ficomps
jbe
call
push
and
jne
add
inc
divb
sub
sub
fadds
mov
ja,pt
add
inc
push
roll
mov
push
loop
sarb
jmp
inc
mov
addl
sbb
or
fs
jo
xchg
pop
mov
mov
push
cmp
mov
daa
push
div
cmpl
xchg
insl
push
lea
inc
mov
into
hlt
lock
callw
pop
mov
push
dec
shrb
ds
mov
inc
xor
imul
add
xchg
testl
and
sti
sub
aam
pop
mov
push
stos
lcall
inc
add
dec
xor
mov
sbb
and
dec
test
mov
std
mov
xor
cwtl
shlb
aam
aas
lcall
je
sbb
lcall
mov
cmpsb
icebp
js
adc
dec
jl
rorl
cmp
jl
scas
ljmp
push
fmuls
faddp
test
inc
ja
adc
sti
adc
ret
push
lret
cwtl
inc
mov
push
sbb
jg
lods
pop
cwtl
add
xor
adc
outsl
incl
mov
pop
fs
add
mov
fsubs
lods
pop
shrb
inc
mov
pop
push
in
shl
push
adc
scas
inc
sbb
lock
andl
xchg
inc
mov
mov
rcrb
loop
lods
int3
mov
jge
dec
out
ret
stos
dec
add
mov
push
pop
add
jp
sbb
mov
test
adc
cmpsl
mov
pop
adc
enter
daa
cmp
add
xorl
mov
cmpl
add
pop
and
lcall
dec
cmp
mov
mov
pop
outsb
xchg
sarb
inc
push
push
adc
jne
push
jno
cmp
mov
mov
lret
test
hlt
imul
in
lahf
jnp
pop
fsub
jnp
add
idiv
ss
mov
inc
rorb
out
jns
fstl
in
inc
in
push
daa
ret
in
mov
mov
sahf
std
mov
mov
cmp
add
cmpsl
aam
dec
fcomps
xchg
pushf
mov
ljmp
jbe
push
cmp
and
mov
call
ret
ljmp
les
call
push
mov
sbb
call
xor
or
mov
add
mov
jle
cmp
adc
ja
jmp
add
add
pop
mov
mov
xchg
inc
std
add
fiadds
stos
sbb
pop
rcrl
push
push
dec
lock
shrb
add
jecxz
or
lock
xchg
push
mov
aaa
pop
inc
sarl
popa
mov
or
mov
push
mov
push
jbe
push
cmp
inc
ret
mov
push
je
mov
xchg
and
scas
jecxz,pt
lock
and
push
fs
dec
and
push
dec
test
mov
lock
insb
imul
test
push
push
mov
and
pusha
ret
cmpsb
push
imul
push
mov
mov
xchg
outsb
imul
jmp
mov
out
inc
mov
js
pop
add
inc
lods
dec
fwait
mov
jecxz
push
sub
cmpsb
hlt
cmc
adc
icebp
gs
in
inc
cld
insb
pop
clc
add
repz
push
std
clc
test
fcmove
js
movsb
mov
test
mov
mov
or
and
adcb
daa
ds
clc
test
out
shr
cmp
outsl
mov
je
push
arpl
clc
push
shl
mov
push
sub
push
mov
outsl
cmp
mov
negl
mov
mov
roll
dec
xor
add
mov
loope
and
xor
mov
in
aad
fistl
rolb
mov
push
mov
xchg
jmp
out
popf
lods
push
push
adc
cld
adc
lods
push
adc
push
mov
jno
cmp
add
rcrb
aad
enter
scas
xchg
mov
aad
rcrl
pop
push
popf
push
inc
xor
mov
loopne
test
sbb
mov
jle
xchg
mov
sub
lret
dec
dec
mov
cmp
lds
add
nop
mov
call
jb
sbb
addb
rol
cli
ja
int3
cmp
mov
or
push
in
cwtl
ret
aam
push
lea
rcll
xchg
add
add
add
pop
or
push
pusha
push
mov
mov
ficoms
cmpsl
in
cmp
push
cmp
mov
call
push
lods
imul
bound
dec
mov
mov
lcall
mov
push
sub
or
pop
push
add
push
pop
pop
bound
cmp
jo
dec
outsl
dec
jb
add
inc
fst
in
out
nop
int3
sbb
in
enter
xor
pop
negb
and
mov
push
and
pusha
sub
pop
je
dec
pop
sti
std
lret
aaa
test
pop
cli
test
or
jle
xor
or
or
out
add
dec
pop
push
out
inc
rcrb
mov
test
jno
movsl
fisttpl
add
push
decb
mov
inc
push
aam
std
aaa
and
dec
push
push
jge
addl
js
push
sub
adc
decb
pop
push
xor
stos
dec
inc
sahf
rcll
pop
xor
mov
ret
jmp
mov
pop
push
add
cmc
sbb
and
lret
or
sub
stos
pop
in
ljmp
add
jge
xor
mov
call
mov
add
test
loope
inc
mov
cs
mov
subb
xor
mov
add
mov
sahf
shl
jae
lcall
push
xchg
push
and
clc
cmpsb
test
jle
adc
push
imul
mov
adc
dec
pop
shrl
mov
dec
lea
cmp
ficoml
and
push
loop
mov
test
pop
test
lea
insb
ret
add
fisubrs
jp
ret
or
test
je
test
dec
inc
les
xor
fwait
pusha
test
shll
add
lock
subb
loope
push
pop
fildl
push
jnp
push
pusha
das
addb
inc
and
mov
sub
or
xor
aam
and
push
fiaddl
push
pop
xchg
rcll
dec
je
sub
ljmp
nop
adc
int3
or
js,pt
or
jb,pt
call
scas
inc
ds
dec
es
nop
cwtl
rorb
pop
inc
sahf
add
adc
ja
pop
jb
push
sbb
cmp
or
iret
test
add
inc
xor
mov
lds
add
cmp
mov
jmp
rcrb
sub
pop
mov
xchg
adc
cmc
stos
jg
in
jmp
mov
fsub
mov
inc
add
and
push
mov
sub
je
adc
gs
sbb
pop
not
xor
in
jge
cli
adc
sub
add
mov
mov
scas
sub
push
mov
jg
cmp
xor
ljmp
fisttpl
ss
jle
je
insb
inc
ljmp
add
data16
mov
and
daa
dec
add
cmp
pop
mov
jbe
imul
fs
stc
sbb
mov
sub
lret
xchg
or
nop
inc
sub
mov
in
mov
xor
push
cli
mov
and
subb
aam
mov
add
push
dec
pop
hlt
xor
fdivrl
adc
adc
rclb
push
popa
imul
pop
test
sbb
or
pop
std
cmc
mov
cli
inc
out
inc
pushf
lock
movl
add
fisttps
aam
inc
pop
mov
mov
or
mov
push
add
or
fadds
or
and
mov
test
cmp
loop
push
pop
rol
aas
sub
jl
jne
xchg
add
mov
push
loopne
dec
dec
insb
add
xor
popf
xchg
test
jb
mov
push
inc
push
xor
ds
mov
cmpsb
out
push
mov
mov
mov
jmp
xchg
enter
sbb
push
sub
add
aad
cmp
fmuls
cmpsb
cmc
add
cmp
fnsave
inc
rorb
fisubrs
ret
das
add
xchg
push
pop
mov
clc
add
push
and
pop
add
ljmp
pusha
fdivl
push
in
outsl
xchg
jp
inc
adc
pop
and
cmp
inc
push
idivl
add
fmull
inc
cld
cmp
sbb
dec
fdivs
and
std
lock
js
jmp
cmp
test
bound
mov
out
inc
push
call
and
lea
mov
dec
jge
ds
jge
pop
sbb
cmp
adc
movl
inc
pop
xor
add
jae
leave
mov
xor
dec
cmp
jo
jo
and
mov
mov
or
pop
das
mov
ss
out
movsl
jne
push
inc
mov
test
adc
sub
pop
fdivrs
add
and
mov
jle
xchg
enter
or
in
add
or
or
jbe
dec
lds
pop
daa
dec
add
mov
cmp
notb
in
decl
mov
jne
popa
je
sub
mov
lea
lcall
enter
negb
clc
fs
sub
xlat
sahf
xchg
sub
clc
subl
rcl
xor
mov
cwtl
sahf
lea
dec
movsl
rorb
fs
inc
mov
xchg
xor
imulb
add
sbb
lea
nop
xor
dec
sub
scas
or
pop
test
testb
adc
xchg
push
push
push
add
and
add
pop
inc
jl
mov
addb
push
lods
idivb
add
lock
or
pop
push
add
inc
cmpsl
lcall
mov
mov
test
outsl
push
mov
add
hlt
add
in
inc
dec
and
ss
sbb
and
push
into
inc
dec
sbb
data16
div
loope
mov
into
cmp
dec
mov
insb
add
pop
xor
and
cmp
sarl
mov
dec
decl
mov
inc
and
iret
jmp
xor
xchg
popa
cmp
xor
fnstcw
inc
fdivl
add
and
fsubrs
ja
roll
pop
mov
das
sub
push
fimuls
inc
inc
and
inc
bound
push
scas
test
rorb
lock
dec
xorb
icebp
jge
ljmp
add
or
int3
sub
xchg
jle
andb
test
cwtl
loop
jecxz
pop
mov
adc
dec
cld
jp
popf
lock
repnz
jge
daa
repz
dec
loope
add
xchg
outsl
add
or
jo
mov
inc
call
mov
pop
push
xor
out
add
call
add
hlt
dec
in
dec
pop
ds
and
and
test
jp
xchg
out
fs
rcll
nop
mov
mov
pop
fdivr
ret
push
or
popa
jne
add
mov
popa
arpl
lcall
out
imul
mov
dec
cmp
jmp
nop
jo
add
loope
pusha
cmp
out
push
imulb
mov
in
jae
int3
xchg
inc
jno
push
jl
aam
fwait
or
iret
fsub
cld
imul
push
js
push
and
and
and
mov
pop
adc
mov
fsubr
mov
push
mov
add
push
rcrb
xchg
call
mov
ret
adc
pop
dec
xor
sbb
bnd
loopne
jle
in
insl
stos
in
cmp
mov
push
popa
pop
aam
mov
mov
cwtl
mov
pusha
clc
sub
adc
or
stos
inc
in
call
sbb
inc
pop
imul
test
and
add
arpl
es
scas
test
sbb
push
push
cwtl
sub
pushl
xor
sbb
or
hlt
movl
sub
bound
call
je
loop
adc
leave
push
and
add
push
pop
cmp
lds
pop
cli
dec
clc
mov
in
push
mov
testb
push
sub
xor
pop
push
add
mov
mov
push
sub
iret
mov
je
xor
mov
adc
fisttps
stos
or
sub
jne
jo
gs
aad
pop
pop
dec
repz
xor
mulb
into
add
insb
cld
mov
lock
and
scas
mov
push
mov
out
std
pop
adc
jmp
jp
sbb
loopne
inc
cmp
aad
sbbb
jmp
sbb
xor
sti
cs
fwait
icebp
lcall
clc
inc
stc
loopne
adc
hlt
jae
jmp
subl
adc
test
lock
adc
lcall
sahf
xlat
insb
mov
in
insl
or
insb
add
fldl2t
outsl
gs
push
mov
push
add
scas
or
std
add
sbb
or
adc
js
jmp
xchg
sahf
push
adc
test
pop
les
push
scas
mov
test
cwtl
push
ljmp
mov
or
sub
pushf
loopne
cmp
incl
aas
push
call
test
dec
xchg
add
sub
and
std
cmp
pop
jge
push
std
jle
ds
jmp
mov
sub
roll
mov
inc
and
rorl
inc
pop
mov
out
rorl
mov
sub
pusha
ret
test
cmpsb
and
rolb
pop
addb
add
pop
testb
dec
xchg
mov
inc
test
pop
mov
dec
push
into
mov
xchg
or
xchg
mov
loop
xor
xchg
hlt
aas
adc
incl
fsubrs
aad
lea
inc
decl
dec
mov
xchg
pop
cmp
fsubl
adc
or
inc
adcl
aaa
js
pop
rcr
decb
xor
test
in
push
mov
xorb
lds
cld
cld
jno
ficomps
add
lcall
cmp
mov
insb
cmp
or
ljmp
subl
mov
sbb
mov
add
mov
push
inc
push
adc
jg
lar
cmp
lcall
mov
clc
mov
dec
xor
or
adc
mov
jne
cmp
sub
cmp
push
or
lods
or
sbb
adc
sub
hlt
add
les
sub
or
movsb
inc
add
aaa
push
daa
pop
fwait
cmpsb
ljmp
out
icebp
inc
cmp
icebp
test
push
data16
test
jge
and
mov
sub
adcb
aaa
rclb
xchg
sarb
roll
pop
out
popf
and
xchg
mov
dec
xchg
add
mov
push
cld
cmp
insb
ret
lock
xor
ret
into
mov
outsb
mov
cs
dec
movb
xlat
es
sbb
mov
push
xor
sbb
icebp
std
mov
fsubrp
push
adc
sti
jne
xor
ljmp
jnp
mov
adc
movsb
inc
lfs
or
ljmp
mov
add
jge
sarb
inc
mov
or
mov
xchg
test
push
and
dec
loop
adc
aam
orb
mov
inc
test
ret
jo
int
sub
scas
jle
add
je
push
pop
or
js
pop
dec
sbb
popa
cmp
or
dec
mov
pop
sub
cs
jle
or
cltd
xchg
cmc
incl
mov
lea
jp
icebp
inc
call
inc
push
sub
cwtl
push
mov
inc
sub
add
out
add
mov
je
jmp
aaa
adc
xchg
bound
ffreep
sbb
push
mov
movsl
jmp
and
cwtl
push
nop
lock
int3
lock
pop
dec
fs
pop
add
jp
inc
ljmp
push
xor
je
nop
insb
mov
test
dec
cli
adc
faddl
cmp
mulb
jbe
sbb
and
sub
sub
cmp
rcr
dec
loope
stos
jp,pt
xchg
sub
pusha
dec
loopne
add
ljmp
mov
xchg
scas
push
test
push
push
in
loopne
mov
xor
adc
lods
js
or
xor
into
lea
fcoms
fdivrs
inc
mov
test
and
push
jle
das
test
dec
std
mov
mul
dec
and
pop
mov
jge
jl
inc
js
push
shl
jb
inc
ret
inc
into
pop
mov
mov
add
inc
or
je
sub
mov
test
jp
lds
jbe
mov
and
sar
fs
pop
push
pop
sbb
xor
mul
jl
pop
mov
jmp
xor
call
and
inc
ds
sbb
pop
jg
aam
les
in
mov
adc
mov
cmp
adcb
or
daa
in
ss
mov
and
aad
test
mov
mov
inc
mov
sub
mov
enter
jg
fcomps
xchg
call
push
addr16
sbbb
dec
mov
xchg
push
mov
leave
dec
mov
add
add
fisttpl
cvtps2pd
jg
push
ficompl
jmp
adc
push
and
push
cmp
sbb
push
dec
and
test
jp
mov
jne
sub
cmpsb
pop
call
xor
test
test
es
pusha
movsb
ret
int3
inc
je
rcll
das
adcl
fidivs
movsb
hlt
cmp
adc
or
mov
push
aas
lock
call
jg
jmp
test
add
addr16
aaa
fcmovnu
push
add
adc
or
in
shlb
orb
insb
pop
xor
nop
adc
sub
xchg
test
jbe
adc
fsubrs
loope
and
adc
insb
pop
les
or
cmp
cmp
fwait
cli
ljmp
outsl
push
mov
test
lea
inc
loopne
loop
pop
lret
cld
clc
jle
jbe
data16
mov
cmpsb
pop
xor
lret
icebp
scas
test
push
ret
fsubs
dec
icebp
ss
and
or
outsb
dec
das
xchg
jmp
loop
pop
xor
mov
out
aaa
inc
cwtl
fdivs
addb
stos
jns
or
push
std
xor
sbb
stos
je
out
and
dec
mov
add
cmp
lock
or
test
xor
inc
mov
cmp
call
fdivrs
jmp
repz
sbb
jg
cmp
and
call
sub
push
xor
xorb
sub
and
xor
fmull
aad
jl
call
cmp
call
push
add
jns
bound
add
cmp
in
lea
fists
cld
add
test
pop
cmp
int3
push
and
sbb
outsl
add
inc
mov
xor
loopne
repz
mov
cmp
pop
je
adc
test
data16
jmp
or
rcrl
and
sub
pop
mov
pushw
cmp
arpl
cmp
mov
dec
into
arpl
mov
mov
and
orb
mov
jne
lods
xchg
push
cli
dec
inc
mov
xchg
mov
andl
call
gs
test
jne
sub
inc
clc
xchg
xor
dec
lret
movsl
jns
clc
stos
test
xor
outsb
aam
pop
out
mov
pop
ljmp
in
cmp
mov
inc
pop
push
idiv
in
rolb
ss
iret
in
adc
sahf
xchg
adc
pop
daa
fdivl
clc
add
pop
or
inc
aaa
test
push
xchg
outsb
inc
sbb
mov
cmpsb
xchg
loope
or
adc
ja
pop
shl
add
push
int3
or
das
sub
rol
mov
das
imul
movl
call
inc
and
mov
dec
mov
sbb
xchg
test
or
jo
and
mov
mov
sahf
mov
std
adc
xchg
dec
adc
jle
in
lret
sub
in
xor
int3
mov
hlt
push
inc
ja
into
shr
xor
cwtl
add
aad
pusha
repnz
or
aas
add
fnsave
shlb
enter
push
sub
fcompl
push
and
jb
xor
sub
push
xor
sbb
xchg
js
pushf
gs
jmp
sub
and
inc
xor
xor
mov
adc
fisubrl
sbb
lds
jb
insl
mov
dec
cmp
outsb
mov
test
ret
pop
aad
mov
dec
std
das
adc
cmp
sar
mov
lods
add
sub
and
dec
sbb
push
xchg
push
test
fidivrl
idiv
fsub
and
or
adc
inc
xchg
call
inc
add
sub
lock
data16
cwtl
iret
loope
mov
inc
push
mov
out
cli
inc
je
lea
or
jmp
dec
mov
gs
aam
push
insl
jbe
sbb
dec
cwtl
fdivrl
cld
xchg
cmp
mov
loop
xchg
insb
mov
sarb
test
lea
daa
mov
adc
hlt
mov
xchg
push
inc
js
or
in
popf
xchg
ss
outsl
push
fs
adc
sub
mov
ret
mov
mov
pop
lods
sbb
lods
jmp
loopne
or
dec
add
xchg
lret
hlt
cld
pop
inc
mov
ret
clc
adc
dec
push
push
cmp
jbe
push
pop
iret
and
rolb
fwait
lods
pusha
lret
push
push
outsb
xchg
clc
push
sbb
shlb
lcall
sbb
add
mov
jb
out
cmp
push
push
rolb
add
mov
orb
add
pop
lea
mov
dec
aam
loop
sbb
loop
int3
cmp
and
adc
adc
cs
mov
mov
ljmp
add
push
scas
pop
roll
push
mov
inc
inc
inc
test
sbb
inc
stos
add
jmp
mov
xor
or
ljmp
push
into
out
xor
cld
in
and
dec
int3
dec
push
shll
je
push
outsl
mov
inc
xor
xorl
loopne
adc
ret
pop
cli
pop
pop
sub
or
dec
push
or
jmp
cmc
mov
xor
repnz
dec
xor
addr16
mov
add
xor
and
push
jmp
sbb
rol
jle
mov
mov
pop
inc
or
jmp
sbb
enter
xchg
add
mov
mov
test
jmp
inc
push
mov
sub
sub
aam
in
adc
stos
inc
into
push
sbb
push
mov
adc
pop
decl
dec
icebp
add
xchg
push
mov
jp
es
cwtl
ret
inc
push
lock
nop
sarb
punpckldq
inc
addb
sub
and
insl
mov
push
arpl
clc
fiaddl
nop
jo
pop
icebp
sub
sbb
movl
mov
pushf
adc
mov
lcall
dec
je
add
sbb
jo
cmp
pop
loope
jbe
or
push
push
add
add
push
or
aam
add
ret
fdivrs
dec
jmp
int
mov
mov
xor
add
shrb
jmp
mov
fs
sbb
add
into
outsl
stc
fisttpl
inc
adc
xor
add
sub
movb
in
jp
pop
dec
push
inc
test
stos
loope
or
mov
fs
add
mov
test
fidivs
jle
mov
orb
add
adc
xor
push
adc
mulb
into
mov
dec
andb
inc
cmpl
push
icebp
dec
add
add
dec
pop
and
sbb
mov
pop
adc
test
add
jge
hlt
mov
data16
aas
xor
aad
or
add
pop
mov
pushw
movsb
add
imul
jl
xchg
jle
fdiv
loop
sbb
xor
push
mov
or
dec
or
pop
decl
adc
mov
leave
loopne
lock
or
dec
std
xor
xchg
pop
push
mov
pop
sbb
orb
push
cmp
and
aam
mov
je
fidivrs
ret
je
jb
pop
cld
sahf
cltd
cmp
xor
enter
mov
pop
inc
dec
mov
fs
inc
sbb
das
clc
outsl
mov
push
mov
xor
fmul
xchg
jo
or
lods
stos
mov
and
lret
xchg
movsb
add
lret
or
inc
pop
cmp
fisubs
mov
dec
inc
mov
out
inc
loop
mov
xchg
add
popf
ret
mov
inc
pop
shrb
int3
add
loopne
inc
sbb
pop
mov
mov
lret
inc
sub
mov
sti
aas
aam
cmp
data16
or
aas
or
push
mov
in
andl
sub
loop
and
mov
pop
adc
cmpsb
add
mov
sub
in
push
and
sbb
xchg
mov
enter
push
push
stos
imul
sbb
inc
push
faddp
add
xorl
and
mov
jmp
xchg
push
pushf
imul
sahf
or
xchg
cmpb
push
call
mov
repz
inc
movb
std
aam
mov
jecxz
add
mov
call
cmpsb
rorl
aam
mov
mov
repnz
ret
xchg
add
insb
push
sbb
push
inc
or
mov
pushf
add
inc
pop
add
mov
clc
ja
cwtl
clc
out
add
pop
in
je
fmull
je
std
adc
pop
mov
push
mov
and
sbb
xchg
scas
jp
pop
mov
xor
sbbl
fstpt
lret
jbe
fcmovne
and
pop
add
inc
add
push
sub
dec
adc
push
clc
mov
or
repnz
mov
sub
nop
mov
mov
addb
or
dec
jmp
sbb
clc
scas
ffree
cmpsl
fcmovne
pop
popa
push
or
and
mov
push
add
loope
jg
or
dec
add
or
cmp
mov
push
enter
idivb
jnp
data16
out
cld
int
push
lret
dec
dec
mov
inc
mov
mov
jg
aad
add
je
mov
jne
xor
lock
movb
jge
clc
dec
clc
ja
mov
adc
pop
jne
jmp
xor
mov
mov
pop
and
cmpsb
ja
shr
ss
adc
sahf
mov
cmp
mov
call
xorb
or
push
pop
cmp
rclb
jnp
push
rorl
icebp
aaa
xlat
add
inc
nop
rcr
pop
pushl
sbb
mov
cmp
or
lea
xchg
mov
mov
or
lock
jae
ret
mov
pop
dec
fmulp
add
jmp
cld
fildl
in
push
inc
cmpsl
ljmp
push
sbb
fs
ret
dec
xchg
ljmp
xor
mov
add
es
cmp
adc
push
push
lea
add
shrb
mov
push
roll
sub
dec
addl
je
mov
inc
ret
or
enter
or
push
ds
add
test
mov
movsl
sub
sbb
test
hlt
xor
jo
jmp
insb
mov
push
xor
and
pusha
jmp
cli
outsb
add
adc
stos
xor
loopne
push
inc
mov
loop
ret
push
mov
pop
xlat
movsb
mov
fisubs
xor
and
dec
lret
cmpsl
fldl
lock
je
sub
int3
int3
push
pop
mov
mov
add
shl
and
add
push
sub
inc
testb
aas
cmp
subl
mov
sbb
or
xchg
cwtl
rcrb
cmp
jg
insl
pop
stos
cmp
ds
dec
push
mov
fmuls
push
mul
aad
xor
test
and
and
cs
dec
in
cmp
loope
subb
or
fadd
jbe
int3
pop
adc
dec
and
int3
rcl
sub
xor
shlb
and
rorb
std
adcb
fdivr
jg
pop
sub
mov
fsubrp
mov
xor
sub
xlat
inc
std
mov
loope,pn
or
js
je
cltd
shrb
rorb
std
inc
fldl
push
test
mov
adc
inc
mov
push
mov
or
push
call
jmp
adc
add
insb
std
jl
jnp
icebp
stos
push
in
sub
mov
mov
xor
mov
int
cmp
daa
movsb
push
fadds
push
test
inc
ret
add
lcall
jo
sbb
fs
subb
mov
mov
sti
aam
push
add
ret
jae
inc
xor
inc
adc
pop
or
les
mov
imull
xor
xchg
loop
push
sti
pop
and
jp
lcall
mov
add
cmpsb
or
hlt
or
or
mov
and
inc
decb
adc
add
cmp
loopne
and
jg
lcall
rorl
push
cmp
lea
cmp
inc
addl
out
xchg
mov
fs
lahf
add
mov
xchg
movsb
add
lods
or
mov
dec
mov
sub
jmp
pushl
js
jbe
or
dec
fsubl
rcll
dec
pop
add
adc
pop
leave
mov
insb
mov
sbb
inc
xor
test
imul
push
mov
jl
movl
xor
aaa
sbb
sub
lea
sar
and
mov
nop
outsb
test
push
or
push
bound
dec
push
das
and
or
add
in
pop
test
cmpsl
data16
jbe
or
push
leave
adc
inc
mov
add
pop
lods
xor
mov
add
lods
pop
xchg
pop
mov
sbb
push
mov
andb
cli
jne
fsubl
cmpsb
imul
cmp
or
cmp
xor
adc
insl
push
push
mov
test
lods
mov
leave
sbbl
xchg
sbb
ret
movb
dec
jge
cmpl
dec
sbb
and
incb
andb
ljmp
adc
push
adc
xor
mov
testl
mov
or
repnz
jbe
testb
mov
into
dec
pusha
push
mov
and
inc
mov
jae
push
sub
imull
sbb
push
clc
sbb
ds
call
leave
insb
and
test
lock
pop
adc
cmp
jne
je
jle
or
mov
int3
xor
fwait
int3
dec
pop
mov
mov
pop
cltd
nop
add
and
pop
or
mov
test
and
loopne
mull
and
or
or
test
lcall
cmp
std
push
push
mov
popf
xor
mov
dec
movb
scas
rolb
movsl
rcl
jmp
adc
lock
jb
loopne
les
test
adc
data16
push
scas
inc
imulb
sub
fidivrs
sub
adc
push
xchg
push
cmp
cmp
mov
sub
int3
pop
xor
inc
scas
sub
lds
pusha
dec
inc
pusha
sbbl
inc
clc
test
hlt
adc
adc
add
decl
lock
in
pop
inc
adc
inc
jecxz
or
stos
leave
clc
pop
or
stc
stos
shlb
lock
loopne
adc
mov
push
pop
aaa
add
adc
lea
sahf
push
sub
add
fs
addr16
push
adc
inc
data16
push
mov
call
insb
and
sbb
or
fcomip
xchg
enter
pop
xchg
adc
pop
mov
adc
xchg
test
xchg
test
fbld
add
clc
mov
or
inc
cld
outsl
data16
xor
push
rolb
imul
xor
stos
mov
mov
cmp
and
call
call
rcrb
push
mov
lods
call
push
pop
push
inc
sub
pop
call
in
dec
dec
pop
adc
nop
insl
sti
gs
add
or
mov
frstor
cld
inc
rorl
cli
adc
mov
or
inc
pop
adc
dec
in
ds
es
lea
mov
rcrb
add
jb
add
or
pop
fadd
xor
add
jb
cmc
lds
dec
cwtl
xchg
lea
icebp
add
jmp
data16
in
jb
inc
inc
inc
sbb
xor
aaa
lret
sbbl
cld
lods
sub
sub
int3
mov
and
fisttps
pop
mov
test
pop
mov
mov
xchg
sahf
in
push
enter
inc
push
jo
or
mov
sbb
and
inc
dec
rcll
pop
pop
ljmp
xchg
sub
enter
mov
cli
cmpsb
cltd
or
mov
mov
shlb
je
loopne
xchg
jle
pop
sub
pop
outsl
cs
loope
xchg
jge
enter
testb
sub
test
fdivrs
sbb
pop
pop
and
push
test
or
mov
popl
aas
pop
cmp
pop
mov
fs
ret
sub
cvtps2pd
adc
rorb
xor
pop
popa
add
hlt
das
sub
mov
test
ficompl
ja
or
push
lahf
inc
outsb
xorb
addb
cli
push
cmp
movsl
sbb
movsl
clc
inc
clc
cmp
jne
jne
dec
lahf
movsl
roll
loope
cmpsl
sub
cld
xlat
or
ret
cmp
xor
mov
pushf
orb
sti
int3
test
xchg
std
movsl
sahf
clc
pop
int3
icebp
push
js
pop
xchg
jp
inc
test
insb
das
add
inc
test
mov
inc
addr16
push
outsb
add
xchg
fdivs
cmpsb
test
xchg
mov
jl
add
adc
leave
popa
mov
push
repnz
movsb
andl
in
int3
sub
push
add
jo
push
aas
pop
std
push
push
xor
cld
sbb
jecxz
add
sub
adc
loop
pop
fmul
sbb
rol
imul
xchg
ljmp
jmp
cmp
mov
mov
jnp
js
add
je
in
pop
push
cld
sbb
jne
cltd
ret
cmpl
mov
jge
and
adc
adc
test
ja
push
push
les
les
push
pop
in
sbb
mov
test
cmp
push
xor
add
orb
push
xchg
mov
adc
jecxz
push
mov
push
cmpsb
mov
call
jp
enter
fmuls
repnz
pop
popf
xor
fadds
andl
addl
push
outsb
cmovb
insl
xchg
xchg
mov
push
mov
push
fcompl
rclb
adc
cmpb
or
jmp
push
jl
js
xlat
sbb
inc
test
scas
int3
inc
orb
les
scas
or
inc
in
cmpsb
dec
xor
or
scas
and
rcrb
dec
mov
pop
int
push
cmp
add
cld
push
xchg
mov
and
mov
mov
test
adc
sub
jbe
subl
adc
outsl
add
push
add
xchg
add
in
mov
lods
mov
std
xchg
add
mov
mov
popa
cli
lahf
or
pusha
jmp
xor
add
cmpsl
fidivs
and
mov
outsl
cli
pushf
adc
rcll
lds
shlb
pop
or
cltd
mov
xor
in
xchg
mov
and
mov
mov
cmp
jge
imul
scas
inc
ficoms
pop
test
xor
adc
mov
add
sub
jnp
or
xor
sbb
inc
or
inc
inc
jge
addb
test
and
das
and
enter
adc
add
xchg
aaa
out
adc
out
mov
sbb
and
popf
inc
stos
bound
pop
push
mov
adc
loopne
mov
sub
mov
mov
mov
push
loopne
test
test
mov
jne
rcrl
les
in
xchg
jbe
nop
xor
ficoms
in
mov
in
sub
shll
div
mov
sub
mov
shll
dec
lcall
inc
push
ljmp
call
and
mov
or
push
mov
push
mov
les
inc
int3
clc
fbld
nop
inc
inc
cs
movl
mov
int3
ss
lock
sbb
mov
into
inc
iret
cmp
vmread
jmp
dec
xor
ss
popa
idivl
fcmovbe
int3
jae
and
pop
cmp
mov
test
call
lea
pop
cmp
sub
or
sti
sub
mov
lret
call
in
cld
das
sbb
jmp
leave
push
cmp
inc
cmp
adc
inc
sbb
jb
loope
and
push
xor
addl
rcl
push
pushf
or
xchg
add
xor
mov
pop
pusha
cmp
inc
add
sub
rorb
dec
add
shll
scas
das
andb
pop
js
les
cltd
sub
cmc
sbb
dec
or
scas
movsb
into
cmp
cld
mov
pop
xchg
shrb
cltd
popa
mov
dec
add
inc
dec
cld
shlb
insb
loopne
fwait
mov
shl
dec
rolb
and
out
call
fadds
adc
cmp
mov
sbb
inc
push
cld
add
in
loope
mov
pop
pusha
add
rorb
repz
pop
inc
mov
cmp
dec
test
aam
ds
add
enter
mov
lret
jae
je
or
adc
push
push
lea
pop
jo
push
xlat
pop
xchg
push
add
ss
unpckhps
dec
call
adc
cmc
dec
aas
push
rclb
pop
cmp
stos
jl
call
inc
or
mov
in
minps
mov
shlb
rcl
xchg
lods
pop
adc
push
repz
int
dec
jp
pop
ds
xor
aas
rolb
add
daa
add
lods
dec
mov
or
mov
icebp
mov
cmc
adcl
inc
xchg
mov
cld
pop
jnp
add
add
lahf
test
pusha
or
push
outsb
dec
mov
int3
test
mov
fdivl
mov
fiadds
flds
ds
ret
pop
test
sti
mov
jbe
mov
sbb
add
and
pop
mov
cmp
out
mov
pop
or
jge
add
push
inc
add
mov
outsl
sbb
pop
push
outsl
fstpt
or
testb
pop
aaa
inc
inc
sar
dec
in
test
jbe
push
push
pop
push
or
enter
push
lods
sub
mov
jne
rcl
jb
push
dec
dec
arpl
scas
mov
or
mov
mov
adc
dec
mov
xchg
adc
scas
popf
faddl
daa
push
test
sub
push
aam
js
mov
mov
xchg
xchg
pusha
out
xor
push
lods
pcmpgtd
dec
jb
loop
push
fldl
enter
arpl
pop
loope
mov
sbb
xor
loop
pop
sti
xor
pop
cmp
sbb
push
insl
arpl
xchg
jnp
push
jl
pop
ja
inc
mov
adc
sti
clc
push
pop
mov
inc
add
nop
sub
push
add
inc
ja
testl
or
dec
add
cmpsb
addr16
pusha
adc
sbb
and
rol
jb
inc
lods
sbb
push
inc
and
and
test
int3
add
add
cwtl
les
mov
pop
inc
push
push
add
aam
inc
rorl
and
pop
mov
test
xorl
enter
shrb
jge
and
add
inc
sbb
or
call
inc
pop
add
add
jne
mov
ja
cwtl
mov
test
push
dec
add
aaa
mov
ret
mov
mov
xor
adc
int3
or
test
adc
and
sub
in
xchg
in
ret
push
out
cmp
outsl
clc
inc
jne
or
mov
sbb
push
adc
test
dec
sbb
decl
or
cmp
adc
stos
push
jne
cmp
inc
pushf
cmp
xor
js
fcoml
fsubrs
leave
shlb
push
adc
test
jecxz
or
mov
adc
mov
jne
mov
pop
mov
loope
mov
sbb
pushf
jmp
and
clc
inc
xor
and
inc
call
xchg
mov
xchg
aam
mov
push
jns
fcmovnu
cmp
or
cmp
push
cmp
xor
and
pop
pop
push
inc
mov
pop
insl
cld
mov
sub
push
in
cwtl
or
or
mov
sub
popa
push
or
adc
sysenter
call
cmp
es
cld
inc
jl
testb
or
subl
push
nop
add
loope
lods
subl
jmp
jmp
ret
mov
sbb
pop
add
stos
sbb
stc
iret
push
cmp
or
pop
mov
xor
hlt
leave
xor
hlt
push
inc
arpl
movl
push
cld
test
sub
jmp
cmp
rol
aas
mov
iret
divb
les
adc
hlt
or
cmpb
pop
or
call
xor
je
clc
aam
aad
inc
popa
mov
fnsetpm(287
pop
fistps
mov
xchg
loop
xor
sahf
xchg
mov
mov
lea
insl
loop
xchg
push
bound
jecxz
sbb
loopne
insl
lods
mov
cmp
add
inc
or
add
or
inc
cmp
ror
aad
and
add
push
cld
sbb
mov
jg
mov
mov
fidivs
and
lods
gs
jmp
jns
inc
aaa
sub
xor
push
xor
push
hlt
mov
or
sbb
jo
imulb
and
jmp
jbe
and
dec
jmp
rcrb
ljmp
jae
push
or
test
das
inc
jb
cs
cmpsl
je
lock
rorb
dec
mov
cmc
and
xor
loope
dec
out
in
push
xchg
in
add
sbb
insb
or
push
shr
fsubrs
call
jl
mov
add
jmp
test
xchg
loope
sbb
aam
punpckhbw
inc
pop
add
sbb
aaa
bound
sub
xor
loopne
loopne
xor
mov
or
insl
adc
mov
imul
neg
jne
inc
mov
js
push
addl
pop
rol
xor
aas
ss
cmp
js
mov
enter
inc
mov
fists
mov
lcall
adc
aaa
mov
inc
cld
mov
repz
popa
add
insb
cwtl
push
or
shlb
inc
std
jo
mov
ror
or
jp
mov
sbb
and
dec
sarb
or
jnp
fdivl
push
pop
add
and
insl
mov
data16
fdivs
add
push
xorl
in
test
jno
push
mov
repnz
push
mov
aam
and
out
mov
adcb
push
xor
mov
into
cmp
fcoms
mov
fcmovb
xchg
scas
ljmp
adc
fs
test
ret
ja
push
mov
cmp
add
mov
sti
jb
je
jp
int3
inc
arpl
xor
icebp
inc
loop
jmp
add
cmpsb
mov
fdivl
mov
out
mov
push
mov
add
add
daa
jle
idivb
cmp
ret
and
add
clc
aaa
jo
test
add
mov
dec
push
aaa
adc
test
adc
push
stos
mov
add
or
and
stos
add
jge
lret
sub
and
lock
sarl
cmp
mov
xchg
sbbl
or
mov
and
adc
test
loope
xchg
rclb
loope
insl
adc
sub
jb
add
xor
arpl
xchg
jbe
mov
decb
and
mov
inc
imul
push
mov
or
dec
and
int3
inc
loopne
push
fcmovnbe
rolb
int3
or
mov
mov
sub
clc
jle
clc
cmp
mov
push
inc
and
add
in
mov
cld
xchg
or
cmp
push
pmuludq
inc
dec
je
push
dec
loopne
mov
inc
dec
std
mov
cmp
mov
sbb
pop
adc
outsl
stc
adc
ret
mov
ljmp
out
push
inc
cs
les
push
fsubrl
mov
ret
icebp
call
xor
aaa
xor
mov
jne
roll
inc
or
jp
and
inc
neg
or
sbb
xor
add
int3
xor
daa
mov
les
push
jbe
pop
add
and
in
push
push
mov
jl
xor
push
and
adc
jbe
mov
push
call
pusha
add
adc
xor
or
loop
cwtl
aam
sbb
inc
xor
jl
add
sar
cmp
mov
inc
sbb
xor
cmp
enter
orl
and
mov
andb
stos
cmpsl
cwtl
pop
int3
add
addl
pop
push
xchg
test
outsb
add
mov
and
outsl
inc
xorl
sahf
addr16
incl
int
push
pop
push
mov
mov
pop
shrb
sbb
jb
xor
mov
aam
ret
pusha
fisubrl
and
mov
push
pop
sbb
js
or
push
xor
jp
cmpsl
stos
pusha
xor
adc
notb
rolb
fidivs
aam
inc
movsb
stos
add
ret
fildl
inc
loopne
fcom
stos
enter
les
adc
cmp
cmp
test
sub
or
pop
adc
push
mov
cmp
addb
incb
add
enter
xor
les
mov
lock
out
push
add
mov
push
lods
in
movsb
mov
sub
loope
clc
adc
adc
sahf
popf
mov
mov
loope
ficoms
in
mov
mov
les
fmull
repnz
mov
fsubr
js
mov
inc
fsubr
sbb
rol
fs
dec
xchg
in
add
jnp
loopne
sbb
call
pushf
mov
xor
sub
sbb
into
jg
and
rolb
repnz
mov
inc
inc
stc
mov
mov
rcrw
inc
and
clc
cmpsb
jmp
std
sub
mov
in
scas
pop
int3
aam
pusha
pop
or
or
dec
xorl
loop
repnz
lret
add
push
divb
add
rclb
loop
push
cs
ret
inc
inc
cmpb
inc
test
xor
pop
add
idivl
aas
test
into
mov
push
ljmp
arpl
xchg
jg
out
push
cs
fcomip
push
xchg
xor
mov
sub
stos
insl
mov
xor
inc
dec
subb
mov
lods
add
adc
adc
pop
fildl
int3
orl
xchg
xchg
popa
enter
mov
mov
ss
adc
xor
add
sub
gs
hlt
shrb
pusha
test
xchg
incb
pcmpgtw
sub
jle
adc
sub
xor
addb
in
call
movb
shlb
xor
lea
iret
in
xor
enter
mov
adc
xchg
cmp
lret
mov
movsl
lahf
and
mov
cmp
or
in
test
das
adc
pop
fisttpll
push
adc
add
scas
addl
inc
cld
scas
decl
add
sqrtps
pop
adc
hlt
dec
push
adc
mov
or
mov
into
int3
psllw
dec
dec
jecxz
pop
ja
das
insb
add
ret
and
mov
mov
test
mov
outsb
fimuls
jnp
push
mov
in
push
sub
stos
js
push
ror
xchg
inc
mov
movb
fsub
hlt
mov
pop
dec
sbb
clc
pop
or
mov
and
call
jge
out
xor
neg
or
mov
test
push
push
or
jmp
push
repnz
adc
inc
mov
movsb
std
add
dec
jmp
mov
hlt
mov
pushl
ljmp
clc
sub
repnz
fmul
mov
call
push
insb
shll
test
push
or
sbb
xor
scas
loopne
jg
xchg
das
loop
aam
push
xor
adc
test
es
sub
inc
out
jecxz,pt
add
sar
adc
add
mov
ret
adc
je
and
lea
cmc
xlat
fs
out
dec
dec
inc
mov
or
sahf
cmpl
repnz
pop
fldenv
and
xor
lods
inc
mov
into
nop
sub
into
out
rclb
in
inc
into
push
pop
cmpb
loopne
decl
ret
dec
sbb
mov
sub
jmp
dec
jge
adc
add
pop
movb
xchg
push
mov
clc
mov
or
or
lcall
mov
stc
mov
inc
inc
sbb
and
xchg
fsubrs
pop
notb
sahf
inc
insb
lods
int
push
cltd
push
loop
xor
push
mov
jp
mov
xchg
lret
pop
xor
inc
mov
push
int3
pop
daa
mov
jmp
and
add
add
sbb
jne
test
call
xchg
or
lods
add
addb
test
push
sub
dec
mov
faddp
addl
lock
add
cmp
int3
add
dec
mov
sub
mov
ficoms
cmp
mov
decl
mov
std
push
mov
outsb
std
mov
cmpsb
xchg
cli
dec
push
paddsb
icebp
inc
xor
icebp
dec
clc
inc
push
test
sbb
jb
incl
or
test
data16
loopne
popl
loopne
loopne
jbe
adc
xor
pop
xchg
les
aas
mov
or
mov
pop
sbb
cli
decb
data16
pusha
test
mov
into
sbb
mov
ucomiss
das
cwtl
repz
mov
and
fsubr
cli
cld
test
cld
arpl
shl
aad
sahf
inc
call
add
cli
mov
inc
mov
adc
and
orl
shrl
je
fnstenv
cmpsb
push
jb
hlt
mov
jcxz
add
pop
mov
jnp
mov
in
loope
push
inc
es
jp
into
dec
push
inc
sub
mov
cmp
lods
xor
subl
or
cmp
inc
add
ss
fs
adcl
sub
loop
sbb
and
mov
je
scas
mov
and
pop
xor
std
and
cmp
jo
add
push
jl
cmc
mov
adc
loopne
lea
pop
arpl
gs
data16
out
aad
inc
lret
pushl
jge
fwait
test
mov
dec
int
or
push
and
outsb
push
cmp
push
xor
dec
jmp
negl
out
mov
adc
add
mov
fdivp
repnz
cmc
scas
aam
jbe
cmp
mov
mov
mov
cmp
adc
add
push
in
bound
or
scas
lcall
sbb
fmull
xchg
rcrb
pop
and
mov
lea
fldenv
dec
and
push
cli
fcoms
pop
out
mov
jp
movnti
fs
or
ja
aam
mulb
pushf
add
mov
sbb
ret
das
mov
pusha
cmp
xor
rolb
fsubs
inc
mov
push
inc
leave
test
pushl
dec
sub
out
loope
push
mov
jne
mov
cmpsb
pmaddwd
jo
add
bound
andl
xchg
pop
in
ja
test
jo
jo
fiadds
les
push
jno
xchg
dec
sub
push
stc
movsb
push
notb
clc
fwait
rorb
mov
mov
das
test
shrb
pop
or
jmp
cmpsb
les
out
clc
sub
and
sub
ror
cmp
icebp
mov
add
loopne
pop
push
jb
mov
push
xchg
mov
add
inc
int
mov
mov
mov
push
dec
inc
jle
cli
inc
mov
dec
and
push
push
or
aaa
dec
ss
sbb
xor
test
xor
loopne
push
mov
sub
out
jo
mov
dec
inc
stos
mov
pop
in
daa
call
leave
rolb
daa
inc
inc
mov
pop
ljmp
sub
lods
enter
or
hlt
imul
push
test
or
pop
fbstp
int3
incl
aad
xchg
add
nop
mov
add
sub
fistps
aas
inc
repnz
jl
cmp
stos
movsb
shr
dec
mov
pop
and
push
jg
mov
mov
jo
inc
std
mov
int
add
or
dec
sbb
lcall
pop
lods
add
push
dec
js
repz
ss
or
dec
xchg
out
add
add
ret
and
mov
jne
setp
fsubrs
or
pop
out
lcall
call
insl
adc
loope
mov
mov
dec
incb
aam
insb
or
mov
lea
mov
mov
inc
test
mov
cmpb
test
mov
add
add
dec
test
outsw
testb
mov
mov
daa
loope
or
push
dec
shrl
sar
pop
lods
mov
and
scas
jne,pn
stc
push
push
fs
das
push
xor
inc
xorl
scas
adc
pop
add
sbbl
movl
mov
jne
pop
adc
or
inc
jmp
push
push
and
add
cld
or
call
xor
push
clc
int
outsb
xor
bound
and
fsubs
in
outsl
jg
push
cld
flds
cmp
scas
xor
in
mov
mov
xor
and
std
cmc
inc
gs
push
xchg
pop
push
push
fcmovnb
movsl
rcr
sbb
mov
in
cld
or
data16
or
xor
int3
push
mov
push
sub
dec
xor
aas
cld
cmpsl
ds
nop
int3
or
or
fdiv
dec
add
fcmovne
test
add
out
movsb
mov
push
ret
dec
pop
leave
dec
hlt
adc
push
clc
das
es
xlat
femms
and
push
xor
mov
orb
mov
pop
mov
hlt
std
mov
roll
decb
mov
xchg
mov
rclb
mov
popa
inc
dec
mov
rcr
lock
mov
popa
cs
and
nop
inc
sub
in
mov
shlb
clc
sbb
pop
mov
mov
mov
dec
xchg
nop
xchg
mov
push
xchg
cmp
add
jecxz
fists
sti
mov
fs
push
test
dec
add
lods
pop
cld
loopne
add
or
mov
jae
test
cs
inc
fadds
cmp
adc
mov
orb
xchg
enter
mov
cmpsb
gs
fidivl
aad
fadds
fcompl
movsb
fldl2t
pop
xchg
stos
ret
mov
aas
mov
notb
les
mov
mov
in
hlt
pop
push
push
mov
sarb
cmp
xchg
cmp
pop
mov
add
push
adc
or
fnsave
sbb
les
inc
into
pop
mov
loope
xor
adc
pop
jge
or
fsubrl
icebp
mov
sub
add
cmp
aas
in
sub
test
pop
idiv
add
leave
inc
ss
xorb
jae
xor
out
lods
decl
add
adc
aam
cld
mov
adc
or
or
pop
mov
dec
stos
movsb
xchg
into
sbb
ds
cmp
sbb
push
ds
xchg
mov
push
es
aas
test
jp
enter
scas
inc
push
lahf
or
jl
inc
add
je
or
hlt
dec
mov
mov
out
inc
test
call
dec
sbb
sqrtps
les
dec
stc
adc
xchg
test
xchg
test
test
adc
push
in
add
add
inc
icebp
clc
add
pop
insb
jmp
jbe
jle
mov
cltd
and
mov
add
loop
add
ficoml
dec
push
adc
out
iret
adcb
data16
lret
xor
mov
imul
cld
sbb
je
shlb
add
insb
push
mov
dec
pusha
xlat
adc
and
ret
adc
or
decl
js
push
ljmp
rolb
insl
add
insb
lret
loopne
movsl
scas
inc
cmp
es
call
pushl
inc
push
aam
lea
add
cmp
cmp
inc
sub
loopne
mov
mov
and
test
inc
cli
mov
jmp
push
add
dec
inc
jo
pop
sub
lcall
cmp
jo,pn
lret
in
mov
jmp
pop
shr
mov
pop
ficompl
dec
imul
jo
outsl
add
mov
xor
push
decl
lea
dec
sbb
movsb
add
xor
inc
jl
jp
inc
fisttpl
mov
rcrl
mov
cld
notb
sub
test
fldl
push
mov
mov
adc
subl
ud0
ficomps
xchg
leave
mov
sub
xor
mov
cltd
cli
adc
mov
test
pop
and
cmc
adc
and
push
out
es
cmp
pop
adc
adc
mov
cmpb
add
adc
push
sbb
pop
out
es
cmp
add
pop
dec
inc
call
pop
and
inc
decb
outsl
add
pop
xor
clc
movsb
push
ret
pusha
les
mov
test
add
loopne
aaa
rorl
out
inc
fs
testl
jnp
ds
mov
leave
xchg
aam
dec
push
shlb
xchg
adc
mov
mov
cli
pop
sbb
dec
mov
and
push
mov
pop
pop
push
cld
jmp
pop
mov
cld
inc
mov
js
mov
nop
ds
fisubl
mov
xor
in
mov
lret
pusha
mov
hlt
test
aas
push
and
clc
imul
ficomps
outsl
sub
mov
mov
movsb
cmc
mov
xor
mov
xor
ljmp
and
stos
mov
fisttps
lcall
int3
xor
mov
add
mov
xchg
bound
adc
mov
loop,pn
inc
or
ss
incl
inc
fimull
inc
push
cld
push
mov
xchg
add
mov
dec
jge
xor
or
and
in
or
adc
mov
push
sub
dec
adc
je
mov
dec
dec
fcom
and
push
push
loopne
mov
lods
add
jnp
push
stos
push
and
movups
cmp
dec
or
enter
movsb
add
std
jb
sbb
mov
jge
mov
cli
jmp
iret
add
push
aam
or
mov
add
or
outsb
jle
mov
mov
add
andb
mov
adc
mov
in
or
ja
jbe
pop
mov
pushf
pushf
push
xor
adc
punpcklbw
lahf
addl
pop
pop
mov
cli
xor
pusha
push
cmp
jle
outsl
add
sub
jne
mov
xchg
imul
xor
les
push
pop
lock
notb
js
inc
fists
js
sub
pusha
add
insl
cmp
js
add
test
fcomps
loop
sahf
jo
nop
cmp
cmp
sbb
sarb
jle
lcall
shrb
mov
movsl
add
sub
pop
arpl
outsl
jle
in
lods
inc
add
imul
cld
ljmp
sbb
cwtl
rcrb
push
push
xor
mov
fdivs
je
add
push
cmp
push
and
les
cmp
dec
jb
or
ja
in
add
out
lds
pop
mov
inc
out
mov
inc
enter
je
add
shll
loopne
pushl
mov
mov
jns
lahf
lea
fmuls
or
mov
xor
cmc
outsl
or
or
inc
jbe
push
jnp
pushl
mov
dec
sub
test
popa
dec
je
addr16
mov
push
data16
adc
adc
jb
push
mov
inc
aam
addb
adc
mov
jp
fwait
mov
out
cld
nop
js
dec
orl
cld
outsb
and
mov
dec
pop
push
xchg
call
pop
nop
call
add
fadds
xchg
add
les
mov
or
mov
mov
imul
lods
insl
cmpsb
mov
imul
xor
pop
pop
push
mov
xchg
sub
cmp
test
int3
lret
push
push
ret
incb
jecxz
adc
mov
aam
mov
adc
xor
sbb
clc
push
and
and
fsts
xor
in
call
xor
mov
pmaxub
xchg
dec
scas
add
mov
sarb
mov
je
add
enter
push
or
sti
mov
mov
sub
ds
mov
data16
loop
fdivs
loope
std
js
mov
call
aas
insb
in
bound
pop
je
cmp
sbb
lcall
sub
test
add
jnp
mov
push
pop
faddp
or
inc
mov
test
inc
mov
sbb
rcr
mov
incb
mov
push
hlt
push
loope
pop
test
cs
incb
mov
push
jmp
mov
cli
fldt
fs
cld
inc
mov
and
mov
call
and
incb
xor
and
inc
cmp
fiaddl
sbb
cld
jne
mov
mov
loope
js
adc
lods
fcmove
pop
adc
lea
adc
in
mov
sbbl
add
jp
and
xchg
and
dec
sbb
push
aas
fwait
rol
xchg
rclb
cwtl
dec
fsubrs
mov
popa
jmp
stos
ljmp
push
add
imul
lods
testb
adc
pushf
aam
adc
lock
jo
out
mov
enter
loop
xor
mov
pusha
inc
xchg
adc
dec
mov
add
lock
mov
push
xor
cltd
jne
mov
fcoms
jp
sub
xor
mov
mov
ljmp
push
mov
inc
stos
push
fstl
ss
rcll
popa
push
jp
adc
mov
add
cltd
inc
es
jmp
push
or
push
into
xor
add
movsb
int3
outsb
or
mov
test
and
jne
or
pop
mov
xor
mov
aam
lret
xor
or
xor
push
pop
mov
add
mov
and
bnd
stos
xor
movsb
aas
push
in
inc
xor
pop
xchg
aas
pop
xchg
mov
pusha
clc
mov
sub
shlb
or
pop
mov
leave
mov
add
nop
cltd
insb
mov
push
fimuls
shlb
clc
push
push
mov
stos
mov
sar
clc
or
enter
sarl
aaa
adc
push
cmp
dec
ss
inc
test
pushl
ret
dec
add
cs
mov
test
fldl
or
mov
clc
call
sub
xor
adc
mov
jae
mov
pop
or
dec
mov
pop
and
push
adc
std
dec
cwtl
mov
or
in
out
push
add
xor
ret
add
insb
std
cmpsl
push
and
decl
mov
sbb
fs
sbb
mov
in
mov
dec
xchg
sub
add
xor
and
mov
fucomp
ret
insl
cmp
fadds
push
in
paddq
cmpsb
lock
adcb
stos
gs
and
fs
lods
push
pop
add
lahf
sahf
adc
mov
shr
mov
fs
add
shrl
pop
cltd
insl
mov
add
mov
rcll
enter
test
mov
sbb
jb
rolb
clc
push
cmp
out
and
jb
rcrb
adc
test
inc
cld
inc
push
push
fdivl
xor
sub
es
dec
push
mov
mov
aam
ret
mov
nop
dec
shrb
sub
fdivs
enter
rorb
je
incl
hlt
fidivrl
push
pop
push
mov
cltd
mov
in
sub
mov
mov
adc
or
fsts
lock
rorb
in
jmp
mov
add
adc
popa
jnp
js
loop
mov
popa
clc
cld
je
xor
xchg
pop
test
sub
loopne
sbb
jne
fcmovbe
aas
addb
subl
dec
adc
mov
ljmp
inc
outsl
jp
ret
pop
push
mov
mov
and
mov
movsb
add
and
cmpl
out
outsb
xor
test
rclb
leavew
test
push
mov
or
test
jo
enter
or
nop
sbb
pop
sarb
rcrb
adc
sub
data16
scas
push
dec
jno
dec
dec
mov
lods
push
enter
adc
fcomp
push
outsl
dec
mov
cmp
imul
clc
or
or
mov
ss
jmp
xchg
test
inc
and
push
subb
test
imul
cs
jo
mov
pop
and
icebp
test
inc
arpl
cmp
or
ficoml
inc
ljmp
sub
xor
pop
test
sbb
mov
pushf
xchg
push
and
adcl
add
pop
pop
es
je
xor
cld
ret
into
insl
rorl
outsb
imul
inc
pop
push
add
bound
jg
dec
decl
cmp
cs
paddsb
sbb
aas
test
das
add
incl
jmp
mov
push
jmp
cld
and
out
adc
clc
sbb
jne
sbb
loopne
shlb
div
scas
and
enter
mov
int3
js
leave
adc
je
inc
call
jbe
cmovle
push
pop
push
ret
mov
push
mov
push
push
test
pop
mov
ss
and
adc
mov
push
fs
sar
xchg
dec
and
cld
inc
adc
and
sbb
push
stos
js
add
hlt
jmp
test
les
cmp
mov
clc
stos
lea
xorb
arpl
inc
xor
fwait
jle
cld
xchg
movsb
subb
add
jo
mov
mov
insl
mov
mov
or
add
mov
adc
mov
mov
add
xor
xchg
mov
xchg
outsb
push
mov
ljmp
aas
adc
pop
add
sbb
mov
push
inc
add
jo
jbe
pop
loope
add
dec
mov
xchg
push
pop
cmp
and
mov
xor
loop
dec
adc
shrl
fwait
cld
push
push
dec
pop
xchg
mov
push
push
sub
movsb
xor
call
out
jbe
xchg
fisubrl
insb
mov
adc
enter
fs
push
sub
out
dec
or
push
push
adc
pop
dec
data16
fistl
lea
dec
pop
ficoml
jbe
test
incl
mul
mov
hlt
test
push
mov
push
test
mov
addr16
and
dec
pop
rcl
mov
fcmovu
mov
int
in
into
or
and
inc
imul
test
incl
dec
sub
pusha
fildl
jbe
jnp
pop
idiv
xchg
int3
and
insb
cld
hlt
lea
popf
xor
inc
cmp
sbb
add
sbb
test
mov
add
negl
cwtl
mov
shl
jecxz
adc
and
push
fs
sbb
movsb
cmpl
add
in
fs
ret
jo
mov
or
xchg
add
mov
mov
addl
add
faddl
outsl
inc
sbb
into
addb
xchg
jbe
popf
add
mov
push
int
inc
dec
stc
icebp
xchg
inc
push
mov
xor
sub
pop
mov
push
jb
dec
inc
pop
sbb
inc
in
mov
and
aas
push
mov
and
add
stos
pushf
and
xor
xor
adc
dec
dec
shlb
test
push
inc
mov
imul
dec
cmp
push
push
xchg
mov
add
push
ret
xchg
mov
push
adc
les
pop
or
pop
test
add
push
int3
insb
push
lock
adcl
es
jmp
test
rdmsr
rol
mov
aad
cmpl
lods
or
mov
sbb
and
add
rcrl
clc
pop
cmp
pushl
in
pop
pop
inc
jge
pop
ss
add
jb
push
xor
adc
pushf
add
jle
mov
bound
repz
push
ret
inc
aas
sub
pop
and
ret
add
fisubrl
pop
mov
mov
xor
mov
add
fs
das
add
cmc
add
mov
pop
mov
stos
mov
out
sbb
icebp
jmp
sub
mov
scas
imul
jp
mov
cli
addr16
push
hlt
ljmp
int3
pop
push
sub
addr16
or
shrb
stos
inc
ret
cmc
das
pop
test
shrb
mov
rol
sub
mov
inc
rcrl
pop
cmp
call
mov
add
dec
std
pusha
rcll
scas
xor
pop
adc
mov
push
rolb
sbb
fcomp
jns
lea
lock
xor
lock
jl
test
outsb
popf
add
cmc
adc
jo
dec
xlat
jbe
adc
jge
push
xor
leave
cmp
cs
or
push
pusha
or
mov
test
movsl
inc
lcall
push
xor
jmp
jle
push
rorb
mov
testb
push
push
mov
inc
xchg
add
add
sti
addb
adc
lea
lock
adc
xchg
aaa
mov
inc
lea
je
adc
cli
add
cmp
cmp
sbb
push
clc
call
xor
and
lea
mov
xchg
lock
push
jl
test
dec
mov
fidivs
push
loop
ret
loopne
sub
xchg
push
mov
and
or
andl
xor
pusha
in
mov
mov
pop
cmpsb
inc
push
inc
mov
push
cmp
add
jbe
mov
sbb
push
jge
push
mov
lock
ja
pop
add
mov
rolb
jle
jge
cltd
lea
in
push
and
int3
mov
pop
scas
mov
jge
or
cmp
inc
call
jge
icebp
pop
sub
add
loop
or
or
cli
push
inc
call
fadds
xor
cld
inc
subb
inc
jb
or
sub
ja
mov
mov
cmp
mov
push
mov
pop
push
cld
add
add
adc
jb,pn
movb
inc
pushf
je
xchg
xor
pop
sti
sahf
aaa
mov
les
rcl
adc
xor
imul
fldt
pop
hlt
hlt
mov
test
je
inc
and
cmp
adc
inc
xchg
ret
mov
adc
scas
je
mov
add
pop
cmp
dec
lea
hlt
icebp
push
aas
adc
pop
jmp
sbbl
jp
adc
inc
out
sbbb
lcall
sbb
sbb
std
and
jne
or
filds
or
inc
fwait
test
fnsave
ss
cli
outsl
jp
adc
hlt
add
push
bound
orb
or
je
mov
incb
fwait
add
ret
add
dec
cld
mov
adc
xor
loope
xchg
inc
pushl
cld
and
add
enter
test
fiaddl
loope
inc
mov
cld
pop
pop
lea
movsl
mov
add
fldcw
pushf
dec
mov
push
aaa
mov
insb
orl
call
and
push
je
inc
cmp
shlb
std
inc
mov
std
pop
push
sub
mov
stos
les
push
fs
pop
and
cwtl
lea
pop
ret
mov
xchg
insb
mov
mov
cmp
gs
aam
mov
cmp
insb
mov
loopne
mov
sbb
sahf
jl
cld
rcrl
movsl
out
mov
call
push
ljmp
mov
push
imul
fnstsw
negb
call
add
cld
jge
dec
adc
daa
cmp
jne
test
push
mov
inc
push
loope
mov
push
sub
dec
adc
xor
xor
adc
loope
mov
xor
and
add
leave
insb
pop
add
cmp
or
ds
lods
rcrb
mov
sti
jne
pop
pop
faddl
loopne
sbb
and
sbb
push
adc
inc
arpl
sub
pop
pop
adc
and
or
inc
sub
inc
test
jp
push
mov
insb
mov
int3
rolb
xchg
mov
hlt
test
sub
add
pop
ljmp
or
decl
shll
sahf
xor
xchg
mov
shll
mov
mov
out
aaa
cld
mov
xor
cmp
test
xor
adc
xchg
shrb
push
mov
and
and
mov
hlt
jne
fisubl
loope
fdivrs
cltd
push
lock
imul
mov
xor
xchg
lock
or
add
adc
adc
test
or
and
sub
rcrl
mov
scas
mov
idivb
ljmp
pop
push
scas
inc
ss
xchg
incb
lea
gs
and
jmp
stc
mov
inc
out
aam
aaa
cmc
out
dec
out
rorl
pusha
imul
mov
sbb
enter
push
movsb
js
movsb
orl
test
fistpl
cld
dec
cld
inc
inc
out
dec
gs
push
mov
out
fdivs
mov
push
push
clc
test
inc
shlb
xchg
andl
and
cld
in
jge
stc
movsb
mov
test
push
or
jbe
inc
cmp
stos
xor
sub
lret
pop
pop
add
sub
dec
fsts
mov
add
les
mov
and
int3
xchg
and
jp
xchg
loopne
mov
inc
jmp
in
hlt
mov
js
dec
adc
fdiv
out
addb
stos
jle
hlt
jnp
test
ljmp
inc
cli
enter
shll
test
andl
fwait
nop
movsb
mov
push
orb
mov
test
xchg
jge
xor
mov
ret
mov
pop
loopne
adc
xor
stos
jmp
mov
cmpsl
jnp
push
shl
and
in
rcll
scas
aam
fdivrl
es
cmp
dec
stos
inc
enter
loopne
xor
or
push
push
mov
pusha
push
lods
aam
sub
dec
mov
test
iret
fadds
ds
mov
mov
into
into
sbb
mov
ljmp
lea
mov
loopne
jmp
mov
test
sub
mov
cmp
lock
repz
and
lods
movsb
push
jl
mov
in
sbb
mov
repnz
jae
lea
mov
or
push
js
fadds
sar
jmp
inc
cwtl
je
ds
in
or
inc
out
daa
stos
fcoms
and
inc
dec
xchg
mov
mov
in
fxch
enter
pop
inc
mov
add
cltd
lods
jbe
test
ja
aad
scas
pop
subl
cmp
rolb
pusha
jp
inc
addr16
fs
dec
pusha
mov
call
cld
and
and
adc
push
push
ss
js
bnd
int
xor
pop
jl
pop
lret
cli
outsb
test
addl
push
aad
loope
pop
jo
and
add
inc
sbb
and
lock
outsb
out
dec
orb
in
cmpxchg
or
cwtl
cmp
scas
add
into
pusha
call
add
jno
lea
shll
mov
dec
mov
inc
nop
ss
push
decl
aas
or
inc
push
sub
xor
fdivrs
push
adc
mov
and
outsb
mov
pop
std
sbb
xor
cli
or
inc
test
fcom
pop
les
push
add
out
mov
fisubrl
test
xor
adc
push
fadds
mov
stos
xor
cs
pop
xchg
mov
pop
push
imul
xor
std
addr16
adc
clc
sub
sbb
jbe
sbb
mov
push
test
nop
sub
adc
jp
es
mov
mov
mov
cmp
call
fiaddl
rcr
or
pop
xchg
jl
fiaddl
inc
add
adc
adc
push
dec
int3
lock
xchg
and
inc
mov
adc
sub
push
negl
or
ret
pusha
inc
add
pushl
fstl
rcrl
adc
push
xor
repnz
add
ss
dec
ljmp
fiadds
je
dec
ret
movsl
sti
enter
gs
cmp
push
and
shll
xchg
dec
scas
jl
mov
outsb
dec
mov
sub
mov
pop
xchg
pop
cmpsl
mov
push
nop
sbb
mov
les
xor
insb
test
add
out
rclb
fstps
lcall
xchg
xlat
decl
sbb
pop
je
push
mov
leave
add
in
aas
dec
out
lods
lret
lret
push
sahf
xchg
js
and
sbb
fimull
test
adc
pop
mov
and
sub
pop
mov
enter
popl
orl
insb
fdivs
xor
push
dec
cld
or
or
xorl
jl
add
dec
adc
xchg
mov
sbb
xlat
divl
xor
pop
arpl
mov
test
lea
mov
mov
imul
xor
lcall
push
hlt
lcall
lock
mov
mov
xchg
add
test
das
mov
or
out
lock
shl
add
ret
out
cwtl
jle
cmp
jp
pusha
jmp
or
fmull
or
xor
lds
ret
xor
incb
adc
in
add
subb
subl
les
ja
bound
lock
js
push
sub
add
lcall
loopne
push
push
repnz
and
inc
cld
mov
sbb
dec
rolb
sub
push
stos
cmp
scas
add
mov
or
rcrl
push
je
xchg
fiaddl
add
fists
daa
movsl
sbb
clc
push
insb
mov
cmc
and
pop
sub
stos
cmpsl
push
loopne
je
add
push
mov
add
push
sarb
pop
push
ret
rclb
fs
push
inc
inc
imul
add
jp
dec
stos
pop
cli
or
andb
loop
shlb
mov
mov
jb
pop
xchg
push
push
mov
stos
inc
fs
dec
std
out
nop
pop
cmp
test
jmp
popf
sbb
add
int
cmp
mov
insb
inc
add
inc
ss
sub
movsb
in
outsb
dec
sti
push
hlt
je
loope
data16
adc
mov
subl
ss
insb
das
xchg
push
imul
je
outsl
add
push
pop
xchg
divb
push
or
lcall
inc
std
int
ljmp
imul
adc
fadds
into
jmp
fs
out
xchg
in
outsl
dec
or
cmp
xchg
push
popa
rolb
mov
cltd
cmc
add
cmp
mov
and
or
ret
pop
jno
push
mov
and
lret
nop
adc
add
movb
dec
push
lahf
je
sbb
adc
lock
sbb
loope
movsb
inc
sub
adc
adc
dec
lcall
sbb
lock
mov
out
xor
push
jo
xchg
inc
adc
stos
jo
adc
pop
loopne
sub
sbb
push
addb
mov
andb
xor
arpl
frstor
fcoml
js
inc
pop
scas
outsb
scas
lea
rolb
out
jo
push
mov
bnd
add
cld
negb
aam
add
or
sbb
add
lock
fcomps
xchg
jo
ret
xor
pushf
in
sbb
mov
xor
mov
call
scas
sbb
stc
add
das
push
fcoms
rorb
push
inc
inc
loop
sbb
dec
aaa
ret
rclb
bound
push
call
add
cmpsb
cmp
aas
push
push
in
cmp
sbbb
clc
inc
sub
push
into
imul
lret
clc
rorb
or
jb
xor
jl
and
pop
push
xchg
sbb
ljmp
inc
enter
cmp
test
imul
js
loopne
sbb
cmp
testb
jo
cli
cmc
fwait
push
inc
js
add
cmp
nop
adc
xchg
push
clc
and
ss
inc
mov
dec
call
push
movsl
ss
xor
jmp
mov
mov
aaa
pop
jl
fmull
mov
in
add
into
sbb
and
loopne
test
mov
push
sbb
outsl
fdivr
dec
push
insb
and
mov
bound
mov
xchg
adc
fldcw
inc
xor
pop
pop
or
cltd
sbb
fsin
push
aaa
mov
or
jecxz
add
add
fld
cmpsb
clc
popa
xchg
adc
jae
lods
clc
dec
insb
adc
fs
sub
adc
lock
push
sbb
int3
movl
cmp
or
mov
int3
loope
add
shrb
push
das
or
lcall
shlb
fadds
scas
out
nop
xchg
gs
sbbl
faddl
rolb
test
jae
mov
sti
xchg
data16
jb
cmc
scas
sub
in
push
inc
mov
pop
cli
call
lock
xchg
ret
mov
incb
repz
xchg
ud0
adc
rolb
cmp
sarb
test
inc
sbb
andl
test
adc
pop
or
sub
xor
movb
call
mov
sub
test
cld
pusha
pop
inc
andl
enter
pop
sbb
pop
add
test
clc
inc
pop
cli
jne
sbb
shrb
inc
and
inc
nop
loopne
xor
mov
mov
test
movsl
pop
sub
mov
add
sub
push
push
push
lret
sbbb
push
outsb
inc
in
mov
mov
xor
push
jecxz
xor
repnz
movsl
xchg
rcl
ds
mov
pusha
add
add
xchg
rcl
pop
push
outsl
and
dec
lods
jp
dec
push
adcl
adc
test
aam
push
pop
cli
call
inc
or
inc
push
das
push
jl
inc
dec
xor
dec
mov
cmpsb
mov
test
sub
adc
call
iret
pop
pushf
clc
add
push
mov
sbbb
jecxz
hlt
mov
jae
inc
leave
xor
sub
xchg
dec
xchg
mov
test
dec
test
pop
or
or
push
push
sbb
or
pop
fisubrs
pushf
js
ds
jmp
test
jge
lcall
loopne
flds
es
jle
aad
addl
fwait
xchg
sbb
or
das
xor
mov
mov
dec
or
or
shll
inc
ds
outsl
adc
add
add
rclb
decl
call
xchg
jp
adc
rolb
sub
add
or
test
push
lods
test
decl
adcl
xchg
push
sbb
add
scas
mov
shl
call
pop
sub
fdivs
sti
lcall
jo
pop
test
out
mov
adc
jnp
inc
movl
fldt
fildll
dec
cld
sahf
test
ds
dec
insl
jecxz
and
je
pop
int3
shlb
or
mov
cld
jno
xor
ret
std
jmp
inc
add
jmp
data16
mov
add
jb
mov
sbb
inc
sti
int
sub
sub
mov
push
inc
je
push
fistl
inc
adc
andl
icebp
pop
into
mov
mov
adc
sahf
aaa
fdivr
mov
xlat
mov
or
push
mov
or
shlb
mov
sub
or
add
rolw
mov
cmp
call
inc
dec
adc
pop
xchg
loopne
mov
rcr
gs
ret
into
loopne
clc
push
fiadds
push
pop
inc
test
adc
push
add
sbb
add
test
add
jbe
icebp
lods
jne
mov
or
cmp
stc
add
inc
int3
lret
add
jl
push
ljmp
bound
xchg
jecxz
xlat
mov
mov
mov
sub
inc
mov
int3
sbb
and
jmp
inc
mov
lret
repz
jae
and
in
fdivrl
pop
aam
mov
sbb
dec
movb
les
and
xlat
mov
dec
ljmp
push
sti
rcll
cwtl
mov
add
cli
adc
add
xor
mov
add
int3
inc
out
sbb
and
fsubrl
clc
sub
fdivr
jno
roll
pusha
pop
mov
loop
lock
and
and
inc
inc
arpl
mov
inc
lods
icebp
or
mov
icebp
cmp
push
pushf
lcall
into
es
pop
fcoms
cmp
pop
and
mov
xor
and
add
adc
cli
and
shr
inc
jne
or
sbb
lock
jmp
mov
xchg
cs
push
rcl
pusha
push
jno
into
jle
push
inc
mov
adc
pusha
outsl
or
add
es
test
jg
inc
es
jle
or
ret
push
sbb
ficoml
or
xchg
sbbb
je
ljmp
std
adc
nop
les
push
gs
sub
mov
lcall
in
adc
inc
pop
outsl
dec
inc
int3
sbb
rcrb
add
push
idivb
mov
sbb
xor
sbb
test
aas
fimull
add
cs
sub
sbb
xor
xor
mov
fsubr
add
fcoms
insb
cld
es
xor
sub
push
mov
inc
push
hlt
lock
xchg
mov
sub
and
mov
testb
and
into
inc
add
sbb
pusha
pop
mov
je
push
inc
push
and
adcb
fldcw
fdivrs
inc
mov
ja
or
sbb
add
lock
pop
push
lock
das
popa
int3
call
mov
push
js
inc
dec
xorb
mov
or
sub
dec
adc
pusha
push
push
or
or
add
stos
xlat
xchg
add
xchg
push
mov
dec
stos
add
fstpl
pop
nop
daa
adc
in
lret
mov
mov
dec
in
das
sbb
adc
addr16
in
ret
int3
xor
rol
xor
fs
add
and
rorb
and
shrb
mov
dec
mov
cs
dec
jmp
push
cmpsl
mov
adcb
cmpsb
ljmp
addr16
push
pop
and
or
cld
fcmovnb
or
ret
testb
dec
sbb
push
mov
jmp
pop
or
add
sbb
insb
mov
jmp
sbb
loope
adc
call
dec
xchg
je
jl
add
or
fs
popa
sub
ret
sbbl
dec
movsb
xchg
sti
inc
sub
cs
pop
add
jg
stos
xchg
jo
or
pushl
imul
push
xor
clc
subb
mov
call
ret
out
je
inc
subl
cmp
mov
jmp
loopne
mov
cld
in
ja
fisttps
into
data16
add
add
push
sbb
movsb
or
mov
mov
inc
cmp
inc
xchg
test
xchg
pop
jb
outsb
ror
mov
outsb
cli
cmc
loop
test
xor
or
fcmovnbe
cmp
push
cmp
fdivs
or
xor
loop
mov
mov
movl
mov
shlb
jle
cmp
pop
mov
or
cmpsb
dec
data16
xor
call
sarl
add
mov
loop
sarb
adc
test
mov
repnz
dec
nop
out
mov
sub
add
jmp
mov
mov
inc
push
testb
add
fcoml
mov
cmp
jl
into
ss
pop
cld
lret
mov
sub
and
or
call
jecxz
ret
mov
cmp
mov
cltd
cli
aas
out
xor
cpuid
shlb
jp
sbb
jmp
xor
pushf
in
jle
cmpsb
jl
test
and
je
nop
adc
push
jo
loopne
jo
cld
ljmp
dec
mov
jb
mov
cmp
cltd
and
les
loop
add
shll
fs
and
addb
push
inc
and
mov
subl
pusha
xchg
sub
cmp
mov
push
mov
mov
insb
popa
aaa
ds
sub
pop
dec
adc
call
lods
aam
dec
test
loope
std
fldt
rol
xor
cmp
call
pusha
ss
inc
mov
push
and
jp
xor
jmp
and
pop
lods
or
mov
fsubr
push
cwtl
nop
adc
cmp
call
faddl
pop
imul
movb
inc
shrb
test
jbe
xor
mov
cli
mov
xchg
pop
and
aaa
push
mov
inc
loope
mov
or
xchg
leave
jle
es
shlb
mov
adc
inc
lea
fldl
bswap
mov
mov
and
cmp
push
xor
gs
mov
xor
sbb
mov
dec
cmp
adc
jmp
notb
inc
or
cld
outsb
jl
ret
add
call
cmp
fnstcw
mov
xchg
movb
fwait
add
test
push
enter
sub
cmp
mov
pop
cmp
add
mov
and
ret
subl
cmp
xchg
mov
add
fists
push
loop
es
mov
in
and
push
mov
push
call
mov
idivb
xor
cmpsb
fists
rclb
roll
pop
pop
sub
mov
les
clc
into
ret
lods
roll
push
lods
mov
cld
cmp
in
int3
mov
out
xchg
push
sti
sar
dec
out
or
add
xchg
adc
dec
pop
fs
add
inc
add
fs
div
outsl
cwtl
mov
push
adc
add
shlb
orl
add
xchg
aas
fstpl
push
es
sbb
dec
fsubrs
pushl
push
cmpsl
movsl
push
mov
out
sbb
xchg
es
mov
icebp
loope
inc
mov
push
sub
loopne
sub
jno
sbb
std
mov
sbb
jg
and
rclb
addl
mov
sub
xlat
fisttpll
push
fiadds
rcl
or
add
mov
test
mov
mov
lea
shl
jg
outsb
adc
lea
jae
add
add
clc
xor
push
mov
mov
in
push
pop
cmp
inc
mov
push
add
iret
xchg
fs
mov
fcomp
ret
push
sbb
mov
mov
cli
inc
mov
imul
mov
insb
test
add
inc
pushl
and
rorl
mov
and
mov
jnp
movsb
jmp
mov
sbb
pop
mov
insl
imul
xor
in
xchg
mov
ret
je
fwait
rol
inc
test
mov
dec
mov
shrl
lock
bound
adc
inc
clc
call
push
xor
xor
and
pushf
add
pop
add
cs
push
jb
or
pop
dec
mov
pop
mov
sub
fisubs
insb
cmpsl
mov
pmuludq
adc
mov
outsb
add
gs
xchg
and
push
mov
xor
nop
data16
add
push
out
cmpsb
sbb
push
aaa
inc
mov
ljmp
sub
cmp
sub
mov
cmp
mov
pop
pop
daa
je
cmp
jp
nop
out
sub
xchg
je
sbb
push
call
pop
clc
rcrl
pop
loopne
sub
push
and
dec
sub
mov
push
sbb
mov
out
les
test
lcall
inc
stos
add
sbbl
add
pop
fidivl
negb
movsb
push
mov
lods
gs
out
insl
xor
cltd
test
or
ret
ret
add
mov
and
test
or
call
lods
lock
sub
xor
add
out
push
adcl
push
test
xchg
lcall
mov
fcom
test
ss
decl
cwtl
stc
xchg
mov
incl
and
ljmp
pop
shlb
mov
dec
jae
shll
lcall
mov
cmp
sub
add
xor
pop
mov
pop
dec
incb
jl
lock
add
aam
repnz
movntq
inc
lcall
push
aam
mov
lock
call
scas
mov
cmc
push
es
inc
lock
sub
xor
pop
sub
and
jge
mov
orb
push
and
or
rorb
push
mov
pop
les
in
xor
push
xor
and
pushf
jge
insb
cmp
xchg
test
pusha
add
dec
inc
mov
les
dec
push
adc
pop
xorl
mov
sbb
adc
out
int3
es
dec
in
ds
inc
nop
or
add
xor
push
add
and
sub
cmp
push
sub
cmc
imul
cli
mov
enter
add
adc
jnp
push
ds
jmp
inc
push
popf
and
push
inc
pushf
lock
or
pop
sub
adc
and
add
jbe
fsubrp
in
dec
inc
clc
syscall
fcmovu
jbe
in
test
adc
fistl
xor
lods
add
sahf
les
xchg
jle
scas
scas
mov
cmp
into
cwtl
mov
dec
arpl
jp
inc
andb
mov
cmp
xor
mov
or
cs
pop
sub
bound
push
les
and
sarb
jne
mov
mov
pop
push
insl
inc
jo
bound
sbb
pushf
scas
fidivl
les
fdivrs
loope
movsb
addb
bound
inc
cld
call
cmp
nop
xor
in
loope
xor
out
jl
sbb
mov
js
pop
sbb
scas
xlat
xchg
mov
rorb
xor
adc
mov
jge
mov
jmp
ret
pop
mov
dec
ret
out
add
repz
dec
mov
mov
pop
repnz
outsl
xchg
add
inc
xor
add
fwait
mov
ljmp
notb
or
jl
inc
xor
cmp
fdiv
adc
push
bound
or
and
call
add
sar
add
sub
inc
fwait
pop
or
sub
xor
call
sbb
and
mov
lahf
push
add
mov
data16
push
cmc
into
add
or
dec
mov
sbb
mov
insl
dec
clc
push
inc
or
rclb
adc
jnp
xor
dec
sbb
pop
clc
jp
imul
mov
pushf
test
test
inc
mov
arpl
push
xchg
add
sbb
mov
mov
jno
dec
orb
daa
push
and
bound
rorl
add
sbb
inc
scas
pop
imull
lcall
jo
add
cmpsb
aad
shlb
mov
mov
insl
mov
xchg
into
adc
les
sub
loop
mov
inc
cmpsb
jns
movsl
call
push
fdivrl
sub
in
add
dec
insb
pop
sbb
test
add
int3
and
data16
jle
lcall
cmp
ret
jp
adc
jle
mov
sbb
out
jle
jb
and
lret
pop
xor
mov
movsl
or
mov
jl
andb
je
adc
mov
test
mov
mov
incl
popa
popf
xchg
cmp
clc
mov
mov
aam
mov
stos
mov
repnz
sarl
mov
mov
icebp
push
dec
cmp
and
lsl
pop
divb
dec
mov
jo
int3
call
or
push
lcall
mov
mov
jbe
push
mov
mov
loop
sub
mov
add
cld
lea
fistpll
sub
and
clc
add
nop
shl
mov
out
add
aas
sbb
rolb
pop
push
ret
mov
adcl
fcompl
xlat
dec
test
std
popf
cs
jmp
mov
and
adc
pop
loope
divb
cmp
push
mov
cld
and
dec
push
sbb
in
cmc
aad
fisubl
das
lea
xchg
sbb
ljmp
stos
fldl
fs
or
clc
outsb
mov
push
call
lret
or
jp
outsb
cwtd
lahf
jle
add
inc
and
roll
fadd
adc
and
dec
inc
stos
pop
test
sahf
adc
lock
mov
jns
stc
and
jle
movsl
adc
lea
insb
sub
outsl
adc
cmpl
test
outsl
fs
cmp
xchg
ss
add
inc
pusha
ret
cwtl
iret
popa
xchg
cmc
aaa
mov
sub
xchg
xor
and
scas
push
sahf
pusha
and
loope
or
test
inc
fnstsw
shlb
or
lock
shlb
pop
inc
add
sub
xchg
pop
lock
cmc
lret
cmp
call
scas
call
inc
inc
mov
shr
clc
movsl
add
mov
add
mov
aaa
xor
mov
cwtl
loope
stos
imul
imul
int3
shlb
pushl
dec
mov
mov
movsb
pop
xorl
sub
xor
push
pop
xchg
inc
clc
or
add
imulb
ret
adc
daa
into
and
sbb
xchg
add
or
int3
xchg
test
mov
inc
sub
pushf
xor
jge
ret
cld
mov
dec
fs
dec
gs
push
pop
sbb
cltd
jb
lods
mov
fbld
testl
rclb
push
pushf
cmp
lahf
add
cmp
push
pop
test
pop
cmp
mov
add
fisttpl
dec
xchg
shl
push
and
push
or
sbb
rcl
rcrl
cmp
inc
jge
adc
inc
mov
or
sbb
adc
les
pop
and
addl
test
nop
mov
mov
dec
into
and
fiadds
and
scas
test
pop
mov
inc
adc
adc
lock
pop
adc
out
sub
cmp
cmp
and
mov
addr16
out
imul
int3
or
push
hlt
imul
jbe
jbe
scas
add
jl
or
fs
push
dec
pop
inc
lret
cmp
data16
fisttps
inc
adc
test
dec
bound
push
sbb
dec
mov
pop
push
mov
dec
cmp
daa
push
dec
mov
jge
inc
adc
adc
shlb
sbbl
cmp
test
call
push
jb
notb
jmp
repnz
cld
adc
and
adc
mov
lcall
test
out
lock
cld
adc
rorb
fisttpll
xorl
cltd
ret
inc
outsl
loopne
mov
push
sub
mov
inc
dec
mov
test
push
imul
jg
push
sbb
imul
cld
dec
ljmp
cmp
fiaddl
call
xor
testl
test
mov
jmp
cmp
mov
mov
rclb
xchg
or
pop
mov
div
test
rclb
jne
shrb
and
data16
inc
popf
cmp
mov
add
sbb
inc
loopne
roll
add
lock
cld
popf
ret
adc
cmp
push
adc
out
dec
std
add
push
ret
aam
inc
or
add
adc
fs
add
and
xor
cwtl
xchg
jp
outsb
adc
gs
jb
or
es
fwait
pop
push
mov
shl
rdpmc
cld
fadd
jb
mov
and
sbb
and
dec
mov
pushl
cwtl
movsb
push
xorb
inc
cmp
loopne
cmp
mov
mov
xor
std
jno
mov
cmpsb
fidivrs
into
hlt
dec
sbb
leave
add
mov
jp
sub
sbb
mov
pop
fsubrl
mov
or
sub
xchg
and
cli
add
das
sub
fisubl
mov
mov
aam
test
mov
fdivrs
iretw
in
inc
cld
cmp
sub
push
insb
test
fs
dec
add
shlb
addr16
jmp
insl
cmp
push
ret
test
cmpsb
inc
rclb
repz
jge
push
or
fcom
mov
shrb
test
adc
cmc
push
push
call
imul
add
icebp
int3
cmc
orb
jmp
js
in
outsb
fbld
les
clc
and
push
push
mov
mov
cmpsl
mov
mov
callw
lods
mov
mov
jmp
pop
mov
ret
mov
outsb
shlb
pusha
or
xchg
mov
sub
test
pushf
lahf
adc
or
xor
add
fs
mov
mov
push
mov
sbbb
xor
mov
jl
mov
push
int3
adc
jmp
mov
sub
mov
mov
stos
std
movsb
sub
enter
xchg
xor
fisttpl
push
mov
inc
jb
test
sbb
xor
dec
arpl
cmp
jle
sub
and
push
mov
or
push
mov
push
flds
push
sahf
xor
loop
ret
add
mov
sbb
push
rorb
dec
dec
pushf
ljmp
push
ljmp
push
sbb
cmpb
cmp
mov
mulb
repz
mov
add
mov
sbb
mov
or
jmp
das
push
bound
push
mov
add
je
pop
adc
adc
ss
cs
in
mov
clc
pop
adc
test
push
push
cltd
into
test
pop
mov
pop
scas
push
mov
jge
adc
ss
ret
add
clc
paddd
aad
xchg
stc
sub
clc
int3
sbbl
jb
dec
jp
mov
outsb
test
pop
add
dec
sub
lea
js
test
jge
call
dec
cwtl
sbb
mov
rorb
fs
in
hlt
and
ret
stc
sub
insb
fwait
lcall
pop
jo
push
lock
jb
dec
loopne
test
orps
sbb
outsb
push
sub
adcl
pusha
fmuls
or
insb
rcl
lds
add
pushf
add
sub
daa
clc
sub
rclb
js
js
shrb
inc
mov
int3
sbb
push
push
shrb
cmp
inc
mov
scas
sqrtps
dec
adc
mov
mov
mov
dec
mov
mov
mov
mov
add
xor
sbb
mov
sti
jo
mov
inc
add
insl
push
add
inc
dec
icebp
or
adc
push
push
xchg
push
ja
stos
push
outsb
jge
stos
mov
add
popa
mov
jg
test
or
pop
add
push
dec
nop
into
sbb
jbe
add
popa
addl
jmp
arpl
cs
pop
add
jg
ret
in
int
add
bound
add
or
out
popa
in
int3
push
jle
dec
movb
pop
divb
arpl
add
bound
pop
notb
sahf
adc
dec
adc
lock
pop
and
adc
add
or
insl
in
imul
dec
xor
push
fldenv
or
add
add
int3
inc
push
ja
push
mov
sbb
mov
xchg
xor
rcl
mov
ljmp
shl
push
add
je
inc
inc
lea
sbb
mov
shlb
mov
add
push
inc
cmpsl
jne
in
xchg
pop
mov
cli
sbb
cmp
pop
in
inc
call
jb
dec
clc
push
jbe
mov
dec
idivb
call
loop
nop
push
cmp
mov
clc
jmp
loop
xchg
hlt
hlt
nop
push
dec
rcr
outsl
test
loopne
push
mov
dec
jns
sub
sub
dec
xchg
mov
loopne
push
dec
mov
push
add
enter
push
in
lret
lock
stos
mov
fsubrs
xor
and
push
mov
jo
std
or
jp
icebp
mov
adc
mov
xchg
icebp
add
add
mov
mov
mov
cmp
pushf
shrl
jg
pop
clc
dec
push
mov
adc
adc
test
dec
push
or
pop
dec
xor
dec
outsb
mov
stos
add
call
add
inc
or
insb
stos
or
xorl
cmc
neg
push
adcl
insb
mov
xor
push
sahf
addb
sub
cmp
dec
sbb
lods
push
pop
lea
fcoml
sbb
mov
cmp
xchg
popa
add
data16
adc
xchg
fcoms
xchg
cmp
call
je
repz
dec
fstps
test
sbb
inc
cmp
or
xchg
mov
add
nop
push
xor
in
jo
push
xor
and
inc
neg
jle
test
mov
aad
ljmp
outsl
scas
frndint
xor
incl
sahf
fcmovu
sbb
call
mov
push
and
xchg
xor
movl
push
in
or
fadd
sahf
jge
cmp
lods
out
or
pop
xchg
xor
adc
stos
arpl
dec
stos
mov
xor
and
sub
fisttps
and
push
add
add
add
xor
nop
cmpsb
push
add
orl
mov
stos
fiaddl
push
or
or
and
xor
sahf
add
adc
jo
dec
sub
mov
jbe
test
movsl
aad
loop
mov
lret
orl
lcall
xlat
mov
mov
and
mov
les
mov
push
ret
push
xor
xor
mov
jae
inc
rclb
sbb
in
jne
rcrb
sarb
sar
popa
jnp
idiv
sarl
add
je
xchg
movsb
fiadds
aam
test
out
or
aaa
and
les
ret
ficompl
aas
and
cmc
xchg
xchg
cmp
clc
or
and
xchg
fsubl
add
dec
loopne
add
and
jne
shr
mov
xchg
shlb
sbbl
jb
call
imul
cmp
daa
icebp
xorl
mov
push
sub
fcomp
dec
and
pop
ljmp
sub
jbe
sub
test
hlt
sbb
cld
insl
push
test
mov
dec
sbb
mov
loopne
xor
rclb
testb
xor
push
in
mov
mov
lock
adc
leave
dec
pop
sar
in
mov
sbb
jae
call
sbb
in
sub
push
and
xor
loopne
call
nop
mov
test
cmp
jge
xchg
call
push
and
push
dec
or
ffreep
fadd
or
stos
and
lret
push
pop
mov
je
test
jb
cmc
in
mov
dec
mulb
sub
push
enter
cwtl
push
mov
adc
xor
cltd
push
sub
daa
jnp
and
lock
cld
pop
aam
jl
filds
jae
jns
xor
int
push
or
lret
mov
loope
xor
fwait
xor
out
movsl
or
lcall
flds
add
ds
call
cmp
push
inc
test
insb
xor
nop
jnp
mov
in
jnp
sub
jo
inc
push
mov
jb
xor
jmp
or
data16
cli
push
lea
push
mov
fdivr
and
inc
fimull
or
add
dec
subl
lock
int3
xchg
push
mov
dec
ret
sti
and
push
mov
cmp
ret
and
in
mov
and
inc
xchg
xor
int3
add
or
cmp
adc
daa
pop
mov
call
add
inc
in
and
je
or
shlb
mov
mov
mov
push
inc
xor
int3
pop
push
inc
popf
pop
push
xchg
mov
data16
sub
or
sbb
imul
stos
rolb
mov
pop
jl
inc
bound
jmp
add
add
add
loopne
cmp
sub
push
lea
loope
mov
ss
in
outsl
and
mov
stos
mov
cmp
push
outsl
mov
mov
data16
sahf
sahf
fiadds
and
cmpb
jne
push
or
incl
adc
push
add
add
inc
int3
imulb
andl
rclw
andb
enter
xchg
pop
mov
cpuid
lock
test
mov
ds
adc
test
ss
or
cli
and
pop
mov
bound
push
mov
insl
ret
dec
or
les
rolb
mov
shlb
test
movsb
xchg
nop
lock
fnstenv
push
dec
inc
cmp
pop
ljmp
and
xchg
incb
or
cwtl
icebp
pop
add
or
jle
sbb
push
test
std
push
mov
push
fdivl
out
aas
add
incb
mov
push
lea
outsb
and
sahf
testb
pop
mov
daa
adc
test
push
inc
pop
popf
add
mov
dec
rcll
jg
fcmovnu
inc
add
pushf
dec
cmp
ds
inc
pop
stos
call
stc
mov
hlt
inc
add
mov
fsubr
mov
data16
in
push
daa
es
mov
imul
fwait
sbb
aaa
mov
or
inc
xor
mov
adc
jp
jmp
repz
rolb
push
jg
mov
sbbb
add
mov
lods
fildl
cld
pop
xor
lock
inc
jp
out
divl
mov
enter
or
sarl
sub
mov
jnp
xchg
cmpsb
loop
dec
dec
mov
xor
sar
loop
cmpsb
sti
cmp
add
pop
push
dec
fisubs
or
xor
jle
cmp
aam
or
xchg
pop
push
lock
mov
les
or
push
mov
add
aas
cmp
xor
xor
or
or
and
int
push
mov
mov
cs
test
inc
loope
and
mov
sbb
ljmp
push
sbb
pop
scas
adc
push
ljmp
test
xor
mov
pushf
fadd
inc
xor
fwait
or
test
mov
pop
pop
pop
and
js
jle
ret
push
dec
jne
jns
nop
jbe
stos
jb
lea
mov
scas
sub
adc
dec
lods
add
mov
cmpb
push
test
popl
inc
xor
and
icebp
jmp
gs
inc
repz
data16
nop
hlt
pop
add
enter
adc
xlat
jmp
mov
enter
xchg
dec
adc
pop
test
stos
push
push
dec
out
clc
mov
jb
stos
adc
lret
push
push
xchg
sbb
sbb
cmpsb
fcompl
push
add
dec
loopne
pop
push
push
or
hlt
xorl
jl
pop
sahf
and
orl
fmul
adc
jmp
push
mov
imul
add
test
mov
icebp
cmp
aad
adcl
outsl
sbb
insb
mov
push
aaa
adc
fnstcw
outsb
lcall
fldenv
shlb
hlt
in
pop
test
and
mov
sub
add
int3
push
cli
call
loop
cwtl
or
lods
adc
sar
fwait
mov
mov
and
push
sub
pusha
lahf
test
jns
movsb
icebp
cmp
jp
sbb
xor
movsb
mov
cbtw
imul
mov
sub
add
cmpsb
hlt
ja
shlb
lcall
data16
or
test
andl
xor
insb
push
jae
ljmp
xor
fcmovne
dec
cs
popf
mov
pop
pcmpeqb
fisubl
call
lock
pop
dec
push
cmp
es
cwtl
jne
adc
test
outsl
ja
inc
flds
and
jo
jne
test
add
or
mov
ss
push
fsubr
mov
and
xor
mov
pop
xor
add
pop
ljmp
mov
scas
add
clc
sbb
je
in
je
add
stos
jl
outsb
xchg
movsb
rcrl
push
fildl
pop
rorb
or
pop
inc
and
xchg
shlb
hlt
dec
xchg
arpl
mov
xor
push
jecxz
add
xor
fisubrs
push
movsb
popa
inc
dec
pop
inc
push
xor
mov
insl
jmp
mov
mov
loopne
sbb
sbb
dec
sbb
stos
inc
ret
fsubr
aad
xor
ret
cld
popf
jge
and
jmp
fistl
leave
dec
data16
push
cmp
add
lock
mov
imul
add
mov
insb
mov
scas
push
fs
in
xchg
sbb
or
in
or
push
decl
push
xor
clc
test
xlat
or
sbb
rcrb
lods
xchg
xor
xlat
fsubrs
pop
push
les
mov
or
mov
shlb
cmc
je
movsb
push
mov
xchg
pushf
mov
ljmp
js
add
ffree
js
fadds
ret
gs
add
adc
es
jbe
mov
inc
cwtl
cmp
jnp
loope
cwtl
divb
jle
pop
fcoms
sti
adc
add
push
testb
mov
dec
andb
push
push
int
dec
std
add
jmp
mov
mov
test
xchg
or
js
xor
test
in
fdivrs
rcrb
incl
mov
add
push
mov
call
fisubrl
leave
orl
sarb
ret
cld
mov
lea
xchg
lods
aaa
sub
loope
mov
jmp
mov
mov
jo
cmp
sub
mov
bound
add
add
mov
mov
add
dec
add
push
clc
jge
insb
ds
push
ljmp
xor
jp
push
cmp
mov
lods
lods
scas
and
jo
out
add
mov
cmp
rorb
jbe
sub
test
mov
dec
inc
xor
std
sub
scas
inc
jae
push
popa
je
adcl
push
shrb
bound
aam
and
jg
mov
cmpl
push
aam
xor
js
pusha
push
mov
xchg
incl
bound
call
shl
adc
rorb
punpckhdq
push
mov
cmovg
xchg
push
mov
adc
inc
movsb
inc
cwtl
push
cmp
stos
out
mov
bound
into
enter
ja
and
or
in
lret
leave
push
adc
pop
addr16
sarb
addb
add
incl
shlb
add
mov
push
sarb
jmp
call
addb
sub
add
imul
xorl
add
inc
mov
jae
or
mov
dec
xor
inc
push
test
mov
inc
add
push
fstps
add
cmp
dec
push
js,pt
les
stos
std
dec
aaa
adc
and
cmp
clc
jnp
and
add
or
mov
dec
pop
dec
fimuls
xor
data16
xor
inc
in
rcrb
clc
in
sarb
incb
xchg
mov
push
adc
or
rcrl
or
push
lock
add
pop
insb
sbb
mov
enter
fmull
cld
dec
sbb
ss
fidivs
sbb
enter
xchg
in
inc
loop
push
adc
mov
lret
sub
push
adc
inc
xchg
xor
jne
test
pop
loope
or
into
cwtl
dec
imull
shlb
mov
adc
sub
hlt
xchg
jg
test
idivl
leave
push
adc
push
ljmp
idivl
or
jl
cmpsb
test
mov
add
je
cmp
dec
sbb
push
sbb
movsb
cmp
inc
ss
dec
add
inc
pop
jp
dec
leave
push
pop
je
mov
push
aas
dec
add
pop
or
pop
mov
cmpsb
mov
cli
into
ret
sbb
sub
push
mov
dec
mov
cmpsb
lahf
les
push
push
or
fsubrs
push
cmp
pusha
aam
mov
test
mov
mov
call
jb
and
mov
rcrl
je
add
fwait
icebp
fs
push
ds
ret
cs
aaa
pop
ret
out
xchg
push
mov
pop
and
jge
jne
movsb
adc
jp
sbb
rorb
in
xchg
push
dec
cmp
adc
dec
inc
adc
add
ljmp
pushf
or
inc
mov
cmp
loopne
jmp
sbb
xchg
inc
test
arpl
loopne
pop
or
cmp
je
mov
push
and
sbb
or
add
cmpsb
scas
cmc
push
sub
mov
int3
mov
rclb
stc
jno
xor
jl
data16
or
and
pop
in
add
scas
mov
dec
push
fdivrl
nop
test
cmp
jno
mov
subl
push
adc
ljmp
pop
loopne
sub
inc
nop
or
push
data16
in
shrl
inc
rcr
lods
mov
and
jb
lds
sub
sbb
adc
ret
push
xchg
push
xor
xor
outsl
bound
movsl
inc
lds
adc
or
loope
adcl
nop
push
outsb
repnz
je
test
popf
push
push
movb
enter
inc
test
dec
xchg
ja
push
xor
mov
cld
test
bound
shlb
jle
mov
pop
sbb
mov
test
ret
sbb
jg
cli
mov
add
push
mov
sub
punpckhbw
lock
pop
or
add
dec
cwtl
ljmp
jmp
cmpsl
cmc
mov
gs
dec
mov
shll
push
dec
fwait
rclb
cmp
xchg
pop
fs
pop
push
pop
inc
call
xchg
lock
add
push
cld
sbbl
sarl
movsb
in
cmp
mov
inc
test
xor
orb
ret
aam
sub
sub
mov
pushf
inc
sahf
add
mov
cmp
add
jne
add
mov
push
adc
or
in
into
xor
test
jle
and
aaa
jmp
jmp
icebp
js
adc
test
imul
adc
push
or
icebp
mov
dec
xor
pop
mov
push
push
out
push
pop
sar
and
adc
and
lahf
lret
xchg
dec
loop
dec
les
movsl
cli
add
fnstcw
xor
outsl
pop
repnz
aas
xor
adc
iret
mov
push
in
clc
je
stc
in
mov
adc
cli
push
jb
fisttpll
inc
mov
inc
xchg
lret
clc
inc
mov
lock
adc
adc
push
mov
jbe
shlb
sub
sub
outsb
adc
movsb
pop
mov
cld
in
mov
cmp
mov
push
add
pop
push
decb
enter
push
rclb
mov
cld
sahf
test
lock
mov
mov
push
cmpl
sbb
pushw
add
enter
cwtl
mov
push
mov
seto
xor
xor
mov
add
sub
sbb
mov
jp
aam
add
or
lret
xchg
add
into
clc
jne
in
mov
sbb
and
sbb
fs
add
shlb
sar
je
call
push
jecxz
sub
push
xor
add
hlt
int3
add
test
xchg
shlb
or
movzwl
dec
shrl
mov
insb
dec
loopne
xor
jg
in
and
pop
adc
test
push
cmp
cli
add
std
inc
pop
leave
adc
test
adc
xchg
gs
add
pop
sub
jne
ss
shl
and
stos
pusha
ret
or
ror
xor
fists
punpckhbw
test
adc
mov
jle
xorb
ret
adc
lret
fcoms
pop
dec
lods
cmp
sub
mov
cs
add
cli
or
cmp
sti
cmp
jmp
adc
aad
jmp
and
pop
adc
fwait
sbb
inc
dec
sbb
mov
xor
out
repnz
cmpsw
clc
orb
sub
add
xor
mov
mov
xor
jle
testl
mov
add
outsb
xor
stos
les
mov
loopne
sub
daa
inc
push
mov
add
leave
xor
daa
jno
push
xchg
push
out
lock
fimuls
shlb
xor
xchg
pusha
xchg
push
mul
rol
fdivs
adc
movsb
jle
add
test
adc
cli
outsl
mov
mov
into
push
gs
ljmp
add
orl
gs
sub
xlat
das
mov
push
mov
sub
push
pop
int
punpckhwd
ret
mov
lret
movsb
mov
push
mov
mov
xor
sbb
test
call
fists
sub
lea
add
adc
fs
incb
mov
cmp
mov
adc
mov
insb
pop
adc
push
mov
sub
inc
das
sbb
cwtl
dec
sub
or
pop
inc
add
outsb
jl
scas
cmp
dec
push
cwtl
and
iret
leave
jb
jg
mov
jb
adc
test
or
add
fmull
loopne
faddl
cmpsb
adc
dec
inc
cmp
cmp
adc
ja
call
mov
pop
cmp
push
cwtl
outsb
add
les
inc
inc
sub
sbb
call
and
incl
bound
sbb
push
mov
or
lea
arpl
in
std
sub
lock
mov
ret
pushfw
mov
cmp
into
mov
call
add
pop
push
push
mov
sahf
cli
adc
mov
leave
ret
inc
cmpsb
push
mov
sub
lock
movsb
pop
pop
es
clc
les
pop
dec
mov
mov
outsl
es
and
and
push
xchg
sbb
xor
mov
add
scas
cmp
mov
adc
mov
mov
dec
and
xchg
adc
add
jo
inc
or
fidivl
or
pmaxub
fs
jo
pop
jp
pop
movsb
out
adc
out
cmp
and
lea
mov
pop
adc
push
jns
out
pop
loopne
repnz
push
lock
push
mov
nop
inc
mov
movb
inc
fcmovnbe
xor
shr
pop
pushf
decb
jmp
pop
rol
cs
out
fcompl
cmp
addb
jl
pop
cld
inc
mov
mov
xor
xor
dec
lods
cwtl
mov
mov
adc
dec
das
rcrb
ret
imul
imul
shrb
cld
jle
jg
test
ret
xor
add
loop
pop
mov
pop
movsb
add
shl
mov
adc
pop
mov
fiadds
and
rclb
arpl
mov
add
cmp
mov
clc
add
test
add
fwait
jp
push
out
ss
rolb
push
scas
imul
adc
dec
ljmp
mov
xor
lea
mov
sub
test
jl
add
cmp
cmp
push
push
adc
push
xchg
mov
mov
cmp
xor
test
or
dec
and
or
cmp
and
mov
xchg
fs
or
andl
fwait
pushl
ret
dec
cli
nop
mov
test
push
repnz
out
add
popf
jbe
sbbl
or
shlb
or
sbbb
mov
aas
add
mov
loopne
and
mov
mov
fdivrl
enter
pop
sub
sar
test
daa
in
in
mov
adc
jb,pt
sbb
in
outsl
cmp
repnz
jmp
call
leave
pop
inc
mov
ficoml
adc
adc
or
js
pushf
mov
mov
sbbb
push
or
movsb
inc
push
cmp
add
cmp
jo
or
inc
cmpsl
add
sub
call
aas
inc
push
adc
mov
xor
or
lods
testb
aam
sub
leave
jo
dec
movsl
add
aad
mov
roll
dec
inc
loop
outsb
gs
mov
push
add
xor
mov
fcmovnbe
mov
data16
out
cmp
xor
sub
cwtl
push
xor
clc
inc
call
test
pop
ret
xor
imul
mov
xor
sub
inc
adc
add
test
roll
or
push
adc
dec
cmc
dec
ret
faddl
xchg
test
adc
sub
cld
ret
lods
pop
jle
xor
je
add
cmp
pop
sti
mov
js
cmpsl
adc
jne
dec
cld
or
imul
fwait
jbe
sbb
clc
pmaxsw
push
pop
icebp
leave
add
movsl
push
divb
loope
jbe,pt
movsb
in
mov
fwait
mov
clc
cld
inc
sbb
pop
xor
cli
cmpb
mov
and
add
add
jl
mov
not
inc
xchg
or
jb
mov
movsl
push
xchg
les
xchg
popf
mov
iret
push
pushl
xor
mov
sbb
insb
push
xor
dec
cmp
ret
setnp
pop
jne
out
mov
sahf
lods
jae
movsb
loopne
divl
adc
js
test
xchg
call
jge
popa
cmp
xor
adc
pusha
in
and
jnp
addr16
jle
and
int3
mov
test
decb
icebp
xchg
mov
pushf
les
je
sbb
mov
cmp
mov
mov
enter
add
cld
in
adc
xorb
sub
rcrb
inc
gs
xor
fidivl
pop
cmp
dec
push
add
sub
enter
int
push
mov
dec
lcall
push
pusha
xchg
push
stos
test
scas
add
inc
lret
mov
push
add
into
jl
xchg
dec
inc
jecxz
pop
xor
faddl
push
je
pop
sub
jne
adc
aad
push
ljmp
adc
mov
mov
adc
sub
test
test
cmp
dec
lret
adc
mov
pop
push
push
pushf
sub
cmp
out
call
mov
add
shlb
jge
ret
fists
fs
cmp
add
loopne
rcrb
lods
das
jo
xchg
outsb
test
lods
mov
xchg
push
fmuls
data16
fmuls
imulb
mov
repz
popf
mov
inc
push
ret
push
sbb
movsl
movsl
aaa
nop
sub
add
imull
and
js
out
add
adc
sbb
nop
aam
ja
adc
push
xor
aas
mov
cld
and
sbb
scas
mov
dec
int3
xor
js
jp
mov
cmpl
and
mov
mov
add
lods
aas
ss
int3
call
inc
mov
pop
add
xor
dec
cmp
pop
loopne
dec
jo
fcmovnu
ret
mov
mov
pushf
or
add
xor
negb
ljmp
push
jmp
arpl
cmpb
lea
push
pushl
loope
jae
pop
pusha
jbe
mov
lods
adc
lea
adc
adc
loopne
sbb
inc
add
mov
pop
sbb
mov
adc
adc
inc
mov
jecxz
push
push
fs
adc
xor
jb
outsb
add
push
push
jnp
add
test
mov
sarb
sbb
or
sub
les
xchg
pop
mov
pusha
lods
add
dec
adc
inc
sub
inc
fs
jne
mov
outsl
cmp
daa
dec
jge
add
sbb
mov
mov
scas
cwtl
movb
sub
js
shlb
xor
scas
dec
std
leave
movb
jno
push
mov
mov
pop
xchg
add
mov
sub
enter
sbb
mov
loop
ret
xchg
hlt
js
loope
xor
fwait
or
jo
loopne
mov
aas
aad
cmp
jbe
pop
pop
push
or
cmp
subl
and
mov
adc
add
insb
mov
pop
xor
fisubl
adc
lock
mov
cmp
imul
sahf
les
xor
pop
cmpsb
add
mov
scas
mov
mov
das
cli
xor
loopne
jo
mov
sub
inc
lods
xchg
jecxz
loopne
cld
fcoml
pop
hlt
cmp
push
xchg
add
fdivs
cmpsb
push
push
mov
insb
inc
jbe
int3
push
fists
ret
int3
cmpsb
cli
lock
lret
sbb
or
ja
mov
push
push
rol
nop
sbb
imul
insb
adc
pop
add
push
sub
daa
jne
sub
mov
adcl
sbb
scas
inc
dec
push
xor
rclb
rolb
inc
lods
push
rolb
mov
shrb
xchg
lock
add
add
outsb
aaa
incl
loope
cmp
cmpsb
cs
orb
out
data16
add
call
dec
xorb
subl
pop
into
leave
pop
sub
leave
push
inc
xchg
add
mov
jl
pop
sbb
iret
mov
push
pop
clc
sub
int3
aam
jne
push
adc
sbb
or
call
and
lods
mov
movzbl
jg
mov
mov
idivb
push
dec
hlt
idivl
adc
fbld
roll
inc
xchg
mov
ret
or
lea
or
mov
loope
jp
push
xor
mov
iret
subl
and
ret
into
xor
into
stos
movb
test
mov
or
jmp
ljmp
jmp
cmpsb
pop
fsubl
addb
test
inc
outsb
push
fdivrs
movsb
loope
lcall
and
and
je
movsb
orb
xor
mov
mov
pop
sub
mov
arpl
pop
lock
dec
sub
cmp
incl
and
cwtl
sub
inc
add
mov
push
int3
fcoms
mov
inc
clc
xor
inc
xchg
add
call
push
push
inc
adc
pop
inc
lret
sub
cmp
or
mov
outsl
xchg
enter
add
and
ficompl
mov
sti
push
pop
es
aad
push
jbe
aam
cmp
push
mov
cvtps2pd
ja
or
add
aaa
loop
pop
cld
push
pop
mov
add
push
push
and
xchg
ja
fwait
outsl
jo
mov
push
mov
jno
adc
jmp
xor
mov
push
pop
insl
fildll
in
aam
and
push
scas
mov
sub
or
femms
jmp
cmp
rcll
or
std
and
jle,pn
pop
data16
mov
mov
cmpsb
mov
mov
mov
push
dec
mov
inc
lahf
test
push
cmp
adc
and
adc
or
mov
jl
lcall
fmull
mov
out
xor
add
enter
popf
insb
jecxz
pop
xor
adc
pusha
into
pop
xor
inc
aaa
dec
mov
clc
adc
and
ret
es
pop
inc
out
loopne
push
cld
jbe
ds
les
or
mov
cmp
xor
pusha
mov
in
sub
jmp
cli
add
popa
jge
add
push
or
insb
xchg
cmp
jne
shl
jl
cs
or
aad
bound
loop
test
hlt
imul
cmp
leave
push
push
inc
and
and
pushf
push
inc
insb
hlt
psllw
cs
aad
push
push
push
mov
inc
fiaddl
push
pop
addl
and
dec
and
push
mov
adc
addl
fcmovbe
add
clc
mov
sar
jge
outsb
push
ss
mov
cmp
dec
call
rorb
mov
inc
jp
cli
mov
or
aaa
decb
popa
cmpsb
inc
add
push
push
xor
dec
cmp
push
je
dec
xchg
cmp
mov
mov
incl
or
data16
incl
bswap
cmp
daa
jb
je
shll
lcall
popa
dec
or
mov
sarb
jp
jae
inc
cmp
dec
popf
add
inc
sbb
jmp
jb
xchg
mov
imul
es
or
mov
call
cmp
xchg
lret
out
mulps
push
sbb
mov
add
jae
lea
pop
subb
xchg
daa
test
repz
leave
clc
pop
dec
cmp
xchg
jge
add
rorl
add
mov
pop
hlt
jo
neg
cli
cmp
adc
hlt
sar
stc
in
outsl
and
inc
test
mov
inc
fadd
sbb
xchg
adc
fbld
ficomps
outsb
pop
outsb
lret
sarb
xorb
lret
mov
xchg
mov
add
lods
mov
or
adc
sub
movsl
add
std
xor
and
test
dec
xchg
cwtl
shll
ljmp
int3
push
jb
int3
jge
inc
mov
leave
mov
mov
out
roll
sbb
std
and
xor
cmpsl
pop
fs
insb
push
push
add
fisubl
jb
movsb
aam
or
jns
inc
push
fucom
push
arpl
push
mov
incl
imul
push
ljmp
call
adc
outsl
add
hlt
push
clc
xchg
push
into
outsl
psubsw
push
push
xchg
or
xor
sub
cmpsb
push
sub
inc
clc
fidivrl
jb
cld
push
pop
fwait
push
aaa
and
int3
mov
pop
push
in
cli
xor
in
dec
xor
xor
cli
fwait
add
movl
leave
stc
cmp
adc
insb
shlb
ret
fcoms
pop
call
mov
test
pop
xor
pushf
sbb
fsts
out
push
inc
mov
xchg
mov
or
mov
nop
stos
sub
cli
bound
je
mov
push
test
mov
inc
test
sbb
es
jne
sbb
call
jl
jmp
push
inc
inc
mov
outsb
outsb
push
loop
jp
in
ds
jg
incl
mov
arpl
mov
movl
bound
enter
test
adc
xchg
lock
mov
xchg
jbe
dec
iret
mov
fwait
mov
push
or
push
dec
insl
rolb
outsl
pop
call
jle
jo
call
mov
cld
jmp
mov
stos
out
add
cmc
hlt
add
pop
je
ret
pop
pop
jle
test
int3
mov
cli
xor
add
cld
jo
rolb
inc
mov
or
mov
push
inc
pop
cmpsb
jmp
add
je
inc
movq
xchg
mov
in
push
dec
repnz
adc
mov
pop
xor
jne
orl
in
xor
cli
add
cmp
mov
inc
sahf
mov
insl
loope
fidivrs
sarl
sub
jg
xchg
scas
adc
test
mov
shrb
icebp
fistl
cmp
movsb
push
push
movsl
pop
mov
inc
lock
or
fmuls
xor
movsl
pop
ss
adc
mov
out
mov
jmp
mov
incl
xor
add
sub
pop
cmp
xor
fimuls
or
mov
push
dec
jne
sub
push
fistps
call
pusha
mov
inc
add
cltd
pushl
or
arpl
sbb
jo
jle
je
jo
dec
push
int
sarl
or
sbbl
push
pop
mov
aaa
jl
dec
into
shr
jns
out
pop
int3
cmova
clc
mov
outsb
fs
mov
test
xor
push
add
dec
icebp
orb
cmp
or
jnp
mov
test
add
ds
insb
sar
cmp
ljmp
inc
pusha
pop
loopne
add
cmpsl
or
mov
movsb
mov
cli
insb
xor
movl
insb
fsubrs
dec
movsl
sti
cmp
daa
mov
add
mov
lock
imul
add
jge
inc
sub
mov
inc
mov
jne
adc
pusha
adc
icebp
adc
test
mov
js
push
adc
mov
shrl
fisttpl
mov
imul
adc
int3
repnz
mov
popa
js
ret
in
insb
mov
les
outsl
je
sbb
movsb
lret
sbb
jg
push
push
cli
xor
inc
pop
push
insb
add
push
mov
adcb
out
incl
jo
add
add
push
outsb
add
cltd
push
or
dec
or
add
adc
xchg
xchg
mov
pop
pusha
push
cs
mov
mov
stc
or
int3
xor
sbb
cmp
sbb
test
or
sub
insl
dec
pushf
mov
nop
fcomp
or
mov
jne
js
loop
add
leave
adc
fstl
lods
insb
cld
mov
adc
test
push
aaa
adc
lods
loop
adc
or
jnp
and
orb
or
leave
inc
sbb
cmp
mov
data16
jl
cld
fstl
cmp
bound
dec
add
lds
fildl
add
sarb
sarb
pop
lret
outsb
adc
mov
in
rorb
dec
ficompl
sub
lcall
in
rolb
sbb
dec
pop
or
or
sub
stos
das
or
add
js
inc
push
gs
jbe
push
mov
pop
in
push
call
sbb
xchg
pop
fidivl
pusha
pop
sbb
xor
or
and
cmp
cmpsl
scas
cwtl
jne
into
push
mov
sub
pop
jg
add
mov
bound
mov
ret
mov
inc
add
push
in
inc
push
adc
and
add
or
rolb
jae
jp
ret
mov
or
pop
ljmp
dec
jnp
adc
push
push
clc
pop
mov
cmp
test
gs
adc
jno
sahf
inc
ret
push
lea
scas
cmp
movsl
pop
jge
dec
inc
xor
mov
hlt
push
cltd
int3
into
test
mov
ss
popa
pushf
lods
gs
xor
je
mov
xor
mov
aam
movsl
push
outsl
or
imul
add
adcb
clc
jo
mov
cmp
rorb
dec
lods
sub
ret
fildl
sub
xor
pop
lock
jge
push
test
movsb
ja
adc
mov
ficompl
xor
pop
fdiv
cmpsb
xor
mov
mov
dec
or
mov
xor
or
push
xor
pop
or
pop
add
das
sbb
adcb
jmp
adc
push
mov
addr16
cmp
add
push
aas
mov
out
xchg
sub
and
out
fs
rolb
and
mov
sub
ja
xor
lcall
fidivs
push
adc
cmpb
mov
sahf
sbbb
sbb
aam
aaa
mov
mov
mov
insb
mov
adc
test
ljmp
jbe
cltd
cli
rorl
fildll
unpckhps
add
dec
jp
push
mov
add
adc
cli
sub
push
pop
js
add
sbb
adc
repnz
push
or
sub
xor
out
mov
pop
addb
pop
xor
inc
jae
mov
addr16
loopne
bound
or
rcl
mul
bswap
shr
push
mov
add
cmp
pusha
mov
clc
cli
mov
jecxz
or
and
sahf
pop
ljmp
in
sub
xchg
aas
sbb
pushf
or
ds
mov
xor
sub
xchg
lock
outsb
leave
pusha
insb
mov
adc
inc
push
inc
mov
inc
cmpl
xor
mov
fsubs
push
or
ret
or
jo
or
in
notb
jecxz
mov
add
inc
pop
pop
dec
mov
push
mov
mov
jae
int3
lods
cmpsl
xor
xor
xor
jle
sarb
push
add
push
js
cmp
mov
push
mov
stc
inc
lea
pop
push
jmp
pop
mov
repz
mov
or
nop
in
cmp
xor
adc
mov
pop
es
mov
test
mov
outsb
cwtl
inc
fists
mov
cmp
xor
add
cli
loopne
add
iret
push
and
mov
push
add
inc
mov
inc
mov
mov
inc
add
cld
pop
mull
cmp
pop
fsubs
mov
loopne
mov
lcall
ss
inc
fwait
mov
imull
dec
and
pushl
hlt
ljmp
push
shlb
add
xor
push
in
clc
sbb
les
mov
inc
test
int3
jbe
jl
mov
pop
sbb
mov
cmp
fldl
cli
lea
pop
inc
xor
clc
bound
cmp
test
push
adc
push
adc
ljmp
adc
inc
incb
bound
or
push
dec
ret
xor
les
lret
add
inc
adc
or
aas
mov
sbb
and
add
fwait
adcb
aaa
stc
and
pop
inc
and
data16
andb
or
cld
xor
push
call
pushf
mov
mov
lock
cmp
push
inc
push
sbb
cvtps2pd
inc
sar
js
dec
xor
mov
mov
add
mov
test
sbb
cmp
ljmp
inc
mov
mov
sarb
jo
mov
pop
and
mov
jle
add
cmp
mov
enter
cmp
rolb
add
and
test
mov
lock
pusha
repnz
and
xchg
fiadds
leave
ljmp
das
test
mov
loop
stos
test
sbb
rorb
leave
fimull
incl
pushf
xor
push
push
push
sbb
shrl
lret
or
add
lock
push
xor
push
int3
jno
not
push
sar
movsb
shr
or
stos
lods
out
and
xor
push
mov
icebp
jmp
add
clc
call
mov
repnz
xlat
fildll
jb
rcll
xor
mov
push
adc
sbb
lahf
inc
jne
pushf
incb
pop
sbb
mov
pop
je
or
dec
inc
dec
frstor
push
insl
mov
mov
inc
xchg
incb
push
in
push
mov
ret
mov
xor
or
and
add
movsb
xchg
lahf
data16
das
jle
and
fildll
mov
ret
xor
loopne
xor
mov
std
inc
in
mov
shrb
fadd
sbb
pop
test
fsubl
jp
cmp
push
cltd
lock
test
or
push
cmp
in
mov
mov
add
adc
lcall
ljmp
mov
push
aaa
push
rcrb
jmp
loope
mov
test
lea
pop
jo
outsl
jne
push
loopne
inc
cli
test
xchg
sbb
loop
int3
dec
cmp
lret
xor
call
les
add
loope
inc
sbbl
repnz
mov
or
xor
pop
push
inc
jmp
sbb
mov
pop
push
add
rorl
shlb
pop
mov
test
or
fistpl
xor
insb
std
lock
ret
add
and
push
push
mov
jmp
mov
test
lods
mov
xor
xor
outsb
and
or
xor
pop
push
loopne
test
add
sbb
pop
jae
bnd
xchg
adc
inc
inc
mov
mov
mov
xorb
mov
orb
cld
push
and
lea
in
jl
mov
test
loope
pop
adc
adc
je
push
pop
aam
add
xor
pop
pop
pusha
ret
je
push
fs
imulb
mov
aaa
rorb
subl
jns
cmp
loope
fldt
fmull
in
pop
daa
xor
xchg
out
jb
inc
dec
or
aam
push
gs
jmp
pop
or
push
testb
cld
in
push
je
or
scas
lock
popa
in
sub
sub
adc
cmp
rorb
jmp
and
jb
or
xlat
add
mov
adc
mov
mov
mov
adc
add
mov
movsl
shrb
jmp
mov
cli
ss
pop
lods
mov
addl
pop
lock
shlb
push
jmp
xchg
js
std
mov
xchg
call
cld
aad
pop
lea
out
inc
addl
inc
add
popa
sbb
sbb
inc
xor
in
into
sub
push
cli
or
loop
clc
daa
mov
jg
fisubrl
fsubl
mov
stos
and
xchg
xor
pop
xor
clc
pop
cmp
jp
xchg
in
lea
shll
mov
jle
fnsave
add
xchg
stc
cmpsb
testb
add
pop
scas
jbe
mov
test
push
mov
imul
jmp
test
mov
sub
aad
sub
pop
pop
js
mov
pop
mov
ret
and
inc
hlt
cmc
cmp
fst
mov
xchg
cmpsl
lds
dec
outsb
int3
mov
mov
cld
pop
dec
mov
data16
xor
xchg
or
adc
and
imul
call
mov
pusha
jne
lret
mov
lock
add
xchg
xchg
sub
inc
push
xchg
mov
mov
cmp
lmsw
insl
rorb
or
inc
push
add
inc
adc
inc
lock
lods
pop
add
rorl
mov
in
test
push
shll
dec
and
adc
les
mov
icebp
in
mov
test
jg
jmp
int3
pop
pushf
cmp
xchg
adc
add
sub
mov
jg
leave
clc
dec
ds
ret
enter
cmp
popa
cmp
stos
push
push
or
pop
fadds
pop
nop
cmpb
testb
jb
push
xor
mov
dec
mov
inc
test
or
sub
sbb
pop
lods
sub
or
sub
lock
sub
dec
int3
pushf
xlat
jb
xor
mov
jp
ret
lds
adc
add
call
and
mov
xchg
jne
add
inc
cmp
sbb
je
sbb
and
lret
mov
lcall
add
cmpsb
imul
sbb
pushf
inc
xchg
adc
xchg
shr
cld
mov
mov
cmp
add
mov
jmp
push
ret
lahf
jge
push
movb
and
dec
mov
fcompl
and
imul
lock
cwtl
mov
adc
in
mov
imul
lods
ss
jae
rolb
sbb
xor
add
xchg
inc
mov
pop
adc
decb
push
outsl
sbb
pop
icebp
dec
sbb
test
or
les
adc
jne
mov
je
push
mov
ss
icebp
and
push
push
mov
push
sbb
inc
test
in
lcall
xchg
push
je
mov
adc
call
push
pop
pop
testl
add
scas
dec
or
nop
and
sbb
inc
adc
ljmp
push
and
test
adc
dec
push
jb
or
dec
cmpsb
inc
rclb
push
cmp
fs
cmp
mov
rolb
lret
or
or
cmp
pop
pop
jecxz
lcall
sbb
cmp
setb
cld
and
or
stc
shrb
imul
bound
les
mov
cwtl
shl
cmpsb
test
mov
sbb
hlt
das
test
push
pop
add
mov
incb
lock
shr
mov
mov
mov
testb
mov
pop
pop
and
push
movsb
pop
lock
jmp
mov
testb
jle
cld
push
push
push
adc
mov
or
je
adcl
int3
and
jo
cld
cli
push
inc
xor
push
cs
inc
lods
je
mov
js
out
pushf
add
dec
jo
inc
add
dec
add
pop
sub
push
pop
inc
xchg
les
push
push
xor
mov
jae
test
mov
xor
pop
sarb
dec
dec
pop
sbb
add
mov
fmuls
cld
es
push
movsl
aad
pop
pop
repnz
lds
in
or
pusha
inc
je
orl
xchg
test
ffree
rolb
xor
mov
push
push
push
push
adc
pushf
pop
or
clc
pop
test
cmp
sbb
pop
cld
sbb
dec
mov
push
jb
movsb
hlt
cmp
nop
mov
xor
push
js
call
rcrl
mov
out
lea
inc
jne
sbb
addb
xor
in
ljmp
scas
lea
shrb
add
cld
jnp
jns
push
test
pop
cltd
clc
mov
mov
mov
or
add
lock
pop
pop
inc
fwait
test
loopne
sub
push
mov
mov
clc
inc
and
dec
insb
pop
ret
aam
cmp
nop
add
test
add
pop
loopne
add
jmp
daa
xor
adc
push
cvtpi2ps
mov
inc
lret
inc
loope
lock
sbb
and
outsb
lcall
mov
incb
jl
lock
lret
cli
inc
mov
dec
int3
mov
and
xor
xchg
jb
mov
loope
aam
push
push
xchg
stos
inc
popf
es
mov
test
lea
fadds
push
pop
inc
push
or
std
fidivs
or
cmp
mov
and
dec
fstpt
clc
xchg
mov
out
mov
clc
pop
ds
movw
sub
inc
shrb
or
cmc
dec
inc
ret
mov
mov
or
les
lahf
xor
pop
rorl
xor
dec
test
jp
sbb
jns
add
adc
inc
sar
add
aaa
call
pop
xchg
xchg
sbb
dec
dec
fistpll
jo
pop
fcmovb
lea
fdiv
fs
add
add
sbb
clc
daa
sub
outsl
imul
and
divb
jle
add
movsl
lcall
xor
push
sti
ret
adc
dec
push
rol
sahf
sub
sub
add
stos
or
push
es
adc
fwait
jecxz
or
mov
inc
add
pop
jo
in
cld
and
jb
mov
outsb
jbe
sub
int3
adc
cltd
push
xchg
test
lods
push
mov
fs
clc
pop
push
pop
adc
pushf
inc
sub
push
sbb
mov
clc
out
xor
ret
clc
pop
inc
daa
sub
adc
push
mov
add
mov
mov
or
mov
inc
test
loopne
adc
push
pop
push
in
jb
adc
xor
fs
ja
dec
push
loope
rcll
mov
les
cmp
push
pop
adc
add
pop
adcb
push
mov
adc
cli
xchg
push
out
sar
and
jbe
rdpmc
mov
push
mov
adc
add
push
hlt
inc
fs
add
xchg
outsl
js
pop
mov
mov
add
fstpt
or
xchg
adc
setl
stc
js
rcll
cs
xor
data16
push
lock
cmp
adc
test
mov
adc
mov
pop
addr16
cld
sbb
push
cmp
sbb
sub
and
cmp
jnp
add
lods
pop
fadd
dec
dec
cmc
das
and
or
push
dec
insb
inc
mov
push
mov
clc
negb
or
xor
sbb
shll
inc
xor
xor
out
pop
rcll
mov
push
loopne
mov
xor
dec
dec
pop
fcompl
lock
push
shll
out
adc
mov
out
add
cli
mov
clc
inc
sbb
and
jle
shlb
fidivrs
cmp
xchg
shll
sbb
ljmp
ja
clc
hlt
pop
push
push
mov
je
add
sahf
scas
das
mov
mov
call
dec
mov
pop
mov
add
push
aaa
jnp
jnp
xor
movsb
bound
cld
add
cld
dec
pop
mov
sub
push
mov
clc
mov
out
push
cmp
sahf
pop
inc
push
mov
jl
sbb
addr16
arpl
sahf
mov
mov
and
movups
loop
jbe
sub
add
or
inc
jne
ds
or
mov
cmpsb
pop
out
call
push
or
rclb
jge
pop
xchg
push
fcompl
mov
inc
lcall
fs
lods
cld
ret
lock
nop
xor
cmc
shlb
mov
int3
call
cltd
sbb
xlat
int3
mov
hlt
leave
subl
test
push
push
cmp
and
pop
enter
mov
pushf
fidivs
arpl
filds
jmp
mov
clc
add
hlt
movsl
std
call
pop
test
adc
mov
or
imul
inc
xorl
aas
ret
xchg
mov
rol
cmp
aam
xchg
pop
leave
fstpt
cmpsl
test
adc
xorb
sbb
outsb
outsl
mov
inc
xor
xchg
push
bound
out
nop
movsl
and
les
or
push
jae
xchg
push
loope
roll
inc
sub
lea
std
inc
mov
cs
push
sbb
and
and
push
push
fmulp
xor
push
rolb
test
cmp
pop
mov
enter
jp
pop
add
into
movsl
jl
xchg
in
add
or
mov
mov
insl
add
ret
add
adc
sbb
notb
test
rorb
cmp
pop
push
ficompl
loope
or
fs
rolb
fistpl
cmp
rclb
test
loope
jbe
aas
mov
les
jmp
and
xor
sbb
xor
mov
dec
je
push
and
stos
push
pushf
xchg
jbe
sbbb
or
pop
iret
mov
out
push
lock
ret
mov
lea
add
xor
test
inc
add
in
sub
sub
jo
cld
cs
lods
pop
jb
mov
rcl
adc
push
cmp
hlt
insl
push
dec
push
test
jge
add
cld
sar
out
std
add
cwtl
add
mov
sub
inc
mov
inc
das
jle
lods
loope
cs
and
bound
pop
dec
arpl
icebp
ljmp
inc
sbb
sbbb
add
push
inc
inc
inc
jne
mov
add
jmp
jae
andl
adc
mov
in
push
loopne
mov
inc
dec
inc
cmp
test
or
add
push
push
inc
xchg
cmp
enter
inc
cs
je
ret
fucomp
fisttps
ljmp
test
loopne
jo
and
fstpt
pushf
adc
push
and
dec
lret
pop
pop
repz
fwait
inc
xchg
xlat
or
cli
inc
aaa
dec
cmp
mov
push
repnz
mov
inc
pop
adc
push
mov
inc
test
scas
mov
cld
loopne
push
jecxz
mov
xor
or
add
xor
jo
fisttps
mov
add
adc
xchg
add
adc
std
mov
add
cmc
xor
xor
ret
ret
xchg
xor
movsl
pop
mov
les
js
cmp
dec
std
ja
pop
cmp
in
jne
mov
fs
fsts
aam
cmp
push
lock
inc
rolb
cmp
cmp
sbb
fwait
push
pop
insb
int3
mov
insb
dec
movb
cld
data16
aaa
dec
div
notb
call
divb
inc
loopne
shl
addb
sbb
push
iret
push
inc
fcmovu
pusha
jmp
addb
sti
xor
pusha
inc
imul
push
inc
cmp
add
or
ja
test
adc
push
test
jb
cmp
xchg
aam
dec
adc
cld
dec
xor
or
data16
sub
adc
add
rorb
add
std
add
lods
adcb
pushf
les
mov
lock
sbb
nop
jp
dec
push
jp
xor
aaa
std
inc
push
out
imul
pop
out
inc
sub
mov
mov
pop
inc
mov
jl
add
scas
jae
sbb
add
js
mov
test
inc
inc
sbb
or
pop
sub
jl
aam
jge
push
fcom
or
mov
pop
leave
sub
cmp
add
je
dec
add
in
es
negb
adc
or
mov
insl
push
add
ss
inc
lret
dec
je
sbb
and
jmp
push
rclb
movl
iret
pop
mov
test
add
adc
movsb
jb
es
ficoms
push
sar
pop
fnstenv
inc
adc
adc
dec
lea
mov
test
mov
add
pop
ret
insl
incl
mov
inc
add
dec
mov
mov
adc
insb
notb
inc
add
jg
filds
mov
sub
xorb
lods
sbb
push
jmp
sub
test
aas
fildll
push
mov
xor
and
movsb
inc
inc
inc
lahf
add
sub
mov
cmp
add
sti
int3
imul
test
and
pusha
inc
inc
sbb
lock
sub
pushf
dec
push
sbb
cli
add
adc
arpl
add
out
add
push
cmp
movb
fmuls
add
mov
sub
sahf
add
jne
adc
divb
jg
or
and
sbb
dec
test
les
jle
adcb
push
jmp
test
pop
ljmp
inc
add
stc
cmp
sti
aaa
xchg
fildl
or
or
pop
sub
add
add
or
lods
sbb
jbe
xor
pushf
adc
movsb
fimull
adc
mov
divb
aam
xchg
fistl
mov
adcl
cmp
dec
lret
add
ljmp
add
clc
mov
fiadds
rclb
scas
or
mov
mov
mov
adc
icebp
call
push
add
add
mov
data16
imul
mov
push
out
dec
scas
and
jl
adc
add
sbb
push
push
enter
adc
pusha
andl
push
mov
adc
push
int
enter
stc
push
dec
pop
test
mov
sub
mov
push
mov
dec
in
les
ret
mov
call
cmpsl
push
popa
data16
and
dec
and
loopne
bound
push
mov
mov
push
arpl
jno
sbb
subb
jl
ret
addl
outsb
inc
xor
jl
pusha
push
pusha
cli
add
and
cmc
cmp
lods
repnz
mov
push
nop
imul
out
ja
enter
push
push
int
push
iret
mov
xchg
push
mov
jle
xchg
cmc
cld
es
mov
fimuls
cmp
mov
cmp
mov
fmuls
pop
les
pop
bound
cs
and
dec
inc
add
and
push
inc
aam
xchg
and
inc
add
lock
add
push
aas
xchg
mov
jmp
mov
and
ret
adc
xchg
adc
pop
adc
inc
sbb
xchg
ss
pop
inc
sbbb
mov
sbb
sahf
pop
add
xor
sub
decl
sub
and
mov
xchg
or
lods
test
in
or
int3
add
pop
rorb
pushf
mov
push
sarb
enter
push
clc
pop
outsl
dec
sub
sbb
and
adc
mov
mov
sbb
lods
push
inc
add
pop
mov
leave
mov
adc
cmp
outsb
dec
into
mov
sbb
lds
sbb
xor
enter
mov
pavgb
jne
adc
xor
inc
adc
xchg
or
add
xchg
out
dec
push
xor
pushf
or
xchg
pushf
shlb
push
call
movl
mov
mov
sub
ret
test
mov
stos
mov
rclb
or
call
loop
test
out
push
sub
sbb
push
xor
fs
inc
inc
out
mov
inc
jnp
lea
or
movsb
mov
inc
push
ljmp
movsb
fs
rolb
addl
pop
mov
fimull
les
inc
xchg
xchg
add
call
or
ja
xor
jmp
test
rclb
inc
push
xcrypt-cfb
cmpsl
cmpsb
mov
or
test
jnp
or
inc
xchg
loopne
mov
xchg
add
mov
ljmp
push
je
test
subl
mov
push
adc
or
inc
xor
mov
inc
xchg
fimull
jno
or
add
adc
hlt
push
add
sbb
adc
ds
movsb
leave
pop
jne
or
jle
add
std
mov
shlb
push
push
jmp
inc
mov
addl
movsb
jbe
mov
addb
adc
incb
sbb
sbb
push
lret
popf
inc
cmp
push
loopne
add
push
ret
mov
imul
add
adc
outsl
or
rolb
call
es
lds
mov
mov
cwtl
or
mov
test
aad
sbb
push
xor
clc
addb
push
or
push
push
lret
psrld
call
pop
idiv
mov
push
test
mov
add
aaa
cld
or
dec
xlat
adc
jne
inc
and
xor
pusha
adc
jp
xor
or
cmp
lock
loopne
sub
or
mov
jns
test
cmpsl
sub
rcrb
jmp
jge
pop
and
popf
mov
div
xor
fldenv
xlat
ret
push
add
adc
insb
clts
dec
loop
dec
xor
into
mov
pop
das
cltd
dec
push
bound
cld
add
jmp
ljmp
or
fs
inc
mov
imul
fisubrs
mov
pop
jb
pushf
int3
or
and
mov
cmp
call
out
and
adc
mov
int3
out
cmpl
xor
jmp
shl
pop
out
aaa
inc
push
int3
sbb
pop
push
pop
pop
xchg
sbb
dec
push
nop
popf
inc
addb
inc
or
sub
inc
xchg
cmc
mov
popf
test
push
mov
lret
shl
pusha
mov
and
call
scas
sub
jb
or
mov
inc
loopne
loope
lcall
mov
int
inc
sbb
es
cmp
push
repz
aaa
adc
sarb
std
mov
pop
sub
push
cmp
outsb
rorb
mov
or
outsb
inc
pop
xchg
adc
decl
pop
lock
leave
inc
repz
xor
imul
and
ret
or
movsb
lcall
rcrl
inc
xchg
push
mov
push
sbb
pop
fdivrp
push
cld
cmc
fs
lahf
test
xor
ret
incl
sbbl
or
movsb
xchg
inc
adc
movsl
or
test
xorb
rcll
adc
lods
xlat
sbbl
cmpsb
loop
xor
push
cmpsl
pop
push
nop
insb
xlat
sub
mov
mov
dec
mov
roll
inc
in
cmpb
xor
pop
sbb
inc
dec
test
cld
mov
loop
lods
pop
sbb
push
movsb
imul
cmpb
lcall
ljmp
push
dec
int3
decb
repz
cwtl
pop
or
aam
pop
cmp
dec
test
call
adc
jmp
pop
in
add
or
mov
ficoml
fildl
sub
and
test
push
test
icebp
xchg
mov
test
mov
ds
inc
add
loope
cli
xchg
cmp
push
insl
mov
movl
cs
jne
adc
xchg
movsl
fildl
pop
pop
in
call
dec
pop
fadd
mov
mov
pop
push
inc
es
xor
rorb
insb
xor
inc
sub
js
dec
data16
decl
dec
inc
dec
adc
cmp
add
mov
or
insb
push
loopne
sti
fdivrl
mov
int3
push
jb
sbb
insl
adcw
ret
add
add
adc
jb
jo
add
jp
mov
add
or
test
mov
inc
mov
adc
enter
clc
std
clc
adc
je
jl
loope
push
inc
or
fsubr
mov
outsb
adc
dec
icebp
push
or
test
imul
rol
psrld
test
cs
idivb
inc
mov
and
leave
je
add
add
sbb
push
xchg
sub
loop
xchg
or
xor
stc
jns
sarb
jo
push
pop
inc
ds
and
push
lods
scas
data16
cld
add
and
pop
out
dec
push
inc
pop
fwait
movsb
add
shlb
std
cmp
jl
insb
repnz
clc
xor
dec
mov
out
pop
repnz
icebp
adc
xor
inc
cld
pop
lods
pushf
push
cmp
mov
inc
adc
jnp
jl
lods
aas
dec
sub
mov
add
xchg
add
sbb
fidivs
fnstenv
rorb
hlt
scas
repnz
inc
push
cmp
xor
adc
inc
sti
inc
push
ljmp
je
sub
push
add
jne
sarl
es
test
pop
sbb
notl
xlat
lahf
rolb
adc
and
lock
sbb
test
faddl
test
add
mov
test
rcr
pusha
shr
xor
lock
pop
add
mov
mov
sbb
add
repz
shrb
popf
out
inc
jb
xlat
dec
inc
repnz
or
or
fbld
in
xor
inc
add
push
add
rcr
push
and
mov
mov
cld
cmp
lret
idiv
push
mov
xor
loope
mov
xor
jns
int3
dec
cld
mov
nop
adc
testl
shrb
daa
and
adc
dec
gs
adc
test
adcl
loopne
fisubl
test
test
ja
ret
pushf
jbe
call
mov
mov
sbb
punpckhdq
clc
sbb
sar
repnz
jno
adc
test
and
fsts
jle
adc
pop
or
add
mov
aas
add
cmc
mov
fiadds
jl
inc
in
or
mov
cmpb
xlat
inc
jl
sarl
imul
sarb
fadds
xor
and
test
adc
test
je
cld
popl
shlb
je
call
xorb
shr
fcmovbe
fimuls
subb
dec
aam
call
jecxz
lret
mov
sti
push
mov
add
sub
int3
dec
ficoms
test
sub
bound
or
outsl
outsl
dec
jmp
mov
or
gs
xor
sbbl
add
jae
sub
lods
xor
push
cli
roll
adcl
test
mov
test
jge
adc
push
fwait
push
inc
add
dec
sbb
sub
jge
pop
inc
cmpl
loope
call
xchg
not
add
and
and
push
mov
in
xor
in
mov
lcall
clc
or
add
and
lods
xchg
fimull
jg
in
mov
inc
es
dec
call
popf
daa
jmp
pop
ljmp
xchg
xor
push
imul
push
xchg
push
pop
add
ret
rolb
in
call
jb
mov
xchg
add
inc
loope
mov
in
jo
mov
testl
pop
loopne
mov
inc
xor
xor
adc
xchg
and
dec
dec
mov
sbbb
push
mov
scas
xor
push
aam
movsb
fmull
add
mov
fcmovnu
movb
add
aaa
in
or
mov
loope
push
into
dec
jmp
cs
fsubl
mov
fwait
pusha
mov
clc
int3
mov
outsl
push
adc
dec
gs
decl
and
pusha
and
sub
push
bound
push
call
lods
mov
mov
dec
or
jmp
push
sbb
or
or
nop
inc
xchg
xor
fdivs
decl
es
jmp
mov
sahf
add
adc
adc
js
mov
les
fcomi
out
ret
pop
or
mov
js
pop
push
repnz
js
ss
iret
cmpb
aam
ficoms
jno
push
add
xchg
cs
push
das
loopne
cmp
push
push
test
ds
jb
sub
test
jmp
fbld
mov
xchg
push
push
iret
pop
mov
add
inc
lods
sbb
xchg
test
je
jne
mov
mov
sbb
pop
mov
jge
fs
sub
repnz
sub
jmp
mov
pop
cmc
and
push
in
add
test
and
mov
jne
cmp
mov
push
xchg
jno
out
mov
jmp
push
cli
gs
adc
rcrb
push
imul
inc
adc
xchg
adc
sbb
xchg
adc
sub
inc
std
les
jnp
xchg
orl
movsb
scas
enter
rorl
out
add
repz
subb
addb
cld
push
or
in
je
pop
pop
test
ret
mov
xchg
sbb
mov
stc
stos
pop
sub
icebp
inc
or
insb
xchg
adc
sbb
or
xor
or
pop
pop
sub
adc
clc
aaa
sub
data16
xor
xorb
test
icebp
sub
scas
push
lods
and
iret
leave
cmp
mov
pusha
push
in
repnz
dec
aas
sub
je
mov
mov
les
movb
xchg
adc
call
or
jp
sub
js
inc
xor
aaa
jl
shrl
push
add
push
mov
neg
mov
pop
outsl
add
clc
xchg
push
add
cmp
and
jnp
pop
mov
xor
jl
and
mov
call
ret
test
insl
es
lcall
icebp
push
js
dec
pop
fs
test
inc
add
nop
push
fimull
es
cmp
mov
push
push
enter
xorb
lods
jne
cmp
lock
or
aas
in
ror
std
sbb
jae
ret
pop
gs
loopne
lea
mov
stos
xor
mov
jecxz
cmp
sbb
bound
push
or
dec
adc
lock
mov
in
push
add
mov
xchg
and
lahf
lods
aam
adc
inc
jmp
adc
mov
bnd
fwait
push
in
sbb
movb
test
sbb
and
or
divl
mov
xor
jbe
gs
test
and
sub
call
fcmovnu
mov
cmp
repz
jb
lret
and
push
dec
push
sub
dec
inc
mov
add
and
mov
xchg
pcmpgtb
lods
orb
adc
test
lcall
fwait
fs
call
dec
or
jo
or
mov
dec
call
jle
fiadds
lock
pop
cli
popf
push
pop
aas
cmp
je
dec
rorb
jne
sbb
scas
cmp
jp
cwtl
or
adc
sbb
cltd
push
out
jne
or
shrb
push
adc
or
add
in
push
movsl
scas
nop
in
push
mov
mov
adc
and
clc
test
inc
and
push
lcall
sbb
sbb
or
out
testb
push
xor
pop
enter
jne
icebp
int3
fwait
and
push
cs
loope
sbbl
test
xchg
pop
lcall
and
mov
in
lods
sub
add
xorb
mov
lea
pop
or
ud2
sub
outsb
mov
inc
push
inc
jb
adc
sarb
lods
lea
nop
adc
mov
cmp
mov
push
jne
cld
xor
mov
loopne
mov
jp
in
cmp
inc
mov
xor
dec
cmpsb
js
mov
mov
add
adcl
clc
addl
pop
add
out
push
or
gs
or
stc
inc
fsubl
std
stc
jnp
sub
push
mov
or
inc
cld
push
add
testb
sarl
fcmovb
xchg
fcoml
je
insb
inc
adc
mov
lcall
incl
inc
ret
pop
jl
scas
outsl
add
or
std
ds
add
std
push
pushf
and
or
adc
ja
subl
sub
inc
ficompl
out
sbb
push
add
fadds
sbb
pop
pop
testb
xchg
push
fisubrl
jmp
or
aam
inc
xchg
imul
mov
es
test
jne
pusha
das
mov
into
mov
dec
jle
repnz
cld
or
test
xor
aad
shll
ds
add
or
sub
stos
enter
lahf
cmp
insb
sbbl
adc
fsubrs
inc
icebp
and
add
mov
sbb
insl
stc
push
mov
inc
jbe
adc
cmp
subb
roll
arpl
mov
mov
inc
xor
mov
mov
outsl
xchg
dec
js
add
lret
cld
mov
and
ror
sub
ss
aam
inc
lods
xor
sahf
mov
movsb
jne
fimull
xor
add
aaa
shlb
xchg
and
jmp
adc
addl
inc
push
or
sbb
rol
add
mov
rcrb
inc
ret
popa
add
dec
imul
arpl
in
adc
mov
push
cld
data16
pop
mov
sti
shl
sbb
or
les
outsl
ret
outsb
push
inc
mov
jle
push
mov
stos
insb
loopne
cld
or
addl
mov
cld
add
adc
inc
adcl
add
lcall
hlt
add
push
call
lock
int3
adc
pop
mov
je
push
es
lea
cs
ret
push
add
dec
xor
std
stos
outsl
movb
cmp
pop
mov
push
xor
or
pop
cmp
enter
mov
mov
inc
ds
push
test
lods
xchg
lret
dec
push
call
xchg
add
jb
sbb
sarl
push
mov
clc
xchg
or
jl
decl
mov
jmp
jne
sarb
fidivrs
cld
inc
pop
cmp
xchg
imulb
jmp
pop
sbb
addl
enter
mov
add
cmp
mov
icebp
cmp
xchg
lret
mov
mov
xchg
xchg
mov
loope
lea
xorb
push
add
in
and
mov
sbb
out
lcall
movsb
rorb
inc
pop
xchg
gs
add
inc
shl
cmpb
add
push
xchg
movsb
xor
les
jb
dec
sbb
inc
sbb
fwait
sub
seto
inc
dec
test
and
pop
rol
dec
xor
push
dec
sarl
pop
dec
pusha
shlb
std
sbb
dec
xor
cs
adcb
loopne
shll
ret
inc
test
je
ret
scas
mov
sub
in
xor
addb
lods
scas
test
adc
ret
ljmp
lods
inc
dec
mov
sbb
cs
lret
rorb
and
aas
adc
add
aam
adc
mov
adc
cmp
fcoml
pusha
inc
sbb
and
shrl
imul
andb
test
in
popf
add
push
mov
out
cli
paddb
cwtl
xor
xchg
in
mov
test
daa
enter
or
pop
les
rcrl
test
add
test
add
mov
fcompl
push
call
mov
ljmp
mov
lock
int3
push
pushf
inc
adc
sbb
jbe
leave
and
in
push
mov
or
add
xor
push
lods
mov
mov
adc
jge
cmpsb
push
pop
add
mov
orl
adc
test
in
gs
ret
mov
clc
push
push
dec
sbb
dec
cwtl
cmp
scas
lods
jmp
add
js
hlt
adc
mov
inc
lea
mov
inc
push
mov
loopne
incl
sbb
mov
dec
outsl
das
push
cmp
into
xor
cmp
outsb
add
shll
add
rcrb
rcrb
outsl
inc
into
popf
mov
xor
xlat
xchg
lock
inc
cmp
and
jb
jne
decb
pop
rcl
inc
xlat
sti
mov
adc
scas
dec
enter
add
mov
xor
mov
shll
jmp
adc
sbb
mov
mov
in
out
push
loop
and
and
je
add
pop
mov
into
push
adc
divl
jg
jmp
lock
inc
jne
insl
xor
insb
jle
sbb
and
cld
fcomip
xor
sbbl
movsl
dec
adc
xchg
cmp
add
call
mov
test
push
mov
dec
rcrl
in
dec
add
lret
scas
enter
test
aas
and
mov
ret
inc
pushf
clzero
icebp
pop
lods
test
loopne
fs
test
lds
xchg
loope
movsb
adc
sbb
and
or
jecxz
loopne
test
push
in
lds
add
xchg
push
push
adc
test
inc
add
in
enter
add
mov
dec
xor
in
test
cwtl
incb
rorl
xchg
mov
in
out
insb
pop
jg
or
xorl
imul
dec
aad
aaa
imul
leave
outsl
pop
fwait
cmpsb
repnz
inc
pop
aad
push
or
or
decl
jne
enter
sub
push
into
rolb
mov
sub
aam
scas
hlt
push
hlt
in
in
pop
loopne
fidivrl
mov
pop
push
add
movsl
imul
out
xor
pop
pop
push
lods
movsl
or
sbb
push
ljmp
js
test
shlb
call
cmp
int
shll
xchg
xchg
jno
and
rcrb
js
fbld
cmp
test
mov
sti
mov
pushf
lea
fwait
insb
arpl
out
pop
or
jge
test
lcall
incl
jl
jnp
imul
add
xlat
stos
jbe
or
cli
pop
inc
mov
lods
aam
scas
pushf
movsb
jb
mov
xchg
es
test
jno
xor
rol
xchg
add
loop
daa
mov
or
pop
jmp
sub
das
test
add
and
mov
push
mov
iret
shr
stos
sti
inc
dec
xor
incl
push
cmp
test
mov
cmp
mov
push
ror
or
in
pop
xchg
inc
call
les
sbb
orl
inc
out
mov
fneni(8087
xor
or
and
lcall
lods
bound
enter
aad
test
gs
or
cmpsb
mov
sub
call
mov
mov
dec
add
decl
popa
xor
sbb
adc
mov
push
sub
mov
inc
xchg
ljmp
cltd
sub
push
arpl
clc
jl
test
ja
cltd
idivb
decl
repnz
fisubrs
mov
vandpd
xor
add
add
addr16
jmp
push
sub
jge
sbb
stos
stos
out
jbe
lcall
sbbb
dec
inc
cli
jge
xchg
cli
cli
adc
mov
leave
sti
lock
lods
in
mov
aam
pop
mov
mov
ljmp
movsb
mul
jb
xchg
fwait
rol
jne
mov
loope
std
sbb
xchg
mov
call
push
ss
jle
aas
inc
cmc
div
ljmp
int3
dec
push
movsl
movsl
hlt
shl
in
stc
icebp
icebp
or
jno
xchg
stos
fcomp
jae
xor
pushl
push
sub
add
xchg
mov
gs
ret
ret
pop
xor
sbb
aaa
xchg
xchg
mov
incl
mov
pop
pop
or
adc
sbb
loop
int
jmp
dec
daa
daa
imul
mov
ljmp
sbb
sub
je
sbb
cs
sbb
pushl
mov
divb
cmp
popa
jge
mov
push
sub
jnp
jecxz
ja,pt
lcall
das
jno
test
mov
in
in
ljmp
and
pusha
jecxz
cld
pop
jns
mov
mov
pop
in
aam
push
lret
lret
inc
addr16
cmp
decl
dec
dec
ficomps
pop
pop
call
mov
out
out
sub
stos
in
sti
sti
call
xchg
lds
xor
push
adc
inc
iret
jmp
add
push
jg
xor
incl
js
cmp
and
test
jecxz
push
push
repz
mov
xchg
inc
inc
rolb
xchg
lods
and
cmp
cmc
cmc
insb
jmp
mov
mov
scas
fcmovu
jne
and
arpl
adc
jg
lcall
std
repz
mov
int
dec
sbb
adc
adc
xor
mov
jmp
xor
inc
inc
int3
cs
pop
cmp
cmpsl
cmpsl
repnz
jle
cmpb
inc
enter
ljmp
sbb
sub
jae
xchg
shlb
sbb
dec
shll
and
jmp
sub
jle
nop
nop
stos
or
inc
lret
out
sub
mov
cmp
test
cli
jns
pop
pop
loop
or
sbb
shl
xor
out
test
cmp
or
push
xchg
dec
dec
fisttpl
push
or
insb
mov
ret
ljmp
cmp
shrl
lods
lods
out
les
cmpsb
cmp
xchg
movsb
shl
in
bnd
mov
xchg
lock
enter
aaa
pop
fisubrl
mov
call
push
mov
dec
dec
rorb
test
mov
push
push
cli
repz
hlt
pop
clc
mov
ljmp
jp
cmp
scas
jmp
outsl
mov
ljmp
js
dec
and
jb,pn
sbb
and
cmpsb
cmpsb
icebp
jae
mov
xchg
mov
lret
call
call
jl
je
pushf
ds
pop
and
mov
mov
loopne
pushl
jl
ds
jno
mov
int3
data16
nop
dec
dec
fadds
add
add
sbb
push
adc
popa
mov
mov
scas
push
push
stc
imul
rcrl
sbb
lcall
loope
jmp
clc
adc
cwtl
cwtl
mov
adc
xor
imul
pop
mov
call
mov
push
push
and
jmp
into
dec
stos
push
jg
push
jp
mov
or
or
jmp
mov
xor
push
ret
sub
sub
adc
mov
lret
test
push
cld
insl
mov
push
cmp
sahf
out
lea
jns
out
add
jns
out
inc
popf
inc
jns
out
xchg
jns
out
addr16
ljmp
xchg
pop
ret
jns
out
push
inc
add
jns
out
hlt
xor
xchg
sahf
out
sahf
jae
aas
or
gs
out
pop
sub
sahf
out
ss
cmp
sahf
imul
jns
out
cs
jns
out
dec
popa
into
jnp
out
sahf
jno,pt
cmc
push
jns
pusha
pop
enter
sahf
out
inc
sahf
out
sahf
aam
dec
imul
jns
out
push
vandnps
adc
xor
inc
mov
jns
out
mov
jns
out
shll
sahf
out
sahf
sbb
insl
dec
adc
jns
out
das
loope
int3
cmp
jns
out
repnz
out
sahf
out
xchg
mov
out
jg
jle
and
sahf
out
sub
cmp
sahf
out
sahf
loop
jbe
push
dec
jns
out
push
fisttpl
insb
in
jns
out
outsb
out
cmpsb
test
out
sahf
movsb
aaa
mov
inc
pop
jns
out
mov
fs
out
sahf
out
cli
pop
and
sahf
mov
sbb
mov
sahf
out
jb
icebp
push
out
sahf
out
jl
and
sahf
out
sahf
faddl
jns
out
stos
fadds
sahf
out
pop
stc
rclb
pop
daa
mov
sahf
out
xor
jns
out
and
jns
js
clc
cmpb
jns
fidivl
mov
ret
mov
adc
sahf
out
sahf
cld
cmp
ja
sahf
out
jnp
imul
jns
out
add
sahf
out
sahf
xlat
stos
jbe
or
sahf
out
jge
pop
inc
lock
sahf
out
aam
scas
pushf
sahf
out
sahf
movsb
jb
mov
xchg
jns
out
es
test
xor
in
jno
out
sahf
fdivs
adc
sahf
out
ret
sbb
sahf
out
adc
jns
daa
mov
or
jns
sbb
mov
push
cmp
mov
sahf
out
sahf
jecxz
test
add
out
in
and
mov
out
sahf
out
lret
mov
jns
dec
pop
iret
shr
stos
jns
out
sti
inc
dec
xor
inc
stc
add
sahf
out
sahf
cmp
test
mov
jns
xchg
popf
cmp
out
sahf
out
mov
and
sahf
out
sahf
push
ror
or
jns
out
in
pop
xchg
inc
pop
out
sahf
out
cmpsl
jle
fs
out
sahf
pop
sbb
orl
and
nop
mov
jns
out
out
mov
jns
pop
or
loopne
cmp
out
or
and
out
sahf
out
shrl
sahf
xchg
in
out
aaa
jns
out
insl
aad
test
insb
push
hlt
ljmp
scas
or
out
cs
mov
out
sahf
out
fnsave
sahf
out
sahf
mov
mov
sahf
out
dec
add
push
out
sahf
out
xor
out
sahf
rcrl
sahf
out
adc
mov
push
xchg
into
sahf
out
sahf
push
sub
mov
jns
mov
jns
out
cltd
sub
jns
push
mov
jns
out
jnp
imul
jns
out
add
sahf
out
sahf
xlat
stos
jbe
or
sahf
out
jge
pop
inc
lock
sahf
out
aam
scas
pushf
sahf
out
sahf
movsb
jb
mov
xchg
jns
out
es
test
xor
in
jno
out
sahf
fdivs
adc
sahf
out
ret
sbb
sahf
out
adc
jns
daa
mov
or
jns
sbb
mov
push
cmp
mov
sahf
out
sahf
jecxz
test
add
out
in
and
mov
out
sahf
out
lret
mov
jns
dec
pop
iret
shr
stos
jns
out
sti
inc
dec
xor
inc
stc
add
sahf
out
sahf
cmp
test
mov
jns
xchg
popf
cmp
out
sahf
out
mov
and
sahf
out
sahf
push
ror
or
jns
out
in
pop
xchg
inc
pop
out
sahf
out
cmpsl
jle
fs
out
sahf
pop
sbb
orl
and
nop
mov
jns
out
out
mov
jns
pop
or
loopne
cmp
out
or
and
out
sahf
out
shrl
sahf
xchg
in
out
aaa
jns
out
insl
aad
test
insb
push
hlt
ljmp
scas
or
out
cs
mov
out
sahf
out
fnsave
sahf
out
sahf
mov
mov
sahf
out
dec
add
push
out
sahf
out
xor
out
sahf
rcrl
sahf
out
adc
mov
push
xchg
into
sahf
out
sahf
push
sub
mov
jns
mov
jns
out
cltd
sub
jns
push
mov
push
jle
gs
sbb
movsb
ret
cmp
lcall
cmp
inc
icebp
lods
cli
pop
stos
dec
jecxz
xchg
and
cli
push
lods
jbe
testb
mov
dec
in
cld
lds
lret
xlat
es
xorb
pop
dec
and
inc
mov
ljmp
ret
das
jne
orl
xchg
mov
add
pushf
xchg
mov
push
pop
fcmovbe
mov
and
dec
das
es
loopne
sub
ret
jns
cltd
lcall
imul
jno
mov
mov
data16
cmp
sbb
adcb
xor
push
jg
mov
ja
mov
andl
pop
popl
sbb
insb
xchg
clc
mov
jae
and
add
jecxz
push
push
stos
sub
mov
add
lds
shll
or
and
push
in
push
sbbb
sub
incl
repnz
imul
int
add
bound
les
push
popf
mov
stos
decl
jmp
or
out
stos
pop
jno
push
mov
and
call
ds
inc
xchg
push
lea
add
aam
pusha
jg
enter
and
mov
inc
int3
fstps
call
mov
out
pop
cmp
out
inc
psubsw
test
mov
pushl
or
in
dec
push
adc
insb
pop
jb
std
push
incl
cmp
scas
aad
ss
fldenv
cmpsb
and
jmp
cmp
addr16
push
out
mov
xchg
rcrb
fwait
xchg
sahf
add
dec
popa
fsubl
mov
out
clc
lcall
sbb
loop
mov
in
and
inc
adc
pop
sbb
mov
ljmp
adc
test
test
cltd
fnstsw
testl
cmc
fcomip
mov
pop
sti
jle
mov
jbe
and
fdivl
icebp
arpl
xor
fmul
inc
arpl
inc
test
adc
test
jge
mov
xor
sub
ljmp
dec
fdivl
push
in
ja
jecxz
sub
mov
cli
inc
jmp
decl
push
jge
fsubs
xor
fnstcw
rol
mov
mov
cmpsb
cmc
incl
sub
mov
es
lods
mov
in
js
or
push
jle
testb
ret
mov
ret
scas
cmc
lahf
pop
incl
jl
aad
test
enter
adc
jge
call
cmp
test
js
outsb
pop
sbb
in
lcall
out
outsb
out
int3
out
and
out
out
ss
ljmp
xor
scas
sub
and
movsl
xchg
xor
dec
mov
cmpsb
loopne
shlb
icebp
add
lcall
idivl
push
push
pop
xchg
imulb
jbe
lea
mov
int3
stos
dec
push
in
add
sahf
shll
jecxz
push
sbb
sub
mov
popf
pop
ljmp
pop
cli
xchg
or
mov
sbb
push
jmp
fisubrl
inc
adc
mov
adc
jmp
cmp
into
test
daa
out
mov
leave
xor
jp
mov
pushf
rcr
pop
push
repnz
lcall
adc
jns
aaa
mov
pop
std
stos
pop
fistpll
fildl
add
repz
pop
push
sbb
ret
jb
loop
or
cmp
ljmp
incl
jno
or
mov
pushf
fs
rcll
xor
sarb
repz
mov
push
ret
xchg
lret
repz
repz
stos
xchg
push
test
cmp
xchg
and
cmp
repz
addr16
loope
repz
repz
repz
jmp
sub
iret
repz
js
fnsave
pop
data16
or
cmp
pusha
inc
loopne
sbb
cmp
repz
sbb
iret
repz
sub
add
repz
lcall
iret
repz
xchg
lock
repz
mov
iret
xor
stos
push
push
cmp
repz
cmp
cmp
repz
iret
repz
int3
ja
mov
fstpt
repz
jmp
cmp
repz
lods
dec
sti
push
iret
repz
push
daa
fs
cmp
repz
psrld
repz
iret
repz
inc
sbb
cmp
repz
dec
mov
iret
repz
iret
repz
push
and
repz
clc
adc
repz
repz
shrb
repz
cli
and
sbb
out
sahf
int
cmp
sar
ss
jns
out
sub
movsb
in
out
sahf
out
call
sahf
cmc
mov
jns
out
cmpsl
outsb
jnp
hlt
out
sahf
out
test
jle
sahf
out
sahf
out
into
aam
scas
jns
out
xor
shlb
out
sahf
out
adc
out
sahf
das
lea
jns
out
sbb
jns
out
cs
push
xor
mov
mov
jns
out
xor
out
sahf
out
mov
out
sahf
xchg
jns
out
or
inc
jno
out
sahf
out
nop
popa
jo
sahf
out
sahf
inc
cmpsl
movsb
pop
imul
jns
pop
add
insl
out
sahf
out
dec
xlat
lret
inc
sahf
out
sahf
mov
jne
sahf
out
lock
stc
pop
pushf
out
sahf
out
pop
andl
sahf
out
sahf
enter
jno
jns
out
lods
lods
cmp
out
sahf
out
jg
scas
mov
sub
insb
clc
sarl
out
add
jns
out
or
jns
sbbb
loop
jns
out
mov
out
sahf
out
jmp
out
lahf
sahf
out
sahf
adc
jns
out
pop
aam
sti
jmp
inc
sahf
inc
mov
out
sahf
out
or
push
add
in
jo
cmp
jns
out
cmp
cmpsb
push
sahf
out
sahf
cs
xchg
lds
out
and
mov
out
pop
or
jns
test
es
out
cmc
cmp
out
sahf
out
icebp
faddl
sahf
adc
sahf
out
xor
push
mov
dec
mov
sub
out
sahf
nop
dec
shll
out
fimuls
jns
out
inc
adc
sahf
scas
adcb
out
jge
mov
sahf
out
lcall
sahf
call
mov
sahf
out
and
sahf
out
fcomps
jns
not
mov
add
jns
out
mov
push
ljmp
inc
sbb
jns
inc
popa
or
cmp
jns
out
leave
in
fbstp
jns
out
aaa
int
outsl
sahf
out
sahf
fcomi
les
ret
jns
out
and
out
sahf
out
roll
push
hlt
inc
pop
daa
stos
jns
out
popf
cli
jecxz
jbe
jns
out
add
sub
bound
jns
out
dec
inc
rorl
out
push
mov
jns
leave
ret
mov
jns
and
fistps
out
sahf
out
push
imul
dec
inc
fidivrs
jns
out
dec
pop
push
jmp
out
sahf
out
aaa
sub
sahf
push
iret
jns
imul
add
out
sahf
out
testb
sahf
outsb
and
ds
jns
out
les
push
cwtl
mov
inc
fld1
mov
sahf
out
sahf
enter
add
sub
pop
push
test
jns
out
sub
out
sahf
or
fwait
sarb
jns
ja
xchg
mov
and
or
sahf
push
icebp
jne
jg
jns
out
jb
sti
inc
and
jns
out
in
arpl
dec
mov
sahf
out
mov
shll
xchg
jmp
out
sahf
xor
lret
jns
out
jp
lods
cmp
jns
out
jle
fdivrs
sahf
out
sahf
ret
pop
rcl
and
jns
pushf
cmp
pop
out
sahf
out
dec
xchg
mov
adc
movsb
jns
out
aas
movsl
mov
sahf
out
cmpsl
add
int
out
sahf
xchg
dec
out
stos
xchg
sarl
out
push
gs
mov
jns
out
or
adc
xlat
mov
sahf
out
popa
sbb
shl
out
sahf
out
idiv
cmp
inc
scas
push
sahf
out
loop
or
sahf
out
push
lret
xor
lcall
aad
movsl
cmp
repz
sti
jl
cmp
xor
incl
fsubrp
lret
push
jnp
xor
dec
xchg
or
ret
dec
or
mov
mov
pop
jmp
and
xchg
push
aam
pop
int3
pop
gs
insb
jo
push
std
in
mov
incl
cmpsl
lea
add
pop
add
shrb
add
scas
mov
imul
adc
addr16
xchg
repnz
into
lock
jae
lods
je
out
xor
pushl
call
inc
icebp
sbb
sub
mov
bound
stos
sbb
dec
sarb
lcall
js
pop
hlt
pop
mov
adc
sub
pusha
test
sub
leave
pushf
out
mov
sub
mov
jmp
cmp
push
cltd
popa
sahf
mov
add
mov
imul
popf
je
dec
es
je,pt
dec
pop
mov
mov
push
das
cmp
pop
mov
setge
scas
push
cs
hlt
rorb
inc
scas
hlt
rorb
into
fidivs
inc
and
and
and
testb
rolb
jbe
mov
push
inc
outsb
jbe,pn
dec
inc
cmp
sub
dec
sbb
into
pop
lea
dec
jbe
mov
dec
inc
fdivp
xchg
push
dec
popf
out
ss
mov
movb
pop
dec
mov
jne
dec
out
scas
inc
lods
xor
dec
mov
ss
push
inc
scas
outsb
sahf
aam
dec
popf
mov
mov
dec
hlt
aam
mov
sahf
or
fidivs
dec
inc
outsb
outsb
push
inc
sub
dec
fwait
je
jg
push
dec
lea
mov
mov
xor
pop
hlt
rclb
fiadds
mov
inc
or
sub
push
fidivrs
dec
je
dec
arpl
push
pop
sub
dec
popf
xor
mov
das
cmc
aam
push
jle
cmp
pop
outsb
xor
jle
aam
dec
sbb
arpl
dec
sbb
jbe
popf
xor
ss
push
sub
notb
push
jbe
dec
popf
xor
cmp
push
cs
out
inc
cmc
rclb
mov
sub
dec
cmp
dec
sbb
outsb
pop
mov
xchg
push
dec
mov
jle
push
inc
lods
mov
inc
push
imul
sbb
push
lods
cmc
aam
pop
scas
pop
cmc
aam
addr16
jle
aam
dec
cmp
lea
pop
arpl
inc
mov
jne
pop
push
push
push
cmc
push
dec
scas
fiadds
aam
inc
cmp
arpl
dec
cmp
xchg
sbb
pop
push
push
push
cmc
pop
inc
out
mov
sbb
test
cmpsb
lods
mov
cmp
jbe
fidivrs
mov
push
imul
pop
pop
rclb
add
or
repz
repz
iret
repz
pop
push
dec
inc
je
cmp
repz
imul
xchg
mov
call
iret
cmp
repz
fnstcw
insl
repz
repz
pop
inc
dec
iret
repz
and
xor
iret
repz
adc
rcr
cmp
repz
out
icebp
cli
iret
repz
xchg
cwtl
test
repz
mov
cmp
repz
ror
iret
repz
scas
movsl
mov
iret
repz
lahf
inc
dec
push
repz
repz
push
jl
iret
repz
push
adc
cmp
repz
das
lea
pause
mov
repz
aad
ret
enter
iret
repz
in
ss
cmp
repz
sbb
or
repz
outsb
jae
dec
inc
cmp
repz
push
idiv
loope
cmp
repz
cmp
scas
movsb
mov
iret
repz
sahf
inc
dec
push
repz
repz
imul
iret
repz
pop
adc
add
cmp
repz
mov
repz
mov
repz
aam
ret
repz
repz
in
aaa
sub
cmp
repz
sbb
or
outsl
jb
dec
inc
cmp
repz
push
add
pop
repz
repz
cmp
iret
repz
pop
push
dec
inc
jne
cmp
repz
push
cmp
rep
popf
xchg
mov
jmp
into
cmp
repz
fdivrs
insb
repz
repz
pop
inc
dec
iret
repz
and
xor
push
add
sbb
lret
repz
repz
out
lock
iret
repz
xchg
cltd
test
repz
mov
cmp
repz
xor
cs
repz
push
push
cmp
repz
dec
rcr
lret
iret
repz
in
repz
repz
mov
cmpl
mov
iret
rep
popl
cmp
rcr
leave
out
cmp
repz
lock
cmp
repz
push
inc
dec
iret
repz
add
sbb
cmp
repz
and
ja
cmp
repz
push
inc
dec
iret
repz
add
cmp
iret
repz
es
iret
rep
mov
iret
aad
iret
ret
cmp
repz
not
fcmovne
repz
repz
clc
cmc
iret
repz
mov
xchg
repz
popf
push
or
cmp
repz
aas
sub
outsb
arpl
push
cmp
repz
dec
fcmovbe
shl
iret
repz
jecxz
stc
iret
repz
mov
test
xchg
pushf
xchg
or
adc
cmp
repz
iret
repz
bound
jne
pop
cmp
repz
inc
popa
insb
jnp
cmp
repz
pop
dec
inc
iret
repz
or
push
cmp
cmp
sub
iret
repz
test
cmp
ret
into
in
loopne
iret
repz
cli
mov
lods
repz
repz
iret
repz
out
iret
repz
cld
addr16
repz
repz
pop
dec
inc
iret
repz
lar
iret
repz
sub
add
repz
repz
xor
cmp
imul
repz
inc
repz
repz
call
repz
mov
scas
mov
repz
xchg
add
adc
cmp
repz
cmp
dec
inc
pop
push
insb
gs
repz
ja
cltd
xor
iret
repz
cmp
fcom
lret
cmc
cmp
repz
out
xor
repz
repz
push
or
iret
jae
popa
push
repz
dec
stos
mov
repz
xchg
iret
jecxz
icebp
clc
into
cmp
repz
fdivl
fs
rep
push
pop
inc
dec
iret
repz
ds
sub
sbb
cmp
repz
add
out
hlt
repz
repz
ret
fxch
repz
scas
cmpsl
mov
iret
repz
xchg
dec
inc
pop
repz
repz
imul
iret
add
sub
repz
cmp
aam
repz
repz
stc
lock
iret
repz
xchg
pushf
xchg
repz
stos
in
in
repz
repz
repz
movsb
lods
mov
orb
fwait
jl
outsb
repz
repz
push
dec
inc
iret
repz
xor
es
adc
cmp
repz
or
faddp
repz
repz
repz
loope
iret
repz
lahf
xchg
lea
cmp
mov
cmp
repz
arpl
js
repz
clts
sbb
iret
repz
xor
iret
repz
fcmovnb
leave
idiv
cmp
repz
in
or
sbb
cmp
repz
daa
cmp
iret
repz
inc
dec
push
pop
outsw
cmp
repz
jge
test
repz
repz
iret
repz
jmp
les
repz
xor
and
cmp
repz
repz
jns
imul
mov
repz
inc
repz
xor
push
add
adc
iret
repz
inc
sbbb
insb
fdivrs
repz
dec
lcall
mov
iret
repz
push
mov
cli
out
shl
jns
lds
inc
dec
insl
fistl
cmpsl
ds
dec
push
mov
lcall
sub
inc
push
inc
xchg
push
add
sub
adc
mov
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
mov
add
mov
sbb
add
je
imul
imul
outsb
je
jne
jb
push
push
jb
arpl
jae
fs
sub
jae
gs
push
insl
gs
jae
imul
fwait
std
gs
imul
outsb
push
fs
fwait
xchg
mov
and
imul
mov
or
jns
push
cmp
cmp
xor
pop
xlat
mov
pusha
outsb
push
adc
insb
xchg
imul
jb
jns
int
sub
imul
imul
outsl
fs
dec
filds
arpl
nop
mov
dec
add
or
jge
lods
xchg
arpl
imul
inc
pusha
popf
mov
push
imul
frstor
mov
je
es
cmpsl
mov
mov
jnp
shll
test
jns
sbb
scas
xchg
jae
sbb
push
mov
ret
out
xor
inc
outsb
jne
ss
cmp
popf
int3
into
dec
lock
in
pop
gs
pop
popa
jb
sbb
enterw
jb
or
sti
aas
imul
ret
xchg
outsb
adc
pop
sarl
addr16
adc
insl
xor
xlat
pop
pop
jne
outsb
je
or
fs
mov
imul
arpl
outsb
int
mov
sbb
jae
jo
je
jo
aaa
sbb
push
dec
push
fsts
out
push
popa
jae
dec
scas
inc
add
jecxz,pn
cwtl
jb
jae
into
fwait
sbb
popl
add
add
jge
mov
add
add
push
dec
push
dec
sub
jnp
sbb
mov
jb
add
outsl
insl
xchg
gs
cmp
mov
les
pop
add
subb
add
movsb
sbb
mov
je
push
inc
and
inc
and
jb
cmp
divb
mov
jb
fldl
fimuls
dec
dec
inc
add
mov
sbb
pop
dec
push
into
aam
rcrb
xchg
cmpsl
or
dec
push
inc
aaa
and
js
hlt
cmp
mov
push
add
push
dec
xchg
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
