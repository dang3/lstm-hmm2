add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
icebp
out
adc
fwait
xor
outsb
sbb
add
or
add
or
push
add
add
add
push
add
add
add
add
add
sbb
jne
or
lret
add
sbb
xchg
add
add
push
add
add
add
add
add
add
add
add
add
xor
jns
adc
lret
add
add
add
add
add
add
imul
or
add
add
add
xor
add
addl
icebp
add
add
ret
add
add
add
add
xchg
sbb
filds
dec
add
push
add
add
jns
push
add
dec
add
add
add
add
xor
add
addl
jno
lret
add
add
add
add
addl
test
and
push
add
add
add
dec
add
push
add
add
add
dec
add
add
hlt
add
add
add
sbb
or
lock
add
add
sbb
mov
add
add
pop
add
imul
test
xor
push
add
add
add
bound
ja
add
mov
push
add
add
add
adc
and
adc
mov
bound
add
add
adc
imul
add
xchg
add
add
add
add
lret
add
add
add
add
push
add
add
add
add
adc
ja
sbb
imul
add
add
add
cmp
addb
add
add
lea
add
icebp
add
fiadds
cmp
add
xchg
add
pop
add
add
add
add
add
add
or
inc
add
add
lret
add
and
mov
add
add
add
add
add
pop
add
cmp
dec
add
into
add
cli
add
add
mov
add
add
add
add
add
js
pusha
add
add
add
inc
add
xor
push
add
sbb
and
or
cli
add
add
add
push
add
add
add
push
add
add
add
mov
add
add
add
add
icebp
add
add
adc
lret
add
add
addl
jno
ja
jno
push
add
add
add
add
add
xlat
add
js
popf
add
add
add
add
jo
sub
push
add
add
jno
push
add
sbb
lahf
add
add
add
add
add
add
add
add
sub
pushf
add
add
add
add
add
add
add
add
mov
add
add
add
sbb
jno
sub
nop
add
add
add
add
add
add
pushf
add
jb
push
add
add
add
test
and
inc
add
lea
add
add
cli
add
jo
rolb
add
add
enter
or
lcall
add
push
add
sahf
add
add
add
push
add
inc
add
add
cli
add
add
add
sahf
add
mov
add
or
add
add
add
add
add
add
add
filds
js
imul
add
add
jns
cmp
lret
add
add
add
add
lea
imul
add
mov
test
popl
jnp
mov
decl
lea
mov
sbb
pop
mov
and
cmp
sub
out
pop
stc
cli
ds
int
ljmp
jbe
int3
jbe
jno
ljmp
mov
xorb
lcall
pop
lods
cmp
push
and
cmc
lcall
inc
aas
jl
pusha
sub
lds
leavew
push
xchg
mov
out
mov
xor
jnp
pop
pushf
addl
lret
inc
mov
and
mov
mov
push
cmp
ss
add
aam
sbb
sub
repz
addl
roll
inc
insb
sarb
fwait
mov
test
mov
xor
into
rorl
cmp
out
sbb
push
stos
mov
jecxz
addl
cmpsb
sub
or
in
in
dec
notb
repz
idiv
adc
loopne
xchg
pop
adc
cmp
jae
inc
dec
test
lret
ret
in
es
pop
push
xchg
mov
mov
fsts
push
jns
out
and
mov
xor
mov
fwait
in
pop
jg
xor
notl
add
pop
in
jno
xchg
test
cmp
scas
jge
mov
xor
xchg
pop
lods
push
mov
and
or
into
js
cmpsb
out
aad
lret
adc
add
pop
jmp
jb
mov
lods
cmp
push
mov
addr16
mov
gs
dec
push
dec
ret
or
subl
or
or
fistps
push
into
lcall
cmp
cmp
cli
mov
loop
jle
addr16
loopne
movsl
xchg
repz
sbb
push
add
out
lock
jo
out
dec
inc
dec
sti
lret
cs
ret
lahf
xchg
jmp
cmc
idivb
push
cmp
ss
aad
xchg
xor
xor
lret
pop
mov
xor
sti
mov
insl
std
pop
mov
mov
push
cmp
xor
xchg
push
nop
ret
push
cli
pop
xchg
or
push
cld
jb
stos
nop
push
out
mov
call
rolb
and
push
adc
leave
dec
dec
xchg
mov
popa
cwtl
sbb
sbb
unpcklps
mov
cmp
jno
jg
or
pushf
lods
pop
out
xchg
xor
pop
pop
add
addr16
mov
popf
lret
lods
or
imul
mov
jle
jns
arpl
leave
jle
cltd
repnz
jge
dec
cs
xchg
jae
xchg
fstpl
mov
nop
pop
sbb
icebp
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
mov
ss
inc
ficoms
pop
int
scas
es
xor
and
dec
idivb
mov
push
xchg
stc
data16
jbe
inc
ficoms
es
cmp
imulb
into
pushf
mov
mov
xchg
xchg
test
and
or
and
out
aad
cmpsl
sub
hlt
ja
sahf
and
aaa
adcb
iret
mov
insl
xchg
xchg
mov
out
gs
into
xor
test
jle
push
jmp
mov
push
xchg
or
das
xchg
sbb
loopne
mov
dec
insb
out
out
mov
dec
movsb
push
fsts
data16
jbe
inc
push
push
mov
stos
push
data16
sahf
fwait
pop
arpl
push
dec
cmp
xlat
stos
mov
cmp
imul
push
mov
mov
adc
mov
lds
es
aas
mov
push
cltd
decb
adc
lds
mov
xchg
mov
cmpsb
mov
pop
mov
out
push
cld
cs
mov
push
xchg
les
ss
popf
data16
sbb
adc
mov
push
sbb
xor
imul
out
and
xor
je
fs
or
mov
jecxz
in
adc
fidivrs
push
mov
sahf
push
outsb
out
testb
cmpsb
ds
xchg
xchg
out
data16
jbe
inc
ficoms
es
push
outsb
out
testb
cmpsb
ds
xchg
xchg
out
cmp
cmp
aad
mov
insb
push
cmp
movsl
stos
and
mov
rol
dec
test
jne
push
push
lret
adc
in
ja
sahf
or
aaa
xchg
iret
mov
adcl
in
imulb
nop
lcall
out
call
push
int
cmp
stos
scas
popf
imul
or
shlb
adc
es
loopne
mov
pop
retw
int3
inc
xchg
pop
jle
pop
dec
pop
mov
ret
jp
or
mov
sbb
stc
cmp
mov
lds
dec
xchg
jp
ss
inc
or
and
pushf
adc
mov
ret
mov
test
cli
cld
icebp
jnp
fisubs
scas
mov
jbe
push
pusha
push
ja
push
aam
les
nop
ret
sahf
add
cmpsb
data16
adc
xor
sub
loopne
in
cmc
pop
stos
mov
cwtl
stos
call
ljmp
and
aas
arpl
addr16
mov
mov
mov
pop
cmpsb
fldcw
add
inc
sub
cmpsl
cli
pop
popf
sub
fistpll
cmp
idivl
enter
sbb
dec
mov
dec
xchg
popl
out
ret
add
xor
and
fcompl
pop
js
clc
push
mov
stos
stc
sbb
xchg
in
cmp
xchg
rorl
clc
out
lahf
or
inc
mov
pop
cltd
enter
enter
pop
xchg
fidivs
popf
shll
std
pop
dec
sbb
fcompl
repz
jnp
fsubr
adc
frstor
lods
and
sbb
loope
cmp
hlt
push
enter
mov
cmp
arpl
addr16
and
inc
lea
mov
pop
nop
jecxz
push
int
scas
mov
and
xor
int
pop
and
lds
icebp
out
pop
dec
imul
lods
call
js
lock
out
lcall
jo
nop
sub
xlat
sti
inc
aaa
push
mov
jmp
rorl
mov
inc
push
xor
inc
fs
fldcw
xchg
imul
shlb
dec
push
nop
push
inc
dec
pop
rorb
ljmp
or
push
sub
ja
sub
mov
jno
sbb
mov
arpl
add
and
lcall
into
pop
push
pushf
out
out
cli
imul
pop
push
andl
call
jo
subl
sub
xchg
push
xchg
pop
sbb
addr16
inc
inc
cmp
mov
dec
dec
mov
jns
push
hlt
push
rorl
and
bound
mov
adc
add
out
sbb
jno
call
mov
jmp
and
adc
aaa
repz
mov
imul
imulb
insb
int3
push
add
mov
popf
sbb
cmpsl
push
loop
test
fwait
and
arpl
out
push
imul
cwtl
ljmp
inc
outsl
cmc
cli
add
pop
loope
into
jmp
aaa
inc
pushf
mov
insb
mov
xor
sti
es
push
iret
daa
pop
cmp
or
daa
mov
in
and
lds
and
fsts
add
addl
xchg
jmp
ret
and
sub
outsl
pop
adc
js
iret
xchg
out
jp
nop
or
sub
idivb
in
or
arpl
inc
dec
fnsetpm(287
popf
mov
mov
lds
mov
popl
sub
fmull
mov
push
mov
in
mov
repnz
cmp
lods
in
adc
push
test
bound
je
je
or
jns
sbb
ss
and
frstor
stos
and
imul
ret
adc
jbe
mov
mulb
stos
fidivrs
add
adc
shlb
cmp
add
or
xor
out
stc
dec
or
insl
xlat
mov
inc
mov
hlt
push
movsl
sbb
pop
sahf
leave
xchg
into
or
mov
jle
repz
jl
ficompl
shrb
jnp
movsl
sub
lretw
sub
stc
dec
mov
gs
int
mov
int
ja
mov
or
pop
xor
adc
aaa
xor
push
or
test
sub
mov
adc
ret
lds
dec
sub
pop
push
sti
add
push
xchg
inc
cmpsb
pop
mov
jno
je
xchg
cmp
push
sti
imull
pop
sub
in
add
out
test
jmp
adc
mov
mov
bound
add
cmp
rorb
mov
inc
xchg
pop
outsl
adc
sub
dec
dec
xor
sbb
mov
and
sub
add
imul
jns
add
clc
mov
pushf
mov
cld
lods
sub
cs
or
xor
inc
fcmovnu
sti
pop
movsb
jnp
clc
inc
sahf
iret
clc
xchg
fs
or
fs
test
insl
lret
fwait
enter
push
aaa
arpl
cmpsb
fildl
xchg
mov
xchg
pop
seto
in
cwtl
inc
jnp
cmp
xor
movzbl
ljmp
aaa
xchg
outsl
in
out
xchg
test
jl
xor
ret
pop
sarb
xchg
or
jge
sahf
xchg
popf
jecxz
cmp
add
movsl
clc
fldcw
imul
inc
lret
mov
mov
outsb
xchg
aad
fwait
jge
cmpsl
cmpsl
adcb
mov
xchg
adc
cmp
sub
jbe
cmp
cmp
ret
nop
int3
fs
stos
cwtl
fucompp
imul
inc
pop
lods
push
arpl
push
push
rolb
jnp
shll
add
adc
dec
dec
add
add
lahf
fistl
pop
and
iret
dec
fs
loop
mov
inc
mov
out
outsb
xor
pop
push
mov
mov
js
xchg
loopne
inc
add
or
cmpsl
xor
mov
outsb
mov
sub
adc
rcll
inc
imul
mov
mov
lds
inc
lea
loopne
aaa
arpl
mov
or
push
push
jo
fnstsw
les
or
pop
stc
inc
pop
xor
jmp
inc
dec
inc
aaa
mov
cmp
mov
or
cli
dec
ret
mov
inc
and
ja
and
or
ret
cmc
xchg
mov
add
pop
mov
test
add
lock
push
mov
pop
sub
dec
adc
jmp
cli
and
jge
cli
push
inc
cwtl
lds
dec
out
lcall
cli
repz
push
dec
push
subb
mov
insl
nop
pusha
daa
push
in
fcom
xchg
push
sbbl
sub
mov
push
add
push
mov
adc
jg
neg
dec
dec
sbb
jns
dec
scas
cmc
fstpl
fwait
inc
mov
jae
xchg
movsb
aas
cmp
sub
jno
call
into
cmp
sbb
std
mov
sbb
dec
jle
push
shlb
sbb
sub
mov
push
sbb
add
adc
mov
xchg
test
jecxz
push
cmpl
xchg
addr16
cmp
popa
cmp
stos
pop
lods
xlat
xor
mov
xsave
fstp
js
stos
and
cmp
adc
fstl
cmp
and
or
mov
ret
mov
mov
cwtl
ficomps
dec
nop
sub
mov
jg
cmp
icebp
dec
push
shrb
std
fs
mov
leave
jae
or
lds
cmpsl
pop
add
pushf
imul
jno
ret
mov
out
push
pop
push
mov
lret
sub
vpsubq
pushf
add
sub
jae
cmp
into
adc
push
push
fistpll
shl
push
sbb
or
jns
xchg
push
inc
cld
dec
das
mov
stos
sbb
and
push
add
rol
mov
cmp
or
hlt
inc
rclb
sub
mov
jp
ja,pt
push
sarb
add
imul
push
pop
test
mov
int3
loop
push
push
xchg
das
lods
call
pushf
les
sub
and
repz
inc
and
stc
clc
aam
sbb
shr
add
int3
lods
das
fstl
lret
in
add
call
sbbl
adc
stos
jg
jbe
add
fistpl
bound
and
jo
fistps
push
test
enter
push
dec
test
mov
jo
in
mov
pop
inc
pushf
shlb
pusha
mov
sbb
cmp
icebp
sahf
mov
movsl
jmp
lcall
pop
cmpsb
fsub
dec
test
pop
lret
push
arpl
out
cltd
shrb
add
popl
mov
rcrb
in
or
dec
imul
movsb
imul
call
lahf
dec
addr16
decl
mov
mov
push
fwait
jae
cmp
mov
lds
mov
mov
sub
iret
xor
ficoml
cld
lock
xchg
mov
repz
cs
mov
ret
or
xor
xchg
repnz
out
push
and
xchg
orl
insb
push
dec
dec
xor
mov
arpl
enter
push
dec
int3
popl
mov
pop
jae
jae
xchg
push
movsl
mov
sub
rcr
push
mov
xor
mov
stc
add
cli
jg
cmp
push
aad
or
xchg
fdivrl
pop
imul
arpl
inc
fwait
jl
jne
push
js
lds
nop
sub
mov
xor
cld
inc
or
int
hlt
sub
sbb
mov
cltd
add
rcrb
clc
std
mov
leave
adc
lret
cpuid
adc
dec
mov
mov
scas
cld
dec
movsl
insb
in
add
xorl
jns
and
je
and
lcall
or
fcmovbe
rolb
mov
xchg
bound
jge
movsl
sub
xor
movsb
xor
int3
addr16
je
adc
not
fldt
sbb
fildll
pop
push
sahf
loop
jge
pop
pop
lahf
lods
or
inc
mov
dec
or
pushf
xorl
sbb
popf
pop
push
imul
ret
ss
outsl
scas
rclb
clc
aas
outsb
lret
jns
xchg
adc
stos
inc
and
pusha
mov
push
sub
jbe
push
pop
aas
pop
mov
push
lret
ljmp
dec
sbb
jbe
mov
mov
and
in
jl
out
sbb
inc
xor
dec
dec
loop
dec
xchg
jne
testb
rorb
or
cwtl
mov
sub
addb
ret
sub
jge
mov
sub
push
nop
insb
aaa
pop
jecxz
lods
leave
sbb
in
imul
pop
je
adc
fisttpl
into
mov
cmc
pusha
pop
enter
fistl
rorl
or
mov
je,pt
xchg
mov
and
adc
out
sbb
lahf
stos
popa
xchg
dec
stos
mov
fmull
fcom
shrb
and
call
cmc
push
and
arpl
or
daa
lahf
in
pop
sbb
lods
cltd
mov
adc
ljmp
fcmove
test
mov
hlt
xchg
out
jp
mov
cmpsb
jge
push
jge
inc
pop
sbb
test
je
into
sub
aam
jnp
and
lcall
mov
dec
xchg
mov
jbe
call
adc
push
popa
push
and
loop
cmp
pushf
stos
adc
pop
loope
adc
push
push
sub
es
iret
add
mov
xor
and
outsl
jnp
xchg
sub
int3
xlat
mov
jecxz
addr16
mov
test
push
mov
lret
adc
es
int3
cmp
in
cltd
adc
lds
cmp
gs
mov
pop
and
lcall
enter
cmpsb
pop
xchg
cmpsl
push
rol
test
and
and
outsl
lcall
mov
cmp
nop
dec
rorl
add
popa
mov
dec
ret
call
xchg
adc
insb
pop
adc
ljmp
call
sti
ficoms
aam
adc
xor
cmp
mov
bound
pop
movsb
push
mov
call
cmp
or
mov
mov
outsl
jp
sbb
stc
dec
dec
lds
lods
add
push
jecxz
ret
sub
jo
jnp
cmp
inc
mov
sub
jns
scas
pop
jo
push
and
pop
mov
scas
sahf
xor
pop
sub
and
aam
pop
outsb
mov
sbb
or
int
inc
sbb
dec
cmpb
mov
sbb
fidivrs
mov
jbe
and
add
int
sar
cmp
jmp
ds
add
pop
jne
xchg
es
insb
repnz
mov
in
pop
jecxz
out
dec
mov
mov
cli
test
adc
dec
or
scas
xchg
lret
add
add
jl
loopne
nop
mov
and
pop
mov
pop
sbbb
cmp
xrelease
jne
lret
dec
jae
sbb
xchg
fcmovnu
pop
cmp
scas
rorb
test
mov
pop
sub
pop
add
repz
les
mov
jl
aad
fadds
xor
pusha
cmp
lret
or
inc
push
xor
add
pop
push
sbb
stos
jo
pushf
xchg
subb
lds
mov
and
enter
andl
test
push
es
push
call
les
inc
pop
pop
push
xor
mov
push
dec
fnstsw
mov
shrb
test
lret
xor
adc
roll
pop
xor
je
scas
push
out
shrl
add
jg
pop
mov
mov
sub
imul
out
jg
mov
loope
movsl
inc
lds
nop
in
mov
dec
mov
or
mov
cmp
xchg
lcall
adcl
push
in
addr16
jnp
add
insb
and
jl
fildl
insb
stos
cmc
nop
stc
cli
adc
in
test
enter
iret
sub
imull
xchg
pop
sub
pop
bound
inc
add
es
arpl
cmp
jg
adc
sbb
add
sbb
call
scas
inc
mov
push
test
leave
dec
xchg
lcall
or
inc
cmc
or
jo
mov
add
lahf
test
in
mov
pop
fistl
xlat
xchg
push
jg
mov
fisubl
rol
dec
push
xor
pop
enter
add
sbb
and
lds
mov
jmp
aaa
inc
pop
lahf
mov
xchg
in
fisttpl
das
aad
movsl
pop
clc
ret
mov
mov
inc
test
inc
dec
adc
xchg
lret
aam
xorb
cld
push
push
add
pop
pop
cmp
insb
mov
sbb
push
add
out
lods
es
mov
xchg
lcall
xchg
push
ljmp
dec
andl
insl
jecxz
out
cs
dec
fs
dec
test
scas
fmull
bnd
shlb
jmp
cltd
sub
inc
int
jns
inc
lods
push
and
mov
jo
inc
inc
xor
jbe
in
int
mov
jl
push
add
cmp
lret
data16
cs
fidivl
jno
stos
scas
mov
and
sti
mov
data16
movsl
mov
push
jp
std
test
mov
mov
xchg
cwtl
cmp
lds
inc
lock
jge,pt
fcompl
or
inc
popf
fbld
imul
cmp
adc
insb
cmpsl
jb
shl
in
jno
jne
adc
mov
jbe
je
movsl
pop
mov
xchg
dec
shrl
sti
jne
out
push
push
mov
loope
popl
or
fdivr
push
in
push
xlat
xchg
cmp
scas
mov
ret
lods
test
das
lods
add
adc
test
jmp
leave
cmpb
xor
mov
repz
cmp
in
imul
insb
popa
dec
push
or
int3
rcrb
out
xor
into
out
cmc
dec
movsl
jae
mov
adc
jns
fs
inc
nop
test
pop
lock
dec
add
sbb
test
int
xor
ja
clc
aaa
push
add
and
es
lahf
lods
pusha
out
lcall
jno
nop
sub
fwait
mov
lcall
mov
and
mov
cwtl
out
lret
repz
xchg
outsb
mov
inc
clc
jmp
outsl
addl
sbb
clc
movsb
cld
mov
xchg
push
push
cli
int3
dec
cmp
inc
xchg
ss
push
out
adc
xchg
or
xchg
sub
inc
mov
and
imul
fsubs
inc
rcrl
nop
sub
mov
pop
xchg
cmp
xchg
test
push
jle
mov
shr
and
sub
mov
and
test
cmp
testb
mov
or
int3
cwtl
push
lret
stc
pop
and
repnz
stos
pop
mov
adcl
and
scas
xchg
sub
jno
sub
xlat
xchg
rcrb
adc
icebp
xlat
lock
jns
mov
sub
aas
add
cmc
jns
push
or
xor
pop
lret
insb
mov
mov
stc
shll
mov
das
xor
imulb
xchg
aam
loop
xchg
lcall
push
mov
outsb
or
rolb
sti
rclb
popa
repnz
icebp
dec
mov
mov
sahf
out
push
dec
push
jmpw
add
ss
dec
mulb
or
mov
or
neg
sbb
adc
pop
fsubs
shl
pushf
popa
dec
into
arpl
cmp
pop
mov
cwtl
ja
fldl
sub
sub
bound
adc
xchg
cli
js
mov
jnp
mov
xor
mov
add
test
sbb
ret
mov
pop
push
cmp
cmp
outsl
adc
lds
ja
cmpsb
xchg
adc
bnd
pop
loopne
lock
adc
aas
test
cwtl
out
leave
sub
nop
or
jmp
mov
cmc
mov
and
add
dec
in
repnz
mov
out
aaa
aas
jno
arpl
repnz
nop
cmp
mov
cmc
imulb
pop
xor
mov
lahf
mov
pop
mov
lock
andb
inc
sub
ret
dec
fidivrs
repz
cwtl
mov
push
popa
sti
mov
mov
pop
fcomp
pop
movsl
sti
sbb
fldcw
fsubrl
jno
push
or
shll
lea
lcall
jo
mov
add
mov
aad
sbbl
leave
or
add
subb
cmp
adc
fwait
das
jg
push
jp
scas
pop
test
test
or
clc
xchg
cmp
fstp
xchg
mov
ret
jmp
test
add
out
leave
xor
loopne
push
sbb
ret
xchg
lahf
fnsave
xchg
cltd
gs
jmp
aas
adc
mov
cmp
xor
je
adc
sub
sahf
rcrl
mov
rolb
cltd
jno
test
cmp
test
adc
xor
pusha
mov
xor
subb
pop
out
outsb
cmp
push
or
adc
inc
mov
mull
adc
loopne
push
push
ss
repz
dec
inc
and
aam
pop
cmp
sub
lods
sub
cli
out
rclb
add
pop
daa
mov
cld
int3
push
and
cmp
clc
xchg
jg
dec
dec
mov
or
leave
sub
jecxz
clc
push
sbb
les
jbe
pusha
aam
mov
arpl
and
jle
cmp
jmp
mov
lret
adc
test
xchg
jg
movsb
jne
jae
jl
inc
add
or
push
dec
inc
sub
add
jbe
negb
xor
and
in
scas
lock
cmpsl
adc
dec
scas
dec
fnsave
out
out
xchg
adc
pop
push
lea
cmp
sbbb
mov
dec
scas
cli
es
xchg
shrb
call
inc
out
pop
std
jecxz
add
adc
cmpsb
leave
jl
push
int3
dec
repz
xchg
jl
mov
push
mov
dec
lahf
jo
pop
hlt
fcmovnu
mov
sub
inc
ficoms
es
push
outsb
out
testb
cmpsb
ds
xchg
xchg
out
data16
jbe
inc
ficoms
es
push
outsb
out
testb
cmpsb
ds
xchg
xchg
out
js
pop
ficoms
es
push
outsb
out
repnz
pop
fildll
mov
das
jb
or
clc
mov
mov
xchg
sbb
mov
icebp
loope
mov
das
sarl
add
cmp
dec
in
jg
shll
scas
inc
mov
adc
add
stc
psraw
shrl
sarl
dec
mov
pop
and
inc
mov
adc
add
sub
popa
pop
push
das
pop
aas
mov
outsl
jns
jno
or
ficoms
fwait
jge
xorw
rcll
mov
cmp
pop
xchg
in
hlt
inc
insb
ljmp
fs
push
xor
jmp
dec
pop
fidivrl
sti
pushf
pusha
scas
mov
mov
nop
out
mov
roll
cmp
inc
rcr
in
mov
adc
fisubrl
mov
cltd
cmp
pop
pop
nop
add
xor
sub
and
sbb
jg,pn
mov
and
aad
leave
pop
mov
xor
scas
push
inc
mov
inc
out
je
je
loope
cs
fs
dec
pop
xchg
adc
js
mov
inc
stos
mov
and
psraw
shrl
lods
aas
mov
in
xchg
outsl
cmp
repz
mov
aas
fists
out
gs
orl
pop
xchg
das
scas
aas
fildll
aam
subb
sub
mulb
sahf
add
and
pop
mov
gs
inc
mov
push
jp
dec
or
fsubs
rclb
push
repnz
and
xor
sub
fisubs
nop
orl
mov
popa
mov
jg
popa
lahf
push
scas
inc
mov
adc
add
icebp
psraw
shrl
sarl
dec
mov
jg
popa
lahf
push
scas
inc
mov
adc
add
icebp
ja
ret
std
cmp
adc
outsb
jb
int3
pushw
test
pop
mov
lret
mov
cmpsb
mov
cmc
xor
sub
lods
mov
into
pop
int3
iret
sbb
repz
fxch
mov
loope
mov
pop
and
sbb
insl
ret
out
cltd
sub
push
push
ret
nop
mov
cmp
aas
lds
adc
jno
or
das
hlt
clc
push
pop
scas
fildl
add
fstpt
sbb
or
cmp
sub
fwait
push
jp
je
in
data16
repz
xlat
pop
movb
test
add
jp
and
adc
lods
stc
mov
imul
cmp
fnstcw
inc
subl
pop
int3
adc
addb
cmpsb
std
mull
mov
out
stc
iret
lret
or
call
jns
or
mov
lds
lds
ds
xchg
push
mov
or
pop
test
jmp
push
or
es
aad
ret
dec
jge
fcompl
or
mov
mov
adcb
test
mov
add
mov
xor
movsb
mov
dec
insb
insb
sbb
push
sub
push
add
jmp
or
xchg
inc
or
push
incb
sbb
imul
addr16
inc
push
jp
jmp
outsb
popa
jb
xor
cmc
rolb
fstps
lods
int3
cmpsb
mov
movl
mov
insl
add
addr16
frndint
std
fsubp
jno,pn
subb
push
mov
cs
jmp
out
out
lods
xchg
addps
mov
inc
dec
lret
ljmp
outsl
xor
jl
xchg
test
aas
or
mov
test
jo
mov
mov
dec
mov
popf
sbb
mov
or
pushf
xchg
jg
mov
xor
pop
pop
inc
negb
jp
dec
or
psubq
xchg
mov
test
or
push
shrl
cmpsb
pop
lret
and
out
push
ror
loopne
jae
cs
lock
rclb
jne
cmp
leave
sahf
mov
cmp
sub
add
clc
pop
int3
xchg
fsts
or
jg
jns
inc
pop
push
mov
sbb
jae
xor
or
pop
xchg
mov
test
cmpsl
int3
loop
jecxz
push
jns
fsub
out
fstps
sbb
mov
mov
call
cli
adc
loopne
lcall
leave
cs
movsl
and
aaa
sub
out
mov
mov
cmp
or
sti
jo
pop
and
jge
sbb
sbbl
jle
aam
xchg
sub
lock
push
movl
stos
sub
dec
repnz
les
sub
jne,pn
pushf
sbb
mov
arpl
sti
int3
push
test
pop
ds
pop
xor
xchg
cmc
cmp
hlt
aaa
mov
push
icebp
inc
inc
inc
mov
dec
mov
mov
adc
xor
aad
outsb
movsl
sbb
inc
xor
aad
stos
dec
add
lret
jnp
sbb
inc
push
inc
sub
pop
sub
pop
test
inc
lea
push
and
ja
jns
gs
out
xchg
out
lea
sbb
cs
lods
into
xchg
cld
mov
lret
pop
dec
and
test
mov
adc
dec
xor
push
jae
sub
mov
sbbb
out
test
xchg
sbb
jge
and
push
push
mov
repz
or
lock
mov
push
xor
pop
push
js
push
xor
sub
xchg
ret
andb
rclb
cld
push
inc
cmpsb
jbe
xchg
pop
pop
int
and
sub
xchg
push
outsl
repz
push
xchg
sub
mov
inc
add
sbb
add
sub
or
mov
mov
arpl
xchg
cmpsl
lods
pand
mov
add
adcb
imul
shlb
xor
out
rcrb
andb
jb
out
or
dec
xchg
fimull
stos
test
test
out
aad
xchg
lods
orb
fcoml
mov
fwait
js
cmpsl
inc
mov
pop
jnp
xlat
iret
inc
bound
addr16
pop
xchg
fwait
inc
mov
inc
adc
and
imul
stos
sbb
std
cmp
push
mov
or
insl
or
jb
jnp
test
adc
push
pop
mov
loope
clc
mov
stos
sbb
ds
out
mov
out
aaa
xchg
push
clc
jg
dec
not
or
aad
pusha
add
add
lahf
adc
mov
dec
out
jle
jg
popa
jle
sti
push
mov
mull
pop
cltd
fsubrp
scas
or
loope
cltd
mov
jle
xchg
rorl
push
ja
rcll
push
push
in
jp
pop
pop
mov
add
dec
mov
push
sbb
sbb
addr16
sub
inc
or
dec
push
xchg
jle
es
xchg
movl
adc
fistpll
popa
push
sub
in
jmp
pop
push
pop
jp
cmovl
loope
hlt
cli
lock
xchg
sbb
sti
lods
lret
das
bound
cli
popl
sbb
pop
mov
repz
pop
add
lock
fwait
xor
cld
xor
or
xor
adc
sbb
xchg
jecxz
inc
pop
fwait
lret
jbe
and
notl
nop
mov
xor
clc
popf
es
adc
or
and
lds
jbe
mov
sbb
mov
jp
leave
fs
ret
xor
rolb
sti
das
scas
jne
pop
xor
inc
adc
sbb
cmp
es
gs
jge
jge
mov
inc
outsl
xchg
mov
or
xlat
and
enter
pop
shl
inc
add
cmp
cmp
jmp
lods
in
xor
and
test
out
dec
cmpsb
addb
pop
push
cltd
adc
imul
aad
popf
jno
enter
in
lock
das
aaa
or
ljmp
imul
mov
pop
lcall
sbb
fcomps
daa
and
or
les
adc
pusha
mov
or
aaa
jle
mov
andl
jo
inc
adc
les
push
inc
push
pop
pop
add
pushl
clc
in
aaa
imul
cmp
xchg
out
push
in
fidivrs
lret
sub
repz
in
add
adc
pop
dec
in
call
addr16
out
stc
push
add
adc
mov
pop
jmp
divl
mov
jecxz
movsb
mov
inc
push
sbb
xchg
ja
aam
add
loope
fnstenv
sarb
loope
push
jne
dec
adc
sbb
stos
sub
fidivl
mov
popa
das
cmp
mov
out
lret
or
insb
cli
subl
xchg
pop
push
std
int
fdivr
dec
popf
jle
addb
ss
clc
popl
movsb
mov
jns
movsb
pop
xor
push
or
xchg
cwtl
test
add
mov
shr
loopne
rolb
and
ficomps
xchg
pushf
sbb
int3
mov
xlat
test
push
out
or
mov
pop
mov
cs
scas
add
rorb
test
pop
addl
andb
inc
imul
jb
aaa
rolb
jg
ret
adc
jno
pop
sbb
jns
xchg
cmp
and
mov
cmp
push
out
inc
or
xor
movsl
aaa
inc
pop
rcrl
inc
or
add
mov
add
cmp
repnz
jg
cmp
into
xor
add
shr
sub
pop
scas
xchg
push
and
lods
jecxz
pop
lea
adc
jp
lret
int3
jbe
bound
jmp
pop
mov
sub
mov
jbe
in
fxch
daa
cwtl
adc
add
dec
sti
mov
lea
call
or
aaa
push
call
xchg
add
js
incl
mov
rol
call
je
ss
test
and
hlt
ds
int3
outsl
sbb
mov
lea
cwtl
xchg
clc
mov
sahf
mov
push
dec
mov
ljmp
jbe
ret
push
or
sti
pop
jnp
mov
pop
inc
fldcw
popf
push
scas
lea
mov
and
fimuls
outsb
inc
clc
aad
dec
loope
arpl
in
in
xchg
inc
mov
sub
xchg
sub
stc
sub
fsts
fld
push
scas
and
push
imul
push
cmovo
cmp
leave
mov
and
movb
or
stos
gs
test
jmpw
add
imul
fcomi
and
sbbl
sbb
sub
gs
mov
push
neg
arpl
adc
sub
add
jecxz
xchg
daa
add
and
dec
sbb
xchg
aad
pop
dec
push
or
cmp
cli
push
arpl
inc
sub
stos
rcrl
or
cmp
jp
mov
dec
jg
push
shl
popa
cli
outsl
push
iret
mov
negl
or
jno
jae
cmpsb
stos
adc
xchg
pop
sbb
mov
inc
jae
lds
jae
jp
test
or
dec
dec
mov
xlat
pop
mov
pop
push
ret
cmpsl
xchg
jb
movsb
xor
and
jo
add
stos
popa
pop
jg
lret
es
cmp
jno
arpl
fcompl
cwtl
push
decl
es
cmp
mov
dec
sarl
cld
lahf
xor
push
jecxz
dec
nop
test
movsl
adc
stos
testb
push
push
int
loope
cld
por
lods
js
adc
xchg
xor
push
aam
movsb
mov
popa
push
lock
hlt
fistl
and
mov
popf
pop
push
xchg
mov
jo
cmpsl
jne
pop
dec
loopne
fiadds
or
retw
xchg
push
fisttpl
mov
add
mov
xchg
jb
fisttpl
adc
xor
test
fcompl
mov
adc
cmp
sti
jmp
sub
sub
push
rcrb
jnp
cli
int
jo
jg
fsts
lods
notl
sub
lret
loop
imul
mov
sbbl
mov
adc
imul
das
jnp
in
jns
leave
adc
pop
mov
into
push
shlb
add
mov
xorl
pop
fabs
out
cmpsb
mov
jp
sti
movsl
jo,pn
xor
xchg
lods
cmp
adc
dec
xor
je
lret
inc
out
aad
ret
mov
orl
inc
imull
mov
cmp
jl
fs
lock
adc
rolb
es
aam
sub
push
sbb
cmpsb
mov
xchg
addb
cmc
lds
mov
mov
dec
repnz
and
data16
inc
rcrl
or
inc
test
push
ret
mov
scas
push
cwtl
adc
subl
rorl
in
adc
movsb
cmpsb
hlt
jb
cli
leave
ljmp
or
ljmp
dec
sbb
ss
mov
and
pop
icebp
in
outsl
setg
leave
aaa
enter
pop
lods
nop
roll
imul
lahf
clc
add
dec
je,pn
inc
jle
sub
mov
shrl
sti
inc
xor
xchg
sbb
cs
shr
add
lock
push
aas
test
inc
mull
shlb
sub
cmp
out
vmovsldup
cltd
lret
cmpsl
pop
add
jne
xchg
cmpsl
mov
iret
or
pop
mov
inc
pop
sbb
xor
inc
imul
orl
cmp
movsb
roll
mov
dec
mov
pop
sbb
sub
add
out
xchg
mov
fcmovb
stos
jmp
inc
mov
adc
in
sbb
pop
stc
jno
mov
and
aaa
or
ucomiss
xchg
insl
push
cmp
aam
dec
xor
xlat
stos
sti
mov
mov
xchg
scas
cmp
call
stos
push
emms
mov
jmp
test
xor
mov
enter
mov
sbb
jb
xor
jnp
jmp
xchg
stos
repz
dec
mov
hlt
xchg
pop
fists
dec
jae
fbld
roll
or
sbb
fsubl
les
js
jbe
adc
sbb
daa
mov
sbb
mov
xorb
icebp
outsb
mov
add
lret
jne
test
in
psrad
flds
mov
push
dec
xorl
jbe
fs
call
aas
xchg
sbb
aaa
int
add
add
inc
loopne
es
xchg
sbb
mov
loopne
test
or
cmpsb
sar
sbb
push
repnz
ss
insl
sahf
push
das
or
test
pop
cmp
ret
mov
out
jmp
fs
push
shll
cmp
mov
out
mov
sub
push
hlt
or
sub
cmp
pop
popf
addr16
repnz
dec
enter
inc
imul
test
pop
xchg
incb
add
pop
rclb
push
push
dec
loope
and
mov
aad
pop
xor
sbb
xor
push
xchg
dec
xchg
cmp
icebp
mov
mov
dec
add
popa
and
stos
lahf
mov
ja
mov
arpl
daa
ret
loop
fdivrl
je
mov
gs
std
or
shl
add
aaa
ficompl
mov
test
xchg
mov
sbb
dec
lcall
mov
into
ret
mov
ret
out
push
push
adc
js
dec
or
pop
inc
xchg
xor
xor
push
rorl
push
push
push
push
fnstcw
and
push
fdivs
sbb
inc
mov
sbb
sbb
xchg
xor
test
sti
dec
cmp
pop
dec
sub
test
ljmp
mov
sbb
xchg
inc
cmp
outsb
fisttpll
adc
orl
gs
mov
dec
negl
push
inc
xor
add
and
in
sub
xlat
inc
imulb
pop
cmp
data16
leave
sub
add
or
dec
pop
arpl
add
jge
jp
stos
fs
add
ret
js
jp
ficoms
cmp
or
movl
imul
mov
int3
jge
dec
push
jmp
dec
lahf
inc
xor
xchg
rcll
sbb
mov
mov
clc
negb
mov
mov
in
xchg
out
cmp
pop
jns
test
test
adcl
and
daa
sub
call
je
out
inc
scas
cmp
movsb
adc
mov
pop
mov
aas
xor
clc
lret
aas
imull
push
aas
repnz
push
imul
xchg
or
pop
mov
xor
mov
adc
ss
popa
repnz
add
cmpl
shll
test
test
mov
push
aas
mov
adcl
mov
push
xchg
inc
xchg
push
inc
lret
incb
mov
pop
ret
popa
cmp
js
inc
ret
or
fwait
jne
and
icebp
mov
or
cli
sbb
sbb
xor
push
pop
xor
sub
mov
adc
imull
test
mov
push
xor
out
outsl
in
xor
addb
push
fisttps
or
vmovd
addr16
xchg
inc
pusha
xchg
inc
jo
lsl
jle
lock
dec
dec
dec
adc
fwait
lods
ja
rorb
xor
ret
adc
adc
inc
test
inc
dec
call
in
cmp
aas
stos
pop
or
dec
outsl
mov
or
inc
ljmp
shlb
icebp
xchg
movsl
push
dec
cs
jge
repz
xchg
or
dec
pop
stc
data16
push
jmp
test
sbb
or
pop
cmp
sarl
push
and
lahf
inc
adc
out
lea
loop
stos
and
orl
fwait
adc
and
pop
idivb
sti
dec
jmp
movsl
mov
bnd
fprem1
and
ja
sub
sarb
fprem
jg
outsl
jmp
xchg
sub
sti
cmpsb
mov
xchg
lea
or
scas
es
sahf
xchg
jae
jecxz
lret
in
mov
pop
mov
xor
sub
add
loope
mov
or
xchg
adc
mov
popa
xor
fbld
iret
sub
popa
sahf
sub
jp
cmp
sbb
adc
imul
push
daa
xlat
test
lcall
cmp
xchg
pusha
jns
call
cli
cmp
and
push
loope
cld
subl
aas
push
enter
lret
std
cmp
iret
ret
jle
cmp
dec
pop
lcall
mov
adc
lret
mov
mov
dec
add
mov
mov
xchg
pusha
shlb
pop
mov
pop
pop
jno
dec
add
lods
sbb
add
or
and
mov
jl
pushl
sbb
mov
adc
inc
mov
ret
inc
pop
addr16
scas
mov
xor
xor
jns
and
add
mov
cmp
loope
pushf
push
loop
dec
and
mov
test
xor
inc
stos
sbbl
ja
add
mov
mov
mov
xchg
xchg
lods
inc
ds
cmp
loope
scas
scas
push
xchg
jle
cmp
ljmp
js
rclb
aad
loop
jmp
repnz
dec
jg
mov
dec
test
mov
inc
movsb
out
sub
mov
sub
xchg
popa
sub
gs
and
fbld
stos
cmpsl
add
jns
and
nop
inc
into
in
xchg
or
push
or
lret
insb
push
and
out
sbb
push
orl
lret
aam
push
mov
mov
das
aam
test
lods
iret
mov
jge
lods
mov
xor
iret
pop
mov
cmp
mov
outsb
je
xchg
das
lret
lret
or
je
pop
pop
shr
je
fcomp
fstl
push
pop
fiaddl
push
add
xchg
sub
gs
jns
fimull
lret
cmp
test
or
inc
movsl
mov
mov
xor
in
cmp
xchg
les
xchg
sub
into
clc
shll
into
mov
mov
inc
xchg
mov
or
rorb
mov
mov
add
xchg
loop
xchg
push
stc
out
cld
mov
faddl
lods
xor
icebp
cmp
dec
add
and
test
enter
mov
fcompl
sti
test
sbb
push
lret
insb
xchg
ss
cld
out
and
adc
adc
xor
adcl
sub
mov
mov
inc
adc
pop
jae
in
pop
lods
jecxz
dec
lahf
ret
scas
adc
mov
iret
xchg
popa
and
adc
scas
pop
fcmove
lods
aaa
in
xchg
dec
xchg
pusha
pop
xchg
jnp
dec
adc
les
jo
arpl
push
fiadds
or
mov
or
dec
xchg
or
fildll
imulb
out
pop
decl
cmp
mov
cwtl
addl
xlat
aas
jne
push
cltd
pushf
add
push
xor
adc
aam
or
rorl
mov
test
add
xor
dec
add
call
xor
push
mov
mov
gs
mov
xchg
sub
xchg
or
pop
loope
and
fcmovnb
and
add
cli
cmp
inc
rcrb
and
cmc
int3
jbe
jmp
insl
or
fwait
incl
in
jno
bound
stos
out
pop
repz
add
es
push
pop
xchg
scas
adc
jnp
mov
shll
stos
push
int
mov
sbb
shl
aad
arpl
sub
push
outsb
rorl
iret
repnz
push
sbbb
int
lcall
int
lds
mov
xchg
scas
push
repz
les
mov
or
pushf
lret
into
movsl
push
subb
sub
sbb
jecxz
cmc
pop
divl
imul
lret
arpl
sub
sbb
out
addr16
subb
cmpl
mov
push
pop
scas
das
fnstsw
mov
mov
jg
popa
lahf
push
scas
inc
mov
adc
add
icebp
psraw
shrl
sarl
dec
mov
jg
popa
lahf
push
scas
inc
mov
adc
add
icebp
psrad
shrl
aas
mov
movsl
pop
xchg
outsl
cmpb
popa
lahf
pop
scas
inc
mov
adc
bswap
pop
pop
das
jmp
pop
xchg
outsl
add
sahf
xor
inc
inc
test
add
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
sahf
adc
scas
and
mov
gs
mov
cs
aad
dec
outsb
cmc
outsb
in
adc
scas
and
jne
adc
cltd
push
test
mov
movsl
pop
cmpsl
jle
jle
outsb
in
or
sbb
sub
pop
out
out
jg
xchg
sub
rcrb
and
negl
jne
push
fadds
popf
into
test
xchg
sub
mov
jbe
push
sub
pop
pushf
pop
adc
adc
and
jnp
fwait
push
jnp
in
pop
push
mov
fwait
jle
xchg
sbb
dec
push
call
outsb
jne
cmp
icebp
test
fbld
jl
cmc
outsb
mov
ja
mov
push
iret
push
add
out
loopne
jne
jnp
dec
shrl
mov
or
into
nop
add
xor
dec
push
and
push
or
aas
dec
ficomps
xlat
dec
aad
cmpsb
jle
jbe
outsb
jno
int
scas
and
int3
loopne
je
xor
inc
dec
jle
sbb
sbb
jecxz
add
and
jne
jl
xchg
push
popf
lods
aaa
mov
fs
outsb
in
adc
fiaddl
push
test
mov
out
add
cli
bound
pop
mov
or
add
roll
dec
mov
into
or
add
loopne
shrb
pop
movsl
and
xchg
sti
adc
pusha
xchg
data16
inc
jne
gs
xchg
push
test
mov
movsl
pop
aad
lds
outsb
in
adc
scas
and
jne
gs
xchg
push
test
mov
movsl
pop
aad
lds
outsb
in
adc
frstor
mov
mov
rcl
scas
scas
pop
lret
ja
pushf
pop
push
sbb
fistl
pop
push
and
ss
cld
in
push
dec
outsl
mov
dec
stc
push
dec
lret
jo
push
jo
rorb
pop
jo
loop
stos
lret
daa
pop
xor
mov
in
iret
jns
and
push
sahf
or
insb
outsb
cld
scas
sub
or
sbb
imul
inc
jno
in
mov
adc
jg
push
fwait
push
fnstenv
in
scas
lcall
fisubs
xor
insl
sbb
dec
test
lcall
mov
jg
mov
cmc
addr16
ret
mov
fnstcw
adc
es
mov
push
jo
clc
xchg
and
push
je
pop
push
lds
ja
push
test
jb
jg
pop
int3
mov
xchg
mov
adc
into
mov
shll
aas
or
test
sti
rcrb
jmp
iret
in
mov
ds
out
mov
mov
aam
les
in
faddl
adc
mov
xchg
in
sub
test
jge
lds
push
push
mov
or
ret
jle
push
add
mov
clc
das
or
jge
jnp
scas
adc
lods
pushf
xor
add
xchg
push
cmp
lret
in
lock
fsubrp
std
xor
popf
cld
push
mov
xchg
test
xor
push
fisubs
ret
lods
mov
lea
rol
xor
dec
pusha
dec
fs
dec
stos
mov
popa
mov
or
cli
repz
jbe
dec
dec
and
mov
clc
ret
mov
aas
shr
jbe
add
and
mov
mov
arpl
jae
mov
shrb
int3
into
js
and
and
sbb
repnz
stos
hlt
hlt
gs
push
mov
out
mov
scas
es
test
scas
inc
xchg
xchg
xchg
push
mov
pop
sbb
das
dec
jmp
cltd
outsl
adc
daa
aas
ljmp
ja
scas
mov
cli
scas
mov
and
dec
cs
cmp
or
enter
mov
scas
cltd
fdivs
gs
xchg
shr
pusha
and
lods
insb
jno
ret
xor
aaa
int
popf
inc
insb
dec
xor
divb
stos
das
aad
adc
sti
sub
push
lea
adc
sbb
movsb
stos
mov
call
repz
loop
xchg
cmp
filds
imul
or
pop
pusha
pop
shl
mov
imul
inc
das
push
xchg
stc
stos
jg
sbb
daa
push
mov
jge
adc
jne
xchg
pop
mov
sbb
loope
decl
aas
aas
hlt
jle
cmc
aad
gs
ss
push
push
fadds
sbb
jno
cmp
test
lods
sbb
ljmp
subl
mov
addr16
inc
xchg
leave
inc
cmp
js
cmp
push
and
mov
sub
pusha
dec
aas
xchg
jno
xchg
movsb
pop
sbb
inc
sub
icebp
adc
and
dec
cli
jbe
movsl
xor
cs
lods
mov
jl
in
adc
icebp
xor
xor
cmp
icebp
cmpsl
cltd
mov
shrl
sub
jg
mov
pop
push
fcompl
call
xor
notb
nop
cmp
jb
test
popf
stos
mov
ret
vmwrite
sbb
fwait
pop
mov
ja
mov
nop
clc
sub
adc
iret
ret
pop
jge
nop
mov
jae
or
cli
xchg
repz
xor
mov
fdivrl
xchg
repnz
lock
sbb
icebp
rolb
pop
ret
cmp
xor
cmp
xchg
lea
ret
xchg
xchg
push
aas
das
mov
xchg
xor
sbb
mov
imul
fstpl
out
imul
dec
xor
ss
jl
lds
mov
mov
out
pop
gs
jnp
mov
mov
xor
ret
dec
cmp
test
loopne,pn
movsl
cmp
bnd
out
sti
adc
hlt
jno
loope
add
nop
push
iret
cmp
jns
mov
add
push
sub
xchg
je
and
pop
jecxz
test
add
add
fdivl
fimuls
dec
inc
xchg
cmp
std
jmp
pushf
cwtl
daa
push
and
call
push
jno
mov
jmp
ljmp
or
mov
fcomps
stc
and
jbe
dec
pop
mov
or
into
push
mov
xchg
out
in
scas
mov
scas
jecxz
test
dec
fwait
and
arpl
or
fcmovnu
int3
or
xor
dec
aaa
inc
xchg
jno
or
cmpsb
dec
jp
mov
fucomip
pop
adc
pusha
jbe
ret
and
rcrl
loop
dec
fwait
mov
shlb
push
arpl
icebp
cmp
inc
ja
sar
lret
mov
mov
push
xlat
ds
fisubrs
aas
xchg
xor
cmp
imul
jbe
push
sub
in
and
mov
stc
int3
and
cmp
es
pop
push
inc
scas
test
repnz
jle
xchg
sbb
ds
add
dec
push
inc
jno
jecxz
leave
sub
jp
mov
add
adc
nop
adc
jg
lahf
jle
xor
rcl
push
mov
iret
sbb
pop
xor
stos
je
jnp
mov
dec
inc
test
cltd
add
xorl
sbb
in
mov
stos
adc
inc
cmp
xor
jb
daa
xchg
rep
jbe
cmc
insb
pop
inc
outsb
int3
cld
mov
aaa
xchg
jg
leave
fisubs
sbb
adc
out
jbe
mov
xchg
push
inc
movsb
popf
xchg
pop
test
lods
js
sbb
mov
and
ret
jge
pop
ss
dec
outsb
adcb
mov
subb
jge
jb
std
sbb
imul
push
dec
jo
xchg
jno
or
jnp
jno
sub
int
jae
mov
mov
push
xchg
mov
mov
repz
dec
mov
mov
xor
jl
push
pop
inc
stc
out
jp
inc
cmp
aaa
lock
adc
scas
sahf
mov
fcmovbe
mov
cltd
hlt
out
and
xchg
cmp
or
movsb
jbe
xchg
xchg
mov
pop
fs
imul
push
pushw
mov
cld
lahf
jp
add
mov
cs
mov
push
rorl
addr16
and
sbb
call
fimull
frstor
fstps
or
out
jg
out
loopne
add
push
orl
pop
adc
fwait
mov
add
sbb
sub
cld
mov
lahf
mov
aam
fldcw
lea
iret
mov
pop
or
xor
mov
loope
lahf
push
insb
out
test
iret
fists
sbb
mov
mov
mov
lret
jnp
cmpsb
das
push
imul
jle
frstor
mov
pop
or
xchg
outsl
mov
jne
mov
loopne
xor
adc
xchg
adc
mov
and
rcl
cld
hlt
stos
xlat
lea
sbb
xor
cs
push
aas
dec
push
lret
movsb
push
nop
insb
inc
rcll
add
dec
xor
out
stc
and
mov
fcmovnbe
xor
rcr
sbb
ficoml
repnz
pop
lret
push
and
xor
add
in
hlt
sbb
aam
aas
push
sub
enter
cmpsb
jne,pn
mov
push
xchg
add
pop
mov
int3
xor
ficomps
xor
into
mov
cmp
repz
push
lods
jle
push
fwait
outsl
cmp
test
lods
push
repnz
mov
das
stc
rol
test
sahf
pop
clc
test
mov
inc
jne
out
movsb
imul
das
aas
push
stos
shll
loope
xchg
scas
outsb
dec
or
into
sub
adc
in
pushf
lock
xor
in
daa
add
out
mov
jo
mov
cmp
imul
or
jl
mov
sub
dec
daa
in
add
repz
mov
mov
push
mov
aaa
ds
fisttpl
mov
divb
popa
hlt
cmp
or
dec
add
pushf
xchg
pop
cmp
inc
gs
cmp
ljmp
mov
cld
mov
xchg
sub
lret
dec
mov
jp
lock
outsl
cld
aaa
fstl
inc
movsl
fcoml
sbb
dec
notb
pushf
data16
pop
mov
sub
cmp
loop
out
pop
pusha
stos
ljmp
shl
dec
adc
pop
pop
jecxz
ret
ja
add
jecxz
add
dec
pop
int3
lock
je
jmp
insl
inc
arpl
add
pop
shr
imul
fstpl
mov
insb
and
test
call
lret
mov
lock
lahf
jnp
les
inc
dec
pushf
or
xchg
inc
sbb
popa
pop
repnz
cmp
jg
in
jno
mov
xchg
inc
jbe
stos
dec
push
fwait
sub
dec
sbb
mov
sub
jg
or
out
xlat
sub
call
or
xor
int
movb
jmp
jno
mov
imul
xchg
cltd
and
nop
clc
adc
ja
cmp
hlt
or
cmp
push
rolb
test
sub
sub
pop
call
jge
leave
decb
insl
add
sti
and
sub
call
insb
cmp
mov
dec
dec
dec
dec
mov
adc
jp
dec
adc
jge
popa
popf
lret
xchg
sbb
je
xchg
dec
jb
or
pop
mov
jo
pop
sub
inc
mov
dec
cmp
mov
dec
push
push
and
sbb
and
fnstenv
cmpsl
mov
inc
aad
xchg
mov
rorb
push
fld
inc
jne
mov
popf
scas
cs
or
mov
cltd
sub
popa
jl
mov
or
mull
and
lret
ljmp
cmc
xchg
sbb
add
inc
mov
push
adc
pop
and
cmp
rol
mov
dec
sbb
mov
xchg
and
pusha
xchg
popf
add
int3
shl
push
jp
xchg
xchg
les
fs
cs
test
decl
rclb
je
cltd
push
sahf
cmp
push
out
and
outsl
call
sub
loopne
fwait
xchg
or
mov
dec
and
inc
mov
stos
pusha
enter
push
dec
fwait
test
xchg
xorl
pushf
divl
adc
hlt
pop
mov
xchg
cmc
mov
out
and
arpl
int3
mov
int3
and
sti
dec
or
aas
js
and
push
out
push
cmpsl
es
pmulhuw
sbb
ljmp
orps
lahf
shll
xchg
xor
dec
xchg
lea
pop
and
dec
adc
out
mov
imul
int3
adc
jo
xlat
ds
push
inc
fcomps
jb
out
movsb
js
test
js
stos
insl
std
and
test
outsl
pushf
add
dec
out
sub
stos
dec
stc
sub
ret
enter
jno
dec
pop
dec
fadd
lcall
add
fcmovnbe
aam
stos
fidivrl
mov
and
push
push
xchg
sti
movsb
dec
movntps
push
leave
movsl
jge
test
xorb
cmp
das
cmpsl
sar
lea
dec
adc
jae
dec
in
pop
fs
loop
mov
xchg
add
mov
mov
sub
jle
push
mov
icebp
push
stc
inc
dec
inc
push
pop
push
sbb
into
int
or
daa
mov
jnp
mov
sbb
pop
pop
int3
cmp
orb
movsb
mov
dec
cmc
jl
jns
cmpl
pop
imul
test
out
mov
mov
leave
mov
bound
inc
and
test
subl
lods
dec
sub
ja
rorl
icebp
dec
loopne
imul
sub
insl
add
mov
cs
jl
or
scas
pop
xlat
pop
mov
push
je
call
je
cli
in
lods
push
lds
and
pop
cmp
push
out
inc
cmpsb
std
jno,pt
les
hlt
jle
iret
dec
jp
ret
push
pushf
movswl
sbb
mov
subl
add
add
mov
cwtl
sti
or
lcall
xchg
mov
insl
sub
adc
xchg
or
lea
ficomps
or
jnp
or
outsl
pop
pop
mov
lock
imul
xor
push
xor
and
inc
test
ret
sub
fcoms
inc
fnsave
add
lds
cmp
es
mov
roll
mov
cmp
sbb
xchg
mov
out
sub
sub
pop
call
push
mov
pushf
test
push
jbe
es
pop
stos
mov
stos
fcomps
fcmovne
xchg
mov
mov
dec
sub
lods
mov
pop
mov
xlat
pop
mov
test
pop
push
mov
jmp
push
int3
in
aam
xchg
dec
mov
or
sbb
and
and
adc
loope
xchg
push
lds
scas
mov
jbe
shrb
in
push
imul
xor
sub
adc
divb
pushf
add
add
inc
out
imul
xchg
xlat
sub
cwtl
addr16
mov
mov
mov
and
out
sub
ljmp
jecxz
test
mov
ljmp
pusha
mov
in
rcrb
inc
adc
xor
add
std
lods
mulb
pop
movsl
sahf
push
sub
mov
in
sub
testl
xor
mov
cs
out
cwtl
loop
fstl
push
gs
aas
xchg
cmp
jns
sarb
mov
inc
jbe
pop
mov
sbb
inc
data16
loopne
stos
cld
sbb
adc
jbe
cmpsl
in
xor
add
pop
adc
aaa
arpl
bound
xchg
push
inc
stos
call
fcmovnb
cwtl
cmpsl
test
int
sbb
pushf
cmpsb
jl
popf
nop
shl
sub
test
push
push
es
addr16
xchg
or
add
cld
outsl
dec
bound
stos
cld
cmpsb
mov
movsl
add
leave
cmp
outsl
lock
mov
mov
xlat
pop
js
dec
and
cmp
popf
sbb
fwait
mov
xchg
adc
pop
dec
push
cwtl
sbb
mov
lock
mov
stc
or
jl
cmp
pop
sub
pop
addl
mov
std
pusha
inc
adc
dec
aas
lret
rcrl
insl
rorb
push
inc
cld
adc
fldt
mov
movsb
pushf
xchg
xchg
or
idivb
pop
mov
sub
lods
fcmove
rcrb
in
popf
jge
mov
mov
aas
int3
push
pop
mov
xor
sub
xor
es
mov
and
xor
add
cmpsl
cltd
xchg
gs
sub
aaa
loopne
ja
pop
ss
jno
inc
and
rorl
add
mov
cmp
adc
cmp
aam
add
dec
pop
daa
xor
mov
mov
std
aam
mov
bound
cmp
push
pushf
and
ret
push
xor
xor
movsb
or
and
add
cld
out
ljmp
movsl
aas
lret
cmpw
fiadds
repnz
mov
xchg
repnz
push
or
ljmp
mov
dec
add
mov
pop
inc
dec
cli
cmpsl
mov
lods
pop
jecxz
in
or
add
sub
test
pop
sub
cmc
inc
push
dec
jg
aad
mov
push
or
out
xor
sub
or
lds
inc
jge
jmp
pop
add
les
int
insb
xchg
xchg
mov
ss
sbb
mov
dec
push
push
and
xor
xchg
mov
or
cmp
jl
rclb
xchg
xchg
cmpsb
xchg
jp
sbb
xor
lea
dec
pop
mov
or
inc
das
adc
push
sti
xchg
and
pop
cmc
sbb
movb
xor
pop
xor
popa
add
sti
push
enter
fdivrs
out
add
fildll
push
adc
add
aad
sbb
faddl
fucomp
mov
stos
and
dec
iret
pop
pop
push
lds
pop
iret
sub
push
aaa
test
aad
xchg
mov
jne
testl
call
push
push
xor
jecxz
or
jle
adc
fwait
inc
sub
inc
out
outsl
sti
or
insb
fiadds
scas
xchg
xchg
pop
loope
pop
rorb
and
mov
push
mov
adc
cltd
mov
push
cmpsl
sbb
push
cmpsb
mov
push
or
jl
or
mov
cmp
push
adc
pop
sub
jmp
pop
xor
cwtl
loope
fidivrs
mov
sbb
jbe
dec
adcb
mov
xlat
iret
add
sbbb
adcl
mov
jno
cli
sbb
inc
sub
enter
or
dec
jmp
mov
or
fwait
std
aad
adc
dec
push
daa
mov
mov
popa
jmp
cmpl
xor
ds
sub
aaa
jae
and
mov
jge
imul
jp
loope
push
dec
stc
dec
or
pop
in
inc
dec
xchg
rcl
mov
push
jnp
rcrl
dec
sahf
out
or
in
shlb
stos
int
pop
lods
adc
leave
sub
adc
sub
insb
push
call
outsl
rolb
push
les
jmp
pop
mov
imul
pop
mov
in
sahf
icebp
stos
scas
cmpsb
or
cli
sbbb
addr16
stos
mov
xorl
dec
repz
scas
mov
mov
or
fisubl
ss
adc
pop
aad
lea
dec
addr16
cmp
sti
xor
adc
shll
stos
push
je
cltd
push
and
cltd
xor
cmp
aas
pop
call
pmaddwd
jbe
cwtl
notb
mov
pusha
mov
lds
or
jo
fwait
fwait
mov
pop
pop
ja
push
sahf
fs
rcrb
daa
mov
std
mov
test
loope
int3
mov
pop
int3
sbb
add
sub
jle
sbb
ljmp
mov
mov
scas
imul
inc
pop
cmpsl
loop
leave
popf
repz
cmp
jo
or
add
in
pop
xor
cmpsl
pushf
outsl
fmulp
addb
xor
mov
call
mov
cmpsl
out
test
jo
xor
mov
inc
pop
into
popf
pop
ficompl
add
xchg
icebp
mov
sbb
xlat
inc
outsl
mov
test
pop
mov
push
xchg
pop
sahf
mov
in
and
xchg
sub
int
data16
rorb
xchg
iret
outsl
cwtl
ja
in
jl
push
insb
fisubl
jne
cltd
shlb
in
insb
scas
jo
cs
sub
cmpsb
popa
xor
and
clc
cs
cmpsl
mov
add
push
repz
outsl
lret
out
cmp
addr16
adc
sub
shl
push
fimuls
jl
cmp
and
ss
sar
sarb
ljmp
push
cmc
dec
inc
scas
fdivrs
mov
adc
fwait
push
insb
mov
icebp
loopne
dec
popa
push
movsl
rolb
mov
mov
and
insb
mov
jae
iret
pusha
push
cmp
xor
stos
xchg
jp
push
dec
cmp
rorb
xor
jg
arpl
sahf
or
jno
pop
in
adc
ds
loope
jmp
cmp
movsl
jnp
outsl
stos
mov
xor
mov
shll
fsubl
lea
test
jbe
mov
xchg
orl
enter
inc
mov
aaa
shr
in
andb
mov
fiaddl
fwait
dec
icebp
jns
mov
andl
mov
or
add
add
lcall
sbb
fisttps
mov
hlt
jecxz
jnp
cli
pop
test
ds
mov
mov
mov
cmp
stos
push
dec
das
lock
out
data16
pusha
sbb
sub
enter
or
and
out
andb
push
sbb
test
pop
and
add
and
scas
add
aaa
pop
and
cmpsb
add
xor
jecxz
mov
scas
lods
fcoms
pusha
sarb
cmp
pop
je
leave
lods
gs
subb
sub
xchg
jno
dec
iret
jb
iret
fstps
push
jae
push
enter
mov
stos
xlat
xchg
mov
jp
inc
rorb
out
mov
cmp
mov
xchg
mov
in
sub
into
sbb
pop
mov
and
dec
cmp
je
mov
jl
imul
pop
push
lods
nop
out
int3
mov
mov
push
pop
push
std
push
fnsave
fildll
add
ficoms
inc
jne
gs
xchg
push
test
mov
movsl
pop
aad
lds
outsb
in
adc
scas
and
jne
gs
xchg
push
test
mov
movsl
pop
aad
lds
outsb
in
adc
scas
and
jne
gs
xchg
push
test
mov
mov
jle
insb
loope
adc
fcoml
inc
jle
outsb
movsl
loope
icebp
das
xchg
mov
shrb
pop
mov
sbb
or
cmp
sub
xchg
out
ds
mov
lea
mov
dec
int3
pop
cld
jg
jg
or
cmp
sub
pop
iret
dec
fistpll
lcall
lods
aas
sbb
int3
cld
outsl
in
jg
xchg
or
cmp
sub
pop
dec
jl
insb
in
in
scas
and
fmull
mov
jg
fildl
xchg
and
push
ja
xchg
ds
test
xor
movsb
mov
xchg
call
fisubs
roll
inc
dec
and
aas
push
aas
and
int
stos
outsl
popa
xor
sbb
lock
fcmovnbe
cltd
cmp
negl
fcomp
mov
pop
mov
cltd
xchg
in
jg
fisttps
push
scas
sub
jnp
pop
pop
stc
mov
add
pop
or
inc
iret
mov
sbb
mov
jecxz
in
jle
push
rcrl
out
dec
and
mov
ficompl
cmp
aas
daa
xor
lods
outsl
in
and
repz
scas
cmpsl
je
cmc
mov
jb
push
jl
inc
cmp
mov
or
cmp
sub
pop
iret
dec
fistpll
out
pop
mov
mov
push
int3
dec
cld
outsl
in
sbb
js
push
scas
inc
mov
sbb
jmp
push
frstor
int3
or
outsl
stos
adc
imul
add
ds
stc
jbe
jle
pop
lods
jl
cmp
cltd
sbb
or
push
into
inc
lret
dec
fistpll
lcall
lods
aas
fmull
pop
cld
outsl
in
jg
or
cmp
sub
pop
iret
dec
fistpll
lcall
lods
aas
fmull
pop
cld
outsl
in
jg
mov
lods
mov
or
and
cwtl
xchg
xchg
mov
sbb
shrl
pushf
xchg
cmp
mov
cli
cmp
int3
add
imul
mov
fs
sbb
sub
push
mov
enter
and
mov
xchg
fcmovnb
movsb
xchg
dec
clc
lret
pop
xor
lods
lods
xor
out
loope
negl
sti
push
ficomps
std
mov
data16
popa
push
movsl
out
pop
aam
pop
adc
jg
negb
or
fwait
outsb
jmp
aaa
mov
arpl
jmp
lahf
dec
pop
or
mov
jp
imulb
add
enter
xchg
out
adc
add
mov
cmp
and
pop
jns
dec
mov
je
loop
cmp
inc
leave
push
mov
mov
pop
mov
jbe
push
aaa
xchg
and
jnp
mov
push
push
mov
dec
and
cmpsl
sub
push
and
dec
je
or
sbbb
imul
cmp
cmpsl
lea
sahf
pop
in
outsl
imul
std
or
add
test
das
idivb
fwait
aad
and
into
sbb
jb
add
roll
aas
xor
and
dec
pop
or
insl
sbb
mov
sub
mov
mov
inc
mov
call
push
cwtl
movsb
out
test
fcompl
inc
rcrl
jne
call
cmp
dec
aad
xchg
pop
ret
fadds
outsb
jne
xchg
push
xor
xchg
push
test
rcll
jns
mov
mov
rcrb
das
inc
pop
addr16
xor
lret
aad
bound
and
add
int3
xchg
mov
test
xor
fnsave
push
std
leave
push
xor
rol
movsb
xchg
lcall
sub
sub
mov
lods
add
and
and
or
add
stos
bswap
int
and
mov
xor
add
dec
testl
imul
rolb
sbb
mov
push
jb
ss
inc
daa
mov
sub
or
cmp
dec
xchg
push
pop
jg
xor
hlt
ss
pop
movsb
jmp
scas
xchg
xchg
outsl
or
in
mov
shl
fucomi
adc
push
sbb
test
mov
icebp
xor
insl
pop
jne
rcr
rol
lcall
orl
mov
pop
into
cmp
ljmp
int3
xchg
adc
jmp
popa
pop
mov
fisttps
adc
pop
into
cli
js
mov
repz
push
ljmp
jmp
loopne
jnp
rep
mov
add
dec
add
fistpll
push
lcall
sbb
ljmp
pop
xchg
adc
or
sbb
dec
xchg
pusha
fsubrl
cwtl
incb
repnz
sbb
adc
sub
cmpsb
outsb
mov
jge
adc
das
push
xchg
jbe
cmp
xchg
out
into
ja
pop
and
jmp
xor
push
and
arpl
pop
addr16
sub
push
and
lea
aam
adc
add
repnz
testb
dec
pop
std
or
or
sahf
xor
mov
push
mov
cli
outsl
pop
ds
cmp
repnz
in
mov
or
test
pop
mov
lds
mov
push
mov
loope
popa
sub
das
nop
jae
lahf
test
test
pop
pop
jo
cmp
inc
jecxz
sti
fmuls
sbb
cmpsb
cmpl
push
add
out
ficompl
stos
add
xchg
mov
mov
xlat
jbe
jne
lods
hlt
stos
into
mov
push
sub
xor
outsb
mov
pusha
mov
pop
add
cwtl
fucomip
dec
jae
fadds
out
jno
cwtl
pusha
cmp
inc
jo
lods
stos
loop
clc
push
xchg
and
shlb
stos
jmp
xchg
ljmp
mov
out
cmp
lea
pop
pop
iret
sbb
jnp
lods
jp
jae
in
xor
icebp
dec
outsb
push
leave
and
lods
mov
jns
je
mov
add
enter
lea
jae
sbb
jmp
incl
sbb
mov
les
je
adc
push
es
or
arpl
push
ss
mov
loopne
xchg
shld
les
push
sti
lods
adc
inc
in
adc
mov
mov
push
jge
sbb
in
pop
add
xor
stos
xlat
test
xorb
adc
jmp
inc
adc
cmc
stos
sahf
pop
rorb
xchg
popa
mov
mov
dec
jne
ffreep
and
jbe
xor
jmp
test
jo
cmp
cmp
add
fcmovnb
cmp
push
sbb
repz
cmp
sbb
push
sbb
xor
xchg
mov
jmp
pop
scas
leave
sbb
pop
jbe
push
mov
in
inc
stos
in
lret
in
gs
cmp
popa
in
xchg
jg
cmp
mov
aam
lock
push
mov
push
mov
inc
les
jecxz
jo
ss
mov
jmp
push
mov
pop
fwait
xor
fld
mov
fcmove
adc
fsubl
lock
lds
insb
cmp
outsl
jbe
mov
les
dec
xchg
jae
jae
sarl
comiss
fnsave
pusha
jmp
out
inc
mov
jmp
or
jae
pushf
mov
icebp
pop
les
cmc
mov
and
cmp
sahf
rcrb
jns
aam
and
dec
in
xor
cwtl
lahf
push
inc
xlat
cmp
push
sub
adc
inc
or
jmp
sub
sbb
hlt
cmpb
cld
aam
sbb
pop
jmp
jns,pn
xchg
mov
pop
mov
adc
mulb
cmp
bound
inc
push
jns
xlat
and
push
mov
in
adcb
xchg
add
leave
roll
arpl
cmp
adc
aam
imul
sbbl
push
mov
push
adc
mov
mov
mov
pop
lahf
cmc
cmp
add
push
hlt
scas
lcall
mov
imul
jns
cli
add
movsl
mov
xor
outsb
push
inc
repz
sahf
add
cmp
hlt
leave
bound
and
jno
fsub
movsb
cmpl
inc
popf
das
fildll
mov
adc
imul
mov
stos
inc
mov
adc
fistl
xchg
inc
xchg
in
clc
rclb
sub
int
cmc
or
out
sub
adc
popa
inc
adc
dec
add
inc
je
sub
stc
xlat
cltd
stos
dec
scas
jne
fmull
out
mov
dec
pop
test
adc
fidivl
add
add
popf
pop
inc
push
add
popf
xchg
je
sub
outsl
test
pop
popa
mov
dec
xchg
cmpsl
dec
or
dec
and
das
fidivs
push
push
pop
adc
push
lahf
xchg
test
insb
jno
stos
ret
int
incl
xchg
sub
jmp
movsl
icebp
testl
fsts
enter
sbb
xlat
fildll
into
fisubrl
sub
mov
cmp
mov
in
rorb
mov
mov
aad
cmpsb
sbb
in
int
lahf
cmpsb
jg
mov
movsl
push
or
jecxz
imull
jns
ss
and
es
daa
imul
inc
sbb
sbb
rorl
cmp
and
or
dec
mov
or
rorl
repz
mov
jl
pushf
out
add
mov
add
and
mov
cmp
mov
repnz
jnp
insl
enter
xor
pusha
jo
add
xor
fnstenv
cmp
sub
sbb
lret
mov
testl
lods
dec
sbb
in
adc
xlat
mov
aam
xchg
rcl
movsl
hlt
aaa
push
sbbb
xchg
push
pop
cmp
addr16
or
lahf
loop
jb
or
fldl
pop
xor
test
inc
jmp
adc
arpl
mov
jp
outsl
xor
push
xchg
xchg
add
and
push
jb
jl
fcmovb
imul
inc
in
xchg
mov
mov
stc
sub
out
push
cmp
iret
out
push
xchg
test
push
sbb
mov
in
insb
xor
mov
or
xchg
ficomps
mov
sbb
out
jg
negb
int
sub
cmpsb
cmp
pop
aas
xchg
mov
stos
pop
add
add
jle
cmpb
pop
jae
adc
xor
pop
aaa
nop
or
mov
rcrl
jnp
sbb
sub
jne
jnp
and
or
lret
xor
mov
xchg
push
roll
lock
xor
pop
ds
std
sub
mov
xor
pop
sbb
sbb
pop
or
es
add
in
jno
in
sbb
cmpsb
mov
push
adc
add
lahf
loopne
or
imul
popa
sub
adc
aad
jo
push
fcmovbe
mov
jecxz
jg
sbb
fsubrs
ret
xchg
mov
jle
inc
xor
jne
popa
cmp
sbb
shrl
nop
mov
xchg
jns
daa
jge
outsl
add
jl
push
mov
into
stos
mov
aam
jecxz
cmpsb
daa
sub
sbb
jbe
dec
pusha
xlat
cmp
add
shrl
pop
daa
pop
lods
mov
mov
dec
push
xor
add
mov
mov
out
scas
das
lock
xchg
jle
cltd
mov
cltd
adc
das
xor
mov
cwtl
in
iret
jb
or
rcrl
lcall
iret
jno
scas
mov
nop
imul
jae
lcall
out
data16
loopne
sub
lock
dec
test
mov
lds
int
dec
mov
sub
rcl
je
xchg
ss
andps
or
sarb
and
flds
adc
or
and
jl
dec
and
jnp
adc
subl
scas
mov
inc
xor
xor
out
cmc
int
lock
gs
push
jmp
xor
xchg
fiadds
mov
sbb
mov
cmp
mov
scas
sub
jo
add
fwait
dec
cwtl
lods
jne
mov
aaa
adc
xchg
cmp
sbb
and
test
xchg
mov
lea
call
test
mov
fs
das
je
dec
addl
fisttps
add
xchg
fs
mov
mov
lea
sti
dec
fs
cli
or
adc
dec
xor
push
cmp
pop
sbbb
test
ljmp
pop
dec
cwtl
imul
push
je
pop
sub
jge
ja
adc
xchg
sbb
aam
pop
les
push
jmp
push
enter
push
iret
add
or
xchg
adc
lcall
fsts
enter
divl
mov
or
cltd
push
movsb
mov
push
out
jle
hlt
test
add
xchg
xchg
inc
dec
mov
push
push
mov
mov
cmp
adc
fucomip
xchg
fcmovnu
icebp
jne
fisubs
and
fsubrs
mov
jns
arpl
mov
in
loopne
inc
adc
stos
and
popf
rclb
push
bound
mov
ret
cli
dec
jo
jecxz
loopne
addr16
adc
cmc
mov
sbb
adc
add
negl
adc
ret
xor
stc
popf
mov
push
dec
sbb
dec
mov
ss
mov
pop
ret
pop
sub
xlat
jno
sub
jne
adc
and
xorb
enter
xchg
mov
popf
ret
scas
and
inc
jno
cmp
xor
loop
push
sub
adc
stos
sub
imul
stos
cld
js
shlb
jae
cmp
push
pop
enter
rcll
test
outsl
jnp
cmp
popa
rorl
mov
mov
scas
shlb
push
sub
je
loopne
and
arpl
mov
fldl
outsb
push
test
mov
into
xor
cmp
adc
dec
les
out
cmpsl
imul
int
jle
clc
test
into
loop
leave
ret
jno
sahf
inc
fadds
push
adc
mov
pop
mov
imul
hlt
add
xor
push
mov
sarb
std
ds
dec
or
adc
xor
in
push
push
sbb
mov
add
sbb
ljmp
stc
mov
inc
fists
iret
lods
jp
rclb
out
iret
adc
je
push
sub
addr16
scas
je
aam
test
fwait
push
mov
test
jl
mov
lahf
sub
mov
xor
scas
or
push
fwait
push
daa
and
fcmovnbe
mov
out
mov
sub
clc
pop
push
in
jle
in
les
xlat
push
nop
test
mov
jb
pop
pop
inc
lock
fstps
inc
in
stos
or
ja,pt
test
cmp
loopne
add
adc
push
xchg
pop
mov
xchg
add
jo
notb
inc
push
ja
pop
stc
jl
or
bound
rclb
xorl
pushl
mov
and
pusha
xchg
aaa
jge
mov
orb
and
bound
stos
gs
push
testl
testl
xchg
cmp
cmp
aam
mov
xchg
shl
pop
arpl
mov
pushf
cwtl
mov
ljmp
add
pop
cmp
sbb
lret
jo
lock
fsubrl
pop
sti
ret
pusha
adc
scas
mov
jecxz
shll
add
pop
jmp
mov
add
ret
test
dec
cmp
sbb
dec
inc
in
jno,pt
test
andl
sti
push
aam
cmp
out
push
iret
aam
lcall
mov
inc
xchg
lahf
fwait
dec
cmpsl
cwtl
push
movsb
lods
leave
xor
fmul
sbb
ja
insl
aaa
loope
push
adc
cwtl
jg
out
push
xchg
mov
movsl
enter
inc
adc
mov
jnp
pop
or
into
jg
sub
pop
push
icebp
ud1
leave
out
lock
clc
mov
jle
sub
rolb
mov
sub
out
rcl
pop
nop
in
mov
mov
rol
xor
dec
sbb
cmpsl
filds
pop
jbe
shlb
jge
xchg
clc
jmp
or
xor
ljmp
in
mov
mov
cltd
mov
mov
repz
test
or
mov
mov
inc
in
add
insl
inc
lock
sub
cmpsl
mov
leave
mov
mov
dec
rep
pop
ss
mov
push
test
iret
adc
subl
push
hlt
xchg
jns
cmpsl
enter
mov
mov
mov
iret
inc
xchg
movsb
hlt
pop
mov
cmp
xchg
repz
imul
fucom
hlt
and
pop
cmp
lock
outsl
inc
xor
fmull
and
imul
pop
and
frstor
lret
cli
inc
push
or
mov
cltd
sbb
cmp
push
adc
mov
lea
xor
xchg
dec
jl
inc
in
mov
stos
je
mov
test
outsl
popf
out
ret
ja
xor
sti
scas
xchg
stos
mov
lret
mov
push
mov
cltd
or
sbb
jp
loope
xlat
ss
test
mull
cmp
ret
sub
sbb
mov
and
sbb
jmp
ret
mov
loop
sbb
xchg
outsl
jno
out
and
sub
fs
lcall
push
mov
pop
xchg
ljmp
xor
xchg
mov
ljmp
ss
sub
into
mov
mov
xor
xchg
adc
or
popf
push
jmp
shl
xchg
and
outsl
adc
mov
sarb
adc
out
cmp
or
in
mov
call
or
mulb
dec
sahf
adc
mov
je
subb
push
sub
call
test
pop
lret
int
add
negb
jo
imul
rcl
imul
sub
rcr
mov
mov
inc
es
iret
jo
stc
pop
enter
mov
fnstsw
clc
aad
fcompl
ds
rcrl
mov
sti
mov
outsb
mov
iret
pop
pop
addl
test
or
out
mov
and
xor
sub
and
push
push
xchg
adc
push
aad
sar
data16
insl
js
push
push
aam
icebp
and
popf
es
sahf
mov
jno
aas
add
fsubrp
inc
add
fadd
cmp
inc
adc
ljmp
mov
dec
scas
or
aam
stos
push
js
add
jno
rorb
push
int3
inc
adc
scas
ds
ret
movsl
push
mov
dec
adcb
inc
rorb
pop
xchg
popf
and
add
xchg
mov
jns
xchg
push
inc
test
sbb
out
mov
jecxz
pop
stos
push
test
leave
mov
push
add
test
repnz
inc
scas
jmp
imull
inc
cmp
call
stc
add
dec
or
out
ss
inc
rcrb
inc
push
out
mov
sub
loop
hlt
lea
push
sub
fnstsw
push
mov
adc
cmpsl
int
ret
xor
loope
inc
in
inc
outsb
jne
adc
out
jns
mov
inc
push
push
sub
shl
popa
or
mov
jnp
pushf
adc
mov
fildl
inc
xchg
imul
add
clc
cmp
jno
push
movsb
inc
mov
in
push
or
push
mov
fs
cmpsl
mov
lods
inc
xor
push
xor
test
test
dec
inc
jo
lcall
mov
inc
insb
jg
popa
ret
icebp
ffreep
fisubl
mov
cmp
xor
inc
test
fcompl
cmp
adc
cltd
xor
sub
mov
jnp
add
cmpsb
xchg
cmp
mov
dec
xchg
mov
add
adc
nop
push
push
lock
ds
jb
divl
test
push
rorb
push
mov
rcrb
push
inc
mov
in
xchg
mov
icebp
sub
pop
cmp
cmp
cmp
add
add
push
fildll
mov
movsl
mov
dec
dec
imul
pop
mov
xchg
jo
gs
hlt
add
mov
sub
in
scas
popf
pop
ret
add
jnp
scas
adc
lea
xchg
sbb
inc
adc
repnz
mov
push
mov
push
into
mov
or
push
jns
dec
out
imul
xor
jnp
sub
icebp
je
sbb
adc
into
std
lea
mov
or
aam
ret
sub
addr16
outsl
icebp
stos
add
test
mov
cs
mov
inc
xor
sub
outsl
nop
int
sbbl
fildl
adc
lods
jo
icebp
test
inc
add
dec
dec
cld
add
pop
ss
sub
es
filds
aaa
and
mov
mov
fs
add
and
adc
pop
or
cmp
jnp
or
test
add
stos
leave
mov
movsl
dec
mov
jecxz
dec
aad
test
push
enter
dec
cmp
fldt
xchg
add
mov
pop
jbe
gs
cmp
repnz
sti
lea
xchg
sub
mov
das
sarb
sub
in
scas
iret
and
stos
inc
xchg
pop
lods
fimull
lea
inc
add
sub
fists
stos
aad
cmpsb
mov
adc
iret
test
pop
jp
hlt
xchg
adc
and
test
push
sub
aaa
xchg
xchg
add
cmpsl
rcrb
xchg
jl
test
push
adc
xor
sti
cld
cmp
pop
ret
clc
pop
in
and
cmpb
inc
addr16
ror
ljmp
cmp
iret
dec
fistpll
lcall
lods
aas
fmull
pop
cld
outsl
in
jg
or
cmp
sub
pop
iret
dec
fistpll
lcall
lods
aas
fmull
pop
cld
outsl
in
jg
mov
fmul
dec
fistpll
lcall
lods
fmull
pop
cld
outsb
in
jg
or
cmp
sub
pop
iret
dec
fistpll
lcall
lods
dec
lods
mov
adcb
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
ss
push
jp
inc
add
and
dec
mov
xchg
push
jp
or
sbb
sub
cmp
lret
push
ljmp
push
stos
inc
into
mov
cmpsb
jp
push
jp
gs
push
cmp
pop
ficoml
inc
push
clc
jbe
data16
push
inc
inc
mov
out
jecxz
negb
jae
pop
scas
cmp
inc
mov
lahf
outsl
scas
jns
xor
mov
dec
loopne
test
cmp
insl
xchg
outsl
andl
sti
inc
jbe
data16
ljmp
push
or
flds
lret
dec
fistpll
aam
fnstenv
or
mov
xchg
add
imull
insl
sbb
sub
or
lret
add
mov
inc
inc
mov
or
jns
cmpsb
or
in
ret
fbld
jg
scas
inc
fildll
sbb
jp
pop
sbb
cmp
lds
or
addr16
stc
rcrb
sbb
ljmp
xchg
in
bound
or
mov
push
outsb
push
lock
lcallw
mov
cmpsb
pushf
xchg
jp
xor
es
sub
push
push
cwtl
inc
ficoml
inc
aam
decb
cmc
cmp
ret
or
pop
in
ret
adc
cmpsl
outsb
mov
mov
inc
push
fwait
jne
inc
fists
in
test
les
rorl
xchg
mov
pushf
es
push
mov
lcallw
mov
cmpsb
pop
xchg
push
jp
or
sbb
sub
cmp
lret
push
ljmp
push
stos
inc
mov
xchg
push
jp
or
sbb
sub
cmp
lret
mov
cmpsb
adc
mov
clc
data16
rep
sbb
mov
ja
repnz
insb
cmc
mov
rcrl
and
shl
ja
pop
pop
jns
js
ret
jo
fwait
xchg
int
arpl
std
mov
mov
jb
xchg
fdivrp
fldcw
push
dec
movsl
outsl
xchg
and
iret
mov
int3
aam
push
add
mov
push
sbb
mov
lock
repz
subb
dec
enter
loopne
lahf
jg
or
outsb
bound
pop
mov
xchg
add
push
xor
mov
stos
ds
loope
test
push
sbb
pop
xchg
jno
xor
out
push
mov
sbb
jae
hlt
lock
fcompl
vmaxpd
sti
sti
neg
jo
imulb
xor
repz
sub
jmp
sub
inc
jmp
jp
leave
adc
stos
xor
aad
rol
xchg
jb
mov
out
incb
in
cmp
pop
xchg
xchg
push
cmp
mov
pushf
dec
insb
push
loope
pushf
adc
jbe
mov
mov
mov
ds
dec
les
lods
and
imul
pop
inc
pcmpeqb
or
jle
in
pop
prefetchwt1
lds
push
in
inc
popf
dec
lock
or
sbb
ficoms
test
lea
sub
jnp
xchg
gs
gs
push
lods
adc
push
jecxz
sti
outsl
notb
mov
clc
pusha
xchg
cltd
loope
jl
ds
mov
rcrl
xor
push
pop
fldenv
push
dec
out
add
push
aam
rol
xchg
push
gs
ss
out
cmp
stos
or
and
ret
imull
hlt
lea
daa
addr16
pusha
sbb
mov
subl
ss
mov
cmp
das
mov
movsb
ret
mov
mov
push
mov
ds
adc
insl
loope
in
add
or
cmpsl
cltd
test
push
pop
sbb
stos
ljmp
out
movsl
sti
imul
mov
pop
mov
mov
mov
fcmovnu
pop
or
adc
aad
mov
xchg
mov
and
cmp
orl
push
pushl
xor
adc
inc
enter
pop
adc
arpl
cld
sbb
or
aam
call
cmp
mov
popf
dec
and
notb
add
out
pop
cmp
push
lea
cmp
or
adc
cmp
pop
daa
ss
mov
loopne
xor
mov
xchg
or
mov
pop
xchg
fisubl
popa
ljmp
inc
pop
pushf
sub
popa
int3
je
bswap
push
push
mov
int3
jo
pop
cwtl
pop
punpckldq
lds
inc
gs
inc
cs
jb
xchg
inc
lods
push
xor
nop
cmp
out
popf
stc
addb
or
add
fdivrl
sahf
outsb
jle
mov
and
jne
js
testb
movsb
bound
gs
in
jle
sub
in
add
test
iret
xlat
push
mov
fdivs
pusha
inc
and
lret
mov
into
repz
stc
pop
sub
push
push
pop
mov
fcompl
sub
push
xchg
rclb
or
iret
jmp
ret
inc
adc
orl
adc
or
les
xchg
jo
dec
sub
pop
xchg
xchg
lock
inc
int3
ds
mov
cvttps2pi
aaa
test
jl
sbb
xlat
pop
nop
dec
cmp
pop
push
adc
xlat
add
jge
jnp
and
pop
sbb
jb
jno
mov
jp
pop
iret
je
jp
mov
cltd
test
xchg
cltd
or
out
pop
out
ss
daa
jb
loopne
jp
out
xchg
add
push
jb
mov
adc
mov
mov
orb
and
pop
in
testb
adc
adc
aam
ds
mov
jnp
pop
outsb
pop
ja
cmpb
lret
and
mov
aam
xlat
jmp
push
inc
or
and
push
pop
or
loop
lods
mov
popa
les
push
stc
test
cmp
and
cmp
sub
xchg
dec
ss
sti
sub
xlat
dec
cld
xchg
insl
push
adc
arpl
mov
pushl
divl
fwait
xor
or
mov
xchg
add
jl
mov
mov
iret
sub
mov
pop
and
int
push
pop
sarl
mov
daa
je
call
jb
in
test
jne
ds
loope
add
and
fildll
sti
or
xchg
add
mov
push
in
arpl
nop
or
inc
sti
mov
adc
cmp
pop
mov
mov
cmp
fbld
aaa
xchg
movsl
call
cmp
xchg
pop
or
and
popf
adc
jmp
retw
jmp
mov
dec
inc
shll
inc
orl
and
sub
std
inc
jne
sbb
loopne
jo
push
pop
xor
clc
push
leave
scas
loop
lahf
hlt
outsb
fcomip
push
repnz
int
mov
cwtl
mov
xchg
jb
pop
lret
nop
ficomps
inc
hlt
add
fcmovnbe
or
lahf
cli
xchg
lret
mov
mov
adc
jbe
cmp
mov
or
hlt
loop
es
sub
adc
clc
in
divb
xchg
filds
aam
sub
dec
aas
ljmp
js
xchg
mov
sbb
aam
add
xor
out
sbbb
inc
xor
push
cs
push
test
pop
mov
dec
sub
mov
icebp
lods
mov
mov
cmpsb
lock
add
xchg
adc
sti
push
mov
and
adc
sub
mov
adc
cmp
fsubp
addb
mov
out
test
add
push
repnz
mov
imul
push
mov
push
loope
cmc
mov
imul
aas
clc
lea
sub
in
sub
push
cwtl
out
stos
mov
adc
sahf
es
int3
jo
jle
mov
hlt
sbb
xorb
into
pop
pop
pop
jbe
cmp
test
dec
and
aam
sbb
sub
mov
pusha
jb
mov
daa
adc
rol
sti
stos
shrb
jns
in
dec
jmp
cmpsl
sbb
movsl
sbbb
fdivl
jecxz
cmpsb
or
or
mov
enter
lock
loope
mov
inc
xlat
inc
add
mov
ljmp
incl
out
sbbb
xchg
xor
inc
mov
push
loope
pop
jns
push
repnz
shrl
jg
dec
mov
push
mov
ret
dec
sub
pop
imul
sbb
xchg
sti
xor
xlat
inc
sbb
or
mov
xlat
xchg
sub
or
test
push
pop
aam
xchg
test
test
xchg
adc
stos
push
jmp
test
pop
or
or
nop
sbb
test
jle
filds
mov
lds
cmp
cs
or
cs
push
push
add
inc
push
mov
pop
mov
push
dec
dec
fwait
sbb
ja
hlt
fistpl
dec
mov
and
pop
lret
repnz
pop
fbld
clc
add
cld
fbstp
dec
pop
jae
or
fcmovu
outsb
mov
mov
sub
int
sbb
fs
inc
cmc
sahf
sbb
inc
outsb
or
sbb
jl
and
and
add
pushf
dec
pop
cmpsl
pop
mov
sbb
pusha
and
pop
je
push
push
int
jno
mov
inc
or
aad
icebp
stc
push
fisttps
fwait
pop
mov
push
outsl
ret
roll
add
addr16
pop
sub
call
aad
mov
out
push
in
ret
dec
lds
je
daa
mov
mov
xlat
cs
sub
insl
adc
movsb
inc
jnp
cmp
in
mov
mov
adcb
ret
mov
pusha
out
stc
js
push
xchg
add
jecxz
add
es
movsl
push
stos
es
cmp
mov
or
mov
aaa
mov
popa
jmp
addr16
or
icebp
pop
nop
testb
imul
add
cmp
push
sub
fsubs
movsl
sbb
out
xor
dec
out
ret
sub
inc
jnp
scas
jl
insl
lret
pop
sub
cmp
repnz
xchg
addb
xchg
push
in
test
movsb
cmp
cld
call
std
cmc
lret
repnz
push
xlat
and
push
aam
sbb
cli
pop
jmp
test
push
gs
divl
iret
add
das
push
mov
sub
sub
add
cld
dec
push
xor
xchg
loop
inc
push
xchg
pop
sbbl
mov
testl
fisttpl
and
sbb
nop
cmp
out
sbbw
aam
ds
pop
or
mov
sar
pop
mov
jl
adc
cltd
sbb
push
add
nop
or
cmc
and
cmpsl
xchg
cwtl
push
loopne
pop
mov
cmp
movsb
xchg
shr
mulb
jae
mov
ret
lock
mov
mov
cmc
in
dec
les
jnp
jns
subl
or
cmpsb
sub
xchg
add
inc
stos
es
xchg
cmpb
jo
mov
xor
dec
cld
cmc
mov
or
repnz
push
loope
adc
jne
arpl
out
ja
loope
ffreep
mov
push
sub
mov
and
sub
aad
out
aaa
jb
fisubrs
push
jp
roll
adcb
lret
cmpsb
ficompl
pop
fisubrl
xor
out
int3
nop
mov
mov
loope
shrl
test
popf
addr16
cmc
shr
mov
loop
xchg
shlb
pop
cmc
push
scas
push
xchg
lods
cmp
xchg
dec
enter
lcall
in
mov
xlat
std
sahf
or
and
movsl
bound
push
dec
cld
in
mov
cmp
push
xor
mov
ljmp
clc
mov
add
sahf
sbb
mov
push
sbb
push
push
bound
cmpsb
mov
fwait
bound
xchg
mov
mov
aaa
decb
loop
sbb
push
mov
mov
stos
aad
lahf
xchg
xchg
fistps
rcrl
mov
xchg
dec
mov
stos
insl
daa
faddl
sub
mov
cmp
mov
inc
shll
pop
pop
or
mov
test
outsb
sbb
mov
cmp
in
push
insb
imul
mov
and
into
xchg
cmp
mov
jo
push
sbbb
pop
in
and
stos
or
add
frstor
cmpsl
jmp
js
cmc
cltd
pop
jns
sub
cmp
pop
jns
xchg
loopne
test
inc
adc
inc
mov
mov
aaa
mov
dec
mov
xchg
dec
nop
subl
ljmp
xchg
arpl
jbe
push
inc
ss
pop
ljmp
nop
hlt
insl
mov
xchg
add
icebp
fsts
insb
and
sbb
xchg
sbb
adc
adc
inc
shrl
pop
fld1
jmp
push
mov
cmp
mov
dec
inc
or
xchg
dec
push
add
stc
inc
loop
mov
scas
cmpsb
arpl
mov
ljmp
aas
pop
add
cmp
sahf
ret
imul
push
mov
xor
stos
in
push
xchg
imul
mov
cmpl
sbbb
fcmove
push
dec
sbb
sbb
popf
mov
inc
scas
inc
ret
dec
rclb
xchg
adc
ja
mov
xchg
nop
mov
imul
sub
xor
push
repnz
xor
and
xchg
pop
mov
inc
scas
scas
insb
mov
inc
cmp
bound
stos
pop
loopne
ret
and
adc
cmp
sbb
sub
xor
loope
call
je
xor
sbb
jmp
lds
cmpsl
push
mov
fildl
dec
pop
and
mov
pushf
insb
cli
push
je
jle
xlat
mov
clc
rclb
fldl
dec
mov
mov
test
cmc
cmpl
fstl
outsb
jo
jp
sar
roll
dec
push
add
leave
aad
cmp
loope
sti
fbstp
ret
adc
push
in
jecxz
mov
mov
std
and
dec
mov
sub
dec
lods
ret
mov
hlt
fildl
mov
xchg
lcall
movsb
fsubs
fidivs
inc
jecxz
or
aaa
iret
pop
push
sbb
push
into
clc
push
jl
or
pop
inc
sti
pop
dec
sub
xchg
dec
ficoms
adc
jne
jge
std
dec
fisttps
cmpsb
in
ret
outsb
dec
cmp
aad
ret
lcall
mov
js
lret
jmp
lock
je
rcrb
sub
add
mov
dec
pop
push
int3
cwtl
sbb
cmp
xchg
inc
sub
nop
add
lcall
inc
lahf
std
mov
add
jle
imul
or
outsb
jnp
cmp
gs
pusha
sti
les
lcall
push
lcall
enter
xchg
ret
mov
pop
dec
mov
repnz
es
mulb
mov
mov
adc
mov
pop
and
in
or
mov
stos
mov
das
sbb
or
fldl
jge
jo
jno
sbb
jns
pop
inc
es
loopne
cmpsb
cmpsb
pop
stc
xlat
jmp
push
jp
in
mov
push
in
xor
add
leave
dec
imul
cmpb
mov
push
or
mov
test
fsub
mov
mov
lret
pop
mov
cmpsl
and
test
sti
mov
je
out
das
mov
pop
incl
fsubs
adc
inc
cmp
loop
mov
sbb
xlat
mov
pop
jne
bound
daa
push
adc
xchg
cmp
out
es
in
push
mov
adc
js
in
inc
mov
daa
and
sub
shr
dec
movsb
outsb
andb
mov
jo
dec
push
leave
cld
int3
lods
inc
rorb
test
add
push
pop
out
inc
mov
jnp
xchg
mov
and
mov
mov
movsl
ss
push
lahf
fldenv
dec
mov
leave
lret
fcmovnbe
jmp
jae
add
dec
mov
jecxz
adc
into
inc
jno
adc
gs
xchg
stos
cs
aaa
jae
mov
pop
out
fsubl
xchg
fisubrl
aam
add
out
dec
jmp
lods
jp
repnz
sbb
sarb
sbb
rcrb
outsb
xor
dec
cmp
gs
mov
pop
stos
stc
lock
mov
je
mov
pusha
std
add
int3
lods
out
jb
jne
mov
ret
call
or
mov
fistpl
and
adc
repnz
mov
dec
adcl
push
aaa
imul
mov
xchg
pop
int3
mov
jno
push
cmp
jbe
mov
imul
push
push
cmp
mov
mov
bnd
iret
inc
insl
in
pop
aas
inc
iret
movsl
or
pop
jb
test
adc
in
adc
out
pop
sbb
ret
cmp
sub
mov
jne
xchg
xchg
mov
test
imul
and
push
xchg
dec
inc
insb
loopne
rcll
xchg
or
lretw
dec
in
jne
mov
scas
pushf
inc
fwait
push
jmp
mov
fidivrl
cs
mov
call
gs
in
cmp
xor
rol
rcr
adc
push
testb
xchg
lret
xlat
cld
adc
push
sub
xor
pop
mov
aad
lret
xor
cmp
adc
lcall
jmp
aaa
and
mov
pop
aad
gs
hlt
dec
pusha
insl
xchg
dec
test
shrb
ficoml
leave
jnp
shll
jg
mov
push
sub
xor
dec
clc
dec
and
popa
mov
subl
fdivrp
nop
rolb
bnd
lret
aad
mov
mov
inc
xlat
pop
addr16
rolb
push
jb
mov
dec
push
aad
push
addr16
sbb
pop
xor
cld
and
dec
push
xchg
inc
inc
push
xchg
sti
sti
adc
int
adc
jmp
mov
sti
pop
jmp
mov
scas
mov
mov
out
in
stos
stos
lock
bound
outsl
divb
dec
lods
xchg
mov
ljmp
fadd
or
add
mov
pop
add
addr16
push
push
punpckldq
leave
popf
mov
cmp
inc
push
cmp
daa
mov
jbe
divb
mov
mov
nop
test
rolb
cwtl
adc
loope
mov
insb
push
shrl
cmpsb
insb
aas
pop
push
in
push
xchg
xorb
fstps
int3
and
pushf
divb
loopne
ret
xor
cwtl
push
aaa
loope
sub
xchg
dec
ret
cmp
leave
int
cmpsb
pop
aad
mov
fmull
aas
push
nop
and
mov
push
popf
ret
inc
or
pop
lret
cltd
mov
into
xchg
mov
testb
scas
push
jns
cltd
add
fwait
repz
frstor
and
leave
cwtl
pop
jmp
mov
dec
mov
mov
inc
adc
cltd
mov
or
ljmp
dec
shll
cwtl
mov
cmpsb
push
in
xor
or
adc
push
pop
jl
inc
jb
mov
push
fwait
std
xlat
jecxz
lods
rcr
out
adc
fucomp
cltd
iret
dec
lea
cmpsl
pop
cmp
ret
in
ljmp
cmpsb
jb
rclb
sub
aaa
std
xchg
in
push
lret
icebp
pop
out
push
jg
mov
add
xor
mov
aam
jecxz
fists
movl
dec
insb
pushf
aaa
in
pop
cmpsl
push
out
xchg
xchg
adc
push
popa
addl
lret
push
push
ret
movsl
fsubl
xchg
cmp
jae
dec
or
iret
cli
jae
jo
jno
lds
stc
pop
loope
fimull
pop
inc
cmp
leave
clc
in
mov
push
cmc
xchg
dec
mov
repz
xor
mov
gs
ret
out
cld
push
mov
or
int
arpl
mov
sub
pushf
sub
pop
xchg
xchg
jmp
xchg
jns
xchg
sbb
insb
sbb
mov
dec
lret
pop
xor
or
lcall
sbb
mov
nop
lea
dec
mov
arpl
push
adc
jns
pop
jb
cmc
mov
pop
jmp
jns
fistps
push
dec
sbb
in
add
movsl
xchg
fcomps
cmp
push
into
into
ljmp
inc
lods
fsubrl
add
popf
or
and
sub
cmp
aad
loop
daa
dec
mov
aam
cmp
das
inc
push
push
lcall
enter
xadd
push
fildl
jb,pn
jge
ficomps
inc
inc
mov
xchg
mov
pop
and
std
callw
fmuls
mov
int3
lods
sbb
xor
sbb
aad
dec
jmp
popf
jo
cmp
mov
lret
jae
push
lret
loopne
jle
loopne
idivl
aaa
imul
mov
xchg
sub
loop
cld
je
loope
aad
xchg
dec
sbb
cmp
fdivl
adc
pop
loop
out
cltd
cltd
sub
mov
sbb
mov
testl
sub
pop
test
mulb
pop
js
sbb
mov
movl
xchg
lods
dec
mov
lods
jnp
mov
mov
adc
xchg
les
mov
stos
jae
pusha
add
sbb
adc
inc
adc
fcomi
fsubrs
lcall
inc
push
arpl
fstl
dec
call
jmp
std
cmpsb
call
jae
enter
mov
jecxz
mov
addb
xchg
jne
lods
fs
xchg
out
mov
sahf
jge
and
imul
sbb
adc
sbb
dec
divb
lret
fstpt
mov
insl
or
shrb
pop
outsl
out
mov
in
jg
pushf
and
sbb
mov
inc
mov
inc
inc
mov
jecxz
push
les
gs
test
rclb
test
xchg
mov
jnp
mov
aaa
sub
lret
leave
dec
dec
add
pop
addr16
insl
gs
cmp
sbbb
test
jnp
adc
add
aaa
je
pop
out
ja
pop
jb
inc
push
pop
cli
std
cmp
cld
pop
pop
popf
adc
enter
movsb
adc
and
loope
sub
lcallw
mov
cmpsb
pop
xchg
push
jp
or
sbb
sub
cmp
lret
push
ljmp
push
stos
inc
mov
xchg
push
jp
or
sbb
sub
cmp
lret
push
xchg
push
cli
jbe
xor
inc
mov
xchg
push
jp
or
sbb
or
cmp
lret
push
ljmp
sub
mov
cmp
xchg
cs
lds
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
imul
push
dec
ss
sub
dec
sub
push
data16
xchg
sbb
test
mov
out
push
js
and
pop
sub
inc
or
callw
out
mov
cmpsb
call
mov
out
push
mov
fidivl
andb
push
pop
inc
push
jbe
data16
fildl
ret
xchg
lret
test
out
push
xor
dec
pop
xor
xchg
cmp
scas
or
mov
adc
and
inc
test
push
aad
mov
push
jle
jns
mov
sub
in
mov
cmp
dec
loope
jns
add
sub
fnsave
pop
mov
or
lods
cli
mov
xlat
push
cmp
stc
sbb
dec
dec
notb
mov
imul
vpaddq
push
andl
enter
enter
in
mov
imul
cmpsb
and
lret
testl
cld
xchg
sub
and
loop
out
push
cs
dec
ss
es
push
inc
inc
or
cs
bound
loopne
mov
mov
jns
push
cmp
and
cmp
jl
sbb
call
fidivrs
mov
hlt
std
cmpsl
and
cmp
pop
and
add
out
stos
repz
shll
fnstenv
sub
inc
jnp
cmp
jbe
callw
xchg
mov
cmpsb
test
mov
out
push
js
dec
ss
sub
inc
or
callw
xchg
mov
cmpsb
test
mov
out
push
fimuls
test
mov
jae
iret
mov
lds
data16
pop
js
or
sbb
in
mov
xchg
add
movsl
dec
loop
js
shrl
jp
fdiv
mov
or
inc
mov
sbb
mov
cmp
andb
mov
jae
fstp
push
dec
out
sub
test
xchg
mov
jmp
push
test
out
sbb
movsl
out
push
repnz
popf
and
dec
repnz
add
push
jl
out
std
add
pop
jb
cld
dec
pop
nop
icebp
pop
xchg
insb
jb
cmc
ds
divl
push
cs
dec
rcrb
mov
xchg
mov
jns
fldenv
or
aas
sbb
subl
pushf
jl
xor
cmc
aaa
arpl
sar
bound
pop
test
int
test
pop
dec
icebp
hlt
es
and
push
mov
inc
push
negb
add
sub
fwait
cmpl
in
mov
lea
pushf
sub
fisubrs
xchg
push
xchg
out
ja
insl
sbb
jge
and
mov
jp
sub
aad
loopne
and
rcll
sti
movl
cli
xchg
push
mov
xchg
sbb
dec
outsb
or
ja
popl
test
sbb
bound
das
mull
xchg
lret
movsl
in
loope
ffree
ret
rcl
xchg
icebp
lahf
insl
sub
jb
adc
inc
add
add
call
push
jl
add
xor
adc
add
scas
or
out
inc
push
pop
roll
push
jle
movw
jl
mov
add
aad
inc
in
arpl
push
or
shl
dec
out
mov
mov
or
test
and
adc
pop
rcrb
push
pop
in
xlat
out
pop
sbb
pop
push
dec
addr16
mov
fmull
pop
les
cs
movsl
lret
inc
cmp
push
js
repnz
test
aaa
testb
sbb
lret
sbb
test
pop
out
push
and
jno
roll
adc
mov
sbb
rcll
je
outsb
adc
sbb
jne
stos
sbb
into
push
adc
adc
jge
out
jbe
icebp
or
lcall
xchg
fstps
repnz
or
mov
xor
ljmp
mov
stos
int
adc
mov
inc
sub
fmul
aas
lret
cmpsl
ja
xor
cmp
data16
xor
aas
shll
fwait
dec
sbb
sub
aas
dec
les
iret
push
rcll
outsb
stos
fldcw
push
mov
sub
xchg
fwait
mov
addr16
cltd
xchg
xor
jmp
call
inc
or
jmp
repz
jmp
loopne
lock
test
fs
fisttps
sub
inc
pop
cli
movsl
inc
sub
jg
or
dec
fnsave
mov
and
out
out
lcall
or
ret
and
mov
lds
pop
in
das
shlb
lds
mov
mov
pop
fcmovnb
outsb
jp
fwait
shlb
pop
aaa
xor
je
sbb
je
lds
aas
mov
cld
jns
inc
xor
jg
cmp
fsts
repz
inc
xor
imul
mov
inc
sbb
or
fisttps
out
loop
pop
test
enter
stos
in
mov
jnp
jo
mov
int3
test
and
push
mov
cmp
add
mov
xor
jg
xor
pop
mov
je
mov
and
adc
fldt
mov
outsb
fsqrt
subl
adc
inc
repz
mov
jnp
xlat
xchg
jl
fidivl
xor
stos
add
jmp
and
dec
cwtl
jge
out
test
push
or
mov
je
sub
or
int
int
data16
add
fdivl
in
in
mov
fcomp
aas
faddl
clc
push
lds
sub
faddl
sbb
xor
popa
cmp
jl
sarb
movl
ret
cmp
inc
aas
clc
aas
add
ud1
cmpsb
push
shrb
rclb
pop
mov
mov
jnp
mov
adc
xlat
mov
loope
mov
loop
rorl
add
sub
cmpsb
lock
add
mov
mov
pop
sbbl
bound
out
pushf
lahf
xor
xor
add
push
sub
je
mov
out
cmpsl
add
cmp
mov
sbb
lods
jle
aam
dec
lcall
outsl
aas
pop
dec
inc
aam
mov
in
xor
cmpb
mov
pop
insl
mov
repnz
imulb
shrl
repnz
push
decl
in
inc
outsl
cli
imul
sbb
xorl
sbbb
or
test
mov
xchg
adc
cmc
stos
jle
sub
popa
rcrb
adc
pushl
jl
inc
sti
cld
dec
sub
out
movsb
rolb
or
ds
loopne
dec
scas
clc
testl
popa
pop
in
int3
dec
xchg
or
out
mov
out
jbe
lds
sbb
lahf
cmp
jnp
xlat
jo
ret
ffree
dec
sub
daa
push
cmpsl
divb
paddb
insb
or
in
and
mov
in
out
pop
sbb
leave
int3
fwait
pop
aad
in
mov
xor
or
or
loope
flds
cmpsl
jge
xor
stos
movsl
imul
popa
and
ret
cmpb
cmp
cmpsl
outsb
jle
fstl
xor
cmpsl
mov
add
and
in
sub
rcrl
mov
sbb
xor
mov
stos
mov
sub
out
les
mov
jno
into
js
test
jl
jle
enter
inc
and
dec
fcoml
rcl
cmpsl
dec
push
out
mov
loope
mov
sbb
in
push
xchg
gs
push
test
jmp
loope
stos
pusha
adc
inc
movsb
push
xor
sub
lods
xchg
jecxz
testb
leave
lret
das
scas
in
jnp
dec
loopne
jl
push
and
pop
dec
adc
push
aaa
loopne
scas
jle
cmp
dec
adc
cwtl
pusha
or
mov
adc
push
jecxz
pop
iret
movsl
stc
mov
in
icebp
pop
mov
movsl
outsb
adc
mov
imul
int3
dec
xchg
mov
nop
js
mov
bound
xchg
mov
test
fwait
jo,pt
inc
pop
sub
mov
mull
test
lea
pop
adcb
ljmp
adc
inc
mov
xchg
pusha
cmp
fwait
mov
ret
mov
mov
and
fs
pop
popf
test
cmp
pop
push
mov
mov
lret
xchg
push
mov
push
ficompl
je
xor
or
rcrb
sbb
mov
lcall
mov
ss
and
dec
je
push
inc
adc
fisttpl
lds
test
lcall
push
out
push
jno
push
or
xchg
xchg
cmp
cltd
inc
or
fldt
shr
jae
xor
pushf
push
sarb
adc
fcomps
jns
mov
inc
mov
dec
mov
push
stc
bound
std
jb
shrb
mov
daa
add
pop
int3
cmpsb
sbb
sub
mov
iret
out
adc
fmull
lds
sahf
mov
mov
inc
in
test
pop
and
mov
jmp
test
fcomps
nop
mov
ret
push
dec
jmp
test
stos
and
outsl
repz
add
pusha
pop
push
jg
call
stos
std
sub
and
or
fdivrl
orb
adc
push
int3
add
pop
dec
popa
cmp
cmpsb
mov
inc
mov
testl
mov
iret
ss
cmc
push
nop
aas
sub
aad
les
int3
xchg
inc
sub
jge
test
xor
movaps
repz
mov
icebp
es
sbbb
stos
outsl
sub
cmpsb
cmp
into
cmpsb
cmp
test
mov
aad
inc
xor
sbb
mov
xchg
gs
outsl
dec
imul
add
jg
mov
popa
mov
xchg
in
mov
xor
and
lret
jle
cs
int
cmp
fidivl
int
out
je
inc
mov
outsb
test
out
push
into
hlt
sti
dec
js
push
nop
imul
inc
arpl
sar
sbb
or
push
and
adc
mov
mov
mov
jne
cltd
or
jmp
iret
mov
add
test
call
fsubs
hlt
xor
mov
mov
faddl
mov
cmp
push
push
leave
lods
fsubs
repnz
cvtpi2ps
push
mov
sub
inc
ss
stc
or
sti
dec
dec
fstpl
jecxz
and
aad
pop
ss
stos
inc
mov
gs
aas
xor
mov
aam
and
and
mov
gs
xchg
or
mov
or
mov
iret
imulb
loope
loope
imul
aaa
cmc
dec
pusha
movsb
and
popa
mov
lods
pop
dec
outsb
shlb
dec
and
sti
repz
imul
out
nop
adc
add
add
arpl
push
ficompl
mov
fsub
rorb
orb
or
std
rorl
sahf
out
cwtl
cld
mov
adc
xor
dec
js
push
add
les
or
or
fsubp
jle
push
mov
lcall
push
inc
mov
dec
add
cltd
or
imul
push
std
sub
mov
imul
ficoms
sbb
mov
ljmp
mov
xchg
in
xor
xor
or
outsb
jne
dec
rorb
fstl
mov
into
or
sbb
pop
sarl
pop
jne
xor
mov
fiadds
cmpsl
clc
jecxz
sub
loop
repz
ret
sbb
je
pushf
xchg
dec
cs
ljmp
jno
xchg
inc
push
test
je
jne
jno
pmulhw
sbb
dec
jmp
jns
rorb
jge
cmc
sahf
test
mov
and
movsb
rcrb
ror
xor
dec
addr16
add
stos
aaa
push
mov
pushf
lret
es
mov
dec
xlat
push
inc
in
cmp
cmpsb
sbb
call
out
add
fwait
or
xlat
mov
out
cmp
ds
aas
pop
clc
add
lret
and
daa
scas
sbb
cmpb
test
pop
je
repz
sti
test
mov
bound
and
fnstsw
xchg
clc
in
iret
mov
inc
xchg
sar
mov
mov
push
mov
mov
scas
aas
xchg
jle
push
cmp
lret
jecxz
jne
jecxz
jmp
inc
ficoms
pushf
push
dec
pop
js
dec
insb
sbb
cld
sub
enter
mov
and
subb
or
sarl
jns
dec
pop
insl
sbb
pop
testb
jmp
pop
jbe
or
and
dec
fadd
push
xchg
in
fmul
mov
dec
pop
and
push
ds
sub
and
mov
xchg
in
int
push
and
inc
clc
jmp
inc
pop
leave
cltd
xchg
loopne
inc
int3
fldcw
pop
mov
add
in
gs
inc
shll
xchg
fstps
mov
leave
and
mov
dec
out
xorl
jns
sbb
or
sbb
aad
fwait
fwait
das
jge
adc
lret
je
push
lds
xor
xchg
pop
in
mov
jno
xor
fwait
jnp
fiaddl
dec
jae
pop
or
mov
push
shll
addr16
ljmp
in
in
fdivs
pusha
inc
jecxz
dec
xchg
testb
mov
scas
js
stos
push
add
pushf
dec
jmp
jno
xchg
mov
dec
sub
and
or
dec
lret
ja
rcrl
aam
fidivs
inc
inc
and
inc
bound
or
lods
pusha
mov
mov
pop
sub
pop
daa
and
or
push
fdivl
loop
lahf
daa
lods
push
cmpsl
repz
mov
mov
push
enter
add
dec
mov
aad
and
negl
sbb
and
mov
pop
xor
sti
mov
add
scas
mull
scas
cwtl
jg
out
pushf
push
xor
cmpl
es
into
and
scas
mov
or
enter
fdivp
imul
mov
pop
lock
xchg
add
xchg
xor
sub
sub
push
inc
mov
lcall
fwait
inc
push
or
or
xor
shl
insb
xorb
cmpsb
xchg
lods
inc
jl
jmp
mov
cmc
lea
xchg
jp
imul
adc
cmp
mov
je
push
inc
push
popa
inc
imul
pop
dec
jg
js
or
adc
xor
es
pop
cmp
arpl
aaa
jecxz
mov
mov
pop
stos
pusha
add
imull
dec
addr16
pop
adc
xor
and
pop
movsb
pop
hlt
outsb
and
or
push
ret
ficomps
leave
stos
xchg
sar
jmp
mov
loope,pt
lahf
mov
mov
jmp
push
inc
das
xchg
xchg
sbb
xor
popa
out
shlb
aam
test
push
neg
popa
stos
insl
inc
cs
add
mov
in
ja
dec
mov
loop
decl
enter
fsub
push
ds
movsb
loopne
pop
outsl
mov
mov
xor
das
lret
es
jb
bound
jae
adc
cltd
pusha
jle
jl
dec
outsl
dec
je
movsb
sub
stos
sub
notl
loop
adcb
sub
sub
sub
cwtl
cwtl
test
ret
or
adc
test
daa
xchg
add
shlb
add
out
xchg
mov
daa
test
loope
dec
sub
cmp
pop
xchg
inc
xor
das
sbb
jbe
mov
int3
cmpl
jb
das
popf
add
fidivl
push
jae
adc
jl
imul
add
sti
test
push
test
push
addb
std
and
jecxz
fcompl
jns
push
cmpsb
sahf
push
and
es
push
cli
cwtl
adcb
dec
call
mov
movsb
or
aad
mov
adc
and
repnz
push
push
mov
adc
mov
mov
iret
rol
adc
add
mov
pop
dec
out
xor
jmp
xchg
jecxz
inc
adc
outsl
cmp
mov
pop
lret
xchg
mov
js
add
ja
sbb
pop
repnz
je
push
dec
inc
adc
push
push
adc
stos
fcomp
cmp
int
mov
stos
sub
cwtl
push
xor
pop
mov
fstpt
mov
jmp
stos
out
push
add
pop
sbb
push
xchg
fldcw
and
push
cwtl
or
jmp
and
or
dec
shr
add
dec
std
hlt
cli
cmp
je
pop
cmpsb
pushf
cmp
mov
ret
xor
pop
std
mov
fistps
stc
cwtl
pop
jns
and
pop
add
cmpb
xchg
mov
in
popf
mov
in
jno
jo
mov
cmp
in
pop
mov
add
add
or
add
xor
add
mov
aam
mov
aas
int
jge
jg
mov
or
stos
jo
fwait
mov
into
hlt
xchg
pop
push
or
in
lods
icebp
sbb
sub
pop
cmp
mov
fstps
pusha
or
dec
cmp
out
clc
jp
xchg
add
sub
outsl
filds
sub
arpl
daa
push
mov
arpl
icebp
push
add
aad
dec
mov
cmp
sbb
xchg
push
cmc
jnp
mov
and
fs
scas
cmp
addr16
or
inc
mov
aam
dec
out
xor
les
aas
jmp
fsubl
xor
cmp
and
movsl
mov
in
es
lods
lds
or
lret
jno
icebp
leave
loopne
and
sbb
xor
cmp
xchg
cmc
jne
xor
adc
mov
repnz
push
fisubs
das
sbb
pop
loope
cmp
shrb
movsb
cmp
dec
mov
dec
out
jbe,pn
jnp
mov
cmp
pop
cltd
lret
pop
sbb
insb
inc
mov
cltd
mov
mov
pushf
add
pop
jno
into
sub
jp
test
push
mov
shll
loope
shlb
push
mov
test
icebp
popa
add
or
mov
push
lgs
or
jns
aas
push
filds
jge
mov
test
or
outsl
inc
aas
cmp
cmp
scas
xor
incb
inc
loope
mov
inc
bound
cmp
add
fdivrs
pop
mov
xchg
fildl
and
jl
ds
push
pop
aam
add
xchg
mov
and
mov
mov
sti
popf
cmp
lret
xchg
pusha
pop
push
mov
sbb
decl
adc
mov
jae
cmp
inc
push
jecxz
dec
inc
pushf
fwait
ja
push
jge
mov
xor
jecxz
sti
or
inc
xor
jp
dec
jo
jmp
dec
cmpsb
stos
ror
gs
int
jns
cmp
shlb
inc
cmp
push
mov
lret
cmp
mov
movsb
scas
fisttps
loop
pop
lock
enter
sbb
rorb
fsubrp
mov
cmp
lahf
push
sub
adc
sub
jo
sbb
cli
cwtl
pop
adc
test
je
mov
movsl
cmp
and
sbb
fwait
insl
ret
and
push
out
jg
in
sub
mov
jo
push
pop
addb
and
dec
shlb
sub
cmp
push
add
mov
cmp
jp
lahf
jp
fisttpll
xor
divb
rcrl
adc
leave
mov
cltd
je
sub
int
adc
and
lret
shlb
div
and
outsb
iret
je
es
or
xchg
stos
aam
std
sbb
mov
popa
sbb
repz
xorl
and
jne
jnp
push
subl
sub
xchg
mov
icebp
insl
cmp
stos
lods
fnstsw
pop
xor
jmp
icebp
push
lds
jp
lea
fs
shll
imul
adc
mov
add
jo
in
mov
mov
not
mov
push
fcmovnb
hlt
push
push
lcall
and
cli
mov
cmc
cmp
xchg
ret
fisubs
jecxz
pushf
ljmp
out
jg
dec
ret
mov
outsb
cmp
cmp
nop
or
xchg
shl
jg
xchg
movsl
push
pop
pop
adc
sub
sbb
sub
cmp
iret
test
mov
sub
andb
addr16
and
mov
lret
mov
data16
clc
dec
sahf
fdiv
push
loopne
dec
outsb
scas
jle
adc
ss
call
stos
mov
cmp
adc
cld
or
bound
aad
sbbb
sub
xchg
xor
or
mov
sub
adc
add
scas
xchg
and
sbb
pop
adc
movsb
dec
and
sbb
sbb
add
xchg
cld
dec
dec
outsb
adc
xchg
jae
popa
call
sub
jmp
push
clc
jge
pop
add
pusha
xchg
std
aam
ficoms
push
pop
cmpsl
out
int
in
ds
sub
lods
test
xchg
cmpsb
jne
subl
fildll
mov
iret
ret
fists
repz
lds
movsb
rclb
jge
inc
in
lret
in
rorb
inc
add
es
int3
ljmp
add
sbb
mov
lds
or
mov
push
cmp
xor
and
outsb
out
int3
scas
daa
xor
add
scas
mov
pop
sbb
push
mov
std
pushf
out
lds
mov
jns
or
push
push
dec
pop
out
jo
dec
jo
and
mov
adc
fldl
jmp
jb
mov
cmp
jecxz
in
lea
ljmp
add
es
ror
ret
mov
lods
pop
inc
test
and
pop
and
lea
jl
mov
ds
mov
mov
pop
jecxz
sub
or
xchg
les
pop
sub
inc
or
callw
xchg
mov
cmpsb
test
mov
out
push
js
dec
ss
sub
inc
or
callw
xchg
mov
cmpsb
test
mov
out
push
dec
xchg
mov
es
jbe
callw
xchg
mov
cmpsb
test
test
mov
jo
jl
and
adc
js
sub
inc
or
callw
sub
mov
rcr
pop
xor
ja
sbb
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
pop
rorb
loopne
lock
jle
pop
repz
mov
inc
into
push
pusha
out
jo
add
xor
dec
sarb
outsb
lock
orb
mov
into
push
mov
jo
add
xor
dec
sarb
outsb
lock
orb
mov
into
or
adc
jo
push
in
je
inc
shlb
rorb
test
pop
inc
push
push
mov
aad
sbb
adc
ss
mov
enter
stc
aad
repnz
mov
jecxz
xor
mov
lods
fdivrs
jae
imul
fwait
fwait
mov
aad
push
mov
out
inc
xlat
pop
sbb
shlb
andb
add
and
fildll
sbb
dec
rorl
loope
in
sbbl
loopne
jae
inc
jae
enter
out
mov
pop
cmp
ss
or
aas
pop
das
out
add
addr16
adc
mov
and
sub
loope
test
dec
iret
xchg
shrl
mov
stos
jo
decl
xor
rorb
loopne
lock
orb
mov
into
push
pusha
out
jo
add
jbe
lods
daa
add
cmpsb
or
pop
lds
lahf
sub
cmp
insl
out
cli
mov
cmp
loopne,pn
cmpsl
pop
in
mov
mov
ss
sbb
outsl
fidivrl
push
scas
pop
aaa
nop
sub
in
push
nop
mov
into
push
pusha
out
jo
add
xor
dec
sarb
outsb
lock
orb
mov
into
push
pusha
out
jo
add
xor
jmp
lds
dec
and
inc
xchg
outsb
add
or
push
sbb
js
in
and
and
push
xchg
push
mov
loope
sti
adc
stc
aaa
sub
cmp
adc
push
cmpsl
or
sub
and
xor
xor
jne
push
xchg
push
mov
scas
cmp
xor
inc
inc
arpl
int
nop
or
sbb
jle
jae
xchg
insl
mov
movl
scas
cmp
movsb
push
xchg
mov
xor
movsl
push
pop
repnz
mov
in
inc
push
es
add
adc
es
jae
cmp
lahf
in
push
in
mov
leave
xor
push
dec
call
scas
pop
rcrl
pop
aaa
test
mov
mov
stc
mov
stc
dec
dec
clc
cld
mov
ret
push
aas
xchg
dec
add
test
inc
rorb
loopne
adc
lcall
add
cltd
sti
inc
arpl
mov
and
inc
in
push
lret
fwait
aaa
xchg
mov
cli
data16
adc
aas
jnp
lret
ja
push
popf
dec
sar
clc
and
xlat
mov
ljmp
lret
push
jmp
into
mov
lret
push
dec
mov
cli
xchg
stos
test
cmp
adc
dec
shll
lcall
cmpsl
pop
frstor
or
insl
sub
fcompl
pop
fdivl
aam
mov
xor
xor
movsl
pop
in
push
cmpb
adc
out
push
xchg
and
xchg
xor
add
shll
cwtl
inc
shr
add
dec
add
mov
mov
test
pop
mov
addl
pusha
imulb
jne
cs
aas
cwtl
jecxz
aaa
ss
leave
xchg
sub
jo
and
xor
add
add
sbb
jl
and
xchg
in
jo
xchg
jmp
sub
fwait
nop
jmp
add
push
rolb
sub
sahf
daa
mov
mov
add
clc
push
test
mov
xchg
xlat
roll
inc
mov
mov
dec
dec
push
dec
cwtl
cmpsl
and
inc
daa
or
xchg
outsb
std
mov
mov
into
daa
clc
andl
mov
or
sbb
mov
push
sbb
stos
mov
fsubrl
lds
push
mov
sbb
mov
out
fstps
arpl
ucomiss
pop
shrl
mov
inc
fldenv
xor
xor
pop
inc
mov
stos
inc
dec
mov
or
dec
lret
jg
test
lods
mov
and
pusha
clc
jae
decl
push
adcl
lock
subl
jb
sbb
cmc
fisubs
aaa
mov
dec
out
pop
stos
jb
cltd
lock
adc
bound
lret
enter
daa
fs
divb
lahf
cmpsl
mov
cli
outsl
adc
scas
add
loop
mov
aas
or
sbb
cmc
or
repz
loopne
xor
jbe
popa
aaa
xchg
and
pop
push
mov
into
pop
adc
adc
mov
jl
fidivrl
lock
in
subl
jno
popa
or
jno
jl
and
adc
stos
mov
aaa
movl
test
mov
mov
stos
xchg
rcr
mov
push
jbe
push
insl
fwait
cmp
popf
jbe
adc
or
pop
ds
pop
out
fisttpll
loopne
pop
cltd
in
sbb
pop
decl
int3
nop
aam
leave
in
sar
loopnew
cmpsl
test
jo
inc
jo
push
sbb
out
cmp
push
daa
inc
fisttpll
push
or
cmp
arpl
out
adc
jae
jge
mov
fstl
scas
sub
sbb
or
rcll
or
outsl
sahf
mov
cs
dec
and
and
imul
je
aaa
into
sbb
into
jge
or
mov
lods
push
lods
push
movsl
push
sub
mov
mov
clc
aas
in
ss
mov
divb
inc
and
xchg
lds
pop
jle
xor
rcr
jl
xchg
incb
dec
add
icebp
jle
dec
pop
xor
xor
es
and
mov
fmull
cwtl
xchg
xchg
mov
xor
push
cmp
repnz
and
cli
pushf
jle
or
xchg
sbb
push
outsb
negl
insl
pop
mov
outsl
cs
xorb
pushf
fs
mov
icebp
and
adc
inc
ss
pop
stc
mov
mov
jge
cltd
or
and
pop
xchg
fidivl
or
aad
popa
xchg
xor
cmpsl
fdivs
jle
jne
dec
push
sahf
cmp
inc
test
test
cwtl
pushf
in
sbb
pop
xlat
out
dec
jl
mov
aam
and
xchg
int3
aas
xchg
arpl
je
and
dec
arpl
fdiv
cmpsb
hlt
push
push
adc
cs
cmpl
pop
xor
xchg
push
push
adc
pop
xlat
adc
aaa
jns
insl
and
push
scas
cmp
aas
int3
or
jecxz
and
sub
outsb
repz
sub
mov
jge
sbbl
add
add
out
test
inc
sub
inc
movnti
mov
mov
sbb
cltd
das
jmp
dec
add
leave
cmpsb
sub
nop
and
xchg
jo
jbe
mov
inc
sbb
test
jb
or
hlt
pop
and
sub
jb
adc
lcall
scas
jae
fwait
push
out
fcmovbe
pop
push
mov
dec
loope
mov
xchg
loope
ret
cmpsb
adcl
cwtl
push
jnp
xchg
ds
lea
insl
push
push
or
push
jle
fimull
sub
add
in
inc
fs
mov
popf
mov
or
ss
or
cmp
sbb
mov
mov
xor
push
jle
jbe
pop
pop
scas
sahf
cmpsl
fsubrs
mov
xor
mov
push
mov
jg
or
ret
push
adc
xor
gs
dec
pop
cmp
lahf
pop
fisttps
push
cmpsb
addr16
stos
push
std
lahf
subl
es
adc
sbb
test
clc
mov
rep
leave
mov
sub
daa
mov
decl
sti
daa
sbb
cwtl
dec
or
xor
jnp
scas
rorb
dec
cmp
jmp
inc
inc
inc
xchg
ds
mov
movsb
add
mov
xchg
shrl
push
and
xor
sub
dec
xchg
clc
das
sbb
jb
ja
gs
pop
push
and
aam
sbb
inc
divl
test
clc
lret
into
and
aaa
sbb
mov
movb
aam
cmp
bnd
enter
not
jns
jg
dec
sub
lock
mov
fwait
adc
push
repnz
arpl
pop
cmp
dec
pop
pusha
cli
mov
or
mov
xor
shrl
lret
into
pushf
lcall
pop
push
cld
int
mov
fidivrs
and
pop
testl
lahf
scas
cmpsb
ja
xlat
or
pop
cmpsb
movsb
aam
aam
push
in
das
jae
shlb
adc
fildl
cld
rol
push
enter
shll
inc
je
cmovs
fcmovnb
out
cmp
imul
push
push
mov
movsl
hlt
adc
inc
mov
mov
jo
out
addr16
mov
jp
cmpsl
out
mov
jmp
mov
loope
xchg
xchg
js
xchg
xchg
ja
jne
jecxz
inc
push
inc
dec
pop
into
lds
fs
shrl
push
hlt
mov
fdivr
mov
in
dec
cmp
dec
and
out
xchg
mov
test
scas
repz
sbb
hlt
into
arpl
ja
andb
sbb
and
lods
cmp
stos
das
stos
in
xor
jne
sub
mov
push
scas
sub
lea
sbb
mov
lea
lahf
dec
mov
xchg
jns
test
rolb
push
jmp
ret
cmp
decb
mov
fldpi
cs
jp
aam
add
jmp
into
jg
rclb
arpl
sahf
sub
jge
or
bound
jg
sti
ja
adc
cmp
cmp
fidivrl
sahf
sub
cmpsl
popa
mov
pop
cs
mov
lcall
pop
repnz
dec
pushf
cmp
xlat
inc
fs
dec
mov
hlt
mov
adcl
aam
in
xor
insb
and
insl
xor
xchg
sarb
arpl
mov
push
outsb
popa
push
push
push
test
inc
mov
pop
mov
cmpb
shlb
imul
fstp
mov
push
in
pop
cmp
fadds
or
testb
in
jp
movl
sbb
cwtl
ss
mov
rolb
in
addr16
pushf
fidivs
jnp
mov
cmpsl
cwtl
out
sub
pop
mov
lds
call
addr16
adc
imul
hlt
stos
insb
or
xchg
call
imul
fcoml
rcrl
adc
sbb
xor
sbb
lods
sahf
idivb
shlb
cmp
inc
inc
repz
in
mov
xchg
xchg
and
cmp
cwtl
enter
adc
test
cld
sbb
es
je
pusha
dec
xchg
movl
aam
sub
xchg
push
jp
test
xor
lods
into
outsl
inc
data16
add
lahf
push
adc
lods
sahf
push
sbb
or
and
adc
ficoml
fisttpl
adc
mov
cmpsb
test
test
dec
and
ret
xor
cmpsb
das
out
lret
mov
sub
xor
dec
cld
xchg
push
inc
adc
and
xchg
aam
test
dec
ret
pusha
inc
bound
pushf
mov
jb
or
and
lods
xchg
enter
pop
push
and
mov
test
ret
insl
push
mov
cmp
push
add
scas
pop
aad
jge
adc
shlb
pushf
mov
jle
or
test
mov
cmp
orb
cwtl
xor
js
cmp
shll
adc
hlt
pop
imul
mul
out
cld
sub
int
insb
xor
repnz
mov
lds
in
pop
mov
mov
aad
daa
popa
frstor
dec
xor
and
sbb
mov
sub
scas
pushf
dec
pop
shll
test
ja
pop
mov
arpl
mov
sbb
cmp
bound
lcall
mov
pop
cmp
add
xor
nop
outsl
cmp
shl
idiv
pop
and
mov
fwait
inc
push
pop
jl
pop
jns
rcrl
pop
push
mov
aad
cmp
in
xchg
jl
push
jl
jg
ret
or
cld
aaa
xchg
cmp
mov
sahf
mov
xor
fists
psrlq
xor
imul
dec
into
add
push
jne
ds
insl
dec
lods
mov
insb
bound
or
adc
xlat
popf
pusha
xchg
inc
aas
add
pop
dec
iret
std
fs
xchg
inc
pop
es
mov
notl
rorl
call
pushf
bound
xchg
push
cmp
add
push
push
cld
sub
inc
jmp
xchg
aad
lods
shlb
lcall
xchg
loop
pushf
fdivl
xchg
mov
adc
loopne
ret
jecxz
xor
xchg
adc
and
sti
xor
testb
sub
xor
xor
mov
test
orb
in
mov
out
jg
cmp
dec
pusha
das
sub
xor
call
and
jecxz
out
xlat
loope
xor
test
xor
movsl
mov
dec
movsb
pop
mov
cs
decb
adc
and
stos
popl
movsb
pop
ret
sarl
sub
push
push
adc
cmpsl
pmaxub
int3
dec
mov
mov
scas
push
jmp
jle
ljmp
stc
mov
xor
outsl
xchg
mov
mov
imul
gs
bound
jo
out
sub
or
imul
inc
sbb
adc
push
in
push
in
mov
xchg
cmc
sti
mov
xchg
fnstenv
sbb
xlat
out
aaa
dec
pop
xchg
dec
jle
mov
push
mov
inc
outsl
xchg
into
stos
mov
pop
clc
scas
jg
insb
dec
iret
pop
push
cmp
ret
lret
adc
ja
mov
fstl
lcall
mull
mov
xchg
shll
mov
cmp
xchg
push
adcl
rcr
pop
mov
cmp
gs
leave
sub
fsubrl
mov
inc
popa
out
divl
sub
xchg
cmpsl
js
jmp
sub
and
mov
in
sbb
icebp
fs
lds
std
js
add
in
fsubrl
lret
call
inc
add
jne
sbb
and
lea
das
test
sub
xchg
es
repnz
push
push
push
pop
shr
icebp
lret
mov
cwtl
xor
jbe
fwait
mov
fwait
jp
dec
test
test
ja
jg
pop
es
arpl
movsb
in
aad
mov
stc
aad
sbb
dec
inc
scas
sub
jno
lahf
iret
sbb
notb
int
push
jecxz
daa
sahf
lods
pop
daa
jle
and
mov
mov
jnp
pop
xor
cmp
sub
xchg
inc
sbb
push
pop
pop
pop
lret
lcall
sub
popa
sub
mov
adc
sbbb
pop
inc
adc
push
sbb
imul
push
mov
and
scas
push
std
jb
dec
in
inc
mull
xor
imul
sub
lcall
dec
cltd
inc
mov
das
sub
mul
cmp
inc
cmc
dec
gs
mov
je
push
insb
stc
pop
inc
adc
and
and
xor
inc
sarb
push
cmp
or
xor
scas
inc
pop
or
repz
test
shrb
dec
mov
adc
outsl
mov
dec
xor
lds
negl
jno
jnp
into
cmp
sahf
pop
ret
aaa
lods
mov
scas
mov
mov
jae
cmp
ret
dec
ret
dec
fs
xor
or
imul
mov
fcoms
adc
or
sbb
adc
sti
sti
flds
cmpsl
mov
mov
ret
test
test
jb
mov
cld
or
xchg
xchg
outsl
loopne
mov
jb
addr16
cltd
bound
xor
stos
movsb
cld
loopne
mov
pop
out
shrb
push
push
call
dec
dec
in
cmp
inc
sar
sbb
in
xlat
lret
jg
aad
jecxz
mov
sbb
out
in
cmc
jmp
daa
jnp
and
clc
sbb
ret
sbb
outsb
fsubrl
mov
cmp
lcall
and
sub
mov
daa
cmp
push
jo
and
mov
dec
mov
push
dec
adcl
and
add
orb
mov
out
sub
mov
sub
adc
dec
sbb
shll
mov
stos
dec
decb
in
cmp
and
cmp
jb
popf
and
loopne
jl
fwait
inc
xchg
add
aas
sar
pop
repz
inc
lcall
adcb
xchg
sub
repz
cmpsb
cmp
pop
inc
xor
sahf
push
and
add
in
enter
inc
cmp
fildll
sub
mov
scas
dec
ror
mov
pop
lock
xor
and
or
sbb
mov
test
sub
fs
cmp
imul
and
jbe
sbb
mov
les
push
jecxz
cmpsb
repz
insb
or
movsb
cltd
cwtl
add
jle
pop
shlb
xchg
stos
push
add
jnp
lock
pusha
add
pusha
shll
and
and
cwtl
mov
enter
ds
stos
repz
xchg
es
jecxz
dec
imul
sahf
out
pop
int3
imul
test
fcoml
mov
dec
jecxz
xor
rclb
inc
and
sub
cmc
aaa
sbb
mov
out
jmp
pop
jge
out
fidivrs
test
mov
in
das
jp
hlt
mov
cmp
sbb
adc
mov
push
and
lret
fbstp
inc
cmp
mov
pop
fadds
in
push
mov
shl
negb
mov
jnp
jl
call
pop
sub
mov
jecxz
in
mov
pop
push
push
testl
into
jbe
cmp
inc
out
xchg
shl
mov
inc
pop
mov
iret
jo
test
pop
adc
add
gs
faddl
sahf
enter
leave
rcrb
lahf
mov
mov
negl
lock
jmp
test
jnp
hlt
rcll
fildl
lcall
mov
xchg
aaa
test
or
aad
mov
sub
mov
ret
fnstcw
push
ss
mov
scas
xchg
cmc
or
insl
mov
inc
and
js
or
arpl
ja
pop
sbb
mov
lret
inc
sub
adc
frstor
in
push
add
fsubp
xor
jmp
lods
mov
mov
jo
fcoml
inc
sarb
and
ljmp
xor
imul
dec
mov
push
ljmp
movsb
es
or
jno
dec
adc
int3
daa
lret
or
push
dec
in
aad
or
mov
ret
pop
scas
imul
pop
shrb
insl
add
jnp
jb
cld
sbb
cltd
loope
negb
sbb
rcrb
fstps
inc
cmp
mov
in
sbb
mov
enter
mov
jno
and
rorb
push
sbb
xor
adc
sbb
sub
mov
divps
sub
adc
jg
xor
call
or
ja
insb
aaa
inc
enter
rcl
scas
mov
adc
pop
mov
iret
in
or
xchg
dec
xor
jbe
sbb
pop
lcall
mov
sbb
ret
xlat
add
and
pop
ljmp
test
fadd
ja
sbb
add
pop
sti
push
push
test
cwtl
push
mov
mov
and
int
lds
enter
js
dec
push
aas
fs
xchg
xorb
push
inc
cmpsb
ret
out
or
xor
or
xchg
mov
and
push
xchg
mov
mov
mov
pop
xor
movsb
sub
testl
ja
dec
push
dec
loope
test
add
pop
in
or
lret
cmp
nop
sarb
out
lea
adc
out
enter
daa
jne
cltd
shll
or
js
mov
dec
and
push
mov
and
sub
mov
xchg
sbb
loop
jp
outsl
out
mov
dec
mov
enter
das
int3
lods
out
xor
adc
cmp
xchg
pushf
sub
inc
insb
mov
ret
lcall
sbb
xorl
cmp
mov
dec
mov
lcall
push
adcb
jp
sub
inc
rol
push
sbb
mov
jns
push
sub
mov
push
sbb
pop
rorl
pusha
or
or
cmp
mov
cmp
xorl
xchg
mov
inc
add
sub
int3
mov
inc
jg
mov
addr16
hlt
pop
sti
mov
mov
aad
lea
rcrb
and
rcrl
aam
xor
inc
xchg
jmp
testl
outsl
outsl
mov
jl
in
insl
pop
das
push
and
or
ljmp
adc
pop
xor
push
pusha
dec
test
mov
ss
ss
data16
aam
pop
sub
sub
lods
sub
popa
jp
push
popfw
repnz
stos
mov
xchg
or
xchg
adc
push
movsl
inc
or
addr16
xchg
lds
push
loopne
lcall
jb
add
jne
mov
sub
fwait
or
jb
stc
dec
jp
jnp
xchg
dec
lods
mov
outsl
pop
push
in
pop
inc
lahf
cld
cmp
add
imul
das
rorb
arpl
pusha
setnp
adc
pop
shl
sub
push
push
sbb
shll
data16
pop
mov
dec
xchg
sbb
test
push
call
out
push
sub
and
and
js
call
xchg
lock
cmpsl
xor
push
ja
cmp
outsb
lock
orb
mov
into
push
pusha
out
jo
add
xor
dec
sarb
outsb
lock
orb
mov
into
push
pusha
out
jo
add
xor
dec
sarb
outsb
icebp
push
orb
mov
into
push
pusha
out
jo
add
xor
dec
sarb
outsb
hlt
push
orb
and
dec
fidivrs
out
pop
jmp
fists
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
sub
pushl
iret
and
ljmp
lahf
nop
roll
pop
shrl
sarl
pop
loopne
adc
add
xor
and
push
scas
inc
mov
nop
outsl
cmpb
mov
aas
lock
adc
add
xor
and
push
scas
inc
mov
nop
outsl
sbbb
xor
push
push
jl
jo
fistl
push
lcall
icebp
adc
cmpsb
push
dec
cmpsl
lock
out
out
inc
movsl
popa
push
push
mov
adc
sub
sub
fs
mov
dec
xchg
incl
aas
aas
sbb
lret
push
adc
jle
dec
pop
mov
jae
movsl
rcl
bound
ljmp
insb
mov
adcb
fidivl
aas
xchg
fnstsw
jp
pop
in
das
incl
arpl
xor
push
jo
pusha
lahf
clc
nop
cmc
push
mov
pop
cmpl
addr16
call
jno
xlat
mov
mov
add
push
jnp
cmp
outsl
icebp
psraw
dec
out
add
xor
and
push
scas
inc
mov
nop
outsl
cmpb
mov
aas
lock
out
inc
xchg
sahf
adc
and
jmp
pop
xor
sbb
das
movsb
pop
mov
jge
jp
addl
xchg
xor
fcomps
mov
or
or
fwait
dec
mov
mov
scas
lods
push
stos
add
jo
pusha
lahf
nop
outsl
cmpb
mov
aas
lock
adc
add
xor
and
push
scas
inc
mov
nop
outsl
cmpb
mov
aas
lock
adc
add
sbb
pop
xor
leave
jl
and
rcl
mov
mov
mov
fnsave
sbb
jb
add
add
adc
sbb
mov
clc
in
fmuls
fdivrl
cwtl
fcomps
movsl
cmp
inc
lcall
cmp
pop
int3
sub
iret
inc
pop
mov
dec
cmp
xchg
lcall
or
push
jbe
add
cmp
xchg
sub
cmp
ja
inc
idivb
movsl
mov
popa
dec
xchg
pushf
push
repnz
scas
into
inc
pop
and
xchg
pop
adc
jbe
out
add
int
push
addr16
pop
adc
sub
pop
bsf
sar
adc
mov
xchg
fwait
js
fs
jg
stos
test
scas
lcall
fs
andl
repnz
mov
scas
cmp
ret
out
shl
out
sbb
sub
push
hlt
fiadds
xchg
xchg
dec
ljmp
adc
cli
cmpsl
mov
mov
add
or
sbb
fwait
sbb
dec
aad
xlat
add
mov
fldt
add
lods
push
mov
add
leave
inc
aam
or
dec
ds
icebp
popf
and
outsl
fsubr
pop
sub
push
movsb
jmp
ss
fldl
xchg
cwtl
mov
adc
das
ret
lock
adc
pop
inc
mov
push
mov
mov
lods
adc
lods
inc
aaa
adc
inc
inc
cmp
sub
pop
cmp
jnp
pop
pop
out
or
es
sti
in
jp
sub
mov
movsl
sbb
xchg
xlat
mov
sub
pop
mov
dec
in
cmp
jae
sub
divb
leave
inc
add
int
adc
push
cmpsl
or
push
xchg
or
inc
in
iret
xor
or
out
pop
dec
fsub
and
jge
ret
lds
xchg
nop
movsb
mov
add
sub
dec
or
cmp
pop
jb
int3
and
iret
mov
gs
mov
gs
lea
mov
mov
dec
push
mov
xchg
xor
cltd
inc
mov
into
jp
loop
and
mov
dec
pop
or
pop
pop
xor
imul
pop
push
add
and
clc
cmpsb
out
icebp
add
or
in
xor
push
cmpl
and
test
mov
or
and
sbb
js
in
push
iret
insl
sub
cmp
dec
dec
insl
loope
ficomps
sbb
dec
push
les
pop
push
imul
es
clc
push
mov
xchg
into
dec
jno
jecxz
mov
fistpll
jecxz
in
rorb
stc
shrl
cs
or
fs
scas
negb
inc
sbb
ror
aam
xor
mov
clc
ljmp
mov
repz
cli
xor
jp
movsl
neg
mov
cs
or
aas
scas
fiadds
jae
sbb
into
adc
push
adc
jmp
pop
fdivl
insl
dec
push
jae
fcoml
fmul
pop
inc
mov
rcll
gs
shr
push
cmc
nop
cmp
push
push
lods
cs
jge
mov
jno
push
jo
jns
mov
ss
lret
inc
imulb
inc
or
aam
insl
mov
in
movsl
stos
adc
mov
add
jo
dec
fistpl
test
pop
mov
inc
mov
mulb
stos
or
imul
push
mov
rorb
pop
cli
stos
cmp
xchg
cmp
and
out
les
repnz
lcall
sub
cmpsl
xchg
mov
out
popf
xor
inc
test
push
out
add
insl
and
cmp
pop
out
nop
imul
xchg
test
adc
pop
inc
inc
subb
pop
fcmovu
xchg
cmp
das
dec
jmp
cmp
jg
xlat
stos
aas
repnz
gs
adc
in
not
outsl
out
loop
addb
xchg
dec
xchg
dec
xlat
fstpt
pusha
loope
popf
pushf
mov
add
xor
into
cld
dec
xchg
xor
mov
andl
cwtl
std
and
pop
sahf
lret
stos
sub
shlb
test
out
push
sub
fsubrl
mov
mov
out
fs
scas
shlb
mov
out
mov
mov
xchg
lods
bound
pop
mov
mov
mov
push
dec
inc
sub
enter
jb
mov
aas
pushf
or
fiadds
mov
stc
inc
lahf
xchg
xor
fimull
xor
lock
xchg
pop
scas
cwtl
shrl
fnstcw
fld
mov
int
cs
in
jg
and
arpl
ds
cmp
cs
and
rclb
scas
cld
mov
pushf
cmp
sbb
repnz
mov
sbb
lcall
dec
cld
dec
sub
or
lret
nop
push
xchg
adc
cltd
adc
or
sbb
sbb
bound
sub
loop
sub
inc
cmc
jmp
push
add
insb
pop
and
cmpsb
mov
js
in
les
stos
lcall
das
push
adc
fists
jp
mov
or
mov
mov
mov
repz
push
dec
and
addb
mov
ss
mov
dec
mov
mov
mov
insb
ss
aad
add
xor
imul
idivl
mov
or
imul
inc
leave
jae
inc
push
mov
in
xchg
int
dec
push
enter
mov
mov
outsb
pop
adc
sbb
sub
stos
sbb
decb
or
aam
and
mov
shrl
hlt
les
leave
sub
push
aam
clc
xchg
lahf
xchg
mov
dec
xor
adc
jg
sub
fildl
movsl
roll
dec
push
sub
adc
fdiv
scas
popl
repnz
cmp
or
ds
adc
cltd
lods
jnp
mov
ret
dec
mov
cmp
push
add
cld
sbb
push
in
cmpsl
inc
push
ljmp
leave
mov
nop
or
cmc
dec
mov
pop
cmp
cmp
push
add
jae
frstor
pop
and
pusha
ficompl
pop
pop
push
cmpsb
aam
dec
pop
inc
jb
jmp
adcb
test
xchg
roll
gs
call
pushf
sti
lods
das
ret
repz
lret
icebp
add
sbb
cmpsl
fisttpll
jp
dec
mov
negb
sub
imul
or
or
or
cmp
arpl
in
mov
out
aad
push
push
test
mov
cs
or
in
outsl
enter
and
int3
iret
xor
xchg
fcmovb
push
subl
jns
or
mov
cmpsb
fcoms
pop
sbb
imul
xor
xchg
in
xlat
loopne
ds
or
scas
lcall
xor
test
je
xchg
mov
aad
add
lock
sub
out
cmp
sub
into
fwait
jne
repz
add
pop
mov
sbb
hlt
or
sub
push
ss
xor
or
jmp
daa
scas
xchg
dec
hlt
lds
stc
mov
or
mov
inc
lahf
std
sub
adc
xor
dec
mov
inc
mov
jb
sbb
pop
movsl
ja
jg
ljmp
jecxz
in
sarl
add
lcall
mov
cli
inc
movsl
sar
mov
jno
xchg
dec
rcl
rcl
iret
lods
js
xchg
mov
sbb
mov
xor
pop
pop
mulb
leave
pusha
cmp
stos
or
add
dec
jne
shrl
flds
pop
arpl
aad
test
mov
call
mov
jg
sub
cmp
xchg
sbbb
pop
jp
mov
push
mov
inc
jae
xchg
fistps
aam
out
jge
repnz
jnp
mov
lahf
pop
xchg
popf
sub
ret
pusha
sbb
ja
xchg
push
lock
xorb
xor
xor
daa
leave
sahf
xchg
jg
xchg
cmp
pop
xor
xchg
xchg
test
inc
gs
nop
mov
mov
inc
cmpsl
cmp
or
iret
sbb
lret
pop
repz
or
fimull
add
xchg
mov
pop
and
and
mov
xchg
and
fst
dec
lahf
pop
mov
lahf
mov
das
in
sub
aad
jmp
insl
pushf
aad
dec
xorb
mov
divb
cltd
out
fiadds
inc
mov
xlat
clc
stc
xlat
xchg
test
cli
lods
xor
adc
mov
push
movsl
pop
xor
stc
roll
mov
enter
test
sub
in
ffree
in
shlb
out
cmc
or
dec
shr
pcmpeqd
andl
push
mov
or
mov
insl
nop
xor
jl
mov
dec
mov
mov
add
dec
and
xchg
cld
jbe
mov
fs
fucom
sti
push
repz
sbb
pop
inc
xchg
dec
mov
pushf
fldenv
push
jns
mov
movsb
or
lret
sbb
pop
cltd
sbb
sbb
push
jae
xchg
mov
xchg
pop
mov
add
fldl
out
and
hlt
lds
add
out
dec
push
iret
mov
cmp
push
outsb
cmp
arpl
xchg
cmpsb
mov
notb
xchg
out
repnz
imul
mov
push
movsl
imul
jmp
push
or
ret
cmpsl
or
int
inc
mov
xor
push
inc
push
adc
dec
push
lcall
ljmp
decb
jge
pop
add
and
scas
sub
pop
aad
mov
fwait
adc
pop
cmp
push
movsb
jae
into
mov
dec
dec
out
stc
loop
push
inc
pop
add
addr16
out
xchg
pop
pop
pop
fs
cld
leave
mov
jge
fstpl
xchg
jecxz
push
jmp
dec
jmp
popf
cmpb
scas
repnz
aam
jnp
pop
xchg
mov
outsl
jge
div
cmpsb
pop
into
cmp
xor
scas
icebp
xchg
into
lret
push
movl
jmp
pop
test
cmp
scas
test
ror
outsb
inc
gs
cmpsb
cmc
xchg
cmp
nop
add
cli
lea
pop
pop
lahf
mov
scas
inc
out
jle
fwait
inc
dec
xchg
loopne
push
xor
insb
cld
fstpt
hlt
das
cwtl
and
jnp
dec
int
push
jmp
or
inc
outsb
movsl
mov
stc
psubd
movb
add
jp
push
fcomps
pop
hlt
sahf
or
popf
in
pop
sub
adc
inc
in
jnp
ret
inc
xor
dec
push
std
mov
lea
out
adc
inc
push
mov
jl
xlat
or
xchg
loope
lods
adc
jle
in
repz
jp
lret
mov
push
mov
pop
dec
dec
clc
or
sbb
movsl
ja
lret
enter
hlt
lcall
stos
dec
jae
mov
jg
stos
out
mov
sub
les
jns
xor
clc
inc
push
fsubs
mov
cmpl
mov
test
fnsave
pop
xchg
cmp
lds
xchg
dec
shrl
ret
testl
cmp
dec
push
in
jb
sti
xor
or
xor
mov
xchg
test
add
lcall
sbb
mov
ret
cmp
jge
mov
push
outsb
negb
cmpb
fisubrs
and
test
fildll
mov
or
fstpl
push
in
xor
dec
int3
or
ja
push
add
int3
and
or
cmc
outsl
push
lea
add
aas
inc
cmp
das
stos
mov
xor
lock
cmp
jns
dec
shll
aas
loop
inc
test
je
mov
jnp
adc
inc
pusha
pop
push
jle
cmp
test
adc
cmp
mov
inc
das
cwtl
inc
and
dec
fiaddl
cmp
mov
mov
add
sub
insb
inc
adc
mov
sti
jae
mov
mov
loope
popa
push
lea
outsb
mov
loop
ret
jp
fcmovbe
cltd
and
fwait
inc
adc
jo
jnp
scas
out
dec
sbb
mov
imul
lods
mov
cmpsl
int
lret
xor
ret
xor
test
and
jbe
mov
adc
js
lds
adc
loope
mov
and
jns
clc
dec
xchg
inc
jo
movb
mov
pop
es
pushf
adc
jbe
movsb
mov
idivl
cmpsl
in
mov
add
sti
pop
out
inc
jl
decl
push
mov
and
jg
xchg
cmp
ficoml
pusha
fistpl
imulb
dec
iret
rolb
fs
loop
xchg
mov
adc
xlat
jg
push
push
push
lcall
into
cmpsl
jo
sbb
cmp
in
sbb
xchg
push
ret
push
repz
lret
cmp
jle
adc
xchg
push
or
aad
flds
or
mov
add
mov
subl
cmp
mov
add
and
inc
xchg
mov
sbb
fsubrl
repz
mov
jge
hlt
or
cmp
int3
fwait
jp
add
mov
in
mov
jno
jmp
lods
pop
popa
enter
das
mov
jno
adc
rcll
ss
enter
pop
les
fsub
xchg
or
pop
scas
shll
es
adc
loop
jb
sbb
jmp
popf
ret
fld1
mov
jmp
mov
xchg
or
pop
cwtl
dec
lcall
inc
xchg
adc
jne
lahf
sti
negb
orl
ficoml
ss
jns
cs
push
xchg
inc
outsb
inc
jne
arpl
xchg
jo
fxch
jmp
rcrb
and
xlat
mov
in
add
cmpsb
pusha
mov
addr16
call
call
in
lret
jg
or
cmc
imul
mov
mov
insb
pop
lret
cld
mov
pushf
outsl
divl
outsb
fldl
std
mov
sub
jmp
into
je
test
shlb
lahf
das
adc
ja
cltd
and
push
jl
fistl
mov
mov
add
lods
sbb
mov
cmp
mov
inc
sbb
cmp
inc
movsb
leave
or
fstp
orb
stc
xchg
jo
jl
mov
arpl
pop
addr16
popa
push
dec
movsl
icebp
jb
xor
into
sti
cmpsb
mov
shrl
clc
xchg
adc
pop
dec
out
div
ja
popa
jle
push
mov
lret
arpl
cwtl
inc
out
dec
cltd
icebp
addr16
add
rep
lds
xchg
push
sti
dec
sub
lcall
cmp
xor
mulb
push
cmpsl
gs
iret
and
jbe
cwtl
outsb
xchg
jb
jo
sub
xor
xor
cwtl
lcall
xor
ds
cmpsl
scas
mov
and
bound
jp
into
mov
or
sbb
mul
lds
jo
lcall
mov
push
test
inc
inc
push
mov
ja
mov
xorb
push
xlat
push
push
daa
cmp
inc
xor
cmp
adc
sbb
pop
xchg
das
into
mulb
mov
out
mov
insl
jns
push
mov
fucom
mov
adc
jecxz
and
je
sbb
push
dec
add
push
sub
lds
adc
cmovl
in
gs
insb
cmpsb
stc
jno
sub
scas
in
dec
in
insl
add
pushf
add
imul
nop
mov
fwait
in
sti
mov
push
dec
or
stos
dec
lcall
cmp
adc
and
clc
in
xor
rolb
and
in
movsb
xlat
mulb
and
enter
bound
jg
or
test
pop
imul
leave
push
mov
xchg
lods
push
and
xchg
loop
and
arpl
ss
imul
fnstsw
ret
in
rorb
lock
outsb
dec
lds
jl
mov
addr16
incb
jecxz
dec
jnp
sub
lods
pushf
push
addr16
push
test
fisubrs
ret
sub
cs
dec
jo
callw
adc
xor
int
daa
lds
add
mov
icebp
and
add
fxch
stos
push
xor
jo
jnp
pop
sub
int3
sbb
xchg
mov
rcrl
stos
sbb
sub
call
pop
fcompl
shll
out
bnd
repnz
insl
cmpsb
out
movq
sub
repnz
addr16
xchg
mov
orl
cmp
subl
add
popa
xchg
frstor
cmp
insl
lods
and
cmpsl
add
inc
add
dec
aad
divl
jo
jl
jb
xchg
mov
pusha
rol
stos
sbb
pop
xor
aas
push
notb
push
fcoms
popa
xor
push
inc
mov
or
sub
dec
incl
mov
test
cmc
cli
data16
mov
push
movsl
ss
sub
js
aaa
lds
push
addb
jno
pop
rolb
cmp
sbb
call
jl
adc
or
push
popa
adc
xchg
inc
xor
jecxz
pop
mov
sti
out
mov
out
jecxz
leave
sub
subb
mov
sbbb
pop
mov
stos
ja
xchg
in
push
add
adc
jg
xchg
pop
mov
addr16
mov
pop
jb
cli
pop
outsb
and
sarb
and
cmp
sbb
mov
cmpsb
or
push
les
dec
shr
push
xor
mov
dec
aas
mov
dec
xchg
dec
dec
jmp
lock
lcall
cli
pop
push
inc
cmc
mov
dec
mov
fcmovnbe
or
push
pop
in
pop
mov
mov
mov
dec
cmp
or
into
mov
mov
mov
inc
mov
aam
jge
mov
sub
sahf
ss
push
lods
movsb
mov
and
xchg
scas
adc
js
outsl
pop
test
jmp
push
pop
xchg
movsb
cmp
cmp
mov
je
xor
pop
xor
xchg
xchg
iret
clc
in
std
lods
stos
mov
lea
jecxz
cmc
dec
dec
in
add
orb
cmp
or
lret
into
ja
out
or
mov
ficomps
outsl
cltd
xchg
xor
push
pop
mov
xor
repz
or
bound
sub
mov
sub
adc
ljmp
call
xlat
inc
xchg
jne
shlb
mov
scas
fdivs
pop
lret
pop
mov
dec
into
jl
push
pop
mov
je
cmp
fs
arpl
jae
jnp
pop
mov
test
dec
adc
data16
push
pushf
pusha
adcb
or
imulb
fistpl
fwait
mov
into
cmp
xor
gs
sahf
sbb
or
loope
jp
ret
sti
sti
out
out
orb
leave
xchg
jecxz
addr16
loop
fmull
test
jle
xor
push
and
scas
and
shrb
sbb
inc
popa
xor
rclb
shlb
jns
testl
aas
out
pop
fwait
insb
jo
fwait
add
xor
mov
into
mov
push
dec
jle
and
sub
jl
or
in
pop
nop
cli
dec
mov
jnp
call
rcr
roll
pop
inc
xor
jne
rcl
pop
push
inc
sbb
bound
xchg
loop
cmp
sub
pushf
aaa
sbb
pop
sbb
in
jmp
lods
pop
out
add
les
insb
dec
sbb
leave
adc
push
cmpsb
std
sbb
js
dec
xlat
out
sti
les
push
pop
pop
aam
lret
push
push
enter
pop
pop
mov
jg
add
add
cmp
xor
jbe
cli
outsl
pusha
dec
and
fists
imul
sub
mov
mov
filds
xor
sub
sarb
and
jl
xor
movsb
lret
mov
popa
call
jmp
xor
jns
jmp
push
icebp
test
xchg
insb
mov
jmp
mov
push
pop
fldt
jl
pushf
stos
fsub
arpl
xor
test
bound
leave
cs
push
mov
rcll
insl
push
mov
iret
rol
mov
jo
enter
sbb
jo
daa
sub
repz
fstpt
sbb
xchg
mov
loop
insl
or
or
jg
and
adc
outsb
imul
jno
xor
xchg
enter
int
pop
push
sbb
lds
fs
lods
jmp
cmc
test
push
pop
pop
lea
loop
pop
decl
and
push
scas
inc
mov
nop
outsl
cmpb
mov
aas
lock
adc
add
xor
and
push
scas
inc
mov
nop
outsl
cmpb
mov
aas
lock
adc
add
xor
and
push
scas
inc
mov
nop
outsl
cmpb
mov
aas
lock
adc
add
xor
and
push
scas
inc
mov
nop
outsl
adc
dec
mov
rorb
pop
loopne
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
