or
cmp
mov
cmp
add
or
cmp
xor
jg
push
ret
mov
adc
pop
int
cltd
into
int3
dec
shrb
repnz
xor
pop
popa
addb
sub
aam
push
add
imul
cmp
imul
and
push
adc
fildll
add
loopne
movsl
in
mov
lret
lret
cwtl
xchg
insb
pop
and
scas
loop
test
pop
hlt
leave
xor
jecxz
add
cwtl
movb
ror
dec
loope
dec
je
adc
mov
pushl
popl
or
mov
call
addw
mov
subl
and
orb
mov
mov
and
push
popl
and
sub
mov
push
popl
pushl
popl
and
sub
jmp
sub
addl
mov
and
subl
cmp
jne
pushl
popl
lea
mov
addl
mov
and
push
or
mov
popl
mov
cmp
je
andl
xor
ret
sub
push
xor
addb
and
mov
pushl
popl
and
mov
push
xor
mov
popl
mov
and
sbbl
mov
and
subw
lods
and
push
mov
add
popl
mov
mov
andw
pop
ret
push
popl
pushl
popl
push
mov
sub
add
push
popl
pushl
popl
push
andb
push
push
popl
push
xorl
push
push
popl
pushl
popl
push
mov
push
and
and
popl
mov
mov
add
push
popl
pushl
popl
pushl
pushl
popl
mov
add
pushl
popl
add
mov
movb
add
sub
xor
movb
lea
movw
mov
add
push
popl
pushl
popl
mov
xor
pushl
popl
rol
push
popl
pushl
popl
xor
inc
subl
cmpb
jne
orb
cmp
je
sbbl
inc
addw
cmp
jb
sub
mov
push
popl
add
movzwl
subl
mov
pushl
popl
add
mov
addw
add
pop
or
cmp
jbe
cmp
jae
push
popl
pushl
push
popl
pushl
sub
push
popl
pushl
popl
movl
addl
push
popl
pushl
popl
pushl
andw
call
call
push
popl
pop
pop
add
pop
pushl
popl
pop
pop
addw
leave
pushl
popl
ret
pop
pushl
popl
xor
call
pushl
popl
test
jne
ret
push
popl
push
addw
push
or
mov
pushl
popl
pusha
pushl
popl
call
add
mov
sub
andw
movl
addl
push
popl
pushl
popl
push
call
orw
cmpl
je
push
popl
cmpl
je
push
popl
pushl
popl
cmpl
jne
movb
call
popa
push
popl
pushl
popl
call
sub
orb
movl
addl
or
push
push
popl
pushl
popl
call
addl
push
push
add
lea
sub
sub
mov
add
xchg
xor
mov
pushl
popl
shl
push
or
add
popl
mov
push
xor
xor
push
andb
call
push
or
mov
push
subw
jmp
pop
push
popl
pushl
popl
mov
push
push
popl
push
movb
push
sub
mov
xor
mov
rep
push
popl
pushl
popl
pop
pop
push
add
add
mov
sub
xchg
push
xor
mov
xor
xchg
push
popl
xor
pushl
popl
jmp
andl
sub
subl
mov
sbbw
sub
sub
sbbb
mov
orb
sub
or
jne
push
popl
pushl
popl
add
orl
jmp
call
or
aas
leave
repnz
mov
in
cwtl
sub
insl
mov
sarl
pop
data16
popa
into
pop
clc
push
mov
sahf
xor
loope
xor
sarl
ss
sbb
push
sbb
jg
lcall
xchg
push
fs
js
nop
stc
test
push
mov
es
aaa
cmpsb
mov
pop
push
and
xor
jne
lea
mov
jae
lods
cltd
add
mov
mov
or
pusha
pop
jbe
add
push
push
addr16
mov
jo
out
add
mov
and
jge
and
xor
sti
mov
stos
lcall
push
rcrb
insb
clc
hlt
movsb
cmpsb
mov
sbb
push
push
mov
stc
lods
test
loopne
xor
pop
push
mov
mov
jns
fsts
dec
dec
aad
xor
testl
dec
push
rorb
mov
cld
pop
mov
in
int3
add
jmp
ds
cltd
sbb
lret
jge
add
and
jnp
xor
lahf
or
inc
pop
sbb
outsl
sub
sub
mov
les
call
in
pop
push
jae
and
push
pushl
jg
or
push
int3
sahf
cmp
testl
adc
dec
addr16
stos
mov
push
pop
mov
sub
adc
and
mov
cmp
add
pop
fsubp
mov
imul
inc
sub
and
jmp
in
jnp
sbb
gs
jno
sbb
cld
xor
dec
icebp
add
jecxz
movsl
shlb
lret
cs
fsubs
sub
jg
and
movsl
rcrb
add
push
jno
cmpsl
xchg
scas
repz
or
shll
aad
push
mov
mov
xchg
or
fxam
leave
leave
cmpsb
mov
in
fcompl
cmp
mov
or
lret
cmpsb
mov
add
sbb
push
pop
mov
test
rorb
sbb
cmp
xchg
and
mov
mov
inc
test
xchg
mov
mov
jb
xchg
stc
xorps
cmpb
push
mov
es
icebp
add
scas
sub
mov
pop
xor
jno
push
scas
and
xchg
push
lods
lcall
dec
sub
js
mov
fidivl
int3
scas
filds
jmp
stos
xchg
add
pop
xchg
or
pop
jmp
xor
shl
cmp
and
ja
into
or
dec
outsl
mov
fcos
out
mov
push
push
xorl
in
mov
pop
lcall
xor
add
test
imull
adc
out
inc
cs
add
fsts
jns
jo
insl
out
push
loopne
fwait
push
das
push
cli
add
jb
lret
push
push
nop
std
add
aad
pusha
mov
xor
outsb
ljmp
and
mov
insb
filds
pop
rcll
push
scas
adc
fcmovnu
adc
mov
cmpsb
loopne
pop
clc
sti
mov
sbb
cmp
push
orl
icebp
push
adc
test
pop
fisubrs
push
lods
xchg
js
clc
pop
add
inc
sub
add
push
xchg
cs
push
mov
jl
jbe
in
repz
push
ds
xchg
pop
clc
sti
pop
repz
cmp
aaa
lcall
adc
out
pop
ret
mov
decl
sbb
rcl
andb
out
jne
push
clc
sti
xor
cli
out
xchg
jge
or
push
jo
stos
add
dec
insb
popa
cwtl
jle
add
xchg
jnp
test
orb
cmpl
and
sti
gs
mov
pop
pushf
das
pop
lea
daa
jbe
or
mov
pop
pop
push
mov
mov
cli
pop
fistpl
jae
loope
xor
inc
push
mov
sti
cltd
or
mov
adc
push
mov
idivb
mov
jecxz
aad
xor
je
sub
dec
aaa
adc
sbb
dec
loop
int
daa
and
jnp
jns
lods
movsl
xor
pop
xchg
mov
idiv
xor
cmpsl
sbb
adc
pop
lea
enter
out
jecxz
sub
or
lahf
sub
mov
js
and
ret
push
mov
inc
data16
loopne
xor
cltd
push
movl
lcall
jne
dec
xchg
ljmp
jl
dec
xchg
sub
sub
and
mov
jns
sahf
in
sbb
mov
pop
xchg
outsb
mov
dec
mov
or
add
jecxz
pop
pushf
test
sub
sub
stos
dec
add
outsb
and
sti
and
jne
movsl
xchg
lahf
add
mov
outsb
xor
mov
ret
push
lods
loopne
mov
jmp
xchg
push
ja
fstpl
adc
lahf
mov
push
scas
dec
mov
ss
adc
loopne
bound
insb
test
lods
xchg
test
jg
or
push
mov
std
dec
imul
push
or
into
mov
or
popa
jg
pushf
sub
lea
push
nop
mov
ljmp
mov
xchg
mov
jge
imul
dec
outsb
fwait
subb
mov
test
mov
lret
jp
pop
add
cltd
sub
or
push
es
out
cmp
test
xchg
out
cmpsb
notb
push
aas
push
jbe
std
clc
sti
xor
stc
dec
adc
cmp
adc
and
scas
dec
flds
stos
mov
xchg
js
pop
inc
jnp,pn
test
xchg
loop
pop
jmp
adc
pop
jmp
and
jl
pop
test
out
std
int3
sub
int
inc
push
ljmp
test
gs
push
jo
test
std
jge
mov
sbb
jmp
dec
push
pop
mov
mov
mov
mov
xchg
out
and
jge
cli
mov
in
incl
cld
xor
xchg
add
add
jae
add
sti
lcall
pop
push
ficoml
mov
std
hlt
nop
inc
cmpsl
and
add
leave
in
mov
call
xchg
je
and
pushf
mov
lea
dec
jge
dec
push
into
cld
sti
xor
out
sub
mov
lcall
mov
push
mov
pop
xorl
add
xlat
hlt
push
leave
in
mov
pushl
outsb
andb
cmp
cli
mov
ss
test
addr16
stc
imul
sahf
xchg
mov
addr16
inc
out
jns
push
enter
imul
test
pop
adc
mov
loope
fidivl
fdivrs
dec
clc
add
es
arpl
and
mov
test
mov
loope
cmc
xchg
lock
jecxz
xor
fistps
inc
bound
aad
ss
je
js
push
fildll
cmp
pop
std
mov
dec
imul
ret
jno
mov
pop
xchg
sbb
mov
add
mov
movsl
pusha
pusha
std
data16
mov
adc
sti
xor
adc
loopne
lock
jg
rolb
pop
clc
sti
or
out
aad
add
push
push
mov
leave
pop
mov
sub
xchg
lret
mov
push
fcoml
insl
rcl
pop
dec
jge
shrl
mov
incl
cld
xor
jno
fistl
xor
add
insl
add
mov
lods
cmp
mul
xchg
add
dec
jge
in
fwait
xchg
repz
sti
sti
xor
ljmp
xchg
mov
lret
cmpsb
inc
inc
mov
or
out
sbb
roll
js
mov
lock
test
xor
cmp
ficomps
xor
pop
lea
xchg
jp
mov
fisubrs
sub
lea
xchg
push
pop
adc
ljmp
pop
mov
jnp
aaa
lahf
daa
inc
mov
push
cld
or
jge
mov
pop
lea
xchg
lahf
sub
cli
mov
and
sarl
xor
push
inc
mov
in
or
into
outsl
das
jne
pop
push
add
daa
push
mov
push
fs
ljmp
aaa
lahf
push
loopne
movsl
roll
xor
sub
xchg
es
push
sub
mov
add
adcl
lea
cmp
or
aad
mov
sbb
lods
jl
jg
test
jl
dec
movb
daa
and
insb
fstpt
fwait
xor
mov
pop
xchg
add
clc
sti
mov
ss
pop
addb
shrb
test
loopne
sti
pop
xchg
pop
call
xchg
ds
in
pop
or
xchg
adc
mov
sub
stos
jge
dec
mov
add
mov
xor
jp
std
outsb
fadds
dec
mov
mov
xor
test
out
sbb
sbb
cld
push
fdivs
xchg
cwtl
mov
js
lahf
xor
ljmp
icebp
pop
add
fs
xlat
outsl
or
sub
push
out
jp
sbb
inc
mov
add
push
push
mov
cmpsl
lcall
ljmp
and
mov
inc
js
fistps
push
mov
js
mov
cmpsl
pop
xor
mov
mov
dec
xlat
sub
sub
das
fiaddl
sub
jmp
call
xchg
adc
sti
xor
mov
xchg
sbb
outsb
cs
rcl
inc
movsl
mov
les
outsb
es
mov
insl
push
sub
pop
inc
lock
add
push
aas
stc
push
mov
shl
jmp
xor
mov
ljmp
outsb
pop
pop
call
adc
and
addl
push
jge
sub
mov
cld
sti
xor
out
fidivrs
out
mov
fistl
add
leave
in
mov
or
cwtl
loope
jo
lock
cs
lea
push
jmp
or
add
mov
xor
nop
lahf
daa
lcall
mov
stc
mov
jge
push
xor
mov
es
mov
daa
jno
je
xchg
lcall
adc
mov
add
sub
jne
outsb
movsl
push
add
sarb
xchg
ja
xchg
aam
test
push
push
jae
out
pushf
nop
iret
shlb
inc
nop
fimull
mov
stc
jecxz
mov
pop
fadds
out
adc
and
outsb
aaa
in
and
or
cwtl
mov
jg
jmp
je
adc
push
sub
inc
insb
push
mov
mov
cmp
mov
sub
xchg
lahf
add
jne
jae
or
pushf
fcoms
pop
jnp
aaa
add
xlat
push
lock
aam
mov
idivl
dec
and
mov
xor
fdivrs
push
mov
ljmp
cmpsl
adc
bound
pop
cmp
icebp
add
jb
ja
fmuls
sbb
pusha
sub
cltd
mov
pop
lock
jbe
repz
push
push
push
mov
mov
pop
and
ljmp
clc
sbb
fs
nop
pop
ss
jg
aam
les
int
ss
inc
inc
sahf
sti
dec
outsb
fisubrl
sub
cmp
or
sbb
xchg
push
push
data16
adcl
js
jb
push
mov
pop
adc
clc
hlt
jns
push
push
ret
mov
inc
ljmp
jb
punpckldq
scas
push
lea
clc
rcll
or
fiaddl
and
call
xchg
mov
mov
push
xor
mov
mov
in
xchg
mov
idiv
sub
inc
bswap
stc
das
push
adc
movsl
fs
xchg
pop
clc
sti
or
push
rcrb
adc
aas
lcall
negl
bound
sbb
dec
das
push
sub
add
mov
aad
outsb
dec
inc
icebp
and
and
loop
adc
dec
scas
scas
push
lods
xchg
movsl
push
xor
dec
das
add
inc
mov
test
xchg
fbld
fcoml
ss
aaa
ljmp
pop
and
sti
sbb
aas
js
push
out
pop
orl
mov
pop
lds
outsb
dec
push
repnz
mov
mov
scas
lods
mov
jle
dec
mov
mov
push
xlat
lahf
aad
int
sub
mov
and
or
mov
insb
hlt
or
mov
jae
ret
jae
hlt
xor
jb
mov
pop
xchg
test
daa
cmp
fdivrp
xor
mov
dec
xlat
das
sub
loop
mov
mov
lds
lahf
inc
cmc
xor
ficoml
fistl
pop
mov
xchg
outsl
les
jno
stos
mov
dec
ja
test
xor
xchg
dec
pop
incl
cld
xor
and
nop
or
jg
mov
push
ljmp
orl
jae
in
mov
mov
out
lret
mov
cmp
push
adc
xor
mov
mov
not
cmp
sti
xor
sti
or
push
outsl
fwait
loop
jg
mov
and
imul
and
jl
xchg
std
leave
lret
out
add
into
cmc
or
cmp
mov
sub
les
sub
addr16
fs
sub
jmp
inc
out
adc
and
loope
jg
mov
sbb
push
jae
divl
ret
mov
and
or
cmpsb
push
or
gs
pop
lods
pusha
adc
es
inc
lahf
rcll
xchg
push
nop
fistpl
insb
push
push
cmpsb
cmp
xchg
loopne
cmpsb
xchg
test
push
mov
das
mov
test
cmc
testl
sti
xor
js
push
out
enter
xlat
sti
out
outsl
lahf
rorb
sub
or
inc
pusha
sub
aas
pop
and
add
jb
xor
push
bound
stc
out
mov
adc
jb
out
fimuls
inc
nop
adc
mov
cmp
fistpll
scas
icebp
pop
std
mov
mov
push
push
fwait
mov
pop
lea
outsb
clc
sbb
sub
lea
jge
mov
pop
lea
xor
sub
add
xor
sbb
icebp
xchg
push
int
aas
nop
pop
push
shll
je
outsl
test
pushf
mov
pushf
inc
cli
fldt
pop
ror
out
loopne
dec
mov
mov
mov
daa
pop
lea
jge
insb
adc
ja
add
xor
pusha
mov
sbb
jg
mov
cs
sti
mov
jle
cmp
xor
int
daa
and
pop
repnz
shrl
sbb
nop
mov
adc
xchg
in
inc
cmp
and
mov
or
sub
and
bound
lods
movsl
mov
pop
nop
jne
and
sbb
bound
lock
test
xchg
mov
in
mov
outsl
test
daa
push
adc
or
mov
pop
loope
mov
fadds
mov
xchg
rcll
pop
push
jno
and
mov
push
push
mov
cmp
add
push
push
mov
sub
inc
mov
ljmp
call
pop
cmpsl
lcall
aad
call
test
pop
test
xchg
call
mov
mov
daa
jne
or
xor
jnp
mov
out
lock
hlt
mov
jmp
xor
dec
jp
mov
sub
roll
cltd
sbb
lret
loop
imul
cwtl
cmc
mov
xchg
pop
clc
sti
fsubr
adc
movsl
repz
pop
adc
cli
out
scas
int3
mov
in
sti
sbb
and
or
mov
pop
or
or
fistps
mov
xor
cs
adc
in
add
and
push
test
cli
mov
xchg
mov
in
outsb
loopne
aas
mov
jno
stc
clc
sti
xor
call
and
das
add
popf
bound
sub
lahf
insb
lahf
inc
xchg
or
dec
lahf
add
ds
add
mov
xor
sbb
movsb
in
jno
xchg
jl
mov
test
pushf
das
pop
lea
mov
mov
sub
add
pop
push
mov
cmp
lcall
je
sti
inc
cmp
mov
mov
add
mov
or
loop
pop
push
jno
in
and
xor
test
xchg
mov
lret
pop
push
jno
dec
sbb
jae
cltd
loopne
sbbl
imul
imul
cmpb
mov
add
es
int
lret
cs
dec
dec
cmc
push
push
jns
jo
push
xlat
mov
push
xchg
push
nop
ficoms
sub
cwtl
popf
mov
inc
pop
cli
push
stos
sbb
jb
data16
push
out
dec
xchg
add
cmc
int
daa
and
outsb
in
jns
sbb
adc
aas
imul
fs
mov
in
cmpsb
call
adc
push
adc
daa
push
mov
push
push
stos
testl
sub
mov
push
imull
test
jmp
mov
ficomps
jbe
sub
push
icebp
push
lods
cwtl
movsl
push
jno
int3
clc
stos
sub
or
jle
mov
or
out
lahf
xlat
lret
sub
cwtl
divb
xchg
pop
clc
sti
inc
shrl
imul
adc
xor
test
test
sbb
jne
add
pop
jns
inc
dec
xlat
cmpsb
mov
sbb
mov
and
aas
adc
xor
mov
xor
sbb
sbb
dec
or
mov
mov
jbe
push
mov
adc
push
dec
pop
push
jp
insb
jbe
js
test
sbb
sbb
and
outsb
jle
imul
jo
mov
sbb
or
xchg
jae
lods
pop
out
mov
stos
in
nop
pop
mov
xchg
mov
or
lea
clc
jo
lahf
push
iret
mov
push
sub
lods
andb
xchg
jg
cmp
sbb
ss
lods
or
lods
cltd
or
mov
nop
bound
sub
jae
pop
jp
lds
cltd
mov
pop
notl
adc
adc
pop
add
repz
test
dec
test
jmp
or
jle
mov
fdivs
sti
mov
jns
dec
jge
mov
pop
lea
clc
mov
movsb
mov
iret
lods
and
or
adc
adc
ds
icebp
push
push
lods
lds
jo
stos
mov
test
or
push
sbb
push
cmp
gs
dec
orl
mov
cs
cmp
enter
dec
pop
nop
popl
sbb
fs
gs
imul
lahf
add
es
push
das
insb
filds
xchg
es
cmp
xor
jbe
dec
push
sti
test
or
cli
add
out
adc
ja
jb
leave
cmc
cmpsb
mov
adc
arpl
and
aaa
adc
push
xor
mov
repz
scas
cmp
mov
stc
pop
push
jno
dec
lods
jp
and
push
js
stc
leave
cmpsb
mov
jmp
outsb
mov
push
xor
ss
rolb
xorb
and
mov
and
lahf
aad
outsb
enter
je
sbb
es
xor
je
push
inc
shl
cmp
test
jno
cmpsl
sahf
push
test
repnz
fld
scas
add
std
flds
or
mov
pop
and
add
lock
xor
sbb
scas
cltd
sbb
jle
testb
and
mov
stos
cmp
outsb
and
hlt
jbe
mov
stos
mov
inc
out
addl
out
rorb
test
xor
or
aaa
mov
pop
lcall
mov
lahf
cmpsb
les
push
mov
lea
jne
cmpl
pop
and
cmovle
mov
cmp
add
xor
xchg
sub
xor
sub
xor
cmp
adc
add
mov
jecxz
pop
clc
jnp
cmp
lea
sti
aad
add
in
fdivrs
shll
inc
lods
mov
lods
lds
xchg
dec
inc
cltd
test
xchg
jg
pop
adc
xchg
jne
jb
mov
imul
sub
fwait
hlt
scas
push
aas
xchg
js
pop
je
repz
push
aas
enter
xchg
pusha
sub
jmp
test
cli
cmpsb
adc
cld
sbb
adc
es
mull
aas
clc
cltd
jae
pop
pop
ljmp
push
mov
popa
mov
cmp
add
mov
aaa
push
xchg
addr16
adc
daa
loop
or
mov
add
sar
xchg
aam
ficomps
sub
mov
push
mov
lods
stos
cwtl
cld
pop
inc
out
and
imul
add
stc
xorps
sbbb
daa
loopne
pop
mov
push
pop
jb
and
mov
pop
pop
sub
adc
js
mov
loope
pop
out
jae,pn
dec
jno
xchg
xlat
ds
imul
pop
test
punpckhdq
aas
push
xor
pop
clc
push
mov
es
lea
insl
daa
push
fisttpl
shll
or
xor
push
test
arpl
adc
enter
clc
add
sub
sbb
sub
inc
nop
add
hlt
mov
inc
inc
movsb
inc
jge
sti
xor
sti
test
loopne
inc
call
lock
push
stc
mov
mov
jno
das
repz
js
mov
jb
notb
and
out
inc
mov
imul
sub
lea
clc
inc
cmp
and
mov
pop
lea
repz
dec
out
jno
cs
pop
mov
xchg
sarl
push
ficoml
xlat
mov
fbstp
das
mov
iret
push
mov
or
stc
dec
xchg
repz
clc
sti
xor
xchg
adc
cs
inc
sti
mov
mov
divb
cli
xchg
or
int
daa
and
mov
sbb
mov
mov
pop
xchg
aas
mov
je
adc
loopne
xor
mov
add
adc
mov
pop
je
dec
js
push
mov
callw
mov
and
jb
pop
jo
imul
lods
mov
push
xchg
into
sub
dec
mov
add
mov
xor
sub
jl
add
jne
mov
int
daa
and
mov
shrl
sbb
xchg
out
jp
cwtl
xor
pop
pop
scas
ja
add
dec
sub
mov
ljmp
dec
and
dec
dec
push
mov
int3
xor
in
int3
mov
adc
mov
mov
inc
cmp
movsb
es
loope
js
sti
sbb
or
or
add
mov
mov
ljmp
push
adc
add
aaa
data16
lcall
imul
imul
cmp
stc
xorps
subb
bound
mov
jecxz
mov
pop
pop
sub
dec
add
adc
ljmp
or
mov
jge
push
adc
add
loopne
in
pop
call
adc
fnsave
xchg
out
dec
sti
xor
push
or
xchg
mov
jb
lret
fwait
imul
in
cmp
push
sahf
lock
andb
loopne
jo
addr16
and
mov
psllq
xchg
pop
clc
sti
leave
ljmp
pop
sbb
mov
pop
pop
add
xor
in
sarb
in
testb
push
inc
xchg
xlat
js
push
out
xchg
jp
arpl
adc
sub
subl
or
daa
push
lret
mov
or
cwtl
int
call
cmp
mov
and
mov
push
inc
mov
cld
sub
test
daa
lods
std
sub
sbb
mov
jno
scas
pop
sub
test
fwait
jmp
je
xor
inc
push
inc
mov
push
or
push
mov
sub
shrl
jecxz
test
xchg
mov
ficompl
mov
ja
push
xor
andb
popf
in
pop
lea
push
dec
test
sub
imul
popf
and
loop
xor
jo
pop
cld
add
leave
mov
xchg
push
mov
and
shlb
xor
imul
scas
sub
sahf
sub
xor
cmc
nop
outsb
inc
sub
jno
cmpsl
mov
and
mov
repnz
mov
push
fiaddl
dec
xchg
add
pop
push
sbb
rorl
jae
or
push
mov
stc
shlb
sbb
mov
xchg
cmp
sti
mov
sub
push
sub
outsb
push
sub
iret
popa
xor
lahf
rorl
cmpsl
push
add
mov
jmp
and
pop
jns
rol
push
sbb
gs
outsl
frstor
in
mov
fdivrs
mov
push
or
pop
sarb
and
xchg
clc
add
pop
sub
sub
cltd
mov
mov
mov
scas
adc
jnp
xor
push
or
adc
les
pop
sub
jb
cmp
mov
cmp
adc
lock
mov
mov
mov
das
pop
or
iret
mov
sub
divl
mov
sub
mov
add
mov
dec
inc
add
push
push
mov
mov
test
mov
or
sti
push
lock
cmc
push
xchg
pop
clc
sti
sbbb
int3
jno
test
icebp
xor
clc
push
mov
pop
clc
sti
xor
push
or
mov
pop
jg
cltd
das
xor
jmp
sub
xchg
mov
ret
jecxz
pop
add
jne
test
adc
test
jge
dec
jle
cmp
mov
lcall
dec
pop
lea
dec
or
pop
pop
dec
mov
sti
fdivrs
mov
stos
js
push
out
int
adc
mov
adc
mov
cli
dec
sbb
dec
mov
lret
testb
adc
int3
out
jp
fdivrs
mov
xchg
cltd
push
outsb
add
or
inc
xchg
call
cmc
cmpsb
push
out
sbb
daa
pop
mov
push
sti
add
das
lea
fdivl
mov
pop
add
adc
inc
sub
cmpsl
pop
lcall
and
out
rol
aas
call
jno
les
lret
fisubrl
aaa
in
fldcw
std
mov
stos
jns
dec
mov
dec
testl
sub
add
fdivrs
jne
sbb
xor
push
or
gs
xchg
jecxz
and
mov
mov
in
add
call
inc
xchg
sub
mov
jno
xchg
add
shlb
or
sub
inc
in
xchg
push
les
in
lcall
lret
sbb
jge
fdivrs
push
mov
scas
xor
add
mov
and
mov
push
xchg
lahf
daa
or
fdivrp
out
rolb
mov
fwait
test
dec
cmp
sti
xor
ss
add
divl
add
sbb
mov
pop
lea
push
mov
jle
xor
add
insb
jo
inc
test
jle
pop
outsb
dec
mov
add
mov
push
add
std
outsb
fadds
xchg
mov
cmp
or
pushf
adc
push
out
cmc
repz
lcall
daa
js
mov
push
jae
dec
push
mov
es
adc
sbb
or
mov
mov
insb
fcomps
mov
movsl
lahf
lahf
or
jo
rclb
aas
loop
sti
jb
jmp
or
lcall
xor
fcomi
push
mov
rorl
sbb
or
ror
and
sbb
lea
mov
xchg
sbb
test
clc
jo
lahf
push
stos
pop
inc
mov
push
pop
mov
jbe
call
popa
ret
mov
xchg
in
mov
addl
sub
and
stos
push
xchg
jecxz
pusha
dec
mov
mov
or
jge
test
xchg
add
xor
dec
push
into
jg
xchg
loop
idivl
rclb
lcall
jo
sbb
add
cmp
pop
mov
cmp
or
mov
pop
outsl
cmc
jle
mov
inc
jmp
loopne
cs
jo
xlat
insl
enter
loopne
aad
leave
test
in
movsb
xchg
adc
pop
add
loopne
mov
cwtl
outsb
mov
scas
std
hlt
inc
out
das
in
sub
push
scas
cmpb
lcall
jg
mov
sbb
pop
jge
gs
pop
sbb
lea
mov
mov
clc
dec
mov
lock
mov
and
pop
push
ret
nop
push
adc
mov
neg
mov
clc
sti
cwtl
jnp
outsl
shrb
mov
jno
loopne
adc
sub
stos
call
js
loopne
jge
addr16
cld
xor
add
lahf
ss
sbb
fdivrs
test
fwait
push
mov
js
pop
clc
push
mov
pop
clc
sti
xor
inc
or
das
fs
mov
rol
and
push
rcrl
fcmovnbe
add
je
jo
and
push
shrb
jecxz
inc
sub
dec
shrb
or
sbb
icebp
nop
or
fs
out
dec
push
mov
push
sbb
loopne
xor
mov
sbb
inc
fbld
add
mov
xchg
repnz
add
dec
out
jno
psubusb
aam
and
lret
jg
xchg
xor
lahf
push
mov
jecxz
mov
mov
sti
adc
popf
cwtl
cld
xor
or
xchg
repnz
ret
imul
outsl
sub
mov
inc
add
mov
sahf
or
pop
clc
inc
mulb
push
jb
cmpsl
cltd
rcrb
lcall
mov
push
add
fwait
xor
in
popf
xor
in
jns
pop
pop
popa
dec
dec
jge
add
insb
cmp
je
mov
nop
fcmovb
cmpsl
add
leave
inc
jno
cmpsl
cltd
je
xor
popf
inc
cmp
xchg
addl
in
ret
jg
mov
loope
cltd
sahf
sti
xor
idivb
jne
push
and
sbb
adc
jmp
ljmp
dec
in
jecxz
lcall
inc
fimuls
jle
outsb
jns
push
out
push
jne
clc
sti
xor
add
jmp
jnp
xor
sub
mul
xchg
jge
mov
mov
pop
or
sbb
cs
add
pop
mov
sub
xchg
push
pushf
xor
dec
xchg
or
mov
out
test
adc
pop
mov
mov
push
mov
es
lea
insl
and
jmp
lods
mov
push
jb
pop
data16
push
inc
xchg
jno
cmp
push
mov
lock
movsl
sub
iret
sbb
sbb
nop
or
rol
cmp
or
movsb
out
or
mov
and
jno
sbb
xor
jmp
adc
mov
cwtl
stos
ss
mov
es
jb
mov
or
fs
xchg
inc
aas
or
test
loopne
jge
sbb
sti
sti
xor
add
and
movsl
pop
mov
daa
or
dec
and
sti
xchg
cmpsl
sbb
xor
lret
sbb
pop
outsl
and
xor
add
xchg
lock
test
xchg
add
xchg
dec
leave
xchg
rcrl
push
fistps
mov
mov
std
daa
and
jg
out
mov
mov
sbb
lea
jnp
dec
sub
int
daa
and
pop
std
jns
pop
xchg
mov
pop
nop
or
sti
test
clc
jo
lahf
push
call
xchg
adcl
xchg
xor
lds
das
add
or
fisubrs
inc
sub
popa
mull
sub
aas
mov
cwtl
push
xor
cltd
inc
les
pop
subl
jecxz
repnz
pushf
int
pop
xchg
pop
clc
sti
sbb
dec
divb
mov
mov
out
jae
std
xor
mov
pop
clc
xchg
insb
aaa
pushf
pushf
in
sti
xor
hlt
int
daa
and
test
jns
push
sbb
pop
xchg
aas
imul
cwtl
xor
mov
or
sub
test
out
xor
xchg
mov
xor
mov
nop
loopne
lods
js
movb
cltd
add
fidivrl
stos
push
xchg
fdivrl
ret
cmp
mov
in
cwtl
call
in
push
push
std
xchg
loope
cwtl
daa
push
mov
push
pop
xchg
pop
jns
ds
cmpsb
mov
loop
cwtl
fisttpl
mov
push
push
cld
jbe
pop
in
mov
call
fdivrs
inc
or
stc
aaa
push
adc
addl
add
or
shrl
dec
xor
jns
enter
jne
clc
sti
xor
jns
mov
out
or
xchg
lods
js
int
dec
sbb
and
clc
xorl
in
mov
pop
add
push
jnp
mov
xor
cmc
jnp
pop
jns
mov
and
sub
adc
jbe
decl
push
xor
int3
sub
and
insl
xchg
jns
pop
scas
jb
mov
sbb
mov
adc
sbb
jo
int
and
add
cltd
sbb
movsb
repz
push
mov
and
sub
cs
pop
clc
dec
pop
jge
inc
js
dec
aad
or
imul
and
outsl
push
iret
arpl
sbb
xchg
lods
nop
fisttpll
and
push
or
mov
pop
mov
adc
fs
dec
xor
in
fldcw
inc
lods
int
push
jb
sti
xor
std
sti
jecxz
into
test
sub
inc
das
xor
pop
jb
cs
icebp
pop
add
pusha
sahf
dec
and
mov
negl
and
mov
lods
inc
and
imul
arpl
xor
jnp
lods
cltd
arpl
dec
loope
push
sub
lea
pop
mov
fimull
aas
cmp
nop
aas
jnp
loop
mov
fwait
test
xchg
mov
cmc
stos
mov
push
loope
loop
daa
push
adc
sti
push
ret
test
jle
les
lea
clc
cmp
inc
pop
lea
jnp
xor
xor
cli
cmpsb
mov
in
cwtl
imulb
push
inc
in
sarl
pop
sub
pop
lea
and
jle
les
jmp
les
fdivl
sub
mov
jecxz
push
dec
mov
pop
les
push
lret
mov
add
icebp
pop
xchg
mov
jne
shrl
jecxz
mov
cmpsb
mov
and
insl
ret
and
lods
cmp
popf
sbb
mov
mov
cld
mov
pop
adc
or
mov
push
mov
inc
testl
xchg
xor
clc
cld
dec
fadds
sti
xor
jnp
dec
ret
stos
lea
clc
mov
mov
pop
fstpl
add
xchg
pop
clc
sti
xchg
sbb
data16
add
push
push
mov
jnp
cmp
mov
xchg
insb
cmp
hlt
lods
lahf
mov
in
mov
inc
in
jnp
xor
pop
clc
dec
test
pop
pop
loope
clc
hlt
jle
mov
mov
cmp
jno
xor
sti
mov
sub
adc
clc
sti
xor
pop
lea
dec
dec
in
jecxz
lock
mov
mov
dec
xor
divb
dec
jns
lcall
add
inc
lahf
ret
outsb
lea
sub
stos
in
fsub
inc
lock
mov
sbb
mov
pop
outsb
imull
pop
js
lahf
xor
std
sub
sub
packssdw
cltd
stos
cmpsl
dec
adc
outsl
ficomps
adc
pop
pushf
adc
shl
adc
push
out
push
cmp
push
adc
and
popl
or
lahf
jo
adc
mov
mov
lds
jmp
and
xlat
pmulhuw
mov
pop
push
or
mov
mov
cmp
add
sti
test
jl
mov
mov
and
test
ret
jge
lods
ret
xchg
lahf
sub
cmp
lret
jmp
add
notl
or
add
jecxz
jmp
test
mov
jbe
repz
fcoml
lret
inc
insb
and
aam
movsl
sbb
fdivl
push
icebp
enter
sbb
outsb
mov
jmp
add
mov
mov
test
notl
in
inc
mov
in
xchg
jge
or
mov
xchg
daa
js
and
xchg
xlat
nop
loop
mov
add
insb
lea
lret
ss
icebp
lea
and
cld
jbe
pop
jecxz
out
jno
lahf
push
adc
out
xchg
je
sbb
push
cmpsb
sbb
mov
mov
xchg
or
jne
decl
jb
stc
mov
cltd
jae
adc
scas
sub
sbb
loop
adc
lods
xchg
mov
je
adc
jns
dec
jge
pop
imul
mov
aaa
xor
movb
in
aaa
jmp
js
fimull
insl
dec
das
repz
jae
in
mov
sub
fcomp
stos
mov
xchg
loopne
aaa
push
adc
cmpsb
xchg
adc
mov
out
inc
dec
dec
mov
in
xchg
dec
xchg
push
push
cmpsl
into
rcl
lret
mov
dec
xchg
sub
insb
add
jo
sub
cs
cmp
test
xchg
xchg
jno
jo
push
and
mov
pop
pop
or
lahf
ss
sbb
test
sbb
std
mov
js
add
or
push
adc
mov
or
fistpll
lahf
xor
leave
jo
jmp
js
xchg
loop
icebp
push
sub
jns
xchg
pop
clc
sti
pop
sub
dec
mov
mov
mov
mov
sub
nop
ret
sbb
js
int
add
cltd
sbb
jmp
adc
sbb
mov
clc
jle
mov
xor
sbb
sbb
dec
decl
cmp
sbb
test
add
sbb
scas
out
push
outsb
outsl
jns
push
enter
loopnew
dec
mov
jb
cli
clc
sti
xor
and
repz
push
decl
gs
lahf
cmp
stc
lods
push
lods
popf
fsts
hlt
nop
or
mov
jmp
pop
gs
xchg
cmpxchg
sbb
sbb
xor
sti
xor
or
lahf
sub
cmc
mov
neg
lea
clc
test
outsb
mov
rolb
out
lds
stc
aaa
push
adc
cld
xor
mov
cmp
in
bound
mov
stos
je
pop
sbb
movsl
adc
push
xchg
pop
sahf
xor
cld
cld
push
or
lahf
sahf
iret
mov
enter
pusha
cld
inc
mov
jo
loopne
mov
cmp
mov
loopne
scas
lods
lret
clc
movsb
jge
push
push
pop
divb
iret
lea
or
sbb
jb
or
mov
je
xor
jo
clc
clc
sti
xor
fidivrl
xchg
cld
stos
lcall
cmp
icebp
scas
cmp
xchg
loop
mov
sbb
arpl
aaa
adc
adc
mov
dec
adc
adc
jns
scas
cli
push
in
cltd
and
ret
js
xchg
xchg
cmpsb
mov
jmp
jecxz
leave
and
out
jp
popf
cltd
lock
xor
clc
sti
mov
adc
daa
lea
clc
xchg
mov
out
cmpsl
pop
fcmovnu
cmpsl
mov
or
out
and
call
mov
dec
jg
mov
push
mov
mov
jbe
jnp
lods
adc
aam
int3
jns
sbb
push
jne
xlat
in
aas
out
in
mov
sbbl
dec
mov
pop
in
in
movsb
cld
pop
jge
dec
push
xor
pop
int
daa
and
test
out
ret
dec
rorb
xchg
aaa
ljmp
sub
or
out
xchg
rclb
add
std
add
adc
jbe
jp
in
mov
insb
call
pop
ds
addr16
pop
jno
push
jp
jne
dec
test
mov
adc
mov
loope
mov
inc
out
mov
dec
dec
mov
out
or
in
cmp
mov
insb
stos
lahf
inc
das
notb
ror
mov
jne
mov
pop
mov
add
mov
pop
std
pop
stos
and
dec
xchg
mov
adc
push
jge
xlat
jnp
cld
sti
xor
out
adc
cld
in
mov
push
fwait
sub
cwtl
icebp
ds
pop
clc
sti
sbbl
inc
shll
and
xchg
add
xchg
jle
lods
dec
out
in
aam
pop
lea
lds
and
das
cld
sub
and
xor
repnz
lret
or
inc
dec
mov
inc
xchg
rcrb
ss
jnp
xor
lret
movsb
dec
jo
xchg
jne
and
mov
adc
mov
ret
insb
push
lahf
stc
xorps
subb
mov
add
sub
mov
orl
push
xchg
fcoms
sub
push
inc
add
xor
xor
or
adc
adc
adcl
call
push
mov
mov
mov
sbb
xor
dec
fadds
das
fistps
push
adc
decb
int
xlat
fdivrp
js
push
out
xor
dec
adc
std
out
ds
lea
adc
or
test
and
stc
aaa
push
adc
idivb
push
cli
jne
cs
jne
clc
sti
xor
adc
add
pop
dec
repz
sbb
cmp
fisttps
icebp
sub
rcl
jno
adc
jns
out
or
into
mov
xchg
lods
add
push
push
mov
pop
jg
mov
fistl
scas
push
out
cwtl
hlt
mov
clc
sti
stos
fwait
dec
push
into
jnp
dec
adc
es
cli
scas
jno
test
add
movsl
test
dec
mov
sti
sbb
cmpsl
loopne
popf
rcrb
jecxz
jae
in
outsl
das
jne
add
fdivrl
dec
mov
push
push
jge
stos
sahf
mov
clc
xchg
push
cmpsl
add
rclb
inc
fdivrl
cmpsb
cmp
mov
push
loopne
repz
rcll
pop
mov
jno
cmpsl
lcall
inc
jo
stos
mov
sub
adc
ja
or
dec
mov
add
mov
push
enter
outsb
fadds
xchg
jns
loopne
lret
mov
adc
cwtl
jmp
fnstenv
and
mov
int
daa
and
outsl
jecxz
into
addr16
das
inc
mov
sbb
lea
jl
jecxz
sbb
cltd
sbb
icebp
jge
mov
lods
mov
sub
xchg
adc
ljmp
dec
and
shrl
jne
cmc
test
push
sarb
mulb
sub
mov
mov
pop
pushf
xor
lea
jecxz
cmp
jnp
jb
in
scas
and
mov
mov
js
pop
clc
sti
xor
jl
xor
out
xchg
jge
shrb
lahf
sbb
mov
test
dec
test
lahf
pop
add
lods
mov
jbe
mov
inc
out
xorl
and
add
dec
jge
mov
mov
mov
or
add
cmp
or
pop
mov
jmp
outsb
adc
sub
push
add
dec
sub
mov
cmpsl
fnclex
and
mov
dec
or
xor
xchg
xor
xor
mov
lcall
int
push
daa
insb
out
aam
stos
dec
xchg
in
adc
mov
sbb
in
scas
and
clc
mov
in
jns
mov
out
or
daa
push
mov
push
test
rcl
fwait
add
cltd
sbb
das
jge
jle
loopne
sbb
mov
jge
xor
insl
push
push
fstpl
or
fwait
mov
xor
lods
call
out
jb
rep
ret
andb
cltd
jo
es
sub
dec
cmc
ret
push
or
pop
negl
enter
push
dec
mov
sub
lods
loopne
xor
enter
or
lahf
sub
mov
jnp
dec
into
loop
adc
and
cmpb
call
nop
adc
jno
shrl
add
cltd
sbb
mov
andl
call
call
loopne
leave
shll
cwtl
lds
cmpsb
push
and
or
outsb
pop
insl
xor
out
ja
and
mov
cmp
fbld
jno
push
or
jl
sar
imul
adcl
mov
das
add
jmp
adc
leave
push
lret
mov
loopne
cmp
ljmp
stc
fsubrs
mov
push
xchg
scas
cmc
int
daa
and
push
icebp
out
mov
mov
sbb
lea
fwait
sub
xor
imul
mov
pop
mov
popa
dec
dec
lahf
cmp
js
jg
in
push
test
scas
xor
jno
mov
jg
dec
and
xchg
push
pop
mov
out
jbe
test
sub
test
mov
cmp
notb
dec
xchg
mull
mov
clc
sbbl
ja
lea
xor
stos
mov
mov
leave
rcrl
call
add
jge
xor
push
pop
push
daa
lea
clc
ljmp
push
out
jle
loop
add
xchg
cli
dec
divl
mov
push
movsl
in
jne
clc
sti
xor
pop
loop
jle
or
lahf
sub
inc
jnp
cmp
neg
mov
scas
jo
mov
lock
pop
in
imul
mov
test
jb
push
inc
ljmp
pop
lea
jbe
mov
cmp
cli
pushf
sub
lea
shl
or
es
mov
and
cmc
and
out
loopne
xchg
pop
mov
out
mov
insl
pop
lods
rorb
push
push
aad
repnz
sti
xchg
mov
mov
idivb
fwait
lods
cltd
add
mov
stos
adcl
pop
mov
cmp
divb
sub
xchg
pop
clc
sti
mov
add
mov
in
fisttpll
dec
push
icebp
loope
lock
adc
xor
dec
jge
pushl
xor
insl
cli
xor
jecxz
xor
insl
sub
fsubs
testb
xchg
cs
fst
push
loope
xchg
cmp
sub
ret
xor
loop
push
fidivl
loopne
jecxz
aad
sbb
add
stc
adc
mov
pop
adc
lret
data16
insb
pop
xor
scas
mov
mov
jo
shrb
outsb
pop
sub
adc
xor
setns
adc
cmp
jns
jle
insb
sub
mov
std
roll
cltd
sbb
mov
mov
sbb
nop
adc
jg
lods
es
dec
shll
dec
loope
dec
les
pop
dec
shll
cmp
adc
mov
or
xor
xchg
xchg
push
mov
daa
lods
lahf
xor
add
mov
pop
add
dec
mov
insl
inc
or
mov
subl
imul
inc
mov
insb
xor
and
cmp
jmp
out
movl
jno
cmp
call
loope
sub
mov
clc
shl
adc
mov
pop
push
data16
inc
xchg
mov
es
lea
insl
movsb
push
xor
test
inc
sub
lods
das
int
xchg
cmc
js
test
xlat
inc
mov
xchg
xchg
push
lods
xchg
ja
mov
push
cwtl
pushf
mov
pop
or
jne
shll
std
jb
cmpsl
pop
loope
xchg
inc
sbb
pop
mov
and
xor
add
int
mov
jecxz
in
adc
jae
dec
test
push
idiv
add
mov
arpl
std
fdivrs
sbb
into
mov
pop
adc
pop
adcb
hlt
sti
xor
cmpsl
push
out
lds
sbb
sub
inc
adc
and
pop
jl
xor
aad
imul
pop
cmpb
sti
xor
test
out
notb
stos
pop
cmp
push
mov
cli
sub
aas
adc
mov
mov
cwtl
jae
ja
and
std
jno
cmpsl
lcall
out
scas
cli
pop
cli
cmp
cwtl
mov
push
ds
cmp
adc
push
xorl
push
mov
pop
lea
xchg
push
dec
shll
cs
or
lahf
inc
cli
inc
es
mov
or
in
dec
cmp
scas
mov
adc
sub
add
je
mov
rolb
mov
mov
jne
add
sub
fnstcw
jno
cs
push
push
push
mov
pop
out
push
out
pushl
jno
aaa
or
jo
xchg
into
daa
cwtl
jp
pop
sub
stos
jno
frstor
pushf
je
xor
push
clc
sti
mov
imul
mov
pop
jp
dec
aaa
pop
mov
jecxz
aas
loopne
jle
mov
sub
mov
es
xor
jecxz
mov
jge
cmp
xchg
adc
mov
push
testl
or
adc
std
inc
fdivrs
mov
mov
mov
movsb
pushf
sub
lea
or
inc
or
and
mov
mov
mov
dec
jge
mov
cld
sti
xor
out
add
pop
and
and
fdiv
loop
jp
pop
mov
sbb
and
jno
lahf
push
stos
insb
sub
dec
out
cltd
pop
or
or
test
pop
cmpsb
xor
xor
stos
xchg
std
nop
fucom
jecxz
adc
dec
pop
push
jo
cmp
outsl
adc
jb
idivb
push
pop
ret
fisttpl
cwtl
icebp
dec
sub
pop
clc
sti
mov
add
mov
movsb
test
jg
mov
and
jo
fmull
loopne
dec
subl
fildll
hlt
lods
pop
mov
test
outsl
add
pop
loope
dec
call
or
sti
mov
cmp
hlt
gs
rolb
sbb
xchg
nop
pop
xchg
stos
sbb
mov
repz
xor
cs
pushf
sub
lea
mov
js
add
out
add
hlt
ficompl
repz
test
xchg
mov
xor
lea
dec
in
adc
or
adc
cld
out
std
shr
mov
rep
or
dec
jge
repnz
icebp
cld
sti
xor
out
mov
test
mov
sub
xchg
xor
imul
xor
adc
in
bound
xchg
pop
clc
sti
or
jecxz
xchg
lahf
sub
cmp
sbb
scas
ss
jge
xor
push
add
cltd
sbb
idivl
inc
ret
sbb
xchg
adc
aad
pop
clc
push
mov
ret
pop
aaa
loopnew
xor
out
push
cs
ja
enter
daa
or
jns
add
sbb
sub
pushl
divb
mov
mov
xchg
pushf
sub
lea
mov
cmp
add
fidivs
or
outsb
outsl
jge
inc
cmp
hlt
xor
pop
clc
mov
push
clc
push
data16
fwait
cwtl
js
cwtl
xacquire
xchg
rorb
mov
adc
mov
std
shl
pop
jo
sub
test
xchg
std
dec
lahf
nop
or
push
pop
pop
xchg
sbb
push
xchg
addr16
xchg
fidivs
les
adc
pop
subb
and
daa
cmpb
adc
addl
shll
push
mov
jnp
aaa
lahf
sub
loop
fistps
lds
cmp
mov
sub
inc
fdivrs
into
lahf
push
inc
inc
cmp
push
lea
loop
xor
shld
pop
push
sub
or
ja
push
sub
test
in
es
cld
out
test
and
in
lcall
lea
dec
xchg
push
pop
cli
imul
and
push
test
inc
inc
call
ret
fldt
dec
testl
sbb
or
sub
mov
jno
jo
inc
or
aaa
in
and
dec
mov
push
sti
js
jge
je
insl
push
push
fistpll
pop
scas
pop
fldl
lods
int
iret
xchg
xchg
popf
mov
jl
outsb
dec
sub
lds
mov
mov
stc
pop
inc
sub
inc
push
mov
add
sahf
fidivrl
dec
jbe
dec
pop
or
ficomps
icebp
cmpsb
mov
add
cwtl
in
mov
push
pop
mov
push
clc
jge
mov
pop
lea
jp
xor
inc
addb
mov
cli
xorps
andb
ret
cmpsl
aaa
lea
clc
push
mov
es
cmc
imul
xorb
inc
mov
inc
jmp
cmp
xor
pop
lea
jnp
xor
jo
lahf
push
daa
xor
pop
icebp
add
or
stos
sub
cmpsl
jp
xor
xor
jno
repz
mov
mov
data16
mov
mov
loopne
sahf
push
dec
jge
lcall
outsb
jns
cli
mov
jne
clc
sti
xor
xor
add
push
clc
stos
xchg
jmp
aad
jg
mov
and
hlt
jnp
jae
insl
hlt
push
fcmovbe
pusha
mov
in
mov
pusha
fists
mov
dec
dec
fidivl
test
push
jne
psrld
cmpsl
sahf
movsl
jge
mov
nop
test
xchg
fidivs
ret
mov
add
stos
fistps
mov
jge
dec
mov
push
testl
mov
repnz
fdivrs
mov
add
jecxz
mov
ds
shl
jl
ror
mov
movhps
inc
les
push
sbb
fistl
outsb
or
pop
leave
pusha
lahf
les
sub
lods
sbb
in
cmc
aas
out
ja
xchg
pop
int3
push
mov
idivb
xchg
ret
leave
push
rolb
and
cmp
xor
adc
or
push
mov
mov
mov
je
arpl
dec
fadds
das
sub
js
lret
pop
leave
mulb
cwtl
fisubl
js
cmp
mov
popf
xchg
pop
lea
addl
jae
jecxz
mov
aam
and
mov
sarl
stc
daa
push
adc
in
test
out
xchg
jecxz
and
dec
jnp
pop
lret
jg
das
cld
sub
lcall
cwtl
jne
fwait
lret
insb
movsl
lahf
inc
inc
stos
xor
cmc
sub
call
sub
mov
mov
cmpsl
and
test
adc
mov
es
lock
xor
jnp
in
leave
fldenv
cwtl
mov
and
stc
adc
roll
cltd
sbb
test
cmpb
and
fimull
sbb
xchg
lea
shlb
sub
test
mov
adc
mov
vmovmskps
cmpb
mov
scas
pop
lahf
push
or
jns
repz
xorps
xlat
lods
xchg
xlat
lods
outsb
out
jbe
iret
cmpb
dec
mov
add
mov
dec
lret
std
outsb
fadds
mov
jge
imul
div
cwtl
out
mov
cmp
data16
stos
int
dec
das
cld
sub
or
jge
add
cmp
clc
dec
test
dec
mov
inc
inc
push
push
decl
hlt
xchg
inc
nop
fldenv
adc
sub
aad
scas
faddl
xchg
fdivl
sbb
les
sahf
jne
clc
sti
xor
pop
clc
and
or
push
mov
xor
cmc
mov
inc
sti
xor
mov
shl
rcrl
loopne
std
scas
dec
shll
cs
or
testb
push
cmp
outsl
cs
xor
sbb
movsl
sahf
add
test
insb
ficoms
lahf
xchg
jno
xchg
cli
popf
pop
cmp
jbe
jb
nop
mov
test
or
add
and
dec
adc
dec
lret
cs
dec
sbb
fwait
adc
add
mov
jno,pt
push
data16
push
daa
insb
out
shlb
fsubs
insl
add
std
push
xchg
mov
loopne
cmpsl
test
ret
sar
lods
repnz
xchg
lods
into
addr16
cmp
daa
add
jbe
test
out
std
jnp
jns
out
jb
sub
jge
xchg
popa
stos
or
pushf
mov
lret
jbe
adcb
push
sub
sbbb
stc
popa
sbb
arpl
sub
xchg
adc
jns
dec
mov
cmp
mov
adc
fdivrs
adc
hlt
dec
pop
xchg
enter
xchg
pop
mov
dec
push
inc
or
or
lods
enter
add
pop
or
pop
loop
or
dec
scas
push
dec
xchg
decl
sbb
dec
in
push
push
outsl
test
sbb
inc
jmp
push
stc
push
add
add
imul
pop
and
jne
sub
dec
sbb
mov
sbb
jae
inc
mov
test
or
push
adc
push
sub
inc
inc
clc
lar
push
push
mov
in
push
aad
call
and
mov
push
xchg
cwtl
icebp
cli
jno
and
xchg
pop
clc
sti
in
xchg
std
inc
jecxz
mov
mov
push
ret
sti
push
movaps
push
insb
js
setle
push
jns
jno
or
pop
repnz
or
cli
out
push
fdivr
out
imul
dec
fdivs
dec
xchg
popf
pop
repnz
lahf
xor
push
and
inc
inc
call
enter
sbb
push
mov
dec
mov
xchg
add
mov
mov
dec
adc
and
cmc
aaa
in
and
and
fwait
outsl
jbe
std
push
test
dec
mov
mov
push
and
mov
push
dec
mov
inc
mov
into
out
mov
popa
jne
mov
nop
or
sub
dec
lret
inc
or
and
cmp
jle
dec
push
sub
xorb
and
sub
push
adc
jno
cs
xchg
fs
cmpsb
js
into
add
popa
cmp
outsb
mov
sub
fisttpll
or
ljmp
add
push
data16
mov
movsl
pop
lea
jge
xor
pop
addb
and
test
adc
int
ret
mov
mov
dec
cmp
nop
pop
xor
sub
push
cwtl
jae
sbb
cmp
jo
icebp
xor
cs
or
dec
fmull
cltd
cli
xor
leave
push
mov
xor
addr16
add
mov
mov
jl
out
adc
and
in
aaa
in
and
loop
iret
outsl
or
push
loopne
inc
imul
sbb
dec
mov
adc
add
mov
jmp
lock
inc
or
mov
xorb
dec
adc
mov
loopne
addr16
stc
stc
das
nop
jne
clc
sti
xor
fwait
test
lahf
cmp
push
jmp
sub
femms
pusha
lcall
into
insb
neg
mov
call
sti
xor
test
out
sub
fldenv
cs
jns
aaa
stos
jle
mov
mov
pop
inc
out
in
js
mov
pop
cwtl
addl
loopne
lods
cs
subl
sbb
xchg
roll
in
or
pop
outsb
jne
mov
xorl
jo
lahf
dec
push
cld
sub
push
jecxz
mov
push
push
fs
rolb
cmp
jbe
sub
sub
mov
sub
lahf
push
pop
push
pop
enter
jg
add
clc
jno
aaa
adc
sbb
jmp
inc
outsl
mov
aad
mov
data16
in
sub
stc
es
xchg
cmpl
xchg
or
xchg
sbb
add
or
jp
lock
jp
adc
mov
jge
fdivrs
push
mov
pushf
and
lea
clc
int3
mov
in
addr16
adc
mov
xchg
pop
mov
push
pop
xchg
vmwrite
add
fmul
pop
adc
mov
sbb
push
jo
or
cltd
sbb
sarl
mov
sahf
and
and
nop
adc
loope
pop
clc
sti
.byte
