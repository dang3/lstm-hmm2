jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
push
xchg
pop
ds
push
mov
sub
movl
or
add
add
add
add
add
dec
add
add
outsb
add
jb
sub
add
add
push
push
add
add
add
add
cld
add
add
add
add
add
add
add
xor
add
add
add
and
push
add
add
add
add
xor
add
mov
add
add
add
add
add
add
add
add
roll
add
pop
add
xor
add
and
xor
add
jne
xor
add
add
add
add
xor
add
and
xor
rolb
movl
xor
push
test
and
roll
add
pop
add
xor
add
add
xor
add
out
xor
push
mov
add
add
add
add
and
or
popf
add
add
or
xor
add
add
add
add
add
add
add
xor
add
add
add
add
das
add
add
add
add
push
add
fildl
rolb
and
push
add
add
roll
add
out
push
add
add
add
add
add
add
push
add
add
sub
or
inc
add
or
jns
push
add
add
add
add
and
popf
add
add
add
add
add
add
add
add
inc
add
and
pop
add
add
add
ds
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
pusha
add
pusha
add
add
pop
push
cmp
add
add
add
add
add
add
add
add
add
add
add
fiaddl
and
and
and
rolb
pop
add
add
outsb
add
add
add
push
push
add
call
add
add
xor
add
add
pop
add
cld
add
xor
add
jg
pop
add
add
mov
mov
add
and
rolb
inc
add
add
add
add
push
add
add
add
mov
in
repz
add
xlat
add
add
add
addb
add
push
add
and
ret
add
add
mov
into
add
add
rolb
pusha
add
test
add
add
pop
add
add
add
add
add
add
xor
add
mov
push
add
mov
pop
add
add
add
cld
add
add
add
xor
add
xor
test
xor
popl
cld
add
add
arpl
push
add
and
inc
add
add
add
add
cld
add
add
add
cld
add
xor
add
add
add
lea
add
xor
add
int
cld
add
add
cmp
add
sub
pop
push
and
inc
add
int3
add
testl
and
xor
and
and
xor
lret
add
xlat
add
testl
xor
add
add
push
mov
int3
push
fxtract
inc
jae
shlb
shl
sbb
and
enter
fstl
adc
loop
pop
test
stos
cli
bound
popf
push
adc
mov
mov
mov
xchg
loope
jmp
outsb
jge
lds
cmp
and
push
int
mov
dec
icebp
lret
jbe
push
adc
pop
xchg
js
js
or
inc
dec
loope
dec
pusha
inc
and
adc
inc
mov
sbb
and
pop
sbb
mov
fdivrl
xor
je
adc
daa
sbb
leave
stos
in
scas
dec
sbb
bound
outsl
or
into
pop
lret
ficomps
scas
fldt
dec
add
or
js
test
ljmp
arpl
cmp
jno
xchg
xlat
addr16
xchg
popf
xchg
cmp
frstor
inc
cmp
xchg
xchg
adc
ret
shrb
shll
mov
clc
fmulp
stc
loopne
pop
cmp
jecxz
mov
inc
xor
jle
and
jle
adc
nop
xor
sbb
jno
int3
push
mov
jo
push
adc
xchg
mov
inc
push
xor
inc
jp
add
mull
jmp
into
dec
mov
into
mov
pop
fistpll
in
mov
mov
sahf
sbb
mov
mov
dec
fneni(8087
sahf
call
pop
mov
out
mov
iret
mov
shr
ret
xchg
loope
jnp
sub
stos
adc
xor
pop
add
xor
push
inc
add
mov
and
mov
cmp
mov
adcl
cmc
cltd
stos
sbb
mov
das
mov
mov
xor
mov
dec
xchg
movsb
mov
xor
sub
imull
popf
jle
les
imul
clc
pop
adc
loope
jns
fs
pop
clc
xlat
mov
in
cmp
and
mov
push
mov
dec
push
jge
cmp
push
int3
aas
push
sbb
inc
push
xor
dec
aam
je
insb
mov
fldt
sub
mov
in
mov
xchg
and
dec
sub
inc
lock
and
lea
ja
shll
outsb
and
jg
daa
outsl
sbb
jmp
hlt
subl
dec
lahf
inc
aaa
cmpb
jmp
xchg
nop
xor
mov
clc
push
jb
jp
xor
xorl
js
jp
adc
movsb
adc
add
adc
dec
rolb
fidivrl
iret
adcb
add
dec
push
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
cmp
imul
cmp
sub
mov
fisttpl
jbe
stos
int
cmp
imul
pop
sub
mov
jecxz
sti
std
movsl
in
sub
or
pop
and
mov
mov
std
xchg
fldenv
sbb
jg
cmp
test
cli
jg
ja
push
test
std
xchg
push
push
lock
xchg
cwtl
call
push
jmp
les
andl
adc
stos
add
xor
lds
cmpsb
add
xor
loop
lret
ljmp
mov
dec
sub
imul
jge
jge
mov
dec
mov
cli
add
iret
mov
xchg
xor
sbb
lods
call
add
jo
out
mov
mov
movsb
pop
push
in
stos
test
mov
cwtl
mov
enter
in
inc
movsl
shll
sub
jnp
or
pop
sub
mov
jmp
in
jne
mov
mov
inc
xor
pop
push
jbe
pop
or
cld
mov
cwtl
cwtl
int3
test
cltd
fistps
sbb
cmp
dec
pop
inc
dec
or
stos
scas
scas
fdivrl
mov
enter
mov
jge
insl
sbb
dec
cmp
jmp
sti
std
mov
sub
jnp
or
pop
sub
mov
jmp
sti
std
mov
mov
cmpsl
insb
xchg
cwtl
sub
push
pop
rep
inc
sub
mov
xchg
or
imul
push
jb
mov
jmp
mov
mov
inc
bound
movsb
sahf
in
push
int3
cli
jo
aas
cld
stc
sub
push
dec
adc
cmp
loop
sbb
xor
cmp
loop
or
push
jne
or
pop
pop
lods
inc
adc
dec
hlt
in
cli
dec
mov
pop
imull
xor
hlt
push
add
pop
fisttps
cli
sbb
lret
mov
shlb
lcall
mov
loopne
data16
mov
pop
clc
pop
pop
sub
xor
dec
out
add
lods
popf
scas
and
xor
aam
loopne
pop
xor
cltd
sub
xor
repz
xor
cs
cmp
sub
js
bound
in
hlt
or
jns,pn
hlt
adc
loope
mov
movsl
arpl
je
and
xor
cwtl
sub
adc
jle
test
fchs
xchg
std
stos
lods
lods
icebp
and
mov
cmp
push
push
jb
push
cs
jno
mov
repnz
sub
insb
or
lea
inc
jle
mov
pop
dec
out
jae
icebp
adc
pop
repz
mov
cmp
add
xchg
bound
jno
xor
lock
xchg
push
hlt
cld
dec
sub
jnp
mov
aam
aaa
gs
and
fcomps
xchg
out
clc
sarl
inc
repz
insl
pop
sub
mov
sbb
jmp
fs
imul
scas
xchg
leave
mov
push
xor
loopne
aas
inc
js
inc
inc
out
add
sarb
pop
jge
aas
push
aas
mov
inc
in
sub
mov
push
dec
sub
es
mov
push
bound
enter
fidivrs
divb
xor
sub
rol
jle
pop
jg
clc
mov
push
cld
adc
pop
sub
loope
push
arpl
je
insb
movsb
jmp
mov
sbb
or
mov
call
inc
inc
in
mov
cld
into
outsl
and
cmc
aam
shlb
inc
mov
pop
cli
xchg
in
cmp
mov
test
dec
push
xorl
or
in
xchg
sbb
xorb
sub
inc
adc
mov
mov
add
lds
and
outsb
add
mov
pushf
cld
test
and
pop
out
mov
inc
in
or
orb
jo
cltd
cmp
cmpsl
shlb
and
sub
std
aam
mov
or
daa
dec
jecxz
leave
ja
push
adc
mov
andl
sti
scas
mov
sbb
pop
mov
add
outsb
jnp
outsb
fs
inc
cmpl
negb
jne
aas
aam
sbb
xchg
ret
ficoml
mov
or
sbb
arpl
imul
mov
xchg
pop
push
mov
shll
les
cmc
dec
push
pusha
adc
and
cmp
mov
fcos
cmpb
xchg
stos
imul
shll
jo
push
int
push
and
or
xor
push
sbb
or
adc
jmp
adc
out
lea
out
sbb
outsb
icebp
inc
cmpsl
jnp
jne
push
push
out
mov
outsl
mov
cmpsb
pop
xchg
push
inc
outsb
test
pushf
fimuls
es
imul
or
sub
fs
push
mov
ds
cmp
inc
mov
pop
mov
xor
mov
das
mulb
sbb
xor
call
cs
sbb
adcl
and
mov
cli
jp
cmp
or
push
mov
in
lret
pcmpgtb
fs
mov
xor
jecxz
js
nop
and
jecxz
jle
int
mov
push
fsubr
sbb
shl
mov
mov
dec
jne
dec
cmc
ret
sbb
aam
jbe
hlt
aaa
scas
jle
push
bound
xor
pop
rcrl
orb
cmpsl
pop
cmp
jno
add
cmp
mov
pop
mov
sbb
test
mov
jecxz
push
mov
xchg
push
and
jmp
push
add
fidivs
lret
pop
cwtl
push
stc
out
jno
pop
movsb
imul
scas
imul
roll
shlb
mov
dec
loop
lods
out
shrl
xlat
dec
and
test
add
std
sbb
pop
adc
mov
stos
push
add
test
repz
dec
or
icebp
mov
arpl
xor
mov
cmc
mov
jle
pop
inc
or
add
sub
mov
mov
in
xor
rolb
or
nop
cmpsb
dec
cmpb
divb
popf
lods
sub
and
ret
hlt
lea
pop
push
rcrl
rorb
jecxz
pop
int
push
stos
aad
or
das
adc
push
xchg
hlt
cmp
push
pop
into
xchg
idivb
popa
or
push
outsl
in
aam
sbb
xchg
popf
shlb
sbb
fdivs
loopne
out
cltd
ffree
push
lret
cli
mov
nop
cmp
movsb
push
popf
not
int3
les
dec
pop
pop
push
cmp
in
lock
xlat
ret
mov
lcall
dec
xor
imul
repnz
mov
mov
in
bound
push
mov
pop
adc
mov
add
repnz
mov
pop
pusha
xchg
mov
rcr
iret
jo
stos
inc
mov
xor
dec
fcmovne
cmc
sahf
add
aaa
sbb
jne
jo
or
add
in
gs
loop
jo
pop
jo
xchg
loop
inc
shl
add
mov
pop
pop
jl
jmp
enter
loop
shlb
inc
mov
out
rclb
dec
movq
lods
lods
push
fadd
jno
repz
iret
shrl
sub
add
jl
jmp
pop
pop
adc
shr
lret
imul
xor
xchg
pop
mov
sbb
push
pusha
pand
adc
fwait
mov
inc
in
imul
pop
mov
out
push
dec
int
lret
jmp
hlt
xchg
sar
mov
mov
xorl
scas
mov
and
imul
ret
aaa
outsl
hlt
pop
cmp
dec
mov
stc
sbb
fsubrl
pop
in
pop
and
xchg
push
ret
loop
loopw
mov
and
and
push
sbb
push
sbb
jne
fsubr
jb
push
adc
pop
jge
sbb
or
imul
movsl
pop
js
add
push
lods
dec
push
add
in
pop
add
push
sahf
mov
lcall
add
in
cld
mov
push
cs
jp
pop
fwait
sbb
mov
lret
add
mov
jecxz
adc
dec
outsb
cmp
or
cmp
movsb
fbstp
push
mov
add
xchg
outsl
fwait
inc
enter
xor
xchg
pop
add
scas
sub
scas
mov
jge
push
sub
loopne
jae
rolb
jg
fisttpl
sbb
and
jge
jns
mov
stc
out
aad
dec
add
cmp
fdivl
push
jmp
mov
int
aas
xchg
and
cmp
adc
outsb
mov
sbb
mov
sub
aaa
test
sbb
xor
sahf
jl
sbb
leave
jl
in
jp
sub
mov
fsts
aas
pushf
xchg
jge
sbbl
xchg
or
jl
inc
sbb
insl
mov
js
stos
fistl
fdivrl
pusha
dec
and
sbb
or
movsb
pop
add
xchg
xchg
cmpsl
xchg
push
stos
or
jle
mov
test
push
icebp
cmp
jns
sbb
imul
shlb
sbb
popa
div
lcall
loope
in
movsl
std
and
es
push
stc
add
pop
mov
mov
add
mov
jb
and
dec
mov
pop
mov
insb
cli
pop
aad
call
mov
in
aam
loopne
arpl
inc
push
rorl
inc
fs
lcall
hlt
mov
jp
lds
jp
push
inc
jp
mov
bound
fs
or
call
push
mov
adc
pop
xor
ficomps
testl
and
mov
fisttps
push
mov
mov
pop
icebp
testl
sub
popf
daa
jp
fisttps
push
mov
repnz
add
cmp
dec
out
xor
aas
mov
dec
sub
cmp
push
xor
adc
dec
adc
daa
cmp
enter
mov
cmp
xchg
repz
mov
je
shrb
jge
jno
dec
push
pop
jno
aas
cld
repz
lods
adc
mov
out
out
repz
fwait
push
repnz
push
fldcw
sbbl
dec
inc
mov
shl
dec
add
xor
push
mov
fwait
sarl
adc
dec
xchg
mull
pop
das
sub
sub
push
push
movsl
jge
ret
xor
fs
push
pushf
ret
aaa
jge
jb
push
iret
int
ss
jb
jbe
and
addr16
lock
cmp
lods
out
mov
add
adc
jns
and
xlat
inc
push
jl
fistl
lods
push
aam
dec
sbb
int
xchg
xchg
outsb
push
push
xchg
push
xlat
into
fscale
xchg
lods
push
loopne
inc
inc
pop
mov
mov
out
jg
add
mov
xchg
in
call
mov
cwtl
fucomp
and
cmp
dec
int
xor
sbb
jns
lret
mov
xchg
cs
jnp
xor
test
out
push
push
std
mov
fmul
push
ja
push
sahf
int3
adc
cmp
clc
jle
sbb
cmc
in
shl
ja
mov
flds
push
adc
iret
jb
ss
jg
mov
hlt
adc
rcr
fbstp
mov
rolb
jecxz
and
daa
in
push
mov
push
mov
test
pop
movsb
dec
js
rcrb
mov
mov
psrad
cwtl
sub
jnp
test
popf
push
mov
arpl
or
je
xchg
mov
test
cmp
jmp
sbb
sub
mov
test
xchg
jno
out
push
dec
inc
daa
mov
pop
mov
adcb
insb
and
pinsrw
pusha
xchg
mov
shrd
mov
fxtract
lea
ret
sub
loope
mov
ror
jl
ret
adc
mov
jns
adc
sbb
adc
nop
cwtl
lret
repnz
and
mov
cmp
xor
aam
jl
icebp
lock
mov
test
mov
adc
nop
cmp
sub
cs
ljmp
jecxz
lea
xor
shl
mov
sub
adc
out
in
push
sarb
sbb
daa
push
xor
test
stc
push
ds
mov
dec
sbb
mov
aam
pop
pop
rolb
mov
cmpsl
sub
cmpsl
sahf
fs
addr16
sub
mov
inc
sub
fsubr
inc
jo
pop
pop
int
mov
mov
out
dec
stos
cmp
mov
or
inc
sbb
mov
dec
add
and
sub
inc
mov
push
sahf
mov
xchg
push
mov
mov
and
push
ja
xchg
mov
sub
adc
xor
das
pop
std
sub
push
add
cmp
sbb
in
movsb
mov
jl
push
or
mov
icebp
mov
popa
push
fwait
sub
jl
mov
pop
mov
ficompl
xchg
rorl
or
insl
out
adc
sar
inc
lock
ja
or
jne
xlat
cmp
mov
fisttpll
cli
int
cmp
jbe
or
mov
sahf
adc
lret
adc
dec
push
jg
dec
lods
sbb
mov
das
fisttpll
or
out
adc
in
add
cmpb
imul
test
and
or
sub
out
cmp
lret
cmpl
aaa
xchg
movsb
movsb
xchg
mov
sbb
and
mov
mov
lea
mov
pushl
push
push
cmp
jno
dec
test
dec
jno
je
cmp
pop
shr
mov
daa
lcall
pusha
cmp
in
loopne
test
in
jno
jg
push
cmp
jo
loopne
or
inc
das
mov
in
mov
std
cmp
rorb
mov
loopne
aas
push
add
mov
loop
mov
in
scas
inc
rcl
xchg
dec
add
cmpsl
xor
add
iret
inc
popf
sub
sub
mov
and
sahf
sub
ficoml
mov
iret
and
pushf
adc
iret
fdivrs
sti
mov
movsl
setns
lret
mov
jne
ret
ficoml
cmp
xor
shll
aaa
scas
outsl
cmp
push
and
fucomip
pop
sub
ja
sub
test
jmp
into
and
push
sub
scas
repnz
jne
hlt
jge
mov
inc
test
insl
mov
mov
adc
sbb
push
dec
fiaddl
xchg
outsl
sub
pop
adc
hlt
mov
and
fld
hlt
xlat
out
iret
mov
mov
pushf
gs
push
mov
pop
ja
clc
dec
mov
iret
inc
js
jne
adc
mov
xchg
jne
in
out
mov
call
push
push
mov
loop
add
fstps
aam
mov
movsb
jnp
mov
sbb
mov
pop
ss
das
xor
add
sub
push
jl
cmpsb
clc
in
loopne
mov
cmc
mov
mov
mov
mov
sti
push
push
out
jge
fs
pop
addr16
xor
dec
mov
mov
push
add
stc
sub
cld
pop
pusha
ret
loope
pop
ljmp
int3
repz
and
out
inc
jecxz
mov
sub
lret
popf
ljmp
ss
inc
add
out
sarb
pop
in
pusha
test
lahf
and
arpl
pop
cmp
sbb
cmpsl
outsl
test
mov
inc
dec
fstps
and
in
rorl
imul
inc
js
and
push
xor
xor
movsb
mov
in
addb
aam
push
in
sahf
idivb
jnp
out
pushf
mov
mov
outsl
clc
or
ja
xor
xchg
sahf
fs
or
loop
or
mov
shlb
shll
into
shll
cmp
cmpsb
scas
xor
cmc
sub
andb
or
repz
addr16
dec
adc
dec
pop
leave
jbe
cmp
dec
dec
idivl
xchg
dec
cli
lods
arpl
test
xchg
push
push
movsb
push
mov
inc
mov
or
and
add
cmp
test
pop
lods
mov
fwait
pop
cmp
dec
add
add
cwtl
mov
into
mov
subb
aas
sbb
mov
shrb
cmc
mov
push
lds
mov
pop
test
jae
fs
sub
inc
push
push
pop
movsb
sub
js
test
sbb
adc
js
xchg
or
sub
outsl
pop
loop
or
cmp
icebp
pop
and
xlat
bound
push
pusha
sti
testl
mov
inc
rorb
push
stc
sub
scas
ret
stos
pop
fwait
lock
mov
popf
test
sub
jne
rol
ffreep
insl
jle
cmp
pop
and
divl
lds
fwait
std
aam
fwait
mov
cmp
sbb
sub
sbb
jge
or
jnp
push
lret
ror
imulb
lret
mov
dec
into
insl
popl
stos
cwtl
sahf
in
adcb
mov
or
push
pop
pop
jp
dec
sbb
scas
dec
push
push
add
call
push
cmp
cwtl
dec
xor
mov
insl
mov
cs
mov
sub
lret
mov
push
in
mov
leave
pushf
js
jns
dec
sub
add
dec
jae
jle
or
mov
sbb
jl
add
adc
pop
int3
mov
inc
mov
xchg
lock
mov
dec
test
dec
pop
fstp
addl
sahf
addb
cld
popa
scas
mov
jbe
add
inc
push
dec
std
pop
lea
jb
arpl
movsl
ds
call
jno
pop
mov
popa
xchg
mov
fwait
push
lods
out
lods
dec
lret
sub
int3
out
loopne
push
imul
inc
or
in
sbb
cli
pop
cli
mov
scas
jecxz
dec
icebp
std
mov
push
scas
xor
sub
out
leave
inc
and
sub
aaa
inc
and
bound
stos
pop
or
xor
mov
sbb
jno
shr
push
inc
cld
mov
pop
aam
dec
stos
out
adc
adc
mov
pop
adc
fnsetpm(287
loop
adc
mov
and
pusha
dec
pusha
addr16
fwait
or
pop
dec
pop
aam
add
leave
xchg
and
mov
ds
dec
test
jbe
stos
mov
test
sub
mov
pop
std
inc
mov
ljmp
or
push
sbb
cmpb
jmp
inc
pop
mov
push
cmp
xor
imul
aad
inc
cltd
mov
in
jae
int3
cwtl
or
mov
lahf
cmp
pop
sub
fisubs
stc
negl
jg
and
fld
stc
mov
popf
mov
lret
jb
mov
cmp
mov
clc
in
or
sbb
sti
bnd
pop
ret
in
ljmp
adc
fcomip
push
xor
jb
push
push
stc
and
lcall
sub
bts
xor
jp
aas
and
loope
test
xchg
nop
xchg
jl
dec
push
pop
lcall
icebp
sub
pop
pop
sbb
insb
sbb
test
scas
or
lret
and
in
fmuls
sahf
fcmovu
pushf
frstor
outsb
movsb
pop
rorl
repnz
mov
in
je
or
mov
movsb
outsl
and
sahf
mov
repnz
in
lods
cmp
stc
daa
cmpsb
dec
jns
sub
or
fiadds
dec
gs
mov
pushf
insb
lea
out
cmp
mov
lds
repnz
dec
cwtl
mov
push
sbb
aaa
ret
fmulp
test
cmp
js
addr16
dec
xor
outsl
dec
mov
rcrl
fcompl
cli
int
je
loopne
pushf
int
ljmp
and
enter
cmp
pop
popa
mov
push
pop
sbb
pushf
push
mov
and
repnz
imul
push
je
fisubl
scas
aam
xchg
lret
cmp
das
pop
bound
mov
mov
test
ja
fs
sbb
bswap
mov
sbb
ss
cmp
cmp
adc
lods
sbb
adc
outsb
lcall
adc
test
push
decb
test
jo
xchg
jne
dec
mov
cmc
out
sub
xchg
shl
sti
test
das
lods
popa
xchg
sub
add
mov
outsb
xlat
jp
jl
fpatan
jg
int3
jns
adc
or
inc
cwtl
mov
dec
mov
aas
or
bound
adc
jl
sbb
pop
add
fisubl
sti
jge
in
decb
or
inc
mov
or
test
or
faddl
clc
int
test
js
mov
inc
push
mov
inc
enter
mov
sub
gs
fwait
std
xchg
std
mov
loop
and
stos
or
pop
mov
inc
or
insl
push
mov
inc
cmc
pop
call
xchg
xor
sub
mov
lret
sbb
cmp
mov
je
insb
mov
out
cmp
lea
cld
add
repz
hlt
add
add
mov
cltd
dec
mov
fstpt
jg
pop
xorb
xchg
movsl
inc
sub
call
ja
adc
push
xchg
rolb
jecxz
sti
inc
arpl
fistpl
ljmp
jne
dec
cmp
pusha
outsb
or
sbb
dec
cmp
jmp
sti
std
mov
sub
jnp
or
pop
sub
mov
jmp
sti
std
mov
sub
jg
or
pop
das
dec
cmp
jmp
repnz
in
frstor
sub
cmp
insl
sbb
dec
sti
mov
jmp
mov
shll
ret
and
xor
add
adc
pusha
loopne
mull
jle
in
dec
push
pop
subb
loopne
lock
shrb
cmp
fsubrs
clc
pusha
mov
inc
test
mov
loope
nop
js
or
sbb
push
cmp
call
adc
loopne
pop
call
dec
xorb
mov
dec
enter
xchg
fs
jo
lcall
push
fistpll
lock
les
aam
int3
sahf
int3
pop
orb
addr16
push
mov
insb
cmc
pop
jge
hlt
sarb
ficoms
push
xchg
test
call
mov
xchg
test
test
or
mov
fstpl
in
cld
clc
lahf
mov
mov
xchg
mov
add
outsb
sub
lock
xlat
shlb
and
pop
pushf
mov
lret
mov
xor
adcb
in
xlat
fdivl
add
cltd
adc
xchg
cmp
fs
sbb
sarl
jnp
data16
call
or
dec
sub
push
cli
sbb
sub
push
dec
cmpsl
inc
fdivs
xchg
pmulhuw
cwtl
xor
push
call
in
cmc
ds
imul
fidivl
jno
or
adc
mov
orb
pop
cltd
imul
dec
sbbl
mov
inc
test
mov
subb
loopne
lock
sub
cmp
enter
call
jo
inc
test
mov
subb
loopne
lock
sub
cmp
enter
pop
sarb
leave
es
dec
ds
jecxz
cmp
dec
sub
and
jne
push
cmp
dec
push
aas
mov
call
mov
sub
pop
or
jns
pop
arpl
arpl
enter
ret
sub
lods
and
mov
fucomip
pop
data16
out
mov
ret
sar
ljmp
xchg
rol
push
pop
iret
mov
movsl
scas
add
xchg
cltd
enter
insb
ret
mov
icebp
pushf
push
sbb
lods
dec
repz
push
pop
mov
and
jb
and
pop
jno
cmp
mov
imul
pop
jae
cmp
imul
sbb
mov
aam
fcomps
mov
mov
dec
ror
lods
lds
sbb
push
int3
sti
jno
or
ja
jle
mov
jecxz
jl
xchg
lods
or
sbb
movsb
sbb
ja
cwtl
inc
dec
sbb
scas
test
stos
scas
mov
stos
push
bound
sbb
xor
cmp
repnz
adc
pop
mov
cmpsl
roll
adc
mov
push
pop
cmp
enter
sub
jmp
push
xchg
xor
add
pop
movsl
mov
outsb
and
mov
test
pop
adc
cld
mov
cmpsb
jp
aaa
pop
fidivl
push
and
shlb
or
push
push
jbe
dec
incb
inc
push
add
outsl
cmp
pop
in
and
sub
aad
push
jp
jnp
adc
inc
jb
xor
decb
pusha
aaa
cmp
push
cmp
or
push
mov
add
push
mov
subl
dec
and
pop
movsb
dec
filds
imul
xor
fstl
sti
out
add
aad
sbb
in
inc
lcall
jns
or
sbbl
or
mov
cs
insb
inc
or
sbb
and
adc
in
daa
xchg
popa
repnz
cwtl
sbb
mov
xchg
in
sbb
shlb
dec
cmp
stos
sbb
adc
outsl
bound
jns
inc
mov
and
mov
sbb
mov
pop
fidivl
cmp
push
cmp
aam
or
xlat
jge
xchg
cli
adc
adc
push
lods
popf
xchg
pop
adc
xor
mov
or
aaa
sub
mov
lds
aaa
jb
push
pop
sti
daa
test
jecxz
pop
std
popa
insl
in
push
jl
mov
push
jns
popf
pop
int
dec
mov
cmp
es
testb
xchg
or
mov
sub
cmp
fcom
imul
popa
lock
lock
fstp
or
xchg
mov
sub
cmovbe
sbb
lods
iret
stos
inc
cli
jb
in
xchg
dec
out
pop
push
sbb
js
xor
sbb
sub
adc
popa
outsl
es
fists
aad
hlt
aad
addb
pop
test
fnstcw
jae
push
pop
aaa
mov
sbb
mov
sub
test
es
cmpsl
outsb
xchg
rcrb
lcall
xchg
push
push
jg
stos
insl
cs
dec
dec
sar
push
mov
pop
cmp
push
gs
jbe
lret
jne
jmp
addb
and
scas
ljmp
push
pop
mov
adc
push
leave
pop
xor
or
sbb
outsl
mov
jmp
repnz
lock
mov
cmpsl
fisttps
cmp
or
mov
mov
cltd
dec
pop
xchg
inc
jb
sti
leave
mov
mov
hlt
into
sub
fldt
out
pop
or
ljmp
sub
sbb
frstor
mov
jnp
mov
adc
test
pop
sub
stc
ja
std
mov
xchg
inc
inc
stc
sbb
fists
bound
test
fnstenv
std
sub
clc
iret
lahf
dec
lds
js
notb
dec
fisttps
jl
xor
add
cmpb
mov
push
test
lcall
adc
movsb
lahf
push
cmp
push
mov
dec
mov
test
cmpsb
mov
outsb
cmc
scas
jge
sti
sbb
addr16
idivl
ja
inc
jmp
aam
dec
push
addr16
in
mov
movsb
mov
jg
pusha
in
push
lahf
add
and
cli
cmpsb
sub
sub
pushf
mov
xor
sti
or
mov
push
cld
or
dec
dec
mov
mov
add
addb
and
loopne
pop
sbbb
xor
call
jmp
lds
jp
ljmp
cmp
sti
out
mov
notrack
sbb
sarb
rcrl
push
repnz
and
and
cmpb
dec
daa
pop
ss
dec
fiadds
repz
and
in
xor
sbb
cltd
push
out
push
or
inc
xor
xchg
add
fsubrs
aas
in
iret
neg
and
js
mov
pop
cmp
orb
cmc
inc
xchg
add
push
in
out
mov
mov
cmp
in
sbb
jb
ss
das
push
inc
sarb
fsubp
mov
jnp
pop
jo,pt
sub
aam
cmc
jge
imul
outsb
shlb
lods
inc
scas
int
pop
add
inc
mov
sbb
mov
daa
cmp
push
pop
mov
adc
mov
pusha
xchg
test
data16
std
insb
xor
mov
lds
stos
int
cmc
xor
sub
cmpsb
daa
insl
mov
push
ljmp
mov
lods
lds
aam
rcrb
idivl
sub
lock
jecxz
lret
in
or
mov
test
call
js
cbtw
in
dec
xchg
dec
rcr
push
cmp
loop
jmp
ss
dec
addr16
add
fs
jle
or
mov
mov
gs
ljmp
cmp
inc
mov
lods
sahf
jge
in
cmp
push
push
push
jae
fiaddl
in
mov
and
push
mov
mov
add
add
or
addl
cmp
push
pop
and
mov
aad
les
or
add
lea
jae
je
lods
jecxz
imul
dec
arpl
leave
lock
and
pop
mov
dec
cmp
jns
enter
cmp
push
nop
pop
pop
and
test
ret
fbld
fwait
movsl
lret
movsb
js
shrl
sar
jbe
arpl
push
lret
mov
loopne
sarl
mov
inc
fadds
push
adc
in
ja
mov
addr16
xlat
test
mov
mov
stc
sbb
lret
negb
jb
fistpll
adc
mov
xorb
mov
inc
push
add
or
xchg
cld
nop
cmp
into
sub
push
xchg
adc
rorl
sbb
scas
mov
jmp
das
xchg
cmp
das
sub
xchg
frstor
and
sub
clc
fdivrl
mov
and
loop
mov
inc
mov
mov
push
icebp
arpl
mul
pop
pop
dec
cmp
add
into
in
pop
lcall
add
push
sbb
je
leave
mov
movl
xlat
int3
jo
scas
fimull
and
jg
xor
das
leave
in
mov
adc
cmp
sbb
push
push
in
pop
mov
call
adc
mov
lret
cmp
mov
adc
cmp
das
push
call
add
xchg
lret
repnz
add
stos
mov
pushf
fchs
iret
mov
int3
pusha
mov
stos
xchg
mov
insl
xchg
mov
lret
cmpsl
outsl
mov
push
aam
stos
cbtw
test
lods
jmp
sub
inc
and
sbb
add
adcl
daa
in
sahf
int
pop
fsubl
das
mov
jmp
popf
and
ret
xchg
imul
ret
outsl
sub
loop
js
das
lods
mov
repnz
mov
cmp
push
js
loopne
lea
cmp
xchg
cwtl
mov
jno
lods
out
mov
cwtl
sahf
ss
or
out
mov
ljmp
pop
dec
xor
rcll
enter
jno
dec
subb
jb
push
xor
movsl
add
xlat
testb
cmp
mov
pop
push
mov
lret
push
pusha
adc
pop
cmp
loop
jmp
jl
xchg
sub
cmp
pushf
shlb
or
inc
push
int
sbb
inc
push
mov
movsl
jge
in
mov
xchg
fisubs
adc
mul
mov
decb
fstpl
push
mov
inc
fsubp
clc
movsl
cmp
push
sub
sarl
ljmp
and
mov
sbb
imul
push
inc
mov
pop
pusha
das
push
nop
or
imul
mov
mov
xchg
xor
cmp
jb
inc
mov
jae
dec
in
fld
int3
loope
xor
mov
loopne
jae
or
jo
and
xor
push
in
int3
loopne
inc
outsl
mov
out
sub
mov
mov
push
push
pop
ja
jmp
shl
mov
lcall
stos
andl
mov
adc
inc
add
and
fmuls
repnz
pop
push
popf
push
scas
int
dec
xchg
test
rcrl
mov
push
adc
and
xor
orb
das
stos
jne
mov
dec
xchg
mov
xchg
cmpsb
adcl
dec
mov
inc
jnp
hlt
std
adc
sub
mov
sub
mov
loop
pusha
cmp
inc
adc
stos
mov
mov
pusha
adc
popf
push
mov
pop
mov
cmp
or
dec
not
pop
sbb
dec
sbb
pop
ljmp
sub
xor
adc
jl
cmp
mov
xchg
jnp
xor
mov
inc
insb
sub
push
adcl
in
sti
cltd
jl
mov
lock
pop
movsl
xchg
sbb
cmp
js
add
movsb
ds
adc
scas
xor
sbb
jno
loope
push
aaa
mov
push
sbb
xchg
icebp
and
and
sbb
and
cli
ret
inc
cld
sub
loope
mov
aad
cmpsb
dec
sub
push
cmpsb
dec
out
lret
adc
hlt
push
lock
enter
stc
ficoml
jp
mov
jo
mov
rcr
shlb
insl
push
dec
sbb
cmp
or
mov
push
sub
sbb
imul
mov
mov
imul
inc
cmp
inc
mov
or
mul
lock
std
mov
push
mov
xchg
sbb
jae
push
dec
mov
pop
aas
mov
pop
and
jg
ja
add
rol
push
xor
andl
adc
pusha
cmp
dec
mov
out
push
cmp
inc
outsl
cmp
inc
cmp
and
dec
sbb
sbb
pop
xchg
add
mov
popa
or
ss
cmp
jmp
popl
push
lods
jo
js
mov
addr16
ss
xor
jae
inc
dec
mov
setne
jno
test
pop
test
sbb
lods
sbb
inc
shlb
lods
inc
movsb
in
inc
fadds
mov
add
pop
and
dec
cltd
ss
dec
lahf
sbb
mov
jnp
insb
pop
icebp
cmpsb
int
and
xchg
mov
mov
jmp
add
iret
jb
push
scas
inc
adc
jae
fcoml
sub
into
mov
adc
mov
dec
xchg
or
inc
imul
rclb
je
movsb
cmc
cmp
adc
mov
es
inc
push
mov
hlt
push
test
lret
pusha
std
sub
and
std
cmp
mov
enter
lea
icebp
cmpsb
jbe
adc
lret
adc
adc
mov
hlt
int3
pushf
push
fcompl
dec
rol
sbb
dec
ljmp
rcrl
fmull
push
pusha
mov
jmp
push
daa
jne
out
aad
icebp
sti
stos
movsb
push
stos
movsl
xor
xor
add
xchg
in
dec
lods
out
in
mov
add
dec
and
ret
aas
sti
out
mov
data16
fstpt
ja
or
cltd
loop
adc
insb
mov
add
cmp
popf
dec
lock
dec
jb
lock
sbb
or
icebp
xor
dec
je
or
cmpsl
and
cld
jnp
imul
or
imul
test
cmp
shrl
fidivs
rcll
adc
mov
je
xchg
push
adc
and
xchg
mov
xchg
fistl
fstps
jo
adc
js
mov
jmp
scas
loop
in
mov
in
mov
mov
fistpll
sbb
or
pop
fmulp
jmp
inc
xor
sti
inc
js
push
sub
jle
inc
popa
mov
lds
xchg
xlat
shl
fnstsw
div
loop
mov
pop
popa
test
cwtl
mov
pop
scas
data16
adc
sub
lds
inc
sub
mov
xor
out
lods
add
jge
sub
fwait
add
loopne
and
es
pop
inc
roll
push
jb
pop
jae
add
std
cmp
bound
gs
insl
jne
cmpsb
leave
je
repz
ret
loop
sbb
fwait
sar
das
lret
inc
sahf
push
xlat
jp
mov
dec
mov
stc
inc
mov
adc
jo
and
test
popf
mov
scas
sub
sbb
push
pusha
call
fiaddl
jae
mov
mov
fsubs
cltd
imulb
pop
jne
cmp
js
pop
cmp
into
jl
lock
ret
fimuls
or
inc
scas
inc
repz
sub
imul
enter
or
test
mov
xor
xchg
push
in
sub
mov
aaa
repz
push
inc
mov
mov
push
js
and
mov
out
mov
outsl
loopne
mov
sub
imul
cltd
inc
or
subl
repnz
jle,pt
add
mov
adc
test
rol
icebp
mov
fsubp
sahf
or
orb
cmpsb
sbb
xor
cli
fwait
and
mov
dec
adc
js
push
and
cwtl
bound
jge
imul
mov
out
aaa
mov
adc
movsl
lods
in
lock
pop
adc
mov
mov
cmp
adc
cmp
push
mov
dec
jmp
jbe
and
mov
xchg
inc
xchg
out
arpl
sbb
dec
push
pop
orl
sbb
divb
sti
cmpsl
lcall
sahf
lock
insl
dec
in
lcall
hlt
je
outsl
xchg
rol
inc
aam
fidivrl
sbb
iret
jnp
mov
lcall
jmp
iret
inc
sbb
dec
fs
mov
mov
testb
insl
push
dec
cld
xorl
sub
cmp
std
ljmp
repz
fiaddl
adc
pushf
jns
cli
cld
xchg
xor
or
mov
daa
xor
lods
fnstcw
incb
pushf
imul
pushl
mov
call
insb
mov
shll
roll
fsubs
fdivrs
lods
sbbb
nop
push
sti
push
sub
and
loop
out
xor
gs
mov
and
dec
lret
jns
add
adc
into
sub
push
and
mov
imul
mov
jecxz
sub
adc
sar
jg
mov
repnz
jns
mov
mov
ljmp
addl
cmp
mov
push
aam
in
adc
test
bound
rorl
clc
in
adc
andb
sbb
nop
or
out
pop
sub
xor
mov
fidivl
dec
in
cmp
in
add
cltd
pop
ret
sub
addb
push
dec
xchg
and
cmp
testl
insl
add
sub
xchg
lea
cmp
pushf
pop
sahf
ret
jmp
lea
mov
mov
out
mov
inc
lahf
loop
lcall
addb
add
pop
pop
es
or
xlat
daa
es
mov
xor
in
adc
push
cmpsb
sub
mov
mull
test
push
enter
jmp
jne
bound
mov
mov
mov
push
movsb
jg
fbstp
push
pop
inc
js
jns
mov
adc
loop
push
lods
subl
lcall
imul
xchg
adcl
call
xor
push
stc
xor
cmp
loope
push
lods
sub
inc
mov
movsb
xchg
mov
iret
aas
fcmovne
dec
lock
adc
mov
pop
cwtl
lds
xchg
inc
adc
cwtl
and
dec
addr16
and
adc
ja
sbb
xor
jp
fs
dec
mov
loop
int3
xor
or
clc
jns
lahf
dec
and
mov
ja
xchg
cmp
dec
pop
jbe
mov
enter
inc
adc
fcompl
sti
jmp
imull
sub
mov
adc
ja
lcall
into
jp
outsb
lock
scas
outsb
or
dec
lret
mov
in
sbb
mov
xchg
pop
add
je
push
mov
pop
loopne
pusha
or
test
pop
sbb
jl
jle
sub
test
outsb
hlt
cld
shrl
int3
repz
or
jp
clc
cs
rolb
mov
lcall
cli
das
sub
jge
xchg
adc
jle
pop
add
jnp
push
insl
jmp
push
pop
insb
sub
test
cli
ret
in
or
in
xor
adcb
ja
add
xor
xchg
test
mov
dec
lret
jns
or
iret
scas
mov
loopne
movsb
adc
inc
popf
mov
add
push
adc
mov
mov
and
or
rclb
mov
adc
adc
call
inc
gs
test
bound
cli
push
pop
jl
mov
into
sub
sbbl
mov
xchg
add
das
add
pop
mov
and
dec
inc
popf
in
insl
movsb
insl
fidivrs
sarb
gs
es
pop
mov
inc
lret
sar
push
add
jmp
jl
sub
scas
pop
lcall
pop
sbb
pop
lret
inc
mov
fdivrp
clc
pop
lock
inc
mov
aad
xchg
mov
jp
daa
jne
mov
jb
jno
insb
sbb
sub
sbb
jl
jnp
mov
aas
mov
rcrb
loopne
sub
pop
and
inc
mov
xor
push
sub
mov
pop
nop
and
insb
inc
mov
mov
in
add
push
mov
repz
movsb
aad
sbb
push
pop
imulb
mov
lret
sub
cmp
and
sbb
adc
mov
jne
fst
mov
mov
jbe
jmp
jne
out
sbb
push
addl
jbe
xchg
add
loopne
iret
add
pop
insb
rclb
xchg
cmpsl
movb
pop
hlt
pop
and
xor
and
mov
lods
push
out
arpl
cmp
dec
xchg
test
sbbl
mov
inc
or
shll
mov
movsl
out
aas
sub
jne
lds
fcompl
test
idivl
aaa
loop
scas
push
imul
mov
dec
sbb
and
in
xor
jne
cmp
jl
dec
xchg
aad
inc
add
pop
cltd
inc
jbe
sbb
xchg
push
mov
xchg
shrb
int
push
jno
mov
inc
sub
idivb
pusha
loope
mov
out
add
lods
dec
mov
testl
cltd
fistl
enter
pop
mov
add
cmp
add
mov
sub
addr16
push
mov
shlb
jle
adc
sbb
and
and
or
or
inc
call
jo
inc
test
mov
subb
loopne
lock
sub
cmp
enter
call
jo
inc
test
mov
subb
loopne
lock
sub
cmp
enter
push
jo
inc
test
mov
jo
nop
js
or
sbb
sub
cmp
insb
fcomps
xor
pusha
mov
inc
test
mov
sub
seta
das
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
iret
outsl
test
lret
mov
push
adc
and
add
pusha
adcb
mov
cmc
lock
pop
adc
and
inc
inc
jne
gs
mov
pushf
subb
fdivr
in
push
repnz
adc
outsl
push
push
jp
or
push
add
pusha
in
test
stc
fucom
cmp
in
sbb
out
adc
mov
and
ds
sbb
xchg
mov
mov
adc
cmp
xor
sub
jmp
jno
in
sbb
mov
clc
out
std
imul
cli
test
fisubrl
fbstp
xchg
nop
push
mov
shrb
and
insl
push
xor
push
push
mov
jne
jp
in
jecxz
and
in
cmc
loopne
inc
cli
adc
mull
inc
clc
popa
popf
lahf
jne
test
push
mov
sbb
adc
push
xchg
push
push
mov
push
nop
test
xor
stos
shl
cld
pusha
or
sbb
push
jne
jl
out
loopne
shl
rorl
cltd
mov
inc
inc
dec
dec
cmp
and
xor
add
shll
repz
sahf
mov
push
jo
push
inc
xor
ss
adc
cld
mov
shl
movsl
ret
lods
mov
shl
in
adc
xor
inc
jne
gs
xchg
nop
test
aad
lock
adc
xor
inc
jne
gs
xchg
nop
inc
push
in
adc
mov
dec
push
shll
push
call
mov
scas
jle
mov
or
stos
push
lcall
lds
outsl
stos
clc
inc
push
ljmp
mov
test
xor
and
in
lods
jno
jge
inc
orb
xchg
pop
test
in
mov
lods
jne
fcompp
call
and
mov
pop
jle
lahf
adc
faddl
loope
dec
mov
and
fistl
sbb
neg
xchg
sub
mov
mov
inc
and
or
add
in
mov
mov
or
or
insb
movsb
repz
adc
test
jmp
getsec
scas
or
or
aaa
mov
mov
cmc
dec
cltd
cmp
cwtl
adc
or
jbe
dec
jp
sbb
nop
pop
nop
loop
adc
stos
sbb
fildll
push
adc
enter
and
push
mov
or
mov
xor
mov
in
mov
pop
stos
into
pop
mov
adc
inc
xor
aas
cs
outsl
aas
movsb
xchg
leave
inc
cmc
sbb
mov
sbb
outsl
les
push
xor
cmp
adc
testb
add
or
push
lods
insl
mov
push
inc
pop
mov
xor
enter
frstor
mov
sbb
add
xorb
inc
fs
sar
xchg
cmp
xchg
or
pop
in
add
les
shlb
or
mov
or
xchg
test
enter
inc
cmp
mov
call
dec
loop
jmp
lods
data16
xchg
imulb
and
popa
lds
std
mull
cmpsl
outsb
xor
and
mov
adc
and
pop
cmp
inc
dec
loope
outsl
adc
jb
movsl
lret
lcall
push
cmp
in
fldt
fwait
std
dec
lea
inc
mov
and
xchg
int3
xchg
push
lahf
push
pop
loopne
add
xor
repnz
pop
pop
sub
sbb
das
lret
inc
push
dec
popf
in
mov
jno
cmovnp
loopne
cmc
sub
or
mov
clc
inc
std
inc
shr
fisubs
out
pop
add
in
leave
sahf
add
mov
movnti
leave
in
pop
ja
xchg
cmpsl
pop
mov
repnz
jl
mov
psubusb
mov
arpl
clc
mov
jae
jle
mov
dec
mov
mov
std
sbb
int3
arpl
sub
dec
popa
push
jmp
aas
ja
mov
sub
icebp
dec
and
sbb
xlat
orl
add
inc
cmc
mov
dec
nop
daa
jp
jbe
aas
cltd
cmp
roll
ror
ja
and
dec
insb
andb
lods
lods
ljmp
call
xchg
and
in
or
sbb
adc
xor
iret
pop
data16
fstps
add
fxch
into
bound
jle
sbb
adc
add
push
mov
stos
inc
jae
fwait
sbb
push
pop
push
xchg
xchg
xchg
lahf
in
fnsave
inc
jg
xor
pop
dec
test
test
scas
mov
fwait
jo
or
mov
jge
mov
lods
mov
jo
mov
dec
shlb
lock
mov
out
enter
xchg
dec
pop
push
orl
outsl
std
fmuls
outsl
inc
cmp
ja
aad
xchg
cmpsl
imul
cmc
ror
sub
sub
push
mulb
test
pop
fisttpll
fistpll
scas
movsl
jmp
out
mov
insl
and
xorb
jns
hlt
aas
ds
shr
jbe
in
fdivl
adc
add
push
lods
data16
sbb
push
mov
add
ficoms
push
mov
dec
fs
shl
inc
mov
imul
arpl
pusha
fbld
jno
ret
push
pop
sbb
xor
pushf
mov
sbb
mov
imul
movsl
dec
repnz
mov
sub
ret
add
inc
dec
and
or
sub
push
pop
sub
lahf
add
dec
cmp
inc
nop
aaa
adc
cmp
jecxz
or
cmpsb
rclb
imul
mov
enter
xchg
mov
sti
push
pop
and
and
in
mov
xor
mov
in
dec
outsl
xchg
inc
jmp
bound
dec
mov
push
mov
lock
bound
movsb
iret
dec
or
sub
dec
jns
frndint
mov
fisubrs
xchg
xor
pusha
ds
enter
xchg
mov
inc
in
mov
mov
add
rcll
adc
and
sbb
mov
xchg
outsb
iret
out
mov
xorl
js
lret
push
add
ja
lret
pop
leave
movsl
or
xchg
repz
pop
xlat
xor
cmp
pop
or
fdivrl
cmc
es
pop
dec
aam
dec
out
mov
push
cmpsl
inc
mov
jp
jl
mov
sbb
push
jp
testb
pop
inc
adc
repz
mov
cmp
sbb
cld
cmpsl
push
movsl
lret
cmp
mulb
mov
shr
test
push
mov
jle
shll
arpl
das
sub
and
dec
jno
loopne
push
out
repnz
das
jns
call
insb
push
rol
in
mov
mull
mov
scas
xor
ds
push
sahf
add
and
adc
orl
adcb
cli
push
cs
out
leave
sbb
in
std
int
decb
pop
aad
les
scas
sub
pushf
outsl
popf
popf
roll
call
shll
test
fidivrs
xchg
jl
repz
dec
jno
xchg
lcall
inc
and
jbe
mov
insb
and
imul
call
mov
mov
cmp
xchg
sti
clc
or
xchg
xchg
push
jbe,pt
mov
jmp
sbb
push
testl
add
adc
mov
repz
sub
int
inc
sub
test
pop
sti
xchg
cmp
ret
dec
cs
es
loop
and
bound
subl
out
inc
ret
dec
ja
mov
rol
push
mov
jle
push
mov
push
lret
repnz
in
push
push
sbb
scas
ret
aas
and
jle
inc
stc
and
cld
int3
and
sbb
cmp
repnz
test
dec
das
pop
mov
mov
and
fistpl
pop
lods
xor
xor
jle
push
xorl
inc
jnp
push
cmp
dec
xchg
xchg
inc
sarb
dec
clc
sbb
test
jne
and
lods
sbb
pop
das
stc
into
pop
jge
xlat
inc
or
fs
repnz
mov
sbb
cmp
jmp
jbe
push
cmc
xchg
test
fs
shll
mov
mov
call
lahf
rcrl
dec
enter
jmp
fwait
and
push
add
add
mov
mov
insl
ds
bound
imul
xchg
int
cmpsl
nop
subl
xchg
sahf
and
and
xor
dec
and
xchg
test
adc
xorb
arpl
gs
in
xchg
test
jne
into
sbb
lods
test
mov
adc
push
push
jmp
push
push
leave
es
test
das
cs
cmp
and
xchg
xlat
xchg
in
jecxz
push
push
xor
adc
xchg
mov
arpl
fldl
mov
jbe
repnz
mov
fiadds
adc
lea
cltd
or
mov
test
add
scas
jp
inc
pop
sahf
sub
gs
rcrl
or
stos
test
push
arpl
notb
adc
inc
push
mul
jp
xlat
pushf
cmp
xchg
stos
fcomps
and
and
clc
mov
dec
push
out
inc
ja
jl
aad
sub
movsl
nop
in
fcomp
stos
popa
rcr
movsl
rorb
push
ds
mov
sbb
andl
ret
pop
or
ds
cltd
adcb
xor
jne
cmpsb
xor
shll
fisubs
arpl
and
sbb
outsb
fidivl
int
shl
cmpb
or
aaa
dec
lea
shll
mov
aaa
mov
pop
in
test
sbb
test
xor
add
fstps
xchg
insl
pop
flds
mov
out
ret
outsb
std
inc
mov
mov
xchg
mov
jl
hlt
iret
jmp
mov
mov
ret
ljmp
dec
outsb
shl
les
push
negl
arpl
or
mov
or
adc
jle
add
push
repz
sbb
shlb
lret
jl
addb
aad
adc
mov
adc
lea
xor
hlt
add
enter
mov
mov
fbld
and
scas
test
testb
and
mov
shll
xchg
andb
fistl
outsb
mov
hlt
icebp
sub
fsubl
mov
stos
test
mov
lds
push
stc
cmpsl
aam
pusha
call
cmp
push
imul
negl
xchg
mov
and
insb
xor
fldenv
xchg
mov
xchg
lret
in
jecxz
adc
xor
dec
fldt
gs
es
sbb
sbb
inc
daa
sub
gs
aad
mov
push
pop
mov
movb
dec
add
cltd
xchg
inc
fnsetpm(287
outsb
cli
in
outsb
cmp
cmp
fwait
popf
or
and
sub
mov
mov
xchg
lods
rcrl
mov
pop
out
out
pop
cmp
std
jmp
sbb
fwait
adcl
mov
xor
mov
je
ret
fidivrs
daa
inc
mov
test
std
repnz
sbb
movl
test
xchg
adc
lret
out
dec
mov
iret
dec
decb
push
sbb
pop
mov
inc
inc
lahf
jle
jg
mov
out
fldenv
xor
sub
lea
scas
loop
data16
lods
sbb
enter
imul
xchg
adc
sarb
ljmp
cmp
cmp
mov
std
add
ret
mov
shll
jns
repnz
push
sub
add
arpl
xor
movsl
sahf
lock
fstl
enter
cli
ss
insb
int3
pop
lret
xchg
sti
or
xlat
xchg
and
sub
sbb
test
inc
dec
popf
cmpsb
mov
sbb
lcall
cmp
in
sub
in
xchg
in
add
mov
jge
in
test
xchg
push
stos
pop
push
aaa
mov
jns
push
cmc
cmp
ljmp
out
addr16
pop
data16
in
mov
inc
sub
gs
sub
add
stc
hlt
pop
std
inc
das
aas
dec
les
enter
pop
and
inc
stos
mov
pusha
in
stos
or
pop
sbb
or
aas
into
push
mov
gs
mov
mov
adc
xor
fst
xchg
jno
inc
into
call
movsb
xchg
adc
pop
xchg
sub
aaa
aas
add
insb
insl
push
xchg
mov
psrad
pop
add
inc
pop
push
jl
imul
adc
mov
sub
mov
xlat
loope
ljmp
out
and
mov
repz
jae
cmp
jge
and
sbb
adc
mov
sbb
sti
add
fs
sub
sti
xchg
add
or
jo
adc
das
scas
xor
xlat
push
shrb
scas
daa
popf
lret
mov
pop
sub
cmp
mov
ds
fidivl
sub
xchg
mov
cmpsl
bound
sbb
divl
jno
scas
xor
mov
fbld
jne
bound
inc
or
stc
jo
push
sub
ja
sbb
xchg
pop
mov
inc
or
jb
push
stc
sub
inc
and
pop
shl
data16
inc
sub
xor
adcl
mov
cmpsl
pop
int
cmp
adc
pop
stos
scas
loop
popf
mov
pop
sbb
push
sub
push
dec
or
add
test
idivl
pop
xchg
call
pop
inc
mov
dec
adc
notl
jbe
data16
sub
mov
outsb
andl
sbb
fcmovnb
fstl
inc
fs
sub
cmp
addb
mov
ret
mov
sbb
mov
mulb
ljmp
shrb
dec
jl
jecxz
ss
inc
dec
xchg
inc
xor
negb
movsb
push
iret
jns
cmp
pop
inc
mov
out
rorb
mov
mov
aaa
cli
push
inc
jge
shrb
or
insl
pop
pop
xchg
loope
xchg
in
mov
lods
std
or
add
mov
dec
adc
cmp
in
jne
xchg
cmp
and
cmp
andps
pop
lds
pop
add
shrb
sti
aas
inc
imul
out
pop
ret
fs
or
jno
je
dec
ror
loope
pop
dec
sahf
sub
in
repz
adc
inc
out
xchg
lret
subb
into
imul
xchg
dec
outsl
xor
and
sub
sbb
cmp
push
add
dec
cmp
push
leave
mov
cwtl
sub
pop
push
lods
adc
data16
pushf
ds
gs
sbb
xchg
insb
das
adc
lds
add
push
adc
int3
xchg
fistpll
cltd
sbb
add
jg
mov
es
std
push
insb
cmp
add
in
test
leave
mov
push
sub
fs
adc
cmp
cmp
int
pop
mov
test
sub
orb
jge
or
pop
rol
ficomps
mov
or
jb
pop
pop
xchg
cmp
pop
inc
in
jle
insb
cld
out
sbb
inc
outsl
and
repnz
inc
fiadds
jecxz
xchg
shl
sbb
push
push
push
rorb
cmpsb
inc
and
mov
pop
sub
xor
xor
aam
push
das
in
movsl
inc
cmp
jne
nop
and
clc
lods
std
cmp
inc
sbb
add
movsl
test
call
lahf
push
ffreep
leave
mov
mov
mov
and
outsb
jb
sti
insb
jno
fdivrs
ljmp
inc
pop
mov
aas
shrb
push
out
mov
sahf
xor
mov
mov
jno
int3
fadd
push
enter
mov
sbb
mov
push
push
mov
inc
hlt
mov
mov
hlt
and
mov
pop
mov
inc
jle
popa
aam
cltd
and
dec
and
into
xchg
jb
and
push
nop
in
fldcw
mov
insl
sub
and
push
ljmp
push
and
and
xchg
jbe
aaa
xor
add
faddl
hlt
mov
call
inc
daa
subl
and
inc
lea
xor
dec
pop
test
pop
mov
cmp
cmp
jg
push
pushf
sbbl
lret
add
js
out
dec
or
rorl
clc
rolb
stc
or
repnz
inc
mov
imulb
mov
jbe
js
in
xchg
xchg
in
aad
fidivl
inc
mov
cmp
adc
adcb
push
or
add
sub
xor
rcrb
mov
and
push
inc
rcrl
xchg
mov
mov
leave
sets
or
adc
pop
push
xchg
push
hlt
mov
mov
aaa
mov
jp
dec
outsb
cs
lds
outsb
pop
sub
repz
xchg
pusha
gs
in
mov
xor
push
pop
lea
xchg
call
subl
call
mov
int3
pop
lds
cld
mov
push
das
add
aam
imul
sbb
xchg
mov
outsb
adc
out
dec
rclb
cld
xchg
addr16
in
fsubl
outsb
in
add
les
jmp
test
push
jbe
push
mov
insb
es
pop
inc
jae
stos
pop
scas
xor
rcrb
out
pop
lods
je
ret
or
jns
pusha
call
and
sub
aad
add
or
das
xchg
xor
or
pop
xchg
fwait
fwait
in
mov
es
rcrb
adc
sub
idivb
fiadds
dec
and
jmp
in
xor
pop
adc
inc
and
leave
dec
mov
int3
test
scas
fdivl
jne
push
pop
cmc
xchg
xchg
arpl
stc
test
int3
shrb
inc
push
inc
out
or
dec
call
and
push
outsl
jecxz
sbb
pop
je
pop
mov
pusha
adc
insb
clc
in
pop
push
cmpsb
dec
xor
jne
sbb
mov
xchg
hlt
push
xor
or
aas
out
sarl
pop
and
xchg
cmp
enter
sub
mov
lea
lea
mov
aam
and
mov
jns
xchg
xchg
xchg
add
addr16
lods
pop
jbe
call
ds
sbb
int3
mov
mov
inc
fnsave
fidivrs
loope
xlat
test
jg
fnstcw
mov
dec
addr16
ljmp
xchg
fwait
dec
xchg
pop
scas
lods
orb
push
sarb
rol
out
jb
imul
fists
call
mov
outsb
fcoml
popf
scas
adc
xchg
sbb
sub
push
or
js
in
scas
push
push
pop
jle
cmpsb
cmp
jne
bound
pop
adc
pop
call
out
enter
imul
lods
dec
icebp
dec
jbe
bound
mov
add
jp
outsl
movsl
negb
xor
dec
inc
cmpsb
mov
adc
jb
mov
sti
loopne
imul
sbbb
pop
clc
aad
mov
mov
pop
js
rorl
sbb
jns
scas
repz
lock
push
movsb
xchg
repz
out
loop
lahf
adc
pusha
adc
movsb
lods
xchg
scas
cli
cmp
dec
rcl
push
dec
cmp
mov
pushf
jl
nop
cmp
test
dec
sub
insb
xchg
adc
shrl
sahf
aam
sarb
mov
xchg
test
sub
gs
pop
push
mov
and
jmp
imul
xchg
push
cmp
dec
jae
inc
stc
jne
ds
add
je
test
xor
inc
sahf
xchg
pop
cmp
in
jle
pop
adc
loopne
and
popa
cli
jle
subl
je
pop
stc
cmovbe
or
lods
dec
lcall
shll
push
ret
adc
imul
std
repz
cld
pushl
jne
push
movsl
out
pushl
sbb
out
or
stc
fnstsw
adc
jle
mov
xor
mov
and
push
mov
data16
sahf
cli
fisttpl
pop
aam
rcr
lret
jmp
test
mov
popa
ret
pushf
mov
and
push
cs
cmpsb
outsb
inc
inc
ret
cmp
push
xchg
fs
sahf
and
outsl
mov
outsl
js
icebp
push
pop
leave
sub
pop
ss
in
mov
test
xchg
dec
dec
fdivs
vmread
adc
aad
xchg
add
lret
out
arpl
insb
and
lods
leave
sub
insb
sub
dec
roll
mov
dec
mov
test
sbb
xor
jno
inc
sbb
jb
cmp
in
mov
xcrypt-cfb
cmpsl
and
xchg
ja
pop
rcrl
adc
jp
mov
pop
shlb
sbb
xchg
cld
mov
push
nop
xor
sarb
test
das
sbb
aaa
adcl
cmp
push
or
or
std
aam
sub
adc
pop
lds
cld
jmp
mov
xchg
push
mov
fisubs
insb
xchg
test
inc
lret
fcmovnb
mov
arpl
aaa
call
mov
fcompl
cmp
xor
pop
popf
mov
cltd
outsl
pop
cmp
pop
cltd
push
repz
stos
fsubrp
not
mov
pop
mov
push
test
inc
mov
cli
nop
cmp
jo
add
movsl
enter
stos
jbe
stc
arpl
push
loope
fwait
sbb
adc
pop
insl
loopne
fnstcw
cmpsl
pop
fs
sbb
pushf
xor
jb
outsl
aaa
mov
mov
mov
mov
repnz
xchg
cmp
fwait
lods
out
cmpsb
and
ljmp
mov
dec
movsl
out
mov
fsubl
shl
in
adc
xor
inc
jne
gs
xchg
nop
test
aad
lock
adc
xor
inc
jne
gs
xchg
nop
test
mov
movsl
mov
cmc
lock
adc
xor
inc
jne
push
pusha
mov
mov
mov
jne
gs
out
cli
stos
lahf
xor
mov
mov
mov
mov
mov
scas
and
adc
add
jno
popa
inc
push
popa
inc
popa
mov
mov
mov
shl
roll
add
mov
popa
inc
push
jno
popa
mov
mov
mov
shl
shl
adc
and
add
pop
push
sbb
out
ffree
icebp
xchg
loop
les
imul
repnz
push
xchg
out
std
cwtl
push
push
fsubs
add
sub
push
shl
das
jns
imul
movsb
out
into
xor
inc
pusha
sbb
leave
int3
xor
subl
cvtps2pd
lahf
and
adc
adc
rcr
scas
sbb
xor
inc
lods
mov
mov
not
shl
rcll
mov
imull
mov
mov
dec
push
inc
jle
dec
jle
test
loope
push
mov
ja
xchg
into
jl
and
sahf
push
add
inc
orl
test
pop
jnp
push
out
inc
sub
and
adc
rcrl
mov
mov
shl
shl
adc
add
xor
and
popa
inc
push
jno
daa
lock
aad
clc
lock
mov
xchg
ret
xchg
xor
sbb
bound
jo
popa
push
xor
pop
add
std
in
hlt
stc
in
ret
movsb
test
je
jae
push
add
xor
xlat
cmp
shlb
fnstcw
icebp
shl
adc
add
xor
and
popa
inc
push
jno
popa
mov
mov
mov
shl
shl
adc
add
xor
and
popa
inc
push
jno
popa
mov
test
inc
outsb
int
adc
test
sbb
jnp
fidivrl
insb
xlat
pop
pop
cmpsb
push
loopne
mov
jbe
or
pop
push
mov
xlat
outsb
stc
stos
or
lcall
mulb
sbb
loope
popa
adc
jp
out
lret
outsl
jge
cmp
test
sbb
out
pop
fsubrl
ret
sbb
inc
icebp
ficompl
cmc
data16
aam
dec
jae
scas
mov
pushf
xchg
jl
pop
mov
mov
add
xchg
mov
mov
bound
mov
add
stos
mov
push
cmp
push
rorb
cld
or
js
pop
fsubrl
dec
push
fwait
dec
dec
inc
and
faddl
stos
pop
push
mov
aam
test
jbe
ss
inc
sti
xchg
xor
jb
mov
dec
or
ja
mov
push
inc
out
sbb
test
xor
rcll
mov
movsl
std
add
dec
lret
scas
test
ja
rorl
daa
gs
lods
cli
jp
repnz
pusha
inc
sub
lcall
sbb
pop
hlt
mov
scas
adc
pop
std
inc
in
outsb
ljmp
fiadds
inc
pop
fimull
cmpsb
fisttps
cmpsl
and
inc
mov
daa
fcmovnb
movsl
jle
repz
imul
pop
cmp
mov
xchg
shl
les
xor
test
push
cmp
imul
cld
adc
or
and
xchg
push
int
sbb
push
test
mov
popa
je
les
js
jb
fs
and
inc
in
add
stos
in
adc
dec
cmpsl
dec
in
mov
dec
fistpll
in
add
pushf
jo
shlb
or
mov
add
orb
test
sbb
bound
test
and
loop
cld
mov
sub
hlt
xchg
jo
inc
sti
mov
fldenv
dec
sbb
xchg
push
xchg
push
dec
popf
fs
mov
inc
into
sbbl
pop
imul
xchg
movsb
add
pop
ljmp
sbb
adc
cmp
and
jp
cld
flds
adc
jmp
push
sub
cltd
mov
outsb
jbe
stos
nop
mov
mov
xchg
test
shrl
sbb
mov
je
sbb
mov
loop
add
inc
cmp
sahf
jle
xor
jbe
aam
and
pop
mov
test
cmpsb
stc
sbb
mov
movsb
push
shll
icebp
clc
js
jmp
push
rclb
test
mov
xorb
inc
mov
stos
rcrl
ret
mov
clc
mov
les
adc
cmp
out
je
cmp
mov
and
cmpsl
xchg
inc
inc
jns
jg
adc
xor
push
or
mov
pop
push
popf
jmp
mov
xchg
sbb
sub
add
add
das
mov
nop
jb
cmc
roll
and
and
imul
mov
movsl
or
scas
out
mov
or
jle
push
push
or
addr16
shlb
push
lcall
cwtl
inc
push
lock
inc
int
push
fists
subb
aad
movsl
jbe
ljmp
rorb
inc
aaa
gs
das
loop
jbe
push
mov
shll
pop
adc
mov
mov
add
or
into
cli
cmp
sub
scas
push
in
sbb
cltd
sbb
in
mov
adc
mov
imul
mov
pop
add
push
testl
rorl
mov
or
jae
inc
sbb
pop
das
adc
xorb
xorl
dec
add
ljmp
xor
mov
jmp
fistpl
aaa
jbe
stos
stc
push
push
out
in
push
repz
stos
and
cmc
int3
lods
ds
movsl
jl
leave
pop
outsb
pop
std
fimull
ss
sub
testl
mov
mov
or
addr16
dec
cmpsl
xor
std
push
adc
sahf
inc
movsb
and
fwait
pop
fnstcw
jle
and
ficoml
jno
aad
dec
gs
mov
scas
ret
aas
ficomps
adc
mov
push
dec
punpckhbw
and
lock
pop
sub
adc
hlt
or
mov
loop
lods
test
sub
sub
pop
inc
dec
or
and
and
pop
push
dec
jnp
aad
pop
mul
daa
icebp
fnstsw
les
and
mov
into
leave
or
daa
or
and
out
loope
sub
xor
and
or
ret
negb
pop
ror
cmp
xor
xchg
xlat
xor
jno
pop
cmp
fdivp
push
jbe
mov
outsb
jmp
and
out
out
je
fcmovbe
shll
sbb
shlb
fucomp
jae
cs
fwait
mov
cld
sub
adc
popl
jns
and
jge
and
cmp
or
fsubp
idiv
mov
mov
xchg
add
outsl
cmp
sti
xor
mov
xor
xor
lret
xor
leave
or
movsl
int3
push
jns
or
xor
enter
daa
adc
cmp
pop
mov
xorb
cwtl
pop
shl
rclb
cwtl
jne
hlt
popf
lea
fsub
or
in
xor
rcll
xor
push
mov
fwait
or
and
int
icebp
or
testb
stos
je
push
cmp
cmp
rcr
xchg
adc
jle
js
sub
xchg
jmp
bnd
jp
sbb
paddd
cmp
gs
mov
adc
lea
movsb
cmp
iret
cmpsl
hlt
nop
pop
push
dec
mov
popf
out
mov
add
andps
pop
cmpsb
sub
fidivl
mov
or
lahf
lcall
sub
jecxz
xor
shl
xlat
clc
dec
pop
dec
or
fwait
loopne
adc
mov
adc
into
adcl
sub
aam
mov
cmc
jo
jecxz
shl
ja
sub
sbb
popf
outsl
mov
cld
add
xor
jg
xchg
fcmove
leave
aas
mov
add
fldl
bound
loope
mov
or
dec
into
add
or
mov
xchg
ds
xor
cmp
testl
add
xchg
shl
mov
or
sbbb
cld
and
xchg
and
add
mov
in
dec
dec
inc
pop
daa
pop
jb
push
dec
test
ljmp
aaa
dec
fidivrs
sti
dec
mov
lret
lret
pavgw
jl
lea
mov
adc
iret
pop
xchg
jg
and
pusha
pop
xorw
movsl
xor
jge
in
jb
xor
jecxz
in
adc
ret
fldl
add
add
stos
lcall
jp
pop
jp
mov
fdivrl
xchg
out
mov
mov
mov
pop
adc
xor
push
ds
mov
dec
rcrb
dec
mov
lods
sub
adc
xchg
lahf
repz
dec
xor
pop
sbb
jnp
jno
outsl
or
scas
or
xchg
mov
push
xchg
ljmp
sub
sbb
mov
ret
lret
mov
fisubrs
out
nop
dec
test
mov
ja
cmp
mov
or
push
jmp
je
repz
iret
enter
insb
sub
xchg
inc
lods
xchg
dec
mov
mov
inc
and
sub
mov
fisubs
data16
cmp
jno
jns
js
movsb
xchg
fadds
inc
shrl
in
fiaddl
add
push
mov
or
mov
push
gs
push
stos
test
or
shrl
daa
cmp
icebp
xor
mov
xor
cld
enter
adc
fxch
jo
xchg
hlt
and
push
xor
mov
call
js
nop
dec
and
fxch
push
cmp
stos
dec
scas
sbbb
mov
icebp
lods
xlat
insb
mov
fs
es
dec
dec
sub
adc
add
insl
iret
mov
or
pop
sub
movb
pop
divl
aaa
sbb
dec
jne
or
insl
inc
aam
sahf
outsl
popf
pop
xchg
mov
cmp
fldt
fiadds
jmp
add
xor
std
imul
pusha
je
or
fistpll
push
loope
cltd
addr16
mov
push
dec
push
add
ja
daa
dec
dec
xor
or
cli
data16
fiadds
imul
mov
pop
js
adc
stc
dec
loopne
mov
subl
sub
jge
shll
jae
inc
repnz
sti
xchg
xlat
cmp
xchg
nop
or
aad
add
and
popa
mov
scas
cmp
testl
sub
popf
mov
or
add
roll
pop
mov
mov
mov
push
lods
or
mov
je
divb
inc
cltd
inc
mov
pop
xor
les
insb
loope
dec
sbb
pop
jne
stos
sahf
mov
jbe
or
test
sti
fisubs
or
dec
mov
dec
test
or
cmpsl
ljmp
mov
es
add
xchg
and
add
outsb
mov
xchg
cwtl
dec
mov
sti
cli
xor
mov
sbb
test
and
int
pop
mull
push
fbstp
xchg
jl
jge
repnz
jmp
mov
jle
movsb
push
popa
sub
in
or
sbb
pop
addr16
movsl
ljmp
ja,pt
jge
in
leave
cmp
or
js
ds
lods
inc
pop
jmp
sahf
clc
pop
jns
add
lock
jno
call
sahf
dec
stos
and
rolb
sbb
repnz
mov
inc
shll
mov
into
jl
xchg
insb
mov
xchg
xor
fsubl
ret
sub
xchg
rcr
mov
mov
movsl
sets
mov
cmp
cmpsl
cmp
sbb
cmc
das
push
arpl
cmpsl
call
inc
movsl
gs
jns
std
repz
test
mov
push
repnz
fs
sub
sbb
fcomps
adc
leave
xchg
add
sarb
mov
adc
jbe
adc
cmp
push
jns
flds
pop
scas
xor
test
lock
jno
jnp
dec
mulb
arpl
leave
ficompl
cmpsl
repnz
pop
jmp
ror
negl
pop
iret
dec
icebp
mov
dec
subb
adc
pop
je
out
sbb
out
bsr
cmp
lahf
rcrb
push
ret
adc
iret
mov
jae
push
lcallw
aam
dec
pop
sbbb
pop
rcrl
pop
cmp
pop
call
adc
sbb
pop
push
outsb
xor
xor
lret
push
popf
subb
jl
movb
pop
jno
ja
cld
les
mov
addr16
iret
inc
jae
test
jecxz
je
dec
cmc
cmp
out
xchg
das
arpl
push
pop
mov
jbe
jnp
negl
and
scas
push
xor
lea
fldenv
sbb
add
and
pop
rol
iret
sbb
jne
dec
jge
or
pusha
cmpsb
aaa
xchg
inc
xorb
popa
out
test
aam
and
pop
xchg
movsl
dec
out
fwait
mov
mov
jae
jne
sub
and
mov
test
jae
add
imul
jl
mov
xor
cmp
sbbb
imul
inc
pop
mov
add
sub
dec
test
adc
mov
out
cmp
mov
xchg
jns
and
xchg
sub
adc
js
push
pop
mov
push
jl
cli
cmp
scas
sub
jl
inc
leave
bound
ret
lcall
mov
cmpb
leave
lea
lret
scas
push
adc
and
xchg
xchg
shrl
pop
push
jmp
xor
jo
add
and
mov
cli
push
push
mov
rol
add
xchg
cmp
and
inc
lret
nop
loopne
or
xchg
ds
lods
or
pop
push
sbb
mov
sbb
mov
aas
xchg
mov
ljmp
pop
dec
loope
test
or
lcall
jecxz
jmp
sahf
test
stos
fldl
and
adc
sub
mov
outsl
clc
rorb
jecxz
xchg
push
in
cmp
and
pop
lds
xchg
push
in
out
or
mov
sub
test
insl
fnstsw
fwait
mov
test
stos
subb
pop
or
xor
loope
stc
mov
xchg
out
pop
insl
imul
in
iret
lret
insb
push
mov
adcb
xchg
fdivrl
mov
stc
test
mov
mov
imul
mov
std
jg
int
ljmp
add
dec
enter
rcrb
push
std
div
and
xchg
rorl
push
in
loopne
loopne
push
or
add
push
lea
cmp
loop
jne
sbbl
lret
jmp
push
mov
inc
dec
sbb
adc
mov
add
into
lahf
sbb
cmpxchg
jecxz
xchg
out
add
fsubrl
out
sarb
jle
repz
andl
lods
sahf
mov
cmp
xchg
subb
aam
fldt
std
jmp
sti
hlt
inc
ds
mov
mov
sub
je
pop
jae
dec
inc
sub
push
pop
push
adc
js
add
andl
xchg
mov
and
stos
fimuls
mov
loopne
lret
sahf
ljmp
cmc
push
jge
pop
adc
or
aaa
inc
sub
sub
cmp
mov
enter
add
push
ds
cmp
pop
aaa
and
cmp
insl
jne
popa
int3
adc
je
rcl
dec
leave
xor
xchg
stos
and
lods
cli
out
and
xor
mulb
orb
roll
pop
out
cwtl
iret
add
push
fists
jb
dec
jb
adcb
fstps
dec
add
fisttps
xor
push
and
xchg
jle
jl
pop
adc
ja
pop
dec
cld
aas
dec
xchg
in
jg
mov
add
jnp
lods
imull
nop
sub
sub
pop
std
inc
mulb
lds
mov
icebp
js
push
mov
jae
and
shrl
idivl
sub
and
xor
shlb
and
xor
and
pusha
push
add
or
fwait
cmc
sbb
pop
ret
xchg
inc
mov
and
ljmp
xchg
mov
insl
loop
in
jo
imul
call
mov
lods
lea
jae
cmp
and
lock
sub
mov
int3
xchg
aaa
cmpsb
add
xchg
xor
mov
xchg
bound
mov
pop
int
ja
aam
jne
rcr
dec
shrb
push
xchg
das
repnz
rcr
and
imul
lcall
cmp
pop
mov
int3
push
outsb
xchg
ds
outsl
outsl
lock
sbb
adc
xchg
mov
mov
jo
test
push
outsl
mov
mov
inc
push
arpl
mov
dec
xchg
jmp
adc
data16
pop
pop
int3
bound
mov
and
call
mov
out
add
pop
xchg
and
dec
cmp
cmp
push
ret
jne
jno
push
mov
jge
pop
cmp
sti
insb
mov
and
loopne
std
fsubl
push
xor
mov
dec
ja
cmp
jmp
popa
clc
mov
icebp
mov
jnp
xchg
out
aas
and
mov
push
lds
mov
push
jmp
mov
sarl
data16
add
jl
push
clc
inc
test
inc
sti
into
xor
or
loope
addb
inc
in
ds
inc
es
cmp
push
fcomi
daa
sub
inc
sbb
or
mov
push
ja
pop
fs
push
loop
push
sub
out
rdmsr
fs
pop
jo
in
cld
iret
lock
dec
sti
cmp
ret
xchg
mov
jns
lods
in
lcall
push
mov
mov
xor
stos
and
lcall
aaa
pop
sub
sbb
dec
in
mov
lret
xchg
lea
mov
add
test
adc
icebp
insb
sahf
sub
jbe
test
lcall
aam
or
fs
add
in
mov
mov
lret
das
cltd
adc
icebp
mov
xor
inc
and
pop
sti
push
mov
lds
inc
fs
cs
ror
mov
lcall
lret
lret
repz
and
sub
fwait
push
cwtl
xchg
je
call
jmp
sbb
out
dec
cmpsb
jnp
jp,pn
pop
ss
and
std
les
notl
fwait
mov
sub
pop
shrb
mov
xchg
ljmp
in
cltd
enter
out
fsub
mov
testl
ss
mov
lds
adc
enter
clc
adc
push
mov
jb
inc
jnp
cwtl
rcll
cmpsb
add
test
mov
lret
and
dec
mov
into
jmp
xor
pop
mov
out
mov
dec
push
jo
dec
pushw
lods
int3
mov
stc
fnop
int
mov
mov
xchg
lods
and
addr16
push
out
jge
ljmp
and
scas
push
mov
mov
in
inc
or
xchg
add
jmp
movsl
mov
repnz
sti
loope
pop
xor
aam
arpl
mov
test
or
inc
pop
daa
mov
jle
in
scas
fdivs
icebp
testl
and
popf
rol
adc
dec
inc
daa
clc
in
fcmovne
push
popa
xor
push
cli
or
fprem1
xchg
lret
aaa
mov
jb
xchg
lds
cmp
sbbl
out
clc
pusha
dec
test
sti
or
xor
stc
dec
adc
cltd
push
enter
hlt
jae
jmp
push
pop
push
and
fists
arpl
sub
or
sub
fnstenv
insb
popa
les
scas
pushf
pop
iret
lret
out
mov
xchg
daa
aam
pop
sarl
jecxz
xchg
fildll
and
in
xchg
xchg
jb
idivb
cs
mov
cmp
inc
cmpsb
add
cmp
ljmp
pop
push
mov
int
lds
daa
pusha
jmp
mov
int3
xchg
cwtl
stc
insl
out
xchg
aas
adc
mov
and
xchg
repnz
mov
and
insb
inc
les
mul
pop
jle
push
mov
push
dec
aas
into
jmp
aam
pop
mov
inc
mov
inc
ss
sbb
stos
int
sbb
mov
cmp
mov
sbb
lretw
mov
movsl
and
mov
insl
jo
mov
cmp
sbb
push
mov
add
daa
cld
pop
mov
es
mov
lods
lods
ss
cvtps2pi
test
inc
loope
or
les
sbb
cld
fmuls
adc
push
pop
sbb
mov
in
addl
lret
pop
push
sub
into
fnstcw
pop
push
sti
addr16
repz
and
sub
testl
mov
in
mov
sub
sub
mov
in
inc
jb
daa
out
xchg
hlt
mov
lods
bound
cmp
fcmovu
fisubs
enter
xor
push
or
shlb
xchg
addr16
lret
ret
dec
jbe
and
fstpt
adc
sub
lods
loop
jmp
push
jp
lds
inc
popf
stos
pop
sarb
xchg
mov
dec
add
fisttpl
inc
sahf
mov
cwtl
sahf
add
mov
adc
repz
jecxz
ss
or
or
jb
pxor
hlt
movsb
fwait
in
ss
andl
popf
pushf
cmp
out
bnd
pusha
inc
pop
out
call
inc
add
mov
add
out
mov
cltd
lea
rcl
hlt
out
sub
and
xlat
or
add
repz
fwait
mov
push
xor
mov
lods
jle
outsb
aas
bound
stos
xor
sahf
in
inc
xchg
sbb
dec
pop
xor
mov
aad
nop
bound
inc
mov
std
or
aaa
add
dec
mov
dec
inc
adcb
fiadds
dec
add
dec
imul
imul
dec
xchg
xchg
lcall
push
lock
loop
pusha
in
ja
sbb
cmp
cmp
adcl
icebp
shl
adc
add
xor
and
popa
inc
push
jno
popa
mov
mov
mov
shl
shl
adc
add
xor
and
popa
inc
push
jno
popa
mov
and
jno
loope
shl
inc
loope
adc
add
xor
and
popa
inc
push
jno
popa
mov
mov
mov
shl
shll
adc
stos
mov
fsts
mov
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
pop
inc
cli
push
jb
bound
push
imul
dec
ss
repnz
notb
cmpsb
mov
push
jb
bound
push
add
xor
and
add
fsub
loop
xchg
xchg
xchg
mov
mov
push
hlt
data16
jbe
push
dec
push
push
fidivl
sar
scas
mov
fdivp
mov
inc
bound
add
xlat
ss
roll
add
jg
dec
adc
mov
std
jmp
push
jnp
mov
out
notl
inc
adc
add
xorb
sbb
and
mov
push
cmp
ss
xchg
movsl
inc
pop
std
mov
mov
aaa
bound
pop
std
push
xor
and
cmc
xchg
ret
loop
sbb
cmpsl
pop
pop
xchg
xlat
fstpt
mov
push
sub
adc
loope
popa
dec
adc
cmpsl
xlat
out
ret
inc
scas
lea
add
in
repz
notb
jns
divl
inc
push
jb
push
jbe
push
inc
push
xor
lcall
out
div
xchg
and
xor
and
jl
ja
and
inc
mov
cmpl
jmp
out
and
rcll
lret
test
arpl
pop
dec
push
ss
lcall
jecxz
and
jno
add
and
push
push
push
xor
and
rol
ret
out
notb
cmpsb
mov
push
jb
bound
push
add
xor
and
rol
ret
out
notb
cmpsb
mov
inc
ficoml
mov
and
lcall
cmp
into
inc
jo
adc
nop
sbb
mov
mov
pop
mov
inc
cmc
lret
adc
lahf
add
bound
mov
in
or
mov
int
push
dec
out
cld
jne
dec
nop
out
jns
push
lret
adc
mov
fsts
push
ljmp
rclb
and
xor
mov
push
loope
insb
sbb
fstpl
add
mov
addb
mov
xor
inc
or
mov
adc
inc
mov
js
jecxz
mov
les
stos
xorb
stos
jae
adc
jae
sub
fsubrs
ret
dec
mov
mov
or
imul
leave
sub
mov
repz
sub
in
xorl
inc
out
inc
mull
jge
orl
adc
lret
adc
or
jecxz
mov
pop
dec
enter
divl
enter
arpl
or
sahf
adc
cmp
mov
sbb
aas
mov
es
inc
push
inc
daa
xchg
insb
popf
fs
int3
mov
daa
int
ret
adc
std
sbb
mov
inc
ljmp
or
inc
adc
jns
dec
es
and
cmp
cli
xor
mov
pop
add
std
mov
xor
sub
insl
mov
cmp
mov
or
xchg
cmp
dec
cmp
mov
add
and
sub
cld
pop
cld
adc
mov
mov
into
and
push
jbe
inc
mov
push
cmp
mov
push
sbb
imul
sarl
ffreep
mov
adc
lds
cmp
jmp
das
add
dec
lods
flds
sbb
enter
push
mov
lret
repnz
cli
mov
push
shll
sbb
jnp
xor
mov
xchg
lahf
cmpsl
repnz
add
push
scas
and
sbb
das
iret
mov
sub
adc
fsts
add
adc
frstor
push
mov
scas
cld
imul
adc
lds
in
xor
mov
aad
cmp
aas
ret
or
data16
fimuls
mov
xchg
push
fistpll
aam
jno
insb
shrl
test
movsl
gs
mov
inc
addr16
jmp
lods
mov
loop
add
xlat
subl
dec
mov
test
call
lods
jp
cmc
and
mov
imul
jmp
add
shrl
out
cltd
mov
pop
xor
aaa
repz
repz
icebp
and
fs
jmp
inc
mov
jns
lea
jmp
ja
push
push
jno
mov
movsb
jmp
jmp
test
jnp
xchg
jbe
jmp
cmp
stos
push
je
and
jl
int3
sub
add
movsb
xchg
push
outsl
jl
stos
jbe
test
push
in
lret
int3
mov
pop
pop
push
in
aam
ficompl
sbb
mov
insb
dec
push
sahf
std
ret
mov
and
aaa
fcomp
ljmp
gs
lea
fstl
subb
dec
add
repnz
sbb
popf
cmp
fcoml
sbb
fbld
in
cld
xchg
inc
popa
sub
xor
jns
dec
add
mov
sub
mov
jmp
bound
sbb
cmpsl
das
fldl
popa
pop
les
out
cmp
push
fcmovbe
cmpsl
aad
mov
inc
and
out
fsubp
das
test
or
push
pushl
mov
imul
jbe
and
inc
add
loopne
lret
inc
pop
fisubrs
jns
pop
mov
lret
inc
out
into
xchg
jmp
aaa
pusha
jg
pop
outsb
xabort
loopne
and
jb
cmp
subl
sub
lods
sub
sbb
jge
inc
pop
ss
and
mov
sti
mov
insl
in
mov
es
inc
xor
lock
mov
adc
fmuls
sti
xor
pop
loop
cld
fwait
std
outsb
das
jo
shl
popf
inc
cld
int
add
ficoms
push
lcall
sbb
xchg
pop
dec
push
cs
push
sub
in
rclb
loopne
sub
add
push
pop
sti
sarb
jns
cmp
sub
dec
jne
push
fcmovnb
add
and
imul
jg
stos
push
popa
loopne
ret
add
sub
sbb
inc
gs
rcl
mov
dec
jns
xchg
or
jmp
and
lret
cmpl
cmp
fmull
pop
int
js
clc
pop
push
lock
pop
cmp
call
mov
xor
and
add
jne
cmpsl
aaa
fstps
xchg
dec
cmp
loop
add
sarb
divl
cmc
roll
adc
or
push
inc
ret
jl
icebp
adc
xchg
repnz
shl
sti
ljmp
ja
dec
inc
push
mov
sbb
scas
ret
hlt
and
cltd
add
lret
aam
sub
stos
mov
daa
test
mov
xchg
or
pop
pushf
lret
sbb
aad
and
and
imul
jg
loopne
xor
aas
dec
aad
repz
fs
pusha
imul
and
xlat
push
sbb
jbe
out
in
je
mov
mov
ja
pop
loopne
push
adc
mov
fistl
pop
ljmp
mov
outsl
mov
rolb
inc
mov
test
aaa
or
sub
test
subl
push
or
incl
sarb
push
xor
jle
xchg
jmp
out
test
and
fstps
out
sbb
mov
ficoms
push
jge
fmull
sbb
add
mov
push
inc
ja
jmp
mov
mov
lahf
xorb
loopne
pop
pusha
mov
scas
mov
push
mov
fs
cwtl
outsb
cmp
or
fldt
add
mov
addr16
int
mov
mov
pop
pop
loope
lcall
cmpsl
ss
mov
dec
pop
mov
lcall
in
rol
dec
jne
or
cmp
cmpsb
icebp
outsl
ret
mov
arpl
icebp
je
jno
mov
fisttpl
and
lock
mull
je
stc
arpl
xchg
test
test
cmp
sub
ds
jge
mov
sbb
jns
test
jp
out
into
aad
out
mov
popa
mov
incb
jmp
leave
mov
enter
in
idivb
stc
push
fdivr
adc
pop
inc
ret
shr
adc
fdivrs
adc
rol
jp
mov
fs
shr
dec
in
cwtl
mov
push
outsl
pop
and
iret
push
mov
cmpsl
cmp
imul
inc
repnz
push
loopne
xchg
sub
lds
jo
jb
pop
outsb
rcr
push
int3
add
into
mov
fidivl
ljmp
je
lret
loop
hlt
addr16
rorl
das
pop
cld
mov
in
cmp
test
and
push
jae
jns
push
pop
push
rol
test
cmp
and
clc
xchg
lea
jbe
add
adc
pslld
vrcpss
rcll
imul
out
cmp
repz
or
pop
jp
jo
xor
call
sbb
stos
add
push
and
dec
mov
dec
aaa
inc
xor
dec
and
inc
leave
or
sub
mov
loope
push
clc
std
faddp
jne
hlt
inc
loopne
mov
add
daa
sbb
pop
mov
lock
or
or
shlb
push
push
mov
lret
or
push
push
test
or
xchg
jno
push
push
bnd
sub
movb
mov
add
xchg
xor
filds
inc
int3
icebp
jns
shlb
rorb
mov
add
imulb
cs
stos
add
int3
fiadds
pop
pushf
test
adc
jmp
mov
pop
pop
mov
mov
insb
sbb
cmp
mov
loope
cmp
mov
inc
inc
adc
dec
mov
out
and
mov
dec
xchg
jg
in
lcall
pop
xchg
jmp
pop
pop
mov
mov
in
pop
int3
add
shrd
es
jnp
jns
jb
jl
pop
push
in
inc
mov
int
dec
cwtl
cmp
outsb
add
adc
push
mov
test
push
add
dec
mov
xor
lods
lea
cmc
mov
or
nop
out
icebp
push
mov
jecxz
std
push
aaa
xor
cmpsl
push
add
lcall
fistl
or
lret
and
jp
xchg
rorb
push
jecxz
pop
inc
mov
mov
or
mov
jbe
adcb
dec
mov
movsl
add
pop
mov
add
or
bound
movsl
xorl
pop
mov
fbstp
push
or
add
jb
sti
pop
std
rolb
mov
adc
data16
dec
leave
sbb
pop
sbb
dec
aaa
gs
sbb
mov
pop
adc
lods
xor
flds
pushf
xor
xor
scas
cmc
jecxz
lods
movsb
in
mov
xlat
pushf
pop
sub
pushf
or
mov
add
dec
xlat
mov
inc
sbb
dec
scas
insl
repz
mov
xor
jmp
adc
leave
aas
mov
dec
cld
lret
es
sbb
arpl
mov
notb
and
aas
xor
bound
ret
sbb
fmull
in
cmc
imul
sub
hlt
mov
jge
mov
cmp
lahf
adc
movsb
lods
pushf
inc
repnz
cmp
outsl
mov
mov
outsl
lahf
or
inc
js
push
jecxz
lods
sar
xchg
ret
jmp
and
divps
adc
mov
shlb
int
cmpsl
xchg
dec
push
adc
push
and
pushf
aas
sub
shrb
and
dec
aaa
mov
out
mov
fwait
sbb
movsl
pop
cmp
mov
and
test
inc
add
fdivrl
les
pop
adc
inc
mov
xchg
jne
adc
shrb
adc
add
pop
jne
add
insb
in
xor
loop
pusha
mov
addb
or
add
xchg
adc
mov
xor
and
mov
adc
in
call
add
mov
popf
call
push
and
aaa
pusha
xchg
into
cmpsb
lea
inc
jne
call
fistps
enter
dec
adc
push
orb
adc
lea
add
mov
or
ljmp
cmp
cmpb
dec
scas
loope
xchg
scas
das
xchg
clc
or
aaa
xchg
hlt
xor
xchg
cmp
sbb
add
and
addr16
test
xchg
pusha
add
xor
xchg
cmc
inc
pop
dec
and
xchg
psubsb
scas
adc
inc
jecxz
mov
and
push
gs
and
sub
out
cmpl
sti
push
cmp
adc
mov
icebp
out
mov
dec
aam
pusha
or
push
popa
in
adc
test
jle
movsb
cmp
or
mov
sbb
sub
xor
adc
adcb
ret
jnp
movsl
xchg
pop
jmp
xchg
add
js
push
js
daa
into
pusha
add
loopne
in
push
and
mov
das
xchg
test
jmp
fucomip
out
sbb
dec
les
mov
sub
lcallw
ret
popa
nop
cld
call
pushf
mov
or
ret
mov
cli
ljmp
ljmp
inc
test
daa
mov
js
imul
pop
das
js
inc
call
jecxz
mov
dec
lods
popa
stos
xchg
jno
mov
xor
and
sarl
negl
test
xchg
stos
in
andb
repnz
fcoml
lock
les
sbb
mov
fwait
mov
inc
imul
test
push
int3
int
cmp
mov
les
pop
push
leave
mov
dec
in
cmp
pushf
mov
jo
mov
push
rcr
stos
pop
mov
cwtl
jno
outsb
ljmp
mov
push
aam
xchg
push
add
sahf
sub
xchg
daa
push
pmulhw
sub
inc
stos
add
out
loopne
adc
xorl
xchg
leave
mov
stos
pop
loop
push
xor
jg
loopne
dec
xor
inc
into
cmp
cmp
inc
jmp
shlb
inc
push
out
fistpl
aam
sbb
adc
xor
sub
xor
mov
sarl
es
popl
bound
jle
pushf
adc
mov
das
sub
or
inc
insl
xchg
arpl
jecxz
out
add
push
mov
mov
jae
jge
inc
les
mov
pop
add
cmp
adc
sarb
xchg
movd
jge
sbb
aas
sub
jb
xor
pop
loop
aam
mov
idivb
jne
push
push
shl
adc
push
mov
cmp
insb
imul
adc
fistpl
cmp
scas
imul
nopl
xor
push
or
stc
mov
mov
int3
stos
jae
inc
lods
lahf
test
popf
cmp
int3
push
std
fidivl
ret
stos
jl
test
pop
mov
and
das
jl
shll
insb
out
adc
push
nop
adc
fs
mov
xor
push
jle
stos
fisubl
jp
inc
test
xchg
mov
mov
andl
jnp
cs
out
lahf
xchg
pop
sti
lock
cmp
imul
push
mov
les
mov
push
push
inc
rcll
dec
in
mov
lret
cli
cs
mov
daa
jecxz
or
push
lods
movsl
inc
xchg
cli
pop
sbb
sub
inc
add
xor
loopne
xchg
aam
repz
ret
jmp
test
cld
aad
ljmp
jge
and
cmp
lea
mov
mov
stc
pop
cwtl
inc
adc
add
test
jecxz
cli
and
mov
inc
inc
and
sbb
pushf
dec
jge
dec
fldl
stos
sbb
jmp
lea
add
icebp
mov
adc
push
adc
icebp
mov
xor
js
lds
lcall
js
push
addr16
mov
add
xor
lcall
call
jecxz
insl
push
sub
cli
xlat
push
push
dec
repnz
in
stc
out
push
cli
dec
add
sub
mov
fcmovbe
dec
and
out
dec
shrl
arpl
ljmp
cwtl
jmp
fstps
repnz
push
cmp
imul
test
sub
cmpsl
movsb
test
cmp
inc
inc
xlat
lret
fisubrs
flds
and
xor
xor
arpl
lret
out
push
std
xchg
fxch
lret
pop
arpl
fdivp
cmpsl
inc
enter
mov
addl
sarl
aam
cmp
mov
xchg
or
dec
imul
mov
sub
push
mov
xchg
jmp
fdivl
jge
jecxz
lret
loopne
cli
pop
jnp
jb
dec
or
mov
mov
das
pop
pop
xor
sbb
test
fisubl
jb
mov
xchg
sub
sbbb
out
sbb
dec
mov
out
inc
cmp
lds
pop
pop
jp
pop
lcall
adc
mov
dec
stc
mov
imul
iret
test
adc
ljmp
sub
lahf
sbb
fbld
test
jo
mov
sub
cltd
pop
mov
and
xchg
rorb
adc
fisttpll
les
mov
iret
pushf
pop
out
in
xor
ficoml
mov
fiadds
lcall
mov
lea
jns
and
adc
xor
repz
pop
je
and
ret
mov
stc
mov
or
movsb
adc
lret
addb
inc
leave
pushf
ja
jg
jne
aaa
xlat
stc
stos
add
add
ds
inc
filds
jae
sbb
test
xor
adc
sahf
cmpsl
popf
push
mov
jb
iret
mov
mov
rcrb
xor
icebp
pop
loopne
movb
or
mov
neg
fstl
mov
mov
mov
fbstp
fistpl
mov
sbb
mov
mov
cmc
sar
outsb
ret
test
jmp
add
mov
fwait
push
mov
sarb
test
enter
mov
jg
dec
gs
mov
ror
jl
stc
inc
not
ja
mov
push
xchg
and
and
in
xor
enter
adc
push
mov
adcl
icebp
into
hlt
insl
shrb
fdivrs
cmp
mov
js
mov
aas
leave
in
aaa
inc
test
dec
hlt
sub
psraw
in
pusha
push
mov
xchg
in
mov
lahf
fiaddl
fs
inc
cmp
aas
cld
scas
xchg
outsl
in
dec
adc
int3
lods
out
jo
int
notb
add
rorl
idivb
xchg
mov
and
outsl
in
test
icebp
sub
enter
into
mov
push
jecxz
mov
mov
arpl
rcr
cmpl
icebp
sbb
lret
pop
xor
pop
inc
bound
inc
andb
jecxz
push
cs
mov
xor
scas
push
out
or
scas
movsl
scas
js
mov
xchg
loope
punpcklbw
or
lods
andl
aad
push
pop
mov
sbb
lds
cmpsl
jp
or
mov
add
ljmp
fwait
push
iret
xlat
jbe
mov
ljmp
inc
aaa
dec
lods
jb
je
jae
mov
sbb
imul
cmp
mov
ret
xchg
jecxz
pop
or
inc
shl
sub
fsubs
or
mov
mov
stos
adc
pop
sub
movsl
ret
out
sub
lods
rcr
push
cltd
loopne
mov
cltd
xchg
or
xchg
mov
xchg
pop
fmuls
hlt
lret
sti
dec
lods
pop
mov
aam
and
and
pushf
insl
mov
andb
ret
ss
dec
cltd
xchg
dec
outsl
test
dec
cli
adc
mov
jl
sub
fwait
aam
loope
loop
mov
xor
or
sarb
js
adc
aam
push
inc
and
iret
mov
in
aad
lcall
jo
mov
je
out
loopne
ss
push
dec
out
mov
popa
xorb
sbb
jne
lret
lods
subb
fwait
and
in
out
add
fwait
pusha
stos
or
cli
js
mov
imul
xlat
test
pop
mov
dec
xchg
cmp
or
and
cmpsb
or
pop
inc
subb
adc
fwait
xchg
add
add
sub
aas
push
pusha
sub
lea
mov
call
pop
mov
sub
cmp
inc
in
shrb
or
jbe
add
or
pushf
or
lahf
mov
lret
dec
ljmp
adc
dec
inc
nop
mov
outsb
repz
shlb
rorb
pop
out
cli
inc
jg
cmp
add
jmp
sti
inc
dec
data16
outsb
mov
ds
or
or
mov
pop
xchg
sbb
mov
out
jne
pop
cmc
repz
xor
lret
repz
sub
mov
jnp
addr16
add
leave
stc
pop
data16
imul
or
adc
mov
data16
adc
out
loope
enter
jecxz
adc
xchg
adc
push
xchg
adc
and
cli
bound
ret
push
inc
stc
rcll
sub
sub
repz
ss
cmp
popw
and
shlb
cmp
mov
dec
ja
dec
iret
xor
mov
arpl
jo
ja
pop
mov
std
xchg
je
test
in
mov
pop
jle
add
leave
push
rcrb
push
push
xor
ja
jo
mov
jl
pop
push
das
lods
sub
or
push
gs
daa
imul
sbb
cs
or
outsb
outsl
stc
call
push
outsl
sub
pop
sub
mov
jle
adc
add
xor
and
rol
ret
out
notb
cmpsb
mov
push
jb
bound
push
add
xor
and
rol
ret
out
notb
cmpsb
mov
push
bound
ja
push
push
push
xor
and
mov
sti
out
notb
cmpsb
xchg
mov
inc
outsb
push
cli
dec
jb
push
adc
sarb
cmp
and
pop
pop
dec
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
push
sbb
jb
aam
test
inc
lret
das
xchg
shll
repnz
loop
xchg
and
xor
adc
adc
in
hlt
jb
aam
movsb
add
retw
fs
xchg
inc
and
add
adc
std
inc
hlt
jb
int
mov
and
xorb
push
xchg
gs
pop
icebp
push
lret
adc
in
popf
jb
or
dec
push
insl
fstps
test
clc
inc
in
pop
iret
or
pop
clc
in
mov
dec
lahf
sub
das
add
push
lret
in
pushf
or
sbb
popa
in
repz
lods
sbb
jae
fwait
sub
clc
lock
insb
loope
mov
clc
rcll
xor
cli
mov
hlt
mov
gs
test
je
fsubl
imul
dec
mov
movsb
sbb
lret
dec
mov
jle
fadd
adc
in
test
dec
into
aam
xchg
shr
lret
add
ret
mov
outsb
jmp
adc
les
push
xchg
mov
xchg
push
mov
roll
sti
mov
jecxz
aam
into
adc
sarb
repnz
loop
xchg
cmp
and
andl
aad
repnz
ficompl
cmpsb
stc
mov
adc
xlat
add
jns
pushf
ss
adc
xchg
addr16
mov
xor
pop
gs
out
fldt
jno
movsl
inc
xchg
xor
pop
mov
xor
je
inc
loop
xchg
and
xor
add
adc
in
hlt
jb
aam
movsb
add
fs
inc
loop
xchg
and
xor
add
adc
in
jae
in
mov
lea
lock
fcomps
mov
stos
and
sbb
scas
ss
and
fs
not
pop
xor
mov
scas
push
popa
dec
fnsave
arpl
out
mov
or
jmp
xor
movsb
and
pop
stos
scas
hlt
lea
jge
inc
mov
jge
insb
shlb
jb
and
aam
ds
push
cwtl
addr16
mov
mov
jbe
cmp
jo
cmp
insb
stc
mov
scas
sub
fimuls
stos
inc
xchg
movsl
test
mov
xchg
jbe
mov
movsl
cmc
test
mov
test
outsl
ljmp
jne
fcomp
cmpsl
les
pop
cmp
add
add
adc
dec
pop
cmp
into
dec
orb
sti
out
aam
and
jmp
rol
sub
and
or
mov
test
add
out
mov
push
mov
add
push
stc
in
mov
lods
icebp
out
push
aad
push
jg
xchg
add
xor
mov
push
pop
mov
imul
push
mov
jle
sbb
ret
jae
cs
xchg
dec
mov
fucomp
mov
mov
es
dec
jae
ja
add
sbbb
xchg
inc
and
xchg
lds
sbb
int3
fwait
sahf
cmp
js
pusha
xchg
arpl
repnz
add
push
inc
sbb
xchg
dec
lock
cmp
ds
pop
and
arpl
mov
cmp
lret
pusha
fisubrl
or
icebp
loop
movb
mov
jnp
test
dec
xlat
outsb
into
push
mov
xchg
xchg
sbb
outsb
jns
out
xor
sbb
add
lea
fdiv
lahf
sub
pusha
pop
out
and
out
mov
pusha
mov
or
shrl
leave
xor
push
mov
pop
add
mov
push
add
stos
es
std
xchg
pop
mov
mov
cwtl
and
fcompl
inc
pop
mov
jp
ret
sub
pop
fs
adc
adc
inc
sub
ret
sub
pop
int
pusha
loop
sub
fs
daa
dec
adc
jne
and
add
je
fstpt
repz
fildl
insb
cmc
pushf
jns
test
test
shlb
pop
not
rolb
mov
movsl
mov
jb
enter
ds
daa
jmp
sbb
pop
aas
inc
push
cmp
inc
add
mov
repnz
repnz
inc
sbb
mov
sub
adc
push
push
lea
pop
into
xor
pop
test
xchg
mov
mov
mov
jo
scas
fwait
add
mov
jl
rolb
adc
loope
ret
pushf
inc
cld
xlat
lret
data16
and
out
test
adc
les
jns
ja
imul
rolb
std
stc
fcomps
pop
xchg
scas
icebp
xor
inc
or
mov
inc
out
in
fimuls
xchg
inc
cmp
sub
ds
cs
adcb
or
hlt
rorl
cmpsb
ret
push
ja
clc
pop
dec
ja
xor
xchg
adc
push
jmp
xchg
jns
scas
arpl
das
xor
inc
scas
cmp
mov
int
fbld
inc
adc
jl
outsb
dec
sbb
loope
js
push
cmp
or
push
cmp
adc
hlt
aam
cmc
lcall
and
inc
data16
add
jp
loope
adc
dec
mov
push
gs
out
lods
cmp
nop
cltd
sbb
scas
add
mov
or
movsl
and
data16
js
or
outsb
div
daa
inc
outsl
imul
outsb
lret
push
dec
aam
loope
movsb
icebp
mov
mov
inc
xchg
mov
or
and
adc
sub
inc
lds
outsl
xor
dec
jg
in
cmp
insl
jge
add
inc
stos
fidivl
mov
shr
dec
jmp
mov
out
lea
adc
dec
mov
xchg
mov
icebp
mov
scas
orl
je
cmp
insb
jmp
stos
addr16
jl
imul
stos
jl
cmpl
dec
into
inc
fs
mov
xor
inc
arpl
add
mov
je
and
aas
and
push
out
pop
out
sub
test
or
cs
inc
sub
lahf
xchg
and
xchg
push
popf
iret
mov
inc
mov
sub
xor
jo
and
insl
jo
hlt
enter
push
xchg
inc
dec
cwtl
lea
mov
arpl
sbbl
pop
stos
xchg
inc
xchg
mov
pop
mov
mov
mov
xchg
icebp
xchg
add
xor
push
push
imul
iret
fidivrl
lods
push
mov
jno
pop
mov
insb
push
mov
je
mov
mov
xchg
mov
xchg
bound
ss
outsb
pop
jb
lcall
mov
push
jecxz
outsl
mov
pushf
or
ficompl
and
hlt
clc
dec
paddd
jae
cmp
movsb
cmp
push
pop
andb
les
adc
add
loopne
push
repz
adc
or
idiv
jmp
cmp
cmp
jnp
inc
cmpsb
lods
mov
pop
add
dec
adc
lock
pop
es
outsb
xor
xor
and
je
adc
jbe
mov
int
test
and
or
sub
push
pop
push
es
mov
and
push
popf
lret
sbb
push
push
pop
in
ret
sbb
mov
mov
add
movsl
mov
jne
dec
mov
cmpsb
xchg
adc
push
push
push
add
fs
loope
les
out
sub
jb
and
push
int3
adc
pop
xor
inc
xchg
fmuls
add
dec
pop
sub
stc
data16
mov
icebp
pop
or
inc
xor
imul
stc
decl
call
stos
adc
in
js
push
and
sub
movb
and
arpl
inc
js
fbld
out
insb
mov
inc
mov
mov
push
cli
jne
icebp
outsl
inc
push
test
mov
mov
push
daa
cld
jg
sub
faddl
xchg
inc
sbb
es
mov
fdivrs
pushf
jbe
stos
cmp
pop
and
mov
cmc
fsubrl
cmp
add
pop
int3
fisubl
js
std
pop
out
divl
cmpl
jb
adc
dec
cmpsb
pushf
subl
mov
mov
xchg
fnstsw
pop
dec
leave
outsl
cmp
jo
stos
add
pop
scas
jge
shll
arpl
insl
pusha
inc
repz
int
sbb
std
clc
cmp
mov
xor
js
sbb
sti
mov
into
jne
les
test
in
mov
pop
xor
out
aad
adc
fisttps
shr
mov
sbb
mov
test
fwait
idiv
mov
lret
std
lods
dec
jne
ror
pop
lret
dec
jmp
mov
jg
push
clc
mov
mov
adc
inc
mov
test
mov
mov
frstor
push
sahf
mov
cltd
lahf
jbe
mov
psubq
fmul
xor
test
pop
jnp
cltd
popf
pop
jne
push
jno
mov
mov
ljmp
lock
pmulhuw
test
pop
stos
push
in
ret
sub
dec
push
sub
jno
aam
fcomi
jns
jno
sub
cwtl
sub
jne
push
mov
mov
inc
hlt
imul
jle
cmp
lahf
sbb
add
dec
add
xchg
nop
and
mov
mov
xchg
bound
movsl
loopne
rorb
rcll
xchg
xor
cmp
sahf
jbe
fwait
xor
pop
inc
push
iret
mov
ficompl
jecxz
jmp
sub
xchg
pop
lcall
or
iret
push
and
xchg
int
aas
xchg
outsl
je
xchg
jno
and
push
or
mov
push
popl
push
dec
sub
mov
mov
int
std
and
movsl
jl
adc
insl
or
ja
jg
pop
insb
cmp
dec
out
in
insb
jmp
dec
mov
in
dec
loop
fwait
jae
dec
call
ljmp
or
es
xor
pop
inc
sbb
xchg
in
inc
stos
mov
and
aaa
test
mov
sbb
lahf
or
cmpsb
fdivs
inc
jns
je
sbb
dec
mov
mov
repz
mov
int3
outsl
test
mov
push
lods
jecxz
jg
sbb
or
ficomps
aas
pop
out
mov
sti
dec
std
and
adc
jnp
daa
cwtl
dec
mov
int
pop
xor
ljmp
xor
mov
jb
pop
arpl
mov
stos
or
inc
stos
lock
fwait
dec
push
hlt
sahf
jle
lcall
mov
out
and
les
pop
inc
ja
sub
ljmp
jmp
sub
pop
xchg
sbbb
jge
push
scas
lret
and
cmp
loop
lds
xor
mov
aad
jne
mov
enter
psrld
jle,pt
loopne
fmull
or
in
cmp
adc
loope
add
cmp
js
ds
aam
pop
xchg
stos
repz
mov
jp
into
mov
push
call
pop
imul
pop
mov
adc
xchg
jo
or
mov
bound
flds
dec
inc
fdivl
mov
xchg
jecxz
and
cmp
into
cltd
mov
mov
loope
pop
xor
scas
repz
lcall
or
or
dec
adc
lcall
push
test
inc
mov
cmp
dec
ret
scas
mov
sub
cltd
notl
xchg
mov
cmp
das
aas
cmpsb
pop
lret
dec
sub
push
sbb
jle
xor
int
inc
jae
dec
jns
push
jo
lret
daa
push
pop
js
test
fldl
and
dec
adcb
subb
mov
xchg
into
dec
pop
scas
out
push
mov
xor
pusha
and
mov
mov
loope
sbb
ret
cli
cwtl
push
rorl
nop
jne
mov
das
jge
mov
mov
int3
or
jbe
ficompl
les
mov
or
dec
and
je
jge
test
push
cmp
xchg
mov
and
stc
call
mov
mov
cmc
scas
lock
or
cmp
icebp
nop
and
dec
out
sbb
out
cmc
fwait
mov
bound
or
cmc
push
mov
insb
fmuls
and
mov
pop
xorl
mov
dec
testl
pop
dec
jge
pop
pop
icebp
jno
rcrl
jns
jecxz
or
push
jecxz
and
lds
clc
stos
into
mov
and
filds
push
fnsave
add
lods
mov
sub
rcll
mov
bound
sbb
jp
inc
or
mov
sub
mov
rolb
lret
and
mov
test
insb
push
mov
fsubs
incb
int
sbb
cs
popf
xor
sti
mov
mov
pop
cmc
pop
push
cli
mov
jno
outsb
lds
xor
jle
add
mov
mov
out
iret
cmp
inc
sub
push
cmp
call
push
insl
inc
sarb
ja
testb
push
dec
rcll
jl
test
or
in
sbb
lret
mov
dec
rcrb
test
mov
mov
out
sbb
sahf
fisubs
aas
dec
testl
test
sbb
std
popa
mov
popa
test
and
lods
adc
in
and
pop
and
cmpsb
repnz
xor
or
inc
stos
lret
cmc
sub
xlat
loope
arpl
aaa
jno
jns
xlat
mov
mov
ret
adc
sub
std
out
or
mov
jle
and
cmp
in
mov
cmovge
adc
and
sbbb
pop
jnp
cs
cwtl
or
in
rolb
in
mov
lea
test
cli
test
jb
shl
enter
sub
pushf
scas
in
xor
xor
in
ljmp
adc
jnp
jl
sub
pusha
orb
imul
jmp
arpl
push
or
inc
movsl
push
movsb
mov
lcall
arpl
testb
fs
jg
fsubrl
stos
lahf
push
cld
or
mov
xchg
xchg
dec
jne
fcoml
vshufps
imul
arpl
imul
push
xlat
xchg
ret
sub
data16
push
repnz
mov
push
add
xlat
es
insl
lea
pop
jo
cwtl
lcall
jl
cmpb
mov
into
xlat
inc
and
jno
inc
loop
cmp
pop
nop
jle
hlt
adc
add
ljmp
call
aas
repnz
imul
out
loop
into
test
xlat
bnd
int
lcall
scas
add
or
movsb
xchg
adc
scas
inc
pushf
movsb
xchg
mov
cmp
bnd
cmp
lcall
pop
inc
jbe
cltd
jmp
pop
mov
mov
insb
ret
cltd
adc
xchg
aaa
stos
or
push
sub
push
dec
cmp
lret
jo
dec
addr16
jo
test
add
mov
dec
push
ljmp
mov
add
sbb
or
sub
sti
cmpsb
push
sbb
mov
adc
sahf
movsl
push
lcall
shlb
mov
sahf
aad
xchg
adc
inc
icebp
add
fistpl
and
push
js
lds
lahf
jno
mov
cmpsb
mov
pop
stos
add
cmp
push
and
rcrb
ljmp
pushf
push
rclb
hlt
push
dec
or
inc
outsl
sti
sahf
dec
js
mov
inc
sbb
mov
cli
xchg
xor
sbb
ljmp
out
push
or
adc
jmp
push
inc
add
mov
into
adc
xchg
in
bound
mov
into
cmc
or
mov
arpl
pop
loope
jmp
inc
aas
mov
lahf
jne
addr16
jbe
pop
nop
or
lds
mov
pop
es
lds
mov
push
xor
std
or
aam
and
ds
imul
inc
or
in
xor
pop
rcl
ds
mov
push
shrb
lods
fistps
lcall
ds
dec
mov
push
sub
pop
fxtract
lret
jae
or
xchg
shrb
sbb
in
jmp
xchg
lock
xchg
mov
pop
popf
test
shrl
cmpsb
mov
std
push
sbb
test
ret
mov
push
mov
or
loop
in
loope
jbe
pop
shlb
jae
loope
xchg
outsb
xchg
lcall
push
daa
adc
mov
or
lods
xchg
cmp
das
mov
movb
push
ficomps
cwtl
inc
sub
imul
ljmp
jp
iret
hlt
movsl
ja
pop
adc
test
push
fbld
xor
cmp
fidivrl
xchg
repnz
popf
enter
adc
aaa
push
fisubl
mov
push
lcall
xchg
pop
push
popl
cmp
jge
cmp
inc
fwait
mov
repz
movsl
xchg
jns
gs
outsl
testl
mov
bound
push
test
mov
jg
aad
loop
sbb
sbb
loopne
shl
adc
mov
sub
inc
aad
adc
xchg
or
xor
adc
pop
das
mov
add
adc
push
mov
pusha
icebp
xor
gs
add
pop
lock
xor
sbbl
in
mov
dec
mov
sub
jge
repnz
inc
sub
clc
aaa
adc
lock
scas
leave
loopne
clc
or
fisubl
data16
je
in
int
scas
push
and
imul
pop
mov
inc
inc
pop
push
mov
cwtl
mov
in
int3
and
arpl
clc
iret
xor
aas
xor
rcrl
dec
sub
push
or
xchg
xchg
cmpl
leave
aad
pop
push
push
ficomps
xchg
cmp
sbb
lcall
cs
and
xor
clc
outsl
cmp
sar
push
sub
pop
inc
xchg
xchg
push
or
arpl
mov
jle
pop
bound
or
out
aas
or
mov
jae
loopne
bound
inc
adc
mov
scas
sub
dec
cmpsb
test
insb
mov
lret
adcl
jl
jne
call
pushf
aad
call
outsb
pop
xchg
sti
rcrl
lret
lahf
cmpsl
mov
aad
jmp
aaa
dec
pusha
addr16
or
call
push
mov
or
icebp
xchg
jo
data16
pop
jecxz
int
sahf
mov
jmp
mov
outsb
lret
es
cmp
gs
insl
or
inc
and
std
sub
movsb
sahf
or
and
mov
hlt
add
fisubl
movsb
push
loope
enter
or
cmp
addr16
les
inc
mov
mov
adc
shll
or
lock
push
cmpsl
fs
incl
out
sub
xor
jo
pushf
or
cld
iret
aad
ret
adc
mov
stc
jp
test
aam
stc
cltd
push
dec
sub
xchg
xlat
ja
clc
jne
inc
bnd
jmp
int
fs
fninit
nop
push
adc
insl
jae
xor
pushf
aaa
or
and
dec
jo
fs
lds
scas
in
mov
fmull
jne
fimull
cmpsl
dec
xor
mov
jne
js
mov
add
inc
shr
ret
test
push
cmp
inc
dec
gs
mov
fs
rol
pop
clc
cmpl
inc
lret
push
cmc
mov
xchg
add
cmp
out
sbb
hlt
pushf
and
xorl
sbb
xchg
pop
sahf
push
mov
shll
push
lods
imul
xlat
icebp
dec
jns
mov
xorl
mov
push
repz
cmpsb
je
insb
enter
pop
xchg
add
je
adc
push
mov
mov
int
pop
movsl
jmp
subl
nop
mov
cmp
sbb
jecxz
sbb
dec
mov
cli
add
les
xor
popa
out
stos
cmpsb
les
cli
orl
cmp
push
cmp
xchg
add
into
lcall
mov
or
out
outsb
inc
or
call
or
les
loopne
pusha
mov
in
sbb
sahf
inc
lcall
mov
jns
in
idivb
lods
aam
cmp
out
sub
mov
daa
ljmp
icebp
es
mov
sbb
mov
adc
dec
sbb
loopne
repz
sub
pop
mov
aaa
js
push
sbb
push
scas
lods
lcall
ds
sub
pop
mov
mov
mov
jle
xlat
pop
mov
jecxz
mov
jp
jnp
xchg
xor
neg
sbb
inc
lock
mov
icebp
mov
cltd
cld
and
dec
push
into
hlt
sub
and
cmp
bound
dec
enter
nop
jge
test
or
shll
mov
add
aam
push
or
lcall
dec
xchg
lea
dec
sbb
add
and
mov
cmp
inc
pop
xor
push
fsubr
push
xchg
int3
dec
mov
faddl
cltd
pop
aad
shll
lcall
in
mov
pop
and
enter
jmp
inc
cmc
fxch
inc
popf
sbb
xchg
sarl
loop
or
adc
jg
lcall
mov
mov
aas
mov
adcl
fwait
inc
jmp
jns
out
xchg
data16
repz
call
sarb
mov
sbb
outsb
lock
rcrb
std
lcall
rcl
jb
cwtl
push
aam
div
fists
test
mov
in
jge
mov
mov
or
lcall
test
negb
js
roll
pop
xchg
imul
cmc
sbb
ret
and
jno
sub
cwtl
cmp
dec
aas
xor
push
fldl
enter
bound
mov
and
pop
jns
mov
xor
xor
aam
movsb
add
fs
inc
loop
xchg
and
xor
add
adc
in
hlt
jb
aam
movsb
add
fs
inc
loop
xchg
and
xor
add
adc
in
hlt
jb
aam
movsb
add
fs
inc
jecxz
xchg
and
xor
add
inc
hlt
jb
aam
movsb
add
fs
and
lods
or
dec
sti
pop
jmp
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
xor
dec
adc
imul
push
push
mov
mov
jmp
fwait
jecxz
sarl
dec
adc
imul
or
inc
push
mov
sti
jmp
not
mov
mov
cmp
jnp
imul
or
inc
sub
mov
mov
iret
mov
aad
fcomps
dec
add
adc
and
popa
push
nop
mov
mov
sbb
fsts
or
lock
mov
faddp
imul
popa
mov
xor
and
mov
fwait
icebp
inc
sarl
fldl
adc
mov
in
fcmove
cmpl
mov
sbb
adc
push
xor
push
and
or
and
xor
jg
or
fwait
loope
pop
mov
stos
popa
das
lods
sbb
jns
sbb
mov
mov
xchg
out
or
loope
cs
rol
imul
mov
arpl
mov
lret
in
add
mov
mov
sarl
cmp
jnp
imul
or
pop
sub
sti
cwtl
jmp
fwait
stc
mov
mov
inc
or
imul
pop
bound
int
loop
in
icebp
fadds
pop
ds
jle,pn
jno
sbb
push
adc
nop
les
icebp
cmc
mov
push
pop
dec
add
imul
push
cmp
mov
mov
jmp
fwait
loope
sarl
and
jnp
imul
or
inc
sub
sti
sub
sarl
push
and
outsl
gs
add
rdtsc
inc
or
imul
loopne
sahf
sbb
jo
out
cwtl
test
pop
push
inc
test
adc
mov
sub
inc
outsb
mov
ret
jge
mov
lds
cld
insl
cmp
in
rorb
call
pop
jmp
mov
fst
push
stc
or
adc
ja
out
iret
xchg
mov
hlt
jmp
adc
lret
mov
es
xor
ror
mov
subl
mov
push
push
pop
jle
rcl
js
xchg
fisttpll
out
inc
add
mov
push
mov
or
jmp
mov
inc
xor
xchg
xlat
cmpsl
sub
xor
or
int
pop
fdivl
cld
mov
incb
cmp
sub
pop
mov
ds
cltd
aam
lock
dec
mov
popa
mov
xchg
adc
pop
inc
repnz
mov
mov
stc
add
arpl
and
sbb
adc
pop
pop
pop
scas
jns
aaa
xorl
mov
mov
mov
xor
je
push
jnp
shl
lcall
loope
insb
jbe
pop
mov
add
add
imul
or
or
or
cmp
inc
ds
jmp
xchg
mov
testb
mov
xchg
adc
mov
push
push
adc
jmp
pop
aam
inc
push
cmp
mov
xchg
mov
xchg
add
pop
stos
jnp
jmp
lea
inc
fistpll
adc
int
jne
cld
outsb
or
sbb
jae
push
jae
xchg
xchg
or
jne
cld
leave
xor
mov
into
dec
mov
jne
xchg
leave
mov
pop
pop
fdivp
mov
mov
cmc
scas
out
movsb
or
fnstsw
leave
sbb
lahf
and
das
fnstcw
fstl
and
dec
test
clc
repz
cli
call
add
fbstp
clc
arpl
add
jb
adc
jb
sub
pop
mov
mov
imul
mov
stos
xchg
shr
add
dec
fdivs
jge
inc
mov
lock
adc
adc
xchg
cld
cmp
loop
push
fstps
dec
repnz
pop
cmpsb
inc
repz
scas
dec
ds
out
pop
shrb
pop
in
xchg
and
into
ds
pop
pop
add
hlt
xor
xchg
mov
add
frstor
push
jmp
icebp
cmpsl
cmp
cmpsl
xchg
mov
fadds
sahf
pop
fadd
loop
inc
dec
dec
repnz
pushf
fcomi
xor
add
loope
jno
mov
jecxz
mov
mov
or
xchg
and
dec
divl
fnsave
nop
jle
neg
mov
xchg
movsl
adc
mov
mov
or
or
popf
xchg
adc
cmp
mov
fnstenv
xchg
cltd
movsb
call
adc
sti
jns
mov
cmp
data16
dec
in
idivb
nop
inc
pop
pop
test
adc
out
add
sub
repz
cmp
adc
lods
fsubrs
adc
imul
movsl
dec
leave
ds
sub
and
jns
mov
sbb
roll
mov
dec
lods
or
out
test
xchg
sbbb
push
lret
inc
testb
adc
mov
jne
arpl
imul
lock
out
or
jl
dec
fiaddl
or
xor
dec
data16
test
loope
add
lods
xor
cmp
ds
std
cwtl
jns
call
xor
incl
xchg
cli
stos
and
scas
xchg
mov
add
shl
scas
inc
sbb
loope
adc
jns
mov
jg
fwait
jno
mov
xchg
push
xor
jl
pop
mov
ljmp
pop
inc
pop
jle
pop
jo
clc
int
ret
inc
sub
test
lods
lock
push
shrl
mov
xchg
jge
popf
es
lds
xchg
insb
adc
aaa
gs
cmpsb
sbb
jae
jp
xorl
aad
mov
inc
mov
jns
or
popf
and
call
cmc
int
mov
or
cmpsb
xchg
and
xchg
jno
dec
sub
push
pop
dec
cs
xchg
mov
fcompl
inc
popa
ljmp
xchg
pop
dec
xchg
rol
lahf
sbb
mov
mov
movsb
pop
adc
bound
out
pop
pop
mov
ficoml
push
int3
in
add
xchg
repz
aam
cmp
aaa
pop
and
adc
arpl
mov
ss
movsb
inc
jo
sub
inc
cmp
cs
inc
sbb
idivl
xor
jecxz
inc
sub
imul
xor
or
imul
xlat
clc
push
ds
cmpsb
add
jmp
addr16
cmp
call
stc
roll
pop
xchg
push
hlt
rcll
push
pusha
pop
mov
mov
gs
push
xor
xchg
les
shll
ja
cli
pushf
das
ficoms
sar
push
jae
dec
or
test
push
dec
sti
faddp
pop
add
and
adc
kaddw
pop
test
xchg
int3
jno
cmp
stos
jo
std
repz
jmp
imul
xchg
xchg
pop
lock
dec
lret
dec
jg
pop
lahf
pushf
adc
dec
mov
ss
and
inc
int3
sbb
outsl
scas
int
pushf
stc
add
aad
aad
mov
mov
push
outsl
push
or
jnp
loope
pop
or
pop
sub
jp
loop
arpl
push
add
xor
push
sbb
frstor
xor
rcrl
ss
jne
test
fwait
jp
jno
pop
addb
leave
bound
pop
mov
sbb
movsb
pop
mov
or
adc
shlb
adc
inc
pop
lods
cmp
das
push
push
sbb
repnz
addb
pop
mov
out
pmulhw
dec
lds
sbb
mov
inc
test
movsb
jg
inc
js
add
pusha
sti
or
or
xchg
leave
out
test
mov
xor
pop
xor
mov
inc
test
push
and
mov
pusha
inc
or
popa
sbb
aad
xchg
jge
dec
ja
cli
shll
ss
or
cmp
lods
fildl
mov
cs
mov
mov
sub
pusha
out
jns
mov
and
or
lock
push
or
xor
or
add
pusha
push
and
je
pop
mov
push
cmp
ret
jl
jl
lock
jge
mov
xlat
repz
push
push
sub
and
mov
roll
mov
fidivrs
test
into
and
cltd
or
xor
jp
mov
push
shll
pop
cmp
scas
ret
xor
andl
ljmp
sub
sub
in
fstps
adc
addr16
jle
rcrb
loop
cmp
lea
cld
cmp
stc
mov
pop
loopne
or
mov
mov
dec
repz
mov
xchg
outsl
xchg
mov
jne
xlat
sbb
loope
lods
mov
sub
aas
and
mov
fdiv
mov
sbbb
sub
jno
ret
dec
popaw
dec
mov
pop
sub
push
icebp
repz
in
mov
xchg
test
cmpsb
sti
dec
xchg
out
in
pop
stmxcsr
cli
sbb
dec
sbb
pop
lods
out
imul
xchg
fdivp
inc
lea
and
push
addr16
fwait
arpl
pop
adc
mov
jle
xor
nop
rorb
adc
leave
out
pushf
sti
pop
mov
imul
sub
aad
fsub
out
add
ss
clc
push
icebp
cli
movsb
test
int3
jb
adc
jge
cmpsl
outsl
ljmp
lret
cmpsb
movl
pop
punpckhdq
jl
idiv
fldcw
pop
jbe
sub
ficoms
pop
call
fiaddl
adc
jp
cmp
adc
jbe
xchg
mov
sub
xor
faddl
mov
xchg
sbb
mov
jmp
in
cld
xchg
push
xchg
daa
ja
mov
sbb
scas
mov
adc
push
insb
out
enter
scas
pop
sbb
aas
xchg
fst
and
lods
bound
fcomps
sbbl
jmp
mov
lods
mov
xchg
jns
popa
out
jae
adc
xchg
mov
aaa
loop
pop
pop
nop
inc
cli
xchg
ljmp
inc
add
test
sbb
mov
das
xchg
dec
pusha
orl
jmp
subps
mov
jo
push
mov
outsb
push
repz
outsl
popf
jge
test
inc
xchg
xchg
jge
dec
out
hlt
xor
repz
sbb
das
sbb
xchg
es
cmp
testb
lcall
shrl
dec
add
jle
xchg
mov
movsl
inc
jle
into
sti
dec
test
shrl
jnp
sbbl
das
mov
hlt
push
inc
loope
mov
lds
mov
enter
stc
out
or
scas
push
push
lret
cld
push
dec
orb
mov
mov
and
inc
pop
ret
lods
sub
stos
cmp
test
push
sbb
dec
testb
push
outsl
cmc
fstps
andl
das
adc
sbb
sti
test
sbb
imul
loope
add
or
cmpsb
adc
enter
cs
pusha
stc
leave
mov
mov
add
adc
jnp
pop
mov
mov
mov
dec
pop
xchg
push
add
jae
in
std
inc
inc
cmc
movsb
pop
pop
inc
cmp
inc
loopne
data16
xchg
insb
adc
imul
mov
cld
inc
jb
in
fsts
push
iret
jge
mov
jmp
jnp
rclb
movsl
pop
push
in
mov
fwait
xor
xor
repnz
sub
xchg
mov
cli
mov
test
push
lret
and
pop
xchg
ss
out
inc
or
fidivs
es
sahf
jbe
adc
add
jl
sbb
enter
sbb
jbe
xor
mov
addr16
int
aas
arpl
addr16
call
or
dec
test
rcrl
cli
test
pop
mov
sub
cmc
mov
in
hlt
sbb
inc
iret
cmp
inc
bndstx
cmp
movsb
push
mov
setne
adc
fs
xlat
cli
subb
push
scas
daa
pop
add
sub
bound
sub
xchg
xor
cmpsl
or
pop
and
inc
mov
stc
sub
xchg
mov
pop
mov
test
mov
xor
aad
push
cld
mov
jg
fisubrs
shll
cmpsb
jle
es
gs
dec
hlt
lds
xchg
add
sub
inc
cmpsb
adc
lods
mov
dec
aaa
shl
ficoml
and
hlt
lods
fisubrl
push
or
in
jmp
xchg
mov
mov
andb
scas
pop
add
pop
ljmp
pop
pop
pop
xchg
lods
sbb
mov
test
xchg
fists
jne
jb
scas
das
cli
mov
sub
gs
jns
sub
pushf
xor
jecxz
mov
loopne
cwtl
mov
mov
jp
mov
add
loopne
jbe
sbb
std
arpl
lds
dec
mov
fadd
icebp
mov
mov
mov
cmpsb
dec
cmpsb
pushf
jnp
aam
fsubs
push
or
fisttpl
js
push
adc
fwait
or
mov
imul
sub
push
repz
clc
xor
xor
and
or
mov
in
adc
mov
jb
dec
movsb
dec
ljmp
data16
fs
test
mov
mov
leave
dec
gs
in
pop
loopne
push
push
lahf
xor
jnp
add
pop
pop
repnz
xor
scas
in
nop
mov
adc
cmp
mov
mov
mov
inc
outsl
mov
mov
into
sbb
and
shrb
insl
adc
les
test
lcall
pushf
jecxz
out
rcl
jns
xchg
test
cmp
in
inc
mov
clc
daa
lret
xor
add
out
dec
jb
push
dec
pop
adc
cltd
aaa
push
dec
stos
mov
aaa
out
call
ljmp
or
jae
mov
jo
sub
daa
xor
mov
inc
cmp
lret
cmc
scas
shl
or
push
shl
or
into
daa
insb
lcall
inc
out
push
incb
jg
inc
cli
loop
fisubs
dec
and
mov
shr
cmp
insl
popf
fcompl
sub
or
pop
mov
mov
cltd
rep
imul
leave
add
and
sbbb
cmpsb
cmpl
mov
sub
test
int3
xchg
or
add
inc
loop
or
mov
test
jl
push
nop
enter
sbb
repz
out
in
push
ficompl
lea
cli
movsl
je
jmp
gs
fwait
inc
lods
adc
mov
mov
fiadds
mov
gs
xor
lods
addb
scas
cmpsl
out
jne
push
loopne
push
mov
mov
xor
xor
out
mov
jle
push
cmc
in
adc
ficoml
and
clc
xchg
shll
push
jo
enter
pop
add
mov
mov
mov
popf
aad
nop
sub
cld
fisubrl
pushf
js
xchg
insl
test
adc
mov
cmp
lods
or
xor
sub
data16
les
adc
call
adc
xlat
and
repnz
incb
sti
xor
push
bound
icebp
mov
cmpl
dec
or
or
inc
sbb
jns
pop
insb
iret
mov
and
jle
sbb
mov
sub
stc
and
push
imul
jno
sbb
jp
push
imul
pushf
ret
add
mov
adc
xchg
dec
push
push
add
dec
or
add
jmp
push
stos
dec
out
fnstcw
subl
jne
mov
push
in
jecxz
mov
data16
add
add
jns
in
dec
mov
inc
sub
iret
cmp
mov
xorl
inc
dec
divl
xchg
std
jno
add
into
and
fs
call
icebp
hlt
push
mov
and
movsl
mov
movsl
and
sbb
popf
cmp
out
mov
or
and
cmp
mov
es
sub
repz
into
lods
mov
xchg
mov
mov
xor
adc
jb
imul
cmpsb
ja
dec
loopne
or
jmp
cmp
push
and
clc
jp
std
mov
cmc
jle
add
mov
sbb
mov
xlat
cmp
sbbl
scas
inc
ss
and
adc
push
dec
jns
stos
sub
cmp
sbb
aad
or
rclb
dec
imul
decl
push
xor
pop
mov
jo
adc
cmc
sbb
push
mov
lret
cwtl
dec
inc
mov
inc
cmpsb
push
xchg
fidivs
pop
ljmp
call
dec
sub
pop
or
daa
cli
fs
inc
add
lds
xlat
jle
add
adc
js
xchg
pop
push
add
jne
fs
mov
adc
push
sbb
push
leave
adc
iret
sahf
loop
lea
ds
push
test
ja
ja
dec
out
lahf
mov
xchg
insb
and
movsb
mov
jecxz
enter
jne
and
loopne
mov
sbb
shl
pusha
xchg
xor
fidivl
andl
add
es
repz
shrl
movb
sub
mov
rolb
push
lods
mov
sahf
bound
xchg
sar
and
sbb
sub
lsl
jmp
xchg
pop
jmp
add
cld
and
or
clc
popa
push
sbb
fstp
mov
sbb
sarb
adc
das
add
add
ljmp
nop
scas
adc
ljmp
mov
je
xor
dec
and
or
stos
sub
xor
cwtl
mov
adc
outsl
movsb
mov
cmpsb
mov
xlat
pop
pop
jle
test
fs
adc
xchg
xor
jno
mov
repnz
sbb
rcll
push
mov
repz
iret
cmp
test
out
dec
sub
repnz
mov
push
js
mov
in
cmpsb
repnz
orb
ds
sbb
mov
loope
dec
xor
pop
in
sbb
adc
outsb
sub
or
and
mov
inc
dec
pushf
push
je
mov
fldt
out
jne
imul
outsl
inc
lea
jg
sbb
je
fwait
mov
adc
mov
xor
push
pop
push
inc
aad
dec
cltd
mov
mov
jno
aad
cs
cmc
test
fdivs
jge
xor
push
ds
mov
sub
adc
adc
mov
or
mov
mov
xchg
inc
push
jb
inc
pop
data16
lds
ret
add
sub
xchg
icebp
mov
cmp
es
out
test
cmp
xor
out
fistps
xchg
pop
pop
hlt
subb
push
lcall
stc
in
out
add
ss
mov
sub
jns
gs
sbb
out
andb
cld
jbe
mov
dec
mov
dec
in
xchg
cli
lock
addr16
cmp
pusha
icebp
inc
fistpll
mov
addl
das
es
mov
mov
push
std
inc
inc
dec
xchg
add
out
xchg
call
daa
mov
cld
push
sbb
movsl
test
test
das
out
add
mov
inc
les
pushf
cli
inc
pop
mov
push
cmp
inc
jge
icebp
pop
pop
iret
mov
popf
jg
sub
xchg
out
ficoms
mov
sbb
xchg
out
xchg
popf
sub
sub
pusha
or
mov
invd
push
jge
push
xor
xor
xchg
icebp
adc
test
cmp
xchg
rclb
push
repz
out
loopne
pop
xchg
lret
jle
repz
xor
push
add
push
and
sti
mov
sti
xchg
xor
mov
nop
add
movsb
jne
clc
adc
popf
out
and
mov
jo
and
mov
bound
rorl
xor
cmp
sbb
lock
and
outsl
out
pusha
fbld
aaa
icebp
out
outsl
jae
int
xchg
insl
or
and
sbb
sti
out
das
sub
inc
pop
daa
int3
jp
ds
nop
imul
mov
or
mov
mov
imul
xchg
ljmp
sbbl
xor
mov
mov
xor
popa
fmull
push
clc
xchg
xor
punpckhwd
loopne
jecxz
fnstcw
add
in
push
mov
push
cld
xchg
mov
xchg
cmp
cmpsl
test
push
push
push
shrl
push
sbb
sub
inc
xchg
jle
mulb
loop
jae
sbb
adc
dec
js
xor
sbb
cmp
cwtl
or
std
sbb
and
fs
int
lods
pop
xchg
sbb
or
insl
cld
xlat
and
mov
pop
jle
sub
or
inc
pop
cld
test
push
xchg
int3
and
sbb
mov
add
xchg
ja
scas
lods
lock
mov
lret
scas
loopne
xchg
cmp
push
out
inc
call
cwtl
xchg
movsl
pop
loop
gs
sbb
out
mov
jl
cld
int3
mov
andb
pop
xor
fists
jae
lea
cmp
add
repnz
lahf
je
jb
daa
and
iret
ja
jns
xchg
mov
gs
push
mov
xchg
cmc
insb
mov
push
ret
push
fnsave
inc
fs
cwtl
stc
out
inc
sbb
sbb
lahf
jl
rcll
mov
dec
lds
js
sti
fimuls
xor
imul
fbstp
rclb
inc
pushf
adc
jecxz
cmp
aam
repz
mov
inc
ret
shrb
leave
loop
loope
inc
movsb
sbbl
sarl
push
lods
push
or
pop
bound
inc
enter
mov
ret
cmpsl
out
add
cmp
out
pushf
xchg
pop
jle
push
cmp
xor
xchg
xchg
dec
lcall
sbb
in
sbb
sahf
imul
sbb
dec
aas
stc
inc
nop
nop
sub
jnp
xchg
scas
rcl
lock
dec
stc
or
arpl
jmp
mov
and
cmp
or
jne
fwait
orb
add
sbb
push
cmp
mov
mov
jmp
fwait
loope
sarl
and
jnp
imul
or
inc
sub
sti
sub
sarl
and
jnp
imul
or
inc
sub
sti
sub
sarl
and
jnp
imul
or
cmp
sub
pop
popa
cmp
sbbl
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
leave
and
jns
imul
pop
sub
fsts
jmp
jg
shrb
js
imul
cmp
and
lods
leave
mov
sub
cltd
xchg
mov
mov
cmp
jns
imul
cmp
dec
fldenv
mov
cli
scas
loopne
cltd
mov
mov
xor
test
mov
mov
lret
test
jnp
aas
and
or
sub
adc
xorl
ss
mov
xorb
xor
fdivrl
dec
sbb
jae
or
scas
ljmp
cmp
in
xchg
sahf
jle
iret
pop
incl
pusha
fnstenv
aad
inc
cmovle
jg
sbb
test
movsl
mov
sub
jl
icebp
mov
sub
mov
mov
sub
loop
loopne
xchg
push
push
mov
clc
in
lcall
out
add
enter
jg
outsl
in
enter
ret
push
aaa
dec
and
imul
cmp
dec
fldenv
jmp
call
sub
gs
jne
bound
sub
xor
xchg
test
repnz
fnstsw
jae
jg
pusha
insl
cmp
bound
in
xchg
rclb
mov
das
and
sbb
pop
push
or
inc
sub
mov
jmp
lock
and
jns
imul
cmp
push
fldenv
jmp
lock
and
xchg
adc
sub
arpl
dec
pop
add
dec
ja
rcrl
inc
jp
cltd
push
mov
cmc
leave
inc
fs
cmpsl
inc
sbb
cli
lock
add
movsb
pop
clc
pop
in
pop
sub
jmp
push
test
mov
xchg
and
mov
daa
dec
mov
std
jo
or
or
cmp
ret
sub
fistl
mov
iret
jge
lods
jne
pop
daa
push
lea
call
in
pop
pop
pop
shll
scas
inc
adc
or
test
int3
les
movsb
cld
pop
or
push
sub
jns
or
in
dec
mov
sbb
in
pop
adcb
push
bound
sbb
lahf
shlb
mov
ss
mov
push
icebp
push
adc
jp
sub
ret
inc
aas
fisubs
push
int
push
std
adc
je
hlt
xchg
mov
inc
mov
dec
aas
popa
cmp
sub
scas
imul
xchg
movsl
push
inc
andl
cmpsb
bswap
fdivrl
es
in
xor
mov
loope
lcall
mov
mov
jne
out
sbb
or
je
mov
mov
jne
daa
mov
push
outsb
and
ds
stc
push
push
xchg
jnp
or
aad
xchg
fstpt
leave
cmc
push
adc
jl
loopne
in
dec
lret
inc
cmp
add
xor
push
bound
fnstcw
sbb
cmp
fwait
xor
mov
sub
jp
fnstcw
jno
dec
popf
push
cs
popf
ljmp
int3
add
test
jg
jge
push
mov
mov
adc
in
inc
das
sub
jne
and
pop
xor
data16
jbe
add
lret
in
xchg
sbb
adc
testl
fstps
jl
icebp
jg
int
ja
cs
mov
adc
mov
sub
clc
push
mov
dec
add
pop
xchg
sub
rcrl
add
xchg
pop
sbb
lock
mov
jmp
dec
es
stos
pop
jecxz
push
jle
cmp
push
int3
cmpsl
in
push
stos
xchg
xchg
test
outsb
push
ja
out
adc
push
out
mov
leave
cmpsl
clc
inc
outsb
dec
and
arpl
dec
je
loop
out
mov
das
add
cmpb
xchg
fisttps
clc
and
lea
jecxz
sub
jbe
mov
pop
or
in
xchg
sbb
inc
jge
ficompl
test
rolb
pop
out
cmc
xchg
mov
xchg
bnd
push
mov
aam
rcl
inc
addb
mov
mov
fdivrl
mov
pop
imul
repz
jne
dec
push
js
hlt
push
adc
xor
bound
or
hlt
and
inc
repz
aad
es
xchg
icebp
insb
jae
repnz
and
in
pop
test
mov
add
lea
hlt
push
imul
arpl
mov
push
or
clc
jge
pushf
leave
movsl
mov
and
xorb
sarb
cltd
mov
cmpsl
dec
mov
mov
sbb
adc
sbb
aad
fdivrs
dec
adc
lods
bound
clc
inc
aas
arpl
fs
jne
inc
stos
xor
jno
mov
sbb
add
andl
inc
imul
xor
push
stc
nop
xchg
sti
adc
ja
and
cmp
pusha
add
ds
xor
and
popf
cli
push
es
inc
pop
adc
inc
dec
aad
fstps
dec
outsb
mov
mov
xlat
rcl
data16
inc
mov
inc
adc
adc
aam
push
push
clc
ljmp
gs
xchg
out
imul
aas
jnp
cltd
das
call
jae
shll
imul
outsb
pusha
inc
sarb
mov
popl
das
cmp
lods
nop
or
and
fwait
pop
lret
int
inc
icebp
cli
andl
add
or
movsl
loope
jae
jp,pn
add
ljmp
mov
stos
std
adc
jmp
pop
mov
inc
cmp
xor
dec
jmp
push
dec
inc
dec
dec
mov
ss
push
test
test
sub
inc
int3
inc
cmpsb
nop
mov
stos
dec
aam
in
lock
nop
scas
mov
ret
int3
xor
sub
adc
insl
imul
mov
mov
popf
mov
iret
cmp
out
es
dec
into
rcrb
lahf
arpl
add
cmc
movsl
test
inc
les
sub
add
mov
ss
push
cmp
adcb
dec
add
push
repnz
test
cmc
notb
iret
adc
test
sbb
xchg
lea
xor
dec
imul
arpl
xchg
leave
cmp
push
and
int3
cmp
mov
call
mov
inc
lods
and
fdivr
out
inc
dec
fs
inc
scas
mov
mov
sub
mov
lahf
scas
push
pop
js
int3
icebp
and
clc
cli
mov
fisttps
cli
leave
cmp
and
xchg
or
push
add
loope
push
inc
movsl
outsb
mov
fwait
xchg
push
inc
popa
jo
in
jae
in
div
mov
or
mov
jge
adc
jmp
frstor
cli
shr
in
popf
mov
icebp
mov
inc
sar
sbb
inc
mov
or
mov
call
adc
cmp
and
pop
or
ficompl
cwtl
cli
or
insb
and
xlat
cltd
fs
mov
xchg
inc
out
div
push
rolb
dec
mov
cltd
push
into
xchg
dec
xchg
nopl
fidivl
mov
jae
mov
insb
loopne
and
jge
arpl
inc
mov
cmp
push
sbb
push
pop
imul
mov
test
or
adc
jb
adc
lret
xchg
push
mov
fbstp
out
fiaddl
nop
mov
test
push
rol
clc
and
aaa
insl
mov
push
cmpsb
out
xlat
jecxz
cs
pop
call
mov
movsb
imul
mov
cmp
popl
mov
adc
mov
test
sbb
mov
mov
in
push
sbb
jns
xor
jne
mov
pop
xchg
mov
sbb
mov
mov
adcl
lock
mov
mov
sbb
jnp
fdivrl
mov
mov
aam
xchg
sub
pusha
jl
loopw
mov
mov
movsl
addb
mov
cmp
add
xlat
or
cmp
int
mov
es
pop
int3
leave
mov
loop
and
and
or
jns
push
hlt
sbb
mov
pusha
cmpsb
fcoms
jns
sbb
mov
mulps
fstl
push
mov
cmp
test
aas
pop
sub
int3
lds
sbb
xor
outsl
sbb
jb
call
aaa
push
insl
adc
lods
stos
xchg
cltd
jne
push
mov
cmp
mov
call
ret
mov
and
ret
in
xor
mov
lahf
je
mov
add
movsb
xor
call
sbb
in
clc
or
into
outsb
nop
jnp
sub
jbe
daa
push
pop
mov
add
rorb
mov
adc
mov
or
and
insb
daa
jmp
lcall
test
loop
dec
ffree
jae
cbtw
std
out
bnd
cmp
cwtl
xchg
scas
jae
adc
jo
dec
insb
xchg
scas
dec
push
enter
negl
mov
pop
pop
sbb
xchg
in
fmulp
inc
mov
cmp
shrl
dec
clc
icebp
sub
adc
fistpl
adc
out
pop
ljmp
enter
stc
add
cli
mov
stc
xor
push
xchg
ds
mov
adc
ljmp
or
das
loop
in
jl
outsb
pop
pop
sub
push
jmp
jp
lret
jmp
cltd
popa
repnz
cmp
and
cli
out
imulb
adc
stos
out
add
stos
sbb
push
dec
sub
mov
lock
dec
dec
adc
shlb
pop
lcall
loopne
bnd
cmpsl
dec
push
cmp
and
popa
gs
fimull
cmpsb
mov
add
ret
mov
in
mov
imul
lock
cmp
shlb
sub
vpminub
outsl
inc
jge
add
pop
int
lcall
mov
imulb
rolb
adc
gs
push
mov
lock
js
arpl
std
adc
dec
or
jge
iret
adc
iret
std
sub
dec
test
adc
decl
cld
cs
mov
sub
mov
push
arpl
dec
jl
jmp
pop
jae
and
in
or
jb
sbb
test
ds
clc
dec
loopne
jle
mov
jo
int3
popf
push
adc
sub
jg
mov
cs
insl
jnp
push
jnp
push
mov
arpl
scas
movsb
and
inc
out
jp
jno
adc
pop
xchg
xchg
dec
daa
popa
dec
push
push
loope
or
jle
mov
stc
fldl
cltd
mov
push
xchg
cmpsb
std
inc
lea
jp
testb
jno
mov
mov
push
sbb
adc
push
enter
mov
arpl
cmp
mov
sbb
icebp
rclb
sbb
jns
and
or
add
inc
ja
notl
adc
gs
xor
hlt
add
and
xor
test
into
xchg
cli
das
sbb
mov
adc
xorb
lret
les
or
in
push
inc
and
xchg
xchg
or
lret
xchg
pop
fdiv
or
test
pop
jmp
fiaddl
push
dec
lahf
out
sub
and
mov
lods
ret
into
out
jmp
imul
loopne
rcll
movsl
xchg
mov
cmp
icebp
xor
cmpsl
push
push
cwtl
sbb
xchg
mov
stos
int3
fidivrs
and
pop
xor
push
xchg
movb
ret
int
sbb
sahf
cmp
mov
aaa
ds
mov
or
mov
jp
mov
xlat
fnstcw
cmp
or
cmp
mov
push
jmp
pop
adc
lret
mov
stc
push
adc
or
and
test
pop
xor
dec
cmp
inc
and
aam
dec
or
filds
call
mov
insb
cmp
iret
mov
adc
lds
ret
mov
sub
lahf
fwait
std
mov
int3
ret
xchg
pop
sbb
adc
pop
mov
pop
xor
pop
and
in
cld
push
lret
xor
pop
sub
mov
sarl
sbb
pop
aas
addr16
xchg
pop
mov
cli
xchg
jo
data16
jl
ret
and
fcmovnu
adc
cmpsb
mov
adc
push
inc
xor
add
out
lds
out
loope
into
jne
enter
stc
bound
insl
mov
in
adcb
sahf
inc
jmp
cmpsb
dec
stc
shll
cmp
jbe
and
mov
mov
add
test
push
jmp
xchg
lret
lahf
test
or
repz
jp
or
mov
lcall
jg
dec
repz
fildll
mov
adc
idiv
dec
daa
xlat
xorb
out
test
pusha
adc
push
and
add
int
fmull
xchg
dec
jb
push
xorl
std
into
push
cmp
in
dec
stos
in
cld
aam
cmp
jb
jo
mov
cwtl
mov
aas
jnp
mov
xchg
cmp
mov
xchg
or
xchg
mov
cmpsl
xchg
lds
mov
pop
add
push
aaa
test
fnstenv
pop
pop
outsl
dec
shl
and
mov
jno
lcall
cli
jl,pn
jecxz
add
into
jecxz
push
data16
daa
shlb
lds
inc
hlt
mul
cmp
push
cmp
mov
test
inc
fstps
pop
mov
push
cmp
mov
dec
mov
ret
push
sbb
push
movsl
test
data16
adc
je
mov
mov
cld
mov
mov
fdiv
cmp
jo
std
outsl
mov
push
out
xchg
inc
cltd
and
gs
enter
mov
jp
xor
stc
out
mov
and
inc
add
cmp
lcall
ja
add
mov
sub
sub
pop
aam
lret
nop
or
push
cld
push
ret
add
clc
pusha
cmp
add
dec
xchg
gs
mov
push
add
out
mov
dec
fnstcw
cmpsb
add
push
inc
jbe
mov
int3
xor
lret
xchg
enter
mov
adc
mov
je
or
stc
sbb
jmp
add
mov
adc
inc
xchg
out
dec
jns
mov
jg
push
or
mov
inc
pop
mov
mov
adc
inc
sahf
jecxz
stos
das
arpl
popf
fsts
lea
rorl
mov
xor
sub
stos
leave
xchg
insb
call
jp
xchg
arpl
or
aaa
cmp
dec
loope
mov
mov
and
insb
bound
cmpsl
mov
lcall
inc
insb
pop
mov
pop
sbb
mov
popa
mov
cwtl
sti
add
dec
cmc
and
out
fwait
pop
push
or
cwtl
jmp
adc
add
push
clc
mov
xor
lds
xchg
fstp
incb
dec
inc
and
mov
cmp
inc
adc
nop
xchg
jns
push
stc
sub
popa
fwait
daa
in
sbb
cmp
test
cmp
or
sub
pop
scas
and
mov
mov
test
stc
mov
adc
mov
leave
fldenv
mov
lea
xor
cmp
and
iret
dec
jbe
fnstsw
outsb
pop
dec
add
subb
or
icebp
loope
xchg
and
fsubs
sti
mov
jl
mov
jbe
push
insl
mov
pop
mov
dec
sbb
xor
mov
xchg
mov
out
je
xchg
mov
or
mov
add
call
jle
arpl
cmp
sub
pop
js
mov
cwtl
repnz
inc
push
std
pushf
sub
lret
cmp
xchg
bound
inc
vpunpckhwd
sbb
pop
adc
leave
xor
cmp
xor
js
pop
push
jge
in
pop
jle
dec
fisubrs
std
xor
cmpsl
push
xchg
mov
in
icebp
push
fsqrt
icebp
inc
xor
repz
addl
mov
repnz
sub
pop
ficomps
dec
inc
dec
or
pop
and
mov
int
mov
cmpsb
dec
lret
pop
sub
iretw
loop
pop
movl
cli
loope
push
data16
out
add
ja
jg
ret
xchg
push
mov
inc
mov
cwtl
out
scas
sbb
stos
mov
cwtl
adc
fs
test
inc
test
xor
les
pop
pop
jo
push
jnp
stos
clc
sub
cli
fdivl
push
dec
je
shrl
sub
or
nop
jge
jg
xor
aam
jle
pusha
sub
insl
shll
lcall
pop
insl
pop
xor
out
or
add
aas
xchg
jo
imul
push
push
sbb
rorb
mov
pop
xchg
pusha
fiaddl
sti
fisubs
pushf
dec
pop
jge
add
sbb
rcrl
push
pop
push
dec
or
or
mov
retw
aad
cmp
mov
sbb
adc
call
arpl
movsl
inc
into
test
sbb
inc
xor
fsts
flds
fsts
aaa
pop
sahf
jecxz
icebp
test
dec
fiaddl
inc
xor
pop
mov
pop
pop
pop
sub
fistps
inc
aas
ss
fmuls
fmull
xchg
push
aaa
icebp
push
outsb
lahf
lods
xchg
js
aam
dec
and
jo
stos
shrb
mov
out
push
sbb
add
xor
lea
pop
or
cmpsl
cmpsl
jge
pop
jg
ja
stc
lds
dec
sub
mov
jns
and
pop
pushf
stc
xchg
dec
xchg
sbb
test
xchg
mov
xchg
sub
sub
insl
inc
and
mov
mov
cmovp
adc
add
je
jae
lds
andb
movsb
mov
adc
xchg
gs
jl
addl
sub
iret
mov
in
jmp
cs
rorb
mov
and
pop
mov
sub
imul
and
sbb
cmpsl
lahf
pop
push
inc
mov
loop
pop
pop
inc
or
loopne
fdivl
jge
mov
popf
gs
or
iret
xchg
in
cmp
int
dec
jp
fcomp
adc
dec
test
add
jmp
rcll
add
repz
shrb
jno
add
clc
pop
inc
fistpll
adc
addr16
negl
push
aas
mov
jbe
xchg
jle
icebp
mov
shr
aad
push
and
jl
in
sub
xor
andb
pop
cmc
lds
inc
mov
mov
out
and
gs
scas
js
inc
mov
dec
outsb
cmpsb
test
ret
jecxz
inc
mov
adc
stc
xor
and
pop
inc
into
jo
loopne
pushf
and
sti
mov
pusha
or
cmpsb
push
mov
shl
in
and
mov
inc
inc
gs
adc
mov
in
stos
insb
popw
sub
sub
test
mov
pop
mov
fucomi
ret
repnz
std
xor
dec
mov
scas
mov
icebp
fadd
adc
pop
rcll
cmp
push
and
test
dec
pop
stos
inc
xchg
push
jae
adc
pop
bound
inc
xchg
pop
mov
xchg
xchg
add
xor
imul
fstps
call
jne
sbb
mov
call
imul
xchg
leave
dec
loope
inc
sbb
push
daa
das
ret
rolb
cwtl
adc
add
int3
aaa
stos
mov
dec
push
jg
jb
xor
repz
xor
shl
push
das
ret
lret
sub
mov
mov
pop
aad
pop
out
inc
xchg
add
test
scas
scas
lret
dec
sub
dec
jae
fiadds
inc
cmp
popa
lret
and
and
adc
aas
adc
push
ljmp
cs
in
lcall
mov
mov
xchg
js
inc
popl
clc
sub
or
dec
repnz
jb
xchg
adc
shr
lea
daa
sub
fmull
fcmovbe
xchg
aam
sub
xor
out
icebp
cli
push
inc
mov
lahf
mov
nop
in
inc
push
or
ljmp
mov
pop
mov
int
push
mov
dec
insl
int
or
cltd
addr16
jns
mov
data16
repnz
push
or
les
or
inc
gs
add
add
mov
pop
aad
in
fstps
jmp
push
xor
push
mov
sub
out
shrl
inc
lods
adc
sbb
movsl
rcrl
sub
lret
pop
ljmp
inc
xchg
sbb
mov
mov
clc
xchg
loope
xchg
xchg
shl
pop
xor
ljmp
adc
sub
hlt
pop
mov
add
mov
and
sahf
mov
cmpsl
cld
sub
cld
insb
sub
fdiv
or
jo
divb
inc
pmulhuw
sarl
loopne
stos
mov
push
clc
lock
or
addr16
jae
inc
and
std
jg
scas
adc
cltd
pop
aad
jp
mov
aad
jecxz
lods
or
into
cwtl
adc
scas
cmp
fcomps
adc
sbb
in
jg
dec
pop
js
test
enter
inc
mov
push
test
imul
pop
mov
cltd
add
mov
add
fidivs
mov
add
ds
push
rcll
or
and
push
cs
and
cmp
imul
cmpsb
enter
dec
xor
jnp
mov
or
call
dec
clc
cltd
loopne
aas
call
nop
outsl
sbb
and
sbb
inc
pushf
aaa
and
pop
mov
inc
dec
sbb
fs
xorl
imul
mov
push
aam
add
add
jmp
and
or
jbe
xchg
out
scas
inc
inc
lret
lods
jae
mov
pop
ss
lcall
in
jle
pop
mov
orl
adc
and
lret
xchg
inc
iret
nop
add
outsl
mov
and
xorl
imul
cmp
push
fldenv
jmp
lock
and
jns
imul
cmp
push
fldenv
jmp
lock
and
jns
imul
cmp
push
fldenv
jmp
lock
and
xor
add
adc
pusha
or
inc
sub
push
sub
out
push
push
scas
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
