mov
movl
lea
push
push
pushl
call
test
jne
mov
cmpw
je
mov
test
jne
lea
push
pushl
call
test
jne
lea
push
pushl
pushl
mov
mov
push
push
pushl
call
cmpl
je
xor
mov
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
add
push
push
push
mov
mov
mov
xor
mov
xor
mov
xor
mov
xor
mov
movl
lea
push
push
pushl
call
test
jne
mov
cmpw
je
mov
cmpw
je
mov
test
jne
lea
push
pushl
call
test
jne
lea
push
pushl
pushl
mov
mov
push
push
pushl
call
cmpl
je
xor
mov
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
push
mov
mov
mov
xor
mov
xor
mov
xor
mov
xor
mov
movl
lea
push
push
pushl
call
test
jne
mov
cmpw
je
mov
test
jne
lea
push
pushl
call
test
jne
lea
push
pushl
pushl
mov
mov
push
push
pushl
call
cmpl
je
xor
mov
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
add
push
push
push
mov
mov
mov
xor
mov
xor
mov
xor
mov
xor
mov
movl
lea
push
push
pushl
call
test
jne
mov
cmpw
je
mov
test
jne
lea
push
pushl
call
test
jne
lea
push
pushl
pushl
mov
mov
push
push
pushl
call
cmpl
je
xor
mov
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
add
push
push
push
mov
mov
mov
xor
mov
xor
mov
xor
mov
xor
mov
movl
lea
push
push
pushl
call
test
jne
mov
cmpw
je
mov
test
jne
lea
push
pushl
call
test
jne
lea
push
pushl
pushl
mov
mov
push
push
pushl
call
cmpl
je
xor
mov
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
add
push
push
push
mov
mov
mov
xor
mov
xor
mov
xor
mov
xor
mov
movl
lea
push
push
pushl
call
test
jne
mov
cmpw
je
mov
test
jne
lea
push
pushl
call
test
jne
lea
push
pushl
pushl
mov
mov
push
push
pushl
call
cmpl
je
xor
mov
pop
pop
pop
mov
adc
addr16
adc
je
pop
push
aaa
mov
scas
testl
inc
pop
push
aas
addr16
sysret
pop
pop
das
daa
aas
dec
clc
mov
cmc
testl
inc
fstps
out
sub
cmp
arpl
sbb
or
ret
cld
jg
nop
addr16
inc
or
adc
clc
dec
sbb
ret
inc
jo
insb
push
sub
rcrb
mov
loope
lahf
cmpsb
loop
and
das
push
and
adc
push
push
int3
arpl
and
cld
fwait
and
xchg
stc
jg
addr16
out
shll
xchg
test
jns
imul
ret
test
out
lahf
or
nop
cltd
cmp
sub
outsl
addr16
sysexit
pop
jae
daa
push
aaa
inc
in
inc
sub
cltd
hlt
push
xchg
lahf
fwait
lcall
lret
mov
imul
pop
dec
cld
mov
cmp
xchg
out
movsb
or
push
jno
insl
lock
pop
and
es
or
daa
lret
lret
dec
add
push
jo
mov
dec
imul
pop
div
inc
jns
mov
flds
add
dec
cli
inc
pop
xor
sub
loopne
das
stos
dec
mov
lret
or
add
out
mov
push
mov
test
sahf
pop
in
cmpsb
hlt
cld
push
cmp
das
lahf
icebp
adc
mov
pushl
lea
pop
adc
xchg
add
cmp
push
popa
imul
cmp
jmp
jp
cltd
lahf
push
push
loopew
sbb
dec
inc
jle
and
lock
pop
sbb
ljmp
add
lret
stos
cmpsl
stos
fnsave
addr16
mov
mov
arpl
fadd
mov
pop
or
fwait
pop
int
aaa
les
outsl
sbb
and
loopne
push
xor
mov
xchg
cmpsl
jo
lahf
pop
mov
jle
mov
and
cltd
mov
push
out
daa
add
mov
insl
aas
lret
dec
xchg
inc
jl
xchg
test
sbb
inc
ffreep
or
xchg
testl
iret
sub
inc
push
dec
push
push
adc
lods
mov
data16
cli
push
js
rcll
mov
arpl
or
push
push
lret
stos
and
or
sbb
adc
push
jne
jg
gs
lcall
inc
mov
stos
icebp
std
sahf
push
and
lret
mov
leave
or
jno
pop
hlt
das
xchg
pop
in
iret
jbe
orl
cmp
sbb
insl
pop
in
dec
jmp
xor
mov
sarl
jbe
rorl
int3
outsl
fildl
adc
aam
gs
pusha
jno
arpl
jp
int3
mov
pop
loopne
mov
push
dec
pop
pop
sbb
ja
sbb
pop
call
fdivs
std
xchg
add
or
rclb
pop
ja
pop
test
ja
lea
and
les
testb
fadd
out
scas
push
jno
ret
xchg
dec
ds
fdivrl
in
or
lcall
and
in
out
hlt
xchg
addr16
push
mull
scas
jge
imul
lds
pop
push
dec
enter
imul
xchg
push
lods
pop
fsub
xor
es
pop
mov
iret
fistpl
pop
mov
or
pusha
pushl
and
or
loopne
mov
sub
in
sbb
sbb
scas
inc
pop
lea
cmp
pop
adc
daa
jns
out
cmp
or
cmpsl
push
mov
pop
sub
lock
call
inc
xlat
iret
addr16
or
loop
pop
sbb
jo
stos
xor
sbb
xor
or
filds
je
data16
sub
ret
mov
mov
outsl
dec
cmp
or
enter
test
in
loope
sub
pop
jl
mov
nop
in
ja
pop
loopne
movsl
cld
les
xchg
cmc
icebp
xchg
outsl
mov
push
sub
lock
pop
cmpsb
ffreep
sub
cmp
xchg
stc
jg
xchg
push
dec
inc
leave
inc
dec
and
lods
mov
push
adc
aaa
btc
aaa
xor
add
je
mov
mov
cmpsl
ret
push
mov
mov
sbb
xchg
out
aaa
cltd
pushf
in
pop
popa
sbb
jmp
mov
xlat
sub
or
ja
mov
xlat
ret
cmp
loope
xchg
out
loopne
xchg
js
sbb
mov
ja
out
xor
aaa
push
push
loop
xor
add
xor
cli
dec
stos
add
popf
jo
in
imul
daa
push
inc
xor
jl
je
mov
pop
cmpsl
lods
and
imul
xlat
and
clc
dec
inc
push
mov
clc
xor
pusha
scas
jns
enter
aam
push
addr16
ja
test
pop
movsb
sbb
mov
stos
sbb
jnp
dec
inc
je
jae
fs
insl
jae
test
push
mov
stos
mov
in
pusha
scas
fcmovnu
ja
pop
test
adc
cwtl
mov
call
cmp
jmp
xchg
dec
and
pop
test
and
xor
adc
movsb
fadd
and
fbld
cmp
ss
mov
lds
fstl
clc
or
inc
dec
cmp
pop
lret
lds
cld
int3
mov
hlt
cld
lock
cs
stc
enter
adcb
adc
scas
pop
mov
jns
pop
xchg
loop
data16
pop
out
imul
mov
out
sbb
orl
pop
push
lret
cmpsl
test
mov
sarb
xor
shl
aad
xorl
or
mov
and
test
call
pop
mov
mov
mov
jecxz
pop
cmp
or
push
pop
push
shl
push
jb
mov
pop
sub
test
push
jns
shll
xchg
pop
jg
insb
adc
jbe
inc
push
das
sbbl
enter
out
neg
orb
fwait
mov
xchg
xchg
mov
daa
lret
leave
jno
sub
inc
test
std
xchg
add
and
call
sub
xchg
aas
xor
iret
aaa
shl
ret
mov
mov
xor
nop
outsl
add
jno
xlat
pusha
lods
ds
mov
stos
icebp
add
push
and
cmpsb
out
and
push
nop
cwtl
xorb
loop
xchg
mov
out
loop
stc
int3
or
adc
fwait
outsl
addr16
sysret
push
jnp
dec
aas
aaa
iret
cwtl
xlat
out
sbbl
scas
cmpsl
mov
into
test
add
adc
out
and
out
pushf
mov
out
pop
jno
shlb
mulb
sub
in
add
xchg
cmp
jne
jns
cs
mov
pop
mov
leave
xchg
ss
or
cmpsb
lock
negl
and
or
push
mov
mov
daa
in
adc
lods
sbb
lods
out
push
mov
in
lahf
aas
fstpt
lds
bnd
in
js
and
scas
fs
lret
xor
mov
push
icebp
adc
sbb
addl
ds
adc
jecxz
iret
push
mov
xor
cmp
fstl
xchg
inc
pop
insb
jae
pxor
repz
mov
ja
jnp
rclb
sbb
sbb
es
cmp
int
fsubp
jmp
xchg
popf
stos
test
mov
dec
pop
push
outsl
addr16
sysret
pop
pop
das
daa
aas
aaa
iret
out
out
testl
inc
pop
push
outsl
addr16
sysret
pop
pop
das
daa
aas
aaa
iret
out
out
testl
je
fs
push
dec
inc
cmp
sub
sbb
or
clc
jmp
in
aad
mov
lea
pop
push
inc
dec
xor
sbb
or
imul
out
aam
les
sahf
xchg
push
pop
inc
dec
xor
and
push
adc
add
bnd
testl
inc
pop
push
outsl
addr16
sysret
pop
pop
das
daa
aas
aaa
iret
out
out
testl
int3
int3
int3
int3
push
mov
push
andl
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
cmpl
je
mov
add
mov
mov
add
movzbl
mov
mov
movzbl
sub
test
jne
call
call
leave
ret
popa
jp
cs
pop
push
dec
in
pop
inc
dec
outsl
sbb
loope
shl
rcrl
mov
sahf
xchg
popa
jle
outsb
inc
pop
push
dec
and
xor
add
adc
loope
icebp
out
rorl
into
popa
nop
mov
sbbl
jo
cld
cmpsl
cmp
cmp
test
loopew
xor
sbbl
xor
imul
push
loope
xchg
adcb
loope
mov
mov
popa
cmp
push
or
lahf
or
pop
ja
popf
jmp
sar
imul
sbb
ja
dec
pop
pop
dec
inc
jg
outsl
fwait
lahf
lods
xchg
mov
fs
pop
pop
daa
inc
es
cmp
gs
push
cli
ds
gs
ficoms
inc
or
cmc
lock
sub
roll
push
add
inc
inc
push
push
or
push
testb
outsb
rcll
outsb
fistps
jns
mov
cld
shll
pop
into
sbb
pop
mov
push
push
xor
test
inc
outsb
cmc
cmpsl
xor
push
into
fidivrs
adc
jmp
xchg
es
fdiv
adc
cmpl
stos
xor
andl
scas
or
mov
and
inc
adc
movsb
testl
inc
dec
xchg
movsl
leave
in
scas
rolb
inc
lcall
scas
pop
xor
pusha
pop
test
icebp
stc
fwait
ds
pop
fistps
mov
lock
jno
mov
shll
ret
adc
adc
lods
fildll
pop
stos
test
cli
mov
sub
or
mov
and
dec
out
push
mov
cmp
mov
xor
mov
pop
ror
pop
popf
gs
jo
xor
sbb
inc
mov
data16
jno
xchg
mov
add
int
pusha
jecxz
add
pop
cmpsl
push
jnp
shll
mov
sahf
xchg
mov
mov
scas
push
push
and
add
decb
pop
inc
mov
loope
xchg
push
in
dec
and
cmp
fwait
add
jecxz
test
cmc
aam
dec
imul
inc
jns
shrb
fs
xchg
fscale
sbb
fs
push
cmc
lret
xor
pop
in
aas
add
inc
insl
push
cmpsb
sub
pusha
add
add
xchg
mov
adc
outsb
xchg
cs
ja
shrl
lds
icebp
out
cli
cwtl
pop
mov
mov
push
sahf
and
dec
mov
imul
push
out
and
xor
pop
cmp
sahf
stos
jge
pusha
mov
xor
sbb
or
aaa
in
xchg
and
fwait
mov
test
imul
dec
adc
push
iret
rcr
loopne
andl
sbb
lds
xlat
xor
lcall
jge
scas
push
push
and
cmp
or
mov
sbbb
adc
push
in
aad
lahf
cs
adc
push
mov
stos
lahf
orl
sub
out
or
mov
mov
pusha
fildll
daa
mov
sbb
push
jl
in
inc
push
and
cli
setge
xchg
movups
ss
push
popa
jge
pop
xchg
mov
stc
shrb
mov
push
popa
testl
mov
sahf
sbb
xchg
popf
jle
mov
fnstsw
icebp
loope
jnp
add
into
xchg
mov
sbb
nop
orl
jno
push
lea
cmc
cli
stc
fs
fldenv
and
out
xor
jle
pop
enter
test
jnp
push
jnp
ljmp
adc
scas
add
mov
out
xchg
inc
out
mov
les
shl
aad
sahf
adc
xchg
cmp
stos
sarb
adcl
mov
fbld
sarl
inc
jno
int3
jl
sbb
loope
sbb
add
inc
cld
dec
loop
mov
and
scas
es
data16
mov
lret
decb
aad
or
mov
xchg
inc
mov
stc
push
add
sbb
ficompl
std
xchg
xor
push
adc
inc
mov
pop
sbb
pop
jl
mov
fld
lret
sbb
in
leave
push
iret
mov
outsl
rep
iret
xchg
xlat
insl
aaa
outsb
sbb
sub
xlat
faddl
inc
loop
push
loopne
mov
and
movsl
adc
testb
fs
xchg
push
sbb
xor
jns
push
inc
cltd
out
adc
clc
xor
and
insl
inc
loop
test
mov
cmp
iret
inc
and
adc
aas
pop
lret
mov
pop
mov
pop
mov
dec
add
scas
or
push
rcrl
push
and
int
xor
inc
jmp
lcall
dec
push
cmp
jno
inc
mov
pop
fs
push
or
imul
cmp
and
cmp
jecxz
cmc
pop
and
xor
fiadds
xchg
movb
inc
inc
pop
xlat
or
je
dec
cmc
sahf
mov
or
fst
into
scas
adc
add
sbb
add
jns
cmpb
cld
popa
jle
cmp
mov
imul
dec
adc
push
add
into
mov
movsb
ror
mov
insb
sub
sub
ds
test
sub
or
xor
pop
movsb
in
inc
push
adc
or
xchg
faddp
dec
rclb
jmp
adc
in
fbld
loopne
dec
popa
std
jne
push
add
xlat
push
dec
or
mov
sub
aad
jno
jb
push
pop
adc
fcomps
ja
and
cld
push
sbb
aaa
loop
mov
or
sbb
adc
bound
cli
aad
sub
popa
rorl
out
test
negl
pop
outsl
xchg
cld
ljmp
cmp
ds
lret
scas
lret
lret
mov
push
add
jp
pop
cmp
sub
mov
adc
lahf
jne
clc
in
movsl
fwait
pop
jmp
mov
fwait
xorl
xadd
cs
negb
or
mov
xchg
sahf
jg
jno
int3
fldt
pop
aas
add
repz
jnp
lods
int
js
iret
mov
ret
insb
mov
dec
and
jns
xor
pop
push
loope
icebp
jg
mov
mov
sbbl
pop
jmp
inc
and
addr16
mull
adc
push
fisubl
ljmp
mov
mov
adc
xorl
pop
mov
leave
js
cmp
bound
ja
movhps
pop
cmp
xchg
and
mov
jb
xor
ja
or
xchg
xor
fdivrl
cmp
imul
test
jne
xchg
mov
ljmp
sub
mov
xlat
fwait
js
dec
gs
push
out
call
sub
jl
int3
cmpsb
in
or
adcb
sub
lea
stos
cwtl
lods
fildll
xchg
ss
xor
mov
jmp
repz
popa
pop
jo
mov
aad
movsl
mov
popf
addr16
and
js
cmp
and
dec
insl
adc
out
shr
lock
fadd
mov
mov
jno
inc
pop
push
dec
and
xor
add
adc
loope
icebp
out
rcr
into
mov
sahf
xchg
mov
jno
inc
pop
push
dec
and
xor
add
adc
loope
icebp
out
rcr
into
mov
sahf
xchg
mov
inc
cmp
ficoml
add
xor
es
adc
sbb
nop
ljmp
pop
mov
xorl
adc
cmp
cs
pop
rorb
xchg
xchg
pop
cmovp
sahf
push
cs
and
stos
testl
xchg
mov
jno
inc
pop
push
dec
and
xor
add
adc
loope
icebp
out
rcr
into
mov
sahf
xchg
mov
int3
int3
int3
int3
mov
xor
sub
je
dec
je
dec
jne
call
jmp
mov
movl
mov
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
call
mov
movl
movl
movl
movl
movl
mov
call
push
call
pop
jmp
call
mov
ret
push
mov
sub
movl
mov
mov
call
mov
mov
mov
cmpl
je
mov
movzbl
mov
add
movzbl
sub
test
je
call
push
call
pop
jmp
push
push
push
push
call
mov
mov
mov
jmp
mov
dec
mov
cmpl
jbe
pushl
call
mov
pushl
call
jmp
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
sub
add
mov
mov
add
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
mov
movzbl
movzbl
xor
mov
add
mov
jmp
xor
cmpl
setne
leave
ret
push
mov
mov
pushl
cmp
pushl
jne
pushl
jmp
push
call
pop
ret
dec
aaa
pop
daa
outsl
pop
jg
add
inc
dec
cmp
iret
mov
lods
out
xchg
incl
scas
mov
daa
outsl
pop
jg
emms
pop
addr16
push
aas
and
mov
cmpsl
fwait
fwait
incl
scas
xlat
mov
pop
xor
outsl
out
cmpsb
cmpsb
xor
scas
push
jmp
push
inc
and
push
push
mov
pop
es
push
push
mov
jo
pop
and
lods
xchg
mov
lahf
leave
fnstcw
ds
sbb
or
push
cli
xchg
add
dec
mov
repz
les
push
xchg
fdivrl
cmp
popa
jae
inc
inc
push
mov
mov
call
fldl
divb
push
dec
outsl
inc
jg
cmove
dec
jo
or
out
jle
mov
inc
xchg
inc
push
ss
and
ja
lock
popa
sub
sub
mov
mov
sbb
push
das
xor
xor
insl
xor
ja
mov
fnsave
iret
mov
fwait
jmp
clc
inc
addr16
push
out
jl
mov
pop
xor
out
fbstp
cmp
add
mov
fstpt
mov
cmpsb
push
das
pop
aad
inc
popf
pop
push
cmp
js
test
jns
mov
adc
or
mov
sub
les
pop
bound
pop
popf
jae
gs
aam
mov
fs
add
xor
mov
daa
inc
jno
jg
push
adc
xchg
imul
xchg
adc
sub
inc
dec
mov
out
cmpsb
outsl
call
imul
mov
push
lret
out
sbb
mov
sub
cmp
arpl
jg
jnp
ss
sbb
inc
inc
cmpsb
xlat
cli
adc
mov
push
lahf
xor
dec
cmpsl
sbb
and
imul
sub
mov
cmpsl
pop
mov
enter
addb
xchg
jg
leave
and
stos
loop
mov
jmp
jp
arpl
mov
in
push
pop
sbb
xchg
andb
or
rolb
int
adc
xchg
inc
xor
add
and
pusha
adc
fldcw
std
mov
out
inc
lret
mov
mov
mov
ja
cwtl
out
mov
mov
xlat
mov
jbe
mov
cld
jns
gs
and
fmull
lock
fmul
sbbb
mov
data16
cmpxchg
mov
in
outsl
add
xchg
xor
cwtl
cmp
pop
jle
emms
jg
fsts
pop
dec
mov
mov
lahf
out
daa
les
pop
ret
adc
lods
mov
cmpsl
movsb
aam
int3
mov
lahf
movsb
imul
add
enter
pop
add
pop
ja
aaa
inc
test
lahf
pop
and
scas
stc
enter
sub
ret
cmp
aaa
shlb
call
loopne
mov
cmpsb
fwait
out
jmp
pop
or
fistpll
lock
adc
dec
lcall
or
cld
sub
pslld
dec
sub
mov
push
xor
xchg
adc
cmpsl
xlat
xor
test
incl
push
cwtl
inc
cmpsl
or
xchg
imul
mov
ljmp
pop
xchg
cmovp
arpl
lret
push
push
mov
ljmp
int3
or
bound
fucomip
pusha
scas
mov
mov
cli
in
subl
xor
pop
inc
xor
cwtl
jno
clc
inc
aas
filds
jo
mov
inc
aaa
fcomp
outsl
mov
mov
push
cmpsl
data16
or
xchg
das
ja
movsb
mov
shll
clc
pop
js
out
pop
sub
xchg
xchg
sub
or
fisttpl
mov
jb
and
fs
xchg
mov
fbld
ja
adc
mov
call
shrl
cmc
repz
pop
aaa
filds
jae
fbld
jmp
inc
flds
push
jno
nop
xchg
adc
rclb
shrl
jle
dec
dec
movsb
daa
fstpl
xchg
mov
push
add
pop
dec
add
jns
or
shlb
and
push
cmp
dec
mov
cmp
and
loop
add
mov
out
popl
shll
out
ds
ret
pop
ljmp
movsb
test
add
cmp
js
pop
cmc
outsb
push
fdivrs
lods
mov
orb
push
mov
inc
cmp
ficoml
xchg
std
aam
sti
push
push
fstpl
movsl
movsl
fsubrl
gs
push
int
aam
mov
inc
sub
mov
push
enter
pop
dec
pop
pop
or
and
test
push
pop
insb
mov
jne
in
add
arpl
shll
imul
repnz
int3
cmp
lds
lods
adc
jg
push
jb
cltd
push
push
and
jmp
adc
or
stos
mov
dec
sub
rcrb
hlt
test
mov
adc
outsl
add
xchg
insl
cmp
fsubrs
call
mull
add
inc
repnz
fs
mov
add
ficoml
pushf
and
iret
push
arpl
gs
rolb
stc
mov
imul
stc
insb
loope
dec
pop
dec
and
pop
loopne
push
rolb
fcompl
imul
cmp
sub
out
cs
scas
xor
add
push
mov
mov
pushf
mov
or
or
fists
test
push
cmc
sbb
fwait
dec
pop
xor
sbb
pop
orl
out
add
outsb
mov
lret
adc
ret
fs
xorl
aas
scas
daa
dec
adc
out
or
iret
mov
inc
mov
repz
mov
sbb
mov
das
dec
mov
xchg
cmp
inc
loopne
cmpsb
add
movsl
dec
push
testl
push
pop
outsl
inc
shrl
imull
test
push
fcmovu
cld
jecxz
rcll
addr16
in
ret
cmp
sub
testl
ret
scas
clc
jg
xchg
sahf
cli
cmpsl
rol
ja
and
mov
or
cwtl
inc
mull
scas
inc
jne
ret
adc
xchg
cld
test
stc
sbb
insb
daa
outsl
pop
jg
emms
jnp
popa
cmp
inc
iret
mov
cmpsl
cmpl
mov
xor
in
push
adc
xlat
push
stos
sarl
pushl
std
jo
cmp
scas
addr16
push
push
xor
push
insb
mov
in
and
movsl
adc
xchg
pop
mov
mov
or
out
cli
sahf
cwtl
or
mov
mov
popa
mov
mov
out
test
in
mov
leave
mov
jmp
lahf
cld
es
iret
lods
test
ds
loop
jae
les
das
push
push
and
xchg
xchg
mov
and
outsb
ljmp
cmpsl
and
loop
loope
out
cli
pop
push
mov
cmpsb
sbb
or
cmp
fisubrl
sub
cwtl
sbb
xchg
fidivl
iret
add
push
add
orl
test
inc
fidivrs
insl
adc
aas
push
pop
push
adc
es
mov
lock
rcrl
rorl
daa
outsl
pop
jg
emms
pop
addr16
push
aas
inc
iret
mov
cmpsl
out
xchg
incl
scas
xlat
mov
daa
outsl
pop
jg
emms
pop
addr16
push
aas
inc
iret
mov
cmpsl
out
xchg
incl
scas
xlat
mov
jg
outsl
dec
lahf
cmp
sbb
out
aad
les
mov
mov
jns
lcall
xor
movl
pop
ffree
int3
fs
dec
xchg
jne
fs
push
mov
and
enter
dec
jmp
xchg
xlat
mov
daa
outsl
pop
jg
emms
pop
addr16
push
aas
inc
iret
mov
cmpsl
out
xchg
incl
scas
xlat
mov
int3
int3
mov
mov
test
je
mov
push
add
push
push
mov
call
ret
add
inc
xor
pop
adc
adc
shlb
mov
xchg
cmc
xchg
add
inc
xor
xor
jne
test
xchg
repnz
xchg
mov
vpsubusb
in
cmc
xchg
add
add
mov
movq
lret
scas
adc
lods
scas
inc
lds
adc
movsl
ljmp
inc
or
pop
cwtl
lcall
stos
scas
addl
and
mov
push
dec
out
xchg
pop
inc
nop
sub
jmp
mov
insb
popa
and
push
jb
bound
addr16
movl
sub
mov
jb
inc
push
push
aaa
inc
xor
sbb
dec
imul
and
popa
sbbb
or
or
pop
dec
cmp
dec
or
and
mov
cmc
sahf
dec
mov
or
xor
sub
cmp
xchg
fsts
add
xchg
xor
mov
and
in
sub
loop
mov
gs
shrl
dec
dec
pop
jmp
xchg
mov
pop
add
stc
daa
xor
cmovno
sub
dec
popf
decl
xchg
out
inc
mov
xchg
xchg
fwait
mov
inc
jb
cwtl
mov
inc
pop
jmp
dec
sub
jp
push
movsb
mov
mov
sub
inc
mov
xor
inc
cmp
stos
fs
call
mov
repz
pop
loop
fucomip
insl
dec
outsb
adc
push
mov
jbe
stc
shl
lods
push
pushf
cmp
sub
jnp
adc
xor
pop
push
test
shll
cmp
xchg
or
xor
sub
push
mov
sbb
cmp
cld
pop
jae
inc
or
mul
test
shlb
gs
ja
insl
loopne
mov
dec
mov
fimull
adc
xor
mov
fs
inc
lea
cmp
mov
jge
inc
repnz
fstl
sub
xchg
std
mov
iret
std
mov
pop
xchg
xchg
out
cmp
cmc
clc
or
ljmp
fnstsw
fwait
adcl
and
fwait
mov
repnz
sub
add
or
jg
data16
out
cli
pop
ret
cwtl
mov
mov
sbb
add
mov
jb
and
push
sub
pop
xchg
out
mov
sub
cld
cltd
sbb
cli
inc
inc
lea
cmpsl
push
int
inc
add
clc
imul
pop
aad
sub
pushf
fstl
inc
xor
pop
fs
cmpsl
les
std
dec
cltd
push
imul
test
pop
lds
dec
xchg
popf
andb
jo
les
shl
add
add
mov
aaa
fwait
stos
or
movsl
jmp
mov
push
add
nop
outsl
loopne
mov
dec
sub
cli
inc
negb
popf
or
dec
mov
ja
test
cmp
add
mov
jmp
pop
xor
mov
xchg
and
mov
xchg
push
sub
sub
movsl
push
mov
xchg
fstps
add
dec
xchg
outsl
jmp
cs
and
and
pop
pop
or
cwtl
leave
or
sub
lea
in
adc
idiv
insl
and
cmp
or
jge
lock
or
xchg
lock
jp
adc
hlt
cmp
mov
in
rcrb
in
sub
movsl
imul
mov
add
out
std
jne
jp
nop
out
cmp
adc
mov
scas
inc
lret
hlt
stos
int
mov
hlt
or
inc
mov
cli
jo
mov
mov
movsb
mov
in
push
push
jnp
icebp
out
cmp
mov
mov
test
pop
xor
loope
jno
and
cmpsl
cld
xlat
aad
fwait
rorb
xlat
pop
fcmovu
inc
arpl
stos
int
out
inc
jp
push
cmp
cmp
fcmovne
mov
cmpsb
push
popf
pusha
lea
adc
int
sbb
xor
repz
icebp
pop
loope
fwait
outsb
add
les
push
jbe
inc
mov
adc
mov
jp
sbb
lods
xchg
xchg
fcoml
data16
lcall
int
mov
xchg
push
mov
sbb
pop
xchg
fstps
cmp
pop
inc
stc
scas
leave
inc
pop
jle
fisubs
je
shrb
mov
lods
sub
add
insl
cli
popf
pop
sub
xchg
fstl
repz
out
shlb
inc
int3
xorl
orl
arpl
pusha
inc
fists
sub
insl
ja
in
mov
xchg
mov
jne
out
cli
push
ljmp
ja
std
xor
jp
adc
pop
and
and
divw
rcll
fsts
into
cmp
pop
int
mov
hlt
rclb
push
js
cli
in
and
push
dec
lods
int3
fcoml
xchg
test
xchg
sub
mov
mov
xor
sbb
stos
add
and
int3
jg
fisttpll
out
mov
jb
mov
lods
pop
pop
adc
mov
adc
or
mov
ja
dec
cmc
sub
out
cmpsb
xchg
sbb
mov
inc
and
dec
test
jge
and
pop
out
lock
fidivrl
fmul
gs
in
cmp
mov
lds
mov
add
addb
add
pop
inc
sub
add
dec
repz
dec
pop
pop
ret
cmpsb
pusha
jge
andl
shll
and
stos
jp
jl
out
inc
mov
push
pop
mov
mov
outsb
xor
adc
inc
sbb
insb
jl
jp
iret
test
insl
cmp
cmp
or
popa
sub
int
push
cmp
insb
fstpl
cli
dec
sub
or
adc
stc
pop
xor
stos
xor
lret
sbb
inc
sarb
mov
jns
insl
rclb
lcall
dec
aas
lea
push
and
scas
xchg
sbb
pop
lea
dec
xchg
pop
cmp
dec
in
aad
out
cmp
xor
lods
cmc
xchg
cmpsb
jns
ja
xor
inc
and
jae
add
test
rcl
lds
cmc
xchg
add
repnz
in
xor
add
xor
call
mov
jno
stos
cltd
leave
js
cmp
xchg
pop
xchg
and
mov
nop
mov
lds
jp
xchg
push
cmc
int3
div
popf
popf
ret
insl
mov
mov
inc
pop
mov
pushf
cmp
cmp
mov
movsb
add
test
out
das
xor
mov
pop
pop
pop
xor
mov
or
popa
repz
mov
dec
sbb
mov
mov
inc
pop
pop
or
or
add
xchg
into
mov
imul
imul
inc
ljmp
mov
in
mov
out
lcall
mov
shll
sbb
outsl
cmp
cwtl
inc
push
test
imul
sbb
lret
sarb
incl
and
and
add
test
xchg
repnz
ret
lds
cmc
xchg
add
inc
xor
xor
jne
test
xchg
repnz
ret
lds
cmc
xchg
add
jno
popa
pop
pop
xor
and
out
aaa
out
cltd
lahf
aad
pop
mov
mov
mov
sbb
push
nop
cmp
in
shrb
out
xchg
and
arpl
dec
push
jg
insb
adc
mov
es
test
insl
hlt
mov
lds
cmc
xchg
add
inc
xor
xor
jne
test
xchg
repnz
ret
lds
cmc
xchg
int3
int3
int3
int3
int3
lods
xchg
mov
movsb
out
orb
adc
add
xor
and
push
jle
dec
je
xchg
movsb
out
aam
into
hlt
fsubp
cs
add
xor
and
push
jle
dec
je
fs
xchg
push
or
pop
push
jle
fdivs
sub
call
fcomps
lahf
imul
mov
mov
das
bound
add
dec
and
je
add
add
mov
fcmovbe
lcall
cmp
and
inc
push
shrl
mov
inc
fstps
xor
xchg
mov
shlb
cmp
pop
jge
pop
cmp
lock
test
enter
std
xor
sub
add
pop
das
or
push
dec
mov
sbb
imul
stos
mov
ljmp
add
push
outsb
cmc
sbb
cmpsb
fwait
insl
shr
dec
mov
pop
hlt
out
into
push
sbbl
movsb
adc
repz
jne
and
je
pushf
or
sar
xchg
mov
cmpsl
push
aam
insl
or
xchg
or
mov
loop
data16
je
xchg
call
mov
pusha
push
push
cmp
lea
add
lock
divb
push
ficoms
or
cltd
mov
dec
and
mov
fldt
rol
lret
and
call
adc
or
push
pushf
jmp
std
in
add
adc
aas
push
add
pop
cmp
dec
fwait
mov
xor
dec
popa
mov
pop
sbb
outsl
aas
sbb
aaa
sub
xor
push
pusha
dec
mov
cmpsl
adc
imul
mov
add
inc
ja
icebp
aas
pop
aad
xor
int3
xchg
or
inc
mov
scas
jl
mov
jne
mov
cli
fs
sub
orb
sahf
xchg
in
stos
xchg
add
mov
mov
hlt
je
xor
mov
outsl
iret
lret
sub
inc
adc
aas
popa
dec
ljmp
loope
xchg
push
or
jo
test
inc
jle
push
mov
jb
loope
xchg
inc
scas
and
fs
jl
mov
add
or
neg
cld
push
in
xor
je
pop
inc
push
lds
mov
mov
test
cmp
out
inc
divl
insl
cmp
cmpl
sub
dec
rcrl
pop
rol
push
jnp
sbb
movsb
out
inc
adc
mov
in
push
push
outsb
jp
mov
test
aad
push
lea
lcall
mov
icebp
xlat
scas
outsb
filds
out
jmp
repnz
jmp
jae
int3
in
and
mov
jmp
pop
mov
popf
js
notb
mov
push
sbbl
jp
sub
int3
lret
sub
mov
xchg
dec
subl
aas
lcall
mov
daa
lret
push
std
rorb
add
inc
mov
jmp
mov
stos
mov
ja
ucomiss
jp
xor
cld
xor
aad
es
ret
pop
adc
adc
fildll
jl
ret
push
jecxz
loope
hlt
mov
mov
jnp
mov
pop
push
stos
jne
cwtl
hlt
sbbb
jmp
add
bound
sbb
decl
outsl
xchg
mov
and
ret
jns
std
movsb
sbb
or
lret
push
popa
sub
iret
fwait
and
mov
dec
cs
icebp
or
mov
std
jnp
dec
push
int
gs
setb
mov
test
leave
pop
cmp
xchg
cmp
add
jnp
xchg
mov
outsl
ljmp
sub
test
aaa
jg
imul
hlt
dec
jl
push
cmp
mov
add
mov
dec
mov
jno
and
adc
cli
add
loopne
xchg
dec
cmpl
sti
bound
pop
sbb
xor
test
into
frstor
ja
addr16
xchg
push
imul
aas
in
mov
rcl
jl
outsb
push
dec
xchg
gs
fldl
mov
scas
pushf
inc
xchg
jno
mov
mov
sbb
cs
sbb
or
dec
jp
cmp
sahf
mov
shrl
cmp
lahf
sub
and
in
jg
mov
aam
out
xchg
dec
dec
gs
js
test
pop
or
sbb
fstpt
mov
push
mov
fistl
xor
ret
arpl
ss
inc
pop
test
fwait
sarb
test
inc
and
add
outsb
xchg
dec
nop
insl
stos
and
cwtl
ss
insb
dec
dec
popa
push
ss
sub
es
push
lret
pusha
popa
mov
lea
mov
ljmp
or
mov
inc
xor
lret
pop
std
and
pop
push
scas
clc
jle
enter
gs
jnp
iret
cli
cs
and
lret
loope
test
pusha
sbb
inc
in
xchg
ret
inc
mov
mov
or
and
jb
fistl
xchg
pushf
push
fs
xchg
mov
loop
pop
add
dec
or
in
into
dec
loope
in
cmpl
out
mov
fimuls
lods
add
add
lret
adc
ds
push
lret
popf
push
xchg
stos
add
mov
imul
outsb
shlb
sub
sbb
inc
loope
push
or
cmp
int3
or
cli
ret
clc
mov
add
jl
insl
push
add
add
jns
das
push
xchg
jnp
mov
dec
daa
sub
jae
cs
mov
rclb
cli
adc
adc
cli
pop
sbb
pop
repz
lret
stc
pop
adc
xchg
xor
pop
adc
mov
or
pop
addl
mov
das
incb
or
push
pusha
insb
push
xor
pusha
jge
xchg
cltd
cmp
arpl
lock
loop
dec
into
ljmp
jo
inc
dec
rclb
or
dec
mov
lret
jecxz
je
adc
dec
mov
push
sti
icebp
lret
xchg
insb
adcb
in
mov
mov
sub
jmp
iret
mov
sti
icebp
data16
cmp
or
mov
les
adc
add
xor
and
push
jle
dec
je
fs
xchg
pop
sbb
mov
inc
sbb
pusha
shll
das
arpl
insl
adc
shll
or
xor
inc
jmp
subl
cwtl
push
bound
cmp
or
and
test
arpl
pop
outsw
test
mov
jl
jb
enter
mov
icebp
mov
cmp
sbb
push
inc
adc
daa
jmp
cltd
ret
lahf
mov
outsl
rcrl
popf
stc
xchg
adc
fucomp
fistps
and
loopne
fstpt
xor
cmpsb
or
stos
sbb
fisttpl
xor
bound
mov
ret
jns
jmp
push
pop
inc
inc
jne
bound
cltd
fnstcw
cmp
fdivs
pop
inc
add
adc
inc
dec
insb
insl
je
pushf
mov
movsb
out
aam
into
hlt
fsubp
cs
add
xor
and
push
jle
dec
je
fs
xchg
mov
movsb
out
aam
into
hlt
fsubp
cs
add
xor
and
push
jle
dec
je
fs
repnz
xor
add
ljmp
lcall
imulb
movsb
inc
loopne
sub
jns
icebp
lds
jne
jno
mov
imul
sti
add
sbbl
mov
int
es
jno
xor
insb
mov
adc
adc
mov
pop
outsl
lret
pop
or
and
push
jle
dec
je
fs
xchg
mov
movsb
out
aam
into
hlt
fsubp
cs
add
xor
and
push
jle
dec
je
fs
int3
int3
int3
int3
lea
mov
nop
add
jmp
push
cltd
dec
stos
adc
data16
cmp
std
or
push
add
or
add
add
push
pop
add
add
inc
add
mov
adc
mov
mov
xor
dec
add
add
add
add
add
mov
clc
add
add
add
add
add
add
add
add
inc
add
add
add
add
pop
add
add
add
add
add
add
insl
add
xchg
add
add
add
pop
add
add
jmp
add
mov
add
add
add
add
inc
add
lahf
add
add
dec
add
add
add
add
cmc
add
cmp
incl
pop
add
add
add
add
lret
add
cmp
ja
das
add
add
jns
cltd
add
add
fiadds
inc
add
stc
add
add
add
add
popf
add
and
add
add
add
jg
incl
push
add
insl
add
add
add
add
inc
add
mov
lea
and
pop
add
add
add
add
add
add
adc
pop
add
add
add
add
add
int3
add
add
add
push
add
add
add
add
add
add
sbb
cmc
add
lahf
add
add
add
add
add
movsl
add
add
add
inc
add
cmc
add
stc
add
dec
add
insl
add
add
lea
adc
xor
stos
add
add
add
sub
add
add
addb
add
cmp
inc
add
add
add
cmpsb
add
add
add
add
cmp
push
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
out
ss
add
add
add
add
add
add
add
mov
lahf
add
insl
add
incl
cld
add
add
add
add
add
add
push
add
add
add
pop
add
flds
dec
add
add
add
add
add
sub
add
add
jbe
jge
sahf
add
add
add
add
add
add
adc
in
pop
add
add
add
add
add
inc
add
xchg
add
sub
filds
daa
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
mov
adc
or
sub
add
add
adc
cmp
add
dec
add
add
add
filds
cmp
lret
add
add
incl
dec
add
add
inc
add
add
add
mov
inc
add
xchg
add
scas
add
add
add
add
add
movb
add
add
add
add
add
add
add
add
or
fiadds
mov
jns
push
add
add
xor
lldt
sub
xchg
add
add
add
add
enter
clc
add
add
add
add
add
sub
add
add
add
ja
and
add
add
add
add
add
add
into
add
add
add
add
add
or
add
add
add
pop
add
add
add
add
add
add
clc
add
int
sti
add
mov
movb
add
add
add
add
add
pop
add
add
pop
add
add
add
adc
cmp
dec
add
add
lahf
add
add
add
add
add
movsb
add
pop
add
add
add
add
add
add
add
pop
add
add
add
les
dec
add
add
jge
adc
xchg
add
outsb
add
sbb
add
add
add
add
or
add
add
add
dec
add
add
add
add
add
add
fwait
add
push
add
add
add
add
add
les
cmp
sub
add
add
xor
add
or
add
add
push
add
cltd
add
cmc
add
add
addl
pop
add
add
add
jl
sub
and
mov
add
add
add
and
sbb
cltd
add
add
inc
add
bound
add
popa
add
add
add
add
add
add
add
add
add
add
mov
add
cmc
add
add
sub
add
add
nop
add
add
add
add
add
sub
add
add
addl
movb
add
add
add
mov
gs
add
add
add
add
insl
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
jae
jg
mov
push
add
add
add
or
addb
add
sub
add
add
dec
add
xchg
sub
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
cmpl
push
mov
je
cmp
je
lea
push
push
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
test
jne
mov
lea
push
call
not
mov
pop
mov
or
mov
leave
ret
or
mov
mov
int
mov
sbbb
or
push
sub
xor
imul
add
shrb
mov
sbb
add
sub
xor
jnp
imul
repnz
mov
shrb
lock
test
mov
imul
clc
inc
jnp
daa
inc
inc
sarl
int3
sbb
outsb
pop
cmp
ss
aas
dec
adc
add
mov
mov
sbb
pop
push
into
cld
mov
aaa
xor
cmc
inc
rorl
xor
iret
int3
out
in
stc
cld
or
sbb
and
or
dec
inc
jl
imul
out
iret
shrb
mov
push
push
hlt
pushw
in
sbbb
push
pop
jne
test
lods
ret
mov
lcall
dec
scas
inc
cltd
pop
xor
shlb
into
into
lds
test
pop
push
lret
mov
xchg
pop
dec
fdivs
add
mulb
xchg
xchg
mov
mov
sbb
mov
cmp
pop
dec
pop
fnstenv
ja
lods
xchg
and
rcrb
mov
call
dec
lret
adc
daa
push
cmp
insb
jle
into
adc
pop
rolb
iret
aaa
rcrl
data16
cld
pop
push
inc
jmp
push
mov
push
inc
fwait
or
mov
iret
test
das
stos
pop
jmp
in
lret
aas
das
mov
or
add
lods
imul
imul
xchg
cmpb
mov
mov
sbb
adc
adc
xchg
and
mov
shrb
jne
xorl
jg
mov
and
mov
cld
sbb
daa
mov
sub
inc
adc
jl
lock
test
into
jns
lret
mov
cs
mov
sbbb
lret
lods
add
adc
pop
cli
loopne
les
std
xchg
jnp
lcall
sbb
icebp
test
inc
fidivrs
add
outsb
or
sub
shll
jae
std
cs
decb
mov
call
bound
dec
jmp
loop
in
pop
and
shrb
lods
or
xchg
sbb
aam
sarb
pop
shlb
jp
fwait
scas
mov
stos
rcl
shlb
lea
inc
lea
lods
mov
insl
shll
pop
cmc
int
fisubrs
rolb
ret
mov
or
jp
inc
sbb
and
movsb
mulb
jp
pop
add
xor
icebp
outsb
pop
mov
dec
jne
push
ljmp
out
cld
int3
fstl
stos
lahf
fistpl
sbb
cmc
push
inc
mov
test
ret
std
fwait
scas
mov
inc
shlb
or
xor
add
xor
or
je
pop
loop
adc
outsl
mov
out
fisubl
insl
repnz
dec
mov
pop
inc
movsl
sub
enter
adc
into
lds
popf
daa
fcoms
sbbb
jmp
das
gs
fisttpll
in
xchg
mov
xchg
push
scas
imulb
inc
in
out
sahf
jp
fsubl
xor
bound
jle
loopne
sbb
push
dec
jb
jle
pop
or
jne
push
imul
mov
fwait
out
lahf
cmpsb
cmc
xchg
mov
cmp
xchg
jmp
aaa
mov
cmp
into
xchg
into
cmp
cmp
repz
mov
data16
aam
jne
ja
or
imul
or
cs
repnz
arpl
int
xlat
xchg
push
jl
and
push
jecxz
rolb
push
mov
das
jmp
insb
orl
aam
dec
jg
fnstsw
sbb
pop
inc
lods
and
xor
cmc
xlat
xchg
mov
add
sub
push
dec
jne
cs
push
inc
pop
in
cmpsl
and
lret
shlb
icebp
andb
das
leave
xlat
mov
xchg
mov
movb
xor
and
adc
jmp
sbb
in
les
push
mov
ret
or
ret
add
inc
jp
sbb
repz
sub
sbbl
cs
fdivr
imul
outsb
loop
test
dec
add
pusha
cld
mov
lcall
das
jp
sbb
test
daa
js
adc
xor
xchg
mov
pop
stos
movsb
mov
pusha
mov
icebp
add
idivb
push
test
mov
jmp
in
dec
pop
jle
les
lock
int3
ja
or
mov
cmp
jge
mov
stos
movsb
enter
sub
loop
sub
fisubrs
cmp
pop
cs
dec
jb
add
jne
in
out
adc
cwtl
arpl
sub
lret
repnz
cmp
out
and
lods
pop
scas
fisttpl
pop
dec
in
mov
cmp
lret
sbb
insl
fistps
stc
lds
sub
adc
mov
dec
js
les
ret
push
sub
jb
mov
jbe
xorb
in
test
mov
mov
loopne
sub
popf
std
xor
test
pop
sbb
aas
adc
shlb
insb
sahf
jbe
xchg
inc
sub
and
insl
out
imul
leave
repz
cmp
icebp
sbb
inc
or
push
xor
ret
xor
inc
jae
jecxz
push
inc
xor
adc
jns
mov
loop
cmp
je
movsl
pop
insl
mov
ja
inc
xlat
andl
cltd
sub
rcr
iret
sarl
les
pop
or
pop
pop
and
fdivs
add
pop
cmovb
aad
lret
cmpsl
mov
repz
xor
sbb
outsl
lret
push
mov
cld
iret
sub
enter
mul
pop
lea
out
and
jg
or
xchg
pop
pop
xor
jmp
bound
inc
mov
xor
fldl
repz
stos
sub
pushf
mov
in
jne
and
jecxz
pop
xor
pop
roll
push
push
stos
adc
dec
lods
filds
leave
popf
dec
rcrl
push
fs
ds
jne
in
xchg
mov
or
fstpl
push
cmpsb
push
push
or
popf
cmc
mov
and
lret
jmp
loop
shrb
mov
sbb
bound
pop
inc
pop
xor
jnp
imul
repnz
jmp
je
xchg
and
aas
and
cmp
add
insb
test
adc
dec
rcl
inc
dec
xor
mov
je
cmpsb
jne
dec
xlat
inc
fsubrp
push
cmp
mov
popf
adc
adc
push
lahf
clc
pusha
cwtl
cmpsl
mov
mov
dec
cwtl
out
cmp
cmpsb
out
or
pop
mov
fwait
inc
push
push
sub
cli
cld
popa
pop
mov
xchg
lock
push
and
das
outsl
paddq
jnp
popf
xor
sbb
outsl
xor
sub
dec
mov
and
sbb
xchg
scas
add
or
lds
addb
ja
jbe
or
xor
js
sub
mov
mov
les
inc
pop
bound
jle
outsb
add
fiadds
fcmovbe
xchg
imull
or
pop
cs
jnp
arpl
jp
jl
mov
shrb
mov
sbb
bound
push
sub
xor
jnp
imul
repnz
mov
mov
mov
sbb
bound
push
sub
xor
jnp
imul
rol
shl
and
sub
shll
or
jle
jge
xor
ljmp
fsubrl
cmc
push
inc
popa
push
jbe
add
cmpl
enter
out
scas
cld
sub
xchg
mov
pop
xor
jnp
imul
repnz
mov
mov
mov
sbb
bound
push
sub
xor
jnp
imul
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
leave
ret
mov
mov
test
je
mov
push
add
push
push
mov
call
ret
adc
pop
and
dec
pop
pop
push
call
aad
stos
in
in
adc
pop
and
and
gs
clc
test
mov
lahf
enter
test
fsub
mov
xor
mov
jae
test
arpl
mov
cli
mov
sarl
dec
aad
and
dec
pop
int3
cwtl
mov
inc
adc
or
clc
jecxz
mov
xchg
mov
pop
fs
xor
mov
daa
mov
ss
push
push
dec
test
push
adc
cmp
fwait
scas
je
xor
insb
add
or
or
repnz
dec
fidivrl
or
mov
xor
push
ss
inc
jns
or
xor
aam
push
sub
or
aaa
ss
cwtl
xor
sub
mov
sbb
inc
push
ficoml
or
and
sbb
adc
push
xchg
cmp
jne
outsb
lcall
test
pop
stos
jle
xchg
insb
inc
or
shll
fisubl
cmpsb
jnp
and
pop
mov
push
jno
stos
test
repz
fsubp
scas
mov
lahf
mov
sub
dec
sahf
sub
scas
or
popf
cmc
ds
scas
mov
xchg
jl
icebp
push
mov
fwait
mov
mov
xchg
js
dec
ss
adc
or
pop
leave
call
mov
xchg
ficomps
xor
cs
or
mov
jmp
jge
mov
gs
inc
cmp
xor
push
push
jne
pusha
dec
lods
ds
sub
clc
nop
in
daa
add
popf
sbb
mov
sub
jo
insl
fwait
rclb
frstpm(287
int
ffree
jle
imul
xchg
cmpsb
push
aam
sub
adcb
jo
inc
mov
dec
pop
lcall
inc
inc
sbb
test
out
xor
loope
mov
push
int3
lds
mov
ds
mov
outsl
add
lcall
push
es
cmc
xor
fbld
repnz
sti
push
je
lcall
push
pop
jp
mov
pop
std
lret
dec
dec
incb
into
fdivr
aad
add
mov
sub
push
adc
rcrb
pop
adc
cs
daa
js
cmp
mov
mov
inc
cmp
pusha
movsl
repz
jecxz
fxch
or
mov
loopne
push
fwait
cmp
mov
sub
cmpsb
imull
xchg
mov
adcl
or
mov
adc
int
sahf
aad
mov
jo
nop
leave
ljmp
ret
mov
or
aad
sub
sub
and
popa
cmpb
ret
sub
mov
sbb
xor
clc
xchg
call
stos
mov
push
je
orl
stos
adc
lods
sbb
mov
push
icebp
movsl
jge
repnz
mov
iret
lock
add
adc
sbb
cmp
imul
xlat
xor
int
xchg
jns
rclb
push
mov
lds
pop
mov
push
jbe
or
add
cli
cmpb
push
inc
mov
jp
adc
lods
aaa
sub
imul
xchg
fisttpll
push
mov
and
repnz
jp
xor
test
fmul
in
nop
mov
jns
sbb
push
mov
ja
insl
inc
sbb
mov
mov
in
cltd
mov
fcmovb
lock
adc
fsub
subl
repnz
idiv
aad
je
orl
lahf
fcmovb
adc
xlat
popf
rcrl
fwait
mov
or
out
cmp
repnz
insb
outsl
xchg
push
mov
into
pushf
pop
nop
movsl
mov
fcomip
aaa
nop
call
lock
repz
popa
cmpsl
pop
pop
loope
dec
sub
dec
adc
pop
shl
mov
jnp
outsl
jmp
sbb
loopne
cmpsl
ret
mov
adc
shll
push
sub
sbb
out
adc
xlat
sub
insl
xchg
loop
imul
cmc
dec
call
xchg
mov
pop
push
mov
hlt
and
adc
icebp
inc
fnstsw
mov
adc
jo
dec
inc
mov
fstpt
out
adc
inc
xchg
push
jl
jl
in
or
in
xchg
add
rcrb
or
arpl
xor
xor
dec
adcb
je
or
cmp
out
sbb
gs
lds
aam
mov
sahf
enter
mov
dec
stos
rcrb
rcrl
pop
loopne
divb
aad
or
lahf
into
jecxz
std
dec
cli
sahf
fisubs
adc
jge
jge
pop
sub
aad
mov
and
scas
lds
or
jo
out
idivl
jo
enter
rolb
jnp
cmp
push
cmp
xchg
cli
scas
fcmovnb
daa
jecxz
cmp
nop
fwait
ja
sub
mov
mov
jo
jge
push
in
scas
sub
pop
push
add
mov
mov
jp
lock
shll
test
arpl
and
jmp
andb
add
dec
and
xchg
lret
test
sub
push
or
jge
lret
lds
out
fiadds
insl
int3
icebp
and
xor
or
sub
fs
add
popa
or
rcll
iret
lods
mov
addr16
imul
cmp
push
xchg
stos
or
test
int
hlt
xor
repnz
adc
mov
iret
lods
xor
inc
push
loop
push
adc
sub
or
mov
leave
imul
pop
push
push
daa
push
test
push
xchg
out
int
lods
lods
fst
call
inc
shll
into
push
cli
jo
mov
dec
add
test
popf
adcb
shlb
enter
test
subl
lret
inc
stos
cmp
pop
gs
jl
ret
loop
push
shlb
aaa
push
vpmulhw
addr16
jge
add
dec
sbb
call
cltd
ljmp
xorl
idivb
inc
sub
pop
and
dec
cmp
mov
xchg
pusha
ret
mov
enter
test
cwtl
in
adc
add
sub
cmp
adc
sbb
push
inc
test
mov
int3
out
stc
negb
mov
xchg
push
iret
neg
mov
mov
adc
out
dec
jno
xor
iret
dec
push
pop
cwtl
subb
jp
sahf
mov
jnp
dec
loope
dec
mov
mov
or
xor
fs
mov
mov
fwait
inc
ds
ds
pop
aas
push
push
jg
fisubs
dec
jo
and
shrb
cmp
sbb
adc
pop
bound
mov
sub
adc
faddl
repnz
mov
ret
gs
lods
sbb
jno
test
dec
mov
push
mov
cmpsb
int3
sarl
adc
jp
inc
push
mov
mov
pop
dec
jns
sar
and
into
sub
sbb
clc
lea
jae
push
push
cmp
jne
or
fsubs
test
cwtl
in
adc
pop
and
sub
or
fsubs
test
cwtl
in
adc
and
aam
add
inc
loop
mov
mov
cli
or
pusha
xlat
lea
adc
sbb
mov
movsl
sbb
loopne
repnz
int3
sub
xchg
das
aam
stc
or
sbb
imul
dec
inc
lods
push
jecxz
std
mov
cmpl
enter
test
cwtl
in
adc
pop
and
sub
or
fsubs
test
cwtl
in
int3
int3
int3
int3
int3
daa
add
adc
pop
xor
push
jle,pt
ja
mov
out
mov
mov
lcall
and
sub
inc
or
pop
pop
mov
fidivl
mov
lcall
cwtl
insl
jmp
jmp
cmpb
sahf
sahf
outsb
inc
push
fildll
jo
repnz
pop
mov
cltd
jbe
mov
push
push
sbb
xchg
xchg
mov
stos
mov
stos
mov
incb
insb
or
push
xor
clc
pop
mov
mov
cmp
pop
mov
dec
sub
out
pop
aam
mov
xor
push
add
scas
push
mov
mov
mov
jge
and
sbb
cmp
punpckhdq
je
push
out
dec
sbb
adc
push
pop
sub
lretw
push
mov
cmpsl
aad
movsb
mov
das
mov
fwait
loope
xchg
adc
xor
and
pop
cld
and
xchg
jmp
dec
jns
scas
in
jb
addl
pusha
or
orl
stos
fnsave
sti
movsb
mov
pop
sub
stos
fmul
mov
and
pop
cld
sti
sub
push
push
ja
sub
pushf
or
mov
fidivl
adc
movd
inc
clc
jae
lcall
imul
xchg
push
jae
iret
aad
and
dec
out
mov
imul
or
stos
sti
je
lcall
sub
adc
int3
lcall
leave
out
jg
and
xor
xchg
ja
in
iret
sub
repnz
add
call
stos
in
and
jg
incl
inc
sub
xchg
test
jno
sbb
pop
mov
push
inc
imul
mov
jnp
fwait
stc
adc
push
xorb
mov
pop
mov
pop
cmp
cs
imul
jecxz
xchg
fldl
jnp
repnz
ljmp
out
add
daa
test
add
int3
subb
jp
mov
mov
mov
adc
clc
xchg
into
xor
xor
adc
sub
xchg
push
iret
push
arpl
lods
notb
add
ret
cmp
xchg
add
outsb
jecxz
dec
jge
inc
mov
popa
jl
lds
lods
fs
mov
popf
nop
mov
mov
sub
jno
jb
lock
mov
ret
dec
cmp
push
sbb
push
cmp
adc
jne
xchg
cmp
inc
aad
xor
xor
mov
jge
add
jp
or
stos
arpl
pop
and
movsb
cmp
sub
jnp
jl
push
inc
outsb
daa
mov
cmp
insb
fcomps
lods
test
sbb
xchg
cmp
xor
xor
adc
mov
and
adc
mov
cmp
push
frstor
aas
inc
inc
daa
fwait
or
outsb
cvttps2pi
add
loopne
aas
xor
jb
orl
pop
jle
imul
in
adc
mov
cmp
mov
gs
jmp
mov
loop
popa
dec
xchg
insb
sbb
adc
push
inc
ret
or
pop
repz
loopne
sahf
mov
movsl
jle
mov
xchg
js
imul
orl
cmpsl
mov
out
sbb
fsubl
pop
mov
and
imul
lea
sub
fistpll
mov
loope
insl
in
jbe
out
pmullw
jae
mov
xlat
cli
leave
lahf
insb
addr16
filds
add
in
sub
ds
xor
sbb
inc
cli
xchg
xor
xor
dec
or
pop
cli
rorb
fcompl
sub
pop
fisttpl
fdivrs
sbbl
imul
sub
cmp
mov
iret
sti
fiadds
imul
push
xchg
mov
mov
pop
jne
orb
xchg
push
mov
mov
cmc
cmp
shlb
mov
push
imulb
sbb
jne
daa
lret
popa
lret
rcrl
xchg
insl
mov
cmp
clc
xchg
addl
bound
pop
lret
mov
or
sub
fistl
mov
xchg
fmul
insb
mov
dec
aas
leave
mov
sahf
lahf
rorl
or
mov
dec
jae
sarb
in
daa
cld
rol
jmp
jp
test
mov
repnz
adc
mov
inc
lods
bound
pop
icebp
das
push
or
xor
xor
push
jmp
mov
mov
inc
test
out
int
mov
jns
mov
lret
loopne
mov
test
jecxz
rolb
cli
test
rcr
das
inc
mov
pop
push
fsubrl
and
inc
inc
push
loopne
and
add
adc
mov
scas
pop
inc
mov
in
and
test
fpatan
gs
mov
sbb
test
push
ret
xchg
pusha
aad
or
outsl
fdivrl
pop
std
cmpsb
xchg
xchg
lret
add
sbb
mov
movsl
xor
pop
sbb
jne
sbb
dec
mov
mov
int3
sbb
mov
js
insb
push
xor
xchg
jg
pop
scas
lods
and
jb
xchg
mov
mov
push
rclb
xor
push
xor
cli
lea
test
out
inc
into
leave
mov
mov
mov
xor
mov
push
out
pop
push
insb
mov
xchg
mov
or
repz
aad
aas
mov
repz
outsb
cmpsb
xor
jae
shrb
aas
jle
add
and
adc
push
jbe
incb
push
dec
ljmp
cmc
xchg
jl
lea
xlat
cmp
sbb
pop
fidivl
incl
mov
mov
arpl
dec
mov
xchg
pushf
push
mulb
ja
sub
test
add
in
push
in
xor
call
sub
inc
ss
lahf
fldcw
test
rorb
sbb
fsubl
xchg
bound
push
fistps
ljmp
cld
mov
pmullw
dec
sbbl
dec
scas
and
loop
add
sbb
movsl
inc
push
ret
xor
outsb
sub
adc
and
or
int3
fucompp
sub
popf
test
dec
fs
xor
inc
dec
cmp
jmp
mov
cltd
mov
ret
mov
repz
outsl
mov
adc
leave
outsl
rol
xor
sbb
push
mov
or
leave
mov
cmp
jle
pop
ret
sub
je
jnp
divb
dec
in
pop
jmp
jge
xor
jl
dec
adc
add
cmp
lods
mov
ljmp
sbb
mov
das
xchg
test
pop
xchg
or
or
dec
mov
pop
mul
outsb
loop
ja
stos
fcompp
xchg
cmp
push
or
lods
xor
aad
aaa
rcll
xchg
sub
cli
repz
cmp
mov
push
cli
jl
movl
cwtl
movsl
xchg
mov
jecxz
ficoms
sahf
sbb
es
lret
mov
mov
jecxz
or
inc
sub
mov
cmp
sbb
cmp
jle
test
sahf
xchg
or
dec
and
sub
push
or
jae
cmp
lret
mov
ret
mov
repz
jp
dec
and
sub
push
or
jae
cmp
lret
mov
ret
mov
repz
and
adc
add
jbe
data16
jb
jb
out
cltd
das
popl
repz
xlat
rorl
xchg
or
pop
mov
mov
add
fiaddl
and
jb
test
mov
int
loope
je
cmp
mov
movsl
inc
xchg
and
mov
lcall
and
sub
push
or
jae
cmp
lret
mov
ret
mov
repz
int3
int3
int3
int3
cmpl
jne
call
push
mov
call
test
pop
je
mov
xor
mov
and
shrl
mov
mov
shl
add
mov
call
mov
call
mov
call
call
call
call
incl
push
pop
ret
xor
cmp
jne
cmp
jle
decl
cmp
jne
call
call
call
jmp
xor
jmp
push
mov
push
mov
push
mov
push
mov
test
jne
cmpl
jmp
cmp
je
cmp
jne
mov
test
je
push
push
push
call
test
je
push
push
push
call
test
jne
xor
jmp
push
push
push
call
cmp
mov
jne
test
jne
push
push
push
call
test
je
cmp
jne
push
push
push
call
test
jne
and
cmpl
je
mov
test
je
push
push
push
call
mov
mov
pop
pop
pop
pop
ret
mov
cmp
je
test
jne
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
push
xor
cmp
push
mov
jle
mov
push
push
mov
lea
push
push
pushl
call
push
push
pushl
call
pushl
push
pushl
call
add
inc
cmp
jl
pop
pop
pushl
push
pushl
call
pushl
call
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
push
mov
mov
test
je
push
call
andl
pop
add
cmp
jl
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
addl
adc
addl
adc
addl
adc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
sbb
add
xor
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
addl
dec
addl
push
addl
pop
addl
addl
insb
addl
je
add
xchg
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
addl
mov
addl
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
add
or
add
xor
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
xchg
adc
add
mov
add
jl
add
je
add
insb
xchg
adc
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rolb
add
lock
adc
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
xchg
adc
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
mov
adc
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
mov
adc
add
js
add
mov
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
