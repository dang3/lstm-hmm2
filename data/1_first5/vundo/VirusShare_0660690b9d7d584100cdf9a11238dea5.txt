or
add
and
mov
mov
or
shl
mov
xor
mov
mov
jmp
mov
fisttpl
dec
hlt
push
movb
mov
movb
jmp
call
ret
add
add
add
mov
insl
push
add
add
add
add
in
int
pop
add
in
sub
mov
jmp
add
pop
add
add
mov
call
call
cmpl
jne
jmp
push
lea
and
or
mov
mov
sub
test
jne
or
ror
mov
mov
jmp
push
jmp
jmp
jmp
push
call
leave
addl
push
jmp
push
subl
push
push
jmp
int3
ret
xorl
call
mov
xor
mov
jmp
call
or
mov
rol
dec
add
mov
cmp
je
xor
and
shl
sub
mov
test
jne
and
xor
sub
xor
add
mov
mov
jmp
movzbl
add
mov
lea
shr
mov
shr
and
jmp
push
lea
push
call
test
jne
call
pop
shr
xor
add
and
mov
jmp
mov
mov
add
shr
add
xor
ror
mov
sub
jmp
sub
test
mov
mov
mov
movl
jmp
xor
ret
or
mov
jmp
call
mov
mov
mov
xor
mov
and
mov
cmp
jmp
nop
push
nop
jmp
pushl
call
jmp
mov
lea
xor
shl
mov
xor
mov
mov
shr
and
add
test
jne
mov
jmp
das
das
xor
jne
add
ret
mov
xor
test
je
jmp
and
sub
ror
sub
mov
sub
shr
test
lea
jle
mov
xor
mov
mov
jmp
mov
pop
ret
push
add
mov
sub
and
sub
mov
push
push
jmp
jle
jmp
add
mov
jmp
shr
or
xor
and
shl
mov
lea
and
rol
mov
xor
mov
add
test
je
jns
jmp
repnz
inc
movzwl
push
jmp
mov
jmp
jne
add
ret
jmp
add
in
out
dec
add
add
mov
sub
mov
push
push
push
jmp
xor
mov
sub
push
mov
mov
movl
mov
push
add
mov
jmp
shr
rol
mov
jmp
call
test
jne
call
mov
and
cmpw
jmp
pop
pushf
in
leave
jne
push
jmp
jmp
nop
pop
leave
leave
ret
call
addl
pushl
pushl
ret
jmp
je
jmp
lea
sub
cmpw
jmp
add
pusha
mov
jmp
xor
inc
shr
and
add
test
je
add
add
xor
or
mov
jmp
lea
movsbl
rol
add
xor
mov
jmp
call
jmp
add
add
add
mov
inc
mov
add
add
xor
cmp
mov
mov
jmp
mov
mov
add
mov
mov
sub
mov
add
mov
rol
mov
mov
rol
or
and
sub
mov
jmp
lea
nop
movzwl
ror
sub
shr
mov
and
jmp
jne
jmp
add
jmp
jecxz
pop
xlat
xor
fmuls
add
add
nop
jno
adc
flds
ja
sahf
adc
clc
pop
mov
jmp
mov
mov
mov
call
test
je
mov
jmp
lea
xor
sub
shr
dec
dec
mov
add
sub
test
jne
and
mov
movzbl
add
jmp
add
add
add
push
shr
xor
mov
sub
jmp
je
push
push
push
lea
mov
inc
mov
or
sub
mov
add
push
jmp
push
jmp
xorl
call
test
je
ret
pop
ret
add
add
add
jne
nop
nop
jmp
lea
je
push
push
jmp
test
jne
movzbl
add
mov
lea
xor
ror
or
ror
mov
mov
jmp
lea
push
jmp
sub
test
mov
jmp
add
add
add
push
std
decl
inc
ds
dec
ds
testl
decl
sti
call
test
je
mov
push
lea
push
jmp
xor
inc
add
mov
xor
mov
and
add
xor
and
mov
shr
lea
jmp
test
jmp
mov
or
dec
xor
add
dec
mov
jmp
jmp
jmp
push
call
add
mov
and
mov
add
test
jmp
lea
cltd
and
add
sar
test
jle
mov
jmp
mov
ror
mov
add
ror
mov
and
and
mov
cmp
jne
add
ret
add
rol
mov
push
jmp
nop
jmp
call
push
call
nop
xorl
jmp
mov
mov
rep
movzwl
or
mov
add
add
sub
add
cmp
jmp
add
push
inc
xor
xor
sub
sub
mov
sub
jmp
movzwl
movzwl
add
or
rol
add
add
mov
lea
jmp
mov
mov
jne
jmp
xor
push
jmp
dec
jbe
mov
mov
movl
mov
call
lea
call
addl
jmp
add
out
or
add
mov
add
mov
sub
push
xor
lea
push
lea
jmp
sbb
rclb
jg
incl
mov
rorb
icebp
sti
cmp
jmp
add
add
push
jmp
push
push
int3
xorl
jmp
push
push
jmp
add
add
mov
call
pop
jmp
push
movb
mov
movb
mov
movb
jmp
and
mov
push
push
shr
shr
add
dec
mov
mov
xor
mov
add
add
jmp
lea
or
test
push
mov
sub
dec
sub
mov
sub
jmp
push
mov
mov
jmp
push
jmp
add
add
jne
mov
rol
mov
mov
xor
and
cmp
jmp
cmp
jne
and
add
add
add
add
sub
jne
jmp
jmp
lea
mov
sub
rol
mov
or
mov
test
jle
xor
add
mov
sub
sub
jmp
call
mov
ror
sub
mov
add
xor
mov
lea
push
push
jmp
call
addl
push
jmp
sete
pop
mov
mov
pop
ret
add
add
add
and
call
call
call
jmp
jne
jmp
out
lds
test
ret
add
pop
sbb
mov
clc
jmp
xor
push
add
or
mov
jmp
pop
xor
pop
jmp
mov
mov
jl
add
add
mov
mov
mov
mov
jmp
add
cmpl
jne
pop
pop
pop
mov
pop
jmp
add
cmpl
jne
pop
pop
pop
mov
pop
ret
add
add
add
jne
sub
jmp
push
call
push
jmp
push
call
int3
ret
call
push
int3
nop
dec
xorl
mov
call
jmp
rep
out
pop
call
call
call
ret
add
add
add
jmp
call
call
call
call
int3
addl
mov
call
push
jmp
call
push
pop
leave
subl
mov
call
push
jmp
call
xorl
mov
call
jmp
mov
mov
and
mov
shr
and
add
test
jmp
or
mov
ror
inc
mov
jmp
fs
push
add
jmp
ret
cmpsb
dec
ret
pop
mov
pop
ret
mov
ret
add
add
add
jns
cld
int3
pop
ret
ror
add
and
and
mov
movzwl
jmp
add
sub
rol
mov
call
add
inc
add
mov
call
push
jmp
int3
push
inc
call
push
call
leave
ret
xorl
push
jmp
leave
leave
jmp
jmp
push
push
addl
push
jmp
jne
test
mov
mov
jmp
add
mov
lea
push
lea
push
jmp
mov
je
ror
rol
shl
and
mov
jmp
cs
sub
test
jne
movzbl
jmp
shl
dec
mov
mov
pop
add
pop
add
sub
or
xor
mov
pop
ret
add
add
add
adc
sub
sub
mov
jmp
mov
add
add
ret
xchg
jb
loop
sbb
rolb
sbb
add
jo
pop
test
inc
in
arpl
out
cmp
lock
mov
mov
mov
call
jmp
cli
mov
mov
lea
mov
mov
and
rol
mov
shr
and
add
test
jmp
cwtl
loop
call
xor
add
and
xor
mov
jmp
pop
ja
test
rorb
add
add
clc
xor
mov
jmp
lea
jmp
test
je
mov
push
lea
jmp
je
xor
movl
sub
add
mov
mov
sub
test
jne
jmp
call
movl
lea
call
mov
add
add
and
shl
xor
mov
xor
xor
add
and
add
mov
mov
mov
mov
jmp
lds
or
adc
add
add
rorb
inc
and
mov
mov
pop
pop
jmp
xchg
inc
or
call
loope
ror
mov
mov
jmp
mov
out
in
ret
and
dec
shl
dec
mov
pop
jmp
xlat
or
movzbl
jmp
lahf
aaa
ljmp
cmpl
lock
jmp
mov
or
xor
mov
mov
ror
jmp
inc
repz
or
pop
and
sub
or
shl
mov
mov
pop
ret
add
add
add
pop
and
mov
shr
and
jmp
rcrl
inc
cld
pop
pop
dec
add
ror
or
mov
mov
xor
add
sub
jne
pop
jmp
stos
ret
sahf
add
subl
lea
jne
test
jmp
icebp
xchg
mov
pop
sub
and
or
pop
pop
inc
sub
mov
pop
ret
add
add
add
test
add
jmp
sti
sub
add
pop
mov
mov
pop
mov
pop
jmp
or
and
rol
dec
mov
sub
mov
mov
jmp
stos
les
or
loop
in
ret
add
add
add
add
add
add
add
jmp
jmp
fiaddl
or
mov
and
shl
and
mov
and
jmp
dec
shrb
movb
movl
jmp
call
mov
jmp
sbb
mov
add
test
je
xor
sub
rol
add
xor
mov
jmp
sub
sub
add
sub
mov
mov
jne
inc
mov
mov
jmp
sbb
mov
movl
jmp
movl
jmp
dec
orl
adc
inc
and
add
add
jmp
lea
call
cmpl
jne
cmp
jmp
add
fisttpl
test
add
jmp
pop
outsl
call
test
mov
je
shr
or
and
xor
and
mov
jmp
mov
dec
sub
jmp
push
and
add
sub
mov
mov
jne
jmp
sbb
hlt
mov
jmp
sub
jmp
notb
adc
add
add
sub
shr
add
dec
ror
mov
mov
movzbl
shl
jmp
push
ds
ret
add
mov
fwait
add
dec
mov
mov
call
cmp
jb
jmp
decl
ds
cmp
jmp
adc
and
addb
add
add
cmp
jae
add
test
mov
je
jmp
pop
int3
mov
add
ror
shl
mov
sub
mov
sub
mov
jmp
dec
lds
mov
add
sub
jne
mov
mov
inc
or
and
shl
dec
mov
or
dec
mov
rol
mov
jmp
mov
and
inc
and
add
add
jmp
mov
mov
jmp
pop
pop
adc
roll
movb
je
sbb
inc
and
add
add
mov
cmpl
jmp
aad
in
je
pop
add
or
or
mov
sub
pop
pop
add
mov
ror
xor
or
mov
pop
ret
add
jo
add
add
fidivl
add
jo
add
jo
add
jno
add
jno
add
jno
add
jno
add
add
add
add
jo
add
jo
add
add
add
adc
add
jo
add
add
fidivl
add
jo
add
jo
add
jno
add
jno
add
jno
add
jno
add
add
add
add
je
inc
jne
insb
fs
outsl
outsl
je
add
pop
add
je
inc
jne
insb
fs
outsl
outsl
je
add
push
add
je
inc
jo
outsb
fs
add
dec
push
inc
push
dec
cs
insb
add
add
jae
popa
addr16
outsl
js
add
outsb
jae
popa
je
dec
gs
popa
add
mov
jo
je
push
popa
addr16
add
or
inc
gs
inc
add
add
outsb
fs
gs
popa
addr16
add
fiadds
dec
gs
popa
addr16
gs
fwait
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
inc
push
xor
cs
insb
add
add
add
add
add
add
add
add
add
cmp
jl
add
add
sub
add
add
add
xor
xor
xor
les
cmp
cmp
aas
push
cmp
mov
xor
xorb
xor
xor
imul
inc
cmp
mov
aas
jecxz
and
das
ss
cmp
aaa
repz
add
out
hlt
xor
cmp
pop
add
sbb
add
cmp
xor
xchg
xor
mov
divl
sub
mov
scas
push
nop
dec
icebp
icebp
mov
fstpt
or
cltd
and
or
fidivs
mov
pop
jge
cmp
cld
xchg
cmc
inc
cmp
or
scas
xor
lcall
adc
negb
dec
adc
inc
inc
data16
xor
mulb
xchg
popf
loope
pop
fidivl
jb
dec
sub
jle
cltd
aad
xorb
addr16
mov
fmull
dec
popa
ljmp
popa
int
push
popf
pushf
push
jb
out
lock
ja
xlat
call
leave
adc
xor
hlt
aad
lahf
aam
pop
jle
iret
xor
hlt
int3
iret
rcll
jne
fstps
sub
xchg
push
add
popa
lea
cmp
sbbb
jo
fisubl
mov
imul
push
das
addr16
rclb
jbe
push
mov
mov
push
inc
rcr
sub
or
lds
cmp
jbe
rol
leave
int
aam
push
and
mov
push
adc
rorl
das
icebp
adc
fwait
loope
jle
test
cmpsl
xchg
mov
mov
rcll
cmp
rcr
insb
mov
xor
movsl
loop
fwait
mov
cmp
inc
mov
js
arpl
insl
ds
loopne
adc
cmp
insl
push
jecxz
sub
ret
inc
pop
test
adc
sbb
popa
leave
vcvttsd2si
repz
mov
mov
mov
js
dec
sarb
inc
inc
sub
cmpsl
push
xchg
xchg
stos
pop
push
cmc
lret
lahf
mov
dec
push
cltd
int
or
cmpsb
push
xor
lret
mov
add
add
lods
iret
aad
lret
fcomps
daa
pop
inc
jl
sar
mov
cmpsb
xchg
dec
sub
pusha
fidivs
jmp
lahf
in
lahf
adc
dec
shll
add
das
mov
jae
inc
inc
mov
iret
shll
gs
sub
pop
lods
mov
leave
shrb
or
fistpl
mov
adc
push
shl
jno
dec
js
xchg
sub
dec
aaa
mov
cmc
filds
movsl
idivb
imul
adc
outsb
cmp
hlt
pop
bound
mul
xchg
xor
ret
mov
xor
out
jne
add
sahf
push
adc
enter
sub
mov
int
sahf
fiadds
lcall
push
pop
mov
sub
mov
dec
xor
pusha
cmp
fiadds
cwtl
inc
mov
sub
das
jae
push
jle
sbb
add
inc
and
sub
mov
push
fdivrl
xchg
xor
movsb
nop
aad
push
cld
xorb
pop
imul
and
jge
ljmp
mov
cli
mov
jne
fcoml
pop
inc
pop
andl
add
lods
sbb
imull
mov
push
mov
pop
or
pop
fsubr
ja
jmp
imul
or
filds
mov
aad
movsb
mov
sub
adc
aam
adc
sbb
pusha
lret
pop
das
inc
push
sub
test
int3
or
dec
addb
aad
mov
and
cmp
test
out
mov
test
adc
mov
in
data16
repz
mov
sub
push
add
nop
or
push
sbb
aaa
ds
push
jb
repnz
int3
or
jp
in
push
xchg
adc
push
add
mov
cmp
fistpll
pop
inc
fnstsw
cmpsb
popa
sbb
js
dec
ja
sbb
push
push
inc
les
pavgw
add
pushl
mov
mov
and
add
std
lea
imul
mov
aas
clc
repnz
lods
rol
add
testb
mov
dec
xor
into
std
lret
out
gs
les
fisubrs
ss
mov
test
ss
insb
fidivrl
add
repnz
cwtl
je
and
aas
je
out
inc
push
fistpll
jmp
add
and
out
setnp
arpl
lea
pop
mov
lds
sub
hlt
test
cmpsl
or
jg
or
out
out
and
or
orl
int
mov
inc
inc
ret
sub
je
imul
int3
jle
aas
sub
loop
mov
lds
lds
pop
mov
mov
lods
jge
mov
or
bound
xchg
dec
push
jecxz
mov
aas
adc
mov
and
lea
insb
stc
fwait
inc
cmp
hlt
lcall
adc
push
xchg
cli
pop
rcrl
dec
ljmp
mov
mov
jnp
test
sub
ret
jns
jo
cmpb
dec
inc
or
sub
pop
mov
mov
popf
cs
fs
.byte
