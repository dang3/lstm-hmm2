incl
sti
inc
mov
mov
adc
ret
cmp
int3
cmp
inc
jno
bound
mov
mov
add
cmp
add
or
icebp
in
cld
pop
xor
cli
mov
jmp
jl
je
outsl
xor
fcos
in
fcomps
or
shr
push
push
and
add
dec
mov
jns
outsb
add
xor
mov
dec
xor
sub
imulb
inc
mov
dec
add
adc
jo
inc
sub
mov
mov
and
pop
add
push
inc
in
jle
mov
add
lret
mov
push
mov
inc
dec
or
out
adc
push
inc
mov
xchg
jno
fists
and
xchg
ret
inc
pop
gs
test
adc
incb
shll
mov
dec
mov
stc
push
and
mov
enter
faddl
push
idiv
mov
dec
sub
push
push
mov
shlb
sti
inc
dec
add
push
test
mov
ja
mov
repnz
jb
dec
mov
iret
sub
mov
out
xor
arpl
insb
sbb
cmpl
xor
add
dec
add
adc
incb
and
popa
outsb
inc
mov
js
test
insb
jb
pop
cmp
push
aaa
sbb
inc
pop
iret
incl
ret
imul
push
cltd
pop
loop
xchg
jp
push
xor
push
outsb
add
fstpl
xchg
lret
mov
push
dec
push
add
dec
push
mov
outsl
add
inc
mov
jo
xor
dec
jb
xor
repnz
dec
imul
bound
mov
outsl
jno
aaa
pop
pop
dec
push
inc
mov
dec
add
pop
inc
mov
push
push
mov
or
stos
inc
adc
xor
mov
inc
add
mov
fcmovnbe
call
inc
mov
ret
xor
bound
mov
aaa
mov
arpl
mov
jb
push
dec
jmp
sub
mov
popa
imul
add
out
push
push
icebp
lods
rorl
mov
jae
sti
lret
jg
push
add
push
xor
das
xchg
inc
xchg
pop
test
add
mov
jne
lds
jbe
outsl
xor
xlat
inc
pop
and
xchg
add
adc
xor
sub
cltd
inc
ret
insl
inc
inc
inc
mov
push
insl
jecxz
in
xor
scas
dec
jns
inc
push
push
in
or
adc
xor
and
push
pop
shlb
jae
inc
stos
push
push
popa
push
jecxz
aaa
call
dec
aaa
jbe
adc
js
dec
mov
std
fistpll
xchg
imul
mov
mov
inc
mov
push
sub
push
inc
inc
dec
lcall
in
adcb
hlt
inc
add
jo
ret
adc
xor
shll
xor
clc
into
mov
fdivp
inc
out
inc
dec
add
lds
sub
mov
jnp
inc
inc
lea
xchg
pop
imull
inc
mov
xor
insb
inc
xor
inc
mov
or
pop
or
dec
mov
enter
dec
xor
push
out
mov
adc
iret
push
ror
inc
subb
imul
pop
or
cmp
and
enter
test
cmp
jae
enter
or
pusha
add
repz
xor
sti
push
mov
mov
push
xor
jno
push
pop
inc
sub
inc
popa
jmp
dec
inc
add
or
push
pop
imul
loop
push
dec
test
jns
jl
or
cmp
dec
mov
stos
rorb
enter
insb
inc
and
sarl
js
mov
and
sub
popa
inc
adcb
jmp
pop
jmp
push
pusha
pop
call
dec
push
js
out
ss
das
sub
xchg
sbb
mov
mov
pushl
mov
jge
mov
mov
dec
pop
repz
addr16
mov
outsw
inc
mov
mov
dec
push
enter
mov
outsb
push
jno
bound
xchg
pop
test
out
daa
mov
dec
test
cmp
iret
mov
ret
push
enter
hlt
push
add
push
add
sbbl
ret
fwait
testb
aaa
call
repz
pop
or
cmp
xchg
and
jecxz
gs
dec
mov
xchg
inc
cmp
inc
jecxz
hlt
cmp
dec
xor
add
xor
inc
dec
mov
pop
lahf
stos
xchg
inc
adc
aas
addl
jmp
call
dec
imul
pushl
aam
outsb
outsb
jne
es
mov
cmp
xlat
inc
mov
enter
jnp
mov
scas
add
sub
mov
jbe
fsubrp
ret
pop
add
data16
ds
nop
je
out
fiadds
mov
mov
adc
pop
sub
adc
or
jge
fdivs
adc
mov
scas
dec
xor
ja
jo
dec
xor
xor
add
jno
or
rorb
jb
rorb
rclb
cmpsl
jp
rorb
movsb
insb
or
rorb
inc
sarb
jns
fldt
lock
xlat
test
pusha
add
or
into
rorl
sbb
cmp
mov
jb
mov
or
idiv
loopne
add
adc
inc
and
and
xchg
or
or
or
adc
inc
and
fst
outsl
push
ss
push
xchg
fbld
sbb
mov
push
add
jle,pt
xor
ja
imul
xor
pop
jge
inc
shlb
add
scas
dec
je
xchg
or
js
dec
and
inc
nop
jns
inc
adc
adc
adc
adc
jb
imul
or
jo
movsl
mov
enter
or
sub
dec
sahf
clc
mov
inc
adc
push
dec
push
and
dec
pop
and
and
mov
subb
and
ja
ds
sar
xor
mov
mov
int3
js
sbb
sbb
xor
cmp
xor
leave
pop
mov
add
adc
inc
and
dec
or
xor
decl
xor
push
enter
mov
jno
and
fildl
or
adc
rcrb
icebp
test
sbb
sub
call
cmp
std
aad
push
sbb
dec
push
push
cmp
dec
sbb
and
cwtl
rol
sbb
fsubrs
lahf
fs
push
jb
fistpll
adc
insb
push
addr16
cmp
mov
inc
push
or
sbb
leave
add
pop
xlat
repnz
bound
xor
mov
repnz
lods
push
lahf
add
mov
daa
mov
xchg
in
or
popa
test
push
lea
inc
adc
iret
cmp
and
fs
push
nop
pop
xchg
jne
psllq
sub
shl
dec
cmp
add
adc
adc
fcompl
adc
ja
mov
add
inc
ds
ds
pusha
mov
test
std
jae
outsl
push
push
aas
lock
mov
arpl
dec
xor
dec
imul
push
xor
inc
xor
and
nop
test
xor
leave
test
or
xor
lods
pop
dec
mov
jecxz
fs
nop
je
outsl
imul
inc
nop
je
outsl
insl
dec
nop
xor
nop
push
inc
nop
xor
imul
nop
xor
imul
or
rol
cmovge
sbb
xchg
gs
mov
xor
push
inc
push
nop
pop
arpl
and
pop
imul
orl
mov
orl
xchg
mov
push
pop
orl
cmpsb
and
aaa
sub
inc
cwtl
shr
mov
mov
roll
dec
mov
lret
aad
jbe
xor
fidivs
xor
fs
fldt
xor
sbb
pop
rorl
mov
jle
cmp
mov
cwtl
in
jl
fucomp
sub
aad
jle
jbe
dec
les
dec
lret
mov
out
adc
ds
cmp
ficompl
push
inc
mov
xchg
mov
mov
outsl
mov
add
ss
cmp
dec
jge
test
sub
or
add
insl
cmp
mov
fidivrl
adc
pop
fisttps
mov
aas
xor
add
insl
fstpt
idivb
or
ljmp
sbb
dec
add
jo
popf
mov
decb
jmp
add
dec
cli
aad
xchg
cmp
outsl
out
and
ljmp
and
cmp
cmp
push
mov
xorl
outsb
into
inc
imul
stc
sub
fisubrl
gs
push
mov
add
xlat
pop
mov
popa
jbe
fwait
inc
lret
xor
mov
cmp
mov
jle
cmpsb
testl
mov
push
std
ds
outsl
cmp
ljmp
or
or
push
push
dec
or
in
mov
insl
ds
xchg
inc
out
jbe
lock
mov
outsl
outsb
pop
rolb
dec
sbb
push
int
loop
pop
sub
push
rclb
cmp
inc
rorb
adc
clc
cmp
mov
aas
mov
bound
aad
outsl
fwait
cs
sub
mov
xor
sbb
imul
ljmp
fdivl
mov
repnz
idivb
adc
push
sub
fnstsw
push
xchg
leave
repnz
cs
cmp
push
outsb
dec
sbb
out
xchg
ret
mov
clc
pop
jb
imull
push
jle,pt
test
ss
add
dec
fsts
into
repz
adc
stc
leave
push
inc
fistl
das
subb
jnp
filds
or
xchg
cmp
lods
int
mov
aam
incb
xchg
mov
push
ds
cmp
in
ds
cmc
add
divb
mov
nop
add
leave
mov
sarb
imul
adc
cmp
mov
jmp
dec
cmp
dec
mov
lahf
pop
les
add
sub
cld
aad
pop
mov
add
dec
enter
or
add
popa
pusha
cmp
push
and
sar
stos
add
aam
in
xor
or
arpl
add
add
add
dec
inc
xor
or
add
ret
mov
mov
stc
cmp
sarb
movsl
sub
jo
xchg
cmp
lcall
enter
sbb
sub
add
jb
flds
cmp
add
std
sub
iret
lret
mov
xor
dec
adc
shlb
jae
call
add
push
or
es
xor
mov
call
mov
ret
pushl
leave
out
mov
cmp
and
cmp
mov
dec
cmp
ss
std
mov
insl
inc
xor
and
data16
push
xor
and
js
add
pop
mov
es
jmp
push
aad
mov
add
cs
sarl
pop
mov
add
pop
mov
sbb
pushl
jg
add
mov
in
sub
decb
push
or
clc
mov
cmp
xlat
aad
stc
in
xchg
lods
pop
dec
ss
mov
dec
cmp
cmp
stos
sti
insl
fiaddl
jl
mov
or
or
mov
sbb
pusha
jne
mov
cmp
aam
sti
sti
cmp
outsb
aad
xchg
pop
dec
mov
jno
pusha
push
xor
adc
sbb
filds
cmp
jne
mov
xor
aad
xor
ret
mov
outsl
or
incl
or
push
sbb
jns
movsl
leave
mov
shr
and
and
in
into
rorb
push
sbb
loope
push
ds
sub
and
jnp
insb
add
sub
sbb
ret
shrb
pop
mov
outsb
cltd
sub
push
sbb
pop
icebp
pop
ficomps
icebp
daa
sub
adcb
mov
or
fcmove
lcall
and
adc
jns
dec
outsl
cld
out
lret
xor
xor
sub
outsl
divb
outsb
mov
in
dec
into
cmp
aas
mov
mov
mov
decl
daa
adc
outsl
sbb
push
jg
in
leave
iret
addr16
cmp
data16
aas
dec
push
and
and
add
jo
add
or
add
addb
xor
inc
sub
xor
add
or
and
add
jo
add
sub
cmp
jg
mov
add
cmp
jg
clc
or
add
xor
add
xor
add
xchg
cmp
stc
fmuls
adc
sub
jb
xor
repnz
dec
pop
das
xlat
fdivs
arpl
dec
mov
add
and
xor
repnz
popa
inc
inc
repnz
cmp
jbe
sbb
xchg
inc
repnz
add
push
inc
push
dec
add
inc
hlt
aas
cmp
in
or
ret
leave
adc
movb
jge
mov
push
inc
jbe
movb
push
stos
repnz
aas
xchg
call
adc
adc
leave
jns
mov
lcall
shlb
add
mov
scas
mov
add
nop
fs
mov
and
sub
std
movb
mov
lret
dec
add
or
mov
or
push
add
pop
sub
inc
mov
pop
adc
pop
int3
adc
and
add
push
data16
push
and
pop
arpl
ja
add
mov
mov
mov
or
or
inc
or
jg
pcmpgtd
mov
iret
scas
push
outsb
push
jbe
inc
add
sti
jg
pusha
call
call
jp
call
call
out
mov
push
dec
push
loopne
mov
adc
mov
pop
xchg
mov
call
pop
call
mov
or
pop
fisttpl
sub
inc
aas
push
stc
push
sbb
mov
mov
call
inc
jo
or
insb
in
dec
fisttpl
call
sub
test
mov
call
call
cltd
in
fbld
stos
cld
les
xchg
mov
call
mov
fsubr
imul
out
addb
and
pusha
call
pop
sarb
call
adc
lcall
fisubrs
test
dec
and
xor
insl
sbb
cmp
cmp
mov
jecxz
add
cmc
or
call
call
ds
xchg
std
lods
jb
in
xor
pop
jo
mov
inc
adc
mov
and
jne
loope
adc
push
dec
xor
push
mov
fstpl
cmp
push
and
or
mov
cwtl
xchg
call
add
stc
fstpl
mov
add
push
or
add
push
popa
jge
loop
lock
mov
ret
push
js
call
iret
adc
inc
call
in
lcall
call
aas
insb
push
hlt
push
xchg
inc
call
outsl
call
cmp
in
adc
call
mov
pop
frndint
push
jbe
or
jae
ret
call
gs
dec
popa
push
incb
mov
movsb
mov
xchg
test
mov
or
mov
push
sbb
ret
fistl
call
jg
sbb
das
cld
out
mov
adc
xchg
or
pop
jb
mov
call
sbb
sbb
call
inc
mov
inc
call
sub
jle
mov
aaa
sarb
or
fstps
or
shlb
add
insl
mov
dec
sub
cs
test
dec
dec
leave
fldt
or
das
call
or
mov
cmp
fs
call
in
xchg
call
rorb
inc
add
lret
std
ret
fstpt
mov
aas
and
test
xchg
js
incl
mov
call
pop
call
insl
lods
arpl
mov
bound
addl
lock
loope
rolb
les
inc
inc
mov
add
or
push
ds
cld
out
add
dec
popf
lret
call
outsl
push
mov
repnz
mov
xchg
out
jae
add
cmp
pop
adc
cli
mov
aaa
dec
shlb
call
xchg
mov
jl
dec
test
inc
mov
mov
lahf
cmc
ja
jmp
or
call
test
call
cmp
mov
jmp
cs
cmp
add
pop
dec
in
shrl
enter
pop
sub
or
push
ljmp
mov
push
fidivrs
xor
mov
add
hlt
xchg
je
xchg
or
aas
lods
inc
push
sbb
push
dec
and
xacquire
call
shrb
add
push
dec
filds
leave
mov
loope
jo
pop
repz
fldt
push
push
jo
push
push
pop
sbb
push
inc
and
gs
ss
mov
sti
sub
mov
cmpb
jp
call
adc
cmpsl
or
mov
or
pop
pop
lret
fisubrl
nop
cld
int
pop
jg
add
inc
testl
jge
ss
xor
cmp
or
jne
loop
mov
mov
sub
dec
adc
repnz
outsl
jns
xorb
xchg
or
jbe
jno
aaa
sbb
int3
pop
dec
pop
xor
cmp
mov
aaa
lock
imul
je
mov
mov
mov
pop
outsb
or
cmp
outsl
icebp
mov
mov
mov
dec
cmp
aaa
inc
fstl
js
rorl
icebp
leave
and
fstps
sbb
inc
jmp
lods
xchg
pop
nop
addl
or
call
shlb
add
sahf
xchg
mov
mov
sbb
divb
pop
mov
sbb
adc
loope
ds
ss
sbb
and
insl
fstpl
jle
arpl
inc
mov
mov
call
fisubrl
ja
xor
stc
rclb
push
shrb
daa
aaa
sahf
pop
mov
outsb
aaa
les
pop
xchg
dec
inc
dec
sub
cwtl
in
sbb
je
sarb
inc
call
int3
jo
mov
jae
cmp
inc
call
lea
cli
test
lods
lcall
cmpsl
sbb
sub
mov
and
xor
repnz
icebp
jmp
and
repnz
adc
inc
ret
lea
xor
pusha
mov
mov
fwait
pop
sahf
out
mov
adc
lds
jl
test
mov
pop
and
bound
sbb
imul
pop
cli
call
xchg
les
xor
lock
mov
mov
clc
cmp
cwtl
inc
push
mov
cmp
push
testb
stos
sbb
pop
popf
call
push
push
jne
cmp
insb
pop
push
rcrb
lahf
dec
pop
popf
aad
sti
not
mov
aaa
cwtl
and
jnp
lret
mov
inc
sbb
or
ret
jmp
aaa
fimuls
jo
pop
jns
sbb
ja
sub
or
hlt
xor
out
mov
je
in
mov
pop
inc
jge
jp
cmpb
leave
jp
mov
popa
dec
mov
mov
arpl
ror
jle
mov
mov
mov
add
bound
shl
jo
xchg
add
push
in
jle
lahf
cmpsb
test
stos
call
jg
push
jecxz
or
adc
test
sahf
in
pop
lds
mov
or
jno
sti
es
mov
mov
add
clc
test
mov
fcmovnbe
or
cmp
mov
repz
daa
push
xor
cmp
aas
mov
xchg
adc
dec
aad
fisubs
out
mov
pop
arpl
cmpsb
xor
fs
sarl
xchg
push
ss
cld
loopne
push
jle
xchg
inc
fs
ret
xor
push
pop
cld
push
bound
adc
rorl
jmp
test
pushf
jmp
mov
or
pop
test
mov
jno
aaa
xchg
or
mov
pop
outsl
sub
mov
mov
cmp
sbbl
and
insl
les
add
add
mov
mov
fldenv
inc
rol
into
jo
adc
pusha
dec
scas
cmp
mov
ret
mov
adc
jnp
std
loopne
scas
imul
push
frstor
jmp
sbb
popa
subl
sbb
icebp
sbb
jae
lods
pop
mov
xchg
xor
jb
jnp
pop
jp
adc
sub
test
iret
frstor
icebp
sti
mov
jl
pop
fwait
add
adc
or
mov
les
xchg
nop
enter
jbe
lds
dec
in
sbb
mov
icebp
sub
int3
loopne
dec
mov
pop
paddsw
shrd
lea
push
insl
ret
dec
mov
push
inc
fisubl
call
mov
stc
gs
jbe
fcmovnb
or
cmp
pop
popf
fadd
lods
movsl
cmpsb
mov
loope
pop
movsb
sbb
shrb
jb
pusha
or
aad
inc
pop
jp
jbe
sub
fisubs
add
mov
and
push
aaa
inc
dec
in
jae
scas
aas
lret
mov
cld
fwait
push
sbb
je,pn
sub
pop
or
mov
xor
out
mov
cld
jp
add
mov
ljmp
or
pop
imul
xor
xor
sahf
or
hlt
loopne
sbb
jb
cltd
pop
call
shl
in
popa
hlt
pop
mov
push
lcall
movsb
fmuls
pop
mov
leave
mov
popa
and
addr16
pusha
shrl
lock
push
sbb
les
fisttpll
rorl
rcl
fcom
pop
sub
pop
js
jno
mov
das
add
leave
cmpsb
xorl
iret
xchg
sbb
fnsave
sbb
addr16
adc
mov
ljmp
jg
jbe
sbb
je
out
loop
enter
js
pop
cmpsb
jmp
push
cmpsb
cmpsl
mov
shrl
repnz
push
mov
or
xor
enter
sub
sbb
stos
pop
mov
int3
into
dec
arpl
or
jae
xor
fdivs
mov
mov
dec
add
aas
or
jge
mov
mov
fdivrs
shll
jb
add
arpl
mov
movsl
adc
int
cmp
test
aad
cltd
mov
pop
insl
rorl
fsubl
cmp
mov
cmc
xor
mov
sbb
mov
fstps
pushl
in
mov
or
adc
out
mov
xor
gs
lods
jae
push
lods
jmp
jl
enter
movswl
xor
xchg
xchg
mov
mov
sbb
mov
out
or
lock
cmp
test
out
mov
bnd
mov
jne
mov
mov
inc
dec
xor
psubsb
popa
ljmp
fs
xor
insb
into
adc
mov
sbb
push
or
sub
inc
repz
and
imul
xor
lahf
mov
dec
ret
sbb
xchg
sbb
xchg
push
in
xchg
xchg
pop
mov
scas
jge
dec
inc
pop
lahf
mov
rorl
insl
or
mov
xchg
cmp
into
pop
cmp
or
jne
das
dec
loope
add
cltd
sub
adc
sub
fnsave
or
in
push
lds
dec
push
push
movsl
inc
jl
sahf
mov
pusha
fimuls
cmp
ret
and
loope
je
mov
mov
lods
pop
push
clc
mov
jne
cmp
jecxz
pop
lcall
sbb
add
aaa
mov
dec
test
arpl
jl
and
sbb
xor
jmp
mov
xlat
mul
adcl
sarl
push
bound
rolb
imul
cmpl
dec
insl
je
pop
cmpsl
push
pmulhuw
or
mov
inc
pusha
rcl
add
lods
jne
mov
sbb
repz
movsl
popa
cmp
push
std
cmc
mul
orl
or
push
dec
fsubrs
add
jg
push
push
push
xor
xor
mov
mov
cltd
lret
pop
js
cmp
mov
clc
fisttpl
inc
jnp
popf
or
mov
ss
mov
add
lock
inc
push
icebp
leave
fdivrs
inc
or
dec
neg
push
insl
fidivrs
and
cmp
inc
inc
cmp
add
inc
je
dec
lods
sbb
push
mov
add
xor
mov
mov
or
add
mov
popf
into
xchg
cli
test
cmp
icebp
add
sub
dec
pusha
loope
mov
xor
ret
pop
psubb
loop
gs
in
pop
fstl
int
stos
pop
add
pop
mov
rclb
jns
or
leave
push
in
inc
shlb
ss
hlt
lahf
push
inc
iret
lea
adc
int3
sub
or
push
mov
iret
pop
mov
ret
cmp
lock
pop
cmp
pop
adcb
std
adc
sbb
cmp
xor
sbb
mov
mov
lock
gs
mov
out
mov
out
xorb
jne
xor
sbb
adc
dec
repnz
in
imul
xor
and
push
or
mov
mov
fcomp
out
stos
pop
call
test
sub
adc
fwait
dec
mov
roll
mov
inc
xlat
daa
dec
in
inc
push
call
scas
cmpsl
jg
mov
push
cld
pushf
jae
stc
push
ret
mov
imul
pusha
ja
xor
outsb
rcrl
inc
addr16
loopne
test
mov
mov
xchg
dec
test
dec
xchg
je
ja
hlt
xchg
xor
clc
inc
jno
hlt
les
mov
sub
mov
cmp
lock
mov
sub
ja
popa
mov
mov
mov
aas
addr16
cmpsl
loope
fs
mov
or
fadd
fildl
inc
mov
call
scas
shll
pop
loopne
xchg
test
sub
lods
jbe
xchg
push
aaa
or
xchg
pop
mov
insl
frstor
ret
comiss
mov
ja
mov
popf
insl
jp
inc
pop
ror
push
cmp
movsb
cmpsl
push
and
mov
xor
insl
lret
mov
or
shl
dec
jecxz
dec
lock
inc
lret
je
scas
imul
fildll
mov
push
cmp
fs
or
jbe
pop
popf
test
loopne
in
xor
mov
call
dec
in
inc
mov
ljmp
repz
cmp
or
es
adc
mov
mov
cmp
mov
add
dec
jbe
pop
xor
in
mull
iret
pop
sbb
jnp
or
mov
imul
mov
mov
mull
mov
xchg
mov
lea
cli
daa
cmpsb
das
sbb
sbbb
push
outsb
pusha
mov
out
mov
mov
lods
pop
sbb
outsb
imul
xor
popa
in
enter
add
sahf
scas
fadds
or
fwait
dec
lret
pop
repnz
fldt
mov
jb
fisubrl
jle
cli
mov
pop
shlb
mulb
cmpsl
adc
lret
jl
icebp
xchg
in
in
jmp
in
adc
pop
adc
mov
inc
ret
ret
mov
pusha
je
xor
dec
push
and
out
inc
mov
arpl
cs
mov
out
mov
mov
data16
push
icebp
inc
dec
mov
call
inc
sub
sahf
xor
in
rcrl
pop
aas
sub
ret
jle,pn
mov
es
mov
int3
dec
fiaddl
cmp
dec
mov
mov
ljmp
sbb
inc
cld
inc
je
test
mov
insl
add
movsb
or
pop
jg
pushf
aaa
mov
sub
pushf
mov
jbe
movsb
inc
stc
push
icebp
push
and
scas
ja
sub
push
xchg
pop
jo
sbb
lock
out
orl
or
fs
clc
adcb
xlat
push
push
pushf
aam
or
hlt
push
cmp
add
xlat
lret
xchg
dec
sbb
xor
xor
adc
mov
mov
sbb
test
jl
dec
sbb
fisubl
jmp
xchg
rorl
jbe
leave
stc
add
ret
in
mov
pop
pop
inc
shll
mov
dec
clc
mov
sbb
mov
jo
inc
sbb
mov
test
add
fcmovb
dec
mov
rclb
out
mov
pop
mov
out
addr16
pop
mov
jecxz
sub
mov
or
lcall
pop
js
pusha
stos
push
pop
add
cvtps2pi
mov
rolb
addb
cmp
ret
or
bound
mov
push
mov
imul
cld
in
aad
xchg
xlat
mov
mov
jp
sub
fsubp
sub
push
outsb
jb
add
pop
pop
mov
mov
jle
icebp
mov
sub
and
cli
jb
fists
cltd
mov
xor
xor
js
cmp
xchg
push
xor
jle
sub
mov
jp
mov
and
jne
dec
jnp
in
int3
test
mov
shl
and
arpl
push
unpckhps
aaa
rclb
xor
pop
mov
mov
enter
test
sub
xchg
xor
iret
pop
lock
mov
jg
mov
xor
das
sbb
cmpsl
mov
mov
xchg
ss
push
jecxz
sbb
fsubr
adc
xor
sarl
jmp
mov
jbe
sbb
push
loope
sar
push
cltd
jbe
mov
jbe
je
pusha
cli
inc
and
jns
jecxz
lea
inc
decl
hlt
xchg
adc
lock
js
and
jmp
idivb
xchg
jnp
arpl
dec
mov
outsl
pop
arpl
pop
mov
enter
xor
mov
sarl
push
push
jmp
ja
es
aad
jle
movsb
sbb
sub
out
mov
mov
and
gs
add
pop
shlb
imul
push
cmp
outsl
imul
les
loop
xchg
mull
lcall
mov
mov
sub
data16
inc
out
lret
xor
push
scas
mov
out
movsb
mov
iret
cmpsl
mov
call
xchg
jmp
inc
xchg
popf
jl
fucomi
movl
pop
shl
clc
dec
mov
jl
test
ret
add
mov
stos
push
sar
pop
jp
jmp
jle
pusha
xor
in
call
bound
jecxz
and
sbb
inc
and
leave
jle
or
dec
add
dec
jl
icebp
daa
sub
xor
sahf
pop
fucom
test
mov
lods
test
aaa
dec
sub
test
bound
cmp
out
nop
es
in
push
adc
and
nop
mov
mov
or
ret
outsb
popa
leave
test
or
and
ret
and
xor
scas
or
sub
adc
or
jo
mov
cmpsb
outsl
in
xchg
aad
loopne
jp
cmp
imul
and
lds
rcll
xor
pop
sbb
icebp
lock
test
sub
sbb
pop
in
iret
push
rcl
xlat
cmpsl
xor
jle
cwtl
js
das
mov
mov
inc
mov
or
mov
pop
out
mov
je
hlt
ret
mov
push
xchg
lea
xor
mov
add
popf
cmp
stos
or
mov
sbb
icebp
lods
imul
push
addps
in
sub
push
add
scas
mov
adc
cld
mov
xlat
push
sbb
loopne
ja
icebp
dec
in
dec
cmp
push
jle
mov
cwtl
mov
loopne
sti
jecxz
fsubp
inc
sbb
adc
test
push
fcmovne
mov
icebp
add
outsb
jae,pn
xchg
pop
repnz
sti
mov
test
pop
movsl
push
movl
mov
inc
and
clc
push
movsb
fs
fmuls
mov
inc
frstor
jb
sbb
sahf
add
in
rcrl
lods
xor
or
fwait
inc
stc
shll
jne
cltd
inc
mov
lock
fcmovnbe
adc
cmp
sbb
inc
xchg
inc
jecxz
inc
inc
dec
cmp
jle
stc
dec
xchg
lds
js
jns
iret
in
xchg
fcmovnb
jbe
mov
or
inc
cmpsl
in
into
mov
sub
hlt
in
jle
dec
clc
pop
or
sub
decb
add
cmp
add
push
xor
dec
xchg
pop
clc
into
cmp
add
addr16
lods
mull
xor
cmpsb
out
mov
sbb
cmpsl
adc
add
push
sbb
bound
xor
mov
mov
shlb
out
cli
sti
js
mov
inc
out
pop
imul
lcall
dec
dec
dec
in
xlat
lock
pop
mov
iret
test
lret
test
push
sbb
push
repz
sbb
mov
sub
mov
leave
mov
push
or
lret
push
xchg
jg
jge
inc
imul
into
into
lods
add
int
out
sub
mov
sti
adc
dec
xchg
out
lds
enter
cmp
and
insl
insl
sti
adc
imul
pop
mov
dec
lods
or
loope
insb
int
mov
aas
punpckhdq
movsb
scas
xor
sahf
fs
aam
adc
test
push
insl
clc
or
sub
cmp
sbb
mov
in
movsl
and
call
jae
jmp
mov
mov
xchg
iret
pop
mov
xchg
mov
add
in
jmp
or
ret
clc
insb
fnstsw
into
jae
hlt
pop
das
push
dec
dec
stos
aam
cmp
pushf
movsl
outsl
bound
mov
pop
inc
pop
loope
popf
sbb
sub
mov
push
sub
cmpsb
jae
rcr
cmc
jp
push
cmp
jmp
insl
cmovb
mov
je
stc
loop
mov
jmp
jmp
push
jbe
mov
andl
push
and
sub
in
xchg
loop
xor
jns
outsb
out
add
stos
and
pop
cmp
mov
push
add
jb
push
aas
out
loop
inc
aaa
cmp
in
cmp
adc
pop
insb
imul
push
addr16
sbb
inc
adc
shll
imull
pop
xor
mov
call
mov
mov
jmp
sbb
clc
add
test
loop
testl
mov
andb
ret
and
xchg
jge
int
push
inc
and
xor
jae
cli
in
jge
mov
adc
mov
mov
mov
or
test
dec
loopne
and
dec
xor
call
testl
push
xor
push
nopl
out
jecxz
or
push
push
or
mov
mov
adc
icebp
andb
ret
jg
cmc
es
mov
rcrb
scas
pop
lahf
xchg
jbe
nop
insl
add
cmpsl
push
pop
movsb
add
je
sbb
sahf
xchg
aam
lss
out
inc
or
loopne
or
es
cmc
add
push
adc
push
push
push
xor
or
xor
adcb
je
dec
lock
in
dec
mov
jo
add
repz
cmp
pushf
push
loope
mov
jmp
sub
jae
push
jo
daa
push
fs
xchg
out
jno
cmp
push
mov
cmp
movsb
stc
jne
je
aam
cmp
mov
lcall
mov
jne
add
inc
rcll
out
xchg
ds
cmp
xchg
aam
cmc
sub
add
stos
aas
lock
mov
jp
xchg
push
mov
jno
ja
inc
cmp
or
lock
inc
arpl
mov
in
push
push
pop
addl
mov
lahf
xchg
fadd
iret
cmpsb
daa
jp
add
dec
xchg
out
mov
sub
jns
ljmp
xor
and
dec
orb
cmp
mov
or
xor
fs
arpl
adc
pushf
mov
cmp
mov
mov
pop
sub
repz
jns
jae
xchg
popa
pop
push
jae
pop
pop
cmp
xor
ljmp
mov
pop
push
shl
xor
inc
faddp
aas
ret
xchg
cs
jne,pn
test
or
gs
dec
test
cli
sub
pop
mov
orb
push
iret
add
aas
add
dec
js
push
sub
ja
push
int3
or
mov
pusha
sbb
sbb
sbb
mov
jns
xchg
jne
mov
xchg
jmp
jecxz
jge
and
sbb
mov
lds
push
xor
adc
mov
cli
ljmp
out
sbb
cmp
popa
jnp
cmp
and
jp
mov
stc
dec
pop
dec
pop
sub
cmpsl
cmpsb
mov
loopne
adc
add
fwait
imul
dec
adc
xor
or
jmp
loopne,pt
fcoms
dec
mov
sub
push
mov
test
adc
loopne
js
lock
jmp
in
cmp
inc
add
lock
stos
cmp
push
imul
popa
adc
scas
jl
add
lock
and
loope
es
sbbl
scas
lret
or
cwtl
cmp
pusha
les
dec
ret
in
add
mov
push
sbb
pop
lock
pop
bound
fxch
inc
adc
adc
lcall
loopne
fstl
orb
loope
divl
in
adc
push
test
popf
test
xchg
cltd
in
cmp
jae
dec
mov
jae
inc
or
lds
inc
mov
sub
insl
cmp
jp
pop
scas
add
mov
js
mov
sbb
mov
jmp
idivb
movsb
repz
rcll
notb
adc
cmp
std
aam
test
and
push
mov
pop
or
xchg
sbb
arpl
mov
mov
out
ljmp
cli
je
pop
mov
push
loop
fsts
push
enter
js
lods
shlb
sbb
and
jge
inc
push
sahf
ds
add
shlb
mov
movsb
dec
in
js
negb
daa
pop
mov
jp
sub
fsubs
pop
push
push
inc
ja
out
mov
nop
sbb
outsl
pusha
out
out
jne
je
in
mov
xor
ljmp
aas
dec
jb
movsl
in
sbb
fwait
mov
sbb
sahf
call
loopne
add
push
fdivs
cmp
ret
ds
adc
cmpsl
shll
pop
inc
clc
sbb
loope
mov
mov
or
or
cmp
mov
mov
sbb
lret
ja
ficompl
push
roll
inc
fimuls
icebp
clc
fsts
cmp
ljmp
adc
sbbb
mov
stc
incb
cs
loopne
add
loopne
hlt
adc
andl
and
movsl
scas
mov
das
inc
test
imul
enter
in
test
div
and
sub
pop
mov
aad
pop
xchg
mov
or
dec
cmp
or
adc
test
pop
push
push
fdivp
xor
js
lea
enter
rorl
test
jge
dec
xchg
mov
xchg
out
inc
inc
sbb
mov
movsl
rorb
addl
je
bswap
js
cltd
leave
and
add
cmp
cs
dec
pop
add
jo
or
popf
andb
cmp
mov
js
inc
cmp
jp
push
fst
jns
and
test
pop
xor
jno
xchg
sbb
sti
cmp
xor
shll
pop
add
je
push
js
shrl
push
mov
xchg
cs
and
push
mov
mov
dec
ja
mov
and
push
fdivl
cmpb
push
roll
mov
jle
cmp
mov
fstp
inc
inc
loop
adc
cmp
pop
addr16
bound
xor
and
outsl
scas
mov
in
loopne
out
pushf
out
dec
jge
adc
add
and
in
out
jmp
in
pushf
jno
adc
push
test
je
inc
aas
jl
andb
es
push
add
out
repnz
in
sahf
cmp
add
mov
test
jae
push
rol
jmp
test
fadds
loopne
aaa
cmp
xchg
xchg
in
imul
jo
hlt
outsl
insb
xchg
sbbl
addr16
and
cmp
xchg
push
rclb
jbe
outsl
inc
popa
aad
fcomps
xchg
mov
jo
mov
mov
stc
jae
mov
aad
sti
add
ret
jmp
sub
push
sbb
sbb
or
stc
mov
cld
call
nop
sti
inc
dec
adc
mov
cmp
stos
cmpsl
mov
dec
cvtps2pd
pushf
adc
pop
push
gs
mov
dec
push
sub
adc
adc
cmc
cmp
addb
or
aad
lret
das
push
jns
lcall
mov
out
rcl
sbbl
cmp
frstor
loopne
and
sti
mov
sahf
mov
add
ret
xor
lds
out
dec
xchg
shll
push
mov
add
add
sub
dec
int
adc
shl
sub
add
subb
mov
sbb
adc
scas
and
clc
pop
pushf
mov
jb
cmp
ja
lea
add
andl
jo
xchg
inc
inc
add
push
jbe
mulb
inc
dec
je
mov
repz
aas
inc
imul
cmp
aaa
inc
out
cmc
js
outsb
rorb
sahf
sub
lea
mov
or
cmpsb
les
jb
aad
enter
fistpl
push
dec
or
push
mov
mov
ljmp
setl
cltd
negl
into
cld
or
push
gs
dec
xchg
aas
jl,pn
imul
in
fcmovnbe
push
fldl
fists
push
inc
rorb
mov
and
jns
fiaddl
add
call
sbb
clc
adc
mov
nop
bound
mov
and
fldenv
loopne
pop
pop
daa
int
fs
fcoml
mov
dec
sub
mov
data16
js
push
pop
das
pop
or
je
adc
hlt
arpl
imul
lods
and
ds
loop
subb
xchg
fildl
leave
adc
cmp
xchg
loope
jne
ja
enter
inc
cmp
push
cmp
je
sar
stos
insl
cmp
inc
enter
cltd
sti
add
mov
cmp
xchg
fsubrs
mov
ret
sub
adc
jns
hlt
ljmp
add
aad
mov
out
mov
mov
adc
mov
repz
pop
jge
ret
sti
fiadds
cmp
adc
push
mov
jne
in
inc
ficoms
faddl
push
pop
inc
jmp
imul
and
js
repz
shlb
std
push
inc
add
sub
data16
add
jp
push
mull
jl
xor
movsb
outsb
adc
outsb
xor
dec
mov
jg,pn
inc
shr
lods
out
clc
outsb
stc
fisttpl
adc
inc
shrb
test
out
loopne
dec
pushf
and
sti
or
lret
push
pop
dec
and
les
in
test
out
push
rcl
icebp
les
mov
adc
test
mov
ret
mov
or
jecxz
lcall
mov
mov
xor
lret
in
pop
push
sti
add
movsb
add
sbb
in
and
mov
adc
subl
scas
loope
cmpsb
push
cmp
pop
push
sub
ret
pop
mov
push
sub
jno
pusha
pop
sub
je
or
push
adc
pop
clc
clc
push
xor
test
inc
test
push
mov
lds
mov
loopne
cwtl
adc
dec
addb
ret
pop
out
jae
gs
inc
sarb
ret
add
jbe
mov
or
dec
pop
int
popa
pop
in
js
lcall
adc
nop
sahf
pusha
outsb
pop
sbb
mov
add
push
xchg
xor
mov
jo
adc
adc
imul
mov
cwtl
xchg
imul
aas
pop
ss
add
xor
les
out
inc
and
setne
xchg
xchg
movsl
jp
es
inc
mov
popf
rcrb
or
push
inc
ja
dec
xchg
cmp
scas
jle
add
fwait
enter
xor
sub
inc
bound
in
divl
decl
dec
xor
jp
mov
es
sahf
in
push
dec
sbb
mov
xor
mov
cmp
into
ficoml
jo
fiadds
dec
or
mov
lods
inc
popf
rcll
push
pop
dec
xchg
pop
and
test
add
and
arpl
dec
in
mov
arpl
add
out
lods
into
call
pop
imull
out
adc
and
push
aas
cli
dec
ds
sub
scas
mov
fnstenv
mov
mov
scas
lods
mov
scas
adc
mov
adc
mov
dec
test
leave
mov
cmp
add
dec
lock
scas
std
or
or
jb
jno
std
test
mull
movsl
out
inc
jo
scas
clc
adc
add
adc
hlt
out
das
push
or
jle
es
or
xor
cltd
loope
xlat
cli
pop
insb
xor
fsubrs
jbe
dec
mov
insl
cmp
leave
mov
fistpl
gs
shrb
cmp
cmp
mov
popf
in
add
xor
int3
push
jae
inc
test
mov
mov
lahf
add
xchg
inc
ja
inc
pop
test
pop
lahf
pop
or
aaa
cmp
push
cmovg
inc
sub
addr16
stos
push
les
push
addr16
mov
dec
sarb
test
sbb
loopne
andb
cmp
call
jp
incl
fcomps
insl
mov
das
arpl
pop
adcb
outsb
shl
testb
repnz
ficomps
jo
out
lds
push
add
int3
dec
fcomi
xor
test
subb
inc
gs
or
dec
iret
lahf
inc
sbb
jmp
call
popf
xor
push
ljmp
pop
dec
or
cmc
loope
test
or
mov
jecxz
jmp
cltd
add
and
popl
and
mov
lock
xchg
ret
mov
daa
xor
pop
xchg
cmp
mov
or
fimull
fisttpll
jl
pop
mov
lock
out
jp
mov
ds
jbe
call
into
lea
inc
adc
stos
cld
cli
sub
dec
je
adc
mov
ja
mov
sarb
stos
insb
f2xm1
xchg
dec
or
mov
lods
ss
push
std
cmc
sub
jns
xchg
jecxz
xchg
adc
or
cvtdq2ps
cmpsl
int
arpl
out
mov
stos
aad
pusha
rorb
xchg
pop
stos
addl
sarb
add
cmpl
bound
std
lea
cmp
cmp
sbb
fstpl
mov
sub
xor
lcall
stc
aaa
jbe
std
sbb
je
push
scas
push
xchg
pop
ret
mov
iret
xor
jo
movsb
fistpl
in
inc
loopne
cmc
in
xchg
add
roll
xor
addl
subl
pop
lret
add
cmp
in
sbb
clc
cwtl
adc
pop
and
cmp
icebp
gs
fstpl
orb
not
pusha
sub
jmp
imul
arpl
cmc
or
jns
icebp
ds
sub
lea
jle
andb
ljmp
ret
sti
sarl
pop
cmpsl
outsb
aaa
ds
fistl
xchg
shll
test
sbb
dec
cs
lea
sahf
mov
mov
mov
adc
push
clc
pop
jecxz
inc
and
push
insb
fwait
add
dec
imul
cmp
xor
xchg
lea
cmp
and
jnp
lds
pop
inc
push
add
or
push
fimull
arpl
dec
fisubrl
mov
inc
mov
int
repz
cmpsb
sub
mov
push
jge
mov
test
aaa
cmp
push
add
jg
test
int
ret
sub
mov
dec
and
movsb
mov
cmp
cwtl
outsb
fistl
pop
mov
gs
ja
mov
inc
dec
shlb
mov
pop
mov
mov
xchg
push
adc
mov
out
mov
and
lock
sbb
jmp
fdiv
stos
orb
add
sbb
bound
ljmp
dec
cltd
cld
sub
xchg
in
mov
das
sbb
sub
or
dec
negb
jecxz
mov
cmp
adc
pusha
and
lcall
ss
enter
inc
ds
fisubl
pop
sub
push
int
sbb
xor
into
xchg
mov
fwait
icebp
pop
xchg
cmpsl
clc
into
push
xor
sub
sahf
mov
push
dec
subb
fcompl
mov
rcrl
mov
adc
sahf
gs
testl
jmp
je,pt
or
pop
sbb
rclb
mov
into
jg
nop
push
sub
push
or
xchg
rcrl
xchg
prefetchwt1
outsb
pop
aad
inc
add
mov
pop
sbb
out
push
bnd
cmpsl
aas
push
and
mov
imul
test
stos
cmpsl
push
jae
fadds
shll
adc
add
push
mov
movsl
xchg
pop
dec
insb
dec
outsl
fcmovnb
push
filds
repnz
or
imul
or
mov
cmpsl
cmp
sbb
inc
mov
sbb
pop
jne
insl
popa
fdivp
jl
shrl
dec
sbb
mov
dec
mov
fdivrs
int3
cwtl
and
inc
inc
cwtl
inc
in
dec
xor
inc
dec
xchg
das
cs
pop
daa
mov
pop
insb
mov
dec
dec
ljmp
pop
arpl
inc
xor
mov
testb
dec
das
outsb
pop
push
int3
ljmp
cmp
mov
leave
inc
fdivrs
insb
js
push
inc
sub
or
sub
jne
imul
add
jno
add
hlt
ficompl
inc
inc
stos
push
mov
pop
jl
mov
inc
fucom
lret
insl
in
insb
jmp
adc
lock
bound
lcall
cmp
das
push
adc
xlat
push
aaa
movsb
mov
ljmp
arpl
ja
fsubrl
push
xchg
mov
in
clc
lock
rclb
mov
pop
push
jns
adc
mov
pop
jl
xor
ret
and
mov
xor
cmp
or
insl
mov
add
xchg
filds
push
mov
adc
aad
je
inc
cmp
mulb
inc
push
aad
dec
lock
inc
cmc
jp
cmp
test
scas
shlb
lret
ja
inc
cld
jp
call
dec
test
pop
inc
lods
inc
mov
sub
ds
push
jno
jbe
dec
roll
divb
or
or
shll
mov
sbbl
les
call
loope
imul
in
sub
stc
shlb
imul
bndstx
adc
sbb
pop
cwtl
aas
sub
adc
adc
jmp
xchg
push
xchg
xchg
xor
xchg
je
je
cld
or
xlat
xlat
sub
fdivrl
movsb
xor
vfmadd132sd
fcoms
test
add
pop
dec
cmpsl
push
sbb
jnp
sbb
dec
sahf
addb
subb
jg
scas
and
dec
xchg
movsb
cltd
add
ljmp
mov
out
test
sbb
pop
into
das
cmp
sub
sbb
cmp
sbb
aam
mov
fidivs
aas
push
xchg
dec
mov
fists
inc
push
je
cli
or
jbe
and
mov
add
test
adc
push
cmp
je
rorl
sbb
sub
xor
je
jb
push
mov
or
iret
hlt
and
rolb
shrb
sbb
dec
jns
lret
out
pusha
mov
xor
out
test
loop,pn
bound
outsb
pcmpeqw
cwtl
add
dec
sub
out
ja
insb
or
push
mov
mov
movl
xor
adc
and
and
dec
pop
xchg
lods
leave
loopne
arpl
orb
sbb
add
dec
cmpb
mov
or
mov
lock
lcall
popf
aad
jmp
mov
mov
sbb
jle
sbb
sbb
mov
adc
xor
fists
inc
addr16
add
xlat
add
jb
mov
xchg
sbb
mov
adc
push
movsb
xor
inc
inc
shlb
dec
pusha
out
sahf
and
hlt
jb
ljmp
lcall
dec
push
pop
out
les
shl
xor
push
sub
loope
popf
push
push
adc
nop
mov
je
lock
popa
test
pop
negb
stc
sbb
add
mov
mov
sarl
pop
xor
jnp
hlt
jae
popf
push
rolb
xlat
and
or
pusha
jl
clc
jb
dec
pop
je
pop
std
int
dec
mov
hlt
movsb
dec
call
mov
scas
ret
jbe
cmpsl
mov
push
incb
push
pop
xor
daa
out
repz
push
and
pop
bound
les
and
and
repz
sbb
push
push
add
loop
fwait
add
fisubs
daa
loope
sub
jno
sbb
dec
loop
push
mov
into
mov
mov
stos
adc
inc
loope
fadds
rclb
sub
add
ds
outsb
imul
in
push
sbb
mov
or
add
xchg
add
jle
mov
push
cmp
lahf
loop
jae,pt
pop
pop
scas
aas
andb
mov
bound
cmp
shl
sbb
fwait
hlt
das
cmp
subl
ret
cmpl
xchg
loop
in
pusha
mov
cmpsl
push
addr16
mov
mov
mov
pop
jge
xchg
imul
loopne
xor
mov
mov
jb
xchg
leave
inc
call
test
pop
mov
imul
dec
sbb
push
jp
push
jns
addl
addr16
sub
cmc
xor
add
and
lahf
pop
cmp
sbb
pushf
adcl
lock
std
mov
xchg
jp
sahf
push
rclb
pop
dec
jno
jo
push
addr16
lods
repnz
jo
xchg
mov
mov
cld
or
mov
mov
daa
jo
xor
inc
adc
lcall
jne
sub
push
clc
test
pop
push
roll
fwait
push
dec
jb
outsb
cmp
cmc
outsb
arpl
mov
rcll
movsb
mov
dec
mov
fucomi
jmp
pop
sbb
jbe
mov
roll
jl
or
in
int
sar
add
push
push
addr16
int3
mov
and
pop
cs
aas
mov
push
ret
ss
add
loope
inc
or
cli
sub
imul
inc
fisttps
and
out
ret
mov
xchg
or
adc
pop
mov
xchg
loopne
pop
mov
std
dec
lock
xchg
fistpl
mov
add
divb
dec
ds
push
pop
sbb
add
sub
or
sbb
mov
imul
stos
xor
mov
out
ss
jnp
icebp
test
and
xchg
rcr
test
xor
adc
movsb
mov
rcll
in
cmp
mov
ja
lahf
fsubrs
pop
adc
stc
ss
shlb
and
add
adc
fidivrl
hlt
and
jecxz
adcb
and
hlt
xchg
imul
and
jb
mov
ficomps
mov
mov
sub
sub
or
lret
mov
icebp
mov
push
jb
push
adc
mov
ret
pop
lods
jecxz
sbb
hlt
movsb
push
mov
mov
cmc
mov
sub
inc
in
add
mov
fwait
lea
sub
xchg
inc
jl
imul
fbld
or
xor
sbb
negb
or
std
pop
js
or
lea
pop
stos
push
insl
xor
cmp
cmp
incb
and
test
je
dec
sbb
ss
test
arpl
bound
cmp
jbe
mov
aad
mov
push
mov
jmp
dec
das
jl
push
xor
push
fnstsw
mov
test
aad
xor
or
mov
test
xchg
lds
mov
and
add
mov
dec
outsl
cmp
into
sub
ds
xchg
cmp
lret
movsb
mov
lahf
push
xchg
jns
repz
dec
mov
jae
add
xor
jl
out
push
push
jne
add
dec
push
push
inc
pushf
or
and
and
jno
pop
aam
in
cs
ljmp
cwtl
pop
notb
push
jecxz
sub
movhps
cmp
xchg
aas
in
aas
lock
fidivs
ss
popa
daa
pop
subl
sbb
fidivl
sbb
in
mov
pop
inc
aaa
jo
outsb
mov
xchg
jmp
jno
sbb
pop
push
push
andl
in
pop
fmuls
mov
mov
or
xchg
scas
pop
jp
xor
shrl
or
mov
pop
or
jne
ja
imul
fwait
aaa
fistpl
cs
sub
xchg
jo
xchg
lods
pop
mov
neg
push
idiv
add
movsb
jl
xchg
push
push
or
xchg
cmp
sub
pop
jo
shll
lods
cmp
loop
out
stos
cld
mov
cmp
pop
aas
sub
push
pop
hlt
and
movsl
sbb
das
subb
add
outsl
out
repnz
dec
xchg
out
insl
push
xchg
dec
movsl
fcmovb
or
and
outsl
pop
mov
scas
or
movsb
mov
xchg
cld
js
or
in
leave
mov
shll
push
jmp
mov
sar
out
sbb
jo
bound
jecxz
sbb
rcrl
outsl
mov
fcmovb
loopne
push
sbbb
loop
mov
lcall
je
pop
lock
pop
loop
mov
push
sbb
gs
dec
arpl
cmp
pusha
or
mov
clc
xchg
fs
pop
and
ss
jle
push
cltd
ret
mov
outsl
inc
push
mov
add
mov
xchg
js
sbb
sub
mov
loope
mov
dec
cmp
xchg
mov
or
imul
xor
xor
sub
mov
sub
je
xchg
inc
xchg
mov
outsl
pushf
mov
sbb
insb
xchg
inc
ljmp
out
pop
push
xor
sbbb
aam
push
adc
rcr
jle
lock
daa
sub
insl
lret
jo
rol
dec
faddl
es
sbb
test
lock
rcrb
or
sbb
jmp
jne,pn
outsl
push
popf
push
cmp
and
pusha
and
cmpsb
hlt
dec
mov
add
inc
sub
xor
cs
insl
bswap
fisttps
fstpt
xchg
fidivs
pop
sbb
imul
out
ja
pop
cmp
lock
jb
popa
ja
pop
jmp
imul
sbb
mov
push
fldcw
mov
dec
mov
cltd
push
leave
pop
add
push
and
sbb
jnp
clc
stos
bound
ja
inc
push
pop
cmp
outsl
fwait
inc
cmc
mov
sub
shlb
aaa
fnsave
xchg
cmpsb
adc
test
clc
roll
ficompl
adc
das
in
popa
lea
add
jl
mov
insb
out
popa
sub
mov
movsl
mov
lds
xor
pop
pop
lret
or
xchg
lcall
subb
cmp
stc
and
nop
pop
loopne
mov
loope
push
xchg
sbb
insb
fdivl
sbb
outsb
xlat
cmpsb
and
mov
jno
fs
add
push
call
sbb
mov
inc
bound
fs
sbb
mov
out
mov
rcr
and
dec
push
insb
push
fs
mov
sbb
jno
inc
mov
fstpt
out
jb
dec
aaa
leave
scas
cmp
fcomps
in
cmp
push
es
aad
push
sub
out
push
fsub
sbbb
mov
shll
sub
int
out
test
das
mov
pop
mov
adc
fisttpll
or
std
or
mov
push
fucomp
cvttps2pi
sub
loope
das
inc
dec
inc
push
cmc
lcall
dec
jle
pop
cs
imul
adc
test
lret
jle
jo
jns
ds
mov
add
cmp
stc
mov
cmc
cmp
insl
mov
cs
in
cmp
lret
and
imul
inc
xor
sub
pop
notl
mov
imul
scas
fcom
stos
leave
and
lret
xchg
adc
dec
inc
pop
push
rcrl
jbe
cmpsb
pop
int
sahf
inc
ret
or
fildl
lcall
push
inc
fimuls
pop
not
aas
ds
dec
lret
push
pop
push
mov
lret
pop
or
pop
outsb
cmp
cwtl
inc
aam
and
mov
push
add
daa
fsubrl
pop
enter
mov
mov
lret
insb
lods
add
cmpsl
and
cmp
mov
mov
ja
mov
cli
ret
insb
push
nopl
dec
or
imul
in
mov
adc
cmp
out
nop
push
jbe
arpl
imul
pushf
es
fs
add
sub
push
jb
imul
cmpsb
into
mov
inc
xor
mov
das
jl
dec
dec
lahf
pop
imul
xchg
inc
repz
mov
mov
and
dec
cmp
mov
in
sbb
push
out
inc
jo
daa
pop
xchg
cmp
mov
pop
pop
sbb
push
pop
adc
das
mov
fcomip
or
dec
add
xchg
or
push
cmp
aaa
pushf
adc
mov
inc
outsl
lock
insb
pop
xchg
cltd
and
push
push
lahf
call
add
push
sbb
orl
fdivs
add
push
pusha
inc
roll
xor
adc
mov
or
call
push
in
mulb
mov
push
test
sub
add
jp,pn
adc
pop
test
loope
ret
imul
mov
cmpb
jns
pop
xor
jo
or
cmp
sbb
mov
adc
sbb
out
pop
inc
mov
loopne
scas
subl
or
mov
add
inc
rorl
adc
mov
popa
imul
adc
ds
in
les
cmp
cmp
dec
clc
jno
pop
mov
dec
scas
mov
mov
sbb
test
das
pop
pop
jg
imul
mov
shrl
cli
std
enter
lea
inc
dec
arpl
mov
or
cmp
fisttps
push
pop
loopne
inc
vpmacssdql
cmp
or
jle
sarl
loope
push
lret
mov
xor
pop
dec
fcmovbe
in
scas
lock
jl
xor
xchg
repnz
fwait
cltd
nop
mov
or
sbb
sbb
pop
dec
jmp
lds
fildll
dec
adc
test
je
jne
rol
js
aad
xchg
pop
xchg
xchg
mov
addl
stos
jne
aas
jecxz
push
jge
inc
sbb
subl
das
pop
jle
shlb
call
add
xlat
dec
or
adc
mov
xchg
iret
jo
add
sbb
out
pop
adc
lock
xchg
adcb
mov
adc
shl
mov
int
out
push
or
add
inc
les
outsb
push
and
addr16
in
xorb
or
lods
add
add
int3
lock
push
inc
pop
pop
dec
push
push
imul
mov
mov
call
push
dec
test
insb
push
mov
icebp
cltd
adc
xchg
pop
popf
or
add
daa
inc
vmread
sbb
je
fcoml
out
cmc
add
and
cmp
xchg
mov
nop
cmc
push
outsl
outsl
call
andb
pop
xor
out
test
push
and
pop
mov
icebp
pusha
or
pop
mov
pushf
data16
mov
pop
cld
jp
pop
push
sbb
cs
fdivrl
insb
mov
fstp
testb
movb
mov
je
jecxz
jl
and
adc
fs
enter
iret
xchg
pop
outsb
lods
icebp
fdivs
mov
dec
cmp
mov
adc
test
and
or
in
out
push
pop
fsubr
scas
test
mov
decl
clc
fs
mov
orb
sub
xchg
dec
adc
loopne
out
lds
push
mov
iret
xchg
mov
rcrl
outsb
xchg
pop
repnz
insb
aas
arpl
cld
cltd
out
push
cmpsb
sbb
cmpsb
loopne
test
mov
add
mov
xchg
add
negb
sub
or
and
cli
ret
jbe
mov
mov
rcll
jecxz
mov
out
mov
lock
or
imul
arpl
fs
dec
adc
mov
jbe
cmp
xchg
ja
out
cmpsb
dec
dec
cli
adc
fimull
mov
roll
imul
xlat
add
sub
adc
push
out
push
and
data16
mov
and
mov
push
pop
cli
shll
xchg
mov
rol
iret
loopne
je
loope
faddl
lods
in
cli
fwait
fs
mov
or
lret
orl
incl
jmp
test
sbb
roll
pop
icebp
lcall
inc
sub
lret
mov
sti
and
add
outsb
and
shrb
inc
lcall
adc
fxch
jmp
fcmovnb
movsl
in
rolb
pop
fnsave
sbb
push
pushf
jae
fmul
sub
insl
mov
hlt
add
ss
and
ret
dec
les
add
daa
mov
mov
cmp
adc
outsl
insb
call
dec
mov
outsl
pop
mov
test
push
imul
fwait
in
mov
gs
mov
imul
cmp
repz
movsb
pop
clc
jmp
sub
dec
aaa
jl
icebp
inc
dec
adc
aas
mov
sbb
push
aam
in
sub
dec
xor
xchg
lcall
mov
mov
push
mov
sbb
sbb
and
js
mov
icebp
cltd
pop
ljmp
cs
mov
inc
les
lea
or
jp
mov
jbe
lods
fst
xor
jecxz
and
and
adc
cmp
fwait
mov
lods
cmp
sbb
add
push
or
test
aam
ret
sti
popf
stc
cmp
pop
pop
in
in
imul
jmp
push
inc
outsl
xor
and
mov
mov
cmpsl
sub
sbb
push
clc
out
aas
jle
ret
add
and
shlb
lret
jbe
xchg
push
sbb
adc
scas
dec
stos
movnti
mov
jmp
mov
addr16
adc
jnp
ss
xchg
add
je
faddp
jle
mov
add
test
push
or
aad
icebp
and
mov
paddusb
repnz
sub
pop
imul
add
fld
add
pop
fists
mov
push
push
inc
std
ljmp
lock
adc
sbb
xor
mov
lds
pop
cwtl
jbe
fstps
jmp
sbb
in
aaa
nop
dec
inc
les
insb
fsubr
pop
ja
mov
mov
loop
hlt
pop
push
push
lret
jo
pextrw
mov
pop
into
xchg
je
hlt
pop
out
sbb
and
xor
int
outsb
pop
jns
test
pop
xchg
xchg
cwtl
orl
cli
cmpb
and
mov
adc
flds
jmp
push
insl
pop
decb
outsl
mov
ljmp
sbb
arpl
mov
cmp
je
xor
mov
mov
mov
pushf
push
xchg
fidivrl
xchg
imul
inc
mov
adc
imul
pushf
xor
arpl
iret
cmp
imul
test
jnp
in
jl
adc
inc
jg
pop
mov
mov
dec
mov
popa
inc
cmpsl
dec
test
add
cmp
call
das
popf
mov
fs
add
icebp
pop
dec
add
add
pop
rcrl
cltd
xchg
pop
fcmovu
push
adc
inc
xor
dec
arpl
out
mov
lahf
in
enter
rorb
mov
pop
mov
xor
inc
cli
das
leave
test
icebp
sbb
mov
roll
cs
cmpsb
dec
out
cmp
mov
dec
pop
scas
sarl
stos
fimuls
sub
cmp
jl
pop
mov
cmp
and
sbb
leave
mov
insb
push
xchg
pop
push
pop
push
lea
mov
scas
pusha
jno
cs
dec
push
jbe
xorl
jnp
xchg
outsl
mov
lret
xor
scas
scas
in
loope
ss
rorb
inc
or
aas
push
scas
jecxz
sub
rcll
cmp
sub
cli
testl
dec
push
pop
and
aam
inc
in
add
je
push
dec
insl
in
mov
fnstcw
push
sti
fisubs
fists
push
shlb
lea
ds
mov
sbb
jmp
lods
sub
decl
jno
test
jge
adc
fsub
out
and
sub
bound
pushf
ljmp
sub
jne
jbe
add
das
lock
cmp
inc
test
lcall
xchg
pop
fdivrs
mov
push
in
mov
xchg
cwtl
mov
stc
orb
add
xchg
fisttpl
sub
mov
mov
mov
sbb
mov
mov
test
pop
add
dec
je
aam
add
push
pop
mov
sbb
pop
mov
fidivrs
inc
pop
fildll
pop
adc
xor
stc
and
into
cwtl
push
mov
push
jno
cli
mov
sub
sbb
sbb
fdivrp
shrb
fstl
fsubp
mov
mov
or
gs
out
loopne
scas
fstp
wrmsr
xor
sbb
sbb
lret
push
pop
fwait
mov
fdivrp
push
push
stos
in
sbb
pop
and
xlat
getsec
popf
mov
jo
repz
shl
test
insl
aad
lgs
mov
sub
adc
pop
xor
dec
insb
push
das
pop
arpl
enter
fisubrs
xor
lea
lea
sbb
lret
mov
mov
in
add
call
inc
jg
inc
push
les
xchg
sub
jl
inc
mov
cmpsl
mov
mov
mov
adc
or
leave
lahf
testl
adc
pop
pop
data16
sbb
lods
outsl
in
mov
dec
data16
in
push
sbb
clc
or
mov
popa
loop
jb
pop
das
in
call
bound
sub
stos
popf
dec
push
jg
addr16
adc
xor
jno
add
mov
xchg
ljmp
mov
cs
cmpsb
iret
mov
pop
pop
inc
rorb
sub
lock
or
mov
jl
or
sti
and
roll
imul
icebp
push
sub
aad
arpl
mov
and
imull
mov
test
cmpsb
mov
repz
push
out
lods
mov
jl
ret
mov
out
cmp
scas
sub
push
cmpsl
and
pop
lcall
fildl
mov
jae
mov
scas
sahf
sbbb
insb
xchg
mov
lea
mov
frstor
stos
pop
insl
sub
xor
lods
dec
push
ret
xchg
mov
mov
jp
jmp
aas
rcrl
adc
insl
in
cli
jbe
nop
rolb
adc
mov
push
shlb
nop
mov
push
lods
and
loope
fdiv
outsl
psllq
add
mov
lret
cmp
xor
mov
cmpsb
push
fldcw
fwait
outsb
inc
int3
add
or
push
movsl
push
aas
mov
int3
mov
and
call
jnp
cmpsb
cs
mov
pushf
pop
mov
rolb
jne
popa
inc
adc
push
dec
aaa
sub
cmp
xchg
mov
xchg
addl
enter
inc
scas
or
enter
cmp
jns
outsl
insl
pop
call
adc
andl
lods
jecxz
sbb
cmp
cmp
movsl
sub
mov
jp
sub
fisubrs
mov
mov
shll
outsl
mov
fwait
and
dec
sbb
jbe
push
and
push
fildl
jnp
test
in
jns
xchg
clc
inc
es
jbe
mov
ljmp
jl
clc
inc
pop
mov
repz
ja
jl
cli
dec
and
je
sbb
arpl
or
and
addr16
adc
inc
hlt
dec
sub
xor
add
call
xchg
mov
add
in
in
push
jg
decb
or
mov
mov
cmp
mov
aad
pop
test
xor
into
int
mov
jbe
addl
push
negb
lods
inc
lret
adc
scas
int
shlb
jmp
xchg
and
adc
xor
xor
lret
lcall
pop
pop
jle
mov
fmuls
pop
cmp
push
xchg
ljmp
pop
arpl
lds
mov
call
repz
push
sbb
adc
xchg
cmp
mov
adc
ss
cmc
push
js
loop
add
mov
andl
mov
and
inc
xor
ljmp
lret
in
aaa
jo
dec
scas
mov
jne
je
jnp
in
pushf
sub
lds
jo
mov
or
xchg
sub
fwait
or
sbb
cld
sub
or
mov
push
jmp
xchg
in
adc
pop
xlat
push
popf
pop
jno
ljmp
cwtl
mov
xchg
xchg
push
call
cmp
sahf
jne
push
mov
add
int3
inc
cmc
mov
mov
lea
inc
mov
push
fmul
test
sub
cmpsb
sti
loop
fdivl
and
pop
jl
in
adc
jne
push
sub
jge
mov
jno
cmp
mov
and
jecxz
push
fbstp
outsb
sbb
pop
and
and
popa
mov
and
xchg
fwait
and
clc
add
and
jle
push
idivl
call
adc
cwtl
andl
push
pusha
and
xor
dec
icebp
or
or
repz
cmp
sbb
xchg
orb
imul
and
fcoml
pop
mov
jg
mov
loopne
lret
pop
andl
rorb
and
int
dec
shll
insl
addl
out
push
adc
stos
imul
mov
pushf
pop
jne
aad
pop
mov
dec
mov
push
stos
es
mov
ds
xor
mov
add
mov
jnp
dec
or
outsb
mov
int
or
jae
popa
pusha
inc
mov
cmp
repz
popa
pop
jno
pushf
add
adc
jns
inc
into
repnz
mov
orb
jbe
pop
jle
adc
mov
pop
xchg
adc
outsl
adc
pop
or
or
cltd
inc
sub
xchg
shll
out
mov
push
popf
lods
lods
and
hlt
push
xor
out
xor
xlat
ja
cmp
jns
sbb
sbb
lods
in
das
jbe
mov
jnp
push
mov
sub
sub
les
push
pop
pavgb
cmp
mov
add
adc
and
popa
mov
js
pop
cmpl
imul
movsl
scas
mov
and
push
dec
add
iret
mov
mov
mov
arpl
adc
pusha
jo
xchg
stos
in
pop
adc
sti
mov
in
test
mov
inc
cmp
add
add
push
adc
add
loope
loopne
cmp
js
cmp
fwait
imul
pop
sbb
sub
push
daa
mov
and
xorb
es
push
les
pop
shl
mov
les
repnz
fildl
js
and
out
jno
cmp
and
arpl
inc
lock
fcomp
sub
lcall
and
fmuls
cmpsb
call
pop
adc
jae
jb
xor
shrl
xor
pop
sub
mov
mov
in
push
mov
out
pop
adc
cmp
test
jecxz
xchg
xchg
sub
das
push
cmp
pop
fnsave
lahf
add
adc
loope
add
cmp
test
test
push
dec
xor
inc
xchg
les
sbb
ret
inc
adc
jmp
push
cld
test
cmp
pop
addb
pop
add
cmp
fmul
mov
add
sbb
mov
dec
adc
mov
inc
pushf
inc
mov
inc
push
aaa
lea
mov
int3
mov
pop
inc
mov
jge
mov
sbb
repz
adc
jae
and
cmp
lahf
mov
jno
in
add
das
fldl
pop
dec
dec
es
fstps
les
lods
stos
in
ficoms
fs
xchg
inc
je
push
mov
dec
ljmp
ss
add
push
or
leave
adc
jl,pn
cmp
mov
fadd
fildl
jno
fcomip
arpl
loope
mov
xchg
lods
cmp
fdivr
test
mov
scas
jne
xchg
mov
shlb
out
rolb
push
je
push
icebp
adc
andb
mov
pop
movl
loopne
adc
jb
fildl
jne
scas
repz
push
jbe
sub
sarb
enter
clc
cwtl
clc
xor
mov
in
icebp
cmc
scas
cltd
rclb
push
nop
fnstenv
pop
dec
mov
cmpl
pop
sbb
add
xchg
push
clc
mov
pop
sub
pusha
fstp
mov
sub
test
add
sub
jmp
movsb
repz
xchg
dec
xchg
cmp
cmp
outsl
jmp
mov
sbb
cmp
pop
js
sbb
mov
or
mov
rcrl
xchg
popa
pop
aam
jg
test
in
adc
aas
xor
cmpsl
or
lock
daa
pushl
inc
xchg
cld
arpl
bnd
ss
adc
mov
fdivrp
arpl
mov
lea
shrb
jl
dec
les
bound
ret
sub
pushf
into
mov
movsl
ret
in
bound
loopne
out
lea
int
pop
jl
jno
mov
adc
loopne
inc
cli
sbb
adc
push
movsb
lret
pop
mov
mov
clc
shrb
sub
inc
hlt
adc
test
xchg
fistps
cwtl
shlb
jmp
repz
jne
adc
ljmp
mov
jne
jmp
mov
outsb
into
or
js
in
arpl
and
push
mov
popa
jnp
and
jno
pop
mov
and
or
movsl
or
sbb
out
lret
jge
loopne
int
add
es
gs
cmp
inc
repnz
push
inc
mov
std
in
mov
decl
inc
jno
das
insb
mov
lods
xor
fucomi
adc
sub
mov
in
add
aad
jne
std
adc
or
jne
mov
xor
cli
fldcw
imul
fnstsw
pop
jno
jo
ljmp
jne
insb
scas
mov
xchg
repz
inc
insl
push
mov
in
adc
sbb
pop
clc
insl
sub
adc
inc
lock
in
push
test
int3
pop
push
adc
sub
or
adc
or
mov
add
xlat
or
inc
lds
inc
sub
push
es
mov
xchg
pop
lds
movsl
or
pmulhuw
js
push
hlt
or
les
jp
aaa
pop
mov
clc
inc
xchg
pop
hlt
jl
xchg
imul
int
test
sub
aam
decb
mov
adc
dec
gs
fidivrl
sub
scas
test
dec
leave
or
leave
inc
pop
movsb
jns
movsb
mov
jmp
mov
adc
outsl
das
jl
and
dec
and
cmp
shl
jo
or
ds
mov
inc
pop
inc
loope
daa
mov
and
sub
and
pushf
sub
push
rcll
xchg
sbb
inc
bound
std
aad
mov
add
shlb
sbb
mov
push
push
insb
scas
insl
test
test
cmc
inc
mov
cmp
fildl
je
push
sbb
imul
mov
inc
ret
cmp
loope
xor
std
xor
sbb
loop
movsb
pop
pop
imul
aad
insb
pusha
test
push
repnz
lods
loop
stos
insb
lods
add
jbe
push
sbb
loope
popa
or
add
mov
adc
rcll
mov
dec
push
incb
aaa
mov
leave
mov
sbb
push
push
call
dec
sbb
pusha
pop
xor
push
cli
cmp
adc
loopne
pop
jg
cli
outsl
orl
jmp
inc
mov
aad
loopne
lock
out
sub
fldt
orl
lcall
add
xor
sbb
clc
cmpsb
cli
nop
or
movsl
push
cmpsb
cli
push
out
mov
or
push
mov
icebp
mov
mov
imul
inc
pop
adc
loopne
imul
lahf
or
std
shrb
xor
mov
adc
mov
outsl
dec
jb
pop
inc
xchg
jne
pop
jo
repz
imul
adc
in
xor
sbb
pshufw
xor
ficoml
inc
adcl
push
ja
add
xor
pop
sbb
ljmp
das
decb
xor
push
and
push
or
lahf
or
fstpt
jae
or
push
push
dec
adc
clc
dec
xchg
push
push
cmpsl
inc
imul
js
dec
fnsave
sub
inc
icebp
lea
sbb
cs
mov
call
psubw
sub
mov
adc
push
or
or
call
rolb
xor
aad
daa
mov
push
sbb
and
lock
add
jg
cmpsb
fmull
rorl
inc
mov
mov
inc
cmp
mov
pop
pushf
lahf
mov
stos
test
ss
add
push
xor
mov
cmc
rol
sub
pop
xchg
inc
ljmp
mov
push
xor
jecxz
roll
or
xchg
or
inc
in
adc
sbb
out
sbb
in
pushf
sti
xor
jno
sbb
inc
push
pop
sahf
loope
push
xchg
mov
xchg
push
jbe
mov
push
out
dec
dec
test
in
cmp
lea
imul
jb
add
cmp
in
inc
dec
fwait
js
jge
xor
inc
aaa
mov
ret
mov
lret
scas
jne
dec
iret
lds
pop
enter
ret
adc
dec
mov
push
fsubrs
aaa
loope
adc
xchg
cld
icebp
mov
nop
insb
loop
jo
mov
and
loop
and
jmp
pop
mov
sub
inc
fcmovne
ljmp
sbb
push
call
mov
shl
jge
mov
out
imull
inc
mov
inc
sbb
or
fwait
or
dec
inc
ret
mov
jbe
mov
aam
pushf
mov
sub
insl
jae
clc
jecxz
adc
mov
xchg
clc
das
mov
repnz
cmpsb
jg
subl
je
adc
js
clc
in
icebp
sub
pop
pusha
or
rorb
pop
inc
or
scas
arpl
dec
jno
fdivs
mov
push
adc
mov
inc
pop
les
push
pop
loopne
pusha
push
sub
adc
outsb
mov
rorl
sbb
jns
insl
push
jg
enter
loopne
out
jae
addr16
cmp
add
adc
outsl
mov
add
inc
sbb
inc
xor
test
ja
out
inc
mov
xchg
arpl
pop
inc
sub
push
test
or
and
pop
lds
mov
dec
das
adc
pop
lods
cmpl
outsb
loop
mov
xchg
pop
sti
cmp
jl
enter
push
enter
insl
shrl
dec
add
jmp
pop
aaa
test
arpl
adc
adc
ja
jbe
jmp
sbb
test
jne
or
inc
xchg
and
sbb
rcrb
pmaxsw
xchg
cmc
ficoms
push
or
lret
inc
push
in
mov
mov
pop
or
pop
cmpl
sbbl
cmp
inc
and
fdivs
adc
push
pop
push
rcr
call
out
fmull
push
mov
fnstsw
sbb
cmp
dec
push
mov
cmp
mov
add
loopne
inc
aam
sbb
mov
push
lds
dec
in
lods
popf
jbe
xor
daa
xchg
std
push
mov
adc
arpl
inc
mov
xor
cmp
or
pop
mov
leave
sbbb
and
decl
xchg
add
fldcw
xchg
xor
mov
cmc
push
cmp
ljmp
pop
mov
dec
xor
cmpsl
jmp
pop
adc
movsl
fcmovnu
test
loop
mov
sbb
fisubrs
mov
adcb
fidivs
dec
rcrb
inc
stos
insl
inc
lock
imul
lret
add
lods
loope
xor
outsb
sub
sbb
call
inc
dec
mov
sub
mov
sub
pop
push
fcmovnu
js
sahf
js
jae
das
in
popa
mov
lea
lahf
inc
loopne
or
outsl
sbb
pop
push
pusha
push
enter
xor
push
mov
dec
pop
add
xchg
and
mov
pusha
dec
sbb
jb
mov
dec
or
dec
xchg
loop
jmp
outsb
push
pop
les
lcall
pusha
xchg
mov
pop
pop
ljmp
mov
sar
sbb
mov
insb
push
enter
out
or
push
mov
mov
inc
ret
daa
mov
ret
sarb
sub
lods
xchg
hlt
mov
popf
or
adc
fnstcw
or
loopne
ss
aas
mov
xchg
daa
jbe
test
insl
sbb
jns
mov
lock
std
jne
and
xchg
push
add
das
push
jl
cmpsl
call
in
inc
in
lds
leave
mov
mov
pop
xlat
cmc
mov
or
and
mov
push
stos
mov
mov
and
jo
negb
rcrb
inc
in
pop
lds
jbe
loop
dec
adc
mov
inc
std
xor
pop
repz
add
push
daa
add
add
jp
test
outsl
stos
jl
pop
icebp
popf
xor
add
outsl
mov
lahf
mov
mov
or
jae
scas
es
push
inc
ret
xchg
int
adc
addl
pop
mov
lea
and
fs
inc
into
mov
or
xor
jmp
in
jecxz
push
add
jl
loopne
or
fdiv
jae
or
push
outsb
add
lea
div
add
xchg
fisubl
mov
ret
fsubs
stos
fwait
mov
mov
lahf
dec
dec
mov
add
clc
cmp
push
jo
inc
adc
arpl
test
xchg
das
fnstsw
inc
call
mov
xchg
ljmp
mov
notb
cmc
xchg
xchg
inc
push
jle
loopne
outsb
mov
adc
ja
inc
movnti
mov
push
ja
jge
sti
inc
in
pop
lods
mov
insb
mov
rcr
inc
or
mov
xchg
add
call
roll
sarl
or
add
cmpsl
pop
xchg
jbe
push
cmpsb
rcrb
enter
inc
hlt
add
sub
fstl
btcl
test
je
imul
pop
cmp
fcmovbe
pushf
xchg
inc
outsb
pushl
fnsave
push
xchg
in
push
outsb
push
jno
ds
mov
sub
push
sub
jne
je
das
out
cwtl
fsts
aad
inc
inc
imul
and
xchg
fbld
sub
ja
pop
xchg
mov
and
ret
test
mov
iret
arpl
mov
pop
pop
push
xchg
cwtl
add
dec
and
and
test
mov
repz
cmp
imul
test
rolb
jae
mov
ret
pop
pop
mov
popa
jbe
inc
add
pop
push
popf
outsl
jle
xchg
xchg
andl
add
mov
or
or
and
test
sub
jg
das
faddl
pop
push
push
or
xchg
or
or
dec
dec
push
jns
fnstsw
pop
lcall
lcall
orb
data16
pop
fstpl
jle
inc
sub
mov
mov
mov
js
mov
jb
leave
add
mov
or
or
adc
sub
mov
and
outsl
ja
or
repnz
cmp
and
imul
mov
add
mov
scas
and
sbb
or
mov
pop
mov
add
xor
cmp
mov
mov
call
mov
mov
cld
loopne
mov
je
inc
test
cmp
les
lret
xorb
pop
pop
sub
in
arpl
mov
leave
popa
imul
jo
clc
inc
push
imulb
sti
insl
dec
pop
js
lret
xor
xor
pop
inc
neg
outsl
fdivl
or
cmpsl
push
mov
pop
cld
aam
rcrl
dec
arpl
clc
outsl
outsl
sub
jns
push
push
mov
lds
imul
pop
add
mov
shrl
mov
push
sbb
xchg
and
cmp
xor
es
or
dec
repz
xlat
mov
test
cmp
fbstp
or
dec
sbb
sahf
data16
mov
out
sub
dec
and
sbb
cmp
ljmp
sbb
add
add
stc
ficomps
add
mov
sub
aas
sar
jmp
jbe
mov
sahf
xchg
cmp
mov
test
pop
subb
sbb
andb
push
ds
out
imul
sbb
push
mov
push
test
add
pop
jl
sti
in
gs
imul
aas
mov
sub
aas
imull
idivl
pop
cltd
iret
call
push
iret
mov
jg
out
not
mov
icebp
pop
mov
mov
and
ja
push
xchg
and
loopne
addb
jecxz
mov
jne
cld
adc
arpl
xor
in
xor
pop
pop
shll
and
push
mov
daa
cmp
cld
cmp
push
cmp
daa
ss
das
lret
push
mov
push
pop
xchg
or
outsl
je
jno
lds
push
cmpsb
icebp
jmp
and
jge
fnsave
add
pop
mov
mov
mov
mov
stos
pop
sub
orb
sbbb
int
movsb
and
in
inc
mov
jo
mov
pop
jbe
mov
mov
cmp
daa
je
addr16
inc
out
xor
aam
js
adc
inc
loope
or
mov
sahf
sub
decl
pop
xor
xchg
push
ljmp
mov
fucom
cmp
lcall
aaa
aaa
iret
sbb
push
push
sbb
or
sbb
jp
mov
pop
xchg
jmp
dec
dec
adc
je
lock
aaa
stos
out
mov
cmpsb
sbb
and
mov
jmp
dec
mov
adc
jbe
sub
or
inc
add
fistpll
mov
sub
or
aam
jge
and
lret
mov
jb
jmp
pop
fists
pop
mov
pop
cmp
mov
add
out
ret
mov
rolb
pop
push
and
cmp
pop
and
lcall
outsl
push
inc
sub
and
roll
inc
inc
xchg
stos
xchg
scas
or
loope
not
insl
cltd
xlat
xor
dec
cwtl
test
sbb
lea
repnz
jae
call
ss
sbbl
icebp
mov
mov
push
bound
fsubr
sbb
lret
sbb
or
xlat
call
mov
movsb
dec
fdivl
icebp
lea
jg
sahf
add
repz
mov
jb
fstps
popf
subb
xchg
xchg
in
fidivl
sbb
push
adc
add
push
and
lea
ds
int
pop
pop
sbb
js
mov
rol
test
dec
pop
outsb
enter
push
scas
cmp
mov
in
leave
and
adc
mov
adc
xchg
xchg
movsl
in
push
bound
ffreep
lcall
mov
out
movsb
add
pop
ds
jae
mov
stos
or
mov
andl
insb
notb
adc
es
xchg
fistpll
es
push
inc
sub
fldenv
addb
cs
inc
mov
mov
pop
lcall
cmp
in
adc
lret
lds
adc
sub
mov
aaa
adc
add
insb
mov
adc
xchg
xchg
cli
mov
cmp
fisttps
xor
outsl
stos
outsb
lret
or
fnsave
xchg
cs
aaa
jbe
ds
and
testb
dec
pop
imul
add
xchg
jmp
or
or
outsl
movsl
push
push
dec
andl
fbstp
jg
test
sbb
sbb
insl
pop
mov
mov
dec
out
pop
les
lods
sbb
mov
xchg
int3
pop
sbb
or
pop
in
fistl
dec
dec
scas
testb
mulb
adc
fstpl
icebp
dec
xchg
lea
orl
lea
mov
pop
shll
test
shl
push
sbb
mov
sbb
test
add
rorl
sub
inc
aaa
outsb
jne
rcl
repnz
xor
lret
cs
add
sbb
jo
push
ljmp
jge
mov
jae
inc
daa
mov
xor
lret
stos
cmp
pop
addb
mov
aam
pop
sbb
sbb
jns
sbb
jmp
push
dec
push
push
cwtl
outsb
ja
mov
push
in
fwait
rol
push
cli
jp
fldt
sub
out
push
sahf
jecxz
imul
aad
mov
xor
sub
test
dec
pop
lock
push
outsb
jnp
inc
xchg
inc
dec
scas
push
push
jp
ret
mov
loopne
insl
bound
and
jb
add
std
sbb
jno
imulb
push
xchg
mov
sbb
stos
fs
xchg
jle
mov
adc
dec
lea
adc
or
cli
aaa
popa
pop
test
mov
push
cmp
mov
scas
xchg
add
jecxz
mov
lea
and
sbb
insl
xor
aad
xchg
mov
mov
xor
bound
sbb
aaa
repnz
mov
mov
outsb
mov
sbb
addr16
jbe
roll
ss
sbb
jmp
adc
push
js
mov
lods
xor
xchg
std
or
xchg
aam
xor
lcall
and
adc
outsb
xlat
in
sahf
add
fadds
icebp
shlb
cmp
pop
push
mov
jge
cmc
inc
sbb
out
push
ds
out
xchg
out
aaa
xor
mov
cmp
test
pop
push
out
push
push
call
nop
inc
sarl
push
and
sub
insl
das
mov
add
sti
push
dec
or
jbe
and
xchg
and
mov
inc
stos
aam
dec
ds
das
mov
and
in
cmp
clc
fucomip
mov
inc
mov
adc
mov
mov
popa
dec
jmp
add
dec
and
inc
stos
mov
mov
icebp
pop
lods
inc
cmp
or
orl
sbb
pushf
shlb
cs
sub
jmp
dec
sbb
daa
jp
add
imul
fwait
add
hlt
in
lea
daa
jae
lret
inc
enter
test
test
cmp
hlt
jp
stos
fimull
popa
push
pop
pop
pop
imul
ljmp
outsl
mov
or
jo
mov
add
sub
insl
in
popf
mov
iret
movsl
fldl
cmp
imul
push
cmpsl
or
pop
ja
jno
jecxz
mov
aaa
add
imul
push
or
jge
and
xchg
jp
sti
adc
inc
pop
orb
clc
sbbb
fdivrp
lock
icebp
mov
sbb
mov
add
mov
imul
and
inc
push
cmp
push
sbb
decl
sub
rcrb
xor
adc
dec
fmuls
ljmp
clc
lcall
add
jmp
inc
or
ss
aaa
mov
xor
mov
lods
pop
xchg
inc
movsl
cmp
and
pop
outsb
and
xchg
imul
loop
sarb
aam
lods
or
fbld
jbe
and
aam
add
lock
bound
mov
jge
shrl
jnp
mull
cmp
adc
cltd
push
inc
test
add
das
inc
leave
lods
sahf
xlat
sub
cmp
ret
incl
out
shlb
mov
rcrb
hlt
inc
lahf
pminsw
mov
fs
and
jbe
ds
mov
int
xchg
dec
mov
pushf
mov
ss
lahf
sub
bound
call
cli
mov
xorl
pushf
bound
aaa
inc
aam
jne
xlat
lret
inc
inc
xchg
ds
cltd
cld
cmp
test
sub
cltd
aas
mov
rolb
or
inc
xchg
leave
stos
outsb
xor
inc
cmp
in
sub
and
in
mov
mov
push
jle
mov
push
pop
or
cltd
pop
cmpsb
outsb
loopne
movsb
or
mov
or
idivb
or
or
add
inc
push
mov
jne
outsl
jnp
idivb
adc
ljmp
mov
push
hlt
jo
mov
aaa
mov
pop
imul
jmp
jmp
pop
push
sub
or
les
inc
mov
pop
sub
pop
clc
testb
hlt
xchg
mov
jmp
xor
cs
sub
inc
dec
fstp
adc
jb
loopne
and
cwtl
and
stos
mov
mov
hlt
push
mov
mov
adc
fcomp
outsb
ret
jbe
sbb
aas
repz
das
jo
and
pop
mov
stos
mov
mov
jnp
ljmp
orl
pushl
jne
or
xor
andl
jl
in
lret
roll
aad
pop
jge
ds
in
clc
inc
or
xor
xchg
inc
and
incl
int
sahf
jne
jl
pusha
jmp
and
cmpsl
pop
fstp
pop
adc
push
cmpsb
outsb
dec
into
cmp
jns
jo
iret
cmpsb
cwtl
sbb
mov
jns
inc
push
mov
pop
outsb
aas
mov
bound
mov
loop
pop
sbb
dec
jo
inc
jg
add
into
imul
sti
xchg
pop
xchg
jae
sub
jmp
push
sub
cmc
divb
pop
bound
mov
cmp
sbb
xor
sahf
adc
and
stos
ljmp
mov
data16
leave
push
out
xor
mov
cltd
jne
pop
rolb
int
jbe
mov
repnz
mov
push
les
pop
jmp
xor
adc
xchg
shrl
aas
mov
fdiv
xor
rol
cs
xor
lret
out
ficompl
adc
fcoms
mov
cs
push
xchg
push
add
mov
std
mov
mov
dec
shl
mov
or
shll
dec
jno
out
outsl
jno
pop
cli
sbb
push
mov
loope
xchg
adc
es
leave
out
bound
fisttpl
notb
out
cmp
shlb
movsb
dec
mov
stc
mov
dec
push
or
xchg
dec
xchg
jne
mov
adcl
pop
movsl
outsb
mov
mov
and
fwait
mov
or
xchg
pop
leave
jne
or
cli
mov
and
in
pop
icebp
call
add
clc
push
lods
push
mov
jg
andl
imul
fadd
dec
arpl
add
mov
hlt
xchg
add
enter
les
add
or
daa
and
mov
les
out
mov
xchg
je
push
insl
shll
loop
jb
mov
bound
pop
lds
sbb
sbb
push
mov
sbb
adc
cld
cs
das
lahf
ljmp
mov
sti
lods
into
jmp
pop
rcll
mov
loop
mov
in
pop
xor
dec
or
movsb
sar
xchg
shl
adc
push
xor
mov
jg
mov
mov
popa
stos
in
mov
inc
sbb
adcb
outsb
lcall
fldt
je
inc
stc
imul
dec
mov
test
inc
jne
mov
nop
dec
inc
stos
fidivs
je,pn
adc
lret
mov
out
push
xchg
xchg
mov
inc
lods
outsb
pop
jo
jle
jg
stos
inc
sub
xchg
inc
jne
pop
pop
mov
xchg
repnz
dec
shrl
xor
nop
dec
mov
test
cmp
aas
pop
dec
sub
cmp
mov
push
loopne
mov
ds
add
or
dec
ss
in
or
push
pop
aaa
add
fstp
mov
and
push
push
popf
jl
loope
push
jmp
and
clc
shlb
xorb
or
add
int3
insb
and
sbb
cltd
mov
lods
pop
das
inc
adc
push
push
clc
sbb
xchg
fistl
out
pop
inc
insl
mov
mov
hlt
ret
iret
cmp
fwait
and
sar
and
sbb
and
sbb
mov
mov
inc
outsl
xor
sub
mov
jl
cmp
aas
negl
push
cmp
addb
cmpsb
outsl
roll
lock
pop
sbb
shll
jmp
dec
jge
inc
or
dec
cmp
scas
andb
lods
xchg
js
or
imul
clc
test
mov
push
sbbb
jp
or
cld
sbb
in
ljmp
cmp
jl
ror
push
mov
imul
frstor
add
jo
jo
or
in
negb
sub
int3
mov
cmp
outsl
fcomi
into
mov
and
push
and
inc
cwtl
dec
sub
push
inc
je
in
jbe
or
or
or
pop
outsl
inc
loopne
mov
roll
in
fbld
cwtl
scas
pop
stc
addr16
mov
aaa
into
cli
out
mov
fst
mov
push
pop
aas
xor
mov
imul
fistpll
inc
mov
bound
repz
ja
jge
cmp
pop
push
cli
mov
sub
or
je
jl
xor
pop
aad
mov
push
lods
and
loop
cmpsb
mov
xor
jns
cmp
lret
dec
sub
js
mov
insb
push
lock
mov
mov
pushf
jge
test
cltd
push
and
xchg
sub
call
das
push
mov
ret
repz
xor
xchg
jmp
xor
sbbb
fwait
xchg
cmpb
test
out
push
push
ret
dec
and
xor
or
cli
and
jne
ljmp
xchg
bound
push
xchg
adcl
inc
adc
jbe
fsubs
mov
cmp
push
ljmp
test
pop
das
pcmpgtw
loopne
in
cwtl
in
test
stc
ljmp
shld
xchg
xchg
enter
lods
aaa
pop
cli
dec
or
adc
add
dec
mov
and
imul
aaa
push
pushf
inc
sbb
int
jne
push
scas
mov
push
loopne
fcoms
mov
add
adc
mov
test
out
push
lods
sub
or
or
dec
and
rcl
mul
push
dec
ds
movsl
push
hlt
or
mov
xor
pop
stos
jne
mov
pushl
or
inc
clc
add
push
mov
push
sbb
aad
sti
das
icebp
fsub
je
pop
loope
icebp
test
dec
mov
pop
add
jae
mov
xchg
stos
mov
movb
jge
daa
cli
outsl
mov
sub
decl
loope
stos
les
fnstcw
pop
pop
mov
sub
jmp
aaa
push
add
add
or
int3
sbb
gs
jbe
jns
jmp
fisubl
cmpl
mov
xlat
in
mov
cli
cld
in
sbb
jne
inc
fdivl
ljmp
sarb
mov
int
fcmovnbe
inc
pop
push
imul
cmp
xchg
pop
mov
int
repnz
xor
je
dec
sub
or
insl
mov
stos
ljmp
mov
popf
inc
rol
mov
outsb
int3
dec
popa
js
sti
adc
cltd
rolb
lcall
mov
lock
aas
mov
fwait
cltd
mov
sub
cmp
ficoml
out
lcall
dec
movsl
or
and
dec
and
mov
loope
pushf
and
loope
addr16
jne
jno
push
mov
xchg
mov
ds
push
inc
pop
sarb
mov
or
add
push
add
mov
scas
fcmove
pop
movsl
test
pop
das
in
and
fs
fisubrl
imull
xor
ds
pop
aad
jge
push
ret
inc
jb
dec
lods
loopne
jo
rolb
jne
ljmp
cmp
sbb
or
adc
and
pop
decb
xchg
dec
gs
aad
cmc
adc
or
pop
inc
xor
dec
in
and
ret
std
sbb
shlb
mov
pop
add
or
fcoml
sub
jmp
sub
push
mov
sti
or
pop
aad
dec
lret
sub
cmpsb
shll
sub
mov
test
cmpsb
jno
ret
sbb
mov
aaa
jno
jne
cwtl
into
je
ret
sbb
inc
aad
ffree
dec
aad
add
fimuls
jg
cmp
mov
jge
sub
insl
mov
jg
scas
xor
cltd
shlb
les
mov
gs
mov
mov
or
aam
inc
ljmp
lock
sub
adc
inc
clc
jl
loop
adc
adc
sub
outsb
ret
in
adc
add
adc
int3
hlt
xor
outsl
mov
add
sbb
ret
xchg
jle
repz
adc
outsb
incl
mov
push
sar
or
mov
sbb
xor
cmp
int3
mov
sub
aas
pop
push
arpl
pop
mov
push
xor
add
add
testl
cltd
push
dec
sti
subb
pop
mov
movsl
xchg
adc
lods
mov
jb
sbb
icebp
pop
repz
inc
inc
aaa
jae
pushf
pop
push
cmp
scas
pop
ljmp
xor
outsl
mov
cmpsb
inc
xor
push
in
incl
rolb
loopne
movsb
xor
aaa
and
pop
clc
push
sbb
nop
cmp
pop
js
and
push
or
xor
adc
in
mov
push
pushf
int
pushf
inc
fcmovbe
fisttpl
xor
xchg
aaa
lds
mov
das
mov
lock
pop
aad
in
sub
cli
mov
cmp
lahf
ja
mov
jne
daa
sub
mov
pop
pop
jo
jl
pop
lods
jecxz
js
outsl
leave
rcll
xor
popf
cmp
jmp
into
aas
lea
movsl
mov
push
int
mov
mov
mov
into
and
stos
add
inc
pop
xor
out
mov
pop
mov
js
test
cmp
push
push
jl
loop
xlat
shl
jb
inc
andps
pop
rol
push
jle,pt
xlat
jg
cltd
scas
cli
shll
pop
mov
adc
es
fisubrl
mov
push
xor
test
pop
mov
sub
lea
pop
pop
dec
push
jmp
inc
int
jg
dec
push
aaa
loope
pop
push
adc
cmp
sbb
xor
lds
ljmp
daa
inc
jae
ljmp
inc
dec
rcl
ret
cmp
add
push
and
push
pop
shl
xor
leave
push
sub
mov
ljmp
inc
add
inc
pop
and
push
xchg
insl
xlat
divb
push
ss
das
fnstsw
pushf
or
pop
mov
movsl
push
adc
add
inc
push
scas
aaa
lcall
mov
pop
jo
loopne
mov
std
and
sub
pop
mov
add
ss
sar
inc
sub
stos
mov
loop
dec
dec
decl
stc
fldt
lock
pop
xchg
sub
fsubs
lea
out
dec
repz
push
cmp
mov
jl
mov
add
add
cld
cmpsl
sub
push
mov
mov
clc
inc
inc
aam
and
sub
inc
xchg
or
mov
mov
fimuls
adc
xchg
imul
push
cmpsl
and
fstl
ja
add
sar
testb
push
push
pushf
push
call
sbb
movsb
js
ljmp
loope
into
test
inc
or
sbb
sbb
ss
inc
test
pop
fdivrl
mov
dec
inc
mov
jnp
xor
pop
fnsave
test
inc
pop
dec
cmp
fwait
ljmp
jl
mov
sub
rcr
outsb
rclb
inc
popf
stos
fisubrs
aam
pop
pop
and
cs
lock
or
push
jb
mov
sbbb
add
sub
in
repz
in
mov
imul
add
data16
call
pop
mov
repz
sbb
incb
mov
pushl
push
xchg
adc
adc
adc
dec
int3
incb
xor
and
cmpb
add
jnp
jne
fstl
and
xor
dec
mov
xchg
sbb
imul
push
xor
inc
leave
dec
pop
cld
sbb
in
sbb
adc
mov
add
push
call
inc
pop
mov
xchg
rcrl
fstpl
in
sbb
rcrb
jl
dec
inc
adcl
and
jnp
mov
icebp
sub
and
cmp
mov
mov
movsb
mov
and
or
cmpsb
loop
or
mov
addr16
repz
fistpll
sub
test
fdivs
and
pop
pop
mov
jp
call
fcmove
inc
push
ret
jmp
sbb
jmp
mov
jge
pop
xchg
xchg
jl
cmp
adc
loop
xorl
cmp
rorb
cli
notb
push
lret
or
rcl
push
mov
adc
push
loopne
pop
mov
mov
ret
sbb
insl
mov
dec
shr
push
push
sbb
mov
test
dec
jmp
push
jmp
sbb
addl
adc
sbb
pop
sarb
or
aaa
fsubr
pop
mov
sbb
ss
or
xchg
in
loop
rcrb
ljmp
jns
les
and
fadd
out
jge
xchg
and
cmpsl
or
pushf
mov
inc
xchg
bound
jecxz
std
scas
mov
pushf
fs
aas
pop
mov
and
jne
aaa
js
mov
dec
fsubrl
and
jecxz
mov
mov
push
mov
jmp
mov
xchg
xchg
pop
mov
in
mov
aam
xor
aaa
inc
fsubr
xchg
pop
and
adc
jno
mov
insl
in
sbb
push
jge
inc
frstor
rorb
filds
test
lock
mov
fdivrl
push
and
les
les
jmp
mov
pushf
xchg
addb
ds
sub
loope
fiadds
xchg
dec
fnstcw
pop
in
add
jae
pop
loopne
jl
orb
clc
xchg
push
nop
mov
movsl
pop
cmp
add
or
mov
sbb
rcl
add
enter
lods
shll
pop
stos
sbb
mov
insl
mov
hlt
lock
rorb
mov
xchg
push
cwtl
outsl
mov
adc
mov
cmp
aam
decl
pop
xchg
or
push
icebp
fld
or
push
loope
call
or
adc
jecxz
jb
ds
jne
fisubl
xchg
cmpsl
push
fs
lock
je
xor
mov
pop
fdivrp
mov
jae
arpl
add
xor
and
outsb
lods
bound
loopne
mov
jmp
jg
and
adc
mov
mov
scas
cmp
xchg
clc
dec
jae
iret
jb
lahf
sar
ljmp
add
call
mov
imul
leave
testb
add
or
in
xchg
leave
out
mov
stos
mov
mov
ret
fcom
in
fdivs
pop
pushw
inc
jnp
and
setne
ljmp
and
ret
sub
movsb
or
lea
pop
mov
rol
lods
mov
inc
sarb
pop
rorl
ret
xchg
add
sbb
jmp
jnp
das
cld
xchg
or
mov
adc
pop
push
push
clc
adc
movsl
pop
jmp
dec
sub
add
push
stos
out
inc
cwtl
dec
outsl
into
ljmp
or
and
or
incl
inc
and
sub
push
divl
dec
movsb
push
aad
les
mov
adc
or
incl
jno
loopne
xchg
mov
js
aam
jae
lods
pop
fbstp
or
into
je
xchg
pushl
inc
lds
sub
insb
mov
and
fdivrs
sbb
stos
je
je
mov
mov
testb
fstp
dec
sub
cmp
or
enter
movsl
outsl
mov
jp
jmp
cli
jb
ss
lods
sub
or
in
lods
adc
popa
loope
xchg
lea
sar
scas
mov
and
cmpsb
sbb
add
in
loop
sub
test
push
bound
call
mov
mov
jne
lods
pop
sbbb
mov
dec
enter
inc
adc
or
pushw
call
mov
mov
daa
jg
fmuls
in
in
adc
loop
in
shll
push
sbb
jp
cwtl
mov
andb
dec
inc
jmp
jns
ds
lret
push
mov
or
out
xchg
repnz
fistl
clc
call
mov
clc
ficoms
pop
insl
scas
xlat
add
mov
or
sbb
mov
mov
call
push
pop
mov
cmc
xor
jbe
sub
mov
int3
out
fsubs
lock
push
sub
xor
or
dec
adc
push
daa
cmp
rol
sti
jns
orl
cmp
push
push
push
pop
ljmp
sidtl
nop
add
jg
push
mov
in
lea
loopne
mov
mov
add
dec
insb
ljmp
push
jo
cmp
and
push
push
movl
sub
lock
pop
or
pusha
xlat
in
imul
add
hlt
push
cmp
leave
clc
mov
push
add
mov
popf
dec
mov
stos
fcomps
push
ja
pop
mov
ds
sbb
sti
incl
cwtl
xchg
pusha
fistl
add
dec
jnp
xorl
jle
mov
fwait
lds
adc
andps
cmp
push
mov
loopne
and
bound
adc
or
and
mov
push
mov
push
fbld
add
pop
add
mov
mov
fisttps
les
xlat
add
and
iretw
push
stos
xchg
jae
mov
mov
mov
sbbl
sti
adc
sbb
fildll
cmp
push
or
mov
lcall
shr
pop
ljmp
add
or
jne
pop
aad
test
xor
mov
inc
or
or
rcrb
hlt
push
in
lea
clc
call
arpl
jg
xchg
sbb
pop
jg
sti
aaa
aaa
fidivl
aas
in
xchg
xlat
dec
in
or
and
pop
fstpl
decl
js
sbb
push
sbb
cli
cmp
in
or
addl
adc
sub
ss
ss
pop
sub
sub
stos
xchg
subb
mov
mov
pop
addr16
ljmp
lds
jb
dec
inc
xchg
aad
adc
jno
pop
dec
adc
and
fadds
mov
daa
sub
pop
add
lcall
or
inc
jbe
addb
imul
jmp
cmp
mov
lock
pusha
in
sbb
xor
incl
mov
sub
sbbb
sbb
sub
sub
outsl
test
negl
pop
add
mov
ss
cli
xor
jnp
add
cmc
push
rcr
out
dec
add
and
mov
cmp
push
cmpsb
push
push
movsl
inc
push
jo
cltd
addr16
cld
pop
cli
jmp
aas
shlb
mov
dec
lahf
push
xor
mov
ret
pop
mov
and
pop
out
test
sub
call
mov
clc
ljmp
loop
sbb
rolb
sub
mov
pop
xchg
icebp
movsl
outsb
addb
and
into
inc
stos
mov
aad
mov
outsl
cld
or
outsb
add
int3
inc
inc
int
inc
xor
mov
orl
out
imul
add
into
loop
popa
xchg
jmp
fnop
enter
in
inc
jno
ljmp
and
cld
loopne
xchg
shrl
push
add
in
mov
pop
jbe
arpl
fisubs
mov
push
cld
xchg
bound
das
adc
push
repnz
pop
js
sub
push
into
add
mov
cld
push
das
std
jg
pop
or
movsl
mov
movsb
out
xor
inc
outsl
outsl
jg
clc
nop
cmpsb
ljmp
ror
test
adc
jg
movsl
ret
push
inc
xchg
xlat
or
fadds
cmp
sbb
cs
push
add
xorl
loope
cltd
and
mov
addr16
push
sub
ss
or
aam
aam
shlb
push
cmp
add
or
push
adc
aas
ss
loopne
movsb
or
push
sub
mov
jp
mov
push
inc
lret
xchg
ss
out
incl
mov
xor
cld
and
ret
add
fistps
jb
and
sbb
push
adc
jg
in
sbb
lds
mov
js
and
imul
lcall
rorb
adc
dec
dec
push
pop
and
ljmp
pushl
mov
push
jbe
xchg
mov
dec
pop
fs
loop
push
mov
cs
xchg
mov
in
mov
outsl
adc
fidivl
push
or
inc
leavew
inc
push
scas
arpl
xor
dec
mov
sub
subl
out
cmp
aad
stos
pushf
lea
rorb
push
imul
outsl
bound
cmc
cmp
mov
xchg
and
sbb
adc
clc
decl
leave
fnstsw
add
adc
mov
mov
mov
gs
or
iret
rolb
xchg
decb
push
pop
and
jmp
cs
mov
bound
inc
push
sbb
dec
movl
test
xchg
inc
inc
pop
in
push
lcall
inc
jns
hlt
das
std
leave
jl
repnz
and
setno
dec
mov
mov
in
xchg
jb
cld
ljmp
test
test
sbb
push
stos
mov
shrb
test
adc
push
xor
sub
inc
movsb
js
cmp
lcall
test
leave
jne
mov
dec
cli
jno
cmp
mov
testb
jns
and
stos
rolb
mov
sbb
icebp
mov
mov
xorl
repnz
jo
xor
std
jecxz
cmp
repnz
sbb
lcall
jg
mov
and
xchg
mov
mov
ret
pop
in
mov
mov
filds
lcall
jmp
decl
mov
outsl
push
pop
adc
push
jmp
dec
or
icebp
call
adc
dec
jmp
int
push
test
jl
popf
in
sub
sub
mov
sarb
push
int3
adc
jp
lods
lods
and
cwtd
sahf
push
pop
push
aam
enter
shll
fdivs
pop
sbb
sahf
inc
ret
fstp
push
clc
sub
fs
ljmp
je
gs
xchg
add
int3
pop
sbb
or
jmp
and
imull
or
movsl
and
std
dec
outsl
push
mov
cmp
pushf
fsubrl
sub
mov
dec
int3
xchg
xchg
inc
jmp
mov
push
jmp
add
ret
and
sub
movsl
pop
daa
imul
dec
or
test
xor
fstpt
mov
movsb
push
je
push
or
pushl
das
std
out
mov
xchg
and
inc
adc
or
xchg
sar
fisttpl
and
mov
ret
bound
fs
xchg
outsl
mov
push
mov
and
add
sub
push
mov
jne
xor
inc
xor
lods
sbbb
add
sub
adc
enter
and
and
and
adc
push
pushf
rolb
push
lds
std
repz
nop
sahf
flds
inc
adc
and
icebp
jl
sub
rcrl
andb
out
sarl
testl
push
fwait
add
cmp
fistl
pop
js
sub
mov
sarl
repnz
aam
add
mov
lods
jno
sub
int
shll
jne,pn
ss
outsl
adc
sub
pusha
data16
cmpsl
fnstsw
jbe
jae
pop
cmp
hlt
push
ret
adc
mov
js
iret
fcmovnb
jbe
cmp
in
xor
or
daa
jmp
cmpsl
dec
test
dec
decl
xchg
jle
test
inc
lcall
cli
test
add
aam
pop
inc
inc
mov
ljmp
or
daa
rol
jg
clc
inc
sub
or
out
sub
incl
jmp
lea
dec
out
movsb
pusha
dec
inc
int3
mov
lcall
ljmp
xor
or
sbb
mov
lret
mov
sbb
in
fistpl
xor
das
and
mov
test
fstl
lods
mov
and
fidivl
fsubrs
icebp
int3
xchg
outsb
mov
cld
mov
pop
cmp
jmp
loopne
xor
sub
movsl
dec
cld
in
jl
das
dec
lods
adc
adc
mov
push
mov
push
jmp
xchg
push
nop
stos
inc
lods
lcall
and
mov
or
mov
stc
mov
xchg
push
lcall
add
push
push
hlt
jb
repnz
cmp
in
es
adc
and
add
sti
xchg
in
imul
inc
mov
aad
js
adc
das
cld
mov
mov
outsl
shll
loope
sub
ret
or
mov
addr16
popa
push
xchg
jo
add
push
xor
pop
and
add
clc
in
rcrl
inc
push
sbb
mov
sahf
adc
js
out
enter
adc
mov
in
inc
or
in
nop
mov
sbb
or
out
test
lods
and
push
clc
or
cli
and
sbb
pop
and
leave
shlb
rolb
jne
fcmovb
lea
dec
xchg
sub
notb
jmp
pushl
stos
sub
fnsave
lea
add
push
ljmp
or
add
sbb
push
mov
es
jle
lods
adc
rcrb
fucomip
fisubl
sarb
movsl
sbb
or
test
cli
mov
push
adc
push
and
js
testb
insl
dec
in
and
cmc
jg
rolb
insb
mov
bound
xchg
sbb
aaa
stos
or
xchg
xor
lea
incl
loop
or
rcr
push
adc
jl
cs
mov
imul
add
mov
inc
sub
mov
and
and
filds
fisttpl
pop
fcomip
cmp
dec
sub
pop
mov
lea
push
das
sub
test
cld
movsl
xor
movsl
or
test
out
xchg
test
mov
mov
frstor
sbb
add
mov
das
aad
test
ds
testb
adc
pop
call
sub
add
or
and
arpl
or
ja
add
xchg
cmp
movsl
adc
ljmp
fsts
pop
xchg
mov
pop
stos
add
or
mov
or
jns
xchg
cld
in
jg
out
outsl
xor
dec
out
cwtl
popa
sti
pushf
jbe
pushf
mov
push
arpl
popf
push
pop
adc
fwait
repz
hlt
xchg
bound
sbb
xchg
mov
repnz
and
adc
cwtl
xor
jge
in
adc
sbb
add
mov
add
inc
inc
mov
fucomip
inc
imul
out
inc
lea
adc
ficomps
es
ja
mov
pop
and
sahf
je
sub
jo
movsb
jg
pop
addb
andl
mov
jmp
rcrl
jbe
push
lahf
mov
add
jge
lahf
add
push
testb
pop
lock
and
std
dec
cld
xchg
dec
push
or
cmp
pop
mov
inc
pop
test
adc
lods
push
xchg
sbb
and
cmp
insl
pushl
rorl
lcall
dec
outsl
mov
shll
ffreep
push
xor
shll
cld
sbb
lcall
jne
cmp
xchg
in
faddl
xchg
incb
movsl
les
adc
push
aas
inc
ret
cmpsl
cld
push
xor
inc
jecxz
jne
push
std
scas
mov
movsb
fidivrl
loop
dec
pop
test
andb
lock
mov
jnp
cmc
fwait
mov
mov
cmp
insl
dec
jmp
push
push
jg
sub
pusha
dec
and
mov
adc
insl
mov
pop
rorb
lahf
pop
push
jmp
data16
cmp
ror
xchg
or
and
in
or
outsl
jge
ret
sub
pop
add
andb
and
jne
hlt
mov
push
pop
pusha
xlat
js
adc
dec
pop
mov
cbtw
push
mov
dec
xchg
jno
fnstcw
in
and
es
cwtl
into
sti
nop
mov
dec
pop
imul
call
jp
clc
outsl
dec
loop
cld
rcll
add
add
add
sar
nop
mov
in
dec
mov
fs
lods
icebp
push
testl
sahf
mov
mov
arpl
out
test
jne
fnstsw
and
sub
dec
aad
jbe
lcall
mov
lea
or
push
mov
loope
or
test
or
dec
push
inc
shll
fstl
aam
xchg
or
stos
xor
mov
aad
rorb
lahf
sbb
imul
mov
and
and
push
add
out
sub
pop
mov
mov
mov
lea
insb
xchg
mov
pushl
sbbl
dec
aam
cmp
adc
aaa
cld
pop
loop
inc
cmc
es
fs
xchg
push
dec
jne
mov
mov
xchg
pavgb
dec
fstps
pop
negl
clc
jmp
imul
adc
xlat
cltd
mov
fistps
data16
and
xchg
je
adc
mov
subb
add
imulb
pop
jne
pop
insl
insl
mov
xchg
popa
outsl
lahf
test
nop
ljmp
jne
mov
sbbb
pop
test
fcompl
jle
pop
stos
pop
test
mov
sarl
sti
xchg
ret
or
test
imul
pop
imul
cltd
and
enter
add
and
lret
aam
xchg
mov
xor
add
xchg
jae
cld
stos
fmul
mov
loopne
adc
cld
xor
in
fldcw
movsb
sti
lock
fdivr
clc
dec
outsl
in
out
andb
mov
cmp
lods
iret
pop
pusha
mov
loopne
mov
or
sub
inc
dec
aas
test
fcomip
or
push
dec
loopne
call
lock
iret
fcmovnb
aad
adc
jo
xchg
push
subb
mov
cwtl
clc
jne
ret
jmp
or
movsl
scas
aad
dec
cmp
push
sub
enter
incl
fstpl
cmp
sub
pop
push
cmp
adc
popf
push
pop
xchg
int
xor
push
xor
lock
push
out
pop
ret
jo
outsb
push
xchg
mov
cs
outsl
stc
mov
push
adc
or
out
jecxz
lods
daa
pop
sbbb
pop
jle
jl
out
jg
mov
andb
in
loope
jl
icebp
dec
pop
call
decl
repnz
stc
inc
and
add
xchg
push
incl
xor
sub
pop
inc
fstl
jmp
adc
xchg
inc
lock
fistpll
xor
push
sub
and
cmp
jle
loop
mov
jmp
js
or
ret
mov
dec
pop
ss
or
stos
stc
inc
mov
pop
push
push
add
insl
add
cmp
out
add
lcall
mulb
add
or
xchg
mov
repnz
or
js
pop
mov
jl
fstpl
jle
cmpsl
inc
lods
in
lods
insl
and
mov
andl
jbe
cmp
pop
inc
sub
int
aas
ljmp
movsl
xchg
enter
iret
push
and
mov
jnp
ljmp
push
sbb
mov
pop
and
cld
jmp
pop
mov
dec
sub
pop
mov
adc
bound
shlb
outsl
mov
loop
inc
aas
lds
add
mov
cmc
mov
cmp
jbe
xchg
xchg
mov
sahf
std
xor
hlt
inc
pop
loop
pop
pushf
xchg
mov
out
out
jp
decl
add
push
sbb
push
or
rcr
jmp
js
sub
testb
pop
test
cld
inc
and
cwtl
xchg
adc
pop
xor
mov
cmpsl
hlt
sbb
xor
cmc
in
jbe
aas
sti
test
orl
jge
insb
cmp
jo
mov
jmp
mov
idivb
xchg
fiadds
aad
mov
sbb
mov
fucom
iret
gs
std
fs
cmpsb
push
das
cmc
lcall
adc
add
int3
xor
lods
fildl
push
in
icebp
test
rcrb
jg
ret
push
jle
cltd
sbb
xchg
jmp
sbb
sahf
in
decl
sub
inc
jle
cli
jle
je
outsb
call
xchg
fisubl
xor
iret
mov
add
leave
ret
test
push
jne,pt
jl
and
xlat
or
xchg
jb
push
ret
inc
or
aas
mov
cmc
cmc
in
add
and
mov
mov
call
call
mov
mov
and
mov
jbe
push
lds
lahf
dec
test
push
call
sbb
cmpsl
or
aam
in
lock
cmp
dec
fxtract
cli
pushl
inc
push
lock
imul
je
push
femms
and
inc
cmp
jmp
shll
fcomps
lods
rolb
das
jnp
jecxz
jg
xor
or
lods
or
iret
pop
hlt
movsb
je
das
jge
or
dec
jns
push
add
push
outsl
jmp
or
push
push
mov
int3
push
inc
aam
pop
add
sbb
inc
stos
mov
decl
popa
in
and
xchg
outsb
je
mov
add
ret
movsl
push
or
pop
jmp
dec
ret
mov
nop
repz
sub
and
rorb
fstpt
icebp
jle
xor
shl
cmp
in
jns
and
fisubrl
imulb
and
push
scas
call
jg
inc
jmp
test
les
nop
cmc
add
xchg
cli
pop
roll
repz
jecxz
xor
xor
xor
cld
shl
fisubs
std
sbb
push
xchg
pop
push
sub
fldenv
jge
and
mov
in
or
mov
inc
test
mov
lods
jle
jl
dec
push
mov
sahf
add
push
or
out
inc
mov
jg
xor
dec
sub
dec
das
adc
fwait
or
fs
ss
jne
inc
mov
xchg
or
sar
pop
cmp
dec
pop
sar
inc
mov
cmp
adc
add
mov
inc
or
add
fwait
jle
hlt
mov
int
jae
cli
paddd
cltd
sbb
sub
inc
aaa
mov
xchg
mov
clc
push
jo
shrl
nop
sti
jmp
lcall
jb
adc
mov
jl
adc
scas
inc
or
xor
mov
dec
pop
sbb
decl
mov
repz
or
cmp
mov
add
scas
sar
ljmp
and
cmp
mov
jl
adc
call
test
ljmp
pop
lods
call
cmp
flds
xchg
clc
or
jne
xchg
movsb
cmp
dec
mov
jle
jbe
cmp
lds
mov
pop
clc
pushl
andl
jmp
add
scas
lds
incb
sti
or
push
roll
jo
mov
jg
clc
and
dec
movsb
or
dec
das
add
sub
pushl
push
shl
out
jmp
and
inc
and
pop
jmp
call
xchg
jge
lcall
inc
je
imul
push
push
cs
outsl
mov
outsl
scas
bound
cmpsl
inc
scas
je
stc
fnstsw
decl
cmc
inc
ret
xchg
les
jp
sahf
hlt
rclb
loopne
clc
lea
mov
add
outsl
cmp
jl
aad
fwait
mov
add
fsubrs
cld
mov
insb
or
arpl
movl
sbb
jg
sub
push
aaa
lahf
imul
rcl
shlb
je
adc
adcl
pushf
js
cmp
xor
adc
dec
call
push
lock
ret
decl
jle
mov
out
xchg
sbbl
nop
jne
imul
in
shl
jnp
lcall
dec
sub
jmp
imul
clc
mov
clc
call
repz
xchg
push
cmp
enter
movsl
jg
xor
loopne
arpl
mov
adc
clc
push
jg
incl
fmuls
inc
loopne
clc
pop
mov
inc
mov
retw
incl
jmp
pushf
repnz
pusha
adc
iret
mov
arpl
cmp
ljmp
mov
push
iret
jmp
stos
inc
and
inc
jae
pushf
mov
jl
hlt
dec
add
xchg
incl
cs
add
dec
sub
stc
xchg
and
scas
mov
stc
loop
mov
jg
and
cmp
lock
cmp
fisttps
xor
out
jecxz
dec
loop
dec
pop
iret
add
pop
pop
loop
sbb
sbb
dec
xchg
add
orl
pop
or
negb
idivl
jne
pushl
sub
fimuls
cmp
xchg
test
ljmp
fucomp
jbe
js
jle
xchg
iret
inc
iret
inc
jge
iret
and
cmp
sub
hlt
mov
xchg
dec
dec
inc
rcrl
mulb
das
fmul
pop
icebp
jb
xor
sbb
fcomi
sbb
fcmovbe
push
jmp
or
pop
lods
lock
mov
loope
movsb
lea
dec
popl
push
cmp
lock
jge
xlat
add
pop
rorb
inc
sub
jbe
xor
sarb
hlt
mov
sub
int3
popa
adc
cli
adcb
pop
fiadds
xchg
jle
mov
inc
add
jo
or
mov
xchg
imul
lcall
ud0
dec
dec
lcall
push
lock
and
inc
pop
add
sbb
ret
loop
loopne
clc
push
shll
add
int
in
movb
outsb
cld
mov
cmp
sub
pop
mov
loope
or
jecxz
imulb
sar
fists
hlt
icebp
mov
push
dec
pushf
lret
je
jg
jecxz
hlt
js
movsb
sub
bound
iret
and
pop
sub
jne
push
dec
jl
add
test
std
inc
popa
jmp
sub
sarb
mov
mov
mov
inc
dec
mov
add
mov
sti
mov
mov
add
outsl
xchg
lods
fsubr
push
cltd
test
xor
fsubs
sbb
test
aas
add
in
rorl
leave
aaa
mov
sbb
cmp
pop
or
inc
xchg
cmp
test
sub
sub
push
outsb
adc
pop
cs
push
std
adc
dec
push
push
fdivs
aaa
stos
loop
arpl
add
stos
sbb
outsl
adc
roll
jle
xor
push
push
push
cmp
shrb
arpl
add
or
and
inc
jno
cs
add
jne
js
sub
inc
jmp
pop
adc
xorb
jg
add
inc
in
lmsw
jo
les
insb
sub
sbb
movsb
push
scas
bound
rorl
push
les
push
pop
fcompl
pushl
mov
mov
xchg
jo
je
popf
jns
add
push
pop
lret
adc
xor
push
jl
fimull
mov
fisubrl
jl
mov
sbb
mov
sbb
and
dec
psubusw
mov
mov
lea
aam
cwtl
daa
cmpsb
ljmp
cld
add
xchg
cld
fistpl
divl
jle
mov
mov
or
inc
mov
sarb
push
sbb
add
adc
inc
inc
cld
mov
test
add
sub
fs
push
adc
nop
push
add
mov
int
sub
add
decl
ficoml
add
xlat
into
add
test
in
repnz
add
testl
out
sbb
pop
jge
int
fnsave
cld
negl
out
add
int
scas
mov
sub
pop
jge
out
pop
xlat
fcmovnbe
mov
mov
aaa
xlat
aas
ljmp
repnz
adc
testb
jmp
mul
pop
add
out
in
jne
xlat
shufps
out
dec
imul
into
mov
fcomip
inc
idivb
jmp
add
out
dec
sbb
in
mov
jnp
push
test
push
or
test
int3
out
faddp
mov
xchg
ljmp
jae
lret
idivb
out
cld
fsubp
jae
mov
scas
notb
mov
xlat
pop
xlat
jne
mov
inc
ljmp
xlat
notl
imull
rcll
inc
fwait
jl
xlat
das
sti
outsb
int
jae
ja
add
pop
aas
push
fwait
jae
xchg
test
fcmovnbe
dec
mov
mov
daa
cmp
push
pop
filds
std
cmpsl
cmpl
inc
not
mov
scas
test
xor
das
sets
out
sub
aaa
jg
out
iret
testl
push
push
outsb
jae
roll
push
pop
or
cmp
pop
mov
rcl
dec
inc
cld
pop
lret
out
out
pusha
push
stos
das
addr16
cmp
divl
fcmovne
sbb
pushf
jnp
add
mov
outsb
xor
sbb
dec
push
or
jae
testb
jae
data16
and
mov
lret
mov
mov
xor
jge
xlat
daa
adc
mov
sub
xor
sbb
out
decb
pop
and
push
mov
shlb
outsl
filds
ret
jmp
outsl
iret
pop
xlat
jo
das
mov
into
bndstx
int
push
push
stos
fwait
imul
jo
movl
cmpsl
fcomp
mov
xlat
fidivs
xchg
cs
imul
out
out
outsl
out
adc
mov
out
cmp
cmp
pop
arpl
into
rorl
pop
ja
stos
ffree
or
xlat
pop
addr16
je
fs
outsl
jecxz
rcll
xor
fwait
xlat
adc
fistpll
push
sbb
cmp
pop
ficomps
out
fisubs
pop
into
aaa
cmp
ret
lcall
fsubrl
cli
add
or
pop
or
lcall
sbb
int
push
jp
jb
cmp
dec
sahf
push
int3
int
shll
push
outsb
inc
adcl
fnstenv
idiv
mov
stc
outsl
arpl
inc
bswap
mov
enter
out
adc
adc
xor
lcall
jmp
cmpsl
repz
es
cli
movsl
das
stc
imul
lcall
xchg
dec
pop
mov
ds
pop
sbb
push
out
sti
int
hlt
push
xchg
popa
aaa
call
mov
out
mov
add
rorb
scas
sub
add
xchg
scas
inc
jg
pop
xchg
xchg
xlat
outsl
jmp
lods
cld
sub
or
mov
mov
lret
fwait
insl
mov
out
mov
shl
add
dec
mov
xchg
sahf
enter
adc
mov
jb
mov
movsl
sahf
push
lret
in
aaa
or
call
popl
fstps
int
mov
mov
cltd
loop
imul
sub
inc
fnstenv
pop
je
das
movsl
mov
inc
aad
ret
stc
dec
sti
lds
push
jle
jp
inc
sbb
dec
mov
mov
sub
or
mov
dec
dec
cmp
or
jl
daa
jns
icebp
icebp
push
aam
js
lods
out
xchg
mov
lahf
cmp
sbb
stos
xlat
jecxz
stos
add
mov
jl
add
adc
jg
push
pusha
inc
add
insl
imul
bound
sti
insl
stc
bound
arpl
fs
gs
pop
insb
gs
push
fstpt
mov
dec
gs
or
popa
jo
sbb
std
mov
adc
je
inc
dec
inc
push
or
insl
insl
sbb
sar
cld
cmp
jae
jne
arpl
outsb
push
popa
imul
bound
push
imul
jne
arpl
insl
pop
push
mov
pop
push
jne
jne
sub
push
outsl
outsl
jg
xchg
jae
outsl
outsb
imul
dec
outsb
data16
mov
and
bound
test
mov
and
pop
push
jb
pusha
mov
in
push
dec
les
adc
data16
mov
lods
pop
jns
pop
inc
outsb
jbe
sbb
mov
jne
push
push
je
out
scas
ss
push
gs
sbb
insb
cmp
jb
inc
outsl
mov
pop
xlat
fwait
jnp
adc
hlt
dec
mov
imul
jb
jne
xchg
mov
and
test
xlat
jne
push
lock
loope
push
xlat
out
xor
nop
sbb
sbb
inc
push
inc
fistl
mov
inc
inc
insb
jle
cmp
outsl
and
jo
sub
popa
jb
jne
es
lock
dec
insb
push
outsl
fbstp
jns
push
je
pop
push
outsl
dec
gs
in
fildll
push
inc
outsl
insb
fs
xor
xchg
jo
addr16
ja
mov
js
dec
sub
jae
inc
inc
push
dec
pusha
inc
jns
xor
or
add
divb
dec
cltd
sbb
sti
test
imul
and
jnp
xor
or
or
mov
pop
xchg
sysret
fistl
lds
je
fs
add
jno
insb
adc
inc
fwait
pusha
push
cmpsl
cmp
inc
lock
push
mov
ja
fnsave
popaw
jp
add
fcmovnu
mov
addr16
cmovne
data16
xor
inc
les
ret
in
icebp
bound
and
pop
fwait
lock
sub
mov
loop
mov
and
and
outsl
addr16
push
stos
jns
in
dec
lds
outsl
fs
inc
pop
subb
xchg
sub
out
cmpl
inc
shlb
insl
call
dec
lret
arpl
leave
xor
push
outsb
xchg
mov
test
andb
je
ljmp
outsl
ja
imull
fisttpll
scas
mov
push
sub
and
xchg
adc
or
or
pop
movsl
ret
add
cs
imul
arpl
mov
fisubrs
daa
adc
adc
in
imul
leave
insl
mov
arpl
mov
lock
insb
imul
jecxz
ljmp
mov
jg
adc
xchg
dec
test
fs
inc
popa
push
jne
leave
arpl
mov
mov
cmpsl
dec
or
pop
rcrl
adc
xor
xor
test
negl
je
add
fucomip
rcll
insl
sbb
and
mov
lea
jmp
push
add
adc
inc
insb
lods
mov
arpl
out
fnstsw
pop
ds
fisttpl
or
decb
dec
sbb
outsb
xor
rorl
jo
adc
fiaddl
jns
jbe
lods
or
push
inc
test
out
sbb
test
int3
sbb
jns
in
sub
pop
fs
dec
cmpsl
aaa
jmp
pop
fwait
lock
int
and
fcmovu
cwtl
je
jno
inc
xchg
push
jae
fninit
dec
pop
cmp
loop
jle
fmuls
cmpsl
rcll
add
fwait
inc
or
sub
add
inc
push
pop
mov
call
jne
lods
in
outsb
pop
jo
outsl
xor
ret
in
clc
inc
insb
addr16
add
das
int3
adc
insl
mov
push
loop
shrb
fdivs
ja
push
jle
inc
ret
xchg
shll
bound
mov
sbb
movl
pop
insb
and
xchg
dec
rorb
inc
dec
push
inc
dec
add
add
pop
inc
inc
loopne
sidtl
add
add
int
int
and
add
push
adc
mov
testl
ja
add
push
adc
arpl
add
xchg
mov
pop
push
add
add
inc
mov
push
cmp
xor
sub
je
pop
stos
pop
nop
pop
cs
or
add
and
mov
sti
and
scas
sub
daa
in
or
ret
sub
inc
icebp
pop
add
lock
inc
add
dec
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
