jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
sub
cmp
out
cmpsl
inc
mov
and
add
pop
add
or
jg
nop
add
push
add
lahf
add
add
add
push
pop
add
add
add
add
roll
add
add
add
add
add
roll
add
add
add
add
add
add
add
add
add
cmpsl
add
popa
add
add
add
add
add
add
sub
add
add
int
inc
add
add
mov
add
add
or
roll
add
add
add
add
add
add
dec
add
roll
add
cmp
add
add
add
add
add
add
add
add
int
inc
add
add
adc
add
cmpsl
add
add
or
roll
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
xchg
add
add
jbe
push
add
add
add
add
pop
add
add
add
roll
add
add
mov
add
add
add
add
add
roll
add
add
add
add
lret
add
sub
cmpsl
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
outsl
add
cmpsl
add
add
out
roll
add
inc
add
add
inc
add
add
add
add
add
add
add
roll
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
out
movl
movsl
add
add
add
add
add
xor
push
add
addl
dec
add
add
add
add
lea
inc
add
roll
add
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
scas
add
cmpsl
add
out
addl
roll
add
add
scas
add
add
add
popa
add
add
add
add
add
add
xchg
fiaddl
jae
insl
add
mov
jno
dec
add
add
es
add
add
add
add
add
popl
or
add
add
add
add
push
add
add
add
add
or
int
add
out
cmpsl
add
add
add
int
cmp
jl
sub
cmpsl
add
jae
sub
add
add
roll
add
iret
add
add
inc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
lds
pop
add
mov
add
add
add
add
add
add
add
roll
pop
popa
add
add
add
add
push
add
add
add
add
add
push
add
add
roll
add
dec
add
add
add
add
add
add
add
add
add
add
add
cmp
inc
add
add
add
add
pop
sbb
add
add
addl
roll
add
shrb
mov
inc
stc
jp
inc
pop
outsb
mov
cmpsl
into
sbb
dec
xor
aaa
jb
mov
or
out
loopne
test
xchg
sbb
pop
ljmp
push
jle
pusha
xchg
cmpl
and
js
pop
arpl
out
int
push
push
imul
xor
stos
adc
pusha
mov
xor
ljmp
and
fwait
dec
adcl
repnz
sub
rorl
jg
dec
test
aad
mov
mov
fsubr
xchg
push
push
and
xchg
xor
cvtps2pi
xchg
or
sub
mov
sti
pushf
movsl
mov
out
ja
mov
cmp
sub
fistl
adc
js
jmp
xor
xchg
repnz
xlat
iret
jne
fldt
xlat
jb
mov
fs
xor
xor
pop
inc
leave
inc
pop
inc
pop
and
mov
out
sub
push
das
xchg
jle
mov
sbb
add
scas
or
xorb
addl
add
int3
fisttpll
out
pop
push
loop
mov
xchg
imul
gs
pushf
pop
fs
outsb
sarl
cmp
inc
cmp
xchg
and
inc
scas
fdivrl
jecxz
pop
dec
jns
jae
fs
dec
dec
stos
ret
fidivl
dec
aaa
xlat
std
mov
cmpsb
fcompl
mov
mov
mov
ret
jnp
pop
fisubrs
mov
sbb
iret
fisttpl
fimull
sbb
mov
sub
push
test
mov
sarl
xchg
decb
lret
push
mov
adc
mov
std
adc
and
sahf
mov
cs
jp
and
subb
mov
enter
jae
adc
mov
int3
fldenv
rorb
ljmp
mov
clc
jnp
xor
insb
inc
adc
adc
daa
sbb
testb
cmpsl
clc
sbb
sbb
insl
daa
jnp
cwtl
mov
arpl
mov
fmull
sbb
lcall
sbb
mov
out
jns
div
pop
fdivrl
mov
jne
loop
pop
inc
pop
lds
in
addr16
sub
xlat
sbb
adc
xor
sti
mov
pop
test
jno
mov
sahf
ljmp
cwtl
lret
mov
cs
push
cmc
fnstenv
stc
aad
pop
daa
jecxz
inc
cs
mov
push
xchg
and
push
sub
xchg
xchg
fs
adc
lea
fwait
xchg
adc
or
shl
stos
daa
test
pop
mov
lret
shl
xchg
lods
and
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
data16
cmpl
push
adc
sti
pop
mov
or
push
cmc
lret
dec
fistpl
stos
cmp
imul
ljmp
mov
sbb
sbb
pop
icebp
mov
mov
jnp
xor
shlb
sub
sbb
jae
outsl
lret
and
test
push
sbb
dec
out
insb
std
loopne
cmp
pop
xor
test
adc
xor
ljmp
adcl
pusha
xor
inc
les
in
or
dec
mov
sub
or
or
aas
stc
arpl
je
gs
iret
jbe
cmp
pop
outsb
hlt
inc
inc
jbe
dec
leave
push
test
dec
mov
call
xchg
push
stc
fidivs
movb
fucomi
xchg
sub
cmpps
imul
lds
mov
fwait
sbb
into
hlt
jb
adc
pusha
sbbl
mov
push
mov
fwait
in
inc
sti
lcall
cmp
imul
cli
dec
lret
pop
sub
and
test
mov
lret
push
mov
enter
incl
cmpsb
cmp
fisttpl
cli
jg
setne
and
mov
dec
stc
shl
add
sbb
pop
cli
pop
out
outsl
negl
cwtl
sbb
cs
stos
or
fnstcw
dec
lret
stos
sub
sbb
push
jp
dec
fistpl
stos
cmp
imul
cli
dec
lret
stos
sub
sbb
push
jp
dec
fistpl
stos
ljmp
daa
popa
sbb
orl
shll
sub
sar
dec
shlb
cmp
xchg
jae
inc
rcrl
add
inc
mov
mov
xchg
xchg
fdivrp
pop
push
sbb
lds
mov
nop
es
mov
scas
dec
loope
adc
xor
push
leave
mov
fwait
aam
xor
cmpsl
pop
notb
fs
insb
jns,pt
int
pop
in
pop
xor
dec
test
mov
push
andl
cmp
jns
fldl
cs
pop
icebp
fs
jo
cmp
dec
mov
pushf
mov
je
ret
jno
jnp
mov
mov
mov
das
js
adc
daa
xchg
mov
lret
pushf
std
push
in
cmc
dec
mov
or
std
mov
lea
mov
add
or
jae
push
push
add
scas
pop
and
pop
ss
loop
mov
jno
jnp
inc
insl
popa
aaa
mov
xchg
add
pop
xor
fsub
add
hlt
cmp
out
das
mov
mov
pop
imul
clc
mov
rolb
popf
adc
jae
sub
subl
sbbl
pop
inc
lods
push
push
imul
xor
aas
add
fidivrl
and
andb
lret
cmp
out
psrad
jecxz
cwtl
adc
push
xchg
lcall
inc
out
icebp
shrl
fdivrp
pop
repnz
out
mov
rolb
enter
sbb
or
and
cmp
imul
cmp
test
adc
cmp
mov
jecxz
push
sahf
mov
sahf
ds
fstps
sarl
pop
xchg
sbb
mov
push
out
lcall
lahf
cmp
xchg
push
cmp
add
push
fmuls
mov
fcomps
cmp
mov
sub
cmp
popf
in
xor
shlb
dec
popf
pop
imul
test
push
mulb
jp
in
cmpsb
fistps
and
sub
pop
les
mov
sbbl
notl
mov
lock
inc
or
mov
inc
adc
mov
out
xor
push
push
das
push
add
adc
or
mov
repnz
je
lods
adc
stc
inc
mov
pop
xchg
stos
pop
adc
pop
pushf
movb
cmc
bound
mov
jb
in
loopne
int3
sub
lock
xchg
and
dec
cmpb
mov
and
xor
xchg
lock
aad
outsl
push
movsl
or
insl
sub
jae
cmpsb
js
xchg
pop
xchg
out
negb
addr16
jo
cltd
sbb
lods
mov
roll
out
in
sbb
mov
scas
nop
inc
jecxz
pop
push
lea
mov
out
std
push
xchg
xchg
rcll
loope
or
ret
add
je
outsb
cmp
mov
mov
fs
scas
sub
push
imul
sbb
and
dec
lods
cmpsb
jno
fdiv
push
sar
bswap
jp
into
hlt
or
gs
xor
pop
lods
fsubrp
cmp
insb
inc
out
push
or
js
cmp
lods
jne
rorb
dec
cltd
push
mov
xor
lods
mov
push
movsb
and
add
int
xor
gs
mov
in
fistl
insb
leave
in
xor
add
add
rol
sbb
mov
loop
jbe
mov
in
je
sub
je
ja
pop
jle
aas
iret
push
cmpsl
mov
adc
test
sub
mov
cmp
loop
push
pop
push
in
cld
imul
aad
mov
aas
sub
aam
jecxz
fists
test
mov
movsl
cmp
add
or
push
pusha
outsl
pop
dec
out
aaa
push
pop
cltd
aam
dec
loop
add
mov
movsb
sahf
hlt
into
lods
call
in
jb
lock
push
mov
pop
mov
loopne
mov
xchg
xlat
icebp
jne
lock
dec
xchg
lea
xor
out
mov
insl
daa
xchg
in
sarl
push
pusha
iret
push
in
inc
xchg
insb
daa
inc
aas
xchg
and
adc
adc
les
test
mov
sub
cmp
sbb
jmp
ja
shrl
shlb
nop
mov
jb
rcll
xchg
inc
data16
fsincos
popa
pop
dec
push
mov
xchg
invd
sbb
dec
dec
mov
or
push
mov
sbb
fldenv
sbb
mov
test
and
popl
lea
xchg
jb
out
stos
and
or
test
or
jecxz
aam
sbb
shlb
mov
imul
pop
push
ljmp
sub
shlb
add
sbbl
into
mov
jns
pop
xchg
inc
and
fwait
pushf
je
andb
sub
mov
mov
and
jge
push
pushl
jnp
mov
ja
hlt
jne
movsb
sub
notb
cmp
pop
rcl
sub
stos
adc
jb
jle
subb
lret
lcall
decl
xchg
out
inc
decl
scas
mov
leave
pushf
repz
scas
cmp
and
popf
pop
dec
out
jle
mov
dec
jae
sub
rcrl
inc
rclb
adc
add
aam
leave
jo
ljmp
lret
outsl
jl
xchg
dec
fadds
mov
pop
popa
pop
sub
test
mov
pop
in
aam
add
push
aas
cmp
insl
es
rolb
jne
rcll
int
mov
push
mov
int
xchg
cmc
xchg
pop
inc
add
inc
out
jmp
cmpsl
ds
pop
int
lahf
repz
fadds
imul
hlt
cmc
mov
add
fadds
in
dec
push
sub
mov
sbb
mov
movsl
pop
shll
mov
ficompl
enter
xchg
test
inc
sbb
int3
ljmp
mov
mov
cltd
leave
and
ds
dec
in
and
pop
incl
cmp
daa
das
adcl
add
in
pop
jp
cli
mov
push
test
mov
testb
shlb
pop
sbb
jmp
and
das
into
shl
shrb
pop
xchg
mov
jp
lahf
in
push
in
je
xor
or
jl
mov
scas
frndint
ret
push
sar
test
xor
dec
pop
jae
sbb
fsubl
call
cmpsb
stos
pop
mov
sub
ljmp
imul
push
and
jle
jne
lcall
mov
aad
mov
fnsave
or
mov
and
sub
pushf
lock
push
es
call
std
jb
jmp
sarl
pushf
pop
and
pop
xchg
pop
push
std
cld
xorb
or
fprem
inc
aas
lds
lods
and
add
mov
push
divb
push
and
add
adc
sub
mov
or
fidivrl
gs
lahf
add
out
dec
insb
mov
ljmp
cmp
mov
loope
push
sbb
mov
shll
inc
jecxz
out
shr
dec
xor
cmpsl
out
rcrl
daa
mov
loop
incl
push
scas
or
inc
sub
jne
cmp
clc
jp
repnz
cmpsb
iret
ljmp
lds
xchg
add
xlat
mov
lds
int
mov
aas
push
add
adc
imul
adc
mov
lods
inc
ja
daa
out
repnz
pop
sbb
xor
cld
lds
or
bound
fwait
cmp
shl
ljmp
sbb
mov
sub
loope
mov
xchg
adc
shl
push
rcl
and
fbld
lcall
lods
xchg
sahf
shll
push
inc
and
sbbb
popf
inc
jbe
mov
stos
and
ret
mov
push
aad
sub
sbb
daa
enter
mov
fistpl
xchg
mov
xor
nop
or
xor
sbb
fsubrp
add
enter
andb
cmp
sub
pop
aam
movsl
jne
or
pop
pop
mov
repz
popf
shll
xor
jnp
push
jmp
mov
test
jle
out
sbb
cmp
es
in
out
mov
ljmp
mov
or
dec
cmc
dec
pop
push
jl
dec
in
fidivrs
in
imul
mov
cmpsb
out
jp
pusha
pushl
adc
shrl
sub
or
into
or
push
adc
push
jnp
mov
in
test
mov
pop
and
push
std
xchg
push
ret
inc
mov
cmp
test
imul
cmp
sub
or
outsl
cwtl
pop
fdiv
movsb
addr16
fnstenv
stos
pop
and
out
ja
fwait
mov
sub
push
fstl
lock
in
arpl
movsb
sbb
pop
in
pop
and
orb
push
lret
popf
xor
sbb
out
icebp
dec
push
enter
adc
fiaddl
sub
icebp
jbe
and
daa
std
jae
dec
fs
daa
or
shrb
cmp
lds
scas
in
aas
dec
cmp
sti
mov
xlat
mov
movsb
push
or
out
ss
cmp
mov
sahf
outsl
xor
popf
sbb
lret
lock
test
test
push
lcall
stc
repnz
rorl
lahf
andb
fcmovnbe
adc
sub
repnz
cld
dec
lock
cmp
jecxz
ds
aas
ret
inc
insl
push
incl
push
stc
repz
push
add
faddl
add
loop
movsb
test
jo,pt
aaa
pop
dec
mov
inc
sbb
dec
sub
shr
ds
popl
or
pop
mov
add
xchg
inc
push
or
mov
lock
jo
mov
cld
and
inc
xor
loope
ret
push
dec
jo
or
mov
push
pop
xchg
and
xchg
test
out
and
cmc
sub
inc
scas
adc
and
jge
rolb
mov
repz
pop
movsb
aam
nop
add
ss
aad
fdivrp
jge
lds
out
pop
add
aaa
jbe
sbb
imul
ja
insl
jae
test
and
int3
mov
in
xor
mov
lods
xlat
cltd
ficompl
mov
sbb
dec
inc
dec
jne
out
in
int
push
sbb
pop
int
call
mul
mov
xor
arpl
test
adcb
push
push
xor
sarb
mov
xor
jb
dec
cli
ss
adc
sub
inc
xchg
imul
dec
ljmp
dec
jmp
data16
push
in
pop
jg
mov
push
add
bound
lods
xchg
sub
xchg
and
jp
mov
xor
xchg
pop
xchg
push
or
dec
sarb
shlb
pop
subb
sbb
mov
sbb
mov
test
stc
je
xchg
or
ja
lods
xchg
lds
sub
pushf
ja
mov
hlt
ret
test
mov
pop
sarl
jne
fs
push
movsb
cmpsl
loopne
ret
jg
xchg
popf
ror
cli
ljmp
xor
fisubs
or
jo
pop
or
inc
add
repz
xlat
push
mov
es
dec
sbb
mov
in
jp
aam
bnd
xchg
jo
fsubr
add
rcll
jle
imul
adc
mov
insl
mov
stos
out
cmpsl
and
dec
insl
mov
fcoml
add
add
bound
push
fldl
or
jno
mov
push
inc
scas
dec
lds
sbbl
or
lcall
add
enter
or
dec
jge
rclb
stos
fldcw
ja
inc
mov
mov
sbb
movsb
add
std
imul
sbb
loop
mov
sti
inc
aad
mov
xor
aas
mov
jle
arpl
xchg
cltd
loop
bound
xchg
adc
adc
cmp
ficomps
xchg
stos
or
cmp
test
dec
and
cld
push
mov
push
xchg
ds
dec
lcall
rol
mov
int
mov
inc
xchg
ret
fimull
in
push
cs
sar
sti
and
mov
push
xchg
gs
js
loop
cmp
add
mov
iret
mov
ljmp
push
xor
mov
mov
jp
pop
aam
repz
add
jnp
pop
cmp
lods
xor
pop
jle
push
xchg
repnz
aas
cli
jae
ja
pop
addl
mov
pop
cld
or
lea
jae
js
shll
dec
jae
pop
and
sub
ja
scas
cmpsb
fdivrs
sar
push
jno
pop
or
sti
imul
pmullw
adc
mov
scas
add
or
mov
push
popa
xor
arpl
fldenv
inc
dec
cli
int
aaa
insl
mov
add
adc
int
negl
popa
adc
lcall
loop
jge
int3
mov
insl
pop
in
jne
sbb
loopne
es
cwtl
cmp
lcall
inc
and
mov
push
mov
push
dec
and
mov
push
andnps
ss
xor
in
dec
test
jne
aas
add
inc
sbb
cmp
das
out
in
or
pop
cmp
inc
add
or
loop
and
rorl
mov
or
mov
cmp
sbb
xchg
cmpsb
sub
jle
je
popf
mov
mov
jae
data16
clc
daa
data16
mov
xchg
add
js
mov
xor
push
or
jb
aam
dec
addr16
push
popa
or
orl
pop
imul
xor
mov
inc
sub
insb
adc
addr16
sbb
bound
xchg
cmp
mov
inc
xchg
mov
push
cmp
divb
pop
std
cli
testl
sub
sub
add
call
pop
push
out
adc
sbbb
dec
push
jg
adc
aas
mov
cmp
in
xchg
in
cmp
lea
lahf
xchg
dec
orb
push
pop
loop
cld
lahf
ret
sub
jp
lea
sbb
lcall
mov
in
shll
push
dec
das
pop
mov
out
mov
jne
ljmp
push
mov
mul
cmp
pop
into
rorl
bound
mov
xchg
jle
push
push
xchg
imul
jns
mov
das
outsb
stos
cli
movsw
mov
cltd
sub
cmpsb
pop
xchg
xlat
pop
repnz
mov
cltd
ss
loope
mov
inc
bound
loope
jbe
cwtl
add
mov
sbb
stos
in
sbb
fldcw
dec
sub
repnz
pop
popf
or
test
inc
testb
out
jb
shrb
stos
in
mov
cmp
dec
pushf
push
push
push
cwtl
lock
ret
fucomi
xchg
mov
popf
jmp
pop
test
sahf
iret
sub
mov
loop
push
pop
and
jmp
pop
aam
mov
int
sbb
inc
xchg
dec
sub
jae
jge
into
rorl
jnp
inc
mov
iret
stc
mulb
jno
sbb
push
mov
js
loopne
mov
xchg
inc
lret
xchg
cmc
pop
inc
sub
sar
jbe
lea
rorb
or
aad
loop
cmp
rcr
xor
jnp
rcrb
inc
out
fucomi
add
and
pusha
fdivrl
pushw
or
outsl
xor
lock
insl
sub
xor
push
lahf
jb
mov
ss
insb
inc
sub
into
daa
repnz
inc
ret
std
imull
jecxz
inc
test
aam
xchg
xchg
mov
in
call
js
out
insl
lret
repnz
mov
and
ficoml
arpl
sbb
lea
fwait
por
out
popa
push
push
out
sub
shl
iret
pusha
in
pop
movsl
shr
cmpl
cmp
xchg
jno
int
sahf
pop
mov
add
iret
inc
fs
jecxz
fists
sub
add
daa
cmpsl
jbe
push
mov
mov
push
push
out
or
jge
dec
sub
xchg
stos
pop
inc
fsubr
add
sahf
stc
aam
pop
ljmp
pop
xchg
mov
push
lcall
int3
sbbl
fisubrl
mov
push
push
sbb
and
int3
cmp
push
jno
es
sub
shl
shll
lods
or
and
pop
or
imul
hlt
xchg
adc
pop
inc
add
es
lret
mov
icebp
imul
push
jne
in
imul
mov
movsl
rcrl
sbb
inc
imull
aas
adc
jmp
sbb
xchg
adc
out
xor
jg
into
jns
add
mov
nop
push
call
xchg
dec
aam
adc
or
fwait
rcr
push
in
std
repz
jae
cmp
push
cltd
clc
push
dec
mull
adc
gs
fnsave
push
icebp
pusha
add
hlt
push
dec
aaa
hlt
sbb
xchg
add
xchg
sub
sub
adc
sti
clc
jb
enter
fmull
jp
and
cmp
mov
pop
push
pop
outsb
cmpsl
pop
mov
push
nop
jnp
cltd
movsb
push
mov
int
add
pop
mov
movsl
adc
pop
jg
mov
push
xchg
lock
adc
lret
les
loop
jmp
xorb
mov
and
in
sbbl
lock
cmpsl
out
lea
rcrb
dec
pop
mov
das
icebp
test
insb
jnp
add
es
inc
push
inc
lahf
mov
pop
jns
scas
and
movsb
pusha
rcr
mov
dec
jl
push
imul
je
mov
xchg
mov
adc
addb
sub
mulb
jb
mov
cmpsl
stos
ja
adc
ja
pusha
adc
jle
fiadds
inc
lea
jns
pop
insb
add
in
in
mov
addr16
sbbb
subb
icebp
aad
lahf
leave
jb
xor
mov
mov
push
imul
fs
inc
das
loop
outsl
pop
es
subb
loop
addl
pop
mov
aad
shlb
fcomps
mov
adc
inc
xchg
push
jbe
mov
mov
je
sub
inc
pop
dec
test
jns
pusha
sub
ljmp
jmp
cmp
push
mov
sbb
in
and
mov
pop
push
pop
jl
shr
mov
incl
lret
std
pop
push
loope
es
aas
lods
sti
nopl
fadd
push
arpl
pop
mov
sbb
mov
insl
imul
xor
mov
stos
sub
xchg
fstpl
sahf
cmp
ret
es
ja
jne
test
add
push
xchg
mov
pop
pop
inc
xor
mov
in
mov
push
shr
divb
out
icebp
jne
add
inc
imul
jg
jbe
lock
mov
ret
out
fdivs
sbb
xor
mov
sub
outsb
xchg
jmp
data16
in
fwait
pop
clc
int
insl
cmp
ss
sbb
jl
jae
xchg
adc
dec
xor
movl
xor
mov
and
jecxz
cwtl
sub
and
js
hlt
iret
jbe
sahf
fcompl
test
push
mov
pop
cltd
retw
sbb
jp
iret
dec
dec
push
xor
xchg
jmp
shlb
jo
lahf
lcall
and
test
add
daa
iret
jmp
sti
mov
pop
add
ficoms
sbb
xchg
jnp
fisttpl
in
xor
fildl
into
sbb
xchg
mov
jno
xchg
insl
lock
inc
inc
int3
hlt
fistps
into
or
cmc
movsl
pop
jl
lods
out
or
loop
push
cmc
decb
in
shlb
stos
push
cmp
fsubs
mov
xchg
movsl
lds
sbb
ret
das
push
push
fdivrp
je
cltd
mov
lret
fs
rcr
inc
je
stos
fstpt
popf
das
vmovshdup
fcompl
mov
test
fldl
psubsw
insl
or
hlt
cmpsl
adc
push
in
lods
inc
leave
push
leave
outsb
or
dec
leave
out
xlat
inc
pusha
xchg
mov
fiaddl
or
jg
cli
mov
imul
cli
dec
lret
stos
sub
sbb
push
jp
dec
fistpl
stos
cmp
imul
cli
dec
lret
stos
sub
sbb
push
jp
dec
fistpl
stos
cmp
push
jg
dec
lret
scas
sub
push
jmp
loop
iret
dec
jmp
xor
xor
dec
lret
stos
sub
or
add
jmp
sti
mov
sbb
pop
mov
pushf
stc
jecxz
shrl
jnp
dec
add
sub
negb
inc
sbb
mov
fistl
mov
fwait
sarl
jnp
dec
add
sub
jae
add
push
repnz
ret
xchg
mov
mov
shll
pop
xor
and
sub
push
sbb
xor
mov
lods
ret
mov
xlat
in
mov
add
rorl
xchg
push
add
mov
insb
andl
xchg
out
lret
push
int3
mov
movsl
sahf
jnp
sub
adc
pop
mov
push
sbbl
fiadds
sub
mov
mov
jmp
add
xchg
push
loop
repz
lcall
cld
movsb
inc
aam
cmp
inc
jbe
inc
push
cmp
mov
push
imul
fs
cld
stos
rcl
jae
hlt
mov
sbb
and
push
xchg
mov
xor
or
outsb
jbe
mov
push
sbb
mov
fistl
mov
adc
and
push
add
xor
jae
inc
sbb
xchg
sahf
mov
ljmp
lea
inc
cmp
push
sub
pop
add
jbe
test
stos
loope
stos
mov
shrl
pop
push
inc
dec
bound
jl
add
jge
jg
mov
xchg
loopne
jmp
mul
jecxz
repz
fwait
shrl
jnp
dec
add
sub
jae
inc
sbb
mov
fistl
mov
fwait
shrl
jnp
dec
add
sub
jae
inc
sbb
mov
test
das
mov
and
add
jmp
rcr
sub
cmp
push
xchg
cmp
dec
cmp
fistl
pop
sub
ds
lds
push
ffree
fmuls
and
ljmp
rcrb
inc
push
dec
inc
in
add
add
mov
dec
out
jl
push
xchg
lock
fwait
inc
lods
inc
sub
jge
pop
test
cld
jno
mov
out
popa
stos
add
sbb
pop
push
test
repnz
pop
test
lret
cmp
add
ret
jb
loopne
lds
pop
inc
pop
push
faddl
jns
outsb
in
xlat
mov
jnp
out
dec
mov
sbb
loop
shlb
mov
pushf
mov
test
cmp
adcl
mov
cmp
int
jmp
sbb
cmp
and
enter
adc
outsl
sbb
in
mov
cmp
sub
out
push
lds
imul
sbb
xor
xchg
push
add
dec
in
push
sar
pop
imul
lods
dec
fmulp
mov
add
adc
shl
stos
fildll
fwait
cmpsb
dec
xchg
adc
jne
sub
push
sub
test
and
mov
cmp
push
repz
out
insb
or
inc
push
scas
cs
inc
out
cmp
movsl
adc
popa
mov
fwait
in
movsl
adc
mov
mov
inc
lcall
mov
mov
ficoml
sub
dec
push
seto
mov
lahf
cmpl
sbb
pop
outsl
sbbb
out
ss
push
push
adc
inc
inc
call
dec
jle
outsb
add
mov
jmp
aad
sub
sbbl
jnp
xorb
and
mov
pusha
rol
popf
gs
callw
mov
mov
and
outsb
imul
inc
pop
stos
push
pop
cmp
or
in
adc
daa
xchg
pop
mov
jp
xchg
rcrl
sbb
divb
or
jg
jge
data16
xor
das
lret
mov
and
in
mov
mov
push
leave
sbb
popf
jecxz
mov
es
add
jp
pop
out
jge
aas
adcl
xchg
cmc
fdivrs
dec
mov
lods
cmp
push
inc
ficoml
sub
mov
jecxz
xor
jns
jo
and
and
insb
lcall
out
movsb
xchg
ret
push
dec
jl
jge
inc
cld
in
in
fld
push
call
add
xchg
mov
scas
add
add
cmp
call
repnz
push
xchg
or
es
push
popa
lods
loop
cwtl
lock
or
cmpb
mov
jne
cmc
sbb
dec
dec
adc
xchg
inc
xchg
cmc
lahf
data16
and
mov
pmulhw
ret
adc
xor
loopne
incl
inc
fbstp
notl
xor
rcll
dec
pop
insb
iret
fsubl
jge
jge
notl
and
lods
stos
mov
mov
jno
test
xor
outsb
fcompl
scas
outsl
imul
ds
dec
adc
mov
cs
jl
mov
test
adc
ret
adc
fcomps
push
ljmp
repnz
inc
mov
sub
xchg
sbb
or
xchg
mov
pop
pusha
aad
cmpsl
fdiv
mov
xchg
mov
xchg
mov
fdivrs
movsb
pusha
ror
test
cmp
hlt
xchg
jp,pn
and
int
cs
bnd
adc
arpl
in
mov
loope
cli
lock
jmp
add
jge
pop
cmp
jnp
in
mov
cmp
dec
sarb
enter
cmp
out
popf
mov
xor
ror
dec
mov
popa
push
sbb
pop
inc
popa
lahf
or
aad
xchg
loopne
mov
and
jno
lods
leave
mov
lods
movsb
inc
adc
pop
inc
mov
cmc
into
popf
cmp
jae
aaa
jecxz
inc
adc
dec
loop
pop
dec
mov
mov
cmp
aad
mov
nop
insb
out
inc
ja
xor
pop
add
sub
push
or
repnz
xorb
inc
orb
ds
gs
hlt
fldcw
dec
mov
mov
xlat
sbb
add
cli
cli
mov
mov
divb
and
and
adc
das
pop
roll
ret
pop
mov
mov
or
aad
fs
mov
repz
mov
xchg
clc
les
xor
fs
adc
js
lret
inc
and
fcmovb
mov
xchg
push
xchg
dec
xchg
cmp
jbe
mov
les
stos
jecxz
mov
inc
movaps
pop
fsubl
xchg
rolb
data16
xor
and
mov
ja
xchg
add
or
fildll
add
mov
into
mov
xchg
push
xor
mov
adc
mov
lea
pop
stos
out
mov
fldpi
nop
add
sub
mov
xor
out
mov
pop
pop
inc
jg
mov
mov
int
mov
xor
add
xchg
ss
mov
jmp
jb
outsl
std
mov
pop
shll
jns
add
mov
ja
mov
inc
lds
jg
test
fstl
jmp
mov
out
adc
sub
or
push
and
repz
mov
in
sbb
xchg
in
dec
mov
inc
int
add
pop
sub
mov
mov
pusha
dec
mov
not
aad
aad
outsb
dec
cwtl
adc
push
push
push
pushf
and
fldt
sbb
out
jmp
mov
and
xchg
arpl
xchg
mov
test
sub
and
cli
stc
ret
mov
inc
xor
mov
jno
sub
int
aad
or
and
scas
ficomps
dec
pop
add
xor
add
dec
cmp
aas
cmp
jle
rclb
aam
or
int
sbb
and
xchg
fisubl
add
push
sbb
sub
mov
cmpsb
test
mov
ret
mov
or
push
push
pop
push
scas
aaa
jb
fwait
movsl
mov
jge
cmc
lods
pusha
jne
int3
into
icebp
cmp
daa
xor
inc
push
xchg
outsl
test
cltd
or
jecxz
insb
add
daa
cmp
dec
into
ret
lret
jg
and
in
push
add
cmp
jb
and
repz
push
popf
addr16
hlt
pop
data16
sub
data16
rolb
pop
ficompl
in
inc
int3
push
mov
rdseed
je
xchg
lret
mov
xchg
les
les
pop
jne
lods
rcrb
rcrb
push
cmp
ljmp
jge
push
dec
outsl
lock
dec
jmp
or
adc
push
shrb
mov
loope
shlb
lock
shl
movsl
pop
cld
push
test
js
rclb
sbb
in
out
stos
addb
int3
cmpsl
xchg
mov
addl
mov
mov
test
dec
lock
sarl
jb
shr
or
out
mov
lret
popf
or
xchg
rorb
repnz
mov
outsb
ja
cmpsl
xchg
shlb
mov
addb
lahf
jns
mov
or
jl
dec
jae
ljmp
push
push
cmp
shll
movsl
push
imul
ret
out
loope
pop
scas
lret
lea
sbb
add
rorl
jg
rcrl
movsb
adc
push
jmp
out
cli
lret
repz
shlb
daa
jp
xor
adc
jle
xchg
mov
mov
push
push
mov
aas
cmp
je
lahf
clc
mov
ja
mov
cmp
divl
cmp
xchg
push
addr16
hlt
divl
fildll
sub
xor
js
dec
add
or
pop
aam
sbb
rolb
fs
stos
das
and
rcrl
dec
add
jb
pop
insb
mov
out
das
movsb
adc
xlat
jo
jno
and
lahf
push
mov
repz
add
pusha
sub
xchg
out
or
imul
mov
insb
mov
or
cmp
or
aam
mov
xchg
push
rcrl
add
andl
jmp
xor
hlt
fwait
push
dec
pop
ret
test
and
fidivrs
sub
xchg
adc
adc
sbb
idiv
and
jnp
mov
sahf
jmp
and
cmpsl
sbb
jle
xor
push
loope
sub
pop
mov
int3
xor
mov
mov
dec
in
push
add
sti
cmp
pop
dec
das
in
xorb
hlt
adcl
jmp
mov
adc
aam
jbe
xorl
cltd
into
adc
push
inc
aaa
js
jmp
or
out
pop
xchg
fisubrl
repz
aad
and
ret
xchg
pop
mov
mov
adc
pop
outsb
daa
fcomps
cltd
push
stos
pop
outsl
pop
dec
pop
cmp
filds
jae
repz
fcompl
xor
repz
std
and
and
hlt
pop
sbb
mov
push
inc
leave
int
fdivs
lret
xchg
cli
mov
lahf
stos
mov
cli
inc
mov
sub
pop
add
or
mov
js
jae
js
dec
mov
stos
cld
jl
scas
lock
or
mov
push
xor
ja
ret
mov
lods
pop
test
or
cmp
nop
xchg
inc
pusha
arpl
into
add
add
addb
xor
cmp
lret
out
and
jo
shll
sbb
fmuls
adc
or
mov
or
pop
sarb
mov
inc
incl
enter
in
lcall
inc
sbb
icebp
push
mov
mov
push
xchg
mov
push
inc
fbld
daa
rcrb
cmp
cwtl
jbe
cmp
inc
cmp
push
mov
daa
enter
mov
xchg
push
aad
or
stc
cmp
mov
mov
adc
mov
das
pop
cmp
mov
fidivl
jae
es
testb
xchg
ja
cld
fsubl
pop
xchg
test
loop
insl
dec
sub
mov
cmp
inc
or
inc
sbb
inc
mov
xor
mov
ds
and
xor
les
jbe
adc
data16
mov
je
ds
xchg
clc
pop
jge
cmp
xchg
add
inc
es
bound
or
add
pcmpeqw
jecxz
mov
lea
inc
cmpl
jne
pop
add
mov
add
jmp
outsb
push
fidivl
push
or
add
cmp
int3
add
es
push
shll
inc
das
out
push
push
fmuls
fwait
mov
sahf
add
xchg
adc
sbb
adc
adc
loop
jp
movb
sbb
rorl
add
adc
aad
jmp
adc
js
fwait
mov
pop
shlb
push
icebp
stos
jmp
xor
mov
xorb
jbe
insb
mov
sbb
in
fsubrl
sbb
pop
in
notb
push
notl
mov
lcall
leave
das
or
mov
insb
and
or
addb
dec
xor
lock
imul
dec
mov
mov
daa
hlt
mov
xor
fs
push
mov
dec
stc
xor
dec
jle
inc
sbb
push
mov
pusha
xor
inc
ja
call
mov
jecxz
push
push
popa
cltd
mov
adc
leave
or
inc
push
rcll
imul
and
dec
shl
je
inc
xorb
jns
sub
hlt
sarb
inc
repz
sbb
mov
test
inc
and
outsb
cmc
int3
pop
cmp
mov
fcmovbe
xchg
mov
pop
xchg
adc
xor
sbb
dec
jne
xchg
daa
jp
cmp
push
test
daa
fadd
lret
ss
mov
ficomps
xchg
and
lds
jno
adc
cmp
jge
pop
lcall
imul
or
sub
mov
outsl
sti
pushf
ret
xchg
inc
js
insb
leave
adc
sarb
out
pop
push
fdivr
cmp
xlat
fstps
loope
xor
cmp
push
mov
jecxz
mov
lea
adc
sahf
fstps
mov
scas
cmp
sbb
dec
push
cwtl
xor
mov
fwait
movsb
daa
mov
testl
ret
mov
sbb
inc
cs
in
imul
sub
sub
test
ret
iret
in
insl
imul
out
mov
mov
mov
mov
shrb
cld
bound
movsl
cltd
add
pop
mov
push
sbb
mov
push
stos
mov
lea
fcmovnb
fistps
lods
lock
pop
fisttpll
jo
je
pop
loope
nop
insl
sub
es
sbb
aas
lret
addr16
scas
add
loop
dec
pop
jge
outsb
lahf
popa
mov
cltd
movsl
mov
hlt
hlt
and
test
js
mov
aaa
subb
loopne
push
cmpsb
xchg
pop
sbb
popf
aad
sub
andb
or
xor
fimuls
sbb
fisubrl
ja
inc
xchg
imul
fwait
ljmp
push
mov
rep
gs
mov
shr
push
pop
shll
call
sbb
or
aam
mov
mov
jnp
icebp
fwait
inc
mov
xchg
mov
jg
cld
ljmp
mov
out
dec
and
sub
lcall
mov
cltd
sub
push
push
cli
cmpsb
shrl
and
negl
ja
xchg
push
loop
pop
imul
out
mov
jbe
mov
mov
pop
mov
sub
lcall
pop
inc
in
outsl
xor
xchg
mov
jecxz
push
rclb
repz
xchg
cli
mov
lods
rorl
push
lds
fdivp
test
jnp
jg
lahf
or
mov
dec
and
test
pop
iret
add
dec
fnstsw
sub
dec
xchg
xlat
sbb
push
sub
sub
xor
xor
adc
shrb
push
lahf
adc
or
mov
outsl
xor
mov
xchg
jecxz
mov
arpl
lret
sub
cmp
xor
es
and
mov
xchg
aad
cltd
or
jns
std
mov
scas
dec
idivb
ljmp
orl
add
pop
loop
lock
mov
jle
cmpsb
cmp
pavgb
push
adc
xchg
data16
sbb
cmp
adc
inc
pop
aad
adc
ljmp
or
loopne
lods
cmp
ss
dec
mov
dec
add
mov
out
push
mov
popf
mov
lret
mov
mov
dec
xlat
nopl
sbb
mov
call
fs
dec
or
push
mov
mov
mov
ret
lret
xchg
sbb
jecxz
mov
rcr
inc
jl
testb
push
jae
rorl
in
jg
push
call
dec
mov
adc
sbb
dec
sarl
fxch
fs
pop
inc
jno
out
mov
sbb
inc
shll
inc
fisttpll
lcall
bnd
sub
and
mov
dec
adc
or
cmpsb
testb
pop
pop
addb
das
cmc
sbb
push
add
repnz
lods
jnp
lods
push
pop
pop
jmp
testb
xchg
push
mov
sbb
xchg
popa
xchg
out
outsl
jne
adc
cmc
popa
adc
rclb
cmp
repnz
sub
dec
pop
push
sarb
sub
sub
int
sti
lret
adc
and
rcrl
jb
decb
lret
fidivrl
or
jle
rorl
add
loopne
cltd
das
sbb
xor
fistpll
shlb
addr16
and
jb
adcb
aas
mov
pop
fimull
inc
or
jle
mov
dec
mov
std
imul
das
jmp
push
stos
stc
cmp
jl
xchg
inc
daa
outsb
aam
sbb
cld
adcl
dec
jae
mov
sbb
je
dec
add
cltd
imul
lea
andb
xor
sub
add
movq
inc
sub
inc
mov
lahf
lcall
cltd
xchg
push
int3
pop
and
jno
mov
jg
movlps
xchg
jne
mov
out
push
xor
filds
cmpsb
fwait
int
add
stos
jbe
je
xchg
mov
sub
lods
sbb
fwait
adc
aaa
jne
mov
not
mov
cmpsb
psrlq
pop
mov
arpl
ficompl
test
inc
xorl
pushf
imul
lds
cltd
mov
sub
daa
mov
pusha
adcb
dec
fcoms
fistps
push
mov
ja
std
or
fs
or
mov
inc
mov
or
aad
xor
je
jg
and
sub
into
stos
adc
push
cmpsb
adc
test
loope
and
shl
int
pusha
int3
lret
movsl
add
sub
push
sub
inc
arpl
pop
scas
adc
mov
sbb
mov
inc
xor
sub
push
test
arpl
aad
enter
loope
pushf
push
push
push
imul
push
dec
loope
mov
arpl
out
add
dec
loope
into
pop
jl
mov
shlb
adc
stc
movsl
dec
je
aad
jmp
mov
add
mov
add
or
cmp
subl
or
rcrb
sbb
or
ja
arpl
aam
pop
cld
dec
mov
in
js
xchg
sub
sbb
jbe
jb
pushf
dec
test
iret
adc
dec
push
dec
xchg
ret
imul
scas
enter
xor
inc
pop
fwait
mov
mov
inc
leave
or
popf
push
inc
push
and
push
int
mov
xor
adcl
sbb
or
std
push
inc
xor
mov
das
push
inc
cwtl
enter
push
ret
adc
cwtl
cmpl
inc
adc
push
cs
out
mov
xchg
push
mov
push
mov
pop
mov
ret
or
fs
call
ja
xchg
shr
xchg
popa
mov
sbb
cmpsb
addb
mov
fdivrs
lcall
in
push
dec
cmp
int
xchg
out
daa
push
leave
xchg
pop
fcmovnbe
xor
popa
jmp
adc
sub
sub
rcrb
cld
into
inc
cld
push
jae
or
pop
mov
adc
out
fidivl
pop
xor
or
ja
xor
mov
mov
icebp
lcall
push
scas
subb
push
enter
xchg
cmp
xor
dec
lods
fdivp
pop
jae
shlb
xchg
xor
dec
aad
ljmp
or
cmp
cltd
sbb
or
xchg
cmpsl
orb
mov
das
xchg
inc
mov
loopne
pop
popf
pop
in
lret
movsl
pop
push
sub
ret
sbb
adc
adc
mov
movsl
cwtl
lret
jno
pop
nop
aam
inc
sub
jno
xchg
xchg
sub
cmp
cmp
pop
loope
rolb
out
test
xor
enter
or
call
mov
fldl
pushf
bnd
jecxz
fsubs
adc
and
divl
ss
fstpt
xor
and
shlb
insl
int
pop
xor
inc
add
cld
fsubr
mov
movsl
mov
xchg
dec
push
sbbb
sbb
push
mov
push
cli
icebp
aaa
mov
lret
shrl
les
pop
les
or
lods
pushaw
das
loopne
pusha
xchg
jns
cmp
sbb
popa
jl
xor
push
out
mov
testl
stc
call
xchg
jge
call
and
pop
jecxz
mov
mov
in
les
pop
sbb
or
mov
test
fsubp
mov
sub
aas
add
mov
sbb
inc
fimull
or
sar
xor
rcrl
aas
pop
mov
sub
jmp
dec
ss
mov
and
push
xchg
sbb
add
xor
push
clc
mov
jbe
sbb
lds
test
pop
pop
cmc
or
xor
sahf
mov
mov
test
lock
cltd
seta
shlb
fistl
mov
fwait
shrl
jnp
dec
add
sub
jae
inc
sbb
mov
fistl
mov
fwait
shrl
jnp
dec
add
sub
jae
inc
sbb
mov
fistl
mov
fwait
shrl
jnp
dec
add
sub
jae
inc
sbb
mov
fistl
or
sbb
xchg
and
pop
jmp
mov
mov
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
orl
mov
add
repnz
shlb
ret
push
mov
out
xchg
into
push
mov
ret
scas
loop
bnd
repnz
inc
shlb
ret
push
mov
cmp
pusha
bound
cli
push
fmull
mov
cld
cld
repnz
xor
sub
and
ss
sub
fimuls
daa
fistl
movb
fiaddl
and
adc
das
data16
jbe
outsb
stc
outsb
jae
or
in
xor
outsl
push
jg
hlt
xlat
data16
mov
push
popa
bound
xlat
xlat
dec
movsb
insb
or
sbb
mov
mov
addr16
pop
xor
xchg
pop
mov
pop
mov
jb
inc
pop
cli
cmp
jmp
adc
mov
jp
sarl
lahf
mov
push
pop
imul
xchg
repnz
push
mov
jge
pandn
jne
mov
xor
push
mov
mov
pop
bound
les
xor
add
mov
ret
or
jb
jmp
loopne
adc
insb
lods
inc
mov
add
inc
cmpsb
push
stos
xor
cmp
or
pop
jecxz
aaa
mull
shlb
shll
pop
mov
pop
jl
outsb
gs
inc
mov
mov
movsl
cmp
cmp
jmp
ret
add
and
adc
add
repnz
and
xor
inc
mov
mov
xorb
mov
xor
and
adc
add
repnz
and
xor
inc
mov
mov
xorb
pusha
icebp
jb
or
in
jle
aam
inc
fwait
mov
pminsw
dec
addb
jle
cmp
xor
mov
shlb
dec
inc
mov
jmp
sub
repz
incb
push
negl
bound
popf
testb
cltd
xchg
not
push
mov
in
jp
inc
mov
xchg
cli
test
xchg
std
pop
rol
xlat
push
sub
xor
inc
lods
mov
xchg
inc
jp
je
pop
dec
jp
rcrb
loopne
das
je
mov
addr16
xchg
or
lret
leave
fldl
adc
inc
xor
je
in
mov
call
int3
push
jnp
mov
test
mov
inc
jne
dec
out
aas
adcb
jnp
cltd
ljmp
out
ss
das
dec
js
push
cmp
cmp
inc
mov
lret
add
dec
add
push
inc
mov
mov
sub
insl
push
aaa
inc
mov
dec
fidivrs
xchg
and
insb
shlb
fcompl
rolb
sbb
pop
out
pop
jo
mov
je
idivb
pop
cwtl
out
iret
xchg
sbb
outsl
lods
cli
pop
xor
rorb
jecxz
mov
and
enter
ret
loope
or
ljmp
outsb
mov
sub
cmc
inc
xor
inc
pop
imul
jnp
and
cmp
pop
add
mov
in
and
pushf
xchg
dec
add
imul
xor
jmp
or
sub
bnd
adc
test
jp
fldcw
xor
cmp
sbb
int3
mov
xor
lret
sbb
and
jno
scas
out
lcall
dec
add
int3
int3
lea
push
or
imul
mov
outsb
jmp
test
fcmovnbe
inc
ljmp
test
xor
cmpsl
scas
xchg
xor
jge
scas
fisttps
mov
inc
xchg
xor
cmp
outsb
mov
ret
pop
arpl
cmp
or
lods
mov
shll
cwtl
mov
lahf
xor
icebp
in
andb
das
inc
xchg
scas
addb
ror
pop
aas
cs
lret
mov
add
add
jp
sub
lea
jne
loop
daa
jle
sbb
ret
and
cmp
or
pop
sbb
aam
imul
imul
xchg
sbbl
mov
xchg
mov
jp
jl
mov
insl
push
dec
test
fisubs
jno
cltd
rol
aaa
xchg
lods
inc
setbe
imul
inc
push
add
fnsave
fbstp
pop
xchg
adc
adc
xchg
jecxz
inc
fwait
notb
cmpsb
mov
mov
jne
or
mov
xchg
scas
mov
imul
out
mov
jp
mov
ljmp
mov
mov
or
hlt
or
and
mov
sahf
rorl
add
flds
xchg
ficompl
lahf
imul
mov
mov
cmp
push
imul
mov
sbb
or
ud0
dec
adc
add
pop
movhps
das
lcall
es
fstl
xchg
or
les
das
fwait
pop
mov
pop
inc
enter
out
pop
add
push
or
insb
or
push
jnp
notl
jae
pop
pushf
dec
dec
loopne
dec
sahf
and
cmpsl
imul
lret
lcall
repz
adc
jo
aam
enter
pop
pop
adc
sbb
sub
out
add
xchg
sub
and
jl
xor
stos
test
sbb
mov
lret
add
leave
aam
int3
clc
xor
inc
mov
aad
loop
xchg
scas
cmp
inc
outsb
push
lahf
sbb
dec
scas
mov
test
mov
and
sub
or
mov
das
add
out
mov
repnz
repnz
jp
push
xchg
mov
mov
jo
testl
lock
les
mov
jecxz
cltd
mov
push
or
scas
mov
in
imul
xor
inc
jecxz
and
xchg
rcll
aam
loopne
lods
push
ret
addb
in
fstpl
sub
and
jo
iret
push
cmpsl
cmp
dec
fcoml
add
mov
hlt
adc
push
dec
mov
popa
push
in
inc
insl
enter
loope
mov
and
clc
xchg
dec
mov
adc
jecxz
xor
test
push
xor
mov
rorl
stos
or
out
lret
in
shlb
push
mov
xlat
inc
and
in
daa
xchg
dec
push
cmp
sbb
pop
mov
dec
std
pop
shlb
cmc
add
js
jmp
ja
outsl
insl
or
loop
or
test
enter
sub
pop
enter
and
test
lods
inc
mov
sub
int3
cs
mov
sbb
adc
shll
or
mov
or
into
cmp
fidivrl
push
test
mov
cmp
or
and
cmp
xchg
fld
imul
scas
shll
jp
pop
push
dec
fwait
pop
cmc
mov
lds
cld
mov
in
mov
add
sarl
pop
insl
pop
dec
lret
mov
add
sbb
push
xchg
js
fmulp
jp
std
adc
cld
or
pop
pop
adc
mov
scas
sbb
mov
mov
in
icebp
fistl
adc
cmp
add
xchg
xor
popf
adc
mov
push
call
fdivrs
xchg
jge
nop
cmp
ret
sbb
lret
repz
cmp
cmp
call
icebp
xor
pusha
xchg
add
inc
in
movl
or
push
mov
adc
les
outsl
in
xchg
frstor
inc
out
movsl
stos
xchg
cmp
ror
mov
xchg
test
inc
add
dec
movsl
cmp
push
jge
mov
adc
mov
int3
pop
sbbb
pop
movsl
sahf
jns
ret
mov
roll
cli
jecxz
mov
int
mov
cwtl
mov
push
or
gs
fwait
cmp
xchg
mov
or
clc
cmpsb
mov
push
xchg
mov
test
and
push
mov
rcl
in
rclb
test
sahf
fisttps
rolb
mov
xchg
jmp
push
mov
jno
call
xchg
jp
mov
xchg
pop
mov
iret
adc
fdivrs
or
xchg
cli
cmp
mov
mov
jl
jne
icebp
insl
sahf
pop
cmp
lret
cmpsb
mov
int
rolb
outsl
jbe
dec
nop
pushl
and
jo
lods
cltd
jne
pop
inc
push
lds
dec
pushf
imul
adc
xor
jns
gs
andb
dec
das
xlat
ret
and
mov
outsl
xchg
push
and
rorb
ret
sub
mov
notb
aad
mov
jno
pop
push
mov
mov
sarl
push
mov
rolb
lea
std
pop
hlt
push
cmovg
sbb
insb
jae
sbb
jle
jl
xchg
push
xor
cmp
jns,pn
and
push
pop
filds
outsb
das
mov
dec
mov
add
cltd
incb
lret
ret
scas
jge
or
add
mov
lcall
loope
xor
xchg
pop
sub
mov
inc
xor
dec
dec
jmp
pop
roll
scas
lea
mov
addr16
sub
pushf
scas
jg
lret
pop
dec
cmp
push
in
mov
cmpb
dec
popa
lcall
pop
stos
adc
mov
in
pop
das
ret
push
cmp
cmpsl
icebp
ljmp
std
push
fsubrs
mov
in
stos
into
jbe
int
mov
xchg
adc
insl
mov
pop
mov
adc
fisubrs
clc
inc
sub
enter
pop
rorl
push
mov
popa
stos
repz
push
cwtl
popf
adc
mov
sbb
shll
mov
jg
lcall
adc
mov
out
jns
addl
or
xchg
mov
inc
push
sbb
fistpll
push
outsl
xlat
loop
mov
inc
dec
lea
lret
mov
hlt
fdiv
push
xchg
popf
push
js
sbb
sub
bound
dec
cli
add
mov
dec
addr16
pop
ja
pop
jmp
fldenv
pop
fdiv
xchg
cmp
dec
xchg
fisttpll
into
pop
ret
push
aaa
into
outsb
pusha
lds
jnp
dec
shll
lods
stos
shll
mov
negb
mov
jl
lock
lcall
out
lret
mov
jnp
sbb
mov
jo
mov
notb
sahf
push
jge
add
adc
xor
adc
mov
jns
mov
or
jo
push
gs
pop
and
adc
cli
lods
jns
sub
xchg
jle
orl
jae
adcb
jnp
push
daa
loopne
pop
xchg
cmpsb
mov
cmc
hlt
out
push
mov
pop
xchg
adc
push
jbe
hlt
and
mov
test
popl
fstp
mov
sbb
mov
or
and
mov
sarb
jb
cmp
rcr
adc
lret
sbb
jae
xchg
lahf
ss
icebp
clc
in
fstpl
ja
mov
jg
loop
adc
mov
pop
add
movups
inc
sbb
sbb
push
pop
push
ret
push
dec
decb
cmp
in
sbb
test
pop
test
pushf
cs
dec
sub
mov
mov
add
push
adc
andb
push
add
mov
subb
pop
inc
cli
add
aaa
mov
jge
xlat
jg
lcall
pop
mov
enter
sbb
pop
cmpsl
in
clc
call
push
mov
xor
mov
sub
mov
pop
xor
inc
jnp
sahf
inc
inc
adcb
sub
jecxz
je
and
jge
cmp
aas
cmpsl
test
add
cmp
jns
insb
sub
and
sub
inc
xchg
sbb
shll
test
sbb
sbb
mov
ret
sbb
out
mull
sub
fwait
int3
cmpsl
cmp
rcr
push
aaa
xchg
aad
mov
mov
xchg
and
sbb
sbb
sbb
fs
pmaxub
bound
mov
add
in
dec
xchg
test
gs
add
jle
mov
lahf
sahf
sbb
test
xlat
into
outsl
sub
mov
push
ljmp
test
rorb
lret
xchg
pop
cs
int3
repz
out
pop
aam
inc
scas
push
adc
fsubrs
fucom
insb
mov
movsb
adc
cltd
dec
xor
cmp
test
add
mov
movsl
or
jg
sub
cld
pop
cmp
add
xlat
push
push
movsl
ljmp
sub
mov
loope
pop
dec
dec
xchg
enter
out
insb
test
pop
inc
pop
push
fdivrs
je
or
lods
jno
lods
cmp
push
push
arpl
je
sub
imul
call
hlt
aaa
sub
cwtl
testl
sub
push
jg
jg
les
jno
xor
cmp
jo
push
lret
add
mov
mov
jmp
xchg
movsl
sbb
push
or
test
and
repnz
xchg
mov
in
out
and
mov
mov
adc
xlat
bound
sbb
dec
fs
movsl
push
test
test
adc
push
jle
fidivs
imul
push
mov
and
daa
insl
rclb
aam
rorb
jae
mov
daa
xlat
push
aad
mov
outsb
push
cltd
fsub
es
pop
in
cmp
mov
sub
jo
fsubs
mov
push
pop
mov
aad
lods
insl
jae
pop
or
mov
or
mov
inc
and
stc
cmp
pusha
push
lock
inc
cmpsb
rcr
cmp
leave
push
outsl
movsb
jp
xchg
ret
pop
popa
dec
mov
dec
sbb
aas
or
push
ljmp
fdivr
cltd
dec
fmul
test
inc
cmp
mov
imul
pop
sbb
ror
int
ljmp
push
nop
js
cmp
sub
dec
into
ret
es
push
pop
mov
imul
jbe
sahf
dec
lret
sub
ret
or
outsl
xchg
enter
scas
mov
add
int3
and
sub
ficompl
sub
cmp
xor
add
xchg
mov
ret
cwtl
adc
stc
data16
aad
aam
cmp
gs
pushf
mov
dec
xchg
sub
mov
mov
sbb
adc
and
push
cwtl
xchg
inc
je
jp
adc
cmp
outsl
fwait
cmp
sbb
add
rcrb
sbb
repz
rorb
add
mov
cmpsb
sbb
insl
loope
xchg
pushf
mov
into
inc
inc
xor
mov
lea
call
lcall
adc
lds
xchg
push
sub
or
sub
loopne
mov
fdivl
outsl
mov
inc
pop
mov
ss
loopne
and
inc
push
roll
xor
subb
mull
mov
hlt
dec
scas
adc
cmp
inc
jnp
sub
and
fisttps
sub
daa
sub
xchg
add
lds
js
into
fdivr
jno
dec
xor
push
push
adc
arpl
mov
pop
dec
xor
ret
cs
sti
insb
in
into
lret
out
sbb
push
pop
std
cmpsl
xchg
jae
jns
scas
scas
imull
cmp
mov
cmp
hlt
imul
mov
mov
dec
xchg
dec
xchg
andb
adcl
fwait
pop
push
aas
xor
mov
xchg
sarl
add
int
fmull
dec
nop
arpl
arpl
adc
jo
push
add
jne
leave
push
dec
pop
jl
aas
ja
cs
in
pop
jge
lret
movsb
pop
and
xor
in
aad
mov
push
jp
add
mov
cmpsb
push
cwtl
int3
and
je
jo
iret
xchg
cmovb
mov
push
mov
insl
mov
mov
fcompl
adc
jp
add
push
inc
cmp
and
jno
dec
ret
repnz
jb
aas
xchg
ja
dec
pop
in
xor
mov
fs
subl
nop
popf
insb
clc
jae
das
push
adc
jmp
call
xchg
jmp
and
scas
sti
mov
scas
sub
loopne
or
pop
mov
lcall
mov
jle
shll
mov
mov
out
cs
outsl
or
mov
out
roll
and
test
adc
hlt
out
inc
dec
jns
divl
int
cmp
ss
loopne
stc
sbb
addr16
sahf
pop
mov
mov
iret
into
and
add
mov
pop
sbb
test
int3
xchg
pushl
leave
out
lods
popa
dec
or
leave
data16
daa
subb
push
in
xor
pop
pop
daa
rorl
iret
std
loope
jo
aas
jbe
in
mov
int3
mov
or
lock
mov
insb
mov
js
inc
movsl
rcll
xlat
scas
mov
push
shr
loop
lret
je
jp
fs
aas
inc
mov
jns
xchg
aaa
andb
fidivrs
out
je
mov
jae
rolb
inc
js
mov
jmp
fists
mov
in
ds
rcrb
out
push
jbe
lea
stc
lock
cs
xchg
mov
cmp
add
jmp
jle
inc
push
pusha
in
aam
cmpl
or
xor
sbb
insb
sbbl
mov
in
ss
shlb
gs
dec
lahf
lcall
inc
aad
jl
sbb
inc
inc
popa
pop
sub
xchg
mov
pop
dec
cmp
mov
fs
scas
push
int3
leave
enter
call
loop,pt
test
test
push
test
dec
out
xchg
popa
push
fwait
pop
jmp
sti
jbe
subb
fldenv
fcomp
das
outsl
pop
idiv
jl
mov
jg
inc
mull
and
bound
sub
push
std
push
pusha
xchg
cmpsb
jns
sub
lea
push
orb
mov
add
xchg
repnz
mov
mov
fadd
in
xor
jnp
adc
sub
cmp
pop
xchg
dec
fstp
loope
out
and
into
mov
aam
mov
jle
mov
mov
sub
push
cmp
in
dec
and
xchg
cs
dec
fldcw
sub
or
jp
jns
fmul
data16
dec
adc
mov
push
mov
movsb
mov
hlt
lcall
les
popa
aad
cmc
enter
cmp
xchg
ljmp
cmp
xchg
popf
xchg
loopne
je
dec
push
add
add
test
lcall
mov
xchg
imul
addl
dec
dec
jl
ret
adc
aad
andb
lcall
push
mov
iret
sti
xor
or
lds
sub
mov
in
jle
fsubrl
mov
sub
cs
aam
dec
cli
cmpsb
int
popf
jb
add
cli
movsb
inc
popa
jmp
mov
js
aad
jne
mov
add
fdivr
push
pushf
cmp
fnsave
fcmovb
dec
push
pop
jl
int3
aaa
jns
insl
cmp
repz
andl
test
mov
mov
xchg
loope
mov
or
loopne
adc
imul
lock
fcomps
outsl
cmp
add
dec
xchg
push
mov
inc
or
xor
mov
sub
and
mov
popf
jge
xor
pusha
sbb
hlt
daa
inc
movsl
nop
mov
aas
out
adc
aaa
lahf
sbbl
js
test
mov
xor
xchg
push
fnsave
pop
mov
inc
jecxz
mov
dec
stc
add
daa
data16
adc
and
aam
and
push
xchg
or
int
leave
cltd
insb
xor
push
out
cmp
mov
outsl
or
mov
and
sub
sub
jns
lcall
mov
mov
lea
push
test
push
in
mov
inc
jecxz
lea
loopne
dec
pop
mov
jnp
lock
cmp
sub
dec
mov
decb
push
pop
mulb
sub
in
std
fisttpll
xor
cmpsb
sub
das
xchg
pop
jmp
mov
push
cli
push
mov
call
test
addb
stos
push
pop
cld
jle
fwait
adcl
adc
out
mov
cmpl
pop
or
fbstp
clc
inc
gs
inc
mov
sbb
add
pop
data16
sub
insl
sbb
sbb
add
push
mov
enter
jl
aam
fs
mov
test
out
sub
lahf
dec
pop
fidivs
sbb
add
and
mov
rcrl
imul
out
daa
jnp
mov
test
stos
scas
mov
cmpsb
inc
hlt
xor
pop
ja
dec
mull
neg
push
jp
les
push
mov
mov
add
icebp
or
andl
call
adc
mov
cmp
pushf
out
mov
cmpsb
mov
cmp
pop
inc
mov
mov
out
mov
daa
mov
out
adc
movsl
and
sub
or
inc
addr16
imul
fistpl
and
shll
add
cli
pop
xchg
mov
lahf
jmp
out
inc
jp
mov
and
inc
push
dec
scas
add
out
add
scas
popa
rorb
sbb
inc
or
push
fbstp
jecxz
roll
xchg
rcll
mov
ja
pop
rcrl
mov
xchg
sti
imul
push
mov
icebp
test
fdivrs
inc
ret
mov
fnsave
stos
lods
call
call
movsl
pop
jp
arpl
cwtl
cmp
cmp
icebp
shrl
cs
mov
mov
push
dec
cs
rcr
pusha
cmp
lods
leave
mov
and
xchg
mov
xchg
adc
imul
jno
cmc
rcl
inc
push
add
push
in
out
jecxz
rcrl
or
mov
sub
in
ret
mov
jne
subl
insb
iret
repnz
and
cmc
push
scas
xchg
ficoms
ja
mov
pop
int3
and
sub
inc
fcom
and
in
mov
ret
and
adc
add
repnz
and
xor
inc
mov
mov
xorb
mov
xor
and
adc
add
repnz
and
xor
inc
mov
mov
xorb
ret
inc
push
xor
mov
adc
add
sub
loop
shlb
ret
inc
mov
xchg
jb
clc
push
xchg
inc
ret
and
xchg
jb
add
xor
popf
insl
lea
sub
cmp
or
sbb
insl
sbbb
pop
and
xor
pusha
in
jo
inc
fcoml
mov
or
sbb
insb
lock
dec
sarb
and
pushf
mov
int3
push
fsubl
or
sbb
insb
lock
dec
rcrb
adc
pusha
stos
pop
mov
jmp
dec
sbbb
sub
jnp
lret
dec
sub
das
incl
xlat
rcl
and
xor
sbb
sub
sub
outsw
xchg
pop
jl
icebp
les
inc
pushl
mov
je
lock
cld
xchg
in
imul
mov
xchg
mov
add
or
adc
sbb
jl
inc
sarb
dec
jp
lahf
cld
xor
mov
push
ret
pusha
rep
adc
sbb
test
insl
pushf
xor
push
cmp
jne
sub
sbb
and
testl
sarb
std
std
lods
add
sub
cmp
or
sbb
insb
lock
dec
rcrb
xor
in
jo
inc
int3
push
lcall
stc
pop
loopne
orb
sub
sub
fcoml
add
push
mov
lds
push
in
cld
jg
das
mov
mov
leave
popa
into
add
adc
popa
mov
push
test
mov
out
imul
jl
dec
rcrb
xor
in
jo
inc
int3
push
fsubl
or
sbb
insb
lock
dec
rcrb
xor
in
jo
inc
int3
push
fsubl
arpl
rcrl
and
xchg
arpl
and
arpl
pop
push
lea
jns
mov
mov
push
cmp
jnp
pop
and
fwait
stos
lahf
fstl
lahf
mov
or
jg
stos
ret
loope
call
test
mov
pop
int
and
mov
push
cs
lea
imull
std
push
ficoms
or
sub
cmp
test
jecxz
div
in
xchg
xor
je
and
movsl
jno
sbb
pop
sbb
loop
and
xchg
daa
fs
inc
nop
mov
aam
jge
jo
iretw
test
lock
leave
mov
cmpsb
xchg
ret
stos
sbb
jmp
inc
icebp
loop
fucomi
mov
mov
mov
cmpsb
pop
iret
inc
lods
ja
inc
cmp
test
enter
mov
in
sub
in
iret
stos
xchg
pop
stos
lret
ds
je
push
stc
jecxz
adc
fs
mov
push
sub
xchg
or
pop
out
mov
negb
xchg
sti
mov
adc
incb
xor
and
jge
jle
adc
pop
cmp
addr16
dec
and
mov
arpl
ds
jae
sbbb
sub
and
add
popa
stos
outsb
stos
xor
mov
out
icebp
in
lods
push
imul
dec
or
bound
inc
cli
test
add
xor
test
into
mov
mov
fstpt
sbb
jns
stos
xchg
jg
into
sti
movsl
cmpsb
pop
add
or
iret
lods
in
jmp
or
pop
cmpsb
es
imul
shl
sti
xchg
push
aam
or
in
lret
test
inc
shll
push
aam
push
pop
mov
out
sbb
into
push
mov
ds
sahf
mov
sarb
loop
call
or
outsb
push
js
or
rorl
pop
mov
adc
lcall
or
leave
aaa
xchg
mov
pop
lahf
cmpsl
add
xchg
cmp
adc
cs
dec
loope
mov
pop
xchg
mov
mov
pop
lret
sbb
dec
jbe
pop
and
insl
xor
pop
fsts
scas
repnz
adc
out
je
dec
leave
mov
roll
pushf
adcl
xor
or
mov
sbb
cmp
cmp
loopne
adc
fsub
cmpb
ss
push
loopne
cmp
hlt
jle
subb
ret
adc
rolb
loop
in
adc
fistpll
lcall
shr
test
rorb
sbb
xor
sbb
xchg
mov
jle
je
push
add
outsl
adc
ficoml
movsb
xlat
aad
jbe
loop
mov
imul
or
inc
pop
int
mov
call
xor
mov
mov
mov
mov
jmp
xchg
stc
and
xorb
ja
inc
xlat
rcrl
xchg
jae
insl
or
push
bound
xor
bnd
js
xchg
pop
ljmp
xchg
push
mov
imul
sub
lock
imul
sahf
pusha
pop
jg
mov
inc
shll
cmpsl
add
sbb
inc
push
push
mov
leave
inc
mov
adc
or
cmp
or
pop
lret
or
mov
xchg
jmp
jp
inc
add
rcrl
mov
dec
xchg
inc
outsb
cwtl
xchg
movsb
loopne
pop
dec
ror
es
dec
lret
mov
iret
mov
ret
ror
xchg
mov
pop
mov
pop
fcomps
push
inc
hlt
jmp
stc
in
push
shlb
lahf
movsb
into
pop
gs
out
dec
xorl
sub
xchg
sub
xor
xor
lahf
xchg
pop
pop
aaa
push
mov
push
or
sbbb
bound
push
push
add
cltd
fwait
push
cmc
out
pop
inc
leave
mov
mov
imul
fnstcw
mov
pop
lods
pushf
lret
cs
lret
pop
repnz
push
push
push
outsl
orb
pop
xlat
movsb
out
sti
fmuls
call
mov
pushf
cltd
nopl
sbb
add
mov
pushf
inc
mov
add
push
cmovo
aas
xchg
aaa
icebp
xchg
push
ljmp
cmp
mov
rcl
cmp
xchg
ret
sbb
sub
jno
stos
cmpsl
icebp
ret
or
test
sub
xchg
inc
jle
jae
mov
jge
push
gs
out
jl
test
test
setge
pop
cmpsl
sbb
lods
and
push
sbb
push
fsubrp
xor
pop
cmp
call
cs
add
outsb
or
aas
cld
push
adc
and
mov
inc
push
mov
bound
sbb
mov
in
add
cmp
idivb
sub
xchg
jmp
xor
fcmovu
cld
mov
je
sti
lods
mov
sbb
add
pop
mov
sbb
add
mov
sub
cmp
ds
popa
imulb
and
fsubp
data16
popf
inc
pop
mov
push
and
mov
cmp
xor
sub
cmpb
lahf
jmp
testb
cld
outsb
stos
int
bnd
lock
popa
dec
mov
mov
mov
sti
je
jmp
fcoms
fsubs
lcall
lock
daa
xchg
xchg
out
fsubl
pop
fnstenv
push
sub
jge
sub
push
jg
push
jb
and
push
jbe
jo
outsb
xlat
pop
cmp
outsl
sahf
dec
pop
ljmp
inc
xchg
dec
mov
mov
inc
jnp
cmc
mov
add
mov
adc
repnz
add
and
push
lahf
jmp
cltd
scas
cmp
sub
xor
xchg
dec
in
repnz
ja
adc
push
push
divps
inc
enter
cmp
das
push
push
dec
cmp
ret
ret
sbb
dec
inc
fldenv
dec
inc
das
lcall
mov
xor
inc
testb
rcl
orb
push
or
cmpb
jp
mov
sub
scas
jo
inc
jecxz
cld
jg
bound
ja
add
push
xchg
and
lret
dec
dec
shlb
andb
dec
ja
or
lcall
mov
sbbb
pop
xor
or
push
dec
lods
outsb
sub
lods
loopne
sti
push
mov
sbb
xchg
ds
lcall
inc
mov
popf
mov
cmpl
mov
aas
stos
sahf
xorl
push
inc
jno
and
adc
lahf
test
mov
inc
and
aas
xor
out
lcall
xor
roll
test
ljmp
push
popa
sub
sub
adc
les
dec
fs
pop
mov
call
cmp
scas
adc
jmp
xchg
arpl
test
xor
and
mov
jae
sbb
sub
aas
xor
push
imul
cmc
in
adc
iret
mov
in
leave
xor
lods
dec
testb
ret
cs
mov
data16
dec
mov
jg
adc
xlat
xor
outsl
pop
cwtl
dec
jo
loope
lret
std
addr16
jnp
movsb
mov
sub
dec
mov
mov
cmp
sbb
cld
xchg
in
out
fimuls
push
bound
lock
pop
cli
mov
mov
inc
sub
lcall
mov
subl
scas
mov
mov
push
fmul
lock
sbb
rcll
xlat
add
mov
insb
or
mov
enter
add
inc
les
pop
int3
cs
cwtl
leave
stos
scas
leave
outsl
mov
mov
mov
jmp
cmp
fsubl
dec
rorl
ffree
add
jge
and
jb
mov
enter
outsb
cs
arpl
shll
xchg
es
add
aam
mov
stos
and
cmp
addr16
nop
fstpl
push
nop
pop
xchg
lods
ja
push
addb
ja
inc
pop
test
jne
fsubr
pushl
adc
hlt
pop
inc
push
sub
xchg
es
and
shll
dec
mov
or
add
aaa
arpl
iret
or
mov
jae
sti
push
scas
cmp
adc
adc
cmp
add
jg
push
xor
jne
push
rcrl
pop
rorl
or
cmc
and
repz
cmp
jecxz
sti
sbb
pusha
xchg
sbb
and
daa
jb
xchg
mov
jle
out
adcl
negl
xor
xlat
fimuls
jbe
imul
push
sbb
push
push
scas
sub
shlb
cmp
xchg
or
mov
cld
cld
adc
sbb
movsl
pushf
cld
inc
mov
stos
xchg
fmul
ret
icebp
rorb
mov
dec
xor
and
pushf
imul
loope
in
inc
ja
or
clc
pop
push
mov
in
pop
mov
sub
cmpsb
inc
or
cmc
mov
arpl
jl
lcall
aaa
mov
cmp
xchg
in
subl
mov
test
in
rorl
std
lahf
pop
xchg
pop
mov
dec
popf
inc
inc
cmp
dec
sbbb
imul
rorb
push
lret
adc
and
insb
jno
mov
jg
enter
lret
popf
or
out
pop
es
lcall
loopne
movsl
xchg
cmp
test
in
ss
sub
or
test
dec
xchg
test
loopne
pop
clc
lock
add
xor
pop
pusha
je
jecxz
push
negb
push
pop
jmp
cmpsl
in
jmp
je
scas
adc
sub
sarl
dec
push
inc
mov
pushf
mov
nop
popa
push
out
gs
cmovnp
inc
scas
jbe
inc
push
dec
lret
add
into
loope
push
jl
jge
sbb
cwtl
adc
shlb
in
rcll
lea
xchg
push
dec
repnz
push
lret
cli
inc
xchg
addr16
nop
lea
adc
and
mov
sub
mov
movsl
clc
cwtl
mov
push
add
les
mov
pop
ret
mov
cs
xlat
loop
push
mov
mov
cmp
movsb
mov
cmp
loop
mov
and
inc
xchg
xor
stc
jmp
lods
cmp
fs
inc
jnp
and
test
cmpl
jge
mov
push
dec
xchg
imul
pushf
dec
data16
orl
outsb
in
add
test
fistl
xor
dec
mov
popf
inc
dec
fldt
rorb
aam
js
jo
pop
ljmp
pop
inc
ds
jno
dec
aad
jb
idivb
stc
xchg
ds
lds
cli
cltd
lea
fistpl
sbb
xchg
mov
and
sti
jns
movsl
idivl
jbe
add
inc
xchg
stc
pop
xor
inc
cmc
jne
rorb
pop
pop
and
pop
sbbb
push
hlt
ret
sbb
mov
mov
stos
lock
push
mov
out
aaa
in
mov
jb
cli
aam
dec
std
in
push
aad
add
and
sub
cli
mov
mov
fsub
xor
cmpsl
xchg
mov
fldl
inc
ret
addb
in
leave
cwtl
jecxz
fildll
pop
dec
mov
xchg
add
inc
xchg
jg
inc
repz
add
dec
mov
subb
inc
pusha
dec
jno
jb
cmpl
add
mov
pusha
xchg
mov
fnstenv
push
std
imul
push
jl
adc
imul
mov
xorl
loope
jl
popf
xchg
ret
inc
add
sub
xchg
pop
xchg
jae,pt
or
test
add
inc
fimull
cmp
test
mov
stos
sbb
cltd
shrl
jo
mov
fiadds
jmp
pop
mov
push
pusha
dec
ret
dec
pop
pop
cltd
push
jno
test
mov
testb
pop
xor
repnz
jno
test
imul
sub
adc
aam
out
movsl
call
push
xor
ljmp
and
aad
or
add
fcoms
push
add
adc
xchg
jno
push
sub
mov
xchg
adc
push
jp
add
ficoml
imul
dec
lahf
in
sub
pop
push
mov
jl
inc
mov
rorl
mov
inc
push
mov
enter
cmpsl
xchg
add
dec
mov
xor
mov
adc
dec
stos
xchg
sub
sti
inc
inc
dec
ss
aaa
ljmp
fbld
cs
dec
lret
xor
aas
mov
out
mov
cmp
roll
mov
stos
xchg
push
test
mov
cmc
int3
pop
outsb
or
stos
daa
mov
sbb
rolb
dec
test
and
lcall
les
and
jno
lcall
pop
lcall
nop
into
mov
inc
dec
xchg
sub
movsb
and
stos
stos
adc
js
test
pop
adcb
rcrl
dec
or
icebp
xor
push
int
sbb
xchg
lret
push
stc
ss
jo
gs
loope
and
mov
pop
sub
add
and
mov
pop
inc
push
fsts
xchg
xor
cmp
pop
sbb
pop
fdivr
cmp
movsl
iret
mov
lods
mov
lret
pop
cltd
scas
daa
leave
jl
and
or
jns
loop
mov
inc
push
imul
les
pop
imul
lahf
sbb
mov
cmp
cmp
lds
xchg
jle
popf
cwtl
les
aas
push
out
fstl
lahf
mov
cmpsb
mov
sbb
addr16
mov
repz
push
test
pop
jmp
fstpl
inc
mov
mov
mulb
subb
xor
dec
incl
cmpsb
or
mov
sub
imul
fstpt
call
pop
mov
add
xchg
xor
and
jmp
and
lods
lods
pop
mov
sbb
sahf
mov
pop
icebp
or
push
in
add
movsb
idivb
insb
jne
xor
daa
sbb
dec
xchg
push
inc
jne
fmulp
xlat
lea
aas
mov
fisubs
inc
popf
popa
cmpsl
test
out
or
add
arpl
test
popa
imul
cmp
push
sbbb
test
pop
push
pop
and
cld
cmp
mov
inc
push
pop
dec
mov
sbb
mov
fisttps
loop
xor
and
add
pop
sub
jmp
cld
dec
xchg
loop
fidivrs
push
scas
inc
jmp
sub
ja
xor
sub
insl
xorb
adc
adc
shll
ds
or
mov
arpl
sbb
mov
or
arpl
inc
fwait
jns
or
inc
jae
sub
xor
sahf
inc
test
mov
mov
dec
push
nop
call
ljmp
add
inc
adc
lea
mov
setae
mov
adc
sbb
xor
mov
movsb
cltd
cmp
cwtl
hlt
loope
xchg
cmc
nop
add
pop
sub
lret
int
decl
sbb
xor
pushf
je
add
adcl
mov
jp
add
cltd
adc
std
ljmp
enter
dec
call
mov
rorb
in
fadds
adc
jl
call
iret
outsb
mov
movsl
rcll
loope
and
mov
push
push
ss
jne
es
push
icebp
xchg
icebp
pop
sbb
push
pop
cmp
lahf
pop
cmp
xchg
outsl
enter
xor
mov
dec
out
movsb
jle
pop
xor
fstpt
rcl
imul
fldenv
stos
mov
mov
inc
push
inc
outsb
add
dec
sub
sub
imul
mov
mov
cmpsl
sarb
mov
pop
jo
cld
inc
sub
aaa
and
decb
in
hlt
cltd
jg
cmpsl
sub
xchg
fidivrl
std
mov
mov
and
cmp
daa
push
ds
mov
fsub
mov
cld
pop
push
mov
aaa
and
addr16
scas
sub
xor
out
jge
insl
or
jl
jp
enter
inc
xchg
sub
scas
sbb
addr16
fwait
cmp
aad
test
or
jne
mov
pop
stos
jo
enter
andb
cwtl
nop
test
int3
pop
mov
outsb
imul
out
and
and
cli
adc
out
mov
jmp
mov
les
pop
enter
xor
mov
sub
rol
mov
xor
mov
xor
lret
stc
mov
es
push
dec
jmp
das
sbb
call
sahf
mov
call
xor
inc
movsl
es
aaa
sbb
fisttps
test
lock
inc
pop
jbe
or
mov
xor
xor
pop
sahf
out
cmp
dec
lahf
pop
pop
mov
sbb
or
xor
ret
jl
lahf
and
jns
mov
shrl
icebp
lods
inc
mov
enter
push
nop
jb
fcmovnbe
repnz
jns
or
jg
mov
aam
or
xchg
and
push
cwtl
lock
ss
movsl
arpl
outsb
pop
mov
pop
pop
clc
ds
inc
pop
xor
out
jb
movl
inc
out
xchg
ljmp
test
push
popf
mov
fldl
and
shr
lret
imul
imul
dec
mov
mov
xor
in
hlt
mov
mov
lock
cli
sub
lea
aaa
imul
test
and
jb
test
aam
ret
mov
test
push
lret
data16
out
and
gs
inc
and
imul
lods
inc
mov
sub
push
jno
mov
jle
mov
dec
sbb
call
dec
add
fcom
jbe
andb
in
adc
jmp
cmpsb
dec
adc
popa
sub
cwtl
inc
mov
iret
shlb
add
fmul
sarl
adc
lods
mov
jle
push
push
outsb
jb
inc
pushf
xor
inc
insb
dec
xor
xor
ret
out
pop
cli
ror
add
in
pop
dec
leave
popa
jle
in
lret
xchg
sub
fimuls
es
movsb
mov
jne
test
jg
addps
and
dec
stos
mov
in
sar
stos
popa
pusha
iret
in
sub
je
jp
cwtl
jmp
mov
jp
fs
sarl
lods
rcrl
mov
push
fdivrl
jne
nopl
adc
fldl
inc
fwait
dec
and
mov
in
pop
idivl
xchg
inc
imul
sbb
mov
sbb
test
les
cmpsl
or
sahf
aaa
aad
or
arpl
cmp
add
adc
sbb
and
xchg
out
jmp
loop
push
stc
lcall
pop
xor
pop
cli
test
bound
in
pop
and
xchg
dec
data16
inc
push
pop
xor
cli
jmp
cmp
mov
inc
sub
add
mov
adc
in
xor
xor
push
jae
dec
push
stos
icebp
cmp
dec
imul
in
shlb
push
loop
xor
cltd
sub
scas
push
sbbb
icebp
rclb
mov
rolb
cmp
push
jg
cmp
and
insl
push
cld
push
dec
xchg
cs
push
mov
inc
notb
jne
mov
test
and
xchg
xlat
ret
into
add
mov
outsl
arpl
xlat
sbb
ljmp
out
out
mov
inc
push
sub
jl
idivl
mov
aas
addr16
incl
adc
rcll
icebp
out
stos
aam
inc
fdivrp
cmp
or
sub
mov
add
mov
pushf
lret
add
jae
repz
ljmp
xchg
in
popf
adc
lcall
popl
fcmovb
addr16
clc
dec
icebp
int3
clc
dec
and
inc
in
bound
imul
mov
fstps
adc
test
pop
pop
dec
xor
xchg
cmp
jecxz
mov
xor
faddp
fsts
or
cltd
xchg
test
jg
aaa
dec
and
mov
fwait
pop
cmp
mov
add
lcall
jnp
in
data16
xor
test
sub
mov
aaa
in
std
jns
gs
dec
xor
adc
cwtl
dec
in
loope
and
dec
or
pushf
mov
mov
adc
cmp
or
sbb
insb
lock
dec
rcrb
xor
in
jo
inc
int3
push
fsubl
or
sbb
insb
lock
dec
rcrb
xor
in
jo
inc
int3
push
fsubl
or
sbb
insb
lock
dec
push
pop
and
pushf
pusha
in
jo
inc
int3
push
fsubl
or
sbb
insb
lock
dec
rcrb
mov
jmp
add
xor
and
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
cmp
push
sbb
jle
das
movq
or
clc
mov
jae
scas
enter
sub
outsb
or
push
push
adc
out
clc
mov
enter
sub
js
push
or
into
mov
call
fstpl
fimull
pop
sbb
aas
out
lods
ret
pushl
andl
lods
adc
xor
cmc
aam
xlat
popf
out
cmc
cmpl
mov
and
ja
scas
fwait
call
repz
es
pop
jb
inc
mov
ficoms
gs
iret
mov
add
jge
bound
enter
divps
push
jle
sbb
mov
dec
and
ljmp
push
inc
ret
lods
mov
xchg
ret
ret
mov
push
test
push
xor
shlb
push
inc
jecxz
cld
pop
pop
aas
lcall
loop
sbb
mov
aam
ret
sbb
or
push
push
lods
mov
in
mov
clc
mov
jo
mov
mov
dec
xor
dec
adc
pop
int3
jns
int
jmp
int
jle
test
xlat
dec
or
sbb
and
or
stos
in
mov
xadd
int
cmp
insl
adc
cs
ds
out
mov
clc
mov
sahf
fsubrs
sub
outsb
or
push
push
ds
out
mov
clc
mov
sahf
fsubrs
dec
or
imul
xchg
negb
mov
xorl
pop
mov
mov
sub
fnstcw
movsl
imul
jo
mov
mov
or
scas
jmp
pop
lea
add
mov
movl
test
add
cmpsl
mov
lahf
cwtl
cmp
fistps
pop
js
in
out
punpckhdq
jno
mov
mov
mov
adc
dec
sub
fsts
dec
xchg
lcall
lods
sub
sti
std
es
inc
jg
test
pop
fnstcw
or
push
push
push
add
test
dec
pop
push
popa
mov
orb
and
pop
adc
std
push
mov
or
and
sbb
daa
es
movsl
cmp
ja
call
inc
sbb
xchg
jle
jle
cmp
jl
nop
sbbb
fs
inc
xlat
jl
xchg
icebp
jg
pop
jo
add
fisttpll
or
jmp
xor
fmul
sahf
lret
or
pop
mov
cmpsb
les
dec
or
mov
lock
adc
push
mov
aam
mov
and
notw
stos
jbe
inc
sti
adc
bound
push
mov
iret
es
lds
inc
inc
mov
mov
mov
mov
xor
pusha
cmpsb
or
xor
inc
stc
adc
fists
xchg
pop
rcll
push
lods
popa
aas
lods
in
mov
adc
add
dec
sub
mov
cmp
push
sub
sti
jns
stos
jp
cmpsl
imul
insb
mov
cmp
call
fstl
cmc
mov
fs
dec
ret
lds
enter
cmp
int
mov
aam
cmp
repnz
and
dec
into
lahf
int3
mov
sub
pop
pop
mov
cmp
loop
and
mov
jl
movsl
xchg
sub
mov
dec
fnstcw
jno
mov
outsb
jne
int
sti
xchg
in
outsb
in
mov
push
fwait
ja
jg
pushf
cli
out
jae
aad
push
mov
add
sbb
test
int
fadds
ret
mov
ja
mov
push
or
push
ja
add
adc
inc
inc
repnz
or
mov
call
mov
repnz
dec
sub
je
hlt
pop
dec
scas
clc
push
sub
push
leave
mov
ja
add
into
push
pop
mov
push
cs
ja
jecxz
and
pop
sbb
and
aam
loope
xchg
cwtl
call
ss
jmp
jmp
aam
insl
cwtl
jne
mov
or
nop
daa
sahf
ret
dec
out
aaa
stc
cltd
popa
push
cmc
outsb
or
arpl
dec
jno
and
adc
xchg
sub
stc
aas
mov
push
mov
inc
cld
jae
loop
sbb
jno
addr16
pusha
adc
loopne
out
outsb
icebp
into
push
add
add
xchg
mov
nop
je
adc
gs
pop
sarl
cwtl
ss
ja
cli
push
inc
imul
mov
and
cwtl
cmpsb
pop
fildl
rorb
cmp
fmuls
cmp
push
lcall
jne
add
push
test
aad
imul
xchg
stos
cmp
rorb
into
outsb
ret
and
adc
mov
push
and
jg
daa
inc
lock
mov
or
scas
sub
int3
push
rcr
mov
insl
mov
mov
fnsave
hlt
lret
lcall
jno
inc
jecxz
or
or
mov
repz
xchg
jge
out
scas
outsb
in
cmp
outsl
in
and
out
inc
adc
or
push
scas
stos
outsb
sbb
xchg
mov
sbb
pop
arpl
leave
in
xchg
mov
mov
cs
js
dec
mov
callw
popa
adc
ljmp
pop
jo
imul
push
and
mov
cwtl
test
faddl
lret
mov
lds
jo
scas
pop
lds
cmpb
jae
mov
xchg
lods
je
sbb
mov
sahf
loop
ljmp
test
inc
movsl
out
xchg
xor
lret
lea
and
inc
insb
idivb
rcrb
movsb
out
bound
dec
push
pop
filds
mov
daa
dec
sub
insl
xor
jns
movsl
jmp
adc
push
xor
inc
pop
mov
popl
mov
jae
arpl
insl
mov
mov
push
hlt
loope
add
cmp
sub
jp
pop
fcomps
xor
xchg
xlat
push
sub
fcmovnb
ds
outsl
sub
mov
cwtl
jae
hlt
adc
adc
scas
sbb
push
mov
jle
mull
gs
mov
pop
stos
scas
mov
jb
pop
jl
ja
das
add
loopne
adc
ja
imul
loope
jb
jmp
popf
mov
ret
and
movsb
mov
movsb
and
rclb
idivl
cs
enter
pop
inc
xor
rclb
mov
jg
cmpsb
scas
fisttps
xor
add
test
add
xchg
and
test
or
test
mov
or
insb
mov
mov
repnz
out
dec
or
push
mov
mov
pushf
stos
jge
in
mov
int
mov
adc
ja
scas
dec
loopne
and
pop
lret
js
loop
jb
xor
and
stc
cmp
outsb
andl
stc
push
das
xor
mov
imul
sub
mov
and
test
iret
cmp
lcall
add
decl
jnp
xchg
js
ja
ja
xor
testl
mov
dec
lret
xchg
push
jge
or
inc
decl
mov
aam
repnz
mov
repnz
and
fstpt
fcmove
push
xor
mov
pop
arpl
mov
inc
push
pushf
setge
cwtl
xchg
push
outsl
test
mov
fs
sbb
inc
push
ficompl
adc
jbe
mov
push
push
in
dec
jle
or
adc
mov
repz
dec
push
mov
xchg
test
fistpll
cmp
je
test
pop
sbbb
loop
sub
movsb
push
push
mov
ss
jmp
insb
add
stos
rorb
out
dec
inc
push
loope
movsb
xchg
aas
dec
xlat
jge
add
loope
test
arpl
je
or
add
and
jp
cmp
sub
in
or
popf
jae
aas
mov
jno
pop
xchg
sub
loopne
mov
movl
in
jne
stc
in
inc
lcall
outsb
ljmp
sbb
pop
pop
imul
cmpsb
xor
ja
dec
push
lods
or
fs
sbb
mov
mov
jb
mov
push
in
xor
inc
xchg
xor
movsl
in
flds
push
jmp
jno
fcoms
inc
xlat
jbe
fs
popf
sub
imul
jae
outsl
xlat
iret
sahf
out
sub
add
push
xchg
inc
pop
das
jbe
fnsave
mov
lret
push
lock
push
xchg
push
ud0
out
add
inc
addr16
imul
cmp
sahf
xor
js
pop
fmuls
call
dec
pop
inc
into
in
xor
mov
jge
mov
or
sarl
pop
ds
jns
mov
xor
arpl
into
and
addb
and
mov
mov
xchg
cltd
test
fnstenv
xchg
lahf
loop
dec
lcall
cmp
cmp
jnp
cmp
pop
jno
cltd
add
adc
pop
xchg
rorb
int
sbb
adc
or
hlt
mov
fimuls
fildll
shr
clc
mov
push
loope
jo
imul
jnp
leave
outsb
xchg
xor
insl
pop
mov
mov
dec
adc
out
fcomps
add
cmp
pop
push
mov
in
jmp
cmp
mov
cwtl
mov
jno
mov
test
imul
mov
cmp
inc
jg
fstp
mov
aaa
nop
jle
pop
ret
inc
or
fwait
inc
push
jo
lret
pushf
sbbl
push
adc
dec
mov
ljmp
and
xchg
ret
jmp
mov
out
sbb
xchg
ds
inc
in
jae
cs
outsb
clc
icebp
lret
and
enter
scas
pop
jmp
mov
push
aam
js
lds
cwtl
lds
mov
pushf
mov
mov
mov
mulb
out
stos
inc
mov
cmp
push
xor
loopne
data16
xchg
adc
inc
pushf
pop
adc
fcomps
and
cltd
xor
and
sub
and
lahf
aad
dec
xchg
mov
insb
xchg
sub
cmc
jecxz
cmp
xchg
jle
outsb
mov
jmp
cli
mov
aam
xchg
loopne
add
loop
shl
mov
pushf
xchg
sahf
adc
dec
mov
cli
and
and
in
sub
mov
push
push
or
fcomps
push
mov
sbb
xlat
cmp
mov
clc
add
inc
cmp
xor
mov
cwtl
and
cld
aad
and
push
int3
mov
cmp
jbe
stos
pusha
dec
mov
pusha
mov
gs
int3
sub
sbb
lea
imul
mov
cmove
add
jnp
arpl
mov
jecxz
pop
aad
in
lods
gs
xchg
cmc
inc
lea
out
jo
push
mov
mov
aaa
push
xor
daa
ficompl
push
jns
jp
mov
shl
mov
jg
clc
push
pop
shll
push
xchg
jle
push
out
daa
sub
fidivrl
ret
sbb
adc
aam
or
in
int3
lret
cltd
inc
outsl
jle
xor
cmp
xor
xchg
addl
mov
mov
and
sbb
dec
mov
xchg
insl
ror
dec
mov
out
mov
or
imulb
sub
bound
inc
xchg
leave
mov
inc
xchg
xor
subl
int3
inc
push
lds
cmp
xor
pop
mov
sbb
aad
sahf
loop
xor
rorl
bsr
add
and
in
lret
into
jmp
and
into
cli
imul
out
cmpsb
mov
and
xchg
xlat
jle,pn
pusha
movsl
adc
dec
orl
stos
inc
iret
pop
call
dec
pop
mov
out
mov
mov
lret
sub
iret
dec
xor
add
push
xor
xor
sbb
mov
xlat
lret
je
jb
int3
sbb
out
pushf
push
mov
mov
mov
repz
ja
cltd
lea
loope
sbb
jp
push
daa
push
or
and
mov
stc
das
push
loop
data16
and
xchg
jno
mov
inc
movsb
add
imul
or
sbbb
inc
gs
mov
pop
push
icebp
mov
incl
push
xlat
push
cli
jge
movsb
xchg
inc
aaa
sub
sbbl
incb
daa
xchg
cmp
mov
push
xor
mov
aad
push
and
cwtl
out
lret
aas
lods
adc
mov
ret
mov
sbb
ljmp
icebp
enter
sbb
dec
imul
sub
pop
in
mov
add
mov
cmc
ljmp
mov
mov
pop
jns
in
adc
and
nop
ret
ds
xor
cltd
cltd
cwtl
xor
lods
decb
nop
js
add
mov
push
repz
pop
pop
outsl
stos
xor
int
sub
mov
leave
out
pushf
sub
or
fwait
xor
mov
clc
and
inc
xchg
aaa
sbb
stos
sub
out
pushf
aas
jl
cmpsl
int3
adc
mov
push
mov
add
dec
int3
push
adc
inc
shlb
test
jbe
repz
repz
sbb
mov
adc
adc
lods
aaa
mov
lahf
iret
mov
xchg
inc
push
inc
sbb
imul
mov
cmp
clc
repnz
add
xchg
or
daa
mov
lahf
fcompl
std
lods
lea
add
psubb
aam
dec
lods
pusha
and
mov
stos
add
cmc
dec
inc
data16
push
pop
sbbl
sub
loop
add
or
dec
out
es
xlat
mov
and
xor
dec
mov
ret
inc
cmp
fcoms
lock
pusha
xchg
popa
hlt
sbb
in
jg
dec
pop
dec
and
jae
mov
mov
xchg
pushf
cmpsb
or
pop
test
rsqrtps
mov
xor
inc
int3
inc
add
lret
and
in
sbb
repz
es
push
and
xchg
add
adc
arpl
loop
jp
and
inc
push
mov
mov
cmpsl
mov
ss
icebp
lahf
popa
jb
lcall
pop
jns
cmpsb
cmp
mov
fs
add
xchg
and
fdivr
mov
xchg
sub
mov
popf
aas
fs
xor
inc
and
loopne
fldt
sbb
jnp
jmp
mov
lret
cld
xchg
push
and
dec
xchg
sbb
jg
pop
arpl
std
ror
mov
loop
sub
inc
icebp
ret
jne
gs
cmp
imul
stos
fcmovu
add
imul
outsl
icebp
out
mov
push
scas
push
lret
test
sti
nop
xchg
or
jne
in
inc
cs
lds
lcall
adc
shrb
and
jnp
inc
hlt
mov
rclb
jl
stc
cmp
out
cli
lock
jns
mov
cld
mov
or
loopne
nop
ljmp
loopne
mov
ja
mov
out
and
clc
add
mov
test
add
mov
push
xchg
cli
pop
and
in
and
sbbl
popf
js
push
pop
shlb
imul
add
or
loop
xor
cltd
xchg
cmc
mov
insb
inc
das
daa
subb
add
ret
shll
cmc
or
mov
popf
fidivl
sarl
push
xchg
jg
add
mov
js
add
hlt
in
ficomps
faddl
mov
and
sbb
out
inc
stos
mov
cmpsb
enter
mov
sbbl
les
lret
loop
jge
in
sub
mov
aas
enter
nop
lock
cli
jb
call
inc
bndldx
sahf
mov
push
sub
adc
jnp
mov
inc
fdivrl
daa
push
pop
pop
popf
cmp
repz
scas
out
sbb
or
inc
dec
fadd
jge
adc
and
xor
dec
call
mov
mov
xchg
dec
or
lock
pop
stc
in
idivl
xor
pop
or
mov
push
ss
repnz
stos
add
cmp
out
mov
pop
pop
xchg
jg
sbb
push
mov
mov
in
mov
xchg
sbbl
jmp
add
sbb
inc
pop
imul
dec
test
cmp
mov
in
xor
sbb
popa
mov
inc
mov
cmova
jg
mov
mov
jl
test
mov
sahf
repnz
sbb
mov
add
cmpsl
fsubrs
adc
xchg
add
cmp
ds
scas
jl
sub
add
lock
inc
or
bts
jns
shlb
push
adcl
push
dec
push
leave
ud1
cmp
xor
in
sub
and
push
xchg
mov
les
fstpl
add
imul
lahf
stc
push
sbbl
fadds
es
and
pop
sub
test
or
inc
or
jo
and
mov
push
jo
fistpl
adc
fmuls
stc
cmpsb
add
cmp
iret
xor
mov
imulb
repnz
jns
pop
popa
imul
cmp
aaa
inc
fs
ss
jns
push
in
lret
mov
insl
and
test
push
popf
divb
dec
sub
bound
mov
out
mov
addr16
movsl
in
mov
push
dec
xchg
pop
scas
sub
cmp
lea
std
lahf
jmp
orb
dec
inc
and
mov
xchg
int3
cwtl
hlt
xlat
sub
pushf
test
nop
loop
cmp
fwait
nop
or
pop
lods
enter
adcb
mov
addr16
pop
push
mov
aad
fisubrs
outsb
dec
shll
cmpsb
je
or
repnz
sub
jns
lods
into
sbb
subb
pop
xor
bound
jp
data16
add
scas
pop
in
in
mov
add
and
jp
push
mov
dec
xor
xchg
sub
repnz
mov
mov
imul
push
add
xor
add
out
mov
outsb
lret
addr16
int3
jo
mov
lods
inc
aas
shll
iret
jle
mov
mov
or
in
ljmp
pop
ss
sub
scas
rcll
ficomps
push
or
xchg
clc
repz
lock
pminsw
scas
xor
pop
cwtl
mov
sub
sub
mov
or
adc
lcall
popf
dec
mov
jbe
mov
and
sbb
cltd
fstl
sbb
jg
xchg
jmp
cmpsb
push
scas
lcall
or
pushf
adc
xchg
imul
xchg
pusha
add
pop
enter
sub
mov
test
mov
jl
sub
inc
loope
mov
dec
arpl
adc
add
flds
jbe
and
add
xor
bound
mov
inc
xchg
xchg
adc
xor
mov
dec
insb
aaa
jecxz
xor
jae
lea
adc
adc
int
inc
sbb
mov
cmpsb
sub
mov
test
test
fst
cmp
stos
adcl
ficompl
out
ljmp
pop
sbb
jnp
dec
jbe
dec
dec
fisubs
sbb
sbb
daa
das
jbe
lahf
imul
mov
cli
iret
dec
add
sub
push
cmp
leave
daa
out
fwait
inc
mov
pop
cmp
inc
icebp
xor
rcrb
mov
mov
jmp
enter
gs
xorl
mov
enter
shl
int3
dec
xchg
inc
cltd
sbb
das
lahf
dec
jae
cmpsl
fcmovbe
lods
fwait
mov
lret
jns
xor
movb
mov
jmp
test
fisttpl
repz
xchg
cli
pop
mov
pop
mov
sbbb
cmp
shll
inc
insb
lods
lods
cmpsl
orb
jns
dec
outsb
mov
dec
push
ljmp
iret
push
pop
cmpsl
add
cmp
in
fldlg2
xcrypt-cbc
cmpsl
xchg
and
inc
ret
pop
xlat
xor
push
sbb
sub
lds
push
cmp
sub
ds
scas
and
jle
notb
xchg
out
adc
add
xor
mov
cmp
mov
dec
sbb
cmp
inc
arpl
int
push
lods
mov
fcoms
in
xchg
jno
stos
inc
into
arpl
push
sub
shlb
jb
sub
cs
jo
mov
mov
test
fsub
and
int3
cmp
leave
push
fxtract
es
cmp
ss
icebp
pusha
dec
sub
shl
scas
inc
test
das
cmp
jge
or
test
out
adc
and
and
cmp
jmp
sub
adc
xchg
cli
mov
lret
push
lret
nop
xchg
stos
test
xlat
mov
jmp
or
inc
push
sbb
out
adc
leave
dec
pop
sbb
xchg
or
leave
add
imul
adc
dec
int3
xchg
xchg
les
push
xor
andl
mov
sub
loopne
push
lcall
push
pop
mov
sub
cld
ljmp
out
lds
or
cmp
jne
jo
jne
mov
push
add
into
inc
enter
jecxz
xchg
jns
mov
js
fxch
pop
roll
inc
test
jae
adc
roll
shl
test
push
inc
xor
xchg
enter
mov
xchg
sub
std
ss
ret
cltd
cli
pusha
mul
and
jge
inc
rcrl
pushf
inc
and
xchg
pop
vpcmpeqb
incb
push
mov
sub
cmp
pop
jnp
notb
xchg
push
nop
adc
jp
aad
pushf
out
cwtl
loop
insb
sub
stos
mov
icebp
mov
test
mov
add
push
jno
add
daa
imul
js
push
ds
out
mov
clc
mov
sahf
fsubrs
sub
outsb
or
push
push
ds
out
mov
clc
mov
sahf
fsubrs
sub
jbe
jp
push
imul
iret
test
cwtl
out
mov
clc
mov
sahf
fldenv
sub
js
push
incb
push
je
out
mov
and
xor
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
push
clc
inc
pop
jae
arpl
sbb
sub
roll
jecxz
xchg
movl
pop
jae
arpl
adc
push
xor
ja
test
xchg
xchg
addl
out
notl
inc
pop
jae
arpl
adc
dec
xor
insl
shll
adc
mov
xchg
mov
sbb
inc
jle
push
adc
stc
fdivs
cmp
xchg
jmp
sbb
lods
fcomps
push
xchg
xchg
and
mov
mov
inc
xchg
xorb
enter
jmp
dec
adc
push
dec
adc
fwait
roll
test
xor
xlat
or
sbb
push
push
inc
pop
add
adc
dec
mov
xlat
shrl
inc
lds
xchg
jmp
mov
mov
negb
fcomps
test
or
ret
or
xchg
jecxz
push
push
scas
sbbl
or
xor
cmp
jge
mov
pop
test
addl
cmpsl
scas
xchg
andb
pop
inc
add
arpl
xor
outsb
rcrl
jecxz
xchg
filds
xchg
adc
es
ss
dec
cmp
bound
xchg
out
out
nop
repnz
fdiv
stos
ljmp
jg
pop
and
xor
outsl
xor
and
mov
shl
shll
mov
cmp
jb
inc
bound
sub
push
xor
ja
xchg
xchg
repz
jecxz
xchg
movl
pop
jae
arpl
adc
push
xor
ja
xchg
xchg
repz
jecxz
xchg
movl
nop
enter
leave
jp
filds
aaa
or
dec
sub
cmpb
mov
daa
add
xchg
fcoms
test
sub
sbb
jne
mov
insb
push
ds
dec
sahf
outsb
cmpsb
stos
lret
aaa
aam
jmp
cmc
jmp
push
int3
ljmp
push
push
das
cmp
xor
or
mov
push
mov
xorl
test
scas
mov
sbb
xorl
cltd
cli
test
mov
xchg
insb
pop
ljmp
outsl
movsl
sub
add
inc
mov
insl
je
scas
push
out
stos
fwait
imul
push
pop
xor
inc
stos
ret
enter
pop
mov
or
jno
add
lock
test
stos
xchg
cmp
add
cmp
xchg
imul
ret
imul
sbb
fwait
bound
stos
out
fs
sbb
mov
ret
stos
lock
push
xchg
sbb
imul
out
mov
call
xchg
cmp
leave
jmp
repnz
xchg
inc
pop
aam
mov
das
mov
sbb
and
add
mov
cwtl
mov
in
in
pop
inc
cmc
lcall
or
inc
sub
scas
xor
xchg
lahf
scas
adc
addb
mov
xor
aaa
mov
lcall
xchg
mov
jns
sub
dec
and
das
cli
lock
sub
inc
das
cmpl
sub
bound
sbb
push
push
rorb
jb
lret
xchg
mov
push
mov
int3
mov
leave
cmp
cmpsl
mov
clc
adc
fadds
in
dec
lods
scas
add
or
out
out
test
leave
lock
loopne
lcall
jb
dec
mov
jo
ret
mov
icebp
sub
pop
std
ja
ss
mov
xchg
ds
xchg
adc
sti
int3
jg
xchg
push
dec
int3
cltd
lock
xor
shrl
xchg
dec
hlt
push
push
xchg
icebp
ret
andb
cmp
xchg
xchg
sbb
xor
and
cltd
mov
adc
rol
iret
push
adc
pop
dec
imul
push
xor
inc
lret
inc
aaa
aad
fstpl
mov
imul
jmp
clc
insb
cld
and
fwait
push
inc
lret
ljmp
inc
or
fdivrp
loop
and
aaa
cmp
push
add
dec
int3
prefetchnta
dec
ljmp
dec
add
aaa
lea
sbb
in
dec
in
sbb
xor
mov
stc
setnp
xchg
inc
xor
mov
push
mov
das
into
nop
mov
pop
movsb
pop
cmp
sbb
mov
into
sbb
adc
and
jge
shrb
and
sahf
lods
js
movsl
inc
cltd
jae
xor
sub
mov
aaa
and
add
push
imul
je
pop
ljmp
sub
adc
xor
mov
out
add
inc
fbld
out
mov
adc
cmpsl
add
aam
dec
xor
loope
into
jmp
and
push
test
mov
data16
data16
nop
addb
mov
inc
fnstsw
inc
and
mov
mov
in
sub
movsl
ret
cmp
insb
shl
cmc
add
test
xor
es
pop
jbe
jmp
xchg
stc
adc
mov
cmpsb
or
jno
lret
and
cli
js
dec
fdivs
inc
mov
cltd
mov
add
loopne
lods
cmp
int
push
and
mov
fwait
lcall
or
aas
or
mov
out
jecxz
sahf
pop
or
mov
enter
test
lahf
sub
sbb
loope
sub
sbb
enter
cmp
movsl
and
and
popf
fnstenv
cmp
mov
push
inc
sbb
cmp
fildl
mov
and
xor
mov
sti
pop
inc
cld
imul
in
xchg
out
lcall
aam
push
out
xor
dec
jle
inc
cld
lret
daa
mov
xchg
and
fstpl
mov
inc
add
xchg
test
sbb
fistps
push
movsl
cmp
out
add
xchg
pop
xchg
add
add
mov
and
rol
lea
jge
xor
xchg
movb
jmp
mov
dec
push
mov
jns
xor
mov
or
mov
sub
repz
mov
jg
repz
push
pop
popa
xchg
inc
mov
push
inc
push
and
and
loope
loopne
sbb
inc
push
cmpsl
psrld
insl
pop
add
iret
mov
and
aaa
aad
sub
jb
clc
fcomp
cmp
push
push
pop
xor
xadd
aad
sbb
sbb
clc
jbe
or
mov
and
cld
sti
sbb
pushf
xchg
test
xor
pushf
jnp
insb
mov
lret
andb
add
xchg
xchg
adc
in
xchg
jecxz
fisubs
call
push
mov
jnp
in
or
imul
mov
in
sub
sub
shlb
push
mov
insb
sub
jnp
dec
hlt
pop
mov
loop
in
and
mov
cmp
dec
push
add
mov
mov
popf
and
iret
or
jg
imul
pusha
sub
shrl
mov
mov
fwait
and
pop
push
pop
iret
cli
push
sub
into
adc
pop
dec
in
mov
mov
add
cmpsl
enter
mov
mov
dec
dec
jbe
dec
fdivrl
in
xlat
mov
mov
in
dec
inc
aaa
inc
imul
sahf
lds
rolb
cmc
cmc
sti
or
js
icebp
inc
lahf
lods
out
add
test
fmull
add
mov
fs
or
or
jae
pop
xor
lods
mov
ds
xchg
push
ret
popf
or
lea
push
push
clc
popa
push
cmp
js
mov
fdivl
sti
jp
icebp
xchg
mov
shlb
inc
dec
fidivl
dec
loop
cmp
sarb
or
loopne
dec
push
and
xchg
push
mov
outsb
aaa
pop
vandnps
cs
mov
inc
bound
fisubl
cmp
icebp
or
jns
cld
gs
xchg
in
stc
outsl
sahf
xchg
scas
das
and
adcb
faddl
clc
xor
or
sbb
nop
sbb
arpl
lock
lret
pop
daa
xchg
repz
xor
cmp
mov
mov
mov
cmp
imul
out
jl
shl
dec
pop
or
mov
adc
insl
movnti
and
mov
repnz
ficoms
jp
jbe
mov
lea
iret
xor
lods
ljmp
or
jno
pop
mov
inc
push
insl
xchg
jne
imulb
jb
in
and
add
rcrb
lods
push
mov
mov
mov
push
mov
loop
or
stos
popa
iret
push
jmp
mov
mov
test
xlat
cltd
mov
sub
cmpsl
sub
scas
or
enter
cli
fnstenv
cltd
sti
stc
js
test
dec
cmc
xorl
dec
inc
into
xor
pop
xor
test
popf
xor
xchg
sbb
in
lahf
shl
and
add
shrl
adc
xchg
pop
xchg
xchg
push
aaa
repz
pop
imul
andb
call
mov
loope
dec
jbe
dec
mov
dec
and
mov
outsb
xchg
jnp
and
lock
and
test
lock
test
ljmp
lcall
cmp
insl
or
xor
mov
scas
repz
popf
inc
in
jne
in
loopne
divl
and
or
mov
xchg
sub
jae
aam
test
xlat
xchg
inc
mov
jns
jge
add
enter
imul
into
push
mov
xor
adc
iret
stos
into
sti
movsl
or
mov
loop
mov
push
leave
pop
push
jl
or
mov
jl,pt
std
mov
or
into
rcrl
adc
loope
and
fwait
rcll
xor
inc
cs
shll
adc
mov
push
xor
xchg
dec
push
loope
and
mov
int
sub
test
adc
jp
lret
popf
mull
and
push
xchg
jle
scas
fistpll
in
jo
outsb
repz
or
xchg
lock
xchg
cmp
inc
dec
call
cwtl
stos
mov
inc
inc
xor
sub
mov
movsb
dec
in
sub
je
popa
popa
push
test
mov
aad
leave
push
or
jae
jno
mov
push
aaa
ss
ljmp
int
adc
pusha
xchg
xor
in
mov
sbb
xchg
cmp
inc
leave
inc
lcall
or
in
mov
adc
and
xor
xor
shrl
outsl
xchg
dec
sub
mov
mov
mov
mov
stc
rolb
push
xchg
pop
jg
sbb
jbe
scas
mov
fs
mov
daa
aam
rolb
sub
cli
in
cld
daa
out
xlat
insb
adc
jecxz
test
js
imul
jne
fmuls
insb
jge
js
xor
pop
mov
lods
pushf
mov
loope,pn
xchg
fsub
scas
roll
das
push
insl
cwtl
sbb
shl
nop
test
insl
subb
fidivrl
ret
xchg
imul
in
inc
add
jo
ret
or
call
mov
mov
sub
dec
imul
mov
fs
push
fnstenv
aaa
inc
jbe
subb
js
repz
pop
stos
inc
and
xor
mov
pop
rorl
fwait
aas
inc
xchg
inc
or
out
jb
fxch
xlat
cwtl
scas
fwait
fwait
leave
push
cmpb
test
movsl
pop
adc
lods
test
loope
stc
push
mov
pop
adc
fstp
xlat
sbb
jle
xchg
xsaveopt
lock
xchg
jl
repnz
xchg
movsl
mov
aas
cs
jns
mov
xor
shl
dec
adc
push
repz
out
dec
mov
lds
psubsb
and
or
pop
xor
fldl2t
int3
pop
lahf
xchg
or
call
push
bound
repz
nop
loopne
or
sub
movsb
mov
cmpb
dec
pop
add
mov
xchg
mov
sbbb
mov
mov
adc
xchg
movsl
sub
sbbl
out
out
out
adc
dec
imul
xor
sbbl
or
cli
inc
leave
mov
or
or
or
aad
jl
in
push
aaa
pop
inc
mov
es
data16
out
inc
sbb
hlt
mov
repz
push
jo
inc
mov
sbb
hlt
adc
loopne
mov
mov
cmp
add
mov
bound
mov
cmp
in
pop
addl
dec
pop
or
ret
sub
push
mull
cmp
mov
call
fwait
in
iret
ror
movsb
andl
outsb
pop
call
das
mov
popf
push
jb
add
sahf
jbe
mov
mov
imulb
pop
flds
xchg
push
jb
add
add
stos
mov
push
bound
sti
push
mov
cmpsl
cmp
arpl
push
adc
inc
pop
dec
lods
data16
movl
push
xchg
sub
loop
insb
cmp
arpl
xor
xor
cmp
inc
jle
add
lods
addl
inc
enter
pop
pop
pop
mov
jne
int
mov
fnsave
cli
or
xchg
xchg
pop
add
push
shll
jae
cs
pop
ss
sbb
sahf
ret
adc
add
cmp
pop
movsl
or
lahf
and
xchg
das
cmp
fwait
into
jmp
xor
ret
pop
xchg
loope
jle
xchg
divl
mulb
ja
xor
jmp
cmp
fsubl
cld
xchg
mov
cmpsb
shlb
mov
mov
icebp
mov
bt
pop
mov
pushf
push
je
sbb
hlt
cmp
jno
jno
ss
enter
mov
lret
js
mov
xor
pop
push
mov
pushf
push
dec
jbe
test
lea
gs
leave
int
sbb
adc
jns
xchg
movsl
call
arpl
mov
cmc
sub
mov
sub
cltd
jp
rorl
and
pop
shl
insb
cmpb
mov
sbb
xchg
mov
cmc
inc
divl
lahf
dec
mov
sub
add
mov
outsb
rcrl
adcb
adc
sbb
sbb
push
pop
jmp
xor
sbb
sub
sub
test
lea
mov
enter
sub
stos
stc
jge
xchg
iret
test
mov
xchg
cmp
or
arpl
iret
bound
stos
les
popf
push
jae
out
ret
cli
push
push
mov
mov
sbb
xlat
fldl
iret
mov
fcomps
mov
out
std
je
clc
sub
es
dec
mov
fisubs
pop
mov
dec
fisttps
cmpsb
inc
movsb
leave
popa
xchg
inc
test
paddusb
mov
test
fsubs
cmc
sbb
inc
dec
xchg
adc
or
sub
lcall
cmp
fisubrl
out
jb
push
scas
adc
into
call
loope
jb
mov
mov
push
jp
xchg
pop
shl
mov
mov
repz
sbb
lret
fiadds
faddl
repz
inc
xor
and
sbb
push
flds
pop
cmpsb
pop
repnz
lods
loop
add
rclb
dec
push
lcall
xlat
inc
movb
aad
inc
mov
ja
xchg
push
decl
dec
in
jl
fs
fbld
int3
xor
xor
div
movl
ja
fdivrl
sub
nop
das
js
in
mov
lock
std
addr16
movsl
ret
out
push
push
push
inc
popa
arpl
je
and
test
or
add
lcall
negl
sarl
sub
movb
je
sub
pop
push
jecxz
lods
in
jmp
push
mov
inc
outsl
cs
inc
push
insb
xchg
cwtl
fwait
cmc
mov
call
hlt
ja
xor
ljmp
sbb
inc
push
and
add
inc
mov
push
inc
lcall
loopne
mov
insl
bound
or
sub
xchg
add
and
adc
push
inc
js
jns
scas
push
fdivs
movsb
cmpl
stos
sbb
fiaddl
add
gs
testb
popf
pushf
rorl
pop
int
xor
push
xor
add
call
push
jne
aad
push
out
lods
enter
test
jae
icebp
mov
cmc
ficoml
adcl
jnp
pop
dec
sub
mov
dec
ljmp
fistpll
in
test
add
popl
dec
stos
mov
clc
adc
arpl
dec
stos
test
movsl
ss
xor
pop
inc
loop
imulb
lods
mov
mov
loope
mov
dec
ret
dec
mov
sbb
xor
xlat
dec
sti
push
or
mov
push
iret
mov
push
xor
sub
inc
mov
and
mov
sar
lahf
repz
inc
inc
fsts
ljmp
xor
das
popa
icebp
pop
test
push
push
and
sub
jae
ja
xchg
inc
jle
mov
movsl
pushf
sti
xor
inc
mov
icebp
mov
in
and
mov
in
inc
dec
mov
or
lock
mov
stc
scas
hlt
inc
sti
orl
mov
xlat
cmpsb
sub
cmc
mov
mov
ds
stos
iret
pop
push
mov
nop
incb
jge
mov
aas
or
mov
mov
fidivrs
insl
out
lret
gs
dec
rolb
push
jmp
cwtl
mov
cmp
rcr
fsub
lret
jbe
lds
in
cmp
jge
pop
jecxz
jmp
leave
cmc
clc
enter
adc
mov
xlat
mov
jge
pop
push
xchg
mov
int
xor
repz
fdivs
cmpsb
pop
jbe
and
adc
cltd
push
notb
jle
mov
mov
fcoml
mov
sbbb
cmp
add
pop
and
fs
jmp
or
jmp
xchg
xor
mov
mov
stos
sbb
sub
fisubl
enter
test
cmpsl
lret
xchg
jno
add
stos
pop
test
mov
cwtl
movsl
pop
cld
mov
sub
idiv
clc
cmovb
mov
push
push
pusha
pop
and
das
testl
into
ja
inc
ja
in
push
pop
jbe
sti
icebp
inc
imul
imul
or
mov
xchg
bswap
xchg
mov
add
insl
cli
lcall
push
repnz
loope
push
daa
cwtl
lret
push
dec
movsl
push
fmuls
inc
push
dec
jbe
mov
mov
xchg
jecxz
inc
and
shlb
int3
int3
or
xlat
jb
or
xchg
adc
mov
and
sbb
pop
sub
imul
stc
shrl
imul
xor
xchg
jne
movl
out
xchg
or
xchg
ja
inc
inc
or
icebp
mov
and
loopne
leave
xor
stos
add
insl
paddusw
mov
sbb
jp
cmp
jno
call
scas
loop
xor
lahf
cmp
xor
aas
enter
repnz
add
rclb
inc
push
in
arpl
in
loope
arpl
sbb
xor
loopne
in
xor
repz
adc
dec
sbb
jae
popa
xorb
std
ss
mov
mov
sbb
pop
scas
subl
mov
dec
cmpsb
lcall
imul
aas
enter
cmp
mov
inc
xchg
rcr
jmp
in
push
int
jecxz
or
ss
cmp
ds
mov
mov
or
les
loope
addr16
mov
cmc
mulb
mov
dec
cmpsl
fs
jge
popf
pop
mov
mov
pusha
rolb
or
xor
mov
jecxz
mov
pop
js
sub
jb
shrb
cmp
loope
rcl
in
mov
divl
lods
push
jb
xor
test
and
orl
and
mov
inc
jg
pusha
sub
rorl
adc
clc
clc
dec
test
jns
in
gs
cmp
addr16
fwait
enter
fstl
in
addr16
dec
test
lods
test
dec
rolb
inc
lods
adc
je
repz
leave
xor
mov
gs
add
xchg
outsb
jge
or
mov
and
clc
mov
repz
test
inc
mov
jb
loopne
aad
ds
push
xor
or
fnstcw
adc
outsl
xor
adc
inc
or
bound
out
pop
push
sbb
mov
pop
sub
shlb
or
mov
cmp
push
movsb
loop,pn
call
dec
lea
jo
dec
imull
adc
stos
xchg
sbb
jo
push
pop
dec
enter
or
sub
mov
out
stos
pop
adc
push
repnz
loop
lret
and
mov
repnz
sub
push
cs
fistpll
repz
pop
sti
cli
fwait
push
lods
and
rcrl
mov
push
scas
fdivl
mov
loop
sbb
adc
pop
jo
adc
add
adc
mov
test
mov
stos
mov
sbb
push
jne
stos
pop
repz
scas
cld
push
int
aaa
mov
jmp
lret
loopne
scas
pop
jg
cmp
insl
fmul
lock
ja
cmc
aaa
je
adc
or
jb
jp
fidivs
sub
jge
mov
push
jmp
in
aas
data16
inc
js
cmp
xchg
shlb
mov
test
mov
call
test
jb
and
inc
outsl
pusha
scas
cltd
xor
xor
xchg
cli
push
insl
fldcw
imul
test
push
imul
adc
mov
faddl
pop
shlb
cmpsb
xor
outsl
mov
fxch
cwtl
inc
or
adc
sarl
out
push
ret
push
adc
inc
fcoml
sbb
push
cmpsb
cld
mov
lahf
push
jge
andb
in
mov
xchg
add
xchg
jnp
mov
rcrb
fcomi
cmp
pop
jns
ror
arpl
adc
push
xor
ja
xchg
xchg
repz
jecxz
xchg
movl
pop
jae
arpl
adc
push
xor
ja
xchg
xchg
repz
jecxz
xchg
movl
pop
jae
arpl
adc
push
xor
ja
xchg
xchg
repz
jecxz
xchg
movl
pop
jae
arpl
adc
push
xor
ja
xchg
cmp
in
or
dec
sbb
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
stos
dec
sub
outsb
or
inc
dec
jge
push
cs
out
mov
sti
mov
sahf
lret
mov
sbb
jle
push
push
pop
cs
inc
mov
out
mov
cli
loop
sahf
fisubrl
sub
outsb
or
push
push
pop
cs
ds
pushf
out
lahf
cltd
fiaddl
int
cmp
pop
jle
cs
sbb
sub
fildl
lea
cmpsl
outsl
xor
jnp
gs
shlb
aas
xor
mov
pop
lcall
xor
mov
add
js
push
loopne
rcr
aas
imul
jne
inc
fwait
sub
std
or
jp
inc
out
jp
inc
pop
mov
xor
push
push
sbb
sarb
ds
repz
xchg
pop
inc
dec
push
shlb
fists
test
scas
xor
rcll
cpuid
mov
fistpll
push
pop
jmp
mov
int
scas
lret
stos
gs
sub
outsb
or
push
push
pop
cs
ds
out
mov
cli
mov
sahf
fisubrl
outsb
pop
jbe
inc
jle
imul
sbb
mov
fcomip
mov
mov
xlat
mov
cmp
inc
jle
bound
push
pop
inc
xor
test
cmpsl
loop
out
fwait
mov
cltd
lahf
mov
aad
dec
or
jns
sub
cmp
push
pop
cs
ds
out
mov
cli
mov
sahf
fisubrl
sub
outsb
or
push
push
pop
cs
ds
out
mov
cli
mov
sahf
fisubrl
das
ss
sbbl
jp
insl
mov
test
sbb
or
and
or
jecxz
repnz
pop
in
sbb
shld
aaa
sbb
data16
inc
adc
adc
mov
cmpsl
pop
faddl
mov
sbb
das
scas
mov
loopne
out
sub
cltd
icebp
insb
jno
cs
cmpsl
sub
mov
xchg
fsubrl
xor
adc
shr
arpl
jae
test
push
jge
sub
sbb
add
pop
vpand
dec
xchg
lcall
xor
push
jnp
lods
pusha
jmp
outsl
testb
mov
js
cmp
fsubl
icebp
and
je
mov
shll
xchg
mov
mov
out
mov
and
jo
xchg
inc
xor
adc
mov
repz
adc
jne
adc
jne
xchg
cmp
mov
fstp
std
push
inc
xchg
fcmovnb
negl
mov
das
rcll
stos
lock
sub
adc
dec
roll
clc
fs
js
lret
add
testl
push
xor
cmp
jo
jecxz
movups
ja
and
jl
arpl
xchg
xchg
int3
shlb
clc
int
hlt
stc
hlt
xor
out
cmp
jmp
sbb
pop
scas
cmp
ss
sub
dec
jecxz
js
and
aam
gs
les
mov
adc
mov
out
push
push
mov
adc
mov
lea
pop
or
inc
bound
imul
and
fidivrs
in
loop
mov
sbb
pop
mov
inc
loopne
cmp
xchg
enter
fmull
mov
mov
pop
mov
xchg
sahf
sub
xor
and
test
xor
adc
pop
mov
stos
sahf
mov
jge
inc
loopne
jmp
adc
mov
mov
jne
xchg
ljmp
lock
xchg
jbe
xor
mov
mov
loop
push
pop
push
push
xlat
data16
out
adc
and
xchg
xor
in
cmpb
jne
repz
std
fs
pusha
and
cmp
in
in
outsb
ja
xchg
lock
sbb
jae
std
jecxz
iret
loop
push
lcall
mov
mov
xchg
and
xor
and
adc
out
dec
push
call
pop
stos
cmp
xchg
cmp
sub
test
fisubrl
push
push
in
movb
fwait
sub
call
fisubrs
pushf
stos
mov
in
cmp
pop
mov
std
int3
insl
add
sar
rorl
mov
popf
jns
adc
inc
mov
dec
mov
in
adc
insl
fimuls
movsb
nop
mov
xchg
fsubl
dec
pop
jle
xchg
frstor
ret
mov
sub
adc
lret
xchg
adc
rol
ret
cmpsb
sbb
mov
adc
fadds
xchg
cli
push
pop
cmp
push
and
xor
pop
jl
jbe
clc
inc
imul
inc
repnz
repnz
addb
mov
adc
and
or
inc
or
pop
push
inc
xor
sbb
into
pusha
push
cwtl
push
sbb
scas
sub
stos
je
sub
out
pop
adc
test
mov
cmp
xchg
jae
arpl
inc
pop
sbb
pop
add
jmp
mov
xorl
xor
outsl
xchg
cmpsl
jo
scas
pmulhw
bound
push
rcrb
jle
adc
push
call
movsb
rcl
popf
lea
pushf
pop
imul
gs
rcrl
out
es
das
pop
push
pop
aam
lret
ret
lahf
jge
stos
out
xor
and
jle
mov
and
mov
dec
add
lret
js
lahf
or
pop
xchg
jo
mov
inc
in
push
mov
mov
enter
push
pusha
jae
sbb
insb
outsl
pop
pop
sub
fcoml
jg
cmp
cmpb
rcrb
pop
xchg
mov
out
ret
fimull
les
pop
lods
iret
lret
xchg
mov
xchg
les
mov
rorb
leave
pop
lcall
push
or
in
and
cmp
xchg
mulb
lcall
cmp
mov
mov
cmc
sub
mov
or
ja
dec
pop
mov
cmp
mov
out
mov
sbb
js
push
lret
ss
push
mull
jno
jp
lock
push
movsl
inc
jle
jo
movl
or
xchg
loop
lret
imul
cli
sub
xchg
nop
fidivrl
sub
pop
dec
add
xor
and
mov
pop
in
or
loop
sbb
adc
xchg
gs
pop
dec
shrl
add
cmc
cmp
scas
or
jecxz
enter
mov
and
scas
xchg
out
aaa
mov
loope
or
rcr
cs
call
scas
jl
cs
pop
mov
test
mov
rcr
sub
test
daa
lea
dec
adc
adc
xlat
dec
sbb
mov
test
outsl
nop
mov
sbb
mov
cmpb
loope
jmp
add
and
lods
cmp
jle
push
sub
inc
jns
adc
push
sub
or
pop
or
les
jmp
sti
or
negl
aas
and
cmpb
mov
fcomps
stc
clc
mov
addl
mov
mov
inc
inc
mov
loopne
fs
lret
sbb
mov
leave
call
cmp
in
scas
popa
mov
inc
pop
test
sub
in
add
or
int3
outsb
aaa
imul
sti
jns
mov
sub
cmpsb
mov
stos
andb
or
push
imulb
push
sub
xor
push
pop
inc
push
cwtl
sbb
xchg
scas
dec
fmul
inc
fstpl
add
lods
inc
pop
inc
aas
push
push
jmp
enter
xor
xchg
scas
imul
xor
inc
cmp
divl
andb
sbb
inc
xchg
cli
inc
cmpb
xchg
inc
ss
aam
vpacksswb
push
stos
xchg
push
ret
cmc
jns
lods
xor
aaa
ret
pushf
jge
sbb
adc
dec
fisttpl
jno
add
imul
mov
jg
in
sbb
hlt
xchg
xlat
fisttpll
outsb
mov
addb
jo
bnd
mov
sbb
adc
xchg
push
add
subl
pop
cwtl
subb
sub
loop
int
andl
cmp
fldcw
sub
jl
nop
adcb
aad
add
stos
sbb
jns
mov
inc
mov
data16
loop
push
jmp
jle
aas
in
loope
popa
push
mov
pop
adc
mov
add
and
and
mov
push
jne
out
xchg
pop
xchg
mov
push
iret
je
pop
sub
pop
test
fdivl
loop
pushl
sbb
or
adc
inc
lahf
pop
cmpsb
inc
xchg
insb
mov
and
dec
xchg
and
sahf
popf
jno
mov
inc
mov
jae
mov
inc
and
add
movsb
outsb
cld
pop
cmp
dec
stos
xor
jecxz
sbb
mov
imull
in
ret
and
and
aas
adc
into
rorl
xchg
fsubrs
cmpsb
test
xor
mov
loop
mov
dec
aad
push
outsl
mov
movsb
mov
ja
test
pop
jns
jno
out
xor
fstpl
add
xor
fistpl
fidivrl
insl
adcl
xchg
aam
and
lds
sbbl
xor
xchg
inc
push
test
jecxz
pushf
xor
push
sahf
jecxz
lcall
add
cli
in
and
sti
es
js
ds
dec
in
fld
aam
mov
adc
push
lock
fidivl
and
push
sbb
mov
test
pop
sbb
lock
es
call
xor
sub
mov
hlt
aas
add
insl
mov
pop
pop
sbb
mov
sbb
push
sub
push
int
jo
in
or
clc
xchg
jp
sbb
pusha
adc
push
dec
or
lahf
lret
clc
mov
xchg
push
xor
shr
cs
adc
adcb
mov
pop
ss
enter
imul
sub
out
xor
mov
aad
xor
jle
jmp
daa
sbb
out
into
lret
inc
int3
sbb
sbb
lock
xchg
and
jae
xchg
pop
xchg
push
fadds
test
inc
mov
push
daa
dec
mov
leave
es
cmp
roll
test
fwait
in
inc
cli
push
cmp
or
nop
mov
hlt
lock
sbb
sub
lret
jnp
xor
out
imul
stc
out
xchg
mov
jnp
push
xchg
cmp
ljmp
sub
or
sub
lret
lea
xchg
cmp
add
mov
fcomi
out
ret
inc
repz
cli
jbe
xchg
xorb
shll
adc
sub
add
sub
xchg
sahf
outsb
adcl
xchg
pop
cwtl
out
xor
mov
jb
xchg
dec
es
mov
sahf
lret
inc
in
sbb
add
and
divb
mov
aas
cwtl
dec
xlat
lock
jns
sbb
loopne
cli
imul
inc
pop
jnp
or
add
jno
jbe
mov
sub
data16
bound
mov
push
and
add
pop
pop
jns
sbbb
arpl
daa
shll
and
rcll
add
sti
cs
icebp
cmp
out
out
test
mov
adc
adc
jns
mov
cmpsb
cs
repz
cmp
ja
imul
dec
aas
call
fisttpl
outsl
lcall
xchg
std
ljmp
xchg
test
push
cmp
inc
or
aad
andl
movsl
aad
stos
sahf
popf
cmc
push
xor
and
lock
mov
sbb
xchg
outsl
test
call
icebp
jmp
mov
mov
push
adc
imul
sti
nop
dec
mov
adc
push
lock
and
cltd
and
sti
fs
andl
fcomp
lods
xor
in
push
lods
ficompl
sub
dec
sub
jle
fndisi(8087
mov
lcall
sub
jne
pop
xchg
mov
fisubs
xlat
sbb
jp
outsl
mov
popa
lds
mov
cmp
push
pop
inc
mov
pop
inc
aad
adc
shlb
daa
jmp
mov
push
xchg
push
imul
pop
leave
clc
das
mov
mov
pop
pusha
add
jno
cmc
aam
add
testl
push
movsb
mov
lahf
leave
inc
cltd
or
or
push
das
movsb
repnz
jno
scas
or
ss
fidivrs
sbb
jl
lock
mov
adc
sbb
add
insl
jge
sbbl
jbe
test
lcall
loope
in
fmull
jae
mov
iret
add
inc
sbb
aad
div
inc
notl
stos
loope
sbb
add
or
dec
push
mov
pop
adc
arpl
xchg
and
xchg
je
hlt
mov
fcomi
dec
ds
lahf
cltd
es
push
sub
repnz
icebp
push
xlat
insb
adc
push
add
xlat
dec
push
jmp
cld
pop
or
lods
lret
aad
sbb
push
sub
inc
popf
mov
lock
adc
mov
orl
mov
rcr
loop
lods
add
dec
ljmp
sbb
jmp
enter
vfmsub132ps
jmp
and
es
movl
cmpsb
imul
xlat
leave
add
leave
mov
xor
stc
xlat
dec
adc
cmpb
sbb
lock
and
fsubl
mov
pop
lahf
es
inc
imul
jb
sub
cmpsl
mov
rorl
mul
xchg
and
cwtl
iret
insb
pop
cld
dec
sub
mov
push
in
dec
and
mov
dec
int3
bound
mov
out
in
ss
push
dec
pushf
sub
xchg
lret
xor
hlt
lret
ds
mov
adc
pusha
shlb
and
push
sub
adc
loope
jns
test
sub
mov
jecxz
scas
adc
inc
pop
add
and
xchg
jne
iret
jge
imul
jo
sbb
xor
dec
cmc
cmp
dec
jno
pop
pop
leave
inc
xor
sub
lahf
cmp
jae
lea
jno
inc
sbb
pop
ljmp
cmpsl
add
mov
cmpl
lahf
mov
adc
cmp
xchg
add
scas
iret
jp
jnp
test
push
in
mov
hlt
fwait
pop
leave
imul
lret
inc
sbb
ljmp
dec
or
dec
shrb
call
xor
sahf
lret
in
andl
addr16
fisubrs
cmpl
lods
sub
xchg
cli
in
sbb
lahf
push
int3
js
cmc
mov
pop
dec
jbe
and
mov
cmpsl
xor
incb
jg
jge
stc
push
shrb
addl
sbb
jmp
push
dec
popf
mov
sub
into
dec
dec
shlb
inc
jbe
mov
push
adc
jno
push
nop
call
push
lods
insl
xchg
sti
sub
data16
dec
fistl
add
aad
ficoms
push
and
sub
sub
lcall
test
dec
test
mov
mov
popa
sbb
dec
lea
call
nop
push
adcl
jmp
sbb
sub
nop
xchg
je
lcall
pusha
nop
inc
adc
adc
sbb
gs
insb
bound
and
imul
pop
xchg
out
xchg
adc
lcall
pop
cmp
xchg
mov
ljmp
rclb
outsb
jge
mov
mov
mov
incb
xchg
adc
cmp
popa
mov
sti
inc
in
mov
add
icebp
adc
mov
and
ja
cld
bswap
push
sbb
mov
dec
ljmp
ljmp
sbb
js
std
mov
push
jns
aaa
sbb
add
sub
cld
out
xor
inc
push
mov
xchg
arpl
mov
mov
sub
sarl
iret
mov
cmp
and
pusha
fcompp
mov
pop
icebp
fstp
mov
repz
pusha
push
dec
adcb
fistpl
fs
xor
pop
pushf
cli
subb
adc
ret
mov
lahf
enter
cmpsb
dec
jno
lods
jle
leave
aam
jns
ret
mov
xchg
stos
into
fwait
and
mov
cmpsb
push
lret
mov
mov
nop
sub
sub
jg
sub
adcb
std
fildll
daa
dec
inc
push
ss
pop
call
ss
sbb
scas
jmp
cmp
cwtl
in
scas
add
cli
dec
repz
jbe
cmp
mov
dec
cmp
aas
loop
jne
data16
cmp
psubq
or
push
push
sbb
xchg
push
mov
or
sbb
push
jns
add
dec
addb
cli
fwait
add
repz
les
aaa
cmp
inc
adc
pop
repnz
mov
jbe
out
leave
lds
xchg
mov
xor
push
fisubl
inc
iret
jg
loop
and
pop
out
fmul
mov
sub
mov
cmc
dec
sub
add
xchg
adc
mov
cli
movsl
xor
bound
fistpll
orb
mov
cli
fbstp
test
ficomps
mov
push
das
test
ljmp
add
ret
imul
aam
xchg
dec
outsb
and
test
or
adc
inc
pop
hlt
pop
mov
dec
jge
and
aam
pushf
cmp
xlat
cmc
xchg
xchg
xor
je
adc
mov
std
push
cmp
xchg
pop
shrl
xlat
int
adc
jae
out
fwait
adc
xchg
out
and
stos
aad
mov
pop
outsb
imul
pop
fstpl
add
test
add
ret
pop
add
push
push
adc
mov
or
sahf
mov
pop
outsb
or
popa
ds
jg
jne
ret
adc
nop
xor
mov
stc
mov
test
jmp
mov
xchg
in
sarb
and
insl
popf
into
cmpsl
pop
inc
lret
xchg
ss
mov
or
add
sbb
adc
dec
fwait
lock
jecxz
mov
call
jg
push
jae
aas
aad
ret
ret
cmp
pop
loopne
adc
lods
imul
push
sbb
and
into
iret
setge
adc
je
pop
pop
dec
rcrl
fs
cs
ljmp
int3
and
mov
pop
cmp
sub
fadds
sub
iret
or
mov
lret
push
fsubr
add
roll
cmpsb
jecxz
fcmovne
mov
push
fildll
mov
adc
and
adc
jmp
inc
cmp
rolb
fsincos
movsb
inc
and
push
outsl
add
loop
sbb
pop
jae
pop
rclb
loop
notb
in
scas
rorl
pop
shrl
jp
sub
aas
das
stos
into
ret
jbe
inc
xchg
sahf
or
out
lds
inc
sti
frstor
mov
jecxz
inc
pop
adc
xor
sbb
cmp
and
lods
mov
loop
hlt
movsb
fs
or
xor
orb
repnz
ds
mov
pop
mov
mov
or
mov
or
stos
dec
scas
sbb
cwtl
jne
dec
pushf
ljmp
add
rorl
push
movsb
int3
je
ds
ret
mov
in
jne
xlat
lcall
in
sub
lds
aas
hlt
mov
pop
mov
movsl
mov
cltd
push
in
push
jecxz
mov
mov
popf
lahf
push
adc
cwtl
xor
cmpsb
mov
sarb
test
and
out
in
jp
inc
shlb
mov
mov
into
push
pop
adc
call
pushl
xchg
ljmp
push
push
or
pusha
fmuls
or
inc
and
frstor
decb
mov
pop
jl
push
cmp
pop
test
sbb
hlt
lods
jp
mov
jl
adc
or
imul
popa
and
pop
fwait
cli
jno
ja
push
ret
add
inc
stc
sarl
mov
insl
xchg
ret
mov
addl
test
ja
sahf
clc
mov
ficoms
call
int3
out
pop
adc
lods
mov
pop
jp
test
mov
sbb
hlt
popf
aam
xchg
repz
andb
adc
je
xchg
push
adc
jno
loope
jne
sub
push
fs
data16
xor
lahf
push
das
mov
jae
aaa
outsb
add
dec
lds
push
leave
mov
add
pop
jle
jns
mov
stos
mov
repz
dec
aam
push
ja
loope
xorl
push
ret
or
jmp
fidivl
adc
in
fdiv
xor
lds
cli
sub
sbb
mov
mov
and
cmpsl
mov
add
iret
push
push
mull
mov
stc
enter
cwtl
shll
imul
int
js
jae
push
scas
push
jae
push
lods
push
and
int3
or
push
push
and
xchg
inc
inc
adc
popa
jecxz
fildll
loop
lret
lret
outsl
push
inc
es
pusha
dec
push
in
jbe
mov
nop
aad
cmovnp
sub
add
fmull
clc
sub
rorl
or
rclb
xor
inc
js
sti
int
out
and
pusha
sti
das
lock
jge
sub
inc
fnstenv
mov
dec
jno
fdivs
jmp
xor
cmp
jno
mov
jne
dec
dec
mov
jmp
int3
push
push
xor
and
addr16
or
dec
xchg
xchg
sbb
testl
mov
scas
aaa
scas
test
rorl
push
pop
nop
ficompl
call
add
push
loop
xchg
jb
add
sub
cmp
outsl
push
pop
mov
push
push
pop
cs
ds
out
mov
cli
mov
sahf
fisubrl
sub
outsb
or
push
push
pop
cs
ds
out
mov
cli
mov
sahf
fisubrl
sub
outsb
or
push
push
pop
cs
ds
out
mov
cli
mov
sahf
fisubrl
sub
outsb
or
push
push
pop
cs
ds
out
mov
and
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
fwait
sarl
loope
icebp
push
sahf
cmp
adc
scas
push
mov
add
push
mov
sarl
rorl
icebp
push
subl
pop
dec
scas
push
mov
add
adc
and
xor
fsubrs
enter
jmp
jle
dec
cmpsb
pop
inc
nop
pop
loop
incb
lcall
rorl
push
repnz
dec
mov
test
popf
leave
jne
in
sub
pop
shll
jle
pop
loope
inc
xchg
outsb
adcl
scas
ficomps
cs
jne
into
mov
call
iret
cmp
filds
scas
inc
xor
push
int
xor
fists
rol
aas
add
jp
movsb
outsl
test
cmpsl
mov
jne
cmp
test
fdivr
and
test
shrl
xorl
jb
lods
stos
adc
and
jl
cmp
sbb
test
scas
sahf
mov
rcll
or
fiadds
sarl
loope
out
xchg
outsb
mov
dec
test
pop
scas
dec
mov
sbb
or
and
sub
test
pop
in
cld
aas
mov
ret
adc
pop
lock
xorl
dec
push
mov
test
repz
cmc
or
push
int
hlt
pop
inc
jmp
shlb
add
andl
test
jecxz
test
push
add
pop
inc
scas
push
mov
add
adc
and
xor
shrl
loope,pt
icebp
push
subl
pop
inc
scas
push
mov
add
adc
and
xor
shrl
sub
stos
push
mov
xlat
mov
sarl
inc
frstor
xchg
dec
shll
mov
sub
mov
ja
jnp
jns
loope
xchg
adc
and
or
adc
shll
and
xchg
push
push
sahf
stos
decl
hlt
fs
and
xchg
jl
addr16
and
mov
bound
mov
mov
rorb
pop
pop
aad
sbb
inc
jb
mov
add
iret
mov
jo
push
mov
cmp
les
insb
adc
cmpsb
sub
arpl
loopne
test
xchg
mov
lods
push
dec
aaa
sub
inc
repnz
jge
idivb
lahf
adc
movsl
es
mov
cmp
push
push
sbb
xchg
incb
mov
loopne
es
push
pop
xor
sub
sub
out
cwtl
jle
out
mov
mov
sti
mov
mov
or
das
repnz
hlt
test
in
sbbl
fisubrl
inc
adc
jg
fsubrl
mov
cmp
dec
int
mov
push
test
enter
hlt
test
jae
aad
sbb
popa
mov
cmp
add
pop
cmp
in
std
jle
aaa
out
out
out
mov
pop
push
sbb
das
adc
push
shll
sti
testb
xor
jg
mov
rol
or
shl
adc
adc
xor
pop
scas
neg
jnp
popa
cs
jns
dec
rcll
lods
pop
xchg
push
addb
gs
mov
jmp
dec
loope
lock
cli
sbb
add
or
sbb
jge
mov
repnz
int
aaa
insb
cmpps
loopne
fdivr
ret
push
fldl
sbb
lds
test
call
pop
push
push
cmp
loope
stc
sub
mov
inc
jle
lea
out
or
popa
nop
dec
or
ret
nop
pop
testl
jns
cmp
cmp
or
adc
stos
shll
aas
inc
inc
enter
mov
loope
adc
fwait
call
mov
sarl
inc
adc
cwtl
div
sahf
ja
je
pusha
popa
pop
lods
sub
inc
daa
inc
test
in
in
loopne
xchg
push
mov
data16
rorb
fists
mov
mov
inc
xor
jle
mov
incl
dec
fwait
ja
dec
sub
cs
scas
jle
jle
mov
shrl
rolb
hlt
lcall
jl
push
repz
scas
cld
stos
mov
cs
loop
cmpsb
mov
ret
in
mov
cmp
xchg
jp
cltd
and
lahf
data16
sub
xorl
leave
xor
add
cwtl
cwtl
aam
xor
sahf
cmc
das
pop
xor
mov
shlb
dec
scas
pop
test
stos
test
pop
psrlw
test
scas
mov
mov
stc
roll
mov
jecxz
jno
out
pop
int
adc
imull
jg
jecxz
clc
add
jge
cmpsl
lcall
push
inc
jp
push
daa
clc
lea
xor
lcall
orb
dec
inc
jecxz
in
enter
xchg
jne
not
inc
jo
mov
shlb
xchg
pusha
pop
xchg
leave
test
xchg
cmp
and
fs
rcr
pop
mov
jg
sbb
mov
popa
sub
cmp
ljmp
push
cmpsb
mov
jl
in
sahf
mov
fcomi
pop
cltd
xchg
dec
jne
adc
aaa
dec
mov
cltd
stc
mov
out
add
aad
daa
dec
imul
sbb
mov
sub
push
cmpsb
sub
pop
stos
pop
clc
insb
jb
or
jle
mov
and
insl
into
push
lahf
out
popa
stc
xor
xchg
dec
in
jo
push
icebp
int3
js
fwait
mov
pop
into
or
or
and
mov
xor
fisttps
add
add
pop
add
sub
jg
push
dec
cltd
mov
inc
adc
adc
lcall
sbb
ja
sbb
jnp
xchg
push
mov
add
es
loop
roll
pop
into
mov
xor
rclb
js
js
mov
cmp
enter
sbb
daa
mov
sub
xor
pop
outsl
les
jne
pop
rclb
je
push
mov
mov
cmp
cld
mov
dec
les
or
sar
testb
daa
jbe
insb
lret
and
popa
jle
cwtl
sub
nop
aam
test
jle
sub
or
mov
testb
out
mov
mov
add
sbb
fsubrs
jl
aaa
push
adc
jle
sub
xchg
shlb
or
and
jnp
pusha
aam
bound
inc
mov
vmread
leave
xchg
xchg
mov
cmc
pop
pop
lahf
or
xor
subl
sarb
push
sbb
adc
mov
mov
jno
push
ja
xor
xorb
inc
or
arpl
jmp
lahf
jmp
test
fnstenv
jmp
notl
repnz
loope
mov
mov
cwtl
push
push
rcrb
inc
mov
xchg
ja
rep
inc
cld
decb
cmp
xor
sub
xor
cmpsb
jae
inc
pop
cmc
bound
adc
scas
arpl
adc
scas
pop
out
or
mov
mov
in
outsb
dec
xchg
mov
xchg
out
cs
mov
mull
sub
mov
sti
insl
cmp
cmp
icebp
jb
mov
dec
add
push
jecxz
add
out
pop
jb
call
dec
loope
ds
xchg
adc
outsl
adc
mov
loope
test
cli
enter
fbld
loope
dec
sub
aas
sub
push
jecxz
daa
cltd
sti
enter
mov
inc
pop
testl
adc
add
pop
std
ret
notl
ret
fwait
sub
movsl
cmp
out
xchg
pushf
test
or
mov
push
cmp
cmp
dec
dec
mov
pop
xor
shr
jo
stos
sub
cmp
push
mov
sti
je
mov
popa
pop
mov
in
jb
ljmp
mov
in
loopne
push
aaa
xchg
lea
adc
int
je
jg
pop
mov
insb
sbb
outsb
cmc
fsubrl
nop
add
pop
jg
xor
fmuls
lods
div
dec
in
outsb
rcrl
jb
adc
pop
shll
mov
or
and
and
mov
rcrb
pop
inc
mov
inc
or
adc
aaa
pusha
or
mov
ret
loop
ss
bnd
lods
jnp
push
fnstenv
add
sub
add
cmp
rcrb
push
inc
sub
fidivs
and
fcmovnb
add
mov
cltd
or
movsb
adc
mov
gs
xor
inc
mov
in
sub
mov
fdivrl
pop
mov
cs
lret
mov
das
pop
add
sub
inc
dec
push
or
sbb
jae
xchg
imul
test
data16
or
out
insl
jl
ja
pop
out
push
jo
leave
push
sbb
xchg
in
je
sbb
sub
mov
cmpsb
xchg
push
cmpsb
in
mov
sbb
mov
xor
xor
js
lcall
jne
lods
out
outsb
outsl
out
iret
push
in
xor
jge
jbe
lock
push
ds
repnz
sub
mov
mov
cli
push
xchg
cmp
pop
and
int3
xlat
in
sub
jb
es
xchg
xchg
xlat
sub
sbb
sarl
es
push
dec
aad
mov
push
aaa
jmp
pop
rcrl
jp
sub
int3
dec
dec
or
inc
fwait
insb
out
xor
xor
pushf
cmc
jns
lretw
das
lahf
inc
bound
ret
into
fmull
std
push
cli
test
hlt
jg
or
sbb
mov
jg
cltd
loop
adc
in
jo
mov
xchg
add
test
mov
js
shrl
cs
push
xorb
sub
push
and
cwtl
punpcklwd
fnstenv
push
in
mov
inc
push
xchg
or
test
xchg
xchg
out
test
push
jg
adc
cmp
sarl
cmp
pop
into
fiaddl
sbbb
fcoms
addr16
clc
sbb
jg
pop
add
adc
lock
test
into
adc
mov
mov
sbb
std
jl
cltd
jl
les
lret
push
cmpsb
test
mov
addr16
ficompl
ljmp
dec
out
aam
bound
lcall
repz
cld
lret
and
les
mull
cli
scas
arpl
lahf
pushf
mov
std
xchg
out
aam
arpl
dec
shlb
outsb
push
cli
and
out
adc
test
outsl
pop
cmp
adc
into
jp
aaa
sub
push
inc
mov
pop
sbb
pop
and
jns
fidivl
and
fmul
aaa
push
mov
xchg
add
mov
lret
add
push
add
jg
xor
rolb
xchg
cltd
cmpsl
test
test
adc
mov
clc
fists
out
adc
loop
mov
in
push
and
js
dec
out
push
jecxz
les
mov
cmp
ds
mov
mov
stc
inc
xchg
insb
fwait
in
fistps
inc
sbb
dec
popf
dec
jl
and
insb
sti
dec
jecxz
stc
mov
xchg
sbb
lea
mov
sub
loopne
shr
dec
adc
int
and
xor
or
jle
xor
push
cmp
cmp
pop
pop
push
pop
lds
movsl
sbb
hlt
int
cmpsl
mov
push
mov
insb
xor
je
cmp
pop
outsl
pop
inc
xor
dec
dec
arpl
cmp
imul
fcompl
sbb
adc
xchg
xchg
push
mov
pop
xchg
aam
data16
leave
aas
cmp
jecxz
pop
int
jb
inc
xchg
inc
or
add
pop
jmp
hlt
shlb
inc
hlt
cmp
sahf
into
add
loopne
xlat
lea
cld
xchg
into
movsl
and
jg
popf
outsl
dec
cmpsb
jnp
jo
adc
es
std
fidivrs
andb
test
lret
push
push
ror
mov
cmpl
and
add
fistpl
ficoml
lret
or
divl
pop
push
jle
repz
push
arpl
hlt
fsts
jg
lods
into
leave
in
push
pop
testl
ret
sbbb
insl
push
push
push
mov
into
sarb
mov
into
add
outsb
cmp
and
das
inc
mov
jp
fidivl
std
add
aas
scas
push
xor
into
dec
mov
cmc
xor
mov
stc
push
sub
sbb
fidivs
iret
addr16
ret
int
in
fisttpl
sbb
rclb
call
mov
fmuls
mov
inc
subl
test
or
shll
dec
jg
daa
or
rcr
mov
push
loop
test
xor
mov
jbe
inc
sub
sbb
fnstcw
pop
icebp
xor
or
xorl
add
sti
out
cmc
push
out
mov
adc
or
inc
mov
call
cmp
shlb
fsubrl
mov
xor
cmp
cmp
shrl
sub
loop
inc
jp
sbb
pop
test
add
add
sysexit
test
dec
sub
aad
push
lods
mov
cld
shll
and
arpl
lock
jge
jge
jno
jp
xlat
mov
mov
mov
adc
inc
cmpsl
xor
fsub
iret
push
dec
add
inc
mov
fs
xchg
repnz
movb
sti
mov
cld
xchg
adc
jge
adc
aad
cmp
pop
sub
sub
invd
and
cltd
inc
out
inc
in
repnz
dec
xchg
leave
sub
int3
jnp
push
xor
nop
orb
sbb
out
mov
mov
testl
push
movsb
mov
or
xor
xor
test
icebp
and
insl
sbb
inc
inc
sbbl
fxch
xchg
faddl
adc
pop
push
fmull
ja
test
add
add
pop
pop
jb
popf
pop
mov
dec
xor
pushf
fldenv
xchg
clc
inc
jmp
inc
xchg
lret
cmp
push
xchg
idivb
mov
mov
adc
xchg
clc
testl
xor
sub
or
imul
jnp
adc
fidivl
out
add
mov
movsl
das
cmp
loope
mov
loop
sbb
mov
and
dec
and
scas
sbb
stc
sbb
sahf
sbb
int3
mov
jne
in
loopne
mov
push
inc
mov
mov
push
jno
fnstenv
imul
lret
xor
jge
adc
cmp
sahf
push
push
aad
push
out
xchg
push
aad
jae
dec
imul
test
aam
cmc
sbb
imul
push
push
hlt
fiaddl
movsl
or
mov
jb
push
or
nop
in
jecxz
dec
sub
sub
inc
and
in
sub
fcomi
push
daa
pop
shll
clts
cmp
mov
int3
cs
in
or
inc
test
xchg
sub
xlat
imul
fnstcw
cmp
mov
push
flds
mov
inc
je
jne
dec
adc
xor
mov
push
sbb
push
add
sarl
add
and
lcall
adc
sbb
jp
frstor
movsb
xor
adc
sbb
cmpsl
sub
gs
dec
lods
jecxz
rcrl
iret
addr16
stc
sbb
psrld
insl
add
adc
adc
sahf
cs
rcrl
rcrb
mov
ret
cmp
lret
dec
lock
or
cld
sbb
sub
lret
mov
dec
sub
fdivrl
push
xchg
dec
aad
movsl
mov
mov
bound
mov
fcoml
mov
lret
jecxz
and
sub
xor
sbb
ficomps
jno
cmpsl
mov
test
fstpl
cmp
test
inc
pushf
cmp
pop
hlt
hlt
xchg
ja
sbb
mov
test
or
cmp
mov
inc
enter
es
sbb
iret
dec
pop
cmp
movsl
repz
mov
push
loop
stc
sbb
iret
pop
scas
into
shl
xor
pop
jle,pt
push
scas
xchg
or
arpl
sub
pop
inc
js
leave
daa
inc
and
or
es
mov
push
sub
xor
or
subl
inc
push
ret
or
xor
arpl
insb
xor
or
jb
mov
push
pop
pop
jo
pop
fistpll
lods
lcall
dec
jo
into
xchg
xchg
dec
clc
int
insl
cmp
add
xchg
push
cmp
cmpsl
in
jae
and
icebp
mov
ss
jne
pop
lods
xor
push
clc
in
fs
cmp
add
pop
je
inc
dec
in
test
xchg
int3
dec
and
dec
aas
lds
push
cld
sbbl
int
mov
cmove
out
iret
xchg
dec
loop
sbb
dec
outsb
loope
mov
pop
int
xchg
pop
and
adc
xor
cmp
mov
dec
imul
xchg
stc
leave
dec
inc
cmp
push
cmc
and
orb
push
cmp
je
jae
pop
leave
sbb
cmc
xchg
push
cltd
jle
lret
jno
mov
shll
popf
jno
push
test
das
les
or
sub
sub
mov
sub
sub
push
int3
ja
sbb
ret
jno
imul
xchg
sub
xchg
inc
loopne
mov
inc
mov
mov
shll
fists
cmp
pop
gs
shrb
pop
iret
rclb
mov
clc
jo
insb
jo
push
push
les
flds
jns
jl
add
push
jmp
lea
popf
movsb
icebp
jbe
cs
mov
mov
dec
call
int3
jmp
xchg
push
or
xchg
xchg
pop
cli
leave
mov
cmp
sbb
dec
clc
push
hlt
xchg
into
adc
sbb
pop
fsubs
jnp
mov
xchg
lds
pop
rcrb
push
and
lods
loopne
test
mov
add
fstp
in
shll
pop
nop
dec
or
pop
and
mov
aas
xchg
xchg
subb
in
outsb
adc
mov
jns
and
movsb
push
imul
fnstsw
cmp
mov
push
fsubs
and
in
inc
cs
cmpsb
jb
adc
mull
cmp
mov
fidivrs
pop
and
sbb
clc
add
imul
movsb
xlat
shl
lods
leave
in
cmp
outsl
sbb
int3
mov
cltd
enter
mov
adc
pop
push
cs
mov
das
sbb
idivl
mov
decb
sub
lcall
out
call
movsb
jnp
test
aaa
sub
xchg
arpl
insl
dec
mov
jb
dec
outsl
pop
fnsave
aas
or
add
repz
cmp
mov
lret
xchg
cs
nop
flds
inc
jae
xor
fcoml
sub
adc
fs
in
sub
xor
loop
sbb
sbb
imul
or
lods
ja
jae
mov
jecxz
mov
int
int
adc
mov
adc
push
cmc
xchg
js
inc
and
add
leave
push
push
sahf
cmp
lcall
stos
pop
push
in
mov
ret
xor
and
mov
lahf
adc
sbb
push
popf
dec
int
adc
stos
test
into
mov
jg
adc
stc
xchg
push
sbb
in
ss
sbb
push
mov
sbb
push
inc
adc
inc
in
mov
lahf
dec
xor
cmp
rcr
xor
test
sbb
xchg
jmp
dec
jns
gs
addr16
inc
push
rcll
mov
mov
fcmovnbe
jo,pt
cmpl
repnz
mov
pop
ret
ret
xor
mov
jns
outsb
pop
jae
gs
andb
sbb
mov
pop
aaa
add
sbbb
bound
push
out
dec
mov
dec
sarb
aad
push
pop
enter
add
dec
fnstenv
shrl
xorb
add
pop
pop
ret
adc
lret
sbb
in
adc
cld
test
xchg
jmp
sahf
add
loop
sub
inc
lea
dec
andb
pop
rclb
xchg
xchg
xchg
push
cmp
push
ss
cmpsb
or
sbb
xlat
mov
fstl
into
rcrl
inc
ret
scas
xchg
xor
push
push
adc
adc
lock
and
xor
sahf
and
out
out
mov
lcall
mov
sahf
les
mov
imul
cwtl
push
jg
ret
es
jnp
test
movsl
in
popa
cmp
jnp
sub
fwait
or
jne
jo
mov
in
ret
int3
inc
xor
shrl
adc
xor
inc
data16
stc
je
mov
push
push
mov
aaa
or
insb
js
es
sbb
mov
outsb
jmp
das
aas
or
lcall
jecxz
fs
clc
subb
cli
cmp
repz
xchg
bound
xor
adc
orl
mov
or
addr16
and
icebp
shlb
shl
adc
aas
mov
clc
xchg
xchg
mov
dec
leave
enter
adc
cmp
orl
xlat
cmp
push
cli
cmc
clc
cmp
stc
sbb
movsl
sub
sub
test
loope
popf
lea
jmp
dec
cmp
loopne
aaa
inc
add
outsb
ja
push
negl
fxch
daa
cmpsb
fcompl
into
pop
mov
mov
or
sub
xor
icebp
mov
pop
jno
jbe
sub
jns
in
int3
leave
xchg
push
filds
call
pop
pop
xor
call
xchg
mov
jle
or
jno
mov
jns
mov
xchg
out
lock
addl
jb
test
xchg
out
aas
ret
jl
repz
jge
cli
decl
xchg
stc
jle
addl
outsl
imul
sbbl
mov
jg
negl
hlt
push
fwait
lock
insl
ds
icebp
push
subl
pop
inc
scas
push
mov
add
adc
and
xor
shrl
loope,pt
icebp
push
subl
pop
inc
scas
push
mov
add
adc
and
xor
shrl
loope,pt
icebp
pop
subl
pop
inc
scas
push
mov
add
adc
fdivp
cs
xlat
push
icebp
sbb
into
xor
lret
mov
jbe
cltd
add
xor
and
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
