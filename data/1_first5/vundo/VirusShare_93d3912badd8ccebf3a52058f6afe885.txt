or
xor
xor
shr
mov
test
jmp
fstpl
lea
jmp
push
fadd
dec
mov
jmp
stos
jmp
nop
nop
nop
nop
nop
push
cld
xor
xchg
inc
xchg
call
xchg
jmp
inc
punpckldq
addr16
jmp
cmp
lea
jmp
fwait
dec
popf
mov
out
call
mov
test
jmp
setne
out
push
jne
sub
or
mov
or
and
sub
xor
pop
ret
jmp
nop
nop
nop
nop
nop
sub
xor
mov
or
add
mov
and
xchg
sub
xchg
mov
xchg
andl
cld
push
xchg
xor
xchg
and
xchg
jmp
je
xor
addr16
jmp
lea
jmp
inc
gs
push
cld
push
xchg
pushl
nop
pushl
xchg
push
or
and
sub
and
push
or
or
and
or
pop
sub
mov
mov
dec
test
jne
pop
push
ror
pop
call
leave
jmp
int
adc
sbb
xlat
ret
jmp
dec
es
ds
nop
nop
nop
nop
push
mov
push
mov
push
mov
push
mov
test
jmp
inc
and
add
shl
ror
shl
or
pop
jmp
ret
jmp
rcr
mov
mov
add
add
xor
mov
add
mov
cmpl
cld
je
jmp
push
xchg
call
mov
jmp
nop
subb
xchg
pushl
push
pop
rol
rol
sub
or
pop
cmpb
cld
jmp
nop
nop
nop
push
mov
add
shl
or
mov
push
nop
jmp
nop
nop
nop
nop
nop
push
xchg
or
or
mov
push
xchg
push
mov
push
xchg
push
mov
push
xchg
nop
nop
nop
nop
nop
pushl
nop
push
xchg
jmp
push
mov
push
nop
push
xchg
and
xor
sub
inc
mov
push
cld
jmp
jne
add
dec
mov
movzbl
jmp
jmp
cmpb
push
pop
jne
and
shr
sub
shr
mov
jmp
pushl
sub
pop
pusha
jmp
aad
push
nop
push
xchg
or
or
mov
sub
xchg
push
mov
pushl
and
pop
push
cld
jmp
mov
and
add
mov
push
add
and
add
mov
rol
dec
test
jne
pop
lea
mov
call
mov
sub
ror
and
add
jmp
sub
add
push
dec
mov
add
mov
and
xor
mov
sub
dec
test
jne
pop
lea
call
push
xchg
add
or
sub
mov
pop
add
xor
or
mov
add
ror
xor
mov
pop
shl
and
add
jmp
inc
xchg
mov
cld
mov
cld
movl
xchg
shr
rol
mov
mov
inc
shl
or
or
mov
shr
jmp
or
pop
fucomp
or
add
xchg
and
cld
nop
nop
nop
nop
nop
mov
push
pop
ret
jmp
xlat
fistl
je
call
xchg
test
jmp
fildll
je
call
cld
test
jmp
je
push
push
pop
xor
xchg
jmp
jne
add
mov
jmp
addb
xchg
xor
cld
inc
xchg
ret
jmp
inc
nop
nop
nop
nop
nop
xor
add
sub
and
ror
and
add
shl
add
ror
add
shr
mov
rep
jmp
imul
add
or
pushl
inc
and
mov
xor
pop
add
add
mov
jmp
pushl
xor
sub
or
and
pop
push
cld
push
xchg
add
push
pop
push
xchg
push
push
pop
call
addr16
push
cld
jmp
xor
xchg
rorl
jmp
add
cld
dec
jmp
add
add
cmp
jmp
shrl
dec
and
shl
dec
inc
pop
ret
jmp
dec
jge
nop
nop
nop
nop
ror
rol
mov
jmp
add
or
xor
pop
lea
jmp
jb
pop
js
xor
mov
xchg
dec
xchg
jmp
mov
xor
or
mov
or
add
sub
mov
add
xchg
jmp
add
cld
jmp
nop
nop
nop
nop
push
xchg
cmpl
xchg
jne
push
mov
lea
jmp
adc
loopne
jmp
push
mov
mov
mov
call
mov
jmp
nop
nop
push
xchg
push
mov
xor
xchg
xor
mov
xor
xor
mov
push
mov
push
mov
jmp
xor
add
pop
dec
or
add
mov
pop
or
and
pop
cmpb
mov
je
mov
mov
call
xchg
cmpb
push
pop
je
jmp
mov
mov
lea
jmp
or
push
nop
mov
xchg
mov
addr16
lea
jmp
call
mov
test
jmp
in
fsubl
std
call
mov
xchg
push
dec
add
push
or
ror
rol
shr
shr
mov
sub
dec
test
jne
pop
pop
call
cmp
xchg
je
mov
xchg
and
add
xor
ror
add
mov
jmp
push
addr16
inc
xor
add
sub
mov
sub
addr16
shr
jmp
test
jmp
mov
jmp
fwait
mov
jmp
lea
jmp
jno
cmovns
jmp
stc
lret
cmpl
xchg
movzwl
jmp
xor
mov
jmp
pop
lea
jmp
lock
jbe
jge
jmp
cmp
inc
lock
add
jmp
jg
pushf
jne
xor
add
add
mov
push
popl
movb
nop
movl
addr16
jmp
test
jmp
xchg
mov
jmp
or
xchg
add
jle
mov
nop
movzwl
jmp
xchg
pushf
dec
push
imul
pop
jg
xor
dec
mov
and
xchg
cmp
nop
jne
nop
nop
nop
nop
nop
and
xchg
add
xchg
add
xchg
add
cld
jmp
jbe
add
xchg
jmp
dec
xor
shr
mov
mov
rol
xor
mov
mov
mov
mov
add
mov
add
addr16
mov
push
pop
jmp
call
mov
popa
jmp
mov
incl
add
or
test
add
add
and
mov
pusha
jmp
mov
inc
mov
call
cld
jmp
je
mov
or
mov
sub
cld
mov
xchg
mov
nop
jmp
movb
mov
incl
cld
jmp
xor
add
add
xor
mov
inc
addr16
inc
addr16
decl
jmp
cs
jne
add
mov
cmpl
xchg
jne
sub
add
or
add
pop
jmp
dec
mov
dec
sub
dec
or
mov
jmp
dec
mov
call
mov
inc
push
pop
jmp
jmp
add
sub
sub
mov
movzbl
jmp
or
incl
xchg
xor
xchg
inc
xchg
sub
xor
inc
sub
mov
and
push
pop
jmp
or
xor
mov
mov
push
pop
add
addr16
xor
and
pop
push
popl
shl
sub
xor
and
pop
leave
jmp
cld
xchg
jmp
inc
js
jmp
inc
xchg
nop
nop
nop
nop
nop
and
and
mov
xor
dec
mov
sub
xor
mov
rep
jmp
cmp
lods
sub
shl
sub
sub
mov
jmp
call
xchg
dec
xchg
call
cld
inc
push
pop
call
mov
dec
mov
call
xchg
call
push
pop
popa
jmp
out
jmp
jno
jecxz
mov
inc
mov
jmp
out
cmp
jmp
mov
jmp
ret
jmp
outsl
and
cmp
stos
cmpsb
nop
nop
nop
nop
nop
shr
jmp
mov
push
je
test
jmp
push
je
and
mov
shl
mov
sub
cld
mov
xchg
jmp
shl
mov
jmp
loopne
popf
xor
imul
ret
cmp
nop
jl
xor
or
dec
mov
add
mov
and
rol
shr
add
mov
jmp
add
adc
mov
dec
cld
mov
jmp
xchg
enter
or
test
push
add
add
fisttpl
pop
jmp
nop
nop
nop
nop
nop
call
xchg
jmp
xlat
pop
mov
lret
add
and
sub
shr
mov
andl
xchg
mov
cld
pushl
and
ror
add
mov
shl
pop
add
cld
nop
nop
nop
nop
nop
mov
push
pop
jmp
mov
aas
test
jmp
test
jne
cmp
cld
jne
nop
nop
nop
nop
nop
lea
jmp
push
sbb
leave
hlt
decl
add
test
add
and
mov
sub
addr16
jmp
mov
push
and
xor
dec
and
and
mov
add
cld
cltd
jmp
and
out
call
addr16
add
xchg
sar
jmp
mov
add
nop
nop
test
jmp
inc
xchg
fucomi
cmp
xor
inc
shr
shl
and
sub
mov
mov
nop
incl
cld
dec
xchg
mov
jmp
push
adc
cmp
jmp
jmp
xchg
jmp
pop
sub
push
mov
jmp
fidivrl
adc
add
add
inc
and
dec
mov
or
xor
mov
test
jmp
push
cld
fbld
scas
add
add
inc
and
out
call
pop
add
add
xchg
dec
mov
ror
xor
mov
movzbl
jmp
nop
nop
nop
nop
nop
shl
jmp
add
xchg
incl
mov
lea
jmp
repnz
cmp
ljmp
mov
mov
cld
nop
nop
nop
nop
nop
sub
mov
sub
xchg
decl
jmp
push
pop
dec
sbb
jne
mov
mov
jmp
outsb
dec
sub
and
sub
add
mov
nop
nop
nop
nop
nop
call
mov
cmp
xchg
jmp
ss
lret
mov
sub
xchg
decl
jmp
orl
test
incl
in
mov
jmp
in
fwait
lods
mov
nop
nop
jle
mov
xchg
add
or
add
mov
add
cld
jmp
sub
jb
inc
mov
cmp
cld
jb
jmp
in
das
add
mov
decl
jmp
mov
outsl
fisttps
lret
mov
shr
pop
xchg
nop
xchg
jbe
jge
mov
jmp
jle
jmp
jle
inc
xchg
nop
nop
nop
nop
nop
cmp
push
pop
jae
inc
xchg
inc
addr16
test
jmp
mov
xchg
je
jmp
mov
sub
add
xchg
or
add
xor
xor
mov
mov
mov
sub
xchg
mov
xchg
incl
mov
dec
mov
mov
jmp
xor
mov
decl
xchg
jmp
or
dec
add
mov
mov
xor
xchg
add
xchg
dec
jmp
push
sbb
jne
push
xchg
push
xchg
pushl
push
pop
push
addr16
nop
nop
nop
nop
nop
call
addr16
push
mov
add
add
mov
push
xchg
mov
push
pop
pushl
add
or
or
add
push
shr
inc
sub
add
add
and
mov
xor
xor
or
or
dec
test
jne
pop
pop
call
test
jmp
jb
je
mov
xchg
jmp
iret
popf
cmpsb
xor
mov
inc
mov
jmp
jmp
lret
push
inc
or
xor
shr
shl
inc
mov
call
nop
mov
and
and
add
push
mov
push
cld
jmp
and
dec
rol
inc
xor
mov
sub
or
mov
mov
mov
jmp
lret
push
fisttps
shll
test
jmp
movsb
imul
add
inc
cld
mov
xor
mov
and
mov
jmp
add
idiv
inc
and
mov
incl
xchg
mov
xchg
nop
nop
nop
nop
nop
xor
addr16
jmp
andl
mov
or
shl
mov
rep
jmp
iret
adc
mov
shr
ror
and
add
jmp
sub
and
add
idiv
call
enter
dec
mov
and
inc
sub
xor
pop
sub
cld
sub
rol
shl
xor
add
pop
ror
dec
sub
add
mov
ror
dec
and
pop
ret
jmp
nop
nop
nop
nop
nop
and
or
add
or
mov
push
xchg
push
xchg
pushl
xchg
nop
nop
nop
nop
nop
call
xchg
push
addr16
push
xchg
pushl
cld
call
cld
sub
inc
add
mov
dec
add
xor
mov
test
jmp
sbb
je
add
mov
add
shr
or
mov
nop
nop
nop
nop
nop
add
mov
sub
mov
jmp
mov
xor
sub
add
mov
nop
nop
nop
nop
nop
sub
xchg
shr
jmp
test
jmp
fdivrl
jb
dec
or
add
hlt
mov
nop
nop
nop
nop
nop
jle
nop
nop
nop
nop
nop
mov
mov
movzwl
jmp
sahf
push
in
xchg
popa
and
or
mov
and
nop
cmp
mov
jne
mov
shl
add
mov
add
add
and
mov
add
mov
nop
nop
nop
nop
nop
add
mov
add
cld
inc
xchg
inc
mov
decl
jmp
jne
nop
nop
nop
nop
nop
add
nop
push
nop
push
mov
call
addr16
cmpl
mov
jne
and
add
add
and
sub
mov
or
shr
mov
nop
nop
nop
nop
nop
test
jmp
je
pushl
xor
pop
add
mov
jmp
push
cld
nop
nop
nop
nop
nop
push
mov
call
push
pop
or
mov
mov
and
sub
mov
add
addr16
push
mov
push
xor
and
push
dec
ror
or
dec
and
ror
mov
or
dec
test
jne
pop
pop
mov
call
cmp
xchg
nop
nop
nop
nop
nop
mov
jmp
cli
mov
mov
add
sub
and
rol
inc
mov
test
jmp
outsb
ret
test
add
add
cld
add
dec
mov
or
and
add
mov
add
and
add
mov
push
pop
nop
nop
nop
nop
nop
add
nop
add
push
pop
sub
mov
nop
nop
nop
nop
nop
test
jmp
sbb
push
add
push
cld
push
addr16
jns
call
xchg
movzwl
jmp
ds
jmp
call
addr16
nop
nop
nop
nop
nop
or
or
rol
or
mov
add
xchg
add
xchg
push
xchg
pushl
mov
call
mov
nop
nop
nop
nop
nop
mov
push
pop
add
mov
add
xchg
jmp
mov
mov
add
mov
nop
nop
nop
nop
nop
cmpl
mov
mov
jmp
dec
ljmp
jmp
add
add
add
stos
mov
cld
rol
ror
mov
mov
mov
or
sub
and
ror
rol
mov
pushl
add
pop
nop
nop
nop
nop
nop
ror
add
pop
mov
mov
xor
shl
shr
pop
shr
xor
shr
or
shl
pop
mov
mov
cmp
addr16
jne
pushl
sub
or
shl
and
sub
pop
add
mov
nop
nop
nop
nop
nop
mov
mov
mov
mov
add
xchg
leave
jmp
jae
ret
jmp
fmulp
push
testb
nop
nop
nop
and
mov
xchg
add
ficoml
fmuls
pop
fsubrs
popa
cmc
mov
leave
jl
pop
mov
js
mov
movsb
mov
dec
data16
inc
sub
mov
clc
push
xchg
clc
shll
mov
xchg
add
inc
sbb
ret
in
inc
inc
cld
andnps
xchg
xchg
mov
mov
test
mov
aad
sbb
dec
icebp
adc
add
nop
test
and
jl
ljmp
mov
ret
pop
leave
mov
inc
dec
shrb
push
push
cmp
sub
stc
mov
cmp
sbb
pop
repnz
mov
xor
loope
and
imul
dec
fxch
and
mov
out
orb
jp
xchg
sbbb
mov
mov
sbb
les
mov
mov
movsl
lods
inc
cld
and
mov
mov
inc
jp
lods
push
xchg
dec
adc
add
enter
addr16
fwait
xchg
mov
add
xchg
shlb
add
xchg
testl
pop
xor
inc
lock
aad
mov
fistps
mov
loop
or
fcompl
xor
jbe
push
or
std
addl
xor
in
inc
dec
xor
ret
inc
or
or
cmp
push
dec
cmp
mov
fdivrp
inc
push
movsb
adc
sbb
mov
std
aaa
fucomi
cwtl
arpl
adc
adc
testb
push
frstor
mov
and
sub
push
fdivrs
popf
cmp
out
scas
pop
cmpsl
mov
cmpl
cmp
jo
xchg
addr16
nop
mov
jle
jns
lahf
sub
incl
jne
enter
sub
mov
addl
hlt
pop
sti
push
mov
ret
mov
add
mov
into
lock
cmp
push
mov
push
mov
cmp
dec
inc
fwait
out
cmp
inc
sti
mov
call
add
lds
cli
cmpsl
test
imulb
inc
fistps
add
insb
sub
add
loope
std
sub
jg
cmp
mov
cmc
aad
test
aas
cmp
xchg
imul
jl
mov
inc
cmp
hlt
lods
pop
pop
xor
or
data16
nop
shrb
xor
dec
into
xchg
cmpsl
sub
imul
cld
lods
xchg
loope
mov
icebp
sbb
rol
jns
aad
push
sbb
or
lock
dec
push
xor
mov
movsb
cmc
mov
out
repz
out
push
lea
sub
adc
stos
popf
cmp
fimuls
sbb
xchg
jp
inc
sbb
in
jge
jg
ss
adc
into
sbb
mov
push
pop
mulb
ret
jmp
lds
je
jp
adc
sub
inc
mov
movsl
dec
movsl
int3
insl
fs
jp
popa
mov
pusha
pop
dec
xor
ds
pop
pop
mov
jbe
dec
test
sub
or
jne
push
mov
pop
cmp
mov
or
push
sub
js
pop
out
js
jp
add
ficomps
andl
or
pop
sarl
pusha
imul
pop
jo
adc
std
femms
xchg
and
jmp
pushf
in
jo
sub
mov
mov
cwtl
sar
into
cmp
nop
push
or
sbb
push
pop
call
aaa
dec
clc
pop
inc
movb
add
lds
pusha
repnz
scas
xchg
xlat
imul
xchg
dec
xchg
nop
pop
xor
sub
out
lea
adc
or
mov
add
jp
xchg
inc
add
pop
mov
fcom
or
push
daa
insl
jae
or
loop
repnz
pop
leave
add
add
popl
cli
int
fnstenv
cmp
or
mov
frstor
mov
inc
or
push
and
in
xchg
jmp
shrl
mov
inc
out
shrl
popf
adc
push
xchg
nop
pop
std
sti
fists
out
scas
lcall
adc
icebp
std
xor
mov
jnp
mov
mov
push
xor
or
push
jbe
mov
dec
jp
dec
sti
orl
enter
lret
pushf
or
pop
rcl
mov
jecxz
lock
ds
mov
fs
push
xlat
pop
and
jae
mov
cmpsl
enter
jo
cmc
pop
dec
mov
in
lcall
mov
pop
lea
repnz
daa
mov
add
sub
mov
jmp
inc
xchg
sub
in
push
xchg
popa
hlt
mov
cs
pop
lcall
add
mov
sub
cmp
xlat
pushf
push
jno
mov
lea
cs
dec
lret
shl
in
dec
adc
adc
lds
pop
mov
xchg
mov
or
fistpll
movsl
mov
ja
cs
gs
push
jle
ficomps
xchg
pop
jno
loope
insl
call
push
out
jo
mov
dec
addl
clc
std
bound
jae
ljmp
mov
cli
push
sub
add
in
pushf
inc
mov
nop
pop
xchg
cli
push
push
adc
movsb
jge
stc
mov
enter
movsl
inc
aaa
test
or
inc
jno
jmp
in
cmc
pop
in
mov
in
sub
mov
xor
inc
cs
jle
mov
sbb
nop
fcmovbe
test
mov
and
inc
xchg
dec
sub
xor
add
jmp
adc
jmp
repz
mov
call
lods
lds
stc
into
xchg
mov
out
std
xchg
sti
jae
adc
mov
add
jnp
add
or
iret
or
shrl
add
mov
lahf
jg
insb
scas
hlt
lds
mov
xor
mov
push
les
fpatan
lea
arpl
sub
jno
inc
or
jb
xor
mov
std
gs
test
cmp
int3
xchg
sbb
aaa
adc
jns
test
or
cwtl
jns
xlat
cmp
jnp
push
lahf
mov
outsl
pushf
bound
test
add
mov
lret
dec
push
lcall
insl
fiadds
xor
cli
push
loopne
push
es
push
sbb
mov
cmc
cmp
xchg
sub
insb
and
push
jl
push
popa
hlt
lea
leave
fwait
xchg
add
push
pop
sbbb
or
fwait
out
push
mov
mov
xorl
cld
movsl
adc
sbb
ror
dec
mov
xor
pusha
add
xchg
dec
dec
push
loope
enter
cmpsb
fcomip
imul
mov
cmp
lcall
lds
sub
lcall
imul
push
out
xchg
popf
push
ja
loopne
lret
inc
add
pop
dec
stos
out
jns
lahf
add
arpl
xorb
scas
insl
clc
mov
lcall
enter
sbb
jmp
jne
fs
push
jl
int
cmp
dec
jo
jbe
lret
imul
pusha
push
es
push
cmc
loop
pop
sahf
dec
dec
xor
pusha
cmp
sub
xchg
sub
push
in
inc
or
push
pushf
imul
mov
cmp
rcl
cmpl
es
push
xchg
and
out
pmaddwd
xchg
xor
adc
aas
shr
repnz
lcall
pop
push
rorb
rorb
mov
in
push
add
imul
cmp
out
pop
jbe
cmc
cli
arpl
sbb
push
fs
lret
push
fstpl
mov
dec
adc
cltd
sub
lds
jbe
insb
adc
sbb
push
cmp
ja
pop
rcrb
inc
loope
sub
ds
fwait
cmp
clc
stos
roll
mov
and
xchg
bound
jge
int3
int3
pop
adc
popf
int
pop
mov
xor
jg
add
adc
xchg
mov
addb
shl
data16
dec
pop
stos
sbb
pop
bound
sbb
das
mov
shl
xchg
adc
sub
sbb
test
add
add
roll
rcl
int
mov
ret
mov
popa
push
arpl
xchg
jb
ss
sbb
inc
adc
lods
idivl
scas
nop
push
in
loop
jno
cltd
inc
fnstcw
jbe
xchg
dec
xor
mov
pop
gs
cmp
jno
stos
jb
xchg
sub
dec
js
cld
dec
add
xor
xor
rcll
fs
push
dec
fwait
jmp
pop
sub
gs
inc
mov
adc
orl
and
xor
mov
push
jae
idivl
mov
fwait
or
jmp
clc
pop
insl
int
div
lock
movsb
lcall
mov
push
push
hlt
fistl
call
inc
scas
push
adc
pop
mov
insl
icebp
jne
adc
mov
xor
xchg
imul
call
sub
scas
es
sti
cs
ss
movsl
adc
lods
mov
in
pop
push
stc
aad
fbstp
sub
pushf
daa
mov
fisubs
popa
cmpl
inc
jecxz
mov
clc
pushf
sarb
push
or
out
adc
adc
lock
outsl
outsb
and
in
insb
aaa
sbb
nop
jb
sub
mov
or
adc
and
push
pop
sub
icebp
mov
in
or
outsb
add
push
sbb
sub
inc
iret
mov
setns
inc
scas
cmp
pop
or
ds
dec
inc
or
shll
stos
fs
or
pop
push
or
xlat
ficoml
mov
negb
fisubs
fucomp
push
mov
or
sbb
setae
stos
sub
xchg
js
int3
mov
mov
cmp
mov
dec
fadds
jmp
aaa
xor
test
adc
xor
or
insb
cmp
jnp
out
cmp
cmp
mov
mov
jecxz
hlt
or
pop
repz
scas
mov
add
jl
movsb
or
fsubp
jbe
adc
jle
lods
add
adc
xchg
xor
iret
xchg
sub
sbb
mov
jl
add
jbe
loope
cwtl
jmp
rcrw
mov
ja
loop
fmuls
pop
setge
push
insb
imul
push
outsb
jb
dec
mov
lret
jns
dec
fisubrs
popf
mov
ljmp
dec
fwait
ljmp
daa
or
cmp
into
pop
jg
mov
add
fsincos
sub
push
and
aam
bound
pop
test
push
fcmovu
lahf
push
and
pop
icebp
into
mov
into
jne
ss
fsubl
jns
test
pop
rcr
adc
pop
xchg
jns
mov
andb
gs
sbb
pop
pop
ljmp
pop
les
and
inc
xlat
stc
pop
cmp
js
adc
loope
inc
add
dec
movsl
hlt
cwtl
and
mov
lods
and
jbe
lret
dec
dec
inc
or
fcoml
or
push
and
fldl
mov
pop
outsl
inc
lea
aam
jmp
test
push
cs
out
cmovs
fwait
lods
pop
sub
or
lods
xchg
xor
cmpb
adc
and
insb
xchg
repz
movsl
inc
movsl
and
dec
xor
gs
fyl2xp1
addl
insl
cmp
mov
mov
jo
jbe
mov
adc
lods
cmpsl
adc
imul
push
out
pop
pop
ficoml
xchg
imul
sbb
fidivrs
mov
inc
cmp
call
addr16
mov
nop
jecxz
xor
in
lock
xor
iret
aaa
imul
jge
push
mov
int3
xchg
jp
int3
test
incl
xor
rclb
cmp
dec
out
xorb
clc
out
inc
je
repz
movsl
rorb
lock
jnp
push
nop
jg
cld
imul
mov
lock
dec
out
inc
mov
pusha
mov
cltd
in
fsts
ret
lcall
mov
xor
cmp
negl
xchg
or
xchg
imul
cmp
inc
pushw
sbb
cmpsb
adc
fistps
sub
adc
push
icebp
or
aad
shl
in
and
xor
test
cmp
in
sbb
insb
push
push
roll
or
mov
dec
in
hlt
pop
or
and
mov
and
cs
inc
pop
movsl
leave
dec
push
aad
loope
lret
cmp
sub
jno
push
pop
repz
push
pop
in
jmp
movsl
outsl
xchg
insb
sub
scas
and
rcl
out
push
xor
mov
ficoms
push
out
pop
stos
xlat
fiadds
stos
fmul
rep
imul
mov
add
gs
and
push
inc
mov
mov
flds
add
pop
pop
rcrl
push
mov
xchg
jge
fsubr
sbb
jns
lret
sbb
inc
in
jne
rolb
jae
test
sbb
ret
orl
adc
mov
push
mov
sub
xor
inc
sbb
pop
cltd
inc
cmpsl
cs
mov
loop
rolb
imul
mov
imul
sub
pop
cld
ret
stc
xchg
imul
incl
fsubl
mov
repz
andb
mov
pop
in
sbb
mov
mov
shl
arpl
mov
adc
xorl
dec
fsubs
dec
cmp
mov
mov
add
rclb
add
pop
test
push
xchg
sub
sti
iret
out
xchg
push
push
mov
dec
adc
rcrl
div
mov
nop
cmp
or
jno
sub
idivb
sbb
inc
std
cmp
not
fimull
int
lahf
lcall
into
leave
std
mov
pop
in
inc
ja
mov
jns
scas
xchg
mov
jle
xchg
sbb
in
in
add
scas
sbb
sub
mov
mov
mov
int3
repz
inc
jmp
jecxz
pop
mov
push
ret
add
call
mov
dec
popa
or
aaa
or
std
sarb
mov
jp
pushf
lea
daa
cmp
mov
imul
ret
sub
lds
stos
mov
iret
mov
stc
cmp
mov
push
test
add
sub
and
aas
xchg
dec
mov
push
mov
adc
mov
scas
loope
xor
lret
inc
scas
mov
inc
pop
in
lahf
cwtd
mov
pop
lret
pop
ret
je
fs
xor
ds
mov
out
sbb
pop
xor
cltd
clc
push
loopne
xchg
pop
pop
out
sbb
add
adc
pop
in
push
add
ds
je
cmpsb
icebp
push
sbb
movsb
jo
data16
fdivs
dec
out
aam
inc
ret
orb
in
mov
push
cmc
mov
mov
mov
int3
loopne
adc
xchg
and
popf
xor
arpl
pusha
fildl
xchg
sahf
ja
push
or
mov
jle
mov
repnz
aam
sub
gs
and
or
stos
enter
sub
pop
push
mov
pushf
ret
jecxz
jge
lods
rolb
pop
xchg
or
lret
mov
fwait
sub
pop
aad
insb
gs
enter
nop
xorb
sbb
test
add
rcrl
xchg
sub
fisttpll
xchg
cs
and
ret
pushf
imul
xchg
call
sbb
data16
clc
and
xchg
ret
jle
xor
mov
lods
ljmp
and
gs
cmp
mov
mov
cwtl
sub
or
mov
scas
mov
mov
int
insl
mov
xchg
jecxz
cmp
mov
les
cmp
test
mov
cld
mov
insl
test
bound
repz
insl
push
arpl
pushf
pop
test
sahf
adc
mov
mov
inc
icebp
movsl
xchg
aam
sub
pop
into
jno
mov
or
jb
out
fisttpll
insl
iret
sbbb
jae
hlt
ss
push
clc
insb
imul
daa
xchg
dec
pop
push
adc
in
fcmovu
shl
lahf
jp
cmp
xor
aam
hlt
or
and
adc
push
les
inc
movsl
mov
mov
test
dec
cmp
cmpsb
iret
ret
dec
add
mov
adc
sub
mov
lahf
cmc
pop
sbb
adc
jle
or
dec
insl
sub
dec
mov
jle
jmp
pusha
fidivrl
popa
lcall
mov
adc
addr16
ret
gs
dec
icebp
xor
cmc
cwtl
pop
ss
add
push
push
sub
jg
into
adc
vmread
je
repz
mov
sub
pop
stc
xlat
pop
ja
inc
enter
jecxz
push
mov
xor
rolb
lret
mov
repnz
je
imull
js
fildll
inc
sub
sahf
lock
popa
enter
pop
and
in
mulb
cmp
push
cmpsl
xchg
repz
in
mov
mull
xor
ret
cmp
jge
lods
mov
fidivs
sub
shll
adc
bound
push
jno
pop
sub
pusha
add
cmc
call
insb
sub
mov
jle
xor
call
sub
add
mov
jmp
and
sub
inc
shll
sub
mov
adc
fdivl
aam
std
cltd
sbb
xchg
sahf
push
xchg
inc
scas
fisubrs
add
mov
lea
dec
mov
in
pop
decl
js
xchg
xor
cmp
pop
mov
sbb
imul
lds
popa
fisttpl
mov
or
int
ret
dec
jmp
and
clc
pusha
rcll
xorl
addb
leave
mov
aad
stos
push
jns
popa
mov
arpl
and
jge
andb
add
jbe
cltd
or
imul
dec
xor
adcl
imul
dec
mov
xor
mov
int
sti
pop
jmp
lods
fs
pop
stos
jmp
repz
mov
arpl
mov
jae
adc
mov
leave
lret
xchg
push
ror
inc
or
js
mov
loope
push
jmp
sub
push
rol
pop
ja
add
ret
fwait
popa
fsubl
mov
adc
xchg
jl
pop
pop
sbb
sbbb
push
jmp
cmp
pop
das
loope
mov
std
test
out
xchg
repnz
add
pop
sbb
testb
jge
popa
pop
hlt
repnz
test
dec
out
and
cmp
xlat
dec
stos
incl
cltd
int3
cs
xchg
subb
jecxz
cmp
hlt
mov
xchg
dec
jecxz
mov
testb
inc
or
scas
testb
aam
adc
rorb
cltd
das
mov
rcll
jmp
pop
or
bound
cmpb
and
pop
std
subl
jno,pn
dec
dec
das
fistpl
mov
inc
inc
inc
push
ret
add
daa
stc
aas
ds
lods
jmp
aas
pop
jge
cwtl
pushf
out
das
pop
add
mov
lahf
mov
cmc
jno
jbe
push
outsl
sbb
sbbb
push
xchg
addl
scas
ret
mov
adc
aaa
scas
push
icebp
lahf
cmp
xor
je
add
jle
pop
in
nop
scas
das
hlt
jmp
imul
iret
pop
xchg
dec
and
pop
jl
adc
out
sub
fst
leave
movsl
push
fstpt
mov
dec
jmp
lock
adc
or
xchg
add
inc
and
out
sbb
test
xchg
je
mov
cmp
adc
pop
clc
or
jecxz
sahf
xor
pop
ds
jecxz
mov
push
orb
sub
ja
mov
mov
sbb
ret
enter
cltd
sub
cwtl
cmp
loop
and
push
cli
or
cli
in
xchg
fmull
jg
or
je
xchg
push
push
sti
and
inc
mov
jo
add
jp
ds
aas
mov
jmp
cltd
mov
frstpm(287
xchg
js
mov
mov
mov
add
int3
pop
enter
inc
or
push
in
in
mov
enter
sub
pop
jae
ja
cmp
xor
adc
push
push
push
inc
add
leave
ljmp
jmp
xor
sub
in
or
push
pop
sub
outsb
inc
or
jg
or
xor
adc
arpl
mov
xor
scas
pop
pop
xor
test
ret
jne
cmp
xchg
loop
addr16
inc
ret
pop
or
mov
or
repz
xlat
mov
pop
add
dec
shlb
cmc
test
and
xchg
push
add
mov
mov
repz
xor
shr
test
push
js
xchg
loope
insl
movsb
rorl
js
out
ss
into
daa
cmpl
loope
sub
mov
inc
add
add
andl
jg
dec
jle
int
lahf
xor
stos
bound
push
inc
cmpsb
push
sub
dec
dec
call
loop
aam
or
mov
or
cltd
ja
repz
mov
xchg
iret
cltd
pusha
pop
popa
mov
mov
push
jne
aad
frstor
rolb
cmp
and
adc
aam
xchg
jne
sbb
and
mov
push
inc
push
aam
xor
mov
mov
mov
in
out
fcoms
dec
mov
mov
leave
or
mov
push
shlb
mov
or
and
fisubrl
lods
cmp
cmpsb
add
adc
subb
loope
xchg
pop
mov
mov
data16
rorl
imul
xor
mov
sahf
push
addr16
pop
stos
jmp
and
dec
cld
dec
pop
xchg
lcall
into
lods
push
fsts
xchg
push
inc
movsb
mov
adc
icebp
sbb
in
pushf
into
or
xchg
adc
rclb
in
jbe
stc
mov
fdivs
push
cmp
jno
mov
adc
imul
or
lret
xor
jne
and
and
sub
cwtl
fsts
sbb
aas
aam
dec
cmpl
inc
arpl
repz
mov
rorb
mov
xchg
xchg
dec
shll
dec
stc
das
mov
or
mov
cmp
sarl
popa
inc
xchg
aad
es
ja
addr16
cmp
add
adc
notb
cmp
jp
nop
sbb
mov
and
hlt
subb
stos
pop
ljmp
lcall
orb
cmp
jns
push
pop
dec
cld
jns
and
sbb
rol
pop
fcmovu
pop
adc
jle
inc
sar
icebp
out
dec
sbb
gs
scas
or
enter
dec
xor
jecxz
xor
sti
cmp
daa
in
icebp
mov
sub
mov
insb
dec
push
push
rol
mov
push
scas
cmp
push
mov
xchg
mov
pusha
push
sbb
data16
fs
mov
sub
mov
pop
jge
ret
xlat
sub
add
incl
xchg
inc
cs
jp
jecxz
sarb
aam
pusha
xor
mov
cwtl
outsb
aas
enter
jle
adc
jecxz
stos
pop
dec
in
fistpl
mov
or
xchg
jns
xchg
pushf
mov
ja
push
push
mov
aad
test
aam
fmull
fs
mov
repz
test
sbb
adc
nop
sbb
xor
.byte
mov
.byte
mov
push
fcoml
xchg
push
mov
xor
imul
xchg
int
cltd
hlt
mov
movsl
xor
mov
push
pop
cmpb
push
push
xor
lahf
pop
rcl
add
mov
repz
aad
notl
leave
jle
mov
cmpsb
xor
out
ljmp
mov
dec
inc
incb
test
xchg
mov
repz
hlt
mov
adc
lcall
pop
mov
cltd
icebp
sub
dec
jne
pop
add
das
xor
mov
testl
repnz
pop
add
inc
ret
lds
sub
mov
hlt
and
data16
xchg
into
aad
leave
mov
sub
xchg
push
push
aam
scas
pop
push
xor
test
mov
movsl
sub
in
cwtl
push
xchg
hlt
int
inc
add
out
jl
shl
inc
or
xlat
and
adc
daa
std
jnp
dec
test
xor
rclb
cmp
mov
es
clc
out
cmp
inc
cmp
sub
adc
or
fs
xchg
cmpsb
fadds
sbb
mov
sbb
jge
lea
or
dec
outsl
mulps
cmc
loope
nop
pop
cmp
fimull
adc
out
dec
inc
mov
mov
sub
jmp
int3
mov
xor
shll
lock
dec
push
jbe
cmp
pushl
lret
out
jg
xchg
inc
add
mov
or
pop
or
xor
es
inc
sti
hlt
jle
mov
rcrl
emms
push
xchg
sub
sub
and
fwait
add
pop
push
or
push
mov
movsb
mov
jge
lret
dec
das
adc
lahf
push
jns
popf
adc
inc
test
cli
cld
xchg
push
add
in
add
add
inc
loope
pop
xor
mov
jne
adc
leave
in
push
aad
jmp
pop
mov
mulb
aam
xchg
push
hlt
mov
call
fldt
std
pop
jno
stc
js
xchg
out
arpl
or
imul
add
push
adc
sub
scas
mov
jne
repz
repnz
mov
outsl
cmpsb
pop
pop
ss
js
js
cmp
into
sbb
test
cmc
cmp
mov
je
xchg
outsl
subb
insb
push
add
pop
arpl
xchg
jl
pusha
pop
xchg
loope
insl
inc
dec
xor
mov
xchg
loopne
push
push
mov
imul
ljmp
mov
add
das
out
cmp
arpl
lods
loope
sahf
repz
or
push
faddl
lods
pop
sti
fildll
or
in
xchg
and
iret
sub
stos
mov
dec
das
fists
inc
lods
push
adc
and
in
sub
nop
imull
sahf
ds
jae
mov
lea
xchg
adc
iret
cltd
xchg
movb
call
aas
sti
out
cli
mov
aaa
inc
cld
cmp
push
fs
lret
or
xchg
insb
hlt
add
dec
lea
cmc
dec
fwait
pop
sahf
outsl
cmp
jle
jno
xchg
cmp
mov
sbb
inc
imul
jmp
xchg
jge
icebp
test
dec
mov
and
test
jecxz
adc
iret
or
mov
int3
mov
mov
push
ret
js
outsl
mov
push
pop
mov
pop
addr16
in
add
mov
sbb
negl
xchg
enter
in
imulb
cmp
in
mov
popf
mov
jnp
mov
jmp
push
fbstp
sub
push
mov
push
ljmp
divb
in
outsb
scas
stos
std
push
aas
mov
and
and
xchg
aaa
scas
pop
dec
sahf
xor
cmpsb
inc
les
decl
push
jp
lock
cmp
cwtl
leave
addb
imul
ljmp
xor
inc
sbbl
cs
je
into
insl
sub
arpl
lock
add
movsb
loop,pn
pop
adc
mov
mov
lcall
add
mov
jmp
fs
push
daa
testb
mov
test
insb
cmp
fimuls
lea
push
mov
mov
inc
pusha
xchg
rcrl
inc
sbb
cs
dec
xchg
or
pop
xchg
pusha
lds
or
or
mov
lcall
sub
ljmp
sahf
inc
sbb
lods
xchg
imul
cli
sbb
outsb
sbb
into
lock
stc
lahf
repnz
mov
jne
shrl
and
xor
ficoml
fimuls
mov
push
out
xor
addr16
arpl
data16
cli
shl
jno
outsl
jns
jg
out
in
bnd
iret
and
cwtl
inc
add
mov
pop
mov
ficomps
mov
jecxz
add
nop
pushf
pop
push
jecxz
or
xchg
aas
andl
xchg
pop
push
sub
mov
jp
add
inc
sub
adc
in
inc
and
adc
test
stc
mov
adc
stos
mov
in
arpl
es
pusha
adc
dec
js
out
int
in
cmp
aas
insl
xchg
xchg
mov
call
loop
loope
fisubl
sbb
and
inc
imul
inc
mov
test
pop
loopne
scas
loope
dec
imul
fstps
andb
jg
fldt
or
cmp
or
xor
mov
adc
fsubl
jecxz
addl
xchg
aam
loop
aaa
cld
stos
cwtl
inc
and
or
or
loope
testl
xchg
pop
clc
xchg
mov
sub
out
and
sbbl
inc
or
jnp
test
sbb
out
mov
cmc
lcall
cltd
addr16
jmp
outsl
arpl
sbb
mov
jge
in
into
in
popf
rcll
sarl
mov
mov
pushl
xchg
shll
pop
push
mov
aaa
xchg
dec
adc
out
shlb
popf
or
xchg
lds
pushf
fidivl
call
mov
pop
pop
aam
lods
and
iret
and
add
mov
mov
adc
inc
jbe
cmpsb
jl
mov
cmc
leave
inc
lods
test
xor
and
repz
mov
mov
fistl
inc
jnp
out
repz
aas
ja
ficoms
ljmp
sbb
jae
cltd
adc
push
cwtl
leave
adc
fisttps
pop
mov
adcb
push
push
in
out
mov
push
jb
mov
imul
pop
data16
dec
xor
out
out
mov
lods
fists
add
gs
loope
sub
inc
mov
fcoms
adc
lea
pop
mov
lods
mov
dec
add
or
js
mov
ss
loopne
jg
ds
or
and
add
lret
aaa
inc
scas
pusha
mov
int
nop
divb
xchg
int
xor
aad
sub
js
mov
push
cmc
imul
std
lcall
inc
xchg
xchg
aam
movsb
cld
jmp
in
dec
aaa
push
loop
leave
inc
and
adc
cmp
push
mov
xor
dec
lods
xor
das
pushf
lock
fimull
repnz
xchg
aam
xor
or
clc
push
xor
jge
lcall
xorb
inc
movsb
xor
outsl
mov
bound
cmp
or
fwait
mov
daa
aad
or
pop
pop
mov
aaa
cmp
cmp
sarb
scas
sbb
push
inc
jle
lcall
mov
mov
imul
outsb
and
jae
adc
arpl
pop
pop
xorb
addr16
pusha
aam
mov
repnz
cltd
in
std
jbe
inc
ror
or
pop
fists
fists
sub
and
adc
mov
addr16
into
push
repz
mov
stos
movsl
in
adc
int
jl
xor
das
pop
int
sbb
lods
mov
dec
xor
sub
mov
dec
jp
xchg
roll
mov
pop
lock
and
in
test
loop
or
inc
out
xchg
je
xor
ret
in
inc
add
shlb
fcom
fidivs
sbb
add
lods
mov
push
lcall
lret
sti
inc
sti
rcrl
imul
dec
mov
mov
or
xchg
push
mov
jb
sub
fwait
cmp
int3
push
shll
arpl
push
or
out
in
aas
sub
fcmovu
leave
das
imul
outsb
push
dec
aad
ja
xchg
pop
fisttps
mov
fsubs
xchg
hlt
sub
out
lods
or
sub
cli
mov
es
lcall
and
std
adc
mulb
je
mov
rorb
bound
loop
push
cmp
and
pushf
sbb
cmc
out
add
ss
dec
sti
xchg
lods
ds
sbb
stos
stos
push
xorb
rcl
add
cmpsl
hlt
inc
inc
mov
xchg
push
mov
lret
mov
xchg
mov
nop
in
gs
push
add
lret
mov
dec
mov
mov
fistpll
mov
or
cmp
iret
js
lret
data16
arpl
xchg
pusha
or
jns
imull
shlb
mov
and
stos
dec
fidivrl
outsb
push
aaa
pop
sbbb
dec
lods
xchg
inc
adc
setno
dec
dec
jp
jns
frstor
fadds
jecxz
mov
ret
clc
cs
sbb
stos
scas
test
lods
out
adc
popa
add
mov
sub
aaa
stos
and
ret
mov
push
sbb
orb
xchg
rcr
jno
jo
mov
jecxz
push
pop
jb
sbb
pusha
enter
and
inc
and
mov
rorl
jmp
add
jno
bound
leave
movsl
pop
addr16
test
xchg
dec
incl
mov
rorl
call
sub
add
outsb
cmp
scas
ficoms
ret
test
inc
mov
fwait
mov
dec
jecxz
pushf
popa
outsl
inc
push
jp
add
push
push
and
pop
js
icebp
lret
dec
sbb
outsl
out
cmp
jg
lea
push
and
mov
fiadds
push
inc
push
adc
push
push
sbb
shl
adc
aam
aad
rcrb
or
sar
aam
mov
inc
insl
addr16
aam
adc
jmp
sahf
in
ret
in
xchg
pop
jp
movsl
add
iret
pop
dec
sbb
sti
int
stos
jno
ficoms
nop
cld
xor
sbb
sbb
in
cmp
inc
in
out
movsb
enter
sub
out
jp
and
jle
adc
inc
lahf
aas
fst
test
sub
and
cmpsl
fwait
pushf
ret
adc
jmp
shll
mov
and
mov
fwait
sahf
lods
cmp
or
and
mov
in
lea
jge
mov
pop
push
mov
xlat
pop
mov
dec
inc
out
jbe
out
and
pop
fbstp
stos
sahf
mov
and
mov
ss
adc
and
mov
insl
arpl
inc
pop
imul
imul
sub
sbb
insb
jg
sub
fldt
mov
xchg
sub
cld
sub
jae
mov
or
mov
jno
mov
stc
pop
mov
jl
jge
cld
xor
aad
mov
sub
divl
mov
test
add
xchg
mov
fwait
add
mov
and
and
cmpb
movsl
push
out
sub
mul
int
mov
orb
jo,pt
sarb
pop
or
mov
jge
pop
and
fwait
js
out
out
mov
sub
lcall
mov
push
mov
call
jns
rcl
sbb
jecxz
xor
pop
nop
dec
mov
or
mov
fistps
push
scas
sar
cmc
xchg
scas
xor
dec
lahf
or
xor
pusha
pusha
mov
mov
sub
add
mov
adc
pop
push
std
push
scas
push
xlat
shl
xchg
add
xor
xlat
ds
inc
fcoms
or
xchg
ret
pop
gs
xor
aad
adc
pop
push
or
push
enter
mov
sbb
fisttpll
out
shll
sahf
movsl
dec
lcall
adc
mov
mov
arpl
adc
mov
leave
or
xchg
jnp
fcmovnb
pop
jmp
mov
or
xor
out
hlt
insb
cmpsb
scas
sbb
cmp
jl
fwait
sbb
test
push
and
fisttpll
je
pop
scas
mov
sub
inc
mov
mov
jmp
aam
xchg
mov
mov
call
sahf
cmp
imul
add
pop
orl
push
scas
cli
mov
or
mov
imul
popf
je
jge
das
cs
adc
jo
xchg
outsl
mov
lret
je
cmp
mov
pop
adc
orb
idiv
jno
in
cmp
push
pop
inc
jg
cmp
cwtl
cmpb
js
ret
ss
mov
pop
dec
loopne
xchg
and
mov
or
and
push
add
mov
mov
data16
pop
ret
push
adc
mov
xchg
lods
sub
repz
and
fstp
push
xor
mov
popf
ret
addr16
or
and
cli
inc
adc
push
xor
adc
adc
cmpsl
or
jns
clc
cmp
mov
gs
or
and
pusha
cltd
sbb
scas
xor
movsb
ss
andb
sar
jbe
sbbl
sti
icebp
xor
adc
push
adc
stos
sbb
cmp
aam
in
subl
push
ret
push
and
push
dec
out
mov
popl
xor
and
adcb
add
clc
jno
sub
mov
sar
lret
push
or
fcomi
lret
les
jns
sub
push
shrl
xor
pop
push
fs
je
es
fildl
rclb
scas
out
ss
in
pop
movsl
test
sbb
cwtl
or
pop
test
fisubrl
xor
or
jae
adc
sub
int3
fwait
std
or
and
dec
out
test
popa
or
xlat
test
xor
shl
pop
add
fstpl
sub
outsb
add
cmp
shl
lret
add
dec
popf
sbb
jg
jbe
stos
rclb
push
push
mov
andl
or
shrl
xor
divl
dec
xchg
and
and
hlt
xchg
xchg
jp
lds
mov
repnz
loopne
int
fwait
sub
int3
inc
das
les
add
fwait
test
add
imul
mov
lahf
lret
pop
inc
lock
pop
mov
call
push
xor
mov
ja
frstor
repnz
sbb
aad
enter
movl
out
and
in
mov
les
mov
cmc
clc
in
add
jmp
cmc
in
mov
sub
sub
rorb
test
ja
push
mov
popa
ficoml
lret
or
xchg
shrl
ret
xchg
xchg
jle
xchg
aam
mov
ds
xor
cwtl
data16
stos
or
sarl
cltd
shrb
sub
push
sub
jle
imul
popf
push
adc
gs
mov
mov
ret
lods
dec
jo
loopne
cmp
les
add
movsb
cs
or
jg
push
outsl
call
and
mov
nop
fwait
or
insb
in
xchg
and
xchg
gs
mov
popa
jae
xchg
notb
aam
dec
iret
lret
repnz
lahf
adc
call
mov
and
outsb
std
lods
sbb
mov
mov
lods
cltd
inc
data16
xchg
xor
lahf
xchg
ret
jb
mov
pop
das
setge
mov
fwait
popf
mov
adc
add
sub
pop
popf
repz
js
stc
add
cmp
push
and
pusha
ret
jnp
ds
dec
subb
and
or
xchg
and
ja
xchg
fistps
fstpl
pop
xor
jge
cmpsl
divb
mov
out
sub
mov
daa
xchg
addl
cld
out
es
out
cmp
and
and
rcll
dec
mov
lea
stos
repz
insb
sbb
jge
mov
orb
les
cmc
sbb
fwait
into
test
mov
xchg
mov
ljmp
aad
loopne
xor
dec
fnstenv
fwait
rcrb
xchg
fbstp
scas
fcmovnu
cmp
jecxz
sbb
dec
mov
and
xchg
aam
xor
pop
xchg
cmpsb
adcl
dec
cmpb
push
or
or
xor
push
and
pop
test
mov
mov
push
shrb
and
fstps
je
cmc
lret
lock
hlt
outsl
xor
loop
fildl
inc
add
subb
jb
lock
cmpsb
movsl
cs
fistps
stos
lret
rolb
xor
aaa
stc
push
inc
or
pop
pushf
fidivrs
incl
lcallw
mov
std
mov
xlat
popf
cmp
fs
pop
fwait
mov
stos
dec
mov
mov
mov
jmp
out
aaa
fidivl
ficoms
xchg
ret
inc
mov
inc
movsl
mov
adc
cld
aad
inc
loope
bnd
lock
cmc
jg
and
je
pop
in
sbb
push
stos
nop
push
or
pop
mov
jb
ljmp
idiv
cmpb
sbb
add
pop
or
adc
or
jle
outsl
aas
cmp
pop
cmpsb
test
mov
clc
dec
inc
ficoml
clc
pop
movsb
push
sub
sbb
push
mov
cltd
pop
or
hlt
pop
fucomp
test
or
imul
xor
cmp
sub
adc
inc
sbb
mov
pop
in
outsb
mov
xor
leave
inc
movsb
lock
ja
push
cli
fsubr
add
push
push
xor
mov
and
js
pop
push
mov
pop
addr16
test
mov
daa
cmp
daa
sub
mov
jbe
cltd
and
sbb
mov
pop
dec
or
aam
mov
jl
test
and
lods
je
inc
pop
jne
fs
xor
js
push
shlb
loop
push
or
ljmp
repz
cmp
arpl
dec
lcall
in
lahf
popf
jb
mov
test
add
call
leave
fiadds
sbb
mov
dec
mov
fcomi
and
cltd
dec
jns
mov
insb
pop
cmpsb
fldt
push
xchg
lods
jg
adc
rclb
fs
push
divb
popa
stc
mov
stos
inc
or
xchg
cmp
icebp
dec
mov
lds
repnz
fcmovb
jge
imul
pop
adc
jb
stos
sti
add
sbb
xor
mov
cmpsb
pushf
outsl
leave
pop
mov
imul
mov
in
aaa
sbb
adc
pushf
jne
enter
xorl
pop
jo
and
sub
jns
inc
sub
add
xor
mov
imul
mov
aad
and
aas
push
and
xor
xchg
and
popa
dec
movhlps
add
pop
ljmp
lret
mov
lahf
jl
push
leave
aad
dec
adc
inc
cmpl
add
popa
add
cmpsb
shrb
cmc
cltd
data16
push
xor
ret
bound
xchg
insb
mov
scas
push
sti
push
sti
jo
testl
jp
xor
icebp
xchg
rcr
and
inc
adc
cmp
xchg
xchg
mov
cmp
mov
push
dec
and
sub
mov
mov
push
xchg
test
lods
jmp
xor
xlat
mov
adc
mov
sbb
push
pop
sub
cli
les
roll
sahf
icebp
lods
je
sti
push
mov
mov
xor
inc
add
lret
cmpsb
mov
fldenv
int3
or
test
mov
sub
je
insb
in
bound
fstpt
or
adcl
out
add
cmp
movsb
push
gs
int
or
pop
inc
inc
pop
testl
xor
test
test
jae
jbe
idiv
and
jge
xchg
fwait
das
or
push
adcb
cmpsb
lahf
xchg
pop
mov
sbb
and
enter
jne
or
sub
mov
out
repz
ja
add
jle
sub
mov
or
sbb
adc
mov
xchg
jp
icebp
sub
aam
add
cmp
adc
jnp
mov
imul
cmp
push
ret
mov
lea
sbb
cmp
mov
jne
mov
dec
add
in
scas
hlt
lahf
sbb
mov
push
std
or
mov
iret
das
and
mov
movsb
add
int3
or
clc
sbb
mov
xor
scas
inc
stos
shr
sub
dec
shll
lret
push
adc
jecxz
mov
cwtl
lcall
into
leave
lock
ja
ljmp
addl
test
cli
fstpl
mov
push
mov
cli
mov
aas
je
xchg
mov
jecxz
daa
xor
sbb
inc
push
xor
leave
jge
pop
test
adc
and
ja
cmc
rcl
fdivs
sbb
clc
xor
xor
xor
cld
fmulp
stc
scas
pop
in
stos
jbe
adc
daa
add
mov
je
xchg
xchg
loop
adc
mov
sbb
add
xchg
mov
xchg
movsb
pop
jg
pop
adc
popf
xchg
mov
adc
mov
icebp
ret
les
sub
inc
dec
xor
je
jg
addr16
into
mov
add
adc
push
or
or
cld
pop
out
repnz
clc
movsb
jg
mov
stc
lcall
mov
dec
xchg
mov
sbb
clc
test
xchg
dec
jbe
daa
in
shrl
fldl
icebp
xchg
cli
push
aam
loop
adc
mov
pop
sahf
pop
test
push
repz
enter
mov
push
jecxz
jmp
cmp
mov
aad
mov
pop
mov
add
inc
and
sbb
insb
adc
leave
out
cmp
fiaddl
in
rorl
mov
insb
cmp
jae
adc
hlt
push
dec
enter
push
pop
sbb
fs
test
adc
fcoml
inc
aaa
jbe
imul
mov
push
dec
jbe
stos
mov
andl
loope
and
sub
add
into
popa
xchg
or
inc
fldcw
sub
ja
imul
cmpsb
lcall
cmp
lods
add
or
das
fwait
fs
push
das
push
pop
add
rorl
adc
jge
and
idiv
push
stos
idiv
add
or
pop
push
inc
or
dec
js
add
jle
push
jge
mov
bound
push
faddl
xchg
adc
cmp
pop
mov
xor
inc
int3
in
lds
sbb
mov
cmp
in
mov
dec
inc
ja
inc
mov
and
adcb
out
mov
std
jnp
inc
pushf
scas
fisubl
cltd
jb
imul
adc
push
sub
inc
out
fadds
cld
mov
in
out
and
xchg
cmp
outsb
test
iret
or
les
outsl
push
pusha
push
mov
adc
loop
lock
cmpsl
pop
outsl
in
inc
dec
mov
dec
es
sbb
dec
loop
cmp
clc
test
cmc
jmp
adc
dec
jnp
dec
sbb
insb
inc
mov
subl
pop
jp
int
or
mov
ret
push
icebp
popl
mov
pop
push
sbb
jp
xchg
shlb
aas
mov
and
and
stc
out
cli
push
jl
fadd
cmp
mov
pop
cmp
push
aad
cmp
ficoms
mov
mov
xor
dec
stc
movsb
cmp
push
mov
sti
movsb
sbb
popa
fiadds
test
jbe
das
jge
inc
lret
int
inc
xchg
repz
cld
stos
pop
add
xchg
or
lahf
fs
xchg
fiadds
outsb
mov
adc
add
pop
outsl
push
loope
lds
test
movl
push
out
dec
sti
xor
dec
cmp
ret
inc
clc
pop
sysret
or
adc
xchg
inc
loop
adc
cmpsl
sbb
inc
or
scas
in
aad
and
inc
ljmp
popa
inc
pushf
lods
or
test
popl
nop
bound
dec
jg
add
notl
push
xchg
mov
test
mov
insl
mov
testl
mov
pop
dec
mov
shlb
cmp
push
adc
cmc
mov
cmp
stos
sbb
pop
lea
stc
addr16
mov
jo
cmp
lcall
dec
adc
jns
faddp
and
test
and
dec
repz
sub
xor
repnz
jle
iret
cltd
sub
jecxz
fisubrl
imul
mov
xchg
sub
ficoml
stc
xor
out
jg
mov
cld
imul
lahf
inc
fwait
mov
mov
fsubl
sar
cmp
xor
sti
add
jns
jl
dec
insl
mov
lret
mov
push
fsts
adc
xchg
jae
cmp
push
push
xchg
imulb
lock
lret
xchg
adc
cs
test
push
or
sub
xchg
sbb
cmp
dec
mov
scas
dec
pop
mov
sub
out
xor
jno
loop
movsl
mov
pop
rorl
or
jl
les
or
cmp
sub
jp
lods
mov
adc
mov
insl
xchg
jp
in
insb
xchg
outsb
sub
int3
cmp
and
ss
mov
into
out
xor
mov
sub
shll
in
xor
sbbb
gs
sbb
sahf
inc
dec
mov
xor
pop
jmp
popf
imul
pop
lret
addr16
out
movsb
dec
test
lea
jbe
pop
cmp
into
aad
ljmp
mov
cld
pushf
and
xchg
in
repz
les
push
dec
mov
cli
inc
jmp
aad
sub
mov
rorb
loope
mov
pusha
jmp
inc
add
pop
sbb
adc
pushf
test
inc
imul
cld
cld
lahf
scas
pop
mov
cmpsb
mov
insb
mov
sub
adc
test
int
cmp
ret
pop
andl
divb
mov
add
loopne
push
mov
sbb
rcrl
mov
cmp
cltd
idivb
ret
push
rcrb
pop
iret
jb
sub
sbb
dec
loopne
adc
std
into
dec
push
cwtl
xor
es
hlt
inc
enter
scas
push
jp
test
mov
mov
fnsave
or
rcrb
out
jnp
outsb
imul
rorb
pop
cs
mov
sub
sbb
xchg
lock
jbe
clc
sub
mov
das
sbbb
pop
loopne
dec
mov
ds
je
fisubl
xchg
jb
addb
pop
mov
or
or
or
inc
out
mov
bound
in
int3
inc
pop
rcrb
jge
loop
in
push
jno
in
and
cmpsl
and
cmp
mov
shlb
int3
push
or
jle
out
pushf
lock
jo
dec
outsb
repnz
add
test
jbe
scas
push
hlt
sub
loopne
push
adc
mov
mov
movsb
cld
sbb
idiv
mov
xchg
push
xor
jne
inc
add
adc
fisubs
pop
fdivrs
dec
mov
inc
jmp
xor
je
add
mov
jg
push
outsl
out
xchg
push
inc
xchg
xor
cmovl
sub
jecxz
popa
xor
and
adc
or
jle
push
jnp
xchg
mov
jbe
sbb
dec
jbe
xor
addl
enter
jb
cld
dec
sbb
jno
fsubrs
inc
mov
and
cwtl
add
lret
test
dec
dec
dec
sub
mov
xchg
xchg
in
sbb
mov
into
mov
mov
pop
sub
adc
add
in
sbb
jo
pop
test
mov
add
div
cmpsb
rcrb
pop
adc
pop
lahf
lods
pop
pop
in
jp
orb
cli
sub
mul
mov
pop
cmpsl
sbb
xchg
or
jbe
das
xchg
pop
xchg
adc
sub
pushf
repnz
fsts
arpl
and
iret
out
dec
cmc
sbb
add
inc
cmp
adc
dec
cmpsb
push
dec
imul
aam
pusha
sub
notb
hlt
aam
xchg
xor
jp
ja
pop
insb
mov
add
xor
or
adc
inc
aas
jmp
das
mov
cmp
repz
imull
and
sbb
rolb
mov
mov
xchg
inc
lock
ss
pop
lock
mov
cmp
fldl
push
fcompl
jnp
or
mov
jmp
mov
mov
cmp
out
pushf
std
das
mov
mov
hlt
pop
or
sti
jnp
loopne
jl
sbb
pop
cmp
xor
dec
or
pop
cli
jae
push
jg
or
dec
popa
adc
dec
jo
mov
ljmp
xor
push
mov
das
jle
mov
repz
cmpsb
rorb
cmp
and
mov
add
sbb
pop
adc
adc
stos
sub
inc
hlt
ja
mov
je
sti
rolb
xchg
xchg
dec
add
pop
lcall
btr
mov
adc
dec
push
idivl
in
ret
mov
mov
push
or
stos
ret
mov
rorb
cmpb
cmpsl
adc
or
cmpsb
mov
mov
adc
sti
iret
jb
decl
mov
popf
int3
and
loop
and
shrl
and
arpl
je
dec
nop
shl
test
xlat
jmp
mov
jge
xchg
movsl
fcomi
or
pop
pop
icebp
ljmp
sbb
aaa
ret
mov
sbb
dec
add
in
xchg
ds
mov
mov
push
mov
enter
sub
iret
push
cmp
int
inc
xchg
or
std
cmpsl
adc
repnz
call
push
mov
pushf
mov
sub
and
in
loop
push
js
fstpt
fcmovne
mov
insb
fidivrs
jno
pop
ljmp
out
fimuls
inc
in
test
insb
xchg
leave
jmp
add
enter
adc
push
jp
jbe
hlt
in
xor
jo
sub
xor
cmc
inc
push
out
mov
and
dec
pop
inc
pop
popf
sub
jmp
ljmp
stos
lds
xchg
push
inc
mov
test
movsl
add
mov
sub
fisttpl
pop
pop
mov
enter
in
imul
and
popa
xchg
je
xchg
cmp
adc
or
jmp
hlt
jo
dec
pop
pusha
push
mov
or
pushf
add
decl
jnp
sbb
repnz
jno
mov
jb
add
int3
sbb
adc
out
jle
jmp
leave
lock
lahf
sbb
cmp
mov
push
mov
notl
repnz
xor
mov
les
stc
pop
enter
test
xlat
cmp
iret
sbb
mov
pop
push
scas
xor
arpl
push
cmc
inc
stos
xor
or
das
or
test
lahf
loop
and
push
jl
jae
daa
push
lods
mov
lods
aam
imul
mov
jne
sarb
rclb
icebp
or
mov
jbe
jp
jo
mov
xor
outsb
jnp
addr16
lods
and
leave
gs
or
sub
mov
xchg
jmp
les
int
sbb
xchg
mov
mov
mov
bound
inc
imul
movb
jno
mulb
es
mov
mov
pusha
pushw
arpl
pop
lcall
jae
pop
js
mov
sbb
jmp
inc
add
test
jne
aam
gs
lcall
add
imul
outsb
stos
int
mov
rclb
add
and
cwtl
sahf
push
sub
out
cmp
mov
inc
lods
fs
ret
and
sub
clc
cmpsl
cmp
insb
int
mov
movb
fwait
outsl
out
xchg
addb
dec
pushf
addb
sti
mov
cwtl
add
les
cltd
sbb
mov
movsb
push
inc
jp
sub
ficompl
fldenv
inc
cmp
insl
movsb
jno
sbb
mov
pusha
fcmove
xlat
inc
dec
ss
divl
push
loope
xchg
jns
push
or
fwait
lea
addr16
sbb
cmpsl
xor
shlb
xchg
push
outsl
cmp
xorl
shr
das
pop
cmp
lahf
fadd
mov
les
in
dec
jmp
mov
jns
repz
dec
inc
enter
test
test
inc
outsl
aas
inc
in
fldl
sbb
inc
jge
out
sub
mov
dec
aad
fldenv
test
ret
out
icebp
cs
gs
xor
ss
inc
sub
cwtl
jae
dec
pop
pop
inc
add
cs
sub
fwait
nop
fldenv
and
xchg
push
test
mov
cmpsb
lahf
bound
add
pop
xor
insb
mov
pop
pop
jns
adc
mov
jo
ss
aas
in
std
insl
orl
add
or
xchg
je
call
lods
pop
xchg
mov
push
test
stc
jo
fwait
movsb
les
lock
mov
ss
imulb
inc
mov
dec
adc
test
xchg
pop
into
sbb
jle
fisttps
popf
ljmp
pop
mov
cmpsb
cmp
insl
iret
mov
adc
je
outsb
ds
sbb
iret
mov
xchg
mov
inc
xrelease
pushf
fcomp
pop
mov
dec
imul
or
mov
jmp
fistpl
adc
mov
adc
adc
xor
addb
lds
jns
fdivrl
outsb
hlt
insl
xor
fdivrl
lock
insl
xor
iret
xor
mov
stc
inc
imul
xchg
es
mov
mov
adc
in
ret
mov
add
lds
in
jns
pop
in
xchg
or
push
icebp
cli
xlat
aam
dec
fwait
cmpb
sarl
icebp
inc
nopl
lea
mov
testl
stos
mov
popa
sbb
repnz
fs
sub
cmp
mov
mov
stos
cmp
fdivrs
aaa
js
mov
push
sbb
jae
enter
js
sub
mov
adc
mov
popf
lcall
mov
mov
jb
pop
cmp
movsb
mov
jmp
cld
xor
jge
push
jne
imull
js
in
outsb
jno
lahf
mov
and
and
or
rorb
pop
adc
adc
xlat
add
jno
aas
pop
mov
loope
test
cmp
sbb
inc
in
add
sbb
aam
das
mov
jmp
loop
stos
cmpsl
lds
fwait
mov
js
int3
insl
dec
xchg
sub
and
mov
insl
xor
dec
push
add
xchg
dec
and
scas
stos
sbb
xchg
mul
sbb
or
push
pop
mov
dec
mov
cwtl
bnd
fmuls
jb
inc
sub
xor
jnp
xor
test
inc
out
out
dec
mov
or
pop
repz
imul
dec
or
es
test
divb
cmp
fsts
mov
int3
mov
ret
lcall
cmp
shl
sbb
mov
cmp
andl
lds
jecxz,pt
aas
adc
nop
inc
add
mov
mov
fstps
mov
sahf
js
add
mov
icebp
add
dec
cmp
pop
stos
sub
movsl
xchg
sub
jecxz
movsl
cs
and
inc
ret
sti
imul
pop
adc
mov
mov
call
mov
ds
das
icebp
mov
rcrl
lds
aam
fimull
lahf
inc
das
dec
pop
jae
dec
incb
hlt
inc
iret
cmp
or
add
dec
es
std
or
mov
push
shll
inc
imul
gs
jecxz
adc
or
pushf
push
pop
or
cli
or
pop
mov
pushf
js
imul
mov
adc
sbb
and
mov
sub
jle
ret
pop
and
neg
cmp
push
outsb
xor
sbb
ljmp
pop
mov
fldt
clc
push
cmp
sar
cmp
push
mov
pop
ss
inc
pop
sbb
imul
adc
rol
les
out
sub
mov
sub
lret
jmp
int3
lret
notl
scas
fistpl
mov
cmpsb
push
mov
xchg
xor
or
ss
iret
dec
lea
pop
mov
ja
and
sub
into
cmp
inc
jecxz
push
pop
mov
inc
cli
sbb
push
addb
cli
jae
mov
xchg
or
push
repnz
test
and
inc
jo
mov
jle
push
gs
icebp
jl
inc
mov
add
add
int3
or
sub
adc
repz
out
inc
push
push
outsb
movsl
decl
lea
mov
sub
les
jb
and
push
imul
fnstenv
jl
sahf
xchg
pop
jb
push
add
les
xor
rcll
jle
xor
push
mov
dec
push
ds
inc
mov
sub
add
enter
sbb
repz
pop
ja
ss
xor
icebp
jae
iret
mov
xor
and
cwtl
cpuid
xchg
aaa
jmp
std
cs
rsqrtps
sbb
xchg
mov
mov
and
dec
jnp
jae
outsl
je
mov
push
adc
hlt
mov
push
loopne
xchg
mov
jbe
cmp
mov
movsb
fldt
xlat
pmaxsw
pop
pop
popf
orl
aad
out
xchg
mov
cmp
add
dec
adc
pop
cmpsl
int3
pop
test
jae
iret
stc
lahf
pop
cmp
std
and
push
adc
or
mov
rclb
enter
sbb
sub
inc
and
aad
mov
mov
sarl
jnp
dec
add
fnstenv
imul
xchg
test
lcall
adc
cmp
cltd
cld
andb
jnp
pusha
cltd
jbe
sahf
fcomip
xor
or
cmp
in
lret
insl
in
sub
cli
xchg
ss
push
or
push
jmp
arpl
jns
sub
or
sbb
jns
in
daa
mov
ljmp
cwtl
push
xchg
in
jmp
mov
sbb
lods
push
lahf
pop
pop
and
clc
mov
dec
mov
repz
in
inc
rorb
mov
jl
inc
enter
mov
outsb
pop
ja
mov
cmpb
div
int3
jns
push
cld
pop
xor
add
dec
cmp
fiadds
jl
stc
cmpsl
adc
arpl
mov
cmpsb
sbb
popa
dec
push
jne
adc
scas
insb
inc
gs
push
mov
sbb
insl
jbe
pop
lea
mov
cmp
xor
jbe
in
sub
fildll
sub
xchg
mov
aaa
push
mov
mov
mov
pop
dec
jo
cmp
cmp
mov
outsb
repz
in
lret
xor
repz
daa
lds
je
inc
das
mov
rorl
adc
daa
lea
iret
xor
and
xchg
fmull
xor
adcl
sub
cmpb
loopne
loope
pop
xchg
test
out
push
incb
jmp
dec
fnstcw
movsb
mov
lods
gs
push
scas
mov
pop
hlt
xor
stos
je
jmp
aas
scas
cli
inc
std
lea
dec
movl
xsave
cmp
xchg
clc
daa
movsl
sbb
icebp
test
mov
shr
xor
and
mov
and
adc
pop
dec
mov
inc
sub
sbb
aam
nop
push
xchg
ffree
pop
xor
lret
adc
sbb
sarl
mov
ljmp
rol
mov
inc
adc
ret
lea
or
cmp
sarb
lock
and
sub
sti
jmp
dec
stc
lahf
adc
xchg
test
xchg
mov
imul
insl
lock
enter
dec
cli
insl
xor
shlb
push
cmp
pop
jb
push
movsb
xchg
sub
jge
jg
mov
shrb
stos
lcall
js
int
imulb
inc
nop
sbb
pop
xchg
stos
jecxz
mov
lahf
pusha
pop
mov
notl
xor
inc
sub
sbb
mov
cmp
jmp
in
adc
xor
lret
mov
push
pop
sbb
pop
test
and
addb
push
pop
imul
cltd
loop
dec
pusha
int
mov
cmc
imul
sub
push
lea
enter
pushf
es
pusha
xor
call
mov
push
jno
xor
mov
sub
jecxz
xchg
mov
shl
push
sub
cmpsl
test
push
leave
xor
and
test
mov
cs
jb
mov
aad
push
jno
dec
je
add
xchg
loopne
cmp
orl
aaa
popa
das
inc
push
shl
adc
jno
dec
in
mov
rorl
mov
jnp
arpl
push
rolb
lret
mov
in
ss
dec
adc
adc
adc
jo
loop
je
stos
or
ljmp
pop
imul
cmp
inc
fimull
rcrb
pop
mov
dec
and
push
xor
inc
pusha
or
dec
fidivs
lret
cmpb
mov
inc
jb
pop
scas
cltd
add
outsb
lock
push
stos
adc
insl
jb
cmp
inc
cmp
jno
jecxz
cmp
adcb
lds
aam
fcoms
pop
dec
pop
add
cmp
ret
sahf
jg
clc
lods
cpuid
dec
push
jbe
adc
cmc
ss
insl
sub
xor
pop
mov
loopne
adc
stc
ljmp
push
enter
sub
jmp
mov
addr16
int
and
daa
pop
popa
jno
outsl
addl
xor
mov
or
mov
lret
inc
sub
jb
mov
insl
roll
hlt
pop
push
sbb
or
or
jg
cmp
mov
dec
push
add
aas
test
lret
xlat
adc
pusha
mov
xchg
mov
shlb
mov
incl
mov
cld
and
outsb
es
insl
test
inc
mov
stc
add
xor
jnp
cli
test
sub
dec
popf
mov
jmp
sbb
mull
mov
loop
jne
sbb
dec
mov
into
dec
fwait
cld
cmp
push
cmp
mov
inc
in
fmull
rclb
lahf
inc
or
outsb
adc
push
xor
push
sbb
pop
ds
mov
scas
mov
xchg
and
add
dec
fisubrs
pop
int
popf
xor
idivl
hlt
mov
dec
sarb
adc
popf
movl
push
imul
stc
cmpsl
in
icebp
pusha
sub
out
dec
mov
cmp
add
jns
mov
roll
adc
push
cmp
xchg
or
push
sub
lods
pop
cmp
enter
imul
imul
xchg
cmp
inc
icebp
sbb
pop
je
repz
aam
cmp
inc
sbb
cmp
rcll
jge
cmp
pop
push
adc
push
movzwl
aaa
cwtl
ss
out
jl
add
mov
xchg
pop
inc
dec
or
mov
aas
sahf
in
stc
xlat
and
shlb
addr16
js
pop
xchg
mov
lret
scas
push
sbb
mov
mov
in
and
int
notl
xor
cmpsb
insb
aas
dec
push
sub
pop
xchg
imulb
test
flds
mov
mov
adc
xchg
insb
mov
sub
push
push
jl
dec
test
push
pusha
mov
in
sub
sbbl
pushf
arpl
outsb
fisttpl
iret
and
pop
loope
pop
dec
lds
lahf
sarl
add
sub
fimull
dec
popa
lock
sbb
mov
std
mov
sbb
adc
push
fcoms
adc
nop
int
dec
inc
mov
stc
inc
pop
loope
scas
mov
push
inc
cmpsl
xor
or
mov
mov
and
les
fwait
dec
enter
lcall
mov
notl
orl
pop
arpl
mov
mov
jecxz
xor
and
daa
pop
lret
loope
mov
push
leave
cmp
cmc
outsb
cltd
ds
sti
pop
sbb
jns
push
mov
cmp
pop
clc
sbb
xchg
pop
stos
inc
and
pusha
int3
insb
xor
or
xchg
inc
les
insl
stos
inc
or
stc
fdivr
pop
adc
outsb
xchg
add
cs
aam
cmp
add
rcll
and
xchg
xlat
sbb
stos
mov
inc
xor
jno
repz
dec
xchg
pop
int
in
movsl
stos
mov
scas
div
imul
fisttpl
cmp
flds
jecxz
mov
xchg
jbe
jnp
cmp
mov
insb
out
sbb
icebp
sbb
int3
stos
fisubrl
popa
adc
xchg
xchg
in
adc
dec
xchg
push
lret
ja
jae
and
push
mov
stc
adc
pop
dec
into
in
jnp
mov
das
loop
adc
push
sbb
inc
icebp
scas
xlat
sbb
mov
cmp
xchg
add
sub
jno
test
sub
aas
cmp
les
dec
bound
shlb
cmp
jecxz
cmp
or
mov
or
insl
stos
in
dec
and
push
cld
sarb
inc
and
pushf
jmp
aaa
sub
cmp
cmpsl
lcall
push
sti
movsl
cmp
stc
xchg
insb
fucomp
mov
xchg
cwtl
shrb
sbb
f2xm1
out
add
jo
xor
jnp
fstps
xor
sbbl
pop
push
xchg
cld
sbb
add
jle
subl
mov
adc
sbb
pop
xchg
pop
stc
int
mov
shr
shrb
cmp
pop
out
cli
adc
imul
and
jmp
imul
ret
mov
ret
fildll
in
mov
sti
jbe
dec
adc
leave
lahf
add
jb
out
lods
dec
and
test
faddl
nop
iret
ret
call
call
pusha
mov
pop
int3
ret
adc
push
xor
or
jmp
shlb
pop
cmp
shrb
out
jl
mov
or
mov
cmp
sub
add
mov
push
pop
jns
shll
bnd
jno
jbe
mov
ljmp
inc
jl
into
enter
popf
sbb
mov
xor
xchg
sar
nop
push
sub
insb
fldenv
aam
inc
imul
sbb
out
mov
lods
ret
mov
in
in
xchg
mov
xchg
mov
stos
orl
outsl
mov
add
incl
in
dec
icebp
loopne
cmc
cmp
jl,pn
mov
es
or
dec
lret
xchg
mov
fs
aam
dec
into
loope
cs
add
mov
xchg
xchg
xchg
mov
xor
dec
and
mov
cmpsl
stos
push
sbb
js
cli
divb
jns
push
cmpsl
scas
fldcw
jbe
push
scas
inc
mov
sbb
pop
in
push
mov
jbe
and
lret
jne
jge
loopne
mov
or
mov
aam
push
sbb
dec
inc
inc
adc
movb
push
daa
adc
mov
mov
adc
out
sub
jns
bound
addr16
mov
jbe
pop
sub
push
scas
scas
loop
or
mov
aas
test
imul
hlt
rolb
stc
jle
cld
fists
jp
jne
shl
pop
hlt
push
lea
out
cwtl
mov
pushf
cwtl
lahf
js
fldt
jo
fcmovnu
pop
xor
xchg
adc
arpl
das
je
mov
mov
lret
leave
outsl
xor
jecxz
cmc
mov
outsl
jmp
or
in
push
adc
adc
push
out
mov
cs
mov
push
cli
lods
test
or
sbb
nop
pop
insb
shlb
jge
dec
inc
pop
xchg
test
das
sarl
aaa
mov
sarb
imul
mov
rclb
push
xor
dec
stos
cltd
hlt
loopne
arpl
xor
cmp
lock
scas
jns
pop
mov
in
cmpsb
xor
je
adcl
xchg
pop
loope
test
jbe
bound
rclb
sahf
shlb
pop
sub
sub
xchg
sub
jne
subl
nop
xchg
decb
lret
xchg
mov
sub
and
xchg
jmp
fadds
mov
add
and
or
and
mov
out
bound
out
out
std
xchg
pop
dec
rorb
pop
xor
insl
rcll
mov
cld
pushl
mov
cld
cmpsb
xchg
popa
shlb
xchg
push
mov
adc
xor
pop
lret
outsb
inc
jo
lods
mov
jg
outsb
sub
sub
adc
jnp
xchg
jge
xor
jae
sbb
arpl
inc
int3
fiaddl
adc
mov
xor
insl
jne
fimull
mov
push
fiaddl
sub
push
add
mov
clc
outsl
in
jmp
xor
jle
sahf
xchg
pushf
add
in
xlat
in
addr16
andb
push
icebp
fistl
hlt
outsb
dec
mov
in
xor
je
cmp
jbe
scas
xchg
sub
insl
imul
sbb
lcall
push
out
pop
mov
rorl
fiaddl
pop
jp
sarl
xchg
pop
xchg
push
ljmp
es
xorl
sbb
lods
imul
add
gs
test
add
sub
lret
nop
jns
sbb
andb
pop
into
pop
lods
cld
cmc
cmp
and
push
xor
stos
sub
scas
inc
arpl
fdivrl
dec
mov
jne
and
gs
jge
fwait
cld
fdivs
add
inc
mov
ret
imul
xchg
mov
inc
mov
int
out
test
add
popa
dec
mov
mov
push
or
outsb
stos
push
sbb
add
lret
popl
push
mov
or
rorl
jo
andl
es
aad
sbb
adc
mov
fxch
mov
adc
fisubrl
sub
ja
sub
movsl
fidivs
mov
adc
jmp
movsl
shll
iret
mov
jbe
and
sub
push
mov
sub
cmp
push
rcrl
sbb
pop
sbb
adc
clc
movsb
cmp
jge
div
popa
jp
notb
push
fdiv
arpl
jge
pusha
enter
loop
dec
xor
test
clc
lds
or
sbb
ror
loop
mov
or
lock
fwait
push
mov
ret
rcll
mov
ds
je
lea
and
sub
int3
dec
add
adc
lahf
or
outsl
push
pop
sti
dec
data16
fdivrs
pop
adc
jl
lds
data16
xchg
add
mov
xchg
shrl
outsl
daa
into
inc
xor
scas
xor
dec
dec
xchg
lock
or
mov
xlat
and
mov
jmp
xor
mov
add
cmc
enter
fidivrl
dec
jo
push
sbb
out
mov
lock
aam
dec
shr
enter
push
sub
cmc
dec
jae
frstor
hlt
iret
xlat
js
and
mov
enter
mov
sub
xchg
lahf
xor
fdivrl
daa
andl
scas
insl
dec
push
push
popf
sbb
enter
and
add
push
data16
add
sbb
jbe
popa
sahf
shlb
in
dec
scas
add
jmp
xchg
js
fnsave
sub
sbb
call
dec
out
imul
mov
shll
sbb
sbb
push
adc
fldenv
pop
ljmp
loop
pmullw
pusha
fwait
cmp
or
std
or
xor
call
sub
les
cltd
mov
clc
js
cmp
js
mov
lahf
and
subl
cmp
jne
pop
xor
push
mov
cli
xor
fiadds
jne
mov
shlb
sub
popf
ja
ret
pop
add
push
pop
fstpl
jo
xchg
out
mov
pop
jl
sahf
ljmp
in
je
scas
stos
data16
aad
movsl
cmp
dec
inc
adc
adc
xor
inc
into
sbb
or
imul
sarl
jle
je
rolb
xor
addr16
jnp
cli
sarb
mov
pop
adc
add
jle
stos
testb
pop
jl
mov
jp
xlat
call
in
xorl
sbb
cs
pop
inc
call
rolb
mov
sub
dec
cmp
lods
and
mov
lods
lds
and
xchg
idivb
fwait
movsl
jg
adc
js
mov
arpl
ss
lahf
loop
sti
mov
dec
push
xor
fnstcw
mov
jo
ret
jmp
test
xor
pop
pop
pushf
pop
add
sub
adcl
stos
sbb
adc
sbb
mov
ljmp
in
mov
in
pop
das
pop
add
adc
push
test
mov
push
stos
mov
lds
test
addl
sbb
cmp
inc
fcoml
mov
sub
xlat
fadd
adc
add
and
push
jns
aas
test
out
stos
fs
outsb
and
add
movsb
xchg
ficompl
mov
lahf
out
inc
out
dec
jge
outsb
ror
xchg
loopne
das
aam
sub
jno
lret
pop
adc
shll
pop
jmp
pop
mov
filds
sub
subl
mov
jecxz
loopne
fstpt
xchg
inc
stos
int3
add
mov
repnz
ret
addr16
das
pop
xor
addr16
adc
pop
pushf
outsl
adc
lods
daa
movsl
push
pop
push
sarb
lock
nop
sub
nop
mov
xchg
cmp
jmp
cmp
cmp
lock
mov
mov
out
aam
mov
lock
popf
pop
adc
aas
out
pop
inc
hlt
dec
mov
adc
mov
nop
mov
mov
cmc
loope
rolb
lods
pop
lock
lea
leave
pushf
les
and
test
fistps
arpl
sub
into
sti
aad
bnd
mov
pop
and
inc
call
add
xorb
fimuls
mov
imull
xor
lret
sbb
sub
cmp
les
ror
data16
inc
mov
push
inc
push
aaa
push
clc
cmp
in
add
int
int
mov
inc
sub
fidivrl
mov
jns
cmp
and
ret
push
mov
xlat
call
ss
xchg
sbb
xor
into
iret
lcall
dec
in
out
and
mov
inc
mov
arpl
sbb
sbb
fprem1
test
insl
lock
outsl
mov
sbb
popa
push
jp
mov
subb
adc
mov
lods
jecxz
repnz
mov
movsb
add
xchg
pop
sub
bound
movsb
mov
mov
adc
outsb
mov
dec
mov
lods
ret
add
cli
orl
popa
in
pop
es
insl
bound
jl
adc
fcoml
sbb
ret
jge
jae
ss
leave
call
add
lods
jno
movsl
push
sbb
add
mov
adc
push
xorl
test
cmp
data16
inc
push
jle
test
or
fistpll
sub
push
push
aas
mov
daa
or
xchg
repz
jl
dec
push
scas
add
aas
movups
jbe
ljmp
scas
lods
stc
fxch
int3
pop
push
or
lret
pop
sarl
or
jo
insl
movsl
xchg
jle
aad
push
popf
sbb
jge
aad
movsl
mov
adc
in
dec
xor
cmpsb
cmc
aaa
xchg
stos
pop
sub
push
daa
lods
insl
int
arpl
bound
mov
jge
aam
jne
insl
leave
xor
mov
adc
lock
repz
push
push
lock
repz
or
jb
dec
xchg
stos
popf
ljmp
dec
pushf
xchg
mov
in
stos
mov
test
movb
jmp
push
shrl
test
xchg
push
std
call
adc
pop
aas
shll
aad
lds
stc
jl
out
mov
mov
add
push
pop
pop
dec
mov
lret
xlat
daa
in
mov
inc
xlat
lret
xchg
adcb
jbe
lock
dec
sub
mov
inc
mov
test
adc
imul
mov
mov
insb
add
sbbb
add
stc
rclb
int
icebp
stos
js
and
cmp
sub
outsb
mov
mov
ss
outsb
loop
lcall
mov
popa
rorb
addr16
mov
inc
cwtl
pop
aas
pop
mov
xchg
cmpb
mov
das
inc
in
int3
xor
sub
rorl
push
in
lahf
xchg
stc
xor
push
mov
pop
fs
ja
out
adc
push
js
ljmp
jecxz
nop
jmp
pop
xchg
push
call
outsl
xorb
leave
repnz
sbb
pushf
mov
gs
aaa
test
mov
mov
mov
and
mov
cmc
xchg
dec
int
mov
jns
lods
test
test
subb
dec
int
pop
in
xor
or
cmpxchg
inc
mov
and
push
lret
shl
cwtl
lcall
orb
mov
popa
aaa
into
push
add
pop
lds
pop
inc
xorb
hlt
adc
dec
pop
fs
les
daa
cmp
adc
xor
and
xchg
outsb
adc
xor
iret
cmpsl
adc
fwait
daa
add
test
fdivrl
mov
xchg
popa
pop
lea
and
push
jnp
jmp
cmp
movsb
jl
scas
mov
dec
sub
mov
gs
xchg
push
pop
cmp
xor
pop
dec
push
fs
mov
pop
jg
xchg
mull
cmp
enter
fcompl
pop
add
lods
nop
insl
jmp
movsb
pop
pop
mov
fldcw
or
and
cmp
ss
cmp
pop
push
ret
cltd
dec
psllq
mov
jle
jg
push
xchg
ds
aad
pop
mov
out
sub
ret
dec
mov
int3
inc
in
mov
aad
loope
jmp
xchg
mov
fcoms
adc
mulb
push
stos
loopne
mov
dec
cmp
pop
test
dec
add
dec
inc
lcall
xor
push
pop
fdivs
adc
or
fimull
jae
pop
xor
xchg
push
hlt
call
lock
cmpb
or
repz
outsl
jno
inc
rorl
lds
xchg
xchg
mov
out
jnp
imull
dec
icebp
and
int3
cwtl
cmp
cs
add
pop
test
dec
cmp
inc
xchg
mov
frstor
jbe
je
jb
xchg
iret
dec
rol
out
jmp
test
lret
stc
mov
imul
lcall
push
dec
push
or
pop
fadd
mov
lock
push
adc
mov
mov
pop
les
mov
sbb
scas
jp
push
loope
es
pop
cwtl
mov
lahf
sbb
xchg
cmp
ja
mov
dec
pushf
fiadds
out
cmp
lock
sti
lcall
shll
stc
testb
stos
outsl
addr16
or
std
mov
xor
jge
mov
cmp
ret
mov
pushf
mov
imul
daa
popf
mov
inc
or
inc
inc
cmp
add
push
fwait
enter
cmp
imul
lahf
in
out
push
pusha
inc
aam
xor
outsl
ret
aaa
sbb
in
cwtl
mov
pop
xor
mov
xor
pop
adc
cmp
fcmovu
add
fldl
mov
push
xchg
movsb
test
jae
xchg
cld
mov
dec
and
sub
push
mov
and
adc
xorb
xor
daa
nop
pushf
sahf
daa
jne
or
xor
mov
rcl
ret
popf
and
lock
outsb
scas
in
cld
je
push
or
aad
and
andl
cmpsb
jmp
mov
sub
andb
push
push
stc
sbb
mov
fisttps
sbb
jns
loop
pop
movsl
jle
push
in
sbb
dec
lret
hlt
cmpl
jle
jbe
cmpsl
mov
mov
dec
insl
movsb
enter
xchg
inc
pop
aaa
ret
call
dec
jle
daa
aaa
xchg
xchg
jno
inc
dec
addr16
bound
popa
push
and
mov
les
xchg
xchg
fucomi
adc
dec
add
xchg
mov
cmp
add
lds
mov
dec
mov
mov
fnop
movsl
cmc
jb
out
xsaveopt
cmp
call
fcoms
pop
mov
sbb
nop
cmp
les
jge
testb
aam
je
dec
out
pop
jnp
cld
or
push
fisubrs
fwait
in
outsb
iret
js
pusha
sti
push
mov
inc
sbb
xor
jle
movsb
cmp
div
mov
das
push
and
inc
sbb
adc
cmp
xchg
std
fmull
jb
lret
cmp
sbb
nop
sbb
cmpb
insl
mov
into
outsb
hlt
jge
loopne
fucom
or
add
call
or
jbe
xlat
call
out
inc
add
push
pop
or
mov
je
and
lock
inc
in
mov
cmp
in
into
sub
or
pop
div
out
xchg
movsl
jmp
ret
ret
and
push
data16
jge
push
inc
lds
lahf
mov
int
ret
imul
pop
jge
sub
cmp
jmp
sub
mov
jmp
stc
sub
je
mov
in
test
inc
sbb
adc
popl
repnz
pop
push
in
jg
dec
movsl
test
jo
cmp
mov
je
dec
mov
or
mov
cld
xor
in
mov
cltd
mov
das
icebp
cmp
adc
or
in
add
gs
test
dec
loop
fcompl
mov
popf
movsb
xchg
inc
inc
out
fldcw
mov
aam
mov
mov
icebp
cmp
je
pushf
dec
imull
cli
or
test
sub
lock
orb
jle
ljmp
mov
sbb
icebp
mov
lock
subb
fwait
or
dec
push
shrb
sbb
in
sbb
rclb
rol
push
nop
push
inc
mov
mov
outsl
adc
mov
push
fstp
add
and
xchg
out
sarl
fildll
popa
mov
int3
nop
push
cs
imul
push
sbb
cld
adc
jne
push
xchg
arpl
or
sbb
daa
pop
jbe
clc
push
pop
mov
sub
push
jae
cmp
or
popa
xchg
les
lea
xor
loopne
mov
push
xor
incl
xchg
incl
adc
jmp
xchg
inc
pop
pop
xchg
xorb
outsl
lods
sub
jge
or
adc
lcall
sbb
int3
in
int
xchg
cmp
jae
loop
enter
arpl
jmp
adc
scas
ror
sarl
and
inc
in
xchg
cmpsl
inc
pop
and
test
adc
pop
in
lahf
stos
je
pop
pop
mov
pop
dec
faddl
jle
adc
outsl
lea
repnz
mov
fwait
nop
into
pop
adc
sti
fldl
test
dec
or
sbb
adc
inc
test
addr16
and
int
dec
push
add
out
sbb
sub
popf
pop
add
and
or
cwtl
ja
outsl
push
pushf
es
mov
les
mov
in
pop
pushf
jb
enter
and
lret
popf
inc
push
ss
fs
out
dec
push
incb
inc
shll
sbb
outsb
xchg
icebp
je
into
in
add
fwait
lret
cmp
enter
icebp
pop
aaa
shll
xor
pop
inc
aas
xchg
xor
test
xor
mov
call
icebp
dec
cmc
mov
testl
sbb
bound
dec
and
pop
mov
lret
jge
push
pop
adc
out
in
in
and
sub
dec
xor
cmpsb
and
mov
mul
fstpl
fiaddl
jp
test
mov
lods
cmc
adc
test
mov
push
stc
push
aad
lret
or
adcl
xor
fwait
jno
fstps
xchg
movsl
sbb
inc
inc
jp
xchg
andb
int3
ret
sysret
test
push
xor
add
out
movsb
insl
into
stos
inc
jnp
jmp
or
loop
jp
sub
or
and
jo
lock
fsubr
fs
mov
daa
cmp
mov
sub
neg
xor
dec
loope
wbinvd
push
jle
and
enter
int3
mov
mov
rcl
sub
outsb
ret
stc
mov
pop
and
dec
nop
cs
icebp
jp
movsb
clc
or
or
dec
xchg
push
enter
jge
xchg
mov
je
cltd
ret
mov
js
aas
xchg
dec
repnz
stos
pop
test
inc
mov
stc
stc
pop
movsl
adc
icebp
fld
mov
std
into
jb
cmp
std
int
xor
inc
jo
imul
xorb
inc
icebp
sbb
ds
imul
in
inc
lcall
jo
jmp
dec
daa
aad
and
jl
or
mov
and
pop
ss
gs
mov
push
sbb
adc
pop
mov
out
jno
fisubs
pusha
xorb
lcall
add
loop
sub
inc
sub
jle
cmp
ficoms
cmpsb
fwait
cmp
and
xor
mov
popa
mov
add
repz
hlt
adc
jecxz
add
pop
or
push
insl
dec
sub
push
sbb
cwtl
add
jns
bound
xchg
sti
cld
and
xchg
int3
fdiv
or
pop
xchg
rcrl
mov
lahf
sub
movsl
cmc
out
pop
mov
xchg
ret
jae
fistps
inc
jbe
jae
and
test
lods
notb
clc
sub
or
push
sbb
dec
std
xlat
xchg
push
dec
bound
mov
add
jg
subl
fstpl
std
adcl
sub
jmp
es
scas
add
jle
fildl
adc
in
dec
pop
pop
fisubl
insb
mov
cli
jecxz
cmpsb
and
call
pop
pop
scas
sbb
cwtl
pushl
out
out
fwait
inc
popf
cmpsl
xor
adc
stc
xchg
fs
neg
push
sbb
repz
inc
xchg
or
inc
sub
incb
ja
push
jle
jo
scas
dec
hlt
gs
call
cmp
mov
fmuls
sub
iret
