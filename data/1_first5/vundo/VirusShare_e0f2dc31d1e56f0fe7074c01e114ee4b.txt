jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
jae
jne
xchg
mov
adc
add
or
add
add
add
mov
add
xor
and
push
add
add
into
add
add
and
jnp
faddl
addl
add
add
add
add
add
add
add
mov
dec
add
xor
cwtl
add
add
add
xor
jnp
sub
add
add
add
add
push
dec
add
add
jnp
and
add
add
add
add
add
or
lret
add
add
add
jnp
dec
add
add
add
jnp
mov
pop
add
add
add
inc
add
mov
dec
add
add
add
add
bound
cmpsl
add
dec
add
add
add
add
or
xor
xchg
add
mov
mov
adc
filds
push
add
dec
add
add
add
jnp
mov
cmp
add
add
add
add
add
add
jns
stos
add
add
inc
add
add
add
add
jnp
bound
iret
add
pop
add
jnp
pop
add
add
add
add
jnp
mov
jp
add
add
jnp
jp
outsl
add
add
insl
add
add
roll
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
dec
add
add
dec
add
add
push
add
add
outsl
add
add
add
sub
add
jnp
lcall
add
add
add
push
add
add
cmp
iret
add
cmp
fwait
add
add
inc
add
add
add
lea
cmp
bound
jnp
xlat
add
iret
add
add
add
jns
dec
add
mov
ja
cmp
inc
add
lods
add
add
add
add
add
add
loope
sub
jnp
bound
dec
add
pop
add
or
cltd
add
add
add
add
add
add
bound
dec
add
dec
add
inc
add
add
add
jnp
push
add
add
add
add
cmp
sub
add
bound
jnp
adc
jp
xchg
add
pop
iret
add
aad
add
bound
jnp
jl
cld
add
pop
add
add
cmp
mov
add
cmpsb
add
mov
add
add
movl
cld
add
add
xor
inc
add
add
add
add
filds
dec
add
add
add
add
arpl
rolb
or
add
add
add
mov
xor
jo
dec
add
add
add
push
and
add
rolb
cld
add
add
add
add
add
filds
cmp
aad
add
jo
jnp
inc
add
add
inc
add
add
add
add
jnp
mov
dec
add
add
add
add
dec
add
add
add
add
add
add
dec
add
add
jnp
aad
push
add
add
add
popa
add
adc
xlat
add
add
add
xchg
add
add
or
add
add
mov
add
add
add
add
push
add
add
cmp
cmp
add
sub
add
add
negl
icebp
jg
xchg
addb
fsubs
rcrb
rorb
icebp
les
arpl
mov
push
inc
adc
lcall
out
sub
loopne
xchg
ds
fstp
ret
loope
xchg
shrb
fs
test
xor
test
xchg
popf
sbb
fbld
sahf
lahf
inc
mov
mov
xchg
inc
sub
sub
fisubs
or
jb
pop
xchg
imul
rcrb
mov
lret
int3
ret
mov
and
xor
mov
cld
fcmove
lock
push
sbb
xchg
test
lcall
test
shll
mov
xor
shlb
jo
jns
std
out
je
std
aam
sub
push
cmpsb
pop
jae
stos
inc
pop
adc
subl
data16
and
cmp
pop
testb
dec
jl
into
rcrb
imul
loop
shll
in
imul
in
jecxz
jae
fmuls
pop
in
repz
out
mov
adc
inc
mov
sbb
sbb
rcrl
jp
data16
sub
and
jno
fsubs
sub
mov
test
lcall
adc
pop
inc
jle
xor
cmp
pop
push
out
mov
lret
jno
cmp
inc
mov
xor
lods
mov
mov
int3
cmp
es
pop
adc
adc
int3
into
inc
les
jb
jmp
push
jmp
pop
lock
lcall
scas
setae
in
imulb
jns
push
pop
pop
lds
test
movsl
lods
rcrl
pop
gs
data16
sbb
cli
xchg
push
xor
hlt
add
aam
test
subb
sub
subb
xchg
and
loopne
cli
out
inc
ret
cs
cmp
stos
test
xor
jbe
xchg
ret
dec
scas
xor
push
enter
dec
aaa
lret
mov
testl
cmpsl
js
popa
popl
sbb
cmpb
push
loop
push
addr16
xchg
sub
mov
or
inc
pop
stos
hlt
cmpsb
cmp
loope
orl
orb
push
dec
mov
mov
addr16
and
dec
pop
xchg
jle
or
push
lret
xchg
rcrb
fstpl
sub
jne
cmpsl
adc
add
clc
push
arpl
lds
xchg
test
jbe
inc
sbb
fld
aas
movsb
and
add
push
sbb
std
in
xchg
bound
xchg
jmp
mov
xchg
and
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
out
or
inc
sub
adc
imull
mov
xchg
xchg
ja
or
inc
sub
pop
daa
pop
pop
jp
push
notl
stos
mov
cmpsl
enter
ljmp
inc
xor
inc
daa
push
pop
bound
jo
lcall
aam
into
mov
pop
push
addr16
pop
pop
dec
mov
cltd
xor
jbe
in
fdivrs
xor
add
ljmp
sub
mov
andb
mov
dec
push
dec
mov
jg
xacquire
pop
or
jne
shrl
aaa
negl
cmp
jg
jae
cli
ret
inc
addr16
ja
stos
jns
pop
or
push
pop
out
out
and
das
daa
push
out
dec
xchg
cwtl
cmc
add
push
pop
fistps
pop
add
inc
adc
fmul
ficoml
test
addr16
ret
xlat
shr
out
out
jnp
cmp
repnz
mov
repnz
sub
or
inc
sub
pop
daa
dec
pop
jp
jae
lcall
mov
cmpsl
rclb
sbb
js
pop
or
pop
inc
sub
bound
lahf
cmc
push
mov
mov
xrelease
jae
arpl
dec
cmovne
inc
add
push
jg
movsl
out
mov
scas
fbld
lret
cwtl
sahf
add
dec
or
outsl
jbe
daa
dec
pop
jp
push
lcall
mov
cmpsl
lret
xchg
ja
or
inc
sub
pop
daa
dec
pop
jp
push
lcall
mov
cmpsl
lret
xchg
ja
bound
fidivrl
add
scas
dec
repz
sub
xchg
dec
idiv
ja
jg
cs
dec
addr16
repnz
pop
leave
cmp
jne
or
repz
jno
mov
mov
cmp
movsb
push
scas
sub
loop
sbb
xchg
and
mov
push
mov
imul
jnp
adc
cmp
aam
fsubrl
movl
pop
dec
xchg
aas
imul
cli
or
inc
mov
aas
mov
push
fldcw
ds
xchg
inc
inc
cmpsb
into
inc
ja
mov
test
jmp
enter
push
fcomps
aam
add
mov
arpl
in
adc
movsl
jmp
notb
jno
pop
xchg
adc
push
pop
mov
sub
jge
jp
inc
fs
in
ja
shlb
push
mov
xor
push
add
dec
xor
sub
popa
sub
push
xchg
fsts
cmc
test
and
psrld
mov
lea
adc
or
add
push
push
dec
mov
jmp
inc
inc
cmp
leave
cltd
xor
hlt
mov
outsb
mov
xchg
xchg
fcoms
std
outsl
jge
cmpsl
int3
ret
mov
mov
mov
push
cmp
fstpt
sbb
test
jno
cs
jl
fisubrs
dec
push
movsl
pop
fmuls
mov
push
jo
roll
inc
roll
popf
insl
fcoml
addb
mov
popa
jmp
daa
xchg
aad
clc
out
aaa
pop
andl
lods
das
jb
bound
dec
mov
adc
sub
jne
gs
push
xchg
xorb
cmp
fldt
xchg
popa
mov
mov
or
ljmp
iret
mov
imul
push
lcall
adc
mov
or
aaa
lret
cmpsl
adc
xchg
rorb
ret
in
jb
sarl
and
sbb
push
js
mov
clc
icebp
popa
ret
mov
lret
mov
mov
mov
pop
pop
fistps
sbb
push
push
and
and
xor
push
sub
jne
pop
mov
popa
test
xor
jecxz
notb
pop
sbb
ret
call
outsb
lret
pop
pop
mov
fistpll
fwait
hlt
mov
jns
test
sbb
sbb
mov
cmp
mulb
push
pop
cmp
fisttpll
add
scas
pop
mov
idiv
stc
xchg
fidivrs
sbb
pop
jl
paddq
inc
cmp
mov
fsts
sbb
adc
orl
mov
in
xor
jecxz
sbb
xchg
scas
xchg
cmc
cmpsl
pop
mov
xor
test
movsl
mov
xor
mov
les
jge
lds
dec
ja
imul
mov
xchg
in
test
pop
pop
in
xlat
test
pop
push
nop
shl
bound
pmaxsw
cld
and
daa
xor
sbb
pop
or
sbb
sbb
test
es
stc
cltd
lahf
sub
movsb
bnd
mov
and
or
xchg
dec
ficoms
cmp
aad
stos
mov
mov
dec
cltd
push
jecxz
or
add
mov
test
or
mov
bound
dec
lahf
mov
pop
mov
lods
sti
out
jg
dec
ret
xchg
xlat
shld
rorb
jae
add
cld
popl
mov
jge
mov
dec
ftst
ljmp
loopne
cli
jns
cmp
push
adc
dec
test
fmull
shl
adc
loope
aam
mov
loope
outsl
add
cmp
mov
stc
xlat
gs
lds
dec
daa
into
push
cmp
fisttpll
xchg
shr
or
mov
pop
pop
mov
and
arpl
sub
addr16
shlb
movsl
lods
adc
bound
xlat
jnp
push
add
ss
jbe
loop
push
jbe
fs
mov
jo
imul
lret
and
ss
dec
add
sbb
dec
fcmove
test
outsb
test
fisubrs
pop
xor
loopne
or
xor
pop
xor
add
jg
cmpb
jmp
pusha
pop
cs
xor
shrl
cmp
cmp
pop
sub
sbb
jbe
inc
jmp
jp
subl
push
sbb
jnp
in
out
cmpsb
mov
adc
rcll
pop
dec
out
mov
cwtl
cld
dec
rolb
adc
repnz
xchg
jno
add
ret
jp
dec
and
pop
andb
test
lcall
add
insl
jae
pushf
call
mov
adc
or
push
jle
in
call
iret
scas
push
xchg
les
cmp
add
pop
and
mov
ss
addl
add
cmpsl
ret
cmpsb
jns
stc
and
int3
cmpsb
xor
lds
add
sub
push
stos
dec
popl
dec
fnstcw
shrl
adc
mov
repnz
lds
ret
lret
fisubrl
mov
add
out
dec
arpl
mov
xchg
scas
divl
or
or
repz
aam
mov
jne
push
xor
adc
xor
addl
add
call
iret
dec
add
jno
fdiv
xor
lock
je
xchg
mov
out
sbb
cwtl
xor
fwait
packssdw
andb
sub
sub
dec
scas
arpl
push
jl
jno
push
add
xor
mov
jp
jp
aad
jg
rorb
mul
dec
jbe
pop
mov
fnstenv
dec
ljmp
movsl
inc
mov
ss
lahf
mov
jbe
inc
out
lock
mov
cmp
jno
or
jnp
cmp
aad
call
ficoms
loope
lods
cmpsb
sbb
mov
pop
mov
ss
lcall
les
xchg
jno
call
add
lods
cmc
add
es
insl
sub
xchg
movsl
movsl
data16
lahf
mov
out
call
jno
mov
cmp
mov
or
mov
push
pop
jae
fistpll
and
addr16
add
adc
xchg
adc
mov
testl
pop
addb
adc
ss
icebp
dec
or
movsl
dec
dec
cmp
pusha
fistps
cmp
out
push
dec
xchg
int
cwtl
pushf
lahf
xor
stos
or
mov
jnp
mov
inc
cmpsl
cmc
or
loop
sub
push
std
int
add
addr16
pop
rcrl
ja
or
imul
aad
xor
cmp
insb
inc
adcl
dec
cmpsb
test
cs
outsb
pop
push
decb
lock
sub
inc
lret
cmp
jg
aad
sub
add
mov
mull
mov
jge
push
add
lods
aaa
pop
push
les
pop
fdivrs
outsb
jg
mov
icebp
pop
inc
shlb
cmp
mov
lret
aaa
imul
into
out
mov
jecxz
int
fldenv
mov
mov
push
pop
or
or
fists
inc
in
in
push
sarb
jb
insl
and
xor
mov
jl
shll
dec
add
cmp
sbb
lea
mov
pop
cmpsl
xorb
add
cld
sbb
imul
lods
xor
sbb
add
push
pushf
sub
jns
inc
dec
sbb
fdivr
mov
repz
pusha
jl
arpl
lock
xor
subb
pop
jo
shrl
xchg
mov
or
or
jne
cmp
imul
movsl
fwait
add
inc
ret
dec
fs
bound
mov
int
mov
sbbb
addr16
or
inc
xchg
test
js
inc
and
movsb
sarb
es
cltd
in
out
in
mov
icebp
cmp
xchg
testb
in
push
adc
xchg
not
and
inc
in
pop
or
mov
push
sbb
and
cmp
fs
enter
or
adc
cmpsb
ja
enter
enter
pop
mov
imul
xchg
lods
cltd
push
repz
sub
nop
fiaddl
stc
xchg
arpl
clc
shrl
js
xor
popf
test
sbb
in
add
pushf
push
adc
dec
xor
add
stos
shl
mov
daa
fmul
js
jno
mov
sbb
sarl
orb
xchg
pop
xchg
push
mov
out
lret
stos
aaa
aad
mov
mov
leave
jg,pt
adc
push
lret
add
adc
and
hlt
mov
sub
xchg
and
cmc
push
nop
xor
mov
adc
mov
cmp
andb
outsb
or
push
fnstsw
ficoml
and
mov
mov
les
addl
cmp
enter
push
in
push
xor
ds
mov
inc
int
test
addr16
pop
test
add
ss
es
inc
xchg
push
outsb
sbb
loop
jl
jne
les
and
nop
arpl
mov
and
loope
adc
or
es
mov
stos
inc
sbb
sbb
sbb
loope
aas
pop
add
int3
push
mov
and
mov
insb
fwait
sub
cmp
test
xor
and
sbb
add
test
cltd
ljmp
div
and
lods
and
sub
out
test
dec
lret
inc
push
mov
pop
pusha
clc
sub
rcll
mov
movsl
mov
bound
aas
popa
cmp
fstps
add
dec
pop
test
outsl
mov
pop
adc
into
push
lods
mov
es
jp
sub
cmc
pushf
push
mov
cli
cmp
xor
jns
imul
mov
dec
push
aas
mov
pop
lea
stos
or
xor
sbb
scas
out
dec
jge
mov
cmpsb
mov
add
jnp
xchg
fidivrl
stc
inc
cmp
xor
mov
lock
sar
jnp
add
adcb
pushf
inc
sbb
outsb
sti
mov
jne
mov
jmp
inc
ret
or
and
inc
iret
push
adc
adc
or
repnz
jns
in
jb
xchg
test
mov
adc
out
xlat
mov
cmp
sbb
mov
popa
inc
push
roll
out
fdivs
aas
aam
fxam
xchg
fildl
nop
and
dec
bound
les
push
sbb
add
cmove
and
sahf
sub
push
mov
mov
mov
cltd
sub
push
daa
and
loop
mov
add
pop
outsl
aad
and
call
les
pop
cltd
xor
cmpsl
cltd
insl
nop
lret
inc
xchg
nop
jp
push
lahf
hlt
inc
or
nop
lcallw
jg
ret
sbb
jb
jge
ret
pop
dec
scas
xchg
out
out
mov
movsl
fldcw
and
lods
fisubrs
out
stc
jb
mov
data16
mov
call
rclb
or
adc
push
pop
xchg
push
js
mov
scas
out
movsl
imull
jo
jns
add
xchg
inc
fldl
add
sbb
es
leave
push
mov
pop
rdpmc
fcmovbe
xor
hlt
xchg
pop
xchg
inc
xchg
push
mov
out
mov
fisttpl
and
test
xchg
jbe
nop
std
jo
push
adc
roll
push
es
lret
sub
ret
mov
lcall
push
fidivs
sub
inc
sbb
sti
cmpsl
fbld
xor
sbb
mov
mov
icebp
push
in
push
and
xchg
push
cmpsl
ss
call
xchg
mov
xor
stos
hlt
bound
mov
leave
mov
pop
ret
loope
movsb
lret
decl
hlt
gs
pop
icebp
lock
xchg
xor
xchg
mov
rcll
movsb
xchg
sbbb
fmull
shlb
dec
rorl
and
sub
pushf
ljmp
cmc
frstor
loopne
xchg
in
test
dec
pop
movsl
jmp
idivl
mov
int3
imul
pushf
aad
adc
mov
in
leave
jbe
pop
pop
pop
mov
jge,pn
cmpsl
pop
fnstcw
xchg
xor
xor
testl
mov
mov
in
ret
ret
pop
cmpsl
push
adc
int
mov
icebp
xchg
mov
add
sbb
pop
pop
pusha
inc
aaa
inc
popl
lods
test
push
stc
pusha
sbb
inc
xor
xor
sub
mov
pusha
jp
pop
push
mov
test
mov
jns
sti
inc
repz
adc
popf
insb
iret
and
push
loop
xor
mov
add
data16
ljmp
add
pop
es
adcl
push
jmp
mov
sub
jb
loopne
sub
pop
ljmp
out
fwait
bound
pop
sbb
in
rolb
cwtl
jae
jecxz
pop
jmp
ficoml
jg
jnp
je
cmp
sbb
or
jno
jmp
hlt
and
shll
inc
pop
ss
xor
stc
push
jbe
lods
jecxz
or
lock
shl
adc
mov
add
jp
cmpsl
hlt
xor
dec
es
add
fidivrs
xchg
cltd
mov
cld
out
lock
jne
fucomp
mov
cli
fistps
ljmp
xchg
jnp
lcall
pop
neg
mov
xor
inc
add
loopne
sub
dec
adc
cmp
es
outsb
or
lret
into
sbb
bound
jbe
xchg
mov
loopne
push
dec
out
add
mov
xchg
imul
mov
push
and
pop
in
push
fisttpll
shlb
ljmp
adc
jle
mov
pushf
ret
adc
jo
pop
mov
fdivp
loope
sbb
pushf
inc
xor
lahf
or
push
out
lock
test
mov
pop
or
xchg
mov
je
dec
outsb
repnz
je
mov
jmp
shl
and
nop
loopne
jg
jbe
and
scas
xchg
aas
pop
xor
andl
rcl
test
dec
shl
cmp
idivl
iret
jo
sti
ja
gs
mov
cmp
lcall
lcall
xchg
roll
sbb
ror
mov
outsb
das
ljmp
add
jb
fldl
daa
sub
cmpsb
test
aaa
xchg
jne
out
pushf
cmp
in
outsb
movsb
iret
movsl
dec
ljmp
cmp
jge
ret
test
pop
out
dec
sbb
outsb
int3
ror
ljmp
inc
jg
adc
mov
aam
fcomps
fs
daa
jb
lahf
mov
jne
pop
push
into
cmp
jno
out
fwait
or
mov
cmp
cwtl
rcr
mov
cld
mov
leave
movsl
mov
int
xor
push
inc
in
mov
std
fwait
xor
std
imul
out
adc
dec
cmc
pop
inc
ret
imul
fdivrl
xchg
sahf
xchg
out
dec
push
push
outsl
xor
je
pusha
push
jg
xor
sub
mov
cmp
mov
push
xor
inc
mov
pop
mov
mov
in
popf
xchg
xor
xlat
pop
pop
insb
neg
call
fistpll
mov
test
mov
test
add
ss
cmpsb
xchg
mov
stos
insb
dec
mov
sub
movsb
loopne
in
jno
scas
or
push
add
pop
pop
inc
in
add
ret
loopne
stc
imul
mov
xchg
jmp
pop
xor
cld
xchg
mov
test
adc
repnz
mov
push
lahf
lock
xor
add
mov
out
pushf
adc
sbb
nop
fmull
lahf
mov
add
mov
hlt
aas
and
sbb
add
test
mov
push
imul
stos
js
icebp
mov
fcmovbe
jecxz
fnstsw
jle
lock
fucomp
imul
jne
inc
hlt
or
mov
jecxz
iret
pusha
addr16
xchg
test
and
and
sarb
mov
and
adc
decb
sub
pop
fsubl
push
loop
jecxz
or
sbbb
sub
jbe
dec
cld
mov
mov
in
and
gs
lods
mov
mov
xchg
in
cmpsb
stos
ret
and
rorb
lock
push
push
jnp
les
es
pusha
jae
lods
and
roll
lods
mov
sbb
sbb
jbe
mov
pop
mov
sbb
inc
and
rolb
lcall
cmpb
inc
add
scas
pop
mov
dec
adc
bound
int3
or
cmp
int
das
adc
fimuls
es
lods
cmc
cltd
cmp
in
or
lret
leave
push
or
scas
sbb
shll
cmp
fldenv
scas
mov
or
pop
nopl
xor
shll
cmpsb
or
xor
jle
push
lret
mov
push
aad
icebp
push
dec
into
movsl
adc
cmp
pop
ret
adc
int3
les
inc
clc
xor
inc
push
pop
addr16
sahf
leave
dec
pop
xchg
js
repnz
jp
cli
mov
fadd
ljmp
jne
xchg
inc
push
and
mov
inc
insb
sub
lret
enter
pop
push
or
cld
les
or
sub
outsl
mov
sub
jle
mov
jb
inc
call
mov
into
pop
in
bound
pop
rolb
std
adc
xchg
shrb
fwait
push
loope
cwtl
ljmp
mov
outsb
adc
into
inc
cmp
pop
cli
add
mov
and
test
das
lret
lds
out
xchg
pusha
pop
cli
gs
push
lds
push
inc
fisttpll
out
inc
add
jmp
pushf
sub
cmp
adc
xchg
shlb
xor
adc
push
ljmp
es
lods
mov
insl
into
ficoms
cmp
in
inc
mov
jmp
out
xchg
stos
xchg
cmp
sti
dec
and
xor
insb
pop
xor
jmp
xor
out
sbb
scas
nop
mov
push
mov
imul
jle
push
pop
and
in
movsl
push
clc
sbb
jne
out
inc
cld
and
repnz
jg
inc
fdiv
out
in
xchg
xor
cmp
fcmovb
sbb
incb
into
jb
cld
dec
pop
mov
mov
add
ret
fsubl
dec
ret
and
pop
fcmovu
repz
xor
pop
sub
rcr
popa
dec
jnp
cmp
push
andb
add
stc
dec
xor
inc
sbb
lret
mov
lds
sbb
insb
push
std
add
inc
push
cmp
lcall
pusha
or
ljmp
or
outsl
pusha
or
xor
pop
sahf
scas
push
mull
push
mov
arpl
or
push
ja
std
jg
or
push
sbb
xor
outsl
ja
xchg
xchg
xor
mov
sbb
sub
xor
sahf
lock
sbb
xchg
push
pusha
pop
fistps
nop
sbb
popl
leave
and
xchg
orl
les
push
jle
out
jmp
fisubrl
pop
or
pop
rorl
repz
arpl
clc
aad
jo
lods
inc
inc
sbb
mov
inc
jl
sahf
or
mov
adc
shll
mov
sti
sub
adc
lret
ret
jl
repz
sbb
pop
dec
sbb
mov
sbb
mov
push
fsubrl
aam
pop
mov
dec
loopne
jnp
mov
add
insb
call
pop
shl
ljmp
mov
mov
shl
push
push
xor
out
adc
sub
push
in
jle
gs
xchg
jmp
dec
repz
lock
push
fs
lods
or
jae
aaa
repz
add
loopne
js
sub
and
ret
cmp
cwtl
in
mov
or
cmp
cmpsl
cmc
rolb
leave
jecxz
mov
lods
jl
xchg
cmp
push
jle
lods
pushf
je
aam
fs
addr16
pop
xchg
xchg
add
push
xchg
in
and
or
daa
jo
push
enter
or
daa
dec
pop
jp
push
lcall
mov
cmpsl
lret
xchg
ja
or
inc
sub
pop
daa
dec
pop
jp
push
lcall
mov
cmpsl
lret
xchg
ja
or
inc
sub
pop
daa
dec
pop
jp
push
lcall
mov
cmpsl
lret
xchg
jbe
pushw
push
ds
sub
pop
daa
dec
pop
jp
stos
negl
ffree
push
das
mov
test
sub
cmp
or
sbb
pusha
lcall
aad
fcoms
imul
jmp
or
sbb
jmp
sti
or
sbb
imul
mov
pop
jmp
or
sbb
jmp
sti
or
sbb
imul
lcall
jns
pop
mov
sbb
pop
aaa
insw
jp,pn
mov
js
ja
orl
fs
jecxz
sbbb
neg
in
imul
xchg
adc
dec
pop
mov
or
sub
cmp
stos
xor
stos
lods
test
sub
dec
hlt
fstps
sub
cli
lret
iret
add
pop
lret
pop
pop
xor
push
js
imul
push
cmp
mov
es
stos
pop
inc
mov
ror
test
mov
add
adc
jecxz
jle
or
dec
adc
lret
inc
pusha
repnz
out
xchg
cld
push
dec
repz
or
push
fistpl
ljmp
fldt
jns
dec
mov
test
dec
cltd
pop
jmp
or
pop
dec
xchg
dec
lea
or
push
cli
es
fucomp
flds
fcoml
cli
and
mov
jle
stos
dec
mov
lret
pop
mov
xor
fldt
ficoms
hlt
sbb
pushf
push
mov
mov
jl
sub
jns
dec
mov
test
dec
cltd
pop
jmp
or
sbb
jmp
sti
or
sbb
imul
mov
pop
jmp
or
sbb
jmp
out
xchg
cmp
mov
adc
pop
subl
movsb
mov
aam
xchg
pcmpgtd
bt
jmp
jae
shll
nop
mov
cmp
lds
je
test
outsb
lcall
lcall
push
or
dec
pusha
lea
add
cld
and
mov
pop
mov
jbe
arpl
mov
fistl
jno
mov
test
dec
loop
movsl
xor
subl
mov
test
xchg
or
sarb
sar
fidivl
or
mov
mov
pop
rcrb
arpl
jge
imul
xlat
repz
sbb
pusha
sub
lret
divl
dec
pushf
push
pop
jp
jg
data16
sub
dec
outsl
inc
leave
xor
icebp
adc
mov
xchg
xchg
or
xchg
xlat
or
push
mov
pusha
roll
test
call
add
lahf
faddl
out
mov
xchg
xchg
fstps
xchg
repnz
lods
pop
int3
mov
hlt
repz
mov
movsl
cmp
int3
or
push
js
insl
add
aad
xchg
jecxz
sub
xor
shrb
sub
imul
jne
sbb
loope
and
call
sub
out
xchg
pop
xor
test
push
cmp
cltd
ljmp
into
loope
push
cmc
xor
out
cmp
add
loopne
in
movsb
xor
popf
dec
mov
push
scas
inc
shlb
cmp
sub
inc
jae
dec
adc
push
xchg
outsl
sahf
in
mov
mov
test
jae
lretw
dec
mov
inc
dec
jno
sub
sbb
and
hlt
rclb
jecxz
xorb
leave
lahf
push
aam
in
iret
stc
mov
jp
adc
ss
dec
dec
mov
xchg
movsb
xor
jle
mov
mov
ret
and
pop
pop
sbb
jo
adc
dec
push
in
cmp
inc
into
dec
js
inc
cmpsl
ret
and
cmp
test
pop
cmp
adc
jae
sub
push
orps
cltd
xor
sub
sbb
out
in
sbb
testb
sahf
dec
mov
pop
gs
outsl
dec
lods
std
popf
adc
stos
pop
sbb
add
cltd
out
pop
cmp
fnstsw
scas
roll
insl
pop
sar
in
popa
aam
repz
and
loopne
test
das
lcall
xor
mov
inc
jae
es
adc
and
pushf
movsb
pop
xchg
sti
lret
insb
cwtl
pop
call
lock
xor
add
adc
sub
into
pop
push
xchg
gs
test
push
shl
mov
push
aaa
xchg
clc
je
xchg
stc
mov
jp
leave
pop
cmp
sub
add
cs
movsb
and
push
pop
xchg
mov
sti
add
insb
xchg
cwtl
clc
adcl
out
adc
pop
and
je
in
int3
xchg
jne
sti
pop
xor
push
push
lds
xchg
push
xchg
stc
lds
mov
notl
mov
jge
mov
mov
jnp
ja
inc
pop
rolb
inc
pop
dec
lods
add
add
push
adc
rolb
cmp
xor
xchg
das
int3
add
inc
aad
nop
add
or
jbe
dec
sub
pause
dec
insl
movsb
mov
cmpsb
mov
jo
out
cwtl
int3
push
and
ret
addr16
lock
mov
adcl
add
hlt
insl
aaa
mov
xor
xchg
sahf
add
data16
lds
inc
adc
push
cmp
xor
stc
fprem
add
outsb
mov
into
adc
je
lds
push
sub
es
data16
and
lret
or
outsl
mov
xor
push
roll
pusha
outsl
sbb
inc
xor
or
scas
push
stc
sub
je
jecxz
loope
jnp
cld
lea
xor
popl
in
ret
cmp
jp
sbb
sti
outsl
in
sub
shrb
ret
push
rdtsc
mov
xchg
fistps
sub
or
mov
inc
mov
sub
test
stos
inc
jae
or
sbb
mov
ja
cmp
ljmp
add
lods
mov
lods
xchg
xchg
add
ffreep
popa
arpl
push
jb
popa
loopne
push
mov
das
or
lret
and
nop
push
xor
sub
jl
shl
scas
mov
fdivrl
mov
inc
xchg
push
shl
or
inc
frstor
scas
xchg
or
and
pop
lahf
std
push
mov
mov
push
ljmp
aad
xchg
mov
push
jg
shrb
aaa
push
inc
mov
dec
adc
icebp
xchg
jl
pop
dec
rorb
mov
insl
mov
sar
sbb
ret
or
inc
test
fsubl
std
adc
xor
aad
sbb
or
dec
or
cmp
dec
pop
pop
test
insl
add
insb
xchg
mov
and
jns
fcomp
sbb
push
cmp
lret
jge
sbb
or
pusha
mov
xchg
shlb
movsl
int3
jns
insb
adc
das
add
in
pop
push
xor
adc
xor
in
stc
mov
cltd
imul
rolb
out
nop
pop
aam
andl
add
xor
in
pslld
ljmp
insb
outsb
mov
mov
pop
popf
mov
adc
jo
pop
popf
xor
test
add
pop
mov
and
pop
dec
jo
pop
cltd
xchg
sbb
cmp
cmpsb
jnp
cmp
or
andb
sbb
aad
fcmovu
xchg
or
cltd
mov
mov
lret
sahf
sbb
vfmsubpd
mov
jne
rolb
sub
xchg
fs
fs
or
loope
push
xchg
xchg
cwtl
mov
push
xchg
sub
test
mov
imul
xchg
pop
mov
sti
fnstenv
cmp
sbb
jb
xor
xchg
mov
add
pop
mov
loop
aas
in
int
bound
jnp
popf
lds
push
adcl
pop
pop
push
mov
push
andb
or
sub
push
ljmp
or
xor
insl
push
adc
incb
cli
fidivl
daa
cmp
lret
decb
xlat
and
cmc
and
and
sahf
mov
cmc
js
sarw
std
inc
jns
aaa
sub
xor
cltd
jo
not
pop
mov
fs
out
gs
mov
sub
push
clc
inc
cltd
and
scas
cmp
fcomps
add
lock
adc
adc
cmp
scas
in
mov
xor
pop
cmp
stos
dec
mov
adc
dec
mov
adc
stc
sahf
lret
sub
add
or
pop
push
push
dec
jg
movsl
mov
clc
ret
mov
pushl
sbb
mov
in
sub
popf
sub
call
mov
mov
in
add
repz
and
xchg
xchg
cmp
fstl
push
sub
pop
push
cld
push
call
xchg
dec
lahf
jg
cwtl
icebp
xorb
int3
cld
cmp
imul
int
cmp
xchg
lcall
dec
ja
push
add
lea
push
std
or
es
rcrb
push
test
aaa
or
add
ja
jle
int3
adc
adc
scas
add
mov
pop
outsl
xlat
xchg
in
fimull
mov
pusha
cmp
stos
mov
xchg
mov
nop
jbe
popf
or
or
sub
adc
xlat
stc
mov
adc
frstor
lret
enter
ficomps
mov
jle
xor
fiadds
add
pop
pop
repnz
sub
dec
fwait
mov
dec
push
roll
push
dec
ret
pop
mov
mov
jle
push
std
std
mov
mov
cltd
movsl
jo
mov
into
pop
pop
daa
adc
fsubl
cmpb
and
mov
je
das
mov
jne
shrl
push
xchg
bound
scas
xor
ja
push
ret
repnz
arpl
cli
push
outsb
pop
gs
ds
mov
and
jae
in
ret
ljmp
cli
lahf
fcoml
and
xor
xchg
popa
dec
add
mov
mov
xor
inc
jge
fimuls
dec
sti
lcall
xchg
and
push
call
test
std
outsb
jb
test
cmp
outsb
push
in
mov
push
pop
mov
insl
inc
sti
pop
push
in
pop
inc
xlat
adc
rcll
ror
stos
sarl
push
lea
ficoms
arpl
dec
or
loopne
fs
cs
mov
sti
push
jne
inc
cmpsl
dec
add
pop
and
pushf
adc
iret
xor
add
out
test
cmp
fs
test
cmp
outsl
jnp
pop
das
aas
or
sbb
int3
aaa
loopne
scas
addb
shll
mov
lret
add
stos
sub
loope
jne
jo
pop
lcall
inc
mov
lods
add
in
sub
push
std
jnp
icebp
mov
sbb
scas
adc
xor
push
add
mov
loope
add
and
add
jp
iret
push
push
out
jb
rorl
test
andb
sahf
mov
jge
jne
or
cmc
push
mov
xchg
mov
xchg
dec
cmp
push
cld
mov
into
push
js
sbbl
outsl
fistps
dec
pop
lds
inc
jmp
sub
js
jns
pop
pop
sbb
faddp
jae
fidivrl
xchg
aaa
cmpsb
mov
jno
not
sbb
lahf
dec
xor
es
pop
cmp
arpl
dec
dec
int
jae
inc
test
dec
jmp
lahf
mov
movsb
mov
or
add
sahf
push
ror
mov
sti
addr16
jo
subl
xor
enter
and
pop
cmp
cmp
dec
xorl
repnz
add
cmp
int3
pusha
inc
loop
cwtl
das
pop
or
loope
rcrb
insb
mov
ret
in
pop
add
leave
pop
rcrb
enter
xlat
add
loopne
aaa
dec
xor
mov
rcl
enter
daa
imul
adc
aad
pop
mov
or
popf
sbb
push
dec
stos
inc
pop
aaa
cli
mov
stos
xor
push
jp
insl
dec
and
repz
xor
pushf
or
imul
adc
into
inc
xchg
shll
push
repz
aaa
mov
adc
cmovne
mov
sti
mov
or
jbe
jno
sub
ss
aas
sub
cli
loope
sbb
sbb
pop
daa
in
mov
dec
fldcw
jg
int
ljmp
arpl
arpl
jne
inc
adc
jge
jg
mov
mov
hlt
xchg
js
test
hlt
pop
sbb
and
push
or
fcmovne
cmp
mov
shrb
neg
and
movsl
mov
cmp
and
lock
pushf
mov
enter
pop
inc
add
decl
je
std
lds
or
and
inc
xchg
dec
shlb
andl
push
std
sbb
dec
in
rcll
jno
push
enter
imul
mov
adc
cld
aad
pushf
or
sbb
push
ficomps
call
or
add
push
repnz
inc
xchg
ret
rorb
enter
sub
push
adc
inc
daa
pop
dec
inc
xor
jge
movb
push
sbb
xor
stc
iret
sub
sti
jns
jmp
out
adc
ret
lahf
xchg
xchg
jb
pop
mov
pop
std
je
xor
ja
stos
or
fsts
pop
push
stos
mov
push
in
das
jo
adc
xor
add
or
jo
add
push
sub
and
out
and
xchg
aad
fbstp
pop
push
ja
pop
lods
adc
jmp
mov
mov
adc
jae
mov
jnp
repz
mov
rclb
sbb
xlat
mov
lret
mov
mov
xor
inc
jne
push
iret
mov
sbb
cmpsb
test
jno
fdiv
push
imul
movl
shrb
sub
andl
cmp
inc
sub
sbbb
aad
pop
dec
popf
mov
and
add
push
jns
fisubrs
cld
lds
fnstenv
adc
sbb
testl
jg
jno
or
push
lcall
rorl
mov
mov
lret
test
dec
bound
insl
push
out
pop
lock
loop,pt
xchg
dec
loope
mov
mov
add
dec
es
pusha
pusha
mov
es
pop
lret
loopne
add
adc
sub
sub
cs
xchg
push
int3
sti
testb
jnp
xchg
add
mov
or
notb
sbb
std
sub
out
dec
mov
das
es
push
xor
jns
add
add
sbb
sbb
dec
fcom
int
call
leave
sub
sub
sub
lret
pop
mov
loop
cmovns
xchg
sbb
bnd
cmp
sbb
repz
sahf
outsb
sbb
les
dec
and
dec
arpl
cmpsl
inc
rorb
cmpsb
and
adc
leave
rclb
fmull
mov
das
jge
pop
sbbb
xchg
cmp
lock
cld
ret
orl
nop
and
xor
mov
push
cmp
cs
pop
sbb
cmp
call
push
jmp
pop
add
repz
cmp
xor
cltd
mov
push
enter
pop
adcb
fsubr
xor
mov
cmpsb
je
sub
push
cli
dec
pop
pop
insl
or
sub
push
pop
pop
sub
adc
lahf
cs
icebp
inc
ret
or
test
cmpl
dec
popa
sbb
adc
mov
add
outsb
xor
mov
mov
pop
cli
lock
pxor
push
std
dec
cmp
push
mov
xchg
icebp
test
out
jg
orl
stc
mov
rclb
pop
cmp
in
cmp
mov
pop
test
dec
repz
rorb
cmp
mov
jno
ret
cltd
jp
cs
jle
jnp
jp
andb
insb
sarb
jae
push
and
call
ds
cmp
inc
cmp
pop
repz
sub
lahf
sub
cltd
mov
xor
pop
jge
adc
mov
xchg
inc
jl
movq
pop
test
rolb
out
sbb
lods
mov
adc
int3
xchg
dec
and
cmc
cmp
rcrb
sub
call
cmp
jno
adc
out
jne
xchg
movsl
daa
sbb
cmp
xchg
jns
mov
int
push
adc
imul
test
mov
loopne
inc
and
or
enter
cltd
dec
lea
lret
lods
xchg
enter
lock
sarb
imull
hlt
fstps
pushf
scas
shl
mov
adc
mov
in
incb
out
aad
adc
aaa
sbb
in
sti
out
xchg
or
repz
scas
sub
sbb
dec
push
std
mov
je
shl
cmp
pushf
push
lock
push
push
xchg
add
xor
mov
add
add
out
pop
in
std
cli
or
sahf
pusha
loope
cli
imul
mov
inc
imul
sub
push
lret
les
loope
fs
lea
push
int
inc
aaa
sahf
add
pop
dec
jmp
imul
lea
imul
lock
enter
xlat
mov
mov
movsb
sub
or
sbb
stos
push
adc
sub
mov
add
cltd
mov
or
inc
pop
enter
pop
aaa
dec
iret
out
outsb
sbb
shrb
dec
mov
mov
push
stos
cld
std
cld
nop
ss
push
xor
aam
imul
cli
das
xchg
test
rorb
mov
sub
jle
mov
mov
mov
sub
mov
addr16
cmp
rcrl
sub
aad
inc
jb
mov
dec
addb
jecxz
mov
mov
jmp
pop
inc
xor
sti
xchg
sbbl
push
dec
fimull
xchg
cld
or
inc
pop
cmp
pop
cmp
dec
add
jmp
addr16
imul
mov
bound
push
icebp
popf
push
dec
fldt
lcall
stos
iret
sbb
add
or
arpl
mov
mov
xchg
sub
movsb
dec
cmp
dec
xor
test
ljmp
dec
mov
sbb
enter
add
cmp
js
mov
test
pop
ds
cmp
jecxz
add
js
xor
mov
mov
pushf
mov
aaa
dec
int
stc
mov
xor
ss
es
push
iret
or
add
adc
shll
cld
out
add
mov
mov
into
push
in
sbb
setg
hlt
cmc
test
mov
out
lea
sbb
sti
adc
fmull
in
fsub
sti
fsubs
sub
icebp
cmp
ss
adc
repnz
inc
ret
icebp
mov
scas
clc
and
or
and
pop
fwait
or
mov
mov
and
sub
add
inc
xor
adc
mov
lods
inc
je
ficomps
adc
xor
test
sbb
mov
jle
rcrb
mov
mov
mov
popf
shlb
pop
adc
xchg
add
and
pop
push
inc
or
inc
in
mov
inc
push
or
adc
addr16
mov
scas
scas
push
mov
sub
cmp
sub
pop
in
out
int3
cltd
mov
or
mov
sbb
fidivrs
aad
jns
jg
xor
jno
movsb
sbb
call
mov
mov
pop
out
lret
push
outsb
aad
sbbb
pop
inc
es
xor
fdivr
adc
pop
or
loop
adc
popa
scas
xlat
pop
fldcw
das
mov
xor
in
or
leave
mov
xchg
dec
lahf
leave
xchg
xchg
loope
test
dec
push
jns
mov
movsb
mov
mov
lods
add
popa
push
nop
add
mov
xchg
test
xchg
xchg
cmp
rcrb
shlb
test
jno
cmc
jb
fld1
jg
mov
repnz
in
aaa
inc
pop
mov
xlat
rcl
movsl
je
int
lcall
add
pusha
out
jle
jle
xchg
sub
sbb
pushf
cmpsb
mov
mov
in
stc
fucom
ljmp
fisttpll
lock
pop
sub
or
mov
sub
mov
test
dec
test
sbb
xchg
pop
sbb
lods
cltd
ret
std
adc
cmp
dec
cmp
jne
pop
dec
xor
dec
hlt
lahf
stos
int3
mov
mov
xor
ljmp
pusha
sar
mov
dec
or
mov
test
jl
lret
lods
cmp
add
in
xchg
sub
jmp
cmpsb
mov
test
mov
sahf
int3
xchg
or
adc
lahf
popa
cmp
dec
subl
jno
cmp
mov
dec
mov
das
fldcw
sti
inc
jl
ja
icebp
clc
icebp
cltd
popf
xchg
push
sub
jecxz
lods
or
xchg
int3
dec
mov
jo
shll
mov
jb
flds
jmp
imulb
inc
mov
bound
xor
xor
or
aaa
daa
mov
les
lret
sbb
iret
loope
cmp
or
outsl
scas
enter
test
roll
leave
mov
or
adc
fptan
lods
xchg
jbe
push
adc
mov
aas
je
push
movsl
mov
shrb
fmuls
stos
jo
jecxz
mov
add
es
in
in
out
repnz
loopne
mov
out
frstor
xchg
out
test
jns
stc
xor
sub
cmp
outsb
stos
adc
jmp
test
add
and
arpl
subb
mov
jnp
sub
mov
add
adc
out
jbe
hlt
cmc
cmpsl
test
xchg
fsubs
mov
test
or
stos
inc
push
mov
in
pop
mov
cmp
loop
xchg
orb
jl
test
adc
out
scas
out
jle
xacquire
sub
es
or
cli
xor
mov
push
push
mov
fldt
jns
dec
mov
test
dec
cltd
pop
jmp
or
sbb
jmp
sti
or
sbb
imul
mov
pop
jmp
or
sbb
out
cmp
or
sbb
imul
mov
pop
jmp
or
sbb
jmp
sti
or
sbb
imul
inc
shll
dec
cltd
sub
mov
and
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
andl
imul
jbe
sub
fsts
lds
jmp
push
mov
jae
sbbl
mov
sbb
or
cmp
sub
fistl
leave
push
fnstenv
jmp
arpl
xchg
dec
mov
add
adc
and
xor
cmp
repz
mov
out
out
sbb
and
or
rcl
push
push
leave
inc
jmp
pusha
mov
out
inc
xor
or
or
ds
jmp
mov
mov
scas
jmp
inc
fsubl
in
cmpsb
sbb
imul
or
sahf
dec
sbb
or
inc
pop
insb
jecxz
fimull
or
pop
ret
cmp
leave
sbb
mov
ss
sbb
jbe
xor
jl
out
leave
xchg
cmc
loop
repnz
push
out
leave
xor
add
mov
stos
test
cmp
adc
sbb
js
push
fdivrs
fucomi
jbe
jg
push
cld
arpl
mov
mov
sbb
or
and
xor
rcll
and
xor
inc
adcl
lds
dec
js
push
xchg
inc
inc
mov
mov
lods
pop
xchg
hlt
cmp
daa
mov
loope
repz
insb
test
cmp
pop
repz
data16
jbe
es
out
aad
int3
ljmp
sbb
jne
or
cmp
sub
fsts
leave
and
xor
inc
cltd
push
mov
jae
sbbl
mov
sbb
or
cmp
sub
fsts
leave
and
xor
inc
cltd
push
mov
jae
sbbl
sbb
jp
and
adcl
push
cli
adcl
aad
daa
jne
call
mov
or
xor
add
add
adc
rorb
sbb
adc
inc
pop
inc
cmpb
jae
add
mov
adc
push
and
pop
adc
and
mov
or
hlt
stos
call
pop
mov
mov
pop
or
add
out
mov
push
sarl
icebp
sarl
add
popa
imul
pop
dec
pop
add
pop
cld
outsl
xor
xor
xchg
xchg
stos
mov
inc
testb
test
repnz
cmp
testl
in
call
push
gs
int
pop
adc
xor
dec
or
xor
ja
inc
jl
shl
loope
popf
or
nop
jno
push
cmp
lods
lahf
sub
mov
fldt
mov
add
insb
outsb
repz
fistpl
add
test
aam
mov
lds
mov
inc
iret
dec
test
mov
dec
rorb
outsb
addr16
jmp
cmpsl
pop
nop
adc
or
fists
fists
cld
jmp
lret
stos
adc
sub
test
lods
das
or
orb
mov
adc
shlb
mov
movsb
dec
mov
mov
lret
xchg
pop
xor
insb
enter
jno
mov
fyl2x
lret
fs
cltd
inc
or
aas
mov
lret
cmp
or
lcall
cwtl
dec
pop
xor
push
ljmp
sti
cmp
test
jne
inc
call
mov
fs
repz
aad
push
imul
mov
sub
add
push
imul
adc
dec
mov
xchg
mov
ljmp
xchg
or
pop
shl
xor
xor
insl
mov
rcrb
jecxz
mov
mov
negb
dec
in
lret
adc
shlb
lods
jmp
sbb
push
les
push
xor
lahf
xor
test
push
call
repz
jo
es
push
push
ljmp
shrl
add
fnstenv
popa
pop
push
mov
push
jle
jmp
test
lret
and
dec
je
sub
and
addr16
pop
insb
jbe
mov
lahf
jae
cmp
lcall
pop
xchg
pop
mov
add
inc
sub
and
int
fcomi
in
mov
or
cmp
jns
mov
xor
stos
stos
sub
mov
inc
jns
xchg
test
inc
adc
and
pop
fstpl
xor
daa
fmuls
mov
jbe
or
pop
fwait
mov
push
xchg
jne
leave
adc
xor
or
rorl
jnp
inc
and
mov
nop
in
adc
ja
rcr
int
jp
xor
call
mov
cmpsl
xchg
inc
and
jmp
insb
mov
imul
or
js
bound
add
hlt
adc
addb
pop
test
cld
and
in
stos
push
loop
jbe
in
inc
aad
arpl
push
lret
sub
jp,pt
subb
fdivrs
cmp
adc
loope
sub
xchg
inc
dec
out
mov
pop
mov
jbe
push
sahf
int3
push
lods
vpshlb
ds
pusha
mov
push
out
dec
out
cmp
xchg
mov
sbb
jg
mov
push
inc
xchg
lcall
pushl
mov
imul
jno
jl
inc
mov
sbb
cmc
inc
cmpsl
sbb
pop
fxch
pushw
jae
dec
push
arpl
mov
pop
loopne
leave
xor
xchg
cmp
jmp
adc
addr16
mov
cmp
and
lahf
pop
inc
xchg
cmp
jne
loop
in
inc
in
cs
jl
push
ret
add
int3
out
jmp
loopne
xchg
or
mov
jmp
imulb
pop
imul
cmpsl
les
mov
orl
sahf
cltd
sub
fwait
shll
push
fcomps
adc
out
mov
push
mov
cmp
or
add
xchg
mov
jp
sbb
lds
mov
cmp
dec
pop
vmread
nop
pop
sbb
out
mov
mov
cmpb
cwtl
aaa
daa
sub
xlat
adc
pop
push
sbb
clc
fcompl
imul
pop
in
cmp
stc
out
cmpsb
push
cmpsb
pop
add
sbb
loope
jno
cmpsl
cmp
push
sarl
push
or
cmc
je
push
lods
push
mov
daa
nop
out
xchg
xlat
push
cmp
adc
jno
dec
loopne
es
mov
push
push
mov
jecxz
js
movsb
add
mov
cltd
je
jmp
scas
mul
or
gs
pusha
aaa
or
or
push
mov
enterw
cmpsl
stos
sub
in
popa
ljmp
lods
jl
stos
loope
aad
fst
cmpsb
jne
int3
or
xor
xor
add
and
test
mov
push
adc
jl
inc
popf
movsb
lods
xchg
into
mov
jecxz
add
inc
xsha1
cmpsb
mov
sahf
aaa
insl
in
xlat
into
mov
jecxz
cmp
lock
addr16
cmp
lock
push
jmp
inc
mov
mov
cmp
pop
push
adc
jo
outsl
movsb
stos
mov
clc
ja
and
lods
push
ror
lods
dec
xchg
test
add
add
and
out
mov
xor
enter
es
mov
push
jae
mov
imul
stos
or
jmp
adcb
dec
dec
mov
add
xchg
fcompl
adc
sbb
cs
fadds
mov
inc
divb
cwtl
gs
add
out
cmc
xchg
or
xchg
lods
fnstcw
cmp
enter
mov
aad
xchg
jp
sub
inc
jae
rcr
jmp
loope
daa
aas
loopne
fwait
mov
mov
aam
inc
test
mov
dec
test
cmp
lds
push
pop
pop
ljmp
add
vunpcklps
test
inc
enter
push
mov
test
jge
loopne
popf
mov
stos
test
call
stos
mov
pushf
fbld
jl
outsl
iret
js
repz
mov
push
gs
push
les
jns
fwait
popa
out
lods
and
arpl
jg
cmpb
movsb
mov
test
cmp
sbb
and
inc
cmp
mov
jg
outsb
mov
jg
pop
add
dec
subl
loopne
pop
inc
shl
les
inc
aam
adc
and
and
js
push
add
inc
jae
aad
ret
jle
mov
in
js
jo
sub
enter
or
jle
je
scas
push
mov
mov
mov
inc
xchg
cwtl
inc
sub
dec
dec
mov
cmpsb
int3
fs
ljmp
add
inc
jecxz
adc
movl
cmpsl
mov
mov
sbb
jmp
in
ficompl
out
cmc
pop
fiadds
and
cltd
cmpsb
aad
mov
sbb
adc
dec
fidivrs
jae
stos
movsb
cs
xchg
pusha
adc
pop
aaa
dec
dec
xchg
xchg
ja
clc
sub
ret
aad
pop
shrb
das
xor
dec
imul
or
insb
movsb
inc
fcoml
rcr
fcompl
icebp
xchg
adc
jns
mov
out
jae
pop
push
mov
mov
pop
dec
fsubrs
addl
in
lret
sub
ja
jmp
in
cmp
cmp
push
sub
xor
out
sbb
rcr
dec
push
int
lret
push
lods
jl
aas
xchg
repnz
cmp
in
and
in
mov
hlt
inc
lods
mov
mov
arpl
mov
frstor
jge
leave
adc
sub
pop
fstl
mov
sub
imul
adc
xchg
bound
sbb
in
cmp
fstps
ret
test
cmp
sub
aad
mov
xchg
andb
cltd
adcl
cmp
test
js
inc
xor
test
and
xchg
mov
sbb
mov
cmpsl
aam
pop
mov
pop
mov
into
inc
out
cmp
dec
mov
pop
jg
iret
lret
push
loopne
cmp
cld
mov
jp
mov
dec
aad
les
cmpsb
cs
pop
popf
jae
jl
pop
and
pop
add
jle
pop
mov
jmp
mov
mov
rcll
pop
inc
dec
sub
addr16
mov
ret
test
out
pop
pop
movntps
pop
cmpsb
iret
out
and
ljmp
xlat
fsts
sub
test
cmpsl
stos
lret
inc
lea
loopne
ja
aad
fldcw
add
mov
js
fnstenv
sub
mov
and
and
pop
jb
inc
out
test
into
ss
push
in
jns
xor
sarb
loope
xor
cmp
lahf
sti
fstpt
jno
push
loopne
mov
adc
push
or
outsb
xchg
jl
ljmp
movswl
cli
jge
dec
leave
hlt
and
pop
mov
stos
aam
xor
aaa
fadds
ret
hlt
mov
fwait
jecxz
hlt
jmp
loop
outsl
shl
inc
inc
pop
repnz
clc
mov
cmp
stos
and
movsl
ret
xor
push
fstpt
repz
jnp
cmc
push
add
into
add
adc
add
add
out
add
and
aas
xor
cltd
popf
stos
mov
adc
jae
fcoml
icebp
xor
xor
int3
mov
jns
into
jge
repz
mov
and
lods
stos
pop
add
or
adc
mov
out
sub
push
ds
roll
dec
adc
jns
out
call
sbbl
gs
js
outsb
andb
loope
test
xchg
jb
mov
imul
pop
ss
loopne
out
int
mov
mov
mov
adc
lret
push
lahf
cmp
fs
jecxz
and
in
cmp
push
jmp
push
push
jp
dec
in
fsts
xchg
ret
fadds
es
loop
lea
dec
sbb
hlt
nop
cmp
sub
mov
push
sar
icebp
repnz
outsl
pop
push
pop
pop
sub
jg
mov
mov
mov
into
popa
jns
pop
imul
dec
xchg
push
push
push
xlat
out
inc
pop
into
into
xor
adcl
in
scas
mov
xchg
daa
sub
add
dec
ljmp
js
lods
or
adc
cmp
in
js
rclb
lret
lea
int
dec
sbb
mov
adc
inc
jg
lods
out
fwait
push
and
lret
push
pop
jne
nop
mov
cmp
cmpsb
jbe
cmpsb
xchg
add
jg
mov
cltd
ret
xchg
testb
out
dec
int
xchg
ja
jle
aam
inc
data16
jne
add
enter
or
shr
jns
and
aam
push
int3
stos
scas
and
jecxz
push
cmp
add
in
gs
jecxz
in
mov
add
sbb
sbb
push
mov
cltd
aad
xchg
pop
fmuls
imul
sbb
dec
xchg
add
sub
xchg
aas
scas
cmp
hlt
lcall
add
rcrb
aam
or
xchg
stos
loop
add
out
mov
int3
jl
insl
mov
jne
sub
jns
xor
stos
aam
add
mov
cmp
movsb
xchg
or
loopne
mov
inc
sub
jae
idivb
les
leave
enter
push
mov
nop
loopne
mov
ss
mov
sbb
mov
sub
lods
out
add
idivl
mov
popa
mov
pop
sbb
loope
fidivrl
ficompl
imul
jno
cmp
xor
loop
in
insb
fs
sbb
js
xchg
testb
xor
test
mov
std
lods
and
inc
out
cmp
loopne
outsb
lret
mov
mov
scas
std
xlat
cmp
mov
fcomi
mov
mov
jnp
pop
js
mov
enter
ror
inc
jno
push
push
mov
lods
dec
iret
adc
mov
in
lds
xchg
dec
fsubl
or
icebp
xchg
xchg
lahf
in
fidivs
push
mov
jno
cmp
jmp
cmpsl
rcrl
aas
pop
hlt
pop
fsubrl
xchg
xchg
xor
sub
je
xlat
cli
cld
mul
pop
jmp
inc
out
mov
lea
xor
dec
stos
sar
jb
push
sbb
sbb
add
jecxz
push
ffreep
add
xor
mov
jmp
out
stc
push
inc
daa
pop
cmpsl
lcall
shll
stos
adc
idivl
inc
fnstenv
ds
adc
push
fsubrs
daa
cli
pop
rcr
rcll
lahf
addr16
outsl
mov
arpl
or
jp
xor
mov
xchg
sub
popf
xchg
jecxz
jl
sub
cmpsb
lods
std
cmpsl
xchg
test
push
sub
add
adc
sti
mov
mov
ret
popf
pop
sub
in
sbbb
das
xchg
mov
mov
push
add
pusha
mov
pop
fs
test
movsb
in
dec
pushl
sahf
aam
push
inc
sub
mov
fnsave
or
jne
sbb
inc
dec
hlt
push
pushf
mov
popf
mov
pop
inc
in
cmp
scas
cltd
roll
xor
inc
cmpsl
sbb
sti
or
fidivrl
push
mov
pop
cmp
jno
and
dec
jno
mov
repnz
inc
mov
mov
adc
sub
fcmovu
push
gs
adc
int3
cmp
fs
lcall
lock
sarb
xchg
insb
mov
popl
cmp
push
inc
dec
sbb
sub
pop
dec
dec
xlat
mov
xchg
cmp
xchg
mov
sub
mov
fldcw
js
imul
pop
xchg
mov
xchg
repz
ja
pop
insb
jns
and
xor
xchg
cmp
sub
daa
arpl
dec
ret
dec
orb
pop
or
lcall
jae
jge
test
aad
dec
cld
adc
scas
jecxz
aaa
pop
jno
aas
lock
cmpsl
mov
je
loopne
adc
mov
aaa
pop
xor
iret
mov
mov
loope
push
mov
or
cmp
sub
popa
push
test
aam
aam
adc
xlat
loope
or
mov
fnstcw
push
mov
loopne
dec
fwait
jae
add
lock
pop
movsb
push
dec
fsubrl
andb
sub
ficompl
ret
push
sub
ret
ret
cltd
push
fs
adc
pop
movsb
cmp
inc
cmpsb
flds
fld1
loop
adc
ja
outsb
test
stc
pop
pop
inc
icebp
dec
dec
mov
stc
in
or
fidivs
push
lods
divl
addl
xor
cwtl
jne
cmp
cltd
fisubrs
ret
push
shl
mov
lea
pop
out
ds
dec
loopne
test
or
out
das
xchg
and
push
repnz
cltd
rcll
push
push
pop
jp
push
movsl
and
out
lea
test
push
outsl
xor
movups
fists
notb
push
mov
pop
mov
movb
mov
mov
pusha
mov
lahf
pop
scas
sbb
addl
in
scas
lret
repnz
addr16
or
test
adc
cmc
jge
jae
push
stos
movsb
add
test
add
ret
repnz
les
push
cmp
sar
push
ljmp
jle
mov
lret
sub
cmp
mov
mov
stc
pop
push
fildll
inc
inc
in
xor
add
adc
imul
inc
icebp
int
aam
loope
int
inc
sbb
test
std
in
push
cmpsl
arpl
xor
pop
les
out
stc
mov
les
mov
ljmp
addb
test
aam
rclb
jg
or
and
jbe
stc
insb
sub
testb
cltd
dec
adc
orl
sar
ret
pushl
cmp
lret
push
negb
mov
jno
push
es
pop
pushf
lods
mov
sbb
xchg
cli
loope
setge
cmpsl
insb
lods
and
pop
out
jns
pop
and
daa
jecxz
push
push
xchg
mov
sbb
mov
repnz
mov
push
mov
ror
mov
adc
mov
pop
or
repz
and
dec
mov
lret
pusha
mov
push
jbe
xor
loopne
add
loope
push
push
sub
xchg
sbb
add
sub
xor
and
jle
xchg
shl
loop
xchg
push
jne
cmp
insl
rcl
mov
popf
daa
movsb
xchg
add
mov
out
mov
and
lods
and
in
aad
inc
incb
inc
mov
insb
dec
xchg
sbb
icebp
and
jne
das
ss
push
lret
inc
cli
negl
imul
mov
inc
test
dec
push
lods
movsb
adc
loope
cmp
pop
jb
xlat
sub
cmp
dec
in
rolb
or
add
fstps
jb
int
cmpsb
sub
add
mov
or
inc
mov
ret
and
mov
push
cmp
sbb
sahf
sub
jmp
mov
nop
scas
rol
dec
sub
or
int
mov
sub
mov
cwtl
mov
pop
adc
mov
in
pop
inc
sbb
lea
andps
sub
lock
arpl
mov
adc
clc
out
pop
das
enter
jnp
aam
test
jecxz
jecxz,pt
mov
rcrb
push
rcr
out
xor
cs
fstpl
mov
iret
das
imul
mov
xchg
adc
insb
mul
test
cmpsb
lahf
mov
adc
jo
xor
cwtl
lret
jbe
mov
xchg
push
push
sti
pusha
ds
push
pop
nop
jecxz,pn
popa
mov
xor
mov
loopne
cmp
lock
push
enter
dec
pusha
cmp
push
jp
imul
loope
and
arpl
fstpl
mov
pop
add
jae
inc
jmp
aam
out
inc
daa
jmp
fcmovnb
mov
mov
or
sarb
adc
pop
jno
fistpll
jge
leave
or
cmpsb
mov
cwtl
lcall
out
rorl
insl
jb
jae
push
popa
push
movsl
fnstcw
xchg
lea
scas
pop
std
lret
sub
mov
cmc
pop
dec
stc
fidivrl
dec
sub
lret
dec
push
jne
movsb
xor
adc
sbb
pop
bound
imul
mov
jecxz
sub
dec
inc
insb
adc
lea
adc
sbb
fidivrs
and
into
fstpt
stos
jmp
gs
das
mov
or
daa
das
adc
dec
mov
hlt
scas
pop
lea
aaa
and
xchg
scas
leave
mov
lods
sbb
mov
leave
jno
fidivrs
cs
daa
gs
out
sbb
test
jae
stc
dec
xor
pop
in
push
iret
hlt
aas
ret
lret
je
pop
dec
mov
dec
mov
testl
mov
dec
mov
test
scas
rolb
hlt
sub
and
cmp
int3
or
pop
or
xchg
push
sub
add
jmp
dec
ss
inc
into
sub
xor
or
xor
sbb
setle
fwait
repz
es
inc
fldl
sbb
mov
popa
dec
aad
in
adcb
sub
scas
cmp
test
cmc
dec
lcall
out
nop
push
add
mov
adc
es
shl
ret
sub
dec
inc
xor
cmpsl
addb
pop
mov
mov
mov
fmul
ja
dec
mov
ret
movsb
cmp
int3
idivl
pop
popf
xor
add
test
scas
sub
mov
sbb
add
cltd
fstp
jo
and
cli
add
mov
mov
aad
jns
fstpt
arpl
in
nop
ret
ja
inc
out
loop
mov
cmp
xchg
in
jns
pop
mull
leave
mov
push
fdivp
cmp
cmp
mov
xchg
xchg
les
push
or
ds
lock
lds
mov
popa
test
push
inc
pop
js
imul
mov
jmp
mov
mov
pop
roll
dec
das
popa
jg
js
out
xchg
mov
ret
sbb
or
cmp
sub
fsts
leave
and
xor
inc
cltd
push
mov
jae
sbbl
mov
sbb
or
cmp
sub
fsts
leave
and
xor
inc
cltd
push
mov
jae
sbbl
mov
sbb
or
cmp
sub
fsts
leave
and
xor
inc
cltd
push
mov
jae
sbbl
mov
sbb
or
cmp
sub
fsts
arpl
adc
jbe
inc
mov
dec
cmp
xchg
outsb
mov
push
ret
push
mov
mov
inc
jnp
arpl
xor
and
add
std
push
ret
push
mov
xchg
push
addl
jecxz
aad
test
cmp
fdivp
jmp
mov
pmulhuw
lock
xor
xor
mov
lret
shlb
inc
push
adc
mov
int3
lret
neg
sbb
xchg
xchg
jle
push
ss
movsl
adc
lret
and
ret
test
movsl
push
fisubs
cmp
mov
cmp
pushaw
xchg
fcoml
jbe
mov
xchg
ds
fmull
out
mov
ret
and
ja,pt
cltd
xchg
sahf
dec
lods
lds
mov
xor
ss
rolb
and
idivb
lods
xchg
mov
xchg
xchg
cli
cmp
sbb
jmp
mov
ret
arpl
adc
mov
mulb
adc
inc
add
fisttpll
pop
mov
sub
in
cmpsb
pop
aad
test
adcb
mov
mov
outsl
ficompl
int
out
les
jae
jmp
adc
mov
jg
jo
lret
push
mov
popa
shlb
sub
aaa
ret
loopne
loope
movb
jbe
and
adc
add
repz
rcll
ret
push
mov
mov
inc
jae
arpl
xor
and
adc
add
repz
rcll
ret
push
mov
mov
inc
jae
cmpsl
jno
xor
inc
cmc
fldenv
sbb
jle
jns
mov
jne
mov
pop
mov
pushf
cmpl
jecxz
lds
lods
sbb
loop
test
dec
jno
lahf
or
daa
xor
les
push
mov
dec
jle
pop
jb
inc
ds
clc
mov
ljmp
testb
push
and
or
and
sbb
xchg
pop
adc
add
outsl
or
and
popf
add
lock
pop
sbb
in
aam
icebp
pushf
jo
add
add
add
jl
test
divl
jne
xchg
movsb
jns
fwait
enter
imul
mov
and
out
adcl
jecxz
push
pop
adc
mov
aad
sti
add
je
movsl
adc
sbb
push
lcall
pushf
and
imulb
xchg
call
sub
loop
jle
mov
mov
in
dec
mov
stos
mov
pop
test
subb
push
aas
xchg
insl
add
popf
loop
test
adc
testl
pop
cmp
iret
cmp
xchg
xlat
mov
in
push
scas
push
mov
inc
jge
xor
fs
dec
cmpsb
add
cmpsl
cmpsl
addb
js
cld
inc
in
push
sahf
fmuls
pop
mov
mov
sbb
mov
imul
pop
ljmp
mov
pop
sbb
push
pop
cltd
pop
bound
clc
inc
xchg
jmp
push
pushf
inc
inc
inc
xchg
sahf
in
mov
xor
ss
add
and
movsl
inc
push
loop
testb
xor
fsubl
lds
cld
je
adc
and
sbb
or
ret
cmp
jbe
pushf
dec
xchg
pop
jns
insl
jecxz
jge
cltd
leave
gs
sti
call
push
mov
icebp
adc
xor
xchg
pop
out
cmpsb
mov
or
xchg
push
xchg
push
dec
bndstx
ss
or
fistpl
les
mov
jne
ja
mov
push
nop
out
rcrl
fiaddl
pop
mov
fwait
pop
dec
arpl
add
lret
mov
push
sahf
cmpl
lock
mov
loop
ret
jecxz
mov
push
push
mov
clc
fbstp
and
xor
inc
mov
or
loopne
mov
lods
cmp
mov
or
xor
bound
dec
inc
xor
dec
jecxz
xchg
xchg
iret
push
int
mov
sub
cmpb
fidivl
les
into
fucomi
push
lock
sub
aas
adc
mov
fdivrs
dec
sbb
test
lret
hlt
hlt
and
mov
sbb
or
call
ret
test
das
and
sbb
addr16
out
loopne
xchg
dec
inc
adc
leave
ret
push
sub
enter
pusha
and
jg
arpl
jno
decl
and
aaa
sti
cmc
push
insb
clc
mov
data16
mov
lea
mov
adc
ljmp
push
out
pop
pop
insb
fldl
sub
sub
fisubs
cmpl
jbe
xchg
sar
add
lods
das
fisttpll
mov
shr
xlat
int
orb
cld
inc
cmp
mov
out
sahf
gs
xor
into
jl
outsb
enter
cmpsl
out
mov
add
add
fcompl
les
or
cmc
fmull
insb
lcall
mov
cwtl
je
dec
jmp
cmc
jg
adc
cld
adc
xor
xchg
push
sbb
in
jge
test
adc
shlb
adc
xlat
xchg
addr16
das
ror
daa
mov
mov
sbb
insl
pop
push
nop
arpl
repz
dec
in
dec
imul
mov
stos
aam
mov
aaa
mov
je
cmpsb
out
pop
sbb
sbbb
fstl
xor
loop
sahf
jns
mov
push
jecxz
push
lret
in
sarl
in
add
outsb
push
sub
nop
shll
add
in
icebp
sahf
pop
adc
push
or
push
adc
xor
push
jbe
ret
add
into
hlt
pop
push
xorb
insb
movsb
adc
mov
imul
mov
out
fidivl
push
sbb
dec
fstpl
clc
out
xchg
dec
push
call
pop
icebp
ja
jle
sbb
outsl
xchg
jg
and
jnp
inc
mov
nop
pop
inc
in
xor
push
jmp
cli
jge
mov
jp
push
mov
sub
mov
shr
loop
in
pop
sti
cmp
rcr
in
mov
cmc
insl
out
rclb
mov
mov
ljmp
push
aas
movsb
xlat
call
and
dec
sub
shll
sbb
jg
sahf
fimull
mov
pop
movsl
cmpsl
lds
or
cmp
add
fildl
gs
inc
ljmp
adc
xor
aas
mov
cmpsb
ret
pop
sbb
or
rcr
pop
int3
je
cmp
push
lock
mov
fsubr
das
jbe
mov
adc
jle
mov
dec
mov
sub
cli
ficompl
shrl
outsb
and
adc
or
xor
nop
push
or
jns
insb
ss
push
test
push
cmp
aas
movsl
or
loope
adc
pop
lods
popa
and
fwait
decb
lods
ds
lcall
cmpb
sti
sub
or
mov
xor
outsl
fsubrs
je
sbb
movsl
sub
xchg
pop
std
je
xchg
gs
filds
cltd
mov
std
jno
mov
cwtl
jp
pop
inc
mov
popa
dec
mov
push
data16
movsl
xlat
dec
and
cli
pop
mov
add
xor
push
lahf
cmc
cmp
add
or
gs
jg
test
xchg
out
lcall
lds
ds
jae
add
cmpsl
jne
outsl
cld
imul
mov
rol
mov
faddl
pop
pop
pop
pop
jno
sbb
jg
inc
pop
or
insl
cwtl
mov
test
mov
das
cltd
and
jo
testl
push
sbb
mov
xor
cmp
dec
int
jno
ds
std
jno
cmp
sbb
popf
insb
insb
stos
fsubrl
aas
call
xchg
ret
or
inc
jecxz
push
mov
inc
mov
popf
jb
and
xchg
clc
outsl
out
jne
pop
in
and
pushf
sbb
add
pmulhuw
xor
pop
push
rorb
test
jmp
das
jmp
test
aas
mov
push
int
popa
dec
mov
or
mov
sub
mov
hlt
or
jnp
xchg
adc
iret
repnz
cli
adc
and
lea
dec
sahf
xor
cs
or
adc
jne
outsb
repnz
ret
cltd
aaa
into
das
repnz
jg
es
dec
loop
and
jmp
ret
or
aas
and
shl
push
ljmp
call
lahf
jbe
jnp
or
mov
mov
not
ffree
cmp
sub
xchg
fs
les
into
shll
adc
outsb
dec
outsl
loope
jg
out
cmp
out
call
or
cmp
cli
mov
dec
out
fsubr
pop
mov
test
pop
imul
idivb
and
loop
cs
push
jle
push
mov
test
testb
add
int3
sar
stos
lods
movsl
xor
loopne
cld
call
adc
fcomi
adc
inc
push
mov
mov
into
int
dec
or
sbb
pop
pushf
add
lcall
lahf
xorl
cmpsb
cs
scas
sub
pop
cmp
adc
lret
fstpl
add
sub
jg
ret
inc
jmp
push
add
daa
add
push
xlat
xor
xor
wbinvd
adc
int3
pop
adc
cld
sub
call
mov
lods
adc
cmpsl
jo
loop
cmpsl
loop
sbb
xchg
cmp
subl
mov
jg
outsb
adc
popa
xchg
or
arpl
dec
add
xorps
repz
lcall
jne
popf
mov
ja
adc
mov
adc
pop
pop
stos
adc
adc
into
or
mov
clc
sbb
ret
mov
movsl
ficomps
xor
mov
fwait
sbb
xchg
push
or
loop
subl
push
out
jae
push
lcall
xchg
outsl
xor
mov
mov
xor
and
cmp
rolb
cld
cmp
dec
add
std
aad
loop
stc
fwait
scas
js
fcmovnb
aas
ljmp
mov
movhps
test
rcr
xchg
addr16
pop
int
loope
mov
test
test
push
inc
clc
lock
push
mov
mov
pop
lods
adc
cmpl
sbb
add
dec
mov
xchg
mov
fisttpl
push
mov
add
fstp
rolb
mov
cltd
push
aaa
clc
adc
inc
in
pop
mov
iret
dec
sbb
dec
test
mov
inc
fsubrs
dec
inc
mov
arpl
movsb
lcall
xchg
inc
test
loope
in
dec
sub
ljmp
inc
cmp
pop
mov
pop
mov
loope
out
jl
push
addr16
jns
add
dec
mov
push
fcompl
lock
jg
xor
jmp
scas
rcll
dec
fcmovnb
adc
je
jecxz
xor
mov
xor
sahf
cmpsl
cmpsb
add
push
adc
ret
dec
and
mov
and
jle
loopne
mov
and
sbb
cltd
andl
mov
xor
sub
xchg
loope
in
movsb
clc
xchg
push
jle
inc
stos
dec
movsb
push
daa
add
fidivl
jo
in
inc
xchg
mov
pop
mov
scas
jns
sub
mov
cmpsl
pop
push
iret
hlt
push
fisttps
dec
adc
pushl
stos
mov
and
mov
movsb
sub
pushf
das
and
xor
movsb
lret
stos
fstpl
ret
lods
shll
mov
dec
dec
mov
cmp
or
inc
aaa
call
inc
ss
nop
fcmovbe
aad
add
sub
sahf
xchg
lods
je
xchg
inc
rcr
jnp
jmp
push
dec
mov
xchg
mov
pop
cld
xor
mov
jmp
ds
dec
mov
dec
jnp
push
jnp
cs
jmp
jae
out
imul
add
mov
lcall
shld
mov
imul
sub
arpl
push
cmp
setl
repz
ds
xor
pusha
jmp
push
outsl
sbb
jb
shrd
jae
mov
inc
mov
sbb
int
cmova
out
outsb
test
iret
cwtl
bound
imul
push
xor
stc
fistpl
xor
shll
popf
scas
mov
les
inc
mov
xor
out
mov
pop
dec
call
mov
fstps
cli
jge
cmp
push
ja
add
or
push
mov
movsb
fwait
add
jp
nop
lahf
mov
les
lret
cs
mov
and
pop
aad
xor
das
cmpsb
out
mov
repnz
cmpsl
rcr
add
sahf
push
cmp
das
push
mov
lds
addl
add
mov
and
adc
push
pop
push
enter
cmp
pop
sub
jns
int
mov
in
jg
loopne
stc
test
or
leave
mov
insl
popa
rcll
enter
add
adc
cmp
mov
mov
xor
scas
cmp
shrl
std
fmuls
dec
out
scas
cmp
push
lock
mov
decb
les
mov
cli
clc
sbb
pop
or
imul
inc
jecxz
jecxz
pop
dec
arpl
jnp
or
mov
sub
xchg
mov
mov
pop
mov
arpl
inc
mov
cmpl
pop
lock
push
scas
push
hlt
or
pop
loop
bound
negl
sub
aam
pop
mov
pop
sti
inc
loopne
rcll
loope
mov
mov
xor
in
xor
gs
std
mov
sub
sbb
lods
sbb
scas
arpl
std
add
push
sub
lret
sbb
inc
pusha
rorl
xchg
xlat
or
pop
lods
lcall
fimull
adcb
sbb
lret
xchg
mov
jno
out
pop
stc
mov
cvtdq2ps
bound
jne
jb
adc
mov
sub
lret
xlat
xor
mov
jl
push
pmullw
adc
jns
icebp
pop
in
mov
mov
fstpl
mov
lods
lods
out
xchg
test
fldl
xchg
pop
dec
mov
shl
loope
sbb
xor
jb
int
mov
lcall
outsl
shll
jecxz
xchg
or
in
mov
cltd
add
les
mov
movsl
xor
ds
fdivrl
and
pop
ds
xlat
ss
cli
and
add
adc
dec
imul
ljmp
sbbl
mov
jle
cs
and
negl
in
insb
lds
sub
jno
inc
or
inc
mov
mov
data16
push
jnp
add
mov
pop
jo
mov
je
pop
jge
xor
mov
or
mov
mov
repz
mov
dec
test
mov
jmp
clc
inc
cmp
mov
add
out
scas
xor
or
fcoml
push
adc
push
xor
aad
mov
pop
iret
sub
xor
add
aad
dec
lods
pop
xchg
movl
aam
sbb
sub
pop
jp
jbe
mov
jbe
cmp
aaa
sub
mov
xchg
cld
lret
cmp
inc
push
or
in
push
add
aad
or
loope
or
loop
adc
mov
mov
cmpsb
xor
std
shlb
mov
lea
cltd
mov
or
int3
pop
pop
cmc
in
xchg
push
lea
rcrb
xchg
iret
je
in
push
aad
and
lods
ret
scas
das
outsb
fldcw
mov
jae
call
mov
movsl
and
insb
mov
sti
and
jg
mov
iret
and
fstpt
imul
daa
xchg
xor
lods
xchg
cli
insl
leave
push
xor
ja
inc
mov
andb
jg
mov
xor
xchg
sahf
outsl
cmp
dec
push
mov
sbb
test
lret
leave
fwait
push
mov
jns
and
dec
repnz
movsl
out
pop
stc
sub
gs
es
iret
inc
sub
jbe
mov
jb
rclb
jle
mov
fldl
insl
aas
imull
mov
out
or
sbb
and
add
aaa
jo
pop
in
xor
lahf
orl
inc
lods
fadds
inc
and
cmp
or
imulb
pop
pop
dec
adc
push
adc
lds
xchg
jecxz
ja
iret
lock
add
movsl
mov
movsb
insl
jle
in
add
outsb
pop
mov
in
sbb
mov
fiadds
or
in
iret
cli
dec
sbbl
mov
hlt
push
sarl
mov
dec
mov
je
sbb
arpl
sti
aam
popa
inc
fwait
pop
xor
sbb
leave
mov
aad
jle
aas
daa
cmp
mov
xchg
loopne
enter
int3
jbe
jp
and
cs
test
adc
popa
push
pusha
movsb
cmp
cltd
bound
inc
enter
xor
hlt
scas
pop
out
mov
in
repz
fbstp
jnp
out
repnz
xchg
nop
sbb
shll
jp
insl
scas
test
sbb
inc
clc
sub
adc
enter
lahf
xchg
mov
mov
out
repz
push
jns
push
push
in
xchg
ror
inc
and
aaa
int3
mov
xchg
sub
mov
call
jmp
mov
loope
js
dec
fidivs
lahf
sub
les
testl
cltd
push
adc
sti
fisttps
out
mov
lret
fldcw
push
add
iret
push
fdiv
sbb
loope
lret
inc
dec
clc
sbb
fldcw
cli
xlat
pop
cmp
jo
movsl
outsb
adc
mov
pop
or
lods
in
mov
sbb
loopne
xor
rol
xchg
xlat
adc
cli
ret
shll
test
jmp
gs
test
lea
flds
mov
test
lods
cmp
aas
fistpl
rolb
dec
mov
xchg
mov
xchg
call
pusha
xchg
inc
mov
iret
dec
cld
cmc
and
sub
fmuls
ret
jno
pusha
aas
mov
frstor
xchg
bound
mov
lcall
pushl
ja
pop
push
xor
and
push
cld
pop
leave
dec
les
fsubs
ljmp
mov
add
test
imul
xor
jmp
push
hlt
ret
cli
or
jne
xlat
pop
ret
jg
sbb
test
add
sbb
mov
test
push
pop
cmp
jge
cmc
xchg
dec
insb
pop
dec
mov
es
cmp
lcall
sbb
fs
mov
iret
mov
loop
roll
mov
loop
inc
cmc
sub
sub
sbb
mov
mov
mov
and
xchg
pop
decb
pusha
out
add
pushf
mov
mov
jbe
pop
push
push
add
cltd
outsb
lcall
addr16
cmp
cmp
out
in
push
jbe
mov
lds
jg
jb
pop
andl
movsb
ficompl
pop
adc
xchg
sub
cmc
cs
fs
xchg
xchg
push
fwait
cmp
hlt
xchg
xor
xchg
jne
test
adc
xor
push
cmp
pop
shl
data16
fdivs
test
lock
out
mov
decb
mov
sar
add
push
sbb
lret
lods
fidivrl
xchg
jmp
mov
mov
test
and
cmp
mov
lahf
call
cmpsl
cwtl
ja
in
push
cmpsb
adc
pop
leave
add
out
jno
jo
xor
out
jne
push
ljmp
xor
in
xor
out
subl
mov
sbb
pop
mov
scas
loop
ficomps
push
fadds
inc
jb
and
fimull
sbb
pop
xor
cli
loop
lcall
and
xchg
in
cmpsl
fstpl
xchg
adc
jne
daa
das
sub
popf
fsts
mov
xlat
idivl
push
std
enter
pushl
push
jnp
lods
push
mov
adc
dec
rcll
pop
jo
fsubl
inc
lret
adc
adc
enter
ljmp
in
mov
pop
push
inc
pop
int
jo
mov
daa
ficompl
mov
stos
jno
das
push
jmp
outsl
or
std
jbe
adc
mov
dec
add
call
js
xchg
pushf
addr16
or
dec
je
pop
shrb
adc
pop
mov
lret
mov
movsl
add
nop
cmp
pop
xchg
or
fisttps
mov
mov
jb
push
bound
int
roll
mov
or
rcr
and
adc
cs
or
es
add
clc
sub
mov
xor
mov
add
bound
push
pop
lods
mov
pop
addb
pop
and
dec
jae
pop
mov
mov
rclb
cltd
xchg
fsubl
jmp
ja
push
fldl
and
outsb
xchg
cld
mov
xor
push
pop
or
orl
jp
je
repz
inc
shll
sbb
add
movsb
xor
clc
cmp
xor
gs
or
punpcklbw
iret
test
pushf
mov
pusha
mov
mov
mov
clc
cmpsl
dec
dec
mov
mov
and
mov
xor
mov
xchg
xchg
jno
sub
in
stos
pop
sub
sub
icebp
mov
dec
pop
pop
lcall
add
lcall
inc
pop
divl
mov
arpl
fbld
mov
adc
inc
mov
push
js
adc
or
push
push
insb
aam
lahf
ror
insb
orl
std
mov
sub
cmp
push
cmpsl
insl
shlb
fcoml
pop
xor
aaa
out
clc
int
or
call
jns
pop
test
jmp
test
add
sub
cwtl
nop
jg
aam
out
adc
pop
cli
out
adc
ret
sub
in
cli
pop
xchg
mulb
out
add
repz
rcll
ret
push
mov
mov
inc
jae
arpl
xor
and
adc
add
repz
rcll
ret
push
mov
mov
inc
jae
pusha
out
inc
out
inc
xchg
mulb
dec
adc
add
imul
jecxz
ficoml
movl
xchg
jbe
inc
imul
xchg
divb
out
push
add
leave
sbb
jns
ret
jno
sub
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
xor
and
adc
add
jb
adc
jb
insb
jns
movl
repnz
loop
shr
sar
push
or
sbb
add
jb
bound
imul
repz
loop
shr
ret
or
sbb
dec
add
imul
cli
fcomps
xchg
push
adc
cmp
bound
imul
int
xadd
cmpsb
ficomps
xchg
xchg
jne
mov
fbld
jae
std
popw
mov
mov
test
or
addr16
adc
mov
lcall
xchg
sub
fsubl
inc
out
dec
dec
cmp
ljmp
mov
mov
pop
or
jecxz
clc
int
das
dec
xor
mov
shr
flds
leave
pop
xchg
jbe
aad
push
mov
sub
into
pop
int
mov
jns
dec
mov
sbbl
mov
shr
shr
or
sub
cmp
imul
cltd
in
mov
mov
jmp
push
pop
sub
sbb
das
inc
sub
test
mov
insb
inc
jl
dec
arpl
sbb
pop
sbb
xchg
cli
cli
fmull
mov
dec
push
jae
push
pop
and
pop
push
imul
xchg
test
loop
shr
ret
or
sbb
sub
cmp
bound
imul
xchg
test
loop
shr
ret
or
mov
push
roll
out
icebp
pop
sub
mov
arpl
mov
shll
out
scas
call
in
inc
mov
mov
push
outsb
push
js
mov
dec
sbb
sbb
fcomps
lock
fsubrs
xchg
ja
in
das
push
lcall
ja
xor
stc
inc
imul
or
fisubs
adc
rorl
inc
mov
scas
int
push
rclw
dec
loope
lahf
in
jne
addr16
or
and
inc
inc
call
and
mov
mov
xor
aad
mov
movsb
aad
in
lret
daa
cmpsl
out
xchg
dec
xor
xor
ret
icebp
xchg
mov
imul
imul
movl
stc
mov
adc
pop
mov
cltd
aas
icebp
mov
add
xchg
cmp
lcall
stc
repz
mov
xor
int
dec
xor
push
pop
sub
cmp
mov
dec
xchg
les
mov
pop
cmp
lods
mov
mov
loopne
xchg
mov
sub
fs
int
ret
out
rol
lret
fndisi(8087
xor
shr
insl
bound
out
mov
shll
inc
sub
lcall
jp
cmp
xchg
adc
movsl
lea
adc
fidivrs
mov
mov
ds
out
or
scas
mov
aad
fstpt
sub
mov
sarb
mov
mov
jnp
int3
orl
xchg
sub
xor
not
jae
mov
or
push
jl
sub
jl
in
fldl
xchg
jo
shr
aam
jle
adc
add
ja
out
jp
data16
stos
mov
ret
arpl
push
jmp
jns
in
lahf
jbe
lcall
mov
mov
imul
push
sbb
pop
mov
loop
jo
jecxz
dec
imul
or
xor
out
push
push
repz
and
mov
add
in
add
jp
dec
sbb
dec
xor
xchg
fisubs
dec
out
rcrl
lahf
and
add
push
sub
adc
sarl
in
sbb
or
bound
and
inc
add
mov
inc
test
inc
cmp
sbb
mov
nop
out
hlt
inc
pop
pop
mov
push
mov
arpl
dec
repnz
scas
push
js
lcall
xor
lods
jae
inc
sub
adc
jmp
and
sbb
mov
aas
adc
adc
jb
push
xlat
mov
and
mov
das
arpl
sbb
add
mov
jge
mov
sub
mov
mov
mov
push
les
cmp
scas
sub
push
cmp
test
xchg
mov
xchg
jecxz
orl
sahf
mov
dec
sbb
sbb
pop
mov
or
fwait
pop
or
rcr
test
inc
ja
sub
adcl
rolb
dec
pop
leave
or
pop
lea
test
mov
mov
add
jle
pusha
repnz
outsb
adc
xor
add
sub
pop
and
flds
test
jo
rcrb
das
lret
mov
add
and
sbb
cmp
incl
ja
jmp
xor
xor
loope
test
out
mov
mov
push
mov
inc
jecxz
xchg
movsl
and
dec
mov
insb
insl
cs
xchg
jnp
sub
lcall
rolb
inc
leave
pop
mov
mov
jmp
xor
mov
popf
mov
mov
add
push
xor
cli
sbb
mov
out
mov
adcb
pop
adc
pop
jg
mov
aaa
cwtl
push
inc
ljmp
dec
repz
pusha
mov
xchg
dec
rcrb
in
divb
jp
jo
dec
sbb
lret
dec
or
test
repnz
sbb
inc
out
dec
cld
mov
je
mov
in
ja
mov
mov
sbb
sub
sub
dec
loopne
sbb
cmc
mov
in
insl
xor
mov
ret
jl
clc
movsb
fst
into
mov
ret
inc
add
in
scas
aaa
push
in
cmp
sbb
fnstenv
stos
push
repz
int3
ss
repz
adcl
sub
xchg
xchg
mov
jnp
or
sub
or
rcrb
mov
test
fildll
mov
push
xlat
rol
push
lcall
sub
dec
sbbl
lods
xor
fs
xchg
pop
addr16
push
mov
scas
pop
fldenv
xrelease
movsb
mov
cmc
jecxz
inc
push
dec
test
rorb
xor
cmp
xor
enter
mov
sbb
push
call
mov
aad
in
cmc
pop
mov
cmpsl
push
and
mov
ret
cwtl
mov
xor
dec
ret
jle
iret
ds
leave
xchg
stos
insb
sti
push
scas
cmc
mov
xchg
and
mov
rcrb
xchg
dec
push
aad
jg
int
call
mov
cmpsl
test
aas
inc
cld
mov
movsb
daa
movsl
jne
mov
mov
insl
push
push
lret
nop
cmp
repnz
sti
rclb
jmp
cmp
out
add
movsl
push
pop
fimull
iret
push
xchg
push
iret
subb
or
aad
aad
cmpsl
add
and
fcmove
add
pop
add
push
push
inc
pop
add
daa
mov
cwtl
shll
icebp
dec
in
xchg
and
scas
fwait
sarl
jbe
sbb
jecxz
mov
mov
cmp
inc
aam
enter
and
mov
xchg
mov
adc
pop
xchg
pop
addr16
mov
adc
in
repnz
aad
scas
jl
push
out
and
inc
mov
or
push
cmp
mov
cmp
scas
js
pop
and
and
lahf
pop
sub
mov
adc
out
loope
adc
cmc
xchg
ret
lcall
mov
jno
xor
in
icebp
call
xchg
mov
pop
jle
xor
lods
push
fnclex
cmp
add
lret
sbb
movsb
mov
jb
xor
xchg
mov
push
add
cld
in
je
test
add
fstl
sbb
cmpsb
inc
adc
nop
in
jge
rcll
daa
cmp
pop
and
push
pop
je
mov
pop
test
push
cwtl
inc
aam
push
inc
xchg
sarl
cmpsl
fcoml
js
imul
fstps
jb
hlt
rcl
cmc
push
adc
push
fistl
lds
cltd
aaa
mov
decl
jmp
jnp
fs
lods
lock
loopne
jbe
pop
xor
push
and
popa
cltd
xchg
cld
xor
jo
ds
inc
int3
imul
mov
pop
movsl
int
cmpb
cmp
mov
ds
aas
jmp
xchg
out
dec
inc
in
lods
sbb
shll
cmp
insb
popa
int3
pop
cmpsl
jns
jo
push
nop
insl
jno
lcall
jns
stc
aas
adcb
jecxz
lods
push
or
mov
push
ss
pop
fdivrs
mov
lock
cmp
pop
aam
int3
jp
cmpl
inc
aam
clc
nop
mov
mov
pop
xchg
pushf
rclb
insb
cmp
scas
in
mov
outsl
sub
ja
jmp
seta
sbb
pop
mov
pop
lret
and
xor
stc
xor
jb
lds
data16
jecxz
inc
rclb
push
cmc
inc
and
lock
lock
pusha
xor
ss
cmp
xor
idivb
mov
rol
xor
xchg
add
fiadds
mov
mov
std
mov
pop
imul
mov
mov
and
ficoms
pop
lcall
nop
int
js
out
mov
jle
inc
push
lret
sub
cmpsb
mov
ficompl
pop
insl
push
pop
and
jb
int
pop
rolb
lds
xchg
cmp
mov
fwait
arpl
out
int
fwait
mov
cmp
mov
ja
inc
daa
mov
sub
loopne
in
add
lcall
mov
gs
imul
cmp
push
dec
and
mov
aad
push
cmp
out
pop
es
cmp
fisttpl
dec
testb
dec
mov
push
jmp
popa
xor
loope
cmpb
pop
cld
dec
ret
push
ds
mov
dec
adc
xor
pop
mov
push
hlt
inc
ret
outsb
insl
fildl
pushf
xor
push
cmp
cmp
jge
nop
addl
dec
jl
addl
in
inc
or
push
xlat
movsb
adc
je
aas
sbb
xchg
mov
aam
mov
xchg
dec
cmp
lods
mov
pop
push
popf
and
xor
lret
div
xchg
mov
cmc
fld
mov
mov
pop
cmp
cmp
outsl
nop
stc
xchg
or
add
icebp
fildl
xchg
jnp
testb
mov
inc
cltd
push
jl
and
in
sbb
push
sahf
sbb
xchg
mov
inc
pop
dec
gs
adc
in
pop
and
aam
arpl
push
cmp
sub
inc
mov
bound
daa
or
xor
adc
push
and
mov
ret
push
addr16
xchg
int
pushf
cmc
jp
hlt
insl
loope
repz
push
mov
xchg
pop
jo
sub
std
or
pop
fistpll
movb
pop
mov
insb
bound
add
mov
sbb
sbb
movsl
sbb
icebp
outsb
in
sub
jle
xchg
flds
sbbb
jp
push
jns
jmp
or
dec
xchg
pusha
outsl
hlt
jg
lret
xor
inc
pop
sar
daa
inc
sub
or
mov
mov
dec
and
cld
addr16
fcmove
dec
cmp
outsl
cmc
fcomps
iret
xchg
add
sbb
bound
sahf
nop
xchg
loope
xor
xlat
xor
jb
cmpsl
imul
in
xchg
adc
dec
jo
into
mov
dec
sub
push
fwait
mov
mov
or
pop
xchg
imul
sbb
xor
lock
rolb
bound
cbtw
inc
lods
mov
loopne
mov
lds
das
rorb
shlb
mov
lret
fdivs
mov
xchg
or
jbe
pop
js
push
pop
fldt
sti
mov
cmp
fcomip
sbb
mov
xchg
cwtl
mov
sbb
movsb
repz
mov
lds
sbb
pop
dec
shr
sbb
xlat
push
insl
pushf
lds
xchg
adc
mov
orl
popa
inc
adc
xor
and
mull
je
mov
xor
std
xor
jecxz
dec
mov
push
mov
mov
or
xor
sub
dec
pushf
mov
js
xchg
push
fadd
cld
mov
fistps
push
xor
add
cwtl
imul
and
test
fildll
fidivl
cmp
mov
inc
inc
aaa
aam
sbb
xlat
mov
jecxz
sub
rorb
push
sub
mov
jp
fs
jle
mov
testl
cwtl
xor
fdivs
mov
mov
push
and
jnp
rorb
and
xchg
inc
sbb
mov
mov
jle
xchg
xchg
push
fbstp
fimuls
push
push
loop
rcrb
xor
dec
mov
push
scas
mov
sbb
lock
xchg
pop
mov
out
mov
xchg
push
icebp
xlat
dec
daa
mov
jnp
fisttpll
aas
movsl
xchg
adc
jmp
cmp
mov
jnp
cmp
mov
rcrl
jb
ret
mov
sub
push
dec
leave
daa
sarb
xchg
ljmp
sbb
fucomp
and
lea
jp
mov
mov
imul
mov
imul
xchg
test
jb
stos
inc
mov
mov
sahf
nop
clc
pop
pusha
ss
cli
idivb
arpl
xor
addr16
cmpsl
fdivp
je
inc
addr16
in
repnz
mov
push
les
push
sbb
mov
leave
push
lods
mov
leave
out
icebp
mov
lock
mov
mov
popf
xchg
and
mov
test
sub
inc
aam
push
mov
lret
jmp
cltd
imul
rolb
mov
sahf
aas
fisubrs
pop
inc
sbb
adc
mov
pop
imul
pop
pop
jno
or
adc
jns
jmp
xor
cmp
inc
push
push
mulb
test
sti
xor
mov
push
iret
pop
jb
mov
orb
lock
imul
in
push
shll
popf
lcall
test
mov
jg
pop
lret
fs
jecxz
lret
push
mov
imul
inc
sti
mov
sub
addr16
inc
cwtl
jb
add
lcall
stos
cli
push
jns
sub
xchg
mov
lea
or
cli
pop
das
test
int3
push
ss
lods
popf
mov
test
outsb
dec
mov
jle
jne
adc
pop
inc
jne
adc
jle
mov
imul
lret
and
loope
push
adc
add
pop
bound
loop
out
imul
sbb
add
or
ds
cmp
shrb
push
into
mov
mov
mov
pop
mov
jns
ret
andl
clc
mov
adc
movsb
push
lcall
in
xchg
inc
je
or
sti
adc
mov
inc
and
ja
outsl
push
push
cmp
xchg
dec
mov
push
ret
stc
pop
push
xchg
and
loop
shlb
adc
cmpsl
sarl
popf
cmc
xchg
adc
adc
ror
push
inc
insl
test
dec
aam
jo
stos
jns
adc
int
in
in
or
les
call
stc
fs
imul
call
imul
popa
and
jmp
loop
dec
and
mov
mov
and
dec
or
mull
call
lock
sbb
and
push
jb
test
push
push
push
jl
imul
dec
dec
scas
dec
ss
sbb
cmpsl
hlt
inc
inc
shll
xor
aad
icebp
test
inc
xchg
in
add
mov
nopl
cmpsb
pop
jne
jecxz
in
ret
push
cwtl
xchg
jne
push
clc
xchg
mov
lea
jae
mov
rolb
fsubrs
gs
repnz
dec
jo
fbld
or
xchg
lods
pop
add
push
lods
repnz
mov
into
shrb
fwait
push
sub
lea
das
inc
mulb
push
xchg
in
sub
lds
push
popa
add
push
call
subb
inc
cmc
lahf
cwtl
es
in
xor
fsubrs
scas
cmp
pop
sub
push
testl
add
popa
mov
jnp
push
mov
xchg
push
pop
fcomps
pushf
leave
shl
jg
add
cmp
jae
pusha
out
mov
sahf
clc
fsts
mov
inc
out
enter
scas
inc
mov
lcall
lret
push
int
mov
fwait
mov
sub
inc
jg
or
std
mov
pusha
loop
xor
jns
mov
or
push
or
cmpsb
gs
pop
bound
xor
out
lea
add
add
push
push
cmp
mov
out
pop
pop
mov
sub
xchg
fldt
adc
sbb
push
jge
test
xor
pop
jae
insl
push
out
rcr
fidivs
pop
insl
insb
inc
sub
and
inc
inc
mov
xchg
push
adc
lds
leave
lea
mov
push
xchg
insl
and
sarb
ljmp
push
les
or
pop
dec
popa
cmc
inc
xor
mov
lret
sub
jle
leave
call
call
test
pusha
ljmp
ret
mov
int
push
imul
inc
xchg
push
call
pop
mov
inc
jl
pop
data16
mov
ja
xor
in
sub
and
lock
outsb
test
pop
nop
cmc
das
xor
jg
cmp
adc
cltd
pop
adc
cli
out
dec
adc
cld
imul
gs
insb
shrl
push
inc
mov
sbb
mov
imul
pop
or
shlb
iret
add
stos
imulb
add
outsl
cld
push
into
lret
sbb
scas
mov
mov
cmp
jle
ds
ljmp
sbb
cmpsl
jns
mov
icebp
sub
repnz
int3
mov
add
daa
cli
cmpsb
push
popf
outsl
xchg
xor
inc
and
mov
outsl
arpl
ret
mov
ret
pop
pop
lea
jae
mov
out
iret
mov
jl
and
mov
repnz
out
cmp
push
cld
add
idivl
adc
xchg
inc
and
xor
mov
push
pop
std
mov
iret
jp
cmp
xor
adc
stos
mov
fbstp
pop
mov
shlb
mov
mov
rorb
and
out
mov
pop
jne
mov
jnp
or
ds
push
adc
popa
fs
pop
popa
inc
sbb
into
jb
mov
xchg
mov
fildll
xor
mov
cmp
push
inc
fisttps
cmp
jo
cmp
jns
mov
cmp
out
xor
mov
mov
popf
out
mov
adc
addr16
xchg
lret
jns
cmp
jmp
and
xchg
sub
mov
dec
cld
inc
and
push
add
xchg
xchg
sbbl
jno
jl
icebp
push
in
xor
pushf
jl
jo
xor
inc
cli
adc
cmp
test
cmc
aas
pop
jae
xchg
adc
cli
and
mov
out
jbe
xchg
jae
jl
mov
sub
mov
mov
and
lahf
xor
icebp
dec
gs
loope
rcrl
ret
mov
and
push
mov
testb
inc
mov
fsts
xor
idiv
ret
and
push
add
dec
dec
adc
stc
or
mov
push
push
mov
mov
mov
das
shlb
mov
mov
outsl
das
fdivl
enter
sbb
clc
shll
xor
jge
repz
pop
outsl
in
lock
aaa
lahf
xchg
scas
and
outsl
outsl
movsl
jmp
pop
mov
mov
mov
dec
sub
sub
sbb
jns
xchg
sbb
sarb
jmp
cwtl
hlt
jge
je,pn
repz
clc
and
or
stos
ret
adc
mov
xor
xor
mov
daa
pusha
jno
lret
mov
pop
cmp
ret
jecxz
sbb
imul
test
aas
clc
xchg
xchg
add
push
in
jb
dec
aas
aas
into
popa
xor
xlat
adc
and
push
popa
out
sub
dec
fisttpll
cmp
mov
cmp
mov
outsl
and
inc
lret
out
push
sbb
mov
popf
mov
mov
daa
cmpsb
repz
es
test
lods
mov
dec
sub
or
mov
aaa
int3
aad
shl
push
push
arpl
pop
push
lea
insb
xchg
jbe
mov
insb
push
mov
rcll
bound
fwait
daa
shrl
dec
idivb
xor
cmp
push
pusha
pop
imul
or
mov
fwait
push
cs
push
sarb
jne
sub
loopne
int
sub
jmp
push
popa
call
adc
push
repnz
mov
test
test
sbb
stc
cltd
cmpsb
dec
rolb
sub
jecxz
fldt
jne
push
mov
mov
adc
inc
mov
push
insb
add
out
pop
push
sbbl
and
lock
std
daa
fdiv
movsb
mov
mov
clc
dec
pop
js
pop
rolb
jl
adc
add
xor
xor
outsl
or
sub
repz
inc
xchg
inc
sub
pop
sub
sub
mov
mov
imull
push
jle
xchg
dec
push
lahf
cmc
mov
lahf
fiadds
sbb
mov
jno
repnz
fisubrl
popa
jnp
adc
ret
pop
cmp
mov
or
sub
mov
pop
jae
pushf
in
cltd
sbb
add
jb
bound
imul
xchg
test
loop
shr
ret
or
sbb
sub
cmp
bound
imul
xchg
test
loop
shr
ret
or
sbb
add
loop
bound
imul
mov
shr
sub
or
dec
sub
cmp
jb
push
imul
xor
test
push
sub
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
subb
cwtl
jbe
mov
fadds
sub
cmp
or
sbb
push
std
jb
jb
subb
cwtl
ret
clc
loop
repnz
sub
pop
and
cmp
inc
push
jb
fwait
test
mov
fucomi
lret
enter
xorb
jge
dec
sbb
cmp
pop
jmp
std
out
out
leave
xchg
das
rcrb
and
xor
xor
scas
push
repz
insl
cmp
out
push
addr16
into
addr16
xchg
cmp
fimuls
int3
xchg
adc
lea
jge
outsb
stos
push
jg
hlt
add
sub
xor
enter
imul
cmp
xchg
cwtl
cmp
inc
repz
mov
adc
int
mov
mov
aad
dec
pop
inc
das
or
lret
fldl
pop
add
aam
and
ret
js
test
jb,pt
in
dec
popa
cmp
mov
lahf
cmp
bound
pop
jge
mov
dec
test
mov
aad
ret
enter
sub
cmp
or
sbb
dec
js
dec
jb
out
idivl
mov
mov
scas
xchg
mov
dec
jle
push
pusha
push
pop
inc
or
or
dec
pop
sbb
test
mov
scas
mov
mov
dec
and
ja
or
adc
jmp
loopne
std
mov
sar
loop
repnz
sub
cmp
or
sbb
push
js
dec
jb
subb
cwtl
ret
clc
loop
repnz
sub
cmp
or
sbb
push
js
dec
jb
subb
fildll
inc
sub
ss
in
orb
inc
dec
push
inc
sub
daa
aas
lock
pushf
sub
popf
or
ret
and
push
pop
loope
add
dec
mov
stc
sbb
test
leave
dec
sbbb
cltd
stc
inc
push
sub
sub
rclb
push
les
insl
cmp
lret
lods
scas
jb
push
jno
lock
mov
dec
stos
or
mov
xchg
in
pop
pop
jp
add
notb
xchg
ds
pushf
or
xor
sub
pushf
mov
pop
mov
xor
inc
lcall
outsl
sahf
iret
movsl
mov
or
cld
fldcw
sahf
mov
cmp
testb
sti
fldl
mov
ret
mov
int3
mov
push
xchg
pop
adc
call
je
in
mov
in
mov
or
flds
inc
mov
mov
sub
or
or
sbb
adcl
fwait
call
jge
push
fucom
lret
fnstcw
jne
js
inc
lcall
and
shlb
jbe
rcl
ret
nop
and
inc
sbb
or
mov
mov
add
jmp
fiaddl
enter
sbb
scas
test
je
testl
mov
jmp
dec
and
lret
add
and
sbb
pop
scas
cmc
js
add
es
int3
mov
adc
dec
pop
jb
test
push
mov
mov
xor
idiv
cs
xor
dec
mov
jmp
cmp
inc
pop
xchg
std
mov
dec
mov
or
test
mov
fiaddl
adc
inc
enter
in
icebp
fs
sub
testb
sti
int3
mov
in
push
fcomi
mov
and
xchg
and
dec
push
mov
pop
insb
push
iret
xor
loop
test
mov
mov
push
dec
push
inc
mov
xchg
out
jmp
out
jnp
cs
cwtl
mov
pop
xchg
jo
fstpl
sbb
outsb
mov
es
repz
and
sub
pop
das
outsl
test
cmpsb
fcoms
push
or
mov
mov
fs
dec
adc
mov
pop
push
jne
cltd
mov
push
cs
sub
fcmovne
jle
xchg
mov
add
adc
and
test
insb
sbb
test
movsl
mov
sbb
pop
xchg
xor
sub
cli
push
cmc
push
push
rol
into
push
jg
pop
mov
and
pushf
bound
inc
mov
sbb
cmp
in
rolb
in
out
add
sbb
fldt
mov
adc
pushf
repz
jg
out
daa
xchg
repnz
mov
mov
roll
popf
xor
test
sbb
mov
jne
cmp
xchg
push
stos
mov
jae
xchg
and
pop
in
cmp
imul
pop
daa
mov
lods
mov
xor
pop
popl
ljmp
loop
roll
scas
or
insb
nop
pushf
cltd
arpl
dec
ljmp
dec
add
fistpl
mov
push
jge
jae
pop
test
xor
pop
add
out
imul
jmp
subl
pop
sub
xor
cwtl
repnz
into
imul
jmp
stos
insb
or
or
movsl
xchg
lret
mov
mov
shrb
dec
xor
dec
push
jns
jmp
mov
cltd
jae
sahf
js
lcall
sub
bound
mov
mov
aad
add
fs
push
repnz
imul
pop
bts
push
xchg
mov
lahf
stos
clc
pop
jg
lods
mov
mov
andl
xor
in
mov
sub
push
out
mov
jo
mov
xlat
mov
or
leave
ret
adc
lahf
mov
out
mov
sub
cld
je
mov
enter
push
in
fs
xchg
icebp
mov
sbb
jle
mov
mov
flds
xor
fimull
faddl
push
xor
sar
insb
jle
cmp
movb
insl
xchg
rcr
jp
loopne
arpl
jl
cmp
icebp
sbb
sub
ljmp
mov
icebp
push
dec
cmpsl
adc
cld
ljmp
sub
jns
jns
daa
test
xchg
mov
dec
push
xchg
cmp
jno
mov
in
xor
in
xchg
aaa
or
push
mov
sub
arpl
xor
lods
lods
in
data16
mov
lret
std
pop
and
or
leave
adc
mov
arpl
ficoms
fcmovbe
mov
aad
movsl
insl
loop
cmpsb
xor
insb
mov
xor
jecxz
jg
scas
test
lret
movsb
cmpl
in
loope
int3
rcrl
stos
dec
sahf
jns
mov
lods
push
sbb
pop
and
sub
dec
xor
popa
testl
inc
stc
adc
push
mov
inc
jp
out
test
inc
and
test
xchg
xlat
lds
sub
mov
xor
out
jmp
add
in
and
ficompl
cmp
and
popf
cmp
pop
mov
insl
out
xchg
lahf
hlt
lods
iret
and
jl
loop
xor
inc
divb
cltd
test
rcl
xor
imul
cmp
dec
jo
inc
cmpsl
fimull
stc
cmc
mov
lahf
inc
inc
fstps
inc
or
xor
push
mov
fs
into
sbb
js
or
sbb
aas
mov
and
mov
dec
jne
lret
loop
pushl
sbb
adc
adc
xor
mov
sub
sar
das
rolb
cltd
jg
stos
pop
scas
xchg
pause
sub
aam
popl
mov
mov
sub
dec
fistpl
es
jl
dec
lea
mov
or
jnp
xchg
inc
insl
dec
mov
push
sahf
xchg
mov
inc
fwait
xor
jg
dec
xor
xor
aad
adcb
mov
and
adc
pop
cmpsl
jbe
jo
mov
fldl
lea
subl
pop
add
test
push
out
mov
mov
test
mulb
xchg
push
rcl
mov
dec
pop
mov
adc
add
jmp
lock
mov
xlat
or
pop
mov
ljmp
repz
cmp
sbb
sbb
outsb
push
in
and
mov
jo
xchg
call
fildl
pop
xchg
mov
mov
xlat
add
idiv
lcall
repnz
or
jae
xor
int
mov
push
jno
gs
ljmp
addr16
ja
xchg
movsb
inc
push
xor
cmp
cmpsb
out
mov
lret
inc
xorl
pushf
xchg
mov
sub
test
ja
sbb
cltd
shrb
idivl
outsl
test
sar
imul
xor
inc
mov
mov
push
fmull
add
inc
push
mov
mov
enter
icebp
sub
ja
jecxz
pop
dec
lea
pop
leave
or
push
jo
bound
pop
lea
aas
and
repz
into
sahf
aaa
and
cld
into
icebp
xchg
mov
inc
test
cmpsb
xchg
mov
or
dec
pusha
insl
and
xchg
int3
ljmp
faddl
lods
jne
negb
fstps
shl
dec
fwait
or
es
mov
mov
aam
sbb
jns
shl
lock
int
push
mov
pop
es
imul
fmull
push
jnp
mov
icebp
jb
mov
add
pop
mov
cmp
sbb
ljmp
lea
fstl
push
clc
mov
mov
lea
repnz
inc
lock
lea
stos
mov
and
xchg
insl
ds
and
sub
imul
aaa
inc
cmp
add
lods
outsl
push
and
rorl
jb
ds
mov
xor
mov
push
popf
fs
fs
out
sbbb
cmp
rol
int
push
and
movsb
jg,pn
adc
xchg
cmpsl
and
scas
fxam
arpl
cmp
lahf
test
pop
pop
lods
jl
xchg
or
shrb
cmp
sub
aas
xor
sbb
or
arpl
lahf
add
mov
mov
xchg
mov
fisttpll
scas
xor
push
ss
sub
and
icebp
dec
stc
mov
in
push
cwtl
loopne
repnz
add
imul
lock
fwait
and
push
sub
inc
jmp
je
xchg
mov
filds
xchg
dec
push
sbb
ds
std
mov
jo
std
push
ret
fimuls
sub
add
jnp
lcall
cmc
cmc
sub
insl
ror
scas
stos
popf
pop
pop
outsb
push
add
sub
int3
pop
popf
pop
pop
cmp
jb
fistpll
and
ffreep
push
mov
fdivr
leave
jge
or
scas
aaa
mov
and
loopne
or
dec
or
pop
jge
hlt
scas
std
pop
insl
mov
int
jb
lods
mov
lret
mov
pop
outsl
mov
xor
nop
fistpl
sub
into
add
push
test
repnz
push
dec
mov
xchg
jl
add
mov
pop
das
adc
pop
or
das
mov
pop
sbb
rcrb
xlat
lret
out
inc
jbe
outsl
movsl
jp
out
xor
xchg
addr16
adc
cltd
scas
xlat
inc
outsb
inc
jnp
fnstenv
inc
inc
jb
add
mov
mov
mov
rolb
stos
mov
js
mov
xchg
into
jb
loopne
call
xchg
fwait
ja
mov
fcoml
push
mov
leave
nop
dec
xor
dec
lods
arpl
pop
scas
shll
and
loop
mov
cmp
mov
cwtl
adc
push
push
xor
mov
dec
rorb
lods
mov
out
ds
addr16
lea
push
xchg
imul
dec
mov
jb
sbb
fwait
mov
push
mov
iret
adc
lret
pop
sbb
es
push
and
mov
dec
jb
jge
jbe
push
sub
ret
cld
sub
adc
ret
sbb
xor
dec
call
mov
clc
sub
and
std
mov
mov
inc
std
xchg
pop
push
and
cltd
lods
pcmpgtd
stc
je
xchg
cmp
dec
sub
mov
popa
inc
fucom
mov
daa
in
cmc
prefetch
xchg
adc
das
add
add
lret
daa
and
scas
jmp
adc
std
pop
popf
and
jne
cmpsl
or
or
mov
cmc
cmp
and
xchg
inc
ljmp
pop
test
out
je
mov
fisttpl
leave
dec
sub
inc
sub
inc
lds
ljmp
cmpsl
dec
lds
jmp
sti
out
sbb
mov
lcall
dec
fstps
je
mov
adc
call
loop
pop
int
xchg
in
ja
adc
fmul
ficomps
pop
and
push
in
push
insl
andl
sub
and
aaa
adc
push
and
lds
dec
lret
jmp
cmp
xchg
xorb
xor
sub
adc
sbb
xchg
mov
adc
xchg
xchg
popf
jno
aaa
ss
sub
cld
cmp
bound
sbb
inc
fisubrl
sahf
std
jge
xchg
repnz
pusha
jo
mov
outsl
xor
sub
fadds
stos
mov
cli
cmp
and
idivl
outsb
outsl
ss
push
jmp
fstpl
hlt
jae
xchg
imul
gs
xorl
xchg
aad
dec
cmp
xchg
mov
sarl
fnstsw
iret
adc
ja
dec
pop
inc
into
inc
lods
or
push
loop
es
stos
je
sti
into
jp
insb
enter
fdivp
and
lea
pushf
loopne
mov
rcrb
movsl
dec
mov
dec
ret
inc
leave
push
mov
daa
push
mov
sbb
inc
sti
inc
pop
jmp
stc
add
in
dec
scas
popf
inc
cmpsl
mov
jo
rclb
jae
das
mov
call
imul
scas
adc
rol
or
mov
cmpsb
inc
sbb
lret
loopne
cmp
jg
lds
subl
push
addr16
mov
mov
or
in
testb
js
rorb
pop
xlat
dec
cmp
xor
inc
or
lcall
jns
test
pushf
test
cmp
or
sarb
enter
out
xchg
sarb
cmp
repnz
sbb
xchg
aad
pop
imul
mov
adc
shrl
xchg
push
sub
das
sahf
inc
sbb
divl
pop
xchg
pop
xchg
aaa
fdivr
pop
int3
ljmp
xor
lret
jne
sbb
aam
mov
mov
xchg
sub
cli
repz
lahf
das
add
out
inc
sbb
arpl
cmp
mov
das
in
popa
adc
or
add
aas
lods
rcl
xor
repnz
jno
iret
in
cs
inc
in
push
dec
push
stos
and
ljmp
and
push
jne
pop
or
push
lret
add
addl
mov
adc
xor
cmp
mov
fdivl
xor
mov
adc
dec
inc
sbb
push
xchg
adc
in
lcall
js
cmp
xchg
xor
scas
mov
daa
push
ds
enter
add
repnz
mov
adc
je
mov
or
in
out
aaa
ljmp
fistpl
adc
call
fs
ret
ret
push
in
idiv
xor
pop
aam
stos
lods
adc
lret
push
dec
aam
mov
push
inc
adc
mov
xor
xor
pop
insb
arpl
divl
popa
jmp
test
int
leave
jge
ss
subl
jmp
sar
xchg
je
pushf
aam
push
insl
clc
out
inc
xchg
xchg
fiaddl
xor
icebp
or
jbe
loopne
nop
orb
cmp
fisubrs
xchg
dec
lahf
jl
jg
jp
xor
jge
or
sub
xchg
lret
pop
jp
xor
mov
xchg
gs
iret
pop
sbb
test
clc
cmc
mov
lods
mov
xor
xchg
lahf
xchg
mov
xor
shl
insl
mov
dec
stos
xchg
jge
xchg
or
je
mov
xchg
sub
dec
sti
scas
mov
fs
sub
les
fistps
iret
mov
pop
pop
pop
adc
gs
xor
ja
push
shr
arpl
dec
xchg
ret
push
das
mov
repz
clc
sbb
mov
push
movsb
rep
or
dec
xchg
insb
outsl
xor
xchg
into
and
into
mov
imul
xor
clc
test
sub
inc
jp
js
fiadds
outsl
out
pop
cmp
aaa
cmp
iret
in
mov
dec
addr16
mov
sarb
mov
fcmovbe
fs
lret
ss
mov
mov
test
and
cmc
out
adc
mov
mov
jno
fistpll
xor
aaa
dec
gs
mov
js
jp
cmp
jg
loopne
cmp
in
add
in
lods
pop
push
cmp
push
out
mov
addb
movsb
pusha
cld
dec
mov
cs
mov
scas
push
push
ja
jl
jp
or
mov
loop
dec
cmc
inc
ffree
leave
imul
cmp
ret
xchg
mov
jl
sbb
pop
les
das
fs
adc
or
loopne
icebp
and
cmpsl
lcall
pop
xor
cs
pop
in
pop
cmp
ficoms
enter
mov
xchg
repnz
xchg
mov
add
lahf
out
lods
dec
fiaddl
outsl
sbb
shl
pop
jne
mov
xor
xor
pushf
ljmp
scas
insl
rorl
mov
ljmp
xlat
data16
sti
cmpb
sub
js
cmpsb
mov
cmp
scas
repz
adc
inc
sub
jecxz
inc
mov
xchg
sbb
js
les
fwait
out
mov
or
std
ret
jmp
bound
push
add
adc
jae
jns
sbb
cmp
xchg
jp
lods
fsubrs
mov
sbb
adc
fwait
xchg
dec
push
jecxz
jmp
iret
push
test
aaa
add
pop
push
sti
fstpl
pop
hlt
mov
xchg
or
or
sbb
sahf
push
loopne
pushf
adc
mov
jne
ret
mov
repz
jle
mov
fsubs
packuswb
negb
sarb
or
adc
imul
jg
hlt
imul
xor
hlt
insb
inc
dec
pop
mov
out
arpl
mov
mov
xor
test
lods
nop
aad
sbb
jecxz
imul
mov
adc
cmpsl
jne
mov
leave
push
lret
into
xchg
fadd
inc
lds
pushf
mov
xlat
out
lea
push
mov
lods
jne
clc
sub
imul
sahf
sbb
add
mov
into
jg
dec
xchg
xchg
shrb
jge
jo
jmp
mov
pop
repz
adc
push
dec
sqrtps
popf
jnp
das
lods
lahf
ss
push
sar
inc
jl
mov
adc
jecxz
sub
cmp
and
push
nop
and
push
mov
cwtl
loop
jl
fistpll
sub
adc
scas
xchg
xlat
inc
bound
mov
mov
stc
test
rclb
jno
and
insb
pusha
cmp
cmp
negl
inc
fisttpll
mov
movsl
cwtl
dec
out
or
out
shr
addr16
dec
lea
lret
rcrl
jns
and
dec
mov
inc
inc
pop
inc
dec
cmc
shlb
arpl
cmp
push
fstl
jle
jbe
cli
mov
push
cmpsb
sub
into
ret
mov
xchg
fisttpll
test
xchg
pop
jb
or
aaa
or
sahf
mov
lods
mov
pop
std
push
and
mov
mov
in
push
or
test
cmp
cwtl
sti
inc
clc
stc
dec
lcall
fiaddl
jle
stos
lock
pop
inc
add
cmpsl
xchg
jne
mov
jnp
cmc
xor
lock
sub
add
xor
xchg
lods
repz
or
in
xchg
call
dec
mov
sarb
loopne
or
int3
mov
jl
push
repnz
jmp
fsubl
pop
popa
call
mov
dec
les
and
push
adc
inc
xorb
loopne
scas
cwtl
pop
add
cmp
cmpsb
outsb
insl
in
fwait
xchg
inc
rol
cmp
repnz
pop
cmp
out
push
push
shrw
pop
mov
or
push
aas
sub
fcomps
aad
mov
cltd
mov
ja
fwait
cmp
xor
push
cmp
pop
les
and
jbe
je
cmp
mov
movsb
cs
cld
xchg
cmp
jno
out
dec
int3
into
push
push
cmp
popa
ljmp
xchg
idivl
test
inc
pop
dec
or
stos
dec
mov
lret
pop
stos
bound
mov
mov
xlat
clc
aaa
hlt
xor
or
data16
mov
aaa
jle
mov
mull
pop
repz
dec
pop
jbe
jae
jmp
lock
clc
cs
bnd
inc
lds
fcompl
xchg
add
xchg
popw
cmp
pop
sti
push
outsl
fdivrs
jecxz
mov
mov
lcall
dec
or
cmp
xlat
jmp
cmpsb
add
jae
movl
icebp
call
mov
psadbw
fsub
pop
xorb
cld
mov
popa
inc
lret
enter
xchg
xor
shr
mov
xchg
lods
sub
and
cltd
pop
mov
sbb
in
or
add
out
stos
cld
outsl
stc
push
insl
dec
sub
inc
mov
cmp
xor
mov
insl
lods
xor
push
das
lods
dec
mov
std
add
and
inc
dec
adc
cmpsl
fsubrs
inc
pop
cld
push
dec
mov
mov
sub
pop
and
push
cmp
sub
pop
fcmovnbe
stos
xor
ret
not
aaa
or
and
daa
sub
dec
push
cmp
and
out
int3
pop
outsb
inc
cmc
ret
or
imul
pop
xchg
cmpsb
fdivrs
call
add
and
adc
lock
popa
lds
inc
cmpsl
into
lods
jae
jbe
insl
adc
add
ja
cld
jns
sahf
in
loopne
dec
fistpll
adc
test
mov
ret
clc
loop
repnz
sub
cmp
or
sbb
push
js
dec
jb
subb
cwtl
ret
clc
loop
repnz
sub
cmp
or
sbb
push
js
dec
jb
subb
cwtl
ret
js
enter
test
cmp
or
sbb
push
js
dec
jo
subb
cwtl
shr
clc
enter
sub
xchg
mov
xor
loopne
xchg
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
mov
movsb
rclb
xchg
mov
int3
into
mov
cld
and
jb
add
xor
ret
xchg
loop
repnz
and
aam
xlat
xor
and
adc
add
mov
adc
xor
test
hlt
and
aam
les
js
add
je
or
inc
sub
mov
mov
cmp
mov
jmp
popf
cmp
cmp
mov
addr16
ret
enter
or
cmp
leave
push
mov
mov
gs
add
lods
adc
iret
xchg
pop
pop
jns
jno
inc
jo
adc
les
xor
movsb
testl
mov
movsb
outsb
testl
add
sbb
in
push
repz
daa
push
fwait
add
inc
rorb
pop
les
psubd
int
sbb
les
arpl
push
jmp
sub
and
jmp
int
ret
xchg
loop
repnz
and
aam
les
adc
add
je
adc
je
ret
std
mov
xchg
out
mov
dec
adc
jl
jne
fs
aaa
push
add
scas
sarl
shll
push
daa
jne
push
add
or
andl
mov
xchg
aam
les
adc
add
je
adc
xor
test
hlt
and
aam
les
adc
add
je
adc
xor
stos
xor
mov
in
lods
inc
xchg
mov
ret
xchg
inc
push
mov
int3
dec
mov
add
nop
push
add
daa
fs
aaa
out
sub
add
in
sub
and
mov
fwait
sbb
mov
cmp
jmp
imul
or
loopne
subb
jne
aaa
adc
leave
xchg
push
xchg
ss
adc
pop
pop
mov
arpl
mov
std
sbb
add
imulb
jno
push
or
mov
div
sub
cltd
pop
lcall
mov
outsb
sbb
adc
push
dec
and
popf
jae
mov
fidivs
incl
fstps
mov
or
js
ret
adc
aad
jbe
jge
imul
pop
shrb
js
js
sti
mov
mov
xchg
lcall
jge
adc
adc
push
and
cmc
pop
or
loop
imul
jg
jecxz
dec
outsl
jns
mov
aaa
popa
or
cmp
sub
mov
sbb
fldenv
xchg
adc
les
push
dec
int
mov
adc
xor
pushf
adc
mov
adc
mov
push
insl
into
test
mov
out
call
je
inc
push
mov
mov
je
repnz
fdivs
dec
mov
pop
mov
sar
jae
cld
imul
mov
or
or
adc
test
dec
pop
into
lods
dec
sahf
cmpsb
xor
adc
and
loopne
inc
int3
cmp
cmpsb
negl
pop
sahf
xor
mov
fildl
lods
movsl
mov
pop
ljmp
pop
push
pop
loop
adc
sbb
pop
shrb
int3
call
jno
shlb
jne
rolb
push
or
xor
call
daa
test
fcmovne
call
or
popa
xchg
cmp
xchg
cmp
fwait
lods
movsl
pop
jo
rorb
sub
push
add
push
std
out
test
out
pop
adc
sti
xchg
jmp
aad
mov
xchg
adc
or
lahf
sbb
dec
popl
pushl
lcall
push
daa
sbb
aad
mov
cwtl
enter
loopne
mov
repz
fdivr
jge
in
mov
push
in
xchg
cwtl
push
imul
dec
jmp
loopne
ljmp
dec
inc
ret
inc
rol
and
xchg
xchg
adc
rcll
jne
mov
or
insb
sub
test
push
inc
sub
add
arpl
dec
sbb
pop
mov
popa
xchg
test
in
add
fimuls
inc
hlt
mov
incb
aas
xchg
dec
sbb
imulb
xchg
sbb
push
xchg
addl
sbb
aas
pushf
mov
divl
adc
iret
sub
in
ret
adc
and
pop
mov
pop
jl
add
xor
addr16
fstpt
lcall
adc
inc
push
jnp
ja
ret
adc
popf
adc
add
mov
sub
and
mov
stos
rcrb
or
push
es
das
fdivrs
pushf
jne
inc
jne
adc
adc
pusha
pop
mov
lcall
mov
push
cmp
fdivs
rcr
in
sbb
mov
pop
ljmp
dec
sub
fiaddl
fsts
ljmp
push
sub
xchg
scas
nop
setne
sbb
sub
filds
mov
xchg
shll
xchg
and
mov
daa
cs
adc
jge
cs
mull
movsl
jns
stc
ret
ds
ljmp
rcrb
add
leave
lock
dec
ss
cmp
rclb
rol
or
mov
push
sub
loope
sar
dec
fstpt
imul
call
inc
incl
or
cld
cwtl
jae
fwait
dec
sbbb
fcompl
outsl
enter
rolb
scas
ja
ja
ret
push
dec
or
cli
enter
xchg
push
and
xor
push
lea
test
sbb
icebp
mov
jl
cmpsl
cmp
shlb
call
fisttpl
mov
mov
or
fcmovu
add
xchg
lods
out
lea
test
cmpsb
sbb
rcll
int
mov
fcoms
xlat
dec
sbbb
js
arpl
add
mov
rol
int
pop
jno
shlb
or
sbb
jmp
push
jno
imul
iret
gs
adc
fnsave
sub
cmc
in
push
aam
rorb
pop
or
stos
sub
rolb
xor
movsb
in
dec
repnz
inc
mov
xchg
loop
loop
mov
adc
push
clc
into
adc
ret
test
mov
ljmp
lret
das
test
ja
fcmovbe
sahf
movb
mov
ja
mov
push
adc
mov
and
lea
repz
push
iret
dec
sahf
mov
lret
mov
pop
ja
std
jo
clc
cli
xor
arpl
fdivl
mov
pop
jle
ret
sbb
mov
out
hlt
mov
or
cmp
jle
sbb
call
popa
dec
gs
sub
dec
leave
mov
shrl
xor
ja
jne
cmpsl
mov
fstps
mov
xchg
mov
mov
minps
mov
and
insl
dec
mov
aad
mov
cli
test
mov
xchg
pop
loopne,pn
jbe
pop
icebp
jmp
cmpsl
popa
push
dec
mov
leave
clc
jb
and
push
sti
push
mov
loopne
add
lcall
cmp
sbb
std
lret
add
imul
sub
out
pop
mull
pop
test
xchg
pop
sbb
jae
sbb
push
push
xchg
xor
push
clc
pusha
test
arpl
mov
or
jne
loop
push
cmc
or
mov
xchg
mov
shrb
fisttps
aam
jbe
aaa
lods
out
adc
es
mov
lods
mov
mov
jl
jns
ret
inc
stc
mov
add
jns
stc
jmp
pushw
cmpsl
pop
and
jo
lahf
repz
ljmp
adc
lock
lds
inc
jmp
jno
dec
ss
or
stc
and
or
js
mov
xchg
mov
inc
fbstp
cwtl
shll
out
xor
ds
xchg
jl
dec
repnz
leave
std
sarb
inc
dec
sub
call
lds
mov
sbb
sbb
mov
xor
lds
imul
movsl
aas
mov
cmp
adcl
enter
dec
pop
push
cli
add
add
pop
scas
sbb
cmp
shl
inc
ja
lock
mov
add
int3
ds
inc
xchg
push
inc
jge
jmp
xor
cmp
mov
dec
mov
and
popf
jp
mov
inc
mov
cwtl
into
icebp
out
in
or
xor
pop
arpl
out
and
pop
pop
jge
dec
sbb
cmp
add
in
mov
jb
mov
jle
jl,pt
adc
sub
jae
popa
je
fwait
imul
rolb
pop
sbb
hlt
loope
jne
and
scas
das
dec
mov
movb
sbb
add
cld
cmp
xchg
aam
push
fadds
dec
aaa
pop
call
jge
xor
mov
push
push
cmc
push
mov
add
fwait
cmp
mov
js
xlat
sub
pop
ljmp
add
and
push
and
mov
add
mov
bswap
sub
cmp
test
sbb
jl
js
lcall
movsb
stc
pop
lea
xchg
fnstsw
xchg
add
inc
xchg
fisttps
add
mov
in
mov
sub
pushf
nop
enter
es
mov
jbe
imul
mov
push
inc
mov
jo
mov
loopne
shl
rdpmc
cld
inc
pop
jae
dec
jo
in
push
nop
cmp
push
mov
popa
dec
inc
mov
xchg
mov
hlt
movsl
add
sub
jge
mov
add
push
enter
popf
aad
xchg
shll
xchg
xchg
shll
and
mov
xchg
js
adc
jg
xor
lret
jmp
push
push
dec
mov
pop
rcl
adc
or
mov
mov
xlat
cmp
fadds
mov
mov
shrl
shrb
cmc
mov
sbb
jmp
add
and
in
xchg
xchg
rcrl
out
sahf
xor
lods
bound
scas
push
mov
push
sub
ja
mov
movsb
xor
cmp
loope
out
pop
mov
lods
jmp
mov
mov
ret
xchg
pop
add
sbb
mov
cmp
push
mov
push
cmp
add
push
push
push
sub
mov
leave
push
pop
lods
cli
mov
dec
decl
insb
ret
ret
mov
stc
repz
add
or
inc
jg
sbbl
cmp
mov
pop
jmp
repnz
push
push
push
adc
scas
xor
mov
stc
dec
cmp
push
xchg
andb
loopne
xchg
sti
xor
push
xchg
xchg
sbb
pop
xchg
add
push
dec
pop
into
sbb
or
xor
jecxz
cmp
ret
mov
or
into
push
mov
cmpsb
and
push
sti
jp
lds
pop
sbb
push
xor
daa
int
insb
cmp
test
dec
out
pop
stos
sbb
push
pop
mov
mov
stos
std
inc
pop
mov
sarl
xchg
cmpsb
jb
faddl
addr16
fidivrl
icebp
sbb
pusha
fisubs
pop
lahf
rorb
add
cmp
fisttpll
insb
nop
and
and
sar
or
dec
ds
cmpsb
push
andb
mov
dec
push
test
shrl
sub
fisttps
push
mov
cmpsl
mov
and
mov
popf
adc
push
negl
push
xchg
jne
test
fimull
stc
into
lods
xchg
fwait
scas
mov
je
mov
das
iret
iret
les
int3
sar
enter
test
lea
inc
aas
and
es
inc
add
icebp
or
mov
jle
lods
sahf
inc
lods
pusha
push
imul
je
inc
dec
popf
push
int3
mov
pop
popa
out
jl
ret
subb
inc
sub
sub
js
into
outsb
fdivs
mov
fs
repnz
movsl
out
mov
mov
mov
pop
sub
jl
xor
jo
ja
bound
fistps
cmpsl
pop
pusha
add
cmpsl
cmp
not
shll
jbe
in
xor
andl
inc
push
inc
pop
es
test
jge
incb
push
xchg
mov
xchg
add
mov
xchg
jg
das
xchg
sbb
sub
imul
mov
test
cmpsb
adc
jge
push
and
add
mov
std
inc
in
push
pop
push
mov
push
lock
inc
mov
xchg
add
inc
addr16
jb
cmp
sbb
cli
bound
aas
fs
and
fnsave
jns
sbb
pushf
add
in
pop
and
out
dec
mov
test
int3
push
and
pusha
incb
aaa
sbb
test
push
pop
xor
xlat
bound
int3
add
imul
lret
sar
das
xchg
mov
xchg
lods
inc
lods
jle
pop
leave
lret
clc
popa
pushf
mov
imul
jno
scas
lahf
inc
mov
arpl
pop
adc
jp
loopnew
lret
mov
shll
scas
pop
push
lock
xchg
addr16
push
stos
add
mov
push
xchg
mov
aaa
dec
mov
sub
cmp
mov
jge
jae
adc
stos
daa
jne
xor
std
mov
adc
pop
je
inc
cli
test
pop
push
enter
insl
xor
push
stos
jge
push
inc
pop
fistpll
push
and
push
fs
fmul
addps
lea
xor
pop
rcrl
push
push
pop
daa
xchg
xchg
or
pop
inc
pop
loope
mov
mov
int3
mov
cmp
aad
fldcw
pop
dec
sub
lea
ljmp
outsb
sbb
sub
adc
dec
shlb
loopne
rolb
cmp
push
xchg
xor
movsb
rcrb
nop
loopne
cmc
push
xchg
cwtl
and
xchg
and
mov
sbb
imul
rorl
out
enter
dec
xchg
dec
mov
fnstenv
hlt
cltd
loopne
xchg
sbb
popl
pop
bound
mov
fld
cmc
lcall
mov
mov
cmp
ret
sahf
addl
xor
mov
mov
pop
add
mov
les
jmp
lock
sahf
hlt
fidivl
push
rcll
ret
aas
bnd
mov
les
es
and
adc
fisttpll
mov
lcall
test
jle
aam
sub
dec
fcmovnu
pop
pop
cmp
inc
sub
xor
pop
cmp
cmpb
imulb
lods
cld
into
lods
xchg
roll
jnp
mov
test
xchg
je
pop
pop
and
cwtl
aam
cld
imul
mov
xchg
ss
popf
mov
pop
add
dec
lds
cmp
cltd
lods
lret
test
fdivr
lahf
xorb
imul
test
test
clc
jg
insl
aam
pop
adcl
data16
iret
jg
iret
jne
scas
push
mov
cmp
std
jge
fdivr
test
sbb
inc
cmp
pop
insb
pop
repnz
mov
aaa
pop
xchg
sub
mov
push
sbb
xor
jne
popf
scas
lret
lds
and
ljmp
outsb
stc
scas
pop
ret
mov
push
mov
mov
pusha
movsb
xchg
insb
and
jle
js
sub
sub
xchg
icebp
xchg
inc
mov
adc
sub
stos
cmpsb
push
add
imulb
adc
repz
jbe
out
jp
xchg
xchg
add
stc
js
cmp
dec
pop
xor
xchg
fisubl
jo
shll
in
std
add
std
fsub
sub
adc
jmp
jns
lcall
scas
jmp
clc
jmp
mov
dec
xor
jbe
xchg
xchg
dec
adc
ret
lahf
imul
mov
adc
lahf
cmp
push
imul
out
stc
icebp
xchg
stos
sbb
jecxz
inc
sub
sub
jae
mov
ds
arpl
mov
sbbl
dec
scas
dec
or
add
lods
cmp
inc
jae
daa
push
mov
into
popf
sub
jb
jo
test
aas
push
pop
in
addr16
es
shll
je
lea
push
stos
jge
inc
jg
sbb
or
data16
xor
mov
pop
loopne
dec
adc
pushf
inc
repnz
xchg
mov
inc
imul
cmp
rcr
je
xchg
test
cli
cmp
inc
push
sbb
outsb
jbe
ljmp
out
ja
or
jnp
or
jmp
or
mov
jb
cmpsb
arpl
adc
and
loop
inc
cs
iret
pushf
or
call
adc
pop
mov
cmpsb
std
sub
out
pop
imul
aam
cld
xor
loope
call
es
inc
imul
aaa
ss
fs
xor
inc
test
outsl
push
ss
cmp
jg
shl
cld
xor
lahf
jno
imul
lahf
ja
sbb
jae
insl
sbb
mov
xchg
xchg
lods
and
inc
cmp
int
lret
xor
pop
mov
xchg
or
mov
stos
mov
inc
add
paddd
cs
int3
and
loop
jns
loope
in
es
pop
outsb
sub
cmp
mov
jmp
sbb
push
mov
sbb
lds
sub
mov
frstor
inc
rcl
rolb
test
pop
xchg
sbb
inc
push
popf
mov
mov
mov
cmp
xchg
adc
inc
inc
loop
fucomp
cmpsb
inc
add
mov
cmpsl
sarl
nop
repnz
add
daa
and
cmc
ljmp
aas
dec
inc
lahf
mov
out
cmp
mov
sbb
push
xchg
inc
adc
sub
push
and
pop
insl
rcll
pop
addl
adc
aas
pop
or
data16
sub
aaa
mov
mov
shl
jg
or
ret
or
and
add
jle
lcall
pop
cmp
insb
subb
outsb
jne
aaa
mov
mov
sarl
outsl
and
inc
add
ret
cvtpi2ps
je
cmp
cmove
add
lret
mov
adc
pop
mulb
out
shlb
xchg
stos
add
push
aam
daa
or
inc
sbb
and
popf
nop
inc
andb
int3
sub
mov
mov
mov
outsb
inc
aad
js
mov
xor
mov
call
add
push
pop
dec
fldt
dec
es
push
call
stc
out
mov
out
leave
mov
in
xchg
aaa
mov
dec
xchg
jge
add
bound
dec
test
jne
pop
addb
aaa
and
jmp
ret
aaa
adc
insl
dec
pop
push
xlat
push
ret
hlt
enter
inc
sbb
and
popa
es
pop
icebp
cmp
stos
pop
adc
lret
repz
cli
xchg
adcl
shrl
daa
mov
fdiv
lods
out
mov
mov
std
dec
inc
roll
cltd
cmc
popf
hlt
mov
lcall
mov
shlb
mov
mov
arpl
mov
sbb
sub
or
pop
pop
sub
sub
fnsave
aam
cwtl
cmp
or
mov
mov
pop
and
shll
pushf
push
scas
ljmp
int
jl
outsl
add
add
mov
out
mov
pop
pushl
icebp
ret
test
mov
mov
in
call
dec
xchg
xchg
insl
pop
out
add
rcrb
ret
mov
fadds
jecxz
loop
cmc
xchg
jle
xor
rol
stos
cmc
xchg
imul
mov
test
enter
adc
sarb
dec
mov
cmp
scas
or
into
lahf
fldl
xor
repz
mov
pop
and
fistpll
ja
lret
clc
sub
outsb
in
faddl
aad
fs
outsb
pop
out
cmp
fstpl
lock
mov
sbbb
insl
popa
ljmp
and
mov
pop
in
inc
repnz
push
in
xchg
out
fsubs
add
dec
push
xchg
in
movsl
jmp
mov
fcmovb
adc
call
push
cmc
jle
not
movhps
ror
ljmp
clc
sbb
pop
es
outsl
mov
mov
inc
out
gs
sub
inc
xor
movsl
stos
lahf
inc
or
push
mov
push
std
lods
xchg
xchg
ja
loop
push
fistpll
lahf
mov
addr16
in
insl
ss
into
fisubrs
cs
inc
adc
clc
push
xchg
out
push
mov
ds
lods
ljmp
or
rclb
add
inc
dec
aaa
pop
hlt
push
mov
sbbb
gs
les
push
dec
test
loop
mov
jg
pop
xchg
sbb
dec
jo
es
les
jp
jmp
jo
add
adc
push
insb
insb
inc
adc
inc
mov
pop
pop
movsl
or
ljmp
cmp
add
iret
pushf
or
insl
cmp
dec
mov
xchg
je
dec
rcll
sahf
cmc
data16
jmp
repnz
jbe
icebp
out
out
fistpl
inc
sbb
xor
fwait
pop
test
and
xchg
stos
and
pop
fnstsw
jnp
adc
mov
or
or
or
hlt
fdivp
mov
pop
sarb
dec
jge
inc
test
lret
push
ret
xchg
dec
add
push
and
inc
ficoml
mov
arpl
shrb
sbb
xor
and
or
rcr
jo
sbb
insl
dec
mov
dec
rcr
aam
pop
out
xchg
jmp
sub
sbb
dec
jecxz
pop
xlat
repnz
inc
inc
adc
and
daa
dec
sub
repz
test
stos
push
pop
mov
xchg
iret
insb
pop
adc
sahf
ja
push
mov
cmpsl
mov
int3
loop
adc
jmp
jge
fsub
cli
or
rclb
and
aam
les
adc
add
je
adc
xor
test
hlt
and
aam
les
adc
add
je
adc
xor
test
je
in
aam
inc
mov
inc
and
adc
add
je
adc
xor
test
hlt
and
aam
les
inc
and
mov
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
es
and
inc
and
pop
inc
cmp
arpl
mov
jecxz
ret
mov
xchg
mov
insb
push
dec
inc
cmp
sub
sbb
or
div
in
jecxz
fisttpl
ret
mov
xchg
mov
inc
leave
push
xor
add
sbb
cld
repz
mov
mov
in
or
insb
and
add
es
rcr
das
nop
cmc
ret
adc
adc
imul
insb
or
jo
mov
sti
shrl
xor
sub
xchg
add
add
icebp
sbb
or
fimull
jecxz
pop
repnz
mov
xor
ss
dec
inc
lods
jae
arpl
cmp
hlt
rorl
enter
fsubrl
ret
ljmp
fsubrl
pushf
movsl
xchg
sahf
add
add
and
sbb
hlt
rclb
mov
xor
xor
fldcw
push
pushf
mov
rcll
arpl
add
mov
int
jl
mov
jmp
pop
daa
pop
inc
sub
and
adc
dec
rcl
jmp
xchg
mov
jae
or
aas
sub
pop
xchg
inc
dec
push
popaw
inc
mov
mov
int3
stc
out
ljmp
dec
das
dec
popa
inc
jno
jp
xor
xchg
in
xchg
cltd
cmpl
lock
aas
dec
das
inc
jg
and
or
cld
repz
jecxz
ror
ret
mov
xchg
mov
pop
push
dec
inc
cmp
sub
sbb
or
cld
repz
jecxz
ror
ret
mov
xchg
mov
add
push
mov
outsl
adc
ret
adc
mov
divb
sbb
sub
daa
xchg
enter
jbe
fnstenv
adc
jg
jl
sbb
or
mov
sbbl
or
mov
lea
bound
push
or
mov
dec
outsb
cli
jge
inc
stc
push
push
and
cmc
cli
lock
sub
inc
add
dec
sub
cmpl
cmp
dec
pop
cmc
lea
jmp
and
jae
les
insl
cwtl
or
scas
sbb
outsb
mov
fistpll
shrb
aaa
cmp
ret
pop
push
adc
js
xor
push
scas
iret
sub
arpl
out
mov
dec
xchg
fmuls
inc
xor
and
popa
leave
cmp
std
lea
in
adc
lods
inc
or
out
dec
xchg
jb
and
loope
inc
or
int3
pop
addr16
inc
push
dec
insb
sbb
out
idivl
in
cld
rorl
and
or
js
into
sbb
mov
push
cs
cmp
sbb
out
in
iret
test
outsb
js
or
pop
add
pop
jnp
ja
inc
int3
or
push
jl
and
add
jbe
fsubrs
adc
sub
mov
xorb
ficoms
jge
hlt
mov
push
aam
sbb
scas
jecxz
mov
and
outsb
cs
lahf
cmp
pop
in
aam
xor
in
add
cltd
aas
mov
out
fildll
inc
fisttps
xor
jge
cmp
inc
or
repnz
mov
test
push
aad
or
mov
cmp
xchg
imul
mov
mov
sub
jg
inc
cmp
cmpsl
jae
fdivl
sahf
and
mov
in
cmp
adc
das
mov
shlb
lret
and
sub
ds
ds
adc
lcall
mov
jo
int3
mov
push
xor
insb
sub
push
push
ret
pop
inc
dec
sbb
inc
pop
sbb
call
xchg
mov
dec
rcl
cmpl
pop
stos
pop
xlat
rcll
test
lea
push
nop
adc
mov
pop
add
push
fdivl
push
daa
mov
sbb
mov
subb
int
mov
scas
dec
adc
lock
sbb
insl
imul
sub
mov
test
pop
dec
fs
sub
rorl
push
jp
in
test
pop
push
jnp
sbb
fcmovnbe
popf
mov
jns
push
adc
mov
nop
repnz
ss
into
fldcw
fcomip
push
loopne
mov
notb
rcll
xchg
add
pusha
sub
mov
or
cli
das
cli
out
dec
pop
cli
cs
fnstcw
xchg
test
dec
xor
or
sahf
out
mov
or
das
sub
adc
lods
inc
icebp
leave
lret
jp
mov
mov
mov
xor
mov
jne
lds
dec
and
rcll
cmp
gs
outsb
outsl
dec
lods
jg
test
pop
das
int3
scas
jge
inc
mov
hlt
adc
cmpsb
movl
cmp
cli
push
popa
and
mov
lret
daa
ds
cmp
std
push
pop
outsb
jg
lock
call
popl
sub
jle
adc
xchg
cmp
pusha
jle
clc
xchg
cmp
add
sub
pop
pop
out
xchg
pop
jbe
test
arpl
or
add
pop
lods
jbe
or
mov
cmp
in
mov
stc
jns
xchg
and
ds
or
inc
aas
call
mov
repnz
movsl
mov
inc
fsub
pop
push
jecxz
dec
lock
xlat
rcll
adc
mov
popl
cmpsb
ja
filds
inc
mov
sti
gs
sub
inc
repz
movsl
xchg
sti
jp
stc
adc
cld
xor
jge
jmp
and
mov
stos
mov
inc
fstpt
into
mov
cwtl
je
inc
mov
fstpl
loope
addr16
pop
push
orb
enter
jnp
les
mov
inc
dec
dec
repnz
ss
lock
inc
sub
and
pop
push
push
out
pop
shrb
cmc
into
cld
or
sbb
pop
jl
imul
out
push
in
and
fst
lods
cltd
sbb
pushf
inc
fidivrs
std
sti
stos
jp
xchg
pop
mov
jnp
push
pop
ds
jbe
clc
lock
ja
dec
adc
je
mov
adc
xchg
mov
inc
insl
stos
sti
mov
add
ret
sbb
sub
xor
adc
scas
fnstenv
fnstcw
sub
sbb
xor
jnp
lcall
movzbl
mov
repz
push
cwtl
pusha
sahf
pop
cs
mov
push
jmp
xor
mov
push
ret
sub
stos
loopne
daa
cmpl
mov
in
movsb
xlat
inc
add
insb
add
push
add
ret
pusha
mov
xchg
out
mov
std
mov
pop
loop
movsb
dec
sbb
cmpsb
inc
cmp
add
push
test
dec
mov
cmpsb
testl
and
icebp
fldt
icebp
fsubs
js
push
aas
flds
or
push
jb
jno
cmp
sbb
bswap
scas
imul
cs
inc
scas
aaa
xchg
cmp
sbb
decb
daa
xchg
addr16
shlb
mov
sarb
sbb
mov
mov
jmp
std
xchg
out
cmp
lock
int
push
neg
pop
jl,pn
pusha
dec
xchg
xchg
pop
inc
mov
sbb
mov
pushf
stos
or
cltd
jmp
cs
sbb
fisttpl
test
sub
cld
mov
sahf
subb
sub
ret
out
cmpsl
ljmp
sahf
push
sbb
cmp
mov
push
loopne
dec
push
dec
push
jne
xor
sbb
inc
cmc
and
fisttpl
pop
fiadds
push
shll
inc
jg
push
into
mov
push
fwait
daa
pop
and
lods
leave
ret
scas
divl
jle
icebp
sub
cmp
lea
xchg
or
pushf
push
xchg
jnp
out
fsincos
dec
js
push
clc
stc
mov
inc
jns
sar
pop
mov
test
or
das
xchg
sub
ja
es
add
int3
cmp
sarl
pop
sub
sub
inc
cmpb
xor
cmc
dec
test
or
stos
xor
jecxz
in
mov
and
out
cmp
push
js
xchg
mov
mov
lret
sub
adcl
aas
lds
repnz
ds
sub
push
lods
jne
movsb
dec
cmc
mov
out
cs
lcall
xlat
lods
in
aaa
cli
jbe
pop
or
mov
dec
ds
dec
cmp
lods
xchg
lret
inc
jnp
inc
pushf
mov
xchg
cmp
jl
or
push
test
mov
movsb
and
or
mov
lods
dec
inc
daa
lcall
je
das
xchg
push
out
pop
sbb
jae
jp
xor
popa
lret
sahf
pop
add
popf
imul
mov
ret
popf
xchg
adc
mov
into
loopne
mov
mov
in
mov
jae
clc
shll
push
or
jecxz
xchg
test
and
das
mov
inc
mov
inc
mov
mov
dec
jbe
push
mov
inc
outsl
loopne
xchg
mov
jbe
aaa
mov
ljmp
push
add
inc
iret
int
push
jg
mov
repz
pop
imul
xor
ss
ja
cmp
xor
pop
in
rcr
push
push
add
loop
js
repnz
repnz
xchg
movsl
jae,pn
pushf
dec
leave
scas
add
pop
insl
fidivrs
and
or
mov
popa
xor
es
out
mov
jae
jg
adc
insb
repnz
popf
inc
ret
aaa
lret
scas
dec
fadds
add
dec
or
repnz
pusha
inc
sub
push
or
mov
push
mov
in
in
lds
inc
jl
lcall
inc
addr16
outsl
push
add
arpl
mov
sbb
and
lods
push
sub
mov
jl
fnstenv
push
cmpl
inc
in
subb
adc
pop
repnz
cmp
pop
lods
in
cld
mov
mov
loope
inc
xchg
dec
pop
daa
or
imul
and
xor
mov
xchg
in
jo
mov
movsb
xor
std
je
jecxz
jae
mov
iret
add
or
je
xchg
and
jle
repnz
ret
jmp
or
mov
cwtl
mov
ja
sub
loope
pop
shlb
dec
dec
push
out
jp
xrelease
div
lahf
and
pop
mov
jne
dec
cmp
or
sub
and
and
es
jge
cltd
movsl
sub
adc
rorl
sahf
js
sbb
dec
pop
xchg
fimull
test
test
decl
add
outsb
jne
stos
mov
fstpt
popa
syscall
sti
sub
fnstcw
test
lods
cmp
in
scas
mov
rcr
je
adc
mov
and
leave
aam
push
push
xchg
cli
ds
cmpsb
mov
lds
test
jns
mov
xchg
xor
insl
lds
idivl
sbb
pop
cmp
popa
leave
pop
pop
or
mov
rcrl
add
lret
mov
mov
cltd
js
scas
push
or
push
insb
sub
jae
std
push
outsb
cwtl
cmp
insl
mov
scas
mov
in
adc
out
aam
mov
fdiv
sub
inc
daa
mov
lods
imul
test
ja
push
xchg
mov
stc
imul
mov
cmp
or
daa
loope
inc
xchg
lcall
and
fwait
or
ret
pop
and
or
and
mov
dec
lods
js
leave
xchg
xor
add
push
mov
adc
lds
push
pop
std
loop
add
jecxz
cltd
pop
sub
push
inc
ss
sbb
sub
lret
mov
movsl
pmovmskb
adc
lret
xor
ret
and
add
adc
push
and
xor
aaa
dec
mov
jecxz
das
fwait
cmp
pop
movb
lock
aad
push
xchg
addb
aad
push
jno
fsubr
dec
sub
shl
std
mov
icebp
imul
insl
inc
int
lret
mov
ficoms
adcl
pop
pop
mov
jmp
mov
xor
in
adc
sub
cmp
loop
mov
cmp
and
mov
push
push
out
xor
or
mov
std
inc
in
test
lret
push
in
add
outsl
outsl
jno
ret
pop
mov
loop
mov
les
sahf
xchg
add
or
iret
pop
ret
xor
or
pop
jmp
stc
in
sub
cmpb
sbb
and
cmpl
jmp
fcoml
movsl
fdivs
insb
jle
or
in
adc
or
jbe
push
ret
mov
out
ret
pop
mov
fcompl
xor
es
jmp
nop
jo
add
into
mov
call
sbb
rcrb
movsl
or
add
mov
xor
in
dec
repz
mov
and
loop
loopne
xlat
xor
lret
dec
sub
mov
pushl
mov
into
gs
movsl
jns
ficompl
jnp
jns
popa
or
insb
pop
loop
cmp
shrb
jb
arpl
cmpsl
fs
out
in
cmp
jno
xorb
addr16
iret
adc
call
xor
xchg
cwtl
dec
inc
push
push
pop
lea
ficoml
mov
mov
lcall
add
imul
and
enter
mov
mov
mov
add
clc
push
pop
outsl
lods
je
mov
fisubs
xchg
shlb
xor
and
cmp
addl
lods
fdivrs
xchg
or
adc
lods
popf
jae
pop
jno
xchg
es
cmp
cmpsl
sbb
push
ret
cli
sbb
inc
les
sub
cmp
jbe
adc
cld
push
or
adc
sbb
in
out
xlat
in
adc
xor
push
movsb
add
int3
repnz
into
cld
outsl
stos
rep
or
or
lods
aaa
outsb
and
xchg
jbe
mov
fwait
lods
lret
arpl
insb
in
ja
pop
cmp
gs
scas
pop
pop
xchg
jo
insl
aam
shlb
fimuls
xor
fcmovne
call
pop
in
sbb
add
lock
adc
fs
pop
add
and
cld
nop
or
dec
mov
pop
das
sbb
cmpsl
aad
arpl
ljmp
push
fstpt
xor
mov
lcall
fbstp
inc
mov
inc
jnp
inc
dec
mov
repnz
imul
mov
xor
rorb
xchg
lods
lahf
cmpsl
xor
mov
pop
mov
mov
sbb
and
insl
jmp
xchg
mov
das
mov
leave
push
stos
popl
fistps
sub
mov
gs
or
xor
das
cmc
cltd
mov
inc
fcmovb
stc
sub
xor
icebp
fstl
fs
adc
inc
pop
iret
cltd
fisubrl
jno
cli
insl
fldcw
or
loope
or
inc
jae
cwtl
fstpt
push
inc
ja
test
mov
add
jg
pushf
add
inc
sub
stos
dec
ds
add
enter
xchg
sub
cmpsl
imul
jl
jo
subl
out
dec
push
mov
gs
cmp
cmp
and
lds
aas
loopne
into
sbb
push
shr
inc
mov
popa
dec
inc
js
fisubrs
xchg
inc
mov
xor
dec
xor
dec
nop
addr16
fistpll
adc
cmpsb
xchg
cli
mov
jecxz
cmc
pop
lret
xor
leave
and
stos
adc
xor
jp
sti
test
jno
mov
sub
add
mov
jg
mov
cmp
sbb
out
xchg
mov
rolb
sbb
xchg
cwtl
or
nop
sbb
push
and
daa
xchg
js
negb
lds
js
mov
addr16
mov
bound
test
cmpsl
cmp
nop
iret
dec
push
add
mov
int3
rcrb
xchg
cld
adc
or
jl
pop
cltd
mov
in
mov
in
mov
pop
jg
sbb
fdivrl
les
cmp
push
mov
mov
mov
xchg
ss
pop
lret
add
movsl
cmpsl
repnz
test
xchg
adc
push
lret
pop
out
test
push
fdivs
pop
sub
dec
cmpsb
mov
into
push
pop
xchg
aad
cmp
add
dec
repnz
mov
pop
call
mov
pop
pop
mov
mov
add
test
lock
out
nop
xor
push
iret
orb
fistl
mov
jo
sar
cmpsb
test
call
mov
js
adc
rcl
sub
enter
lret
adc
sub
sub
cmc
mov
adc
in
into
hlt
mov
sbb
imul
inc
push
pushf
dec
push
xchg
popf
jo
imul
or
jnp
sbb
and
dec
xorb
pusha
aas
lock
rcrl
loope
mov
sti
lods
lcall
sub
push
stos
dec
loope
sbb
inc
sub
je,pn
popa
sub
ret
adc
sub
out
cmpl
adc
std
in
xchg
push
and
sbb
lods
pop
pop
imul
pusha
or
imulb
push
inc
lcall
xor
jle
sub
clc
fistpll
pop
aaa
adc
mov
stc
outsb
or
add
inc
xor
xchg
dec
push
mov
call
aad
subb
mov
fdivs
mov
pop
jns
xchg
pop
outsb
daa
and
sub
xor
fdivl
std
xchg
scas
fcoms
dec
lret
shl
inc
sub
inc
ja
push
cmp
hlt
dec
jno
push
push
sbb
test
sub
mov
jbe
cmp
cld
sbb
aam
mov
xchg
ficoms
ret
je
pop
insb
cmp
xchg
sarl
mov
cmp
enter
mov
push
dec
lcall
movaps
jg
mov
add
fwait
imul
test
leave
cmc
fsubs
outsb
push
dec
push
sbb
xlat
jg
je
mov
push
lcall
cmp
jle
cmc
add
mov
hlt
and
xor
sbb
outsb
pop
out
lea
jecxz
fsubl
rolb
mov
mov
popf
mov
sahf
jmp
test
filds
ljmp
fldcw
sbb
flds
push
imul
cmp
mov
mov
shlb
cmp
in
imul
fistps
mov
movsb
movsl
imul
movsl
cmpsl
xor
shll
lret
jg
cld
add
lahf
rorl
pusha
sbb
xor
scas
adc
add
push
cwtl
mov
test
push
pop
jns,pn
lcall
inc
out
cwtl
mov
test
jno
lds
push
xor
clc
pop
loop
push
loopne
xchg
xor
jle
jno
push
test
sti
mov
gs
xor
pop
dec
mov
mov
push
mov
jae
sbb
fisubs
rclb
or
fadds
clc
and
test
inc
jbe
mov
sbbl
pop
cmpsl
mov
cmp
push
movsl
cld
ljmp
insl
dec
insb
sub
mov
add
arpl
leave
movq
inc
idiv
pop
xchg
add
jmp
test
dec
test
mov
xor
bound
ret
ret
iret
mov
aaa
inc
or
adc
cmp
lea
movsb
push
and
dec
lds
push
mov
insl
je
mov
xchg
lahf
pop
jp
and
ss
adc
into
inc
cltd
bound
push
dec
int3
test
mov
push
pop
mov
lret
xor
in
xor
cmp
dec
jb
ja
iret
push
and
in
xchg
push
sahf
mov
adc
adc
cmp
ret
insb
inc
and
cli
aam
add
mov
bound
pop
inc
add
inc
xor
shll
sub
jns
jnp
mov
out
push
das
mov
add
mov
xchg
cmpsl
jns
fs
cltd
shll
mov
xorb
add
xor
sti
arpl
xchg
jp
push
push
sti
push
and
adc
imul
sbb
into
mov
jb
outsb
iret
xchg
pushf
lds
negb
add
js
jns
push
out
cmc
scas
lcall
cmpsb
xlat
out
push
mov
aas
dec
data16
or
push
lods
adc
shrb
test
aam
xchg
xor
stos
and
popa
mov
ret
mov
ficoml
sub
xchg
xor
hlt
mov
pop
sbb
mov
sbb
scas
iret
dec
sub
pop
icebp
inc
xchg
jge
inc
add
js
and
mov
jne
fnstcw
ss
fnstcw
or
jg
push
and
adc
mov
sti
das
rorb
xor
loop
out
aas
jne
ret
pop
daa
sub
sbb
xor
or
int3
in
dec
mov
outsl
sbb
sbb
xor
pop
adc
adc
xchg
stos
add
sub
inc
mov
add
fldenv
jnp
out
pop
or
lcall
fldt
inc
cmp
daa
inc
xor
lea
js
xchg
call
add
incl
jb
dec
inc
gs
stos
fbstp
addr16
adc
test
mov
sub
scas
shlb
imul
loop
adc
dec
fisttpl
clc
cld
movsb
scas
mov
pop
test
stc
sub
imul
sarl
in
dec
scas
inc
ja
loopne
inc
or
daa
mov
jo
push
sub
ficompl
mov
jmp
rcr
push
aaa
data16
mov
js
and
xor
pop
push
jmp
cld
in
jl
daa
and
mov
daa
mov
push
pop
mov
push
data16
lea
jnp
arpl
xor
sbb
or
cld
repz
jecxz
ror
ret
mov
xchg
mov
pop
push
dec
inc
cmp
sub
sbb
or
cld
repz
jecxz
ror
ret
mov
xchg
mov
pop
dec
dec
inc
cmp
sub
sbb
or
cld
repnz
out
ror
lret
test
pushf
lcall
push
dec
add
sub
pushf
xchg
mov
add
dec
jbe
int3
mov
lret
and
arpl
jae
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
