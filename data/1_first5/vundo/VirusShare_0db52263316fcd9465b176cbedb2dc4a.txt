add
add
or
and
lret
or
add
addb
xadd
and
rolb
jb
jo
pop
add
add
jo
mov
addb
add
mov
inc
or
outsl
push
inc
add
mov
inc
add
add
or
add
or
add
lock
add
add
nop
add
adc
adc
add
or
xor
pop
push
push
add
jo
mov
addb
add
push
pusha
add
or
xor
js
mov
add
push
add
add
add
push
jo
push
or
add
push
rolb
or
dec
add
add
or
cmp
push
add
add
add
or
add
add
add
or
sub
pusha
add
push
jo
mov
add
add
loopne
lret
add
add
or
add
or
add
or
jno
adc
nop
or
adc
or
rolb
and
mov
add
or
add
pop
jo
mov
push
rolb
sbb
add
loopne
testb
add
push
add
add
mov
or
movsl
add
add
add
adc
mov
add
push
add
add
push
mov
add
and
addb
add
add
add
add
xchg
ret
pop
rolb
add
add
xchg
push
add
or
rolb
in
and
jp
jo
fldl
rolb
jmp
loopne
and
nop
add
or
add
nop
add
xor
lret
or
add
mov
add
or
inc
add
or
add
or
add
addb
pop
rolb
mov
add
add
or
loopne
test
push
jo
movsl
or
imul
add
inc
add
push
add
push
push
add
add
add
push
add
or
add
or
add
add
add
or
add
mov
dec
or
add
pusha
add
add
add
add
add
rolb
mov
and
pusha
pop
lock
add
add
add
rolb
jbe
addb
or
xchg
movups
add
inc
add
or
add
jo
ss
loopne
push
add
add
or
add
add
rolb
push
add
add
add
add
add
add
or
push
mov
movl
movl
mov
movw
mov
movw
push
popl
call
movw
push
popl
cmp
jne
push
popl
movb
ret
movw
push
mov
push
popl
push
orw
push
popl
mov
movb
pusha
mov
push
popl
call
push
popl
mov
orl
push
add
xorl
orl
andw
addl
push
popl
xorl
push
sub
push
popl
call
or
cmpl
jne
sbbl
call
addw
ret
push
popl
push
popl
jmp
mov
subl
xor
sub
xorw
mov
addw
shl
xorb
mov
add
andb
shl
subw
sbbb
mov
sbbb
cmp
jne
mov
push
popl
mov
push
popl
sub
sub
add
call
subb
push
popl
popa
push
popl
andw
pusha
push
popl
subb
call
push
popl
mov
push
popl
push
andl
xorl
push
popl
andb
addl
andb
push
movl
add
call
mov
push
sbbl
xorl
movw
orw
addl
orb
movw
pop
orl
xor
cmp
jne
push
popl
and
ret
sub
popa
andl
orl
call
movl
push
push
popl
xorl
push
popl
addl
subl
sbbw
push
sbbw
call
xorl
push
push
inc
mov
add
xchg
addb
mov
push
popl
push
popl
shl
mov
push
popl
push
andl
xor
sbbl
push
and
push
popl
call
push
popl
orl
push
push
popl
sub
mov
andb
push
xorl
jmp
mov
pop
push
popl
sbbb
mov
push
popl
push
andw
push
popl
push
push
popl
push
push
popl
mov
push
popl
push
popl
mov
and
rep
subl
sub
pop
movw
push
popl
pop
push
push
lea
shl
inc
lea
mov
xor
pop
push
sub
mov
sub
xchg
push
popl
movw
xor
sub
add
jmp
andb
mov
sub
orl
and
mov
addl
movw
sub
push
popl
subb
sub
movw
push
popl
mov
xor
push
popl
sub
xorw
or
jne
push
popl
push
popl
add
push
popl
jmp
xorb
mov
sbbb
push
popl
shr
orb
andw
shl
addw
push
popl
mov
xorw
add
push
popl
jmp
and
sub
andl
sub
mov
sub
add
sub
movl
cmp
jne
add
mov
push
popl
add
xorl
and
mov
sbbw
add
subb
movl
cmp
jne
push
popl
ret
push
popl
push
addb
xor
xor
xorb
subb
pushl
subl
push
popl
pop
and
lea
addw
or
push
popl
sbbb
mov
xor
mov
xorl
lods
orw
mov
add
subw
pop
movl
ret
subw
addb
push
push
popl
or
mov
subw
add
push
popl
push
push
popl
push
popl
push
push
popl
push
push
popl
push
push
popl
push
andw
mov
sub
mov
and
add
subw
pushl
sub
mov
xorl
push
popl
add
movw
add
sbbl
mov
push
popl
add
push
popl
push
popl
xor
sbbl
push
popl
lea
push
popl
mov
andl
add
xor
andl
mov
push
popl
movl
xor
subl
xorb
rol
addw
xor
push
popl
addw
inc
sbbw
cmpb
jne
movl
cmp
je
push
popl
inc
movl
push
popl
cmp
jb
movb
xor
mov
push
popl
or
add
movw
xor
movzwl
mov
mov
movl
and
add
add
mov
andw
add
subl
push
popl
pop
sub
addb
cmp
jbe
push
popl
cmp
jae
addw
add
pushl
subl
pushl
movb
push
push
popl
andb
xorl
andb
addl
sbbw
pushl
push
popl
subw
call
addb
xorw
call
xorb
orw
pop
orb
pop
andl
and
pop
add
pop
push
popl
subb
pop
orb
leave
push
popl
xorl
ret
push
popl
call
mov
cmp
popf
out
push
icebp
push
imul
mov
mov
test
imul
rcrb
dec
call
out
scas
push
cmp
fwait
pop
dec
jo
clc
mov
fbld
mov
fistps
xor
bound
ret
sbb
sbb
cmp
shrl
lcall
jle
push
lret
scas
inc
xchg
lock
out
sbbb
orl
mov
jno
xchg
and
mov
sub
fdiv
dec
mov
and
test
adcl
fisubl
and
popa
push
repnz
insb
sbb
aas
xchg
mov
xchg
pop
insl
in
pop
cwtl
and
push
cld
jns
adc
pop
and
jmp
inc
int3
inc
push
lret
cli
and
push
mov
xor
adc
push
jg
dec
sub
cli
mov
cmpb
and
inc
cwtl
and
add
adc
mov
xchg
aad
mov
iret
scas
dec
outsb
adc
pop
cmpl
cmpsb
in
mov
cltd
mov
push
xor
leave
outsl
or
lea
sbb
dec
and
sahf
sbb
lods
jp
xchg
jmp
dec
fidivrl
sbb
jo
mov
nop
clc
mov
inc
mov
mov
xchg
push
mov
bound
xchg
sub
stos
sub
int3
lret
jo
cwtl
and
ret
xchg
adc
movsb
cs
mov
cltd
mov
xchg
mov
icebp
cmp
lret
hlt
xor
cltd
test
cmp
inc
lahf
push
push
into
push
or
sub
rcrb
mov
push
xor
xor
and
rorb
sahf
stos
out
and
add
add
outsl
xor
and
insl
sbb
jmp
cmpsb
push
aad
nop
sub
ljmp
xorl
pop
mov
jecxz
push
mov
add
bound
inc
cmpsl
movsb
jle
lahf
pop
xchg
sbb
xor
in
dec
inc
cwtl
and
lahf
andl
out
pusha
jmp
xchg
inc
xor
jns
insb
xchg
bound
xchg
loope
mov
push
stos
add
rcrb
das
cmp
xchg
loope
outsb
and
lahf
xchg
daa
test
sahf
idivl
out
sbbb
orl
icebp
jb
jae
adc
sarb
sub
popa
mov
or
push
push
addr16
or
and
in
and
das
pop
aad
push
loopne
or
stos
popf
or
and
jno
inc
mov
mov
jnp
das
lods
pop
mov
int
inc
insb
inc
cwtl
and
xlat
dec
jnp
andl
call
mov
in
mov
xor
scas
out
push
pop
push
xchg
inc
cwtl
fwait
aam
mov
sub
popa
push
inc
aas
fildll
mov
xchg
out
fisubs
pop
jno
fidivrl
out
adc
lea
push
cmp
fcoml
leave
repnz
lret
jmp
shrl
cmp
xchg
pop
xlat
test
jge
insl
orl
shrl
push
notb
testb
dec
cli
inc
mov
jo
mov
ljmp
pop
sub
mov
dec
inc
aam
pop
int3
sub
mov
ds
bound
pop
dec
sub
push
int3
leave
cld
popa
scas
jl
dec
sahf
loop
dec
xchg
mov
cwtl
cmp
lcall
loop
fdivrs
call
stos
push
pop
std
sub
mov
pop
in
xchg
test
sahf
mov
stos
sbb
cmpb
out
mov
mov
jle
cs
pop
inc
jmp
les
mov
cld
cmc
stos
aas
add
adc
jnp
xchg
ljmp
jmp
fs
cwtl
add
clc
call
jbe
lret
jmp
dec
mov
loope
xchg
sub
dec
sbb
test
inc
jno
imul
pop
data16
and
and
icebp
jne
fwait
pop
sub
sbb
push
aad
pusha
inc
push
inc
test
lahf
xchg
das
cwtl
sbb
sahf
add
out
dec
inc
cwtl
and
lahf
andl
lock
push
inc
or
nop
int3
mov
inc
cwtl
mov
mov
push
call
insl
out
xchg
add
leave
and
arpl
fnsave
jae
xor
sti
test
mov
jmp
pop
sbbb
fisubl
cmp
or
call
out
loop
mov
shlb
ret
andb
fwait
mov
scas
insb
lahf
pop
sbb
ja
xchg
cmp
insl
clc
insl
sub
es
sub
and
pop
dec
mov
mov
movsl
sbb
mov
xchg
add
call
cwtl
and
xchg
and
push
xchg
test
dec
insl
loopne
mov
es
andl
in
fiadds
sub
and
lret
repnz
cli
jb
adc
das
mov
out
cmp
add
mov
pop
ret
ljmp
mov
inc
cld
repnz
sbb
test
sub
xor
sbb
and
mov
cltd
call
pop
data16
or
and
lods
jnp
pop
rcll
sbb
dec
xlat
xor
sbb
or
and
xchg
insb
adc
sbb
lahf
nop
push
pop
fmuls
test
xor
sub
daa
movsl
pop
imul
daa
rcrl
in
and
pop
data16
dec
mov
sahf
andl
mov
and
sub
aaa
bound
jle
imul
imul
arpl
arpl
pop
mov
loope
mov
jg
sbbb
mov
mov
test
lahf
sbb
ja
and
ret
shrl
imul
inc
aam
pop
lcall
fistps
inc
inc
es
test
pop
dec
pop
and
outsb
popa
loope
dec
andl
repnz
add
mov
pop
xor
sbb
insb
mov
xchg
lahf
inc
cwtl
js
ret
sub
outsl
xchg
movsb
xchg
pusha
mov
idivb
out
sbbb
test
cmc
test
out
shlb
adc
pusha
or
nop
jp
ds
int3
lcall
xlat
dec
stos
sub
std
out
xor
adc
dec
mov
mov
push
push
outsl
movsl
std
xlat
sub
out
mov
rcrb
outsb
and
das
or
sbb
mov
inc
lock
inc
int3
movsl
loope
inc
subl
les
out
mov
fbld
int3
mov
imul
roll
test
in
cmpb
cmp
dec
cmpl
cli
scas
lret
inc
xchg
fsub
cmpl
repnz
or
out
rorb
jg
jno
leave
jmp
push
dec
out
mov
test
and
js
nop
je
pop
dec
mov
in
dec
mov
sub
jg
ret
pop
and
cmc
aas
cmpb
and
test
hlt
sbb
sub
sbb
popa
cmp
cmpsl
ss
xchg
fs
jge
cmp
push
fsub
cmp
pusha
and
pop
xorl
lcall
bound
mov
pop
icebp
loopne
pop
data16
pop
xchg
les
jl
jg
push
and
shll
jle
and
inc
je
fnstenv
ja
fsubp
xor
sub
nop
sub
rorl
inc
insb
sbb
inc
dec
mov
sti
loop
adc
xor
push
sbb
mov
sub
out
aas
adc
orl
and
rcl
add
das
insl
jmp
cwtl
and
jle,pt
test
mov
inc
cwtl
jne
mov
aam
push
into
or
sbb
jne
pusha
push
rcll
lcall
bound
mov
imul
ss
mov
int
andb
mov
mov
sti
jns
add
scas
or
inc
mov
lcall
sti
xchg
sbb
mov
push
into
not
mov
mov
dec
push
sbb
and
rorb
sub
pop
and
and
stc
pop
xchg
jnp
icebp
out
lretw
mov
xchg
mov
or
int
roll
pop
mov
shl
mov
arpl
or
xchg
test
sub
push
fs
dec
lds
and
dec
into
xor
fmuls
mov
add
out
daa
and
insb
aaa
pop
or
push
or
inc
int3
mov
add
stos
lock
fistps
mov
jl
js
inc
cwtl
jbe
sub
sbb
xor
xor
test
adc
add
sbb
icebp
fbld
lock
push
cmpsb
pop
inc
arpl
xchg
mov
aas
sti
sbb
lods
push
test
jne
ret
out
or
popf
jg
lahf
scas
mov
jns
sbb
mov
out
ja
pop
lcall
pop
push
in
nop
or
jno
bound
ja
shlb
mov
adc
pop
sbb
out
add
xor
inc
movsl
flds
jo
scas
mov
sbb
test
ret
dec
cwtl
and
mov
scas
xchg
cmp
mov
sub
and
out
xor
and
jbe
call
pop
cwtd
out
mov
mov
insb
add
dec
pop
pop
mov
push
dec
ret
or
inc
sub
xlat
ret
pop
daa
xchg
outsl
dec
or
clc
jp
mov
lcall
cs
mov
adc
lret
iret
mov
pop
lds
in
nop
jno
pop
pushw
in
or
lret
mov
scas
iret
stc
out
pushaw
push
dec
fstpl
jnp
xor
push
cwtl
pop
or
push
lret
or
jg
loopne
pop
data16
mov
mov
out
mov
jb
lcall
fcompl
dec
repnz
shlb
push
shrb
adc
test
fstpl
imul
daa
fldcw
add
lock
xchg
nop
jge
hlt
inc
jmp
mov
call
dec
rcrl
cwtl
and
cli
in
fwait
test
pop
dec
or
and
mov
daa
push
sub
mov
bound
sbb
mov
orb
insb
lahf
scas
xchg
add
movsl
xchg
lcall
sbb
cmp
mov
ficoml
mov
fidivs
dec
mov
fcompl
mov
adc
inc
sub
outsl
outsl
cmp
push
js
xor
ja
jge
das
ss
loope
jae
dec
push
data16
test
ret
pop
and
rcrl
jbe
movsb
cs
out
and
mov
jae
mov
pop
or
into
cmp
and
sbb
push
negl
into
inc
sub
push
js
mov
push
imul
dec
xchg
ja
mov
and
sub
mov
fadd
sub
loope
inc
or
pop
mov
sub
jge
ret
and
stos
ja
call
push
outsb
ss
sub
or
inc
icebp
cld
rcll
add
ja
jge
push
adc
ret
movsl
and
test
mov
cmc
jnp
rcrl
pop
xchg
movsb
jge,pn
call
push
mov
or
mov
pop
icebp
or
mov
cmp
mov
add
out
jmp
mov
movl
sahf
inc
les
pop
xor
pop
pop
inc
jmp
movsl
test
xchg
insb
jae
add
mov
push
inc
ljmp
cwtl
loope
dec
andl
lret
mov
xchg
add
lock
xchg
dec
cltd
movsb
xcrypt-ctr
cmpsl
pop
insl
mov
mov
mov
enter
mov
dec
cmp
lea
add
cltd
mov
or
stos
mov
jmp
xchg
cmp
dec
jle
test
inc
add
fcomip
jae
ret
addl
mov
jo
push
lret
push
faddl
adc
push
cmpl
int
mov
push
mov
xchg
into
adc
sub
adc
mov
push
inc
in
mov
mov
sahf
and
sub
jge
outsb
outsb
loope
inc
andl
inc
jle
xor
cmc
push
mov
or
cmpsl
pop
jne
out
bound
mov
lcall
or
mov
pmulhw
fldenv
adc
xor
and
and
jle
inc
fistps
pop
inc
xor
inc
push
cmc
fbstp
cld
mov
jae
push
cmpsl
pop
loopne
sub
aad
jo
mov
fwait
or
push
inc
in
pop
in
lahf
inc
ret
dec
stos
das
divb
loopne
pop
add
cwtl
addr16
jle
mov
stos
icebp
loopne
pop
push
cmpsl
sbb
call
jl
jg
mov
push
iret
pusha
push
stos
pop
inc
cmp
mov
ss
cli
inc
test
lock
inc
gs
cs
lcall
mov
ljmp
outsl
mov
mov
shlb
fdiv
adc
mov
jg
in
pavgw
sub
or
stos
fadds
cmc
sti
cmp
fdivs
cmc
int
push
and
adc
push
mov
xor
push
aam
xchg
sbb
andb
iret
or
mov
cmp
xchg
mov
push
xchg
mov
das
and
xchg
or
mov
fisubrl
pop
jp
fimull
pop
mov
inc
test
sub
out
fwait
add
insb
lahf
enter
fiadds
xor
push
fidivrl
out
xor
sbb
fcoml
mov
fildll
in
jbe
je
mov
je
icebp
jle
fwait
pop
sub
push
mov
jle
mov
fwait
or
stos
xlat
lcall
pop
push
sub
pop
xchg
into
sub
mov
mov
cltd
mov
sub
lea
xor
pop
popa
in
ljmp
shlb
mov
push
fcomps
push
fsubrl
pop
add
or
xchg
mov
pop
outsl
je
fstpl
xchg
sbb
mov
dec
cmc
sti
dec
lahf
clc
cmp
push
and
das
lock
xchg
bound
sbb
out
sbb
cltd
lods
leave
repnz
rcrl
scas
lods
mov
or
cmp
or
mov
fcomps
adc
out
ret
lcall
pop
out
rolb
into
cs
cmpsl
jge
vpsubsw
sub
aaa
push
imul
cmpsl
jae
xchg
shl
add
mov
adc
or
test
jl
mov
or
mov
aas
adc
dec
cltd
repz
mov
orl
decl
ja
lret
mov
mov
roll
cmpl
mov
or
and
pop
lret
in
rorb
fwait
cmpsl
fidivs
jg
or
dec
jle
mov
lahf
fisubs
out
mov
data16
or
sbb
ds
mov
mov
push
nop
cmp
mov
pop
lahf
hlt
fldt
mov
cltd
mov
mov
mov
in
or
sbbb
mov
inc
mov
stc
mov
inc
icebp
jle
fwait
pop
push
pop
sbb
lods
fcompl
jle
mov
js
test
lahf
roll
cmp
push
fmull
aas
mov
sub
rolb
mov
shll
sbb
sbb
loop
ds
imul
push
les
mov
imul
and
jb
xor
pop
jp
bnd
lahf
pop
mov
cmp
jp
mov
cwtl
lahf
out
push
mov
push
inc
addr16
test
inc
andl
xor
and
subl
pop
lret
inc
pop
pop
push
adc
movsb
test
sbb
mov
test
push
lret
sti
out
sbbl
arpl
sbb
cmp
fdivrl
adc
call
lret
and
add
rcrb
jns
jg
fwait
lock
or
and
inc
aam
cmp
sub
push
icebp
add
adc
icebp
mov
popa
push
inc
add
inc
out
xchg
cmp
insl
into
mov
loope
inc
andl
gs
pop
dec
sahf
sub
popf
xchg
jmp
pop
fidivrl
stc
and
addb
into
pop
and
xchg
mov
mov
cmp
push
sub
mov
in
stos
cmp
lods
ret
addr16
cwtl
and
push
gs
test
dec
jg
or
add
or
and
mov
push
lcall
xor
loop
movb
popf
iret
fstl
xor
int
mov
inc
cwtl
imul
stos
jns
jo
inc
adc
pop
es
jno
in
cwtl
add
insb
scas
mov
hlt
loopne
adc
and
mov
add
mov
std
rcrl
xchg
out
push
loop
mov
pop
in
ljmp
movsb
aaa
adc
push
pop
fistps
push
pop
popf
outsb
fildl
mov
inc
test
test
cmc
sbb
mov
push
sbb
popa
sub
ret
lods
ror
pop
lcall
inc
js
cwtl
and
mov
pop
xchg
movsb
cs
xor
xchg
jecxz
jp
fwait
repz
ret
pop
test
popa
pop
or
pop
cmp
jo
pop
lcall
pop
retw
adc
lea
cwtl
ja
out
sbbb
orl
mov
jbe
lret
jmp
shl
insb
add
cmove
mov
cmp
dec
push
int
sub
pop
out
aam
dec
fcompl
addr16
popa
xchg
inc
loope
cmp
test
mov
xchg
sbb
push
out
std
dec
inc
cwtl
and
sub
push
cwtl
bound
daa
testl
imul
or
push
pop
fbstp
mov
mov
rcrb
loop
inc
cwtl
and
mov
fs
movsb
cs
out
in
sbb
add
repz
mov
mov
mov
inc
cwtl
addr16
mov
inc
mov
mov
cmpsb
adc
lock
push
dec
adc
mov
jns
imul
xchg
movsb
pop
lds
inc
loopne
or
push
mov
lcall
xorl
aas
mov
cltd
xchg
insl
sbb
loopne
xor
rcl
aas
ljmp
xor
lods
mov
cli
lds
sub
clc
mov
mov
lods
inc
add
pop
pop
xchg
inc
cwtl
jno
and
or
push
repnz
sub
cmp
cltd
call
outsl
inc
out
mov
push
addr16
xchg
stos
sub
jae
cmpsl
loop
fdivrs
popa
fmuls
or
xlat
test
int3
lods
test
ja
sub
adc
loop
out
mov
push
mov
jns
mov
ret
cmc
fbld
rcl
push
movsb
pop
inc
jg
xchg
cmp
outsb
pop
lcall
push
fwait
or
inc
jg
nop
dec
int
data16
push
sub
in
xchg
jg
fwait
cld
or
push
jg
cmp
push
push
test
jo
sub
dec
lahf
cmpb
lahf
scas
out
movsl
fsubl
rolb
repnz
andl
push
push
icebp
or
inc
andl
inc
jp
xor
cmpsl
mov
xchg
sbb
jmp
leave
dec
inc
cwtl
and
push
icebp
or
adcb
inc
push
pop
mov
sub
clc
in
cwtl
andl
lahf
pop
and
pop
mov
push
inc
fcomp
sub
fsubs
inc
cltd
ljmp
jle
or
movsl
inc
pusha
xchg
jg
dec
push
push
cmpsl
jecxz
bndstx
push
lahf
inc
lds
push
sub
nop
sbb
ret
mov
insl
dec
inc
cwtl
and
cwtl
andl
lock
pusha
push
inc
addb
lret
inc
cltd
add
sub
enter
fisttps
cmp
fidivrl
out
test
add
mov
test
icebp
fisttps
cwtl
and
xchg
dec
or
arpl
sub
sbb
xchg
cltd
xor
mov
or
mov
mov
xchg
int3
scas
adc
pop
jmp
insl
sbb
pop
cmp
adc
shlb
pop
insl
jg
dec
nop
je
pop
dec
add
xor
xor
outsl
sbb
or
push
std
popa
stos
dec
xchg
xchg
cwtl
insb
adc
aas
jg
sbb
outsb
inc
cwtl
and
sub
mov
pop
mov
mov
mov
andl
out
scas
mov
sub
pop
sub
insl
mov
xchg
inc
pushf
inc
add
xchg
jge
cwtl
ja
imul
test
lahf
dec
loop
push
sbb
push
mov
push
dec
and
xchg
mov
lret
es
jo
inc
pop
inc
cmpb
mov
jns
adc
push
sub
loopne
inc
les
sahf
stos
dec
xchg
sbb
test
and
dec
je
xchg
inc
out
and
and
add
mov
inc
sbbl
aas
dec
insl
fidivrl
loop
shll
xchg
movsl
adc
pop
and
insb
imulb
dec
xchg
inc
mov
jns,pt
bound
jp
lahf
cs
xor
cltd
sub
das
push
sbb
mov
es
xchg
ljmp
pop
sti
lahf
xchg
rcll
mov
xchg
mov
adc
sbb
or
and
pusha
lds
neg
push
or
add
mov
jns
idivb
les
pop
shll
xchg
jb
pop
data16
pop
xchg
inc
dec
push
outsl
xchg
jmp
sbb
inc
or
test
neg
dec
inc
cwtl
and
fsts
fldt
add
pop
stos
xchg
mov
test
push
push
pop
adc
cmp
jbe
mov
jg
inc
mov
data16
jmp
lret
test
out
jg
fstpt
inc
lahf
int
pusha
mov
pop
sbb
jne
nop
hlt
push
mov
pop
and
ljmp
mov
push
inc
cmpsl
iret
roll
add
push
adc
leave
repnz
pop
cmc
mov
test
test
push
lret
fists
negb
rcrb
sbb
lods
imul
outsl
shll
outsb
lods
pop
xchg
fs
jge
outsl
pusha
push
cmp
pushl
dec
cwtl
and
roll
push
arpl
pop
mov
xor
incl
push
test
paddusb
sbb
lret
test
addr16
add
or
or
mov
dec
or
int3
imul
out
data16
mov
xchg
push
fwait
scas
cmp
outsl
mov
cmp
cmc
lods
mov
std
daa
sub
jne
xchg
jno
mov
jge
jbe
adc
and
aas
mov
mov
adc
lcall
xchg
add
adcb
aad
mov
mov
outsl
jecxz
mov
mov
push
inc
jns
xchg
ror
mov
mov
jns
jns
adc
sbb
mov
dec
inc
pushf
inc
add
divb
push
pop
int3
pop
movsb
add
sbb
shlb
fdivl
cmc
mov
leave
mov
inc
sbb
inc
push
lcall
push
push
outsl
testb
sbb
sbb
jae
icebp
mov
stos
std
js
mov
rcr
icebp
xchg
loopne
pop
cmp
sbb
sbb
daa
push
jo
mov
std
xchg
fidivrs
adc
sub
inc
add
lds
sub
test
fisttpl
jo
fidivrl
sti
push
out
bound
les
and
clc
ret
addr16
or
add
pop
adc
inc
lea
mov
add
fistl
jmp
lret
enter
mov
out
pop
incb
fisubl
sbb
cli
jmp
fsts
repz
lods
outsl
jg
sbb
shl
insl
xchg
jmp
fildll
cmp
cmp
jecxz
in
push
mov
cli
mov
into
mov
jge
test
lahf
shll
mov
jb
je
xchg
and
mov
mov
mov
jge
sbb
inc
lcall
imul
fistl
xchg
fcoms
jg
mov
rcll
jo
cwtl
and
add
fwait
mov
scas
or
ret
pop
daa
xchg
jno
mov
pop
repnz
insl
jmp
cwtl
and
push
xor
lcall
jle
mov
push
inc
test
mov
add
clc
cmc
test
cmpsl
dec
clc
enter
push
lret
cltd
dec
inc
cwtl
and
push
icebp
or
ret
pop
and
cmp
xorl
push
in
jbe
je
shll
shl
or
jne
mov
mov
xchg
repnz
pop
mov
xchg
xchg
out
lods
cmp
xchg
mov
push
faddl
loopne
pop
mov
mov
sbbl
mov
mov
test
jo
stos
cmp
mov
push
push
mov
lcall
or
xchg
mov
clc
shl
decb
mov
xlat
jp
jg
dec
clc
leave
pushf
cmp
test
sub
push
add
les
pop
inc
cwtl
and
sarl
insb
lahf
shll
rorb
insb
adc
test
cli
mov
scas
xlat
mov
bound
or
fmuls
popa
and
andl
popa
imul
push
or
movsb
loopne
mov
out
in
adc
jecxz
push
sbb
jmp
and
dec
pop
cmp
sbb
mov
xchg
lock
fisubl
xchg
dec
fucompp
pop
pop
mov
xlat
je
jle
cmpsl
outsl
sub
or
lock
cmpb
in
das
pop
mov
loope
ficoms
bound
inc
fstpl
stc
out
jg
fcmovnu
orl
and
aam
add
fdivrs
inc
cmp
mov
jnp
and
push
call
xor
imul
mov
xor
dec
adc
imul
jle
push
xor
mov
test
inc
dec
lock
push
pop
repz
mov
bound
xchg
cmp
movlps
pushf
fwait
popf
mov
inc
lahf
and
pop
orl
iret
addr16
xchg
dec
out
push
std
lods
call
jle
push
mov
inc
loopne
or
add
sub
into
sbb
andnps
insl
in
out
sbb
push
sbb
lcall
sub
and
jl
jns
inc
cwtl
and
jp
icebp
mov
fwait
pop
dec
iret
sbb
stos
mov
mov
inc
mov
scas
out
mov
push
dec
mov
inc
cwtl
inc
xchg
jl
dec
imul
fwait
clc
out
pusha
pop
push
inc
sbbl
inc
cwtl
lahf
sti
imul
mov
inc
cwtl
and
out
dec
add
mov
or
mov
test
movsb
out
sahf
jg
sub
int3
sub
insb
insb
rcll
mov
int3
push
popa
pop
in
pop
daa
xchg
jo
mov
sub
mov
sub
rcrl
xchg
fisttpll
sahf
jno
nop
mov
loope
iret
sub
shlb
popa
cmp
cltd
mov
addr16
cli
sahf
sahf
push
pusha
std
cmc
filds
fwait
sbb
shl
insl
xchg
in
fucomp
mov
inc
fidivrl
sbb
imul
and
nop
cld
mov
sub
fwait
out
subl
fucomp
dec
pop
mov
push
inc
inc
mov
pop
push
popf
cmp
fwait
adcb
insb
lahf
pop
aaa
pushf
in
jne
xchg
das
cmp
xchg
loope
inc
and
xchg
movsl
pushf
test
lds
sub
aaa
pop
and
outsb
cwtl
and
cmp
xchg
inc
cwtl
mov
pop
cwtl
cwtl
insb
sub
int
push
lea
shr
bound
insl
xor
and
mov
out
leave
repnz
leave
and
fadds
data16
push
sub
xchg
fldcw
call
sbb
shr
cmp
in
adc
repz
push
add
jg
cli
jmp
test
in
jbe
mov
test
imulb
xchg
xchg
sbb
cwtl
cmpsl
cld
cmpsb
aaa
sahf
push
pusha
xor
adc
pop
clc
cmp
mov
cltd
nop
dec
mov
dec
cmc
insb
fwait
inc
int3
xchg
lcall
and
cli
mov
arpl
call
dec
mov
push
lahf
push
lahf
aas
xchg
std
xchg
or
test
jns
add
jb
daa
inc
adc
mov
sub
mov
push
mov
sub
xchg
sub
lret
cs
dec
lods
add
andb
push
push
lret
sub
shlb
fsubr
adc
adc
mov
sbb
mov
jge
xchg
add
xchg
mov
mov
addl
sub
stos
xchg
out
adc
add
inc
cwtl
and
dec
or
xchg
pop
mov
lcall
cmpl
in
pop
scas
mov
cltd
xchg
mov
adc
sbb
jp
faddl
mov
out
add
add
icebp
mov
pop
popa
ret
jae
daa
adc
push
xchg
filds
and
insl
mov
and
ret
inc
mov
sbb
pop
enter
xchg
idivb
mov
mov
jne
ret
addr16
push
cmp
sbb
jnp
mov
jl
dec
sbb
sbb
xlat
jp
andl
jmp
iret
shl
cmc
jno
dec
mov
test
addr16
cwtl
jno
dec
mov
rclb
adc
das
mov
lcall
cmp
insl
mov
pop
out
dec
jg
xchg
jbe
mov
cltd
mov
in
mov
loopne
xchg
or
xor
inc
cmp
jnp
dec
lcall
fs
adc
inc
cld
stc
in
mov
jbe
jp
adc
imul
mov
lahf
inc
ret
push
sahf
loop
dec
xchg
pop
mov
lret
add
jbe
mov
nop
inc
pop
mov
mov
test
sub
xor
sbb
ror
pop
lcall
add
cmp
push
jne
pop
adc
or
mov
lcall
rcl
not
into
sub
mov
mov
icebp
aas
mov
xchg
inc
sbb
iret
das
lods
sub
out
fwait
and
and
push
xchg
mov
push
ds
ret
int
adc
ret
fcompl
out
test
pop
add
loop
fadds
or
insl
mov
sub
mov
imulb
mov
sbb
movb
lret
mov
add
cld
lret
rolb
mov
sub
iret
push
push
repnz
rcrb
loop
push
cmpsl
lfs
lahf
inc
rcll
mov
ss
lods
xchg
xchg
ds
and
in
rcll
adc
roll
ss
pop
sub
daa
xchg
cmp
pop
cmp
xchg
test
xchg
sbb
pushf
or
roll
cs
out
aaa
sub
inc
fisubs
inc
addr16
cwtl
and
pop
test
stc
fs
xchg
adc
xchg
and
sub
lock
adc
xchg
ret
loopne
push
mov
sub
sbb
push
int
pop
jo
stc
out
xchg
sbb
test
xlat
aam
faddl
in
pop
sbbb
cwtl
stos
sahf
loope
aad
xchg
cltd
rolb
shl
push
lea
out
mov
arpl
and
int
inc
clc
shll
addr16
or
dec
push
xchg
xchg
jecxz
or
mov
sarl
ja
inc
sub
inc
and
mov
cltd
nop
dec
fimull
push
adc
xor
jmp
adc
mov
dec
je
out
pop
das
adc
xchg
xchg
pushf
xlat
mov
push
adc
sub
push
mov
pushf
inc
add
testb
cwtl
and
xor
xor
xchg
inc
cwtl
xorb
adc
lods
jle
outsl
test
mov
mov
adc
cmp
mov
sbb
push
jle
ss
jo
out
mov
out
insb
lahf
loope
push
out
jbe
loope
das
xor
cmp
and
loope
daa
test
lret
in
sub
add
push
int3
lret
dec
inc
cwtl
and
push
testb
iret
xorb
pushf
or
dec
stos
aad
insb
xchg
fwait
es
dec
inc
cwtl
and
pop
repnz
push
xchg
in
sub
mov
mov
pop
imul
jnp
pop
ret
enter
test
pop
insb
test
push
cwtl
sbb
ret
scas
cmc
xchg
aad
inc
cmpl
ja
sbb
movsl
mov
fbld
xchg
push
in
loopne
or
and
mov
cmp
pop
lret
divb
ja
fwait
pop
ds
sbb
jge
repz
jl
jg
bound
xchg
call
das
push
mov
loope
mov
inc
stos
test
lret
test
and
shlb
adc
push
cmpsb
fists
adc
push
cwtl
add
insb
lahf
enter
inc
scas
test
add
lahf
push
inc
insl
inc
cwtl
and
dec
lock
sub
mov
inc
mov
scas
dec
jns
and
rep
clc
nop
jno
pop
data16
or
pop
pop
mov
lods
pushf
xchg
dec
mov
gs
pop
push
jge
scas
push
repnz
jo
fwait
pop
push
int
add
rorb
inc
mov
push
mov
pop
jns
hlt
sbb
imul
jecxz
lret
pop
xchg
fs
jge
das
mov
mov
jge,pt
bound
jle
sub
inc
rorb
int3
leave
cld
mov
sub
mov
push
sub
dec
lea
movsl
sub
xchg
sbb
movsb
dec
push
push
push
inc
jmp
das
cmp
aas
addr16
shrb
stos
cwtl
mov
insb
mov
cmc
shrb
lret
or
mov
cmp
push
stos
and
jo,pn
adc
addr16
bound
and
int3
jecxz
insb
mov
adc
jle
jnp
jns
ja
outsl
pop
xchg
test
popf
shll
lahf
stos
inc
shrl
popf
call
pop
mov
popa
xchg
std
push
leave
mov
iret
push
shll
fdivl
and
and
enter
dec
sbb
mov
xor
sbb
es
or
cwtl
xchg
data16
xchg
loop
push
sbb
das
dec
dec
mov
es
lcall
gs
jno
pushw
xor
insb
lahf
mov
jno
adc
lock
push
cmpsl
adc
daa
inc
andl
int3
sahf
aas
sarb
sub
mov
mov
out
mov
bound
ss
pop
add
xchg
adc
pop
inc
lea
test
dec
insl
mov
call
bound
inc
andl
in
filds
push
nop
int3
popa
outsb
xchg
and
mov
jp
movsb
xorl
mov
lahf
pop
rolb
push
int3
ja
pop
cltd
xchg
lret
repnz
cwtl
out
sbb
popf
jno
cmp
jo
xor
movsl
outsb
or
xchg
xor
and
sub
and
pop
xchg
sbb
es
add
movsl
imul
inc
lcall
bound
mov
cwtl
and
dec
stos
pusha
add
sbb
bound
mov
cwtl
xchg
mov
or
dec
dec
filds
dec
fmull
push
add
fwait
push
movsb
cmpsb
cltd
mov
addb
repz
inc
add
enter
push
xor
cmp
gs
cwtl
xlat
aaa
hlt
clc
stc
push
push
icebp
or
mov
movsl
mov
test
stc
pop
fmull
lock
icebp
sbb
imul
sbb
mov
fs
jns
mov
sub
dec
sahf
loop
dec
xchg
movl
jbe
je
xchg
sub
mov
pop
sbb
mov
popa
push
sub
dec
repnz
mov
pop
pop
cltd
mov
repnz
cmp
ja
dec
loope
cwtl
lcall
scas
jle
xor
xchg
xchg
adc
inc
dec
lret
loopne
and
jp
enter
sub
aad
pop
xchg
out
dec
xchg
pcmpeqb
push
dec
lock
test
inc
xchg
push
cmp
jmp
movsb
mov
fstpt
ret
negb
sbb
popa
sub
int
rcrl
idivl
mov
fwait
xchg
in
lock
ret
imul
popa
aas
dec
ret
jb
lea
fs
jns
ret
bound
jno
fidivrl
out
in
xchg
divb
nop
std
mov
cli
es
aaa
add
push
add
or
add
add
lods
insb
lahf
pop
fmull
mov
and
popf
and
push
icebp
or
sub
mov
dec
mov
inc
aam
cwtl
pop
pop
mov
push
sbb
popa
ss
push
pop
push
lock
aad
pop
inc
jmp
inc
fwait
scas
andb
insb
lahf
bound
testl
xor
pop
and
mov
nop
int3
cmc
inc
jbe
cwtl
and
rcrl
pop
xchg
movsb
jne,pn
out
pop
aas
sti
test
xchg
out
mov
mov
nop
shll
mov
andb
int3
idivl
ds
add
sub
cltd
and
mull
sub
jne
ret
mov
outsl
xchg
movsb
cs
sahf
inc
aaa
mov
stos
xchg
mov
imul
sbb
jo
push
jle
pop
push
lock
ret
xacquire
dec
or
test
mov
imul
cmp
jno
cmp
sub
iret
lea
mov
xchg
jmp
adc
fisubrl
mov
xor
in
push
movsl
cmpsb
and
and
push
push
push
and
xor
mov
enter
orl
in
clc
jb
lods
and
pop
adc
cltd
std
sti
fistpll
sub
or
xchg
test
aam
sub
inc
mov
in
rorb
jb
push
clc
jp
push
mov
loopne
loop
jmp
jp
and
jne
addr16
dec
rep
subb
insb
lahf
cmpsl
nop
and
push
dec
mov
inc
test
mov
scas
push
cmpsb
cmp
cs
inc
insb
test
and
inc
call
das
inc
mov
loope
xchg
and
push
test
inc
aam
stos
aaa
neg
arpl
sbb
push
push
test
inc
xlat
js
jne
add
testl
xchg
ret
pop
es
jno
add
xchg
pop
or
pop
pop
mov
cmp
pop
lock
ljmp
cli
cltd
sub
mov
insb
lahf
mov
mov
std
xor
faddl
fisubrs
das
adc
ret
xchg
push
pop
xor
fadd
adc
jge
fs
bound
xor
ret
push
lret
in
out
mov
clc
mov
sbb
cltd
mov
cmp
mov
lods
mov
sbb
cld
loop
jbe
push
and
jo
sub
xor
sbb
push
lret
xchg
push
shll
or
lahf
mov
rcll
outsb
inc
cwtl
and
xchg
bound
stos
jg
outsl
add
ljmp
std
popa
cmp
pop
or
mov
jns
adc
or
mov
or
inc
add
imul
jecxz
call
dec
xchg
js
mov
dec
cmp
jl
push
push
mov
push
sbb
test
and
mov
cltd
mov
mov
mov
xchg
dec
dec
ret
mov
out
mov
jg
fstps
lock
ljmp
aas
xorl
mov
jb
icebp
jns
mov
mov
push
ds
shll
mov
push
or
int3
leave
cld
daa
sub
jne
in
pushf
insl
rorb
pop
jge
or
jae
push
repnz
sub
js
aas
jnp
xor
mov
xchg
push
imull
add
push
cltd
cmp
cli
ret
cwtl
and
mov
jmp
sub
subb
cltd
andl
lock
push
dec
mov
js
stc
sbb
in
dec
pop
cwtl
and
decl
pop
jp
adc
adc
mov
incl
inc
pop
int3
fisubl
cmpsl
insb
lahf
jmp
les
test
xor
push
push
mov
mov
jecxz,pt
pushw
or
push
xor
add
inc
mov
adc
cmp
cmp
fmuls
ret
and
and
xchg
cmp
jg
mov
imul
jl
pop
fs
jns
das
test
mov
mov
imul
jne
mov
jnp
cmpl
xor
mov
cmp
dec
and
sbb
test
xchg
jge
call
out
or
push
dec
add
enter
mov
pop
mov
or
inc
js
popf
dec
daa
jb
movsl
jmp
pop
mov
lcall
cmp
and
lock
cmp
mov
cmc
divl
scas
test
jg
pop
or
mov
inc
ds
out
lods
xchg
lcall
add
divb
insb
lahf
shr
sub
lret
test
push
cmpsl
loop
fadds
subb
pop
fists
pop
cmpsl
mov
inc
jge
cltd
pop
adc
adc
sbb
and
mov
xchg
fmuls
cmp
sbb
push
mov
test
and
mov
lahf
pop
xor
push
push
mov
sub
mov
jb
popa
pop
icebp
repz
mov
or
rcll
outsb
inc
cwtl
and
stos
jge
jno
dec
int3
into
sbb
lods
push
movsb
shll
pop
mov
and
dec
out
mov
daa
clc
mov
shlb
jno
pop
xorw
mov
arpl
insl
inc
mov
pop
dec
lcall
stos
cmp
loopne
popf
sahf
rcrl
lds
decb
enter
cs
sbb
pop
mov
js
mov
jle
jge
mov
cltd
mov
jmp
movsb
mov
mov
dec
in
xlat
sbb
push
sbb
xchg
xchg
pusha
mov
bound
inc
mov
pop
retw
pusha
xor
ret
push
xchg
movsb
outsb
pop
out
sub
dec
mov
pop
imul
cmpsb
dec
sbb
test
lahf
mov
cmp
lods
pusha
cli
xchg
inc
cwtl
stc
adc
push
jb
add
gs
xlat
pushf
mov
xor
sub
and
stos
cmp
pushf
sbb
stos
ret
fsubl
dec
push
push
mov
xor
imul
fcoml
adc
mov
sbb
ja
or
jbe
jmp
add
outsb
cld
mov
fstps
xchg
leave
xchg
lcall
xor
bound
inc
sbb
sub
lahf
pop
xchg
jmp
daa
fidivrl
loope
out
jo
jno
mov
mov
clc
mov
or
lret
aaa
aaa
or
push
push
fildll
inc
nop
sbb
add
sbb
mov
inc
cwtl
fidivrl
js
and
es
out
jo
pop
data16
xorl
movsb
and
adc
push
mov
lahf
ds
icebp
rcrb
inc
push
inc
test
lahf
scas
out
push
push
or
inc
cwtl
fisubrs
push
cmp
cwtl
xorl
pop
cmpsl
jmp
icebp
adc
push
outsb
sub
mov
sbb
je
lds
sahf
inc
cwtl
ja
sub
clc
aaa
and
push
aaa
fbld
loope
pop
outsb
fildl
test
lahf
loope
inc
cmpsl
movsl
ljmp
mov
jns
sbb
sub
dec
xchg
pop
inc
jmp
and
mov
xlat
stc
cmpl
test
dec
jne
adc
fbld
mov
and
rclb
xor
ja
aad
inc
test
pop
xchg
daa
mov
insl
test
lahf
loope
inc
cmpsl
movsl
in
insb
lahf
pop
mov
push
mov
bound
subb
xorb
sub
imul
sti
in
pushf
mov
loope
or
mov
xchg
jne
outsb
inc
mov
push
cmp
and
push
sahf
leave
dec
std
aas
jl
sub
mov
jecxz
jns
adc
das
and
bound
inc
push
lret
sub
mov
int
push
mov
loope
pop
xchg
and
pop
stos
add
rclb
das
daa
mov
loope
call
dec
push
stos
jo
mov
aas
push
sub
loop
scas
xchg
add
test
cwtl
push
jnp
add
fadds
push
pop
loop
mov
out
mov
sub
and
andl
push
pop
xlat
jns
jnp
sub
pop
xor
sbb
pop
pop
ljmp
add
ljmp
aaa
fmuls
or
test
xchg
mov
push
repnz
mov
popa
push
inc
imul
das
xchg
sbb
test
inc
mov
out
loopne
push
pop
or
mov
mov
cmp
xlat
dec
ficomps
dec
add
outsb
push
pop
sub
sub
fldcw
pop
sub
shrl
mov
fisubs
and
sub
jg
outsb
arpl
sub
and
cmpb
divb
jns
adc
sub
sbb
inc
lods
inc
add
rcrb
mov
or
and
jle
adc
push
mov
cmp
imul
push
dec
mov
jns
aas
jnp
xor
mov
sti
out
sbbb
test
cld
dec
test
aam
flds
jp
pop
push
and
sub
fimull
mov
cltd
gs
mov
out
rorb
add
xchg
mov
cmp
int3
testb
dec
mul
jne
inc
push
cmpsl
loop
fadds
mov
jle
mov
or
jge
rorl
xlat
dec
mov
add
adcb
xchg
add
push
idivl
nop
movsb
sarl
lahf
divb
xor
mov
popa
and
leave
jmp
mov
pop
mov
lods
sbb
adc
jle
adcb
mov
xchg
fmuls
jecxz
in
in
lcall
adc
aas
jns
clc
ja
push
mov
loop
fadds
xlat
shrb
pop
mov
and
cmpsl
ret
mov
cwtl
push
mov
mov
push
into
mov
fcoms
or
sub
dec
out
jp
das
test
mov
jecxz
mov
mov
fisubrl
sbb
popa
xchg
cmp
lds
js
xor
xchg
cld
adc
sarb
sti
movsl
fcomps
pop
test
or
inc
mov
arpl
rcll
push
cwtl
and
push
mov
ds
mov
or
out
lahf
xchg
xchg
jmp
shl
sub
imul
repz
imul
mov
push
pop
test
sti
cmp
push
sbb
mov
fucom
scas
inc
xlat
jne
jnp
sub
sub
loope
jae
pop
mov
popf
ret
enter
fnstsw
jno
fidivrl
in
in
pushf
jge
push
into
and
nop
cld
mov
rcl
fildll
in
jbe
je
scas
jmp
push
iret
mov
sub
xchg
das
mov
lcall
repz
into
mov
mov
outsb
mov
jl
push
sbb
sbb
and
push
jp
pusha
int
out
aas
adc
out
aad
call
xchg
jbe
in
das
pop
mov
loope
inc
and
dec
or
lret
or
xchg
mov
pop
or
push
subl
les
xchg
outsb
xchg
lahf
fwait
xchg
in
pop
lods
insb
rcrl
insb
lahf
mov
ss
cli
xchg
xchg
shll
mov
rclb
adc
shll
js
push
sub
adc
mov
out
jmp
xchg
xor
and
inc
in
mov
loope
add
leave
in
fdivl
xchg
xor
or
inc
outsb
inc
cwtl
and
fwait
in
sub
jle
outsl
xor
jmp
cmp
jmp
gs
lahf
pop
mov
pop
xchg
cltd
pop
lret
push
lret
mov
jge
dec
cmp
arpl
jp
xchg
xchg
jno
lock
add
mov
xlat
jp
jle
xchg
in
in
sti
and
and
mov
les
xor
pusha
mov
sub
mov
test
inc
push
lret
xchg
inc
inc
cwtl
stos
jo
xchg
mov
lea
push
cmp
add
leave
dec
mov
lods
sbb
mov
cltd
mov
pop
jo
out
fdivl
mov
dec
stc
mov
sbb
sbb
mov
orl
rcrl
test
and
cwtl
and
lea
pop
loopne
mov
dec
xchg
orl
sub
shll
stos
adc
out
adc
sbb
out
inc
nop
into
adc
out
aas
adc
cs
lret
mov
and
addr16
cwtl
and
loop
scas
mov
xor
jns
adc
adc
pop
imul
inc
add
and
int
inc
clc
shl
add
imul
imul
movsl
pop
xchg
fs
jge
lods
lock
nop
push
test
cmp
jno
sub
mov
int3
negl
les
ret
pop
adc
movsb
cs
out
fwait
mov
lcall
add
hlt
sbb
mov
sbb
xor
add
xchg
fs
jge
mov
push
sbb
popa
das
fadd
jns
mov
outsl
pop
jb
icebp
jns
ss
or
fwait
pop
sub
add
aam
je
pop
mov
pop
mov
push
stos
stos
cmp
imul
push
popf
cltd
and
divl
jbe
test
bound
mov
bound
dec
int3
leave
cld
jmp
xchg
pop
out
push
out
mov
enter
in
mov
add
jno
fidivrl
ljmp
add
mov
xchg
jmp
ror
sub
adc
mov
gs
xchg
mov
mov
int
fstl
xorl
jo
dec
adc
or
je
cmp
adc
inc
push
add
outsb
lret
or
int
in
or
lods
jns
jae
and
push
xchg
loopne
dec
stc
pop
xchg
out
lea
jbe
mov
das
inc
mov
loope
adc
dec
loop
mov
nop
jno
dec
mov
or
int
inc
mov
mov
lock
sbb
dec
sbb
jne
xchg
adc
sbb
sbb
cmp
movsl
adc
push
or
push
insl
jns
das
mov
push
mov
xchg
jb
mov
sub
sbb
andl
adc
or
in
out
popa
bound
mov
inc
ror
jbe
sub
sbb
pop
inc
fists
and
sahf
pop
add
rcll
push
cwtl
and
mov
push
dec
jns
xchg
inc
pop
mov
pop
pop
bound
add
inc
je
jae
daa
shlb
adc
sbb
cmp
scas
xchg
outsb
mov
cmp
lahf
lcall
mov
cwtl
and
adcl
dec
insl
xor
pushf
faddp
inc
loope
dec
andl
int3
data16
lds
lret
sub
sahf
stos
add
mov
or
mov
cmp
int
mov
xor
lds
xchg
sub
adc
xchg
into
mov
mov
rcl
call
xchg
pop
out
ret
adc
sbb
rolb
mov
int3
shll
leave
sub
lea
sti
in
popf
loopne
mov
lahf
pop
cmp
mov
mov
je
add
ret
and
ret
mov
push
pop
sub
bound
pop
inc
les
mov
mov
mov
sahf
and
sub
sbb
ret
pop
and
and
lods
les
pop
mov
cmp
outsb
lock
sub
leave
cld
mov
xor
jge
sbb
mov
aad
test
jnp
sub
fimuls
ficoml
lcall
push
dec
popf
and
inc
test
mull
or
push
dec
fisubrs
shlb
xchg
sbb
inc
cwtl
and
push
icebp
or
pushf
or
xchg
hlt
pop
mov
clc
mov
cmp
mov
inc
cwtl
push
mov
ret
mov
mov
fistpll
dec
outsl
jge
mov
xor
push
cs
jg
add
out
scas
push
add
icebp
cwtl
loopne
pop
pop
test
loopne
jp
jno
inc
mov
fbld
les
inc
je
sbb
or
push
push
cmc
or
les
xchg
jae
ret
mov
daa
sub
jne
mov
arpl
call
sub
jb
lcall
cmp
jb
pop
data16
cs
cmp
outsb
dec
sub
add
sub
cmc
mov
sarl
insb
lahf
rcll
ret
iret
dec
cli
in
xchg
cmp
push
push
pop
sbb
mov
dec
or
jp
mov
ja
and
mov
cltd
lea
fwait
mov
sub
in
pop
push
pop
sbb
inc
loope
sub
idiv
jmp
imul
lods
pusha
dec
mov
inc
cwtl
sub
ret
sub
or
sbb
sub
test
outsb
daa
xor
gs
fdivs
rcll
imul
mov
mov
sub
and
add
inc
shll
ja
push
inc
mov
insb
lahf
cli
jae
pop
and
ret
push
dec
jnp
andl
cmp
dec
andl
dec
xchg
ds
push
xchg
nop
int3
ficompl
jbe
and
xchg
sbb
ffree
mov
and
pop
testb
das
icebp
sbb
adc
sub
mov
sbb
sbb
daa
imull
icebp
ds
das
inc
mov
loope
adc
push
or
dec
test
aas
push
cmp
loop
pop
fcoml
popa
lods
loope
pop
mov
loope
loope
daa
and
js
mov
aas
push
xor
xchg
push
or
bound
cmp
lahf
test
int3
leave
cld
pop
or
lahf
pop
lock
sbb
mov
xchg
xchg
movsb
mov
jmp
bound
movsl
xchg
loope
dec
cmpsl
movsl
cmp
mov
sbb
inc
cwtl
and
mov
pop
or
ret
pop
daa
xchg
je
shlb
mov
dec
insb
xchg
and
pop
sbb
push
cmpsb
cmp
aam
cld
mov
sbb
and
push
xchg
shlb
fadd
adc
xor
jl
sbb
leave
xchg
sbb
xchg
mov
out
rclb
movsl
and
rorl
jmp
dec
imull
mov
arpl
movsl
pop
inc
cmp
aam
lods
mov
inc
fwait
mov
aad
xchg
add
lock
cwtl
and
and
adc
loop
dec
adc
loopne
jg
ja
cmpsl
jmp
rcl
pop
jecxz
push
push
test
mov
xchg
sti
ss
popa
mov
jnp
test
pop
loope
sar
add
sub
jne
pop
repz
in
xchg
loopne
pop
sub
sbb
fbstp
add
mov
mov
xchg
push
push
fwait
ds
inc
mov
int3
stc
jmp
mov
adc
mov
insb
lahf
shrl
rcrb
jae
xchg
push
out
filds
fcoms
pop
in
and
sbb
and
push
or
aad
inc
out
mov
mov
in
pop
push
pop
pusha
inc
mov
dec
lods
jo
fidivrl
out
adc
sbbl
fcoml
out
mov
mov
lahf
and
jle
cs
pop
mov
or
mul
mov
lock
jmp
lahf
push
mov
or
pop
test
mov
lahf
pushf
xor
test
jns
scas
stos
jmp
aas
lock
add
insb
mov
or
lret
mov
dec
jo
and
pop
aam
mov
or
lock
imul
and
rorl
push
adc
xchg
sbb
mov
lds
inc
dec
and
jle
jnp
cmp
dec
or
pop
loope
jmp
movsb
mov
test
mov
lahf
pop
icebp
inc
out
mov
lret
and
sahf
subl
pop
inc
cltd
xor
mov
mov
push
insl
sbb
fsubrs
inc
inc
or
xchg
es
loopne
xchg
sbb
mov
sbbl
or
ss
and
cltd
sarl
adc
sbb
dec
sbb
in
ja
push
shrb
pop
cltd
and
cli
xchg
jno
test
mov
pop
out
xor
xchg
popf
fnstcw
adc
pcmpeqw
rcrb
push
mov
stc
add
leave
xlat
dec
mov
sbb
daa
cli
and
jl
jmp
aas
sbb
inc
pop
mov
test
lahf
and
inc
or
push
mov
loop
fdivrs
cmp
sbb
mov
sti
sub
push
mov
sbb
and
adc
add
xor
push
lret
xchg
nop
out
mov
push
loope
scas
sbb
lret
jmp
mov
mov
lahf
pop
test
sub
ret
sub
push
popf
ret
pop
es
outsb
xchg
pop
dec
sahf
and
imul
sbb
imul
test
mov
sub
pop
push
inc
inc
pop
mov
and
push
shlb
icebp
psrld
mov
jg
add
jmp
push
repz
ret
sbb
scas
push
cmpsb
inc
mov
insb
cmpl
sub
js
pop
or
push
outsl
fists
rorl
fimuls
test
pop
mov
ds
bound
jnp
sub
shll
test
jmp
mov
frstor
push
sbb
mov
sti
add
jns
adc
and
mov
into
inc
mov
add
sub
rcll
jo
cwtl
and
rcll
pop
jp
or
mov
fists
cs
and
outsb
sub
xchg
shr
lock
mov
std
mov
cli
or
pop
sub
pop
mov
test
inc
add
bound
pop
loop
outsl
jno
and
fucom
mov
adc
mov
pop
lods
adc
sbb
icebp
cltd
mov
or
fcoms
mov
mov
push
stc
jmp
xor
push
cwtl
mov
cwtl
faddl
xorl
pop
mov
loopne
push
cmpsb
cmp
mov
dec
sbb
mov
cmp
pop
sub
or
jmp
int3
inc
push
lret
sub
xchg
loop
dec
mov
arpl
faddl
pop
lcall
dec
or
shrl
dec
in
xchg
in
inc
int3
mov
mov
imul
in
imull
push
mov
lods
fs
cmc
push
sahf
mov
out
dec
jmp
and
dec
mov
ljmp
mov
lcall
mov
daa
pop
mov
lahf
sbb
arpl
test
sbb
sub
test
int3
jp
and
or
jecxz
ret
and
ret
cmp
cs
add
jno
shlb
mov
pop
adc
outsb
adc
xor
cmp
ja
mov
mov
mov
inc
cwtl
leave
jmp
sub
notl
les
xchg
outsl
dec
lods
gs
test
push
sub
test
repnz
adc
pop
inc
shlb
push
cwtl
xorl
pop
movsb
out
das
dec
mov
movsl
push
mov
jecxz
push
sbb
mov
lahf
inc
pop
cmp
pop
add
pop
std
dec
adc
add
bswap
fmuls
mull
imul
and
add
pop
mov
inc
add
inc
cwtl
and
das
xchg
xchg
call
mov
loop
push
test
xlat
push
lcall
fwait
add
cmc
push
mov
or
and
xchg
and
ljmp
mov
jmp
mov
fwait
mov
or
and
arpl
push
call
xlat
ja
jl
adc
sahf
xchg
js
xchg
lcall
idivb
mov
in
lea
adc
adc
dec
inc
inc
aam
pop
int3
xchg
popa
inc
cwtl
lods
out
insl
jmp
cwtl
pop
test
and
je
inc
nop
jno
pop
mov
rol
arpl
lock
pusha
push
dec
pop
icebp
and
or
adc
dec
mov
cwtl
rolb
inc
cwtl
and
dec
jp
andl
sbb
dec
fwait
sub
mov
add
repnz
insl
ljmp
aas
addr16
or
xchg
jg
pop
movsb
leave
jmp
data16
fadds
movsl
rcl
sub
inc
mov
cltd
lea
cltd
pop
cmpsl
test
push
sti
ret
mov
aad
fdivrl
shll
frstor
sti
and
outsl
jno
jle
loopne
sub
std
sub
les
cs
push
pop
push
sub
and
aas
outsb
lret
add
and
in
test
inc
cwtl
xchg
mov
js
mov
sbb
ss
lret
and
shl
data16
into
subl
std
jb
sbb
xchg
imul
push
in
cmp
jae
and
mov
pop
add
xchg
cs
daa
pop
mov
inc
mov
iret
mov
push
nop
and
or
mov
ror
mov
push
inc
adc
es
xlat
jnp
jg
jae
xchg
and
stc
sti
das
insl
in
xchg
sbb
inc
push
cwtl
and
lahf
pop
lods
xor
mov
sub
mov
xchg
rorl
mov
sub
dec
push
push
data16
and
jl
mov
pop
lret
xor
lock
data16
push
push
xchg
adc
fadd
add
loopne
or
stc
jle
xchg
enter
xor
sbb
icebp
cmpsb
icebp
pop
pusha
cmp
sarb
or
les
test
adcb
pop
cltd
out
push
jno
lret
ret
mov
orb
ds
adc
mov
sub
into
jb
jg
cmp
cmp
out
cmp
mov
or
sbb
fisttps
add
pop
pop
out
mov
fisubs
lahf
fldcw
faddl
push
dec
leavew
stc
dec
roll
fstpt
adc
push
pop
cmp
mov
mov
lret
sub
imul
mov
cmp
sbb
leave
aaa
cmp
fidivl
arpl
aas
and
mov
andl
test
fidivrl
sbb
out
jo
enter
mov
clc
mov
sub
and
dec
jp
out
xchg
int
jg
leave
sti
sbb
ljmp
pushf
fldt
xchg
jp
mov
or
and
jp
sbbl
out
test
jb
out
or
jbe
nop
and
les
fbld
pop
jae
push
cmpsb
pop
inc
xchg
push
sub
sbb
xchg
jne
mov
rcrl
adc
in
sahf
mov
lods
insb
lahf
pop
cmp
test
arpl
sbb
push
inc
and
test
lahf
ret
out
xor
jmp
es
fidivrl
or
in
xchg
push
jae
test
mov
in
xchg
ret
mov
insb
lahf
pop
dec
dec
pop
cmpsb
xchg
jle
dec
insb
loop
popl
and
lea
out
push
loopne
sub
sub
and
inc
mov
or
sahf
mov
loop
fmuls
sti
hlt
adc
insb
clc
pop
xor
flds
rorb
add
addr16
dec
cltd
mov
stos
jp
xchg
pushf
enter
xchg
rcll
mov
lea
mov
adc
mov
loope
xor
mov
jno
filds
mov
cltd
mov
les
in
rorb
loope
cmp
insl
and
adc
les
jae
test
xchg
pop
inc
cwtl
jb
ds
test
jge
jae
mov
repnz
div
leave
fsubrl
and
sbbl
cwtl
and
jno
xor
dec
int3
xchg
lds
xchg
jbe
sbb
pop
inc
ljmp
sub
aaa
and
into
aas
pop
lods
mov
sub
cmpsl
dec
push
lock
pusha
jne
int
test
lock
pop
fdivl
mov
fwait
pop
xor
loope
test
lods
addr16
mov
dec
dec
inc
nop
pop
test
and
bound
fwait
nop
jbe
pop
data16
mov
mov
or
in
pusha
gs
inc
mov
pop
dec
lcall
inc
call
das
aaa
mov
loope
ja
dec
fs
test
lret
in
aam
cmpsl
jmp
bound
xchg
loope
lret
roll
ret
mov
out
pop
loope
out
cltd
mov
inc
cwtl
in
xchg
cmp
outsl
sbb
jge
in
lods
ret
pop
and
lahf
and
in
fwait
jge
outsb
inc
or
scas
jg
je
pop
push
ucomiss
out
pop
push
inc
mov
cld
pop
pop
dec
mov
sahf
pop
xchg
sbb
test
movl
sti
sbb
addr16
std
mov
inc
outsl
popa
pop
sub
cltd
lea
movsl
js
sub
mov
shlb
push
jmp
popf
ds
jo
repz
mov
nop
jo
movsl
inc
cwtl
jne
push
mov
pop
dec
inc
rorl
add
ds
sbbl
push
mov
mov
dec
sbb
xor
mov
sbb
adc
sbb
or
cmp
cmpsl
out
push
popa
les
xchg
add
mov
insl
xchg
les
inc
addr16
cwtl
and
rclb
sarb
call
mov
and
loope
int
add
xchg
repz
sub
loope
xchg
mov
adc
loopne
jl
addr16
and
out
push
data16
rcrb
push
adc
ljmp
aas
push
scas
inc
add
loope
inc
or
rorb
pop
int
push
cmc
add
mov
test
push
repnz
scas
xlat
lds
jae
daa
sub
aaa
add
sbb
pusha
test
push
in
insl
mov
gs
les
pop
sub
test
pop
data16
lret
mov
push
xor
ret
out
pushaw
push
inc
push
pop
adc
inc
int
or
popf
xchg
shll
leave
lcall
movb
mov
mov
sahf
inc
js
xlat
add
cmpsl
test
adc
and
or
mov
dec
popa
outsb
push
popa
inc
sbb
jmp
push
sbb
add
out
lret
dec
lods
lea
test
popf
pop
jecxz
cwtl
das
sub
call
fidivrl
clc
cwtl
out
ja
jge
sbb
lods
nop
divl
mov
inc
cwtl
and
sub
push
push
fbld
and
inc
cwtl
pusha
sub
pop
inc
cmpsl
mov
mov
pop
xchg
mov
stc
xcrypt-cbc
cmpsl
adc
push
jb
xchg
push
out
jns
and
insl
lret
push
pop
inc
jg
fs
inc
mov
cltd
mov
add
mov
cmp
daa
adc
fildll
jns
adc
xor
xchg
inc
inc
pushf
inc
add
es
sbb
test
lcall
jns
adc
or
and
inc
aam
pop
int3
sub
and
je
cli
fists
inc
add
cmp
mov
out
mov
and
insb
cmpb
mov
orl
test
sbb
push
fmull
sahf
push
jne
mov
subl
xchg
xchg
mov
or
and
xchg
in
fisttps
mov
mov
popa
xor
pop
test
and
addr16
or
shl
xchg
and
das
mov
lcall
mov
test
jecxz
inc
lea
jmp
rcrb
xor
adc
cmp
push
and
and
push
jne
mov
mov
mov
push
sahf
mov
fbld
xchg
cmp
inc
into
xchg
imul
mov
pop
dec
mov
jecxz
loopne
push
mov
add
push
inc
pop
inc
and
ret
inc
pop
imul
dec
ret
cld
sub
cmc
jge
mov
sbb
rcrl
fwait
dec
dec
cwtl
and
sti
push
xchg
cmp
push
test
cmpsl
dec
outsl
fadds
push
sbb
aas
jp
cmpsl
mov
pop
lods
sub
and
in
test
inc
cwtl
xchg
sub
out
and
call
xchg
sub
or
out
dec
ret
dec
sar
fiadds
inc
popf
mov
cltd
mov
or
xchg
cmpsb
mov
xor
inc
cmp
lcall
movsb
insl
scas
loop
xor
pop
fstl
ja
movsb
outsb
sbb
jne
jmp
sahf
imulb
mov
adc
sbb
mov
inc
add
std
mov
and
je
orb
cmp
lds
inc
cmpl
mov
mov
out
or
and
ljmp
sbb
sbb
ficoms
dec
mov
mov
or
pop
mov
cs
xor
mov
data16
or
stc
bound
leave
push
push
mov
cmpsl
push
data16
arpl
cmp
inc
mov
push
adc
sbb
xchg
scas
sub
test
ds
idivb
das
test
mov
mov
cwtl
and
inc
sti
data16
and
push
dec
inc
jmp
lahf
pop
ret
enter
lret
sbb
es
lahf
nop
in
add
mov
int
push
sub
movsb
dec
insb
test
sahf
inc
shlb
pusha
mov
and
inc
cwtl
and
sarl
jl
lret
pop
push
insb
sbb
leave
shlb
icebp
mov
fisubrl
mov
adc
mov
loope,pn
sbb
inc
mov
sbb
and
sub
loope
fs
push
inc
or
push
shlb
mov
lahf
pop
data16
mov
mov
mov
xchg
mov
sahf
inc
ret
pusha
mov
repnz
pop
inc
push
movsb
pop
inc
mov
xchg
jns
dec
push
push
mov
jle
ret
and
loopne
pop
ss
out
cmp
mov
pop
clc
mov
sub
add
test
lahf
sbb
sub
ror
js
mov
sub
aaa
lock
repnz
out
pop
jo
je
data16
cwtl
cmp
and
cmp
js
outsb
mov
es
andl
movsl
ljmp
sub
aaa
sbb
push
add
dec
sub
pop
outsb
fildl
sub
pop
inc
or
std
pop
or
ja
stos
cltd
frstors
insb
rcr
adc
inc
andl
nop
pop
fistl
ljmp
ret
outsb
push
push
sbb
popa
pop
xorb
in
sbb
pop
lcall
fisttps
cwtl
and
add
mov
mov
push
pop
and
xor
sbb
loope
mov
jae
jmp
leave
bound
loopne
or
lds
pop
lcall
jle
pop
jo
lcall
hlt
fisttps
cwtl
and
mov
in
adc
xchg
loop
fadds
dec
adc
push
pop
mov
xchg
mov
cltd
mov
cmp
sbb
nop
jno
sbb
xchg
out
adc
rcrl
xchg
shll
stos
fisubrs
aaa
aas
repz
mov
into
push
sub
inc
pop
mov
mov
sbb
sbb
fmuls
sub
rcr
or
sbb
adc
sbb
mov
push
mov
orb
inc
cwtl
and
lock
stos
jg
jae
cmp
sub
sub
pop
or
jmp
dec
cltd
repz
std
jae
pop
jbe
jno
xchg
mov
inc
test
push
push
pop
aam
jp
enter
cli
pop
fbstp
mov
stos
cmp
mov
pushf
scas
in
jno
cld
xor
inc
inc
inc
das
call
aaa
lret
cli
mov
adcb
or
push
cltd
icebp
push
push
inc
cwtl
and
sub
jp
jno
xchg
xor
pop
scas
nop
mov
xchg
mov
xchg
setae
sbb
and
add
and
push
frstor
scas
sahf
mov
xchg
inc
pop
lret
add
push
xchg
loop
fadds
push
lcall
lds
jo
inc
xlat
dec
stos
test
dec
xlat
jp
jg
aaa
mov
lret
xor
inc
mov
xor
test
loope
out
adc
inc
imul
test
dec
dec
jp
andl
les
xchg
jno
icebp
fisubrs
add
jne
sbb
test
test
lahf
mov
daa
cltd
xchg
push
pop
iret
xor
sti
lret
aad
and
xor
aas
out
adc
add
mov
popa
cmpl
loope
dec
les
jns
mov
inc
shll
adcl
mov
jge
jmp
inc
and
sbb
sub
mov
sarl
sbb
mov
dec
mov
test
sub
fwait
andl
test
mov
lods
sbb
test
push
test
aaa
push
dec
xor
mov
push
sbb
inc
xorl
out
cmp
pop
push
lock
mov
popa
daa
int3
pushf
mov
in
fwait
sbb
insb
lahf
pop
loopne
subl
ret
pop
and
fwait
fwait
loope
negb
sbb
dec
add
fwait
outsb
pop
mov
das
scas
in
inc
cwtl
and
sub
cwtl
and
xchg
jp
push
sub
or
inc
mov
lcall
sub
stos
xchg
movnti
xchg
pusha
fbstp
dec
push
pop
sub
loop
xchg
mov
dec
fldl
test
add
data16
mov
movsb
orl
xchg
mov
movsb
push
daa
fmull
ss
pop
test
ret
pop
mov
or
and
jo
aaa
adc
sbb
push
sbb
pop
aam
mov
roll
sub
mov
mov
jno
xor
dec
push
jo
rcrb
xchg
lret
jmp
fldcw
mov
js
jge
mov
mov
and
push
loope
fstpt
push
insb
icebp
pop
push
jne
mov
jp
icebp
fwait
loopne
pop
dec
rcrl
scas
pop
push
mov
mov
pop
inc
jmp
bound
das
cmp
sub
das
jp
test
aas
imul
adc
out
mov
add
mov
jle
out
fbld
aam
call
inc
fadd
mov
das
dec
js
andl
addr16
loope
inc
andl
or
in
xchg
cmp
or
jl
loopne
mov
lcall
inc
in
cwtl
cmpsl
push
jmp
outsl
inc
cwtl
.byte
test
lahf
