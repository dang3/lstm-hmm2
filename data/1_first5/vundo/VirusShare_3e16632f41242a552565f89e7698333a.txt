ss
inc
out
fcomip
xor
out
inc
out
fdivp
xor
out
inc
out
fdivp
xor
out
inc
mov
sub
cmp
inc
aam
sub
adc
cmp
iret
outsb
sahf
mov
dec
stos
out
nop
sub
add
and
mov
imul
sub
jle
add
pop
cmpsl
mov
sub
iret
cmp
pop
out
jb
rorl
aas
or
inc
sub
sub
mov
sbb
jnp
mov
sbbb
movsl
lcall
inc
mov
mov
xchg
pop
dec
pop
popa
adcl
test
mov
add
sbb
pop
dec
stc
or
leave
xchg
adc
pushf
stc
popa
dec
mov
insb
addr16
pop
fcompp
xor
or
mov
jmp
push
ret
imul
jb
in
mov
gs
mov
and
cltd
aaa
inc
stc
shrb
les
clc
sbb
mov
inc
xchg
movsb
mov
push
adc
or
mov
dec
xor
dec
out
dec
and
subl
push
jcxz
dec
pop
hlt
pusha
jbe
std
rol
ljmp
adc
sbb
call
cltd
sub
and
scas
pop
movsb
adc
in
loop
mov
sbb
push
fiadds
mov
pop
loopne
out
pushf
lahf
rclb
push
gs
inc
dec
lock
jmp
push
mov
xchg
gs
adcb
movsl
jnp
xor
gs
jno
inc
sti
pop
faddl
xor
jne
pop
aaa
xor
mov
mov
or
icebp
into
mov
arpl
icebp
adc
pop
loopne
fistps
pop
andb
push
jo
mov
push
daa
pop
mov
and
out
dec
cmp
lea
icebp
xlat
sub
lret
pop
push
mov
sub
push
popl
push
popl
xor
sbbb
pushl
popl
call
addl
test
jne
push
xor
add
popl
mov
addl
ret
sbbw
push
popl
push
orb
push
push
popl
sbbb
mov
pushl
popl
push
or
and
popl
mov
pusha
push
popl
call
push
popl
mov
orb
sub
xor
movl
pushl
popl
push
sub
mov
popl
mov
addl
subb
push
popl
push
push
popl
call
subl
cmpl
je
push
popl
cmpl
je
addl
cmpl
jne
or
andl
call
movb
push
or
add
popl
mov
popa
xorw
push
popl
call
push
and
add
popl
mov
sub
and
movl
push
popl
addl
mov
push
push
popl
call
push
popl
push
push
push
mov
mov
xor
pop
pushl
popl
mov
push
add
and
popl
mov
push
popl
shl
push
or
and
popl
mov
pushl
popl
push
push
popl
xor
addl
push
pushl
popl
and
call
orl
or
push
sbbb
push
popl
mov
xor
push
sbbb
jmp
sbbw
push
popl
pop
push
sub
add
popl
mov
mov
pushl
popl
addl
push
xorb
pushl
popl
push
push
or
add
popl
mov
push
popl
push
push
and
mov
popl
mov
mov
xorb
xorb
mov
subl
push
popl
rep
orw
pop
pushl
popl
pop
push
shr
rol
lea
mov
sub
xchg
push
mov
xor
xchg
andw
xor
pushl
popl
jmp
xor
sub
sbbw
mov
xor
sub
mov
pushl
popl
sub
push
and
and
popl
mov
mov
xor
push
sub
mov
popl
mov
sub
addw
or
jne
pushl
popl
xorb
add
pushl
popl
push
popl
jmp
push
popl
mov
push
popl
and
movl
mov
xorl
and
push
popl
and
add
sbbl
mov
push
popl
push
popl
and
push
popl
jmp
addl
pushl
popl
nop
addl
movb
nop
subb
sub
or
xorb
and
orb
mov
push
or
xor
popl
mov
xorl
and
andw
xor
and
movw
and
sub
and
orw
pushl
popl
cmp
jne
pushl
popl
pushl
popl
lea
xor
mov
andl
push
popl
mov
push
popl
and
addl
cmp
je
push
popl
andl
xor
subw
addw
ret
orw
orl
push
orl
xor
andb
and
and
mov
push
add
add
popl
mov
mov
push
popl
push
popl
and
mov
mov
push
popl
and
addw
mov
movl
push
add
add
popl
mov
and
push
or
or
popl
mov
subb
lods
push
popl
and
pushl
popl
mov
push
add
and
popl
mov
addb
pop
push
popl
ret
movb
sbbb
push
push
popl
mov
subl
xorb
add
push
popl
mov
push
push
popl
push
orw
push
popl
push
sbbb
push
pushl
popl
push
popl
push
subb
mov
push
add
and
popl
mov
andb
mov
subl
add
add
pushl
popl
push
popl
pushl
andl
push
mov
sub
popl
mov
mov
push
popl
add
xorb
add
pushl
popl
push
popl
mov
push
add
or
popl
mov
add
movl
push
and
or
popl
mov
xor
sub
xorb
lea
sbbl
addw
mov
addw
add
xorl
mov
sub
xor
andw
rol
push
sub
or
popl
mov
push
add
xor
popl
mov
xor
push
xor
add
popl
mov
subb
inc
push
popl
sbbl
cmpb
jne
push
popl
sbbb
cmp
je
addb
or
inc
push
and
mov
popl
mov
addb
cmp
jb
andb
push
popl
mov
push
mov
xor
popl
mov
add
push
popl
movzwl
sbbb
mov
push
popl
add
push
popl
mov
push
popl
add
movw
pop
or
push
popl
cmp
jbe
push
popl
add
cmp
jae
orw
pushl
push
popl
push
popl
pushl
push
and
sub
popl
mov
push
popl
sub
sbbb
movl
andw
addl
subw
push
popl
pushl
or
push
popl
call
push
popl
call
movw
pop
andw
pop
push
mov
xor
popl
mov
push
popl
pop
addw
add
pop
push
popl
movw
pop
mov
leave
addb
ret
push
xor
mov
popl
mov
call
cmp
jp
xchg
push
in
int
fistpl
ja
rcl
aad
pop
mov
or
loop
pop
test
int
xor
sub
add
cld
xor
or
lahf
cs
imul
pop
pop
xchg
loop
dec
mov
push
pop
mov
inc
and
jge
loope
xor
mov
bound
xor
or
push
or
push
test
out
adc
rcrb
cwtl
in
addr16
cmp
xorl
popa
scas
or
add
sbb
mov
imul
xlat
xchg
pop
movsb
cmpsl
push
pop
pop
lods
add
sbb
push
xor
lcall
push
jns
lods
lahf
inc
daa
fisttps
sub
or
frstor
mov
pop
jb
adc
add
add
in
push
std
movsb
push
xchg
call
inc
out
mulb
jge
adc
xchg
push
fidivl
pop
cmp
out
and
ja
aad
fldt
inc
in
out
leave
fs
nop
pop
stos
mov
test
lods
sub
in
or
and
ret
add
sub
js
mov
or
je
jnp
js
dec
jnp
add
pop
in
lcall
loope
and
adc
pop
xor
mov
pushf
ret
enter
lods
add
cs
int3
ret
inc
pushf
test
in
fld
popf
inc
stos
stc
xchg
dec
push
mov
mov
sbb
in
and
movsb
rcl
add
test
loopne
stos
cmpsl
out
jmp
or
movsb
pop
add
and
in
out
call
mov
sub
out
fisubrs
inc
xor
xchg
and
cld
sbb
repnz
push
popa
mov
push
or
jecxz
rcll
xor
fucom
lahf
fistl
xchg
add
and
fsubrs
test
sub
test
mov
js
rcl
jmp
jge
xchg
or
scas
adc
pusha
aas
add
pop
ss
sarl
imull
leave
mov
incl
cmp
sub
and
loope
pushf
orb
inc
loope
mov
sub
out
ds
mov
test
pop
or
push
cmp
fildl
cs
jnp
sarl
test
pop
inc
or
in
icebp
pop
xor
xor
les
call
add
inc
jno
xor
adc
pop
mov
dec
jp
cltd
dec
pop
dec
add
push
not
xor
je
inc
ljmp
mov
call
das
mov
pop
cld
call
cs
enter
xchg
or
push
jnp
fildll
push
xchg
mov
ljmp
lods
sbb
lds
push
dec
jo
or
sub
bnd
inc
jmp
lods
addr16
int3
dec
ljmp
aam
inc
add
data16
mov
mov
xlat
adc
mov
xlat
in
shl
dec
jnp
push
sub
lahf
dec
sbb
call
pop
push
sbb
fwait
mov
and
sahf
xchg
lret
sbb
inc
movb
dec
jae
jl
xchg
stc
ret
xchg
call
dec
arpl
call
data16
pop
lret
or
shr
sbb
in
ret
mov
addr16
imul
dec
add
int
mov
rcl
sub
push
fstl
fstl
xor
cmpsb
fldl
sbb
sbb
loop
decl
add
addb
dec
movsl
lahf
pop
movsb
fists
fs
or
popa
out
in
out
out
add
out
push
cmp
scas
xor
out
sub
jbe
les
pop
int
sar
pop
lea
loopne
dec
imul
pop
or
lcall
mov
outsl
push
pop
mov
mov
hlt
cmpsb
lods
sbb
jnp
mov
adc
jecxz
xchg
mov
lods
and
push
test
push
imul
aaa
sub
lds
call
dec
cltd
mov
add
push
je
mov
mov
sti
lret
sub
ds
in
scas
xor
clc
test
lods
mov
bswap
cmp
dec
cmp
push
xor
rcr
sar
ja
lahf
js
xchg
mov
push
jg
inc
jno
mov
add
ficomps
sarl
inc
call
lods
adc
mov
mov
dec
push
ret
and
mov
adc
push
arpl
cmp
mov
outsl
in
rolb
scas
xchg
sahf
mov
xor
push
sub
ficoml
inc
pop
ljmp
mov
sub
imul
icebp
out
pop
sub
mov
push
pop
mov
jns
cmp
jmp
imul
lcall
adc
mov
sti
push
jecxz
push
dec
leave
ja
rcl
or
lock
inc
mov
or
sbb
call
push
cmp
mov
imull
inc
mov
incl
cmp
pop
pop
or
sti
xchg
mov
and
lods
mov
cmp
out
jmp
lods
es
out
pop
data16
dec
add
cmp
dec
imul
dec
add
int
scas
mov
mov
xor
mov
imul
sahf
cmovg
mov
pop
lods
add
sbb
push
ret
js
arpl
cmp
lret
leave
xchg
pop
pop
xchg
lahf
add
pop
dec
and
pop
jnp
mov
pop
dec
int
push
fdivs
shl
pop
inc
or
jnp
loopne
adc
xor
cli
and
jbe
int3
xor
arpl
imul
pop
mov
push
mov
js
adc
frstor
out
push
pop
test
jge
lock
fldt
clc
in
jmp
leave
push
inc
sub
addr16
pushf
add
push
popa
dec
add
lock
in
fcmovnu
mov
cmp
imull
mov
imul
into
add
sahf
inc
add
and
mov
in
lock
sub
bswap
cmp
test
rcll
imul
or
inc
sbb
out
adc
dec
test
xor
repz
addr16
pop
cmc
push
pushl
popa
xchg
call
inc
add
out
adc
jno
jl
loopne
cld
lret
mov
mov
or
sti
xchg
cs
rcl
repnz
in
sub
fidivs
inc
sub
fs
fldl
push
aas
lea
imull
mov
mov
or
mov
push
aas
lea
jp
imull
pop
lcall
cmp
push
xor
fwait
xchg
xchg
jne
push
sbb
mov
ficoms
ret
leave
or
inc
sub
fs
pop
int
inc
pushf
test
in
dec
jecxz
stos
stc
xchg
pop
ljmp
sub
imul
dec
add
jmp
add
adc
jnp
rcl
rclb
cltd
sub
imul
stos
fmull
push
pop
sbb
roll
sbb
push
cs
pushf
jl
pop
mov
stos
stc
xchg
pop
pop
ret
push
or
inc
and
movl
sti
sub
jecxz
xor
popf
pop
test
out
push
add
or
dec
cmp
mov
outsl
in
in
sub
sub
call
mov
fldt
int
xor
fwait
out
loop
mov
ss
loop
rcrb
xchg
pop
inc
sub
mov
cmp
mov
outsl
in
in
sub
push
mul
lods
add
int
mov
xor
inc
gs
rorb
lahf
dec
das
imul
ss
dec
pushf
sti
call
mov
jbe
xchg
or
nop
imul
fsubl
sahf
cmp
in
pusha
ds
lds
sbb
test
mov
outsb
mov
pop
std
ja
inc
adc
mov
xchg
fcoml
stos
mov
imull
or
sti
cmp
push
xor
lcall
jmp
jae
stos
or
jne
frstor
stos
and
sti
pop
pop
in
add
sbb
ja
and
jno
jnp
ret
in
shlb
shr
clc
idivb
add
adc
sarb
and
loope
and
in
call
mov
mov
scas
outsl
in
vcvtsi2ss
xor
int
mov
sahf
stc
xor
mul
std
in
leave
xchg
out
sti
call
outsl
out
sub
loop
cmp
mov
mov
jo
dec
std
pop
int
cmp
xor
jns
mov
cmp
scas
gs
mov
ss
xchg
cmc
cmp
sub
dec
sub
xchg
mov
cmp
cltd
insl
sti
inc
in
add
fdivl
push
call
fisttpl
out
mov
add
test
mov
push
push
leave
test
subb
push
jne
std
push
test
dec
popf
out
cmpsl
std
mov
shlb
fmull
icebp
pop
cmc
pop
jno
jl
dec
movsb
aaa
xchg
sti
xchg
pop
data16
mov
ret
inc
cs
fdivs
ja
and
gs
pop
push
lods
add
dec
and
in
stc
pop
aad
push
adc
push
je
cmpsl
and
mul
mov
sbb
jge
fwait
and
mov
xor
es
test
pop
test
adc
xor
jecxz
add
and
add
dec
sbbl
psubusb
push
sti
inc
aad
je
inc
out
into
notl
cmpsl
jnp
push
rcrl
addr16
xor
psubd
add
sti
das
sbb
dec
movsl
lahf
dec
pop
imul
pop
ret
js
arpl
inc
and
mov
add
test
aas
mov
push
pop
and
mov
xor
dec
cli
lahf
mov
int
in
mov
add
jp
popa
and
rcl
jne
dec
out
faddl
pop
cmp
in
imul
mov
lods
rcr
pop
lods
jb
jecxz
push
and
lret
fldt
fisubs
call
lds
or
xchg
cli
pop
jg
cmc
jecxz
xchg
call
xchg
cli
mov
mov
fnstcw
mov
sti
cmp
pop
mov
ja
cmp
push
lea
cld
es
sub
pop
popa
jmp
shl
ret
mov
sti
or
dec
and
pop
mov
jae,pt
cmp
sub
imul
xchg
mov
lods
sbb
fsub
scas
pop
sahf
push
push
sub
ret
pushf
xchg
cmp
frstor
xchg
fucom
stos
icebp
xchg
and
pop
mov
xlat
lods
sar
lcall
add
and
js
in
subl
ss
dec
in
clc
jbe
aad
in
dec
fs
inc
sub
roll
mov
push
in
lea
dec
adc
fmull
lods
mov
and
inc
leave
fadds
inc
call
pop
jae
stc
xchg
mov
sbb
dec
sbb
insl
dec
sbb
cld
jae
and
jnp
sbb
jo
pop
sbb
mov
mov
hlt
mov
and
dec
add
lcall
fisttpl
mov
cmp
mov
cmpsl
jg
sub
cmc
test
rolb
mov
aas
dec
jmp
jo
mov
xor
or
push
and
jp
xchg
jecxz
sbb
loop
jb
xchg
std
pushf
inc
mov
ret
in
adc
scas
popa
jecxz
shll
push
outsl
clc
jge
and
jbe,pt
inc
mov
pop
jno
ljmp
and
outsl
in
call
mov
add
int
sar
pop
inc
xlat
sti
das
sbb
dec
movsl
lahf
cmp
lds
pop
pop
outsl
loop
xor
cli
pop
outsl
loop
cs
mov
roll
xor
cmp
cvttps2pi
dec
sbb
pop
jb
icebp
dec
scas
sub
push
and
dec
jecxz
shl
push
mov
inc
enter
fstpt
and
fs
fildl
pushf
jl
jecxz
pop
and
out
stos
stc
xchg
pop
inc
iret
lcall
cs
sbb
ret
mov
sti
mov
fstl
leave
jnp
rcl
xor
xchg
inc
mov
mov
enter
imul
mov
xchg
push
fcmovu
insb
test
imul
sbb
fisubrs
in
lods
repz
xchg
push
ret
fcoml
pop
mov
dec
fldl
cmp
leave
out
in
and
lods
rcl
add
test
mov
movsl
mov
push
loopne
xlat
out
pop
data16
data16
and
out
mov
add
ret
inc
xchg
push
enter
loop
push
and
jmp
mov
push
mov
jo
and
loope
stos
push
aam
imul
arpl
arpl
call
mov
cs
int
inc
pushf
test
in
stos
stc
xchg
push
pop
cs
adc
bound
fisubrs
in
scas
cmpsl
cmp
insb
fisttps
and
filds
or
dec
mov
push
pop
mov
clc
dec
jmp
popa
loopne
call
frstor
ds
sbb
clc
insl
sub
bswap
cmp
push
shrb
sub
test
iret
xor
out
sti
call
int3
loopne
shl
pop
mov
sahf
push
xchg
inc
xor
rcl
lret
cs
adc
out
pusha
ficomps
shl
js
into
adc
fbld
cmp
mov
outsl
in
cli
ret
sbb
lret
xor
cld
pusha
dec
scas
std
jecxz
int
fcmovne
enter
xor
pop
scas
icebp
test
out
popa
data16
leave
and
in
pop
cmpl
mov
ljmp
dec
das
mov
adc
sti
add
cmp
sub
push
movsl
je
mov
mov
pop
mov
add
shll
fstp
loopne
add
mov
cmp
sub
mov
mov
jl
mov
jns
fbstp
inc
sub
bound
and
outsl
in
dec
sub
cmpsb
add
int
shlb
lods
jmp
cmp
mov
outsl
in
cld
sub
add
int
mov
add
adc
push
call
daa
imul
sub
fidivs
shr
loop
shr
data16
cmp
jno
mov
out
test
clc
shrl
sub
arpl
mov
outsl
jle
mov
scas
fcompl
push
sub
jg
xchg
leave
addb
out
ret
xchg
jae
dec
pop
cmp
mov
xor
cmpsb
jg
icebp
ficomps
out
push
in
int
mov
lahf
cmp
leave
dec
sbb
loope
add
and
and
movsl
in
push
jnp
outsb
jne
adc
out
mov
push
jb
ljmp
int3
in
inc
xchg
push
ja
int3
dec
nop
inc
sub
push
mov
inc
push
inc
arpl
add
fadds
cmp
mov
outsl
in
lret
dec
sub
add
int
mov
fistl
fsubp
sti
call
lahf
add
test
sub
fdiv
pusha
es
rcl
and
lret
faddl
push
into
pop
ret
icebp
jmp
sti
ds
add
insl
test
lock
fistl
jmp
in
call
adc
loope
fbld
into
sub
sub
mov
test
repnz
mov
std
fidivs
inc
sub
add
je
in
int
fucomi
xchg
inc
mov
in
jno
test
rcll
cli
pop
mov
mov
lret
into
jbe
xchg
or
incl
pop
cmp
dec
insl
decl
or
shl
das
xchg
ss
stos
xor
jnp
jg
sbbb
or
mov
gs
gs
loop
fldt
ja
xchg
std
push
push
lret
add
push
sbb
nop
call
rorl
leave
ja
push
sbb
sbb
in
cwtl
cmp
dec
loope
cwtl
sbb
test
push
inc
xchg
mov
push
dec
aaa
bound
pop
dec
ret
mov
jb
ret
enter
pusha
inc
cld
pop
insl
in
or
jnp
cmp
adc
jno
dec
and
mov
test
fnstcw
out
xchg
xchg
inc
in
mov
xor
push
mov
fwait
gs
ror
push
out
push
mov
inc
test
pop
xor
loopne
inc
inc
rclb
scas
in
mov
push
jno
dec
sbb
pop
xchg
or
leave
jns
sub
push
dec
lea
jnp
sbb
hlt
ljmp
push
int3
ret
dec
mov
mov
mov
push
pop
mov
pop
faddl
jp
loope
xor
jae
or
jmp
jbe
xchg
or
sub
cmp
and
mov
cltd
aas
es
flds
add
add
es
or
inc
out
pop
fmull
imul
mov
movl
lods
sahf
pop
int
and
outsl
in
in
sub
add
int
mov
sub
addr16
fildll
mov
ja
pop
lret
sub
gs
ss
fimull
and
push
out
add
dec
test
mov
clc
test
inc
inc
cmp
out
xchg
adc
or
mov
inc
aaa
push
mov
jae
push
push
rcll
mov
outsb
aam
pop
adcl
lea
inc
imul
aaa
out
out
xchg
divb
cld
xor
popa
data16
lds
lahf
inc
pop
imul
fs
or
pop
xor
push
push
xor
fwait
insl
mov
pushf
jne
push
jmp
out
xorb
sub
int
and
dec
cmp
imull
or
gs
add
mov
test
testl
push
pop
fcmovnu
mov
in
mov
and
lahf
mov
inc
das
push
nop
mov
popa
leave
divb
out
lock
jae
push
pop
mov
mov
fldt
push
sub
xchg
idivb
push
push
lods
inc
jg
aam
jecxz
daa
xor
test
mov
fldt
mov
xor
fdivrl
cmp
add
stc
jns
cwtl
adc
dec
jl
lret
jecxz
bound
das
mov
dec
mov
sub
fbld
enter
mov
loopne
out
in
pop
push
xchg
mov
lret
fstpl
dec
sbb
mov
shlb
jge
icebp
adc
jno
and
xchg
rcr
add
test
fiadds
insb
leave
ja
rcl
movsl
jmp
add
aad
loop
push
mov
out
xchg
sub
sti
call
in
out
jmp
popf
fsubr
sar
xchg
stos
imul
add
out
cmp
popf
fmuls
das
or
std
adc
or
std
insb
sbb
fcmovnu
jo
xorb
pop
push
popa
fbstp
mov
xchg
adc
mov
and
cmp
cmpsl
outsl
xor
xor
inc
xchg
int3
mov
fmuls
mov
out
add
push
and
aad
aad
jge
mov
cmp
repnz
add
xchg
loop
push
cmpsl
lods
js
pop
mov
fistps
sarl
jmp
movsl
addr16
cli
cmp
loop
psubd
add
sub
arpl
mov
arpl
mov
or
push
cmp
jecxz
in
rcrl
xlat
dec
mov
addb
pop
dec
arpl
insl
sub
lea
dec
inc
push
dec
pop
xorb
xor
test
jmp
bound
xchg
pop
out
adc
call
pop
mov
outsl
in
jmp
sub
add
int
mov
xlat
cli
or
xor
and
push
les
jp
push
in
clc
jmp
mov
fwait
jle
dec
mov
adc
mov
sbb
fdivl
movsl
jo
or
push
xchg
pop
adc
shrl
and
xor
int3
repnz
sti
jmp
inc
pushf
shlb
clc
shl
fwait
jmp
enter
loopne
out
addl
pusha
imul
add
in
mov
lret
into
jbe
xchg
pop
adc
sahf
pop
int3
cs
inc
mov
push
sbb
out
ja
dec
lock
or
and
cld
fnclex
in
stc
aaa
xchg
push
je
aam
mov
test
dec
jmp
or
xor
aad
adc
adc
sar
aaa
adc
push
add
out
push
or
adc
ds
sub
pop
and
mov
push
ret
mov
add
lea
mov
shrl
mov
sar
adc
jno
mov
imul
jnp
orb
adc
arpl
mov
aad
inc
push
push
lea
xchg
add
lock
fbld
test
fmulp
in
icebp
bound
add
inc
push
fucomp
sub
fucom
or
add
test
mov
sti
call
leave
jns
rcl
lahf
jne
or
xchg
imul
test
mov
fimull
and
xor
popl
mov
movsl
fidivs
int
ret
push
cmpl
cmpsl
in
add
in
fldz
xor
mov
dec
push
loope
ja
cmpsl
fldt
xchg
or
cltd
mov
in
sbb
xchg
lea
mov
push
xor
and
dec
imul
jbe
xchg
or
cmp
add
push
or
mov
dec
jecxz
js
ds
lret
jns
sub
adcb
imul
fcompl
sahf
pop
cmp
pop
dec
lea
inc
cmp
push
mov
or
inc
and
push
movsl
popa
dec
add
insb
orb
jp
add
dec
add
int
mov
add
scas
sub
mov
aaa
test
mov
xchg
inc
dec
push
mov
inc
adc
xor
arpl
cmp
mov
outsl
in
int
sub
add
int
mov
fwait
mov
int
sub
mov
int
inc
pushf
jp
in
cmp
xchg
fucom
or
add
test
int
fldt
imul
sub
mov
sub
pop
ret
xchg
les
jnp
mov
lds
jnp
add
jne
fiaddl
push
mov
push
xor
dec
inc
js
mov
and
out
aaa
jl
adc
fnstenv
test
xor
mul
sqrtps
loop
sti
call
aaa
dec
std
loop
fstl
jp
mov
out
into
xor
sbb
rcl
add
test
mov
jl
jae
test
jae
add
or
data16
mov
in
inc
push
sbb
int
cmc
xor
and
scas
lods
imul
cli
enter
enter
mov
push
pop
mov
or
mov
jmp
loope
sbb
push
cmc
lods
and
imul
dec
add
int
pop
sahf
leave
jb
ror
jne
push
dec
add
mov
add
test
push
in
push
xor
pop
fdivrl
mov
jnp
mov
add
in
pusha
cli
popa
jb
xchg
div
not
inc
rclb
dec
out
addl
fdivrl
movsb
in
fbld
xchg
sub
mov
out
sub
sarb
out
cli
lcall
pop
xor
xor
fsubrp
inc
mov
pusha
sbb
lock
jo
sarl
dec
pop
jge
not
in
or
push
mov
mov
popa
lock
mov
sub
popa
jmp
fs
dec
call
push
jne
imulb
adc
mov
in
pop
imul
int
cmc
loopne
test
scas
iret
ss
outsl
in
std
ror
cmp
loop
jecxz
iret
add
cli
pop
pop
inc
xor
frstor
xchg
mov
mov
push
mov
orw
add
dec
cld
mov
in
int
fistpl
mov
test
push
enter
mov
int3
je
pusha
inc
cld
pop
cltd
in
std
mov
cmp
test
fcoml
mov
jmp
ret
sub
xchg
dec
push
dec
pop
sub
out
in
incl
mov
out
cli
bound
dec
push
jne
and
push
test
jle
mov
imul
jecxz
imul
inc
es
test
inc
testb
in
adcb
xchg
jecxz
sti
call
in
mov
shrl
es
iret
ja
mov
mov
fldt
addr16
movb
sub
sahf
imul
loopne
frstor
fimull
mov
jbe
mov
mov
mov
cmp
mov
outsl
in
in
sub
add
int
mov
fildl
xchg
les
in
or
jmp
fsubs
sbb
sbb
addb
imul
mov
sti
cmp
scas
je
add
inc
stc
test
ljmp
out
push
xchg
pushf
lahf
xor
sahf
add
stos
lods
push
inc
sub
popf
mov
mov
lret
into
jbe
xchg
pop
sub
fdivrl
inc
mov
shr
pusha
push
int
data16
ljmp
js
ss
push
jne
int
sbb
fistps
push
nop
cmpsl
mov
xchg
xor
call
nop
in
cmp
mov
fldt
dec
lods
adc
ljmp
mov
popa
dec
add
add
push
and
xchg
icebp
outsb
cltd
scas
mov
mov
ret
aad
out
dec
out
out
sub
cwtl
adc
mov
mov
jmp
divb
push
ret
push
dec
js
lock
mov
out
mov
adc
shll
shlb
dec
adc
cs
inc
repz
jno
dec
pop
inc
pop
nopl
and
sbbb
xor
jl
pop
andb
mov
in
push
add
into
adc
lods
add
sbb
push
ret
pop
add
out
push
xor
fwait
xchg
sarl
lods
push
jge
xchg
and
inc
sub
push
mov
ja
pushl
into
cs
inc
cmp
xchg
cmp
scas
bound
xchg
testl
sbb
loop
sahf
incl
cmc
fistl
pop
mov
in
mov
test
dec
jmp
xor
ret
shl
cmp
hlt
int3
ja
test
sub
aas
lea
jp
imull
int3
stc
int
iret
cmp
or
and
mov
jae
es
test
xchg
pop
mov
jae
imul
and
lds
push
xchg
sbb
fsub
fistps
lea
rol
push
popa
jecxz
mov
mov
sahf
fstp
das
mov
int
out
push
cmp
lcall
push
mov
lods
faddl
pop
inc
sub
cmc
int3
frstor
cmp
mov
imull
xlat
cmc
mov
iret
sub
out
xchg
push
call
shlb
dec
cmp
mov
outsl
in
int
sub
add
int
mov
fldt
fiadds
push
mov
xchg
cli
pop
mov
add
push
test
push
sahf
fstl
sbb
movsb
out
sbb
xchg
in
fisubl
and
sbb
sahf
xor
pop
dec
jae
ror
ds
mov
pop
out
or
jns
in
pop
nop
insl
lea
mov
ljmp
ds
imul
std
dec
int
xor
cmp
push
jb
or
fisubrs
rcr
adc
dec
sbb
arpl
push
push
test
inc
not
cmc
popa
mov
addr16
call
inc
jo
rolb
dec
in
jno
dec
mov
mov
loop
fldt
dec
call
jo
mov
scas
adc
sub
vmovupd
cli
inc
sbb
out
data16
ds
mov
mov
lahf
inc
int3
pop
sbb
loopne
jbe
clc
push
push
jns
sarb
gs
sub
add
cli
movsl
dec
sbbb
aaa
cmp
add
pusha
fsubp
pop
addr16
cld
fbstp
call
push
movsb
out
push
mov
stos
sub
rcll
cmp
dec
jge
xchg
push
int3
shlb
pop
outsb
leave
inc
out
dec
inc
fmull
pop
mov
popa
out
adcb
dec
pop
out
push
xchg
into
cwtl
pop
ds
jno
test
jae
imul
dec
add
int
mov
sbb
inc
mov
add
xchg
add
xchg
in
add
cmp
jmp
in
int
fildl
mov
mov
adc
mov
pusha
sub
rcl
js
int
dec
pop
out
or
jns
mov
test
sub
rcll
icebp
mov
in
sbb
pop
cs
mov
shlb
sbb
dec
lods
je
lahf
xorb
push
jbe
into
add
fwait
movsb
fstl
jo
shll
lds
popf
mov
mov
imul
arpl
test
imul
out
ljmp
push
xchg
sub
jae
and
cmp
rcll
nop
scas
jge
cmp
fstl
xchg
pop
add
sub
out
xchg
sub
fdivrl
jecxz
frstor
dec
add
push
rcl
or
sub
imul
add
pop
xor
adc
inc
pushf
jg
in
or
xchg
pop
dec
out
push
imul
add
test
cld
enter
rclb
fstl
push
cmpb
add
test
cmpl
inc
loopne
repz
loope,pt
mov
pop
scas
icebp
or
jne
stos
ret
push
into
leave
mov
mov
lods
push
lahf
dec
adc
cwtl
pop
nop
out
or
push
stc
jne
and
mov
leave
dec
test
aaa
shl
xchg
push
test
lret
imul
insb
je
inc
call
push
test
es
data16
arpl
aaa
mov
adc
ja
xchg
movd
jg
mov
testb
and
xchg
lret
or
insb
or
jp
in
mov
insb
and
pop
push
jbe
enter
inc
sub
scas
pop
ret
mov
aad
xor
xor
rorl
lahf
xor
cmc
shlb
popa
push
imul
dec
push
call
popf
jl
and
xchg
mov
dec
add
rcr
out
lock
ljmp
pop
aad
pop
test
and
dec
lea
adc
or
fldcw
dec
scas
je
repnz
mov
fldt
movl
out
xchg
sub
incl
sub
cs
pop
mov
rcrl
and
jo
repnz
das
pop
std
in
icebp
pop
xor
arpl
call
xchg
dec
mov
push
jl
andl
hlt
mov
aam
and
xor
sahf
jo
in
movsl
lahf
push
je
xchg
and
push
fs
or
pop
cmp
mov
rcrl
ret
enter
addr16
sbb
pop
cmp
bound
mov
das
rcll
mov
fldt
and
pop
push
inc
cltd
das
leave
sub
fs
int
or
and
in
lock
add
int
mov
fisubl
or
out
int
fcmovnu
inc
inc
jno
in
scas
inc
iret
jns
int3
sbbb
dec
add
dec
out
mov
and
mov
mov
fldt
sub
fcoml
shr
imul
inc
pop
ja
xor
mov
lods
cmpsl
push
pop
mov
js
sbb
jmp
adc
dec
imul
dec
add
int
add
daa
in
loop
mov
cld
pop
push
dec
add
sbb
adc
jnp
call
pushw
out
js
pop
dec
popa
lods
cs
imul
adc
outsb
mov
pop
fsubrl
clc
es
fldl
out
out
mov
out
leave
daa
add
mov
sub
popf
mov
int
pop
movsb
inc
in
inc
aaa
mov
fldt
fidivrl
cmovno
jecxz
fsubrs
std
fcmove
jecxz
add
mov
lods
mov
leave
add
das
mov
cmp
cmp
mov
sub
arpl
mov
mov
cmp
test
push
xorl
loopne
imul
loopne
ret
daa
mov
xor
ret
xor
mov
push
push
jns
into
pop
movsb
adc
lret
in
fs
pop
inc
fistpll
fcoml
out
and
xor
lods
push
xlat
mov
cmp
push
jae
or
sub
out
inc
sbb
adc
cmp
test
mov
or
push
push
fists
pop
cmp
xor
mov
lahf
dec
clc
imul
fs
or
pusha
movsb
imul
push
aas
in
fdivrl
imull
outsb
mov
pop
iret
cmp
xchg
and
sub
popf
fsubrs
or
rcll
adcl
int3
rcrl
out
adc
shrb
pop
sbb
sarl
ds
jmp
push
jp
int
xchg
les
mov
and
ja
pop
mov
mov
mov
add
test
inc
push
data16
in
push
cmpsl
test
lods
test
pop
mov
sub
pop
pop
jmp
jl
call
outsb
xor
mov
loop
lock
xchg
pop
inc
push
lock
jno
add
xor
outsl
test
ljmp
sar
clc
outsb
push
push
movsb
xchg
add
push
jno
andb
pop
add
mov
imul
popa
ljmp
jmp
dec
dec
jne
sbb
jecxz
cmc
loop
pop
xchg
popa
mov
outsb
inc
cltd
xor
or
ret
push
xor
sub
jns
sub
jmp
mov
leave
cmpb
pop
gs
pop
push
jnp
aaa
fadds
out
sbb
aad
xor
fucom
in
ja
pop
vrcpss
lret
int
jbe
xchg
push
or
mov
pop
addb
cmp
add
sub
dec
xchg
push
inc
outsl
std
and
loopne
shrl
jnp
dec
ret
pop
pop
insl
fidivl
mov
sbb
in
int
fstpt
push
out
daa
in
loopne
push
xchg
or
push
ficoms
add
add
add
loop
dec
mov
push
pop
mov
or
fldenv
pop
sub
psubd
add
xchg
aam
sti
call
gs
pop
lret
lock
push
xchg
in
es
add
pop
jno
decb
imul
in
or
or
fidivrs
push
jl
push
push
add
jl
sarb
jmp
and
adc
sub
dec
xchg
pop
jge
adc
push
xchg
into
out
push
ret
push
sahf
xor
ficoms
data16
int3
mov
pushf
cmpsb
mov
xchg
xchg
test
call
mov
mov
shll
mov
inc
int3
cld
cld
icebp
pop
xor
stos
into
add
jmp
int
sub
cmpsb
fadds
inc
xor
push
jo
pushf
add
push
mov
jnp
mov
rol
pop
dec
adc
dec
mov
cmpsb
repnz
idivl
cli
inc
jmp
std
push
les
sub
dec
and
or
dec
lods
xor
cmpsb
gs
into
add
sub
out
call
loop
jl
xchg
push
cmp
call
push
dec
adc
or
push
hlt
repz
call
enter
adc
mov
notl
fldt
int
les
and
cmp
sub
add
int
ret
loopne
pusha
mov
sti
mov
xor
call
in
out
call
shll
int
sbb
imul
in
cmp
aas
mov
hlt
sbb
dec
push
mov
xchg
in
mov
inc
pop
push
mov
js
inc
adc
mov
mov
dec
sub
pop
into
add
sub
or
add
test
shrw
push
fdivr
jge
in
icebp
pop
xor
sti
call
loopne
pop
lret
sbb
ss
cwtl
xchg
fadd
add
fldt
push
fldt
int
xor
fiaddl
lea
in
frstor
mov
out
or
clc
sub
fsubl
sub
rcrl
xorl
sub
lods
push
pop
cmp
pop
pop
jo
repnz
dec
push
pop
dec
insl
jecxz
pop
or
push
out
sti
addr16
pextrw
xchg
sbb
sbb
and
out
sub
pop
cmp
pop
sar
fiaddl
push
mov
mov
sub
fcoml
rorb
ljmp
lock
pushf
leave
jp
rcl
push
push
repnz
push
ret
in
xor
pop
test
mov
movsb
subl
mov
das
add
int
mov
lods
push
jg
and
and
jnp
xchg
jne
test
sbb
dec
mul
or
fcom
test
inc
ljmp
repz
outsl
out
stos
into
mov
mov
bound
mov
cmp
hlt
int
sub
jecxz
int3
flds
pushf
push
in
xor
lahf
stos
jmp
cli
cs
mov
scas
fwait
xchg
loop
sti
call
ss
add
icebp
mov
int
popl
scas
inc
xor
mov
add
imul
cmp
add
movsl
stc
jnp
mov
lods
popa
add
sub
sbb
dec
shll
pop
and
leave
cld
mov
fistpl
fwait
and
cltd
jp,pn
inc
sbb
adc
xchg
popa
and
daa
mov
fldt
mov
jo
scas
push
ret
ficoms
lea
rorb
push
mov
sbb
pop
xchg
ja
ss
push
xchg
pop
jl
repnz
jge
andb
fs
aas
ficoml
xor
popa
fbstp
loop
scas
test
repz
rcrl
xorb
mov
pop
xor
jmp
rcrl
sbb
xchg
sbb
xor
dec
es
or
inc
jnp
sbb
jmp
pop
push
out
icebp
bound
pop
inc
push
sbb
inc
push
mov
test
mov
out
pop
xor
add
aam
aam
out
sbb
scas
pop
movsb
imul
push
cmp
scas
xor
iret
cmp
fildl
pop
int
rolb
sub
cmp
xchg
loope
sti
call
leave
gs
ret
in
ficompl
fldl
aas
pop
push
ret
sub
sti
ds
cld
stc
dec
ficompl
out
int
fisttpl
jns
xor
loop
stos
loopne
jle
shr
jecxz
mov
ds
nop
lods
test
sarl
enter
shlb
out
xchg
std
cmp
adc
mov
mov
test
mov
js
std
push
fildll
sub
stos
mov
pop
ja
stc
pop
bound
mov
jae
scas
frstor
rcll
push
xchg
out
mov
cmp
mov
inc
push
jmp
xor
xlat
mov
cmp
jecxz
frstor
pop
js
sbb
jae
rcl
shlb
xchg
popa
sub
rcl
or
insb
fisttpll
testl
dec
movsl
lahf
cmp
sub
push
sub
arpl
call
cmpsb
xchg
int
push
mov
outsl
in
rcl
sub
add
int
mov
fldt
add
cli
das
in
cmc
mov
xchg
call
mov
hlt
popf
mov
loope
repnz
add
clc
das
test
mov
adc
test
jb
sbb
xchg
outsl
push
out
cmp
mov
int3
mov
add
sti
jns
int3
and
inc
pop
xchg
and
dec
dec
add
pop
dec
adc
xor
mov
test
push
aam
xchg
adc
and
xchg
and
push
je
in
aas
andps
nopl
fmull
pop
scas
jp
test
pop
test
adc
inc
push
enter
mov
fisubrl
fldl
pop
popa
inc
jno
ret
scas
frstor
and
adc
xchg
cmc
mov
js
mov
adcl
xchg
jecxz
rorb
sbb
mov
out
jo
and
sti
pop
fwait
in
or
out
push
popf
fidivrl
mov
jbe
idiv
sbb
inc
dec
sbb
cmp
adc
inc
jecxz
les
adc
jne
sbb
outsw
mov
sub
call
movsb
cmp
out
pop
push
stc
inc
mov
sbb
imull
or
push
cmp
int3
in
in
int
fldt
mov
fildll
loopne
ret
pop
fiaddl
and
sti
pop
jbe
or
mulb
mov
adc
scas
dec
pop
rcll
xor
psllq
out
ja
inc
sbb
fsub
stc
sub
addr16
out
les
and
shl
in
fbld
sub
sub
pop
dec
sub
pop
xor
sub
ljmp
mov
dec
arpl
or
pop
cmp
cmpsl
and
rcll
cli
add
fadds
fldt
mov
jae
rcl
push
shrw
cmp
in
fmull
fldl
cmp
lods
dec
and
push
mov
add
sub
jmp
jg
ret
mov
mov
test
mov
outsl
shlb
jge
arpl
icebp
bound
mov
add
cmpl
ret
scas
frstor
shlb
mov
dec
push
sub
data16
mov
mov
imul
or
scas
fdiv
call
adc
push
pop
scas
dec
imul
xchg
mov
lret
je
inc
in
dec
mov
sub
jae
jl
mov
dec
jo
xor
in
jo
xchg
adc
inc
lret
push
aas
adc
xor
push
fstpl
push
dec
mov
sbb
scas
shr
xor
mov
inc
stos
pop
inc
int
pop
dec
push
pop
fcoml
pop
mov
xor
int
imul
cmp
add
fldt
add
push
ret
stos
dec
cld
mov
sub
mov
ds
mov
in
jp
mov
fidivs
and
mov
xor
ret
adc
mov
jle
imul
movsb
add
inc
mov
xchg
nop
push
leave
fists
pusha
pop
xor
dec
pop
jae
push
fisubs
rcr
sbb
and
hlt
dec
icebp
shr
and
std
and
pusha
cmp
and
in
and
dec
rcl
add
test
fistpl
stos
adc
jle
shr
fmull
fisttpll
jae
sbb
adcl
push
imul
scas
sahf
mov
or
xchg
icebp
pop
jg
clc
jb
jg
pop
xor
ja
mov
adc
pop
das
sbb
fndisi(8087
ja
ret
push
inc
dec
mov
popl
jno
jl
jecxz
sbb
adc
imul
leave
push
sub
lods
int3
loopne
pushf
mov
stos
mov
push
inc
stc
clc
cmpsw
lahf
push
add
pop
mov
outsl
in
fldt
lahf
sar
dec
add
int
mov
pop
mov
mov
fldt
icebp
jg
mov
push
loopne
jecxz
in
jp
fimull
lods
ret
mov
pop
sub
push
xlat
call
rcll
push
xorl
xchg
cmpsb
rcrb
in
repz
mov
or
jnp
sbb
aam
popa
lods
mov
iret
lret
xor
ja
andl
jmp
mov
jl
lcall
call
mov
xchg
inc
fldlg2
jmp
leave
push
addr16
imul
pop
add
push
adc
imul
dec
add
int
or
dec
or
push
lahf
xchg
dec
mov
test
in
fdivrl
fldl
jne
rdtsc
sub
arpl
call
or
cltd
jne
and
jne
mov
inc
stos
stos
ds
mov
cmp
inc
sub
rcrl
ja
mov
mov
in
lds
shll
shl
cltd
sub
add
sub
mov
sti
dec
add
cmc
and
ret
cmp
loop
mov
pushf
lret
sub
adc
add
sarb
vprotd
scas
dec
ret
and
cmpsb
les
fldl
push
mov
imull
adc
and
xor
roll
pusha
xor
fimull
fisubrs
fistpl
stos
push
loopne
scas
iret
in
faddl
xchg
repz
cmp
mov
lahf
aam
lahf
jmp
imul
push
or
push
outsl
cmpsl
rcll
jp
out
dec
bnd
xchg
cli
push
inc
jg
and
dec
fsub
mov
cmp
mov
and
adc
icebp
mov
fwait
and
sarl
pusha
pop
mov
inc
ficoml
popa
jl
int
inc
pushf
jno
in
xor
or
pop
int
xchg
loope
add
int
rorb
mov
xchg
in
sti
call
cwtl
dec
adc
or
cmpsb
stc
test
nop
xchg
rorl
shll
fldl
jle
mov
lock
std
dec
movsl
lahf
dec
and
adc
fstps
pop
pushw
out
stc
ds
nop
scas
xor
lock
mov
add
int
sar
ljmp
cmp
stos
in
jecxz
int
fistpl
sub
fistps
push
sub
imul
mov
test
jae
pop
stc
cs
fdivs
mov
imul
push
pop
fstl
mov
mov
cmp
test
mov
cmp
int
loope
adcl
mov
mov
pushf
sti
jmp
imul
add
bound
lret
mov
pop
fs
push
pop
push
imul
dec
add
int
add
mov
fidivrs
test
fsubrl
fisttpll
imul
sti
out
push
pop
mov
mov
fldt
mov
sub
jmp
out
lock
or
ss
xor
or
dec
jne
add
push
cmpsb
pop
test
insl
push
je
ret
ds
and
xchg
addr16
je
ds
popf
mov
leave
sti
pop
inc
adc
ljmp
and
jbe
dec
ja
cmp
jnp
cmp
mov
in
int
mov
cmp
push
fstl
arpl
fldl
cmp
xor
mov
aaa
dec
fbstp
adc
pop
cmp
push
or
shl
cld
mov
pop
jnp
jl
or
and
lret
sub
jmp
xchg
cli
push
cwtl
aad
popa
mov
add
fistl
pop
mov
sbb
jno
jl
aad
iret
cmp
dec
bsr
pop
xor
cmp
and
repnz
push
adc
cmp
sub
lods
int
cmp
aaa
sub
hlt
int
pop
cmpsl
and
sub
test
sbb
push
rcl
bound
pusha
inc
push
nop
or
stos
orl
sub
hlt
js
lret
call
test
mov
add
mov
sub
dec
pop
jne
add
jmp
fldt
dec
std
xor
jb
in
int
fcmovnb
enter
rol
pushf
push
and
rcl
xor
repz
testl
jmp
jp
imull
dec
imul
scas
femms
loop
frstor
imul
lret
call
pop
jno
dec
sbb
fstpl
mov
ret
jb
clc
out
push
cli
je
jb
nop
push
push
je
aam
in
xchg
rolb
jecxz
les
push
jecxz
mov
xlat
lods
imul
mov
mov
shll
add
lahf
test
cmp
leave
pop
ljmp
call
aad
lret
sub
jb
movsl
leave
jle
js
mov
movsl
dec
xchg
inc
in
in
inc
xchg
inc
adc
sbb
mov
push
dec
sahf
fisubs
clc
cs
inc
flds
ljmp
fbld
leave
je
rcl
mov
rcl
out
mov
sub
inc
adc
pop
mov
mov
fldt
push
in
call
imul
cli
lret
sub
push
cmpsl
frstor
imul
mov
dec
dec
xor
sti
lcall
popa
mov
sbb
es
xor
rcrb
push
mov
add
imul
or
jb
rcr
sti
insl
mov
pusha
dec
frstor
cmp
adc
push
mov
icebp
int
inc
mov
xor
and
rcl
xchg
mov
inc
in
enter
pop
xor
sbb
and
insl
lds
pop
ss
xor
out
mov
cmc
cmpsb
mov
lods
bnd
insl
push
sahf
inc
fistps
and
enter
loop
sti
call
cmp
mov
loopne
add
fmull
jb
pop
pop
movsl
mov
push
fldt
fbld
stos
inc
out
ljmp
je
int
cmp
pop
cld
cmp
out
xor
loope
int
fistpl
movsb
dec
sub
enter
pop
jno
dec
and
dec
adc
or
leave
jg
xchg
jo
mov
pop
cmpb
fdivrs
push
leave
fucomi
and
ficoms
or
lahf
pop
dec
adc
pushf
icebp
out
cmp
xor
xlat
popf
out
adc
jmp
jae
adc
out
or
pop
lods
leave
test
mov
push
jecxz
push
or
dec
imul
adc
push
jne
and
pop
scas
pop
insb
or
loopne
out
push
sbb
imul
addr16
loop
sub
lea
sbb
lss
test
inc
aam
sub
xor
decb
sub
and
mov
out
or
ds
mov
inc
mov
iret
dec
test
in
lock
push
ret
push
dec
addr16
or
adc
mov
jae
adc
xchg
mov
jne
out
xor
lcall
push
nop
jl
adc
pop
inc
sub
push
movsl
frstor
cmp
imull
es
pushf
iret
add
mov
test
int
xor
fwait
clc
aam
lods
jne
push
adc
jmp
data16
xchg
pop
inc
sub
fwait
mov
int
movsb
frstor
ds
dec
jp
imull
loop
dec
xor
xor
mov
test
les
sti
xchg
mov
mov
test
jl
or
add
jbe
inc
sub
mul
int
pop
test
scas
cmp
test
and
repnz
xchg
ffreep
cli
enter
sbb
add
xor
push
push
cmp
rcl
imull
movb
mov
sub
icebp
notl
fldt
and
movsb
pop
rcl
add
test
mov
dec
add
call
sub
rcl
subb
add
in
jmp
sti
jo
ljmp
mov
cmp
imull
addl
incl
cmp
cld
call
les
call
xor
les
ret
mov
pop
pop
adc
add
ljmp
push
cwtl
pushf
and
icebp
pop
lret
inc
pop
pusha
jne
add
add
pop
sbb
fmul
sar
shr
js
inc
cmpl
sub
xorw
adc
jne
sbb
ss
push
mov
or
dec
pop
xchg
cmc
test
dec
jmp
and
jo
cmp
xor
stc
sub
sti
call
cmp
push
in
push
sub
pusha
sub
rcl
rolb
les
sub
out
pop
push
mov
imul
sub
test
js
mov
iret
or
mov
test
push
adc
repnz
rcl
add
test
xchg
xor
mov
inc
and
sub
imul
adc
inc
push
adc
push
ds
jl
lods
imull
sbb
mov
iret
xor
inc
fmuls
mov
cld
xor
jecxz
lahf
fisttpll
lahf
ss
xchg
cli
stos
mov
fs
or
pop
and
int
ljmp
pop
push
test
mov
test
bound
dec
sbb
mov
imul
scas
or
shll
mov
pop
push
jo
into
movsb
mov
shrb
jbe
mov
das
call
frstor
xchg
frstor
imul
sub
mov
cmp
lahf
push
pop
jbe
push
shrb
scas
mov
mov
add
dec
xchg
jg
cmp
loope
push
out
pop
outsb
pop
inc
loop
outsl
fld
push
cmp
sbb
xchg
lea
out
enter
mov
into
add
sub
cmp
add
cs
jb
outsl
roll
pop
inc
cld
call
leave
lea
mov
push
push
jbe
sahf
sub
cmpsl
xor
pop
insb
scas
cltd
or
sbb
fisubrs
push
jne
inc
out
sbbl
ret
add
mov
aam
imul
aaa
fistpll
imull
loopne
test
iret
adc
jo
pop
adc
sub
lea
mov
loop
frstor
imul
push
xchg
cmc
shl
or
jbe
out
arpl
aad
adc
cmp
push
sub
mov
int3
mov
lahf
in
ret
mov
imull
push
sbb
mov
int
cmpsl
stos
frstor
sbb
ja
xchg
add
int
notl
push
jle
xchg
aas
xlat
xor
in
repnz
or
outsb
dec
inc
call
xchg
mov
enter
sub
xchg
pop
dec
mov
jp
out
jmp
dec
fldt
dec
push
lods
enter
inc
sbb
enter
mov
lock
movb
fnstenv
xchg
jge
lock
mov
insl
cmp
out
adc
sub
sbb
decl
xchg
pop
pop
add
lea
xchg
xor
loopne
int
fistpl
mov
ljmp
out
movsb
xlat
fmull
hlt
mov
lea
les
shlb
dec
aas
test
pop
dec
cmpsl
xchg
daa
mov
push
in
sbb
add
jne
push
iret
repnz
sbb
pop
inc
sub
dec
dec
cmp
imull
jle
dec
mov
aaa
lock
aam
bnd
and
sti
cmp
leave
mov
cwtl
push
je
rcrb
lods
cltd
sbb
lock
cltd
jb
xchg
cmc
das
and
and
sbb
mov
aad
mov
or
mov
or
jbe
rolb
rolb
rolb
arpl
testl
dec
imul
loop
cmp
fwait
push
or
insl
movsb
andb
repz
vpsadbw
mov
jno
sbb
push
inc
cmpsl
cmp
fcmovu
pop
xor
add
out
mov
ret
dec
ljmp
cmp
add
cld
in
int
ljmp
sbb
fisubs
notl
fldt
mov
mov
mov
cmpsl
pop
movsb
pop
mov
incl
mov
xchg
test
mov
es
inc
pushf
movsb
scas
in
pop
mov
stos
stc
xchg
stc
iret
data16
mov
cmp
push
xor
rcr
sub
mov
ret
pop
xor
daa
popa
call
inc
negb
mov
insl
divb
or
and
inc
aam
xchg
test
cli
cmp
jecxz
rclb
xchg
sbb
fs
pop
dec
imul
and
imul
dec
add
int
fidivl
ja
rcl
fstps
or
lods
xor
test
outsb
ss
xor
notl
fisubrl
and
lock
add
test
and
push
xchg
repnz
insb
inc
mov
or
lods
ljmp
mov
lahf
and
pop
call
leave
mov
std
into
lds
call
lock
mov
jne
pop
fnstsw
lret
xor
popa
inc
fcomps
adc
pop
mov
fldt
mov
and
sbbl
iret
push
sti
leave
daa
add
xchg
data16
xlat
test
int
sub
push
in
jecxz
frstor
leave
sbb
sub
leave
jbe
rcl
mov
add
aam
dec
and
pop
data16
int
pop
cmp
inc
xlat
ret
pop
in
int
fistpl
lods
push
fmul
notb
clc
xchg
in
mov
pop
push
dec
fbld
mov
ficompl
ret
popf
lret
pop
dec
sub
jb
fnstsw
push
cmpl
mov
xchg
adc
fsubr
cmpsb
sbb
mov
add
sub
pop
add
shlb
push
pop
mov
jbe
mov
push
rcll
scas
leave
xchg
sbbl
mov
sub
adc
ss
pop
nop
push
sar
int
aaa
decb
imul
subl
lahf
leave
test
test
sub
inc
call
or
push
je
lret
bnd
jl
pop
out
mov
ret
push
xchg
push
sbb
ja
xchg
pop
cmp
jae
push
jmp
hlt
imul
push
pushf
aad
incb
nop
xor
mov
arpl
outsl
into
mov
jo
inc
in
fimuls
fstpt
sub
mov
int
jbe
xchg
adc
incb
movsb
sbb
inc
sbb
xor
mov
outsl
sub
add
in
sti
lret
jne
mov
fdivs
mov
push
mov
push
mov
outsl
xor
xor
and
iret
into
add
test
stos
sub
adc
xchg
cli
pop
jmp
jne
imul
adc
repz
push
or
sbb
fxch
jmp
inc
jne
inc
in
adc
mov
xlat
repnz
xorl
pop
rcrl
insl
dec
ret
ljmp
shl
mov
xchg
dec
mov
jae
xor
adc
lgdtl
dec
ret
out
xor
sarl
xor
popa
fidivs
push
push
cmp
pop
lods
rol
pop
imul
mov
adc
sti
jb
rcl
add
test
sub
push
jecxz
call
ret
or
sbb
es
jae
push
pop
movsb
aaa
or
pop
mov
fldt
sti
lahf
mov
push
loopne
out
movsb
rorb
add
add
inc
push
xlat
sti
xor
cli
jne
add
sti
call
push
lods
imul
les
pop
outsl
in
push
out
add
pop
xor
sub
xchg
add
mov
bnd
call
inc
lea
aas
lea
xchg
jp
imull
mov
cmp
outsl
fs
inc
rcl
add
test
inc
in
icebp
or
imul
rcl
imul
shr
push
out
popa
data16
data16
jmp
ljmp
cmpsl
xlat
jl
decb
push
push
outsb
pop
inc
daa
lea
loopne
push
imul
dec
add
int
jns
mov
pop
mov
scas
xchg
lods
popf
pop
sub
push
sbb
mov
clc
sub
cmpsb
fcomp
shr
push
or
xchg
les
jnp
xorl
cmp
mov
lcall
popa
loopne
enter
ret
mov
add
inc
add
mov
loopne
pop
cmpsb
ret
mov
fldt
push
rcrl
pop
dec
cmovo
adc
sub
std
sub
loop
lods
scas
in
push
in
ret
in
push
cmpsb
sbb
outsl
push
pop
mov
jae
inc
jp
add
cmp
adc
imul
dec
add
mov
enter
leave
imul
and
rcl
mov
or
mov
call
frstor
sub
frstor
cmp
sbb
fistpl
rorl
mov
sub
rcl
movb
adc
dec
shr
cmp
cld
add
leave
repnz
insb
sbb
movsl
stc
cmp
test
mov
inc
je
and
fwait
cli
adc
int3
push
mov
sahf
fisubl
lret
add
mov
lods
push
xor
es
cmc
cs
loop
sub
pop
dec
sbb
pop
sbb
sbb
push
je
and
xchg
and
lods
pop
popa
loopne
mov
pop
ja
fs
inc
jns
cmp
sbb
pop
pop
inc
idiv
xor
add
movsl
lahf
push
std
imul
pop
fisubrs
in
jge
addr16
loope
sti
call
leave
push
ds
in
jmp
mov
add
or
add
test
adc
or
js
out
cmp
cmp
or
loope
out
lock
je
into
sub
pushf
mov
int
pop
cmpsl
mov
or
test
int
cmp
sub
out
test
imul
clc
jmp
fimull
and
sti
pop
nop
in
push
mov
into
xor
push
sbb
add
inc
shr
lods
xor
ror
in
push
dec
aaa
push
inc
shll
mov
outsl
int
nop
pop
out
in
call
imul
add
fadds
aas
dec
jmp
jo
mov
lea
stos
incl
push
loop
js
mov
pop
inc
sbb
pop
dec
int
dec
push
dec
mov
out
movsb
mov
shr
imul
add
cmp
addr16
imul
popl
fdivrs
push
loopne
jle
shll
xchg
stc
fists
hlt
into
fcoms
xchg
push
idivb
jnp
sbb
push
lret
push
xchg
sub
push
incl
shlb
dec
imul
jle
inc
jmp
jge
xchg
ja
and
es
popa
ja
imul
mov
ficoml
add
xchg
jbe
into
in
ljmp
push
out
popl
pop
ficompl
out
and
add
jns
mov
out
jo
lods
lds
call
aaa
dec
fisubl
push
adc
rorl
loope
jp
imull
ss
fcmove
add
push
cmp
pop
dec
es
inc
mov
push
push
jno
dec
pop
mov
cli
mov
loope
fs
sub
push
sub
imul
popa
in
mov
fisubs
testb
xlat
bound
shl
inc
xchg
.byte
sti
