daa
outsl
and
adc
mov
jp
std
xor
lahf
dec
dec
aad
push
pop
pop
pop
jo
adc
fdivl
call
jge
jbe
adc
rorl
cwtl
jae
adc
xchg
stos
xchg
and
push
adc
cld
push
arpl
dec
sbb
stos
xchg
or
daa
mov
mov
mov
push
adc
je
adc
fbld
fs
test
mov
pushf
push
jle
jno
outsl
add
push
dec
int3
jae
adc
les
les
adc
in
sbbb
pop
dec
lret
xchg
jecxz
mov
pop
push
loope
scas
dec
lods
inc
xchg
pusha
in
lods
int3
sarl
aad
push
add
inc
mov
das
shlb
into
mov
inc
pop
cld
push
cmp
sbb
sbb
dec
test
and
sbb
imul
and
mov
cmc
dec
jmp
xor
shlb
scas
inc
xorb
sub
shl
sbb
add
mov
xchg
sub
or
aas
sub
adc
ret
pop
adc
inc
lcall
and
repz
adc
adc
and
adc
test
invd
adc
jle
jae
adc
popf
mov
and
xchg
xorb
nop
call
add
and
test
invd
adc
inc
test
adc
stc
add
or
push
cld
adc
movsl
ret
mov
adc
lret
mov
xchg
stc
sbb
jae
adc
out
xor
movsl
outsb
push
mov
push
scas
imul
push
xchg
daa
push
inc
push
hlt
mov
xchg
in
and
aam
push
xchg
insl
mov
dec
ja
cs
es
mov
cwtl
inc
push
mov
es
adc
xlat
mov
push
xchg
clc
xchg
imul
in
loop
adc
scas
stos
mov
stos
sub
popf
rorl
shrl
jne
arpl
outsb
mov
mov
sub
in
sti
addr16
ja
adc
push
xor
repnz
mov
push
fsubrs
out
stos
inc
std
push
sub
pop
pop
add
push
lea
sub
in
cmc
clc
jg
inc
push
sti
pop
sbb
fimuls
ret
pushf
cmpsl
xor
int
aas
dec
add
or
jbe
dec
std
inc
cltd
cltd
cmpsb
mov
enter
jo
cwtl
jnp
pop
aad
jo
adc
lea
out
jl
xor
pop
ss
push
adc
test
pop
or
cmp
mov
shlb
mov
cmp
adc
jo
dec
decb
mov
fsubrl
jbe
pop
inc
rorb
pushf
cmp
lock
inc
std
popl
std
pushf
xor
mov
aam
inc
jo
push
adc
pop
mov
fistpll
mov
test
hlt
adc
adc
fisttps
mull
add
adc
test
push
adc
pop
add
adc
loopne
pop
cmc
lret
mov
adc
pop
inc
add
mov
cmp
add
or
sbb
jg
dec
fildll
ret
popa
mov
rclb
jo
adc
xchg
xor
pop
push
xlat
cmp
rcrb
push
ret
gs
ja
or
outsl
push
push
or
push
push
push
push
mov
push
adc
mov
inc
and
int
push
adcb
mov
mov
es
adc
lahf
mov
mov
xorb
lds
or
cli
cmc
adc
mov
mov
and
cmp
mov
or
inc
addb
call
ja
adc
lcall
icebp
test
adc
mov
adcl
scas
push
rolb
stos
mov
jae
movb
movsb
or
add
push
sub
inc
out
xchg
dec
xchg
push
jb
shll
mov
push
pop
insl
fnstsw
clc
imul
lods
xchg
rcrb
xchg
scas
mov
mov
jo
adc
das
pusha
jp
add
or
imul
dec
fidivl
test
mov
mov
outsb
add
mov
and
adc
pushf
pop
js
push
ljmp
pusha
xor
loop
jbe
leave
mov
adc
ds
jns
mov
divl
mov
sub
mov
repnz
fisttpll
ret
cs
popa
jae
popa
xor
mov
mov
push
adc
gs
subb
add
imul
mov
cli
add
ja
dec
xor
push
adc
and
imull
inc
in
jne
pop
push
inc
or
testb
mov
mov
sub
aas
pop
xchg
arpl
in
adc
adc
mov
loop
mov
jne
rcl
int3
mov
daa
jp
push
fwait
rcll
mov
hlt
icebp
pop
pusha
popa
mov
sbb
mov
xchg
mov
imul
push
dec
jns
jo
adc
stos
mov
in
mov
inc
lret
lret
ret
or
jmp
mov
xorl
cmpsb
add
dec
cmc
cmp
jbe
adc
push
adc
and
cld
mov
fwait
and
loopne
fs
pop
cli
cmp
or
push
lock
sbb
adc
adc
mov
sub
lea
mov
ret
dec
nop
jo
adc
stc
xor
xor
mov
and
push
ret
push
or
arpl
sbb
pushf
cli
jno
add
jmp
rorl
push
mov
lea
cltd
and
jge
xchg
pop
cmc
loop
mov
xchg
sbb
mov
cs
hlt
sbb
adc
ret
insl
repz
push
pop
jno
scas
negl
pop
rcrl
dec
movsb
dec
cmp
lods
call
enter
dec
and
xchg
popf
xchg
addr16
or
adc
adc
push
xchg
fbstp
in
pop
popa
pusha
ljmp
mov
loopne
mov
scas
cli
cmc
cld
imul
lea
mov
push
inc
popa
cmpsb
dec
pushf
mov
and
adc
int
pop
and
pop
insl
cmp
push
cmpsl
push
adc
xchg
sub
ds
jo
adc
pop
pop
insb
fidivl
jo
adc
mul
and
and
movb
push
and
pop
insb
xor
adc
arpl
popa
or
add
push
lods
pop
out
and
push
adc
xchg
test
xchg
jb
enter
shrb
fadds
adc
ds
adc
sbb
aam
push
and
inc
dec
jbe
or
adc
mov
adc
jno
sbb
aaa
mov
movb
lahf
ret
jo
gs
std
mov
adc
and
jns
shr
push
lods
mov
je
adc
in
and
inc
jmp
push
sub
mov
push
repz
fildll
sub
cmpsl
dec
pushf
imul
add
or
adc
mov
ja
adc
in
ja
adc
arpl
popa
or
sub
lea
adc
test
scas
dec
xchg
and
push
cmpsl
cmpsb
push
xor
xchg
into
jnp
inc
clc
add
add
fnstcw
cmp
dec
push
movsb
mov
mov
pop
lds
aaa
mov
lods
sbb
xor
lods
mov
das
aad
int3
loopne
orb
push
ja
pusha
lret
hlt
adc
mov
test
insl
lds
lea
adc
outsb
or
lods
mov
push
jno
fistpll
sub
movsb
fucomp
outsl
popf
mov
lret
or
push
mov
adc
inc
shll
stos
pop
mov
xor
test
inc
xor
push
push
sub
jb
xor
jle
in
mov
ret
imul
movsb
xor
add
inc
arpl
xor
ja
lock
je
and
nop
nop
popl
fistl
and
jl
arpl
jecxz
mov
loop
pusha
insb
add
sub
sub
test
mov
mov
dec
mov
sbb
cmpxchg
popf
xor
add
mov
adc
in
push
divb
sub
fs
jecxz
fisttpll
pop
aas
ret
or
int3
xchg
and
ror
add
adc
mov
inc
mov
iret
jecxz
orl
sbb
fistpll
outsl
push
push
cmpsb
and
lret
inc
add
adc
jo
adc
fdivs
std
mov
shrl
dec
jle
mov
sti
stc
cli
jmp
and
insb
xorb
pop
pop
sub
sub
pop
jl
dec
dec
jp
pop
xorb
rcll
stc
xlat
jns
shrb
lea
out
push
cmpb
pop
pop
cmp
xchg
dec
and
mov
inc
sbb
lods
jg
lret
xor
test
enter
jnp
jno
popa
mov
fnstenv
sub
cmp
stc
add
popf
push
sahf
movsb
in
mov
cld
dec
and
jo
adc
cs
jnp
sbb
xlat
aas
fwait
cmpsb
xchg
xlat
outsl
mov
sbb
adc
add
sub
fnstenv
add
mov
cmp
mov
xchg
sbb
jo
adc
push
sub
jle
push
pop
add
lock
push
xor
aad
inc
daa
into
sbb
mov
enter
movsb
or
hlt
loop
shrb
scas
mov
sbb
test
popf
dec
call
enter
sub
hlt
cli
cmc
shrb
dec
js
adc
sbb
jo
adc
aad
test
dec
mov
popa
sbb
clc
push
cmp
scas
xchg
push
faddl
cwtl
dec
pusha
gs
loopne
addb
or
sbb
insb
fidivs
pop
cmp
rolb
inc
adc
cmpl
mov
insb
scas
mov
test
xor
or
jmp
fstl
mov
sbb
loopne
aas
mov
popa
adc
jb
inc
int3
add
jbe
add
popa
lds
adc
dec
pop
mov
xchg
cmp
adc
xchg
push
inc
xlat
call
dec
mov
out
pop
xchg
dec
xchg
and
rorl
shr
in
int
jns
inc
pop
pop
rolb
inc
mov
loopne
xor
mov
test
dec
setbe
popa
or
jns
fwait
mov
mov
cwtl
das
shrl
dec
sbb
pop
dec
fisubrs
pop
loopne
push
lret
pop
jg
and
pop
jb
shl
imul
sub
loope
scas
stc
xor
or
mov
pop
and
or
jb
jg
filds
sub
outsb
mov
and
inc
addl
mov
scas
xchg
pusha
push
jp
mov
mov
fstpl
pop
pop
pushf
fcom
leave
pop
mov
xchg
mov
sub
js
adc
daa
xchg
push
jae
je
ret
add
push
adc
push
std
insb
sbbl
shr
push
repnz
mov
inc
pushf
pop
pop
int
aam
icebp
push
adc
lret
inc
lret
cmpsb
inc
xchg
mov
cld
pop
inc
inc
dec
incb
shlb
pop
dec
add
jns
gs
jge
mov
mov
dec
or
mov
shll
pop
add
add
push
adc
mov
adc
lods
push
push
or
repnz
imul
sbb
inc
mov
jmp
jg
rcrb
scas
sub
fnsave
cmp
jecxz
ljmp
imul
inc
mov
cli
pusha
sahf
lcall
aad
push
addr16
imul
jmp
verr
push
sub
rclb
movsb
leave
cltd
push
lret
xlat
sub
xor
nop
sbb
inc
in
pop
pop
outsl
popf
daa
push
lods
pop
mov
adc
fisttpl
sbb
push
aam
mov
mov
or
sub
mov
fxam
ds
pop
das
jo
jo
adc
inc
pop
clc
roll
sbbb
fbld
xchg
pop
jb
mov
lods
ret
jo
adc
mov
fdiv
jns
sti
int3
cmpsb
cmp
pop
cmc
outsl
cmp
xchg
and
mov
icebp
xor
arpl
xchg
pop
in
inc
aas
ret
hlt
mov
cld
adcl
je
xor
nop
int
and
push
popf
mov
mov
rcrl
pop
or
out
or
in
ja
mov
imul
jne
in
out
pop
daa
dec
and
sahf
inc
in
mov
imul
test
cmp
mov
push
xor
jbe
push
jg
pop
xor
push
mov
shrb
xchg
mov
jne
and
mov
add
jge
adc
mov
mov
sub
push
insl
adc
cmp
inc
xor
inc
and
sbb
ror
xchg
cmp
inc
or
and
lods
test
loope
push
or
inc
cltd
cmp
sub
movsl
push
jmp
mov
xor
testl
imul
cmp
push
adc
mov
fdivs
xor
adc
dec
daa
jbe
dec
arpl
sbb
call
push
stos
push
sub
out
mov
aam
mov
icebp
or
ja
vsqrtps
and
cmpsb
in
dec
jecxz
inc
fcmovbe
mov
mov
decb
popa
es
mov
roll
stos
pushf
mov
cmp
mov
jl
clc
cli
cmc
cs
and
mov
mov
sub
sbb
or
jecxz
sub
loopne
pop
xor
dec
xchg
push
jb
mov
stos
dec
leave
mov
addr16
jbe
or
dec
in
test
and
jns
enter
mov
nopl
sti
fidivrs
bnd
cmpsb
sbb
jnp
fbstp
xchg
push
pop
jne
mov
xchg
lret
sbb
or
mov
add
movsb
ret
gs
cwtl
and
bound
inc
aad
lret
int
push
push
push
pop
inc
jnp
fcoms
sahf
das
dec
xchg
push
inc
push
and
inc
sub
insb
rorl
test
pop
loopne
cmpsl
sbb
test
mov
sbb
xor
popa
nop
mov
and
jp
mov
movl
enter
loop
jmp
loope
inc
fadd
mov
xor
fcomps
sti
clc
mov
mov
xchg
mov
in
or
cs
ljmp
xchg
mov
testl
es
cwtl
xorb
xchg
mov
mov
push
in
adc
xchg
mov
aas
inc
cmp
pop
dec
fwait
sub
adc
inc
dec
test
cmp
inc
or
jo
sub
or
lock
add
push
xchg
dec
out
jb
in
enter
scas
scas
imul
cmpsl
in
cmp
je
add
xor
or
leave
icebp
stos
mov
xorb
sbb
mov
inc
lods
pusha
es
aas
lret
mov
out
xor
dec
fisubs
mov
push
faddl
js
xchg
sbb
add
push
pop
test
rcll
pushaw
filds
stos
sbb
enter
inc
or
mov
pushl
orb
icebp
mov
imulb
sub
push
stos
dec
hlt
std
jnp
fwait
movsl
and
dec
xchg
push
push
cmp
minps
mov
adc
mov
clc
out
stos
or
sub
and
adc
push
sub
out
leave
adcl
pop
lock
mov
push
loop
inc
pushf
pop
inc
pop
and
dec
sub
pop
clc
lret
mov
sbb
xorb
mov
das
fnstenv
push
mov
add
dec
mov
dec
mov
xchg
cmc
push
xchg
in
push
or
jb
in
adc
mov
rcrl
jg
test
mov
loop
ficoml
fsubl
sti
pop
fs
outsl
lahf
xchg
icebp
mov
pop
sub
mov
stc
fmull
clc
mov
jno
and
frstor
mov
ds
dec
dec
add
xchg
lret
sti
sub
and
xchg
mov
add
mov
std
fmull
add
lods
ss
push
mov
stos
jns
mov
mov
adc
push
std
mov
loop
test
cs
xchg
and
lods
adc
lea
mov
cmp
adcl
loopne
dec
xchg
and
nop
push
mov
ror
sbb
outsl
fbstp
repnz
ljmp
sub
xchg
and
push
pop
cmp
jbe
push
and
mov
xchg
aam
push
xchg
imul
insb
push
jae
mov
inc
add
stos
pop
push
lcall
push
mov
mov
and
outsl
fists
or
cmc
inc
aam
adc
sub
dec
xchg
sub
inc
shll
or
mov
fbstp
adc
and
lock
inc
xchg
sub
into
arpl
add
mov
cli
xor
mov
xchg
cmpsl
xchg
popf
sub
xchg
lds
jmp
movsl
mov
push
mov
or
cmovno
inc
and
arpl
fistpll
aam
std
cli
jg
mov
xchg
xor
pop
insl
movsb
pop
mov
repnz
popa
adc
fistpll
cmp
xor
jg
xor
jmp
fistpll
xor
outsl
or
and
sti
sub
pop
push
push
test
ss
int3
or
idiv
sti
jecxz
fisubrl
sub
shrl
subps
loopne
clc
mull
fnsave
addl
inc
xchg
sub
push
mov
mov
movsl
cmp
lods
mov
subb
lods
push
mov
outsl
fidivs
push
or
dec
mov
mov
idivl
xchg
fs
cs
nop
cs
mov
pop
pop
and
mov
andnps
pusha
mov
dec
jmp
adc
xor
in
push
cmpl
ja
roll
dec
notl
rcr
insl
mov
aad
popa
mov
push
add
out
xchg
dec
out
ffree
mov
lods
daa
scas
scas
mov
cmp
jl
ret
add
sub
inc
pop
leave
mov
and
in
jae
or
xor
jmp
mov
xchg
push
sub
int
add
idivl
mov
stos
xchg
sub
push
cmpsb
fisubl
jp
insb
fistl
icebp
and
adc
fs
jp
sbb
xor
and
sub
lret
or
stos
cmp
andl
dec
mov
mov
insb
outsl
popf
repnz
fnstenv
xchg
lock
xor
cmpsb
lahf
je
std
ljmp
push
adc
xlat
xor
push
xchg
pusha
rcll
test
ret
stc
cli
push
test
roll
push
adc
xor
stos
pop
rcll
rcrl
jo
adc
mov
sub
out
or
loopne
scas
enter
and
jae
sbb
ffree
mov
int3
das
lods
xor
dec
mov
mov
jg
ret
pop
sub
out
mov
fld
shr
jecxz
mov
mov
stos
test
jmp
idiv
imul
add
mov
mov
shll
aam
in
inc
jl
push
cmp
rcl
jbe
xlat
mov
in
insl
add
lock
mov
fildl
addr16
mov
lret
cs
fneni(8087
imul
inc
sub
mov
in
stos
pop
in
es
leave
pop
jmp
test
sti
aad
ja
mov
mov
push
shlb
pusha
xlat
jmp
jne
jecxz
jmp
fistpll
in
cli
cmc
popa
and
and
mov
and
push
mov
shrl
shl
std
in
inc
adc
push
and
pop
lcall
pop
and
push
mov
rcr
or
outsl
lods
int
idiv
std
in
mov
out
and
test
outsb
aam
pop
cmpsl
dec
sbb
cmp
enter
pushf
jne
adc
jne
dec
xchg
push
sub
mov
mov
out
arpl
std
add
mov
push
movsb
aas
lock
xchg
and
lods
pop
movl
sbb
mov
es
mov
and
fcomps
jl
outsl
ffreep
clc
add
les
adc
insb
shrb
shrl
xchg
push
sub
mov
mov
sub
outsl
fisttps
mov
add
push
movsb
cmp
addr16
xchg
and
movsb
pop
mov
outsb
lea
jg
pop
add
adc
sub
call
xchg
nop
rorb
mov
sbb
cli
cmc
pusha
das
gs
mov
xchg
outsb
jle
and
jo
adc
shll
addl
das
push
and
inc
out
dec
fadds
inc
xchg
sub
lods
adc
and
mov
add
add
push
adc
push
mov
inc
pop
push
jle
jbe
add
cltd
cmpsl
aas
pop
movsl
dec
test
outsb
xchg
test
dec
inc
cltd
cmp
push
pop
aad
jge
xor
lcall
aas
loop
inc
nop
daa
cmp
adc
sbb
mov
jne
xor
repz
push
gs
push
movsb
sub
call
dec
jo
inc
inc
fnsave
dec
or
inc
in
push
js
das
inc
pop
sbb
push
les
mov
int
inc
adc
dec
xchg
sub
popa
mov
movsl
cld
adc
notl
shrb
mov
sub
inc
jg
sub
jle
cmpsl
imul
out
das
mov
adc
bound
sbb
hlt
or
mov
jg
lods
sub
pop
push
repnz
inc
sti
loope
test
dec
stos
or
outsb
int
popa
and
add
jns
pop
dec
into
cmpsb
imul
insb
or
adc
arpl
in
xchg
push
push
cmp
in
int
push
aas
incl
popa
jb
push
pop
mov
rcll
mov
stos
mov
inc
cli
js
data16
sti
hlt
popf
mov
pop
movsl
dec
in
imul
movsl
pop
mov
movsl
cltd
sbb
insb
test
push
hlt
std
decb
push
or
jmp
inc
xchg
es
bound
cmpsl
pop
mov
jg
jmp
dec
jmp
adc
xchg
shll
fdivl
push
mov
mov
xor
push
add
dec
adc
jae
in
nop
and
gs
pop
mov
xchg
pushf
lret
mov
bnd
cmp
rcll
mov
and
fdivl
cmc
cmp
or
cli
pop
outsb
add
incl
mov
pop
mov
clc
out
movsb
fnstenv
cwtl
outsb
xor
pop
inc
or
mov
mov
pop
jmp
adc
push
imul
jge
add
test
adc
jnp
aas
cli
add
vpshld
add
mov
test
adc
fwait
mov
movsb
sub
jg
wbinvd
jge
push
and
jno
lret
jle
fdivs
jecxz
ret
outsl
test
std
push
pop
std
in
test
lock
inc
xchg
sub
into
outsl
mov
inc
sbb
mov
pushf
and
mov
xchg
or
out
loope
jne
pop
mov
xchg
inc
sbb
push
ljmp
xchg
inc
xchg
and
mov
je
and
mov
mov
cli
adcl
xchg
and
lahf
push
mov
inc
inc
fstl
xlat
mov
mov
loop
test
and
cmp
push
lods
divl
aaa
outsl
push
push
push
adcl
lock
and
push
mov
shlb
test
std
ds
pusha
sub
xchg
and
fsubrs
xchg
sub
or
fwait
shlb
sbb
push
adc
mov
xchg
scas
cmc
cmp
push
or
ret
and
lea
inc
pusha
enter
decb
test
and
sbb
cmp
cmp
lods
pop
cmpsb
push
rorb
mov
jmp
cmpsb
lods
dec
xchg
xor
and
movsb
pop
mov
aas
sti
jns
fistpll
mov
sub
aaa
dec
xchg
and
lods
pop
cmp
outsl
fildll
mov
mov
mov
mov
push
sub
mov
inc
scas
loope
adc
inc
or
mov
cmpsl
fidivrl
dec
xchg
mov
loope
inc
xchg
sub
fldcw
lahf
push
setnp
mov
mov
loopne
stos
and
insb
cwtl
es
xchg
xchg
sub
xchg
sub
mov
mov
inc
fcom
and
add
add
fwait
arpl
fsubrp
test
leave
lods
sbb
add
add
sub
add
pop
and
adc
and
adc
add
push
sub
adc
add
xor
add
xchg
and
adc
add
inc
sub
adc
into
stos
or
pop
mov
int3
mov
es
insb
test
mov
xchg
xchg
hlt
rcll
cmp
adc
mov
xchg
es
fsts
push
scas
jns
cmp
push
jne
rorl
and
incl
mov
sub
call
xlat
dec
sbb
int
jne
je
dec
jg
push
adc
aam
push
xchg
lret
mov
xor
in
dec
mulb
in
xchg
mov
adc
adc
mov
in
xor
inc
or
xchg
stos
sub
gs
jle
pop
ljmp
adc
inc
add
jo
adc
fs
add
addr16
mov
sub
mov
xchg
lret
push
scas
or
cmp
dec
leave
cmp
repz
scas
mov
jo
adc
xchg
jno
xchg
shlb
xchg
scas
mov
xor
test
out
les
xchg
add
sbb
test
mov
mov
xor
cmpsl
mov
sbb
fsub
mov
push
adc
push
push
loope
dec
mov
push
sub
inc
or
into
insl
lock
repz
add
xor
call
and
xor
jbe
movsb
add
pop
xor
ja
gs
cmp
push
into
fcmovnbe
and
ds
cmp
sti
push
cmp
mov
mov
orl
xor
pop
push
xchg
lods
lret
nop
leave
stc
xchg
ret
sbb
pop
add
inc
insb
adc
inc
out
jno
shl
add
xchg
dec
stc
fpatan
out
loopne
mov
stc
jb
and
je
mov
aam
test
pop
push
sub
adc
sahf
sbb
test
add
add
dec
xor
push
fstps
mov
imul
xchg
mov
mov
lods
mov
adc
mov
adc
mov
sub
mov
addr16
cwtl
jbe
push
pop
pop
rcll
ret
test
movsb
dec
stos
fstp
js
adc
push
adc
adc
cmp
dec
jmp
dec
xlat
xor
daa
mov
outsl
mov
adc
cvtps2pd
movsb
movsb
xchg
xor
xchg
test
mov
ror
pusha
dec
or
rolb
sahf
addr16
movsb
jmp
cmp
push
pusha
daa
mov
sbb
ret
cli
jle
daa
test
adc
push
adc
lock
mov
enter
push
cld
push
divps
cwtl
fidivs
gs
pushf
outsl
stc
adc
push
adc
inc
or
push
mov
push
mov
sub
arpl
outsl
push
into
leave
dec
imul
adc
mov
pop
fimull
mov
pop
int
sbb
fistpll
xchg
sbb
out
ret
enter
sbb
or
mov
jge
mov
hlt
and
and
cmpsl
dec
imul
movsb
mov
add
inc
jge
pop
lea
call
dec
sbb
in
popf
dec
gs
stos
push
and
push
xor
std
rolb
sarb
push
and
jmp
mov
cmpsb
mov
pop
push
cmp
adc
cmpsl
inc
aad
daa
fdivl
mov
xchg
cmpb
out
dec
or
inc
mov
sub
mov
jle
cmpsb
push
pushf
pop
test
mov
cld
xorl
inc
movsb
jne
or
dec
loopne
cwtl
inc
sbb
aam
mov
clc
push
pmaxsw
adc
ret
push
mov
xor
movsb
call
movsl
inc
add
bnd
mov
sub
cmp
out
and
popf
xor
dec
mov
scas
cmpsb
inc
cmp
rcrl
js
adc
pop
xchg
clc
mov
inc
stc
mov
adc
jns
adc
jo
add
int
xor
inc
push
in
inc
fmul
sub
fadds
adc
pop
adc
sub
pop
adc
mov
pop
adc
adc
insb
cmp
test
pop
rcl
push
push
xchg
daa
push
adc
aaa
mov
push
inc
insb
add
mov
push
bound
push
in
repnz
push
add
pop
and
cmp
adc
sbb
imul
add
jo
adc
push
adc
sahf
fbstp
sub
add
ljmp
outsb
jle
jno
mov
jmp
adc
sub
insl
push
mov
pushf
sti
in
sbb
outsb
and
mov
push
adc
loope
pop
xchg
adc
adc
xchg
push
adc
mov
jmp
cwtl
dec
sbb
jnp
nop
test
lods
adc
mov
mov
mov
mov
shll
cmp
ret
scas
lret
xchg
insl
fwait
mov
sbb
cli
xchg
or
jg
decb
or
and
sub
loopne
sub
cmp
fdivp
pop
xor
scas
rcrl
stos
mov
adc
xchg
repnz
les
push
adc
mov
push
in
nop
xor
push
and
mov
scas
mov
mov
out
nop
cmpl
adcb
in
outsb
xchg
and
scas
pop
pop
mov
into
sub
add
or
scas
mov
fwait
mov
aad
inc
test
mov
test
pop
adc
sbb
xor
mov
push
mov
out
loope
test
cmp
inc
popf
mov
pop
adc
dec
or
lods
pop
cmp
adc
jl
pushf
cmp
popl
jae
sub
jne
fidivl
cmpsl
sbb
mov
jo
mov
and
adc
add
scas
aam
aad
mov
out
outsb
pop
and
popf
cmp
fldl
test
sti
cmc
ljmp
mov
xor
dec
jg
jo
adc
fs
loopne
lods
and
jbe
push
loop
cmc
test
scas
movsb
loopne
mov
adc
rolb
je
popf
loopne
sbb
stos
mov
pop
and
and
mov
xchg
pop
and
pop
mov
outsb
and
cmp
ja
xchg
mov
gs
lcall
lea
shlb
or
push
adc
mov
xchg
and
xchg
ds
fildll
xchg
arpl
mov
out
jno
mov
pop
and
xor
mov
cld
jb
adc
aam
mov
les
and
mov
pop
add
cltd
mov
push
mov
xchg
and
fldenv
ret
inc
mov
ret
sub
hlt
pop
outsl
mov
pop
hlt
pop
pop
cmp
test
dec
scas
inc
cwtl
fidivs
not
mov
push
mov
cltd
mov
pop
sbb
jmp
mov
push
inc
xchg
pop
cmc
enter
movsb
ja
or
out
insb
mov
pop
pusha
mov
mov
test
sbb
mov
clc
stc
cld
aas
imul
adc
lret
cmpsb
xchg
xchg
popa
cmp
movsl
inc
pop
pop
pop
xchg
jbe
mov
stc
lret
lock
popf
test
dec
sti
cmp
cli
fmul
movsl
cld
jmp
nop
mov
mov
jge
cmpsl
and
push
in
fmul
push
and
adc
test
call
mov
add
inc
sub
and
stos
push
or
or
ja
test
xchg
and
xor
cld
sti
xchg
pop
inc
fidivl
jo
lods
pop
mov
jne
addl
inc
addl
dec
mul
sub
push
scas
pop
jmp
adc
fnstcw
mov
mov
push
jno
jbe
js
add
shll
dec
mov
push
adc
insl
lahf
mov
mov
sti
or
loopne
dec
scas
data16
out
int3
push
cmpb
ret
jge
clc
cmp
fwait
dec
loop
adc
inc
stos
leave
into
daa
push
adc
and
jbe
mov
adc
inc
mov
lret
xchg
inc
outsb
xchg
jecxz
cmp
jmp
loop
aaa
adc
aam
xchg
loope
mov
add
cmpsb
rcrb
mov
loope
test
sub
test
dec
xchg
test
inc
dec
in
imul
lea
imul
fidivrs
mov
mov
pop
enter
inc
cwtl
sub
and
jle
xor
in
ret
test
lods
add
sbb
fimull
xchg
ss
adc
or
sbb
das
adc
jns
aaa
test
add
sahf
in
or
mov
ljmp
lods
push
and
test
mov
xlat
mov
mov
cwtl
data16
or
adc
dec
cmp
push
cmp
lea
shrb
ds
pushf
data16
sbb
in
mov
mov
pushf
cmp
inc
fstp
test
aam
add
shrl
repz
fcmovb
dec
mov
adc
adc
inc
cmp
adc
ljmp
sbb
test
pop
outsl
jmp
mov
add
or
pop
test
pop
or
sub
ret
jle
ret
mov
mov
sub
pop
pop
inc
pushf
ds
mov
cmp
sbbl
and
mov
fstpt
pop
in
divb
cwtl
test
ret
stc
mov
loopne
pop
cmp
cltd
xchg
loop
lahf
cmp
fwait
outsl
jno
add
push
stc
mov
insl
loopne
sbb
in
shll
push
adc
test
jae
adc
das
fucomp
mov
gs
add
int3
movb
dec
fstp
mov
push
adc
outsb
mov
sbb
gs
shrb
sbb
mov
push
cli
pop
pop
sbb
test
in
mov
aam
or
cwtl
cmp
and
mov
ret
add
add
cs
fs
inc
sbb
aas
sub
dec
push
xor
sbb
andl
push
lds
cmp
pop
sarl
xchg
mov
push
adc
mov
adc
inc
push
sbb
loope
inc
sbb
adc
loop
sbb
sbb
iret
out
or
adcb
mov
arpl
out
push
sub
jg
cmc
and
sbb
js
loope
mov
push
inc
sbb
cmp
adc
or
or
int
jecxz
and
pop
and
and
int3
mov
ss
or
addr16
in
dec
xor
or
push
std
or
inc
and
mov
sub
adc
shrl
insl
rol
test
movsl
xor
notl
jg
or
ret
adc
sub
jecxz
fdivrp
stos
mov
loopne
mov
enter
lahf
mov
je
loope
out
std
mov
icebp
and
add
add
inc
or
bound
out
rcrb
cltd
inc
leave
cwtl
dec
mov
jno
or
mov
mov
dec
or
push
pop
jmp
inc
daa
pop
pop
out
inc
xor
push
cmpsb
dec
icebp
mov
lret
sub
inc
loopne
push
jns
push
sub
or
mov
cltd
mov
cmp
jns
adc
xorl
fadds
adc
pop
xor
and
sahf
pop
fbld
pushl
xchg
xchg
pop
ficompl
cmpsl
fdivrp
addr16
mov
ficomps
lods
push
sbb
fisttps
cmc
sub
jmp
sbb
and
mov
or
jo
push
repz
sbb
insb
mov
push
in
test
stos
insb
mov
and
or
in
imul
mov
push
xor
pop
insl
shlb
push
and
mov
pop
push
adc
push
adc
dec
adc
jo
jns
lea
jl
inc
mov
inc
add
pop
mov
cwtl
dec
add
sub
adc
inc
aas
sbb
bound
in
addb
stos
sub
fadds
adc
lods
mov
aaa
adc
pop
push
cli
pop
sbb
shl
mov
fidivl
sub
adc
jle
int3
nop
mov
adc
or
or
ret
push
mov
aam
mov
inc
and
orb
mov
cmpb
addr16
loop
popf
dec
sbb
cmp
decb
xor
add
scas
push
ret
test
xchg
sub
bound
outsl
push
dec
call
xchg
adcl
movsb
shlb
and
mov
sub
inc
popf
and
add
movl
fmul
gs
jl
sarb
pop
int
je
sbb
int
dec
sbbb
cli
cmc
ljmp
sub
xchg
mov
rcrl
inc
or
pop
rolb
inc
aam
mov
pushf
pop
shrb
jb
fsubrl
sub
jae
adc
adc
xor
and
ss
jl
aam
xchg
stc
mov
sbb
lds
push
push
cli
pop
and
adc
shrb
sbb
jecxz
mov
push
cmpsl
pop
ret
sbb
movb
push
adc
sbb
sub
sarb
ja
cmp
adc
cmpsl
dec
add
mov
push
xlat
das
push
cld
movsb
mov
pop
jne
sar
mov
mov
inc
loopne
ret
lea
jns
mov
mov
jge
push
inc
aam
push
cmp
scas
ficoms
or
mov
cltd
ljmp
push
adc
inc
dec
sahf
push
mov
push
aam
adc
test
cmpsl
push
pop
fst
xchg
fidivs
mov
movsb
mov
xchg
in
icebp
pop
test
enter
sub
push
mov
aam
jmp
push
shrb
repnz
xor
push
adc
adc
sahf
hlt
adc
sub
pop
shll
mov
pop
sub
jbe
insl
lret
pusha
mov
pop
shll
pop
push
mov
push
mov
into
ss
mov
mov
cmp
pop
notl
mov
loopne
test
jae
adc
and
icebp
in
cmp
cltd
gs
fsubs
rolb
mov
leave
aad
xor
or
fistpll
cwtl
fs
or
adc
or
loopne
mov
mov
sub
add
mov
mov
sub
xchg
stos
dec
push
xor
add
gs
mov
test
xchg
stos
fstps
aaa
xchg
lods
xchg
fimull
ret
mov
mov
hlt
movsl
xor
jno
dec
push
sub
or
pop
pop
rolb
xor
jl
dec
js
jae
adc
pop
inc
jp
cs
dec
mov
or
stos
fdivr
imul
push
mov
mov
jno
cwtl
dec
pop
pop
push
sbb
sbb
inc
stos
mov
stos
daa
dec
pop
std
mov
scas
or
jns
sbb
fidivs
cmp
jae
pop
add
push
pop
fistpll
mov
call
push
pop
pop
push
cmp
addl
out
ds
in
xlat
loop
stos
dec
pop
mov
loop
out
cmp
nop
dec
data16
loop
cs
pushf
pop
mov
or
jno
mov
jae
mov
loopne
pop
jg
sahf
add
lds
mov
add
imul
lods
cmpsl
and
mov
test
test
jmp
mov
lret
cwtl
dec
xor
in
inc
popa
sbb
xchg
jae
ljmp
dec
popf
stos
loopne
popa
test
rcr
inc
pushf
dec
dec
mov
into
cmp
jnp
mov
adc
mov
push
inc
lahf
out
jno
shlb
push
jmp
mov
popa
pop
jb
mov
movsb
cmp
lods
pop
mov
mov
mov
ljmp
scas
xchg
hlt
das
lods
out
xchg
imul
push
hlt
inc
fsubs
mov
lods
jecxz
sub
adc
sub
pop
in
lahf
adc
dec
add
decl
mov
push
nop
pop
push
ret
push
sub
into
subl
shrl
pop
stc
adc
popf
scas
loope
sbb
int
lds
mov
add
shlb
mov
push
rcrb
dec
je
mov
lods
fnstcw
mov
gs
jmp
pop
enter
dec
and
test
add
inc
xlat
and
orl
jnp
inc
daa
pop
imul
push
test
push
sbb
in
lret
dec
mov
mov
ret
mov
movsb
dec
out
inc
xor
cmpsl
dec
lock
enter
mov
push
push
test
cld
push
imul
mov
mov
shlb
add
jne
cmp
mov
xchg
and
mov
test
xchg
jbe
sti
loope
int3
loope
subb
shl
call
dec
nop
es
push
lret
dec
fisubrl
scas
pop
outsl
dec
jb
xor
jnp
je
lock
or
and
popf
out
lods
mov
aas
cmpl
or
xor
jnp
mov
jno
cmpsb
fidivl
pop
inc
cwtl
das
push
insb
pop
pop
sub
adc
jnp
addr16
das
rorb
sbb
inc
mov
into
lret
jg
repz
je
adc
push
adc
jecxz
xchg
push
mov
int
jle
or
mov
xorl
loopne
jns
aas
out
je
push
and
xchg
dec
sbb
out
add
arpl
cmp
jb
jl
dec
mov
jg
fbld
xchg
pop
in
jmp
test
xor
int3
mov
push
xchg
pop
lret
jae
jg
xor
repz
lcall
and
cmp
sub
dec
decl
pusha
add
lret
mov
mov
sub
hlt
jmp
xchg
fsubrs
adc
cmpsl
push
fidivrs
adc
inc
push
and
fndisi(8087
es
add
mov
in
outsl
pop
insl
xlat
sub
xlat
xor
sbb
mov
pop
pop
iret
push
sub
and
bound
scas
pop
mov
decb
hlt
inc
loopne
pop
cld
or
push
cmpsl
stos
int
incb
xorb
xor
mov
add
sub
xor
push
hlt
jne
out
idivl
xchg
aam
xlat
fdivs
jb
mov
std
push
jg
inc
mov
cmp
pop
in
mov
sbb
fisubs
or
push
arpl
adc
lea
and
stc
test
adc
loop
mov
test
out
sub
adc
fcomip
mov
in
loope
in
cmp
pop
jmp
test
push
adc
xchg
mov
ljmp
push
inc
int3
fwait
scas
pop
jg
int3
sub
into
aad
sbb
cwtl
adc
lock
insb
adc
mov
mov
jle
andnps
rcrb
pop
jecxz
xor
pusha
sub
pop
push
xchg
jg
addb
inc
addb
rolb
lods
popa
sub
adc
push
mov
mov
cmp
cmpsb
movsb
lock
xchg
sbb
leave
int
andb
nop
loop
mov
pop
push
and
pop
pop
mov
aas
sbb
adc
lar
mov
aam
test
jns
and
fs
push
hlt
test
add
enter
es
fsubrl
lock
mov
aam
jmp
lea
nop
mov
ljmp
add
xchg
scas
xchg
bound
mov
sub
into
jmp
jne
test
fsubrl
repz
test
ret
lea
aaa
in
dec
or
jmp
mov
insl
arpl
push
adc
pop
lret
insl
mov
add
std
jo
xchg
dec
stos
lods
clc
popa
sbb
adc
push
adc
lods
pop
mov
je
outsl
push
into
inc
leave
lea
add
add
sti
rolb
iret
mov
fiaddl
lock
rorl
add
inc
pop
ret
push
add
push
adc
daa
dec
xchg
bound
push
xchg
cwtl
cmp
or
or
inc
jle
xchg
pop
mov
jns
adc
ljmp
adc
orb
fwait
mov
mov
sub
adc
xchg
sbb
pusha
or
repnz
adc
mov
lea
mov
popa
fidivl
shrl
adc
adc
push
mov
and
fstp
test
outsl
pop
rclb
adc
es
adc
push
adc
cmpsb
stc
push
fwait
arpl
mov
outsl
shll
cmpsb
dec
iret
ret
or
lret
mov
enter
push
adc
jp
adc
and
jge
iret
ljmp
ret
cld
dec
in
out
loope
ds
jb
push
xchg
rcrb
xor
or
add
xchg
and
push
adc
and
pop
jle
lahf
ficoms
movsl
leave
into
sub
push
and
pop
adc
inc
sbb
adc
ds
jbe
imul
mov
je
sti
mov
sub
icebp
xchg
daa
movsl
cmp
mov
and
popa
adc
adc
int
add
jmp
xor
dec
adc
loop
sub
mulb
fs
or
mov
dec
repz
push
push
aaa
ss
shr
pop
xor
push
hlt
repz
ss
mov
sub
negl
add
jg
fs
call
ret
aam
outsb
ret
xchg
test
lock
push
mov
mov
iret
lds
lods
cmp
clc
jns
adc
pop
inc
inc
adc
outsb
fdivl
test
sbb
and
mov
or
pop
repz
adc
cwtl
push
cltd
mov
mov
in
xor
loop
jno
jns
adc
mov
sub
xchg
in
cmp
aam
std
les
rcl
jns
adc
add
push
pop
xchg
fisubs
fistpll
das
inc
push
call
or
lcall
mov
xchg
mov
fstps
push
adc
test
movsb
push
in
and
xor
mov
enter
mov
enter
test
jg
lds
pop
leave
xor
jmp
cs
jge
fucomip
sub
adc
insb
mov
rcr
cmpsb
push
pop
hlt
push
dec
or
dec
push
fstl
mov
push
and
aaa
outsl
lods
or
sahf
outsb
pop
es
cmp
cmp
cmp
imul
lea
dec
or
dec
jp
adc
movsb
cmpsl
call
mov
aam
push
jnp
xchg
mov
or
cmp
or
push
lds
push
adc
and
pop
and
and
mov
dec
clc
jns
adc
mov
aaa
cmp
sub
dec
pop
pop
cmc
sti
orl
jmp
aam
inc
sarb
push
dec
xchg
and
push
imul
leave
lea
inc
inc
std
add
or
aam
push
cs
loopne
mov
cmp
cmpsl
pop
mov
xor
adc
std
add
xor
aam
sbb
es
add
push
cmpsl
stc
in
inc
vmovhlps
call
mov
loopne
bound
mov
add
push
cmpsl
vpsraw
les
add
inc
mov
mov
xchg
jno
sbb
adc
jnp
lret
lret
nop
push
push
std
push
data16
insl
inc
es
cmp
sbb
cmp
test
mov
in
nop
fbstp
in
outsb
out
aam
es
inc
push
sbb
imul
mull
inc
fnstsw
xchg
std
outsl
mov
ret
out
xchg
mov
dec
lds
mov
mov
mov
cld
pop
jo
cld
int
push
movsl
ds
cmp
iret
in
cwtl
mov
sbb
jp
adc
iret
ljmp
adc
cmp
shll
and
sbbb
rorl
rcr
inc
icebp
or
out
cmpsl
cs
shl
cwtl
mov
and
push
test
adc
jle
xchg
hlt
test
dec
lods
adc
push
je
inc
lahf
push
out
mov
lcall
jmp
lahf
insb
cli
mov
addb
inc
test
ret
cmp
jge
pop
adc
or
gs
loop
jnp
or
lods
mov
adc
add
js
aam
pop
mov
push
lods
pop
sbb
mov
push
adc
mov
pop
dec
xor
and
popf
lock
add
cs
lahf
test
and
bound
fs
into
push
cmpl
sbb
and
mov
out
repnz
xchg
push
sub
mov
fwait
mov
jp
mov
mov
movsl
leave
adc
js
outsl
out
and
stos
dec
mov
inc
fdivl
jmp
std
jmp
fsub
sahf
mov
inc
xchg
sub
pop
push
je
dec
je
pop
fdivrl
jge
rcl
cmpsl
dec
in
inc
xor
push
movsb
dec
repz
iret
ret
xor
push
push
pop
inc
mov
cmp
xchg
push
ja
dec
fwait
shrl
push
adc
jl
adc
sub
jae
adc
push
lods
ret
add
test
fsubrl
loopne
dec
dec
jle
jbe
adc
jno
push
arpl
adc
cmc
fnstcw
sbb
cmp
push
adc
data16
cwtl
jae
adc
sbbl
xchg
mov
adc
aaa
mov
loopne
fldenv
aam
fisubrl
scas
loop
cmp
sub
push
adc
arpl
adc
jnp
cmc
loop
repz
fistpll
jmp
pop
adc
ds
out
jge
enter
jle
xchg
or
cmp
jg
pushf
js
jl
adc
push
insl
xchg
stos
mov
or
in
ljmp
pop
cmp
fistps
inc
and
es
dec
test
outsl
imul
mov
inc
aas
icebp
int
leave
mov
jg
sbb
fneni(8087
ds
imul
mov
jo
adc
and
inc
sbb
test
cli
cmp
arpl
jo
adc
vsqrtps
xchg
push
sti
rolb
and
adc
pusha
cmp
gs
jo
ljmp
scas
xchg
out
cmpsl
dec
jp
mov
loop
cmpsl
cli
stc
test
mov
pop
push
jno
sahf
outsb
pop
pop
in
pop
shll
sub
push
pop
cmp
les
adc
inc
pop
pop
lret
pop
sahf
aad
dec
pop
lock
mov
xchg
push
cmp
sbb
incb
and
repz
mov
fsubrl
int3
leave
inc
jl
sarl
out
cmp
cmp
xchg
mov
shr
test
add
xchg
out
inc
repnz
sbb
cmp
popf
mov
outsl
and
jae
xlat
mov
loop
notb
shr
jge
ret
popa
addl
mov
sub
inc
push
xlat
xor
xor
sub
sbb
xor
push
adc
adc
in
adc
add
and
push
lods
sti
lock
jecxz
push
and
dec
xabort
stc
mov
addb
sbb
pop
sub
outsl
fnstcw
jp
sbb
stos
enter
loope
push
lods
fsubrs
cld
adc
push
and
dec
fwait
je
les
xchg
sub
gs
xchg
jnp
sub
xchg
shl
sar
imul
adc
cmp
mov
pop
mov
faddl
jmp
push
jle
mov
xor
into
mov
scas
mov
shlb
adc
and
jne
or
sti
push
repz
out
fisttpll
pop
jae
adc
xchg
daa
dec
or
sub
mov
je
insl
fnstenv
adc
dec
dec
cmp
pop
jo
adc
shlb
movsl
jnp
int
inc
xor
adc
pop
sub
push
imul
loopne
test
js
nop
add
sbb
daa
adc
dec
popf
and
shrb
jae
push
sbb
shlb
and
adc
out
testl
jns
es
sti
add
iret
push
lods
pop
mov
lret
and
out
or
push
cmpsb
les
shlb
cld
aam
inc
push
and
dec
xchg
daa
cmp
insb
dec
xchg
sub
ret
push
jg
mov
ja
xor
in
cli
std
in
and
rorb
sub
mov
icebp
scas
jle
mov
addb
std
fildl
adc
movsl
mov
in
jo
adc
fwait
add
fildl
hlt
roll
cmp
mov
movsb
inc
lods
jg
iret
sbb
sub
jns
cmp
mov
lds
mov
sbb
xchg
pusha
mov
mul
push
xor
pop
adc
es
test
push
outsw
outsb
add
jbe
sub
cltd
repz
push
xor
mov
mov
mov
aam
push
adc
pop
frstor
stos
aas
ds
scas
into
pop
outsb
addb
nop
shlb
adc
jge
fs
adc
dec
test
push
ret
leave
pusha
push
mov
sub
sbb
nop
and
mov
jmp
out
std
xor
adc
sub
pop
getsec
outsl
fists
jo
adc
leave
popa
es
repz
xchg
and
lods
mov
jo
adc
mov
mov
outsb
lret
sub
adc
add
push
lods
int3
mov
adc
add
bound
adc
adc
pop
jne
mov
pop
jno
out
fisubs
mov
lea
cmp
pop
js
cwtl
scas
arpl
dec
xchg
push
mov
shrl
stos
stos
cmp
jnp
int
cld
repz
cli
pop
pushf
mov
inc
movsb
dec
test
test
movsl
arpl
sti
popa
sarb
mov
sub
mov
cmp
fldcw
je
or
inc
and
fistps
lret
movb
fsubrl
mov
fidivl
jo
pop
mov
call
inc
pushl
fistl
dec
xchg
mov
test
aam
xchg
stos
ret
fldcw
lret
mov
stc
clc
ljmp
and
xchg
iret
fdivl
adc
and
and
inc
addb
sbb
cmc
ljmp
ret
pop
xchg
and
mov
push
getsec
outsl
das
fdivrp
std
cli
mov
or
insl
push
xor
sbb
loope
sbb
jo
adc
xlat
lods
pop
loope
and
xchg
sub
adc
imul
cld
call
xchg
stos
push
fidivl
mov
ljmp
mov
push
xor
lods
out
sti
clc
lcall
in
jo
adc
xchg
and
nop
fs
pop
mov
mov
cmp
loope
div
adc
scas
or
inc
cwtl
das
stos
les
adc
pop
imul
jmp
out
cmpsb
xchg
dec
add
mov
repnz
jge
mov
mov
sub
enter
jge
and
ret
cmp
daa
push
mov
inc
repnz
mov
pop
int3
cli
mov
cltd
xor
stos
or
in
mov
mov
sbb
jnp
push
or
in
mov
pusha
jl
adc
inc
stos
push
or
push
int
xor
sti
inc
ret
bound
fcomps
adc
pop
test
mul
pop
mov
fsubrl
pop
push
mov
cli
cmp
fmull
jmp
push
lock
xlat
daa
dec
fsub
sub
nop
sti
add
push
in
ljmp
cmp
mov
mov
adc
push
push
mov
call
imul
add
jle
mov
push
xor
movsl
xor
rcl
xor
inc
ljmp
cltd
jno
aam
sub
rcrb
mov
inc
scas
and
fsin
pop
int3
jb
cmp
insb
std
xchg
sbb
sahf
sbb
dec
push
sub
aas
push
imul
dec
icebp
dec
mov
push
mov
repnz
and
or
repz
js
jo
mov
ficompl
cmc
push
cmp
imul
mov
loopne
jle
dec
push
xchg
cmp
add
imulb
mov
cld
scas
lds
xorb
in
xchg
add
stc
mov
out
cmc
xchg
out
les
sar
add
fmul
pop
push
clc
sub
pop
xchg
clc
jo
adc
out
lods
lcall
pop
in
adc
insb
jb
jo
adc
cltd
in
jne
xlat
jge
lock
adc
sbb
xor
das
iret
sbb
and
inc
in
leave
std
cld
pop
loopne
push
adc
jne
repz
mov
sub
in
cmp
xchg
mov
leave
sbb
dec
nop
and
sar
adc
jo
adc
and
mov
push
lock
test
fcmovu
mov
xchg
ret
loopne
test
or
js
pusha
cs
sbb
call
test
mov
jmp
adc
adc
cs
sbb
fiadds
push
inc
hlt
jo
adc
and
aad
xor
lock
adc
clc
out
mov
outsb
mov
and
dec
inc
or
std
adc
jo
adc
mov
loopne
dec
cmp
push
nop
dec
inc
xlat
call
jo
adc
and
mov
jmp
or
mov
sub
or
stos
lods
rcll
ja
adcl
cmp
cmp
sub
add
or
sub
jo
adc
adc
mov
fdivl
pop
les
mov
sbb
add
pusha
sbb
test
jmp
aam
push
insb
jl
adc
lret
sar
inc
add
push
and
sbb
mov
pop
js
iret
or
inc
inc
mov
sbb
sub
cwtl
cmp
sbb
pop
and
mov
or
add
xchg
dec
pop
gs
xchg
fs
stc
mov
or
arpl
inc
add
je
push
adc
cs
xchg
int
jb
xchg
mov
in
push
and
jl
adc
insb
sbb
js
jo
push
adc
stos
fwait
shrl
and
shl
lahf
icebp
fimull
xchg
inc
cwtl
das
dec
and
stos
pop
flds
and
test
push
dec
xlat
adc
popf
js
inc
xor
xchg
mov
mov
dec
jecxz
in
pop
int3
and
lods
clc
pop
and
ret
mov
xor
hlt
pop
adc
jo
leave
es
sub
and
add
push
push
add
xor
cmp
test
add
mov
leave
mov
xchg
cmpb
jecxz
movsb
imul
stos
ss
mov
jb
icebp
and
xor
adc
int
pushf
das
adc
mov
or
jo
out
sub
pushf
mov
ljmp
jg
mov
popf
push
xchg
hlt
cmc
pop
pusha
popa
mov
sbb
in
mov
adc
popa
es
push
dec
cmp
cmp
shr
test
imul
sub
mov
jb
xchg
sub
lods
shl
push
push
insl
pop
jecxz
lahf
sbb
fs
inc
and
pop
sbb
and
imul
in
push
bound
mov
into
ret
mov
popa
add
cltd
mov
mov
fldenv
in
pop
test
pop
xor
stmxcsr
push
cltd
lods
ljmp
mov
or
test
fistpll
fbld
pop
fildll
sub
imul
cmp
ss
push
xchg
mov
or
and
pop
pop
dec
lock
repnz
leave
cmp
arpl
stc
int
fwait
outsl
mov
push
xchg
sub
adcl
xchg
mov
pop
ljmp
std
out
adc
and
loope
add
dec
mov
lock
fisttps
pop
mov
lods
test
andb
sbb
stos
orl
imul
xchg
imul
jl,pn
dec
jp
mov
and
mov
mov
imul
outsl
pop
call
jae
fistps
inc
or
pop
adcl
movsl
shl
imul
dec
rolb
sub
pop
xor
pop
imul
xor
insl
jmp
loopne
push
rorl
stos
int
pop
stc
push
fisttps
je
pop
push
test
mov
les
imull
mov
xchg
lods
fsubr
push
cmp
lret
insb
mov
dec
sbb
sti
or
adc
xor
and
push
and
test
aaa
call
push
pop
mov
dec
call
inc
lahf
xchg
imul
movsl
jl
and
mov
push
jmp
test
mov
cmp
dec
icebp
sbb
push
les
xor
push
pusha
sbb
adc
xor
xor
jp
push
jmp
xchg
mov
fs
pop
mov
cltd
sbb
out
xchg
bound
daa
lods
sbb
dec
push
hlt
mov
pop
pop
rcll
aam
test
mov
sahf
xchg
data16
daa
mov
loopne
leave
stos
xchg
ret
mov
daa
pop
adc
sbb
mov
fadds
inc
dec
pushf
mov
lahf
add
and
inc
aad
mov
es
mov
pop
jo
push
std
jno
imul
mov
mov
lret
ss
ss
imul
mov
cmpsb
jnp
jo
insl
add
in
push
mov
or
cmp
or
adc
mul
cmpsb
mov
pop
stos
pop
stc
cwtl
jg
pop
push
xchg
mov
aam
mov
fmull
jb
pop
in
ljmp
xor
pop
xchg
dec
sbb
pushl
or
jp
xor
push
shlb
and
call
sbbl
cld
scas
outsb
aaa
cmpsb
popf
popf
lods
jb
mov
mov
and
shlb
jl
inc
addr16
xchg
iret
jg
out
arpl
aas
jns
imul
out
mov
int
dec
es
les
leave
mov
push
cld
repnz
adc
push
icebp
sub
aad
int3
fdivrs
out
movsb
xchg
dec
rclb
or
jne
insb
and
movsl
leave
adc
repnz
fnstenv
imul
and
rclb
pop
inc
inc
inc
jbe
scas
cmpsb
mov
movb
iret
adc
mov
xchg
dec
test
daa
dec
in
mov
repnz
outsb
rcr
push
lret
xchg
roll
mov
pop
cli
mov
loope
out
test
mov
scas
mov
cmp
cmp
or
dec
sub
in
rcr
pop
xchg
mov
xorl
mov
test
lock
cmp
je
sbb
dec
xor
jae
stos
cli
and
ret
int3
jb
mov
push
jnp
xchg
mov
lds
arpl
jecxz
push
mov
movsb
pop
mov
and
jno
xor
movsb
push
loope
and
jo
push
adc
jecxz
es
dec
sbb
pop
jp
sti
cmovs
and
inc
mov
dec
push
test
inc
scas
and
xchg
in
adc
mov
jmp
sub
test
xor
bound
shlb
sub
arpl
jmp
mov
cmpsb
jns
push
mov
out
test
cwtl
pop
stos
adc
inc
push
mov
in
and
dec
push
mov
adc
dec
push
cmpsb
xchg
scas
mov
shrb
stc
push
ret
lods
xor
decl
add
mov
nop
and
out
ss
fsubrs
rcrb
xchg
lret
jmp
inc
stc
mov
inc
fistps
xlat
cmp
cltd
movsl
fsubs
pop
rclb
cmp
hlt
jg
mov
popa
loopne
pop
mov
lods
aas
rcr
pop
movsl
jl
mov
out
imul
mov
xor
pop
push
es
xor
movsb
mov
shlb
push
dec
dec
pop
clc
rcrb
lret
lds
cmp
jo
ljmp
pop
mov
pop
jno
push
imul
bound
orb
pusha
mov
lret
les
mov
pop
adcb
xchg
into
jge
mov
mov
mov
out
push
mov
enter
imul
in
inc
flds
orl
sarl
sarl
sub
into
and
or
adc
or
das
push
cld
or
imul
jl
adc
rclb
mov
push
in
add
out
sbb
cmp
shrb
mov
insl
mov
decb
or
sarb
adc
adc
push
mov
leave
adc
mov
or
mov
lods
test
sbb
cmpsb
dec
popf
aaa
out
push
test
mov
pushf
sub
lcall
jle
loope
xor
jmp
push
push
xor
jmp
push
push
pop
or
mov
movsl
push
sub
cld
pop
push
sub
ds
inc
jnp
mov
jl
iret
lds
add
and
mov
shlb
popf
mov
sbb
rdpmc
fistps
inc
add
xor
mov
subl
not
jbe
mov
shrl
jae
data16
into
or
pop
scas
or
xchg
aas
push
push
aas
cwtl
inc
mov
loopne
push
data16
lea
xor
jmp
cmpsl
ror
imul
test
add
jne
notl
insl
sbb
hlt
push
repz
int
mov
addr16
nop
pop
notb
test
adc
out
push
push
je
repnz
adc
test
or
or
push
jle
sarb
lods
and
adc
popa
fildll
inc
fnstenv
adcl
push
adc
call
cmp
test
or
and
scas
les
sbb
or
pop
adc
mov
mov
andl
mov
arpl
mov
mov
movsl
and
loopne
add
pop
out
push
dec
inc
adc
xlat
jmp
in
test
xchg
xor
addr16
daa
lock
push
sti
jns
push
sbb
in
sahf
call
pop
pop
push
xchg
jmp
into
es
inc
jo
lods
jbe
dec
cmp
xor
fs
cmp
sub
jnp
sub
imul
mov
movsb
xor
cmpsb
jbe
jb
push
cmp
rcrb
push
insl
loop
xchg
dec
pop
sahf
dec
add
lahf
add
cmp
outsb
pusha
dec
cwtl
jmp
shll
jle
xchg
adc
jnp
shlb
cmp
inc
std
dec
add
or
enter
mov
dec
std
scas
and
call
xor
lahf
addr16
mov
fcmovb
jp
xlat
jbe
pusha
data16
mov
les
xchg
stc
lods
shrb
ja
pop
std
outsb
scas
push
movsb
out
xchg
cmp
mov
fdivrl
and
in
mov
leave
inc
mov
xchg
and
jge
shlb
pop
dec
sub
or
jmp
push
cli
jg
aam
mov
ret
xor
xchg
sub
arpl
cli
daa
outsl
and
fbstp
cli
jg
aam
mov
clc
xchg
sbb
aad
outsl
mov
pushl
scas
in
aam
cs
cmpsb
dec
sub
sbb
push
mov
fldcw
sub
or
sbb
push
adc
add
aad
repz
cmp
and
adc
jb
sarb
or
cmc
shrb
test
loope
inc
xchg
pop
mov
mov
cwtl
aaa
outsl
fildll
mov
scas
test
xor
and
movsl
jg
loop
imul
hlt
pop
mov
push
jno
pop
lods
pop
mov
adc
mov
and
xchg
push
and
fstps
push
add
movsl
pusha
ret
ret
cmp
fsubl
rcl
push
int3
nop
test
cmp
sbb
repnz
sbb
lock
shlb
int
lcall
ret
push
andl
popa
scas
lods
cmp
fistpl
push
lock
je
daa
pop
mov
push
popa
rorl
pushf
jmp
lahf
nop
outsl
pop
lods
push
repz
xor
adc
or
jb
call
popf
stos
pop
aas
sub
aaa
stos
aam
stos
fisubrl
stc
jg
cwtl
push
leave
into
rorb
inc
or
pop
pop
push
sub
fistpll
sub
das
xchg
scas
push
pop
sub
push
scas
sub
adc
mov
orps
and
enter
adc
sbb
push
dec
mov
lahf
fs
xor
hlt
xor
and
inc
cmp
jl
pop
xchg
mov
sub
sub
je
mov
sahf
mov
mov
rorl
adc
fisubrs
push
adc
in
ret
cmp
repnz
adc
aas
pop
mov
xor
cmp
jl
or
jo
xchg
mov
mov
add
add
add
test
fcoml
lock
jge
das
and
clc
pushf
jno
adc
loopne
mov
mov
xor
pop
mov
jo
rclb
sbb
inc
pop
ret
push
cli
inc
mov
stos
fdivrl
push
adc
popf
dec
lds
mov
sbbl
dec
or
pop
mov
push
inc
test
adc
sub
js
lea
adc
cmp
mov
and
mov
mov
dec
ja
xchg
popa
pop
dec
js
dec
push
jle
nop
fs
cmc
inc
imul
scas
lods
call
call
scas
fdiv
sbb
dec
mov
jmp
nop
and
push
add
xchg
scas
sbb
mov
or
in
rcrl
and
adc
jg
loopne
adc
and
jbe
adcl
xor
outsb
inc
adc
push
fisubs
xchg
jmp
xor
and
ret
sahf
jo
mov
mov
mov
push
or
and
lods
cmc
cwtl
mov
dec
inc
loope
push
xchg
into
inc
push
lret
sbb
sahf
mov
imul
out
repnz
adc
push
lret
test
out
test
lock
push
pop
mov
mov
lret
movsb
add
add
sahf
fnstcw
pop
inc
adc
push
sub
mov
out
sbb
shll
sub
push
int3
cmp
jnp
outsl
sub
out
inc
test
sbb
das
les
add
add
sbb
push
loope
popf
js
popf
rcrb
outsl
cmp
mov
adc
jbe
addl
xor
out
repnz
adc
test
lds
cmp
cmc
or
icebp
out
pop
xchg
push
inc
lods
cs
add
pop
enter
movsb
rorb
dec
jle
ds
ds
rcll
add
xchg
test
jge
je
mov
sub
mov
sbb
stos
xchg
adc
out
test
or
jecxz
mov
or
mov
pop
adc
inc
testb
jge
jecxz
ss
fsubs
push
mov
adc
stos
push
add
xor
scas
shl
push
push
mov
adc
pop
pop
and
pushf
cmp
lea
push
and
fstps
out
movsl
loope
and
fwait
gs
add
lret
shll
add
sub
sahf
jp
lods
pop
inc
sub
mov
mov
cmp
and
xchg
call
sbb
lret
shll
push
leave
pushf
adc
in
popf
stos
push
mov
ljmp
lds
xlat
cmp
or
mov
aas
cmp
stos
xchg
dec
push
jno
out
jns
leave
jne
mov
andl
or
push
cld
addr16
mov
sub
xchg
mov
pop
adc
or
adc
pop
int
cs
and
cltd
sub
das
fsincos
and
xlat
inc
gs
pop
add
cmc
jae
stos
sbb
xor
cmc
popa
shrb
and
xor
std
dec
pop
adc
mov
xor
stos
mov
cmc
clc
lea
fstps
mov
push
mov
mov
negb
lahf
inc
repnz
ja
xchg
cltd
shlb
and
dec
lock
leave
subb
out
pop
popf
xor
pop
sbb
xchg
pop
and
stos
dec
repnz
mov
fdivp
mov
into
movsl
loope
imulb
out
cmp
dec
sub
cmp
in
dec
or
out
push
mov
leave
or
ret
add
and
fdivr
ss
je
or
xchg
jne
inc
cmp
imulb
repnz
sbb
lods
clc
mov
sbb
or
mov
subb
lcall
xchg
mov
sbb
lret
sbb
or
jmp
mov
out
ds
aas
push
pop
adc
pop
jmp
dec
or
sub
lcall
and
lods
xchg
sub
icebp
push
and
rcl
xchg
or
incb
mov
xchg
fwait
out
fisubrl
mov
jae
lods
aas
fwait
mov
xchg
sbb
push
cmp
mov
mov
into
cmp
mov
aam
mov
inc
in
mov
scas
sbb
mov
in
leave
sahf
mov
imul
decb
aam
pop
into
sbb
ret
fcomps
pop
ljmp
adc
sbb
fnstsw
js
stos
jne
insl
scas
enter
ljmp
sub
fimull
jmp
std
imul
imul
sub
adc
cmp
pop
shll
mov
add
dec
shlb
inc
sbb
xor
dec
cmc
faddl
movb
fucomp
ja
lods
scas
mov
adc
cs
lods
sub
pop
jns
addr16
sub
dec
cmc
or
push
es
jmp
fidivl
mov
icebp
insl
xchg
and
cmp
pop
jno
pushf
cmp
in
lea
cmp
fcoml
sub
push
sub
adc
call
aaa
mov
pop
in
dec
mov
std
loopne
pop
adc
pusha
and
adc
ret
popf
xor
cltd
mov
cmp
fbstp
add
push
inc
cmp
dec
jmp
push
hlt
or
adc
lret
push
add
adc
repz
push
aam
sub
adc
adc
dec
jno
decb
push
lods
fdivr
xchg
and
and
pop
cmc
jg
push
sub
push
hlt
test
add
leave
inc
mov
insb
push
clc
cmp
sarb
popf
mov
fsubl
lret
idivb
add
pop
aaa
mov
mov
pop
fstpt
movsb
cmp
test
ret
sbb
push
adc
xchg
insl
mov
pushf
push
ret
popf
push
rep
push
int3
scas
cmpsl
sarb
inc
sbb
movb
push
adc
xor
pop
aad
pop
mov
jg
insb
lahf
popf
leave
cltd
sub
lcall
mov
adc
aad
fsts
jge
je
cmp
push
dec
xorl
out
clc
stos
sub
xor
mov
mov
repnz
aam
cmp
push
popa
mov
insb
call
ja
jle
xor
cmp
pop
pop
ds
or
mov
push
hlt
jge
call
sarb
sbb
pop
push
ss
push
inc
push
adc
lea
jmp
pop
test
cltd
or
aam
dec
clc
push
in
pop
dec
jnp
int3
mov
cld
aad
aam
daa
jbe
pop
cltd
adc
stc
stc
negb
dec
bound
sbb
pop
push
dec
mov
insb
std
popa
out
inc
push
adc
sbb
fidivrl
push
jl
lahf
aas
pop
mov
dec
cwtl
lock
jmp
sbb
push
sbb
movups
mov
testb
shl
mov
push
dec
sbb
loopne
add
jne
and
xchg
bound
insb
dec
aam
sub
fwait
pop
inc
lea
adc
cmpsl
sub
sbb
sub
jle
in
cmp
adc
gs
fsubl
stos
xchg
and
lods
aas
push
lods
sub
outsb
xchg
and
lret
lea
and
sub
sahf
sub
lea
out
fwait
cmp
cmp
adc
testb
inc
cld
addr16
and
lods
mov
rorb
js
lds
push
sbb
lock
cmp
push
jg
lea
inc
mov
pop
dec
bound
pop
adc
cmpsb
sub
adc
xchg
cld
cli
aaa
and
cmp
sub
push
sub
or
cmp
insl
pop
cwtl
shrl
push
xchg
mov
adc
arpl
push
pop
scas
mov
cld
ja
pop
es
add
and
stos
xor
xor
dec
mov
in
outsb
test
incb
cmp
enter
lret
cmc
push
xchg
cmp
lds
sbbl
inc
mov
out
bound
and
fiaddl
jge
adc
fcmovnu
adc
test
fimuls
fbstp
pop
mov
stos
mov
xor
call
pop
mov
push
ret
mov
pop
jb
lea
movsb
cmp
sbbb
mov
mov
adcb
in
add
adc
sub
and
mov
outsl
rcrl
dec
add
add
lods
ja
push
adc
outsl
mov
mov
out
pop
add
jb
lea
insb
and
push
mov
test
push
inc
test
pop
xchg
sub
scas
lds
mov
mov
or
mov
arpl
inc
sbb
sub
inc
mov
jne
xor
orl
shl
insl
push
ret
gs
dec
loope
and
mov
fisttps
leave
pop
dec
mov
int
repz
push
push
test
dec
xchg
and
rcr
stos
pushf
dec
jle
lea
addb
mov
push
sbb
pushl
aam
rcrb
pop
jl
in
mov
mov
dec
adc
nop
daa
adc
xchg
pop
xchg
mov
pop
lea
dec
push
dec
out
add
inc
cmp
push
stc
pop
cld
and
mov
xor
out
xchg
movl
stos
shl
imul
push
stc
sbb
loop
or
stos
add
sahf
imul
pop
xchg
scas
pop
out
pop
push
cmp
and
arpl
test
stos
inc
dec
jmp
dec
sbb
pop
daa
adc
rcr
push
pusha
push
mulb
jb
insb
add
rorl
sbb
fcmovbe
xchg
outsl
daa
ret
gs
hlt
lods
xor
or
jns
push
fwait
arpl
mov
outsl
shl
lahf
popa
repz
sub
adc
rcrl
adc
inc
adc
in
movsb
mov
xor
fisubrl
sbb
cltd
lret
sbb
stc
lahf
pop
jg
jns
cmp
es
jge
shrb
jno
inc
imul
aad
sub
mov
repz
lods
adc
add
mov
data16
push
shrb
pop
mov
filds
nop
push
add
mov
std
add
xchg
test
add
mov
inc
sub
int
or
js
xor
addr16
aaa
stc
into
dec
je
jb
cmovb
stc
push
lret
add
pop
pop
loopne
fnsave
movsl
lds
shlb
xchg
xchg
mov
xchg
or
mov
add
outsb
cmpl
ficomps
imul
inc
outsb
mov
jne
pop
cld
cmp
xchg
and
xchg
and
cltd
cmp
jbe
dec
ljmp
popf
cmpsl
pop
jecxz
clc
xchg
or
xchg
mov
jbe,pt
inc
das
sub
push
in
lret
in
insl
add
test
push
fbld
adc
pop
jae
in
out
in
fucomi
test
mov
inc
fwait
and
sbb
xor
sbb
xlat
fiaddl
fistpl
dec
xor
mov
mov
mov
pop
push
sub
insb
jno
push
cmp
scas
shlb
insl
pop
stos
sbb
and
pusha
cmc
gs
adc
scas
mov
fcmovnbe
pop
mov
imul
decb
add
sub
jmp
push
cmc
dec
jg
mov
rcr
je
stos
popa
ss
into
test
xchg
inc
dec
or
mov
ret
sbb
ret
out
and
outsb
jp
in
add
cli
push
push
xchg
test
and
jge
iret
popf
mov
mov
pusha
cs
mov
rclb
or
mov
jne
or
jne
clc
rcrb
and
xchg
and
inc
pop
cmp
pop
fnstcw
int3
leave
inc
jl
pop
xor
insl
jp
fidivl
push
adc
inc
push
hlt
dec
mov
int
aam
add
push
shl
dec
xlat
lea
inc
dec
sub
inc
cmp
inc
xchg
loope
addl
mov
scas
cltd
cmp
push
mov
aam
inc
cld
jo
adc
and
push
mov
sbb
dec
out
call
sub
fcoms
pushf
xor
nop
and
mov
std
cli
cmc
popa
cvtps2pd
xchg
dec
sbb
mov
sub
xchg
stc
mov
stos
mov
std
cli
cld
push
divps
fcomp
mov
pop
outsl
or
stc
adc
cwtl
sgdtl
add
push
movsb
ret
cmp
les
sbbl
mov
push
inc
or
push
mov
inc
mov
out
pop
add
imul
bound
imul
inc
add
pusha
daa
jge
or
out
pop
xor
dec
xchg
aas
icebp
shrb
mov
data16
into
jmp
test
mov
cmp
fadd
push
lock
and
outsl
movsb
xor
cmpb
cs
pop
pop
outsb
push
lock
push
and
inc
or
mov
cmp
test
xor
mov
push
adc
lret
add
push
inc
mov
add
sub
ds
or
in
push
and
xlat
jb
fwait
in
fsub
dec
cmp
jb
mov
pop
mov
mov
adc
mov
mov
and
sbb
xchg
ja
cmc
push
pop
mov
int3
mov
jmp
or
imul
push
in
pop
add
inc
xor
stos
hlt
mov
repnz
aas
inc
lret
arpl
or
sub
sub
jp
rorl
mov
jnp
pop
cmp
dec
addr16
cmp
mov
lea
xorb
mov
imulb
and
hlt
sub
dec
out
mov
xor
push
and
xorb
pusha
cwtl
shll
inc
std
jecxz
push
adc
cmpsl
jnp
jle
pushf
mov
test
out
pop
inc
gs
cmpps
cmp
leave
sbb
sbb
pop
popa
notb
lods
jle
inc
pop
mov
or
push
gs
mov
mov
out
pop
mov
or
mov
lea
inc
sub
lods
push
cmpsl
mov
lock
pop
in
pop
test
add
movsb
js
ds
es
mov
icebp
fdivs
xlat
lock
xchg
sub
adc
dec
and
jg
push
and
dec
arpl
mov
mov
push
adc
clc
mov
sub
out
inc
aas
sbb
jnp
cmp
jno
test
test
cltd
sahf
jg
rcll
mov
cmp
sub
data16
mov
jge
leave
and
add
nop
hlt
jo
inc
in
pop
adc
lock
adc
xor
fisttps
cwtl
inc
add
sbb
addb
lds
mov
pop
dec
fistl
sti
call
dec
xchg
jbe
je
pop
adc
out
hlt
cmp
aas
pop
stc
jns
mov
in
pop
adc
dec
sub
push
stc
add
mov
test
pop
push
hlt
and
loopne
sbb
or
pop
pop
popa
sbbl
push
lods
pop
jg
mov
sub
mov
jmp
outsl
push
dec
push
mov
aas
lahf
outsb
push
cmp
es
pop
les
stos
mov
xor
ret
inc
adc
roll
movsb
dec
aad
sub
adc
js
push
test
xor
test
addb
daa
mov
push
sti
cltd
mov
push
cmpsl
xchg
stc
adc
xor
es
inc
push
add
fucomi
out
jmp
shrb
push
adc
pushl
or
sbb
xor
dec
sbb
mov
pop
mov
addr16
enter
sar
je
xchg
sub
xchg
mov
sub
push
scas
xchg
jb
adc
inc
lods
push
add
sti
or
pushf
push
rcrl
in
cmp
das
or
dec
sarb
mov
and
sub
insl
push
xrelease
push
movsb
xorb
aaa
shl
jl
jmp
jb
loopne
cmp
and
adc
xchg
rclb
dec
sub
fdivrs
in
popa
xchg
mov
int3
mov
and
loope
std
cmp
call
mov
stc
ds
cmp
pop
sub
cwtl
cmp
inc
add
add
in
ja
aad
adc
je
adc
pop
pop
push
and
cltd
imul
jmp
loop
call
cmp
add
xchg
pop
out
cli
pop
adc
xchg
and
lds
test
sub
adc
jne
push
cli
add
mov
sbb
cmpsl
pop
push
cmpl
pop
test
pop
mov
inc
outsl
pop
and
lods
inc
sbb
mov
nop
pop
rclb
or
daa
cmc
test
pop
daa
dec
lock
mov
jecxz
sub
arpl
fisttpll
jge
stc
iret
jne
xlat
insl
jp
cmpsb
add
lahf
mov
dec
aas
add
add
xchg
cmpl
jmp
cmpsl
fnsave
xchg
xchg
push
inc
mov
imul
imul
call
lret
cli
xchg
add
lret
mov
jne
adc
shll
mov
lret
or
mov
adcl
jbe
or
inc
add
sub
fucomi
sbb
sub
hlt
jmp
push
adc
mov
and
mov
mov
daa
icebp
add
pop
imul
pop
in
pop
adc
lods
pop
ja
fdivr
mov
addl
mov
inc
mov
insl
push
pop
xchg
dec
xchg
xchg
dec
ja
mov
into
stos
or
in
pop
out
in
rcr
movsb
xlat
lock
and
push
sti
imul
outsl
dec
popa
mov
sbb
jp
or
dec
je
incb
es
out
adc
jp
mov
sub
negb
xchg
int3
out
popf
dec
mov
add
push
mov
andl
subl
in
mov
stos
mov
adc
sbbl
add
clc
aaa
mov
cmp
add
xlat
ds
dec
leave
int
js
divb
imul
dec
cmp
gs
mov
dec
inc
negl
in
or
lahf
add
lret
jp
add
imulb
subl
mov
adc
cmc
cmpsb
mov
push
xlat
repnz
mov
sub
or
jbe
xchg
into
loop
cmpb
xor
test
pop
lock
and
mov
fldt
xor
pusha
push
pop
mov
push
mov
inc
aam
mov
dec
sbb
dec
sbb
dec
pop
fcoml
mov
fmul
nop
and
lea
sbb
dec
pop
add
in
dec
sbbb
cmpsl
pop
adc
cmp
mov
dec
outsb
mov
xor
and
fsubp
out
jl
in
nop
and
dec
push
jne
in
dec
adc
push
imul
outsl
xor
aam
push
pop
dec
test
imul
xchg
cmp
popf
repz
ficompl
sbb
xchg
pop
out
dec
pushf
loop
dec
mov
repnz
or
fstp
ljmp
pop
dec
sub
fnstenv
gs
or
je
cmc
pusha
xor
loopne
pop
iret
pop
in
lahf
or
aad
jae
cmpl
push
repz
push
repz
in
xchg
sub
mov
enter
sbb
xchg
sti
test
test
je
xchg
and
mov
adcl
sub
shlb
jb
in
dec
jns
cmp
mov
mov
or
outsb
xchg
xor
pushf
mov
shrl
pop
lds
sub
gs
enter
add
pop
fimull
inc
rcrb
jle
ret
mov
pop
pop
fld1
dec
sbb
add
xor
aas
loopne
clc
mov
and
xor
mov
andl
hlt
mov
xor
loopne
lock
push
adc
inc
pop
fldlg2
push
test
cmp
outsb
push
leave
stos
mov
stos
lret
dec
mov
negl
sti
mov
ljmp
and
inc
xchg
xchg
call
xor
lods
in
fadds
adc
cmpsb
xor
subl
pop
add
fistpll
xchg
hlt
sbbl
scas
js
cs
and
inc
repz
out
or
adc
adc
cmp
adc
ds
jecxz
xchg
out
adc
cli
call
xchg
fmuls
aas
fistps
insl
dec
fwait
cs
notb
pop
xor
out
or
adc
cli
in
pop
insl
add
inc
inc
mov
adc
insl
mov
and
pop
rorb
inc
and
dec
jno
test
out
scas
mov
cltd
push
pop
ljmp
mov
stos
or
imul
outsl
popf
daa
push
lods
pop
mov
sbb
nop
sub
adc
push
aam
insb
mov
ja
dec
adc
sarb
push
cmp
dec
cmp
push
adc
mov
lret
les
sub
push
cmp
and
adc
movsb
movsl
js
dec
rcr
lds
imul
push
mov
pop
xor
mov
and
aam
js
xchg
sbb
inc
pushf
dec
mov
and
adc
sub
adc
and
and
icebp
int
cmp
jge
adc
lock
mov
push
pop
sbb
cld
repnz
adc
in
push
xor
jo
mov
icebp
xchg
movsb
push
aad
insl
mov
loop
aad
pop
jae
xlat
rcrl
shlb
in
mov
push
adc
aad
and
fsubl
inc
into
lret
mov
enter
test
ds
sbb
adc
shl
popf
adc
mov
inc
pop
mov
or
push
or
cmp
add
mov
pop
and
adc
adc
mov
mov
push
jnp
fxam
and
adc
adc
mov
andl
sub
or
pop
and
or
mov
and
aas
pusha
fidivl
gs
pushf
mov
or
mov
mov
push
loop
adcb
loopne
push
lret
loop
ja
push
cmpsl
lds
or
add
add
ret
fdivrl
clc
sbb
fmuls
arpl
outsl
test
jmp
mov
imul
xchg
movsl
mov
pop
mov
and
mov
int3
enter
es
xchg
stos
mov
mov
push
dec
sahf
pop
lea
cwtl
jmp
shrb
adc
push
mov
andb
cmp
aaa
adc
xchg
inc
pushf
jge
adc
dec
adc
adc
sub
jno
sub
lea
push
or
arpl
cs
das
dec
xchg
pop
in
sub
ret
jmp
dec
ret
mov
inc
xchg
sahf
frstor
adc
add
and
outsl
mov
inc
fstpl
data16
add
xchg
and
mov
pop
adc
jecxz
mov
mov
repnz
adc
push
sub
lahf
push
jae
xor
out
pop
mov
push
lods
int3
mov
cmp
mov
sahf
ljmp
insb
es
mov
sahf
mov
sahf
mov
pop
insl
packuswb
outsb
cld
or
outsb
adc
clc
xchg
lods
push
mov
jmp
lock
movsb
mov
sub
mov
int3
mov
add
add
cwtl
push
jp
jmp
inc
rcl
mov
xchg
mov
cmp
sbb
add
hlt
pop
and
pop
cmpl
arpl
lret
rcr
sub
adc
and
adc
push
popf
adc
cmp
sub
fsubl
add
das
push
xchg
push
or
sbb
mov
adc
jecxz
push
and
mov
out
or
push
and
cmpb
cli
in
pop
insl
add
inc
inc
sbb
adc
mov
repnz
jmp
jns
lock
adc
add
pop
ja
faddl
adc
jbe
sar
sub
mov
ret
adc
test
pop
cmp
ficomps
je
sub
push
and
and
in
mov
mov
cmp
push
jp
es
in
fdivrs
loop
lds
push
adc
xchg
mov
push
jb
xchg
sub
add
jp
mov
dec
or
in
push
orb
leave
addr16
push
sbb
pop
push
push
add
pop
adc
orl
mov
inc
push
inc
jns
enter
lret
mov
jge
mov
inc
imul
xor
cmp
in
in
xchg
jmp
jmp
into
std
imul
enter
mov
jo
adc
stos
sbb
es
mov
inc
je
sub
sbb
inc
test
cmc
stos
jne
sbb
stc
pop
adc
fstpt
dec
je
or
push
mov
ret
or
mov
jl
jo
adc
inc
clc
xchg
pop
mov
mov
adc
sbb
and
push
rep
cli
out
fmul
dec
xor
push
pop
outsl
fists
push
push
std
mov
fcmovbe
test
and
fidivl
jo
adc
dec
pop
outsl
fistpll
adc
shl
push
push
mov
pop
popa
xchg
inc
dec
pop
fdivs
xchg
ljmp
adcl
imul
cmp
int3
movb
pop
adc
adc
mov
xchg
aam
mov
mov
jne
faddl
adc
jns
outsl
frstor
ret
in
push
loope
aam
mov
fmull
insl
ljmp
jl
jno
dec
call
mov
loope
test
lea
aaa
movsb
xchg
nop
jge
adc
mov
adc
cli
cmc
add
jae
adc
pop
ret
test
cmp
popa
or
fistpll
adc
mov
test
fisubrs
mov
mov
data16
lea
push
adc
sbb
jp
adc
xchg
mov
hlt
lock
adc
enter
push
sbb
jnp
adc
xchg
jne
lds
adc
std
push
addr16
lds
adc
jb
mov
std
xor
adc
xor
mov
dec
pushf
cmp
mov
ja
adc
fldt
lahf
dec
xchg
and
test
jl
sub
xchg
mov
sbb
shll
add
add
push
adc
aas
mov
jae
mov
andb
repz
adc
call
in
pop
add
pop
clc
mov
push
js
ljmp
push
adc
out
xchg
dec
xchg
and
mov
leave
mov
push
cmp
sbb
shl
sbb
fsubs
stc
scas
movsb
mov
adc
xor
jnp
adc
sbb
push
lret
stos
pop
sub
jae
adc
icebp
sub
or
adc
push
imul
inc
aas
jl
testb
xorb
inc
orb
sub
adc
cmc
popf
stos
movsl
adc
sbb
fisttpl
ss
or
int3
imul
push
adc
sub
push
dec
mov
jmp
and
out
je
adc
fildl
orb
push
imul
sahf
xor
or
jnp
adc
xchg
sub
test
push
popf
adc
adc
mov
stos
jns
fdivs
sbb
and
push
adc
incl
popa
pop
fisubrl
sahf
dec
xchg
and
outsl
aad
xchg
cmp
mov
push
add
fcoml
jl
mov
stc
negb
dec
xor
mov
adc
rcr
adc
add
adc
mov
fst
scas
daa
flds
push
mov
mov
shrl
jg
les
adc
movsb
fisubl
add
push
rcr
adc
jnp
jo
adc
and
mulb
in
jae
adc
push
mov
in
jae
adc
push
insb
push
mov
mov
cltd
std
shr
add
inc
inc
stos
sbb
lods
sbb
imul
test
aam
lea
and
add
cmc
dec
add
pop
pop
jecxz
pusha
cltd
cmp
addl
ljmp
in
push
lea
dec
mov
push
adc
and
or
pop
push
xor
push
fsubs
mov
add
add
pusha
sbb
stc
pop
adc
sub
cmp
push
adc
cld
xor
stc
pop
adc
rolw
sbb
sub
adc
mov
lret
aam
adc
push
adc
cltd
push
xor
sbb
ret
xchg
cmp
enter
fucomi
add
add
xchg
popa
loope
loope
and
sti
mov
inc
jmp
cmp
arpl
cmp
dec
loop
test
jg
out
sbb
fnstenv
adc
out
or
push
icebp
fidivs
sahf
or
in
leave
sbb
or
jge
adc
adc
fsubrs
adc
and
nop
and
mov
sbb
push
adc
sub
out
and
pop
pusha
or
jb
enter
jg
mov
dec
adc
imul
lods
mov
fisubrl
sub
or
sub
stos
lock
cmp
scas
test
loope
int3
push
lods
jge
adc
push
push
loop
sub
fdivs
mov
sub
andb
jl
mov
in
push
jg
adc
jo
ljmp
xchg
mov
addr16
sbb
mov
sbb
inc
scas
sti
jo
cmp
aad
push
popa
dec
mov
test
shl
xchg
pop
sahf
push
jb
shrl
fidivrs
cmpsb
pop
jb
mov
jne
repz
push
sub
mov
filds
add
mov
pop
dec
xchg
cmp
iret
sbb
imul
lds
aaa
xchg
out
jno
xlat
stos
or
daa
sub
adc
xchg
aas
mov
and
stos
loope
inc
in
or
cmp
pop
test
xchg
jb
mov
repz
adc
fdivr
cmpsl
cmp
mov
inc
jmp
arpl
call
repnz
and
lret
in
mov
pop
repz
or
test
push
cs
popa
outsl
insl
stc
sub
push
push
dec
inc
sbb
subl
je
adc
add
pop
adc
xor
test
xchg
ds
mov
mov
adc
push
sbb
or
xchg
xor
dec
jo
out
mov
aad
mov
lds
mov
adc
mov
jmp
in
xchg
adc
test
push
jp
icebp
sub
sub
hlt
mov
mov
mov
cmp
push
push
pop
test
push
scas
mov
cs
xchg
push
fistps
cmp
je
mov
xor
dec
add
xchg
lods
pop
mov
and
arpl
imul
outsl
cmpsb
dec
popf
cmp
mov
jne
inc
int
dec
add
xchg
lods
test
dec
pop
scas
pop
add
enter
ljmp
mov
cmpsl
adc
aad
mov
cmp
jecxz
lock
test
pop
mov
dec
and
pusha
jl
mov
sbb
and
sbb
pushf
enter
shl
shr
loop
push
arpl
mov
mov
in
cmpsb
inc
lock
mov
push
dec
jo
dec
push
mov
jmp
sti
inc
sbb
inc
mov
daa
in
cmp
jbe
mov
pop
clc
in
push
call
call
adc
enter
xchg
jmp
adc
mov
jmp
and
add
dec
rcll
jbe
add
push
and
into
push
test
dec
rol
lds
sbb
test
jmp
sbb
xchg
test
movsb
xor
insl
mov
jne
xlat
call
loopne,pt
xor
fdiv
loope
cmc
sahf
push
add
test
mov
inc
adc
cmpsl
shlb
out
mov
sub
roll
adc
xchg
dec
je
mov
mov
jne
ret
jno
dec
loope
fnsave
xor
add
int
mov
addl
call
lret
popf
push
call
pop
add
pushf
jg
or
mov
push
fsubr
add
mov
xchg
scas
mov
sub
jl
sub
or
sub
stos
lock
cmp
scas
test
loope
int3
push
mov
push
adc
push
push
loop
xlat
test
mov
sub
addb
jl
mov
in
push
jg
adc
jo
ljmp
and
out
dec
loope
mov
addr16
sbb
push
mov
xchg
sbb
enter
out
mov
or
pop
clc
inc
xor
call
xchg
fstl
test
dec
xchg
and
fsubp
cli
int3
rcrl
dec
int3
nop
jo
lds
aam
mov
ret
lea
sub
sub
pusha
mov
in
dec
push
adc
fsubrp
jecxz
add
fsubr
dec
lods
push
cmp
jnp
enter
sub
mov
xchg
call
jne
mov
inc
inc
mov
sahf
inc
out
in
cmp
test
mov
std
arpl
imul
cltd
outsl
jecxz
movsl
ret
dec
sbb
dec
push
fsts
scas
sbb
mov
xor
inc
or
mov
adc
fsub
jecxz
sub
lock
rorl
nop
movsl
sbb
adc
xlat
rorl
ds
mov
inc
dec
roll
and
aad
test
lahf
pop
icebp
jo
out
xchg
outsb
mov
add
xchg
das
lds
sahf
lods
loopne
push
adc
cmp
mov
int
pop
adc
mov
sub
xchg
jo
jecxz
jnp
inc
repnz
pop
and
ja
inc
push
adc
mov
rcll
loop
adc
addl
adc
fs
mov
dec
add
or
sbb
jge
adc
lock
in
and
pusha
je
cltd
sbbl
shr
push
mov
jmp
xchg
mov
dec
adc
add
rorb
or
sub
mov
cwtl
fidivrs
push
dec
inc
push
cmc
ss
mov
test
sub
sar
nop
push
repnz
jo
mov
or
pop
cmp
or
or
xchg
mov
outsl
lods
mov
adcl
jno
into
mov
addl
stos
jbe
out
pop
lds
stos
sub
dec
push
nop
dec
fwait
mov
cs
loopne
lcall
inc
jp
subb
inc
xchg
hlt
dec
sub
adc
cli
popa
xchg
lock
mov
cmp
ret
ror
xor
xorps
rolb
in
in
fcomps
fsubrs
xorl
roll
mov
sbb
arpl
lcall
cli
int
movsb
push
outsb
add
les
mov
sbb
mov
jno
and
sub
or
popf
xor
bound
lds
cmp
xchg
xor
xchg
xor
shrb
add
addr16
dec
popf
in
cmpb
stos
scas
cmpsb
out
shlb
sub
adc
into
adc
and
nop
fbstp
push
loop
iret
test
mov
xor
shrb
stc
sbb
aaa
in
int
aam
add
test
mov
fnstenv
cmp
and
lea
lds
or
data16
ret
addr16
dec
xor
mov
push
mov
stc
adc
arpl
sbb
push
cs
loopne
bound
xor
sahf
mov
lods
xor
adc
scas
repz
sti
icebp
mov
and
push
cmpsl
pop
lds
loopne
stos
mov
sub
sbb
jae
lcall
xchg
sahf
cmp
mov
add
sub
mov
lahf
insl
sbb
and
jg
fstps
stc
mov
lds
inc
sub
call
cmp
lock
mov
enter
inc
lds
test
jnp
jecxz,pn
stos
jo
in
cs
cmovl
stc
jae
enter
popl
sub
pop
ret
repz
shl
pop
pop
jl
insl
lea
pop
jg
sbb
insb
mov
sub
pop
enter
jnp
or
xor
lds
data16
mov
andl
xchg
sbb
mov
lds
xchg
stos
add
mov
jle
scas
mov
lahf
add
aad
push
leave
and
rorl
leave
divl
jb
push
inc
pop
aas
adc
aas
sbb
mov
sarb
lahf
sbb
and
jnp
mov
sub
xchg
push
push
pop
ds
int3
jp
incl
jecxz
idiv
loopne
push
sub
cwtl
in
xchg
mov
sub
adc
int
xchg
std
mov
mov
std
out
loope
dec
mov
add
repnz
pop
sub
sub
in
add
movsl
std
or
mov
dec
fsubl
xchg
fs
jp
adc
ficompl
mov
roll
adc
sbb
pop
sbb
mov
out
stos
iret
pusha
mov
jle
xchg
xchg
dec
sub
mov
cmc
or
jae
imul
and
push
inc
lods
test
adc
int
aaa
push
nop
mov
lods
xchg
jmp
mov
insl
sahf
jbe
mov
inc
jl
mov
ds
and
pusha
push
cwtl
pop
sub
jbe
sbb
cmp
lahf
in
jge
adc
push
adc
sub
loope
cmp
jle
and
out
add
jo
jmp
jle
or
mov
popf
jne
push
sub
xchg
lods
xchg
cmp
pop
cmp
push
sub
shrb
mov
test
sahf
xchg
cltd
sub
roll
sti
std
test
outsb
mov
jnp
std
ret
pop
dec
push
loop
and
mov
hlt
push
hlt
out
inc
inc
mov
addb
shlb
fs
mov
lcall
outsb
push
cmp
pusha
stos
xchg
ret
mov
cmc
loop
jbe
add
pop
cmc
adc
fcoms
jb
mov
mov
in
xchg
fwait
push
xlat
fmul
or
dec
adc
xlat
pop
xchg
popa
cmp
mov
inc
pop
lea
jb
mov
mov
fldenv
cmp
into
out
outsb
jecxz,pn
cli
xchg
or
gs
jb
out
add
les
dec
push
std
ret
fs
cwtl
xor
add
sbb
pop
pop
nop
jb
mov
cmc
pusha
cmp
movsb
ret
popa
mov
adc
push
insl
pop
pop
cmp
fistpll
pop
push
xlat
daa
push
clc
rcrb
aaa
xor
mov
lock
pop
dec
insw
inc
in
fistpll
add
outsb
stos
cli
jecxz
dec
fcoml
dec
lds
sbb
push
subl
jecxz
imul
popf
adc
andps
mov
sub
rorl
push
jno
loopne
push
adc
roll
mov
gs
jo
cltd
shrl
mov
or
dec
jo
int3
mov
xor
dec
jnp
fdivrs
adc
lds
push
adc
int3
hlt
mov
lahf
notl
cmp
add
pop
xchg
mov
cmp
enter
hlt
rorl
outsl
lock
bound
mov
call
repnz
dec
in
aaa
inc
testb
dec
sbb
cmp
and
cmp
push
arpl
cld
jns
incb
adc
mov
mov
xchg
mov
arpl
aaa
in
push
jg
adc
jo
ljmp
and
test
xchg
sub
push
pop
icebp
and
xchg
add
sub
es
sbbl
mov
mov
push
adc
cmc
jecxz
mov
or
sub
xchg
scas
lods
xchg
mov
bound
sbb
idiv
decl
fidivl
xchg
mov
pop
imul
in
test
push
rorl
inc
shll
pop
cmpsl
xorl
shlb
movsl
and
leave
dec
adc
gs
sysexit
jg
jle
rolb
pop
sub
adc
sbb
data16
nop
addr16
popf
jo
out
imul
mov
add
mov
cmpl
add
mov
and
and
aad
cli
xor
into
cmp
mov
jns
fstps
jnp
push
add
stos
mov
mov
push
push
jmp
test
divb
sub
fucomi
shll
mov
xchg
xor
icebp
lods
jp
mov
aam
lock
ja
mov
inc
push
ret
or
sub
icebp
jl
push
out
xchg
sbb
test
subl
adc
push
jnp
or
sar
arpl
and
inc
cli
mov
xlat
jne
push
hlt
popa
and
pop
jae
push
jp
pop
push
pop
dec
gs
jecxz
push
push
push
aad
je
push
loope
leave
stos
push
cmpsl
ret
push
adc
fnsave
loope
pushf
stc
cld
movsl
ret
sbb
mov
pop
or
cmc
push
stos
pop
dec
pop
xor
rorl
ret
inc
inc
inc
mov
rorl
cs
dec
mov
sbb
call
nop
scas
sbb
xchg
sbb
scas
cmpsl
clc
mov
pop
std
push
xchg
push
push
or
sbb
adc
enter
dec
out
jle
jno
ss
pusha
je
adc
arpl
cmpl
imul
imul
adc
lods
mov
jmp
cwtl
jecxz
ja
out
sub
jb
push
inc
dec
pop
cmpsb
xchg
xchg
in
shl
aaa
cmp
gs
popa
xor
add
adc
mov
sbb
push
fidivrl
jg
iret
sub
scas
xchg
mov
xor
xchg
mov
adc
adc
xchg
pop
add
ret
inc
stos
jp
jno
sub
jnp
add
shll
into
sbb
mov
lret
insb
push
mov
adcb
imul
mov
ja
stc
mov
jg
rcrl
pop
jg
fiadds
loope
mov
icebp
cs
mov
push
mov
loop
ret
test
filds
xchg
mov
add
sbb
add
mov
movsb
popf
mov
mov
mov
push
dec
dec
popf
jl
popa
add
and
inc
jmp
mov
ds
movsb
call
imul
test
in
mov
cmpl
shlb
sti
xor
pushf
mov
xor
xlat
push
mov
in
jns
sub
or
rorl
rcrb
inc
test
sub
cwtl
mov
push
inc
mov
ljmp
scas
mov
cmp
test
cmp
inc
mov
push
adc
fisubrl
mov
sbb
cwtl
pushf
adcl
push
push
push
in
xor
mov
xchg
cmpsb
cmp
js
dec
push
push
fcmovbe
addl
arpl
jge
sarb
out
lahf
mov
pop
cmp
fbstp
cli
jg
js
ja
mov
pop
jb
push
mov
xchg
fldcw
pop
cs
push
cltd
or
mov
vmovshdup
or
lahf
jo
mov
in
addr16
or
mov
adcl
add
rolb
pushf
movsb
xchg
imul
popa
mov
out
dec
les
ret
shr
push
mov
push
adc
mov
lods
retw
nop
inc
jge
aad
dec
xor
pop
mov
xchg
insl
das
orb
xchg
fiadds
call
mov
jmp
lcall
xor
sbb
jle
xchg
in
push
cmp
lods
sub
push
sub
sbb
cmp
inc
jb
push
sub
rcll
add
cmc
jecxz
divl
dec
cmc
mov
adc
dec
loope
push
iret
cs
and
dec
xchg
cmp
sbb
mov
into
iret
xorb
aaa
mov
pusha
mov
rcll
pop
jg
xchg
mov
es
fdivp
mov
dec
shl
xchg
push
push
push
in
fisubrs
es
call
out
and
jns
mov
or
push
pushf
pushf
xor
sub
test
ret
mov
in
das
je
jns
fistl
add
dec
xchg
es
gs
in
pop
pop
cmp
xchg
daa
les
add
imul
mov
cmc
or
fwait
xchg
push
adc
dec
add
jg
rcl
inc
out
ljmp
subl
jns
aaa
mov
aas
pop
pop
imul
cmp
int
stos
jno
popa
cltd
inc
pop
mov
or
inc
lods
xchg
and
and
or
int
js
push
lea
dec
push
in
xchg
loopne
cmpsl
dec
mov
jnp
lret
mov
mov
and
js
push
fcompl
daa
mov
dec
pop
arpl
push
and
lock
pop
ljmp
cmp
iret
and
lock
std
subl
dec
adc
cmp
fstpt
mov
jmp
fsubrs
or
or
adc
jg
inc
xchg
add
cmp
and
out
stos
mov
and
insb
idivl
loope
jns
jb
in
lcall
jge
push
push
lods
push
push
out
sti
xchg
rcrb
inc
imul
mov
sbb
mov
xorb
xor
test
push
sar
fcompl
out
ja
fistpll
jle
sti
add
cmpsb
ljmp
ret
inc
adc
jge
push
jno
daa
mov
fidivl
push
sbb
mov
or
dec
fistpll
pop
add
imul
jp
sub
arpl
push
and
push
movb
call
and
aam
push
cmpsb
in
mov
addl
mov
mov
xor
xchg
xlat
push
xlat
call
xchg
out
jle
push
inc
xor
push
test
cmp
outsl
and
fbstp
cli
jg
aam
movsl
mov
mov
out
push
movsl
mov
pop
arpl
mov
pushl
fdivp
aam
cs
cmpsb
movsb
sbb
out
xchg
bound
cmpsl
lods
shrl
mov
or
je
mov
jno
sbb
repz
jecxz
aaa
out
scas
dec
xchg
mov
arpl
jo
fistpll
pop
sahf
pop
jb
mov
out
pop
mov
dec
xchg
push
outsl
adc
xchg
push
cwtl
outsl
sub
adc
lea
sub
cld
shl
gs
rcll
and
push
lock
lds
adc
jno
cld
jmp
push
movsl
dec
and
xor
shl
xor
sarl
add
mov
jge
add
xor
and
mov
fstps
mov
pop
out
cli
adc
mov
loope
xchg
and
mov
pop
out
pop
scas
push
sub
stos
mov
out
retw
sti
sub
push
jmp
adc
inc
cwtl
and
enter
psubd
mov
mov
outsb
jmp
inc
inc
xchg
pushf
out
inc
mov
in
pop
xchg
dec
lahf
stos
mov
xlat
movsl
xor
repnz
fidivrl
mov
into
adc
mov
adc
dec
addr16
and
push
push
push
mov
xchg
call
jo
or
into
add
cs
imul
mov
testb
aaa
test
dec
dec
jbe
pop
out
xor
pop
ret
mov
sub
jle
adc
pop
cmp
out
or
sub
sub
out
mov
and
sub
and
ficompl
cs
and
test
jle
adc
test
mov
fidivrs
in
fmul
aad
pop
pop
xorl
mov
out
sti
aam
push
adc
subl
dec
push
mov
jl
fcmovbe
jecxz
je
ds
add
js
adc
xchg
test
push
adc
sbb
mov
dec
fsubrs
mov
or
cld
cmpsl
pop
fdivrp
addr16
jg
in
cmpsl
arpl
push
jle
adc
push
movsl
testb
enter
daa
xor
cli
cld
mov
std
gs
add
and
xchg
dec
and
push
das
popf
cwtl
notl
or
sbb
mov
lds
mov
movsl
fldenv
ret
in
ja
jne
jle
adc
call
cmc
jo
lahf
pop
mov
pusha
pop
or
fnstcw
jo
push
adc
stc
sbb
pop
xor
dec
dec
gs
imul
push
ljmp
adc
mov
les
add
or
and
mov
or
fldcw
sbb
enter
call
mov
sub
or
js
jo
adc
stos
mov
adc
int
les
push
bound
adc
push
add
pop
and
push
adc
push
addr16
push
aam
push
xor
xor
arpl
mov
jo
int
jmp
aam
jno
dec
xchg
and
adc
push
adc
fwait
pop
mov
imul
clc
cli
cmc
inc
cmpsb
adc
adc
test
jl
mov
test
xlat
std
push
xchg
push
lds
insl
fcmovnu
insl
fidivs
jo
adc
fcom
lea
mov
mov
sti
fbstp
xchg
insl
add
add
mov
aaa
outsl
dec
mov
adc
adcl
xchg
and
push
icebp
es
push
adc
inc
inc
notb
ret
repz
dec
call
mov
aam
push
mov
and
je
mov
jle
adc
xchg
sbb
popf
and
sbb
push
cmpsl
cmpsb
cmp
push
push
callw
push
adc
mov
push
xor
and
jae
fsubr
lea
unpckhps
mov
add
push
movsb
dec
cmp
dec
xchg
test
pusha
jle
adc
test
or
jle
adc
mov
push
fbld
stos
pusha
mov
fcomip
stos
jle
cld
decl
push
mov
pop
es
pop
int3
jle
adc
sbb
movsb
jp
mov
movsl
push
jle
adc
shrl
dec
imul
cmpsb
pop
mov
mov
push
dec
jle
adc
sbb
shll
sbb
add
push
adc
xchg
mov
mov
imul
xchg
cmp
mov
xor
nop
aad
mov
or
testl
mov
jae
sub
adc
sub
pop
cltd
dec
pushf
cmpsl
pop
bound
popl
aad
scas
stos
movsl
adc
adc
sbb
add
stc
or
add
rolb
ss
fbld
sub
adc
sbb
inc
icebp
lea
clc
adc
jo
iret
mov
aas
int
stos
mov
push
cmpsb
inc
adc
push
adc
hlt
and
pop
aas
enter
insl
mov
sbb
xor
jle
adc
std
cmp
sbb
inc
pusha
dec
insl
fidivrs
in
fadd
aad
les
push
adc
and
pop
mov
ret
mov
and
push
mov
cld
imul
stos
call
mov
xchg
sub
int3
jle
adc
repnz
jnp
adc
daa
mov
xchg
and
stos
dec
xchg
push
outsb
pop
and
addr16
jbe
mov
pop
orb
sbb
shlb
adc
mov
mov
jae,pn
mov
test
jl
and
push
adc
movsl
loop,pn
aaa
dec
ret
jge
mov
jge
int3
nop
test
mov
xchg
jmp
mov
add
or
es
pusha
jle
adc
fmull
mov
mov
jo
push
adc
jo
and
rcll
pop
loopne
aas
lock
lods
xor
xor
rclb
les
pop
int3
jle
adc
xchg
data16
call
cld
jge
adc
aas
jle
dec
mov
inc
enter
inc
cmp
movsb
cmp
data16
int
add
fcom
rolb
adc
shlb
cmp
leave
clc
mov
sub
inc
adc
mov
and
sarb
popf
and
push
xor
dec
adc
aam
adc
aam
dec
fnstsw
mov
cmp
adc
out
jge
rcrl
test
jno
in
push
adc
sti
mov
dec
loope
inc
test
stos
push
aaa
outsl
sbb
or
adc
mov
inc
nop
sub
sbb
inc
ret
fcomip
push
fsubr
sahf
mov
movsb
dec
test
imul
push
xor
push
adc
inc
fistpll
inc
fiadds
ljmp
xchg
and
lods
pop
sbb
sbb
lcall
adcl
pusha
and
mov
mov
push
adc
inc
addb
xchg
or
pop
adc
cmp
and
push
jge
push
inc
jg
adc
out
mov
mov
into
and
int3
or
pop
adc
adc
mov
or
pop
adc
mov
das
push
xchg
cwtl
out
sbb
fdivl
cmp
dec
push
lods
pop
cmpsb
testb
or
notb
push
movsb
dec
ds
loopne
sub
cli
mov
es
sbb
jnp
sub
push
adc
sub
push
adc
and
pop
inc
or
mov
adc
jmp
add
pop
adc
adc
pop
adc
sub
sbbl
popa
add
mov
lcall
stos
push
xor
mov
and
jno
sub
les
int3
sbb
pop
repz
lahf
into
push
mov
jg
adc
adc
clc
mov
bound
jg
adc
outsb
cwtl
cs
push
adc
pop
adc
sbb
sub
jg
adc
xchg
rcrb
xor
jb
inc
jo
xor
hlt
jge
adc
xlat
dec
xor
add
jle
adc
push
mov
rcr
pop
adc
cvttps2pi
pop
cltd
dec
jns
jle
adc
pop
add
in
sbb
fcomip
dec
outsb
jp
adc
je
mov
pop
rcl
jg
jo
and
shlb
jnp
into
sub
push
or
push
ret
hlt
ja
fdivs
adc
mov
stos
mov
or
lret
or
sbb
and
push
adc
sub
test
pop
pusha
or
sbb
lret
jo
adc
sub
mov
ret
sub
cmpl
or
sbbl
jge
mov
xor
inc
sbbl
mov
insl
imul
mov
pop
imull
mov
xchg
stos
or
jo
std
repnz
popa
movsl
and
mov
fnsave
dec
inc
sbb
jl
cwtl
fadds
nop
fsubl
pop
cmp
aad
arpl
pusha
pop
addr16
fisttpll
jns
jae
cmpsl
in
nop
xchg
shl
popf
sahf
or
mov
dec
std
jne
jnp
int3
xchg
inc
divl
xchg
rorb
push
lds
vpminsw
xchg
out
or
popf
mov
adc
ja
jae
cltd
or
mov
and
jmp
sbb
adcl
scas
or
in
cltd
dec
mov
out
push
out
cmpsl
inc
stos
inc
call
mov
fmulp
cmp
lds
sub
loope
test
add
sub
dec
pop
lahf
xchg
aas
jae
das
pop
jbe
xchg
cmp
mov
push
sbb
push
push
push
push
in
scas
cs
data16
popa
and
push
adc
nop
mov
or
shlb
pop
mov
in
sub
adc
test
iret
outsl
and
lret
jno
cmp
andl
call
mov
jg
adc
out
pop
je
push
adc
push
adc
in
fcomi
push
in
adc
xchg
pop
scas
fsub
dec
arpl
add
pop
mov
jge
adc
outsb
movsb
dec
out
inc
xor
xor
int
stos
dec
pushf
cmp
or
push
adc
stos
imul
pushf
pop
rcll
push
lods
sub
xchg
add
adc
pop
or
jecxz
movsb
dec
inc
and
ds
jnp
out
inc
lods
pop
adc
js
fistpll
jae
mov
sahf
gs
std
mov
shl
loope
inc
lea
arpl
pop
hlt
and
mov
push
dec
dec
fbld
jg
mov
pop
pop
fsub
dec
sbb
push
icebp
sahf
outsl
push
dec
shr
out
icebp
cli
cmc
ljmp
shrb
mov
jecxz
push
mov
sbb
outsl
out
ret
dec
and
mov
stc
rolb
enter
push
in
pop
xchg
das
push
sub
cmp
mov
xchg
mov
mov
loope
lds
je
ss
cs
push
popf
mov
gs
sub
rorb
jmp
loopne
shrb
push
mov
mov
jge
outsb
or
test
ja
pop
es
xor
inc
sbb
push
pop
lcall
fdivs
stos
pop
repnz
sarl
push
test
add
icebp
jmp
fwait
pop
ja
jne
insb
pop
dec
push
les
daa
cltd
enter
pop
imulb
and
mov
orl
sbbl
movsl
fdivrl
inc
lahf
cmp
cltd
jne
icebp
xor
lcall
popf
cmp
adc
mov
pop
fisubrl
mov
mov
lds
sub
and
int3
sub
dec
pop
and
rolb
push
adc
cmc
bound
sub
push
add
cmp
pop
test
insb
stos
popf
or
dec
or
inc
in
push
mov
in
or
je
mov
push
popa
sub
fsubrs
push
adc
orb
pop
sub
mov
outsl
test
subb
lea
loope
lahf
dec
fmull
stos
dec
inc
mov
fisubs
rolb
das
arpl
sub
clc
ja
xchg
xchg
push
inc
or
call
push
and
leave
fs
std
outsl
in
mov
mov
xchg
iret
sbb
test
mov
mov
push
popf
mov
das
aas
js
out
mov
sub
mov
pop
jb
mov
stc
ds
push
cmp
cmp
fldt
sub
dec
out
lret
cmc
mov
iret
or
push
push
xor
fs
xlat
pop
faddl
inc
push
ljmp
xchg
push
push
xorb
or
mov
int
push
mov
fmul
mov
jl
cmp
cmp
ljmp
lds
shrl
cmp
mov
jo
fwait
jp
pop
cmpsb
mov
ss
loop
mov
test
rcl
mov
repnz
push
dec
cmp
pop
or
xor
not
xor
push
xchg
mov
mov
inc
mov
out
jle
bound
lods
outsl
arpl
sbb
shlb
xlat
mov
xor
push
in
call
add
mov
movsl
pop
mov
adc
pop
addr16
dec
jg
mov
jg
ljmp
mov
loopne
pushf
icebp
push
pop
cld
pop
mov
aas
repnz
lea
or
je
push
ss
mov
shlb
test
cmp
popa
inc
mov
xor
insb
cmp
fcmovnb
jl
loope
popa
psubusb
stc
test
les
jmp
mov
in
repnz
inc
lods
xchg
in
push
sub
lret
mov
jg
movl
inc
lock
and
test
lret
outsb
aam
fsubr
mov
or
jle
testb
inc
add
mov
cs
fldcw
sti
jp
sahf
outsl
push
mov
ljmp
adc
aam
add
bound
and
pop
mov
ja
cmc
arpl
frstor
push
xchg
and
out
movsl
cmp
xchg
pop
mov
shr
cltd
int3
nop
mov
mov
jle
je
negb
orl
xor
add
adc
inc
or
daa
dec
sbb
dec
pop
les
stos
mov
xor
ret
inc
adc
rcll
jp
cld
shlb
mov
push
int3
scas
pop
cmp
jmp
push
mov
cwtl
pop
push
es
dec
sbb
dec
xchg
pop
scas
dec
pop
aas
lock
test
or
pop
mov
dec
jmp
cmp
test
pushf
sub
out
test
mov
je
jge
stos
fsts
subl
cmp
into
mov
jmp
jp
pop
pop
pop
int
cs
and
sbb
nop
cs
cwtl
sub
ret
mov
add
and
sbb
pop
stc
push
dec
mov
les
dec
faddl
sub
lret
daa
mov
lret
dec
jecxz
jns
movsl
xor
into
or
fstl
scas
out
sbbb
jae
and
sahf
xchg
xchg
inc
mov
in
push
movsb
addr16
out
movsl
pop
mov
lock
icebp
lret
or
sub
cmp
testl
and
pop
andl
fsubrp
mov
divl
gs
insl
ja
aaa
call
imul
sbb
lds
pop
adc
adc
insb
aad
lock
jnp
mov
dec
mov
scas
mov
xor
inc
and
mov
add
fcmovb
add
movsl
dec
out
mov
fisubrl
cmpsl
dec
popf
mov
shld
fdivrl
and
adc
xor
mov
add
lods
in
dec
inc
daa
inc
xchg
shrl
pop
ret
imul
adc
push
jge
xchg
in
aas
cmpsl
pop
fisubs
or
shr
in
xchg
aaa
in
pop
lret
iret
jecxz
push
nop
dec
lods
addr16
in
out
insb
xor
stos
cltd
test
mov
mov
mov
nop
shl
ret
int
lcall
jno
dec
cwtl
pop
incb
fdivrs
sbb
or
cmp
xchg
repnz
sub
lcall
and
or
mov
add
pop
add
pop
lahf
scas
jl
dec
push
test
xchg
sub
aaa
sub
sbb
sahf
fs
jb
cltd
mov
std
jmp
addr16
mov
sub
sub
js
mov
and
shr
sub
xor
and
lahf
sbb
sbb
add
adc
sahf
xchg
mov
sbb
push
add
lds
sbb
outsl
and
mov
jmp
out
sub
xchg
scas
mov
pop
int
xor
or
or
mov
lret
push
scas
xchg
out
xchg
mov
bound
pop
int
xor
enter
add
rcl
int3
push
std
jo
ds
andb
loope
pop
dec
jp
sahf
js
lods
jg
mov
pop
push
aad
sti
mov
andl
cltd
add
stc
test
addb
add
aad
mov
test
movsb
sbb
pop
ret
jmp
stc
loop
loopne
test
cld
std
mov
imul
xor
fidivrl
pop
mov
and
stc
adc
mov
std
mov
dec
ret
movsb
dec
cmp
dec
mov
mov
shl
enter
mov
ficoms
jge
pop
cs
fidivl
pop
int
sub
push
sbb
dec
xchg
outsb
adc
mov
int3
jp
adc
js
cmp
push
loop
movsb
push
lods
movsb
add
mov
je
std
loopne
enter
add
push
and
out
pop
xchg
out
cmp
pop
lcall
pusha
or
jno
xor
add
add
push
mov
cmp
and
pusha
or
cmpsb
dec
push
mov
test
jecxz
or
inc
push
pushl
in
outsl
push
sahf
cmp
imul
add
add
mov
nop
lods
add
mov
andb
cmp
mov
pop
shrb
sarl
mov
xchg
pop
loop
cltd
shlb
push
xchg
popf
push
xchg
pushf
pop
xchg
outsl
stos
dec
rcrl
inc
and
into
mov
stos
add
movsb
pop
pop
xchg
mov
xor
mov
adc
bound
sbb
pop
int3
pop
mov
stc
xor
shll
lret
andb
cli
mov
dec
dec
jb
das
push
int3
imul
xchg
iret
stos
dec
jb
dec
cwtl
leave
jnp
mov
or
data16
add
inc
test
push
push
popa
adc
jnp
or
adc
xchg
jmp
xchg
js
dec
adc
add
dec
dec
xchg
stos
test
push
dec
arpl
pop
bnd
jecxz
jnp
mov
jmp
cld
push
hlt
bound
fcoml
push
and
pop
jo
pop
pop
stc
fstps
orl
and
pop
or
dec
xchg
pop
lods
ftst
dec
adc
testb
pop
mov
out
pop
std
xlat
dec
and
xchg
and
lods
cmpsb
stos
addr16
mov
mov
dec
dec
lock
jg
ldmxcsr
icebp
mov
and
push
shrl
mov
inc
fists
sbb
fistpl
out
pop
cli
subl
pop
nop
push
inc
push
ds
dec
test
mov
cmp
cs
and
sbb
pop
loopne
push
das
mov
roll
sbb
xchg
sbb
hlt
dec
pop
mov
loope
outsl
mov
pop
fsubrs
sub
adc
jne
mov
cmp
pop
adc
lret
jl
sbb
adc
aam
cld
sbb
adc
cmp
adc
arpl
sbb
insl
repz
stos
adc
rclb
xchg
add
test
fistps
ja
in
pop
mov
mov
lahf
jge
lods
insb
and
or
sahf
ljmp
pop
in
roll
or
in
push
lcall
ficoml
mov
dec
jbe
jmp
add
inc
stc
sbb
in
add
enter
rclb
scas
repz
cmp
frstor
adc
mov
ljmp
adc
sub
in
add
imull
mov
adc
fists
jae
adc
fdivs
outsb
push
lock
push
inc
adc
push
adc
and
insl
cwtl
repz
fucomp
out
outsb
push
repz
jno
adc
dec
push
inc
or
pop
ljmp
fcmovu
insl
mov
out
jge
add
in
xchg
lods
or
cli
cmc
lahf
call
cltd
mov
push
and
push
adc
loopne
pop
jecxz
xor
sub
push
cld
or
cmp
cld
sbb
adc
insl
push
cld
sbb
adc
pusha
jo
adc
lcall
push
imul
lods
insb
and
ds
add
add
fistps
sub
pop
outsb
push
repnz
mov
int3
sarl
int3
nop
stos
cwtl
add
xor
push
and
test
and
sub
lods
hlt
sbb
ja
or
add
adc
lahf
insl
push
inc
pop
cmp
je
push
adc
popf
mov
arpl
lret
jnp
lea
into
out
dec
in
stos
cld
mov
jecxz
mov
pop
enter
pop
or
mov
adc
inc
add
adc
mov
fucom
or
cmc
test
lret
adc
push
adc
daa
cmp
mov
sbb
pop
repz
les
add
jno
adc
sbb
mov
dec
sti
pop
fstps
mov
jecxz
jge
outsb
scas
loope
sub
jno
shlb
xchg
inc
repnz
inc
cmpsl
dec
mov
jne
imul
ficompl
add
ffree
je
xor
xchg
add
push
xchg
iret
or
jecxz
in
mov
stos
push
xchg
xor
repz
mov
mov
push
xchg
int
dec
sbb
movsl
push
out
shlb
jb
pop
nop
jmp
cli
xchg
insb
dec
dec
cltd
ret
cmp
mov
divl
in
pop
xchg
lock
inc
pop
dec
and
adc
mov
add
pop
push
lods
pop
loope
fneni(8087
loope
mov
xchg
hlt
fsubrl
fsubrs
stos
stos
push
push
xor
mov
mov
ds
das
insb
pop
mov
push
scas
push
mov
sub
mov
movsb
dec
jecxz
adcl
adc
arpl
shll
jae
in
lahf
out
mov
aad
mov
xor
test
cwtl
xchg
pop
mov
xchg
push
mov
push
cmc
ss
hlt
rep
jno
stos
mov
sbb
enter
popa
adc
mov
mov
push
adc
int
xor
push
or
cmpsl
andl
std
sub
std
imul
jns
std
xor
push
repnz
lods
adc
scas
es
ljmp
sti
movsl
int
pop
lahf
pop
mov
dec
addr16
dec
mov
add
cmp
into
sbb
loope
inc
xchg
sub
into
aad
pop
call
sahf
roll
stos
popf
fdivl
inc
pusha
mov
pop
dec
jne
add
or
inc
movsb
pop
sub
movsb
leave
data16
inc
out
fsts
cmp
outsl
jo
int
jmp
inc
sarl
add
loopne
adcl
in
aad
ret
inc
adc
jg
sbb
fucomi
sbb
mov
jg
adc
cmp
fldenv
popa
or
push
int
aam
aam
inc
inc
es
and
js
push
adc
addps
lret
js
sarb
imul
xchg
out
push
ljmp
push
dec
pop
sub
lea
fdivr
std
push
xchg
mov
call
out
cmc
lods
pop
mov
out
sbb
ret
ja
or
int3
push
xlat
push
inc
xchg
cmp
and
outsb
jmp
mov
add
inc
aad
int
lock
std
cli
pop
jge
push
lods
fisttpl
xor
xchg
iret
or
push
jb
enter
jle
incb
jo
pushf
push
loop
dec
test
dec
xchg
shlb
jl
sbb
fistpll
cli
cmc
ljmp
outsb
stos
xchg
and
mov
and
mov
dec
scas
push
movsb
dec
push
xor
lret
and
lods
pop
cmp
outsl
fistpll
cli
cmc
cwtl
retw
push
test
cmp
cli
fisubs
into
lea
mov
inc
jnp
loopne
jo
daa
mov
fistpll
xchg
sub
add
ret
sbb
mov
paddq
inc
imul
jmp
add
fbld
and
mov
mov
inc
push
add
or
rorl
mov
mov
loop
arpl
cld
jbe
push
xor
push
add
js
jle
adc
and
dec
nop
cmp
int3
jle
adc
fiadds
ja
loopne
mov
fimuls
int
xor
in
inc
cwtl
das
out
in
xchg
ja
sub
int3
cltd
lret
xchg
stos
imul
and
ljmp
mov
cmpl
ja
pop
jl
mov
sub
sub
mov
adc
es
mov
pop
xchg
xchg
inc
mov
movsl
jns
add
fisttps
imul
push
xor
push
cmpsl
xchg
cmp
push
das
sub
dec
je
out
popf
adcb
test
add
in
dec
adc
jbe
mov
mov
mov
popf
sbb
push
inc
xchg
test
subb
jne
shrl
lea
movsl
gs
cmp
jecxz
lock
roll
add
pop
mov
cs
inc
insb
aas
push
cmp
mov
lods
pop
fmuls
fdivrl
loope
inc
push
scas
cmpsl
add
dec
xchg
xor
push
shrl
mov
stos
cmp
stc
jbe
sbbb
push
fstl
pop
fstl
mov
dec
sbb
addl
sub
pushf
xchg
jmp
mov
cmp
mov
arpl
xchg
xchg
scas
test
jae
cmp
push
dec
xchg
cmp
xlat
mov
pop
and
cmp
sub
mov
sbb
add
outsb
xchg
pop
repz
std
imul
repnz
and
mov
and
pop
fcoml
pop
sbb
adc
insb
addr16
adc
jge
imul
incl
popa
dec
or
rol
stc
adc
clc
cmp
jbe
xchg
add
jle
leave
pop
fisttpl
in
jl
mov
lods
incb
cmpsb
adc
push
fimull
jmp
push
mov
fwait
int3
xor
add
arpl
sub
xchg
xchg
lds
sti
rcrl
imul
mov
xchg
lret
sbb
add
sbb
xchg
xchg
lds
sti
rcrl
imul
mov
xchg
lret
sbb
add
sbb
jle
es
lds
sti
rcrl
imul
push
das
shll
stos
mov
cmc
sub
dec
ds
sti
aad
sarl
addr16
mov
jg
sbb
fistpll
mov
sbb
ljmp
and
push
inc
mov
jmp
outsl
fistpll
cli
cmc
sahf
xchg
push
movsb
dec
ds
loopne
popa
sub
mov
mov
sbb
outsl
test
jl
jb
cli
cmc
cs
dec
mov
dec
xchg
out
pop
in
dec
out
sbb
lea
mov
add
pop
cwtl
scas
jp
movsb
dec
cmp
dec
cmp
sbb
lea
inc
sbb
jmp
jne
pop
cmp
rcrl
pop
dec
xchg
pop
in
clc
sub
nop
stos
or
imul
or
xchg
and
push
pop
pop
add
adc
hlt
inc
addb
leave
in
adc
xchg
jge
jno
sarl
sub
cmpsb
je
lea
inc
push
clc
inc
addb
in
or
test
test
imul
or
inc
cmp
inc
fldl
or
lods
sar
dec
into
mov
push
cld
outsl
push
push
mov
lock
lret
inc
or
jmp
lock
loop
pop
mov
mov
mov
or
sahf
adc
push
adc
and
add
in
inc
mov
enter
ds
push
pop
leave
cmpsb
sub
xor
sahf
ret
xlat
testb
aad
xchg
jp
sub
in
pop
mov
mov
clc
mov
lcall
out
lahf
lret
mov
mov
push
adc
pushl
adc
xor
jl
push
dec
ja
inc
cld
subl
lret
aas
fsave
sbb
lsl
sbb
inc
mov
inc
jmp
outsl
int
pop
or
fsubr
xchg
and
cmp
testb
and
push
lods
pop
daa
dec
pop
and
inc
test
lret
pop
adc
lods
and
push
sbb
data16
push
insb
lds
addb
adc
mov
xchg
fisttpll
sub
xor
mov
cmp
or
ret
cli
aam
dec
adcl
mov
hlt
repnz
out
sarb
cmp
scas
pop
mov
xchg
mov
sub
in
dec
call
ret
or
cmp
or
ret
push
pop
sub
pushf
sub
add
sub
add
add
daa
imul
testb
out
cltd
imul
sbb
add
xor
in
clc
mov
push
jne
stc
inc
mov
fidivrl
pusha
jnp
out
mov
rol
sub
push
xor
add
sbbl
imul
adc
or
cmp
mov
outsl
sbb
sub
mov
pop
adc
out
faddl
adc
mov
push
xor
mov
sbb
inc
add
lret
adc
mov
popf
xor
out
rcll
mov
rorb
push
mov
sbb
es
cmp
xor
inc
fwait
mov
outsl
lds
shrl
stos
mov
mov
out
xor
inc
sbb
sbb
clc
add
addb
das
push
push
adc
sti
movsl
loopne
stos
lahf
dec
insl
mov
cwtl
cmp
sub
xchg
adc
or
sbb
jo
daa
mov
mov
and
arpl
lea
xor
mov
jle
ret
sub
pop
mov
xor
pop
mov
sbb
sbb
outsl
xorl
dec
jae
mov
pop
push
out
push
mov
sbb
mov
jg
int
in
icebp
insl
sub
jp,pn
pop
mov
jl
int3
dec
mov
rolb
aaa
outsl
leave
repz
mov
mov
pop
pop
and
sub
repnz
lret
test
pop
jg
adc
sub
push
lock
cmpsb
dec
mov
xor
adc
push
xchg
push
adc
cmp
fadds
cmp
fs
and
sbb
and
insl
scas
mov
and
pop
in
pop
pushf
lea
inc
jp
mov
mov
jo
pushf
pop
push
es
inc
out
mov
xorb
movsl
xchg
add
sbb
stos
orl
adc
inc
adc
mov
lds
ja
sbb
and
stc
push
add
addb
push
iret
jmp
std
push
rorb
out
fwait
hlt
inc
aad
leave
push
jmp
push
and
xlat
or
sbb
pop
ljmp
mov
jne
push
xchg
adc
loope
mov
loope
and
and
xor
scas
adc
add
xor
push
aad
push
push
imul
fisubrl
pop
inc
inc
pop
jb
jnp
cmpb
fwait
push
push
mov
in
jmp
iret
scas
sti
ret
mov
sub
pop
imul
jge
repnz
mov
lds
mov
in
int3
rcrb
adc
add
jle
mov
inc
fsubp
dec
lea
lcall
add
cmc
mov
xor
inc
ss
mov
scas
lahf
adc
adc
sahf
xor
mov
lgs
jnp
mov
fwait
sbb
or
pop
add
adcb
ret
ficoms
leave
pop
mov
sysexit
lahf
inc
mov
in
jb
jmp
sub
clc
push
add
int
jle
daa
movsb
cmp
fidivrs
sub
sub
xchg
sub
sbb
adc
mov
add
cmp
and
out
xchg
push
dec
mov
leave
sbb
push
mov
aam
add
sbb
fcompl
inc
push
stos
pushw
iret
aas
icebp
mov
jno
pop
in
arpl
and
call
in
adc
aas
in
fadds
jns
adc
jb
cmp
inc
stos
mov
jmp
inc
leave
imul
sub
out
or
mov
push
add
jge
adc
addl
in
loopne
mov
sub
cmpsl
pop
mov
es
and
in
popa
rcll
sbb
mov
arpl
inc
adcb
and
mov
int3
call
xor
xchg
jns
shll
sub
jb
adc
adc
add
jg
aad
iret
imul
adc
sbb
cmpsb
lds
ror
orb
ret
dec
int3
pop
mov
adc
mov
push
push
lock
sahf
dec
dec
mov
pop
push
mov
mov
sbb
dec
xchg
push
sub
add
jo
xchg
addb
push
outsl
or
xchg
and
test
push
lods
pop
mov
mov
aaa
outsl
enter
decb
test
ficompl
add
pop
in
shl
mov
lds
xchg
jo
mov
push
pop
cwtl
cmpsb
push
push
movsb
dec
stos
sahf
dec
outsb
xor
sub
int
adc
lea
pop
jle
std
xchg
mov
pop
adc
pop
je
pop
adc
outsl
push
ret
pop
adc
mov
lahf
jo
pop
adc
notl
dec
pop
push
xor
or
cmp
push
sbb
push
imul
xchg
faddl
adc
xchg
ss
fdivs
notl
je
pop
adc
add
push
movsb
aas
lock
xchg
and
lods
pop
icebp
xor
adc
add
push
int3
push
xlat
push
inc
sbb
xchg
and
test
sbb
adc
push
jno
xlat
nop
fists
test
ljmp
inc
test
cmpsl
sbb
jno
adc
inc
je
inc
push
lods
pop
mov
pop
inc
nop
and
push
data16
inc
push
test
or
rcrb
dec
xchg
mov
cmp
inc
jecxz
test
push
ret
lea
xor
out
add
mov
cmp
aam
fwait
and
nop
scas
mov
mov
iret
arpl
sarl
sbb
pop
add
shrl
jecxz
stc
ret
cmc
psllw
repz
sub
or
loopne
mov
adc
subps
lock
jl
pop
adc
adc
jb
jle
cmp
mov
aas
inc
adc
out
hlt
cld
movsl
xor
std
hlt
insl
fisubs
cld
adcl
mov
out
gs
fucom
lock
aam
lods
movsl
mov
aaa
ret
sub
jo
adc
ss
in
pop
xchg
xchg
iret
mov
mov
cmpb
test
popf
negl
pushf
and
adc
sub
jne
das
mov
mov
jle
jo
adc
cs
cld
or
push
mov
cwtl
xorl
adc
imul
out
movsl
gs
test
fsubs
stc
push
mov
dec
push
add
mov
or
adc
push
adc
add
and
les
push
out
fdivrl
imul
cmp
sarb
or
loopne
inc
stos
push
movsb
push
cmc
cmp
les
push
push
push
adc
push
push
mov
lcall
sub
dec
repz
sub
jno
adc
xchg
xchg
into
dec
pop
addb
lods
les
adc
faddl
adc
loope
sbb
movsb
faddl
adc
adc
std
dec
jae
shrl
fdivs
jb
mov
jp
jg
jb
lcall
mov
int
xlat
jp
out
or
add
lods
inc
xchg
pusha
mov
gs
mov
ja
jb
faddl
frstor
loop
dec
lahf
loopne
fsubrl
outsb
xchg
mov
pop
hlt
add
push
adc
cmp
jb
inc
xor
es
enter
xchg
aas
imul
jno
repnz
stc
or
adc
jne
ss
leave
add
mov
pop
lods
add
into
sbb
mull
fists
or
cmc
inc
js
mov
mov
mov
ds
incl
adc
cmpsb
dec
pushf
mov
fistpll
cli
cmc
ljmp
sbb
aam
into
fistpl
inc
nop
and
add
popl
std
xor
or
mov
out
mov
lods
pop
push
iret
push
or
pop
adc
cmc
cld
sar
std
mov
shrb
in
dec
xchg
push
or
add
and
push
adc
sub
je
ds
pusha
cmp
sub
addr16
and
call
outsl
int3
lahf
arpl
jae
inc
adc
push
push
push
bound
stc
pop
adc
sbb
lods
scas
dec
pushf
cmp
adc
jge
cli
cmc
ljmp
je
pop
adc
sub
and
faddl
adc
sub
jo
andl
xchg
push
dec
mov
mov
fnstenv
stos
shlb
push
out
jae
rcll
aaa
mov
pop
adc
adc
call
fisubl
sub
lea
les
aam
mov
mov
je
pop
adc
adc
pop
adc
call
enter
sub
stos
loop
pop
pop
mov
fadds
movsb
mov
inc
inc
hlt
mov
jmp
add
lods
pop
xchg
imul
iret
mov
adc
jl
lock
jae
adc
lods
pop
mov
lea
jmp
inc
mov
mov
mov
mov
test
xor
gs
shlb
addb
fsubr
cwtl
jbe
fstps
xor
scas
inc
test
xchg
shrl
ds
push
dec
nop
cs
fdivrs
adc
scas
sahf
sub
dec
adc
aas
dec
mov
cs
aaa
das
or
subps
push
adc
sbb
jmp
or
pop
das
xor
dec
hlt
pusha
pop
subl
pusha
push
notl
adc
jp
adc
mov
bound
in
sbb
out
movsb
jl
fistps
mov
mov
push
adc
test
insb
mov
or
lcall
pop
adc
and
leave
mov
sbb
lock
adc
int
or
lahf
ljmp
lret
leave
xchg
addr16
jo
daa
shlb
int3
js
inc
add
icebp
and
or
push
adc
das
jp
ret
stc
xor
inc
movsb
leave
test
addb
movsb
sahf
repz
adc
sbb
sbb
add
adc
sbb
xchg
and
xchg
push
insb
pop
lahf
shl
jmp
je
into
xlat
ljmp
addb
jecxz
popa
xchg
xchg
sub
fucomp
cltd
ja
fcomps
call
addb
mov
in
subl
mov
int3
jle
adc
lds
adc
xchg
lds
adc
popf
xchg
lds
adc
imul
push
adc
and
insl
fbld
cwtl
nop
and
testb
lret
das
in
cmp
or
push
adc
mov
out
andl
jle
adc
popf
fildll
ds
lds
adc
mov
adc
cmp
aam
adc
into
dec
rorl
sub
and
sbbb
sbb
jle
cli
mov
test
jbe
jne
sbb
in
mov
sub
lcall
fldenv
and
pop
mov
push
movsl
jmp
lods
jg
add
ljmp
mov
xor
gs
xor
xor
jl
addb
cwtl
data16
xchg
and
loopne
xor
cmpsl
dec
pushf
shll
aaa
outsl
stos
dec
xor
or
mov
or
pusha
sbb
lcall
xor
imul
sahf
popa
jbe
rol
cmpsb
out
xor
fnstcw
das
push
stc
in
and
push
adc
jge
icebp
mov
cli
cmc
xchg
out
pop
xchg
into
mov
jecxz
cltd
jge
and
test
sub
incb
adc
sub
push
clc
mov
mov
adc
xchg
push
mov
loopne
pop
adc
adc
int3
lds
adc
dec
pop
and
jnp
adc
pushl
imul
push
inc
int
sub
fwait
sbb
je
or
cmp
mov
adc
lock
xchg
pop
mov
lds
adc
or
lds
adc
outsl
xadd
test
addb
cmp
divps
jno
xchg
jne
faddl
adc
push
adc
push
jge
adc
mov
jnp
adc
and
lods
dec
sahf
adc
lea
pushf
sbb
clc
sar
std
jno
inc
cmpsb
sbb
out
and
add
and
jae
fcoms
faddl
adc
pop
pop
mov
fcomps
stos
mov
and
pop
inc
jg
lods
iret
adc
inc
leave
pop
sub
incl
adc
shll
push
sub
jnp
adc
adc
clc
loopne
mov
arpl
sub
or
mov
dec
rcll
or
push
adc
stc
push
mov
pop
adc
adc
fwait
mov
mov
mov
addb
sub
jle
cwtl
das
aad
mov
aam
xor
int3
cltd
sbb
pop
lret
stos
sbb
imul
mov
aas
inc
jle
xor
push
or
sub
cmp
sahf
inc
movsb
popa
jo
pop
or
jle
add
adc
mov
shlb
test
push
in
addb
pop
mov
cmp
or
dec
lods
ret
js
pop
fisttps
add
xchg
sbb
pop
sbb
ljmp
outsl
jle
movsb
add
sarl
mov
fsubr
sahf
cmp
or
sahf
cld
jg
adc
mov
mov
fdivrs
jg
clc
jg
adc
ds
leave
adc
outsl
mov
mov
hlt
imul
adc
mov
jp
insb
sti
dec
xchg
sub
push
cmp
sub
jge
cli
bound
fdivrl
mulb
stos
fwait
dec
pop
or
dec
jnp
jo
adc
cmp
dec
lahf
cmp
mov
jg
lds
test
adc
mov
cmpb
cmpsl
dec
fwait
lahf
je
pop
adc
push
adc
jg
adc
mov
push
add
mov
test
into
push
jae
fistps
dec
loope
add
or
dec
push
add
adc
jbe
mov
and
or
xor
add
mov
movsl
ret
pop
in
call
and
adc
and
call
mov
in
push
adc
aam
loop
lahf
inc
cli
sub
mov
mov
cltd
stc
jmp
or
dec
adc
sbb
repnz
pop
inc
lods
jns
fistl
insl
or
sub
out
jl
mov
adc
bnd
add
or
out
mov
jo
adc
jp
xor
or
and
add
adc
jmp
sub
mov
outsl
lds
pop
or
mov
cmp
adcl
jmp
fucom
jg
adc
push
test
and
add
push
jg
popf
add
push
jmp
insl
sub
jae
mov
sbb
lods
std
insl
fdivrl
adc
mov
int
dec
xor
in
push
or
lret
fistps
fsts
jb
cmc
ljmp
and
xor
mov
mov
sarl
aaa
outsl
jns
or
jmp
jnp
lods
sti
dec
xchg
sub
adc
jle
lods
mull
xchg
leave
jo
mov
std
pop
push
inc
ret
mov
movsb
dec
xor
out
stc
adc
sub
or
cmpsb
dec
cmpsb
lea
xchg
leave
lods
int
sar
std
in
sub
ds
sbb
or
pop
and
lea
std
xor
or
call
jo
adc
fstl
fsts
mov
adc
shll
inc
std
or
pop
add
adc
insb
aam
ljmp
inc
outsl
fistpll
mov
lret
rorl
in
mov
pop
push
fisubs
add
lea
mov
cwtl
pop
sub
outsb
sbb
push
pushf
movsl
ficoml
lret
lea
mov
dec
or
cwtl
scas
sub
cmp
dec
xchg
cmp
pop
mov
adc
xchg
adc
cld
mov
push
sub
pop
dec
xchg
push
insb
inc
and
lret
ucomiss
cld
mov
xchg
add
sbb
sub
ja
dec
sbb
push
or
xchg
sti
ja
lock
and
xchg
and
stos
shrl
xlat
pop
fidivrs
aad
add
hlt
loopne
les
or
pop
mov
pop
out
push
inc
xchg
jbe
mov
fstpl
pushf
pop
add
test
add
push
or
int
cmc
mov
and
in
xor
stc
sarb
xchg
loop
les
or
into
jg
xchg
add
mov
xor
push
cmp
rclb
hlt
mov
jne
mov
or
aas
int3
or
cwtl
push
add
push
or
jge
jg
xor
pop
or
lds
popf
movsb
mov
nop
mov
adc
cmpsb
lds
gs
call
push
hlt
ret
out
dec
and
cmp
inc
push
sub
mov
mov
dec
gs
mov
movsb
mov
push
cld
jo
adc
shl
ds
push
xchg
and
ss
stos
dec
popf
cmp
mov
inc
sti
pop
cmp
mov
mov
xor
psrlq
mov
lods
pop
popl
in
inc
ret
pushf
mov
hlt
mov
test
cmp
sarb
adc
in
push
mov
out
mov
or
outsb
test
enter
xchg
cwtl
xchg
in
negb
loope
mov
ret
stos
daa
cs
adc
mov
rol
jg
adc
mov
or
aaa
push
pop
outsb
push
out
push
test
es
mov
and
cmp
lock
adc
repnz
daa
inc
ficompl
faddl
sti
xlat
sbb
add
xor
adc
mov
arpl
cld
mov
mov
xchg
scas
pop
fstps
nop
sub
xor
jae
xor
mov
inc
and
cwtl
xlat
add
out
pop
inc
mov
push
push
sub
adc
push
or
adc
adc
mov
movsb
xchg
addb
mov
fstl
lret
dec
gs
sbb
cmpsl
dec
and
lods
pop
test
imul
adc
dec
xchg
and
adc
cmpsb
int
lea
xchg
leave
jo
adc
inc
ret
pop
xor
pop
sub
cmpsb
lods
movsl
lea
inc
xlat
push
std
cli
loope
jge
sbb
addr16
and
sub
push
adc
pusha
sub
pop
pop
push
in
push
mov
test
and
jno
xor
add
shlb
imul
lds
jg
adc
inc
test
push
cmp
add
sbb
lea
in
icebp
mov
pop
or
and
std
movsb
dec
xchg
and
cld
push
or
sub
aas
and
jnp
inc
orb
sub
jb
mov
push
xor
add
push
adc
sar
jg
outsl
jns
or
cmc
inc
cmpsb
fcmovnu
movsl
dec
xchg
xor
lret
and
sbbb
jl
out
mov
lea
fneni(8087
pop
xor
xchg
mov
addb
fsubrp
lcall
popf
cmp
adc
push
rorb
sarl
shlb
movsb
sub
lock
lods
and
ljmp
xor
adc
add
je
mov
leave
stc
lods
inc
addl
call
push
shll
add
dec
xchg
pop
jo
push
adc
sub
loopne
pop
dec
mov
jg
call
jae
adc
cmp
dec
fstl
scas
pop
mov
mov
lea
fidivrl
adc
loopne
pop
cmp
lock
leave
mov
mov
gs
loop
or
das
ljmp
xor
das
inc
mov
cs
lods
inc
lds
sbb
rcrb
das
mov
sarb
mov
adc
pop
mov
movsb
faddl
adc
push
adc
movd
popa
mov
mov
sti
push
adc
out
sbb
fiaddl
hlt
push
mov
pusha
push
push
push
cld
repz
int3
imul
jae
push
mov
repnz
test
popf
adc
xor
adc
mov
je
adc
mov
push
rcl
jmp
push
jae
gs
imul
and
mov
adc
jg
push
mov
and
ss
je
pop
adc
movsb
faddl
adc
sub
pusha
pop
add
pop
rcll
out
mov
fdivs
stos
rcll
sahf
pop
testl
cmp
lds
xor
shll
jg
adc
lcall
outsb
dec
adc
mov
mov
in
roll
rorb
pop
pusha
xchg
and
cld
pop
out
adcl
fcomip
repz
sti
scas
mov
out
inc
pushf
sub
mov
pop
mov
push
jnp
adc
lods
xchg
fmul
mov
fcmovne
jne
sub
xor
iret
push
or
sub
mov
xchg
mov
pusha
jbe
in
or
out
imul
sub
std
imul
in
and
pushf
movsb
sahf
outsb
leave
and
mov
and
subl
sbb
test
mov
orl
or
inc
adc
xor
push
jnp
adc
loopne
std
mov
adcl
push
adc
and
ret
es
stc
xor
adc
repz
js
adc
push
adc
sub
dec
xchg
and
cmp
push
lods
cmpsl
dec
pushf
cmp
sbb
push
mov
push
and
cmp
xchg
aam
lods
adc
dec
lea
pop
adc
inc
popl
cwtl
scas
ficoml
cmp
mov
adc
pop
and
dec
sbb
mov
sbb
xlat
dec
xchg
and
test
aam
aam
xchg
stos
ja
inc
mov
lret
add
xor
pop
cmp
or
jecxz
insl
and
lods
sub
adc
lea
cltd
shrb
in
sub
push
fidivs
mov
cmp
arpl
and
hlt
test
lahf
std
insl
or
push
adc
push
bound
dec
fistps
pop
ret
shr
lcall
addb
mov
ret
loop
movsb
dec
xchg
outsb
ds
clc
push
cmpsl
pop
arpl
lds
std
push
xchg
mov
push
repz
mov
daa
insb
outsl
push
pop
inc
je
sbb
nop
nop
mov
dec
jmp
add
or
xor
dec
lea
inc
xor
orl
cli
test
arpl
push
dec
xchg
mov
arpl
jo
test
jnp
leave
shll
jno
push
aam
mov
lahf
mov
pop
mov
push
call
adc
mov
push
add
out
cmp
stos
jbe
jecxz
jb
std
decl
mov
fs
rcr
adc
adc
jp
sti
push
lea
mov
and
cmp
les
adc
jecxz
cmp
xchg
out
pop
pop
push
jmp
inc
cwtl
mov
mov
mov
or
jl
mov
out
je
insb
adc
test
pop
adc
scas
xchg
mov
loop
xlat
inc
enter
inc
jg
aad
fisttpll
rcr
adc
cld
jo
adc
sub
or
aaa
mov
js
dec
lret
stos
jno
popf
int3
xchg
pop
test
add
pop
push
pusha
mov
push
cld
mov
xchg
xchg
iret
and
mov
mov
scas
pop
jbe
dec
stos
jmp
clc
lock
mov
mov
aad
adc
lods
push
push
jnp
push
or
imul
ja
adc
and
add
inc
push
sub
subl
adc
mov
lods
sub
es
out
in
push
sub
cld
sti
jg
mov
xchg
loope
sbb
mov
ss
scas
into
psrld
push
pop
lahf
lods
fnstsw
dec
xchg
fsubrl
cmp
pop
adc
jecxz
bndstx
push
popl
lds
mov
push
adc
and
inc
sarl
bound
popa
rol
ret
jne
sti
in
adc
insb
mov
call
xchg
lcall
iret
out
test
and
leave
cs
out
aaa
dec
mov
test
pop
adc
leave
xchg
or
faddl
adc
add
jno
add
mov
faddl
adc
sub
xor
shlb
and
xchg
cmc
jl
loop
sub
push
cli
int3
rorb
stc
aas
sub
xchg
xor
or
adcb
pop
or
bound
push
jp
aas
lods
fldcw
dec
mov
xor
adc
in
das
pushf
mov
lea
fwait
mov
dec
add
test
ljmp
test
cmp
stos
inc
ret
add
sbb
inc
dec
pop
or
mov
adc
pop
sub
das
ret
push
inc
into
mov
clc
fsubrp
negb
mov
test
addr16
std
mov
jnp
sbb
addr16
and
sub
movsb
adcb
pop
pop
lds
mov
aad
adc
cltd
ljmp
push
sti
mov
push
add
dec
adc
lea
cwtl
addr16
std
out
pop
ljmp
xchg
push
xchg
and
dec
pop
or
addr16
jo
adc
add
inc
mov
test
sub
mov
push
ljmp
aam
sub
addr16
and
imul
stos
cmpsb
inc
sbb
ja
enter
push
push
cli
mov
xor
and
mov
mov
add
pushf
sbb
xor
mov
xchg
fildl
cmp
mov
popa
sub
leave
jmp
inc
fistpll
bound
adc
dec
xchg
pop
jb
mov
jg
adc
ljmp
or
mov
adc
rorb
cmp
push
pop
add
lods
iret
adc
inc
enter
push
in
sti
pop
das
push
hlt
movsb
add
or
push
xor
add
adc
lea
aaa
js
xlat
jg
imul
pop
cwtl
cmpsb
scas
push
movsb
dec
stos
sahf
dec
jg
mov
sub
int
adc
add
or
mulb
jmp
je
push
adc
pop
cmp
outsl
xlat
and
lret
add
pop
pop
lcall
push
xor
and
xchg
scas
pop
dec
sahf
vpabsb
mov
jp
shll
in
dec
xchg
dec
ficoml
test
adcl
rorl
or
and
scas
inc
adc
lahf
and
arpl
stos
and
mov
sub
icebp
pop
pop
subl
add
and
stc
aad
out
mov
and
sub
mov
adc
pop
negb
out
das
in
subl
pop
jl
je
adc
xlat
pop
pop
push
xchg
sub
pop
fisttps
jmp
inc
mov
jmp
stos
ljmp
and
int
or
std
xor
adc
inc
add
int
ret
jl
loopne
in
sbb
adc
cmp
xchg
aam
jg
je
pop
adc
pop
mov
xor
sub
fstpt
xor
outsb
sub
add
aad
sub
xchg
and
adc
ficomps
bound
and
repnz
push
loope
jno
scas
add
cmp
dec
xchg
xchg
aad
mov
lds
inc
js
xchg
std
repnz
sti
rclb
mov
fnstsw
call
sbb
cmp
popa
mov
repz
in
popa
jg
mov
and
scas
sub
inc
enter
cli
push
sbb
hlt
adc
sbb
pusha
mov
mov
cmp
xor
xchg
lods
sbb
cmp
mov
pushf
or
jecxz
fbld
pop
push
addb
mov
in
test
cmp
es
inc
into
sbbl
adc
cld
cwtl
cmp
cmp
xor
shl
lea
cmp
ss
jg
es
inc
call
ds
mov
shr
jne
pop
lret
pop
leave
adc
movsb
xlat
aad
jp
mov
mov
sbb
pop
cld
and
mov
lea
rorl
fadds
xor
test
adc
orb
mov
xor
fidivs
and
dec
lea
call
cli
cmc
adc
addr16
and
mov
sub
cmpsl
dec
pushf
mov
sbb
test
xor
mov
xchg
aam
movsl
fidivl
and
inc
imul
pop
add
xchg
into
mov
ds
push
js
pop
jne
dec
sub
cwtl
js
jo
add
mov
fucomi
aam
pop
movsb
add
or
mov
mov
push
sub
sbb
lea
dec
push
xor
test
adc
stos
mov
cli
and
add
and
jae
js
lea
sahf
sbb
xchg
std
cli
bound
addb
sti
mov
dec
cmp
lret
sbb
pusha
sbb
int
mov
ljmp
push
mov
pop
in
jmp
mov
lds
lds
and
mov
sar
cmc
std
add
test
mov
xchg
or
dec
das
inc
lea
jnp
adc
cmc
inc
jnp
sub
addr16
and
insl
fidivl
pop
mov
cmp
jbe
sbbb
mov
or
call
in
sub
cmpsl
mov
mov
test
xlat
or
addr16
and
xchg
outsl
xor
ret
mov
addl
cs
pop
xor
fimuls
out
jne
pop
loop
insl
xchg
push
std
cld
mov
test
in
xor
das
sbbb
jmp
inc
fdiv
int
add
ficoms
addb
in
adcb
nop
cs
fucomi
lahf
jno
out
adc
adc
mov
pop
push
push
sub
inc
aad
jb
push
leave
adc
mov
test
loope
inc
xchg
test
mov
sub
mov
rcrl
lods
lahf
cmpsb
out
test
cld
ffree
jmp
in
popa
jl
loop
or
into
repz
out
test
out
jmp
movsl
cmp
js
aaa
ret
mov
lea
dec
push
nop
dec
xlat
lahf
in
dec
push
pop
fistpll
push
pop
sub
mov
popf
shlb
xorb
faddl
adc
jecxz
faddl
adc
mov
jge
je
pop
adc
sbb
mov
in
jae
adc
icebp
pop
push
xlat
sub
xchg
je
pop
adc
imul
pop
adc
loopne
xchg
out
pop
lret
aam
inc
cmpsl
push
fistpll
fistps
pop
fcoms
pop
xorb
fwait
insb
push
jnp
imul
push
inc
xchg
daa
ss
shl
daa
ffree
mov
lds
lret
clc
cli
std
lret
push
rclb
lret
and
sbb
imul
insb
jl
adc
les
add
adc
repnz
inc
fimull
mov
push
mov
in
jae
adc
sbb
flds
adc
scas
push
and
stos
sub
adc
inc
add
pop
adc
xor
mov
int
adc
loopne
add
adc
add
pop
adc
adc
aam
lea
or
pop
adc
adc
adc
movsl
jnp
dec
inc
lcall
xor
stc
fisttpll
faddl
adc
xor
faddl
adc
pusha
fwait
je
pop
adc
mov
pop
xchg
addr16
lea
fwait
mov
and
add
pop
adc
insl
mov
lock
adc
or
push
mov
and
push
imul
data16
test
and
mov
mov
xchg
enter
hlt
pop
mov
insl
pop
cs
sbb
push
xor
push
lods
mov
mov
sbb
mov
or
cmp
cmp
in
push
cmc
sbbb
add
or
enter
decb
ljmp
into
cld
jo
adc
add
push
cmpsl
icebp
sahf
cmp
sahf
outsl
adc
std
adc
jno
adc
add
or
sbbb
lods
pop
mov
add
or
outsl
xor
push
cli
aas
xor
or
movsb
mov
loope
push
ret
pop
or
rcll
aaa
outsl
fbstp
pop
or
cli
pop
cld
jo
adc
or
dec
jg
jno
adc
dec
push
inc
fs
or
or
push
push
mov
or
pusha
pop
or
xor
mov
push
lods
xchg
cld
push
or
sbb
cld
jo
adc
adc
popf
fstps
std
adc
faddl
adc
out
pop
xor
faddl
adc
mov
jge
add
mov
fdivrs
and
clc
cmp
dec
pushf
cmp
mov
js
sub
incl
push
xchg
mov
fcmovu
outsb
aad
push
sub
push
outsl
adc
std
adc
fwait
mov
fidivrl
out
and
and
imul
idiv
hlt
jmp
js
mov
add
mov
pop
movsb
push
and
movl
inc
call
pusha
adc
or
push
xor
inc
out
pop
adc
rorl
leave
xchg
jl
push
outsb
add
push
test
repz
inc
xchg
and
cs
mov
aad
out
push
leave
jne
jg
add
cs
fdivl
aam
push
adc
shrb
scas
xchg
fwait
jno
inc
adc
dec
sub
push
adc
mov
adc
jge
fsts
in
scas
sbbb
mov
stos
dec
mov
xor
addr16
pusha
adc
push
xchg
xlat
or
or
ret
je
adc
cltd
nop
cld
or
in
mov
leave
mov
sahf
fdivr
pop
adc
pop
int
xchg
inc
jmp
ret
mov
push
adc
shlb
stos
xchg
bound
or
out
ljmp
and
enter
adc
add
ror
sbb
push
adc
dec
pop
or
pop
adc
jnp
push
sub
adc
mov
aad
mov
aad
mov
scas
into
mov
std
out
ljmp
jecxz
std
xchg
es
adcl
cmp
outsb
aaa
imul
cli
std
pop
js
fsub
mov
orb
lcall
mov
pop
cmc
out
sahf
cs
add
inc
pop
and
mov
call
dec
arpl
xchg
bndstx
sbb
and
push
adc
mov
add
xor
test
mov
and
adc
in
sbb
jno
fisubrs
adc
mov
lret
pop
xor
icebp
xchg
fcomps
sub
das
or
mov
fistpll
dec
mov
lock
xlat
sbb
adc
jnp
sahf
mov
jno
stos
cld
cmp
fisttpll
sbb
push
adc
or
icebp
add
jnp
aaa
test
jge
sbb
xlat
inc
mov
mov
dec
ret
inc
xchg
push
lret
ss
ds
pop
mov
sub
push
test
mov
add
es
xor
jmp
cmp
sbb
std
xchg
adc
out
enter
loope
push
cmc
mov
mov
loope
icebp
scas
cmp
je
repz
jecxz
aaa
xor
adc
fldcw
in
pusha
test
jg
jp
add
sbbl
cld
ljmp
sti
push
fisttpl
jecxz
mov
or
push
push
mov
cltd
in
and
cli
fldl
mov
dec
jge
xor
gs
mov
dec
and
ret
imul
icebp
fstl
mov
inc
call
inc
add
sbb
aad
iret
lods
pop
mov
scas
mov
cltd
jne
hlt
mov
and
leave
std
outsl
dec
cwtl
data16
dec
xchg
and
lods
scas
mov
and
xchg
mov
test
cmp
jle
sbb
push
pusha
adc
fildll
sti
mov
stc
sub
pop
sbb
jmp
and
cmp
pop
mov
mov
pusha
push
push
aaa
in
lret
inc
push
mov
stos
aad
push
add
scas
mov
pop
in
dec
imul
imul
push
dec
loop
es
xchg
imul
push
push
lods
rolb
inc
jb
mov
mov
call
and
mov
fdivrl
and
and
xor
mov
push
add
and
rorb
fldt
push
scas
iret
dec
popa
dec
push
cmc
inc
insl
int
jp
sti
push
push
out
shrb
in
sbb
cmp
adc
cmp
icebp
pop
je
orb
cmpl
movsb
stos
rclb
push
leave
aaa
xor
mov
or
push
dec
imul
pop
xchg
jg
sbb
xchg
push
adc
and
mov
out
cmpsb
pop
fdivs
mov
push
inc
xchg
pop
jbe
xor
aad
repnz
xor
inc
aas
push
cs
popl
adc
dec
ficoml
pop
push
cli
insb
sar
out
mov
mov
xor
iret
imul
insl
and
mov
mov
inc
popl
orl
xorl
std
push
sbb
mov
aas
pop
fwait
sbb
adc
lods
fsqrt
sub
shrl
pop
leave
adc
jns
lods
cmp
or
cmpsb
lea
inc
and
or
or
imul
cwtl
jae
rcll
inc
or
adc
push
lods
jp
aas
mov
in
dec
loopne
fcoml
cltd
cmp
aaa
xchg
in
or
or
pop
and
mov
xor
pop
cmp
cwtl
xchg
lea
adc
in
inc
fidivrs
fstl
les
mov
cmp
mov
mov
mov
test
aad
push
cmp
call
flds
aaa
in
faddl
cmp
ficoml
stos
pop
cld
cli
mov
and
fdivrl
jnp
pop
lods
jg
rcll
xor
cmp
xchg
and
push
push
movsb
lods
xchg
jnp
jo
inc
or
mov
fnsave
das
das
sub
mov
xchg
loope
repnz
mov
in
ss
aas
pop
in
cmpsb
loopne
push
cli
movsl
mov
pop
outsb
pusha
addl
inc
lret
sbb
mov
hlt
fs
dec
mov
xchg
out
push
mov
scas
inc
lock
in
sub
and
add
push
xlat
add
test
test
cltd
cmp
popf
xor
push
sub
into
inc
jecxz
lea
mov
cmp
ljmp
push
repz
cmc
imul
lods
rolb
sub
inc
add
incb
mov
popf
sub
push
outsb
push
push
test
add
imul
enter
es
or
sub
xchg
add
nop
dec
popa
and
add
inc
stc
test
add
and
dec
xchg
jno
sub
aam
xchg
loop
test
add
inc
aad
adc
std
cli
ret
xlat
daa
push
clc
rcrb
mov
aad
inc
rcll
sbb
in
test
push
hlt
or
sbb
sub
and
cmp
sub
sub
sahf
mov
mov
loope
leave
xchg
std
jo
cwtl
outsb
scas
std
pushf
repz
and
insl
fidivl
sub
sbb
pop
loop
adcb
xchg
dec
mov
enter
fisttpl
lret
sub
add
aaa
in
int
movsb
ja
loop
xlat
test
xor
push
movsl
push
int
je
cmp
enter
mov
push
and
nop
stc
sub
les
jne
xlat
test
jge
call
mov
ret
leave
inc
mov
insl
pop
lret
mov
pop
aad
stos
mov
xor
enter
add
cmc
add
jb
adc
cmp
or
adc
fisubl
in
adc
xchg
subb
fsubrl
jne
xchg
scas
nop
arpl
xor
dec
xchg
cmp
lret
les
mov
pop
lret
add
outsl
mov
pop
lods
fsubr
mov
insl
mov
xchg
and
or
xchg
push
adc
push
pop
loop
mov
push
cmc
xchg
gs
hlt
mov
sbb
xor
sub
jne
scas
or
add
in
xchg
push
adc
adcb
cmpsl
pop
xrelease
shlb
loope
sahf
out
imul
xchg
sub
sub
cmpsb
mov
add
js
adc
aad
bound
rcrb
mov
or
and
adc
sti
push
pop
sbb
adc
ljmp
push
sti
pop
repz
inc
sub
sbb
test
mov
inc
pop
xor
ljmp
insb
popf
mov
push
dec
dec
adc
popf
sub
xchg
idivb
orl
or
mov
test
push
or
imul
inc
leave
inc
gs
enter
sbb
pop
ret
addb
daa
pop
loope
stos
mov
in
aas
dec
popf
cmp
enter
or
mov
popf
popa
push
xchg
or
cwtl
mov
fsubs
sbb
out
das
lods
test
fwait
outsb
push
push
xchg
outsb
push
mov
pop
ficomps
adc
push
aas
cs
mov
jp
adcb
sub
icebp
addr16
ljmp
xchg
fsubl
sahf
mov
or
pop
push
loop
ret
mov
cli
jns
call
inc
icebp
imul
clc
sub
cmp
out
cwtl
cmp
fcomp
rolb
in
pop
pop
or
mov
mov
jno
sub
sbb
scas
dec
pop
scas
cs
xchg
daa
in
das
cltd
dec
sbb
push
out
aaa
iret
mov
out
jb
mov
cmp
cmpsb
cld
cmpsl
lahf
and
push
imul
dec
mov
mov
test
xor
jmp
sub
adc
loope
jmp
or
xchg
sub
xor
shlb
pop
fsubrp
fucomip
pop
outsl
pushf
add
in
nop
and
ret
mov
push
sub
insb
sar
gs
bswap
fidivl
lds
enter
mov
cmp
inc
pop
cmp
sbbb
lea
sub
shl
leave
orl
pop
in
scas
mov
pop
in
inc
pushf
add
sbb
lret
roll
push
add
push
pop
test
jmp
es
jns
and
inc
orb
sub
pop
fbstp
pop
pop
mov
sub
sbb
add
add
fcoms
sbb
pop
es
xchg
aas
stos
pusha
addr16
lds
xor
add
pop
cmp
test
jecxz
test
sti
jp
sahf
sbb
push
jg
sbb
push
adc
pop
aaa
ret
and
xchg
mov
std
int3
nop
test
pop
push
adc
imul
aam
dec
sub
mov
shll
test
sahf
ljmp
mov
fcmovb
adcl
push
sub
mov
stos
jo
jb
mov
lods
pop
mov
fdivrs
cmp
ds
and
mov
mov
into
push
inc
or
jmp
insl
mov
pop
outsb
push
hlt
bound
dec
pop
cmp
and
mov
data16
pushf
fimull
int
mov
fcmovnb
push
cmp
inc
jns
push
pop
jne
adcl
imul
sbb
imul
leave
push
and
mov
mov
cmp
pop
mov
stos
cltd
jecxz
mov
mov
push
mov
aad
shl
pop
addl
push
sub
stos
fdivrs
inc
es
fisubs
insl
movsl
cmpsb
push
jne
push
cmpsb
sub
aas
ss
mov
cltd
out
pop
mov
jl
add
xor
push
testl
inc
mov
pushl
jbe
adc
fisubl
ds
stos
out
mov
outsl
xlat
mov
es
enter
inc
xchg
mov
cmp
pop
nop
jge
rcrb
jbe
lret
icebp
push
into
dec
cltd
push
pop
out
cmp
fistps
xor
xchg
loopne
leave
pop
jge
push
ss
add
xchg
popf
adc
mov
add
aam
imul
scas
adc
cmp
das
cmp
fmuls
test
int
xlat
push
mov
and
sub
test
shll
stos
fs
add
pop
ja
mov
sub
jle
cmpsb
lods
jle
mov
xchg
scas
mov
and
mov
out
add
push
or
pushf
les
in
jle
mov
sbb
test
pop
add
out
adc
push
push
into
sbb
mov
loop
xchg
adcb
pop
mov
sub
mov
cli
add
sbb
mov
dec
inc
stc
daa
dec
fistpll
int3
mov
loop
flds
sub
push
cwtl
popa
mov
ds
dec
sub
out
xchg
push
adc
mov
imul
cs
push
es
mov
mov
and
cwtl
insl
orb
or
mov
adc
out
frstor
add
ret
fimuls
and
add
mov
fiaddl
adc
push
outsl
jns
popa
popa
insb
jb
je
adc
mov
jg
xchg
jp
pusha
je
adc
push
jo
fbld
test
js
adc
inc
adc
pop
inc
dec
loope
cmp
adc
les
stos
mov
xor
adc
lock
js
xchg
or
repnz
xchg
loopne
cmp
add
mov
mull
xchg
stos
dec
sar
push
or
dec
add
repz
fidivs
push
adc
faddl
cmp
test
adc
outsb
test
pusha
je
adc
lcall
sub
in
lahf
clc
cld
xchg
push
adc
adc
in
adc
out
xor
push
adc
bound
mov
call
je
adc
outsb
pop
xchg
insl
test
lods
mov
xchg
stos
dec
pop
js
outsl
adcb
mov
das
fnstsw
mov
xchg
mov
sub
sbb
addr16
jl
inc
subb
imul
pusha
je
scas
mov
lret
rclb
sub
lods
shrb
les
adc
push
sbbb
sbb
pop
lea
jge
loopne
call
adc
das
mov
mov
xchg
stos
mov
pop
mov
sti
jbe
popf
sbb
adc
mov
roll
fstl
loopne
mov
sub
pop
sub
pusha
imul
js
adc
jg
mov
cmp
cs
cmpsl
pop
outsl
call
subb
pop
movsl
xchg
push
jae
push
jns
sub
or
outsl
mov
shr
loopne
testb
lea
les
mov
inc
shrl
cmpsb
dec
in
pushf
movsb
addr16
jno
in
ficomps
cmpsl
adc
push
int3
imul
sti
push
mov
clc
mov
es
scas
dec
nop
pop
push
popa
sbb
test
cmpsl
add
loop
inc
lock
cmpsb
fdiv
inc
cmp
sub
inc
or
leave
pop
and
xchg
fistpl
mov
ret
inc
and
cmp
dec
mov
inc
fbstp
pop
add
sbb
imul
sub
dec
push
or
xchg
movsl
or
mov
nop
push
dec
out
scas
cli
aam
push
push
cmp
stos
add
pop
insl
int3
arpl
dec
jne
mov
in
or
xchg
pop
or
ja
fistps
in
icebp
inc
pop
in
repnz
inc
cmp
inc
xor
shll
rorb
add
or
xchg
jl
jno
mov
mov
jecxz
sub
pop
nop
or
inc
cmp
cs
adc
push
cmc
xor
or
stos
mov
fcmovne
xchg
notl
jo
fidivrs
pop
cld
fwait
sbb
cmp
cs
aad
push
outsl
mov
mov
mov
lds
clc
aas
jle
pop
pop
and
mov
shlb
lahf
dec
xor
subl
jle
movsl
adc
xlat
hlt
jp
icebp
jle
idivl
jmp
rorl
jnp
rorl
dec
adc
lds
insb
mov
call
stos
popa
imul
loopne
push
pop
xorb
add
sbb
sti
cli
or
xchg
xor
mov
aaa
int3
test
xchg
aas
mov
aaa
cmpsb
pop
push
pusha
add
out
lods
bnd
outsl
je
sub
xchg
jbe
xchg
xor
sub
xchg
out
sahf
outsb
leave
cltd
fadd
xor
out
sub
add
out
jle
mov
mov
fsubrs
stos
ljmp
jno
lods
mov
pop
iret
aas
push
loopne
loopne
rol
lahf
int
leave
imul
loop,pn
fcoms
loop
mov
bound
inc
add
mov
daa
or
outsb
sub
cmp
xor
fisubrs
out
dec
sbb
mov
xlat
in
movsb
nop
lahf
fs
cmc
xchg
and
jne
jne
adcl
imul
push
push
inc
aad
pop
cmp
xor
dec
push
push
in
push
call
cs
fidivs
arpl
shll
sbb
stos
orb
sub
mov
repz
ret
jne
jge
or
cmpsl
dec
pushf
mov
repnz
lret
sbb
xchg
add
pop
outsl
push
jge
and
dec
dec
pop
cli
lea
int
add
push
dec
or
mov
cmp
fsubrs
stos
mov
cwtl
mov
bswap
sbb
ret
jns
jae
mov
outsb
pop
push
cs
outsb
sahf
mov
or
mov
icebp
sbb
loop
lret
mov
add
and
shlb
push
loopne
sub
pop
movsb
test
cmp
orb
test
mov
pop
outsl
push
jle
sub
and
outsl
or
dec
or
dec
or
shrl
adc
sub
int
sub
loopne
fwait
lret
inc
or
cmp
js
mov
inc
sahf
mov
xchg
mov
and
push
cmp
aam
push
sarb
sbb
xchg
and
or
mov
outsb
and
adc
cmc
jecxz
insl
test
fidivs
std
xor
ret
movsb
sbb
and
movsb
sahf
mov
loop
out
imul
pushf
out
ficoml
inc
and
nop
xor
stos
fcmovu
inc
cmpsl
inc
arpl
xor
add
mov
movsl
fwait
adcl
push
std
arpl
test
repz
mov
jno
jge
add
shll
pop
cmpsl
jae
jae
sbb
movsl
aaa
mov
jg
adc
lcall
pop
imul
loop
dec
cs
fsub
imul
in
adc
sub
clc
addr16
xor
sbb
xchg
push
shrb
adc
jmp
cmp
sbb
pop
jbe
ljmp
insb
pushf
jp
out
mov
inc
jecxz
imul
push
mov
div
mov
into
mov
xorb
ja
out
mov
mov
or
ds
push
aaa
dec
fisubrs
imul
imul
fs
aam
xchg
mov
push
int
push
adc
push
movsbl
add
pop
lods
dec
mov
les
push
cmp
sarl
jge
push
and
mov
fsubrs
dec
mov
pop
or
outsb
jmp
ret
jnp
sbb
sub
mov
iret
xchg
lods
add
or
sbb
inc
sti
xchg
and
lods
fsubrl
jmp
repnz
ds
jno
jns
nop
sub
sub
arpl
movsl
outsb
lret
les
inc
lods
faddl
popa
push
into
pop
ficomps
sbb
scas
xor
stos
cli
andl
daa
mov
bswap
lret
jo
jg
jne
cmp
fldcw
cwtl
cmpsb
push
xor
daa
out
push
pop
xchg
loopne
cmc
pop
adc
xor
scas
inc
in
mov
jbe
xor
testb
push
arpl
aad
lret
stos
push
fdivs
outsb
cmpsl
in
ret
pop
mov
fcmovbe
mov
andl
mov
sahf
cltd
dec
or
and
and
ljmp
daa
xchg
out
lcall
addb
or
and
push
pop
mov
mov
jmp
ret
lret
jle
inc
or
cmp
inc
out
cmp
sub
scas
cmpsb
test
enter
incb
push
in
pop
ss
out
int3
mov
stc
xchg
jb
inc
jl
push
rorl
sahf
out
enter
rcrl
sub
xchg
pop
addr16
mull
add
hlt
pop
test
jg
fidivs
pop
cmp
pop
hlt
aaa
in
mov
cld
cmc
ljmp
fcmovnu
insb
pop
je
cmp
adc
lea
push
push
inc
aam
mov
mov
dec
push
lock
sub
les
push
push
mov
jl
pop
mov
lcall
adc
push
stos
cmp
pushf
push
inc
or
andl
call
repz
mov
scas
dec
leave
mov
mov
sbb
xlat
mov
ljmp
das
xchg
out
movsl
scas
jge
mov
xchg
lods
mov
lea
pushl
std
scas
stos
push
movsb
pop
cmc
fcoml
mov
or
test
add
sub
outsb
inc
ficompl
xor
jns
mov
test
pop
jg
out
orb
mov
mov
std
push
lods
scas
loopne
pushf
lods
jmp
dec
out
cmp
stos
mov
stc
adc
adcb
push
daa
popf
cmp
into
pushf
mov
in
inc
movsl
test
push
and
inc
push
cmpb
gs
nop
cmpsb
sarl
nop
lods
mov
mov
push
mov
imul
test
jne
testb
fimuls
jno
dec
enter
mov
sti
orb
inc
sbb
jmp
push
repz
lahf
push
in
and
out
mov
inc
sbb
or
mov
mov
hlt
jp
imul
pushf
subl
jge
jae
xchg
mov
flds
jnp
push
ja
xor
clc
inc
scas
cli
aam
xor
sbb
jbe
adc
and
insb
aaa
test
add
xlat
push
insl
sar
add
xchg
jge
repz
cmp
lahf
mov
testb
rcrb
dec
fsubrl
fsubrs
mov
mov
fwait
sbb
push
mov
jg
sbb
in
add
lret
jp
push
in
cmpsb
cmpsb
xchg
ret
inc
sbb
adc
pusha
mov
decl
outsb
dec
adc
inc
orl
pop
mov
push
xor
sub
ljmp
pop
popf
pop
push
stc
rorl
les
std
mov
dec
mov
bswap
jle
orb
ficompl
push
mov
imul
les
cs
adc
pop
push
dec
scas
and
pop
int
cmp
sub
mov
addl
jl
xchg
jecxz
out
inc
ret
adc
dec
cmpsl
jno
test
mov
mov
xchg
jo
clc
xor
data16
jo
sbb
xchg
mov
cmp
or
pop
and
sbb
fsubp
push
sub
adc
jo
adc
int3
sub
xchg
sub
jbe
dec
dec
in
fnstsw
add
jecxz
sub
push
adc
nop
sub
into
aad
jbe
outsb
mov
test
loop
outsl
rclb
out
aam
or
jo
mov
xchg
stos
jge
inc
leave
dec
mov
inc
shrl
jecxz
mov
enter
cld
and
cmp
add
xchg
lods
mov
cmp
mov
jle
mov
mov
pop
push
xlat
daa
push
adc
pop
lcall
rolb
enter
js
or
ja
mov
push
and
xchg
and
xchg
stc
sub
nop
jmp
inc
and
sahf
sub
push
das
xchg
popa
push
inc
loopne
mov
pop
mov
mov
mov
sub
push
adc
stos
xor
push
cs
add
cmp
or
inc
out
mov
mov
gs
rorb
pop
aam
lds
push
lods
xchg
sbb
repnz
adc
test
int3
nop
in
adc
or
es
aas
imul
push
rep
pop
in
inc
sub
mov
fidivrs
lea
xor
mov
xchg
mov
leave
mov
outsl
lea
mov
mov
outsb
pop
and
mov
sahf
cmpsb
loopne
movsl
jecxz
mov
xabort
rcrb
cmpsb
loopne
add
les
lods
shlb
xchg
jecxz
and
popa
push
lea
inc
fiadds
push
imul
push
fcoml
inc
xor
lods
pop
and
push
jb
mov
into
sbb
adc
ljmp
jecxz
loopne
lea
and
push
jae
mov
jno
iret
push
call
mov
sbb
lock
pop
pop
out
sub
or
mov
lretw
lret
add
add
pop
adcl
jmp
call
mov
push
adc
addw
repnz
in
add
sub
sti
fistpll
cmp
xchg
cltd
sub
adcl
data16
je
push
adc
insb
push
and
imul
ljmp
xor
fiadds
and
lds
adc
mov
pop
adc
or
adc
sbb
ljmp
cmp
jle
fistps
adc
popf
popf
pop
sub
test
add
ret
ret
rol
add
or
fdivrs
subl
movsl
pop
pop
fsts
je
psubsw
sub
xchg
push
adc
inc
out
loopne
data16
dec
pop
in
aas
mov
push
out
int3
lds
adc
push
in
sbb
ror
pop
adc
shlb
orl
sub
xchg
movsb
leave
adc
lret
jae
adc
xor
jmp
stc
cld
outsb
or
movsl
dec
test
dec
xchg
and
jg
sti
cmp
lds
adc
loope
es
mov
cmc
imul
jnp
fs
push
adc
bound
and
les
inc
mov
jecxz
das
xchg
push
add
scas
push
or
fbld
sbb
push
dec
adcl
icebp
sbb
adc
pop
fldl
lods
inc
fwait
and
xchg
enter
jae
mov
in
loope
jle
xchg
push
adc
out
das
popf
cmpl
pop
shll
clc
xchg
xor
ret
in
pop
fadd
pop
adc
pop
or
pop
jns
xchg
add
mov
mov
into
jnp
cmp
and
bound
xchg
add
stc
xchg
in
movsl
pop
mov
push
jmp
lcall
fcmovu
stc
idivl
scas
add
sub
sub
and
and
cli
cld
enter
xlat
hlt
insb
out
pop
adc
and
mov
jle
pop
sbb
cmp
adc
sbb
imul
inc
lods
mov
push
and
ds
xchg
push
adc
ljmp
stos
out
add
add
pop
in
xchg
push
stos
lahf
gs
push
dec
mov
lea
add
inc
mov
outsl
sbb
add
in
lea
and
mov
pop
push
and
xchg
and
ds
clc
mov
dec
pushf
cmp
mov
cli
xchg
in
push
js
lahf
dec
imul
push
imul
cmc
ljmp
and
xchg
sbb
xchg
xlat
inc
nop
cltd
mov
add
or
adc
inc
addb
jg
sbb
cmp
add
push
lock
push
sub
int3
lea
cwtl
sbb
jb
cli
pop
inc
jnp
loopne
jo
daa
mov
pop
hlt
xchg
sub
cmp
sbb
push
gs
cli
cmc
xchg
aad
mov
out
outsb
push
fnstcw
das
or
push
dec
into
loopne
into
mov
lea
fneni(8087
pop
loopne
dec
xchg
out
pop
in
popa
or
lcall
add
nop
call
mov
aam
mov
shl
add
inc
xchg
push
stos
add
sbb
and
jmp
nop
jno
int3
aad
outsb
cmp
jmp
push
and
aaa
aas
push
cli
mov
xchg
mov
dec
and
inc
xlat
push
mov
shll
nop
daa
dec
push
shll
movb
in
js
fdivl
pop
adc
movb
fisubrl
pop
bound
xor
and
pop
adc
stos
jb
mov
div
ljmp
lods
scas
inc
cwtl
or
das
inc
lahf
push
insl
or
dec
cltd
sbb
cmpxchg
jmp
inc
push
dec
mov
jmp
rolb
mov
je
mov
mov
sub
jge
cmp
pop
xor
pop
adc
jbe
push
xchg
push
adc
aad
cwtl
dec
mov
or
xchg
pushw
bound
popf
pop
inc
and
int
inc
jg
fbld
pop
cmpsl
inc
cmpsl
mov
repnz
xor
pop
adc
mov
or
insl
inc
dec
and
int
cmpsl
test
push
imul
mov
repz
in
sbb
lea
pop
nop
call
adc
pusha
xlat
dec
clc
movsb
adcl
sub
mov
inc
mov
push
push
push
mov
jp
test
dec
xchg
xor
int3
dec
adc
outsl
xchg
outsl
lret
fidivrl
dec
xchg
push
adc
adc
xchg
lea
mov
dec
pop
pusha
repnz
pop
adc
cmpsl
xchg
lds
adc
aam
mov
push
shrl
lds
adc
or
adc
scas
push
jno
cmpsl
repnz
or
test
addr16
dec
out
and
mov
gs
mov
mov
es
rcll
jg
and
push
lock
cmp
adc
cmp
add
loopne
jnp
mov
lds
sub
jg
and
jbe
je
pop
adc
insl
lcall
cli
loopne
xchg
and
jo
and
mov
inc
mov
mov
fcmovne
xchg
push
dec
mov
pop
inc
scas
jl
mov
cmp
ja,pt
xor
push
xor
dec
sbb
in
jmp
insb
xor
xor
push
adc
jle
sub
sbb
push
inc
xchg
fldcw
lcall
faddl
adc
leave
dec
pop
pop
es
out
repnz
add
adc
testl
dec
mov
outsl
lss
jb
mov
dec
aam
fisubs
cmp
lea
decl
and
dec
test
mov
and
push
stos
xor
fildll
push
pusha
adc
jecxz
movsb
dec
xchg
xor
mov
adc
sarl
mov
cmc
ljmp
fstpt
sub
sbbb
and
lea
mov
push
inc
js
and
push
stos
sahf
dec
xor
sub
int
adc
lea
cmp
std
push
pop
jge
ret
pop
adc
and
aam
dec
xchg
push
aam
mov
flds
fistpll
jbe
cwtl
outsb
ljmp
loopne
dec
xchg
sub
lods
adc
arpl
lea
dec
or
push
test
and
adc
mov
and
adc
add
ljmp
mov
insb
push
clc
rcrb
dec
montmul
cmpsb
fstl
fistpll
mov
ljmp
fucomi
out
mov
dec
inc
mov
xchg
lods
or
cli
cmc
sahf
data16
push
mov
pop
in
dec
jecxz
cmp
call
pop
push
and
sahf
xchg
fwait
ds
ds
cmp
xchg
jbe
dec
sbb
mov
call
add
jne
xchg
insb
test
cld
cmpsl
lds
dec
xor
or
xchg
movsb
cs
adc
xor
ret
adc
lcall
mov
and
push
or
cmp
xchg
sbb
movsl
lods
xor
dec
lret
and
imul
xor
adcl
jnp
xlat
roll
jecxz
stos
mov
lret
jp
sub
inc
cltd
sahf
lods
xchg
addb
ret
mov
pop
add
xchg
cmp
add
shll
mov
or
cmp
in
loope
add
loopne
test
inc
push
pop
movsb
fisubs
fdivs
push
add
syscall
xor
out
loop
pop
ja
sub
sbb
ret
pop
imul
sbb
gs
call
adc
push
dec
clc
push
fiadds
dec
aam
mov
cmp
push
fstl
movsl
mov
pop
adc
sub
gs
or
test
fnstenv
loope
dec
xlat
rcrl
push
adc
shrb
push
push
sub
sub
pop
mov
xchg
push
adc
jmp
sbb
adc
mov
push
sbbb
push
dec
xchg
mov
sub
adc
xchg
push
add
or
and
push
adc
push
mov
test
outsb
xor
ja
ja
sub
dec
pop
mov
in
pop
lret
cmp
imul
jo
cmp
ss
inc
outsl
inc
aam
enter
dec
or
out
fisttpll
icebp
mov
cmp
xchg
loopne
or
shrb
movsb
add
pop
test
sbb
jns
mov
and
into
pushf
push
sbb
fsts
mov
adc
loope
imul
int3
and
cmp
cmp
cli
xor
lods
mov
dec
test
and
cmp
out
push
in
add
sbb
pop
jno
push
insl
push
out
pop
stc
bnd
push
movsb
aas
jo
or
push
ja
sub
out
sub
ss
pop
mov
push
pop
jb
cld
imul
std
mov
xor
cmp
shrb
aas
dec
pushf
cmp
mov
ljmp
pop
cmp
fidivl
out
arpl
stc
mov
or
les
lods
shl
test
jne
out
push
pop
movsb
push
cmpsl
dec
pushf
lock
enter
push
adc
rcrl
or
cmp
in
movsl
mov
aad
hlt
jl
push
adc
cmp
xlat
push
and
outsb
cmp
lea
push
cmp
js
out
xor
repnz
adc
sti
aaa
push
lods
shl
imul
mov
lret
xchg
xor
or
adc
fistpll
pop
out
push
dec
push
sbb
jle
mov
inc
add
mov
xor
cmp
push
cs
xchg
mov
imul
sbbl
sbb
and
sub
repnz
in
lret
nop
movb
nop
lods
pop
cmp
sbb
lret
push
cmpsl
lds
sbb
mov
mov
pop
sahf
in
cmpl
sbb
lret
push
cmpsb
stc
movsb
int3
push
mov
add
test
push
xchg
and
repz
dec
pushf
mov
sbb
or
ret
movsl
dec
out
mov
pop
adc
aad
push
sub
loop
adc
mov
call
pop
movsb
cmp
push
icebp
insb
pop
mov
cmp
ret
mov
add
push
sub
in
jne
jle
push
movsb
or
push
addr16
iret
lcall
into
cs
adc
in
divl
push
push
sub
cmpsl
push
leave
les
cmpsb
jl
jg
adc
xchg
and
mov
ds
and
cmc
negb
inc
pusha
mov
push
sub
push
adc
jmp
ja
mov
xchg
inc
or
cs
scas
insb
lea
out
mov
outsl
xrelease
cmp
inc
mulb
lea
mov
lcall
jle
xchg
jo
testb
xchg
movsl
fs
stos
inc
lret
cmp
and
aam
xorl
mov
lcall
test
repnz
dec
add
stc
scas
test
arpl
cmpsb
sahf
adc
aam
cmp
or
push
subl
add
fcmove
inc
fcmovb
cltd
push
in
ds
dec
push
xor
out
lock
xchg
imul
fnstsw
push
pop
loope
sub
jmp
and
lret
dec
push
xor
sub
aad
outsb
aaa
mov
lret
sub
cmp
gs
pop
inc
or
je
add
jecxz
xchg
gs
pop
test
xchg
clc
aam
mov
fwait
jmp
mov
push
add
and
into
sub
in
cmp
mov
out
xor
push
cmp
imul
in
dec
mov
sahf
add
in
in
adc
lods
cmpl
mov
jnp
dec
lods
aad
xchg
stos
dec
push
pop
xchg
fsub
cmc
and
xor
insl
outsb
js
out
dec
push
add
xor
dec
jp
mov
out
mov
pop
and
xchg
nop
xchg
xchg
xchg
test
push
in
stos
lcall
push
jns
dec
dec
orb
clc
scas
test
insl
xchg
add
mov
sarl
fildll
sbb
sbb
fildll
jl
adc
inc
adc
push
clc
lcall
jae
sbb
sbb
lret
mov
sbbl
out
loopne
lcall
mov
jle
in
nop
dec
inc
or
cmp
aam
inc
adc
inc
loope
mov
bound
sbbb
dec
or
mov
pushf
and
loopne
shl
mov
fidivl
hlt
sbb
mov
rcr
pop
insl
orb
aam
movsl
sarb
ds
xchg
and
mov
and
inc
add
add
pop
mov
add
cmp
cmp
fsubrl
pop
call
pop
stc
std
xchg
add
pop
cmp
ret
xchg
and
pop
pop
cmp
mov
push
push
pop
inc
mov
dec
call
jecxz
lods
inc
adc
je
mov
lds
insl
data16
mov
pushf
popf
cmp
lods
test
sbb
test
mov
pushf
inc
inc
and
mov
pushf
test
pusha
or
sbb
push
push
pushf
inc
push
and
repnz
in
loope
mov
fsubs
shll
sahf
sbb
lret
movb
jno
inc
aam
movsl
or
and
xchg
and
dec
mov
scas
xchg
and
out
add
xchg
stc
rcrl
mov
cmp
sub
push
lret
sbb
imul
pop
pop
and
pop
das
xor
pop
ja
and
or
push
push
dec
add
movups
sub
cmp
and
test
mov
loop
lock
iret
push
pop
add
hlt
fldenv
xchg
mov
fdivrs
fisubl
iret
mov
jnp
call
inc
das
adc
dec
xchg
es
inc
xor
daa
and
dec
pusha
and
out
push
and
and
cmpsb
adc
mov
aas
pop
es
fld
lock
push
push
push
push
or
mul
dec
stos
insl
ss
sub
add
mov
and
sub
mov
sti
push
int
testl
jp
loop
cmpl
sub
out
loope
inc
repnz
stc
sub
jge
sub
test
or
insb
push
sub
lock
pop
xor
push
mov
mov
sub
dec
ret
or
push
pop
lahf
rcr
fistpl
push
push
push
fldenv
loope
hlt
sub
add
and
insl
mov
nop
daa
dec
cmp
xchg
or
pop
leave
mov
xchg
out
shlb
stc
jno
sub
mov
loope
in
dec
push
stos
pop
lret
cmc
xchg
into
shll
adc
sub
ficoms
out
call
cmpsl
sub
shl
cmp
nop
out
jmp
scas
cmpsb
jo
stos
cli
subl
jno
test
push
mov
shr
ljmp
push
loop
add
movsb
add
scas
dec
xchg
ja
mov
repnz
sub
cmp
inc
stos
movsb
fldenv
pop
jns
sbb
and
bswap
pusha
or
in
js
cmpsb
sbb
test
insl
cmp
push
xor
push
jg
dec
test
inc
or
mov
push
in
insl
inc
sub
push
loop
ja
adc
jb
rcll
mov
dec
icebp
pop
rcl
xchg
pusha
push
adc
mov
cwtl
jns
mov
nop
mov
mov
push
cmpsb
push
pushf
mov
leave
ss
stc
add
jnp
lea
leave
jns
movsl
mov
inc
sbb
mov
frstpm(287
out
shrl
loop
and
movb
and
mov
out
sbb
adc
cmp
and
push
scas
xchg
sub
sub
aad
in
push
push
pop
sahf
repnz
push
mov
ret
dec
sbb
dec
sbb
ret
push
pop
cmp
stos
add
add
sti
rol
popa
loopne
cmp
jp
cmpsb
fsubs
addr16
nop
and
push
ljmp
in
push
cmp
test
push
dec
cs
ds
mov
int
mov
loop
imulb
push
mov
fwait
movsl
sbb
and
scas
into
and
jb
enter
inc
push
ljmp
fisubs
and
aas
sbb
pop
lahf
lcall
cmp
mov
inc
adc
adcl
insl
aas
ss
dec
arpl
add
mov
decl
jl
call
pop
xchg
es
xchg
pop
mov
xor
dec
adcb
mov
xchg
xchg
lods
mov
sub
rorl
add
in
add
add
lret
push
mov
sbb
out
in
pop
pop
fsub
dec
pop
je
faddp
in
js
adc
pop
cld
adc
fidivrs
xor
xchg
push
sar
jp
cwtl
jge
push
lea
inc
mov
nop
es
and
mov
jmp
test
clc
jno
lods
pop
loop
mov
cltd
in
imul
adc
addr16
sahf
mov
add
pop
push
push
fwait
xchg
mov
push
std
or
out
scas
test
push
xchg
pushf
dec
dec
cwtl
inc
popa
mov
ffree
cld
adc
or
adc
cld
pop
dec
movsl
add
inc
data16
push
movsb
movsb
test
fisttpl
adc
repnz
inc
jne
testl
push
int3
push
push
push
pop
int
fwait
std
or
aad
mov
jne
mov
stc
add
divb
es
loopne
mov
dec
push
js
sti
push
int
push
xor
cmpsl
mov
or
mov
shll
inc
mov
negl
adc
loope
sti
xchg
sbb
jns
mov
xor
xchg
ljmp
xlat
fidivs
icebp
out
jmp
shrl
jmp
xchg
out
pop
sub
sub
xor
lds
pop
scas
shrb
clc
out
fwait
jae
rolb
xor
pop
lret
sbb
fsubrp
jl
in
sbb
ds
dec
lahf
or
xchg
push
ss
sub
pop
das
push
adc
fnstenv
push
push
adc
sub
adc
out
and
lahf
cmp
push
add
or
dec
aaa
outsb
clc
cmp
adc
xchg
stos
or
dec
pop
imul
mov
push
jae
fidivl
or
adc
dec
xchg
jno
outsb
rcrb
adc
xchg
loopne
jle
ret
inc
xchg
push
mov
jge
adc
nop
xlat
cmp
pop
mov
and
dec
pop
mov
pop
jae
push
int3
pop
dec
stc
int
pusha
loopne
sub
push
jae
push
adc
cmpb
fsubrl
add
push
cmp
into
xchg
mov
inc
clc
push
imul
or
push
adc
sahf
adc
mov
sub
loop
sub
jno
movsb
adc
enter
shr
mov
sbb
mov
lods
adc
jecxz
jbe
rol
adc
lret
stos
lods
das
mov
shl
xchg
mov
ljmp
sbb
adc
or
xor
aam
sub
cmp
mov
lcall
hlt
pop
pop
popa
sbbl
push
lods
pop
jg
arpl
pop
movsl
push
cmpsl
iret
jo
jb
enter
cmc
or
aam
es
lea
ffreep
jg
repz
push
es
cmpsb
call
push
jns
hlt
dec
mov
loop
imulb
xchg
scas
mov
pop
mov
mov
sbb
shlb
lock
mov
int3
push
xlat
push
inc
and
cmp
sub
popa
or
lcall
cld
decb
mov
cmp
pushf
test
and
dec
pushf
cmp
mov
push
adc
inc
push
adc
xlat
inc
inc
mov
frstpm(287
out
mov
pop
cmpsb
xchg
loope
sbb
sbb
test
push
xor
and
and
xchg
xor
ret
imul
mov
cli
cmc
inc
jge
call
jo
es
std
push
lods
pop
lds
fildll
mov
mov
ds
out
inc
xor
adc
enter
inc
add
jmp
icebp
ljmp
popf
mov
shl
cmp
ja
push
pop
negl
mov
adc
test
xor
shlb
insl
lret
adc
jnp
lret
and
enter
push
flds
pushf
cmpsb
lea
sbb
sub
and
es
mov
jmp
jp
ret
setge
outsl
sbb
fidivs
cs
arpl
int3
dec
hlt
push
call
push
adc
in
ljmp
push
imul
inc
cld
xchg
inc
out
loope
inc
stos
xor
mov
pop
adc
or
cli
add
sub
js
outsb
and
cmp
adc
stos
out
inc
jno
mov
aas
mov
xchg
cwtl
mov
push
jbe
cmp
lahf
xlat
mov
jns
std
imul
jne
jno
sub
sub
dec
and
push
popf
sub
push
out
mov
out
je
lahf
call
inc
mov
test
add
clc
sub
es
inc
adc
or
or
mov
jns
leave
clc
shlb
mov
xor
outsb
pop
jns
mov
aad
adc
push
daa
popf
call
arpl
das
push
adc
lock
and
lock
mov
stos
push
cmpsl
mov
mov
out
pop
loopne
pop
rcrl
cmp
mov
rcrb
inc
xchg
test
or
adc
jo
pop
adc
cmc
pushf
fs
cs
mov
xchg
cmpsb
adc
jo
pop
adc
adc
cmpsl
outsb
push
jnp
push
xchg
pop
sub
loop
xchg
ret
or
dec
jbe
jo
pop
adc
mov
jbe
mov
cmpsb
out
mov
sarb
addr16
into
dec
aam
fstpl
pop
flds
adc
roll
fsubl
mov
clc
xor
dec
inc
push
cmp
sti
dec
rorb
sub
adc
mov
pop
mov
movsl
loop
popa
jo
dec
mov
rorl
push
push
xor
ret
es
je
adc
sbb
push
adc
jmp
lret
sahf
xlat
cmc
jne
cltd
adc
adc
out
dec
pop
jo
pop
adc
add
push
pop
pusha
pop
lock
xor
stos
scas
mov
insl
mov
add
add
jo
pop
adc
insl
fidivl
sub
stc
sub
pop
icebp
mov
xor
flds
adc
dec
out
add
adc
push
lds
faddl
adc
aam
jns
test
xchg
and
pop
adc
adc
push
inc
sub
loop
cmc
sahf
sub
aam
pop
adc
aam
neg
mov
jb
aaa
outsl
adc
xor
orb
jnp
mov
ljmp
jne
mov
movsb
mov
add
andl
sbb
jo
pop
adc
push
cmpsl
mov
lds
addr16
fistpll
jne
ljmp
sub
sahf
lret
in
lea
adc
mov
adc
loop
pop
mov
sub
pop
adc
push
jnp,pn
flds
adc
flds
adc
xchg
push
adc
xchg
pop
dec
or
xchg
loope
pop
loop
sbb
dec
pushf
imul
std
pop
adc
adc
sub
inc
push
cmp
push
cmp
sub
mull
and
fdivrl
mov
outsb
sarb
lds
and
sbbl
mov
cwtl
in
adc
or
hlt
insl
fisttpl
mov
adc
add
cli
stc
mov
jle
inc
inc
notl
sub
mov
mov
fcoml
sti
push
mov
fnstsw
or
call
adc
push
mov
fdivs
jo
pop
adc
jmp
ja
mov
lods
adc
test
cmpsl
mov
scas
lcall
aas
xchg
popf
mov
pop
adc
dec
mov
pop
adc
add
stos
jl
addr16
pxor
push
cmpsb
push
scas
xchg
add
xlat
xor
out
push
mov
popa
bnd
xchg
pop
sti
ss
dec
pop
mov
or
jmp
rcll
lock
ljmp
pop
adc
push
mov
sub
mov
pop
cmp
cmp
int3
flds
adc
sbb
pop
adc
mov
jo
adc
into
jb
cmp
mov
fxch
nopl
adc
and
add
mov
pop
mov
adc
cmpsb
push
mov
or
into
test
jns
sbb
icebp
enter
jge
jne
inc
pop
shll
fisubrs
pop
adc
scas
sti
and
pop
adc
xchg
push
adc
inc
cmp
and
add
adc
fdivr
pop
adc
jmp
sbb
or
cmp
test
sub
mov
popf
ja
push
mov
out
fisubrl
and
and
daa
and
adc
jno
inc
lret
shrl
jno
sub
push
adc
mov
mov
inc
pushf
sub
faddl
adc
cltd
js
aad
sbb
push
sbb
dec
scas
jno
hlt
sub
push
inc
xor
adc
jno
fdivrs
cmp
inc
out
das
je
pop
adc
adc
das
leave
and
mov
mov
mov
cmpsl
scas
push
push
aas
loop
dec
cwtl
sub
cmp
adc
or
adc
mov
pop
adc
sbb
pop
adc
adc
faddl
adc
mov
int
inc
add
cld
sti
mov
pop
adc
push
inc
loopne
pop
ja
push
sbb
inc
adc
dec
mov
js
jp
rclb
lds
adc
stos
js
out
es
sbb
ljmp
xlat
dec
xchg
and
mov
mov
sbb
stos
out
xchg
or
mov
push
ret
gs
clc
xchg
sub
xchg
mov
xor
outsl
fbstp
lds
adc
cmc
sarb
lds
and
pop
adc
xchg
imul
std
cli
aas
pop
lds
adc
mov
push
jnp
sub
lods
pop
mov
pusha
lds
adc
sub
jg
jno
lret
loop
in
push
sarb
iret
pop
sbb
mov
sub
enter
dec
iret
std
mov
es
xor
dec
pop
sbb
dec
sti
adc
rol
sub
outsl
stos
dec
mov
mov
pusha
sbb
dec
cld
ja
insl
fidivrl
movsb
cmp
pushf
pop
mov
or
sbb
sar
nop
mov
sub
mov
fidivl
jo
pop
adc
jmp
jb
xchg
xchg
and
jge
add
shrb
jo
pop
adc
lods
mov
xor
xor
cmp
mov
andl
cli
pop
les
adc
stos
mov
push
adc
fisubl
gs
lea
sbb
fists
jno
adc
add
mov
out
pop
push
lods
pop
mov
mov
pop
push
xorb
jo
pop
adc
sub
insl
xor
aam
and
dec
imulb
sbb
mov
mov
jmp
fldpi
aad
insb
daa
addl
out
and
fdivr
pop
adc
push
and
jge
fisttpll
aad
nop
es
das
xchg
xchg
sub
push
mov
mov
and
adc
outsb
pop
call
icebp
aad
loope
mov
dec
bound
mov
cmp
lds
out
mov
xor
cwtl
das
inc
aad
pop
cmpsb
push
mov
adc
inc
xchg
pusha
sbb
adc
faddl
adc
cmp
mov
mov
or
int3
xchg
mov
insl
jo
pop
adc
mov
fistl
sahf
jecxz
popf
inc
xchg
adcl
fisttpl
aas
mov
jno
adc
push
adc
repz
adc
bsf
xor
jo
rolb
jg
xor
or
pop
mov
js
mov
sahf
add
ds
adc
sub
rcl
dec
push
imul
adc
or
jge
and
mov
fwait
and
enter
adc
dec
bound
sub
mov
movsl
lret
stos
adc
movsb
sbb
sbb
pop
adc
cld
sti
pop
lahf
loope
mov
dec
out
sbb
lds
adc
fdivrl
add
pop
adc
mov
movsb
xchg
cmp
je
pop
adc
jb
mov
aad
sub
faddl
adc
pop
lods
pop
mov
jbe
push
xchg
cmp
icebp
jp
mov
pop
scas
xchg
sub
xor
sub
in
pop
adc
mov
sub
outsl
ret
loope
xchg
int
and
stos
and
lds
adc
push
or
decl
push
fwait
xor
push
xor
jno
call
outsl
clc
lds
adc
test
or
jne
jl
es
lahf
xchg
cmpsl
je
pop
adc
faddl
adc
nop
in
in
je
pop
adc
add
lock
pop
mov
xchg
push
in
pop
adc
mov
jb
cmp
out
jp
push
jo
pop
adc
imul
xlat
rolb
cmp
jl
push
fldcw
pop
popa
pop
xor
and
inc
xor
push
inc
movl
lea
push
xchg
scas
bound
sub
adc
inc
mov
pop
adc
dec
call
sahf
sarl
xchg
dec
xchg
pop
enter
gs
pop
mov
mov
js
xor
add
pop
sub
mov
fstpt
sub
dec
jo
cmp
and
mov
jge
movb
cmp
and
push
cs
out
mov
mov
mov
inc
in
xchg
and
loopne
dec
xchg
sub
sbb
movb
pop
mov
or
xlat
mov
lds
adc
push
lods
mov
sahf
and
out
mov
pop
adc
out
adc
nop
ja
dec
call
sahf
arpl
inc
mov
loope
adc
sbb
xor
sbb
or
and
mov
add
sbb
push
in
pop
into
loope
jb
les
jo
pop
adc
jb
adc
mov
fidivl
pop
adc
in
pop
adc
int3
pop
ljmp
sub
xor
xor
inc
sub
cmpsl
cmpsb
and
jbe
dec
push
adc
mov
pop
adc
push
mov
sahf
and
in
xor
mov
pop
adc
das
inc
sub
div
ljmp
fistpl
cmp
xor
or
jbe
les
adc
adc
adc
adc
outsb
insl
call
mov
mov
insl
mov
or
and
xchg
ret
sbb
adc
mov
dec
mov
push
adc
dec
in
es
push
divb
push
adc
add
mov
mov
adc
xlat
out
jno
fs
hlt
inc
push
js
rcrl
xchg
fsubs
sbb
gs
xchg
popf
in
out
loope
pusha
jl
adc
xchg
cwtl
jae
adc
inc
xor
adc
mov
jmp
mov
pop
inc
repnz
lret
popa
or
outsb
ficomps
adc
popf
mov
jbe
gs
je
pavgb
imul
xor
adc
jl
dec
jecxz
addb
inc
mov
loopne
ljmp
ret
sbb
fs
pop
daa
outsb
popf
xchg
pop
sbb
int
scas
add
in
sbb
xchg
push
adc
out
mov
jae
adc
add
insb
push
sub
mov
mov
scas
inc
sub
mov
mov
fs
mov
push
leave
push
popa
lods
pop
les
insb
fcoml
sar
xchg
xchg
push
or
xlat
and
xor
xchg
push
adc
push
scas
mov
jae
adc
pop
fdivrl
or
adc
push
dec
movl
xchg
sub
and
mov
ja
lock
or
popa
xchg
pop
stos
xor
inc
push
and
pop
adc
mov
or
jecxz
imulb
negl
daa
fisttpl
xchg
faddl
adc
jbe
into
push
mov
jns
sbb
and
jae
lods
outsb
jle
ljmp
adcl
xchg
push
jmp
jno
or
int
mov
insb
ret
jo
pop
adc
in
xlat
adc
jo
fsubs
popa
fists
pop
adc
faddl
adc
mov
jo
pop
adc
add
xchg
int3
jo
adc
pop
outsb
adc
xor
push
out
ja
push
sbb
pop
jle
les
adc
sub
pop
adc
outsw
sbb
push
adc
scas
in
lea
cmp
js
inc
ret
push
xchg
dec
xchg
push
xor
sub
dec
add
bound
add
pop
lods
pop
mov
push
sti
xorl
or
adc
xor
adc
test
xchg
sub
cli
lock
mov
pop
fsubl
push
dec
and
mov
cmc
subl
shlb
insl
fidivl
dec
lahf
cmp
xor
lcall
lods
pop
mov
fimull
test
ret
in
xchg
and
jne
push
pop
lods
pop
mov
pop
inc
insb
fidivl
cmpsl
mov
dec
pop
or
outsl
xor
aas
pop
or
mov
fstpt
mov
sub
xchg
lock
lret
sarb
jb
cmc
add
push
adc
sub
outsb
push
cmc
and
and
fistpll
jge
aas
pop
dec
adc
pop
push
cmp
aam
add
or
lcall
pop
mov
add
pop
loope
scas
cs
test
and
movsb
rclb
dec
mov
jle
push
lds
stc
xor
cmp
mov
xorb
or
inc
insb
aad
push
rorl
leave
in
jl
add
jo
lahf
daa
xor
mov
aad
in
dec
dec
popf
cmp
dec
dec
and
mov
lea
std
fdivs
fnstenv
sti
jne
mov
lods
fwait
roll
xor
cmpsb
push
inc
mov
ffreep
popa
in
dec
js
dec
in
cmp
ret
aas
int3
pop
xchg
pop
leave
push
cmpsl
push
mov
das
xor
inc
jle
mov
fld
test
out
xchg
aas
inc
mov
adc
test
adc
inc
pop
inc
lods
push
sarl
ret
xchg
push
adc
jle
popf
repnz
inc
adc
jg
in
inc
jne
jmp
sti
fstpt
movsl
mov
sbb
addr16
sub
cmp
xor
cs
mov
movsl
inc
out
or
jle
mov
std
xor
aam
xor
or
mov
adc
ljmp
pop
xchg
bound
mov
lea
sbb
adc
leave
push
sbb
and
adc
cmp
pop
xor
adc
hlt
rorb
sbb
and
jbe
mov
fs
mov
fwait
mov
mov
jae
adc
add
push
add
and
mov
inc
movsb
dec
je
sub
xchg
daa
sub
aaa
stos
pop
pop
notb
jbe
mov
mov
jmp
xchg
or
sahf
movsl
push
test
addb
cmpsb
and
pop
int
sub
cmp
mov
and
push
adc
xchg
pop
jle
push
push
mov
daa
cmp
inc
mov
jne
mov
andb
test
cmp
mov
inc
adc
sbb
int
enter
push
sbbl
call
mul
jne
bound
shrb
popf
aam
sbb
adc
sbb
sub
lock
or
sbb
push
mov
jl
mov
mov
sbb
or
les
add
sti
loopne
mov
call
mov
clc
fcmovb
add
jge
lcall
adc
js
mov
jbe
jmp
add
call
out
pop
std
sti
mov
dec
jmp
or
jno
lea
mov
ja
cmc
pusha
daa
mov
and
dec
pop
or
sub
jb
leave
sbb
push
std
cli
xchg
mov
arpl
add
test
adc
je
and
sbb
std
insl
sbb
stos
sahf
dec
xor
sub
arpl
lea
lea
sbb
es
jge
repz
jge
ljmp
in
test
add
add
aas
dec
pop
or
movsb
mov
mov
add
and
ja
pop
das
lea
inc
sbb
movl
test
add
sbb
daa
fadd
push
pop
jl
in
test
add
add
aas
dec
pop
or
movsb
mov
bound
add
nop
icebp
lds
xor
dec
push
out
shl
adc
sahf
and
push
or
sub
insl
adcb
jno
adc
sahf
sbb
lret
xchg
std
xchg
mov
xor
xchg
push
adc
add
push
inc
cmp
bswap
jle
mov
ljmp
jg
insb
scas
mov
xor
xchg
xlat
test
sti
jbe
fwait
ja
jns
jbe
shrl
insl
frstpm(287
ds
push
test
push
in
xchg
and
adc
jb
xchg
iret
nop
jo
adc
sub
xchg
mov
out
xor
pop
mov
mov
lcall
lods
in
rcrb
add
cmp
adc
push
lods
inc
icebp
cmp
cs
lods
fmulp
js
dec
xchg
and
dec
addr16
xchg
mov
jg
add
xchg
push
adc
mov
push
adc
push
push
cwtl
jae
adc
cmp
xchg
dec
dec
dec
shlb
cmpsl
mov
and
fcomip
enter
add
fnstenv
mov
insb
movsb
mov
jle
jbe
inc
repz
shlb
cld
add
pop
data16
scas
mov
sarb
push
shlb
test
std
arpl
xchg
push
adc
cmp
or
sub
addr16
movsl
stos
mov
fimuls
sub
pusha
cmp
inc
bound
pop
adc
inc
inc
push
bound
push
adc
sub
mov
pop
and
xchg
jle
out
dec
xor
jg
or
add
outsl
lret
lret
negb
subb
push
dec
pop
insb
les
dec
repz
push
out
sub
xchg
jne
fimull
mov
push
adc
sbb
xchg
xor
pop
adc
arpl
mov
jecxz
dec
xchg
es
sub
inc
inc
fnsave
iret
sbb
xlat
out
repz
or
mov
sar
pop
adc
fs
adc
orl
xchg
test
pop
stos
inc
mov
pushf
sub
mov
aas
inc
add
mov
insl
jnp
jg
test
ja
das
lods
test
push
pop
mov
inc
cmc
cltd
mov
mov
mov
sbb
pop
mov
out
xchg
imul
push
push
xchg
push
adc
xchg
push
adc
fldl
testb
test
lods
xor
and
push
fsub
pop
adc
pop
mov
add
xor
lds
inc
scas
jl
int3
adc
mov
aad
jmp
cmp
jbe
outsl
jns
in
sbbl
or
mov
test
ret
pop
xchg
push
adc
lret
sub
daa
cmpsb
test
pop
adc
push
ljmp
sarb
outsb
call
jmp
imul
fs
cmc
ljmp
pop
jb
push
lock
test
scas
dec
pushf
mov
xor
out
movsb
mov
push
adc
je
test
sahf
dec
insb
scas
mov
dec
jge
lea
inc
aad
mov
xor
incb
adc
push
or
push
je
xor
aaa
leave
jns
push
mov
aas
shll
dec
xchg
sub
in
mov
roll
test
pop
mov
pop
sti
xchg
and
lods
pop
cmpsb
pop
jp
sbb
aam
or
sahf
data16
inc
add
fucomi
xor
ja
aam
fmull
arpl
adc
jg
pop
mov
xor
adc
in
ss
lock
mov
sbb
decb
cmpsb
inc
out
xchg
and
mov
call
or
pop
jl
in
ficomps
ljmp
rorl
and
in
mov
out
push
pushf
push
or
nop
into
sbb
push
push
or
fmulp
xchg
push
adc
lods
shll
pop
adc
jb
and
mov
ds
in
push
lods
or
sub
fdivr
pop
adc
mov
test
mov
mov
xor
adc
mov
sti
xchg
and
int3
jmp
mov
inc
fmull
nop
es
sub
subb
clc
inc
cmp
sbb
sti
mov
cmp
enter
push
xor
cltd
into
adc
xchg
int
leave
dec
mov
hlt
sbb
aad
stc
inc
cwtl
cs
loop
inc
lahf
and
pop
repz
xchg
push
and
sar
ljmp
adc
pop
jl
inc
xor
dec
fnstcw
xlat
dec
push
inc
idivl
and
shll
ffree
cld
dec
or
ss
mov
cld
or
sets
sbb
sti
sbb
fbld
test
add
js
loop
lahf
sbb
push
adc
xor
lret
scas
mov
or
pop
and
ja
xorb
test
or
faddl
adc
jno
cmp
ja
cmp
leave
aas
mov
stos
xchg
shrb
jle
data16
xchg
jmp
xchg
faddl
adc
imul
mov
movsl
lret
out
pop
or
cli
pusha
jno
fidivrs
sti
hlt
jmp
add
adc
mov
imul
mov
add
or
aaa
lret
xor
pop
adc
outsb
fdivs
and
scas
pop
mov
dec
enter
das
lret
clc
cli
std
pop
inc
rol
ds
mov
push
xor
and
ljmp
stc
cmp
or
frstor
stos
stos
lea
or
sub
or
adc
in
adc
shll
mov
or
std
add
adc
fidivl
adc
mov
xor
insb
or
loope
push
ficoml
in
adc
nop
repz
add
mov
call
sbb
in
xor
or
mov
lea
imul
roll
jb
pop
xor
sarb
andb
jbe
adc
std
dec
dec
jp
adc
test
lret
sti
and
sbb
fwait
ret
xchg
add
jg
inc
inc
iret
imul
add
xchg
sbb
stos
inc
cwtl
inc
lea
pmullw
dec
addb
ljmp
fisttps
and
stos
and
xchg
out
add
xchg
or
cli
mov
pusha
jne
add
push
mov
pushf
call
xchg
adc
add
inc
jge
inc
xchg
jle
xchg
sub
xchg
mov
pop
dec
jbe
enter
inc
push
jmp
jb
and
xchg
and
in
lea
sbb
mov
and
aad
orb
jb
bound
and
push
cmpsl
jbe
mull
enter
or
loop
ljmp
mov
aam
add
or
xor
fwait
shrb
mov
ret
sti
mov
lock
mov
out
xor
and
adc
sbb
aam
xor
cmp
push
inc
shll
sub
push
adc
inc
push
movsb
fimuls
clc
sarb
inc
pop
mov
adcb
push
stos
mov
pop
adc
push
xor
sub
sub
and
lea
cwtl
sub
or
jmp
cmpsb
fcmovne
movsb
dec
xchg
mov
sub
sub
arpl
lea
lea
and
std
xchg
dec
ret
movsb
dec
test
popa
insl
fimull
xor
or
mov
cld
jo
adc
sub
sbb
mov
xlat
and
and
xchg
push
sub
sub
das
shrb
sbb
jo
rclb
cmp
jae
call
dec
in
xor
or
xchg
arpl
scas
pop
mov
cmp
ficoml
out
add
mov
out
sarl
push
ds
and
ljmp
xchg
dec
pop
mov
loopne
mov
mov
mov
adc
mov
jo
adc
lret
outsl
push
rcll
jo
pop
adc
mov
movsl
or
inc
push
mov
dec
pop
or
xchg
mov
lcall
sahf
jp
mov
jle
mov
rclb
mov
das
aad
lods
stos
movsl
lods
std
add
aad
mov
pushf
push
or
lock
adc
jg
call
sbb
inc
jmp
dec
jge
add
repz
arpl
pop
fdivr
pop
adc
inc
inc
inc
inc
leave
mov
jge
adc
fs
les
add
icebp
and
and
cmp
add
push
and
and
cltd
mov
xor
sbb
clc
in
cltd
outsb
jo
push
xor
cmp
jo
pop
adc
sbb
mov
aaa
hlt
and
xchg
and
je
pop
adc
data16
ficoms
dec
outsb
dec
xchg
pop
jb
push
push
and
sahf
cmp
xor
dec
pop
or
cli
pop
add
adc
push
xor
mov
mov
mov
dec
add
dec
cmpsl
pop
pusha
xor
or
pushf
roll
push
adc
xor
insb
enter
adc
mov
out
idivb
dec
stos
cld
push
cmp
pop
jl
mov
int3
and
add
lcall
cld
adc
xchg
imul
inc
or
mov
xchg
dec
fsubrl
movb
das
test
pop
es
xchg
cmp
mov
pop
jmp
adc
inc
cmp
mov
mov
add
mov
fcomi
cmp
or
dec
inc
rcll
jae
mov
xchg
push
adc
push
mov
lret
pop
out
pop
popa
mov
pop
adc
mov
pop
adc
push
movsl
leave
adc
mov
stos
sub
ja
pop
or
and
mov
sti
cmc
ljmp
and
loopne
jne
sub
loop
rcrl
xchg
jmp
std
and
lods
pop
dec
pop
xor
or
dec
jg
jo
adc
xchg
xor
in
jle
push
mov
shrb
fldenv
sub
sub
into
and
repnz
push
pop
jg
lods
cld
cli
cmc
sahf
es
or
xchg
outsb
add
inc
jecxz
mov
mov
je
outsl
fildll
cli
aas
dec
pop
or
movsb
mov
xor
or
arpl
jo
adc
shll
mov
faddl
adc
scas
mov
dec
push
pushf
cmp
je
pop
adc
or
or
pop
adc
insl
fidivl
daa
sub
sub
lea
jo
mov
mov
adc
sti
xorl
xor
fcomps
xor
aam
or
inc
sub
scas
mov
xchg
push
adc
sbb
outsl
jns
inc
push
mov
push
nop
lock
mov
les
and
pop
adc
std
cli
adcb
adc
add
test
xchg
push
adc
mov
sbb
movsb
adc
mov
xchg
mov
mov
add
shrl
pop
adc
das
adc
lea
rorb
sub
movsl
push
xor
out
pop
dec
cwtl
and
test
pop
adc
pop
ret
xchg
pop
shrl
nop
daa
dec
add
flds
adc
mov
and
pop
lock
rcl
insb
dec
jo
jecxz
flds
adc
test
ret
adc
flds
adc
add
loopne
add
orb
cmpsb
shr
dec
jge
in
loopne
fisubrs
and
inc
aaa
jp
push
popl
and
xor
enter
sbb
adc
pop
and
inc
js
inc
jb
pop
cld
hlt
popa
add
nop
adc
jl
aad
sbb
pop
into
mov
and
cmp
lods
daa
repz
into
aas
pop
xor
mov
and
mov
pop
lcall
jle
xorl
add
mov
outsl
mov
aas
push
loop
in
hlt
movsb
lcall
sub
out
sarb
or
mov
fnstcw
add
sahf
mov
xchg
test
mov
in
enter
pop
cmp
or
and
repz
fbstp
adc
mov
cmp
and
inc
pop
push
jb
sbb
jge
dec
xchg
sbb
mov
enter
loope
xchg
stos
jae
test
out
pop
and
sub
dec
xchg
pop
loopne
dec
ja
roll
add
add
sbb
mov
mov
dec
insl
enter
mov
pop
fstl
enter
inc
and
and
cmpsl
imul
fdivp
std
xor
ss
push
pop
out
add
out
gs
imul
popa
aam
adc
das
inc
or
xor
push
stc
xor
daa
xchg
xor
jo
fisubrl
push
mov
pop
int3
add
adc
xlat
or
std
test
scas
repnz
mov
sti
jp
pop
divl
adc
scas
lret
or
inc
inc
sarb
push
adc
enter
cld
dec
and
addr16
adc
out
mov
mov
movsb
dec
jne
imul
mov
adc
add
push
dec
sub
leave
lea
add
add
sti
or
adc
mov
pop
scas
fsub
dec
adc
cwtl
jo
into
or
inc
or
ljmp
test
aam
pop
xor
adc
sahf
or
nop
jno
int
mov
mov
push
sub
popa
xor
xchg
sub
ljmp
nop
and
push
adc
xchg
mov
out
lock
incl
mov
jl
outsl
or
mov
popa
and
movsb
pop
inc
fidivl
push
in
pop
ret
shr
lcall
cld
add
adc
mov
sahf
out
cmpsl
pop
jp
faddl
jno
mov
push
mov
loop
add
add
cmpsb
sub
imul
mov
or
mov
push
jp
push
cmpsl
int
xor
lea
jl
mov
xor
pop
and
mov
fstpt
call
mov
imul
add
lcall
xchg
lret
pop
test
jl
mov
pop
enter
push
cli
jg
aam
and
jle
scas
jle
xor
pop
xlat
test
cmp
mov
push
adc
dec
call
xchg
shrl
lea
and
pop
cmp
mov
dec
jp
mov
jmp
sti
dec
sbb
and
dec
push
fsubp
out
pop
xor
and
push
test
cmp
sbb
xor
pop
scas
rcll
or
cmp
test
clc
jae
stos
pop
in
test
adc
inc
jbe
and
adc
lods
scas
inc
in
inc
addr16
cli
mov
lods
inc
cmp
pop
adc
inc
and
push
adc
insl
jg
push
adc
arpl
jmp
je
gs
jne
mov
insb
sbb
push
adc
stc
leave
lret
aas
xchg
mov
push
fists
adcb
aaa
je
push
mov
pop
adc
dec
or
and
push
adc
adc
mov
lret
mov
test
adc
pop
gs
ss
inc
adc
enter
jno
fwait
mov
push
pop
addr16
pop
das
dec
and
out
xor
lods
dec
pop
or
jp
xchg
rcl
pushf
xor
icebp
in
stos
mov
mov
sahf
sbb
popa
imul
pop
mov
push
pop
cmp
addr16
fstpl
pop
push
push
popa
fildl
xor
insl
aas
push
jmp
outsb
fistl
test
jle
jmp
outsl
mov
push
adc
xchg
loopne
jbe
ret
pusha
decb
push
out
mov
push
cmpsb
mov
dec
insb
add
arpl
mov
dec
pop
xor
cwtl
jecxz
dec
mov
push
cmp
pop
jne
xor
ret
push
or
stc
int
pushf
jbe
testb
aaa
sar
and
cmc
das
mov
dec
mov
push
sbb
xchg
or
jo
jnp
inc
push
jno
cmpsb
sahf
imul
ljmp
and
out
push
adc
cmpsl
xor
lock
mov
stos
nop
sub
sbb
dec
ret
dec
mov
adc
xchg
iret
enter
cmpsb
andl
dec
les
adc
add
fisubs
jmp
lds
mov
icebp
dec
or
sti
hlt
xchg
or
scas
ljmp
mov
lret
cmp
inc
pop
popf
mov
in
xchg
sbb
cli
cmc
pusha
and
lock
or
mov
push
lock
rorb
int3
mov
movsl
sbb
push
mov
ret
xchg
movsb
dec
cmp
lods
xchg
push
push
dec
jo
lea
fdivr
std
ret
dec
jmp
dec
xchg
mov
ds
xor
sub
test
mov
fistpll
cli
cmc
sahf
fldt
das
sub
aam
ds
clc
negb
out
negb
fstpl
scas
pop
cmc
ljmp
and
cmp
in
scas
mov
sbb
dec
popf
les
adc
fwait
test
dec
pop
and
sub
lods
pop
mov
lds
je
fistpll
ret
inc
inc
insl
add
fsubrp
xchg
and
cmp
dec
fs
mov
and
cld
push
ljmp
cmp
and
xchg
sbb
xchg
roll
movsl
mov
mov
gs
add
push
test
cmpsb
out
xchg
jecxz
and
sbb
out
cmp
mov
addl
scas
cs
movsb
dec
xor
out
push
xor
sub
test
ljmp
sub
push
dec
add
outsb
stos
movsl
mov
push
cmp
mov
pop
cmpsb
mov
lods
or
cli
cmc
inc
jl
loopne
pop
popa
sbb
dec
aad
cmp
sbb
outsb
ficoms
jmp
lea
jecxz
sub
push
cli
xor
sub
jmp
pop
jge
mov
addb
add
mov
dec
fmuls
icebp
xor
adc
jge
ja
and
popa
testl
sahf
cmp
jno
adc
fisubrs
repz
inc
call
dec
add
orl
sbb
daa
lds
push
jmp
adc
cwtl
pop
movsl
cmp
cmpsb
mov
fwait
push
push
imul
push
and
xchg
sub
loop
xor
xor
xor
idivl
adc
mov
jge
popa
into
mov
scas
inc
push
aas
adc
mov
aaa
cld
jo
adc
fistps
or
cmp
in
sti
xor
adc
add
mov
lds
shlb
add
xor
mov
mov
sub
inc
lret
mov
dec
jge
jae
aam
or
sbb
xchg
gs
notl
rclb
out
jae
sarl
or
scas
ret
sbb
jae
xchg
pop
jecxz
cmpl
push
adc
xchg
sti
add
xabort
sbb
and
in
inc
addl
jno
pop
repz
fiadds
cmp
fdivs
out
ja
std
repnz
popa
movsl
cmc
xlat
ja
mov
insl
shl
popf
bound
rorl
cs
dec
mov
or
add
dec
mov
pop
int3
inc
fcoml
and
pop
fbstp
lcall
in
mov
int3
inc
and
fisttps
rolb
mov
and
xorps
sbbb
orb
test
mov
int3
and
mov
xor
jno
inc
test
dec
fldcw
cmp
push
mov
daa
pushf
sub
addr16
jbe
pop
pushf
sub
adc
andb
dec
cmpsl
out
aas
mov
test
xchg
inc
jnp
xor
lea
rol
add
mov
inc
adc
arpl
aas
pop
jmp
adc
push
push
or
jp
imul
inc
loope
inc
loop
shrb
fdivs
lahf
jge
sub
hlt
and
mov
pop
sahf
shrb
pop
ret
lock
mov
loopne
pop
enter
push
in
jp
sub
adc
xor
repnz
lret
pop
mov
gs
pushf
insb
stc
or
jne
std
jo
ljmp
and
test
incl
cmp
test
aaa
test
jmp
test
push
inc
test
sub
and
sub
orb
push
das
add
arpl
insl
push
lock
cmpsl
jne
cmp
aas
lret
dec
call
inc
ret
mov
test
cmp
leave
mov
mov
in
mov
adc
fcoms
and
jle
push
sub
int
pop
sbb
in
mov
or
push
fdivs
adc
daa
xor
adc
inc
dec
pushf
mov
faddl
push
mov
pop
pushf
dec
cmpsb
and
pop
in
pop
push
scas
movsl
push
jmp
fidivl
and
mov
decb
mov
xor
movsb
lods
fsubr
mov
and
mov
jo
pusha
int3
cmp
xor
fidivrl
daa
and
or
jb
enter
nop
add
pop
ljmp
scas
mov
sub
push
stos
and
fsts
or
push
and
mov
lods
mov
ficoms
aad
xor
dec
les
pop
cmp
push
adc
faddl
pop
mov
jns
lock
loop
push
rcrb
mov
mov
xor
in
clc
repnz
xchg
dec
scas
test
jge
xchg
arpl
cmp
test
ret
out
ret
test
les
ud1
sbb
aaa
test
push
cmpsb
push
lods
inc
cld
lock
mov
push
mov
xchg
push
mul
cmp
lcall
mov
addb
mov
in
push
cli
dec
or
dec
fwait
cmp
sub
fmull
adc
and
fcompl
in
sub
ja
aad
sbb
jnp
jecxz
sbb
dec
imul
dec
add
sub
xor
adc
data16
cwtl
pop
scas
call
inc
mov
sub
cmp
or
movsl
ret
in
sbb
stos
jge
sahf
stos
adc
sub
cmc
fmul
fs
arpl
sub
mov
push
in
jle
test
or
jmp
test
repnz
movsl
cmp
and
dec
push
jbe
insb
or
fwait
pop
icebp
repnz
gs
clc
arpl
movsb
ds
cmp
sub
push
fstpt
sub
scas
xchg
mov
fistl
sub
or
cmp
pop
inc
xor
repz
add
pop
cmp
sub
icebp
push
or
lcall
cwtl
nop
testl
out
fiaddl
jns
popa
daa
inc
clc
inc
mov
and
push
fwait
mov
cmp
xchg
or
mov
mov
or
mov
ja
xor
and
push
outsb
jbe
test
dec
cld
sub
push
cli
fbstp
imul
dec
mov
clc
fistl
imul
mov
or
push
adc
sbb
lds
jge
xor
adc
cwtl
stc
pop
pop
add
cltd
aad
mov
fildll
cmpsb
xlat
sub
cmp
xor
push
mov
mov
fs
stos
enter
les
mov
xor
test
dec
cmp
inc
push
icebp
test
inc
inc
inc
add
fstl
cltd
ficomps
xchg
xor
xor
dec
sbb
fwait
stos
mov
int3
add
movsb
mov
xor
lods
rol
mov
outsl
and
mov
push
mov
loop
shrb
out
scas
movsl
jecxz
inc
lods
rolb
pop
mov
aaa
adc
push
or
mov
inc
aam
inc
or
rcrl
and
push
insl
inc
sub
je
mov
lret
movb
jno
inc
aam
movsl
or
daa
dec
xchg
and
mov
dec
pop
std
bound
js
fwait
mov
subl
repz
aas
sub
pop
fidivl
pop
cmp
pop
or
fstpt
in
mov
lahf
cmpsb
test
insl
fidivrl
sub
and
scas
pop
and
stc
push
cmp
jns
inc
lea
dec
sbb
loop
sbb
shlb
stc
and
fistps
ljmp
sub
rcl
push
aaa
outsl
mov
pop
or
fcoms
xchg
scas
mov
sub
xchg
stos
movsl
shlb
sub
push
mov
jecxz
es
mov
mov
xchg
stos
and
push
jae
shll
inc
jle
in
push
mov
sbb
in
mov
pop
mov
aam
mov
aad
mov
and
xor
sbb
mov
rclb
lds
cmovne
subb
and
frstor
adc
out
cmp
pop
jecxz
hlt
jmp
jg
gs
mov
das
cmp
fimull
push
mov
and
adc
sbb
leave
test
fisttps
pop
in
dec
sarl
cs
test
lret
cmpl
inc
jns
data16
mov
loop
xor
push
aam
xchg
es
or
or
je
ret
rol
sbb
negl
insb
xor
xchg
mov
jmp
dec
dec
xor
adc
fwait
and
int
push
push
add
mov
imul
adc
xchg
jne
data16
mov
or
jns
sbb
dec
into
push
push
out
jb
lock
mov
push
jb
in
sbb
or
push
fstpt
add
push
lods
xchg
cmp
mov
push
inc
loopne
sub
cld
test
jl
mov
pop
lret
adc
outsl
dec
pop
cli
and
xor
xchg
sub
das
mov
daa
inc
in
inc
xchg
out
stos
addr16
xchg
test
bound
jae
xchg
add
push
repz
cmp
out
fisubs
jb
scas
pop
jge
lods
call
popf
dec
xor
mov
inc
add
push
mov
adc
nop
test
xchg
js
dec
push
xor
ljmp
push
xchg
mov
arpl
shll
sti
cmp
icebp
and
fwait
das
dec
pop
mov
pop
lods
xor
sub
adc
xlat
sbb
fsubl
std
loope
and
jp
push
adc
mov
scas
jl
adc
enter
pop
dec
mov
xor
adc
pop
fdivl
inc
adc
leave
nop
jo
jo
cwtl
shrl
jge
or
adc
pusha
test
aaa
add
jle
adc
pop
adc
inc
enter
decb
and
mov
fimull
or
pop
adc
xchg
xchg
out
jg
adc
pop
adc
adc
cmp
xchg
or
pop
adc
dec
ret
pop
add
push
cmc
and
pop
adc
and
pop
pop
jge
xchg
pop
pop
rcrb
xchg
mov
jae
pop
inc
cmp
add
pop
mov
lods
flds
adc
pop
cmp
cmp
mov
cmpsl
je
cmpl
sub
out
dec
mov
je
mov
inc
sub
inc
addb
repz
push
mov
out
push
lret
xchg
je
push
mov
cltd
push
push
mov
sub
adc
pop
in
mov
push
push
lods
test
sbb
jb
repz
sub
sti
lea
adc
pushf
popf
stos
mov
loopne
fstl
add
aaa
sbb
sbb
push
pusha
ljmp
sbb
or
idivb
ljmp
outsl
fistpll
in
pop
jecxz
test
push
sti
jmp
push
fsubrp
pop
jl
in
dec
int
jg
aaa
adc
pop
adc
loopne
cmc
test
adc
push
lods
test
lcall
les
leave
add
es
dec
sbb
push
inc
add
adc
jle
mov
pop
inc
jbe
xchg
and
jle
jo
adc
inc
sbb
cmpsb
stos
adc
bound
movsb
sbb
jns
daa
dec
in
inc
aaa
mov
pop
movsl
dec
sahf
cmp
lods
cmp
data16
shrb
push
adc
aas
or
mov
enter
ret
iret
cli
pop
test
dec
or
mov
dec
pop
inc
inc
xchg
mov
lret
fst
enter
flds
adc
xchg
mov
daa
insl
xchg
data16
pop
and
test
pop
dec
jle
mov
imul
fucom
addr16
popf
popf
loopne
pusha
lods
movsb
mov
xchg
sub
sbb
insb
fdivr
or
cmpsb
xchg
sub
adc
mov
jno
adc
les
adc
enter
adc
adc
bound
int
xor
lods
pop
lahf
xchg
jmp
sub
shlb
xor
or
sbb
cld
jo
adc
or
push
mov
and
pushw
ret
mov
daa
inc
push
dec
sub
dec
ret
or
mov
inc
push
popa
outsl
fidivl
xlat
out
andb
push
and
enter
jg
mov
pop
andb
xchg
fadd
jg
fisttps
andl
sbb
xchg
xor
arpl
shrl
push
ja
mov
push
mov
ljmp
or
push
outsb
sbb
dec
aas
bound
je
mov
push
adc
jl
xchg
mov
loopne
fisubrl
stc
in
xchg
out
jno
sbb
dec
dec
xor
roll
jno
adc
jne
pop
fbstp
xchg
mov
out
fstpt
push
adc
dec
cmp
sub
pop
std
or
test
cld
daa
jge
in
push
cs
and
out
sub
xchg
addr16
aas
jmp
xchg
sub
mov
mov
dec
jp
adc
test
mov
fcmove
sbb
jno
cmp
mov
adc
es
ret
dec
adc
dec
nop
jle
in
mov
dec
sub
jns
lds
xchg
push
jg
push
mov
ds
inc
push
mov
pop
jmp
and
js
cli
pop
pop
jle
js
push
cs
in
dec
test
add
and
movb
fwait
ret
fists
jo
adc
jg
ret
outsb
push
pop
mov
pop
jo
lea
movsb
pop
mov
dec
sbb
and
cli
inc
addb
xor
sub
fnstenv
lods
sar
fcom
xchg
pop
negl
lds
push
lds
adc
push
lods
sar
cltd
test
or
push
test
cmp
out
mov
mov
dec
add
cwtl
push
jg
push
adc
and
or
outsl
and
dec
jle
decb
xchg
push
adc
and
pop
xchg
sub
scas
cmpsl
ret
fabs
and
and
dec
js
push
sub
adc
call
push
and
push
adc
mov
mov
jne
mov
pop
inc
jnp
jp
dec
xchg
and
gs
insl
loope
lods
push
sub
inc
xlat
and
cwtl
mov
out
adc
push
pop
lods
das
mov
fimuls
mov
in
inc
xlat
and
lock
push
sbb
mov
dec
mov
fidivrl
bound
push
sub
cmpsl
repz
mov
shll
or
xor
movsl
popf
divl
jo
mov
fsubl
sbb
outsl
enter
imul
or
sti
sarb
addr16
fidivrl
sub
outsl
adc
outsb
mov
mov
hlt
fs
jae
and
adc
test
pop
je
dec
jp
cmp
test
clc
adcl
out
inc
mov
lahf
mov
cwtl
mov
xchg
mov
or
pop
int
dec
add
mov
fwait
es
inc
mov
pop
in
xchg
and
xchg
test
loop
adc
sub
add
pop
inc
inc
aad
push
mov
sarb
lods
mov
push
sbb
adc
std
lret
push
adc
xchg
pop
lret
movsl
dec
test
in
cld
jns
pusha
mov
mov
mov
fsubr
lods
inc
and
push
adc
jae
pop
sbb
mov
lahf
and
xor
mov
sbb
or
lret
stos
sub
test
add
or
icebp
data16
add
jp
ljmp
pop
pop
les
mov
repnz
movsl
sbb
pop
mov
gs
push
adc
les
lea
jl
sub
pop
mov
inc
xor
lods
mov
xor
loope
enter
cmpl
addl
mov
and
scas
iret
in
jno
sbb
push
sbbb
sbb
ds
xor
cmp
mov
dec
push
mov
cltd
addr16
and
loope
mov
mov
cmp
ja
jnp
test
out
sbb
pop
lock
call
and
mov
and
cltd
push
pop
sbb
loopne
dec
mov
sub
fldt
enter
imul
cwtl
add
xor
cmp
xchg
push
or
stos
cltd
jmp
imul
sub
add
in
cmp
pop
scas
xchg
jecxz
popf
rcr
sbb
iret
test
clc
lods
push
xchg
adcb
dec
or
xor
or
lds
faddp
les
cltd
mov
subl
jno
add
and
xchg
idivb
nop
fcomp
add
xchg
or
adcb
push
mov
inc
xor
dec
out
xchg
cmp
xchg
inc
stc
xchg
int3
sbb
or
cmp
sbb
xchg
cmp
aad
inc
sub
xchg
pushl
clc
leave
sbb
rol
inc
push
add
lods
shlb
xchg
test
loope
popf
mov
mov
sarb
push
int3
push
aaa
push
and
cmpsb
test
inc
xchg
and
push
cmpsl
pop
pop
je
outsl
mov
pop
je
inc
pushf
push
es
mov
sarb
daa
and
fisubrl
sub
push
mov
sbb
outsl
out
ret
dec
and
mov
stc
rolb
enter
push
in
cli
shrb
sub
cmp
mov
xchg
mov
mov
sbb
mov
mov
sahf
push
sub
cmp
aad
dec
sub
cmpsl
jno
outsl
xor
jl
add
inc
pop
cmp
mov
xor
cs
dec
pop
idiv
test
movb
jo
inc
jl
lods
mov
loopne
mov
sub
push
stos
dec
out
mov
jg
std
popl
inc
mov
xchg
and
gs
lock
jmp
mov
in
push
shlb
fistps
or
xlat
and
or
xchg
push
shrl
xchg
movsb
lods
mov
stc
loop
shlb
xchg
adc
shlb
cmp
cmp
out
jae
shrl
push
jle
add
add
push
mov
xor
aad
fxam
dec
lret
mov
ljmp
jbe
mov
sub
pop
mov
mov
mov
pop
and
fidivs
cld
test
ljmp
movsl
push
xchg
sbb
iret
cmp
roll
data16
decb
adc
xchg
orl
pop
inc
cmpsl
push
enter
mov
mov
xchg
leave
out
test
insb
mov
pop
add
les
shrl
cmp
cmp
pop
pop
lcall
pop
and
jp
adc
movsl
adc
add
lock
mov
out
fisttpll
enter
fstps
or
mov
rcr
mov
jnp
jl
jb
sti
and
sub
outsb
dec
inc
pop
push
dec
add
pop
sub
and
jno
inc
ja
aaa
lea
mov
nop
mov
out
pop
jne
lods
sbb
xorb
xchg
push
or
pop
data16
arpl
sub
adc
dec
out
inc
mov
mov
jo
adc
fadds
and
movsl
pusha
loope
cmpsl
test
and
mov
addr16
mov
xor
adc
inc
adc
out
test
cs
popa
inc
mov
mov
fdivrs
add
inc
push
jle
mov
mov
dec
jmp
jmp
and
ds
scas
cs
jge
ret
out
sti
in
push
adc
xchg
inc
xor
pop
jecxz
or
arpl
nop
push
icebp
xor
mov
int3
out
cwtl
daa
aaa
imull
push
andb
cs
mov
cmp
daa
stos
pop
mov
fwait
or
adc
jmp
xchg
mov
repz
jp
and
add
pushl
push
adc
mov
sbb
xor
pop
adc
daa
dec
pop
jmp
sbb
into
fisubrs
shl
test
mov
iret
mov
dec
scas
cmc
add
adc
jb
scas
push
jae
dec
in
jg,pn
stos
popf
sub
in
sti
push
aas
mov
dec
sub
shlb
movl
pop
mov
lds
mov
inc
lea
in
int
les
jo
cwtl
data16
inc
push
pop
xchg
and
stos
pop
mov
ret
shrl
lcall
mov
push
fsubrs
xor
andb
push
add
cli
stc
cltd
jl
push
add
cld
jo
adc
cmp
sti
mov
dec
out
mov
stc
test
addb
add
jge
mov
test
movsb
sbb
pop
mov
daa
xor
adc
mov
and
xor
lahf
dec
push
out
insl
lea
subb
cli
adcl
cld
jo
adc
fsub
push
sbb
push
out
outsl
repz
push
std
lcall
repz
ficompl
sub
sub
je
sbbl
sbb
fistps
data16
adc
jne
cmp
push
adc
sbb
mov
mov
outsl
test
push
mov
sub
lret
xchg
xor
mov
push
je
jg
aaa
sbb
push
push
pop
pushf
push
outsb
push
mov
cmp
pop
in
cs
data16
and
add
add
fnstcw
out
loopne
iret
in
push
adc
xor
vmread
ret
push
add
mov
xchg
push
inc
bound
push
test
pop
clc
jecxz
stos
es
add
add
add
mov
mov
fisttpl
push
xor
adc
xchg
and
inc
or
dec
pop
dec
mov
push
mov
fsubrs
fidivs
lods
xchg
ja
xchg
pop
or
sub
push
add
stc
mov
test
xor
jbe
xchg
mov
sti
sub
jno
xchg
int
dec
pop
lret
fisubl
test
pop
mov
sahf
mov
icebp
and
int
shlb
pop
stos
int
std
add
ret
mov
into
sarl
xor
inc
cmp
mov
jbe
xor
mov
test
mov
outsb
inc
leave
cmp
pop
fwait
xchg
pop
push
pop
push
rolb
add
insl
jnp
fnstsw
ljmp
or
cmp
addr16
dec
inc
or
test
pop
push
add
pop
push
add
gs
add
clc
push
add
ja
add
movsl
push
add
xchg
push
add
movsl
push
add
scas
push
add
clc
push
add
clc
push
add
gs
add
and
adc
push
add
call
push
add
in
push
add
in
push
add
gs
add
clc
push
add
add
push
add
clc
push
add
clc
push
add
mov
push
add
lcall
push
push
out
js
sub
lahf
ljmp
ljmp
mov
outsb
subb
js
cmpsb
add
sub
xor
xchg
push
adc
push
mov
ret
add
fdivrl
cmp
fsubrs
or
and
and
push
negb
xchg
out
pop
cmp
pop
jge
mov
ja
orb
mov
push
scas
hlt
adc
mov
hlt
inc
nop
nop
ljmp
repz
xor
shrl
and
loope
fldcw
repnz
sbb
clc
and
add
dec
pop
xchg
test
xchg
aam
stos
in
pushf
inc
adc
jo
mov
xchg
out
jl
mov
repnz
mov
push
rorl
add
pop
dec
and
add
sub
dec
lret
pop
mov
outsl
pop
jbe
dec
push
scas
lahf
imul
push
jo
out
cmp
and
or
xchg
and
jg
popa
fs
or
sbb
outsl
adcb
inc
add
sub
lods
shl
gs
hlt
imul
add
nop
int
pusha
dec
imul
cmp
inc
pop
cmp
loop
jg
pop
fidivl
in
leave
orl
add
xorl
jbe
sub
into
inc
shrb
ficoml
sahf
sti
inc
in
out
test
inc
jmp
shlb
fcoms
dec
call
lods
push
sti
gs
mov
out
dec
pop
je
insl
sbbb
mov
sahf
bound
adc
xchg
mov
cli
mov
mov
jne
mov
sarb
mov
test
xor
scas
jbe
adc
adc
jnp
or
cmp
jo
pushf
sub
in
pop
mov
in
inc
mov
pop
mov
ror
fs
push
andl
imul
loope
dec
shl
add
jo
sub
popf
sbb
lret
lds
inc
or
cs
jne
lret
jge
pop
jb
in
pop
int
lds
lret
mov
leave
inc
mov
xchg
scas
mov
mov
sahf
sbb
lret
xchg
sbb
xor
test
nop
lea
mov
mov
or
or
pop
roll
inc
mov
sbb
xor
test
movsb
shlb
inc
orb
sub
cmp
and
push
adc
scas
mov
outsb
mov
pusha
mov
or
pop
inc
clc
mov
in
sub
jle
flds
push
xchg
ret
or
mov
push
cmp
dec
pop
leave
pop
jp
inc
ljmp
and
lahf
repz
movsl
push
push
sbb
xchg
xchg
das
xor
dec
and
pop
add
repnz
subl
aad
inc
or
push
adc
mov
mov
xchg
loope
jo
in
int3
and
addl
jne
mov
insl
xor
jb
jp
les
or
jle
push
ds
test
cmp
int
push
leave
icebp
pop
into
hlt
jo
pop
fwait
adc
mov
cmp
add
adc
jge
sbb
push
in
adc
push
into
jle
jge
int
and
add
mov
dec
xor
mov
jg
add
popf
jl
daa
sub
xchg
mov
test
jne
lds
imul
or
sub
out
push
cmp
push
imull
mov
pop
je
fnsave
and
push
push
dec
or
xchg
or
pop
cmp
fdivrs
sbb
cmp
xchg
add
cmc
stos
ret
xor
jle
xchg
and
mov
test
xchg
mov
call
js
cltd
cmp
xchg
sbb
mov
and
stos
std
cmpl
test
jns
or
add
pop
push
in
imul
sahf
insl
mov
imul
loopne
and
jns
sub
push
xlat
mov
and
loope
out
out
rclb
push
cmp
mov
testb
push
sub
outsl
and
and
pop
and
or
add
icebp
lds
in
pop
dec
cmc
dec
add
xor
adc
push
test
push
or
push
mov
push
mov
pop
inc
jmp
cmp
mov
jecxz
outsl
jo
fisttps
adc
dec
sbb
dec
sbb
dec
pop
fcoms
scas
cmpsb
pushf
les
mov
jbe
add
mov
and
scas
xchg
pop
lods
rcrl
cmp
push
inc
add
mov
adc
popf
rolb
cli
dec
xchg
and
fsubs
and
mov
push
mov
adc
movsl
das
mov
push
clc
jp
inc
pop
icebp
cmpsb
ss
lea
repz
xor
pop
push
jle
inc
or
jg
dec
pop
les
pop
mov
mov
jns
inc
sbb
ja
jg
mov
scas
push
repnz
fidivrs
push
imul
sub
jg
mov
in
or
mov
push
pop
cmp
rclb
dec
lret
outsl
into
sbb
push
dec
aad
pop
lds
push
adc
cmp
test
je
insl
ror
addb
cmovbe
outsl
out
shlb
pop
sub
je
lea
aaa
sbb
pop
push
mov
push
hlt
rorb
ds
aam
dec
dec
push
sub
jb
sbb
mov
mov
adc
gs
push
and
push
mov
cli
mov
push
jne
insb
push
imul
loope
sub
stos
xor
shlb
lods
rcrb
dec
arpl
mov
jmp
lahf
in
or
cwtl
mov
mov
aaa
pop
dec
adc
mov
xlat
adc
std
clc
adcl
outsl
sub
nop
mov
data16
fidivl
mov
push
adc
push
stos
xchg
fs
pop
xor
stc
fisttpll
dec
test
mov
aad
xchg
jle
out
loope
mov
adc
in
cmp
jmp
scas
pusha
rorb
xor
xchg
lret
push
sbb
pop
in
sarb
xlat
mov
cmc
mov
dec
lods
cmp
sbb
and
xor
cmp
xor
ret
subl
mov
add
lods
and
inc
clc
add
gs
lahf
das
fsubrl
pop
filds
jp
enter
xchg
iret
add
sti
imul
inc
inc
pop
xor
sub
and
cld
shrb
push
cmpsb
sbb
ret
xchg
mov
lahf
ss
subb
xor
daa
push
cmpb
stos
add
jne
sub
xor
arpl
fwait
xchg
push
and
mov
jmp
test
aad
ficompl
stos
push
repnz
scas
mov
mov
cwtl
mov
jmp
xchg
stos
ss
inc
std
lea
popf
insl
pop
icebp
sarl
loop
sti
push
repz
loop
and
jg
mov
push
ss
adc
sub
rol
push
dec
adc
andl
add
or
in
lcall
inc
les
popf
xor
push
mov
pop
inc
mov
je
mov
out
inc
adc
into
stos
clc
mov
cli
pop
divl
scas
cmp
cmpsl
and
xchg
movsb
dec
push
xor
loope
stos
sbb
xchg
mov
sbb
cld
pop
mov
add
add
stc
mov
cmp
sbb
dec
insl
scas
xchg
xchg
pop
xor
sub
inc
pop
inc
and
sub
pop
push
and
mov
data16
fnsave
arpl
dec
sbb
xor
push
in
jp
push
loopne
pop
dec
cmp
into
pop
in
imul
and
popa
or
dec
fwait
xchg
lahf
mov
mov
inc
fcompl
pop
ds
leave
adc
js
shll
adc
shrb
leave
sbb
lret
mov
sbb
cmp
es
pop
les
stos
mov
xor
ret
inc
adc
rcll
jp
fsubs
sbb
dec
pop
fcoms
scas
cmpsb
dec
les
mov
rclb
push
xchg
test
push
ret
xor
roll
je
mov
movsl
fidivrl
or
fcoms
mov
jge
call
addl
push
rol
fbstp
sbb
in
xchg
ljmp
pop
cmpsb
loopne
jb
mov
cmpsl
sbb
push
in
inc
popa
enter
decb
pop
and
stos
out
mov
pushf
xchg
loope
notl
push
loopne
nop
jbe
hlt
and
mov
xchg
fildll
dec
out
jmp
fsubrl
adc
adc
push
mov
and
pop
adc
rclb
sbb
ja
or
jae
mov
mov
dec
dec
fbld
jg
fidivs
adc
cltd
ja
std
or
fstpt
pop
rcll
stc
fsubrp
push
je
xchg
sbb
sbb
or
mov
dec
mov
pusha
shrb
sbb
enter
decb
dec
es
in
xchg
xor
xor
lods
push
sub
mov
sbb
ret
mov
mov
push
jno
sbb
lock
call
mov
or
jge
mov
xchg
es
in
popf
mov
sti
adc
cld
or
jp
adc
jne
out
pop
pop
push
sub
and
stos
lds
sbb
push
adc
mov
inc
add
pop
push
cmp
mov
scas
inc
cmpsl
push
iret
fcmovnb
add
test
xchg
fst
scas
arpl
push
adc
sahf
sub
sub
xor
and
or
int
addb
aad
outsl
leave
testl
dec
jne
push
adc
jno
iret
dec
sbbl
cli
mov
insl
je,pt
and
in
cld
orb
sbb
adc
iret
ror
stos
pop
and
fsubs
adc
xchg
outsb
jns
dec
scas
jge
mov
ja
sub
sbb
fsubl
in
sbb
in
loop
and
push
adc
ja
fistpll
xor
fwait
jns
inc
mov
out
mov
imul
add
fbld
push
lret
ficoms
shll
nop
mov
add
lahf
fcmovbe
pop
daa
mov
adc
cmp
dec
push
jne
bound
out
stos
or
inc
loop
fisubrs
shl
aad
outsb
fnstenv
movsb
cmc
xchg
push
adc
mov
ljmp
std
xlat
inc
jmp
testl
xchg
lret
cmp
aaa
fldt
xor
fisubl
pop
in
xchg
push
adc
je
mov
mov
add
inc
es
stos
jbe
sub
add
inc
pop
paddusb
repz
xor
pop
lcall
fsubr
lea
xchg
mov
mov
mov
inc
cld
sti
sbbb
fwait
das
dec
pop
push
mov
sub
fcmovnbe
mov
mov
stc
adc
add
inc
lock
xor
xorl
dec
lock
mov
push
adc
movsl
jg
lret
fidivrs
adc
mov
and
popf
and
adc
popf
in
adc
inc
popa
jl
or
push
mov
jnp
mov
or
pop
adc
mov
sub
repnz
adc
fwait
ljmp
negb
sub
mov
call
jnp
lret
ret
or
das
fstl
out
mov
and
stc
xchg
int3
in
leave
testl
das
outsl
cmc
pop
ret
push
mov
jo,pn
cmp
lcall
je
test
sub
test
cmp
shlb
subl
inc
addr16
test
inc
icebp
mov
sub
pop
fsubs
ss
mov
fidivrs
mov
inc
pop
out
cltd
loope
inc
stos
add
jle
mov
in
mov
sarl
out
ljmp
decb
xor
ja
andl
xchg
sar
gs
gs
bound
push
sub
insb
mov
loopne
leave
and
test
sahf
pusha
push
xchg
inc
ret
imul
fsubl
sbb
mov
sbb
or
mov
xchg
push
inc
lods
push
xor
mov
xor
push
test
notl
nop
and
xchg
stc
ja
adcl
sbb
jo
into
mov
adc
inc
cmpsl
cmpsb
sub
lea
inc
sub
clc
adc
sbb
ret
fs
gs
int3
jle
fnstsw
sub
xchg
mov
ss
mov
inc
push
add
pop
fildl
imul
insl
xor
lahf
and
fldl2t
pop
adc
outsb
test
pop
xchg
add
push
lods
mov
cltd
and
adc
test
mov
mov
aam
inc
push
icebp
clc
adcl
sub
pop
sarl
addr16
into
jl
fidivs
inc
push
inc
arpl
mov
add
adc
push
pop
aad
insb
in
insb
shlb
dec
jl
xor
xchg
fwait
pop
pop
add
into
dec
adc
stos
adc
jp
lds
sub
or
leave
les
adc
jg
mov
pop
mov
push
jae
mov
adc
dec
pusha
sub
push
cmp
les
or
adc
ja
jmp
mov
or
xor
adc
gs
mov
add
xor
jbe
jl
push
adc
imul
sahf
ljmp
xchg
loope
fsts
ret
icebp
mov
pop
adc
inc
jo
xchg
cmc
and
push
adc
jge
sahf
jle
test
repnz
jnp
jg
jge
sbbb
pop
push
or
add
popa
adc
mov
sub
sbb
je
mov
xchg
lods
imul
mov
rolb
xchg
push
or
mov
in
mov
fcomi
inc
pop
inc
popa
jecxz
lea
les
sub
outsb
sbb
jle
cmp
ficoms
sub
adc
out
clc
sti
in
push
cmpsl
xchg
clc
ja
xor
popa
sbb
push
movsb
mov
loope
std
cmp
sar
add
and
es
mov
mov
fidivrs
lods
cmp
pop
test
ja
fisubs
fldenv
jns
insb
mov
inc
nop
xor
rorb
jo
imulb
test
dec
pop
scas
dec
push
pop
add
fsubrs
mov
adc
lods
pusha
loopne
loop
sub
lret
push
cltd
xor
adc
cs
push
or
or
adc
imul
aas
inc
cmpsl
cmp
pop
scas
dec
cmp
lea
mov
mov
pop
adc
sbb
mov
push
adc
cmp
aaa
mov
das
and
mov
xor
inc
aad
int
or
inc
or
push
shl
jne
lock
sbb
pop
aam
xchg
stc
adc
jb
inc
jl
add
adc
push
mov
lahf
movsl
out
movsl
inc
je
mov
aaa
sbb
or
les
adc
je
fninit
out
in
mov
arpl
mov
call
xchg
out
inc
fs
loopne
scas
xchg
xor
pop
cmp
push
push
jle,pt
daa
and
jne
push
pop
cmp
bound
mov
rcr
or
nop
mov
les
xor
and
repz
jmp
xchg
jmp
std
xor
adc
pusha
adc
pop
les
dec
xchg
loope
bound
ret
pop
mov
push
adc
mov
mov
xchg
frstpm(287
cmp
bound
dec
xchg
in
push
jg
adc
lret
repnz
xorb
fdivrl
lcall
sbb
ja
pusha
adc
pop
add
clc
sahf
pop
in
inc
clc
adc
mov
in
nop
and
dec
ret
mov
ret
mov
pop
mov
mov
sub
xor
add
jno
inc
aam
mov
dec
out
lahf
movsl
push
lock
ja
clc
nop
and
jmp
xchg
in
imul
insb
mov
adc
push
cmpsb
ror
sti
mov
or
add
pop
or
stc
push
aas
adc
mov
pop
lods
scas
rorb
jne
or
fidivrl
or
inc
pop
fwait
imul
cmpsl
loope
movsb
in
mov
in
adc
test
stos
orl
inc
cmp
cs
cwtl
or
out
in
nop
mov
in
mov
out
lret
fst
push
sahf
push
pop
je
mov
aaa
subl
xchg
sbb
in
rorl
cwtl
enter
test
mov
lds
int3
mov
int3
mov
aaa
clc
mov
fs
xor
leave
push
pop
pop
sahf
mov
adc
loope
push
cmp
in
mov
mov
xchg
loopne
dec
fdivs
fistpll
ficoms
xor
sub
mov
loope
cli
adc
sbb
mov
aam
pop
sahf
orb
sarl
imul
loope
sub
stos
mov
or
xchg
cmpb
pusha
lret
inc
int
mov
mov
dec
xor
sbb
stc
cld
popl
adc
mov
repnz
mov
cmpsb
push
lret
mov
insb
lea
popl
add
into
dec
xchg
daa
dec
sbb
pop
lret
push
daa
sub
xchg
jle
faddp
mov
les
pop
mov
xor
ret
stc
ffree
mov
lahf
adc
jge
test
jecxz
neg
cmpsl
sub
mov
and
fstpt
out
add
ss
ss
and
cmp
mov
repz
push
cltd
out
mov
mov
subb
test
mov
xchg
cwtl
daa
cmp
shlb
loopne
stos
addr16
andl
incb
push
sbbl
cmp
cltd
lahf
pushf
test
dec
sbb
pop
std
test
and
mov
insl
pusha
dec
jecxz
mov
xchg
cmc
adc
movsb
jb
aad
cs
in
sbb
pop
and
imull
xchg
xchg
cmp
mov
fbld
rcrl
fs
mov
mov
dec
mov
push
dec
lea
sahf
pop
fimuls
ss
call
or
ret
pop
and
mov
je
insl
fimull
les
sbb
in
nop
enter
add
jge
push
fdivl
jmp
cli
push
aaa
in
inc
lods
push
andl
inc
jnp
dec
stos
dec
xchg
push
cmc
gs
lock
inc
sub
inc
push
xlat
mov
stc
or
loopne
test
test
sub
mov
sar
je
in
jp
aam
cs
mov
lods
in
sub
mov
and
mov
inc
add
sub
dec
xchg
push
lock
stos
movsb
icebp
sbb
sbb
adc
push
pop
outsb
pushf
es
lods
pop
mov
adc
or
dec
add
cmp
and
jae
xlat
mov
jg
mov
in
pop
test
xchg
sub
ss
dec
pop
negl
lret
std
or
std
mov
sbb
out
pop
and
dec
xchg
insl
push
lods
pop
push
mov
dec
sub
push
inc
push
loop
ret
test
pop
jno
add
aam
nop
jbe
and
mov
add
sub
xor
fnstenv
or
pop
sub
je
lcall
shl
push
orl
dec
les
pushf
mov
xchg
scas
mov
popf
out
jge
call
test
mov
loop
movsb
mov
stc
mov
aam
jbe
push
mull
mov
pop
jo
push
jns
jl
scas
pop
dec
data16
in
push
push
push
push
dec
or
push
pop
clc
lret
mov
scas
addr16
push
push
aas
mov
dec
jno
dec
add
cmpsl
push
mov
movsl
mov
stos
mov
sbb
imul
mov
rolb
testl
jno
imul
inc
movsb
pop
fdivl
jmp
sub
int
jnp
mov
add
jae
push
jmp
shrl
push
jp
add
into
mov
mov
sbb
jne
jg
clc
inc
call
mov
adc
dec
repnz
push
dec
or
add
dec
inc
ss
inc
aas
sbb
push
aas
lcall
add
test
call
inc
fwait
push
sub
push
out
iret
cmp
sbb
pop
mov
push
push
movsb
popf
adc
ds
pop
bound
dec
mov
aam
jle
add
adcb
loope
dec
jmp
mov
sub
addl
inc
addl
enter
jge
inc
or
in
mov
cltd
scas
frstpm(287
dec
pop
inc
pusha
jecxz
sbb
add
xchg
pop
sbb
hlt
xchg
pop
iret
xchg
rcr
push
sub
cmp
push
pop
mov
mov
sbb
pop
int
and
mov
fdivrl
cltd
adc
je
loop
push
sbb
fldcw
std
mov
pop
xor
and
repz
xor
jp
xor
adc
shrb
adc
add
mov
test
xor
adc
clc
xor
sub
or
mov
add
test
and
shl
mov
movsb
push
in
jecxz
ret
push
xor
dec
inc
jne
inc
dec
xor
neg
lods
je
dec
pop
pushf
mov
insl
fwait
sub
in
inc
cld
test
mov
clc
push
jne
orb
xor
adc
adc
in
fcomp
loope
arpl
hlt
out
out
out
adc
orb
mov
stos
sahf
dec
insb
scas
mov
imul
jg
or
idiv
ljmp
sbb
push
test
sub
enter
add
or
mov
pop
jecxz
ss
mov
arpl
mov
incb
add
das
xchg
xor
pop
addr16
icebp
and
stos
push
mov
pop
pop
sahf
movl
scas
mov
mov
je
mov
aaa
adc
push
dec
ret
mov
ret
sub
cmp
sub
pop
subb
mov
xor
jg
aam
movsl
mov
pushf
and
xchg
xchg
mov
pop
ja
stc
xchg
and
sub
dec
call
xchg
in
dec
xchg
cs
mov
xorb
cmpsl
sub
inc
addb
pop
int3
leave
inc
mov
addr16
js
decl
sub
jle
cmp
jecxz
pop
xor
adc
or
cmp
es
cmp
ret
jl
addr16
and
mov
je
cli
jg
ret
loope
movsb
dec
xchg
xchg
mov
lock
cltd
out
inc
pop
enter
incb
pop
fsubrs
test
add
and
push
adc
pop
cli
call
fcmove
ret
push
out
aad
push
movsl
ret
ret
shll
pop
dec
call
push
xchg
cmpl
loopne
xchg
ficompl
mov
cmp
fs
adc
movsl
dec
sahf
cmp
lods
and
pop
sub
lea
mov
dec
jmp
dec
push
and
or
stos
mov
dec
mov
sub
push
adc
xor
mov
fs
popa
adc
xor
stos
stc
jbe
jns
mov
imul
ja
xor
mov
clc
jmp
sbbl
rcrl
push
gs
incb
cmp
mov
shlb
insb
mov
dec
dec
fstl
sarb
pop
popf
pushf
jg
iret
icebp
push
into
dec
jno
or
cltd
xor
inc
inc
ss
rcll
push
or
pop
mov
xchg
pushf
in
add
mov
xchg
and
mov
push
ret
pop
xor
and
outsl
mov
sub
rorb
inc
or
pop
cs
mov
sub
mov
shrl
push
dec
inc
push
jg
fdivp
out
lret
add
push
daa
sbb
fnstenv
cmp
lahf
cmp
mov
sbb
dec
testb
jecxz
push
mov
shlb
xor
scas
push
dec
mov
jl,pt
jge
cs
mov
add
shll
and
mov
cmp
xchg
aaa
outsb
js
mov
pop
push
sbb
fists
inc
inc
xchg
mov
jle
clc
mov
dec
fdiv
cmpsl
popf
enter
mov
mov
mov
arpl
ljmp
ja
test
clc
lock
ljmp
mov
sbb
pop
mov
xchg
in
or
cmpsb
jmp
lret
mov
stos
ficomps
xchg
mov
xor
loopne
inc
shrl
mov
insl
fwait
jbe
mov
lods
sbb
cs
movsb
mov
add
push
shlb
scas
in
pop
xor
ja
pushf
add
in
nop
and
mov
lods
lods
stos
pop
cs
fidivl
rorl
js
fists
std
out
dec
sahf
cmp
pop
ret
mov
fsubrl
aas
dec
pushf
cmp
push
adc
ljmp
cmp
inc
xor
dec
pop
cmp
enter
movb
mov
sbb
push
and
mov
mov
js
repnz
mov
sahf
push
sub
imul
xor
in
inc
fst
and
or
fsubr
pop
lods
push
cmp
and
stos
test
aaa
outsl
mov
inc
or
push
cs
test
pop
xchg
and
es
ret
fld
lea
push
adcl
insl
loope
and
xor
lods
and
and
sub
pusha
or
cmp
into
movsl
mov
test
xchg
adc
outsl
stos
je
push
aam
adc
call
andl
dec
push
or
and
jbe
or
and
ret
movsl
mov
test
add
aaa
outsl
stos
pop
test
xor
or
call
push
pop
cmp
out
jae
shrl
push
jle
add
add
sbb
xor
aad
fxam
dec
lret
mov
ljmp
jbe
mov
sub
pop
mov
mov
mov
pop
and
fidivs
cld
test
ljmp
movsl
push
xchg
sbb
iret
cmp
roll
data16
decb
adc
xchg
orl
pop
dec
cmpsl
push
enter
mov
mov
xchg
leave
out
test
insb
fs
jmp
pop
add
les
shrl
cmp
cmp
pop
pop
lcall
pop
and
jp
adc
movsl
adc
add
lock
mov
jmp
sti
push
fcomp
pop
or
or
mov
xor
adc
pop
dec
cmp
ds
mov
push
mov
jl
push
adc
adc
ljmp
in
mov
into
ds
adc
push
pop
dec
xor
and
push
adc
xchg
inc
adc
test
jp
aas
jne
or
fadd
inc
sbb
and
adc
data16
ret
xchg
loope
outsb
mov
add
sbb
push
jb,pt
lock
and
inc
adc
jns
mov
add
fsubr
pop
pop
sti
fdivs
xchg
dec
and
xchg
lods
adc
add
cmpsl
pop
insb
sbb
pop
fdivrl
gs
out
data16
out
sub
jle
nop
aam
sub
pushf
pop
std
pusha
sbb
insl
test
aam
in
rorb
insb
pushf
xchg
pop
sbb
or
pop
jp
mov
inc
inc
inc
roll
sar
arpl
das
shrl
fadd
lds
movsl
bound
out
adc
xchg
loopne
jb
jno
pop
ja
jg
jg
insl
fistpl
sub
cltd
hlt
cmp
push
dec
pop
mov
mov
jno
in
mov
xchg
inc
mov
repnz
popf
cmp
cltd
xor
adc
cmpsl
in
mov
pop
dec
cmp
ret
imul
push
adc
out
addl
cwtl
dec
popf
in
push
or
pop
push
sub
sub
adc
adc
push
call
pop
test
ljmp
mov
sub
pop
sub
pop
jle
fistpll
in
leave
fadds
inc
add
mov
in
cmpsb
mov
lret
mov
insl
sarb
leave
fimuls
mov
xor
and
inc
loopne
mov
inc
test
mov
loopne
sbbb
cmc
push
mov
addl
sbb
cmp
aad
adc
lods
int3
push
popa
insb
orb
dec
insl
fcoml
addr16
inc
cmp
addb
pop
mov
in
stos
push
test
cmp
fucomp
pop
dec
sbb
inc
sbb
push
mov
jb
jns
adc
mov
std
cmc
and
movsb
cmp
divb
dec
pop
jns
in
and
lock
int
je
aam
and
adc
mov
push
imulb
outsl
mov
cs
push
and
and
call
fidivl
mov
leave
mov
mov
in
mov
adc
fcoms
pop
sub
xchg
pop
jno
sbb
int
pop
sbb
in
mov
or
pusha
and
pop
jb
adc
push
pop
lods
pop
idivb
xor
adc
pop
xchg
push
push
push
push
andl
mov
enter
mov
int3
mov
or
add
inc
adc
push
jecxz
test
mov
repz
sbb
or
mov
push
dec
dec
frstor
out
cmpsb
sbb
dec
jnp
les
lods
push
scas
pop
pop
int3
pop
fwait
ret
aad
cmpb
and
mov
xchg
retw
inc
push
cmp
jns
bound
ljmp
mov
mov
cwtl
pop
cli
outsl
cmp
and
sahf
arpl
or
dec
xlat
adc
dec
mov
adc
les
lahf
jns
xor
mov
inc
scas
testb
int
jecxz
pop
es
sub
dec
or
jp
dec
sbb
add
mov
aas
dec
mov
into
mov
gs
sbb
add
arpl
mov
test
mov
adc
leave
push
cltd
loop
rorl
or
mov
jp
push
mov
lret
pop
and
stos
mov
in
inc
jne
mov
shll
icebp
test
out
aad
call
add
cmpsl
mov
dec
xor
pop
sub
push
cmc
ss
mov
cli
hlt
jmp
adc
jae
fdiv
arpl
dec
xor
adc
fiaddl
jae
popf
fldt
xchg
es
gs
iret
lods
movsb
rcl
popf
mov
lret
ret
pop
imul
push
pop
xor
adc
push
idivb
lock
pop
pop
lea
cmpsl
inc
xor
decb
insl
pop
leave
xchg
jnp
jo
xlat
push
hlt
lock
orb
mov
lret
jbe
jnp
js
jg
repz
bound
mov
inc
sub
push
jns
jno
dec
push
stos
sbb
fs
movsb
add
pop
jnp
mov
jnp
mov
nop
push
fstps
sbb
and
repnz
fsubrl
cmp
and
push
dec
sbb
push
sbb
fstl
mov
faddp
xor
jecxz
in
pop
fldenv
ret
sub
out
pop
bound
push
cmpsb
cld
dec
and
stos
data16
or
dec
inc
mov
jge
inc
lds
xor
sahf
and
cld
xor
mov
movsl
xor
push
std
jae
inc
ret
mov
lods
mov
pop
pop
imul
fyl2x
sbb
aam
clc
inc
js
pop
push
mov
adc
mov
scas
jno
mov
je
outsb
sbb
outsl
push
mov
stos
add
and
mov
push
clc
gs
je
xchg
mov
into
mov
xorb
jae
mov
sahf
hlt
cmp
fsub
cmp
pop
and
sub
xchg
adc
in
dec
push
xor
int
push
push
scas
es
jo
daa
mov
and
xchg
mov
arpl
jae
rcrb
dec
add
add
pop
or
aad
dec
xchg
push
insl
pop
dec
sbb
jl
outsl
test
pushf
push
mov
or
jp
loopne
mov
mov
dec
xchg
push
insl
pop
int
idivb
lcall
sbb
mov
pop
ds
add
and
sbb
cmp
fsubl
es
sbb
aaa
outsl
lods
add
push
pop
std
dec
mov
repz
mov
cltd
jns
lds
hlt
test
add
or
xor
push
and
and
inc
or
mov
mov
mov
loopne
mov
pop
ja
xor
mulb
leave
test
js
add
mov
pop
fcmovnb
mov
jne
daa
and
pop
cmp
push
pop
jle
or
outsb
or
js
arpl
and
arpl
pop
das
inc
pop
js
out
mov
mov
pop
test
sub
loop
mov
sub
adc
mov
std
out
lds
outsb
push
mov
sub
rcll
xor
adc
xor
rcrl
enter
ja
cs
cwtl
movsb
lods
in
and
sub
int
xchg
mov
aas
jnp
xlat
icebp
call
adc
jne
pop
repnz
scas
cli
jnp
inc
mov
inc
vmaxss
mov
sub
mov
sbb
sbb
sar
cmpl
cbtw
shlb
cmpl
sub
popa
out
pop
jb
pop
imul
pop
xchg
sub
outsl
dec
iret
cmp
cmpsb
mov
inc
ja
js
ljmp
and
out
orl
push
sbb
or
sbb
cmp
mov
insb
rclb
mov
pop
aas
mov
sub
push
mov
push
fidivrs
in
ret
lods
add
lods
loopne
leave
xchg
fxch
movl
or
xor
cmp
push
cld
popa
insb
mov
dec
mov
incb
push
cmp
fcompl
mov
sub
hlt
pop
cmp
lds
dec
daa
test
inc
xchg
jae
ljmp
mov
fnstsw
and
and
push
inc
jae
imul
aaa
int3
ja
scas
sbb
push
test
sarb
mov
enter
cmpsl
jns
pop
fmuls
pop
jbe
ficomps
dec
fs
push
jne
dec
sbb
int
daa
xorps
es
dec
xor
rcl
fidivrs
fsubrs
popa
xchg
pusha
cmc
pusha
or
pop
mov
dec
sub
adc
fsubp
xchg
xchg
out
push
imul
mov
inc
jo
push
mov
movsb
inc
outsl
sbb
mov
roll
inc
pop
cmp
cmpsb
imull
addr16
rorb
adc
pop
in
ficomps
pop
fnstcw
mov
je
int
addb
ljmp
and
cmp
add
in
mov
popa
stos
push
test
cmp
add
mov
sbb
ds
out
loope
sub
xchg
stos
aaa
sbb
faddl
add
add
or
fwait
insl
scas
push
in
cmpsl
dec
push
data16
inc
call
stos
sbb
add
add
mov
dec
out
mov
movsb
cmp
mov
push
mov
in
inc
loop
test
shll
fidivs
mov
cmp
sub
dec
ret
mov
inc
push
outsb
cmp
mov
lcall
cld
add
sbb
dec
out
inc
xor
xchg
cmp
enter
adcb
cld
loop
std
test
filds
nop
lea
or
addr16
jo
jne
adc
das
xchg
jne
test
and
push
rorb
jge
call
inc
or
push
mov
inc
jp
mov
sbb
dec
pop
les
mov
in
and
inc
or
or
sub
sbb
ds
jmp
mov
pop
fcoms
jg
mov
js
ss
test
pop
push
sbb
lea
aam
push
xor
dec
push
sub
shr
mov
xchg
jmp
hlt
push
xor
xchg
scas
lds
jae
inc
xchg
and
inc
or
push
jecxz
pop
test
fidivs
add
push
stc
jnp
fldl
mov
insl
popl
push
call
shrb
in
sbb
aas
sub
cmp
fisubrs
sub
enter
outsb
dec
push
in
inc
adcb
clc
mov
push
and
jmp
out
pop
adc
push
mov
dec
sbb
dec
add
xor
addr16
in
xor
inc
adc
inc
in
cli
add
sbb
jnp
mov
fisubrs
imul
xchg
mov
inc
int3
notb
or
inc
pop
jecxz
shlb
fnsave
pop
dec
lods
lds
cmp
cld
xlat
sub
lahf
pop
test
gs
cmpsl
mov
push
dec
loop
mov
fs
mov
push
ja
or
mov
clc
enter
pop
roll
jp
popf
mov
xchg
repz
push
gs
arpl
add
jecxz
enter
mov
jmp
inc
xchg
aad
bound
out
jns
fs
push
movsb
xchg
mov
lea
pop
aam
ljmp
push
sub
jo
not
dec
adc
mov
addr16
add
xor
loopne
cmpsb
mov
jmp
adc
popa
movups
mov
add
push
and
mov
int
fabs
sbb
cwtl
add
out
mov
mov
ljmp
mov
fidivrl
push
out
pop
rcll
js
push
mov
sbb
or
jno
cmpsl
pop
xor
inc
out
lahf
scas
mov
pop
pop
jb
test
inc
aam
pusha
jecxz
xchg
adc
sbb
sub
push
and
or
push
add
push
repz
xor
jl
mov
outsl
pop
adc
inc
pop
jb
data16
pop
xor
movl
mov
jb
icebp
mov
nop
js
loop
or
rcll
push
pop
js
outsb
adc
mov
sbb
test
aaa
fmulp
cmp
add
imull
xorl
test
jmp
sbb
inc
ss
jmp
fwait
in
push
mov
sub
jae
cmc
nop
or
cltd
sti
sub
fsubrp
das
leave
adc
cmc
mov
pop
in
stos
lock
lods
add
or
daa
xchg
pop
rcll
in
pop
test
aaa
outsl
stos
jo
add
mov
ret
push
push
movsl
dec
out
inc
loopne
popf
xor
int
stos
dec
pushf
cmp
or
push
mov
std
lods
fldt
test
cmp
xchg
stos
pop
cmp
and
repz
ljmp
popf
mov
test
pop
mov
data16
or
adc
stos
mov
push
cs
ds
loope
cmpsl
mov
je
arpl
stc
adc
jecxz
xor
mov
cmp
data16
or
and
jno
ss
fdivp
jmp
mov
jmp
dec
cmp
in
pop
outsl
push
pop
dec
je
sbb
sbb
pop
ljmp
xchg
test
or
insb
push
sti
mov
push
fsubr
mov
xchg
lret
inc
leave
lea
add
add
adc
pop
jp
mov
push
inc
pop
hlt
sbb
mov
adc
enter
add
andl
rol
adcl
xchg
push
push
rcrl
dec
push
push
outsl
push
push
jg
adc
jo
ljmp
and
and
ljmp
pushf
cmp
xchg
pop
loop
cmp
out
in
cmp
pop
fistpl
jp
push
adc
xor
adc
fistpll
xchg
mov
add
decl
out
sub
cmp
mov
lods
pop
xabort
std
push
inc
xchg
and
mov
out
push
add
mov
xor
rcr
jecxz
mov
pop
adc
push
push
mov
pop
adc
popf
dec
lods
push
mov
push
fimull
adc
xchg
xchg
pop
jne
les
adc
nop
xor
roll
pop
dec
fistps
push
xchg
xor
pop
mov
stos
imul
push
jmp
das
cld
sti
pop
xchg
icebp
xchg
jmp
inc
mov
mov
int3
or
lock
je
pop
adc
test
inc
cld
add
adc
aam
je
pop
adc
xor
je
pop
adc
dec
mov
fwait
je
pop
adc
inc
dec
test
and
mov
or
push
int
sub
sbb
mov
push
sbb
lret
inc
dec
push
add
out
sbb
ljmp
mov
and
push
adc
lea
jmp
stos
mov
adc
pop
mov
mov
dec
push
sub
add
adc
or
mov
push
jmp
cmpsb
dec
popf
mov
out
repnz
sub
or
ret
xor
jle,pt
mov
flds
pop
pop
mov
jae
sahf
xchg
daa
int3
mov
dec
add
pop
rcl
cli
xor
js
adc
cmpsl
pop
je
adc
add
pop
orb
sub
or
add
arpl
gs
aaa
dec
xchg
pop
sub
aam
and
loop
push
cwtl
test
jne
shlb
cltd
dec
jge
aaa
pop
push
xor
hlt
fidivl
mov
ret
xor
pop
cli
stos
sbb
xchg
adc
mov
icebp
scas
add
mov
jo
adc
inc
sbb
sbb
adc
mov
pop
cmpsl
out
mov
ljmp
push
sahf
add
stos
mov
jmp
jmp
mov
pop
jg
dec
inc
mov
xor
or
mov
repnz
jle
xchg
push
loop
mov
cld
subl
jne
and
adc
stos
adc
cmp
aaa
outsl
lods
lds
push
xlat
push
push
dec
sbb
push
adc
sbb
insb
test
pop
icebp
imul
ljmp
and
stos
pop
mov
cmpsb
mov
lea
inc
aad
int
cmp
std
cli
pop
ljmp
sbb
imul
daa
xor
cmp
movsl
dec
pop
or
pop
cld
jo
adc
sub
dec
xchg
and
stos
lahf
dec
push
push
adc
xchg
add
mov
sub
insl
ficompl
insb
push
lods
dec
cmp
loopne
mov
add
sub
sub
dec
xchg
and
out
jae
sub
stc
sub
dec
push
mov
jne
ljmp
push
cmp
and
daa
mov
sbb
add
addb
ja
sbb
dec
out
pop
mov
dec
xchg
mov
pushf
cmp
enter
lds
adc
add
inc
sub
xor
xchg
and
sbb
push
adc
movb
je
leave
sbb
sbb
mov
aad
jg
insl
adc
jo
pop
adc
imul
cmp
xchg
and
call
test
imul
addl
push
movsb
dec
out
xchg
and
or
dec
pop
xor
xor
mov
test
mov
out
jg
xchg
and
imul
push
mov
fnstsw
clc
idiv
test
ljmp
cs
rorl
cmp
and
test
jne
mov
xchg
lds
adc
xchg
gs
bound
or
mov
xchg
mov
adc
fs
cmpsb
es
push
xor
fdivrl
imul
ljmp
adc
pop
sub
sbb
inc
int3
mov
adc
jecxz
bound
ret
in
pop
lds
adc
mov
imul
fsubl
pop
adc
xchg
lods
pop
fs
insl
xor
adc
push
loop
lods
addr16
jg
stos
test
pop
sbb
pushf
cmp
int
popf
push
xchg
out
stos
mov
js
xchg
or
fsubrs
icebp
test
inc
inc
leave
mov
nop
incb
sbb
add
mov
sbb
adc
jge
mov
push
mov
add
jmp
addr16
adc
sub
mov
push
cmpsl
ret
dec
xchg
mov
iret
xor
daa
mov
sbb
insl
stc
imul
inc
push
inc
arpl
push
mov
test
pop
or
xor
cmpsl
mov
aam
mov
movb
loopne
stos
pop
mov
xchg
push
icebp
lock
lcall
pop
adc
mov
or
test
mov
cmp
movb
mov
push
or
inc
mov
mov
push
aaa
dec
mov
push
or
into
out
xor
add
pop
adc
push
or
dec
adc
mov
jbe
jmp
sbb
mov
add
pop
adc
cmc
adc
pop
push
outsb
push
mov
xor
xlat
mov
pop
data16
test
adc
inc
test
cmp
repz
cmc
adc
cmpsl
sub
mov
mov
sub
sbb
adc
repnz
jbe
sbb
adc
call
jns
dec
sti
mov
pop
stc
jne
push
pop
test
leave
adc
adc
fdivr
xchg
cmp
sbb
outsl
fcomip
cld
std
mov
inc
ret
pop
jae
dec
add
pop
jl
push
sub
int3
cmp
cwtl
cli
and
ljmp
adc
in
xchg
insb
sub
mov
flds
jno
adc
les
dec
pop
or
jo
cmp
add
pop
pop
or
jmp
outsl
fistpll
or
lods
push
pop
or
out
cmpsl
stos
outsl
fimull
dec
pop
or
lds
outsl
repz
xor
push
or
aam
adc
push
or
cmp
sub
cmp
or
pop
fidivrs
or
pop
cmpsb
push
in
mov
sbb
pop
mov
dec
movb
or
mov
cli
cmc
ljmp
outsl
dec
xchg
push
xor
sub
testl
adc
std
je
scas
pop
cmp
and
mov
cltd
loop
cld
jo
adc
aaa
dec
pop
or
test
mov
mov
pop
cmpsl
dec
pushf
cmp
test
addl
pop
pop
ret
xchg
xor
and
or
push
cmpsl
out
lock
ja
in
mov
cli
mov
shl
xorl
pop
mov
hlt
push
rolb
add
or
jmp
gs
call
jecxz
jecxz
push
pop
and
pushf
cmp
mov
sbb
test
in
dec
add
xchg
push
cmpsl
push
fcmovnu
imul
add
pop
bound
insl
int
jmp
add
jno
sub
rclb
jl
sub
cmp
js
adc
mov
push
adc
int
fidivs
push
shrb
or
lret
das
or
pop
pop
lea
aaa
stos
pop
sbb
das
inc
lahf
mov
sbb
and
nop
mov
popf
fdivp
shl
mov
inc
incb
mov
pop
pop
inc
loope
loopne
xlat
xchg
out
mov
adc
or
mov
inc
leave
bound
scas
mov
sar
rclb
push
insb
pop
pop
adc
push
pushf
mov
int3
xchg
push
adc
flds
adc
add
xor
jnp
xchg
jmp
std
pop
adc
cld
mov
test
push
or
aas
mov
sbb
push
ss
lods
imul
and
fs
fs
add
xchg
insb
push
mov
fs
pop
lret
push
or
xor
add
adc
xchg
push
adc
out
pop
adc
imul
sti
mov
mov
sets
fdivrl
idiv
cmp
or
daa
mov
mov
fistl
adc
mov
imul
and
cli
std
or
mov
out
mov
jg
push
mov
adc
jno
lock
and
cld
pushf
sub
adc
cwtl
fisubs
mov
pop
sub
pop
adc
jmp
mov
cmp
push
mov
adc
mov
inc
adc
repnz
jb
xchg
push
add
cmpsl
jno
sbb
xchg
adc
in
std
imul
and
add
aam
dec
insl
and
cmp
sbb
push
adc
rcr
mov
sbb
sti
test
push
stos
jne
hlt
repz
mov
cmc
xchg
rol
dec
push
xchg
insl
push
sti
in
in
push
fdivl
push
adc
jb
mov
add
jle
push
mov
leave
adc
adc
pop
xchg
xchg
jecxz
lea
pop
or
lds
adc
push
lods
movsb
mov
jnp
push
or
fsubs
sbb
nop
test
std
ds
push
or
das
hlt
out
jle
xchg
and
addr16
enter
in
ret
inc
inc
std
or
sub
aam
es
cmp
out
sub
cmpsl
dec
pushf
mov
fdivs
outsl
fistpll
push
std
cli
jg
in
rol
movsb
dec
xchg
fimull
dec
pop
or
push
inc
cld
jo
adc
pop
mov
jne
std
addb
test
and
call
lods
daa
mov
mov
sbb
orl
pop
cmp
rorb
mov
pop
cmpsl
mov
popl
adc
mov
aas
dec
xchg
and
sub
mov
aam
mov
stc
popa
lods
outsl
fistpll
cli
mov
mov
pop
jge
fidivl
pop
mov
hlt
push
rolb
add
imulb
mov
insl
fisttpl
rcrb
adc
pop
negb
lret
les
or
inc
cwtl
das
push
and
loopne
out
and
push
pop
jle
cmp
adc
incb
xor
dec
bound
fidivl
mov
dec
popa
cwtl
outsl
fistpll
add
sub
mov
fistpl
fidivl
pop
lds
fldcw
popl
sar
fs
cmp
and
xchg
pop
loopne
sub
sbb
jbe
jge
xor
test
push
cmp
dec
out
lahf
xchg
sub
pusha
popa
les
mov
push
out
jle
xlat
es
and
inc
mov
push
xchg
and
cltd
cmp
sbb
adcl
aam
scas
inc
loop
mov
hlt
inc
lahf
and
lods
inc
xchg
mov
xor
xchg
out
inc
push
adc
imul
inc
les
xchg
xorb
jb
add
xor
and
mov
jb
idiv
mov
sbb
cld
cmpl
mov
ret
jo
mov
jno
pop
or
adc
frstor
mov
pop
pop
seta
or
sub
pop
push
dec
ret
jnp
mov
inc
sbb
xor
mov
pop
or
adc
inc
pop
or
mov
in
ror
push
cmpb
sub
mov
mov
loopne
stos
pusha
adc
cld
add
push
push
sub
adc
push
adc
lret
ja
cli
pop
or
sti
hlt
psllq
out
push
or
les
mov
adc
sbb
or
or
fsub
outsl
fadd
jg
xchg
inc
pop
or
movsb
mov
pop
jbe
xchg
orb
stos
pop
jbe
push
mov
frstor
inc
lret
fwait
ds
xor
mov
jbe
mov
mov
jno
mov
adc
pop
sti
sbb
sbb
xchg
push
mov
cwtl
out
and
les
or
jno
cmp
pop
scas
push
mov
hlt
loope
or
out
inc
mov
lea
xchg
mov
add
and
aaa
mov
xor
or
fisubrl
and
sub
lret
in
out
jb,pt
mov
sbb
aad
cs
mov
or
sbb
notl
shr
lret
mov
in
cld
jo
adc
push
loope
pop
stc
repnz
sbb
mov
pop
adc
add
adc
mov
mov
pop
das
inc
mov
jo
adc
adc
rcr
pop
adc
xor
lods
pop
sti
movsb
lea
movhps
add
push
movsb
xor
sub
or
add
lods
jae
adc
out
lret
xchg
xchg
push
adc
shlb
pop
mov
fwait
in
ficompl
adc
and
pushf
mov
nop
lds
out
test
pop
std
mov
inc
aam
movsl
xor
sbb
int3
flds
adc
addr16
jo
adc
add
es
cmp
xlat
mov
aam
fsubr
mov
enter
dec
ret
mov
ret
sub
pop
mov
aaa
data16
fidivl
push
lock
sahf
stos
cltd
or
mov
pushf
mov
push
movsb
dec
sbb
jno
jo
pop
adc
pop
cmpsl
dec
ja
mov
inc
nop
and
push
add
mov
scas
mov
int3
flds
adc
adc
es
push
std
cli
pop
inc
aam
cmp
insl
push
xor
adc
flds
adc
inc
add
outsl
fbstp
flds
adc
pop
cld
jo
adc
lret
popa
fcmovnb
popa
sbb
adc
sbb
lods
inc
addb
push
add
push
or
adc
lods
mull
push
je
adc
cwtl
scas
cmp
dec
add
in
lds
push
cmpsl
int
sub
sar
add
int3
adc
pop
adc
cmp
mov
shll
pop
test
cmpsb
leave
cmp
cmc
clc
and
subb
outsl
cmp
adc
cmpsb
mov
pop
ja
leave
ret
shl
sahf
insl
daa
insb
dec
stc
fidivrl
or
inc
out
xor
pop
mov
push
rcrl
ds
sti
jge
faddl
adc
fimuls
or
add
cmpsl
push
and
sarl
pop
mov
aas
push
jnp
and
pop
adc
aaa
scas
int3
scas
in
pop
adc
lret
je
std
mov
adc
flds
adc
loopne
pop
adc
invd
adc
mov
adc
orl
adc
inc
rclb
pop
xchg
fxch
jnp
std
lods
mov
mov
fidivl
adc
cmp
popf
sub
sub
jmp
mov
push
int
xchg
lock
pop
adc
xor
adc
cltd
xor
inc
sub
xchg
push
adc
pop
adc
cmp
sbb
and
or
inc
mov
addb
xor
ljmp
stos
rcrl
es
mov
push
cmc
jmp
insb
sub
dec
xchg
and
xchg
sub
cmp
inc
cs
mov
or
jl
or
sub
outsb
fnstenv
cmpsl
dec
push
jg
pop
pop
adc
cli
or
scas
daa
adc
push
cmp
and
andb
adcl
icebp
lock
shl
shll
jno
pushf
sub
shl
mov
mov
aas
mov
pop
and
flds
adc
lock
jno
fildll
mov
xchg
push
adc
mov
mov
pop
nop
push
repz
lea
popa
adc
pusha
mov
fdivr
pop
adc
fdiv
in
jb
notb
aam
loop
or
jae
cs
mov
in
fisttpl
std
pop
loopne
cmc
dec
pop
idivl
flds
adc
sbb
xor
jbe
scas
imul
imul
mov
adc
dec
fld
or
mov
mov
jge
xor
flds
adc
xchg
push
lret
movsb
jmp
xor
call
fistpll
ds
ljmp
and
test
adc
fisttps
in
lret
mov
push
or
push
movsb
out
sahf
dec
push
mov
pushf
mov
aas
and
and
jge
add
pop
jo
pop
adc
mov
lea
dec
sbb
inc
xor
add
push
movsb
cmp
mov
xchg
and
lods
pop
mov
jl
call
jg
mov
inc
pop
repz
xchg
aam
aam
mov
pop
and
pop
mov
pushl
sbb
js
adc
mov
in
cmc
inc
aam
movsb
dec
pop
dec
pop
or
cmp
sub
add
adc
cltd
les
je
ret
faddl
adc
insl
fistpl
push
xor
sub
pusha
into
adc
jb
fcmovnb
and
mov
adc
dec
xchg
loopne
mov
xchg
rolb
push
in
fcoms
test
pop
adc
inc
sub
push
dec
jge
jmp
and
out
mov
and
add
aam
sub
dec
xchg
and
cmp
popa
aad
dec
pop
or
icebp
cld
jo
adc
jge
add
ljmp
pop
xchg
and
push
pop
dec
call
outsl
jno
or
xchg
data16
push
fidivs
fnstsw
fsubl
mov
xor
insb
fidivrs
adc
cltd
cmpsl
jnp
movsl
dec
stos
lahf
dec
addb
mov
mov
lret
or
cld
mov
xchg
and
aam
es
test
push
jmp
mov
xchg
subl
push
mov
jecxz
loopne
andb
out
int
ja
mov
arpl
imul
adc
mov
mov
repnz
sbb
sbb
pop
adc
jns
dec
imul
je
add
pop
int3
fsubr
or
rcrb
adc
lea
xor
or
push
stos
sarl
jo
add
std
adc
fistpl
push
mov
ret
imul
push
ljmp
loop
inc
push
js
xchg
cmp
outsb
dec
test
cmp
inc
dec
rorb
sbb
add
gs
jmp
aas
adc
fbstp
stos
xchg
lahf
jo
or
fs
mov
mov
lock
pop
aas
call
add
fwait
sub
and
push
mov
fcoms
outsb
lods
les
sbb
lret
dec
xchg
xor
dec
push
mov
faddl
adc
jbe
sub
mov
imul
daa
mov
pop
mov
push
mov
negl
cmpsl
cmp
or
daa
push
cmp
or
test
jge
cmp
or
mov
imull
xlat
jp
aaa
sti
jo
fisubrl
lds
adc
or
fwait
out
push
inc
outsl
stos
test
lahf
sbb
sbb
or
sbb
adc
xchg
stc
sahf
stos
sbb
push
pop
pop
mov
into
xor
lcall
cmp
or
fcmovnu
push
jg
xchg
mov
pop
or
cld
addr16
pop
or
ret
test
stos
jne
xchg
push
adc
jecxz
insb
sti
movsl
cmc
lock
lahf
pop
mov
mov
dec
push
gs
push
mov
or
cmp
xchg
cmp
idivl
filds
lods
aas
cmp
push
loopne
sbb
mov
adc
jl
xchg
push
adc
mov
into
mov
ljmp
sub
mov
movsl
leave
adc
ror
cmp
pushf
lods
std
push
xchg
mov
pop
lret
test
ds
add
push
sub
dec
imul
inc
push
mov
cmp
adc
cld
jo
adc
cmp
fldcw
ffreep
std
or
ja
int
jo
pop
adc
cmp
mov
lret
mov
lods
pop
mov
jne
orb
mov
pusha
cmp
das
dec
pushf
data16
add
inc
cmp
mov
push
lods
fcomps
mov
cmp
jmp
mov
dec
inc
mov
adc
mov
cmpsl
mov
sahf
outsb
cmp
mov
mov
pop
adc
inc
mov
repnz
adc
push
icebp
imul
rcrb
mulb
mov
js
test
incb
or
inc
sbb
aas
xor
and
or
pushf
and
push
sbb
mov
aas
xor
ds
cmp
arpl
add
cld
pop
cmp
ds
and
scas
into
out
jb
rcrb
sub
inc
pop
adc
pop
adc
push
mov
movsb
lods
mov
pop
out
inc
popa
jbe
dec
call
sahf
insl
push
imul
insb
push
lock
cmpsl
mov
sarb
xchg
push
add
push
inc
cmp
mulb
sti
mov
orl
out
adc
pop
aas
sub
dec
pop
fdivrl
ds
nop
pop
mov
jge
push
adc
sbbb
out
movsl
adc
aad
insb
push
pushf
sbb
cmp
daa
adc
mov
adc
dec
mov
or
int
pop
cltd
sub
call
mov
pop
lods
in
enter
sarb
dec
adc
xor
push
lock
xor
inc
xor
pop
jle
int3
imul
sub
sub
lcall
jns
stos
iret
test
movsb
inc
jno
push
xchg
and
add
push
xlat
or
jnp
out
mov
add
cmc
or
and
push
cmp
adc
push
je
repnz
pop
je
adc
mov
mov
bound
or
sub
adc
adc
idivb
test
or
imul
stos
fs
or
data16
jg
outsb
repz
sub
xor
out
out
data16
popf
sbb
mov
fwait
clc
je
fdivrp
xchg
popf
add
pop
lahf
in
mov
mov
sub
jge
rol
mov
xchg
xchg
sub
and
add
stc
jl
movsl
fadds
scas
dec
xchg
push
xor
fnstenv
sub
cmp
mov
xchg
iret
inc
sbb
stc
mov
xchg
cmpsl
jbe
and
push
and
in
insl
jl
mov
movsl
dec
gs
int3
pop
in
and
mov
pusha
aam
lahf
cmp
sub
fs
add
pushf
addr16
push
sbb
mov
mov
push
add
cmp
dec
lods
jg
dec
push
insl
adc
xchg
rol
xchg
xor
js
sbb
loopne
jnp
adc
xor
add
sbbl
mov
jo
jb
sub
push
fldenv
loop
sub
pop
subl
insl
sti
jno
dec
in
mov
std
fimull
sbb
jno
mov
mov
pop
push
and
les
jg
ror
lds
and
lods
sbb
xchg
clc
loop,pt
insb
ss
xor
mov
lock
adc
loopne
es
jne
leave
adc
add
jmp
into
sbb
idivl
add
ljmp
xor
and
test
pop
lods
pop
push
adc
adc
insl
hlt
cli
cmc
adc
push
lods
mov
out
mov
mov
out
sbb
lods
pop
push
arpl
je
adc
cmc
call
inc
mov
mov
dec
in
ficompl
jo
lods
sub
cwtl
pushl
sbb
js
or
decl
aam
xchg
push
jle
pop
jb
and
push
cmpsl
dec
test
roll
pop
or
jg
add
adc
dec
cmp
rcr
adc
sub
pop
mov
mov
dec
mov
xchg
pop
flds
adc
cmp
adc
pop
push
pop
negb
int
mov
mov
loop
jnp
push
fidivs
lret
cmp
outsb
in
add
or
cmpsb
je
lea
aaa
nop
lods
lds
std
push
sbb
dec
pop
and
loopne
add
pop
popa
mov
roll
pop
or
jg
cld
jo
adc
pop
pop
and
or
and
sub
cmp
or
add
ret
sub
repnz
fisttpl
mov
int
dec
pushf
cmp
popa
or
mov
faddl
adc
push
popf
das
mov
xchg
xchg
and
jg
pushf
cmp
lret
cmp
xchg
insl
xchg
cs
test
mov
mov
ret
xor
push
add
or
aad
movsb
mov
imul
loope
mov
sbb
in
mov
mov
push
test
fnstsw
push
mov
mov
leave
ficoms
loope
pop
push
shrl
xor
lock
repz
clc
mov
shlb
cltd
xor
pop
jecxz
rcll
lcall
cltd
jns
fstps
push
gs
xchg
cwtl
push
scas
inc
cwtl
les
imul
mov
inc
test
jg
sahf
sub
inc
mov
mov
jbe
ret
out
adc
or
shr
or
inc
notl
jle
outsb
imul
pop
les
jnp
mov
adc
cmp
das
xor
or
cmpl
cli
hlt
repz
adc
arpl
xchg
dec
shll
xchg
adc
or
icebp
sub
clc
aaa
or
jo
idivb
pop
or
icebp
pop
out
mov
cmpsb
movsb
mov
xor
mov
loop
pop
sub
mulb
jmp
cmp
enter
je
jne
sbb
and
data16
sbb
push
adc
insb
leave
mov
dec
je
adc
std
jmp
sub
xlat
xor
fidivl
cmp
cmc
fldenv
out
insb
push
xor
xchg
stc
imul
popf
xchg
pop
cmpsl
dec
push
sub
or
out
inc
cmp
sbb
mov
sub
push
mov
jl
xor
dec
xchg
xor
sbb
dec
out
pop
mov
fstpl
push
cmc
push
lock
xchg
popa
pop
mov
mov
push
push
mov
outsb
clc
aam
mov
je
insb
loope
popf
dec
pop
ret
xor
pop
mov
daa
notl
jbe
in
je
add
jae
sub
lret
jp
fldcw
nop
scas
mov
add
adc
add
and
imul
cld
std
mul
jne
or
push
cmp
es
push
mov
aad
jae
adc
cmp
jnp
jb
fisttps
andb
push
cmpl
jg
cmpsb
push
inc
pop
cmp
adc
insl
push
repz
and
xchg
test
xor
pop
aas
push
push
sbb
fsubrp
sahf
lret
dec
movsl
movsl
lret
out
xchg
fcmovnb
hlt
sub
sbb
sub
pop
adc
push
pop
inc
mov
fwait
and
xchg
outsl
or
dec
xlat
ljmp
mov
dec
dec
cli
cmc
sahf
jecxz
call
or
pop
lods
pop
cmpsb
bound
cmpsb
aam
add
push
mov
std
mov
xor
inc
xchg
sub
xchg
loop
xchg
addr16
push
adc
jge
push
in
jmp
sub
jbe
and
push
adc
outsl
cmp
iret
pop
mov
jl
fisttps
push
gs
or
inc
push
push
push
mov
fistpll
pop
jge
movb
or
xchg
cld
add
add
jo
adc
or
pop
in
pusha
enter
in
ret
and
ljmp
into
pop
movsb
dec
outsl
fcmovnbe
in
adc
and
push
lea
int3
mov
push
inc
in
xchg
and
and
jae
sub
stc
sub
pop
popf
mov
repz
ljmp
into
sbb
push
adc
aam
mull
inc
jnp
movb
adc
adc
movsl
dec
push
test
sbb
movsb
adc
fbld
in
js
cmpsl
jg
call
adc
cmp
insl
sbb
loope
mov
sar
push
cmpsl
inc
sbb
jae
enter
jbe
cmp
imul
jge
and
or
sub
and
mov
and
mov
inc
mov
xlat
cmp
repz
push
fldenv
imull
fisttpll
out
leave
mov
push
bswap
xchg
movsl
push
scas
pop
mov
test
pop
mov
shlb
adc
aam
lods
push
mov
and
cmp
dec
jp
adc
adc
pop
ljmp
jae
lods
cwtl
push
scas
inc
out
dec
jl
das
inc
mov
sahf
arpl
xchg
jmp
inc
jns
xchg
push
adc
mov
jno
lret
xorl
movsb
js
inc
mul
xlat
pop
and
imul
or
adc
jle
dec
push
pushf
insb
call
cmp
ror
add
dec
mov
psllw
dec
push
repz
movsl
fdivl
in
cmpsl
add
ljmp
or
out
pop
fisubs
inc
inc
inc
pop
push
push
imul
cmp
js
shlb
mov
jmp
cmc
repnz
push
hlt
rolb
add
xchg
sbb
jl
xor
shll
jecxz
xor
inc
addl
adc
bound
adc
adc
stos
push
cmpsb
dec
xchg
mov
in
lsl
add
xor
inc
xchg
daa
cmp
insl
inc
xchg
sub
sbb
jg
fdivrs
ljmp
xor
add
inc
leave
mov
pop
xor
lds
xor
nop
xchg
push
adc
cwtl
push
pop
sub
inc
mov
les
lahf
in
insl
aas
arpl
and
adc
adc
inc
push
cmc
xor
nop
jae
mov
mov
jbe
jo
adc
xchg
xor
jbe
inc
adc
push
xor
and
jb
dec
xor
or
aam
add
adc
pop
xchg
fcompl
dec
mov
fs
lahf
pop
push
xor
ss
adc
xchg
iret
enter
out
negl
imull
ds
xchg
insl
push
push
xchg
and
imul
push
or
aas
call
inc
jns
jge
pop
fldt
movsb
mov
adc
subl
inc
lds
std
outsl
cmc
inc
jl
and
dec
xchg
and
or
xchg
mov
js
ljmp
jle
imul
xchg
push
and
xchg
and
test
push
xor
mov
nop
xchg
push
adc
std
in
dec
mov
test
adc
and
push
dec
push
lods
iret
adcb
fistpll
sti
cmc
mov
les
adc
mov
pop
adc
fsubl
mov
lea
or
in
pop
jns
test
cmp
push
lods
popa
or
lcall
pop
mov
xor
mov
and
push
cmpsl
pop
enter
mov
and
xor
ljmp
mov
aam
add
jg
sbb
xchg
shl
cmc
pushf
mov
pop
movsb
dec
in
mov
test
movb
inc
popf
xor
or
mov
cld
ljmp
and
loopne
sub
andb
mov
inc
nop
and
push
add
cli
aas
dec
pop
or
movsb
mov
push
xor
and
pushf
lea
mov
mov
call
ret
sub
cmp
insl
fstpt
sub
cmp
jo
rorl
push
sub
mov
and
fildll
lods
lds
pop
mov
adc
outsb
sbb
xchg
cmc
jmp
sbb
ds
fidivl
cmp
fisttpll
cs
xlat
mov
push
push
pop
inc
jle
push
shl
imul
push
outsl
fcom
and
in
popf
push
dec
push
fucomi
cwtl
mov
out
stos
xchg
icebp
pop
cmp
xchg
out
js
push
push
ljmp
xor
jns
leave
imul
std
iret
pop
fnsetpm(287
add
jnp
pop
pop
push
sbb
cmp
pusha
das
xor
dec
repz
orl
mov
dec
fcoml
lods
ljmp
jg
mov
push
pop
hlt
or
es
jge
ret
or
mov
jle
out
cmp
cmc
imul
gs
movsb
movsb
stos
mov
mov
test
nop
imul
sbb
inc
jl
mov
outsb
arpl
sbb
fwait
imul
dec
mov
lcall
test
lock
xor
add
repnz
mov
and
pop
call
in
xchg
lods
pop
lea
jmp
mov
add
sbb
cmp
lret
cmp
push
mov
mov
testl
xorb
imull
in
movsl
in
mov
test
movsl
xchg
int3
or
in
inc
mov
jl
repz
dec
xchg
pop
jno
test
sub
inc
sub
or
popa
movsl
or
pop
cwtl
in
repz
push
push
inc
pushf
push
jnp
adc
and
push
cmc
imul
loop
sbb
inc
push
add
inc
pop
aaa
push
mov
inc
push
inc
shrl
xlat
nop
test
mov
cmp
rorb
mov
ljmp
je
xchg
cmp
cmpsw
popl
incb
aam
in
nop
mov
xchg
loop
jae
dec
in
pop
mov
popl
mov
jl
pop
mov
jg
pop
jno
jecxz
mov
mov
ret
pop
stos
fimuls
in
and
fidivs
fwait
lds
sub
jg
or
jno
rcl
and
mov
jae
or
sub
sbb
jb
or
adc
sub
push
cld
jecxz
jle
mov
jl
imul
adc
mov
dec
sbb
inc
out
dec
cmpsb
and
push
andl
jo
pop
adc
cmp
ret
int3
addb
aaa
dec
or
scas
in
dec
in
jns
sub
and
cmp
mov
test
add
fsts
push
mulb
test
mov
in
aad
inc
orb
aam
movsl
or
fisttps
adc
cmp
enter
pop
mov
add
es
pop
shl
dec
xchg
push
mov
lahf
adc
jo
pop
adc
add
and
insl
mov
insl
fidivrl
movsb
cmp
insb
pop
mov
sub
mov
pop
jno
sar
push
push
cmp
push
jo
pop
adc
mov
aas
mov
cmp
xchg
in
std
cli
subl
dec
cmp
adc
push
adc
mov
lcall
xor
xchg
fisubrs
adc
adc
push
negb
adc
mov
movsl
int
cli
cmc
inc
ret
or
movsl
dec
test
scas
enter
dec
pushf
mov
add
fildll
addb
aam
adc
jne
push
jnp
mov
lods
pop
movsl
sahf
or
mov
sti
xor
pop
sub
test
fimull
xlat
cmp
or
cmpsl
cli
test
sbb
iret
ss
incb
add
or
xchg
stos
jo
pop
adc
and
mov
fsubrl
dec
sahf
cmp
int
scas
clc
pop
jmp
fs
scas
mov
pop
push
jecxz
dec
sub
dec
aas
aas
js
lahf
mov
add
imul
adc
sub
mov
and
sbb
scas
loopne
sahf
adc
sbb
jns
cmp
xor
stc
push
inc
andb
mov
leave
rcr
aad
loope
jae
and
dec
cmp
insb
mov
sub
push
fcoml
push
fmuls
jnp
jbe
cmp
je
push
dec
xchg
ds
cmc
sub
cmc
xor
pop
pop
repz
mov
xchg
das
pop
test
popf
pushf
lret
test
add
es
cld
fsubl
adc
add
imul
fdivl
fwait
imulb
sbbl
push
hlt
mov
mov
sub
jg
jge
add
jnp
rorb
mov
jp
ljmp
mov
mov
in
mov
xor
and
xorl
pop
sbb
cmp
into
int
mov
sub
dec
xchg
push
mov
sub
hlt
mov
scas
jne
iret
adc
scas
xchg
mov
lds
pop
mov
push
idivl
pop
int3
mov
outsb
sub
pop
add
dec
jne
mov
je
adc
pop
pop
ds
xor
cli
adc
sbb
aam
cmp
sbb
fwait
in
std
test
mov
stos
cltd
cmp
jb
and
int3
pop
mov
roll
pop
add
out
call
int
inc
ds
out
mov
lea
xor
pushf
jbe
push
adc
iret
mov
push
adc
leave
pop
lret
jo
pop
adc
xor
iret
push
add
jo
out
pusha
loopne
push
loope
or
rcrb
jb
mov
or
cmpsl
sub
iret
push
jo
pop
adc
loope
jmp
jbe
sbb
jecxz
jne
or
sbb
jno
push
popf
and
or
xor
shlb
add
mov
adc
inc
and
repnz
push
push
jg
add
add
scas
pop
out
test
insl
fimull
rolb
pop
cmpsb
orb
dec
in
enter
aad
jbe
cwtl
outsb
cmp
or
test
je
out
sbb
adc
push
mov
adc
cmp
or
aam
lds
adc
xor
imul
adc
dec
loopne
andl
imul
mov
push
cmc
mov
cmp
xlat
cmp
shll
into
pop
mov
inc
outsl
fistpll
test
add
cmp
dec
js
jae
adc
xor
jl
and
lea
xchg
pop
popa
out
xchg
push
lock
mov
and
jge
int3
mov
in
ljmp
and
ja
clc
bound
pop
adc
imul
lods
jg
push
ljmp
cmp
jnp
sub
mov
push
adc
inc
pushf
fistpll
or
mov
stos
push
movsb
pop
push
dec
dec
xchg
push
xor
sbb
mov
jo
add
pop
ljmp
xor
adc
mov
sbb
outsl
enter
decb
test
and
loopne
dec
xchg
sub
fisttpll
mov
jne
outsb
ficoms
inc
inc
cld
add
push
sbb
push
adc
arpl
outsb
dec
je
jb
lret
stos
jnp
cld
ds
push
xor
outsl
mov
imul
scas
nop
dec
pop
or
push
fadds
jno
adc
push
push
add
pop
stos
lods
test
mov
and
test
test
cmc
arpl
gs
dec
dec
testl
mov
xchg
insb
aaa
pop
xor
pop
cmpsb
inc
cmp
int
jnp
xor
adc
loope
insl
lret
add
pop
xchg
sub
mov
jo
or
pop
int3
loopne
notl
adc
sub
jno
adc
fcomps
mov
insl
test
sub
jge
sbb
xlat
rcr
ljmp
xor
jp
jl
sbb
xor
call
movsb
push
mov
mov
push
aas
sbb
push
int
cwtl
inc
push
repnz
int
fistl
and
rolb
add
fs
push
or
mov
les
lock
pop
aas
call
loopne
clc
andl
adc
inc
sub
inc
pop
pop
and
loope
mov
cli
hlt
jle
add
pop
addr16
cmp
xchg
cmp
movsb
movsl
cmc
sbb
push
jae
nop
xchg
push
adc
pop
lock
dec
xchg
mov
xchg
push
adc
sub
inc
push
fnstcw
adc
mov
xchg
jl
les
adc
adc
mov
repz
mov
or
adc
or
push
enter
push
outsl
mov
or
jecxz
enter
pop
pop
loope
icebp
stos
mov
repnz
subb
add
ds
jg
mov
sub
sbb
or
rolb
cld
jo
adc
out
xor
popf
cmp
jecxz
in
std
imul
mov
jg
fs
lea
inc
fstp
shl
xchg
test
adc
jb
xlat
fs
sbb
outsl
pop
mov
mov
lds
pop
or
mov
adc
aas
pop
xchg
int
and
xchg
fs
sub
inc
xor
nop
addr16
adc
jle
nop
mov
pop
adc
gs
adc
icebp
xchg
adc
dec
les
adc
dec
dec
les
adc
sub
fiaddl
dec
adc
leave
gs
loop
push
lods
roll
iret
xor
jmp
and
test
cli
cmc
inc
mov
in
fdivs
sub
dec
dec
sbb
outsl
sbb
jge
sub
jno
jo
pop
adc
lods
mov
mov
in
xchg
andb
call
sub
mov
in
rcrl
cmp
adc
je
pop
adc
adc
pop
mov
je
pop
adc
and
xchg
sbb
jmp
test
push
hlt
or
pop
jo
pop
adc
pop
mov
shll
push
mov
aam
sbb
dec
movsl
and
sbb
inc
push
add
cmp
sbb
insl
jecxz
jns
mov
pop
adc
lcall
xor
call
sahf
xchg
and
lods
pop
int
shll
lea
jl
jb
mov
test
inc
dec
cmp
cmp
sub
push
sub
dec
mov
call
push
vmovss
and
add
cmpsb
or
xor
fstl
faddl
adc
insl
fistpl
sbb
push
lahf
add
and
adc
add
jno
adc
aad
push
test
pop
adc
icebp
or
mov
hlt
jmp
xchg
mov
outsl
jns
mov
mov
faddl
adc
insl
inc
sub
movl
mov
mov
out
dec
andb
push
outsb
push
or
sbb
fidivrs
stos
mov
fsubp
jmp
lods
add
mov
sbb
adc
cld
jo
adc
imul
xor
add
in
nop
shll
pop
lods
enter
xchg
jo
pop
adc
aas
inc
push
inc
incl
jns
icebp
xor
mov
shlb
xchg
xchg
jmp
mov
orl
pop
adc
sub
test
adc
scas
in
mov
popa
or
cmp
push
adc
mov
push
adc
outsb
inc
push
pop
pop
sbb
mov
test
xor
jae
adc
lcall
lahf
incl
push
sbb
pop
lods
jae
adc
gs
ret
in
sbb
test
adc
rcl
rcll
xor
imul
leave
clc
lods
jae
adc
fsubs
cmp
mov
icebp
int3
xor
ja
int3
adc
pop
adc
and
mov
shll
pop
test
cmpsb
sarb
jno
mov
test
or
pushf
scas
leave
scas
pop
mov
in
jmp
pop
xchg
sub
aad
mov
daa
dec
dec
inc
xchg
add
or
mov
push
mov
shrb
roll
or
repz
add
and
iret
in
fisubl
cltd
mov
jno
shlb
push
test
flds
jno
daa
cld
adc
aaa
in
push
mov
bsr
push
adc
ds
arpl
or
adc
in
jne
pop
push
imul
or
arpl
pop
lret
jo
pop
adc
xor
iret
push
add
jo
out
pusha
loopne
jl
ljmp
stc
sbb
lret
les
pop
inc
lods
scas
pop
add
pop
sbb
jmp
sbb
repz
add
push
jp
pop
movsb
out
pop
lds
aas
mov
pop
shlb
movsl
xor
cmpsb
inc
or
adc
shrb
ljmp
and
insl
mov
lods
pop
pop
adc
mov
movsl
int
cli
cmc
inc
ret
xlat
or
push
jp
xchg
push
inc
dec
jp
lea
js
ljmp
stc
aam
imul
jle
inc
icebp
and
add
pusha
sub
adc
loop
push
lods
cmp
xchg
and
mov
pushl
fbld
inc
test
sub
push
repz
xor
cmp
divl
adc
jmp
adc
mov
mov
sub
daa
and
jl
mov
add
hlt
das
mov
pop
adc
fwait
test
mov
mov
addb
pop
or
aam
dec
pop
or
and
cld
jo
adc
ret
dec
mov
imul
ds
push
sti
outsb
fstpt
sub
insb
cli
sbb
sbb
ljmp
decl
and
hlt
test
push
pop
add
sbb
mov
sbb
outsl
enter
push
push
xchg
pop
inc
pop
dec
xchg
xor
jns
test
cld
push
or
outsl
xor
cmp
xor
outsb
insl
adc
lahf
test
pushf
cmp
adc
pusha
cld
sti
hlt
shrl
arpl
mov
xor
out
sub
stos
xor
pop
mov
jge
cld
push
mov
jnp
cli
mov
test
out
push
imul
pop
xor
rorb
adc
mov
push
ds
cmp
ret
sub
cli
aad
jne
xchg
lcall
cltd
das
aad
lea
sbb
adc
mov
fsubl
sbb
ljmp
dec
mov
xchg
adc
out
dec
movsl
add
mov
sub
in
fcom
aad
lret
cmpb
inc
jle
and
cltd
out
and
aad
mov
sub
mov
test
cld
push
or
je
cld
jo
adc
hlt
xor
leave
std
sbb
fcomip
pop
repnz
sub
xor
faddl
adc
mov
dec
push
in
add
inc
test
std
nop
mov
call
mov
adc
jbe
mov
repnz
movb
pop
shlb
mov
leave
mov
sub
dec
les
sbb
and
lods
jle
mov
sti
mov
movsl
cmpsl
jmp
mov
aad
das
push
pop
push
jge
xchg
enter
jmp
xchg
push
adc
dec
add
in
popa
pop
cmp
stos
cmp
adc
ja
in
pop
adc
jge
shrb
cltd
sub
fs
pop
adc
outsl
inc
arpl
mov
mov
icebp
hlt
sti
sbb
insb
inc
js
mov
adc
lock
adc
adc
mov
ds
stos
cli
or
stc
dec
mov
pop
call
clc
out
in
mov
sarb
add
in
in
or
pop
adc
pop
subl
decb
pop
adc
mov
adc
stos
mov
in
aam
xchg
mov
adc
es
mov
mov
dec
test
pop
sbb
pop
mov
hlt
mov
mov
or
loop
cltd
nop
loopne
inc
dec
push
sub
sub
or
std
in
add
xchg
in
inc
mov
ret
fwait
test
fs
add
sub
lret
adc
shlb
testb
nop
les
jo
pop
adc
dec
or
cmp
mov
xchg
mov
pop
movsb
xor
insl
push
pop
int3
mov
jno
sahf
sub
clc
push
in
dec
jp
and
inc
and
les
sub
std
mov
stc
aam
pop
pop
mov
dec
xchg
loop
jle
movsl
xchg
mov
or
movl
fcoml
or
sub
mov
add
pop
adc
dec
shll
sbb
add
icebp
cwtl
push
gs
sbb
dec
out
jecxz
sbb
fldl
movb
sub
je
and
test
jmp
test
movsb
pop
pop
out
dec
xchg
push
xor
es
pop
adc
out
jl
movb
lods
pop
mov
xchg
xchg
and
lcall
hlt
add
pop
adc
out
test
push
std
mov
shlb
test
dec
xchg
sbb
xchg
lds
xchg
mov
add
lock
faddl
adc
mov
dec
xchg
sbb
push
movsl
push
pushf
cmp
pop
jl
fistpll
add
inc
mov
xchg
push
test
outsl
sbb
dec
pop
negl
sub
or
mov
ret
adc
pop
cmp
ss
xchg
sub
xchg
and
jo
mov
leave
sbb
xor
push
xchg
fsubl
adc
pop
jl
push
lods
sub
jmp
pop
or
jge
lret
call
fldcw
sub
test
mov
add
int
add
dec
pop
sub
xchg
in
mov
negl
jmp
jge
xchg
mov
in
dec
jo
pop
adc
push
pop
and
sarl
fdivrl
imul
fsubrs
adc
insb
sub
mov
pop
push
mov
movsl
add
xor
shlb
adc
adc
pop
xor
add
testb
inc
out
fucom
adc
scas
add
cmp
add
cli
rdtsc
jnp
add
push
int3
xchg
and
push
adc
aam
sub
inc
inc
je
repnz
into
and
push
adc
pop
cli
dec
xchg
cmc
mov
loop
inc
inc
scas
inc
xchg
in
lcall
sub
push
in
mov
mov
sar
iret
test
call
loop
pop
mov
rol
daa
fdivs
dec
push
pcmpgtb
xchg
movsb
sbb
jbe
cmp
jmp
repnz
push
lods
negl
jne
lock
push
jecxz
fimull
in
push
or
adc
mov
jo
pop
adc
stos
push
dec
inc
pop
mov
or
xchg
push
mov
insl
fnstenv
fnsave
pop
mov
mov
adc
sub
mov
fisubl
add
pop
adc
jmp
xchg
lret
jne
push
test
mov
out
arpl
sbb
in
pop
adc
cld
sub
aaa
pop
outsl
cmp
push
out
add
or
xlat
xchg
push
roll
adcb
pop
iret
jbe
ljmp
lock
and
stc
call
cmp
add
adc
cmp
adc
sub
aad
jno
adc
dec
push
rorl
test
and
adc
cmpsl
les
adc
cmp
pop
xchg
lahf
les
jne
sub
xchg
sbbb
out
add
sbb
in
pop
mov
out
enter
fsubl
fcoml
add
inc
jnp
lods
mov
stos
pop
cmp
mov
test
pop
adc
adc
mov
jmp
std
movsb
ret
gs
js
adc
adc
jo
cmp
push
mov
xor
or
cmp
test
std
mov
aaa
sbb
leave
and
pop
std
imul
movsb
pop
dec
mov
pop
jno
adcb
pop
or
rcll
mov
outsl
stos
cmc
fs
std
mov
adc
mov
jo
pop
adc
test
mov
inc
adc
pop
adc
sbb
pop
mov
push
scas
xchg
and
mov
cmp
jo
mov
mov
cli
or
outsl
dec
xchg
and
lods
pop
int
and
sub
test
pop
adc
sub
pop
jno
mov
insl
fcmovu
xchg
sub
add
adc
adc
push
pop
or
pop
or
test
dec
dec
pushf
movb
or
mov
adc
dec
aas
and
pop
adc
push
pusha
dec
jmp
movsl
dec
pop
or
pop
cld
jo
adc
movsb
andl
add
adc
rcrb
adc
js
aam
incl
mov
push
mov
pushf
and
out
cwtl
clc
mov
fsts
or
sti
push
cld
jo
adc
js
mov
pop
adc
jp
dec
push
and
adcl
bound
ja
and
fcoml
pop
dec
mov
push
sub
test
push
jae
and
test
dec
or
cmpsl
shlb
mov
test
xchg
adc
or
leave
dec
cs
mov
inc
in
xchg
imul
cs
cli
xchg
xor
mov
mov
inc
out
stos
jmp
pop
insb
adc
push
adc
test
mov
out
and
inc
testl
xchg
imul
gs
jo
dec
movsb
pop
dec
addr16
std
sahf
insb
push
push
push
mov
add
aad
xchg
test
mov
repnz
sbb
mov
sti
shll
pop
adc
push
int
pop
or
out
test
xor
mov
push
or
aad
loop
xchg
xor
jo
pop
adc
out
aaa
jae
loop
adc
sub
push
mov
push
and
push
adc
movsb
sub
lds
add
mov
or
test
insb
push
xor
cmpsl
sti
dec
jb
inc
jecxz
loop
faddl
adc
push
fdivl
mov
cli
fdivr
inc
ja
pop
loopne
scas
push
pop
fidivs
ret
inc
add
lea
or
popa
fsts
adc
repnz
or
ljmp
out
jns
sbb
sub
mov
aad
gs
dec
out
jecxz
adc
ret
mov
sbb
push
mov
cmp
inc
les
or
fidivrl
jg
add
call
xor
xor
or
push
and
or
push
loope
lds
adc
adc
mov
js
jmp
pop
imul
movsl
xor
inc
rclb
pop
add
hlt
data16
or
sub
cmp
gs
mov
xchg
xor
jo
adc
aad
jo
cmp
sbb
pop
adc
insl
dec
fidivl
fs
fdiv
rolb
fcoml
sub
mov
stos
mov
inc
lcall
lea
xchg
jb
movsb
dec
test
int
and
lods
pop
mov
lds
or
fistpll
mov
in
adc
lds
repz
or
sub
int3
mov
dec
and
fists
or
cmc
inc
cmpsb
shll
cmp
mov
lods
cmc
jle
stc
jge
xlat
xchg
and
pop
adc
jo
pop
adc
pop
test
cmp
inc
or
adc
cmc
std
comiss
xor
and
lods
pop
mov
jl
sti
mov
std
push
xchg
pop
xchg
mov
daa
sbb
xor
jb
lea
adc
cmc
sahf
out
or
test
and
lds
aaa
sbb
js
addr16
mov
in
lods
mov
test
pop
xchg
and
lds
adc
sbb
cli
fists
or
cmc
inc
xchg
add
pop
adc
ds
cmp
pop
int
and
adcl
jg
hlt
jo
pop
adc
rcll
mov
int
xor
movl
push
lods
pop
pop
addr16
loope
mov
cmp
push
cmpsl
lds
arpl
aaa
outsl
stos
dec
call
pop
ljmp
std
dec
xchg
push
mov
adc
arpl
outsb
push
jns
addr16
mov
insb
pop
lds
adc
movsl
out
push
js
add
into
pusha
lds
adc
dec
ljmp
cmp
sbb
aam
push
clc
mov
std
pop
sbb
xchg
iret
adc
push
and
xchg
push
mov
adc
lods
shr
ret
test
sub
dec
fs
sub
lea
scas
inc
xchg
or
in
lock
adc
push
aas
inc
push
inc
incl
jns
pop
sarb
adc
sub
xchg
movsb
inc
xlat
mov
cmc
test
lret
dec
mov
mov
jb
rcll
addr16
fsave
mov
add
mov
arpl
iret
je
add
in
ja
fxch
jo
pop
adc
loopne
dec
stos
and
mov
testb
push
int
jmp
or
or
add
adc
mov
sub
movb
fsubrs
push
mov
adc
jg
aad
shlb
xchg
sub
mov
or
imul
sub
and
adc
pop
push
inc
mov
jp
int3
or
cld
sti
jecxz
add
and
xchg
mov
add
pop
adc
divb
fbld
xchg
stc
notb
sub
mov
and
dec
in
pop
fidivl
scas
repnz
mov
or
daa
fldt
js
mov
cld
repnz
cmpsl
mov
xor
inc
and
mov
jo
pop
adc
pop
xchg
fs
arpl
mov
pop
sbb
mov
push
mov
adc
cli
test
incl
std
push
push
mov
ret
push
into
fwait
cmc
aam
vandps
xchg
sbb
jno
jecxz
rclb
cmp
xor
mov
push
loopne
lcall
mov
rorl
and
pushf
aas
pop
xor
movsb
push
rcll
insl
dec
inc
push
fst
shlb
adc
jno
test
repnz
loop
pop
jae
faddl
adc
and
adc
sub
mov
nop
sub
add
push
push
lret
leave
out
push
mov
pop
xor
push
ret
jo
pop
adc
adc
icebp
test
aam
mov
pop
adc
enter
incb
and
adc
adc
xor
nop
fbstp
lea
jo
or
cmp
mov
test
out
arpl
stc
sub
in
jg
push
ljmp
push
dec
xchg
pop
jb
mov
les
adc
adc
or
lcall
jo
pop
adc
in
push
jo
pop
adc
out
ficompl
pop
sub
dec
mov
repnz
roll
add
flds
adc
push
xor
dec
xchg
pop
adc
dec
mov
mov
lods
inc
adc
push
push
test
cltd
sub
or
xchg
outsb
stos
nop
and
add
pop
std
outsb
fcoml
add
push
jp
lods
mov
stos
fdiv
cmp
mov
sub
dec
pop
or
icebp
add
adc
pop
pop
or
cwtl
outsb
pop
push
outsb
push
pop
or
aam
pop
or
stc
mov
rorl
or
or
ljmp
adc
loop
jle
movsl
xchg
mov
mov
nop
and
push
or
jo
daa
xchg
xchg
iret
sbb
push
adc
xor
xchg
and
or
xor
pop
push
inc
pop
into
xchg
and
loopne
pop
xchg
sub
int3
add
ss
sub
or
in
jns
sub
xlat
cmp
dec
xchg
xor
lret
sub
sub
push
out
and
push
call
rcll
in
push
scas
pop
mov
or
fstpt
push
sub
fcoml
insl
jo
pop
adc
shrl
js
ret
dec
mov
xchg
jmp
fdivrs
aas
mov
xor
negb
iret
pop
mov
lret
add
ja
call
mov
push
mov
or
inc
into
sub
push
fadd
push
adc
adc
popa
mov
imul
inc
or
adc
pop
fdivrl
mov
add
sbb
sbb
inc
mov
in
push
lods
in
test
je
mov
mov
xor
mov
ds
inc
pop
mov
xchg
jmp
push
xor
ffreep
dec
enter
adc
add
mov
sub
call
add
mull
movl
jns
stos
mov
mov
mov
xchg
hlt
jmp
cwtl
push
dec
inc
xor
dec
and
loopne
inc
add
xor
fwait
push
mov
pop
sbb
push
adc
xchg
rcrl
xchg
and
xchg
fwait
rorb
dec
add
mov
fs
shlb
jo
pop
adc
add
mov
dec
cld
pop
xchg
add
pushf
rcrl
adc
cmp
out
cmp
adc
icebp
loope
sub
arpl
cmp
cld
es
mov
pop
scas
and
js
push
out
rcrb
cmp
push
mov
sbb
adc
sbb
mov
fmuls
add
stos
mov
sub
push
cmp
inc
fldenv
xlat
insl
test
lea
add
sbb
ret
and
push
adc
mov
mov
pop
xchg
andb
jp
and
ljmp
pop
gs
fwait
jbe
mov
push
in
hlt
dec
orb
pusha
rorl
or
mov
leave
mov
sub
daa
xor
js
add
pop
jle
inc
sbb
pop
adc
push
adc
daa
mov
enter
or
sahf
sub
sub
jno
std
push
out
and
dec
mov
dec
imul
jnp
cli
cmc
sahf
scas
lcall
lea
cmpsl
cmp
xchg
dec
mov
imul
test
movsl
std
cli
jg
mov
xchg
scas
mov
pop
jbe
pop
jbe
sub
jo
pop
adc
and
fistl
cmp
mov
and
add
ret
cmp
lea
sahf
js
xor
push
ret
xchg
movsl
dec
ds
cmp
and
nop
aad
arpl
imul
stc
aam
xchg
nop
ret
push
sbb
loope
pop
aaa
cs
pushf
cmp
inc
test
pop
add
pop
push
dec
loop
mov
out
sbb
cmp
imul
adc
std
and
adc
push
adc
xchg
jmp
adc
es
es
cwtl
push
adc
in
mov
adc
push
cmp
pop
adc
xchg
and
test
cld
cli
cmc
inc
aam
movsl
movsb
mov
pop
jne
push
and
dec
lret
xor
outsl
fildll
dec
cwtl
push
adc
ljmp
sub
add
ret
sbb
jo
lahf
sti
push
int3
aad
add
test
lods
fnstenv
pop
dec
dec
scas
cld
add
and
add
sbb
add
mov
jns
adc
or
or
inc
mov
jp
mov
sub
or
mov
mov
pop
je
pop
test
cmp
push
push
cmc
sub
push
addb
fbld
pushf
push
mov
adc
cli
cmpsl
shlb
or
or
lods
and
adc
pop
adc
xchg
in
cld
or
and
sbb
inc
xor
je
sar
mov
scas
mov
push
mov
rcrl
and
loopne
fwait
xchg
jo
push
rcrb
sub
mov
cmp
inc
mov
repz
ffreep
mov
loope
mov
jge
jb
inc
jae
test
mov
jbe
lcall
and
ror
sbb
dec
push
loopne
int
into
sub
lds
fsubp
mov
nop
aas
or
enter
sbb
xlat
movsb
lret
pop
cmc
pop
lret
jl
lret
cwtl
xchg
int3
addr16
in
sub
or
lret
sahf
sub
in
lock
in
pop
stc
lods
data16
and
stos
mov
push
pop
popf
icebp
fisubrs
fildll
xor
daa
popf
mov
stos
xor
xchg
jns
adc
fmull
sub
sbb
dec
xchg
add
adc
fwait
test
inc
add
out
shl
pop
shlb
jo
test
pop
pop
mov
xor
or
in
cmc
pop
out
divb
pop
hlt
mov
sub
push
mov
lods
scas
mov
xchg
jl
xor
fnsave
push
push
shrl
push
mov
dec
ucomiss
cmp
adc
pop
dec
test
sahf
inc
mov
pop
iret
gs
lea
inc
lds
adc
xor
cld
push
dec
cwtl
push
adc
das
hlt
inc
scas
xchg
or
daa
or
insl
cld
mov
ret
lcall
loopne
insb
dec
or
stc
repnz
mov
dec
push
xchg
or
mov
daa
mov
mov
lret
cmpsl
add
aaa
jnp
or
or
mov
xor
push
adc
mov
mov
fwait
pop
scas
fsub
dec
adc
adc
pusha
cli
pushf
pop
mov
pop
fstl
add
fcoml
add
add
es
xchg
ja
aad
sti
aam
push
sub
xchg
push
out
test
mov
std
push
orl
pop
int3
dec
xchg
cmpb
sarb
xchg
cmp
ficompl
pop
aas
stc
movsb
int3
sbb
movl
pop
cmpsb
dec
xchg
pop
dec
xchg
scas
mov
mov
in
fwait
adc
inc
shr
pop
xchg
cmc
adc
loop
mov
fwait
std
push
out
push
sub
cwtl
mov
aam
js
mov
mov
mov
outsb
adc
push
popa
push
mull
jo
iret
add
ret
mov
cmp
mov
out
xchg
dec
xchg
push
mov
rorb
cmp
adc
enter
notb
cmp
mov
push
cmpsl
adc
jo
cmp
adc
add
movl
loope
mov
fsubrp
scas
adc
push
fidivrs
pop
negb
scas
cltd
lods
pop
mov
fnstsw
pop
loope
and
popf
inc
jbe
aaa
jnp
int
decl
sub
fmuls
sbb
pop
in
hlt
mov
jae
repnz
push
add
shlb
inc
push
cli
test
sbbl
out
les
repz
xor
out
pop
add
or
sahf
and
aas
das
fisttpll
aam
and
cmpl
sbb
loopne
add
add
add
sub
fisttpll
mov
cmp
aad
nop
sub
test
xlat
ret
loop
shl
xchg
fbld
jnp
cmp
pusha
fisubs
jbe
jnp
push
xchg
fcompl
mov
mov
jbe
rolb
adc
inc
out
dec
insb
stos
out
mov
mov
andl
mov
mov
cltd
aaa
pop
fimuls
lea
lods
ficoms
mov
lea
push
xorb
dec
cmp
cmp
stos
aad
daa
push
ficoms
xor
imul
inc
push
lret
cmp
pop
mov
je
sub
mov
out
sub
movsb
popf
jge
outsb
lahf
cs
mov
outsb
add
jns
fs
or
pop
push
ficomps
jmp
inc
imul
add
pop
adc
hlt
jb
lods
fnstenv
adc
cmp
adc
call
sbb
jbe
jmp
stos
fistl
pop
rclb
push
scas
das
add
xor
inc
push
jns
push
or
add
pop
stos
in
cmp
adc
sub
mov
loop
pop
dec
mov
xchg
lods
add
sub
mov
xchg
jecxz
xchg
mov
or
pop
pop
loope
icebp
sub
enter
push
add
insl
xor
stos
jbe
mov
xchg
fxch
sub
fstpl
mov
mov
ss
aam
in
pusha
inc
push
mov
xchg
daa
inc
rolb
adc
xchg
pop
add
sti
ja
cmp
xor
or
in
pop
outsb
sub
popa
add
in
mov
ds
jmp
adc
scas
aas
inc
mov
inc
stc
in
mov
push
adc
cmpsl
in
mov
sub
dec
stos
xchg
insl
adc
faddl
adc
dec
faddl
adc
xchg
mov
or
mov
bound
into
push
ret
sahf
push
mov
cld
xorb
stc
std
pop
jg
inc
or
adc
xchg
push
test
imul
adc
adc
sbb
pop
adc
or
and
loope
inc
xor
dec
pushf
mov
insl
lods
push
sbbl
or
insl
fidivl
sahf
cmp
adc
ret
insb
pop
mov
js
sahf
lods
loope
sahf
inc
sub
aam
push
xchg
mov
mov
jo
lds
mov
test
pop
mov
cmpsl
stos
fsubp
repnz
and
inc
sbbb
add
lods
shrb
adc
xchg
and
sbb
dec
cmp
inc
popf
push
push
loop
mov
push
xor
mov
sub
cmp
dec
push
cmp
std
in
adc
xchg
aad
out
cmpsb
out
push
push
fnstcw
das
je
add
adc
adc
push
pop
add
adc
and
outsb
xchg
scas
mov
xlat
test
outsl
sbb
inc
test
push
std
push
pusha
adc
sbb
mov
pop
and
xor
dec
pushf
cmp
test
sbb
jecxz
push
or
jmp
cmp
adc
sub
pop
adc
xor
or
push
push
push
adcl
enter
imul
add
insb
pop
hlt
jecxz
in
mov
stos
rorb
mov
dec
lcall
mov
sbb
pop
cmp
lret
add
pop
mov
sahf
fs
xchg
xchg
jb
and
or
push
dec
dec
lods
sti
mov
or
insb
push
push
sbb
outsl
push
and
xor
int3
mov
sub
sbb
jge
lea
or
es
cs
sbb
scas
jmp
ja
call
jge
push
mov
adc
mov
or
mov
sbb
or
scas
out
sub
sbb
out
jb
or
jbe
fwait
arpl
sub
stc
sbb
data16
sti
pop
and
fcomps
pop
inc
jnp
mov
push
in
in
aad
popa
dec
cmp
adc
cmp
add
add
xor
adc
jp
push
lret
fists
adc
add
push
fistl
ret
and
adc
shlb
out
call
lds
nop
mov
imul
jecxz
test
sbb
test
or
pushf
cmp
repnz
and
aaa
in
or
jbe
xor
pop
sahf
jge
push
sub
jecxz
jle
pop
gs
loope
popf
lds
ret
and
lods
add
push
mov
adc
push
fldt
jns
lea
lods
push
stos
sbb
aad
adc
dec
jmp
jge
clc
dec
loopne
lea
sub
call
sbb
lcall
jae
test
push
cmc
adc
xor
stc
inc
stc
mov
lret
mov
pop
jl
xchg
sub
pop
inc
mov
leave
insl
cmpsb
aad
icebp
ljmp
inc
nop
call
push
adc
aas
icebp
jecxz
mov
and
icebp
xchg
rolb
inc
jo,pn
loop
dec
push
inc
push
push
cmp
sub
in
pop
lahf
pop
fnstcw
ret
or
fmulp
xor
pushl
mov
cs
jg
aas
mov
cld
xchg
fsts
fcomps
cmc
bound
sahf
in
cs
adc
xlat
mov
fwait
or
movb
pop
popa
jmp
add
fisubs
insb
aas
lods
xchg
lock
add
popa
dec
ljmp
shrl
push
movsb
push
xlat
add
sbb
pop
cmp
cs
jge
add
inc
int
xor
mov
inc
jnp
stos
sar
imul
xchg
sub
push
scas
int
lds
pop
push
sbbl
or
insl
fidivl
stos
dec
lret
cwtl
in
sbbb
movsb
adc
repz
inc
aam
movsl
movsb
ret
pop
ficomps
xchg
push
insl
pop
or
sbb
faddp
or
clts
push
movsb
dec
in
aaa
xchg
lret
lock
scas
loop
jns
nop
and
test
scas
cwtl
lods
pop
mov
mov
add
ret
push
hlt
and
push
jb
enter
cmc
pop
adc
adc
jo
adc
stos
test
enter
repz
sbb
jae
lds
pop
jno
adc
push
adc
das
push
stc
fsubp
out
int3
addr16
jno
adc
lds
inc
js
mov
fsubrl
hlt
sti
sub
xor
cmp
test
dec
lea
sbb
es
in
arpl
fsts
adc
jg
cwtl
jae
adc
mov
pop
stos
add
inc
adc
mov
mov
pop
enter
lds
jmp
frstor
jecxz
insl
fcmovnu
hlt
jge
adc
enter
addr16
push
fucompp
mov
out
out
pop
mov
sbb
add
push
adc
push
aam
mov
iret
cs
add
sbbl
jg
adc
xchg
arpl
iret
sti
ja
mov
enter
add
out
inc
mov
fwait
pop
cmp
cmc
ret
sub
push
adc
dec
xlat
mov
test
lahf
pop
insl
cmpsl
and
mov
xor
and
pushf
inc
loop
in
or
mov
popf
imul
jle
repnz
or
or
leave
sub
in
or
and
dec
pop
idivl
xchg
into
mov
nopl
mov
push
fwait
add
fiaddl
decl
lret
add
mov
or
fidivl
adc
movsl
sub
cmpsl
add
jle
sbb
jno
pop
lcall
jmp
lret
dec
jno
arpl
nop
push
movb
in
data16
stos
jge
pop
ret
pop
test
dec
mov
leave
lea
aam
pop
pusha
sub
pop
inc
out
int3
rclb
and
mov
lahf
popa
push
and
xchg
xchg
test
test
inc
inc
out
push
and
add
mov
or
test
sahf
pop
mov
fnstcw
enter
cmc
fwait
call
ss
lret
push
sbb
inc
dec
xchg
and
sub
xor
ret
add
jne
add
pop
cmp
in
push
ret
sbb
insl
test
ffreep
ds
mov
loop
xchg
push
add
inc
dec
out
add
inc
leave
btr
gs
sbb
xchg
inc
mov
jle
and
rorb
pusha
std
mov
xchg
inc
mov
inc
jnp
jns
aad
mov
insb
test
movsb
push
fstpl
ret
mov
in
ficoml
or
inc
data16
add
push
sahf
jge
call
pop
xchg
mov
mov
sbb
stos
in
std
loopne
mov
and
sbb
lcall
aas
incl
mov
loopne
rcl
nop
cmp
data16
arpl
daa
xchg
xchg
hlt
subb
movsl
sbb
pop
je
inc
pushf
push
es
mov
sarb
daa
and
fisubrl
sub
adc
push
adc
or
push
cs
ds
loope
cmpsl
mov
cmpsl
dec
pushf
mov
or
adc
ds
movsb
xor
lahf
cmp
sti
dec
cmp
lea
inc
test
sub
push
adc
xchg
mov
push
clc
data16
rcrb
pop
ds
imul
xor
loop
ss
mov
fidivl
dec
inc
pop
je
filds
sbb
cmc
js
mov
push
es
sbb
aas
push
fidivrs
daa
cmp
adc
loope
enter
cmp
ja
orl
push
and
mov
loop
jbe
adc
cmpsl
dec
pushf
cmp
loopne
push
lret
dec
shr
imul
dec
mov
imul
lods
mov
cmp
jae
and
add
mov
and
and
out
pop
loope
lods
inc
ja
sti
lods
int3
sbb
leave
cmpl
sahf
fidivrl
rcr
push
cs
cwtl
test
or
shl
imul
jecxz
lods
mov
dec
fdivrl
add
das
fucomip
pop
aaa
lods
jnp
insl
fidivrl
jnp
repz
dec
pushf
mov
push
inc
subl
xlat
adc
mov
fidivl
aad
mov
lock
push
and
or
pop
mov
ljmp
fisubs
roll
int
xor
xchg
mov
and
cltd
mov
sbb
cltd
cmp
out
int
lcall
mov
push
leave
ja
in
outsl
push
add
lods
dec
adc
fs
adc
mov
adc
add
xor
sti
outsl
mov
push
cmp
sub
mul
out
and
hlt
xchg
sti
push
in
sahf
inc
xor
inc
ja
jae
sub
in
cmp
jo
sarl
lods
fiaddl
std
or
sub
cmp
mov
xor
xor
scas
pop
push
lea
pop
xchg
jne
push
int
adc
movd
rcll
clc
in
push
imul
add
lods
cmp
sub
bound
test
pop
and
imul
in
pop
inc
hlt
shll
xchg
stos
jae
into
sbb
and
dec
xor
inc
addl
jmp
push
and
pop
insb
fidivl
jne
push
cmpsb
mov
iret
adc
push
or
shlb
dec
test
adc
pop
in
dec
inc
adc
punpcklbw
lea
xchg
aam
add
xor
gs
jecxz
sub
mov
popa
mov
movl
sbb
adc
xchg
mov
or
enter
cltd
cmp
bswap
dec
xchg
arpl
inc
int3
in
popa
test
and
pusha
mov
and
xchg
mov
dec
inc
vaesimc
loopne
data16
jo
mov
es
mov
jmp
push
daa
and
aaa
mov
sbb
xchg
out
nop
out
jge
sub
jbe
insl
push
jle
dec
in
mov
movsb
push
out
pop
inc
dec
mov
add
addr16
mov
lock
imul
mov
insl
mov
push
dec
and
xchg
cmp
sub
fs
jb
fwait
push
inc
sub
jle
sbb
push
sub
jae
sub
addr16
orl
cld
data16
aad
adc
add
add
sti
mov
enter
or
mov
push
lcall
mov
popl
inc
mov
xchg
and
adc
in
pop
in
inc
test
lea
mov
stc
push
adc
mov
loopne
adc
pop
in
out
cmpsb
cmpsl
dec
jno
dec
fstp
mov
dec
cmpsb
sahf
sarl
push
repz
lock
mov
lahf
cmp
mov
add
aas
push
and
mov
fidivl
stos
pop
in
jae
dec
xchg
and
js
and
or
insl
shll
lahf
mov
mov
aam
stc
test
or
sahf
data16
divb
movsb
sbb
sub
scas
loop
mov
test
jle
cmp
pop
ret
push
js
ret
mov
aam
dec
rolb
daa
push
call
fcmovnb
add
fbld
sbb
lea
sbb
jno
lea
outsl
push
inc
or
jmp
fsubr
pop
jo
fbstp
and
test
jb
enter
jle
jbe
push
sahf
in
fnstcw
test
mov
fidivrl
lods
mov
cmpsl
sbb
mov
rol
fistpll
in
inc
cmp
push
pop
loope
adc
xchg
push
imul
arpl
push
lea
hlt
pusha
push
inc
sti
or
lods
dec
xchg
pop
jo
andb
dec
xlat
rol
mov
mov
mov
shrl
pop
mov
xor
pop
adc
pop
adc
repz
jno
roll
sub
xor
movsb
pop
cmp
mov
sub
mov
jne
mov
add
fs
pop
scas
inc
cwtl
push
stc
mov
mov
sahf
mov
cltd
xchg
xor
adc
adc
and
jns
lods
repz
dec
mov
mov
test
sub
push
test
mov
mov
jns
lcall
scas
test
sub
jg
jb
es
int
dec
xchg
mov
jns
loope
in
adc
jbe
int
sbb
movsl
xlat
lods
inc
push
jne
bnd
vmovlpd
inc
push
iret
add
xor
add
lds
jecxz
mov
adc
push
cli
std
nop
mov
call
rorl
test
jo
jge
xchg
or
push
out
pop
push
mov
and
fsubl
gs
and
popl
ret
movsl
dec
call
stc
arpl
in
orb
cmp
xchg
stos
xchg
cld
std
insb
or
jecxz
pop
loop
dec
xchg
push
sti
popf
pop
out
pushf
sti
adc
mov
jecxz
xchg
daa
int3
lret
in
and
sub
imul
out
adc
jge
sarl
sahf
rcrb
mov
sub
mov
cmp
adc
out
pop
sub
adc
lret
jecxz
add
daa
mov
cld
adcl
inc
jnp
mov
jle
rcr
int
js
test
xor
enter
testl
cs
std
adc
push
mov
add
mov
and
dec
pop
scas
cli
ss
xchg
cmpsl
xor
out
mov
pop
push
push
ret
inc
xor
js
push
hlt
fmul
andb
idivl
std
rol
lret
leave
sbb
lods
sbb
or
pop
mov
mov
add
mov
ljmp
sar
sub
adc
mov
mov
ffreep
inc
jne
cmp
pusha
sub
arpl
in
movsb
mov
mov
fsts
fistpll
lret
loop
xlat
test
sahf
mov
faddp
insl
pop
addr16
repnz
add
in
insl
cmpsl
dec
xchg
pop
enter
dec
push
aam
cmpsl
cmp
in
lret
dec
movl
call
dec
xchg
and
jecxz
cmp
nop
and
jge
add
sub
out
dec
test
mov
inc
mov
lea
inc
or
std
jo
cwtl
data16
pop
in
daa
dec
xchg
and
xchg
loop
popf
or
push
jl
incb
push
lods
pop
ss
mov
fnstsw
movsb
cmp
scas
pop
mov
jg
outsl
test
xor
mov
cwtl
push
adc
ss
fsubrs
rorl
inc
imul
xor
cmp
jno
sub
loop
pop
dec
sub
sub
mov
test
inc
pushl
dec
leave
jecxz
int
fadds
addr16
mov
out
outsb
push
fnstcw
das
or
xchg
pop
dec
ja
icebp
cltd
and
stos
add
inc
rclb
imul
cmpsb
sbb
mov
stos
lods
push
rorb
negl
lret
cmp
xor
pop
cmp
divps
and
mov
mov
dec
sti
cld
sti
aam
rcll
dec
sbb
aaa
push
cmp
cmp
mov
cmpb
or
insb
ljmp
aas
cmp
pop
in
and
mov
push
jle
pop
cmp
cmp
inc
sub
pop
js
mov
mov
pushf
je
cmpsb
jb
push
std
adc
sbb
lods
adc
mov
xchg
mov
push
jo
lahf
xor
test
mov
inc
mov
mov
mov
mov
or
inc
and
repz
stos
pusha
mov
lret
sarb
rcrb
jo
popf
mov
inc
jnp
ds
cmp
adc
pop
fistpll
test
fistpll
or
pop
dec
jecxz
mov
jne
sti
popf
mov
inc
inc
mov
ret
adc
mov
add
sbb
sbb
mov
imul
icebp
pop
mov
sub
call
or
jnp
mov
mov
adc
xorl
shlb
inc
popa
mov
pop
push
xchg
mov
pop
ja
sahf
xchg
pop
sub
jbe
hlt
add
inc
addl
stos
push
pop
mov
enter
fwait
sbb
pop
mov
or
xchg
lods
add
inc
push
cmpsl
adc
aad
loope
mov
sahf
pop
or
rclb
arpl
or
out
mov
adc
and
and
sbb
sbb
idivb
or
leave
xchg
inc
and
daa
xor
stc
std
push
pop
int3
enter
cmp
jae
in
call
bound
lret
test
lods
adc
arpl
cmc
cld
fcmovnb
sbb
sbb
imul
adc
and
fs
insl
movsb
divb
imul
mov
aaa
lret
xchg
add
mov
mov
push
adc
ror
pop
fcomps
xorb
out
mov
push
int
or
sbbb
pusha
lret
mov
scas
push
frstor
daa
into
sbb
aas
adc
js
jge
add
shlb
adc
loop
insl
pop
pop
inc
jne
enter
outsl
sti
mov
or
add
mov
repz
cmp
sub
rcrl
pop
mov
cwtl
lods
add
or
outsb
xchg
or
and
mov
das
sbb
fsubp
sahf
int3
rcll
lret
nop
mov
and
mov
sbb
dec
loopne
mov
dec
push
fs
lea
sbb
hlt
add
sti
outsl
call
stos
pop
fnstenv
mov
cld
and
dec
push
mov
mov
in
mov
xchg
inc
xor
and
dec
pushf
cmp
test
mov
sub
adc
ss
or
enter
and
lea
cltd
push
mov
cmp
out
adc
mov
mov
jbe
lds
popl
inc
cmpsb
adc
in
rorb
out
add
or
pushf
mov
cld
incb
dec
sbbl
dec
xchg
push
lock
and
stos
cmpsb
or
lea
dec
push
stos
xor
or
cwtl
outsb
xchg
ss
push
xchg
push
rorb
jl
insl
sarb
ret
mov
mov
adcl
jge
imul
stos
dec
pushf
cmp
test
test
int
xor
out
push
cmp
adc
das
pop
fdivs
enter
mov
xlat
ror
pop
ljmp
push
and
test
pushf
test
push
jns
repz
hlt
test
xchg
jne
or
push
lea
jle
in
mov
cmp
jmp
pop
jmp
in
sub
jno
sub
inc
div
mov
cmp
or
inc
lahf
push
out
std
leave
fstpt
mov
jnp
rclb
ss
add
subb
dec
out
mov
pop
push
inc
movsl
pushf
sbbl
test
jno
or
adc
ja
imul
mov
outsl
inc
movsb
stc
sbb
ficoms
mov
out
es
cmp
pop
push
cmp
adc
sar
push
movl
lock
aam
sub
adc
inc
repnz
adc
dec
aam
sahf
decl
push
shll
push
cmp
pop
loop
push
mov
lret
inc
mov
xchg
nop
lds
insl
mov
test
scas
xchg
lret
repnz
xlat
js
pop
std
es
lea
inc
aam
adc
or
paddw
aad
insb
shl
dec
scas
mov
shll
jmp
jmp
nop
and
mov
dec
xor
test
ds
xor
test
fidivl
cld
jmp
fidivl
into
iret
add
movsl
pop
stos
pop
mov
push
cld
lcall
imul
mov
or
mov
push
test
enter
pop
std
xchg
pop
inc
mov
mov
in
enter
int3
hlt
mov
jmp
pop
daa
xor
cli
cld
andl
add
lock
xchg
cmp
mov
scas
inc
xchg
arpl
push
or
sub
jmp
adc
jle
xor
dec
pusha
mov
sub
xchg
es
ret
mov
out
xor
xchg
rclb
xor
cmp
cmpsb
cmc
sarl
imul
lea
jmp
insl
adc
pop
inc
sahf
clc
and
cmp
adc
add
and
enter
lea
cs
lds
mov
xchg
jno
mov
sbb
arpl
inc
es
add
movsb
pop
hlt
scas
xor
das
dec
and
aam
jg
shll
push
das
and
inc
xchg
and
mov
repnz
out
and
cmc
pop
mov
in
into
loope
test
scas
mov
pop
addr16
je
test
aaa
sbb
ljmp
outsb
loope
shr
lds
int
mov
xchg
adc
mov
sbb
jbe
cwtl
outsb
ljmp
insb
fidivl
cmpsb
mov
xor
fwait
cli
and
int
mov
loop
fildll
push
js
lahf
dec
imul
pop
mov
stc
jge
xor
add
in
in
scas
dec
xchg
pop
enter
adc
cmpsl
cmp
fistpll
jp
xchg
push
decb
lret
lock
rcr
dec
pushf
dec
jne
push
js
mov
incl
sub
sbb
ss
mov
shll
popf
dec
mov
test
stos
push
test
inc
mov
dec
mov
pop
out
outsb
push
fnstcw
das
or
outsl
mov
cltd
and
gs
repz
push
inc
bound
add
imul
cmp
movsl
dec
in
xchg
cmp
sub
arpl
out
adc
lods
andl
inc
leave
and
incl
vandnps
into
cmp
xor
inc
sbb
sbb
cmp
mov
pop
push
and
out
in
outsl
cmpsb
mov
cmp
lahf
add
xor
cltd
xchg
mov
push
jecxz
sbb
out
mov
in
repz
shlb
or
jne
movsb
xchg
inc
test
cmp
arpl
adcl
insb
xchg
push
popf
shl
stc
pop
push
dec
enter
hlt
xorl
inc
inc
pop
cmp
shll
push
jecxz
xchg
icebp
cmpl
inc
repnz
ret
jnp
popa
aas
jp
aas
nop
scas
push
popa
cs
jg
mov
jne
mov
inc
dec
adc
pusha
adc
jg
orb
fldt
xor
xor
imul
jl
test
or
lret
into
cmpsl
xchg
jmp
rcr
inc
aad
inc
fwait
out
adc
enter
jle
xchg
add
icebp
fbld
imul
movsb
mov
mov
xchg
mov
xor
popa
fsubl
mov
and
pop
in
out
push
rorl
negb
enter
add
bound
rcrb
mov
pop
stos
fucomi
std
adc
pop
es
dec
out
add
std
repnz
push
stc
stos
push
xor
fdivl
lods
stos
push
aad
adc
xchg
add
popa
ror
lock
jns
sti
push
test
insl
xchg
std
aam
push
mov
inc
fwait
and
jp
lahf
pop
sub
cld
sub
pusha
mov
invlpg
roll
test
lds
push
dec
push
ds
mov
inc
mov
pop
out
jmp
mov
in
fwait
or
loope
popf
jle
pop
lds
dec
jmp
pcmpeqd
shr
xor
dec
push
sbb
mov
test
mov
or
ret
pop
xor
inc
jmp
ss
or
jg
aam
or
shlb
jmp
ja
sbb
adc
in
inc
mov
add
gs
xchg
add
mov
fdivp
stos
leave
adc
dec
out
adc
push
sub
sbb
stc
mov
or
movl
test
push
js
lahf
add
jb
push
mov
mov
jne
mov
loop
fldt
lock
gs
lock
test
inc
jbe
mov
enter
mov
jnp
dec
cmp
testl
loope
lea
mov
outsb
icebp
std
cli
mov
and
and
insl
pop
enter
insl
pop
addr16
repnz
movl
push
movsb
dec
sbb
cmp
sub
cmp
rcpps
in
lret
lds
adc
enter
push
jnp
sbbb
into
loop
inc
cwtl
adcb
inc
xorb
lret
loop
fldt
loop
pop
pop
dec
bound
pushf
dec
jne
push
js
mov
decl
cs
cwtl
cmp
aad
inc
push
mov
movb
inc
pop
enter
incb
sub
pop
jmp
pop
enter
push
sub
nop
shlb
lea
dec
inc
ljmp
sub
push
sti
cltd
push
lock
pop
cmpsl
dec
pushf
cmp
test
addl
sarl
xchg
xchg
adc
enter
fxch
stc
sbb
addb
cmpsb
adc
dec
xchg
pop
rclb
pop
int3
mov
jmp
rcll
push
hlt
jmp
fucompp
ljmp
jmp
test
sti
out
jne
sbb
add
iret
push
jmp
outsl
imul
movsb
adc
pop
dec
aaa
dec
xchg
push
imul
insb
ljmp
icebp
mov
out
dec
push
test
mov
mov
xchg
mov
ja
dec
xlat
es
addb
dec
push
adc
xchg
mov
push
mov
pop
sbb
push
repz
je
lods
push
cmp
adc
and
dec
and
pop
adc
jno
lret
mov
fs
sub
pusha
mov
int
mov
mov
nop
daa
clc
inc
test
add
push
jo
push
insl
arpl
sbb
cmpb
in
pushf
or
enter
out
mov
scas
xchg
jmp
or
xchg
cmp
and
gs
in
outsb
cld
lock
testl
push
test
or
int3
xchg
or
xchg
and
pop
ss
pop
mov
dec
cld
pop
mov
cltd
push
cmp
adc
and
aam
push
lock
jecxz
nop
pop
fstps
dec
addr16
dec
mov
enter
inc
sbb
fnstenv
push
cmpsl
or
xlat
stos
fucom
pop
iret
mov
out
lahf
sbb
xlat
push
out
and
repnz
scas
sbb
mov
daa
sarl
cmp
xor
int3
mov
es
adc
fsubp
jle
or
inc
nop
mov
mov
xchg
scas
xor
ljmp
jl
pop
inc
jl
pop
sahf
adc
fwait
dec
out
hlt
mov
pusha
das
imulb
lds
mov
les
stos
fwait
ja
mov
ss
and
sahf
fsubrl
or
jbe
add
xchg
shll
mov
gs
stos
jno
sahf
out
cmp
xor
pop
adc
push
jg
inc
add
loopne
sarl
fnstenv
push
lea
pop
mov
mov
scas
jb
enter
call
dec
add
sub
xchg
fs
mov
faddl
adc
mov
out
faddl
adc
inc
enter
adc
pop
jo
adc
out
dec
faddl
adc
test
cmp
push
adc
or
scas
and
les
sub
sarb
push
ss
and
cmp
mov
cwtl
push
adc
add
add
mov
xor
test
cmp
lea
test
adcb
cmpsl
push
and
and
in
push
or
dec
int3
push
xchg
pop
outsl
xor
xchg
jg
mov
insl
push
or
fnstenv
cmpsl
dec
pushf
shlb
jbe
mov
sub
out
mov
sub
push
pop
fdivl
xchg
push
adc
out
test
jg
std
mov
or
and
xchg
mov
jo
adc
mov
jo
adc
lods
add
ss
pop
fnstenv
cmpsl
dec
push
cli
and
inc
imul
xchg
jg
sbb
jmp
sub
mov
mov
outsl
push
fs
call
sahf
insb
push
and
out
xchg
popa
test
mov
cmpsl
sbb
aad
mov
popa
enter
decb
gs
movsb
dec
push
and
sarb
movsb
cmpsl
cmpsb
cmp
inc
dec
outsb
or
jle
call
dec
xchg
and
push
cmpsl
sbb
aad
mov
popa
stos
push
test
pusha
cmp
dec
ret
arpl
test
xchg
sub
adc
push
fiadds
stc
mov
cld
in
lods
pop
loopne
lahf
dec
cmp
jp
and
pop
shlb
stos
rcrb
push
fsubrp
pop
scas
or
orl
shlb
sbb
ja
dec
fmuls
lret
in
sbb
icebp
out
movsl
adc
sti
mov
daa
scas
das
push
xchg
aam
test
pop
add
sub
mov
ljmp
out
and
enter
fdivrl
xor
scas
std
dec
mov
pop
adc
or
sub
sbb
push
adc
and
mov
addl
lcall
mov
cmp
and
clc
mov
push
push
sahf
push
inc
mov
std
lret
aas
mov
insl
rclb
ret
int3
cmp
mov
or
mov
mov
fildll
sahf
xchg
push
nop
ja
jo
loop
sbb
pop
ja
pusha
push
stos
inc
int3
xchg
mov
xchg
jl
dec
push
and
cmc
sub
sub
cmp
nop
adc
adc
jge
jle
jge
pushf
std
ds
out
xor
imul
out
and
outsb
push
inc
or
xchg
xchg
dec
in
jnp
and
fs
or
cmpsb
dec
adc
mov
mov
stc
pop
movsl
or
pop
out
fnstcw
jmp
dec
xchg
sub
push
hlt
movsl
bound
dec
push
cmp
inc
or
jg
stos
shll
and
mov
cmp
dec
sbb
insb
outsl
push
xchg
stos
je
push
sysexit
mov
in
cmpsl
pop
sbb
mov
cld
cmpsb
pop
test
push
sub
mov
inc
push
push
out
ror
mov
scas
mov
les
aaa
dec
xchg
mov
sti
sbbl
jmp
mov
ret
int
cwtl
xchg
jmp
loopne
jo
sbb
imul
test
loope
call
lock
es
scas
es
cmp
lods
dec
pop
mov
insl
add
add
xchg
mov
adc
inc
test
mov
cwtl
andb
scas
pop
imul
jp
xor
test
push
in
and
in
xchg
push
mov
sarb
fdiv
xchg
and
sub
pushl
jecxz
add
and
std
cli
mov
or
imul
mov
pop
jno
sub
pop
mov
sarl
lds
std
pop
adcl
shrb
xchg
and
lods
pop
int
lds
dec
and
mov
rorl
adc
dec
xchg
pop
sti
xchg
and
push
cmpsl
sub
aaa
outsl
movsl
mov
decb
test
and
gs
mov
int3
inc
lea
js
jg
int
pop
data16
adc
sti
popf
sbbb
mov
sbb
lret
xlat
adc
xor
out
sub
push
adc
adc
xchg
pop
push
push
stc
sub
lods
fnstsw
inc
or
jne
test
scas
mov
add
cmp
test
rclb
call
sahf
es
or
out
pop
cmpsb
pop
mov
arpl
arpl
daa
jo
cmp
adc
and
inc
jle
pop
pop
lock
jnp
enter
icebp
lds
stos
cmp
add
add
adc
loop
xchg
pop
lods
jno
hlt
add
pop
adc
popf
inc
addb
std
rcrl
inc
call
xchg
cwtl
lock
adc
in
nop
ja
push
push
imul
shrl
pusha
pop
call
adc
pushf
cmp
ss
dec
jae
cmp
pop
adc
sub
or
add
in
pop
adc
fsubs
xor
or
push
add
ficomps
movsb
incl
adc
pop
stos
push
movsl
sbb
sbb
or
insl
mov
add
inc
roll
jecxz
adc
add
repz
adc
or
or
leave
dec
outsb
iret
cwtl
adc
sarb
sub
add
adc
ljmp
pop
adc
ljmp
stos
das
push
pop
loopne
or
push
jp
addb
sahf
inc
movsb
popa
xchg
cwtl
scas
sub
pop
adc
adc
mov
aas
cmpsb
jp
cmp
incl
adc
mov
pop
mov
js
or
xchg
cwtl
negl
int3
ds
test
or
lret
mov
mov
adc
out
adc
mov
loopne
jecxz
adc
incb
dec
add
pop
adc
cmc
sub
sar
pop
adc
rolb
jge
fscale
cmp
pop
adc
pop
ss
or
mov
sbb
xchg
and
jle
push
insb
in
or
stc
mov
xchg
or
pop
adc
daa
cmp
pushf
insb
cmc
adc
sbb
or
popa
lods
sub
cmovp
or
mov
enter
std
pushl
add
addl
hlt
pop
adc
enter
divl
xor
pop
adc
test
in
xor
adc
jb
fs
mov
int3
adc
pushf
sbb
dec
out
arpl
adc
and
arpl
pop
adc
outsl
in
push
add
incl
adc
jecxz
push
mov
test
or
push
mov
cmpsb
sbb
inc
or
adc
xchg
loop
xchg
jb
std
pop
adc
dec
xchg
add
push
repz
pop
lret
mov
in
test
add
adc
inc
scas
sub
fs
sub
or
test
ret
adcb
repz
or
lds
insb
mov
outsb
xchg
jo
pop
adc
jne
addb
mov
xor
stos
incl
adc
call
push
or
xor
out
stos
push
or
push
mov
enter
push
push
push
push
or
outsl
pop
mov
mov
mov
add
pop
or
es
cmp
lahf
outsl
imulb
mov
inc
pop
or
jge
push
lods
pop
loope
or
pop
or
cmp
pushf
cmp
sub
adc
pusha
pop
jmp
adc
movsb
mov
clc
mov
pop
adc
add
jnp
test
mov
push
inc
mov
ljmp
add
lds
adc
adc
cmpsl
fidivl
hlt
es
pop
and
push
aam
lock
pop
adc
jp
mov
hlt
hlt
jb
enter
shrl
filds
adc
push
lods
pop
loope
or
or
roll
xor
adc
add
jnp
fidivrs
or
mov
push
test
push
inc
out
pop
adc
addb
push
cli
faddl
fcoms
or
add
loop
add
cmp
incl
adc
enter
pop
jg
push
push
stc
pop
adc
sbbb
mov
mov
js
pop
adc
cwtl
pushf
cmp
aaa
inc
jae
pop
in
adc
adc
pusha
ds
loopne
adc
or
push
cmpsl
sbb
sbb
mov
imul
aad
jb
add
or
mov
push
test
pop
cltd
notl
sbb
add
add
roll
sbb
pop
adc
pop
fnstenv
iret
pop
imul
testl
test
js
cld
pop
adc
pop
fbstp
mov
pop
adc
fcmovnb
lcall
test
or
iret
addr16
push
aad
mov
or
adc
add
lock
lret
cmp
dec
inc
jns
loopne
adc
jbe
jns
cmc
xchg
repnz
int3
out
pop
adc
mov
pop
int3
mov
fidivrs
sarb
or
dec
push
add
and
xchg
mov
adc
out
hlt
out
sub
pop
adc
insb
push
push
pop
adc
pop
adc
in
test
xor
pop
adc
loope
mov
fldl
filds
adc
jp
int
ljmp
adc
jae
mov
aaa
call
adc
sub
or
add
idivb
and
hlt
repnz
adc
paddusb
fwait
sahf
inc
enter
adc
mov
test
push
sub
jo
lret
xchg
cli
pop
adc
les
add
push
hlt
ret
shl
adc
cmp
jle
into
push
loopne
adc
aam
aam
outsb
sub
pop
adc
adc
in
insb
in
pop
adc
cwtl
push
sbb
adc
sub
mov
or
mov
int3
shrl
adc
or
mov
cmp
or
mov
icebp
pop
adc
jno
pushf
sbb
loope
inc
popa
sbb
or
ret
stos
jno
push
mov
or
dec
add
xchg
push
xchg
in
pop
adc
xchg
arpl
mov
testb
add
ja
add
outsb
mov
inc
out
pop
adc
daa
jnp
pop
jno
std
xchg
jne
adc
movsl
fldenv
add
sbb
je
or
enter
loop
adc
testl
cmp
lret
lahf
loopne
pushf
or
adc
loopne
pop
aas
pop
xchg
lods
or
pop
adc
and
es
pop
adc
add
repnz
out
jbe
push
loop
stos
sub
pop
cmp
or
cmp
shlb
into
dec
inc
movsb
mov
jo
pop
adc
add
xor
mov
aam
lods
jno
hlt
inc
lock
adc
mov
addb
std
rcrl
pushf
testb
fidivs
fidivl
xchg
in
sti
pop
adc
in
nop
ja
push
push
imul
or
ds
push
or
cmp
dec
pushf
cmp
in
pop
adc
or
in
push
or
aad
push
lock
push
add
add
add
ret
js
jl
or
mov
insb
fidivl
iret
movsb
out
pop
adc
call
push
insl
pop
loope
adc
cmp
xchg
or
add
cmp
lahf
outsl
notb
call
bound
push
lods
or
mov
pop
adc
movsb
mov
sub
add
xor
mov
aam
lods
jno
hlt
sbb
adc
dec
inc
addb
std
rcrl
push
push
or
fiadds
fidivl
xchg
xchg
or
adc
in
nop
ja
push
push
imul
and
ds
pop
or
cmp
sbb
ret
dec
dec
ljmp
sub
push
in
fsubr
pop
adc
add
mov
push
cmp
pop
adc
lock
add
ret
js
test
pop
adc
cmp
testb
lea
push
insb
call
sub
or
pop
adc
jmp
insl
hlt
adc
fdiv
pop
adc
sub
dec
mov
or
mov
leave
les
pop
adc
push
add
inc
roll
or
add
test
in
adc
push
dec
mov
pop
neg
push
ja
out
pop
adc
sbb
inc
mov
lret
fcompl
or
pop
sbb
stos
inc
inc
jge
hlt
pop
adc
mov
je
cmpsb
or
pop
adc
into
pop
mov
pusha
xor
adc
and
int
adc
pop
adc
cmp
cltd
bound
lock
adc
push
push
push
add
in
pop
adc
addr16
in
jnp
push
lahf
or
pop
adc
xor
icebp
int
out
pop
adc
pop
int
inc
xor
adc
fildll
mov
test
cli
pop
adc
shrb
in
dec
or
enter
or
cld
outsl
adc
push
mov
cld
pop
adc
push
addl
mov
jmp
xor
push
jle
icebp
popf
je
repz
adc
test
addl
jl
testl
mov
mov
xchg
add
pop
adc
out
xchg
je
push
push
push
or
adc
scas
pop
mov
daa
arpl
adc
sub
and
les
or
adc
or
sub
push
mov
xchg
dec
xchg
pop
jb
xchg
sub
sub
jno
pop
adc
or
sbb
adc
adc
adc
cmc
xchg
sar
pop
jmp
rorb
push
or
divb
adc
push
mov
incl
adc
fnstenv
pop
adc
cmp
or
adc
pop
arpl
sbb
lods
xchg
add
cld
mov
pop
adc
push
mov
jl
fnstsw
cwtl
dec
adc
push
scas
sbb
xor
cmp
jnp
inc
inc
mov
push
mov
jl
lret
mov
inc
addb
mov
lds
scas
pop
cmp
dec
cmpsl
insl
lods
loopne
and
or
inc
es
rcl
adc
in
cli
cld
stc
rcrl
lcall
push
jge
add
addr16
and
push
mov
xor
xor
jmp
enter
add
rorl
dec
xchg
mov
hlt
fidivl
and
dec
out
lea
enter
push
push
ret
cld
test
fistpl
cld
mov
push
push
push
incb
scas
jb
enter
push
decb
addl
imul
or
jo
arpl
jnp
fst
cli
cmc
pusha
frstors
popa
xchg
and
lods
mov
out
pop
mov
mov
dec
pop
outsl
fildll
push
xchg
jo
daa
mov
sub
xchg
sub
push
int
adc
add
aas
hlt
ljmp
push
xor
popa
fisubs
scas
dec
lea
jmp
adc
jno
dec
xchg
cmpb
and
inc
cltd
arpl
and
mov
inc
mov
cmc
dec
pop
sbb
ficoms
and
cmp
test
mov
or
in
ljmp
and
test
xchg
sub
fisubrs
mov
lea
lea
loopne
std
outsl
or
repz
xchg
and
sub
mov
xchg
xchg
lods
pop
int
xor
insl
call
loop
and
add
call
xor
cmp
push
and
add
ret
jmp
or
mov
testb
out
jge
xchg
jno
xabort
xor
lea
pop
shrb
test
and
push
adc
pop
add
dec
sbb
adc
xchg
ljmp
daa
cmp
xor
mov
and
or
inc
mov
xchg
mov
and
mov
bound
xor
mull
jne
shrl
stc
imul
mov
cmpsl
push
pop
sbb
pop
push
cld
rorl
push
cmp
ljmp
sahf
leave
jecxz
mov
mov
negl
js
aad
lret
jge
dec
pop
sbb
ljmp
xor
out
xor
cmc
dec
sub
push
mov
jp
rcll
dec
mov
lret
mov
loope
in
in
mov
lret
cmc
daa
cmp
repnz
mov
xor
out
mov
lcall
inc
test
loopne
pusha
sahf
push
cli
or
push
ret
adc
xor
jnp
xchg
sbb
xorl
shlb
add
push
adc
cld
outsb
mov
cltd
jns
addb
sub
pop
cltd
scas
push
lea
mov
loope
arpl
bound
push
inc
fdivrl
xchg
push
stos
std
push
cmp
jo
xchg
es
sub
lds
lret
sar
std
in
adc
or
out
sbb
mov
icebp
xlat
cmp
inc
xor
xchg
mov
je
inc
xor
out
add
sub
add
xchg
jo
mov
xchg
fwait
mov
xchg
push
and
mov
mov
mov
shrb
add
int
sahf
stos
inc
pushf
jno
bound
stos
sbb
shll
pushf
std
pop
cmc
adc
mov
jne
sub
sbb
push
dec
pop
in
rol
adc
inc
popf
lds
adc
popa
add
adc
dec
push
xor
mov
rol
adc
jb
mov
int3
xor
or
push
rol
adc
cld
cmp
cltd
jno
cmp
cmp
adc
inc
cltd
addb
sub
adc
sub
mov
inc
lea
pusha
enter
push
pop
or
test
mov
push
or
or
outsl
shrb
push
push
cmc
fs
insb
push
in
stos
xchg
loopne
stc
xchg
sub
negb
je
pop
sbb
leave
jns
push
push
dec
mov
xchg
and
test
jge
sub
or
je
push
sbb
ror
dec
pop
pop
xchg
mov
push
sti
mov
or
shl
lret
movb
or
mov
adc
repnz
and
test
ficoml
pop
dec
stos
and
jae
js
sahf
call
bound
rcl
add
outsb
aam
aad
push
shr
out
cli
cmc
ljmp
cmp
loope
xchg
lret
sbb
jmp
or
sarb
pop
jno
sub
mov
pop
push
outsl
jae
orl
push
dec
xchg
push
sti
cmc
xor
or
push
fsubrp
pop
jl
insb
jl
adc
mov
jne
and
mov
cmp
dec
movsb
dec
push
cli
lret
push
adc
xchg
and
rcrl
xor
or
lods
mov
jno
adc
sbb
or
mov
pushf
pop
stos
and
jle
scas
jp
scas
gs
sbb
or
jmp
in
xchg
std
add
sbb
or
arpl
insl
dec
adc
pushf
insl
test
pop
fs
adc
fldpi
pop
xchg
cmp
lret
scas
adc
jae
mov
push
insl
loopne
add
mov
and
pop
fidivl
fidivrl
and
jmp
fldcw
sbb
loop
sub
xchg
push
mov
push
nop
or
cmp
fisubrl
sbb
leave
xchg
add
mov
xchg
xchg
rorl
xchg
fadds
sarb
gs
mov
imul
rorl
icebp
adc
lcall
js
or
pushf
lods
cmp
push
fcoml
or
out
int3
adcb
ja
jp
repz
mov
rorb
andw
or
movsl
imul
sahf
lahf
or
mov
mov
xor
gs
inc
inc
dec
and
sub
mov
sbb
and
addr16
xchg
fadds
movb
push
pop
mov
mov
dec
push
lahf
and
xchg
adc
push
scas
test
dec
fdivs
xchg
popf
dec
jne
xor
and
jl
mov
pop
push
popf
scas
pop
imul
repnz
add
daa
push
lcall
or
ficoms
lret
mov
pop
jne
push
incl
mov
inc
xchg
fnstenv
ja
mov
icebp
enter
sbb
add
jnp
and
push
inc
xchg
aaa
outsb
lea
ret
nop
arpl
faddl
add
add
xor
rcl
add
call
cltd
adc
dec
nop
call
inc
sar
andl
sbb
cwtl
xchg
ljmp
jecxz
mov
adc
mov
xchg
ja
mov
cmp
pop
in
xor
or
mov
cld
jo
adc
inc
sti
cltd
push
dec
lods
cmp
ja
aad
sub
fnstenv
jle
push
adc
cmpsl
jmp
xorl
lock
fs
or
stos
movsb
xor
push
dec
dec
gs
pop
fnsave
push
xchg
sub
adc
xorb
js
lea
stos
fimuls
mov
cwtl
data16
pop
sub
sub
lea
sahf
sbb
std
add
mov
push
bound
lret
in
push
xchg
popa
cmc
lods
pop
mov
cmp
mov
push
subl
xor
mov
aam
jae,pn
imul
or
pop
jmp
ds
xor
adc
sub
icebp
push
je
mov
aaa
sbb
add
adc
sub
fmuls
adc
pop
or
pusha
addr16
lea
aaa
shrb
xchg
add
add
push
pushf
repz
aam
insl
ficompl
out
lods
int
adc
lea
addb
outsb
aaa
hlt
ljmp
and
stos
pop
int
sub
cmpsl
dec
pushf
shll
outsl
dec
inc
or
mov
mov
pop
and
outsb
pop
sub
pop
mov
mov
mov
outsl
add
adcl
call
jecxz
adc
scas
mov
in
cmp
add
sub
and
loopne
dec
xchg
sub
xchg
mov
sbb
mov
or
jno
xchg
test
and
cmp
test
int
int3
fistpll
add
movsb
loopne
xor
jns
lods
pop
mov
mov
fdivp
fsin
cld
mov
test
scas
and
jnp
in
ljmp
jg
fnstsw
add
sub
dec
nop
es
ljmp
iret
dec
adc
jae
insl
loopne
add
gs
xchg
lods
shll
cmp
dec
xchg
mov
xchg
mov
mov
ljmp
pop
pop
out
add
pop
and
loopne
cs
imul
mov
cmpsb
sbb
int3
cltd
jge
in
stos
imul
sarb
pop
imul
rcrb
xor
inc
neg
lock
aad
jb
jl
xchg
shrb
mov
inc
jnp
cmp
push
add
test
sbb
je
mov
push
mov
loope
xchg
pop
or
mov
in
fisubl
pop
sub
cmp
xchg
mov
ljmp
insb
jno
mov
cwtl
mov
or
xchg
jnp
rorb
aad
mov
jp
out
dec
pop
aas
decl
push
jecxz
pop
or
fdiv
in
and
jno
adc
push
push
jecxz
outsb
stos
int3
leave
cld
lea
sarl
and
out
aad
push
cmc
les
jno
xor
test
sar
std
decb
popa
mov
imul
in
loop
sub
in
xor
adc
insb
add
fisubl
fistpl
dec
cmp
test
stos
pop
and
shrb
lock
in
push
push
cmpsb
pop
push
xor
push
and
xchg
mov
or
jecxz
xchg
popf
xor
sbb
and
mov
mov
add
jns
xorps
lds
mov
pop
adc
cld
jo
adc
loop
push
popa
fdiv
ja
xchg
std
mov
adc
je
and
ja
dec
push
push
sub
mov
mov
pop
cmpsb
movsl
sbb
xor
jb
out
mov
sub
int3
mov
push
jg
lea
jmp
insl
adc
inc
repz
xor
dec
pop
cmp
xchg
add
inc
cmp
out
pop
mov
mov
enter
jg
sbb
push
mov
xorl
call
fsubrl
xchg
pop
hlt
decl
cld
lea
stos
rorl
pop
add
add
push
pop
sub
pop
cmp
mov
xor
aad
inc
push
mov
inc
es
bound
fdivrs
sub
dec
pop
js
add
xchg
jb
mov
mov
ljmp
pop
cmp
lcall
ja
outsb
push
xor
adc
xor
inc
jge
xchg
and
test
stos
fisubrs
outsb
arpl
lea
add
mov
mov
popf
repz
fstps
fs
xchg
push
inc
dec
sub
adc
mov
mov
cli
cmc
ljmp
mov
pop
or
sub
mov
shlb
add
sub
cli
cmc
adc
aas
sti
fstps
mov
inc
imul
add
mov
popa
dec
cmp
push
lock
mov
out
jg
ret
cmp
rcrb
bound
bound
push
movsb
xchg
js
ror
clc
pop
inc
not
xchg
jg
js
lods
sti
fnstenv
pushf
inc
and
out
in
sarl
jg
mov
cmc
ljmp
insb
jl
adc
sub
mov
xor
jle
dec
mull
sbb
push
lods
pop
cmp
ss
stc
enter
testb
mov
inc
mov
xor
loopne
xor
add
aas
push
stc
popf
sub
dec
mov
shll
ficoml
call
mov
mov
dec
loop
pop
pop
repnz
fwait
ret
cmpsl
pop
es
add
sbb
mov
adcl
xor
mov
jnp
add
adc
lea
roll
sub
clc
repz
inc
pop
inc
andl
pop
add
or
mov
mov
iret
addr16
cltd
out
fstpl
ds
out
push
push
cmp
inc
adc
adc
xor
push
testl
adcl
dec
pop
pop
xchg
mov
sbb
jno
adc
adc
cld
fisubs
inc
test
loopne
push
imulb
insb
shr
mov
fs
push
and
cld
add
test
xchg
and
mov
rcrb
adc
insb
xor
mov
lret
ror
sbb
jb
cmpl
sbb
mov
fistpll
sbb
int
cmpsb
daa
mov
pop
adc
call
imul
sbb
jmp
ds
mov
pushf
jle
adc
push
ret
inc
pop
cltd
jecxz
out
mov
insb
aam
sub
dec
clc
pusha
subl
cmp
mov
add
jnp
rcrb
adc
stos
xor
negl
test
inc
aam
fsubp
loop
sub
push
or
stc
lret
dec
gs
fisubrl
aad
mov
fxch
sub
xchg
jl
add
dec
sbb
addr16
dec
push
lods
adc
out
sub
pop
adc
imul
cmp
xchg
cmpsb
xor
or
xchg
loope
jae
xor
into
cli
xlat
cmc
add
jg
pushf
push
in
in
inc
mov
or
push
jb
add
push
cltd
mov
adc
int
sbb
jp
icebp
jns
dec
sub
lock
je
sbb
in
inc
cltd
lods
push
sbb
mov
push
sbb
in
push
or
imul
cmp
aas
lret
dec
call
sahf
es
or
pop
fcmovnu
insl
mov
add
lods
pop
mov
nop
fbstp
push
or
cli
pop
cld
jo
adc
sti
cltd
test
or
push
test
sbb
cmpsl
mov
add
push
or
enter
cmp
mov
ret
shr
sti
mov
push
pusha
adc
push
and
lcall
addb
pop
mov
lds
xchg
and
mov
or
loopne,pn
sub
test
pop
adc
push
jl
jmp
sub
mov
subl
sub
xchg
jp
faddl
adc
sub
fwait
dec
pop
jl
out
popf
mov
add
adc
fsubp
cwtl
push
adc
sarb
jl
mov
loopne
push
adc
pop
cld
cli
stos
movsb
faddl
adc
fcompl
dec
sbb
and
mov
adc
push
mov
fcomps
pop
lea
lock
lea
fdivr
pop
pop
pop
std
xchg
push
movsb
out
xor
pop
aaa
lea
lock
add
sbb
lcall
push
pusha
adc
sbb
pop
inc
lock
xchg
sub
out
mov
rclb
aaa
outsl
lods
add
sub
ljmp
mov
mov
daa
add
pop
dec
je
pop
sbb
ret
or
mov
ret
movsb
dec
xchg
scas
pop
test
push
pop
push
enter
lret
push
inc
cmova
pushl
inc
jg
push
dec
mov
push
mov
push
outsl
pop
pop
cmp
sbb
mov
mov
mov
mov
scas
lcall
cltd
popa
js,pt
test
cmpsl
pop
pop
loop
and
call
out
fdivrl
push
add
cltd
xor
pop
cmp
cmp
adc
xor
scas
mov
movl
adc
aas
js
or
push
inc
sbbl
sub
jae
mov
pop
inc
stos
imul
mov
lock
add
fildl
mov
sbb
adc
fsubs
xchg
icebp
jl
rclb
pop
and
out
test
add
test
inc
and
inc
inc
les
or
aas
imul
mov
enter
ficomps
push
or
cs
jge
xchg
jbe
pushf
pusha
daa
out
mov
adc
or
outsb
push
dec
popf
jmp
xor
or
or
mov
jg
bound
or
mov
lds
adc
xchg
mov
fsubrs
adc
xor
outsb
sbbl
adc
push
notl
fbld
int3
fidivl
sbb
push
adc
push
mov
cmpsl
pop
xor
or
mov
or
xchg
sub
sbb
pop
cmc
out
sahf
cs
aad
int3
mov
adc
aas
mov
aam
jl
push
xor
cmp
mov
adc
pop
fistpl
sbb
inc
cmpsl
addr16
mov
push
adc
stc
push
mov
lock
add
adc
fldcw
adc
mov
inc
fdivrs
add
adc
arpl
push
adc
mov
adc
push
adc
push
adc
mov
cmp
sarb
sbb
sbb
dec
or
xchg
stos
lahf
push
xor
push
adc
mov
repnz
xchg
sub
je
jmp
aad
sbb
sub
and
dec
add
adc
lret
mov
push
cld
mov
outsl
mov
push
test
cld
dec
xchg
push
repz
add
push
jl
adc
jae
ljmp
push
repz
ret
dec
mov
int3
sarl
dec
nop
mov
mov
fcmovb
add
movsl
dec
out
pop
adc
dec
xchg
pop
in
clc
adc
mov
in
nop
and
int
pop
ljmp
pop
mov
or
push
adc
fsubrl
cwtl
lock
push
xlat
mov
aas
test
pop
adc
repz
pop
in
lahf
sbb
adc
stos
ljmp
xor
or
cmp
push
in
fisubs
push
imul
push
push
and
jne
ret
sahf
cli
movsl
dec
add
ss
and
ja
push
mov
sub
call
std
popf
iret
push
movsb
xor
cmp
push
movsb
faddl
adc
or
xor
lea
fucomp
scas
stos
sar
mov
cmp
and
mov
xor
int
test
es
std
movsb
movsb
faddl
adc
mov
jmp
pop
dec
adc
mov
pop
or
xor
pop
jbe
sub
or
popf
lods
sbb
out
pop
and
loop
push
jo
dec
call
push
rolb
cmp
fldcw
je
or
ficomps
lret
adc
sbb
xor
add
ja
pop
inc
add
sbb
leave
std
mov
fiaddl
mov
addr16
push
pop
sbb
xchg
push
push
xor
dec
hlt
pop
cs
ret
int
xchg
push
add
decl
shrb
outsb
stos
out
mov
imul
push
jne
mov
push
adc
leave
cmp
mov
ds
loopne
xchg
pop
jo
fs
ds
sarb
xchg
shlb
jne
adc
mov
xor
xchg
mov
mov
cmp
movsb
and
imul
aad
test
lret
sub
push
adc
shrb
add
xor
or
lret
sub
mov
xor
clc
cmp
add
cmp
cmp
jg
sbb
mov
push
inc
jbe
sbb
pop
sbb
test
xchg
adc
inc
lods
ljmp
sbb
lahf
sub
sbb
push
je
sbb
push
imul
xchg
cltd
lret
lods
ret
xor
or
lcall
std
sti
sbbb
sbb
mov
test
pop
xor
or
and
std
std
mov
xor
or
std
or
xor
dec
loop
xor
or
int3
imul
mov
sbb
rclb
inc
dec
xchg
push
mov
repz
xor
xorl
push
dec
scas
and
faddl
adc
sub
sti
aam
push
cmp
adc
sbb
dec
xorb
test
sub
fidivrs
popa
sahf
repz
mov
mov
mov
je
pop
adc
call
fsubs
pop
or
dec
fcmovnu
imul
lds
adc
inc
mov
pop
adc
mov
dec
pop
push
lods
lds
adc
sbb
sarb
outsl
mov
adcl
lds
add
pop
adc
shll
or
dec
leave
inc
add
test
adc
pop
or
popf
jle
xchg
insb
in
xorl
or
jae
aam
mov
jge
mov
xor
pop
xor
and
or
push
out
jl
add
add
inc
push
sbb
pop
outsl
jmp
lods
int
arpl
push
or
xorl
or
std
adc
jno
adc
enter
loopne
pop
xchg
loope
push
or
and
ror
cmp
std
xor
inc
push
fildll
pop
adc
lahf
dec
pushf
mov
insb
lds
adc
adc
and
sub
dec
pop
movsb
faddl
adc
mov
stc
sub
mov
mov
ss
mov
pop
or
lea
sub
or
js
gs
dec
test
inc
push
mov
in
xchg
inc
out
sbb
xchg
pop
jmp
adc
je
mov
addb
lret
pop
sahf
movl
mov
loopne
dec
cmp
adc
inc
cmp
pop
jo
adc
test
dec
sbb
fstl
adc
xchg
addr16
jae
adc
inc
or
rcll
jp
insl
or
cmp
in
test
nop
jbe
adc
aaa
sbb
xchg
and
adc
xchg
pop
stos
pushf
push
pop
outsb
and
xchg
mov
lcall
sub
jae
adc
push
mov
inc
sbb
push
sti
xchg
mov
cmp
jl
leave
nop
and
adc
mov
xchg
scas
dec
add
push
es
mov
cwtl
jae
adc
in
dec
ret
call
lods
pop
push
lock
aas
push
frstor
pop
pop
fdivs
and
xchg
fstl
jo
adc
scas
pop
mov
fidivs
mov
aas
sub
mov
fs
lcall
xorb
imul
ljmp
adc
pop
fdivrl
sbbl
adc
push
push
dec
in
adc
stos
scas
rclb
ud2
scas
adc
inc
cwtl
xchg
jmp
jg
pop
xchg
pop
jns
jbe
inc
inc
mov
idiv
jecxz
mov
pop
aad
test
adc
xor
idivb
adc
hlt
ja
mov
xchg
fimull
aas
and
movsl
pop
scas
test
add
ret
add
icebp
sbb
jecxz
add
mov
mov
pop
adc
push
xor
or
jo
repz
arpl
sbbb
jo
adc
cwtl
pop
in
jo
shr
loope
adc
in
sbb
and
fwait
cmp
lods
jg
push
dec
test
fwait
shll
dec
jmp
ss
arpl
xor
clc
jo
adc
rol
ja
sbb
lcall
jo
adc
sbb
push
mov
lock
adc
push
mov
mov
cmp
lock
mov
pushf
dec
add
daa
adc
jge
xchg
push
push
add
mov
les
pop
icebp
call
and
cs
sub
int3
pop
arpl
pushf
outsl
out
mov
movsb
fisubl
popf
lock
ds
pop
fs
inc
lahf
sbb
xchg
fimull
xor
int3
ficoms
sub
jne
js
inc
jne
mov
dec
lods
js
push
sub
inc
orb
and
xchg
add
fistps
mov
shl
mov
andb
inc
icebp
das
sbb
pop
adc
movsb
jo
mov
mov
sbb
fnstsw
or
jo
mov
or
xlat
mov
and
jo
adc
push
pop
add
jl
sbb
adc
stos
or
adc
mov
jno
adc
sbb
adc
jle
icebp
inc
in
addb
jo
adc
outsb
mov
sbb
xor
aam
add
push
adc
inc
jne
push
xor
jmp
jo
adc
xchg
or
add
inc
outsl
mov
xchg
ror
jl
incb
jb
or
add
dec
jg
jno
adc
outsb
icebp
enter
xlat
call
xor
dec
sahf
cmpsl
jb
pop
mov
test
xor
push
mov
cmp
or
stos
lods
add
jno
add
pop
adc
cmp
andb
pop
jge
mov
add
outsl
fists
shr
xor
out
pop
sti
xor
dec
pop
push
mov
movsl
movsb
jle
push
in
pop
pop
sub
mov
out
mov
and
xchg
push
push
psrlq
pop
nop
int
pop
lods
imul
sahf
add
jmp
test
and
add
stc
mov
jmp
outsb
fistpll
adc
jne
scas
pop
cmp
loope
gs
popf
push
cmpsl
dec
hlt
shll
enter
jp
push
push
loop
das
push
lods
rol
gs
jb
loope
gs
movsb
push
cmpsl
dec
pop
aas
aam
loopne
int
cwtl
sti
std
cli
bound
adc
adc
pop
push
leave
mov
push
mov
adc
cmp
push
xorb
pop
push
cwtl
outsb
mov
lcall
lcall
out
sbb
sbb
jo
mov
jp
sub
dec
xchg
and
adc
popf
mov
data16
fstl
ja
inc
rcrl
pop
mov
sbb
xchg
sub
and
push
fcmove
add
clc
push
inc
stos
pop
ds
inc
dec
xchg
and
fdivr
pop
adc
mov
dec
pop
mov
loopne
adc
fbld
xchg
clc
and
cmpsb
std
lods
push
fnstsw
jmp
adc
cmpsl
dec
push
cmp
subb
dec
and
cmp
lods
xchg
xor
add
push
aaa
add
add
sub
fisttpll
sub
xchg
inc
or
or
aam
bnd
jmp
sbb
imul
or
mov
push
adc
lcall
dec
mov
jae
adc
push
faddl
adc
adc
faddl
adc
scas
pop
faddl
adc
xor
jmp
out
jbe
xor
jne
push
jecxz
faddl
adc
pop
adc
cmpsl
int
mov
faddl
adc
adc
mov
mov
jle
mov
sbb
push
jne
pop
inc
jge
mov
mov
or
adc
test
mov
sub
repz
xchg
daa
adc
out
rolb
add
mov
adc
xchg
or
pop
lahf
cmp
adc
lock
jo
adc
js
pop
adc
jge
xlat
jmp
or
test
pop
adc
jae
add
adc
into
push
push
or
loop
push
cmpsb
incb
mov
xchg
fidivrl
faddl
adc
adc
es
pop
adc
or
xlat
push
pop
fwait
and
movsl
je
push
adc
xor
outsb
test
pop
adc
lahf
fs
push
jo
push
adc
push
test
loope
loop
std
mov
pop
adc
xorl
dec
xchg
daa
push
test
pop
adc
movsb
movsb
push
nop
idivl
adc
add
insl
outsb
jg
push
pop
stc
xchg
out
xchg
jl
pop
adc
jne
jl
pop
adc
cmp
sbb
adc
insl
divl
sahf
jecxz
jl
or
test
roll
sub
xchg
popa
fdivs
adcl
lea
aaa
movsl
jl
or
aam
daa
jl
or
mov
dec
and
aas
mov
cli
pop
adc
fst
jb
adc
adc
jno
adc
add
mov
add
pop
and
lods
mov
je
adc
pop
adc
outsl
add
add
xor
mov
push
adc
in
lcall
jae
adc
ja
add
pusha
jmp
pop
adc
fs
adc
js
push
adc
js
lea
xchg
jl
push
adc
adc
out
or
lods
scas
pop
xor
dec
and
cmp
adc
mov
and
jl
enter
call
cmp
push
adc
cmp
fistps
aaa
outsl
sbb
push
pop
inc
cmpsb
adc
dec
js
jae
adc
stos
mov
int3
addr16
push
adc
add
jno
adc
dec
xchg
sub
test
jl
push
les
adc
sti
xor
add
cmp
adc
or
jb
mov
sbb
adc
add
arpl
and
adc
adc
nop
and
pop
enter
sahf
jg
test
gs
xchg
movsb
mov
dec
jo
lahf
xchg
stos
xor
inc
adc
push
test
ret
imulb
mov
testl
jns
lret
orl
jmp
scas
shlb
sbbb
cmpsl
mov
fsts
pop
outsb
pop
xlat
mov
push
or
call
rcr
sub
jl
lcall
jge
mov
jp
repnz
adc
sub
jmp
movsl
iret
fstpt
xor
cmpb
pop
push
pop
mov
test
mov
push
std
outsb
mov
aad
dec
int3
mov
jl
movsb
add
and
mov
cli
sahf
inc
jg
ja
mov
mov
push
ficompl
jno
adc
int
fimull
stos
and
pop
cmp
je
pop
adc
xchg
add
inc
fdivr
and
xor
inc
jp
repz
insl
ret
ret
or
arpl
mov
imul
nop
mov
push
ss
lahf
dec
sub
iret
push
mov
lods
insl
or
add
jg
inc
mov
stos
sub
inc
stc
movsl
inc
cli
mov
xchg
mov
faddl
adc
ja
xchg
data16
push
adc
cmp
aad
push
sub
loope
js
movl
push
sub
es
adc
pop
mov
faddl
adc
addl
jg
faddl
adc
sub
pop
adc
iret
push
xor
lea
or
adc
pusha
cmp
lds
adc
shlb
je
fsub
out
add
faddl
adc
or
sub
xchg
lcall
jle
les
inc
ret
outsl
gs
push
mov
cmp
push
adc
cmc
sub
inc
add
push
xor
xchg
push
xchg
ljmp
lock
add
xchg
in
lods
loop
iret
cmp
inc
jg
dec
mov
adc
pop
fcmovnbe
or
enter
mov
jmp
outsb
adc
test
add
pop
fistps
xchg
push
movsb
sub
or
xchg
sub
xor
dec
mov
daa
inc
sbb
enter
mov
cmp
inc
pop
cmp
sbbb
pop
sub
shl
leave
orl
pop
in
scas
mov
sub
mov
jmp
js
mov
adc
inc
or
daa
dec
sbb
dec
pop
fcoms
scas
cmpsb
inc
les
mov
mov
push
cmc
pusha
xlat
test
lret
dec
sbb
dec
pop
faddl
pop
mov
mov
jne
insb
sub
push
and
ret
push
jbe
jo
push
sub
or
mov
add
pop
jae
adc
xchg
or
lods
scas
xchg
jmp
dec
pop
jg
bswap
sbb
sbb
ja
sahf
adc
lods
or
xchg
into
test
adc
inc
xor
mov
test
cwtl
insl
or
movsb
gs
or
aam
push
aad
pop
jg
bswap
sbb
rolb
sub
sub
fnstcw
sub
stc
lods
je
pop
dec
inc
fnsave
and
jb
mov
sub
jmp
out
or
lods
scas
stos
push
stos
std
and
out
pusha
jns
mov
add
aad
cld
out
sbb
adc
fistl
or
shlb
mov
jo
push
test
jbe
xor
les
lock
roll
pop
popf
sbb
push
lock
jne
test
cltd
insb
pop
xchg
and
push
fistpll
xchg
push
outsb
push
int3
dec
je
jno
lret
xor
pop
mov
jecxz
movsb
adc
rorb
mov
add
push
movsl
es
push
ja
int3
cs
push
fcoms
mov
push
notb
aam
mov
out
stos
sbb
dec
mov
bound
push
jb
pop
xchg
jecxz
jecxz
pop
cmpsb
and
sub
dec
nop
sbb
arpl
mov
imul
and
or
mov
and
rol
push
cmc
mov
inc
pop
jno
adc
adc
mov
jb
in
cmp
lods
and
ds
lods
xchg
and
and
mov
jo
adc
ja
xlat
pop
push
bound
push
imulb
sarl
inc
jbe
data16
xorb
xor
leave
sbb
enter
lahf
mov
jnp
ja
movsb
movl
jg
rolb
aad
jno
adc
sbbb
push
jge
jae
or
sbb
ljmp
xor
add
addb
or
jmp
mov
fstpt
cs
pop
sbb
pop
loopne
lret
enter
in
sub
dec
arpl
ret
dec
pop
leave
sub
lock
in
aas
movsl
jl
lret
test
sbb
add
pop
ja
lods
out
lods
cli
inc
rorb
cmp
lds
push
or
add
push
pop
sub
rorb
xor
pop
dec
test
adc
stc
shll
pop
jbe
notb
arpl
mov
clc
and
int3
mov
xchg
clc
xchg
rorb
mov
cld
jge
sub
ds
fdivrs
shlb
or
and
pop
loopne
pop
and
pop
popa
test
dec
fldcw
cs
push
cmp
das
pop
jge
cld
clc
dec
rcll
mov
lret
in
sub
inc
cmp
inc
shlb
jno
xchg
add
sahf
test
mov
mov
sti
nop
xchg
pop
jno
aam
xchg
aaa
data16
lock
out
test
repz
jae
pusha
mov
push
xchg
jo
pop
mov
shrb
pushf
call
xchg
out
pop
and
mov
push
lea
sbb
enter
outsl
into
add
add
dec
cmp
in
arpl
pop
and
xchg
cmp
sahf
sbb
push
jbe
push
sahf
push
jb
or
xchg
and
push
nop
adc
sti
jle
sahf
stos
mov
add
gs
mov
push
mov
lcall
dec
adc
sbb
faddp
push
mov
mov
pop
div
enter
sti
popa
mov
ja
adc
loop
je
pop
sbb
adc
dec
push
insl
hlt
lcall
and
lods
aad
rcl
test
xor
cmpsl
hlt
xchg
jecxz
js
add
or
movsb
aas
and
mov
aam
ss
sbb
jge
inc
nop
and
push
mov
xchg
call
icebp
imul
daa
mov
mov
js
mov
in
inc
cmc
sub
dec
xor
push
lock
cmp
lods
movsl
dec
pop
jl
addr16
dec
inc
xchg
jmp
in
inc
pop
repz
push
in
mov
stc
test
or
dec
out
sub
xor
mov
dec
xchg
mov
sahf
cmp
outsl
test
test
inc
sarb
lds
aad
dec
xchg
test
ss
clc
xchg
cmp
movsb
movsl
dec
push
cli
lret
inc
cmp
adc
xchg
push
inc
fs
adc
xchg
outsl
test
mov
pop
dec
adc
mov
fists
ljmp
sub
adc
sbb
aas
push
icebp
fbld
repnz
adc
push
dec
sahf
test
lods
jecxz
push
pop
and
jge
call
dec
jmp
sbb
sahf
jl,pt
push
adc
mov
je
mov
add
icebp
xlat
cmp
cs
or
xorl
cltd
xor
repnz
adc
xchg
sbb
mov
mov
mov
paddsw
jecxz
shlb
jecxz
mov
dec
push
neg
ja
add
pop
pop
jns
inc
pop
lahf
sti
repnz
gs
cmp
jmp
and
faddl
jne
mov
fisttpll
nop
cmp
inc
sub
lods
std
xor
repz
js
popf
pushf
jg
lahf
jb
mov
or
jae
mov
and
ror
leave
or
xchg
sub
in
nop
mulb
into
pop
pushf
pushf
sbb
repnz
aas
mov
test
xchg
and
popf
jbe
pop
mov
and
push
fistl
outsb
lret
jnp
add
das
sbb
cmpsb
roll
push
js
dec
inc
xchg
sub
adc
mov
adc
lea
inc
sub
adcb
ficomps
xor
es
in
scas
fldt
dec
enter
mov
mov
cmpsl
sbb
lcall
in
in
lock
jl,pt
push
in
pop
mov
repz
popf
jmp
mov
call
sbb
mov
in
jg
adc
and
daa
xor
stc
sti
test
cmpsl
enter
and
xchg
imul
push
adc
fsubrs
xchg
pusha
std
scas
cmpl
mov
gs
cmp
pop
hlt
sub
mov
loopne
inc
in
in
push
pop
shrb
in
loope
popf
icebp
inc
sti
mov
push
mov
add
dec
xchg
bound
or
enter
repz
sahf
mov
in
lods
outsl
jb
int3
sahf
mov
gs
jb
out
dec
nop
fsubr
add
ja
xchg
add
pop
pop
fisttps
mov
inc
xchg
fimull
push
pop
xlat
lods
sbb
stos
stc
mov
test
xchg
push
jg
das
inc
in
mov
shlb
pop
cs
cmpsl
jp
xchg
int3
sbb
stos
lcall
das
and
mov
xchg
mov
in
inc
adc
pusha
stos
or
pushf
push
inc
push
cmp
scas
mov
aad
push
sete
and
shrl
mov
addb
out
ss
repz
pop
mov
aam
mov
repnz
loopne
das
lds
add
mov
shll
rcl
gs
into
inc
fcmovb
jnp
jmp
jg
in
test
mov
test
sub
rcl
mov
scas
mov
fisubs
dec
sbb
cwtl
mov
adc
add
push
lods
sar
popf
mov
repnz
pop
pop
lods
pop
clc
stos
loopne
push
les
adc
push
movsl
or
test
inc
xchg
sub
daa
ss
pop
hlt
push
rorb
inc
movb
loop
fildll
mov
loope
mov
dec
push
outsl
rclb
push
inc
and
mov
xchg
inc
out
mov
lods
lods
pop
and
lea
lcall
sub
stc
sub
ja
sbbl
out
inc
cmp
inc
sqrtps
xchg
dec
bnd
dec
cmp
jo
repz
sub
sub
dec
iret
shrl
lret
xchg
js
int3
icebp
mov
mov
jne
imull
and
mulb
addr16
in
pop
das
inc
push
jne
addb
inc
addb
ret
inc
mov
ljmp
fdivrp
mov
mov
xchg
jbe
push
sub
mov
fucomip
lods
xchg
sbb
adc
ret
int3
push
orb
pop
sub
mov
aas
cwtl
das
leave
addr16
insl
mov
mov
mov
push
sbb
push
add
lret
incl
leave
into
std
daa
or
jle
ss
loop
int
ror
mov
stc
jecxz
sub
jecxz
stos
js
or
xchg
into
mov
imul
xchg
inc
sbb
rclb
fwait
and
mov
xor
sbb
push
ret
sbb
cmp
iret
jg
jmp
inc
mov
mov
rcl
into
mov
repz
out
mov
into
jne
push
stos
jmp
jp
mov
adc
sbb
pop
cmp
nop
fcmovbe
or
push
aas
cli
dec
mov
addr16
inc
jl
nop
add
scas
in
xor
sbb
fwait
ss
mov
lret
xchg
stos
cltd
or
push
push
hlt
popa
and
inc
leave
inc
xchg
and
es
stc
add
das
push
xor
jne
jl
or
jae
pop
mov
fdivl
stos
leave
xor
cmpsb
lcall
mov
push
in
fists
add
test
stos
outsl
sub
xchg
mov
out
das
adc
dec
mov
adc
lods
pop
std
outsl
or
push
stos
data16
adc
fisttps
sub
sbb
sbb
jp
bound
sti
and
sahf
sub
sub
out
repz
sbb
mov
and
jno
jmp
mov
in
push
xor
xchg
les
repnz
imull
sbb
out
aad
popa
dec
loope
add
jnp
mov
xchg
push
inc
jle
xor
pusha
or
repz
xchg
cmp
sub
adc
push
les
rorl
xchg
cmp
imul
outsl
imul
push
movsb
mulb
mov
fnstsw
hlt
test
test
and
pop
inc
or
dec
push
push
mov
int
outsl
mov
push
outsl
or
cmp
loopne
pop
imull
dec
xchg
push
clc
pop
call
and
mov
in
int
or
mov
loop
shrb
sahf
mov
aas
scas
fsub
inc
pop
jns
in
into
test
or
sti
rolb
popf
mov
xchg
mov
sahf
or
fidivl
add
push
cmpsb
sbb
loope
and
daa
fadds
push
mov
outsb
jmp
push
sbbl
popl
mov
stos
dec
and
cmp
adc
lods
addb
out
and
enter
xchg
bound
push
es
stc
lds
add
jg
decl
mov
push
movsb
fsubrl
mov
xchg
popa
xorb
pop
stc
mov
addb
add
leave
cld
nop
stos
push
movsb
jecxz
aaa
loopne
stos
mov
and
mov
outsl
cltd
cwtl
or
aad
or
mov
mov
scas
ret
loope
and
test
cld
std
out
push
nop
frstor
mov
iret
gs
popa
inc
or
test
movsb
push
popa
sbb
mov
call
jg
pop
pop
pop
enter
es
cmp
cmp
aam
dec
pop
cmp
fbstp
cli
cmc
sahf
outsb
pop
inc
jmp
insl
fstpt
mov
pop
inc
arpl
adc
addb
mov
push
sub
jl
hlt
arpl
inc
popf
inc
out
push
daa
mov
xchg
leave
sbb
add
xor
sarl
andb
jecxz
mov
sub
inc
aam
add
je
inc
lds
into
rclb
jg
flds
push
imul
gs
mov
orl
pop
xor
mov
les
call
or
aam
mov
lcall
out
lahf
sub
inc
int3
mov
les
and
jnp
test
clc
xchg
adc
xchg
adc
xchg
test
pushf
sub
loopne
push
shlb
pop
sbb
fs
mov
data16
lods
stos
push
jl
les
pop
popf
sbbb
pop
fistps
ds
inc
jmp
cld
dec
fistps
inc
pop
mov
add
jmp
mov
aaa
mov
mov
push
jl,pn
cmpsb
mov
and
or
inc
rcrb
inc
mov
rcr
outsb
mov
mov
sti
faddl
adc
test
jno
adc
sbb
and
sub
aas
sub
pop
dec
fdivs
insb
ret
sbb
or
mov
lahf
movsl
loope
faddl
adc
and
rolb
push
adc
pop
cld
jo
adc
add
fs
push
adc
enter
ljmp
pop
pop
pop
lea
xor
rcr
adc
pusha
in
lahf
dec
lcall
adc
mov
jb
sbb
ljmp
popa
aad
outsb
xor
test
faddl
das
add
adc
mov
pop
adc
loope
jle
adc
stos
rcr
adc
sbb
iret
in
jo
adc
xchg
sub
sbb
fsts
mov
in
in
loopne
ds
in
mov
mov
pushl
lds
fidivrl
sbb
sahf
add
dec
dec
lods
xor
addr16
mov
push
in
rclb
dec
jns
shll
call
pop
sarb
out
pop
mov
jb
mov
out
xchg
fcmovne
xchg
in
jmp
outsl
and
sub
outsl
or
mov
pop
fdivrl
sbb
inc
iret
lea
scas
int
iret
mov
push
mov
push
adc
cli
adcl
adc
cmpsb
push
fnstcw
das
add
cmp
dec
pushf
cmp
out
cli
and
addb
adcb
fdivs
adc
jle
out
jge
push
cmpsl
ret
shll
mov
push
adc
mov
push
inc
push
sub
push
mov
outsb
rol
adc
lods
les
adc
add
adc
inc
pop
mov
mov
cmp
pop
hlt
repz
jno
cmp
or
jae
lds
pusha
jo
adc
lods
scas
mov
pop
cmp
sar
add
outsl
mov
jbe
int3
push
cwtl
push
sti
mov
sbb
xor
ror
mov
add
push
mov
adc
cmpsb
adc
in
rcr
pop
adc
add
fwait
push
adc
push
adc
adc
enter
adcl
faddl
adc
stos
push
sbb
rorl
test
adc
enter
fbstp
push
cmpsb
lahf
cmp
cmp
jge
or
popl
inc
aam
movsl
mov
nop
and
xor
out
aad
push
ja
mov
cli
and
int
jmp
mov
pusha
cmp
dec
dec
pushf
sub
push
cltd
sub
push
cmp
mov
add
adc
into
dec
popf
sub
fbld
adc
call
adc
aam
faddl
adc
ficomps
mov
xor
pop
int
and
jo
adc
adc
push
adc
and
adc
dec
mov
pop
adc
or
xor
pop
mov
or
sarb
push
jge
mov
dec
cmp
sbb
adc
push
rclb
push
adc
lea
into
out
mov
insb
inc
notl
push
adc
jp
sahf
inc
cltd
popa
push
jg
mov
jae
jae
adc
scas
and
mov
push
shlb
mov
shll
or
insb
jae
adc
jne
mov
mov
jae
adc
mov
sub
lods
nop
or
aam
mov
cld
jb
adc
mov
leave
add
lret
les
out
lret
scas
cld
sbb
adc
or
mov
pusha
jo
adc
jp
test
xchg
sub
mov
mov
lahf
and
adc
push
mov
xchg
push
dec
mov
mov
fdivrs
sub
pop
jae
adc
inc
jbe
mov
loope
lds
enter
movsl
imul
lret
decl
push
adc
arpl
adc
inc
fstps
mov
rol
inc
std
jo
es
out
dec
fsubrs
movsl
lea
enter
inc
rcrb
mov
adc
aas
hlt
add
push
imul
jo
pop
inc
daa
ss
mov
xchg
hlt
cmp
call
cmp
cmp
sbb
push
xchg
mov
movsl
cmc
mov
popf
xchg
cmp
lret
ja
fwait
jb
xor
xor
and
fsubp
and
rcll
mov
les
outsb
lods
test
or
cmp
ffree
inc
test
adc
fs
mov
dec
push
or
dec
cwtl
push
adc
test
je
sbb
inc
lahf
cwtl
repz
popw
stos
mov
out
xchg
mov
or
inc
stos
aad
pop
in
mov
mov
pop
xor
daa
into
sbb
add
inc
xlat
pop
stos
orl
jae
adc
dec
mov
ss
mov
cmp
and
jg
test
jo
xchg
push
dec
mov
mov
fnstcw
and
sub
sub
cmp
int
cmp
mov
pusha
adc
test
adc
movsb
lods
jp
lods
fsub
dec
ja
jmp
push
adc
add
push
sub
hlt
rcrb
push
jns
push
or
sub
fnstcw
fdivrl
jno
xchg
jnp
ret
sbb
jo
adcl
imul
sbbl
test
dec
add
add
or
pop
mov
pop
lret
mov
fldl
mov
cmp
inc
jle
movl
ljmp
sbb
ret
pusha
mov
push
adc
in
add
lods
pop
pop
lock
jecxz
and
adc
outsl
enter
xor
xchg
fcomip
cmpsl
pop
and
dec
xchg
push
lret
push
pop
mov
ljmp
jle
mov
cmp
test
cmp
sub
sub
pushf
cmp
shll
aad
add
lods
pop
mov
xorl
movsl
add
add
aaa
or
nop
and
into
add
cli
orl
lock
and
lods
pop
sbb
leave
sbb
cmpl
sbb
dec
add
mov
fisttpl
adc
pop
mov
xor
adc
push
push
lea
inc
fs
nop
es
ficompl
xchg
sub
sahf
dec
lahf
cwtl
lds
aaa
orb
imul
dec
cmp
test
test
cmp
loop
push
icebp
pushl
fdivl
not
mov
and
imul
adc
xlat
or
aaa
pop
or
xor
and
sub
testl
mov
push
mov
mov
pop
jmp
data16
scas
cli
test
inc
adc
scas
cmp
push
adc
mov
out
arpl
inc
fwait
push
adc
pop
into
jg
cmp
pop
mov
xor
inc
inc
xor
and
or
int
int
xor
dec
fs
jne
andb
or
cmpsl
dec
xorps
xchg
xchg
or
icebp
bound
sub
mov
fwait
push
adc
insl
add
sub
push
test
outsb
hlt
inc
jge
adc
mov
fidivrl
xor
push
and
fwait
sbb
test
or
jne
call
shll
push
jns
sub
fwait
push
adc
fidivl
lret
push
adc
and
mov
loope
adcb
jno
adc
addr16
pusha
shll
or
test
xor
ficompl
and
mov
mov
pushf
sbb
push
xchg
pop
stc
insb
mov
push
push
cmp
adc
popa
daa
dec
pop
sbb
mov
insb
mov
fstpl
mov
out
popa
aam
iret
mov
or
aaa
icebp
sub
inc
fnstcw
adc
xchg
mov
into
add
xchg
cli
xlat
inc
aas
fwait
xchg
imul
mov
test
adc
xchg
inc
xchg
fisttpll
adc
adc
add
gs
pop
fwait
push
adc
out
sarb
and
or
dec
nop
mov
and
jg
mov
sub
fidivs
enter
fwait
push
adc
loop
outsl
mov
inc
mov
adc
faddl
mov
test
xchg
mov
fdivr
pop
adc
hlt
test
xor
std
outsl
cmc
inc
cmpsb
adc
pop
xor
dec
xchg
mov
adc
test
fidivrs
dec
fdivrp
jle
push
movsb
loopne
xchg
bound
rcll
mov
xor
scas
adc
jg
in
push
mov
mov
cmp
dec
or
lods
pop
int
and
insl
clc
push
pop
jg
fneni(8087
pop
andl
dec
scas
les
leave
lea
add
add
mov
movsb
sbb
dec
and
addr16
jae
xlat
mov
cmc
ljmp
into
add
adc
or
inc
insb
xchg
jg
xor
push
or
and
lods
pop
mov
push
lock
sub
push
sbb
xchg
and
or
cmp
add
pop
lret
clc
cmp
outsl
push
cmpsl
dec
pop
inc
inc
out
int
xor
in
dec
mov
pop
cmpl
aam
scas
adc
outsl
pop
push
gs
sti
cmc
cwtl
data16
sarb
xchg
or
and
mov
stc
test
mov
or
jbe
es
insl
rcll
or
cmpsb
ljmp
jecxz
ljmp
and
out
push
push
push
fdivl
cwtl
lds
stos
cmova
push
mov
inc
stos
fwait
nop
es
aaa
mov
jle
add
adc
push
push
call
lods
push
or
sub
push
or
inc
xchg
lea
cmpsl
pop
shll
mov
mov
cmp
mov
add
push
mov
adc
cld
jo
adc
xor
jns
mov
push
xchg
pop
int3
popa
push
mov
lock
sub
sbb
dec
pop
or
lret
mov
jno
adc
jmp
pop
pop
or
int3
decb
hlt
sbb
seto
in
add
pop
adc
lds
adc
jge
or
pop
pop
xchg
pop
out
mov
xchg
loopne
test
inc
leave
inc
or
adc
fs
lds
adc
mov
or
xor
int
add
pop
adc
shlb
test
pop
or
imul
lret
pop
ljmp
mov
sub
push
or
test
jmp
or
push
shr
xor
sbb
sbb
mov
loope
stc
stos
push
imul
lea
lret
sbb
jne
pusha
mov
stos
xor
lods
int3
xor
inc
popl
mov
les
dec
out
loop
sub
add
ret
cmp
les
xchg
push
jno
lock
aad
fcmovbe
imul
pop
jne
int3
jbe
push
int
addr16
pop
sub
loop
pop
ljmp
inc
xor
daa
dec
sub
aaa
dec
mov
flds
jmp
or
int
in
fcmovnu
pushf
jno
or
sbb
shrl
mov
pusha
and
inc
mov
pop
adc
shld
adc
add
pop
adc
inc
daa
fisubrs
push
shrb
push
sbb
fwait
jbe
test
lret
mov
int3
sub
es
push
pop
pop
or
into
inc
dec
xor
adc
pop
pop
pop
or
sti
sub
push
jmp
cmpsb
push
pop
or
dec
push
pop
or
nop
call
jne
dec
pop
or
leave
clc
cld
jo
adc
sub
sbb
jb
test
gs
add
pop
pop
push
fsubr
out
jb
push
adc
scas
mov
mov
cmp
push
cmpsl
dec
cmp
ret
jbe
inc
test
je
dec
xor
mov
add
xchg
sarl
adc
jl
mov
xchg
push
faddl
adc
add
scas
pop
out
pop
and
pop
faddl
adc
push
faddl
adc
enter
add
adc
adc
fnsave
pushf
adc
sbb
push
faddl
adc
sub
sarb
or
imull
call
out
jns
movsb
jle
jns
sub
neg
push
sbb
inc
cmpsb
mov
cltd
or
cmp
inc
int
leave
fstpl
pusha
mov
stos
ficoms
pop
adc
test
addr16
int
test
pop
push
faddl
adc
pop
mov
fstl
and
push
mov
gs
movsl
faddl
adc
pop
push
faddl
adc
pop
mov
into
cld
jo
adc
cmp
push
cmpsl
mov
mov
inc
cmp
sub
push
adc
add
dec
jg
jno
adc
insb
add
xorb
cmp
push
dec
les
adc
xchg
inc
xor
dec
pushf
cmp
test
fucomi
ret
fldl
or
jmp
sbb
xchg
mov
insb
jae
adc
sbb
sbb
rcr
jl
push
adc
inc
jns
sub
dec
xchg
and
jo
push
adc
jg
insl
mov
adc
mov
sub
subb
into
lock
pop
repnz
mov
fimuls
roll
clc
mov
mov
mov
sbb
mov
insb
sub
xlat
pushf
jo
adc
sbb
shll
in
cwtl
cs
negb
fdivrp
shll
inc
and
add
or
adc
mov
mov
das
cld
jp
cmpl
adc
pop
or
pushf
xlat
aad
dec
pushf
lcall
pushf
inc
jns
sarl
inc
je
xor
cwtl
adc
push
pop
xchg
mov
push
mov
in
fisttpll
or
lods
push
cmp
pop
pop
push
in
add
push
repnz
jnp
or
or
adc
fcomi
arpl
pop
sbbb
cmp
lds
je
adc
rcr
xchg
jmp
xchg
adc
push
adc
inc
decl
leave
adc
aam
push
adc
into
daa
jp
mov
jns
add
pop
mov
fisubrl
xchg
dec
xchg
and
mov
cmpsl
push
lds
jl
sbb
stos
push
or
ss
push
sti
rcll
scas
je
ja
adc
lret
cld
cli
std
pop
fwait
jno
inc
mov
mov
and
sbb
scas
in
or
addl
xchg
fsubs
adc
cmpsb
mov
insl
insb
enter
add
int3
xchg
push
lret
sub
mov
pop
adc
push
adc
pop
push
int
icebp
push
push
jo
out
pop
adc
inc
imul
pop
adc
mov
std
cld
fcompl
movsl
lcall
xchg
push
adc
mov
inc
into
aaa
pop
mov
inc
in
gs
or
movsl
pop
fwait
jae
aad
es
loopne
xchg
inc
mov
cmp
or
xor
sub
cltd
jmp
out
sbb
lods
aas
adc
adc
push
xchg
stos
push
sarl
enter
jg
scas
stos
in
shll
sahf
mov
in
std
adc
push
adc
faddl
mov
imul
pop
mov
std
bound
call
jno
adc
decb
ficomps
adc
adc
adc
sub
adc
inc
mov
and
xor
test
cmp
sub
and
out
lds
add
sub
dec
xchg
and
scas
push
call
rolb
icebp
lcall
xor
or
shlb
adc
or
lret
add
lea
repz
out
jl
add
add
inc
sbb
jmp
lock
out
pop
adc
sub
cmc
pusha
and
pop
jb
pop
jne
and
arpl
and
js
mov
mov
lds
adc
push
xchg
sub
jo
pop
adc
nop
enter
push
faddl
adc
lcall
sbb
jecxz
cmc
cld
jne
mov
std
dec
xchg
pop
outsl
call
pop
sub
je
pop
adc
fs
nop
jns
add
xor
in
adc
mov
fcmovnb
fs
jge
hlt
push
scas
pop
movsl
sahf
or
add
or
ljmp
stos
dec
xchg
pop
jbe
pop
xor
test
cmp
mov
push
xlat
push
sub
push
fbstp
mov
sbb
or
adc
jp
clc
je
pop
lcall
mov
mov
push
outsl
pop
repnz
add
push
adc
mov
push
call
sub
ds
ja
nop
cs
mov
push
adc
loop
or
lcall
sbb
les
adc
lods
or
lock
add
inc
inc
jbe
inc
add
sbb
xchg
js
push
adc
sarb
test
pop
adc
jns
in
jo
pop
adc
push
inc
inc
cld
add
jno
adc
mov
rcr
pop
adc
je
insl
bound
xchg
pop
scas
dec
lahf
cmp
pop
adc
push
mov
sub
sub
add
int
flds
inc
roll
in
rorb
inc
fcoms
or
pop
mov
adc
add
jno
adc
icebp
call
pop
shlb
into
hlt
xor
sbb
jns
jle
movl
adc
jb
and
adcl
sbb
scas
movb
push
pop
mov
jmp
dec
xchg
es
mov
out
mov
push
aas
scas
mov
mov
fsts
mov
sbb
adc
dec
fwait
ds
sub
adc
or
sti
push
dec
jo
adc
add
or
pop
call
xchg
in
sbb
adc
test
out
mulb
adc
push
adc
test
pushf
jae
adc
into
arpl
xor
mov
xchg
push
adc
pushf
push
or
cmc
push
mov
mov
gs
mov
or
rclb
sahf
jae
test
lahf
ss
jmp
sbb
pop
adc
pop
jae
sub
shlb
xor
lret
jmp
stos
jne
cmp
inc
les
add
inc
push
js
dec
add
push
push
cli
cmp
adc
mov
add
addr16
lock
inc
testl
inc
pop
add
movsb
sahf
fisubl
adc
jno
adc
faddl
adc
lods
ret
dec
inc
push
mov
cmp
inc
push
imul
faddl
adc
daa
mov
dec
ja
xor
add
add
pop
adc
add
pop
and
lea
cwtl
js
mov
adc
push
movsb
out
lret
mov
add
cli
cmp
mov
push
adc
adc
and
fmuls
lret
lds
adc
dec
and
lds
adc
dec
shrl
ljmp
dec
test
cltd
jmp
adc
push
inc
cmp
pop
adc
ds
push
adc
sbb
arpl
lods
mov
jno
adc
jle
incb
test
push
adc
adc
and
nop
fwait
push
adc
icebp
hlt
jo
adc
or
xchg
movsb
mov
and
adc
data16
fisttps
leave
push
push
ljmp
sub
xor
outsl
fidivl
pop
mov
rcl
sub
outsl
stos
jne
jo
adc
inc
test
mov
ds
lods
pop
mov
dec
mov
les
adc
xchg
push
movsb
out
loopne
sub
push
test
enter
cwtl
xor
adc
aad
jo
pop
adc
or
xchg
or
pop
adc
jg
arpl
outsb
cwtl
faddl
adc
or
mov
sbb
dec
pop
pop
faddl
adc
sub
sbb
ds
pop
imul
jns
nop
es
les
sub
scas
nop
pop
faddl
adc
and
mov
or
adc
sti
mov
jno
adc
test
or
sbb
lahf
pop
faddl
adc
pushf
mov
loopne
pop
adc
pusha
faddl
adc
and
les
jge
jp
stos
pusha
adc
cmp
aas
test
iret
mov
dec
jno
adc
in
pop
adc
sub
inc
xor
add
incb
mov
adc
sti
xchg
out
fisttpll
pop
insb
out
das
scas
scas
inc
dec
jno
adc
add
adc
mov
pop
outsb
vmread
adc
in
nop
push
fistps
icebp
test
and
adc
xor
jl
pop
adc
mov
das
lahf
push
xchg
adc
jle
add
cmp
int
dec
enter
sbb
adc
cmp
and
and
shrb
pop
push
sub
in
pop
xchg
pop
adc
push
adc
push
test
pop
sub
arpl
imul
sbb
out
out
or
das
dec
je
arpl
jnp
std
aad
mov
jae
adc
nop
sar
adc
mov
subb
mov
pop
in
cmp
adc
dec
xchg
cmp
fldenv
mov
sahf
push
lock
adc
push
outsb
dec
push
lret
xorb
and
lods
xor
fcomip
inc
sub
stos
and
out
enter
push
mov
push
adc
add
or
dec
fdiv
test
xor
std
out
adc
lret
cmp
repz
les
adc
lcall
test
lea
call
cs
cmp
dec
fwait
lret
sarb
mov
pop
dec
sub
fs
push
fsubs
lahf
ret
push
faddl
adc
jle
data16
dec
popa
je
mov
pusha
push
loopne
fstp
aas
cmp
push
cs
faddl
adc
insb
cwtl
xlat
mov
or
mov
lods
je
pop
adc
xchg
insb
sub
xor
cltd
inc
mov
pop
adc
inc
mov
and
pop
add
adc
insl
das
xchg
loopne
dec
nop
and
pop
faddl
adc
sbb
loop
int
push
add
int3
je
pop
adc
cld
sub
je
pop
adc
push
pop
std
daa
adcb
call
in
jecxz
mov
mov
leave
sub
cmp
loopne
pop
adc
pop
pop
or
leave
cmp
popa
icebp
and
jns
mov
adc
adc
xchg
fstps
cs
xchg
mov
adc
lea
jl
std
mov
mov
mov
dec
cmp
inc
jo
mov
or
push
adc
and
cli
pusha
add
dec
fsubrs
dec
xchg
and
push
and
nop
imul
arpl
cmpb
sahf
outsb
sbb
cmp
xchg
fldl
or
sub
dec
pushl
sbb
js
mov
ljmp
xchg
push
adc
xchg
ficomps
stc
dec
xchg
pop
and
pop
mov
rol
add
call
loop
lds
and
push
cld
fmuls
scas
stc
and
push
push
push
insl
nop
jbe
adc
dec
dec
fidivl
jo
adc
cmp
jge
lret
outsl
push
mov
adc
pusha
and
adc
mov
idivb
sbb
leave
andl
push
adc
dec
xorb
push
insb
mov
aad
inc
into
sub
pop
adc
call
and
rcll
les
adc
pop
adc
push
dec
popa
cs
adc
adc
pop
pop
mov
stos
mov
adc
dec
cltd
gs
jo
adc
enter
and
jo
push
adc
add
enter
and
pop
mov
jmp
aaa
mov
daa
cltd
xor
sahf
dec
stos
and
mov
idivl
inc
popf
cli
sub
test
push
jp
xor
andl
jmp
out
fisttpll
ret
sub
stos
imul
mov
sub
push
adc
inc
mov
mov
pop
pop
sub
sub
stos
imul
pusha
pushf
push
adc
decl
cmc
mov
scas
adc
or
in
adc
pushf
push
adc
popf
js
jg
rorl
pop
in
sub
mov
dec
xor
push
adc
std
sub
pop
clc
mov
push
call
jae
es
cmp
ds
cmp
mov
cmp
pop
push
sub
mov
icebp
or
mov
jmp
dec
xchg
es
inc
pop
push
movsb
into
pop
sub
inc
adc
mov
push
test
adc
mov
test
out
daa
loope
mov
roll
mov
dec
push
mov
repnz
sti
xchg
cmp
pop
loopne
popf
sub
xchg
pusha
lea
fmuls
insl
enter
xor
adc
idivb
test
cli
sbb
loop
ds
fidivl
jo
adc
in
push
push
insb
sbb
jb
push
dec
xchg
pusha
mov
scas
iret
jg
adc
sbb
jmp
imul
out
dec
xor
enter
ss
mov
adc
xor
pop
or
rolb
push
out
push
loopne
test
cli
cmp
outsl
icebp
pop
sti
repz
pop
sbb
in
dec
pop
nop
add
lods
insb
icebp
add
lds
rcr
gs
jno
inc
insb
lahf
mov
jecxz
mov
dec
push
and
push
mov
pop
inc
inc
dec
lods
pop
mov
mov
add
rcll
sbb
adc
adc
inc
je
cmpsb
adc
or
call
in
xchg
lods
pushf
push
adc
pop
insb
ja
sub
mov
pop
and
push
adc
jbe
scas
cmp
pop
hlt
outsl
pop
dec
imul
mov
mov
push
imul
in
in
cmp
or
dec
xor
add
lods
pop
out
xor
xchg
mov
adc
or
push
adc
and
push
xchg
push
es
xor
jns
fcmovb
lods
pushf
push
adc
pop
insb
aaa
test
jo
adc
subb
pop
or
jno
pop
in
xlat
test
enter
call
cmc
pusha
mov
js
jo
adc
stos
mov
mov
outsl
enter
add
fistpl
pushw
dec
cmp
mov
jmp
mov
inc
rolb
icebp
rorb
adc
les
rcll
lahf
xchg
dec
pushf
imul
inc
adcb
out
or
ret
js
pop
stos
movzwl
cmc
push
movsl
cmp
adc
push
xchg
imul
mov
movsb
mov
and
sub
push
adc
push
insl
test
push
adc
addr16
lods
pop
mov
pop
jg
push
adc
and
jl
push
adc
inc
notl
add
cmp
xor
fdivrs
int
sahf
cmp
inc
test
adc
jo
adc
push
fisttpll
into
loopne
xor
shrb
in
push
adc
das
lldt
mov
xor
stc
out
jmp
cli
int
mov
in
jo
adc
push
test
inc
xlat
dec
insb
dec
mov
jmp
add
mov
xchg
loope
test
insb
cmpsb
movsl
and
fwait
jne
icebp
sahf
jl
adc
movsl
repz
and
mov
jle
pop
movsb
add
scas
mov
cmp
ret
inc
xor
xor
xchg
pusha
fisubrl
mov
fdivrs
ds
lock
arpl
or
ljmp
lret
out
jnp
or
in
in
adc
pushf
fs
ja
sbb
inc
repz
jne
or
add
aam
push
adc
adc
adc
stc
and
add
hlt
mov
aad
xchg
pop
daa
pop
aaa
inc
sbb
sti
test
cs
movl
push
adc
je
testb
jo
adc
jecxz
xchg
jmp
push
lahf
mov
daa
mov
test
scas
sub
lret
lock
or
push
adc
sahf
ds
pop
mov
xor
adc
imul
mov
std
fisttpl
pop
pushf
sbb
je
jl
fbld
push
cli
fcmovnb
jo
adc
rorb
test
adc
popa
or
mov
mov
push
add
enter
imul
cmp
or
pop
cs
insb
lods
inc
std
dec
pop
push
xchg
in
dec
jae
adc
out
outsl
fwait
ret
sub
mov
cld
pushf
push
adc
jae
adc
xlat
clc
push
fmuls
fdivs
adc
xor
mov
mov
in
daa
push
loope
cwtl
sti
fcoml
mov
add
fistpll
or
mov
xor
das
mov
xchg
stos
jle
mov
and
lds
call
adc
scas
movsb
fdivs
cmpsl
dec
cmp
ret
jbe
or
mov
jge
push
lods
pop
cmp
xor
and
cli
pop
adc
mov
mov
jne
ljmp
mov
xchg
and
test
push
lock
lcall
std
cmp
sbb
mov
fisttpl
sub
push
adc
sub
xchg
imul
push
add
push
push
cmc
add
push
adc
bound
adc
sti
jmp
or
xor
loop
out
lods
add
adc
jecxz
and
clc
sbb
adc
mov
nop
xor
adc
mov
faddl
adc
xorb
addr16
pop
adc
push
dec
ja
xor
adc
jo
adc
jmp
mov
pop
dec
push
test
popa
adc
jae
or
stos
lods
add
add
inc
mov
sub
xor
movsl
push
cmp
dec
out
cmp
ja
jo
adcl
cmp
pop
jl
lret
fistl
dec
ja
stc
and
dec
push
lret
push
ja
cmc
pusha
and
pop
jb
pop
jne
or
sub
pop
out
cmp
rolb
or
cli
push
dec
jo
outsl
push
mov
and
dec
sarb
fwait
cmp
andb
in
subl
aad
repnz
mov
push
adc
int3
jno
shl
enter
jge
or
movsb
inc
movsb
pop
xchg
ficoms
lcall
mov
jp
xchg
jp
jge
test
sbb
lods
push
mov
popl
dec
pop
inc
roll
sbb
xchg
ljmp
hlt
pextrw
jl
push
adc
push
add
ljmp
int3
sti
xor
xlat
int
in
nop
xor
or
arpl
fdivrs
insl
xchg
pop
cs
js
negb
mov
and
decl
xor
dec
add
jae
adc
shlb
dec
mov
push
adc
cmp
stos
test
fistpll
cmp
pop
add
or
inc
pop
push
jmp
mov
jnp
int
sahf
xchg
cltd
sti
addr16
sub
dec
popf
push
adc
cmp
hlt
sub
or
loope
jo
adc
ret
add
push
adc
sbb
sbb
adc
sbb
adc
adc
mov
mov
decl
and
adc
mov
aad
cmp
inc
popf
cmp
adc
hlt
stc
adcb
insl
sub
push
xor
pop
adc
orl
daa
xor
xor
pop
out
js
lods
push
pusha
mov
repz
mov
ds
fwait
mov
imul
push
repz
scas
pop
stos
loope
mov
fwait
iret
les
adc
xchg
pop
sub
ret
dec
pop
jae
adc
mov
cmp
fwait
out
mov
fdiv
test
cs
out
mov
fnstenv
dec
jno
sbb
call
push
sbb
std
xor
inc
in
fiadds
adc
shr
jo
adc
decb
adc
jle
ret
movsl
xor
mov
lea
add
push
call
push
adc
test
andb
in
mov
addb
ret
cmp
sti
dec
sbb
dec
pop
stos
jl
xchg
addr16
xor
faddl
adc
fdivs
adc
push
sub
inc
jmp
shrl
xchg
lea
xor
fiadds
adc
inc
in
push
adc
push
stc
add
adc
fucom
jo
adc
mov
and
out
out
in
fiadds
adc
pop
jnp
fiadds
adc
test
jo
adc
ds
pop
add
loopne
iret
js
push
adc
test
dec
lods
lock
adc
or
xchg
sub
add
int3
lock
push
cmpsb
dec
pushf
push
rcr
pop
adc
jne
cli
pop
adc
pop
dec
js
jo
adc
sub
and
in
and
inc
add
ds
insl
mov
movsl
fnstenv
aam
xchg
mov
mov
clc
sbb
adc
ficoml
cmc
add
push
adc
xor
sub
loopne
pop
adc
mov
shrl
push
add
inc
js
icebp
jg
xchg
into
js
push
adc
dec
sbb
lea
fwait
outsl
adc
push
push
pusha
pop
inc
pop
decb
fisubrs
jns
mov
ja
adc
in
lcall
jae
adc
mov
adc
push
push
dec
fs
adc
sahf
xchg
push
test
addr16
mov
fs
adc
or
pop
test
push
mov
cmp
adc
cmpsl
dec
pushf
xorb
ret
js
push
xchg
push
dec
sub
adc
cli
push
pop
cwtl
cmpsl
cli
cli
mov
jle
xorb
xchg
rclb
jg
jno
sbb
pop
in
jbe
pop
jne
cmpsl
in
clc
push
sub
out
xlat
imul
mov
outsl
daa
ret
dec
push
xchg
adc
rcrl
adc
pop
inc
mov
cmp
cmpsb
jo
push
adc
inc
and
js
cmp
adc
leave
or
scas
inc
ds
clc
inc
in
out
xor
pop
ja
loopne
add
imul
push
xor
dec
mov
adc
xchg
sahf
push
mov
or
imul
out
cmp
and
or
dec
sbb
fiaddl
in
call
scas
test
or
stc
sub
push
dec
xchg
sub
stc
xor
lahf
cmp
adc
adc
sbb
movups
push
adc
lahf
dec
movsb
addr16
aas
push
lock
adc
lock
adc
out
adc
add
adc
loopne
sbb
push
lock
adc
les
addb
sub
mov
rorb
jmp
in
inc
addl
mov
aad
push
pop
pop
xor
push
cs
adc
adc
jmp
int
or
outsl
push
pusha
mov
sub
push
adc
sbb
cwtl
push
or
cmp
roll
mov
add
mov
rcll
sbb
adc
sbb
push
adc
rcll
mov
push
adc
movsl
mov
aaa
mov
mov
push
adc
cmp
cli
pop
adc
aam
push
adc
cltd
mov
imul
jnp
adc
jp
sarl
mov
pop
je
movsb
fidivs
push
xchg
mov
xchg
arpl
mov
and
ljmp
mov
adc
mov
fldcw
mov
sub
xor
cmp
mov
loop
jge
mov
lret
icebp
out
shrb
sbb
push
pusha
dec
lahf
cwtl
cli
js
sbb
adc
inc
fisttpl
ljmp
pop
in
das
das
popa
add
call
imul
add
pop
scas
fbstp
pop
jmp
icebp
lds
mov
add
rol
imul
mov
push
cs
jl
adcb
out
or
das
fbstp
ds
fsubs
insl
cli
sbb
add
add
pushf
jge
sub
xchg
mov
test
js
xrstors
push
mov
adcl
shlb
cwtl
mov
shrb
loop
mov
rorb
mov
sub
pop
outsl
push
data16
mov
push
lea
outsl
fldcw
add
ja
stos
mov
mov
pop
cld
fmuls
arpl
mov
pushl
aad
test
sbb
out
jecxz
mov
arpl
xchg
and
inc
add
or
in
pop
xchg
cs
lret
pop
ret
ja
ja
cmp
sbb
mov
mov
adc
gs
push
and
push
mov
push
jne
insb
mov
push
xchg
push
inc
lods
das
mov
sarl
push
in
inc
mov
mov
lds
pop
rcll
jp
cli
ror
popa
mov
sub
rorl
cli
mov
mov
dec
pcmpeqd
cltd
outsl
pop
inc
pop
sbb
cmp
daa
aas
arpl
pop
stc
xchg
mov
xchg
je
mulb
xorps
jl
cmp
cmp
push
dec
sub
rcll
clc
push
popf
pusha
push
and
sub
mov
fidivrs
das
aad
push
sub
xor
dec
inc
mov
test
dec
fisubrs
pop
scas
leave
jae
leave
ja
lret
push
inc
pop
imul
std
xchg
ret
xor
mov
pop
or
dec
adc
cwtl
mov
lret
stos
call
cld
addl
push
mov
push
adc
or
and
je
sbb
adc
sbb
hlt
gs
ja
mov
cmp
pop
insb
cs
sub
adc
out
add
in
adc
mov
pop
cmp
sbbb
lock
adc
adc
mov
or
roll
xchg
addr16
and
rclb
pop
fidivrs
xlat
jo
mov
test
sub
mov
cld
mov
ds
popa
push
bound
or
lahf
and
push
push
stc
cmp
les
adc
clc
data16
loop
dec
loop
sub
xor
in
outsl
pop
js
cld
les
adc
and
sbb
out
cmp
jmp
rolb
fstpl
dec
testl
stos
jmp
aam
cs
push
and
pop
mov
xchg
fsts
sub
out
daa
aas
mov
xor
cmpsl
js
jle
jno
jns
mov
in
ss
xor
add
lret
out
push
cmp
sti
jmp
sbb
popa
stc
xor
subl
mov
dec
out
xlat
fsubl
inc
mov
test
sbb
add
jb
fmul
test
int
es
and
sub
jle
adc
aas
jle
mov
or
out
sbb
in
jae
or
pop
fcmovnb
inc
cwtl
icebp
fnstenv
push
and
jp
cld
pop
clc
repz
dec
or
std
cli
loope
inc
test
mov
and
or
push
lods
hlt
mov
clc
les
adc
mov
cli
mov
aam
pushl
mov
push
adc
shl
out
adc
and
dec
mov
aam
push
movsb
ret
in
lahf
cmp
dec
sub
lea
mov
mov
stc
push
std
and
pop
fidivrl
and
insb
andps
out
int
adc
add
stos
push
or
insb
push
sti
mov
push
add
dec
adc
adc
fnstsw
inc
sub
push
mov
cmp
xchg
movsl
dec
push
sti
push
in
aam
inc
mov
xor
xor
mov
gs
clc
popa
scas
mov
adc
jp
mov
dec
xchg
iret
sbb
test
std
std
push
sub
pop
or
insl
pop
out
push
or
jg
inc
add
push
mov
sahf
outsb
inc
es
in
mov
cmp
test
jle
aaa
sbb
dec
add
add
add
pop
cmpsb
dec
aam
dec
xchg
in
mov
cmp
aaa
outsl
enter
incb
ret
and
cmp
insl
push
jne
xor
xchg
dec
lret
inc
sbb
int3
in
sub
test
test
out
pop
jle
push
lods
sub
lahf
out
push
lret
ret
jmp
lahf
repnz
pop
loope
and
scas
das
push
lods
and
negb
ljmp
stos
fsts
sbb
pop
enter
push
outsl
inc
xorb
sbb
xchg
ret
add
sahf
push
mulb
out
mov
jp
addr16
sahf
ret
or
movsb
adc
js
xchg
scas
pmaxub
fimuls
inc
inc
inc
notb
mov
dec
imul
ss
cwtl
xchg
dec
aam
out
out
pop
jecxz
rclb
fnsave
xchg
into
test
ja
imul
aaa
shlb
popl
test
in
fcomps
pop
fwait
mov
mov
out
aad
pop
jnp
jbe
xchg
mov
xor
push
and
mov
sbb
repnz
stos
jl
pop
mov
lock
push
test
call
cmp
jle
pop
test
xchg
jns
shll
inc
insb
imul
stos
and
cmpw
daa
xor
push
mov
inc
mov
ficomps
leave
cmp
pop
addr16
mov
xor
andb
push
int3
and
jno
inc
push
repnz
cmp
std
sbb
ficoms
sahf
fstpl
xor
aas
ret
mov
dec
cmp
call
das
mov
lahf
jo
sbbb
pop
dec
adc
popa
sbbb
jns
push
repz
mov
xor
mov
inc
test
xchg
jae
test
int
push
aaa
dec
xor
jg
push
mov
dec
std
push
add
out
xchg
mov
repz
ljmp
mov
push
pop
cld
sbb
inc
ljmp
cmp
jne
fdivrl
pop
fldcw
les
fxch
sub
and
popf
test
sub
sub
div
jns
incb
dec
push
push
cmc
xchg
imul
decb
mov
loop
loopne
push
addb
lret
lds
test
std
xor
in
ds
in
inc
fwait
mov
mov
jge
iret
popf
stos
nop
and
jnp
or
sbb
jp
cmp
mov
adc
or
ret
loop
cmp
pop
std
movsb
ret
xor
mov
dec
jp
and
roll
inc
ljmp
mov
insl
and
or
jb
enter
mov
mov
ret
mov
in
push
shlb
stos
sub
adc
jl
insl
std
push
mov
std
jp
push
movsb
xor
mov
xchg
mov
pop
mov
lahf
shll
pop
clc
std
cli
mov
cmp
ljmp
test
push
pop
movsb
push
cmpsl
dec
pushf
bound
or
cli
cmc
jg
cmp
mov
rcr
mov
mov
loope
inc
orb
mov
stos
mov
bound
xchg
push
pop
dec
sbb
mov
sub
ja
cmpsb
mov
xlat
and
mov
dec
mov
insl
loope
and
cmp
mov
cmp
stos
xor
adc
jne
lret
jmp
test
adc
insb
and
aaa
pop
mov
mov
loopne
pushf
ror
les
jmp
cmp
add
sub
jle
mov
and
xlat
mov
cmp
jg
adc
and
pop
xor
int3
scas
cmpsl
ret
fldln2
and
cmp
sub
push
xor
adc
call
sbb
push
adc
out
movsl
dec
adc
sub
fidivrs
and
xlat
push
pop
jnp
hlt
fs
int3
dec
aad
push
sub
mov
cli
or
xchg
sub
fcompl
insb
push
ret
imul
pop
ljmp
push
mov
xor
sub
and
mov
lods
out
scas
lea
dec
adc
xchg
decb
mov
fadds
and
and
xor
ficompl
mov
rcr
lock
inc
incl
popf
push
push
mov
test
lea
mov
into
loop
arpl
in
add
mov
es
xchg
lahf
repz
repz
jne
jg
pop
aas
pop
sub
fcomp
adc
pop
mov
dec
stc
xor
lret
loope
mov
repz
aad
int
fildl
jmp
jl
fistpl
popf
adcl
xor
rolb
cmp
fs
sbb
lock
bound
addr16
jns
jne
push
add
inc
mov
sub
push
jo
fisttpl
pop
inc
xchg
fbld
push
pop
out
sbb
cltd
mov
imul
pop
ret
mov
pop
in
testb
data16
sub
inc
test
xchg
outsl
push
mulb
insb
adc
xor
jmp
push
jo
lret
push
or
cld
lcall
dec
xchg
pop
test
fsubrs
dec
imul
orb
js
and
pop
inc
out
lods
mov
jbe
ret
lods
mov
fldenv
and
stos
add
and
into
outsl
aaa
call
shl
or
lock
mov
inc
mov
mov
or
ret
movsl
and
push
mov
dec
aad
imul
adc
std
cmp
cmp
int3
cmpsb
test
ljmp
pop
leave
jb
cmp
push
scas
std
inc
mov
mov
lea
push
mov
mov
in
andl
dec
or
add
sahf
mov
fs
data16
icebp
sbb
mov
mov
push
int3
popf
sti
pop
push
lret
push
or
xlat
daa
fwait
xchg
push
and
inc
popa
enter
decb
add
and
sarb
movsb
cmpsl
cmpsb
cmp
add
or
jle
call
dec
xchg
and
push
cmpsl
sbb
in
andb
mov
pusha
or
xor
and
pushf
dec
subb
mov
test
inc
addb
aad
jae
call
push
icebp
dec
sar
fcoms
xchg
mov
jo
into
add
mov
nop
repz
mov
arpl
cmp
sbb
jne
in
xor
enter
push
push
xchg
enter
sahf
pop
in
dec
xchg
sub
mov
jo
adc
rorl
jmp
sarb
cmp
sub
cmp
shll
ss
lea
add
and
xor
adc
es
jo
adc
mov
out
add
push
movsb
out
xchg
test
cs
pop
pop
jl
xchg
lret
sbb
lods
cmpb
ja
mov
cmp
inc
pop
sub
mov
or
add
pop
std
xchg
push
movsb
xor
ret
shll
adc
loopne
sbb
push
push
cli
pop
enter
or
insb
push
cmp
sub
pop
mov
rorl
int3
or
cld
sti
andb
iret
or
mov
es
and
push
or
lea
cltd
pop
outsl
xchg
or
call
fnsave
orl
xchg
sub
int3
inc
mov
hlt
pop
and
mov
push
jp
jns
mov
sbbb
dec
addr16
xchg
jne
hlt
sbb
fldenv
cmp
sarb
pop
cmpsb
std
leave
sbb
mov
mov
jle
popf
push
adc
xor
pop
xchg
dec
cmovg
inc
jge
or
push
adc
ret
ret
cld
sti
inc
pop
aaa
enter
or
jecxz
jmp
mov
cwtl
inc
push
scas
scas
rcll
in
jns
mov
loop
mov
subb
shrl
xor
fdivs
adc
jge
xchg
pop
inc
idivb
shl
clc
adc
data16
ja
sahf
dec
les
mov
jmp
adc
gs
jo
in
sbb
pop
lret
lock
sub
mov
xchg
test
pop
mov
fstl
divl
xchg
and
or
in
sti
hlt
inc
aad
dec
mov
xchg
into
shlb
adc
inc
sbb
out
les
aam
notb
enter
mov
pop
xlat
call
mov
xor
lret
out
lock
inc
sarl
add
out
inc
xchg
sub
add
mov
dec
sbb
mov
icebp
test
fbstp
shll
test
out
sub
fwait
and
push
jle
clc
aam
ret
bswap
xchg
push
into
icebp
es
mov
cmp
dec
xlat
movsl
leave
sub
leave
mov
ss
push
scas
mov
xchg
mov
in
fisubrl
loopne
push
sarl
add
fildll
xchg
pusha
mov
push
ljmp
and
js
push
adc
aam
loop
cmp
mov
push
adc
add
lea
adc
sbb
addr16
out
ss
test
lret
sbb
int3
jle
adc
test
xchg
stos
adc
push
in
xchg
xchg
xor
mov
sbb
out
pop
rorb
jne
push
pop
fnstsw
movsl
arpl
int3
sbb
mov
lahf
sbb
ss
ja
outsl
fucomi
out
cmpsl
pop
jp
in
aam
adc
lea
cmp
mov
push
adc
mov
mov
and
pop
or
and
je
stc
mov
vrsqrtps
inc
mov
dec
out
and
pop
arpl
test
lea
clc
std
mov
movsb
mov
pop
jne
jmp
cmp
sbb
push
gs
clc
cmc
ljmp
sbbl
mov
sub
jo
adc
jb
decb
test
movsb
cmp
and
xchg
in
xor
pop
mov
dec
jbe
aaa
jnp
lret
cmp
and
ja
fadds
std
and
jg
arpl
jmp
cmp
lods
lds
std
push
cmc
add
jno
adc
sbb
lods
cmpsb
dec
pushf
cmp
sbb
ja
xchg
out
push
bound
push
lods
pop
and
push
push
xor
fistpll
cli
cmc
std
xchg
in
fidivrl
loopne
dec
xchg
sub
pop
dec
je
mov
mov
mov
mov
nop
and
cmp
notb
mov
fnstsw
xchg
or
fmul
stc
lret
cmp
and
lods
pop
dec
cwtl
cmp
lret
rorl
sti
sti
hlt
inc
cmpsl
fisubrl
cmp
mov
and
ret
inc
jnp
cld
push
out
in
and
dec
xchg
es
in
sbb
jo
adc
andl
mov
test
sbb
lods
fucomi
pushl
mov
cmp
xchg
lock
mov
pop
scas
out
or
inc
lahf
and
pusha
mov
push
leave
lods
mov
lcall
pop
xchg
dec
shlb
repz
adc
or
pusha
mov
jne
xchg
sti
jle
addr16
lret
cmpl
enter
or
xchg
loop
scas
enter
clc
call
or
ss
adc
insl
mov
jp
or
dec
test
mov
push
adc
out
lods
ret
push
adc
or
xchg
mov
jp
out
cmp
xor
lds
movsl
jb
inc
sbb
adc
mov
out
int3
mov
jecxz
fiaddl
pop
aas
decl
xchg
lds
shll
fs
mov
pop
ja
jb
lock
addr16
or
or
pop
adc
mov
pop
shll
xchg
pop
out
push
sub
stos
add
cli
dec
or
insl
les
and
in
pop
pop
and
das
add
jne
int3
ret
or
push
call
pop
loope
mov
pop
pop
frstor
lods
ret
pop
add
test
repz
mov
int
and
cmpsl
outsl
push
iret
cmc
jp
insb
fdivrs
mov
push
pop
mov
dec
inc
stc
daa
dec
pop
es
out
inc
sarb
mov
ds
xchg
mov
leave
insl
jae
out
arpl
and
pop
daa
repnz
pop
in
cmp
jbe
shr
xor
cmp
sub
push
pop
call
jo
cmp
pop
lock
loopne
push
push
xlat
pop
fisubrs
push
mov
inc
mov
mov
cwtl
dec
mov
pop
sahf
jle
insl
mov
out
fisttps
pop
cwtl
sti
dec
push
xchg
lods
aas
jne
imul
sub
ljmp
mov
mov
addb
push
ficompl
mov
arpl
ds
adc
int
jge
lock
push
mov
mov
cmpsb
adc
aas
adc
dec
jg
jo
adc
mov
insl
mov
push
mov
in
adc
mov
fistpl
adc
adc
scas
cmpsb
icebp
hlt
jge
adc
sub
xlat
call
sahf
repz
movsb
ret
sti
gs
out
sbb
dec
or
lea
int
movl
push
movsb
loopne
fidivrl
and
das
sub
stc
test
push
adc
push
loop
test
push
sar
mov
ss
fadds
test
mov
xchg
lods
or
clc
cmc
sahf
outsb
lcall
mov
push
adc
cmpsl
ret
xchg
cmp
enter
push
push
dec
jo
outsl
pop
mov
mov
adc
sub
xchg
jo
dec
jl
adc
push
mov
test
loopne
popa
push
les
jl
push
adc
cltd
jno
andl
lods
add
mov
mov
stos
push
xor
add
and
push
adc
lret
movl
aam
mov
out
xchg
dec
xchg
sub
scas
lds
loopne
pusha
push
dec
or
mov
pushf
xor
ljmp
fcmovb
addr16
mov
loopne
cmpsl
or
testl
or
pop
fstps
xor
cmp
push
imull
cmp
xor
mov
sbb
jns
ja
mov
pushf
jnp
das
and
jno
imulb
mov
push
xchg
jecxz
movsl
add
adc
xor
cmp
fwait
mov
jl
cmpb
dec
or
pop
add
mov
pop
push
cmp
cmpsb
inc
jbe
dec
inc
lock
pcmpgtw
push
sahf
out
xchg
into
xlat
pop
push
mov
repnz
dec
sti
inc
cmp
mov
sbb
loopne
dec
insb
push
pop
sub
ljmp
xchg
lds
and
cltd
dec
lcall
popf
movsb
xchg
adc
into
ds
mov
xorb
xor
mov
int3
icebp
repnz
cmpsb
jecxz
pop
xchg
dec
add
and
cwtl
inc
mov
int3
lret
mov
jmp
adc
subb
test
jle
pushf
imul
sbb
negb
adc
pop
in
mov
sbb
cmp
daa
jecxz
clc
test
sbb
mov
pop
jmp
stos
and
mov
lds
sub
pop
sub
jecxz
js
enter
inc
add
dec
jbe
cmpsb
add
mov
sbb
push
adc
push
dec
lahf
imul
jg,pt
lods
js
xor
movsl
pop
mov
divl
dec
js
jo
adc
xlat
sbb
rorb
push
or
fcomps
mov
popa
aam
mov
adc
pop
jge
sbb
js
nop
arpl
mov
dec
inc
daa
pand
clc
mov
jo
adc
push
sbb
mov
loopne
fnstcw
push
popa
fdivrl
add
cli
das
jge
call
sub
adcl
or
jnp
dec
jp
in
aas
sub
adc
in
mov
mov
inc
fs
imul
notl
cmp
mov
dec
fisubrl
in
mov
pop
mov
dec
test
sbb
xchg
adc
xchg
jb
sbb
pop
in
in
pop
fiadds
mov
mov
xor
inc
incb
loop
fsubrs
push
repz
push
lock
leave
lea
inc
aad
adc
notb
ret
adc
dec
loopne
ss
and
lcall
test
xchg
xor
pop
adc
dec
xchg
mov
mov
out
ret
ja
std
sub
test
popf
dec
cmp
dec
scas
pop
into
movsb
push
pop
hlt
mov
push
dec
push
sbb
dec
xchg
out
cld
les
adc
sbb
pop
mov
push
lea
or
jmp
aam
movsb
mov
push
clc
fidivrl
push
jae
test
stc
inc
std
xor
jecxz
sub
fdivs
push
jge
insb
imul
ficoml
outsb
fistpll
or
inc
mov
push
adc
dec
pop
sbb
inc
mov
push
adc
in
xchg
lods
or
clc
cmc
decb
fisttpl
stos
mov
jno
jae
sub
gs
cld
les
adc
lods
push
movsb
cmp
mov
das
add
mov
jmp
push
cmc
pusha
jecxz
mov
loopne
fstpt
daa
add
jo
mov
shlb
js
adc
inc
ret
or
mov
xor
mov
je
mov
sbb
mov
mov
test
outsb
fucomi
xor
dec
push
jl
loop
subb
jb
pushf
jns
xchg
or
rorb
or
add
in
mov
aaa
mov
mov
sbb
mov
shrl
xchg
scas
mov
add
mov
pop
pop
push
dec
lods
adc
in
aaa
mov
cmpsl
fwait
pop
jp
inc
xchg
int3
jae
jo
adc
loope
and
stc
sbb
adc
push
adc
pop
imul
and
cmp
jb
dec
adc
into
sub
pop
pop
add
add
jo
adc
gs
pop
mov
outsb
and
xor
push
adc
mov
movsb
sbb
pop
pop
and
mov
imulb
fwait
sub
repz
push
mov
mov
pusha
lea
pop
testb
pop
cli
shrb
stc
sub
jmp
sub
jno
adc
rcl
loop
stos
fldcw
leave
clc
or
adc
cmp
ja
les
movsb
sub
sahf
mov
jno
adc
cmc
not
arpl
aad
mov
jb
adc
sub
mov
fsub
cmp
mov
and
insb
xchg
jno
cli
add
ret
cs
mov
fstp
les
clc
jo
adc
adc
push
or
adc
jo
adc
mov
push
adc
fwait
or
mov
out
dec
jae
xor
mov
dec
mov
in
dec
out
stc
leave
sub
orb
sub
hlt
repnz
mov
pop
insl
in
jnp
jno
adc
lds
jmp
cmp
inc
add
pop
scas
iret
jns
jmp
pop
es
outsb
push
xchg
out
loop
dec
dec
int3
enter
adc
push
adc
pop
sbb
fmull
adc
imul
outsl
hlt
cmp
fnstenv
addb
mov
popf
sub
cltd
movsl
adc
jl
jo
adc
movsb
rolb
jle
inc
jae
adc
scas
cmp
cmp
sahf
push
adc
and
push
adc
pop
les
adc
call
ja
fmuls
mov
lea
jno
adc
pop
or
push
adc
clc
jo
adc
push
jae
enter
jo
adc
mov
fisubs
push
adc
test
push
mov
aad
mov
push
adc
adc
movsb
pusha
add
loop
xchg
cmp
mov
addl
sbb
push
xchg
bound
push
test
mov
sbb
add
push
push
cs
and
lahf
sub
push
cmpsl
dec
adc
mov
fisttpll
adc
mov
mov
test
push
nop
into
inc
dec
pushf
cmp
inc
nop
and
mov
push
add
clc
ret
cmp
scas
ret
sbb
outsb
mov
jl
and
add
add
pop
test
arpl
adc
iret
nop
jo
adc
icebp
ret
sbb
jo
enter
inc
jae
adc
imul
sahf
push
adc
mov
sub
movsl
dec
pushf
imul
sbb
mov
or
jl
mov
and
adc
aaa
test
std
adc
jo
adc
fisubrs
sub
fbld
mov
outsb
fidivs
push
adc
and
movsl
mov
push
cmp
test
sub
ds
addb
loopne
cld
shrb
lea
repnz
sub
daa
mov
les
pop
jp
cmp
jae
adc
lahf
push
pop
and
sbb
push
jae
adc
scas
outsl
fs
xchg
mov
pop
dec
lods
jo
adc
scas
sbb
xor
loope
mov
jns
lock
xchg
ljmp
cmp
nop
jmp
add
xor
popf
iret
jns
jns
data16
jg
adc
cwtl
loop
lods
scas
or
jns
std
pop
pop
sub
mov
subb
jno
adc
mov
mov
cmp
jb
out
or
adc
mov
ficoml
mov
mov
add
ret
test
aas
aad
add
push
adc
jae
lcall
cwtl
jo
adc
jne
jle
les
adc
jnp
in
pop
mov
xadd
inc
lret
mov
mov
test
xor
push
lods
sti
lock
push
jmp
popf
xchg
adc
lea
addl
cmp
push
xchg
int
scas
pop
out
int
jno
adc
das
push
and
je
ss
cmpsl
pop
daa
inc
xchg
call
push
dec
adc
push
adc
sbb
mov
adc
fwait
push
adc
push
clc
jo
adc
lods
sbbl
push
adc
mov
adc
adc
xor
cwtl
jecxz
adc
fnstenv
jp
push
fs
adc
or
scas
icebp
test
repz
xor
cld
dec
aaa
mov
pop
adc
add
pop
adc
xchg
push
std
sbbl
xchg
sahf
movsb
fnstenv
dec
cwtl
push
cmp
pop
mov
ret
push
adc
sbb
insl
sbb
adc
pusha
jno
adc
in
push
mov
mov
clc
adc
mov
enter
mov
jo
adc
scas
loopne,pn
and
xchg
push
jmp
pushf
jecxz
pop
stc
repnz
out
mov
jo
adc
jge
adc
shlb
pusha
pop
xor
or
push
jg
fcomp
or
push
adc
push
test
std
or
or
cmp
push
adc
cmpsl
out
pusha
dec
nop
and
in
push
adc
ds
jae
adc
ret
jo
in
push
adc
mov
push
adc
fists
jae
adc
es
pop
inc
mov
cmp
push
adc
fidivl
out
or
push
in
add
mov
ret
fnstenv
fsubs
xchg
xchg
mov
aaa
outsl
lods
int
sti
std
push
or
jnp
mov
mov
pop
jb
mov
add
push
adc
rorl
dec
cmp
ljmp
push
sub
incl
mov
aam
push
adc
fists
jno
adc
add
jo
adc
rcrb
call
or
adc
enter
scas
push
std
jno
sbb
inc
dec
jae
adc
sbb
xchg
cmp
jo
adc
sbb
inc
leave
jge
push
lods
pop
fiadds
mov
enter
lock
mov
sbb
orl
xor
in
pop
imul
fwait
ret
jae
std
or
std
jo
ljmp
pop
bound
cmpsb
xlat
or
cmp
sbb
in
sub
push
jmp
mov
test
jg
fidivl
scas
les
gs
out
mov
add
pop
push
lahf
fcmovu
sbb
lahf
scas
xchg
incb
sbb
add
stos
and
push
xchg
es
aas
daa
ret
in
pop
mov
jmp
dec
inc
fstpt
sbb
pop
push
pop
les
push
daa
sbb
aad
jp
sub
mov
leave
pop
test
testl
addr16
mov
mov
adc
ljmp
ljmp
sahf
dec
mov
sahf
test
cmp
inc
and
cmc
lea
cltd
popf
sbb
jle
mov
xor
aas
xlat
push
fsubrs
push
adc
ret
je
mov
jne
jnp
mov
xor
jle
fbld
or
dec
pusha
pushf
push
adc
test
addr16
pop
aad
ds
stos
xchg
jmp
push
jnp
fs
lds
xchg
xor
push
adc
add
push
sub
sbb
xor
pusha
pop
lds
into
inc
loopne
and
pushl
add
xor
and
cmp
adc
fdivrl
or
ret
and
dec
xchg
daa
shll
mov
push
scas
pop
pop
sub
push
adc
and
mov
adc
push
adc
test
and
data16
mov
push
stos
pop
pop
xor
push
adc
mov
imul
pop
mov
pop
adc
xchg
jns
arpl
aam
mov
xchg
test
or
dec
lds
int3
xchg
scas
jno
fsubrl
xor
mov
and
xor
add
mov
jb
mov
mov
std
imul
and
lods
call
inc
fldenv
and
outsb
mov
stc
test
jmp
and
aam
test
ds
mov
adc
stos
push
idiv
test
call
sub
loopne
jle
sbb
dec
es
add
push
adc
adc
cmc
add
adc
dec
and
out
push
pop
xor
icebp
testb
rol
jo
adc
or
popf
push
adc
call
in
rcrl
xchg
mov
adc
push
std
adc
push
adc
fidivs
gs
aam
add
pop
sbb
adc
and
add
jno
adc
pop
mov
fidivl
pop
mov
pusha
sub
xchg
and
push
push
std
adc
jo
adc
jno
and
lods
scas
out
out
test
mov
daa
das
add
popl
inc
cmpsb
shrl
pop
or
push
insl
inc
sub
jl
sbb
enter
call
pop
pushf
jbe
push
dec
dec
jo
adc
sbb
jae
sub
movsl
dec
pushf
imul
std
jo
ljmp
sahf
out
pop
sbb
cmpsl
ret
and
jae
enter
sub
adc
insl
mov
cwtl
jo
adc
repz
pushf
cmp
popa
and
and
call
jno
adc
hlt
push
sahf
jno
aaa
adc
outsl
in
xchg
jmp
add
push
push
pop
inc
js
sub
ds
push
cmpsl
mov
shlb
adc
mov
ja
cmc
ret
inc
mov
into
sub
push
adc
icebp
push
cmpsl
dec
xchg
mov
lods
lds
mov
pop
jg
dec
xchg
push
xor
test
jge
sbb
adc
push
jmp
push
mov
cld
movsl
mov
push
dec
push
fmull
loope
pop
mov
loop
xchg
and
aas
or
pop
or
ds
xor
push
adc
xor
aam
fsubl
dec
popf
cmp
popf
jge
mov
add
adc
add
cwtl
hlt
imul
xchg
dec
nop
mov
push
adc
push
or
sub
ud2
str
jae
inc
cwtl
push
js
das
lret
jne
fcomps
add
loop
or
adc
xor
inc
cli
idivb
mov
aas
in
cmp
shrb
int3
mov
sub
stos
call
dec
mov
into
pop
pop
test
and
enter
je
shlb
rolb
fcoms
test
adc
sbb
fdivs
test
sti
loope
popa
test
add
mov
pop
mov
jno
adc
movsl
pop
xchg
or
je
popf
pause
and
or
adc
sub
mov
pop
iret
shlb
push
aaa
ds
sub
jmp
xchg
pop
add
imul
xor
fyl2x
into
add
movb
adc
in
and
mov
les
adc
loope
call
xor
cmc
xlat
test
sbb
xchg
push
jmp
insb
fadd
outsl
ja
add
test
enter
xor
cmp
adc
je,pt
iret
push
fadds
push
adc
push
adc
pop
jne
fnsave
jno
adc
adc
or
push
or
push
in
frstor
std
out
cmp
mov
hlt
jo
adc
push
arpl
cwtl
fisubrs
mul
sbb
inc
shlb
fdivs
adc
lret
add
dec
fdiv
ret
inc
sub
test
sbb
fsubrs
adc
push
jl
and
idivb
gs
dec
les
xchg
push
inc
in
pop
adc
ds
and
mov
mov
inc
outsb
mov
mov
iret
movsb
mov
ret
pushf
sub
mov
adc
lods
or
dec
pop
ljmp
jb
jmp
push
jg
add
adc
leave
adc
push
mov
ds
mov
call
jb
adc
or
in
mov
outsb
pop
in
fcomi
sbb
or
insb
sub
stc
sub
or
push
in
cmp
adc
sbb
sahf
push
adc
push
adc
mov
or
inc
jae
adc
stos
mov
sbb
adc
or
push
cmc
add
xchg
into
les
adc
xchg
cmp
shll
lea
das
ret
std
push
cmc
add
push
adc
fidivl
push
adc
jmp
mov
jo
push
adc
add
mov
lahf
sub
mov
cmp
inc
dec
inc
mov
dec
test
add
mov
lahf
and
xor
aaa
push
addb
fisttpll
mov
sub
lret
std
aam
mov
aam
test
push
cmp
repz
das
les
add
push
pusha
pop
aam
xor
repz
xor
aam
push
sub
push
cmp
cltd
shl
dec
add
add
jle
and
aam
daa
fidivl
enter
aad
mov
xchg
ljmp
mov
jp
push
fidivl
int3
adc
adc
inc
jge
call
inc
jae
adc
adc
dec
and
xchg
mov
adc
push
pop
jmp
fldt
lcall
fs
cltd
cmp
jb
adc
les
inc
inc
mov
dec
jp
jo
adc
aam
dec
sahf
cmp
push
mov
add
test
shrl
cmpsb
lock
adc
cltd
cmp
stos
pop
adc
or
pop
outsb
xchg
jmp
fdivrs
enter
out
mov
sarl
jmp
inc
mov
aam
push
adc
lock
aad
xor
call
push
adc
jp
popa
push
clc
jo
adc
mov
xor
and
jo
adc
test
mov
mov
mov
xor
into
movsb
mov
push
adc
cmc
cwtl
jo
adc
stos
loop
jecxz
jo
adc
inc
mov
sbb
ficomps
dec
jae
adc
jmp
dec
pushf
add
cmc
aad
int
insb
mulb
scas
ja
cmp
and
jp
mov
jb
cmc
insb
mov
in
xor
adc
fsts
test
pop
add
fs
xor
mov
cmp
adc
adc
pop
and
out
dec
xchg
push
mov
push
adc
sub
mov
jno
in
add
std
repnz
jo
adc
mov
rcr
or
arpl
leave
sahf
jnp
fwait
or
adc
fsubrs
sub
push
lahf
xor
cmpsl
pop
stc
test
xchg
insb
clc
push
dec
xor
or
jno
adc
mov
shrl
jo
adc
inc
push
dec
sbb
sub
jo
adc
subl
add
adc
repnz
mov
lea
sbb
clc
lods
sbb
scas
in
push
jo
insl
addr16
sub
cmc
lahf
cmc
or
adc
lea
shrb
push
jecxz
inc
jecxz
mov
int3
pop
mov
push
add
push
adc
push
adc
lahf
push
std
sbb
stos
jl
mov
repz
mov
and
pop
stos
pop
adc
imul
lcall
inc
stos
jne
jo
adc
ret
scas
xchg
xchg
or
in
pop
adc
mov
pop
adc
mov
in
pop
adc
push
mov
adc
cmp
jle
and
cmp
cwtl
js
mov
and
sub
mov
andl
sbbl
push
lods
dec
xor
lea
adc
push
adc
push
scas
pop
mov
sbb
dec
ljmp
push
ss
sahf
push
adc
sahf
outsl
jb
xor
and
daa
and
sub
jo
adc
add
mov
repnz
repz
pop
xchg
sub
test
movb
loopne
fs
cmc
popa
pcmpgtd
and
push
adc
sbb
cmpsl
ret
sbb
jo
sbb
std
pop
loope
adc
mov
mov
arpl
jb
cmp
aaa
inc
movsl
orb
ljmp
push
adc
fldt
cmp
das
inc
adc
jl
add
push
mov
pop
out
bound
outsl
fidivrl
out
lock
cmpsl
dec
int3
shrl
test
adc
push
icebp
cs
loopne
mov
fidivs
push
adc
sar
inc
lret
fsubl
dec
pop
inc
and
xchg
sub
mov
mov
out
lock
data16
adc
add
or
mov
mov
test
or
lret
mov
ret
call
sub
sub
dec
jp
jae
adc
in
inc
and
mov
sbb
sub
das
push
test
dec
mov
adc
pop
icebp
push
pop
pushf
adc
pop
ret
lcall
mov
cli
push
inc
mov
cmp
mov
jnp
cwtl
mov
imul
add
inc
jmp
mov
popf
mov
or
loopne
pop
xchg
jle
pop
push
xor
jp
sub
adc
mov
aas
stos
jle
nop
pop
nop
and
pop
adc
xor
fsts
sbb
adc
push
adc
fldl
negb
int3
call
mov
mov
mov
out
xchg
mov
add
jne
leave
mov
or
stos
sbb
bound
xchg
sub
popf
push
adc
jg
mov
jo
adc
repnz
inc
pop
mov
cwtl
jle
sbb
adc
loop
ss
jb
outsb
rorb
xchg
and
es
outsb
ficomps
fmuls
cld
cmp
decb
jae
adc
mov
push
adc
pop
or
fsubr
jl
ds
arpl
mov
fdivr
dec
pusha
in
clc
cmpsl
jmp
ja
push
outsl
pushf
mov
or
mov
pop
lea
mov
into
mov
ljmp
pop
repz
push
adc
xor
aad
mov
incl
mull
jl
cmp
xchg
test
aaa
xor
stos
and
insb
in
lret
jnp
cmc
and
xor
test
cs
mov
sahf
ljmp
mov
adc
adc
clc
jo
clc
xor
add
xorb
les
fldenv
adc
movsl
adc
cmp
test
leave
sbb
adc
push
adc
add
mov
mov
push
aas
aam
jo
adc
sbb
call
sbb
mov
fs
xlat
in
add
cmp
push
adc
cltd
pop
jo
das
leave
adc
adc
mov
mov
test
sbb
lock
push
call
mov
lret
hlt
inc
aad
adc
or
adc
or
sub
sub
dec
popf
rclb
pop
mov
add
and
add
pop
ljmp
into
inc
incl
adc
adc
inc
iret
xor
pop
adc
push
pop
xchg
jo
adc
insl
das
stos
out
icebp
lods
xor
sub
mov
jnp
and
add
int3
enter
insl
mov
lea
sub
ja
mov
je
or
sbb
lds
das
push
mov
pop
mov
mov
sbb
or
sbb
out
adc
jne
push
cmc
popa
cmovbe
je
or
out
jmp
pop
repnz
scas
dec
hlt
les
clc
jo
adc
fstpl
mov
test
mov
inc
incl
adc
jb
aad
imul
inc
jno
adc
push
pushf
jo
adc
cld
jecxz
adc
mov
mov
ds
pop
mov
and
sub
push
adc
arpl
mull
jp
mov
adc
pop
inc
aad
repnz
adc
sub
cmpsl
sbb
cmp
pop
adc
add
cli
pop
inc
jno
adc
mov
adc
xor
or
outsl
rolb
adc
push
jecxz
icebp
push
lods
roll
pop
jo
push
enter
push
adc
push
mov
hlt
jo
adc
pop
mov
outsl
sub
push
adc
add
into
les
sub
push
out
jge
push
add
xor
adc
xchg
cmpsb
dec
int3
mov
mov
sbbb
insb
mov
mov
xor
cmpl
adc
sbbb
xchg
in
mov
jns
lock
repz
dec
fisubs
add
adc
jle
and
loop
pop
addl
sub
adc
mov
stos
movsl
cld
aas
pop
std
or
push
ret
xchg
loop
test
sub
push
adc
dec
and
mov
jae
add
xor
jo
push
adc
out
sbbb
test
mov
jne
xchg
imul
xor
pop
adc
adc
push
pop
test
into
adc
push
movsb
push
ss
sbb
push
adc
imul
cmp
push
or
and
es
cmp
jbe
fstpt
mov
shrb
push
dec
xchg
es
test
add
push
adc
ja
inc
orb
push
stos
mov
adc
pop
mov
jl
jo
adc
dec
sar
pop
div
repz
rcr
and
sbb
and
mov
push
les
inc
nop
test
push
adc
clc
jo
adc
push
adc
push
adc
and
and
out
lock
adc
sub
outsb
sbb
jbe
sbb
add
jo
adc
cltd
nop
jo
adc
enter
and
daa
jne
icebp
pop
jmp
cmp
mov
daa
jno
pop
daa
fsubrl
xor
ret
fadd
mov
jecxz
js
dec
mov
test
jg
imul
les
mov
cmp
insl
rol
mov
push
dec
mov
movsl
sti
fisttpl
mov
jae
pop
adc
push
push
lret
adc
mov
xor
lods
outsl
cmp
bound
mov
push
inc
jecxz
popf
lods
pop
mov
into
push
mulb
push
pop
hlt
jo
adc
sub
dec
xchg
and
call
stc
lods
mov
jno
adc
incl
push
lods
pushf
xor
xor
rorl
addr16
adc
add
pop
cwtl
scas
push
push
movsb
dec
cmp
loop
cmp
and
sbb
outsl
sbb
push
hlt
ljmp
and
call
fisubrl
mov
dec
rcr
jg
mov
xchg
push
ret
cs
gs
das
movsb
dec
lds
and
mov
std
mov
das
fildll
addr16
xchg
and
fmuls
insb
dec
pushf
add
fdivl
outsl
fbstp
cli
adcl
insl
and
lods
dec
ficoms
cmp
dec
mov
cmc
add
jo
adc
aad
stos
xchg
push
ret
cmp
test
add
push
xchg
test
insl
loope
pop
in
xchg
sub
dec
rorl
jb
or
test
std
push
pusha
pop
ret
mov
sub
or
mov
icebp
and
outsl
push
dec
or
pop
cwtl
jo
adc
xor
jecxz
imul
mov
cltd
aaa
outsb
ficoms
imul
or
sbb
popf
imul
es
cld
cld
call
ljmp
scas
lods
jle
daa
mov
xchg
mov
sbb
inc
insl
fisttpll
roll
jo
adc
or
dec
nop
cmp
repz
stos
roll
out
pop
pop
add
or
insb
cmp
mov
test
cwtl
push
jl
xlat
mov
inc
ror
aam
inc
xor
or
pop
adc
add
xchg
dec
mov
jb
adc
jl
push
or
pop
int3
loopne
pop
xchg
fmull
aad
nop
jo
adc
ja
mov
sahf
push
repnz
add
aam
jo
call
sbb
movsb
and
stos
cs
push
push
stos
hlt
repz
push
adc
and
mov
mov
pushf
jo
adc
push
mov
sub
das
inc
lcall
jno
adc
and
mov
sub
jno
adc
imul
xchg
sub
adc
in
adc
xchg
push
jg
fdivl
adc
adc
jo
adc
push
adc
sub
mov
push
fcompl
rorl
jge
push
rol
xor
mov
xchg
and
dec
push
daa
js
pshufw
push
aam
push
std
shr
dec
shlb
mov
mov
int3
dec
lahf
cmp
push
adc
jbe
mov
pop
inc
std
mov
loope
mov
mov
popa
xor
lds
or
pop
fldenv
pop
sub
out
int
out
cmpsl
push
out
addb
mov
movsl
pop
xchg
dec
sbb
test
xor
xorl
inc
scas
dec
pop
jae
and
cmp
gs
push
or
in
push
addr16
mov
cli
stc
jo
xor
test
add
lahf
popf
pop
fisttps
pop
lds
cwtl
in
loopne
ljmp
lea
push
jle
and
pop
jo
ljmp
imul
int3
adc
or
pop
gs
sahf
mov
lods
lahf
movsb
fcmovnbe
adc
cmc
enter
cmp
add
es
mov
mov
into
sbb
adcb
in
pop
fimuls
sahf
addr16
fidivrs
enter
mov
orb
sti
hlt
mov
imul
jb
or
insl
mov
lock
lods
shrl
rcr
jb
nop
mov
pop
pop
sahf
push
jb
fimuls
loopne
scas
xchg
jp
sub
dec
outsl
pushf
sub
or
rcrb
or
mov
aam
mov
inc
mov
ds
push
mov
sbb
enter
subb
cli
mov
push
cs
imul
pushf
jnp,pn
fadds
adc
aaa
pop
mov
add
adc
fadds
adc
test
lods
mov
sub
lret
mov
loopne
scas
and
cmpl
jle
jl
mov
dec
xchg
pop
shlb
ds
sub
rorl
xor
sbb
push
pop
mov
adc
mov
xor
pop
scas
and
incl
gs
and
mov
inc
mov
insl
push
xor
fidivl
fs
ss
lret
lret
or
xor
and
push
pop
mov
push
scas
in
dec
jg
roll
fnstcw
and
or
mov
shr
in
mov
pop
push
push
and
mov
add
adc
mov
pop
pop
divl
adc
add
test
out
mov
fimull
mov
adc
jo
lret
pop
aam
int
cli
notl
aas
test
push
xchg
ds
lcall
insl
xchg
test
push
gs
add
fidivs
sub
fstl
push
cld
aam
lcall
push
adc
popa
test
mov
aad
pusha
pop
dec
jl
inc
xchg
gs
loope
fs
sbbl
pop
nop
jo
adc
ds
cld
mov
dec
pop
mov
loopne
rcl
scas
in
jnp
adc
inc
lock
inc
jo
mov
xor
scas
stc
adc
addr16
sub
xlat
or
push
lods
pop
push
jg
sbb
add
dec
push
int3
imul
jae
adc
je
xchg
xchg
xor
jp
lret
jae
push
xor
int
into
outsb
mov
call
sub
testb
in
push
inc
jns
fs
aad
call
sbb
pop
jge
and
lds
sbb
jae
mov
jns
cld
or
pop
inc
daa
popf
xor
fnstenv
daa
pop
pop
stos
push
sub
push
sbb
xor
jae
gs
or
xchg
xchg
es
xchg
iret
rcr
or
cmp
adc
jae
adc
loope
or
scas
frstor
ljmp
pop
jae
sti
nop
loop
cmpsb
in
mov
jno
fwait
and
xchg
aaa
outsb
adc
inc
lahf
fdivrl
test
xchg
clc
cmc
lods
dec
dec
in
fldenv
cmc
std
les
js
jge
sbb
push
sbb
popf
jecxz
das
inc
pop
mov
add
and
xchg
mov
cmp
not
ret
int
pushf
pop
ret
aaa
loope
dec
call
lock
into
pop
push
lret
fiadds
and
and
pop
jg
cmp
xlat
and
adc
adc
xchg
cmpxchg
lock
mov
enter
out
mov
std
pop
pusha
pop
mov
pop
fstl
push
mov
aad
adc
cmc
mov
pop
mov
dec
xchg
push
inc
out
and
cmp
out
nop
and
lea
ljmp
insb
fidivl
and
cmc
mov
adc
ret
pop
movsb
popa
cmp
shl
mov
icebp
and
adc
and
cmp
dec
outsl
fcom
cmp
push
cmp
pop
mov
cmp
and
fdivl
xchg
cmp
lret
fmuls
mov
sbb
push
in
adc
xor
mov
scas
test
in
jb
adc
lcall
les
push
and
adc
lods
shlb
sbbb
mov
push
insb
cmpsb
dec
pushf
lock
enter
movsb
xchg
sub
or
pop
adc
cmp
push
lods
cs
roll
pop
aaa
outsl
stos
xor
testb
ficoms
rcrb
sub
sub
addb
xchg
ljmp
adc
insb
mov
xor
adc
pop
je
adc
das
int3
cwtl
add
add
sahf
in
fildll
cmovns
call
movsl
dec
pushf
push
xor
enter
push
ja
cmc
add
push
adc
add
adc
xchg
pop
sub
pop
mov
imul
mov
adc
test
aad
jmp
mov
addl
mov
mov
test
and
jmp
shrl
shl
jecxz
sub
xor
int
loopne
push
pop
mov
es
dec
pop
mov
xor
sub
dec
jge
xchg
mov
dec
jne
pop
xor
jge
stos
test
mov
shll
iret
sahf
arpl
cmc
and
sub
xchg
jmp
ss
fwait
push
sarb
pop
xchg
cwtl
data16
scas
test
lods
shl
aam
jge
scas
mov
cmpl
xor
bound
or
fistpl
mov
jo
mov
xlat
add
jo
adc
aas
mov
jnp
mov
pusha
jno
adc
sub
enter
adc
into
cs
add
movsl
bound
iret
jp
lods
mov
pop
out
mov
movsb
jmp
mov
dec
xchg
repz
or
mov
sub
xor
repz
push
jg
idivb
or
push
adc
cltd
shlb
mov
and
outsb
push
push
mov
xchg
pop
sti
movsl
mov
mov
mov
xchg
int
fs
jo
adc
test
add
mov
mov
push
xchg
push
lahf
cmp
mov
adc
dec
jb
stos
jp
rcl
push
test
loop
mov
ds
jmp
lock
insl
sbbl
push
adc
mov
and
out
dec
push
les
and
dec
cmp
rcrl
push
adc
jle
mov
lret
cmp
fisttps
mov
jge
dec
xchg
shll
lods
sbb
mov
sbb
fisubrs
imul
cmp
and
and
fisubs
aam
cld
mov
fadds
adc
int3
jmp
add
jmp
mov
nop
push
or
jb
pop
cmp
push
addr16
scas
xchg
jl
mov
cmp
sahf
test
imul
jg
jno
add
aad
push
lea
cmpb
shlb
movsbl
add
mov
clc
sahf
sub
add
jo
std
adc
lret
mov
loope
data16
lock
adc
jl
mov
jno
pop
std
cli
cmc
jg
out
pop
and
adc
and
notl
jb
pop
and
adc
idiv
cli
sbb
dec
xchg
mov
fcompl
ds
xchg
mov
mov
cs
pop
and
mov
loope
push
jecxz
push
mov
mov
inc
sbb
incb
jbe
pop
dec
cmp
xor
popf
cmp
sbb
js
mov
mov
push
jbe
fwait
xor
shr
in
pop
fistpl
jl
nop
rcr
test
or
cli
cmc
pushf
outsb
pop
es
mov
sbb
hlt
idivl
mov
pop
sub
push
sti
or
push
rorl
pop
sahf
push
cmp
in
mov
in
mov
aam
sub
pop
fimull
enter
cmpsb
pop
ret
dec
push
test
push
shrl
repz
xchg
out
sbb
and
int
xor
fistl
pop
dec
xorb
cmc
data16
mov
push
repz
lock
nop
cmp
outsl
and
jno
or
xor
xor
pop
pop
adc
pop
aam
mov
in
mov
jae
and
and
mov
aas
lret
out
scas
sbb
inc
lret
out
and
ja
test
sub
mov
mov
sub
xchg
cld
adc
leave
scas
push
dec
neg
out
pop
lea
lods
insl
test
test
sbb
xchg
cs
mov
adc
dec
dec
testl
jo
push
adc
mov
fwait
stos
aam
mov
and
or
ljmp
test
mov
mov
mov
and
mov
mov
and
sub
mov
rcrb
pop
push
repnz
fmuls
out
push
nop
xchg
test
and
adc
mov
cmp
mov
test
ror
fcoml
mov
aad
sub
cmp
xor
repnz
or
lret
repnz
jle
cltd
xor
sub
jbe
outsb
test
cmp
aas
pop
xchg
pusha
add
aam
cmp
dec
cltd
mov
inc
mov
or
mov
add
push
cmp
mov
xchg
test
jmp
orl
loopne
scas
shll
dec
popf
sti
sbb
xorl
cmp
push
bound
fdivrl
jg
fstpt
js
loop
lahf
xchg
cmp
repnz
jae
xorps
push
xchg
pop
das
stos
jo
lds
dec
sbb
mov
sar
loop
es
mov
inc
push
push
jno
jnp
neg
push
xor
int
sub
jo
rorb
xor
cmp
shlb
aad
mov
mov
insl
ja
mov
in
add
inc
lea
mov
cli
mov
jnp
jo
adc
add
addr16
xchg
repz
add
mov
inc
daa
and
push
in
mov
std
scas
shlb
je
js
push
adc
cmp
imul
sbb
mov
fcmovnb
add
sbb
mov
je
or
xor
adc
es
dec
jp
push
jne
dec
xchg
insb
cwtl
fcom
or
xchg
mov
pop
ss
movsb
mov
jnp
fnstenv
mov
lock
xor
add
inc
push
rcr
pop
fs
push
push
ljmp
push
cmp
jmp
sub
ja
mov
sbb
or
push
aad
inc
es
rcr
adc
adc
arpl
pushf
and
or
mov
loope
fadds
adc
jge
jbe
leave
dec
sbb
mov
iret
pop
and
adc
insb
fistpll
mov
std
hlt
stos
push
movsb
cmp
fistpll
insb
sbb
repz
push
cmpsb
lds
xchg
test
dec
or
repz
loopne
sub
and
xchg
pop
out
cs
pop
mov
and
orl
sar
gs
shlb
jmp
andb
dec
mov
lea
xchg
test
add
es
aas
insl
push
mov
mov
push
stc
lret
or
insl
fistpll
add
push
jle
es
aas
sub
mov
frstor
sbb
mov
sar
je
cli
jg
aam
mov
ret
xor
sub
arpl
cli
lret
rcrb
or
test
in
test
rcrb
and
jge
shlb
pop
dec
mov
lea
pushf
dec
orb
add
je
fninit
loopne
xchg
add
push
lods
mov
imul
push
push
mov
adc
adc
xor
test
imul
push
insb
lock
adc
pop
mov
pop
and
push
pop
and
sub
fsubrs
into
jge
sub
push
adc
pop
fcoms
adc
push
adc
popf
aas
cmp
sbb
insl
and
adc
pop
add
sbb
insb
fbstp
sub
jns
mov
fcompl
jp
loopne
and
push
adc
sub
fwait
xor
rcr
pop
adc
sbb
aam
dec
adc
dec
jp
pop
xchg
pop
or
inc
xor
movsl
popf
sub
push
adc
in
cmp
mov
ljmp
test
jnp
mov
push
add
cmp
je
adc
insl
int3
je
sbb
adc
stc
imul
mov
jle
mov
add
mov
jle
lock
vpmadcswd
ja
cmp
inc
and
add
jno
adc
cs
subl
jns
pusha
sbb
mov
jno
adc
jge
push
jp
pop
imul
pop
jle
je
pop
adc
lret
push
add
mov
sbb
add
push
adc
xchg
rol
push
adc
mov
sbb
add
ret
ds
adc
iret
insb
fdivs
sbbb
sub
inc
rcr
jle
push
mov
pop
lahf
popa
loope
jecxz
xchg
and
mov
pop
adc
in
mov
mov
repnz
adc
cmp
or
rcrb
add
pop
stos
inc
loop
test
aam
pop
adc
divl
cmp
pushf
xchg
pop
lcall
sub
push
adc
jbe
mov
inc
inc
dec
jo
adc
insl
and
mov
movsl
inc
add
or
adc
push
movsl
add
imul
mov
pop
icebp
call
scas
in
mov
xlat
pop
es
cmpsb
in
dec
xchg
mov
nop
dec
pushf
sub
sbb
mov
shl
jge
adc
cltd
ja
mov
ret
push
imul
or
rol
movsl
mov
jmp
test
jbe
sbb
rcrb
or
data16
fwait
mov
push
adc
push
adc
mov
push
adc
and
adc
cli
std
mov
push
movsb
fsubrl
inc
cmp
rolb
lds
sub
push
outsb
stos
lods
mov
mull
dec
cmp
mov
icebp
cltd
and
stos
add
inc
rolb
push
lods
pop
mov
fsub
pop
push
test
fdivs
adc
fadd
jg
jne
push
cmc
add
jno
adc
xchg
into
les
adc
test
ljmp
sbb
fbld
add
loopne
call
fidivrl
cld
add
lea
inc
lods
fs
adc
cmp
loopne
insl
lret
mov
and
movsl
shrb
sub
jo
adc
push
pop
or
add
movsb
popa
out
test
push
inc
xorb
icebp
sbb
in
sub
adc
add
std
ljmp
out
sbb
pop
cwtl
faddl
adc
sahf
outsl
xor
push
or
pop
adc
push
mov
insb
and
jno
adc
push
cmc
and
pop
adc
xor
enter
pop
pop
hlt
jno
adc
add
dec
cli
cmc
ljmp
lret
shl
loope
and
adc
lea
ljmp
jl
cmp
aad
sbb
pushf
jmp
xchg
stos
jns
pop
scas
aad
push
and
pop
fdivrl
movsl
cmp
sbb
add
inc
or
int
out
sub
jb
outsl
fdivrs
pop
inc
ljmp
testb
mov
out
add
lods
insl
jp
fnstcw
xlat
fwait
movsl
add
insl
jo
dec
imul
loope
orl
jecxz
pop
push
jnp
adc
out
xchg
mov
add
lods
iret
dec
mov
lret
and
mov
imul
dec
or
shrb
pop
int
addb
aad
cmp
xor
lods
mov
lcall
dec
adc
xor
ja
cmp
ds
enter
imul
insb
jl
jo
repz
inc
jecxz
mov
test
arpl
lret
shrl
std
dec
sti
add
insb
enter
and
dec
roll
nop
ds
push
daa
aam
or
les
orps
sbb
mov
cmpsb
sahf
es
xor
and
cmp
lahf
xchg
hlt
jnp
ss
jne
in
add
aad
push
das
mov
scas
mov
pop
mov
cld
insl
in
js
and
outsb
jno
inc
xor
mov
push
adc
add
iret
push
lret
push
test
push
movsb
lock
cld
xlat
les
cmp
scas
fstps
sbb
in
lret
loop
imul
pop
fmulp
outsl
push
dec
call
cmpsb
pop
test
adc
jae
mov
shrl
inc
inc
in
push
mov
inc
popf
aaa
dec
dec
jge
js
leave
add
test
repz
roll
inc
pop
pop
inc
es
stos
or
ja
dec
std
xchg
jle
test
sti
sti
mov
movsb
lods
and
scas
frstor
lret
insl
pop
out
dec
adc
jo
and
outsb
test
pop
stos
jb
test
inc
mov
int
test
adc
mov
imul
mov
jno
cmp
ljmp
jg
jb
leave
xchg
cs
pop
int3
mov
pop
cmp
out
jmp
add
and
pop
inc
sbbb
in
ljmp
fcmovnu
fwait
shlb
movsb
mov
mov
jmp
ljmp
mov
outsl
add
ret
push
dec
adc
cmp
sbbl
mov
iret
pop
movsb
aas
and
in
sbb
xor
mov
jp
enter
xchg
push
in
lret
test
sahf
mov
pop
dec
scas
pop
mov
mov
and
inc
notb
sub
jo
cmp
sub
faddl
bound
dec
je
mov
push
cmc
pusha
and
pop
jb
xor
cmpsl
dec
int
mov
in
std
cli
jg
mov
adc
loope
aas
inc
xchg
sub
inc
mov
and
aas
ja
sub
std
xchg
cmp
aas
pusha
cmp
fisttps
sub
add
inc
cmp
ds
adc
xor
pop
xchg
fidivl
pop
adc
xchg
xchg
movsl
and
sbb
jo
push
xchg
pop
adc
and
pop
inc
push
lods
hlt
ret
shr
sti
mov
popl
add
in
loopne
test
and
loopne
mov
sub
sbb
aaa
sbb
push
movsl
push
jle
pop
in
clc
mov
lea
repz
and
adc
jnp
cld
call
cltd
subl
outsb
xor
es
cmp
pusha
and
xchg
decl
or
loop
dec
xchg
daa
dec
cmp
test
pop
mov
push
ret
inc
sti
add
mov
fldcw
ds
and
pop
jmp
lods
test
test
sbb
lock
loope
scas
inc
cwtl
and
add
jmp
dec
push
jg
dec
js
mov
int3
adc
fsts
xor
lcall
cmpl
push
or
add
in
sarl
push
adc
mov
inc
adc
mov
cmp
aas
and
xchg
cmpsl
mov
imul
sub
movsb
push
adc
push
sub
pop
pop
int
movsb
push
adc
shlb
test
inc
push
dec
lcall
icebp
pop
adc
outsb
inc
cmp
lods
pop
xchg
fs
inc
pop
mov
in
pop
adc
call
fcmovnbe
jne
clc
jo
adc
xlat
js
testl
sbb
ret
int3
mov
jmp
add
pop
arpl
cmp
in
dec
out
or
xchg
popf
lock
pop
adc
mov
movsb
daa
dec
aaa
push
xor
push
scas
hlt
push
idivl
jne
iret
push
adc
shrl
cmpb
dec
jg
jno
adc
xchg
aad
mov
adc
dec
cmp
or
or
jae
mov
jo
adc
dec
sbb
inc
sbb
les
adc
shr
inc
jp
sbb
aaa
dec
mov
out
pushf
inc
movsb
mov
jbe
jbe
cmpsb
cmp
or
aaa
es
ds
adc
stc
dec
xor
mov
lock
mov
adc
xchg
mov
jo
notb
fs
lea
sbb
jo
adc
pop
pop
pop
ds
dec
ret
sbb
fs
adc
les
adc
push
test
pop
adc
jno
adc
iret
inc
lret
adc
jbe
sbb
jb
stos
add
insb
mov
movsb
ret
int
mov
xorb
sub
sub
mov
pop
ss
xor
sbb
adc
jno
adc
lock
addb
mov
or
inc
add
adc
stos
add
adc
sub
push
clc
sbb
adc
addb
add
fistps
xor
mov
and
adc
cltd
ss
leave
nop
and
cmp
nop
cmp
pop
fisubrs
mov
push
xor
test
xor
pop
adc
fdivs
adc
inc
xor
sub
insl
cmp
fstpl
hlt
cmp
lock
sub
mov
jle
adc
cwtl
lea
dec
dec
pop
les
inc
addb
ret
mov
or
push
adc
lock
inc
and
sub
les
sbb
mov
push
ljmp
clc
or
pop
jge
xchg
paddq
les
add
jbe
cwtl
outsl
jb
cli
dec
ret
out
xchg
xchg
inc
test
add
sbb
aaa
test
jno
adc
jbe
push
ljmp
or
add
sbb
adc
enter
js
cli
ja
cmc
add
xchg
faddp
js
rcll
adc
push
hlt
dec
in
add
mov
push
pop
ljmp
pop
in
shll
and
jne
adc
ret
aam
insb
lock
adc
cld
jo
adc
sub
jno
adc
imul
push
sti
fucomp
pop
insb
lock
adc
adc
sub
gs
push
adc
repz
adc
pop
out
fidivl
pop
adc
insl
and
gs
sbb
sti
add
adc
push
test
aaa
fbstp
das
push
test
xchg
mov
aas
nop
jo
adc
inc
aaa
pop
and
jne
insl
cmp
jnp
fldcw
sub
call
inc
jmp
mov
aas
inc
iret
mov
add
inc
pop
xchg
jle
lods
loop
ffree
jg
cmp
mov
and
add
sub
cmp
and
pop
cltd
sub
and
add
sbb
push
fiaddl
out
add
pop
scas
imul
vpmacssww
pop
aad
bound
jge
or
add
push
adc
js
call
out
ret
mov
filds
rolb
dec
sbb
jae
xchg
jae
fwait
cmc
sub
and
dec
adc
orb
pop
push
sub
mov
cmc
pop
adc
adc
insl
mov
and
jmp
inc
cmpsl
sbb
ljmp
add
push
adc
shr
cltd
or
into
push
iret
stc
pop
fwait
addl
or
push
adc
test
mov
unpcklps
xchg
insl
push
pop
mov
shrl
inc
or
adc
xlat
popa
addl
cli
repz
add
and
mov
inc
fwait
mov
rcr
mov
xchg
outsl
bswap
dec
dec
loope
shlb
adc
push
mov
push
cli
repz
adc
mov
xorps
sub
cmp
call
jmp
sahf
jno
mov
xor
pop
adc
test
jno
adc
fld
xor
pushf
jle
jne
rep
and
cmc
jmp
scas
cmp
pop
dec
adc
test
jle
adc
ds
fisttpl
imull
jns
pop
mov
jns
and
or
push
adc
daa
test
xchg
loop
lds
jb
or
sub
mov
leave
adc
sahf
inc
fildll
dec
push
nop
and
add
stos
push
movsb
out
push
ret
dec
cmp
iret
imul
push
adc
mov
clc
cmc
ljmp
and
xchg
outsl
or
jo
lret
xor
stos
stos
mov
pop
push
jno
pop
lods
pop
mov
push
sti
popf
push
xor
and
outsl
and
jbe
or
mov
aad
pop
es
inc
adc
push
clc
xchg
mov
fwait
mov
call
jg
adc
and
dec
out
mov
fcomp
fsub
inc
ret
mov
mov
push
mov
in
xchg
not
test
call
cs
xor
enter
or
jbe
push
sahf
in
lods
movsb
ret
pop
dec
sub
xchg
mov
pushf
cmp
dec
fisttps
adc
adc
xchg
inc
inc
in
test
push
jg
adc
loopne
pop
notb
pop
rclb
push
adc
gs
fnstsw
adc
push
sbb
push
adc
sbb
test
and
sub
stc
xor
jbe
subl
gs
into
pop
fcmovb
outsb
pop
push
mov
dec
daa
inc
call
jle
add
scas
rol
imul
in
icebp
push
rorb
inc
ja
ret
xor
mov
call
fsub
pop
mov
stos
in
movsb
test
lods
fnstenv
lea
es
push
mov
cmpb
pop
mov
sub
daa
fmull
and
in
inc
into
push
push
inc
or
xlat
in
movsl
andl
mov
stos
inc
out
movsb
mov
repz
xchg
adc
cmpb
jmp
mov
pop
aad
fs
enter
shl
dec
pop
jnp
jnp
mov
out
push
add
cmpsl
lock
les
mov
imul
mov
xor
int
push
adc
sbb
or
adc
pop
sub
jo
push
das
popa
push
pop
fbstp
loopne
jae
push
add
imull
scas
xchg
je
inc
cmpsb
adc
dec
add
jnp
mov
sbb
jb
mov
cmp
loopne
je
lret
or
xor
arpl
nop
jmp
sub
mov
xlat
push
xor
push
lcall
mov
int
push
out
jmp
push
in
shlb
or
stos
sub
shrb
inc
cwtl
fwait
dec
jmp
movb
inc
in
adc
xchg
push
mov
lods
cltd
push
rcrl
jo
addr16
and
mov
cmp
pop
dec
push
dec
in
mov
lcall
jno
dec
test
mov
or
dec
cmp
aam
sub
mov
sahf
pop
add
or
pusha
rol
mov
scas
adc
aam
arpl
mov
loopne
enter
lea
negb
cmp
cmp
cmp
ds
mov
inc
jp
xchg
xor
sbb
popf
call
pop
loop
push
in
pop
test
push
pop
les
popl
stc
lods
icebp
xchg
cs
pop
into
xchg
pusha
cs
push
cmp
das
out
test
sub
outsl
sti
jg
aaa
into
loopne
pushf
aam
lods
inc
dec
cmp
shll
mov
add
cwtl
insl
fistpll
xor
push
loopne
std
pusha
rol
pop
adc
sbb
inc
pushw
hlt
mov
pusha
dec
adc
mov
fsubrl
mov
inc
nop
jo
adc
movsl
subl
aaa
inc
movsl
cmp
mov
fcmovnbe
data16
mov
xor
test
cmp
iret
leave
lods
add
cmp
mov
push
lods
daa
pusha
loopne
cmp
stc
mov
mull
leave
push
inc
or
cwtl
outsb
xor
cmp
sbb
push
or
lea
orb
mov
aad
mov
pop
or
fidivl
iret
dec
popf
cmp
lea
jae
push
pop
mov
mov
jo
adc
sub
jecxz
and
outsl
mov
lods
cmp
mov
mov
shrl
ds
cmp
pop
stc
lods
je
fnstenv
lods
adc
jae
push
stos
push
repz
cmp
aam
dec
pop
std
push
or
add
push
or
aam
push
pushf
cmp
dec
sub
add
pop
fcomps
adc
test
or
icebp
and
movsl
fisttps
sbb
mov
popa
daa
push
push
mov
push
dec
js
jo
adc
in
pop
adc
out
inc
stos
mov
push
cmc
jl
mov
fsubrl
jmp
dec
fwait
dec
push
mov
add
adc
jno
adc
jo
adc
ja
jno
adc
fnstenv
ja
jmp
xchg
push
cld
movsl
fs
scas
aas
xchg
or
in
pop
adc
and
jno
adc
mov
jae
jge
add
xor
aaa
cmp
push
les
or
cli
adc
push
adc
out
pop
mov
and
int3
fbstp
mov
jb
lcall
adc
push
jecxz
mov
mov
lods
inc
xchg
cli
movsb
loopne
out
xor
xor
pop
adc
test
sarb
dec
das
inc
push
cmc
xchg
mov
push
xchg
daa
out
inc
pusha
and
shrl
ret
jg
xchg
data16
out
push
add
jae
test
adc
ret
sar
scas
fcoms
cmc
andb
mov
dec
adc
or
xchg
imul
imulb
push
inc
bound
bnd
inc
cmp
cmpsb
ljmp
mov
inc
stos
loop
lahf
jbe
test
test
mov
sub
imul
jl
jmp
scas
cmpsb
dec
adc
xchg
mov
cmc
addl
xor
adc
push
mov
mov
jle
testl
inc
mov
roll
insb
push
dec
jns
add
mov
jle
push
cmpsl
loop
jo
insb
fnstenv
xlat
dec
stos
push
movsb
dec
mov
xchg
adc
jns
inc
add
mov
mov
pop
pop
push
fnstenv
pop
adc
imul
inc
jb
lock
arpl
sbb
adc
arpl
mov
aam
dec
outsb
enter
pop
je
adc
fisubs
and
fsubrp
mov
stos
sbb
movsl
push
adc
rorb
fistpl
inc
mov
cmp
icebp
movsb
dec
xchg
loope
add
sub
xlat
loopne
xchg
pusha
std
mov
and
and
and
sub
or
jns
xchg
es
loope
cmp
cmc
addr16
inc
pop
lahf
fistl
lahf
mulb
dec
mov
fldl
addr16
fnstsw
inc
scas
das
mov
daa
bound
shrl
lret
aad
sub
js
je
adc
addr16
xchg
jns
cwtl
jno
icebp
mov
add
adc
sbb
jo
lret
mov
fadds
inc
mov
aaa
js
sarl
mov
push
adc
xchg
push
lret
xchg
xor
jmp
push
fsubs
sbb
in
lret
nop
jmp
xor
adcl
out
pop
push
pop
pusha
lea
sbb
push
push
pusha
and
loopne
push
cmp
dec
xchg
out
fcoms
fld
jae
int
xor
jge
cmp
or
shrb
gs
dec
xchg
xor
loope
and
pop
mov
and
xchg
fdivrl
outsl
cmc
inc
aam
mov
dec
xchg
scas
out
out
insl
test
mov
sbb
adc
add
sbbl
aas
mov
cwtl
movsl
push
adc
mov
sub
mov
inc
ret
cmp
or
xchg
dec
xchg
and
call
and
arpl
fstpl
push
adc
ljmp
push
xor
dec
xchg
pop
mov
push
je
push
adc
std
in
lods
xchg
test
sbb
outsb
pop
mov
mov
in
outsl
fistpll
je
mov
fisubs
ljmp
sbb
push
inc
mov
rcr
rorb
ljmp
daa
mov
fistps
push
push
lods
pushf
mov
enter
fs
std
mov
mov
out
cmp
es
xchg
sub
fidivs
dec
pusha
mov
sar
push
adc
push
cs
pop
jae
and
cmp
mov
mov
loop
insl
mov
lea
std
or
pusha
movsl
push
adc
xchg
fldcw
mov
fimull
sbb
out
sarl
xchg
in
cmp
cs
ret
cmc
imul
aad
push
sbb
push
adc
cwtl
ljmp
pop
mov
iret
adc
lcall
inc
sbb
push
movsl
push
adc
jns
xchg
jle,pn
shlb
xchg
push
fildl
xchg
mov
fwait
lcall
jb
adc
std
movsl
hlt
scas
scas
lods
pop
fidivs
outsl
mov
insb
cmpsl
cmp
cld
or
xchg
mov
pop
sub
push
dec
je
test
ss
inc
out
xor
jb
adc
jo
outsl
test
inc
inc
push
sbb
cmp
cmpsb
jle
mov
push
adc
std
loopne
adc
or
push
adc
push
xchg
and
adc
mov
stos
jns
mov
mov
outsb
xor
jb
adc
loop
mov
xchg
outsb
or
push
popa
mov
jle
fdivrs
or
popf
mov
gs
es
xchg
bound
xchg
adc
cmp
stc
cli
push
movsl
push
adc
mov
push
fidivs
pop
mov
and
mov
jno
inc
add
hlt
jge
adc
or
xor
data16
sub
notl
ret
mov
push
adc
cltd
cltd
aam
cmp
jbe
jbe
scas
test
push
loopne
sbb
mov
cmp
int
sub
or
insl
xchg
pusha
std
xchg
mov
addr16
and
lcall
push
cmp
popa
dec
ljmp
mov
sti
push
sbb
push
or
xor
or
test
pop
push
sub
lods
pop
jg
or
inc
sub
sub
enter
repnz
mov
fs
lahf
mov
sub
jnp
jge
iret
imul
shll
fdivs
dec
xor
loopne
outsl
fists
ljmp
xlat
test
loop
xchg
and
fldt
push
bound
inc
fstpt
mov
pop
sub
imul
and
jae
adc
mov
stos
dec
rcll
xchg
shl
ljmp
push
adc
imul
mov
aaa
rcr
sbb
push
adc
or
xor
and
xchg
xor
push
dec
jne
pop
mov
pop
stc
flds
push
adc
add
mov
icebp
ljmp
xchg
cmp
sub
fsubrs
xchg
cmc
negb
mov
jo
mov
lea
pop
dec
imul
ret
and
fnstcw
cmc
ljmp
pop
mov
push
mov
call
fistpll
push
add
dec
out
out
mov
pop
mov
xor
sbb
cld
std
mov
inc
aam
movsl
rol
gs
movsb
push
adc
sbb
adc
arpl
fildll
je
dec
jno
pop
pop
push
in
clc
out
xor
lea
lea
inc
sub
repnz
pop
and
sahf
xchg
and
cmp
push
lods
dec
fimull
cmp
or
dec
les
and
inc
and
xchg
mov
mov
ja
sbb
imul
adc
mov
mov
pushf
dec
dec
lds
adc
int3
jmp
mov
call
adc
pop
pop
subb
mov
push
data16
insb
mov
out
jecxz
scas
insl
or
jmp
xchg
and
push
xchg
cs
mov
sti
sub
pop
outsl
fiaddl
loop
xor
jge
adc
jl
popf
and
andb
ss
stos
lods
mov
in
out
loope
sub
cmp
pop
xchg
sub
ds
cmpl
add
mov
push
adc
jne
xchg
cmp
std
jge
jmp
enter
cmc
insb
movsb
push
adc
jmp
mov
movsb
push
adc
xchg
ss
dec
lea
sbb
cmpsb
arpl
in
rorb
stos
mov
jecxz
movsb
push
adc
loopne
call
push
gs
push
jne
or
cwtl
push
adc
mov
jae
movsb
push
adc
adc
sbb
add
adc
sbb
add
test
cmp
stos
mov
mov
lahf
jge
push
dec
jmp
jl
movsb
push
adc
xor
es
out
inc
test
sbb
xor
scas
inc
jg
std
cmp
jge
rcl
movsl
dec
fcompp
jmp
xchg
inc
ss
pop
movsb
dec
lahf
cmp
scas
aas
int3
iret
in
push
int3
shll
stos
xor
mov
xor
popa
shrl
adc
mov
lret
incb
fidivl
push
js
push
adc
cmpsl
loop
inc
xchg
aaa
cmp
pop
les
push
sub
push
mov
and
es
mov
dec
pop
mov
pop
adc
xchg
mov
out
vpsrld
test
xlat
push
outsl
or
pop
outsb
xchg
iret
and
mov
rcrb
pop
es
jge
addb
loop
dec
xchg
fsubrl
sar
jo
adc
cmp
popf
push
adc
jb
pmaxub
dec
pop
std
adc
mov
or
mov
sub
popf
push
adc
adc
jo
adc
iret
mov
jmp
call
shr
mov
jle
mov
movsl
gs
xor
lods
adc
adc
popl
std
movsb
add
sub
xor
push
or
sbb
aaa
outsl
jo
call
pop
inc
js
sub
xchg
outsl
sbb
adc
adc
or
add
test
sub
mov
cmp
mov
pop
aaa
outsl
test
std
ret
fsubrs
fisttpl
and
push
adc
rolb
test
pop
aaa
outsl
and
push
popl
std
xor
push
adc
mov
mov
and
add
aam
lods
fsubrs
aaa
dec
xchg
and
lods
sahf
push
adc
push
cmp
leave
cmp
cmc
add
push
adc
lods
scas
mov
push
inc
lods
pop
mov
roll
test
nop
movsl
sbb
jne
cli
jg
aam
nop
jo
adc
add
cli
cmp
js
fistpll
mov
and
or
out
mov
push
adc
aaa
push
movsl
clc
jae
incb
add
and
push
adc
sbb
mov
push
adcl
dec
sub
mov
push
bound
dec
xchg
push
sub
daa
push
lods
pop
cwtl
lret
mov
or
outsl
fists
shr
jne
pop
or
push
sahf
and
cmp
push
lods
negl
push
adc
hlt
xor
cld
lea
movsl
mov
pop
je
ret
dec
mov
sbb
sahf
push
adc
push
dec
add
xlat
jo
fstpt
rcrb
nop
jo
adc
sbb
rcrb
push
in
enter
lock
sahf
mov
mov
in
xor
incl
dec
mov
js,pt
push
xchg
cmpsl
iret
xor
hlt
negl
lcall
adc
sahf
push
adc
push
jmp
fisttpl
jnp
stos
andl
sbb
push
adc
das
cld
and
aas
ljmp
dec
and
push
sbb
jg
aas
nop
jo
adc
aad
hlt
inc
mov
adc
xor
jl
dec
out
hlt
lea
fldt
push
adc
adc
mov
ret
xor
cld
or
fsts
push
adc
sbb
mov
add
add
test
mov
jo
adc
adc
lahf
add
pusha
js
jmp
cmc
in
subl
jo
adc
mov
mov
adc
push
adc
adc
test
xor
pop
add
test
sub
dec
sbb
jae
je
fnstsw
scas
mov
movsl
dec
add
pushf
push
adc
loop
adc
pop
mov
xor
cmpsb
cmpsl
jg
std
imul
push
fsubrs
sbb
cmp
xor
pop
sbb
iret
sbb
insl
or
push
adc
inc
mov
push
aas
call
sbb
cmp
dec
mov
jo
adc
xchg
int
pop
cmp
mov
fdivs
insl
enter
and
mov
in
push
adc
cmp
shll
push
adc
jnp
cltd
test
add
push
out
xor
int
sti
pusha
push
popa
mov
and
or
fildll
xchg
pusha
mov
jmp
or
cmc
xchg
mov
mov
es
mov
mov
sahf
push
adc
insl
adc
push
adc
and
addr16
lret
cmp
pop
stos
jb
push
gs
mov
jecxz
sub
cmp
shrl
in
push
adc
mov
ret
adc
mov
jl
jo
adc
cld
addr16
adc
jno
jne
out
xlat
sub
lds
movsl
movb
jns
dec
fmull
sbb
push
mov
mov
push
xor
jo
push
adc
shrl
inc
addl
std
test
jb
outsl
fidivl
scas
enter
cmpsb
popa
lea
fdivs
adc
movsb
out
pop
jbe
and
cmp
pop
aaa
outsl
dec
lock
push
adc
fwait
jle
push
cs
cmpsb
ds
xor
sub
test
cmp
mov
clc
push
add
adc
adc
bound
push
cmc
pop
adc
sbb
mov
push
pop
ret
dec
inc
scas
mov
lods
inc
mov
cmc
pop
adc
lods
lds
std
push
loop
inc
push
lods
xor
pop
cs
push
and
nop
sarb
je
int3
mov
add
fdivrs
aaa
dec
xchg
and
adc
push
invd
adc
orb
jnp
inc
mov
outsl
fndisi(8087
loopne
pop
xchg
sub
mull
dec
push
cmp
add
pop
cwtl
scas
mov
mov
cmp
lods
cs
lea
aaa
test
push
adc
shll
scas
xchg
pop
movsb
dec
cmp
dec
xchg
test
ss
pushf
mov
movsb
sub
pop
inc
cmpsb
roll
in
mov
cmp
arpl
cli
js
fidivrs
push
adc
mov
fidivrl
icebp
inc
inc
xchg
sub
iret
push
mov
outsb
popa
fnstsw
clc
negl
nop
es
bnd
xchg
sub
int3
sbb
inc
adc
mov
clc
or
fwait
and
pop
sub
xchg
imul
sti
lock
xchg
in
scas
inc
out
insb
sub
jo
adc
mov
or
jnp
fstps
mov
jmp
mov
ss
xchg
mov
jo
adc
aam
xlat
mov
cmpl
cmp
test
dec
add
jo
adc
sub
adc
push
hlt
sbb
out
fcompl
cmp
cld
or
sbb
push
fcomps
sbb
pop
pop
inc
out
inc
mov
jmp
cmp
lret
stos
pop
lcall
lahf
add
adc
in
inc
mov
adc
imul
out
mov
repz
mov
sbb
jg
aaa
cmp
cli
pop
mov
test
adc
ljmp
inc
dec
pusha
imul
mov
cmp
and
xchg
sub
mov
mov
adc
xchg
lahf
cmpsb
push
cmpsl
mov
push
or
aas
cld
mov
adc
subl
pop
pop
popa
mov
adc
stos
xlat
cld
lcall
sbb
test
mov
out
dec
xchg
jle
add
add
aad
mov
mov
cmp
clc
shlb
leave
xchg
icebp
dec
dec
popf
clc
mov
jge
mov
fadd
inc
xor
and
xor
rcrb
push
jg
addr16
ret
fsubrs
lods
adc
out
mov
mov
jl
or
dec
cmp
mov
xchg
mov
sbb
mov
sbb
xlat
add
dec
inc
nopl
mov
mov
add
fidivrs
mov
pop
adc
test
ss
jle
jle
push
cwtl
mov
inc
mov
inc
loop
in
enter
xor
popf
in
or
or
mov
xor
mov
push
sub
sbb
sub
or
jbe
jno
inc
push
mov
inc
jp
jmp
js
testb
push
and
jo
dec
mulb
add
add
call
cmp
out
mov
cltd
movsl
push
aaa
hlt
mov
dec
std
cli
adcl
push
xchg
cmpsb
sbb
loop
sub
clc
sbb
rorb
jmp
fucom
push
lea
lret
ret
popl
pop
stc
xchg
jb
aaa
movsl
cld
sbb
adc
or
push
dec
pusha
jo
adc
and
ret
and
jb
enter
xchg
add
adc
pop
mov
fdivrl
sub
nop
mov
cld
jo
adc
jle
imul
fidivrl
push
jo
sbb
cmp
pop
fsub
dec
pop
xor
mov
aam
dec
rorb
ljmp
xorb
xor
sub
jo
aas
push
adc
and
js
es
loope
scas
inc
stos
lahf
dec
insl
aam
push
dec
cs
lea
jle
and
call
jo
adc
insl
xor
or
lods
hlt
or
mov
dec
enter
mov
pop
cwtl
movsl
lods
pop
mov
lock
out
dec
outsl
out
les
sbb
jae
cli
pop
inc
cmpsb
sbb
dec
lea
and
inc
push
aad
arpl
outsb
pop
jns
xor
dec
lock
dec
jno
and
mov
sbb
sub
dec
js
mov
arpl
push
push
std
cld
mov
push
aam
jno
cmpsb
dec
cmp
out
xor
push
stos
lock
push
mov
icebp
sub
inc
and
mov
mov
rorl
mov
mov
push
add
and
inc
cltd
cs
aaa
xchg
push
sahf
nop
jo
adc
lret
add
popa
sbb
fwait
roll
or
ss
cmpl
mov
imull
aad
ret
add
mov
std
test
bound
cmc
pop
adc
pop
adc
je
or
pop
adc
rorb
loopne
xchg
out
cli
pop
adc
mov
das
dec
jne
repnz
add
push
adc
or
mov
in
inc
or
enter
pop
cmp
clc
clc
jo
adc
inc
or
push
shrb
movsb
xor
pop
cmpsl
add
xlat
jge
js
push
adc
fists
xor
fnstenv
jecxz
hlt
mov
divl
add
xlat
repnz
mov
push
fcmovu
das
pop
add
lock
jno
adc
ljmp
jmp
dec
xchg
fisubrs
lds
adc
movsl
mov
push
jle
repz
jp
sahf
popl
adc
xchg
out
dec
xchg
sub
cmp
lds
adc
fsubr
sub
or
push
push
jg
xchg
pusha
push
repz
or
xor
adc
notl
cmp
or
jo
adc
dec
das
mov
push
mov
ror
xchg
lods
repnz
mov
aaa
xor
or
mov
stos
testl
lock
adc
iret
mov
test
mov
sti
scas
or
mov
adcl
adc
adc
sbb
orl
bound
scas
add
in
testl
insb
pop
or
mov
push
adc
insb
sbb
xchg
addr16
jl
or
sub
sbb
xchg
std
xchg
or
popa
repz
push
jg
fcomps
adc
jo
adc
jnp
jp
xchg
push
or
push
sbb
arpl
push
or
mov
pushl
pop
or
aam
add
adc
sbb
jecxz
loope
pop
or
arpl
shrl
adc
mov
xor
das
mov
sub
adc
dec
pushf
pusha
stc
jmp
mov
sti
std
mov
test
loopne
loope
push
or
mov
jns
or
les
inc
dec
ret
push
and
dec
out
call
fcoms
addl
push
or
js
mov
add
es
cmp
icebp
dec
fdivr
fsubrs
outsl
xlat
sbb
out
test
push
add
xchg
aad
push
mov
test
scas
xor
sub
sub
je
mov
push
inc
push
mov
mov
jge
es
and
mov
jp
or
leave
mov
add
cmpl
pop
mov
mov
cld
inc
aam
pop
insb
int
andb
add
insb
mov
out
inc
mov
push
outsb
xlat
jp
adc
lret
xchg
xchg
and
pop
or
aad
pop
push
add
mov
flds
lock
movsb
mov
lret
xchg
xchg
and
pop
or
aad
pop
push
add
mov
flds
lock
movsb
mov
lret
nop
cwtl
and
pop
add
aam
pop
push
add
inc
fs
pop
movsl
mov
lret
jg
xchg
lahf
and
push
adc
push
pop
push
add
mov
fildl
sub
add
xor
xchg
icebp
push
or
push
push
adc
popf
push
jne
or
push
sub
dec
push
mov
add
cwtl
cs
pop
jle
into
test
repnz
lock
aad
xlat
jmp
dec
imul
clc
inc
dec
mov
cpuid
or
mov
push
and
pop
lods
mov
cmpsb
push
adc
lea
jge
mov
or
mov
and
aad
mov
aad
sbb
pop
inc
mov
sbb
push
adc
test
pop
fcompp
sbb
pusha
dec
mov
cmpsb
push
adc
mov
mov
adc
or
lret
adc
xchg
decb
les
stos
push
adc
sub
mov
scas
push
adc
push
add
aam
inc
sbb
repz
sbb
aad
push
jae
push
andb
stos
push
adc
imul
lds
scas
push
adc
sbb
sbb
call
push
adc
xchg
outsl
sub
std
mov
adc
sub
scas
push
adc
dec
push
lods
ds
fs
xor
mov
mov
adc
pop
inc
jecxz
dec
gs
pop
mov
adc
sbb
push
adc
nop
pop
and
idivl
and
mov
adc
sti
and
pop
loopne
adc
sbb
push
adc
bound
insl
sbb
or
mov
push
mov
pop
adc
and
outsl
loopne
sti
sbb
mov
cld
in
sbb
out
xor
adc
sbb
roll
hlt
cld
filds
sbb
jecxz
imul
xor
sbb
jmp
scas
push
adc
jae
pop
sbb
pop
lahf
sti
sbb
push
sbb
clc
cltd
jno
rorb
or
orb
cwtl
rolb
ds
lret
js
fbld
adc
adc
sub
sbb
aam
dec
sahf
push
sub
cmpsb
push
adc
ja
fsubrs
mov
adc
test
test
xor
or
gs
sbb
out
ficomps
cmpsb
push
adc
test
not
pop
ret
mov
movsb
scas
mov
sbb
mov
mov
outsl
fistps
inc
push
mov
mov
sbb
lea
lods
sarl
movb
aaa
out
test
push
add
mov
sub
enter
jp
out
dec
mov
mov
sub
adc
ja
adcl
xor
jecxz
ss
and
rol
int
sti
mov
addb
push
push
andl
cmp
and
sub
mov
xchg
mov
movb
add
inc
pop
xor
arpl
push
test
cmp
lea
xchg
decl
cmp
call
fistl
nop
push
push
add
inc
aad
lret
lds
mov
or
mov
push
aam
cli
fidivl
lahf
or
nop
and
push
cmp
or
sbb
insb
scas
int
mov
in
fidivs
push
jl
mov
inc
aas
or
pop
adc
pop
lock
ffree
inc
cwtl
aas
push
push
mov
mov
ret
mov
inc
ds
pop
icebp
push
fadd
pusha
cltd
imul
inc
push
or
pop
xor
movsb
push
cmpsl
dec
nop
cmpsl
scas
push
popf
inc
jecxz
mov
ret
or
inc
mov
mov
test
cmpsb
push
push
aad
inc
std
pusha
push
icebp
push
ficomps
push
shlb
int3
icebp
stos
lret
mov
repnz
xor
loop
xchg
loopne
test
adc
xor
pop
cmp
iret
sub
jns
xlat
adc
cli
in
cmp
insl
sbb
xchg
xor
test
inc
inc
pushf
push
stos
add
test
rol
icebp
xchg
daa
mov
push
nop
fmuls
push
ljmp
cmp
jle
jge
jl
cld
dec
mov
jo
inc
push
repnz
or
mov
push
push
xchg
inc
add
icebp
mov
hlt
mov
xlat
lcall
xchg
lret
lods
shrl
dec
jge
scas
fstl
jle
lock
and
mov
pop
aas
cmp
jge
repz
inc
addr16
sub
mov
stc
or
in
les
sub
push
xlat
mov
xchg
jmp
mov
popf
test
pop
fmull
jg
mov
jae
popf
outsb
insl
daa
add
es
mov
sahf
movsb
icebp
outsb
sub
inc
add
js
cli
arpl
push
aad
xchg
push
insl
fsubrl
out
dec
fwait
mov
xchg
fmuls
rorl
dec
cmp
fdivr
xchg
pop
cmc
lahf
mov
cld
mov
out
xlat
adc
popf
inc
sub
clc
pop
sub
push
inc
aaa
ret
aam
fidivl
jp
sub
lds
int
and
push
gs
pusha
add
xor
xor
sti
xor
je
out
sub
insb
into
sbb
stos
xchg
aam
cltd
pop
ficoml
mov
sub
aam
outsl
push
jecxz
stos
mov
pop
pop
cmp
mov
shl
das
sbb
and
and
or
mov
sub
fs
shlb
xor
sub
dec
xchg
popa
cmp
dec
or
xchg
and
push
and
stos
aaa
mov
pop
inc
cli
mov
xchg
lcall
fisttps
lahf
movsb
xlat
addb
add
sahf
jge
es
loopne
scas
push
rclb
icebp
dec
xor
dec
leave
fs
mov
pushf
inc
pop
test
cmp
cmpsl
cmpsl
dec
pop
jg
insl
mov
stos
inc
add
adc
sbb
ljmp
scas
repz
loope
or
loope
mov
pop
loop
nop
and
jb
cmp
jbe
mov
xchg
test
inc
sahf
xchg
dec
pushf
mov
addb
lret
xchg
out
aam
es
adc
dec
xchg
sub
cli
stc
mov
hlt
repnz
ficoml
es
outsl
jmp
test
inc
or
and
hlt
or
jnp
adc
cmp
mov
insb
cmp
test
mov
aas
dec
pushf
fsub
sub
jnp
je
outsl
or
sti
sahf
fwait
xor
sbb
cs
mov
stc
nop
in
xorb
mov
sahf
insl
cmp
fcoms
lds
cmp
rclb
add
or
scas
add
pop
mov
and
xchg
and
stc
lcall
push
mov
sbb
sbb
xchg
mov
pushf
cmc
or
lods
adc
inc
xchg
pop
lret
and
pop
adc
addr16
popf
mul
xchg
mov
pushl
rol
js
sbb
mov
das
int3
aas
loope
insl
sub
insb
sbb
negb
roll
adc
mov
test
push
fsub
adc
inc
das
loop
pop
cmp
xchg
cwtl
sbb
cs
push
cmp
inc
movsl
push
daa
adc
sub
sub
or
pop
sub
sub
sarl
cmp
inc
cltd
test
jecxz
adc
jmp
into
aaa
fbld
iret
movl
sti
and
jp
or
push
adc
and
lds
loop
adc
ret
jb
inc
cld
out
in
xor
mov
inc
push
pop
into
cmp
adc
mov
int3
popf
mov
jb
fwait
imul
clc
pop
in
and
out
jge
mov
mov
jl
or
aam
mov
push
xchg
dec
repz
dec
ds
lret
add
xor
adc
dec
adc
push
pop
scas
ja
dec
lock
orl
dec
mov
mov
push
shlb
xchg
call
outsb
xchg
lea
or
mov
sub
and
fwait
xchg
test
shll
test
out
dec
xor
dec
mov
push
and
iret
mov
mov
je
dec
adc
in
iret
xchg
lods
rcrl
adc
add
xlat
xor
push
pop
stos
push
ss
scas
push
mov
insb
push
mov
dec
mov
pushf
or
jns
fwait
aam
cmp
mov
les
xchg
pop
pop
ret
push
pusha
sbb
mov
xchg
into
sbb
andb
mov
dec
push
mov
xchg
ds
mov
mov
xchg
push
add
loop
xlat
arpl
inc
fs
pop
leave
jecxz
fstpt
cmc
mov
imul
dec
popa
mov
sub
xor
rorb
mov
or
cmc
lret
xor
pop
outsb
fimuls
neg
xor
xchg
mov
aas
lds
jge
test
cs
mov
imul
test
xor
or
scas
test
nop
inc
fs
pop
ss
popf
inc
hlt
mov
xchg
lcall
fisttps
jecxz
jns
and
or
push
xchg
cwtl
mov
fidivl
xchg
xlat
fistpl
sub
fdivl
inc
lret
out
sub
loop
inc
and
mov
sbb
call
pop
cmp
jbe
out
add
or
adc
imul
jge
hlt
inc
pusha
or
mov
sahf
jg
mov
aas
sub
adc
sbb
mov
adcl
scas
lock
sbb
cmp
shll
cltd
mov
stc
std
cli
mov
das
mov
scas
cmpsl
out
and
mov
sbb
sbb
or
cmp
adc
mov
xlat
faddl
or
adc
cmc
nop
xor
jbe
mov
sahf
insl
es
insb
fidivl
and
popf
cmp
xchg
stos
push
in
xchg
lcall
dec
mov
push
fisubl
aas
and
lcall
iret
mov
mov
mov
pop
sahf
xchg
into
mov
es
mov
fcoms
cmp
jle
das
testb
jecxz
adc
ljmp
dec
mov
fcmovbe
xchg
aad
outsb
cmpsl
dec
xchg
mov
rorb
push
adc
add
ret
push
mov
push
adc
in
push
mov
cmp
arpl
and
enter
xchg
add
push
daa
sbb
arpl
out
xchg
add
mov
push
mov
arpl
ret
and
hlt
in
in
xchg
xchg
inc
sub
jecxz
push
push
add
mov
mov
dec
fsubrs
push
mov
adc
push
cli
xchg
popf
dec
lret
addl
aad
jne
in
xchg
cld
add
and
js
jecxz
jecxz
cltd
mov
mov
pushf
dec
jno
inc
addr16
mov
ja
xor
xchg
jmp
cmpsb
adc
jecxz
jecxz
fwait
loope
add
jb
push
xchg
pushf
pop
sahf
inc
js
and
push
ja
clc
dec
jbe
xor
jbe
mov
xlat
lret
test
sarb
mov
negl
int3
loop
and
jle
push
test
sub
xor
mov
jnp
stos
repz
out
cmp
mov
mov
push
mov
imul
fstpt
sbb
dec
imul
popa
lcall
cmp
add
rcll
imul
mov
push
movsl
insb
addl
push
jle
stos
fnstenv
xor
cltd
and
xchg
xchg
int3
lods
call
sbb
gs
jl
outsb
movb
sub
mov
xchg
daa
dec
push
xchg
sbb
rorl
ljmp
sbb
push
add
push
stos
xlat
mov
push
mov
inc
ds
mov
adc
add
sbb
mov
divb
out
jo
cltd
inc
push
fsubrl
mov
add
push
or
shl
andl
std
or
push
imulb
fsubrl
int
ret
sub
test
popf
lahf
stos
dec
out
xlat
cmp
cmpsb
pop
jmp
inc
pop
scas
add
repz
iret
out
outsl
sbb
jle
push
cmp
xor
or
pusha
je
lock
push
scas
addr16
addb
jge
add
inc
push
in
jo
mov
sbbl
pop
cmpsb
inc
out
push
and
stos
es
push
and
sbb
cmpsb
aad
sbb
push
cmp
fmuls
iret
mov
imul
loope
js
imul
imul
bound
inc
out
jg
gs
xchg
aas
cmp
ds
fsubrs
stos
test
cmpl
jecxz
dec
push
adc
stos
out
push
add
push
insb
vprotw
sbb
sbb
lret
mov
add
mulb
xor
push
jmp
inc
inc
sub
jmp
faddl
mov
push
test
mov
clc
pop
in
test
ror
imull
jb
sub
add
pop
fcoms
push
jecxz
push
clc
xchg
mov
out
sub
test
xchg
shl
mov
adc
stos
cs
mov
or
cltd
push
sbb
leave
int
mov
mov
and
mov
repz
shl
bound
and
stos
dec
leave
lds
jmp
xor
adcl
mov
xchg
push
jecxz
push
mov
pushw
xchg
mov
adc
mov
out
jne
cmpsl
mov
push
sti
lea
sti
pop
in
test
push
ljmp
int
push
mov
cli
jecxz
inc
fsts
out
cmp
repnz
jecxz
insl
dec
add
or
mov
sti
xchg
xchg
jecxz
cmpsw
mov
ss
negl
jb
or
xchg
and
sbb
push
sti
xchg
repz
data16
mov
pop
popf
icebp
lds
and
into
sub
xor
and
insb
icebp
push
mov
push
pop
and
cmp
xchg
lret
iret
repnz
ficomps
adc
inc
adc
in
out
stos
iret
push
cmp
in
ror
enter
adc
arpl
xor
es
push
out
xchg
cwtl
jno
gs
bound
pop
bound
inc
cld
jl
ss
test
adc
in
test
clc
sub
sub
iret
fucomi
das
jns
je
sbb
loop
and
jb
xor
pop
repnz
mov
aas
lock
mov
lret
jb
and
push
outsl
leave
jo
lods
ds
mov
add
jno
in
jnp
lea
ficoms
mov
push
or
mov
sbb
lret
jmp
sub
sub
jl
mov
fdivrl
adc
stos
xor
adc
inc
sti
stos
subl
adc
add
cmp
in
pop
xchg
out
xchg
push
push
out
in
mov
rorl
ret
pop
xlat
movsl
int3
inc
jmp
jg
sbb
pop
push
stc
daa
les
mov
inc
adc
stos
stos
lcall
mov
xor
inc
push
loopne
push
adc
scas
outsb
fdivs
ds
cmp
movsb
out
push
or
lea
fdivp
data16
in
jmp
xchg
mov
sbb
cmpsl
adc
xchg
push
cmc
jae
aam
aam
arpl
je
loop
test
pop
out
loopne
addr16
pop
xchg
push
cmp
lds
xor
xchg
mov
fwait
lcall
or
mov
cmp
movsb
inc
push
xor
mov
fstpt
dec
sbb
fnstcw
inc
mov
pop
test
lret
cmc
loop
add
ds
jno
or
arpl
dec
cmp
mov
addl
int
daa
add
cs
push
shlb
adc
loop
xchg
mov
pushf
mov
aas
je
add
ret
xchg
addr16
push
test
addb
mov
push
cmp
dec
or
sub
pop
pop
jmp
cltd
cmc
inc
inc
loope
test
sti
xor
scas
fcoms
pop
dec
cmpsb
mov
test
adc
mov
pop
out
sbb
and
out
in
test
int
les
daa
aaa
in
dec
jg
and
pop
jb
mov
xchg
and
out
push
movsl
test
sbb
dec
out
or
or
je
mov
xchg
in
mov
xchg
lods
popf
xchg
orl
sti
mov
imul
cmpsl
out
stos
pop
or
mov
ficompl
jg
or
cmp
js
mov
movsl
mov
negb
xchg
stos
push
and
nop
mov
pushaw
or
jmp
insl
outsb
shl
xchg
lods
mov
xchg
xchg
movsl
lods
shlb
mov
roll
mov
popa
lock
sbb
ds
push
arpl
or
and
les
sahf
push
jmp
cmp
cli
mov
pushfw
mov
shl
push
inc
or
dec
and
aad
or
aaa
xor
fdivr
pusha
outsb
jne
outsl
and
inc
orb
scas
mov
mov
aam
push
cmp
adc
cmpb
adc
push
mov
hlt
popa
push
jmp
pop
xlat
or
xor
inc
aam
lret
inc
sti
adc
repnz
jmp
das
add
repnz
xchg
frstor
push
hlt
add
mov
push
fidivl
imul
add
inc
sbb
jns
int
pusha
mov
dec
repz
loope
dec
pop
imul
in
push
movsb
aad
pop
jmp
repz
xor
fmuls
pop
push
push
xchg
scas
jmp
xchg
inc
lahf
push
in
movl
rcr
push
push
cld
popf
out
push
mov
cli
or
aam
sbb
mov
int3
loopne
pop
pusha
and
stos
shlb
sub
mov
mov
push
cmpl
push
cmpsb
xor
jne
push
push
pop
test
aam
in
loopne
or
hlt
push
fwait
push
sbb
iret
stos
adc
fsubrl
aam
sub
mov
flds
adc
or
fcoml
popl
push
pop
lret
sbb
adc
insl
orl
loope
out
and
movsl
xor
or
mov
pop
add
nop
aas
fs
arpl
xchg
cmpsl
inc
ds
int3
shrl
pop
sbb
adc
adc
mov
push
aad
cmpsb
inc
sbb
jl
lret
sbb
mov
popf
out
dec
pop
insl
xchg
popf
dec
out
inc
ljmp
jecxz
sbb
push
jns
repz
inc
sbb
mov
cmp
dec
push
flds
adc
mov
sbbl
pop
adc
ds
pop
out
and
jg
xchg
jae
test
or
int
enter
stos
jno
inc
outsb
inc
aam
enter
pop
andb
js
jne
mov
loope
adc
and
sbb
sub
mov
or
mov
cli
mov
xchg
jne
arpl
mov
nop
out
sub
pop
arpl
mov
adc
sub
lahf
imul
pop
mov
cmp
xor
lods
roll
pop
loopne
lret
test
int
lret
push
push
movsl
dec
sbb
shll
cwtl
sahf
cs
aam
mov
imul
pop
shll
push
fists
sub
add
mov
and
sbb
mov
mov
cmp
in
push
test
lock
sarl
rcr
mov
imulb
nop
and
mov
cmc
pop
xlat
frstor
push
outsb
add
and
lods
fsubrl
lods
mov
inc
iret
xor
lret
js
and
cmpsb
adc
pop
mov
xor
dec
sbb
inc
mov
daa
in
dec
push
sub
adc
pop
mov
mov
cmpsl
jl
insl
lea
or
mov
nop
jmp
test
ja
rcrb
mov
fisttpl
aaa
outsl
stos
adc
mov
test
mov
repz
repz
push
xlat
imul
enter
addb
hlt
inc
sbb
dec
insl
aam
mov
mov
out
fsubr
mov
jle
mov
mov
jle
adc
push
sub
popf
cmpsl
dec
scas
scas
xchg
mov
arpl
or
jnp
mov
inc
push
sahf
outsb
mov
sahf
dec
insb
lahf
dec
jmp
lret
or
xchg
daa
inc
addb
inc
adc
popa
js
shlb
data16
pop
inc
sub
test
divb
outsb
stos
fbstp
sbb
dec
pop
and
pop
mov
sub
aad
mov
push
imul
and
pop
or
pop
and
jae
iret
cltd
and
testl
jne
daa
dec
insb
aad
jbe
mov
pop
in
stos
test
sbb
icebp
mov
incl
push
aaa
nop
leave
mov
icebp
jl
push
scas
movsl
dec
movsl
jecxz
in
or
cmp
out
xchg
add
xlat
out
cwtl
in
dec
pop
pop
loopne
addl
out
fdivrl
ret
lret
cmp
sub
push
dec
sub
pushf
fisubrs
in
mov
mov
popf
fmulp
loope
lcall
cli
or
push
dec
or
loopne
andl
adc
mov
ja
jle
xor
icebp
pop
inc
aas
or
adc
aas
mov
ficoml
push
and
jnp
jns
in
cmp
mov
insb
jo
or
inc
and
int
and
mov
bound
dec
push
sbb
jne
std
jle
repz
add
jecxz
xchg
stos
imul
pop
mov
xchg
out
out
pop
imul
cmp
cmpl
int
out
adc
into
outsb
popf
cmp
sti
inc
fistpll
xchg
in
jp
pop
test
pop
test
and
stos
and
cmpsb
and
push
iret
push
adc
jmp
sub
mov
test
push
adc
in
sbb
dec
lahf
cmp
push
adc
inc
push
pop
or
dec
mov
fcompl
sbb
mov
ss
mov
icebp
lock
xchg
and
lret
sub
test
mull
ret
adc
ror
stc
adc
les
inc
push
push
dec
hlt
xchg
inc
rcrb
js
shrl
add
inc
and
sub
fs
push
adc
ljmp
dec
sub
daa
push
lock
stc
xor
fwait
scas
cwtl
cltd
sti
ret
sbb
loopne
and
rcl
mov
adc
loope
scas
add
mov
pop
lea
stos
inc
mov
mov
iret
aaa
push
loopne
add
lret
nop
adc
push
imul
xlat
popf
jno
jp
cwtl
dec
pop
and
or
lcall
xchg
in
pop
in
adc
lahf
inc
jl
adc
jecxz
pusha
pop
add
add
adc
pop
push
stos
sub
shlb
addb
stos
sub
inc
mov
fstpt
sub
inc
and
shlb
call
inc
push
adc
add
out
inc
test
push
adc
cs
dec
xchg
mov
stos
add
cli
inc
jmp
mov
and
xchg
pop
jb
push
push
push
aad
pop
ja
jmp
pushf
insl
call
lds
shr
popf
pop
push
push
cmp
lcall
jno
mov
sbb
aam
shr
adc
pop
repz
ss
xchg
rcll
cld
mov
int
sub
add
lods
shl
sub
test
mov
xchg
jb
enter
xchg
lea
push
pusha
adc
mov
mov
adc
push
jnp
xchg
mov
and
adc
pop
add
adc
jno
lret
ficompl
test
cmp
inc
xchg
and
inc
stc
or
stos
es
gs
fsubrs
lahf
dec
jmp
add
sbb
enter
add
xchg
aas
sub
shrl
and
inc
sub
sti
test
std
cld
add
push
es
dec
bound
xchg
xchg
dec
loope
jp
sub
insb
cmp
xchg
adcb
inc
jno
or
lcall
loopne
adc
orb
xchg
and
pop
or
lret
sbbl
xchg
fnstcw
and
lods
xor
ljmp
xlat
out
imul
mov
daa
ret
ljmp
cs
fiaddl
in
or
push
gs
fdivr
mov
mov
inc
inc
fnstcw
faddl
pop
push
test
mov
dec
cmp
xchg
in
and
mov
mov
add
ret
push
mov
out
int
in
cmp
pop
inc
jns
pop
in
stc
loope
pop
repnz
push
rcll
push
xor
ja
xor
mov
mov
ret
mov
repz
mov
add
clc
lret
mov
cmp
dec
push
cmpb
dec
subl
inc
cwtl
or
int3
test
mov
fbstp
push
mov
add
fcmovne
mov
mov
mov
bound
popa
cmpsb
leave
inc
dec
mov
mov
mov
addr16
ret
push
adc
mov
and
rolb
adc
inc
cwtl
add
add
scas
aad
or
out
repnz
inc
push
movsb
dec
int
xor
ffreep
push
or
or
or
imul
mov
pusha
rcr
or
dec
mov
push
adc
push
adc
and
push
mov
sub
sub
fidivrl
cmp
adc
dec
dec
jmp
inc
stos
jno
and
sahf
and
mov
pop
rcll
les
and
cmp
and
sbb
xchg
cld
iret
push
adc
arpl
adc
jbe
cs
pop
mov
mov
and
pop
lods
ret
pop
jbe
ret
mov
sbb
outsb
cmpsl
or
dec
jmp
rorl
fcomip
push
mov
int3
jmp
push
in
adc
cs
sbb
into
dec
xchg
pusha
fidivrs
cmp
jle
pop
jno
pop
xchg
sbb
jb
movsb
add
mov
int
inc
lret
sahf
push
sbb
shll
bound
sbb
testb
and
mov
cmc
pop
xlat
frstor
push
out
cli
out
sbb
push
pop
jge
jns
add
fisubs
ret
mov
test
shl
cltd
lods
jo
sbb
cmpsl
out
dec
or
mov
enter
cmp
imul
push
out
mov
imull
dec
inc
sub
or
call
push
loope
test
push
pop
mov
fidivrl
das
sub
in
mov
vmovntpd
jo
mov
dec
flds
test
fwait
mov
or
push
loope
fs
je
lds
into
inc
mov
test
pusha
jns
sahf
inc
sbb
pop
inc
js
jge
add
lret
dec
ss
sub
or
shr
popf
push
clc
push
scas
mov
cmpsl
dec
jne
xchg
aaa
cmp
xor
movl
ret
movsb
dec
lds
jb
iret
push
adc
dec
jo
leave
movb
push
or
xor
dec
push
aam
cmpsl
inc
sbb
gs
dec
negb
jno
fsubrs
lahf
dec
push
stos
jmp
jns
and
inc
rorb
ret
add
incb
scas
push
mov
xchg
in
adc
addb
cli
stc
sub
push
xor
sub
fstpt
aam
push
pop
lds
xchg
outsb
xchg
mov
cld
inc
repz
ljmp
decl
aas
outsl
push
cmpsl
in
je
mov
adc
jge
mov
cmp
mov
pop
sbb
insb
adc
popa
pop
adc
inc
jae
and
jge
repnz
mov
fwait
push
and
adc
jle
mov
loope
lcall
out
xor
stos
adc
jnp
shlb
inc
push
push
jecxz
addr16
jbe
lods
mov
fwait
mov
mov
xor
jbe
outsb
jp
lcall
add
mov
lret
inc
cmpl
leave
xor
add
xchg
test
adc
add
popf
cmpsb
shlb
mov
out
mov
les
and
xchg
mov
loopne
and
mov
push
add
xor
ljmp
sti
add
ret
fmul
lahf
notb
add
or
imull
and
leave
sbb
push
addr16
testb
push
adc
xchg
pop
sub
push
sub
and
testl
call
fs
inc
adc
idivl
mov
int3
pop
in
enter
into
imull
inc
repnz
add
pop
pop
je
xchg
lea
inc
loopne
jb
mov
xchg
mov
pop
in
lods
or
inc
out
sbb
gs
sahf
stos
mov
nop
inc
inc
sahf
pop
fucomp
movsl
adc
rorl
pop
call
mov
pop
mov
and
sbb
cmpsl
push
sub
pusha
enter
sahf
cmp
pushf
cmc
lret
jmp
dec
cs
stos
jno
in
inc
repz
pop
fiaddl
xor
fistpll
cmp
cmp
test
in
xchg
push
sbb
cld
loop
push
pop
mov
loop
movsb
push
xchg
mov
jle
jne
sub
push
jae
pop
push
dec
inc
push
pop
in
mov
mov
or
mov
xor
jnp
jg
jne
test
cmpsl
mov
xchg
xor
sub
xor
mov
adc
in
add
push
imul
leave
jns
lret
outsb
mov
mov
insl
or
push
push
adc
xchg
hlt
or
adc
xchg
aam
and
or
shr
or
adc
mov
scas
sub
push
adc
jecxz
jl
ror
sbb
xchg
cmp
add
inc
aad
dec
mov
mov
xchg
aam
and
or
in
fstp
lret
dec
shl
add
cmc
push
rcr
lock
xor
cli
mov
testl
adc
push
adc
add
push
shl
mov
popa
push
lock
inc
sub
fs
outsl
lea
test
and
inc
les
and
mov
dec
lods
shlb
jl
in
nop
and
clc
cmc
ljmp
push
xrelease
pop
in
mov
aaa
sbb
xchg
stos
add
xchg
fcomip
imul
out
ret
jge
mov
mov
loop
pop
je
fisttps
inc
loope
js
std
inc
mov
scas
mov
aam
cmp
lods
enter
in
sub
inc
add
dec
mov
shll
int3
sub
cmpsb
nop
in
sti
xor
mov
push
and
test
mov
mov
or
dec
dec
je
test
push
or
mov
xchg
out
pop
cs
fidivl
outsb
test
roll
mov
push
fistl
ret
imul
fsubrs
in
nop
into
push
fs
jp
cld
dec
enter
movsl
dec
imul
adc
out
adc
out
adc
out
adc
out
adc
add
fsubr
add
or
add
xor
add
cmp
add
jmp
ljmp
popa
jmp
adc
out
add
into
out
add
adc
icebp
add
jnp
add
or
add
das
repnz
call
repz
repz
mov
lahf
popa
xor
fwait
testl
push
inc
out
pop
inc
je
xchg
ror
add
or
mov
xchg
fiadds
sti
je
ret
jp
mov
movsl
mov
movsl
fmuls
cmp
fsubr
movb
fwait
cmp
mov
enter
add
mov
or
mov
sub
xchg
push
lcall
push
adc
lret
mov
ja
add
or
cwtl
leave
or
int3
psllw
pop
xchg
mov
rorl
pop
xor
or
mov
movl
sahf
ljmp
pushf
cmpsl
adc
ss
inc
arpl
dec
fmuls
loop
mov
and
out
pop
sub
jbe
xor
lahf
or
sub
xor
pop
pop
sub
mov
imul
mov
out
jae
and
mov
inc
arpl
sub
pushf
in
jge
xchg
cltd
jne
dec
popa
in
xchg
pop
inc
cmp
mov
jns
inc
rcll
lret
out
cwtl
neg
mov
aam
sbb
cmpsb
pop
mov
xchg
aaa
shrb
pop
jge
leave
cld
fistl
andb
fiaddl
adc
lock
out
dec
stos
sbb
xchg
out
out
xor
flds
adc
jl
cltd
add
add
xchg
push
lock
stc
cmp
cld
aaa
jmp
sbb
dec
inc
mov
outsb
jg
addr16
out
or
inc
imul
out
add
movb
add
push
das
xchg
mov
or
call
cmp
lret
cmp
xchg
mov
pop
js
sub
cmp
imul
fwait
lea
xchg
int
js
ffree
and
in
and
pop
int
clc
lock
jne
or
mov
add
fnstsw
dec
pop
fs
lods
xchg
mov
icebp
pop
test
or
mov
sahf
data16
jle
mov
imul
fs
aas
and
mov
lret
std
adc
stc
frstpm(287
movsb
hlt
mov
pop
push
cmp
mov
mov
out
or
aam
call
repz
dec
arpl
loope
pop
std
repz
dec
add
add
add
sbb
and
mov
xchg
sub
mov
stos
or
dec
mov
fildll
cmpsl
or
ljmp
add
sub
sahf
outsb
out
sahf
mov
loopne
mov
jo
jnp
xor
ss
adc
and
lds
ret
rorl
xchg
sahf
push
sub
and
pop
lahf
jle
aaa
inc
mov
mov
shl
or
outsl
call
ret
pusha
pop
enter
push
cmpsl
inc
pop
lcall
or
mov
adcl
dec
pop
ds
lret
cmp
pop
std
pop
cmpsb
lds
push
fiaddl
mov
pop
adcl
xchg
push
jle
xchg
or
cmpsl
mov
sub
insb
test
mov
data16
ret
lock
jmp
lds
fcompl
mov
popf
rcrl
mov
inc
xlat
jno
addr16
push
lret
cld
sub
fmull
imul
inc
cmp
into
push
cmpsl
dec
popf
mov
push
inc
xchg
push
test
dec
clc
pop
pop
push
clc
jae
stos
pop
jp
mov
loopne
mov
rcll
dec
mov
mov
test
jmp
xchg
test
cmp
jle
xchg
scas
push
sbb
outsb
xor
push
je
lret
or
mov
iret
sub
outsb
mov
shlb
dec
mov
or
out
test
add
mov
into
pop
iret
into
mov
das
test
cwtl
ja
adc
add
push
push
fwait
outsb
nop
dec
hlt
xchg
or
outsb
fstpl
fdiv
add
xchg
pop
loope
dec
push
pop
sub
jg
arpl
icebp
or
add
je
inc
mov
sbb
xor
inc
ss
add
loope
inc
out
mulb
loope
repnz
push
push
cmp
or
stos
in
mov
ss
inc
mov
mov
pop
mov
xor
or
ljmp
out
dec
out
mov
lods
dec
popf
icebp
mov
inc
jg
scas
stos
mov
test
fsub
mov
sarl
das
add
inc
fildll
int3
pop
push
mov
fwait
imul
mov
mov
sub
ljmp
add
or
inc
shll
add
mov
and
xchg
aaa
outsb
scas
pop
cmp
xor
ret
cld
mov
popf
dec
cwtl
std
push
je
mov
imul
cmp
jmp
xchg
call
test
in
lahf
stc
call
xchg
jb
stc
add
popa
cmpsl
in
push
push
pop
pusha
mov
mov
ja
jle
xchg
adc
sbb
outsb
inc
adc
mov
paddw
add
int
iret
outsb
or
xchg
insl
sbb
inc
pop
mov
jp
bound
add
mov
jp
fistps
mov
jg
pop
sub
int3
int
idivb
xor
data16
push
cs
outsl
push
cmp
in
mov
cmpsb
dec
cli
jl
mov
and
dec
mov
ret
pushf
data16
fnstcw
aas
sbb
cmp
add
xor
jl
je
addb
in
add
mov
inc
push
mov
movsl
jne
lds
std
inc
in
fsubrl
movzbl
or
cmpsl
mov
jnp
insl
fcmovbe
jecxz
stos
lods
ljmp
jl
xor
xchg
sub
shlb
xor
mov
mov
fwait
ja
xchg
pop
jno
jbe
jg
fucomip
sbb
fildll
and
dec
ret
pop
repz
xchg
fistpll
xchg
adc
aas
sub
lock
ds
sub
jecxz
loopne
push
push
and
ja
cmpsb
ret
mov
rcrb
imul
push
in
scas
outsl
movsb
ret
add
arpl
xchg
lahf
pop
lods
pop
pop
js
dec
movsl
mov
lods
dec
pushf
shlb
aaa
adc
add
outsb
scas
fcomps
adc
push
jno
int
daa
sbb
add
addl
add
adc
push
pop
jmp
mov
jg
and
ljmp
mov
gs
aad
test
jmp
imul
inc
loopne
add
cwtl
aad
gs
loope
xchg
xchg
movsl
das
sbb
cmp
aas
mov
rorb
cmpl
sub
mov
fdivrs
scas
dec
sahf
mov
push
fistl
das
fdivrs
les
pop
pop
ljmp
mov
push
stos
sub
ret
sbb
add
test
jae
hlt
jae
out
push
inc
xchg
mov
addb
ljmp
fistps
inc
hlt
mov
mov
adc
and
lods
data16
push
icebp
in
inc
xchg
xchg
fimull
gs
stos
cmp
jo
pop
and
mov
in
mov
test
test
add
dec
and
push
sbb
aam
stos
mov
jle
in
push
int
push
xchg
push
lret
ja
or
or
mov
jmp
adc
pop
sti
cmpsb
sti
sbb
cmpsb
lret
loop
add
xchg
jmp
cmp
out
add
nop
or
sbb
xchg
mov
cmpsb
pop
dec
ss
movsl
jne
in
stc
in
test
push
test
jno
mov
cmpsb
pop
jbe
cmp
dec
shlb
xor
lods
push
mov
icebp
lret
xchg
inc
dec
sbb
fldenv
es
mov
and
pop
movsb
dec
adc
shl
xchg
dec
push
fsubrl
ds
test
das
cld
push
push
fisubrl
push
cmp
inc
std
aaa
les
sahf
cs
test
mov
xor
fdivl
cld
imul
out
fildl
movsb
call
pop
add
jns
dec
out
dec
in
cmp
or
xchg
and
rep
fidivs
sub
xchg
push
cwtl
push
loop
das
sbb
movsb
sbb
pop
cmp
xor
es
incb
mov
stos
lds
mov
dec
xchg
mov
aas
loopne
imul
cs
lods
push
lea
and
mov
push
ret
xor
add
sub
lret
inc
mov
jg
stos
pusha
lods
sbb
imul
dec
data16
outsb
ret
cwtl
adc
add
sbb
sub
mov
pop
xor
scas
mov
and
jg
cwtl
dec
addb
cld
in
sahf
arpl
push
push
mov
push
int
pop
xor
mov
pushf
mov
fnsave
shlb
enter
mov
adc
jno,pt
cmp
aam
adc
sbbb
stos
or
cmc
insb
pushf
fwait
out
pop
mov
scas
dec
xchg
shl
insb
adc
dec
cli
ljmp
addb
jg
or
test
push
fmuls
push
ds
mov
stos
clc
fcomps
jnp
cmp
scas
cltd
cwtl
lock
add
mov
lahf
mov
mov
xchg
lcall
inc
push
mov
test
mov
aam
mov
sarb
iret
ficoml
decb
and
inc
sub
add
movsb
jmp
jnp
mov
sbb
cmpsl
inc
sub
or
cmc
je
and
sbb
cmp
pushf
mov
das
jb
inc
call
pop
add
in
dec
cmp
imul
movb
and
inc
adc
dec
test
sti
popf
push
cli
data16
jecxz
sbb
dec
pop
dec
mov
fdivp
stos
clc
cmp
add
arpl
repnz
pop
adc
cmp
push
outsl
cmpsb
and
xchg
mov
push
ficoms
call
loop
pop
and
movsb
jecxz
jnp
mov
mov
inc
cmpsl
dec
adc
dec
sbb
mov
mov
shrb
int
imul
inc
pop
pop
mov
push
xor
imul
dec
pop
pop
jmp
scas
fistpll
loopne
mov
add
sbb
xor
psubq
push
mov
aaa
mov
test
push
std
and
sahf
aad
bound
loopne
add
cwtl
jg
pop
push
ss
aaa
aam
mov
pusha
in
lods
int3
shlb
leave
lahf
pusha
push
nop
fdivr
sarl
sub
fisubrl
and
dec
and
sahf
sub
push
push
movsl
ds
ds
clc
push
jns
hlt
in
inc
ja
jae
jp
lcall
nop
inc
fimull
test
fmuls
mov
push
sub
stc
gs
jl
rolb
or
pop
push
dec
pop
adc
xacquire
push
int
aam
std
addl
adc
dec
aas
sbb
aas
pop
and
cmpsb
shl
movsb
or
mov
push
pop
adc
sahf
xchg
jne
mov
jne
and
pop
mov
ss
mov
popa
push
or
adc
fimuls
fnstenv
push
daa
fmul
mov
mov
loop
pop
popf
cmp
or
or
sub
add
mov
pop
push
inc
movsb
dec
sbb
jns
cwtl
sbb
rcl
out
inc
push
movsl
or
cmp
fnstsw
cmc
arpl
ss
not
popa
outsb
pop
add
mov
and
jmp
test
fisubl
push
dec
les
sahf
fsubr
lahf
cltd
sbbl
clc
ja
addr16
test
inc
andl
sbb
stc
cmp
adc
pushf
or
lea
sbb
mov
cmp
mov
cld
fildl
adc
jne
out
mov
and
sbb
dec
push
mov
sub
cli
dec
xchg
mov
imul
negb
push
cltd
mov
cmp
push
mov
insl
push
and
add
dec
lahf
aad
vsubpd
dec
cwtl
flds
adc
cmc
out
ds
out
repnz
adc
mov
dec
shlb
fxtract
jmp
into
sbb
dec
pop
sbb
mov
or
lods
pop
mov
in
xchg
and
fisubrs
into
xchg
cmp
out
fistpll
pop
sahf
aad
dec
in
xchg
dec
mov
negb
lret
lret
adc
pop
sbb
lret
es
mov
insb
cmpl
push
adcb
mov
pop
in
in
enter
mov
cmpsb
in
lds
nop
outsl
sbbb
add
xor
jno,pt
dec
sub
and
mov
add
fs
sbb
or
mov
push
sbb
lret
mov
mov
adc
js
ss
sub
add
lret
mov
es
mov
xlat
mov
pushf
cmp
pop
or
push
adc
pushf
data16
mov
mov
inc
or
adc
fs
stos
jmp
fimull
test
mov
or
push
std
bound
pushf
cmp
mov
sbb
mov
sbb
imul
mov
inc
add
aam
fstpt
repnz
xchg
mov
sub
insb
mov
loopne
cmp
roll
push
or
sub
push
cwtl
inc
lret
adc
add
clc
mov
push
es
mov
push
loopne
xlat
arpl
das
cli
mov
jae
test
rol
fiaddl
adc
fsubrs
pushf
fisttpll
in
adc
jecxz
mov
arpl
icebp
pop
pop
push
or
shl
mov
dec
pop
aas
jmp
aas
int3
cmp
movsl
les
push
insl
push
push
push
or
cwtl
mov
inc
mov
fbstp
mov
push
pop
stos
add
mov
mov
aaa
pop
cmpsl
mov
outsb
pusha
pcmpeqd
mov
xchg
fmul
mov
xchg
adc
push
mov
or
push
adc
repnz
mov
cmp
loop
adc
xor
imul
xor
fadds
mov
insl
data16
fisubrl
pop
addr16
fiaddl
fwait
add
popf
out
add
loope
int3
loope
push
xchg
jo
imul
repnz
and
sahf
shrl
pop
into
add
je
mov
pop
sub
clc
ret
jmp
cmp
or
out
or
mov
add
jb
adc
xchg
clc
orl
sbbb
cmp
ss
fildl
adc
mov
xchg
int
in
adc
xchg
pop
sub
aas
lds
fdivrl
push
out
mov
fdivrl
loop
dec
popf
mov
repz
or
sbb
fsubp
push
aas
imul
lds
andl
mov
daa
fmuls
inc
xlat
cld
xchg
push
std
pusha
sub
inc
mov
or
cwtl
push
xadd
push
xor
and
fisubrl
enter
mov
pop
pushf
xchg
xchg
stos
movhps
pop
pop
out
insb
pop
dec
or
and
xlat
das
movl
and
xchg
xor
cmp
add
push
fwait
push
in
sbb
mov
adc
rolb
outsb
out
push
push
aas
leave
xchg
cmp
stos
vpmulhuw
xchg
adc
das
inc
ljmp
adc
dec
push
inc
jmp
in
ds
mov
push
and
or
or
je
ret
bound
imul
adc
pop
movsb
fisttpll
scas
cwtl
arpl
xchg
aas
lea
or
movsb
popa
xor
xor
movsb
push
into
sbb
sub
jg
and
jo
cwtl
stos
fisubrl
mov
fidivrl
and
cwtl
ja
adc
jp
jnp
pop
sbb
sti
lret
pop
mov
jne
push
add
mov
sub
pop
imul
or
or
dec
lahf
movsb
idivb
gs
in
pop
loopne
das
inc
scas
addr16
testl
or
out
pop
mov
cmpsl
xchg
lcall
dec
pushf
cmp
inc
jl
and
pop
ret
out
jl
je
dec
test
xchg
and
xchg
daa
loop
cmp
enter
mov
pop
sbb
idivb
jns
in
pop
xchg
inc
pop
push
mov
push
push
or
not
lea
add
push
mov
out
push
jle
add
fsubrl
cmp
enter
or
mov
stos
jl
idivb
call
dec
adc
fs
inc
jl
lods
movsb
mov
inc
sbb
push
ret
mov
dec
pop
adc
js
ret
test
jge
mov
lock
mov
jae
adc
xchg
out
and
fs
enter
sbb
or
les
xor
insb
sahf
and
stos
testl
movsb
push
dec
push
lods
dec
xlat
mov
aas
jo
jmp
insb
insl
rclb
movsb
push
sti
xchg
test
andb
cmpsl
xchg
clc
or
xor
inc
or
pop
es
mov
pop
sbb
mov
add
imulb
add
pop
add
xor
xlat
xor
fnstenv
fbstp
lret
ja
inc
sbb
test
sbb
push
and
dec
scas
pop
cmpl
mov
roll
enter
out
andb
inc
mov
and
scas
scas
stc
lahf
pop
stc
lahf
cmp
in
xchg
xor
jle
nop
xor
sbb
push
add
or
inc
mov
sub
or
repz
and
xchg
jns
jl
cmc
cmp
sahf
dec
aad
cld
cmpl
cmp
cwtl
inc
push
push
int3
jno
lock
or
bound
aad
push
pop
mov
mov
jne
imul
mov
jge
jge
jnp
inc
in
shll
push
loop
jmp
dec
into
sbb
dec
mov
or
jle
int3
loop
out
push
idivl
pop
mov
mov
ret
mov
pop
mov
daa
into
xchg
mov
insb
test
lret
adc
bound
push
mov
mov
cmp
mov
insl
dec
xchg
jae
addl
fnstenv
sahf
xchg
inc
pop
mov
push
xor
mov
lret
xchg
dec
add
lock
cmp
mov
xor
sahf
sub
addl
push
mov
aam
out
push
call
inc
sbb
cmp
fsts
enter
enter
push
cld
push
sahf
jp
test
inc
lods
jg
adc
repz
mov
cs
mov
data16
jb
addr16
dec
xchg
jbe
mov
sbb
lea
xchg
cmc
inc
cmp
push
inc
fisubrs
pop
sar
push
adc
call
mov
cmp
jbe
fwait
xor
jl
jno
cmpl
ror
aad
outsl
pusha
in
decb
fmuls
jl
mov
das
xchg
lock
aam
adc
sbb
xor
leave
lods
dec
mov
in
shll
inc
dec
mov
clc
fstps
mov
xchg
add
std
inc
push
movsb
cmp
sbbl
push
and
rol
mov
into
jnp
xchg
mov
call
dec
mov
pop
ja
push
cmp
sub
mov
enter
pop
pop
leave
inc
mov
gs
cmp
add
outsb
out
xchg
stos
mov
cli
std
cli
xchg
out
rorl
and
push
cmpsl
push
je
mov
aaa
leave
jns
inc
call
sahf
mov
out
adc
mov
push
mov
shll
and
ljmp
jmp
shll
fsubrs
sub
jbe
ja
std
xchg
add
mov
adc
aam
and
pushf
cmp
mov
add
or
dec
add
mov
int3
mov
pop
incl
shrb
jb
inc
mov
mov
adc
ljmp
ds
pusha
mov
sub
inc
xchg
push
pushf
mov
aas
jmp
mov
pop
dec
xor
jb
dec
push
and
push
mov
add
adc
adc
push
adc
sbb
movsl
and
pop
jne
jb
enter
add
add
fstl
push
out
mov
ret
sub
mov
and
popf
cmp
inc
adc
jmp
insb
fidivrl
sarl
in
and
adc
cmp
push
test
in
lret
mov
mov
push
scas
clc
xor
push
fistl
lea
adc
aad
dec
aad
push
mov
insb
repz
xchg
fidivs
push
add
jno
and
mov
push
push
dec
sub
addb
lret
stos
pop
imul
cmp
cmpsb
mov
xchg
bound
dec
push
les
add
dec
test
jmp
les
mov
push
ss
into
mov
adc
dec
jne
scas
add
fisubrs
stos
icebp
inc
dec
xor
push
adc
lods
mov
add
gs
xchg
ljmp
popf
sbb
or
mov
ficoms
pop
pushf
jmp
sub
in
xor
cmc
sbb
je
lret
xchg
std
loop
mov
adc
mov
xor
lods
lods
mov
cs
mov
fnstenv
mov
leave
cltd
jle
add
shll
xchg
fucomip
clc
or
or
add
fsubp
cmpsb
test
xor
ljmp
pusha
xor
jl
std
pop
lea
cs
test
push
out
loopne
sbb
mul
pop
and
je
dec
subl
sub
dec
jb
cmp
xchg
inc
into
mov
fmull
ret
fistl
dec
jb
jl
pop
imul
add
hlt
xor
push
and
mov
fnsetpm(287
in
dec
sbb
out
aas
xchg
push
push
xorb
mov
adc
xchg
inc
inc
xchg
stos
jbe
insl
les
xlat
sti
sbb
loopne
arpl
cmpsb
or
scas
arpl
xchg
pushf
fldenv
push
add
xchg
dec
cmp
mov
ja
xor
push
mov
rcrl
and
xchg
jo
cli
test
daa
loop
inc
repnz
or
dec
pop
imul
cmp
mov
dec
das
loop
jno
mov
jg
push
jecxz
pushw
dec
pushl
add
dec
aam
lcall
jmp
imul
jb
das
into
dec
xor
dec
pop
inc
or
push
inc
out
adc
jmp
xor
test
jl
cmp
cmp
push
adc
pop
cli
jecxz
pop
xlat
pop
test
jne
pop
and
stos
int
movb
push
jg
mov
add
in
sbb
mov
pop
js
iret
or
xor
fincstp
clc
rorl
pop
test
sahf
test
xchg
lret
gs
stc
mov
adc
rol
dec
sbb
das
xor
dec
scas
push
icebp
dec
shrb
fistpl
sub
xor
sub
ret
or
push
sbb
fidivrs
sub
sub
cwtl
mov
loopne
or
sub
pusha
add
out
mov
or
imul
nop
adc
mov
ret
mov
pop
pop
push
sahf
fwait
jne
lcall
lock
pop
lea
push
and
ret
mov
and
inc
outsb
xor
inc
xchg
sbb
andl
rorb
push
jb
xchg
fbstp
or
pop
nop
jo
adc
pop
sbb
insl
fcmove
jo
lods
mull
dec
push
jns
xchg
push
or
stos
mov
lea
mov
lock
cmpsl
mov
sbb
jo
adc
mov
jmp
mov
xchg
mov
xor
loop
dec
sub
movl
xchg
pusha
and
dec
flds
mov
ljmp
ret
push
clc
jl
and
xchg
test
fisubrl
fcoml
xor
leave
sbb
push
testl
adc
dec
lahf
mov
jo
lcall
popa
dec
pusha
aaa
xchg
push
mul
loop
sub
movsb
in
mov
xchg
mov
inc
inc
sbb
mov
pop
ljmp
or
out
xlat
jp
mov
jae
enter
insb
sub
loop
mov
mov
das
iret
pop
sbb
adcl
or
fwait
cmp
push
fldcw
push
into
mov
sbbl
cmp
mov
mov
in
sub
and
loope
mov
lods
mov
aad
mov
push
inc
xor
fistpl
xchg
inc
cmpsb
add
jmp
int3
imul
adc
cmpsb
lds
push
repz
jne
cmpsl
sbb
jle
push
insl
mov
ds
shlb
mov
cmp
cwtl
leave
inc
sbbl
call
adc
scas
inc
in
out
test
mov
mov
insb
mov
repnz
arpl
fsubrl
pop
in
cmp
das
add
fidivl
into
iret
jge
movsl
sbb
stc
jp
bnd
repz
mov
adc
out
std
fimull
inc
cli
sbb
shll
call
loope
jns
xor
mov
adc
mov
and
and
jne
repnz
jb
rcrl
ss
sbb
cmpsb
add
test
push
push
push
and
flds
ret
add
mov
adc
aaa
imul
popf
push
stc
push
aad
jmp
pop
arpl
adc
movsl
jmp
lds
inc
xor
data16
xor
jle
mov
lds
add
and
insl
in
cmpsb
push
loopne
outsl
add
jge
adc
sti
movsl
inc
shl
les
test
jae
fimull
sbb
imul
pop
pop
enter
insl
mull
cmpsb
push
fwait
lods
pop
fists
add
aam
xchg
pusha
adc
lock
xchg
gs
out
mov
test
rorl
mov
call
pushf
jnp
es
jge,pt
cmpsl
test
dec
xchg
sub
push
sub
arpl
or
fistps
mov
jnp
sub
dec
fidivrs
les
sbb
lock
fsubs
nop
mov
mov
mov
or
ja
aam
adc
ss
add
push
adc
movsl
sar
jns
imul
fsubr
pop
pop
jge
loopne
lock
or
ret
push
add
mov
cmp
test
xor
scas
fcompl
push
inc
or
jg
out
mov
test
test
jg
insl
into
outsl
xor
push
cli
jle
daa
frstor
dec
xchg
and
out
jmp
shrb
jne
in
inc
xchg
fists
mov
sahf
in
or
mov
cmpsl
xchg
imul
jp
xor
add
orb
pop
pop
push
das
xchg
jge
out
jmp
xchg
sub
xchg
stos
sbb
out
leave
jg
hlt
and
mov
int
xor
pop
mov
lahf
dec
xchg
and
push
sub
int
and
jne
out
adc
daa
pop
loopne
xchg
mov
cmp
sbb
jge
push
call
fucomip
push
mov
mov
sbb
cmp
inc
cmc
rol
and
daa
andb
push
inc
clc
test
add
pop
or
dec
xchg
push
cmc
xchg
mov
fistpll
out
xchg
adc
rorl
mov
in
shr
xorb
jl
int3
cltd
jae
xchg
mov
push
lcall
arpl
pop
les
push
mov
test
inc
test
jmp
and
or
lcall
add
xlat
lock
test
mov
fadds
shll
jg
lea
insl
je
dec
xorl
cwtl
inc
push
and
in
mov
mov
adc
jg
inc
jnp
clc
scas
xor
jb
arpl
jmp
clc
sbb
pop
mov
pop
adc
jl
iret
sub
clc
in
dec
fwait
loopne
cmp
divb
int
mov
cwtl
mov
push
and
jnp
stc
adc
xorl
push
and
mov
mov
out
jbe
cli
lods
iret
test
xchg
push
and
mov
mov
pop
ja
movl
lods
cmpsb
mov
outsb
ret
jne
or
loope
inc
cli
push
shrw
xchg
mov
jae
pop
pushl
je
nop
popa
jl
fmul
addr16
mov
pop
out
out
ss
fmull
rcrl
mov
add
push
adc
shll
stos
add
cmp
mov
call
ret
push
out
adc
sub
dec
jo
adc
and
pop
addr16
jecxz
jbe
mov
mov
add
and
push
sbb
xchg
ja
scas
sbb
dec
out
adc
cmp
sti
cmp
pop
xchg
ljmp
inc
and
push
adc
mov
lods
lods
dec
sbb
jns
push
loopne
mov
or
xchg
inc
and
mov
or
push
dec
jp
fisubl
adc
push
cmp
lock
pop
stc
repnz
jg
sub
jge
sub
and
outsb
and
in
xor
sub
mov
sub
or
mov
xlat
das
push
movl
insl
pop
jne
mov
aam
imull
inc
push
ljmp
add
outsl
push
mov
xchg
mov
sbb
pop
push
push
or
and
rcrb
adcl
sbb
aas
insb
sbb
sub
stc
sub
enter
jno
pushf
sub
xor
nop
and
mov
mov
mov
out
inc
mov
mov
xchg
ret
inc
sti
rol
dec
rorl
sub
stos
dec
loop
and
sbb
and
push
dec
pop
pop
mov
fisttpl
push
inc
push
movsb
mov
push
jo
cwtl
std
std
pop
enter
sti
or
adc
cmpsb
in
movsl
movsb
push
jo
push
cmp
pop
enter
decb
pop
scas
pop
ss
mov
push
dec
push
xor
or
daa
outsl
and
dec
push
push
and
mov
adc
pop
rclb
mov
xor
ljmp
push
xlat
aas
push
jnp
dec
das
mov
jmp
daa
movsl
mov
inc
or
mov
xor
pop
push
and
jo
mov
mov
push
adc
out
adc
dec
rcll
ja
pop
xchg
in
sub
dec
xchg
and
out
cmp
and
cs
cmp
mov
xchg
jmp
mov
pop
cld
out
sbb
adcb
out
push
test
arpl
cltd
loope
sbb
or
and
into
sub
dec
adc
push
test
lea
pop
imul
mov
lcall
adc
add
rcl
mov
add
dec
mov
aam
and
push
arpl
pop
push
xor
jae
stos
pop
rcrb
jl
je
mov
push
push
pop
xchg
pop
or
sub
sub
pop
inc
andl
das
cmp
push
xchg
sahf
into
mov
adc
dec
into
xchg
cwtl
inc
fistl
sahf
in
loop
push
adc
roll
or
iret
xchg
mov
push
sub
inc
cmp
sbb
and
sub
clc
fwait
xor
std
hlt
pusha
test
cltd
leave
add
outsl
cmc
movsb
sbb
push
and
or
ret
push
mov
dec
bound
push
sub
push
jne
sarb
shll
or
scas
ret
sbb
jae
xchg
pop
jecxz
cmp
cld
ret
movsl
dec
push
fcmovu
insb
xor
xlat
test
int3
pop
jne
and
mov
jbe
sbb
shrl
xchg
mov
sub
loop
ss
mov
push
mov
jnp
xlat
push
mov
int3
lds
jb
pop
test
jns
arpl
fldcw
enter
dec
or
lods
push
pop
push
xor
into
cwtl
and
or
hlt
sub
xor
ss
loop
lcall
ficoms
das
xchg
pop
inc
movsb
sub
sti
cld
sbb
xor
je
xchg
mov
add
jb
in
cs
lock
mov
je
cmp
shlb
mov
pop
cmpsb
pushf
xchg
ror
test
pusha
and
sbb
lret
adc
popa
adc
xor
or
fcmovnbe
mov
ss
ljmp
pop
pop
imul
int3
dec
xor
nop
fs
inc
das
fadds
lods
mov
mov
xchg
fcoml
inc
sahf
shll
ja
rcrb
mov
inc
jmp
sbb
js
fidivrs
mov
mov
sahf
insl
bound
jne
push
clc
xchg
fldt
jno
pusha
ret
inc
enter
add
sub
mov
bound
imul
fsub
popw
sarl
mov
flds
push
out
adc
and
adc
cmpsb
sub
jo
inc
aad
fwait
lds
jl
sbb
jmp
xor
daa
dec
out
adc
pop
sub
mov
adc
add
out
adc
or
push
fwait
pop
notl
sarb
shlb
mov
cmp
inc
out
adc
pop
neg
ljmp
mov
pop
shr
lods
pushf
xchg
out
xchg
mov
mov
push
inc
notb
repz
mov
or
ja
dec
cmp
push
pop
mov
sahf
jge
and
dec
push
or
outsl
jmp
pop
rolb
stc
mov
sbb
and
lea
mov
pusha
and
scas
movsb
jmp
cmpsb
insb
add
xchg
sbb
sub
sarb
push
push
push
shr
adc
bswap
mov
ret
pop
int3
enter
es
cmp
loope
cmpsl
mov
mov
int3
mov
inc
cli
push
loop
cmp
lods
cli
mov
pop
adc
jge
fnstenv
clc
nop
xor
dec
pop
in
lahf
sub
ret
jbe
lock
int3
jae
ficoml
setns
jae
or
add
pop
and
mov
xchg
shlb
dec
inc
enter
push
lods
xor
jns
stos
movsb
fwait
outsl
pop
and
mov
push
enter
push
fists
inc
insb
mov
mov
fisttps
movsl
cli
in
mov
and
movsl
push
xor
adc
and
push
xchg
xchg
rcrl
dec
adc
and
pop
adcl
sahf
mov
mov
mov
cmp
mov
movsb
push
add
mov
in
push
cwtl
add
xchg
push
inc
gs
movsb
adc
cmc
mov
dec
arpl
std
jmp
aam
stos
cs
popf
or
add
lret
and
popf
push
jle
ljmp
es
aas
mov
push
loopne
outsb
jl
sub
stos
mov
pop
push
mov
out
mov
pop
dec
dec
test
addl
stos
pop
sub
jbe
shlb
fs
mov
movsb
test
mov
stos
cmp
cli
hlt
jmp
fcompl
mov
cmp
adc
cmp
loope
mov
jp
push
sub
mov
dec
stos
mov
das
fsts
mov
push
je
add
mov
clc
in
or
and
xchg
out
jb
adc
xchg
mov
int
adc
push
dec
scas
test
sub
addr16
lahf
and
sbb
xchg
test
sbb
int
outsb
pop
lds
jno
fdivl
fistpll
jmp
jns
subb
imul
inc
sub
fisubrs
add
std
in
push
cmp
mov
and
mov
and
dec
cltd
fldt
shrl
dec
pop
sbbl
outsb
scas
in
cmp
push
push
arpl
add
adcl
jmp
imul
jne
xchg
mov
cwtl
or
mov
add
xchg
pand
lret
mov
dec
ss
xchg
push
fildll
inc
in
mov
jl
add
or
inc
push
add
pop
jbe
lahf
movsl
adc
incl
or
loop
js
decb
push
pop
or
xchg
pop
jne
fldcw
fwait
pop
gs
cmp
hlt
inc
into
sbb
orl
sub
popa
add
out
mov
pop
cld
fmuls
lret
imul
cmc
ljmp
sbb
mov
loope
mov
movsl
mov
pop
ja
inc
cld
std
or
or
sarl
gs
adc
jae
sub
sub
cli
lret
pop
pop
pop
ret
xlat
das
push
imul
insl
xor
fistpl
andl
enter
push
gs
cli
cmc
xchg
rcll
test
ds
lcall
outsl
push
enter
incb
sub
lret
jne
lock
aad
mov
mov
or
mov
pop
pop
pop
int3
enter
call
test
inc
add
lds
cmp
push
aad
inc
push
mov
sub
out
in
push
lret
dec
out
mov
stc
sub
incl
jbe
push
lea
dec
imul
pusha
pop
cmpsl
inc
push
xchg
adc
gs
push
adc
pop
popf
jmp
loope
inc
ret
push
mov
mov
addr16
or
pop
rclb
ret
movsl
dec
out
mov
outsl
pop
outsb
or
sbb
leave
cwtl
jl
insl
ffree
in
add
or
inc
push
adc
cli
pop
repnz
jecxz
cld
out
lods
inc
or
push
lea
cmpsl
es
mov
dec
and
dec
outsl
pop
jmp
repnz
xlat
sbb
loopnew
aad
int
pop
test
fldenv
mov
in
xchg
out
xchg
push
shr
sbb
je
jns
fdivrs
jbe
pop
gs
fstl
sub
mov
jno
mov
loopne
push
sub
test
jbe
es
adc
or
cltd
imul
jns
jns
adc
pop
or
push
cli
std
xchg
cmp
lahf
mov
pop
adc
sub
adc
repnz
adc
cmc
psubq
icebp
pop
adc
cltd
sti
mov
fsub
dec
push
adc
xchg
add
cmpsb
cli
lods
loope
sub
mov
dec
lcall
push
imul
test
pushaw
pop
cltd
add
fsubs
inc
aam
adc
lods
sub
push
adc
fwait
scas
pop
mov
xchg
mov
aad
pop
es
add
test
mov
xchg
sub
stos
rorl
ds
lea
cmp
inc
fs
in
xor
loop
adc
mov
movsl
mov
fcoms
add
ss
dec
mov
push
jae
mov
and
lds
pop
jmp
call
aad
fnsave
arpl
or
lods
xchg
test
jp
mov
fwait
sbb
xchg
push
pop
gs
push
fdivrl
add
rorb
jo
add
data16
mov
xchg
loop
xchg
out
shrl
bound
fs
in
movsb
out
push
lds
dec
push
add
mov
int3
in
push
cli
and
rorb
aad
sahf
sti
push
push
mov
sahf
jne
sbb
cmpsb
imul
mov
mov
nop
and
inc
cld
pushf
jne
push
jg
popa
ficomps
ret
outsl
stos
push
mov
push
cmpsb
insb
scas
mov
lods
mov
jno
fs
and
inc
sbb
sbb
jo
lret
mov
lock
imul
adc
cli
lods
fcomps
insl
mov
inc
adc
mov
jge
in
dec
mov
xchg
pop
adc
roll
cmp
out
nop
add
cmc
and
adc
cmpsl
insl
scas
mov
lods
mov
xor
popf
fcoms
adc
mov
sahf
pop
push
es
inc
out
mov
mov
lods
pop
mov
push
stc
in
dec
jmp
mov
int3
push
cmp
push
inc
cmp
pop
xchg
and
push
ja
insb
addb
adc
adc
mov
push
xchg
insb
fidivl
les
cmp
inc
fst
lret
rorl
ret
dec
pop
push
in
mull
sti
popa
push
lock
fsubr
mov
enter
inc
or
mov
mov
pop
pop
sub
rcr
inc
fstpt
push
adc
dec
push
movsb
xor
lahf
insl
cmp
jecxz
faddl
sub
adc
dec
movsl
and
push
adc
faddl
dec
arpl
pop
shlb
xchg
repnz
cli
cmc
push
and
jne
icebp
imul
xor
and
movl
je
lea
push
jle
scas
xchg
cmp
mov
in
lret
jno
inc
add
popf
pop
sub
aas
fnstsw
jge
jge
andl
mov
fstl
ret
push
insb
inc
test
mov
sahf
mov
rorb
pop
inc
lahf
lret
sarl
out
out
fisubs
xchg
lods
pop
stc
fs
jecxz
imul
in
mov
jnp
push
pop
inc
xor
add
jo
xor
inc
call
je
dec
adc
xchg
pusha
insb
jns
loopne
dec
insb
outsb
push
cmp
push
repz
clc
or
cmp
sti
sbb
inc
push
pop
ficomps
test
add
cmp
test
inc
mov
popa
int
outsb
fildl
stos
jl
out
jo
jmp
sahf
ret
testl
aas
lret
xchg
dec
push
shl
aas
push
adc
add
lcall
test
clc
data16
jg
out
mov
in
lret
js
mov
lock
lret
adc
cmp
push
jg
or
add
fucomp
push
lods
sbbb
loopne
fstl
or
mov
lds
je
popa
inc
sub
mov
andb
xchg
mov
adc
pop
adc
rcl
mov
std
js
pop
pop
daa
push
cmpl
mov
cmp
lock
les
jp
or
inc
mov
stos
out
mov
aam
out
ss
movsl
adc
pusha
in
fdivl
outsb
sbb
cmp
ss
cmp
mov
ss
add
dec
xor
nop
push
xchg
push
cmp
add
inc
cmp
insb
aad
in
xchg
push
sbb
in
or
outsb
sbb
movsb
push
ljmp
add
icebp
or
sub
push
push
ret
inc
fisubrl
push
shlb
movsl
xor
sub
movsl
movsb
fwait
pop
xchg
push
test
insb
fiadds
mov
mov
out
or
test
rcrl
and
std
jmp
popa
sbb
mov
data16
ret
or
scas
xchg
std
sub
es
mov
inc
movsb
popf
das
inc
pop
mov
and
inc
pop
ret
push
add
adc
cmp
loop
test
adc
mov
mov
pusha
notb
lret
dec
out
inc
xor
xchg
cmp
enter
cmpb
hlt
scas
lods
pop
out
mov
andl
push
cmpsb
nop
and
faddl
sbb
ret
stos
mov
dec
out
inc
xor
xor
and
dec
pushf
cmp
hlt
aas
push
adc
cmpsl
repnz
pop
sti
movsb
ret
gs
inc
in
inc
addb
xor
lods
push
pushf
call
sahf
data16
push
mov
sbb
mov
adc
stc
fadds
push
mov
sbbl
enter
adc
gs
lods
pop
mov
je
addb
inc
addb
sarl
addr16
insb
out
mov
ret
mov
push
dec
push
sbbl
insl
inc
push
adc
cmp
inc
leave
int
andb
nop
loop
movsl
movsb
ret
popa
xor
nop
and
aaa
cs
pushf
cmp
add
lret
insb
push
std
jo
ljmp
scas
mov
sub
push
scas
int
sub
int3
sub
jg
aam
mov
aas
fwait
and
shlb
sar
outsb
and
add
addr16
inc
subb
jge
shrl
mov
jecxz
addb
push
mov
shr
movsb
dec
in
mov
andl
hlt
iret
sti
ja
or
and
dec
or
mov
push
aad
pusha
pop
jno
in
std
aad
mov
mov
sub
add
loopne
sbb
loop
jne
aad
xor
xor
movsl
lods
push
das
aaa
jnp
mov
xor
push
enter
sbb
xchg
sahf
and
mov
pop
pop
xchg
shlb
stos
lods
sub
jae
data16
or
jne
out
test
mov
xchg
sti
cld
adc
test
jbe
out
aad
cld
shlb
mov
shl
cltd
loop
adc
mov
out
arpl
adc
jmp
mov
pop
push
insl
pop
xor
dec
cld
xor
pop
mov
loopne
in
xor
fwait
mov
aad
nop
xor
cld
xor
inc
js
loopne
adc
iret
lea
stos
sub
xor
ret
ss
int3
je
cmp
or
push
cmp
jle
inc
enter
xchg
xor
ffreep
insb
mov
jbe
repnz
into
out
sub
xchg
rclb
pop
fnsave
pop
adc
push
ljmp
push
or
and
movsb
mov
shl
adc
test
pop
adc
and
sub
pop
adc
mov
sbb
dec
insb
in
pop
adc
cmp
icebp
pop
adc
mov
ret
mov
adc
or
adc
repnz
ret
in
pop
adc
push
and
push
fwait
andb
pop
adc
pusha
jbe
xchg
xchg
pop
adc
std
imul
dec
inc
cli
sbb
adc
in
mov
ret
pop
adc
ffreep
adc
lret
or
adc
or
into
inc
jb
xor
movsb
cld
pop
adc
mov
and
lock
adc
sbb
xor
out
jl
pushf
testb
pushf
ljmpw
outsl
mov
or
out
adc
cmp
insl
lea
pop
adc
lret
adc
mov
or
leave
fistpll
incb
pop
fcomps
push
or
xor
stos
es
or
and
cmp
xor
call
jg
fbstp
adc
push
dec
pushf
mov
ja
jg
lock
pushf
push
mov
cmpsb
inc
out
mov
insb
loope
lcall
or
mov
hlt
ljmp
xlat
xor
shll
adc
loopne
xchg
jo
cmc
or
sub
subl
cmp
xor
sbb
mov
adc
jg
add
outsl
push
mov
sbb
adc
and
cwtl
lock
add
xchg
cmp
shl
imul
cmp
and
ja
push
cs
sbb
aad
inc
add
add
cwtl
data16
xlat
insb
fcmovnu
insl
mov
out
jns
adc
aaa
sbb
in
or
add
pop
shlb
xor
push
lods
push
pop
sbb
adc
and
in
and
adc
call
xor
shll
adc
loopne
shrb
clc
cmc
shrl
lods
fcom
xchg
fstpt
and
pop
cmpsb
mov
push
int
idivb
ljmp
push
sbbl
insl
adc
mov
mov
cmp
adc
cmpsb
clc
adc
pop
or
mov
mov
xchg
imul
adc
sbb
jmp
pop
or
addl
shll
bound
adc
sub
les
insb
subb
add
pop
sbb
inc
into
mov
fidivrs
cmpsb
aaa
cmp
shrb
pusha
mov
mov
mov
add
stos
add
into
bound
fs
cld
xor
mov
adc
adc
mov
mov
adc
popf
std
mov
je
pop
int3
loopne
or
sub
lea
into
into
cmp
inc
js
setbe
jo
in
das
fistpl
fwait
mov
out
sbb
sbb
test
pop
cmp
pop
sub
imul
aam
inc
sub
mov
testb
out
push
adc
jne
add
xchg
lret
cwtl
lret
add
nop
push
imul
cli
scas
stos
call
aas
cli
out
or
orl
adc
cmp
aaa
in
pop
mov
movsb
mov
test
and
pop
insb
push
jge
adc
mov
mov
mov
sbb
xor
sub
jbe
and
inc
addl
sub
fcmovne
jp
mov
xlat
and
mov
lahf
mov
push
outsl
fs
std
mov
push
sub
pop
jp
int3
mov
insl
push
and
js
pusha
mov
es
adc
inc
cmp
hlt
insb
sarl
add
pop
std
stos
sub
inc
out
test
cwtl
out
adc
ror
cmc
les
les
xor
sub
ret
popf
fstl
pop
or
push
stc
dec
xor
addr16
push
jecxz
mov
push
adc
cmp
mov
lock
jge
and
divb
adc
xchg
idivl
mov
call
call
cmc
lret
mov
imulb
cmp
loopne
jo
push
adcl
andl
dec
iret
inc
adc
xor
fwait
sbb
xchg
cmp
shlb
ret
test
xchg
in
inc
adc
jb
bound
hlt
jmp
push
adc
xor
in
sahf
outsl
push
dec
or
mov
pusha
fcmovnu
stos
mov
jns
dec
xchg
scas
movsl
jmp
add
fbstp
ret
dec
jmp
dec
xchg
push
repz
rorl
aam
push
push
fisubl
and
add
add
enter
cli
rorb
xchg
cli
out
xchg
mov
sbb
enter
incb
pusha
xchg
sub
sbb
jmp
xchg
fcom
push
mov
mov
imul
mov
sahf
and
imul
sbb
inc
mov
outsl
lcall
or
inc
cs
in
scas
shll
pop
test
xor
and
xchg
in
cli
cmc
sahf
in
or
mov
test
adc
and
push
and
nop
push
outsl
cmp
test
mov
std
inc
addr16
movsb
cmp
cmp
sub
pop
sbb
inc
pop
out
jl
mov
jp
stos
push
xor
push
repz
mov
movsl
cmp
inc
pop
mov
jl
outsl
xchg
inc
cmp
es
aas
cmp
sub
inc
aad
pop
cmp
mov
rorb
call
add
lcall
cmp
xchg
notb
cmpb
addr16
pop
pop
outsb
push
icebp
imul
out
cltd
mov
loope
xchg
lods
push
test
cld
jp
arpl
aas
and
sub
cwtl
punpckldq
mov
mov
adc
or
push
pop
mov
mov
xlat
es
movsb
pop
mov
inc
fcom
sbb
ret
pop
pop
xchg
jp
loop
rol
inc
push
adc
dec
cltd
mov
out
adc
or
inc
addr16
stc
mov
dec
lea
xor
adc
push
mov
push
lds
iret
outsb
sub
dec
das
xchg
sbb
and
dec
insb
sub
sub
lds
jns
jmp
js
jle
xchg
leave
add
jmp
fidivs
push
ficoml
pop
fidivrl
inc
ja
mov
insb
ja
lea
jl
enter
outsb
arpl
mov
dec
mov
call
repnz
xorb
jbe
leave
pop
adc
mov
into
sub
mov
mov
in
mov
lcall
test
lock
aas
adc
insl
rcl
add
sub
loope
ds
dec
or
inc
pop
sbb
or
jmp
aas
inc
add
ja
rorl
xchg
mov
aad
mov
mov
andnps
or
cmp
arpl
or
jmp
sbb
addb
and
loop
je
in
add
sbb
sub
loope
pop
dec
xchg
mov
xchg
movsb
dec
and
inc
push
adc
mov
dec
pop
sub
fucom
mov
nop
xchg
loope
add
jb
sarb
add
je
or
out
insb
lret
dec
cmp
jb
dec
out
shll
dec
daa
mov
pop
adc
cltd
inc
clc
fistpll
adc
add
outsl
xchg
pusha
dec
fsubl
ss
imul
mov
adc
fmul
cltd
mov
adc
adc
mov
sarb
insb
scas
cmp
mov
xor
fcmovne
loop
pop
jns
pop
push
mov
sub
adc
cmpb
push
adc
pop
sbb
fdivr
jmp
loop
xchg
ljmp
imul
inc
push
adc
rcr
outsb
mov
test
adc
sbb
faddl
inc
fsts
inc
movsl
ret
xchg
mov
sub
adc
das
fs
xchg
loop
and
push
adc
out
inc
or
popf
inc
push
adc
test
pop
mov
aaa
mov
mov
cmp
in
cmc
faddl
lock
mov
pushf
pop
mov
daa
mov
lret
les
popf
pop
cmp
lock
pop
adc
mov
aam
es
cmpsb
or
and
sub
repz
fsts
test
insb
fidivl
xchg
leave
xor
addl
cmp
pop
jns
inc
sarb
loopne
outsb
test
ss
dec
adc
inc
fstl
std
insl
mov
pop
adc
push
push
cmp
repnz
adc
push
dec
pushf
cmp
or
add
outsl
pop
mov
ret
adc
cmp
mov
in
inc
lds
push
ds
std
or
in
movsb
repz
cmp
or
shrl
enter
rorb
sbb
test
adc
sub
lods
xchg
sbb
repnz
adc
sub
nop
and
dec
jno
pop
lods
pop
mov
adc
or
dec
xorl
stos
add
mov
mov
lods
jo
push
sub
push
call
adc
add
ljmp
lea
pop
cltd
addr16
gs
sub
adc
loop
mov
mov
repnz
adc
mov
add
add
adcl
out
mov
fdivs
sbb
or
jmp
fwait
jnp
loopne
add
mov
das
mov
sarb
arpl
div
mov
pop
lods
sbb
xor
popa
push
mov
mov
pop
adc
jbe
mov
repnz
adc
xor
jecxz
inc
out
lea
inc
mov
dec
sub
ret
adc
ret
mov
jnp
adc
enter
int3
ljmp
bound
fadd
jns
adc
mov
test
ds
pop
test
insb
mov
sub
adc
in
and
push
adc
es
int
aam
cmp
mov
cmp
xor
lret
lods
adc
shrl
inc
ljmpw
rcrb
xor
incl
scas
jl
and
dec
inc
test
mov
lea
movsl
lret
inc
rcr
mov
xor
shll
or
and
xor
movsb
add
mov
dec
push
das
mov
out
stos
and
ja
mov
push
adc
cmp
and
arpl
push
stos
pop
xor
and
cmpsb
inc
fst
mov
cmp
pop
xchg
sti
outsb
sub
and
nop
test
mull
cmp
aam
addr16
pop
adc
jns
mov
repz
shlb
cwtl
leave
mov
in
fnstenv
dec
sbb
cmp
je
int
jns
jmp
and
sahf
fisubrs
adc
cli
ret
push
xchg
jmp
ss
jge
xor
stc
daa
xchg
xchg
gs
in
scas
daa
aas
rolb
xchg
xchg
shlb
call
ss
cmp
insl
test
mov
cmc
lahf
mov
dec
inc
insl
into
dec
dec
xchg
sub
out
outsb
and
xor
dec
dec
stc
dec
movl
addb
jnp
inc
in
push
adc
scas
pop
jns
jmp
sbb
or
subb
dec
push
pushf
insl
dec
inc
xor
and
lods
mov
fisubrl
sub
push
adc
add
or
mov
xchg
mov
pop
in
pop
testl
jo
push
sbb
dec
pop
fcmovu
imul
dec
outsl
fwait
les
add
add
outsb
jecxz
inc
push
adc
clc
rol
mov
dec
cmc
faddl
inc
adc
dec
sbb
mov
jge
not
sub
ljmp
popf
and
add
rcll
push
jb
shlb
push
mov
aam
adc
push
adc
or
cltd
fnstsw
mov
jnp
jecxz
pop
rorb
mov
add
and
fwait
push
adc
or
cltd
fnstsw
inc
push
sahf
insb
or
in
aad
xchg
int
loope
ret
mov
mov
or
push
mov
aas
fucom
dec
fcoml
shll
push
shl
pop
cmpb
xor
pop
push
jle
inc
or
sbb
sarl
inc
lahf
vmovapd
or
enter
add
jo
pusha
rcr
dec
call
scas
xchg
bound
movsl
cmp
push
aaa
outsl
mov
or
jne
clc
rcrb
push
ret
popa
jecxz
bound
xorb
inc
add
sbb
in
mov
das
mov
lret
ljmp
mov
sbb
jns
push
ja
mov
mov
and
aas
imul
daa
mov
les
or
and
jp
or
mov
ds
xlat
stos
xor
push
daa
push
xchg
in
push
ret
div
mov
cmp
pop
push
shlb
mov
mov
adc
sbb
arpl
push
add
sbb
or
cmc
lock
push
testl
xchg
test
cld
inc
xlat
test
daa
push
mov
scas
adc
xor
jbe
ja
xchg
jo
dec
out
mov
add
pop
lods
ss
cld
or
jg
js
mov
negl
int3
imul
popa
inc
stos
mov
cmpsl
xchg
int
inc
inc
add
movsb
mov
mov
insb
je
push
mov
test
adc
je
xor
push
cwtl
xchg
loop
jb
sub
ja
jg
inc
jmp
fnsave
or
daa
lods
mov
sub
inc
addl
pop
inc
push
adc
cmp
sub
pop
dec
into
outsb
cli
xchg
ret
les
in
cmp
clc
cmpsl
sarb
andb
ljmp
cld
dec
or
sbb
stos
insb
or
cmp
lea
mov
mov
lcall
pop
rcll
test
add
and
fisttpl
aas
cmpsb
pop
clc
lret
fistpll
out
and
pop
mov
adc
jl
mov
dec
out
mov
dec
mov
xor
add
ffree
cmp
mov
xchg
stos
sbb
lods
loope
shl
nop
imul
mov
xor
jbe
movsl
pop
jne
ret
mov
test
pop
test
jecxz
mov
pop
jne
loopne
or
popa
and
dec
mov
push
jl
or
jno
aas
mov
add
adcl
imul
xchg
lcall
jle,pn
lods
xchg
xor
test
push
pop
add
dec
sub
xchg
sbb
adc
lcall
push
test
push
imul
cmp
ja
in
adc
mov
fistpl
loope
pop
cmpsb
in
test
jl
xchg
rcrl
idivb
xchg
dec
stos
lods
shr
gs
insl
sbb
fsubrs
pop
sbb
jbe
mov
loop
add
push
in
out
adc
push
jle
popf
xchg
scas
pop
sbb
mov
push
mov
in
sub
test
hlt
mov
ret
lods
int
pop
stc
dec
mov
pop
enter
push
popf
inc
push
cwtl
nop
and
ss
lock
mov
mov
addr16
mov
mov
xchg
mov
pop
dec
outsb
aad
jae
test
mov
and
add
inc
insl
mov
fstpt
push
imul
xchg
int
pusha
inc
imul
ret
std
xor
aas
sub
cmp
in
sub
mov
outsl
mov
push
push
loop
sub
xor
lahf
inc
pop
adc
cs
in
xchg
adc
xchg
sbb
adc
jb
adc
call
jne
inc
je
sbb
lods
add
or
jnp
shrb
lods
pop
mov
xor
push
push
inc
jne
roll
daa
gs
mov
mov
push
es
mov
mov
add
and
mov
testl
mov
out
pop
popa
loop
lods
sub
mov
adc
pop
rorb
ljmp
out
dec
nop
push
icebp
fs
pop
add
push
jge
push
push
fwait
in
mov
call
sbb
mov
xor
fs
bound
adc
lock
push
sub
fcmovb
outsl
push
inc
adc
aad
mov
shlb
int
cwtl
movzbl
push
imul
fdivp
adcl
inc
and
mov
outsl
push
cmp
or
int3
arpl
adc
pop
sub
insl
es
add
inc
ja
or
iret
das
repnz
push
adc
and
stos
mov
pop
std
or
popa
cmc
lds
lret
mov
inc
test
icebp
imul
pusha
jmp
mov
jge
lods
popf
cmp
pop
lds
jbe
loope
push
xor
cmp
dec
int3
out
imul
dec
jge
xchg
jae
out
roll
adcl
shll
lcall
testl
iret
xor
xchg
ffree
js
sub
mov
cmp
std
fxch
push
inc
or
call
cmp
push
adc
pop
inc
xlat
test
bound
clc
add
jae
and
call
xchg
push
dec
mov
mov
fidivl
int3
shl
adc
xchg
adc
stos
pop
mov
push
pop
int3
jne
fcoml
aas
lahf
aad
imul
pop
addr16
pop
and
jbe
jo
adc
popf
fmull
inc
popw
rcll
adc
sbb
test
push
adc
shrl
lock
out
mov
insl
mov
and
and
jno
and
lahf
std
loop
mov
lods
arpl
jae
jp
es
lock
out
loop
mov
push
adc
aas
repz
or
rorl
fsubrl
push
push
hlt
mov
mov
fs
shlb
adc
imul
scas
into
mov
es
negl
sbb
outsb
sbb
push
adc
dec
adc
sub
or
mov
repnz
jmp
xor
push
adc
lcall
or
ret
dec
sub
pushf
repz
fidivl
fadd
push
int
adc
push
aad
sbb
ss
test
push
push
xor
mov
push
repz
out
mulb
imul
jo
decl
insb
add
sti
mov
xor
push
rcr
sahf
mov
faddl
add
pop
lds
outsl
frstpm(287
cmp
mov
mov
and
cmpl
push
repz
push
jno
inc
mov
fidivl
jg
mov
sbb
push
push
push
cmc
pusha
mov
sbb
ret
and
popf
dec
sbb
push
pushf
push
mov
loop
sub
fwait
out
lahf
dec
push
dec
pop
leave
stc
mov
add
adc
scas
repz
sti
gs
cmp
arpl
icebp
cltd
jl
stos
add
inc
stos
inc
jge
out
mov
shrb
lret
icebp
cmpsb
sbb
in
ret
dec
inc
or
hlt
jmp
jmp
and
stc
and
adc
and
mov
xor
stos
fidivrs
inc
lods
ret
push
cmpsl
dec
out
cs
out
aad
push
jae
mov
cli
and
int
jmp
sbb
test
or
push
test
bound
mov
add
and
mov
adc
das
xor
and
push
icebp
mov
shrl
clc
call
mov
icebp
dec
xchg
mov
jbe
pop
sbb
push
push
dec
push
jnp
pop
pop
jge
movsl
and
sbb
adc
mov
std
cs
ret
pop
dec
mov
pop
frstor
push
adc
mov
cmp
pop
adc
sbb
adc
das
aaa
dec
jae
pop
addl
sub
jge
and
and
cld
xor
sahf
enter
int
xchg
leave
lods
dec
movsb
ret
stc
sub
push
daa
pop
int3
push
mov
or
js
fsubl
mov
jp
jo
xchg
dec
cmp
sbbl
adc
std
notl
and
push
ret
cmp
push
movsb
adc
sbb
sub
and
sbb
mov
and
and
inc
lock
dec
andl
mov
enter
mov
xor
jmp
jmp
push
pop
cld
xor
movsl
fstl
or
pop
mov
pusha
sbb
mov
std
and
outsb
mov
xor
pop
das
fsubrl
stos
fucomp
cltd
ja
mov
xor
daa
sub
ljmp
pop
push
inc
or
push
mov
sbb
push
into
add
xchg
inc
push
adc
or
fisubl
pop
adc
pop
in
xchg
inc
aad
test
cmp
pop
clc
mov
mov
inc
jns
mov
push
mov
mov
mov
xchg
xor
outsl
shrl
sub
es
iret
sahf
mov
fsubrs
jb
sub
cmp
loopne
scas
add
pop
adc
xchg
idivl
cmp
mov
mov
or
dec
push
jmp
shr
enter
loope
dec
mov
dec
or
mov
cmp
push
cmp
mov
pop
mov
adc
push
add
loopne
pop
pusha
or
cli
in
stos
stos
jmp
rcrl
lods
or
clc
cmc
jge
push
or
cmp
divps
ljmp
lret
movsb
lea
cwtl
js
mov
push
pop
cwtl
data16
outsl
xor
dec
daa
dec
out
xchg
lods
pop
mov
mov
jne
int
mov
pop
std
bound
and
jmp
fsubrp
lcall
pushf
icebp
pop
adc
stos
push
sar
mov
dec
xchg
test
pop
mov
push
lea
inc
inc
std
add
or
test
and
test
dec
xchg
sub
stos
movsl
inc
sbb
jb
enter
push
call
cwtl
scas
add
dec
cmp
push
xchg
sub
lods
hlt
push
adc
lea
dec
es
std
push
pusha
adc
movsb
dec
xchg
push
jmp
xor
nop
sub
loope
cmpsl
cli
pop
fiaddl
sub
sub
adc
push
bound
fists
ret
shr
lcall
jp
adc
andb
push
lock
out
out
inc
rolb
leave
in
lret
into
and
dec
and
mov
out
jp
pop
test
dec
sbb
cmp
aaa
ret
jo
int
movl
push
movsb
in
fidivrl
loopne
dec
xchg
sub
push
pop
cmpsb
mov
aad
push
or
cmp
pusha
out
fcompl
mov
push
fsubr
sahf
adc
and
mov
std
hlt
lahf
pop
push
mov
dec
out
mov
dec
andb
mov
xchg
scas
orps
aad
sti
negl
xor
push
mov
int3
xchg
in
xchg
push
adc
or
xor
leave
lock
add
mov
out
arpl
xorl
pop
scas
out
ja
mov
sub
push
in
xchg
xchg
outsb
lcall
inc
jge
out
adc
xchg
pop
repnz
mov
int3
mov
inc
mov
sub
jl
popa
into
mov
or
cli
insb
fadd
testl
rclb
stos
inc
das
dec
adc
out
mov
mov
or
lods
xor
xlat
scas
ret
pop
adc
mov
addb
jle
add
pop
adc
movsb
mov
jecxz
aad
dec
sub
icebp
pop
adc
jl
imulb
incl
adc
jns
fs
call
pushf
or
adc
push
aad
inc
ljmp
ds
sub
mov
pop
adc
pop
add
xor
arpl
adc
sbb
fcompl
adc
push
rcrb
sti
mov
pop
adc
cmp
cmp
pop
adc
pop
dec
pop
mov
or
sahf
rorl
subb
or
stc
cmp
push
les
or
or
xchg
sub
push
dec
ljmp
addr16
idiv
jae
cwtl
push
adc
stc
inc
fwait
mov
push
and
inc
jcxz
insb
fs
popa
jecxz
pusha
or
sub
inc
loop
push
mov
add
lcall
rolb
shr
in
push
jg
sub
add
pop
clc
xchg
ret
and
imul
push
mov
mov
mov
dec
rol
jmp
add
gs
xlat
sti
negb
xchg
adc
xor
xor
push
add
gs
cmp
cmpsb
icebp
pushf
or
sbb
mov
xchg
es
pop
jge
jo
sahf
mov
jns
mov
addl
adc
mov
jo
lock
pop
xor
ja
jns
aam
push
adc
inc
test
xchg
and
ss
dec
cmpsl
dec
jp
out
fwait
sub
push
adc
inc
rol
andl
add
test
sbb
jle
jge
add
xor
and
shl
push
adc
mov
mov
je
imul
or
fneni(8087
pop
popa
sub
xchg
push
clc
sahf
pop
in
pop
clc
sub
nop
stos
or
adc
push
dec
inc
push
adc
and
or
ret
jbe
or
xor
insl
call
push
push
in
inc
in
add
mov
mov
stc
xchg
int3
sbb
mov
add
pop
in
xchg
bound
test
lds
mov
add
pop
inc
fsub
push
adc
xchg
fcomp
pop
iret
xchg
cli
pop
adc
add
xor
punpckldq
or
mov
insl
push
sub
dec
hlt
fcomps
clc
push
bound
adc
sti
aad
fadds
dec
add
cwtl
push
adc
roll
fists
or
orb
subb
loope
fldt
pop
mov
push
shl
push
adc
sub
cmc
sahf
pop
and
push
cmp
dec
cmp
je
xchg
sbb
inc
or
popf
daa
push
lods
pop
mov
xchg
inc
aaa
xor
mov
test
fs
popf
mov
dec
jo
pop
adc
dec
mov
or
cld
pop
adc
push
int
lock
adc
call
frstor
add
pop
adc
jne
cmpsb
sbbb
adc
mov
pop
jge
cmp
lods
repz
adc
add
cmp
repnz
adc
popf
imul
fcomps
mov
loope
mov
insl
pop
das
xor
dec
add
pop
orl
wrmsr
int
jp
xchg
push
inc
jns
scas
jo
xchg
ficoml
mov
adc
inc
imul
in
mov
call
cwtl
push
adc
mov
mov
push
jno
or
in
pushf
cs
leave
pop
pop
pop
sbb
in
ror
xchg
and
mov
enter
mov
add
in
dec
adc
add
lods
xchg
lods
xchg
jmp
inc
jne
jbe
mov
xchg
push
js
inc
push
add
imul
pushaw
pop
loope
jecxz
fsubs
ss
mov
push
pop
cld
sub
lods
pop
cmp
out
sub
stos
rcrb
outsl
cld
stos
pop
jnp
test
cld
cmp
xchg
mov
lret
lods
pop
out
mov
jmp
pop
xor
mov
inc
or
and
pop
mov
xchg
inc
xor
popf
bound
mov
pop
xchg
adc
lock
cmpsl
lock
mov
aaa
test
filds
push
test
jecxz
pop
lods
inc
cmp
adc
popa
lods
push
and
push
push
sti
jb
xor
shr
test
push
out
push
adc
mov
xor
mov
icebp
xchg
or
nop
decl
pop
dec
pusha
jp
pop
dec
and
ds
popa
clc
xlat
std
xchg
addr16
repnz
lret
push
jns
push
pop
push
jg
xorb
sarl
sbb
jo
daa
pop
mov
push
jno
test
lret
int
call
mov
shlb
pop
jo
add
inc
cmp
jecxz
push
mov
sbb
pop
cli
mov
dec
cs
data16
jge
xor
out
fs
rorl
aad
jge
call
cmp
test
dec
xchg
sub
push
int
adc
hlt
arpl
mov
inc
add
xor
mov
cmp
mov
in
out
push
adc
or
enter
cmp
outsb
loope
cli
fsubrp
lcall
out
insb
sgdtl
add
push
lock
or
pop
adc
cltd
jge
cli
mov
dec
mov
mov
dec
xor
xchg
and
sub
push
cmp
xor
mov
mov
outsl
cmc
cwtl
data16
mov
scas
xor
jb
jge
je
js
pop
jge
imul
es
out
mov
sub
mov
clc
cwtl
sbb
pop
cli
pusha
aaa
inc
push
and
bound
dec
das
add
sbb
lcall
cmp
test
add
push
adc
xchg
bound
and
scas
ret
fldln2
and
fdivrl
add
movsb
push
movsb
cmp
shr
push
pop
movsb
push
cmpsl
dec
pushf
mov
adc
js
xchg
addl
lods
out
push
adc
or
jne
enter
outsl
inc
ds
pusha
jb
int3
aad
inc
hlt
orb
jmp
mov
inc
inc
xchg
sub
pushf
das
adc
sbb
xor
xchg
add
or
or
adc
and
xchg
mov
adc
or
inc
add
inc
and
jnp
cwtl
scas
jmp
cwtl
out
pusha
fwait
into
mov
fcomps
fucomi
test
sbb
pop
adc
dec
push
adc
push
fmul
mov
ljmp
mov
pop
jnp
mov
fcomps
addr16
or
pop
adc
ds
push
fcomps
xchg
sbb
add
mov
stc
dec
sub
ss
sahf
into
cmp
jbe
dec
push
test
cmp
mov
pop
xchg
rclb
insl
data16
das
call
lock
out
adc
inc
aaa
shll
adc
mov
or
stos
inc
int3
setno
pop
jne
mov
scas
fisttps
aad
subl
push
xor
mov
or
aas
pop
or
mov
iret
inc
sti
ds
cs
xchg
cmpsl
add
xlat
xor
xor
adc
sub
in
or
mov
xor
mov
adc
aad
mov
push
adc
cmp
scas
ret
mov
inc
jle
jne
inc
cmp
repz
pop
testl
push
mov
clc
aas
pop
sbb
out
pop
shll
mov
push
jae
add
sub
or
out
mov
jmp
xchg
mov
inc
adc
out
rcl
enter
jmp
pop
push
adc
fstl
dec
sbb
adc
jne
xchg
and
xor
push
sbb
mov
xchg
test
add
push
fstp
mov
pop
push
jge
mov
mov
inc
js
sbb
mov
cmp
or
push
movsl
ds
jle
push
sbb
cmp
outsl
nop
enter
loop
ja
sbb
inc
and
insl
cmp
mov
stos
mov
inc
test
loopne
clc
out
sarb
jmp
push
dec
popf
in
adc
pop
outsb
jle
add
pop
pop
push
cmp
pop
xor
jl
xor
add
inc
cmp
dec
push
adc
xor
pop
dec
jp
enter
sbbb
aas
xor
ror
cmc
rol
inc
jmp
inc
pop
pop
xchg
and
push
cmp
sub
cmp
adc
jmp
cmp
pop
cmp
test
shrl
clc
fcomps
shl
and
stos
push
xor
testb
xchg
ss
fdivl
iret
fcomps
inc
enter
push
or
pop
jge
dec
xchg
push
bnd
cltd
push
push
mov
sbb
sbb
cli
pusha
ljmp
push
sti
mov
push
cmp
xor
mov
mov
jb
pusha
cli
cmp
xor
aad
xchg
sub
inc
jp
dec
in
mov
add
pop
mov
test
add
mov
and
leave
sbb
out
cli
sbbl
or
insl
fidivl
cld
cmpsb
nop
in
jae
add
inc
push
mov
push
jg
cmp
or
pushf
xor
pushf
es
add
ret
push
and
subb
aam
pop
mov
lcall
ret
push
xlat
das
push
sti
or
adc
mov
andl
dec
push
insl
lds
int
sbb
dec
push
std
and
sub
aas
sub
ljmp
lret
sbb
popa
lret
lock
hlt
pusha
push
inc
and
xchg
scas
xchg
js
rorb
cltd
pop
mov
mov
adc
cmc
inc
jbe
xor
mov
inc
cmp
xorb
pop
jg
or
and
dec
in
or
out
stos
adc
in
into
mov
addr16
dec
add
mov
pop
sbb
mov
mov
cmp
cli
lods
or
addr16
xor
dec
inc
pop
cld
leave
std
imul
lcall
andb
inc
add
loope
xor
push
mov
mov
inc
pushf
lea
pop
push
cltd
mov
ret
mov
push
push
fistl
push
int3
add
arpl
cmp
jb
rcll
notl
test
test
in
fbstp
xchg
xor
bound
arpl
inc
sbb
ret
pop
pop
movsb
xchg
inc
mov
stos
adc
fwait
stos
je
in
adc
sbb
cmp
add
mov
jmp
mov
jo
inc
and
jmp
fidivrs
in
subb
sub
ds
in
loop
movsb
loop
adc
cli
jne
cwtl
lds
daa
push
mov
add
and
test
and
xchg
sbb
push
push
inc
or
add
cmp
pop
out
sub
xchg
sub
push
dec
aaa
dec
aas
jl
mov
int
repz
adc
aad
xor
iret
inc
sub
inc
add
push
mov
lret
push
add
fnsave
jae
cs
mov
xor
out
xor
mov
ss
pop
lret
cmp
ss
and
push
pop
std
lock
cmp
or
nop
ret
dec
shll
mov
dec
push
and
shll
adc
popf
loopne
in
cmp
add
xor
test
jbe
xor
cmc
scas
or
inc
cmp
or
jbe
nop
mov
repnz
push
jmp
mov
xor
ret
or
xchg
push
sub
sbb
xor
fldl
push
pop
data16
daa
or
adc
mov
xlat
push
and
cmpsb
out
mov
and
pop
mull
dec
push
xor
int
push
push
push
sbb
dec
out
mov
mov
arpl
icebp
and
sbb
test
add
std
push
repnz
insl
push
sub
xor
cmp
add
and
mov
xchg
repz
push
cmp
aas
and
cmp
rolb
cmpsl
dec
pushf
movb
and
imul
or
xchg
xor
mov
dec
cmpsl
idiv
mov
or
shl
sbbl
data16
ds
stos
and
shlb
adc
inc
pop
or
cld
pop
inc
mov
outsl
sub
loop
popf
jg
outsl
mov
push
sub
push
pop
std
push
call
xlat
pop
pop
mov
fsubrl
movsb
loopew
and
mov
std
jo
pushf
insl
pop
push
cs
fidivl
movsb
mov
push
sbb
inc
sub
dec
fbld
in
movsb
sbb
push
adc
in
adc
dec
rcll
mov
jg
mov
pop
rcll
and
dec
jmp
aad
inc
hlt
push
ja
sbb
ret
jge
ret
popa
and
mov
mov
je
mov
or
add
dec
jecxz
mov
pop
push
mov
mov
push
int3
dec
jne
mov
leave
outsb
mov
mov
inc
jg
and
cmp
rorl
pop
pop
and
pushf
xchg
and
push
out
xchg
lods
push
mov
cmpsl
push
jle
aam
pop
jl
data16
adc
sub
cltd
add
and
adcb
cwtl
out
xchg
test
push
fsubs
psubd
fnstcw
out
mov
insb
xchg
mov
test
sub
pop
imul
lock
lods
ficoml
or
lahf
aaa
jecxz
test
out
das
push
add
push
adc
gs
lcall
loope
xchg
pop
add
xchg
daa
lock
nop
jne
mov
jge
notl
notl
jno
dec
sti
mov
mov
jmp
enter
into
mov
xlat
adc
mov
pop
rolb
or
cmp
mov
xchg
call
add
mov
mov
push
and
dec
jmp
sub
add
movsb
jno
xchg
cmp
lret
cmp
popf
xchg
call
sbb
inc
in
sub
inc
xlat
and
dec
xchg
lods
mov
roll
shlb
sbbl
push
cmp
test
outsb
pop
sub
xor
and
inc
push
adc
test
push
dec
scas
test
mov
ficompl
mov
jae
fs
arpl
xchg
push
in
dec
xor
aad
cmpsl
jno
stos
jno
pusha
mov
mov
idivb
cmpps
mov
xor
inc
in
xor
pop
jno
bnd
loopne
push
xchg
sahf
daa
loopne
imul
inc
stc
xor
cli
push
push
jb
push
fldcw
cs
push
cmp
daa
pop
sbb
dec
enter
jbe
xchg
sub
sbb
cmp
stc
fldt
mov
push
pop
jne
and
ds
xor
jp
push
cwtl
mov
shll
outsl
gs
xchg
or
in
or
int3
inc
push
push
jmp
or
mov
sub
mov
inc
lea
jg
or
fs
aam
imul
fsubp
loope
and
mov
fisubs
add
std
mov
dec
jmp
inc
push
adc
clc
add
xchg
mov
jbe
or
mov
xchg
push
pop
lods
sub
xchg
scas
mov
pop
mov
xor
jns
imul
ja
loope
mov
nop
and
stos
loop
pop
mov
lcall
hlt
pop
pop
popa
sbbl
push
lods
pop
in
movsb
sbb
cmc
inc
push
adc
fwait
cmpsb
dec
int
stc
mov
adcb
mov
mov
popa
fcmovnb
pop
and
pop
dec
addr16
lea
test
pop
out
out
sahf
pop
mov
fistps
inc
dec
xchg
push
outsl
aas
pushf
cmp
and
mov
je
leave
sarb
cmpl
ja
stc
sub
test
mov
jle,pt
daa
and
jne
push
ret
pop
pusha
pop
addr16
icebp
and
icebp
pop
pop
sahf
movl
scas
mov
mov
je
xchg
sbb
adc
push
dec
ret
push
mov
pop
sahf
pop
pop
xchg
cs
lret
cltd
mov
rcr
sbb
outsl
sbb
inc
sbb
xchg
clc
rcrb
push
ret
popa
jecxz
bound
mov
jg
pop
imul
popa
and
inc
shl
jl
ljmp
daa
pop
mov
sub
xchg
fisubrl
dec
jge
or
sbb
call
jge
popa
incl
adc
sbb
dec
lock
push
push
mov
cltd
imul
adcb
mov
xchg
mov
push
jecxz
mov
mov
fidivl
cltd
lods
lcall
movsl
xor
lcallw
xchg
adc
pop
in
pop
pop
lret
mov
mov
or
mov
dec
xor
xlat
pop
and
out
loop
addl
or
adc
mov
cs
std
cmp
inc
xchg
and
add
and
dec
arpl
dec
lcall
pop
les
sub
sbb
pop
sub
xchg
mov
mov
arpl
bound
lahf
decl
jp
dec
aas
mov
push
xchg
push
and
mov
outsb
add
jns
fs
rolb
cmp
inc
push
adc
adc
addr16
push
push
push
jp
lods
mov
cmp
lods
mov
pop
jmp
inc
inc
add
xchg
and
xor
mov
or
cltd
test
imul
outsb
fisttpl
outsb
lods
pop
add
pop
lret
sbb
imul
into
mov
push
add
jmp
xor
lods
fdivl
lock
lahf
into
pop
imul
iret
in
cmpsl
pop
xor
fnstsw
push
sub
push
lret
fistpll
jecxz
pusha
pop
push
loop
push
mov
mov
clc
lret
test
mulb
lock
fldt
inc
dec
sbb
push
jle
sub
repnz
sbb
sbb
mov
pop
dec
pop
scas
fucomi
popl
jbe
repnz
fsts
sahf
jmp
and
orl
subb
out
add
popa
sbb
cmp
cltd
push
faddp
and
pop
jnp
xchg
push
inc
fcomi
imul
int
cwtl
lcall
lds
outsb
mov
inc
inc
lods
xchg
addr16
enter
inc
jo
mov
inc
pop
roll
rcll
popa
adc
clc
xchg
in
jge
imul
fsubrl
push
jl
das
mov
pushf
mov
and
mov
imul
scas
cs
mov
daa
pusha
and
stos
cmpsb
xlat
repz
dec
cmc
faddl
add
cmp
pusha
cs
push
pop
push
push
repz
ret
add
mov
lea
cwtl
pop
repnz
push
pop
xchg
push
sbb
sarb
imul
push
pop
movsl
lea
dec
mov
mov
sbb
rorb
shrb
xor
lea
dec
fstp
mov
xchg
pop
call
dec
and
in
test
daa
and
aaa
cs
pushf
cmp
inc
fst
sbb
leave
add
inc
or
pusha
mov
and
and
mov
push
push
or
ja
adcl
scas
lea
cmp
cmpsl
pop
mov
ja
mov
jg
mov
push
pop
xchg
dec
stos
lods
or
popa
push
repz
in
stos
mull
inc
sub
adc
mov
pop
lret
xchg
and
stos
test
aaa
outsl
fbstp
fucomi
ljmp
sbb
push
adc
icebp
or
adc
push
sub
testb
cmp
push
cmp
and
push
ja
mov
sbb
and
mov
pusha
sbb
jmp
mov
sub
lods
cmc
pop
adc
and
paddd
push
bound
movsb
sbb
shr
xchg
xor
and
jecxz
nop
mov
jle
adc
adc
lock
arpl
sbb
ss
mov
jno
cltd
adc
dec
add
fs
sub
cmpsl
push
mov
cmp
inc
xchg
mov
push
adc
jae
adc
mov
icebp
das
cwtl
sub
in
adc
vpsrlq
inc
scas
iret
rcrb
adc
daa
pop
sbb
jne
ljmp
gs
dec
cmp
scas
stos
or
rclb
mov
xor
int
decb
je
cmp
loopne
and
sub
mov
pop
sbb
inc
xor
jno
dec
ja
or
xchg
adc
setno
cli
shlb
leave
mov
sbb
sub
mov
sub
dec
insl
sub
and
mov
jo
push
roll
xor
ljmp
jge
mov
clc
hlt
cltd
outsl
jecxz
xlat
clc
xor
inc
mov
add
sti
xchg
jecxz
sahf
push
mov
cld
push
push
mov
or
cmp
jle
adc
sbb
mov
fisubrl
lret
push
in
call
sar
mov
dec
out
pop
inc
les
arpl
sahf
cs
mov
in
pop
mov
add
push
adc
push
pushf
test
adc
cs
lock
dec
dec
xchg
loopne
rcrb
sbb
adc
mov
sbbl
cmpsl
ljmp
push
adc
xor
into
lds
jnp
pushf
in
mov
shlb
push
in
shl
mov
inc
mov
jge
cwtl
imul
xor
imul
xlat
or
ja
xchg
xchg
and
xlat
ds
fwait
lret
pop
lahf
mov
scas
xor
add
dec
mov
adc
imul
jb
pop
fdivl
mov
imul
sub
leave
cmp
int
loopne
lock
or
xchg
insb
ljmp
jg
aas
ljmp
adc
xor
sarb
fs
xchg
loopne
or
xor
lods
add
pop
loop
into
test
sbb
out
jge
aad
popa
and
jmp
inc
add
push
adc
xchg
bound
and
scas
ret
fldln2
and
je
mov
shl
daa
hlt
stos
push
sar
cltd
push
repz
push
pop
movsb
push
cmpsl
dec
pushf
mov
adc
js
test
or
pop
xlat
sbb
jne
enter
outsl
and
adc
cli
shrb
mov
pop
mov
dec
loope
lods
fcomps
sbb
mov
loop
test
mov
and
jae
sub
and
or
ljmp
pusha
enter
out
cltd
push
pop
fnsave
and
lcall
push
push
outsb
stos
scas
mov
addr16
ds
out
adc
cli
mov
inc
lods
sbb
sbb
or
cmp
jno
cwtl
outsb
out
std
stc
xor
sub
add
add
aaa
sbb
js
dec
jge
push
push
fdivp
cmpsl
pop
and
push
stos
popf
es
fdiv
push
mov
ret
je
movsb
dec
pop
and
cmp
in
scas
mov
sbb
mov
pop
cmc
stos
push
rorb
adc
push
cmpsl
jne
dec
push
push
imul
cld
outsb
hlt
inc
jp
loope
jno
es
and
cmpsl
ret
clc
mov
jle
mov
subl
lods
fldt
sub
loop
mov
pop
es
push
jecxz
jns
in
ret
out
jge
test
out
xchg
aaa
pop
mov
push
fstpl
and
xchg
sbb
inc
pop
loopne
out
loopne
ss
add
ljmp
ss
push
push
mov
mov
jns
sbb
jmp
ror
div
hlt
add
aas
xlat
mov
mov
movsl
inc
add
jle
mov
or
inc
mov
shl
add
jo
mov
pop
xchg
mov
add
mov
inc
jmp
ret
xor
int
pusha
and
dec
mov
mov
mov
mov
xchg
or
stos
mov
fistps
aam
mov
mov
dec
mov
jg
fwait
imulb
pop
adc
adc
inc
push
adc
adc
mov
bound
mov
xor
or
xor
mov
in
mov
lcall
repnz
push
and
mov
cmp
std
add
lahf
outsl
pop
and
ljmp
push
movsb
push
push
clc
jno
inc
fcmove
scas
dec
iret
clc
cli
push
and
cmp
and
mov
movsl
andl
fistl
sub
pushf
cmp
push
and
sub
repnz
inc
hlt
push
in
in
xor
cmp
cmp
jns
fidivs
inc
inc
lods
add
inc
push
aas
inc
out
inc
mov
cmp
call
test
dec
cmpl
cmp
fldt
and
xchg
cmpsl
fldenv
pop
ret
add
das
and
pop
js
ret
jle
xchg
cmc
mov
sbb
jmp
aas
rorl
push
fcmovu
test
inc
scas
and
mov
cvtpi2ps
sub
lods
out
outsb
es
jb
push
jge
imul
fisttps
adc
adc
mov
aad
insl
mov
fbstp
add
fsts
movsl
arpl
inc
shl
mov
jb
enter
jg
jbe
add
dec
xchg
push
jo
sbb
pop
cmpsb
fxch
mov
dec
push
push
inc
mov
ljmp
ficompl
xchg
fmuls
mov
pop
cmp
outsl
movl
cvtps2pd
sarb
vpmovuswb
icebp
or
cmpb
pop
mov
jl
push
adc
mov
lcall
in
aad
adc
ljmp
adc
fisttpll
repnz
adc
in
sbb
or
push
frstor
loopne
xor
popf
and
fdivrs
fstpt
test
push
mov
sahf
insb
push
inc
inc
ss
mov
xlat
cmp
pop
out
push
pushf
jle
sub
cld
and
inc
push
jp,pt
pop
push
and
mov
ficomps
test
push
ljmp
pop
sbb
ret
ja
mov
adc
pop
cmpsb
lds
fs
or
mov
loope
adc
movsl
cs
adc
lods
sub
cwtl
pushl
mov
or
les
adc
imul
sub
daa
xor
cmp
push
repz
push
mov
loop
fldcw
sbb
sub
and
mov
outsb
xchg
fidivs
test
call
cmp
pop
into
sub
mov
pop
fidivrl
cmpsb
into
sbb
inc
inc
inc
add
pop
out
or
outsl
fdivs
movsl
sbb
mov
or
jp
mov
xor
sti
and
fdivrl
inc
test
nop
movsl
mov
test
cmp
ret
cmc
hlt
orl
sub
imul
fimuls
jl
imul
sahf
out
pop
add
mov
mov
mov
pop
inc
lahf
imul
aad
jne
insl
mov
test
cmpsl
fisubs
es
xor
sbb
push
fistpl
enter
rcll
je
sti
aam
test
cs
xor
scas
pop
fistpll
jmp
mov
or
adc
in
es
std
rcrb
lods
dec
cmpsl
xchg
jmp
pop
mov
loope
in
xchg
push
and
fwait
cmp
jg
add
pop
push
adc
lret
and
push
hlt
testb
dec
ret
jo
sbb
pop
push
cs
jl
jns
loop
xchg
sub
xchg
lret
sbb
xchg
daa
int
push
or
push
jae
jmp
mov
xchg
inc
xchg
sub
xchg
mov
pop
outsl
decb
sahf
push
push
cli
ja
in
pop
pop
inc
and
int
scas
xchg
ret
popa
pop
inc
jno
pop
in
or
inc
jno
xorb
test
pop
sub
fsubl
arpl
sahf
fimull
add
push
add
push
add
dec
cmp
xchg
add
sti
jl
lock
mov
inc
pushf
jno
xlat
inc
push
adc
push
nop
imul
das
inc
or
fstpl
arpl
repz
imul
lods
xor
fisttps
stos
xor
or
outsb
lahf
sbb
mov
mov
mov
fsubs
xchg
inc
dec
mov
lcall
jbe
inc
mov
inc
xchg
out
jno
in
or
int3
push
mov
js
push
push
jmp
xchg
sahf
jo
sub
ljmp
jmp
jg
add
leave
lods
sahf
inc
push
adc
bound
out
fcmovu
mov
mov
lret
dec
call
xchg
in
push
cmpsb
loopne
mov
fsubl
push
add
mov
loopne
out
sub
decb
inc
adc
push
sar
cltd
test
fldcw
cli
daa
outsl
and
push
dec
jg
adc
pop
pop
push
cs
and
xchg
mov
pop
insb
stc
or
in
mov
adc
fcoms
jl
dec
xchg
push
lock
inc
cli
leave
mov
gs
and
lea
popa
or
test
xchg
sub
das
cmpsb
mov
mov
add
or
push
adc
addr16
sub
inc
cmp
enter
mov
adc
std
ljmp
push
xor
sbb
pop
adc
ljmp
cli
fists
or
movb
push
es
jo
daa
mov
mov
adc
outsb
outsl
add
inc
hlt
shr
inc
fyl2xp1
cmc
cwtl
outsb
into
std
mov
stc
es
out
push
xchg
loope
movsl
cmp
int3
pushl
sbb
js
cltd
jl
push
push
nop
call
pusha
xchg
and
push
pop
push
pop
negb
lret
testb
sbb
fistpl
outsb
pop
jo
mov
out
push
lods
pop
cmpsb
in
mov
mov
inc
incl
jecxz
shrb
and
xchg
loop
ljmp
push
lods
pusha
or
add
xor
std
jmp
mov
pop
jo
shlb
sbb
cmp
sbb
cli
inc
or
and
outsl
add
fidivrs
fldcw
std
xlat
cmp
sbbl
ds
sbb
push
jecxz
loopne
adc
xor
shlb
imul
adc
xor
adc
pop
push
dec
mov
into
mov
adc
call
mov
cmp
jle
cmp
lods
pop
jb
or
xlat
sub
adc
mov
xchg
dec
inc
and
add
es
imul
lahf
pop
loope
xchg
loop
and
dec
sub
push
cmp
push
repz
hlt
mov
test
or
cmc
icebp
jae
ret
sub
pop
ja
mov
inc
inc
sbb
aaa
stc
push
cwtl
scas
xor
xchg
sub
cmp
out
push
ds
aaa
lret
sarb
inc
push
imul
out
sub
leave
jmp
inc
inc
popa
clc
push
inc
aam
adc
aam
mov
sarl
add
push
icebp
iret
cmp
push
dec
pushf
cmp
and
sti
or
push
adc
fldcw
lods
mov
pushf
add
push
adc
mov
or
push
cwtl
push
stos
pop
mov
xchg
frndint
out
adc
orb
ret
subl
daa
mov
mov
lock
adc
mov
push
xchg
daa
pop
fsubrs
fwait
lock
cmp
ja
sahf
arpl
push
xorb
inc
daa
xor
cli
cltd
jbe
ja
in
loop
and
int3
mov
sub
shr
in
call
add
aam
adc
aam
or
xor
or
jb
pop
sbb
rcr
xlat
mov
insl
int3
mov
in
movsl
pop
sbb
mov
cli
fst
pop
divl
jge
lcall
aas
ds
add
xlat
fcoms
xor
jmp
loop
xchg
shlb
les
cmp
dec
push
adc
arpl
mov
jae
lock
jg
dec
int3
inc
addb
inc
aad
leave
int
push
mov
adc
fsubrl
mov
sbb
pop
adc
in
popa
cmp
or
movsl
xor
add
int
out
lods
pop
mov
mov
testl
popa
cmp
or
movsl
xor
add
int
out
lods
pop
mov
cltd
fsubl
dec
incl
adc
sub
cmp
or
movsl
xor
add
int
out
lods
pop
mov
stc
fsubl
mov
dec
or
cmp
or
movsl
orb
xchg
in
pop
push
jp
mulb
cmp
push
sbb
and
inc
fstl
rorb
and
xor
xor
aam
push
mov
test
push
adcl
out
and
add
xchg
mov
out
cwtl
stos
or
out
adc
cmp
pop
popa
push
push
push
rcrb
je
or
test
std
cli
mov
movsb
popf
adc
xor
aam
cmp
adc
lret
repnz
test
adc
pop
sub
sub
shlb
pushf
pop
mov
or
push
in
or
add
pop
add
insb
mov
adc
aam
fwait
pop
movsl
jle
out
push
adc
xchg
add
sub
pop
adc
cmp
gs
mov
in
mov
imulb
xchg
and
fwait
inc
push
jl
rorl
pusha
pop
je
fisubrs
mov
and
jns
sub
adc
or
mov
sbb
xor
test
movsl
dec
sahf
mov
arpl
cmpsl
push
in
xor
push
adc
xor
cmp
dec
repnz
roll
rorl
dec
or
mov
in
inc
lahf
mov
xor
push
push
or
push
dec
and
and
sub
loopne
pop
sub
jecxz
es
inc
mov
inc
push
adc
cmp
aas
inc
xchg
sti
gs
push
fistl
add
mov
outsl
jle
outsb
jl
jo
sti
xchg
mov
pop
js
hlt
test
mov
enter
or
lcall
daa
addr16
imul
mov
rcll
lahf
scas
das
jge
mov
insb
test
push
fildl
or
jge
or
shll
nop
gs
lock
dec
cmpsb
icebp
mov
inc
imul
jnp
sti
hlt
lahf
lods
ret
lods
pop
mov
xchg
inc
xor
call
test
clc
les
adc
inc
or
add
add
lock
push
mov
xchg
scas
dec
adc
jge
mov
inc
or
mov
bnd
divl
in
dec
sub
push
mov
inc
sub
call
cmpsl
pop
fdivrp
push
pop
sti
push
pop
push
push
in
and
pop
leave
add
fbld
xchg
pop
pop
lahf
dec
ja
hlt
add
xor
xor
imul
and
mov
cbtw
ficompl
or
jecxz
push
mov
imul
jp
push
gs
daa
and
ret
and
dec
shll
ds
popa
and
pop
loop
sub
ret
daa
sbb
pop
push
call
or
inc
push
pop
push
jge
fnsave
jmp
in
jns
push
loopne
lret
sub
xchg
xchg
pushf
andb
fdivl
imul
lds
nop
sarl
lods
dec
fisubrs
or
adc
je
jae
das
xor
fsubrp
fistps
cmpsl
mov
mov
stos
mov
jne
jbe
adcl
xchg
scas
mov
xchg
movsl
add
je
xchg
aaa
sbb
lret
lds
mov
ret
dec
adc
mov
xor
mov
adc
mov
aas
cmpsl
mov
pop
jle
aam
mov
pop
scas
push
lock
xchg
out
pushf
data16
add
inc
aad
in
push
push
and
dec
out
cmp
sub
pop
mov
xor
sub
jbe
ljmp
push
pop
pusha
push
lock
das
fdivr
mov
sub
inc
aad
in
push
cli
jg
aam
mov
adc
and
cmp
pop
std
out
cwtl
jge
mov
push
mov
adcl
cmp
mov
xor
pop
cmp
nop
mov
push
add
cs
cmp
sbb
lods
pop
mov
cmp
and
out
add
leave
inc
mov
jge
ret
popa
and
cmpsb
pop
mov
jl
vpperm
sbb
out
pop
inc
push
adc
dec
ret
jmp
enter
mov
sbb
jg
adc
fucomip
mov
sbb
subl
int3
scas
cmpsl
lds
call
cmp
fldl
pop
cmp
and
shll
pop
loop
test
in
rorb
mov
imul
dec
idivb
pop
sbb
in
or
fbld
add
es
insb
pop
mov
movsb
movsl
mov
inc
dec
es
mov
push
and
mov
mov
cmp
jge
sti
pop
jns
out
sub
iret
sbb
dec
stos
jo
neg
jb
xchg
or
jl
lahf
and
sbb
iret
sarb
xor
test
sbb
sbb
loope
mov
xchg
pushf
cmp
xor
ss
pop
add
aad
push
cmp
adc
jb
aaa
mov
mov
sub
mov
cwtl
jl
adc
mov
test
hlt
xchg
lea
fmul
jnp
cld
xorb
mov
lock
sub
cmpl
push
lds
cs
and
xor
inc
jecxz
aad
ljmp
stos
fwait
jns
push
dec
pop
cmp
cwtl
adc
fs
xchg
fisubrs
push
testl
stc
or
shlb
jp,pn
inc
in
fcoms
movsl
lret
and
lahf
fmull
adc
add
pushf
mov
movsl
xor
pop
cmp
addr16
in
int
movsl
imul
adc
dec
or
pop
decb
stos
aam
outsb
mov
xorl
add
push
or
aam
or
pop
inc
and
mov
mov
aaa
push
stos
sub
adc
enter
icebp
lock
iret
sub
push
lahf
sub
cs
in
xlat
cmpsl
pop
test
adc
inc
xlat
fistpl
or
cltd
push
pop
jo
sub
repz
decb
dec
sub
adc
cmp
sbb
fldenv
daa
fs
xchg
xor
mov
stc
or
movsb
lods
add
sbb
inc
fsubrl
xchg
int3
push
add
xchg
out
shll
lret
push
dec
add
inc
scas
negl
arpl
mov
xor
inc
jmp
stc
push
mov
cltd
jne
nop
mov
jmp
push
pop
push
das
bnd
mov
or
pop
loope
movl
arpl
dec
fs
lea
cltd
sbb
les
adc
dec
dec
movsb
dec
out
pop
mov
cmp
imul
aaa
js
mov
jns
ljmp
outsb
lret
dec
cmp
fcompl
movsb
js
lea
subb
cli
or
mov
sbb
loopne
lods
mov
pop
mov
dec
jbe
icebp
and
inc
add
adc
test
add
pop
xlat
pop
or
nop
fcomip
hlt
std
cli
mov
movsb
add
cmpsb
cwtl
sub
adc
arpl
lea
and
inc
add
adc
mov
adc
cmp
mov
repz
pop
test
add
stos
add
fisubs
aas
push
decl
out
push
xchg
and
push
scas
int
sub
test
fstps
shrl
scas
jo
cmp
xor
inc
pop
dec
jp
lods
insb
and
lds
ljmp
and
test
in
pop
sub
call
push
dec
adc
dec
or
int
sahf
pop
scas
lcall
ss
fadd
push
int
je
ret
sti
fildll
mov
push
cs
ret
dec
movsb
dec
xchg
scas
cmpsb
in
mov
icebp
cmpsb
pop
enter
aad
adc
push
in
test
xchg
xor
and
push
sub
xchg
stos
or
jmp
dec
je
gs
mov
fistpll
imul
leave
std
test
sbb
mul
cld
decl
or
orl
ficoml
movsb
adc
shrb
cs
cmp
es
push
mov
lcall
movsb
aad
dec
adc
sub
sahf
ret
hlt
hlt
or
frstor
push
adc
mov
cmp
icebp
les
jnp
aas
iret
push
repnz
cmpl
or
movsl
inc
or
cmpsb
outsl
leave
pop
cmc
inc
sub
inc
repnz
mov
test
je
push
adc
jno
addl
mov
arpl
add
add
imul
lahf
dec
jmp
jl
test
scas
ds
fsubs
cmpb
rolb
pusha
add
inc
sbb
pop
add
mov
or
lahf
sub
out
adc
mov
push
test
push
xchg
or
and
shlb
xlat
jnp
iret
mov
inc
mov
mov
push
add
shlb
dec
mov
push
pop
cmp
fldl
cmp
out
stos
or
std
incb
sub
imul
xor
fisubrl
into
lret
pusha
decb
mov
xchg
and
sahf
pop
xor
inc
fwait
jl,pt
minps
in
scas
sbb
cs
sub
and
mov
or
stc
sub
xchg
jecxz
adc
mov
loop
dec
in
inc
std
pop
push
stc
jo
mov
xor
xchg
xor
ret
pop
lcall
push
loop
push
and
daa
in
push
pop
std
clc
push
mov
or
pushf
pop
test
xchg
aad
xchg
gs
sub
call
mov
imul
cli
jl
dec
cmp
lds
fadd
cmp
std
push
daa
xor
aas
popa
in
or
mov
ljmp
push
in
fcoms
clc
out
or
out
jno
jmp
pop
aas
push
xchg
or
lcall
cwtl
push
fisubrs
lret
insb
enter
nop
cmp
jp
sahf
and
in
xor
jmp
lods
rcrb
xor
inc
or
mov
sahf
gs
and
cmpsb
loopne
pop
cmp
push
shlb
adc
pop
push
fistpll
inc
adc
pop
inc
push
cs
and
fcom
pop
arpl
sbb
outsl
push
dec
push
loope
aam
mov
ret
popa
xor
outsb
aam
cmp
pop
jl
addr16
and
pop
ret
xchg
sahf
inc
push
adc
in
sbb
jmp
adc
push
or
mov
cmc
pusha
cmp
movsl
movsb
ret
popa
push
imul
mov
rolb
test
out
std
xchg
xor
lods
and
out
inc
loope
mov
cmp
add
lret
insb
sub
mov
jge
fdivrs
out
stos
push
sbb
inc
pushf
seto
outsl
or
sub
enter
adc
ds
xchg
scas
cmpsb
in
dec
pop
fsubs
sbb
lods
les
outsb
push
or
popl
inc
ret
or
pop
xchg
loopne
pop
orb
pop
mov
xor
push
push
jg
adc
sbb
aam
push
mov
lods
mov
loop
es
cmpsb
adc
sub
inc
and
xchg
mov
xlat
out
cmp
shrb
mov
mov
xor
mov
cld
jno
popf
bound
adc
xchg
movsb
loop
mov
rcrb
xchg
das
xlat
stos
push
sub
loop
lods
nop
lods
cmpsl
xchg
mov
jo
mov
mov
cli
jb
cmp
pop
pop
inc
rcrb
and
and
jnp
flds
ds
aam
in
ret
mov
orl
and
jne
push
mov
jecxz
xor
ret
adc
popa
sbb
rcll
mov
sbb
pop
or
sub
enter
mov
das
les
add
loopne
mov
adc
jo
popa
jg
push
adc
les
aas
pop
aas
adc
fstl
push
push
xchg
xchg
lea
mov
sub
mov
movsb
scas
mov
xor
jle
fmulp
imul
jg
call
dec
faddl
adc
mov
int
test
add
or
or
fs
out
ficomps
jge
scas
aad
push
nop
and
push
xor
mov
pop
aas
push
lea
rclb
es
lret
cmp
iret
ja
ljmp
dec
imul
jp
jmp
bnd
rcrb
cs
xor
scas
iret
adc
push
or
xor
insb
push
xlat
and
movsl
out
mov
lahf
mov
je
push
xchg
in
cld
repnz
scas
xchg
mov
cld
xchg
aam
dec
xchg
cmpsb
mov
dec
insb
adc
fninit
lock
jno
scas
cs
into
sub
mov
stc
dec
mov
sbb
sub
sub
jmp
push
or
int3
out
jns
outsb
jge
aam
inc
lea
in
inc
popf
sahf
inc
push
adc
mov
push
sti
movsb
pop
sahf
push
xchg
scas
jb
push
cltd
fldcw
sbb
outsl
mov
adc
mov
jge
sub
dec
push
dec
push
mov
fcoml
fists
rcrb
lahf
imul
inc
mov
dec
outsl
fisubs
movsl
cmpsl
int3
jmp
cmp
pop
imul
sti
push
mov
lods
sub
or
nop
mov
adc
loop
ljmp
in
sub
or
jecxz
movsb
xchg
ds
data16
arpl
pop
bound
dec
push
sub
aaa
outsl
mov
out
in
int
aam
push
cs
scas
mov
dec
jno
lea
mov
pushl
cli
cmp
pop
pop
inc
adc
and
sub
ss
hlt
inc
cmpsl
dec
pushf
mov
hlt
repz
or
inc
es
test
jle
mov
jno
insl
sbbb
adc
or
and
dec
pop
in
dec
sbb
lea
mov
pushl
jg
jnp
inc
mov
xchg
and
popa
push
ret
jp
fists
js
dec
jp
jb
fistpll
adc
pusha
cmp
pop
in
pop
and
nop
cmp
call
dec
ret
push
mov
adcl
jp
repz
cmpsl
xchg
mov
int3
movb
and
adc
lods
sahf
inc
push
adc
jg
insl
mov
pop
cmp
xor
inc
mov
jg
mov
in
mov
scas
mov
out
inc
pop
je
insl
addb
add
inc
stc
or
ds
fmul
fisubrl
sub
rorl
pusha
cmp
push
loope
out
fcoml
mov
rcr
mov
add
fidivrs
sub
mov
mov
cmp
popa
mov
inc
pop
hlt
cmpsb
push
ljmp
lea
jno
inc
aad
mov
push
xchg
sbb
daa
mov
sbb
std
cld
mov
xchg
in
inc
lock
out
xor
loope
xor
test
and
mov
call
jo
dec
pop
sub
xlat
xor
test
mov
cmp
push
mov
idivb
cmc
jle
xchg
test
scas
fdiv
imul
pop
divl
out
std
lods
jl
cltd
maxps
clc
std
fildll
mov
out
xor
insl
xor
outsb
nop
push
push
pop
movsl
ja
das
fsubrs
sbb
rclb
jmp
outsl
mov
mov
ss
in
repnz
int3
xchg
mov
sbb
mov
lock
outsl
pop
xchg
sbb
insb
xor
adc
enter
loope
mov
mov
ljmp
sub
test
cwtl
loope
mov
mov
xchg
js
mov
mov
test
adc
or
jge
mov
pop
nop
push
and
dec
lea
cmc
xchg
jge
lcall
adc
pop
stos
pop
sub
popa
mov
fstl
mov
push
adc
je
push
lods
fstps
mov
pop
sub
inc
push
gs
mov
ja
cmp
bound
mov
jbe
lcall
test
jnp
fistl
push
shr
rcl
insl
pusha
pop
mov
pop
jns
push
lds
dec
insb
arpl
pop
pop
dec
pop
jle
test
xchg
insl
dec
adc
push
mov
inc
fwait
push
fisttps
test
icebp
adc
cli
sbb
mov
idiv
mov
or
push
andb
ret
xlat
dec
sbb
xchg
mov
push
pop
sbb
cs
sub
mov
stos
mov
push
adc
inc
mov
sbb
xchg
sub
stos
mov
jne
dec
aad
fistpl
scas
cmp
test
or
xchg
mov
jg
add
sub
popf
cmp
cmc
push
popf
jl
cmp
dec
aad
fwait
cmp
lock
cmc
sbbb
movsb
xchg
es
push
ljmp
sub
mov
cmp
leave
std
sub
lret
mov
mov
cmpsb
xchg
scas
lods
jecxz
cli
lods
rolb
dec
jbe
mov
mov
in
push
in
aam
cs
xchg
loopne
stos
test
xchg
sub
push
push
sub
inc
addb
pop
int3
leave
lods
mov
push
adc
jnp
insl
pop
pop
jb
jmp
sbb
pushf
stos
sbb
ja,pt
pop
jl
push
scas
sbb
loope
adc
dec
push
lods
and
ret
ret
enter
incb
add
insb
xchg
and
stos
out
mov
mov
lods
pushf
fbstp
jne
pushf
pop
pop
and
mov
lahf
imul
hlt
dec
push
add
int
mov
loop
xchg
test
push
jb
mov
ficoml
insl
mov
mov
mov
ret
push
push
movsb
dec
out
pop
xchg
loopne
test
pop
stc
mov
or
dec
loop
adc
pop
jp
mov
push
inc
dec
hlt
sbb
pusha
stos
cmp
mov
adc
mov
scas
sbb
loop
pop
inc
sarb
imul
cmc
xchg
call
test
insb
xchg
and
subb
mov
test
adc
sub
xchg
movsl
out
jne
mull
inc
jmp
lea
subb
out
loop
xchg
pop
pop
js
jo
mov
lods
rcll
or
sbb
mov
mov
mov
xchg
es
in
sbb
in
mov
mov
popa
cld
lods
cmp
pusha
dec
ficompl
mov
repz
jo
mov
push
adc
dec
lods
push
and
xor
mov
add
pop
or
ja
xchg
pop
lea
data16
push
stos
cltd
addps
mov
inc
stc
dec
fadd
mov
adc
xchg
test
aas
orb
arpl
insb
mov
sub
lcall
lret
mov
test
jecxz
lret
aas
fwait
test
rclb
popl
sbb
or
cs
mov
int
arpl
sub
shll
xchg
jb
fstl
dec
mov
jle
repnz
test
pop
sub
sbb
push
in
sbb
jbe
xor
pop
pushf
pop
mov
mov
insl
mov
xor
int3
xchg
shll
xor
rcrb
pushw
sub
roll
jecxz
ss
cmc
jp
pop
imul
inc
mov
cmpsl
sbb
dec
push
leave
and
sub
mov
ljmp
stc
jl
xlat
and
dec
in
mov
cli
adc
ret
lods
add
sub
cmpsl
mov
ficompl
sub
pop
push
push
push
cmpsb
inc
das
repnz
add
and
in
dec
push
das
imul
xchg
inc
add
lret
xchg
cmpsb
pop
xor
inc
push
adc
std
test
or
jno
lock
sahf
loop
dec
popa
pop
jbe
xchg
dec
and
jg
jmp
sti
test
popf
xchg
jno
rolb
xchg
nop
repz
add
push
je
or
cwtl
xor
or
sbb
mov
mov
dec
pop
in
insl
popf
sbb
and
fisttpl
inc
stos
jne
sbb
les
pop
neg
or
inc
add
xchg
mov
xchg
jle
in
inc
fdivrp
outsl
cwtl
jno
je
fmull
sub
jp
adc
push
inc
out
pushf
fcmovnu
xor
push
lahf
jae
nop
jns
or
mov
fcmovnu
lock
pop
dec
push
dec
xchg
jecxz
cmpsb
fldt
movsl
dec
pushf
mov
in
and
jg
stc
cmp
subl
jmp
ds
les
cmp
inc
rclb
inc
jne
arpl
loope
insl
bound
imul
sbb
in
lahf
movsl
xchg
addl
sahf
imul
dec
call
dec
xchg
sub
fbstp
adc
inc
out
adc
jo
xor
dec
xchg
and
adc
mov
pop
in
cs
in
lea
adc
add
cmp
neg
frstor
and
sbbl
stc
or
inc
aad
lret
enter
cld
rcll
rcl
insl
es
fiadds
push
adc
mov
flds
test
mov
aad
rcl
movsb
dec
xchg
add
adc
scas
mov
cmp
fistpll
rorl
sbb
loopne
xor
xchg
gs
sub
inc
push
adc
mov
aad
pop
mov
fidivl
stos
sub
cmpsl
dec
pushf
mov
fists
cmc
das
mov
push
xchg
mov
adc
pop
and
bound
clc
lret
push
leave
mov
push
jle
dec
scas
mov
insl
fimull
pop
ret
roll
xor
inc
in
ljmp
push
fcoml
pop
not
test
sub
fiaddl
sub
dec
xor
pop
push
pushf
cmpsb
aaa
adc
mov
stos
push
scas
pop
iret
pop
lds
xchg
push
mov
shlb
cmp
jb
mov
and
push
test
icebp
xchg
jno
leave
hlt
adc
jge
and
and
mov
lret
jae
lods
frstor
in
mov
out
lret
pop
inc
or
rol
stos
or
and
cli
mov
lcall
outsb
cmp
cmc
ret
jg
mov
and
jo
icebp
add
or
xchg
sahf
push
push
ret
mov
lea
imul
call
not
aad
mov
fadds
mov
stc
mov
adc
jnp
and
or
pop
insl
aam
cmp
add
dec
dec
roll
push
outsb
repz
pop
daa
sub
insb
fs
push
faddl
jl
xchg
into
leave
add
adc
fildll
fsubp
lret
lret
pop
lret
push
nop
cmp
ss
paddq
dec
cmc
sbb
sub
jmp
out
push
cli
dec
cmp
jbe
repnz
mov
rclb
dec
jecxz
xchg
xchg
and
je
xchg
push
push
cli
std
repnz
mov
push
mov
in
dec
mov
rcll
mov
ljmp
lock
push
frstor
mov
fidivl
aam
loopne
scas
aaa
mov
shlb
insl
enter
jo
mov
movsb
loope
xchg
pop
sub
lds
add
inc
dec
jnp
mov
pop
cmp
xorps
aad
cmp
mov
adc
fcomps
cltd
or
outsb
lret
in
mov
push
push
insl
xchg
sbb
mov
cwtl
scas
iret
jg
fsubs
xchg
gs
cmp
dec
mov
cmp
in
shlb
shll
ljmp
test
push
add
bound
dec
mov
scas
dec
in
lds
imul
add
fistl
sbb
jno
in
jg
pushf
clc
imul
adc
fwait
mov
jae
push
ficomps
pop
iret
cwtl
sbb
pop
adc
push
gs
stc
cmc
inc
test
mov
repz
int
sub
dec
add
lds
mov
jo
ljmp
mov
and
jae
sub
and
jle
inc
inc
negb
ret
data16
loopne
sub
pop
mov
pusha
stc
mov
test
daa
stc
insl
outsb
das
mov
jmp
outsl
jmp
inc
sub
inc
dec
jno
test
sbb
push
push
push
loop
jnp
lods
sar
dec
pop
jb
loope
push
fadd
lods
hlt
ret
fldln2
and
sub
mov
dec
xchg
std
cli
loopne
movsb
in
fidivrl
and
pop
lods
bound
dec
fstl
pop
add
mov
adc
mov
sub
xorb
pop
ret
flds
test
mov
mov
sbb
bound
das
pop
mov
sarb
lea
std
xchg
cmp
push
repz
daa
add
jle
arpl
ds
std
cli
cmp
pop
int3
cmp
mov
insl
inc
and
jo
add
inc
aad
sub
testl
popf
push
lods
pusha
jne
add
pop
enter
push
jg
lahf
mov
cmp
push
stos
mov
insl
pop
inc
cmpsb
rcrl
cmp
bound
aas
push
lods
int
iret
imul
mov
clc
hlt
inc
inc
push
and
adcl
insb
cmp
test
scas
pop
push
push
mov
loopne
ret
fcmove
fcmovne
aas
sub
imul
cmc
movsb
pop
jbe
xchg
dec
inc
or
mov
clc
lahf
out
mov
cmp
xlat
andl
test
adc
movsl
frstor
sbb
pop
adc
sbb
movsl
movsb
lods
add
lcall
push
rcrl
inc
mov
xchg
cwtl
sbb
inc
mov
sub
pop
cmp
dec
ret
jp
outsl
jmp
jbe
dec
bound
or
jno
dec
xlat
addr16
xchg
sub
sub
cmp
push
jbe
push
adc
sbb
mov
and
int3
in
dec
jecxz
push
daa
movsl
xor
repnz
mov
mov
js
loop
fnstsw
inc
or
lret
mov
cwtl
mov
mov
inc
xchg
sbb
mov
rolb
sbb
pop
adc
out
lds
adc
aam
xchg
fcmovnu
hlt
adc
sbb
outsb
push
pop
ds
pop
adc
dec
pop
shlb
xchg
push
xacquire
mov
aam
xor
fcoml
imul
in
stos
push
cmpsl
in
pop
xchg
es
test
pusha
imul
cli
push
adc
mov
xchg
iret
pop
or
stos
lret
mov
jbe
adc
repz
jno
scas
xchg
dec
andl
subb
insl
inc
bound
in
cmp
mov
pop
xchg
loopne
dec
mov
sub
stos
jbe
std
pop
mov
addr16
fdivrl
cmp
mov
mov
arpl
jle
push
in
adc
popf
pop
inc
pop
ror
cmc
add
fs
es
lret
ret
mov
mov
xchg
lret
push
pop
lahf
mov
mov
mov
sti
push
data16
dec
ds
mov
andl
int3
out
pop
jg
mov
xchg
out
jge
sbb
aam
das
insb
xchg
insb
cwtl
data16
cmp
fwait
jno
mov
xchg
push
imul
push
clc
fimuls
movsl
lret
in
sub
mull
loope
call
jns
mov
aam
shll
cmpsb
dec
lret
mov
cld
and
inc
sbbb
jo
sahf
es
or
xchg
outsb
ficoml
shrl
mov
js
sti
jl
call
cmpsb
sbb
dec
out
and
cmpsl
dec
pop
ja
or
ja
adc
mov
insl
das
mov
sbb
aad
pop
jns
bswap
adc
inc
or
cmpl
adc
and
ss
mov
cmp
and
rclb
pop
and
mov
push
repz
sub
test
enter
inc
push
add
cmp
sbb
add
dec
pop
faddl
adc
pushf
mov
cs
add
flds
adc
inc
dec
jno
adc
in
leave
xchg
sub
rclb
popa
stc
in
inc
add
push
push
cli
fwait
subl
adc
xchg
aad
nop
test
lea
dec
push
sub
insb
adc
aam
push
or
xchg
push
lock
and
cmpsb
dec
pushf
sarl
and
add
dec
add
stc
lahf
push
movsb
xor
data16
aam
and
lcall
or
std
push
pop
cwtl
data16
imul
outsb
xor
test
inc
mov
std
mov
cld
out
add
iret
xchg
and
jnp
stos
xchg
adc
jb
iret
jmp
shl
call
adc
dec
xchg
out
adc
sbb
shll
xchg
scas
add
rclb
jb
and
call
cmp
in
dec
mov
out
aaa
data16
lods
adc
jge
sub
cwtl
das
lret
or
imul
mov
loope
outsl
iret
hlt
fwait
fs
cmpsb
xchg
stos
adc
mov
add
jle
xchg
stos
sarb
fstl
std
inc
jbe
enter
jg
cli
adc
popf
jae
aaa
insb
xchg
movsb
adc
adc
add
std
push
mov
mov
push
insb
jg
adc
inc
loop
sbb
cs
pop
jae
sub
jno
mov
sbb
pop
adc
xchg
and
dec
test
mov
xchg
inc
mov
dec
jne
xchg
dec
jle
sbb
and
sbb
test
jge
fidivrl
mov
jg
adc
gs
adc
enter
jb
orb
adc
pop
shrb
mov
cmp
shl
les
ljmp
ja
mov
xchg
push
add
xchg
mov
sub
nop
pop
in
aas
xchg
out
jl
les
test
sbb
pop
cmp
add
xchg
test
cmp
fwait
mov
das
ret
ret
mov
pop
mov
ja
popa
arpl
mov
cmp
mov
out
cmp
fcoml
or
sub
push
jne
mov
mov
adc
xchg
sub
xchg
push
sbb
pop
adc
scas
or
ja
adc
std
imul
out
sbb
pop
adc
mov
xor
xchg
sahf
inc
fsts
rcll
insl
jno
cwtl
push
adc
pop
insb
addr16
adc
xor
movsl
mov
jo
aad
push
faddp
and
dec
adc
mov
call
stos
ret
dec
inc
jge
imul
push
jle
shr
fsubrl
adc
jg
lcall
and
mov
pop
adc
jl
inc
and
adc
push
xchg
add
je
xchg
mov
imul
dec
das
xor
lea
fs
leave
lea
add
add
push
iret
mov
test
adc
aam
xchg
mov
sbb
dec
push
adc
in
add
xchg
or
enter
cmp
bound
lods
sub
pop
idiv
mov
inc
inc
xor
add
jne
dec
out
mov
fldt
push
mov
ljmp
daa
mov
pop
jbe
les
sub
nop
or
loopne
xchg
mov
xlat
test
adc
adc
std
mov
dec
lods
push
cmpsl
int
sub
rolb
sub
fld
cld
std
or
xor
jmp
xor
cmc
outsb
aas
stos
shlb
int3
shr
dec
leave
nop
jns
movl
test
test
mov
pop
dec
js
popf
fsubrp
inc
je
mov
aaa
adc
inc
adc
or
mov
fdivs
mov
push
cmpsl
pop
adc
xchg
and
dec
or
in
and
sub
mov
sub
mov
aam
mov
icebp
sbb
in
int
or
aam
imul
scas
xchg
fildl
lret
xor
jmp
stc
jbe
and
mov
jecxz
das
push
lods
fcom
jns
pop
mov
mov
push
push
jns
jns
ja
or
add
jbe
dec
add
lfs
mov
lcall
clc
mov
sub
mov
in
xchg
add
inc
adc
sub
pop
imul
in
and
movsl
dec
adc
or
lds
orl
or
insl
dec
nop
push
leave
stos
mov
stos
sbb
das
ret
iret
mov
test
adc
mov
adc
xor
adc
jle
sbb
sarl
add
mov
pushf
repnz
jae
jle
andl
insl
cmc
faddl
test
dec
push
pop
ret
and
iret
mov
xchg
push
je
leave
mov
in
push
push
push
mov
adc
xor
inc
sub
jnp
ret
adcb
cs
push
enter
adc
and
dec
fbstp
test
xor
jb
int3
pusha
sbb
adc
xchg
stos
faddl
outsb
icebp
ljmp
sbb
cwtl
and
dec
sbb
xchg
stos
push
aad
cmp
ss
pop
mov
jecxz
jecxz
mov
shlb
mov
in
adc
ds
ficompl
pop
dec
xchg
cmp
push
cmpsb
dec
push
popaw
or
test
push
testb
and
jmp
ds
sub
sub
mov
mov
les
push
in
jbe
adc
out
push
call
aad
and
daa
adc
ficoms
mov
shl
sti
cwtl
out
cwtl
or
mov
fdivl
bound
or
mov
xchg
push
sbb
adc
scas
lcall
cltd
stc
andl
cmp
mov
fwait
and
iret
pop
mov
ret
imul
leave
sub
jo
and
push
sbb
ret
jne
cld
pop
adc
dec
adc
and
add
push
inc
test
mov
dec
aas
fmulp
xor
mov
dec
pop
jmp
ss
lret
lcall
and
inc
inc
outsl
imul
fs
adc
add
loopne
pop
arpl
faddp
cwtl
lret
adc
cmc
pushf
dec
mov
mov
and
addl
adcl
pop
push
fdivs
pop
cmpsl
stos
cmp
dec
push
dec
push
in
xlat
test
push
lock
in
jb
lods
fsub
dec
ja
icebp
and
clc
push
jge
adc
add
sub
and
jb
push
push
cmpsl
dec
pop
jle
in
popa
and
cmp
or
clc
popa
xor
adc
aad
dec
pushf
cmp
clc
push
xor
fucomp
out
sub
mov
fidivl
adc
inc
fstl
jbe
cwtl
jbe
and
sub
or
sub
sarl
add
outsl
adc
lds
push
push
in
add
sub
lahf
mov
adc
daa
insb
inc
sbb
arpl
js
xor
out
pop
adc
stos
es
call
out
imul
mov
lea
adc
test
fwait
mul
popf
out
adc
icebp
sbb
in
int
or
hlt
imul
scas
xchg
mov
mov
pushf
movsl
push
mov
cmp
and
push
push
pushf
insb
push
inc
pop
mov
pop
out
dec
mov
lea
lahf
cmpsb
scas
addb
mov
sub
dec
fistps
sub
jne
test
push
dec
pushf
pusha
cli
mov
addl
cmp
lods
daa
dec
jmp
test
cmpsb
fldt
dec
mov
ret
add
lock
cmpb
stos
push
es
dec
and
int
inc
clc
sti
add
xchg
test
cs
mov
mov
dec
dec
sbb
jl
sub
xchg
mov
mov
nop
inc
cwtl
push
inc
data16
fucomip
cwtl
mov
insl
pop
scas
imul
pcmpeqb
pop
xchg
adc
mov
cli
xchg
and
add
cmpsb
xchg
and
js
xchg
sub
fstl
xor
jbe
pop
popa
mov
cmpsb
dec
out
mov
fwait
xchg
inc
cmp
sbb
rcll
inc
inc
and
jb
jg
jnp
in
push
cli
into
cmp
testb
xchg
xchg
cmpsb
inc
jne
cmp
ljmp
mov
test
dec
lock
mov
or
imul
push
and
dec
xorb
or
xchg
into
sub
leave
adc
sub
sahf
lahf
js
and
mov
add
shrw
and
popa
adc
xor
lret
sbb
push
xchg
stc
testb
jns
dec
jecxz
add
daa
fstp
mov
lds
int3
lret
inc
or
and
pop
mov
xchg
inc
or
insb
shll
test
and
inc
push
adc
les
add
and
adc
cmp
pop
mov
lret
lea
jae
add
cmc
aaa
xor
push
mov
cli
repnz
icebp
sahf
sub
sti
and
xchg
mov
mov
push
sti
push
loop
adc
push
jecxz
adc
xchg
jecxz
dec
sahf
jbe
dec
or
xor
jp
adc
pop
xchg
sbb
fcompl
movsb
fldcw
outsb
sub
movsl
jmp
inc
out
adc
adc
mov
and
lds
int
nop
jecxz
xchg
test
jno
es
in
xchg
ret
sbb
push
dec
mov
jns
enter
clc
cmpl
sbb
push
xor
push
adc
cmpneqps
ds
and
add
push
loope
sub
inc
out
adc
jl
mov
mov
popa
stos
xor
iret
adcl
popa
push
mulb
mov
jbe
in
push
inc
movsl
call
clc
lret
fsubrs
mov
xlat
int
test
sahf
and
loope
jecxz
mov
xor
mov
addl
cli
pop
sahf
pop
std
mov
daa
dec
out
mov
nop
cmpsb
or
jae
push
addr16
ret
add
std
outsl
or
dec
scas
or
aas
xor
and
jge
add
dec
imul
pop
sahf
pop
inc
nop
pop
xchg
and
and
jmp
ret
in
lea
and
dec
negb
jno
pop
lods
pop
mov
push
sti
popf
sbbl
lea
inc
push
adc
enter
out
cmc
or
inc
out
mov
push
jmp
cmp
mov
test
or
sahf
mov
xchg
pop
int3
mov
lcall
je
std
cli
pop
pushf
jbe
inc
mov
xchg
and
test
add
cmp
and
dec
or
call
dec
outsl
xor
mov
loop
in
sbb
sbb
decb
xchg
cmp
scas
xor
lcall
lahf
stc
inc
push
test
jno
call
mov
jo
jae
mov
scas
movsl
dec
popf
cmp
iret
pop
jbe
clc
pop
sahf
je
inc
sub
out
fwait
pop
xchg
loopne
lcall
mov
lea
jle
in
mov
insl
aaa
pop
mov
out
pusha
test
cmp
cmc
hlt
adcl
scas
aaa
jmp
cmp
pop
sbb
aam
mov
lahf
dec
add
inc
cmp
sbb
icebp
mov
pop
mov
mov
pop
inc
test
aad
stos
pusha
call
jo
jns
adc
push
inc
jae,pt
mov
and
out
pop
sbb
adc
and
out
aad
xor
jnp
dec
pop
notb
cmpsb
cs
fistps
lcall
jp
or
jo
stc
lock
mov
mov
ret
fdivs
call
cmpsb
dec
loopne
fs
jge
mov
popf
jmp
testb
jg
or
jbe
and
sub
pusha
pop
cltd
sub
into
sbb
lock
mov
into
pop
push
dec
xor
and
out
add
stc
andb
push
insb
fdivrl
ljmp
lods
xor
lahf
mul
out
xchg
test
xor
imul
dec
push
push
ljmp
lods
loope
cmp
xor
loopne
cmpsb
xchg
in
xchg
jl,pt
ja,pn
mov
orl
sar
test
pushf
push
jg
mov
adc
clc
aam
aam
adc
loop
push
push
test
loope
out
xchg
xchg
insb
xor
cmpsl
sahf
mov
int
mov
cmc
xor
mov
lods
jb
push
daa
push
pushf
cmp
loopne
arpl
test
sub
xor
inc
icebp
mov
fisubrs
mov
jg
mov
sbb
inc
test
sarb
adcl
adc
shrl
inc
sub
mov
and
cli
shrb
jbe
mov
pop
or
push
dec
jge
or
loope
sub
push
imul
jno
cmpsb
lret
adc
hlt
mov
mov
mov
aaa
rcrl
pop
aaa
pop
push
lods
and
xorb
int
or
inc
stc
sbb
cmp
dec
xchg
sub
mov
fldl2t
sbb
adc
jl
lea
dec
jmp
pop
pushf
push
dec
xchg
push
clc
bound
push
ret
and
lea
fcmovnbe
std
mov
ret
fwait
pusha
cmpsl
dec
loopne
ret
dec
jecxz
push
mov
stc
fcomi
cs
addb
addl
pop
ret
pop
jno
jno
adc
fcmovb
mov
push
sbb
sbb
movl
daa
mov
mov
sbb
test
cltd
cli
cmc
xchg
out
push
cmp
dec
xchg
sbb
push
cmpsl
cmpsb
stc
mov
sbb
sub
add
pop
cwtl
outsb
mov
popf
repz
int3
pop
mov
and
pop
mov
rorl
xor
lods
int
std
in
cmp
xlat
test
test
in
mov
aam
or
cwtl
cmp
outsl
xchg
mov
push
or
cmp
or
sarb
aaa
seto
fsubrs
sub
sbb
pop
and
push
mov
in
fisubrs
xchg
xor
daa
dec
push
sub
jle
cmp
jecxz
test
mov
arpl
push
inc
fisttpll
and
test
or
pop
mov
stc
outsl
out
xchg
enter
add
stos
push
sarl
and
bound
out
push
and
je
add
pop
sti
jg
cld
jbe
sub
stos
mov
dec
cmp
pop
in
pop
cs
xchg
insl
daa
mov
jge
xchg
js
xchg
sbb
sti
push
out
pop
ss
cmpsb
ds
addl
push
ljmp
iret
sbb
scas
in
in
pop
push
dec
sbb
lahf
pop
arpl
in
mov
ret
inc
stc
ret
mov
inc
and
mov
jmp
xchg
push
jle
mov
cmpl
mov
xchg
leave
mov
mov
sbb
and
mov
pop
add
and
sbb
roll
sbb
testb
mov
loop
mov
int
mov
fsubrs
and
or
adc
fidivrl
add
ret
dec
or
and
mov
div
test
clc
mov
jg
mov
push
mov
jmp
imul
xor
iret
jno
inc
mov
in
jb
ljmp
adc
inc
xchg
push
inc
xchg
mov
idivl
mov
push
cld
std
push
gs
xchg
bound
xlat
cld
fistl
fnstcw
lock
orps
mov
fcompl
jecxz
mov
pop
jbe
push
enter
std
ss
mov
pop
test
addb
cwtl
xlat
inc
out
pushf
mov
mov
inc
jp
jmp
dec
pop
jp
push
lcall
stos
das
add
mov
addr16
mov
jge
enter
outsb
outsb
mov
ret
jle
xchg
add
xor
adc
add
sub
or
mov
mov
fsts
leave
cltd
adc
sbb
pop
xchg
sub
push
add
and
pop
or
loopne
int
dec
mov
cmp
test
cmp
popa
inc
scas
jl
jno
loopne
test
or
add
je
ret
std
arpl
cmp
mov
out
xchg
fwait
ja
jg
pop
xchg
jo
jle
push
sbbb
adc
mov
inc
pop
jno
insl
lea
jl
jmp
test
mov
loope
push
jnp
xchg
gs
sti
mov
pushl
cmc
pusha
and
pop
jb
push
jnp
xor
scas
pop
dec
fs
loopne
push
push
push
pushl
push
loop
pushf
test
xor
jmp
mov
adc
outsb
out
xchg
fmul
fimuls
jl
adcl
jb
mov
and
test
fcompl
lea
mov
add
add
lods
pop
cmp
icebp
lock
addr16
hlt
sahf
stos
out
cld
mov
aad
lock
and
aas
mov
test
jb
sub
adc
icebp
and
sbb
sbb
mov
outsb
lock
cmp
scas
pop
mov
addr16
mov
add
add
mov
and
add
aas
and
dec
or
int
sahf
pop
scas
lcall
ss
fadd
push
int
je
mul
enter
rorl
inc
ret
repnz
mov
icebp
cmpsb
sub
lock
andl
pop
fcmovnu
insb
push
clc
mov
mov
je
addb
inc
addb
dec
jmp
lods
add
adc
or
dec
loope
cmp
and
pop
adc
pop
popf
dec
cmpsl
push
das
cmpsl
out
cmp
imul
cmpsl
jbe
sbb
fiadds
int3
jmp
ja
call
dec
in
mov
and
mov
shll
scas
int
enter
sub
ss
and
push
xchg
mov
out
dec
pop
sti
mov
or
xlat
sbb
cmp
ss
push
mov
scas
mov
jmp
popf
rclb
iret
mov
jecxz
std
and
subl
cmpl
cmc
mov
repnz
jl
dec
addr16
xor
add
das
jmp
push
jge
sbb
or
sub
aaa
jmp
jno
xchg
sarl
aam
hlt
pop
fdivrl
jmp
xchg
xor
or
mov
lcall
mov
sub
stos
pop
pop
repnz
imulb
pushf
mov
xchg
test
jb
test
push
ss
pop
mov
jg
fisttpl
test
test
inc
fdivl
pop
mov
dec
sbb
mov
orl
push
lods
pop
pop
mov
push
dec
mov
insb
xor
sarl
popf
dec
insl
repnz
ds
pop
dec
loop
lds
xor
adcb
subl
sub
nop
lods
mov
dec
rorl
xchg
sbb
or
sbb
or
and
xchg
pop
outsb
adc
and
iret
pop
sbb
loop
jmp
cmp
mov
decl
shll
adc
push
out
std
mov
ret
gs
xchg
pop
sahf
jno
daa
cmpsb
fsubrs
xchg
pusha
std
jmp
loopne
xor
sti
cmp
popf
in
pop
xorb
imul
push
adc
inc
inc
in
dec
adc
js
lock
mov
arpl
fnstsw
cmp
cmp
scas
es
cmpsl
insl
lods
loopne
mov
xchg
lods
cmp
fs
jne
repnz
sbb
lahf
cmpsl
jnp
jecxz
push
dec
and
movsb
jmp
mov
nop
inc
and
pop
adc
fsubl
or
stc
les
cs
and
fnstenv
outsl
les
xchg
ret
sbb
test
insl
std
mov
push
hlt
cmp
clc
fildll
and
incl
pop
cmp
gs
inc
inc
std
add
dec
mov
mov
in
sbb
push
or
inc
aad
lret
or
jo
inc
aam
movsl
mov
fsubs
out
push
movsl
loope
inc
or
mov
cmp
xor
push
std
jae
inc
ret
shrl
dec
xchg
lods
mov
fbstp
imul
xchg
mov
fsts
clc
inc
js
pop
push
mov
adc
mov
scas
adc
out
outsl
mov
aaa
outsl
push
call
add
and
mov
push
clc
gs
je
xchg
mov
into
mov
xorb
jae
mov
sahf
hlt
cmp
fsub
cmp
pop
lock
push
lods
sub
xchg
adc
in
dec
push
xor
int
push
push
scas
es
jo
daa
mov
and
xchg
mov
arpl
jae
rcrb
dec
add
add
pop
or
pop
adc
push
insl
pop
dec
sbb
jl
outsl
test
cmpb
jp
loopne
mov
mov
sbb
push
insl
pop
int
idivb
lcall
cmp
mov
pop
ds
add
and
sbb
cmp
fsubl
es
sbb
outsb
lods
add
push
add
push
pop
cld
negl
repnz
imul
lods
sub
jmp
xchg
and
dec
out
call
or
add
aad
xlat
out
inc
push
adc
fimuls
mov
enter
push
push
mov
shll
mov
add
lcall
lret
retw
sti
mov
lcall
lock
fstps
fs
mov
mov
cwtl
sbbb
scas
fistpl
call
mov
inc
sbb
sub
mov
in
insb
sub
jo
mov
jne
lock
into
cmp
ficoms
adc
cwtl
lahf
mov
pop
lcall
in
out
add
adcb
sub
adc
gs
mov
je
leave
out
fwait
or
lcall
out
shl
int
int
jmp
enter
jmp
add
jne
mov
jl
js
icebp
filds
pusha
mov
jle
fidivrl
push
shlb
fwait
pop
fimuls
and
ret
lods
mov
and
jp
popf
insb
push
inc
test
jg
push
jns
daa
push
cmpsl
stos
clc
mov
xor
mov
test
push
rcr
pop
mov
xchg
mov
ffreep
insb
cmp
scas
ffreep
sbb
hlt
jnp
inc
or
shll
xor
inc
mov
je
add
xor
in
insl
xchg
std
lahf
xchg
fwait
addl
sub
mov
pop
cli
xor
stc
loopne
xchg
pop
cmpsb
pop
sbb
out
fistpll
mov
or
movsb
in
fld
sub
xchg
push
ret
fadds
jo
ds
jl
and
das
ljmp
lahf
sbb
jmp
cmp
int3
and
stos
and
mov
cmp
push
mov
and
test
fldcw
adc
jecxz
mov
add
dec
mov
xchg
movsl
mov
cmp
mov
or
push
mov
or
lret
aad
enter
mov
push
adc
cmp
mov
adc
pop
adc
or
jp
faddp
cmpsb
sub
mov
lahf
lock
jecxz
pop
sbb
sbb
test
push
std
mov
scas
test
pusha
mov
fidivrl
movsb
cmp
cmp
and
mov
iret
jno
loop
mov
add
dec
outsb
sbb
andl
add
add
lret
data16
gs
mov
add
sub
pusha
jne
dec
jns
push
js
sub
mov
push
aad
lock
mov
or
mov
xchg
mov
test
scas
fsts
out
jl
jmp
test
mov
loope
push
jnp
xchg
add
sti
mov
pushl
cmc
pusha
and
pop
jb
push
jnp
iret
shrb
dec
push
push
push
pushl
push
loop
xchg
test
xor
loop
test
fmul
fimuls
jl
adcl
jb
mov
and
leave
and
sti
dec
push
and
lea
mov
add
add
lods
pop
cmp
icebp
lock
addr16
hlt
sahf
stos
out
cld
mov
aad
lock
dec
mov
mov
test
adc
icebp
and
sbb
cmp
mov
outsb
lock
cmp
lahf
pop
mov
addr16
mov
add
add
mov
and
add
ds
mov
dec
or
int3
pop
lahf
addr16
scas
fwait
out
pop
or
ret
dec
jne
or
lret
jle
mov
push
sub
inc
shll
movsb
out
mov
rep
out
xchg
adc
call
sub
cmpb
push
das
adc
js
ret
pop
data16
jae
add
pop
outsb
xchg
mov
xorb
hlt
mov
addb
inc
cmpsl
jnp
pop
imul
stc
out
mov
aam
inc
pop
cs
ret
les
add
xchg
imul
mulb
cmp
adc
push
scas
lods
and
enter
je
adc
fisubl
inc
adc
inc
jne
mov
shlb
mov
xchg
mov
sub
cs
mov
or
jno
test
es
push
mov
pop
dec
mov
stos
xchg
adc
sbb
cmp
pop
dec
cwtl
cmp
imul
mov
sbb
call
movsb
xor
pop
mov
inc
mov
xchg
sub
push
jmp
imul
fs
icebp
ret
test
pop
or
jnp
fdivrl
mov
xchg
cmp
je
fsts
dec
xchg
pop
out
cld
das
or
fdivs
out
mov
inc
and
xchg
fimuls
xchg
stos
shll
mov
pushf
into
into
mov
jge
repz
and
xor
jl
fwait
out
test
jno
test
push
sbb
testb
xor
mov
mov
dec
cmp
mov
jae
or
mov
and
xchg
fists
push
adc
cmp
mov
mov
pop
sub
jbe
xor
into
fiadds
adc
sbb
sbb
cmp
aaa
pop
jmp
daa
cmpsl
sbb
fidivs
loope
int
gs
lds
ret
sub
dec
loopne
stos
mov
ds
and
imul
es
jns
pop
int
cmpsl
mov
jb
insb
dec
fdiv
dec
dec
mov
adc
rcrb
loope
xchg
dec
sub
and
stc
cmp
push
cmc
pusha
cmp
jmp
cmp
xor
loop
int3
cmp
jge
add
xchg
mov
push
sti
cltd
mov
push
cmpsl
vpmullw
pop
ficomps
rorb
sahf
outsl
jb
or
out
cmp
pop
in
ja
ret
shlb
sti
mov
jg
mov
pop
enter
jmp
ret
ds
pop
scas
fsub
push
mov
in
inc
and
in
std
mov
dec
jmp
dec
fnstsw
out
bound
push
cs
int3
mov
loopne
add
pop
push
adc
adc
ss
cli
add
sbb
and
inc
inc
addb
jb
fdivs
fwait
sbb
xchg
aad
inc
pop
cmp
fbstp
cli
jg
ret
sti
movsb
dec
out
inc
xor
xor
and
dec
pushf
cmp
sub
cmc
in
jmp
jb
lods
xor
fidivrl
xor
xchg
dec
jae
cltd
shll
jne
push
mov
sahf
in
enter
aaa
pop
pop
mov
pushf
dec
adc
or
cmp
iret
add
inc
or
enter
mov
cmp
or
sub
arpl
jle
outsl
test
fistps
mov
or
je
fstpt
and
lods
int
idivb
fwait
cld
mov
and
push
and
pop
das
lcall
mov
push
inc
lods
pop
les
mov
lret
dec
imul
clc
mov
and
mov
orl
add
push
mov
adc
fnsave
xor
cli
fst
inc
mov
sbb
sahf
addl
mov
scas
inc
cwtl
ljmp
mov
lock
mov
mov
push
inc
xchg
adc
hlt
shlb
into
mov
pop
pop
add
inc
movsl
mov
mov
or
push
loop
add
mov
into
addr16
sbb
idiv
rorl
xchg
subl
or
fcompl
dec
xchg
je
pop
loope
subb
and
and
mov
xchg
sub
xor
push
ss
cmp
sub
popa
mov
add
sbb
pop
sbb
out
jge
xor
push
cwtl
xlat
lea
imul
cmp
fdivs
add
push
pop
push
adc
leave
arpl
cmp
mov
mov
xor
cld
push
hlt
popa
test
mov
xchg
scas
mov
pop
fsubs
pop
mov
or
mov
adc
ss
fidivrl
sarl
fbld
sub
mov
push
or
mov
in
rcl
push
xor
and
popa
sub
pop
dec
movsb
xor
xorl
push
test
adc
pop
jl
sbb
sub
lock
les
aad
adc
push
adc
stc
push
daa
xor
cli
cltd
or
mov
mov
lods
jp
out
int
mov
sub
sarb
and
jno
out
popa
mov
pop
ljmp
jns
jne
cltd
outsb
out
lahf
adc
push
mov
and
in
aad
lahf
cmp
lcall
imul
test
mov
push
fcoml
mov
scas
push
inc
pop
repz
dec
test
cmp
sub
std
repz
shlb
cmp
xchg
cmp
mov
icebp
aad
mov
das
arpl
and
sbb
adc
xor
lea
push
pop
inc
sarb
cmp
test
xchg
sub
out
or
stos
mov
push
cli
mov
pop
mov
push
lock
mov
cmp
lahf
pop
mov
std
jle
push
lods
sbb
pop
push
dec
call
xor
das
int3
cli
fidivs
mov
lahf
movsb
stos
addb
mov
sub
sub
lea
mov
mov
in
nop
stos
adc
test
lods
pusha
ja
in
cmp
add
push
jno
rcrb
mov
mov
aam
mov
dec
xchg
push
jmp
fnstenv
xlat
mov
ss
ds
push
and
outsb
cmpsl
mov
pop
cmp
in
adc
jns
cli
andl
pop
out
xor
push
mov
jl
iret
lea
mov
adc
aam
mov
out
adc
sub
lods
shlb
mov
or
and
cmc
ljmp
push
sti
jns
loopne
pop
in
movsb
xchg
std
inc
xor
cwtl
mov
ja
and
mov
dec
xchg
and
gs
clc
data16
cmp
sbb
jge
or
jne
std
jo
std
mov
push
movsb
out
xor
add
xchg
mov
cmp
in
dec
mov
sti
jle
mov
in
mov
xchg
mov
in
pop
adc
pusha
imul
cld
incl
mov
out
dec
nop
lods
mov
rcrb
outsl
push
mov
cli
aaa
push
call
inc
or
sub
cmp
clc
imul
sub
fisubl
pop
add
hlt
jge
mov
aad
pop
xor
shlb
into
cs
adc
mov
lock
pop
int
fstps
pop
sub
fistps
lret
fadds
dec
das
test
das
les
xlat
stos
out
xor
inc
es
jns
push
ja
arpl
jmp
adc
pop
push
mov
sbb
sti
subb
sub
out
xchg
lret
and
repz
out
mov
push
idivb
push
pop
lret
and
gs
repnz
test
fsubrs
out
outsb
cli
jge
pop
pop
or
test
push
mov
and
cltd
idivl
jns
cmpsb
xor
out
or
mov
xchg
pop
mov
int3
jg
mov
xor
push
call
mov
out
pushf
sub
ficoms
icebp
movsl
pop
fadd
cli
mov
sar
ja
dec
add
push
sub
cmp
scas
divl
aaa
push
jae
ljmp
test
nop
cmpsb
out
pop
fucomp
pop
cwtl
idiv
cs
pop
test
xchg
pop
push
lods
shlb
mov
mov
sub
ljmp
sbb
imul
loopne
mov
jbe
ds
inc
or
jl
lock
sub
bound
jno
jmp
sbb
sbb
xchg
std
out
adc
call
mov
pushw
cmc
xchg
inc
loop
cmp
push
js
rcrl
mov
lahf
xchg
in
mov
inc
mov
mov
add
stos
mov
xorl
fldenv
imul
mov
and
sbb
out
pop
inc
les
jae
sub
and
std
shrb
movsl
inc
out
fldcw
std
jecxz
jle
mov
leave
std
xchg
or
jne
push
pop
out
ss
loope
mov
mov
in
push
push
xlat
jne
mov
out
mov
sbb
pop
sub
mov
cmp
push
aam
addb
push
adc
and
mov
fisttpl
adc
fs
lods
and
push
cmc
pusha
cmp
call
out
adc
xchg
sub
imul
mov
iret
lea
sti
mov
shlb
je
and
xlat
aam
or
lea
jg
or
mov
imul
lock
gs
sbb
aad
imul
push
std
jo
pushf
outsb
inc
std
or
sbb
cmp
jecxz,pn
cmp
xchg
pop
mov
movb
aaa
in
mov
jo
std
or
ret
popf
sub
ds
shlb
push
shrl
adc
jns
mov
addl
rclb
call
dec
pop
fsubl
push
stos
cmpsb
cmp
lea
dec
push
das
les
add
cli
jg
aam
movsl
mov
enter
sbbl
push
sub
mov
mov
xor
xorl
fcoms
gs
gs
std
outsb
pop
loope
cs
nop
mov
hlt
inc
fdivs
int
fcoms
hlt
iret
ljmp
add
pop
dec
xchg
sub
pop
sub
mov
push
cmc
inc
aam
mov
add
daa
jp
scas
xchg
dec
xchg
xor
out
movsb
loopne
and
mov
and
pop
stos
daa
lcall
pop
pop
adc
nop
mov
in
pop
adc
mov
or
shlb
inc
enter
mov
jecxz
mov
out
ja
gs
inc
pop
iret
lock
scas
adc
in
cmp
mov
sub
iret
shrl
xor
scas
xchg
inc
inc
sbb
xor
mov
fisubrl
cmp
xchg
dec
imull
sub
sub
mov
repnz
inc
leave
pop
aas
lret
or
fidivrl
push
and
adc
je
xor
or
jl
dec
lods
ret
sbb
in
dec
pushf
cmp
push
push
cmp
or
enter
xor
xor
fmul
repz
insb
lea
sbb
jge
sbb
cmp
loope
fistl
or
stos
les
jne
push
pop
push
inc
loope
jo
add
rorl
jecxz
and
mov
jne
push
hlt
popa
and
push
bnd
icebp
xchg
pop
in
sub
repz
mov
sti
add
cmpsb
ror
xlat
xor
dec
xchg
sub
pop
das
add
push
ret
add
pop
push
sub
and
xor
sbb
jge
popa
into
pop
dec
or
aaa
shrb
pop
mov
mov
aam
dec
sbb
jae
pushf
mov
mov
xchg
repnz
les
dec
out
cs
aaa
dec
mov
pop
or
and
dec
ss
in
pop
lds
mov
sbb
mov
and
stc
jns
imul
push
scas
dec
push
mov
push
pop
inc
lock
jecxz
pop
push
popa
and
js
outsb
movsl
cltd
aam
les
and
rolb
rorl
and
xchg
sub
test
mov
push
adc
out
stc
jno
push
inc
notb
rolb
and
jmp
mov
dec
adc
dec
jl
int
or
mov
popf
push
mov
cmp
shlb
sub
xchg
fadd
lods
add
ret
cmc
ljmp
push
sti
mov
rorb
rcrb
pop
jl
outsl
popf
pusha
and
inc
and
jg
or
scas
pop
flds
ss
mov
in
inc
call
fs
jg
cmpsb
adc
mov
fs
xchg
push
insl
jae
pop
mul
dec
out
ret
jae
shr
cmp
cli
cmc
xchg
out
jle
push
outsb
test
aaa
xchg
and
fs
mov
adc
add
add
es
and
in
xchg
loop
jecxz
and
cmp
dec
mov
pushl
push
sbb
cmp
in
insb
pusha
lods
pop
lds
cmp
sbb
xor
bound
arpl
test
les
mov
call
das
incb
cmp
mov
cmp
pop
adc
test
daa
jo
inc
push
adc
add
dec
decb
out
mov
pop
ret
cwtl
and
loopne
pop
mov
cmp
dec
cmp
aas
sub
ds
pop
int3
mov
dec
mov
sbb
or
mov
pushf
pop
inc
call
repz
pop
jge
dec
xchg
pop
flds
mov
add
dec
xor
inc
lahf
lahf
push
sahf
pushf
push
and
or
sub
mov
repnz
and
xlat
pop
cmp
daa
ret
out
mov
inc
int3
imul
inc
and
sub
mov
or
lods
and
adc
jno
pop
adc
loope
div
mov
add
xor
addr16
test
iret
fstpt
xor
push
das
push
push
outsb
sub
mov
and
inc
xor
imul
in
fdivrs
hlt
call
mov
repz
ljmp
mov
dec
sbb
cmpb
add
dec
lods
and
ja
lods
jecxz
xchg
je
mov
xchg
fmul
sbb
cmp
lods
sub
pop
and
icebp
call
push
adc
dec
cwtl
adc
les
das
fstp
jmp
loopne
mov
cs
popf
mulb
push
sbb
jnp
mov
insb
jle
jne
lods
cli
xchg
and
arpl
subl
lret
add
xchg
fcompp
jp
insb
movsl
dec
xchg
push
icebp
dec
pop
std
mov
pop
fimuls
pop
es
das
jne
and
cmp
aad
adc
and
mov
lret
xor
sub
ret
or
cli
leave
out
push
mov
jnp
imul
lret
push
das
cmp
mov
mov
sbb
sub
sub
clc
add
leave
lahf
aaa
outsb
clc
aam
cmc
lahf
leave
xchg
icebp
xchg
push
push
pop
mov
push
out
imul
fidivrl
int3
jge
push
cmc
test
outsb
push
arpl
scas
xchg
sbb
fsubp
add
cld
sbb
test
sbb
sub
or
sub
push
and
nop
out
fsubp
gs
jae
addl
sub
cmp
cmpsb
lcall
aad
and
xlat
div
inc
inc
push
adc
fiadds
push
arpl
xchg
xchg
dec
xchg
icebp
pusha
ret
adc
lea
mov
push
outsb
xchg
push
inc
sbb
jb
lods
cltd
mov
subl
sbbl
mov
rolb
xchg
sarl
pushf
test
inc
fstpl
aad
push
movsb
cmp
repnz
or
xchg
inc
aad
lret
aad
add
sub
cmp
pop
out
xchg
out
mov
arpl
in
sub
pushf
les
pop
dec
or
mov
fcoms
sub
leave
popa
mov
adc
lods
pop
int
sbb
inc
pop
push
push
push
push
loop
out
test
push
sti
mov
out
pop
sub
ljmp
sbb
fistps
mov
or
jne
push
pop
out
mov
sub
add
cld
mov
jbe
jae
push
cmp
pusha
cmp
test
loope
mov
out
mov
lea
sbb
or
adc
scas
out
lret
mov
mov
rcrb
jl
sbb
push
jmp
test
mov
mov
out
test
mov
icebp
and
lret
jge
cmp
push
adc
xor
pop
jno
loopne
push
call
sub
mov
mov
add
jp
jle
push
push
movsl
out
aaa
mov
xchg
pop
fsubs
stc
aad
xchg
cmp
sbb
rorl
sbb
jge
cmp
add
andb
sub
and
sbb
and
insl
jbe
aam
call
mov
repz
in
in
jnp
call
fs
and
sbb
mov
mov
push
pop
and
mov
jecxz
push
std
push
daa
stos
ret
pminsw
std
cld
add
cld
cmp
je
mov
mov
cmp
push
scas
mov
lcall
call
and
inc
aaa
adc
shlb
imul
xchg
jns
xlat
push
xchg
cmp
and
xlat
xchg
in
inc
adc
leave
stos
xor
mov
sahf
aad
mov
xor
mov
lret
mov
add
jle
inc
add
daa
sbb
xlat
pop
cmp
mov
adc
jbe
pop
bound
ja
lret
inc
xchg
and
mov
mov
test
adc
cmpsb
xchg
mov
iret
cltd
mov
xchg
bound
inc
add
repnz
roll
std
dec
out
in
ds
adc
lahf
decl
mov
adcl
sbb
sbb
sub
mov
insb
pushl
mov
dec
clc
push
scas
push
sub
mov
pop
lret
shll
jecxz
xor
pop
mov
inc
or
cld
jl
push
movsl
call
fistpl
xor
jno
es
cmp
adc
iret
icebp
lods
pop
push
cmpsl
mov
js
fadd
push
pop
cmp
push
or
adc
or
enter
sub
adc
roll
ja
repnz
outsb
and
mov
jae
cld
pusha
mov
lock
mov
sub
push
jbe
loope
xor
fisttps
mov
jb
lods
std
mov
jnp
shl
adc
push
adc
stc
pop
xor
or
mov
push
xchg
dec
bound
fldt
std
xor
and
and
ss
clc
dec
rolb
sti
pop
es
and
sar
dec
xor
jbe
cmpsb
ljmp
jmp
add
fnsave
dec
mov
pop
mov
xor
pushf
mov
insl
fwait
mov
outsb
inc
push
adc
scas
movsl
out
mov
lds
push
push
push
sbb
mov
insb
fbstp
lret
sbb
pusha
jbe
or
jmp
jo
mov
jne
and
push
sub
jl
out
pop
int3
mov
cwtl
lods
add
in
into
cld
aam
and
mov
and
or
jb
enter
cmpb
hlt
lods
pop
loopne
push
dec
out
mov
add
pop
dec
jp
push
sbb
xor
xchg
push
inc
aas
out
and
popf
mov
loope
inc
gs
mov
bound
mov
adc
addr16
cmp
bound
lea
pushf
enter
decb
xor
mov
insb
outsb
inc
push
adc
in
ja
jns
incb
push
rol
gs
out
jno
and
ret
fnstenv
fistpll
mov
std
enter
in
xchg
pop
mov
dec
xchg
out
pop
and
adc
xchg
push
inc
rclb
inc
or
dec
mov
xchg
push
sti
popa
xor
ljmp
nop
and
leave
ret
inc
add
adc
cmp
scas
cmpsl
cmpsb
or
sbb
sub
mov
jno
pop
sahf
je
and
mov
and
add
je
lcall
insl
push
std
cli
xor
pop
inc
es
push
sub
cmp
pop
negb
int3
int3
or
jmp
sbb
jmp
testl
sub
mov
xchg
outsb
fdivs
adc
mov
inc
clc
push
je
out
pop
inc
and
sbb
push
test
repz
or
push
leave
jns
data16
or
leave
pop
inc
fprem1
xor
fs
inc
push
adc
xor
push
adc
ljmp
sahf
dec
inc
mov
sarl
xor
and
scas
fnsetpm(287
js
jg
arpl
jecxz
mov
jae
dec
pop
out
fnstsw
aad
das
fwait
push
push
xor
jnp
cmpsb
ret
mov
dec
or
clc
add
lods
push
push
and
push
adc
test
sti
xchg
and
inc
fwait
sub
sti
stc
adc
xchg
inc
xchg
loopne
xchg
push
adc
or
lods
push
jle
sub
js
and
daa
repnz
mov
pop
adc
xor
lds
push
in
pop
mov
inc
inc
rcr
mov
lahf
ror
push
add
mov
loopne
lods
fstpt
stc
dec
out
das
inc
testl
adc
fisttpl
jbe
mov
nop
scas
imul
ljmp
lret
out
nop
add
or
mov
stos
fcomip
inc
sbb
mov
movsl
inc
dec
dec
adc
shrl
stc
jg
xor
pop
inc
and
pop
int
pop
shl
clc
dec
jmp
sub
ret
int3
jae
cmpsl
push
or
and
dec
mov
mov
in
mov
mov
cld
std
pop
in
jo
jno
xor
icebp
and
xchg
in
ret
rcll
adc
aam
mov
loopne
mov
xor
or
ror
lret
cmp
cmpsb
and
jp
xor
lea
rol
or
jmp
sub
mov
pop
popf
outsl
sbb
stos
dec
je
insb
rcll
cmpsb
push
lret
imul
push
adc
js
jo
popa
mov
adc
push
mov
push
and
cmp
out
sub
pusha
jbe
mov
fmull
aad
inc
push
sbbl
or
insl
fidivl
cmpsl
sbb
aad
sbb
pushl
jg
ret
aaa
inc
movsb
dec
out
pop
cmpsb
movsb
sbb
loope
lea
inc
arpl
hlt
inc
pop
enter
incb
jb
cs
xor
jecxz
ss
mov
arpl
mov
incb
add
mov
out
cmpsb
cmpsb
dec
push
lock
jmp
sbb
add
loop
shrb
jno
ss
pop
fdivr
mov
sub
std
adc
mov
mov
xchg
scas
cmpsb
in
mov
push
inc
inc
sub
pop
sbb
test
and
loopne
add
sbb
ret
popa
push
std
jp
fcompl
fwait
outsb
lea
mov
add
push
cli
jg
aam
test
inc
xchg
and
imul
pop
jecxz
or
push
cmpl
or
sbb
je
shll
daa
dec
pushf
cmp
mov
mov
pusha
test
push
pop
xchg
and
or
xor
stos
push
nop
mov
std
jo
pushf
arpl
fcomps
push
jb
cli
mov
mov
push
and
xchg
cmp
test
xchg
stos
setno
sbb
xor
mov
sahf
daa
sbb
std
xor
dec
cld
call
jo
loop
jg
sbb
mov
lock
jb
hlt
pushf
fnsave
push
jnp
test
xchg
inc
pop
rcrb
push
scas
mov
and
out
mov
push
pop
loopne
jmp
cmp
call
jmp
sbb
or
stc
add
cmp
cmpsb
jns
ret
and
int3
mov
dec
cmpsb
xor
xlat
pop
and
sbb
push
mov
mov
inc
or
test
bound
lret
aas
adc
rcll
pop
stos
mov
insl
rcr
inc
xchg
scas
pop
jecxz
nop
and
movsl
sub
and
pop
adc
test
andl
inc
mov
pop
clc
fwait
xor
popa
das
lahf
pop
cltd
sub
jl
inc
adc
cmpsb
fucom
cmpsb
xchg
or
pusha
pop
jecxz
pop
xchg
out
mov
test
push
dec
xlat
ss
aas
leave
adc
fsubp
int3
jnp
cmp
je
mov
pop
aad
push
das
mov
jmp
frstor
push
lods
movsl
mov
cld
dec
fdivl
pop
lret
ret
cli
jns
rorl
in
mov
pop
filds
mov
enter
xlat
out
shr
std
repnz
jne
and
lea
cmp
stc
adc
push
and
mov
jnp
xchg
nop
sub
sub
out
loopne
scas
out
push
and
test
jnp
test
cld
adc
push
mov
xor
mov
sahf
popa
inc
mov
lods
cmc
xor
out
inc
dec
xor
dec
shlb
xchg
xchg
jno
loopne
es
xchg
adcl
shrl
push
adc
aad
jae
stc
mov
mov
mov
and
cmc
inc
mov
push
rcrl
push
dec
sbb
sbb
ficomps
adc
test
xor
push
jl
cmp
loopne
pop
jge
stos
shrl
ret
push
nop
cmp
mov
dec
or
stc
repnz
mov
js
inc
push
adc
int3
stos
scas
aaa
push
mov
and
lods
mov
cmp
pop
jge
adc
cmpsb
adc
cmp
and
daa
ret
shll
add
in
xchg
pop
aam
inc
or
pop
lret
jb
fcoml
mov
mov
mov
xchg
clc
movsb
dec
out
mov
sub
sbbb
je
or
in
fdivrl
push
sbb
dec
out
xchg
dec
xchg
mov
add
and
sbb
inc
int
int
fcoms
into
loop
pusha
test
and
stos
mov
push
ret
lods
pop
mov
je
mov
lea
add
add
inc
push
adc
ss
fcom
inc
lret
rorb
mov
lcall
pmuludq
cmc
inc
sbb
mov
adc
je
lods
insb
and
push
mov
test
push
sti
mov
xor
push
dec
sbb
push
nop
jbe
out
int
pop
pop
popa
sbbl
push
lods
pop
jg
shll
insb
out
push
adc
in
adc
pusha
and
enter
sahf
pop
pop
sub
repz
push
dec
push
fsubrl
fwait
pop
cmpsl
or
cli
daa
push
call
pop
std
xchg
and
lods
scas
mov
cmpsl
dec
pop
pushl
test
and
add
adc
xor
mov
pop
jb
pop
jne
fisubrl
mov
pushf
cmp
and
js
inc
addl
or
adc
mov
sbb
mov
pop
mov
popa
dec
stos
cmp
dec
push
sub
insl
push
jg
hlt
pop
adc
xchg
lods
fisubrl
xchg
rolb
cmp
loope
xchg
cmpsb
addl
jp
cmp
pop
adc
outsl
push
push
xor
dec
or
pop
loope
add
and
scas
cmp
icebp
pop
adc
cmp
imul
andl
xchg
adc
rcrb
divl
scas
and
xchg
push
mov
pop
mov
jge
outsl
das
sub
test
sub
lret
stos
das
cmc
jp
in
sbb
mov
into
push
push
push
mov
xchg
add
or
insb
insb
dec
ja
push
dec
lods
faddp
test
mov
daa
mov
mov
or
out
pop
adc
out
repnz
insl
clc
xchg
mov
std
inc
lods
sbb
or
adc
sbb
fs
xor
inc
xlat
cmpsl
lock
jl
xlat
sub
pop
loope
adc
lahf
jge
pusha
or
das
xchg
mov
and
pop
pop
mov
mov
add
loop
adc
mov
repnz
push
jecxz
mov
add
shl
cmpsl
dec
cmp
adc
aas
mov
jns
psrad
addb
addr16
push
ret
or
out
sub
insb
shrl
dec
ja
shrl
hlt
sti
jno
xor
or
adc
fs
arpl
and
test
pop
pop
ficoml
cmc
bound
sbb
or
or
cld
cltd
jo
ja
mov
sbb
nop
sbb
shll
imul
mov
es
jno
add
xchg
mov
sbb
popf
or
pop
es
repz
repnz
imul
mov
movsl
pop
pusha
insl
movsb
ss
mov
stos
jb
sbb
aas
mov
or
stos
mov
mov
sbb
sar
mov
stc
adc
mov
nop
cmp
adc
sbb
addr16
mov
cmp
dec
inc
xchg
adc
or
mov
imul
dec
xor
jo
gs
cmp
sbb
out
mov
pushf
and
stos
lds
lea
outsl
movsl
sub
out
adc
mov
adc
pop
mov
ds
lea
inc
jo
dec
movb
das
pushf
stos
push
sti
mov
jae
sub
cltd
aaa
dec
push
pop
push
mov
std
cltd
fcoml
xor
adc
addr16
pop
cmpsb
mov
mov
inc
aad
adc
lret
movl
push
movsb
cmp
arpl
bound
adc
ret
fst
pop
fisubs
add
fs
push
out
push
adc
sarb
test
inc
jle
inc
fst
aas
mov
je
in
pop
dec
sub
shl
popa
loope
cmpsl
mov
iret
aam
pop
adc
addb
cs
movsb
pop
adc
push
imul
stos
add
daa
pop
std
cmp
add
xchg
ret
jno
cmpsb
inc
lods
jae
dec
push
jns
hlt
aaa
sub
mov
inc
js
loopne
pop
or
xchg
push
clc
lcall
jle
sbb
adc
jg
add
xchg
mov
push
ret
cmp
cmp
test
jge
neg
push
lret
push
es
inc
xor
push
test
xor
out
add
sub
mov
enter
out
mov
or
pop
adc
adc
subb
cmp
addl
les
xlat
pop
pop
sub
dec
xchg
das
lret
lods
iret
sti
xor
inc
call
in
movl
cmpsl
fldt
fidivs
cmp
in
xor
inc
or
or
pushf
pop
push
movsl
add
sbb
xor
je
jl
cmpsb
or
mov
imul
fs
push
ss
mov
adc
das
xor
dec
sbb
xchg
pop
and
shll
sahf
out
stos
push
cmp
cmp
mov
cwtl
enter
mov
clc
repnz
stc
push
add
adc
add
fcompl
ds
cld
xchg
mov
push
and
cmp
and
pop
cmc
xchg
add
xchg
mov
cmp
sub
cld
aas
mov
push
loope
imul
shlb
ljmp
sbb
mov
fsubrl
ret
stos
in
xor
push
and
inc
push
adc
add
movsb
add
mov
enter
cmp
fs
jnp
rorb
adc
lret
cltd
sbb
add
pop
sub
outsb
fdivs
test
cmp
lret
cltd
mov
das
inc
lret
imul
sbb
mov
mov
cmp
push
shrb
mov
cmp
sbb
dec
mov
and
mov
daa
or
sub
mov
cwtl
and
fidivrs
insb
aad
loopne
sub
ljmp
fldcw
cmp
test
xor
clc
ret
loope
rorb
je
xchg
adc
ja
adc
add
int
icebp
jl
mov
pushl
repnz
cmp
dec
dec
pop
fcoml
jnp
dec
jp
jo
aas
sub
sbb
stos
mov
mov
stos
pop
mov
xchg
movsl
sub
testl
sub
sub
and
ss
in
and
sub
ret
mov
sbbb
push
add
jns
jge
mov
mov
pop
cmp
sub
inc
lea
sti
push
pusha
lret
int
mov
or
inc
test
jecxz
xor
pusha
xchg
mov
pop
dec
pop
fildll
push
adc
aam
lods
pop
out
push
inc
test
daa
xchg
sub
mov
inc
faddl
mov
mov
push
imul
pop
cmp
xlat
mov
aam
lcall
lock
mov
imul
or
fsts
mov
sbb
enter
mov
sub
movsl
push
add
push
pop
in
push
inc
out
mov
pop
xchg
fcmovb
mov
mov
push
push
or
icebp
ljmp
js
add
jbe
mov
pushf
cmp
lea
addb
dec
popf
or
iret
add
jne
scas
pop
loope
popf
fcomps
in
nop
sbb
mov
adc
lods
push
movsb
cmp
mov
fsubr
mov
lods
sbb
pop
int3
leave
inc
mov
pushf
xor
sbb
stos
dec
push
sbb
fbstp
outsl
push
dec
or
jb
outsl
or
pop
pop
inc
cmp
and
sub
pop
addr16
out
pop
test
adc
mov
add
inc
mov
and
jecxz
push
mov
lea
jns
std
pop
ret
xlat
das
push
clc
rcrb
lea
pop
gs
mov
aad
sbb
outsb
push
dec
or
call
je
outsb
pop
mov
push
pop
cmp
and
mov
add
fnstsw
leave
loopne
stos
push
pop
jge
fnsave
sub
mov
jecxz
cli
sti
clc
jne
fwait
loopne
dec
mov
xchg
cmpb
mov
pop
inc
pop
hlt
enter
pop
dec
push
mov
dec
lock
push
push
sub
push
push
ds
cwtl
mov
fisubl
inc
inc
in
clc
adc
arpl
popf
enter
lods
inc
mov
js
imul
inc
mov
sbb
mov
ljmp
or
mov
xchg
dec
mov
dec
mov
or
loopne
xchg
lods
stos
shll
jg
mov
mov
cmp
dec
push
adc
pushf
inc
push
sub
scas
and
pop
jb
cmp
jg
adc
into
pop
or
xchg
adc
pop
stc
adcl
or
xor
adc
cmp
repnz
adc
or
notb
cmpsb
shlb
pop
mov
lods
lea
or
leave
in
lret
or
push
ret
enter
sbb
fstl
cmp
shlb
jp
pop
ja
jno
ret
pop
xchg
inc
shrb
test
aas
pop
fbld
sbb
arpl
mov
out
adc
pop
cmp
scas
insl
cmpsl
pop
fnsave
mov
sti
jne
jae
add
and
jne
stos
call
push
popa
push
ja
jmp
adc
clc
mov
testl
ret
mov
scas
cli
ss
insb
dec
lret
f2xm1
and
fistpll
sbb
xchg
and
iret
push
push
push
aad
outsl
ljmp
imul
leave
imul
scas
pushf
and
scas
dec
push
scas
dec
dec
mov
mov
lock
loope
ljmp
or
sarb
dec
mov
test
and
dec
adcl
add
fadd
mov
or
notl
sbb
lahf
das
fwait
out
inc
stc
xchg
ret
sbb
mov
push
ret
scas
xor
inc
test
jle
fimull
pop
lds
inc
fst
adc
sbb
test
xchg
stos
in
test
loope
popf
mov
in
sahf
push
pusha
pop
sub
push
aad
mov
lret
jo
mov
adc
dec
cmpsl
cmpsb
mov
sbb
mov
pop
mov
stos
das
mov
ret
dec
push
mov
mov
pushf
mov
outsl
mov
mov
jb,pt
and
xchg
movsb
dec
xchg
xor
enter
mov
aam
stos
or
sbb
std
mov
push
movsb
cmp
push
std
jbe
in
popa
or
push
pusha
pop
sub
shrl
std
jge
jl
and
add
adc
shrl
lds
pop
pop
jae
pop
mov
popa
push
repz
mov
cs
pushf
cmp
add
inc
cmp
push
adc
push
addr16
lods
fcomps
mov
cmp
lcall
cmp
xorl
je
mov
scas
mov
scas
cmpsb
xchg
scas
movsl
loope
push
es
mov
xor
lret
int
pop
mov
push
jno
pop
lods
pop
mov
cmpb
mov
mov
popf
cmp
mov
cli
and
leave
pop
sahf
movl
lea
pop
call
cmp
mov
push
xor
fstl
sub
daa
adc
mov
shlb
push
dec
dec
pop
jns
gs
and
add
out
mov
jecxz
insl
xchg
cmp
ljmp
dec
or
dec
sbb
push
rolb
cmp
rcll
lahf
dec
ljmp
pusha
dec
inc
inc
add
jmp
fwait
imul
mov
sub
adc
add
rcrb
push
push
mov
cmp
ja
xor
cwtl
das
xor
push
insb
mov
aad
int3
xor
inc
aam
push
adc
or
dec
xchg
decl
out
stc
mov
test
inc
xor
lret
sub
and
es
xchg
jp
adc
repnz
xor
gs
dec
inc
test
xchg
sub
pop
stos
das
dec
test
jecxz
in
sbb
stc
xlat
jb
jecxz
mov
dec
outsl
stos
mov
jo
cs
fidivrs
push
mov
testb
sahf
sub
mov
pop
add
adc
push
mov
or
sbbb
dec
int3
push
xor
int3
mov
xchg
aam
sbb
sub
inc
std
or
sub
hlt
andb
pop
pop
pop
pop
lahf
fsubr
dec
xor
cli
enter
addr16
pop
dec
mov
mov
or
push
inc
pop
popl
xchg
and
fs
push
inc
add
xchg
push
roll
inc
jns
cwtl
rcr
js
in
adc
out
dec
lcall
in
mov
roll
jno
test
das
fdivl
pop
and
sub
pusha
ror
call
lret
push
icebp
jmp
xorl
cld
std
and
or
rorl
fstl
int
rorl
int
dec
aaa
enter
mov
lret
push
loopne
std
out
shrl
pop
cmp
int3
jae
jp
add
jno
aam
adc
sub
pop
push
data16
adc
pop
jl
in
mov
in
or
sbb
sub
sbb
mov
loopne
pop
jg
inc
add
sti
rcll
movsl
repnz
xchg
adc
cmp
lds
movsb
sub
leave
cwtl
push
fimuls
lret
jo
in
xchg
in
mov
mov
mov
aam
pop
xor
fadd
gs
xchg
add
push
mov
ret
aam
mov
pop
ja
dec
xchg
aas
mov
add
arpl
stc
mov
sar
je
mov
jge
cmp
jb
mov
lods
rolb
movb
and
sti
mov
pop
push
dec
jbe
clc
rcrb
sahf
cmpsb
out
and
stos
mov
xor
sbb
pop
ret
push
add
cli
ret
push
dec
out
movsl
mov
mov
repz
ja
jne
ret
outsb
inc
movsb
dec
out
cmpsb
inc
sbb
pop
or
fildll
cli
cmc
sahf
outsb
inc
xchg
push
lock
inc
ret
pop
mov
mov
push
push
xlat
pushl
cmc
pusha
and
pop
jb
test
xor
push
adc
adc
mov
outsl
jmp
ret
mov
or
cmp
cmp
outsl
lea
jg
addb
dec
jb
imul
push
ret
xorl
mov
icebp
and
stos
push
push
cmc
lock
or
data16
sub
ljmp
pushf
cmp
sub
push
adc
roll
stos
mov
mov
andb
rorb
stc
lcall
pop
aam
pop
rcrl
dec
in
push
in
pop
loop
inc
inc
push
jle
fnsave
push
addr16
pop
or
stos
sub
repz
in
scas
add
shll
mov
and
cli
xor
dec
mov
mov
loop
dec
cmp
mov
mov
xchg
lock
mov
loopne
fsts
scas
inc
cwtl
call
lahf
sbb
movsl
lods
xor
jnp
mov
dec
xchg
dec
out
js
and
xlat
stos
or
sub
les
sbb
dec
cwtl
fisubrl
mov
cmp
cld
iret
bound
adc
rorb
dec
xor
jmp
movsl
mov
and
mov
xor
loope
sbb
jg
call
movsl
and
mov
std
lahf
mov
cmp
dec
add
jno
fiaddl
das
lahf
addl
int3
add
jno
mov
xor
mov
lret
jnp
jp
ja
add
jb
and
inc
aas
jne
or
fcoml
push
lds
sub
cmp
fdivrl
jmp
and
dec
jmp
jmp
fisubl
jbe
xchg
and
xchg
sub
les
or
fistpll
imulb
lods
jns
cmpsl
dec
test
dec
outsl
lods
mov
pop
mov
aam
loop
into
dec
gs
push
lret
popf
shrb
test
mov
and
inc
mov
dec
sar
cmpsb
adc
inc
scas
adc
pop
mov
aam
adc
test
adc
icebp
inc
sbb
or
jle
jns
and
pop
fwait
mov
xchg
clc
inc
mov
cli
xor
roll
rorb
sub
pop
jl
mov
cli
xor
inc
popf
popf
arpl
sub
cltd
sbb
sbb
leave
push
shlb
movsl
aaa
lock
insl
jge
sbb
inc
test
cld
adc
mov
mov
imul
sub
adcl
clc
das
mov
insb
cwtl
mov
gs
mov
in
add
lea
push
imul
or
pop
outsl
popw
in
imul
mov
cmpl
mov
xorb
and
sbb
je
dec
sbb
clc
fbld
adc
ja
cmc
and
out
adc
xchg
and
xchg
mov
inc
add
adc
mov
xor
and
leave
jns
insl
pop
scas
mov
cmp
dec
loop
std
xchg
test
pushf
dec
push
lahf
insl
pop
or
shl
mov
inc
inc
std
push
jno
sahf
jbe
xchg
push
lods
and
imul
icebp
and
addl
sahf
jbe
sub
out
cmpsl
jno
mov
mov
mov
xor
imul
or
dec
xchg
push
repz
test
jg
mov
cli
and
or
jmp
inc
je
pop
cmp
es
sub
mov
sbb
sbb
dec
cld
cli
xchg
mov
call
out
imul
mov
jle
mov
loop
mov
xor
cltd
test
push
pop
movsb
push
cmpsl
dec
pushf
lock
enter
rcll
mov
adcl
sub
out
lcall
mov
xor
mov
push
sbb
dec
xor
jne
push
dec
ljmp
jle
mov
mov
lea
jecxz
aad
push
roll
sub
mov
lret
outsl
sti
pop
inc
aad
leave
mov
repz
test
mov
push
adcb
daa
hlt
pcmpgtd
adc
ret
or
popl
xchg
ror
push
mov
mov
in
daa
cltd
dec
inc
add
xchg
mov
push
or
mov
push
mov
push
loop
sub
das
lret
inc
lret
mov
inc
bound
rcr
mov
ljmp
push
xchg
hlt
xchg
sub
lret
add
out
push
int3
mov
in
stc
jnp
repz
pop
xor
jmp
or
inc
cwtl
pushf
mov
orb
icebp
nop
sub
adc
push
ficoml
push
or
push
or
cmp
test
mov
dec
imul
mov
push
aam
cs
mov
inc
popf
adc
cmp
xor
adc
jne
test
adc
push
data16
insb
xchg
mov
adc
pop
test
mov
stc
inc
mov
mov
mov
cmpsb
leave
popw
and
and
xorb
mov
stos
pop
mov
pusha
sub
inc
jmp
push
fisttpl
sarl
mov
mov
jge
or
les
lret
loopne
stos
and
cmp
xchg
xor
push
mov
outsb
mov
ja
in
int3
sti
in
rcr
lods
aad
outsb
push
mov
mov
fists
mov
es
push
adc
cmovns
push
out
xor
fstl
mov
test
mov
jo
push
jb
mov
mov
or
les
mov
xor
mov
jnp
in
daa
xor
addr16
mov
sub
inc
xchg
out
mov
push
das
into
add
push
notl
xor
mov
adc
sahf
inc
rclb
shll
add
cmp
or
ficoms
mov
fcmovnb
and
rorb
inc
insl
int
sub
cwtl
cmp
jmp
mov
push
adc
dec
aam
lds
shr
inc
rcll
or
pop
call
mov
inc
aad
adc
pushl
jg
ret
out
pop
movsb
dec
out
pop
cmpsb
loopne
push
subb
pop
sub
inc
popf
and
add
sarl
cmpsl
imulb
or
push
scas
sbb
add
lods
or
in
sub
aam
cs
insl
push
repz
lods
rolb
int
sbb
adc
push
or
push
ljmp
push
mov
sbb
push
adc
ret
insb
adc
inc
or
push
and
addr16
hlt
sub
loopne
push
loope
mov
icebp
xorl
push
std
jo
ljmp
and
test
inc
inc
mov
mov
adc
add
add
leave
lods
out
push
adc
fwait
mov
pop
pop
jle
in
pop
mov
xchg
outsl
sbb
xchg
or
mov
cmc
pop
std
stos
insb
push
movsb
xor
lahf
push
cmp
jmp
outsl
ffreep
inc
adc
test
test
in
mov
aam
lcall
mov
pushl
jg
aam
movsl
mov
lcall
pop
fcom
push
sarb
push
js
out
jg
add
xor
pop
fsubrs
inc
push
adc
pop
int
aaa
in
dec
cmc
faddl
push
push
mov
pushf
outsb
mov
lods
adcb
mov
mov
xchg
pop
pop
call
mov
xor
scas
daa
dec
call
inc
call
xchg
lret
add
mov
dec
ja
es
mov
fnstenv
and
and
scas
push
inc
icebp
and
push
cmpsl
pop
and
mov
fdivrs
and
cmp
mov
aam
stos
ret
lcall
sub
inc
jg
mov
jmp
daa
sub
mov
push
cmp
fldl
xchg
addr16
add
roll
je
xlat
jne
in
aas
inc
scas
cvtdq2ps
int
xchg
frstor
in
dec
addr16
subl
imul
dec
add
ja
test
addr16
adc
push
shrb
jae
subb
popf
mov
test
add
sbb
mov
enter
pop
inc
push
sbb
nopl
loope
pop
adc
jo
movsl
mov
jecxz
into
xor
fisubs
les
shlb
sub
jbe
adc
sub
fs
insb
cmpsl
xchg
stos
scas
and
cwtl
inc
leave
cwtl
inc
mov
fdivrs
ss
test
in
push
adc
lods
sbb
dec
sbb
aas
movsb
sub
pop
dec
sbb
mov
cmp
sti
adc
or
sbb
fnstenv
pop
cmp
mov
add
mov
sbb
xchg
sub
jmp
test
mov
lods
xor
jno
scas
xchg
pop
and
sub
fisubl
inc
bound
mov
adc
loope
std
sub
mov
cli
or
cmc
dec
mov
pop
add
bound
xor
rcll
fcoms
in
sbb
add
push
pusha
mov
xor
add
gs
adc
mov
push
leave
push
shll
out
mov
jmp
mov
sub
or
lea
push
inc
inc
popf
dec
push
add
mov
es
sub
sub
add
jno
mov
and
mov
aaa
enter
in
out
cmp
mov
push
gs
es
adc
leave
xchg
popa
lcall
push
mov
sbb
test
xchg
std
ss
popf
adc
pop
jp
mov
push
inc
outsl
cmpsb
dec
pushf
cwtl
lock
int
std
cli
pop
inc
mov
out
cmpsb
out
movsl
loope
mov
sti
jns
outsl
fistpll
cli
cmc
pushf
scas
dec
push
movsb
dec
sbb
mov
aam
add
inc
ret
add
inc
orb
jnp
arpl
out
loop
gs
jle
cmpsl
dec
iret
mov
xorb
cmp
loop
jno
push
or
and
xor
cmp
add
leave
std
mov
xor
fwait
sbb
test
cmc
ljmp
daa
mov
push
sbb
lea
aaa
outsl
test
std
jo
xchg
push
pop
scas
das
mov
mov
lods
jecxz
dec
sub
test
pop
shrb
fstl
popf
sub
cli
cmc
pusha
and
jg
xchg
and
dec
sbb
lods
cmpsb
dec
pushf
cmp
jns
or
xchg
cmp
mov
and
into
mov
cltd
dec
in
sub
sbb
lahf
sub
mov
dec
xchg
push
sub
push
lods
rorb
mov
lods
lds
sbb
dec
push
inc
xchg
xchg
and
push
stos
cmp
xor
push
adc
cmp
pop
movsb
in
pop
rclb
mov
je
fcompl
sti
adcb
outsl
cs
push
andb
fcompl
idivl
sti
cs
cmpsl
mov
insl
testl
pop
dec
nop
mov
imul
mov
fidivrl
add
xchg
xlat
push
cmpsl
fucomi
imul
out
pop
ror
dec
adc
rolb
iret
testb
lldt
in
cs
rolb
and
shlb
ror
sbb
lret
stos
pop
sub
sbb
inc
or
sub
in
sub
inc
in
sub
mov
pop
inc
mull
in
xchg
add
ffree
cld
testl
jmp
jno
dec
push
jns
or
rcrl
sub
xchg
mov
jns
xor
je
ret
add
or
mov
iret
jg
and
xchg
xor
push
mov
ljmp
sbb
pop
std
hlt
jmp
mov
push
out
outsb
ljmp
pop
lcall
jnp
pusha
out
pop
aas
jne
or
lods
jne
push
pop
test
leave
adc
jp
sub
push
cmp
sbb
jne
mov
jl
out
adc
push
dec
xchg
push
stc
addr16
sbb
outsl
fmul
into
punpckhdq
cwtl
push
adc
loope
movsb
dec
in
movsl
push
sbb
dec
out
repnz
rcrb
lds
or
xchg
rcr
out
fistl
loop
cmpsb
sub
icebp
cmpsl
pop
jbe
push
jb
addb
add
pop
mov
cmp
push
and
mov
fildl
inc
push
jmp
arpl
add
xor
mov
pop
mov
xchg
add
test
je
cli
ja
sbb
xchg
arpl
mov
stos
popa
repz
cld
push
arpl
add
out
imul
sbb
xor
test
dec
stos
nop
cmp
xchg
loop
icebp
in
loope
pop
mov
mov
sti
js
mov
pop
bound
adc
jb,pt
les
cmp
movl
xchg
je
jg
iret
push
add
xchg
in
mov
adc
push
in
mov
jno
mov
incl
xlat
cwtl
push
insl
loop
in
cs
sbb
das
testl
sub
std
cli
loope
test
movsl
pop
ret
jno
sub
dec
xchg
mov
arpl
lea
mov
adc
test
and
bound
push
test
ret
mov
mov
ljmp
inc
dec
xchg
and
call
stc
mov
sbb
fwait
shrb
in
sub
mov
push
bound
push
push
dec
dec
lret
lds
add
in
or
cwtl
push
adc
sub
ficompl
ret
inc
adc
mov
xor
pop
pop
mov
xchg
aad
outsl
push
push
jno
add
fs
or
outsl
or
dec
xchg
push
repz
xchg
test
push
sub
and
lea
cwtl
sbb
mov
cli
pusha
ljmp
daa
mov
inc
aaa
xchg
sub
cmp
sbb
js
push
jl
orb
inc
inc
push
and
bound
fbld
inc
cmpsb
dec
pushf
mov
or
xchg
hlt
ljmp
lock
xchg
pop
lea
dec
pushf
push
imul
mov
std
ret
add
in
push
xchg
and
push
cmpsl
dec
pushf
mov
test
outsl
fildll
push
xchg
out
pop
lcall
fsubrs
fld
jnp
inc
imul
add
mov
xchg
scas
mov
mov
pop
add
ret
fisttpll
ret
ds
pop
push
dec
xchg
les
mov
repnz
scas
pop
cmp
push
inc
test
shrb
in
push
jo
cs
and
movsl
movsb
outsl
aas
outsl
retw
xchg
jne
hlt
jecxz
andl
rorb
cli
stc
inc
cwtl
das
lret
jge,pt
mov
and
and
loope
mov
test
sub
inc
jle
jle
shlb
fsubl
and
push
adc
push
cwtl
pushf
iret
jno
test
pop
ja,pn
addr16
std
cmp
scas
scas
rcrl
cmpsb
mov
lret
push
in
inc
mov
sahf
xor
mov
push
test
aas
lea
je
das
jbe
lds
pushf
loop
clc
adc
pop
and
lds
mov
adc
or
or
movsb
out
push
je
fs
adc
lock
mov
cmp
addr16
mov
test
jno
push
sub
cld
sti
jle
cmpsl
sub
nop
and
shrl
dec
insb
mov
inc
or
adc
mov
dec
ljmp
jg
mov
pop
iret
daa
scas
clc
stc
cli
ja
cltd
loop
fisttps
rcr
xchg
xor
xlat
jno
mov
loope
push
out
ds
sti
inc
jnp
pusha
push
jno
int
push
adc
pushf
inc
xchg
mov
in
sbb
sub
or
and
out
adc
rcrb
push
andb
jge
lock
rcrl
pop
pop
adc
xor
in
imul
sub
or
jne
and
aas
xchg
repz
loop
loop,pt
aad
jmp
test
cmp
jb
js
xchg
inc
lahf
pop
push
outsb
mov
push
adc
cmp
xor
mov
test
outsb
jns
cmp
xor
test
es
xor
adc
sbb
mov
lock
adc
mov
mov
inc
ret
ds
cmp
push
sahf
adc
dec
outsl
enter
jne
je
mov
jns
pop
int
xchg
pop
rcll
and
mov
add
outsl
lods
or
stc
cmc
sahf
data16
fsubrl
jno
or
and
mov
dec
push
adc
mov
sahf
int3
lock
push
push
jge
add
in
lahf
sbb
xor
xchg
or
repz
in
cltd
jge
loop
pop
jl
jmp
nop
and
mov
xor
jae
sub
stc
mov
jo
inc
les
adc
push
sbb
ds
inc
test
cmpsl
cmp
mov
mov
xchg
adc
in
pushf
fidivrs
inc
sbbl
rcrl
jnp
add
shr
shrl
lods
xor
push
pop
in
xchg
sub
outsl
test
lea
add
add
inc
inc
mov
scas
fidivs
adc
dec
jl
loope
enter
pop
pushf
outsb
cmpsb
push
cmp
pop
out
scas
mov
int3
dec
pushf
or
sbb
mov
cmpsb
adc
cmp
jnp
xor
pop
aas
adcl
or
ljmp
sub
inc
inc
push
and
push
in
dec
test
out
sub
sbb
imulb
jnp
jle
lea
jecxz
popf
stos
push
sar
cwtl
test
in
mov
aad
fldpi
mov
lret
xchg
jmp
xchg
mov
shrl
pop
mov
xor
leave
lock
enter
lcall
pop
push
out
jle
and
pop
into
ja
nop
loop
add
and
inc
mov
or
inc
push
jecxz
xlat
loope
xchg
mov
sub
jmp
iret
adc
cltd
mov
dec
pop
xchg
inc
adc
adc
xchg
mov
sub
or
mov
or
pop
pop
sub
sub
test
int3
jbe
mov
or
shll
adc
mov
inc
sub
rclb
daa
inc
xlat
enter
hlt
sbb
sbb
scas
push
cmpsb
loope
std
roll
int
jo
jbe
pop
push
ss
and
lds
xchg
jae
clc
adc
das
jmp
mov
mov
test
movsl
cmp
movsb
push
cmp
or
out
adc
les
bound
xlat
sub
jae
or
fsubs
repz
sbb
inc
inc
notl
ret
cmpsl
dec
aas
mov
loope
pop
xchg
sub
jecxz
lahf
shr
mov
insb
scas
movb
push
jp
xor
es
rcll
pop
movsl
imul
insb
jg
pop
je
xchg
and
mov
insl
push
push
sub
addr16
shll
hlt
mov
call
sub
pop
pop
inc
or
lret
mov
loop
loope
push
cmc
xor
mov
jne
push
mov
push
and
shlb
lahf
out
lret
cltd
mov
mov
enter
int
add
jl
fnsave
and
lcall
ret
jle
loop
inc
cmc
push
cmp
hlt
push
scas
rol
adc
sub
sbb
js
pop
mov
test
rclb
ret
es
je
inc
imul
cmp
out
imul
push
jmp
loopne
or
dec
dec
xor
lret
es
pop
and
adc
fsts
sub
xor
jbe
sbb
sbb
fistps
mov
or
inc
xor
push
movsl
push
pop
push
dec
push
adc
mov
adc
lock
cmp
popa
pop
lret
jb
mov
inc
into
and
orl
aam
push
or
es
xchg
in
mov
arpl
and
cld
decb
insl
pop
push
xor
xchg
jge
sub
xchg
rorl
cmp
fldl
shlb
jge
dec
xchg
xor
pop
arpl
lea
jl
xor
popl
aam
push
xor
cmp
add
mov
push
sarl
add
std
cli
cmp
dec
xchg
outsb
mov
cmp
sub
data16
push
adc
popa
call
sub
dec
xchg
mov
imul
dec
iret
rol
lea
stos
push
inc
popl
daa
jmp
loopne
jmp
fidivl
push
adc
enter
orb
ret
loope
cmpsb
dec
loopne
scas
xchg
and
add
pop
jl
in
imul
cli
cmc
ljmp
pop
sahf
xchg
and
into
mov
lret
inc
inc
orb
lock
mov
cvttps2pi
mov
out
cmp
addr16
cmc
or
sub
xlat
stc
cmp
cmp
es
push
push
and
mov
movl
sbbb
or
nop
mov
mov
movsb
and
push
hlt
enter
cli
jno
mov
clc
pop
int
mov
xchg
and
repnz
pop
ret
xchg
cmp
cmc
hlt
pop
test
fldenv
mov
ljmp
push
imulb
cltd
jne
jnp
stos
push
cwtl
push
mov
inc
mov
xchg
mov
int3
xor
add
add
inc
loopne
cli
aam
cmpsl
test
ret
cld
adc
popa
mov
imul
dec
mov
dec
nop
out
das
scas
xchg
pop
test
add
imul
push
xchg
jb
pop
lahf
xor
xor
fisttps
adc
filds
sahf
xchg
stos
scas
jnp
xchg
and
push
popa
out
cmp
imulb
dec
int
mov
inc
adc
jnp
jnp
shlb
cmpsl
sbb
in
sbb
sbb
pusha
mov
shr
orl
jne
sub
sbb
and
leave
adc
xor
jmp
leave
pop
js
decl
test
sarl
mov
xchg
and
out
push
lods
pop
cmpsl
mov
sub
push
mov
stc
idiv
data16
cmp
loopne
xchg
es
mov
daa
sahf
mov
aaa
daa
in
imul
repnz
shrl
lcall
and
cmp
mov
sahf
adc
pop
sbbb
ljmp
push
add
stc
pop
lock
imul
bswap
xchg
imul
rorl
jne
mov
subb
sbb
scas
dec
push
mov
js
lds
sbb
xlat
fisubs
loop
sub
cmp
adc
aad
jae
stc
mov
push
jbe
dec
cld
xchg
xchg
push
sub
pop
into
xlat
ds
jo
sti
ret
fwait
es
pushf
cmpsb
push
sbb
lea
or
or
fcomi
add
dec
or
pop
xchg
test
pushf
push
in
popf
xchg
cmp
sub
addr16
mov
pop
aas
int
push
leave
push
pop
pusha
das
imul
arpl
shll
into
aad
jbe
popf
sbb
adc
mov
mov
sahf
pop
xchg
push
ret
jle
repz
mov
dec
mov
mov
loopne
cwtl
lret
gs
pop
sahf
rcr
loopne
pop
or
das
sub
fsubrs
mov
lea
inc
int
je
pop
adcl
scas
xlat
mov
push
inc
andb
pop
mov
cmp
and
out
add
leave
inc
jge
push
das
xchg
jns
lret
dec
sbb
cmpsb
cmp
xchg
stos
mov
lock
mov
imul
lds
xor
inc
cwtl
jo
or
sbb
dec
xchg
lods
mov
aas
test
sub
jp
xchg
into
jns
or
ds
xor
and
sbb
movsl
cmp
mov
bound
inc
aam
inc
mov
sbb
cmp
movsb
ret
out
add
xchg
mov
pop
jge
loopne
aam
dec
hlt
adc
outsl
or
pop
jb
or
xor
pop
jno
pop
and
orl
push
in
mov
add
jbe
sbb
pop
inc
movsb
dec
out
pop
cmpsb
scas
push
icebp
dec
rclb
sub
in
nop
fbstp
adc
jnp
ljmp
push
pop
cmp
rclb
nop
movb
and
mov
int3
leave
inc
mov
xchg
and
jns
sarb
pop
pop
cmp
mov
mov
mov
pop
pop
pusha
pop
rcll
cmp
sbb
or
cmp
arpl
loop
cmp
shl
nop
lods
mov
pop
test
add
es
xor
adc
and
pop
in
mov
cs
fstl
test
inc
dec
bound
push
aad
stc
xor
addr16
test
dec
inc
push
adc
imulb
sub
adc
adc
mov
cmp
inc
sbbl
testb
pusha
lcall
xchg
sbb
cltd
jge
in
cmp
in
sub
loopne
lods
scas
fsts
pop
into
dec
cmp
mov
test
jbe
xchg
dec
stc
roll
rcrl
push
mov
in
lods
push
rcrb
aad
jge
lds
cmp
jmp
mov
and
sub
mov
shl
testb
addr16
lock
repnz
mov
push
fwait
in
xor
in
popl
pusha
sub
sub
in
pop
cld
sub
test
lods
and
mov
je
nop
cmpsb
dec
xchg
in
dec
push
adc
into
jno
jo
lret
xor
enter
push
rolb
fcomps
dec
xchg
push
lock
push
sub
movsl
mov
mov
imul
add
clc
cli
std
pop
lahf
addr16
and
push
stos
xor
scas
frstor
addr16
inc
shlb
gs
or
out
mov
push
push
add
lds
icebp
mov
mov
or
push
stos
jno
mov
pop
or
push
jmp
cmpl
or
shlb
stos
sbb
scas
movsb
repz
std
imul
icebp
or
push
std
fisubrs
nop
out
cmc
movsl
push
sbb
mov
inc
aam
sub
inc
pop
push
popa
inc
or
dec
xor
pop
lds
lret
sub
sub
aas
cmp
jbe
mov
pop
ds
shrb
fs
popf
out
push
or
fsts
inc
fistps
mov
movsb
lret
movsb
sahf
repz
jbe
jne
fdivrl
adc
jecxz
call
rclb
jb
cmpsl
push
inc
push
jae
inc
cmp
mov
inc
notb
ret
push
ljmp
push
rcrl
cmp
or
in
fdivrl
push
xchg
nop
call
cld
xchg
and
fsubrp
negb
mov
and
pop
push
in
das
pop
xlat
test
push
lock
daa
add
aam
arpl
sub
dec
mov
mov
pop
pop
jno
jns
jno
lods
pop
mov
test
sbb
sbb
push
in
jle
aam
cs
mov
dec
xchg
pop
and
pop
mov
pushl
sbb
js
sbb
mov
nop
call
xchg
and
push
jae
push
mov
or
outsl
fists
push
mov
aaa
frstor
adc
roll
sub
and
lea
add
push
cmc
mov
cmp
pop
dec
xchg
and
mov
ljmp
outsb
fistpll
cli
pusha
adc
bound
repnz
push
fcoms
sbb
stos
push
or
cmc
sahf
repz
pop
loopne
bound
imul
in
cmp
push
adc
mov
push
call
jg
cmp
repz
cmp
push
jae
sub
sbb
push
adc
dec
movl
stos
push
shrl
add
insb
shrl
and
xor
pop
jle
xchg
mov
pop
lds
ret
es
xchg
xchg
fidivs
int
test
push
ret
inc
sti
or
mov
mov
fistpll
in
dec
nop
cs
pop
inc
jno
cmp
and
push
adc
movsl
push
frstor
pop
cli
outsl
xorb
or
fdivrl
push
ret
pop
popf
mov
out
loope
outsl
stos
loop
pop
xchg
inc
insl
mull
mov
pop
xor
push
andl
sbb
ret
inc
bound
js
cmp
out
fisttpll
dec
lods
out
das
scas
xchg
pop
test
add
imul
jg
lock
jno
xchg
push
test
mov
sub
insl
push
dec
je
in
pop
xor
std
lods
pop
stc
adc
into
hlt
loope
fimuls
iret
shlb
xchg
jmp
xchg
push
cmpsl
cmpsl
or
pop
sub
cltd
or
mov
sub
inc
shlb
inc
jne
leave
pusha
pop
adc
das
fsubs
inc
out
jge
call
mov
xchg
and
fs
sub
movsb
stos
sbb
js
ja
mov
inc
movsl
sbb
mov
daa
and
add
fsubrl
out
dec
int3
fcmovnb
mov
lods
push
daa
repnz
or
in
roll
daa
adc
addb
stos
pop
sbb
jae
add
adc
dec
add
pop
xchg
int
and
out
xchg
shlb
pop
imul
xor
sub
push
sub
xchg
je
in
loope
fwait
test
mov
mov
mov
mov
cmc
fidivl
cmp
mov
jle
mov
sbb
add
adc
pop
mov
stc
cmp
sub
sbb
push
repnz
mov
pop
nop
decl
adc
gs
in
jbe
cmpsb
sbb
fnsave
mov
push
push
cmpsb
xchg
jle
and
push
test
hlt
pop
adc
sahf
sahf
test
imul
adc
adc
xchg
mov
mov
cltd
mov
mov
jg
adc
popf
xchg
hlt
xchg
or
loope
mov
adc
in
pop
cmp
aas
in
xor
sub
mov
xor
push
adc
or
mov
sbb
cmp
xor
sbb
mov
add
lods
pop
jne
xor
loopne
int
pop
pop
popa
sbbl
push
lods
pop
jg
shll
adc
orl
sahf
test
nop
and
lock
pop
lock
dec
xchg
and
in
inc
jecxz
leave
lods
pop
mov
pop
bound
aaa
sbb
or
cmc
inc
test
cmc
shr
xchg
call
xchg
sub
mov
daa
push
mov
dec
cmp
mov
mov
inc
mov
sub
mov
sub
lea
aaa
js
push
jg
cmp
pop
add
pop
fsubl
in
xchg
add
decb
and
add
xor
stc
cmc
sahf
pop
repz
xchg
mov
sahf
movb
and
mov
addl
pop
sub
mov
cmpl
push
lods
pop
jne
dec
dec
pushf
fistpll
adc
sbb
xchg
and
fcomp
dec
xchg
sub
sti
mov
lcall
sbb
std
cli
xchg
out
sahf
and
push
es
ret
adc
gs
sti
cmc
ljmp
jmp
and
push
lods
test
ss
jge
add
add
xchg
dec
test
fidivl
sub
stos
dec
dec
scas
stc
pop
xchg
insb
fnstsw
clc
notl
aam
es
xchg
push
cmp
sub
push
push
mov
dec
cmc
fstpt
cld
or
push
loopne
fistpll
in
dec
nop
cs
cmc
jecxz
data16
xchg
int
jg
cmc
hlt
push
push
lea
mov
dec
inc
cwtl
pop
stc
inc
jmp
movsl
movsl
xor
divb
adc
adc
lgs
hlt
hlt
xchg
rclb
and
cmp
or
stos
stos
out
jnp,pn
jo
xchg
inc
inc
popa
mov
bound
cmpsl
hlt
stc
jb
fs
sti
pop
hlt
rcll
jnp
jbe
ljmp
lds
imul
pop
sub
jg
dec
mov
call
ljmp
enter
inc
lret
ss
xchg
les
rolb
test
mov
jge
mov
mov
xchg
push
sub
or
jle
or
mov
loope,pt
lret
jnp
popa
sahf
pop
inc
sub
inc
pop
mov
or
mov
sbbb
rolb
pop
lret
icebp
dec
xchg
pop
in
int3
mov
push
lret
aad
std
push
insb
or
dec
xchg
xchg
es
hlt
xchg
les
outsb
mov
push
mov
cli
inc
gs
imul
push
cmp
adc
cmp
notl
dec
fwait
mov
loop
add
rep
sbb
stc
inc
pushf
sub
jmp
mov
cmp
mov
pop
xchg
fwait
and
out
int
pop
xchg
inc
mov
fidivl
mov
ret
sahf
or
jno
xchg
subl
punpcklwd
loopne
adc
loop
test
push
aam
cmc
lret
push
cmp
push
out
xlat
enter
aam
pop
push
or
mov
enter
mov
je
mov
mov
andb
mov
adc
mov
xor
xchg
sahf
sbb
stos
cltd
in
cltd
jno
aas
mov
inc
clc
cmp
cld
jg
mov
psubusw
rorb
mov
rolb
stos
pop
stos
and
lea
xor
mov
leave
pop
inc
ret
je
pop
mov
mov
xorl
push
imul
mov
cli
xchg
out
push
cli
xchg
and
pop
dec
pop
pop
les
int
std
ret
dec
jmp
dec
xchg
push
mov
sub
int
pop
clc
sub
jnp
mov
cli
cmc
std
lods
repnz
movsb
dec
fdivrs
xchg
and
cmp
push
adc
in
sti
xchg
and
inc
or
inc
leave
pop
cwtl
cmpsb
jp
movsb
dec
test
repnz
and
lods
pop
mov
jl
jmp
jae
mov
mov
popf
repz
xlat
pop
movsb
in
xchg
pop
cmpsl
fisubs
add
lea
call
sahf
and
xchg
and
out
sbb
xorb
sbb
mov
std
push
loop
inc
test
loopne
sbb
fists
push
je
xor
aaa
sbb
mov
cmc
inc
cmpsb
adc
dec
xchg
push
mov
pop
lds
lret
adc
outsl
ja
cmc
and
cwtl
jmp
push
movsb
pop
fs
xchg
push
cmp
sub
dec
fbstp
mov
stc
cmc
fstl
inc
pop
xor
orb
inc
mov
mov
mov
clc
aaa
outsl
fildll
mov
je
imul
fidivl
dec
jecxz
cmp
or
push
adc
stos
or
push
sub
mov
lock
add
les
idiv
dec
sbb
mov
fistpl
lds
push
cli
jl
pusha
and
mov
inc
fdivrs
out
dec
adc
rcr
xor
cmp
fwait
dec
nop
cs
ret
repz
jp
push
hlt
xchg
fldenv
add
inc
cwtl
pop
or
pop
cmpsb
mov
lock
cmpb
pushf
xchg
std
sarl
pop
hlt
dec
pop
cmpb
pop
ds
jmp
xor
push
adc
push
xlat
mov
cld
inc
dec
ret
lahf
cmp
adc
test
sbbl
out
jb
push
pop
mov
add
sbb
test
mov
cmp
inc
or
xor
mov
rcrl
mov
mov
pop
int
das
push
jp
xor
jg
cwtl
xor
aas
fwait
les
mov
cmp
push
adc
sub
xor
pop
clc
sbb
outsb
jp
lcall
mov
movsb
mov
jnp
rorb
mov
test
subb
and
sbb
aas
cli
hlt
jmp
adc
pop
xlat
dec
xchg
pop
je
and
xchg
mov
dec
mov
inc
movsl
adc
or
sub
xchg
lods
xchg
in
mov
cmc
popf
adc
push
addb
adc
xchg
out
jb
dec
xchg
mov
roll
add
sti
dec
test
mov
inc
pushf
pop
cmp
sbb
insl
cmp
aam
int
pusha
jecxz
bnd
lds
mov
pop
imul
pop
inc
lods
jg
cltd
inc
clc
xchg
cmp
js
sub
in
mov
subb
ret
bound
inc
pop
scas
jmp
xchg
dec
lcall
es
jecxz
cmp
loope
es
add
movsl
fdivrl
or
adc
ss
jae
test
fmull
insb
neg
imull
pop
push
xchg
pushf
cmp
das
hlt
xchg
sti
loope
mov
mov
rcrb
xor
test
xchg
mov
movsb
sub
jmp
xor
gs
ljmp
add
sbb
test
leave
imul
cmp
mov
shll
cmc
int3
std
xchg
push
mov
xchg
and
and
ss
hlt
inc
jbe
dec
pushf
mov
test
outsl
ffreep
inc
lock
mov
xchg
mov
insb
push
clc
fidivrl
push
jae
test
pop
mov
cmp
aam
and
out
xchg
and
in
dec
adcb
scas
pop
ret
adc
push
jle
mov
jge
mov
xchg
aam
push
daa
dec
xchg
pop
and
pop
mov
or
add
add
push
es
xchg
ljmp
int3
mov
jl
jg
jmp
mov
xchg
lock
movsl
std
push
mov
mov
sbb
outsl
enter
decb
push
lods
ret
mov
add
and
sub
dec
js
lods
xor
aaa
outsl
stc
scas
mov
cmc
sahf
loope
popl
test
jno
push
xchg
popf
mov
fs
ds
enter
mov
mov
cmp
popa
in
lods
pop
mov
jmp
psrlw
ljmp
push
xor
fdivs
sub
sub
mov
xor
inc
adcb
pop
or
ret
xchg
movsb
dec
out
mov
xchg
jmp
lds
cmc
or
push
push
pop
inc
mov
nop
and
mov
sbb
jle
mov
dec
push
mov
jae
pushf
addr16
and
mov
xor
sub
pop
hlt
les
or
flds
mov
sti
lcall
fisubs
pop
shl
nop
pop
xor
pop
mov
mov
mov
gs
pop
push
cmc
div
lcall
xlat
loope
insl
pop
icebp
stos
sub
inc
pop
lds
data16
mov
fwait
add
daa
jno
xchg
insl
xor
nop
xor
jecxz
ja
pushf
mov
loopne
aad
jns
and
popa
xorl
add
shll
jb
addr16
and
push
sahf
mov
mov
sbb
je
lods
mov
lds
mov
jp
test
sub
es
stos
dec
jno
dec
je
subb
in
xor
adc
repz
int
xor
jne
mov
cmp
in
cwtl
xor
push
mov
lret
adcb
sbb
roll
fwait
lds
rorl
or
imul
lret
in
cmpsl
lret
sub
inc
mov
mov
test
popl
cmpsl
sar
movsb
dec
xchg
mov
jnp
jnp
rorb
pop
iret
and
sbb
push
sub
mov
stc
idiv
das
lret
push
cmpsl
dec
jmp
dec
xchg
fsubl
out
pushf
hlt
mov
dec
mov
jg
adc
push
adcb
daa
shll
dec
xchg
sub
shll
dec
into
shlb
pop
in
inc
pop
movsl
pop
push
shlb
xor
sbb
mov
xchg
pop
pop
ret
sbb
out
arpl
dec
jle
daa
xchg
cmp
dec
stc
mov
dec
cmpsl
and
jl
and
jge
aam
jmp
icebp
je
xor
cmp
push
pusha
dec
pop
outsl
enter
out
mov
ljmp
fs
lea
and
cmp
out
cmp
inc
sub
es
aas
popa
les
in
ljmp
clc
dec
ss
lds
aaa
xchg
dec
andl
test
test
pop
cmp
fs
call
push
adc
dec
pop
jp
push
lea
jge
ljmp
adc
inc
addr16
lea
xchg
std
ret
dec
jmp
dec
xchg
push
clc
imul
mull
cmp
mov
subb
test
sarb
xchg
and
test
inc
adc
lret
dec
call
sahf
inc
xchg
nop
cmp
dec
mov
aam
pop
int
iret
mov
in
cwtl
js
jp
decl
pop
pop
movsb
in
popf
xchg
cmp
push
fsubr
dec
je
cmpsb
sbb
sbb
ljmp
fisttps
and
push
stc
dec
xchg
pop
and
pop
mov
shll
js
outsl
adc
lret
cmc
cwtl
cmpsb
push
movsb
dec
test
daa
and
fisubrl
outsl
test
xchg
sbb
jo
outsl
inc
mov
rorl
pop
ds
test
mov
imul
push
xor
pop
pushf
outsb
cmpsb
mov
xchg
and
lods
pop
sub
sbb
outsl
push
add
lea
cli
cmc
pushf
pop
stos
inc
and
fadds
out
mov
sti
push
lods
outsl
fistpll
mov
ljmp
sbb
out
push
test
cmpsl
lds
jne
sbb
sbb
popl
cwtl
jne
std
sarb
inc
xchg
xchg
and
fsub
xchg
pop
jl
out
cwtl
test
std
out
add
ret
dec
out
cmpsl
pop
jp
stos
fsubp
xchg
adc
outsb
lods
cld
push
xchg
mov
mov
ds
lods
pop
mov
or
arpl
mov
clc
testl
in
sbb
push
adc
sbb
movsb
sti
imul
inc
mov
push
mov
jecxz
or
xchg
push
push
rolb
mov
roll
mov
mov
fisubs
mov
in
pop
lret
cmpsb
push
mov
xor
insb
test
jl
ds
inc
mov
xchg
das
cld
mov
cmpl
in
sub
test
jne
ret
rorb
arpl
adc
inc
imul
inc
loop
sub
fwait
adc
hlt
sub
pop
adc
ret
and
and
loope
loop
subb
pop
pop
sub
leave
je
repnz
xchg
pop
ljmp
ret
data16
ja
lahf
addl
mov
push
in
jge
mov
lahf
sbb
push
mov
mov
cmp
ljmp
adc
aaa
add
mov
sub
inc
mov
ss
mov
dec
hlt
jmp
mov
push
sub
dec
xchg
pop
sbb
imul
sarl
mov
jb
xchg
out
imul
dec
xor
and
xor
mov
push
popl
les
mov
out
jbe
adc
xchg
push
stos
testl
stos
mov
loopne
push
je
cli
test
outsb
xor
pop
adc
jecxz
pop
xchg
push
sarl
mov
fidivl
call
fidivl
lods
push
xor
ret
ds
sbb
stos
sbb
xchg
pusha
mov
push
ljmp
sub
lea
and
inc
fnstcw
dec
sub
insl
sub
cld
fidivrl
adc
push
inc
jne
cld
jnp
ds
fildl
stos
shrl
sub
inc
mov
push
in
pushf
das
push
shrl
sbb
or
aas
jg
mov
push
pop
gs
adc
popa
sbb
mov
ret
sbb
jb
inc
fst
test
sbb
add
dec
loop
adc
pop
jp
mov
push
inc
jecxz
dec
pushf
cwtl
lock
push
mov
push
mov
sahf
rcr
sbb
dec
xchg
and
fmuls
out
mov
lea
xchg
and
lea
cli
cmc
pushf
pop
stos
inc
fbstp
and
fadds
out
mov
sti
push
lods
outsl
fistpll
add
push
movsb
dec
out
lea
cmpsb
xlat
das
dec
pushf
cmp
popa
test
mov
cli
cmc
cwtl
outsb
andb
mov
add
cs
pop
pop
jl
and
mov
pop
and
outsb
in
ret
dec
jmp
dec
adc
dec
call
test
cmc
ljmp
mov
mov
ds
arpl
lea
clc
sbb
std
mov
ljmp
push
out
adc
shr
lcall
mov
ja
xchg
push
inc
adc
or
loop
lahf
dec
jp
push
call
or
cs
movsb
dec
out
cmpsb
data16
mov
mov
lea
push
std
std
insl
sarl
add
xchg
and
xchg
ljmp
sbb
enter
xchg
lea
xchg
pop
jns
dec
xchg
mov
add
and
pop
cmpsb
pushf
or
ret
mov
lea
or
dec
xchg
pop
pop
ja
insb
fildl
cmp
mov
pop
in
jle
jmp
sbb
call
dec
nop
pop
icebp
xchg
ficompl
cmc
push
scas
cs
mov
xor
dec
mov
jo
out
shrl
fcmovne
xchg
and
cmc
xchg
aam
es
data16
xchg
cmp
push
div
add
shr
test
sub
pushf
and
outsl
xchg
repz
lock
mov
imul
mov
iret
xor
pop
xchg
dec
or
pop
dec
movsl
ja
out
sbbb
idivl
inc
and
rcr
push
lock
faddl
lods
xor
pusha
stos
or
dec
mov
fimuls
add
xor
imul
sbb
xorb
inc
das
push
jg
inc
push
imul
test
int
push
inc
aas
rcrl
daa
data16
cmc
cmp
mov
dec
daa
arpl
fs
sbb
and
mov
pop
in
jne
push
xchg
adc
adc
jnp
inc
mov
mov
cld
push
pop
cld
sub
lods
pop
cmp
xchg
and
out
mov
lods
pop
int3
pop
sub
aas
mov
xlat
ljmp
ficoml
lods
les
sub
mov
lock
xor
pop
or
cli
inc
jo
mov
outsb
mov
pop
shlb
sbb
ret
lcall
mov
push
es
pushf
sub
and
insl
mov
ret
mov
xchg
loop
xchg
pop
std
push
ret
mov
and
inc
movsb
fnsave
mov
enter
sbb
jge
mov
and
ficoms
push
adc
adc
jmp
repnz
je
call
mov
xchg
push
daa
sbb
mov
push
push
mov
imul
xchg
push
in
add
mov
or
push
and
in
jp
pop
loopne
and
sub
out
ja
decb
and
test
jns
xchg
add
and
movsb
clc
dec
movsl
jg
out
mov
gs
leave
adc
dec
loope
lret
es
in
iret
sbb
stc
sub
frstor
mov
leave
push
jecxz,pt
sarb
ficomps
stc
dec
xchg
cmp
push
pop
mov
decb
adc
inc
addb
rcl
lods
out
popa
push
popf
movsl
loopne
push
fiadds
jg
push
shll
aaa
outsl
and
mov
std
sub
movsb
cmp
cs
aaa
stos
add
pusha
cmp
xchg
mov
inc
mov
xchg
ficompl
or
push
insl
inc
sub
inc
push
test
std
cli
cmc
pushf
outsb
pop
es
popa
mov
faddl
ja
arpl
enter
incb
std
adcl
cmp
mov
xor
pop
cmp
nop
mov
adc
and
in
mov
xchg
lods
mov
lea
jg
adc
popa
out
ljmp
into
mov
pop
jno
cmp
pop
ja
outsl
or
cwtl
pop
repnz
pushf
inc
sti
pusha
jno
pop
ss
fidivl
mov
imul
call
sahf
insl
pop
xchg
mov
xchg
insl
cmp
gs
and
push
je
loop
aad
push
pop
call
pop
rclb
push
mov
and
mov
incb
fucomp
push
cmp
xchg
mov
inc
dec
lahf
icebp
and
cltd
and
sti
hlt
xchg
out
pop
pop
js
mov
jmp
pop
fbstp
loope
jno
icebp
int
clc
jge
mov
addr16
xchg
xchg
sub
adc
sbb
lds
mov
add
shrb
inc
int3
jne
mov
aaa
adc
mov
loop
and
dec
push
adc
dec
add
pop
jo
hlt
pop
aaa
adc
jmp
sub
push
test
ss
and
fistps
pop
push
out
loope
pushl
movsl
in
jge
in
inc
xlat
jp
fdivrs
or
pop
jbe
xchg
sub
cmp
mov
mov
sbb
inc
cld
fidivl
outsl
pop
jo
out
das
cmp
push
mov
push
mov
mov
out
sbb
pop
test
testl
ss
out
adc
mov
bnd
xchg
mov
leave
jp
or
and
orl
mov
test
adc
ror
or
xchg
addr16
lea
sbb
dec
adc
addl
xchg
xor
leave
adc
inc
scas
jno
rorb
js
or
popa
sbb
push
lods
xlat
icebp
insl
mov
jecxz
adc
cmp
push
cld
jge
or
fwait
adc
pop
or
and
mov
mov
cmc
stc
mov
adc
jle
repz
sub
popa
mov
in
xchg
and
xchg
out
imul
rol
xchg
mov
lock
popa
add
sbb
cltd
adc
jp
and
aam
in
inc
inc
inc
push
cmp
or
cltd
test
lea
ret
mov
inc
and
add
nop
lods
pop
jg
in
add
xor
pop
into
jno
popa
loop
adc
lods
movl
dec
mov
cltd
add
jnp
rcl
pop
fstpl
push
cmp
into
fisubrs
or
adc
sub
and
jo
ret
cltd
shrl
fcmovnbe
push
ret
pmuludq
ljmp
and
mov
imul
mov
pop
jle
aad
inc
mov
fs
loopne
ss
fprem1
fsubrp
lea
in
das
inc
fsubr
pop
adc
xchg
pusha
jmp
stos
pop
sub
int3
stos
outsl
iret
sbb
call
pop
push
in
jle
mov
pop
jbe
push
pusha
xchg
sub
addr16
int3
mov
outsl
xor
or
std
cli
cmp
scas
xchg
mov
ja
push
clc
sahf
mov
aaa
cs
pushf
cmp
add
inc
mov
ljmp
decb
out
loop
sub
mov
sahf
test
mov
sbbl
arpl
cmp
xchg
js
test
mov
rcr
jle
cwtl
pop
ret
or
push
or
and
push
imul
jge
mov
push
pushf
push
loop
fstpl
ret
cmp
mov
addr16
lea
xchg
lods
inc
lea
daa
or
call
inc
dec
push
adc
stos
dec
pushf
push
sub
xchg
push
das
fucomip
pop
cmp
shl
loopne
mov
cli
sub
stc
mov
addb
aaa
fucomip
inc
pop
mov
clc
sahf
mov
xchg
stc
sub
nop
jmp
dec
dec
push
adc
test
pop
mov
mov
cmp
mov
xchg
out
outsl
mov
ja
sbbl
in
mov
xchg
mov
lds
push
negb
mov
or
jo
mov
mov
dec
dec
fbld
in
movsb
sbb
dec
lcall
and
enter
push
adc
cmp
in
and
das
mov
ljmp
mov
fnstenv
dec
push
adc
ret
scas
mov
dec
adc
rolb
cmp
cwtl
push
icebp
imul
sub
xchg
mov
out
int3
xor
iret
testb
aad
jns
and
jp
sub
adc
pop
sub
lods
mov
fists
jno
sbb
add
inc
jo
scas
jns
sub
jmp
dec
movsl
add
imul
cld
je
jae
test
cmp
enter
xor
xor
jmp
stos
movsl
int3
into
push
add
sbb
mov
xor
push
sub
testb
test
xor
mov
js
mov
ja
jmp
sti
mov
pop
mov
in
sbb
cmpsb
push
mov
adc
cmp
jmp
lret
push
push
cmp
jae
pop
inc
loop
lods
cmpsl
fdivs
jecxz
jp
test
int3
cmc
cld
xchg
cmp
xlat
repnz
xor
dec
xchg
pop
sub
push
scas
or
push
ds
cmpsl
dec
xchg
daa
test
pop
into
xchg
sub
adc
daa
inc
jg
xchg
push
adc
adc
int3
hlt
xchg
and
lods
pop
gs
fiadds
shll
sbbb
sbb
pop
and
xor
mov
pop
sub
and
sbb
iret
fnstcw
cmp
inc
outsb
orl
sarl
add
out
inc
or
xchg
xor
mov
inc
popa
aam
iret
sti
sub
imul
pop
or
jnp
push
sahf
xor
sub
mov
xchg
mov
sti
js
lea
stc
popa
xor
cmp
imul
cld
adc
mov
push
aas
pop
imull
ret
sub
shrl
adc
loopne
mov
mov
jbe
push
jmp
push
pop
jno
push
into
jmp
call
inc
jns
jge
out
shlb
pusha
daa
leave
adc
sub
into
jbe
ljmp
sub
sahf
sbb
call
dec
fistpll
adc
sbb
js
stc
jg
mov
fstpl
pop
dec
xchg
and
cmp
push
sub
push
pop
lds
addr16
lods
sbb
dec
into
std
out
push
movsb
xor
dec
out
shrl
and
mov
mov
xchg
fmuls
pop
loope
gs
adc
dec
adc
inc
fisubrs
test
adc
std
xchg
cmp
lock
mov
sarb
lods
push
lods
pop
movsl
xchg
mov
cmp
adc
cmpb
data16
lock
mov
xchg
and
mov
sbb
ds
std
cli
cmc
and
dec
xchg
mov
test
jecxz
aam
into
sti
mov
stc
popa
test
fistpll
fnstsw
js
loopne
pop
inc
add
pop
jne
fldcw
nop
mov
sbb
in
stos
xchg
push
mov
push
and
test
dec
xchg
and
push
int
idivb
ljmp
sub
sahf
sbb
call
cmp
mov
pop
cmpsb
sub
push
fadds
pop
aas
aas
pusha
and
pushf
lods
dec
pushf
data16
add
pop
or
mov
fcompl
mov
insl
fstpt
sub
cmp
or
push
pop
lahf
in
insl
lods
dec
xchg
push
jns
add
push
lods
popf
xchg
ljmp
dec
jge
pop
call
add
mov
daa
dec
jmp
mov
push
or
mov
inc
enter
add
test
jl
mov
mov
mov
mov
mov
out
jmp
mov
cld
cmp
lea
pop
mov
push
sti
cmp
les
push
fsin
rol
push
call
and
mov
adc
jge
loope
inc
notl
and
cmp
push
lods
out
push
xor
mov
rolb
pop
fldcw
pop
adc
push
stos
jecxz
sti
je
mov
icebp
pop
test
or
adc
or
imull
push
dec
dec
inc
jne
xchg
cmp
pcmpgtw
ljmp
sub
mov
std
loopne
mov
lret
jnp
xchg
movsl
ret
in
sbb
and
pusha
dec
inc
sub
or
mov
xchg
inc
iret
adc
sub
dec
cli
jecxz
and
inc
or
cltd
fs
inc
push
xor
ret
aaa
lods
leave
fucomip
push
adc
imul
fmull
push
jge
inc
or
or
andl
cmp
out
adc
push
sbbb
cmpsb
dec
xchg
push
ja
adc
gs
insl
xchg
aad
adc
inc
out
repz
sti
cwtl
jecxz
cwtl
and
out
out
ss
fmull
mov
sqrtps
push
push
lcall
push
mov
fistpll
inc
std
lea
ljmp
mov
popa
jnp
sbb
pop
sbb
adc
nop
imul
cmp
jb
xchg
cmp
jle
pop
es
jbe
xchg
imulb
xchg
imull
jo
lahf
dec
xchg
or
adc
lea
sub
and
jo
mov
cmp
dec
sub
mov
cmp
int3
jecxz
push
test
mov
cmp
sbb
sbb
and
cli
jle
push
sub
mov
push
fwait
mov
in
int3
push
inc
les
out
sub
push
jnp
mov
cmpsb
lret
leave
cmp
jbe
and
xor
and
clc
cmp
pop
push
popa
inc
fcomip
aas
xor
aas
xor
sahf
lods
test
fsubrp
ret
mov
enter
lock
std
std
push
xchg
nop
call
rcll
and
sub
hlt
mov
mov
push
xchg
mov
push
sti
popa
mov
sub
ljmp
jl
mov
xchg
aad
cmpsl
dec
test
xchg
and
pop
mov
stc
and
aam
ficomps
mov
or
mov
xor
daa
xor
or
mov
rolb
adc
add
daa
add
stos
aas
imul
push
rep
pop
in
inc
or
sub
lds
mov
push
cmp
adc
mov
lock
test
negb
and
push
inc
push
mov
call
jl
or
pop
std
in
scas
push
movsb
pop
outsl
call
jmp
xchg
insl
fistpll
adc
popf
call
fidivl
cmpsl
sbb
dec
popaw
ds
lret
dec
call
inc
ret
cmp
cmp
cmp
fsubrl
pop
call
insl
std
std
xchg
add
dec
push
adc
fnstenv
pop
pop
pop
mov
fwait
stos
xor
cmc
adcl
fcoms
pop
lea
lret
sub
lods
and
mov
or
out
out
add
dec
xchg
pop
jno
loopne
jnp
pop
cmp
loope
xchg
test
adc
jae
pop
scas
pop
mov
cmpb
and
push
adc
hlt
or
push
cld
lea
out
lods
push
insl
push
and
lods
push
sti
jo
dec
outsb
gs
xchg
mov
adcl
sbb
mov
inc
sarb
pop
les
jmp
sub
pop
cmc
or
iret
cmp
push
or
and
hlt
sarl
cmp
adc
shrb
adc
aaa
sti
leave
movsl
push
fisubl
pop
xor
push
adc
out
add
mov
cmc
add
jle
push
xchg
cmpsl
dec
in
mov
pop
pushf
in
fpatan
add
inc
sbbl
divb
addr16
mov
add
adc
add
out
in
jge
adc
imul
das
out
push
fwait
ret
pop
push
dec
fabs
add
ljmp
push
ss
cmp
adc
mov
and
mov
mov
jno
lahf
pop
pop
movb
xor
insb
cmpb
pop
in
and
cs
mov
insb
or
pop
pop
les
xor
es
loop
inc
push
xchg
mov
jl
pusha
subb
inc
mov
jbe
fwait
push
push
and
inc
out
mov
andl
test
adc
add
out
sbb
in
adc
mov
ljmp
imul
dec
push
adc
mov
dec
popf
dec
aas
leave
aam
stos
and
decl
adcb
test
es
ret
pop
bound
xchg
xlat
mov
jp
adc
dec
xchg
hlt
imul
sbb
add
xor
xor
dec
push
pop
lcall
in
dec
leave
int
es
aam
call
sbb
aad
pop
insl
stc
push
pop
inc
pop
jo
and
hlt
scas
xchg
xchg
mov
sub
push
in
imul
dec
push
adc
dec
cwtl
add
pop
adc
pop
leave
mov
jo
add
and
stc
cmp
add
adcl
push
fstp
add
pop
adc
pushf
mov
push
dec
movb
shl
sub
xor
adc
addb
push
cmpsl
int
xor
mov
movb
sub
mov
add
mov
icebp
and
adc
add
cli
pushf
outsb
xchg
inc
lret
fcmovnu
imul
cmp
or
movsl
xor
add
sub
gs
shl
aad
repz
stos
pop
in
scas
sub
xchg
mov
jg
addb
dec
mov
pop
scas
stos
push
mov
push
out
pop
adc
cmpsb
shlb
jae
dec
push
sub
inc
jne
add
lods
pop
mov
xor
pop
enter
lock
mov
jae
dec
push
sub
inc
jne
add
scas
pop
mov
xor
pop
cmp
or
lock
xchg
daa
jae
dec
push
sub
inc
jne
add
scas
pop
mov
xor
xchg
and
sub
pop
adc
pmullw
test
jo
xchg
in
pop
push
imul
xor
xchg
sub
mov
adc
add
pop
pop
cs
mov
sahf
pushw
push
cltd
lods
pop
mov
xor
xor
pop
adc
push
mov
daa
shrl
mov
lahf
gs
aam
push
dec
inc
arpl
mov
or
push
jmp
push
adc
xor
lods
nop
js
cmpsb
dec
popf
rcrl
inc
ljmp
jbe
scas
pop
aaa
stos
aad
scas
lods
mov
loopne
nop
cmp
and
fstpt
sub
pop
adc
bound
shll
fs
pop
jns
loope
lcall
or
in
pop
adc
sarb
shlb
cltd
fmuls
cmc
outsb
aaa
cltd
push
and
xchg
out
loope
push
dec
rcrl
or
adc
xchg
cmp
mov
dec
es
sub
sub
jp
cwtl
sub
lret
popf
jp
in
sbb
repz
xchg
adc
dec
pop
inc
jnp
cmc
sbb
loope
push
je
or
scas
jmp
add
imul
das
and
out
gs
testb
xor
sbb
mov
mov
or
xorb
cmp
pop
fsubs
aad
out
cmp
or
movsl
mov
or
rolb
lcall
jns
in
pop
fdivrl
test
je
push
or
leave
push
popf
add
add
xchg
ljmp
repnz
inc
std
pop
mov
push
jne
in
sti
pop
adc
jmp
inc
pop
or
rcrb
mov
jg
xor
daa
je
ds
leave
push
pop
inc
and
add
cmp
and
cmp
pop
mov
dec
jo
or
leave
dec
lock
sbb
pushf
push
cmc
lahf
sub
pushf
push
sub
adc
cmp
shlb
out
neg
in
xor
and
dec
and
pop
xchg
sarb
faddl
or
inc
xchg
and
pop
addr16
daa
jecxz
lods
fwait
mov
shll
inc
jg
add
or
jl
xor
sbb
sbb
dec
out
dec
xchg
xchg
jne
in
enter
add
adc
ja
mov
inc
fdivs
fstps
iret
inc
sbb
xor
fidivrs
push
mov
cld
aad
fwait
jno
mov
adc
inc
jl
push
aad
push
std
push
rcrl
pop
in
xlat
js
adc
or
xor
stos
add
daa
jle
sbb
push
repz
pop
sub
in
lea
and
sarl
cli
jg
in
adc
out
push
jge
mov
push
xor
fyl2x
mov
xor
enter
decb
push
movsb
cmp
adc
loopne
mov
vhsubps
movsb
xor
mov
mov
mov
mov
xor
shlb
int
mov
mov
cli
cmc
pushf
outsb
lcall
xchg
lods
pop
mov
insb
repnz
sbb
add
sub
push
mov
xchg
and
scas
pop
cmpsl
idivl
jb
inc
sbb
jmp
aam
popa
sarb
and
test
test
rorb
or
cmc
pushf
outsb
lcall
loopne
dec
xchg
sub
fdivs
inc
xchg
push
mov
push
loop
shrl
aam
or
mov
xlat
pop
fisubs
nop
sub
leave
inc
addl
push
aas
adc
sub
loope
mov
repnz
xor
and
call
cs
pop
sub
insl
fistpl
xchg
nop
imul
dec
mov
int
hlt
std
cli
loop
fldt
and
popa
sbb
xchg
sar
add
ss
push
jle
decl
stos
stos
mov
test
xchg
sub
xor
std
mov
mov
negl
out
js
jecxz
in
push
scas
pop
movsb
push
xchg
jl
lock
ret
pop
inc
jg
arpl
in
or
xchg
test
sub
ret
mov
xchg
leave
pop
fsubrs
aaa
pop
cli
lods
push
jmp
test
jnp
sbb
cwtl
pop
mov
gs
mov
mov
shr
incl
lds
nop
push
pop
js
pop
and
mov
repz
and
or
mov
jnp
outsb
fwait
fs
cmc
shlb
push
stc
js
xchg
cmp
mov
imull
inc
push
push
cli
dec
gs
mov
aas
iret
repz
inc
ss
cmp
mov
and
cmpsl
cmp
shrl
xchg
mov
adc
icebp
adc
or
adc
inc
sub
sarb
pop
jne
mov
das
cmp
fisttpll
roll
nop
sbb
mov
cmp
add
pop
ds
stos
mov
mov
sub
insl
push
popf
dec
jl
dec
ljmp
repnz
rolb
fninit
dec
adc
and
pop
or
out
lock
repnz
scas
sbb
mov
cmpsl
and
sahf
pop
or
sub
sahf
out
fildl
out
sub
sub
outsl
sub
insb
xor
repz
pop
fnstenv
loop
arpl
enter
fistpll
loope
cmp
or
xchg
aad
push
adc
popa
loope
mov
add
sub
popf
call
and
dec
adc
fs
adc
decb
iret
paddw
push
stos
pop
cmpsl
fsts
xor
xchg
ficoml
ret
dec
stc
int
pusha
loopne
sub
out
cmc
jae
dec
push
adc
scas
lea
add
bound
cmpb
subl
push
adc
xchg
adc
in
in
adcl
mov
dec
jle
or
lds
jmp
pop
push
xchg
mov
pushf
imul
sbb
mov
enter
or
or
aam
lods
xor
mov
xchg
sub
popf
stc
cmpsl
rol
sbb
dec
push
adc
add
jbe
lock
out
cmp
and
push
sub
dec
aaa
or
nop
and
out
pop
cli
mov
push
pop
dec
sbb
cmp
sub
cmpsl
and
mov
xor
enter
decb
pop
lods
pop
mov
push
sti
popf
push
jb
cmp
scas
cmpsl
dec
push
sti
jbe
and
fistpll
push
cmc
pusha
cmp
rcrl
and
xchg
pop
in
pop
int3
mov
aad
sbb
stc
dec
push
adc
pop
pop
pop
mov
cmp
cmp
test
out
cli
cmc
xchg
dec
stos
lods
sarb
and
and
lods
sub
xchg
mov
stos
mov
out
cli
mov
pop
xchg
cmp
aas
mov
fimuls
popl
sahf
call
sbb
mov
adc
jl
sahf
cmp
cmpsl
jle
add
shlb
frstor
add
add
hlt
cmpsb
test
jb
inc
fisubs
sar
je
mov
jp
call
mov
mov
xchg
mov
sar
and
lds
sbb
cmc
ljmp
lea
in
mov
arpl
lock
sbb
test
pop
repz
insb
push
sub
sbb
in
jae
lods
pop
mov
cmp
sbb
xchg
and
inc
adc
add
out
mov
nop
scas
mov
mov
jo
out
jne
out
shrl
mov
pop
je
cmp
jb
add
xchg
push
clc
sti
xchg
insb
dec
icebp
push
adc
aaa
and
xor
mov
jne
push
xchg
popa
aaa
mov
imul
mov
mov
cmp
pop
je
jno
mov
jle
inc
je
aad
and
cmc
repz
and
sahf
enter
xlat
jb
jo
mov
aas
repz
mov
into
ss
xor
mov
hlt
fistps
add
lret
movsl
inc
fwait
jo
or
popf
adc
ds
adc
inc
mov
xchg
push
adc
in
cmpsl
xchg
jmp
cwtl
or
sbb
fs
mov
aas
decl
out
push
sub
push
fs
xor
out
or
mov
ja
jo
add
jo
add
js
stc
fs
repnz
cmp
push
das
and
mov
adc
jg
push
mov
mov
dec
jmp
ret
insl
in
mov
gs
imul
icebp
cld
mov
in
pop
jne
xlat
jle
fisttpll
stc
stos
test
stos
pop
and
jg
ret
push
push
xchg
sub
mov
push
stc
test
lret
xchg
pop
sub
cmp
rcrb
mov
mov
sub
iret
stos
repnz
notl
dec
push
adc
sti
push
xor
insb
push
dec
jecxz
int
imul
addr16
xor
add
ja
cmp
jno
bound
and
loop
into
cmc
mov
in
push
outsb
and
int3
pusha
mov
loopne
sub
out
xor
mov
push
aam
push
loopne
mov
adc
adc
xor
xchg
es
arpl
jg
mov
fisttps
es
push
inc
decb
jo
rolb
fsts
push
jle
ja
hlt
add
push
or
mov
sahf
in
or
aas
aas
pusha
push
lods
push
sub
jo
js
aaa
outsl
dec
inc
ljmp
out
es
cmp
test
sub
popf
sub
je
xchg
sbb
stos
fdivrs
jbe
jg
test
daa
dec
xchg
push
repz
movsb
fsub
inc
int3
mov
in
cwtl
js
mov
pop
enter
sti
or
sbb
mov
sub
push
sub
lret
shll
inc
or
mov
in
test
aam
and
mov
popf
mov
push
test
imul
cmp
sbb
inc
addb
pop
adc
shr
gs
in
inc
jecxz
shrb
je
inc
in
adc
cmp
jne
inc
mov
stos
insl
shrb
mov
test
pusha
push
ja
xor
and
add
inc
cmp
sbb
pop
sarl
push
push
or
lock
pop
add
sub
inc
jne
add
movsb
pop
mov
xor
insb
fidivl
iret
xchg
cli
pop
adc
addb
and
mov
pop
and
test
push
push
or
enter
add
and
repz
inc
jnp
dec
pushf
push
ja
inc
out
pop
adc
call
xchg
out
pop
sub
push
test
cmp
lcall
jmp
aaa
adc
xor
cs
je
jo
lret
sbb
push
cld
pop
adc
inc
xchg
pop
mov
sbb
data16
xchg
loopne
mov
push
and
pushf
testb
jns
pop
gs
pop
ja
pop
jo
fildll
sbb
ret
dec
mov
popa
add
out
adc
mov
in
mov
push
push
sbbb
xor
jg
jg
jns
repz
adc
cmpsl
or
into
mov
add
dec
xor
mov
inc
and
or
or
rcrb
ss
cmp
jo
xchg
jae
repnz
add
hlt
repnz
adc
lea
out
or
xor
and
xor
push
rolb
mov
lock
adc
arpl
mov
dec
insl
cli
xchg
cmc
loope
jmp
add
jae
lret
add
pop
cmpsb
lods
cmpsb
sti
or
push
cmp
and
or
stos
and
imul
cs
outsl
mov
mov
pop
xor
xchg
hlt
cmpsl
mov
jns
add
lea
pop
cltd
addr16
pop
dec
insl
xor
test
cmp
stos
pop
sbb
test
incl
jmp
fsubrp
push
xor
jle
test
inc
cmpl
or
push
std
js
mov
mov
dec
loope
jle
adc
xchg
ret
adcl
out
lock
int
test
pushf
out
jmp
mul
lret
xchg
ret
mov
loope
loope
rcll
pop
inc
sbb
clc
lret
test
push
lahf
jne
dec
adc
jbe
sarb
push
les
sti
test
pop
popa
sub
mov
std
out
imul
sti
outsl
and
and
dec
adc
int
ljmp
sbb
rorb
lahf
mov
adc
ljmp
leave
pop
inc
shlb
outsl
mov
push
adc
cmp
addb
lcall
out
jp
in
and
jecxz
mov
lret
scas
aas
notb
inc
dec
inc
xor
addl
push
mov
ss
xor
fimull
sub
ss
enter
std
jne
xor
jecxz
sub
fisttpl
popf
mov
cmpsl
sbb
and
pop
inc
addb
pop
dec
lods
shll
inc
cmp
cmpsl
cmpsb
xchg
lea
inc
fbld
in
add
sbb
dec
out
xchg
dec
xchg
push
clc
idivb
movsb
pop
mov
jle
outsl
adcb
repnz
ljmp
fnstsw
mov
sbb
or
inc
fst
enter
cmp
sbb
out
adc
xchg
inc
xor
inc
pushf
cmp
add
inc
cmp
push
adc
xchg
fistl
fcomps
loope
cmpsl
mov
push
cmp
nop
and
rclb
int3
in
aam
aad
es
bound
lock
mov
push
nop
and
movl
adc
jge
mov
pop
jb
pop
jne
fsubrl
fwait
pop
cmpsl
and
jb
dec
push
sub
or
mov
inc
ss
mov
lret
fidivl
cmp
bound
sbb
add
add
leave
inc
js
loopne
pop
or
dec
xchg
mov
pop
psubd
sub
lock
sbb
test
mov
cli
pop
jg
fneni(8087
pop
inc
aad
xchg
popf
xor
loopne
mov
xchg
and
pop
test
pop
pop
add
pop
popf
stos
mov
loopne
or
pop
and
or
jns
imul
xchg
pop
cli
nop
and
imul
xor
and
repnz
jp
insb
outsb
add
test
aas
xchg
pop
dec
xor
sahf
cmp
sub
push
out
sbb
fnsave
pop
jae
or
sub
daa
push
cmpsb
lock
out
adc
push
jecxz
jb
pop
and
sarl
sub
cltd
jne
mov
popf
insb
push
imul
dec
dec
into
mov
cltd
in
aaa
rorl
dec
xchg
shr
or
jb
xchg
dec
test
cmp
leave
mov
out
scas
clc
test
cwtl
lea
movsl
xor
push
dec
gs
mov
inc
add
sbbl
fildll
in
es
jnp
xor
jge
insl
jmp
fsubr
pop
adc
dec
scas
sbb
xor
mov
adc
stos
rclb
and
inc
ficoml
insb
das
jp
js
mov
push
movsl
lret
push
shlb
cmp
or
add
fucomp
push
lods
imul
push
adc
push
aam
mov
sbb
add
mov
jl
jg
andl
lahf
mov
sub
scas
ss
dec
adc
sub
adc
repz
jo
mov
shrl
hlt
out
pop
adc
aam
jg
sub
jo
cmp
aam
aaa
push
clc
pop
and
or
sub
dec
icebp
cmpsl
es
cmp
jle
cmp
mov
js
shrl
and
or
popa
jge
loopne
arpl
or
rorb
xor
jnp
lea
cli
pop
jns
xchg
insb
lods
aas
cld
jp,pn
les
das
add
push
inc
sub
mov
push
sbb
cmp
or
mov
jl
iret
fsub
call
mov
cmp
daa
sahf
add
mov
push
stos
lahf
sub
mov
insb
and
xchg
call
add
sub
imul
dec
fdiv
pop
adc
add
or
cmp
or
xchg
mov
pop
jne
lea
cmp
mov
ja
into
dec
jmp
scas
xchg
mov
mov
cmpsl
mov
dec
icebp
mov
jb
xor
test
and
adc
xorb
xor
dec
cmp
add
sahf
insl
pop
sbb
out
adc
nop
rcll
lahf
enter
jg
arpl
pop
sahf
in
xchg
adc
sub
sbb
in
sbb
lds
pop
jbe
pusha
adc
jmp
adc
test
stc
pop
cmp
sub
rolb
mov
daa
mov
pop
jbe
into
ss
fdivr
shlb
lret
mov
mov
jg
sarl
fst
or
test
in
mov
aam
lcall
and
stos
mov
inc
add
sub
jmp
aas
sub
mov
stos
lods
daa
mov
sub
sub
jmp
adc
test
pop
ss
test
adc
in
adc
dec
add
add
sahf
pop
pop
cli
rcl
popf
push
sti
adcl
shll
je
imul
cmc
ljmp
ds
pop
in
pop
pop
ds
mov
or
adc
stc
cld
sti
andb
and
fwait
aad
fldpi
mov
xchg
and
pop
lret
or
movsl
inc
push
dec
nop
es
sbb
pop
mov
stos
push
sub
jl
mov
dec
push
adc
or
loopne
mov
sahf
pop
leave
cmpsb
sub
jne
push
or
gs
jge
mov
ffreep
lods
mov
cltd
mov
cld
push
mov
lret
stos
pop
pop
loope
lcall
mov
or
jle
lock
pop
shll
movsl
cmpsb
loopne
or
loope
mov
das
push
push
bound
jecxz
repnz
leave
or
mov
dec
mov
lods
fcoms
sbb
leave
jnp
lds
adc
shr
dec
mov
cmpsl
orb
xchg
push
cmpsl
jp
subl
jge
or
and
sbb
das
fdivs
mov
dec
stos
and
pushf
jecxz
push
xor
jl
push
adc
fnsave
adc
clc
add
mov
imul
cli
mov
fld
inc
incl
push
xlat
stc
add
add
xor
push
fildll
popf
cmp
mov
fistpll
push
dec
dec
fsubl
jl
fnsave
movsb
daa
sahf
mov
imul
daa
scas
decl
cli
cli
push
in
pop
push
aam
xchg
push
jl
or
sbb
bound
icebp
lock
repz
jmp
jno
sbb
fwait
push
imul
xchg
inc
rorl
adc
push
sbb
popa
sbb
iret
and
enter
inc
arpl
out
adc
push
adc
mov
sbb
sub
add
mov
ficoml
sbb
mov
cltd
mov
test
or
push
cmp
fxch
push
mov
push
lret
push
sbb
ja
dec
mov
jb
sbb
ret
lret
mov
or
inc
inc
rclb
xchg
loopne
lret
jbe
mov
push
jmp
xchg
or
fs
adc
pop
jl
call
pop
test
mov
push
inc
shrb
jecxz
outsl
stos
mov
sbb
mov
sahf
cs
movsb
and
loope
xchg
push
sub
xchg
sarl
in
cmp
aam
adc
pop
lcall
ret
mov
stos
mov
mov
or
out
adc
lea
movsb
cmp
scas
pop
mov
pop
mov
inc
xlat
xor
or
push
jmp
loope
xchg
lcall
pop
pop
mov
je
mov
or
fsubr
pop
lods
mov
xchg
and
test
dec
xchg
sub
and
adc
decb
nop
jno
rcll
fnstcw
sbb
popf
push
jmp
scas
mov
out
adc
xor
je
push
adc
jge
push
push
sbb
dec
out
inc
mov
loop
iret
imul
insl
xchg
insb
enter
decb
sbb
inc
jbe
sbb
cmp
in
scas
cmpsb
cmpsb
ja
lea
inc
xlat
dec
enter
inc
imul
dec
outsl
xor
es
jmp
and
dec
lret
mov
insb
enter
ljmp
scas
jmp
mov
push
cmpsl
xchg
jb
jo
push
adc
out
add
sahf
orb
cmp
and
push
dec
cmp
out
adc
pop
test
push
adc
out
pop
xchg
pop
outsb
movsb
jg
lret
jno
and
leave
push
mov
jecxz
fsubrs
add
and
add
ret
mov
ss
lret
std
cld
lea
inc
movsb
sbb
lahf
icebp
xchg
fistpl
dec
xchg
pop
sub
movsl
dec
sahf
imul
dec
xchg
and
add
nop
sbb
lods
and
mov
push
ds
shrl
nop
addr16
dec
mov
or
push
xchg
scas
loopne
push
mov
cmp
push
pop
shl
mov
mov
mov
push
fcomp
or
sarl
fwait
xor
dec
pusha
jbe
pop
mov
jle
mov
stc
add
stos
cmp
or
pop
add
jne
add
add
ljmp
adc
pop
adc
jns
repnz
in
mov
std
jmp
loopne
xchg
pop
xorb
mov
cwtl
mov
adc
insl
testb
lcall
pop
out
aam
loopne
mov
cld
ror
sbb
aas
mov
add
fimuls
sub
in
loope
cwtl
sub
test
clc
aas
jg
iret
jno
push
insl
mov
cmp
pop
ss
add
sub
sub
and
gs
in
enter
add
shr
or
out
mov
out
mov
mov
cmp
orl
push
mov
push
and
pop
out
pop
in
and
dec
jmp
mov
repnz
jo
in
shrl
cmpl
adc
fisubrs
idivl
mov
or
and
mov
mov
and
out
adc
mov
hlt
pop
loope
jmp
int3
pop
cltd
push
cmp
add
or
xchg
mov
dec
sbb
cmpsb
outsl
dec
sbbl
outsb
add
jl
sbb
stc
xor
rclb
xorl
stos
xchg
dec
and
xorb
push
dec
out
imul
in
popa
mov
push
mov
jne
pop
pop
cwtl
inc
jl
dec
imul
imul
rcrb
sub
outsl
push
mov
nop
test
mov
fnstcw
dec
fwait
scas
dec
or
iret
xchg
mov
shlb
leave
adc
fadds
in
cmpb
sbb
or
push
adc
ds
pop
pop
fcmovbe
test
pop
adc
or
mov
andl
fmuls
filds
jmp
ljmp
outsl
fistpll
sti
sahf
ljmp
and
fdivrs
out
mov
stc
mov
jg
decb
adc
mov
fidivrl
out
cwtl
push
lods
pop
sbb
sbb
sbb
or
sar
mov
aaa
cmpsb
out
insl
lods
xchg
push
push
aad
adc
outsl
lret
dec
or
jle
aam
cs
jge
mov
lahf
insl
jecxz
shrl
sbb
outsl
jo
int
jmp
inc
sarl
add
xchg
and
fbstp
mov
fistpll
add
lds
push
adc
and
pop
inc
lret
push
lods
and
inc
aad
adc
in
cld
cli
mov
inc
es
or
mov
pop
mov
xor
mov
jg
incb
push
and
or
pop
ficoms
in
dec
jge
lds
adc
jns
cli
cmc
ljmp
and
cmp
test
jl
mov
sbb
jmp
inc
push
pop
cmp
arpl
fmuls
aas
iret
add
mov
insb
jmp
call
test
in
ret
xchg
and
cmp
xchg
jecxz
cltd
shrb
std
cld
inc
dec
jmp
mov
push
cmp
daa
dec
xchg
sub
cmp
repnz
xor
jns
cmpb
lock
call
adc
dec
xchg
push
cmp
dec
adc
ret
mov
add
mov
pop
scas
aaa
push
ljmp
pop
cmpsb
push
icebp
cli
int3
cltd
sqrtps
jl
imul
sub
jmp
pop
xor
jmp
adc
aas
mov
out
adc
push
repz
mov
lods
inc
bound
jle
jae
xor
dec
addr16
sti
fistpll
sbb
mov
xor
ret
lcall
push
mov
out
test
je
jo
push
inc
es
or
jmp
lcall
pop
and
mov
cli
std
push
mov
push
inc
push
or
enter
adc
repnz
sub
jmp
push
mov
loop
into
xchg
and
sbb
outsb
stos
cld
xchg
add
fdivs
xchg
arpl
xchg
rolb
sti
insl
fcoml
fdivrl
pop
fwait
lods
and
dec
ds
jp
inc
dec
xchg
sub
push
das
cmp
into
sbb
inc
inc
cli
add
jle
shrb
fdivrs
sub
fprem
mov
rcll
inc
lock
in
in
jp
pop
fdivp
xchg
mov
outsb
aam
fisubrl
pop
test
shrb
mov
addr16
pop
movsb
cmp
push
adc
call
popf
ja
jno
or
enter
add
rcrl
xorl
int
cmpsb
ds
jno
push
fisubrl
test
std
sbb
popa
mov
shlb
movsb
fsts
loop
cmp
test
or
sti
xlat
dec
nop
pop
adc
cmpsl
sbb
cli
dec
xor
push
mov
add
icebp
pushf
test
mov
mov
lret
xor
adc
jne
xor
pop
mov
jno
adc
jmp
je
jle
push
idivl
movsl
cs
jae
shlb
fldcw
ljmp
jl
imul
jecxz
movsb
dec
xchg
and
loopne
int
sub
adc
arpl
lea
add
insl
push
out
adc
push
bound
xor
ret
flds
fidivrs
mov
in
adc
les
sub
mov
mov
mov
add
lds
bound
cmc
push
lods
iret
sarl
add
fistpll
xorb
test
hlt
mov
pop
jno
pop
in
jmp
ret
adc
sbb
js
add
imul
or
dec
xchg
and
or
cs
lea
cwtl
js
test
sbb
movsb
dec
xchg
mov
rolb
dec
mov
mov
cwtl
aaa
outsl
filds
loope
jmp
frstor
sub
and
call
sub
xlat
mov
dec
imul
movl
push
movsb
cmp
cmpsl
dec
xchg
and
lods
int
idivb
ljmp
sub
sahf
sbb
call
dec
fistpll
adc
sbb
js
sarb
mov
fstpl
pop
dec
xchg
and
cmp
xor
sub
push
pop
lds
addr16
lods
sbb
dec
into
std
xchg
push
movsb
xor
dec
out
shrl
and
fstpt
mov
adc
cmp
loopne
fs
adc
dec
adc
mov
fsubrl
stos
ljmp
fcomip
xorl
ds
scas
push
scas
pop
cmpsl
xchg
mov
cmp
mov
in
pop
arpl
in
mov
xchg
and
loop
js
imul
sarl
add
hlt
div
ljmp
lods
scas
inc
cwtl
sub
or
icebp
mov
mov
rolb
sub
iret
hlt
fwait
dec
jno
pop
xchg
or
test
xor
int
cmpl
ret
or
lods
push
mov
icebp
jg
data16
scas
stc
dec
push
xor
scas
scas
movsl
into
dec
cmp
int3
sbb
jne
mov
push
cld
or
pop
or
mov
fistps
sbb
push
dec
add
jnp
int
sahf
xchg
insb
incl
xor
inc
adc
mov
or
mov
or
pusha
sbb
mov
jg
inc
cmp
lds
add
aaa
ljmp
ljmp
icebp
mov
in
pop
cld
sub
or
adc
pop
push
mov
xor
imul
add
mov
stos
stc
mov
xchg
mov
sbb
pop
das
or
lcall
stc
outsl
add
jle
adc
pop
cli
mov
pop
jbe
push
outsb
pop
and
popa
adcb
out
adc
xchg
pop
push
sarl
out
pop
push
sub
xchg
fucom
mov
imulb
aaa
leave
jne
das
mov
das
js
test
mov
and
and
nop
mov
jl
nop
or
fiadds
inc
mov
adc
arpl
inc
pop
mov
stc
xor
sbb
mov
lock
cmp
mov
dec
pop
dec
cld
and
push
add
sub
loop
iret
enter
scas
push
fdivrl
popa
nop
mov
dec
pop
dec
test
xchg
cwtl
sti
call
clc
out
nop
cmp
sub
push
sarl
add
jne
es
mov
fidivs
jno
ljmp
mov
xor
or
cmpsl
jmp
mov
fidivl
cmpsl
dec
adc
mov
test
lods
std
std
or
scas
pop
lods
pop
mov
jg
insl
ficompl
sbb
fnstenv
faddl
push
imul
ret
movsb
push
movsb
aas
sub
imul
aas
sbb
mov
and
stc
std
jo
xchg
push
into
lods
push
xor
clc
repnz
mov
ljmp
jmp
xchg
push
into
lods
pushf
repz
fidivl
ja
push
cmpsl
vunpckhps
sbb
repz
cli
pop
std
lds
divl
pop
in
jmp
cmpsb
inc
fisttpll
or
les
push
pop
push
and
and
cmp
inc
sub
ja
out
cmp
cltd
je
gs
dec
mov
test
adc
dec
dec
pop
pop
in
pop
lock
je
pop
in
adc
push
call
xchg
mov
pop
jbe
leave
ds
dec
inc
mov
arpl
pop
jl
call
ljmp
xorl
and
das
sub
stc
sub
lods
fnstsw
cli
pusha
adc
loopne
mov
fxch
xor
test
cmpsl
jne
jb
mov
or
push
in
pop
xor
push
cs
mov
fldcw
aad
mov
sti
out
sub
mov
pop
adc
imul
push
jle
sub
jmp
bound
mov
mov
daa
rcrl
dec
xchg
push
imul
rorb
lahf
xor
push
scas
add
xchg
add
adc
pop
jne
mov
outsl
mov
pop
adc
push
pop
mov
pop
iret
setp
cmpsl
push
mov
das
inc
lahf
push
inc
and
mov
push
pop
pop
adc
xchg
lret
inc
dec
mov
inc
pop
addl
adc
call
mov
pop
sub
cmp
or
lock
mov
sbb
adc
fistl
adc
sbb
dec
popa
pop
imul
js
in
test
jmp
std
xor
or
mov
or
pop
nop
adc
mov
cmp
ljmp
dec
int
lret
sbb
decb
or
repz
add
in
xlat
sbbl
dec
out
sub
std
xchg
out
adc
dec
enter
cmpsb
jno
xlat
push
out
sub
roll
add
adc
mov
push
and
mov
test
add
pushf
cmp
xchg
stc
imul
adcb
outsb
sahf
lock
ffreep
addr16
jle
std
and
mov
inc
pop
loope
jnp
popl
mov
pop
cld
xchg
and
insl
mov
jae
test
cmp
push
lret
repnz
pop
mov
or
pop
adc
xor
jg
inc
adc
bound
stc
push
inc
xchg
nop
out
out
idivb
mov
daa
aas
mov
daa
int3
in
jl
jl
dec
fdiv
inc
sbb
inc
mov
sahf
sahf
imul
push
adc
sbb
fwait
and
dec
or
scas
iret
jne
jle
dec
test
adc
loop
mul
pop
es
ficoms
hlt
pop
adc
fildl
jmp
sarb
outsb
fmul
lods
mov
inc
pushf
push
fndisi(8087
or
jg
stos
enter
or
roll
imul
push
arpl
sub
in
movb
push
push
in
aam
shlb
sub
es
cmp
popf
dec
inc
in
pop
adc
mov
lahf
mov
push
icebp
push
aad
pop
hlt
shll
and
inc
orb
ret
call
sbb
push
lock
aad
push
cmpsl
clc
mov
test
sub
sub
dec
xchg
and
mov
push
fsubrs
jns
lea
inc
pop
enter
decb
test
inc
jne
and
push
aaa
adc
pop
sti
jmp
or
pop
in
xchg
leave
sub
cltd
mov
xor
lea
inc
data16
lea
rclb
addr16
or
cmp
fcompl
push
adc
loop
int3
mov
loopne
leave
ret
mov
mov
mov
stos
test
mov
nop
lea
jbe
outsl
stc
adc
mov
je
pop
std
stc
jbe
pop
xor
scas
mov
sbb
mov
xor
adcl
pop
jl
or
ret
pop
jns
movsl
jbe
sub
adc
jnp
or
cmp
jg
mov
push
andl
push
out
pop
jno
fs
and
add
es
xchg
mov
pop
mov
dec
sahf
es
nop
stos
adc
add
add
gs
lahf
rol
gs
enter
imul
mov
loope
fsubs
jbe
adcb
mov
out
scas
mov
xchg
mov
mov
out
inc
shlb
addb
call
movsb
nop
lods
mov
xor
sub
into
stc
and
jg
adc
jae
lds
jnp
xor
test
nop
push
push
lcall
test
imul
stc
or
shr
in
cmp
push
push
lcall
mov
lock
adc
dec
dec
xor
repnz
dec
repz
pop
fs
shll
pop
mov
mov
jb
and
das
repz
imul
and
cltd
dec
add
movsb
test
push
jbe
imul
cmp
ds
popf
cld
or
inc
outsl
pop
add
mov
mov
aam
jnp
dec
push
cs
and
inc
popf
pushl
gs
test
das
jmp
les
lret
add
addr16
loop
mov
rcll
test
ret
push
test
mov
xchg
std
pop
fdivl
adc
xor
out
xchg
ss
xchg
mov
and
orl
add
cmp
cmp
clc
fsts
fadd
and
or
jl
std
mov
and
jmp
dec
jne
sbb
cmc
into
cli
jne
push
repz
lret
fs
imul
cmpsl
adc
xchg
jae
fsub
loope
jecxz
mov
push
and
xchg
adc
div
hlt
pop
sub
nop
xcrypt-ctr
cmpsl
pop
sub
jne
and
cmp
xchg
push
adc
mov
xchg
push
lea
sub
or
in
nop
rol
ret
mov
pop
adc
es
repnz
adc
inc
jbe
mov
xor
add
mov
or
jecxz
cmp
dec
ret
daa
in
into
cltd
inc
sbb
xchg
add
dec
lret
inc
mov
push
jge
mov
cmp
into
mov
xlat
cmp
mov
inc
jecxz
sahf
push
xor
sbb
sbb
ret
dec
ret
sbb
rorb
fmulp
cmpsb
shl
lods
dec
aaa
sub
and
outsb
lret
in
nop
stos
xor
pusha
and
pop
or
cmpsl
and
loope
lods
xchg
out
popf
mov
loopne
shlb
rclb
mov
ljmp
es
xchg
xor
sar
cmpsl
or
out
inc
popa
jbe
dec
call
sahf
insl
push
imul
insb
push
lock
cmpsl
lea
lret
mov
pop
sub
xor
and
push
sub
cwtl
mov
adc
shlb
inc
or
pop
mov
dec
jo
and
mov
insb
mov
push
adc
in
adc
add
inc
or
mov
sub
mov
adc
and
mov
mov
jnp
loopne
pop
nop
sub
xchg
mov
sub
adc
loop
int3
aaa
push
and
push
adc
flds
add
movsl
sar
cltd
mov
push
pusha
xchg
mov
push
adc
xchg
addb
out
inc
bound
adc
sti
mov
das
lcall
sub
inc
imul
mov
ljmp
sub
adc
sub
repnz
adc
andb
push
adc
xchg
addb
out
dec
pop
sahf
jbe
sub
loope
xchg
inc
push
out
pop
jg
adc
mov
add
and
sbb
fnstsw
xor
mov
adc
adc
add
cltd
addr16
inc
sub
cmp
pop
int
aad
push
sub
insl
mov
ja
mov
cld
and
ljmp
lods
shr
mov
dec
je
mov
mov
cmp
pop
push
and
mov
aad
jbe
mov
out
inc
push
sub
sti
sbbl
jne
or
xchg
divl
push
push
arpl
jmp
and
mov
loope
rol
fcoml
sub
sbb
mov
jge
je
fsubrl
cmp
ss
pop
pop
add
rorl
test
fsubl
test
xchg
jle
xchg
aaa
clc
or
xor
fldenv
push
fsubl
push
je
out
mov
out
mov
loope
leave
or
xor
shl
scas
sub
mov
test
std
into
repnz
vdivpd
std
inc
testl
mov
dec
pop
out
adc
sub
sub
call
jns
out
dec
sub
insb
or
mov
cmp
jbe
pop
pusha
sub
fnstenv
xchg
jnp
mov
and
mov
cmpl
pop
pop
daa
adc
scas
fsub
popf
mov
dec
insb
ret
push
bound
mov
push
iret
push
cmp
sub
daa
ds
cmp
and
mov
ror
mov
fists
rolb
cli
xchg
push
mov
jp
jge
out
inc
mov
ljmp
or
sub
bound
and
inc
out
test
les
xchg
push
out
jbe
mov
scas
jle
xchg
mov
push
popf
ds
cmp
nop
and
lret
adc
jo
jge
test
imul
imul
repnz
lock
mov
gs
mov
and
add
dec
inc
ror
fnstcw
jae
ret
lods
mov
cmp
std
inc
sti
inc
xor
test
out
mov
jl
jo
or
lret
adc
mov
jp
enter
jle
xchg
lods
inc
out
xchg
insb
cwtl
or
dec
loopne
movb
testb
in
or
iret
or
out
inc
sub
lods
ss
inc
sub
jg
ja
ret
jnp
and
outsb
test
xchg
and
add
sti
xchg
xor
ja
jnp
orb
inc
inc
push
and
outsb
test
sbb
cmp
js
push
addl
dec
jb
sbb
cmp
pop
push
hlt
push
lods
int
scas
iret
sbb
mov
lods
or
out
test
xchg
or
and
test
or
fsubr
push
lods
jecxz
push
push
adc
clc
add
lds
sti
xchg
cmp
cmpsb
aam
add
xor
dec
es
outsb
ror
xchg
scas
mov
shl
xchg
test
cmp
or
es
mov
push
or
fstps
insl
xor
and
andl
jns
imul
xlat
lea
ret
movb
loopne
adc
mov
out
add
or
and
into
and
jns
lods
or
out
pop
add
dec
xchg
pop
in
clc
adc
pop
sti
jmp
dec
ret
push
mov
pop
inc
mov
pushf
push
clc
imul
cmpsl
sbb
shlb
or
dec
or
cmpsl
adc
mov
fidivrs
push
stos
fsub
inc
sbb
arpl
mov
add
pop
dec
es
imul
sub
nop
rcrl
outsb
stos
or
mov
aas
or
add
movsl
ret
repnz
mov
movsl
cmp
push
xor
mov
sub
mov
shrl
scas
push
ljmp
push
sbb
push
push
adc
dec
add
and
xchg
push
imulb
movsb
mov
or
xchg
adc
mov
jmp
jbe
loop
in
in
pop
push
and
inc
lahf
push
out
push
xchg
or
sarl
push
mov
dec
arpl
mov
dec
clc
push
loopne
add
rol
imul
aas
and
mov
test
arpl
jle
push
imul
dec
mov
lods
in
movsl
mov
add
dec
or
pop
sbb
xchg
sub
out
mov
and
push
mov
jmp
inc
fidivrs
in
aas
inc
mov
cld
aas
inc
xchg
cmp
fadds
jge
cltd
sub
pop
xor
dec
fs
xchg
lds
or
xchg
push
int3
xchg
std
sub
leave
cwtl
push
add
adc
stos
pop
xor
push
and
mov
inc
sbb
pop
std
movsl
ret
in
movsb
and
fldcw
sbb
lea
enter
xchg
pop
and
jecxz
sbb
dec
pop
roll
ja
lahf
arpl
cmpsb
fistps
sub
push
cmc
fwait
bound
sbb
fisttpll
ret
inc
aam
dec
fwait
addr16
ljmp
ja
push
sub
pusha
out
je
lahf
mov
ficoml
sbb
scas
sbb
add
dec
dec
dec
jmp
mov
int3
in
jns
outsb
popa
dec
in
cltd
xchg
testl
jl
aas
xor
jo
push
pop
addr16
adc
dec
push
sub
mov
icebp
mov
mov
push
outsb
into
fmull
xlat
int
pop
lods
sub
scas
sub
dec
out
pop
xchg
ljmp
adc
push
jbe
push
bound
dec
mov
imul
int
ret
mov
push
popa
fwait
and
div
inc
or
cld
inc
add
call
pop
or
testl
mov
adc
fstpl
mov
shrl
and
data16
mov
jg
ret
pop
jp
mov
and
xchg
push
lock
addb
dec
pushf
mov
push
push
add
sub
push
adc
or
xchg
xlat
fsubl
call
add
adc
push
fisttpl
pop
mov
add
popa
fnstenv
sub
inc
orb
ret
lea
dec
out
adc
xor
dec
loope
cmp
and
xor
push
pop
lock
mov
cmp
and
push
dec
inc
pushf
cmp
pop
jp
mov
adc
aas
xor
pop
pop
add
in
adc
mov
or
adc
shll
hlt
pop
adc
xchg
popa
andb
pop
jmp
cs
push
adc
inc
movb
inc
and
xchg
and
sub
mov
data16
ljmp
jl
ja
xchg
mov
mov
pop
fstpt
daa
add
mov
arpl
out
add
and
push
adc
cmp
xor
jne
xchg
sub
mov
xor
call
add
pop
mov
push
sti
cltd
push
lock
pushf
cmp
inc
fst
sbb
into
add
cld
or
imul
addl
mov
mov
adc
lret
out
mov
xor
incb
sbb
xchg
cmc
jmp
andl
test
mov
daa
mov
lods
xchg
jl
cmp
mov
mov
or
fwait
push
movsb
add
pusha
xorb
or
push
push
adc
push
cmp
mov
cli
jecxz
add
loopne
cmp
xor
icebp
push
cld
popf
mov
imul
xor
fstps
mov
push
adc
inc
ret
inc
push
lcall
mov
mov
xchg
loope
or
mov
test
push
or
or
and
and
push
push
push
ficoms
mov
shlb
cmp
jb
rcll
fwait
aas
pop
mov
fbld
pop
pop
shrb
cli
push
int
std
jnp
int3
lock
mov
xor
adc
dec
into
push
push
in
jno
inc
testb
mov
out
sbb
movsb
cmp
rorl
test
push
lods
pop
fbstp
pop
xor
sub
mov
mov
inc
push
pop
inc
ret
movsl
dec
jmp
mov
aad
mov
jno
lret
stc
sub
cmp
pop
adc
lds
push
scas
pop
jne
out
in
mov
jb
loopne
jg
pop
xchg
in
xchg
sbb
mov
aam
lods
xlat
pop
fcom
scas
push
sub
cmp
jl
dec
push
fsub
push
cwtl
hlt
sti
xchg
push
jbe
mov
or
rcr
push
or
ljmp
push
dec
xor
pop
imul
mov
jbe
loop
lds
inc
in
dec
mov
sarl
js
mov
sahf
cmp
xchg
xor
mov
add
ret
lret
sbb
imul
leave
bound
idivb
pop
in
nop
in
rorl
xchg
in
frstor
sbb
test
xchg
add
cwtl
inc
dec
sbb
push
dec
ljmp
and
sbb
push
and
pop
push
das
push
inc
xor
lahf
outsb
imul
lahf
mov
lahf
fcoms
sbb
cmp
dec
incb
add
add
popa
popa
adc
push
adc
mov
adc
lock
and
inc
imul
pop
adc
stos
aas
xor
cmc
ss
xchg
push
jp
adc
mov
xor
fsubrl
mov
jnp
bound
pop
and
xchg
pusha
cmp
adc
add
mov
lea
and
pop
and
push
lods
icebp
ret
shr
lcall
mov
sbb
test
xor
mov
and
jae
sub
and
or
ljmp
push
bound
ds
test
andl
mov
mov
in
adc
pop
mov
dec
xchg
jmp
fsubrp
notb
mov
jbe
mov
add
std
mov
imul
pop
in
popa
or
lcall
lea
push
jmp
dec
out
push
insl
fidivl
dec
mov
lea
int
movl
push
movsb
in
push
sti
aad
call
pop
mov
mov
in
nop
lods
add
cmc
ljmp
pshufw
mov
cmpl
int
test
out
std
insl
add
push
adc
push
bound
ds
fsubl
jae
je
cltd
pop
aaa
ret
jbe
int
jmp
mov
gs
or
push
test
bound
mov
add
mov
pop
pop
sub
lock
lock
pop
outsl
xchg
or
mov
shrb
pop
mov
xor
xchg
neg
xchg
ja
mov
sbb
xor
dec
or
or
dec
cmp
sub
gs
sub
push
mul
fwait
in
xchg
push
cmp
fwait
ja
inc
sub
mov
inc
cld
arpl
ljmp
stos
es
lock
mov
stos
rol
push
pop
loopne
shrl
je
mov
or
mov
stos
aam
xchg
dec
out
push
mov
mov
mov
jl
add
mov
in
push
mov
xchg
sub
and
sbb
lret
sti
push
dec
xchg
mov
jp
imul
pop
adc
int
pop
ja
mov
int
sbb
sbb
or
jmp
cli
jg
mov
pop
aas
lea
lds
and
adc
in
pop
sub
jae
inc
mov
ss
push
inc
add
mov
xor
dec
xchg
mov
push
lods
sub
sub
sub
aaa
insb
scas
into
sti
cld
std
out
ljmp
in
mov
xlat
stos
push
das
add
pop
sub
xchg
out
test
pop
and
push
sub
imul
call
xor
push
adc
test
in
jmp
inc
push
adc
inc
pushf
pop
jge
adc
test
adc
icebp
adc
push
or
and
sti
rorb
inc
fcmovnb
aad
pop
inc
push
out
ss
cmp
cmp
push
mov
push
gs
fsubrs
adc
adc
mov
insl
mov
lcall
in
and
fsubs
das
movsb
das
mov
mov
shlb
cmp
xor
rcll
mov
jae
stos
dec
jno
mov
outsl
lahf
and
mov
loopne
inc
dec
mov
incb
out
adc
std
loopne
not
fdivrl
and
das
cli
jg
cld
xchg
pop
mov
addb
sub
test
in
pop
xor
jnp
sbb
sbb
inc
inc
adc
adc
scas
dec
push
movsb
dec
cmp
std
xor
cmp
or
mov
mov
mov
sti
popa
loopne
gs
sub
dec
mov
movsb
jle
aaa
outsl
test
std
outsl
add
stc
movsb
dec
xchg
call
out
mov
mov
adc
movb
or
push
lods
fdivs
push
repz
push
lods
pop
cmpsb
mov
mov
cwtl
sbb
inc
inc
notb
ret
scas
mov
sub
lods
pop
mov
lds
adc
fstpt
add
push
movsb
dec
cmp
cmp
mov
lcall
sub
std
cli
pusha
pop
cmpsb
adc
dec
fdiv
dec
xchg
and
push
and
nop
mov
sub
ljmp
mov
xchg
and
loopne
mov
sub
loop
cltd
shl
ret
jae
or
cmc
shrl
scas
mov
and
push
adc
and
lea
decb
test
and
addr16
lock
test
mov
sub
add
mov
jnp
and
xor
sub
pop
mov
imul
mov
in
adc
test
xor
and
mov
clc
imul
inc
or
add
sti
hlt
inc
inc
inc
inc
adc
xchg
and
xchg
sub
loope
bound
imul
cld
lea
inc
sarb
loopne
xchg
sub
imul
lret
inc
int3
mov
pop
fisubs
add
push
adc
push
push
adc
xor
ret
cmpsb
push
or
or
hlt
pop
aaa
adc
cmp
ficoms
mov
les
push
adc
mov
repnz
and
sub
lods
inc
mov
rcll
inc
notl
rcr
mov
push
jp
popa
int3
scas
or
or
repz
out
fisttpll
nop
popl
fistpl
test
subl
sbb
jnp
sar
dec
imul
jne
pop
pop
pop
test
stos
jmp
push
sahf
dec
add
or
gs
int
sbbb
aas
mov
add
inc
mov
xor
clc
push
in
sbb
inc
js
call
add
push
sub
jae
adc
bound
cld
jecxz
rcll
push
or
lea
repnz
out
and
push
icebp
push
daa
and
adc
data16
or
sub
adc
outsb
fldl2t
aaa
mov
mov
push
mov
mov
xor
jp
adc
and
sub
mov
mov
fistpl
nop
fnstcw
sub
loopne
sub
xchg
sub
outsl
jmp
in
jno
mov
fwait
gs
into
div
dec
push
cld
jae
mov
dec
ljmp
fcoml
mov
mov
xor
jmp
adc
pop
popa
add
pusha
mov
push
jp
adc
popa
dec
mov
pop
out
push
mov
and
das
mov
pop
es
mov
ffree
push
xlat
loope
mov
cwtl
in
cmpsb
and
mov
add
dec
push
cmpsb
negl
adc
test
jp
adc
jns
pop
mov
out
and
aaa
jno
icebp
mov
push
adc
inc
pop
stc
jne
push
fisubrs
call
adc
push
adc
sub
stos
add
jmp
sbb
dec
xchg
and
enter
sub
arpl
aaa
in
mov
cli
cmc
sahf
outsb
es
out
mov
fsubl
aaa
sbb
adc
adc
fists
push
mov
call
and
stc
lods
imulb
dec
negb
sbb
decb
test
mov
xchg
and
push
cmpsl
sub
outsl
lods
adc
adc
cmp
dec
xchg
jg
loope
or
and
mov
popa
mov
fistpll
addl
adc
mov
xchg
test
xor
jno
outsl
fistpll
push
adc
inc
sub
xchg
and
lods
pop
lds
fists
mov
je
in
test
outsb
mov
pop
adc
pop
push
cmpsl
int
xor
pop
mov
or
jecxz
mov
xchg
mov
sub
rol
lea
jp
inc
add
mov
mov
cltd
aam
lods
rol
je
cwtl
in
shlb
mov
jge
push
cs
and
xor
int
arpl
sahf
outsl
xor
std
jo
std
sarb
push
sti
mov
inc
popa
inc
mov
mov
fs
inc
inc
cld
add
adc
push
and
arpl
xchg
push
in
cmpsl
mov
int3
arpl
cmp
stos
sbb
dec
jle
mov
andl
sub
xchg
xchg
xchg
mov
xor
and
or
push
lea
call
cwtl
daa
dec
xchg
push
dec
in
cs
and
sbb
mov
jbe
pop
addr16
push
lcall
jo
push
adc
roll
iret
cltd
jne
lock
rorl
sarb
in
cwtl
sub
adc
outsb
mov
insl
cmc
nop
scas
in
aam
ret
cld
inc
lock
jmp
jle
cmp
jae
aas
jmp
jo
daa
scas
fadds
pop
addl
out
loopne
and
mov
test
sub
gs
movsb
dec
inc
add
push
inc
sbbl
test
pop
jne
sarb
pop
xchg
sub
or
mov
jnp
out
shlb
jbe
adc
hlt
mov
cmp
or
mov
push
outsb
mov
mov
push
adc
push
xchg
in
xchg
xor
pop
adc
rolb
fsubrp
stos
cmp
push
sub
dec
xchg
pop
xor
mov
scas
xor
fmul
push
dec
std
stc
adcb
sahf
arpl
test
inc
out
sub
and
pushf
cmp
dec
iret
fdivrs
push
in
fldt
push
aas
fcmovu
mov
adc
sub
adcl
orb
jae
pop
movsl
aam
jmp
sub
xchg
negl
cmp
dec
sbb
nop
shlb
push
mov
jo
enter
jg,pt
mov
lret
sub
ss
xor
jno
sbb
dec
or
mov
adc
idiv
lods
sub
jg
mov
mov
sub
nop
and
jb
ja
adc
push
test
test
pop
xchg
lret
outsb
outsl
mov
ror
les
mov
subl
jg
stc
inc
mov
xor
fwait
jbe
nop
and
imul
movsb
sub
add
jp
popf
es
movsl
in
or
aam
ljmp
sub
ud2
test
cli
cmc
cs
and
dec
push
sarb
loopne
dec
xchg
sub
pusha
mov
loop
mov
outsl
add
adcl
call
outsl
fbstp
mov
sbb
outsl
test
std
fcoml
mov
cwtl
and
loopne
add
mov
js
pusha
ljmp
outsl
fistpll
cli
andl
xor
and
sub
pushf
lea
nop
stos
cmc
enter
cs
aam
push
movsl
mov
pop
stc
insb
fidivl
and
lea
inc
xchg
cmc
ljmp
data16
and
lods
pop
gs
ss
leave
nop
and
popl
arpl
mov
mov
sub
lods
pop
mov
cmp
and
test
cli
cmc
int3
vpaddusw
movsl
xor
and
fisttpll
dec
jbe
adc
ret
inc
or
dec
cmc
ljmp
cmpsb
mov
push
icebp
lods
pop
mov
mov
in
and
aad
jg
pop
push
ret
aam
push
pop
mov
lea
sub
outsb
lea
aaa
movsw
je
incb
jno
cwtl
data16
mov
xchg
and
loopne
dec
xchg
sub
popa
mov
add
mov
outsl
fbstp
pushl
scas
push
movsb
lea
cmp
dec
pop
inc
ret
mov
jne
lea
mov
cltd
and
fnstsw
push
cmpsb
les
sub
mov
dec
orl
and
mov
pop
iret
jo
fildll
or
push
jmp
fwait
scas
cli
clc
cmp
push
mov
cmp
xchg
dec
xchg
and
pop
sub
data16
stos
cmp
xor
pop
mov
and
das
jns
fildll
aam
mov
int3
jnp
stos
cld
inc
shr
loope
rclb
ret
or
test
dec
sbb
xor
inc
mul
cmc
aam
jg
fld
mov
aad
popa
mov
bound
cltd
dec
jnp
out
dec
aas
sub
adc
cltd
cmp
popa
out
push
test
sbb
aaa
xchg
pop
leave
cmp
jg
lods
and
in
jno
add
cmpsl
test
negl
mov
lsl
roll
fstpt
mov
mov
adc
shlb
ret
out
sbb
sub
lods
rolb
orl
lds
das
push
xor
adc
jb
jae
dec
jge
inc
addl
adc
push
das
mov
push
in
sub
add
popf
cmp
push
fnstsw
imul
shlb
mov
mov
int
nop
mov
lods
xor
dec
push
jl
out
pop
add
dec
xchg
and
mov
lds
in
pop
pop
xchg
xchg
std
lahf
xlat
push
and
int
and
mov
rol
mov
out
out
test
cltd
int3
xlat
jno
push
inc
inc
clc
stos
push
shll
push
mov
repz
dec
xor
mov
ss
shll
aam
cwtl
xchg
test
imul
xorb
sub
lcall
push
cmp
out
cmp
dec
cmp
sub
mov
fs
lahf
push
and
dec
mov
fildl
mov
jb
mov
mov
int3
adc
sbb
lret
xchg
dec
andb
data16
xchg
mov
sahf
and
mov
jmp
fistps
sahf
mov
and
je
xor
pop
mov
fidivrs
lret
fs
jns
xchg
mov
in
nop
stos
or
in
adc
cltd
mov
push
adc
int
pop
shl
enter
xlat
mov
add
ret
gs
dec
test
inc
push
and
pop
dec
pushf
cmp
lods
int3
sbb
or
add
xor
pop
inc
cs
out
mov
pop
lahf
push
pop
and
adc
addb
das
jecxz
cmp
mov
aam
das
into
mov
mov
insl
cld
push
adcl
lods
fidivrs
sub
outsb
adc
imul
icebp
ljmp
xlat
jno
es
aam
mov
ljmp
sub
sahf
data16
and
mov
mov
mov
jmp
repz
sti
jp
aas
mov
cmc
ljmp
jnp
andb
inc
mov
nop
and
and
shrb
adc
in
shll
push
sub
xchg
mov
push
int3
and
scas
and
sarl
jbe
in
mov
call
fstp
cmp
mov
pop
cmpsl
dec
pushf
cmp
sub
push
adc
shll
or
adc
ds
pop
fsubl
jne
iret
js
push
adc
push
dec
daa
xchg
pop
xor
dec
xchg
push
cli
and
dec
icebp
gs
imul
lea
inc
repnz
xchg
fisubs
push
repnz
aad
lret
sahf
cld
sub
jle
ret
inc
sti
add
sbb
or
and
in
jo
shrl
dec
adc
ret
or
push
test
xchg
insb
push
pushf
sahf
jp
sub
popa
ss
push
mov
mov
repnz
pushf
nop
mov
add
stos
in
mov
mov
into
lret
push
add
daa
loop
enter
insb
cs
mov
jbe
push
sahf
inc
stos
push
mov
ja
test
in
leave
sbb
cmp
mov
dec
jbe
adc
gs
pop
xchg
xchg
shrl
push
sbb
push
adc
inc
or
inc
lcall
mulb
imul
push
adc
adc
sub
imul
mov
jmp
dec
dec
in
xor
push
pop
lods
in
mov
sbb
xchg
fcmovne
hlt
cs
leave
enter
dec
or
lret
int
push
fcoms
insl
xor
cmpsl
and
adc
xchg
int3
pop
pop
jge
in
adc
ljmp
sar
data16
test
dec
insb
mov
rcrb
adc
in
pop
rolb
fwait
stos
icebp
stos
pop
mov
lahf
adc
jmp
adc
pop
sub
lahf
mov
loop
out
movsl
mov
pop
fstps
rcrl
aad
mov
sbb
popa
leave
fistpll
push
aaa
adc
rcrb
ja
icebp
scas
out
mov
inc
cltd
mov
out
dec
das
fmulp
mov
in
inc
jnp
push
std
test
js
icebp
sti
ds
adc
add
push
mov
std
sbb
scas
divl
jp
push
lods
adc
or
push
cmp
shll
dec
dec
xchg
add
mov
in
scas
in
inc
bound
xor
movsl
push
in
lea
clts
test
mov
ss
int3
pusha
out
pop
jg
sub
js
lret
sub
fwait
jbe
sahf
mov
adc
add
fdivp
adc
orl
adc
mov
pop
pop
jmp
addr16
dec
iret
inc
lea
into
dec
jmp
mov
xchg
and
and
ljmp
pushf
cmp
inc
mov
push
inc
and
cmp
xchg
mov
test
xchg
push
sub
cmp
cmc
lahf
push
lods
fcomps
mov
cmp
lcall
into
shl
enter
orb
mov
stos
sahf
dec
insb
scas
movsl
xchg
mov
jmp
js
mov
icebp
push
sahf
in
or
sarb
cmpl
je
lret
in
leave
dec
inc
ljmp
out
sti
or
sbb
mov
sub
push
sub
lret
shl
sbb
outsl
dec
inc
or
mov
in
ror
test
popf
mov
push
test
imul
pop
js
sbb
add
ljmp
jecxz
push
push
adc
sub
and
inc
imul
cli
cmc
std
jge
push
movsb
xor
lods
in
loope
lods
add
lds
clc
sbb
outsl
mov
dec
cmc
ljmp
push
leave
xor
outsb
sub
pop
sub
xchg
shll
aaa
outsl
movsl
cmp
mov
in
test
aam
cs
dec
xchg
test
divl
cs
pushf
cmp
add
inc
add
add
sti
rolb
shll
push
fcmovb
jae
fsts
pop
xchg
xchg
int
incl
or
xchg
cmc
das
inc
out
inc
mov
je
adc
xchg
lock
jmp
mov
xor
les
sub
and
mov
mov
cwtl
imul
inc
pop
jno
cmpxchg
jle
aaa
cmpsl
mov
sub
pop
inc
mov
mov
mov
lret
sub
mov
jg
dec
pop
daa
or
das
inc
sarl
cmpsl
mov
mov
jne
push
adc
fucomip
xor
sub
mov
pop
lods
leave
repnz
xchg
pop
jle
cmp
popa
mov
and
add
es
and
adc
jne
imul
cwtl
arpl
xchg
jo
pop
dec
roll
lea
insl
js
insb
jnp
movsb
shr
jl
adc
jo
mov
sub
xchg
sbb
jp
mov
sbb
fldenv
les
sbb
dec
push
ds
add
cmpsb
inc
jge
adc
mov
adc
mov
jle
lcall
mov
pop
cmp
jl
loope
clc
lods
rcll
push
adc
mov
outsl
adc
pusha
push
mulb
xchg
int
sbb
rcrb
pop
popf
inc
inc
jecxz
sub
push
out
popa
lods
dec
ljmp
int3
inc
clc
jae
mov
add
stos
shl
orb
and
add
adc
fwait
test
xchg
sbb
shl
pop
shlb
jo
test
cmp
mov
lods
lock
jge
pop
sbb
fisubrs
andb
inc
fldenv
jmp
cmp
mov
roll
mov
ret
sarb
push
fildll
test
mov
ja
dec
cli
std
pop
std
call
repnz
push
jb
or
dec
pop
incb
pop
call
pop
mov
js
jl
pop
adc
insb
lods
loope
mov
pop
fisubrl
inc
shrb
cmp
fucom
pop
or
fldenv
or
dec
mov
xchg
xor
xor
inc
mov
sbb
and
aas
sbb
lcall
mov
push
aas
test
jne
mov
sub
pop
cmp
jp
movsb
out
push
adc
icebp
addb
out
jge
push
and
es
aas
sbb
aas
sub
movaps
adc
imul
std
fdiv
lods
pop
cmp
cmpsl
dec
xchg
and
push
sub
push
sbb
lret
push
adc
cmp
sarb
cs
jmp
mov
insl
ror
pop
subb
sbb
popf
sub
mov
cmpsl
lods
fsub
push
sti
in
xchg
cld
repnz
adc
push
mov
inc
jp
loopne
out
sbb
and
in
mov
int3
imul
adc
add
add
mov
xor
mov
dec
ja
mov
push
cli
jg
aam
sbb
adc
xchg
and
adc
cwtl
cmp
inc
in
add
or
mov
mov
ljmp
pop
rclb
pop
inc
pop
addr16
jb
insb
xchg
pop
aaa
adc
xorb
sbb
pop
mov
lods
fidivs
scas
mov
and
scas
stc
sti
mov
test
mov
ret
test
pop
mov
push
ret
gs
inc
push
repz
cmp
or
inc
xchg
dec
stos
lods
fidivrs
rcr
insl
xor
xchg
sub
movsl
jge
mov
outsl
test
fcomps
mov
or
jecxz
aaa
cmp
push
aam
cmpsl
cmp
subl
pop
mov
sbb
cmp
loope
push
or
inc
dec
push
push
cmove
push
mov
push
stos
push
cmpsb
aas
pop
loop
imul
mov
or
arpl
pxor
movsb
aad
scas
fcoms
jp
test
mov
mov
iret
je
mov
adc
aas
sbb
mov
stos
cmpsb
xor
cmp
lock
jmp
xor
dec
jmp
and
movsl
cmc
push
push
inc
sbbb
xor
jle
add
push
lret
pushf
xor
add
xchg
hlt
addr16
mov
vmovhps
pop
into
or
dec
adc
xchg
and
jl
xchg
in
adc
sub
jnp
push
lahf
and
cltd
stos
rcrb
xchg
push
jp
dec
mov
stos
pop
lcall
and
add
loopne
std
xchg
out
movsb
lcall
daa
cmp
test
cltd
test
fadds
dec
jge
rcll
jnp
sbb
push
mov
and
pop
jno
xchg
mov
sbb
add
sti
sarl
mov
sub
ds
add
les
lds
rolb
mov
ds
scas
rcrl
sub
scas
xchg
add
jo
scas
cltd
push
add
sbb
test
adc
push
ror
jns
mov
mov
call
mov
fs
pop
or
sbb
adc
push
adc
aaa
dec
cmp
hlt
xor
jb
dec
movsb
cli
ffreep
aad
xor
push
out
cmp
arpl
inc
or
adc
sbb
data16
push
test
adc
inc
loop
push
mul
xor
sti
or
mov
callw
adc
lock
push
dec
aad
fildl
outsb
sti
movsl
cmp
loope
outsb
cmpsl
add
adc
xor
push
lea
push
inc
negl
stos
incl
inc
pop
cmc
push
aas
mov
cmp
mov
fbld
fldenv
and
ljmp
sub
jb
adc
cmc
mov
fbld
stc
sahf
dec
lret
pop
rep
enter
insl
lahf
xchg
inc
imul
push
jae
outsl
cs
lds
cmp
nop
and
js
pop
jbe
add
pop
mov
push
lock
ret
lods
cs
imul
into
dec
push
push
lods
push
shl
and
outsl
pop
rcll
dec
adc
addr16
xor
rclb
pop
mov
rclb
mov
xchg
mov
ret
cmp
and
push
push
adc
inc
aad
adc
lock
aam
pop
lock
ss
xor
cmp
add
add
sahf
fcmovnbe
roll
pop
loope
sbb
pop
push
pop
out
and
test
add
inc
shll
orl
add
clc
jge
and
or
pushf
mov
movsl
sbb
incb
aad
pop
fsubrl
xchg
mov
andb
cmpsl
int
xor
push
jo
sbbl
imul
xlat
push
mov
lea
test
push
ljmp
fimuls
xor
mov
lcall
inc
popa
enter
pop
push
sbb
dec
xor
mov
bound
push
push
adc
and
cmp
pop
sbb
sbb
pop
pop
push
cs
fidivl
scas
fsubrs
sarl
cmp
outsb
pop
jns
mov
adc
lahf
in
ja
dec
xchg
pop
rclb
push
lods
pop
push
int
mov
mov
mov
imul
pop
cmpsb
push
movsl
dec
sahf
repnz
int
outsb
push
push
adc
fs
movups
enter
mov
sahf
loop
outsl
cld
ja
jns
loope
sub
dec
mov
push
inc
add
mov
aam
or
cs
lods
mov
fxch
add
imul
mov
lret
cmp
sub
test
out
mov
cmpsb
pop
and
jnp
cmp
jne
adcb
xchg
or
adcb
aaa
in
pusha
fwait
xchg
mov
push
fcomps
popf
lock
and
dec
xchg
gs
data16
mov
and
xchg
mov
xorl
out
add
sti
push
push
or
fcmovb
jl
lahf
jmp
ja
aas
imul
stc
jae
in
or
mov
push
je
int
addb
ds
jne
in
xchg
cmc
push
cld
push
push
adc
mov
and
mov
je
jmp
out
aad
fsts
or
mov
xchg
test
inc
gs
cli
and
add
add
lret
push
sub
out
pop
jecxz
test
cmp
or
and
inc
adc
daa
js
mov
pop
jns
cmpsl
daa
mov
cmp
sub
fimull
mov
push
push
adc
pop
add
cmpsb
mov
push
out
call
pusha
in
mov
fucomip
out
cmp
popa
mov
xchg
inc
jecxz
cs
jmp
in
mov
jno
and
sub
les
adc
sar
addl
jg
xor
in
outsb
pushf
xlat
fsubrs
fidivl
pop
decb
arpl
pop
mov
shlb
sub
xchg
jecxz
es
add
fistpl
mov
mov
push
mov
pop
loopne
inc
insl
jbe
or
ret
xor
scas
scas
xchg
mov
jno
xor
sbbb
std
jno
inc
adc
xchg
in
into
pop
jb
push
pusha
in
add
imul
adc
sahf
ds
mov
fildll
dec
iret
lahf
jno
mov
xchg
mov
add
mov
out
cmp
in
hlt
mov
sub
mov
add
js
fdivs
and
cltd
push
lods
sub
inc
rorl
or
pop
outsb
pushf
es
lods
pop
mov
adc
dec
push
push
adc
cmovle
ja
jno
fs
add
push
push
scas
pop
in
push
jecxz
inc
dec
je
sub
aaa
test
mov
add
shlb
xchg
test
in
scas
cmpsb
cmpsb
ja
sbb
mov
lds
push
sub
mov
xchg
popf
mov
cld
ds
cmp
pop
sub
cwtl
cmp
inc
add
add
shrb
adc
scas
pop
loope
dec
pusha
jl
lcall
test
into
mov
loop
leave
lods
push
fdivr
xchg
and
and
pop
or
sub
push
hlt
test
add
xchg
pop
push
push
adc
ss
cli
add
pop
adc
xchg
adc
mov
mov
imul
push
mov
cli
mov
jp
loop
shlb
int3
xor
les
adc
cmpsl
pop
movsb
dec
out
and
divb
cmp
push
cmpsl
dec
ja
stc
mov
leave
add
lret
sbb
mov
xor
js,pt
adc
adc
daa
lret
push
cld
jno
pop
in
icebp
cmpsb
pop
out
cmp
stc
xchg
sub
in
sbb
sbb
mov
add
dec
sbb
cmpsl
jecxz
push
and
jnp
mov
sti
clc
test
gs
scas
aad
insb
fnstsw
sahf
mov
mov
adc
mov
negl
sti
cmpsl
push
aas
mov
sbb
lea
add
insl
int3
xor
je
movsl
loope
es
clc
dec
add
inc
xor
xchg
cmc
dec
xor
cmc
outsb
add
jnp
push
and
mov
test
nop
int
jne
jns
sbb
inc
je
jp
adc
out
add
xchg
add
std
mov
ret
xor
out
test
mov
xor
inc
jecxz
enter
sub
jbe
aas
dec
or
negb
xchg
test
jp
mov
xchg
mov
inc
inc
adc
adc
iret
mov
mov
in
sub
addb
aam
or
push
ficompl
in
xchg
popa
stc
push
shrw
daa
dec
in
or
dec
in
int
or
pop
xchg
xchg
pushf
xchg
scas
test
cmpsb
pop
jnp
in
mov
dec
adc
sbb
push
ljmp
mov
cmp
or
call
sbb
adc
js
push
outsl
or
mov
xchg
xor
out
jbe
shlb
inc
xor
repz
dec
int
inc
push
mov
adc
cmp
dec
jns
in
ss
push
pop
adc
imulb
ja
movsb
and
sahf
in
jno
inc
rorl
adc
sbb
xor
cmpsb
pop
sahf
into
mov
cld
jecxz
pushf
and
into
daa
notl
xor
cli
jp
push
adc
imul
push
out
cld
adc
mov
fdivrs
lahf
lods
in
or
mov
data16
lret
jb
or
xor
iret
or
and
mov
jbe
lods
inc
das
xchg
loope
jno
daa
fisttpl
mov
inc
or
rcr
mov
repz
xchg
iret
adc
ljmp
fcoms
adc
jo
ljmp
mov
int3
movb
repnz
addb
mov
sub
mov
int3
ds
and
add
call
ret
inc
sbbl
cmp
std
bound
scas
cs
adc
or
jg
pop
repnz
adc
out
and
sub
jmp
sbb
pop
aad
mov
aad
push
or
cmpb
outsb
scas
es
scas
in
dec
bound
push
test
mulb
adc
inc
addb
inc
std
pop
ljmp
lods
sub
scas
nop
push
stos
cmp
pushf
fbstp
fsubr
mov
add
sub
xchg
mov
mov
dec
dec
pushf
mov
jo
into
dec
test
jno
sahf
outsb
dec
movsb
fsubrl
lock
push
fsubr
outsb
adc
in
lret
into
adc
mov
movsl
push
lock
pop
je
pop
mov
dec
and
push
dec
or
mov
cmpsl
xchg
out
pop
repnz
adc
ljmp
sbb
fmulp
ret
and
sahf
orb
fstl
cmp
lret
loopne
addb
in
repz
xor
xchg
pop
testl
adc
and
or
mov
popf
je
daa
pushf
pop
outsb
jmp
shrl
push
adc
dec
jle
jecxz
enter
pusha
inc
jmp
mov
inc
scas
sub
popa
insl
mov
jo
mov
cltd
pop
lahf
inc
loopne
xchg
and
adc
je
mov
mov
pop
pop
pop
pusha
xor
adc
or
pop
in
mov
adc
adc
push
inc
inc
lcall
adc
cmpb
inc
cmp
mov
into
mov
jo
adc
das
sbb
lods
adc
push
adc
sub
jo
xchg
lret
mov
adc
cld
cmpl
pop
jo
jo
sbb
push
push
adc
mov
add
icebp
or
icebp
nop
jmp
int3
andb
mov
jne
bnd
test
fistpll
test
cld
adc
push
mov
mov
or
lahf
loopne
imulb
jle
jl
in
sbb
sub
cmpsl
xchg
call
rcrl
insl
mov
fbstp
mov
adc
fildll
lods
daa
dec
clc
cmp
subl
ret
test
insb
mov
faddp
addb
mov
push
adc
xorl
push
push
push
cmp
sbb
popf
mov
xchg
pop
and
mov
push
popa
dec
enter
lds
insb
jl
adc
das
and
pop
sub
pop
sub
cmp
gs
iret
xchg
pop
movsb
fs
mov
cmp
xchg
and
int
test
pushf
sbb
push
rcl
or
push
adc
jb
test
xor
test
xchg
add
jo
jmp
out
outsb
sbb
sub
sub
lods
addr16
cmpl
mov
jno
jne
cmpsb
jecxz
push
push
adc
xor
stos
xchg
dec
testl
je
imul
push
or
lea
push
jge
cmpsb
sti
add
cmc
push
sbbl
adc
scas
test
xchg
dec
mov
push
mov
int3
daa
std
dec
sahf
dec
jmp
sub
push
jb
nop
ret
xlat
lcall
test
fbstp
pushw
fiaddl
inc
rorl
hlt
and
in
pop
jbe
icebp
push
ljmp
clc
arpl
push
adc
cmp
test
lock
push
pop
ljmp
sahf
inc
test
es
int
lds
test
inc
sti
incb
sub
jmp
sbb
pop
fcomp
push
adc
imul
jns
cmpsb
or
repz
pop
xchg
xor
ds
lock
push
pop
std
insl
mov
and
test
stc
mov
icebp
and
stos
pop
test
or
repz
mov
lahf
insl
loope
movsl
add
cmpsb
loop
jb
inc
pusha
movsl
mov
pop
push
xchg
or
mov
mov
xor
dec
imul
xor
sub
add
jl
repz
pop
aam
pop
movsb
adc
call
or
loop
test
pop
jbe
aad
cmp
mov
sub
or
push
ljmp
fiadds
scas
movsl
pop
fninit
cmp
lods
pop
lret
pop
pusha
sub
imul
ja
mov
aad
pop
mov
mov
pop
in
lahf
test
bound
lret
orb
mov
outsb
sbb
cmp
inc
and
and
les
jmp
cmp
xchg
arpl
pop
sbb
inc
sbb
pop
or
sub
loop
out
xchg
stos
fisubrs
mov
or
imul
jae
and
add
js
fs
mov
xchg
scas
xorl
push
adc
xor
ret
sbb
sti
cmpb
jp
pop
sub
mov
das
aad
mov
shlb
push
mov
or
popf
sbb
adc
add
sub
xchg
out
dec
lea
push
pop
dec
inc
cmpsb
pushf
pop
xchg
fmull
incb
test
dec
andb
outsb
mov
test
fwait
sub
cs
push
das
pop
test
hlt
xchg
cmp
out
in
sarb
std
or
imul
repnz
mov
shlb
data16
mov
cltd
pushf
jno
sti
adc
push
scas
add
inc
adc
test
fucomp
shll
in
mov
mov
fwait
int3
sar
cltd
sub
sarb
inc
in
stc
xchg
addr16
sub
stos
mov
jmp
fnstsw
jo
cltd
addr16
and
and
and
lds
xchg
stos
sbb
shlb
aaa
insb
cmpsl
sbb
jbe
lea
sbb
fsub
in
ret
rclb
leave
shll
outsb
mov
jb
std
mov
jne
ficomps
cmp
int3
cmp
int
repnz
stos
sub
add
lods
mov
jo
fcmovu
arpl
pop
divl
les
sub
daa
and
inc
sarl
int3
jbe
loope
push
loope
stos
dec
mov
bound
les
leave
mov
jnp
xchg
cmp
insw
in
bound
adc
adc
push
cmpsl
arpl
or
cmpsb
sti
cmp
mov
pop
xchg
fadd
sbb
fisttpll
sub
cmp
fsubr
push
adc
mov
inc
insl
jbe
jb
dec
flds
sub
or
or
push
inc
push
vandnps
ficomps
sbb
inc
jnp,pt
inc
pop
stc
jno
inc
cltd
std
sbb
frstor
fsubrs
push
mov
shrb
mov
pop
test
jecxz
lcall
add
add
and
outsb
cmp
dec
xchg
sub
dec
ss
or
sbb
fistps
insl
mov
jmp
cwtl
jmp
dec
pop
xchg
leave
push
pop
pushl
fsubrl
mov
jp
aam
shlb
lret
pop
enter
int
jmp
mov
and
call
aam
push
cmpsl
xchg
jb
sub
adc
popf
add
cli
movsb
ret
gs
dec
test
mov
pusha
imul
imul
scas
xchg
hlt
add
es
loopne
popa
lods
xchg
inc
pop
cmpsl
dec
pushf
roll
pop
xor
and
rcrl
pop
pop
and
sub
in
pop
in
mov
aaa
sbb
js
mov
mov
ret
sbb
dec
pop
fcmovnu
insb
push
clc
mov
mov
je
mov
in
or
add
test
push
adc
mov
dec
scas
pushf
cmp
lock
push
xor
push
and
mov
lahf
inc
orb
pop
inc
sbb
fsubrl
xchg
and
rol
imul
add
push
cmpsl
sbb
aaa
outsl
fildll
mov
shl
imul
sub
push
rorl
loop
xchg
xchg
and
inc
je
imul
adc
ret
push
aad
dec
cmp
in
das
cmp
in
xor
pop
jle
ljmp
pop
or
ljmp
mov
scas
pop
sbb
mov
xor
gs
push
addl
stos
nop
icebp
pop
mov
fistps
imul
cltd
imul
jp
push
mov
sub
sub
cmp
xchg
das
inc
jecxz
pop
sub
in
jne
jnp
stos
pop
push
adc
mov
iret
mov
lret
pop
mov
pop
in
cmp
aad
jb
icebp
mov
adc
or
decl
xor
sub
push
fsts
push
repnz
je
jl
out
fdivs
or
cmp
fcomps
cwtl
cs
mov
subb
stc
test
clc
adc
jno
push
ja
jecxz
aas
xor
lret
fsubrp
add
in
cmpsb
fcomi
test
push
in
xchg
or
outsb
cmp
or
inc
push
sub
mov
mov
mov
fdivl
xchg
cmp
sbb
outsb
stos
add
hlt
jmp
pop
sub
aas
push
stc
mov
mov
imul
jae
mov
dec
cli
negb
dec
xchg
in
push
scas
pop
mov
inc
mov
insb
jl
adc
mov
popa
movsl
cmc
add
jecxz
mov
fnsave
arpl
jae
loop
push
in
dec
mov
repz
mov
mov
lea
mov
shrl
jae
ss
xchg
nop
inc
out
neg
rolb
repnz
outsb
fadd
dec
xor
into
dec
pop
lods
jo
mov
mov
jno
fistpll
push
xlat
mov
xchg
pusha
std
in
mov
mov
fdivs
jb
mov
ja
lods
loop
dec
inc
pop
fdivrl
je
mov
lods
sub
pop
lahf
imul
dec
mov
mov
mov
ror
mov
jne
xchg
dec
inc
fcomi
rcrl
mov
aas
add
int
pop
in
jle
sbb
cltd
in
cwtl
jno
adc
xchg
mov
sub
call
push
dec
mov
leave
xchg
add
fcoms
inc
xchg
js
jg
mov
std
int
xchg
cs
pop
andb
and
sub
sub
sub
inc
clc
cmc
cwtl
cmpsb
push
push
movsb
dec
test
sub
mov
inc
add
ljmp
scas
ss
movsb
dec
cmp
dec
xor
popa
sub
jnp
pop
pop
push
loop
arpl
lods
mov
add
addr16
ljmp
push
mov
ret
insb
jl
adc
pop
mov
push
clc
sahf
mov
fldenv
xor
in
nop
jnp
inc
add
mov
mov
pop
pop
popa
mov
loope
cmpsb
je
stos
pop
aaa
mov
mov
loop
enter
loopne
out
sbb
push
adc
lock
jl
in
inc
movsl
orb
in
jbe
pop
std
dec
shrb
pop
in
inc
cmp
insb
mov
or
sub
mov
aaa
xchg
adc
je
and
lods
cld
call
negb
jmp
jmp
cld
jmp
std
mov
jnp
data16
xchg
and
out
inc
xor
sub
nop
jmp
xchg
jg
sbb
lock
and
fldt
outsb
stc
adc
jg
inc
push
lea
je
fisttpl
xchg
push
push
adc
les
in
inc
ret
add
and
dec
out
inc
subps
icebp
mov
test
xchg
cmp
jge
adc
xor
sub
sahf
mov
cmp
or
mov
pop
adc
neg
mov
and
push
adc
mov
xchg
adc
xchg
bound
push
xchg
shlb
sti
jnp
stc
jl
sub
xor
sarb
push
or
out
imul
inc
mov
mov
movsl
test
xor
push
adc
cld
call
js
push
jno
mov
adc
xor
es
push
push
adc
gs
lds
jp
xlat
cmc
sub
cmpsl
test
cmp
loope
outsb
dec
mov
push
dec
or
sub
push
mov
sub
out
mov
das
int
aas
pop
movsb
leave
dec
inc
inc
dec
push
xor
cs
jge
mov
pop
mov
cwtl
sub
jecxz
or
sti
je
imull
push
pop
rorl
dec
lret
cmpsb
das
and
sbb
xor
push
adc
jne
lods
pop
out
push
repnz
rcll
xabort
clc
mov
xorl
jae
jmp
dec
xchg
daa
dec
and
xor
std
cmpsb
jnp
add
and
dec
inc
or
out
jo
imul
scas
xchg
mov
bound
insl
cmp
into
mov
mov
cli
cmpsl
inc
mov
push
int
jae
xlat
jno
mov
xor
pop
fisubrs
test
jl
lahf
leave
xchg
icebp
dec
out
cmc
enter
fbld
fistpll
fdivrl
jl
inc
lods
add
pop
adc
jmp
inc
cmp
sbb
sti
pop
or
lods
adc
pop
bound
push
pop
push
mov
inc
or
add
mov
imul
aad
mov
adc
sti
pop
jl
aad
or
sbb
pop
push
push
incl
jg
xlat
testb
iret
push
push
adc
ret
sub
arpl
enter
cmp
dec
jmp
fmuls
pop
cltd
and
out
lret
mov
xchg
add
jle
add
adc
leave
data16
mov
es
sbb
mov
mov
add
fstl
cltd
es
lds
aas
nop
and
test
dec
pop
add
inc
orb
aam
stos
jo
push
adc
imul
mov
je
mov
jnp
jae
mov
loop
loop
push
shrb
add
mov
out
mov
cmp
cmp
and
sar
je
mov
jnp
lock
jo
daa
mov
push
dec
xchg
sub
xchg
mov
shl
and
psubd
ljmp
lea
adc
xchg
mov
arpl
icebp
and
sbb
test
leave
cli
std
push
repnz
insl
push
sub
sbb
in
pop
push
lods
pop
mov
cmp
and
inc
adc
ljmp
mov
mov
cmp
mov
hlt
ljmp
inc
mov
pop
jno
cmp
pop
jg
outsl
test
sar
xor
mov
sbb
lods
cmp
negl
je
mov
aaa
sbb
add
adc
sahf
xchg
mov
sbb
push
add
lds
and
aaa
outsl
and
mov
jmp
out
sub
xchg
scas
mov
pop
int
xor
loopne
lds
mov
lret
push
scas
xchg
out
xchg
mov
xlat
push
lods
pop
int
xor
leave
push
sbb
add
rcl
int
cld
jno
aas
xor
xchg
and
xchg
mov
push
dec
js
pushf
jp
mov
lret
pop
adc
add
mov
xchg
es
in
sbb
add
rcll
push
ror
push
ss
or
lea
add
adc
fsub
mov
xor
push
outsb
pop
mov
push
xor
shll
cmp
hlt
sub
shll
dec
cmpsb
mov
stos
xchg
mov
xor
out
jmp
popf
push
cmp
aad
nop
sub
arpl
jmp
inc
ror
sub
or
lods
pop
xchg
fisubs
jns
jg
ret
repz
sub
sahf
inc
jno
push
jg
jg
in
sbb
aaa
dec
jo
adc
into
mov
je
sbb
jb
sarb
cld
int3
out
sbb
iret
cmpsb
inc
xlat
stos
dec
orl
es
mov
inc
xor
mov
int
lea
push
push
adc
ja
or
sub
pop
adc
ret
push
mov
rorb
es
push
rcrl
sbb
lods
pop
ss
or
fldcw
xor
cmp
sbb
outsb
and
xchg
sub
test
push
adc
adc
push
shlb
sub
mov
notb
mov
pop
movsb
outsl
fnstenv
push
adc
jo
push
adc
fcoms
adc
hlt
scas
jl
push
mov
aaa
int
push
stos
pop
lahf
repz
mov
lret
adc
lock
shlb
mov
push
and
and
outsb
clc
push
xor
popf
mov
cli
ss
cmp
leave
sub
cmp
sbb
mov
lock
pushf
loop
cmp
mov
outsb
xchg
arpl
push
mov
outsl
xchg
nop
repnz
gs
into
jg
leave
movsl
fldenv
add
sbb
cmp
pop
xor
sbbl
sti
sub
sbb
cmpsb
aas
mov
mov
jecxz
sub
insl
add
aas
sub
aad
adc
ficoml
mov
inc
xchg
push
sti
jo
push
ja
cmp
add
lds
fwait
stc
xor
fistps
jno
or
jo
adc
mov
cmpl
es
fidivl
pop
mov
cmp
xchg
and
aaa
lock
or
test
adc
adc
and
test
add
inc
orl
cmp
shl
imul
add
clc
add
ret
sbb
lea
and
rorl
cs
xchg
push
out
cld
pop
or
pop
push
sub
scas
dec
call
subb
inc
rolb
fcmovne
movsl
dec
xchg
xor
push
add
repnz
outsl
lods
std
push
mov
pop
or
popf
repz
fstps
daa
dec
xchg
mov
adc
sbb
js
out
jnp
aaa
lock
or
test
adc
insl
mov
out
jge
add
test
add
std
in
mov
sub
ficomps
test
daa
and
fisubrl
outsl
test
test
xchg
add
int3
enter
rclb
sbb
shlb
xchg
sub
xchg
mov
aaa
sbb
imul
ret
test
pop
mov
aaa
scas
lea
xchg
pop
out
inc
xchg
xchg
cmpsl
cli
pop
jecxz
push
leave
loop
add
push
mov
ret
adc
pop
mov
and
pop
lock
or
and
pop
mov
add
adc
stos
popl
repnz
adc
aam
outsb
clc
pop
or
xchg
ss
cwtl
out
fisubs
jno
adcb
scas
xlat
icebp
push
stc
mov
test
clc
add
jns
cld
pop
or
jge
ret
pop
test
pushf
inc
add
bound
lock
or
scas
popf
jp
cld
jo
adc
adc
add
scas
fs
aam
xchg
inc
ret
or
or
push
aad
cld
xor
shlb
mov
mov
xor
xchg
sub
adc
cld
adc
mov
and
push
adc
sti
ss
arpl
movsl
mov
push
cmp
mov
outsb
xchg
dec
leave
insl
xor
enter
cmp
mov
xor
mov
cmp
mov
arpl
and
inc
adc
mov
jnp
mov
les
mov
jb
adc
ss
aad
rdmsr
lds
ljmp
ret
data16
test
xor
dec
mov
jmp
cmpsb
inc
pushf
or
push
push
xor
adc
cmp
cmc
sarb
popf
inc
xchg
shlb
outsb
lahf
cmp
xchg
sbb
or
shll
pop
jns
addl
or
and
mov
sub
bound
clc
add
cwtl
sbb
stos
pcmpeqb
add
out
lods
stos
fildl
push
pop
xchg
outsl
adc
adc
sti
jecxz
jbe
ret
pusha
decb
mov
loope
loop
cmpsb
inc
mov
and
imul
xchg
add
enter
fistpl
out
fldt
movsb
mov
xchg
aaa
xor
in
push
push
adc
testl
cmp
pop
push
or
push
add
xchg
or
cmp
jle
ss
xchg
add
and
daa
add
push
lahf
std
jmp
jne
push
jns
jno
jne
ds
in
sub
pop
es
push
cmp
test
dec
test
loope
jle
xchg
dec
adcb
dec
pop
in
push
lea
push
mov
test
add
loop
orl
pusha
add
adc
jno
js
push
adc
xchg
add
jle
mov
cmp
leave
cltd
jle
mov
pop
adc
icebp
js
push
adc
inc
es
cmc
sub
push
das
xchg
popa
and
dec
pop
mov
mov
pushf
loope
adcl
and
ljmp
andb
pop
js
adc
inc
fstps
mov
adc
fnstcw
cmp
dec
into
movsb
jmp
out
dec
pop
negl
leave
fsubrs
jae
cmp
je
pop
sahf
arpl
push
addr16
popf
mov
lods
loope
mov
mov
xor
mov
push
dec
jmp
out
loope
and
insl
sub
mov
inc
or
add
inc
add
mov
xchg
and
jmp
xchg
fcompp
inc
arpl
lcall
add
jno
add
dec
xchg
and
lods
scas
mov
adc
jne
or
rorb
aaa
jmp
mov
cmp
pop
mov
xchg
mov
std
push
xchg
into
jnp
mov
push
mov
adcl
xor
out
xchg
mov
pop
lds
stos
or
add
add
mov
adc
mov
imul
jecxz
lcall
outsl
and
jbe
cmc
or
and
push
pop
loope
leave
mul
fdivrl
push
frstor
movsl
dec
or
lret
inc
or
mov
cmc
adc
sti
sarb
jbe
xchg
and
fldenv
in
push
lret
pop
mov
add
xor
push
pop
ret
jns
bnd
mov
pushf
dec
loopne
mov
ret
inc
imul
sub
cmpsb
jmp
sub
aam
jecxz
cs
rorl
rcrl
int
jl
push
testb
jp
push
daa
lds
pop
mov
ljmp
in
dec
bound
pop
out
xchg
and
in
xlat
leave
xor
xchg
push
inc
add
jl
daa
xchg
jle
dec
cli
adc
dec
cltd
mov
mov
mov
jo
popf
or
out
movsb
sub
cmpsb
cli
mov
lods
test
cmpb
xchg
outsl
fwait
dec
out
fldl
rcl
xchg
inc
faddl
push
dec
or
mov
adcb
or
xor
pop
mov
jle
or
pop
pop
pop
fsubl
push
dec
sbb
pushf
lret
jl
out
mov
mov
ret
dec
xorl
pop
in
mov
adc
and
js
fs
cltd
test
cmp
xchg
or
mov
movsl
inc
loopne
jle
and
std
or
gs
mov
imul
mov
stos
push
sahf
xor
daa
adc
xor
mov
bound
xlat
and
inc
sbb
mov
test
ss
push
sub
test
shlb
imul
aas
gs
addr16
inc
adc
sub
inc
jae
aaa
outsb
jl
clc
xlat
ficompl
xchg
shll
ficomps
inc
cmp
sub
das
mov
test
mov
push
clc
test
cmp
xor
cwtl
lahf
loope
pop
adc
add
adc
jb
jo
shll
or
mov
jo
dec
sub
add
pop
dec
into
sbb
int
lods
push
roll
daa
daa
dec
outsb
mov
pop
sbb
lods
std
push
push
hlt
jge
imul
mov
int
mov
push
or
inc
jo
popf
fwait
or
jmp
out
push
mov
and
pusha
dec
lahf
loop
sub
jns
mov
add
lret
cmc
mov
lea
and
adc
and
mov
outsl
inc
pop
ret
or
adc
cmp
loop
and
insb
mov
call
adc
das
test
iret
popa
mov
xchg
mov
sahf
mov
insl
mov
enter
decb
push
and
mov
mov
push
cmpsl
xchg
jb
inc
popa
dec
mov
add
loope
test
repnz
cmp
xchg
push
jbe
jno
inc
or
ljmp
adc
cmpsb
and
xchg
push
imul
jb
enter
imul
inc
or
inc
mov
and
mov
scas
push
ret
addr16
enter
jg
and
insl
dec
fiaddl
xchg
push
repnz
fsub
out
mov
mulb
xor
jmp
fninit
dec
pop
mulb
dec
xchg
push
stc
dec
fsubl
pop
xchg
mov
addr16
enter
cld
and
mov
pusha
ljmp
xchg
dec
xchg
and
adc
sti
mov
test
push
push
cli
jle
daa
fstpl
xchg
and
out
xor
add
outsl
stos
push
cwtl
mov
cli
dec
or
je
fstpt
andl
sub
xchg
push
out
shrb
cli
cmc
xchg
jmp
cmpsb
pushf
mov
aas
stos
fsubs
ret
in
sbb
ret
mov
mov
jns
sti
sar
nop
aad
fidivs
mov
lret
pop
xchg
xchg
je
mov
sub
inc
mov
mov
mov
push
movsl
data16
or
and
fcompl
cltd
jae
cmpsl
fidivrl
and
addb
dec
cltd
outsl
nop
imul
sub
testb
mov
cmp
sub
dec
adc
lock
push
loop
loope
cmp
out
sub
cmc
cli
shld
rorl
pop
testl
fcomip
enter
xor
add
adc
cwtl
scas
sub
clc
sti
cmp
pusha
xor
add
loopne
mov
fildll
loope
cs
add
int3
adc
aaa
jmp
mov
ja
jmp
lret
or
int3
push
xchg
outsl
std
jbe
pop
cwtl
cwtl
imulb
adc
sbb
movups
dec
into
push
push
out
jp
imul
mov
adc
sub
inc
clc
mov
add
lea
ret
movsl
dec
out
mov
xchg
dec
xchg
loope
mov
cli
mov
aam
ret
add
out
push
cmpsl
dec
in
cmp
and
sub
addr16
out
ret
orl
cmpsl
pop
cmpsb
xlat
cld
xchg
mov
stos
fnstcw
sub
inc
fstps
fs
out
dec
rcr
xchg
out
cmc
sti
in
adc
cmpb
rclb
and
and
xchg
mov
ret
xchg
pop
adc
jo
and
inc
and
push
mov
dec
xor
scas
pop
sub
movsb
lcall
je
cwtl
and
or
adc
adc
xchg
adc
mov
in
mov
mov
mov
fsubrl
cs
rcll
rolb
mov
popa
out
addr16
adc
xor
ret
jb
or
aad
xor
out
mov
clc
xor
or
in
cmp
xchg
repnz
push
xchg
cmp
ljmp
fwait
inc
scas
mov
rorb
and
cmp
lods
mov
popw
lds
mov
cwtl
js
pusha
hlt
outsb
fistpll
add
push
movsb
cmp
sbb
pop
inc
sub
icebp
and
sbb
mov
mov
xchg
adc
dec
sar
popf
sbb
mov
and
lea
xchg
arpl
test
adc
dec
xchg
push
sti
xchg
lea
stos
rolb
push
mov
mov
loopne
stos
fmul
adc
loopne
loope
sbb
sub
cmp
fmul
movl
std
xor
rorb
xchg
out
push
fwait
jns
outsl
std
clc
inc
jmp
imul
aam
xchg
pop
mov
and
shlb
je
test
aaa
sbb
cmp
mov
sbb
out
dec
cmp
outsb
cmp
movsl
pop
mov
xchg
adcb
inc
or
xchg
test
dec
bound
pushf
lods
pop
and
popa
lea
repnz
cli
cmc
ljmp
fstpt
sub
fsubrp
dec
call
outsl
int
mov
adcl
in
pop
test
push
pop
sbb
clc
jbe
lea
jbe
decb
push
sbb
sahf
je
ljmp
mov
loopne
mov
push
push
push
loop
mov
mov
test
inc
xchg
and
push
dec
vmovaps
or
and
sti
hlt
lahf
stos
sti
fnstenv
push
repnz
popf
sub
jmp
push
imul
mov
add
adc
mov
fnstsw
cmp
cmp
sbb
add
movsb
lahf
divl
dec
push
sub
test
pop
stos
and
jecxz
mov
push
insl
push
sub
popa
aam
sbb
pop
mov
or
movsb
inc
cwtl
pop
hlt
arpl
mov
pop
add
sub
fsubrs
cld
or
loope
mov
test
and
push
lret
ja
sbb
imul
xchg
pushf
jmp
cld
orl
bound
jno
inc
jne
xchg
addr16
fadd
sti
pop
cmp
mov
aam
sbb
xchg
jb
or
test
int
fsubrl
aad
pop
sub
lock
cwtl
or
and
pop
pop
mov
cwtl
pop
sub
inc
int3
ud1
cmpsb
push
jg
jb
inc
bound
in
insb
inc
xor
mov
dec
add
push
and
fmuls
pop
inc
out
pop
mov
cmp
fmulp
les
test
jo
aas
ja
scas
pop
mov
xlat
cs
push
mulb
xchg
mov
lret
ret
or
popf
gs
mov
xchg
mov
leave
shlb
push
xor
add
es
and
push
cmp
hlt
data16
cmpsl
test
jl,pt
cmc
pop
outsb
movsl
xor
cwtl
add
adc
cltd
add
out
cwtl
add
or
lcall
or
add
lret
adc
cwtl
add
lret
adc
cwtl
add
insb
cltd
add
push
cltd
add
push
cltd
add
popa
cltd
add
add
add
lret
adc
cltd
add
int
add
pop
lcall
sub
add
int
add
insl
popf
add
jae
add
lods
popf
add
int
add
pop
popf
add
mov
xor
dec
mov
fadd
int
push
notb
rcl
lret
movaps
mov
sub
dec
std
inc
cltd
cltd
mov
aas
in
repz
jb
out
mov
mov
shrb
ret
fisubs
xchg
mov
jecxz
stos
popa
adc
jge
mov
add
arpl
call
test
cmp
enter
push
push
test
dec
call
test
mov
or
push
mov
add
pop
dec
sbb
cmp
fsubrl
loop
lahf
mov
sbb
std
cli
aad
adc
xchg
scas
dec
loopne
mov
mov
sbb
fadds
xchg
icebp
cmc
ljmp
xchg
push
test
es
and
test
or
add
pop
cwtl
outsb
pop
std
or
mov
dec
xchg
mov
adc
outsl
adc
mov
ja
xchg
pop
pop
mov
outsb
jecxz
lods
cs
mov
pop
fildll
loope
push
shrl
sarb
fbld
data16
add
inc
aad
in
push
push
pop
sahf
pop
pop
cmpb
sahf
lcall
mov
sbb
mov
mov
add
in
push
es
sbb
fldenv
sbb
dec
outsb
cld
cli
push
dec
jo
outsl
push
mov
push
pop
out
movsl
cmp
cmpsb
pop
into
lea
mov
inc
std
ljmp
sarb
sahf
dec
test
inc
xchg
sub
or
jle
rcrl
out
test
or
movsl
pop
xchg
fidivl
mov
jne
sbbb
insl
push
mov
out
cmc
out
stos
and
mov
sarb
push
hlt
insb
ds
cmpsl
pop
mov
sti
js
arpl
lret
out
shrl
imul
push
cmpsb
and
ret
cmc
hlt
iret
mov
push
sub
mov
fdivl
and
push
inc
and
add
sub
push
decb
xor
xchg
mov
ljmp
es
mov
ret
lock
adc
subb
cmp
cmp
es
scas
xlat
xchg
bound
lea
jecxz
int3
je
ret
mov
jb
pop
push
cmp
xor
icebp
stos
outsl
sub
mov
bnd
mov
xchg
add
jl
mov
mov
xor
lahf
decl
inc
leave
add
fsin
sub
movsb
sbb
jmp
shr
xor
ret
leave
and
add
jne
and
test
mov
xor
popa
lahf
roll
jecxz
mov
int3
adc
mov
push
xchg
mov
mov
push
fnsetpm(287
loop
push
mov
cli
lcall
ds
jb
fwait
insl
pop
aad
gs
in
pop
sub
ljmp
push
or
cli
mov
int3
ljmp
cmp
fstpt
xor
mov
push
mov
jle
nop
pusha
mov
pop
mov
push
jae
xor
and
add
adc
enter
pop
sub
jo
loop
ss
jb
mov
loope
je
mov
jle
mov
popf
jno
push
addb
pusha
mov
dec
pop
jl
add
cld
sbb
cmp
jge
loop
adc
or
lods
push
imul
movsb
inc
sbb
mov
in
mov
xor
mov
movb
es
addr16
fstpt
or
into
sub
call
or
sbb
mov
inc
mov
arpl
enter
inc
in
dec
loope
pop
rclb
pop
xor
lea
or
inc
push
loopne
les
sub
addr16
fld
paddsb
fildll
push
xchg
push
es
pop
sbb
xchg
push
sti
jle
loope
int
pop
negl
lds
inc
idivb
xchg
jecxz
inc
test
adc
cmp
sub
mov
xor
nop
mov
ljmp
shl
xchg
cmpsl
popa
pop
cli
movsb
cmp
cmpsl
pop
mov
stc
push
cs
shrb
cli
cmc
pusha
xlat
frstor
dec
test
pop
xchg
and
inc
sub
adc
arpl
mov
xchg
ljmp
scas
mov
faddl
pop
mov
mov
popa
aaa
in
ds
mov
dec
sbb
lret
sbb
fsubrl
jnp
jae
lods
pop
lds
cwtl
movq
or
jmp
inc
sub
mov
ficomps
and
lods
and
lret
inc
imul
pop
movsl
push
movsb
xor
jle
pop
inc
lods
pop
mov
int
das
inc
pusha
enter
decb
push
es
dec
xor
push
and
stc
adc
jg
rorl
mov
inc
xchg
and
shrb
ja
and
cwtl
ja
cmc
or
int3
push
loop
aad
push
rorb
and
jbe
mov
xchg
fsubs
mov
clc
repnz
sti
sub
test
js
sbb
cmp
fistps
push
lods
int3
data16
mov
outsl
mov
lret
std
cld
test
jge
out
push
lods
pop
mov
pop
jl
xor
adc
jg
inc
roll
dec
rcll
jnp
add
add
scas
jne
ficomps
xor
push
insb
and
out
ret
mov
pop
pop
bound
xchg
out
outsl
jl
xchg
mov
inc
loop
lret
popa
popf
leave
add
iret
pop
fildl
and
xchg
loopne
rclb
pop
push
add
shll
pop
pushf
cmc
repnz
cmp
mov
fimull
rcl
rcr
mov
cwtl
inc
repz
inc
sbb
aas
fisubl
movsb
mov
aas
add
mov
test
xchg
dec
scas
in
mov
test
xchg
mov
dec
mov
mov
mov
sub
and
xchg
push
dec
shlb
xchg
lret
stos
xchg
popf
test
jae
adc
jl
xchg
out
push
xorl
pop
pop
ror
push
sbb
lret
pop
bound
and
xor
outsb
sbb
pop
ret
xchg
push
dec
out
sub
subl
push
jmp
imul
lods
xchg
shl
dec
sub
pop
gs
adcl
inc
fldt
push
push
mov
lret
push
rcll
les
and
push
ffree
dec
test
sbb
lods
andb
or
int
push
stos
inc
out
mov
mov
add
push
mov
sbb
inc
aas
dec
cmp
mov
stos
daa
cmp
addb
push
idivl
mov
ss
jl
insl
mov
imul
lcallw
adc
lods
imul
ja
out
or
int3
jg
xor
mov
dec
lock
cmp
xlat
fsubl
stc
xlat
loopne
mov
mov
rorl
cwtl
stc
xor
cmp
pop
inc
push
andl
test
sub
adc
lods
xchg
repnz
jb
stos
imul
repnz
dec
sub
jne
jle
mov
jge
shrb
push
fs
lods
add
cmp
lds
inc
push
mov
int3
inc
movsb
dec
out
mov
rclb
sub
ja
stc
mov
addb
push
cmc
cmc
ljmp
push
mov
shl
cmp
stc
cmpsl
dec
pop
shl
les
movb
adc
in
xor
cmp
push
dec
add
mov
lret
imul
and
lret
loop
test
dec
sbb
movsb
addl
mov
shlb
sarb
movb
mov
movsb
scas
add
sub
cwtl
mov
or
jg
mov
jns
data16
push
jg
dec
pop
into
insb
fcmovb
je
stos
fsubrs
pop
lea
inc
dec
movsl
fwait
cld
xchg
dec
push
std
lock
fbstp
pop
addr16
stc
cmp
dec
das
int3
in
std
push
xchg
mov
push
mov
pushf
lods
fsub
inc
pop
cmp
fsubrl
mov
aaa
lret
and
dec
xchg
scas
mov
dec
push
popa
lea
and
aad
in
sub
movsl
or
gs
lock
out
inc
lock
xor
pop
or
mov
pop
pushf
outsb
scas
inc
dec
dec
xchg
and
xchg
pop
dec
jecxz
pop
pop
sub
loop
stos
mov
ljmp
mov
mov
in
xorb
pop
lds
ss
inc
adc
dec
xlat
cld
pop
mov
leave
cmp
and
movsb
dec
popf
mov
popa
inc
addb
decl
pop
xchg
adc
pop
fidivrs
jp
adc
sub
xchg
sub
bound
or
xchg
and
out
mov
out
rcl
push
aas
mov
mov
rolb
dec
or
or
xchg
out
mov
mov
out
xchg
push
outsl
push
adc
inc
cld
cmp
ds
fisubrl
popf
mov
pop
sub
pop
sti
add
pop
push
add
pop
int3
loopne
add
rcr
mov
xchg
leave
mov
add
dec
pop
addr16
sti
pop
enter
fcoml
inc
test
subb
sbb
jb
jle
cmp
lcall
sub
push
pop
fistps
mov
jo
xor
push
es
daa
sbb
adc
cmp
dec
int
inc
into
cmpl
out
mov
jl
cli
sbb
push
cmp
out
add
or
mov
jne
mov
in
mov
adc
pop
jmp
sbb
clc
mov
cmc
push
nop
gs
lods
pop
xor
rol
or
icebp
push
test
lea
push
jecxz
mov
adc
sbb
push
lock
imul
xchg
mov
mull
sbb
push
out
std
repnz
in
and
push
jg
xlat
pop
xchg
sub
lods
push
xchg
add
xor
shl
lock
jle
mov
int3
pusha
adc
push
inc
clc
sub
shll
pop
sbb
and
inc
mov
sub
inc
lock
movl
cmp
nop
inc
mov
lcall
jno
mov
xchg
ljmp
or
mov
mov
scas
shlb
ret
shl
push
cmp
xchg
jo
sbb
sub
adc
cmp
cmp
mov
andl
imul
mov
dec
mov
pop
and
jl
push
cwtl
mov
sbb
jp
push
repnz
fwait
in
jmp
loopne
and
lds
adc
sub
stc
sub
nop
and
or
push
fucom
push
ss
fcmovnb
jg
dec
jns
lods
rcrb
jmp
nop
and
mov
add
push
sub
push
dec
ret
dec
scas
cmpsb
xchg
mov
adc
or
ja
mov
xor
mov
xchg
and
mov
outsb
gs
sti
lods
pop
mov
dec
jp
xchg
add
aaa
repnz
es
mov
xor
inc
adc
lcall
inc
add
or
mov
pop
adc
addr16
mov
pop
rol
adc
adc
ja
addl
ret
ja
push
mov
adc
mov
sub
or
je
inc
adcl
call
pop
and
dec
xchg
push
imul
jb
enter
xchg
xlat
push
mov
inc
jp
loopne
cmp
not
xchg
sub
es
lret
push
testb
and
jg
nop
jo
adc
mov
fildl
adc
pop
cmpsl
lds
idivb
nop
and
or
cmp
mov
in
dec
bound
push
test
cmp
and
or
mov
add
imul
mov
mov
cmp
pushf
cmp
push
push
mov
ljmp
push
out
add
and
pop
cmpsb
movsl
into
ss
cltd
jns
std
addl
adc
cmc
mov
in
cmpsl
mov
push
outsb
pop
lods
dec
call
xlat
sub
add
dec
xchg
push
push
mov
dec
out
movsl
mov
es
dec
push
pop
jp
cld
mov
clc
hlt
mov
pop
pop
mov
push
sti
or
lock
cs
jno
js
push
ret
add
push
pop
mov
mov
or
sti
iret
mov
adc
sbb
inc
cmp
inc
outsl
xchg
sub
dec
fimuls
push
xor
out
aam
test
sub
inc
repnz
mov
test
jnp
push
adc
jo
push
mov
adc
js
xor
add
mov
pushf
add
and
leave
lods
movsl
lods
xor
jmp
ret
pushf
mov
inc
lods
ja
push
mov
pop
sbb
movsb
xchg
cmc
sub
shll
jb
addl
andl
xchg
mov
jecxz
test
leave
nop
and
dec
movsb
mov
cld
adc
shlb
daa
mov
push
dec
push
cmpsb
dec
bound
sbb
nop
jo
adc
push
sub
add
xchg
mov
movsb
dec
pusha
dec
outsb
sbbb
mov
inc
stc
add
dec
fldt
pop
sbb
mov
xchg
mov
outsb
sbbl
pop
in
hlt
aas
fcoms
sub
adc
nop
adc
cltd
stos
xor
shl
inc
out
jp
xchg
pop
in
repz
test
cld
push
sub
stos
sahf
adc
jbe
aas
js
in
xchg
cmp
mov
cmpsb
push
push
mov
inc
or
mov
std
imul
push
jg
movsb
stos
loopne
xlat
cmc
or
popa
popa
data16
add
mov
data16
add
arpl
popf
or
xchg
movsl
adc
ljmp
pop
jae
jb
sbb
lods
and
push
daa
cmp
jle
jle
push
sub
dec
or
stc
repnz
adc
insl
rcl
add
cmpsl
push
in
sbb
adc
repz
stos
or
jg
rcrb
inc
or
mov
and
sahf
dec
inc
mov
cmp
mov
mov
push
inc
popl
xor
ret
enter
out
and
add
xlat
pop
fldenv
xchg
int3
outsb
jecxz
lods
cmp
pminsw
inc
jns
sub
ret
jo
lock
aas
mov
jecxz
popf
push
push
mov
or
pop
pop
jle
sbb
pop
lret
xchg
fcmove
int
outsl
or
adc
dec
pop
fildll
add
or
fstps
sbb
faddl
shlb
adc
in
jl
loope
enter
pop
inc
sbb
xchg
in
inc
jecxz
jns
loop
xchg
cmp
and
scas
mov
ret
mov
sbb
push
rcrl
push
adc
mov
mov
ret
or
sbb
data16
cmp
xchg
and
cwtl
lret
ljmpw
fdivrp
repz
push
movsb
fcoml
clc
mov
mov
sbb
imul
push
cs
pop
fmuls
xchg
xchg
push
imul
ljmp
jnp
ljmp
jns
loopne
bound
ret
lods
int
lret
mov
xor
mov
and
inc
rol
adc
dec
out
sbb
push
movsb
mov
scas
ret
fldln2
and
jmp
push
mov
cld
fcmovnu
push
movsl
cmp
cs
shr
xor
dec
popf
cmp
stos
cmp
lret
add
leave
lds
stos
xchg
stos
mov
jmp
dec
in
sbb
pop
iret
pop
aas
sahf
inc
arpl
movb
xchg
lock
lods
xchg
lods
mov
jbe
dec
jmp
mov
rorb
pop
enter
ja
fs
dec
push
loop
xor
loopne
popf
mov
inc
in
cmpl
daa
cld
testl
out
rclb
cmp
xlat
pop
sub
jg
cltd
inc
jno
or
movsl
push
add
jo
sbb
fmull
rcrb
mov
loopne
jae
fwait
xchg
dec
popf
xchg
push
scas
xchg
aas
inc
lods
jb
std
or
rclb
int3
std
xchg
push
loopne
xchg
test
clc
movsl
stos
xor
jns
lahf
int
pop
leave
fdivrl
xchg
add
add
lds
imul
hlt
movsb
fwait
ss
je
adc
out
and
fs
stc
mov
or
bound
xor
cli
outsl
ljmp
xor
adcl
lahf
fcmovnu
loop
pop
in
dec
xchg
push
cli
dec
cmp
adc
lss
mov
mov
inc
fldt
sbbb
negl
enter
inc
outsb
dec
dec
fnstenv
movsl
or
aad
mov
dec
ds
jecxz
sub
imul
xor
frstor
mov
insb
xor
fmull
jp
stc
push
sub
jmp
pop
xchg
inc
scas
inc
arpl
cld
xchg
inc
pop
dec
push
mov
notl
or
mov
lcall
mov
int
pop
lcall
fsubr
lea
xchg
loopne
xchg
jmp
cltd
repnz
jo
stc
cltd
sub
shl
loop
leave
in
ror
js
adc
add
jmp
or
adc
mov
dec
fs
fdivrl
andl
inc
add
movb
push
pushf
pop
sbb
mov
adc
loop
cmp
jb
mov
out
pop
aas
and
orb
and
jae
pusha
data16
ficoms
lret
dec
inc
pop
mov
jbe
jno
inc
push
push
subl
out
mov
push
rcll
mov
outsl
pop
js
lds
push
ljmp
pop
out
out
ret
test
stc
push
push
adc
sahf
mov
nop
jno
xlat
mov
or
icebp
imul
aaa
mov
mov
addr16
rorb
lcall
push
clc
push
sbb
xchg
aad
mov
aas
adc
mov
add
test
push
adc
and
aam
add
xchg
mov
adc
cmc
faddl
leave
jne
cli
jg
ret
ficoms
dec
out
inc
or
push
test
mov
mov
cmc
faddl
sarl
sbb
dec
out
mov
repnz
icebp
xorl
add
push
sbbl
xchg
push
repz
aam
fcoms
sahf
lea
aaa
out
test
jno
add
repz
loopne
sub
in
and
or
imulb
inc
mov
pop
sahf
xor
bound
cmp
rcrl
aam
push
mov
inc
mov
std
hlt
cmp
lahf
fisubs
adc
mov
adc
lea
insb
and
vsqrtps
fsts
fimuls
fiaddl
push
adc
dec
mov
cld
mov
lods
pop
out
push
bnd
rcll
cmp
sbb
mov
pop
call
dec
nop
es
sub
out
xor
jns
add
insl
pop
cmp
decl
cltd
mov
add
pop
lods
mov
insl
mov
popf
les
xchg
or
cvtdq2ps
loop
lock
inc
fnsave
pusha
pop
dec
or
sub
inc
sbb
push
lret
loope
out
jmp
iret
outsl
repnz
addl
pop
or
data16
insl
divb
std
movsb
rcl
jb
sti
pop
mov
pop
iret
push
movsb
lret
jmp
jo
mov
push
cwtl
es
stos
scas
shrl
inc
push
or
jbe
loop
mov
mov
pushf
jmp
insl
cmp
dec
test
test
sub
mov
or
add
inc
xor
movsb
push
push
imul
je
sahf
sbb
stos
adc
or
fs
dec
fs
ret
movd
xchg
outsl
addb
mov
arpl
push
push
adc
stos
aas
sub
test
stos
dec
or
push
lea
mov
in
pop
test
xchg
sub
das
stos
lret
test
inc
orl
xlat
in
push
cmpsl
dec
jno
jge
push
cmp
jecxz
pusha
lds
inc
inc
cmp
or
and
xchg
and
rorl
in
call
data16
push
adc
xor
inc
out
add
insl
test
lahf
push
pushf
lahf
js
sbb
inc
cld
mov
and
inc
lods
add
pop
push
mov
mov
shlb
fldt
add
gs
outsl
xchg
sbb
mov
int3
jl
jge
iret
repz
xor
jmp
into
imulb
fcmovnbe
and
mov
add
sub
jo
in
cmp
inc
mov
mov
mov
cld
mov
dec
xor
or
mov
test
aad
shlb
sub
mov
pop
push
pop
out
lret
dec
scas
xorl
or
mov
vandnpd
movsb
mov
inc
movsb
sahf
iret
lahf
xchg
jno
das
or
imul
mov
int
xlat
push
lods
pop
mov
xor
nop
and
adc
ljmp
push
jmp
test
mov
repz
std
aam
divl
stos
outsb
fistpll
or
inc
xchg
and
sub
in
das
incb
dec
repz
addr16
stos
or
mov
adc
jg
xlat
mov
push
rorl
pop
pop
cmp
neg
mov
jle,pt
daa
and
jne
inc
push
push
adc
mov
pop
jl
lods
insb
and
push
mov
adcl
rclb
sbb
dec
sbb
dec
pop
faddl
pop
mov
aas
call
fstps
out
jg
rcrb
push
dec
xchg
pop
jae
out
fcompl
mov
and
dec
inc
orb
mov
insl
cmpb
xchg
jmp
outsl
push
dec
jg
or
jl
ljmp
mov
fcoms
mov
insl
push
add
pop
push
in
mov
aam
xchg
cs
lret
pop
adc
push
adc
sahf
or
mov
enter
jge
and
add
pop
adc
daa
add
push
push
cmpsb
shll
jp
adc
push
mov
mov
and
and
fsubrp
lcall
lods
or
jmp
inc
cmpsl
sbb
cmpsb
xlat
and
and
xchg
mov
jne
rcrl
ljmp
inc
and
mov
loop
xor
xchg
sub
scas
iret
dec
leave
mov
xor
jp
mov
out
xchg
test
fnsave
enter
mov
jle
adc
leave
mul
sbb
shl
mov
sub
in
in
mov
push
cs
pop
addr16
push
mov
in
out
xchg
dec
lret
sbb
inc
scas
jns
mov
call
int3
sub
push
adc
cmp
jb
push
lock
stos
test
push
loopne
rcll
push
fstps
cwtl
cmpsl
sbb
add
mov
mov
pop
je
xchg
sub
mov
cs
movsl
stos
pop
testb
test
inc
pop
pop
mov
adc
movsb
mov
pusha
mov
mov
shlb
or
pop
jae
sbb
mov
movsb
xchg
test
aad
scas
adc
sar
xchg
sahf
jo
cmp
xor
int
sub
cvtdq2ps
pop
loop
ss
scas
dec
xchg
mov
bound
sbb
cld
std
add
fucomip
add
dec
xchg
lods
cmpsb
xchg
mov
ja
mov
adc
push
dec
les
les
pop
mov
lea
rdtsc
mov
scas
cmpsb
push
test
mov
sbb
jmp
adc
lds
arpl
je
clc
cmp
pop
jns
ds
jo
mov
jp
loope
pop
and
cmovge
mov
addb
lea
fidivrl
mov
mov
add
jno
lods
xchg
mov
sbb
sahf
sub
push
outsb
sbb
out
mov
mov
pop
js
dec
cld
dec
jmp
lods
sarl
adc
mov
xchg
shrb
adc
xor
jns
adc
mov
aam
sarb
out
push
pop
mov
cmpsl
scas
aad
cmp
xchg
xchg
jg
stos
cltd
daa
lret
cmpsb
push
or
cmc
cld
jg
iret
jno
icebp
and
sub
cmc
push
ret
adc
loop
into
sbb
sahf
pop
leave
nop
and
lock
and
cmp
and
repz
rolb
pop
mov
inc
adc
push
ljmp
xor
loopne
loope
sub
loop
popf
rorl
xor
inc
ljmp
aam
call
xor
fsubs
das
mov
lcall
adc
aam
sub
dec
xchg
and
xchg
scas
xchg
out
lods
lods
shrb
dec
outsb
sbb
pushl
cld
push
aam
cs
dec
xchg
push
cmp
and
xchg
pop
pop
mov
stc
test
addb
add
repz
add
xchg
push
loop
push
adc
in
adc
test
enter
cli
rorb
sahf
inc
out
test
xchg
nop
cs
rol
lea
inc
or
push
xchg
and
loop
and
test
sub
mov
stos
mov
aam
outsl
fists
or
ljmp
xor
mov
loopne
dec
xchg
sub
pop
dec
je
negl
aaa
ret
dec
inc
or
cmc
popf
jbe
inc
adc
pop
push
cmp
sub
dec
outsl
mov
xchg
test
lock
std
mov
or
lret
cmp
fsubp
cmp
fcompl
cmp
insb
mov
cmp
ljmp
pop
in
and
scas
pop
ret
adc
sbb
jns
sarb
mov
adcl
insb
cmpsl
adc
out
push
ss
xlat
mov
push
push
and
loope
mov
xchg
xor
pop
mov
xor
das
mov
jae
out
cmp
push
pop
gs
cmc
pusha
cmp
push
mov
ret
daa
mov
pop
cs
filds
pmaxub
stos
scas
leave
outsl
cmp
das
inc
jmp
scas
xor
adc
mov
cwtl
adc
dec
in
loope
xchg
pop
push
adc
and
sti
lock
out
sbbl
addr16
fistpll
and
push
test
xor
fsubs
fisttpl
cmpsb
lods
sbb
std
or
pop
push
pop
lahf
push
xchg
sub
pop
fildll
dec
fistpl
loopw
int
dec
cmpsl
test
stc
test
adc
pop
ja
mov
xchg
cmpl
adc
inc
fdiv
jmp
in
jo
push
les
push
aad
pop
pop
sbb
and
jg
mov
pop
sub
pop
cmp
stos
inc
cmpsb
leave
adc
test
test
and
dec
fidivs
push
fs
or
or
xchg
and
out
lods
mov
cli
push
insb
fdivrl
or
cmpsb
mov
pop
mov
cltd
dec
push
pop
ficoms
pushf
lahf
cmp
dec
es
push
lock
mov
scas
std
fdivl
sub
or
adcl
push
ss
push
sti
in
es
mov
sub
insl
enter
dec
push
lahf
xchg
cwtl
fwait
push
sbb
xor
add
push
mov
sahf
lret
jg
mov
and
dec
ss
pop
jno
sbb
or
out
adc
iret
sti
jmp
ljmp
add
stc
xor
ficoms
aam
outsb
mov
in
xor
mov
insb
xlat
aas
sub
xchg
push
sbb
cmp
sub
pop
stos
jne
sbb
lret
es
lods
mov
sbb
push
cmp
mov
push
ret
mov
jno
je
fwait
mov
dec
sub
jle
mov
test
enter
push
repnz
sub
dec
mov
mov
repnz
test
lods
shl
gs
mov
sub
pop
mov
imul
hlt
jge
inc
xorb
mov
xor
push
adc
jge
pusha
nop
and
jne
arpl
rorl
insl
inc
inc
pop
fsubl
jo
in
cltd
into
inc
out
and
outsb
mov
inc
jne
imul
mov
popf
mov
mov
fcom
ljmp
and
cmp
inc
pop
mov
inc
push
in
inc
addb
pop
or
sub
jbe
popf
aas
xor
ds
dec
pop
mov
push
mov
or
inc
dec
out
and
sub
mov
mov
and
popa
lea
insb
lret
out
ret
push
xchg
rcrb
hlt
sbb
push
and
shll
rol
std
cli
pusha
ljmp
cmp
rcrb
push
jae
inc
in
mov
pop
loop
push
lods
push
xor
es
xchg
mov
movsl
cmp
cmp
test
mov
push
lock
addb
inc
stc
paddw
pop
fidivrl
loopne
dec
xchg
sub
pop
dec
je
or
aaa
sbb
push
mov
cmp
movsb
dec
pop
and
cmp
test
aas
fwait
pop
dec
push
adc
add
aad
inc
daa
dec
xchg
imul
and
ss
scas
iret
ds
cld
out
jmp
adc
xor
push
mov
movsl
mulb
pop
mov
inc
add
push
adc
enter
sbb
cmp
xchg
xchg
test
das
mov
in
inc
pusha
push
insl
mov
stos
imul
lret
fisttps
lods
adc
add
xor
push
je
jl
jne
jl
inc
pop
pop
and
xor
inc
enter
and
cmp
repz
into
xor
scas
shll
fstps
jg
les
cmp
mov
xchg
lods
shr
hlt
in
mov
dec
subl
loope
mov
fwait
add
fdivs
movsl
and
mov
repnz
inc
sub
out
aam
les
push
movsb
adc
or
fisubs
jge
or
adc
mov
test
sbb
idivb
add
push
gs
leave
adc
data16
outsl
xchg
pop
jno
push
and
jle
add
aad
adc
aam
dec
cmp
push
fcoml
push
inc
adc
jns
lea
add
jae
jmp
cmp
dec
sbb
inc
lock
dec
lahf
mov
daa
inc
xchg
imul
dec
jecxz
mov
fadd
fidivs
divl
lcall
shlb
std
imul
push
ljmp
cvtps2pi
repnz
testb
aad
mov
stos
das
into
and
shlb
inc
push
or
pop
dec
xchg
xor
xor
int
nop
stos
cltd
mov
fisubs
cmp
cmp
lods
add
lds
lods
pop
xor
and
fsub
roll
ja
cs
lds
iret
es
mov
sbb
push
lahf
pop
push
xchg
cmc
arpl
add
lds
inc
push
sub
pop
add
fadd
push
adc
pop
jg
mov
loop
mov
cwtl
repnz
dec
sti
or
mov
inc
iret
ret
and
push
ret
add
xchg
add
aaa
jbe
nop
or
jns
icebp
std
jno
add
sbb
scas
test
xchg
sub
movsl
decl
cmp
jg
mov
ret
push
add
cli
rolb
cvtdq2ps
push
mov
dec
sbb
in
lret
dec
jae
push
mov
push
lock
sub
xchg
imul
push
add
lods
pop
out
xchg
xchg
xor
cmpsb
mov
xchg
and
mov
or
push
jmp
scas
fbstp
hlt
mov
pop
mov
cmp
and
out
add
leave
inc
mov
cmp
in
ds
and
mov
fbstp
mov
mov
loop
ret
test
or
movsb
mov
outsb
lea
test
cmpsl
data16
sahf
sbb
test
std
cli
jl
ret
sti
int3
pop
mov
mov
test
int
lds
mov
and
or
jne
ret
out
adc
clc
imul
loope
negl
mov
and
fistpll
cli
cmc
lods
jbe
push
adc
xorb
inc
push
and
xchg
cmp
cmp
push
mov
push
movb
push
adc
jecxz
pop
fs
dec
xchg
pop
rclb
cmpsb
popa
movsl
mov
mov
movb
push
pop
push
inc
iret
inc
xchg
and
insb
push
sti
push
adc
scas
movsl
cmpsb
push
jne
sbb
aad
inc
pop
mov
or
push
gs
mov
mov
pop
jl
mov
jbe
push
or
mov
mov
roll
outsb
push
stc
insb
outsl
sub
sar
mov
dec
cli
sti
clc
push
test
movsl
adc
push
mov
cltd
mov
xchg
test
les
pop
push
ljmp
loopne
adc
fimuls
dec
cli
fsubl
xchg
aam
jmp
mov
sbb
lock
insb
imulb
adc
mov
sti
daa
or
mov
sbb
mov
xor
test
outsl
movsb
bound
sbbb
jae
cmp
ljmp
xchg
pop
adc
shll
or
mov
push
and
dec
sbb
jnp
jne
div
or
inc
jmp
test
jns
bound
push
dec
je
lret
adc
fwait
and
add
xchg
jne
leave
sbb
xor
sub
adc
cmp
stos
sbb
imul
addl
inc
jns
sbb
cli
vpand
movsb
mov
test
cmp
and
inc
stos
adcl
out
sti
hlt
cltd
push
add
pop
cmp
sbb
nop
fistps
push
lods
int3
dec
adc
and
std
std
push
test
jae
and
xchg
xchg
sub
fdivp
dec
lahf
cmp
jge
xchg
daa
inc
outsl
push
popf
std
pop
cli
pmaxub
aas
push
jmp
pop
jecxz
inc
pop
pusha
daa
mov
cs
mov
into
mov
push
cltd
mov
push
push
or
xor
push
jae
sbb
sbb
mov
mov
std
cltd
xor
enter
push
fldcw
sbb
cmpsl
mov
out
ret
cs
jno
or
lret
xchg
xor
jbe
add
xor
xchg
mov
add
shl
xor
pop
push
insl
mov
sbb
ds
dec
mov
sbb
clc
mov
test
adc
ja
cmp
pop
jg
shrb
sbb
cs
mov
mov
cwtl
add
adc
add
ret
and
mov
sub
push
adc
cli
out
inc
ljmp
xchg
and
shrb
cli
xchg
or
xchg
and
lods
sbbb
lods
icebp
lds
jae
xchg
adc
xor
aad
insb
sub
lcall
call
inc
ret
in
pop
mov
cmpb
inc
add
sbb
fwait
cli
and
ljmp
aam
movsl
shr
xchg
and
fdivs
adc
push
push
mov
fbstp
push
push
push
pop
ljmp
push
repz
mov
outsb
pop
in
inc
negl
pop
or
jo
adc
xchg
add
ja
das
and
out
mov
repnz
lods
sub
and
fsts
rorl
add
ret
xchg
and
call
aam
mov
sahf
mov
mov
jo
adc
insl
add
out
ss
or
enter
aaa
sbb
push
mov
pop
ljmp
and
test
mov
sar
mov
mov
sub
out
inc
es
dec
test
cmp
fbld
mov
mov
xchg
out
lcall
push
push
adc
pop
je
in
or
cmc
cld
mov
and
movsb
mov
aam
ljmp
cmp
pop
adc
adc
mov
pop
push
xor
cmpsb
les
enter
adc
push
sbbl
lret
ljmp
filds
sub
or
out
or
nop
lcall
mov
push
mov
mov
push
adc
dec
dec
pop
sub
inc
mov
adcl
pop
pop
loopne
in
aaa
out
push
mov
push
lds
adc
ja
lds
adc
lods
dec
jbe
inc
stc
pop
lds
adc
pop
lds
adc
push
push
lds
adc
call
aaa
or
push
fwait
dec
jge
lds
adc
pusha
lds
adc
sahf
pop
lds
adc
push
or
and
inc
pusha
lds
adc
xchg
fwait
jae
or
inc
dec
mov
inc
jp
pop
lds
adc
fimull
lret
pusha
lds
adc
notb
push
stos
jno
out
lcall
adc
test
pusha
lds
adc
arpl
mov
and
pop
ret
aaa
outsb
rcrl
rcll
push
jl
aam
push
sahf
lcall
mov
and
mov
add
mov
popf
fadds
inc
clc
int3
xchg
daa
jecxz
lahf
in
imul
pusha
das
and
adc
xchg
mov
mov
adc
mov
jo
push
mov
adc
incb
fcmovbe
add
sub
out
push
jecxz
and
sarl
mov
loop
add
push
adc
jno
mov
cmp
mov
push
fidivl
mov
ret
jns
sbb
out
sbb
add
adc
dec
mov
add
push
adc
call
push
mov
lret
push
cmp
dec
mov
fdivrs
movsl
cmc
movsb
jbe
pop
mov
pusha
xchg
and
sbb
push
lea
fstps
pop
adc
mov
mov
jge
xchg
aas
ds
pop
scas
add
xchg
mov
jo
adc
imul
and
add
sbb
mov
mov
mov
adc
sbb
inc
and
adc
mov
fsubr
aam
sbb
pusha
xchg
and
lock
arpl
cwtl
arpl
icebp
and
push
adc
cmc
pusha
cmp
outsb
movsl
out
ret
dec
jecxz
cmc
test
pop
mov
and
or
cmc
inc
jge
cli
movsb
add
xor
add
scas
dec
pushf
cmp
adc
jns
cli
cmc
ljmp
push
sti
in
sbb
push
cmpsl
cmpsb
sub
sbb
adc
push
adc
insl
fistps
clc
dec
xchg
push
push
lods
rorl
cmp
int3
adc
nop
mov
or
call
mov
cmp
adc
xchg
jg
pop
xorb
outsl
xor
pusha
xchg
and
sbb
mov
and
sahf
cmp
dec
cld
idivb
jno
ljmp
mov
pop
adc
mov
pushf
cmp
fldl
push
adc
ljmp
or
jne
pushf
mov
pop
adc
add
adc
std
and
mov
data16
call
in
and
adc
cmpsl
cli
sti
popa
mov
fistpll
add
rorl
mov
cmp
mov
fistpll
cli
cmc
adc
push
lods
movsb
mov
pop
or
add
aaa
dec
pushf
cmp
nop
and
iret
call
int3
jle
adc
pop
mov
and
xchg
out
push
daa
movsb
les
cmc
lcall
add
pop
testl
cmp
movsl
dec
nop
daa
out
fwait
jg
push
cmp
and
aad
dec
or
dec
in
sub
pop
clc
dec
xchg
out
inc
sbb
xchg
shlb
cmp
arpl
add
push
push
cmpsl
pop
push
fwait
aam
sub
test
push
adc
fldlg2
cld
mov
addr16
mov
add
sarl
fadd
dec
cmp
movsl
ja
xlat
sbbl
sbb
jp
into
enter
roll
mov
mov
mov
fldcw
mov
test
xchg
push
xchg
or
scas
pop
sbb
in
test
push
sub
sub
cmp
cmp
dec
in
mov
test
jnp
xchg
iret
mov
in
aam
inc
pop
ja
xor
or
in
push
ja
cmpsb
fildll
aas
test
call
and
add
call
out
sahf
pop
mov
jg
adc
mov
jae
inc
imul
xchg
cs
xchg
and
imul
xlat
ficompl
jle
cmc
mov
je
adc
push
inc
sarl
int
fwait
pusha
lds
stc
cwtl
push
stc
mov
rcrb
iret
fildll
xor
sub
push
adc
out
out
bound
add
pop
mov
fdivrp
mov
mov
cli
pop
adc
add
xchg
push
frstor
cld
movl
aam
fdivrs
or
subl
xchg
push
cmp
in
jno
mov
test
aam
std
imul
fs
jae
adc
scas
std
cmp
fucomip
cs
cmpsl
enter
xchg
xchg
addl
shll
dec
mov
push
lea
xchg
or
jne
dec
mov
scas
or
je
adc
xor
cmp
inc
add
loopne
push
jnp
mov
jb
stos
push
imul
adc
adc
push
jp
push
dec
jo
adc
inc
mov
sub
mov
add
aaa
outsl
push
pop
ljmp
aam
pop
in
or
pop
adc
lods
jg
pop
mov
sbb
push
adc
sub
stc
pop
adc
mov
movsb
mov
and
lods
pop
pop
adc
push
adc
sub
lds
out
aam
pop
cmp
pop
pop
inc
mov
xchg
xchg
push
sub
nop
shrl
outsl
stos
or
popa
sbbl
push
lods
pop
cmp
outsb
loope
aam
nop
pop
nop
pop
push
adc
shlb
add
jge
add
pop
adc
pop
add
xchg
pop
add
lret
jb
inc
in
jnp
jne
aam
movsl
mov
aaa
push
jns
cmpsl
dec
lret
mov
test
add
adc
jno
aaa
mov
mov
test
and
push
mov
push
adc
jmp
test
mov
cmp
outsb
dec
xchg
sub
cmp
icebp
aam
push
adc
cmc
inc
cmpsb
sbb
daa
into
and
sbb
cmp
in
dec
lret
aas
ret
rcll
test
push
adc
cmp
jb
pop
jne
rol
cmpsb
dec
pushf
mov
push
outsl
fists
jg
cwtl
jno
adc
or
in
push
adc
xor
repnz
shlb
sbb
pop
mov
xchg
and
lea
test
adc
call
stc
fsubrp
lcall
movsb
cmc
jg
call
lcall
fsubs
xchg
xchg
xor
es
daa
jl
push
adc
imulb
test
pop
shlb
cmpsb
dec
add
push
adc
sahf
mov
push
push
or
inc
jge
rolb
loopne
lret
push
adc
daa
jmp
xchg
ss
testl
mov
pop
cmpsb
push
or
test
pop
jl
push
adc
loopne
mov
mov
pop
subl
jge
or
in
and
idivb
jae
push
lock
inc
movsb
adc
pop
jnp
jo
in
mov
xchg
pusha
lods
scas
lods
add
add
lea
push
popf
sbb
or
push
adc
repnz
int
mov
negb
xchg
push
sub
jno
adc
ficomps
mov
adc
in
cwtl
xor
int3
or
add
push
adc
cmc
and
pop
aas
call
imul
shrb
pop
movsb
leave
adc
jo
adc
jp
inc
mov
cmpl
xchg
xchg
push
sbb
xchg
int
out
imul
movl
insb
scas
aaa
std
std
push
test
mov
push
xor
daa
dec
xchg
xchg
cld
dec
lahf
arpl
outsb
jnp
fdivrs
pop
jns
inc
jl
push
adc
xchg
adcb
sub
adc
xor
addl
popa
push
cmpsl
pop
and
xor
mov
cmp
dec
cmpsl
arpl
mov
mov
les
idivl
cmp
xchg
dec
fdiv
sub
test
jl
dec
xor
push
push
jecxz
aas
loope
cmp
stc
imul
fdivs
adc
repnz
dec
cwtl
aas
cmp
push
xchg
dec
sub
adc
adc
cwtl
mov
dec
fsubr
cmc
lock
xor
adc
add
sbb
fidivl
xchg
dec
int3
adc
loopne
ret
add
xchg
dec
dec
dec
adc
lret
and
out
push
in
cld
jmp
shlb
adc
push
out
adc
jge
adc
sub
scas
es
mov
pop
lods
adc
jns
aaa
and
jmp
jb
push
dec
les
adc
mov
lods
cmpsl
int
jb
sti
outsl
addr16
ljmp
data16
imul
xor
lahf
in
dec
loope
sub
invd
fcomps
gs
repz
rcll
xor
push
adc
jae
fcomps
lock
or
jno
xchg
fucomi
imul
sahf
lret
add
movsl
stos
outsl
and
call
mov
loop
mov
lret
les
cmc
outsb
aas
stos
shlb
iret
imul
jge
ljmp
mov
cmp
popa
pop
in
testl
or
cmp
jg
mov
xor
ret
mov
adc
cmp
sbb
call
je
mov
pop
push
and
outsb
push
scas
data16
or
xlat
and
sbb
int3
adc
adc
inc
jne
push
out
std
sti
mov
dec
push
mov
pop
dec
xchg
and
and
vsqrtps
adc
jo
adc
stos
lea
mov
jo
adc
mov
lret
push
jg
lock
adc
or
mov
outsb
push
repz
mov
xchg
cmp
fwait
push
adc
sbb
sub
adc
push
pop
push
imul
insb
mov
insb
push
clc
sarb
push
jb
test
mov
inc
add
sub
sar
cwtl
mov
imul
pop
push
cmpsl
adc
out
int3
jns
inc
mov
call
scas
pop
aaa
adcl
test
or
sbb
rcl
xor
push
adc
push
push
in
pop
or
lods
mov
cmp
negl
push
adc
dec
jb
ficompl
mov
leave
outsl
cmp
push
fisubs
jbe
cmpsl
mov
xchg
adc
rolb
xchg
inc
aaa
adc
adc
pushf
pop
scas
dec
pop
jg
cmp
mov
mov
das
jl
cmc
mov
das
inc
rcl
scas
pop
in
adc
fmul
pop
cmp
in
inc
jnp
notb
xchg
lret
push
xchg
aaa
in
pusha
arpl
fisttpll
fcomps
jmp
push
and
sbb
add
js
loop
sub
int3
cmp
sub
or
fwait
subb
sbb
in
push
adc
sub
call
mov
cmp
out
pusha
or
mov
xchg
or
inc
dec
popf
in
mov
xor
fcom
mov
lcall
pop
fdivl
dec
inc
push
push
mov
push
jmp
xchg
jmp
aam
dec
loopne
lahf
arpl
stc
sarl
push
rorb
push
dec
jmp
cmp
push
clc
mov
push
scas
rcrl
ja
or
fdivrl
mov
pop
push
and
add
add
sub
cmp
imul
addl
inc
nop
fisubs
sub
mov
xor
addl
mov
xchg
push
cmpsb
icebp
xchg
push
lret
mov
mov
add
inc
xchg
xchg
and
xchg
and
add
inc
outsb
push
cmp
pusha
stos
xchg
roll
mov
mov
pop
push
mov
xchg
mov
jo
sbb
adcb
mov
xchg
inc
insl
adc
push
adc
and
push
adc
cmp
cmp
mov
mov
push
stos
pop
dec
pop
jge
push
sbbl
scas
pop
out
insl
fwait
jbe
push
xchg
repnz
imul
adc
add
push
out
jge
pop
push
pusha
mov
lods
dec
daa
into
sbb
jp
lods
jl
int
in
push
push
cli
fwait
subl
bound
insl
fidivl
dec
pop
or
icebp
add
adc
mov
and
cmpl
jmp
sub
stos
cld
js
push
jl
mov
mov
jns
push
lret
push
test
aad
mov
divb
test
jno
xchg
aad
fcomps
out
pop
adc
sahf
jmp
inc
jmp
or
stos
lahf
push
xor
loopne
dec
xchg
out
dec
pop
or
xchg
sar
push
adc
or
pop
adc
insl
dec
push
sbbl
xor
push
repnz
sub
cltd
mov
or
ljmp
sti
popa
push
repz
xor
mov
test
int
or
fistl
imul
mov
xchg
and
aad
pop
push
adc
out
dec
pushf
mov
and
lock
pop
lock
lock
loope
sahf
pop
in
inc
gs
leave
push
cmpsl
dec
arpl
xor
and
rcrb
inc
pop
sub
cs
sahf
mov
aam
push
mov
fwait
roll
mov
aaa
dec
pop
or
fidivs
jo
xchg
and
js
jno
adc
and
rol
inc
shrb
xchg
push
imul
sbb
pop
pop
int3
dec
xchg
out
push
sub
popf
cmp
test
leave
lods
xchg
std
decl
mov
cli
in
outsb
jns
push
fldcw
and
xchg
and
iret
mov
enter
mov
jne
outsl
fdivrs
and
mov
mov
mov
push
stc
test
clc
mov
mov
imul
nop
ljmp
or
ret
ljmp
push
shrl
push
inc
cwtl
cs
cld
filds
push
es
push
mov
sbb
adc
push
add
inc
int
fwait
and
cs
dec
mov
lret
outsb
cwtl
pop
pop
inc
test
jecxz
and
cmp
lcall
adc
push
jb
dec
jns
jl
adc
out
lds
subl
je
mov
std
jnp
jmp
or
xchg
pop
stc
jo
jg
sahf
dec
movl
dec
movl
xor
xor
or
mov
mov
mov
fwait
mov
or
leave
jle
jl
sbb
icebp
and
jmp
imul
es
sub
mov
pop
xor
fdivl
dec
add
jge
call
cmpsl
sbb
or
xor
daa
dec
cmp
popa
mov
push
neg
mov
push
adc
dec
ds
xor
dec
xchg
insb
adc
dec
and
sub
add
scas
push
or
das
and
scas
nop
add
data16
jl
lock
orl
adc
mov
mov
int
pop
xchg
pop
sub
lock
or
loope
inc
loope
and
inc
xor
push
mov
push
clc
lret
xor
jl
push
lret
or
out
dec
pop
or
ret
jo
adc
or
jno
or
adc
dec
test
cmp
aaa
mov
inc
cmc
popf
aam
jge
pop
push
adc
mov
dec
xchg
test
aam
mov
pop
adc
sub
xor
mov
cmp
adc
leave
xor
xchg
mov
mov
lahf
mov
xchg
nop
addr16
jl
fwait
mov
lock
flds
flds
adc
popf
movsb
leave
adc
and
xchg
aad
sbb
mov
add
les
adc
push
lea
les
adc
jo
cmp
pop
mov
inc
pusha
jmp
cmc
and
cmp
shl
pop
mov
push
xor
inc
xchg
decl
mov
mov
outsl
fists
push
andl
adc
jno
cmpl
int
jns
or
enter
jo
pop
jno
xchg
push
aad
cli
je
pop
adc
mov
pop
je
pop
adc
loope
faddl
adc
adcl
jnp
cmp
rolb
in
pop
adc
and
cli
jg
xchg
add
pop
adc
imul
faddl
adc
mov
pop
adc
lahf
aad
jo
pop
adc
ds
fcoml
cmp
inc
adc
push
ljmp
daa
dec
xchg
and
lcall
mov
mov
repz
inc
addb
inc
cmp
out
out
ret
mov
lcall
ljmp
ljmp
push
or
mov
insl
mov
mov
je
sbb
push
mov
or
sub
or
mov
insl
and
nop
lds
adc
out
fstpt
add
push
pusha
inc
xor
mov
adc
xchg
mov
lods
sub
xchg
mov
lea
adc
push
push
or
adc
xchg
mov
out
fcompl
adc
mov
pop
sti
loopne
pusha
lds
adc
imul
pop
je
adc
fnstenv
pop
adc
push
pop
lds
adc
movsb
pusha
lds
adc
push
pop
xchg
and
sub
fcoms
sub
pop
sbb
fildl
inc
pop
stos
push
iret
pop
sbb
inc
jg
fisubs
cmp
pusha
sbb
test
jp
xor
fs
out
js
inc
mov
cmc
scas
pop
lcall
inc
stos
inc
inc
ret
divb
pop
add
lahf
inc
repnz
stos
fucomip
jnp
xor
pop
xchg
cmp
das
fld
cs
movsl
mov
out
mov
fucomp
push
lds
mov
pop
loopne
xchg
sub
mov
add
pop
adc
clc
inc
xor
adc
ds
and
pop
movsb
clc
fwait
xor
adc
sub
sti
aas
push
mov
adc
clc
add
adc
sub
adc
jg
push
fwait
mov
dec
pop
or
jle
cld
jo
adc
or
adc
jno
adc
xorl
push
push
sti
push
dec
jno
adc
jns
jo
adc
es
xor
in
xchg
fwait
dec
fiadds
ret
push
sub
insl
dec
pop
or
out
dec
xchg
ret
push
adc
mov
add
pop
adc
mov
scas
push
loop
push
or
cmp
test
orl
dec
push
fs
add
fwait
push
jle
inc
pushf
pop
inc
in
adc
pop
pop
leave
mov
fstps
aaa
dec
mov
out
cmc
stos
jno
inc
cmp
push
call
mov
pusha
out
xchg
sbb
or
sbb
icebp
jno
addr16
jae
or
es
xor
jns
add
fwait
iret
inc
sub
sbb
loop
sub
jbe
clc
xlat
sbb
or
insb
scas
std
add
xchg
dec
mov
aad
pop
test
jno
mov
scas
jl
jne
push
scas
pop
jg
rorb
sub
cmp
xor
or
xchg
ret
pop
and
in
push
push
push
arpl
mov
adc
mov
movsl
lret
out
xchg
fcmovne
jecxz
sbb
push
adc
ljmp
inc
xor
adc
outsl
cmp
xor
inc
inc
out
jmp
imul
mov
pop
adc
sub
addr16
movb
mov
call
je
adc
popf
inc
mov
and
push
das
es
or
cwtl
js
adc
dec
popf
mov
xchg
and
cmp
push
mov
icebp
and
clc
mov
pop
adc
xlat
test
mov
flds
adc
int
jns
imul
ljmp
test
cmp
sub
push
shlb
pop
inc
sbb
pop
or
mov
aam
push
pop
or
bound
or
cmp
lcall
or
stos
jge
jo
adc
fnstsw
test
adc
add
adc
rcrb
adc
fstpt
mov
std
inc
and
cmp
adc
outsb
xchg
and
data16
pop
jns
in
movsl
mov
aad
or
mov
push
clc
xchg
adc
sub
lcall
call
sbb
cmp
fsubrl
jns
xlat
or
add
add
ret
sahf
cmp
mov
cltd
push
mov
cmpsl
mov
xchg
mov
cld
enter
fsubrl
gs
mov
mov
xor
push
ret
mov
add
mov
jg
push
cmpsb
cmp
mov
mov
cld
out
pop
ficoml
mov
dec
jo
std
aad
cmp
in
pop
aad
pop
adc
gs
adc
sbb
pop
adc
outsl
pop
je
ret
pop
pop
sub
lods
mov
sarl
imul
mov
test
icebp
xchg
mov
add
dec
and
add
or
mov
lds
or
lds
mov
xchg
lea
jo
sti
sbb
add
jae
jecxz
adc
mov
cmpsl
shl
inc
push
push
xchg
xchg
xchg
mov
pop
mov
inc
and
testb
push
adc
mov
sbb
inc
inc
jno
adc
das
cwtl
ss
pop
mov
pop
das
inc
setnp
xchg
xchg
mov
test
insb
lock
shlb
jno
into
pop
and
pop
push
in
inc
pop
leave
aam
decl
push
stc
rcrl
cmpsl
mov
mov
lcall
cmc
ja
outsb
pop
push
das
aad
dec
xchg
dec
sbb
and
push
outsw
mov
xor
jg
mov
pop
repnz
mov
push
pushf
xchg
sub
pop
pop
cmp
outsb
xchg
mov
pusha
ror
dec
add
jns
ror
push
stos
inc
cmp
mov
scas
pop
sbb
scas
cmp
ret
mov
sahf
push
or
cmp
mov
sbb
movsb
sub
loope
mov
fs
xchg
arpl
add
fldcw
mov
add
fcoms
jno
and
xor
xlat
mov
sub
loope
adc
mov
hlt
xchg
pop
dec
std
pushf
xchg
test
sarl
sbb
xchg
jge
fimull
jecxz
xor
int
sub
mov
out
xchg
daa
adc
push
arpl
in
push
adc
inc
dec
mov
addb
fst
fnstsw
es
sbb
xchg
das
iret
sbb
jb
xchg
jno
decb
xchg
scas
or
and
pop
das
and
mov
lea
sbb
or
iret
loopne
push
adc
loope
stc
insl
fidivl
stos
lock
sti
loop
dec
arpl
in
loope
aad
sahf
fwait
cmp
adc
cmpsl
dec
push
sti
jbe
sahf
sbb
lret
xchg
sbb
cmp
sbb
mov
push
sub
int3
and
sti
push
pusha
addb
daa
fstpl
cmp
pop
push
dec
out
sub
pop
iret
sbb
push
adc
addb
lds
xlat
das
push
sahf
fwait
out
mov
xchg
scas
xchg
jp
push
inc
add
adc
sbb
je
push
adc
std
jno
sbb
dec
sbb
scas
xchg
scas
xchg
jb
test
pop
adc
adc
push
mov
and
xchg
cmp
dec
xchg
xor
aam
repnz
mov
popa
adc
lods
and
sub
bound
shl
mov
push
xor
cli
test
mov
lret
jo
lds
add
adc
fwait
cwtl
insl
fcmovnu
addr16
jp
sbb
mov
rcrl
insb
enter
mov
push
std
mov
cmp
push
inc
push
ds
fstpt
call
rol
push
adc
add
nop
and
inc
adc
add
add
dec
cmp
cmp
mov
outsb
cmp
inc
cltd
lods
adc
push
push
jp
mov
mov
pop
in
lret
adc
mov
insl
jae
cmova
adc
loop
outsl
mov
xchg
mov
jge
vunpcklps
push
sti
jb
adcb
inc
das
repz
jae
adc
minps
add
cmp
lock
adc
push
pop
and
in
pop
mov
test
xor
adc
negl
xchg
adc
or
int
ljmp
repz
adc
and
clc
or
lods
test
mov
and
sahf
inc
lcall
push
add
push
adc
sbb
out
push
adc
adc
adc
out
push
adc
mov
rolb
and
cmc
inc
pusha
mov
or
push
insl
sub
add
repz
push
adc
call
mov
in
lock
jl
push
adc
jns
loope
mov
and
bound
xchg
sub
adc
xchg
mov
into
jecxz
lret
leave
xchg
lods
add
push
call
cmpsl
adc
mov
push
adc
ficoms
lods
rcl
adc
mov
int
inc
addl
inc
or
push
adc
xor
push
fnstenv
mull
xchg
lds
jb
adc
pop
mov
push
pop
in
cmp
jb
adc
cltd
and
shll
adc
sbb
jae
adc
dec
add
push
lock
adc
es
xor
jmp
dec
dec
pop
test
pop
movsb
test
mov
pop
test
mov
inc
stos
cli
xorb
into
stc
mov
in
dec
push
mov
dec
push
jg
mov
out
xchg
push
dec
adc
mov
ja
cltd
add
adc
lock
push
pop
push
adc
pop
and
dec
cld
dec
jmp
out
mov
mov
jo
stc
in
xchg
repnz
lret
xor
xor
cmp
ss
dec
mov
dec
test
ret
cmp
std
stos
nop
cmp
fs
mov
xor
ret
fs
mov
lds
xlat
pop
dec
loop
xor
xor
and
nop
push
std
jae
sahf
jecxz
mov
ret
push
push
fsub
dec
adc
xchg
pusha
adc
adc
mov
pop
jb
push
jb
mov
jecxz
cwtl
mov
mov
js
adc
icebp
jmp
test
mov
jo
sbb
scas
lds
sub
shr
icebp
dec
add
mov
out
sub
inc
loope
mov
sub
mov
mov
jo
cs
and
ja
fsub
addb
push
cmpsl
lret
pop
pusha
sti
loop
lret
jns
shlb
adc
mov
test
pop
fsubrp
sbb
pushf
add
inc
inc
cmp
jno
sub
mov
xor
push
fidivl
cmp
outsl
push
inc
jg
push
ljmp
mov
pop
lret
scas
popf
data16
or
or
aam
mov
sbb
mov
sub
cmpsl
int
sbb
shll
mov
or
pop
lea
rorl
push
out
push
je
sbb
enter
fnstenv
add
in
rclb
dec
xor
mov
sub
pusha
push
out
nop
lods
or
adc
cmp
mov
dec
and
push
cwtl
mov
and
jne
adc
movsb
sub
xor
sub
data16
adc
sbb
stc
cld
mov
test
xchg
shrl
mov
push
mov
mov
and
xchg
cmpsb
test
lock
movsl
mov
into
xor
shll
cmpsb
mov
dec
pushf
je
add
or
ljmp
dec
sub
xor
shlb
sub
test
xorps
xchg
cwtl
adc
popf
loopne
inc
sarb
sub
lret
sahf
jle
cmp
pop
cmp
test
outsl
cmpsb
in
shrb
cltd
into
subb
subb
add
rclb
mov
fstps
push
rorl
sbb
mov
push
add
inc
jmp
mov
push
sarb
dec
push
ljmp
pop
mov
int
popa
je
mov
stos
push
sbb
outsb
inc
aam
shlb
addr16
mov
and
lock
mov
cmpb
inc
cmp
mov
xchg
or
shr
popf
dec
inc
pop
rcr
clc
mov
subl
xor
mov
insl
cmpsl
pop
iret
mov
inc
lahf
adc
push
push
loope
push
bound
lahf
sub
fs
xchg
jb
imul
mov
cmpsl
mov
pop
out
movsb
inc
inc
sub
xchg
lock
gs
push
loopne,pn
mov
xor
insl
es
pop
inc
push
fnstenv
xor
jnp
mov
mov
add
push
insb
xorl
daa
dec
pop
cli
shrb
cmpsb
mov
push
ror
outsl
call
push
mov
jmp
lret
or
addr16
pop
pushf
jmp
or
aad
test
je
mov
das
xchg
cmc
pop
cmc
jecxz
cmp
mov
xlat
outsl
lea
movsb
pusha
arpl
lock
push
jge
mov
daa
stos
inc
js
cmp
fistpll
and
ds
popf
pop
and
push
lahf
mov
add
in
adc
pop
dec
inc
or
xchg
lock
sub
sbb
rcrb
ds
or
cld
cwtl
dec
xor
out
pop
mov
sub
fiadds
adc
jo
pop
jecxz
push
lods
int
iret
outsl
and
push
adc
std
sbb
xor
cwtl
and
or
and
cmp
es
or
push
in
pop
jecxz
test
cmp
cmpsb
pop
mov
mov
mov
test
in
mov
out
xor
pop
push
xlat
pop
cmpsl
xor
in
adc
call
dec
mov
leave
clc
dec
xchg
pop
jbe
pop
mov
dec
inc
arpl
outsl
pop
ror
jbe
decb
push
lods
or
dec
ds
cmp
negb
sbb
sub
movsb
or
test
fstpt
aam
lods
xlat
mov
outsb
fistpll
add
inc
mov
fwait
mov
adc
push
icebp
cmpsb
hlt
addr16
xchg
shlb
call
dec
jne
test
cmp
in
and
or
imulb
inc
mov
pop
sahf
xor
bound
cmp
rcll
test
mov
xchg
and
jg
inc
push
push
mov
sbb
mov
add
dec
out
mov
xchg
lods
or
mov
sti
jbe
jo
pop
push
adc
lds
add
pop
rol
popf
pop
rcll
stc
mov
clc
mov
or
push
lds
adc
cli
fs
jle
ficomps
push
lods
sub
mov
addb
leave
lds
pop
xchg
xchg
pop
push
adc
out
test
push
cs
mov
add
imul
mov
xlat
loopne
andb
adc
adc
add
jecxz
pop
sti
loopne
adc
loop
pop
mov
sarb
clc
adc
ljmp
and
daa
adc
mov
inc
imul
mov
pop
cmpl
jl
arpl
aad
jp
pop
sub
sarl
bnd
cli
sbb
cltd
mov
or
lock
sbb
fsubrl
mov
lock
pop
dec
jecxz
test
sub
cmpsb
cs
fmuls
push
cs
ljmp
sub
insb
sub
ror
inc
js
out
les
not
andb
pop
shll
fwait
clc
adc
add
or
call
lods
xor
mov
push
sub
pop
push
adc
jae
add
and
stc
push
loope
and
fwait
out
pop
or
jge
sarb
push
outsb
fwait
imul
cli
stc
mov
push
and
fidivs
outsb
cmp
push
cmp
jg
loopne
aaa
and
push
adc
pushf
sbb
pop
jae
popf
mov
pop
mov
idivl
pop
push
adc
add
cmpsb
mov
fdivrp
imul
addb
mov
lds
mov
in
jns
adc
bound
daa
xor
stc
sti
test
fisubl
mov
pop
adc
std
mov
js
and
push
adc
push
and
in
imul
or
xchg
mov
jo
ss
jle
movsb
push
stc
cmp
and
xchg
out
loope
sub
mov
dec
data16
loop
popa
sbb
fidivl
add
cmp
and
je
pop
call
xchg
sub
jmp
jb
in
sahf
dec
lahf
push
test
cli
jbe
lods
insb
lds
nop
push
push
adc
je
es
mov
pop
jns
in
es
lea
inc
scas
sbb
or
mov
out
mov
hlt
nop
and
xchg
sar
sbb
outsl
jne
insb
mov
or
add
sub
shrl
outsb
aas
mov
mov
xchg
rcrb
dec
leave
mov
ja
sbbl
test
dec
xchg
and
push
xchg
mov
sti
jp
popf
sbb
adc
push
mov
mov
mov
sub
push
aam
jno
xchg
arpl
ljmp
jg
push
ljmp
add
sbb
xor
aam
nop
shrb
cwtl
sbb
cld
std
cli
andl
roll
lcall
xchg
jg
or
enter
lods
mov
aaa
jmp
insl
mov
and
adc
lds
mov
or
test
push
xchg
add
mov
push
jnp
pop
push
lods
pop
lret
js
mov
push
repz
cli
sbbl
in
mov
fidivl
dec
enter
pop
mov
add
inc
aam
mov
inc
test
xchg
xchg
sub
scas
int
lds
push
js
mov
jo
ljmp
and
push
clc
sahf
pop
outsl
or
jb
enter
adcb
cli
jle
aas
fst
jg
xchg
lods
mov
add
orb
lods
pop
and
mov
outsb
cmp
mov
add
push
aaa
sbb
cmp
push
enter
out
mov
leave
mull
inc
push
sub
xchg
daa
dec
jecxz
cmc
xchg
test
push
adc
push
add
filds
and
stos
inc
out
inc
and
fidivrs
aad
push
lret
addr16
pop
fmull
lahf
pushf
cs
popa
pop
mov
push
out
mov
and
jecxz
test
lret
and
jns
xor
push
repnz
daa
stos
sub
mov
sub
jecxz
push
adc
push
sub
loopne
sahf
push
movsl
adc
cltd
jno
ret
fs
rolb
adc
test
jecxz
ret
mov
insb
dec
mov
out
imul
iret
sub
sub
dec
sub
movsl
fistpl
aad
jmp
nopl
out
aam
add
push
and
imul
shlb
push
adc
out
pop
xchg
shlb
pop
fwait
pop
dec
dec
insb
imul
mov
sub
into
sbb
or
outsb
stos
push
mov
jle
in
adc
ds
ret
stc
mov
cmpsl
or
jno
inc
fmulp
rolb
out
add
push
movsl
sbb
dec
xchg
mov
push
sub
jg
xchg
daa
adc
inc
loop
push
xchg
mov
ds
fsubrl
fsubl
hlt
cmp
and
or
call
stos
rolb
push
adc
mov
enter
mov
sbb
arpl
stos
jno
daa
ds
push
or
push
lock
pop
cmp
fwait
rolb
pop
mov
add
sbb
and
lock
adc
cmc
or
mov
mov
data16
aas
loop
lods
call
jae
mov
dec
aad
xchg
adc
lret
mov
cmp
lret
mov
bound
mov
int3
test
xor
pop
or
inc
sbb
cli
sahf
xchg
sub
popf
dec
nop
mov
pop
popf
jnp
ljmp
fdiv
push
adc
jne
imul
and
cwtl
inc
pop
lock
adc
ror
into
sbb
mov
xchg
in
int
adc
mov
adc
shl
lds
xor
jmp
lcall
pop
mov
mov
orl
push
push
sbb
out
mov
sub
mov
lcall
je
dec
dec
jg
test
inc
pop
ret
xor
les
test
cmp
ja
mov
dec
loope
test
inc
pop
ret
pop
jmpw
xchg
inc
pop
xor
mov
or
add
lods
push
xor
add
lret
jb
dec
push
add
add
movsl
movsb
repz
xor
fidivl
ror
push
pop
scas
adc
loop
sbb
adc
mov
sbb
cmp
iret
rcrb
in
nop
inc
ret
jns
je
arpl
dec
shr
movsl
mov
scas
movsl
or
xlat
pop
sarl
xchg
mov
out
scas
adc
jnp
js
cmp
cs
or
insb
mov
loop
add
out
cmp
jno
jae
scas
int3
mov
mov
jp
sub
jmp
mov
repz
pop
lret
clc
imul
shrl
mov
jg
cmpl
movsb
dec
xchg
push
lock
mov
xabort
and
jge
add
in
pushf
sub
xlat
shlb
sahf
scas
movd
inc
idiv
negl
adc
push
adc
jecxz
mov
out
int
and
jae
adc
dec
push
mov
lahf
pop
mov
repz
add
or
lldt
jecxz
cmpsl
jmp
out
pusha
fdivp
mov
xor
xor
jmp
mov
inc
pop
xchg
and
mov
cmp
xor
sub
fld
and
ret
cld
cmc
enter
lods
cli
int3
lcall
dec
bound
push
add
sub
inc
stos
sub
jecxz
je
push
mov
wbinvd
jmp
out
xchg
pop
xor
in
sub
mov
pop
push
adc
dec
cwtl
sbb
into
mov
and
mov
xor
mov
std
ret
in
sbb
mov
mov
jb
adc
aam
shlb
mov
cmc
in
das
shlb
into
jp
dec
in
adc
inc
addl
daa
ljmp
shrb
mov
push
ror
pop
add
aad
movsl
or
sub
xlat
icebp
xchg
rclb
je
push
fdiv
push
adc
cmpl
pop
lock
push
adc
add
push
das
pushf
call
lods
mov
mov
mov
dec
int
push
pop
addl
stos
xor
fnsave
es
in
in
and
jecxz
and
les
cmc
jmp
pop
inc
sbb
ja
adc
mulb
setnp
dec
arpl
push
cmp
rolb
add
push
adc
and
in
sahf
fcompl
mov
sarb
cmp
pop
mov
mov
sub
sbb
shrb
jnp
xlat
stc
test
ds
stc
mov
mov
cli
ficoms
mov
and
dec
ror
xchg
lret
aad
cltd
ficoml
push
adc
pop
je
adc
push
sbb
xchg
pop
out
mov
bswap
jp
xchg
and
and
rcrl
cmp
lods
push
dec
out
dec
into
imul
cmpb
xor
cs
loopne
mov
rolb
jle
adc
inc
addb
aas
je
pusha
add
cs
or
insb
mov
loop
push
xchg
fistpl
cmp
jge
jp
adc
aam
sbb
int
cmp
mov
adc
and
rcl
out
in
pop
rol
adc
push
adc
sub
sahf
data16
cmp
cs
loopne
mov
rorb
hlt
xchg
push
adc
es
insb
sub
push
fmuls
adc
shr
in
pop
rol
adc
push
adc
imul
add
xor
rcrl
out
in
sbb
fnsave
adc
add
sbb
outsl
stos
mov
cmp
xchg
push
adc
xchg
and
xchg
ds
and
sub
mov
mov
cli
jg
test
mov
pop
xchg
and
add
and
push
cmpsb
dec
lret
lea
mov
add
push
adc
sbb
cmp
adc
aaa
outsl
jnp
cmc
lock
cmp
loopne
pop
xchg
dec
xchg
push
rcrb
pop
and
int
movl
lods
pop
cmp
sub
int3
dec
xchg
pop
in
clc
adc
mov
in
xchg
and
out
imul
cmp
rolb
in
das
adc
hlt
sub
xchg
and
test
sahf
je
push
or
in
inc
push
sbb
movsl
ror
and
add
pop
pop
mov
inc
roll
mov
adcb
sarb
ljmp
mov
arpl
ficomps
lock
add
lods
js
movsl
jmp
fwait
outsl
bound
fstpt
data16
icebp
push
adc
adc
xor
jno
in
sti
jle
pushf
roll
call
sub
cmpsb
lds
mov
dec
lret
xchg
ret
push
fisttpll
dec
xor
lods
add
mov
cmp
into
push
mov
sbb
xor
int
jno
sub
lods
push
in
iret
push
repz
push
int
jge
icebp
push
adc
jns
cmp
adc
pop
mov
fsubrl
lret
cmpsb
xchg
jne
mov
sbb
push
fwait
sbb
pop
mov
jg
and
adc
xchg
and
addr16
jo
outsl
ljmp
outsb
rcrl
shrl
jp
adc
and
inc
ds
pop
jl
cmp
sub
and
xchg
in
inc
aad
or
ss
xchg
push
ret
mov
call
mov
push
or
xchg
fidivrs
bound
xchg
adc
mov
mov
push
dec
xchg
jle
filds
test
aas
fcoms
sub
ss
xor
sub
out
pop
push
movsl
or
pop
xlat
sar
and
adc
jl
ds
xchg
xchg
push
popf
int
inc
inc
lods
jg
aas
add
mov
mov
sarl
imul
mov
pop
addr16
into
and
lock
jae
lea
jb
push
fimuls
dec
pop
push
inc
fcmovbe
jmp
mov
insb
dec
jp
adc
pop
lock
inc
stos
lea
jne
mov
mov
and
fildl
nop
ds
int
sbb
sub
adc
mov
jne
clc
jns
and
int
testb
add
and
pusha
iret
cltd
and
cmpsl
push
inc
pop
push
mov
or
jmp
mov
xchg
jmp
outsb
xchg
cmp
jnp
mov
cmc
loop
fildll
fstpt
and
push
push
sbb
rcll
aaa
outsl
stos
or
cli
mov
fstpt
sbb
mov
mov
aam
push
dec
int
cmp
lods
or
ja
adcl
xor
repz
add
ret
fnstenv
and
arpl
mov
roll
insl
push
es
push
xor
cltd
test
jecxz
test
sti
jp
jo
pop
push
adc
test
add
sti
or
pushf
push
rcrl
sbb
jp
aaa
in
lret
int
andb
pushf
insl
push
adc
mov
cmp
mov
stc
test
fisubs
add
fs
mov
push
sti
xorl
cmp
int3
enter
or
sub
pop
inc
mov
in
mov
sub
lods
sub
mov
lcall
or
in
pop
std
cmovbe
aas
sub
push
sub
mov
push
test
fimuls
test
push
lods
jmp
push
lret
gs
call
test
cmpl
in
outsl
pop
int
sbb
ja
loop
mov
test
xchg
and
mov
sub
enter
add
adc
xchg
cmp
and
out
test
sti
out
jnp
ja
cmp
push
mov
movsb
loop
imul
int
stos
push
pop
add
movsb
mov
jge
dec
test
in
push
and
pop
imul
fldenv
insb
and
cmpsw
dec
add
or
adc
xor
adc
outsb
dec
daa
pop
jl
sbb
loope
aas
leave
mov
out
lea
popf
mov
cmp
or
popa
std
push
xlat
pop
fwait
ret
popa
into
mov
test
sahf
cmp
mov
fwait
xchg
mov
pop
test
jecxz
test
sbb
push
cld
jl
and
or
xchg
iret
gs
pop
pop
pop
pop
out
dec
add
dec
int
aas
sbb
in
test
ret
pop
int
jmp
xor
add
dec
xchg
xchg
jmp
mov
pop
mov
mov
xchg
test
js
lods
dec
dec
nop
or
jns
jge
jl
and
test
seto
or
cmp
js
or
pop
pop
ret
push
decl
sbb
cmpsl
out
jecxz
sub
and
aaa
jecxz
popf
stos
dec
or
mov
sbbb
pusha
mov
lahf
daa
dec
cmp
adc
stos
scas
jmp
mov
jns
lahf
pop
les
pop
out
in
push
hlt
imul
ds
xchg
ret
sbb
jecxz
jmp
cmpsl
hlt
mov
pop
mov
inc
sbb
imul
loope
adc
jns
mov
sub
ret
stos
sub
mov
pop
or
rcrl
jbe
add
js
lods
xchg
cltd
fisubrs
je
hlt
mov
call
mov
push
xor
inc
hlt
cwtl
fsubrs
push
adc
or
icebp
imul
adc
lds
inc
inc
add
inc
add
cmp
push
cmc
cmpsl
scas
lods
jbe
imul
dec
mov
call
xchg
or
sub
gs
or
push
inc
jl
push
pusha
push
pop
pusha
das
mov
rorl
fstl
loope
jl
sub
leave
lea
add
add
pop
push
adc
ss
cli
add
pop
or
js
nop
push
push
popl
cwtl
gs
pushf
repz
fbstp
and
dec
pop
mov
mov
popa
or
es
mov
push
or
aad
xor
cltd
cmp
frstor
aam
test
inc
orb
call
xorl
in
dec
dec
xchg
mov
idivb
stc
das
and
mov
dec
push
jg
fnstsw
mov
mov
dec
xchg
push
sti
push
cmp
mov
andb
insb
and
mov
std
sub
push
movsb
cmp
xor
pop
bound
stc
test
in
or
add
adc
pop
cmp
mov
push
inc
add
sbb
or
sbb
gs
mov
popa
and
cmp
fidivl
mov
into
mov
xor
push
std
cli
andl
or
mov
aam
push
sub
inc
push
fists
fmull
sbb
loopne
data16
push
enter
push
adc
mov
mov
roll
std
rorb
cmpsl
push
lods
pop
cmp
push
loopne
xchg
adc
and
dec
push
pop
and
cmpl
dec
mov
sbb
bound
adc
hlt
inc
aam
lret
call
adcb
imul
out
cmp
aaa
out
sub
andb
inc
lcall
jmp
or
and
jg
lcall
push
mov
inc
popf
jne
aam
sti
inc
mov
in
mov
adc
mov
pop
rcrb
mov
call
and
cmp
mov
push
adc
push
and
bswap
adc
push
adc
inc
or
cmpsl
sub
dec
imul
push
fmuls
jge
push
cmp
mov
xchg
push
jnp
mov
jns
cmp
jle
mov
test
inc
mov
or
insl
xor
outsb
jg
jl
clc
lcall
or
pop
hlt
mov
jo
ds
mov
jp
push
xor
xchg
movsb
mov
in
push
and
ret
shrl
mov
push
cmpsb
xchg
push
pop
add
or
shr
lock
lods
or
outsb
push
mov
test
jns
adc
inc
mov
int
outsb
rcrl
rcll
push
and
imul
sbb
out
pop
cmp
jle
mov
fsubp
stos
sti
jmp
ljmp
fsub
cmp
repnz
mov
daa
daa
xor
mov
std
sbb
jae
adc
hlt
mov
jecxz
sub
call
cmp
leave
adc
jno
test
adc
repnz
mov
mov
inc
xchg
or
mov
pushf
sbb
pop
pop
sub
add
cli
and
shlb
iret
push
or
xchg
xor
aad
jns
outsb
adc
fisubs
adc
dec
add
push
call
inc
lahf
lea
fsts
cs
cs
cmp
sti
sbb
sti
clc
fwait
sbb
std
dec
jbe
mov
mov
sbb
scas
xor
enter
dec
dec
xchg
cmp
fs
mov
dec
inc
aam
popf
add
or
lods
rolb
sbb
andl
sbb
xor
pop
movsb
stos
loopne
stc
in
inc
vmovhlps
call
mov
scas
xchg
fcomps
lods
xor
sub
cmp
adc
sbb
sbb
or
push
std
push
add
movsl
xchg
scas
dec
out
pop
stc
sub
sub
pusha
mov
mov
shrl
inc
inc
pop
lret
mov
pop
push
adc
out
mov
pop
ret
ret
pop
and
jo
jns
decb
aad
cmpsl
mov
sub
push
push
repnz
push
push
ret
inc
fisubrs
test
jecxz
std
mov
sahf
data16
adc
mov
or
cmp
xlat
dec
lret
mov
fmuls
mov
movsb
dec
pop
push
sti
xorl
add
js
aas
add
aad
inc
push
sbbl
sub
mov
mov
gs
cmp
dec
out
mov
push
mov
mov
gs
std
gs
ret
in
or
loopne
xor
mov
pop
adc
mov
adc
aam
fmuls
pop
enter
outsl
lds
ljmp
adc
sbb
dec
sbb
movsb
cmp
lods
pop
mov
stc
cltd
clc
aaa
in
lret
dec
pushl
sbb
aam
inc
push
dec
sbb
cmp
cmp
movsl
pop
mov
fs
enter
jno
mov
into
sub
movsl
shr
push
push
call
mov
adc
push
adc
iret
sub
dec
je
pop
cld
int
push
movsl
jno
mov
pop
fisubs
pushf
dec
add
and
cld
adc
fbld
xrelease
dec
in
call
decb
sub
push
adc
xor
out
or
push
adc
xchg
fadds
adc
shrl
test
pop
adc
stos
xchg
or
push
push
fidivrs
fadds
adc
fadds
adc
mov
adc
fadds
adc
push
adc
add
jmp
adc
out
dec
mov
pop
adc
ret
repnz
cld
andl
push
adc
test
push
adc
xchg
lods
jno
adc
popf
sahf
cltd
xchg
mov
sbb
das
inc
movl
or
adc
gs
movsl
xchg
inc
jo
inc
das
xor
sub
icebp
push
adc
sub
pop
xor
ror
add
cmp
and
push
cmpsb
cmp
loope
sbb
cld
add
cmp
shr
cmpb
jae
adc
cltd
pop
icebp
jmp
sub
ljmp
ficoms
pop
adc
sbb
fwait
pusha
xorb
adc
jl
add
lret
xchg
and
out
daa
add
or
stos
mov
push
rolb
pop
pop
and
xor
fldl
dec
enter
mov
mov
push
mov
je
push
adc
into
cmc
lahf
es
inc
or
pop
fstps
push
mov
sub
mov
push
xor
sbb
fs
inc
pushf
sbb
jnp
popf
int
mov
cmp
adcb
push
mov
lcall
pop
xor
xchg
xorb
in
js
shr
xchg
push
xchg
in
loop
push
loop
loope
std
imul
insl
adc
add
lock
push
dec
shrl
rcrl
sub
subl
sbb
lret
hlt
je
push
adc
cmp
cmp
andl
push
scas
jl
jbe
andl
push
adc
adc
or
sahf
xlat
in
push
sub
inc
jno
stc
repnz
in
jp
cmpsb
imul
jae
adc
aaa
into
sbb
jnp
and
inc
addb
and
mov
mov
and
ja
ror
push
insl
lds
pop
pop
mov
dec
jmp
xorl
cmpsl
dec
pushf
cmp
addb
inc
addb
out
adc
rclb
xchg
push
rcrl
test
jp
in
push
and
subb
add
jmp
loope
fcmovnu
insl
push
rolb
adc
pop
test
push
mov
xorb
test
dec
mov
push
lods
xchg
mov
je
addb
inc
addb
pop
pop
xor
dec
mov
mov
aam
push
daa
push
je
sbb
mov
mov
or
in
out
jmp
fidivs
cmpsl
dec
pushf
cmp
ret
inc
add
sbb
outsb
mov
pop
mov
arpl
pop
fdivrl
das
add
out
jl
std
cli
jg
inc
pop
lods
pop
ss
dec
xchg
and
cmpsl
ret
xchg
cmp
enter
or
pop
rolb
sahf
outsb
pop
pop
fsubrl
in
mov
push
test
push
adc
in
adc
sbb
add
push
adc
and
push
pop
cwtl
ja
lea
in
outsl
filds
or
inc
ret
mov
dec
out
inc
xor
cmpsl
dec
pushf
cmp
outsb
sub
jecxz
or
fsub
fwait
pusha
fstps
push
repz
iret
aas
daa
icebp
mov
push
mov
xchg
jo
es
icebp
push
adc
and
movsb
test
xchg
jl
stos
push
movsl
movsb
inc
and
add
mov
enter
fsub
lahf
fs
dec
jecxz
ja
shl
adc
sarl
icebp
mov
add
mov
xchg
out
stos
push
mov
pop
mov
and
pop
es
lock
xchg
aad
sbb
fists
dec
and
sti
cli
test
jle
fisttpl
add
cmpsb
push
call
movsl
adc
push
sub
pop
inc
repz
inc
cwtl
popf
sub
jmp
out
aaa
jl
push
adc
xchg
mov
xchg
or
hlt
aad
add
or
xchg
stos
test
cltd
mov
mov
jo
adc
mov
test
xor
sahf
es
mov
sub
add
jo
adc
adc
mov
mov
fwait
mov
adc
outsl
icebp
xor
sbb
push
or
push
sub
shlb
add
add
out
daa
int
je
in
and
adc
push
or
loope
sahf
shl
inc
xor
add
add
dec
xlat
addl
mov
lahf
outsb
push
and
test
stos
xchg
loop
lahf
shrb
orl
push
int3
lds
jo
push
adc
scas
pop
push
aad
sbb
out
mov
lds
jae
or
mov
fistpll
push
cmp
adc
popa
sbb
aas
xchg
pushf
sub
pushf
sbb
pop
or
pop
mov
mov
scas
mov
fadds
adc
outsb
inc
nop
jl
cmp
mov
ret
call
and
fcompp
mov
push
sarl
push
pop
andl
loope
ss
lock
jnp
dec
mov
cltd
fstpl
mov
sahf
test
mov
nop
pop
jne
jo
adc
lret
in
adc
push
lret
inc
inc
add
mov
push
jge
push
js
addb
movb
add
push
sub
push
jns
mov
push
add
push
add
mov
and
jae
mov
push
sub
icebp
push
adc
imull
xchg
movsb
jb
adc
ljmp
stos
mov
iret
mov
mov
loopne
in
mov
add
mov
je
fidivl
push
lock
push
pop
cmp
xchg
fists
paddd
add
test
cwtl
jb
adc
aam
daa
orl
lea
jb
adc
add
inc
mov
xchg
and
sub
mov
dec
push
xchg
jb
inc
push
jle
test
mov
mov
das
pop
jno
clc
icebp
push
adc
pusha
push
mov
jb
enter
or
mov
dec
inc
aas
sub
ds
and
cs
or
mov
rcll
inc
add
mov
dec
fbstp
sar
icebp
push
adc
ds
jno
and
mov
pop
push
adc
mov
cmp
loope
cmpsb
cld
repz
outsb
stc
sbb
addl
dec
clc
out
mov
lods
xchg
movsl
push
cmpsl
dec
pushf
mov
in
xchg
into
loop
orb
mov
stos
shll
fildl
pop
sbbl
bound
jg
or
push
call
fidivl
shrl
shlb
and
inc
inc
addb
cwtl
pop
lods
pop
loopne
and
fnsave
pop
push
adc
push
addl
xor
push
adc
cli
mov
scas
pop
and
mov
push
sub
inc
push
or
std
imul
or
imul
mov
repnz
push
adc
push
test
dec
repnz
adc
mov
push
and
in
mov
push
das
push
inc
insb
cmc
mov
jno
arpl
pop
add
popa
and
push
adc
mov
fs
or
adc
test
arpl
inc
loope
sbb
sbb
ret
mov
sbb
cwtl
mov
pop
jecxz
inc
sub
js
jae
add
lahf
inc
repnz
leave
mov
mov
or
sbb
xchg
and
clc
js
add
sarl
xchg
mov
and
adc
lods
mov
test
cmp
adc
inc
mov
dec
mov
or
test
sbb
rolb
push
pop
inc
inc
iret
stos
xor
fst
scas
cld
jmp
call
sahf
pop
adc
inc
lock
int
sub
mov
shr
adc
fs
adc
and
adc
fsubl
or
insb
movsl
stos
out
pop
sub
sub
xchg
lds
in
stos
add
push
loope
aas
push
scas
add
lods
mov
lahf
mov
add
daa
push
test
cltd
insb
repnz
adc
ja
clc
lret
pop
in
sqrtps
push
and
xchg
mov
pushf
push
cs
add
add
sub
push
cltd
les
sub
sub
jns
outsb
clc
sub
xor
stc
loopne
xchg
push
sbb
xor
adc
and
cmp
mov
or
dec
fdiv
test
mov
int3
fidivrl
adc
xchg
lret
and
fstpt
das
das
pop
push
mov
repnz
adc
pop
pop
push
adc
mov
stos
xlat
ds
ret
stos
nop
xlat
sub
call
cmp
push
lea
lea
sbb
scas
das
jl
mov
leave
push
xchg
lods
sub
cwtl
pop
jle
scas
lea
sub
xor
inc
in
stos
pushw
push
or
js
push
adc
in
pop
adc
pop
frstor
sahf
inc
inc
cwtl
repnz
adc
push
and
adc
jg
inc
incb
adc
xor
adc
push
fsts
jp
jmp
outsl
fistpll
mov
ret
lods
push
movsb
dec
stos
sahf
js,pt
push
adc
jl
mov
xor
mulb
sbb
push
lods
pop
jg
shll
adc
mov
pushf
push
sub
jno
mov
loop
or
fcom
xchg
lcall
adc
mov
cmc
pop
mov
dec
dec
fbld
jg
fidivs
scas
lds
ret
sbb
outsl
out
js
push
adc
lods
or
pushf
xor
xchg
sub
pop
jne
pusha
push
in
inc
pop
enter
add
pop
cmp
jl
es
aas
sub
aas
adc
jb
les
jg
loop
nop
and
sbb
or
test
scas
mov
jb
pop
mov
and
js
dec
addb
pop
mov
dec
call
pop
xor
fidivl
inc
shll
mov
icebp
or
add
sbb
xorb
pop
jmp
cmp
js
and
or
xchg
ds
xor
and
adc
jb
lea
pop
or
cmp
lods
pop
mov
and
bound
push
test
mov
stos
sbb
push
mov
adc
scas
mov
aad
xlat
pushw
call
aam
mov
pop
add
dec
rcll
xor
outsl
fdivrs
pop
out
test
xor
out
pop
mov
xchg
xchg
in
push
mov
xor
xor
push
scas
dec
fsts
adc
pusha
or
lea
or
scas
leave
xchg
cmp
sarb
insl
xor
pop
int3
push
loope
sbb
dec
lar
movaps
stos
mov
cltd
loop
xor
repnz
adc
lds
add
mov
sbb
dec
adc
shlb
push
adc
dec
xchg
ret
out
dec
mov
test
pop
je
sub
and
mov
into
and
out
int
lahf
mov
repz
push
rcll
and
pop
adc
dec
or
push
cmp
pop
and
js
fs
sti
lods
sub
loope
orb
sub
cmpsl
leave
add
movsb
cmpsb
repz
pop
mov
sbb
imul
xchg
push
mov
cs
mov
pop
dec
and
cmp
xor
shlb
shrl
fdiv
push
adc
in
mov
dec
in
cmp
lahf
int3
inc
or
add
pop
cltd
imul
xor
outsb
je
sbb
into
rcrl
jo
adc
sbb
and
jle
lods
push
aam
xor
mov
jo
adc
adc
cmp
vaddsd
sbb
or
mov
sub
test
push
xchg
mov
test
jne
sub
xchg
dec
rcll
into
or
push
imul
jp
or
enter
adc
repnz
adc
stc
jecxz
xchg
in
adc
mov
jo
adc
and
mov
nop
rol
out
xor
jecxz
mov
bound
and
rcrl
insl
fwait
popf
test
test
imul
and
cltd
in
call
add
dec
push
pusha
daa
leave
add
mov
es
adc
xorb
loop
dec
push
lods
add
xor
sub
and
adc
stc
pop
mov
insl
cs
cmp
and
adc
out
push
cmpsl
dec
pop
ljmp
ss
and
adc
in
pop
adc
movl
jo
adc
ficoml
xchg
and
adc
cmpsb
pop
add
xchg
or
or
or
test
nop
lea
scas
lahf
outsl
stc
adc
rorb
adc
inc
pop
mov
fucomi
out
jmp
shrb
jns
loopne
call
jmp
jb
adc
and
fdivs
sbb
push
stos
add
add
or
ljmp
sarb
jp
test
outsl
mov
cli
daa
outsl
and
dec
inc
or
cmc
ljmp
xor
and
scas
dec
aam
lea
and
adc
jo
jge
adc
and
adc
pop
pop
jge
loopne
push
and
adc
mov
mov
das
insl
cld
push
lds
mull
mov
aas
stos
pusha
addr16
pop
dec
imul
test
push
and
adc
inc
daa
and
push
mov
xor
cmpsl
sbb
aad
mov
sbb
std
cli
stos
dec
and
adc
jbe
stc
loopne
sub
push
addr16
and
adc
pop
imul
fbstp
scas
push
xor
xchg
cmp
push
sti
repz
adc
add
adc
adc
mov
sbb
pop
mov
sti
cs
rcrb
dec
and
adc
mov
dec
and
adc
lods
imul
jae
ret
sbb
sti
pop
cmpl
push
adc
js
and
inc
cwtl
mov
dec
pop
push
push
jmp
jns
test
rorl
fisttps
addl
lcall
andl
ret
jbe
into
fwait
inc
repz
enter
mov
dec
out
fstp
cwtl
stos
jno
sahf
dec
mov
lock
or
loopne
repnz
adc
mov
negl
int3
mov
jno
sti
cltd
push
sarl
mov
inc
cmp
mov
mov
xor
roll
sbb
inc
xchg
jnp
cmpsl
push
les
adc
cld
xchg
sub
mov
rep
add
mov
push
movsl
lret
fdivrs
ds
inc
test
xchg
rorl
or
fsubrl
jne
fimull
pusha
pop
push
adc
int3
outsb
cli
push
inc
out
test
pop
add
push
or
cmp
sarb
aad
das
and
push
adc
aas
addb
push
cmp
push
cld
sahf
push
je
mov
pop
mov
sub
sahf
xchg
sahf
pop
push
adc
or
sbb
call
xor
sub
push
mov
pop
rol
mov
push
out
xchg
pop
sub
inc
cli
mov
cli
or
orl
sbb
int
xchg
or
sub
lds
aad
inc
adc
cmp
fisubrs
dec
iret
jbe
aad
arpl
jns
je
push
mov
xor
dec
mov
sub
pusha
jecxz
mov
mov
cmp
pop
es
lret
push
pop
jae
dec
lods
pusha
loopne
loop
sub
lret
push
mov
test
push
push
and
adc
andl
xor
int3
push
and
adc
out
push
cltd
out
in
adc
enter
add
out
sub
cmp
mov
adc
rcll
dec
jg
sbb
js
mov
sbb
lods
pop
mov
fists
cmp
jg
mov
idiv
rcll
adc
inc
stc
cli
stos
push
and
adc
pop
and
adc
xchg
dec
xchg
pop
in
dec
adc
lea
fs
xchg
mov
add
outsb
or
xchg
and
pop
push
and
adc
lret
inc
pop
ret
out
pop
sti
rol
popa
pop
inc
cmp
push
cmpsl
lcall
mov
mov
nop
aam
call
repz
dec
or
and
mov
mov
ljmp
or
fidivl
mov
lock
inc
flds
shlb
sbb
outsl
xor
push
xchg
fidivl
enter
or
or
pop
lods
fcmovnb
bound
loop
movsb
xchg
loop
pushf
popa
cltd
out
sti
push
test
mov
inc
syscall
dec
jg
test
daa
fsubrl
in
xchg
movsl
add
dec
sahf
cmp
and
ja
addb
mov
push
pop
ret
imul
sub
pop
popa
fistpl
push
pop
jge
mov
sbb
push
jnp
fmulp
ret
bound
repz
adc
out
mov
dec
pop
sarl
outsl
mov
test
jo
sahf
outsb
pop
mov
xchg
mov
jae
sbb
in
rcr
mov
mov
sub
lcall
mov
sub
push
jl
mov
lds
push
or
sub
fnstenv
or
ds
pop
dec
in
les
dec
push
dec
clc
clc
call
and
mov
fbstp
lods
dec
push
inc
repz
adc
jecxz
push
add
jno
mov
jo
adc
aas
aad
ficomps
dec
imul
push
xchg
lahf
push
xor
movl
adc
lods
or
pusha
inc
mov
sbb
push
adc
rolb
mov
lock
out
pop
dec
and
fadds
pop
add
test
packuswb
or
cmp
lea
je
int
sbb
mov
jg
fists
roll
push
adc
addb
or
sbb
mov
les
pop
cltd
or
pushf
lcall
add
les
fdivr
xor
jmp
jle
and
pop
adc
pop
jmp
add
mov
jle
add
xchg
aad
and
adcl
test
sbb
loope
xor
data16
lahf
mov
mov
addb
aas
push
scas
push
ds
xor
es
lahf
xchg
mov
cmp
xchg
daa
push
or
pop
movl
mov
xor
jge
mov
aad
repz
adc
clc
and
ret
lds
jecxz
std
add
fldl
dec
pop
stos
test
or
ss
sub
test
or
fstps
repz
adc
sbb
bound
adc
js
or
mov
and
js
or
mov
je
push
mov
pop
adc
test
push
jmp
pushf
iret
test
pusha
test
adc
aam
cmp
push
adc
fsubl
mov
lahf
xchg
pushl
js
pop
adc
gs
scas
jl
incb
or
inc
js
pop
adc
dec
test
or
pop
popf
mov
adc
adc
test
or
push
idivl
pop
adc
rolb
mov
mov
loope
cwtl
repz
adc
aas
shll
inc
imul
or
push
jg
inc
push
inc
pop
ljmp
push
inc
xchg
dec
pushf
pusha
sti
mov
mov
ljmp
fdivr
xchg
and
data16
cmpsl
cmp
lcall
add
lods
movsb
sbbl
jb
adc
fwait
cmp
popf
sbb
adc
mov
lret
adc
cmp
fidivrl
imul
inc
int
lret
jecxz
mov
cmc
cmc
jo
outsl
push
mov
xorb
decb
andl
outsl
and
inc
addb
ja
int
roll
fisttpl
dec
pop
sub
es
cmpsb
xor
inc
aad
lret
rolb
clc
sbbl
out
mov
fidivl
pushf
sub
nop
jg
fcmovne
ret
or
inc
pop
in
mov
lahf
dec
pop
adc
add
mov
lds
push
jg
or
jg
lods
pop
xor
es
jns
mov
inc
aam
dec
or
cmp
lock
push
cmp
xchg
mov
out
adc
imul
jbe
sub
pop
inc
push
das
xchg
dec
xor
adc
mov
pop
dec
mov
sbb
cmp
jmp
push
cmpsl
dec
pop
pop
stos
in
aam
jecxz
add
pop
adc
jmp
sub
aas
fldenv
pop
dec
fsubs
mov
or
andl
stos
xor
aaa
or
loope
push
xor
ja
mov
add
cmpsl
pop
add
adc
push
fs
mov
fidivrs
sub
daa
adc
stos
adc
mov
loopne
jnp
and
push
fldcw
mov
data16
lahf
adc
and
dec
mov
push
mov
loope
add
stc
jnp
mov
jbe
jbe
enter
in
pop
hlt
or
mov
jl
test
adc
nop
adc
lea
gs
xchg
xor
pop
call
add
lret
lret
cs
mov
push
roll
jns
insl
out
ret
in
and
int
lahf
jo
mov
cmp
outsb
cmpsb
fdivrp
scas
loop
sub
loop
xchg
push
and
mov
sub
out
mov
stos
mov
or
pop
xor
fdivs
lahf
jge
outsb
mov
sbb
mov
pusha
xor
mov
lcall
pop
cmp
pop
cmpsb
sbb
outsl
cli
lcall
adc
push
leave
push
pop
dec
xchg
lods
mov
xlat
push
movsb
shrb
cmp
and
add
sub
pop
xor
gs
pop
sub
mov
loop
jecxz
dec
repz
push
sub
int
out
cld
push
ss
test
mov
cwtl
stos
inc
xchg
sbb
cmp
mov
and
pop
fcmovnb
push
subb
icebp
cmp
mov
ficomps
dec
or
gs
imulb
add
cmp
jbe
jae
sbb
pop
jmp
in
jmp
cs
dec
dec
mov
ds
dec
mov
or
cmc
push
add
fimuls
mov
push
xor
dec
mov
cmp
push
test
pushf
mov
xchg
in
rcrb
pusha
push
shl
dec
in
add
and
enter
mov
in
jo
fildll
mov
xor
lock
lods
loope
add
mov
insl
pop
in
mov
jb
aaa
in
adc
adc
pop
jbe
sub
gs
test
push
push
cmc
daa
outsl
and
jbe
aad
add
bound
pop
add
xor
push
mov
mov
or
sar
test
xchg
xlat
add
adc
push
lods
das
mov
push
loope
les
push
pop
dec
pushf
cmp
fwait
ja
les
push
outsl
hlt
jge
pop
add
mov
fidivl
cmpsl
dec
pushf
mov
shr
js
or
cmp
fnstcw
sbb
cmp
data16
addl
jle
mov
and
cmc
adc
add
adc
pop
sub
loope
faddl
ret
rcrl
in
fistps
shll
jno
pop
lods
pop
mov
pop
iret
imul
inc
sub
nop
mov
call
test
js
push
fmul
pop
adc
mov
rcr
enter
shll
sti
scas
rcrb
inc
or
pop
pop
enter
popa
xor
mov
push
and
addl
push
in
nop
and
in
and
jnp
clc
rcrb
inc
shrl
sub
adc
loope
imul
jg
jbe
and
mov
push
sti
gs
cmp
fdivrs
outsb
loope
lea
cwtl
test
ja
add
clc
pop
sbb
mov
movsl
mov
sbb
cmp
inc
data16
sub
in
mov
adc
mov
and
push
js
repz
adc
fbstp
push
xchg
mov
or
sub
adc
add
add
cmpsl
push
in
mov
xchg
lods
mov
xlat
in
and
addr16
adc
popf
push
cli
test
aaa
lcall
repz
pop
or
push
dec
push
dec
pop
add
or
cld
imul
inc
repnz
xorl
emms
mov
cltd
mov
lods
je
mov
js
mov
jecxz
ret
mov
rolb
mov
xor
subl
rclb
cmp
clc
lock
adc
mov
adc
imul
test
in
inc
lods
or
outsl
dec
add
jge
lock
mov
leave
test
adc
fcompl
iret
and
sub
mov
adc
and
adc
aaa
mov
neg
pop
std
xchg
int3
cmpsb
das
pushf
cmpsb
arpl
outsl
sub
aam
push
shlb
sbb
cmp
adc
push
arpl
movsl
adc
dec
sbb
jnp
jb
adc
nop
shrb
jg
loop
imul
inc
loopne
cmpsl
adc
aad
xchg
test
pop
sbb
lods
rorl
xchg
std
pop
pop
dec
pop
jnp
xorpd
push
mov
shl
push
adc
hlt
and
adc
pushf
jnp
inc
pop
cmp
pop
sbb
test
loopne
cli
mov
mov
sbb
push
adc
repz
and
arpl
popf
fildl
adcb
je
mov
mov
popf
sub
push
ficompl
outsb
cmp
push
cmp
and
mov
in
dec
xchg
add
sti
lea
imul
xchg
jmp
clc
add
or
ja
adcl
nop
pop
pop
sub
push
mov
mov
fstpl
imul
adc
lahf
add
mov
in
mov
jge
testb
out
nop
pop
outsb
sahf
xor
xchg
pop
test
xor
int
imul
add
ret
inc
jle
dec
test
xchg
ret
call
clc
dec
mov
pop
std
and
push
movsb
xor
lret
cmp
scas
pop
mov
std
jp
out
inc
or
in
int
aam
es
cmp
cwtl
mov
out
pusha
outsb
jge
or
sti
or
mov
fsubrl
sbb
in
jnp
adc
cli
pop
std
fisubrl
shr
aad
mov
aam
or
adc
popf
sbb
mov
mov
mov
mov
jno
mov
cmpsl
adcb
in
nop
and
mov
flds
rorl
cmp
push
stc
dec
fsubrl
mov
pop
in
nop
and
cmpl
shlb
fidivrl
xchg
lods
add
push
mov
pop
jle
incb
push
pop
pop
sub
rcrl
pop
lcall
call
jno
adc
insl
mov
ret
insb
sbb
push
lods
int
hlt
shl
push
adc
mov
ret
repz
adc
mov
jmp
cmp
enter
pop
xchg
aam
stos
pop
mov
xor
mov
pushf
cmp
es
sbb
test
repnz
xor
push
fcomps
test
mov
fucomi
loopne
notb
pushf
gs
pop
mov
sqrtps
cmp
cmp
push
repnz
pop
out
pop
sub
bound
push
mov
jo
clc
jne
out
cmp
adc
cmpb
mov
sbb
push
lock
scas
push
mov
jnp
sub
jecxz
mov
pop
inc
in
mov
movsl
xchg
inc
push
or
adc
divl
push
sub
jl
jns
push
fwait
and
add
cmp
inc
xchg
mov
dec
mov
mov
lret
out
cwtl
shlb
je
xor
bound
mov
movsb
jg
gs
mov
rcll
stos
loop
and
cmp
mov
insb
filds
xchg
jmp
outsl
jp
scas
jge
jo
or
add
inc
xchg
aam
or
sahf
ss
cltd
or
lock
ret
adc
push
pop
nop
mov
aam
add
push
adc
push
sub
pop
push
adc
mov
fisttpl
adc
ds
les
sti
jecxz
test
cwtl
cmpsl
insb
push
repnz
pop
in
mov
dec
adc
xchg
insb
mov
jnp
jo
loope
sbb
insl
mov
lock
cmp
dec
test
cmp
movsl
fwait
dec
adc
push
adc
pop
icebp
in
rcl
iret
mov
loope
mov
in
sbb
ljmp
jp
orb
or
nop
pop
aam
fs
ljmp
clc
cmp
shlb
imul
aas
mov
fbld
fdivrl
rolb
jg
mov
lcall
rol
leave
shr
in
imul
jb
loopne
cltd
mov
jmp
mov
jl
addl
sub
cmp
sbb
lds
adc
inc
pop
sub
jo
sub
in
cmp
rorl
fnstsw
push
sarl
popa
mov
movsl
pusha
jnp
into
inc
popa
lret
lods
pop
mov
or
add
dec
and
cld
push
cmp
movsl
dec
jge
push
shll
sub
or
adc
fwait
scas
mov
xorb
pushl
stos
push
sub
mov
or
mov
lahf
push
cmp
dec
pushf
mov
les
add
jecxz
push
xor
sub
fdivr
add
pushf
sub
adc
test
inc
loope
pop
jne
sbb
and
jae
and
xchg
or
xchg
and
pushl
xchg
jo
push
cs
mov
xor
push
test
sbb
mov
add
xchg
in
and
sbbl
jb
adc
les
jne
cmp
lock
adc
add
test
insl
out
adc
inc
mov
cltd
mov
mov
std
mov
scas
call
sbb
dec
scas
iret
xor
lahf
ret
fbstp
sub
adc
pop
cwtl
jb
adc
sbb
jo
and
adc
pop
icebp
cmpsb
push
jle
in
adc
shr
lock
xlat
xor
lea
sbb
lret
stc
cwtl
in
subb
add
add
mov
das
cmpsl
out
mov
in
jmp
dec
pop
shll
aad
cs
shlb
sbbb
cli
pop
mov
jmp
dec
jmp
sbb
ret
pusha
add
jmp
jle
fdiv
fnstcw
daa
cmp
mov
nop
clc
lcall
je
cmp
mov
sub
inc
ja
pop
outsl
xchg
test
adc
push
aaa
dec
sub
jne
stos
xorl
jmp
scas
sub
outsl
daa
mov
xor
push
pop
dec
movsl
ljmp
fcmovnb
outsb
pop
push
inc
lret
and
pop
jmp
mov
or
fistpll
aaa
cltd
cmpl
dec
movsb
and
out
movsb
mov
xchg
pop
mov
fs
inc
xchg
xor
xchg
js
mov
stc
mov
sarb
inc
jns
mov
mov
mov
push
xor
xlat
jmp
cmp
adc
mov
enter
in
inc
mov
cmp
adc
sar
rclb
dec
inc
or
cmp
out
dec
cli
int
dec
and
cs
jns
mov
arpl
cmp
adc
dec
mov
stos
jb
bound
test
jmp
int3
cmp
adc
int3
cmp
adc
aam
jnp
adc
cmp
adc
cmp
adc
mov
inc
in
or
rcll
mov
add
push
lret
sub
dec
mov
loopne
cmp
adc
lahf
lcall
push
adc
jne
inc
out
adc
orl
xlat
stos
daa
sbb
xchg
xor
loope
ja
lea
push
iret
stos
mov
push
std
jns
sub
sub
sbb
xchg
insb
test
mull
lea
jg
xchg
and
bound
mov
fisubl
aaa
outsb
clc
pop
sub
pop
pushf
sbb
xchg
mov
mov
stos
lret
cmp
stos
cmpsb
dec
inc
mov
nop
add
dec
jne
test
mov
shll
cli
jno
mov
lea
cmp
jbe
jne
jg
insl
adc
jnp
push
jbe
mov
mov
fsubrl
pop
pop
push
outsl
repz
mov
imul
pop
jp
out
frstor
add
dec
pop
add
cmp
cmpsb
negl
cmp
or
cli
cmp
dec
test
mov
sbb
outsl
popa
imul
adc
push
popa
jecxz
aas
and
mov
insb
insb
in
fcomp
jmp
sub
out
xor
cmp
sub
int3
sub
fistl
add
add
adc
sub
xchg
test
or
mov
lahf
insl
push
insb
mov
in
mov
sbb
jmp
inc
out
cmc
addl
add
ss
fsubrl
mov
xor
popa
dec
pop
jo
xor
es
mov
js
out
ds
jae
adc
popf
mov
shl
jg
xchg
mov
pop
lods
mov
add
adc
sub
adc
sub
adc
repnz
aas
sub
loope
daa
mov
stc
mov
paddsb
outsl
fstps
repnz
aas
sub
loope
daa
stos
or
sar
inc
insb
test
push
mov
adc
mov
and
clc
mov
lods
int3
sub
adc
sub
adc
jg
dec
cmp
push
mov
xchg
mov
test
stos
push
orl
cwtl
cmp
cmp
push
mov
xchg
test
loopne
push
jg
insb
xchg
stos
add
lcall
push
daa
inc
stos
fnstenv
cmpsw
sahf
mov
sub
std
repnz
stc
cmc
xor
out
inc
mov
xchg
out
sub
cmp
and
and
cmp
jbe
xchg
lret
xchg
dec
dec
pop
pop
sub
adc
adc
nop
sub
adc
outsl
push
mov
sbb
mov
add
mov
sub
test
cmc
imul
loopne
mov
xchg
scas
xchg
dec
dec
adc
insl
sub
test
add
loop
stc
pop
scas
cwtl
repnz
sub
cwtl
mov
xor
mov
or
push
push
push
adc
clc
sbb
js
cmp
cli
aaa
test
dec
movsl
jne
pushl
pop
pushf
popf
pop
sub
and
add
adc
add
adc
add
loope
mov
add
mov
jbe
jl
inc
jge
add
and
movsb
scas
mov
out
mov
jb
inc
ja
mov
sbb
mov
pop
aam
add
inc
inc
inc
inc
dec
movsl
push
pop
sub
push
sub
add
adc
aam
bound
shll
shll
or
in
push
mov
inc
or
mov
lahf
outsl
pop
repnz
sub
cmp
and
fidivrl
sti
mov
or
pop
pop
rcl
cltd
bound
in
mov
flds
sti
xor
push
sbb
icebp
std
or
stos
stos
jbe
fdivl
cmp
je
out
insl
mov
add
mov
push
cmpsb
mov
cmp
adc
add
or
add
nop
cs
add
adc
add
scas
nop
jg
jle
mov
xor
mov
movsb
mov
and
shrl
xchg
call
icebp
xor
vucomiss
inc
mov
faddl
xchg
jecxz
mov
nop
xchg
js
push
xchg
inc
push
jo
cs
pop
cmp
mov
mov
pop
dec
sub
fcoms
and
cs
repz
adc
cs
adc
cs
adc
cs
mov
popa
adc
push
stc
mov
paddsb
outsl
fstps
repnz
aas
sub
loope
daa
stos
or
sar
inc
insb
test
push
mov
adc
mov
and
clc
cld
cs
das
add
adc
das
add
adc
jg
dec
cmp
push
mov
xchg
mov
test
stos
push
orl
cwtl
cmp
cmp
push
mov
xchg
test
loopne
push
jg
insb
xchg
stos
add
lcall
push
daa
inc
stos
fnstenv
cmpsw
sahf
mov
sub
std
repnz
stc
cmc
xor
out
inc
mov
xchg
out
xor
stc
and
and
cmp
ja
xchg
lret
push
xchg
das
add
cwtl
xor
add
adc
das
add
mov
sbb
adc
mov
add
arpl
cwtl
xor
shl
outsb
clc
addr16
mov
xchg
stos
xchg
dec
dec
adc
jo
es
mov
or
call
xchg
clc
cwtl
xor
stos
jo
fstpt
clc
mov
or
ret
in
or
mov
xor
out
and
pop
mov
lret
aaa
mov
cwtl
xor
dec
xor
adc
adc
adc
adc
adc
adc
outsb
fnstenv
cmp
push
lods
loop
daa
dec
sub
mov
or
mov
pushf
insl
fisubl
aas
sub
loope
and
or
aas
movsl
inc
xchg
test
or
loopne
stos
push
jp
cwtl
xor
xor
adc
xor
adc
call
fs
sti
fs
cli
push
leave
fbstp
in
mov
or
push
push
push
pop
sahf
push
sbb
jp
out
imul
cmp
aaa
add
mov
xor
and
je
jmp
mov
jo
dec
repnz
inc
push
hlt
push
adc
mov
push
push
hlt
push
adc
sbb
lret
mov
popf
adc
scas
inc
inc
das
xor
mov
enter
movsl
repz
aam
dec
repz
int
push
inc
mov
movsl
mov
imul
addb
leave
add
stos
lahf
stos
adc
jb
shrb
push
mov
adc
stc
cltd
mov
test
xchg
jne
scas
xchg
out
in
pop
outsl
mov
xor
sub
xor
ret
add
add
fcoms
sbb
dec
xchg
mov
out
sbb
add
jae
hlt
push
adc
push
mov
push
js
pop
mov
xchg
daa
dec
test
adc
bound
pop
jne,pt
xor
add
imul
imul
in
jmp
jo
push
adc
xor
mov
adc
jo
push
adc
fstl
jg
xchg
repz
sti
in
popa
jl
push
int3
adcl
inc
fwait
subl
adcb
in
mov
cmp
out
loopne
cmp
dec
outsl
sub
mov
xor
movsb
and
test
mov
sub
and
loop
and
mov
rcrl
in
clc
btr
jno
mov
movl
int
sub
pop
inc
enter
test
push
sbb
hlt
dec
mov
add
mov
inc
cmp
aad
rolb
lea
or
fwait
popf
mov
pop
stos
cld
ret
loope
mov
dec
imul
dec
inc
pop
addr16
mov
xor
dec
jo
shll
into
xchg
inc
stc
test
xchg
ja
inc
add
add
cs
je
aam
push
shlb
jb
fidivrs
cmc
cmc
es
insl
fidivl
xchg
push
xlat
cmp
nop
sarb
and
add
lods
or
pop
mov
mov
scas
ret
in
cltd
out
jmp
or
sub
inc
cmp
pop
ja
pop
addr16
mov
inc
and
popf
into
mov
enter
push
add
adc
movsl
dec
adc
outsb
or
lcall
clc
jbe
enter
hlt
loope
shlb
xchg
frstor
mov
scas
cmpsl
popf
push
test
cmp
add
or
arpl
push
jo
fnstenv
ret
and
addl
cli
repz
aam
dec
ffreep
jbe
push
std
jl
lods
pop
xor
pop
inc
scas
test
stc
mov
inc
jl
adc
pop
xorb
shl
xchg
push
sti
xchg
mov
outsl
aam
xchg
lea
sbb
ljmp
push
push
in
sbb
push
es
mov
push
mov
test
sbb
and
jmp
es
fldl
sub
shrb
add
lods
pop
mov
fcmove
out
push
and
and
dec
pop
aas
rcrb
in
and
cwtl
fdivs
pop
adc
ficompl
push
mov
sbbl
outsl
loopne
inc
rolb
adc
pop
cmp
fwait
jge
movl
test
adc
pop
adc
sub
and
pop
sbb
sbb
dec
add
push
iret
dec
and
and
ljmp
loop
mov
pop
adc
ret
xchg
adc
test
sbb
popa
sub
pop
adc
inc
rolb
adc
inc
out
repnz
sub
std
movsb
lds
mov
gs
inc
repnz
aas
add
ss
mov
or
inc
rolb
adc
scas
ret
outsb
mov
pop
subb
popl
shrl
imul
in
mov
sub
jae
mov
icebp
test
mov
shrl
cltd
xor
inc
pop
es
mov
inc
xchg
jl
dec
cmpsl
movsb
push
movsb
out
ret
adc
xor
xor
or
xchg
iret
insl
outsl
push
js
leave
mov
leave
adc
ficompl
clc
sub
jnp
add
push
sbb
inc
dec
sti
or
and
adc
pop
orps
jle
lcall
or
add
out
rorb
dec
sbb
inc
xchg
mov
lahf
add
adc
inc
jns
rcrl
and
test
inc
fsubrs
pop
lods
sub
xorl
xor
je
cwtl
in
pop
sbb
cmpsl
or
cmpsl
pop
outsb
push
cmpb
aam
cmp
ftst
sbb
add
mov
push
pushf
arpl
pop
push
call
push
mov
cmp
mov
aad
loop
popa
mov
xchg
sbb
pop
outsb
daa
jl
xchg
mov
inc
xor
jo
jno,pt
gs
das
in
xor
sub
pop
stos
lds
inc
jmp
aas
pop
lret
push
sbb
insb
lret
xor
popf
sub
jne
pushf
idivl
lret
sub
inc
inc
arpl
mov
lret
pop
insb
fwait
jbe
adc
shr
xor
mov
test
fs
lahf
adc
add
popa
movsb
push
test
ss
rolb
shll
pop
and
pop
adc
push
mov
addl
sbb
insl
shlb
mov
aam
inc
int
negb
xchg
xor
mov
adc
xlat
pop
dec
es
inc
out
dec
pop
fidivl
hlt
int
cmp
mov
imul
sub
movsl
fdiv
sbb
loope
pop
fsub
mov
insb
mov
sbbl
sahf
outsb
mov
test
es
cmpsb
mov
dec
stos
pop
mov
mov
xchg
jg
test
enter
clc
xchg
cmp
inc
cmpsl
dec
idivb
sbb
aaa
in
imul
push
enter
push
mov
jg
mov
fcmovu
pop
aad
push
pop
cmp
outsl
lea
je
ret
mov
std
movsb
inc
lods
pop
mov
push
repz
leave
ja
mov
cmpsl
pop
fxch
repz
repz
pop
std
pop
push
adc
inc
dec
std
shl
xchg
mov
into
mov
pop
popa
fsub
inc
pop
lret
jmp
lret
push
dec
jl
push
push
in
pop
add
push
es
cmp
inc
mov
jg
int
into
imul
mov
xchg
push
ljmp
repz
push
loopne
mov
pushf
cmp
inc
rolb
adc
addl
cmp
push
mov
xchg
and
push
sbb
push
xchg
and
jne
inc
jne
loop
js
and
adc
sub
out
dec
sbbb
lods
pop
movsl
xchg
mov
adc
add
rcrb
mov
out
cmp
das
in
cwtl
jo
push
and
mov
or
add
or
mov
adc
movsb
sbb
imul
inc
jno
mov
sbb
sub
fbstp
test
pop
cmp
test
dec
add
and
aas
aad
jne
xor
pop
inc
push
scas
fwait
sbb
xchg
mov
adc
cmp
cmp
jg
dec
sbb
fldenv
sub
imul
aam
and
orb
lcall
movq
in
adc
jecxz
sti
movsb
dec
nop
mov
or
loopne
aas
pusha
bound
cmpsl
mov
leave
sub
fistpll
cli
icebp
jbe
inc
leave
pop
adc
mov
adc
pop
roll
adc
pushf
pop
roll
adc
mov
pusha
roll
adc
add
roll
adc
or
pop
adc
mov
roll
adc
push
pusha
fbstp
in
push
sub
and
adc
loopne
mov
loop
enter
fwait
pusha
orb
clc
add
pop
push
insl
jge
adcb
or
stos
jl
lahf
push
shlb
xchg
pop
jecxz
daa
mov
jecxz
les
or
fisubrl
jne
cmpb
aas
add
and
dec
mov
enter
pop
pop
test
repz
mov
pop
adc
movsb
and
fiadds
jns
int3
jecxz
xorb
mov
int
stos
sbb
out
mov
loop
push
cmc
and
and
adc
xchg
data16
jbe
and
adc
mov
pop
sub
xchg
mov
adc
inc
pop
and
jae
jae
insb
sbb
es
pop
aam
stos
sbb
pusha
leave
pop
adc
dec
xchg
add
pusha
inc
test
pop
adc
add
dec
mov
mov
div
ret
or
adcl
adc
adc
jbe
or
sbb
stc
jb
aad
data16
sub
addb
sub
ss
fwait
pop
adc
dec
daa
dec
lret
cwtl
cmp
ss
jae
or
ljmp
sub
in
aas
cmp
jmp
cmp
mov
push
sub
rcll
inc
or
mov
xor
aam
sub
jmp
pop
and
push
mov
insb
loop
pop
mov
lock
lock
aas
scas
xchg
loop
pushf
sub
inc
fisubrs
popa
or
add
test
lea
and
shlb
mov
jg
add
xchg
out
pop
xchg
loope
xchg
cmpsb
jmp
outsb
cmp
nop
and
inc
pop
je
xchg
sub
push
das
mov
sub
add
cmp
movsb
inc
addb
pop
add
push
mov
test
loope
push
mov
jge
enter
push
imul
jb
fnstcw
sub
cmp
adc
push
pop
xor
nop
and
fisttpl
xchg
ljmp
cmpb
jb
pop
lcall
xchg
in
outsl
push
jge
hlt
push
adc
cmp
jle
dec
jo
dec
lds
push
push
jg
adc
jo
ljmp
and
test
sub
pop
mov
xor
enter
push
leave
ljmp
fucomi
scas
mov
push
lock
iret
xor
pop
imul
mov
and
out
aad
shll
sbb
or
test
or
and
fs
es
or
mov
push
int
movsl
pop
sub
cmpsl
cltd
dec
mov
push
adc
lcall
dec
jecxz
mov
movsl
mov
mov
or
es
mov
leave
pop
loopne
and
and
xchg
inc
lahf
xchg
sbb
fcmovne
cltd
sbb
test
jg
sahf
arpl
dec
jmp
sti
mov
hlt
push
adc
push
movsl
ja
mov
loopne
subl
jle
mov
pop
repz
inc
rcrl
add
jae
in
push
movsb
addr16
out
movsl
pop
mov
clc
ret
mov
jne
xor
sub
pop
push
inc
dec
cmpsl
xchg
mov
xor
xor
pushf
pushf
or
adc
xchg
leave
cmp
iret
pop
adc
push
mov
cmc
sub
adc
lea
push
jle
jmp
aad
jge
push
sub
fucom
sarl
pop
lahf
xlat
dec
cld
mov
and
pop
push
mov
inc
mov
pop
fdivrl
mov
and
out
popa
data16
or
cmp
sub
in
or
dec
sbb
cmp
cmp
movsl
out
or
sbb
enter
lock
jmp
in
shrl
mov
cmp
jge
mov
jns
out
negl
jns
or
cmp
push
push
push
repz
cld
fwait
lods
mov
xor
addr16
aad
dec
xchg
cli
pop
fs
cld
cli
mov
repnz
lret
es
andb
jno
ret
inc
xor
outsb
cmpsb
pushf
leave
aam
mov
and
test
mov
test
dec
xor
repz
sahf
jae
sbb
inc
mov
cwtl
push
imul
imul
lcall
loope
xchg
ljmp
or
popa
cmp
cmp
mov
iret
pop
pop
testb
scas
leave
test
lds
ja
sbb
push
mov
inc
int
aam
cmp
test
xor
andb
push
pop
call
clc
push
in
dec
imul
and
mov
dec
jne
fs
pop
mov
mov
push
cmc
push
out
lods
lods
iret
pop
adc
or
stos
and
je
push
push
loop
aam
push
add
scas
pop
jp
push
jns
sbb
imul
cwtl
ja
mov
mov
add
cmp
fidivl
fwait
scas
loopne
and
pop
sbbl
icebp
and
test
xor
test
jbe
adcb
nop
lods
arpl
shll
lods
scas
inc
xor
mulb
lea
aas
icebp
and
test
xor
imul
mov
jae
imul
loop
pop
push
adc
scas
outsl
mov
jbe
loope
sbb
sbb
clc
mov
pop
out
lods
stc
adc
xchg
lret
jg
dec
int3
int
leave
lcall
call
test
mov
outsl
mov
add
add
fcoms
test
mov
aam
je
dec
pop
pushl
iret
adc
inc
add
add
mov
pop
jns
popf
mov
adc
pop
fidivl
fistpl
es
inc
add
scas
xchg
fldcw
fcmovb
adcb
repnz
jno
enter
or
add
mov
sub
ret
mov
fildl
fnstenv
sub
pop
shlb
mov
add
jo
es
xchg
test
int
lods
shrb
mov
mov
aaa
out
stos
inc
adc
repz
cmp
mov
insl
pop
shlb
imul
xchg
and
lds
pop
sub
xor
stos
fdivs
push
int
and
xor
xchg
lods
xchg
lods
insl
jae
aaa
mov
roll
gs
sbb
jns
xor
leave
dec
test
xchg
gs
or
cmp
aas
pop
shr
jmp
xlat
dec
cli
into
xorb
faddl
push
addb
int3
mov
repnz
sub
mov
inc
jl
sub
sub
je
sub
jae
jne
mov
mov
dec
in
movsl
outsl
daa
aaa
push
fsubs
rclb
or
test
andl
xlat
cmp
insl
in
pop
adc
push
xchg
aaa
lret
pop
dec
add
lea
xor
ljmp
or
pop
mov
into
movsl
stc
popa
jmp
leave
push
sbb
adcl
in
sbb
ja
jle
cwtl
mov
pop
repz
pop
and
add
ljmp
das
pusha
outsb
mov
sahf
push
popa
cmpsl
pop
dec
hlt
mov
movsb
bound
add
dec
out
xor
push
notl
je
jo
lret
insb
push
push
or
imul
mov
jle
loope
mov
mov
stos
push
das
sbb
ret
mov
outsb
filds
add
push
mov
mov
fildl
setg
negl
orl
sbb
pop
push
imul
test
popa
mov
jecxz
or
mov
pop
fiaddl
cli
or
mov
mov
paddusw
sub
outsb
push
cmp
inc
and
mov
daa
xchg
shlb
adc
nop
imul
mov
cmc
mov
jo
arpl
int
cmpsb
mov
inc
lds
lds
or
sub
out
mov
jnp
sbb
aaa
cli
lea
push
fs
push
mov
push
and
cltd
rcrl
in
dec
dec
pop
ret
fisubrl
insl
fwait
jbe
repz
fldenv
fidivs
out
sub
jno
dec
pop
and
jge
sahf
push
in
lret
xor
movsl
lret
mov
push
and
aaa
outsl
mov
ja
pop
inc
jge
xorl
test
mov
aam
xchg
mov
mov
mov
cmc
ljmp
and
xchg
rcrl
push
lods
int
ja
stc
mov
sbb
or
in
sahf
adc
scas
out
cmpsb
out
and
vmovaps
sbb
jmp
std
pop
and
fcomps
scas
jmp
mov
shlb
je
add
enter
and
xchg
movl
dec
sbb
ds
xor
ret
pop
imul
and
cmp
adc
stos
xor
and
lods
pop
mov
dec
outsw
mov
mov
cli
cmc
xchg
push
pop
cmpsb
shl
jge
mov
aam
mov
jb
enter
inc
call
es
repnz
add
inc
cmp
arpl
or
inc
push
popa
and
sub
pop
jl
xor
dec
inc
pop
jl
outsl
dec
xor
inc
orb
test
sbb
mov
aam
cs
dec
cmp
in
loope
jb
adc
cmp
in
sbb
insl
mov
push
pop
sub
push
orb
mov
insb
pushf
jle
lret
shl
gs
loope
lods
xor
clc
imulb
mov
push
pop
jmp
mov
mov
ja
imul
subb
dec
add
inc
orb
stos
xchg
lods
ficoml
mov
mov
ficompl
jecxz
hlt
lods
xor
push
mov
inc
les
je
dec
pop
and
and
mov
dec
outsb
adc
cmc
hlt
push
test
and
sub
xchg
stc
stos
sarb
pop
sub
adc
xchg
cmp
add
push
or
mov
inc
sbb
hlt
fs
out
sub
fdivs
or
fldcw
xorl
fnstsw
cmp
nop
or
push
aas
xor
mov
inc
rclb
push
cwtl
test
cmpb
in
mov
arpl
loop
push
xorl
mov
shll
into
adc
into
inc
aas
cmc
mov
xor
jae
mov
out
stos
ss
stc
movsb
dec
into
adc
dec
push
fs
icebp
sbb
sub
jno
xchg
jmp
or
aam
cmpl
cmpsl
or
test
xor
pop
pop
aam
push
adc
je
je
repnz
jae
nop
enter
push
add
loopne
mov
and
movsb
and
sub
xor
mov
inc
addl
inc
loope
pushl
push
scas
pop
jb
add
dec
cmp
jne
add
jae
in
decl
sub
out
test
cwtl
push
and
dec
repz
push
adc
leave
icebp
push
andnps
fistl
and
movsl
xchg
pop
adc
push
test
push
push
lea
fdivrs
push
jmp
das
mov
test
icebp
pop
ss
roll
jl
cmp
xchg
adc
adc
mov
jecxz
les
sbb
pop
push
mov
jbe
and
xchg
mov
pop
inc
es
ds
mov
mov
or
hlt
lret
mov
jno
stc
and
stc
sbb
and
mov
mov
dec
mov
imul
xor
lods
fdivl
jne
jne
adc
sub
shl
fs
xchg
dec
test
add
addl
pop
fsubr
pop
outsb
mov
in
jecxz
daa
into
push
int
and
addl
pop
bound
mov
inc
insl
fidivl
dec
movsb
pushf
cmp
lea
test
mov
test
movsl
push
leave
gs
ss
fidivl
daa
rcrb
push
xor
aas
add
sbb
jmp
push
in
and
sub
mov
mov
adc
inc
popl
cmp
xchg
aam
arpl
loop
push
push
pop
inc
ja
icebp
fcmovne
out
dec
rorl
arpl
scas
mov
jmp
mov
stos
push
or
incb
add
shll
aad
bound
es
mov
addb
enter
bound
movsb
mov
stos
sahf
outsb
insb
fidivl
hlt
movsl
mov
mov
xor
jmp
lds
adc
push
lods
popf
repz
and
ja
mov
adc
inc
in
adcb
insl
das
xchg
xchg
scas
outsb
xchg
scas
test
rolb
out
sub
neg
mov
or
movsb
gs
mov
nop
and
out
push
loopne
cmpsb
in
stc
mov
addl
fisttpl
int3
cmp
test
lcall
add
dec
loope
or
fistpll
pop
pop
xchg
and
lods
pop
sbb
aad
outsb
mov
jge
jno
lahf
insl
sbb
cmpsl
jmp
test
cmpsb
lret
outsl
mov
add
cltd
rorb
xchg
sbb
cmp
sahf
movsb
out
mov
mov
add
push
inc
cs
hlt
aad
fs
mov
lcall
rcl
lock
cmp
inc
pop
jecxz
inc
sub
fcompl
cli
aaa
das
lret
movsl
cmpsb
fcomps
jp
push
leave
cmp
ficoml
mov
cli
mov
jns
xor
mov
add
or
mov
insb
ss
xor
popf
mov
xchg
test
orl
ja
dec
pushf
clc
jns
push
push
ficomps
and
lods
iret
pop
adc
jecxz
push
aad
test
jbe
loope
jge
xor
cmc
in
test
je
mov
push
nop
mov
out
pusha
testb
mov
movsb
inc
adc
idivl
jg
and
ror
push
xchg
ljmp
mov
dec
rorl
push
insb
xlat
adc
testb
mov
in
shlb
mov
mov
adc
les
insl
fdivr
jle
fwait
add
pop
insb
imul
leave
sbb
insb
mov
dec
inc
jle
inc
lea
xor
add
pop
je
inc
pop
dec
insl
push
ret
and
ss
jecxz
mov
sbb
push
pop
sub
jbe
in
insl
xorl
push
fst
aad
hlt
subb
call
mov
adc
xor
dec
cmp
mov
mov
stos
aas
cmc
jnp
push
cli
cmp
sub
sub
mov
or
or
imul
test
pushf
xchg
jnp
test
outsl
dec
mov
ret
push
arpl
adc
xor
cwtl
xor
push
dec
pop
pop
push
jle
xor
xchg
add
sti
xchg
mov
xor
mov
mov
aam
and
cmpb
scas
inc
inc
xchg
jns
ror
fs
xchg
out
test
xor
jb
push
push
fs
sub
addl
pop
adc
cs
mov
fildll
cmp
subb
shlb
cmc
idivb
icebp
jno
jae
dec
fcoms
sub
addr16
lcall
or
mov
ret
nop
push
jae
cmc
add
push
adc
xchg
xchg
xchg
setg
enter
vsqrtps
pop
sahf
push
js
push
adc
and
sbb
out
movsl
lods
lods
jo
insb
add
mov
adc
or
or
mov
push
adc
sub
daa
int3
cmpsb
scas
aas
jb
seto
inc
addb
lret
pop
xlat
or
add
add
adc
xchg
pop
add
mov
jo
pop
adc
inc
or
ljmp
and
push
sbb
cmp
xchg
sahf
adc
imul
ja
xor
xor
push
inc
daa
pop
mov
lahf
mov
mov
fiaddl
daa
or
cmp
js
mov
sub
xor
faddl
daa
lea
jo
push
push
push
pusha
ljmp
fisttps
js
push
adc
lea
icebp
int
dec
add
inc
cld
jno
push
movsb
pop
rclb
push
out
lods
lods
iret
pop
adc
or
mov
and
daa
test
xor
adc
cmc
stc
mov
movsb
adc
lret
xor
and
mov
movsl
push
pop
mov
xchg
pop
jge
in
ds
add
inc
and
jecxz
push
jg
jne
out
in
andb
fstpl
add
mov
adc
fnstenv
mov
xor
and
xchg
and
iret
data16
xor
mov
shr
adc
jo
dec
pushf
pop
lcallw
je
push
adc
mov
cwtl
adc
das
enter
fsubrl
adc
and
jmp
sbb
jns
mov
inc
jne
pop
add
inc
movsl
inc
subl
cmpsb
hlt
ja
push
and
dec
inc
push
mov
xlat
inc
jl
jge
out
adc
fadds
in
shlb
outsb
mov
outsb
loope
ret
lds
ret
xorb
pop
add
lock
push
stos
pop
xlat
mov
add
std
fisubrl
mov
sahf
cmp
je
push
adc
push
xor
or
adc
mov
sub
into
das
lods
iret
pop
adc
xchg
jl
dec
adc
and
jle
mov
and
adc
icebp
cli
xchg
jl
lret
lahf
dec
ljmp
lea
scas
jle
mov
mov
in
mov
cmp
push
cmpsb
dec
lret
mov
rep
fs
popl
jbe
lea
mov
test
mov
cmp
fucomi
inc
stc
int
out
ret
xchg
push
insl
or
add
cltd
and
cmp
cmp
pop
mov
inc
je
mov
lret
aam
fnsaves
cmpsl
xchg
loopne
inc
fs
sub
add
dec
pop
sahf
int3
dec
loop
or
arpl
mov
outsb
jge
push
lock
pop
mov
xchg
aaa
call
cmp
mov
dec
sbb
int
scas
test
test
movsb
push
xchg
inc
pop
scas
mov
cs
fsubrs
cmp
addb
aad
cmp
mov
sbb
enter
adc
mov
inc
gs
inc
lea
or
push
mov
mov
xor
and
sub
cmp
adc
dec
cwtl
cmp
popf
mov
lret
mov
out
arpl
jne
imul
adc
push
mov
add
lods
mov
lods
negl
mov
je
cmp
dec
mov
xchg
fidivrl
sub
shlb
test
ss
adc
add
sub
lea
cmp
fadds
cmovg
sub
in
mov
jne
lds
adc
dec
sbb
mov
test
push
cmpsl
jge
mov
fisttps
rorl
loope
ret
adc
pop
mov
sbb
or
divb
adc
cli
jg
ret
fdivrs
rcll
push
es
mov
xor
ret
inc
or
inc
loope
pop
xlat
test
fstpt
push
push
lods
fs
xor
sbb
mov
push
pop
inc
jl
lea
mov
push
or
subb
jbe
in
sbb
lret
int
andb
lahf
xor
aam
xor
insb
jbe
negl
je
pop
in
sbb
add
or
arpl
pop
hlt
out
cmp
pop
mov
dec
popf
sbb
pop
xchg
into
adc
sub
cmp
pusha
sub
mov
cmp
aad
push
aad
push
and
popf
ss
leave
nop
and
js
push
lea
insl
xor
and
mov
pushf
cmp
out
daa
jl
je
ds
jle
in
adc
pop
jbe
clc
jp
in
rcrb
ret
sbb
jge
jne
aas
pop
jle
insl
fnsave
test
popf
and
pop
adc
sub
je
pop
je
pop
test
pop
jo
inc
scas
les
xchg
mov
sub
dec
xchg
daa
jmp
pop
nop
cwtl
sub
sbb
xor
lds
or
dec
or
or
or
push
mov
rorb
movsl
inc
ljmp
daa
sub
icebp
cmp
jmp
xchg
jl
rcr
mov
jo
cmpl
mov
dec
add
aad
sub
add
mov
cmpl
jae
loop
adc
and
rcrl
cmpsb
mov
repnz
int
cli
lds
xor
xchg
dec
in
lock
loop
cwtl
push
out
test
mov
push
pop
popf
mov
icebp
leave
xchg
sti
mov
ss
pop
stos
pop
xor
in
or
aad
sub
xchg
in
jg
cmpsb
xchg
bound
repnz
cwtl
sbb
ljmp
pushl
dec
push
sub
inc
add
lahf
data16
sar
pusha
jmp
xor
pop
adc
push
fstpt
mov
cmp
popa
aaa
mov
pop
cmc
data16
imul
fidivrl
jne
ret
bound
pop
adc
lods
test
pop
mov
scas
cmpsl
jmp
js
shrl
jnp
ljmp
rsqrtps
in
fsubs
mov
mov
sub
sub
and
pushf
xchg
insl
jp
and
cltd
sbb
jno
and
aaa
jo
leave
mov
xor
lret
inc
xchg
jmp
stos
in
cmp
sarl
pop
jl
mov
jge
jle
fadd
aad
push
imul
cli
mov
mov
add
out
lahf
sbb
add
dec
cld
fmulp
fcomip
ret
and
jae
and
test
pop
jl
ret
sub
ja
sbb
insl
jo
repz
dec
adc
jno
sti
mov
add
test
outsb
cltd
push
icebp
test
cmp
add
test
std
pushl
ja
adcb
fstps
xor
mov
pop
in
lods
xor
hlt
push
ret
xlat
push
push
mov
push
jmp
push
clc
sbbb
sub
xchg
popl
sbb
add
call
jmp
jbe
pop
inc
test
dec
push
jmp
aad
adc
lar
inc
insb
lea
lret
lds
pop
clc
jle
nop
push
push
cmp
dec
jp
lea
add
inc
ljmp
xor
ret
arpl
jne
xchg
inc
and
or
xchg
mov
sbb
jg
aam
pop
movsb
ret
mov
pop
lret
xchg
out
push
popa
pop
dec
mov
adc
add
dec
in
mov
xchg
and
out
mov
scas
cmp
pushf
push
inc
or
mov
pushf
outsb
cmpsb
and
inc
xchg
xchg
sub
call
pop
ret
pusha
xchg
push
adc
loopne
jbe
xor
and
insl
lods
movsb
out
adc
insl
sahf
cmp
dec
xchg
into
adc
jg
xor
xor
aam
call
xchg
insl
fidivl
push
mov
je
sbb
xchg
add
xchg
sub
lock
pop
push
sti
popf
and
push
stos
lret
pop
dec
ja
test
dec
jbe
adc
outsb
cmpsb
es
inc
lcall
pop
in
mov
ss
mov
pusha
sub
mov
ja
or
xor
lods
shrb
movl
xchg
ljmp
inc
insb
xor
daa
ret
dec
push
and
mov
xor
loope
inc
leave
enter
fsub
lahf
or
test
in
daa
mov
xchg
sbb
mov
sbb
call
ss
pop
mov
fbld
mov
scas
jp
movsb
scas
orl
jge
adc
cmp
icebp
pop
popa
xchg
adc
jns
sub
aam
mov
mov
cs
in
jecxz
adc
or
inc
xor
into
push
int3
adc
sbb
mov
dec
xor
cmp
inc
sti
xlat
arpl
adc
mov
pop
push
cmpsl
notb
xor
inc
jecxz
mov
aam
sub
scas
popf
and
cli
in
stc
icebp
cmp
and
dec
sbbb
adc
dec
push
push
pop
test
mov
clc
clc
add
and
jg
jge
or
pop
jns
and
ss
jbe
divb
filds
dec
fldl
sbb
push
and
xchg
adc
inc
daa
push
xchg
js
jne
and
adc
adc
sub
push
or
push
jmp
fsubrp
cmp
adc
sub
ficomps
adc
cmp
mov
aas
popl
jae
std
js
shll
mov
andl
xor
and
dec
jns
adcl
jns
push
dec
scas
cmpsb
dec
mov
mov
inc
mov
lret
xor
js
mov
fnstenv
push
or
cmpsb
ret
js
andb
jl
lea
and
dec
xlat
mov
in
lahf
and
nop
jbe
sub
subb
lock
jb
les
jns
jo
fisubs
add
pop
nop
xchg
dec
mov
mov
or
or
sahf
repnz
or
shlb
aad
xor
inc
xor
jae
mov
rcrb
add
mov
mov
sti
call
pop
test
add
test
out
mov
mov
push
aad
mov
and
lods
faddl
cmp
cmp
cltd
push
jecxz
cs
addl
xchg
adc
scas
test
xchg
adc
movsb
sub
mov
nop
stos
add
add
mov
jle
sbb
fs
mov
iret
jne
rcrb
stos
push
out
shll
add
in
fs
add
fs
hlt
or
xchg
pop
cmpsl
cmp
icebp
in
pop
data16
test
xchg
test
jb
sub
sbb
and
inc
in
add
or
jne
mov
cmp
es
shl
fdiv
sub
daa
movsb
pop
jmp
sahf
imul
stc
mov
sbb
sbb
push
lock
cmp
aas
dec
jbe
jno
shl
jno
sbb
mov
sbb
xchg
xor
out
pop
dec
xchg
and
nop
imul
adc
popf
sub
lahf
test
push
pop
jmp
or
sub
pusha
adc
sti
popa
xor
xchg
and
or
adc
stc
or
push
mov
add
dec
sbb
sti
popa
mov
lret
faddl
pop
mov
mov
call
aad
in
push
push
pop
sahf
jbe
sti
push
out
ds
fdivr
daa
lods
mov
and
pop
mov
mov
ljmp
mov
test
push
push
pop
adc
stos
outsb
or
and
inc
push
jmp
test
and
pop
ljmp
pop
outsl
sbb
outsb
push
cmpsb
add
aaa
cli
loopne
pushf
insb
lret
cmp
jne
dec
ja
data16
movsb
outsl
mov
sub
jmp
mov
jle
sahf
jmp
ja
xor
push
jle
fisttpll
sub
dec
sbb
inc
xor
data16
lahf
pop
jg
mov
add
push
xchg
push
push
lock
cmpsl
mov
data16
or
in
data16
jg
mov
outsl
xor
pop
or
aam
iret
or
sbb
not
xchg
sbb
add
fisubrl
push
jbe
popa
into
cmp
ja
loop
scas
aas
push
sub
push
adc
addl
out
das
jp
cmp
sbb
xor
xchg
js
jo
pop
outsl
aam
push
xor
add
push
mov
lock
mov
dec
in
mov
inc
dec
push
imul
hlt
pop
lcall
shll
jnp
jae
adc
dec
sarb
roll
pop
mov
sub
mov
push
and
push
sbb
inc
inc
and
push
loope
ret
add
lods
pop
mov
ret
pop
jbe
out
test
cmp
mov
add
add
jo
push
sub
shlb
xor
xchg
jb
out
insb
push
push
mov
and
in
push
cmp
imul
das
xor
jge
repnz
xor
repz
inc
adc
mov
xchg
xchg
cmp
mov
xchg
lahf
std
jecxz
push
add
cmpsb
push
inc
popa
mov
sub
push
xor
fldt
xor
imul
in
xchg
push
dec
or
mov
sub
das
addr16
std
loop
or
inc
lock
test
out
jmp
faddp
shlb
testb
xor
adc
adc
lea
dec
fnstsw
cmc
lret
out
stos
mov
outsb
mov
mov
or
mov
jne
adc
outsl
and
dec
popf
fsts
imul
add
cmp
jecxz
fistpl
mov
je
mov
shll
sbb
in
mov
cmp
sbb
mov
aam
test
rcrb
jmp
sbb
push
dec
lods
gs
rol
lea
sub
adc
cs
cmp
xchg
push
mov
adc
movsl
pop
cmp
push
lock
in
xchg
pop
mov
push
jae
xor
imul
sub
push
adc
jo
and
fwait
jecxz
bound
arpl
lea
mov
xchg
push
add
push
movsb
ret
xor
and
mov
add
lcall
in
hlt
ret
cmc
ljmp
fbstp
aad
xchg
arpl
mov
clc
cmp
push
adc
cltd
ret
cmc
ljmp
fbstp
sub
aaa
stc
ljmp
mov
cli
or
and
push
cs
xor
mov
add
lcall
in
xchg
ret
cmc
ljmp
xorb
and
and
inc
in
sub
notl
xor
cmp
adc
in
mov
cmp
xor
cmpsl
dec
pop
std
jle
or
gs
or
pop
lods
cs
mov
aam
push
sub
xchg
mov
iret
adc
inc
or
jbe
or
mov
sub
or
push
dec
dec
sub
iret
aaa
outsb
int
push
push
or
cmp
ja
xchg
adc
pop
dec
sub
notb
cwtl
push
aad
cmpsb
cmp
pop
and
xchg
js
loopne
fsubrl
fnstenv
adc
dec
push
adc
dec
add
fstps
mov
dec
orl
shrb
out
adc
mov
iret
inc
daa
or
test
pushf
roll
jl
sarb
rorb
fsubs
xor
and
sarb
or
mov
subl
bound
mov
push
imul
call
xor
popa
xor
jne
nop
cmpl
aaa
pop
int3
dec
push
fsubs
pop
fstps
push
mov
push
mov
adc
xchg
add
jl
cmp
sbbl
test
out
xor
jge
add
and
cltd
or
pusha
xor
lods
fistl
push
mov
xchg
rcrl
push
push
in
mov
sub
orl
adc
and
adc
ds
jo
dec
testb
sbb
pushf
jo
adc
testb
or
hlt
jo
adc
stos
mov
cltd
mov
mov
adc
jl
mov
xorl
stos
push
std
mov
mov
or
sbb
ret
add
rorb
js
sbb
out
test
adc
pusha
cmp
ret
pop
fcomps
adc
pop
adc
push
adc
pop
int
popf
fdivrl
cmp
xor
ficompl
and
mov
imul
rolb
aaa
dec
icebp
add
pop
adc
sbb
roll
add
arpl
cmpsb
adc
stos
xor
sahf
pusha
pop
pop
sub
ret
shlb
push
adc
rcpps
pop
xor
sbb
mov
out
or
or
pop
pusha
aas
aad
pop
hlt
and
push
adc
push
adc
mov
ret
notb
sub
or
xor
cld
int3
cmp
adc
or
cmc
inc
push
enter
pop
mov
cmp
adc
sbb
sarb
cmc
addr16
jle
mov
jecxz
roll
add
sub
xchg
je
roll
sub
pop
adc
repz
cmc
ljmp
ret
mov
fimull
jnp
and
adc
in
test
std
ss
fstl
xchg
cmpsb
sbb
fsubl
xchg
jge
test
cli
lea
or
and
cmp
and
jb
sbb
insb
mov
add
inc
jb
mov
mov
sarb
adc
and
mov
fmull
popa
in
sarb
adc
jno
add
mov
test
fsubp
jecxz
sarb
adc
in
adc
mov
cs
add
scas
call
pop
adc
push
mov
les
ret
push
test
and
pop
adc
pop
pop
adc
lret
pop
adc
fsubs
jl
mov
int
adc
inc
daa
or
mov
aad
push
sub
dec
xchg
scas
mov
sbb
imul
js
push
adc
pop
adc
shll
ret
std
mov
sub
or
mov
roll
dec
pushf
cli
stc
mov
lret
pop
adc
les
push
add
pop
adc
lret
popf
lods
sbb
push
imul
in
push
mov
pop
mov
es
xchg
imul
adc
add
mov
jb
or
fs
add
lahf
xchg
imul
data16
add
into
pop
adc
stos
rol
add
xchg
mov
pop
je
test
mov
push
adc
sarl
or
dec
mov
xorb
xchg
pusha
push
imul
mov
into
imul
mov
mov
shrl
sub
adc
mov
or
pop
aam
aas
sbb
mov
cmc
mov
and
outsl
ds
pop
sbb
inc
cmp
or
bound
xchg
jle
adc
pusha
int3
pop
add
jg
lds
jae
scas
stc
lods
test
dec
cmp
jb
ficoms
ffree
pushf
dec
cmp
add
pop
dec
sub
or
cmp
outsl
xor
stc
xorb
dec
test
adcl
inc
inc
push
and
jno
and
or
xor
leave
fiadds
lret
sbbb
xchg
xorl
mulb
lods
iret
pop
adc
out
popa
repnz
test
push
push
int3
repnz
adc
lcall
inc
xor
and
mov
scas
hlt
jmp
fsubrp
mov
and
cmp
aaa
jmp
mov
pop
cmpsb
dec
popf
cmp
or
inc
scas
cmpl
in
aad
xchg
xorl
xchg
imul
mov
roll
dec
aam
faddp
loop
cltd
js
mov
mov
test
xchg
mov
outsb
pminsw
dec
or
lock
jnp
ss
fbld
rcrb
mov
scas
jae
mov
in
call
orb
inc
dec
jbe
mov
into
dec
movsl
and
lret
pop
mov
cmp
and
rorb
mov
sub
jl
xor
js
mov
notb
int
push
imul
push
ficompl
das
dec
loop
mov
stos
xchg
in
mov
adc
gs
stc
fmul
enter
insl
sub
jne
scas
pop
addb
xchg
mov
xchg
jbe
dec
std
fcoms
push
mov
push
adc
dec
adc
add
add
push
out
fcmovb
lock
fwait
pop
mov
add
shrb
in
nop
and
ja
adc
jbe
push
repz
scas
mov
pop
in
scas
stc
xchg
mov
add
cmp
iret
pop
adc
inc
movsl
mov
mov
push
push
lods
pop
cmp
adc
xorb
xchg
push
pop
pop
lret
fmuls
lods
mov
insl
je
adc
nop
test
pop
cli
and
pop
pop
shrl
xor
adc
gs
xchg
jmp
mov
stc
xchg
lods
sbb
mov
adc
mov
push
inc
in
push
loope
mov
mov
in
inc
inc
sbb
test
add
push
sbb
addr16
dec
aaa
movsl
mov
adc
movsb
and
push
and
and
push
std
jae
inc
js
push
movsb
ret
gs
insb
fidivl
cmpsl
dec
pop
std
push
insl
lea
orl
pushf
jbe
cs
mov
cmp
sbb
xchg
sub
ss
lds
dec
fstp
mov
inc
leave
sahf
dec
mov
and
mov
dec
jmp
cmp
mov
push
push
sahf
rcll
mov
arpl
mov
push
ljmp
mov
xchg
sar
sub
outsl
jns
mov
pop
std
stos
loopne
movsb
out
out
mov
repnz
lods
pop
lea
jge
loope
stos
jno
xor
jmp
cmp
rcrb
dec
adc
test
rcr
or
jp
jge
xchg
pop
adcl
adc
jecxz
xor
and
push
inc
inc
dec
xchg
add
std
popf
cmp
out
pop
mov
xor
mov
and
dec
mov
mov
repnz
out
pop
pop
in
dec
mov
mov
repnz
xor
push
bound
sub
lock
adc
ret
pop
jp
daa
mov
roll
adc
leave
xor
mov
and
xchg
add
pop
adc
mov
gs
lods
cmpb
mov
dec
jo
daa
scas
cmp
xor
stc
xchg
adc
add
sbbb
out
xchg
xchg
int
cmp
and
push
pop
pop
cmpsb
pop
ds
outsl
cli
add
mov
or
push
adc
sti
mov
inc
into
or
push
adc
lds
loope
xchg
push
iret
cpuid
push
addr16
adc
shrb
lret
scas
pop
cmp
shlb
sarl
push
es
leave
push
leave
imul
das
das
lods
iret
pop
adc
fistps
iret
mov
push
sarb
xor
mov
adc
pop
add
mov
and
and
xchg
push
add
sub
inc
jecxz
sbb
and
sub
pop
leave
inc
fmul
jge
lods
stos
aam
xchg
outsb
xchg
out
sahf
cs
add
xchg
nop
imul
adc
mov
test
std
lods
iret
pop
adc
sbb
sti
or
or
lods
scas
mov
popf
in
andb
xor
je
xor
dec
mov
push
adc
pop
adc
push
dec
inc
xor
repz
add
xor
and
adc
lds
daa
sbb
add
dec
or
iret
push
fs
add
sub
push
adc
out
lds
mov
fisttps
rolb
aam
mov
dec
test
imul
sub
sub
outsl
or
dec
adc
or
sbbb
jnp
sbb
rorl
add
fcmovbe
xor
out
lcall
data16
mov
imul
loope
adc
test
inc
addb
mov
adc
iret
pop
push
pusha
dec
xchg
lea
push
stos
jne
dec
jle
int
and
adc
or
jecxz
mov
adc
jmp
insl
xchg
pop
mov
xchg
data16
push
mov
insl
repnz
or
push
push
mov
sbb
ret
ret
ds
add
inc
sbb
or
pusha
xchg
push
outsb
add
add
inc
ret
pop
fstpl
xor
mov
pushf
mov
mov
insl
into
outsl
cs
or
mov
jle
adc
push
mul
fnsave
pop
and
or
jo
ret
dec
add
push
test
cmp
popa
mov
testb
mov
lea
jg
pop
andl
movsb
ret
gs
xchg
and
push
inc
int
lds
inc
or
ljmp
cs
and
cmp
jb
cmc
or
xlat
std
ljmp
and
imul
aaa
cltd
jecxz
js
sbb
inc
out
xchg
data16
push
mov
insl
repnz
mov
jp
mov
jo
adc
adc
push
sti
dec
sarl
test
cltd
mov
add
xchg
testb
rol
push
or
pop
fisttpll
daa
ret
dec
movb
dec
sahf
mov
scas
test
das
movups
lods
iret
pop
adc
push
mov
inc
out
jb
icebp
push
or
ljmp
mov
fsts
mov
inc
add
mov
dec
pop
fwait
mov
cmp
mov
rclb
repnz
xchg
xchg
dec
movsl
or
dec
mov
cmc
sbb
pusha
pop
and
jnp
bound
and
cmp
je
jmp
int
pushf
inc
sbb
pop
aam
mov
mov
add
mov
inc
je
or
sbbl
inc
fwait
movsb
inc
sub
adc
orb
std
jnp
inc
mov
and
or
faddl
subb
sbb
imul
fimuls
jge
mull
sysenter
movl
pop
jecxz
call
shrb
sub
aam
es
mov
nop
lret
jmp
push
ret
movsl
dec
pop
add
xor
pop
jl
test
sub
add
cmpsb
lods
iret
pop
adc
out
dec
push
sub
test
sbb
sub
lea
inc
adc
adc
xlat
cwtl
mov
shrb
cmp
sbb
xlat
jmp
sub
das
cmp
cmp
or
add
push
pop
lock
rcrb
data16
aaa
outsb
jnp
nop
mov
adc
sbb
and
daa
jne
sub
mov
jns
lock
loop
jg
in
test
add
pop
outsb
xchg
lods
lods
daa
dec
imul
mov
lea
pop
sbb
cmp
fucom
cmp
xlat
ds
int3
dec
jo
mov
aaa
mov
sbb
mov
mov
sarb
mov
ja
sub
call
cmp
jbe
out
jno
rep
sbb
sub
ljmp
out
arpl
andb
or
adc
call
mov
stos
mov
jns
add
sub
gs
or
push
adc
inc
cli
mov
mov
mov
jae
pop
lods
sub
lods
mov
adc
adc
or
pop
idivl
mov
je
jmp
pop
cli
ror
popa
xor
adc
fsubs
adc
outsl
pushw
or
xor
arpl
cmpsl
pop
and
jno
xchg
out
xor
adc
adc
lock
fimuls
mov
or
xchg
jne
ret
testb
cmp
in
mov
loop
mov
addb
jb
andl
cwtl
lods
iret
pop
adc
addr16
fs
fcoms
jmp
stos
jecxz
mov
inc
or
mov
mov
or
loope
iret
rcrb
out
xor
push
inc
add
and
push
push
xchg
inc
ret
xor
insl
fidivl
hlt
and
movb
mov
push
jmp
test
mov
dec
in
push
and
cmpsl
mov
adc
inc
add
std
ljmp
mov
mov
jmp
pop
clc
xchg
sub
xchg
mov
cli
stc
andl
pushl
flds
fdivrs
mov
mov
dec
pop
sub
lea
pusha
add
add
push
sub
xchg
and
push
cmpsl
dec
arpl
or
add
sbb
les
jns
fsts
mov
dec
xchg
sub
test
push
rorb
sarb
leave
or
pushf
stos
push
lcall
push
lock
cmp
shl
adc
daa
in
sarl
adc
mov
pop
fdivl
push
test
cmp
mov
mov
stos
mov
sub
movsb
mov
push
out
push
adc
xchg
push
fists
adc
dec
jecxz
loopne
es
leave
shll
cltd
movsb
jecxz
or
pop
or
add
sub
js
into
mov
roll
and
adc
mov
push
jo
sarb
into
push
cmp
ret
jo
adc
roll
into
lock
adc
int
scas
add
or
popf
fwait
jb
filds
or
gs
xchg
mov
ja
pusha
add
inc
lret
jo
and
adc
jbe
lcall
iret
cmp
icebp
cmpsb
and
add
and
adc
xchg
xchg
stos
push
in
cmpb
mov
hlt
js
shll
mov
xchg
and
in
jo
sub
dec
jo
push
adc
mov
or
inc
inc
aam
popf
fwait
and
adc
push
jecxz
add
fistps
jmp
leave
dec
xor
xor
fdivrs
pop
jo
repnz
pusha
and
adc
fdivl
shrl
ds
je
pop
pop
bound
adc
cmpsl
scas
pusha
and
adc
adc
pop
inc
push
arpl
xchg
adc
pop
je
xor
sbb
shrl
mov
cld
repnz
test
add
enter
push
push
and
std
dec
popa
pusha
dec
adc
cmp
pop
adc
adc
sub
pop
mov
loope
inc
xor
adc
cmp
shlb
ss
inc
pop
cmp
repz
dec
leave
mov
clc
add
je
mov
movsl
addr16
aaa
call
pusha
rdtsc
mov
sub
inc
loop
rdtsc
sub
dec
je
cmp
jne
ret
popa
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
nop
nop
addl
xchg
xchg
xchg
nop
nop
mov
nop
nop
sub
xchg
xchg
xchg
nop
nop
mov
nop
nop
addr16
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
dec
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
jne
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
xor
add
enter
or
orl
push
add
ficoml
and
adc
popf
dec
jg
or
cs
mov
or
mov
and
dec
ficomps
cmpsb
test
cmp
frstor
into
pop
adc
shll
ret
ret
dec
mov
dec
scas
stc
xor
sti
push
jecxz
mov
adc
pop
in
movsb
test
or
mov
push
and
in
testb
call
pop
ljmp
sbb
gs
cmpb
adc
sub
jo
adc
lds
js
or
scas
pop
mov
loop
jns
scas
loope
mov
add
rcl
mov
testb
jge
pop
repz
js
or
jmp
xchg
popf
cmp
or
add
test
pop
mov
and
adc
cmp
sbb
push
imul
push
in
push
mov
push
pop
jmp
inc
push
das
cmpsl
pop
sbb
adc
popf
cmp
xor
je
push
adc
bound
pop
or
fdivs
movsl
dec
sahf
mov
xlat
dec
push
es
gs
in
hlt
mov
out
cmpsl
ss
aad
loope
push
jmp
dec
nop
cmp
mov
push
sub
lcall
in
insb
mov
pop
leave
mov
loop
stos
mov
fisttpl
inc
and
fst
lock
lcall
mov
mov
mov
mov
dec
cmpsb
loope
jge
push
cmp
mov
sahf
inc
repz
movsb
bound
sbb
sbbl
jb
adc
fsubrs
andl
out
jge
xor
pop
clc
lcall
pushf
out
scas
pop
mov
or
inc
xor
repnz
sbb
push
sbb
pusha
add
add
push
out
rcrb
shll
cwtl
imul
and
mov
in
cmp
imul
mov
xor
inc
movsb
leave
fiadds
sahf
xchg
les
sbb
je
mov
xor
ret
movsl
dec
xor
ja
xchg
outsl
pop
push
popf
cmp
xor
ret
adc
jae
jmp
push
sbb
dec
test
imul
mov
xchg
fdivs
fwait
clc
jae
push
repnz
add
xchg
xchg
leave
js
push
adc
sub
rorl
cs
xchg
ret
jo
fisubrl
sub
pop
jl
andl
sar
rcll
mov
cmp
mov
into
or
pop
mov
jb
js
popa
mov
std
mov
in
sbb
push
loop
pop
int3
sahf
out
jno
movsb
add
xor
add
inc
mov
lods
sub
sahf
outsl
ficoms
testl
adc
jb
adc
add
xor
cmp
push
lcall
mov
call
aas
ds
mov
adc
and
dec
sahf
stos
test
push
xchg
lods
lahf
mov
ret
jne
sub
push
cmpsb
push
push
pusha
daa
leave
mov
ss
inc
xor
mov
in
stos
sahf
jb
fidivl
lock
sub
push
dec
jg
or
adc
adc
push
sbb
imul
es
mov
cmc
and
ja
loop
pop
push
lods
fdivs
push
inc
lcall
movsb
dec
mov
push
push
xor
ret
dec
sbb
dec
pop
les
stos
mov
xor
adc
lock
jle
aam
jne
ljmp
out
add
mov
and
pop
adc
mov
xchg
xor
cmp
dec
push
out
or
mov
inc
xchg
jmp
aaa
and
cmp
or
js
fdivrs
fcmovu
pushf
or
add
cwtl
sub
cwtl
enter
add
pop
sub
mov
fcmovnu
imul
fdivrs
rcr
loopne
nop
and
call
sahf
fistl
sub
fnstsw
sti
xchg
and
testl
sub
push
xor
mov
push
mov
push
push
cmpsb
dec
pushf
mov
add
sub
mov
dec
std
jnp
cwtl
andb
adc
fs
adc
test
imul
in
in
enter
in
add
inc
fmuls
js
roll
adc
sub
dec
dec
call
sbb
lds
and
inc
jmp
loope
mov
out
push
stos
fbld
out
push
inc
andl
pop
inc
jns
xor
outsl
cmp
ret
testb
loope
push
loope
add
or
ficoms
mov
jmp
mov
in
jo
pop
adc
je
ds
adc
or
cs
add
or
inc
ss
adc
mov
add
mov
cmp
add
mov
or
js
ret
ret
rclb
and
pop
adc
mov
or
cwtl
pop
lods
sub
adc
es
and
mov
movsb
andb
rorb
jnp
jecxz
mov
sub
pop
xchg
push
cld
in
pop
push
xor
and
pop
adc
clc
push
adc
mov
or
mov
lods
sub
adc
dec
or
sti
xchg
jmp
mov
dec
scas
in
lods
iret
pop
adc
mov
inc
insl
into
mov
cmpsb
fwait
push
pop
lods
iret
pop
adc
into
sbb
mov
or
jbe
ja
andb
adc
pop
adc
ret
mov
xor
pop
adc
movsl
push
shr
lret
xchg
fdivl
les
jmp
shrb
in
sbb
repz
daa
xchg
adc
adc
stc
test
xor
pop
adc
xor
cmpsl
dec
mov
adc
adc
sub
pop
inc
fyl2x
fcompl
mov
mov
push
inc
push
iret
pop
adc
pushf
sub
into
pop
adc
mov
sbb
imul
aas
mov
push
mov
push
push
iret
pop
adc
mov
jle
mov
xchg
cmp
xor
pop
adc
adc
xchg
mov
adc
xor
xor
pop
adc
pop
ret
pop
mov
mov
lds
cmp
std
push
fucomi
lds
aas
addr16
in
loope
in
lret
movsl
fsts
cmp
add
test
das
push
jae
mov
loopne
nop
addb
inc
add
jae
mov
stos
ja
mov
gs
mov
and
jg
add
cmpsb
imul
popa
add
jo
push
jecxz
jnp
enter
shr
test
pop
inc
push
dec
xchg
and
scas
xchg
pop
icebp
ret
test
xor
pop
adc
push
in
dec
ljmp
rcr
jl
jmp
pop
js
sub
jo
adc
inc
mov
xchg
test
or
scas
lea
xchg
xchg
add
mov
cmp
or
push
and
dec
cmp
outsb
fadds
cmp
scas
test
pushf
dec
sub
or
mov
mov
sub
test
cmpb
mov
lahf
cmp
adc
push
jmp
aam
xchg
mov
sbb
mov
orl
inc
popa
add
arpl
add
and
pop
mov
cs
or
sbb
lea
faddl
cmpsb
xchg
lcall
jle
add
push
loop
mov
popf
out
fistpll
mov
fnsave
and
jne
push
in
insl
sub
sub
xchg
and
addl
mov
sbbl
pop
adc
aam
sbbl
inc
je
std
or
outsl
das
mov
sarl
mov
fnstsw
es
inc
dec
std
lea
lods
iret
pop
adc
sub
adc
cmp
test
insl
cmc
or
mov
sbbl
aas
sub
push
push
pop
lods
iret
pop
adc
lcall
incl
test
pusha
in
lods
mov
or
lods
xor
aas
int
sbb
aas
cmpsl
fisttps
iret
pop
adc
test
mov
mov
mov
pop
lock
ja
shll
in
mov
cli
mov
lods
imul
lret
xlat
inc
popf
std
dec
push
mov
mov
xor
mov
add
mov
ror
arpl
push
push
adc
cmpsb
inc
xchg
jnp
jnp
data16
scas
jb
aas
repz
xchg
fstl
inc
jnp
cmp
out
out
jmp
je
shrb
pop
mov
pop
loop
xor
inc
fwait
test
xchg
sub
jb
mov
push
fwait
pop
mov
adc
add
stos
push
push
push
jne
xchg
hlt
pop
test
jl
lahf
fs
nop
mov
mov
cmpb
sub
scas
add
int
sbb
lock
push
adc
test
sbb
xor
push
or
adc
sti
inc
daa
and
mull
push
push
stc
jge
and
push
loopne
xchg
push
repz
mov
repz
sbb
adc
and
in
aam
in
rcl
outsb
dec
cmp
pop
mov
fnsave
push
shl
and
adc
sub
cli
sub
in
cli
in
jnp
fnop
clc
std
push
adc
cmc
push
mov
sub
add
icebp
ret
mov
add
mov
mov
mov
gs
packssdw
push
into
ret
imul
in
rolb
adc
shlb
addr16
daa
cli
stc
cmp
inc
pop
aad
test
adc
pop
jnp
js
dec
insl
sbb
pop
adc
in
push
adc
inc
hlt
rolb
adc
rolb
adc
jae
test
adc
ja
and
push
adc
mov
rolb
adc
out
pop
jp
sub
je
xchg
adc
data16
pop
testb
ljmp
pop
adc
push
cmpsl
lret
in
cmpsb
xor
roll
adc
pop
ja
stos
in
rolb
adc
jne
out
in
rolb
adc
int
in
rolb
adc
adc
leave
inc
mov
insl
adc
fcom
inc
scas
jmp
push
inc
aad
xor
sub
adc
ret
pop
pop
enter
inc
pop
in
pop
sub
mov
mov
add
addl
mov
push
cmpsb
xlat
pop
dec
pushf
cmp
cmc
and
inc
adcb
in
fwait
mov
mov
fisttpl
iret
pop
adc
insb
lret
rolb
adc
xchg
pop
incb
shrb
pop
mov
in
sbb
xchg
sub
pop
call
outsl
fistpll
clc
cmc
ljmp
push
xor
and
shlb
or
imul
ret
es
and
add
and
adc
fsubs
or
mov
mov
outsl
fists
call
loop
test
sub
shl
adc
lods
pop
jne
pusha
add
jbe
ja
adc
push
ret
cvtps2pd
pop
adc
negl
dec
xchg
pop
jno
push
aam
cmpsl
cmp
and
adc
adc
movsb
ljmp
iret
mov
enter
fsubs
or
arpl
cmpb
mov
pusha
rolb
adc
push
cs
and
or
vpextrw
lds
mov
push
insb
pop
mov
jnp
enter
nop
fadds
lret
sbb
std
cld
push
mov
jns
fisubl
nop
pop
jae
push
imul
pushf
cmp
inc
mov
popw
sti
mov
rolb
adc
in
mov
xorb
and
test
pop
adc
dec
mov
xchg
push
testl
aaa
cmp
ret
das
inc
in
cli
add
dec
int
psrlq
xor
xchg
in
rolb
adc
xor
repnz
or
cmp
test
xor
inc
test
sub
adc
and
rcrb
mov
jg
jo
pop
jl
dec
addr16
andb
adc
xlat
lea
mov
ds
jne
rclb
dec
cld
or
adc
aaa
gs
lods
fisttps
xor
mov
sbb
inc
ret
data16
test
sahf
add
lds
dec
fsubrp
repnz
or
adc
icebp
andb
adc
aam
pop
adc
add
push
sub
mov
stos
adc
push
cli
xchg
test
fidivrs
shl
jmp
fidivrs
out
xchg
and
and
and
sbb
ret
scas
fmul
pop
adc
xlat
sub
cwtl
in
pop
nop
es
in
pop
fidivs
dec
pop
mov
pop
adc
into
xchg
mov
pop
adc
mov
pop
adc
bound
mov
add
popa
rorl
popa
gs
or
fdivrs
sub
andb
stc
sub
pop
xor
push
adc
je
inc
push
sbb
xor
addl
dec
sti
sarl
cmp
cwtl
push
sbb
mov
ret
int
jnp
cld
push
adc
jb
sub
inc
jmp
cmp
mov
pop
adc
iret
pop
adc
scas
fs
pop
adc
pop
adc
jmp
add
test
or
test
adc
dec
inc
data16
dec
andb
fstpt
dec
inc
in
rolb
adc
mov
mov
sahf
mov
in
and
loop
mov
andb
adc
add
jne
sub
push
iret
pop
adc
movsl
orb
sub
xchg
mov
pop
adc
mov
ret
dec
or
sbb
out
mov
imul
push
mov
cmp
adc
push
dec
sbb
mov
or
lea
orb
in
rolb
adc
xchg
inc
push
cmpsl
dec
pushf
mov
or
adc
inc
addb
cmp
push
lods
pop
ss
cmc
bound
push
test
testl
incb
adc
add
outsb
call
xor
mov
sub
inc
addb
sub
pushf
repz
mov
fimull
hlt
rolb
adc
jl
mov
outsl
push
test
mov
sbb
pop
xor
and
or
inc
arpl
push
pushf
mov
adc
push
inc
hlt
jge
adc
xor
and
lods
pop
jmp
in
lret
cmc
in
cld
add
jl
call
push
shlb
add
mov
insb
fistpll
lds
aam
inc
pop
dec
in
in
sbb
repnz
xlat
ds
jmp
mov
and
mov
mov
lock
or
adc
push
mov
pop
inc
ret
in
push
movsb
dec
out
xor
mov
pop
adc
inc
dec
sbb
mov
jp
inc
orb
ja
add
pop
in
mov
sbb
jnp
xchg
inc
call
mov
pop
dec
sub
pop
adc
jecxz
add
and
cli
xor
rolb
adc
xchg
and
loope
in
rolb
adc
inc
xchg
cs
scas
adc
stc
jmp
cmp
adc
jg
cmpsb
cmp
mov
xchg
out
sbb
mov
mov
dec
test
pop
sbbl
shll
mov
shrb
outsb
adc
bound
movsl
or
and
int3
sub
das
scas
or
movsl
shll
cmpsl
cmp
add
dec
in
test
sti
xchg
sbb
or
and
mov
testb
repz
into
aad
or
mov
cmp
inc
mov
pop
out
push
xlat
jo
ficompl
shlb
aas
lds
pop
adc
daa
or
pop
imul
xor
or
shll
cmc
sub
or
xchg
incl
inc
leave
pop
adc
inc
cmp
fsubrp
pushw
mov
or
push
repnz
or
adc
xor
adc
inc
dec
mov
fsubr
adc
mov
lock
iret
pop
adc
pop
iret
pop
adc
push
ljmp
test
fwait
sub
insl
std
lods
out
xor
js
dec
xchg
lock
xchg
cmpsl
dec
push
mov
xor
mov
mov
mov
enter
dec
aam
cmp
loop
xchg
push
or
daa
and
sub
fisttpll
cli
dec
adcb
stc
dec
nop
scas
out
mov
bnd
sbb
mov
sbb
mov
xchg
int3
in
ss
add
fidivl
insl
lods
and
pop
lds
imul
fldenv
jb
sub
arpl
imul
sub
cmp
lcall
jl
fcomi
fstpt
dec
mov
cmp
jae
sbb
in
sub
xchg
in
repz
ret
cmp
and
incb
ds
ss
shl
sub
ss
sbb
shr
inc
sub
aad
inc
addb
cmpl
mov
loope
mov
sarl
enter
jl
ljmp
push
movsb
dec
scas
push
roll
and
mov
shll
xchg
sub
push
movsb
imul
xor
pop
lea
iret
ret
push
jge
test
jns
sbb
push
stos
sbb
in
mov
sub
jecxz
insl
mov
sbb
jb
aaa
cwtl
jecxz
mov
incb
adc
cld
enter
sub
xor
mov
out
dec
sbb
push
cmc
dec
cmc
faddl
pushl
in
jmp
push
dec
xchg
xor
and
imul
xchg
lods
mov
inc
cmc
enter
add
push
and
xor
lret
shlb
sbb
call
inc
pop
ret
push
adc
ds
and
push
hlt
inc
incb
adc
fidivrs
mov
mov
mov
lea
aad
ds
mov
and
mov
sbb
pop
pop
adcl
insl
dec
mov
push
notb
push
lock
cmp
inc
cmpsl
dec
pop
mov
test
adc
inc
les
lret
push
test
lds
lea
addb
ja
cmc
pusha
xor
xor
mull
scas
pop
pop
in
and
mov
or
push
in
loop
pop
mov
push
in
pop
inc
int3
in
jae
loop
cmpsb
add
and
fwait
push
pop
pop
and
push
out
mov
jno
mov
inc
imul
sar
inc
test
push
repnz
test
mov
fwait
outsl
stos
push
aad
pop
loope
sub
xchg
mov
ds
out
ror
orb
dec
xor
repnz
jmp
insb
lods
xchg
cltd
sbb
aaa
mov
push
cmp
inc
out
inc
hlt
scas
dec
mov
jge
call
out
pop
andb
sub
jmp
js
dec
jno
mov
data16
addr16
jo
in
out
das
xchg
adc
lea
outsl
jp
sbb
adc
outsb
loope
xor
lret
subb
sub
flds
cltd
testb
dec
jp
lret
nop
je
fsubr
or
test
jne
lret
pop
push
js
push
clc
setns
or
gs
shrb
das
pop
add
fs
pop
mov
push
int3
cs
pop
aad
fld
leave
adc
arpl
pushf
aam
fcoms
mov
jmp
lahf
fcmovnu
jmp
ljmp
pop
and
pushf
cmp
mov
and
add
push
sbbb
addr16
out
xor
stos
push
das
dec
sbb
or
dec
add
cli
add
dec
add
xor
pop
fnsave
scas
int
jl,pt
lods
lahf
jns
pop
jnp
or
pop
sahf
in
daa
mov
and
xor
jmp
enter
gs
pushf
sbb
sbb
bound
les
sub
mov
mov
rcll
int
test
cmp
xor
jno
sti
fnstcw
adc
push
fwait
cmp
sti
jbe
mov
loope
sub
stos
mov
dec
fwait
push
xlat
ds
pop
les
mov
in
lods
xchg
xor
inc
add
ja
pop
dec
push
andl
jae
jns
jg
inc
add
in
insl
fwait
das
hlt
sahf
mov
push
pop
stos
inc
orl
pushf
aas
jbe
imul
data16
pusha
adc
sbb
sub
push
mov
aaa
outsl
jo
negb
push
ljmp
mov
xchg
and
cmp
inc
and
mov
shlb
adc
std
std
in
jle
aam
outsb
push
or
pop
out
test
mov
fbstp
ja
ljmp
fisttpl
rol
imul
aaa
outsl
fbstp
jne
std
jo
inc
ret
adc
dec
out
mov
fidivl
push
arpl
mov
dec
push
push
cmc
pusha
and
pop
jb
pop
jne
sar
add
shufps
rcll
mov
xchg
adc
bound
insl
fidivl
cmpsl
int
dec
jb
xlat
outsl
push
fs
and
jo
ljmp
scas
mov
sub
arpl
stc
pop
cwtl
inc
in
pop
or
dec
jmp
xchg
xchg
scas
scas
test
and
or
mov
repz
xor
push
cmp
push
shlb
sub
cmp
shrb
mov
pop
dec
xorb
jo
sahf
pop
pop
push
cs
loopne
inc
xchg
scas
lods
pop
sbb
jmp
js
mov
sbb
cmpsl
cmp
into
mov
sub
cld
adc
lock
inc
jl
lods
movsb
mov
dec
sbb
repz
fstpt
sub
leave
bound
dec
pushf
sets
or
rorb
ja
cmp
arpl
insl
outsl
cwtl
stos
imul
orb
imul
push
inc
sahf
cmp
cltd
mov
sub
in
add
pop
call
and
iret
loope
mov
shll
and
cmp
out
xchg
adc
dec
dec
hlt
or
icebp
insl
and
in
movsb
mov
fisubs
addr16
aaa
sti
shrl
in
test
pop
push
sbb
dec
pop
xor
mov
or
jle
cmpb
xor
mov
mov
cmp
sub
mov
xchg
shl
inc
cld
add
lahf
gs
sar
les
es
addr16
in
arpl
mov
cmp
mov
popf
adcb
inc
mov
lret
dec
add
inc
pop
sub
mov
out
cmp
xor
std
xor
xor
iret
rolb
outsb
sbb
xchg
addr16
xchg
jae
adc
cltd
popa
push
xor
out
add
pop
dec
add
pop
pop
pusha
aaa
dec
leave
shlb
rorl
pop
adc
mov
ss
sbb
sbb
dec
call
xchg
pop
pop
adc
es
loopne
jno
jo
or
mulb
fsubp
test
rorb
dec
sbb
stc
fstpt
ljmp
int3
fimull
test
sbb
xlat
cld
sahf
pop
jno
out
lea
lods
scas
lret
inc
jecxz
dec
cli
add
or
cmpsl
pop
or
cmp
jecxz
pop
xor
shlb
and
lock
jl
imul
inc
pop
dec
xor
loope,pn
aaa
dec
int3
jg
imul
mov
xor
outsl
mov
sub
jno
cld
xor
push
dec
xlat
push
pop
lcall
movsl
pop
mov
pop
push
push
sbb
test
push
es
ret
rcrl
aas
and
stc
lret
ret
outsb
out
dec
cmp
jns
dec
pop
lds
xor
cmp
aad
hlt
pop
iret
ja
loope
sub
sti
in
mov
sbb
aaa
jno
jp
inc
mov
jg
sahf
jp
mov
sub
leave
cwtl
dec
leave
cwtl
push
add
aam
fmuls
cltd
inc
and
iret
jle
inc
push
mov
xchg
xor
mov
sub
in
push
je
test
sbb
icebp
push
push
push
loop
mov
push
add
loopne
push
cmp
push
sub
nop
mov
push
inc
or
add
addl
lret
lods
je
fld
addr16
jl
cmp
data16
or
mov
aad
adc
scas
adcb
dec
test
jae
sub
mov
sub
inc
add
fsub
dec
mov
dec
jmp
rcrb
subb
add
enter
sub
sar
cmc
fldcw
adc
ret
pusha
pop
mov
and
adc
movsb
or
and
inc
xor
cmp
adc
mov
cmpsb
insl
xchg
shll
adc
stc
rcrl
call
xchg
rcll
mov
jae
dec
imul
pushf
cmp
and
in
mov
adc
add
sbb
jmp
lahf
dec
sbb
test
or
push
cmpl
enter
pop
mov
or
fcomps
addr16
pushf
dec
inc
rolb
push
or
popa
add
fildll
lahf
lods
jo
ljmp
sub
adc
xlat
xchg
add
mov
sub
adc
mov
mov
or
idivb
mov
pushf
sub
adc
pop
pop
sti
ds
sub
adc
adc
fsubrl
aam
push
int3
dec
bound
fstl
jb
adc
or
shrl
and
mov
repz
adc
or
inc
es
sub
adc
cmpsl
pop
mov
or
sbb
shrl
sub
adc
sub
adc
aaa
xor
mov
and
pop
mov
xor
mov
aad
inc
xchg
in
mov
jno
jecxz
cwtl
sub
int3
ljmp
or
out
and
inc
jecxz
and
fiaddl
int3
mov
lea
cmp
pop
jb
rolb
fmull
rcll
push
or
lds
mov
jb
add
rcrb
xchg
xor
arpl
lahf
xlat
mov
mov
push
push
dec
xorb
popf
and
pop
sub
les
adc
pusha
xchg
xlat
xor
jmp
or
nop
jnp
xchg
fwait
xor
les
loopne
pop
pusha
rcll
mov
mov
pop
mov
inc
jo
cmp
push
or
pop
setg
and
dec
out
jne
shl
rcrl
cmp
fcoms
loopne
mov
sbb
inc
lods
dec
in
dec
test
scas
cmp
mov
or
add
in
stos
scas
push
mov
out
xchg
mov
pop
adc
popa
mov
adc
lock
and
je
jae
cmp
shl
in
mov
cmc
pop
jno
mov
pop
jmp
mov
jg
jno
test
into
push
or
std
subl
lcall
call
les
fbld
add
call
add
dec
mov
sub
xchg
out
nop
cmpsb
adc
std
xchg
lea
dec
out
imul
ss
ja
mov
xor
and
pusha
std
dec
shlb
insl
sbb
adc
imul
in
sbb
add
test
push
pop
ss
add
fldt
xchg
sbb
add
nop
and
shr
popl
lods
push
cmpsb
out
dec
in
cmp
in
fsub
mov
aas
nop
and
subb
adc
pop
mov
push
mov
pop
pushf
fdivl
adc
movsb
enter
popl
dec
push
mov
decb
dec
mov
or
jne
sub
adc
cmp
dec
inc
lret
or
mov
cwtl
sub
adc
loop
test
subb
adc
pusha
push
jle
inc
mov
fucom
dec
ss
mov
shll
or
push
repnz
adc
pushf
shrb
shrl
std
jne
ljmp
and
jge
mov
loope
sub
adc
pushf
jb
adc
mov
mov
or
and
lods
cmp
or
mov
cltd
sbb
jmp
mov
popa
and
test
or
out
lods
subb
adc
movsl
cwtl
xor
mov
or
cmpsb
nop
sub
adc
push
mov
adc
cwtl
sub
adc
imul
jl
push
pusha
ja
out
cmp
push
in
xor
add
mov
or
lahf
outsl
adc
std
adc
pushf
ret
imul
outsl
xchg
sub
adc
mov
or
xor
mov
or
add
lahf
imull
fsubl
sbbb
mov
fs
les
lahf
lcall
xchg
imul
push
cmpsb
pop
popf
outsl
repz
push
adc
jge
and
sub
adc
pushf
jb
adc
xor
int3
sti
add
add
dec
xor
cmp
daa
mov
jo
adcl
pop
cmp
hlt
and
lods
inc
in
adc
mov
leave
adc
and
faddl
dec
cwtl
pop
or
jno
xlat
lea
mov
ret
jecxz
add
test
sub
jp
sub
jo
adc
test
stos
popa
cmpl
mov
sti
mov
ficoms
pop
imul
mov
jno
clc
push
int3
xchg
pop
aam
aas
and
mov
xor
dec
je
dec
pop
out
jnp
inc
sub
or
out
int3
xchg
xor
or
into
pop
test
push
sub
mulb
in
lcall
add
sub
rorl
test
pop
ss
shlb
fsubp
sub
ss
inc
fbld
orb
pop
mov
daa
xchg
xchg
loopne
testl
enter
inc
push
pop
inc
mov
adc
ds
insb
inc
cmpsl
nop
mov
mov
xchg
and
add
or
sub
out
cmp
sti
push
and
sub
cmpsl
pop
jae
addl
sar
aad
pusha
or
data16
xchg
mov
cmp
push
out
jg
and
and
ret
rol
cmp
lock
imul
ja
mov
mov
or
stos
jmp
je
fsubl
outsl
dec
push
adcl
mov
je,pt
xchg
mov
inc
mov
jecxz
mov
das
xchg
sub
addr16
das
les
cmp
push
loope
mov
aas
xor
ffree
sub
cmp
jbe
xor
inc
mov
or
popf
jl
int
cmp
lcall
out
scas
jo
cmc
lahf
xor
ljmp
dec
movsb
dec
pop
test
fists
data16
push
mov
das
mov
int3
sbb
jle
cmp
sbbb
fiadds
adc
mov
aam
movsl
outsl
test
sar
test
les
xor
ret
jge
stc
lea
push
sub
jnp
int3
sbb
add
mov
xchg
push
lods
pop
ss
loopne
pop
in
sub
scas
inc
fsubl
mov
or
cmpsl
aas
sub
dec
test
mov
aam
xchg
dec
jbe
cmp
inc
mov
pop
push
sub
add
std
xchg
push
ljmp
lods
mov
insl
xchg
pushf
test
push
stos
lods
push
xor
adc
bound
add
mov
add
dec
or
loopne
insl
push
ret
movsb
pop
inc
dec
cwtl
into
mov
mov
dec
add
mov
or
xchg
mov
and
cmp
pop
cmp
ss
push
inc
or
and
jbe
es
out
mov
stos
mov
mov
adc
andb
jl
je
hlt
adc
push
shrb
xor
sahf
pop
movsl
mov
cmp
inc
jmp
leave
flds
dec
add
pop
lea
rol
cmp
insb
shlb
push
test
pop
mov
es
repz
jg
or
frstor
mov
mov
mov
jge
sub
mov
cmp
add
mov
xchg
push
lods
pop
aaa
mov
mov
mov
jb
inc
addb
shr
add
mov
out
lods
xchg
jmp
sub
lret
mov
bound
subl
cmp
pop
movsb
jmp
inc
cmp
loope
arpl
inc
int
leave
jae
xchg
lods
shlb
add
popf
inc
lahf
xor
adc
push
shr
mov
sub
adc
adc
inc
ljmp
stos
rcll
xchg
mov
stos
mov
jg
jno
mov
adc
mov
lock
stc
jmp
add
imul
cmp
nop
sub
adc
ret
mov
pop
test
and
sbb
or
xchg
idiv
enter
mov
and
dec
fsubs
push
data16
pop
outsl
std
sti
adc
jbe
fdivrl
inc
sbb
add
push
mov
push
scas
fbld
lret
pop
and
shll
inc
nop
mov
test
jne
dec
xchg
inc
cmp
or
dec
jae
adc
repnz
ret
xchg
push
dec
add
push
mov
sub
mov
and
dec
push
insb
sbb
sub
fldt
cmc
cmp
and
dec
xchg
push
imul
fimull
sub
adcl
je
ficoml
jno
pushf
sub
fisubl
adc
pop
ror
enter
adc
xchg
sub
lret
dec
shrl
push
mov
js
mov
ds
js
data16
pushf
scas
out
jecxz
push
lock
pop
mov
cmpsl
jecxz
sub
and
jp
outsl
cmp
fdivp
xchg
out
xchg
stc
roll
rol
in
fwait
dec
in
pushf
insl
insl
push
ljmp
jp
ja
les
imul
jno
test
dec
test
xchg
out
jle
popa
jb
arpl
pop
insl
sbb
imul
mov
jbe
xchg
sub
in
dec
jmp
arpl
scas
lahf
adc
cmp
repz
xor
add
fmuls
push
cli
imul
dec
push
aam
cmpsl
cmp
adc
cmp
lods
push
sti
xchg
ror
loop
inc
jp
xor
faddp
incl
in
push
push
es
dec
loopne
ds
out
sbb
cmp
aaa
es
pop
lret
int
test
jno
pushf
and
loope
dec
xchg
cmp
and
subb
popf
mov
insl
test
mov
ret
cwtl
push
push
and
ret
ja
stos
subb
adc
cmpsl
xor
sub
adc
add
adc
mov
test
mov
jb
adc
roll
adc
jnp
mov
xor
adc
mov
in
xchg
out
aam
aam
adc
push
aas
push
lods
pop
mov
mov
xchg
iret
xorb
lods
xchg
cmp
pop
adc
outsl
xor
mov
jecxz
pop
insl
fcmovnu
insb
xor
push
aam
fcoms
push
sub
cmp
pop
adc
pop
in
or
fidivs
jno
mov
pop
adc
in
test
jno
adc
sub
test
cmp
mov
mov
mov
call
loop
mov
gs
out
fsubrs
sbb
jno
out
cld
pop
adcb
imul
cmp
out
out
and
xor
popfw
mov
aas
and
adcl
inc
cmp
iret
arpl
add
fs
es
in
repz
adc
push
cmc
movsb
mov
mov
xchg
push
arpl
push
out
lods
lods
push
pop
cmp
mov
movsl
stos
push
dec
pop
sbb
xchg
push
cmc
hlt
push
xchg
stos
sbb
fdivr
sub
adc
inc
push
inc
sub
adc
jmp
dec
xchg
push
std
shrb
scas
xchg
xor
in
mulb
imul
loope
enter
outsl
ret
std
pop
ljmp
jnp
mov
mov
cld
and
inc
fs
sbb
push
jl
inc
mov
insl
jne
sbb
lods
jbe
jo
negl
int3
push
xlat
lods
iret
pop
adc
adc
or
mov
popf
xchg
int
test
xchg
testl
movsb
fidivrs
or
push
ret
stos
xchg
aam
sbb
rclb
andl
in
sbb
xacquire
dec
js
jg
fildl
cwtl
cmp
pop
adc
shll
push
lods
adc
dec
inc
data16
or
adc
cld
sti
popa
adc
bound
roll
adc
adc
inc
mov
mov
mov
clc
mov
lds
inc
test
push
adc
adc
das
das
scas
shlb
adc
hlt
jo
adc
incb
adc
fstpt
incb
adc
leave
fsubl
or
dec
mov
adc
popf
loopne
or
rcrl
adc
in
or
inc
mov
test
and
adc
add
and
adc
pop
dec
jb
adc
loopne
or
mov
jb
adc
in
or
rclb
adc
fsubl
or
jp
add
or
push
and
add
and
adc
roll
adc
aaa
xchg
push
mov
cwtl
aaa
inc
jne
out
stos
mov
adcb
adc
ret
or
sub
mov
aam
adc
mov
xor
adc
je
jne
dec
cmp
fdiv
scas
roll
sahf
add
push
adc
sub
mov
mov
ljmp
add
jle
aad
jle
in
fwait
cmc
data16
leave
adc
xor
sbb
incb
adc
movsb
cmp
pop
adc
fwait
ret
rcll
scas
pusha
addr16
pop
mov
or
fstp
mov
cli
lcall
imul
jl
outsl
lea
mov
cmpl
xchg
loope
or
xor
je
sub
mov
dec
imul
pop
mov
cld
mov
jmp
out
mov
ljmp
enter
sub
jle
arpl
scas
push
imul
push
cmpsl
dec
pop
xorl
xchg
add
add
pop
jg
gs
add
pusha
sub
adc
push
shl
lock
adc
dec
sub
adc
inc
sub
adc
push
lock
ss
int3
lods
push
cmpsl
out
lock
aad
push
or
aas
sub
adc
pop
dec
imul
cmpsl
dec
xchg
mov
adc
sti
cmc
ljmp
sahf
pop
jmp
push
lods
pop
outsb
call
jg
dec
or
mov
xor
pop
dec
xchg
test
cmp
roll
pop
mov
sbb
call
and
mulb
fbstp
or
ss
xchg
loope
sub
adc
mov
fbstp
sub
adc
cwtl
scas
mov
mov
test
push
pop
jnp
sub
adc
mov
push
xchg
out
and
adc
idivl
shll
adc
xchg
cld
clc
testl
xchg
es
aas
mov
push
stos
scas
nop
inc
sub
adc
rolb
mov
shrb
push
inc
movsb
dec
xchg
sub
stos
cmpsb
out
pop
popa
sub
adc
addr16
add
hlt
cmp
ja
xor
sub
adc
sub
test
push
cltd
sbb
inc
mov
sub
adc
push
and
or
mov
xor
or
test
mov
movsl
subb
adc
sbb
jno
cmp
sub
adc
mov
sub
adc
dec
stc
pop
mov
sbb
test
loope
stos
mov
push
adc
es
push
filds
xor
xchg
test
adc
clc
les
dec
inc
add
jp
inc
sub
adc
sahf
add
or
out
bnd
mov
fadds
adc
xchg
mov
sub
adc
mov
push
lret
ds
cmp
push
movsl
jmp
call
jae
stc
rcrl
ss
int
enter
add
cmp
sbb
aam
xchg
or
sbb
dec
roll
adc
or
push
out
outsl
cmp
mov
push
push
cli
pop
fs
adc
movsb
mov
pop
nop
imul
pop
xchg
popf
xchg
and
aas
and
adc
movsl
test
sub
adc
dec
inc
sub
adc
fisubl
cmp
inc
aam
cmp
shl
xchg
setge
push
mov
mov
stos
jle
jmp
leave
pop
movsb
and
mov
sbb
pop
pusha
sub
adc
xchg
mov
jg
xchg
ljmp
roll
adc
push
mov
mov
jg
mov
int3
lahf
pusha
loope
aas
dec
dec
dec
dec
popl
pop
adc
mov
sub
adc
aas
out
push
xor
and
xor
test
sub
daa
dec
mov
sub
adc
or
rol
lds
jns
imul
adc
sub
pop
inc
sub
adc
popa
sub
adc
sbb
ja
and
ljmp
mov
enter
adc
lods
pop
les
xchg
sub
inc
sub
adc
adc
sub
adc
xchg
adc
or
sbb
in
mov
and
adc
or
insb
fistpll
cli
cmp
rclb
dec
out
dec
xor
pop
xchg
mov
incb
adc
cmp
mov
test
or
xchg
addl
jae
and
adc
sub
js
je
ret
and
adc
insl
fisttpl
dec
jb
adc
and
popa
dec
pusha
and
in
and
adc
add
add
push
adc
pop
dec
xchg
scas
mov
or
popf
cmp
imul
sub
adc
sub
adc
cmp
test
nop
push
std
stos
xlat
push
movsb
out
out
aas
sbb
mov
inc
je
sbb
leave
test
ja
subl
sub
adc
popf
mov
dec
sub
adc
adc
or
inc
sub
inc
mov
repnz
lret
sarb
adc
jecxz
out
inc
out
je
mov
lea
addl
popf
pusha
sub
adc
and
stos
sub
and
inc
jae
cmp
mov
stos
enter
adc
lods
pop
testb
or
sub
inc
mov
sub
or
cmc
or
jmp
push
inc
pop
adc
xor
daa
dec
sbb
push
cmpsb
fcomp
cwtl
sbb
fldl
shl
call
sarb
or
outsl
lods
movsl
add
inc
icebp
pop
mov
bound
adc
sarl
inc
fstpl
in
stos
mov
popa
dec
in
daa
sbb
ficompl
add
push
pushf
mov
jmp
lods
movsb
push
lods
data16
mov
dec
pop
pop
jmp
arpl
sub
dec
mov
fwait
test
xor
sub
sub
jge
ss
pop
jo
dec
leave
dec
xor
add
xchg
add
xor
push
push
pop
jle
or
out
mov
and
adc
add
sub
sahf
xor
or
stc
mov
testb
inc
push
insb
lret
test
adc
dec
and
nop
jecxz
sub
cmpsb
sub
or
movb
fisttpl
cmpsb
lcall
jo
push
es
or
sbb
adc
inc
mov
repz
and
iret
cmp
aam
pop
and
cmp
mov
mov
or
adc
pushl
mov
pusha
das
pusha
jo
adc
sti
std
repnz
and
and
adc
adc
loopne
and
and
adc
inc
sahf
into
aam
cmpsb
mov
leave
push
jne
pop
jecxz
push
popa
pop
bound
and
sti
add
adc
lods
pop
es
cs
pop
les
mov
clc
and
adc
push
call
push
or
shll
push
mov
rclb
lods
adc
jbe
jo
adc
rolb
or
mov
and
and
jmp
push
add
adc
js
and
adc
loop
lods
xchg
and
adc
or
sub
dec
repz
and
adc
xor
repnz
test
add
adc
or
stos
in
je
pop
cwtl
and
or
jg
imul
and
mov
ljmp
movsbl
xlat
lock
or
daa
jge
out
mov
adc
dec
js
jb
adc
pop
sub
mov
adc
jno
adc
in
inc
add
adc
inc
loopne
inc
cmp
mov
mov
adc
aad
jae
mov
enter
pop
push
lock
cmp
rorl
popf
cmp
fadds
pop
adc
jg
cli
stos
lock
xrelease
and
adc
xchg
xchg
rcll
je
sbb
call
pop
pop
mov
test
fildl
mov
mov
cmp
pop
adc
xchg
hlt
ljmp
movzbl
pop
jle
loopne
push
adc
stos
sbb
outsl
inc
incl
adc
mov
insb
sub
divb
adc
sub
push
adc
dec
cmp
dec
xor
arpl
stc
daa
cwtl
js
jg
pop
add
fstpt
scas
mov
pop
dec
xchg
pop
jno
and
and
imul
xor
dec
xchg
pop
jb
mov
push
push
lods
inc
fmuls
jle
or
jne
cli
cmc
pushf
dec
mov
xor
jecxz
dec
aad
incl
adc
lret
push
outsl
dec
adc
push
adc
fwait
aam
decb
xchg
jecxz
push
daa
lods
pop
mov
loope
sbb
leave
ss
imul
sub
in
incb
adc
push
insb
outsb
int3
dec
jne
lret
pop
je
mulb
or
daa
ret
jae
int3
jg
ret
jmp
cwtl
insb
fwait
test
xchg
lret
inc
push
sbb
add
cmc
in
lods
or
or
ss
movsb
aas
cmp
cld
and
dec
and
adc
add
add
mov
adc
nop
jno
adc
dec
and
adc
inc
imull
adc
adc
jno
adc
call
idivl
dec
movsl
or
mov
sbb
vcmpsd
push
push
bound
jmp
movsb
jne
sbb
out
icebp
icebp
cmpsl
je
lret
sti
data16
mov
nop
add
sbb
cmp
sbb
mov
fists
dec
sahf
xchg
jb
adc
popf
or
xor
push
add
leave
test
loope
mov
xor
in
adc
adc
push
je
std
loope
adc
xchg
push
in
xchg
stos
jle
aam
xor
in
sarl
xlat
leave
sub
jg
popf
mov
data16
xchg
lret
xchg
mov
jae
insl
push
repnz
pop
ror
adc
lret
pop
adc
pop
or
pop
xor
pop
xchg
out
push
std
sub
jns
into
rclb
inc
push
mov
pop
sub
jb
dec
and
in
stos
sub
fcompl
in
mov
in
inc
sub
outsl
pop
inc
daa
or
push
jb
jecxz
adc
cmp
ja
movsl
adc
adc
or
test
cli
sahf
mov
dec
mov
lcall
shrb
push
int
inc
jecxz
imul
or
sub
jl
lret
int3
out
jle
push
lcall
mulb
pop
test
jmp
pusha
mov
push
repnz
in
shll
dec
ret
pop
push
sub
pop
push
test
ret
je
xchg
push
jg
cltd
cwtl
inc
cmp
imul
fsubs
mulb
and
addb
insb
mov
lods
sub
mov
scas
cmpsb
cmp
and
mov
negb
and
dec
stc
cmp
mov
je
mov
daa
push
stos
mov
out
dec
and
mov
pop
mov
jp
fidivl
in
ret
cld
and
add
dec
jo
clc
sbb
dec
xchg
and
push
cmpsl
out
lock
adc
xor
mov
mov
int
xor
and
xchg
loop
pusha
inc
xchg
and
push
mov
out
or
lret
aas
sarb
mov
aam
dec
pushf
cmp
pop
call
js
or
call
adc
out
pop
sbb
pop
clc
add
adc
daa
cmpl
push
mov
insl
fisttpl
pop
leave
scas
add
sar
lea
add
add
mov
mov
leave
xor
push
rorb
call
in
ret
push
inc
popa
cmp
inc
pop
mov
fidivl
daa
adc
cmp
test
xchg
add
cwtl
stos
pop
mov
xchg
jb
xor
aam
shr
mov
nop
mov
addl
fidivl
push
imul
out
loop
nop
mov
pop
lods
jecxz
sub
cmpsb
push
mov
pop
in
adc
fsts
and
in
add
ja
adc
ret
dec
pop
xor
and
inc
dec
pushf
cmp
movsl
xor
rorl
push
or
lcall
aas
cs
cltd
mov
stos
pop
inc
jmp
push
pop
or
xor
mov
dec
pop
dec
add
mov
mov
movsl
or
in
adc
movups
fdivs
icebp
inc
push
movsb
dec
cltd
mov
shl
out
cmp
jge
inc
pop
mov
fidivl
mov
and
fnsave
xchg
jae
popa
mov
nop
push
cmpsl
jns
popf
sbb
cmp
xor
add
and
jle
push
xchg
rcrl
repnz
mov
sub
jne
rcl
xor
push
rorl
into
pop
adc
das
out
cmp
int3
sarb
pop
cwtl
imul
sub
cwtl
dec
je
xchg
push
inc
test
adc
pop
out
mov
xchg
dec
cmp
aas
mov
push
fs
cwtl
push
dec
xchg
jns
cwtl
cmc
sub
adc
sbbl
fs
call
addl
add
xor
push
scas
push
icebp
pop
mov
add
add
add
jecxz
xchg
pushf
push
ret
cli
test
sub
mov
xor
mov
add
outsl
loope
xchg
mov
mov
fnstcw
sbb
jle
jecxz
adc
xor
adc
or
fnsave
mov
jmp
sahf
cs
dec
mov
inc
cwtl
pop
cwtl
mov
int
popf
fisubl
xor
aam
or
sbb
jmp
aas
mov
out
iret
sub
and
dec
pop
inc
xor
sbb
dec
pop
xor
jecxz
stos
fidivrs
or
into
fstps
shll
push
xor
fwait
and
popf
and
add
jecxz
cwtl
cwtl
sbb
or
push
sub
sub
ljmp
cmp
mov
mov
cmp
sub
fldcw
inc
rol
enter
sub
mov
mov
push
and
mov
mov
addl
fidivl
in
shlb
fcomip
sahf
jns
fwait
and
int
adc
add
mov
outsl
mov
sahf
adc
push
add
dec
pop
pop
in
xor
inc
andb
outsb
ljmp
sbb
xor
pusha
or
in
jnp
clc
addb
add
aad
push
and
jbe
js
insl
fimull
or
in
nop
jo
xchg
std
or
mov
in
or
sub
pop
aam
sub
js
jb
inc
cwtl
fbstp
cli
jg
mov
insl
push
notb
pop
nop
test
inc
frstor
pop
adc
dec
aaa
mov
insl
fcmovb
fs
aam
cmpsl
cmp
pop
adc
cmp
jo
nop
aam
movsl
or
pop
adc
ljmp
cld
jae
inc
in
push
push
push
cld
repz
lods
pop
xor
jp
xchg
sub
mov
jb
enter
adc
add
dec
jle
test
scas
push
xor
gs
sub
jno
dec
xor
inc
lcall
adc
out
jecxz
sbb
cmc
sub
es
flds
and
test
ja
stos
cmp
pop
adc
repz
shll
mov
push
xchg
push
rorl
mov
gs
imul
jmp
lods
pop
mov
xchg
cs
lahf
jno
adc
jmp
dec
pushf
cmp
outsl
fidivrs
push
int
lcall
sbb
mov
cmp
lods
pop
mov
jge
or
dec
addb
jae
das
adc
insl
xor
daa
dec
jmp
dec
push
movsl
dec
lcall
mov
inc
repz
xor
push
mov
gs
cmp
iret
dec
mov
mov
pop
push
xchg
pushf
in
push
pop
data16
in
xor
sbb
push
ljmp
divps
xchg
stos
cmp
mov
ret
cltd
push
pop
dec
and
add
mov
jmp
js
into
or
inc
iret
jle
repnz
mov
sub
add
rclb
inc
aas
orl
out
sarl
xor
or
or
addr16
and
dec
or
xchg
or
push
or
push
movsl
lret
fstpt
push
xorl
push
lahf
mov
jge
adc
cltd
mulb
popa
sbb
ja
dec
adc
movl
scas
mov
or
and
inc
ds
inc
fcompl
mov
xchg
push
lret
lods
push
xor
jmp
shrb
pushl
int
data16
call
bound
xchg
jmp
sahf
test
inc
lods
fcmovnb
bound
out
loopne
mov
xchg
je
iret
xchg
lods
xor
sub
test
xchg
cmpsb
sub
fnsave
lret
popl
jno
mov
and
out
cwtl
or
push
sahf
mov
cmp
stc
xor
lret
xchg
pop
mov
mov
or
test
add
popa
rcrl
jge
lds
push
rorl
push
pusha
inc
push
loop
add
cmp
adc
cs
jne
xor
dec
aad
sbb
mov
out
ret
jg
aad
imul
mov
test
and
scas
jl
notl
dec
cmp
cmp
jmp
fwait
add
arpl
jmp
adc
cs
mov
mov
pop
mov
jmp
push
pop
xor
iret
jecxz
inc
lea
inc
and
leave
ret
add
adc
cmpsl
add
adc
test
adc
adc
add
inc
jl
insl
mov
xchg
push
inc
out
movsb
mov
mov
dec
lea
dec
push
jns
cmp
dec
and
adc
es
jne
hlt
jb
xchg
adc
mov
or
mov
mov
adc
test
pop
adc
jmp
in
bound
push
add
xchg
add
inc
add
add
fistps
pop
shr
out
inc
xchg
addr16
fmuls
clc
cmp
push
or
movl
lods
dec
out
sbb
insb
jp
das
pop
pop
jg
fiadds
and
ja
add
or
mov
in
jo
fisttpl
pop
int
cmp
mov
rolb
shrl
shl
jns
inc
nop
push
pop
jmp
pop
add
sbb
inc
push
inc
mov
dec
add
and
cmp
mov
jge
call
xchg
movb
int3
push
sub
push
in
xor
jp
push
jns
sbb
imul
aam
pop
mov
je
mov
aas
fucomp
jg
pop
or
push
insl
loope
lea
mov
inc
pop
stos
sbb
adc
push
and
sahf
outsl
jb
mov
add
or
sbb
pop
leave
test
or
pop
repz
pop
sti
and
lret
test
pop
rorb
or
adcb
add
adc
lds
lret
lods
mov
cs
andb
adc
adc
or
pop
mov
cs
pop
fcom
pop
adc
adc
inc
or
pop
xchg
rcl
rorb
mov
mov
lock
and
bound
dec
push
xlat
sub
mov
and
out
sarl
adc
daa
int3
out
inc
aad
jnp
jmp
std
mov
mov
mov
and
xchg
inc
adc
rclb
add
movsb
push
gs
sbb
jecxz
cmp
rcl
pop
adc
call
test
rolb
adc
or
hlt
pop
jl
shrb
xchg
ss
sbb
xchg
jnp
in
sbb
rolb
adc
lds
push
out
std
call
cmp
mov
nop
cmp
sbb
sahf
pop
jns
push
cmpsl
jecxz
sub
and
and
adc
aas
jl
push
adc
and
pop
gs
popa
outsl
push
adc
adc
or
subb
adc
xor
adc
push
in
and
adc
and
adc
xor
xchg
in
inc
rolb
adc
add
jge
and
fiaddl
inc
inc
rolb
adc
fwait
mov
int3
aaa
cmpsl
dec
rolb
adc
rolb
adc
out
rolb
adc
jb
test
out
mov
adc
insb
and
adc
xchg
and
push
adc
ds
hlt
xor
adc
rcl
pop
adc
jb
adc
pop
adc
jne
enter
aaa
aam
pop
adc
sbb
and
adc
or
or
pusha
dec
mov
add
sub
lods
add
js
aam
pop
adc
or
lock
or
ffree
mov
scas
imull
push
pushf
or
lods
sbb
daa
in
repz
scas
mov
pop
adc
xchg
or
lods
in
cwtl
inc
jo
mov
pusha
stos
mov
lret
inc
rolb
adc
xchg
sbb
incl
inc
mov
xor
push
mov
fldl
inc
rolb
adc
rolb
adc
push
push
pop
ljmp
pop
adc
cmp
adc
rolb
adc
lahf
cmp
pop
adc
add
in
pop
jp
test
mov
ds
loope
mov
push
jbe
xchg
addr16
std
or
or
push
sub
popa
push
jb
mov
or
sbb
pop
sti
inc
pop
dec
inc
addb
mov
mov
cmp
pop
sbb
roll
adc
jns
push
push
rolb
in
rolb
adc
insb
imul
cmpsl
dec
imul
adcb
std
mov
xchg
loop
cmpsl
jmp
push
lock
and
pmuludq
dec
xchg
in
add
add
int3
push
call
icebp
and
hlt
addl
mov
mov
adc
jno
in
rclb
adc
mov
lods
ss
sub
es
lds
push
jge
addr16
push
jne
popl
xor
es
mov
pop
mov
lret
dec
or
mov
xchg
stos
enter
push
sub
fcompl
mov
pop
jmp
aas
imul
imul
inc
xchg
pop
addr16
frstor
adc
roll
adc
into
sbb
adc
jle
inc
sahf
nop
pop
cli
dec
mov
push
pop
leave
arpl
fnsave
add
pop
adc
dec
ljmp
fstl
cmp
adc
cmpsb
inc
dec
rolb
adc
rolb
adc
dec
and
fld
push
test
mov
idivb
gs
rolb
adc
pop
and
mov
repnz
or
ja
pop
xor
adc
push
call
stos
in
pop
adc
push
pop
xlat
inc
and
rolb
adc
jge
bound
or
int3
enter
addr16
pop
adc
rolb
adc
imul
and
iret
data16
sbb
push
push
and
lock
cmp
adc
and
xor
and
hlt
mov
adc
and
decl
pop
cmp
and
push
xchg
push
dec
cmc
inc
add
dec
shlb
sub
adc
mov
adc
mov
and
adc
fstps
adc
and
adc
int3
mov
or
push
push
or
push
mov
or
or
cmp
add
and
adc
mov
repnz
js
dec
xor
mov
or
inc
jle
stc
push
pop
mov
cmp
incl
jno
daa
mov
push
pop
js
push
decl
fldt
pop
pop
cs
stos
and
rolb
adc
call
aam
outsb
inc
fimuls
test
les
insl
and
jae
shll
pop
das
loope
rorl
aad
cld
bound
ret
mov
clc
pop
jmp
jbe
mov
jae
test
cmp
fisubrl
adc
test
outsb
out
rolb
adc
das
shr
mov
imul
out
mov
mov
scas
rolb
adc
jno
adc
pop
fstps
lret
mov
sbb
andb
or
dec
pop
fbstp
sbb
or
shrl
ret
cmp
mov
sbb
push
dec
stos
stc
imul
add
adc
ljmp
scas
mov
in
cmp
pop
bound
lahf
hlt
mov
and
inc
out
sahf
jle
test
xchg
or
and
aaa
in
dec
cmc
fadds
mov
push
pop
sahf
adc
shlb
xlat
cmp
push
jb
push
inc
adc
jae
enter
jg
sub
or
mov
aam
mov
mov
test
pop
inc
sbb
jae
enter
xorb
and
adc
test
push
lock
or
movsl
lahf
mov
mov
mov
add
loop
mov
out
sbb
loopne
sahf
imul
lret
popf
cmp
xor
inc
int
decl
xlat
fnsave
jno
test
mov
xor
mov
pop
cmp
aad
fnstenv
mov
in
mov
out
das
aas
mov
inc
push
lods
mov
jae
jno
adcb
in
jnp
aam
es
outsb
and
and
sub
xor
sbb
or
add
es
push
inc
insl
mov
hlt
addl
jnp
stos
vpextrw
lds
adcb
mov
mov
cmp
es
fidivl
shlb
ret
cmp
std
push
scas
sub
xchg
mov
repz
and
xchg
dec
inc
addb
mov
mov
fdivl
and
mov
cmp
sbb
call
inc
test
sbb
cmc
mov
ret
cmp
bound
mov
lahf
bound
lock
adc
and
pop
adc
sub
test
xor
mov
push
add
pop
cmpsl
sbb
mov
loope
mov
pop
cmp
or
mov
or
xchg
movsl
xchg
mov
xadd
cs
sar
pop
jle
testb
out
lret
fst
sbb
jle
out
inc
adc
cmpsl
jmp
int
outsl
xchg
dec
sub
or
xchg
and
inc
in
push
push
sti
idivl
pop
scas
lock
andb
fnsave
stos
aas
sti
push
hlt
inc
pop
xchg
sub
lock
flds
adc
jl
mov
fstl
jle
call
sub
testb
js
int
push
jmp
sbb
adc
pushf
pop
and
shlb
mov
rcll
sbb
ljmp
mov
insb
inc
clc
insl
jns
insb
add
test
push
imul
in
cwtl
scas
rcrl
sbb
cmp
addr16
jecxz
jp
and
sbb
adc
repz
iret
scas
aas
icebp
mov
loop
xchg
and
inc
je
cmc
flds
insb
dec
mov
push
rorl
xlat
sar
mov
negb
stos
jl
add
and
shrl
sub
je
pop
adc
inc
fnsave
les
testl
xor
je
pop
adc
mov
ja
lock
inc
dec
test
shlb
faddl
mov
mov
inc
aas
fwait
cmc
lret
mov
ret
dec
xor
fs
or
xchg
addr16
fwait
stos
movsb
fstpl
loopne
push
adc
adc
push
fwait
pushw
sbb
fdivrp
dec
icebp
sti
xchg
cltd
and
dec
cld
cmp
nop
dec
jno
loope
outsb
scas
stc
xchg
out
imulb
fadd
xor
mov
inc
push
loopne
add
xchg
bound
dec
std
pop
outsb
popa
cld
cld
sub
cwtl
jno
test
dec
jae
jle
inc
lcall
nop
dec
ss
sbb
push
mov
jge
or
push
xchg
les
lcall
ss
stc
and
pop
imul
inc
adc
inc
and
mov
pop
mov
sub
faddl
pop
adc
roll
push
inc
sbb
dec
xchg
pop
lret
popa
xor
daa
movsb
mov
shll
mov
pop
push
push
pop
xorl
imul
and
push
fidivs
cmp
adc
jb
inc
push
popa
ret
js
jge
pushf
pusha
pop
jne
push
pop
mov
sbb
mov
nop
repnz
sahf
enter
pop
adc
inc
stc
pop
cwtl
outsb
mov
repz
dec
sbb
push
arpl
aad
jb
mov
lea
xchg
push
sahf
fwait
xor
dec
jne
sbb
pop
cmp
or
add
push
fucomi
loopne
sub
xchg
and
xchg
adc
cli
sub
clc
fistpll
jmp
es
jge
loop
iret
xchg
push
stos
cmp
mov
leave
add
sahf
ljmp
mov
in
loope
mov
adc
outsl
mov
jge
adc
dec
stos
fadds
or
cs
dec
loop
stc
daa
and
fidivrs
pop
adc
cmc
call
imul
mov
dec
jg
lret
dec
or
jecxz
aam
push
or
sub
pop
sub
mov
outsb
sub
pop
adc
sbb
cmp
mov
sub
inc
popa
dec
jae
std
jge
or
adc
sbb
sbb
pop
pop
xor
add
lcall
dec
mov
pop
lock
lods
sbb
scas
cwtl
cs
in
popf
inc
jmp
scas
fisubrl
enter
and
xchg
rcrl
lock
das
inc
out
cltd
sub
and
lret
fsubs
or
cwtl
rclb
sub
push
mov
rol
adc
lcall
xchg
into
fidivrs
cli
jne
push
xor
and
jl
jg
and
mov
out
rclb
int3
or
inc
xor
sbb
shll
testl
pop
std
in
inc
adc
lret
mov
nop
mov
lds
sbb
adc
xchg
fst
gs
mov
clc
lcall
mov
and
and
pop
lea
ss
dec
fadd
pushl
hlt
popa
ds
push
dec
sbb
pop
inc
and
xchg
ds
dec
sbb
jmp
cld
stc
notb
mov
mov
imul
lahf
cmp
or
lods
stos
add
push
fadds
lock
adc
dec
mov
call
mov
in
inc
dec
test
mov
and
push
in
inc
repz
inc
lock
adc
pop
xchg
adc
adc
xchg
popf
jmp
xor
in
add
adc
or
xor
adc
mov
hlt
jo
adc
test
test
shrl
fbld
lcall
dec
std
loopne
push
cmpsl
push
mov
test
jnp
aad
lcall
test
sbb
cwtl
jnp
repz
sub
jle
fbstp
stos
mov
in
mov
lds
pop
fcmovnb
fs
mov
sti
lea
mov
movsl
add
mov
sahf
dec
nop
push
fbld
repnz
mov
mov
loop
jne
sub
or
lock
addr16
ljmp
dec
or
inc
orb
pop
push
sahf
fwait
pop
in
mov
push
xor
xlat
test
xchg
jno
enter
inc
sti
add
mov
aad
dec
xor
or
cmp
and
arpl
out
fcomip
sub
add
in
push
sub
lahf
cmpsb
out
mov
sub
outsb
push
cmpsb
xlat
push
pushf
cmp
js
and
test
outsb
fisubl
and
inc
insl
fidivl
sub
lahf
cmp
lea
test
mov
or
cmp
hlt
ljmp
mov
filds
cli
dec
test
insl
fcmovne
mov
xor
and
mov
fs
lods
add
cli
ds
push
adc
sbb
ds
push
test
das
jne
inc
insb
outsl
lea
lds
add
ss
cs
out
pop
mov
pop
pop
and
jo
adc
or
or
xchg
or
ret
fsubrl
sbb
sub
mov
cmp
enter
adc
decb
fneni(8087
xchg
outsb
push
outsb
fidivl
cmpsl
dec
arpl
icebp
in
jo
adc
dec
xchg
mov
in
sbb
adc
loop
ja
lea
jg
pop
jmp
adc
cmp
aam
imul
sarl
sarb
movl
mov
push
out
adc
adcl
adc
mov
jp
xchg
and
clc
mov
mov
pop
jge
mov
pop
and
pop
adc
les
testb
jg
int3
rcl
push
and
or
push
jae
xor
fidivrl
lds
mov
jg
pop
call
or
add
and
cmpsl
pop
fsts
inc
jbe
test
jmp
or
mov
push
xor
mov
mov
or
in
test
jbe
jae
into
mov
scas
rcll
pop
hlt
rclb
jnp
jo
loopne
das
xchg
push
pop
push
pop
inc
xchg
insl
insl
hlt
sbb
sbb
ret
or
lcall
or
push
dec
rolb
movlps
pop
mov
dec
sub
pop
cwtl
call
jle
or
mov
sub
les
adc
xchg
add
or
mov
es
pop
mov
fildll
adc
add
adc
sbb
adc
and
dec
xchg
xorb
sub
xchg
pop
data16
sti
xor
pop
adc
jp
imul
mov
cmp
or
stos
fsubp
adc
test
shlb
lods
test
sbb
push
and
cs
mov
test
inc
mov
push
adc
or
je
stos
inc
cmp
aas
mov
lods
sub
outsb
clc
aam
jno
arpl
add
dec
mov
out
xchg
sub
cli
fwait
mov
mov
xchg
jg
out
mov
fisubl
xchg
push
scas
push
pusha
inc
stos
or
leave
std
shlb
clc
mov
insl
fnstcw
arpl
sahf
loop
mov
pop
ljmp
or
ss
mov
mov
dec
and
inc
pop
add
jp
jnp
cmc
test
push
lods
xchg
lcall
fisubrl
insb
fwait
jbe
sbb
sbb
test
insl
dec
adc
push
arpl
sub
in
in
pop
xor
fistps
dec
js
xor
sub
jno
xchg
ret
pop
flds
pop
daa
insl
fidivl
and
pushf
cmp
lea
addb
lret
and
lods
jmp
scas
ret
dec
imul
push
and
mov
icebp
in
nop
add
dec
push
mov
pop
push
xchg
pop
push
xchg
push
pusha
push
sbbb
in
repz
inc
nop
add
xchg
jg
and
mov
inc
push
inc
pop
rcrl
je
out
in
cmc
and
sub
scas
mov
aam
push
es
xchg
sbb
xlat
loope
in
adc
mov
mov
inc
pop
push
mov
add
mov
dec
push
movsb
dec
add
dec
pop
clc
lods
rolb
mov
in
sbb
ret
inc
adc
leave
js
es
mov
repz
mov
and
adc
pop
cs
cwtl
mov
insl
nop
cwtl
test
adc
dec
loop
dec
fiadds
pop
adc
clc
xor
push
pusha
jl
arpl
enter
pop
mov
sbb
out
sarb
adc
imul
or
sbb
mov
dec
sbb
outsl
movsl
mov
and
mov
je
rcrb
leave
movsl
orb
mov
sub
adc
imul
ucomiss
mov
int
xlat
add
pop
cld
cmp
push
movsl
out
xor
dec
xorb
mov
leave
mov
adc
cmc
mov
mov
jecxz
sbb
ret
icebp
stos
dec
sahf
mov
cltd
test
pop
pop
test
mov
sub
adc
jnp
xchg
cmpsb
cmp
push
lsl
pushf
rcll
or
fimuls
jo
adc
sub
adc
loop
rcl
mov
push
sbb
sbb
xor
xor
pop
xchg
lret
mov
lds
jecxz
int3
inc
sub
adc
into
pop
iret
into
mov
iret
mov
cli
jbe
mov
and
aad
pop
sbb
sbb
pop
add
push
stos
xorb
jno
push
pushf
jb
dec
icebp
add
push
in
sub
repz
dec
es
mov
push
pop
scas
push
cwtl
int
pushf
das
adc
adc
out
imulb
sub
pop
jbe
and
in
leave
inc
dec
dec
dec
inc
pop
addr16
mov
roll
fists
xor
mov
add
outsl
push
mov
jge
xor
push
addr16
fdivrl
cmp
and
add
adc
dec
sub
je
test
mov
mov
mov
mov
test
or
ljmp
jne
sbb
sub
xor
int
punpckhwd
push
pop
out
mov
test
fildll
mov
loopne
cli
xor
ljmp
mov
mov
scas
add
shll
add
rorl
ss
rol
inc
cmp
xor
or
outsl
jo
adc
mov
sbb
out
adc
adc
cmp
mov
inc
fmulp
pushf
pusha
lds
movsb
fldcw
mov
jo
aad
imul
mov
cmp
lret
and
xor
cmp
cmc
lahf
mov
mov
sahf
add
jbe
sbb
cltd
adc
rcrb
cld
lods
inc
gs
add
lcall
mov
jmp
sub
xchg
jno
add
push
flds
xor
cmp
shlb
sbb
and
pop
xchg
movsl
inc
sbb
loope
hlt
and
aaa
dec
and
cmp
hlt
dec
pop
jl
in
nop
and
outsl
or
ret
jge
mov
and
shlb
adc
xorb
push
and
dec
stos
fidivrl
les
sti
aam
andb
add
adc
dec
xchg
xorb
test
mov
in
push
orl
jge
lea
mov
xchg
dec
sbb
jbe
rcrl
int
xor
outsb
pop
es
dec
outsb
adc
pop
in
test
pop
cmp
inc
aad
lret
sbb
push
xchg
push
ret
mov
and
push
cmpsl
dec
aad
aas
hlt
mov
inc
cmpl
adc
repz
fistl
ret
fxch
and
rorb
ljmp
sbb
addr16
adc
mov
jg
cltd
cmp
push
add
pop
testl
daa
push
dec
push
rol
jnp
mov
pop
cmpsb
fninit
jg
rcrb
xchg
pushf
push
dec
add
or
shrl
pop
inc
inc
fsubrl
xchg
scas
mov
cmpsl
int
xor
push
inc
inc
add
adc
mov
dec
xchg
xor
dec
fisttpll
imul
sub
orl
insl
ljmp
rcrl
add
adc
outsl
int3
fidivrl
sbb
cmp
mov
inc
daa
or
rcrb
icebp
dec
scas
ljmp
inc
das
and
mov
jecxz
pop
pop
es
pusha
ja
hlt
and
sbb
inc
mov
mov
dec
imul
dec
sub
loopne
and
test
lcall
dec
repnz
inc
ja
lahf
fs
aas
dec
sub
jo
jp
rorb
xchg
mov
sar
out
mov
pop
add
lds
flds
je
xor
inc
mov
aam
stos
repz
push
xor
js
xor
arpl
xchg
sub
mov
xor
out
cltd
xor
inc
das
ds
xchg
mov
push
xchg
leave
add
push
adc
jnp
xchg
xorb
sub
mov
pop
inc
cltd
sti
ds
leave
adc
mov
movsl
fdivp
push
rcl
inc
jbe
lds
daa
or
mov
mov
aam
adc
cmp
test
test
movsb
cmp
pop
adc
enter
sbb
daa
or
es
shll
and
daa
or
das
mov
push
sti
push
out
test
sub
and
mov
test
or
scas
fbld
jmp
mov
cmp
in
fisubl
pop
std
xchg
lods
mov
xchg
outsb
clc
aam
dec
sahf
sbb
or
das
mov
lea
lcall
mov
sarl
int
aam
pushf
arpl
sbb
call
pop
imul
cld
cmp
mov
xchg
ljmp
push
push
xor
xchg
pop
mov
insl
sahf
aaa
cli
xchg
sub
sbb
js
jmp
fimuls
xchg
push
lods
lods
xor
scas
rcr
movsb
push
dec
xchg
out
inc
xchg
iret
sahf
mov
pushf
jl
jle
popa
popf
fs
add
pop
fwait
push
jne
mov
push
adc
sub
lahf
push
push
scas
jo
movsl
xorb
push
hlt
rol
add
mov
sub
add
jg
mov
xor
pop
jp
jle
push
mov
mov
or
arpl
and
mov
fcmovnbe
push
loopne
sbb
cmpsb
in
int
or
inc
out
rorb
adc
mov
fcmovnbe
push
sbb
cmpsl
sub
mov
icebp
add
or
xchg
mov
mov
out
insb
fldt
inc
cmpsb
dec
pushf
adcb
jae
dec
imul
mov
fimull
ss
enter
mov
call
cmp
push
sbb
cmpsl
sub
pop
and
mov
jae
xchg
mov
mov
out
pusha
fldt
loope
dec
pushf
adcb
nop
inc
jnp
jae
dec
imul
mov
fimull
fsubrs
ss
nop
and
mov
mov
mov
sbb
adc
xchg
mov
adc
enter
inc
jb
cmp
pop
xor
or
sbb
xor
xchg
or
ljmp
dec
fs
sbb
cs
rcll
cmpsb
and
in
stos
loope
mov
cmp
adc
mov
ja
cli
rcll
mov
or
daa
mov
insl
sub
test
pop
mov
sbb
mov
mov
insl
fnsave
mov
or
pop
inc
mov
mov
mov
push
in
mov
xor
xor
xor
cld
pop
jp
fsubrp
push
jecxz
fistps
loope
outsl
push
push
cmp
sub
mov
loope
cbtw
jg
pop
enter
loope
mov
ds
pop
adc
jecxz
sbb
jae
mov
arpl
or
clc
xor
mov
je
add
lds
sub
adc
iret
pop
adc
insl
lea
mov
xchg
adc
imul
out
movb
sbb
jo
pop
adc
cmpb
or
mov
negl
int3
loop
test
inc
daa
or
and
push
adc
or
adc
cmp
push
lcall
pusha
pop
inc
and
mov
sbbb
cmpsl
lahf
cmc
sub
mov
push
adc
mov
aas
adc
add
dec
cmp
pop
mov
mov
sub
add
leave
stos
add
inc
add
adc
push
das
pop
push
xchg
pop
cli
nop
and
arpl
test
sub
insb
xchg
fwait
jo
cltd
add
jmp
push
cmpsl
jb
shll
sub
lock
stc
testb
les
ljmp
call
and
shrb
or
sub
adc
or
push
push
jge
mov
push
fldt
sbb
imul
addl
cmp
mov
xchg
mov
je
nop
sti
mov
push
jo
adc
fwait
add
jle
xor
outsb
push
daa
stos
sbb
push
push
in
xchg
loopne
sti
int3
add
adc
loopne
jno
jne
pop
mov
and
cmp
or
addr16
jp
jp
aas
and
out
cmp
or
fisttps
push
mov
pop
xor
mov
in
xchg
push
sub
imul
adc
inc
sbb
sub
mov
add
rcrl
es
mov
movsl
inc
mov
nop
adc
cwtl
push
dec
sar
adc
jo
adc
cmpsb
push
jne
cmp
pop
dec
pop
xor
adc
mov
mov
sbb
rep
push
lock
cmpsl
dec
int3
shll
cld
enter
fstps
sub
dec
sbb
mov
sahf
lea
and
daa
or
jmp
adc
ja
into
in
adc
inc
xor
push
mov
test
push
mov
pop
cmp
adc
push
fmuls
scas
mov
and
adc
mov
or
and
js
mov
or
gs
in
mov
out
and
shlb
cltd
jge
enter
xchg
add
xchg
push
dec
pop
call
mov
fdivp
adc
fistpll
push
mov
cmp
or
test
adc
lret
inc
daa
or
lret
mov
xchg
pop
ja
leave
gs
pusha
pop
out
pop
divl
adc
es
inc
and
addb
adc
dec
pop
xor
daa
and
or
cwtl
mov
adc
pop
pop
shrl
addb
adc
mov
sbb
pop
adc
loope
and
pop
adc
add
add
sub
xchg
xchg
cmpsb
pop
je
sbb
lds
aam
adc
cmp
pop
adc
pop
inc
sub
pop
adc
jbe
es
adc
test
sub
ljmp
rorl
cmp
pop
mov
or
fnstcw
jmp
clc
cld
add
jo
into
es
pop
mov
dec
jo
insl
out
es
ljmp
mov
das
pop
adc
or
inc
jecxz
in
roll
shlb
cmp
mov
or
push
cld
enter
fstpt
inc
push
xchg
daa
je
mov
and
xor
insl
int
pusha
faddp
jmp
test
into
mov
or
fwait
in
jecxz
mov
aam
aad
daa
outsl
or
jae
enter
adc
sub
sti
jb
mov
and
adc
dec
stc
xor
je
mov
sbb
jmp
jl
insl
ljmp
mov
adc
test
loop
or
cmpsl
xor
sbb
mov
jge
xchg
sbb
ss
out
cmp
adc
iret
roll
outsb
int
sbb
or
mov
xchg
and
pop
push
pop
inc
int3
bound
or
mov
pop
test
ss
mov
adc
sub
adc
sahf
push
dec
mov
outsb
mov
sbb
inc
out
scas
sbb
mov
push
testl
add
cmp
mov
int
inc
das
add
sub
daa
or
xor
jp
and
daa
or
pop
dec
mov
ficoms
xor
mov
and
adc
add
out
sub
js
sub
xor
call
mov
addr16
mov
push
adc
mov
mov
cltd
arpl
in
adc
sbb
mov
insl
pop
jbe
dec
in
inc
in
out
cmp
or
loopne
enter
xchg
jne
fdivs
adc
sbb
les
fst
inc
lret
movl
sbb
lcall
sub
or
pop
mov
push
mov
push
mov
incl
ds
andb
adc
jecxz
pushf
es
in
scas
imul
push
mov
jns
xchg
sub
jae
int
sub
test
add
daa
or
pop
dec
es
xor
fistpll
pop
inc
daa
or
adc
add
ret
xor
movsb
dec
stos
fstpt
mov
lods
pop
int
cmp
sub
push
dec
dec
call
loop
gs
push
jns
and
mov
call
adc
sub
pop
fcomps
fsubl
enter
xor
scas
sahf
adc
and
inc
or
sub
add
lods
scas
cmpsl
pop
and
mov
sub
jg
or
jg
pop
mov
sbb
xchg
fbstp
lret
and
pop
lds
adc
std
adc
testb
loope
mov
fwait
lea
xchg
push
stos
add
add
lret
or
scas
test
mov
adc
outsb
adc
pop
es
int3
addr16
push
adc
add
adc
pusha
jecxz
dec
out
xchg
push
xchg
mov
sub
lods
pop
pop
sbb
jge
dec
nop
and
or
lret
cmpsl
cmc
ljmp
push
lret
mov
dec
sub
and
cmpsb
dec
pushf
mov
pop
inc
daa
or
add
or
cmp
or
outsl
push
lods
push
cmpsl
jne
ss
xchg
and
bound
iret
adc
movsb
das
incl
rcrb
jns
xchg
mov
pop
dec
popf
cmp
xchg
lcall
pop
test
add
mov
pop
ja
ret
shrl
pop
xchg
sbb
xchg
clc
jmp
push
sbb
cli
mov
shll
or
jo
adc
or
or
pop
decl
mov
push
adc
mov
inc
lahf
push
fiadds
insb
sbb
xlat
xchg
sbb
xchg
adc
add
daa
or
cmp
ljmp
mov
movsl
pop
mov
push
push
cld
cmpl
adc
stos
push
add
push
and
rcr
jl
inc
daa
or
fcompl
jle
daa
or
sbb
fdivrp
imul
lds
mov
mov
push
add
pushf
adc
popf
pushf
out
push
clc
adc
repnz
or
mov
in
nop
mov
jae
pusha
gs
loop
es
and
enter
adc
push
in
call
push
and
xorb
testb
stc
and
add
adc
push
adc
lcall
or
ds
push
adc
push
dec
inc
push
push
and
push
scas
popa
call
xchg
mov
ret
dec
jl
lods
in
xor
iret
cli
add
sbb
adc
aad
fs
fs
sahf
icebp
jp
hlt
jno
fimull
jb
adc
aam
out
movsl
sub
jno
push
mov
dec
xchg
inc
and
inc
inc
adc
or
and
nop
sub
rolb
or
push
mov
out
mov
in
aaa
cmp
mov
xchg
sbb
loope
pop
int3
ret
and
int
add
test
addr16
push
adc
faddp
cs
dec
movsl
fldenv
pop
arpl
lret
stos
nop
cmp
jbe
push
sbb
jb
mov
jbe
jb
dec
mov
lret
xchg
xor
pop
leave
popf
and
fsubrs
mov
push
outsl
xchg
inc
andb
cwtl
xlat
aad
push
pop
mov
jge
rcl
jp
jne
mov
movsb
inc
std
or
lahf
je
js
push
adc
and
adc
inc
addb
push
cli
jg
aam
dec
movsb
ret
popa
and
gs
adc
adc
lahf
movsb
jmp
js
xchg
jmp
cs
xchg
and
scas
xor
aas
sbb
jnp
jae
inc
ret
loop
sbb
movsb
test
dec
xchg
pop
faddl
and
ret
fcmovu
mov
jle
in
adc
mov
fneni(8087
cmp
mov
cmp
test
adc
pop
test
push
xchg
mov
clc
sahf
fbstp
cli
cmc
xchg
out
pop
inc
jg
xor
ret
imul
and
mov
call
jo
adc
out
jp
xchg
sar
mov
sub
xchg
inc
push
dec
jg
in
push
dec
ljmp
mov
xchg
sub
mov
mov
andb
push
aad
fucom
jg
in
mov
fsubs
sub
and
mov
adcl
inc
mov
mov
push
cs
pop
insb
stc
or
xor
push
mov
andl
imul
xchg
lods
cmp
test
nop
and
dec
add
add
repz
stos
aas
and
leave
addr16
ljmp
inc
adc
inc
hlt
adc
repnz
shlw
pop
pop
fidivl
inc
push
lock
sub
leave
int
cmc
roll
mov
xchg
fdivrl
jae
inc
daa
or
rolb
aaa
mov
vmovhpd
and
xchg
push
imul
xchg
sahf
mov
pop
mov
loope
outsl
mov
fsub
ljmp
mov
cwtl
pop
mov
mov
movsb
sbb
push
sbb
push
lcall
jge
imul
xor
loop
pop
mov
cwtl
iret
and
dec
pusha
and
call
xchg
or
into
xor
jbe
or
xorb
add
mov
pop
mov
enter
stc
lcall
dec
cmp
iret
das
cmp
lods
sub
lea
lds
sub
xor
in
fsts
int
jl
adc
stos
jge
push
imul
xor
in
test
sub
les
lds
cs
cltd
pop
lret
mov
dec
lock
jge
rolb
inc
sti
pop
jg
repz
movsl
sbb
jl
cmp
pop
adc
mov
jl
pop
andb
xlat
and
dec
aaa
push
xrelease
mov
add
popf
out
iret
xchg
daa
int3
ret
push
out
andl
pop
xor
xchg
mov
sub
dec
fsubs
out
pop
jnp
cmpb
cmpsl
xlat
pop
cmp
scas
fimuls
adc
outsl
jno
orb
hlt
out
jecxz
jmp
push
jmp
push
daa
cs
aaa
dec
std
pop
add
adc
xor
shrl
lcall
pop
adc
xchg
stos
mov
jbe
push
std
loope
pop
and
lcall
test
or
lret
xor
insl
ret
sub
mov
mov
inc
rorl
pop
adc
adc
mov
dec
inc
and
push
roll
cmp
add
mov
sarb
and
mov
fwait
mov
or
insw
rclb
and
in
dec
push
in
jmp
shlb
outsl
and
jbe
or
or
jle
mov
popa
insb
neg
addb
pop
loopne
sub
jecxz
mov
xor
add
mov
sub
sub
fcoms
sub
push
lahf
xchg
jmp
jo
lock
push
dec
add
add
cmp
adc
and
xchg
test
popf
or
ret
lock
aam
pop
push
pop
adc
stc
inc
cmc
ljmp
or
sbb
cmp
xor
pusha
pop
or
push
in
testb
ja
xchg
movsb
jno
adc
push
and
dec
jg
jo
adc
fs
pop
out
setne
adc
add
or
xor
xor
test
jle
jb
dec
push
add
add
fdivrs
gs
or
push
lret
xchg
fsubrs
dec
mov
cmp
add
sahf
mov
sub
mov
dec
movsl
mov
add
lods
stos
push
push
jne
sbb
pop
or
sti
andl
aam
push
push
push
movsb
xor
es
add
pop
pop
lcall
testb
mov
lods
ret
jp
fsubrl
ret
push
or
lds
nop
scas
push
mov
push
pop
ljmp
fimull
ret
je
push
adc
pop
dec
bound
mov
je
cld
adc
imul
push
insb
scas
mov
cmp
les
test
jne
orl
or
aas
adc
xor
andb
adc
rorl
out
xchg
jl
jge
jno
xor
sti
push
outsl
sub
push
std
jg
push
and
jmp
xchg
cmp
test
stos
scas
leave
jae
leave
ja
lret
push
mov
adc
int3
shll
adc
cld
cmp
mov
stos
push
inc
in
aas
jle
addb
adc
ret
and
adc
popa
jle
call
mov
mov
je
inc
mov
push
push
rolb
lds
loop
mov
push
ljmp
mov
and
adc
mov
push
jo
and
adc
loopne
loope
dec
adc
adc
loope
out
pop
pop
mov
adc
cmpsb
or
jg
out
sarl
jle
push
in
mov
addr16
jg
and
adc
adc
fs
and
adc
out
les
or
jb
leave
xchg
adc
pop
enter
and
adc
jbe
and
adc
push
lcall
mov
xor
stc
shll
fdivs
das
add
push
push
mov
les
icebp
loope
add
lahf
xchg
aad
stos
aam
adc
hlt
in
adc
inc
cmp
dec
cli
mov
or
cmpsl
and
mov
out
add
in
fdivr
push
mov
xor
dec
dec
ffreep
inc
push
add
mov
fisubrs
ljmp
js
cmp
imul
xchg
in
mov
adc
jns
mov
sub
stc
cmp
push
fldenv
jmp
arpl
std
test
loop
inc
push
and
nop
cmc
jbe
dec
dec
iret
pop
add
or
ret
lods
dec
add
aam
dec
cmp
aas
outsb
inc
sbb
imul
adc
icebp
jbe
cmp
and
add
lods
and
cltd
arpl
stos
pop
lret
int
lock
sub
adc
mov
fsubl
mov
push
popa
sub
adc
xchg
filds
jmp
nop
aam
test
dec
imul
cmp
pop
jl
popa
or
and
mov
push
fsubr
add
mov
cmp
loopne
jmp
cmp
adc
cmp
scas
or
sub
and
jo
pop
or
mov
shll
sub
adc
and
adc
stos
outsb
lods
shrb
fnstcw
test
mov
lock
daa
and
je
mov
ljmp
cvttps2pi
xchg
stos
lret
arpl
add
gs
push
sub
mov
xchg
and
sbb
in
or
or
xchg
sbb
xor
push
dec
jo
outsb
or
int3
pusha
or
out
cmp
lcall
mov
add
daa
ljmp
xlat
jno
pusha
or
test
cmpsl
dec
ja
icebp
xorb
add
jns
or
rorb
xchg
pop
pusha
or
push
push
push
shlb
cmpsl
lret
aaa
inc
stos
mov
repz
arpl
or
test
jne
dec
imul
outsb
mov
js
push
adc
rcll
les
in
imul
or
in
xchg
pop
and
mov
sahf
movsl
outsb
sbb
adc
aaa
jns
stc
or
xchg
cmp
xchg
roll
dec
push
mulb
fcomps
mov
and
pushf
jne
mov
jb
adc
cmp
xchg
add
sar
test
push
adc
cwtl
out
sbb
lock
leave
fldcw
mov
add
mov
dec
lock
arpl
inc
mov
ljmp
imul
adc
sbb
push
popa
sub
dec
sub
icebp
dec
movsl
add
inc
adc
pop
cmp
in
pop
adc
jle
pop
mov
test
adc
mov
adc
dec
fsubs
pop
jbe
xorl
das
mov
cmp
and
inc
push
aad
and
mov
adc
int
push
dec
adcl
sub
int3
leave
pop
sbb
or
out
in
jae
fwait
imulb
pop
adc
aam
adc
sub
daa
or
xchg
and
push
ss
pop
adc
pop
adc
lea
sarl
orb
movsl
fisttpl
fidivl
mov
push
cmp
and
mov
shll
outsb
or
pop
mov
xor
out
and
imul
fldenv
jecxz
xchg
int3
add
add
addr16
push
mov
in
xor
xchg
stc
cmp
gs
test
in
stos
xchg
aas
push
mov
pop
pop
iret
test
aas
xchg
shlb
push
cltd
call
lods
repnz
mov
xor
jl
ret
lcall
dec
xor
cmp
mov
and
mov
les
sbb
lea
sbb
loop
push
cmp
and
in
call
dec
sub
mov
jl
ds
mov
mov
call
fcomip
cmpsl
lock
xchg
jno
xor
and
icebp
pop
call
sub
ja
sbb
insb
and
adc
jbe
divb
dec
adc
add
sub
mov
pop
ss
fcmovne
push
push
sub
sub
mov
and
lea
pop
popf
mov
xchg
into
mov
adc
inc
sub
sbb
sub
push
adc
inc
dec
std
pop
push
cwtl
push
es
out
xor
xchg
and
or
insb
pop
and
fistpll
test
pop
dec
add
loop
cmpsl
cmc
lods
pop
int
sub
mov
pop
adc
dec
xchg
push
repnz
in
jmp
scas
pusha
rorl
aaa
outsl
stos
pushf
call
pop
std
je
push
movsb
loope
xor
and
push
adc
aaa
outsl
xchg
in
aam
adc
pop
pop
aam
lds
insb
fcmovnu
in
incb
adc
pushf
mov
jb
add
pop
cwtl
popf
in
aam
adc
dec
xchg
stc
lods
xchg
and
cmp
adc
jg
in
jo
adc
dec
out
ds
fidivl
pop
adc
and
inc
dec
ret
mov
test
lods
das
mov
pop
mov
or
cmpsb
cmp
nop
enter
mov
shrl
ret
add
push
inc
add
arpl
mov
jl
lods
mov
jg
fucomip
cmpsl
cmp
das
out
fisubs
scas
mov
ret
jb
push
adc
fst
mov
mov
orl
and
pop
cmpsb
xor
mov
add
jns
sub
pop
adc
int3
pop
test
sti
lock
sahf
push
pop
sub
das
push
loopne
sti
mov
ffreep
mov
adcl
ljmp
fdivrs
and
jns
jb
adc
inc
mov
jp
push
gs
in
mov
xchg
stos
mov
movsl
mov
dec
jg
xchg
dec
mov
xor
je
mov
in
and
das
lret
sbbl
mov
icebp
cld
mov
sub
dec
pop
out
sbb
xchg
or
inc
push
je
push
adc
cmp
int
push
pop
pop
jno
push
fidivs
popf
adc
je
mov
in
push
les
xchg
mov
clc
ret
stos
shll
and
pop
imul
push
sub
cmp
fistpll
sub
inc
cmpsl
jns
xchg
xchg
ljmp
jecxz
xor
add
inc
xchg
stc
dec
push
imul
dec
or
or
lahf
sub
sbb
sbb
adc
shrb
cmpb
leave
cwtl
inc
leave
cwtl
inc
arpl
xor
js
push
adc
xor
lea
rorl
daa
jae
int3
loopne
mov
cmp
inc
bound
test
mov
arpl
shlb
cmp
adc
pop
repz
insb
es
loop
mov
adc
aad
pop
push
sub
push
test
bound
sbbl
pmulhuw
sbbb
and
cmp
cmp
and
cmp
add
out
lret
pop
movb
stos
jno
lock
in
popa
pop
cmpsb
aaa
aam
and
out
aaa
mov
inc
jecxz
pop
jno
sbb
aad
lea
push
cmp
mov
pop
pushf
inc
xchg
pop
fdivrs
jno
decb
fdivs
jo
adc
and
pusha
mov
pusha
aas
aad
or
cmp
dec
adc
shl
mov
mov
mov
push
pop
push
mov
xor
lret
aad
xchg
xchg
out
jp
and
pop
xchg
lods
xchg
in
movsb
mov
sub
cmp
or
sahf
sbb
mov
das
xor
mov
xchg
into
jnp
movsb
cmp
inc
jl
inc
out
xchg
and
test
fldl
lock
push
or
jns
or
pusha
adc
and
jge
shlb
jne
dec
pop
std
popaw
or
xchg
lret
cmc
adc
sbb
adc
mov
adc
call
and
inc
push
jo
in
addr16
add
nop
or
popf
sub
xchg
sbb
mov
roll
rclb
pop
adc
int
test
or
call
xchg
hlt
and
adc
push
shlb
adc
jo
adc
xor
pop
adc
push
adc
mov
or
dec
push
push
dec
cmp
add
or
fcom
xchg
fisttpl
dec
pop
fcoml
or
outsl
lea
or
mov
cmp
imul
push
jp
mov
mov
mov
jno
adc
ljmp
rcrb
mov
fwait
aad
outsl
scas
or
inc
sub
or
test
cli
jo
xchg
jecxz
fs
in
push
clc
imul
xor
or
aaa
cmc
pusha
xlat
add
and
xchg
push
repz
pusha
pop
cmp
lcall
lea
push
pusha
and
and
pop
mov
jno
fists
loope
int3
push
inc
sbb
cld
psllq
adcl
add
js
dec
mov
xor
lret
std
cld
or
test
add
jae
sbb
xchg
sub
xchg
in
data16
lds
stc
push
out
jg
out
rcrl
shl
inc
mov
inc
and
xchg
addb
data16
andb
jp
cmpsl
cmc
jle
pop
call
pop
inc
ljmp
stos
pop
or
imul
jae
les
lods
sbb
inc
jnp
decb
ljmp
ss
fsubr
sub
or
inc
notl
adc
lock
int
in
mov
movl
dec
lret
sub
das
scas
rclb
inc
mov
xchg
rcr
lret
js
cld
cld
out
das
xchg
adc
ja
xchg
fdiv
dec
inc
pop
push
dec
orb
mov
xor
jmp
clc
adc
popa
mov
dec
aas
xor
test
mov
arpl
lret
ficoms
sbb
rorl
fwait
mov
pop
dec
inc
aam
call
test
inc
lret
cmp
add
lahf
fdivrs
xor
mov
push
popa
pop
aad
push
or
es
xchg
pop
jo
ficoms
loopne
int
aas
sbb
std
decb
xor
xchg
lods
dec
cmp
push
pop
pop
rcr
and
mov
std
repnz
fsubr
xor
add
dec
pop
and
test
push
stos
pop
lret
ja
dec
fcomps
in
lock
push
repz
pop
test
pop
and
cltd
lret
xchg
pop
fbstp
in
ja
out
cmc
mov
int3
push
cld
adc
mov
ror
mov
mov
mov
lds
mov
xchg
jb
or
adc
addr16
and
cmp
syscall
lea
popf
les
dec
fwait
and
sbb
es
sub
jecxz
sti
xlat
jnp
sub
in
lahf
mov
inc
add
je
dec
lret
fnstenv
jg
cmp
sub
xchg
push
lock
jbe
dec
pop
jmp
data16
add
inc
cwtl
addb
mov
mov
shlb
into
dec
rcrl
mov
sti
std
xchg
push
and
mov
addr16
out
xor
add
sub
pop
scas
mov
xchg
and
data16
in
jl
push
cmpsl
push
hlt
cmp
enter
shr
add
cli
cmc
sahf
jbe
cmpsb
mov
insl
add
mov
cmp
ret
inc
inc
or
mov
jno
cmpb
ds
lock
mov
push
inc
push
cmc
arpl
mov
and
popa
xor
inc
sub
rcrl
ja
sbb
outsl
push
push
push
cmc
arpl
mov
and
test
lcall
mov
lea
aaa
out
test
das
std
cli
jl
ret
dec
andb
lcall
xchg
push
lea
aaa
out
test
das
std
cli
jl
ret
test
lods
mov
push
and
lea
dec
push
pusha
mov
sub
ljmp
and
xchg
lods
std
addb
lods
pop
mov
jne
sub
outsl
fistpll
sub
ljmp
and
xchg
lods
in
andb
pop
mov
gs
pusha
jmp
aam
leave
mov
inc
and
xchg
lods
fldl
mov
push
lcall
jo
xchg
cmc
ljmp
and
xchg
lods
int
mov
ljmp
ret
pushl
mov
and
imul
mov
out
xchg
lret
std
cld
pushl
inc
fs
push
mov
xchg
and
clc
mov
mov
inc
and
sub
shrl
xchg
lcall
lock
push
pushf
cld
inc
cwtl
das
or
fisubs
int3
cltd
jae
test
xchg
pop
sub
adc
imul
iret
mov
and
cmp
xchg
mov
ljmp
inc
pop
mov
sbb
adc
push
jo
in
dec
leave
push
adc
jo
pop
adc
addr16
in
mov
mov
and
jo
pop
adc
pop
adc
outsb
inc
mov
aam
stos
and
jge
jo
inc
leave
pop
adc
mov
leave
pop
adc
fdivrs
or
add
inc
leave
pop
adc
pop
xchg
into
das
sbb
pop
adc
sub
sub
pop
cltd
mov
mov
inc
leave
pop
adc
pop
roll
pusha
add
pop
adc
cs
xor
mov
insl
push
push
push
push
cmp
adc
or
ret
xorl
xor
or
test
aaa
mov
sbbb
iret
pop
adc
mov
sti
push
scas
pop
js
or
daa
jge
mov
aaa
xor
or
and
daa
or
rcll
pop
adc
popa
mov
cmpsb
sahf
cs
fs
in
out
fcmovbe
jnp
data16
leave
pop
adc
dec
lret
mov
cltd
mov
das
loop
sub
xor
adc
add
enter
test
adc
dec
fdiv
and
inc
lea
or
cmp
arpl
push
or
sbb
enter
adc
mov
push
fstpt
dec
stos
or
js
adc
lods
sbb
ja
pop
es
xchg
ret
xchg
push
inc
jg
lret
inc
adc
dec
rol
ficoml
fistl
bound
jmp
rcl
pop
aas
cmp
imul
mov
lea
inc
insb
cwtl
xlat
add
adc
nop
jb
leave
mov
bound
fcmovu
fcmovu
and
fwait
paddb
fnstcw
repz
mov
pop
and
mov
inc
xorl
adc
adc
andl
push
pop
adc
rclb
daa
or
and
enter
lea
pop
and
dec
xchg
and
adc
mov
lea
and
daa
or
orl
or
aas
jo
leave
pop
adc
imul
adc
adc
lret
or
scas
xchg
gs
inc
gs
arpl
dec
pop
jg
outsl
lds
adc
inc
push
jno
cs
pop
adc
fsub
test
sahf
xchg
sub
fsub
pop
pop
xor
leave
pop
adc
add
and
pop
adc
pop
out
rcrl
mov
pop
adc
mov
leave
pop
adc
push
inc
cmpsb
pushf
xchg
and
out
lods
loope
inc
leave
pop
adc
stos
and
jbe
pop
std
lret
jl
movsb
out
out
stos
out
inc
leave
pop
adc
push
call
leave
pop
adc
pop
push
ljmp
sbb
leave
pop
adc
mov
test
cltd
xor
pop
adc
daa
adc
sub
cli
push
sahf
pop
jb
inc
leave
pop
adc
out
pushf
cmp
pop
adc
mov
sbb
mov
push
cmp
inc
push
out
je
or
cmp
js
or
nop
call
or
mov
xor
or
imul
pop
adc
pop
adc
or
rorl
jb
add
and
mov
push
fnstenv
adc
popa
cld
sbb
imul
jno
push
out
add
push
pop
pop
and
mov
push
xchg
je
or
xchg
mov
inc
dec
bound
js
sub
or
movsb
mov
cmp
and
mov
int3
cltd
test
fwait
mov
adc
insb
cltd
enter
mov
inc
int3
dec
xlat
lret
cmp
bound
or
aad
sub
mov
movsl
hlt
inc
sbb
ja
testl
sbb
cmp
lods
stos
flds
movsl
and
mov
push
testl
pop
dec
pusha
ljmp
pop
dec
je
cmc
jbe
jmp
jg
pushf
movb
adc
popa
mov
sbb
mov
pop
std
aad
mov
lret
ret
cpuid
sub
jecxz
push
ljmp
and
and
adc
pop
mov
inc
call
sbb
insl
shrl
push
outsb
or
push
mov
lcall
ret
and
xor
sub
insb
pop
inc
inc
push
inc
add
daa
mov
xchg
add
daa
lahf
sarb
xor
xorl
cli
lods
lods
push
mov
xchg
and
das
inc
xchg
out
pop
outsb
movsl
repz
push
xchg
sub
jno
inc
pop
stos
mov
xor
movd
gs
push
dec
dec
cmp
jg
pop
icebp
clc
test
rcrl
fwait
adc
pop
adc
pop
sub
or
outsb
xor
leave
pop
adc
inc
leave
pop
adc
in
mov
mov
adc
xor
es
lods
cwtl
xlat
dec
add
adc
daa
or
pop
and
lahf
cmp
and
in
pusha
push
mov
pop
icebp
jl
fnsave
cmp
mov
xchg
jnp
or
xor
xlat
xchg
lods
std
call
movzwl
push
cmpsl
xlat
add
add
pop
add
mov
in
pop
xlat
fucomp
push
sub
cmp
jmp
push
jnp
inc
pop
ret
pop
shlb
adc
xchg
into
mov
enter
in
les
or
or
stos
lods
add
or
adc
es
xor
test
ljmp
pop
adc
incl
ds
sbb
adc
xchg
push
imul
jp
lea
mov
or
xchg
push
lds
insl
fisttpl
enter
push
inc
loopne
or
mull
lcall
dec
cmc
ljmp
dec
xchg
imul
adc
adc
inc
mov
aas
and
push
lods
sbb
loope
cli
add
test
test
cwtl
sub
fucomi
mov
out
jo
pop
adc
mov
mov
sbb
xchg
lods
xor
pop
ljmp
scas
mov
push
adc
adc
inc
hlt
pop
dec
dec
jno
xchg
ret
gs
pop
pop
pushf
fldt
dec
jl
and
add
or
adc
push
fwait
lcall
and
sbb
or
adc
sub
add
or
adc
dec
fwait
lcall
js
imul
xadd
loopne
test
adc
movsb
dec
xchg
pop
dec
insb
aad
add
cmp
ja
dec
cld
aaa
lret
xchg
out
pop
push
test
mov
xchg
dec
fistpll
mov
add
cld
and
push
sbb
addr16
dec
sub
push
pop
mov
xor
pop
add
lds
les
nop
fwait
sahf
cmp
xor
push
or
inc
sbb
sbb
cmc
or
jmp
and
rol
enter
xor
mov
and
les
in
cltd
push
xchg
inc
mov
mov
jl
pop
add
fdivrs
fchs
or
sub
daa
shlb
adc
jne
jle
shll
adc
sbb
dec
pop
mov
cmpl
shlb
adc
or
pop
jno
or
add
pop
mov
fnstsw
int3
lock
xor
into
sub
cltd
addr16
fs
mov
enter
adc
test
rcl
xchg
jmp
jns
fs
inc
pop
aad
or
add
cltd
pop
js
fimuls
movsl
leave
adc
loop
add
ret
push
mov
movsb
fsubl
or
call
mov
adc
xchg
sub
pusha
adc
cmp
daa
and
dec
std
out
ss
stos
addr16
loopne
xor
andb
das
sbb
jg
mov
push
cli
std
shlb
or
popf
add
movsb
pop
mov
cmp
ljmp
or
sbb
shlb
adc
cmp
push
dec
xlat
mov
pop
loope
or
hlt
adc
sbb
mov
adc
cld
test
cmp
mov
pop
push
andb
sub
int3
or
scas
mov
lea
loopne
or
out
pop
jns
int3
add
popl
or
mov
les
cwtl
imul
aam
or
dec
xchg
lea
or
adc
cmp
fsubs
or
rorb
or
lret
mov
fsubl
or
test
mov
cmp
out
lods
out
pop
push
fsubl
or
sub
shlb
adc
enter
sub
mov
jge
fsubs
or
addb
add
or
mov
or
in
mov
paddb
std
or
pop
pop
cs
shlb
adc
enter
sub
shlb
adc
and
and
cmp
add
pop
fcoml
adc
or
push
xchg
xchg
push
daa
lret
push
jo
jg
loopne
or
nop
jmp
mov
or
fiaddl
cmpsl
dec
pushf
mov
pusha
cwtl
outsl
adc
ljmp
movsb
xor
mov
movsl
ja
int3
or
in
jns
fsubs
or
jle
aam
fsubl
or
xor
pop
and
or
lds
leave
jnp
jns
int3
or
jg
mov
or
push
sbb
push
mov
das
push
stc
lods
xchg
fsubl
or
or
loopne
mov
lds
jl
inc
testl
in
push
shrl
shll
adc
cmc
les
or
jne
mov
les
or
or
or
ja
fadds
push
dec
push
clc
adc
and
ret
push
add
inc
daa
pop
lock
loopne
andb
pop
cmpsb
in
lea
inc
pusha
dec
cmp
int3
or
pop
subl
dec
outsl
aad
push
cmpsl
push
lret
loopne
or
lds
or
add
or
in
mov
loopne
xor
or
dec
mov
or
jns
mov
add
or
pop
insb
pop
pop
inc
pop
mov
or
aam
adc
fsubs
or
pusha
or
push
adc
test
fsubl
or
mov
sbb
dec
out
pop
mov
negb
jne
mov
xor
jbe
orl
or
stos
rolb
push
add
or
add
or
and
in
mov
dec
jae
mov
and
dec
je
ret
xchg
cltd
fstl
push
inc
ja
hlt
add
or
das
stos
mov
inc
shlb
adc
icebp
xor
mov
or
push
ret
fsubl
or
daa
stos
dec
xor
cmc
aam
or
or
pop
cmp
mov
or
lret
cmpl
pop
xor
les
data16
xchg
pop
int3
or
adc
or
cmp
fsubs
or
aas
mov
cmp
mov
fsubl
or
lods
add
jg
sbb
or
shlb
outsb
mov
shlb
adc
clc
cwtl
inc
lods
jle
bound
inc
aaa
inc
leave
jo
or
imul
fs
fsubl
or
jl
and
icebp
pop
xchg
icebp
xchg
nop
or
pop
and
or
loope
adc
fsubs
or
xor
pop
xor
fsubl
or
fwait
out
xor
loop
or
outsb
or
add
jb
adc
shlb
adc
aas
bnd
or
add
xor
xor
loopne
or
jecxz
ss
hlt
and
adc
jo
adc
or
in
or
pop
loopne
or
ja
add
rorl
mov
stos
std
pop
movsl
addb
fsubl
or
mov
int3
inc
in
mov
or
ret
push
cli
mov
pop
movsb
arpl
xchg
adc
or
jmp
or
inc
outsb
jge
call
shlb
adc
jbe
lds
add
dec
xor
pushf
gs
or
icebp
shlb
adc
push
push
or
pop
mov
push
adc
adc
inc
fldenv
mov
add
xor
dec
add
push
sbb
dec
mov
mov
xor
inc
dec
pop
push
push
andl
and
adc
jg
stc
fadd
or
sahf
xchg
pop
pop
lahf
imul
and
imul
fwait
cmp
add
addb
and
les
adc
cmc
in
mov
daa
into
jbe
rol
or
jg
shlb
nop
jmp
sub
mov
fstpt
pop
and
or
push
imulb
or
mov
jae
push
scas
cmp
sbb
lods
push
daa
fldl
jp
xbegin
push
ljmp
mov
pop
fwait
loopne
mov
or
popa
or
adc
rorb
cmp
movsb
or
or
and
adc
mov
cs
dec
push
mov
push
in
insb
dec
aam
cs
mov
fadds
adcb
outsl
and
adc
push
pop
inc
jnp
clc
push
cmp
cmp
shlb
xchg
cmpsb
inc
aaa
cmp
push
dec
or
mov
lret
aad
pop
mov
sub
sub
sub
and
mov
pushl
or
add
push
adc
sbb
outsl
jmp
nop
icebp
mov
sbb
push
mov
pop
pop
jb
adc
insl
das
mov
sub
cmp
fnsave
jge
jg
icebp
enter
add
cld
sahf
in
or
cmp
jnp
enter
icebp
sbb
fbstp
mov
jnp
call
pop
or
mov
pop
jno
arpl
cli
jbe
lds
and
add
mov
mov
sub
in
scas
push
cmpsl
mov
mov
je
mov
mov
pop
dec
outsb
scas
mov
sbb
jge
insl
xchg
jle
or
fs
xchg
pop
xor
jl
out
sti
pop
jbe
push
push
xor
mov
aam
adc
gs
and
pop
nop
in
cltd
mov
shl
loop
pop
shlb
outsl
and
movsb
mov
pop
adc
mov
xchg
pusha
mov
bound
dec
dec
add
cmpsl
cmpsb
or
aad
inc
push
inc
jo
lds
lock
sub
ret
adc
in
or
js
in
or
pop
or
test
adc
push
adc
cmp
or
pusha
int
adc
jnp
fstpt
adc
adcl
jnp
pop
pop
cs
ss
incb
add
or
or
or
cmc
loope
shll
ror
sahf
int3
aaa
mov
jmp
fwait
imulb
adcl
lods
mov
hlt
aam
push
push
int3
cwtl
pop
movsb
xchg
lret
outsb
mov
sub
sbb
mov
mov
mov
lea
test
out
jmp
mov
hlt
fisubs
out
mov
pop
adc
pop
adc
in
fcom
pop
adc
xchg
xchg
flds
cs
or
cmovbe
faddl
pop
jb
mov
pop
iret
gs
dec
pop
cmp
push
je
adc
lds
out
xchg
sub
popa
out
mov
test
lods
inc
fwait
andl
insl
loopne
jae
test
popf
loope
jge
leave
dec
inc
fbld
out
dec
loop
dec
dec
inc
into
push
or
push
mov
sub
ret
cwtl
adcb
sahf
push
rclb
clc
or
cmp
clc
sbb
adc
adc
sbbb
pop
mov
sub
jo
adc
push
insl
shrb
or
xchg
cltd
sbb
pop
adc
test
pop
adc
xchg
cld
or
orl
sbb
and
adc
add
or
mov
pop
adc
lahf
mov
or
or
cli
push
xchg
xchg
sbb
adc
aas
and
or
xor
daa
or
mov
das
or
mov
push
dec
sarl
test
sub
daa
or
shrl
mov
sahf
dec
insb
scas
lods
jmp
adc
addb
test
mov
push
inc
inc
pop
cld
or
pop
jne
ret
sub
sbb
push
ljmp
shll
ljmp
and
popa
and
inc
clc
or
sub
lret
les
or
fistps
lods
sbb
adc
adc
or
sbb
inc
addl
cmc
imul
mov
sbb
push
xchg
mov
stc
mov
cmc
adc
inc
sbb
test
fiaddl
pop
cld
pop
cmc
sbb
pop
insl
mov
lea
pop
ljmp
push
adc
shrl
pop
roll
call
and
add
or
inc
movsb
and
mov
iret
pop
adc
cltd
rcrl
outsl
fbstp
or
jbe
add
sub
dec
out
pop
mov
cmp
adc
and
adc
mov
pop
roll
bound
scas
in
xlat
mov
dec
cmp
adc
or
test
jbe
orl
pop
mov
repz
xchg
lea
stos
dec
imul
into
int
outsl
sbb
add
push
loope
mov
into
mov
push
insl
pop
and
int
daa
les
aad
les
xchg
daa
pop
cmp
loop
xchg
aas
das
icebp
mov
iret
mov
enter
sbbl
pop
mov
jnp
shlb
stos
push
xchg
shlb
sbb
jmp
mov
js
ret
icebp
sub
mov
mov
push
sbb
lock
decb
push
aas
mov
xor
cltd
fsts
pop
por
inc
xchg
adc
rcrb
cmp
fistps
sub
pop
fstpt
inc
popf
mov
add
mov
sub
pop
jns
xchg
push
or
ss
loope
pop
roll
add
cmpl
ret
shr
push
cld
or
loopne
mov
ljmp
mov
inc
iret
mov
cwtl
imul
and
xor
iret
xor
pop
or
fisubs
xor
jno
ja
jnp,pt
lds
or
and
dec
movsb
test
mov
insl
pop
into
out
daa
ficomps
adc
lock
adc
push
push
pop
xchg
lahf
in
push
shr
fs
js
push
shll
addl
loop
das
mov
mov
lea
xchg
cmp
sub
movsb
or
lcall
imulb
arpl
mov
mov
push
mov
pop
jmp
and
adc
pushf
mov
arpl
sbb
mov
xchg
and
arpl
push
cmp
jecxz
pop
out
out
ss
mov
xlat
aas
popa
dec
pushf
xchg
pop
imul
stos
clc
mov
test
repz
xchg
dec
sbb
inc
inc
cmp
mov
xchg
loop
push
and
imul
popa
aam
push
cmp
mov
mov
mov
push
nop
xor
or
pop
inc
shlb
jg
pop
push
sbb
inc
sbb
test
hlt
cmp
fnstsw
in
and
call
icebp
add
xor
es
insl
lahf
xchg
push
and
je
nop
sbb
add
jg
jno
lds
shll
adc
mov
xor
sbb
mov
cli
cmc
xchg
out
jbe
sbbb
mov
lcall
dec
dec
fst
rorb
jmp
test
vdivsd
in
sub
mov
pop
test
sbb
insl
sti
cmc
ljmp
sbbb
jp
sub
xchg
into
stos
incl
adc
inc
addb
or
add
aad
sbb
pusha
push
sti
popa
push
loopne
pop
lock
cs
ja
icebp
sbb
in
lret
int
mov
pop
push
dec
loop
lds
sbb
mov
dec
fsubs
lea
pushf
jecxz
mov
pop
adc
jle
daa
test
pop
dec
xchg
and
push
sub
pop
aad
inc
lock
inc
std
xor
pop
inc
jnp
push
cs
push
lock
movb
inc
aad
adc
std
cli
sbbl
push
sti
dec
xchg
adc
pop
inc
rorb
cmp
sbb
mov
push
push
push
pop
ljmp
push
repz
mov
fsubrs
mov
adc
js
mov
stc
mov
movsbl
dec
xchg
adc
push
pop
loope
mov
mov
call
cmc
or
jnp
shrl
jb
jmp
jmp
adc
movsl
and
adc
inc
sbb
cmpsb
call
leave
js
nop
data16
cmp
jns
jne
std
add
sub
and
movsl
cmp
xor
push
adc
sbb
sarb
xor
pop
pop
pop
pop
lret
inc
mov
arpl
je
push
cmc
outsb
test
push
sbb
int
and
mov
into
stc
sub
fidivs
lcall
inc
cs
adc
jle
xor
je
lods
in
insl
mov
das
shlb
js
lahf
lods
lock
out
inc
pop
pop
push
sbb
daa
and
pop
stos
xchg
subb
iret
popf
jle
xor
dec
roll
mov
and
arpl
fs
cmpsb
addr16
push
int3
mov
pop
ja
lock
enter
sub
add
rcll
js
outsl
insl
outsl
xor
cmc
or
js
and
sbb
imul
sub
dec
xchg
enter
mov
ret
mov
mov
ja
cmp
inc
and
loope
sbb
or
add
out
push
or
out
xor
aas
push
add
mov
andb
sbb
fdivs
xchg
hlt
or
aas
lea
jmp
or
xchg
je
fcomps
mov
xchg
mov
mov
add
mov
pop
jbe
test
push
ficoms
adc
aam
cwtl
cmpsb
mov
dec
pop
es
add
adc
call
mov
mov
shrl
jg,pt
and
dec
mov
jnp
mov
sbb
pop
mov
mov
rcrb
test
fisttps
pop
xchg
sbb
push
sbb
xchg
fistpll
stos
jno
test
mov
int3
scas
testb
xor
out
and
loop
mov
adc
jbe
cmp
pop
xor
jno
mov
lods
in
pop
lds
lds
lods
fsts
mov
xchg
jo
mov
pop
ljmp
je
push
lea
and
mov
mov
subb
aad
xchg
pusha
fwait
jb
sbb
data16
xchg
stos
adc
xchg
adc
dec
adc
or
orb
fbstp
mov
xor
pop
and
lods
and
jmp
sbb
cli
cmc
sahf
repz
push
inc
mov
mov
jg
xlat
lea
inc
aad
cltd
in
or
rcrl
mov
xchg
and
xchg
mov
lock
sub
rcll
inc
or
pop
and
dec
out
cmpsb
cmp
insb
mov
mov
jns
call
shrb
pop
lods
pop
mov
repnz
sbb
cmp
sub
lods
shlb
jo
adc
mov
sbb
push
adc
sbb
pusha
mov
sahf
push
lods
inc
pop
mov
sbb
cmpl
daa
or
cs
loopne
cmp
sub
fs
sbb
adc
sbb
adc
shlb
push
cmp
or
pop
and
pushf
cmp
or
inc
or
or
mov
loopne
jbe
cmp
loope
pop
pop
xchg
dec
popf
dec
pop
mov
int
mov
stc
or
mov
scas
lods
xchg
scas
mov
rolb
shrl
aaa
outsl
mov
loop
pop
icebp
rorb
call
mov
aam
sub
push
in
ffree
mov
xchg
aam
cmpsb
pop
mov
push
repz
mov
mov
cli
inc
iret
rcl
das
aaa
outsl
jns
push
int
and
pop
pop
sub
push
arpl
sbb
push
je
insl
sub
pop
add
lahf
lods
xor
mov
aad
daa
dec
ss
mov
or
fstl
or
inc
jmp
pop
sub
dec
outsl
popa
mov
fdivs
push
mov
dec
jg
enter
adc
xchg
nop
inc
push
and
stos
test
movsl
mov
jns
out
ret
mov
ltr
popa
mov
xchg
stc
xchg
sarl
xlat
sbb
mov
and
in
push
bound
mulb
mov
add
aas
inc
into
sbb
shlb
loope
rol
aas
ljmp
jne
xor
mov
push
push
adc
push
cwtl
jo
repz
call
inc
stos
mov
cmp
out
movsl
xchg
adc
or
and
ljmp
mov
int
pop
or
out
cmp
jae
aad
mov
jnp,pt
push
jmp
negb
int
out
ret
in
sbb
fsubrl
fs
clc
mov
jg
mov
inc
push
mov
push
ret
xor
bound
sbb
aam
les
addb
or
fsubl
inc
mov
popa
sub
cmpsl
mov
add
sub
xchg
hlt
and
adc
das
scas
cmpsb
pusha
pop
jmp
jle
addr16
dec
push
leave
push
add
stc
mov
mov
frstor
pop
ret
mov
std
gs
push
xchg
hlt
ret
sbb
in
inc
pushf
push
fwait
fs
fs
inc
xchg
aaa
in
fsub
cmp
arpl
fstps
pop
or
dec
cmp
cmpsb
clc
jmp
xor
stc
mov
jg
pop
and
fdivs
adc
aas
inc
xchg
sbbb
adc
xchg
xchg
fwait
add
test
jo
adc
pop
xorb
pusha
sbb
lea
and
mov
ljmp
cmp
or
daa
sub
cmpsl
pop
push
bound
mov
add
roll
or
mov
icebp
in
jb
dec
scas
mov
and
inc
nop
adc
or
pop
js
outsl
pop
cs
mov
xchg
adc
aas
push
push
push
outsl
fisubrl
cwtl
jae
sub
sub
negb
lret
mov
or
and
imul
stc
adc
inc
aad
adc
movb
mov
jb
pop
jbe
int3
xor
mov
jmp
sahf
and
clc
pop
pop
jle
inc
push
pop
loope
aad
xchg
and
stos
pop
cmp
outsb
lcall
aas
std
cli
pusha
add
sbb
adc
ss
test
movb
aaa
in
mov
in
cwtl
outsb
mov
sar
jge
pop
xchg
and
xchg
pop
je
sbb
cltd
and
mov
incb
aam
outsb
fmul
mov
ret
rorb
shlb
popf
adc
cmc
frstor
sbb
pop
or
or
rcrb
mov
sbb
in
testb
fists
jno
adc
nop
or
or
pop
js
mov
and
in
js
int
daa
or
add
add
adc
sbb
dec
sbb
dec
pop
les
stos
mov
xor
adc
add
add
test
aas
sbb
cmp
add
cwtl
jo
or
test
sbb
mov
or
aas
sub
dec
sbb
pop
popl
push
lods
ja
and
in
dec
push
inc
sbb
inc
jge
fmuls
sbb
loopne
scas
lods
xchg
sarl
adc
loope
mov
xchg
shr
or
fcompp
cmpsb
cmp
pop
ja
pop
push
xchg
cmp
adc
cwtl
insl
push
sbb
rcll
xor
imul
and
test
push
sti
arpl
xor
inc
cltd
test
out
imul
out
mov
mov
popa
mov
and
inc
adc
push
dec
jb
rorb
adc
jmp
mov
jne
mov
lahf
insb
loop
jnp
mov
inc
test
add
aas
inc
into
mov
jmp
inc
xchg
push
ret
xor
mov
insl
fwait
rclb
popa
xchg
jge
jg
xchg
dec
push
test
sub
push
pop
jns
adc
mov
inc
lea
sbb
pop
sbb
or
sub
mov
mul
push
add
mov
dec
jp
or
outsl
jb
int
fadds
xor
mov
insb
jno
adc
mov
cld
je
push
in
xchg
push
mov
gs
push
popa
jge
sahf
jge
not
and
sub
jmp
stos
scas
repz
push
jns
dec
jle
pop
xor
xor
and
scas
popa
and
xor
sahf
sub
pop
ror
repz
loopne
fwait
imul
adc
pop
inc
push
cmpsl
xchg
mov
daa
or
shll
insl
es
or
push
adc
xor
daa
or
or
push
adc
stc
jns
daa
or
dec
mov
shrd
daa
or
arpl
scas
pushf
mov
fwait
scas
stos
mov
int3
jb
adc
lahf
pushf
sbb
popf
loope
jge
jno
xor
mov
cmp
adc
add
out
dec
ss
in
jnp
jo
adc
mov
dec
daa
jmp
stos
jbe
movsb
add
sbb
repz
mov
push
dec
cs
pop
dec
push
es
or
dec
cwtl
sub
pop
push
rcrl
flds
dec
sti
mov
gs
js
jp
inc
jne
test
es
clc
imul
repz
pushf
push
cmp
xchg
mov
adc
adc
push
adc
dec
inc
imull
push
jg
xchg
jp
test
sub
leave
cwtl
inc
leave
clc
je
push
adc
gs
jecxz
js
dec
jg
pop
mov
cwtl
dec
lcall
pop
ret
sbb
adc
pop
xlat
ds
adc
pop
inc
sbb
into
int3
jb
adc
adc
pop
jae,pn
daa
or
and
push
adc
push
adc
or
outsl
fidivl
or
pop
shll
inc
and
cmp
or
push
mov
sbb
cmp
xor
es
or
test
std
jo
ljmp
push
adc
add
or
stc
fwait
inc
enter
cmc
cld
mov
push
mov
sub
dec
cmpsl
pop
addr16
dec
xchg
push
rolb
xchg
pop
je
sbb
xchg
add
mov
loop
cmp
and
and
dec
loope
jne
pop
cmp
js
push
jg
pop
mov
xor
pop
stc
push
push
insb
mov
arpl
jb
adc
push
cmp
add
sti
or
jns
sarb
add
mov
and
adc
inc
in
jo
popa
sub
inc
out
xchg
and
out
push
add
jmp
outsl
push
dec
jg
push
dec
lcall
cmp
cmp
arpl
lods
iret
pop
adc
in
leave
jl
test
iret
mov
aad
pop
fcoms
scas
cmpsb
mov
mov
nop
enter
mov
push
subb
sbb
xor
inc
and
loop
push
pop
adc
imul
imul
push
aad
sub
sbb
call
insb
lret
mov
bound
leave
test
enter
push
xchg
pusha
push
ds
and
mov
ret
cmovb
mov
sbb
fdivr
lret
pop
stc
mov
ficomps
inc
test
add
pop
loopne
xchg
out
sbb
mov
ds
repz
std
cmp
sub
adcb
test
addl
ja
lock
inc
pushf
je
pop
adc
popf
sub
adc
push
pop
in
xchg
fldcw
scas
dec
cltd
gs
ljmp
mov
xor
gs
mov
testb
int
pop
xchg
lahf
xchg
rol
mov
insb
sbb
inc
mov
dec
je
pop
adc
push
sub
stc
or
and
cmp
popl
sub
pop
ss
fcmove
scas
sub
push
fsubrl
leave
xchg
mov
inc
add
inc
in
mov
push
rcrb
aam
push
es
inc
js
xor
std
cmp
je
pop
adc
and
dec
pop
fsubrs
xor
mov
js
inc
mov
mov
and
movsl
push
inc
sub
aad
adc
leave
add
jno
pop
sarb
mov
roll
adc
out
test
out
jl
loope
sbb
jb
les
ja
out
dec
mov
dec
dec
jg
cmpsl
imul
mov
inc
jge
mov
sub
dec
leave
pop
push
dec
add
cmp
and
pop
loope
pusha
stos
sbb
hlt
cmp
or
scas
stc
loop
cmp
mov
xchg
adc
sub
add
out
mov
sbb
xor
mov
mov
dec
jbe
xor
cmp
sub
add
lret
cltd
rcrl
inc
xor
mov
stos
adc
fldt
stc
repnz
clc
mov
addb
sub
xchg
in
pop
xor
cmp
xor
add
push
fs
xchg
xor
lahf
mov
testl
test
cmpl
call
jb
lahf
jge
test
leave
cmp
and
inc
addb
shrb
push
fsubl
test
xchg
sub
test
cmp
mov
and
cmp
and
mov
test
xchg
stc
xchg
push
sti
lods
scas
movsl
and
sbb
nop
jns
mov
pop
jecxz
test
xchg
xor
lods
push
lods
pop
cmpsl
lock
lea
inc
in
lret
jns
fs
cli
cmc
pushf
pop
lcall
insl
jmp
in
insb
ret
cwtl
call
rclb
add
lahf
xor
mov
aas
and
es
cltd
xchg
lock
sub
mov
out
or
sub
mov
idivb
and
es
vpmaddwd
mov
inc
into
pop
stos
push
sahf
pop
cmp
in
xor
adc
jb
inc
aad
jae
add
cmp
mov
mov
pop
and
imul
xor
jno
lea
jge
aaa
movsl
shrb
mov
test
scas
dec
pushf
mov
or
into
lret
cmc
repnz
mov
daa
mov
fbstp
out
jmp
xor
mov
mov
mov
out
popa
push
jl
mov
out
rcl
sbb
pop
or
adc
mov
xchg
mov
mov
mov
adc
adc
adc
push
adc
adc
adc
push
adc
push
adc
adc
adc
adc
adc
adc
push
adc
pop
push
and
sbb
jg
inc
sub
adc
xor
arpl
aas
aaa
mov
pop
or
pop
or
inc
xor
mov
fsubs
aam
and
pop
xor
es
inc
clc
dec
cwtl
jmp
xchg
and
arpl
and
adc
push
dec
xchg
pop
pmulhuw
push
adc
test
ds
jg
jbe
pop
jno
insb
cmp
push
jns
inc
and
cs
xorb
pop
std
sub
push
mov
xchg
cltd
sub
addr16
aaa
es
jmp
add
pop
cmp
cmc
jge
movsb
scas
lret
xor
push
sub
loopne
xchg
inc
loop
es
test
pop
mov
aad
inc
shl
dec
fsubp
out
nop
addr16
movsb
pusha
xchg
cmpsb
repnz
lock
push
inc
mov
inc
mov
push
mov
in
xchg
data16
pop
jp
or
sub
push
add
sbb
mov
in
pop
frstor
dec
xchg
push
push
and
lods
into
adc
fdivp
js
hlt
xor
mov
cmpsl
fnstcw
pushf
scas
shr
dec
ret
lock
popf
fstpl
push
imul
addr16
loop
ret
push
inc
int3
push
push
shlb
jb
mov
mov
pop
sub
fcoml
xor
push
pop
call
es
mov
xchg
mov
sbb
fsts
gs
push
scas
dec
adc
cmp
xlat
out
inc
out
ja
nop
test
call
sbb
pop
sbb
enter
mov
lcall
pushf
mov
inc
add
lret
pop
ds
adc
loop
xor
jle
pop
mov
aas
call
imul
xchg
fisttpll
adc
sub
inc
pop
mov
pop
enter
addb
fcmovnu
call
outsl
xchg
and
lods
loop
arpl
jle
bnd
or
jno
mov
subl
stos
adc
pop
cmp
adc
jle
andl
add
mov
fadd
mov
test
aaa
and
outsb
fistpll
cli
or
ret
cmp
sub
or
sub
pushf
fistpll
jmp
lock
repz
push
lock
and
mov
sbb
add
dec
shll
sub
jp
lahf
push
cmpsb
adc
mov
mov
fidivrs
xchg
jmp
fldln2
adc
jo
aaa
jp
lahf
pop
cmpsb
adc
mov
dec
and
add
push
stos
cwtl
mov
mov
pop
rolb
movb
icebp
in
sub
repz
add
aad
mov
push
and
lods
xlat
test
rorb
inc
jp
mov
add
inc
jo
jge
sbb
adc
mov
jmp
test
xor
cltd
rclb
pop
adc
sbb
scas
fdivrs
adc
mov
frstor
adc
or
shrb
xchg
add
pusha
ficoms
mov
fcmovnu
pop
sbb
adc
push
mull
psrld
inc
push
movb
mov
mov
loopne
imul
jmp
movzbl
or
mov
mov
popf
sbb
xlat
or
sbb
jle
mov
sbb
mov
mov
insb
push
aad
mov
jg
jmp
int3
sub
mov
decb
push
stos
and
scas
push
cmpsb
rorb
jo
shlb
ljmp
mov
xlat
orl
icebp
mov
dec
pop
dec
push
or
in
fdivrs
or
ret
enter
add
mov
mov
data16
pop
mov
cmp
lods
stos
adc
push
cmc
jo
out
inc
imul
jg
xchg
push
fsub
cmpsl
mov
dec
pop
inc
test
pop
push
or
add
mov
xor
mov
pusha
mov
add
adc
adc
std
sahf
lds
fisubs
xor
in
dec
in
add
aaa
or
pop
frstor
fisubs
iret
fcom
jge
or
pop
test
jg
aad
stos
loopne
jb
shll
jb
push
push
pop
popf
scas
divb
push
cmp
mov
fcompl
jmp
pushf
insl
fmuls
loop
sbb
xchg
xchg
xlat
sahf
pop
cmp
dec
mov
je
roll
lret
push
das
push
insb
pop
mov
pushf
pop
cmpsl
mov
subl
mov
lock
pop
popa
add
and
call
and
push
cmp
pop
or
mov
jecxz
lcall
adc
iret
inc
jge
push
mov
inc
adcb
test
repz
ret
push
push
push
mov
rcrb
bound
sub
pusha
push
xor
add
gs
movsl
sbb
dec
cwtl
pop
sub
push
loope
sbb
mov
sbb
adc
pop
xchg
ljmp
jg
push
ret
test
mov
int3
popf
inc
xor
imull
lret
cld
sub
insl
xchg
jbe
sbb
arpl
mov
loopne
insb
cwtl
jno
icebp
sbb
inc
adc
inc
loopne
push
mov
mov
inc
movsl
lret
and
add
jecxz
icebp
and
rcr
xchg
jno
adc
pop
lods
push
rcrb
push
lods
pusha
dec
xchg
cmp
and
push
mov
adc
pop
fsubrl
add
fcompl
push
lea
pushf
stos
xchg
jmp
mov
sbbl
gs
movsb
sbb
loope
sub
pop
adc
inc
std
xor
cmp
dec
fucom
push
loopne
scas
mov
xchg
pop
mov
inc
sub
or
mov
or
push
insl
pop
mov
mov
lods
fadd
mov
sti
mov
lahf
mov
fs
ljmp
fcmovnbe
in
and
fldt
icebp
cmpsb
dec
pushf
pop
repz
ja
push
inc
mov
ljmp
push
movsb
leave
sbb
dec
sub
xchg
pop
movsl
jg
xchg
ret
test
outsb
add
xchg
xchg
ret
jae
repz
out
mov
jmp
popf
test
push
mov
inc
push
lods
pop
aas
sub
cmp
cs
cmp
stos
dec
pushf
cmp
lea
addb
or
in
fucomip
xchg
sarb
xor
push
jg
stc
test
mov
or
mov
mov
xor
xchg
sub
arpl
stc
push
loop
aad
es
addb
xchg
inc
mov
movsb
sti
mov
jle
lahf
pop
push
add
out
mov
ret
add
jb
sub
xchg
pop
shll
mov
sbb
sub
test
sub
movsb
mov
xchg
mov
pop
hlt
pushf
lds
or
fadds
cmpsl
notb
push
inc
sub
dec
sub
jno
adcl
pusha
mov
pcmpeqb
mov
out
dec
addr16
enter
test
data16
add
push
loope
xchg
imul
je
rcr
mov
mov
inc
aad
cmc
xlat
movsl
xor
dec
out
outsl
xlat
and
fstpt
imul
icebp
sbb
mov
sbb
xor
dec
lock
or
lds
stos
cmp
ds
movb
pop
mov
dec
mov
testb
mov
xor
std
ja
mov
pusha
ja
aas
mov
xchg
dec
lock
xchg
enter
fcmovu
fs
inc
mov
mov
std
mov
xchg
sub
pop
adc
dec
inc
in
fildll
inc
adc
ds
or
jns
pop
test
cmp
jbe
std
cmp
and
push
jno
mov
cmpsb
cmpsl
movsb
stc
inc
in
and
dec
sbb
pop
xor
xchg
mov
arpl
shlb
add
nop
leave
lods
or
out
and
repnz
in
and
xchg
outsb
pop
js
sti
in
jmp
and
pop
adc
into
inc
enter
sbbb
adc
sbb
enter
add
and
add
adc
in
testb
and
arpl
inc
push
inc
push
lds
or
shrl
adc
fwait
mulb
jmp
or
xchg
imul
mov
and
lcall
outsb
rclb
mov
iret
xorl
sbb
or
lahf
leave
in
jbe
pop
or
push
lea
outsb
inc
cmp
addb
loop
sub
dec
mov
jmp
mov
es
andb
adc
sub
inc
sub
test
addl
add
xor
pop
push
sub
cmpsb
dec
and
lock
dec
inc
fsubr
xchg
add
std
movsb
ret
dec
and
fs
adc
pop
and
mov
pop
imul
push
std
rorb
cmp
pusha
fsubr
pop
push
xor
mov
test
roll
call
push
jecxz
mov
dec
pushf
mov
xor
testb
xor
add
sub
insl
fidivrl
daa
int3
and
inc
out
xor
push
dec
mov
test
adc
mov
fndisi(8087
cmp
inc
int
arpl
fnsave
adc
cs
pop
sub
mov
fstpt
adc
cmp
sub
lcall
call
fldcw
jno
jbe
sbb
inc
mull
sub
adc
jg
pop
mov
test
sbb
jne
mov
test
cmpsb
mov
pusha
sti
mov
add
add
add
std
movsb
ret
jns
ret
jge
dec
pop
hlt
push
inc
je
push
adc
and
adc
inc
addb
add
ljmp
rorb
cli
dec
jg
jo
adc
insb
mov
push
dec
data16
les
add
add
dec
jmp
cmp
xor
sub
movsb
mov
mov
or
insb
test
cli
loope
sbb
xor
fisttpl
out
shr
mov
mov
pop
inc
in
les
pop
mov
cmp
movsl
dec
xor
shrb
in
out
cmpsl
dec
popf
cmp
mov
out
mov
clc
jge
inc
je
push
adc
int
aas
test
mov
aaa
mov
push
adc
out
test
mov
ss
xchg
and
push
rcll
or
mov
push
orb
mov
pop
cmpsl
fadd
scas
call
shll
adc
sarl
in
lods
cld
mov
or
aaa
mov
mov
push
std
ds
xor
notl
int3
inc
add
ss
cld
or
pop
mov
or
dec
mov
sar
int3
add
xchg
xor
hlt
sbb
sub
mov
mov
pop
mov
out
and
xchg
or
jmp
outsb
ljmp
dec
xchg
int
movsb
jo
adc
les
dec
adc
or
out
ds
aam
mov
insb
enter
out
add
jg
push
mov
adc
and
adc
cmpsl
add
hlt
xchg
sbbb
adc
dec
add
jne
or
addr16
jo
ja
ret
aaa
lods
shll
push
and
loopne
adc
or
pop
sar
loope
xchg
and
and
adc
test
test
icebp
jae
inc
sub
lods
xor
iret
movb
pushf
mov
pop
mov
inc
ds
stos
fldenv
cs
mov
test
mov
pop
xchg
push
movsb
pop
shrb
out
sub
mov
xchg
cmp
lcall
mov
add
mov
in
mov
or
leave
xor
and
jmp
loop
movsb
dec
sahf
loopne
or
mov
xlat
ljmp
or
mov
and
push
shrb
clc
cs
inc
movsl
js
and
adc
lds
jne
and
adc
sbb
movsl
repz
and
adc
mov
adc
xor
and
adc
adc
call
mov
std
shll
jg
jp
push
bnd
and
adc
call
sbb
or
mov
mov
ret
pop
mov
and
scas
out
inc
inc
cmpsl
dec
xchg
mov
and
adc
outsb
fistpll
pop
jbe
adc
sbb
pop
gs
pop
xor
popf
sub
cli
mov
dec
outsl
lea
or
mov
test
jo
jecxz
pop
daa
and
rcll
or
push
xor
jb
fstps
pop
push
loop
xchg
aad
leave
aam
push
pushf
mov
cmp
dec
addb
push
cli
aas
adc
or
mov
outsl
and
push
sbb
xor
sub
mov
sbb
cwtl
leave
xchg
mov
mov
mov
or
xor
sarl
fsubrl
lea
decb
psubusw
sbb
loopne
int3
mov
mov
pusha
pusha
jno
cmp
stos
or
repnz
loop
jl
jle
lea
shlb
adc
rorb
je
sbb
lcall
pop
repnz
and
sub
das
and
in
mov
movb
and
mov
pop
orl
out
xchg
imul
inc
push
adc
adc
mov
mov
jmp
and
jmp
mov
fidivl
cmpsl
ja
sbb
xor
int3
or
cmp
sarl
insl
fwait
mov
scas
mov
lods
dec
sbb
repz
mov
fs
dec
jmp
xchg
sbb
imul
clc
mov
mov
ret
aam
pushf
push
jmp
add
call
dec
xchg
xor
std
add
nop
les
jbe
pop
push
mov
xchg
ret
out
add
adc
push
lds
cli
pop
sub
rorl
hlt
push
or
or
xchg
je
sub
lods
or
push
out
add
dec
mov
shlb
fdivp
cmp
dec
mov
mov
cmp
dec
movsb
pop
add
inc
mov
pusha
decb
repz
add
adc
dec
sub
rclb
fsubs
rcr
mov
jecxz
mov
lock
adc
ljmp
jecxz
sbb
sub
dec
mov
mov
aaa
notb
dec
and
out
jnp
pop
mov
jmp
daa
or
data16
sub
out
into
dec
jg
or
pop
xor
repz
xchg
pop
iret
test
addl
cltd
push
mov
push
add
ss
mov
adc
sbb
xorb
cmp
daa
or
mov
outsb
call
imul
lods
stos
fstpt
sub
aad
sub
cli
cmp
jecxz
push
fcoms
jo
adc
stos
pop
mov
and
andb
pusha
jo
adc
xchg
ficomps
gs
hlt
adc
jno
adc
js
int3
xor
shlb
imul
lcall
pop
lret
jecxz
lock
adc
hlt
pop
and
fnstsw
repz
sub
addr16
push
adc
jb
inc
add
arpl
ljmp
call
inc
pop
js
and
add
in
or
hlt
jo
adc
fistpl
testl
daa
or
mov
sti
call
fisttpll
orl
xchg
nop
jecxz
sub
lds
aam
xchg
adc
nop
fwait
in
mov
adc
push
pop
leave
mov
xchg
pusha
pop
mov
sbb
sbb
pop
ficomps
rorb
push
adc
jns
sbb
imul
pop
adc
mov
mov
xchg
dec
loopne
fstl
movsb
gs
lret
pop
adc
mov
mov
lahf
and
push
in
sub
sub
fistpll
repz
cli
xchg
pop
dec
sub
push
cmp
and
dec
and
lea
adc
mov
cld
cmc
cwtl
cmpsb
lret
dec
test
out
pop
lods
pop
cmpsl
ror
mov
inc
sbb
call
xchg
les
pop
adc
daa
and
ds
mov
sub
bound
or
or
pop
adc
movsl
sahf
sub
sub
sahf
fidivrl
cli
cmc
cld
sub
and
pop
xchg
xlat
dec
xchg
pop
and
pop
mov
rolb
dec
sub
adc
fdivr
jmp
out
cwtl
sub
adc
gs
and
xchg
mov
sub
inc
test
mov
inc
in
inc
xchg
and
sbb
pop
or
push
lods
decb
adc
mov
mov
ret
movsl
dec
out
inc
out
sbb
pop
test
pop
adc
adc
mov
in
cmp
aad
hlt
cwtl
push
sbb
pop
adc
lds
sub
adc
lret
jmp
xchg
les
pop
adc
dec
push
and
bound
pop
call
inc
lock
clc
sbbl
mov
or
pop
adc
rcl
sahf
add
outsl
movsb
sub
adc
adc
shrb
mov
gs
mov
data16
sub
adc
dec
jns
hlt
test
negb
and
leave
inc
lahf
push
out
popf
inc
jmp
xchg
nop
out
ljmp
inc
mov
xor
dec
in
xlat
pop
orl
xlat
movsl
inc
lods
pop
loope
mov
xchg
sub
pop
adc
dec
jl
pop
adc
in
stc
loope
jne
sub
mov
lahf
pmaddwd
mov
push
aam
mov
sub
adc
or
pop
push
or
mov
pop
cmp
test
sub
repnz
pop
sub
pop
adc
lret
pop
aam
bound
lea
ljmp
insb
mov
push
sub
sbb
movsl
aam
pop
adc
in
inc
mov
jno
rol
mov
mov
push
cli
mov
fisubrl
das
push
ljmp
cmp
mov
std
imul
jno
push
call
pushf
sub
pop
out
dec
jmp
addb
xchg
std
stc
mov
sti
mov
mov
bound
jb
push
cmp
fsubrl
pop
adc
mov
cli
in
sub
cmp
cmp
das
pop
adc
rcl
shl
es
idivb
pop
cmp
pop
adc
lods
jg
pop
add
dec
daa
addb
into
add
xchg
sub
addr16
adc
popa
fdivl
std
sbb
add
rcr
mov
adc
test
cmp
mov
inc
adc
lcall
std
lea
mov
hlt
sbb
addr16
lods
jb
xorb
adc
mov
sub
dec
scas
pop
or
cmp
inc
add
and
test
cld
xor
adc
cmc
xchg
mov
sub
mov
lcall
movsl
mov
push
shr
xor
jp
and
pop
adc
mov
ret
mov
pop
adc
push
lods
pop
xchg
xor
adc
or
and
lods
pop
mov
mov
xchg
pop
dec
mov
ret
lea
inc
ret
inc
or
cli
sub
xor
adc
daa
push
arpl
mov
pop
adc
push
cmpsb
push
movsb
cmp
ja
lahf
testl
push
ret
lea
inc
leave
pop
xchg
cli
mov
mov
push
sti
lea
cs
cs
jmp
xor
adc
clc
cmp
pop
adc
ss
test
adc
sub
pop
in
dec
stos
mov
lea
sub
pushf
xchg
cli
decb
test
and
mov
movsb
mov
mov
mov
cli
cmc
cld
lahf
inc
push
movsb
cmp
inc
dec
xchg
and
lods
pop
and
pop
adc
or
and
lods
pop
mov
mov
xchg
pop
dec
push
mov
lea
inc
ret
inc
or
je
lock
outsl
pop
xchg
and
movsb
mov
xor
adc
loop
decb
push
movsb
push
cmp
pop
adc
and
ljmp
sbb
adc
xor
andb
adc
dec
mov
mov
in
and
lea
hlt
jmp
cli
nop
mov
test
mov
out
cltd
out
push
cld
clc
loope
cmp
daa
dec
nop
xor
sub
fsubrl
add
les
mov
push
stc
cli
inc
push
mov
xchg
and
ret
sbb
pop
adc
jne
mov
inc
mov
ljmp
das
lret
add
jmp
or
test
arpl
testb
ror
pop
adc
cs
mov
fcmovnu
sbb
add
pop
adc
nop
int3
ret
cld
repz
loopne
mov
jle
data16
mov
inc
scas
movsl
enter
pop
cmc
je
mov
xor
jnp
enter
in
les
sub
cmpsb
jno
xorb
test
and
push
xor
ret
data16
call
stos
out
sub
arpl
or
push
cli
loop
xchg
aam
pop
sar
jg
iret
cmp
rclb
lds
scas
pop
stos
out
inc
mov
sbb
or
mov
aad
loope
pop
mov
cmp
push
lods
dec
mov
sub
call
aaa
pop
adc
rcrb
or
test
pop
adc
jae
mov
or
cmpsb
dec
loope
inc
jmp
mov
aaa
pop
adc
pop
ret
mov
test
loop
or
cmpsl
sub
dec
loopne
movsb
mov
adc
push
ja
in
cmp
adc
mov
leave
mov
or
mov
aaa
pop
adc
insl
inc
stos
ret
push
cmp
adc
outsb
ret
pop
or
ror
dec
and
outsb
inc
insl
sbb
mov
iret
cmp
es
add
fidivs
sub
sti
xlat
sbb
outsl
push
movsb
dec
inc
ja
fcmovnb
stos
mov
lret
xor
repnz
insl
int
sub
sarl
xor
adc
in
inc
jmp
jnp
sbb
push
or
adc
pop
adc
imul
leave
cwtl
mov
xchg
push
lret
jo
lahf
insb
cmp
adc
or
sbb
aam
nop
cmp
adc
andl
dec
jne
je
aaa
sbb
add
or
int3
or
aam
loopne
xor
decb
pop
in
and
rcl
cmp
outsl
stos
or
in
pop
add
test
sbb
insl
fidivl
pop
repz
imul
pop
fcmovnbe
insb
xorl
dec
xchg
insb
in
cmp
adc
sahf
sbb
sbb
add
add
aam
loopne
xor
fmull
insb
sbb
pop
adc
sahf
sbb
sbb
pop
clc
cli
xchg
mov
arpl
adc
ret
shll
or
jecxz
ljmp
adc
fmulp
mov
fwait
ret
lock
int
fdivr
std
cli
jecxz
adc
cmp
adc
push
scas
cmpsl
aas
sub
test
mov
inc
mov
and
loopne
dec
xchg
sub
mov
lods
aaa
outsl
fildll
mov
ret
mov
xchg
and
lods
pop
pop
pop
xorl
imul
vpcomub
inc
add
dec
xchg
sub
mov
arpl
push
mov
std
pop
leave
cwtl
cmpsb
push
push
movsb
dec
test
mov
mov
lods
pop
cmpsl
jno
mov
jno
cmp
call
dec
inc
cmp
or
lds
sub
adc
scas
lar
push
idiv
negl
mov
lods
dec
xchg
sub
movsb
mov
mov
xor
sub
pop
adc
xor
push
mov
jbe
dec
nop
imul
xchg
adc
cmc
hlt
loope
ds
shr
test
fiadds
push
mov
scas
push
jp
stos
jge
out
in
out
xchg
mov
cwtl
lret
pop
xchg
sbb
inc
mov
movsl
inc
insl
or
xchg
push
shl
xlat
fnsave
popa
lods
sarl
adc
pop
jg
jo
fadds
fmuls
dec
cmp
das
scas
mov
testb
push
or
mov
imul
xor
ficomps
dec
cmp
pop
adc
inc
cmp
jo
ljmp
in
pop
adc
xchg
arpl
in
fnsave
sub
jae
sub
sbb
mov
push
push
adc
pop
adc
fcoml
movsl
mov
sub
add
imul
mov
mov
push
cli
xor
das
push
fucomip
iret
je
jg
xor
outsb
xchg
push
or
stc
test
pop
rcl
xchg
push
sti
cmc
ds
ja
or
fnstsw
std
repnz
mov
out
dec
xchg
and
fstl
mov
and
adc
lahf
mov
stos
add
or
inc
pop
adc
mov
icebp
sub
mov
push
repz
xor
adc
ljmp
icebp
xchg
rolb
adc
imul
jbe
push
pop
inc
pop
adc
jmp
inc
pop
loopne
pop
adc
jecxz
inc
pop
adc
ljmp
jecxz
dec
push
jo
and
filds
lahf
insl
lods
jp
pushf
divb
dec
shlb
jb
test
lret
icebp
insb
inc
pop
adc
xchg
int
scas
insl
or
sub
loopne
imul
lahf
mov
sbb
cwtl
sti
mov
jge
mov
stc
cltd
ret
cmp
inc
pop
adc
shll
cmp
adc
pop
push
cmc
sbb
aaa
sub
adc
fsubr
hlt
ljmp
and
xchg
insl
orl
test
testb
enter
dec
or
ficompl
test
shlb
insb
inc
loopne
mov
xor
loop
decb
inc
push
movsb
cmp
lret
hlt
push
lods
sub
insb
mov
sub
inc
pop
adc
push
mov
sub
enter
dec
inc
pop
adc
lcall
sbb
cli
mov
inc
pop
adc
xchg
scas
mov
je
arpl
sub
pop
adc
cmp
hlt
ljmp
and
mov
pop
adc
dec
mov
mov
call
jg
fadds
adc
xor
add
dec
xchg
insb
cld
inc
pop
adc
lcall
mov
and
adc
aad
inc
pop
adc
inc
mov
add
mov
inc
dec
pop
adc
push
sti
lea
sbb
cs
jmp
dec
pop
adc
mov
in
loop
cs
arpl
dec
pop
adc
mov
aad
xchg
and
inc
jg
pop
pop
mov
dec
pop
adc
aad
dec
pop
adc
inc
mov
andl
ret
decb
pop
push
movsb
push
inc
dec
pop
adc
lds
dec
pop
adc
lret
jmp
xchg
mov
mov
and
es
bound
lret
add
cld
lea
cmpsl
pusha
push
cmpsb
or
dec
pop
adc
xchg
test
jl
xor
in
sbb
icebp
out
mov
arpl
in
add
in
lods
pop
repz
sub
jle
lock
leave
frstor
jg
js
pop
adc
dec
mov
and
mov
pushf
xchg
dec
sarb
pop
repnz
fldl
push
jb
xlat
inc
faddl
xchg
inc
insb
cs
scas
mov
cmpl
mov
rol
cltd
or
dec
pop
adc
shl
cs
adc
or
push
imul
sbb
insl
call
in
mov
and
das
call
testl
xchg
gs
idivb
xchg
data16
stc
rcrb
stos
movsb
dec
scas
xchg
fwait
pusha
and
shlb
pushf
pmullw
fs
icebp
and
sub
mov
sub
mov
inc
mov
adc
push
mov
decl
pop
push
movsl
cmp
inc
xchg
and
jo
push
lods
sub
xchg
shll
xor
inc
cmc
std
out
mov
shrb
daa
dec
xchg
adc
ret
insl
fmul
or
mov
stos
push
sar
bound
loopne
mov
jp
cmp
lock
or
fcmovbe
cs
dec
pushf
sub
sub
push
ljmp
jne
cmp
mov
jecxz
test
cwtl
addr16
mov
and
push
inc
mov
mov
jge
xor
inc
shlb
movsb
push
pop
adc
pop
or
aam
pop
mov
push
mov
rclb
adc
nop
ja
loop
sub
test
fcompl
cmp
xchg
push
rorb
push
sbb
dec
shl
fs
ja
fadds
nop
mov
mov
fildl
aas
sub
int3
xor
sbb
ja
push
repnz
loopne
daa
cltd
test
jno
lods
aaa
sahf
mov
sub
imul
outsl
push
pop
mov
fisttps
into
adc
xor
push
pop
cmp
outsl
lods
int
std
in
mull
sahf
xchg
and
test
nop
sub
and
or
loopne
std
cli
jecxz
and
dec
xchg
xor
sub
mov
dec
shr
pxor
fneni(8087
out
pop
and
dec
xchg
push
cmp
sub
dec
or
pusha
fidivrs
push
cwtl
cmpsb
xchg
push
movsb
dec
test
or
and
jl
mov
mov
nop
and
fildll
mov
mov
and
push
pop
xchg
sub
cmp
ljmp
outsl
fistpll
cli
xchg
pop
adc
xchg
push
cmp
cmp
lea
dec
int3
mov
push
cwtl
cmpsb
mov
or
xchg
and
ret
mov
and
fildll
mov
mov
aam
dec
loopne
movsl
andl
pop
ret
adc
sbb
jns
inc
jp
mov
mov
push
cmp
dec
xchg
cmp
adc
inc
lcall
test
out
aam
loopne
pop
push
fisttps
cmp
and
push
int3
mov
push
lods
js
pop
adc
cmp
push
clc
lcall
pushf
push
pop
adc
mov
or
push
jecxz
push
pop
adc
push
inc
cmpsl
pop
or
pop
adc
pop
loopne
hlt
jmp
pop
inc
push
pop
xchg
and
push
pop
adc
sti
stos
cmp
pop
js
mov
shrb
dec
loop
push
xchg
and
pop
adc
push
add
push
or
lret
lock
push
pop
adc
cmp
repz
pop
mov
xor
pop
adc
test
mov
pop
or
pushf
or
cs
lods
xor
pushf
push
pop
adc
lret
loope
jb
push
xorl
cs
xor
inc
mov
adc
and
mov
cld
push
push
pop
adc
sub
mov
xchg
ljmp
pop
adc
jno
scas
lods
fcoms
xchg
xchg
push
cli
icebp
sbb
or
popw
cld
jp
rolb
or
movsl
pop
push
cmp
dec
in
adc
test
jae
or
mov
jb
fsub
push
pop
adc
fwait
mov
or
and
pop
adc
lods
in
and
pop
cli
jg
iret
push
arpl
sub
arpl
push
pop
adc
xlat
adc
movsb
pop
xchg
xor
inc
lcall
push
pop
adc
pop
not
test
pop
jne
cmp
adc
pop
cmpsb
xorb
inc
push
mov
repz
dec
xchg
xor
push
jb
pop
mov
cmpsb
sahf
sbb
lret
popf
add
in
mov
xchg
xor
loopne
and
jp
cmp
mov
in
add
fcmovbe
cs
outsl
pushf
sub
rolb
push
sub
jle
insl
fimuls
jae,pn
shll
loop
lock
bswap
mov
rclb
adc
daa
push
mov
or
int3
imul
insb
roll
cmp
int
cld
push
pop
adc
add
outsl
rolb
sub
sbb
lods
iret
dec
pop
push
pop
adc
cmpsb
mov
inc
lret
sbb
xchg
sub
dec
xchg
xlat
std
lea
sbb
sbb
addr16
dec
mov
mov
mov
adc
scas
mov
push
aam
pop
adc
dec
adc
xchg
push
sti
in
push
repz
cmp
test
pop
pop
adc
gs
adc
adc
jne
xor
xor
enter
test
mov
ret
mov
test
nop
sub
enter
shlb
sbb
adc
mov
and
dec
xchg
and
add
dec
xchg
insb
cmp
pop
adc
xchg
sbb
sbb
add
cli
mov
pop
pop
adc
xchg
scas
inc
adcb
movb
and
ret
pop
pop
adc
arpl
pop
pop
adc
ret
shl
fwait
int
xor
pop
adc
push
cmc
aad
and
bound
pop
pop
pop
adc
jl
lea
and
mov
mov
aam
inc
stos
mov
and
and
pop
adc
lods
pop
rcrb
or
or
cld
call
movsb
cmp
and
xchg
mov
pop
outsl
ffreep
inc
cmp
mov
fistl
movsl
dec
xchg
pop
ja
xor
outsb
cs
fsubrs
repnz
lea
in
faddl
jmp
test
sub
ficomps
mov
repz
imul
xchg
test
movsb
aaa
lods
movzbl
pop
fisubl
push
lods
sub
dec
rclb
loopne
outsl
lods
int
std
in
shll
test
adc
add
ret
dec
or
inc
leave
jl
cli
decb
push
push
movsb
push
pusha
pop
pop
adc
lds
scas
jne
jne
sub
pop
fcomi
jmp
sbb
cmpsl
push
pusha
sbb
test
ret
sbb
std
mov
shrb
dec
xlat
cmp
pop
inc
or
sub
rclb
or
fldl
lock
pop
pop
adc
add
and
dec
cmc
jno
xchg
jb
hlt
loopne
call
scas
or
sub
cmp
mov
pop
add
and
mov
aad
aam
pop
adc
jl
xor
hlt
and
push
lcall
or
or
rcr
ret
jno
popa
enter
cltd
sahf
mov
pop
adc
test
aas
enter
adc
mov
sbb
xor
pop
pop
adc
jl
xor
mov
cld
pop
pop
adc
roll
and
push
xor
pop
lcall
fildl
mov
add
jle
xchg
not
imul
pop
adc
sbb
pop
pop
adc
push
imul
pop
adc
addr16
cmp
int3
out
lret
cmp
adc
mov
ret
test
lret
xchg
and
sbbb
jl
sbb
sahf
inc
jns
dec
mov
mov
clc
mov
dec
in
jle
pop
mov
sbb
stos
daa
js
stc
in
xchg
psubsb
jmp
xor
aad
pusha
pop
adc
cmp
ret
out
dec
lock
in
add
push
gs
test
pop
rorl
enter
pop
shlb
cmp
cmp
inc
jne
dec
mov
in
pusha
pop
adc
xor
xor
in
jecxz
mov
jp
je
outsl
shl
cmp
dec
xchg
jge
ret
jge
icebp
fwait
in
pop
cltd
movsb
sahf
fs
pop
adc
rclb
add
sarb
mov
mov
adc
cmp
and
inc
dec
inc
test
rcll
icebp
mov
pop
adc
xchg
stc
imulb
adc
fcoms
sub
and
lahf
bound
mov
cmp
scas
xchg
popf
jno
je
cltd
mov
dec
jl
jp
invd
jb
push
sub
push
pop
movsb
mov
push
shrl
addl
cwtl
test
adc
fcom
jmp
xlat
dec
xchg
and
loope
dec
xchg
insb
test
pop
adc
scas
sbb
sbb
add
cli
xchg
mov
arpl
bound
adc
ret
shr
fwait
test
push
clc
clc
bound
adc
xchg
leave
aad
and
mov
mov
cmpsl
mov
fwait
lods
lret
push
int
or
std
cli
jecxz
sub
dec
xchg
xor
sub
lea
or
cmc
cld
mov
push
movsb
push
inc
arpl
adc
in
sub
sub
outsl
lea
cmp
pop
adc
imull
xor
and
cltd
pop
shlb
jne
jb
aaa
sbb
add
cmp
aam
loopne
xor
fimull
pop
in
and
call
outsl
stos
or
add
lods
mov
in
sbb
push
test
stc
test
addb
jmp
stc
out
aam
les
adc
gs
dec
rorb
pop
adc
jo
fs
adc
mov
data16
inc
sub
fs
adc
adc
les
fidivrs
adc
mov
test
sti
mov
dec
shlb
gs
adc
imul
or
outsb
sti
gs
mov
gs
adc
inc
ret
jmp
mov
dec
xor
les
cmpsb
aam
mov
inc
filds
stos
jns
cli
decl
push
mov
xchg
dec
xchg
sub
sbb
iret
pop
daa
sahf
add
insb
cwtl
gs
adc
adc
shrb
pop
addb
cs
punpcklwd
lock
adc
sahf
icebp
mov
cmc
jle
lock
leave
fstpl
inc
mov
dec
popw
adc
ja
imul
insb
popw
adc
in
inc
mov
xor
dec
cmc
xor
dec
lock
pop
fidivs
movsl
je
popw
adc
repz
scas
jo
xchg
das
fsubl
mov
push
pop
test
or
pop
adc
stos
out
das
call
lods
loope
add
pop
lods
addr16
adc
loopne
push
mov
mov
leave
lcall
pop
aas
add
xor
loopne
pop
adc
sbb
or
fildl
xchg
test
mov
jnp
adc
iret
sub
gs
inc
add
mov
cmp
or
push
and
inc
adc
sub
inc
xchg
in
mov
ss
mov
sbb
jmp
mov
bound
pop
adc
ret
cwtl
daa
xor
mov
mov
sbb
mov
nop
and
pusha
push
jge
pusha
and
pop
adc
movsl
pop
stc
stc
cli
ja
in
pop
mov
and
xor
or
pop
adc
inc
rolb
addr16
repnz
mov
mov
fldt
pop
adc
jo
insl
jl
pop
adc
incb
loop
int3
push
adc
jg
imul
lahf
inc
insb
mov
xchg
mov
rolb
adc
dec
hlt
in
xchg
sbb
pop
mov
add
pop
js
popa
pop
mov
mov
cmp
aam
push
pop
das
adc
sub
insl
mov
sub
push
pop
test
pop
adc
bound
sarl
or
xchg
cmp
neg
lods
cmp
inc
cwtl
push
jg
data16
push
xchg
cmp
xchg
push
sub
mov
setge
cmp
pop
fcoms
aas
lahf
es
adc
jnp
mov
pop
lods
pop
push
cmc
sbb
insb
pop
adc
hlt
ljmp
movd
pop
adc
inc
lea
pushf
leave
cmp
stc
decb
stos
push
movsb
cmp
inc
pop
add
dec
xchg
pop
and
pop
mov
rol
sub
outsl
lods
or
stc
cmc
lods
add
adc
add
push
cmp
sub
dec
fistl
lea
sub
aas
push
cld
decb
stos
push
movsb
push
cmp
pop
adc
lds
mov
insb
lock
adc
dec
repz
sti
fnstenv
adc
dec
shr
insl
pop
adc
inc
frstor
std
mov
inc
insb
outsb
xchg
and
enter
cmp
arpl
mov
pop
pop
leave
lods
xor
add
push
clc
jle
push
cmpsl
pop
mov
in
outsb
pop
adc
cwtl
jle
mov
jecxz
fildll
pop
adc
push
pop
cmpsl
aas
lds
mov
xlat
imul
cmpsb
push
cltd
mov
ljmp
outsl
fistpll
cli
xchg
mov
push
sti
mov
push
fsubrp
shlb
mov
jle
jmp
imul
aam
loopne
pop
and
dec
xchg
push
cmp
push
lods
dec
or
lea
adc
jl
stc
decb
test
and
and
inc
sub
sub
sbb
push
sbb
outsb
lods
int3
inc
cld
in
sbb
pop
arpl
cmp
int
lods
pop
cmpsb
sahf
les
stos
jns
cli
decl
push
mov
xchg
and
xchg
sub
rcl
sahf
add
insb
fcmove
or
push
out
outsl
pop
adc
daa
sbb
pop
movl
mov
stc
loopne
sub
pop
adc
xor
xchg
lods
mov
or
adc
lret
loope
jb
push
ficomps
xor
hlt
mov
addr16
mov
or
fs
push
cli
orl
popa
lods
idivl
and
adc
test
fcom
xor
jno
mov
dec
shll
stc
or
xchg
leave
jg
lods
aam
pop
pop
inc
jp
or
jbe
popa
xchg
shr
sub
cmp
sbb
adc
cld
das
lahf
ljmp
hlt
bound
incl
or
adc
insl
push
sahf
push
and
pop
aas
int
imul
push
pop
pusha
sub
add
sahf
stos
sub
mov
inc
mov
cmp
decl
lods
push
movsl
cmp
fimuls
and
or
push
lods
sub
mov
lret
add
pop
adc
rolb
or
dec
xchg
outsl
jo
pop
adc
mov
imull
and
jno
adc
out
add
mov
adc
pop
sti
mov
addl
adc
fbld
adc
add
push
ljmp
inc
mov
mov
inc
xchg
jg
je
adc
lods
cmc
leave
mov
sbb
mov
pusha
arpl
mov
sbbb
adc
dec
mov
dec
test
mov
je
adc
push
pop
inc
fsubrl
fsubrl
jne
adc
insl
movsl
ds
in
lods
in
or
xor
inc
jne
adc
gs
les
xor
imul
clc
cwtl
jne
adc
into
ds
in
inc
repnz
pop
ljmp
jne
adc
mov
iret
cmp
push
das
shlb
jbe
adc
loope
stos
movsb
sahf
jmp
mov
cmp
adc
sti
cmc
cwtl
data16
and
and
jecxz
push
lods
pop
cwtl
jbe
adc
or
repz
aam
loopne
pop
add
dec
xchg
les
adc
ljmp
jns
mov
jecxz
shrb
xor
xchg
and
pop
stc
lods
pop
mov
in
push
aaa
sub
ja
adc
jl
hlt
ljmp
scas
bound
push
es
cmpsb
insl
enter
leave
jecxz
cmp
pop
adc
push
rcl
adc
pop
aas
push
dec
xchg
pop
in
dec
xor
les
rcr
decb
test
and
and
inc
sbb
sub
mov
lea
and
sarb
adc
xor
or
in
dec
pop
rol
imul
or
cld
cmc
cwtl
data16
and
and
pop
inc
mov
pop
adc
pop
adc
jg
in
std
jo
std
dec
cmpsl
push
movsb
out
xor
push
insb
jns
adc
adc
js
fdivrl
adc
scas
clc
test
jecxz
jns
adc
faddp
mov
fwait
test
imul
pop
std
repz
and
xchg
sub
ret
shr
fwait
movsb
xor
int
aam
std
cli
jecxz
shrl
and
xchg
sub
arpl
mov
imul
cld
sti
hlt
std
ds
push
movsl
cmove
adc
in
sub
jmp
je
sbb
adc
ds
call
testb
cmpl
xchg
jp
adc
idivb
jmp
and
inc
xchg
and
sarb
dec
inc
dec
ret
dec
adc
jne
inc
mov
in
dec
loopne
sahf
cs
aam
lahf
and
xchg
mov
and
mov
pushf
xchg
jmp
xor
dec
cmpb
scas
lods
jno
loop
jnp
adc
mov
jb
popa
enter
or
xorl
addr16
sub
movsb
mov
pop
ret
fnsave
insl
mov
push
jnp
adc
add
ficomps
out
dec
inc
aas
nop
or
jbe
adc
ljmp
push
dec
int3
pop
xor
jnp
adc
fsub
out
in
les
inc
xlat
gs
sbb
sub
lock
jg
mov
pop
sub
jl
or
dec
push
sub
xor
cmpsb
leave
pusha
pop
loope
mov
xchg
adc
cld
mov
decb
fsubrl
and
xchg
xor
je
push
fildll
jnp
mov
xchg
mov
mov
mov
out
xlat
fsub
loopne
shrl
xchg
push
cmp
sub
dec
jmp
inc
jnp
mov
sti
repnz
mov
xor
nop
and
loopne
push
stos
pop
mov
dec
adc
jno
out
adc
in
xchg
jl
adc
sub
dec
mov
mov
pop
adc
decb
loop
xchg
ljmp
mov
daa
cmp
inc
aas
ds
mov
pop
adc
or
or
int
mov
aad
imul
xchg
int3
mov
stos
sbb
out
lea
add
iret
push
std
cld
bound
sub
cmp
and
push
cmp
daa
cmp
fdivrs
stos
aad
pop
lahf
pop
sbb
push
movsb
xchg
lock
xchg
add
arpl
icebp
cmc
dec
fcomi
mov
dec
dec
mov
adc
inc
lods
mov
sti
and
data16
jno
je
lcall
jle
or
push
adc
mov
stos
shlb
jecxz
dec
outsl
fildll
mov
inc
mov
and
loopne
dec
xchg
sub
aad
arpl
test
mov
ret
mov
test
fidivs
test
test
std
cli
jecxz
cli
stos
push
cmp
and
mov
pop
lea
or
cmc
cld
movsl
pusha
push
movsb
cmp
iret
dec
xchg
and
lods
sub
clc
lea
and
nop
mov
sti
cmc
ljmp
push
mov
fcompl
ret
adc
fnsave
hlt
ljmp
arpl
jge
adc
ret
adc
sbb
jns
xor
mov
mov
push
sti
mov
push
fsubrp
divb
xchg
jg
jmp
in
aam
and
dec
xchg
and
sub
dec
xchg
pop
in
dec
ljmp
pop
adc
into
cld
cli
xchg
pop
imul
sub
dec
nop
test
inc
leave
cmp
stc
decb
mov
mov
add
push
lods
sub
loopne
lea
and
mov
in
pop
loope
test
adc
adc
mov
faddp
lea
pop
adc
into
cld
cli
mov
jg
adc
out
inc
jmp
jnp
lret
mov
loopne
cld
mov
inc
or
and
aaa
stos
fldl
xchg
mov
mov
push
dec
push
ds
and
mov
inc
outsb
jnp
es
nop
dec
xchg
sub
aam
popa
mov
mov
mov
stc
clc
lea
movl
inc
xchg
cs
fcmovnu
mov
ret
xchg
xor
movl
jmp
fdiv
mov
adc
pop
adc
push
leave
aam
popa
and
jmp
push
mov
hlt
xorb
xchg
cmpl
or
mov
fisubs
cmpl
insb
les
or
xor
jne
and
test
movsl
or
addl
cs
jmp
xchg
lahf
xor
sbb
and
jnp
jbe
div
mov
mov
addl
dec
je
js
in
call
rolb
int3
pop
xor
addb
test
fsubs
mov
fs
push
or
imul
and
and
mov
cmp
or
push
mov
es
pusha
push
adc
fadds
cmc
mov
ss
xchg
dec
mov
push
xlat
cmp
mov
arpl
mov
out
fidivrs
loopne
in
push
sar
xchg
es
and
rcrl
jbe
mov
fcmove
scas
repnz
cli
mov
scas
nop
mov
and
addb
inc
cwtl
insl
mov
mov
ds
loopne
mov
mov
addb
repnz
xchg
pop
stos
xor
adc
bound
adc
mov
mov
imul
enter
adc
addl
das
cmp
test
adc
cmc
cmc
test
test
iret
rcrb
cmpsl
sbb
scas
sbb
pusha
into
push
test
adc
popf
into
paddw
pushf
mov
test
adc
dec
addr16
sub
insl
mov
sub
push
pop
mov
jne
test
mov
push
sarl
or
xchg
cmp
imul
cwtl
jg
adc
fmull
xor
push
lock
adc
push
in
inc
test
adc
out
add
jge
or
jp
push
rolb
test
adc
xchg
hlt
orb
dec
icebp
add
push
movsb
push
cwtl
test
adc
cmpsb
sub
ljmp
sbb
add
adc
jb
in
aam
les
mov
pop
mov
stc
test
imul
pop
dec
sbb
push
clc
lcall
rorb
imul
mov
popf
pop
je
cmp
pop
je
addr16
leave
scas
inc
std
decb
ds
dec
inc
xchg
and
and
xor
push
test
enter
fst
roll
add
push
jecxz
xchg
adc
es
mov
rcrl
sbb
ret
mov
ret
movsl
dec
xchg
scas
pop
xchg
scas
pop
addb
pop
pop
cld
xchg
adc
mov
mov
add
dec
loopne
in
xchg
sub
pop
jg
ljmp
jns
mov
jecxz
fldt
and
xchg
xor
lcall
lea
or
cli
in
aam
push
xchg
adc
add
pop
loope
pop
mov
loopne
sbb
sbb
jmp
cmp
aam
loopne
pop
and
dec
xchg
push
clc
sarb
pop
mov
sbb
outsl
leave
jl
stc
decb
test
and
and
pop
inc
and
lods
pop
movsb
xchg
adc
pop
fistpll
sti
hlt
std
aad
push
movsl
cmp
push
pop
pusha
sub
sub
fimuls
dec
mov
imul
stc
clc
test
pop
mov
dec
nop
push
cmp
push
scas
dec
adc
or
cltd
push
sti
clc
jne
clc
loopne
push
mov
cwtl
and
cmp
sub
and
mov
adc
xorl
into
movsl
pop
jmp
mov
jne
and
adc
lods
xor
leave
mov
test
push
cwtl
push
ds
imull
inc
mov
fwait
in
or
pop
xchg
push
nop
test
pop
adc
mov
sub
pop
adc
sub
ret
jae
dec
addr16
mov
adc
lock
or
sbb
fldl2e
mov
xor
inc
aam
add
pop
adc
pop
adc
pusha
pop
test
inc
aaa
shll
out
clc
arpl
fildl
clc
test
stos
mov
out
push
repnz
bound
mov
push
ljmp
cmpsl
jmp
push
adc
cld
adc
xor
ds
and
mov
pop
adc
xor
orb
pop
xor
lods
push
add
pop
adc
into
pop
fnstsw
idiv
outsb
call
and
ret
xchg
pop
daa
mov
aam
ss
stc
cli
jmp
cmp
pop
xchg
and
push
pop
xchg
sub
rcll
add
icebp
repz
in
outsb
lret
mov
pop
adc
sub
jns
icebp
fsts
mov
ss
mov
lahf
ds
cld
mov
inc
ljmp
roll
ret
cli
les
stos
sbb
xchg
pusha
sti
sub
std
imul
fimuls
cld
jmp
lcall
es
or
fmulp
rcll
adc
insb
outsl
mov
or
nop
inc
stos
jb
fstpt
scas
pop
mov
scas
or
jp,pt
mov
adc
push
mov
cmp
xchg
push
sub
mov
pop
popf
mov
in
jo
cmp
xor
adc
shlb
pop
adc
aas
out
xor
xor
adc
mov
dec
repnz
pop
ret
mov
out
sbb
sbbl
repz
imul
daa
mov
xorb
mov
pop
pop
pop
movb
and
repnz
jo
std
test
out
scas
arpl
mov
adc
fwait
das
cmp
lock
jecxz
scas
push
sar
popf
pop
ja
xor
ljmp
nop
leave
pop
insl
stc
std
jo
std
and
scas
and
xor
fs
rcrl
sbb
je
in
cli
aad
hlt
cwtl
push
jl
pop
adc
test
mov
aaa
sbb
add
dec
jmp
out
aam
loopne
xor
ss
xchg
pop
in
es
sbb
jb
and
int3
mov
pop
adc
rcll
aaa
dec
sbb
pop
sbb
pop
pop
adcl
mov
mov
aam
inc
ja
xchg
and
xor
pop
adc
pop
je
or
cmp
pop
adc
scas
in
test
movsb
ret
gs
mov
adc
adc
aad
outsl
lods
or
sti
cmc
lods
mov
clc
sbb
xchg
push
clc
jp
movsb
push
pop
mov
les
xchg
mov
jecxz
push
lods
push
sti
mov
inc
imul
pop
adc
inc
fdivr
test
js
cld
mov
inc
or
and
pop
sub
sbb
pop
adc
push
fdivrl
lock
in
call
xchg
pop
mov
iret
inc
popl
adc
dec
loopne
mov
push
aaa
fidivs
aad
das
daa
sbb
pop
push
xchg
mov
add
mov
or
xchg
mov
popl
adc
dec
cmpsb
and
mov
fidivrl
sbb
int
sub
popl
adc
mov
pop
adc
xor
btr
cmc
faddl
xchg
or
pop
adc
mov
je
pop
js
aaa
or
pop
adc
push
mov
pop
sbb
mov
pop
adc
sti
je
mov
sub
xchg
pop
or
fsts
ficompl
pop
nop
pop
adc
lret
add
xor
or
fildl
xchg
test
scas
mov
rcll
iret
xor
gs
int3
push
in
sbb
mov
mov
pop
adc
inc
jnp
push
out
les
fcoml
mov
dec
rcl
xor
add
nop
pop
adc
arpl
cld
jno
jmp
cmpsl
inc
lds
out
xor
pop
adc
pop
mov
dec
lret
cli
std
mov
mov
pusha
js
pop
adc
cmc
enter
es
mov
jmp
clc
aad
adc
adc
sbb
and
pop
mov
xlat
jmp
pop
out
out
sti
xchg
test
pop
stos
inc
mov
mov
push
leave
xchg
jne
push
aad
shl
loop
lods
xchg
pop
adc
jg
xchg
pop
adc
ljmp
fldl
mov
test
jle
and
pusha
std
jmp
or
push
vprotq
adc
xchg
out
hlt
out
add
xchg
pop
adc
dec
in
imul
test
js
ds
in
outsl
les
enter
pop
add
scas
pop
or
sti
xor
data16
jb
xchg
in
and
inc
adc
adc
sbb
dec
xchg
pop
adc
push
sub
fists
adc
and
inc
lea
cwtl
leave
fsubrl
decb
mov
maxps
xor
mov
icebp
mov
aaa
sbb
add
add
aam
loopne
xor
xor
int3
xchg
pop
adc
mov
aaa
outsl
push
dec
jg
icebp
ljmp
cwtl
push
lock
pop
adc
and
ljmp
sub
shl
xchg
fs
pop
adc
call
and
lea
pop
adc
xchg
mov
arpl
adc
ret
shll
adcb
aad
es
inc
out
sbb
sub
push
push
int
sub
lret
int
add
jecxz
and
pop
adc
push
push
cmpsl
addr16
jo
xchg
pop
adc
inc
sti
cmc
cwtl
cmpsb
add
dec
test
nop
and
lods
pop
cmpsl
aas
rorl
pop
adc
faddp
sti
cmc
cwtl
cmpsb
add
dec
test
out
push
lods
pop
cmpsl
pop
rorl
pop
adc
mov
cmpsb
ljmp
nop
and
lods
pop
cmpsl
call
mov
inc
sbb
call
cmpsb
fcomi
movsb
dec
xchg
xor
and
pop
lcall
jmp
loop
aam
and
dec
xchg
and
inc
xor
test
mov
ss
aad
push
cwtl
stc
sti
mov
cwtl
pop
adc
out
inc
call
cmpsl
fs
sti
stos
cmp
jecxz
imul
stc
clc
sbbl
outsb
sbb
mov
cwtl
pop
adc
cld
lods
cmp
cli
sarl
mov
push
cwtl
pop
jno
cmp
cmp
jno
insl
add
hlt
addl
loopne
dec
jb
cltd
cs
sub
cmp
mov
mov
pop
inc
push
mov
test
push
cwtl
pusha
xchg
sub
dec
push
pushf
inc
mov
fmull
out
xchg
push
mov
or
popa
into
mov
stos
push
jmp
jo
stc
loope
jne
sub
pop
movsl
flds
ret
int
and
insl
sahf
push
and
test
dec
stc
ret
pop
push
movb
cmp
jnp
and
repnz
adc
data16
fmuls
adc
fwait
mov
psrld
mov
push
icebp
push
xor
lea
int
imul
push
pop
pusha
inc
filds
mov
cltd
pop
adc
or
loop
test
js
cmpsl
js
lea
loop
int3
scas
push
loop
cltd
pop
adc
and
fimuls
stos
cmp
sti
mov
inc
scas
je
daa
or
ds
xchg
pop
mov
ja
or
mov
clc
std
repnz
jb
push
mov
xchg
and
xor
sub
adc
jno
test
pop
adc
lahf
cltd
pop
stos
xor
sub
xor
and
and
xchg
imulb
jae
adc
cmc
cs
jmp
sbb
cld
sahf
push
mov
pop
pop
pop
stos
jg
mov
cld
rol
lds
jl
dec
stos
sbb
sbb
xor
xchg
daa
dec
fwait
pop
adc
and
lcall
xchg
jo
pop
adc
sti
add
pop
es
cmp
cltd
mov
aas
stc
cmp
pop
enter
and
jbe
fs
mov
lret
ret
inc
nop
ds
sub
add
xor
inc
xchg
push
in
dec
pushf
pop
adc
fs
cltd
jno
mov
div
pop
aas
mov
arpl
sub
push
jnp
mov
push
cmpsb
lret
pushf
pop
adc
cmc
jns
sbb
ror
orb
jnp
fdivs
xchg
sub
insb
mov
icebp
mov
aaa
sub
popf
pop
adc
mov
sbb
pop
daa
dec
loopne
popa
and
lods
pop
divb
loopne
jg
dec
repnz
test
push
test
push
popf
pop
adc
pop
lea
pusha
leave
xor
test
fwait
dec
xchg
arpl
popf
pop
adc
icebp
and
jle
mov
mov
aaa
mov
push
sti
popf
pop
je
cmp
pop
je
addr16
leave
out
and
mov
mov
push
sti
test
cmp
pop
mov
je
or
push
decb
jp
mov
and
ss
addb
mov
mov
or
push
inc
test
mov
inc
lods
or
pop
fildl
pop
lods
sahf
pop
adc
or
sahf
jmp
fneni(8087
mov
movsl
popa
dec
xchg
fcomps
icebp
lret
pop
adc
mov
ret
mov
pop
adc
push
lods
sub
sub
adc
xor
or
cld
cmc
cwtl
cmpsb
cmp
dec
test
or
pop
adc
and
lea
pusha
leave
sbb
mov
mov
push
sti
xorl
fsubr
mov
jne
mov
or
pop
adc
in
and
mov
enter
adc
mov
sarb
inc
in
sbb
pop
ror
hlt
and
jl
cmpsb
jl
rcll
mov
push
cwtl
pop
jno
cmp
pop
mov
int3
mov
cmc
je
xchg
jmp
scas
leave
mov
sbb
sbb
mov
dec
and
andb
inc
mov
xchg
jo
pop
adc
movsb
mov
inc
push
adc
lea
pop
adc
fabs
fadd
pop
fadds
adc
divb
popa
push
adc
rcr
adc
test
sbb
pop
adc
adc
scas
test
xchg
inc
jno
adc
sbb
pop
adc
pop
adc
push
push
lods
flds
adc
pop
mov
test
mov
flds
adc
and
flds
adc
cmp
call
push
adc
flds
rcr
adc
add
popa
push
adc
sbb
sub
dec
popa
push
adc
add
lcall
cmp
jp
cld
movsl
mov
js
flds
adc
pop
adc
stos
out
mov
faddl
adc
stos
fwait
js
pop
adc
adc
pushf
faddl
adc
inc
and
inc
jno
adc
lahf
fnstenv
push
adc
or
push
adc
jge
mov
push
int3
mov
faddl
adc
mov
mov
insb
mov
scas
test
fadd
dec
inc
jno
adc
jb
fwait
popa
push
adc
in
mov
and
inc
jno
adc
out
in
pop
rol
pop
adc
es
sbb
or
fiadds
adc
aaa
lock
adc
mov
sub
clc
fiadds
adc
cmp
or
pop
adc
mov
jmp
mov
push
adc
mov
jne
jnp
cwtl
inc
jno
adc
cld
push
or
sbb
pusha
pop
or
push
lods
outsb
bound
adc
das
outsb
sub
jb
jno
adc
mov
call
jge
sbb
push
adc
adc
push
cltd
movsb
push
or
ljmp
bound
adc
inc
cmpsl
and
xor
lcall
inc
jno
adc
adc
or
mov
pop
or
mov
add
dec
add
inc
cwtl
insl
mov
pusha
mov
or
jo
jg
inc
jno
adc
jne
adc
or
pop
add
inc
bound
adc
pop
fidivrs
push
pop
inc
aam
inc
jno
adc
pop
or
test
adc
sbb
clc
bound
adc
jg
hlt
ljmp
mov
inc
jno
adc
dec
pop
or
cli
sbb
push
adc
pop
leave
jge
bound
adc
adc
xorl
popa
push
adc
xchg
push
dec
shll
adc
cmp
jmp
movd
loop
push
adc
lock
iret
icebp
popa
push
adc
pop
fidivrs
bound
adc
dec
movsl
dec
xor
fimuls
bound
adc
cli
sbb
or
std
pop
leave
lods
rcrb
or
pop
pop
cltd
dec
xchg
mov
bound
adc
sub
aaa
movsl
mov
pop
adc
icebp
int3
hlt
ljmp
sbb
mov
pop
adc
outsb
mov
pusha
shl
pop
or
xorl
add
push
adc
sbb
andb
dec
out
lea
movb
ljmp
add
or
jne
out
add
pop
adc
sub
and
adc
xor
ret
movsb
dec
xor
adc
pop
adc
or
xor
jnp
adc
or
frstpm(287
cwtl
arpl
nop
bound
adc
repnz
sbb
and
adc
xor
bound
adc
sub
lods
push
pop
jo
pop
and
adc
js
test
adc
out
aam
ror
hlt
sbb
xor
bound
adc
mov
in
push
adc
test
or
sbb
adc
rcrb
daa
andb
adc
mov
or
push
sbb
adc
mov
jae
fwait
dec
and
adc
sub
imul
push
adc
out
cltd
lods
stos
add
adc
inc
push
ret
jne
in
bound
adc
mov
xchg
sub
bound
adc
insl
push
dec
shlb
jp
jo
pop
adc
cmp
flds
adc
shlb
arpl
dec
pop
adc
out
repz
push
pop
rcl
pop
adc
push
jnp
cmp
flds
adc
or
int3
adc
xchg
mov
pop
adc
xadd
mov
test
pop
adc
cmpsb
imulb
faddl
adc
mov
jmp
faddl
adc
loop
push
or
or
fisubs
jbe
push
adc
test
inc
in
push
mov
les
jbe
dec
test
or
inc
movl
pop
adc
dec
stc
mov
mov
pop
adc
jne
insl
hlt
add
mov
pop
adc
sub
fildl
jo
sbb
pop
adc
xchg
cmp
push
or
inc
push
rcrb
adc
push
pop
cwtl
jno
and
or
shrb
or
jge
fldt
or
xchg
push
xor
and
hlt
push
lods
out
pusha
add
or
mov
jns
push
or
or
orl
punpcklbw
or
rorb
stos
xor
or
inc
cltd
out
sub
daa
pop
mov
adc
sbb
push
adc
cmpsl
repz
test
pop
add
arpl
or
and
adc
xchg
adc
nop
andb
adc
inc
outsl
out
mov
or
clc
icebp
push
adc
adc
push
xchg
insl
pop
and
adc
test
or
call
xchg
shlb
or
test
push
xchg
and
adc
sub
.byte
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
nop
nop
pop
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
ret
xchg
xchg
xchg
nop
nop
mov
nop
nop
popl
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
add
pop
scas
add
sbb
rolb
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
nop
nop
subl
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
and
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
movzwl
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
cltd
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
div
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
ror
xchg
xchg
xchg
nop
nop
mov
nop
nop
inc
xchg
xchg
xchg
nop
nop
mov
nop
nop
cmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
jl
xchg
xchg
xchg
nop
nop
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
nop
nop
pop
xchg
xchg
xchg
nop
nop
mov
nop
nop
test
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
dec
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
dec
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
ror
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
cmpw
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
sub
xchg
xchg
xchg
nop
nop
mov
nop
nop
and
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
cmpw
xchg
xchg
xchg
nop
nop
mov
nop
nop
jne
xchg
xchg
xchg
nop
nop
mov
nop
nop
and
xchg
xchg
xchg
nop
nop
mov
nop
nop
pop
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
add
lods
mov
add
cld
stos
inc
nop
push
ds
test
jnp
jb
pop
jmp
les
lcall
sahf
cmpsl
push
inc
lods
and
icebp
inc
xchg
inc
add
dec
es
rcll
pop
sub
lret
add
push
fsubrs
stc
inc
loope
mov
sbb
inc
fwait
push
sub
shlb
mov
nop
push
xor
inc
in
mov
inc
mov
je
or
push
fstl
jecxz,pn
sbb
pop
xor
xchg
push
aas
mov
adc
lahf
sahf
orb
xchg
jb
and
int
imul
pop
push
add
call
int
out
mov
ljmp
cmp
ds
cltd
jecxz
aaa
shrb
or
outsb
in
add
cmpsl
pop
sbb
push
imul
pop
sti
mov
stos
jae
je
lds
xchg
test
xchg
push
fildl
adc
repz
das
mov
jl
lods
add
popf
dec
and
cmp
push
dec
and
fisttpl
push
dec
jo
data16
sbb
pop
scas
in
dec
mov
push
es
mov
rcr
clc
sbb
add
aam
test
sub
add
int3
test
mov
cs
mov
lds
aad
or
rclb
cltd
sahf
aad
aam
subb
mov
ficoms
mov
stc
out
scas
inc
or
fldenv
out
mov
fnstenv
scas
add
in
push
mov
add
scas
jmp
mov
repz
es
mov
fdivr
push
pop
test
aam
test
das
sbb
stos
loop
add
xor
sbb
outsl
xchg
add
les
pop
add
mov
inc
lds
lahf
das
adc
dec
inc
in
push
pushf
mov
mov
cs
sub
pop
push
in
or
push
or
aam
repz
fcoml
add
sub
xor
int
je
and
inc
jl
add
addr16
call
sbbl
out
xchg
test
inc
xchg
shlb
imul
jmp
mov
cli
out
add
push
adc
dec
cmpsb
outsb
add
jb
pop
add
mov
xchg
add
add
andb
mov
mov
add
aad
dec
pushf
insl
sub
or
sahf
insl
or
inc
pushf
fdivrs
mov
in
push
test
push
add
sbb
movsb
cmpsl
mov
mov
test
jecxz
cltd
arpl
inc
xchg
ss
adcl
cmp
adc
add
lcall
sarl
push
or
insl
sub
pop
adc
mov
enter
mov
mov
stc
lock
cmp
push
in
rolb
loop
lret
js
out
and
push
or
mov
inc
cmpl
scas
inc
dec
insl
sahf
loope
fs
push
fildl
add
repz
cmp
adc
in
mov
pop
nop
push
push
dec
jo
aad
in
mov
jge
xchg
add
mov
inc
sub
sub
and
cs
mov
or
aam
mov
mov
add
or
mov
mov
rolb
leave
and
mov
add
es
leave
je
lahf
pop
xchg
fistl
loop
loope
fcomps
add
add
mov
mov
sahf
push
and
lcall
fcomps
mov
push
adc
mov
aas
push
int3
mov
out
sub
ds
push
mov
ficoml
imul
sub
out
nop
push
insl
mov
sub
inc
fsubp
call
imul
lret
xlat
imul
pop
sti
lods
jno
push
mov
lret
rcr
dec
insl
sub
das
call
add
daa
repnz
mov
xor
push
fsubs
sub
js
out
cmp
push
icebp
cltd
push
inc
adcl
andl
insl
add
jo
push
mov
cs
pop
cmpsl
mov
gs
ja
fcoms
ret
insl
xchg
pop
ljmp
dec
adc
fldl
cmpsl
mov
addr16
sub
sub
daa
inc
xor
inc
xor
sub
or
mov
sub
mov
adc
cli
enter
es
mov
jge
jge
jl
xchg
push
imul
cmpsl
aam
push
pusha
mov
mov
aad
lret
stc
aas
sbb
nop
push
jle
popa
add
js
push
dec
cmp
or
das
mov
lds
mov
loop
aam
dec
push
inc
and
mov
and
das
mov
jmp
cmpsl
sub
mov
push
aam
das
scas
insl
add
test
mov
add
std
mov
sub
dec
mov
and
mov
jb
es
xorl
sub
stos
mov
add
test
jecxz
mov
sub
add
pusha
repz
nop
push
fisttpl
inc
in
std
mov
inc
sbb
pushf
ficoml
mov
mov
loop
and
lea
add
je
pop
mov
cmpsb
push
jge
ljmp
sahf
lcall
cmp
or
clc
xchg
mov
pop
add
push
pop
xchg
test
inc
pusha
push
lret
test
dec
mov
push
lahf
mov
loope
repz
jnp
push
dec
pop
and
in
pushf
mov
dec
xor
arpl
dec
insl
fdivl
push
sub
outsl
push
insl
add
or
ds
sub
adc
mov
cmpsb
add
xlat
push
rorb
lods
mov
ss
pop
loop
dec
xchg
loop
lret
js
push
dec
cmp
or
das
mov
lds
mov
loop
aam
dec
push
inc
and
mov
and
das
mov
mov
push
aad
dec
in
int3
pop
mov
and
lret
sbb
aaa
sub
cmc
jno
mov
lds
mov
repz
test
mov
add
je
push
sar
mov
push
and
lcall
lods
xor
inc
sub
std
sbb
xor
jl
dec
push
add
cmpsb
test
xor
in
mov
mov
inc
addb
dec
jl
push
nop
lds
jmp
in
mov
lret
mov
aam
cmc
adc
dec
push
jmp
push
sar
arpl
pushf
movsl
fbld
aaa
push
dec
add
stos
inc
pop
mov
mov
leave
or
lcall
out
and
cld
or
adcb
leave
sbb
ljmp
xchg
cli
in
mov
or
add
ss
push
es
ljmp
pop
aad
cltd
ss
stc
clc
sub
jo
test
add
shrl
sub
jbe
insl
xchg
mov
jne
adc
xor
add
adc
sbb
sub
xor
xchg
movsb
add
cmp
test
fistps
xchg
push
in
in
mov
movsb
mov
and
xchg
shr
lods
fildl
leave
pop
repz
jb
insl
bsf
outsb
ror
mov
nop
push
out
pop
and
mul
mov
xchg
push
pushl
sub
int3
pusha
repz
std
mov
sub
jmp
lea
xbegin
lahf
fcomps
aaa
push
xchg
xchg
movsb
mov
and
outsb
mov
pop
or
mov
pop
aam
das
lret
mov
push
scas
or
popa
ljmp
bound
nop
push
insl
repnz
and
sub
dec
test
lds
xchg
ljmp
and
mov
adc
mov
fdivrs
mov
stos
ljmp
jecxz
popa
mov
push
add
inc
and
jl
shl
mov
aam
sub
in
lods
and
nop
cmpsb
fcmove
or
rolb
inc
adc
insl
sahf
add
sub
mov
sbbl
push
rorb
mov
add
dec
insb
popf
movsl
les
outsl
pop
insl
subb
mov
negl
sub
arpl
mov
outsl
shlb
aaa
push
xchg
add
jo
pop
mov
push
orb
lds
adc
sbb
inc
or
ficoms
dec
push
mov
add
and
xchg
outsl
lods
in
test
std
outsl
xchg
mov
aaa
lcall
pop
lahf
lret
inc
dec
insl
adc
sbb
andb
lret
dec
pop
add
inc
pop
or
xchg
test
stos
and
ljmp
call
or
mov
adc
lahf
cmpsb
inc
cmpsb
jb
or
xchg
push
dec
pusha
inc
mov
xchg
clc
insl
sub
xchg
push
outsb
mov
and
addl
mov
decb
xor
jg
and
ljmp
aaa
les
mov
dec
or
push
in
shlb
lds
sbb
xchg
aam
ljmp
jno
insl
add
daa
mov
lcall
aam
cmpsl
mov
add
cmp
hlt
gs
leave
repz
push
add
ficompl
pop
pop
sti
lret
ret
cli
ljmp
scas
mov
dec
std
sbb
aaa
lcall
dec
cmp
add
push
mov
push
inc
sub
adc
les
lcall
cmp
sub
out
push
adc
jle
cs
sbb
xor
mov
loopne
lret
movsb
pop
inc
dec
lcall
push
xchg
add
pop
xor
xchg
movsb
mov
stc
push
inc
pop
xchg
adcl
fisttpl
adc
push
dec
std
outsl
push
add
lea
rcl
arpl
sahf
movsl
testl
pop
call
and
push
addb
add
enter
fistps
push
pusha
xchg
xor
add
lcall
adc
lea
xor
xchg
xor
sub
ja
mov
mov
add
push
shr
arpl
pushf
movsl
lret
and
outsl
jmp
add
jmp
pop
cld
lea
xchg
xchg
adc
std
xchg
pop
stos
mov
adc
cmpsb
fildl
push
jbe
idivl
pop
add
rorb
aad
or
sub
and
ljmp
xchg
cli
sbb
jno
ss
movsb
cmp
sahf
or
cltd
sub
stos
aas
cwtl
push
sub
repnz
sub
add
lods
test
aad
jb
insl
sub
lret
repnz
pop
push
xchg
lcall
pop
fiadds
xchg
push
mov
and
push
lock
dec
lods
and
pop
fs
sbb
les
dec
cs
mov
mov
nop
fcomps
aas
push
xchg
mov
cmc
lea
push
call
pop
or
xchg
aam
jmp
add
outsl
push
out
mov
in
sbb
aad
mov
xchg
sub
cmp
cmc
lahf
in
xchg
cmpsl
ret
add
lea
mov
dec
int
or
shrb
les
dec
decb
inc
push
jg
push
xchg
or
xchg
aam
data16
add
and
shrb
out
sbb
dec
es
cwtl
sbb
xor
cmp
cmc
adc
mov
inc
std
sbb
fiadds
dec
push
mov
xchg
sub
mov
movsl
out
cmc
outsl
fsubs
std
sbb
push
pushl
and
loop
pop
pop
ret
fisttpl
jle
sub
sbb
xor
push
popfw
test
push
jg
xor
inc
dec
insl
and
and
ljmp
lock
aam
xchg
popf
movsb
mov
in
arpl
cmpsb
jl
dec
ljmp
out
cmp
mov
decb
lahf
cmpsb
or
mov
shlb
cmp
push
dec
mov
sub
sbbb
xlat
pop
dec
loope
fcomps
aas
push
xchg
orl
cltd
ja
and
outsb
shlb
or
push
sub
sub
pop
aam
out
addr16
es
jl
pop
or
movsl
add
stos
ja
and
adc
enter
insl
ljmp
lea
lss
ja
xchg
test
dec
aas
nop
adc
cmc
adc
pop
repnz
push
mov
negb
in
mov
mov
je
xchg
sbb
stos
and
dec
sub
popf
dec
jle
lcall
fisubl
out
lcall
test
lcall
cmp
sub
and
fdivrl
movsb
and
stos
loope
jbe
pop
repz
enter
add
test
ret
xchg
add
and
push
pop
inc
mov
lods
imul
loop
cmp
lods
and
inc
test
mov
lcall
dec
cmp
sub
stos
loop
xchg
push
push
push
dec
sub
adc
les
lcall
cmp
sub
xchg
push
adc
icebp
push
xchg
cli
and
dec
std
sbb
out
test
add
xlat
cmp
mov
adc
insb
lods
xchg
xchg
pop
add
call
adc
mov
fbld
lods
and
enter
popa
cld
inc
decb
xor
lds
aam
cmpsl
cmp
cmc
inc
loope
xchg
out
test
inc
movhps
ja
xchg
test
cmpsb
aas
nop
cmp
repnz
sub
add
sub
into
and
scas
mov
cmpsb
sbb
lods
call
cmp
aam
divl
inc
mov
add
inc
ficompl
nop
push
push
nop
loopne
xchg
std
out
aas
mov
movsb
xor
inc
dec
insl
mov
fadds
pop
jo
sub
cld
pop
xor
test
pop
jmp
push
orb
lret
and
lret
call
mov
mov
lea
sub
mov
fildll
sbb
xchg
andb
testb
ret
mov
aam
add
sub
mov
cmc
outsl
and
out
fldenv
call
xorb
push
jg
jle
add
sub
icebp
sbb
aaa
int
dec
insl
add
jle
movsb
mov
mov
enter
jae
sysexit
and
std
popa
and
add
sub
jmp
fiadds
rcr
filds
int
adc
pop
and
out
out
cmp
sbb
xchg
popa
insb
mov
push
pop
lahf
lret
inc
lret
jge
fistps
xchg
popa
ret
or
test
lret
dec
pop
add
inc
pop
or
fisubl
stos
and
loop
and
add
iret
push
inc
mov
adc
lahf
mov
or
xchg
push
dec
jl
mov
xchg
popf
movsb
stc
cmp
rcll
adc
lds
dec
std
in
pop
add
inc
test
leave
lret
jns
fistps
mov
movsb
and
int3
cmpsb
out
mov
aam
mov
sahf
pop
test
inc
push
jg
xchg
cmpsb
shrl
mov
pop
cmpsl
mov
gs
sarl
ficompl
pushf
pop
loope
xor
mov
inc
cltd
inc
add
lods
decb
and
mov
aas
sub
cli
inc
mov
les
inc
mov
jecxz
loopne
enter
int
add
sub
out
mov
les
add
jb
mov
dec
push
or
cli
mov
and
xor
inc
push
xchg
cli
outsl
push
sahf
cmc
lea
push
lcall
dec
fdivrl
movsb
and
sbb
dec
loopne
sub
repnz
inc
cmp
sbb
dec
repnz
push
lea
fcmovnu
push
xchg
push
mov
enter
mov
sbb
outsl
lods
and
mul
push
dec
testl
pop
scas
mov
xchg
test
cmpsl
ret
and
aaa
push
out
adc
incb
stc
jmp
add
mov
lds
ljmp
xchg
repz
sub
addr16
out
jge
popa
pop
cmp
ffree
and
data16
ds
and
fwait
cli
aaa
and
mov
jb
insb
jmp
adc
xchg
das
sub
cli
data16
and
and
dec
icebp
xlat
stos
test
lods
sbb
inc
dec
stos
scas
int3
push
dec
ljmp
test
jecxz
in
lock
add
fnstsw
fcomps
sbb
add
push
lock
and
and
ret
mov
dec
xchg
enter
js
xchg
cli
dec
adc
hlt
sbb
pop
ja
loope
lock
pop
dec
or
sub
mov
push
pop
fcompl
das
repz
push
out
add
incb
jae
insb
imul
mov
popa
fimull
ds
xchg
out
jmp
xor
test
and
js
test
mov
dec
adc
jl
test
inc
cltd
pop
roll
pop
inc
mov
mov
or
sub
mov
sbb
or
pop
add
shll
aam
add
xchg
and
inc
in
popf
daa
sbb
mov
jge
xchg
rcl
mov
lods
popl
xchg
jno
fisttpl
enter
xlat
add
xchg
pushf
movsb
or
mov
cmp
adc
sub
ja
mov
ss
add
lea
xor
xor
sub
pushf
inc
xchg
push
add
shll
and
sahf
mov
inc
cmc
outsl
rcrb
add
cmp
hlt
sbb
xor
jge
sub
dec
push
inc
sub
mov
sub
loope
lods
and
mov
insl
or
mov
jb
push
jmp
fnstcw
ffreep
mov
mov
and
pop
push
xchg
mov
inc
sbb
cmp
push
ja
in
cwtl
mov
push
cli
dec
inc
mov
popa
or
decb
dec
test
add
sub
cli
inc
mov
les
popf
jmp
test
scas
enter
cld
gs
daa
loope
mov
push
pusha
or
adc
movsb
sarb
test
leave
and
fildll
cli
enter
mov
loopne,pt
call
sub
stos
cwtl
cmp
cmc
sbb
lea
cmpb
or
adcb
leave
sbb
cmc
outsl
fcoms
mov
inc
decb
mov
inc
xchg
pop
xor
insl
mov
outsl
push
fildl
in
fildl
sar
das
mov
shll
mov
dec
insl
sub
ja
lock
push
xchg
or
test
outsl
out
testl
jb
or
push
dec
pusha
fsubrs
in
imul
pop
mov
mov
or
data16
dec
jl
sahf
in
test
push
lea
sub
test
fistps
sbb
and
cmc
insl
push
data16
lea
sub
push
test
lds
ljmp
xchg
mov
pushf
movsb
icebp
or
and
mov
mov
movsl
jnp
cmc
outsl
push
insl
add
adc
movsb
xorb
test
leave
or
dec
jl
sahf
in
test
or
sahf
in
pop
sbb
testl
sbb
sbb
aaa
push
xchg
outsl
push
jbe
lea
sub
push
test
mov
fcomps
mov
stos
rolb
jnp
jl
push
add
or
xlat
lret
js
pop
xlat
jno
mov
in
stos
mov
pop
inc
pop
pop
or
data16
xor
jne
fwait
std
sbb
rclb
das
mov
shrl
mov
in
int3
dec
pusha
sahf
aad
fmuls
outsl
cltd
or
xor
roll
sub
mov
in
and
sbb
inc
adc
movsb
jb
mov
mov
pop
aam
mov
mov
enter
push
adc
adc
ds
jmp
jecxz
pop
or
arpl
aaa
push
out
shl
and
jl
insb
push
lahf
mov
loope
repz
push
cmp
add
lret
loop
pop
dec
mov
call
lahf
mov
subl
cmp
nop
test
xchg
std
sbb
push
lds
jmp
pop
sub
andl
insl
add
xor
mov
xchg
mov
xchg
popf
and
mov
lods
and
or
dec
stc
das
stos
rcl
es
or
shrb
cmc
adc
out
js
hlt
ret
adc
shrl
mov
in
lods
pusha
repz
and
or
in
popf
and
sub
rcrb
adc
cmp
jle
rcrl
nop
pop
fcmovnb
sti
jns
pop
and
sti
fstpt
push
aam
dec
out
shlb
adc
sub
cmp
add
cmp
pop
out
int3
pop
or
push
aaa
fldt
mov
jno
xchg
push
add
sub
lock
sbb
sbb
lret
jmp
sub
lea
test
sub
jg
sub
lret
lret
jp
fistps
dec
jl
call
mov
pushf
push
mov
cmp
mov
pop
dec
adcl
jl
push
mov
lds
movsb
sub
out
push
adc
dec
pop
fwait
cli
sbb
mov
js
sahf
shlb
lcall
lods
xor
aaa
sub
mov
dec
push
addl
push
loope
les
ret
push
lea
sbb
xchg
aas
lret
sbb
ds
ja
xchg
fcomps
sbb
dec
add
aam
lock
jmp
dec
inc
pop
pop
out
mov
test
cmpsb
aas
nop
and
sbb
mov
pusha
loope
in
clc
pop
mov
shll
xchg
lods
mov
stos
das
cld
outsl
push
out
sub
push
outsl
aas
out
cmp
out
mov
mov
pop
data16
xchg
mov
pop
loope
xchg
push
mov
lret
inc
call
loope
fcomps
ds
xchg
orl
add
and
outsb
rolb
aam
add
or
aaa
xchg
enter
orb
mulb
lds
push
bound
imul
xchg
push
lahf
push
push
loope
sahf
cli
sbb
lea
add
es
pop
mov
push
lahf
mov
loope
repz
push
cmp
xchg
sub
stc
out
scas
test
cs
mov
xchg
aam
cli
dec
ljmp
xor
mov
sub
call
lcall
fcoms
and
add
enter
in
xor
or
sarb
pushf
aad
dec
dec
mov
and
cmp
sub
jne
cmc
and
inc
jb
xor
test
xchg
sub
jno
adc
dec
rclb
fcomip
into
push
sbb
fs
std
std
mov
ljmp
cwtl
xor
add
dec
enter
adc
xchg
pop
dec
inc
add
sbb
sbb
ljmp
out
lods
test
aam
ds
int3
test
rol
dec
mov
xchg
iret
inc
call
cmp
jno
push
xchg
mulb
das
and
or
ror
insb
lret
cmp
push
ret
popf
mov
cld
aas
pop
ss
inc
out
fidivrs
xor
mov
clc
add
push
sub
