push
mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
and
xor
add
adc
arpl
add
arpl
jge
out
mov
xchg
scas
jecxz
repz
ret
out
ret
incb
xor
outsl
adc
arpl
dec
inc
outsb
push
or
scas
xchg
mov
ret
out
sar
fwait
pop
roll
ss
es
adc
jbe
fs
mov
lret
mov
xchg
dec
inc
jg
add
pop
xchg
cltd
lea
in
adc
stos
push
mov
adc
xchg
push
iret
xchg
andl
outsb
dec
rep
into
xchg
fiadds
push
outsl
inc
sbb
scas
add
sub
fstl
add
jne
pop
pusha
and
mov
inc
repz
call
loope
sar
insl
pushf
dec
jae
mov
outsb
mov
pop
push
insl
xor
repz
ret
out
fmull
mov
mov
sub
data16
xorl
adcl
cmpsb
int3
repz
cmp
scas
push
in
mov
les
cs
out
hlt
or
inc
outsb
out
ds
in
sar
js
gs
add
adc
xchg
pop
inc
outsb
cmc
mov
xchg
mov
cmpsl
stos
stc
icebp
hlt
sar
dec
push
inc
insb
ja
imul
sbb
sbb
stos
neg
xchg
stos
popf
fsubrl
addr16
ja
pop
jb
or
adc
cli
loope
or
mov
stos
mov
push
bound
jnp
jge
pop
inc
outsb
push
jle
mov
mov
ret
out
sar
and
xor
add
adc
arpl
pop
inc
outsb
push
jle
mov
mov
ret
out
sar
and
xchg
or
lods
lds
mov
jmp
mov
test
shlb
add
movsb
outsl
mov
jle
pop
cmpsb
mov
mov
dec
sbb
mov
fdivr
into
cmpsb
xchg
mov
dec
sub
mov
in
push
jnp
sub
rcrl
iret
notl
fadds
nop
sbb
insb
test
jbe
imul
jecxz
nop
and
test
lods
out
and
sbb
jmp
enter
and
scas
adc
mov
lcall
jno
int
cmpsb
xor
jle
xor
cmp
jp
mov
pop
xchg
add
xchg
dec
addr16
mov
lock
ljmp
ret
adc
mov
sub
ds
lret
enter
mov
nop
and
lret
pop
pop
fisttps
mov
xchg
mov
fidivrs
add
pop
cmp
fldl
dec
add
jne
push
or
stc
incb
rol
rcrb
push
add
push
jecxz
aas
jb
rcl
mov
mov
pop
popa
jns
loopw
popa
aam
daa
dec
inc
cmp
cli
jmp
sbb
jo
outsl
sub
or
pop
adc
and
pusha
and
cli
mov
xlat
dec
popf
mov
sub
and
cltd
outsb
movsl
mov
jle
sub
test
data16
xchg
addl
scas
gs
loop
fnstenv
xchg
pushf
insl
ss
mov
xchg
xchg
jne
push
stc
mov
das
shlb
int
inc
daa
leave
sub
add
in
shll
notl
das
jl
ret
sbb
mov
jmp
adc
cld
mov
sub
fst
jne
jle
pushf
mov
pop
imul
inc
push
cmp
stos
cmp
mov
inc
jmp
dec
pop
lret
cmp
push
jbe
addb
test
mov
add
leave
add
in
es
dec
lods
xchg
or
xlat
sbb
dec
clc
je
out
xlat
xchg
lods
mov
jge
push
orb
cmpsl
jbe
dec
test
pop
lahf
pop
sbb
pop
jb
es
add
sbb
add
fcoml
jno
fwait
in
add
mov
add
fwait
sti
jo
xchg
dec
mov
in
jo
xor
jae
adc
xchg
in
sub
divl
je
dec
pushf
loope
arpl
mov
push
jge
out
fmul
mov
mov
insl
outsl
add
and
mov
pop
je
aam
mov
mov
fs
imul
pushf
jecxz
fstpt
add
dec
push
in
inc
lea
test
mov
inc
push
and
out
jns
js
mov
aad
inc
xorb
mov
xor
jae
jg
addl
jle
xchg
sbb
inc
iret
sahf
enter
dec
xchg
testl
lcall
cmpsl
clc
dec
mov
xchg
arpl
and
roll
outsl
outsl
sbb
pop
idivb
dec
mov
les
out
sbb
adc
dec
mov
pop
add
cmpsl
in
std
push
in
sbb
jne
enter
mov
adc
mov
push
andl
dec
mov
ret
pop
mov
cmp
shll
cmp
cmp
jle
jg
xchg
xor
adc
in
nop
data16
icebp
adc
inc
stos
xor
fnstsw
and
xorl
xor
outsb
stos
xor
mov
and
cmpsl
mov
push
xchg
lret
fnstenv
pop
ret
std
or
and
push
std
or
test
adc
addb
iret
into
xchg
bound
adc
push
and
and
call
push
sub
iret
xor
lcall
into
hlt
xor
mov
adc
bound
inc
nopl
inc
out
popf
xchg
jb
dec
jmp
xchg
rcrl
lds
int
lods
xor
cmpsl
adc
mov
ljmp
mov
adc
push
inc
popf
adc
mov
shrb
xchg
push
xor
rorb
jne
dec
xchg
icebp
mov
incb
cmpb
sbb
dec
cmpb
les
and
cmpsl
insl
sbb
adc
or
dec
or
scas
xor
dec
mov
sub
pop
adc
cmpl
data16
cmp
inc
nop
push
test
in
aam
je
xor
xchg
push
or
ret
mov
xchg
jo
xchg
cmpsl
sub
ret
mov
outsl
aas
pop
sub
jns
mov
arpl
out
addl
jbe
mov
hlt
pop
xchg
lcall
mov
push
cmpsl
inc
fisubl
sahf
fiaddl
mov
orl
dec
movsb
xchg
loope
xchg
les
xor
push
jmp
add
sub
mov
jg
mov
push
lock
pop
xor
in
jo
xchg
lret
out
mov
jg
xor
mov
and
add
fisttps
push
aam
loop
test
lret
mov
push
push
clc
sub
pop
sbb
jno
inc
and
xchg
pop
mov
add
pop
call
mov
fisttps
sub
jl
lods
dec
icebp
addr16
in
and
and
inc
cmp
cmc
sar
jecxz
loop
dec
je
daa
xchg
jge
xchg
mov
test
orl
ss
add
dec
bound
sbb
jecxz
and
jns
sub
out
xchg
stc
sub
int3
or
fwait
xchg
repnz
xor
inc
jbe
test
jo
jge
xor
gs
mov
pushf
lret
outsl
xor
popa
add
cmp
dec
lods
pop
pop
mov
movsl
mov
or
into
hlt
add
push
mov
pop
repz
addl
mov
sahf
hlt
jae
jmp
jnp
add
das
fistpll
loop
mov
adc
sbb
jecxz
sbbl
rol
sbb
mov
arpl
jb
push
mov
adc
jne
cli
push
or
pop
mov
loop
cmp
outsb
jl
sub
lcall
sbb
in
cmpsb
mov
outsl
xchg
pusha
rcll
lds
cmc
ljmp
cmp
jg
mov
xchg
mov
lods
jo
imul
lahf
jbe
mov
jne
int
xchg
popa
movsl
in
mov
mov
leave
mov
je
out
lret
xchg
into
xchg
mov
add
xor
adc
xor
js
ret
push
andb
icebp
xor
sahf
mov
popf
sub
pop
popa
dec
movsb
fistpll
mov
in
push
cmp
sub
mov
aas
jecxz
sbb
loop
dec
mov
jbe
pop
mov
push
jne
jp
xchg
inc
dec
mov
adc
pop
rcrb
fcmovne
and
push
cmp
push
mov
fs
jg
rcl
cltd
pop
pop
adc
mov
pop
xchg
and
mov
inc
dec
jl
stos
mov
mov
insl
in
pop
incb
cmp
adc
mov
xchg
ret
call
icebp
jns
iret
andl
sub
add
outsl
xchg
mov
mov
fldcw
test
lret
adc
aaa
or
xchg
and
mov
test
xor
insl
jge
inc
adc
cmp
imulb
cmc
hlt
leave
ja,pn
mov
xorl
sti
push
sub
adc
adc
faddl
aam
dec
bound
cmp
or
adc
into
jne
aad
scas
mov
pop
xchg
adc
cli
mov
or
xchg
sbb
out
mov
jp
cs
or
pop
inc
pushf
dec
mov
sar
rorl
and
lea
int
cmpsb
ljmp
xchg
sti
push
movsl
fnstenv
cmp
pusha
sub
mov
xor
mov
fisttpl
mov
inc
out
ret
aas
sub
and
mov
ficoml
pop
and
cmpsb
and
adc
push
inc
pop
int
lahf
fstpt
xor
aas
stc
in
mov
fs
sbb
daa
mov
in
push
fwait
add
cmp
sahf
cli
or
fldenv
mov
in
xchg
aam
push
add
bound
or
and
lret
ljmp
frstpm(287
stos
xor
inc
shlb
ficoml
add
cmpl
inc
call
addr16
mov
dec
ljmp
into
std
adc
ds
sbb
aaa
inc
push
sbb
add
pop
scas
jmp
mov
inc
cmp
pop
push
mov
inc
cltd
jl
mov
sbb
or
repz
lret
inc
dec
mov
push
mov
pop
sbb
jmp
mov
ljmp
int
js
pop
and
outsl
in
pop
andl
stos
mov
iret
dec
inc
movsw
xchg
mov
cmp
mov
xchg
jno
std
xchg
dec
xlat
xor
movsl
psllq
xor
dec
int3
sub
xor
add
push
mov
imul
cli
mov
ss
cmp
cmpsb
adc
jne
stos
fucomp
mov
cwtl
int3
les
adcl
fldl
fs
test
pop
inc
jmp
xor
ss
sahf
and
shrb
push
fcmovnb
mov
sbb
inc
int3
add
lret
inc
cmp
mov
xor
xchg
leave
aas
jo
cmc
inc
jg
stc
outsl
stos
adc
push
enter
inc
sbb
cmc
bound
adc
push
xor
loop
movsb
mov
cmp
xchg
add
aad
sbb
pop
or
outsb
mov
ss
jae
xchg
cmp
and
push
in
push
mov
fsubp
pop
cltd
fwait
mov
into
leave
pop
iret
lahf
and
outsl
nop
cli
cmp
ds
push
test
iret
mov
dec
mov
lcall
ss
cmp
mov
lds
sub
or
sbb
xlat
es
or
mov
sbb
push
das
fbld
ret
push
out
adc
push
popl
adc
mov
test
adc
pop
cmp
cs
mov
jb
add
mov
or
jno
enter
out
inc
sbb
lods
lods
fdiv
cld
stc
mov
inc
outsl
fwait
shl
sbb
inc
test
out
fndisi(8087
mov
fcmove
jg
aad
lock
stos
orl
cld
adc
int3
jecxz
iret
mov
pop
sbb
inc
xchg
cmp
mov
lock
mov
and
sub
inc
adc
das
shrl
pop
pop
pop
add
mov
scas
sahf
mov
gs
push
sub
out
dec
das
xchg
pop
lods
inc
scas
mov
add
stc
mov
shlb
adc
mov
and
xlat
ficompl
xchg
jno
mov
pop
pop
pushf
mov
mov
movsl
movsb
shlb
cltd
xchg
jbe
add
stos
or
test
jae
cwtl
int
jbe
push
xorb
xchg
adc
pop
sti
add
dec
pop
mov
stos
outsl
mov
push
aam
sbb
adc
mov
or
mov
sub
adc
aad
cvtpi2ps
or
jo
sahf
outsl
testl
or
gs
lret
pusha
icebp
mov
mov
inc
sbbl
push
push
xchg
jo
je
sti
je
daa
aam
test
push
insl
in
adc
jl
sbb
ret
sbb
shll
xorb
pop
pop
popa
jae
cmp
leave
out
bswap
mov
loope
aam
and
orb
xor
cmpsb
cwtl
rorb
ret
outsb
jmp
cmpsl
adc
movsl
mov
inc
inc
pand
pop
ret
lds
mov
adc
sahf
js
leave
jp
arpl
cwtl
dec
ljmp
and
rolb
mov
call
lock
nop
adc
mov
shll
stc
popf
movsl
and
dec
ucomiss
popf
aas
pop
and
and
movsb
fadds
add
push
cmp
push
xor
sarb
pop
or
aad
inc
or
loope
sub
fmull
mov
pop
daa
jae
ret
lcall
jae
in
and
add
nop
xchg
xlat
loop
jno
sbb
mov
mov
cmc
pop
inc
in
icebp
mov
pop
mov
insl
jno
add
jge
dec
cmp
daa
or
scas
fdivp
and
adc
inc
jnp
sbb
jne
not
loopne
add
mov
jmp
jne
jnp
lret
in
aam
and
lahf
stc
and
sbb
pop
daa
add
add
lock
sbb
rcll
lahf
in
outsb
outsl
or
mov
mov
mov
out
je
sub
insb
push
push
or
sbb
cmp
push
cmc
sbb
or
jo
fistpl
lods
xor
jnp
stos
push
xor
or
push
sbb
repz
aad
cmpsb
xlat
lahf
cmp
cmp
loopne
xchg
lods
and
bound
dec
aam
cmc
data16
push
push
call
in
addr16
out
jle
andl
mov
xor
inc
scas
loop
push
lahf
les
pop
mov
pop
gs
inc
lcall
sub
imul
leave
mov
shl
loopne
adc
enter
jns
push
test
clc
push
movl
addr16
jecxz
sti
hlt
fwait
mov
jo
repz
add
push
xor
test
jmp
mov
adc
lahf
sub
sarb
fnstcw
incl
mov
fwait
in
iret
scas
inc
push
aaa
fisttpl
js
arpl
dec
push
scas
push
dec
xor
inc
and
cmp
fists
sarl
sub
popa
loope
pop
pushf
push
in
dec
jecxz
jbe
shll
popa
push
xchg
jns
stc
insb
xchg
ficoml
lcall
mov
dec
sahf
or
test
xor
mov
in
stc
pop
pop
cli
push
inc
repnz
push
sub
fdivs
push
pop
mov
out
aas
loope
fucomp
push
sub
push
add
ja
mov
mov
sar
pop
in
hlt
int3
repnz
sub
xor
push
fsubrs
data16
lds
cmovge
push
and
dec
arpl
in
sbb
mov
or
pop
in
orb
jae
push
insl
test
xor
adc
roll
in
mov
mov
jb
call
int3
jne
cli
xor
ret
sahf
and
jl
push
and
outsb
and
push
inc
push
call
sarl
sub
sub
shl
repnz
and
scas
jle
test
fldcw
add
sti
inc
xor
push
pop
push
lret
mov
mov
pushl
popf
out
lcall
sub
scas
mov
pushf
push
in
pop
inc
in
dec
iret
fs
or
call
cmpb
adc
in
movl
mov
test
mov
mov
pop
test
movsb
xchg
push
sub
je
inc
push
or
ret
cli
inc
jnp
sub
add
jl
or
jne
adc
rolb
add
or
cmc
sub
add
test
rcll
lcall
imul
mov
fldcw
iret
pop
cmp
push
stc
int
repz
inc
in
data16
test
jno
jl
pop
imul
sub
repnz
mov
or
ds
cmpb
and
push
xchg
push
lcall
loope
lds
roll
sub
fs
rolb
mov
inc
mov
push
cltd
lahf
fdivrs
rorl
pop
mov
test
mov
ljmp
fxch
rcrb
pusha
push
ret
push
mov
fcmove
cmp
inc
mov
cmp
lods
mov
ss
enter
scas
xchg
fistpl
add
cmp
pushf
rcrl
adc
ss
push
fildll
jnp
xor
jb
mov
fistpll
insl
inc
repnz
js
imul
push
pop
jecxz
cmp
adc
mov
pop
lods
sbb
mov
test
adc
jmp
or
ret
jecxz
divl
dec
je
jmp
dec
adc
mov
mov
fistps
rclb
cmpsl
sub
mov
cmpsl
mov
cmp
jae
lock
test
pop
add
mov
pop
mov
mov
sbb
sbb
hlt
xchg
mov
jo
dec
mov
ljmp
adc
jecxz
out
mov
jno
cli
mov
cmpsb
rol
xor
xor
push
aaa
mov
cmp
mov
hlt
andb
sub
leave
xlat
outsb
xchg
xchg
sub
pop
idiv
bound
add
mov
xor
push
loopne
popa
out
jae
and
xchg
push
or
add
push
mov
xchg
insl
add
nop
cli
mov
cmpsl
aad
imulb
cwtl
movsl
adc
cmpsl
pop
test
cmp
dec
cmpsb
or
cmp
xchg
jns
mov
ljmp
pop
dec
shrl
push
es
dec
push
in
fidivs
shr
out
fs
pop
xchg
cmpsb
adc
pop
repnz
mov
xchg
push
shll
or
mov
sti
mov
pop
sub
fst
mov
xor
cmp
push
pop
mov
lcall
push
pop
pop
jecxz
movsl
push
mov
imul
cwtl
adc
stos
mull
push
xchg
insb
nop
aas
loope
fsubrs
mov
das
movsb
add
out
pop
sti
pop
mov
ja
js
mov
xchg
and
out
out
fwait
add
dec
push
add
pop
js
sti
sahf
mov
rorl
add
aas
pop
movsl
or
xchg
iret
outsl
jb
repnz
mov
pop
ror
daa
dec
lret
daa
jge
insb
cmpsl
leave
leave
repnz
sarb
cltd
mov
add
xchg
mov
std
shll
insl
sbb
push
and
jb
cmpsl
push
pop
mov
jae
out
sti
inc
vpsrad
icebp
je
cmpsb
add
sbb
jns
lret
jecxz
mov
add
push
cmp
movsb
outsl
add
movsl
fld
aam
fisubl
pop
pop
insb
dec
mov
ljmp
sbb
xchg
cmp
add
mov
cmp
mov
insb
push
pop
es
cld
xor
sbb
sbb
out
repz
daa
mov
inc
sub
movsb
insb
stos
iret
cltd
repz
and
pop
sub
ds
icebp
fisubs
stos
fwait
inc
pop
xchg
lret
mov
in
pop
pop
push
out
dec
stc
or
fmull
mov
popa
jns
sub
jnp
cmp
popf
push
push
fldenv
mov
mov
rcll
sahf
cmp
int3
out
pop
mov
mov
jmp
gs
lret
jecxz
push
sbb
and
shrb
int3
sbb
addr16
aas
adc
test
cmp
cli
mov
seto
pop
das
loope
mov
mov
push
pop
mov
inc
popf
icebp
add
jns
inc
inc
sti
movsb
or
mov
sbb
scas
sub
ret
cs
xchg
jo
jae
scas
xlat
cmp
or
mov
stc
dec
ljmp
xor
orl
ljmp
test
cmc
daa
stos
xchg
or
push
cmp
incl
sub
mov
adc
fcompl
cmp
xor
inc
and
fsubl
inc
decb
pop
scas
loopne
fmull
mov
addl
fwait
inc
xchg
mov
cmp
lahf
sbb
retw
in
pop
sarl
mov
hlt
pop
dec
dec
loopne
xor
cmp
test
lods
dec
rolb
cmpsb
repz
inc
add
in
divl
adc
jg
and
stc
push
or
cmp
jle
fildll
sbb
mov
shrb
pop
fwait
insl
jle
ljmp
js
enter
int3
jmp
frstor
dec
sub
aaa
es
pushl
inc
jo
adc
in
inc
aas
dec
pop
jne
mov
mov
outsl
jecxz
ljmp
push
xor
lods
mov
js
mov
fdivrl
pop
sbb
lods
xor
insl
mov
jns
es
fisubrs
adc
imul
mul
adc
mov
pushf
cli
xor
insb
in
push
sub
sub
in
cmc
dec
jmp
rolb
mov
ljmp
shll
push
rolb
mov
xchg
rcr
pop
das
xchg
inc
ret
lods
pop
iret
repz
ds
mov
inc
adc
arpl
pop
inc
outsb
push
jle
mov
mov
ret
out
sar
and
xor
add
adc
arpl
pop
inc
outsb
push
jle
mov
mov
ret
out
sar
and
add
arpl
adc
repz
jae
inc
outsb
xchg
jle
mov
mov
ret
ljmp
pop
sub
arpl
pop
inc
outsb
sarl
sub
jnp
cmp
sub
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
dec
and
ja
pop
daa
pop
dec
inc
xor
push
or
arpl
xchg
xlat
loop
sbb
out
add
pop
aaa
pop
pop
daa
pop
push
addr16
ja
inc
addr16
cmpsl
xchg
xlat
leave
div
out
push
sbbl
popa
dec
push
pop
aas
outsl
dec
jo
xchg
cmpsl
mov
mov
xchg
test
pop
jbe
push
dec
jb
push
sahf
xchg
insb
sub
dec
jle
dec
jl
aas
cmp
cmp
pushf
pop
and
hlt
aaa
jae
call
xchg
js
dec
js
imul
test
dec
push
lcall
out
mov
gs
or
cmpsb
js
out
pop
imul
adc
adc
daa
pop
aaa
xlat
add
lahf
xchg
mov
js
xchg
push
repnz
jp
cmp
stos
div
clc
lret
push
call
xchg
lahf
test
mov
loop
xchg
pop
pop
neg
pop
enter
ljmp
push
push
push
cmpsb
std
pop
xlat
mov
sub
mov
aaa
jae
pop
inc
addr16
ja
inc
jle
mov
mov
sbb
in
daa
bound
imul
ret
jne
or
jecxz
xchg
lds
leave
hlt
mov
mov
mov
push
je
jnp
xor
and
xchg
repnz
cmpsl
mov
mov
xchg
xor
jnp
sub
ja
addr16
xchg
cmpsl
xchg
xlat
out
div
out
pop
daa
pop
aaa
aaa
pop
daa
pop
push
addr16
ja
inc
addr16
xchg
cmpsl
xchg
xlat
out
div
out
pop
daa
les
jp
stc
js
shl
mov
push
jns
test
jge,pn
mov
in
jmp
incb
add
test
test
repnz
out
in
hlt
xor
setle
jecxz
inc
decb
inc
add
mov
mov
push
sbb
xchg
inc
jae
push
clc
jge
xor
and
inc
pop
ret
mov
adc
jg
add
jg
int3
xlat
aas
jge
dec
inc
out
cmpsl
clc
jge
push
loop
test
or
sub
test
aaa
shl
mov
test
inc
out
mov
cltd
rcll
sub
idivl
cmp
shl
sbb
into
push
adc
gs
xchg
shl
lahf
lock
push
add
fwait
inc
mov
scas
aaa
push
mov
add
or
adc
mov
add
int
dec
or
icebp
and
jmp
push
dec
cmc
cmp
lock
or
dec
cwtl
cltd
out
enter
pop
cltd
xor
xchg
inc
cmp
mov
xchg
daa
jl
dec
or
mov
xor
push
xor
inc
gs
dec
xchg
sbbl
mov
jl
push
pusha
in
adc
insl
sahf
subb
ljmp
xor
cmp
addr16
cmp
aam
jmp
subb
and
mov
cmp
push
adc
pop
shlb
mov
cmp
fists
loopne
stc
mov
mov
cmc
pop
dec
push
je
lds
addr16
imul
xchg
cmpsb
xchg
in
xchg
add
mov
test
stos
les
add
mov
lods
icebp
sub
mov
pop
mov
int
sarl
cmpsl
testl
jns
push
out
gs
sahf
jmp
fildll
cmp
xchg
cli
test
mov
sub
cwtl
nop
mov
add
cwtl
or
call
ljmp
add
adc
xorb
lahf
fildl
or
stc
adc
outsl
pop
xchg
fsts
pushl
xor
jmp
cmp
add
push
gs
outsb
push
add
stos
dec
xor
fildll
pop
pop
adc
gs
in
inc
addr16
add
xchg
xchg
inc
orl
leave
fildll
push
mov
push
rorb
pop
repz
inc
lods
pop
and
divb
cmp
aam
mov
stc
jle
mov
flds
lcall
mov
xor
daa
and
mov
inc
out
popf
aam
pop
es
jbe
shl
out
jne
and
in
and
pop
mov
ret
imul
adc
mov
inc
pop
in
sbbb
dec
xlat
jnp
xor
cmp
js
xor
sub
xor
clc
and
int3
sub
ret
ljmp
nop
pop
lock
into
stos
sbb
pop
ret
mov
sub
adc
or
in
adc
and
cltd
add
ret
test
pop
pop
in
lret
mov
inc
subl
add
xchg
sbb
xor
int
sbb
aam
mov
adc
out
jno
adc
adc
or
out
inc
jg
stos
push
mov
dec
aad
mov
mov
aaa
xlat
scas
pusha
sub
sbb
sbb
dec
hlt
icebp
cmp
xchg
fucom
sbb
lea
mov
push
cmp
shl
or
hlt
xlat
cmp
cltd
xor
sahf
xchg
notb
insl
mov
jmp
jbe
adc
andps
in
adc
stos
out
aaa
lods
cmp
add
lods
pop
pop
lret
xchg
push
jne
adc
ja
push
xor
sti
push
std
bound
or
iret
push
adc
xor
int3
sahf
add
xor
loope
js
sbb
dec
mov
cmp
mov
and
mov
aam
mov
fisubs
test
jg
xchg
mov
jecxz
xchg
lret
test
neg
or
inc
loopne
insb
and
push
sbb
xchg
xor
dec
test
sub
mov
fcmovnu
sub
lcall
in
push
xor
jae
stc
rorb
stos
lret
cmp
pusha
mov
pusha
inc
dec
mov
dec
test
dec
int
ja
mov
fcomp
sub
outsl
fucomp
mov
mov
jecxz
push
mov
stos
add
sahf
jo
ret
cmp
repz
stc
push
cmp
pop
fwait
inc
mov
sbb
push
les
cwtl
push
mulb
mov
mov
into
inc
pop
stos
lods
lcall
cmpsl
jno
aas
sbb
pop
and
fs
push
mov
ds
js
and
cmp
push
add
add
test
cltd
sarl
xor
pop
mov
cmp
sahf
into
push
int3
out
out
aam
xor
dec
xchg
mov
ss
jnp
cmc
add
pop
shlb
out
out
sti
mov
dec
inc
js
popa
jo
xor
int
or
and
pop
pop
cmova
stos
mov
mov
and
movsw
xor
dec
fbld
or
adc
imul
push
or
rorl
es
pop
roll
jnp
data16
stos
mov
sbb
je
insl
dec
jl
aas
mov
test
test
xor
sub
mov
mov
adc
mov
outsl
test
lods
enter
or
xor
loop
in
push
sub
and
cmpsb
add
adc
pop
cmp
pop
adc
cli
rcrb
sub
mov
push
sahf
add
dec
mov
and
add
lock
xchg
pop
inc
cmp
add
lock
jo
dec
data16
adc
xchg
push
outsl
mov
xchg
iret
insl
fwait
lret
enter
test
popf
sub
pusha
in
fcompl
mov
mov
ret
jno
and
inc
div
xchg
sbb
pop
adc
outsl
ja
sub
pop
push
hlt
ret
mov
sbb
push
lods
jnp
inc
push
gs
add
inc
hlt
imul
loopne
and
arpl
outsl
faddp
repz
call
adc
je
call
out
aas
rcll
cmpsb
clc
pop
inc
add
xlat
push
sub
call
inc
sahf
add
push
cmp
sub
insl
pop
inc
xchg
inc
out
lcall
pusha
or
push
pop
lds
jmp
fdivr
addr16
icebp
or
fs
hlt
sbb
pop
xorl
jl
imul
mov
mov
cmpsb
loop
orl
popf
push
test
xchg
xchg
jge
push
aaa
push
dec
test
sub
dec
movsb
jle
lods
sahf
mov
loopew
ret
into
fcompl
jmp
cld
scas
pop
adc
jg
iret
nop
pop
test
out
mov
adc
mov
pop
xor
mov
int
mov
sti
or
xor
adc
test
fdivl
ror
movsl
fchs
testb
scas
ljmp
push
mov
jp
out
outsl
dec
fmuls
lret
sbb
sbb
mov
pop
lret
or
push
cltd
mov
test
daa
push
mov
pop
lahf
orb
lods
enter
fiadds
xchg
imul
aas
mov
push
mov
adc
aas
xor
pop
fcmovu
xchg
pop
dec
and
push
negb
push
xlat
lea
arpl
ja
int
pop
xor
int3
cld
out
mov
mov
pushf
jae
leave
ljmp
ror
test
mov
mov
mov
mov
das
adc
addb
fdivrl
dec
fiaddl
jg
push
adcl
xor
inc
jecxz,pn
lcall
imulb
bound
push
out
mov
inc
mov
mov
lahf
movsb
push
mov
xchg
scas
dec
iret
or
fcomi
mov
jl
mov
sar
mov
pop
xchg
mul
in
push
test
cltd
jge
mov
or
pop
movsl
jecxz
fstpt
add
push
xor
shl
imul
sarb
mov
push
jge
lock
mov
cmpsb
pop
ja
and
in
je
add
push
xchg
xlat
movsb
xor
mov
xor
pop
call
ret
jno
jno
xor
inc
shlb
mov
cltd
pop
ret
imul
cmp
scas
dec
adc
addr16
add
pop
jg
out
mov
ds
bound
and
mov
xchg
fistpll
adc
repnz
add
arpl
adcl
bound
dec
je
xchg
fwait
mov
and
test
fisttpl
sbb
rorl
lcall
hlt
out
loopne
or
sahf
repz
addr16
test
push
ds
stos
inc
or
sahf
sbbb
lcall
and
lods
or
sarb
dec
sub
add
sbb
cli
leave
fsubl
push
inc
rcrl
sbb
xor
movsl
push
movsb
outsl
and
push
mov
movsb
push
aam
push
sub
xorb
loope
inc
xchg
jne
and
scas
dec
ds
rorl
and
xchg
ret
movsl
lcall
out
mov
outsl
push
call
sbb
leave
xchg
icebp
pop
stc
or
or
out
call
mov
loope
mov
movsb
push
out
mov
insb
sub
inc
insb
dec
cmp
mov
fsub
inc
dec
jmp
add
js
out
fcmovb
out
and
shlb
lds
loop
insb
jae
out
jb
jmp
jecxz
out
sub
aam
fwait
pushf
test
cltd
mov
push
insl
and
or
sub
mov
dec
sbb
push
stos
cmp
cmpsl
mulb
jmp
fstpl
mov
orb
push
adcb
sbb
adc
loop
cli
mov
jge
lods
pusha
es
mulb
lcall
inc
mov
les
inc
gs
popf
mov
arpl
ret
popa
movsl
call
neg
mov
or
stos
inc
sub
mov
lahf
add
les
test
movsl
fdivl
int3
loope
popa
dec
adcl
cwtl
or
repnz
xchg
stos
je
inc
cmp
mov
inc
aad
leave
clc
mov
pusha
int3
mov
sbb
test
dec
dec
ret
xor
sahf
push
fiaddl
lods
and
cmp
pusha
xchg
mov
scas
or
fildll
jmp
js
xchg
and
stos
insl
rcll
jl
in
lock
sbb
loop
inc
jl
imul
pop
xchg
into
adc
aad
xchg
mov
sbb
fldt
cmp
jno
push
push
inc
push
addr16
jge
mov
dec
and
sahf
xor
jle
mov
jo
adc
mov
inc
loopne
sbb
push
inc
push
mov
addb
sub
cmp
sti
test
adc
xor
out
cld
cwtl
das
cmp
mov
and
dec
pop
insl
or
cwtl
adc
stos
test
pop
addb
cmpsl
xchg
hlt
dec
stos
rcrb
adc
lret
mov
mov
push
daa
xchg
sbb
icebp
xchg
push
std
dec
pop
clc
fwait
out
adc
mov
cmp
inc
and
test
and
inc
lret
push
leave
push
jnp
call
mov
test
fsincos
adc
pop
shl
sti
cmp
and
mov
adc
rorb
pop
xchg
fmull
ret
rorl
sub
jnp
xchg
js
xchg
cmp
rcl
inc
pushf
jl
jge
adc
sub
bound
dec
mov
add
or
xlat
sub
fucom
mov
mov
pop
in
mov
xor
stc
sub
orl
in
jecxz
mov
dec
xor
test
jne
mov
clc
push
dec
ljmp
jmp
pop
in
nop
mov
xchg
bound
sahf
xchg
idivl
jnp
stc
mov
enter
xchg
lods
mov
mov
jne
cli
std
pop
jae
mov
ds
pop
mov
nop
mov
enter
or
xorl
pusha
js
ljmp
xchg
add
jno
mov
fiadds
jl
push
out
loop
xchg
clc
clc
inc
sti
ret
pop
xchg
fcom
ss
xchg
rolb
aad
mov
fs
pop
dec
mov
mov
arpl
fwait
lock
sbb
loop
stc
test
test
adc
mov
mov
xor
dec
push
push
sub
and
insl
aam
ret
xor
jae
das
pop
jnp
scas
aaa
out
sbb
movsb
pop
loopne
add
sub
ss
sub
inc
sub
out
or
mov
push
mov
outsb
fisubs
add
dec
cwtl
data16
cmp
cwtl
mov
lcall
sub
mov
cld
imul
dec
out
stos
bound
and
mov
or
insl
ficomps
stc
jmp
lret
push
xchg
xchg
sub
ja
not
leave
adcl
fists
aam
cmp
and
pop
dec
testl
out
jno
xor
adc
mov
jmp
daa
cmc
mov
sbb
mov
fists
pop
mov
jmp
xchg
push
xchg
in
dec
lret
pushl
stos
pop
imul
push
jno
jg
cmpsb
test
cld
sbb
mov
icebp
dec
add
mov
ret
test
lods
sbb
xor
adc
pop
std
popa
jo
mov
lret
repz
int
cltd
or
mov
mov
cmc
frstor
test
lea
call
test
sbb
and
ds
inc
mov
loopne
daa
call
divb
dec
rcrl
in
jecxz
addr16
int
mov
stc
mov
sbb
jmp
jge
mov
xchg
pop
push
jle
js
sbb
adc
lea
xchg
cmp
scas
or
add
cmp
outsb
cmp
scas
mov
xchg
cs
icebp
pop
cmp
sbb
in
mov
jns
and
cmp
daa
sub
addr16
jl
jnp
or
mov
aas
test
lods
outsb
push
frstor
ss
jg
movl
jecxz
push
add
jmp
sarl
sbb
pop
add
xor
xchg
lods
jbe
aas
mov
std
ret
jmp
jnp
pop
sbb
mulb
int
ret
mov
sub
dec
push
divl
adc
xchg
int
cltd
xor
lods
jae
sbb
adc
ja
call
push
or
adc
xchg
andl
add
inc
push
mov
dec
mov
cs
fbld
mov
push
sbb
dec
stc
mov
xor
push
add
xchg
push
les
adc
test
cli
aaa
cmp
xchg
les
lret
xchg
std
fcom
sbb
xor
imul
sti
repnz
mov
sbb
pop
out
sub
les
test
sub
ljmp
mov
push
add
cmpsb
jle
cltd
sbb
lods
cmp
movsb
roll
sbb
gs
push
fdivrl
mov
out
ret
xchg
cmp
push
or
mov
mov
cmp
ficompl
mov
fnsave
jno
xor
shll
int3
add
lcall
sbb
add
cmp
int
dec
aas
inc
push
jae
addr16
mov
ret
sbb
sahf
xor
add
js
pop
xchg
decb
out
sbb
xor
repnz
mov
and
cli
cltd
and
rorb
paddw
outsb
pop
rcll
inc
je
push
and
push
inc
push
or
test
out
inc
hlt
out
pop
int3
call
mov
push
jo
jecxz
cmp
xchg
inc
pop
and
xor
pop
int3
dec
ret
cmpsl
pminsw
or
push
push
inc
inc
out
out
fstpt
shrl
mov
pop
add
add
xchg
push
mov
add
lds
cltd
in
into
mov
mov
push
jb
aas
daa
cmp
jo
xor
cltd
xor
fstps
sti
mov
jns
cmp
pop
icebp
mov
xchg
mov
in
lcall
xchg
std
pop
mov
mov
cmp
mov
xor
jecxz
lret
stos
cmpsl
loope
add
ds
mov
mov
and
jecxz,pt
sub
jo
cmpsb
add
adc
sub
lds
pusha
scas
push
pushf
popl
inc
pop
push
out
shl
pop
sub
cmp
fisubrs
jmp
dec
rolb
push
std
dec
in
jbe
jge
pop
cmp
xchg
mov
inc
push
sub
pop
rcrb
mov
addr16
add
ljmp
iret
insb
adc
lea
push
imulb
std
outsb
mov
mov
ss
adc
sahf
mov
push
jle
cwtl
xchg
jno
js
xchg
cmc
mov
notb
test
xchg
cmc
xchg
push
mov
push
push
adc
test
pop
pop
fwait
push
cmpsl
popa
fwait
xor
mov
mov
push
outsb
insb
lea
jl
pop
sub
jo
insb
lahf
pusha
push
dec
push
mov
mov
outsb
out
dec
mov
pop
lods
popa
mov
insb
cmp
mov
cmp
sub
movsb
pop
push
push
pop
push
clc
pop
movsl
mov
push
fbld
xchg
xor
ret
fcmovne
cmp
sub
pop
xor
xchg
sbb
xor
mov
sahf
hlt
push
idivb
sbb
ds
addb
cmpsb
jbe
mov
cmpsb
xor
cmpl
dec
push
rorb
addb
or
fidivrs
mov
popf
test
dec
mov
shll
stos
jbe
or
rcll
movb
lds
adc
jbe
inc
repz
or
mov
and
int
test
dec
xor
rorl
leave
xor
scas
jb
xchg
lds
outsl
lret
jl
jl
jl
add
dec
mov
jae
negb
jle
add
aad
aad
lock
insb
jae
xchg
daa
outsb
icebp
idiv
inc
test
adc
andl
sti
and
fsubr
addb
adc
subb
cmp
xchg
add
mov
add
and
sbbb
addr16
lods
enter
and
lods
daa
daa
cmp
in
cmp
fistl
popa
movsb
or
dec
movsl
inc
imul
shl
rol
inc
pop
pop
rcrl
loop
lahf
sti
xchg
dec
loopne
mov
repnz
cwtl
xchg
clc
mov
mov
cs
insl
dec
add
test
pop
and
outsl
push
adc
xchg
flds
adc
enter
mov
jge
dec
sahf
cmp
movsl
dec
loop
xor
fwait
cmp
shl
shrb
std
lods
dec
cmpsl
adc
pusha
into
lcall
loop
ret
adcl
cmpsb
inc
pushf
idivl
push
dec
ja
and
roll
in
sub
lcall
shl
mov
add
gs
repz
push
adc
add
movsl
push
insl
pop
negl
lods
pushf
mov
or
push
pop
xchg
popa
cmp
pop
ja
mov
push
mov
adcb
insb
xchg
in
jl
cmpsl
int
xchg
pop
test
push
mov
stos
orb
xorl
inc
gs
ret
xchg
cmc
jbe
bswap
dec
push
into
pop
icebp
dec
in
jecxz
in
into
ret
popf
lahf
rorb
mov
pop
dec
add
add
and
sbb
push
or
pop
lahf
xchg
pop
and
divl
incl
jno
lcall
or
mov
jae
jb
sub
out
notb
sbb
test
stc
iret
pop
xchg
stos
jb
ds
mov
push
jp
or
adc
nop
jmp
hlt
add
test
mov
lock
std
rolb
inc
and
inc
xchg
inc
pusha
sbbb
cmc
jno
mov
dec
cmp
lods
xchg
add
adc
sbbb
mov
iret
imul
xchg
jp
pop
dec
jae
cmp
dec
inc
lret
mov
xor
mov
aas
pop
mov
jb
loopne
dec
xchg
pop
loop
clc
fwait
adc
ficompl
lea
ljmp
dec
jmp
push
loope
push
popf
loope
pusha
out
add
fcoms
add
call
leave
sbb
sub
mov
rorb
mov
pop
pop
in
pusha
jmp
mov
jge
mov
pcmpeqw
xor
jno
orl
xchg
pop
in
out
outsl
adc
pop
nop
dec
dec
cmc
mov
popa
mov
mov
mov
dec
add
pop
push
addr16
ja
inc
addr16
xchg
cmpsl
xchg
xlat
out
div
out
pop
daa
pop
aaa
aaa
pop
daa
pop
push
addr16
ja
inc
addr16
xchg
cmpsl
xchg
xlat
out
div
out
pop
and
cmp
pop
daa
adc
inc
sbb
inc
addr16
xchg
cmpsb
xchg
xlat
jecxz
div
into
xor
ret
xor
add
daa
push
push
addr16
ja
out
push
xchg
scas
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
dec
mov
out
mov
stc
lret
leave
pop
ja
sub
outsl
or
jns
imul
mov
out
mov
fldcw
sub
sbb
pop
adc
das
dec
fistpll
out
mov
fldcw
or
imul
jl
ds
aaa
inc
cmp
icebp
mov
in
inc
push
pushf
inc
dec
pop
jo
jno,pt
cmp
jns
shlb
mov
scas
or
stc
subb
ret
sub
es
insl
loop
lock
pop
mov
mov
xor
ficompl
inc
nop
pop
mov
fsubrl
sbb
iret
fbstp
mov
aaa
dec
mov
jle
xchg
jns
xchg
das
push
and
stc
lods
leave
cli
add
jno
pusha
mov
cmp
out
or
mov
cmp
and
mov
jg
inc
and
imul
jns
cmp
pop
cs
cmpb
mov
fldcw
sub
outsl
or
jns
imul
mov
mov
cmp
lret
inc
std
sub
jl
jge
cmp
push
and
sbb
int3
mov
cmpsl
mov
xchg
jmp
mov
jb
push
pop
dec
or
jl
outsl
wrmsr
es
jmp
in
scas
leave
pop
cmp
jg
outsl
or
jns
imul
mov
out
mov
fldcw
sub
outsl
or
jns
imul
mov
mov
lcall
into
and
out
mov
lahf
repnz
popf
int
jne
in
add
loopne
pusha
jmp
jp
loope
imul
icebp
popa
nop
cli
rcl
sbb
push
loop
dec
fmulp
add
test
mov
mov
divb
test
inc
inc
dec
adc
and
loopne
repnz
daa
aam
data16
xchg
ret
in
pop
dec
cmpsl
fs
mov
sub
lcall
test
mov
mov
les
lods
leave
mov
push
pop
hlt
mov
dec
cld
and
xor
shl
rclb
mov
xor
inc
xlat
push
mov
sbb
mov
sbb
inc
ja
or
rcr
jmp
mov
cli
out
sub
mov
enter
sub
int3
insb
stc
fs
sbb
inc
sub
rclb
push
cmp
stos
test
in
jne
jne
push
dec
pop
or
sbb
sarb
addr16
lock
push
andb
stos
loop
jne
cmp
mov
sti
fwait
inc
pop
jmp
sub
mov
mov
mov
ja
and
fsts
adc
dec
xor
fsubl
sbbb
push
fidivrs
loopne
push
ds
std
push
mov
fidivrl
insl
mov
popf
and
add
add
loope
add
inc
dec
add
mov
xor
cmp
roll
add
aad
and
int3
sbb
insb
mov
aas
ret
fstpl
adc
aaa
ficoml
xchg
mov
inc
sbb
in
data16
push
data16
out
hlt
cs
mov
push
lret
gs
cmp
fistps
push
mov
in
roll
push
loopne
jo
fdivl
add
mov
int3
test
mov
rclb
jl
xor
icebp
aas
mov
pop
icebp
jo
jno
or
sbb
jge
mov
or
lods
fdivrs
xchg
adcl
mov
stos
call
lret
in
mull
adc
out
imul
loop
cmp
in
iret
int
jbe
inc
in
mov
mov
mov
into
inc
cltd
icebp
fisttps
subb
mov
stos
out
arpl
push
ljmp
arpl
scas
sbb
sbb
mov
xor
adc
cmc
aaa
das
pop
push
pop
jp
jge
push
jb
push
jo
fs
add
jg
scas
jno
cmp
cmpsl
dec
mov
stos
xchg
mov
mov
stos
outsl
lds
and
leave
sti
mov
loopne
inc
xor
cmp
jne
fdivl
mov
scas
and
dec
jl
xchg
dec
rdtsc
pop
push
dec
data16
aad
fsubl
mov
movsb
shr
xchg
aad
scas
sub
lcall
add
lfs
ds
out
xchg
out
popf
add
jge
cmp
pop
pop
jecxz
mov
sub
mov
xor
mov
inc
ljmp
mov
pop
testl
addb
loop
xor
mov
ret
ja
ror
lea
in
jne
jno
add
dec
fists
mov
inc
pop
push
mov
pop
lea
push
cmpsl
pop
mov
mov
insb
pop
dec
stc
pop
mov
enter
mov
imul
mov
scas
push
je
add
sahf
mov
ss
or
aad
call
jbe
in
ljmp
lahf
mov
jle
aam
loopne
dec
psubd
dec
pop
and
out
jae
sbbb
push
mov
adc
xchg
push
jnp
xor
ss
xor
pushf
lock
jge
xor
and
int
push
scas
mov
into
pop
jmp
xchg
in
pop
inc
inc
xchg
sub
ffreep
push
jns
add
pop
sbb
sbb
and
xor
lds
scas
mov
pop
ds
xchg
jno
fldt
out
push
movsl
push
data16
inc
inc
sub
into
mul
adc
sbb
and
popf
lahf
rclb
or
lcall
pop
clc
add
mov
sub
scas
inc
xlat
out
scas
test
jb
mov
dec
gs
mov
mov
push
xor
inc
mov
pop
out
imul
cltd
push
xchg
lahf
xchg
pushf
xchg
mov
pop
sbb
pop
lret
push
call
cmp
jg
out
push
fistps
das
push
dec
dec
insl
xor
xor
ficompl
sbb
add
mov
test
lret
das
mov
aad
cmp
in
incl
call
stc
inc
mov
lock
xor
push
sti
xchg
lock
jae
xor
and
leave
out
fstl
mov
test
pop
icebp
repnz
data16
cmp
cmp
cld
adc
mov
loopne,pt
jmp
data16
cmp
cmp
sub
fwait
pushf
test
sbb
shrl
arpl
mov
stos
iret
scas
leave
in
mov
rsqrtps
das
xor
adc
stos
add
dec
cmp
jle
aad
imul
cmc
xchg
jae
sub
neg
sbb
push
repnz
cmp
mov
fisttps
jp
pop
fs
inc
dec
xor
add
andb
test
in
mov
mov
xchg
aad
stos
popf
rcrl
mov
imull
mov
push
fcmovb
ja
ret
xor
fiaddl
push
xchg
dec
insb
cmpsl
and
xchg
jmp
push
addb
std
arpl
ret
loopne
xor
xor
inc
mov
mov
sub
mov
and
iret
and
dec
stos
leave
push
mov
mov
mov
loopne
outsl
dec
jae
jl
shll
adcl
pop
push
mov
in
mov
push
fxch
ds
or
test
fs
test
mov
mov
add
xor
mov
mov
mov
jge
mov
mov
out
hlt
repz
dec
lret
push
scas
call
fistl
dec
ja
sub
xchg
adc
cli
push
adc
xor
popa
cmp
sub
push
int
pop
subl
inc
clc
cmp
add
call
mov
jnp
xchg
js
and
and
adcb
pop
add
mov
sbb
push
dec
and
lods
jge
out
insb
xchg
mov
jl
mov
cld
cmp
les
leave
pop
out
or
push
aad
mov
mov
xor
adc
cmp
adc
aaa
sub
ja
dec
jo
jmp
add
mov
lcall
mov
extrq
pusha
push
push
lret
cmpsb
cmp
mov
std
sbb
dec
adc
adc
jne
mov
cmpsl
adcl
xchg
stos
sbb
testl
sarb
ja
lcall
add
jno
inc
aas
push
dec
cld
mov
out
mov
aaa
sub
and
adc
xchg
shrb
iret
inc
dec
inc
es
or
jo
and
mov
repnz
es
mov
sbb
popa
aam
insb
sbb
sbbb
mov
fs
mov
add
call
cmp
testl
fidivl
out
xchg
pop
mov
imul
pop
or
fimuls
mov
sbb
sub
ds
pop
sub
fstpl
pop
outsb
jle
sbb
icebp
mov
rorb
in
lret
idivb
pop
fwait
rclb
jae
pop
jbe
outsl
sbb
data16
mov
fistpll
je
js
dec
shll
movsl
mov
xor
and
das
mov
sub
pop
mov
mov
loope
push
pop
movsb
pop
jle
and
loope
sbb
ja
dec
cmpsl
push
add
scas
mov
fs
sti
jg
cltd
adc
mov
sbbb
mov
adc
dec
dec
movsl
jg
jns
mulb
sub
fdivl
mov
mov
mov
cmpsb
lret
data16
test
in
repz
fwait
cmp
insl
xchg
cmp
outsl
jle
cmpsb
xchg
add
xor
mov
xchg
mov
sbb
jo
mov
rorl
xor
cli
cmpsb
fistpll
xchg
inc
mov
jns
sub
add
testb
cwtl
push
xor
push
mov
xchg
jge
inc
gs
jbe
in
scas
rcrb
cvttps2pi
jb
shlb
mov
mov
add
and
and
dec
in
adc
testl
cmp
cmpsb
dec
test
push
mov
mov
inc
pop
jecxz
push
repz
xchg
push
sub
mov
test
lods
push
sub
mov
jno
dec
jae
fcoms
lcall
loopne
mov
testb
jecxz
lock
pop
mov
aas
xor
mov
cmp
int3
fdivrp
shlb
fstpl
inc
add
dec
cli
add
fidivrl
js
aaa
out
push
inc
cmc
je
xorb
imul
inc
lret
cli
xchg
imul
out
adc
mov
xor
mov
js
jle
cmpsl
mov
or
out
scas
pop
imul
and
pop
sbb
stos
pusha
subb
mov
jns
sbb
and
gs
mov
outsb
and
das
lcall
dec
jg
push
pop
mov
pusha
imul
pop
ss
int
ret
sbb
or
shll
dec
push
int
imul
ficompl
ja
sub
das
int3
movsb
sub
mov
or
sub
cld
or
out
repz
push
enter
shll
cld
mov
jae
push
jno
pop
data16
jp
scas
mov
sbbl
outsb
out
xchg
movsb
sub
aad
pop
pop
pop
cmp
xor
mov
popa
add
cmp
mov
inc
int3
adc
cmp
xor
repz
jge
cmpsb
mov
mov
outsl
movsb
in
test
pop
es
inc
pop
fwait
je,pt
jno
adc
or
adc
test
sub
or
cmp
push
push
xor
mulb
out
xchg
dec
mul
sbb
jbe
add
leave
jbe
mov
cld
arpl
cltd
sbb
dec
jne
jb
cmp
pop
jge
insl
loopne
rorl
ret
pop
popf
rcrb
adc
sub
mov
push
mov
pop
xlat
mov
cmpsb
bound
fidivs
out
cmpsb
pop
fildl
fnstsw
repz
cltd
lahf
and
jp
das
pop
cmpsl
jl
jmp
je
cmp
mov
aam
jmp
jle
mov
push
adc
cmp
jbe
pop
xchg
inc
inc
cltd
mov
fistps
inc
add
mov
push
push
call
pop
xor
js
xchg
imul
pop
and
pop
imull
sbb
inc
lcall
and
xchg
jmp
aam
inc
mov
dec
cmp
lahf
sub
lret
and
sbb
xchg
mov
shll
in
or
lea
mov
jae
push
dec
test
fxch
sbb
xor
stos
mov
cmp
and
test
xchg
adc
jl
or
cmp
pop
or
or
jns
loopne
rclb
xor
xor
std
imul
jbe
or
and
loopne
inc
arpl
mov
or
jnp
lock
adc
popf
pop
pop
and
xchg
dec
jg
inc
jbe
inc
mov
push
jno
xor
mov
ret
insb
jg
stos
jbe
and
dec
imul
sub
mov
push
ljmp
ss
jle
jb
mov
jp
sbb
fstl
popa
cmp
mov
xor
pop
and
push
fsub
jnp
jb
sbb
pop
mov
xchg
mov
jp
add
nop
jg
push
aas
aaa
addr16
cld
sbb
cmpsb
dec
cmp
jl
jns
pop
adc
cli
jle
mov
fstps
inc
add
dec
jns
out
or
sbb
inc
xchg
fwait
add
dec
jne
pusha
pushf
popf
push
push
xor
sbb
fstpl
sbb
push
push
inc
negl
inc
jle
sub
mov
icebp
sub
xchg
dec
xor
cmpsb
fisttpll
lea
lcall
mov
repz
outsb
xor
push
lods
xor
adc
imull
xchg
add
call
cmp
jmp
pusha
inc
stc
dec
adc
push
mov
jmp
dec
es
mov
jo
imul
movsb
sub
fs
jp
test
int
iret
stc
into
scas
les
push
stos
cs
ss
mov
and
mov
or
jno
cmp
inc
clc
out
roll
pop
dec
in
mov
mov
in
bound
lcall
fcoml
test
add
aad
lock
loopne
add
inc
mov
inc
repz
iret
stos
inc
dec
push
rorb
cmp
nop
fwait
sahf
fcoml
sub
shrb
mov
cmpsb
and
loopne
imul
mov
push
loop
fwait
xchg
mov
jae
fildll
fdivrl
mov
scas
mov
adcb
mov
xchg
icebp
mov
stos
mov
mov
inc
loop
addb
jno
pushf
aas
out
jl
and
rcl
outsl
xchg
lods
or
imul
into
fdivs
xchg
mov
int
clc
xor
gs
cwtl
loope
xlat
cli
pop
pusha
ljmp
xor
pushf
ror
adc
stc
push
xor
push
scas
fcmovnb
xchg
nop
es
xor
mov
movsb
cmpsb
movb
call
dec
add
adc
mov
clc
dec
mov
inc
lahf
out
push
xor
stc
mov
enter
or
je
push
cld
rcrl
inc
push
sbb
mov
push
in
or
adc
fidivrl
push
imull
adc
xchg
cmpsb
push
push
xorl
movsl
movsl
ret
inc
outsl
popf
and
std
pusha
or
inc
pop
mov
inc
pushf
int
in
sub
pop
jno
aad
sub
mov
mov
movsl
leave
jl
inc
and
scas
sbb
inc
sbb
xchg
dec
repnz
dec
pop
cld
test
fldcw
pop
pop
cwtl
mov
cmp
repz
into
mull
xor
add
mov
and
jmp
jo
dec
pop
xchg
pop
ss
xor
mov
in
push
jmp
icebp
cs
lea
mov
ret
sub
sub
data16
movsl
lcall
ljmp
jb
stos
dec
pop
xor
jg
pop
lcall
and
in
mov
mov
dec
fwait
pop
pop
daa
push
xor
jb
repnz
mov
sub
and
jecxz
lods
mov
mulb
inc
ds
jo
and
mov
sub
xor
filds
roll
adc
sub
xor
cmp
mov
jns
mov
dec
mov
jo
mov
js
pusha
pop
add
lods
negl
leave
pop
scas
in
into
xchg
fsubl
lea
test
sbbb
mov
and
mov
imul
pop
les
push
ja
aam
mov
jmp
sub
xor
orb
in
scas
test
rorl
aad
mov
sub
pop
dec
dec
or
cli
mov
lods
sbb
xchg
mov
jge
test
sbb
or
pop
sub
leave
dec
ja
sahf
jo
mov
int3
aam
lds
orb
pop
dec
dec
xor
aad
xchg
hlt
push
stos
ret
stos
loopne
adc
or
sbb
lods
xor
je
adc
aad
pop
scas
sti
mov
outsb
jmp
or
xchg
inc
ja
in
iret
imul
movsl
push
jns
jmp
hlt
push
cmp
cli
jmp
xor
and
outsl
xchg
mov
push
inc
lret
jno
push
pop
ja
jnp
jecxz
mov
jl
cmp
sbb
loop
in
push
testl
idivb
mov
das
mov
scas
push
dec
lea
stc
push
sbb
and
xchg
jbe
mov
mov
jl
sub
inc
adc
inc
dec
loope
xor
dec
pop
nop
sbb
cltd
xchg
inc
and
rcll
pop
and
ds
fildl
mov
mov
loop
pop
sbb
fildll
cld
lock
je
sbb
adc
add
push
ljmp
sbb
dec
repz
or
lahf
or
inc
xchg
insb
fs
cmpsl
or
dec
das
mov
dec
mov
jbe
popa
dec
sti
outsb
cmpsl
mov
mov
insl
subl
or
ljmp
les
adc
jbe
in
mov
jb
cmp
arpl
dec
inc
aad
arpl
cmpsb
inc
cltd
enter
jmp
push
out
mov
jl
pop
cli
xor
add
cs
pop
mov
aaa
pop
mov
fisubs
dec
jne
sti
jmp
shrb
loop
shll
insl
jbe
xsha256
cmpsb
nop
fs
adc
sub
mov
insb
or
cltd
pusha
dec
adc
fidivl
push
push
cli
popf
or
je
repz
jmp
les
push
repz
mov
mov
xchg
shl
mov
incb
mov
dec
loop
mov
fdivrp
and
movsb
dec
addr16
adc
pusha
fisttpll
pop
mov
push
jb
je
jp
inc
cmp
mov
lahf
jae
call
loop
pop
pop
into
dec
mov
mov
sahf
lea
out
mov
je
and
inc
movsl
mov
xchg
lret
lret
or
inc
into
in
lds
add
cmpsl
call
push
addr16
ljmp
fstps
push
cmc
mov
ret
fs
rcll
pop
rcrb
into
jae
sti
and
int3
sub
jp
add
test
imul
mov
adc
push
test
mov
pop
orb
arpl
xchg
mov
inc
ja
test
lock
sub
loop
lds
mov
dec
ja
push
jp
pop
sub
cs
jae
daa
std
sbb
push
mov
add
jmp
mov
mov
js
cwtl
adc
mov
jno
pop
sub
insl
mov
and
mov
cli
xchg
pop
rorb
arpl
je
insb
xchg
sub
add
pop
fcmovnu
fistps
out
jo
dec
call
xchg
imul
jg
mov
and
dec
cmp
loopne
cmp
sti
in
stos
mov
mov
inc
inc
xchg
shll
iret
mov
negb
out
fst
xor
lods
push
bound
hlt
push
inc
jno
push
xchg
cli
mov
mov
dec
fs
shll
mov
outsb
loope
adc
ljmp
xor
scas
jmp
je
aas
in
pusha
sub
fsts
jmp
outsl
inc
jle
jne
aaa
mov
movsl
loopne
scas
push
pop
lret
cmp
cld
sbb
rcl
push
pop
jb
lret
inc
ss
stc
cmpsb
js
scas
push
dec
sbb
push
inc
add
push
xchg
outsl
adc
jne
push
xor
cltd
xor
jmp
cld
mov
mov
iret
cmp
mov
xchg
lock
ljmp
out
dec
adc
mov
in
call
xchg
adc
leave
fldenv
cmpsl
into
leave
cmpsb
test
push
aad
mov
cmp
push
or
std
xchg
test
adcb
out
mov
cmpsl
loop
xchg
lahf
cmpsb
test
call
lahf
ja
imul
jo
sbb
jge
xchg
pusha
xlat
out
pop
ja
mov
idivl
outsb
dec
das
adc
scas
mov
xor
cmpsl
xor
push
call
jp
mov
push
cmc
mov
imul
cmp
outsl
inc
jg
dec
jno
je
or
add
roll
and
dec
push
inc
cmp
or
adc
nop
aas
sbb
sub
imul
inc
sub
sub
faddl
cmp
xor
roll
and
fcomi
sti
mov
outsb
xor
or
stos
cmp
xchg
popf
dec
sbbl
in
sbbl
push
inc
dec
out
into
fucomi
mov
rcrl
test
jmp
or
mov
sbb
leave
cmp
lock
fnstcw
and
add
aas
mov
lds
lea
scas
testl
hlt
pop
jecxz
addr16
in
aam
fdivr
mov
js
jne
scas
mov
daa
add
jmp
sbb
inc
mov
add
aam
fs
xchg
in
jno
and
cli
pop
adcl
mov
fldcw
sub
outsl
or
jns
imul
mov
out
mov
fldcw
sub
outsl
or
jns
imul
mov
out
mov
fldcw
sub
outsl
or
jns
imul
mov
out
mov
fldcw
adc
outsl
jle
icebp
xchg
pop
sbb
outsb
sub
push
pop
and
ficomps
out
lods
sahf
fisttpll
in
pop
sbb
outsb
sub
jge,pt
insl
ficomps
out
lods
pop
fisttpll
in
pop
sbb
outsb
sub
jge,pt
insl
fidivs
out
lods
sahf
cwtl
loope
lret
pop
in
add
add
test
mov
call
lret
inc
out
cmc
stos
das
push
dec
lds
loope
push
mov
jnp
sub
add
and
lods
and
lret
xchg
sarb
mov
jo
fisubs
jb
jge
push
into
fdiv
or
pop
or
adc
outsb
sub
mov
inc
dec
loope
inc
test
popa
mov
xor
std
scas
repnz
mov
push
pop
mov
popa
cwtl
fidivrl
xchg
insl
int
jno
out
add
repnz
sub
shlb
lea
lods
lods
into
enter
jmp
dec
or
push
pop
push
dec
jge,pt
insl
ficomps
out
lods
sahf
fisttpll
test
jb
or
push
xor
xor
aad
jmp
mov
call
bndstx
dec
sub
jl
mov
fsubr
ret
loopne
rcrb
dec
pop
adc
dec
push
pop
push
dec
jge,pt
insl
ficomps
out
lods
sahf
fisttpll
in
pop
sbb
outsb
sub
jge,pt
insl
ficomps
out
lods
sahf
fisttpll
in
pop
sbb
inc
push
xchg
stos
cmpsl
pusha
repz
jae
pop
sbb
int3
dec
sub
cs
rclb
out
jae
fists
jl
pop
ljmp
rcrb
pinsrw
fs
in
fldcw
enter
lods
arpl
dec
lea
movsb
dec
xor
jns
cmp
std
add
xor
leave
mov
sbb
pop
mov
cmp
gs
pop
mov
sbb
sub
movsl
hlt
xchg
out
fstpl
inc
call
pop
nop
fidivl
pusha
push
cmp
movsl
shrl
jo
js
inc
rcll
sbb
movb
sbb
fscale
addr16
popa
and
inc
rorl
xchg
das
or
cmp
shll
cli
outsl
adc
dec
pop
aad
std
imull
cmp
jge
xchg
rorb
data16
mov
push
subb
or
mov
mov
sub
push
mov
and
xchg
pop
mov
ljmp
xchg
and
enter
jbe
cmpsb
aas
ret
shrl
xchg
mov
subb
mov
pop
es
aad
adc
or
and
xor
fs
imul
push
xor
add
mov
aas
dec
inc
sub
lret
push
and
xchg
xor
pop
cmp
cli
xchg
insb
mov
je
andl
inc
out
fwait
add
inc
in
xor
sti
jo
std
dec
rclb
inc
mov
in
jnp
imul
rorl
dec
inc
cmpsb
test
fwait
mov
imul
call
and
ficomps
rcr
ror
jb
cs
mov
push
sti
test
mov
mov
hlt
mov
out
outsb
addr16
dec
sub
jno
jno
add
inc
shll
insb
jne
lock
test
xor
mov
adc
in
cmovb
addl
xchg
xor
and
cwtl
addr16
dec
ss
jbe
cmp
fcmovne
lret
movsl
xor
jp
sub
inc
in
popf
pop
mov
sbb
sahf
sub
or
mov
fcmovnbe
cmp
or
cld
or
inc
outsb
leave
out
xchg
sti
mov
int
loope
mov
je
mov
and
adc
or
test
mov
pop
mov
mov
mov
cwtl
mov
xchg
adc
adc
add
dec
adc
jl
or
adc
stos
push
and
movsl
xchg
push
mov
lods
lock
xchg
jecxz
clc
mov
sbb
xchg
sarb
aas
mov
push
fiaddl
adc
lds
icebp
jbe
pop
pop
adc
shll
xchg
mov
or
sbb
sub
cltd
fsubr
push
in
in
popf
xor
dec
jns
add
in
mov
std
pop
add
push
ss
lret
popa
lret
scas
fisubrl
xchg
lcall
inc
loop
mov
lds
int3
sbb
in
div
cmpsb
loopne
stos
jp
dec
movsb
inc
imull
insl
or
mov
repnz
outsb
out
sbb
int3
adc
es
psrlq
fld
xchg
cwtl
and
stos
mov
push
pop
mov
pusha
add
scas
pop
pop
stos
or
not
push
jg
lock
cltd
adc
cmpsb
shlb
dec
sub
iret
sbb
mov
mov
es
addb
mov
pop
lea
cmpsl
xor
mov
cmpsb
gs
mov
not
sti
adc
sub
das
mov
jne
mov
cmp
inc
xorb
ret
mov
cmpsb
adc
push
test
jb
mov
adc
inc
mov
mov
mov
xchg
into
cs
lret
cld
adc
mov
fs
inc
mov
fisttpl
or
pop
push
addr16
imul
adc
cmp
dec
idivb
or
pop
sub
js
ljmp
ret
adc
pop
inc
sbb
mov
xor
jo
iret
add
push
jb
xchg
push
scas
repz
cmp
loopne
lea
cmp
inc
add
leave
mov
or
sub
outsb
cmp
fdivs
lods
xchg
lock
or
inc
xchg
mov
and
fildl
pop
cmp
mov
sub
and
xchg
pop
mov
stos
aad
and
iret
arpl
xor
pushf
fwait
adc
pop
shlb
addl
mov
pop
push
or
add
popf
in
lcall
adc
and
push
cmp
movsl
iret
lret
cmc
testb
cltd
mov
cmovbe
jl
ret
xlat
cmp
fxch
and
enter
sbb
cmp
int
std
xchg
stos
rcll
push
inc
cmp
fwait
xor
outsb
pop
dec
xchg
cmc
shlb
sub
pop
pushf
jno
je
outsl
insb
push
je
and
add
mov
push
cmpsl
sbb
call
sbb
repz
and
popa
neg
scas
addb
out
pushf
mov
call
and
sub
xchg
jmp
add
outsl
je
xor
leave
jl
ja
pop
not
add
jns
inc
ficoms
enter
enter
lahf
mov
sbb
mov
enter
cmpsb
ret
push
lret
nop
pop
add
sbb
cltd
or
jo
push
mulb
mov
movsl
add
rcr
mov
mov
lcall
in
jbe
jmp
sbb
sbb
lret
pop
mov
and
outsl
sbb
xor
mov
fbld
aad
addr16
subb
stos
test
fnstenv
stc
test
mov
pop
xchg
fs
arpl
and
xor
pusha
imul
xchg
das
push
packuswb
jge
add
loop
movsb
sub
mov
pop
incl
test
fwait
aas
enter
lods
lcall
adc
push
and
and
xor
add
hlt
pushf
pop
dec
or
mov
les
gs
in
xchg
fisttps
pop
or
cwtl
pop
jmp
cmp
xchg
test
aaa
mov
cmp
sbb
xchg
js
mov
imul
out
and
mov
inc
test
add
mov
and
xor
and
cmp
addl
and
rcrl
js
lret
sarl
add
mov
mov
fsubrs
push
pushf
add
pop
adc
cwtl
adc
add
sub
pop
int
shl
pop
cmpsl
xlat
adc
js
mov
push
or
popa
push
int
pop
pop
xchg
xchg
push
xchg
into
jg
cmp
mov
push
cmpsl
ja
xchg
mov
imul
in
icebp
in
addr16
mov
mov
mov
addb
in
xor
loope
sub
mov
inc
adc
test
call
inc
les
or
add
stc
call
loope
mov
mov
leave
pop
repz
cmp
push
pop
cmpsb
adc
mov
dec
testb
imul
lcall
push
adc
es
pusha
push
xchg
and
adc
imul
insl
xchg
mov
push
push
mov
xor
mov
pop
mov
inc
dec
fwait
and
or
lret
adc
shlb
mov
xchg
mov
int3
stos
mov
sbb
jae
movsb
lods
sti
lods
rcll
loop
jmp
ret
stc
js
mov
mov
jns
xchg
or
ret
and
sbb
stos
pop
jmp
cwtl
stc
mov
xor
push
jle
mov
jne
xor
cmp
cmp
push
daa
jno
repnz
mov
fs
cmpsb
cmpsl
cld
xchg
xchg
jae
lock
dec
jno
mov
cmp
les
divl
and
pop
adc
mov
fldl
adc
insl
dec
imul
shlb
out
fstpt
out
outsl
ja
add
pop
sbb
test
jno
and
iret
xchg
jb
js
out
icebp
es
scas
ja
mov
iret
pop
mov
inc
stos
mov
mov
adc
cmp
sbb
xchg
mov
pop
aas
adc
ret
mov
ret
jl,pt
push
orl
push
mov
jb
xchg
pop
scas
cmp
dec
in
sbb
jo
or
inc
shlb
int3
cwtl
adc
xor
add
outsb
insb
xor
lock
mov
sbb
cmp
ss
xchg
cmp
test
stos
add
decb
ss
cmp
loopne
sub
xor
mov
mov
clc
insl
ss
call
xchg
mov
adc
dec
and
das
jnp
scas
xchg
test
sub
mov
lret
add
xchg
outsb
adc
cmpsb
and
mov
rorl
mov
mov
xor
inc
fmul
int
dec
mov
inc
xchg
test
push
imul
dec
dec
outsw
lahf
repnz
add
mov
pop
mov
jb
fwait
insb
inc
cld
jae
jb
pop
sub
mov
mov
popa
in
jge
mov
add
or
pop
dec
xlat
push
mov
adc
mov
data16
mov
les
enter
lds
adc
xor
aas
stos
cmp
test
scas
lock
vmread
in
push
loopne
dec
xchg
stos
mov
sub
rorb
stc
push
js
clc
dec
std
das
lgs
fnstsw
mov
imul
mov
xchg
scas
aaa
fmuls
push
lock
or
scas
xor
push
mov
sti
xor
nop
xor
imul
cmpsb
cvtdq2ps
sti
sti
mov
or
ljmp
lock
push
jae
adc
leave
cmp
xor
subb
jmp
add
xor
mov
lds
nop
sbb
and
and
push
test
inc
fs
jo
adc
divb
popf
testl
cs
or
mov
dec
ret
in
shlb
mov
imulb
fsub
jmp
add
fisttpl
scas
or
xor
cs
cs
sub
xor
lock
cmpsb
lods
pop
sti
js
and
stos
cli
or
shrb
out
xorl
ret
push
repnz
stos
sbb
int
pop
mov
rclb
sub
or
je
out
fwait
jp
pop
dec
leave
lea
fidivs
push
lods
or
cli
out
scas
and
mov
lods
jg
roll
adc
mov
mov
out
leave
push
push
js
rol
jmpw
out
mov
addr16
xor
out
xchg
mov
fcomip
in
xchg
mov
outsb
cltd
and
inc
mov
rclb
je
je
push
pushf
push
and
mov
jp
xchg
xor
or
add
testl
dec
aaa
mov
mov
xor
rorb
push
xchg
mov
xchg
out
push
cmp
lret
mov
cmpsl
ss
adc
add
mov
or
add
sub
xor
imul
fst
cmc
adc
imul
daa
subl
imul
leave
adc
jne
ja
jl
inc
cmp
jb
popf
dec
add
mov
ret
dec
sbb
sub
cmp
push
or
jmp
movsb
nop
dec
xor
jle
mov
cld
fnstenv
enter
sbb
in
aaa
sub
mov
js
mov
jb
xor
xor
ja
test
pushf
cmp
fwait
in
push
pop
inc
dec
popa
xor
pushf
pop
sub
xchg
xor
push
and
imul
dec
sub
out
pop
xchg
pop
jmp
mov
sbb
sub
jmpw
jbe
subl
mov
xor
sbb
in
aad
dec
sub
mov
sub
mov
jecxz
sub
mul
and
xor
mov
and
movsb
sbb
and
jne
jl
int
pop
out
aas
lock
adc
ret
mov
outsb
fisttpl
dec
mov
test
out
jb
fisttps
mov
test
stc
insb
mov
jo
cli
push
cmp
test
jo
idivl
repz
sub
scas
cld
clc
ret
adc
andb
and
jecxz
pop
imul
mov
iret
int3
fldl
test
mov
xchg
movb
sub
cmp
jnp
cmpsb
xor
jnp
dec
fdivr
pop
aad
add
sub
imul
inc
mov
inc
dec
xchg
push
je
or
pop
cmp
popa
shll
out
aas
push
inc
test
cltd
fbld
fs
dec
mov
pop
cmp
ret
pop
dec
ss
mov
mov
mov
aas
shl
stc
and
add
inc
push
cmp
jmp
pop
ljmp
mov
rcr
lock
mov
jae
fs
xchg
dec
repnz
push
inc
mov
aam
inc
adc
xchg
mov
lods
inc
cmp
xchg
push
ror
lcall
and
pusha
lods
movsl
enter
inc
sarb
icebp
inc
mov
adc
xchg
pop
rcll
mov
imul
cltd
mov
sub
lahf
dec
subl
out
pop
movsl
xchg
dec
pop
mov
add
mov
inc
or
xchg
popf
add
xchg
jbe
cmp
lea
push
push
mov
imul
inc
aad
scas
adc
aad
subl
shll
dec
dec
pushf
xchg
xchg
sub
adc
or
push
dec
jl
sbb
pop
daa
in
ret
add
inc
push
jecxz
lret
adcb
shlb
mov
mov
cld
or
sub
or
mov
pop
inc
dec
sub
and
pushf
popa
out
aaa
cmp
test
push
aaa
pushf
iret
jmp
call
jecxz
loopne
mov
leave
int3
jg
inc
adc
pop
xchg
lcall
scas
dec
xchg
push
ret
mov
mov
xchg
ss
fisttps
cmc
fdivrs
ss
test
jo
out
jg
ss
push
int3
push
imull
xlat
sub
adc
sbb
mov
popa
lret
jae
jg
fisubrs
hlt
add
rcl
loop
into
sysret
cmp
ss
mov
rorl
test
sar
jno
pusha
push
icebp
sub
push
ret
or
cltd
push
pop
arpl
lock
xlat
sbb
xchg
popf
je
mov
mov
les
movb
mov
cmpsl
sti
and
jle
fadds
or
rcrl
outsl
ja
push
xchg
push
mov
into
fcmove
ret
and
adc
or
jg
subl
mov
out
jo
or
jo
mov
and
into
sti
lahf
and
dec
das
or
push
cmp
pop
push
mov
pop
subl
dec
mov
or
dec
cmpsb
or
pop
add
loop
fistpll
lcall
popf
mov
xchg
jae
dec
out
mov
iret
adc
je
ficoml
repz
mov
dec
push
adc
popa
rclb
loopne
mov
dec
pusha
add
sahf
cmp
xor
in
call
popa
dec
outsb
outsb
dec
cmp
pushf
push
mov
popf
out
sub
pop
and
and
out
mov
shr
call
mov
aas
adc
imul
add
or
cld
sbb
xor
roll
in
xchg
insl
stos
dec
and
into
cli
push
inc
std
enter
mov
sbb
push
inc
jp
inc
popa
cmp
adc
arpl
cmp
ret
test
mov
mov
sbb
movl
rorl
scas
mov
mov
stos
xchg
subl
inc
adc
or
in
mov
pop
nop
xor
insl
iret
pop
leave
push
adc
das
enter
leave
xlat
push
xor
das
pop
and
pop
sub
jne
inc
push
inc
cmpsl
xchg
fiaddl
cld
sbb
loopne
clc
stos
sub
mov
inc
mov
in
enter
imull
cs
je
pop
xor
xor
inc
stos
mov
add
pop
jg
pushf
pop
ret
ds
xor
mov
or
inc
mov
mov
or
adc
push
test
loop
ljmp
jp
insb
stos
mov
sub
adc
and
repnz
ret
test
or
mov
xchg
mov
sahf
or
dec
xchg
xor
push
cmp
mov
fsubrs
adc
test
mov
sub
aas
imul
xor
orb
and
stc
out
push
aaa
icebp
repnz
jae
cld
leave
lea
inc
xor
aaa
jne
cwtl
sub
adcl
rcll
pop
xchg
loop
movsl
andb
decl
into
pop
faddl
lea
adc
sbb
xor
leave
jge
jb
fisubs
inc
aas
hlt
sub
test
xorl
fcmovnu
add
push
mov
cmp
imul
mov
xchg
enter
mov
fidivs
mov
cmc
sahf
pop
jbe
sub
adc
shlb
shr
stos
inc
add
leave
xor
std
out
jno
fcomps
push
mov
jbe
inc
push
sbb
sbb
negl
lds
lcall
adc
inc
sub
push
mov
test
push
orl
and
popf
push
mov
mov
mov
mov
ret
push
add
fmul
sub
ret
xor
sahf
xor
mov
lret
dec
inc
xchg
adc
addr16
decb
stos
xchg
out
jb
push
jp
adc
push
and
ret
loop
aam
add
scas
mov
std
jecxz
sbb
loop
cmp
add
pop
stos
idivl
push
sahf
insb
enter
cmp
pop
or
inc
lahf
mov
mov
ret
mov
gs
out
mov
xchg
dec
xlat
popf
pop
xchg
jbe
data16
mov
mov
xchg
mov
xchg
mov
fistps
push
xor
mov
sbb
sahf
sahf
incb
push
adc
int
popf
hlt
pop
and
sbb
mov
jl
and
and
xchg
scas
pop
pop
ss
jno
into
xchg
notl
movsl
sbb
and
in
xor
push
call
mov
inc
pop
orb
ret
sub
jp
mov
shll
sub
out
push
addr16
and
jge
popa
shll
sbb
insl
sti
push
mov
insl
mov
iret
pop
addr16
push
sbb
movsl
ret
pop
cmpsb
cwtl
int
inc
mov
jae
aad
out
and
xchg
add
call
mov
in
inc
faddl
es
mov
xor
add
sub
xchg
out
mov
inc
adc
fmuls
lea
cltd
test
test
push
jmp
inc
inc
aas
popa
dec
sub
mov
mov
xchg
scas
xchg
jnp
mov
in
xor
sbbb
cmc
sbb
mov
arpl
xchg
adc
addb
dec
call
xchg
mov
xchg
push
mov
inc
cmp
jns
pop
jle
cltd
int
mov
cmp
ja
pop
mov
movsl
pop
rclb
xor
pop
sbb
xchg
mov
mov
fnstenv
mov
fbld
testl
ljmp
cmp
clc
xorb
pop
adc
fsts
mov
mov
movsl
gs
cmp
shrl
dec
enter
sti
into
sub
cmp
sbbb
xor
inc
int
xlat
jne
sbb
sbb
mov
sbbb
pushf
imul
addl
out
inc
insb
lcall
mov
and
test
lret
shll
insb
aas
or
stos
jo
sub
jns
ds
jnp
mov
das
pop
xor
sarb
jno
and
xchg
inc
sahf
and
dec
hlt
mov
xchg
push
adc
pop
lods
movsl
sbb
mov
test
imul
popf
shl
hlt
xchg
push
sub
add
lea
sbb
jnp
dec
rclb
or
add
cltd
cwtl
pop
mov
adc
dec
rorb
xchg
out
arpl
call
outsb
sub
jge,pt
insl
ficomps
out
lods
sahf
fisttpll
in
pop
sbb
outsb
sub
jge,pt
insl
ficomps
out
lods
sahf
fisttpll
in
pop
sbb
outsb
sub
jge,pt
insl
ficomps
out
lods
sahf
fisttpll
in
pop
sbb
outsb
sub
jge,pt
insl
ficomps
out
push
xor
add
adc
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
sahf
xchg
xlat
stos
test
push
sbb
xchg
xchg
pop
out
hlt
jle
outsb
sahf
mov
mov
data16
cli
incb
and
cmpsb
push
xchg
xchg
xchg
pop
mov
jle
outsb
sahf
mov
ss
pop
into
dec
test
dec
push
jns
aad
pop
mov
lahf
cmp
es
pop
mov
push
cltd
std
adc
movsl
and
rcrl
lds
subl
jb
jno
inc
pop
push
stos
fisubs
mov
push
push
adc
addl
or
dec
xor
popa
daa
in
aam
out
mov
mov
mov
or
idiv
push
outsb
sahf
out
es
test
push
cmpsl
mov
and
mov
push
out
or
xor
fidivrs
push
push
xchg
and
xor
dec
gs
pop
cmc
push
cmpsb
mov
movsl
xchg
push
mov
testl
pop
push
sub
and
pop
push
stos
pop
cmpsb
dec
fmulp
jns
mov
insb
push
pop
es
mov
data16
jbe
pushf
out
push
and
jo
xchg
ficomps
dec
push
jle
outsb
mov
clc
inc
call
sbb
loopne
repz
repnz
mov
sbbb
push
mov
arpl
ja
addr16
xor
sub
loopne
jecxz
icebp
test
cmpsl
add
stc
jo
jno
push
lret
jne
add
jbe
inc
out
push
push
cmpsb
push
mov
xchg
xchg
pop
out
idivb
outsb
sahf
mov
mov
data16
jbe
inc
out
push
push
cmpsb
push
mov
xchg
xchg
pop
out
idivb
outsb
sahf
es
loope
movsl
sarl
push
dec
gs
pop
sub
aas
mov
push
pop
jecxz
out
sub
add
dec
dec
add
push
insl
popa
push
xchg
filds
sbb
sbb
sub
mov
or
xor
stos
test
stos
adc
addr16
leave
dec
mov
stc
imul
add
sbb
lret
dec
pop
popf
roll
mov
jo
lock
and
fstp
es
bound
mull
push
and
xchg
mov
adc
jp
dec
aad
aam
sbb
cmp
out
cmp
push
mov
pop
cli
mov
imul
mov
iret
lret
add
enter
and
and
scas
pop
rolb
ljmp
xchg
or
daa
dec
mov
scas
lods
xchg
test
fidivl
sub
mov
data16
inc
mov
ja
repnz
cmc
int3
ret
shlb
loopne
push
cs
in
stc
sub
mov
push
movsb
dec
pop
xchg
lods
imul
into
pop
clc
cmp
popf
adc
or
push
push
call
xor
fmuls
pop
addr16
jb
xor
cwtl
mov
mov
push
push
dec
aaa
xchg
clc
add
stos
cmpsb
lret
inc
pop
jle
or
or
scas
dec
imul
in
push
lock
sub
sahf
mov
dec
fmul
sbb
sbb
sbb
popf
mov
xor
mov
push
add
dec
out
or
adc
sub
out
mov
mov
stc
call
sbb
push
mov
lahf
adc
daa
or
addb
sub
inc
test
leave
pop
pop
clc
js
sub
jo
arpl
icebp
insl
pop
add
cld
cli
addr16
adc
push
dec
jo
div
dec
mov
es
or
addr16
push
pop
xor
sbb
pop
les
fidivl
dec
xchg
lods
and
sub
adc
push
je
jns
and
jnp
sub
ljmp
inc
gs
cmp
ret
loope
adc
pop
jg
sub
add
mov
sbb
dec
lods
add
sbb
adc
xlat
sbb
jle
push
jge
or
jp
test
xchg
in
and
and
dec
test
jmp
jno
xchg
lds
es
lret
iret
push
adcl
mov
xchg
ret
and
push
sbb
fdivl
ret
cwtl
cmp
jbe
push
shll
adc
mov
sub
mov
jnp
xor
pop
and
cmpsl
mov
mov
loope
std
clc
inc
inc
jo
out
push
daa
inc
stc
hlt
test
sar
xchg
add
sti
push
lds
add
xor
cmp
mov
add
decb
lret
xchg
xor
mov
cltd
in
dec
enter
hlt
pop
les
mov
xchg
cmp
out
or
xchg
pop
lods
les
lods
gs
xchg
push
mov
pop
pop
ss
mov
or
leave
gs
sbb
pop
push
cmp
jge
jge
iret
inc
xor
ja
jo
das
jno
orb
mov
xchg
add
dec
out
push
xor
sahf
mov
jae
xor
xchg
sbb
mov
mov
call
ficomps
and
lcall
inc
sarl
outsl
sti
pop
push
sahf
orb
sub
or
push
pop
test
and
jl
fnstenv
mov
dec
ja
stc
mov
shlb
in
jnp
movsb
arpl
pop
inc
sbb
xor
add
insl
mov
mov
pop
push
fs
subl
clc
add
adc
mul
and
cmp
pop
xor
sbb
sub
lods
in
jle
pop
rcl
pop
iret
lret
iret
xor
addr16
test
sahf
jo
cmp
push
pop
jae
sbb
and
cmp
pop
sbb
stos
out
dec
adc
fs
add
mov
ds
xchg
adc
fldl
jecxz
dec
loop
les
inc
aam
notrack
mov
or
add
rcl
loopne
and
inc
xlat
les
push
push
call
imul
xchg
int
mov
jae
shl
lods
aaa
or
ja
pop
inc
fcompl
cltd
mov
dec
int
sbb
ljmp
pop
adc
pop
ja
in
push
ljmp
sbb
ror
loopne
xchg
push
clc
out
mov
adc
lret
jecxz
cltd
out
fwait
shrb
sbb
pop
xchg
ljmp
pop
loop
mov
repz
pop
outsl
and
xchg
and
es
push
ret
fdivl
shr
js
jl
cld
mov
out
in
test
push
ds
lock
xchg
dec
nop
outsl
cmp
sbb
ret
loope
fldcw
in
inc
cmpsl
sar
push
add
cmp
popa
mov
inc
dec
stos
aad
mov
mov
inc
mov
jecxz
add
adc
mov
lahf
loop
and
jno
test
movsb
jnp
lods
shlb
js
int
test
pop
dec
mov
jmp
sub
sti
or
jecxz
popa
jle
push
mov
loope
clc
imul
shlb
pop
std
mov
inc
ficomps
inc
loop
inc
or
test
push
adc
or
insb
imul
or
mov
and
shll
out
cmp
aaa
stos
inc
daa
das
gs
inc
pop
inc
in
xchg
int3
mov
movsl
ret
mov
incl
sub
ss
lea
push
cmpl
mov
mov
add
ret
cmpsl
cmp
mov
sbb
stos
pop
negb
fucomi
ret
jns
stc
outsb
out
sahf
jno
into
xchg
mov
jmp
pop
dec
ret
inc
mov
test
or
mov
pop
je
xchg
cmp
shl
sub
ja
and
int3
ror
cmp
and
mov
pop
dec
rolb
sbb
iret
mov
cmpsl
sbb
out
inc
aam
js
sti
lds
outsl
push
nop
jo
sahf
push
push
inc
push
lret
popa
mov
xor
or
repnz
dec
aad
cmp
push
outsb
lea
or
aam
sbb
rcrb
rol
xor
pop
push
dec
jns
ja
fdivl
ss
push
add
aaa
aam
stos
cltd
mov
test
cld
ljmp
push
aaa
outsl
cwtl
orl
and
pop
sarl
or
cmp
rorb
movsl
fnstsw
xor
pop
lods
std
setbe
mov
shl
je
dec
mov
push
ljmpw
jge
push
je
and
mov
mov
xor
pop
and
mov
push
into
pop
xor
mov
mov
aas
sub
call
push
adc
rclb
mov
ja
jo
les
add
mov
movsb
add
add
mov
cmc
mov
push
jecxz
sbb
aaa
xchg
fmul
outsl
cld
daa
mov
stc
inc
mov
mov
adc
scas
je
xchg
mov
pop
not
mul
jb
dec
lret
dec
or
xor
mov
xchg
sbb
hlt
cmpb
push
fdivrs
fcompl
push
test
orb
lret
sub
ficoml
push
loope
or
push
fldl
push
rclb
cwtl
gs
xchg
xor
ja
aam
scas
js
ja
or
add
jp
mov
xchg
mov
jns
fadds
mov
sbb
cwtl
aam
nop
in
dec
xor
into
popw
jno
add
xchg
adc
or
stc
mov
mov
je
jmp
int
movsb
jle
call
mov
lcall
or
or
je
adc
jbe
mov
pop
mov
faddl
das
xchg
push
sahf
data16
add
xchg
ss
rolb
rcr
add
icebp
std
xchg
pop
sub
cli
call
jns
xorl
xlat
fldenv
mov
in
sub
push
lahf
imul
jne
inc
and
jo
ret
adc
js
xor
mov
xchg
adc
test
dec
cmp
sahf
movsl
lds
add
cmp
inc
mul
and
aad
jmp
shll
icebp
mov
outsl
xchg
jmp
fs
fcmovnbe
inc
and
cmp
fsubrs
push
pop
mov
sbb
and
mov
push
xchg
jmp
dec
xchg
lcall
mov
jbe
out
out
in
sti
ljmp
leave
cmp
idiv
addr16
xlat
cmp
bound
or
rclb
push
push
fstl
enter
xchg
jmp
fstpt
add
jge
push
add
cmp
dec
scas
mov
adc
insb
loopne
push
lret
jns
pop
repnz
jnp,pn
inc
andl
add
mov
negl
jmp
push
cmp
xor
in
stos
repnz
je
cltd
insl
imul
xchg
sarl
sub
out
clc
lods
mov
push
adc
mov
or
loop
sub
nop
and
xlat
movsb
inc
lcall
push
hlt
popf
pop
in
push
pop
lahf
mov
and
cli
push
test
lcall
sub
cmp
ret
and
sbb
xchg
data16
xchg
out
push
xchg
out
lods
sbb
cwtl
xchg
adc
daa
out
std
shlb
movsl
push
aad
jp
mov
pop
or
fidivs
ret
dec
not
push
cmp
cmpsb
add
addr16
out
dec
push
add
mov
stc
andl
arpl
test
push
mov
pop
clc
mov
int
push
movsl
xchg
les
xchg
or
mov
dec
xchg
pop
les
mov
sahf
push
leave
and
fs
mov
mov
sbb
cmpl
repnz
std
call
fisttpll
jbe
mov
xchg
xchg
loopne
mov
adc
inc
xor
dec
xchg
outsl
inc
pop
dec
jbe
jb
faddl
fld
mov
cmpsl
jb
rclb
xchg
inc
jge
and
fidivl
xchg
mov
inc
mov
push
sbb
stos
popa
adc
and
leave
jbe
pop
push
cmpsl
adc
sbb
and
mov
mov
fucomip
stos
sbb
les
into
sbb
jge
pop
dec
pop
fnstenv
mov
sub
mov
jmp
mov
ja
push
pop
mov
adc
andb
jl
shll
in
loopne
fwait
movsl
dec
or
dec
int
jmp
adc
ja
popf
ret
jp
mov
adc
sbb
push
lods
hlt
out
movsl
xadd
je
movsb
jmp
or
mov
sbb
fbstp
ret
addr16
sbb
sub
popf
es
in
pop
jmp
loopne
xchg
gs
pop
jl
or
cmpsl
or
imul
scas
sbb
add
sub
pusha
jb
cmp
pop
in
inc
dec
xorb
fbstp
pop
int
hlt
or
cwtl
cltd
arpl
and
xchg
mov
xchg
sub
pop
nop
aam
ret
sarb
pop
lret
adc
mov
add
stc
push
xor
push
sbb
int3
cld
hlt
or
test
or
insl
xor
xchg
stos
sbb
adc
sbb
or
test
loopne
outsb
fnstsw
mov
jne
xor
fcoml
std
aad
imul
hlt
push
lds
and
pusha
insl
sbb
aas
xchg
and
push
mov
scas
mov
push
adc
aas
jns
sarb
cld
out
lods
mov
push
imul
mov
in
sahf
in
cmpl
aad
or
daa
adc
int3
mov
popf
call
or
adc
cmpsl
sub
pop
adc
xchg
push
fwait
imul
inc
mov
mov
int3
scas
inc
push
imul
xchg
and
add
jmp
movb
add
push
in
ffree
inc
push
mov
jb
cld
cmp
push
or
and
mov
enter
jecxz
pop
xchg
sti
push
xlat
mov
shr
dec
jmp
pop
loop
stc
xor
cmpsb
mov
out
pushl
mov
mov
sbb
js
gs
roll
and
les
mov
cld
pop
scas
dec
sbb
jae
aam
mov
jg
ffree
in
rol
mov
popa
dec
adc
ret
testl
stos
sub
inc
pop
out
pop
fistps
fimull
mov
xchg
xchg
and
icebp
jge
mov
stos
push
mov
sub
inc
sbb
inc
insb
cwtl
push
and
push
fwait
mov
ljmp
pop
jmp
les
jno
lods
cs
xor
inc
sbb
push
ljmp
imul
add
out
mov
ljmp
jbe
mov
lret
jo
in
fisubl
int3
js
cwtl
mov
or
fdivl
inc
lcall
and
movsl
dec
push
inc
lock
div
xchg
add
push
enter
test
das
fcomi
sbb
push
icebp
xor
stos
ss
adc
mov
sub
out
flds
mov
sti
xor
inc
adc
addl
jo
mov
adc
int3
or
mov
cmp
fnsave
repz
test
into
mov
iret
sub
stos
lahf
ss
pop
mov
lods
cmc
pop
or
fs
stos
in
cmp
sub
sbb
enter
fstpl
lock
pop
insl
jbe
sahf
dec
inc
mov
mov
mov
divb
or
loope
pop
out
int
and
stos
mov
hlt
mov
fiadds
sbb
inc
ret
nop
ds
cmp
lds
mov
pop
out
xchg
cmpb
fstl
cmp
cmpsb
out
cmp
repnz
and
add
in
xor
mov
stos
dec
scas
jg
pop
inc
mov
shlb
xchg
cmp
jecxz
fsubr
xor
repnz
rcl
lahf
jge
fstpt
xor
mov
inc
pop
in
push
movsb
inc
stos
xchg
xchg
mov
stos
out
push
rcl
add
into
fcoml
push
in
jbe
jl
inc
fcomi
and
adc
xor
es
mov
pop
scas
clc
clc
roll
dec
stc
pushf
cmp
arpl
jno
inc
leave
xchg
bnd
pop
mov
jle
jns
jns
mov
adc
ret
push
jbe
out
push
jle
jecxz
and
lcall
loopne
cmc
movsl
add
lahf
ror
sbb
sub
movsb
sbb
movsl
sub
add
inc
mov
icebp
adc
dec
rorl
hlt
xchg
movsb
test
out
sarb
mov
lret
xchg
mov
das
inc
cmp
imul
popf
xor
std
pop
xor
mov
inc
mov
in
cs
out
repz
js
stos
std
lods
pop
fwait
test
std
push
mov
push
popa
jg
jl
mov
mov
lahf
cmp
int
push
mov
mov
xchg
iret
xchg
inc
inc
push
in
mov
or
mov
xor
jl
les
push
cwtl
jnp
pop
mov
mov
xlat
push
ds
sbb
xchg
pop
cld
cmp
repz
sub
xchg
adc
in
and
add
pop
push
mov
xor
xchg
or
push
leave
dec
jg
movsb
mov
and
inc
dec
add
inc
inc
sbb
mov
dec
ja
inc
xchg
or
sbb
cmp
dec
out
les
les
adc
shll
insb
fs
test
and
clc
xchg
and
imul
push
sti
xor
cmc
and
sahf
ror
insl
lea
jge
mov
loopne
fildll
and
arpl
mov
sti
das
mov
imulb
lret
mov
test
testl
sub
lahf
or
mov
int3
les
or
sub
fidivs
lcall
cltd
sarb
sub
rcl
lea
or
cmp
mov
outsl
sub
push
or
fwait
xor
test
fdiv
cmpsb
hlt
or
pop
cmpl
test
lods
icebp
push
sbbl
push
inc
mov
test
addr16
cli
push
push
cmp
les
decl
dec
push
repz
fwait
push
insl
or
fcomip
js
adcl
shrb
insb
fs
cmpsl
rcll
iret
mov
sub
out
roll
mov
cmp
subb
or
fs
mov
fisubrs
ret
sbb
cmpsl
adc
mov
or
pop
repz
les
lods
or
inc
and
inc
dec
xor
jb
xor
jp
inc
add
xor
or
jle
push
mov
imul
mov
inc
jo
inc
icebp
and
aad
aad
sub
test
sbbl
mov
ds
sbbl
xor
mov
lds
push
xlat
xchg
call
and
shl
or
mov
loop
lds
inc
ss
dec
paddusw
lock
mov
add
movzbl
push
pop
cmpsb
mov
sti
or
mov
test
insb
in
xchg
lds
lcall
data16
fisubl
fwait
mul
push
pop
in
iret
mov
xchg
and
jo
push
in
xchg
inc
or
mov
add
lds
nop
repnz
test
jmp
jecxz
push
test
ret
ja
in
dec
lcall
movsb
cmp
xchg
sbb
sub
std
xor
xor
inc
push
insl
nop
mov
test
mov
sub
or
lret
cltd
sub
pop
sbb
int
das
pop
std
jbe
ret
leave
push
jg
jne
dec
cmpsb
sbb
mov
xor
sub
jbe
les
adc
xor
in
test
jbe
mov
xchg
pop
xchg
cmc
ficoms
je
cmp
loop
dec
int
mov
xor
cmc
xchg
cltd
test
mov
rorb
pop
in
adc
dec
fmull
jns
jp
pop
mov
mov
add
scas
lods
cld
dec
lcall
push
sti
add
jl
mov
jno
adc
push
xor
or
pop
insb
iret
pop
inc
add
pop
dec
lods
das
sbb
mov
or
inc
mov
pop
xor
imul
mov
shrl
pop
xchg
mov
sub
mov
push
test
fidivl
and
ret
pop
sub
fnstenv
orl
inc
je
fcoml
movsb
jge
addr16
dec
ror
adcb
aaa
aas
mov
inc
call
sbb
jo
push
popa
addr16
mov
fsubrp
cmpsb
push
insb
mov
fidivrl
jnp
icebp
pop
add
jg
repz
js
mov
test
lods
roll
jae
or
dec
and
pop
outsl
dec
xchg
dec
dec
mov
or
outsl
mov
outsb
lods
stos
mov
jns
in
xor
or
cld
dec
test
cmpsb
xchg
mov
or
xor
push
inc
gs
sbb
lahf
lds
jg
mov
pop
jle
dec
pop
xchg
pop
cld
pop
sbb
les
es
enter
insb
adc
ret
clc
movsb
sbb
mov
or
and
aaa
pop
ljmp
mov
jb
xchg
dec
jecxz
pop
fdiv
or
aad
cmp
pop
adc
test
cmp
fs
dec
push
lcall
xlat
fnop
or
mov
inc
lret
fistpll
mov
std
dec
sub
dec
repz
das
mov
push
aad
dec
mov
mov
ja
ss
xchg
xor
rcrl
js
fwait
js
push
push
daa
cmp
or
mov
xchg
dec
pop
jecxz
dec
mov
cmpsl
lock
adc
and
loop
cmp
xor
sub
stos
cmp
fmuls
xchg
imull
arpl
loopne
mov
adc
inc
mov
jg
test
out
xor
aam
ljmp
adc
mov
dec
int
inc
test
testb
je
or
decb
add
push
in
mov
inc
lret
pop
xorb
shrb
mov
ror
cmc
mov
int
rolb
sub
and
mov
pop
xor
mov
int3
mov
ss
mov
pop
sub
shrd
mov
into
and
mov
jne
inc
subl
jbe
inc
out
push
push
cmpsb
push
mov
xchg
xchg
pop
out
idivb
outsb
sahf
mov
mov
data16
jbe
inc
out
push
push
cmpsb
push
mov
xchg
xchg
pop
out
idivb
outsb
sahf
mov
jle
push
fisubs
fdivrp
inc
out
push
pop
jle
mov
xchg
xchg
pop
out
idivb
outsb
sahf
mov
mov
data16
jbe
outsb
push
loope
icebp
sbb
xchg
loope
outsb
or
fildll
pop
decl
mov
inc
loope
in
add
fnstsw
outsl
mov
aas
lea
jge
insl
iret
pop
decl
cmp
mov
in
dec
fnstsw
outsl
mov
aas
lea
fbstp
call
and
xor
scas
in
into
adc
dec
ret
pop
fisubrl
adc
add
outsb
pop
sub
dec
jnp
push
sbb
cmp
mov
out
xlat
xchg
and
addr16
cmpsl
js
les
and
outsb
in
fistpll
roll
or
cmp
test
cs
lahf
adc
mov
rorb
xchg
imul
loop
or
jbe
in
pop
call
dec
lods
pop
push
rorl
shrb
lods
adc
lahf
xor
stc
std
sbb
dec
faddl
lods
dec
bound
popf
jg
pop
lea
sbb
mov
ret
mov
je
sub
mov
popf
outsl
clc
loopne
sti
popf
sub
iret
pop
decl
sub
adc
in
cmc
dec
lds
outsl
movsl
pop
mov
xchg
lea
mov
sbb
mov
dec
into
push
fimull
es
adc
jbe
mov
or
xor
cmp
mov
mov
sub
jmp
jmp
mov
jne
sub
scas
std
pop
in
dec
fnstsw
outsl
mov
aas
lea
jge
insl
iret
pop
decl
cmp
mov
in
dec
fnstsw
outsl
mov
aas
lea
jge
inc
or
sub
shrl
lcall
adcb
out
in
pop
mov
ss
mov
lock
jmp
jl
sub
mov
sub
add
jnp
js
movsb
jns
inc
dec
rolb
push
cld
fisttpll
jp
hlt
aad
dec
leave
mov
call
fsts
push
mov
xchg
decl
rep
iret
jg
mov
or
out
mov
push
es
sbb
add
xor
xchg
inc
inc
lahf
mov
add
mov
add
scas
push
xchg
sub
cmp
jnp
call
in
or
dec
and
sbb
stos
mov
inc
push
pusha
push
adc
ret
cmp
scas
cli
mov
negb
roll
repnz
mov
les
lret
jno
insb
es
cmp
mov
push
xlat
aaa
sbbb
orl
adc
cmpsl
or
iret
xlat
xor
int3
inc
cmp
and
jl
cmp
aam
in
cmp
cmp
imul
jnp
outsb
push
mov
adc
lods
xor
and
sbb
push
rorl
out
push
sub
jl
cld
lods
sarl
adc
cltd
loop
scas
dec
pop
add
out
pusha
imul
mov
sar
mov
in
roll
mov
xchg
mov
xchg
mov
int
fnstenv
dec
repz
pop
xchg
push
or
int3
out
popf
sbb
popf
jb
push
sub
inc
aam
pop
cmpsl
out
or
ret
stos
mov
inc
mov
cwtl
and
push
xor
jno
mov
sbb
orb
xchg
sarb
mov
xor
enter
jge
clc
jo
or
clc
xchg
clc
sbb
xor
lock
adc
sbb
dec
add
add
int3
stc
dec
pop
scas
dec
mov
pop
push
ret
ret
out
or
pushf
push
mov
ret
imul
jmp
std
mov
data16
fildll
dec
jnp
ret
test
out
sub
push
mov
out
test
sahf
cs
adc
sarb
adc
add
sub
adc
xor
add
mov
lods
add
in
pop
pop
mov
sub
jo
sbb
mov
movl
sbb
fisubrl
out
jae
imul
lcall
mov
cmpsl
decb
xor
aam
out
sbb
push
fnsave
ja
and
xor
js
mov
and
pop
inc
mov
lcall
fnstsw
pop
out
hlt
roll
pop
cmp
out
sbb
add
sub
mov
mov
lds
js
test
popf
inc
ds
mov
lret
sub
ljmp
loop
push
mov
jg
sub
leave
mov
jg
mov
jb
xor
push
lds
fs
cli
dec
in
int
adc
cmc
btrl
mov
mov
shlb
xchg
fildl
push
jmp
in
aaa
aaa
dec
fs
fiaddl
or
out
pop
fimull
pop
into
mov
dec
lea
sub
xchg
pop
xchg
int3
stc
jns
fisubl
rorb
insl
cmp
shrl
cmp
ja
fcoml
lret
aam
mov
mul
cmp
add
int3
cmp
or
ret
mov
push
push
mov
rorb
js
loopne
or
movl
cmp
enter
jne
mov
xchg
iret
ret
dec
xchg
stos
inc
imul
jecxz
rolb
cmp
and
lret
out
sahf
and
mov
push
sub
sbb
sbb
cmp
aad
mov
dec
jae
push
add
xchg
xchg
mov
loope
clc
xchg
push
int3
in
lret
inc
dec
xor
lret
loopne
je
mov
test
lahf
jl
ss
lods
stc
lahf
xchg
roll
pop
movsb
jecxz
enter
mov
ret
push
xor
mov
push
and
imul
mov
in
out
jne
adc
adc
push
movsb
inc
cmp
rorl
xchg
std
sbb
repnz
add
sbb
sub
mov
dec
push
iret
dec
mov
dec
mov
inc
jl
test
xchg
mov
pop
dec
xchg
adc
push
add
stc
pop
in
sbb
cld
pushf
mov
mov
cwtl
outsb
push
imul
nop
popl
cmp
pop
aas
or
aaa
and
ret
lods
fs
pop
pusha
adcl
adc
sub
add
cmp
mov
daa
push
mov
iret
inc
mov
adc
hlt
pop
inc
shl
xchg
int
push
adc
xor
xor
in
sub
dec
inc
mov
ds
xchg
or
dec
stc
push
pushf
mov
xlat
fcmove
inc
int
mov
sub
pop
es
fldenv
xchg
sub
sbb
mov
fdivrs
daa
cs
andb
sbb
sub
or
mov
mov
sahf
lcall
dec
cwtl
aad
xchg
push
js
adc
cmp
jge
rorl
xchg
add
adc
dec
cli
fsubr
sub
mov
cwtl
cmpsb
clc
outsw
lahf
sub
rolb
mov
jnp
fldl
vmptrld
sub
mov
mov
mov
mov
das
xchg
mov
outsl
ret
loopne
fisttps
hlt
imul
lods
das
outsb
xchg
aas
test
push
das
incb
negl
scas
sub
lods
jbe
fdivr
xlat
cmp
xor
mov
in
inc
mov
out
dec
xor
push
push
or
in
mov
jo
jno
sbb
jle
xor
gs
arpl
outsl
cmc
sub
cmp
mov
mov
jae
outsl
mov
jle
in
push
add
sub
daa
test
add
lret
mov
mov
aam
outsl
imul
pop
or
pop
data16
add
loop
dec
icebp
xchg
mov
icebp
and
pusha
test
pop
iret
mov
lret
add
jp
leave
jl
pop
lods
mov
adc
les
repz
stos
mov
mov
repnz
xchg
pop
inc
push
dec
jb
dec
inc
sbb
ljmp
and
mov
adc
ss
cltd
dec
mov
mov
mov
push
and
testb
sub
lods
ljmp
outsl
test
lret
mov
xor
push
orb
cmp
out
test
sbb
mov
xor
xor
in
ficoml
push
fiadds
mov
gs
sahf
dec
jg
cmpsb
shll
push
push
clc
or
mov
aaa
jg
jle
adc
bound
dec
aad
cmp
xchg
adc
aas
aad
inc
pop
push
inc
rorl
aaa
mov
outsb
inc
dec
out
iret
or
jl
fidivl
sub
xchg
cmp
mov
push
add
out
call
push
lret
jno
int
hlt
insl
inc
test
mov
sahf
cmp
in
imul
xor
into
jge
cli
jo
add
adc
rcr
adc
sub
lahf
fsts
fidivrs
mov
dec
adc
imul
push
lret
or
push
aam
mov
and
ret
aaa
pop
into
push
loopne
adc
insb
mov
loope
mov
dec
sbb
lods
jbe
jmp
in
cmp
xor
push
popf
or
std
aam
popa
inc
dec
sti
ljmp
xlat
clc
jle
icebp
inc
jbe
xlat
mov
and
cs
ja
bound
je
loop
xorl
xor
pop
inc
and
divl
inc
jne
ds
add
mov
adc
or
ss
sahf
int
push
cmpsl
mov
cmpsl
xor
dec
pop
push
insb
lret
jge
dec
lret
push
arpl
pusha
add
xchg
nop
push
cli
mov
jne
adc
aam
fisttpl
mov
push
fs
dec
iret
adc
icebp
das
pop
test
movsl
test
inc
std
cmp
nop
insb
sarb
int3
pop
lods
push
in
jnp
mov
mov
cwtl
inc
sbb
inc
pop
jle
pop
pop
dec
add
push
gs
add
xchg
fsub
push
mov
sarb
sbb
cs
pop
xor
or
inc
hlt
mov
adc
ja
push
int3
mov
arpl
fnstcw
cmovb
inc
or
loop
cs
int3
bound
cmp
jmp
loopne
and
outsb
push
mov
rol
in
sti
in
dec
xchg
lret
jg
xchg
lret
xchg
in
clc
inc
hlt
in
int
sbb
test
out
cld
mov
sub
jne
das
aaa
imul
inc
test
dec
mov
mov
and
push
sub
fistpl
mov
jno
cmp
mov
fs
mov
pop
pop
or
testb
xchg
popa
jne
adc
mov
mov
push
incb
mov
in
jge
jnp
push
daa
jb
sti
sub
jb
aas
fstpl
fs
arpl
dec
jmp
mov
fs
and
xchg
call
jg
xor
cmp
lds
cmp
popl
xlat
push
emms
daa
imul
movsb
std
ja
add
adc
mov
cmp
aad
out
das
repz
fwait
movsb
lock
mov
fisttpl
adc
stc
xchg
xchg
rclb
test
fstpl
inc
mov
ds
pop
dec
test
mov
xor
xor
aas
js
lea
lods
fucomp
ret
or
mulb
lret
pushw
mov
fidivrl
cs
mov
sub
jle
lock
iret
xorb
inc
mov
jb
call
mov
mov
lahf
fstl
ds
xlat
aam
fcomps
mov
jp
mov
adcb
shrb
jae
mov
insl
aam
andl
dec
test
xchg
addr16
nop
pop
jp
xchg
stos
popa
in
or
jecxz
mov
push
and
or
enter
add
std
cli
je
mov
fmuls
lahf
in
sub
mov
int3
sbb
dec
ss
addr16
jecxz
dec
scas
out
stos
xchg
mov
clc
jle
inc
adc
push
in
add
or
rorb
cs
pop
shlb
push
jg
add
push
gs
cmp
test
and
jno,pn
pop
daa
push
add
ja
dec
mov
enter
pop
std
popa
xchg
mov
xchg
xchg
ja
cmpxchg
scas
sub
xor
adc
addr16
shr
lahf
icebp
popa
xor
das
mov
adc
test
insb
inc
mov
rolb
loopne
and
sbb
mov
mov
mov
enter
sub
mov
mov
pushl
lock
insb
xchg
cwtl
mov
and
fnstenv
mov
mov
xor
mov
or
jnp
jl
cmc
pop
js
fidivrl
mov
dec
mov
inc
in
pop
dec
clc
or
xorb
fmull
mov
hlt
adc
or
sbb
sub
repnz
push
push
fstl
fcoms
aad
fcmove
cvttps2pi
add
pop
sub
and
push
cmovb
dec
out
push
cmp
jne
xor
imul
pop
std
mov
and
clc
ja
sarb
sbb
xor
in
inc
and
insl
mov
xchg
pop
cmpsb
cmpsb
stos
cld
fcmovnu
jl
inc
inc
lods
loopne
imul
mov
cmp
into
out
ja
call
dec
adc
pop
nop
jnp
push
scas
sub
dec
lods
loope
mov
jb
mov
rcll
sub
imul
or
inc
ret
dec
jbe
test
cli
scas
cmp
leave
lock
subl
shrb
fldcw
push
or
mov
outsb
lods
imul
mov
insl
leave
inc
call
jb
sbb
cmp
mov
pop
mov
mov
sbb
mov
mov
inc
imul
mov
outsb
jge
loop
sub
cmpsb
leave
sbb
pusha
sub
ficoms
cmp
test
cmp
les
loopne
and
add
mov
or
add
pop
enter
xor
jnp
push
mov
push
mov
dec
dec
mov
lods
ss
jl
adc
out
aas
cli
fwait
pop
jmp
shrb
das
daa
or
testl
push
setb
adc
out
push
aad
mov
add
and
mov
push
add
or
jb
cmp
xchg
addr16
cmc
xor
mov
lods
dec
add
imul
cmp
dec
jnp
mov
cmpsl
in
out
dec
stos
sbb
cmp
or
in
xor
addr16
pop
popa
popa
insb
pop
ret
xor
dec
push
js
cmp
addr16
arpl
push
adc
jo
loope
subl
push
pop
xchg
push
mov
mov
sub
out
add
adc
jg
movsl
loope
gs
ror
mov
mov
push
testb
push
xchg
add
adc
mov
cmp
jb
xchg
ss
std
xchg
shr
outsb
push
push
inc
rcr
mov
aaa
aad
jmp
push
stos
mov
nop
add
sub
mov
out
or
mov
push
push
sarl
lds
xchg
mov
xor
stos
sub
mov
fldenv
mov
adc
mov
jae
xor
cmp
mull
cmovne
lock
push
xor
sar
iret
aam
cli
adc
xor
sub
lods
pop
pusha
ficoml
xchg
pop
dec
mov
cli
push
push
xchg
jge
leave
flds
in
pop
add
pushf
mov
pop
mov
adc
mov
std
scas
push
cmpsl
jae
sbb
mov
xchg
cli
add
into
adc
fisttpll
ja
add
sti
jnp
mov
mov
mov
leave
jge
sbb
shrl
and
icebp
clc
push
xchg
cmp
sub
aam
fucomip
mov
dec
nop
addb
into
stc
vmovdqa
out
xchg
dec
popfw
loopne
enter
cs
dec
jl
fmuls
stc
dec
cmc
fists
repz
or
and
jmp
mov
ss
js
cmpsl
mov
rorl
or
sarl
lahf
popf
mov
jge
out
lods
xor
sub
cld
jl
add
inc
sub
mov
push
idivl
add
sti
les
jbe
and
push
mov
insb
hlt
pop
into
in
movsb
les
out
xchg
add
dec
lret
pop
pop
jo
jl
xor
stos
ljmp
rcl
jecxz
mov
xchg
xor
ljmp
inc
mov
call
pop
cmp
or
pop
jmp
mov
sti
sahf
fwait
dec
roll
lcall
fsubrl
test
lds
dec
sub
push
scas
xchg
lret
std
dec
loop
pushf
data16
fisubs
cs
dec
hlt
adc
outsb
mov
gs
xchg
cmc
std
or
jb
pushf
ret
jg
adc
or
sub
sbb
mov
movsb
stos
imul
xchg
bound
ror
push
mov
addb
push
or
and
addr16
push
dec
jmp
pop
pop
jecxz
dec
xlat
cltd
jg
dec
out
fstl
sbb
es
lcall
push
mov
enter
adc
jne
xor
push
sbb
lret
inc
outsl
sub
push
xlat
pop
pop
mov
inc
out
cmpsl
leave
and
inc
xor
fisubrs
hlt
pop
sbb
mov
jge
jl
xchg
pushf
mov
pop
sub
insb
stc
mov
add
push
in
cmp
jnp
test
imul
cmp
mov
sbb
scas
sbb
pop
lret
das
int3
sbb
mov
bound
stc
out
dec
or
jbe
or
mov
bound
xchg
rcrb
iret
sbbb
rolb
and
ret
xor
sbb
popa
loopne
cld
xor
xor
subl
sbb
inc
insb
pop
jbe
sub
sub
inc
mov
ficoms
jle
sbb
mov
pop
jecxz
xchg
in
or
mov
popf
xor
jg
sahf
cmp
cltd
pop
mov
notb
and
orl
mov
or
mov
cmp
pop
xor
outsb
ljmp
std
ficoms
test
lcall
or
cld
gs
mov
add
test
and
inc
xchg
push
mov
outsl
sbb
ljmp
test
add
fldt
jnp
jle
pushw
fisubs
cmpsl
sub
std
stos
sbb
xchg
push
mov
mov
flds
out
and
mov
outsl
mov
xor
jbe
mov
popa
xchg
aad
aaa
int
and
and
push
fs
out
test
adc
pop
sbb
insb
outsb
in
imulw
mov
lahf
jle
fnsave
inc
xchg
loope
mov
out
push
imul
aam
hlt
ja
cmp
jecxz
mov
or
loopne
pop
nop
mov
sub
ret
mov
and
or
lock
aam
or
je
sbb
cmp
xchg
pushf
inc
sbbl
loopne
mov
mov
aam
or
movsb
or
adc
pop
jp
mov
cli
xchg
cmp
pop
or
push
cmp
sub
outsb
mov
and
mov
aaa
add
repz
roll
fistpll
outsl
jle
clc
mov
into
mov
adc
mov
inc
push
dec
xlat
mov
out
push
mov
pop
xor
or
sbb
sbb
adcb
stc
add
mov
movsl
arpl
xchg
out
dec
adc
mov
paddb
imulb
dec
lods
mov
fdivl
push
inc
gs
mov
sub
mov
cmp
sub
dec
mov
sti
pop
int3
adc
mov
lea
cmp
and
punpckhbw
push
push
dec
cmp
sbb
pushf
mov
sahf
stos
cmp
mov
punpcklbw
sub
fisubl
jne
dec
ds
cmp
test
mov
inc
ds
dec
repnz
cli
dec
mov
cmp
add
jle
jnp
fs
mov
adc
xchg
dec
or
sahf
sub
and
push
sbb
xor
pop
lock
hlt
fs
pmullw
dec
xor
add
cs
ret
cld
inc
outsl
dec
mov
cmp
mov
fs
sbb
lock
out
orb
or
jl
ss
pusha
sub
addr16
ljmp
add
lods
xor
cli
adc
sbb
cli
sub
xor
or
pop
fnsave
push
jne
mov
flds
subb
pusha
lahf
dec
jbe
rcr
and
lcall
int3
cmp
cmpsb
adc
fcmovu
adc
fists
popf
and
inc
outsl
push
jg
mov
es
jle
sub
daa
xchg
cmp
lds
aam
push
pop
outsb
ja
repz
xchg
xorb
and
ja
lahf
int
adc
stos
push
sub
dec
adc
fwait
push
lcall
imul
rcrl
cmp
inc
mov
je
mov
loope
pop
repz
test
inc
push
mov
dec
fdivrp
and
pushf
pcmpeqw
push
inc
daa
push
orb
add
js
hlt
xchg
sub
inc
cmp
adc
dec
test
and
fidivrs
loop
and
std
and
lret
psraw
lahf
and
mov
or
sub
add
nop
mov
mov
cmp
mov
popf
aam
jle
dec
and
sub
inc
cmp
cmpsb
pop
xor
mov
ljmp
int3
mov
cmp
ja
insl
mov
inc
lahf
inc
xor
pushf
sub
dec
sbbb
fsubrl
dec
jbe
jbe
fisubrl
inc
mov
or
adc
mov
rorl
cmp
aas
js
jb
jle
clc
inc
aas
into
ficomps
xor
jecxz
xchg
mov
int3
add
fsts
aaa
leave
adc
or
sbb
pop
and
fistps
push
pop
xchg
pop
imul
inc
dec
adc
sub
inc
das
jecxz
jnp
pop
enter
iret
push
decb
cmp
mov
in
dec
fnstsw
outsl
mov
aas
lea
jge
insl
iret
pop
decl
cmp
mov
in
dec
fnstsw
outsl
mov
aas
lea
jge
insl
iret
pop
decl
cmp
mov
in
dec
fnstsw
outsl
mov
aas
das
jge
outsl
iret
pop
decl
aas
lahf
sub
push
add
int
lret
lock
shlb
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
pop
cs
jp,pt
push
adc
jp
pop
and
ficoml
lret
mov
sahf
lcall
ficomps
dec
jp,pt
push
sbb
jle
dec
sub
fisubrl
ljmp
into
stos
ficomps
dec
jp,pt
push
sbb
jle
dec
sub
scas
lret
jmp
lock
mov
adc
dec
or
jnp
aam
xchg
mov
rcrl
sub
mov
mov
xor
sbb
imulb
fs
xor
repz
sub
in
ja
outsl
mov
lahf
movsl
mov
ds
fsub
flds
mov
xchg
les
add
adc
ret
push
pop
mov
jmp
sbb
jle
inc
inc
mov
ja
int3
sbb
push
mov
out
rcll
push
adc
pop
sub
push
ss
ljmp
out
pop
cmpsb
mov
sub
and
cmc
xlat
mov
scas
popa
cmpsb
decl
and
dec
jp,pt
push
sbb
jle
dec
sub
scas
lret
mov
sahf
lcall
cwtl
sbb
and
dec
maxps
inc
or
imul
fmulp
cmpsl
cltd
fldl
mov
pop
inc
cmp
inc
pop
sub
sub
lret
enter
scas
int3
decl
stos
mov
outsl
cs
adc
data16
cmp
pop
fisubrl
ljmp
into
stos
ficomps
dec
jp,pt
push
sbb
jle
dec
sub
scas
lret
mov
sahf
lcall
ficomps
out
push
shll
rcrb
stos
cmp
push
push
cmp
cmc
pop
testb
pop
cmp
gs
cld
mov
aam
add
add
inc
xor
fcoms
and
lret
fwait
jle
xchg
psubq
xor
scas
pusha
add
cwtl
xchg
adc
add
or
xchg
push
mov
jae
mov
adc
jb
mov
movsl
mov
lret
aam
xchg
stos
test
call
mov
cmp
mov
xchg
push
in
or
xchg
cmp
mov
push
cld
jge
insb
test
or
sub
xchg
in
rcrl
sub
xor
shll
push
in
jge
ljmp
push
rolb
jecxz
jle
mov
xor
push
or
jbe
xor
push
mov
pusha
sub
daa
sbb
inc
inc
out
dec
int3
mov
inc
cmp
xchg
outsl
cmp
aas
in
cmp
insl
xchg
pop
inc
dec
mov
add
mov
xor
push
adc
inc
jmp
js
or
leave
in
mov
xor
lea
xor
dec
leave
mov
outsl
fisubl
call
pop
cli
lret
sub
ds
lods
mov
xchg
aas
mov
mov
inc
mov
cld
ds
pop
ror
or
insl
mov
xchg
int
out
dec
mov
pop
and
bound
inc
push
les
mov
outsl
sbb
jae
adc
or
ret
ja
inc
pop
mov
leave
adc
pushf
jg
adc
mov
and
cld
mov
fimull
mov
icebp
out
pusha
fwait
shll
les
and
push
push
pcmpgtb
test
push
out
sub
jb
adcl
cmp
dec
push
cmp
das
lea
sub
xor
or
and
xorl
jns
inc
push
lcall
rol
adc
mov
call
imul
cmp
repz
mov
arpl
or
sbb
jmp
jb
pop
cmp
dec
in
dec
stc
es
mov
inc
repz
lcall
xchg
ret
popa
and
cs
fdivrp
pop
pop
mov
out
les
lds
cld
std
testl
je
adc
or
mov
mov
sahf
fisttpl
fdivs
jo
cmp
xchg
mov
xor
dec
lret
jmp
shl
pop
insl
push
mov
ficoms
xor
fnstcw
and
daa
push
jns
call
pop
sub
xor
mov
popa
outsl
shll
mov
pop
mov
test
sahf
lret
inc
and
sbbl
add
mov
jg
mov
fwait
lahf
cmp
aad
pop
xorb
jle
inc
mov
ljmp
mov
mov
fildl
movsl
shll
adcl
mov
std
mov
push
pop
out
mov
mov
lea
mov
test
dec
jne
push
dec
cmp
testb
push
fs
push
stc
inc
daa
cmp
add
or
test
sbb
addb
lods
cltd
mov
sub
xor
jge
push
std
enter
ret
or
jae
sahf
xchg
xchg
or
xchg
jg
dec
imul
mov
cmc
sbb
jne
adc
sbb
clc
dec
bound
push
test
fsub
arpl
mov
fcmovnu
pop
daa
pop
xchg
adc
hlt
xlat
fnstenv
aaa
mov
aas
mov
popa
pop
push
adc
ljmp
pop
jle
dec
adc
scas
mov
add
inc
data16
repnz
xchg
repz
inc
fsub
xor
into
mov
add
xchg
in
push
jp
lahf
jbe
sub
or
mov
lcall
sti
mov
cs
push
jb
das
lret
repz
out
mov
xor
call
outsb
lods
or
test
add
push
rcl
loope
mov
stos
mov
pop
lea
xor
xchg
pop
xor
push
daa
int
cltd
add
adc
call
pushl
sbb
aaa
adcl
xor
cmp
inc
rclb
mov
dec
jb
or
or
repz
pop
xchg
int
test
in
pop
mov
and
push
out
loop
mov
mov
dec
push
fstpt
mov
mov
or
lahf
pop
xchg
fiaddl
lods
imul
sarb
add
lds
cmp
data16
repz
fbld
fidivrs
lahf
adc
push
cmp
mov
insb
leave
daa
inc
repnz
add
mov
jg
adc
ret
clc
jb
jmp
pop
xor
lock
das
insl
cwtl
xchg
mov
jmp
xchg
mov
cmc
jno
dec
and
xchg
xchg
aad
cwtl
jecxz
jecxz
adc
mov
enter
push
test
sbb
test
cli
call
jnp
into
test
dec
js
jp
xor
loope
cli
or
sti
push
mov
roll
or
inc
xchg
fsubrs
fcmovnu
adc
je
pop
mov
icebp
ja
stos
bndstx
and
lds
adc
dec
sbb
mov
scas
push
aas
cmp
mov
xor
in
push
pop
aaa
das
aaa
adc
xor
xchg
outsl
push
xor
add
int3
cmc
leave
dec
ficompl
lahf
and
lret
cmp
mov
dec
jg
imulb
clc
aam
bound
jns
mov
dec
cli
subl
pop
add
aas
lods
xor
cmp
cmp
cmc
mov
pop
pop
cmpb
xor
insl
push
lret
pop
mov
daa
repz
push
dec
cli
int
sub
and
cmc
arpl
mov
jg
leave
fwait
into
sbb
add
pop
push
icebp
xor
jb
rcrl
inc
lods
xor
sbb
subl
mov
inc
outsl
nop
ficompl
mov
push
scas
push
popf
rcl
push
jg
inc
cmp
loope
out
mov
mov
pop
adc
fisubl
sub
cmovp
lods
push
aad
add
mov
xchg
lcall
cltd
jle
push
flds
and
xchg
cmp
adc
lds
arpl
mov
push
jmp
mov
outsb
jg
test
xchg
sbb
out
sbb
stos
nop
outsl
jne
fsubs
jo
pop
test
bound
pushf
add
add
repz
xor
push
in
int3
mov
pop
cwtl
movl
ljmp
pop
xor
jg
gs
aaa
xorl
ja
jbe
jle
outsb
ss
mov
dec
push
add
sub
and
loop
stos
pop
mov
cs
in
sbb
movsl
mov
xor
add
push
sti
shrl
into
popf
dec
xlat
pop
idivb
cmp
js
push
add
lods
dec
mov
cwtl
xchg
das
rclb
icebp
int
xor
lcall
push
sarl
dec
inc
ss
dec
adc
addr16
xchg
ljmp
cmpsb
jp
xchg
loope
add
cmp
addr16
or
cmp
in
pop
push
enter
push
mov
jo
inc
or
clc
call
or
inc
or
call
add
fadds
cli
pusha
mov
insb
push
lods
outsb
mov
mov
inc
pusha
pusha
cmp
pop
or
test
pop
cltd
cmp
sbb
aaa
add
mov
adc
mulb
dec
xchg
out
sahf
das
jle
push
and
and
pop
and
mov
cmp
cmp
into
subl
and
mov
js
fsubr
mov
loopne
cld
push
pop
xchg
adc
jle
push
data16
pusha
icebp
pop
aad
mov
stos
outsb
movsb
cli
test
push
mov
jbe
repnz
aad
push
insl
cmp
cmpsb
push
enter
stos
dec
rcll
inc
push
adc
insb
mulb
sub
mov
out
std
xchg
sbb
fiaddl
and
jge
inc
shlb
popf
or
test
xchg
pop
mov
xchg
pop
incb
and
lahf
jl
sbb
call
ljmp
out
jb
fstl
int3
imul
or
xor
mov
xchg
lds
sub
outsl
jbe
insb
out
stos
clc
ret
pop
cmc
mov
and
movsb
sub
cmpl
or
imul
cli
cmpsb
pop
jns
sub
add
mov
sar
pop
popf
adc
xor
and
popf
sbb
es
repz
add
clc
stc
xor
in
jge
std
xchg
push
push
mov
mov
data16
loopne
add
cmpl
add
push
pop
sarb
and
popf
ss
cltd
dec
jae
lcall
js
cmp
xchg
lret
stc
mov
sub
ret
leave
scas
mov
ds
mov
rclb
out
mov
ret
jmp
add
rcr
and
js
push
scas
push
lods
fmuls
lcall
ljmp
lret
or
aad
jae
add
test
loopne
lds
cmpsl
xor
fdivl
sar
insb
and
mov
arpl
arpl
loop
or
cltd
adc
fisttps
mov
ljmp
mov
cs
rorb
das
popa
icebp
nopl
cmpsl
jmp
cmp
pop
and
xor
cmp
sarb
cmp
mov
mov
out
scas
sarl
pop
lods
mov
jl
test
std
insb
xrelease
int3
xor
or
inc
lods
sub
or
jle
xchg
jne
mov
fstpl
jnp
or
jge
fwait
jge
xchg
cmp
cmp
clc
les
fdiv
or
cmc
xor
mov
hlt
repz
pop
shlb
mov
int
repz
in
sub
lock
add
shrb
jp
rorb
sbb
jl
push
popf
mov
sbb
cld
out
pushf
icebp
outsl
loopne
pop
popa
sub
negb
mov
mov
jbe
xor
addr16
jecxz
add
inc
push
pushf
inc
js
xchg
mov
adc
lcall
arpl
inc
mov
inc
cmp
inc
loopne
shrw
rcll
lock
loopne
ds
mov
sub
mov
int3
jge
movb
fsts
ret
daa
out
pop
xchg
ret
jl
pop
ljmp
or
lods
iret
mov
jmp
jns
lea
fdivrs
dec
mov
out
mov
ds
clc
lds
ljmp
xchg
jnp
xchg
xlat
arpl
iret
orb
inc
adc
ret
out
sti
sbb
cmp
gs
je
or
jnp
push
xor
dec
stos
js
sbb
mov
pop
push
xor
add
std
jne
ror
lea
test
or
jg
jb
test
xor
cltd
dec
fmuls
mov
call
and
pop
scas
les
sub
or
inc
sub
push
and
daa
adc
adc
xchg
jb
outsb
adc
xchg
or
popf
xchg
jb
dec
jbe
in
sbb
push
data16
jnp
sub
stos
cmpsl
addr16
xchg
insl
sub
adc
dec
push
out
ficomps
rolb
dec
dec
aam
fdivrs
pop
lea
sbb
sbb
xor
push
push
xor
jmp
cmp
int
into
dec
pop
jle
in
sub
mov
dec
movsb
stc
pop
or
div
pop
nop
mov
js
les
dec
rcrb
xchg
and
sub
data16
adc
jno
push
push
jl
fidivrl
or
inc
sbb
push
sbb
mov
and
dec
xchg
jo
lds
mov
pushf
jae
cmp
aam
cmc
jecxz
imul
lcall
out
cmp
cmp
and
fs
and
cli
push
mov
dec
xchg
pop
ja
lods
lret
in
test
test
xchg
and
loopne
in
std
pop
inc
in
sbb
xor
stc
jecxz
xchg
push
js
pop
pop
jmp
add
xor
inc
aaa
dec
push
es
andb
sbb
pop
jg
cld
cwtl
pop
cli
lds
ret
mov
inc
stos
mov
lods
cld
lods
pop
sarb
hlt
xchg
lahf
push
push
sbb
std
and
and
jg
push
cmp
mov
stc
outsl
xchg
ds
sub
sahf
cmovne
test
dec
aad
jnp
cmp
xchg
popf
and
movb
stc
push
mov
mov
int3
stc
xchg
and
movsb
jge
fwait
pop
mov
adc
loope
xchg
test
cmp
push
in
cmpl
ss
mov
cmc
push
sbb
xchg
xor
aad
movsb
stos
ja
mov
ret
das
mov
jp
pop
lea
pop
loop
or
xor
and
inc
and
xor
sub
xor
cmpsb
mov
insl
fisubl
jnp
cmp
jmp
cmp
imul
or
and
pop
push
lods
sub
insl
loope
fildll
jo
sti
out
mov
sub
int
inc
push
fs
add
arpl
mov
add
fisubrl
xchg
push
insb
push
add
xchg
into
insl
sar
adc
icebp
test
or
jle
dec
stos
push
aad
dec
stos
cmpsb
mov
loope
pop
and
ja
fnstenv
fidivrs
fcoms
inc
repz
sub
cmp
push
inc
xchg
dec
jae
xor
and
push
loope
inc
pop
dec
fnstenv
fucomp
rorl
xlat
clc
rcl
cmp
cmpsb
jne
in
ja
into
inc
jmp
inc
push
or
pop
push
xlat
sub
mov
mov
dec
or
repz
loopne
bound
mov
jns
negb
mov
in
push
lcall
in
adcl
in
int3
hlt
pushf
cmp
cmp
ja
or
push
xchg
out
and
mov
mov
daa
push
lret
in
idivb
add
push
lahf
or
cmp
stos
mov
push
jg
dec
xchg
dec
fxam
mov
jno
loop
and
dec
pop
idivb
pop
push
or
fisubrs
mov
test
aaa
adc
roll
xor
addr16
jns
insb
sub
in
mov
adc
mov
mov
movsb
mov
push
ds
inc
cmpsb
fdivrl
shrb
cmpsb
ja
xor
fs
lahf
jo
pop
xchg
sub
fs
mov
mov
int
ret
jmp
mov
add
xchg
inc
pop
jo
cmp
pop
pop
inc
mov
mov
dec
add
mov
and
mov
adc
or
sbb
push
insl
dec
xchg
mov
mov
bound
sbb
xor
aam
or
cmp
mov
and
xchg
cmpsl
and
push
in
sub
xorl
int
lock
aad
adc
adc
addl
aaa
icebp
fildll
push
cmp
or
cmpsb
push
sbb
scas
jle
test
enter
ret
test
sahf
jmp
add
mov
add
ljmp
shl
sub
shll
subl
inc
add
adc
jg
jns
out
repz
pop
mov
jp
test
fwait
sbb
pushf
bound
loop
mov
add
std
fidivrs
dec
push
test
stos
notl
icebp
int
mov
push
leave
lret
or
outsb
lock
out
sti
jl
fdivrs
cs
push
pop
enter
jecxz
xor
mov
jns
jecxz
stos
mov
sub
mov
aad
lahf
dec
sub
push
mov
mov
int3
imul
pop
pop
dec
and
sti
push
imul
insb
and
push
mov
enter
out
xor
push
andb
shrb
stos
sub
inc
sub
shll
cld
sub
cmpsb
mov
push
xor
adc
mov
mov
mov
inc
outsb
je
test
dec
jmp
insl
jmp
inc
cs
mov
je
inc
sub
aas
cmp
popa
pop
jle
adc
add
int3
sbb
icebp
call
ret
lahf
imul
add
mov
rorb
sub
das
xor
push
mov
dec
cmp
imul
xor
test
mov
data16
cmp
mov
loop
insb
ds
adc
dec
ret
pop
adc
daa
and
fdivrl
insb
sti
in
mov
mov
dec
cli
jle
std
das
or
cmpsb
iret
lock
mov
out
adc
mov
dec
dec
jbe
sti
lret
mov
pop
lret
cmp
and
idivb
cmpsl
mov
cmpsb
inc
movsb
call
iret
in
or
mov
mov
jecxz
cmp
pop
mov
push
mov
imul
mov
cmp
xchg
pop
or
inc
clc
jbe
add
aas
int3
leave
xor
mov
js
les
fst
cmc
mov
jo
and
lahf
push
in
sub
push
pop
test
loop
or
mov
xchg
mov
push
sbb
dec
inc
jmp
inc
sbb
pop
mov
jnp
out
jp
cmpsl
xchg
out
and
mov
mov
pop
fnsave
lea
adc
enter
imul
cmp
xchg
dec
cltd
xor
xor
cmpsl
sbb
xlat
mov
in
lock
inc
out
inc
cmpb
pop
xchg
xorb
inc
iret
outsb
lds
sbb
test
sub
or
mov
outsl
jb
mov
ljmp
cmpsb
jns
push
cmp
rcr
out
mov
xlat
out
fistl
mov
aam
inc
test
mov
mov
sbb
test
push
xchg
lahf
fwait
cmc
xchg
push
xorl
es
push
lahf
inc
cs
add
cmp
in
cli
mov
add
loopne
sti
sbbb
test
mov
and
shlb
mov
push
inc
fisttpl
mov
fs
pop
js
and
rcrl
outsb
sub
out
pusha
push
flds
sbb
out
mov
and
mov
pushf
push
push
push
fidivl
sbb
aam
les
mov
xor
xor
mov
mov
rolb
pop
movsb
mov
scas
or
jbe
stos
lahf
std
rorb
mov
push
pop
es
pusha
lcall
shll
adc
das
gs
sarb
cmp
dec
mov
xor
jnp
hlt
mov
xor
and
add
sub
shlb
cltd
shrl
lea
test
stc
pop
out
dec
pushf
loopne
fwait
int3
stos
cmp
add
pushf
adc
out
xor
xlat
mov
cld
movsl
lea
pop
push
mov
aas
sub
mov
xor
insl
loop
bound
or
mov
inc
jnp
dec
sahf
xor
pop
xor
mov
cmp
xor
in
mov
mov
jns
pop
fisttpl
jo
mov
xor
add
xor
es
das
inc
lahf
ljmp
sub
xor
icebp
out
outsb
sub
jle
in
out
inc
push
sahf
cmp
fiadds
push
mov
cmp
push
cmp
or
adc
sbb
sbb
stos
clc
xchg
mov
fstpt
lret
or
inc
ss
loopne
call
mov
rcr
sbb
fildll
out
and
inc
repz
xchg
mov
sbb
pop
inc
sub
insl
aas
clc
pop
iret
mov
push
iret
out
inc
sub
sbb
xchg
inc
js
jbe
mov
mov
inc
sub
cltd
mov
fidivl
adc
push
sub
das
mov
add
mov
mov
imul
xor
out
rcl
jge
negl
bound
pop
mov
fbld
subl
pushf
int
jecxz
xchg
mov
pop
or
dec
rclb
adc
sub
out
sbb
mov
cwtl
out
inc
or
jecxz
fmuls
mov
mov
sub
stos
push
or
push
sarl
sbb
fwait
pop
xlat
clc
test
mov
and
xor
jno
jb
xchg
sub
dec
popf
pop
ds
push
push
sbb
jle
dec
sub
scas
lret
mov
sahf
lcall
ficomps
dec
jp,pt
push
sbb
jle
dec
sub
scas
lret
mov
sahf
lcall
ficomps
dec
jp,pt
push
sbb
jle
dec
sub
scas
lret
mov
sahf
lcall
ficomps
dec
jp,pt
push
sbb
jle
dec
sub
push
mov
jmp
inc
xor
mov
push
in
int3
int
pushf
shl
lea
dec
dec
cmp
or
hlt
std
in
in
int3
int
mov
mov
jb
dec
dec
cmp
dec
std
sbb
or
es
in
pop
lds
aam
movsb
in
mov
je
jl
add
sub
inc
imul
mov
test
jmp
dec
dec
imulb
push
pop
sbb
imul
lock
inc
xor
ss
push
mov
or
mov
mov
addl
orb
cmp
xchg
lods
mov
sub
push
or
mov
popf
push
insl
popf
lds
xchg
dec
mov
rorb
xchg
repz
adc
and
fmul
les
sbb
iret
push
sub
dec
sbb
in
or
xor
jne
test
pop
dec
dec
pop
mov
loop
sbb
fmul
mov
lods
pushf
test
mov
jne
inc
push
push
pop
and
push
in
cwtl
fsubl
ret
icebp
in
loopne
adc
adc
push
push
inc
jle
sbb
fs
fwait
lods
pop
enter
lahf
lock
jmp
inc
add
or
sub
push
dec
dec
dec
inc
imul
mov
lods
lods
pushf
popf
mov
pop
pop
dec
dec
cmp
sub
sbb
or
cld
std
in
in
int3
int
mov
mov
pop
pop
dec
dec
cmp
sub
sbb
or
cld
std
sub
cld
xchg
fdivp
or
push
xchg
xchg
repnz
mov
jb
insb
sti
cld
sub
out
cmp
and
iret
cmp
mov
decl
mov
jnp
bound
push
adc
add
and
into
stc
adc
dec
or
jns
cmc
inc
push
lcall
add
push
in
adcb
stc
dec
popf
mov
les
mov
test
mov
addb
pop
pop
icebp
add
test
pop
cmp
sub
fldt
mov
adc
xor
out
jnp
ffreep
sub
test
adc
add
sub
in
cld
push
cmp
repz
and
rcl
cmp
iret
jecxz
test
aam
repz
mov
add
repnz
lds
mov
scas
fiadds
insb
push
xor
popf
rolb
lahf
sub
mov
and
push
mov
fst
mov
pop
mov
push
jb
push
clc
ljmp
xor
out
sbb
and
stos
inc
mov
cmpsb
lods
mov
mov
repnz
inc
or
cmp
or
imul
cs
int3
jne
cmp
loopne
jp
out
int
mov
js
dec
cld
out
aad
adc
stc
mov
sbb
xor
std
imul
jg
test
orb
xlat
sahf
push
cmp
pop
lock
adc
add
gs
push
xchg
dec
negl
pop
popf
sbb
ja
adc
pop
mov
test
ja
mov
ljmp
push
faddl
dec
sbb
pop
adc
xor
pop
and
sti
shr
sbb
pushf
scas
sub
icebp
mov
push
ret
dec
mov
pop
cmp
nop
cmpsb
jg
int3
loope
jb
imul
lds
xor
adc
xchg
inc
loope
sti
cmc
out
dec
sub
inc
lods
loopne
ss
dec
or
sub
pop
mov
out
fsts
int3
sbb
mov
push
fildl
bound
addr16
xor
mov
cmp
and
mov
test
mov
mov
cmp
outsl
xchg
sub
ds
xor
int
xchg
out
mov
in
cmp
pop
into
adc
enter
jmp
popa
test
push
inc
sbb
push
daa
mov
pushl
xor
lahf
mov
jnp
lcall
or
js
pop
aad
fdiv
push
cmp
daa
pop
ret
and
xchg
mov
sub
mov
inc
cmp
in
pop
jl
jb
mov
pusha
mov
pop
sbb
shr
dec
inc
xchg
arpl
rclb
cmp
iret
push
xor
mov
fucomip
mov
in
mov
clc
xor
jns
decb
adc
dec
xchg
jge
mov
dec
dec
push
pusha
inc
aas
cmp
aad
dec
in
add
dec
adc
pop
push
push
addr16
push
inc
mov
mov
push
lock
pop
sbb
cmpsl
sub
pop
daa
jns
repz
dec
pop
sub
out
outsb
iret
mov
sbb
jmp
dec
dec
push
mov
scas
push
or
sbb
mov
pushf
add
sub
xchg
mulb
ss
pop
outsl
fwait
xor
fwait
cpuid
pop
pop
inc
out
aas
pop
inc
sub
decl
lods
mov
xchg
ret
dec
into
or
push
out
pop
insl
cld
movsb
sahf
mov
insl
pop
push
mov
cmpsb
cmpsb
in
dec
mov
daa
sbb
imul
mov
sahf
jnp
je
loope
pop
notl
lods
inc
mov
ret
loop
cli
and
inc
stos
ss
pop
sub
and
mov
mov
jg
cld
gs
sub
daa
lods
leave
cmp
cmp
rolb
mov
mov
mov
fsubrs
fidivs
or
outsl
push
icebp
movsl
icebp
outsl
xchg
and
aas
push
mov
repnz
or
sbb
push
jns
xchg
sub
lret
push
jp
xor
sub
push
and
scas
mov
dec
pop
and
inc
scas
cmp
xchg
filds
jo
imul
out
inc
and
push
dec
add
or
cli
cld
xor
les
movsl
push
test
push
and
and
lea
dec
jb
clc
std
movl
adc
add
aad
mov
push
adc
and
push
rorb
lods
popf
je
xlat
hlt
mov
push
dec
xchg
fstpt
jecxz
cmpsb
movsb
inc
mov
aam
jns
lea
lret
cli
mov
mov
and
pusha
add
es
pop
shll
call
sar
xor
lock
cli
test
push
es
add
flds
mov
push
mov
test
add
lret
jmp
repz
jmp
xor
jmp
sahf
outsl
lds
pusha
mov
fs
mov
lock
lods
repnz
ja
testb
ret
dec
or
imul
mov
into
sbb
push
cmpsb
push
lcall
mov
mov
daa
cld
jl
pop
imull
xchg
popa
inc
push
into
xor
insb
jmp
mov
jb
and
arpl
shll
sbb
cmp
mov
pop
enter
mov
ja
in
ljmp
orb
cmpsl
adc
sub
movsl
xor
mov
jo
sub
pushf
dec
cld
pop
pop
int
mov
nop
dec
xor
jns
lret
add
fbld
sub
adc
dec
mov
push
cmp
xor
gs
pop
mov
sub
xor
in
mov
daa
xchg
cltd
ret
and
inc
add
in
dec
cmp
xchg
push
cs
push
cmp
imul
dec
mov
sbb
je
dec
ss
shl
cmpsl
xor
sbbl
popf
xchg
mov
adc
push
mov
jmp
mov
sub
ss
mov
dec
mov
int
mov
mov
ljmp
xchg
inc
mov
or
mov
adc
sbb
iret
mov
mov
sbb
push
dec
jge
ja
push
sahf
iret
fs
scas
ret
mov
cmp
and
fisttps
fmul
int
or
inc
dec
sub
in
sub
mov
xor
jb
xorl
mov
mov
lock
fnsave
scas
mov
sbb
and
jbe
push
movsb
and
push
in
xor
or
xor
test
push
push
xor
stos
xchg
jl
sar
sub
pop
adc
fisubrs
jle
xor
push
fsts
cs
mov
bound
mov
xchg
sbb
inc
fmull
pop
ror
fwait
mov
data16
mov
add
dec
mov
inc
jnp
xchg
xor
scas
mov
sarl
mov
cmp
dec
sbb
ret
out
mov
shl
lahf
push
ja
cmp
adc
popa
and
ret
lea
sbb
lss
jmp
cmpsb
inc
sub
fs
push
cmp
sub
ret
sahf
rcr
push
outsb
mov
fwait
jge
sti
push
and
mov
push
ja
inc
xlat
cmp
dec
pop
rcr
std
idivl
in
and
adc
les
fcompl
or
sub
push
xchg
insl
or
test
jl
mov
mov
inc
jb
add
xchg
scas
jns
pop
out
loopne
bound
jb
inc
fisttpll
call
rcrb
pop
movsb
mov
out
lcall
imul
aam
xchg
adc
or
sahf
lods
or
and
adc
add
lahf
sarb
dec
mov
jb
lock
into
mov
xchg
push
add
jp
loope
and
jge
loop
xor
jnp
xchg
inc
xor
jmp
inc
sbb
xchg
fdivp
jnp
add
imul
icebp
ljmp
xchg
mul
int
mov
andl
sub
sbb
jle
in
and
imul
rcl
or
fldenv
in
inc
jl
push
mov
shl
ret
xchg
outsb
push
push
movsl
pop
sub
out
mov
push
fwait
jl
mov
dec
lret
xor
xchg
stc
pop
rclb
dec
mov
popf
adc
ja
jle
gs
dec
ja
in
mov
cmp
in
out
cmp
daa
mov
xchg
add
mov
inc
mov
aaa
cli
icebp
jnp
add
outsl
dec
adc
and
out
inc
ret
loopne
adc
cmp
mov
adc
outsb
stos
lcall
lcall
cli
cmp
mov
ljmp
xchg
xchg
jbe
cmp
imul
mov
bound
push
xor
les
arpl
fmuls
enter
cmc
inc
cmova
aam
sbb
lcall
sbb
pop
sarb
sub
adc
add
inc
sbbl
insl
shlb
pop
shlb
int3
xor
xchg
cmp
jmp
adc
cmpsl
test
lods
mov
mov
sahf
xor
out
movsl
lods
fcoms
mov
lret
sbbl
xchg
popf
cld
fdivrl
in
mov
je
mov
popf
sbb
stos
int3
pop
jecxz
dec
adc
arpl
mov
pop
pop
cli
lods
mov
and
frstor
sub
inc
mov
daa
cld
pop
fs
dec
in
fmull
jg
in
bound
roll
cmp
nop
pushf
stc
test
jae
mov
jo
mov
adc
mov
xchg
scas
push
or
mov
outsb
scas
add
ret
mov
mov
jb
jecxz
cmpsl
rcll
xor
xor
add
stos
adcl
sub
lds
sbb
sbb
jg
or
jb
and
cmp
test
jmp
mov
sbb
into
decb
imul
sub
xchg
dec
in
push
lahf
int3
out
icebp
jbe
test
mov
jmp
inc
jmp
fcmovu
cwtl
and
push
ja
push
mov
out
mov
and
pop
or
dec
es
sbb
ljmp
fisubrl
pop
out
cmc
mov
fidivl
das
push
mov
addr16
nop
clc
mov
popa
or
mov
push
cmc
mov
push
sub
dec
lcall
fmuls
pop
mov
pop
int3
mov
das
scas
cltd
cltd
fadds
xor
push
dec
icebp
sahf
sub
sub
sarb
loope
dec
xor
test
pop
mov
adc
xchg
xor
and
lret
mov
push
test
push
sub
jecxz
out
add
inc
adc
adc
dec
and
loope
adcl
mov
insl
jg
push
loope
out
and
loopne
aas
mov
sbb
lock
in
bswap
pop
push
loopne
xchg
cmp
in
mov
call
aas
xchg
iret
scas
pop
mov
fcomps
xchg
add
add
jp
cli
stos
mov
dec
loopne
pop
dec
insb
ret
out
inc
jg
jge
pop
pushf
jnp
out
cmpsl
fisubrs
pop
in
jge
mov
or
lahf
push
gs
add
pop
add
stc
aaa
das
popf
xchg
mov
xchg
sbb
es
and
mov
push
mov
push
je
test
daa
add
xor
push
movsb
jo
int
out
pop
cmp
out
subb
int
outsb
pop
enter
sub
xor
dec
sbb
pop
add
mov
mov
dec
les
mov
add
inc
inc
mov
insb
clc
pop
dec
inc
pop
aaa
mov
mov
ret
mov
sbb
insl
mov
data16
xorl
push
push
add
or
ljmp
mov
popf
adc
mov
ja
cmpsb
stos
ljmp
cli
in
jae
sub
xchg
inc
out
ficoms
mov
bound
mov
pusha
xrelease
sub
push
adc
mov
sub
add
mov
cmp
jmp
or
scas
or
or
popa
rol
inc
out
sbb
sub
push
sbb
or
jb
cmp
cmpsl
push
sub
xor
xchg
pop
outsl
push
xchg
js
mov
ret
push
pop
push
or
fistl
fidivrs
test
into
dec
xor
enter
jge
lret
inc
dec
icebp
cmp
js
cmp
mov
ja
aam
shlb
add
sbb
mov
ret
rcl
subl
cltd
add
cmp
push
int
popf
out
xchg
or
and
outsl
shlb
dec
or
pop
and
insb
fnstcw
iret
lods
mov
test
add
repnz
test
push
mov
imul
inc
mov
nop
lret
testb
jecxz
ljmp
push
or
xchg
jp
push
push
fucomp
cltd
sbb
add
shll
ljmp
jns
jno
test
push
and
jp
insl
ret
or
sub
jmp
mov
int
cmp
dec
dec
and
dec
and
scas
push
pusha
enter
mov
fimuls
xchg
adc
sub
sub
xchg
push
test
jecxz
mov
or
lods
mov
push
jns
adc
je
in
data16
fildl
fsubrl
push
lret
jmp
outsb
and
jno
xor
adc
loop
mov
shr
call
mov
mov
xchg
sub
cmp
xor
xor
push
jg
lds
repz
add
xor
imul
fdivrp
mov
pusha
loopne
call
adc
mov
xor
arpl
je
pop
roll
add
mov
xor
call
jecxz
xlat
dec
clc
mov
idivl
inc
jae
ja
cld
dec
std
outsl
cmpsb
push
mov
int3
inc
add
addr16
fs
and
cmp
sbb
sub
mov
jmp
in
inc
movsb
adc
inc
xchg
stc
ss
movsl
xchg
mov
fmuls
jg
push
ret
inc
ja
mov
out
adc
jecxz
add
shll
hlt
inc
mov
nop
call
cltd
gs
jp
mov
cmp
sub
xchg
jmp
jne
add
testl
fsubrs
adc
in
and
emms
and
andb
and
adc
rolb
or
das
sub
aas
cmp
push
dec
sub
out
push
adc
iret
adc
and
sarl
pop
jl
mov
scas
inc
mov
and
into
lcall
push
pop
scas
pop
sar
add
push
std
addl
and
mov
push
sub
inc
inc
insb
and
rclb
dec
cld
cmpb
adc
jbe
and
mov
in
fidivs
push
mov
int3
ret
dec
fistpll
cld
cltd
pop
mov
cmp
bound
xorl
push
xchg
add
adc
bound
sub
sub
lret
rorb
push
popf
and
out
mov
mov
mov
mov
dec
cmp
xchg
cld
push
pushf
jl
inc
dec
and
jne
cmp
push
out
pop
sbb
repz
in
mov
loope
test
popa
xchg
pop
cmpsb
pushf
fwait
lods
cmp
inc
push
imul
mov
addr16
icebp
ficoml
sarl
icebp
std
sbb
jmp
mov
cmp
sbbb
and
cs
jbe
cmp
mov
pop
icebp
orb
or
push
sbb
lock
fwait
mov
ret
into
rol
std
jmp
subl
stc
mov
out
iret
mulb
lods
mov
inc
cmp
popf
gs
push
mov
sub
dec
sbb
adc
xchg
cmp
mov
xchg
push
mov
mov
enter
mov
test
das
cmpsl
mov
and
add
scas
pop
adc
sahf
push
std
add
push
popa
pop
aad
push
inc
cmp
xor
jg
aad
fidivl
lahf
pop
sbb
repnz
mov
subb
andb
xor
jne
jge
cmp
or
inc
dec
bound
sti
mov
addr16
mov
push
cmp
jmp
mov
std
push
push
in
out
mov
aaa
faddl
xchg
leave
pusha
mov
mov
repz
pop
and
stos
int
sbb
test
bound
inc
mov
fsubrl
sub
je
lret
test
iret
and
push
jno
outsb
dec
mov
or
dec
ss
imul
adc
mov
mov
xor
jle
inc
sub
cmp
test
pop
lods
jae
sub
xor
mov
sub
jns
je
fdivrs
lret
sti
inc
adc
xchg
insl
ret
icebp
mov
aaa
sub
and
int
sub
push
cwtl
pop
pop
mov
daa
xor
filds
sub
push
insl
lods
pop
ret
dec
and
cld
dec
fiadds
lret
pop
add
sbb
cmp
push
push
inc
push
mov
lods
jnp
xor
fwait
inc
movsb
ret
fcmovnbe
and
or
subl
and
cltd
clc
mov
faddl
int3
std
jae
in
pop
lds
jnp
test
adc
fs
add
stos
stos
outsl
and
pop
call
pop
stos
mov
jecxz
fistpl
fcoms
fwait
and
icebp
lret
dec
popa
mov
push
pop
clc
mov
jb
aaa
scas
mulb
bnd
std
lods
hlt
dec
jmp
jae
popa
pusha
call
movsl
test
sub
lods
pop
jne
add
push
sbb
jb
mov
orb
and
inc
mov
jle
mov
cli
xlat
mov
cmovne
lahf
sub
mov
add
sub
sarb
cmp
xor
xchg
xchg
inc
xchg
bound
orb
cli
dec
ljmp
loopne
and
mov
dec
cmp
mov
hlt
ja
pop
mov
xchg
fildll
out
fdivl
bound
jmp
dec
push
in
dec
dec
mov
sbb
cmp
or
or
sub
mov
adc
xor
inc
hlt
jno
lods
test
jbe
sbb
jo
xchg
sub
push
pop
jp
in
xchg
mov
lods
or
sub
lret
pop
out
fcmovu
cmp
jl
inc
sbb
push
and
sbb
loop
lods
sbb
jmp
jo
test
xchg
pop
popa
ret
push
and
jg
inc
lret
adc
xor
pop
xchg
sbb
mov
fistps
test
pop
jmp
pop
cmc
filds
and
cmp
sub
cs
dec
pop
sbb
or
div
and
push
outsb
push
insl
mov
push
test
mov
fdivrs
shll
push
pushf
pop
mov
push
shlb
jne
aad
in
push
iret
repnz
fnstcw
in
shlb
sti
shll
push
and
and
jns
jle
test
nop
pop
mov
push
jbe
out
sahf
subb
in
ret
mov
push
xor
insb
pop
pop
adcl
jnp
repz
out
and
ljmp
mov
fwait
jmp
mov
fdivp
std
sub
xchg
mov
mov
xchg
out
lret
pop
stc
cltd
mov
mov
dec
jbe
dec
mov
jb
das
or
clc
mov
lods
xchg
sub
lret
mov
add
cmp
movsb
dec
das
push
ja
or
call
mov
cld
xchg
mov
sbbl
fiadds
sub
add
mov
adc
arpl
inc
sub
lcall
ja
mov
aas
xchg
and
mov
mov
popf
aaa
repnz
xor
mov
and
fnsave
sub
out
fisubrs
ljmp
sbb
cs
or
pop
dec
add
jbe
push
out
dec
test
je
push
fists
mov
std
mov
and
and
pop
lock
ror
jb
imul
dec
jnp
pop
repz
cmp
xor
or
pop
dec
cli
sub
mov
aas
adc
outsb
and
push
adc
ljmp
jns
jl
jb
push
dec
dec
jle
mov
and
ret
aad
pop
lds
lea
mov
push
in
jmp
ror
mov
popf
mov
pop
pop
dec
dec
cmp
sub
sbb
or
cld
std
in
in
int3
int
mov
mov
pop
pop
dec
dec
cmp
sub
sbb
or
cld
std
out
in
int3
int
mov
lea
push
pop
dec
dec
cmp
xor
or
push
fucom
int
mov
or
jl
xchg
negb
cmp
movsb
shl
loop
repnz
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
cld
push
fstpl
js
pop
das
pop
and
sub
rcll
or
add
add
add
add
add
add
mov
sbb
add
add
roll
add
jnp
push
add
add
jl
inc
add
add
mov
add
add
add
test
repz
add
sbb
add
pusha
add
add
add
pop
add
add
mov
add
mov
cwtl
add
xchg
add
jp
push
add
in
add
add
add
add
sbb
add
add
add
add
aad
pop
add
add
add
and
add
add
add
mov
add
add
arpl
xor
add
add
add
outsb
add
mov
add
add
add
add
add
add
add
add
xor
mov
add
push
add
add
cltd
add
add
add
mov
in
add
js
arpl
cmpsl
add
add
add
testl
out
add
loope
pop
add
add
adc
mov
imul
add
add
popa
add
add
add
add
add
add
add
add
add
pop
or
mov
add
add
adc
ret
add
pusha
add
add
in
add
add
mov
jne
jne
xor
dec
add
add
or
or
xor
xor
add
adc
mov
sub
adc
es
add
add
add
add
add
cmp
add
add
add
xchg
add
test
add
add
add
add
sub
flds
jno
cmp
add
add
add
or
sbb
jo
lret
add
mov
xchg
add
add
dec
add
sbb
test
add
mov
add
arpl
out
add
add
add
add
add
dec
add
add
xchg
add
add
add
add
add
jo
push
add
enter
cmp
addl
add
add
or
popl
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
cmp
pop
add
mov
add
xor
xor
and
add
add
add
add
aaa
add
add
add
add
and
mov
add
add
add
add
add
dec
add
out
add
add
add
movsb
add
add
add
popf
add
pop
add
add
add
pop
add
add
adc
mov
add
add
add
pop
add
push
add
add
add
add
add
adc
push
add
add
push
add
adc
push
add
flds
pop
add
sbb
mov
add
add
cmp
add
add
add
add
add
add
cmp
add
or
add
add
add
add
add
inc
add
add
add
add
add
add
add
je
mov
add
sbb
xor
std
lahf
sbb
push
pop
mov
mov
and
xchg
mov
mov
data16
mov
mov
push
lcall
test
fimuls
xor
sub
cltd
imul
mov
push
xor
adc
in
imul
ds
pushf
mov
arpl
sub
out
jge
jle
pushf
cmpsb
push
fisubl
lahf
push
push
fiadds
jnp
jno
jl
inc
adcb
cmp
xor
cmp
rorb
push
mov
hlt
into
and
xor
lock
push
adc
inc
flds
out
in
test
mov
cwtl
dec
insl
jo
lahf
scas
cmp
les
xorl
mov
shlb
xchg
adc
xchg
sbbl
out
sub
pop
and
jecxz
inc
jno
aad
imulb
sbb
mov
or
push
jae
inc
sbb
repz
or
or
movsl
jge
test
mov
insl
dec
scas
sbb
push
adc
mov
mov
fwait
scas
cmp
aad
insl
lods
inc
fisubs
rcrb
pusha
ja
inc
je
js
xor
mov
push
test
jge
ds
dec
aad
and
rclb
lret
fstps
out
sbb
cmpsb
push
jl
inc
adc
xor
push
movsb
mov
inc
jl
loopne
jno
fnstsw
add
rolb
pop
rcl
sub
jg
inc
cmp
fisubrs
or
xchg
xor
mov
pop
pushf
mov
jle
rolb
dec
ljmp
movsb
dec
lds
mov
jle
daa
mov
jbe
sbb
pop
test
mov
int3
sub
dec
jge
pop
daa
fs
push
add
dec
mov
xchg
fsts
push
jae
testb
inc
icebp
mov
sub
mov
dec
pop
ljmp
sub
std
dec
into
sub
inc
add
es
sbb
in
cli
pop
outsl
int3
rcrb
jo
xchg
push
cmc
lods
jp
nop
xchg
inc
sbb
imul
popf
mov
fidivrs
cmc
adc
fcmovne
cmpsl
outsl
sub
sub
pop
test
push
movsb
or
push
cltd
xchg
xchg
dec
outsb
leave
ficompl
outsl
sahf
outsb
mov
mov
out
xchg
jl
fcmovnb
flds
and
icebp
push
cwtl
out
dec
add
icebp
jge
sbb
xchg
fdivl
fisttps
imul
mov
out
fildll
jmp
xchg
xchg
or
xchg
dec
ret
sbbb
movsl
pop
pop
cltd
jle
pop
enter
scas
lods
es
pop
sahf
cld
add
add
add
add
rolb
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
repnz
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
repnz
repnz
mov
repnz
lods
repnz
movsb
repnz
pushf
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
repnz
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
repz
mov
repz
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
hlt
add
cwtl
hlt
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
add
or
add
xor
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
pop
add
pushf
pop
add
xchg
pop
add
mov
add
test
add
jl
add
je
add
insb
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rclb
add
fcoml
add
lock
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
sbb
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
sbb
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
sbb
add
add
js
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
