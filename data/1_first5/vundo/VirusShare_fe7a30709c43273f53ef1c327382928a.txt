pusha
call
pop
out
xor
mov
mov
mov
rorb
jmp
push
gs
mov
ret
jbe
sbb
fdivp
shrb
stc
je
inc
cmp
pushf
fldt
mov
jecxz
int
sub
jmp
adc
adc
lret
pop
or
cli
loope
sti
dec
movsl
mov
loop
push
pop
jmp
negl
jmp
lds
or
and
clc
pop
push
sub
mov
pop
push
xor
popf
dec
pop
cmp
jl
mov
lock
and
movsb
inc
imulb
int3
dec
pop
jne
scas
bnd
jns
push
mov
fiaddl
pop
cs
ret
jmp
arpl
shrl
xchg
loopne
xchg
cltd
xchg
jae
fisttpll
jnp
and
in
ss
fsubs
icebp
or
sahf
mov
out
xor
push
std
sub
sbbl
push
jmp
ljmp
aad
psrld
aam
cmpsb
sbb
cld
mov
mov
lods
sbb
fdivp
shrb
stc
je
inc
cmp
pushf
fldt
aas
jmp
inc
mov
jecxz
int
sub
jmp
lock
pusha
dec
adc
adc
aas
repz
or
cli
loope
sti
dec
movsl
mov
loop
add
jno
or
xor
mov
xchg
negl
sbb
lds
or
and
clc
pop
push
sub
mov
jmp
popf
jmp
dec
pop
cmp
jl
mov
lock
and
movsb
inc
imulb
int3
dec
pop
jne
scas
bnd
push
mov
sbb
cs
inc
arpl
shrl
jmp
jmp
xchg
loopne
xchg
cltd
xchg
jae
fisttpll
jnp
and
bound
in
ss
fsubs
icebp
or
sahf
mov
out
xor
add
and
cmp
ja
sbbl
incl
dec
test
ljmp
psrld
aam
cmpsb
sbb
cld
mov
mov
lods
sbb
fsubrp
lret
das
jb
je
inc
cmp
pop
shr
pushf
fldt
mov
jecxz
int
sub
jmp
adc
adc
out
or
cli
loope
sti
dec
movsl
mov
loop
add
jno
or
xor
add
cmp
or
jmp
and
clc
pop
push
sub
mov
pop
push
xor
popf
dec
pop
cmp
jl
mov
lock
and
movsb
inc
imulb
int3
dec
pop
jne
scas
bnd
push
jmp
mov
fiaddl
pop
cs
repnz
cmp
cmp
shrl
xchg
jmp
loopne
xchg
cltd
xchg
jae
fisttpll
jnp
and
in
ss
fsubs
icebp
or
sahf
mov
out
xor
sub
sbbl
ret
cmp
xchg
inc
ljmp
psrld
aam
cmpsb
sbb
cld
mov
mov
lods
sbb
fdivp
shrb
stc
je
inc
cmp
pushf
fldt
aas
inc
mov
jecxz
cmp
int
sub
jmp
jmp
adc
adc
out
or
cli
loope
sti
dec
movsl
mov
loop
add
jno
or
xor
mov
xchg
negl
lds
test
jmp
leave
jmp
add
push
or
sub
mov
pop
push
xor
popf
dec
pop
cmp
jl
mov
lock
and
movsb
inc
imulb
int3
dec
pop
jne
scas
bnd
push
mov
sbb
cs
ret
arpl
shrl
xchg
loopne
xchg
cltd
xchg
jae
fisttpll
push
mov
sub
push
jmp
in
ss
fsubs
icebp
or
xor
sub
jmp
sahf
mov
out
xor
add
add
sub
sbbl
add
rorb
mov
add
xor
xor
sub
or
and
dec
xor
add
dec
jne
mov
mov
xchg
subl
mov
add
add
mov
jmp
lea
ljmp
and
add
and
rolb
cld
leave
ret
push
mov
sub
push
jmp
mov
sbb
cld
mov
sub
jmp
gs
adc
jmp
pop
mov
add
add
leave
mov
mov
mov
or
sub
sub
sub
and
and
rol
push
or
sub
andl
add
or
sub
sub
sub
dec
add
or
or
xor
or
sub
xor
dec
or
dec
jne
mov
mov
pop
push
or
pop
jmp
fldt
or
add
test
aas
inc
mov
jecxz
int
add
xor
leave
ret
push
mov
sub
sub
jmp
inc
scas
bnd
sbb
jmp
hlt
push
mov
add
add
sub
jmp
aaa
fiaddl
inc
pop
sub
xor
mov
mov
mov
add
and
sub
ror
add
dec
jne
mov
mov
pop
mov
addl
mov
subl
add
add
leave
ret
push
mov
sub
push
push
xor
mov
mov
mov
and
sub
shl
xor
and
and
sub
sub
sub
or
or
add
sub
xor
sub
sub
xor
and
or
sub
dec
jne
mov
mov
mov
or
add
and
mov
push
and
pop
jmp
jp
add
jmp
mov
les
add
sub
leave
ret
call
in
gs
insb
or
push
cmp
add
push
scas
mov
stc
loopne
fdivrs
mov
inc
in
xor
xchg
add
inc
sbb
scas
sbb
mov
insb
jno
adc
mov
je
mov
jecxz
test
lock
test
in
lock
lods
and
sahf
dec
xchg
out
adc
cmp
jp
in
es
push
adc
cwtl
fucomip
jb
and
mov
inc
rorl
xor
add
fwait
es
pop
nop
aam
and
sbbb
or
mov
adc
out
cmp
cmp
pop
xor
scas
mov
mov
and
push
push
sub
pop
fisttpl
push
or
mov
loope
fdivl
sub
fwait
out
lods
mov
lret
and
shlb
pop
push
mov
aas
cli
sub
scas
out
lret
mov
ss
sub
xchg
push
ficomps
flds
mov
sbb
xlat
pushf
lock
adc
sbb
or
jo
sbb
push
scas
lret
mov
cs
lock
add
jo,pt
test
jbe
xchg
into
cmp
cltd
ret
dec
push
pushf
ja
lcall
lock
dec
cmp
push
sbb
push
addr16
xchg
jmp
imul
in
loopne
pop
subl
xlat
inc
adc
out
pop
mov
repz
xor
push
push
jns
push
ljmp
les
lods
xchg
pop
inc
adc
std
push
fneni(8087
or
test
inc
dec
cmp
pop
cmpsl
out
scas
mov
inc
mov
and
lcall
jb
popl
lcall
adc
push
ret
or
jle
stc
mov
test
mov
cmp
aad
mov
mov
jo
or
rclb
sbb
pop
push
jnp
push
push
pop
sbb
cld
test
adc
xchg
iret
adc
inc
dec
out
adc
imul
inc
add
xchg
cli
aaa
adc
mov
outsl
in
notb
movsl
push
jmp
frstor
mov
sub
lock
ficomps
in
rorb
idivl
push
loopne
xchg
sbb
inc
inc
xor
xchg
cmp
sub
jmp
lahf
test
sub
idivl
jno
push
push
lret
das
mov
lds
es
jae
and
or
push
xor
lds
sbbb
adc
cmp
xor
and
rol
and
scas
mov
mov
or
pop
xor
or
jmp
fstpl
add
xchg
mov
mov
in
outsb
out
cmc
xor
jns
js
adc
outsw
sbb
adc
push
cld
test
outsl
sbb
insb
call
fistpl
fcoml
inc
jae
mov
and
dec
int3
hlt
xchg
nop
sub
imul
mov
call
or
adc
pop
cmp
mov
adc
pop
scas
lahf
das
xchg
nop
in
xor
repz
lea
or
and
mov
sbb
es
xor
sahf
sbb
sub
mov
inc
dec
out
adc
imul
pop
mov
in
cli
aaa
lret
and
ret
test
sbb
pop
movsl
push
sub
outsl
je
sbb
or
pop
mov
in
aas
fs
imul
adc
inc
xor
dec
cmp
sub
das
adc
test
lahf
test
jecxz
pop
std
or
and
or
add
add
mov
xor
xorl
dec
or
cwtl
or
cmc
lods
inc
cmp
popa
bound
push
inc
loopne
inc
push
fwait
push
lods
adc
clc
push
xor
nop
mov
sub
sbbb
adc
mov
mov
xor
pop
pop
jbe
mov
lock
mov
pop
mov
and
scas
insb
adc
lock
pop
mov
hlt
loope
test
cmpsl
imul
fisttps
aam
testl
int3
jb
jne
mov
adc
sub
mov
lret
lahf
sbb
ficoms
enter
lods
push
imul
movsl
sub
cmp
adc
mov
mov
dec
sbbb
pushf
bsf
jae
loopne
fiaddl
lock
fists
mov
xchg
aas
pushf
aaa
scas
cmp
call
add
hlt
push
test
sbb
push
inc
add
cli
aaa
test
mov
outsl
xchg
sbbb
xchg
ss
roll
adc
dec
fimull
lea
mov
in
ds
xchg
sbb
testl
pop
cmp
jae
outsb
sbb
push
subl
xlat
inc
add
pop
loopne
shr
mov
pop
rorl
xor
add
or
mov
es
mov
int3
cmp
adc
lock
fsubr
sub
cli
xor
lock
test
and
mov
std
sbb
mov
jne
cld
xchg
sbb
int
xchg
icebp
sbb
popa
leave
shl
fnstsw
loopne
iret
out
adc
imul
aas
enter
lods
pushf
in
loop
popa
sbb
stc
pop
loop
ret
sub
loopne
push
lods
push
int
shlb
stos
clc
sbb
push
xor
pop
push
push
sbb
jp
in
mov
push
loopne
pop
fldl
lock
or
mov
and
adc
sbb
and
jmp
cmp
cmp
xchg
sbb
jno
xor
test
sub
stc
xchg
ja
jecxz
sti
dec
dec
repnz
xchg
fwait
ss
mull
movl
fnsave
fidivl
xor
add
sub
sahf
pop
mov
jge
xor
popa
push
push
aad
test
sub
cli
mov
lods
lock
subb
pushf
sbb
mov
divb
dec
or
test
loopne
mov
mov
movsb
mov
iret
mov
cs
out
pushf
or
xor
enter
movq
nop
popa
push
inc
imul
in
fiaddl
push
mov
mov
mov
pop
xchg
xchg
sbb
or
dec
je
clc
xchg
xor
fmull
enter
les
fiaddl
sarl
data16
sbb
scas
sbb
adc
adc
movsb
pop
sub
jecxz
xor
aaa
and
xchg
test
xor
cmp
push
sbb
xchg
sub
push
xchg
out
mov
cs
fimuls
mov
add
jmp
mov
pop
rorl
xor
add
inc
push
sub
jge
pop
sbb
dec
addr16
fadds
or
dec
scas
das
call
pushf
cmpsb
hlt
push
xchg
lcall
in
in
pusha
add
aam
adc
cwtl
int
out
pop
icebp
sub
movb
mov
xor
xchg
pop
jbe
imul
scas
mov
pop
mov
and
lcall
outsl
push
mov
xchg
cmpsl
push
push
into
sub
mov
lock
inc
lret
arpl
mov
jnp
into
jb
sub
out
loopne
and
aad
lods
xor
pop
sbb
dec
flds
push
and
shlb
test
sbb
mov
jae
inc
insb
sbb
bound
jno
mov
es
or
stc
dec
stos
sbb
lret
scas
mov
aaa
lock
fldl
inc
add
xchg
cli
aaa
inc
and
outsl
mov
cmpsb
push
mov
fisubs
mov
inc
negb
xlat
mov
ficomps
out
rorb
mov
push
repz
push
mov
rorb
dec
rcll
cmp
adc
test
test
jae
pop
std
mov
cmp
daa
out
popa
nop
add
pushf
or
repz
dec
int
mov
aaa
das
arpl
movsb
je
out
loopne
aas
fnsave
pushf
aaa
xor
add
jge
ficoml
in
xchg
mov
jge
cli
cmp
int3
pop
aad
pop
mov
and
xchg
insb
and
fwait
in
aad
cwtl
fs
fdivrs
mov
push
push
arpl
in
mov
adc
pop
lods
lahf
das
mov
in
ljmp
pusha
nop
jnp
xchg
dec
cmpsl
push
lret
hlt
dec
and
arpl
mov
iret
mov
add
pushf
xchg
out
xor
imul
aas
enter
lods
mov
cltd
xchg
outsl
fsubrs
lock
lret
mov
cmp
and
or
pop
into
xchg
inc
and
orb
inc
or
dec
lret
inc
subb
pop
jl
jae
push
roll
ret
stos
icebp
xchg
in
loop
test
aaa
faddl
or
inc
pop
push
in
push
or
or
in
mov
jecxz
ficomps
jmp
push
repz
add
stos
popa
cmp
fisttps
inc
std
push
cmp
scas
and
jnp
repnz
mov
sub
xor
xor
decl
mov
pop
popl
fwait
insl
test
push
xor
xchg
mov
add
or
dec
jno
xlat
pusha
les
cwtl
mov
dec
loopne
cmc
lock
por
cmp
pop
mov
xor
mov
mov
loope
mov
jg
adc
jno
test
mov
xchg
mov
loopne
leave
jb
pop
sbb
sub
mov
pop
iret
loopne
add
addr16
sbbl
or
daa
aas
les
test
fistl
xor
pop
pop
or
pusha
sub
loop
ljmp
sbbl
and
repz
lock
fwait
jge
mov
inc
dec
out
adc
add
orl
aaa
xchg
and
mov
imul
push
andl
and
test
scas
add
lahf
andb
daa
jmp
push
repz
sub
mov
aad
stos
sarl
pop
jg
xchg
push
cmp
in
sti
scas
pop
popf
ss
gs
stos
or
ljmp
lock
ja
and
cmp
adc
xor
incl
jo
mov
ljmp
cmc
jecxz
jno
xlat
pusha
lds
pop
les
cwtl
cmp
out
addr16
xchg
test
pop
mov
xchg
aaa
andb
in
pop
out
lock
xchg
jae
orl
sub
push
inc
or
dec
jno
push
push
test
andl
fsubrs
and
cmp
int3
jne
inc
push
add
enter
lods
jp
push
shlb
xchg
outsl
fsubrs
xchg
dec
out
or
jecxz
call
lret
loopne
jg
inc
into
jae
clc
cmp
adc
sbb
mov
lock
or
inc
in
and
sbb
fs
scas
sbb
mov
pop
imul
sub
dec
je
mov
jecxz
sti
aaa
and
movsl
pop
sbb
dec
push
loop
cmp
sub
push
xchg
out
inc
cmc
cmp
or
in
es
loop
test
andl
cmp
sub
push
mov
mov
arpl
or
and
ja
fs
sti
les
repz
js
mov
pop
out
or
aam
inc
decl
fwait
pop
adcb
loopne
test
mov
stc
sbb
jl
jmp
nop
out
das
lret
hlt
xchg
fwait
sbb
leave
lock
xchg
jnp
mov
cmpsb
mov
mov
lret
mov
packssdw
add
enter
lods
loop
push
sarb
aam
push
mov
inc
lret
mov
dec
push
xchg
pop
in
loope
loopne
inc
lock
pop
xchg
jne
or
jle
in
or
push
loopne
jmp
push
sbb
aaa
out
adc
jnp
or
aas
mov
in
cmp
andl
pop
cmp
xor
fildl
sub
or
and
iret
into
pop
std
or
cmp
xchg
cmpsb
push
push
push
sub
mov
mov
push
fwait
test
cld
push
xor
lret
xchg
mov
shrl
add
mov
mov
push
int3
inc
dec
mov
mov
fwait
stos
shrl
test
push
cmp
pop
jbe
xchg
and
pop
jg
scas
mov
outsl
out
cltd
jae
push
ja
pop
fistl
mov
or
in
mov
push
ret
xor
xchg
mov
jnp
lret
jb
adc
sub
jecxz
shl
out
mov
lret
loope
loop
pop
das
arpl
ficoml
stc
sub
mov
inc
dec
out
pop
push
imul
add
dec
popl
insl
xchg
lock
loopne
adc
inc
jmp
pop
xor
lret
lock
push
xor
jp
jbe
sahf
orl
notb
cltd
ret
dec
push
pop
outsb
jno
mov
pop
ds
push
enter
sarb
sub
push
xchg
out
data16
loop
sub
or
into
lcall
movsb
addr16
jb
cmp
mov
pop
shl
sub
push
stos
insb
mov
mov
or
ficoml
cld
sti
ljmp
pop
push
or
aam
inc
decl
es
pop
xor
fwait
in
shrb
cwtl
pusha
xchg
xor
inc
nop
push
imul
dec
out
or
imul
arpl
add
enter
andb
aad
or
fwait
dec
adc
xchg
mov
mov
and
add
sub
jno
xorl
xor
lds
lods
push
stc
cmc
shlb
jns
dec
mov
rcr
and
jmp
pop
push
imul
pop
fisttpl
cli
aaa
fbld
mov
outsl
and
notb
mov
or
and
loope
pop
xor
adc
js
in
jp
jae
gs
inc
jecxz
insl
sbb
lret
in
aas
lret
in
xchg
nop
pop
add
arpl
push
int
push
sbb
cld
loopne
das
sbb
repz
xchg
loop
daa
add
arpl
xor
out
sbb
xchg
das
cmp
repz
adc
cld
add
jl
pop
in
loopne
out
imul
pop
fwait
xor
dec
stos
push
cmp
jmp
xchg
push
cmp
out
sti
dec
dec
repnz
xchg
sahf
ss
jmp
outsb
dec
gs
icebp
mov
loopne
je
and
leave
sub
popf
push
cltd
push
xor
ret
rcll
sbbb
adc
leave
cmpsb
cmp
xor
sub
and
pop
and
scas
mov
lock
pop
mov
aad
lcall
push
aas
mov
or
cltd
mov
push
ret
add
data16
xchg
lret
dec
push
mov
sub
push
fadds
negb
or
fucom
push
imul
adc
addr16
mov
sbb
add
test
or
in
test
xor
cltd
out
pop
das
xor
adc
out
nop
in
mov
enter
es
xor
xchg
add
sbb
xchg
iret
mov
mov
inc
dec
out
push
push
imul
add
mov
xchg
cli
aaa
mov
mov
outsl
inc
fdivp
push
movsl
mov
adc
add
shr
cmp
push
pop
imul
push
push
or
int3
aas
in
rcll
in
hlt
shll
dec
lret
fcmove
jb
repnz
xor
leave
sub
xor
cmp
sub
cmp
test
cwtl
test
std
int3
pop
std
aas
lock
mov
sub
mov
sub
dec
je
and
or
push
lock
inc
ret
xchg
mov
cltd
arpl
push
andl
pusha
vxorps
imul
mov
nop
xchg
pop
out
cmp
mov
cmp
or
mov
jae
lea
cmpsl
jno
into
sub
mov
fbld
push
ret
inc
fisttpll
ds
and
xor
sbbb
sahf
jmp
cwtl
in
jae
in
cmp
out
sub
cwtl
in
xchg
and
and
lahf
lcall
repnz
hlt
dec
cwtl
adc
xor
xor
fwait
repnz
hlt
push
cwtl
xor
dec
outsb
out
xchg
dec
jp
jp
pop
push
outsb
mov
popa
cwtl
in
leave
xchg
push
add
sti
in
addr16
push
lcall
sub
sbbb
das
push
in
cmpxchg
aas
int
cwtl
in
test
sbb
mov
lods
in
jns
repnz
comiss
sbb
jle
pusha
lds
fisttps
jp
sbb
add
addr16
sbbb
sbb
jo
adc
outsb
decl
ret
insb
and
aas
mov
mov
xchg
xlat
out
cmp
jnp
loop
sbb
in
mov
fnstcw
out
sbb
cmpsl
xchg
dec
scas
in
pop
add
cmp
or
lahf
sub
jnp
jecxz
mov
outsb
pop
mull
jecxz
mov
fwait
in
shll
ja
sahf
ffreep
cwtl
in
gs
xchg
push
cmp
pop
das
mov
aas
mov
cmpsl
xorb
sbb
aad
fisttps
nop
sbb
mov
xchg
sbb
inc
lock
inc
adc
lahf
mov
ror
adc
cmp
testl
adc
pushf
mov
out
add
das
mov
lock
pushf
pop
and
out
sbb
int
xchg
inc
add
push
add
pop
add
cltd
in
jne
mov
sbb
xchg
cltd
in
iret
sbb
mov
cmpsl
fiaddl
lods
push
mov
inc
dec
pop
das
arpl
aas
std
ds
fcompl
pop
or
data16
icebp
and
and
mov
sub
mov
add
in
xor
repz
jmp
hlt
aaa
cltd
adc
in
cmp
cmp
in
aas
das
adc
sub
mov
cltd
in
xor
jecxz
in
push
arpl
in
mov
cltd
in
pop
shlb
sbb
das
jbe
dec
and
lcall
sub
ret
sbb
mov
or
mov
loop
sbb
leave
jmp
loop
sbb
fs
lcall
mov
or
mov
sbb
in
btr
inc
add
and
or
xchg
hlt
xchg
jmp
cltd
in
jmp
cmpsl
rolb
jno
repz
popa
jecxz
hlt
xchg
cltd
nop
dec
sub
pop
xor
mov
inc
call
cmpb
das
cltd
in
cmp
mov
ror
push
repz
in
push
push
push
aaa
int
repz
sbb
add
fwait
int
push
dec
imul
and
mov
notb
jecxz
push
sbb
ror
lret
in
mov
fwait
repz
sbb
add
lahf
das
xchg
cltd
in
insb
out
add
pop
push
mov
pop
inc
pop
add
cmc
mov
mov
sub
out
in
das
sbbb
das
dec
fstps
cld
jae
adc
in
jmp
in
cs
dec
mov
aam
rorb
enter
in
mul
pop
das
in
pop
xchg
pop
jle
cmpsl
loopne
sbb
jns
sbb
sub
cli
imul
test
ret
neg
adc
mov
lcall
xchg
loop
sbb
and
ss
push
shlb
mov
stos
or
imul
aas
enter
lods
push
push
push
rorb
pushf
outsl
fcoms
xchg
pusha
loopne
xor
in
fucomip
fsubrl
repz
std
sub
adc
xchg
lock
cmp
faddl
lock
push
mov
jl
xchg
add
pop
scas
sbb
sbb
adc
dec
je
lods
pop
sub
push
pop
or
hlt
aaa
and
mov
loopne
push
cmp
sub
pop
xchg
out
push
es
es
adc
ror
jmp
mov
push
rorl
xor
add
push
lea
imul
loopne
cld
js
mov
cmpsl
jo
inc
sub
adc
decl
cmp
in
fsubrl
cwtl
push
xor
inc
nop
push
and
hlt
fs
test
call
icebp
sbb
into
lock
cmp
mov
mov
pushf
in
out
pop
add
lock
enter
lods
les
xchg
nop
pushf
outsl
fmuls
pop
jae
sbb
xchg
ljmp
addb
pop
rorb
cwtl
iret
xor
roll
dec
popa
xor
repz
pop
sbb
jmp
jg
xlat
lea
gs
dec
jl
xor
aam
and
inc
add
jp
adc
lret
and
push
jae
mov
xchg
pop
scas
xchg
xchg
lock
pop
das
ret
insl
sub
popa
inc
pop
mov
enter
das
lcall
xor
outsb
sahf
test
ljmp
std
fistpl
aas
lods
mov
fadds
mov
in
mov
inc
dec
mov
jecxz
lds
stos
daa
in
push
fwait
into
mov
pushf
cmpps
cmp
in
push
mov
js
jecxz
jno
mov
mov
adc
xchg
ret
sub
stc
testb
dec
lret
inc
adc
jae
pop
ficoms
data16
sub
sbb
lret
add
test
mov
andl
addr16
ljmp
loope
idivl
xor
aas
ljmp
aas
loopne
xchg
orl
clc
sbb
push
pop
arpl
mov
pop
add
dec
push
lret
xchg
aam
and
out
xchg
out
push
lea
sub
aad
inc
into
adc
jl
lock
aaa
fnsave
push
and
mov
sub
dec
sub
sti
out
std
js
mov
lock
pop
aad
inc
mov
sub
cli
out
test
pop
negl
mulb
jcxz
dec
sbb
dec
enter
fwait
in
lods
in
or
mov
pop
pop
fs
pmulhw
adc
jo
jg
sbb
add
in
nop
add
jmp
adc
mov
inc
mov
in
pop
cmp
adc
mov
andl
fs
or
push
sbb
data16
xor
xor
push
das
negl
icebp
shld
jg
inc
mov
or
mov
aad
pop
fildl
mov
mov
jno
jbe
dec
cmp
movsb
and
cmp
in
jmp
and
add
arpl
cli
or
dec
das
stc
in
lcall
sbb
sti
mov
xor
ret
imul
jle
in
jb
cmp
sub
mov
loop
and
daa
push
sub
jae
dec
popa
cmpsl
clc
sbb
minps
and
add
ja
in
subl
inc
jge
inc
jmp
cmp
cld
shll
je
sbb
in
loopne
lret
in
xchg
leave
mov
mov
xchg
rorb
loope
push
repz
or
stos
xor
inc
pop
mov
fisttps
out
or
nop
int
in
pop
or
pushf
in
xor
lock
xchg
nop
jg
imul
dec
and
ja
in
sti
cmp
xchg
ss
mov
cmp
dec
movsl
cmpsb
jecxz
mov
push
fwait
sub
daa
js
ret
pop
pop
mov
pop
adc
adc
push
in
rcrl
jp
stc
lods
cmp
xor
std
push
jbe
sbb
ljmp
push
mov
and
jns
orb
jno
push
aas
call
daa
push
leave
dec
xchg
in
cltd
loop
mov
cmp
icebp
sbb
enter
mov
add
mov
rcrl
push
imul
aas
enter
lods
les
rclb
outsl
fmuls
pop
jae
sbb
xchg
ljmp
addb
int3
push
xor
loopne
mov
push
pop
sub
adc
mov
sarb
adc
enter
jle
stos
push
int3
lret
lcall
add
push
sbb
scas
sbb
adc
cmpsb
dec
je
stos
lock
sbb
push
loop
jno
xor
movsl
pop
mov
dec
xchg
inc
lock
mov
and
cmp
mov
and
mov
jg
and
or
js
mov
pop
mov
outsl
adc
popa
imulb
sub
jp
sbb
aad
les
xchg
rorl
outsb
nop
xchg
push
loop
cmp
mov
popa
andb
in
xchg
out
fstl
pushf
loope
into
mov
add
mov
ret
inc
fdivrs
jnp
shlb
adc
adc
jno
scas
bound
or
mov
and
fwait
outsl
fadds
and
and
pop
cmpb
push
movsl
xor
mov
shrb
std
push
cmpsb
mov
ljmp
stc
mov
decb
xchg
add
scas
sbb
pop
dec
pop
hlt
shrb
das
jge
in
iret
jecxz
mov
push
inc
out
hlt
outsl
popf
pushf
pop
stos
xor
cli
shlb
xor
movsb
inc
hlt
push
or
arpl
lods
jno
push
aaa
or
popf
in
std
mov
test
cwtl
iret
jl
adc
cld
test
or
or
push
das
xchg
jecxz
lcall
int3
push
out
aas
loopne
ret
aas
sub
inc
push
and
mov
pop
std
jno
cmp
jmp
push
push
sub
xchg
dec
int
mov
adc
and
inc
es
add
xor
mov
cmc
rorl
sbbb
sbb
inc
lods
ds
add
out
mov
sub
pop
mov
push
mov
and
lcall
pop
pop
fcmovnbe
pusha
push
mov
sti
xor
inc
adc
stc
mov
lods
add
mov
test
mov
cs
out
xor
jmp
or
pop
jo
pop
mov
imul
jecxz
das
aam
in
fstps
mov
xor
aas
shld
pop
cmpb
or
pop
sbb
or
out
std
push
clc
mov
ljmp
stc
mov
mov
sarl
push
ds
test
jbe
xchg
orl
xor
sub
lock
and
lcall
mov
jae
mov
popl
cli
cmc
xchg
inc
pop
sub
adc
ret
push
aas
mov
add
pop
cwtl
hlt
mov
mov
xlat
xchg
mov
sbb
mul
fisttps
or
or
xor
dec
inc
icebp
xor
stos
loopne
das
sbb
dec
sbb
imul
push
jmp
xchg
dec
int
mov
xlat
jge
and
fwait
and
push
xor
lret
lret
lahf
mov
inc
repz
sbb
ljmp
xor
add
lock
sub
pop
icebp
ljmp
aas
in
out
add
loope
mov
jmp
pop
fistl
mov
jae
mov
cmpsl
ret
pop
into
sub
ret
movl
neg
outsl
jle
xchg
add
xor
jns
subl
xor
lods
adc
lods
cmp
mov
adcb
pop
loopne
jno
dec
shll
mov
dec
dec
out
pop
push
imul
add
int
inc
add
fwait
cli
aaa
shrl
mov
xor
stos
push
cmp
or
and
test
add
in
xor
cmp
or
jno
dec
cltd
dec
adc
sbb
rcrl
sbb
ficoms
lcall
loopne
rcll
sub
sub
xchg
test
loope
pop
std
sub
cmp
mov
push
push
ja
mov
jns
dec
int
mov
mov
lock
leave
icebp
and
popf
sbb
lret
sbb
cmc
gs
ja
push
cmpl
cmp
add
out
addr16
jbe
test
ljmp
push
mov
and
push
pop
fldt
bound
ja
xchg
jae
mov
repnz
pusha
sbb
popa
jae
adc
jecxz
dec
sbb
into
cmp
iret
inc
mov
sbb
xchg
mov
test
inc
xor
nop
js
arpl
loopne
mull
dec
mov
or
enter
lods
and
push
shlb
and
cltd
outsl
fsubr
pop
jae
cld
mov
or
jmp
mov
loopne
jne
inc
jno
or
mov
and
outsb
andl
scas
jnp
stos
push
insb
leave
jg
cmp
xchg
add
pop
scas
sbb
sbb
adc
dec
je
test
jecxz
adc
aaa
and
mov
pop
out
dec
push
and
xchg
cmp
sub
sbb
insb
nop
jo
xor
scas
arpl
push
imul
or
jae
push
xchg
or
in
out
mov
cmpsl
jge
mov
call
push
or
incl
cmpsb
cmpsb
jecxz
mov
push
fwait
repz
push
xor
lret
lods
pop
jo
roll
lock
push
loopne
call
pusha
lds
push
les
test
inc
lds
xchg
hlt
cmp
dec
insb
adc
mov
loopne
lock
in
int3
mov
lret
nop
into
sub
mov
fildll
fidivrl
jnp
ret
xlat
push
mov
mov
sub
mov
loop
fbld
arpl
push
fildl
cmp
leave
add
sub
in
or
pop
cwtl
ret
in
push
sbb
mov
pop
pop
add
pop
sbb
hlt
or
fists
pushf
pop
sbb
xchg
insb
pop
xor
mov
sbb
xor
mov
mov
push
cwtl
ret
in
or
jne
aas
push
sbb
dec
call
icebp
aaa
arpl
inc
jno
repnz
jmp
pop
cld
sarl
je
icebp
jmp
lea
addl
pop
pcmpgtb
mov
lock
loope
stos
aaa
or
xchg
gs
repz
pop
sbb
inc
xor
or
pop
xlat
dec
dec
xchg
aas
or
fcompl
inc
cmp
adc
xor
arpl
aad
ss
mov
stos
flds
outsb
dec
aas
lods
fstpl
pop
pop
shll
fwait
aaa
popf
adc
leave
push
xor
cmc
lret
mov
sbbb
and
pusha
lds
lock
test
imul
adcl
cmp
imul
jmp
in
sub
daa
pushf
loope
repz
mov
flds
xchg
mov
in
jg
or
or
jno
cmp
shll
pop
fildl
cld
imul
fsub
sbb
inc
pop
jno
sub
push
mov
fs
cmp
fwait
outsl
push
test
sbb
mov
pop
or
bnd
pop
sbb
add
repz
sahf
push
sub
sbb
jnp
inc
loop
pop
sbb
cmpsl
cmpsl
sbb
or
mov
inc
aad
out
lret
notl
xor
jecxz
enter
lods
push
xlat
ret
shlb
fwait
clc
sbb
pop
mov
jne
aas
push
sbb
dec
call
icebp
out
loopne
mov
cmp
mov
sbb
or
fsubs
repnz
sbb
cmpsl
or
leave
repz
paddq
dec
loopne
fwait
dec
je
xchg
pop
sub
aaa
and
mov
cmp
ret
push
sbb
jg
xor
lock
jle
in
es
jns
mov
xchg
icebp
jmp
mov
mov
cmp
pop
pop
push
loop
mov
adc
dec
insb
ja
cmp
sti
les
js
adcl
mov
pop
pop
mov
pop
jae
cltd
jmp
jecxz
jl
or
adc
mov
dec
and
adc
int
fucomip
jo
inc
jle
ljmp
mov
ja
xor
pop
dec
pop
scas
test
ret
push
sbb
mov
mov
pop
jg
nop
xchg
daa
fdivp
cmp
push
or
or
mov
or
fidivrl
loope
repnz
push
jle
fstps
test
arpl
mov
test
fildl
loopne
aam
inc
mov
sub
jg
sbb
arpl
add
xchg
mov
sahf
sbb
xchg
push
aaa
lahf
fcmovb
addr16
dec
pop
cwtl
enter
cld
popl
adc
push
fildl
lock
mov
lock
scas
mov
stos
push
mov
jg
clc
mov
in
xchg
xchg
add
fs
scas
sbb
and
adc
cltd
ret
dec
push
les
lcall
lock
pop
dec
cmp
popa
cmp
sub
out
faddp
cmp
mov
adc
data16
jmp
mov
imul
push
xor
mov
flds
pop
cmp
mov
jp
in
hlt
mov
les
adcl
ret
aam
ja
mov
xor
insb
dec
scas
pop
sbbb
das
cwtl
push
mov
dec
arpl
xor
fsubl
pop
rorl
mov
dec
or
pop
repz
pop
sbb
sub
jecxz
out
jle
out
dec
or
add
sbb
mov
hlt
xchg
pop
out
push
sbb
dec
popa
xlat
xor
repz
pop
sbb
pushf
jns
sbb
faddl
out
pop
dec
loopne
jge
inc
leave
pop
fbstp
push
ret
push
out
idivl
jle
mov
sub
inc
jae
out
lret
cltd
das
loop
sbb
pop
ficoml
xchg
pop
xchg
iret
dec
dec
mov
mov
and
mov
jne
cmp
call
icebp
inc
data16
xchg
fcomps
iret
sahf
or
lret
push
test
and
hlt
imul
add
fdivl
dec
clc
inc
add
loopne
jae
push
add
sbb
or
aas
stos
jge
in
push
or
pop
pop
aaa
das
sub
lret
push
icebp
sbb
pop
jnp
sbb
divl
inc
test
mov
les
insb
pop
sbb
mov
dec
jg
or
arpl
pop
cmp
pop
popf
push
das
popf
sub
int3
jmp
stc
not
bound
aaa
jb
sahf
insl
stos
mov
sbb
jge
inc
cmp
dec
jne
das
lea
or
js
add
jbe
stos
orl
insb
and
push
rcrb
sbb
pop
xchg
mov
test
addr16
push
outsb
cmp
sub
xchg
out
fcmovb
cmp
mov
in
es
push
inc
loopne
sub
sbb
jmp
mov
push
dec
push
push
xor
add
lea
mov
ja
out
enter
les
pop
jo
cmpsl
jo
js
aam
je
mov
xor
insb
dec
pop
aas
sub
sbb
lds
aas
imul
push
insl
xor
or
push
mov
cmpsl
inc
into
sub
mov
fistps
push
ret
jg
mov
xor
js
jge
inc
lock
jns
es
pushf
xor
and
enter
lods
push
adc
dec
and
pop
cwtl
clc
sbb
popf
mov
jne
cmp
sbb
dec
call
add
cmpsb
cli
aaa
sub
inc
gs
inc
jmp
mov
xchg
push
mov
cs
out
and
inc
sbb
stos
mov
pop
rcr
rorb
lods
mov
and
stos
sub
inc
pop
xchg
jp
inc
mov
lock
test
ja
pop
std
mov
cmp
sub
mov
out
test
int
mov
jecxz
xchg
lret
jb
fwait
xor
push
xor
test
jecxz
mov
dec
into
sbbb
movb
xchg
cmp
push
rcrl
push
ljmp
fdiv
cmp
push
insb
adc
add
or
fdivrs
loope
lock
mov
adc
popa
mov
out
rol
jno
xor
pop
xchg
sub
cs
jb
in
stos
mov
mov
fcompl
and
jae
test
sbb
fwait
sarb
mov
subl
mov
xor
cmc
sub
pop
sbb
mov
hlt
mov
or
insl
sub
xor
jae
das
and
testl
mov
cmpsl
fwait
stos
scas
inc
mov
adc
mov
inc
pop
sbb
icebp
inc
add
xchg
jae
repnz
pop
ss
inc
lret
mov
sbb
pop
or
call
mov
mov
push
bound
or
adc
std
push
testb
dec
add
jmp
xchg
pop
lods
out
mov
add
xor
popf
jbe
lods
orl
or
pop
sub
lret
pop
push
mov
cmp
push
sbb
jp
xor
lock
xchg
lods
ss
cmc
push
stos
fwait
add
lcall
sbbl
jns
adc
int
xor
movsl
mov
jno
sbbb
and
ret
xchg
lock
les
jns
out
xor
rcl
adc
pop
and
fcomi
cmp
outsl
mov
daa
pop
andb
in
sub
icebp
sbb
mov
mov
dec
or
ds
rcrl
imul
aas
enter
lods
add
push
rclb
and
mov
jae
fcompl
rorl
ret
call
push
or
sti
xchg
mov
push
sbb
adc
std
push
jl
loope
dec
mov
stc
mov
xor
sarl
push
add
xor
dec
popf
jbe
lods
addl
lcall
popa
push
xor
cmp
sbb
lods
movsb
sar
addr16
mov
daa
popa
in
stos
mov
movaps
arpl
and
xlat
lcall
adc
cmp
mov
lock
sbb
mov
shll
inc
and
and
arpl
aaa
lock
movsl
mov
jmp
and
std
rorl
out
lds
imul
xor
jl
repnz
pop
lahf
lds
aas
sbbl
jns
lcall
pop
push
stos
lea
cmpsl
scas
gs
sub
or
mov
lahf
sub
xchg
jle
jge
inc
mov
aad
lcall
shll
lods
push
sub
dec
and
popa
sahf
clc
sbb
and
out
and
imul
inc
add
mov
inc
arpl
ficompl
or
lods
out
mov
in
sbb
xchg
add
outsl
sbb
scas
sbb
cld
push
pop
adc
lahf
dec
je
xchg
pop
sub
aaa
and
btc
push
sbb
jnp
xor
mov
out
inc
lds
loop
arpl
sub
jmp
jmp
inc
jle
cmc
jmp
mov
insl
rorl
xor
add
cmp
xor
sahf
jp
mov
push
or
into
push
xchg
cli
pop
or
aaa
ret
insb
stos
pop
adcb
in
jecxz
cwtl
andb
nop
in
mov
dec
push
movsl
sbb
stc
int
add
icebp
sbb
icebp
and
shlb
int
stos
mov
adc
rolb
cltd
insl
cmpsb
jb
xchg
cmp
jne
repnz
lock
cmp
mov
dec
gs
sbbb
mov
loopne
dec
jnp
inc
inc
psubb
mov
stos
push
test
jg
mov
in
mov
xchg
add
sbb
scas
sbb
mov
xlat
daa
mov
pop
inc
fcom
bndstx
repz
mov
pop
in
stos
mov
jl
inc
cmp
ja
aam
sti
mov
repnz
imul
outsl
add
dec
lea
lock
sub
mull
pop
inc
je
fwait
cmpsl
cwtl
adc
int3
push
loopne
bound
ss
test
push
jno
out
lds
mov
jl
repz
nop
xchg
mov
hlt
cmp
cltd
dec
mov
lds
add
mov
shrb
mov
mov
nop
jnp
lcall
sbbb
loop
dec
adc
pop
xchg
xchg
mov
icebp
or
adc
iret
test
dec
pop
cltd
add
xor
cmp
int
sbb
xchg
jge
xchg
stos
das
sub
nop
push
rcl
pop
leave
cmpsl
inc
or
addr16
mov
add
add
lock
into
mov
mov
cmp
adc
xor
loopne
lcall
cmp
shlb
and
mov
jae
repnz
xchg
or
or
rcr
call
mov
mul
loopne
jnp
ja
or
xchg
clc
jle
adc
insb
mov
jmp
and
stc
mov
mov
sbb
popa
inc
and
mov
icebp
in
xchg
test
mov
cmp
mov
xor
divl
sub
push
and
test
xchg
pop
std
xchg
stos
and
outsb
dec
leave
stos
pushl
lahf
cmpsb
jecxz
sbbl
ja
fwait
loope
adc
iret
push
xor
xor
daa
dec
pop
sbb
jge,pn
mov
aam
mov
in
add
or
xor
int3
or
sahf
xchg
add
sub
push
push
jae
loop
cwtl
jecxz
inc
sbb
mov
aas
mov
mov
pop
dec
sub
add
or
jae
mov
dec
sbb
scas
aad
mov
in
sti
jmp
push
push
sahf
cmpsb
in
pop
xor
mov
push
jge
mov
call
pop
pop
add
inc
or
lock
xlat
mov
sbbl
mov
xchg
ds
cmp
out
subl
pop
jne
scas
mov
push
aas
imul
push
insl
ss
fisttpl
pop
push
push
mov
cmpsl
inc
data16
sub
fwait
adc
xor
mov
movsb
mov
test
clc
push
cltd
adc
jl
add
mov
adc
pop
enter
lcall
mov
fisubrl
nop
dec
shlb
adc
xor
jo
das
and
fwait
mov
sbb
lret
mov
cmp
inc
xor
shlb
and
mov
jae
call
fisttpll
xor
rcr
call
orb
loopne
dec
jnp
mov
psubb
adc
pop
mov
stos
push
jl
jg
pop
pop
lods
out
mov
add
xor
dec
popf
or
xlat
mov
mov
cmp
mov
xor
fisttpll
sub
mov
test
sub
sarb
xchg
push
push
add
mov
or
sahf
cmpsb
jecxz
sbbb
inc
inc
and
arpl
push
xor
repnz
cmpsb
mov
lods
lret
adc
movb
xchg
cmp
outsb
jbe
xor
ljmp
push
aas
ret
pop
inc
popa
inc
xor
loopne
jae
lds
sbb
or
mov
test
inc
loopne
ss
fstpt
mov
cmpsl
xchg
data16
sub
mov
filds
loop
testl
jl
jge
inc
mov
aad
cwtl
xor
fildll
dec
sbb
lods
push
leave
mov
and
xchg
pushf
clc
sbb
dec
mov
jne
cmp
dec
call
add
mov
mov
outsl
or
notb
xchg
push
or
ljmp
jmp
ficomps
aad
loopne
push
cmp
scas
sbb
imul
pop
lods
add
sub
shrl
and
add
iret
cmp
pop
fwait
push
push
xchg
pop
mov
popf
mov
sub
lea
test
cs
movsb
leave
rcll
js
xor
lret
mov
aam
dec
ret
push
jno
jmp
icebp
cmp
xor
jbe
mov
leave
scas
mov
mov
and
dec
lcall
push
push
adc
xchg
adc
out
push
arpl
lods
faddl
push
or
in
sub
out
xchg
jecxz
enter
jl
mov
jmp
sbb
sbb
mov
fstps
mov
dec
pop
jg
ret
icebp
push
loopne
lahf
mov
jmp
jae
jge
dec
mov
aad
xchg
xor
jnp
enter
lods
push
mov
inc
and
repz
clc
sbb
daa
mov
push
imul
call
std
mov
sbb
outsl
gs
push
sbbl
or
in
mov
stos
int
xlat
inc
mov
rorb
jne
push
repz
cmp
dec
pop
push
movsl
lock
fmuls
sbb
add
sub
and
enter
mov
mov
subl
xlat
inc
pusha
and
into
cs
pop
cld
ljmp
sbb
mov
pop
pop
push
or
mov
lds
pusha
rol
sti
les
mov
sti
scas
add
cwtl
sub
adc
sub
cli
adc
test
sub
sbb
mov
jne
ret
inc
xchg
hlt
int
dec
pop
sahf
lret
add
or
or
add
dec
mov
cmp
loopne
loope
inc
or
std
xchg
nop
shrl
inc
fdivrp
out
cmpsb
jns,pt
jns
in
loop
cmp
xor
repz
adc
lahf
rcll
xchg
or
push
dec
pop
mov
imul
xlat
lahf
das
sbb
clc
jb
xlat
cmc
pushf
sub
fcomps
jb
lret
xor
sti
addl
inc
dec
or
or
mov
test
inc
hlt
push
fistps
add
jecxz
ret
loopne
jns
repnz
ss
lock
loopne
xchg
push
rorl
xor
call
cwtl
pop
mul
into
inc
jnp
mov
or
fcoml
daa
lock
stos
push
inc
jg
adc
sarl
pop
add
xor
inc
popf
jbe
add
sbbb
fildl
pop
sbb
xchg
fstpl
xchg
fucom
rclb
loopne
push
cmp
scas
lock
cmp
daa
lods
call
inc
pop
mov
xchg
insb
cmp
fdivr
sti
jecxz
repnz
cmp
stos
cmp
movsb
jmp
nop
cmpsb
jecxz
mov
xor
movsb
leave
arpl
push
xor
cld
lret
cmp
divl
push
jno
ljmp
jno
cwtl
cmp
movsl
pop
nop
xchg
out
hlt
cmp
bound
adc
jecxz
jae
pop
sarb
loope
cli
mov
xchg
jbe
subb
fwait
stos
mov
test
cltd
dec
mov
aad
xchg
xor
xlat
and
sar
arpl
clc
sahf
sbb
adc
cmpb
int3
or
mul
pusha
inc
jnp
push
dec
psubb
or
fsub
mov
lock
rep
push
idiv
jg
movsb
mov
xchg
add
arpl
fs
sub
adc
xchg
dec
loopne
sub
push
clc
push
jno
sarb
pop
pop
fimull
scas
xchg
jne
push
loope
mov
rolb
sbb
lock
fwait
add
in
sbb
ljmp
sub
mov
stos
stos
or
jno
lock
mov
cmpsb
jecxz
pop
pop
lea
loopne
lds
popf
insl
pop
mov
pop
mov
cltd
push
shrl
fisttpll
jmp
les
mov
cmp
dec
pop
nop
xchg
mov
in
das
cwtl
mov
and
mov
into
jne
bound
int
shl
sbb
and
sarb
push
outsb
ret
pop
out
adc
bound
xchg
cmp
mov
lods
outsl
fcom
push
pop
pop
push
xchg
sahf
push
roll
sub
rolb
lock
xor
mov
jnp
xchg
dec
psubb
adc
js
daa
lock
lock
push
pushf
cld
jg
lret
in
mov
xchg
add
sbb
scas
sbb
sub
adc
push
pop
sub
jecxz
add
lock
dec
jle
pop
fimull
ss
inc
and
and
out
lods
lret
push
in
shlb
lcall
jb
push
fnsave
lods
stos
in
xor
dec
add
push
jae
mov
jno
push
ret
xchg
xor
sbb
in
ret
rolb
das
shrl
popf
jne
pop
mov
mov
shrl
fisttpll
jmp
les
mov
cmp
xlat
pop
nop
xchg
xchg
aad
cmp
push
out
imul
gs
test
or
mov
loope
stc
mov
jne
fxch
subl
add
popa
jno
jge
dec
mov
aad
stos
outsb
sbb
repz
or
push
adc
in
hlt
add
adc
arpl
lock
xor
inc
and
jns
clc
sbb
mov
xor
sbb
inc
call
icebp
add
in
jmp
xor
shrl
or
shlb
and
sbb
xchg
adc
pop
push
sbb
cmp
adc
cmpsb
push
sbb
and
pop
mov
add
repz
mov
jmp
dec
stos
xor
inc
pop
jb
inc
lods
outsb
cmp
loopne
movsb
test
pop
lock
std
lahf
int3
cmp
add
mov
aad
dec
int
mov
pop
pop
std
jp
fwait
sbb
push
xor
dec
addr16
stos
mov
push
movb
iret
jp,pn
push
add
mov
in
outsl
sub
xor
cmp
insb
mov
test
mov
sbb
mov
iret
jne
push
stos
sbb
test
sbb
jmp
shlb
ret
mov
outsb
add
loopne
cmp
insl
cmpsb
jb
xchg
cmp
cmpsb
lods
outsl
fsubs
jae
cmp
or
fstp
call
jb
mul
sub
inc
inc
dec
psubb
daa
lock
sahf
sub
ja
notb
sahf
lock
aaa
fcoms
adc
jnp
or
aas
mov
in
add
mov
push
cmp
lods
sbb
cmpsl
js
mov
hlt
xchg
pop
imul
sub
movaps
test
movsb
lock
jbe
scas
imul
add
or
lret
outsl
mov
addr16
mov
dec
inc
and
pop
adc
pop
insb
pop
mov
test
insl
rcr
dec
jno
xchg
jae
ds
ss
xchg
shll
pop
testl
push
dec
add
sbb
xor
gs
out
orl
imul
xchg
jae
mov
into
sub
add
ret
jae
mov
jnp
icebp
jb
sbb
fldcw
inc
adc
xor
cmp
adc
ficoml
and
dec
inc
xchg
clc
sbb
cltd
mov
push
sbb
inc
call
icebp
and
inc
sbb
inc
jmp
andl
or
dec
add
jbe
movsb
orl
loopne
cltd
ret
dec
push
push
push
jno
xchg
pop
or
dec
push
repnz
cmp
sub
push
cmp
cmp
lock
sub
mov
inc
jle
cld
lock
data16
pop
push
out
repz
adc
push
mov
pop
pop
push
and
sti
les
lret
in
xchg
pop
imul
ret
cs
mov
mov
mov
ret
insb
cmp
pop
sub
fwait
in
ljmp
adc
sub
mov
lcall
push
inc
adc
add
pop
push
aad
add
sbb
lock
and
icebp
sbb
clc
and
rolb
les
outsb
cmp
mov
cmpsb
push
hlt
xchg
cmp
cwtl
jl
repnz
in
lret
mov
sub
pop
cmp
movsb
loopne
mov
mov
push
push
sbb
adc
mov
std
push
and
loope
push
test
scas
cwtl
or
mov
jl
sarl
pop
add
xor
movsb
orl
notb
pop
sub
jecxz
js
aaa
and
push
sbb
int3
add
ret
dec
add
xchg
cmc
inc
inc
or
and
mov
mov
sub
jecxz
inc
movsb
daa
pop
movsb
or
out
pop
sbb
rorl
xor
add
adc
in
or
js
xchg
pop
cwtl
xor
aam
jnp
mov
aas
ret
insb
nop
mov
flds
mov
xor
inc
nop
mov
sbb
mov
inc
mov
testb
mov
js
out
into
aaa
imul
aas
enter
lods
xor
shlb
and
stos
outsl
loopne
xor
mov
add
or
fcmovnu
call
addb
loopne
mov
jnp
mov
psubb
adc
fs
lock
stos
push
js
jg
jae
lods
out
mov
jp
pop
add
xor
popf
jbe
movsl
orl
fisubrl
cwtl
dec
jle
lock
mov
dec
cmp
push
sbb
jae
xor
mov
xchg
pop
mov
subl
xlat
loopne
sbb
fwait
imul
stos
out
repz
adc
push
cmpl
cmpsb
pop
pop
push
lret
pusha
mov
lret
js
xchg
pop
and
cmpsl
jo
ja
aam
jnp
mov
data16
test
jle
repnz
mov
inc
lock
jne
xchg
lods
sbb
icebp
int
inc
aad
sbb
mov
iret
mov
mov
out
cmp
imul
aas
enter
lods
cmpsb
arpl
hlt
cmpsl
stos
outsl
fsubs
int
dec
in
lret
xchg
mov
or
fcmovnu
call
xor
lock
mov
or
add
loope
sub
push
scas
mov
push
lods
out
mov
jp
pop
add
adcb
out
imull
sbb
in
fsubp
mov
push
cmp
test
xor
stos
add
or
iret
sub
test
add
pop
std
add
push
push
xchg
adc
mov
cmpsb
jecxz
mov
xchg
push
mov
push
xchg
sbb
mov
dec
mov
imul
cltd
mov
aam
and
sbbb
sub
mov
xor
out
inc
addr16
fstps
ljmp
arpl
and
dec
lcall
push
push
adc
lock
mov
outsl
into
sub
testl
mov
lods
mov
test
xor
subl
and
lods
push
push
int
movsl
adc
xchg
clc
sbb
mov
pop
lock
inc
add
jno
inc
add
cli
aaa
test
mov
outsl
jns
notb
fwait
push
jge
or
jecxz
mov
fwait
outsl
mov
ja
ficomps
rcl
cmovnp
push
loopne
test
xor
cmp
or
jge
and
mov
pop
std
jnp
cmp
in
push
push
daa
adc
outsb
data16
int
cmpsb
lret
lret
cmp
adc
cmp
inc
push
dec
pop
dec
cmpsb
pop
mov
nop
repz
mov
dec
or
or
lock
xor
lcall
lods
sbb
outsl
fimull
sub
mov
jo
mov
lds
stc
in
pusha
lds
mov
cmp
jmp
nop
xchg
lods
shl
cmp
jns
adc
and
lret
xchg
jae
mov
into
sub
add
mov
push
ret
xchg
jmp
lock
jb
cmp
dec
mov
aad
nop
xor
mov
dec
leave
cmp
jne
and
addr16
clc
sbb
mov
xor
inc
call
loopne
stos
lock
jnp
inc
jmp
xor
push
fnstsw
je
jmp
or
iret
mov
in
add
push
cmp
test
popa
push
jl
mov
lock
pop
fwait
mov
xchg
push
ja
fdivrp
sti
and
fldl
add
pushf
push
push
adc
adc
pop
pop
icebp
jle
fwait
pop
xchg
adc
push
xor
cli
lret
scas
mov
outsl
ret
in
movb
sahf
cmp
xor
adc
mov
imul
sbb
scas
mov
mov
loopne
js
adc
or
gs
and
int
mov
loope
cld
mov
stos
jo
fldenv
cwtl
mov
adc
add
sbb
mov
add
movsl
test
jae
cmp
xchg
lret
xor
call
test
gs
cmp
or
dec
mov
loope
push
psubw
adc
sbb
hlt
mov
mov
hlt
in
sbb
lds
popl
mov
mov
in
xchg
cmp
add
push
cmp
test
popa
movsl
jl
mov
lock
sub
or
test
mov
pop
std
or
cmp
xchg
pushf
push
push
lret
outsb
dec
cmc
insb
mov
movsb
dec
int
mov
inc
and
sbb
mov
lret
scas
mov
ret
ret
jns
movb
sahf
ds
xor
out
andl
pop
out
movsb
and
inc
jnp
or
ja
andb
in
mov
aaa
pushf
loope
jecxz
xor
xor
mov
pop
inc
jle
std
in
jb
or
mov
aad
xor
and
enter
lods
push
adc
pop
and
pop
mov
sbb
popf
mov
push
sbb
dec
sarl
ret
xchg
or
inc
cmp
fcompl
cli
adc
inc
mov
popf
ret
fsts
push
jmp
pop
pop
cld
rol
adc
xchg
sti
or
test
pop
mov
cmp
mov
popa
xor
mov
out
xchg
pop
lds
sub
jae
cmp
sar
jg
test
jnp
pop
std
mov
movsb
ljmp
mov
cmpsb
jecxz
xchg
pop
pop
fbld
fwait
cmp
fsts
cmp
lret
mov
jmp
fldl
andl
jp
jno
out
pop
int
insl
test
xchg
cmp
cltd
inc
nop
xchg
ror
hlt
cmp
jnp
loopne
dec
out
pop
push
lcall
dec
push
stc
cltd
xchg
jae
movsl
or
pop
popf
ret
jmp
mov
add
and
jge
push
mov
aad
adc
lret
inc
push
adc
in
add
push
outsb
mov
leave
push
icebp
movsb
or
mov
push
sbb
pop
call
loopne
inc
int3
icebp
lret
jae
inc
incl
sub
mov
push
ret
adc
daa
sti
or
sbb
lock
fs
dec
cmp
mov
popa
andl
stos
sbbl
inc
pop
jne
ja
sar
fwait
insl
repnz
inc
mov
stos
mov
outsb
dec
push
mov
cmpsb
jecxz
mov
or
mov
dec
add
movsl
daa
dec
pop
add
sahf
or
jge
insb
sbb
pop
xor
jns
cmp
sub
cli
lds
mov
fstpl
mov
mov
loopne
pop
lahf
test
ret
arpl
repnz
icebp
sbb
fsubp
inc
leave
shrb
mov
rcrl
sub
push
daa
aas
enter
lods
xor
shrb
and
mov
fdiv
jae
mov
add
dec
or
dec
loopne
fs
stc
mov
push
sbb
inc
int3
icebp
inc
jb
inc
cmp
inc
jmp
ja
cld
shr
adc
lods
cli
or
xchg
xchg
add
dec
push
fs
movsl
mov
cmp
mov
popa
pop
bound
mov
out
xchg
pop
imul
or
pop
xor
test
ljmp
lds
mov
or
sub
xchg
push
fwait
xlat
mov
dec
add
in
or
scas
lds
aad
dec
or
adc
loopne
notb
or
dec
or
adc
pop
dec
sbb
int
adc
pusha
or
nop
jle
push
insl
rorl
lret
mov
jle
movsl
pop
xchg
xlat
pop
scas
mov
jl
aas
stos
dec
out
inc
push
lcall
dec
push
xchg
cwtl
xchg
jae
movsb
or
and
call
mov
jnp
in
jb
jecxz
mov
mov
add
aad
mov
loope
enter
lods
loopne
adc
xchg
leave
loopne
sbb
or
loopne
mov
sbb
pop
mov
push
sbb
pop
call
icebp
jecxz
loopne
movsl
incb
sub
mov
mov
adc
or
add
sbbl
or
cmc
into
add
test
sub
aaa
and
mov
cmp
rclb
fisubrl
push
test
xchg
movsb
mov
sub
cld
xlat
inc
mov
pop
movsb
aas
xchg
jb
push
fnsave
rclb
xor
repz
push
xor
mov
jmp
filds
sub
jp
movl
jbe
roll
ljmp
jg
aas
and
and
push
lcall
dec
lock
leave
mov
loope
loope
xor
jns
lock
sub
idivl
add
ljmp
jge
push
mov
aad
lea
ja
enter
lods
push
dec
rol
movsl
or
mov
sbb
shll
sub
sub
xor
mov
add
pop
xor
pop
sbb
sub
repnz
inc
cmc
xchg
mov
push
xchg
lock
stos
loopne
adc
mov
cmp
sarl
inc
add
xor
pop
popf
jbe
mov
cmc
into
or
cltd
ret
dec
push
lods
dec
jno
jle
movsl
pop
lock
sbb
xchg
add
fistps
insb
addr16
test
xchg
movsb
mov
pop
ret
mov
inc
ret
sbb
mov
sbb
push
dec
sbb
cmpsb
adc
xlat
add
pop
sbb
add
mov
aam
sub
mov
in
jmp
xor
or
lcall
xor
add
mov
popa
and
jecxz
pop
enter
mov
push
hlt
les
push
out
mov
hlt
stc
mov
xor
loope
std
mov
mov
dec
xor
test
add
sbb
pop
scas
jg
xorb
outsb
pop
repz
and
mov
hlt
sub
movsb
adc
xlat
leave
repz
sbb
in
and
and
in
and
mov
or
dec
notw
xor
mov
mov
hlt
addb
xor
movsb
xchg
jle
das
das
in
lock
lret
in
add
sbb
mov
test
add
mov
lcall
dec
sbb
mov
int3
icebp
dec
jo
mov
jmp
jg
daa
mov
dec
cmp
dec
imull
sbb
add
adc
lret
das
jle
in
mov
xchg
ja
in
enter
dec
dec
lret
lret
mov
imull
mov
push
dec
gs
sti
jge
in
jb
cmpl
inc
dec
notl
iret
hlt
test
xor
insl
mov
mov
mov
push
xchg
lds
aaa
comiss
aas
ficoml
dec
sbb
test
add
nop
out
mov
in
and
inc
pop
jno
out
hlt
test
add
rcll
cwtl
adc
int
sbb
xor
divl
lret
fcmovnb
movsb
sub
pop
adc
lcall
data16
adc
mov
ret
movsb
inc
cmpsb
ffreep
mov
cmp
gs
test
enter
mov
mov
xor
int
mov
cmpsl
add
hlt
jb
adc
mov
popa
or
lahf
stos
mov
mov
mov
hlt
sbb
iret
cmp
pop
adc
bound
iret
adcb
mov
push
xchg
aaa
sub
pop
das
mov
sbb
movsb
int
idiv
mov
or
leave
ret
dec
jb
cmp
xor
pop
inc
mov
mov
mov
cmp
addl
push
int
or
mov
ja
add
ja
and
push
push
cs
fs
movsb
pop
in
pop
cmc
leave
repnz
jg
ljmp
pop
roll
cmpsl
inc
sbb
fwait
push
stc
fsin
or
inc
leave
sbb
sub
or
mov
fiadds
call
cli
add
outsl
push
es
dec
imulb
in
inc
pop
mov
cmp
icebp
cmp
jae
test
mov
pop
int
pop
mov
dec
rcr
jns
stos
hlt
fildl
xor
lcall
add
ja
add
ja
add
ja
xor
pop
sub
inc
push
int
cmc
mov
xchg
push
mov
sub
scas
sbb
out
cmp
mov
jnp
leave
js
inc
test
cmc
jecxz
loopne
add
nop
int3
mov
fcomps
xchg
push
test
mov
pop
xchg
push
test
mov
adc
push
sahf
jmp
sbb
enter
cmc
mov
cmc
mov
jne
jp
inc
mov
rorb
int
or
xchg
ja
jmp
and
fstpl
adc
mov
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
lcall
movsl
adc
out
rorb
leave
pop
fwait
cmp
mov
ja
and
mov
push
js
and
jmp
aam
bound
nop
popa
roll
mov
ja
jne
push
mov
dec
scas
push
in
cmpb
fisubl
filds
xchg
fimull
inc
add
ja
mov
leave
inc
xchg
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
popf
mov
and
ret
mov
in
push
cmp
xchg
lods
jbe
xlat
xor
jo
dec
les
mov
scas
mov
imul
mov
mov
jo
adc
roll
or
movsb
mov
stc
fmul
add
sbb
sbb
les
mov
repz
dec
and
pop
mov
adc
xchg
xchg
and
aaa
testb
fsubrs
fsubrs
xor
dec
inc
or
aas
jns
enter
arpl
movsb
or
push
leave
clc
dec
or
cltd
pop
shr
and
in
imul
cmp
js
sbb
popa
jl
xchg
jmp
add
and
jno
jge
int
in
and
and
cmp
jno
lods
imul
pop
or
add
jnp
dec
jmp
es
mov
cmp
mov
jg
push
arpl
mov
icebp
mov
pop
sbb
icebp
push
add
imul
mov
sbb
into
out
je
jg
ljmp
repz
mov
add
dec
lods
mov
scas
mov
test
push
call
pushf
xor
scas
cmp
repnz
xor
add
arpl
inc
insb
cs
cltd
ja
add
clc
negb
repz
xor
test
push
xchg
or
or
sub
sbbb
std
add
aas
xor
mov
xor
inc
cmpsl
pop
scas
cmp
arpl
inc
cs
mov
test
sbb
in
nop
out
push
arpl
in
or
sbb
insl
and
pusha
add
sbb
fadds
ficoml
sbb
mov
or
mov
mov
or
ss
movsb
mov
out
sub
jo
das
jecxz
inc
mov
sarb
xor
test
ret
lret
ss
mov
repz
sub
fdivr
mov
rolb
out
pop
inc
out
cmpsl
nop
out
call
push
or
cmp
inc
cmp
cmp
fists
push
cmp
sub
xchg
push
and
bound
out
fs
shr
pop
sub
and
daa
aad
fiaddl
dec
xor
out
xor
dec
je
dec
pop
mov
mov
add
aam
sahf
mov
shlb
out
adcl
xor
cmc
stc
mulb
mov
shr
dec
mov
adc
add
fwait
insl
push
add
bound
mov
in
aas
movsl
icebp
jmp
mov
negl
pop
lret
push
notl
les
sarl
jp
ds
mov
sub
lret
shr
and
aaa
inc
jp
push
std
push
jmp
xchg
xchg
push
and
cli
lods
les
push
loopne
xor
movl
shll
inc
xchg
add
outsl
sub
xor
xchg
int
out
inc
aas
fsub
cmp
lods
cltd
or
mov
cmp
icebp
into
fldenv
mov
dec
xchg
cmp
aad
fimull
rcl
push
inc
clc
jge
icebp
fwait
cmp
loope
pop
cmpsb
fiaddl
arpl
mov
cmp
sti
ret
out
pop
cwtl
shll
cmp
jle
out
ss
sub
les
inc
pusha
mov
mov
aad
or
pop
or
inc
ja
cmp
xchg
shrb
dec
shrl
push
roll
fld
pop
pusha
ret
std
mov
or
sbb
adc
pop
andl
jnp
mov
mov
sub
ret
jnp
or
mov
popa
outsb
scas
loopne
jne
cmp
lea
dec
lret
jo
data16
mov
aam
out
add
imul
loop
mov
mov
data16
aam
mov
push
or
pushf
fdivrp
xlat
mov
mov
ret
insl
jo
dec
fdivs
cmpsb
icebp
xor
fisttps
inc
push
push
das
repnz
bound
mov
mov
sub
outsb
fld
test
adc
rcll
loope
cmp
cmp
push
mov
jle
fcompl
aas
aad
xchg
mov
push
xor
lret
mov
iret
pop
xor
cmp
jb
pop
rcrb
lret
push
push
lcall
sbb
cmc
jg
lret
paddsb
add
cwtl
cmpsl
sar
and
call
xchg
lods
cmc
jnp
sub
and
push
and
add
imul
ljmp
rcl
add
enter
adc
or
popa
inc
cmp
imul
sbb
movsb
stc
outsl
xchg
mov
je
mov
je
lods
test
add
jmp
sub
pop
push
out
hlt
mov
mov
fistps
fs
mov
sub
filds
mov
xchg
test
sub
push
adc
dec
pop
dec
es
aas
mov
pop
add
dec
xor
lds
xor
fwait
inc
jno
aad
cs
mov
das
fs
push
cmp
in
ss
sbb
sbb
push
or
xlat
rorb
mov
mov
mov
cmp
dec
sub
pop
nop
jge
mov
pop
std
insl
fisttps
inc
inc
xor
cmp
scas
inc
test
lods
cmp
lds
ds
lock
popf
roll
lods
sub
int
mov
mov
push
push
push
pop
pusha
cltd
in
sub
test
sbb
push
lahf
cmp
leave
shr
rorl
push
sbb
mov
mov
loopne
mov
cmpsl
dec
pusha
xor
mov
push
jo
mov
dec
js
pop
in
inc
xor
xchg
data16
lods
pop
and
cmpsb
movl
pushw
lret
cld
or
inc
pop
enter
sbb
cmp
out
fmuls
aas
and
xor
push
pcmpeqd
or
cmpsb
adc
fidivs
lea
sub
push
push
xlat
sub
lcall
xor
lock
mov
and
jae
arpl
cli
out
or
nop
jbe
mov
bound
mov
shlb
xor
pop
xchg
and
scas
lock
pusha
into
stos
push
fsts
cld
sbb
or
ds
shrb
push
fstl
sbb
and
pop
pop
xchg
repnz
into
mov
dec
xchg
out
push
into
sbbl
adc
out
lret
xchg
leave
lods
sub
loop
xor
sahf
xorl
mov
mov
test
in
test
sbb
dec
pushf
jp
and
adc
cli
subl
push
dec
pop
imul
mov
lea
xlat
cmpsb
lret
cld
outsb
js
outsb
jb
cmp
inc
nop
or
ss
lds
out
add
sub
sbb
repz
dec
outsl
das
insl
jle
ds
jmp
hlt
loope
pop
inc
push
movsl
adcb
stos
loopne
and
in
jno
ret
and
fisubrl
lock
ljmp
popf
ret
ret
xlat
cltd
inc
pop
ss
mov
test
mov
pop
xor
fcomip
inc
jns
into
test
pushw
sbb
repz
insl
xor
cmp
jle
and
jmp
inc
mov
mov
mov
jno
xchg
leave
sti
dec
mov
in
sbb
dec
hlt
arpl
mov
mov
shlb
popf
cmp
mov
mov
dec
pop
inc
mov
rcrb
cmpsb
sub
testb
test
mov
test
lcall
shlb
cwtl
xchg
cwtl
xor
fmul
jne
lret
inc
adcb
add
sub
shrl
fcompl
insl
xchg
xor
fldt
jmp
sub
sbb
add
dec
fxch
or
gs
repnz
mov
mov
icebp
fistps
testb
cmp
cld
pop
addl
test
leave
pop
aaa
js
test
test
lods
cmpsb
roll
inc
mov
cmp
cmp
push
adc
clc
movsl
pop
xlat
add
dec
dec
pusha
jmp
xor
cmp
mov
push
repnz
mov
pop
push
xor
hlt
mov
mov
jp
imull
cmp
lret
nop
cmp
sub
pop
xchg
lock
mov
xor
adc
add
jbe
or
cltd
add
into
jno
add
rorl
push
test
inc
dec
fmull
cmp
dec
gs
cltd
push
xchg
mov
lahf
es
clc
jnp
cli
push
and
sbb
adc
xchg
mov
push
mov
bound
pop
inc
sahf
mov
and
inc
gs
push
in
shll
test
jae
sbb
rclb
xchg
leave
cmp
push
inc
in
mov
jno
sub
fcmovbe
sub
icebp
pop
lock
cld
dec
daa
push
mov
popa
addr16
popf
mov
jmp
bound
loop
test
jno
sarb
or
in
int3
dec
hlt
jns
imul
inc
mov
and
add
push
loope
jmp
jmp
rorl
sti
push
popf
pop
fldcw
adc
mov
mov
fistpl
xchg
adcl
xor
enter
mov
pop
sub
stos
in
xchg
sub
push
pop
orb
into
insb
ljmp
jnp
test
jno
sbb
ret
fstl
inc
fmull
jge
push
cs
xlat
jge
adc
xchg
sub
xchg
and
mov
test
add
cmc
adc
cmp
addb
and
dec
xor
cmp
rcrb
pop
mov
loope
loop
dec
add
sub
movsl
ljmp
mov
stos
inc
ret
cmp
push
pop
rcrl
mov
pop
roll
jle
in
lods
movsl
mov
jecxz
pop
pop
test
pop
in
xchg
out
sbb
jns
fidivs
ja
sbb
mov
test
fwait
mov
inc
movlhps
insl
sbb
dec
push
mov
adc
es
xchg
in
inc
jl
dec
or
dec
subb
insl
cld
xor
xor
bnd
mov
adc
notl
pop
adc
cmp
loopne
gs
fisubrl
fsubrl
fcoml
inc
test
pop
dec
stos
call
add
incb
ja
sub
hlt
stos
and
push
cmpsb
outsb
sbb
cld
sbb
ja
mov
lods
dec
mov
sub
pop
insl
addl
das
movsb
pushf
and
aad
mov
sub
jbe
add
std
rcr
rorl
popa
mov
pushf
xchg
int
daa
or
xchg
sub
in
outsb
xor
fisubs
adc
jo
sub
sbb
lcall
imul
in
xchg
add
mov
stos
push
or
sub
cs
in
pop
jle
jns
cltd
cmp
daa
cmp
mov
mov
sub
cmpsb
into
fwait
jge
jge
insl
jl
repnz
inc
je
loop
fistps
cmp
xchg
sbb
enter
sub
push
pushf
sbb
dec
push
call
xchg
or
leave
inc
lods
inc
xor
jo
neg
xchg
adcb
pop
stos
out
aas
inc
rcrb
cwtl
cli
push
fisubl
push
fneni(8087
mov
mov
xor
adc
cmp
call
mov
icebp
adc
out
enter
mov
stos
or
jae
ror
mov
lcall
inc
inc
aaa
popf
outsl
mov
stc
mov
jae
add
mov
movb
das
and
ja
popa
dec
adc
icebp
fnstenv
sub
push
xchg
mov
inc
sbb
inc
xchg
xlat
jp
fsubs
jnp
jno
nop
jl
sbb
cld
fidivrs
xorb
inc
jnp
xor
sbb
jne
jb
call
jp
push
es
loop
jmp
adc
adc
imul
xor
repz
or
mov
icebp
ja
add
daa
xchg
push
daa
inc
mov
mov
out
loope
mov
repz
sti
pop
popf
in
xchg
push
in
adc
in
mov
call
test
int3
out
xchg
sub
push
and
add
mov
pop
insl
mov
ds
inc
rcrl
call
mov
outsb
mov
add
std
out
dec
es
adc
test
test
call
inc
push
xchg
imul
imul
pop
jecxz
stc
int3
aaa
in
sahf
add
jg
jg
cmp
xchg
outsl
lahf
fwait
push
call
inc
push
push
jae
out
mov
rolb
or
out
popf
fsubl
int
lret
jmp
mov
int
leave
sub
in
ljmp
sbb
xchg
sbb
push
inc
arpl
out
pop
mov
test
insl
pusha
lahf
cld
es
inc
leave
mov
pusha
xchg
xchg
hlt
shr
into
insb
xor
mov
jno
jle
imul
adc
testl
sbb
mov
stc
sub
push
js
dec
mov
add
add
sbb
sbb
icebp
pop
pop
mov
jbe
lret
mov
ljmp
stc
int3
movsl
es
loopne
xor
mov
dec
stc
xchg
xor
hlt
mov
orb
add
fnsave
mov
inc
add
fs
inc
and
lods
xchg
inc
popa
iret
fs
test
lret
popf
imul
xchg
push
push
mov
test
popa
push
or
inc
jp
iret
cmp
mov
or
adc
mov
mov
jo
mov
xchg
test
daa
faddl
pop
mov
cmp
aas
inc
daa
mov
inc
arpl
xchg
fisttps
je
sbbl
push
std
repnz
loop
pop
and
lea
repnz
cmpsb
pop
xor
bound
push
loopne
pop
repz
jecxz
push
xor
xchg
movsw
push
lahf
lret
data16
mov
xchg
ljmp
iret
test
gs
das
sub
sub
clc
fiadds
rorl
and
into
dec
insb
aam
mov
xlat
jo
xor
jno
addr16
push
addr16
inc
jge
adcb
xorl
inc
dec
xchg
pop
lds
push
in
out
jmp
or
and
aad
jns
and
push
jnp
mov
icebp
dec
inc
int
xchg
adc
xchg
mov
pushf
mov
scas
fldenv
dec
pop
nop
stos
loopne
dec
push
adc
cmc
loopne
stos
xchg
mov
sbb
in
popa
popa
cmpsb
aaa
mov
rep
jb
mov
xor
or
mov
cld
call
adc
int
leave
push
sub
dec
jmp
mov
enter
hlt
and
sti
scas
ja
test
lahf
mov
push
xor
shrl
lods
dec
stos
mov
xchg
add
out
xchg
mov
daa
fidivs
icebp
or
aad
pop
add
ffree
fidivrl
das
pop
fcmovne
mov
aas
in
inc
mov
cld
loop
fimuls
pop
les
and
push
arpl
pop
jae
jnp
pusha
sub
and
push
lock
loope
popf
loopne
lds
jbe
sbb
jae
stos
mov
notl
in
fbstp
jle
testl
inc
pop
add
push
scas
push
jns
add
xchg
andb
mov
or
and
jno
int3
adc
movsl
shll
mov
cmp
mov
xor
add
call
inc
testl
rcl
sbb
mov
mov
push
xor
icebp
mov
jle
sti
lahf
movb
mov
ret
loope
or
popa
mov
mov
adcl
cmpsb
mov
out
pop
jno
jne
mov
mov
adc
inc
mov
out
dec
cmp
aas
add
stos
lret
xchg
and
xor
xorl
daa
aad
mov
pop
sbb
dec
lahf
inc
add
imul
orb
stc
inc
jmp
cmc
pushf
push
dec
loope
pop
clc
bound
adc
push
adc
jae
xor
cmpsl
data16
push
imul
popw
gs
andl
in
shlb
and
mov
push
cmp
jae
mul
dec
push
sub
mov
jl
arpl
pushf
xchg
ss
into
das
dec
ljmp
pop
movsl
sbb
xor
aaa
mov
popa
ljmp
leave
dec
int
fstpt
lret
xchg
jbe
call
push
push
jp
lods
adc
jmp
mov
arpl
aaa
mov
insl
xchg
inc
dec
loop
cmc
mov
pop
test
sbb
or
insb
movsb
lret
mov
in
aas
jecxz
cld
ss
and
xor
ret
repz
xor
fwait
int3
shrb
rcrb
mov
scas
and
cmc
dec
xor
enter
mov
sarl
cli
jge
sbb
imul
repz
jnp
mov
cwtl
jns
or
lret
cmp
sbb
push
ljmp
out
pop
out
fnstsw
push
mov
push
inc
sbb
mov
pop
les
enter
fnsave
cld
jbe
imul
imul
je
mov
rcrb
jp
sbb
cmp
mov
ljmp
mov
pop
and
dec
ret
iret
out
sub
xchg
or
cli
ss
pop
pop
enter
cmp
fbstp
sbb
sub
jbe
sbb
jg
jg
adc
outsl
sub
jge
add
mov
scas
xchg
aam
fidivl
loopne
mov
pop
adc
sbb
cmp
dec
jb
push
xor
nop
push
or
jp
sub
add
mov
xchg
scas
inc
cltd
adcl
fmull
dec
sahf
and
addr16
xchg
mov
cmp
push
inc
cwtl
adc
loope
mov
decl
xor
enter
mov
scas
cmp
inc
jnp
lock
inc
popf
jno
repz
das
sub
or
or
in
or
aas
inc
sbb
and
pop
mov
dec
dec
xchg
and
jle
ret
movsl
loopne
lret
push
push
cmpb
or
cmp
and
ljmp
inc
xchg
outsb
jb
mov
sbb
adc
sub
adc
mov
or
int
or
push
pop
fsubrl
scas
popf
shl
xor
cmc
lret
cwtl
dec
fidivrl
in
into
aam
inc
stc
and
jbe
fcmovnbe
jge
xchg
pop
inc
xorl
sahf
add
and
lock
sub
dec
pop
xor
pop
mov
bound
out
xchg
iret
arpl
cmpsl
cmp
data16
lret
fwait
inc
js
dec
push
cmp
cmp
test
lcall
iret
inc
jae
pop
leave
sbb
inc
out
pusha
in
aas
cmpsl
pop
mov
sub
add
adcl
lret
add
pop
ror
dec
das
and
add
ja
out
cmp
adc
sbb
mov
mov
inc
and
push
and
push
adc
icebp
inc
mov
xchg
xchg
mov
jns
pop
jno
xchg
ljmp
mov
call
ficompl
loope
mov
gs
cmp
add
push
pusha
mov
ret
and
sbb
test
pop
add
ljmp
fdiv
dec
push
and
lcall
add
jnp
pusha
fildl
cmp
outsb
sub
andl
add
push
sub
inc
inc
stc
movsb
ss
or
repnz
loopne
popf
in
aaa
jg
push
popf
sbb
push
jp
or
fsubs
ja,pt
jg
mov
testl
push
jns
lret
or
mov
aaa
mov
js
ds
or
sub
and
sbb
sub
sub
pop
sbb
rcr
jmp
sbb
or
mov
repnz
xchg
push
sbb
into
adc
popf
jp
jg
arpl
test
mov
xor
fdivl
lret
cmp
mov
mov
lcall
jae
aam
sub
fwait
imul
jl
inc
sbb
inc
cltd
lcall
int3
pop
lds
ret
inc
push
enter
mov
jg
test
mov
scas
sbb
xchg
push
loopne
mov
jle
or
cmpb
cmp
gs
dec
out
imul
xlat
aam
push
repnz
add
js
adc
cmc
add
mov
xor
jb
push
mov
insl
mov
sub
pusha
ja
xor
and
stc
cmp
mov
out
pushf
shlb
sbb
xor
xchg
push
aam
scas
loope
dec
sub
mov
mov
sbb
pop
mov
out
pop
sbbb
add
jb
jno
rclb
mov
in
dec
xchg
std
lds
adc
aaa
stc
jecxz
push
xor
cld
aas
lods
pop
mov
cltd
or
pop
jae
mov
pop
and
dec
stos
mov
adc
repz
movsb
imul
mov
pop
xor
lea
shlb
add
push
cmpsb
lods
clc
std
jb
xor
sbb
lcall
jle
xorl
mov
mov
pop
dec
lods
std
jmp
mov
inc
lahf
cmp
lock
jnp
out
int3
lock
sarb
aad
jecxz
testl
in
into
mov
repz
pop
and
jns
ja
icebp
jmp
arpl
mov
jns
mov
adc
xlat
imul
hlt
mov
aaa
cwtl
cld
jmp
cld
data16
xor
and
jae
xchg
lods
sub
mov
mov
shrb
adc
and
and
jbe
jmp
in
xor
jb
and
fwait
adc
pushf
jmp
jne
pushf
sub
mov
cli
jl
sahf
outsl
je
sub
jb
call
lahf
cmp
mov
adc
fistl
or
sbb
mov
and
mov
test
dec
lret
xchg
in
jg
pop
mov
pushf
xor
loope
sbb
mov
das
cmp
cmpl
enter
int
testb
bnd
dec
xlat
in
pop
dec
cmp
sbb
andl
jo
mov
stos
push
ret
aaa
sbb
fldt
ds
cwtl
cltd
leave
ljmp
mov
mov
rclb
push
mov
movsl
out
push
test
or
mov
push
movsl
jge
addl
es
cmpsb
push
sub
jecxz
add
addr16
pop
sub
xchg
adc
shll
push
je
mov
jns
sbb
dec
sbb
stc
pop
fwait
cmpsl
dec
mov
out
xor
pop
xor
or
notb
enter
sbb
push
pop
cmp
stos
mov
mov
fwait
lcall
roll
adc
repnz
xor
iret
sarl
or
mov
ds
sti
pop
mov
outsb
push
pop
loop
push
inc
stos
mov
cmp
jecxz
mov
inc
aam
stc
lods
or
mov
shl
nop
xchg
mov
mov
or
fdivrl
inc
mov
sti
testl
sbb
lahf
xor
inc
mov
jp
sub
cmp
in
xchg
dec
lcall
cmp
mov
adc
push
sub
jge
mov
popf
imul
dec
pop
or
mov
adcl
in
xor
xor
pop
dec
mov
add
push
mov
push
iret
adc
jmp
xchg
int
mov
jl
inc
adc
popl
dec
loopne
dec
jge
push
iret
inc
call
dec
fsubr
push
adc
fidivs
sbb
dec
xchg
xor
out
mov
and
lods
popf
sbbl
dec
lcall
mov
mov
sbb
push
cmp
scas
sbb
bound
sub
cmpb
dec
je
mov
rep
out
and
aad
loop
outsl
jnp
add
cmp
shll
rolb
mov
popa
roll
jg
aas
adc
pop
pop
adc
loop
or
lcall
pop
cmp
js
jge
gs
jle
test
sub
inc
cmc
in
mov
push
sti
movsl
mov
add
xor
loopne
mov
cwtl
decl
adcb
lods
repnz
jecxz
dec
les
imul
mov
out
xchg
jmp
fistps
test
lea
jno
inc
imul
push
jnp
cmp
test
ja
fwait
and
mov
punpcklwd
mov
mov
in
push
enter
dec
mov
xchg
repz
cmp
out
sbb
popa
sub
arpl
int3
ljmp
adc
and
ljmp
pop
ds
cmp
imul
cwtl
cmp
imul
and
xor
gs
testl
cmpsl
sbb
inc
popf
les
inc
mov
and
sub
in
pop
xchg
cltd
cmpsl
pop
inc
dec
push
shlb
xor
and
ficomps
ficomps
out
movsb
inc
inc
mov
