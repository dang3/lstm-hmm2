add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
inc
mov
dec
cmp
pusha
sbb
mov
pop
add
push
add
add
add
add
add
lods
add
add
addl
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
mov
add
insb
add
add
add
add
add
cs
inc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
push
insb
add
add
add
add
insb
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
add
add
add
add
or
insb
add
daa
add
add
add
add
add
add
add
rolb
add
add
adc
stc
add
add
add
add
add
jl
sub
jbe
dec
add
add
add
add
add
add
inc
add
add
add
cmp
pop
add
add
add
rolb
add
xor
dec
add
add
test
mov
add
add
cmpsb
add
dec
add
add
add
add
add
lret
add
sub
fiaddl
cs
lds
addl
add
add
add
add
xor
aaa
add
add
add
inc
add
add
add
jecxz
xchg
add
fiaddl
mov
and
cmp
fiaddl
addl
fiaddl
or
push
add
dec
add
mov
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
mov
sti
add
insb
add
add
add
add
add
push
add
push
add
add
or
movsb
add
lock
add
add
jl
push
add
add
add
add
add
add
add
jle
dec
add
dec
add
add
add
add
add
push
into
add
add
add
cmpsl
add
add
add
add
and
or
ja
or
pop
add
add
add
add
add
add
add
pop
add
insb
add
add
add
fiaddl
mov
push
lds
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
add
ret
add
add
add
add
adc
insb
add
add
add
add
add
test
fadds
xchg
add
add
add
add
add
add
ret
add
add
iret
add
add
sub
shrl
jns
cmp
scas
inc
in
outsb
push
imul
add
pop
imul
push
adc
popf
jae
roll
mov
pop
scas
mov
sbb
or
lret
xor
sbb
repnz
sti
hlt
pop
stc
xchg
inc
mov
push
rol
scas
inc
xchg
push
js
sbb
pop
xor
dec
jl
pop
lods
mov
cmp
dec
comiss
sub
shlb
sbb
shrb
scas
into
push
inc
cmpsb
and
inc
push
jb
mov
sbbb
das
inc
or
orb
or
daa
cs
push
pop
add
push
cmpsb
movlps
outsl
lahf
les
sub
leave
xchg
pop
loopne
xor
sbb
xor
out
out
jae
or
mov
pop
push
ja
out
imul
xchg
enter
dec
inc
dec
mov
xchg
fisubl
and
test
xlat
pop
outsl
incb
xlat
cwtl
lcall
mov
xchg
gs
jo
loop
arpl
jp
movsb
xor
sahf
add
jge
addb
dec
pop
lods
inc
lret
cld
or
adc
mov
jge
dec
pushf
sbb
mov
sub
push
xchg
dec
sub
push
sbb
dec
cwtl
push
jp
inc
mulb
fdivs
shlb
call
ret
cmpsb
scas
add
and
fcmovnu
push
stos
mov
test
push
mov
xor
repnz
mov
pushf
jmp
jmp
mov
lods
xchg
aad
xor
mov
sub
jb
adc
fiadds
popa
test
or
sub
aad
sbbl
in
inc
fcoml
aaa
shlb
mov
sub
inc
dec
int
movb
xchg
mov
add
push
sub
loope
fcmove
pusha
cli
outsl
lock
jmp
sbb
dec
add
nop
hlt
sbb
lock
xchg
int3
imul
sub
out
mov
xor
add
in
sub
in
sarb
mov
shll
add
nopl
mov
xor
rolb
hlt
adc
js
cmp
in
jb
xor
xchg
fldl
push
sahf
sub
mov
lds
cmp
scas
xor
sbb
aaa
inc
sbb
adcl
xor
jmp
test
lea
aad
push
dec
cwtl
ljmp
dec
inc
loopne
out
add
mov
mull
cmp
sbb
mov
dec
in
jne
sub
aaa
aaa
jg
inc
movsl
inc
lret
pop
hlt
sbb
lret
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
cld
dec
in
pop
fsubrl
jns
pop
fdivl
jp
cmp
fstps
stc
cmp
sub
sbb
or
cld
dec
in
pop
fsubrl
jns
or
jl
insb
fldcw
jmp
sub
sbb
or
cld
dec
in
pop
fsubrl
jns
or
jl
insb
test
cltd
stc
push
fisttpl
push
int3
bound
scas
or
lods
fcoms
sub
mov
jmp
cmp
xchg
and
inc
push
sbb
js
xchg
and
inc
mov
ret
dec
cmp
sbb
pop
addr16
adc
inc
adc
loope
bound
mov
mov
mov
stos
push
mov
imul
push
ret
leave
sbb
push
cwtl
add
cwtl
movsl
mov
hlt
test
or
outsl
insb
mov
lret
cs
test
jmp
fwait
push
insl
sbb
pop
mov
movsb
in
or
add
insl
sbb
fs
fsubrl
jns
or
jl
insb
fstps
stc
cmp
sub
sbb
or
mov
das
test
pop
stc
dec
int
cmp
xchg
xchg
pop
in
loopne
sub
decl
sahf
adc
shlb
inc
mov
sbb
xchg
pop
out
imulb
or
xchg
sbb
or
pushf
sub
pop
jmp
sub
sbb
or
cld
dec
in
pop
fsubrl
jns
or
jl
insb
fstps
stc
cmp
sub
sbb
or
cld
dec
dec
dec
addr16
call
out
inc
scas
mov
jl
sub
mov
xor
call
jbe
out
cmp
jnp
inc
or
mov
iret
int3
stos
jecxz
addr16
mov
int3
sub
push
in
bound
fldt
pop
pop
mov
cmpsb
imul
xor
daa
popa
sbbl
movsl
stc
pop
divl
cmc
pop
subb
cmp
mov
and
pop
push
xor
fildl
or
pop
std
jno
icebp
scas
ret
pop
movsl
xlat
dec
mov
sbb
and
or
jmp
shlb
jno
xor
insb
pop
pushf
sub
sahf
iret
lds
cmp
dec
push
fimull
sbb
push
xor
cmpsl
loope
movb
or
cltd
sahf
or
sub
cmc
fcomip
jmp
pop
mull
js
test
imul
pop
loopne
les
jle
int
in
and
loop
fwait
dec
mov
adc
cmp
int
shr
xchg
xor
push
outsb
cltd
outsb
jle
add
xchg
mulb
or
push
or
jae
xor
sbb
sahf
lods
inc
jge
lods
js
in
jns
mov
push
add
mov
js
cli
sub
pop
jmp
mov
xor
add
imul
aaa
adc
ret
je
lds
pusha
mov
sub
or
sarl
call
or
mov
inc
xchg
fs
into
push
xchg
mov
int3
pop
nop
repnz
arpl
jbe
sbb
jno
xchg
movsb
aas
inc
xchg
inc
jge
mov
call
push
aaa
mov
jmp
movsb
lods
insl
cmc
test
pop
fidivrl
gs
outsb
sub
xchg
push
ror
out
push
push
aam
fimull
pop
push
rorb
inc
loope
addb
ljmp
add
xlat
bound
aad
pop
sbb
cmp
xchg
sub
clc
pop
and
xchg
mov
test
push
mul
ret
paddb
inc
insl
dec
pop
aaa
mov
sub
jbe
cs
xor
sbb
ret
sub
inc
inc
out
dec
add
cld
ja
lds
dec
pop
insl
pop
mull
and
arpl
jle
cmp
inc
and
in
bound
leave
ss
daa
pop
cmp
xchg
pushf
pop
jle
xor
out
inc
shll
cmp
in
push
and
mov
dec
ror
leave
mov
popf
push
sbb
adc
enter
out
sub
xchg
jp
xchg
push
gs
mov
push
add
add
mov
and
jno
mov
popa
fwait
mov
jbe
mov
cmp
fstpt
add
imul
bound
jmp
push
pop
mov
lods
ds
dec
mov
divl
hlt
mov
stc
out
fadds
push
mov
shr
fisubrs
repz
cltd
mov
iret
daa
mov
loope
cmp
jle
mov
xor
jle
test
outsb
dec
add
mov
idivb
shrl
sbb
push
or
fwait
push
incl
repz
ds
outsb
out
push
scas
jne
and
jp
push
jb
lret
xchg
insl
cmpsb
mov
jns
mov
xor
fidivs
cmp
adc
mov
mov
fs
jne
lds
push
shll
xor
mov
shl
je
add
mov
daa
mov
push
jg
pop
fbld
inc
mov
cmp
mov
repnz
lock
dec
or
add
icebp
lock
inc
imul
xchg
xor
in
cli
push
fistl
jb
clc
stos
mov
scas
test
popa
test
mov
iret
pop
imul
fsts
xchg
mov
adc
cmpsb
in
sarl
add
inc
sub
js
mov
dec
push
scas
inc
popa
xchg
dec
push
mov
stos
movsb
mov
pusha
sub
sub
or
ret
lods
ljmp
out
pop
or
adc
mov
push
pop
push
cmp
jnp
lock
subl
inc
or
sbb
call
popa
sti
pop
inc
or
mov
jb
cmpsb
cmp
push
test
int3
adc
mov
sbb
ret
out
xchg
sub
jl
dec
xor
adc
loop
sbbb
daa
lods
dec
in
and
fsubrl
or
xchg
shll
fucomp
out
fmuls
mov
pop
xchg
shr
lret
frstor
outsb
lock
push
std
adc
fcomi
scas
pop
popa
cltd
jecxz
shll
aad
lcall
jl
repz
push
jl
inc
in
inc
insb
add
cs
dec
cltd
dec
inc
lods
jae
inc
pop
pop
mov
xchg
ret
pop
sbb
xor
lcall
pop
jmp
outsl
pop
inc
sahf
stos
out
movsb
mov
and
sbb
aam
pop
or
inc
lret
add
test
sahf
cmp
nop
sbb
inc
das
frstpm(287
loop
cmpsl
hlt
jae
jae
nop
js
mov
cmp
or
arpl
mov
and
push
cmp
or
lods
or
xor
outsl
jl
add
inc
or
sbb
inc
sbb
scas
xchg
int
mov
pop
push
js,pn
ljmp
push
cmp
cwtl
add
mov
les
pop
mov
adc
popa
or
xlat
cmpsb
pusha
jbe
jge
xor
in
gs
jmp
and
mov
cmc
or
adc
rol
adc
imul
fisttpll
dec
out
jo
sbb
into
imul
mov
jle
push
adc
cmp
add
ret
mov
inc
call
jle
movsl
sub
fisubrl
lds
jbe
js
and
fimull
out
lahf
cli
and
mov
fisubl
rorl
xor
fnsave
daa
pop
xchg
popa
data16
inc
adc
stos
xchg
inc
or
icebp
into
test
inc
xor
hlt
test
mov
push
ret
xorl
xchg
shrl
add
scas
hlt
stc
fwait
add
adc
inc
mov
cmp
or
cltd
mov
pop
push
rolb
inc
testb
imul
push
lods
push
adc
out
sahf
xchg
movsl
cmp
lcall
dec
and
push
xor
mov
and
sbb
pop
adc
mov
jae
sbb
or
adc
xchg
in
mov
loop
cmpsb
pop
xchg
lret
xchg
pop
clc
jbe
data16
js
pushl
addl
in
push
mov
fxch
mov
fstpl
inc
sub
int
sbb
shl
push
dec
aas
push
pop
ljmp
xchg
push
mov
pop
scas
std
pop
mov
lds
push
sub
inc
push
mov
es
out
adc
ror
jmp
and
sub
inc
popf
push
cld
sub
xchg
mov
insb
cwtl
mov
fs
mov
jbe
pop
fs
mov
ja
leave
lahf
jmp
enter
push
mov
cmp
cmpsb
clc
push
icebp
sahf
call
lret
jge
add
imul
dec
outsl
in
popf
pop
inc
addr16
test
fwait
cmp
pusha
sbb
icebp
fimuls
in
daa
stos
mov
add
jb
jae
js
pop
int
rorb
mov
mov
mov
int
xor
pop
sbb
dec
lcall
fldln2
xor
xor
pop
sbb
ret
loopne
aaa
pop
lods
add
pop
and
arpl
aam
mov
dec
ss
leave
stc
int3
inc
and
adc
int
pop
mov
pop
in
pop
xor
ss
and
sub
jb
xchg
dec
in
outsl
mov
mov
mov
jle
xlat
into
mov
adc
add
jae
sbb
leavew
repz
xor
push
mov
cmp
pop
fdivr
nop
push
lret
mov
data16
xor
negb
mov
aas
fadd
shl
push
popa
or
push
imul
int
mov
out
cld
ljmp
hlt
mov
out
xor
sub
cmp
push
daa
jge
mov
bound
fstpt
and
fs
jle
jg
mov
push
jnp
sbb
inc
adc
xor
test
aam
and
aad
std
xor
lods
mov
idivl
movntq
lea
out
pop
ljmp
repz
push
cmp
push
add
fsubrl
sbb
aam
cmp
notl
fstpt
lock
loopne
pushf
sub
or
xor
inc
dec
cli
ds
cmp
dec
repnz
test
das
cld
pop
insl
sti
mov
test
outsl
sub
adc
cwtl
ljmp
or
sbb
adc
in
push
dec
mov
push
cwtl
jnp
aas
sti
out
outsb
adc
add
dec
jne
ljmp
jp
lods
arpl
sub
pop
push
cmp
mov
mov
mov
and
pusha
inc
jmp
cmpsl
int
popa
xchg
push
cmc
adc
jecxz
mov
aas
mov
std
lahf
ja
mov
gs
mov
push
fwait
loopne
xor
iret
fnstsw
push
loop
mov
es
stos
mov
xchg
in
jo
inc
cli
dec
sti
and
stos
out
sarl
sub
jb
jge
inc
int
lret
dec
sbb
lea
xchg
pop
jnp
sbbb
pusha
jne
or
xor
fwait
pop
jmp
and
sbbl
sarl
xor
aam
sahf
ds
call
in
out
lea
rcll
mov
dec
ficompl
call
cmpsl
jb
xor
lods
dec
mov
sub
aaa
adc
sbb
aam
aas
sti
mov
in
aaa
jo
ss
push
inc
in
push
adc
pop
imulb
or
cmp
outsl
cmp
inc
sti
sub
scas
inc
sub
dec
mov
test
fidivrl
dec
push
roll
fwait
pop
aas
mov
or
fnsave
bound
psllw
mov
es
mov
sbb
dec
cld
sbb
mov
adc
mov
jp
or
mov
fisttps
das
mov
mov
dec
mov
fsubrl
dec
add
push
movsl
movsb
push
dec
xchg
xchg
aad
scas
sub
stc
mov
jns
add
test
adc
add
mov
jo
cmp
or
pop
repnz
push
js
out
roll
sbb
shl
mov
xchg
pop
andl
mov
es
loopne,pn
jns
pusha
xor
jg
inc
mov
cmp
stos
pop
jg
push
sbb
les
shlb
ret
add
pop
mov
push
inc
inc
insl
shl
jo
or
pop
push
aam
or
and
and
mov
or
push
inc
aaa
inc
push
jo
adc
arpl
repz
jbe
fidivrs
mov
dec
or
pop
mov
sbb
push
scas
mov
inc
aad
and
test
xchg
cmc
jnp
or
ja
dec
dec
fisttpll
push
push
sub
mov
repnz
adc
push
dec
popf
xor
mov
cmc
daa
loope
and
jnp
gs
cmc
pop
je
pop
ss
rorb
sub
and
stc
stos
add
in
cmpsb
popa
movsb
dec
inc
xchg
jmp
jge
aaa
inc
lret
dec
add
fadds
or
mov
movsl
pop
mov
or
lcall
mov
insb
test
add
mov
and
enter
stc
mov
loop
popa
mov
push
popa
rolb
inc
cltd
mov
push
aad
sub
cltd
jp
jns
arpl
movl
xchg
pop
pop
imul
sbb
pop
adc
mov
fisubs
test
fisttpll
nop
iret
add
mov
scas
mov
loopne
subl
cmpsl
jbe
sub
or
inc
mov
loope
mov
adc
in
dec
sahf
jns
aaa
lds
sbb
xor
loop
enter
adc
pop
mov
mov
adc
test
mov
jae
pushf
insl
pop
les
dec
lock
cltd
popa
xor
jnp
or
les
push
jg
sti
out
jp,pt
or
pop
mov
hlt
mov
inc
ret
test
mov
pusha
sbb
adc
iret
insb
xor
adc
push
rorl
popf
stos
sti
xchg
insl
jp
frndint
push
in
xor
inc
xchg
or
lahf
xchg
stc
cmc
icebp
push
adc
sar
rdtsc
xchg
xchg
ss
xor
fistl
cmp
mov
xchg
inc
dec
in
rcrb
mov
or
lods
mov
sbb
jbe
out
sub
nop
cmp
cmp
push
xchg
xor
pusha
stos
fidivrs
sub
xchg
fadd
nop
dec
les
cmpb
aad
fldt
test
clc
andb
sbb
xchg
xor
and
pop
je
mov
repz
imul
pop
push
inc
xor
and
rorb
mov
outsl
sar
lret
sbb
imul
mov
jno
lock
push
enter
test
andb
int3
pop
ds
enter
xchg
sti
das
xchg
lret
jo
jp
out
adc
test
mov
jg
push
dec
sbb
fldcw
mov
push
adc
popl
cmp
mov
xchg
push
sbb
and
xchg
repnz
or
shrb
jmp
mov
mov
aas
cld
loope
subl
or
repnz
mov
push
sahf
pop
xor
push
push
mov
mov
call
jo
mov
mov
call
inc
jae
mov
testl
js
cli
iret
adc
ret
aad
cltd
jge
jns
sub
jo
jle
xlat
jp
ret
test
push
xlat
sub
mov
lods
add
mov
sub
mov
push
mov
dec
mov
adc
into
aam
adcl
adc
xchg
xor
fimuls
pop
fisubrl
mov
jecxz
xor
jnp
cmp
clc
jg
mulb
pushf
push
cwtl
sub
xor
dec
mov
inc
xchg
add
mov
cmp
bound
and
xchg
cli
mov
xchg
xchg
jae
xchg
add
sub
add
ror
cltd
shrb
adc
es
xchg
or
andl
inc
dec
test
pop
mov
addr16
xor
mov
sub
cmc
jg
fs
stos
cmp
sbb
ret
mov
xorb
pop
jl
xor
in
jecxz
mov
xchg
mov
std
int
imul
inc
andl
sbb
stos
lcall
insl
imul
bnd
dec
out
repz
sbb
leave
cmp
fstl
stos
pop
test
rorb
cmp
rolb
or
cmp
jo
xor
ret
or
aam
test
mov
repnz
add
pop
dec
jmp
iret
jge
add
mov
mov
es
and
dec
repz
push
jno
xor
push
cltd
push
xchg
mov
xchg
xor
imul
lahf
fstpt
cmp
scas
xchg
popf
inc
imul
sub
cmpsl
xor
jmp
repnz
cld
inc
in
xor
enter
and
inc
test
xor
jb
xor
sbb
sahf
jne
in
pop
push
nop
xchg
idivl
mov
jne
mov
pushf
sarb
inc
add
addr16
jb
das
addr16
pop
mov
loopne
jg
xchg
push
mov
cltd
or
mov
fcompp
movsl
push
into
cmpsl
ret
loope
mov
cmp
shlb
int3
call
out
mull
nop
adc
and
out
jo
mov
inc
leave
in
call
mov
fisubl
pop
sbb
and
push
movsl
xor
mov
gs
pop
push
pushf
push
test
je
insl
inc
xrelease
repz
repnz
adc
shll
or
cs
andb
lock
sbb
pop
pop
aad
sub
cwtl
out
dec
clc
adc
add
jbe
push
mov
jl
push
ljmp
loope
popa
sbb
clc
sbb
mov
jo
dec
sub
mov
xorb
imul
idivl
mov
int
cmc
cmp
push
mov
jp
or
pushf
cwtl
adc
fildll
xlat
jl
jle
insl
pop
dec
into
push
sbb
mov
int3
adc
cmp
repnz
push
adc
out
xadd
into
cli
push
add
lea
xchg
add
imul
ja
mov
mov
addl
out
fstp
jge
inc
push
fsts
popf
in
lahf
sbb
xor
popf
stos
or
cmpsl
cmp
ja
mov
jp
adc
push
jecxz
shrb
mov
ja
inc
pop
sub
pop
cmp
sub
mov
push
ss
into
lds
lea
sub
nop
xor
pop
hlt
and
add
enter
ds
in
dec
xor
pop
cmp
cmp
clc
and
lods
pop
jb
shll
loope
mov
push
add
out
cmp
movlps
pop
adc
jb
cmp
dec
pop
jb
xor
adc
repz
shll
fdiv
sbb
movsb
lods
sbbb
pop
imul
sti
mov
mov
lret
cmp
xchg
ja
sbb
sbb
popf
pop
pop
inc
push
cmp
and
ja
jecxz
sbb
loop
mov
test
add
outsb
jns
rcrl
xlat
cwtl
repz
inc
pop
lea
pop
outsb
nop
pushf
add
arpl
popa
inc
jmp
or
movsb
ret
xchg
addr16
hlt
xchg
pusha
int
mov
fcomps
jg
adc
std
adc
xchg
and
push
iret
dec
and
outsl
nop
pop
inc
mov
jo
mov
aas
sbb
out
cmc
mov
scas
xchg
jecxz
adc
push
jne
sbb
adc
fs
shll
pop
jmp
pop
xchg
mov
pop
test
or
jns
cmp
and
pop
clc
data16
cltd
push
adc
aaa
sub
stc
inc
popa
fldt
push
ja
jmp
rcr
xor
sub
fucomip
popf
iret
test
push
cmp
xor
pop
pop
cmp
insb
in
mov
out
pop
in
mov
sbb
lea
sbb
push
dec
loopne
in
or
enter
mov
sub
in
lods
jecxz
addr16
insb
sbb
and
lds
inc
or
bound
or
inc
dec
xchg
xchg
pop
and
dec
gs
gs
in
jbe
cltd
test
mov
addr16
fisubrl
imul
idivl
push
loopne
or
repnz
mov
xchg
mov
test
jmp
mov
lret
inc
fidivrl
push
into
jo
xchg
insl
fsubp
dec
les
push
lds
sbb
mulb
pop
push
add
sahf
mov
mov
jns
dec
xor
rcr
into
call
cmp
imul
testb
and
js
nop
sbb
xchg
dec
fcmovnu
insb
lret
pop
inc
daa
ss
xchg
cltd
lock
sub
jle
sahf
sub
out
add
mov
cmp
mov
jbe
and
mov
clc
test
push
jae
in
fistpll
jne
inc
adc
sti
xor
lds
ss
std
loope
adc
out
pop
dec
xor
sbb
cmc
out
mov
test
adc
mov
pop
movsb
bound
data16
push
xchg
xchg
ds
mov
jmp
jge
xlat
ror
xchg
loop
mov
addr16
aam
push
mov
cmp
aad
xchg
sbb
aas
frstor
add
and
shrb
cli
andl
rorl
fisttps
stos
xchg
test
dec
pushf
xor
or
call
dec
adc
and
mov
xchg
mov
cli
mov
mov
mov
aaa
mov
push
sarb
dec
fidivl
hlt
pop
mov
lcall
adc
aad
scas
jno
enter
ret
dec
ss
xor
jb
fs
cmp
mov
sub
mov
fldl
mov
sbb
xchg
stos
xchg
lods
orl
test
pop
jns
jp
pop
add
adcb
jns
mov
sub
jnp
mov
mov
int3
jns
or
jl
insb
fstps
stc
cmp
sub
sbb
or
cld
dec
in
pop
fsubrl
jns
or
jl
insb
fstps
stc
cmp
sub
sbb
or
cld
dec
in
pop
fsubrl
js
or
jl
insb
fcomps
stc
cmp
sub
sbb
or
cld
dec
in
pop
fsubrl
jge
or
jl
insb
jae
jmp
movsb
data16
repz
dec
scas
pop
mov
mov
out
ss
das
fstpt
jmp
sti
pop
mov
cli
mov
scas
pop
mov
or
sbb
sub
cmp
fldt
fistpl
pmaddwd
mov
jg
or
inc
mov
adc
add
xor
cmp
rolb
sbbl
sub
adc
cmp
xor
imul
into
pop
sub
sbb
adc
and
bound
lcall
mov
adc
pusha
and
scas
leave
scas
lahf
dec
repnz
add
xchg
stos
pop
inc
push
mov
cmpsl
lods
cwtl
js
repz
mov
shlb
ror
jbe
mov
mov
dec
mov
pop
lahf
hlt
out
sbb
aam
cmp
inc
hlt
ficoml
lock
je
fwait
andb
mov
inc
out
fwait
pusha
hlt
out
add
data16
pop
lret
rcrl
fbstp
fwait
adcl
mov
jmp
sbb
mov
push
aas
xchg
pop
stos
push
into
jp
mov
subb
lahf
sbb
or
sub
and
shrb
ret
aas
repz
pop
xchg
outsl
cmpl
mov
mov
js
jge
cmpw
dec
mov
cwtl
addr16
pop
mov
decb
dec
push
and
cmp
cmpsl
sbb
mov
dec
jmp
mov
adc
sub
ucomiss
aaa
in
pop
out
cli
inc
out
sbb
sub
cmp
lret
das
fstpt
jmp
sti
pop
mov
jg
dec
mov
mov
or
sbb
sub
cmp
lret
das
fstpt
jmp
sti
pop
mov
jg
dec
mov
not
cmp
outsl
push
dec
lret
add
jnp
into
call
mov
xor
test
movsb
or
cltd
mov
mov
js
fnstsw
pop
insl
in
pop
add
outsl
repz
cli
pusha
jl
sahf
leave
js
adc
cmpsl
lods
sbb
push
sub
inc
pop
adc
add
or
push
or
cmp
repz
xor
xchg
test
sub
rcll
int3
mov
dec
or
mov
dec
cmp
lods
ds
xor
mov
lret
cmp
pop
ljmp
push
or
adc
cli
xchg
es
lahf
shl
adc
and
jns
push
inc
shll
test
pop
lock
iret
mov
jge
ret
out
cmp
adc
call
cmpsl
jo
pop
lret
push
hlt
inc
lret
jne
aaa
push
push
sbb
add
xchg
inc
push
xchg
or
insb
ret
ljmp
fwait
mov
push
jmp
mov
daa
mov
mov
rclb
fdivrs
jmp
add
sub
and
imul
xor
jecxz
xchg
and
xchg
mov
aaa
scas
mov
sbb
aas
into
push
pushf
adc
les
orb
xchg
adc
xor
mov
inc
xor
inc
xchg
popa
inc
pop
stc
mov
mov
push
and
fnstenv
mov
movsl
adc
or
jne
push
adc
mov
scas
pop
cmp
aad
or
jle
xchg
inc
jae
mov
pop
daa
sbb
dec
fs
pop
push
sub
cmp
xor
popf
int
imull
fistpll
jge
adc
cli
sub
pop
sti
mov
aaa
sbb
and
lahf
mov
out
cmp
sbb
or
pop
popf
dec
mov
jne
loop
pop
xor
pop
imul
mov
lods
jae
adc
fsubrs
repz
fmul
or
lret
xchg
stos
repz
sbb
cmp
adc
ss
dec
cli
aam
lret
push
fld
jno
add
ret
cmp
in
push
int3
aam
mov
iret
push
xor
jg
in
shlb
popa
or
mov
sbb
add
mov
pop
xchg
mov
lahf
inc
popa
mov
sub
sbb
mov
mov
sarl
sbb
cs
mov
in
xor
cld
leave
mov
nop
xor
lcall
into
decl
mov
loop
data16
inc
test
shll
stos
ds
insb
fidivl
int
mov
movsb
mov
flds
dec
dec
cmp
movl
insl
insl
jno
div
adcb
imulb
adc
addr16
push
aam
pop
sub
sub
sti
pop
cwtl
add
mov
neg
and
pusha
add
out
xor
jnp
mov
std
pushf
xchg
xlat
pop
jmp
jp
addb
fbstp
dec
in
push
or
pop
xor
in
push
lea
ja
mov
cmp
inc
pop
jecxz
xor
and
push
pop
bound
jmp
fcoms
icebp
sub
sbb
sbb
fldl
int
imul
cmp
jne
adc
jmp
scas
pop
push
xor
pop
add
imul
cmpsb
test
movsb
xchg
mov
rol
cmpsl
jle
outsb
addb
adc
mov
bts
pop
sahf
insb
xor
mov
and
lret
push
mov
popa
mov
mov
mov
test
lock
subb
ljmp
mov
insb
dec
push
xor
sub
mov
in
movsb
int3
lret
gs
pop
inc
mov
fldcw
insl
adc
and
inc
cmp
pop
or
test
adc
stos
inc
aaa
add
js
pop
mov
aaa
sti
add
test
outsl
cwtl
cmp
cmp
aas
cltd
out
jno
pop
insl
cwtl
adc
enter
rcrl
scas
rol
dec
adc
mov
mov
mov
sub
ljmp
and
push
pushf
loope
or
fisttpl
fldcw
inc
fnsave
je
lods
mull
lret
dec
sub
fbld
fimull
iret
xor
cld
aad
shlb
fmull
xchg
lret
jl
dec
and
jmp
lahf
pop
pop
lock
loop
cmp
fidivl
dec
sub
pusha
xor
insb
data16
and
or
jp
ficoms
cmp
arpl
into
and
mov
adcl
arpl
outsl
and
jecxz
ds
sti
cltd
or
xor
and
mov
mov
jl
push
in
mov
sbb
dec
faddl
lea
popa
and
fsubs
rcl
push
inc
or
jns
aad
movsl
mov
movsb
mov
jmp
jle
fwait
adc
add
pushf
jp
fwait
pop
gs
jle
jp,pt
pusha
insl
xor
cmpsl
ret
fldt
ljmp
push
ja
jmp
cmp
in
cmp
pop
adcb
aas
or
daa
mov
movsb
aam
cmp
cmp
outsb
or
add
and
push
or
pushf
leave
sub
adc
les
mov
aad
sbb
dec
sbb
lret
sbb
int3
xchg
pop
adc
repz
clc
das
int3
pusha
jl
adc
push
adc
jae
jg
adc
push
push
sbb
cld
imul
in
push
icebp
jecxz
lcall
cli
sbb
adc
int
sub
or
push
fcomps
leave
push
or
lds
int
pop
jg
mov
add
popa
and
insb
insl
mov
inc
mov
mov
aaa
imul
mov
loopne
test
lret
cmp
je
xchg
inc
test
insb
mov
lds
repnz
ror
mov
sub
cs
cs
jbe
add
cltd
sbb
insl
hlt
fwait
lcall
jmp
pusha
into
ss
pop
in
call
ret
lret
fidivrl
jnp
mov
jp
xchg
jle
push
cmpsb
mov
jb
pushf
iret
aad
fiaddl
shlb
orl
pop
jo
int3
or
sbb
repz
stos
cmp
fbld
subl
sub
out
inc
xchg
aas
lea
mov
test
mov
xchg
adc
push
insb
popa
or
fstpl
add
jmp
mov
andl
inc
out
cmp
inc
sub
cmpsl
gs
cmp
loop
mov
call
test
add
mov
add
aas
lcall
jl
inc
jb
jmp
adc
sbb
mov
cli
das
cmp
or
mov
test
idivb
lock
leave
inc
add
jmp
gs
and
jmp
add
sbb
aaa
sbb
xchg
mov
in
sub
es
mov
or
repnz
jne
in
pop
into
btc
pop
scas
pxor
ljmp
test
lods
popa
add
and
scas
lods
jmp
mov
dec
sbb
out
jmp
mov
mov
loopne
xor
addr16
cmpl
loop
cmp
pop
add
fbstp
add
push
inc
out
and
adc
subb
addr16
mov
add
mov
int3
sbb
outsb
cli
jmp
dec
push
lcall
or
aas
dec
pushf
dec
mov
mov
mov
into
loope
mov
adc
add
scas
jne
psllq
pop
call
insb
out
jnp
push
into
add
cmp
push
cmc
test
fsts
lret
insb
int
imul
xchg
xor
jb
mov
push
and
lds
std
mov
fstps
push
scas
xchg
adc
imul
or
and
imull
aad
fisubrs
ljmp
or
dec
lock
inc
pop
add
aaa
sbb
xchg
push
in
mov
pusha
fadd
std
xchg
pusha
loopne
aas
adc
iret
mov
call
mov
aad
das
in
mov
in
enter
jg
lret
test
push
or
add
jae
mov
sub
ja
cmp
jbe
sbb
test
out
jne
cli
and
les
imulb
add
int
rcll
xor
inc
push
mov
js
enter
xlat
push
ret
clc
rcr
cmp
adc
mov
dec
lahf
out
pop
arpl
add
mull
or
mov
push
and
clc
add
or
push
fisubrs
xchg
insb
shrb
out
mov
and
sbb
sbb
push
and
fildl
fisttpl
call
push
negl
pusha
rcrl
push
and
push
out
nop
lret
mov
jmp
sub
into
push
in
cmc
cmp
jle
add
lds
pop
popa
xor
add
insb
imul
sbb
jno
fnstcw
aas
and
cmp
scas
sub
mov
movsl
aaa
or
mov
adc
dec
aam
adc
arpl
push
sub
call
adc
xlat
xor
pop
cld
mov
lea
dec
sub
mov
xchg
inc
test
jmp
cmpsb
lcall
pushf
das
test
outsb
xchg
jbe
mov
jo
fcmovbe
in
push
gs
xor
enter
sub
xlat
xchg
lods
push
in
stos
test
scas
jecxz
fiaddl
push
cmp
dec
pop
add
sub
xor
std
aaa
pop
mov
and
ret
sbb
mov
lret
dec
scas
cmpsb
decb
mov
stc
mov
jno
outsl
pusha
jo
mov
inc
mov
sarl
shrl
insl
lods
and
add
sub
xorl
in
jne
test
mov
push
mov
fnstsw
cmp
inc
mov
daa
cmpsl
lahf
and
ret
xchg
dec
js
pop
jl
ret
or
loope
push
mov
aas
test
jno
xchg
and
cltd
sub
shll
mov
adc
sbb
sbb
dec
jmp
sbb
dec
cmc
cmp
or
fisttps
js
cmp
stc
and
mov
lods
push
lods
sbb
cmp
cmpsl
daa
cmp
xchg
test
lret
imul
pop
sub
insl
adc
xor
sub
fidivrs
movsl
sub
sbb
dec
test
cmpl
out
and
inc
xor
je
out
mov
faddp
xchg
lods
es
mov
or
push
subb
test
cmp
jcxz
shrl
popa
adc
cmp
mov
xchg
pop
pop
inc
adcl
jbe
mov
cs
popf
std
jno
xchg
push
aas
lahf
ret
cmp
dec
in
cmp
jo
lea
or
cmp
jge
mov
imul
lea
mov
out
iret
mov
popf
in
adcl
sahf
sahf
stos
in
sbb
add
jmp
or
pop
out
jecxz
loopne
arpl
push
stc
xchg
cmp
dec
xchg
inc
adc
and
dec
dec
dec
les
jno
sbb
rcrb
fwait
or
pop
jbe
adc
mov
mov
or
or
mov
bnd
rcr
fs
addr16
in
outsl
cmp
mov
mov
outsb
xchg
add
and
jns
dec
sti
mov
icebp
loopne
sub
sbb
ja
dec
push
push
push
data16
call
jnp
cli
lahf
mov
push
sub
andl
loop
ljmp
pop
rorb
addr16
arpl
jne
pop
arpl
cmp
enter
cmc
mov
shl
push
out
pop
into
pop
add
sub
sbb
int3
xor
xchg
xchg
mov
ror
cltd
dec
mov
leave
inc
fsts
xchg
loopne
pop
outsb
cs
ss
int3
fstl
dec
shl
int3
add
faddl
int3
sub
jae
dec
add
xchg
mov
push
movsb
adc
scas
pusha
cmp
add
add
and
gs
inc
jb
or
test
xor
xor
fmulp
movsb
sub
xchg
xchg
loope
push
pushf
push
es
mov
pop
xor
inc
inc
les
push
scas
movsb
popa
cmp
xor
arpl
in
mov
popf
inc
dec
jnp
pop
push
aam
addr16
push
push
or
pop
xchg
adc
mov
xchg
inc
mov
movsb
pop
or
frstor
mov
lods
enter
add
loope
aad
pusha
sub
out
cmpsb
orl
jg
movsb
inc
dec
jmp
jmp
out
fisttpll
inc
int3
mov
rdpmc
sti
mov
fcoml
and
push
cwtl
adc
mov
jg
mov
inc
ss
sub
outsb
mov
pop
fstps
jno
in
loope
add
add
jnp
in
inc
inc
pop
pop
and
clc
inc
jle
mov
pop
movsl
add
mov
movsb
insb
sbb
inc
cmp
push
lretw
mov
mov
sbb
push
dec
das
loopne
shr
dec
lret
outsb
in
push
dec
jne
pop
add
and
lods
je
sti
add
mov
inc
push
addr16
insl
sar
jnp
mov
jno
in
lcall
cs
add
or
pop
mov
aad
mov
dec
sub
popf
sbb
pop
push
enter
pop
rcrb
iret
aaa
pop
push
jne
outsl
pop
add
mov
cmp
or
mov
dec
repnz
call
inc
cmpl
lcall
mov
js
repz
mov
fldenv
adc
pushf
ret
sub
add
test
out
lahf
inc
test
cmp
leave
ss
sti
in
mov
push
scas
clc
sub
mov
jecxz
out
adc
popf
pop
test
sbb
xchg
hlt
fstpt
cmp
clc
xchg
xor
mov
jl
or
add
sbb
push
cwtl
add
ljmp
jbe
push
pop
sahf
adc
mov
cwtl
jns
jo
jg
aaa
sti
push
and
rcl
lock
mov
push
out
scas
mov
test
xchg
cmp
loope
adc
sub
adc
arpl
pop
xchg
xor
add
fisubs
cmp
mov
in
in
outsb
xchg
loopne
aaa
cmpl
in
dec
repz
xchg
lds
cmp
stc
mov
jmp
orl
jmp
idiv
pop
push
icebp
jge
push
out
mov
push
imul
xchg
or
mull
fnclex
xor
addb
cmpsb
dec
adc
ret
push
out
mov
mov
mov
sub
sarb
test
ficompl
aas
ljmp
mov
arpl
or
sbb
push
xlat
and
test
mov
xor
jo
inc
incl
insl
xor
movb
adc
outsl
add
sub
sbbl
push
mov
scas
pop
sub
in
insb
into
or
xchg
pop
mov
inc
mov
sub
lea
and
sub
popa
iret
out
sti
xor
mov
xor
mov
das
inc
das
xchg
lret
pop
sub
fcmovb
xor
dec
xchg
push
inc
scas
das
add
push
push
loope
aam
stc
sti
xchg
jnp
dec
xorb
inc
adc
push
lcall
sub
mov
jns,pt
cmp
add
loopne
mov
daa
xorl
pop
mov
das
outsb
inc
enter
push
xor
mov
movsl
pop
mov
and
cmp
incl
mov
lret
je
sbb
popa
mov
cmpsb
mov
loopne
jle
fs
out
popl
pushf
aas
cmpsb
pop
and
push
imul
xor
dec
xchg
mov
pop
adc
cmp
and
mov
jae
xchg
mov
mov
push
mov
nop
cmp
aam
inc
lock
loope
xchg
and
mov
scas
movsb
xor
ja
ss
pop
xor
jecxz
adc
shrb
vmwrite
mov
add
jbe
dec
dec
sbb
repz
fsubl
clc
sbb
notb
jl
loope
inc
and
icebp
lea
and
add
popa
push
stos
nop
mov
pop
jne
adc
mov
xchg
pop
add
ret
lods
lods
std
mov
call
loop
add
inc
xlat
movsl
mov
jl
pop
mov
xchg
xor
std
repz
dec
ret
je
negl
insb
lods
ficompl
stos
je
xchg
cmpsl
out
ds
xchg
cmp
mov
add
pop
sub
xchg
cs
xor
inc
lock
jge
aaa
sbb
push
lds
xor
cmp
test
arpl
ljmp
mov
cmp
rolb
mov
mov
sbb
pop
pop
scas
xor
push
stos
pop
push
aad
push
sub
cld
cmp
dec
je
adc
add
jmp
sti
mov
std
lods
xchg
jo
das
daa
or
xchg
mov
pop
xor
mov
repnz
loop
cwtl
mov
adc
rol
inc
jecxz
mov
inc
int3
outsb
inc
xor
add
test
sub
cmp
and
fstps
enter
adc
lret
fmul
dec
sarb
sub
rorb
in
lcall
mov
inc
push
and
test
mov
mov
pusha
adc
shll
fwait
pop
in
cmpsl
dec
out
sub
mov
outsb
testb
inc
xchg
xchg
pop
push
and
and
lret
xor
adc
xor
inc
push
testb
push
popf
cmp
cmpl
mov
jmp
iret
mov
fisttpll
andb
flds
nop
mov
jnp
cmp
or
push
xchg
xchg
jle
les
sarl
shlb
ljmp
mov
call
push
ret
xchg
mov
cld
push
ret
inc
mov
add
mov
cwtl
dec
dec
sub
xchg
xchg
jg
das
add
cld
and
cmp
add
pop
push
shrl
mov
into
addr16
mov
mov
xor
lret
cmp
mov
xor
sub
in
inc
lods
cld
ficoms
js
push
and
mov
pop
shll
cltd
imul
ror
out
pop
cmp
dec
sti
xor
xor
and
stos
mov
sub
daa
in
sarl
inc
push
lahf
cmc
mov
push
dec
jnp
jp
pusha
pop
mov
xchg
packuswb
xchg
pop
lahf
sub
nop
jo
xchg
cmp
rolb
xor
or
arpl
imul
pusha
ja
sub
jecxz
icebp
or
add
lcall
push
xor
aaa
stc
loop
sub
pushf
xor
inc
jg
fprem1
leave
insl
aaa
sbb
adc
loopne
add
repnz
pushf
push
xchg
mov
sub
mov
push
push
and
mov
xor
fdivl
imul
jne
pop
imul
loopne
mov
mov
mov
lock
aaa
mov
mov
test
rcl
cmp
pop
jmp
sub
sbb
mov
in
rorl
stos
in
xor
pop
sub
adc
xchg
sub
inc
xchg
pop
out
and
jmp
mov
sub
nop
or
bound
push
pop
shlb
and
in
aam
adc
es
mov
and
xchg
movsl
enter
sarb
std
mov
pop
pop
cmpsl
mov
lret
pop
fisttpll
push
lcall
push
jno
cmp
fwait
stc
mov
in
das
xor
dec
inc
push
sbb
mov
jl
inc
sbb
jp
inc
mov
inc
stos
and
mov
add
adc
aam
shrb
int
mov
jbe
mov
lock
sub
xor
popa
xor
stc
aas
daa
dec
mov
pop
int3
lret
hlt
add
pop
adc
shlb
in
leave
inc
push
sbb
jae
fistl
xchg
jecxz
cmpsb
call
mov
xor
fimuls
cltd
adc
cltd
aam
daa
loopne
push
cwtl
xor
dec
inc
in
les
or
sbb
sub
cmp
lret
das
fstpt
jmp
sti
pop
mov
jg
dec
mov
mov
or
sbb
sub
cmp
lret
das
fstpt
jmp
sti
pop
mov
jg
dec
mov
aas
imul
lahf
or
sbb
iret
cmp
lret
scas
fstpt
jmp
sti
pop
mov
jg
dec
mov
mov
or
sbb
stos
iret
mov
xchg
inc
psubq
out
adcb
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
and
movsb
xchg
xchg
out
testb
divl
andb
add
inc
es
ss
movsb
xchg
out
div
xchg
xchg
aam
les
jne
add
je
fs
push
es
ss
movsb
adc
in
aam
les
pop
popa
add
push
or
push
les
aam
jg
les
and
daa
test
js
lock
fxch
jge
lds
adc
cmc
xchg
jmp
pop
pop
mov
inc
mov
mov
mov
fwait
dec
pop
lods
mov
fwait
mov
outsb
outsl
pop
push
mov
xor
je
inc
addr16
mov
cmc
movsb
ljmp
movsb
mov
push
cmpsb
xor
les
and
loop
adc
adc
fwait
inc
dec
adc
sbb
xchg
aam
les
gs
add
xchg
insb
or
shll
mov
push
xchg
add
adc
sub
sub
add
popa
mov
sbb
outsb
fs
push
lret
jmp
movsb
notb
in
aam
les
inc
and
adc
add
je
fs
push
ds
add
loopne
clc
mov
lcall
mov
es
pusha
adc
cmp
pop
jmp
out
loopne
int3
lcall
mov
and
inc
aas
dec
pop
push
add
pop
inc
ret
testl
les
adc
add
je
fs
push
es
ss
movsb
xchg
out
div
xchg
xchg
aam
les
adc
add
je
fs
push
es
ss
mov
sbb
adc
aad
jae
sub
sbb
xchg
pop
dec
sub
mov
mov
xchg
push
xor
xor
nop
sbb
sbb
and
das
lods
mov
shlb
push
pop
mov
xor
add
incl
div
mov
cmp
push
popf
outsl
push
shl
insb
out
mov
ss
daa
std
pop
dec
sub
ss
mov
jmp
xchg
sbb
jbe
loop
clc
out
call
fwait
idivl
hlt
xor
mov
push
insb
cmp
jae
mov
sarl
pop
jns
push
sti
fs
jb
sarl
in
std
dec
pop
or
mov
and
loop
cli
xor
test
dec
inc
fisubl
jno
push
push
dec
or
movsw
cltd
out
pop
mov
loop
mov
push
xchg
inc
lods
xor
ljmp
sbbl
or
adc
jo
not
stos
fisubl
sub
rolb
and
in
add
xchg
xor
or
flds
adc
pushf
dec
fmul
test
push
mov
mov
mov
loopne
stc
pop
in
adc
data16
outsb
mov
inc
lds
mov
jmp
inc
mov
ja
loop
out
sub
js
xor
xor
ss
mov
or
out
sub
popf
mov
pop
int3
daa
loopne
mov
mov
out
movl
mov
shlb
adc
out
jne
push
dec
xchg
test
fbld
add
adc
idivb
xchg
jns
das
ds
sub
in
sbb
mov
enter
adc
sete
lcall
jnp
icebp
hlt
fwait
xor
div
pop
jnp
lea
lcall
mov
imul
cmpsl
ret
shrl
sub
hlt
and
cmp
sbb
jb
sbb
sbb
repnz
push
jmp
mov
jmp
xchg
stos
inc
in
and
and
pop
negb
cmp
into
jge
mov
or
mov
or
aam
int3
push
into
loope
mov
loopne
xchg
scas
es
dec
jecxz
mov
xchg
dec
pusha
aam
xchg
mov
loop
xchg
pop
leave
mov
stc
or
dec
dec
push
jb
mov
jns
add
call
lock
inc
xor
push
mov
push
inc
sbb
scas
xchg
jnp
and
int3
pop
jns
cmpsb
test
out
jno
inc
mov
inc
or
frstor
out
fmul
xchg
clc
add
sbb
imul
shrb
or
sub
adc
xchg
repz
and
in
mov
pop
dec
xchg
pop
lds
mov
jno
cmpsl
sbb
lfs
cmp
mov
xor
dec
pop
pop
xor
movsl
xchg
inc
and
lods
in
xor
outsb
mov
pop
xor
lock
nop
adcb
cmpsl
and
aaa
popf
int3
mov
jle
dec
aam
jne
sub
pop
sub
xchg
inc
lret
add
out
dec
bound
and
mov
cwtl
xchg
pop
lahf
add
add
cmc
scas
sub
inc
std
enter
ret
iret
push
inc
xor
mov
push
xor
cli
mov
fcmove
dec
pop
repnz
adc
fsubrs
inc
mov
or
xchg
bnd
cmp
push
iret
xchg
mulb
xor
sub
loop
insl
mov
mov
arpl
pop
mov
push
shl
lcall
adc
sbb
dec
aam
daa
adc
add
stos
xchg
es
sub
xchg
imul
inc
aaa
pop
popf
fidivrl
insl
jle
jb
pop
jo
mov
fs
sub
cmp
in
lods
cld
addr16
fstps
ret
int3
adc
fwait
inc
xor
aam
jle
mov
dec
enter
adc
nop
shrb
xlat
sbb
dec
or
outsl
jbe
xor
or
inc
push
sub
mov
mov
loopne
scas
cmp
adc
les
fistps
pushf
fildll
adc
jno
imul
pusha
lock
xor
sbb
cmp
jg
xchg
inc
jbe
and
movsl
lret
orl
popa
dec
inc
cmp
add
ss
aas
lcall
jg
sbb
xchg
or
and
xor
lret
fnstenv
addl
sbb
insl
push
mov
sbb
outsl
pop
cmpsb
ja
dec
je
pop
xacquire
push
test
sbb
into
icebp
cld
push
or
mov
xor
jecxz
sub
sub
dec
test
sahf
pusha
aam
test
out
into
mov
sti
daa
xchg
and
jle
je
xchg
cmp
mov
mov
cs
insb
adc
adc
leave
andb
scas
xchg
mov
jnp
inc
xor
sbb
mov
in
out
icebp
cmpsl
or
stos
stos
pop
or
punpcklbw
pop
out
xchg
lret
ret
jae
mov
sub
fistps
mov
cmp
sbb
pop
fcomp
pushf
stos
imul
gs
das
xor
aad
push
dec
ret
jns
das
dec
sbb
popfw
mov
ret
inc
std
mov
out
aam
lods
adc
add
and
loop
in
ljmp
xor
jbe
into
cmp
aaa
dec
fcmovu
inc
xor
add
xchg
fiadds
iret
movsb
sbb
push
loope
add
sbb
push
cmpsl
scas
adc
adc
test
jp
fcoml
shrb
pop
incb
test
xlat
test
inc
cmp
mov
push
aaa
mov
scas
imul
xlat
sub
jbe
popl
sub
sbb
dec
insl
sbb
jmp
int
pop
sub
or
mov
out
lods
movsb
lds
cmpsl
or
push
repz
icebp
mov
ds
dec
popa
sub
sbb
or
jae
mov
pop
adc
pop
pusha
nop
lea
rol
filds
into
jae
sbb
decl
ss
and
xor
sbb
mov
mov
pop
pop
push
or
xchg
in
and
test
daa
mov
or
jecxz
cmp
xchg
cwtl
ss
subl
push
jecxz
lds
sti
inc
packsswb
bts
and
sbbl
lds
inc
cmp
xchg
sbb
daa
test
les
out
push
in
rorb
adc
xchg
scas
jmp
je
mov
lcall
ds
xor
test
xor
test
push
push
fiaddl
hlt
cli
xchg
in
mov
mov
pop
repnz
aam
or
into
dec
sub
cmpsl
xor
sbb
sahf
loope
inc
shlb
pop
or
adc
adc
ficoms
inc
fstps
out
in
jnp
xchg
pop
and
insb
cs
add
mul
add
sub
call
dec
adc
mov
out
fldl
and
out
mov
inc
aas
inc
stos
push
cli
adc
das
test
cltd
movb
imul
push
fsubs
cs
push
xchg
jnp
pmulhuw
rorl
mov
les
xchg
and
out
adc
mov
push
lds
popa
lods
inc
xchg
enter
push
cmpl
push
mov
stc
hlt
mov
jle
mov
jle
sub
jge
lret
sub
xor
rolb
xlat
cmp
xlat
jnp
jl
xor
movsb
nop
pop
mov
aaa
dec
in
insl
gs
mov
jb
in
and
insl
in
push
or
stc
mov
pop
inc
xlat
cmpb
in
popa
pop
cld
jae
lds
ja
call
jle
lcall
lahf
mov
outsb
insl
ret
js
push
mov
orb
icebp
cltd
xor
inc
fcmovu
mov
xchg
sahf
or
shrl
adc
leave
jo
pop
ficomps
les
in
dec
aad
insl
shl
add
adc
js
ljmp
and
out
insl
movups
js
cmp
repz
fisubrl
mov
fisttps
adc
push
push
in
jle
sbb
pop
jbe
int
mov
xchg
loope
sbbb
fs
xchg
jmp
push
cmp
in
cmp
cmp
insl
lds
shrb
cld
test
int
xchg
addl
pop
andl
xor
inc
int3
xchg
add
clc
mov
sbb
loopne
jg
mov
xchg
fiaddl
dec
xchg
xchg
push
and
inc
or
sti
sar
mov
lds
nop
inc
ds
in
out
dec
jae
sbb
add
outsb
xchg
ss
in
cmc
push
ja
test
jb
loop
jno
inc
pop
call
roll
outsl
pop
and
stos
das
add
push
insl
cltd
adc
sbb
inc
push
rorb
sti
mov
xchg
dec
in
out
repz
inc
cmp
push
fmuls
adc
mov
push
sub
outsb
loopne
enter
and
mov
xchg
ja
clc
mov
xchg
cmp
push
vcvtdq2pd
sbb
sub
jnp
mov
cli
sub
cmp
push
inc
jge
pushf
loop
scas
cmpb
inc
rorl
cmp
sub
das
push
xlat
jmp
push
mov
bound
xor
outsb
inc
or
inc
dec
aaa
inc
push
je
adc
pop
adc
pop
jns
xor
add
xchg
fimull
or
pop
in
in
cmp
int
sarb
jno
stos
rcrb
sti
add
sbb
mov
int3
sbb
clc
lea
lahf
xor
mov
scas
ljmp
aaa
in
int3
cmp
cmpsb
test
lcall
cs
stc
inc
jno
sbb
cmpsb
mov
in
jp
inc
pop
fcomp
adc
sbb
xor
std
out
out
mov
cmpsl
inc
loopne
add
xorb
das
mov
inc
or
out
mov
add
xchg
das
and
fsubrl
push
enter
sbb
inc
pusha
mov
sti
out
out
mov
pop
pop
jo,pn
in
cmp
imul
jecxz
xchg
fcoml
imul
aaa
pop
cmp
les
jl
dec
push
add
rdpmc
mov
add
sbb
adc
fs
mov
lret
pushf
ss
pop
mov
pop
test
rcl
adcb
mov
push
and
fwait
add
and
negb
dec
nop
jbe
out
jg
push
and
int3
ret
push
cmp
mov
inc
les
jb
ja
mov
mov
stc
mov
and
int3
fdivl
adcb
sub
jbe
jbe
in
dec
out
imul
adc
pop
adc
cltd
sub
xor
call
mov
int3
xor
mov
call
xlat
outsb
xchg
movsb
into
lcall
lds
cmp
js
icebp
inc
mov
rcrb
imul
adc
movsl
pop
xor
push
add
mov
cmp
mov
push
fidivs
out
xorb
imul
or
stc
push
or
pop
sbb
mov
test
inc
mov
inc
lds
ss
adc
push
mov
rcl
sub
into
into
add
shlb
lods
imul
sub
sub
lcall
mov
clc
mov
jl
xchg
jecxz
sbb
aam
and
mov
jle
std
ret
loope
sub
mov
popa
ljmp
xchg
imul
jmp
jecxz
popa
stos
sarl
jb
mov
leave
pop
das
mov
add
xor
mov
icebp
and
ds
jb
mov
cmpsb
adc
inc
aam
ljmp
lods
sbb
jno
ds
and
dec
jns
repnz
addr16
popf
lret
jg
xchg
jle
popa
sbb
inc
inc
mov
out
xor
shrl
dec
pcmpgtb
shll
inc
and
mov
test
xor
pop
scas
in
icebp
cwtl
fwait
ljmp
negb
in
in
and
fisttps
xchg
mov
adc
push
push
dec
cmpsb
in
test
pop
pop
mov
clc
lret
cs
sbb
mov
loope
pop
xchg
push
lea
stos
daa
daa
rorl
or
jne
test
cvtpi2ps
and
and
dec
inc
in
pop
cmpsl
outsb
dec
test
or
jmp
dec
repz
and
dec
ds
push
test
sbb
sbb
ret
adc
sahf
push
scas
test
jno
rol
xchg
adc
fs
pop
lea
cwtl
mov
push
dec
jbe
pop
inc
fmull
cwtl
je
or
push
lods
movsl
stos
mov
sbb
call
stos
jg
cs
push
push
push
pop
adc
lock
shl
scas
mov
cmc
imul
imul
fisttpl
aas
xchg
scas
cld
out
cmp
mov
mov
pop
and
pop
repz
lahf
psrld
jnp
cwtl
cld
inc
push
adc
xchg
push
mov
ss
mov
sbb
imul
jno
setne
dec
ljmp
popf
out
popa
insl
dec
push
repnz
adc
pop
jge
sarb
in
shlb
sub
cmp
add
ds
out
scas
imul
push
lret
or
push
adc
xor
lods
repz
jae
push
dec
jbe
pop
stc
jne
mov
cmp
and
int
imul
data16
cs
add
pop
lea
or
aas
mov
lret
lods
dec
inc
sub
pop
xor
mov
xchg
cmpsb
fs
mov
into
iret
andb
inc
push
adc
out
cwtl
adc
ds
jp
movsl
mov
loopne
adc
cmp
mov
jbe
nop
or
add
clc
jecxz
jp
cmp
and
push
mov
aaa
pop
lcall
adc
push
pop
inc
pushf
cld
xchg
pop
add
jle
stos
repz
push
sub
aam
sub
mov
cwtl
pop
xor
fists
into
std
out
and
lock
sarl
cltd
fcoms
ss
ffreep
fdivs
aad
sub
stos
test
in
jae
scas
mov
and
fs
inc
and
popa
mov
xor
or
cmc
fs
cltd
ret
mov
xchg
add
jae
cmpsl
add
jae
fs
test
adc
add
mov
mov
and
mov
sub
cmp
adc
out
fistps
push
mov
ljmp
shl
lock
fwait
jge
stos
outsb
add
add
or
xorl
jne
hlt
push
decl
push
cmp
inc
loopne
lea
sbbb
and
std
cmp
test
xchg
push
sub
std
jb
adcl
xor
fwait
insb
add
mov
mov
ja
scas
mov
xor
cmp
mov
dec
imul
xchg
inc
out
dec
mov
pop
std
jne
push
mov
idivb
testb
push
out
push
stos
in
cmp
xchg
or
add
fimull
lahf
pusha
sub
mov
out
lret
movsb
das
mov
aad
popl
jle
sarb
das
cwtl
adc
cmpsb
lcall
into
insw
cmp
outsb
je,pn
add
jecxz
ds
inc
mov
sti
fstpl
xchg
movb
daa
inc
jmp
dec
mov
in
insl
enter
jge
data16
in
lea
mov
subl
ja
xchg
andl
push
mov
pop
add
pop
sub
dec
daa
mov
or
movsl
ret
xchg
sub
sub
outsb
std
sub
ljmp
lret
inc
mov
jno
fdivl
jo
jae
sti
add
xchg
fildll
test
add
mov
fidivrs
mov
ror
dec
arpl
lahf
xchg
fidivrl
out
push
add
push
lods
mov
jg
mov
jmp
dec
jno
ret
mov
insl
dec
std
xchg
jbe
into
loope
in
in
cwtl
pop
and
sub
stos
mov
sbb
inc
mov
scas
push
daa
andb
xchg
lcall
push
lods
push
push
sub
loopne
jmp
mov
std
daa
fcoms
adc
popf
shlb
cld
and
and
mov
fdivrl
fisttps
and
cmpsl
and
cmp
in
mov
mov
jo
lock
jl
js
out
mov
inc
iret
cmp
mov
pop
loopne
cmp
inc
jmp
mov
sbb
in
mov
aam
push
mov
inc
in
xchg
adc
lret
xchg
jne
push
sub
nop
movsb
pop
lds
aaa
cmp
mov
lods
jo
sbb
mov
jecxz
ja
mov
push
sbb
add
push
jecxz
aas
push
add
aas
or
push
pushf
and
pop
dec
aad
jp
pop
mov
ret
outsl
rcrl
lret
rcll
into
dec
test
jmp
data16
fsts
jp
and
sti
ljmp
lock
sbb
xor
jg
not
inc
test
es
cmp
inc
push
cwtl
gs
test
adcl
stos
cmp
jg
int
outsl
rcll
adc
aaa
sbb
push
dec
jg
lahf
hlt
jl
add
cmp
fistps
pop
aaa
xchg
pop
stc
or
jb
push
movsb
push
sbb
jae
cmc
test
xlat
es
lret
sbb
push
push
mov
dec
notb
out
pop
sahf
imul
push
mov
mov
scas
je
adc
pushf
dec
lods
mov
xchg
mov
inc
in
push
mov
adc
int
dec
outsl
cwtl
sub
add
xchg
jl
es
sbb
movsb
cmpsl
shll
mov
mov
adc
and
push
scas
out
popf
xor
rorl
push
add
movsb
push
xor
and
ret
jae
add
icebp
xchg
jg
xor
mov
dec
add
push
es
mov
cmpsb
or
fs
lock
add
mov
daa
bound
adc
and
icebp
adc
xchg
mov
push
lcall
mov
xor
cld
push
mov
adc
push
ljmp
push
xchg
pop
mov
push
fucomi
ss
ret
xor
lret
imulb
aas
xchg
sbb
cltd
aaa
stc
ljmp
fmul
movsl
adc
out
cmp
ljmp
xor
popf
sbb
loopne
jge
es
xchg
les
mov
roll
add
mov
retw
push
aas
cmp
sub
inc
adc
jecxz
jne
cmp
pusha
outsb
jae
jno
or
mov
and
loope
data16
and
lcallw
push
stos
push
mov
mov
cltd
xchg
stos
sub
mov
adc
call
push
dec
mov
xor
or
sub
out
adc
int3
or
pop
and
leave
mov
in
test
mov
fsubl
lock
repz
dec
imul
sbb
dec
addr16
xor
push
push
push
orb
sarb
add
xchg
sbb
fsub
push
jo
ret
stos
out
pop
imul
push
sub
repnz
enter
push
dec
xorb
lcall
inc
or
iret
adc
int
mov
mov
pop
or
fnstenv
push
pop
xlat
inc
inc
in
push
or
jl
in
leave
dec
xchg
sbb
pop
fwait
jle
jmp
dec
sahf
clc
int
or
pop
daa
adc
pop
rclb
jns
inc
adc
mov
pop
add
jg
rcll
push
inc
pop
pop
js
jmp
and
ja
mov
cli
xchg
sbb
cmp
mov
into
ljmp
inc
aaa
and
es
arpl
push
xchg
cmc
movsb
xchg
ss
xchg
rclb
in
add
hlt
stos
sub
inc
jg
dec
repnz
jg
mov
push
daa
call
cs
lods
out
movsb
mov
inc
push
sbb
or
test
xor
xor
aam
mov
movsl
mov
stos
cmp
stos
xchg
push
in
rcll
or
mov
orb
call
pushl
sub
rcrb
rclb
adc
inc
pop
jecxz
dec
lar
stc
lds
and
add
aas
jecxz
div
xchg
xchg
aam
les
adc
add
je
fs
push
es
ss
movsb
xchg
out
div
xchg
xchg
aam
les
adc
add
je
fs
push
es
ss
movsb
fcoms
in
aam
les
adc
add
je
fs
push
das
inc
shlb
add
aam
les
mov
add
add
outsb
stos
pop
mov
leave
arpl
jae
or
xlat
pop
test
jecxz
repz
fsts
arpl
jae
add
xor
xchg
pop
rorl
js
imul
leave
in
mov
adc
lret
test
test
pop
mov
pop
rcrb
jae
daa
stos
add
mov
push
data16
mov
shlb
pop
nop
jl
movb
pop
xchg
cli
fs
mov
add
xor
mov
xchg
jl
or
push
and
inc
or
repz
bound
bound
push
pop
sub
sbb
or
xor
push
push
sub
push
in
es
and
xorb
or
sub
sbb
in
adc
test
sbb
lock
leave
movb
loope
jmp
cmpsb
xor
and
pop
sub
or
xchg
push
or
jo
push
leave
arpl
pop
jmp
and
inc
dec
cmp
imul
cmp
outsl
xor
and
test
fisubs
xor
push
frstor
sub
dec
xlat
dec
hlt
dec
inc
mov
movsl
and
mov
int3
dec
out
inc
xchg
cmp
cmp
jl
lahf
pop
bnd
cwtl
pusha
lcall
adc
ret
pop
rorl
jns
imul
fsts
arpl
jae
add
xor
jecxz
repz
fsts
cs
insb
xor
dec
scas
adc
rclb
ds
filds
xchg
push
out
inc
fwait
das
and
add
xchg
icebp
movsl
pop
cli
jg
fcompl
xchg
xchg
fisttpll
dec
hlt
stos
ret
pushf
cltd
in
mov
movsb
sar
int
push
and
xchg
push
int
inc
iret
mov
rcrl
adc
ret
add
mov
pusha
lods
imulb
aam
cmpsl
sti
outsb
ljmp
sub
repz
dec
xchg
bound
popa
add
adc
mov
test
push
mov
js
mov
ss
mov
mov
xlat
xchg
ffreep
mov
ret
sub
mov
out
mov
outsb
rclb
mov
js
int3
push
push
test
mov
mov
and
rcll
mov
mov
ljmp
cli
and
adc
rclb
popa
xlat
sti
ret
pop
mov
xchg
adc
or
push
xor
cld
xchg
adc
movsb
cmc
popa
call
and
loope
stos
test
mov
xor
outsl
repnz
pop
jb
sbb
arpl
pop
adc
ficoms
lret
dec
ss
sbb
jmp
daa
je
mov
bound
lret
roll
adc
inc
lods
into
jbe
inc
xor
mov
addr16
ja
fs
jae
or
arpl
fsubl
xchg
cli
jo
stos
xor
jg
mov
pop
or
aam
addl
push
sub
cwtl
dec
lock
cli
divl
call
add
lcall
les
sahf
cmp
push
sar
fwait
inc
mov
sbb
enter
inc
decl
sbb
imul
ljmp
cwtl
sub
rol
je
outsb
mov
pop
dec
jb
push
jbe
pushl
jne
cmpsb
xor
fbld
dec
push
imul
leave
add
inc
jmp
push
jmp
sbb
ret
insl
addr16
xor
xchg
jge
mov
adc
aas
fstpt
xor
xchg
or
mov
and
lret
hlt
and
sub
ja
outsb
out
mov
xlat
out
icebp
outsl
orb
pop
or
out
jnp
shll
xor
cmp
addr16
and
pop
out
enter
movsl
push
cld
xchg
xor
push
lret
push
pop
cwtl
in
or
lcall
jecxz
push
pop
out
push
fdivr
shr
push
xor
ds
sti
xor
clc
sub
test
or
divl
add
dec
sub
out
mov
movsb
push
movsl
mov
push
or
loopne
sub
cld
mov
popf
jle
in
push
sbb
xor
pop
imul
jle
jg
add
iret
push
mov
loope
inc
aad
aas
or
jo
push
xor
push
add
ja
ficoml
mov
add
hlt
push
dec
sbb
add
test
push
insl
das
loopne
outsl
lea
or
cmpb
mov
movsl
in
add
sbb
les
int3
filds
inc
pop
insl
sbb
xchg
shr
add
mov
or
sarb
mov
dec
roll
xchg
rorb
shll
dec
fimull
xor
sbb
icebp
and
jno
xchg
jecxz
dec
ja
jb
mov
insl
jge
pop
cmc
inc
or
dec
leave
sti
or
aas
push
xlat
gs
jecxz
mov
xchg
adc
inc
out
push
dec
mov
lea
dec
jmp
repnz
shl
and
test
in
lahf
mov
sarb
pop
js
repz
adc
jecxz
xlat
and
scas
or
cwtl
shll
xchg
push
inc
into
jmp
ds
push
lods
mov
push
imul
jecxz
sbb
adc
fwait
cmc
in
pop
ror
and
stos
fwait
pushf
xor
push
fldenv
push
push
cmp
mov
clc
inc
cmp
scas
decb
loope
andl
add
inc
rcrl
xchg
pop
pop
push
fstpl
jbe
cmpsb
mov
mov
xchg
nop
mov
xchg
inc
ss
popf
sbb
mov
push
orb
lods
lret
xor
xchg
fcomip
sbb
sbbb
pusha
and
in
or
pop
nop
inc
dec
test
cmp
andl
or
cmpsl
es
jne
data16
ficomps
ret
cmpsl
enter
outsb
test
mov
jge
and
cmp
mov
pop
push
stos
mov
inc
imulb
adc
mov
repz
fisubl
or
mull
cmpsb
pop
mov
mov
sub
or
fs
insl
aam
dec
and
mov
idivl
int3
adc
add
sahf
sbbb
icebp
dec
shll
andb
mull
inc
ljmp
add
sub
popf
sti
cs
inc
xor
jmp
or
adc
fistps
inc
lods
js
lea
adc
ret
cmp
mov
movsb
mov
outsl
dec
fs
rcrl
xchg
push
sti
stc
into
add
sub
outsb
xor
cwtl
scas
movsl
stc
aam
mov
ficoms
add
jge
cmp
mov
xor
sub
cli
sub
les
insl
jo
cmp
cmp
jae
fmuls
rorl
xchg
jb
repz
adc
mov
xchg
xor
rcrl
xor
out
clc
jns
jl
mov
cmp
inc
push
and
fdivr
scas
add
into
push
and
test
cmpb
cs
into
sub
xorl
and
push
push
jae
cmpb
adc
aas
gs
decl
lret
outsl
sbb
daa
fsts
imul
add
in
mov
sahf
jp
data16
arpl
leave
sahf
pop
mov
sarb
push
mov
mov
jl
fnstenv
mov
pop
xchg
push
jge
mov
inc
outsl
syscall
sbb
sbbl
push
std
and
pop
mov
lret
lock
mov
repnz
rolb
mov
adc
dec
sbbl
mov
xchg
test
mov
mov
test
stos
jo
mov
popf
mov
jecxz
mov
xchg
adc
int3
push
iret
rolb
add
jmp
xchg
xor
jns
test
xchg
out
xor
call
xchg
imul
aad
dec
arpl
pop
fdivs
mov
stc
push
mov
fwait
inc
jno
lret
test
jnp
pop
fnstsw
jp
mov
xchg
or
outsl
pop
stos
out
ret
mov
mov
stc
or
cvtps2pi
and
lods
adc
adc
dec
jmp
ret
clc
scas
popa
lahf
cltd
push
lods
adc
mov
hlt
cmpsl
pop
adc
pushf
sbb
xchg
xchg
outsb
dec
mov
add
incl
movsb
lea
movsb
adc
adc
outsb
or
rorb
inc
sub
sbb
fstps
pop
pop
mov
cld
mov
or
fs
pop
outsb
push
sbb
call
scas
lods
lcall
push
enter
cmp
in
or
cmpsb
popf
aad
mov
push
clc
gs
insl
clc
add
movsb
adcl
push
adc
mov
cmc
ja
add
scas
aaa
jmp
mov
filds
ja
sbb
int3
addr16
pop
faddp
cmpsb
pop
lods
sbb
mov
lahf
andl
jb
inc
and
adc
pop
into
outsl
push
mov
rolb
push
pusha
adc
push
mov
pop
push
fldt
jmp
adc
xor
sub
jno
mov
lret
out
test
repnz
cld
xor
xchg
add
or
sbb
push
ficomps
add
mov
lar
imul
xchg
push
sbb
aaa
call
inc
mov
push
mov
arpl
sub
lods
adc
es
pop
mov
mov
in
out
cli
cltd
negl
push
push
mov
mov
int3
movsb
sub
adc
loopne
dec
sbb
mov
cmc
lods
cmp
shl
lds
ds
cli
mov
push
inc
and
andl
and
icebp
popf
dec
out
adc
add
jns
call
rorb
cmp
cltd
or
fdivrl
jbe
push
mov
dec
leave
stos
in
out
ja
xor
ja
add
stos
lea
insb
test
dec
sbb
bound
cmp
aad
cmp
pop
pop
cmp
push
mov
mov
dec
push
push
xor
inc
xchg
and
mov
xor
pop
cmp
and
adc
arpl
test
inc
sar
aaa
iret
add
cmp
jo
jae
ror
rcll
pop
and
movhps
xor
orb
adc
int3
lret
and
sub
cmp
xchg
imul
sub
addl
fbld
scas
push
bnd
lods
xor
mov
fildll
cmp
add
cmp
sub
in
dec
jp
cmp
lahf
push
out
shrl
jo
inc
ljmp
divl
jnp
add
lcall
pop
ficomps
mov
gs
add
popf
repnz
ss
xchg
repnz
nop
cwtl
push
imul
enter
aas
mov
mov
aad
pushf
xor
ja
jns
xlat
inc
std
and
sbb
out
rorl
add
daa
rcrl
xor
xchg
inc
mov
and
sub
ljmp
clc
ljmp
lock
add
shrb
aam
movsb
enter
inc
js,pt
cltd
fldl
mov
cmp
mov
adc
testl
adc
adc
sbb
pop
repnz
loopne
dec
mov
les
mov
mov
sub
repz
mulb
jle
or
gs
or
pop
mov
pop
outsb
jecxz
dec
lahf
push
stos
and
scas
sarl
dec
sub
push
inc
sub
int3
jecxz
jp
xor
popa
sbb
ret
push
cmpsb
shlb
inc
in
pop
fs
fadd
jl
das
jne
mov
lahf
popf
aad
push
lret
mov
pop
add
mov
push
jae
sbb
lret
enter
mov
imul
xchg
shl
cmpsl
stos
jo
adc
mov
xchg
insb
cwtl
mov
test
icebp
inc
daa
enter
add
outsb
insb
jb
mov
pop
mov
push
sti
adc
jg
mov
push
aad
jbe
xchg
fs
inc
cmpsl
out
test
pop
out
push
stos
out
mov
pusha
sub
in
je
movb
adc
aas
jnp
ds
jbe
add
xor
dec
xor
jns
test
call
or
mov
cs
add
and
test
add
arpl
dec
stc
dec
inc
scas
add
push
add
jmp
lods
es
pushf
or
cli
pop
or
sbb
xchg
push
subb
pop
shll
imul
push
mov
push
push
ds
std
xor
int
ja
pop
jg
mov
or
rcll
ljmp
push
jo
add
or
mov
xlat
fldl
in
mov
rclb
dec
xchg
mov
dec
dec
les
dec
test
lret
jns
call
call
lea
lahf
jae
lea
ss
and
mov
mov
lcall
mov
and
stos
cli
adc
cmp
fwait
sbb
movsw
int3
and
inc
hlt
mov
xchg
adc
scas
clc
sbbb
pop
xchg
clc
mov
or
mov
and
mov
dec
adc
jne
or
push
ret
out
xchg
test
ret
ss
arpl
jp
sub
inc
cmp
fimuls
add
push
and
pushf
mov
int3
inc
ret
fistpl
xor
jns
inc
mov
jge
test
push
cmp
test
sub
stos
daa
xchg
test
bound
xor
adc
jl
arpl
jb
xor
sub
pop
dec
pop
or
stos
fildl
out
mov
inc
cltd
das
fldenv
fimull
xchg
call
mov
jle
pop
sbb
orb
outsb
stc
or
push
stos
imul
adc
add
ljmp
sbb
andb
xchg
push
lret
shlb
xchg
rclb
add
xor
jecxz
or
into
popf
push
adc
icebp
dec
mov
incl
and
push
adc
movl
xchg
movsl
jae
dec
loop
bound
dec
fsubl
mov
jle
pop
ds
cmpsl
lods
sub
int
jp
arpl
cmp
arpl
xor
xor
testb
std
or
pop
mov
fildl
bound
fwait
xlat
cmp
or
xchg
xchg
xchg
imul
shl
aas
lret
mov
inc
cmpsb
rorb
iret
insl
lea
sub
out
enter
mov
test
jl
lret
jl
jns
in
inc
cmp
enter
mov
outsl
lods
divb
ficomps
imul
cli
jmp
mov
xchg
das
addr16
cmp
loop
sarl
adcl
pop
jle
adc
push
push
jl
pop
xor
jge
stos
xchg
and
push
scas
push
aam
mov
jnp
cmc
inc
js
idivb
je
jmp
lods
xchg
xlat
cmp
pop
mov
unpcklps
inc
mov
imul
jno
inc
lret
subb
mov
iret
negb
lods
subb
pop
mov
push
jge
mov
mov
dec
mov
add
mov
mov
cld
enter
stos
jb
daa
clc
cmp
icebp
fnstsw
addl
test
mov
fstpl
cmpsb
mov
xchg
xchg
imulb
sbb
jle
jp
add
dec
std
nop
mov
push
fwait
lret
mov
out
cmp
inc
rcr
xor
push
mov
jne
and
inc
adc
pop
fucomi
out
fdivrs
fdivl
jl
test
mov
iret
jo
aad
mov
ljmp
loop
iret
cmovg
xor
add
or
enter
cmp
xchg
jl
lea
xchg
fs
adc
pextrw
ret
push
xchg
jmp
ret
mov
and
mov
and
mov
mov
mov
pop
fcomps
push
iret
mov
jb
mov
or
mov
daa
push
dec
and
push
loope
iret
push
dec
dec
mov
pop
cmpsb
clc
mov
in
sub
leave
test
xor
outsl
pop
cwtl
std
lret
call
jg
je
sarl
lret
pop
adc
add
pop
scas
outsl
sbb
ss
mov
and
push
sbb
scas
sub
inc
les
out
scas
or
shrb
sbb
add
dec
ret
cli
or
scas
xlat
mov
dec
xchg
leave
sub
cmp
and
and
clc
jno
scas
jb
dec
rcrl
xor
sbb
inc
pusha
mov
cltd
stos
shl
cmpsl
cmp
inc
mov
lret
lods
sarl
xlat
decl
push
xchg
addl
add
fwait
sbb
les
cmp
add
jge
adc
jo
xchg
jle
pop
sahf
arpl
shrl
xchg
inc
and
in
or
lea
lret
cmpsl
mov
int3
push
mov
xchg
and
sahf
bound
les
jp
testb
loope
aaa
or
fcompl
lcall
iret
addr16
xorl
ja
jno
or
dec
or
sub
inc
push
mov
cltd
and
jnp
sbb
dec
stos
xlat
lea
xchg
xlat
ss
or
adc
stos
dec
pop
aas
or
or
xchg
lods
push
outsb
pop
pop
enter
test
fisttpll
fnstsw
loop
dec
movsl
mov
inc
into
jmp
cmc
mov
clc
fstl
fstps
jecxz
dec
cmc
in
sub
push
push
pop
mov
push
and
xor
push
pusha
out
out
lock
inc
pop
jne
pop
xor
or
int
or
adc
inc
je
enter
out
les
enter
jmp
xchg
mov
xchg
aad
ds
fldenv
cmp
fsubr
out
ds
and
mov
mov
push
sbb
pop
sub
neg
rorb
out
xchg
pop
xchg
pop
sub
mov
push
or
testb
int3
popa
sbb
adc
les
and
in
or
adc
or
jbe
pop
dec
xchg
in
push
cmp
pop
lods
add
sti
roll
rol
adc
mov
pop
push
mov
jno
sbb
sbb
imul
rcll
jecxz
clc
idivl
cmp
and
out
fmulp
adc
mov
ret
xchg
in
pop
dec
inc
push
push
push
hlt
push
lcall
les
pop
add
pop
lret
out
pop
std
mov
push
adc
or
inc
loopne
and
das
out
stos
jo
cmpsl
jns
add
stos
scas
bswap
cmp
hlt
sbb
mov
lods
xor
xchg
popf
cmp
outsb
mov
jmp
gs
push
pop
cld
aaa
popa
fimuls
jge
rol
sub
mov
xchg
mov
ja
shr
mov
sub
jecxz
pop
incl
loopne
and
int
jo
mov
xor
dec
shrb
sub
repnz
mov
adc
cmc
sbb
mov
mov
pop
mov
lret
icebp
mov
lahf
jmp
and
pop
xchg
mov
mov
loope
xchg
xor
lcall
jae
arpl
push
out
les
dec
dec
xchg
call
dec
adc
imul
pop
aad
xor
or
jg
jno
push
out
cmp
sbb
mov
lods
push
je
pop
loopne
aas
inc
dec
es
mov
push
aad
in
mov
xchg
lods
rclb
dec
bound
sub
jbe
mov
push
movsl
out
movl
sahf
xchg
mov
mov
out
adc
into
push
out
xor
loopne
rcrb
inc
add
pop
or
cmpsl
adcb
stc
or
push
aad
scas
inc
dec
lea
adc
adc
sub
repz
push
add
je
inc
popf
or
cmp
imull
cmp
repz
pop
ret
adcb
cli
cmpsl
and
out
push
push
test
inc
in
jo
or
jbe
or
xchg
insb
nop
xorb
negl
pop
mov
shll
mov
jmp
mov
inc
les
pop
jecxz,pn
pushf
push
in
rorb
fcoms
jae
out
addr16
mov
repz
xchg
sub
sub
shrl
push
adcl
and
lret
sub
mov
xchg
cmp
cltd
push
popa
lahf
addps
rcll
xchg
sub
mov
cmc
xor
lods
je
into
int3
pop
push
sbb
sbb
mov
es
gs
jp
fdivrs
jno
test
ret
mov
push
jmp
dec
out
rcll
push
in
je
mov
jno
test
fisttps
mov
stos
stc
ret
stos
sti
lds
and
and
lahf
cmp
shrb
leave
daa
sbb
mov
cmp
xchg
ja
and
outsb
sub
push
dec
inc
xor
push
arpl
cmp
bound
sub
std
lds
dec
adc
xor
pop
xchg
in
or
mov
insb
andl
pushf
mov
negl
jbe
out
andb
je
xor
das
and
pop
add
and
mov
push
iret
push
insb
lock
lds
mov
cmp
mov
fstpt
imul
adc
pop
mov
es
pop
cmp
fnop
div
cld
cmp
push
lds
loop
mov
cli
icebp
jecxz
or
push
out
in
sub
in
sbb
pushf
inc
sub
int
icebp
push
jmp
test
sahf
jne
ror
fadds
scas
sbb
mov
push
adc
inc
push
mov
ljmp
jmp
fldz
mov
je
loope
pop
int3
mov
stc
xor
addb
jl
es
jmp
adc
sbb
inc
stc
outsl
jmp
and
rorl
jns
imul
fsts
arpl
jae
add
xor
jecxz
repz
fsts
jae
jae
add
xor
ljmp
or
fnstcw
jmp
pop
jmp
and
sub
dec
jns
push
hlt
xchg
sbb
pop
dec
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
clc
jo
lahf
subb
mov
addr16
pop
add
xor
bound
pop
inc
outsl
push
jg
mov
mov
xchg
mov
ret
mov
rdmsr
aas
data16
sarb
bound
jae
inc
das
push
jg
sbb
mov
fiaddl
sarb
jl
jo
dec
dec
sbb
xor
cmp
mov
into
ljmp
sub
movsl
lret
in
jg
mov
rorb
pop
and
cmc
addb
into
or
mov
std
inc
pop
das
fimuls
pushf
scas
outsb
fcomip
das
mov
xchg
lods
pushf
repz
dec
lret
or
push
mov
aaa
pop
call
dec
mov
pop
iret
out
sub
add
lock
dec
add
dec
ret
out
and
inc
lcall
mov
xor
sub
pop
call
jae
iret
jle
addb
and
mov
jns
and
int
std
rclb
daa
mov
outsl
push
sti
bound
test
ret
jg
mov
fstps
aas
or
arpl
inc
outsl
dec
adc
fst
lahf
out
notb
rolb
pop
jo
jl
push
and
sub
cs
push
mov
into
nop
lcall
xchg
xchg
and
dec
inc
dec
addr16
pop
pop
add
xor
push
adc
flds
fcompl
out
sar
and
xor
add
adc
bound
pop
inc
outsl
push
jg
mov
subb
ffreep
out
sar
and
xor
add
adc
bound
pop
inc
outsl
push
jg
jno
fisttpl
xchg
int
out
or
cld
and
mov
pop
xorb
out
imul
or
pushf
xchg
aad
shrl
out
add
lret
xchg
xchg
lock
sti
or
xchg
sbb
xor
sahf
fadd
pop
pop
outsl
sahf
mov
lods
pop
shl
xor
mov
push
hlt
sub
jmp
test
lds
add
mov
jo
iret
cmpsl
roll
mov
adc
xchg
fldt
rorb
mov
mov
cmc
test
lret
es
in
dec
repnz
cmp
int
mov
jno
outsb
scas
repnz
rorl
sbb
rolb
adc
out
dec
cmc
loope
jecxz
repnz
outsb
mov
add
hlt
sub
mov
cmpsl
jbe
aad
jp
and
and
int3
add
sub
mov
inc
jo
cmp
cmpl
jp
mov
test
lods
loop
and
std
in
sbb
push
push
mov
rcrb
sbb
mov
fstpl
inc
pushf
dec
stos
add
push
test
out
std
jae
xchg
mov
lock
nop
add
adc
sbb
pop
pop
data16
negb
mov
rorb
mov
test
xchg
std
add
loope
push
inc
repz
inc
push
shlb
in
je
push
xor
sub
icebp
fsubr
and
cmpsl
lret
inc
mov
pop
cltd
sub
dec
in
sarb
sub
cmpsl
stos
mov
cltd
rcrl
jnp
pop
movsb
jnp
mov
cld
imull
fldcw
loope
dec
inc
fs
and
jno
dec
xchg
xchg
xchg
xor
mov
repnz
aam
inc
fs
xor
mov
xor
mov
ret
loope
sub
lcall
stos
inc
add
into
pusha
leave
mov
nop
ret
push
adc
aas
sahf
xor
jmp
push
push
mov
mov
dec
jns
push
or
cmp
xchg
jns
aaa
insb
pop
pop
movl
mov
push
sub
das
std
xchg
push
mov
insl
outsb
jnp
aam
hlt
xor
jl
cmp
sti
sbb
xchg
cwtl
stc
mov
mov
inc
jle
divl
stos
jo
push
mov
pushf
test
outsl
jae
mov
outsl
out
mov
jne
push
loopne
fwait
push
mov
cs
pop
std
jno
lcall
cmpsb
mov
mov
outsb
inc
inc
ss
movsb
fstpt
fwait
decl
pop
sbb
mov
mov
sarb
ljmp
mov
cmp
add
fiaddl
push
mov
es
lds
and
cmp
mov
outsb
lock
inc
xchg
inc
push
fildl
inc
outsb
test
jb
movsb
mov
adc
mov
or
push
sbb
in
cmp
je
adc
scas
addr16
cmp
fstl
pop
clc
data16
fcoml
mov
stos
out
std
lahf
les
add
add
pop
sub
gs
lret
cwtl
pop
jnp
enter
insl
clc
loopne
dec
loopne
lahf
inc
sub
sub
pop
fs
inc
lock
js
pusha
inc
mov
inc
pusha
hlt
adc
cmp
loopne
adc
and
fmuls
ficoml
std
rcll
ret
xchg
idivb
dec
std
movsb
cmp
data16
cmp
call
fdivrs
and
jbe
lds
xchg
nop
js
aam
sub
mov
rclb
pop
sub
mov
push
jno
push
jnp
hlt
sbb
bound
xchg
aaa
cltd
fsubp
out
ds
mov
mov
enter
pop
outsb
lds
or
lods
jbe
movsb
imul
sub
xchg
ljmp
pop
js
addr16
lcall
and
sub
cmp
push
mov
jl
and
popa
in
cmc
and
dec
shrl
add
pushf
dec
ret
fistpl
push
adc
in
in
lods
push
xor
ja
adc
push
inc
pop
loope
cmpsb
rol
scas
push
int
jne
movsl
imul
push
mov
hlt
pcmpeqb
pop
aas
fsubs
ret
push
std
test
mov
jnp
test
adc
mov
or
daa
cmp
mov
cli
mov
jecxz
outsb
sbb
or
iret
aad
cmc
sbb
mov
mov
push
dec
sub
inc
and
jge
xor
ret
sub
add
cld
mov
push
cmp
pop
arpl
gs
jp
cld
cwtl
fs
testb
fisttpll
jl
xor
xchg
dec
pop
pop
jecxz
xor
cmpsl
jecxz
test
int
sub
cmpsb
sbb
test
rorl
add
xor
jnp
sub
xchg
ret
icebp
orb
mull
jmp
adc
ficomps
mov
push
mov
pause
jo
in
xor
xor
xchg
je
dec
adc
je
and
pop
arpl
xchg
mov
in
rolb
and
lahf
dec
xchg
in
pop
ret
inc
mov
inc
add
push
mov
int3
ss
push
and
mov
xor
push
mov
mov
jne
xchg
arpl
xchg
and
fnstsw
outsl
xchg
dec
enter
jne
popa
insl
xchg
mov
and
pop
add
or
mov
push
loope
xor
jl
mov
out
lret
cmc
mov
call
je
mov
arpl
outsb
mov
fdivrp
inc
clc
inc
outsl
mov
dec
xor
outsl
cmpsb
and
add
loopne
mov
scas
push
sub
mov
unpckhps
mov
and
jmp
push
cmp
lahf
mov
lds
pop
pop
lahf
adc
mov
mov
jge
xchg
jge
xor
cwtl
outsb
pop
bound
dec
rorb
lods
bound
sahf
movsb
sbb
adc
dec
loopne
push
clc
sbb
iret
jno
cmp
inc
roll
adc
or
lods
sub
movsl
sub
jae
mov
lods
das
test
test
xor
xchg
mov
cld
ja
dec
mov
sbb
mov
shlb
stos
int3
rcl
stos
sbb
out
scas
insl
ret
dec
out
frstor
adc
add
add
or
loope
test
sub
push
les
aam
outsl
scas
jns
daa
in
sub
jbe
add
aas
and
pop
rcrl
add
mov
cmp
xor
lea
pop
fs
fs
pop
movsb
lea
pushf
mov
ror
scas
cmp
lcall
pushf
lahf
pushf
xchg
fildl
push
adc
sub
dec
or
test
fsub
mov
dec
vcmpsd
icebp
aas
in
pop
inc
and
push
repz
jne
into
pop
lahf
mov
push
pop
cmp
sbb
mov
push
mov
and
jbe
dec
imul
daa
shl
lahf
jns
pop
je
mov
push
lret
sbb
sahf
shlb
daa
orl
scas
push
jmp
aad
fsubl
fdivrl
xchg
mov
mov
mov
outsl
push
rcr
pop
pop
iret
arpl
sbb
daa
mov
push
dec
jae
mov
jmp
xchg
push
sub
mov
sbb
pop
into
sbb
pop
test
clc
adc
mov
lods
mov
xchg
mov
pusha
repz
sub
es
arpl
jnp
push
sbb
repz
call
fs
or
pop
fildll
inc
aad
dec
aas
aas
mov
sti
add
mov
test
mov
movsb
sbb
and
aas
mov
add
mov
or
int3
and
es
test
sti
loopne
jge
push
mov
movsb
sbb
mov
or
xchg
push
enter
pusha
fimuls
or
loope
mov
add
mov
mov
mov
popa
cmp
stos
dec
inc
pop
xchg
inc
mov
rolb
pop
xorb
dec
js
lcall
xchg
jmp
dec
test
push
daa
inc
or
je
xor
int
jb
mov
mov
xlat
fmuls
pop
inc
jnp
dec
sub
and
mov
inc
inc
or
dec
jno
in
nop
xchg
dec
insl
xchg
ds
dec
inc
dec
outsl
in
js
fucompp
pop
cmp
pop
xchg
in
fs
movsl
push
jge
pop
mov
arpl
rolb
lds
xchg
outsl
pop
das
pop
je
cwtl
mov
mov
hlt
loopne
daa
sbb
fdivl
leave
cmp
scas
push
cmpsb
leave
test
cltd
rcrb
xlat
repz
nop
arpl
mov
into
xor
adc
adc
pusha
and
lahf
adc
pop
and
sti
add
daa
push
xchg
les
jmp
cmp
ja
scas
and
or
enter
add
jno
test
push
cmpb
push
adc
push
dec
out
xchg
fnstenv
into
fwait
arpl
movsw
adc
fstps
pop
sbb
sub
mov
jmp
sub
pop
mov
inc
test
mov
lods
stos
clc
xchg
test
pop
fisubs
aad
push
or
pop
ds
test
adc
loopne
pusha
out
pop
enter
je
dec
mov
into
iret
push
lds
lcall
inc
int
mov
cmp
jp
sub
and
notl
mov
or
scas
xor
inc
jg
sarl
sub
pop
jno
sbb
shl
dec
les
movsl
push
mov
lahf
sub
jle
mov
inc
jno
mov
jmp
outsb
sbb
outsb
enter
sbb
arpl
in
je
addr16
ljmp
adc
popa
insb
shl
or
or
mov
adc
cs
xchg
jns
or
cmp
jbe
push
pop
dec
in
add
inc
inc
mov
jbe
add
fwait
mov
xchg
mov
dec
sbb
and
xor
aam
loopne
or
ret
or
into
xchg
ficoms
jae
and
popf
sti
cmpsl
pop
adc
sub
or
mov
outsb
or
sahf
fmuls
je
xor
test
mov
xchg
lds
es
push
cli
mov
loope
cmpsb
pop
subl
add
rcr
mov
idivl
ret
popf
dec
insl
iret
stc
test
lcall
cmp
pop
lock
and
xor
cmpsl
xchg
loope
mov
and
inc
xchg
xchg
xchg
test
lods
sub
push
add
pop
jmp
mov
arpl
mov
cmp
out
loop
loopne
mov
inc
jmp
push
sub
pop
fimull
out
inc
mov
popa
or
jg
iret
fistl
imul
add
loop
out
jecxz
sbb
adc
push
push
or
xchg
stos
mov
out
das
cmp
mov
out
and
push
fucomi
loopne
xchg
scas
inc
pushf
xchg
or
cmpb
les
xor
dec
jmp
aaa
or
dec
sub
lcall
std
jno
or
push
jp
addr16
adc
adc
fsubs
mov
dec
push
and
mov
push
pop
jb
dec
dec
jnp
inc
pusha
adc
sub
jb
lods
push
jno
sbb
lods
xor
lods
test
loop
cmp
cmpl
popf
repnz
xor
push
jp,pn
mov
pop
mov
push
int3
ror
scas
popf
sub
push
pop
mov
adc
repz
cmp
and
mov
loop
pusha
into
ss
mov
repnz
jae
gs
add
fldz
adc
enter
pop
test
in
xchg
xor
mov
cs
xchg
lds
les
int3
jl
inc
dec
incb
out
loopne
jne
dec
shrl
addr16
sbb
mov
mov
fmull
inc
inc
cmp
jno
mov
add
push
sbb
dec
sub
adc
ret
xor
mov
push
add
mov
mov
mov
or
out
sbb
jp
ret
iret
sbb
outsb
add
clc
iret
pop
cmp
and
call
into
insb
xchg
xor
add
out
notl
xor
mov
je
push
inc
cmp
mov
or
mov
add
in
aaa
inc
pop
add
xor
pop
or
es
js
loop
inc
mov
mov
xchg
mov
out
mov
outsl
out
ficomps
jb
or
mov
mov
jl
mov
cmp
into
sub
push
vpunpckhqdq
out
push
mov
imul
outsl
cmpsl
mov
xchg
inc
and
outsb
pop
movsb
jb
out
push
xor
es
jno
fsubrl
ljmp
cmp
les
and
sbb
pop
inc
mov
mov
arpl
rclb
in
ds
xlat
std
jae
jbe
mov
outsb
inc
jecxz
xchg
lahf
mov
jbe
jp
xchg
xchg
or
stos
imul
or
inc
adc
and
fcompl
icebp
xlat
sahf
dec
inc
cwtl
cmp
dec
adc
mov
in
push
cmp
push
scas
and
jle
lcall
sub
and
repnz
inc
mov
jo
add
roll
nop
loop,pn
jl
and
jae
lods
dec
mov
lahf
clc
out
or
push
xor
push
icebp
adc
dec
push
inc
imul
push
push
sbb
andb
sti
call
push
adc
pop
jns
cmp
or
and
outsl
sub
mov
pop
gs
hlt
movsb
daa
popf
jecxz
pushf
insl
es
in
mov
aas
mov
in
mov
dec
ret
adc
fstps
insl
mov
bound
out
in
orb
pop
je
sub
and
adc
or
in
lock
pop
decl
inc
dec
mov
fld
mov
fnstcw
xchg
add
jmp
push
cmpsl
mov
mov
lret
out
jge
jno
cmp
jge
pop
mov
sbb
jns
shld
call
in
xchg
fldt
fbld
hlt
mov
ret
mov
neg
cmp
bound
leave
and
loopne
repz
xchg
gs
adc
cmp
je
inc
out
pop
jecxz
std
push
mov
loop
in
mov
inc
jne
adc
pusha
jle
test
push
mov
mov
and
pop
lcall
cli
imul
mov
push
and
es
adc
dec
xchg
mov
jge
sbb
out
add
xchg
adc
xchg
loope
enter
xchg
or
xor
ret
add
repz
cmp
in
pop
loope
xchg
adc
xchg
outsb
adc
cmp
fbstp
aam
in
clc
xchg
mov
test
mov
hlt
sbb
and
push
outsl
xchg
push
or
inc
push
add
fsts
mov
pusha
mov
insb
and
fists
movsl
inc
jp
xchg
dec
insl
dec
lods
notb
add
xchg
xchg
push
ljmp
dec
adc
push
and
out
ret
ja
inc
fsqrt
mov
mov
addl
add
mov
ljmp
test
cmp
add
sarb
fsubrs
cmpb
push
testl
push
xor
mov
pop
pop
out
lcall
mov
pop
imulb
movsb
jecxz
rol
push
dec
lahf
sub
incl
push
dec
mov
push
lods
jl
cmp
ja
sbb
adc
enter
push
xor
xorb
mov
mov
jbe
hlt
ja
fcompl
mov
xchg
sub
jno
hlt
lret
mov
fcmovnb
cwtl
and
dec
push
mov
adc
push
insb
cwtl
lret
cmp
mov
mov
fsubp
mov
xor
dec
jbe
mov
xor
daa
imulb
sub
pop
fcmovb
out
inc
and
sub
mov
pop
js
cltd
leave
lods
das
mov
jmp
or
imul
call
adc
jecxz
cmpsb
xor
xlat
in
jg
mov
stos
mov
imul
sub
data16
mov
or
xor
ret
addr16
fneni(8087
ss
outsl
add
add
add
pop
sar
aam
aaa
or
lea
sbb
xor
pop
ss
mov
or
add
hlt
ret
jecxz
movsl
xor
jnp
adc
popa
rolb
rorl
push
fs
bound
cmpsl
js
mov
test
sahf
pushf
lahf
loopne
add
outsb
lcall
hlt
movsb
shrb
bnd
xor
loopne
jo
dec
xchg
scas
pop
mov
sub
mov
out
pop
mov
imul
sbb
push
ds
out
test
clc
push
sti
loopne
jo
lcall
mov
xchg
jns
iret
and
sbb
mov
sbb
sbb
and
xor
cmp
cwtl
imul
inc
push
xor
test
sbb
cmp
push
xchg
cld
ja
pop
push
xor
stc
test
cmpsl
fsubrs
aas
and
lock
jl
xchg
xchg
mov
and
stc
popf
dec
push
xchg
sub
in
jl
cmp
std
fcoml
imul
push
popf
sbb
sbb
les
mov
aas
adc
cld
shlb
out
dec
insb
loopne
mov
aas
fsubl
inc
push
jge
xor
mov
int3
out
mov
xor
xlat
adc
cs
je
lcall
pop
cwtl
es
push
adc
test
mov
push
pop
sbb
pop
jno
push
lods
pop
mov
mov
jp
gs
sub
movsl
arpl
out
out
iret
mov
aad
dec
pop
lret
lds
ja
pop
ds
sub
mov
fdivl
cmp
dec
push
outsb
js
mov
popa
add
pop
sbb
jae
popf
mov
mov
push
lcall
xor
sbb
ds
mov
imul
loope
das
into
cmp
add
dec
cwtl
lea
add
outsl
xor
xor
xchg
dec
push
xor
sub
cltd
mov
cmp
aad
or
stc
xchg
push
adc
inc
inc
aaa
or
sbb
cmp
jmp
mov
ret
jne
inc
scas
stc
xchg
add
cmp
xchg
push
fstl
pop
mov
pop
xchg
fidivs
lds
cwtl
enter
mov
cmc
mov
or
mov
push
jg
lcall
xchg
push
out
lret
adc
adc
std
scas
jecxz
mov
adc
push
or
inc
dec
sub
daa
xor
testb
ds
subl
adc
sbb
je
lcall
inc
enter
cmp
pop
jmp
dec
add
cli
add
loopne
mov
mov
daa
mov
jae
rcrb
jnp
xor
sbb
sub
and
int
and
ss
mov
dec
lods
jl
and
pslld
fucomi
out
adc
mov
insl
mov
push
adc
pop
mov
pop
sub
sub
sbb
hlt
inc
mov
repnz
lods
lods
mov
fdivrl
cld
out
arpl
and
inc
xchg
pop
jbe
dec
stc
mov
mov
jp
mov
dec
test
push
jns
imul
jne
sub
dec
xcrypt-ofb
pop
mov
repnz
ror
jns
sub
negb
push
jmp
xchg
push
sub
cmpsb
icebp
fistpll
mov
scas
pop
xchg
stc
mov
jae
sub
cltd
outsl
mov
dec
xchg
stc
pop
push
mov
mov
pop
sbb
mov
push
ret
ljmp
cmp
dec
sbbl
mov
add
orl
push
into
adc
pop
out
push
cmpsb
hlt
sbbb
pop
sbb
icebp
xor
or
and
jo
es
sub
stos
pop
sbb
mov
in
movsb
push
inc
mov
xchg
xchg
cmp
xor
dec
repnz
mov
and
hlt
cmp
addr16
rcrl
adc
cmpsl
adc
mov
ret
dec
mov
rorb
scas
das
and
and
push
inc
or
popa
and
sti
shll
xchg
mov
pusha
and
sub
cs
popf
jne
fcmovu
test
daa
mov
arpl
xor
xor
mov
movsb
push
jmp
int
sbb
icebp
cmp
enter
adc
sar
mov
inc
mov
cmp
cmpsl
mov
dec
xor
fcompl
addr16
pxor
push
and
outsb
sub
adc
push
xchg
lahf
xchg
mov
ret
jmp
rdmsr
pop
add
adc
bound
pop
inc
outsl
push
jg
mov
subb
ffreep
out
sar
and
xor
add
adc
bound
pop
inc
outsl
push
jg
mov
adc
mov
ret
jmp
xlat
xor
push
das
adc
bound
pop
inc
dec
arpl
popl
mov
inc
outsl
push
int
test
adc
cli
mov
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
cmp
sub
sbb
or
mov
push
ljmp
lods
dec
pushf
lea
adc
add
and
and
aam
les
or
jl
insb
test
movsb
mov
push
mov
in
aam
xor
and
int
les
or
jl
insb
pushf
pop
lods
dec
mov
lock
test
aam
lods
sbb
pusha
outsl
mov
out
push
sub
adc
ljmp
jg
mov
sbb
ds
inc
aam
lods
arpl
add
inc
imul
xor
sbb
sar
test
xchg
add
lret
cmp
sub
jbe
or
pop
mov
inc
fldlg2
dec
pop
xor
mov
add
sti
pop
mov
int3
and
and
in
movsl
push
fsqrt
inc
sbb
icebp
fs
jl
mov
shll
hlt
xchg
mov
mov
push
pop
push
arpl
je
inc
popa
jno
lret
dec
xor
aam
rcrl
or
jl
insb
test
mov
pushf
insl
mov
or
adc
xor
inc
jge
pop
les
gs
ret
cmp
dec
leave
mov
and
or
jns
push
mov
lods
dec
les
pusha
loope
out
mov
rcrb
enter
and
std
data16
mov
mov
xor
insb
test
movsb
mov
je
fs
adc
add
xor
and
aam
les
or
jl
insb
test
movsb
mov
je
fs
adc
add
xor
and
aam
inc
adc
push
mov
push
inc
out
add
jp
cmp
pop
sbb
mov
inc
add
add
add
shlb
push
testl
mov
scas
push
scas
and
pushf
and
fbld
xchg
popf
lcall
jno
dec
mov
loop
es
adc
fists
mov
shr
addb
sub
mov
int3
dec
pop
aam
gs
dec
out
sbb
idivl
movsl
ja
mov
jnp
sub
jno
xor
je
stos
pusha
dec
push
stos
mov
jecxz
nop
and
xor
into
jl
cmp
mov
jno
cmpsw
pusha
daa
mov
js
mov
sub
fisttpll
mov
mov
leave
aaa
je
je
test
out
mov
add
inc
ja
shr
test
add
jns
pop
jnp
mov
insb
push
push
insl
or
mov
adc
xor
xor
xchg
pop
les
cwtl
pushf
mov
pop
jecxz
shll
pop
cli
xor
pop
ror
out
xchg
xlat
pop
pop
pop
outsl
movsl
jl
xor
cmpsb
outsb
dec
ficoms
daa
pop
and
gs
je
insl
dec
ss
xchg
push
jns
push
cwtl
sub
mov
cwtl
aam
out
cs
pop
adc
shlb
outsb
sub
insb
mov
and
mov
cmpsl
nop
add
cmp
cli
jecxz
ljmp
inc
ljmp
xlat
cmp
test
cwtl
cld
xchg
push
jns
addr16
ret
stos
or
jp
xchg
addl
aas
je
shrb
push
test
arpl
adc
xchg
cmp
scas
dec
and
int
cmc
or
mov
mov
sub
dec
jecxz
adc
popf
divb
sbb
rcrb
cmpsb
and
cmp
pop
setg
adc
push
lret
popa
mov
subl
dec
repz
add
test
jl
sbb
jmp
jbe
pop
inc
mov
jmp
push
xor
push
cmpsb
push
std
push
mov
shl
jg
jmp
out
leave
and
out
add
xchg
lods
or
xchg
push
fnstsw
or
pop
jae
jg
outsb
in
aaa
push
fsubl
lods
lcall
lods
push
jno
cmp
sbb
cmp
or
pop
pop
popa
sub
fmul
jp
and
js
ljmp
mov
dec
out
popa
mov
adc
xor
cmp
xchg
add
test
cltd
dec
loopne
jmp
jp
lds
frstor
jl
mov
adc
mov
fs
lret
popl
cli
push
push
sbb
lcall
ss
and
inc
inc
loopne
pop
cwtl
add
push
mov
call
pop
adc
jmp
int3
xor
mov
std
iret
or
jne
repnz
xor
mov
fstpt
push
or
js
out
icebp
out
push
adcb
xchg
add
xchg
lods
add
call
add
mov
xchg
fcomps
fmuls
push
ud1
pop
pop
pop
jge
adc
lea
xor
or
pop
fisttpll
pop
leave
pushl
push
jbe
xchg
movsb
jae
les
dec
outsb
ljmp
sub
into
add
ljmp
xchg
mov
popf
mov
int3
jmp
push
bound
clc
out
dec
je
dec
ss
push
pop
ret
push
pop
jno
ja
bnd
pop
repz
sbb
addr16
pop
mov
mov
mov
adc
sub
or
gs
jmp
mov
sbb
or
jae
das
inc
jle
bound
mov
mov
and
lods
pop
call
inc
sahf
scas
inc
rolb
dec
mov
test
sti
xchg
test
sbb
xchg
cmp
push
push
inc
mov
pop
int3
xlat
sti
ret
xor
loope
lds
dec
cs
sbb
fnsave
or
inc
popf
jbe
icebp
sub
stos
lds
adc
mov
int3
loope
cmpsl
sub
add
out
or
bound
nop
frstor
mov
xchg
jnp
icebp
adcb
rorb
sbb
dec
shlb
mov
pop
add
adc
jae
adc
add
outsl
movb
add
fsubrl
call
and
dec
jo
cmp
aaa
cli
push
test
push
xor
imul
add
pushf
ds
fadds
das
mov
jnp
push
shll
and
movsb
mov
cmp
jmp
push
lcall
jnp
mov
idiv
sti
sub
cmp
mov
push
dec
ror
pop
fstpl
xchg
sbb
inc
lcall
ficomps
push
inc
sbb
in
stos
xor
fcoml
in
in
enter
fs
or
test
das
mov
enter
push
and
popf
int
idivl
add
lods
push
movsl
mulb
add
mov
xor
add
xchg
mov
test
dec
inc
cmc
push
js,pt
out
or
and
mov
mov
xchg
call
inc
and
mov
dec
and
xchg
aad
adc
inc
mov
aaa
xor
imul
jle
mov
jle
mov
lea
xchg
mov
out
das
jno
push
push
mov
js
jecxz
outsb
shr
inc
int3
icebp
mov
or
loope
out
in
jns
or
and
cs
or
jns
mov
sbb
and
insl
pop
pushf
sbb
push
je
cmp
ret
pop
out
pop
jmp
rcll
add
cmp
subl
lods
outsl
ret
fidivl
fucom
cmp
std
lahf
data16
aaa
ljmp
pop
imul
int3
push
lods
mov
xor
sbb
test
mov
jns
int
nop
cwtl
lcall
clc
cmpsl
inc
hlt
add
push
fildl
es
imul
add
jne
push
sbb
dec
lods
add
jmp
into
ss
punpckhdq
lret
dec
dec
add
push
pop
ja
jns
je
pop
pop
pusha
and
mov
lahf
push
add
pop
adc
pop
hlt
xor
idivb
pop
jl
sahf
dec
rcrb
dec
jmp
imul
in
cmp
adc
sbb
cmp
or
cli
adc
push
repz
lret
or
push
add
repz
adcl
xchg
adc
aam
pop
leave
lods
je
sbb
rorb
push
inc
mov
and
pushf
add
push
mov
test
cmp
sub
outsb
cmpsl
jle
int3
mov
insl
mov
xchg
data16
stos
add
and
xchg
iret
int3
dec
pop
es
or
test
adc
pop
sub
negl
sarl
mov
scas
out
fdiv
inc
outsb
cmp
pop
cmc
cmp
lcall
and
test
jmp
mov
pop
dec
fistpll
fdiv
jno
mov
mov
lods
fs
repnz
jmp
cmpsl
sub
insb
dec
stos
mov
sub
xchg
and
dec
mov
push
call
sub
test
sub
sub
aam
xchg
sub
add
mov
insb
popf
jg
push
mov
mov
xchg
js
nop
push
pop
movsb
inc
mov
pop
pushf
pop
mov
push
idivb
adc
fsubs
cmp
cmp
jnp
sub
and
test
xchg
scas
orb
or
dec
loopne
out
jmp
jns
icebp
sbb
xchg
push
adc
xchg
out
inc
mov
enter
sahf
in
sbb
push
push
stos
cmc
add
pop
in
ficoms
xor
sub
ja
mov
pop
les
sbb
fcoms
pop
loope
int
aaa
sub
cwtl
inc
dec
imul
cmp
cmpsl
pusha
dec
jbe
pop
add
arpl
nop
jle
jp
mov
fwait
scas
ret
dec
cmpsb
jo
packssdw
xchg
ljmp
mov
mov
mov
stos
in
pop
in
push
pop
inc
and
xchg
shlb
into
cltd
and
pop
inc
scas
mov
pop
aaa
stos
ret
xchg
fldcw
fistps
iret
mov
ds
add
push
dec
sbb
mov
enter
idivl
inc
sti
sti
mov
jne
pop
sarl
inc
imul
xchg
xchg
fstl
sbb
jbe
push
cmp
test
and
shl
loop
jl
test
inc
les
mov
jp
push
dec
ja
sahf
or
shrl
add
aad
jmp
movsb
ss
out
jbe
pop
test
xchg
test
xchg
inc
lret
sahf
mov
sbb
lods
cmp
lahf
add
cld
push
rolb
adc
shll
dec
sub
outsl
xchg
shlb
xchg
insb
imul
jne
jle
aas
int
les
aad
ja
add
sti
push
push
cwtl
push
xor
outsb
iret
jae
inc
decb
imul
addr16
rcrb
insl
jmp
sbb
js
and
mov
add
popf
into
movb
mov
cmp
sub
cmp
int
jecxz
out
sti
movsl
xlat
shl
aam
inc
cld
pop
ret
out
add
out
adc
mov
je
mov
jae
rorb
jbe
sub
scas
and
hlt
jnp
inc
sub
aas
movb
fistpll
add
mov
imul
jbe
jno
pop
shlb
or
pop
in
nop
enter
adc
push
cltd
rclb
int
dec
jnp
cmc
cld
iret
push
std
dec
or
adc
cwtl
das
jg
sbb
sub
lcall
xor
or
jmp
out
mov
fisttpl
inc
shrl
pop
lock
in
bound
or
popl
in
mov
jae
cmp
xchg
add
mov
add
ror
nop
jae
add
fcoml
mov
aaa
adc
call
shlb
sub
jg
mov
inc
pop
inc
mov
ljmp
fcompl
push
inc
pop
xchg
push
mov
call
mov
icebp
insb
cmc
frstor
jns
movsl
scas
and
sarb
mov
push
outsb
popa
push
adc
bound
xlat
dec
push
inc
sub
inc
or
mov
jmp
sbb
sub
in
mov
mov
mov
add
fiadds
lds
loope
pop
jecxz
les
mov
inc
lcall
mov
pop
mov
pop
mov
jb
sub
int
jle
inc
ds
pop
ss
mov
add
int
pop
push
dec
inc
jle
hlt
les
jmp
mov
testl
mov
push
pop
in
ja
stos
push
or
in
outsl
lret
sub
jno
or
out
ds
add
cmc
sti
mov
jle
jmp
mov
sub
mov
add
mov
mov
fisubrl
add
cwtl
and
stc
cs
mov
gs
mov
je
js
je
call
xor
in
pusha
pop
fsubp
sahf
sub
insb
out
jno
ror
test
aas
add
xchg
stos
das
mov
sahf
mov
jle
sti
xchg
dec
cmp
es
stos
push
or
mov
push
cvtps2pd
ss
pop
or
mov
fnstsw
xor
in
cld
add
or
inc
pop
mov
jns
jbe
insl
repnz
and
aam
and
mov
subb
test
notl
out
mov
or
movsl
dec
pusha
aad
daa
dec
mov
xor
push
aam
mov
fstpt
dec
les
mov
fsubrp
pop
repnz
aas
lret
je
pop
adcb
mov
les
in
sub
jmp
xchg
enter
lcall
jb
sub
cld
add
xchg
je
cli
adc
ret
stos
push
mov
sbb
inc
push
add
sbb
and
xor
repz
mov
cmc
dec
jecxz
lret
mov
inc
and
aam
sbb
xor
mov
aam
pop
cmpsb
sarb
fstpl
cmpsb
mov
scas
pop
fdivs
sbb
dec
les
xorl
xchg
fdivrs
jmp
aam
and
int3
jno
sbb
jnp
idiv
std
aas
unpckhps
mov
xchg
add
daa
sub
lea
mov
mov
ficomps
daa
int3
int
in
movl
xor
adc
outsl
push
add
sub
pop
icebp
fistps
outsb
dec
cmpsl
mov
int3
mov
cmpsl
xchg
fcomps
inc
push
js
aad
icebp
iret
push
pop
fistpll
cmp
cmp
mov
stos
xor
pop
lds
clc
mov
in
popa
add
fisubl
pop
rcrb
mov
mov
mov
popa
outsb
push
arpl
cs
push
icebp
cs
rorl
fs
outsl
adc
iret
xchg
dec
push
jmp
and
outsb
cli
out
test
jp
xor
aaa
leave
lock
stc
test
push
aad
and
or
rol
dec
ds
sahf
jae
int
jnp
xchg
jp
cmp
add
sti
scas
gs
mov
push
gs
ja
sbb
dec
mov
js
lds
fs
out
jbe
sub
aad
jge
in
sub
dec
jecxz
sar
call
xlat
mov
dec
scas
dec
mov
lahf
mov
gs
pop
pushf
mov
mov
pop
stos
stos
cmp
xor
xchg
sub
in
loope
and
pop
xlat
sub
in
xchg
or
ret
in
and
inc
fs
sub
mov
lahf
mov
jae
mov
loopne
jae
xchg
stc
push
movsl
outsl
ja
or
mov
xchg
sbb
mov
and
and
loop
push
xchg
stos
fucomi
or
pop
jnp
lock
test
lea
pop
or
int
adcl
cs
rcl
popf
add
cs
push
sarl
gs
clc
sub
xlat
sbb
sub
sarb
pop
test
inc
movsl
cmpsl
mov
xor
loope
mov
xchg
mov
jmp
hlt
sub
cmp
xor
xchg
in
dec
cmp
jbe
rep
dec
popf
sbb
mov
imul
scas
pop
and
mov
add
lahf
and
rcrl
xchg
or
lret
icebp
popaw
or
sbb
int
adc
lahf
add
mov
dec
pop
push
and
add
int
stos
cltd
dec
and
xchg
jle
mov
ficoml
scas
push
jle
imul
ds
push
push
cwtl
cli
push
push
loopne
adc
popf
push
pusha
or
add
jnp
xchg
gs
imul
filds
test
outsb
push
pop
pushf
mov
dec
add
in
outsb
scas
iret
fsubr
dec
xchg
scas
popa
sbb
dec
xlat
and
cmpsl
push
cmp
bound
mov
sub
adc
fcmove
ds
pop
push
xor
mov
xor
pop
inc
pop
shll
mov
mov
mov
pop
in
gs
fld1
inc
sbb
andl
dec
mov
adc
mov
adcb
mov
lds
leave
ds
dec
in
cmp
and
xchg
jmp
jb
or
fs
data16
fcmovb
mov
push
out
pop
fwait
and
lret
or
adc
mov
and
xchg
fdivrs
or
mov
imul
and
pushf
and
rcrb
rorb
sub
mov
sbb
xchg
out
ds
sub
xchg
dec
xor
std
adc
in
mov
mov
push
mov
mov
mov
outsl
fistpll
mov
test
rcr
dec
aaa
sahf
jo
imul
addr16
cmc
inc
cmp
mov
xchg
and
stos
push
ss
or
in
daa
mov
push
sahf
loope
mov
jno
add
add
and
iret
jo
adc
mov
or
and
dec
xor
or
add
mov
out
and
sub
stos
add
cltd
mov
sub
sbb
push
dec
pop
in
sarl
mov
mov
fucomip
fninit
adc
in
or
ss
xchg
movsl
xor
lcall
and
bound
imul
pop
fsubs
sub
or
idivl
mov
mov
fldl
into
sbb
pop
mov
or
cmp
xorl
fldl
mov
adc
jg
mov
push
ja
nop
fstps
push
iret
int
adc
mov
or
jmp
dec
or
shr
jle
fs
mov
dec
imul
mov
push
jne
push
xchg
sbb
lea
mov
pop
sbbl
mov
and
inc
mov
mov
cmp
cmp
stos
ret
fistps
in
cmp
sbb
out
iret
or
out
test
and
jmp
add
sub
mov
aad
sbb
inc
or
inc
pop
adc
pop
push
xor
pop
in
bound
dec
popa
or
jge
jae
lcall
loop
jmp
xor
adcl
cwtl
das
xchg
int
inc
mov
cs
out
ud0
sbb
inc
add
xchg
xchg
mov
xchg
and
das
lcall
inc
push
jne
loope
push
dec
scas
mov
notb
mov
mov
adc
xorl
ffreep
xor
shlb
mov
mov
gs
or
stos
outsl
push
in
xchg
cmp
leave
out
dec
add
enter
ss
sahf
popa
les
out
sbb
outsl
call
mov
push
sub
adc
int
jecxz
lea
sub
dec
xor
dec
and
loope
xlat
mov
les
push
rolb
ja
xor
inc
adc
fwait
pusha
fcomi
cli
sub
xchg
sbb
int3
sbb
daa
mov
lahf
cmp
jo
lea
test
lods
addl
dec
pop
mov
cmc
mov
xchg
subl
mov
pop
out
call
mov
or
inc
addr16
mov
add
push
inc
push
mov
fdivp
dec
sub
rcl
scas
rcll
push
xchg
push
add
fisttpl
inc
push
sti
jno
rorl
and
mov
inc
dec
jns
mov
insl
mov
lods
adc
mov
in
outsl
lret
xor
jge
jl
xchg
mov
iret
mov
adc
leave
popf
popa
cmc
in
xchg
mov
js
dec
mov
jb
sub
stc
lahf
xchg
icebp
and
sub
push
rclb
cmpsb
in
imul
outsl
cs
or
cltd
sbb
ljmp
mov
mov
inc
rolb
test
sub
mov
sub
decb
or
fnsave
cltd
dec
sahf
inc
mov
test
andb
mov
inc
lahf
loop,pn
cmpl
xchg
fistps
or
in
mov
scas
xor
pop
mov
inc
add
cmc
sub
cs
xor
xchg
test
aam
outsl
ret
inc
mov
dec
shrb
fsubp
fs
push
int
sbb
leave
lret
mov
pop
or
cltd
icebp
imul
jae
mov
mov
cli
jbe
add
pushf
outsb
call
inc
sub
dec
nop
mov
dec
xchg
adc
cmp
push
adc
xchg
sbb
divl
lea
push
aad
aaa
sbb
scas
fcmovnb
icebp
dec
xor
xchg
add
jmp
outsb
dec
inc
insb
addr16
and
mov
cmp
filds
mov
sbb
sub
and
int
imul
mov
and
out
fsubrs
mov
leave
cmp
mov
lret
arpl
sbb
xchg
out
sbb
mov
mov
jl
xchg
pushl
lock
xor
bsf
lock
enter
jg
xor
loope
enter
sbb
xchg
insb
test
movsb
mov
je
fs
adc
add
xor
and
aam
les
or
jl
insb
test
movsb
mov
je
fs
adc
add
xor
and
aam
les
insb
test
movsb
mov
je
gs
adc
add
xor
sub
sbb
or
jl
insb
test
movsb
mov
je
adc
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
imul
insl
addps
jae
loope
pop
sti
lret
popf
fucomi
stos
std
mov
dec
imul
insl
sub
dec
or
lods
jmp
sti
in
lret
popf
fldt
mov
fwait
xchg
imul
lahf
dec
lds
sub
sbb
jmp
fsub
mov
in
cltd
in
call
or
or
xchg
xorb
or
mov
leave
add
repz
cwtl
fiadds
std
mov
pop
lahf
leave
add
fisubs
adc
and
shrl
jbe
and
pop
movsb
and
inc
clc
outsb
dec
sti
mov
popf
mov
mov
loope
icebp
cs
pop
call
mov
mov
pop
in
adc
add
dec
arpl
adc
fstpl
sub
mov
cmp
xor
fildll
mov
gs
mov
sbb
add
sahf
cli
mov
into
pusha
stos
scas
call
jbe
imul
sbb
cmp
sti
sbb
daa
sti
sti
lret
lods
mov
repnz
outsl
dec
cmp
gs
add
push
cmp
dec
lods
xchg
out
cli
call
call
mov
push
jg
jl
add
sbb
bound
jg
mov
in
xchg
lds
hlt
inc
das
push
xor
ds
pop
sbb
lret
popf
fucomi
stos
std
mov
sub
dec
sbb
cmp
pop
sbb
lret
popf
fucomi
stos
std
mov
sub
cmpsb
fstpl
mov
mov
or
push
and
addr16
sbb
mov
sub
inc
sub
in
movsl
imulb
insl
inc
jmp
mov
std
stos
leave
adc
cld
and
dec
mov
dec
mov
ret
rclb
inc
lods
fwait
mov
ljmp
jbe
loop
into
pop
stos
mov
adc
js
lds
sbb
push
mov
test
dec
nop
cli
sbb
pop
outsl
jecxz
mov
adc
mov
sub
test
xchg
pop
es
lea
jmp
loop
cld
std
mov
cmpsb
icebp
pop
pop
push
cmpsb
iret
jne
stc
pop
mov
insb
sub
pop
mov
cmc
or
lea
fxtract
sbb
mov
mov
pop
insl
sub
pushf
lods
push
and
pop
je
cli
sub
aas
std
xchg
addr16
push
and
and
mov
mov
shll
sbb
or
cltd
adc
adc
pushf
inc
popf
mov
test
pop
data16
rcr
pop
mov
jb
adc
subl
or
loop
lahf
cmp
sub
jmp
sbb
loop
pop
mull
sbb
pushf
mov
lcall
jle
and
imul
test
scas
lret
lea
cwtl
sbb
shlb
mov
sbb
mov
std
adc
cli
lret
push
ljmp
jmp
xchg
jne
jge
sarl
inc
mov
push
or
pop
add
push
mov
and
shll
in
sub
pop
fiadds
jb
rcrb
out
dec
jae
pop
sub
inc
sub
push
icebp
int3
pop
orb
in
inc
cmc
push
inc
sub
mov
push
lcall
mov
fcom
jns
mov
mov
nop
popf
test
add
mov
repz
pop
js
cs
pop
mov
gs
jne
adc
push
xchg
repz
cmp
xlat
xor
es
inc
inc
mov
jns
lcall
xor
scas
ja
inc
cli
xchg
mov
sarb
fcoms
xor
sti
clc
aam
mov
jmp
in
fimull
mov
leave
adc
mov
mov
rcrb
insb
aad
pop
loope,pt
pop
adc
lods
pop
jno
jp
cmp
jle
and
fisubs
jl
std
scas
les
pop
mov
clc
lea
xchg
jg
icebp
adc
popf
and
and
stos
mov
pusha
sahf
xchg
xchg
mov
cmp
frstor
add
adc
lock
pop
dec
mov
cmp
fistpl
pop
cltd
pushf
mov
mov
ss
lahf
sarb
shlb
fcomps
lea
xchg
xchg
dec
sub
push
lcall
mov
andb
and
dec
cltd
and
xor
subl
push
adc
inc
aad
xchg
sub
pop
add
sbb
fadd
aam
pop
insb
cmc
push
cmp
jle
or
mov
jne
xchg
xor
mov
jge
push
cmp
pop
cmp
push
les
enter
xchg
in
iret
mov
iret
push
mov
fcompl
popa
xor
popf
mov
ljmp
fnstcw
orl
push
scas
and
inc
mov
rorl
js
into
or
test
rcr
mov
jo
cmp
mov
lods
lea
pushf
js
fadd
lcall
lcall
push
push
or
lcall
cli
inc
aam
or
jnp
push
cmp
adc
ficoms
pop
clc
insl
or
ss
push
ss
and
lds
in
arpl
adc
push
loop
cmpb
scas
pop
push
lea
cmpb
scas
pop
mov
xchg
xor
dec
mov
inc
dec
into
add
inc
fisttps
sub
lret
sti
mov
loopne
cmp
mov
ljmp
subb
shll
cmpsb
xchg
dec
dec
inc
fisubl
push
mov
mov
mov
cmp
jle
pop
ror
aam
lods
test
outsl
lea
lret
imul
and
xlat
mov
arpl
repz
jg
dec
fidivrs
or
add
jne
ja
inc
xor
jne
into
or
gs
or
push
push
ret
mov
jne
or
rclb
xorl
xor
mov
add
mov
mov
inc
lods
push
out
stos
cmc
out
ror
jnp
lods
sbb
xor
pop
iret
sub
sbb
sbb
stos
les
jbe
mov
out
imul
aaa
inc
sbb
xchg
movsl
xor
xlat
scas
mov
fstl
sar
orl
fistps
push
mov
insl
or
mov
shlb
push
pop
dec
cmp
jae
jle
loop
pop
dec
mov
iret
out
xor
testb
xchg
dec
in
dec
pop
fs
jecxz
jmp
dec
nop
roll
inc
test
sub
mov
jnp
push
lds
cmpsb
fiaddl
sbb
push
testb
test
in
inc
or
lds
adc
sub
pop
jns
jp
and
in
in
sbb
imul
pop
or
idiv
jle
hlt
decb
scas
pop
xchg
enter
call
jmp
cmp
pop
ret
lods
or
aaa
cmp
pop
jg
mov
repz
xor
mov
sub
bound
fwait
xor
mov
hlt
xchg
xor
popa
dec
or
dec
or
inc
rcll
mov
daa
scas
mov
push
xchg
sub
and
pop
sahf
inc
xchg
enter
adc
fbstp
out
mov
dec
mov
jnp
call
dec
xor
and
jmp
lock
fs
subb
sub
hlt
leave
xor
imul
xchg
push
leave
xchg
xor
xchg
pop
or
xor
cmp
test
or
adc
xor
inc
fldenv
arpl
dec
jge
sbb
icebp
pop
dec
jl
dec
cli
int
pop
dec
stos
xchg
insb
outsb
adc
cld
mov
xlat
inc
int
add
neg
pushf
xchg
notb
add
iret
repnz
mov
xorl
loopne
mov
dec
and
insb
push
or
loop
and
mov
mov
outsb
cmpsl
lret
push
xchg
insb
in
add
dec
enter
cmp
shl
in
jecxz
push
cmpsb
arpl
cmpsb
jge
cld
sbb
mov
ja
jo
xor
cmp
pop
pop
rcll
pop
outsl
insb
inc
outsb
test
xor
jbe,pt
sbb
in
adc
add
sbb
inc
lock
jp
in
sahf
push
push
inc
lahf
and
hlt
jge
mov
xor
mov
push
sub
fldcw
push
push
loop
mov
hlt
imul
pusha
and
jne
outsl
js
inc
test
insl
push
mov
xchg
addb
lds
inc
cli
inc
testl
push
mov
inc
mov
cli
clc
jbe
js
sub
sarl
mov
cmp
popf
xchg
jmp
jmp
adc
mov
es
std
arpl
lret
sahf
js
das
and
jns
daa
fistpll
aam
iret
cmpsb
add
inc
mov
sub
push
mov
jae
cmc
loope
cs
aaa
popf
cmp
lods
xchg
push
popa
iret
popa
mov
out
sub
xchg
jbe
jp
in
jg
icebp
xor
imul
xor
movsb
adc
data16
shl
push
cwtl
inc
std
out
outsb
repnz
dec
xchg
add
or
in
inc
fstp
insl
div
ret
or
jp
and
jb
jns
int
loopne
idiv
repnz
ja
inc
mov
pop
scas
stos
sbb
test
pop
in
stos
jmp
insb
push
aaa
and
dec
mov
rol
sbb
adc
gs
iret
rcr
shll
adc
iret
ljmp
dec
ret
jmp
sahf
lahf
push
mov
fwait
add
ljmp
cmp
sbb
sahf
out
sbb
scas
out
gs
pop
ficoml
or
xor
xchg
jns
std
mov
pusha
fstpt
jg
fwait
call
test
mov
rolb
jne
aad
push
and
pop
arpl
mov
frstor
and
fwait
lock
ds
xchg
push
shrb
mov
fistps
in
mul
js
mov
dec
dec
movsl
int
outsl
push
mov
jecxz
adc
mov
push
loope
xchg
xor
jns
pushf
mov
dec
xchg
sub
push
or
sti
test
out
movsl
dec
fidivs
ljmp
nop
out
xchg
in
dec
xor
imul
mov
mov
popa
sbb
cs
jle
or
into
pop
pop
mov
jnp
nop
mov
pop
arpl
test
insb
mov
and
inc
jnp
pop
out
stos
lods
push
xchg
out
les
mov
fsubrs
popa
cld
je
jge,pn
fcoms
into
lea
adcl
call
dec
dec
xor
aad
mov
in
xchg
imul
pop
mov
xchg
mov
ficomps
jns
mov
xor
aam
das
fsubs
je
xchg
push
mov
mov
mov
dec
cmpsl
push
push
pop
dec
movsl
popf
push
ss
jecxz
ja
scas
repz
scas
pop
inc
pop
fadd
cmp
rcrb
rcrl
lcall
pop
jmp
mov
xlat
ss
push
and
xchg
sub
lods
imul
inc
hlt
xor
mov
jl
add
xchg
inc
adc
fnclex
lds
add
add
por
mov
xor
mov
xor
sbb
lea
and
int
sbb
sbb
inc
inc
in
sbb
lock
sti
lea
inc
insb
popf
xor
push
int
ret
add
adc
mov
ret
cmp
jl
sahf
or
dec
ljmp
popf
mov
sub
enter
mov
sub
cmc
push
add
sub
fincstp
inc
xor
dec
outsb
outsl
push
mov
mov
cmpsl
cli
xchg
aad
cmp
js
cmc
xchg
adc
mov
popf
mov
ficomps
cvtps2pi
sub
mov
xchg
sub
mov
and
addr16
test
aaa
sub
jl
jl
mov
les
jae
sarb
repnz
ja
add
inc
mov
fimull
mov
daa
push
fldcw
pop
and
fwait
jne
es
xchg
call
aaa
ljmp
sub
xchg
or
dec
sahf
hlt
loope
cmp
add
and
ss
adc
repnz
sbb
outsb
sub
dec
dec
ja
insb
insl
cmp
jns
movsl
lods
popf
cmp
xor
inc
inc
lods
call
and
clc
sahf
out
ljmp
inc
mov
neg
add
fs
je
cmp
and
jge
lcall
insl
mov
push
mov
sahf
pusha
addl
mov
aas
pop
inc
and
lret
push
pop
lret
icebp
xchg
dec
xor
cli
xchg
push
out
xor
shll
mov
and
test
stc
jge
arpl
and
add
cld
mov
lret
mov
daa
sub
adc
adc
pop
sbb
mov
shlb
lods
or
aas
lahf
rorl
lods
inc
sti
xorb
pushf
mov
sbbb
pusha
in
sub
les
xchg
fidivs
or
aas
and
cmpsb
mov
stos
outsl
mov
push
jb
or
ficoml
or
mov
aad
cmp
add
gs
sbb
cmp
adc
das
out
pop
cmpsb
cmp
in
pop
push
std
mov
adc
mov
mov
inc
inc
xor
xlat
sub
lea
ljmp
add
aam
daa
std
lret
push
pop
aam
push
lods
bound
mov
push
mov
insl
push
insb
out
xlat
mov
cmp
in
push
adc
scas
repz
mov
jnp
and
fs
adc
jo
stc
mov
stos
push
pop
pop
shlb
gs
sbb
or
fisubs
movsb
sbb
or
push
sahf
dec
scas
mov
mov
push
popf
lock
loope
jne
dec
jns
cmp
aam
mov
mov
pop
adc
outsb
bound
mov
push
push
fwait
inc
xchg
imul
in
mov
push
jg
pop
inc
mov
sahf
xchg
arpl
dec
cmp
fwait
cmp
pop
mov
adc
mov
repz
and
push
inc
shrb
adc
daa
push
mov
out
int3
adc
bound
int
orb
xchg
xchg
cld
dec
icebp
aas
dec
test
jecxz
add
aaa
sbb
xlat
shl
xorb
inc
mov
jne
jno
push
mov
aad
fcmovnu
das
daa
ljmp
scas
inc
test
adc
adc
sbb
xchg
adcl
repz
cmp
mov
outsl
pushl
hlt
stos
gs
icebp
push
orl
adc
push
mov
push
aad
jl
stos
and
xchg
adc
out
outsb
das
or
movsb
enter
enter
out
cmpsb
outsl
aas
dec
in
aam
jle
cltd
lret
xchg
lock
xor
xor
adc
in
cmp
pop
js
movsb
jbe
push
sub
or
in
or
sub
mov
aad
adc
shlb
sbb
xchg
lea
repz
mov
addb
push
out
dec
mov
pop
out
out
cmp
mov
cmp
fcoml
adc
sub
dec
adc
movsb
in
lds
cmpb
push
in
jne
mov
push
push
jne
fwait
sbbb
or
clc
push
add
pusha
push
mov
sti
icebp
mov
data16
cmp
mov
adc
sub
mov
cmp
mov
stos
repnz
cld
ret
fstp
xor
out
push
cmpsb
sbb
pop
icebp
cld
dec
imul
es
cli
ror
push
add
cmp
lods
stos
repnz
pushf
push
out
movsb
inc
pop
test
jg
cmp
adc
cmp
xlat
cmp
js
adc
in
push
xchg
mov
push
push
xchg
gs
push
mov
mov
and
icebp
jp
xchg
fstl
and
sbb
or
and
fwait
mov
insb
repz
sbb
mov
push
lahf
mov
ds
int3
jle
outsl
fstps
push
push
ret
inc
pushl
add
nop
loop
mov
sbb
fwait
out
inc
es
ror
jns
and
loop
movsl
add
pop
das
into
enter
lods
dec
loopne
inc
jge
js
rcrl
mov
insl
fiadds
das
xchg
int3
mov
pop
xor
mov
pop
test
repnz
pop
popf
loop
jmp
cmp
sub
push
jnp
dec
loopne
pop
mov
sub
pop
iret
rcll
pop
ds
mov
pop
push
inc
mov
pop
cmp
pop
mov
lahf
xchg
out
add
js
cmp
mov
cmp
mov
sbb
repz
adc
jnp
je
pop
es
dec
and
or
push
cltd
lods
cmp
std
mov
loopnew
adc
test
mov
mov
ja
stos
sub
add
inc
lods
pop
sub
arpl
lret
out
std
mov
fstps
in
dec
xor
nop
mov
aam
data16
inc
cmpsb
jmp
dec
inc
adc
nop
inc
mov
lock
arpl
js
cmp
insb
mov
pop
incl
hlt
mov
enter
xor
xchg
cmp
mov
mov
xchg
inc
cwtl
ret
fisttpll
sbb
sti
fldenv
pop
adc
les
loope
add
sub
jmp
jne
mov
push
xchg
adc
mov
jne
out
xchg
cmp
or
call
xchg
fidivrl
mov
rolb
inc
sbb
and
ret
mov
jl
pop
notl
mov
xor
inc
dec
pop
push
mov
push
cmpsl
sub
inc
mov
cwtl
and
aas
jl
jb
add
sti
push
xchg
in
nop
hlt
sbb
js
mov
and
lock
imul
loopne
xor
in
sahf
scas
mov
mov
adc
jbe
mov
stos
add
icebp
or
or
sub
jb
scas
add
imul
js
aas
lock
mov
arpl
ss
leave
pop
stos
xor
jns
data16
add
test
loop
rorl
jl
add
jecxz
mov
pop
pop
maskmovq
notl
xor
nop
sbb
push
mov
shl
xlat
stos
out
sbb
push
nop
test
or
xlat
ret
leave
js
subb
push
xchg
stos
hlt
int
jmp
mov
jle
bound
cmc
mov
jo
insl
sub
mov
jo
loop
sbb
dec
imul
xor
xchg
pushaw
int
dec
jmp
or
mov
add
jnp
pop
lcall
inc
or
push
iret
scas
pop
push
lcall
pop
negb
xchg
in
out
mov
mov
adc
add
sbbb
pop
dec
adc
orb
cmpsb
sbb
cmp
rolb
cmp
fnstsw
dec
pop
loopne
sbb
xor
xor
sbb
lds
sbbl
dec
aaa
mov
rorb
sub
push
popa
pop
push
lock
push
data16
add
cs
lret
fnstenv
pop
sub
lea
jo
or
cmp
xlat
pop
dec
addl
jp
xchg
in
dec
cmpsb
push
ljmp
outsb
movsb
jno,pn
rolb
mov
incl
out
push
mov
ret
jno
idivl
ret
insb
or
inc
mov
aas
rorb
cmc
and
and
mov
push
cmp
pop
aad
sarl
mov
out
pop
cmp
mov
rorb
pop
ror
sub
dec
or
mov
xor
inc
dec
inc
jg
add
cmp
fldt
add
aas
pop
das
loop
repz
xor
loop
jb
mov
in
pop
mov
leave
testl
jno
fmul
mov
test
hlt
dec
jnp
jne
shr
shrb
jne
pop
fcompl
insl
pop
scas
ja
adc
subb
adc
jg
pop
decb
dec
in
mov
js
data16
jns
push
leave
fstl
inc
cwtl
mov
fs
jns
insl
pop
jnp
cmp
cmc
icebp
push
mov
leave
imul
push
push
ja
jo
test
mov
arpl
cmpsb
jmp
add
and
xchg
mov
or
push
cltd
clc
ss
push
outsl
out
push
aaa
push
es
cmpsb
jne
dec
mov
cmpsb
leave
hlt
test
lret
movsb
jno
xor
movsb
mov
fidivs
push
sarl
iret
sub
jae
or
add
dec
out
les
stos
jne
or
std
sbb
lahf
add
std
xor
xor
pop
push
xor
inc
mov
addr16
es
ret
adc
enter
dec
test
lds
insb
jne
lds
punpckhwd
les
jg
xlat
std
sbb
mov
dec
xor
adc
or
idivb
ja
add
sbb
sbb
pop
ljmp
out
cmpsb
xchg
arpl
inc
add
das
pop
test
pushf
andl
xor
sub
adc
jle
mov
insl
enter
or
clc
pop
lret
enter
and
jecxz
idiv
lahf
pop
in
dec
cld
pusha
in
pusha
inc
mov
les
dec
inc
mov
jo
and
int
dec
leave
pop
xor
addl
divl
hlt
pop
adc
cmp
insl
xchg
or
inc
into
push
data16
inc
cmpl
xor
add
pop
icebp
lods
testb
aam
je
adc
or
aad
and
sbbb
jle
imul
dec
shr
sbb
cmpl
sub
push
mov
add
jnp
push
cwtl
sub
push
lcall
fnstenv
mov
movsb
in
es
lcall
lock
xor
insb
aad
in
mov
xor
cltd
sub
stos
xor
out
mov
aad
pop
inc
jl
mov
sbbb
or
fwait
add
pushf
cli
jmp
lods
into
das
neg
and
fisttps
movsb
jg
in
xchg
test
sti
push
clc
jl
in
or
and
and
or
test
pop
ret
mov
dec
sbb
cmp
pop
sbb
lret
popf
fucomi
stos
std
mov
sub
dec
sbb
cmp
pop
sbb
lret
popf
fucomi
stos
std
mov
sub
dec
sbb
cmp
popf
sbb
lret
popf
fucomi
stos
in
mov
cmp
jnp
dec
cmp
cmp
fstpl
lods
jmp
push
daa
lret
popf
lods
lcall
fs
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
dec
imul
dec
jge
add
jp
pop
bound
sbb
cli
in
lret
lea
mov
jnp
dec
jge
or
or
sti
in
lret
std
fisttpl
mov
bound
jge
or
adc
fcomps
in
iret
out
stc
aam
cmp
cmp
insl
cs
add
dec
cli
call
divb
add
xor
cli
loop
imul
or
hlt
aad
jno
push
add
fcmove
popf
in
jnp
arpl
js
add
mov
bound
jmp
sti
std
mov
push
add
mov
test
sub
sub
sahf
cmp
xor
push
fstl
mov
out
fadds
jmp
dec
roll
mov
int3
pop
aad
pusha
xor
mov
xorps
xchg
sahf
mov
sub
xchg
sbb
or
push
mov
imul
pop
or
or
jecxz
sar
ret
popf
mov
sub
or
cmp
push
addr16
sti
sahf
iret
mov
mov
cmp
sub
push
cmp
push
jg
sub
scas
std
fnstcw
clc
mov
sub
jnp
das
sbb
dec
sbb
sbb
jmp
sti
in
lret
std
fisttpl
mov
jnp
dec
jge
or
or
sti
in
lret
std
fisttpl
mov
push
frstor
cmpl
mov
test
inc
or
mov
loop
loope
and
pop
dec
pushf
xchg
gs
xor
pop
fcoms
xor
adc
inc
in
dec
dec
and
loope
or
lret
or
adc
fcom
cmp
jmp
inc
mov
jp
sub
push
stos
jecxz
in
pushf
xor
sbb
outsb
and
sti
cmp
pop
cli
outsb
js
adc
sub
shll
je
lds
mov
cmp
movsb
jp
or
insb
shll
imul
jle
or
mov
and
jmp
fwait
pushf
jge
imul
inc
xchg
cmpb
push
cmp
shrl
mov
bswap
div
pop
cmp
into
repz
xchg
call
fistpll
cmpl
imul
roll
daa
or
mov
lret
push
int
mov
and
inc
dec
shrl
jb
outsb
out
push
mov
cmp
mov
lret
stos
repz
xor
lods
push
lahf
fisttpl
push
add
mov
subl
aas
lea
je
pop
jo
pop
das
xor
adc
cmpl
int3
mov
mov
push
stc
insb
cmp
ret
aam
jmp
sub
lds
sub
shll
or
inc
mov
pop
jae
xchg
std
jg
push
das
dec
pusha
and
loope
dec
add
and
jg
cltd
in
pusha
lret
mov
dec
inc
ss
ret
movsb
cmp
cli
and
add
or
enter
daa
ds
adc
repnz
lcall
test
insb
sbb
push
pop
or
sbb
dec
bound
mov
clc
inc
fnstcw
xor
cld
xchg
insl
mov
push
out
fs
popa
xor
pop
cli
ds
test
xchg
dec
fdivs
mov
pop
cmpsb
jmp
shl
push
add
pop
push
stos
jmp
cmpsl
dec
xchg
dec
dec
cmp
popa
or
jmp
jno
mov
sar
add
jmp
mul
pop
fistpll
sub
xor
mov
or
mov
mov
or
scas
outsb
loope
push
pop
repnz
icebp
and
jp
push
scas
cmp
cs
sti
in
push
dec
and
sbb
adc
dec
out
cmp
aas
loop
sarl
inc
mov
jg
ret
xchg
lahf
mov
clc
in
mov
and
adc
ret
dec
mov
xchg
xor
pop
cmp
imul
out
xchg
fcoml
jbe
xchg
dec
xlat
lcall
pop
xchg
xchg
push
shl
iret
xchg
jne
into
push
cmpsb
ret
pop
je
leave
fildl
cmp
mov
imul
push
sti
cs
popa
nop
adc
mov
dec
pop
sub
xchg
pop
loopne
xchg
push
mov
xor
and
ljmp
insl
xchg
shrb
loopne
enter
dec
mov
pop
rcrl
in
mov
sub
lods
pusha
dec
mov
fnstenv
jns
jne
pop
xchg
push
mov
arpl
dec
sbb
sub
dec
test
inc
aas
mov
cmp
sysexit
movsl
jo
adc
jne
cwtl
cli
sahf
rolb
mov
sbb
repz
mov
cmp
xchg
sti
xor
loope
and
sub
jl
pop
movl
fiadds
jbe
icebp
or
repnz
or
add
lret
lods
mov
jp
xchg
mov
jg
adc
aad
ficoml
fsubrs
sbb
leave
mov
push
test
aam
pop
push
and
mov
fidivl
mov
lods
je
mov
sarl
fldt
sbb
jnp
push
adc
cmc
lods
push
es
shl
push
out
in
lds
sbb
xlat
mov
imul
mov
add
decb
aaa
repnz
mov
mov
call
ret
and
push
adc
movsl
add
inc
dec
fmuls
sub
and
scas
mov
out
add
ret
test
lea
fidivrl
jp
icebp
pop
mov
inc
pop
lods
jno
mov
addr16
mov
adc
fdivrs
jmp
xchg
push
fs
pusha
and
sbb
icebp
xchg
or
push
imulb
mov
push
clc
or
fs
test
das
cmp
xadd
cmpsl
in
aas
inc
cmp
orb
and
push
mov
pop
out
sub
in
sub
sbb
mov
and
adc
loopne
add
dec
rdtsc
ficoml
dec
adc
xchg
rep
clc
scas
mov
sub
adcb
andb
jmp
inc
fildll
sub
outsb
push
lret
mov
inc
and
sbb
cmp
push
push
lcall
mov
arpl
loop
and
lcall
dec
sub
pop
insl
incb
cmc
push
leave
imul
jo
aas
shrd
mov
lods
pop
insl
push
fstpt
outsb
iret
mov
testl
cltd
cmpsl
mov
jle
inc
cmp
fidivs
xchg
jbe
push
lods
xor
add
push
pop
and
dec
and
test
adc
push
push
dec
inc
orl
mov
int
inc
dec
xchg
mov
call
mov
popa
movsl
js
dec
cmc
flds
pop
inc
sahf
insl
imul
mov
push
jnp
xchg
fsub
pop
and
mov
inc
daa
adc
rcll
lods
test
fildl
daa
xor
jno
ret
cmp
sahf
loop
mov
dec
rcl
in
lea
jmp
shrl
rorb
jge
sbb
mov
std
add
mov
mov
lea
mov
mov
mov
jmp
jnp
pop
add
jnp,pn
pop
mov
in
aas
mov
into
pop
pushl
or
fcmovbe
jns
mov
push
jae
sbb
or
insl
jae
sbb
pop
icebp
jle
dec
xor
pushf
cmc
push
out
inc
mov
cmp
cs
fwait
push
das
xor
pop
or
lds
jmp
arpl
test
stos
mov
jns
adc
push
and
or
out
jae
imul
or
xor
or
inc
or
jae
loopne
sub
xchg
jb
cmp
nop
dec
iret
jmp
mov
pop
mov
sbb
lock
ret
sbb
sub
loope
dec
pop
movsl
gs
lock
xor
loope
movsl
jmp
sbb
in
mov
cwtl
lea
push
cmp
pop
fdivrs
lahf
cli
pop
mov
cmc
nop
mov
mov
jo
xor
and
out
mov
cmp
jae
pop
call
cmp
adc
jbe
rolb
shrb
fildl
jmp
enter
stc
leave
je
aas
push
pop
jg
jecxz
fwait
pop
jl
mov
ljmp
insl
dec
jno
test
sbb
inc
sub
jmp
pop
cltd
or
jp
adc
bound
pop
mov
mov
mov
mov
stos
mov
addr16
cmovs
idivb
in
mov
jb
lcall
jecxz
adc
das
out
stos
mov
in
and
inc
push
cmp
iret
cmp
xchg
jmp
pop
and
fucomip
inc
insl
mov
xchg
fwait
xchg
stos
into
sbb
outsb
mov
xchg
sti
or
add
popa
sbb
out
cmp
es
add
cwtl
fwait
mov
adc
push
mov
mov
push
fsubs
loopne
fisubl
or
inc
icebp
cmpsl
dec
dec
fs
push
jecxz
fsubrs
cwtl
sub
daa
mov
ja
imul
pushf
mov
or
push
xchg
js
pop
pop
push
insb
insb
xor
cmp
jb
adc
stos
outsl
xor
cmp
scas
outsb
sub
lahf
repz
inc
icebp
adc
test
aas
dec
mov
and
in
fbld
and
daa
rorl
data16
and
jge
sbb
outsl
stos
clc
xchg
cmp
nop
adc
loope
daa
test
sti
into
cmp
inc
lahf
lret
rorl
jbe
sub
jbe
and
stos
repz
and
mov
fnstsw
sbbb
or
add
push
or
roll
add
lret
and
pop
clc
lret
jp
shlb
cmp
sarl
imul
jno
cltd
cwtl
sti
pop
xchg
pop
xchg
push
popa
jnp
mov
push
xor
dec
movl
out
shl
xlat
mov
imul
mov
into
je
xchg
push
jbe
repz
xchg
xchg
dec
mov
mov
jecxz
cli
sarl
mov
shld
pop
jl
data16
add
jle
stos
xor
inc
mov
test
add
or
scas
cmc
add
xchg
xor
lods
popf
xor
push
test
cmp
cmpsl
pop
and
movsl
cltd
das
negb
addr16
pop
loopne
sub
cltd
sbb
mull
fmul
jne
xchg
or
jge
scas
les
int
iret
jg
jae
and
jmp
cmp
sub
or
cmp
in
lds
movsb
xchg
cmc
les
adc
test
loope
inc
pop
push
or
fbstp
out
aad
jp
cs
into
sarl
and
movsl
mov
fadd
fstpl
icebp
add
and
popf
in
or
inc
addl
cmp
xchg
into
sub
xchg
aaa
xchg
mov
int
or
sub
repnz
xor
test
inc
bound
mov
das
out
inc
adc
sbb
sub
sbb
out
mov
mov
aas
push
mov
sbb
inc
lret
dec
in
adc
fistl
je
ficoml
cwtl
outsl
mov
loop
lahf
mov
loope
jnp
dec
fs
mov
iret
out
mov
cmp
xchg
push
int3
outsb
add
jno
data16
outsb
jne
jb
lret
gs
and
and
and
bound
arpl
daa
shlb
cmpxchg
jle
sahf
cld
cli
test
cmc
ret
fsubrl
mov
and
cmpb
mov
mov
jne
xchg
daa
outsl
stos
ret
pop
aas
or
pop
popf
add
jae
inc
push
dec
sub
inc
sbb
popl
ror
add
insl
mov
sub
ret
or
add
xchg
mov
je
xchg
push
mov
mov
jne
xchg
lds
xchg
push
jg
push
push
jecxz
ja
insl
pop
outsl
push
pop
push
sub
scas
inc
mov
xchg
mov
and
inc
push
out
sub
xchg
push
es
mov
mov
and
out
dec
dec
inc
xchg
jle
pop
hlt
inc
push
inc
aam
inc
push
lea
bound
fwait
sbb
pop
xor
inc
enter
pop
mov
pop
sahf
ret
pop
adc
loop
add
jnp
loope
pop
outsl
xorl
push
fildll
mov
out
pop
aas
mov
inc
decb
cwtl
xchg
cli
add
xchg
adc
add
andb
mov
jp
jg
test
sub
pop
pusha
mov
sbbl
inc
sub
rolb
arpl
add
cmpsb
scas
fwait
xor
inc
movsb
nop
jbe
loopne
xchg
out
cmp
gs
cmp
dec
shrb
jecxz
and
mov
scas
filds
xchg
pop
repnz
aaa
je
cmp
and
fsubs
cmp
inc
mov
insb
push
fstpl
add
icebp
dec
add
add
arpl
movsb
cmp
jae
mov
sub
insb
in
mov
xor
jnp
lret
lods
mov
mov
scas
sbb
aaa
test
push
fcmovnb
addl
push
inc
aad
bnd
shrl
stos
lds
xchg
add
shlb
push
test
mov
arpl
xor
dec
mov
in
sub
and
insl
jnp
nop
pusha
push
or
push
mov
call
cwtl
cmp
ds
arpl
outsl
jnp
fmul
push
inc
jae
cmp
aad
dec
decb
add
pop
lret
test
inc
push
add
dec
out
xchg
lds
jecxz
cmp
lds
sub
push
dec
movsl
sub
es
mov
inc
out
jae
in
leave
pop
mov
movd
loope
lock
into
cmp
loope
sahf
fldt
fildl
fs
adc
adc
cmp
repz
in
and
dec
imul
pop
cmp
push
call
push
add
imul
jp
mov
movb
jne
jno
cmp
repz
ss
inc
or
mov
outsl
hlt
cld
lret
dec
and
es
and
mov
push
inc
push
mov
xchg
or
xchg
push
nop
cmp
addr16
xchg
rcr
fcompl
xor
pop
or
cmp
adc
push
xchg
test
outsb
xor
adc
pop
dec
gs
jb
jle
adc
jl
fsubl
mov
mov
lds
mov
cmp
adc
push
inc
enter
outsl
dec
jbe
xchg
aad
daa
cmpsl
lret
xchg
jp
sti
xchg
sub
mov
aas
add
xchg
inc
out
fwait
or
ret
mov
cmp
in
pop
dec
push
in
pop
ret
adc
imul
push
xchg
ds
jnp
pop
stos
sub
xchg
sbb
test
cltd
xchg
sar
in
cwtl
leave
in
add
jl
mov
push
shrb
out
out
je
xor
mov
stos
xor
sbb
mov
stc
push
aam
xor
dec
stos
aaa
cmp
push
pop
in
mov
ja
inc
push
xchg
lcall
les
jle
lods
loope
sub
loope
mov
pop
jge
cmp
ds
push
mov
mov
repnz
xor
icebp
jno
and
or
xchg
repz
dec
cmp
fimull
push
ja
data16
and
out
lock
or
and
in
cmp
mov
imul
dec
jp
in
ds
ljmp
mov
jae
aaa
fwait
push
pop
mov
hlt
nop
jno
pop
pop
xchg
cld
icebp
mov
xor
cwtl
leave
jns
int
inc
jmp
mov
mov
add
or
icebp
mov
addr16
adc
inc
or
sbb
adc
aam
lret
or
daa
mov
sub
int3
ss
pop
test
mov
xchg
std
stos
mov
mov
fisubs
mov
cltd
sbb
popf
into
adc
add
js
push
jne
cmpsb
xchg
dec
xchg
dec
cmpsb
xor
movsl
add
fstps
pop
stos
pushf
mov
adc
xor
out
sbb
pop
bound
dec
call
mov
int3
mov
push
adc
inc
ds
xor
out
je
xchg
inc
pushf
pop
lret
daa
test
divl
insb
call
popa
sbb
or
mov
push
jl
hlt
mov
inc
ss
mov
es
and
aad
xchg
in
dec
loop
test
sti
cmpb
sbb
imul
and
test
popa
push
cwtl
stc
ret
and
dec
xor
cmp
les
loop
in
push
add
data16
push
cmp
enter
test
enter
stos
sarb
aad
int
mov
imull
mov
xchg
jl
or
fbstp
andb
adc
in
and
adc
push
push
push
add
mov
pushf
jle
pushf
sbb
fstl
mov
call
cld
xchg
push
sbb
lods
jecxz
addr16
xchg
adc
sarb
clc
fbstp
shll
dec
fmuls
aad
out
es
adc
repz
cs
jp
test
pop
lcall
adc
ds
out
jg
cmp
loop
dec
push
cmp
js
addr16
pop
mov
jns
ss
jmp
stos
or
movsb
lret
xchg
sti
popf
fcmovnu
not
loope
xchg
outsl
fildll
mov
lods
adc
outsb
pop
jp
xchg
and
sbb
js
and
stos
adc
push
pop
mov
pushf
pop
in
rolb
stos
int3
push
inc
loopne
jecxz
mov
test
lret
push
cmp
or
aam
iret
mov
das
xchg
js
sbb
push
icebp
pop
sbb
mov
sbb
loope
inc
xor
test
js
mov
xchg
push
hlt
mov
push
das
icebp
inc
jne
sarl
lea
jns
xor
movsb
into
adc
inc
int
aaa
and
mov
sbb
add
xchg
cmp
cmp
mov
stos
mov
sub
cmc
or
fwait
mov
jecxz
loopne
xor
inc
mov
int
mov
cld
jmp
shlb
int3
outsl
xchg
out
adc
popa
imul
std
inc
sbb
push
mov
js
pop
push
sub
xor
pop
sub
stos
push
sahf
cli
ret
push
push
scas
shlb
mov
icebp
sbb
inc
cmpsl
mov
dec
xchg
or
shrb
mov
divb
int3
loope
mov
out
inc
les
inc
out
cs
sub
or
cld
mov
push
jns
stos
pusha
push
jmp
mov
xchg
push
cwtl
fcoms
insb
fwait
and
xchg
dec
mov
andb
outsb
adc
jo
mov
and
in
mov
ret
in
shll
xchg
loopne
and
lds
or
fimull
push
jo
insb
mov
push
xchg
jo
pop
lcall
cmp
sub
jp
mov
or
fnsave
in
sbb
mov
data16
and
rorb
sub
pop
ds
jns
sub
int
sarl
push
dec
clc
pop
loop
sub
fdivs
test
ljmp
gs
in
inc
mov
out
aas
and
cli
sbb
xchg
loop
shlb
mov
cld
mov
lods
add
pop
or
cmp
cmp
jp
les
jnp
call
sub
imul
idiv
jnp
ja
push
mov
aad
cmp
mov
popf
jo
dec
xor
sar
adcb
aas
sub
daa
add
xor
jge
jne
jle
ljmp
push
popf
jb
nop
xor
push
or
mov
in
push
add
xor
inc
js
sbb
inc
test
jns
cmpsl
dec
jge
xor
test
add
cmp
mov
out
adc
in
outsl
out
ja
movsl
mov
sub
leave
adc
decl
sub
fdivs
pop
mov
add
rol
pop
mov
ds
or
stos
scas
mov
lods
stos
sti
test
repnz
int
andl
push
sub
sub
test
ret
xor
ljmp
test
fiaddl
cmp
push
sarl
mov
xchg
loope
dec
mov
sub
sbb
mov
sub
cltd
lret
xchg
xor
lds
push
sub
cmp
push
rcl
test
iret
mov
in
or
mov
addb
xchg
ret
cs
mov
mov
mov
add
iret
xor
mov
xchg
adc
les
xchg
es
add
bound
push
mov
fmuls
sub
adcb
sbb
or
mov
cltd
pop
adc
jp
jbe
dec
aas
cmp
mov
fdivl
ds
rolb
mov
inc
insb
mov
insb
xor
push
xchg
int
in
and
lock
rcr
jmp
mov
movsl
cmp
sub
push
mov
fsts
mov
push
and
xorb
and
or
loope,pn
ds
aad
pop
pop
xor
add
mov
sbb
negb
lahf
jae
jecxz
fists
add
test
inc
insb
addl
popf
aas
ljmp
test
add
pop
fcoml
imulb
loop
cmpsl
fisubs
push
mov
push
cmp
pop
rolb
outsb
lcall
lock
jnp
dec
jge
or
or
sti
in
lret
std
fisttpl
mov
jnp
dec
jge
or
or
sti
in
lret
std
fisttpl
mov
jnp
dec
jge
or
or
sti
in
lret
cld
fisttps
mov
jg
dec
jge
or
or
push
inc
lret
std
lods
cli
and
in
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
