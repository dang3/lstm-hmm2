inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
je
insb
add
add
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
arpl
add
jae
stos
inc
mov
xlat
loop
jnp
xchg
add
push
add
pop
push
mov
pop
add
ret
add
add
add
pop
add
add
fiadds
loopne
ret
add
add
add
add
add
add
add
add
sub
ret
add
mov
pop
add
push
pusha
add
js
add
adc
or
ret
add
add
add
add
add
pop
add
add
add
out
add
sub
ret
add
add
adc
ret
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
xor
sub
js
dec
add
add
or
ret
add
add
sub
cmpsl
push
dec
add
xor
add
add
add
add
add
and
lea
dec
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
ret
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xlat
add
add
add
push
add
add
xchg
pop
add
int
nop
add
add
add
add
add
add
add
add
pop
add
add
mov
lret
add
add
add
add
add
add
stos
add
add
add
add
add
add
pop
add
popl
sbb
sub
dec
add
movsb
add
add
add
add
add
add
stos
add
add
add
add
add
fadds
jno
nop
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
push
add
add
add
add
ret
add
add
add
ret
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
mov
ret
add
rolb
add
add
dec
add
pop
add
add
add
add
add
add
add
or
add
inc
add
inc
add
add
add
sbb
or
pop
add
add
add
add
pop
add
cmp
inc
add
add
add
pop
add
add
add
add
add
add
add
inc
add
add
jno
sub
jb
sbb
or
dec
add
pop
add
add
add
sbb
add
add
add
dec
add
add
add
add
add
add
pop
add
add
add
ret
add
add
fiaddl
test
pop
add
add
add
add
add
add
add
add
add
xor
pop
add
ret
add
add
out
ret
add
dec
add
add
add
pop
add
js
sub
ret
add
add
int
lea
push
add
add
add
lret
add
pop
add
add
add
add
add
out
imul
addb
add
add
add
add
xor
lret
add
add
pushf
stc
adc
lods
fsubrl
dec
sub
mov
jbe
mov
xor
test
push
int
or
test
jl
xor
ss
push
lahf
adc
mov
cltd
cld
popa
int
and
lahf
fmuls
loopne
cmp
and
movsb
cmpsb
mov
inc
xchg
arpl
jae
stos
sub
data16
shr
adc
flds
enter
es
int3
lret
icebp
and
and
sub
sub
int
andb
adc
push
int3
mov
ret
es
push
jge
or
mov
push
pop
int3
movsb
lds
pop
js
sub
sub
lret
std
imul
ljmp
push
sbb
lcall
xlat
clc
push
inc
ss
mov
or
sub
in
adc
cmp
das
jecxz
and
jp
mov
cmp
sub
scas
fisubs
leave
pcmpeqb
fistpl
loopne
push
cli
push
pop
push
bound
aam
pop
leave
aam
out
std
mov
jmp
mov
sbb
mov
inc
idiv
sbb
or
into
test
pop
pusha
stc
cltd
and
xchg
adc
movsl
stos
sti
dec
test
sbb
push
ret
and
shl
xor
aam
adc
add
cmp
es
mov
test
mov
and
addr16
mov
add
push
sub
icebp
mov
mov
xor
in
mov
push
push
aad
testb
pop
jns
or
test
adc
ret
jno
les
push
inc
stos
mov
mov
arpl
pop
mov
in
push
dec
mov
lcall
adc
jae
inc
jg
sbb
fcmovne
loop
jle
mov
inc
shl
movsl
adc
and
mov
or
cmp
push
jp
jne
aad
mov
mov
in
pop
push
fsub
and
ficomps
subb
jne
dec
push
push
jne
jp
fcomps
sbb
sub
jmp
inc
lock
stos
xorl
jmp
xor
lods
jo
imul
jmp
cmp
add
into
das
test
inc
pop
sti
sbb
les
mov
mov
or
sub
aas
repnz
nop
sub
rorl
rol
jnp
sub
mov
jge
xlat
rclb
pop
fisttpl
cmc
sbb
mov
jb
mov
mov
insl
xlat
dec
adc
lock
ljmp
loope
pop
mov
movsb
or
mov
sub
mov
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
push
call
mov
movb
mov
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
mov
std
mov
dec
pushf
xchg
cmp
sub
jge
insl
js
push
dec
sub
test
cwtl
std
mov
clc
popf
call
enter
dec
sbb
js
pop
or
mov
std
nop
in
loope
lock
sarb
outsb
inc
sbb
js
pop
push
add
pop
pop
rcll
decb
sbb
shll
jo
imul
fstl
loopne
xor
rorb
pop
daa
mov
xor
sub
mov
inc
int
or
cmp
insb
inc
push
data16
pop
xlat
dec
and
xchg
js
xchg
xor
dec
loope
push
mov
mov
daa
mov
dec
mov
sub
xchg
dec
sub
adc
push
lock
mov
clc
insl
orb
cmpsl
push
pop
int
test
filds
in
shr
push
sub
shlb
movsl
dec
or
cmp
cmp
mov
cwtl
std
mov
out
popf
clc
fdivrs
xor
jge
insl
pusha
sbb
dec
imul
int
std
mov
mov
xchg
fmul
fnstcw
sub
insb
sbb
sub
dec
xlat
mov
mov
xchg
fsubrp
enter
cmpl
aas
sbb
dec
aas
js
add
fstpl
xchg
mov
call
lods
cmp
dec
sbb
insl
js
push
sub
cwtl
std
mov
clc
popf
call
lods
cmp
dec
sbb
insl
js
push
sub
daa
xchg
sti
sub
icebp
push
lock
addb
cmc
inc
mov
cmpb
mov
sbb
cltd
cmc
imul
repnz
pop
dec
push
sub
cld
push
push
pop
inc
adc
dec
and
sbb
jle
je
mov
jl
clc
add
in
stos
std
arpl
fwait
jo
xor
push
jp
or
push
mov
testl
push
mov
mov
adc
mov
lea
cld
dec
inc
jle
xor
or
and
out
push
push
xor
inc
push
fmull
dec
jg
adc
lcall
or
bnd
cmc
dec
ljmp
in
fs
xchg
xchg
sbb
sub
stos
rorb
jl
mov
cmp
mov
sbb
inc
jo
bnd
cli
xor
ret
sbb
mov
cltd
or
cmc
addb
test
adc
mov
dec
push
loop
outsb
int3
aad
add
sub
mov
xchg
xor
push
pusha
mov
ret
push
dec
adc
xchg
jge
test
xor
sbb
movsb
leave
mov
sub
pop
pop
pop
scas
xor
and
movsl
push
pshufw
push
cmp
cmp
xchg
add
cmc
nop
stos
imul
add
test
cwtl
xchg
test
or
push
pop
popf
lods
incb
xchg
sub
xchg
and
mov
adc
inc
data16
leave
cmp
push
lock
ljmp
ret
inc
xchg
in
mov
jae
mov
sbb
aad
icebp
arpl
insb
inc
stos
jmp
cs
ret
lret
xchg
jno
inc
mov
jnp
roll
xchg
test
loop,pn
dec
xchg
dec
fwait
adc
mov
xchg
stos
test
test
add
pop
jecxz
adc
lret
rolb
dec
lock
cmp
inc
add
cmp
add
xor
push
insb
idivb
sarl
insl
dec
lret
pop
fisubrl
sub
xchg
mov
cmc
inc
inc
jbe
lahf
or
inc
lret
loope
int3
push
loop
mov
ljmp
xchg
addr16
outsb
hlt
rclb
mov
mov
xchg
pop
aam
mov
xchg
cmc
push
fmuls
mov
bound
stos
cmp
in
add
jle
sub
jge
test
cmpsl
inc
mov
cli
jl
rclb
and
sub
add
insb
data16
cmc
bound
stos
inc
gs
ljmp
gs
or
lods
sbb
push
add
lock
jne
arpl
mov
je
rclb
pop
fscale
fnstsw
clc
jg
push
dec
xor
jae
mov
scas
mulb
add
test
lret
ret
popa
repnz
je
jl
mov
push
jae
mov
push
cwtl
xchg
imul
jne
mov
pushf
std
loop
pop
ds
out
pop
movsl
call
outsb
adc
clc
loope
lods
std
sahf
iret
popf
test
sbb
ret
mov
dec
movsb
fwait
push
sub
rol
cmp
adc
pop
and
dec
sub
sub
lahf
mov
cmp
pop
adc
adc
sti
cs
pop
xor
insb
mov
repz
es
outsb
pop
gs
loopne
xor
and
push
or
pop
and
sub
xor
fistps
lea
mov
jno
addb
push
std
mov
and
or
mov
test
std
out
and
or
pop
in
mov
jg
icebp
add
jb
mov
jmp
jmp
aas
mov
cmp
insl
loope
cmpsb
stos
mov
push
add
ror
cmpsl
jg
dec
adc
rolb
mov
lds
cmc
pop
push
ret
sub
mov
bsf
and
js
xor
mov
rclb
pop
mov
in
mov
xor
scas
andl
or
pop
push
cmp
movsl
lret
xchg
jmp
mov
pop
cwtl
les
xor
mov
test
mov
test
imul
or
add
xor
cli
mov
add
and
test
negb
lock
ss
and
jp
mov
xor
add
scas
pop
mov
inc
push
inc
not
cmp
mov
insl
sti
lods
daa
push
clc
sub
pusha
sti
cmpsb
mov
test
sbb
int
aad
xor
mov
mov
ljmp
lahf
or
xchg
popf
std
shlb
push
push
scas
adc
out
sub
dec
jae
push
and
mov
das
arpl
xor
test
loope
mov
dec
lcall
mov
sbb
add
or
subb
mov
or
push
pop
flds
stc
icebp
cli
mov
mov
insb
test
sti
pop
sbb
mov
lea
imul
fidivrs
cmpsb
xchg
out
lret
pusha
mov
add
rcl
cmc
pusha
int
cmp
xor
aaa
xor
pop
sbb
idivb
mov
dec
cmp
cltd
icebp
cs
pop
clc
add
push
in
push
inc
mov
les
or
cmp
popa
push
pop
loopne
push
sub
cmp
inc
mov
lods
enter
fcomi
je
pushf
loope
stos
andl
repnz
fcomps
outsb
inc
mov
cwtl
mov
popa
adc
xchg
fidivrs
sti
enter
pop
int3
subl
out
mov
sbb
xchg
fmull
cmp
mov
dec
iret
pop
or
mov
xor
sub
mov
xor
cmpl
inc
push
cmp
lret
fildll
cmpb
xchg
orb
xchg
adc
ljmp
cltd
in
clc
push
pushf
mov
sub
fwait
jmp
pop
xchg
aam
mov
xor
fimuls
jb
push
sti
addl
sarb
sbb
stc
jecxz
dec
mov
roll
or
js
xor
cmp
stos
lea
cmp
jae
fldl
sahf
or
pop
das
push
add
fstps
adcl
push
pop
mov
jo
cltd
mov
mov
int
mov
js
test
popf
add
add
xchg
clc
xchg
add
cmp
pop
in
xchg
mov
pop
pop
add
dec
into
xchg
stc
insl
sub
dec
test
insb
push
push
jnp
mov
xchg
cmp
sahf
in
in
push
aaa
sbb
testl
xchg
dec
jl
push
cmpl
xchg
pop
or
xchg
loop
or
dec
lock
sub
mov
int3
popf
xchg
push
sbb
js
mov
fs
test
inc
or
and
ds
outsb
aad
dec
stos
cld
inc
outsb
fldenv
rclb
cmp
pop
fdivp
xor
jecxz
loopne
pop
mov
fnstcw
mov
mov
jno
cld
sbb
or
jnp
std
cmp
outsl
lret
negb
push
dec
popa
jno
popf
scas
aaa
or
imul
inc
adcb
fidivrl
xchg
test
std
jne
inc
xchg
mov
xor
ja
xchg
gs
ficoml
jg
aad
rcl
pop
mov
insl
loop
push
jnp
pop
fst
xchg
sti
aam
adc
lods
cmpsb
mov
jge
stos
pop
sti
inc
mov
pusha
sbbl
adc
xor
addl
sub
or
enter
dec
dec
push
cld
loope
subl
aaa
jecxz
jne
das
notl
mov
das
xchg
mov
mov
pop
pop
gs
dec
mull
jecxz
pop
popa
aaa
xlat
jae
sub
daa
inc
stos
cwtl
dec
cmpsl
xlat
dec
xor
outsb
and
xchg
mov
and
cmc
loopne
or
shl
out
sbb
cmp
inc
push
inc
jle
lahf
je
lea
pop
add
iret
je
pop
or
or
fadd
mov
cld
mov
in
inc
ja
inc
frstor
cmp
jmp
jbe
shlb
int3
loope
cmp
jno
data16
orb
and
jbe
insb
jle
test
and
int3
mov
xchg
dec
xor
sbb
mov
data16
jl
xor
xchg
cmp
push
ret
repnz
mov
add
xchg
dec
fildll
scas
repz
pop
inc
aas
lods
stc
mov
sbbl
rcrb
dec
jecxz
pop
push
inc
and
mov
dec
sbb
jle
mov
jo
sbb
cmp
repz
shl
jno
cli
das
and
adc
test
pop
outsl
jb
shl
movsl
ret
mov
pop
pusha
mov
idiv
add
pusha
cltd
nop
xor
mov
or
pop
dec
mull
negl
mov
pop
xchg
shlb
sbb
inc
xor
mov
sub
cli
idivb
notl
push
outsl
and
pop
jecxz
aas
inc
sub
push
inc
cmp
stos
sti
jnp
sarb
nop
sbb
inc
inc
jae
outsb
ret
jge
push
dec
stc
fsubrl
mov
movsb
aaa
dec
mov
sub
ja
pop
mov
enter
cmp
mov
jno
pop
outsb
push
cmp
fs
insl
push
in
insb
and
faddl
inc
mov
mov
test
dec
fistpl
icebp
mov
cs
jne
outsl
push
mov
dec
xor
dec
fwait
imul
lods
cmp
pop
xchg
inc
clc
xor
or
imul
inc
inc
jo
cmp
orl
mov
push
xor
ja
pusha
sbb
aad
mov
popf
push
or
mov
rcrl
imul
mov
xchg
in
mov
add
sub
and
cld
xchg
negb
jbe
adc
and
mov
mov
add
pop
xchg
mov
or
jecxz
shrb
pusha
pop
jnp
ljmp
repz
aaa
sbb
dec
jle
es
or
mov
mov
mov
pop
jge
fwait
push
insl
lea
push
fdivrp
dec
fidivrs
adc
xor
inc
pop
and
mov
mov
add
enter
bound
sbb
lcall
stc
jae
fmull
xchg
or
imul
leave
sub
mov
fwait
jae
test
pop
push
lret
and
call
lods
or
xor
xor
dec
cltd
lahf
mov
sti
ljmp
inc
mov
or
push
mov
ja
add
or
dec
pop
fdivp
jmp
push
in
push
stos
arpl
insb
in
cld
push
out
or
inc
mov
dec
or
fidivl
jno
push
push
call
jnp
ret
mov
push
xor
add
ljmp
shlb
mull
mov
jb
pop
test
aas
fdivs
pop
fs
clc
push
dec
sbb
ds
lods
push
pop
jo
in
adc
mov
in
mov
jnp
out
xchg
pop
pop
xchg
mov
fstp
mov
rorb
dec
ss
je
xchg
stos
popf
mov
cmp
mov
cmp
std
cmp
insb
xchg
cmp
jecxz
xchg
sahf
mov
das
xchg
les
cli
adc
add
rorb
sbb
clc
push
cmp
jl
mov
xor
push
inc
insl
push
dec
cmc
pop
jmp
insb
pop
sbb
inc
int3
lods
pushf
out
mov
dec
mov
fcoms
jbe
jmp
jno
lods
lea
repz
iret
scas
hlt
leave
add
leave
jle
icebp
mov
pxor
cltd
sbb
addr16
dec
and
push
repz
loope
ret
sub
outsl
in
scas
arpl
xor
addr16
rcrb
adc
and
mov
sub
cmp
dec
fnsave
aaa
mov
mov
orb
sbb
cmp
into
jnp
sbb
cmp
sub
dec
pop
sbb
sti
sub
jbe
cld
les
jmp
cmp
arpl
lods
outsl
mov
stc
hlt
pusha
addr16
adc
dec
test
push
insb
stos
sahf
jae
cmc
pop
or
jo
push
aas
inc
in
stc
icebp
inc
iret
enter
jno
test
mov
stos
sub
push
inc
scas
outsl
sbb
fiaddl
fsts
pop
xchg
dec
ror
sbb
pushf
dec
xchg
stc
jp
adc
imul
lcall
push
adc
fidivs
clc
int
mov
fsubl
mov
cmp
sbb
push
roll
stc
xlat
mov
mov
push
xor
mov
xchg
into
lea
push
cltd
movsb
xor
pushf
stc
xchg
xchg
mov
shlb
adc
jge
test
int
out
decb
pusha
and
fisubrl
dec
in
mov
aam
push
subl
fsub
xchg
stos
outsb
ret
int3
or
das
mov
test
xchg
fbld
jb
sbb
stc
xchg
cltd
repz
cltd
outsb
movsb
jmp
cmp
test
pop
xor
rep
sahf
jno
outsl
loope
addr16
movsb
sub
lods
cmp
test
mov
push
dec
pop
enter
pop
divb
popf
out
and
daa
mov
pop
insl
or
cmp
dec
out
inc
mov
xchg
mov
rorb
pop
ret
mov
mov
out
inc
mov
adc
xchg
dec
jp
lret
cli
jmp
xor
int3
sub
xchg
je
mov
add
inc
and
mov
shll
ret
loopne
stos
pusha
xchg
push
xor
loopne
lcall
mov
movsb
stos
sbb
enter
ds
negl
and
shl
loop
shlb
sub
idivl
insl
fiaddl
movsb
pop
test
and
cmp
outsb
jnp
dec
sahf
mov
in
incl
into
jge
or
test
cli
imul
sub
dec
imul
ja
add
jmp
xchg
aas
ljmp
lods
xchg
scas
je
bound
daa
adc
mov
movsl
mov
in
andl
test
jae
ds
jp
mov
push
push
popa
int3
push
andl
jno
dec
inc
mov
and
inc
xchg
cmpsl
dec
xchg
cltd
mov
pop
push
stos
cli
pop
shl
fists
ret
dec
lcall
mov
je
loop
es
xchg
fldt
xchg
dec
inc
inc
test
xchg
mov
sti
clc
mov
stos
xchg
test
xchg
adc
mov
ljmp
pop
mov
pop
xor
mov
cmpsb
sbb
xlat
inc
jl
sbb
xchg
xchg
sbb
or
cmp
mov
es
in
xchg
dec
fs
pop
or
cmp
idivb
dec
insl
sahf
dec
rcrl
pop
lea
fstpt
data16
repz
outsb
std
arpl
stos
mov
outsl
sbb
and
movsl
aad
inc
aaa
mov
popf
call
ljmp
jmp
cmp
call
mov
push
shrl
cmp
push
in
testb
cltd
negl
push
push
push
adc
adc
sbb
cmp
dec
sarl
in
orb
pop
mov
mov
insb
jge
mov
push
xchg
mov
jp
hlt
sbb
aad
mov
fsubrs
push
call
xchg
and
or
stos
sub
movsl
shlb
sub
movb
mov
xchg
mov
sbb
inc
mov
or
cltd
out
xor
xor
pop
adc
dec
pop
sbb
dec
jno
test
stc
xchg
fs
inc
cli
into
push
xor
adc
lea
mov
xor
fs
in
notl
xor
dec
jp
push
add
ds
aas
rolb
push
jle
movsl
dec
jge
addr16
mov
sbb
cmp
arpl
scas
pop
jmp
hlt
movl
js
mov
cmp
push
je
push
ljmp
add
stos
ljmp
sahf
sub
push
stc
jb
xor
test
test
insb
adc
push
inc
jns
andl
xlat
popa
hlt
xchg
mov
push
xchg
mov
inc
sub
inc
jne
xor
sahf
lods
imul
into
leave
enter
xchg
cmpsl
fidivl
popa
pop
jo
mov
mov
inc
mov
xor
sub
pop
sbb
mov
arpl
cld
inc
add
dec
inc
pop
lock
cli
mov
js
cmp
dec
adc
das
mov
sahf
lcall
lods
mov
rclb
inc
pop
jge
fwait
gs
aad
ljmp
dec
mov
push
mov
xchg
addb
adc
test
sub
ret
cwtl
int3
xchg
xor
or
test
xchg
mov
ja
ds
mov
dec
mov
icebp
ds
bound
stos
jge
cmpl
push
push
pop
cmp
jg
jns
dec
sub
dec
xlat
aam
jns
sbbl
xor
cwtl
inc
daa
fistps
js
pop
sbbb
lea
xor
pop
jno
or
inc
push
sub
das
test
hlt
mov
mov
jge
push
ret
lods
push
jne
imul
int3
sbb
mov
push
nop
test
jg
decb
cmp
cmc
rcrb
cltd
pop
dec
sbb
sub
push
dec
jb
add
xchg
dec
mov
mov
cmp
pusha
pop
ja
cld
mov
fstpl
mov
ljmp
lock
mov
movsb
arpl
mov
sub
fchs
mov
sarl
dec
jno
ficoml
or
lods
fmulp
xchg
inc
mov
lods
add
adc
stc
jns
dec
fcoms
fs
js
clc
xor
stc
pop
lods
pandn
jl
mov
inc
xchg
sbb
push
pop
and
clc
ljmp
rol
fistl
jae
cmp
mov
cmpl
ss
ficoms
mov
pop
lahf
jg
test
jmp
jo
cmp
dec
inc
es
and
out
test
sbb
mov
or
and
lahf
push
es
sbb
add
test
outsl
mov
push
or
daa
sbb
mov
popf
adc
fdivl
lods
jae
add
push
lret
divl
cld
jmp
shlb
notb
pop
out
add
and
repz
cs
fisttpl
outsl
sti
mov
mov
je
imul
xlat
dec
push
and
lret
lds
pop
dec
and
jns
pop
xor
cmp
jg
push
ja
imul
sub
pop
adc
bound
lods
and
mov
stos
jbe
adcl
pushf
cmpb
xor
jl
lods
cmp
mov
dec
jg
mov
and
push
arpl
add
cmp
pushf
add
int3
hlt
sbb
roll
inc
xor
and
and
lods
or
fdivs
fadd
inc
in
cltd
jmp
test
push
add
mov
push
push
inc
fidivrs
xchg
lds
imul
mov
dec
push
push
movsb
mov
pop
push
test
adc
pop
outsl
call
xchg
sti
inc
cmpsl
xor
sub
test
jl
push
imul
dec
clc
jmp
cmpsb
and
push
into
mov
adc
mov
adc
lds
inc
xchg
mov
mov
imul
cmp
cwtl
movsl
adc
sub
jae
lods
test
lret
flds
adc
sub
sbb
and
inc
lret
loop
or
xchg
adc
lock
mov
push
add
xor
sub
jns
jecxz
in
incb
stos
test
sti
mov
fdecstp
add
pop
inc
ds
inc
sbb
cmpsl
xor
push
or
pop
int3
pop
add
std
pop
dec
mov
aad
aam
jecxz
addl
std
mov
lock
cld
shlb
dec
mov
adc
test
sbb
data16
iret
sub
push
lahf
pop
bound
enter
inc
std
cmp
adc
fninit
loop
aaa
and
mov
js
xor
dec
mov
out
dec
popl
mov
mov
pusha
leave
adc
cld
xlat
sbb
sub
push
and
aad
pushf
jge
add
xor
icebp
je
cmc
adc
aaa
jnp
cmp
out
sarb
mov
push
andl
sbb
push
jno
sbb
cmc
or
std
mov
clc
popf
call
lods
cmp
dec
sbb
insl
js
push
sub
cwtl
std
mov
clc
popf
call
lods
cmp
dec
sbb
insl
js
push
sub
cwtl
std
mov
clc
popf
call
lods
cmp
dec
sbb
insl
js
imul
cltd
std
mov
cli
popf
call
insl
pop
xlat
out
jge
sbb
xchg
loopne
cmpsl
ret
sub
jo
add
sub
pusha
insl
je
fs
shlb
loop
xchg
rolb
bound
inc
adc
pusha
and
inc
add
mov
add
xchg
rolb
dec
lcall
or
mov
mov
popf
mov
xchg
loope
jmp
add
push
push
sub
cmp
mov
ret
sti
xchg
or
sbb
ret
cmp
lcall
repz
je
out
cmc
jne
sti
loop
lret
scas
cmp
dec
sub
cmc
cmc
scas
jle
setge
dec
bound
pop
and
mov
mov
mov
or
mov
cmp
or
adc
pop
mov
add
adc
je
inc
cli
addb
and
sahf
xchg
aaa
cmc
icebp
jge
aas
imul
ss
bound
jno
adcl
out
pusha
ret
mov
pop
xchg
fbld
sbb
das
test
push
or
push
ret
cli
jb
mov
jb
cmpb
je
adc
pusha
cmp
inc
sbb
jmp
cli
sbb
sbb
stos
fdivrl
loop
and
pop
aaa
insb
es
lds
adc
loop
mov
cmpsl
lahf
divl
jbe
jae
jl
xor
sub
lock
xchg
shlb
lock
andb
insb
inc
jl
sub
jo
inc
add
mov
ret
loopne
lock
rolb
push
add
xor
jo
inc
add
mov
ret
loopne
lock
rolb
or
sbb
subb
adc
push
ds
sub
pop
cs
popf
adc
pop
mov
xlat
adc
cmp
cmp
cwtl
mov
outsb
mov
mov
daa
pop
jo
add
popa
pop
and
jb
pop
adc
stc
dec
ret
mov
orb
cmpl
popa
cmp
out
sbbb
cmpsl
xor
jbe
add
ds
cmp
sarl
mov
in
mov
repnz
pusha
mov
pop
mov
out
enter
imul
hlt
jp
pop
in
gs
jge
xchg
lds
and
push
mov
mov
inc
jecxz
and
xlat
mov
sub
inc
sbb
sub
xchg
dec
int
mov
or
enter
ficompl
int3
sub
mov
or
lods
xor
enter
push
mov
mov
pop
ljmp
fsubl
fnstsw
enter
xor
mov
add
es
pop
rorb
fsubrs
es
add
jbe
nop
in
add
fisttpll
xor
push
mov
adc
cmp
sbb
lds
sbb
or
sahf
mov
pop
mov
sub
enter
sar
bound
outsl
sub
dec
push
cs
jl
mov
pop
push
and
and
and
or
jns
pop
ja
scas
fdivs
mov
fcom
and
inc
push
jbe
cmp
and
xchg
movsb
mov
jecxz
loop
adc
addl
mov
stos
sub
xchg
stos
xor
imul
inc
inc
lahf
iret
out
sbb
jp
cltd
inc
in
inc
jbe
mov
fistpll
mov
fildl
pop
dec
scas
out
jmp
push
xchg
xor
sbb
lret
jecxz
scas
jecxz
or
hlt
xor
testb
pop
mov
jae
cmp
movsb
adc
adc
pop
repz
xor
aaa
push
test
addr16
cmpl
jae
jmp
outsb
mov
inc
xor
add
inc
in
and
cmp
push
inc
dec
jns
or
addr16
xchg
stos
scas
lods
or
fcmovu
lret
aad
ljmp
push
orl
mov
insb
push
roll
pop
test
shl
je
cmp
jno
ficoms
mov
xchg
sub
and
dec
inc
sbb
out
mov
cmc
pop
jecxz
push
jecxz
mov
or
mov
int
sub
out
jmp
mov
leave
sbb
push
lcall
scas
in
sub
mov
and
orl
imul
inc
ret
mov
inc
sub
jg
leave
or
ss
sub
or
stos
pop
stos
in
adc
xchg
aam
dec
jnp
or
xchg
jns
sbb
dec
push
lods
call
sub
punpckhbw
fsubrl
aaa
push
ret
in
dec
adc
adc
xchg
mov
pop
pop
mov
xor
pop
rorb
outsb
jnp
push
and
push
jge,pn
xchg
mov
subl
mov
dec
pop
or
aas
cli
mov
pop
fists
jbe
mov
mov
inc
mov
sub
in
scas
das
mov
cmp
cli
mov
jl
mov
cmp
pop
gs
sub
cmpb
push
add
in
mov
clc
dec
scas
sbb
add
mov
sub
adc
sub
mov
rolb
js
aaa
les
mov
jo
push
push
jns
xchg
cs
rol
jb
cmp
and
push
cmp
push
incl
xchg
push
pop
addl
mov
mov
dec
mov
outsb
mov
cmp
pop
pop
lods
sbb
dec
cld
popf
mov
rolb
inc
jns
or
mov
add
sbb
popa
and
addr16
push
rclb
inc
jbe
or
push
mov
idivl
sub
addr16
jge
sub
test
fs
push
jae
jns
stos
push
cmp
and
xor
bnd
push
imul
mov
sub
gs
mov
dec
in
xchg
das
pop
aaa
jp
inc
cmp
movsl
movsl
in
add
xchg
push
iret
bound
xor
mov
loop
cmpsb
int
aas
cmp
and
xor
lds
jae
sbb
pop
fstpl
aad
fisttps
sahf
fldt
dec
stos
cmp
and
lcall
iret
push
push
and
push
sub
mov
mov
cmpsl
mov
xorb
fldlg2
scas
mov
jmp
call
mov
lds
inc
popa
test
loop
fadd
stos
daa
les
test
inc
addb
int
lahf
sub
aad
cld
xchg
or
leave
imul
jbe
out
stc
mov
mov
ds
mov
cs
lock
xor
outsb
lahf
ds
jle
popa
es
aad
mov
sbb
ljmp
out
add
mov
cmp
jg
cmpsl
fldenv
pusha
repz
xor
adc
mov
lahf
xchg
sarb
int3
xchg
pop
int
cmp
lods
aad
mov
push
fildl
nop
add
imul
or
xor
dec
lea
jl
shlb
aam
pop
xor
push
mov
jp
test
mov
inc
mov
lcall
pop
mov
cmp
ficompl
and
cmpsb
hlt
mov
testb
xchg
add
rcrl
adc
pop
mov
mov
mov
add
add
sbb
mov
loope
jp
pop
call
cmpsb
sbb
imul
inc
mov
decl
negb
andb
mov
push
sbb
mov
inc
cmp
mov
jae
lock
ds
add
and
mov
insb
loop
mov
push
push
and
pushf
ret
pushf
sub
xchg
scas
mov
mov
sti
xor
dec
or
test
mov
sub
lahf
adc
shrl
sbb
call
sub
fisttpll
xchg
movsb
jmp
addl
xchg
sbb
test
adc
jg
adc
sbb
mov
xchg
add
sbb
lock
daa
push
loope
mov
enter
arpl
inc
outsl
cli
stc
outsl
out
mov
scas
or
and
xor
mul
dec
sahf
jecxz
imul
mov
inc
mov
lock
ficoms
pop
shr
jle
les
or
daa
je
out
jl
or
jo
rclb
test
rcl
dec
dec
decb
add
mov
lcall
lea
xor
pushf
mov
into
xchg
nop
adc
movsb
cmp
pop
mov
arpl
jg
outsb
aam
movsl
lcall
or
rclb
pop
imul
mov
sahf
mov
cmp
les
mov
dec
sti
les
adc
out
iret
mov
inc
fldt
mov
mov
add
fdivrs
mov
fidivs
aad
pop
lods
andb
mov
add
stc
push
ret
lret
in
pop
and
out
push
xchg
mov
int
pop
jb
push
pop
add
fisttpl
push
andl
fwait
out
loop
lret
adc
popa
cltd
xchg
jno
jmp
push
cmp
aad
sub
adc
jne
mov
loopne
cwtl
mov
ds
loopne
cmpsb
xor
xor
dec
stos
lret
inc
movsl
iret
xor
movsl
mov
pusha
sbb
fldt
jnp
jb
xor
sub
flds
push
lods
sti
sbb
inc
xorb
inc
xor
popa
adc
lods
filds
push
xor
leave
dec
stos
fistps
pop
pop
jmp
push
aad
imul
jmp
mov
fisubrs
fldl
es
stos
fs
add
inc
push
data16
int3
xor
loop
aas
xchg
aad
cltd
fldenv
pop
inc
fwait
sbb
jp
adc
in
mov
jnp
cmp
sahf
and
xlat
call
inc
inc
sub
push
pop
loopne
sub
and
ror
mov
pop
les
pop
and
inc
fld
cmp
scas
mov
lcall
mov
fldcw
push
lods
pop
push
out
orb
imul
icebp
inc
dec
push
fiadds
adc
cmp
xor
leave
or
pushf
adc
int
scas
aas
hlt
cmp
push
mov
cmpsl
movsl
adc
fimull
add
les
mov
stc
movsl
ss
testl
idivb
cmp
lret
adc
test
cli
pop
push
adc
push
daa
lock
xchg
and
nop
push
sti
stos
fs
sub
pop
aad
ja
out
lcall
lret
fisubs
xor
dec
inc
into
mov
xor
jo
roll
jae
inc
sub
in
dec
mov
mov
xchg
push
fwait
xchg
and
xor
cmp
xor
divb
mov
pushf
sub
out
mov
add
xor
and
push
mov
sbb
sub
fwait
sub
push
rcrb
adc
push
stos
jge
test
mov
adc
dec
jbe
add
xchg
push
sbb
jg
cltd
jl
mov
inc
mov
mov
iret
outsb
ja
mov
or
pop
xchg
test
arpl
jne
add
or
into
mov
sub
out
mov
xchg
ljmp
pushl
cmp
add
insl
js
imul
icebp
out
loopne
test
shrb
xor
stos
push
fcomi
fsubrl
addr16
les
and
ds
loope
xchg
adc
mov
push
into
movsb
addr16
push
imul
or
sub
and
mov
adc
js
lods
mov
dec
push
sbb
sub
out
cmp
lcall
jbe
scas
dec
mov
inc
xchg
lcall
inc
mov
pop
movsl
and
pop
jle
push
inc
cltd
and
iret
or
fs
shlb
adc
lahf
dec
cmc
out
pop
je
cmpsl
lods
frndint
add
inc
push
cmpsl
jnp
popf
push
popa
push
pop
arpl
cld
and
ret
add
jg
jge
xchg
fistps
leave
stos
push
cld
or
or
imul
les
xchg
out
les
cmp
jo
imul
gs
inc
jp
mov
mov
mov
mov
push
jmp
mov
or
lret
je
jns
stos
dec
aaa
dec
sarb
stos
jns
fwait
je
add
aaa
mov
out
in
test
loope
stos
xor
insl
cmc
pop
inc
cmp
mov
jle
mov
mov
lods
sti
and
cli
cmp
mov
jg
push
dec
mov
idivb
js
jbe
stos
jns
mov
xchg
stos
fcomps
inc
push
xchg
into
ret
and
mov
dec
ja
sbb
push
push
ret
push
jle
mov
repnz
pop
jno
mov
test
push
sub
shrb
sbb
mov
imulb
dec
fwait
dec
cmp
mov
jl
sub
push
mov
mov
fistpll
xchg
mov
cmp
pop
push
xchg
subl
mov
mov
mov
shl
mov
aaa
loop
inc
sub
dec
adc
les
stos
adc
cmpsb
loope
rcrl
inc
ret
xlat
dec
lret
jge
mov
fs
pushf
testb
pop
adc
dec
ret
inc
pop
jae
lods
mov
loope
push
out
jns
mov
ja
int
in
inc
rclb
dec
lods
adc
jo
mull
lods
push
sbb
xor
mov
test
cmpb
pop
movsb
xor
stos
jecxz
push
and
ja
mov
insl
fsubs
mul
js
stos
cli
xchg
popf
xor
insb
or
pop
inc
and
pop
negb
adc
push
sti
inc
leave
aad
jmp
mov
mov
cmp
into
push
outsl
sub
or
divl
and
xchg
mov
or
not
popa
test
rol
insl
lcall
pop
cmpsl
imull
jno
jnp
pop
inc
sbb
sbb
sbb
cmp
jo
call
dec
cli
inc
jnp
int
repnz
cmp
xchg
sub
shrb
add
daa
ret
pop
mov
push
ret
aam
lahf
dec
pop
sbb
push
adc
test
test
arpl
push
or
mov
test
add
lcall
ja
outsb
sbb
test
cmc
fidivl
out
sbb
je
push
incl
loopne
sub
mov
xchg
jmp
lcall
lock
xchg
adc
xchg
outsb
or
mov
jnp
jb
sbb
std
aaa
mov
sub
outsb
mov
push
xchg
dec
out
mov
fstp
jp
popaw
psrad
sbb
sti
addr16
jns
into
fsubp
mov
popa
jmp
dec
fwait
jo
imull
sbb
cmp
push
xchg
js
leave
mov
ja
leave
jnp
test
xchg
cmpsb
mov
mov
add
adc
and
cltd
stos
repnz
inc
mov
mov
std
repz
push
mov
fistpl
test
or
mov
and
push
cli
mov
add
and
fsubl
xchg
mov
rcrb
lods
mov
xor
or
ss
pusha
push
jl
outsl
ja
jl
pop
ja
push
fistps
shrl
inc
popf
sti
enter
out
jg
movsb
push
orb
ret
adcb
mov
lods
jmp
popf
jge
jns
rorl
lahf
cmp
fisttpl
inc
and
xor
mov
add
sbbl
lea
popf
aas
lcall
lea
lcall
daa
insl
addr16
imul
aam
or
mov
pop
sbb
fcomps
inc
or
rcl
fisttps
dec
jle
pushf
subb
push
adc
fisttpl
jl
sti
mov
popf
jns
stc
cltd
scas
cmp
mov
xchg
mov
sbb
inc
mov
out
add
cmpsl
cmp
std
mov
push
adc
xchg
ds
in
aad
mov
push
adc
sbb
or
outsl
bndstx
dec
ss
stos
push
call
pop
mov
loopne
sbb
mov
scas
sbb
xchg
out
cli
or
ret
leave
imul
fwait
leave
stc
ret
jmp
pop
xchg
sub
cmp
arpl
jmp
xchg
test
push
dec
mov
leave
and
dec
and
xchg
out
neg
mov
std
pop
lcall
jno
or
dec
sub
lret
test
jns
or
mov
lret
and
add
ss
and
pop
loop
or
jmp
incb
inc
test
movsl
das
push
shll
test
pop
cmc
subb
out
push
ljmp
xchg
lahf
mov
enter
rolb
je
cmp
test
insl
imul
pop
sub
mov
jmp
and
mov
push
mov
rcll
pop
cmc
dec
jo
js
ffree
ret
xlat
xchg
mov
out
cmc
xchg
xlat
sub
mov
sbb
pop
cmpl
dec
insb
xchg
push
inc
inc
out
inc
in
xor
test
mov
and
inc
popa
mov
push
cli
repz
test
inc
movsb
cmpsb
jns
les
movsl
mulb
cwtl
test
ss
lods
mov
fidivl
aaa
push
adc
mov
mov
pop
and
mov
push
int3
adc
loop
mov
cwtl
xchg
or
lcall
clc
test
xchg
cmp
je
in
jb
fsubs
add
sbb
fisttpl
xchg
jp
nop
adc
pop
ret
push
xchg
in
iret
aad
cli
push
inc
fisttpll
lods
xchg
cld
in
subb
ja
and
lret
cmp
rolb
nop
mov
imul
inc
jno
or
out
or
ret
or
adc
addr16
shl
popl
fistl
mov
into
pop
mov
movsb
insb
push
in
mov
mov
push
mov
jnp
dec
cmpsb
movsb
push
enter
xor
popf
adc
xchg
sub
mov
aas
sahf
pop
and
popf
sbb
popf
push
or
addr16
pop
and
fcmovbe
pop
push
aad
out
leave
leave
lea
xor
popa
push
push
ds
add
adc
push
fidivl
int3
hlt
dec
jecxz
repz
add
das
jne
sbb
aaa
xchg
shl
xor
mov
js
outsb
enter
inc
stos
push
mov
push
outsl
xor
add
push
daa
stos
jle
fldl
jmp
lea
mov
pusha
pop
lods
outsb
mov
sbb
push
cmp
enter
sbb
mov
adc
fisttpl
mov
fidivl
xchg
les
cmpsb
sahf
icebp
je
sub
mov
mov
cmpsb
push
nop
stos
lret
in
aas
testl
mov
roll
mov
add
movsl
loopne
les
enter
rcrl
inc
xchg
movsb
push
icebp
pop
hlt
popa
mov
inc
lock
xchg
xchg
xchg
push
sbb
int
js
adc
jmp
sub
lcall
lcall
ss
jno
xor
and
jp
xlat
mov
stos
push
lock
sbb
pop
add
fstpl
adc
fdivrl
movntq
jecxz
xchg
adc
in
adc
bnd
int3
jns
or
push
jecxz
mov
insb
cmp
ja
mov
jle
lret
out
xor
pop
out
orb
sti
xchg
jmp
inc
push
adc
jg
lret
cli
movsl
cmp
hlt
or
test
jl
jp
and
jne
push
mov
xlat
pop
xchg
ret
pop
add
sti
test
add
testl
dec
push
add
fwait
outsl
jnp
shlb
and
mov
shlb
inc
ja
into
dec
movsb
cmp
jae
mov
and
pushf
mov
xchg
xchg
inc
mov
and
enter
pop
imul
mov
mov
enter
cmpb
mov
mov
or
push
rcll
jg
xchg
xchg
sbb
sub
adc
jp
pop
mov
pop
cmp
pop
mov
andl
inc
mov
sub
inc
or
and
mov
jmp
les
inc
and
push
mov
lret
mov
cli
ss
mov
clc
sub
es
sbb
mov
mov
inc
lret
mov
test
repz
call
popa
xor
lds
push
ret
xchg
ret
sbb
lahf
sbbb
mov
lahf
das
or
nop
test
sbb
xor
push
or
push
xor
push
sub
add
dec
imul
loope
mov
lret
and
or
shll
out
add
and
mov
pop
outsb
jge
sahf
lahf
add
push
fcoml
sbb
aaa
xlat
mov
push
lods
imul
fwait
cld
dec
push
sbb
cmc
repz
dec
dec
push
stos
sbb
dec
icebp
outsl
out
mov
cmp
int
adc
std
push
icebp
adc
in
or
xchg
cmp
xchg
xor
push
aas
fimuls
mov
or
dec
mov
arpl
jae
push
mov
js
insb
jno
mov
out
ret
outsb
adc
imul
adc
loopne
enter
shlb
mov
bound
push
ljmp
int
sti
mov
nop
out
pop
int
gs
imul
sbb
mov
notb
nop
fisubs
pop
push
mov
mov
jns
pop
xor
jns
add
xor
pushf
inc
mov
xor
pop
outsb
jne
push
es
fistl
lret
dec
mov
cmp
cmp
int3
clc
iret
mov
jp
cwtl
xlat
mov
mov
jae
dec
xchg
or
pusha
sarl
cmp
fstpl
cmpsb
add
add
sbb
xchg
cmc
int3
push
jge
xor
lods
jbe
test
pop
jmp
daa
xchg
test
imul
cli
cmp
xchg
into
xor
pusha
and
inc
add
mov
ret
loopne
lock
rolb
push
add
xor
jo
inc
add
mov
ret
loopne
lock
rolb
push
sbb
xor
sbb
inc
add
mov
ret
in
lock
leave
mov
inc
les
fs
push
xor
jo
rolb
js
ret
cwtl
sub
push
mov
sub
push
push
mov
push
push
push
push
movl
movl
movb
call
mov
andl
push
movl
pushl
movb
call
andl
push
push
mov
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
pop
pop
leave
ret
inc
mov
pop
pusha
push
cli
add
bound
outsb
push
cmp
lock
orb
mov
or
jo
add
adc
ror
cli
sub
nop
lcall
mov
js
ss
les
and
xchg
mov
fucom
repz
fsubrp
mov
pusha
pop
sbb
add
adc
xchg
jecxz
mov
jbe
pop
movsb
out
mov
lods
shrl
or
js
out
movsb
mov
or
jg
int3
pop
mov
dec
adc
push
leave
pop
push
and
mov
mov
inc
rcrb
addr16
stos
aad
push
mov
dec
test
ret
adc
shll
rorb
jg
nop
mov
pop
pop
mov
cmp
cld
cs
pop
stos
and
lret
mov
kmovb
mov
jnp
inc
decl
cltd
fildll
repz
imul
mov
sbb
stos
pusha
out
jo
in
push
mov
xchg
cli
shlb
stos
mov
sub
and
sub
push
outsl
jle
jne
inc
xor
mov
xchg
repnz
out
leave
jmp
fisttpl
or
pop
imul
push
cmpsl
scas
orb
call
leave
lret
icebp
shrl
cmp
add
and
push
outsb
adc
and
xor
ror
ljmp
mov
dec
push
pop
pusha
push
jp
or
sbb
sub
cmp
lret
loopne
lock
orb
mov
mov
xchg
outsl
into
fcomps
out
jae
and
icebp
packuswb
dec
ds
xlat
or
je
jno
iret
mov
call
loop
in
ret
jnp
ficomps
aad
push
push
leave
mov
int
movsb
faddp
andl
pop
mov
scas
dec
fldl
xchg
imul
sbb
mov
cmp
iret
add
xchg
aam
mov
dec
and
mov
popa
jnp
pushf
or
jge
lea
fldt
cmpsb
xchg
ja
jne
inc
cmp
jae
mov
xchg
mov
imul
adc
stos
xchg
in
aaa
sbb
dec
sub
push
nop
ret
gs
sbb
push
sub
lods
outsl
test
lods
sbb
shrl
jl
rorb
dec
in
fisttps
pop
stos
mov
xor
cld
call
test
sbb
mov
dec
fnstenv
in
push
mov
stos
push
inc
jno
pop
push
mov
out
fimuls
and
jne
test
add
or
sti
cmp
lcall
xor
fsts
mov
test
mov
adc
xchg
push
arpl
test
push
jp
mov
fisubrl
fcmovbe
dec
into
das
adc
mov
lods
inc
cmp
dec
insb
cmp
imul
mov
fsub
subl
cmp
xlat
out
inc
sarb
sbb
add
jns
mov
jmp
clc
popf
mov
pop
call
lret
jae
xchg
lret
icebp
imul
arpl
sbb
fldenv
insl
fiaddl
mov
movsb
hlt
ljmp
jbe
lret
mov
jb
mov
cmpsl
shrl
or
and
scas
mov
movq
inc
lods
pusha
pop
fucom
jbe
test
stos
xor
jo
dec
mov
mov
jne
pop
mov
mov
push
lcall
mov
ficomps
xchg
dec
fidivrl
pop
xlat
push
rcr
pop
lods
xchg
xchg
lret
sarb
pop
out
add
and
lods
fs
mov
inc
idiv
xchg
pop
push
fwait
les
call
ljmp
out
daa
xchg
mov
and
popa
ret
mov
jp
push
add
je
daa
jge
sbbl
and
movb
mov
test
sbb
pop
xchg
rcr
jmp
xchg
adcl
sbb
insl
jnp
push
cmp
jno
fbstp
pushf
dec
sbb
test
call
dec
mov
sti
xor
mov
imul
cmc
xor
test
pop
ss
stc
lret
arpl
dec
mov
mov
repnz
xchg
mov
pop
lret
and
enter
das
or
cmp
jns
popa
mov
mov
orb
adc
ja
xchg
mov
imul
les
xchg
mov
cwtl
mov
xor
jb
inc
sahf
and
das
fs
adc
dec
dec
cmc
lods
xor
sbb
cmc
mov
bnd
jmp
in
xchg
mov
aad
imul
vandps
fstpt
mov
leave
roll
fimull
icebp
adc
into
gs
jbe
push
xchg
into
je
fisttpl
scas
mov
pop
das
inc
out
das
sbb
repnz
cs
aam
test
fcmovnu
xchg
xor
add
idivl
nop
jbe
sub
imul
cmpb
lret
mov
inc
insb
insl
ss
pushl
into
push
mov
push
inc
lahf
mov
into
mov
mov
arpl
cld
in
mov
fstl
inc
push
xor
in
xor
shlb
in
and
lock
mov
pop
and
shl
sbb
jmp
mov
push
mov
and
push
xchg
in
pop
pop
mov
mov
jno
mov
rclb
and
push
cmp
pop
xchg
cmpsl
xor
clc
addr16
rcrl
mov
mov
addb
lret
shr
bound
bound
repnz
adc
jb
imul
jmp
sub
pusha
cld
jle
xchg
inc
xor
into
aas
jle
test
insb
mov
das
pop
dec
jmp
icebp
jle
aaa
fs
jbe
icebp
mov
cmp
maxps
push
dec
jne
adc
les
out
sti
je
inc
loope
xchg
jge
out
xchg
sub
and
adc
xlat
daa
flds
out
iret
xor
not
jle
mov
sbb
mov
lret
iret
cs
pushf
fmuls
ljmp
sbb
mov
rorl
mov
mov
mov
gs
out
outsl
push
pushf
push
push
xor
cmpsl
mov
inc
pop
enter
cmp
cmp
nop
enter
lock
push
loop
push
add
repz
jb
mov
push
xchg
lods
jb
repz
mov
sub
mov
rclb
lea
push
adc
and
jp
inc
rcr
or
mov
or
xor
push
sti
push
xchg
arpl
int
dec
adc
pop
insb
je
sar
and
lods
mov
cmp
pop
insl
scas
aas
lock
out
ss
icebp
mov
jle
push
jmp
popa
hlt
lcall
push
pusha
mov
popf
addb
in
mov
inc
sub
or
jg
push
mov
mov
cmpsb
jb,pt
stos
jmp
adc
lret
xchg
out
and
out
cmp
mov
xorb
cwtl
xchg
dec
loop
es
ss
xchg
cmp
lret
outsb
jns
scas
add
push
adc
or
leave
loop
and
xchg
imul
popf
inc
mov
cmp
xchg
adc
call
rcrl
insb
and
enter
sbbb
mov
insb
aad
ss
sahf
xchg
xchg
pushf
lock
fildl
dec
adc
nop
cltd
cld
dec
outsb
lahf
jne
jle
or
mov
call
lea
imul
iret
add
mov
mov
lds
cwtl
or
cmp
shrl
sbb
sub
pop
sbb
xchg
fs
int
adc
push
xchg
add
leave
or
pop
je
fxam
aad
dec
lods
das
jae
pushf
push
cli
sbb
sahf
pop
leave
dec
push
loopne
mov
dec
adc
lahf
jns
sbb
stc
sub
cmp
pusha
rclb
or
pop
aas
arpl
xchg
cmp
and
inc
sbb
dec
fdiv
clc
pop
mov
ja
add
aam
and
jmp
mov
add
test
xchg
adc
iret
or
push
mov
jnp
mov
mov
mov
outsb
adc
push
add
frstor
in
enter
mov
es
xorl
inc
mov
add
inc
nop/reserved
popf
jnp
sub
rcll
xchg
xchg
or
shlb
and
fldenv
imul
dec
nop
push
and
sub
mov
sub
pop
xchg
fs
cltd
lods
lea
fldcw
lds
std
push
pop
lods
cwtl
out
sbb
sti
ret
clc
pushf
dec
roll
popf
dec
adc
repz
jecxz
into
cltd
rclb
int3
dec
jmp
xor
mov
jb
lret
popa
mov
jecxz
je
pop
inc
rol
pushf
bound
mov
mov
cld
mov
popf
push
pop
icebp
imulb
imul
pop
or
aaa
jno
rolb
cmpsb
dec
lock
lds
xchg
pop
test
rcll
into
jp
push
cmp
jg
ret
fistps
push
fidivl
xchg
cmp
push
js
inc
and
mov
cmp
pop
xchg
sbb
or
push
cmp
add
lcall
insb
sbb
shl
leave
pop
cs
pop
outsl
dec
leave
jge
mov
cs
mov
lcall
ljmp
dec
sub
mov
test
fdivrs
fistpll
cmp
adc
stos
fcoml
xchg
cmp
mulb
mov
sub
aad
sub
inc
add
dec
dec
fpatan
mov
push
idivb
lods
add
mov
sub
or
pop
in
not
rol
jmp
cwtl
addl
out
xor
adc
cmp
mov
and
out
add
in
mov
lcall
mov
ret
sti
popf
int
and
inc
cmc
jecxz
rorl
shll
imulb
add
push
mov
das
hlt
addl
cmp
xchg
cmp
adc
pop
int
mov
mov
jae
sub
push
mov
mov
jns
mov
push
jb
and
cmpsb
or
js
jno
xor
int
push
push
dec
loope
leave
sub
jo,pt
jo
dec
sti
jb,pn
dec
ds
fcompl
push
mov
repnz
in
cltd
addr16
ret
mov
push
mov
loopne
fwait
cltd
xchg
iret
cmp
nop
adc
mov
xlat
jno
pop
add
fidivs
dec
fs
xor
iret
lret
add
pop
cli
or
inc
cmpsl
insb
pop
push
movsb
fstpt
stos
mov
mov
and
mov
pop
mov
jnp
out
dec
pop
push
inc
pop
cmp
or
inc
adc
faddl
fidivrs
mov
cmpsb
mov
xchg
pusha
xchg
in
in
popa
sbb
sahf
mov
shlb
das
cld
fnstcw
sub
daa
push
rclb
iret
movsl
sahf
leave
loope
imul
in
push
rcr
out
in
lods
repz
fiaddl
jnp
repz
cmp
jge
jne
add
hlt
push
mov
cmpsl
jg,pn
and
inc
int
ja
mov
lcall
je
cmp
cld
shlb
call
push
push
les
push
aad
sahf
jp
es
jp
cmp
scas
pusha
clc
repz
or
inc
pop
adc
xchg
xor
cmpsb
xchg
xchg
or
sti
cmp
mov
jnp
mov
push
daa
inc
pop
popa
sub
sbb
mov
push
shlb
sbb
add
dec
es
enter
jne
mov
add
mov
and
push
mov
aaa
jp
nop
clc
xor
push
nop
mov
fimuls
mov
jae
and
xchg
inc
jecxz
lods
pop
and
fwait
mov
push
imul
sub
cwtl
mov
ds
fidivs
psraw
add
jge
push
cmpsb
and
mov
mov
scas
jnp
cmpsb
andb
jle
cmp
pop
xor
je
xor
lock
scas
pop
inc
int
pusha
xlat
jbe
leave
cmp
scas
mov
mov
inc
inc
in
xor
insl
add
lods
mov
jecxz
inc
cmp
pop
pop
xchg
sbb
call
icebp
xor
popa
and
mov
or
lret
pop
pop
mov
fldcw
mov
rcrb
imulb
mov
shrb
outsb
push
sub
repz
mov
ret
arpl
pop
dec
sbb
pop
mov
mov
jo
fs
xchg
push
aas
mov
pushf
imul
lods
add
jg
fidivrl
pop
pop
inc
jns
cmpsl
stos
in
add
in
jae
fistps
dec
mov
iret
xchg
cmpsb
shl
lahf
out
add
fwait
inc
cmc
stos
in
loope
mov
push
in
loopne
cli
jno
popf
push
mov
sub
icebp
hlt
pop
add
inc
sbb
dec
std
mov
pushf
cld
pop
xchg
jnp
clc
inc
add
pop
ret
cmp
push
les
and
sarb
push
pushf
mov
xor
mov
leave
dec
jmp
jecxz
and
pop
jno
push
mov
adc
andl
mov
sub
inc
stc
test
sbb
pop
or
and
xchg
xor
orl
mov
outsl
pushf
sub
stos
pop
or
mov
imulb
addb
inc
or
ret
insb
cld
sti
jmp
int3
std
pop
leave
repz
xor
sbb
xchg
xor
call
mov
xchg
push
mov
inc
movsl
lods
add
ds
xchg
fldt
xchg
subb
sbb
rorl
jnp
sti
mov
shl
imull
jno
push
icebp
push
dec
jo
bound
mov
pop
jp
fsubs
pop
jnp
sbb
cltd
mov
ja
ficoms
inc
pop
insb
inc
add
push
cmp
and
ret
mov
push
and
inc
movsb
cmp
stos
mov
xchg
mov
push
xchg
sbb
outsb
dec
push
push
xor
dec
lret
insb
jl
sub
pop
cmpsl
es
xor
mov
inc
mov
dec
or
xor
push
shl
dec
xor
mov
dec
sbb
cmp
mov
jl
int
cmp
imul
sub
sub
mov
or
in
sbb
or
outsl
mov
mov
or
mov
and
jnp
jne
inc
and
js
imul
inc
repnz
cld
sub
insl
test
push
daa
mov
dec
pop
jle
gs
mov
decb
cld
outsb
xor
lock
jmp
or
cwtl
cmp
pop
pop
jle
movsb
shrl
cli
ss
imul
clc
cmp
out
sub
fistpl
clc
loop
add
fidivrs
lret
add
mov
pop
cmp
and
sbb
inc
ret
je
insb
cld
ret
jmp
dec
mov
add
mov
fcoml
xchg
push
xor
ja
jno
xchg
sbb
rorb
test
jne
lret
ret
add
add
and
rclb
mov
in
shrb
push
adc
pop
pushf
lods
pop
addr16
mov
std
sbb
hlt
cli
dec
xchg
mov
rclb
lods
call
cmp
jb
ds
mov
dec
fsts
mov
mov
jbe
shrl
pop
cltd
push
xor
cmpsb
dec
mov
or
adc
pop
push
int
sub
jnp
or
or
push
mov
or
cmp
cmp
and
jnp
loopne
dec
sub
or
in
in
call
sub
adc
mov
mov
out
sarl
add
loope
mov
xor
scas
mov
call
xchg
out
aaa
push
arpl
repz
jp
mov
aam
pop
xchg
mov
lret
ss
jp
bound
loope
pushf
rcll
and
xor
xchg
jae
or
mov
dec
cmp
lds
sbb
lods
fildll
adc
arpl
jmp
sbb
sbb
mov
adc
pop
push
std
mov
pop
aam
roll
clc
fucomi
test
sub
iret
cmp
mov
mov
int
loopne
or
ret
jno
fidivrl
xchg
or
pop
xchg
pop
fs
xchg
adc
call
popa
inc
stos
xlat
lret
jnp
jp
mov
lds
pop
test
adc
pop
data16
jge
dec
movsl
sub
mov
pop
sub
fldenv
dec
and
jmp
jnp
sub
imul
aas
cli
adc
mov
in
jle
repz
test
imul
push
jmp
jb
mov
add
aam
aad
cmp
pop
mov
ret
call
sub
push
orl
push
mov
in
lea
xchg
in
lods
int
mov
inc
pop
inc
xor
lret
imul
push
inc
sub
movsl
xor
jecxz
add
in
pop
stc
fsubrl
inc
pop
in
push
jae
and
dec
add
clc
imul
rep
jns
xor
jns
push
mov
cld
mov
xor
dec
stos
in
add
push
xor
cmc
mov
push
ret
jae
sub
test
sub
push
mov
mov
gs
jmp
jne
out
xor
pop
adc
xchg
out
mov
popa
sub
push
js
xor
jb
fstpl
mov
enter
jns
cs
in
push
mov
andl
scas
hlt
out
notl
xor
bound
xor
scas
sar
inc
fcom
loope
cmp
push
adc
mov
sbb
sbb
js
xor
cli
push
stos
mov
aas
out
inc
adc
mov
push
and
push
loop
cmp
sub
sub
jne
adc
and
jge
je
lods
push
faddp
fildl
jne
lods
push
jle
push
or
add
push
cmp
pushf
aas
cmc
lea
fisubrs
lret
sub
sarb
jns
mov
or
adc
divb
stos
test
imul
in
xor
test
mov
cmp
fisttpl
popf
mov
ret
pushf
fs
add
sbb
xchg
imul
stc
mov
jae
dec
and
cmpsb
push
mov
stos
and
sbb
push
mov
ds
xchg
lods
loopne
jmp
mov
push
sub
or
dec
testb
mov
sti
aaa
movsl
stos
inc
lock
repz
ljmp
int3
xchg
cwtl
mov
jecxz
call
push
push
mov
out
or
push
sub
das
shrb
roll
push
push
add
sbb
popf
std
jmp
jg
mov
js
jmp
clc
stos
fnstenv
lret
adc
hlt
xor
and
ljmp
and
fwait
out
inc
jo
xchg
add
fadd
jno
mov
mov
loopne
mov
call
mov
lret
inc
daa
and
cmp
mov
jb
inc
out
fiaddl
enter
iret
fs
stos
push
and
lea
jg
jp
cli
dec
mov
hlt
cmp
sbb
pusha
outsb
mov
out
adc
loopne
fbstp
in
lcall
push
std
adc
loop
rclb
in
cmp
das
xchg
pop
inc
das
repnz
es
xor
cmp
ljmp
sbb
pop
cmc
int
ljmp
or
mov
shll
std
fs
pop
test
js
sbb
add
cmc
jno
daa
mov
mov
lcall
nop
daa
pop
inc
scas
or
jb
fbstp
add
mov
jge
ret
lahf
pop
sbb
mov
or
test
mov
mov
mov
push
push
jo
lret
arpl
push
inc
or
addr16
pop
fstpt
mov
sub
inc
lea
test
inc
dec
adc
aaa
mov
popa
out
lock
mov
icebp
loop
xchg
xchg
push
cmp
test
xchg
shll
add
xor
push
sbbb
sbb
into
icebp
dec
repnz
fisubl
data16
adc
sti
push
inc
subl
push
push
inc
push
fsts
cld
aam
cmpsb
sub
add
test
inc
scas
add
movsb
mov
jl
xlat
cmpsb
ljmp
adc
loopne
xor
jle
loop
or
nop
push
push
sbb
add
sub
mov
add
or
add
pushf
pop
mov
pushf
or
lods
mov
out
movsb
rorb
push
insl
outsl
fbstp
test
adc
out
dec
xchg
ret
frstor
es
jae
inc
push
cmpsb
sti
test
in
sub
inc
and
inc
sarb
fadd
fidivrs
cli
or
xor
xchg
pusha
sahf
push
mov
into
notl
aas
mov
fstps
rolb
out
jle
test
mov
int3
int3
test
les
push
add
scas
lods
pushf
dec
mov
push
pop
out
jg
dec
pop
jle
jae
fisttpl
sub
std
cld
adc
sub
lds
or
jl
jmp
mov
sbb
dec
test
in
push
imul
les
xchg
fwait
mov
dec
lods
mov
pop
les
xchg
mov
jg
xor
ret
adc
adc
xor
mov
xor
orb
scas
je
mov
cmc
add
sub
js
add
arpl
pop
pop
insl
pop
jp
mov
inc
xor
mov
fisubrs
jge
fprem1
mov
adc
insb
rcrl
xor
arpl
mov
push
sub
bound
mov
sbb
insl
xchg
lods
pushf
fcmovu
mov
ret
mov
movb
jecxz
dec
dec
push
inc
jp
in
push
ds
jns
adc
in
sbb
arpl
sub
loope
enter
repnz
mov
add
movsb
pop
xlat
add
andb
jp
or
sbb
sub
cmp
lret
loopne
lock
orb
mov
pusha
push
jp
or
sbb
sub
cmp
lret
loopne
lock
orb
mov
add
jo
nop
or
mov
sub
cmp
adc
ficoml
ljmp
mov
dec
or
cmp
jnp
or
sbb
stos
mov
shlb
testl
dec
inc
test
leave
cltd
in
fisubrl
cmp
dec
sbb
sub
dec
or
test
leave
cltd
fldl2t
test
fabs
sub
jns
dec
sbb
inc
jns
dec
or
test
leave
cltd
fldl2t
test
fstps
jp
aaa
cmp
jge
outsb
pop
addr16
push
lcall
test
add
adc
mov
or
orb
insb
imul
and
adc
ret
test
das
xchg
fistps
pushf
cmp
dec
or
hlt
inc
mov
call
int3
sub
push
hlt
notb
jae
leave
cmp
cmp
cltd
mov
jmp
sbb
aaa
jecxz
sub
test
aas
mov
dec
add
push
popf
int
jecxz
mov
xor
jecxz
mov
sbb
jnp
test
insb
xorl
cmp
adcl
icebp
mov
dec
push
sub
dec
or
or
jmp
cltd
fldl2t
test
fstps
or
pop
imul
pop
jo
in
sarb
test
mov
lods
iret
cwtl
int
adc
sub
or
mov
pushf
fldcw
cmc
leave
loopne
std
dec
and
add
pop
cmp
inc
sub
jbe
lods
fnsave
jmp
mov
cltd
sub
jns
dec
sbb
sub
dec
or
test
leave
cltd
fldl2t
test
fstps
or
pop
imul
pop
sbb
and
sbb
frstor
divb
hlt
movsb
mov
ret
repnz
out
daa
cwtl
xchg
mov
arpl
adc
out
mov
cmpsb
sbb
icebp
insb
call
sub
cld
mov
sbbl
insl
arpl
repz
pop
fs
cmc
adc
rorl
jne
movl
stos
lock
jnp
mov
in
addb
outsb
int3
sbb
adc
sbb
pusha
pop
push
jmp
mov
adc
pop
ljmp
and
imulb
sarl
and
inc
push
add
add
mov
push
es
int3
add
jecxz
cmc
mov
push
repz
and
je
test
sbb
pop
mov
out
mov
inc
cld
sub
mov
imul
mov
and
in
sarl
lods
sbb
iret
es
mov
sub
dec
movsl
enter
inc
and
hlt
int3
jl
dec
outsb
in
jae
aam
aad
push
push
test
sub
mov
ficomps
loope
mov
push
push
mov
xchg
imul
xor
outsl
push
nop
push
add
cmp
cmpsl
lock
pop
or
incl
out
xor
into
sbb
js
data16
add
and
or
ror
fstpt
push
jb
sarl
xor
add
ficomps
dec
add
sbb
cmp
dec
push
xor
in
push
jns
in
js
in
push
xchg
sub
in
jge
shll
xor
loopne
mov
mov
and
loope
rolb
push
mov
int3
js
pop
clc
inc
repnz
pop
push
clc
mov
int3
stos
jp
aaa
stos
adc
mov
push
lahf
xchg
out
fs
jp
jne
add
flds
int3
and
pop
add
xchg
test
repz
stos
lds
push
xor
ss
push
cs
imul
xchg
ljmp
jo
push
xchg
insb
jb
pop
sub
shrb
outsb
xor
xchg
faddl
loop
inc
fadd
dec
or
mov
push
call
ja
inc
push
cld
aam
mov
dec
push
pop
aam
jae
mov
pop
scas
testl
cltd
fildll
dec
sbb
dec
sti
sbb
addb
mull
mov
jp
adcb
cmp
mov
sti
insl
iret
jne
mov
stos
dec
lret
loopne
xchg
cs
mov
int3
fadds
call
fldcw
addr16
lock
jne
cld
in
mov
or
xchg
mov
mov
movsl
inc
xchg
cmp
in
mov
sub
xor
fwait
lahf
sbb
mov
pop
adc
or
sub
sbb
stos
inc
fisubrs
jl
xchg
out
dec
xor
push
stos
insl
ds
xor
jge
jecxz
pusha
and
or
fcoml
jae
jp
cmpsl
btcl
inc
fwait
pop
lret
dec
and
insl
push
pop
lods
xorl
push
shlb
aam
rcll
lods
jns
add
sbb
test
xchg
aad
roll
dec
es
push
jno
ret
out
xor
decl
shlb
scas
cmpsb
mov
in
ja
jp
out
add
int3
inc
pop
lods
cli
in
scas
sbb
dec
inc
sahf
lret
leave
cs
iret
mov
push
rcrl
and
test
sbb
out
aaa
orl
adc
cs
loopne
push
add
in
fxch
inc
pop
mov
xlat
icebp
jmp
ja
pop
push
adc
in
cmp
fdivrl
inc
mov
add
mov
pop
sbb
lock
sub
pop
cmp
and
xchg
scas
stos
xchg
mov
mov
xorl
fmul
xlat
into
pop
rcrl
push
push
push
cld
mov
addr16
js
push
inc
lock
in
ja
nop
test
fstp
add
jg
imul
fdivs
ljmp
xor
pop
xor
push
sub
out
sbb
lahf
adc
fwait
sub
push
popf
xor
or
pop
aad
cli
and
pop
jg
mov
int3
fildl
int
xor
and
mov
push
iret
loopne
pusha
xchg
sub
xchg
aaa
icebp
cli
incb
daa
lods
in
js
mov
inc
out
stos
in
jmp
cmp
pushf
mov
mov
inc
mov
into
push
les
lock
call
mov
push
add
xor
jns
dec
inc
and
out
jp
inc
jecxz
push
sub
push
cli
mov
xor
dec
stc
add
bnd
inc
mov
arpl
ljmp
stos
test
pop
inc
dec
adc
pop
into
jle
addr16
add
pop
sbb
enter
fwait
sub
push
xchg
mov
popa
out
movsl
inc
std
ss
mov
lcall
aas
jnp
mov
aad
scas
dec
outsb
into
jo
inc
sub
mov
mov
outsl
cmpsb
push
push
xchg
fstl
mov
xchg
lds
sbb
xor
cmp
bnd
das
add
cmpsl
sub
jo
xor
jne
jnp
mov
ds
jbe
and
in
mov
dec
out
mov
add
xchg
add
movsl
sub
stc
pusha
xor
into
fmull
and
sbb
nop
adc
popf
or
negl
idivb
mov
pop
inc
into
fdivrl
lods
mov
clc
out
in
outsl
test
repz
push
fdivl
cmp
pop
mov
aaa
jne
or
push
mov
imul
mov
subb
inc
and
jae
xor
gs
pop
mov
adc
lock
mov
sbb
cmp
or
add
je
sub
jb
arpl
ja
dec
xchg
inc
in
mov
cmp
cli
call
imul
test
jae
adc
mov
or
cmp
ss
popa
dec
inc
inc
jp
dec
cmc
dec
add
xor
mov
clc
jne
pushf
cmp
adc
imul
call
jns
sbbb
push
out
std
xchg
mov
repnz
std
or
stos
cmpsl
loop
call
out
fnstsw
ret
pop
adc
jmp
fnsave
addr16
outsb
mov
inc
cmp
data16
or
test
or
sbb
mov
mov
leave
xchg
push
cmp
orl
sub
xor
adcl
test
or
xor
insb
jge
arpl
and
xor
test
xchg
lds
inc
xchg
mov
sbb
es
ljmp
adc
inc
ljmp
sahf
es
or
data16
pushf
adc
cmc
pop
iret
dec
pop
lret
dec
sub
or
fdivl
add
and
dec
sub
movsl
adc
push
sti
lds
xor
dec
jl
sub
jp
jp
push
neg
stos
gs
push
out
mov
aaa
ljmp
xchg
je
out
xchg
push
xor
scas
dec
fs
inc
mov
enter
cld
in
in
cmp
push
jo
imul
pop
mov
jmp
pop
aad
jmp
insl
test
out
xchg
dec
xchg
sub
into
dec
js
xchg
mov
or
mov
std
xchg
in
lods
dec
inc
lret
mov
inc
movsb
adc
cli
ficompl
pusha
mov
shlb
mov
das
jne
addr16
pop
pop
sbb
cmc
dec
inc
jo
mov
and
mov
int
inc
ds
adc
out
out
lret
enter
arpl
mov
dec
in
fldpi
stos
pushf
sub
sub
mov
cmpsl
push
mov
addr16
cld
sub
les
cmc
push
mov
pusha
jo
mov
sub
notb
sub
sbb
pop
dec
and
jmp
sbb
fsubrs
test
and
jge
adc
dec
jb
mulps
rep
in
roll
call
mov
dec
ljmp
je
cmp
mov
inc
push
and
out
test
jmp
mov
inc
rcr
mov
and
fsubr
dec
repz
sbb
inc
in
and
aas
popf
cmc
test
fmul
pop
mov
push
sub
xor
mov
fwait
inc
fisttpl
data16
fidivl
add
dec
push
and
sahf
push
lahf
and
out
int3
subb
cmp
pop
pop
xlat
orl
mov
mov
imul
ds
mov
mov
lods
int
xor
cvtps2pi
fdivrl
imul
les
outsl
daa
and
jecxz
push
addl
sbb
jo
dec
jns
mov
mov
jge
rolb
or
xor
push
cmp
adcl
and
imul
add
pop
push
push
inc
int
negl
int3
test
xor
outsl
push
aaa
cmpsl
mov
sbb
je
out
mov
fisttps
jmp
out
cmc
pop
popf
add
sbb
fcmovnbe
xchg
lcall
push
dec
mov
stos
loop
imul
mov
imul
push
sahf
pop
jp
call
sbb
cmpsl
xchg
pop
sbb
mov
push
inc
push
hlt
jg
das
xchg
jno
outsb
and
stc
jl
fisubl
adc
insl
push
jp
scas
pop
loopne
xor
mov
add
shll
and
pop
xor
cmp
mov
xor
imul
aad
push
call
or
jp
push
daa
aas
adc
mov
mov
clc
mov
push
push
push
push
xchg
insb
repnz
leave
pop
jge
popa
dec
outsb
xorl
adc
ds
imul
scas
mov
and
and
adc
push
mov
ficompl
jb
shrl
inc
popf
fidivrl
std
push
repnz
pusha
jge
adc
or
lea
call
int
or
mov
push
sub
xchg
pop
imul
jns
in
xchg
sbb
mov
push
cmp
fsubrp
int
xlat
xor
mov
loop
shrl
arpl
fs
into
stc
ret
ret
add
push
or
xchg
aam
stos
rcll
inc
iret
fcompl
mov
jg
out
mov
push
xchg
outsl
xchg
mov
mov
ret
cmc
jns
mov
push
inc
inc
cmp
andl
mov
inc
sbb
je
pushl
push
orb
sbb
xor
push
cmc
jge
icebp
int
sbb
adc
ds
mov
xchg
add
adc
mov
addr16
fcomi
outsl
fdiv
pusha
sub
jne
sub
cmpsb
into
int3
xor
mov
in
rorl
ja
xor
dec
push
pop
jmp
xchg
pop
mov
mov
shlb
mov
mov
aam
inc
jmp
pop
inc
popf
xchg
lds
roll
xchg
cmp
stc
fincstp
dec
leave
out
adc
int
mov
mov
lcall
scas
es
xor
cld
test
adc
std
stos
lahf
or
jmp
fisttpl
lods
and
xor
mov
mov
mov
mov
das
out
mov
adc
inc
stos
mov
loopne
cmp
add
lods
ljmp
jle
pop
popa
mov
jp
into
popa
and
divb
sub
popa
sbb
xchg
stc
aam
dec
movsl
jge
loope
adc
sbb
mov
sub
inc
ficoms
push
das
das
pop
outsl
arpl
in
xchg
cmc
push
or
or
push
jae
pop
popa
stos
mov
cmpsb
push
ljmp
mov
sub
fwait
mov
loop
js
pop
in
nop
sub
sub
fcoml
lret
test
lahf
adc
push
sahf
aad
pop
dec
adc
test
outsb
jne
insb
jo
mov
add
push
test
filds
lret
and
lods
addr16
std
jb
pusha
inc
imul
mov
lds
or
lcall
push
inc
cmpsl
jmp
add
arpl
in
int
xor
push
roll
loopne
shr
cltd
adc
adc
sub
aad
push
cmp
xchg
fs
push
lcall
adc
test
addr16
stc
dec
xchg
cmp
add
mov
add
add
dec
mov
push
pusha
adc
sbb
out
jb
pop
mov
aas
ret
jl
sub
cmpsl
enter
ja
in
ret
aaa
jns
mov
adc
cld
and
lds
xchg
xchg
xorl
stos
mov
push
jl
jp
cld
xchg
mov
push
pop
jl
sub
xchg
push
pop
push
mov
subb
lahf
adc
cmpsl
fidivl
outsb
cli
out
out
and
and
test
fsubrp
sbb
jne
pop
je
jne
mov
mov
insb
jge
pop
inc
and
add
and
cltd
mov
adc
mov
dec
dec
mov
leave
out
cmp
imul
xchg
mov
mov
sub
cmp
clc
jg
in
enter
call
jnp
dec
scas
cmpsl
push
test
shrb
outsb
enter
cs
inc
aas
inc
out
xor
mov
push
lock
sub
loope
and
push
lcall
pushf
mov
iret
pop
jle
sub
into
lretw
jge
testb
push
dec
sub
mov
repnz
dec
int
rol
sub
xchg
stc
dec
outsl
sahf
lock
aas
call
out
movb
adc
push
fs
dec
outsl
sbbb
scas
jns
fwait
ror
aam
jne
push
jg
push
leave
push
push
ret
in
das
cmpsl
sarl
cmp
xor
mov
pop
sarb
xchg
in
in
jl
mov
push
add
cmp
dec
jp
adc
lods
pop
idivb
leave
dec
inc
jo
pushf
ljmp
aad
or
ljmp
in
jbe
es
loope
sub
iret
cltd
scas
add
jg
cld
mov
pusha
cmp
mov
xchg
fwait
sub
lret
ja
into
add
mov
push
jb
add
add
out
lds
inc
and
inc
lcall
sti
adc
dec
mov
push
sbb
mov
jp
sbb
mov
mov
nop
inc
or
add
cmc
mov
sub
jp
mov
fwait
push
pop
mov
xchg
jg
cmpsb
lahf
movsl
cmp
enter
cmp
ret
stos
cmp
test
cmp
push
sbb
int3
pop
mov
jno
repz
mov
adc
leave
pop
jae
or
mov
xchg
clc
shl
pop
ss
xchg
add
mov
dec
jg
pop
push
or
popf
jecxz
call
lods
jp
imull
jmp
in
add
lahf
inc
xor
jle
inc
mov
pop
and
in
inc
imul
roll
mov
push
and
mov
push
pushf
dec
fmul
and
inc
cmpsb
xor
push
sbb
and
mov
push
sbb
test
xchg
push
sbb
data16
test
mov
ret
popa
in
cmp
bound
shlb
mov
rcrb
loope
mov
loop
mov
or
scas
inc
shll
jmp
cmp
aas
fstpt
and
sbb
aaa
test
std
sub
lret
push
rcrl
stos
xchg
ja
gs
mov
jns
inc
insl
inc
shll
test
ret
pop
and
pushf
mov
adc
fcoml
fstpl
ja
xchg
lret
mov
add
xchg
movsb
pop
add
or
cli
mov
nop
loopne
mov
mov
pushf
jmp
icebp
das
fs
hlt
addr16
dec
inc
pop
inc
pop
pusha
push
dec
loope
popf
push
mov
and
imul
jl
add
adc
jbe
shl
mov
test
out
popa
fcom
fmulp
or
cmp
push
daa
dec
pmullw
outsb
pop
xchg
adc
mov
scas
and
lods
push
mov
lods
mov
fs
scas
outsl
push
gs
jp
mov
xlat
mov
lods
ja
hlt
repnz
sbb
outsb
xchg
int3
jecxz
cmpsl
add
mov
and
fcmovnb
xchg
mov
popa
lds
stc
mov
int
sahf
jg
mov
jg
pop
jmp
adcb
dec
inc
jge
xorb
push
jne
popl
jno
pop
jecxz
push
push
inc
cmpsl
or
adc
inc
mov
xchg
mov
insl
mov
sub
testb
jecxz
es
jp
cli
lea
push
xor
clc
shlb
sbb
dec
test
rcrb
dec
sbb
mov
xchg
and
js
sahf
mov
fdivl
in
arpl
inc
sbb
jnp
cmp
sub
push
ss
pop
es
adcb
push
and
and
jno
aam
icebp
arpl
sbb
cwtl
mov
xor
push
sub
scas
dec
push
xor
outsb
or
ds
jle
mov
adc
mov
xchg
and
shlb
lea
xor
adc
scas
cld
andl
push
ja
in
sub
pop
dec
sbb
arpl
ja
push
and
in
xlat
fbld
fcoml
imul
stc
cs
push
inc
inc
mov
cltd
adc
inc
inc
incl
test
in
push
int
jle
mov
loop
outsl
sub
nop
call
push
les
jae
inc
mov
sti
orl
arpl
cmc
mov
repnz
jbe
scas
pop
bound
mov
adcl
pop
adc
and
fmulp
and
inc
dec
negb
call
scas
aaa
test
xlat
mov
sbb
add
add
add
les
xlat
psubsb
test
xor
ja
sar
pop
dec
js
rcrl
enter
sub
aam
mov
sub
mov
and
fistpl
inc
and
cltd
sub
adc
sbb
jle
sbb
mov
mov
pop
lret
lahf
stos
or
arpl
rcll
and
pop
xor
sbbl
pop
in
aad
inc
add
std
fdivrs
lahf
add
js
push
ss
fsub
in
sub
or
sub
cli
pop
adc
mov
fs
cld
mov
jp
xor
jne
xor
mov
sub
lret
shr
inc
pop
hlt
jne
mov
dec
aad
mov
sbb
mov
pusha
xchg
clc
jns
repnz
in
push
lds
xchg
jb
ja
lea
cmc
aam
jbe
enter
movsl
setge
mov
into
push
jb
cmc
cmp
iret
les
inc
or
mov
push
adc
repz
xchg
or
push
mov
out
xor
ret
cmp
cli
jae
inc
pop
ret
cwtl
dec
pop
subb
dec
arpl
divl
push
lods
hlt
testl
or
fists
sahf
rcrl
lcall
pop
or
cmp
cmc
out
int
cmp
dec
cmp
bnd
dec
inc
imul
in
inc
cmc
sub
loopnew
add
shr
sbb
dec
add
test
es
jno
xchg
add
cmp
mov
jp
movsl
dec
test
mov
nop
shrl
gs
std
mov
mov
fistps
in
aas
sub
push
cmp
lods
lcall
in
and
test
jb
scas
shll
xchg
andb
subb
scas
pop
das
int
push
push
es
mov
sub
adc
cli
dec
sbb
cmpsb
enter
hlt
mov
mov
lret
sbb
pop
jno
mov
mov
incl
adc
test
out
out
ror
cld
sbb
fmuls
leave
fs
jp
ret
push
inc
jo
xor
xor
xchg
sbb
std
pop
movsb
fdivr
add
orb
and
repnz
xchg
ret
mov
cmpsl
ret
cmc
cmp
and
mov
bound
pop
lret
cmp
cmpsl
and
xor
call
push
push
cltd
int3
scas
mov
imulb
aaa
out
cli
in
xor
dec
jo
xchg
cmp
cmp
mov
rcll
mov
push
aas
push
mov
into
mov
int3
call
incb
and
mov
or
dec
imull
or
cmp
mov
mov
outsb
pop
call
push
stc
lcall
xchg
es
cmp
inc
loope
cld
xchg
dec
pop
outsb
clc
push
test
inc
sub
adc
repnz
rclb
cld
fstps
or
stc
sbb
cltd
fldl2t
test
fstps
or
pop
imul
pop
sbb
leave
cltd
fldl2t
test
fstps
or
pop
imul
pop
sbb
leave
cltd
fldl2t
test
fstps
or
pop
imul
pop
sbb
leave
cltd
fldl2t
test
fstps
mov
mov
cmpsb
out
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
push
jbe
data16
in
es
push
idivb
xchg
sub
or
call
mov
push
cwtl
mov
fisubrl
cmp
dec
out
in
test
mov
cmpsb
clc
dec
call
jle
push
push
cwtl
mov
push
xchg
pop
flds
cmp
addr16
mov
call
add
fimuls
leave
stc
or
mov
sbb
xor
mov
fildll
jg
ss
leave
std
cmpsb
lds
fcoms
inc
lock
jge
jmp
cmp
std
jnp
cmp
push
pushf
mov
xchg
call
jecxz
or
mov
mov
inc
mov
pop
or
add
dec
add
mov
mov
dec
adc
sbb
pop
imul
add
dec
in
pop
pushf
pusha
mov
xchg
lds
dec
mov
or
fsubrs
mov
push
cwtl
mov
js
push
cmp
or
mov
xchg
sti
adc
fistps
inc
adc
sub
dec
repz
jl
cmpsl
aas
stos
das
lods
add
int3
dec
cwtl
inc
lock
mov
sub
xchg
pop
rorb
adc
and
and
mov
js
push
out
xchg
sub
clc
push
call
mov
push
cwtl
mov
js
push
out
xchg
sub
clc
push
in
push
push
icebp
lcall
rcrl
cltd
pop
aas
adc
pop
mov
mov
add
add
pusha
or
bound
lock
aad
jge
pop
mov
xor
xchg
jo
mov
gs
outsl
mov
lret
xchg
mov
int3
daa
jle
inc
insb
inc
bound
repz
nop
inc
test
mov
add
cmpsb
arpl
cmc
pop
loop
dec
fidivs
push
and
jnp
mov
push
mov
mov
jns
add
loope
out
push
add
out
pop
int
fisubrl
ror
or
and
and
cmpsl
xchg
cli
cmc
cwtl
push
test
bnd
mov
cmpsl
push
call
mov
subb
pop
xchg
sbb
jae
cs
push
inc
mov
sub
jg
push
mov
xchg
cmpsb
push
xchg
cmp
xor
xchg
or
leave
fistpl
test
nop
imul
call
or
mov
xchg
cmp
stos
pop
in
or
ret
fwait
sub
jle
fstps
scas
dec
add
ja
rorb
iret
dec
xchg
xor
outsb
insl
out
iret
add
mov
shrl
clc
inc
enter
adc
iret
mov
mov
fimull
mov
rcl
dec
jns
in
fcmovne
sub
pushf
imul
xor
mov
inc
xorl
add
add
push
pop
jb
mov
outsl
inc
push
lahf
push
ljmp
ret
js
adc
mov
cwtd
inc
ror
faddp
cmp
vlddqu
aas
inc
jecxz
imul
bound
sub
stc
xchg
insb
stc
rol
push
add
add
adc
sub
cmp
add
push
test
xor
pop
pop
pop
lcall
loopne
cmp
xor
pop
xor
imul
push
jl
sub
and
xor
xchg
mov
out
xor
popa
test
mov
fisttps
insl
in
enter
sbb
xor
dec
mov
or
inc
mov
mov
pop
ds
roll
dec
push
mov
jmp
mov
lock
iret
mov
inc
imul
push
es
ds
inc
outsb
push
in
pop
lret
pop
jne
aas
inc
push
mov
cmpsl
inc
int3
xor
shl
xchg
aaa
xor
mov
jae
cs
push
xchg
bound
out
mov
dec
push
fwait
andb
xor
into
jle
aaa
jnp
cli
sub
fdivrl
or
xchg
push
fidivl
pop
jne
mov
call
fiadds
repz
orb
mov
hlt
jns
xor
in
mov
das
pusha
shll
lret
lret
daa
jmp
fisttps
xchg
sbb
or
sub
js
sub
and
orb
jmp
movb
sub
sbb
jmp
and
testb
push
mov
stos
mov
loope
and
out
out
in
inc
sbb
xchg
int3
xor
mov
icebp
imul
movb
insl
pusha
lds
xchg
test
and
push
lahf
pop
dec
jbe
mov
cwtl
xchg
es
mov
jns
or
std
cs
icebp
xor
ja
xor
sbb
or
loope
nop
insb
cmpsb
shll
pop
outsl
adc
cmp
pop
fwait
jecxz
stc
call
lock
xchg
arpl
les
inc
push
addr16
mov
push
pop
mov
cmp
mov
pop
mov
pop
aas
mov
xchg
xor
pop
dec
mov
lret
loopne
sub
add
jne
mov
push
cmp
dec
dec
je
and
mov
icebp
cmpsl
imul
mov
inc
xor
add
mov
sbbb
or
inc
or
sub
rdmsr
cli
inc
pushf
xchg
xor
hlt
push
fwait
ds
lods
jo
xchg
xchg
ds
sub
sub
xchg
push
mov
dec
xor
mov
inc
xchg
xchg
jno
es
leave
xchg
cmc
das
subl
mov
pusha
cmp
mov
fldl
push
in
fdivrs
movsb
loope
add
jo
divl
or
xchg
jmp
lret
xchg
or
lcall
sti
sub
shrl
js
sbb
jb
pop
cmp
xchg
xor
repz
in
faddp
shrb
add
pusha
inc
jnp,pt
imul
pop
aas
je
jnp
push
dec
mov
push
inc
pop
and
sub
lcall
xor
xor
sbb
pop
jno
aad
mov
xor
dec
in
xor
scas
xchg
or
mov
dec
adc
dec
into
xchg
xchg
push
xchg
test
xchg
cs
int
ss
cmp
xchg
cltd
movsb
in
test
dec
rcrb
mov
insl
sbb
daa
imul
or
mov
aad
adc
dec
lret
imul
adc
push
out
decb
jecxz
dec
imul
ljmp
pop
loopne
sbb
jo
mov
or
pop
jb
push
dec
stc
adc
jl
inc
push
scas
imul
and
inc
in
mov
cli
movb
and
adc
cmp
fwait
mov
sbb
push
movsb
sti
mov
push
pop
imul
mov
cmpsl
dec
pop
gs
push
sbb
daa
jge
call
push
jb
sub
out
arpl
push
mov
jmp
add
pop
mov
or
sbb
push
call
mov
mov
lret
popf
insb
lock
fbld
lea
sub
dec
or
mov
into
bswap
sbb
adc
push
or
xor
out
out
popf
aas
jns
xchg
inc
in
mov
pop
sub
insl
or
jp
push
pop
daa
nop
flds
ret
fdivrl
les
fwait
vcvtdq2pd
into
rcr
and
in
lcall
lds
les
jne
es
cmc
add
dec
xchg
ret
sbb
out
cmp
movsl
mov
and
mov
ljmp
mov
push
in
xor
lret
mov
push
mov
call
bound
ss
xor
aaa
xchg
cltd
sbb
imul
arpl
xor
push
or
je
xor
cmpsl
mov
aam
mov
test
bound
imul
les
fwait
inc
pop
movsb
fisubs
cmp
xchg
in
ret
add
lods
out
dec
and
movsl
inc
movsl
clc
xchg
mov
xor
jge
cmp
add
push
dec
jl
pop
lret
xchg
stc
out
stos
cmpsl
mov
cmp
rep
jle
cmpsb
daa
add
imul
insl
or
mov
leave
hlt
ret
je
pop
les
xchg
or
test
add
addr16
mov
sub
scas
push
sahf
pop
and
xchg
das
lods
iret
xchg
mov
imulb
mov
je
paddusw
or
rcrb
xchg
lods
cmp
cmc
mov
sub
mov
xchg
mov
mov
add
inc
fwait
dec
int3
fwait
inc
rolb
rcrb
enter
sbb
push
xchg
and
sub
stos
lcall
or
ja
pushf
jb
jle
fiaddl
stc
push
bound
stos
lea
aad
pop
jo
jp
repnz
inc
sbb
xchg
cmp
mov
sub
mov
scas
ja
out
jg
lods
cmpsb
lahf
sbb
int3
mov
jp
jae
dec
mov
xchg
xchg
jae
pop
lret
stc
cmp
sbb
std
popf
jo
xorb
inc
scas
adc
mov
push
roll
jae
jl
ja
sub
sbb
jmp
mov
sub
or
ror
aad
dec
or
mov
inc
inc
add
push
fcomps
xor
fcomp
insb
inc
push
fmuls
or
std
mov
push
dec
das
jl
xchg
std
xlat
fstl
xor
add
in
insb
dec
jae
hlt
jnp
dec
dec
adc
sub
adc
jmp
mov
imul
iret
aaa
movb
or
push
popa
mov
movsb
push
jge
push
push
aaa
jg
ss
adc
jbe
out
inc
add
pop
fidivrl
jne
es
xchg
pop
stc
ljmp
cmpsl
lahf
outsb
pop
loopne
int3
adc
jmp
ss
inc
out
int3
dec
mov
lret
pop
popf
rol
inc
cmp
push
or
pop
bound
xchg
and
leave
adc
dec
lock
inc
scas
rorl
cltd
xor
jp
pop
nop
mov
or
insl
lods
xchg
mov
sbb
mov
push
lds
mov
in
popa
mov
movsb
pop
or
push
hlt
into
movsl
adc
in
test
lret
lds
sbb
aaa
inc
jae
or
jge
jb
mov
cs
rorb
dec
and
cltd
fisttpll
jle
fs
iret
cmp
fwait
aas
inc
mov
stc
adc
int3
insb
leave
fdivl
adc
xchg
stos
ficoml
mov
sub
xor
incb
pop
xor
mov
cwtl
push
ds
out
mov
adc
cmp
mov
sbb
sbb
dec
dec
mov
jnp
imul
mov
out
sub
and
mov
add
test
and
ljmp
sub
in
push
cmpsl
mov
xlat
movswl
adc
stos
dec
jbe
das
sbb
fcompl
xchg
xchg
pop
or
in
sbb
cmp
andb
stos
adc
fcoms
sub
cmc
or
lds
test
mov
xor
fbstp
aas
cmc
xor
xchg
inc
out
mov
rcll
subb
int3
dec
inc
push
or
andl
jecxz
sub
imul
lods
nop
adc
inc
adc
vorps
and
popl
es
movl
dec
stos
pop
and
or
jl
mov
jp
add
jnp
lret
jo
gs
scas
push
rcll
xor
add
test
decb
insb
lahf
pop
cmp
and
jp
ret
mov
pusha
mov
loopne
out
sub
jo
je
aad
pop
aaa
jmp
pop
mov
adc
ss
leave
mov
xchg
ja
or
mov
mov
pusha
test
jns
mov
push
pusha
insb
add
out
scas
imul
data16
mov
inc
or
outsl
xor
jae
dec
inc
out
iret
cmp
and
push
xchg
cmp
scas
sub
mov
data16
lds
xchg
test
daa
lods
inc
jbe
sbb
push
imul
inc
int
and
call
mov
or
shll
xchg
cmp
shll
in
in
imul
jg
fldt
mov
bound
outsl
mov
inc
xchg
aam
iret
inc
aad
jne
pop
es
or
addr16
jle
mov
mov
add
mov
lahf
inc
and
sub
pop
xor
jo
mov
xchg
inc
popf
cmpsl
dec
or
lea
aaa
cmp
std
dec
in
sbb
xor
jg
mov
shl
mov
adc
cmc
out
in
iret
sub
xor
notb
arpl
adc
cmc
enter
subb
add
lods
ss
dec
or
loope
sub
jge
mov
pop
lds
scas
ljmp
fucomp
int
and
stos
lock
mov
loope
lods
adc
pop
test
push
cmp
or
cmp
xor
cmpsb
loopne
or
cmp
jle
pop
in
cwtl
cwtl
lahf
xchg
xchg
sar
loope
aas
js
call
testl
lods
xchg
mov
mov
push
mul
ret
cmp
pushf
or
shrb
popa
ror
cmp
mov
xlat
lahf
cmp
ret
cmpsb
mov
sub
push
in
jmp
dec
ss
in
inc
push
mov
xchg
add
push
test
nop
pop
adc
imul
fwait
int3
jmp
popf
and
jle
orl
in
imul
test
shl
cli
aas
inc
pop
xor
lds
rclb
add
adc
lret
fwait
clc
push
clc
mov
std
push
sub
cmp
xchg
scas
dec
cmp
mov
and
push
pop
sub
inc
cmc
or
bnd
jge
lcall
push
rorb
push
movsl
pop
es
out
mov
sbb
xadd
xchg
out
jae
xor
rcl
rorb
cmpsl
sub
push
iret
mov
lods
inc
and
movsl
popf
xchg
mov
xchg
ficoml
out
or
test
sbb
xor
shlb
out
out
and
stos
push
jnp
jns
or
inc
mov
xor
ficoml
mov
fcmovne
cltd
call
jg
scas
insl
hlt
and
inc
pop
adc
cmp
lods
push
fwait
mov
ds
adc
jae
jmp
inc
mov
pop
inc
div
rorl
fdivrl
adc
mov
test
dec
comiss
pop
pop
and
cmp
out
xchg
xchg
popa
dec
lock
pop
pusha
mov
jae
notb
mov
add
jge
loopne
gs
outsl
mov
xor
mov
inc
aaa
jg
add
fadds
test
sub
and
jb
sub
leavew
push
or
push
sbb
std
sbb
shl
and
sub
test
inc
mov
scas
loopne
mov
loop
push
mov
aam
mov
jp
xchg
or
popf
mov
and
mov
sbb
lret
sbb
out
or
scas
push
aas
or
mov
pop
mov
ret
and
push
pop
inc
adc
int
icebp
iret
test
flds
mov
divl
in
sub
aaa
mov
mov
add
scas
ss
jmp
sub
pop
xor
xor
cmpl
outsl
sub
movsl
dec
push
int
loopne
jo
out
mov
stc
xor
test
mov
jl
cmp
inc
fdivs
pop
outsb
sub
sbb
xchg
out
jp
inc
dec
cltd
xchg
movsb
xchg
enter
pushf
pop
test
dec
inc
in
dec
addr16
pushf
adc
mov
pop
ss
cmp
negl
xchg
push
sub
iret
adc
pop
cld
bound
cmp
jg
xor
xor
pop
inc
xor
inc
add
out
push
stos
adc
roll
adc
jbe
cmp
add
jl
sub
push
loop
stc
xchg
add
lock
icebp
pop
jge
out
decl
ja
ljmp
xor
call
dec
lcall
mov
add
shl
jb
in
rcr
fimull
shr
push
lret
or
add
gs
stos
ljmp
jns
leave
cmc
sbb
sahf
out
pop
mov
jae
jb
cmp
movsb
inc
xlat
insb
jnp
push
xor
stos
sarl
ja
repz
inc
sarl
lods
push
fadd
inc
sti
sbb
out
inc
ss
aaa
jg
push
lret
sti
cltd
orl
jge
fucomp
xor
mov
sub
dec
cmp
lcall
pop
in
inc
inc
push
xor
cwtl
popl
loope
inc
movsl
mov
mov
sub
sbb
mov
xchg
push
es
push
insb
dec
pop
sahf
cli
push
dec
rol
sti
loope
add
ss
repnz
movsb
fsubl
shl
adc
push
jbe
pop
xlat
mov
add
jae
push
pop
xor
fistpll
dec
rcll
or
cmpl
jno
xchg
std
lret
es
sub
lret
repnz
shl
mov
and
test
adc
enter
adc
push
insb
dec
mov
and
inc
mov
repnz
xchg
dec
dec
fmulp
dec
sti
sbb
mov
xchg
test
mov
in
outsb
adc
int
movsl
xor
pop
jbe
and
adc
lret
and
push
pop
fwait
loopne
cs
push
mov
push
pop
sub
and
xlat
mov
jae
or
pushf
jb
jbe
int3
sub
ret
inc
test
mov
stos
fisttpll
sub
mov
fisttpl
movsl
add
or
xchg
cmp
fisubs
xchg
xchg
int
out
lods
aam
jl
dec
jge
je
or
addr16
mov
mov
incl
mov
sub
les
out
pop
aad
inc
scas
imul
ds
das
popf
jb
adc
inc
xchg
mov
push
mov
daa
cmc
into
cmp
or
cvttps2pi
jno
jnp
cltd
dec
inc
dec
inc
aas
cmp
popf
ss
jnp
je
add
call
rcrl
sti
fbstp
into
pushf
nop
adc
cmc
loop
es
cmp
jno
std
xor
pop
add
sbb
stos
push
test
push
xchg
aaa
jns
fs
fwait
jl
int
xchg
mov
lock
or
xchg
scas
gs
dec
outsb
cmpsl
int3
sub
inc
dec
add
outsl
mov
cmpsb
xor
ja
aad
pop
andb
mov
int3
xor
sub
pusha
pop
pusha
dec
iret
sbb
sbb
sub
lods
sub
test
push
and
cltd
ds
mov
adc
add
cmpsb
sbb
test
cmp
sarl
arpl
mov
mov
sub
outsl
xchg
ret
das
in
dec
push
xchg
in
cmp
jg
lods
sti
icebp
sbb
sbb
rcrb
push
dec
stos
popa
sbb
pop
pop
test
addr16
shl
je
jae
inc
push
or
mov
pop
mov
cmp
or
nop
je
incl
scas
xchg
mov
mov
sqrtps
ljmp
popa
push
es
or
and
fsub
dec
outsb
mov
iret
pop
or
punpckhdq
cmp
xor
mov
xchg
add
lock
out
fidivrl
fsubrs
xor
rorl
mov
sbb
push
int3
add
cmp
pop
test
or
mov
xor
mov
mov
out
pop
aas
daa
pop
dec
pop
xlat
adc
ja
cmp
lret
mov
xchg
ja
cltd
jns,pt
enter
rcr
call
pop
ss
inc
addr16
jg
repz
mov
push
lcall
xchg
int3
dec
mov
jmp
sbb
lods
xchg
out
rcrl
pop
adc
shr
mov
movsl
push
sub
hlt
cmpsb
test
lea
cmpsb
push
popa
or
xor
xchg
ljmpw
jnp
jecxz
xor
lds
and
adcl
cld
mov
jl
cmp
push
lret
push
inc
dec
xor
push
mov
adc
or
jge
xlat
pop
and
or
mov
fimull
aad
hlt
jle
inc
or
sbb
int
out
mov
aad
gs
stc
mov
adc
daa
xchg
mov
movsb
out
dec
add
pop
sub
xor
xchg
shl
lret
ljmp
cltd
in
cli
pop
aaa
dec
sbb
jae
or
mov
adcl
scas
jae
in
mov
ja
lds
ljmp
adcb
xor
ss
inc
inc
jb
int
pop
cli
mov
jg
adc
addr16
push
les
mov
jg
cmp
pop
leave
lods
and
cmp
cmp
addr16
cli
rorb
mov
cli
mov
mov
add
shrb
sbb
lock
movsb
sbb
push
ss
mov
roll
test
inc
jecxz
jp
pop
mov
sbb
fs
xchg
jnp
jp
into
jl
push
sbb
mov
jne
add
ja
adc
icebp
icebp
notl
fistps
or
fwait
arpl
inc
pop
xchg
sbb
fcoms
xorb
rcrb
shrb
in
je
add
int3
cmp
or
mov
adc
push
adc
mov
push
aam
push
ret
rcll
sti
enter
xchg
jmp
jp
adc
inc
movsl
mov
movl
jns
mov
popf
or
sbb
data16
iret
cmp
aas
pop
cmp
inc
cltd
icebp
adc
out
cs
xchg
mov
xchg
push
jne
add
scas
or
rcl
xchg
in
push
ds
dec
mov
leave
dec
push
mov
and
popa
aam
dec
in
mull
lret
adc
sub
mov
loop
pop
cmp
mov
mov
mov
cmp
bound
xor
mov
xchg
inc
mov
push
filds
mov
adc
mov
inc
pop
or
pop
out
jecxz
adc
mov
lret
int
inc
sub
mov
push
cwtl
mov
js
push
out
xchg
sub
clc
push
call
mov
push
cwtl
mov
js
push
out
xchg
sub
clc
push
call
mov
push
cwtl
mov
js
push
loop
xchg
sub
stc
push
jmp
mov
push
cwtl
ss
js
push
xchg
dec
push
mov
fsts
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
or
cmp
add
or
cmp
dec
fcmovnu
jmp
sti
jns
mov
cltd
sub
pop
fldcw
jnp
mov
fwait
jns
sub
pop
jmp
sti
jns
mov
cltd
sub
pop
fldcw
jnp
mov
mov
ss
sbb
sub
push
call
pusha
xor
adc
jl
mov
mov
fists
inc
mov
pop
es
out
xchg
push
sub
cmp
mov
cmp
pop
rcll
mov
dec
aad
inc
cs
test
iret
out
jmp
cmpsb
cltd
mov
sbb
inc
cmp
out
data16
push
rcrb
jne
shrl
and
hlt
hlt
imul
inc
adc
pop
int3
call
cmc
int
cs
stc
cwtl
pop
and
mov
pop
in
call
mov
jnp
fdivrl
push
cmp
sahf
scas
jge
js
mov
cltd
sub
pop
fldcw
jnp
mov
fwait
sbb
dec
fistpl
imul
cltd
inc
rclb
movsl
sub
jns
mov
stos
inc
ret
jg
sub
sub
mov
dec
test
push
mov
out
jno
insb
test
sub
sub
sbb
inc
rcll
leave
pop
fldcw
jnp
mov
fwait
sbb
dec
fistpl
imul
cltd
sub
pop
fldcw
jnp
mov
fwait
sbb
dec
fistpl
imul
shlb
add
jo
xor
jnp
pusha
add
ljmp
arpl
inc
ret
fimuls
scas
fisttpl
mov
add
cmpsb
cld
xor
inc
lcall
push
and
notb
add
ljmp
pop
call
mov
lret
movsl
loopne
int
adc
icebp
sub
repz
jge
mull
jno
cld
movsb
and
inc
movsl
and
shlb
push
sarl
enter
das
outsl
fnstenv
mov
lret
pop
pop
mov
mov
sbb
lods
dec
cmpsb
xchg
shl
inc
dec
mov
push
jbe
xchg
int
cld
ss
dec
sub
ds
jge
fldcw
jmp
mov
rcrl
lret
rclb
jmp
iret
push
subl
aaa
sbb
lcall
test
adc
ds
push
add
mov
test
cmpsl
daa
inc
je
xor
push
inc
in
jmp
test
dec
mov
xor
enter
inc
xchg
inc
or
movsl
call
jne
out
pop
pushf
or
lock
dec
add
mov
dec
or
data16
push
call
sbb
ljmp
lret
push
fs
orl
push
sbb
loope
jb
mov
sbb
testb
mov
jge
ret
mov
xchg
mov
shlb
inc
sub
fsubl
pop
sarl
or
push
cmpb
repz
stos
pop
adc
jge
jge
pop
sbb
addr16
pusha
stc
push
ja
add
mov
pop
cs
or
jl
mov
out
or
cmp
call
or
jle
js
xor
inc
xlat
pop
roll
mov
int
test
dec
leave
xorl
and
loope
dec
clc
sbb
cmpsl
xchg
sub
mov
xchg
pop
stc
inc
inc
add
sbb
pusha
mov
pop
sbb
or
shrb
cli
dec
adc
fisubrl
orl
hlt
mov
idivb
push
cmp
mov
jbe
push
lcall
push
pop
cld
subl
push
test
xchg
stc
xchg
xor
jbe
test
rclb
inc
jbe
mov
or
push
fwait
and
jecxz
jg
dec
int3
popa
pop
in
mov
fs
sub
hlt
stos
inc
add
test
push
std
mov
nop
fsubrp
xchg
sub
aad
adc
arpl
cwtl
dec
clc
fs
sub
xor
mov
out
mov
pop
fucom
les
xchg
pop
xlat
pop
ldmxcsr
mov
sbb
je
aas
aas
icebp
aaa
movsb
add
or
insb
faddl
aam
negb
stc
sub
add
pop
sub
fcoms
fcoms
aad
push
mov
push
fidivrl
nop
lret
mov
data16
ljmp
jae
clc
fs
aas
cmp
inc
lret
je
hlt
mov
lods
pusha
xlat
mov
ljmp
pop
push
mov
sti
jno
outsb
mov
insb
or
call
popf
push
cmpsl
out
mov
mov
xchg
outsb
dec
ret
and
mov
mov
aam
dec
xchg
push
stos
mov
jae
mov
ljmp
lret
loope
pop
fsubs
shl
mov
imul
pop
mov
scas
cwtl
icebp
ljmp
mov
jns
push
call
out
pop
xlat
nop
mov
sbb
es
dec
xchg
outsl
sahf
push
pop
mov
loope
push
jb
cmp
shrl
in
xorl
sbb
xor
sbb
adc
nop
mull
jns
jns
ja
stos
cmp
pop
mov
nop
sbb
cmp
out
repz
jecxz
xchg
test
shl
push
loope
pop
sub
iret
cltd
push
test
adc
std
sub
sbb
push
mov
scas
stos
adc
adc
lock
gs
inc
jnp
cs
dec
push
mov
stos
lds
cmpsb
sub
shrb
jnp
mov
jmp
mov
mov
aam
lock
jecxz
pop
xchg
mov
mov
push
adc
out
jmp
rcrl
or
loope
push
xchg
and
clc
hlt
xchg
and
rolb
gs
dec
sbb
push
rclb
push
stos
loopne
mov
pop
xchg
pop
or
mov
rcr
mov
pop
mov
jb
pop
push
mov
scas
jb
mov
lods
in
les
mov
xor
aas
inc
or
xchg
cld
adc
fcompl
or
inc
jg
add
inc
cmpsb
repz
mov
mov
inc
mov
mov
in
outsb
repnz
adc
push
or
and
dec
xlat
mov
cmp
aam
and
xor
stc
js
mov
das
fidivrs
cmpl
sbb
gs
cmc
dec
popf
pop
mov
push
pop
add
sub
mov
dec
ficomps
aam
fs
test
fcmovnb
je
ret
out
cwtl
ja
and
mov
or
leave
lea
sbb
or
or
test
adc
push
cmp
add
roll
ja
mov
outsl
loop
mov
fstps
cmpsb
sub
inc
dec
xchg
es
test
sbb
repz
xchg
push
int3
std
out
mov
pop
mov
dec
addr16
dec
enter
rcrl
shlb
add
jle
outsl
clc
xchg
call
mov
cld
popa
xchg
test
push
clc
enter
jno
or
sbb
xor
sub
rclb
loop
lods
icebp
push
push
scas
shll
dec
xchg
push
push
popa
jg
aas
and
ret
mov
xor
push
imul
jo
jle
fisubl
fmuls
inc
shl
fmull
mov
mov
sbb
ret
push
jno
sbb
xor
out
cld
in
and
fwait
cmpsl
jae
iret
jo
test
fwait
mov
lahf
xor
push
push
dec
mov
rorb
push
push
lret
pop
and
pop
jge
call
out
push
mov
fists
loopne
dec
gs
stos
mull
and
sbb
imul
ffree
loope
mov
inc
aaa
in
mov
adc
sub
pusha
or
mov
jno
aam
ljmp
test
je
cmpsl
cmp
fcoml
dec
mov
push
adc
mov
mov
and
inc
popa
xlat
hlt
pop
in
faddp
jo
push
arpl
adc
faddp
mov
out
es
sbb
xlat
lea
ret
fistpl
pop
mov
inc
cltd
popf
pop
and
mov
icebp
dec
shrl
fbstp
and
not
cmpsb
mov
leave
xlat
mov
mulb
out
mov
add
pop
ret
cmpsb
adc
push
lret
sarb
lds
pop
cltd
pop
push
or
cmp
push
jb
cld
cmp
aas
sub
decl
cmp
add
xchg
movsl
dec
pop
push
pusha
enter
sub
add
mov
gs
pop
add
dec
scas
or
or
dec
dec
jae
and
sahf
push
mov
pusha
xor
sbb
fisttps
scas
mov
rcrb
popf
or
stos
pushf
mov
ret
or
fisubrl
imulb
mov
xchg
lock
fsubr
lcall
lock
xchg
imul
int
adc
test
outsb
cmpsl
les
sub
mov
jp
add
ja
or
movsb
dec
and
test
cmpsb
icebp
sbb
cld
jmp
cmp
cmp
arpl
lock
cltd
add
pop
and
shrl
or
xor
jno
addr16
push
sub
and
bound
test
push
mov
loopne
pusha
into
and
mov
jp
les
cwtl
nop
mov
mov
push
cmp
add
loop
cltd
repnz
inc
xor
ds
test
push
pop
sub
push
sti
xor
movsl
bound
xchg
or
inc
loop
stos
in
mov
xor
push
pop
inc
in
and
repnz
out
movsl
ljmp
lret
pop
jno
es
sub
jno
scas
imul
into
xchg
stos
mov
mov
mov
ja
and
and
das
pop
inc
fsubrl
lock
adc
int3
test
cmp
test
sub
cmp
test
dec
int3
loopne
or
cmp
sbb
adcb
lods
dec
push
ljmp
cli
scas
push
fwait
pop
and
jg
popa
mov
sbb
or
js,pn
iret
jle
pushf
pushl
xor
negb
dec
lcall
pop
fucomi
mov
sub
jne
jle
cmp
push
repz
sbb
push
and
ret
sbb
fcmove
sub
test
adc
cmpsl
mov
and
push
adc
test
sbbl
mov
jmp
sbb
jae
mov
leave
sbb
adc
dec
imul
cmp
insb
mov
loop
cs
nop
or
mov
fisttpll
or
pop
cmpsb
xor
sbb
and
cmp
test
push
push
pushl
test
mov
sbb
outsb
test
es
repz
enter
icebp
mov
imul
jecxz
push
roll
jmp
mov
sbb
mov
in
in
cmc
movsl
nop
inc
and
cld
mov
cmpsb
popa
ret
mov
sete
addr16
pushf
mov
in
test
repz
adc
scas
mov
testb
sbb
movsl
js
and
mov
add
sbb
ja
jbe
adcl
push
daa
jo
mov
xchg
loope
mov
lds
push
push
arpl
push
mov
shrb
call
addr16
adc
hlt
aaa
test
dec
cs
sti
ret
xchg
pop
enter
push
push
pushf
inc
js
inc
xlat
in
scas
mov
loope
pop
jecxz
cs
clc
or
jg
add
adc
xchg
cwtl
cmp
scas
dec
sub
pop
stc
inc
xchg
xchg
out
out
leave
mov
or
fistl
scas
xchg
add
sub
xor
popf
push
pop
cld
sbb
pop
outsl
cmp
jae
js
xor
cmp
and
movsl
xor
aad
into
xor
shll
loopne
push
lret
lcall
call
inc
cltd
jno
and
xor
cmp
int3
or
pusha
data16
iret
push
das
cmp
subl
shrb
mov
leave
cmc
jp
add
xor
in
out
sbb
stc
mov
and
popf
lcall
and
sti
cli
and
inc
hlt
loopne
sbb
xor
mov
movsl
movsl
loop
es
popa
xor
mov
fnstcw
sub
inc
xchg
repz
rorb
clc
sbb
push
rcrb
pop
scas
pop
es
add
ret
pop
jmp
and
adc
jle
les
ret
clc
or
bound
adc
filds
mov
movsb
or
stos
mov
fwait
ljmp
idivb
test
sbb
dec
jecxz
or
push
shl
divl
int3
inc
inc
xchg
popf
mov
cmp
inc
dec
mov
es
dec
and
jns
test
leave
push
push
adc
push
pop
cmpsb
adc
in
xor
sti
lahf
xor
data16
sti
mov
stc
fildll
lods
aam
dec
push
add
fadd
lds
sbb
dec
mov
fwait
cwtl
inc
push
jg
adc
pop
loopne
movsl
push
andl
mov
push
sub
bound
jl
xor
aas
mov
xlat
test
gs
pop
pop
data16
push
testb
dec
je
push
popf
cmp
jno
xchg
jecxz
stos
adc
mov
mov
cld
cmp
test
cmpsb
pusha
inc
sahf
iret
adc
push
mov
sub
add
mov
mov
mov
negb
sbb
sub
mov
outsb
fs
leave
add
push
out
adc
cmp
addr16
lcall
and
lock
jnp
call
rcrl
sub
mov
idivl
ret
jge
addb
in
mov
mov
mov
js
push
lcall
cmp
cmpsl
imul
mov
popa
stos
cwtl
leave
pop
lret
aad
das
jmp
push
adc
sbb
pop
scas
imul
xchg
adc
xchg
sbb
test
addr16
out
push
jne
push
inc
or
add
xchg
ret
push
adc
std
insl
cmc
fsubl
sub
adc
cwtl
fisubrs
mov
xor
aad
pop
pop
enter
push
lods
cmpsb
lods
xor
aad
fsubrl
fs
xchg
push
inc
xchg
sbb
stos
push
ss
and
mov
dec
adcb
and
pop
pop
cmp
in
pop
mov
leave
add
xchg
dec
jp
pusha
mov
cmp
rclb
out
rcl
testb
movsb
sbb
adc
jnp
cmp
cli
pusha
mov
mov
es
fwait
mulb
fdivrl
shlb
adc
mov
xchg
lret
das
adc
into
inc
mov
out
mov
jo
nop
pop
cs
cmp
mov
outsl
xchg
dec
mov
inc
add
pop
push
mov
jmp
cwtl
lret
and
in
test
or
cltd
push
je
jno
sub
hlt
adc
cmpsb
xchg
lods
les
inc
aaa
mov
inc
add
in
popa
pushf
pop
enter
out
addr16
cmp
and
loope
aam
adc
push
jne
fsubrs
hlt
int3
pop
xor
in
push
lea
or
gs
leave
mov
mov
std
test
sbb
movsl
mov
fiaddl
rclb
and
pop
lods
addr16
lock
in
pop
add
cltd
paddsb
stc
outsb
dec
stos
cmp
mov
pop
add
js
mov
mov
dec
lcall
fs
adc
call
push
pop
mov
push
xchg
and
dec
imul
js
jnp
add
xchg
xchg
and
out
fildll
out
in
inc
xchg
rcrb
cs
or
xor
loope
mov
pop
loope
rcrl
inc
sarb
pop
cld
movsl
push
outsb
cmp
jae
jg
in
sti
push
fildll
dec
cltd
js
pop
scas
xchg
jg
aad
std
mov
cmp
adc
jle
mov
or
dec
sar
pop
ret
jb
jle
dec
mov
or
pusha
lahf
hlt
inc
jle
shlb
inc
fistpll
dec
jne
ret
mov
adc
push
mov
iret
les
mov
or
out
scas
and
or
xor
push
or
adc
rcrb
xor
mov
sub
inc
mov
dec
insb
out
dec
xchg
idivb
hlt
jbe
add
movsl
fiaddl
cltd
repz
sub
imul
xor
enter
pop
jl
push
mov
inc
lods
inc
imul
out
ljmp
or
test
loopne
sti
testb
jmp
fbstp
fsubrl
lock
push
ret
in
popa
pop
lahf
push
xor
cld
roll
dec
cmpl
jmp
aad
popa
or
testb
outsb
xor
mov
adc
shlb
jns
out
mov
adc
xchg
sub
int3
xchg
mov
pop
push
stos
or
or
std
addb
mov
pop
cmp
int3
mov
add
gs
add
repz
dec
xchg
ret
push
ds
repz
pop
jge
cmp
jne
xor
outsl
dec
out
xor
jg
test
out
fcoms
loopne
aaa
int3
lds
pop
jae
jnp
sahf
fwait
cmc
adc
repnz
fildll
cs
ds
data16
and
dec
sbb
insl
jnp
add
clc
mov
es
mov
fs
nop
jmp
int3
sub
inc
lods
ret
xchg
mov
movsl
pusha
std
les
stc
mov
js
inc
aam
ret
lds
loopne
adc
insl
das
outsl
push
inc
in
pop
pop
outsb
lods
add
and
or
mov
mov
xchg
lret
xor
xlat
dec
mov
jl
jg
jnp
dec
loop
lahf
lds
adc
push
push
outsb
cmp
les
adc
xor
push
in
or
call
pop
add
jp
mov
orb
sbb
mov
sub
test
subl
cli
loop
jl
xchg
sbb
jl
mov
xlat
das
jne
loopnew
dec
and
divl
sub
int
cmp
fsubl
imul
jnp
mov
adc
nop
call
pop
inc
dec
push
into
ret
icebp
push
push
push
xor
mov
pop
xor
shrl
xor
cmp
pusha
cmpl
ljmp
fmuls
jmp
nop
sbb
push
push
push
xchg
fsubs
pop
jl
jg
mov
arpl
sbb
in
jge
pop
cmp
or
push
or
mov
rorl
out
or
xorb
push
mov
mov
orb
adc
or
repz
mov
cld
repnz
repnz
pop
inc
mov
rcll
cmpsl
lods
push
leave
push
and
ror
fs
xor
nop
mov
mov
push
xor
add
sub
das
lock
aas
jo
xor
jae
cltd
std
shr
mov
fs
in
jnp
cmp
mov
mov
xchg
xor
xchg
sub
fistpll
jp
mov
enter
xchg
nop
and
aas
sbb
rolb
inc
jae
enter
fidivrs
lret
scas
xor
mov
jg
push
or
jmp
xchg
fidivl
xchg
pop
jb
mov
inc
adc
push
mov
inc
call
cmp
push
test
repz
dec
cltd
or
add
cmp
movsl
in
pop
inc
loopne
leave
lock
pop
ret
add
push
ljmp
xchg
subb
addl
cmc
push
rcrb
adc
es
pop
test
popf
and
std
and
dec
setl
inc
cmp
daa
and
daa
out
sbb
cli
or
data16
fwait
sbb
xchg
mov
data16
setg
and
fcomi
push
pop
popf
cmp
mov
sbb
jg
jge
pop
xrelease
xchg
xor
and
mov
test
cmpl
xor
mov
mov
jl
xor
mov
bound
fwait
test
jecxz
fldcw
xor
push
lret
push
imul
dec
std
fwait
cmpsl
pop
sahf
in
popf
sbb
mov
fidivrs
out
adc
and
gs
and
bound
repnz
clc
bound
dec
nop
repz
cmp
inc
add
mov
mov
jp
mov
or
mov
lcall
popa
pop
pushf
mov
add
pusha
xchg
jmp
cmpsb
rcrb
movsb
or
jge
add
nop
jecxz
cmp
dec
jne
dec
inc
xor
mov
fs
insb
hlt
or
jle
add
arpl
jp
stos
sub
lret
inc
add
xor
scas
icebp
xor
jae
mov
and
stos
sbb
add
inc
xor
out
xchg
or
pusha
cmc
push
jbe
cltd
mov
adc
push
jle
mov
loop
les
cmp
arpl
push
or
sbb
push
jge
in
ljmp
fwait
mov
faddl
xchg
cltd
mov
popf
push
jb
jg
cmp
daa
outsl
pop
cld
jns
mov
push
mov
adc
mov
test
pop
mov
stos
aam
divb
in
add
cmpb
insl
pusha
xchg
xor
in
mov
sti
cmpl
test
mov
sahf
out
mov
movsl
repz
sbb
sbb
rcrl
add
ret
cltd
sub
or
stos
mov
in
ljmp
dec
adc
movsl
inc
mov
test
push
repz
mov
inc
pop
rol
dec
mov
lret
sbb
negb
iret
jp
aam
sbb
outsb
cwtl
or
notb
hlt
cs
mov
sub
pop
fldcw
jnp
mov
fwait
sbb
dec
fistpl
imul
cltd
sub
pop
fldcw
jnp
mov
fwait
sbb
dec
fistpl
imul
sbb
leave
pop
pop
imul
stc
mov
mov
pop
jmp
sti
jns
mov
cltd
sub
pop
fldcw
jnp
mov
fwait
mov
sub
cmpsb
fwait
xchg
mov
inc
or
dec
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
push
mov
call
xor
pop
ret
mov
add
push
mov
fstl
mov
adc
inc
rclb
and
adc
pusha
lock
inc
rclb
mov
adc
inc
rclb
and
adc
pusha
lock
inc
rclb
sahf
adc
jo
jne
pusha
mov
xchg
add
roll
stc
cld
out
cmpsb
cmpsl
mov
inc
pop
mov
mov
pop
in
out
sub
sub
jg
insl
out
loopne
lock
cmp
cmp
sbb
out
xchg
aaa
and
push
rolb
pop
xor
fnstcw
and
or
rcrl
test
ret
ret
aas
push
shll
add
pusha
cltd
test
mov
outsl
xor
fcomi
repz
insl
in
pop
pusha
rorb
and
cmp
xor
lock
rcll
movsl
dec
enter
gs
stos
jnp
fs
aad
pop
jne
lock
test
and
aad
shlb
mov
addb
adc
pusha
lock
inc
rclb
mov
adc
inc
rclb
dec
shl
movb
test
lahf
xor
int3
push
fnstenv
push
out
xor
popa
les
add
inc
test
xchg
push
push
in
fdivrl
adc
xchg
adc
mov
je
movsl
or
jo
inc
rclb
mov
adc
inc
rclb
and
adc
pusha
lock
inc
rclb
mov
adc
inc
rclb
and
and
xor
outsb
aam
stc
clc
cs
mov
sub
jl
pop
xchg
sbb
xchg
xor
hlt
adc
mov
cs
fldlg2
bound
lahf
rorb
enter
imul
mov
mov
in
push
loope
into
mov
bound
mov
inc
mov
outsb
testl
push
xchg
movsb
lcall
sahf
push
xadd
jb
dec
jl
sub
push
cmp
out
push
in
test
cwtl
xor
aad
sbb
cmc
loope
popf
push
pushf
outsl
mov
popa
mov
aam
sbb
stos
xchg
dec
repz
xchg
inc
sbb
xchg
xchg
cmp
mov
lret
jne
roll
push
ds
jb
adc
out
gs
arpl
jl
sub
lahf
push
lds
mov
xor
popa
pop
push
inc
mov
cmp
insb
mov
and
cs
jb
cmp
int3
sti
repz
inc
xchg
xlat
fsubrs
data16
iret
add
nop
inc
push
xor
adc
repnz
pushf
movsb
cmp
addl
jnp
dec
cmp
add
jbe
popa
sbb
lock
and
shr
cld
cmp
xchg
in
or
cltd
adc
lret
andb
inc
lea
outsl
sbb
sarb
stc
imul
jbe
fwait
loop
and
mov
sbb
xchg
xchg
dec
pop
pmullw
ljmp
test
scas
rolb
pop
xchg
pushf
pop
cmp
push
mov
cltd
int3
adc
jb
lds
cmpsb
jno
push
inc
es
repnz
aas
and
sahf
js
push
dec
mov
stos
popa
push
enter
cmp
in
or
mov
xchg
jne
orl
mov
xchg
lcall
insl
outsl
inc
ss
lcall
or
stc
mov
sub
out
adc
int3
imul
xor
in
xchg
push
dec
and
lret
outsl
test
scas
lcall
mov
pop
mov
mov
scas
fidivl
inc
fiaddl
xor
test
cli
or
imul
les
lret
xchg
mov
pop
mov
lock
sbb
cli
or
xlat
cmp
je
adc
xor
out
push
xchg
dec
cmpsl
ds
loopne
fimull
inc
testb
mov
jnp,pn
adc
sub
mov
clc
ss
jmp
inc
out
push
push
xor
bound
jecxz
mov
xchg
test
mov
fsubs
adc
shlb
nop
imul
cmpsl
mov
xor
hlt
leave
das
mov
fwait
imul
call
jg
xchg
cmpsb
cli
ret
ja
and
lret
jmp
sbb
jl
jbe
mov
aad
mov
mov
xchg
test
stos
call
ss
cmp
jl
pop
mov
adc
xorb
mov
es
xchg
pop
outsl
mov
pop
cltd
lea
xor
sub
pushf
xor
jge
dec
roll
fs
jmp
pop
and
mov
rol
leave
lock
jecxz
push
cld
pop
cld
or
push
mov
pop
jns
rclb
dec
cmpsb
int3
inc
clc
popf
mov
rorb
js
dec
xchg
mov
out
test
test
ret
out
notb
sbb
or
stos
xchg
cmpsb
cmp
jnp
sti
mov
mov
pop
and
arpl
xchg
adc
sub
xor
and
mov
fldt
dec
lods
stos
scas
and
mov
rcrb
dec
cmp
cmp
sbb
inc
adc
sub
lcall
mov
fsub
insl
or
add
sbb
pop
mov
mov
insl
or
adc
insl
mov
lods
ret
jge
or
loopne
mov
xor
inc
xchg
xorl
loop
push
sbbl
test
daa
out
popf
imul
sar
loop
mov
push
shlb
ficomps
xchg
xchg
out
fists
scas
dec
jp
jecxz
in
xor
xor
test
fildll
es
xchg
fisubs
push
rcrb
test
sub
push
dec
ret
pushf
dec
mov
pop
lret
mov
mov
popf
sub
std
mov
loop
scas
push
dec
shlb
or
sbb
shll
out
adc
lahf
cltd
push
jl
test
mov
xor
ja
sub
adc
iret
or
xorb
repnz
lret
imul
dec
dec
sub
fst
test
aam
and
test
aad
jmp
jl
mov
aad
loop
ljmp
xchg
sbb
test
mov
loope
and
xchg
xchg
iret
xchg
loope
test
scas
inc
test
mov
adc
cmp
mov
inc
mov
and
sbb
gs
mov
sahf
mov
sbb
cmp
mov
imul
mov
sub
cmp
in
popa
adc
xor
cmpb
cmp
outsl
dec
xchg
push
push
test
fists
lods
mov
lcall
mov
fisubs
xchg
cld
sub
jecxz
cwtl
push
xor
mov
inc
sbb
jg
sbbb
sarb
dec
adc
push
jle
jg
mov
mul
pop
out
xor
xlat
cmp
popf
and
cmp
mull
adc
jle
xchg
aad
xor
outsl
daa
or
xor
adc
push
jnp
jl
cmp
jae
adc
mov
push
push
lret
and
loope
data16
push
push
inc
sbb
pop
in
push
cltd
scas
xchg
notb
imul
dec
mov
pop
or
popf
or
jge
and
adc
ja
inc
pop
fstl
sub
call
cmp
divl
iret
pusha
mov
lret
mov
scas
enter
sub
push
icebp
test
jns
push
or
pop
mov
arpl
jmp
lods
cmp
jmp
das
xor
inc
fisttpll
xchg
loopne
int
pop
arpl
jno
fistpl
hlt
mov
push
cld
sub
mov
jne
mov
mov
bound
xchg
scas
mov
js
arpl
cmp
pushf
xlat
shrl
lahf
or
push
imul
lea
out
ret
or
jo
addl
lret
dec
fsubrp
daa
ja
dec
pusha
xchg
xor
push
shrl
adc
xchg
leave
mov
add
dec
fdivl
sub
imul
and
lods
fbld
or
sbbl
adc
push
testb
add
xor
test
add
xchg
and
popf
mov
sbbb
loop
fsubr
pop
in
rorb
sarl
jno
pop
mov
pop
jnp
mov
icebp
pop
dec
mov
lret
rcrl
xchg
int
ljmp
daa
popa
adc
cmc
pop
pop
rcll
push
cmp
test
movsl
nop
inc
aad
xor
mov
sbb
sub
xor
push
adc
test
or
push
dec
inc
in
cld
jns
push
inc
rol
and
imul
xchg
sbb
dec
jae
jl
stos
movsl
or
mov
movsl
dec
xor
add
insb
inc
mov
and
jo
mov
add
xlat
push
and
test
in
add
je
or
or
xor
loope
fdivrl
in
cmp
mov
push
xor
imulb
sbb
imul
jo
test
jne
ret
nop
add
sti
pop
jae
negb
sub
outsl
push
addr16
ss
arpl
xchg
ret
loope
push
hlt
mov
pop
sub
scas
js
rorb
lret
and
push
mov
sbb
repz
test
jnp
lret
inc
pop
xbegin
scas
cs
es
mov
movl
divl
cmp
cltd
mov
test
pushf
lret
inc
fbld
icebp
jae
cli
dec
mov
pop
mov
and
adc
inc
mov
add
add
lods
arpl
cwtl
mov
pop
cmc
into
pop
mov
pop
mov
lea
pop
loop
xchg
or
jg
scas
jae
xchg
pushf
add
pop
inc
cmp
scas
jnp
imul
icebp
inc
sub
and
insl
sub
xor
lret
mov
push
push
sub
in
rcll
jmp
or
and
push
stos
cmp
andl
xchg
jg
insl
fidivrs
mov
shrb
add
or
test
pop
jne
push
sub
pop
add
cmp
or
les
xor
pop
cmp
xchg
mov
int3
add
push
mov
jb
dec
cmp
adc
iret
xor
dec
pop
or
insb
bt
ja
in
dec
jmp
mull
ret
or
mov
add
xor
adc
xor
ret
fstl
in
in
lcall
divl
sub
xchg
inc
test
mov
pop
xor
test
pop
fldenv
fiaddl
adc
jno
xor
sbb
mov
jnp
ficoms
fcom
pop
daa
and
pop
ret
aam
loop
lds
push
dec
jo
mov
adc
test
lea
push
sub
push
je
dec
hlt
xchg
stc
fiadds
add
adc
lods
push
push
subb
xchg
aaa
adc
jle
sub
sbb
imul
incb
cmp
cmc
int3
xor
out
pusha
and
in
cltd
pop
fsubl
pop
out
stos
in
xor
insb
mov
xor
add
cs
je
and
mov
and
test
addl
fldcw
dec
adc
les
pop
pop
repnz
mov
imull
push
pop
das
out
lock
scas
mov
lahf
cs
and
mov
sbb
ret
fsubs
rcrl
aas
cltd
cmc
sti
stos
mov
push
mov
mov
add
xchg
push
fs
leave
jge
sete
jge
push
fwait
lods
adc
je
lret
ds
inc
inc
shll
add
xor
outsb
xor
sub
add
fdivr
xor
out
push
adc
sbb
mov
fstps
sbb
mov
sub
js
insl
ss
inc
cmp
push
hlt
rcr
repz
inc
jl
daa
pop
enter
and
and
lahf
sti
pop
sbb
jle
cmp
xchg
add
mov
jecxz
add
cmp
mov
push
xor
xor
mov
pop
fwait
dec
stc
cmpl
lahf
mov
gs
adc
stc
or
aad
pop
add
adc
dec
xchg
das
xor
aad
or
loopne
inc
mov
sbb
pop
adc
push
pop
es
loopne
jns
dec
addb
mov
push
cmp
sub
or
aam
outsb
sub
ret
testl
mov
jo
loopne
test
add
addr16
add
sub
sub
leave
aad
fistps
dec
xor
fmull
outsb
out
lret
iret
fcmovbe
je
xor
fwait
mov
or
repnz
sbb
das
pop
and
jge
dec
outsb
in
dec
adc
cmp
mov
pop
fcoms
and
jmp
sbb
push
add
es
iret
test
scas
test
ret
adc
jmp
aad
in
faddl
lods
sub
mov
cli
cli
lcall
xlat
dec
mov
or
fsubs
cmp
out
lret
xchg
and
mov
divl
cmpsb
fdivr
pop
in
mov
lahf
les
stos
sbb
xchg
jmp
cmp
mov
pop
pop
imul
mov
xchg
sti
je
jg
jmp
aaa
cmp
jg
adc
inc
aad
or
dec
push
sbb
scas
dec
std
push
ret
add
pop
or
cmp
xchg
mov
push
lock
fcoml
push
hlt
fs
xor
test
insl
icebp
mov
mov
sarb
cmpsb
jmp
outsb
sbb
adc
mov
jl
jl
lcall
lret
es
push
pop
mov
xchg
xor
pushl
call
adc
dec
rol
loopne
add
int3
sbb
mov
or
test
test
and
cmp
mov
std
je
mov
mov
xchg
rol
rcll
and
lds
and
lret
cmp
push
mov
cwtl
lea
mov
cmp
inc
loope
jae
ss
ds
mov
out
mov
out
outsb
cwtl
add
fwait
enter
movsl
jp
fistpll
dec
or
sahf
xchg
inc
in
xchg
in
arpl
mov
adc
mov
inc
mov
pop
stc
adc
shl
lock
mov
dec
jnp
cmp
xlat
popf
push
arpl
push
or
into
nop
and
push
cmp
mov
jo
dec
movsb
xchg
dec
jecxz
add
jle
ljmp
or
xor
dec
cmpsl
ljmp
dec
call
scas
sub
jl
pusha
lods
xlat
pop
das
ror
int
jl
mov
pushf
leave
data16
addr16
mov
push
jne
and
das
add
lret
mov
jae
fmul
mov
or
mov
rcr
pop
jne
rclb
push
pusha
aad
sar
lret
add
pop
inc
add
lods
xchg
and
rcll
lods
test
dec
pop
scas
repz
cs
gs
aas
adc
push
sbb
sbb
loopne
mov
push
mov
movsb
jae
ja
filds
or
jmp
iret
les
fs
xlat
push
jecxz
pop
or
popf
sub
mov
push
mov
lret
push
xorb
cltd
hlt
lea
sub
dec
jecxz
inc
fldt
mov
addl
inc
sbb
inc
cmp
mov
insl
scas
pusha
pop
or
cmp
bnd
adc
ret
js
cmp
and
ja
iret
inc
fnstsw
gs
in
or
jnp
fcmovnbe
roll
sub
fsub
outsb
lea
push
nop
push
jecxz
and
xchg
pop
and
sub
fsubl
cmp
daa
mov
push
xchg
inc
add
xor
pop
and
sbb
outsb
pop
lods
jge
jecxz
lret
mov
add
cld
popl
shr
jnp
xor
ja
cwtl
nop
jae
inc
inc
inc
vmaxpd
sbb
sbb
scas
dec
out
inc
mov
adc
je
loop
add
aam
push
mov
adc
in
xchg
ss
pop
popf
mov
ret
mov
mov
push
jnp
or
rorl
add
add
test
inc
das
xor
xchg
movsl
aad
int3
mov
cmp
and
inc
call
ss
and
sub
fisttpl
mov
mov
mov
xor
lahf
xchg
int
icebp
mov
push
setbe
ds
lods
cli
mov
in
xchg
push
adc
sbb
stos
inc
sub
jge
mov
jb
outsl
pop
mov
bound
mov
and
ja
cmp
mov
stos
sub
or
xorb
in
push
add
fcmovnbe
pop
mov
mov
out
push
fimull
jp
dec
arpl
pop
adc
jns
std
or
xor
bound
inc
out
sub
lock
dec
ljmp
push
jnp
shlb
in
outsb
jne
adc
cmpsl
and
xor
iret
or
xchg
cmpsb
xchg
cli
cmc
bound
sub
jp
maxps
testb
test
dec
xor
xor
dec
adcl
les
lret
mov
add
push
rcr
dec
mov
lahf
pusha
dec
popa
jge
push
insb
paddusb
pushf
lret
loope
insl
repz
add
rolb
xor
push
sub
dec
rolb
inc
sbb
mov
das
ret
loopne
xchg
inc
sub
fwait
mov
pop
cmpsl
shlb
cmp
faddl
inc
push
jnp
stc
outsl
cmp
ret
lea
jge
push
daa
mov
mov
das
mov
add
outsb
testl
dec
out
icebp
mov
push
mov
aad
xchg
inc
comiss
xor
sub
insb
int
push
xorl
cmp
fs
aaa
orb
sbb
in
lcall
orb
inc
daa
cmpsl
sub
or
fstps
mov
imulb
je
cmp
cli
clc
rol
and
xchg
inc
sbb
bound
and
sbb
sahf
push
mov
add
push
jl
adc
inc
cli
mov
inc
lods
mov
leave
cli
mov
push
scas
fwait
icebp
sub
dec
outsl
in
mov
fwait
cvtpi2ps
pop
data16
rolb
xchg
cmp
testl
dec
jmp
scas
insl
cli
loope
fcom
fdivrs
jecxz
in
fucom
pop
sbb
jmp
fldenv
testl
and
movsb
adc
sub
mov
icebp
jnp
addr16
sahf
fistps
jns
ret
mov
inc
cwtl
orl
aad
movsl
add
fdivrl
jmp
adc
in
or
cli
jnp
jae
ljmp
js
sti
mov
inc
ret
mov
cmp
cmpsb
ds
mov
enter
cmpsb
ljmp
push
mov
mov
mov
ficomps
lods
lock
aaa
test
or
int
mov
dec
sti
mov
or
pop
in
push
or
pop
lret
loopne
incl
pop
test
xor
xchg
into
test
stos
xchg
cmpb
jmp
pop
or
jne
bound
mull
rclb
data16
lea
in
in
push
sub
push
cmp
jle
mov
dec
adc
sbb
ljmp
fildll
jne
fxch
push
inc
shlb
les
pop
aam
jle
dec
je
cmp
mov
in
dec
and
mov
pop
test
sbb
insb
or
mov
daa
inc
jge
jb
add
mov
fildl
filds
push
add
test
cltd
sbb
pop
push
inc
xor
push
fldenv
pusha
pusha
cld
cmp
fildll
enter
add
sub
mov
lahf
rcr
inc
add
xor
mov
lock
mov
ja
arpl
jmp
and
dec
dec
mov
xor
movsb
sti
inc
mov
test
dec
push
cli
push
aas
dec
xor
orb
jb
mov
inc
gs
addl
sub
sub
mov
stos
jns
cwtl
and
in
es
jb
mov
les
xor
scas
stc
stc
jl
pop
iret
mov
add
pop
sub
jbe
dec
into
in
xchg
add
jo
mov
loopne
and
cltd
push
rol
les
ss
shrb
movsb
fnstenv
xchg
sar
fstpt
mov
fstps
adc
in
xchg
pusha
js
push
jo
dec
leave
cltd
add
fbld
test
push
stos
ficoml
sbb
xchg
fucom
movl
adc
xor
jp
pop
mov
adc
imul
adc
sarl
push
lds
xor
jmp
sub
xor
pop
pop
sbb
sbb
pop
xchg
add
shl
push
mov
repz
outsb
lret
xchg
ja
inc
sbb
mov
xchg
loop
push
mov
fwait
out
hlt
mov
aad
dec
push
das
cmpsb
or
dec
or
in
mov
mov
mov
or
sbb
lea
mov
pop
in
push
int3
outsb
fldt
push
push
or
mov
lret
inc
sub
mov
sti
push
addr16
jae
fstpl
pop
xor
dec
sub
dec
jl
rcll
mov
js
sahf
flds
cmp
das
xchg
add
aam
mov
outsl
cmp
or
sbb
test
push
fmuls
xchg
pop
push
int3
xchg
cmpsb
sti
push
pop
xchg
inc
test
out
xchg
mov
insl
popa
or
mov
ljmp
pop
inc
stos
insl
adc
mov
adcl
imul
lods
xchg
lock
dec
popf
sub
mov
or
repz
test
popa
fbstp
cwtl
add
add
jo
inc
rclb
mov
adc
inc
rclb
and
adc
pusha
lock
inc
rclb
mov
adc
inc
rclb
and
xor
pusha
icebp
jo
inc
rclb
mov
adc
inc
rclb
and
adc
pusha
lock
rclb
pop
iret
sbb
push
test
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
test
stc
inc
xchg
lock
fstpl
push
sbb
pop
ljmp
sbb
shll
jmp
ss
es
hlt
pop
out
idivb
or
jge
sub
pop
outsw
dec
aas
pop
cltd
das
sarl
test
inc
sbb
adc
sbb
sub
inc
enter
xchg
and
ljmp
jge
insl
data16
nop
rcrb
lcall
mov
rcr
jo
fnstcw
cmp
push
xchg
xchg
mov
mov
test
mov
cltd
mov
loope
or
add
frstor
ljmp
xchg
cmpsb
xchg
cmpsb
fisubrl
xchg
lods
jbe
push
data16
dec
mov
sbb
xchg
test
sbb
sbb
in
dec
dec
and
push
test
sbb
in
inc
icebp
pop
mov
out
xchg
jp
cli
ficomps
sub
dec
jns
jns
xchg
push
pop
lea
popa
sub
inc
mov
ret
jns
mov
sbb
insb
imul
jno
inc
xchg
pop
mov
frstor
test
out
lret
mov
fildll
pop
mov
xchg
pop
loop
adc
inc
out
in
dec
mov
lahf
sbb
pusha
pop
xchg
jle
leave
push
push
data16
xor
inc
clc
adc
jb
push
sbb
jp
jl
pop
cli
js
mov
aaa
mov
es
negb
imul
sbb
leave
jbe
jmpw
inc
mov
cltd
es
negb
imul
sbb
leave
jbe
loope
ja
push
lds
mov
dec
loop
dec
test
in
loop
sbb
pop
dec
cmc
sahf
mov
mov
enter
cmpsb
dec
dec
sub
pop
daa
in
mov
push
jl
adc
pop
inc
add
les
dec
inc
jp
cmpsb
mov
clc
repz
or
js
sbb
xlat
scas
cmpsl
scas
hlt
inc
xchg
fxch
stos
mov
loope
sub
pop
divl
pop
push
mov
movb
jmp
sbb
add
icebp
xor
jno
jnp
imul
dec
push
add
pusha
shl
adc
aad
sub
hlt
sbb
sub
add
pop
xor
ret
cmpsb
adc
mov
mov
sbb
fisubrl
in
shl
lods
aad
pop
into
stc
push
or
rcll
mov
ret
mov
js
jbe
xchg
mov
pusha
dec
and
fidivrl
cli
push
lret
cli
jae
add
out
jnp
imul
mov
mov
pop
stos
mov
sbb
adc
dec
adc
inc
lret
xchg
cmp
jg
das
push
and
pop
dec
data16
xchg
mov
sar
pop
xchg
cmp
lret
and
shll
dec
aas
mov
sbb
imul
lret
iret
jnp
and
xchg
int3
lcall
or
xor
movsb
mov
test
shlb
push
insb
repnz
push
lea
adc
mov
push
jo
out
mov
lahf
test
clc
stos
sbb
cmpsl
cmpsb
jno
mov
dec
jle
add
cmp
mov
popa
out
clc
lods
xchg
xor
dec
test
repz
jae
sbb
ds
bound
cld
in
shld
xor
clc
sub
or
out
pop
xor
fimull
mov
stc
sub
cs
lock
inc
in
mov
lods
pop
mov
test
cld
cwtl
push
clc
ret
addl
stos
loop
mov
rol
sahf
fstpt
stc
add
cmp
xchg
or
js
pushf
lods
jl
push
andl
shll
movsb
mov
push
repnz
mov
mov
sbb
icebp
mov
xchg
sbb
loope
sbb
outsb
inc
or
aad
in
adc
sbb
int3
inc
sbb
push
lock
ret
adc
loopne
sahf
sbb
pcmpgtb
in
jns
fisubrs
xlat
push
sbb
sbb
test
popf
pop
push
das
add
push
or
push
popf
iret
cmpsl
adc
fsubl
add
dec
sbb
mov
stc
out
roll
xchg
lds
sbb
xchg
rorb
xchg
aas
mov
lods
imul
pop
incl
sbb
ficomps
add
pop
les
js
xchg
hlt
mov
pop
pop
and
push
jmp
and
mull
rorb
into
inc
in
mull
or
js
xlat
jo
xchg
jecxz
ljmp
bound
push
cwtl
jne
pop
add
pop
sub
jo
lcall
push
ret
sbb
je
scas
inc
das
mov
cmpb
sub
gs
fnstsw
mov
outsl
lret
sbb
xor
fidivrl
int
mov
dec
nop
pop
sub
add
loopne
jle
subl
add
mov
inc
mov
jecxz
adc
addr16
jo
adc
repz
jl
sti
out
mov
push
call
stos
jns
sub
or
fdivrl
pop
outsl
or
movsl
add
jge
mov
xchg
mov
sub
sbbb
cld
in
jne
push
pushf
xchg
mov
adc
loope
ja
adcl
or
sbb
sub
jge
fld
xchg
dec
ja
idiv
movsb
in
sub
mov
add
scas
loopne
jne
xchg
fadds
xor
or
or
dec
repz
mov
mov
jle
call
ret
sub
shlb
or
adc
fisttpll
test
loop
pop
je
jb
test
insb
out
add
mov
aad
jecxz
pushf
int
ja
clc
aam
dec
add
and
and
pop
cmp
sti
jmp
outsb
in
add
repnz
fmulp
mov
in
fmuls
mov
lock
test
sub
cwtl
mov
and
repz
orl
addr16
xor
inc
and
xchg
pop
clc
mov
push
fcompl
jns
flds
dec
into
sub
mov
incb
mov
pusha
jmp
adc
fs
pushf
sbb
fimull
ja
faddl
pop
lds
xlat
into
mov
push
ficompl
out
fxch
sub
mov
lods
loopne
daa
mov
or
lds
jg
or
aaa
or
sbb
lret
shr
jb
or
sbb
add
cmp
scas
cmp
aam
xchg
into
xchg
jns
fnstcw
mov
sub
fistpll
int
cmpsl
and
out
insb
lock
push
sub
adc
xchg
inc
shlb
sbb
cmp
mov
push
sbb
xor
push
mov
xor
and
fcoml
add
inc
mov
jge
fsts
popf
roll
inc
cld
dec
sub
mov
push
sarl
mov
call
and
jns
push
lahf
xchg
gs
pop
ret
iret
xchg
inc
mov
lds
das
into
pushf
bound
xor
push
cmp
sarb
ljmp
xor
sbb
xchg
loop
mov
ror
fsts
idivl
jnp
xor
aam
jge
insb
inc
sahf
adc
mov
cs
jnp
mov
xor
xchg
imul
popf
push
lret
inc
icebp
xchg
scas
and
add
test
xchg
xor
lds
mov
dec
push
call
std
inc
popf
add
fwait
cltd
adc
popa
subb
or
test
fadd
das
mov
aad
jp
or
mov
in
mov
sbb
pop
adc
and
jg
dec
xchg
cmp
push
jg
ds
sub
inc
sub
cmpsl
rcl
xchg
inc
sub
enter
stos
in
repz
mov
or
and
jp
mov
mov
cmpsl
aad
ret
andb
icebp
push
sarb
xchg
jb
and
and
das
in
xchg
pop
insb
push
sbb
lods
into
jo
cmpsl
ficomps
adc
lds
mov
imul
stos
xor
stc
js
mov
and
dec
inc
cmpb
push
sbbl
divb
movsb
push
ret
xor
lock
movl
in
movsb
push
add
fidivl
push
outsl
aam
iret
pop
inc
xor
test
mov
sub
inc
cld
cmc
scas
cmp
sbb
sub
mov
int
subl
andl
cs
lock
inc
and
inc
pop
js
mov
cltd
mov
xor
out
cmpl
in
jbe
xor
sbb
hlt
ret
jl
adc
or
test
outsb
in
adc
pop
cli
xchg
pop
es
push
and
fs
in
lahf
lret
push
cmpsb
xor
hlt
mov
mov
jnp
and
in
xchg
sub
add
jbe
sub
pop
sbb
adc
xchg
std
xchg
mov
hlt
and
push
dec
movnti
inc
dec
scas
xor
mov
jp
test
mov
pop
mov
inc
test
pop
mov
xchg
popf
jle
test
jo
mov
fstpl
sarb
pop
inc
or
lds
adc
ret
xor
das
pop
mov
jmp
out
xchg
jecxz
mov
leave
out
xor
inc
dec
sbb
rcl
xchg
fistpll
leave
inc
dec
imul
into
adc
divl
or
out
loop
insl
filds
negl
into
push
rorl
mov
flds
inc
fs
pop
repnz
and
stos
inc
ret
pop
sub
loop
mov
sbb
adc
add
dec
pop
repz
loopne
and
push
xchg
mov
xchg
jle
add
cmp
int
dec
lods
adc
stos
fwait
popa
iret
cmp
pop
lds
ficoms
and
jge
sub
xor
xchg
mov
push
pop
notl
pop
jmp
bound
and
addr16
and
sub
add
push
inc
adc
xor
test
cltd
lret
add
inc
lods
out
ret
and
push
push
pop
sbb
xchg
iret
push
jle
push
sub
fwait
rcrb
cmc
sarl
mov
sbbb
push
fisttps
bound
cld
sub
aad
dec
jle
pop
xchg
ja
bound
pop
sbb
mov
xchg
hlt
cmp
nop
into
sub
xor
std
bnd
and
loope
xchg
add
xchg
decl
push
adc
push
pop
mov
inc
and
decl
sub
jg
iret
push
daa
inc
inc
out
pop
addb
pushf
mov
js
aad
add
inc
push
stc
fimuls
push
cmp
mov
mov
pop
cmp
push
pop
pop
nop
scas
repnz
pop
adc
fildll
loopne
pop
sbb
loope
rcr
mov
test
fiaddl
dec
fwait
push
xchg
andb
xchg
sub
push
mov
mov
ljmp
fnsave
dec
insl
xchg
sbbb
sub
repz
inc
lods
sub
mov
adc
cld
jl
outsb
stos
movsl
sub
adc
bound
div
outsl
imul
mov
negb
loopne
movsb
or
ror
dec
mov
in
sti
sti
ret
rorl
mov
inc
test
in
leave
testb
xchg
fidivrl
pop
lea
sub
fldt
dec
call
xchg
sbb
mov
cmp
imul
stos
xor
int3
iret
push
sub
xor
push
fcmovnu
insl
pop
add
mov
jns
das
addl
or
push
sti
mov
push
jns
ds
rorb
xor
insb
fs
dec
rol
shll
fmuls
adc
and
adc
sub
xchg
xchg
fisttps
jl
and
mov
fisttpl
aam
inc
add
xchg
mov
fisubrs
dec
clc
add
das
and
jmp
mov
mov
rorl
js
push
mov
inc
mov
adc
mov
adc
scas
ljmp
outsl
or
fcompl
push
inc
push
cmpb
mov
inc
xlat
jle
add
int
sahf
js
xchg
dec
mov
sti
jbe
iret
cwtl
pushf
icebp
mov
pop
scas
sbb
mov
data16
pop
leave
mov
mov
mov
lret
out
mov
jle
and
es
jecxz
mov
repz
ds
addl
stc
out
pop
add
xchg
mov
push
adc
push
pop
in
repz
mov
outsb
cmp
adc
in
roll
mov
push
mov
mov
inc
ljmp
mov
add
pusha
fwait
out
test
dec
loopne
mov
das
lds
ljmp
jmp
mov
add
lods
out
iret
dec
adc
xor
cmpsl
pop
mov
lea
push
int
jg
imul
pop
pop
notb
cmc
push
es
dec
int
insb
cltd
clc
push
jg
push
inc
add
mov
stos
pop
nop
pusha
sbb
sbb
push
mov
lret
bnd
clc
ror
dec
ret
pushf
sub
lods
mov
dec
jl
adc
push
out
popl
push
stos
pop
repz
mov
cld
jp
adc
cltd
xor
pusha
pushf
pop
rorb
nop
jne
add
rol
and
test
loope
xorl
sub
pusha
std
sub
movsb
fists
add
fsubl
mov
xchg
stc
out
inc
nop
in
xor
cmpsl
rcll
pop
je
fisttpll
lods
notl
test
and
es
idivl
test
or
rcll
xor
mov
aaa
hlt
aad
jbe
mov
xor
sbb
push
pop
daa
int
mov
daa
fisubrl
loop
mov
and
inc
sbb
xor
fldln2
insb
push
imull
add
jge
jle
sbb
cs
inc
xabort
bound
xor
add
ror
jge
jp
fmuls
mov
push
jge
pop
loopne
mov
push
fidivrs
xor
in
cmpsb
dec
rol
stc
cwtl
int
mov
fldenv
xchg
movsb
or
pushf
out
test
stos
mov
sub
ficoml
mov
shrl
xchg
lods
sub
xchg
adc
xchg
sub
pop
scas
lods
lock
in
jle
dec
icebp
xor
test
imul
test
mov
xlat
push
inc
push
insl
loope
adc
scas
push
sbb
outsb
faddl
push
xchg
and
aaa
jecxz
int
adc
loope
stc
push
addr16
pop
fdivrl
push
push
push
or
cmpsb
inc
or
loope
mov
sub
imul
and
xlat
inc
cltd
sub
loope
xchg
cmc
rep
cmc
negl
inc
mov
pop
push
je
mov
pop
inc
mov
jnp
arpl
jp
push
es
sbb
rcr
mov
lods
mov
sub
ljmp
stos
or
data16
cwtl
xor
pop
jle
xor
mov
jb
mov
jl
xor
mov
movsb
dec
sahf
pop
dec
inc
les
jmp
xchg
out
jge
and
lods
lahf
xor
or
aam
sub
pushl
xchg
jge
ret
arpl
xor
cwtl
insb
and
sub
cmpsl
aaa
inc
cmp
sub
fisubs
ljmp
add
or
js
xor
mov
lret
or
push
imul
icebp
jp
push
cmp
test
fs
ds
pop
sub
aas
add
mov
mov
adcl
dec
loop
insw
sbb
dec
scas
mul
sbb
icebp
xchg
rolb
dec
fldpi
push
inc
imul
adc
xor
sbb
sub
xor
bound
popf
data16
movsl
imul
subl
xchg
aas
xlat
mov
into
imul
dec
xor
cmc
pushf
pop
xchg
fisubl
dec
into
sbb
xchg
adc
jo
mov
mov
jp
pop
inc
mov
jb
or
lret
cli
ljmp
push
sahf
aas
add
sub
loopne
mov
fisttpll
cmp
insl
notl
rorl
jae
loope
sti
aam
jp
ja
xchg
clc
add
data16
shlb
adc
pusha
cmp
cmp
and
sbb
adc
fdivrs
and
or
js
ret
push
pop
sub
aas
mov
sbb
inc
mov
cmp
movsl
or
or
push
lcall
jecxz
dec
xlat
enter
adc
int
cmp
push
inc
mov
mov
shll
sub
loop
xchg
fdivs
in
sti
repnz
lods
mov
aad
mov
add
cmp
pop
stc
cmp
xchg
nop
xchg
es
aaa
sbb
fcoml
mov
xchg
cmp
pushf
add
shr
in
sub
inc
out
test
mov
pop
sar
xlat
cmp
imul
je
loope
pop
sahf
add
mov
stos
icebp
test
rcll
test
lahf
jge
loope
sub
lea
cmpsl
inc
mov
pusha
out
or
add
lahf
add
jno
mov
push
movsb
lcall
jbe
sarb
jae
jp
sub
push
insl
push
mov
jo
sbb
shrb
sub
test
dec
fidivrs
filds
sbb
imull
add
inc
mov
scas
adcb
cwtl
andl
es
sbb
push
stos
inc
int3
jl
xchg
mov
xor
insl
inc
mov
movsb
insl
push
mov
mov
mov
cmpsl
negw
or
enter
inc
dec
mov
sub
cmp
jns
jle
out
jno
cmc
aaa
out
mov
sub
addb
jne
mov
or
divl
push
std
cmp
pop
mov
andl
xor
addl
das
jl
mov
scas
mov
insl
fcoms
lret
pop
cld
push
mov
mov
gs
push
dec
call
sub
in
pop
in
stos
pop
ljmp
xor
ret
lds
test
xlat
add
mov
fistps
pop
jp
mov
push
lds
shr
cmpsb
movsl
mov
mov
jmp
subl
and
pusha
roll
cmpsb
mov
mov
push
or
test
fadds
js
enter
test
into
adc
inc
inc
aam
sbb
add
mov
stos
movsl
fwait
push
cli
ja
sbb
shl
mov
cmp
fmull
sbb
cmpsb
test
xor
jp
pop
jge
call
int3
mov
dec
mov
dec
pushl
push
in
push
inc
repnz
or
je
js
or
mov
movsl
xchg
js
iret
cli
push
repnz
scas
inc
mov
jae
push
repnz
fcmovne
xchg
lds
je
sti
jns
jb
test
scas
add
dec
movsl
xchg
push
sahf
add
scas
call
lret
sbb
xlat
lds
es
xchg
xchg
or
loop
sbb
dec
jg
sbb
push
sahf
fmull
out
mov
jb
sarl
outsl
jle
pop
mov
push
mov
push
push
dec
test
dec
add
clc
pop
imul
mov
and
sub
in
mov
shrl
sub
jb
test
aam
scas
sahf
das
out
push
xlat
sub
cmp
fadds
mov
lret
cli
test
in
inc
jg
mov
xor
mov
jp
pop
push
mov
pop
mov
aam
test
jle
cmp
mov
loopne
adc
sti
int3
call
xlat
data16
je
push
cmp
inc
lods
mov
negb
pusha
push
and
sub
sti
pop
in
xchg
dec
mov
fldt
mov
sub
std
dec
fcomp
add
push
adc
cmpsb
xlat
sub
icebp
xchg
outsb
sbb
stos
arpl
inc
int3
jl
adc
mov
lock
lods
push
out
nop
adc
ss
jno
enter
fisubl
repnz
andl
sar
dec
pushf
nop
enter
ret
bound
subb
aaa
jo
mov
test
cwtl
mov
out
push
mov
in
ljmp
xor
pop
xchg
nop
mov
jle
fdivp
mov
cs
lods
fstps
sbb
mov
mov
jnp
movsb
cmp
xchg
std
shrl
andps
notl
jmp
push
add
mov
mov
scas
fwait
inc
xchg
data16
loopw
outsl
cmpsb
sti
hlt
add
das
out
adc
mov
inc
add
and
sbb
shll
in
sbb
mov
test
push
ret
mov
mov
neg
data16
fwait
call
mov
xchg
sahf
ljmp
sub
jnp
sahf
shlb
arpl
xchg
cmp
pusha
test
pusha
xchg
lods
add
xlat
cmpl
lcall
jmp
xchg
je
pop
inc
cmp
sub
xchg
or
xchg
bound
push
insl
rolb
test
mov
outsb
jg
movsb
pop
lods
dec
dec
sub
ret
popf
xchg
sbb
pop
inc
sti
pop
push
push
cmpsl
js
push
adc
imul
push
repnz
loop
jnp
stos
mov
or
and
bnd
lahf
mov
lret
cmp
mov
inc
das
mov
push
jmp
jmp
jge
jp
xchg
into
sbb
fisttpll
dec
jmp
lea
and
insl
pop
adc
mov
and
adc
insl
sub
in
cwtl
pushf
xor
mov
xor
push
and
lods
push
jg
sbbl
enter
add
mov
loope
aad
iret
xlat
cmp
mov
dec
mov
es
bound
arpl
adc
movsl
or
xor
int
sub
jp
mov
mov
push
mov
and
dec
mov
pop
pop
test
jae
mov
cmpsl
mov
ljmp
push
xchg
dec
mov
cmp
dec
pop
ret
mov
sti
mov
js
push
jae
and
sub
lret
sbb
push
lcall
jecxz
fidivrl
into
nop
pushf
adc
mov
adc
xchg
inc
dec
outsb
jnp
inc
or
sub
fnstenv
jb
mov
ss
mov
mov
nop
imul
rclb
jnp
pop
xor
fucomi
lea
add
stos
pop
mov
cltd
es
negb
imul
sbb
leave
jbe
jmpw
inc
mov
cltd
es
negb
imul
sbb
leave
jbe
data16
push
stc
inc
mov
popf
es
negb
pusha
jge
or
or
popa
push
roll
mov
test
mulb
mov
ds
pop
imul
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
hlt
add
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
cmc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
in
add
fdiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
cmc
add
dec
cmc
add
pusha
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdiv
add
clc
cmc
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
fdiv
add
call
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fdiv
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
inc
clc
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
clc
add
mov
clc
add
sar
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
stc
add
cmp
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fdivr
add
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
pop
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
cli
add
pop
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
