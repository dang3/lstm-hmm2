rorb
add
mov
incl
nop
add
or
add
pop
addb
pop
mov
add
pusha
add
add
add
or
add
mov
cmp
addb
or
push
pop
rolb
push
add
dec
or
add
push
rolb
push
pusha
add
or
lock
add
add
add
inc
add
or
add
or
add
or
add
or
and
rorb
add
push
add
add
or
add
xor
lahf
or
add
push
lock
loopne
push
add
rolb
or
add
or
add
or
add
or
and
xor
jo
test
lock
and
orl
mov
add
rolb
or
add
or
add
pop
loopne
ds
add
es
add
pop
add
add
push
mov
out
push
nop
add
add
add
pshufw
add
add
or
cli
pop
add
lds
rolb
add
add
push
jo
push
add
add
or
add
or
add
pavgb
add
mov
add
push
add
add
aad
add
outsb
add
add
or
add
adc
add
addl
add
loope
add
add
fiaddl
add
and
sub
xor
mov
pusha
add
or
add
push
nop
add
or
add
adc
nop
movups
addr16
pusha
add
add
add
or
add
push
adc
dec
push
lock
add
add
or
or
rolb
add
jo
test
inc
add
push
push
add
or
add
and
fiaddl
add
pavgb
xchg
pop
addb
pop
lock
or
add
add
add
or
add
or
mov
add
push
add
test
inc
add
in
movw
mov
mov
mov
movw
movb
call
push
popl
movl
cmp
jne
push
popl
ret
push
popl
push
push
popl
push
popl
push
mov
mov
addl
pusha
movw
movb
call
push
popl
push
popl
mov
subb
andl
push
add
xorl
mov
addl
mov
push
push
popl
call
push
popl
orl
cmpl
jne
push
popl
call
addw
ret
push
popl
push
popl
jmp
addl
xor
or
xorl
mov
push
popl
push
popl
shl
and
mov
andw
shl
push
popl
push
popl
mov
push
popl
cmp
jne
sbbw
mov
sbbl
movb
sub
push
popl
subw
call
orb
push
popl
popa
subw
pusha
subl
push
popl
call
push
popl
mov
sub
push
subw
push
popl
xorl
andb
subl
addl
add
andw
push
push
popl
call
subb
push
popl
push
push
popl
xorl
movb
addl
movl
pop
addl
cmp
jne
addl
addw
ret
subl
popa
movw
push
popl
call
movl
push
subw
xorl
xorl
push
popl
addl
or
push
movl
push
popl
call
subl
push
push
push
rol
lea
add
lea
mov
xor
pop
sbbw
mov
push
popl
shl
subb
sbbw
push
andb
xor
add
push
popl
push
sbbl
mov
call
push
popl
sub
push
movb
push
popl
mov
sbbw
push
popl
push
xorl
mov
jmp
push
popl
pop
add
orl
mov
sub
push
push
popl
push
popl
push
andl
xorb
push
sbbb
add
mov
sbbl
mov
push
popl
orw
rep
push
popl
pop
andw
pop
push
xor
mov
xor
xchg
push
xor
inc
xor
mov
xor
xchg
push
popl
push
popl
xor
movb
push
popl
jmp
sbbl
sub
addw
push
popl
mov
movb
sub
addl
subb
sub
andl
orb
mov
addb
orw
sub
orl
xorb
or
jne
xor
addb
add
mov
jmp
movl
mov
push
popl
shr
movl
addl
shl
sbbw
push
popl
mov
orw
add
orl
jmp
push
popl
or
sub
subw
add
mov
subb
add
push
popl
cmp
jne
subl
push
popl
mov
push
popl
orw
add
add
mov
movb
add
push
popl
cmp
jne
xor
ret
orw
subb
push
push
popl
orb
xor
push
popl
push
popl
pushl
and
sbbb
pop
mov
lea
subb
push
popl
or
xorl
andw
mov
push
popl
mov
push
popl
push
popl
lods
or
mov
xor
pop
push
popl
ret
sub
xorb
push
push
popl
mov
push
popl
orw
add
subl
xorl
push
sbbb
addw
push
orb
push
and
push
popl
push
orl
push
popl
push
orb
mov
sub
and
mov
push
popl
push
popl
add
movl
pushl
add
xorb
mov
push
popl
addw
add
push
popl
add
andw
mov
push
popl
add
xorl
push
popl
xor
and
lea
sbbw
mov
mov
sbbb
subl
add
push
popl
mov
subb
sbbw
xor
sbbw
addw
rol
orl
add
xor
xor
inc
push
popl
orl
cmpb
jne
andw
sbbw
cmp
je
orb
movb
inc
xorl
xor
cmp
jb
orw
xorl
mov
push
popl
mov
add
sbbw
movzwl
addl
push
popl
mov
xor
push
popl
add
sub
xorw
mov
orw
add
subw
sbbb
pop
push
popl
push
popl
cmp
jbe
and
andl
cmp
jae
push
popl
pushl
orb
pushl
orl
push
orb
xorl
xorl
andl
addl
addl
addl
andb
pushl
or
push
popl
call
push
popl
call
xorl
xorl
pop
sbbl
pop
subl
pop
addw
movb
pop
or
pop
push
popl
leave
or
push
popl
ret
push
popl
xorl
call
addb
mov
out
pop
mov
ret
lock
xchg
aaa
pop
jne
xor
cmp
jnp
into
ror
jmp
mov
lahf
arpl
je
xchg
out
and
pop
out
je
rcll
inc
std
pop
pop
xchg
sti
or
sti
pushf
or
adc
pop
xor
dec
sub
cli
xchg
pushf
or
xor
add
xor
out
ds
sub
out
inc
shl
sub
jmp
outsb
mov
or
push
aaa
dec
popa
mov
mov
inc
dec
push
aaa
push
adc
cmpsb
cwtl
out
mov
cmp
andb
and
ret
ja
testb
add
cmp
fs
push
mov
cmp
inc
cmp
sti
xor
cmp
dec
fucomip
mov
out
pop
dec
xchg
or
mov
cmpsb
je
jmp
push
hlt
mov
shrl
test
mov
mov
rol
jne
xor
push
and
leave
ret
addr16
mov
divb
stc
repz
inc
sti
mov
dec
shrl
xchg
sbb
mov
ss
aas
and
and
pop
mov
sub
sub
or
mov
test
add
lods
inc
out
pop
fsubl
cmp
sbb
das
stc
addb
dec
mov
mov
sub
test
loope
das
sahf
cmp
xchg
pop
mov
mov
std
std
push
xor
xor
imul
ret
dec
and
cld
mov
mov
dec
aaa
scas
mov
js
fdivs
add
sarb
or
push
popf
setl
aaa
adc
cli
mov
cmp
out
jb
xor
notb
sbb
femms
ficomps
cmp
das
fisubrl
push
mov
js
rcl
xchg
xor
pop
jbe
jmp
inc
and
mov
cli
push
sti
mov
xchg
in
call
adc
and
test
mov
pop
cmp
inc
test
adc
xchg
add
mov
ja
inc
imul
jmp
sbb
mov
clc
and
nop
jno
sti
mov
js
mov
lret
insl
xor
xor
lods
std
aaa
jae
mov
repnz
cmp
cmp
sti
mov
sahf
xorl
mov
gs
shld
lcall
aas
frstor
mov
dec
sub
insl
stos
lea
cmp
push
push
lods
jge
jae
push
cmp
icebp
xor
dec
push
inc
test
mov
xor
cwtl
or
fs
and
push
push
mov
mov
pushl
out
inc
xor
iret
cs
pop
pop
adc
add
sbb
mov
aas
cltd
push
mov
xor
dec
fwait
push
mov
xchg
subb
xor
push
jns
mov
jge
mulb
dec
mov
jae
pop
stos
nop
sub
les
cld
in
repz
icebp
fdivr
mov
adc
dec
out
mov
out
pop
inc
pushf
jecxz
mul
mov
mov
test
push
test
sbb
and
sbb
int3
inc
je
xchg
addb
aam
push
test
dec
inc
xor
gs
push
push
addr16
push
cmp
cmp
inc
loop
outsb
sbb
jns
cmp
out
shll
ljmp
jle
imul
jae
push
in
cmp
mov
call
fisubrl
dec
pop
push
pop
add
iret
mov
pushf
js
adc
shl
xchg
lcall
fnstenv
cld
leave
aaa
xchg
mov
test
jl
or
das
add
dec
pop
or
data16
das
bound
and
mov
shl
daa
push
pop
fldcw
outsb
lret
cmp
out
pop
je
pop
int
das
out
dec
mov
minps
movsb
pop
mov
pop
bound
loopne
lods
stc
out
xchg
dec
les
push
jnp
scas
jo
pop
jle
out
ret
cwtl
xlat
cmp
das
das
sub
lret
add
xor
push
decb
cmp
dec
aaa
punpcklwd
xor
add
add
xor
aad
sbb
mov
cmp
pop
movsb
gs
mov
movsl
or
cmp
dec
aaa
ldmxcsr
pop
es
popa
pushf
rcl
mov
cmp
xor
inc
add
out
in
cmp
push
pop
mov
adc
push
pop
in
mov
aaa
fldl
fisubrl
int
push
sti
mov
rcrb
xchg
push
mov
js
shr
xchg
sub
xchg
lods
cld
loope
lcall
pop
push
mov
inc
push
jl
in
lahf
add
mov
mov
push
xchg
ljmp
push
sbb
ret
jns
mov
pop
xchg
inc
rorl
cmp
push
mov
push
add
shl
xchg
sub
mov
cwtl
mov
addr16
dec
and
sub
test
fsubp
scas
ds
sub
mov
pusha
cld
inc
das
add
sub
lock
adc
incl
outsb
and
mov
pusha
ret
mov
inc
ljmp
pop
mov
xchg
insl
mov
sti
or
cmp
in
and
pusha
add
cwtl
or
mov
mov
rcrb
ljmp
inc
js
add
negl
mov
in
daa
adc
sbb
or
jae
xchg
inc
repnz
xor
popf
fdivrs
and
jo
lock
rcr
lods
xorb
xchg
out
int3
in
subb
divl
sub
sahf
xor
int3
inc
rorl
adc
add
adc
dec
mov
daa
or
cmp
pop
jle
sbb
xor
cmp
bound
lret
dec
cmp
cli
sub
sub
xchg
adc
mov
aaa
cmp
xor
aad
inc
cld
push
jmp
in
mov
xchg
mov
test
mov
push
sub
dec
push
pushf
popl
mov
push
xor
test
adc
cmp
cmp
and
jl
cwtl
inc
push
dec
inc
out
imul
shll
daa
or
ljmp
mov
jne
imul
scas
sti
mov
movsb
arpl
mov
push
dec
or
pop
pop
or
pop
adc
xor
inc
sub
jp
add
push
push
jae
pusha
add
scas
sti
mov
pushf
shlb
popa
xchg
push
push
jne
scas
add
sti
mov
cmp
dec
popa
mov
push
push
jae
insb
add
scas
sti
mov
mov
aas
popa
mov
push
ja
mov
mov
sbb
stos
push
sub
pop
daa
add
xchg
std
xor
cmp
enter
sti
mov
inc
mov
mov
sub
mov
movsl
and
jo
jns
jp
fs
sub
sbb
sub
sub
inc
xchg
mov
ret
push
outsl
sahf
hlt
jecxz
out
ret
xchg
sbb
and
outsb
popf
cmp
sahf
mov
xor
sub
sub
fs
xchg
push
mov
mov
sub
pop
fs
and
loop
add
push
aad
fdivl
mov
js
in
push
or
sbb
rorl
hlt
pushf
addr16
iret
gs
jno
leave
adc
mov
xchg
and
jns
jmp
shrl
mov
lcall
cmp
sub
jmp
sbb
loopne
jo
jb
adc
fs
mov
outsl
cltd
mov
xchg
vpcmpeqw
bswap
pop
aaa
sbb
pop
mov
push
aaa
or
out
mov
cmp
adc
es
sbb
sbb
ds
xlat
pushl
pop
jno
adc
add
jp
in
mov
aaa
add
or
ja
aaa
fidivl
mov
mov
inc
and
dec
add
cli
xchg
jmp
sub
push
lods
xor
mov
sbb
push
and
arpl
rolb
xchg
inc
push
pop
xchg
jae
pop
xchg
aaa
adc
adc
or
aas
lret
sar
sbb
shlb
and
fmull
xchg
mov
cmp
fwait
mov
outsl
or
in
stos
mov
cmp
jne
xor
push
loop
js
jmp
mov
pop
push
loop
and
inc
mov
insl
cld
push
das
and
adc
push
xor
jg
mov
pop
dec
mov
sti
add
popa
dec
jecxz
adc
pop
sbb
push
xchg
inc
test
jp
xlat
pop
mov
mov
push
and
gs
pop
movb
xchg
sbb
mov
cmp
sti
mov
or
cmp
fninit
mov
mov
les
dec
xor
mov
lahf
cmpsb
daa
and
push
bound
push
and
inc
mov
cmp
sub
xor
jl
jl
movsl
movb
push
test
cmp
xchg
mov
mov
cmp
sti
sub
pop
inc
std
mov
jecxz
insl
fidivl
mov
sbb
das
and
ja
pop
adc
and
dec
clts
sbb
movl
stc
and
mov
gs
sbb
xor
popf
xchg
lock
repnz
js
pop
adc
or
lds
and
fs
gs
push
cmp
pop
xor
out
scas
das
daa
adc
mov
daa
add
jno
aaa
out
aas
sub
add
pop
mov
inc
mov
mov
cld
je
mov
xor
aam
outsb
out
jns
jns
or
movsb
sub
lcall
les
mov
jge
aas
mov
negl
les
stos
push
aas
out
adc
mov
hlt
mov
sub
or
jl
setns
sbb
lea
adc
arpl
das
iret
xor
sub
dec
sub
xchg
stc
ret
shrl
sub
lods
push
lahf
repnz
clc
mov
sub
inc
je
xchg
nop
xor
mov
xor
loopne
cmc
xchg
outsb
int3
mov
mov
sti
mov
mov
movsb
sahf
sbb
sahf
adc
fwait
cld
inc
out
dec
pop
out
cs
daa
add
into
add
pop
push
adc
mov
and
iret
xchg
aaa
cld
sbb
sub
fldcw
xor
movsb
fwait
pop
sub
push
jb
push
aaa
sti
cmp
pop
inc
or
jmp
pop
pop
stc
fwait
cmp
out
lods
fwait
out
pusha
jle
out
icebp
fisubrs
test
je
jl
sbbb
mov
outsl
lcall
mov
jge
mov
or
outsl
lock
pop
imul
push
outsl
popf
leave
andb
sub
repnz
ljmp
rep
mov
sub
mov
in
push
out
jle
test
push
mov
push
sahf
inc
jb
add
sub
sub
sub
jmp
mov
outsl
in
jo
mov
push
clc
and
mov
clc
add
jno
das
idivl
and
ds
jge
jae
popf
inc
repnz
adc
sbbb
ljmp
hlt
mov
jbe
inc
sti
mov
push
sbb
ljmp
daa
add
ret
pop
mov
mov
sub
sub
mov
jg
xor
mov
lods
pop
out
push
xor
jbe
jns
test
and
stos
pop
mov
out
std
mov
dec
sub
xor
dec
push
jmp
jecxz
xor
jnp
push
je
or
sti
xor
dec
mov
ds
cmp
sbb
in
cli
popf
jae
cmc
cld
cmp
sti
or
sub
mov
mov
or
ds
xchg
add
mov
and
jl
nop
test
les
ljmp
ljmp
ret
mov
sbb
mov
inc
ljmp
cltd
push
dec
or
jge
aad
jae
ja
xchg
es
mov
push
push
pop
xchg
push
jecxz
pop
cmp
out
xchg
ja
or
sti
dec
call
out
inc
mov
mov
cmp
stos
push
cmp
loop
outsl
xchg
mov
negl
das
add
add
leave
jb
xor
dec
sub
xchg
add
out
inc
lret
clc
cmp
fs
inc
mov
enter
cmp
jmp
aad
jae
ja
fldenv
movb
push
pop
xchg
mov
xchg
mov
mov
lods
fldenv
sti
jno
daa
fidivl
jg
lea
mov
pusha
jne
and
sti
mov
cltd
xchg
mov
decl
out
inc
mov
inc
jne
add
ret
adc
out
ret
mov
or
and
jns
jmp
inc
adc
scas
lds
and
dec
jge
mov
xor
mov
cmp
lcall
loopne
orb
loope
push
pop
push
jb
and
ja
in
xor
pop
xchg
cmp
int3
xchg
xchg
lock
js
add
pop
add
xchg
xor
sub
sub
pop
and
mov
jne
imul
mov
movsb
scas
push
mov
js
add
jns
sub
pop
mov
mov
xor
out
rcrb
sti
mov
mov
mov
out
xchg
mov
test
mov
inc
push
movsb
push
faddl
je
ljmp
scas
inc
je
adc
or
incb
jl
leave
hlt
xchg
lret
pop
xchg
data16
sub
incl
in
fdivr
xchg
mov
pop
push
or
sub
sahf
pop
cmp
or
outsl
mov
lock
adc
stc
lcall
adc
arpl
inc
sbb
mov
movsl
pusha
int
in
rcl
movsb
xchg
xchg
imul
imul
and
dec
mov
jno
mov
fiaddl
test
xor
nop
push
outsl
mov
push
inc
das
add
cmpsb
push
mov
sub
daa
push
iret
inc
out
repnz
mov
cltd
out
cld
adc
push
out
sub
mov
leave
sub
xchg
jg
hlt
das
push
xchg
sub
sub
jl
jno
orl
insb
enter
sbb
adc
sub
jae
fbstp
sahf
dec
sbb
popf
sub
jp
mov
add
jb
das
cmc
mov
dec
jb
sarl
jae
pop
in
js
lret
jne
mov
adc
jg
pop
ret
int3
xchg
and
jmp
push
inc
and
frstor
dec
or
lock
psllq
pop
aam
and
pop
xchg
imul
std
jg
movsl
mov
inc
das
add
out
insb
sub
imul
sbb
stos
lret
insl
lea
mov
mov
mov
jp
cmp
je
ljmp
scas
sti
je
mov
adc
sub
lea
jp
rorb
push
push
sub
jle
jno
repnz
jmp
aaa
cli
cmp
push
mov
cli
jbe
lock
jo
jp
jp
sbb
insl
stc
outsl
sub
cs
xchg
sub
add
test
ds
sarl
std
js
das
add
xchg
adc
push
push
pop
jle
cld
xchg
addl
cmp
mulb
and
and
add
enter
add
cli
cwtl
outsb
xchg
lds
push
out
or
sub
xchg
cmp
sub
je
push
mov
jp
bnd
sarl
call
cwtl
mov
decl
push
mov
mov
inc
push
movsb
mov
mov
out
push
xchg
pop
call
daa
std
xor
mov
or
mov
je
outsl
lds
inc
bound
test
adc
mov
fsts
jmpw
and
add
adc
push
add
out
sbbb
mov
ret
sahf
dec
and
inc
cld
jns
inc
ret
or
lds
sbb
inc
sti
mov
xchg
mov
sub
mov
cld
inc
das
add
cltd
out
jo
xor
add
incb
add
mov
ljmp
jp,pn
ljmp
popa
xor
sub
or
call
adc
jno
das
add
lock
xor
dec
jae
pop
clc
clc
fisttps
pop
cmp
jge
pop
cmp
inc
addb
and
rcrl
call
out
ds
cmp
aas
sbb
xchg
movsl
inc
test
jecxz
mov
int3
je
xchg
xor
push
test
inc
sti
mov
xor
adc
inc
cmpb
adc
add
adc
sbb
jo
insb
orb
jmp
out
xchg
jb
push
and
add
lcall
and
clc
popf
cmp
shl
push
popa
push
int3
cmp
xchg
das
sub
jecxz
clc
mov
popa
lret
adc
jmp
mov
pop
xchg
mov
and
or
cld
inc
das
add
cli
icebp
and
fcmovb
adc
adc
or
mov
inc
ljmp
and
jle
sbb
or
dec
mov
ja
jb
out
jnp
mov
add
adc
sub
mov
cmpsl
mov
push
pop
mov
xchg
testb
daa
and
std
inc
iret
cli
lahf
addr16
das
negl
jp
jp
xchg
jge
jae
add
add
test
mov
lcall
icebp
ds
scas
sti
mov
in
mov
mov
popa
mov
jl
or
les
jecxz
adc
or
ds
add
out
xchg
ds
movsb
inc
pop
cli
popf
jae
lods
or
decl
mov
cmp
add
push
add
ror
xchg
aaa
push
int
gs
leave
aaa
xchg
mov
mov
mov
xchg
xchg
lock
sbb
packssdw
push
out
mov
out
sti
insb
add
jo
mov
push
xchg
es
sub
jae
xchg
test
sbb
mov
js
jg
dec
popf
std
test
jnp
cmpsb
and
out
mov
shll
call
xchg
cmp
shll
sub
sub
daa
add
jmp
inc
ljmp
cmp
pop
or
jo
jp
jmp
je
insl
mov
xor
xor
xchg
lods
leave
xchg
stos
scas
dec
je
ljmp
scas
jno
das
test
and
push
mov
adcl
cmp
ja
push
sahf
aad
das
add
je
push
xchg
sbb
and
daa
insl
mov
lret
dec
outsl
pop
xchg
mov
out
stos
arpl
mov
das
idivl
and
mov
push
test
pop
nop
and
mov
out
xchg
mov
dec
aaa
loopne
and
add
mov
adc
incl
ja
ja
cmc
xchg
pushl
out
inc
test
out
loop
inc
pop
sub
in
push
jl
mov
sti
mov
cmpsb
fistl
mov
inc
pop
daa
or
sarl
jle
sbb
xor
xor
cmp
arpl
mov
cmp
jns
mov
fdivrl
mov
mov
in
sbbl
ljmp
call
mov
sub
pop
mov
fs
scas
sahf
xchg
inc
rorb
cmp
adc
pop
xchg
mov
mov
lods
fisubl
mov
loope
das
fidivl
pop
push
dec
sti
inc
or
test
xor
sub
adc
movsb
repnz
pop
cmp
xchg
pop
subl
or
cld
sbb
aad
mov
pop
pop
imul
pop
cli
sub
mov
sub
inc
das
add
xchg
fsubrp
data16
daa
add
or
push
jg
jg
xor
cmp
push
sahf
xchg
add
cmp
jno
mov
inc
sti
mov
mov
movups
aas
out
loope
ret
sbb
call
inc
jbe
adc
push
add
jecxz
mov
mov
into
sti
inc
das
add
scas
lock
ror
add
fidivrl
sbb
mov
and
xor
inc
mov
xor
sahf
sbb
out
imul
jnp
cmpb
cs
pop
mov
sub
cmpl
icebp
add
rcll
adc
jg
add
push
jl
sub
and
sti
mov
addl
or
ja
stc
xor
sub
in
xchg
insl
movsl
das
test
gs
mov
repz
sbb
adc
sub
daa
add
shl
testb
pop
lahf
andb
inc
xor
loop
imul
clc
sti
inc
das
add
test
adc
ljmp
mov
popf
int3
fimuls
and
pop
or
out
jecxz
adc
lock
out
inc
xchg
movl
cs
pop
xorb
mov
mov
aaa
push
leave
pop
sar
add
fisubrl
jp,pn
push
lods
mov
xor
daa
push
xor
outsb
and
int
mov
stos
stos
pushf
lods
in
out
pop
and
aaa
mov
add
hlt
nop
jae
add
jp
dec
mov
dec
xor
dec
adc
in
jne
int3
xor
bound
jne
push
cld
fmuls
cmp
sub
mov
es
pop
xchg
loopne
pop
sub
mov
fwait
mov
jbe
mov
ja
loopne
push
mov
out
or
hlt
imull
sub
sbb
push
mov
fnstsw
add
push
mov
cmp
add
jmp
mov
dec
pop
xchg
pop
sbb
mov
xchg
inc
pusha
push
arpl
mov
dec
out
mov
out
popa
push
lret
daa
pusha
fbstp
imul
jbe
js
jne
out
sbb
lea
in
sbbl
push
imul
sbb
xor
enter
enter
ss
xor
sub
outsb
lods
mov
xor
and
mov
notl
jp
jmp
adc
dec
dec
test
mov
mov
mov
test
mov
xor
jbe
into
in
inc
sti
mov
or
push
jp
xchg
decl
out
aas
jb
mov
clc
mov
bound
push
push
mov
hlt
cwtl
add
dec
pop
daa
pop
lret
pop
imul
mov
cs
push
je
mov
lret
enter
jp
jns
fcmove
int
jb
sbb
clc
in
mov
jbe
jns
push
push
fldl
mov
mov
scas
out
jmp
in
push
insl
gs
out
repnz
lahf
sub
sub
add
mov
imul
mov
arpl
cltd
sahf
pop
cmp
adc
incl
pop
jg
rorl
clc
je
les
mov
in
dec
dec
mov
lock
cmpl
jne
xor
xlat
imul
ficoms
jp
add
and
test
mov
add
mov
out
jmp
jmp
push
mov
mov
adc
sti
call
daa
push
mov
jb
fnstsw
mov
sub
call
imul
das
add
ljmp
add
out
xchg
xor
ljmp
mov
aaa
outsb
loop
cld
inc
das
add
dec
out
jo
xor
fnstcw
sbb
mov
xchg
mov
lcall
ret
int3
scas
sti
mov
cmpsl
push
popa
mov
ret
out
pop
imulb
aad
adc
arpl
cmp
xchg
pop
push
or
cmp
sti
sub
pop
adc
ja
inc
sub
les
es
sub
sub
sub
mov
jp
push
iret
loop
std
lahf
jge
jae
pop
or
mov
xchg
pop
or
daa
pushf
mov
dec
sahf
sbb
bound
jne
stos
ret
out
dec
pop
out
push
pop
mov
cmp
inc
sbb
sar
fstl
lahf
mov
push
outsl
enter
outsb
mov
repnz
out
xor
xor
dec
jecxz
sbb
icebp
push
mov
je
ljmp
insb
js
fstpl
sbb
xchg
icebp
jns
fdivl
aam
jle
mov
push
int
xchg
and
int3
test
cmp
or
sbb
adc
das
mov
lds
push
and
mov
push
cmp
mov
jne
imul
les
js
sbb
jmp
pop
fdivs
sahf
mov
out
jle
mov
xchg
xchg
xchg
pop
aas
roll
cmp
sti
sub
imulb
shll
sbb
js
out
sbb
xchg
outsb
cltd
push
imul
mov
daa
sub
js
mov
movsl
popf
cmp
out
jne
pusha
xchg
or
gs
rclb
mov
out
xlat
hlt
test
xor
movsb
pop
mov
aam
add
out
jmp
or
jle
sti
adc
mov
movsb
adc
lock
das
daa
mov
add
mov
in
xchg
fcomps
sub
dec
dec
mov
sub
dec
in
inc
sti
mov
loope
and
iret
pop
or
push
mov
inc
leave
adc
mov
incb
loopne
ss
dec
outsl
xchg
cs
mov
xchg
sbb
mov
loopne
out
push
pop
out
into
les
pop
sub
xor
cmp
arpl
jne
or
daa
mov
mov
shll
mov
iret
add
inc
sbb
add
or
push
mov
ja
js
ror
push
mov
fcmovne
dec
mov
mov
ss
ret
sbb
lret
pop
cld
je
sti
mov
ret
rcrl
mov
nop
fbstp
add
lds
scas
add
fbstp
fnstcw
mov
sub
iret
insl
nop
lea
shrl
es
jno
jnp
or
out
add
sub
push
jl
mov
add
mov
or
sbb
negb
ja
sub
push
sbb
fmull
jle
addb
and
out
fs
sbb
xchg
ljmp
stc
lods
jle
sbb
xor
dec
popa
add
je
jl
aaa
xchg
test
push
dec
outsl
mov
add
scas
sti
mov
clc
test
mov
popa
mov
jne
sahf
inc
jne
add
sbb
mov
test
jp
jns
jg
mov
out
push
lock
and
cltd
sub
sub
jb
es
dec
or
scas
jl
and
lds
add
inc
fists
and
sti
mov
fcompl
sbb
cmp
fwait
mov
inc
mov
adc
aam
inc
outsl
pop
sti
loope
xchg
push
mov
and
pop
jle
sbb
xor
outsb
fcomip
int3
adc
mov
cmp
xor
add
jge
das
in
gs
enter
add
addb
push
aaa
or
out
mov
cmp
pop
mov
stos
loope
lret
xor
inc
push
stos
xchg
push
mov
inc
push
pusha
clc
sahf
pop
cmp
adc
incl
stc
mov
add
xor
cli
fwait
jno
icebp
pop
xor
test
adc
out
insl
sub
pop
push
adc
or
cmp
shrl
mov
out
mov
inc
xchg
dec
xor
xchg
and
adc
sub
adc
jg
outsb
cltd
jle
add
bound
xchg
adc
fsts
jns
scas
test
inc
mov
mov
jne
iret
xchg
sub
in
sub
jmp
fidivl
ss
push
lahf
add
push
lcall
xchg
xor
cmp
mov
adc
cmp
mov
xchg
test
and
int3
jnp
cmp
stc
mov
sbb
push
pop
jb
lea
adc
mov
or
dec
pop
out
push
sbb
mov
xchg
push
jl
adc
int
jnp
popa
pushf
push
popl
pop
rcrl
ljmp
push
out
add
xor
push
mov
push
mov
adc
xor
loope
scas
sub
cmp
jmp
enter
mov
addb
sti
dec
aaa
or
dec
mov
adc
add
es
sbb
xchg
ss
in
mov
inc
ljmp
cmpsb
decl
or
out
mov
cmp
addr16
sbb
mov
daa
mov
inc
ljmp
add
jno
sahf
rorb
or
movsb
pop
daa
daa
pop
fbstp
pop
pusha
cmp
jo
mov
cmpsl
nop
jbe
bound
dec
imul
daa
mov
aaa
cmp
jge
jae
mov
inc
mov
out
mov
adc
cwtl
push
or
sahf
inc
ds
xchg
test
jo
sti
jle
add
push
dec
jno
xchg
add
scas
sti
mov
nop
pop
push
mov
popa
mov
rclb
cli
cmp
or
cmp
in
cltd
jmp
movsb
cs
jle
xor
dec
mov
outsl
out
mov
jns
mov
mov
ljmp
repz
adc
into
dec
cli
mov
adc
add
mov
add
add
jg
cmp
das
add
sbb
adc
sub
pusha
mov
mov
jne
pop
stos
and
test
push
inc
insl
mov
movaps
push
cmp
push
lds
mov
addr16
enter
inc
stos
jb
sub
andb
inc
std
mov
cmp
cli
xor
vmaxpd
ljmp
mov
lahf
sti
adc
cli
xchg
insb
enter
sti
out
pop
cmp
mov
add
jmp
stos
cmp
jb
add
movsb
fdivl
mov
je
jmp
andb
in
push
movsl
shl
movq
in
jne
add
dec
and
push
or
sub
mov
mov
pop
sbb
movsb
add
add
lods
ljmp
ret
mov
adc
test
int3
scas
dec
pop
jge
jae
jo
dec
xor
repz
xchg
inc
clc
mov
and
mov
push
mov
cmp
adc
sarl
jno
shll
mov
push
add
hlt
cmp
repz
fisttpll
mov
sbb
push
pop
hlt
cmpl
adc
pop
fisubrl
ficompl
or
mov
jg,pn
jno
insb
enter
jp
inc
nop
pop
cmpsl
push
mov
mov
aaa
add
outsb
push
dec
add
fldcw
xor
sbb
add
push
add
shl
xchg
dec
push
pop
or
leave
aaa
xchg
mov
int
mov
mov
scas
xchg
lock
dec
xor
xchg
inc
add
inc
std
test
adc
add
push
pusha
sub
mov
sbb
jle
push
out
ja
lret
xor
ljmp
test
xor
push
mov
pop
add
dec
push
mov
popf
and
xor
inc
addr16
adc
call
sub
call
pushf
mov
stc
xor
pusha
pop
push
adc
push
pop
xchg
dec
cld
inc
das
add
sub
push
cmpsl
sbb
adc
out
or
add
int
xor
pop
sub
in
inc
sti
mov
repz
dec
push
out
in
mov
aas
ljmp
dec
decl
fs
push
mov
and
mov
mov
xor
xchg
push
mov
pop
xchg
test
cwtl
fs
jnp
cmp
cmp
fsubr
enter
pop
adc
std
jge
mov
sti
inc
das
add
fidivrl
pop
daa
add
xchg
pushl
out
inc
ss
ljmp
adc
test
adc
fbstp
inc
xor
cmc
cmp
mov
out
lods
inc
aam
lcall
imul
loope
pushf
xchg
mov
inc
or
push
sti
cli
dec
decb
cld
shlb
add
push
jle
adc
lret
push
jp
inc
shld
ficoml
mov
jb
mov
inc
xor
mov
dec
imul
das
and
adc
loopne
add
int
jecxz
jae
xchg
xchg
cmp
dec
je
add
lret
push
pop
mov
mov
out
cs
fwait
and
mov
push
mov
fmuls
or
ror
xchg
ss
shll
mov
mov
gs
jp
leave
sti
sti
inc
das
add
xor
xor
xchg
ljmp
std
add
mov
cmp
pop
and
sti
mov
xchg
test
test
cmp
fidivl
leave
iret
sbb
and
xchg
add
push
lea
mov
lods
aad
xor
push
add
fisubrl
dec
xor
push
or
pop
jb
add
ja
int
add
and
push
bound
cmp
push
ret
out
jns
jmp
push
pushf
ds
adc
jmp
push
mov
daa
adc
inc
movsb
push
mov
xor
mov
js
mov
mov
xchg
mov
mov
lahf
fidivl
cs
pop
dec
pop
int
sti
aad
jae
ja
gs
fucomp
stc
cmp
pop
les
nop
adc
mov
jl
inc
mov
jp
gs
inc
stos
xchg
add
mov
fwait
roll
push
sbb
mov
cmp
stc
cld
xor
mov
sbb
adc
sti
or
xchg
jecxz
adc
push
out
inc
lret
mov
ljmp
cmpsb
decl
iret
arpl
aad
jae
ja
sub
enter
lahf
adc
subb
sbb
cmpsb
mov
out
inc
sti
mov
test
cmc
daa
pop
push
mov
or
out
or
add
push
add
xchg
test
dec
jecxz
inc
cmp
loop
in
mov
lods
aad
mov
fisubrl
jp
jo
adc
xor
add
or
sti
push
call
out
inc
push
xchg
or
cmpb
mov
xor
out
jo
adc
clc
push
mov
mov
aaa
pop
xchg
push
push
out
add
fisubrl
icebp
adc
push
xchg
xor
mov
add
test
movsl
adc
pop
out
in
lea
in
ja
sub
negl
int3
push
ljmp
adc
pop
pusha
sub
push
mov
mov
aaa
in
dec
stos
testb
fldcw
mov
pusha
push
push
sub
lea
cmc
sti
inc
das
add
nop
out
imul
cld
or
es
dec
cli
xchg
insb
lea
mov
sti
or
xchg
jecxz
adc
jae
test
sbb
cltd
ljmp
mov
jb
je
orb
stc
lcall
adc
jo
pusha
lds
inc
shld
adc
sbb
push
ret
inc
mov
mov
int
and
jae
jo
inc
mov
xchg
mov
or
cmp
or
sbb
mov
sub
cltd
rcrl
or
jns
loop
stos
jno
stos
ljmp
test
and
lods
xchg
cmpsl
das
and
mov
add
mov
int
psubq
xchg
cmp
cmp
das
js
push
pop
int3
fs
push
pop
out
xchg
fstpt
mov
mov
xchg
pushl
out
mov
mov
xchg
test
pmaxsw
mov
dec
sbb
xchg
ljmp
cld
add
mov
sub
cli
xchg
insb
and
gs
rclb
sub
xor
sub
imul
jge
out
mov
pop
cmovge
cli
push
imulb
call
addr16
adc
adc
shrb
cmp
jo
ljmp
ja
jp
loopne
dec
xor
xor
jecxz
dec
outsl
add
cltd
ja
test
js
mov
out
dec
xor
cmpsb
das
sub
inc
pop
mov
mov
cltd
pop
cwtl
inc
out
dec
push
lock
xor
nop
push
outsl
mov
xchg
sarb
dec
mov
cmp
and
push
push
mov
cmp
sti
sub
fiaddl
addr16
imul
jne
xor
cmp
dec
outsl
sti
mov
adc
ds
js
pop
lret
jge
jae
xchg
leave
mov
or
pop
jne
outsb
and
cli
sub
mov
pop
cwtl
xor
inc
das
add
pop
mov
push
mov
inc
repnz
icebp
push
js
into
mov
jecxz
lds
mov
mov
dec
aaa
hlt
cmp
lahf
mov
sbb
sub
mov
pop
mov
add
jne
ljmp
sarb
cltd
std
fnstsw
and
sub
push
jnp
mov
jg
add
pop
cmp
mov
push
addl
insb
xchg
sub
jo
mov
mov
xchg
dec
fiadds
lahf
jl
sbb
hlt
idivl
in
xchg
mov
jge
jae
ret
mov
jbe
gs
dec
call
add
int3
stos
xchg
lock
movsb
cmpsl
add
xchg
add
pop
xchg
mov
mov
aaa
jmp
add
fidivl
test
sbb
cmpb
cmp
out
sub
sbbb
pop
mov
push
mov
mov
lods
xlat
xchg
std
inc
fiaddl
pop
fisubrl
sbbb
js
js
pop
sti
sbb
lahf
ret
outsl
adc
and
mov
cmp
pop
or
subb
gs
insb
mov
mov
lds
out
dec
ja
inc
jg
imul
pop
mov
pop
popf
popf
test
sbb
imul
inc
jp
and
das
sub
adc
jge
adc
enter
add
loopne
xchg
jg
inc
push
dec
jo
fs
scas
sti
mov
add
in
daa
popa
mov
pushl
clc
or
dec
cld
inc
das
add
jae
mov
dec
xor
push
sub
clc
int3
mov
mov
sbb
and
dec
aaa
or
call
mov
dec
pop
out
testl
cmp
sbb
enter
outsl
fwait
mov
jo
ljmp
popa
inc
dec
inc
push
inc
std
movsb
dec
mov
fs
sbb
push
test
lcall
sub
lods
jge
jae
fdivrs
fiadds
mov
in
sub
idiv
mov
mov
sbb
sti
mov
mov
out
addr16
into
push
inc
std
movsb
sub
cmp
pop
inc
in
or
adc
add
pop
imul
inc
lds
push
aas
loop
repnz
nop
add
push
idivb
in
push
push
sahf
addr16
das
add
movb
pop
mov
mov
inc
das
add
jnp
sbb
adc
mov
std
push
out
xorb
add
pop
mov
push
and
mov
xor
inc
push
mov
jne
inc
je
or
xor
xchg
sbb
pop
mov
mov
add
xor
mov
das
and
test
cwtl
pop
mov
add
inc
das
add
test
pop
daa
pop
mov
dec
pusha
cmpb
cmp
push
or
sub
sahf
sbb
lcall
mov
pop
adc
xor
ret
inc
aas
scas
jb
adc
popl
sbb
cmp
push
ljmp
jo
lea
jns
rcrl
pop
push
mov
inc
mov
aas
inc
jnp
insl
insl
lea
push
jno
sbb
and
adc
jg
sub
push
cli
sbb
int
pop
xchg
push
jle
adc
repz
imul
sub
popf
cmp
sub
mov
test
lahf
outsl
sti
inc
je
ljmp
jl
mov
jle
mov
out
push
pop
test
mov
call
and
push
or
mov
sub
sub
outsb
jb
inc
push
movsb
inc
mov
filds
daa
sbb
jbe
js
adc
jae
mov
outsl
mov
or
xchg
mov
fldcw
inc
cmp
xor
enter
sbb
mov
out
sub
mov
jne
push
cmp
lret
movsl
sub
mov
mov
mov
dec
pushf
fbstp
jge
jae
inc
mov
jmp
adc
xchg
mov
adc
das
add
je
mov
inc
icebp
addr16
push
into
sti
int3
jnp
fsubs
lods
mul
iret
fnstenv
xchg
iret
and
mov
pop
jmp
sub
stos
scas
jmp
add
jne
jecxz
popa
ret
cltd
push
jmp
ret
mov
enter
push
mov
rorl
js
rcr
xchg
daa
sub
cli
cld
leave
aaa
xchg
mov
lcall
mov
sub
and
sti
mov
jae
out
push
pop
out
cltd
sub
ss
cmp
aas
sbb
pop
shrl
xchg
mov
and
ret
cmp
cmp
xchg
out
mov
sbb
xchg
or
mov
jg
jl
sub
cmpb
cs
cmpb
sar
cli
mov
nop
cmpb
cmp
out
cmpl
adc
clc
push
mov
cmp
mov
dec
jb
ljmp
sbb
jne
ljmp
scas
js
sahf
push
fcoml
in
xchg
mov
dec
mov
push
lahf
sbb
xchg
pop
or
pop
decb
sti
or
lock
or
cmp
lret
xor
dec
sub
testb
or
addb
cmp
xchg
pop
xchg
xchg
xor
push
inc
sahf
in
inc
sti
mov
mov
lock
pop
out
or
std
outsl
cmp
arpl
jle
inc
pop
jno
xchg
add
lcall
pop
lea
mov
cld
add
movsb
sub
cmp
lock
ror
das
sub
mov
inc
xchg
fidivl
into
pop
test
cmp
stc
xor
ret
arpl
mov
add
popa
out
imul
lahf
les
mov
cmp
xchg
adcl
mov
cs
jl
jne
out
cmp
enter
cmp
jg
or
inc
sti
mov
rcrb
xchg
ljmp
or
loop
inc
cmc
cli
cltd
outsl
xchg
xchg
movsl
insb
sti
mov
jge
push
mov
push
sti
ret
mov
inc
xchg
or
pop
aad
ret
mov
loope
or
pusha
ja
inc
pop
inc
sbb
sti
or
push
or
and
xor
arpl
lcall
add
lock
out
cs
mov
jo
mov
jbe
ljmp
add
wbinvd
push
cmp
fsubrs
imull
adc
mov
jmp
push
loop
inc
push
dec
test
shrl
mov
adc
inc
sti
mov
pop
lock
cli
andb
sti
jmp
lcall
in
insl
fimull
popf
test
lcall
std
scas
sti
mov
arpl
popa
xchg
add
lods
push
int3
popl
sbb
and
cmc
add
lahf
sub
jae
data16
scas
sti
mov
dec
stos
repz
lea
or
ljmp
outsl
fidivl
mov
out
inc
es
sub
lds
jp
mov
lods
cmpsb
push
push
orl
dec
mov
int
aaa
ret
test
inc
out
mov
or
outsl
and
gs
push
push
ds
inc
jne
rcrb
mov
xchg
adc
push
xchg
fadd
mov
lea
lods
or
lret
push
inc
clc
mov
scas
mov
or
mov
inc
and
mov
stc
inc
inc
xchg
mov
sub
bnd
mov
or
lea
mov
mov
out
pusha
or
pushf
adc
jp
jns
or
pusha
fnstsw
int
std
out
push
sti
lea
jle
cmp
es
pop
ljmp
jg
movsl
jmp
arpl
pop
cli
mov
out
xchg
test
mov
mov
jne
ret
sub
xor
xor
mov
js
jns
js
sub
hlt
cmp
repnz
adc
mov
je
jo
dec
mov
out
cmpsb
dec
xlat
bound
sub
xchg
imul
push
ja
and
jg
lods
dec
out
xor
pop
in
scas
xor
scas
mov
or
clc
stos
xor
in
or
or
icebp
add
lcall
lds
push
jl
mov
mov
xchg
sbb
and
mov
add
mov
pusha
call
lea
adc
das
inc
dec
adcl
hlt
hlt
and
sub
jl
sub
lcall
shl
xor
sti
mov
mov
sti
mov
nop
ljmp
incl
push
ret
adc
and
push
cmp
inc
mov
dec
push
adc
cmp
sti
mov
mov
icebp
push
in
sub
decl
mov
add
pop
push
lahf
jb
das
add
testl
mov
cmp
neg
sub
jmp
xor
and
jo
ss
sarl
out
es
mov
inc
ljmp
cltd
call
mov
push
push
orb
cmp
sti
mov
outsb
and
ret
push
pop
or
or
call
cmp
sub
add
mov
fstl
xchg
sbbl
cli
pushf
and
enter
adc
sub
push
add
in
sti
mov
xor
sti
mov
popl
nop
xchg
lock
int
mov
add
into
aas
das
add
push
jl
xchg
sub
sti
mov
xchg
ret
cs
pop
cmp
jle
sbb
xor
mov
outsb
mov
scas
sbb
cmp
sti
or
sbb
sbb
jp
jns
popf
fcoms
rcr
iret
pushf
es
sub
mov
insl
pop
lea
dec
testl
lcall
mov
cmp
cmp
ja
xchg
and
mov
lcall
outsb
sub
mov
sbb
xor
inc
mov
fldenv
syscall
cmp
sti
sub
push
adc
nop
mov
les
dec
dec
dec
lods
jmp
rorb
enter
js
test
shlb
lea
in
enter
lds
push
je
cs
arpl
sub
mov
jo
imul
push
jno
cld
jns
or
lods
mov
or
push
cmp
mov
dec
jmp
jb
mov
outsl
lahf
repz
jle
fcom
mov
mov
inc
cs
cmp
sub
sbb
sahf
pop
cmp
adc
add
inc
fucomp
inc
es
cmp
cmpsl
cmp
negl
add
shr
pop
or
sti
call
inc
xchg
insb
dec
mov
cld
mov
movsb
or
xchg
insl
pushf
mov
mov
int
jp
pop
xchg
mov
mov
jp
jns
aas
mov
shrb
pop
test
mov
sub
mov
ffreep
jo
jmp
pop
add
push
jae
dec
inc
pop
add
andl
jg
out
and
in
aas
push
js
cmp
mov
scas
imul
add
inc
mov
push
test
inc
popa
fcoms
ja
movsb
imul
push
das
stc
out
sub
sbb
sub
loop
push
jg,pn
pop
dec
imul
int
cmp
push
pop
push
test
gs
jp
popa
je
outsb
ret
cmp
leave
jno
aaa
inc
iret
xor
push
in
xchg
or
mov
cmp
arpl
push
or
add
ja
mov
test
lahf
adc
mov
sahf
mov
sti
mov
cmp
js
in
and
jbe
test
imul
das
mov
test
pushf
xor
push
int
and
inc
dec
negb
out
jle
fcompl
push
inc
mov
inc
cmp
bound
cmp
sub
xchg
mov
sub
mov
or
js
in
es
outsl
push
mov
aad
cmpsb
push
fstpt
mov
pop
jo
inc
mov
outsl
fwait
or
mov
inc
mov
sub
fnstsw
cmpb
fstl
fisttpll
das
add
add
push
mov
inc
ja
xlat
cmp
jne
mov
mov
mov
lcall
cmc
cmp
jp
adc
xor
repz
sub
rorl
sbb
xor
add
xor
mov
leave
mov
mov
roll
dec
pop
jmp
jp
xchg
test
fisttpl
xchg
mov
cmp
mov
cmp
xchg
test
ljmp
sub
or
sub
cwtl
ret
jnp
jnp
sub
jle
mov
mov
lcall
adc
out
xor
call
xor
mov
movsb
inc
outsl
add
add
fbstp
scas
cmpl
ficoml
test
pop
and
add
jg
sub
mov
pop
and
pusha
int
push
out
sub
cmp
int
mov
jge
mov
push
in
int3
lea
lea
je
xchg
clc
jl
addl
jmp
std
xchg
mov
pusha
add
xor
nop
push
outsl
mov
mov
out
dec
nop
pop
aas
mov
cli
sub
dec
adc
cmp
or
shll
fildll
lea
sub
jecxz
fisubrs
sub
push
mov
push
fimull
inc
mov
rcl
sub
call
int
leave
xchg
std
scas
repnz
pusha
pop
push
sahf
mov
xor
cld
icebp
add
inc
sti
mov
shlb
nop
in
dec
mov
in
cltd
xchg
scas
push
add
testl
mov
repnz
or
jmp
dec
mov
dec
inc
pop
add
jmp
push
adc
lods
mov
inc
pextrw
jae
mov
xchg
loop
xlat
mov
mov
jmp
test
jp
out
xor
dec
mov
adc
in
xlat
in
roll
lods
jne
notb
cmp
test
and
cmpsl
mov
cmpsb
add
das
cmc
xchg
mul
lret
sub
cmp
ret
mov
pop
cld
lea
jp
sub
fstpt
mov
aas
push
aaa
fidivl
dec
mov
push
adcb
mov
pop
pop
bnd
mov
mov
outsl
jo
pop
gs
jo
ljmp
int3
inc
inc
mov
push
jp,pn
jns
xor
insb
lods
fcmovbe
pop
imul
pop
daa
cltd
insb
pop
or
fiaddl
xchg
into
dec
ljmp
and
movsl
ljmp
pop
adc
and
fwait
call
xor
push
jl
cmp
sti
mov
sub
xchg
aad
sub
sub
daa
add
jmp
mov
sub
fstl
jl
aas
add
push
jecxz
repnz
pop
xchg
mov
mov
aaa
or
mov
fidivl
mov
pop
or
push
in
aas
sti
mov
sub
daa
add
lea
xor
incb
and
in
add
push
sahf
imul
xor
mov
inc
out
loopne
push
xchg
mov
cmp
pop
mov
outsl
jo
lea
fwait
adc
add
movsl
sub
dec
je
xchg
aad
mov
adc
push
stc
lret
jb
test
dec
andl
lds
sti
mov
mov
pop
xchg
mov
mov
lods
fcmovne
in
movsb
add
fidivl
mov
inc
mov
fldenv
cmpb
cmp
fnsave
hlt
fimull
filds
jle
sbbb
mov
aaa
push
pop
js
shl
xchg
std
shl
mov
mov
adc
jl
add
int
or
mov
and
je
push
mov
test
jle
sbb
ss
xor
fwait
cmpb
imulb
addb
pop
jl
fcmove
pusha
dec
cmp
pushf
int
xor
in
rcrb
inc
sti
mov
in
sub
out
jno
xor
nop
xchg
inc
xor
ds
adc
cmp
xchg
sub
das
add
mov
repnz
inc
pop
daa
push
mov
mov
roll
sbb
pop
daa
into
or
cwtl
outsb
xchg
test
xor
scas
push
in
inc
sti
mov
int
popf
dec
lcall
or
fcoml
push
out
adc
mov
xor
xor
in
inc
sti
mov
dec
pop
mov
jmp
push
incl
cmp
cmp
aam
sbb
xchg
dec
sbbl
inc
mov
mov
adc
push
cmp
sti
iret
mov
ret
into
out
jno
xor
lds
mov
mov
loope
int
data16
scas
test
add
mov
jge
sbb
push
shll
loop
pushf
jb
dec
add
call
rcll
divl
das
mov
scas
dec
pop
ficoms
push
arpl
mov
sti
sub
sub
jmp
pop
aaa
jecxz
clc
jns
jns
xchg
pop
cmp
pop
pop
sub
xor
and
je
adc
add
das
and
xchg
xor
scas
into
pmullw
cltd
sbb
mov
mov
les
inc
loopne
mov
xor
mov
inc
ljmp
pop
loop
lahf
adc
dec
jno
mov
shrb
mov
sub
pop
push
adc
xchg
xchg
cwtl
mov
inc
das
add
mov
push
sub
adc
sbb
xchg
add
out
adc
mov
lcall
push
xchg
mov
cmp
sti
mov
cld
sbb
mov
int
jl
cmc
jo
mov
inc
add
loop
dec
lods
pop
out
pop
sbb
lret
mov
insl
adc
pop
jmp
inc
mov
mov
sub
inc
xchg
movb
pop
lods
fs
push
sahf
push
cmp
inc
mov
orl
daa
push
push
mov
push
aam
jbe
sub
aad
movsl
dec
mov
mov
stc
push
fs
outsb
mov
aad
popa
test
xor
mov
xor
xchg
push
mov
sbb
cmp
and
mov
jne
out
dec
adc
sub
lret
or
adc
rclb
push
inc
pop
subl
mov
xchg
out
jae,pn
out
adc
mov
mov
inc
das
add
fnstsw
push
in
pop
daa
rcpps
inc
ljmp
sbb
and
xchg
cmovnp
shll
cmp
outsl
mov
call
push
xchg
ret
js
pop
mov
stos
jmp
adc
rcrb
jge
jae
cmp
xor
dec
enter
sub
push
imul
inc
xchg
mov
pop
pop
jl
fidivs
int3
cmp
jo
xchg
pop
or
adc
test
aas
mov
arpl
jne
les
inc
std
lods
jb
sarb
stos
jbe
js
adc
mov
push
sbb
loopne
imul
es
xor
jge
jbe
add
dec
aaa
adc
push
out
xor
cmp
push
mov
mov
cld
lret
loope
adc
mov
cmp
cli
inc
ljmp
sti
inc
das
add
and
mov
jle
pop
mov
cwtl
addb
and
xor
daa
adc
sbb
jae
sub
sbb
sbb
push
mov
cwtl
lea
in
mov
cmp
adc
popa
outsl
cmc
jo
mov
jp
cmp
adc
sbb
je
dec
into
arpl
jae
or
sarl
adc
or
pop
jb
clc
push
mov
rcll
cmp
sti
lds
jmp
adc
inc
aam
shlb
jns
sub
dec
sbb
cltd
outsl
incl
lea
pop
dec
push
or
rcl
xchg
push
xchg
out
in
shll
mov
jmp
or
shr
sti
outsb
mov
cmp
test
hlt
out
xchg
popa
ds
sub
lcall
push
adcl
in
or
pop
out
and
xchg
add
mov
add
cmp
iret
xchg
push
mov
ja
shl
xchg
sbb
incl
loope
lcall
adc
jl
aam
je
and
sti
mov
dec
inc
and
pop
sbb
div
fcomp
mov
xchg
cmp
popf
adc
adc
int
sti
mov
rclb
mov
out
fsubrl
adc
jp
jp
jp
lahf
jnp
pop
sub
jle
cwtl
dec
jnp
loope
cld
es
jno
sbb
cmp
js
dec
jae
and
pop
inc
push
jnp
fbstp
clc
sub
adc
loop
mov
cmp
sbb
insl
fidivl
mov
xor
mov
fsubrs
stc
pusha
jge
jae
scas
dec
aam
mov
pushf
pop
in
repnz
xorl
push
jno
inc
fmul
movsb
or
xor
sub
sub
sub
test
and
dec
or
orl
fcmovbe
inc
adc
xor
jae
out
and
xor
pop
push
xor
xchg
pop
push
or
jge
add
ja
dec
mov
in
sbb
adc
jo
adc
repz
xchg
sbb
jo
pop
lods
jmp
std
jo
jns
jns
ss
out
lahf
mov
pop
scas
aas
push
scas
movd
into
fdivs
jp
mov
arpl
mov
xor
mov
sbb
jecxz
add
push
das
jns
ljmp
stc
jl
push
hlt
outsb
clc
jns
jns
test
xchg
ja
sub
sbb
sbb
sub
fadds
lea
out
scas
and
add
clc
jle
or
mov
cmp
test
dec
cmp
cmp
jo
mov
mov
sub
in
sub
jge
aad
xchg
out
fnstenv
jb
shrl
and
daa
in
cmpsl
lahf
adc
mov
or
sbb
adc
mov
add
aaa
add
inc
rcrb
pop
mov
inc
ljmp
mov
mov
cmc
cmp
data16
inc
das
add
mov
inc
pop
daa
push
repz
mov
mov
mov
pop
or
ret
xlat
jecxz
adc
lods
push
jb
arpl
add
ret
mov
inc
ljmp
pop
sti
or
call
sub
push
or
jge
adc
push
inc
add
out
test
rorb
xor
sub
dec
dec
in
shlb
add
add
orb
xorb
clc
gs
mov
outsl
popf
mov
and
mov
and
lods
add
pop
pop
gs
clc
sahf
pop
cmp
adc
incl
pop
loope
dec
adc
stc
cmp
push
pop
push
or
rol
sub
ljmp
fdivrs
inc
xor
pusha
pop
push
inc
popa
dec
addb
and
aaa
cmp
and
adc
ljmp
cmp
push
inc
xchg
inc
mov
xchg
adc
in
out
pop
out
xchg
outsb
clc
jns
jns
jmp
std
lahf
mov
xchg
scas
mov
adc
aas
js
pop
repnz
push
enter
lret
jl
push
pushf
test
or
sti
in
gs
or
push
xor
arpl
lcall
cld
dec
mov
jnp
inc
das
add
out
out
insb
sub
lods
mov
sbb
int3
mov
cmp
push
js
cmp
dec
mov
nop
ljmp
ljmp
sarb
mov
and
push
aas
gs
mov
dec
test
mov
cmp
ss
mov
and
jge
dec
lea
cmp
enter
sqrtps
or
jge
into
out
mov
cmp
out
jno
xor
mulb
or
pop
cs
sarb
mov
add
daa
xor
mov
xor
sahf
sbb
lahf
iret
daa
and
push
scas
push
jmp
cmp
jg
lahf
aas
jg
pop
mov
outsl
cwtl
int
mov
jle
daa
aas
clc
mov
int3
pop
stos
imul
pop
ret
inc
das
add
push
jl
cmp
xor
pop
sti
mov
rcrb
lds
xor
jno
mov
jb
ficoms
lahf
mov
push
dec
jo
add
out
scas
sti
mov
es
adc
mov
out
pop
xchg
push
das
jns
jmp
push
xor
imul
mov
or
sub
dec
cmpsb
in
push
clc
shll
sbb
test
mov
and
mov
dec
push
mov
xchg
data16
push
mov
aad
pushf
xchg
lock
in
loope
mov
and
xchg
sbb
mov
and
adc
pop
mov
cmp
cmp
arpl
mov
out
arpl
adc
pushf
jbe,pn
push
test
and
inc
adc
add
or
fwait
test
mov
mov
cld
jns
stc
cld
sbb
ficompl
pop
lods
pop
and
push
or
je
aad
jae
ja
jg
icebp
adcb
imul
cld
dec
sub
lds
push
dec
jo
movb
scas
sti
mov
lret
outsb
sbb
mov
popa
mov
lds
xchg
cmp
cs
jecxz
adc
mov
out
aas
sub
push
xchg
add
out
aas
andb
xor
mov
sti
mov
sbb
ficoml
sarb
push
push
aaa
stc
cmp
test
inc
cmp
adc
sub
pop
ljmp
call
sarl
scas
addr16
push
sbb
jge
jae
jns
xor
mov
fidivl
test
mov
mov
xchg
and
mov
sbb
je
mov
mov
stc
mov
pop
cld
cmpsb
jne
aaa
out
in
add
jmp
adc
xchg
test
cmpb
sarb
test
mov
iret
jo
test
in
push
loop
movb
fucomip
mov
out
insb
fistl
adc
bound
sub
ret
lcall
jno
ret
sub
adcb
dec
jae
xchg
in
xor
lods
mov
cmpsl
xchg
movsb
xor
jns
das
push
pop
pop
push
fs
xorb
sub
push
stos
add
xor
xchg
push
push
jmp
nop
push
mov
push
bndldx
rcl
xchg
or
shll
cwtl
mov
mov
das
sahf
sbb
outsl
jne
lret
pop
sub
push
push
out
mov
clc
cmp
or
xchg
std
ss
aas
cltd
mov
adc
xchg
mov
js
shl
xchg
sbb
cwtl
jnp
cld
loope
lcall
arpl
pushl
rol
xchg
add
cld
mov
mov
dec
aaa
or
out
mov
cmp
out
insl
sub
xchg
pushl
out
cmp
je
leave
dec
out
or
cs
sbb
adc
and
cmpsl
adc
and
jp
jns
test
into
ljmp
aas
jno
das
cld
cwtl
mov
jns
das
das
sub
cmp
lods
test
vpcmpeqw
push
outsl
push
cmp
dec
mov
inc
sti
or
and
add
pushl
jmp
adc
jecxz
jmp
jne
xor
dec
lea
leave
xchg
es
sbb
lea
ret
sahf
dec
mov
out
out
and
and
and
addr16
imul
divb
jbe
dec
pop
cld
inc
das
add
xchg
mov
sbb
push
xchg
add
mov
dec
icebp
jmp
hlt
xchg
mov
dec
addl
pop
jne
mov
into
mov
sub
pop
jne
xor
push
cmp
jge
pusha
mov
push
decl
xchg
bnd
das
negb
outsl
lahf
xchg
mov
aas
add
aaa
push
pop
out
jb
pop
jecxz
push
cmp
jg
adc
mov
fsubp
sbb
sbb
or
inc
scas
dec
add
fldcw
cltd
or
dec
pop
int
sbb
and
xchg
mov
loopne
vunpcklpd
pop
xchg
pop
mov
add
mov
or
mov
and
ja
or
sbb
mov
imul
adc
testb
into
sahf
fst
and
inc
pusha
pop
pop
add
cmp
xchg
add
and
mov
lea
xlat
dec
int3
xchg
xchg
lock
and
push
adc
add
lahf
mov
xor
mov
or
xlat
jecxz
adc
pop
mov
mov
lcall
pusha
in
adc
cmp
in
adc
das
pop
mov
cmp
sub
lret
add
mov
xor
loopne
jne
and
mov
sub
test
ljmp
js
and
cmpsb
mov
push
test
hlt
pop
jl
cmp
icebp
push
xchg
and
xchg
xchg
jnp
inc
pop
daa
add
or
inc
fisubl
cmp
push
mov
sub
sti
or
pushl
ljmp
in
mov
fbstp
push
cs
fsubl
lahf
and
sbb
out
dec
jno
lret
mov
or
std
sub
jns
dec
mov
aam
sbb
add
dec
mov
or
pop
mov
repnz
mov
pop
mov
mov
sub
mov
cltd
adc
mov
cmp
mov
mov
add
jne
call
cmp
push
jmp
jg
ret
mov
cmp
mov
scas
out
mov
pushl
out
cmp
jle
lret
fnsave
call
in
push
jmp
pop
es
stos
xchg
dec
imul
push
repnz
mov
add
lcall
call
cmp
mov
std
aas
dec
aaa
adc
add
out
mov
cmp
push
mov
imul
xchg
std
xor
inc
mov
xchg
xchg
sar
push
push
push
sbb
mov
mov
fs
inc
das
add
add
xchg
jno
lret
jmp
ud0
xor
sbb
xor
cmp
push
cmp
dec
mov
inc
sti
inc
popa
sub
loop
and
lcall
adc
clc
mov
add
incb
sbb
addb
int
xor
inc
push
mov
insl
pop
or
sti
shl
inc
pop
daa
or
imul
mov
xor
test
mov
xchg
cs
sub
jle
adc
lcall
nop
and
fstl
out
mov
jle
mov
call
je
mov
jno
das
cli
je
lgs
mov
pushf
xor
cmc
pop
sbb
imul
ljmp
mov
scas
jmp
pop
or
xchg
mov
sub
xorb
subb
out
mov
js
push
mov
popa
mov
lret
mov
lock
inc
lds
jmp
test
adc
inc
xor
mov
pop
lret
sbb
sub
dec
sub
mov
andl
mov
inc
out
sbb
testl
negl
xchg
sub
sub
sub
jg
out
mov
jle
dec
sbb
mov
add
and
push
sarb
xchg
test
add
and
push
pop
je
xchg
xchg
and
fwait
jae
dec
cld
cmp
subb
jle
push
dec
mov
cmp
cmp
inc
xor
rclb
das
adc
out
dec
pop
out
inc
data16
inc
ljmp
push
pop
mov
add
or
out
mov
out
xor
mov
xchg
fdivs
pop
jne
xor
inc
jl
test
push
lods
xchg
out
pop
xor
invd
out
scas
jmp
cltd
pop
sub
fdivrl
sub
neg
sub
inc
dec
pop
xor
pop
nop
xor
pushf
lock
mov
push
jg
sbb
nop
cmc
stos
pop
or
sti
enter
sbb
shl
daa
pop
lods
mov
repz
adc
shll
jmp
in
and
mov
jns
jne
jns
mov
outsl
inc
mov
add
xor
cmp
loop
fiadds
out
xor
mov
call
dec
adc
add
mov
sbb
inc
das
add
adc
inc
adc
sbb
inc
mov
fsub
jle
sbb
xor
idiv
loope
lahf
mov
pop
mov
xchg
pop
or
sti
inc
inc
xor
std
mov
or
aam
mov
iret
cli
fwait
jno
inc
add
aaa
in
mov
mov
insl
outsl
add
push
mov
inc
pop
xchg
rcrl
movb
xchg
pop
lock
pop
pop
or
dec
mov
cmp
cli
lahf
test
add
sbb
mov
sbb
add
int
xchg
jne
sbb
ss
xlat
lahf
mov
and
sbb
inc
mov
jecxz
cmc
xor
outsl
inc
in
sbb
jecxz
imul
jecxz
lahf
cmp
in
cld
dec
les
ds
xchg
and
gs
loope
push
cmp
lahf
mov
ja
mov
push
pop
gs
pop
out
js
cs
call
ja
lea
dec
pop
push
sub
rcl
or
fs
sbb
cld
shll
mov
sbb
out
push
mov
cmp
mov
dec
fstp
ljmp
filds
push
mov
fstl
aad
aaa
pop
std
incb
data16
mov
out
inc
push
jae
repz
mov
jne
jl
dec
das
rorl
nop
lods
jb
push
xchg
lea
sub
movsl
popa
adc
or
je
xchg
bound
mov
sbb
lcall
add
leave
pop
pop
mov
mov
or
sti
mov
push
mov
inc
jne
ret
push
xor
sub
sti
cmp
jecxz
ficoms
cld
mov
cmp
stc
mov
cmp
sti
mov
lea
cmpsb
cld
inc
das
add
xor
xor
inc
inc
push
addr16
std
xor
test
xchg
outsl
test
add
mov
dec
mov
cmp
sti
cmc
outsb
add
ljmp
dec
push
in
inc
shld
pop
mov
ljmp
xor
scas
das
sti
idivl
xlat
push
je
xchg
bound
add
sbbl
mov
pop
mov
cmp
sti
mov
xchg
mov
cmp
sti
mov
adc
das
jb
out
scas
jmp
cmp
das
das
test
pop
xor
rol
and
mov
mov
adc
sub
cmp
mov
outsl
fwait
and
mov
jmp
sbb
adc
cmp
sti
mov
cmpsl
sbb
out
test
repnz
jecxz
sub
mov
and
xchg
enter
sar
push
sarl
scas
inc
jge
pop
andl
mov
js
fcom
loope
pop
rorb
inc
loope
shl
xchg
cmp
cwtl
mov
dec
subl
sti
mov
sub
sub
out
lds
enter
int
xor
mov
xchg
add
inc
das
add
sbb
mov
int3
mov
cmp
aas
sbb
mov
xchg
mov
mull
out
jns
ljmp
mov
jne
mov
jp
dec
push
sbb
and
aam
mov
test
mov
stc
in
mov
test
and
in
dec
xchg
add
fistpl
xchg
and
mov
cmp
dec
aaa
or
out
mov
cmp
out
negb
jmp
add
and
sub
pop
fbstp
mull
cmp
outsb
or
jns
imul
out
and
jb
das
cld
push
out
pushf
mov
outsl
mov
xchg
ljmp
les
in
adc
xorb
xchg
xor
cld
cld
add
jl
jno
adc
and
sti
mov
test
sbb
or
add
out
cmp
loopne
lahf
sbbb
gs
jo
ljmp
js
sbbb
mov
jp,pn
jp
out
cwtl
adc
ljmp
cwtl
adc
bound
or
sbb
ja
adc
pop
das
add
adc
test
arpl
loopne
fwait
mov
sahf
cmp
daa
xchg
and
xchg
xchg
sbb
icebp
out
dec
push
out
testb
add
cmp
push
mov
sub
jl
ud0
clc
and
sti
mov
or
dec
dec
aas
test
decb
out
aas
sbb
jae
ss
cmp
lds
aaa
xor
mov
xor
cli
or
xor
mov
pop
push
out
xor
mov
adc
sub
dec
test
scas
test
sahf
lods
cmp
lahf
cltd
popf
dec
scas
neg
xchg
daa
dec
outsb
addr16
jecxz
lahf
sbbb
lcall
adc
adc
lock
pop
out
test
imul
aas
sbb
and
add
jbe
test
sti
mov
fldcw
mov
mov
inc
push
idivb
shl
daa
add
repnz
pop
mov
les
pop
sbb
add
ss
les
insl
enter
push
cmpsl
sbb
pop
ljmp
test
pop
inc
sahf
addr16
call
inc
insb
cmc
fnstenv
jnp
lahf
sub
imul
mov
out
mov
and
shll
mov
daa
sbb
sbb
pop
lahf
cmp
xchg
shl
daa
push
into
pusha
test
pop
inc
lahf
jge
xchg
mov
int
lods
sub
cmpsb
sub
in
mov
cmpsb
jno
mov
sbb
test
ljmp
and
test
scas
push
inc
test
xchg
xchg
push
mov
ja
rol
xchg
and
adc
mov
icebp
aaa
pushf
mov
int3
ret
sub
divl
shll
adc
pop
push
cmp
subb
jmp
inc
std
movsb
cli
mov
sbbb
lahf
add
sbb
rorl
and
lahf
xchg
rol
subl
mov
xchg
repz
ret
add
out
pop
jg
test
and
jp
jns
adc
sahf
push
jne
jmp
xor
arpl
stc
je
in
cmp
jle
jae
bound
clc
push
popa
jl
mov
adc
in
jo
insb
xchg
mov
cmp
jno
aaa
add
mov
mov
repz
mov
popa
mov
push
push
or
pushl
lcall
pop
addr16
sub
mov
cmpsl
pop
adc
loop
xchg
out
fcoms
aas
js
jp
mov
push
mov
imul
jl
adc
or
mov
gs
lret
lret
ret
out
ds
cmp
inc
sbb
dec
pop
test
adc
add
pop
xchg
sbb
cli
pop
mov
xchg
pop
or
sti
xchg
and
dec
shll
adc
mov
add
test
pop
pop
mov
adc
or
add
jae
ja
leave
mov
lods
mov
push
popa
cltd
outsb
xor
mov
mov
lods
fisubl
sub
add
fidivl
xor
cmp
cmp
daa
sub
add
mov
mov
cs
pop
xor
scas
fidivrl
cs
in
outsl
adc
clc
push
pop
mov
sbb
push
xor
jbe
mov
scas
inc
cmpsb
sahf
pop
cmp
push
adc
aas
stos
stos
mov
cld
push
movsl
adc
lods
adc
mov
xor
cmp
mov
cmp
mov
call
out
inc
mov
fsubrp
mov
out
xchg
inc
lods
popa
sbb
xchg
insb
lret
adc
adc
mov
add
std
xor
imul
cmc
lret
jo
cmp
aas
pop
das
and
test
xor
mov
mov
inc
das
add
pop
out
jno
xor
mov
scas
push
int
leave
pop
cmp
adc
jmp
mov
out
mov
stc
push
mov
shld
push
adc
nopl
aam
in
mov
lcall
cmpsb
stos
adc
cs
dec
js
sub
xor
gs
sub
jbe
nop
pusha
fbstp
rolb
xor
pop
jns
imul
pop
loope
adc
cld
mov
cltd
xchg
sub
je
dec
mov
inc
fnsave
or
outsl
outsl
xor
stc
imul
cmc
pop
or
sti
lods
sub
daa
or
test
jg
jnp
add
push
sub
std
xchg
xchg
scas
and
push
pop
cmp
mov
cli
mov
cmpb
sarb
lcall
inc
das
add
data16
stos
ds
int
push
pop
out
dec
mov
fwait
popa
addr16
sbb
xor
testb
adc
mov
xor
mov
mov
jne
pusha
les
adc
es
pop
mov
add
and
jge
or
loop
loope
je
xchg
sub
popf
sbb
lcall
push
mov
cmp
add
mov
lds
mov
add
pop
inc
jmp
xchg
mov
sbb
mov
nop
xor
mov
js
cmp
mov
jmp
xchg
int
push
inc
addr16
test
inc
dec
xchg
mov
or
bnd
add
int
xor
adc
inc
add
adc
xchg
cmp
sti
scas
gs
adc
ds
icebp
in
and
mov
cmp
pop
inc
push
pop
xor
movl
push
aad
jbe
mov
daa
adc
pop
ss
adc
cld
mov
jae
loop
pop
decb
sub
sub
jae
mov
mov
inc
mov
cmp
es
push
add
dec
sbb
aas
mov
fdivrl
inc
jmp
inc
js
mov
lds
sbb
mov
xor
mov
push
icebp
dec
mov
cmp
sub
adc
push
mov
rcrb
xchg
shl
daa
add
or
cs
cmp
cmp
dec
outsl
pop
fiadds
scas
sti
mov
and
popa
mov
jne
or
sti
imul
cmp
int
lods
arpl
lcall
ret
mov
cmp
lret
inc
and
repz
push
js
pop
adc
pusha
cltd
popl
sub
xor
nop
push
outsl
mov
fldcw
sahf
pop
cmp
ud0
xor
sbb
xor
sahf
cmp
pop
cmp
or
sahf
pusha
or
and
sti
decl
test
dec
sub
cmp
inc
xchg
out
pop
or
sti
in
sahf
into
out
dec
pop
out
and
mulb
mov
adc
enter
jno
call
cmc
dec
mov
sti
and
add
incl
mov
dec
cmp
add
inc
add
cmp
adc
out
outsb
sub
add
jle
pop
sub
das
jl
cli
cltd
outsl
fwait
mov
clc
jne
jne
pop
sti
push
dec
fimull
sub
pop
inc
clc
test
out
es
fiadds
push
pop
push
jg
inc
das
add
sti
mov
.byte
