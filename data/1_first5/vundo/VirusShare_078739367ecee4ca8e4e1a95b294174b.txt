sub
add
or
add
add
add
push
inc
add
add
add
add
add
nop
add
nop
add
add
add
add
add
or
rolb
or
jo
std
or
and
jl
adc
jle
and
push
add
add
or
pop
add
add
jo
pop
pop
addb
add
add
add
inc
add
add
rolb
add
add
nop
add
mov
sbb
xor
sub
rolb
add
add
add
add
add
or
insl
add
add
add
add
pop
mov
add
add
add
push
addb
add
add
or
add
push
add
add
add
add
add
add
mov
add
pop
inc
add
push
xor
push
pop
loopne
fs
add
sldt
int3
or
add
add
sub
push
jo
flds
xor
roll
add
or
add
or
rolb
add
add
add
jo
pop
add
add
add
inc
add
mov
push
add
push
or
push
loopne
orl
add
push
inc
add
or
add
mov
orb
mov
add
add
add
add
adc
add
add
cli
loope
add
add
cli
mov
add
fimull
add
xchg
adc
faddl
jo
testb
add
or
add
lock
push
addb
add
add
or
add
add
add
adc
dec
add
add
add
inc
add
add
or
add
add
add
and
rolb
xchg
add
add
mov
add
add
lock
or
xchg
or
rolb
or
add
or
add
add
add
add
add
add
add
add
or
mov
add
and
lret
add
or
and
or
rolb
or
nop
add
add
add
add
add
or
add
pop
adc
sbb
jo
sahf
add
add
add
add
add
add
or
push
add
add
add
add
add
add
and
pop
adc
bound
pusha
add
push
lock
in
push
popl
mov
mov
mov
mov
movl
call
movb
cmp
jne
mov
ret
push
popl
push
addl
push
push
popl
mov
addw
addl
pusha
push
popl
call
orl
mov
orb
push
addw
xorl
addb
addl
sbbl
push
push
popl
orw
call
push
popl
cmpl
jne
xorb
push
popl
call
andb
andl
ret
push
popl
push
popl
jmp
movb
xor
push
popl
sbbl
mov
addl
shl
push
popl
push
popl
mov
subl
push
popl
shl
xorl
mov
orw
cmp
jne
add
push
popl
mov
add
orw
sub
sbbl
subw
call
mov
movb
popa
push
popl
pusha
push
popl
andb
call
xorw
mov
andb
push
mov
xorl
xorw
addl
addl
push
movl
call
or
push
push
popl
push
popl
xorl
or
addl
push
popl
pop
push
popl
cmp
jne
subb
ret
xorl
push
popl
popa
subb
call
movw
push
mov
addb
xorl
subw
subw
addl
push
popl
push
push
popl
push
popl
call
orw
push
popl
push
push
mov
xor
xchg
subb
mov
and
or
shl
push
popl
orw
push
sub
xor
and
movl
push
movl
movb
call
push
popl
push
xor
mov
push
popl
orb
push
mov
jmp
orw
or
pop
or
mov
mov
subl
push
push
popl
orb
push
push
popl
push
orl
push
popl
mov
add
mov
addw
rep
subb
pop
orl
addw
pop
push
push
sub
add
xor
dec
mov
xor
pop
push
add
mov
sub
xchg
push
popl
xor
push
popl
orb
jmp
movb
sub
push
popl
orl
mov
movw
sub
push
popl
sub
push
popl
sbbb
mov
or
sub
andb
or
jne
push
popl
add
push
popl
jmp
push
popl
mov
push
popl
sbbl
shr
push
popl
shl
push
popl
mov
andb
add
andb
xorl
jmp
push
popl
sub
push
popl
mov
mov
orb
add
push
popl
cmp
jne
xorw
push
popl
mov
push
popl
add
andw
mov
addl
add
push
popl
addb
cmp
jne
xorw
ret
mov
xorw
push
add
push
popl
xor
push
popl
push
popl
pushl
and
mov
pop
xor
lea
orl
push
popl
or
push
popl
mov
andb
xorl
mov
orb
push
popl
lods
orb
push
popl
mov
xorw
movl
pop
push
popl
andb
ret
push
popl
push
popl
push
movl
push
popl
mov
addw
add
movl
subw
push
xorb
push
push
popl
push
orw
push
popl
push
movl
push
popl
push
and
movw
mov
push
popl
add
mov
subl
push
popl
add
push
popl
push
popl
pushl
addb
mov
push
popl
push
popl
add
push
popl
push
popl
add
or
xorw
mov
orl
addl
add
push
popl
push
popl
xor
push
popl
lea
push
popl
mov
push
popl
push
popl
add
push
popl
sbbw
mov
orl
xorb
xor
andb
rol
sbbw
xor
push
popl
andl
inc
push
popl
cmpb
jne
movb
sub
cmp
je
sbbb
inc
and
cmp
jb
push
popl
mov
orw
add
andw
movzwl
push
popl
mov
orl
add
push
popl
push
popl
mov
push
popl
add
andw
pop
xorb
cmp
jbe
push
popl
cmp
jae
sub
pushl
mov
pushl
orb
push
xorl
xorl
push
popl
addl
andb
addw
pushl
push
popl
call
xorl
call
movl
push
popl
pop
movl
orw
pop
push
popl
movw
pop
sbbl
subb
pop
andb
sbbw
pop
subb
leave
movb
andw
ret
sbbl
call
bound
or
cmpsl
ret
xor
imul
pop
cmp
rcrb
mov
cmp
cmp
cmpl
push
ret
mov
fcmovb
ret
xor
or
arpl
dec
jg
les
loopne
imul
xchg
mov
cmpsb
clc
repnz
lds
dec
push
shl
cwtl
frstor
insb
outsb
call
mov
out
mov
in
cmc
imul
cld
cs
xor
xor
add
pusha
mov
outsl
adc
ljmp
fucomi
add
test
or
push
adc
shlb
mov
adc
xor
mov
gs
js
movsl
je
pop
dec
xor
into
cld
sub
and
lcall
pop
adc
mov
daa
xchg
pop
sub
pop
mov
lcall
aad
hlt
sub
ror
lds
cmp
loope
das
sub
inc
jg
cltd
daa
ljmp
movsl
pop
loope
mov
aaa
iret
mov
inc
test
clc
test
das
adc
sub
inc
sub
inc
or
movsl
cmc
mov
ja
push
dec
outsb
jecxz
ficoml
shll
aad
adc
xor
sbb
fcoms
in
xchg
or
cmpsl
inc
call
pop
add
daa
jl
clc
in
jns
pmullw
lock
or
xchg
loopne
loope
dec
clc
push
or
mulb
jge
mov
or
lods
fsubs
setbe
jg
mov
sbb
js
das
imul
jne
enter
add
or
iret
pop
cli
xchg
imul
mov
aad
mov
mov
fidivrl
cwtl
mov
push
xor
inc
fdivr
mov
or
icebp
ret
dec
or
js
sbb
mov
sub
ret
xchg
les
pop
dec
xor
arpl
pop
movq
gs
adc
mov
xchg
or
fwait
and
or
stc
push
and
pop
add
pop
mov
das
xchg
or
push
pop
loope
loope
or
adc
fprem
out
jle
adc
dec
jg
mov
xor
aad
cmpsl
lea
ret
pop
or
lods
fsubs
xchg
jnp
inc
or
pop
adc
lods
nop
repnz
adc
aam
sub
daa
xchg
lcall
or
dec
addb
xchg
aaa
jne
das
jno
ret
aad
in
dec
sbb
fistpl
sbb
or
jle
popa
add
mov
mov
test
jmp
jg
outsb
in
pop
pop
add
rol
ds
dec
jne,pn
or
xorb
mov
sbb
inc
nop
xor
xor
enter
mov
cli
lods
ds
call
xchg
xchg
sub
pop
outsb
out
fisubrs
lahf
pop
das
sbbl
pop
jo
cli
dec
mov
push
mov
lret
jge
or
mov
xor
and
loop
dec
das
mov
addr16
ficomps
or
xorb
jns
arpl
adc
push
aaa
hlt
cmc
in
jmp
ljmp
cmc
iret
adc
ss
sbb
push
in
out
cld
pop
ret
mov
and
mov
aam
jge
icebp
and
pop
ret
dec
and
arpl
dec
sar
pop
or
repnz
adc
mov
sarl
cmpsl
sbb
nop
cltd
and
or
cltd
adc
xor
xchg
into
into
and
cld
pop
adc
adc
fcomip
mov
adc
sub
xor
or
out
das
das
das
cltd
sbb
fisubrs
push
xchg
iret
pushf
rcll
and
pusha
sub
sbb
or
sub
arpl
pop
xor
arpl
push
mov
dec
fsubrl
mov
cmp
loop
icebp
cltd
mov
xchg
repz
sahf
push
int
mov
lret
std
jbe
lea
cs
mov
shl
shrl
ljmp
out
jbe
sbb
test
and
in
repnz
shlb
jb
cltd
mov
push
push
pop
popf
pusha
push
int3
xchg
inc
lret
stos
xor
test
mov
mov
dec
jecxz
or
iret
mov
cmp
sti
inc
clc
pop
aaa
xchg
jp
les
or
ret
push
dec
mov
sarb
aaa
adc
mov
loope
repnz
loop
sbb
cltd
push
cmc
outsl
xor
popa
add
add
lods
fcoms
inc
lahf
jae
kxnorw
clc
dec
sbb
fnsave
pop
pop
add
sbb
enter
mov
pop
adc
mov
test
fstpl
inc
or
insb
enter
popa
addr16
loope
sahf
xor
and
ret
jno
nop
scas
inc
out
or
fidivl
ret
xchg
shl
decb
or
pop
std
fcoms
cld
insb
popw
and
lea
jbe
add
mov
rcrl
push
or
xchg
fisubl
nop
popf
and
adc
sahf
ljmp
or
daa
loope
push
or
jne
sub
test
xor
sub
mov
jno
lcall
ffreep
dec
add
ja
inc
cli
dec
call
mov
in
repz
xlat
clc
out
or
and
or
out
popf
jmp
jle
data16
xlat
rcl
rorl
pop
adc
das
jo
lret
pushl
cmp
mov
aam
xchg
lcall
jl
into
cmc
enter
pop
lea
loope
jne
jg
cltd
sub
jmp
ret
mov
push
test
std
mov
add
fimuls
lods
cs
adc
aad
rcll
sub
push
or
std
arpl
fldl2e
cltd
cmp
pop
clc
jnp
cli
subb
or
mov
push
div
dec
sbbb
repz
in
cmp
andl
mov
jns
outsb
push
int3
xor
and
xlat
leave
sub
shl
mov
or
mov
inc
or
cmpsl
test
les
shll
pop
pop
imul
iret
fnstcw
insb
jge
inc
or
sub
hlt
xlat
sbb
and
aad
jne
or
movb
loop
mov
or
outsb
xor
imul
inc
jg
push
xor
inc
lods
mov
pop
mov
gs
jl
into
jnp
adc
lock
xchg
int
out
sub
jnp
lock
or
scas
and
cmpsl
pop
lcall
or
rol
ss
add
outsl
fnsave
fldt
clc
jmp
mov
stc
dec
pop
in
pop
xchg
cmc
xchg
xchg
xor
mov
lahf
or
or
push
in
outsb
pop
or
inc
lods
fsubs
add
fisttpl
das
enter
test
xlat
sub
add
add
jno
cmp
loopne
mov
push
cmp
mov
add
mov
sbb
jmp
push
pushf
sarl
dec
shll
rcrb
movl
push
or
lcall
mov
das
cmc
fstpl
inc
or
or
xchg
fcmovnu
add
dec
cmc
scas
cmp
mov
std
sub
stos
jecxz
shl
es
test
mov
mov
inc
shlb
jae
ficompl
inc
or
pop
or
or
adc
jmp
and
adc
xlat
stc
push
and
pop
xchg
popa
bound
cmpsb
cmpsb
inc
mov
ljmp
sbb
sub
lods
mov
lret
ret
pop
gs
out
inc
ljmp
jnp
jno
das
fwait
sub
fcoms
subb
mov
int
repz
xor
fcomp
js
lcall
mov
call
mov
add
xor
mov
dec
xor
das
mov
jno
ret
jnp
in
dec
sbb
add
aad
push
mov
mov
or
mov
xchg
fists
or
xchg
les
shlw
mov
shll
or
sti
mov
sbb
jnp
xchg
fbstp
mov
pushf
jno
jge
or
addb
ret
sbb
dec
xor
cmc
lret
fsts
dec
fcompl
inc
inc
movsb
outsl
mov
jo
lcall
inc
pop
sub
pop
mov
mov
xchg
xchg
dec
int
leave
das
fcmovbe
inc
xor
nop
mov
cmp
sahf
adc
sbb
ret
pusha
inc
mov
dec
mov
fwait
lahf
icebp
push
or
jb
push
sbb
out
shl
or
lret
inc
divl
dec
push
shlb
outsb
ja
mov
in
push
and
pop
add
pop
es
pop
jge
xchg
cwtl
add
in
daa
and
add
data16
xchg
insl
inc
or
pop
adc
lods
xor
mov
adc
xchg
out
jo
fildl
rcrl
rcr
or
pop
fmuls
cmp
arpl
mov
rcll
sub
jno
rcrb
aad
fnsave
mov
jbe
fiaddl
bound
and
add
sbb
mov
sbb
ret
xchg
mov
fsubrl
cli
addr16
jge
or
rsm
shrb
and
xchg
xchg
xor
adc
mov
lods
adc
cltd
mov
shll
mov
aas
lahf
push
loopne
sahf
mov
or
lods
fmul
rcrb
cmc
mov
cmp
shll
pop
cmpsl
mov
das
int3
or
ret
pop
std
xchg
or
outsb
mov
mov
insb
push
dec
add
pop
xor
jns
repz
fsts
pop
popf
pusha
push
sbb
les
xchg
or
jnp
popa
lods
or
imul
cmp
push
sbb
mul
xor
js
and
sub
jno
push
mov
inc
cmp
mov
add
push
testl
pop
add
xchg
xchg
sub
scas
dec
dec
jne
cmp
sahf
xlat
popa
or
cmp
add
push
add
cs
or
and
sub
pop
mov
lds
in
push
inc
iret
cmp
int3
xchg
cmp
inc
xor
fists
xor
mov
gs
jmp
xchg
movl
mov
mov
mov
sub
jns
adc
jmp
xchg
out
jo
std
hlt
aam
rcr
or
lcall
addr16
or
enter
inc
lret
mov
rcl
shll
cmc
mov
insb
inc
addr16
lret
ret
push
mov
adc
in
daa
mov
sub
jl
test
int3
cmpsl
add
mov
pushf
mov
mov
xor
int3
adc
pusha
push
add
lods
fmuls
jge
fs
rclb
sahf
mov
scas
mov
xchg
jb
mov
aaa
xchg
sahf
pop
dec
xor
or
xchg
stc
cmp
pop
sub
daa
fstps
dec
jge
xchg
cwtl
sbb
outsb
sub
lock
add
and
incb
out
dec
or
loop
dec
setg
xchg
fsubl
in
outsl
clc
bnd
inc
movsb
jle
or
pop
shl
jp
mov
sbb
mov
bound
xchg
movsl
outsb
cwtl
jo
pop
add
mov
mov
and
lock
aas
xor
jge
pop
lret
fcoms
mov
ficoml
sub
inc
xorl
cmc
fistpl
inc
or
sub
clc
in
xor
pushf
and
or
ljmp
add
arpl
cmpsl
outsb
repnz
adc
or
adc
cmc
mov
bound
cmp
push
in
dec
or
notb
jnp
stos
mov
xchg
fisubs
xor
outsl
loope
adc
orb
xor
cmc
push
imul
inc
or
fisubs
and
xchg
xchg
aas
pop
out
out
add
nop
push
int
cmp
jl
push
clc
jle
mov
fdivs
xor
out
mov
filds
cli
push
add
cwtl
mov
bound
imul
lret
jno
xchg
loop
aas
std
sbb
jo
popa
imul
xchg
inc
lret
mov
and
cmp
cwtl
bnd
adc
sub
cmp
in
out
addb
pusha
cmp
adc
int
leave
xchg
push
xor
push
sahf
repnz
leave
jl
and
pop
sub
lret
mov
shll
mov
dec
dec
and
and
jnp
push
sub
mov
adc
mov
test
decb
test
sbb
cltd
jo
mov
or
lods
fcoms
adcl
ret
adc
pop
inc
pop
xor
pop
cwtl
mov
push
or
pusha
and
jmp
clc
fcompl
push
jg
rclb
or
push
adc
das
js
lea
push
and
out
andb
xor
cld
lret
jp
mov
aaa
loope
jae
pop
push
dec
rol
lock
mov
in
test
test
stos
pop
pop
sub
pop
das
shrd
adc
and
sbb
mov
pushw
xchg
int
or
loop
repz
paddw
add
mov
lock
push
rcll
pop
xchg
cmc
lds
call
ret
jl
sbb
dec
cmc
mov
lret
jp
mov
addr16
or
fsts
fisubrs
inc
fisttps
xor
pop
scas
mov
pop
dec
mov
mov
jbe
mov
jo
and
out
push
jg
mov
add
stc
mov
shrb
dec
rolb
daa
shrl
sbb
xchg
fwait
addr16
and
pop
add
pop
mov
sub
pop
sbb
pop
aad
int
mov
in
push
fiaddl
bound
cs
pop
aad
rolb
mov
jnp
add
aaa
test
pop
push
sbb
stc
and
cld
adc
pop
inc
and
mov
shll
cmc
scas
shll
nop
xchg
and
ret
jg
or
pop
jle
xchg
cwtl
sbb
pop
xor
add
jbe
lock
fcoms
or
and
dec
and
hlt
inc
add
sub
sbb
test
inc
stc
inc
mov
fmuls
xchg
insb
orl
mov
xchg
xchg
sub
andl
mov
fsubl
xchg
or
ss
mov
loope
arpl
das
cmpsb
cmc
lods
popa
xchg
aam
or
std
sahf
or
jg
or
sub
shrl
mov
lods
rcrb
pop
adc
xchg
lcall
xor
dec
mov
fimull
dec
sbb
cltd
ja
or
lock
xor
dec
jmp
out
pop
mov
jge
or
push
lock
popf
xchg
xor
pop
xor
pop
and
sub
adc
mov
push
cmc
or
xchg
cwtl
pop
fdiv
sub
cmp
lcall
jns
pop
push
mov
lret
testb
sahf
mov
push
std
mov
xor
push
cwtl
dec
xor
scas
lcall
cli
sbb
imul
dec
clc
add
ljmp
mov
or
testb
test
xor
fdivp
dec
mov
shl
and
rolb
call
std
stos
cmp
jae
xchg
jbe
add
and
or
xor
xchg
pop
fimull
shll
xor
cli
imul
xchg
icebp
aam
fs
xor
fldt
dec
jmp
xlat
pop
imul
pop
add
mov
pushl
mov
adc
dec
test
xor
mov
xor
gs
pop
add
std
jbe
mov
pushf
xchg
ret
lcall
mov
insl
push
or
pop
std
pop
xor
rclb
or
mov
xchg
dec
test
push
lret
stc
add
mov
addr16
jmp
movsb
push
xchg
hlt
and
outsb
ret
lock
xor
lock
enter
inc
ror
es
test
dec
sub
pop
test
imul
pop
aad
rorb
sbb
add
xor
add
fadd
aas
lods
or
test
xchg
testl
dec
mov
out
cmp
mov
dec
pop
xchg
inc
add
xor
lock
inc
shl
rclb
push
xor
pop
fstpl
inc
pusha
mov
rorl
mov
jp
and
cmpsb
aad
sahf
push
cmp
sti
or
arpl
dec
mov
lock
mov
ret
out
and
cld
adc
cwtl
xchg
lcall
xor
jle
icebp
aam
pop
nop
sub
fistl
mov
cmp
imul
adc
push
dec
movsb
sub
and
aad
mov
and
push
ljmp
pop
push
sbb
pop
pop
sti
adc
pop
inc
stos
std
push
clc
ljmp
nop
cwtl
and
adc
sbb
fisubrl
fisttpl
xor
inc
gs
mov
inc
or
or
enter
pop
push
adc
push
xor
cli
mov
jb
movsl
lds
nop
test
lret
xor
cmp
dec
pop
xchg
dec
lea
dec
pop
leave
push
inc
ret
fdivs
xchg
xchg
stos
push
cli
popa
adc
inc
ljmp
pushf
sbb
in
dec
sbb
out
lods
pop
icebp
jbe
mov
cld
jo
gs
pop
sub
pop
mov
iret
imul
mov
lcall
popa
jg
xchg
test
clc
lock
movsl
cli
or
or
cli
mov
and
insb
push
stc
das
repz
lret
shll
out
pop
das
mov
insl
test
test
and
push
sub
shll
xchg
hlt
das
out
dec
das
dec
inc
xchg
rorl
aam
dec
aaa
jmp
stos
adc
les
stc
pop
out
pop
sub
call
adc
xchg
jp
mov
int3
scas
ret
sbb
lret
js
or
and
adc
pop
bswap
dec
xchg
mov
adc
inc
les
lea
adc
adc
das
mov
lods
fcoms
adc
enter
loop
mov
add
pop
jo
pusha
gs
loope
or
lret
xor
dec
push
pop
mov
sub
test
or
mov
mov
sarl
xchg
popf
or
sbb
pop
sbb
cwtl
jnp
pushf
or
sbb
adc
push
cltd
xor
in
xor
mov
stos
cmp
inc
ja,pn
mov
or
lods
fcomps
mov
fsubl
inc
push
sub
nop
fwait
xor
icebp
xchg
aas
pop
aad
movsl
repnz
adc
mov
pop
pushf
lea
push
jl
js
stc
push
out
mov
lret
push
inc
mov
add
mov
xchg
stc
cltd
mov
ljmp
dec
push
and
mov
addr16
mov
fnsetpm(287
jnp
and
fldenv
push
push
sti
pop
dec
dec
mov
loope
or
imul
fstpt
adc
jmp
xlat
pop
imul
cld
sbb
and
and
imul
dec
adc
shl
enter
jge
xlat
dec
imul
xchg
stc
cs
mov
sbb
fcompl
inc
or
cmp
mov
rcr
or
jbe
or
jnp
dec
cwtl
lcall
sub
cmc
fistps
inc
or
mov
cmc
ret
adc
ljmp
jb
fsts
arpl
subl
push
and
cld
pop
adc
mov
adc
xchg
aas
jno
shll
cmc
mov
jg
sbb
adc
je
ror
pop
rolb
add
sti
or
insb
mov
jge
mov
push
inc
or
mov
rcrl
sbb
ljmp
mov
fcmovnu
scas
dec
filds
dec
mov
mov
rorb
push
mov
mov
movsb
fisubrs
sahf
pop
sub
pop
mov
sbb
daa
enter
mov
cmp
out
or
ds
xor
push
jp
icebp
leave
inc
dec
mov
call
rorb
int
and
xor
jb
add
inc
add
ss
jno
xchg
insl
loope
in
mov
cmp
xorl
jl
aas
mov
sub
xchg
pop
adcl
out
xchg
inc
lea
dec
add
js
gs
and
add
or
xor
adc
push
les
cmpsb
mov
mov
jae
mov
or
outsb
cmp
mov
mov
adc
and
pop
cli
pop
adc
lods
shr
es
enter
lahf
fimuls
xchg
icebp
shrb
rolb
push
or
lock
shlb
and
les
scas
je
decl
cmp
shll
mov
jae
cld
ds
sub
pop
sub
out
cmp
addl
push
push
bound
cs
arpl
repz
out
adc
cltd
sub
clc
cmp
add
inc
jnp
sbb
adc
add
in
dec
jg
jg
shrb
mov
adc
xlat
test
gs
push
out
insb
dec
ja
jle
and
mov
es
lods
test
xchg
scas
adcl
xor
dec
push
xor
mov
ret
cmp
jmp
push
and
lods
sub
fucom
sbb
pop
aad
pop
and
or
das
rorb
ljmp
push
pop
sahf
popa
imul
fmulp
xchg
inc
lret
mov
out
dec
pop
lods
adc
insb
xor
sub
xchg
sbb
pop
aad
fstpl
daa
inc
loop
rorb
fiaddl
bound
fimuls
cwtl
push
call
inc
and
or
adc
int3
mov
or
mov
cmpsb
orl
aad
inc
pop
sub
mov
adc
or
outsl
les
shll
insl
jo
aam
shll
das
lret
loop
xchg
pop
pop
sub
shr
pop
xchg
lea
rclb
lcall
hlt
cld
cmp
jp
les
push
lods
iret
icebp
fucom
test
dec
cmpsb
shr
inc
pop
icebp
dec
xor
cmp
ret
rorb
daa
ret
fs
and
clc
pop
ja
pop
add
enter
fdiv
mov
leave
dec
lods
shll
mov
es
mov
adc
mov
or
or
push
xchg
in
sbb
push
inc
or
lods
cmc
roll
pop
jg
push
sub
or
pop
test
movsb
sarl
sub
lret
mov
mov
mov
nop
xor
sub
mov
dec
gs
push
cli
ds
ds
or
fcmovb
sub
cli
adc
test
sahf
dec
add
mov
idiv
push
movsb
jmp
adc
popl
xlat
rcrb
lods
test
inc
jmp
cmpsl
push
dec
jl
xor
test
cmp
and
mov
jmp
dec
mov
adc
adc
lock
lods
divb
roll
and
lahf
stos
push
into
cmpsb
ds
pop
pop
ret
xchg
push
or
lods
sub
sub
lods
fcoms
orb
je
lret
in
add
pop
jmp
rorl
mov
lds
mov
push
scas
lret
cwtl
sub
inc
mul
inc
cmp
loopne
sub
fisubs
inc
add
es
inc
xor
pop
pop
mov
cmp
cmc
leave
or
adcb
nop
fldl
fisttpll
pop
mov
dec
or
inc
ret
xchg
xchg
xor
xchg
lcall
xor
and
jb
xchg
cmp
sub
xor
xchg
pop
sbb
rcrl
or
shll
cmc
mov
sub
insb
push
xor
sub
cltd
insl
sub
push
cmc
fcompl
inc
or
xor
xchg
add
std
or
pop
sub
loope
bound
lahf
xor
orl
aad
js
and
mov
mov
movsl
test
es
dec
cmp
mov
mov
icebp
inc
popf
sar
leave
stos
pop
test
xchg
pop
movsl
cmp
fsubl
mov
and
fisttps
ret
and
jg
sub
clc
hlt
sub
repnz
jg
cltd
sub
jae
insb
sub
rorl
sbb
xchg
mov
inc
xchg
mov
add
mulb
arpl
dec
jg
les
sub
or
iret
sbbb
push
jne
test
xor
pop
mov
jns
xchg
repnz
es
mov
dec
add
fistpll
movsl
xchg
mov
sub
test
mov
sahf
jno
add
lods
add
js
cmp
mov
jne
mov
sahf
sbb
flds
push
enter
sub
pop
push
icebp
sub
lcall
nop
ret
adc
insb
call
inc
pop
call
mov
mov
fisubrl
xor
jnp
int3
std
or
cmp
ja
aas
out
push
frstor
cs
fwait
int
ds
negl
mov
xchg
jae
dec
inc
xchg
inc
ss
dec
cmp
cs
insb
call
xchg
call
jle
aaa
mov
arpl
adc
leave
or
stos
xorl
into
clc
aas
sbb
shl
or
lret
jnp
cs
rcll
cmc
dec
scas
dec
pop
xchg
das
xchg
xchg
sub
xlat
cwtl
cwtl
aad
xor
lea
ja
jbe
add
and
inc
or
push
push
xchg
in
jb
fadd
mov
jae
adc
cmp
jne
dec
or
jg
ds
and
jae
dec
add
mov
aam
xorb
shrd
or
xor
or
sbb
dec
addr16
in
das
mov
lcall
jg
mov
fcoms
or
movsl
pop
sbb
dec
adc
lds
add
or
xchg
pop
xlat
notb
test
enter
sub
fsubl
mov
aas
pop
or
ret
in
cmp
out
dec
aaa
outsl
inc
push
push
roll
test
idivl
xchg
leave
xchg
bound
dec
aaa
mov
pop
fnstenv
mov
repnz
push
jo
mov
sub
push
or
dec
daa
pushf
cmp
jmp
mov
mov
add
add
pop
mov
xchg
repz
inc
cltd
sub
dec
xor
insb
pop
jmp
shl
outsb
add
sub
stos
cmc
ficompl
inc
or
push
jmp
xor
push
stc
nop
pusha
out
pushl
push
lea
decb
mov
dec
or
lods
dec
cmp
loope
insb
aam
jbe
das
into
call
xchg
xor
add
dec
cwtl
clc
lock
push
fldl
mov
or
push
leave
lcall
lock
lcall
lock
cmp
sbb
out
subb
jne
lret
or
shrl
jg
cltd
xor
les
cmp
cmpsb
lcall
mov
out
sbb
fistpl
xor
test
adc
sbb
adc
cs
and
or
jbe
ror
push
loopne
inc
gs
test
popf
gs
or
rclb
add
add
add
jb
xor
mov
inc
cmc
bsf
aaa
rcll
ljmp
icebp
inc
in
xchg
xchg
cmp
sub
push
dec
rcll
in
xchg
stos
mov
mov
mov
pop
inc
dec
or
insb
call
inc
xchg
bnd
hlt
lret
pop
or
mov
fidivrl
and
and
imul
lcall
out
add
dec
mov
or
dec
cmp
icebp
addr16
in
dec
gs
lock
and
cltd
das
and
lret
scas
popa
sub
and
lds
xchg
into
bound
gs
sbb
lret
dec
adc
sti
adc
fisttps
fldl
sub
and
ss
sbb
ljmp
repnz
cmpsb
into
and
andl
arpl
xchg
push
aas
gs
sbb
clc
add
comiss
or
adc
or
and
jmp
push
mov
shr
adc
dec
in
sub
and
xchg
xchg
nop
push
std
cmp
arpl
scas
push
or
mov
lret
jae
fcoms
add
and
sub
cwtl
insb
pop
inc
pop
xchg
or
adc
mov
fisubl
xor
jp
in
sbb
mov
dec
dec
clc
inc
push
test
push
cmp
xor
testl
imul
sbb
push
stc
pop
or
xchg
add
xchg
sub
and
shr
es
lcall
jb
stc
cs
dec
sbb
int3
imul
imulb
jle
sar
sub
mov
fs
pop
sti
fistl
mov
loope
loope
loopne
pop
imul
dec
xor
xchg
and
pop
stc
or
sahf
les
rcll
stos
sbb
push
mov
push
stc
int3
jp
ret
jecxz,pn
inc
mov
cmp
clc
pop
pushf
mov
mov
aas
clc
test
test
aam
mov
fiaddl
pusha
and
gs
nop
stc
enter
adc
enter
mov
xor
push
fmuls
or
inc
or
add
cmp
jno
loope
imul
sub
sbb
push
lret
dec
nop
lahf
cmc
leave
dec
xor
pusha
jbe
jl
push
imull
adc
test
or
pop
dec
mov
or
mov
sti
popa
lods
xor
mov
pushl
lods
inc
jp
stos
mov
cmp
jge
or
jnp
push
pop
imul
pop
repnz
ret
lcall
sub
mov
fstpl
inc
or
jo
jge
or
xchg
pop
jecxz
cmc
scas
pop
pop
or
jnp
lret
cmp
pop
ds
fcoms
in
insb
or
inc
je
faddl
dec
stos
das
mulb
push
bound
loopne
cmc
scas
test
loope
add
or
stos
int3
xor
fldl
or
add
jnp
and
or
dec
push
shrb
int3
cmp
pop
pop
dec
jg
ret
ds
call
fiaddl
cld
shll
xor
test
cmp
enter
dec
enter
out
xchg
xor
adc
iret
popa
adc
je
cwtl
into
dec
shlb
pop
push
mov
out
jne,pn
mov
or
subb
fs
inc
pushf
xor
adc
dec
push
clc
repnz
and
movsl
and
pop
popa
jnp
dec
xor
scas
jmp
mov
xchg
loope
addr16
add
xchg
mov
cmpsl
cli
mov
mov
push
jno
daa
xor
jp
addr16
add
stos
add
cmp
lret
sub
insl
cwtl
push
aas
mov
cwtl
fidivrl
cwtl
mov
or
lods
fmuls
cmc
ret
adc
lcall
cmp
fnstenv
scas
sbb
inc
lock
fstps
inc
or
and
adcb
mov
inc
in
pop
ret
pop
jp
pop
sub
lock
pop
inc
or
cmp
xor
fnsave
shll
dec
ror
xchg
push
cmp
ljmp
and
sarl
sbb
insl
inc
adcb
xchg
lea
jg
mov
pop
dec
or
pop
imul
mov
jle
stos
shlb
loop
or
pop
adc
or
push
repnz
adc
mov
push
ljmp
and
push
push
clc
adc
xor
popf
cmp
push
mov
icebp
popf
movsl
into
jle
arpl
and
sub
ss
roll
mov
inc
sbb
push
test
sbb
xchg
sub
fsubl
ja
xor
cld
pop
lods
or
add
mov
call
mov
mov
sahf
fisttpll
xor
push
add
xchg
pop
pushf
mov
xchg
scas
cmc
aad
sbb
adc
imull
dec
xchg
mov
loopne
pop
sarl
mov
push
ljmp
mov
in
xchg
or
mov
iret
mov
jle
sti
shll
in
movsb
std
pop
push
repz
repnz
adc
xchg
shlw
sub
xchg
into
fisttpl
dec
jg
aad
or
jns
adc
sub
cmp
cmp
lcall
xchg
jo
and
jns
lea
jb
add
mov
cs
jecxz
sbb
clc
fistl
xchg
rcr
or
popa
dec
or
jnp
or
int
inc
mov
mov
fdivs
sar
pusha
adc
push
cmp
adc
dec
sbb
ljmp
push
lcall
dec
add
xchg
xchg
xor
je
repz
dec
ds
leave
aad
pusha
mov
pusha
mov
nop
mov
mov
adc
cmp
dec
jo
and
xorl
dec
lahf
xchg
adc
and
ss
mov
nop
mov
xchg
cltd
push
div
and
test
jns
sub
push
mov
adc
and
cmp
or
sbbb
ds
lods
neg
out
lock
dec
pop
clc
icebp
movsb
rclb
xchg
add
js
jae
xchg
xchg
xor
mov
xchg
xchg
aaa
stos
mov
popf
lds
enter
rcr
mov
xchg
lock
xchg
popf
cmc
aam
stc
into
movsl
push
jp
and
adc
inc
mov
dec
push
and
test
pop
mov
in
add
cli
mov
sbb
in
popf
xor
mov
sub
out
dec
mov
mov
or
out
pusha
sub
inc
das
or
shll
out
shrb
scas
and
mov
xor
fcoms
push
push
stos
out
adc
and
mov
outsl
insb
xor
lret
dec
ret
fiaddl
dec
mov
xchg
xchg
das
test
mov
jl
dec
xchg
out
popf
loope
mov
xchg
fisttps
and
rol
xchg
cltd
push
jmp
cltd
sbbl
sub
adc
fcompl
inc
or
xor
mov
mov
into
sub
aaa
add
inc
pusha
add
mov
mov
inc
xor
mov
sub
mov
mov
daa
popf
mov
or
lods
fdivr
idivb
div
mov
xchg
lock
pop
out
cmc
lods
in
repz
das
cmp
fcoms
or
xor
cmp
popa
clc
or
call
sbb
mov
mov
xchg
cmp
cli
insb
pop
jp
les
scas
lods
push
mov
adc
mov
or
or
push
push
or
addr16
es
sub
pushf
arpl
xchg
push
or
in
mov
sbb
sbb
sub
decl
pop
fs
faddl
adc
pop
pop
mov
dec
sub
jne
xchg
out
pop
inc
or
xchg
pushl
hlt
lock
or
jg
test
mov
loope
test
xor
cmp
test
dec
add
ds
xchg
das
adc
mov
push
loope
cld
ret
xchg
in
sub
xor
push
or
add
add
lods
fmuls
mov
and
xchg
call
mov
jbe
cmp
push
movsl
jb
nop
pop
cmc
enter
dec
aam
repnz
lcall
icebp
xchg
into
push
daa
fsts
cmpb
xchg
mov
mov
add
or
pop
adc
mov
adc
stos
push
lcall
or
jne
nop
xchg
xor
mov
and
rolb
dec
add
mov
dec
sbb
ret
ds
and
or
add
arpl
outsb
aam
ss
mov
xchg
testl
repz
cli
pop
push
jnp
aas
pop
adcl
dec
sti
push
xor
push
xor
xchg
cmp
pop
cltd
mov
push
or
mov
clc
fimuls
repz
mov
jo
mov
sub
sub
sbb
jge
int3
cld
adc
pop
inc
adc
ja
comiss
arpl
out
mov
inc
jg
xlat
mov
aad
dec
pop
xchg
mov
cmpsl
sbb
mov
insb
loop
insb
fisubl
xor
jp
fidivl
xchg
or
fcoml
or
or
sbb
je
sbb
sahf
adc
mov
mov
pushf
xchg
cwtl
sub
das
jo
or
pop
loopne
imul
add
jp
les
das
or
into
xchg
lods
xchg
xchg
xchg
das
in
jecxz
cltd
jg
xor
push
mov
aad
arpl
aam
fcoms
ja
mov
aam
mov
mov
loopne
inc
or
push
or
xchg
jmp
insb
repnz
cltd
sbb
fcos
and
mov
fwait
pusha
and
arpl
xor
add
shll
ds
jge,pn
lcall
push
lcall
and
adc
inc
test
inc
or
xor
or
adc
cmc
scas
std
test
jge
jg
sub
dec
divb
cmp
add
inc
call
pop
dec
in
inc
jo
sub
daa
fcmove
out
sarl
add
and
add
dec
jle
ret
lcall
clc
xchg
rorb
add
pop
cmpsl
gs
test
mov
leave
or
jbe
testl
shll
sub
mov
cmp
rcll
dec
inc
div
xchg
lea
dec
or
mov
xchg
mov
cs
adc
jg
adc
int3
mov
jne
mull
inc
movsl
sub
xor
pop
or
loopne
jecxz
add
fdivp
std
jge
or
mov
or
xchg
lea
cmp
mov
mov
adcb
jle
add
jo
imul
add
stos
sub
inc
cli
dec
das
shrl
cmp
rcll
mov
mov
aaa
pop
arpl
cmp
rcrb
mov
mov
and
jb
shrb
popf
xchg
stc
in
arpl
adc
pushf
ror
loopne
notl
push
fsts
gs
in
push
outsb
sahf
nop
mov
fnstcw
xor
jge
pusha
std
pop
cmc
or
leave
cli
pop
ds
xchg
filds
jno
in
cmc
cwtl
stc
lahf
out
xor
xchg
ret
jg
cltd
sub
mov
push
sub
sbb
or
ret
rcr
lret
insl
lcall
adc
fcom
stos
pop
lcall
ds
xchg
jne
fnsave
push
faddl
jmp
mov
hlt
adc
push
mov
push
pop
fs
xchg
mov
xchg
cmpl
cld
nop
cwtl
sub
mov
xchg
ljmp
mov
adc
pop
or
and
sub
mov
nop
dec
in
call
mov
lahf
xor
bnd
mov
fmuls
or
xor
movsl
or
lret
mov
out
movsl
lcall
lahf
or
jnp
pop
repz
xor
mov
cmpl
ror
lds
cmp
xor
mov
or
lods
fsubrs
push
dec
mov
adc
dec
cmc
mov
adc
fcom
stc
push
mov
or
and
cld
adc
pop
inc
popf
pop
les
imul
aam
addr16
rcr
or
jge
call
cs
pop
cltd
pop
data16
faddp
xchg
inc
lret
outsb
xchg
iret
xchg
out
mov
xor
jb
push
pop
movsb
push
xor
cld
push
pop
inc
jge
fistps
popf
adc
sbb
inc
div
stos
mov
daa
xor
rorl
mov
pop
inc
in
push
mov
and
mov
int3
insb
enter
roll
fcoms
push
sub
ret
les
testb
jmp
pop
in
mov
insb
popaw
or
cmp
push
jge
mov
push
ss
cltd
test
rcrb
nop
cmc
lds
testl
popa
int
cmp
adc
shll
popf
fists
inc
outsl
xchg
cmpsl
in
pop
mov
imul
outsb
sbb
pop
aad
in
mov
sub
adc
add
xchg
in
pop
inc
or
xlat
cmp
xor
mov
push
pop
jg
push
das
jnp,pn
es
inc
mov
es
iret
jp
jno
lds
sub
inc
je
mov
test
popa
add
lock
js
mov
sub
and
pop
pop
call
mov
mov
and
xchg
cltd
fisubrl
xor
jnp
lret
int3
sub
icebp
das
jge
lcall
dec
je
adc
ja
jle
cltd
xchg
pop
inc
xchg
or
sahf
mov
jb
lds
in
dec
sbb
cmc
jp
xlat
or
cld
outsb
push
lods
adc
bound
fisttpll
xlat
jge
xchg
cwtl
in
sbb
jne
jae
or
pop
fcomps
dec
inc
outsb
call
inc
pop
aad
mov
dec
ficomps
divl
lret
mov
ja
or
add
pop
adc
jne
dec
dec
mov
and
push
cltd
pop
jle
fs
popa
sti
shl
sbb
stos
sub
ds
jae
push
push
jno
call
inc
out
out
clc
xlat
iret
lods
ret
pop
sbb
int3
inc
out
or
imul
dec
adc
mov
es
or
outsl
lret
dec
xabort
or
xchg
pop
loopne
push
xor
mov
das
cmpsl
fwait
outsb
inc
cmc
xor
cmc
push
adc
mov
outsb
add
sahf
lock
sub
sub
sahf
test
xchg
mov
sub
mov
jo
pop
cltd
pop
add
lahf
stc
sub
pop
lods
test
sbb
pop
xor
shlb
outsl
fs
popf
dec
or
aam
rorl
inc
enter
clc
jmp
xor
push
mov
lret
ret
sbb
aam
aas
mov
sbb
jmp
inc
lret
insb
jno
add
lods
fdivl
gs
popa
add
mov
mov
fimull
xor
sub
sub
and
cmp
pop
inc
cld
ffreep
mov
shll
mov
repz
mov
push
add
idivl
cltd
sub
or
cltd
push
jle
popa
xchg
in
aas
dec
xor
jge
popa
add
stc
pop
pop
xchg
repnz
adc
xchg
in
clc
xlat
add
shlb
push
cmpsb
outsb
dec
or
jmp
loope
daa
inc
or
xor
or
adc
cmc
mov
jns
pop
pop
cs
dec
sub
mov
pop
dec
or
pop
addr16
fstpt
mov
cmp
enter
fdivr
push
gs
repz
fcoms
or
sbb
or
subb
test
aam
mov
adcl
pop
and
and
push
push
pop
aaa
cltd
mov
and
lahf
nop
int
cmp
jp
adcb
cwtl
ret
inc
xchg
icebp
in
push
repnz
enter
in
mov
inc
xchg
push
xor
les
sbb
mov
adc
mov
mov
cmp
xchg
outsl
shrb
adc
jg
push
xor
stos
movsb
pop
cld
xchg
mov
adc
sub
mov
jb
xchg
out
pop
mul
push
int3
push
and
imul
jle
mov
cmp
mov
jle
int3
mov
gs
hlt
sub
mov
pop
adc
fisttpll
pop
fs
fsubrl
in
mov
sub
mov
add
jns
jge
xchg
cwtl
out
outsb
mov
and
rcl
jne
out
lods
dec
mov
add
jb
cmp
adc
lret
dec
out
insl
les
inc
lret
out
cmp
push
outsl
orl
pop
jle
adc
cmp
popl
daa
sbb
xchg
movsl
pop
jno
jno
pusha
add
mov
mov
inc
xor
popf
pop
sub
movsl
das
adc
jo
jbe
jmp
das
or
gs
xchg
daa
xor
jp
sahf
pop
fwait
pop
sub
leave
ss
sub
xchg
das
adc
lock
sbb
or
xchg
insl
xchg
iret
fisttpll
dec
addr16
mulb
push
imul
inc
mov
fiaddl
pusha
and
gs
nop
xchg
fistpl
jbe
int3
pushf
xlat
frstor
push
sub
aam
orl
xchg
cmc
mov
filds
or
and
or
mov
lock
xchg
sub
rclb
pop
std
xchg
jmp
cmpsl
jmp
and
push
ficompl
xor
jns
pop
mov
in
nop
clc
xchg
fcoml
or
add
sbb
mov
ljmp
or
fs
gs
inc
or
inc
or
pop
or
and
scas
fcoms
or
xchg
fstpl
iret
lods
ret
sbb
or
stc
push
call
adc
lods
fcoms
nop
sahf
and
or
fdiv
ficomps
clc
cli
out
cltd
mov
jp
lret
add
mov
or
sub
stc
xchg
xchg
orl
jmp
cmpl
mov
fists
icebp
mov
int
inc
or
inc
or
mov
push
int
adc
jmp
push
adc
xor
cld
scas
dec
push
shlb
outsb
out
inc
or
mov
jl
pop
xchg
mov
js
rorl
xorb
and
inc
popa
aaa
inc
xchg
xchg
or
inc
inc
xorl
dec
jg
cltd
xor
mov
rcrb
ret
mov
push
or
inc
jecxz
adc
fisubl
lods
fsubs
nop
dec
rcr
xchg
rclb
mov
xor
push
ret
pop
lret
out
inc
pop
inc
in
fcoms
or
pop
imul
pop
inc
or
push
mov
mov
pop
push
les
lcall
sbb
faddl
pop
das
inc
decl
jp
test
push
psubusw
or
imull
jg,pt
mov
into
loopne
dec
inc
shlb
jae
fcomps
inc
or
outsl
lret
dec
cmpsl
clc
sti
pop
cmp
lcall
and
bound
pop
xchg
stc
add
push
cli
jge
sbb
in
xchg
notb
ljmp
sbb
lea
ficompl
lahf
lea
inc
or
adc
add
shrl
iret
icebp
jge,pt
lcall
sub
adc
xchg
mov
arpl
ja
pop
push
loope
cli
sub
std
dec
inc
shlb
jae
dec
sub
jg
xlat
imul
mov
mov
adc
inc
lcall
mov
repz
push
xchg
dec
mov
insb
adc
add
jmp
mov
or
enter
sti
shl
fisubrl
push
mov
mov
jp
push
cmp
sbb
and
es
pop
int
mov
pop
loopne
cmc
mov
test
inc
ljmp
mov
enter
jg
push
xor
ficomps
jp
les
and
jns
insb
jmp
shr
fstl
jp
ljmp
inc
fsubrs
ret
inc
insb
das
jmp
insl
loop
or
lods
fadd
clc
call
les
xor
popa
add
sub
in
bound
mov
cmp
sahf
inc
cli
ss
pop
scas
cs
pop
jg
push
xor
scas
cs
int3
or
jmp
inc
push
jno
dec
xchg
push
cmpl
shl
repnz
ja
idiv
pop
or
repnz
adc
popf
les
fistps
adc
and
inc
jge
hlt
gs
jbe
xor
dec
and
adc
inc
int3
xchg
cmp
lret
pushf
push
sub
or
lcall
std
rcll
and
cmc
cmpsl
pop
sub
hlt
mov
xor
inc
ret
add
xor
sub
inc
shl
fstps
inc
or
sub
cmp
nop
popf
and
adc
js
push
sub
xchg
cmp
adc
ss
or
icebp
mov
sub
or
jb
sub
inc
add
cmp
sub
push
dec
push
shlb
outsb
cwtl
sub
cld
nop
adc
cmpsl
clc
mov
mov
fsts
xor
js
xchg
cwtl
sub
enter
fstpl
aad
add
or
repnz
mov
arpl
dec
cmp
inc
stos
lods
push
push
int3
fs
lea
orb
loopne
scas
sub
pop
cmc
rcrb
mov
adc
pop
jle
shrl
mov
sub
lret
pop
inc
dec
mov
js
and
xor
loope
inc
xchg
xchg
pop
test
xor
sub
jp
les
push
add
inc
jl
push
cld
pop
dec
clc
cmpl
out
aaa
fs
xchg
imul
lods
cld
imul
pop
jg
les
inc
fimuls
test
out
xchg
push
dec
pop
arpl
arpl
es
dec
push
sub
clc
inc
out
shlb
ret
ret
ret
jecxz
ljmp
mov
mov
loope
or
rcr
in
dec
sbb
fidivl
in
add
pop
decb
mov
imul
enter
sub
js
lcall
sbb
frstor
pop
movups
cld
outsb
push
add
pop
mov
sub
jns
fcoml
or
add
gs
clc
fsubrl
or
jns
add
dec
sbb
push
pop
dec
inc
arpl
inc
leave
xchg
jmp
clc
fstp
outsb
imul
dec
cmc
lods
and
mov
enter
repnz
adc
les
shll
repnz
fwait
sbb
pop
mov
aad
mov
pusha
push
sbb
arpl
pop
inc
cmpsl
loope
mov
imul
dec
sub
mov
adc
and
xchg
std
sub
lock
adc
test
push
or
and
sub
mov
lret
ret
sbb
adc
dec
jl,pn
lock
cmp
xchg
mov
in
lret
popa
push
js
and
sub
jnp
jge
or
pop
adc
bound
mov
mov
cmp
lret
cmpl
or
or
cmp
imul
xor
add
sbb
jmp
lea
or
cld
jb
fldcw
pusha
add
mov
mov
inc
xor
scas
or
xor
iret
lods
cld
push
pop
inc
xchg
std
aad
and
pushl
sbb
les
mov
pop
fistl
and
pop
sub
loop
loopne
inc
or
outsb
test
jle
dec
xchg
out
clc
xlat
icebp
lret
ret
push
mov
xchg
jae
in
lods
cmp
out
xor
dec
lret
in
in
lret
mov
mov
inc
dec
test
fldl
add
dec
notb
cmp
pop
popa
add
jmp
in
push
test
cs
adc
dec
or
pop
fs
ficoms
lea
adc
mov
mov
fcoms
js
sub
adc
mov
xor
push
cmp
sub
lea
adc
popf
adc
xor
push
mov
pop
leave
lret
lods
call
add
stos
xlat
adc
or
mov
add
lods
dec
shlb
outsl
cwtl
dec
sub
divb
jne
push
aad
loope
shl
adc
sub
or
shlb
inc
inc
sahf
add
cmc
ficomps
inc
or
add
xor
cmp
dec
out
das
lahf
sbb
fidivrl
cli
imul
pusha
decl
out
sbbb
mov
hlt
inc
call
popf
mov
jge
or
movsb
inc
test
dec
das
xchg
daa
push
dec
fwait
jnp
add
hlt
rcl
mov
sub
test
hlt
out
fsubr
nop
lcall
jne
or
lods
fmuls
sbb
sbb
shll
or
jo
ret
in
dec
sbb
cli
imul
addr16
or
jo
push
into
mov
mov
sub
mov
shl
mov
shll
lea
adc
test
in
cs
gs
pop
sub
sti
pop
aad
fsubrp
mov
mov
loop
mov
pop
cld
push
jne
xchg
loopne
or
xchg
push
jmp
xor
dec
lret
add
push
lret
ret
push
cli
push
pop
sub
pop
daa
fldcw
stos
xchg
cwtl
sbb
mov
and
add
sbb
in
cld
pop
pop
inc
add
sarl
adc
mov
mov
or
jb
les
add
decl
or
adc
movsb
mov
repnz
cld
insl
addr16
jb
les
sbb
hlt
lret
xchg
pop
aam
or
cld
insl
addr16
gs
xchg
and
int3
sub
sub
push
xor
lods
fcoms
test
or
xchg
into
pop
ror
scas
ret
sbb
dec
fstps
or
js
sub
cltd
pop
gs
fidivrs
mov
hlt
sub
loope
getsec
xor
sbb
pop
inc
dec
cmp
mov
adc
rcrb
movsl
inc
lock
push
bound
sub
inc
cld
push
pop
inc
sub
fisttpll
test
sbb
outsl
aam
in
mov
nop
fwait
daa
xor
ret
sbb
aam
xchg
ss
in
mov
adc
add
loop
pop
or
ss
rclb
jp
les
icebp
mov
mov
xchg
icebp
pop
xchg
xchg
das
push
push
cmp
rcr
mov
xchg
ret
xchg
xor
sub
aaa
cs
daa
flds
or
jne
sbbl
cs
sbb
es
aas
int
pop
xor
jne
cwtl
cmp
xchg
pop
sbb
sub
dec
cmc
les
stos
fisttps
shl
mov
adc
out
push
and
inc
fldl
push
cmp
cs
inc
pop
sub
xchg
das
adc
jno
mov
fwait
out
outsl
adc
scas
inc
or
push
or
mov
xchg
hlt
xchg
test
rol
sbb
es
push
cmc
imul
push
adc
mov
out
ds
inc
rcll
mov
cmp
clc
xchg
push
pop
or
andb
aad
and
xor
push
or
jecxz
roll
xor
push
les
data16
or
xchg
fadd
jge
push
sub
lahf
jmp
add
rclb
lods
fcoms
std
xor
mov
mov
xor
inc
shlb
add
dec
cmc
mov
aas
out
mov
lahf
out
and
cltd
ficompl
jecxz
aad
into
test
stos
push
loop
mov
inc
shll
in
lods
dec
fs
add
jns
fnsave
mov
fsts
and
mov
xchg
std
bnd
ljmp
dec
or
in
lret
pop
push
xorl
outsl
rcl
es
jb
sub
sbbl
lret
cmp
in
cmpsb
xchg
dec
lods
adc
insb
xor
dec
adc
jae
in
ds
cmp
mov
cld
or
andb
loop
inc
sub
les
pop
sbb
add
loop
dec
test
jmp
fwait
pop
pop
sbb
dec
clc
push
push
jb
je
cltd
inc
test
sarl
enter
pop
fs
orl
loopne
inc
or
mov
clc
ficoml
mov
adc
inc
notl
lcall
std
iret
insl
insl
repnz
adc
xchg
lock
clc
out
adc
or
or
xchg
or
jno
or
js
and
lods
test
sbb
or
pop
pop
aad
shll
popf
stos
mov
pushf
xchg
cwtl
xor
cmc
aad
fbld
mov
bound
push
inc
fbstp
and
sbb
inc
pusha
dec
xchg
xchg
out
xchg
jne
pop
mov
push
or
inc
lds
add
and
shrl
pop
or
mov
dec
in
insb
jl
das
fs
mov
stc
fistl
leave
fimull
push
mov
add
gs
or
adc
lahf
insl
ds
icebp
test
add
mov
into
cmc
ficompl
inc
or
sbb
dec
and
rcr
or
stos
mov
xor
or
int3
sub
dec
shrl
bound
cmc
iret
inc
sbb
sub
imul
mov
das
dec
adc
rorl
pushf
mov
mov
or
adc
fnstenv
mov
or
mov
pop
xchg
mov
into
cmc
aad
mov
lret
mov
fimull
push
daa
std
mov
and
dec
hlt
shl
iret
adc
stos
ret
and
hlt
stos
inc
push
cmp
sahf
fcomps
jmp
loopne
pop
sub
ss
adc
shl
xor
push
push
mov
push
add
fcompl
xchg
clc
add
dec
push
fstps
shll
nop
out
in
cli
xchg
movsl
cmp
clc
hlt
or
pop
xchg
mov
or
shrl
cltd
pop
jle
lret
pop
and
adc
and
xchg
test
cmpsb
or
add
xlat
adc
std
pop
cmc
or
test
data16
fbld
push
in
cwtl
int3
xchg
jae
ret
les
cmpsl
insl
pop
and
sub
xchg
incb
shlb
repnz
daa
scas
rcrl
add
jl
jne
neg
subb
inc
das
pop
mov
stos
loope
ss
lcall
lcall
or
jmp
sahf
mov
pop
dec
or
movsl
cmc
mov
pop
and
push
sub
dec
inc
or
jno
jge
test
sbb
sub
outsl
dec
push
shlb
insl
cmc
push
sbb
ss
addb
pop
or
push
mov
adc
add
push
lret
ret
sbb
lods
adc
das
mov
and
pop
mov
ljmp
adc
xchg
loopne
push
leave
sub
insl
inc
pop
xadd
outsb
and
aad
out
cs
in
push
aaa
gs
mov
mov
pop
add
pop
das
or
push
pop
sbb
or
ret
adc
imul
sub
lods
fcoms
xor
jns
pop
loop
insl
xchg
daa
inc
jg
or
adcb
data16
mov
loop
sbb
in
dec
in
clc
out
rcll
dec
add
dec
out
mov
xchg
cmp
push
enter
sarl
and
push
jo
xchg
jne
idiv
sub
xor
push
shrb
or
cld
ffreep
mov
push
cmp
lahf
xlat
nop
xlat
inc
or
mov
inc
in
jl
push
stc
dec
fs
sbb
cmc
jno
adc
push
or
call
sub
fsts
or
aad
push
jns
push
sbb
push
xor
bound
shlb
inc
ljmp
pop
and
push
addr16
daa
mov
pusha
cli
decl
jmp
icebp
jge
and
sbb
icebp
push
add
sub
sti
push
sub
stos
xchg
sbb
sub
mov
lcall
jg
adc
xchg
sub
sahf
and
enter
adc
xor
mov
ret
adc
mov
xchg
out
mov
rcll
sub
icebp
jl
cmpl
add
cltd
mov
push
inc
dec
in
xchg
outsb
add
cmpsb
pop
std
xchg
jns
cmpsl
or
add
xor
popa
xlat
fstps
xor
jns
roll
or
sub
jo
mov
push
lretw
pop
mov
push
aaa
rcrl
cmp
subb
jle
and
mov
or
jle
xchg
loope
mov
mov
negl
mov
bound
or
sbb
lcall
adc
dec
or
lods
fdivrs
add
shll
adc
lcall
mov
adc
das
test
aam
jns
js
ljmp
jg
push
fstpt
lods
inc
inc
mov
xor
loope
pop
hlt
mov
xchg
xchg
sete
pop
jle
fcomps
test
mov
xchg
xchg
das
int3
out
lods
fcoms
cwtl
xlat
jb
in
cmp
out
sub
cmp
stos
test
lock
int
fidivl
and
hlt
add
dec
add
lret
sub
or
rorb
sbb
pop
dec
fs
xchg
or
mov
mov
xchg
or
and
or
xchg
fucomip
enter
outsl
das
lahf
sbb
fcomps
popf
pop
fidivs
leave
pop
repnz
dec
sbb
loope
pop
sti
pop
fcomp
lret
cld
jb
pop
and
dec
mov
jo
shll
arpl
cmp
cwtl
mov
gs
dec
jp
and
lea
push
pop
in
lcall
mov
pop
dec
repnz
and
cmc
xor
dec
add
data16
cwtl
mov
test
mov
std
loopne
fs
mov
mov
movsl
xchg
enter
sbb
xlat
pop
imul
into
mov
pusha
jmp
lret
movsb
or
jecxz
fdivl
gs
lea
cltd
fldt
adc
iret
enter
insb
cld
xlat
sub
add
dec
and
les
sbb
fdivl
push
and
push
xor
sbb
xchg
sbb
cmpl
arpl
jg
js
mov
les
xchg
xchg
sub
push
popf
icebp
push
or
and
mov
mov
or
sbb
xchg
fists
or
test
sub
cmp
push
lret
mov
inc
lret
ret
sbb
inc
or
cmp
xorb
add
sarb
int3
xchg
aad
mov
xor
test
cltd
xor
movl
or
daa
ret
push
data16
or
jb
sub
sub
cmp
out
push
mov
xchg
faddl
sub
cltd
clc
lock
mov
dec
xor
loope
xchg
add
js
adc
popa
xchg
nop
push
cli
call
push
mov
inc
test
nop
cwtl
mov
push
or
push
shlw
lea
adc
sbbb
jns
pop
test
das
int3
int
fcoms
pop
pop
add
adc
inc
mov
orb
cltd
jmp
xchg
es
unpcklps
sbb
out
sbb
ljmp
lret
into
stos
jae
jb
sbb
repnz
xor
mov
cmpl
rolb
daa
mov
xchg
ljmp
add
push
stos
stc
adc
or
mov
sub
shlb
lcall
sbb
int
pop
fists
enter
popa
or
test
pop
adc
ffree
cmp
mov
lea
push
loope
imul
mov
repnz
pop
adcl
rcrb
sub
xchg
inc
test
sub
outsl
movsb
fldenv
push
sbb
sbb
adc
pop
inc
push
stos
dec
xor
out
xor
xchg
shll
or
js
addr16
add
fcomps
aad
repz
ss
or
add
arpl
aam
jge
xchg
cwtl
push
insb
mov
and
or
xor
in
cmp
sbb
lock
xor
sti
mov
std
in
rcll
add
inc
and
sub
sub
mov
jmp
insl
fsub
mov
push
jge
cmp
mov
mov
jb
cltd
push
clc
xchg
popa
sub
and
pushf
cmp
sbb
aas
add
repnz
test
shll
xchg
data16
out
xor
cmpsl
dec
in
aad
xor
jb
mov
out
mov
xchg
pop
jbe
xchg
xchg
jecxz
or
test
or
ficoms
jno
adc
fdivr
push
insl
aaa
pop
stos
and
lcall
aaa
nop
fs
or
adc
mov
repnz
xchg
add
decb
mov
aam
adc
loop
ret
lcall
test
xor
mull
push
pushl
test
push
xor
int3
push
sub
fdivrl
les
pop
lods
cmp
add
xchg
dec
lea
dec
or
test
xchg
out
sarb
pop
jno
and
xchg
cmpsb
fcoms
pop
fadds
jge
xchg
cwtl
clc
rorb
sub
dec
cs
cltd
int
mov
push
xchg
mov
adc
lds
dec
hlt
xlat
pop
imul
popw
pop
sahf
lea
dec
pop
cmc
inc
inc
sarl
xchg
fs
or
and
dec
int3
clc
icebp
add
jg
cltd
sub
pop
roll
and
rolb
xor
cltd
mov
jp
jae
cmp
pop
mov
insb
call
inc
repnz
adc
loopne
mov
fsts
or
and
pushl
shld
jle
mov
pop
dec
or
cmc
sub
xchg
lret
pop
xor
xor
shlb
sarb
sub
pop
mov
dec
cwtl
jecxz
sbb
fldl
sub
mov
shl
adc
movsb
push
imul
outsl
insb
arpl
pop
sub
movsb
das
or
shll
cmc
mov
movsb
mov
jbe
pop
lcall
pop
aad
sbb
and
ljmp
into
cs
lcall
mov
jns
xchg
icebp
enter
mov
pushaw
xchg
jns
adc
mov
dec
xor
xlat
cmp
pop
fs
std
add
rorl
add
inc
xchg
push
jecxz
mov
adc
mov
aam
lea
decb
jno
inc
out
or
div
pop
inc
or
adc
sbb
pop
inc
sub
insl
lret
ret
push
push
push
push
add
inc
sub
add
rorl
icebp
and
test
loope
push
or
adc
cli
jl
xchg
icebp
les
xor
adc
xchg
enter
mov
arpl
mov
lret
cmc
fistps
inc
or
push
inc
lock
decl
or
mov
sbb
stos
mov
jnp
add
shll
icebp
adc
test
stc
sub
sahf
jge
cmc
adc
cli
jl
dec
aaa
lahf
imul
pop
xor
jbe
sub
shrl
xchg
add
lret
ret
sbb
add
stc
push
loopne
pop
xchg
mov
sbb
mov
fisubl
xor
jp
pop
xchg
out
andb
xlat
mov
fisubl
xor
jp
clc
mov
pop
int3
lret
mov
pop
pushf
mov
xchg
adc
fnstsw
hlt
and
xchg
std
test
mov
mov
xchg
sti
ja
sbb
dec
mov
dec
add
ljmp
in
xchg
add
xor
popa
jmp
mov
xchg
stc
enter
inc
and
xchg
dec
adc
rorb
lret
aad
xlat
xor
push
add
cwtl
push
adc
sbb
pop
adc
int
repnz
adc
mov
xor
ret
test
cmpsb
lea
decb
lods
pop
sub
push
add
sub
adc
mov
push
add
add
mov
clc
popa
push
lds
dec
or
lahf
subl
lret
clc
fistps
lock
sbb
mov
lds
aad
in
popa
pop
or
fsubs
mov
bound
test
push
std
pop
or
andb
mov
adc
lock
es
push
jo
jnp
loopne
cmc
scas
xor
jbe
fcoms
cmc
mov
inc
or
sub
loopne
icebp
pop
jge
lcall
aas
add
mov
pop
inc
popa
sub
mov
adc
xchg
inc
push
cmp
les
insb
shll
mov
or
ljmp
lea
inc
or
add
andb
push
inc
mov
ja
sub
rclb
cs
mov
jne
pop
in
rcrb
in
mov
into
and
movsb
xchg
xchg
sub
dec
popa
pop
ret
push
popf
push
mov
push
cwtl
shll
pop
int
mov
pop
popf
mov
xchg
hlt
cmc
and
vmwrite
and
mov
ljmp
sub
xchg
and
popa
arpl
std
ljmp
pop
fcoml
mov
ret
dec
cmc
shlb
je
bound
call
in
fdivrs
or
es
pop
jg
les
pop
fildl
and
ret
sub
pop
mov
gs
sub
jns
jmp
sarl
lahf
call
mov
insb
cmp
sub
jg
sub
sti
leave
sbb
pop
aad
fisttps
xchg
and
ljmp
push
popa
popf
pusha
push
iret
fmulp
xchg
inc
lret
orb
sub
xor
pop
push
mov
pop
xor
mov
adc
sbb
call
pop
inc
jmp
call
call
jge
pop
lea
adc
dec
jnp
mov
popf
mov
xchg
jnp
sub
jo
adc
dec
adc
and
add
dec
nop
xchg
insb
sbb
ljmp
in
out
xchg
insb
jl
xchg
add
ss
push
cs
jb
xchg
pushw
pushf
xchg
nop
push
sti
std
outsl
lods
add
jl
imull
jle
dec
lods
fcoms
bound
fstl
jge
xchg
cwtl
add
pop
insl
add
jae
or
pop
pusha
push
sbb
mov
cld
adc
pop
inc
or
shll
stos
test
daa
mov
cmp
sub
arpl
in
push
pop
sub
xor
adc
adc
fstp
mov
fcomps
negb
dec
cmc
mov
repnz
lcall
dec
stos
xlat
adc
adc
sub
sub
outsl
adc
pop
adc
insb
into
repnz
adc
dec
leave
jnp
shll
mov
incl
jae
adc
jno
das
stos
shlb
or
cli
add
mov
mov
adc
or
sbb
data16
cld
pop
fimull
shll
or
jle
out
fcoms
mov
and
or
inc
dec
incb
out
mov
push
push
adc
and
sub
dec
iret
aad
xor
fistpll
xchg
rcl
push
push
divl
outsl
push
sub
xor
sbb
rcrl
in
push
add
outsb
mov
and
out
xchg
pop
inc
pop
sub
pop
mov
jno
push
xor
test
mov
popa
xchg
inc
inc
xor
push
or
jo
notb
and
and
aaa
mov
scas
add
jb
in
lods
dec
sbb
decl
cmpsl
jae
icebp
xor
repnz
xchg
lcall
jge
or
ds
xchg
dec
push
mov
rcl
mov
mov
ret
sbb
popa
pushf
fsubp
movsl
daa
push
pop
adc
das
jbe
or
and
ds
stos
enter
rol
out
or
lods
mov
xor
xor
test
roll
aaa
out
daa
add
push
cs
out
ja
cmp
xchg
xchg
sub
mov
push
push
fs
mov
jl
sarb
cmpsb
dec
in
sub
cmc
fcmovb
pop
dec
inc
cwtl
loop
inc
call
jb
xor
nop
or
sub
mov
jle
ljmp
sub
movsl
movl
push
ret
shl
inc
int
push
mov
cltd
int
mov
sahf
pop
jae
in
sbb
cmp
xor
iret
push
and
push
xor
imul
test
jne
mov
adc
xor
popa
out
adc
xchg
inc
jmp
ja
sub
jp
loopne
repnz
outsl
nop
xor
xchg
filds
adc
mov
fisubl
xor
jp
xchg
popf
pop
imul
inc
lret
xchg
lcall
scas
add
push
popa
sahf
popa
imul
lret
mov
hlt
loope
adc
insb
xor
mov
mov
cmc
bnd
jge
or
andb
cmp
push
out
mov
xchg
notb
or
pop
dec
into
xchg
push
sub
stc
push
sub
push
cli
sub
call
test
pop
inc
xchg
and
pushaw
xchg
movsb
push
fistpl
sbb
in
mov
rcl
cmp
pop
or
push
daa
mov
mov
fistpl
inc
or
mov
xor
inc
loop
pop
jge
lret
lcall
mov
std
stos
pop
inc
pop
sub
inc
das
or
shll
cmc
mov
js
popa
mov
or
out
or
popa
insl
aaa
xchg
lods
sub
notl
scas
cmc
shlb
adc
push
cmp
out
cltd
and
or
mov
fcomps
pop
and
clc
add
xor
mov
stos
test
sbb
or
out
push
sarl
or
push
push
shll
jle
scas
arpl
xchg
shrb
mov
out
xchg
scas
push
out
adc
inc
add
inc
or
pop
sahf
pusha
push
xor
mov
inc
lret
jb
xchg
push
scas
or
imul
cli
or
xchg
or
iret
jp
loope
or
mov
clc
call
pop
ficoml
shll
lds
cmpsl
jns
push
cs
sub
out
sarb
or
negb
cs
xor
push
sbb
push
or
sti
adc
pop
inc
mov
pop
jmp
xor
dec
inc
aam
sbb
int3
scas
ret
sbb
inc
scas
or
fcom
sarl
xchg
cwtl
clc
push
mov
dec
cs
adc
cld
sub
inc
xor
aas
jge
lcall
cmpsl
cmp
outsb
aaa
sbb
mov
jae
fstpl
inc
or
or
xchg
ficoms
lea
adc
add
and
adc
xor
xchg
cmp
test
sub
add
adc
sub
add
ss
stos
xchg
ljmp
iret
shrb
inc
jge
lcall
sbb
jp
lcall
add
xchg
cmpsb
testl
or
movsl
xchg
idivl
adc
int
mov
cltd
sub
fiaddl
leave
movb
or
mov
clc
and
popa
or
into
test
addr16
aad
aad
fsubrs
xor
stc
repnz
repnz
mov
pop
mov
into
sahf
loope
cli
dec
xchg
inc
xlat
and
add
imul
dec
adc
mov
xchg
into
xlat
dec
imul
lahf
push
jbe
add
sub
lods
nop
sahf
in
jmp
arpl
les
call
loopne
cltd
clc
pop
out
cmc
mov
in
cmp
lahf
fsubrs
jne
sbb
flds
sub
lods
dec
shlb
inc
jge
outsl
test
les
and
sti
add
push
ds
ljmp
test
clc
repnz
cmpsb
push
inc
hlt
xchg
daa
sti
icebp
add
cmpsb
mov
rclb
mov
pusha
inc
fwait
jae
cmpsl
iret
xor
cld
sahf
mov
outsl
xchg
ret
in
dec
sbb
repnz
aam
mov
mov
fstps
jnp
cmp
lret
push
pusha
and
adc
pop
inc
rorb
and
call
fmuls
dec
cmp
ljmp
sub
leave
es
pop
aad
lock
pop
add
gs
test
dec
add
sbb
cmp
and
and
mov
pop
aad
shll
add
mov
jnp
add
rcrl
sti
lock
test
loope
push
cmc
mov
jl
lret
insb
loopne
nop/reserved
out
lods
fcoms
or
cwtl
dec
pop
mov
lds
mov
push
jo
jp
ret
xor
and
lret
xor
xchg
addb
xor
loope
adc
les
aam
out
xchg
pop
dec
or
lods
fsubrs
mov
dec
outsb
clc
add
cld
lret
fldcw
pop
jecxz
mov
cmp
mov
and
mov
insl
insl
mov
push
sub
test
push
pop
in
in
ljmp
sbb
inc
or
leave
iret
stos
fcoms
pusha
push
sbb
popa
dec
cld
adc
pop
inc
and
and
jmp
xor
and
push
sub
flds
test
inc
popf
mov
or
lods
fcoms
xlat
lods
xchg
jmp
xor
push
jge
into
push
dec
xor
jns
jb
decb
push
test
pushf
mov
xchg
push
cmc
aam
jle
mov
sbb
ffreep
mov
cmp
jnp
add
pop
and
jmp
adc
stc
or
dec
add
add
arpl
xchg
lret
jmp
enter
addr16
sbb
fs
rolb
mov
and
into
popa
and
or
dec
jns
sub
testb
xor
xchg
insl
sub
push
jge
hlt
mov
dec
std
repnz
xchg
cltd
mov
mov
cmp
adc
sbb
adc
lods
adc
sbb
or
lods
das
imul
ljmp
mov
lods
ja
mov
adc
stos
dec
adc
sub
ficomps
xchg
or
out
mov
xor
inc
mov
cld
lods
mov
xchg
clc
pop
es
les
push
and
push
xor
int3
pop
and
repnz
nop
and
lret
cmp
fistpl
and
xorw
out
mov
jnp
xchg
aaa
mov
icebp
shl
jp
shlb
into
jnp
push
shrb
sbb
out
or
jb
in
lods
dec
mov
adc
rcrb
xchg
and
adc
out
dec
push
ja
sub
je
test
jecxz
mov
loope
sub
push
xchg
fdivl
loopne
or
shlb
jge
mov
dec
repz
add
insb
mov
in
xchg
inc
push
pop
jg
push
xor
sti
jbe
fsubs
out
add
sub
inc
and
ja
mov
xorl
jmp
cld
data16
add
int
mov
adc
or
sbb
stos
push
fisttpl
nopl
imul
inc
.byte
lods
fcoms
