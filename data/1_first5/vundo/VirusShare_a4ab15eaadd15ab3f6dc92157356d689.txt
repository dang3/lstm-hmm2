pusha
call
inc
imul
ss
test
cltd
mov
or
cmp
jmp
push
or
sub
mov
pop
push
xor
popf
dec
pop
cmp
jl
mov
lock
and
movsb
inc
imulb
int3
dec
pop
jne
scas
bnd
push
mov
sbb
lds
add
inc
arpl
shrl
xchg
loopne
push
jmp
jae
dec
data16
jnp
and
in
ss
fsubs
icebp
or
sahf
mov
out
xor
sub
sbbl
dec
test
ljmp
aad
psrld
aam
cmpsb
sbb
cld
mov
ret
adc
add
inc
sbb
fdivp
shrb
stc
je
inc
cmp
pushf
fldt
mov
jecxz
int
jmp
sub
jmp
adc
adc
out
or
cli
loope
sti
dec
movsl
mov
loop
fs
fbstp
out
jno
or
xor
mov
xchg
negl
jmp
lds
sub
leave
add
push
or
sub
mov
pop
push
xor
popf
dec
pop
cmp
jl
mov
loopne
lock
and
movsb
inc
imulb
int3
dec
pop
jne
scas
bnd
push
mov
sbb
jmp
mov
jmp
mov
xchg
dec
cmp
shrl
xchg
loopne
xchg
cltd
xchg
jae
fisttpll
jnp
and
in
ss
fsubs
inc
dec
icebp
or
stc
mov
mov
sub
sbbl
dec
test
ljmp
psrld
aam
cmpsb
sbb
cld
mov
mov
lods
xor
jmp
lret
jmp
fdivp
shrb
stc
je
inc
cmp
pushf
fldt
jmp
mov
jmp
jecxz
int
sub
jmp
adc
adc
out
or
cli
loope
sti
dec
movsl
mov
loop
jmp
add
jno
or
xor
mov
xchg
negl
add
jmp
or
jmp
sub
mov
pop
push
xor
popf
dec
pop
cmp
jl
mov
lock
and
movsb
inc
imulb
int3
dec
pop
jne
scas
bnd
push
mov
sbb
cs
ret
arpl
inc
stos
shrl
jmp
xchg
loopne
xchg
cltd
xchg
jae
fisttpll
popa
mov
fbld
in
ss
fsubs
icebp
or
sahf
mov
out
xor
sub
sub
inc
sar
add
mov
ljmp
psrld
aam
cmpsb
add
dec
jne
jmp
push
gs
mov
ret
jbe
sbb
fdivp
shrb
stc
je
inc
cmp
pop
rcrl
aas
inc
mov
jecxz
int
sub
jmp
adc
adc
out
or
cli
loope
sti
jmp
dec
movsl
mov
cmp
test
pop
out
jno
or
xor
ljmp
negl
lds
or
and
clc
pop
push
sub
mov
pop
push
xor
popf
dec
pop
ret
jmp
cmp
jmp
cwtl
daa
or
inc
scas
bnd
push
jmp
mov
sbb
cs
inc
arpl
shrl
xchg
loopne
xchg
cltd
xchg
jmp
jae
fisttpll
jnp
and
in
ss
fsubs
icebp
or
sahf
mov
mov
sub
push
push
xor
mov
mov
mov
sub
and
and
or
xor
xor
dec
sub
dec
jne
mov
mov
mov
add
add
addb
mov
xchg
subl
mov
add
sub
add
leave
ret
push
mov
sub
push
push
xor
mov
mov
mov
and
or
rol
sub
and
sub
xor
xor
or
xor
add
and
shl
or
add
add
sub
add
dec
jne
mov
mov
pop
pop
xor
leave
ret
push
mov
sub
push
jmp
mov
dec
lret
fdivp
shrb
add
push
xor
mov
mov
mov
add
add
shr
or
add
xor
xor
or
add
dec
ror
sub
xor
add
xor
add
shr
inc
or
and
dec
jne
mov
mov
pop
mov
sub
add
orl
mov
sub
leave
ret
push
mov
sub
push
push
xor
mov
mov
mov
or
or
xor
inc
xor
or
dec
jne
mov
mov
push
movl
pop
jmp
adc
out
or
cli
loope
add
jmp
cmp
dec
movsl
mov
les
hlt
orb
and
andl
or
subl
add
add
leave
ret
call
mov
stc
icebp
mov
cmpsl
xchg
sub
xchg
inc
imul
cmp
jnp
inc
iret
jnp
mov
lock
xchg
sub
jg
repz
inc
loope
xor
jle
scas
xchg
sub
push
loopne
mov
cli
and
je
popf
mov
mov
xchg
pop
enter
out
add
pushf
xor
iret
pop
mov
arpl
push
nop
mov
mov
xchg
adc
and
enter
in
cmp
push
shrb
add
ja
jp
lret
sub
repnz
xorl
les
loopne
popf
cmpsb
out
adc
lods
jmp
xchg
ror
fisttps
mov
in
inc
rorb
adc
stos
add
mov
push
jle
sahf
hlt
mov
insl
xchg
loopne
loope
push
iret
mov
cld
or
out
push
int3
push
xor
xchg
call
lahf
and
inc
or
xchg
inc
ret
int3
push
movsl
jno
xchg
lods
mov
inc
sar
pop
in
inc
jg
fcoml
test
gs
jp
jecxz
adc
cmp
outsl
pop
data16
outsl
sbb
and
push
sub
fidivrs
adc
test
push
rcll
into
iret
in
lds
out
sub
xor
adc
movb
data16
inc
mov
jno
out
scas
dec
fwait
mov
mov
addr16
inc
jge
mov
jg
lret
lret
xchg
add
insl
push
movaps
rcr
mov
push
fidivl
dec
in
push
outsb
call
lds
mov
mov
jne
jp
scas
or
inc
inc
add
int
or
mov
test
lock
fistl
mov
mov
cmc
insl
shlb
push
pop
and
dec
stos
sub
out
lods
sub
lds
inc
not
std
push
lcall
iret
jb
cmpl
xor
cmc
cltd
hlt
pop
add
cmp
pop
sbb
popa
dec
dec
cmpsb
test
xchg
inc
loop
aad
sbb
sub
dec
push
rcr
jge
sub
xor
lcall
rolb
or
imul
jge
mov
enter
aas
sbb
negb
inc
cmp
jp
jle
adcl
jp
sub
adc
jge
jbe
icebp
les
cltd
cli
mov
push
xor
jb
cmp
cs
leave
lret
sbb
inc
hlt
test
cmp
and
sub
fs
ss
dec
rcll
xchg
push
dec
subb
popa
sti
mov
cmp
xor
push
adc
cmp
lods
in
push
xor
mov
fs
or
pop
data16
stc
roll
fists
mov
dec
insb
xor
mov
and
call
pop
dec
xor
and
mov
shlb
jne
loop
mov
xchg
sub
outsb
mov
or
popa
idivb
mov
outsl
outsb
rol
or
mov
das
cmpsb
or
jecxz
or
in
rcl
push
or
stc
std
lock
pop
dec
mov
xchg
in
leave
fwait
mov
cmc
or
and
insl
mov
sbb
subb
adc
jmp
std
inc
xchg
test
mov
sub
adc
movsb
sahf
lcall
push
and
pop
test
cs
dec
push
lea
aas
movb
fsub
rcrl
mov
xchg
inc
hlt
ljmp
mov
jne
leave
jge
mov
roll
add
jmp
jns
sbb
data16
insl
lcall
dec
ret
push
out
and
in
inc
pusha
mov
or
mov
jno
sbb
mov
fsubs
jecxz
lods
xlat
adc
leave
lret
in
shlb
jne
test
push
into
scas
mov
ljmp
icebp
bound
fs
push
and
ret
jnp
mov
fildl
lods
iret
mov
ret
mov
inc
leave
test
out
cld
in
test
xchg
push
jge
clc
pop
sub
sub
aad
adc
add
mov
jns
pop
or
sub
divl
pop
js
dec
mov
mov
icebp
mov
jae
cmp
fbld
cld
push
cmp
lea
jb
xchg
jle
cmpsb
adc
cmp
adc
add
and
dec
or
pop
or
cmpsl
inc
clc
adc
fsub
decl
cwtl
cmp
mov
shlb
push
pop
cmp
int
lcall
mov
jmp
jecxz
mov
xor
pop
adc
cmp
or
push
mov
cmp
inc
mov
hlt
ret
cmp
rcl
insl
xchg
ss
xor
mov
scas
test
dec
mov
decb
stc
lcall
adcl
push
mov
jge
and
and
jo
mov
fisttps
mov
es
rol
fstpt
cmpsl
jp
popf
loopne
xor
fadds
mov
mov
ret
aaa
cmp
scas
or
jnp
xchg
xchg
inc
int
mov
jg
mov
pop
mov
jp
pop
in
lahf
mov
rorb
xlat
jae
subb
cs
in
shlb
sti
inc
xchg
mov
pop
fcoml
mov
add
imul
dec
movsl
adc
test
mov
cmc
sbb
mov
jle
pop
push
add
dec
dec
out
add
mull
inc
mov
sahf
sub
jb
outsb
rcl
mov
mov
rcl
vpunpcklqdq
jmp
lea
xchg
add
sarb
bound
sub
adc
jp
sub
jmp
xchg
mov
pop
mov
fiadds
mov
sbb
mov
xchg
push
add
stc
lcall
add
sbb
sub
push
cmp
pushl
test
push
add
add
and
hlt
cmc
cs
mov
lret
je
or
sbb
and
dec
pop
push
inc
lods
or
inc
jg
fisubl
in
js
and
pop
sti
mov
lret
sub
shll
mov
pop
jmp
test
rcr
pop
shll
mov
lods
ret
mov
idivl
lret
enter
adc
mov
mov
test
or
ljmp
xchg
or
shrl
and
mov
inc
imul
outsb
fwait
jbe
adc
popf
pop
je
fcmovnb
sti
and
mov
frstor
mov
mov
sahf
xchg
ret
and
adc
xchg
cltd
jge
ss
out
cmpsl
xchg
aad
aaa
mov
lods
sarw
sbb
int
xchg
or
mov
ljmp
adc
shlb
sbb
stos
es
cmp
and
dec
pop
mov
fsubrl
loope
add
mov
sbb
mov
aam
push
add
popf
xlat
adc
lret
jge
or
sub
movsb
push
subb
bound
notb
ficoms
cli
jp
lods
add
and
in
cs
cmpsb
leave
lret
sbb
inc
out
and
push
pop
mov
jg
fdivl
xchg
sub
repnz
lahf
sub
movsb
enter
rcl
shrb
sahf
stos
sub
sub
jae
out
lds
inc
xchg
sub
popa
mov
sub
aam
push
shlb
into
jae
push
add
clc
les
jae
or
sbb
out
je
xor
mov
mov
dec
and
pop
sbb
insl
dec
mov
subb
push
mov
rolb
repnz
ret
jmp
add
out
rorl
mov
jmp
lock
icebp
mov
movsl
je
cmc
xchg
or
dec
fbld
int
insb
add
nop
dec
stc
jno
ret
xchg
lds
add
fldcw
test
sub
hlt
push
or
or
push
fst
dec
in
adc
shl
sub
imul
jp
mov
es
or
inc
rorb
sbb
cs
jl
std
cmp
sub
adc
inc
scas
loopne
sahf
test
cmp
mov
or
sbbb
xchg
inc
jecxz
and
cmpl
and
push
push
lods
loop
and
repnz
aas
sahf
test
lahf
imul
loop
in
rcll
inc
std
jp
xorl
add
fcmovb
outsb
shlb
mov
inc
arpl
sub
aaa
xchg
lods
push
adc
pop
leave
hlt
rcll
ss
sub
cld
mul
cmpb
dec
fadds
out
adc
out
aas
test
or
movsb
mov
stc
sub
into
bound
int3
es
bound
outsb
cltd
cli
out
lods
movsb
xchg
and
insl
jae
loop
daa
rorb
sbb
pop
and
and
push
and
or
rclb
inc
testb
sub
xlat
data16
icebp
aam
bound
sbb
or
push
into
and
and
sti
mov
mov
sbb
stos
or
adc
mov
lods
insl
add
fwait
pushf
push
andb
jle
nop
out
dec
insb
shlb
insb
sub
xchg
mov
dec
pop
pusha
sub
cmp
or
std
inc
dec
mov
add
jp
dec
sub
repnz
jne
mov
dec
dec
sbb
popf
cmpsb
mov
nop
movsl
mov
nop
inc
xchg
rorb
sar
sbb
lcall
je
or
sub
lods
and
adc
jle
jmp
xor
lret
dec
call
xchg
dec
shrb
jge
out
add
dec
xor
mov
bound
outsb
push
push
aad
dec
jbe
scas
imul
sbb
stc
cmp
lock
push
cs
sub
add
fdivs
popf
sbb
cmp
push
sub
mulb
mov
cwtl
xor
movsl
sub
pop
repz
jns
cmp
das
stos
mov
in
or
pop
and
inc
ja
push
mov
mov
leave
ss
xchg
aas
xor
jp
cmpl
cmp
stc
int3
and
sub
scas
into
iret
sarl
fildl
out
xchg
lcall
test
data16
rorl
adc
mov
stos
in
inc
jmp
test
inc
inc
lds
clc
xchg
cmp
and
mov
mov
add
fwait
pushf
jle
iret
pop
shlb
nop
hlt
sub
mov
and
jp
pusha
mov
enter
jae
mov
sbb
lock
sbb
jns
push
cmp
mov
scas
movsb
jp
dec
sub
popf
cmpsb
mov
adc
into
scas
movsl
mov
adcb
shlb
pop
adc
stos
cmp
scas
stos
cmp
push
adc
std
pushf
daa
adc
imul
sarb
fmuls
outsl
adc
aam
pop
scas
inc
cmpsl
mov
jmp
outsb
stos
ss
mov
test
divb
loope
sbb
xor
out
pushf
mov
sbb
fimull
loopne
jecxz
lcall
in
push
lret
aas
test
das
shll
enter
in
cmp
in
xor
push
test
lret
cli
add
lods
xchg
cmc
cs
leave
lret
sbb
inc
jl
and
or
ss
enter
les
sub
popf
mov
movb
mov
xchg
sbb
or
xor
enter
loopne
add
pushf
adc
xchg
jp
xor
call
sub
mov
inc
pop
popa
rcll
in
xchg
or
data16
dec
and
lods
int3
pop
rclb
dec
sub
jne
cmc
cmpsb
push
sbb
in
cmpsb
dec
push
dec
test
cld
push
insl
outsl
mov
push
div
inc
push
jmp
es
or
repz
xchg
sets
jmp
xchg
pop
xchg
xchg
rclb
jp
adc
inc
pushf
cld
xchg
lock
jmp
xchg
xlat
mov
jle
inc
sahf
fcompl
pop
mov
sbb
xor
mov
les
out
hlt
jp
fsubrl
jecxz
sahf
rcl
dec
cmp
or
adc
push
into
out
sub
xchg
scas
jl
repnz
into
mov
lods
mov
jb
push
hlt
cs
adc
lret
mov
idivb
aam
nop
inc
sub
and
loopne
cmp
scas
cld
dec
ss
cmp
push
push
xor
push
push
test
les
lock
sahf
push
cld
push
pusha
mov
adc
lret
mov
lcall
push
bound
push
nop
lahf
lods
cwtl
mov
cld
add
or
cmp
test
add
scas
ljmp
sub
add
je
inc
push
nop
fcmovu
push
jl
cwtl
cmpsb
sbb
shr
sbb
int3
mov
mov
shrb
mov
call
inc
cwtl
popf
cmp
mov
cmc
nop
add
shll
shlb
or
lds
test
out
push
jg
inc
fistpl
js
jne
nop
lods
pop
xlat
jbe
movsb
jp
lods
sbb
and
shll
push
iret
mov
push
xchg
dec
mov
jle
or
cwtl
cmpsb
xor
inc
ja
sub
out
mov
xor
push
inc
add
mov
or
aam
out
xchg
xor
fs
icebp
pop
jnp
dec
out
sbb
cs
in
insb
sar
lcall
stos
test
rcl
movsb
cmpsb
push
xchg
mov
mov
cmp
jbe
pusha
cmp
or
fimuls
cmp
jb
call
pop
pop
mov
mov
or
lds
xchg
cmp
out
jmp
lods
das
rclb
xchg
loope
and
mov
call
fidivl
push
leave
in
push
push
or
xor
ljmp
data16
rolb
xchg
pop
js
clc
cmpsb
mov
jecxz
xchg
lea
shr
test
mov
stc
or
add
mov
aaa
lahf
icebp
xchg
push
sub
leave
dec
sar
cmc
ljmp
and
sbb
stc
adc
aad
xchg
loope
test
test
addl
repz
jnp
adc
pop
xchg
jge
sub
iret
xchg
adc
push
pop
jmp
aaa
cmpsl
and
and
imul
ja
jl
sbbl
inc
movsb
jecxz
in
imul
xchg
push
push
sub
fnstsw
sub
jnp
lahf
mov
arpl
jnp
inc
xlat
adc
xchg
xor
dec
pop
imul
pop
loope
icebp
ret
cmpsl
outsb
test
test
xor
jg
pop
sub
lea
inc
push
lcall
cmp
lahf
test
and
push
ljmp
aad
add
sub
xor
lcall
xor
and
fs
gs
je
mov
fldl
xchg
mov
aam
mov
cld
inc
dec
inc
jo
adc
pop
or
jp
mov
push
and
mov
add
in
je
pusha
mov
pushf
cmpsb
sbb
push
std
pusha
adc
mov
sub
mov
xchg
inc
rol
popf
adc
inc
pop
call
xchg
add
sahf
push
pop
mov
xchg
push
xor
out
lret
inc
test
cmp
aas
rclb
sbb
pop
cmp
insb
ficoms
popa
mov
cmc
xchg
cld
mov
clc
popa
aaa
in
vpaddq
mov
das
outsl
out
cmp
xchg
mov
shrb
daa
ja
push
dec
cmpl
jae
cltd
jbe
pop
jae
jnp
in
fistpll
cmpsl
fldenv
rol
inc
xlat
mov
jge
iret
pop
test
fwait
sub
xor
jnp
inc
jle
cltd
pop
icebp
subl
pop
mov
mov
dec
pop
ds
mov
fnsave
xchg
inc
mov
jg
sahf
mov
pop
divl
setnp
fldt
mov
in
and
xchg
xchg
in
add
push
sub
xor
shll
mov
clc
add
lds
mov
inc
push
test
nop
ja,pn
xchg
mov
ljmp
sub
inc
cmp
jnp
dec
int
push
je
cli
push
pusha
int3
cmpl
adc
jo
int3
pop
add
dec
sbb
jp
mov
mov
scas
push
scas
dec
dec
js
pushf
cmpsb
sahf
jbe
ret
movsb
mov
jo
int3
mov
xchg
add
push
fs
bound
fiaddl
push
lcall
and
sbb
push
jae
xor
sub
fbstp
inc
ss
cmp
sbb
je
fdivrs
adc
lret
gs
adc
push
push
mov
lret
push
sub
mov
lret
shlb
inc
outsl
pop
sub
jle
xor
in
data16
imul
inc
inc
push
test
xorb
jbe
pushf
insb
push
pop
inc
fimuls
lcall
pop
push
mov
sbb
and
test
or
mov
adc
push
and
push
push
sub
mov
mov
push
and
iret
inc
adc
in
aam
add
nop
or
xchg
lods
mov
and
filds
cvtdq2ps
jnp
ret
inc
mov
loope
call
jmp
lds
fwait
xchg
mov
xchg
and
adc
out
add
mov
sbb
por
mov
dec
dec
dec
push
adc
inc
jp
insl
jl
leave
ret
movsb
mov
jl
int3
mov
testl
push
cmp
stos
je
cmp
push
fs
call
lods
pop
mov
stos
aad
xor
fnstenv
test
dec
fsubrs
loop
or
adc
sbb
in
call
adc
daa
push
into
xchg
pop
xchg
jno
sub
xor
jl
xchg
mov
test
lock
cli
test
lods
outsb
or
jb
add
enter
sbb
inc
cltd
nop
inc
xchg
inc
inc
adc
mov
or
mov
call
sub
sbb
jns
pushf
inc
enter
jge
sbb
popa
dec
fdiv
test
in
inc
in
insb
cmpsb
fldenv
int
cmp
push
test
push
outsl
shlb
xor
inc
xor
push
mov
xor
aad
jne
insb
shr
pop
xchg
test
pop
outsl
rcrb
pop
adc
test
dec
pop
insl
out
and
pop
mov
jle
lahf
test
pop
outsl
rclb
test
cmpsb
jle
in
or
push
sub
sub
jns
mov
and
fisttpll
sub
lret
push
sbb
sub
and
pop
pop
adc
push
jno
jg,pt
fildll
test
sbb
pop
cltd
pop
xchg
jmp
outsl
rorb
lods
clc
sub
sub
jne
test
fidivrs
ret
pop
jle
sub
xchg
adc
pop
xchg
cmpsb
sub
fmull
dec
shll
mov
outsl
iret
sbb
mov
cmp
sahf
in
aad
cwtl
sub
push
mov
sbb
pop
in
test
jg
rolb
jbe
arpl
or
addr16
pop
aam
or
sbb
outsb
fiadds
outsw
rcrb
outsl
shlb
insb
movsb
xchg
xchg
sbb
cwtl
fnsave
mov
pusha
sar
data16
lret
pop
movsb
or
xor
lea
mov
movsb
cmp
nop
xchg
repnz
pop
adc
shll
insb
in
lahf
nop
js
jnp
sar
nop
sub
icebp
jmp
cmpsb
cmp
sub
and
jge
ljmp
insb
shl
push
ret
cmc
and
imul
sub
pusha
lods
sbb
sub
or
imul
adc
sbb
xor
xchg
sub
add
jle
push
push
fcomps
rcrb
popf
leave
jb
fdivrl
cltd
nop
lds
fwait
clc
add
ret
and
cmpsl
nop
sub
sub
sub
stc
jge
mov
in
out
fadd
push
ffreep
in
adc
adc
in
stos
sub
js
pop
mov
sub
lret
or
jmp
out
and
mov
into
lods
jb
mov
or
or
stc
or
lods
sub
test
fnstsw
xor
mov
aas
jne
mov
pop
loop
pop
jb
js
int
nop
lods
dec
lods
jbe
imul
mov
mov
xor
jno
ljmp
lods
mov
scas
in
dec
dec
ljmp
ret
movsb
mov
ret
mov
ret
inc
shlb
adc
xchg
or
stos
cli
xchg
cmp
loopne
mov
jle
pop
hlt
scas
ss
and
xchg
ljmp
inc
movsb
inc
out
push
and
sbb
dec
dec
fsubrs
lods
loop
int3
push
adc
xor
in
enter
xor
loopne
inc
mov
cmp
int
xor
jno
jg
push
adc
enter
icebp
aam
lods
mov
xchg
sbb
outsl
rorb
mov
xchg
call
js
add
inc
lods
aas
bndstx
das
cli
and
out
ret
sbb
jg
mov
int3
outsl
rcrb
jg
into
jle
lds
je
adc
add
sub
mov
jge
sub
dec
adc
in
push
cli
cmp
xor
mov
mov
fmull
push
lret
mov
jg
scas
add
cli
jp
lods
xor
data16
sahf
pop
roll
sbb
or
hlt
jbe
push
push
test
rcll
xchg
xor
jns
in
and
or
xchg
xchg
cmpsb
push
inc
mov
fsubrl
dec
sti
push
andl
push
inc
test
movsl
pop
and
sti
or
add
push
shlb
and
add
ret
vaddps
ja
push
clc
mov
lods
mov
gs
lds
inc
mov
ja
jg
mov
push
lret
test
mov
jne
mov
call
sub
push
aam
fdivrs
cli
push
in
push
add
outsb
fcompl
repnz
rolb
movsb
int
sbb
xor
daa
test
push
push
and
inc
cli
test
mov
div
out
ljmp
dec
mov
scas
nop
add
ds
pushf
cmpsb
adc
and
movsb
mov
mov
jnp
es
push
xchg
iret
inc
mov
push
shrb
lcall
sub
push
jle
fmuls
rcr
xchg
enter
mov
or
outsl
rcr
insl
mov
test
hlt
into
jnp
pop
inc
ja
js
sub
add
and
sub
out
sub
cmc
xor
in
adc
lret
mov
push
sub
iret
cmpsb
mov
imul
daa
ja
stc
dec
xor
scas
outsl
leave
mov
push
pop
lea
jnp
aaa
jbe
cmp
sahf
jno
sbb
cmp
aad
lret
mov
mov
sub
xchg
in
test
mov
xchg
jecxz
sub
or
movb
jg
xor
or
xchg
cli
movb
add
lods
in
mov
xchg
or
mov
cmpsb
lock
pushl
xor
jnp
daa
mov
mov
test
mov
push
and
jae
in
test
fwait
sub
xor
jae
mov
outsl
lret
fstl
ret
mov
or
inc
es
xchg
fwait
xchg
mov
inc
in
dec
push
mov
mull
push
sbb
or
or
ja
test
jnp
pop
push
sub
cmpsb
inc
push
aam
stos
sbb
xchg
lea
sahf
cli
inc
pop
mov
divb
loopne
fs
loop
mov
out
mov
in
mov
lcall
add
imul
into
les
jl
adc
xlat
mov
lods
fidivrs
or
cmp
and
std
hlt
cmpsb
mov
sbb
mov
nop
inc
enter
into
cs
mov
clc
cmp
call
test
and
jns
scas
cs
ret
data16
ret
lods
jne
inc
mov
push
pop
xchg
fcomps
arpl
cmp
pusha
mov
mov
data16
lcall
loopne
push
xchg
sbb
nop
js
insb
loopne
mov
and
sub
dec
push
lahf
cld
inc
cld
inc
aam
pop
clc
nop
sbb
sub
push
hlt
push
subb
and
or
out
js
jno
nop
or
sub
sub
jnp
push
int3
lds
je
dec
mov
mov
xchg
fucomp
and
mov
nop
imul
mov
adc
mov
movsb
mov
cmp
int3
mov
or
adc
pop
mov
cmp
sbb
inc
sahf
fs
pop
mov
push
and
xor
lods
push
adc
sbb
lea
mov
mov
arpl
cmpsb
repnz
sahf
ds
jp
movsb
cld
cmpsb
xchg
mov
scas
out
cmp
or
jo
xchg
push
xor
jb
int3
inc
shrb
ret
inc
push
sub
test
jns
lods
inc
lcall
add
addr16
sahf
mov
fstl
out
scas
das
inc
mov
mov
insl
mov
jg
adc
xchg
fwait
cmp
mov
mov
test
loope
popa
jnp
sti
jg
fbld
aam
shll
popf
adc
imul
xchg
mov
das
nop
sub
jp
add
loopne
jp
pop
sub
sbb
mov
scas
pop
push
dec
dec
jbe
pushf
cmpsb
xchg
mov
ret
movsb
mov
outsb
mov
inc
rclb
jb
mov
rcrl
inc
pop
call
xchg
mov
xor
sub
xor
out
repnz
sbb
repz
fadds
loop
and
adc
lret
in
ds
or
scas
dec
xor
jle
in
lret
mov
repnz
lcall
das
test
cmp
jmp
and
xlat
daa
mov
xchg
ror
and
stc
jnp
popf
jnp
aaa
push
xchg
fwait
subl
cmp
xchg
mov
out
mov
test
scas
aaa
mov
ror
xchg
inc
inc
out
add
stos
xchg
adc
mov
cmpsl
or
fst
adc
pop
mov
loope
outsb
in
sub
jmp
lds
ljmp
add
cltd
imul
aas
nop
sub
jmp
outsb
push
das
mov
mov
mov
or
sub
add
aad
add
add
sbb
dec
sub
into
or
scas
stos
inc
dec
dec
and
pushf
cmpsb
cmpsb
cltd
adc
xor
movsb
mov
mov
outsb
inc
sarb
adc
mov
mov
subl
mov
sbb
sahf
dec
fidivs
xor
out
push
mov
sbb
loop
fsubs
pop
loop
sar
adc
lahf
lret
repz
pop
shlb
loopne
jl
int3
out
cmp
push
test
adc
cwtl
movb
fimuls
rcl
cs
enter
push
sbb
mov
nop
inc
rcrb
ds
cmp
fs
rclb
xchg
push
sub
pop
mov
push
mov
jp
push
xchg
sbb
mov
lret
adc
mov
je
and
psubw
mov
loope
jg
insl
out
jmp
shll
jmp
loop
imul
loope
int
lea
mov
add
in
mov
dec
movb
std
lods
mull
adc
mov
popf
jg
jge
add
outsl
xor
or
int
das
mov
xor
inc
fs
mov
lahf
in
enter
aam
xchg
jno
sub
adc
mov
cs
inc
sbb
pop
cli
and
or
cltd
add
adc
jmp
lods
clc
sbb
inc
mov
outsl
js
push
nop
or
or
fstpl
sbb
adc
fldt
int
push
cs
cmpsb
movb
pop
cltd
mov
fists
cld
les
inc
cli
and
pusha
fsubrl
test
pop
add
adc
outsl
shrb
push
imull
test
addr16
xchg
inc
gs
hlt
int
lcall
rcrb
xchg
sub
nop
imul
jmp
push
sbb
inc
lds
pop
mov
cli
xchg
jg
xchg
jo,pn
cwtl
fidivrs
jnp
push
cli
stos
incb
sub
lcall
adcb
cltd
push
into
push
sub
pusha
inc
jl
add
hlt
push
test
push
push
cwtl
cli
js
lods
push
in
mov
xor
jb
cmpsl
hlt
cs
enter
jnp
fiaddl
and
push
push
push
push
push
jle
or
adc
cs
and
or
mov
xor
ret
aas
mov
js
stos
push
loopne,pt
scas
rcr
jno
mov
loope
push
in
stos
stc
jmp
lds
and
mov
aaa
enter
lahf
fstl
pop
testl
movsl
mov
xchg
xlat
jecxz
jecxz
cmp
popa
in
jnp
xchg
ds
cmc
orl
cmp
sub
fldl
insl
add
imul
std
outsl
das
iret
xorb
fnstcw
xor
lahf
jmp
and
sti
stc
sub
dec
jne
cmpsb
movsl
and
les
or
pusha
add
in
out
stos
mov
inc
sbb
enter
sub
aam
rcl
adc
in
sahf
fdivrs
test
cmp
xchg
aam
mov
cmp
xorb
jbe
lods
push
dec
cli
fimuls
in
test
adc
out
pop
hlt
jmp
es
xor
scas
adc
in
or
or
call
push
and
stc
in
lcall
je
int
mov
jmp
fs
xor
jg
test
sub
rclb
or
inc
data16
mov
ret
insl
lahf
js
sub
cs
iret
push
adc
sbb
xchg
jbe
pop
xchg
lock
dec
xchg
mov
push
sub
inc
bound
loop
arpl
pop
pop
daa
pop
jp
fwait
xor
fdivrl
scas
inc
xchg
push
dec
je
andl
pop
mov
rcrb
xchg
lods
sbb
push
fs
pop
mov
mov
subb
cmc
out
sarb
sub
loope
jo
insl
ss
in
jbe
cmp
and
fldlg2
xor
rcll
addr16
lea
mov
mov
and
xlat
dec
pop
iret
jmp
cmpsl
add
mov
imul
push
xorl
insb
cmp
dec
dec
pop
icebp
sbb
lcall
in
lret
test
pop
xlat
inc
sbb
mov
es
adc
jne
and
or
pop
jno
cmp
nop
xchg
outsl
dec
sbb
call
dec
int
and
jmp
xor
fnsave
test
or
add
add
les
scas
jns
adc
fs
pop
mov
in
rcrl
inc
jge
xor
sbb
adc
mov
and
mov
pusha
mov
xorl
xchg
cltd
jmp
dec
and
fs
pop
shrb
test
pushf
sbb
ret
mov
sub
cmpb
sbb
mov
mov
jmp
sub
mov
xor
dec
push
sub
subb
push
outsl
adc
push
push
ja
lcall
in
push
aas
and
fs
dec
into
loop
aaa
ljmp
out
bound
fmulp
mov
mov
xchg
jb
dec
jmp
rorb
fs
push
inc
pop
mov
xchg
sbb
mov
push
ret
sub
cli
popa
les
loopne
sub
cmpsb
ret
fld
aaa
in
ja
push
jno
push
mov
das
mov
mov
cmp
push
lret
mov
sub
repz
or
iret
cmpb
sbb
pushf
xchg
jb
mov
and
mov
and
and
into
sub
push
fsubl
and
jge
sub
pop
nop
xlat
scas
jbe
subb
out
pop
sahf
pop
pop
movb
inc
or
in
add
pop
mov
fadd
push
adc
pop
dec
mov
push
scas
xchg
lods
pop
inc
loope
add
lea
pop
mov
nop
jae
int3
or
fs
sub
mov
and
push
mov
xor
out
fidivrl
mov
out
out
and
fs
sti
mov
adc
imulb
push
lahf
adc
dec
into
or
aaa
ljmp
data16
aam
jl
sbb
lods
rol
inc
lret
or
mov
rorl
sub
loop
outsb
lret
xor
mov
xchg
sub
inc
iret
mov
inc
icebp
mov
xchg
jmp
cmc
pop
ror
cs
in
add
fs
jl
jmp
fidivrl
lret
aaa
inc
pop
test
xchg
sbb
mov
or
cmp
call
fsubr
fldenv
push
leave
in
push
in
js
inc
fnsave
test
js
repz
lock
cmpsl
repnz
les
cmp
or
iret
andb
sbb
mov
xchg
dec
ret
into
xchg
inc
or
loop
push
sbb
pop
pop
jp
stos
xor
xor
out
mov
out
sub
add
adc
les
shlb
dec
bnd
out
call
rcrb
or
push
xchg
mov
cmp
xchg
addr16
popl
scas
lds
in
push
loop
fsubl
sub
incl
mov
out
mov
loope
sub
or
mov
pop
sti
scas
fucomp
fsubrs
pushf
movb
pusha
and
ret
and
out
lods
add
gs
inc
and
std
jbe
aad
mov
xchg
iret
out
pop
mov
sub
iret
jo,pt
or
sub
lcall
rcrb
mov
movb
mov
cli
pop
shlb
xor
stos
scas
and
or
sahf
add
jae
dec
xor
adc
mov
push
fmuls
outsb
leave
adc
subb
mov
mov
hlt
jl
jl
push
icebp
cmp
popf
xor
dec
imul
inc
rorl
mov
inc
pop
jp
xchg
sbb
cmp
push
enter
repnz
adc
fldenv
sahf
mov
xor
push
mov
mov
xchg
repz
mov
jg
sub
outsb
and
inc
data16
iret
xorb
sbb
sub
xor
js
jmp
jbe
sub
jb
dec
and
xlat
sbb
repz
mov
jl
jmp
mov
xchg
mov
scas
fcomp
push
dec
testb
adc
cmpps
mov
mov
fadd
xchg
lods
sahf
sub
push
ficoml
pop
mov
push
sbb
hlt
sbb
mov
fs
daa
xor
dec
in
mov
inc
dec
insb
stc
andb
add
fcoms
std
aam
jge
adc
sbb
in
mov
xchg
int
push
dec
cltd
loopne
push
jl
inc
icebp
cmp
dec
bound
mov
fiadds
icebp
xchg
push
dec
mov
xor
aas
jb
add
fdivrs
dec
in
jnp
dec
lret
mov
dec
movsb
or
jecxz
test
xor
shrl
das
rcr
push
push
out
fsubl
push
inc
insl
mov
xchg
mov
or
push
jo
cmpsl
sub
fists
jg
pop
mov
mov
rcr
cmpsb
push
ss
fists
outsb
mov
pusha
stos
ja
outsb
mov
mov
dec
cmp
cmp
xchg
push
test
mov
dec
sub
mov
or
inc
data16
iret
aam
jge
sub
dec
nop
inc
xchg
push
insb
jmpw
and
movsl
mov
cld
fmulp
jno
lds
outsl
loop
cmp
pop
jp
pop
jp
ret
xor
xchg
scas
iret
push
dec
push
adc
ret
mov
pop
inc
and
mov
in
shl
dec
inc
fs
add
ljmp
xchg
jne
fcmovnu
nop
pop
hlt
push
sub
xor
xor
dec
inc
subb
enter
rclb
fsubrs
leave
adc
aad
dec
inc
and
mov
cltd
cmpsb
pop
andl
ja
cmp
rcrl
jo
dec
jne
sub
mov
insl
test
cwtl
cmp
es
pop
rclb
adc
mov
push
push
insl
adc
call
and
dec
push
mov
or
mov
cmp
sub
stos
int3
jne
shll
divps
jo
add
xchg
mov
sbb
cwtl
or
push
cwtl
push
ss
pusha
push
ret
sbb
add
or
mov
out
xor
fstpt
shlb
loope
lret
cli
insl
xchg
addr16
pop
push
xor
in
dec
into
xor
mov
xchg
add
adc
mov
int
add
mov
sbb
das
hlt
jecxz
mov
cmpsb
leave
add
addr16
sahf
add
pop
adc
add
clc
aaa
xlat
int
inc
popa
inc
jo
mov
call
and
mov
cmp
in
sbb
mov
or
ljmp
dec
jo
or
jle
sub
daa
dec
mov
imul
ja
adc
popf
mov
push
dec
insb
cmp
dec
pop
and
in
sarb
cwtl
jl
addl
arpl
imul
shrb
ret
popa
jl
mov
cltd
repnz
addr16
jge
or
ja
adc
jecxz
add
fimull
mov
mov
push
adc
aad
out
push
sub
gs
movsl
add
imul
pop
scas
or
lahf
jl
inc
sub
mov
ljmp
sahf
push
add
test
jo
int3
add
sub
push
or
mov
mov
dec
mov
xchg
call
daa
repz
in
fcmove
mov
cs
adc
imul
jbe
test
xchg
je
lret
dec
adc
mov
clc
push
jecxz
ficoms
loop
sbb
pop
ficompl
jp
loope
push
xchg
movsl
mov
scas
ret
dec
mov
dec
cwtl
ficoms
mov
pop
sar
fs
in
push
mov
pop
mov
mov
mov
into
sub
lock
movsb
arpl
subb
cmpsb
out
xchg
mov
pop
xor
pop
jnp
mov
shll
mov
aad
cmp
add
imul
dec
add
pushf
shlb
pop
stos
je
daa
leave
ror
stc
sbb
push
cmpsb
mov
add
push
ss
push
jo
mov
xchg
jp
sub
out
push
loop
das
mov
fsubrp
cmp
push
repz
sbb
sub
popf
xchg
add
test
xchg
sbbb
dec
nop
in
inc
push
insb
into
das
mov
cs
dec
and
pop
sbb
xor
mov
loopne
jmp
dec
lods
or
out
lods
in
add
icebp
mov
faddl
loop
cmpps
mov
pop
lcall
and
add
push
sub
aad
cltd
nop
dec
cmp
jb
test
mov
pop
mov
test
clc
or
hlt
and
sub
or
xor
dec
adc
inc
or
add
fcomps
std
aam
mov
aad
sahf
mov
test
push
int
and
dec
push
cltd
loopne
stos
movsl
jl
xchg
cmp
xchg
cli
mov
into
aas
jb
ret
jmp
sbb
xlat
lret
add
pop
pop
popl
push
cmp
fs
fisubrl
push
fadds
loop
dec
cltd
in
mov
xchg
jo
jmp
mov
pop
rcr
xchg
inc
addr16
scas
or
cwtl
or
cmp
sub
and
sub
mov
ja
inc
mull
js
ljmp
sub
mov
dec
pop
add
lock
lods
les
jns
add
outsl
or
inc
data16
xor
jnp
adc
sbb
xchg
jbe
popw
xchg
cld
push
dec
lcall
sub
in
loope
test
aad
stos
jmp
mov
test
mov
repz
sbb
mov
xor
inc
mov
scas
fidivl
push
dec
lock
andl
out
mov
call
sbb
mov
or
adc
imull
clc
mov
sahf
les
xabort
xor
dec
mov
lahf
stc
xorb
sbb
xchg
push
fadd
jae
aam
mov
adc
in
aad
repnz
sub
int
lret
insl
call
loop
pop
lahf
sbb
shrl
xchg
cmp
mov
sub
adc
xchg
mov
out
ljmp
jmp
mov
add
lock
dec
push
lods
jnp
scas
mov
fmul
and
mov
jbe
es
orb
pop
jbe
xchg
aam
scas
pop
out
pusha
stos
inc
sub
add
or
mov
add
xor
push
int
jno
push
add
sub
mov
punpckhwd
mov
mov
jo
flds
cmp
adc
in
pop
jne
rclb
add
push
aam
lahf
or
fcomip
int3
fistpl
pop
loope,pt
push
cli
insl
mov
neg
mov
xchg
into
xor
popa
mov
inc
fld
adc
xlat
mov
int
fcoml
mov
jno
out
xchg
popl
push
dec
mov
jnp
cmc
dec
pop
jle
push
inc
add
jge
pusha
pop
das
js
sub
adc
inc
pushf
jo
xchg
sub
adc
or
jnp
and
in
imul
leave
sbbb
mov
das
pushl
pushf
mov
stc
add
add
fdivs
lcall
jl
and
mov
movsl
jl
mov
popf
xor
lods
inc
fisubs
cli
stos
cmpsb
mov
push
loop
jb
out
add
lcall
sub
inc
jbe
shrb
inc
pop
add
sub
jmp
jo
stos
xchg
ds
in
add
jno
popf
jp
mov
out
push
adc
js
xchg
jo
in
pop
inc
mov
lahf
xchg
cmp
vaddsd
fcomps
mov
sub
ss
sub
pop
popa
call
jo
fldenv
mov
push
js
iret
fnsave
test
or
jnp
enter
adc
sub
adc
or
dec
iret
sub
fs
push
insl
dec
nop
push
aad
sbb
jbe
cmp
xchg
loopne
lret
dec
data16
push
in
jecxz
jb
outsl
loop
movsb
sbb
loopne
jp
pop
fs
js
inc
or
mov
mov
cwtl
dec
aam
xchg
lods
test
lods
pop
cmp
shr
push
loope
add
lea
pop
mov
xchg
xchg
mov
sub
pop
sahf
add
mov
dec
pop
pushl
lods
push
stos
out
stos
xchg
xchg
mov
or
out
int
add
sti
push
add
aad
sub
fs
mov
adc
mov
aaa
ljmp
icebp
cmp
fnsave
imul
repnz
aas
jb
pushf
jmp
out
fcom
lret
add
ljmp
adc
daa
or
ret
adc
call
int3
adc
and
mov
push
xor
push
xor
or
mov
jp
add
and
lods
les
jb
add
push
test
sahf
jge
arpl
inc
pop
push
insb
push
mov
and
push
sbb
push
jno
pushf
les
fdivs
pop
jp
dec
xor
or
scas
shll
cs
outsl
sbb
cmc
frstor
and
mov
lods
mov
sub
test
push
jno
inc
lret
cs
test
lods
sahf
adcl
inc
decl
cmp
jg
sbb
fwait
mov
out
adc
sub
sti
aad
xor
cs
add
out
scas
add
lds
fs
mov
jecxz
inc
cmc
fimuls
lcall
mov
loopne
push
fdivrs
hlt
leave
adc
aad
js
and
inc
lds
jl
std
arpl
xchg
xor
bound
popf
xor
imul
faddp
mov
insl
test
iret
data16
xlat
lret
add
adc
ds
pop
daa
fimull
and
mov
fists
ljmp
mov
test
fnsave
test
cmp
add
push
adc
jg
dec
enter
or
or
nop
inc
data16
adcb
jle
popf
sbb
jbe
and
lret
dec
cmp
mov
ror
jecxz
xorb
rcrb
lock
dec
jge
in
and
clc
xor
call
stc
push
imul
inc
fstps
pop
jle
rcl
das
inc
roll
je
shl
int3
adc
sub
cmp
push
filds
clc
enter
adc
fdivrp
jo
aaa
fwait
jns
xchg
sbb
sbb
call
mov
cltd
pusha
pop
and
pop
jb
dec
add
jno
ja
std
sub
test
div
sahf
adcl
mov
in
lods
rcrl
addr16
jnp
dec
pop
dec
push
sub
mov
xchg
fdivs
dec
dec
push
cmp
or
jo
jg
jbe
lahf
jecxz
sub
cmp
ja
cmpb
push
addr16
data16
jns
aas
in
push
icebp
sub
in
inc
ljmp
adc
xorl
xchg
fcoml
je
jle
xchg
mov
or
aad
cmp
test
pop
icebp
cld
fs
jnp
sarb
add
lret
push
sbb
cmp
je
add
mov
popa
addl
mov
repnz
rclb
jnp
lods
outsl
pop
add
cmc
mov
and
loope
mov
pop
jne
mov
cld
adc
sbb
test
cmp
fdivrp
insl
xchg
neg
movsl
int3
xor
repz
xor
and
mov
out
ret
in
fs
ret
mov
or
imul
xor
loopne
cmp
in
enter
cmpsb
xchg
inc
or
push
push
flds
mov
ret
stos
fstpl
xchg
mov
and
inc
sub
outsb
jno
push
inc
roll
sub
dec
cli
push
fstpt
sub
daa
xchg
push
mov
imul
ja
push
dec
or
or
sbb
addr16
mov
andl
aaa
sbb
fldt
clc
aaa
jne
adc
xchg
jo
flds
or
cmp
aas
pop
or
and
mov
jo
call
or
roll
and
cld
es
call
cmpsb
inc
lock
mov
xchg
test
xchg
aaa
jno
sbb
mov
mov
dec
pop
add
mov
repz
mov
imul
cmp
popa
push
cmp
mov
ret
cmp
aad
dec
pop
mov
gs
pop
rcrl
mov
push
fisttpll
dec
rol
mov
daa
dec
push
dec
arpl
xor
mov
scas
dec
mov
popf
jl
test
adc
jge
jnp
sub
scas
add
add
xchg
gs
add
lods
mov
pop
mov
pop
fsubrs
les
pop
arpl
pop
movsb
xchg
or
sub
aad
in
pop
xor
cmp
mov
push
pand
testb
je
mov
out
push
or
push
int
pusha
mov
jl
mov
ret
clc
scas
mov
and
xchg
sbb
mov
cld
jo
jo
or
mov
sub
push
movsb
hlt
dec
call
mov
scas
mov
add
test
repnz
pop
lahf
lret
xlat
and
sub
sti
mov
pop
and
incl
cmp
xchg
xchg
or
and
xchg
mov
imull
cmpsl
pop
mov
mov
pop
add
mov
adc
lods
pop
jmp
addr16
dec
pop
sub
gs
push
sarl
stc
jge
mov
shlb
fistpl
in
lea
cltd
test
sub
lahf
mov
insl
repz
jno
icebp
cmc
add
jge
push
gs
mov
add
push
dec
mov
ficompl
mov
cmp
push
mov
add
outsb
lds
jbe
test
inc
jl
hlt
mov
push
insb
cmpb
jl
sbb
mov
fmull
in
aad
incb
lds
dec
imul
jle
push
fnstenv
subl
jl
subl
mov
cmp
and
test
loope
mov
ret
arpl
sub
lret
mov
lods
mov
mov
jno
xchg
or
cmc
mov
jmp
mov
pusha
popa
pop
jg
sbb
aaa
jecxz
adc
das
mov
sub
push
sbb
jae
adc
incl
mov
push
sbb
or
push
leave
test
xor
insl
add
pop
scas
jno
mov
ret
adc
inc
cs
test
push
test
pop
lret
fcomps
or
jno
aaa
pop
popa
xchg
inc
push
push
pop
sub
aad
mov
aad
iret
push
fimull
sub
mov
leave
mov
rcrl
inc
xchg
xor
ffreep
das
cmpsb
fwait
dec
xchg
cmp
and
pop
cltd
sub
fwait
popa
arpl
sbb
mov
cltd
ret
push
repz
jns
insl
or
scas
rcl
jnp
out
in
mov
dec
cmp
repnz
push
xor
mov
push
or
dec
mov
jp
jbe
data16
push
xchg
fcomp
lret
lahf
gs
mov
jns
lods
cmp
mov
jp
call
dec
ss
inc
or
in
add
push
mov
fmul
pop
adc
push
mov
add
xchg
lods
cmpsb
push
gs
mov
jge
mov
pop
mov
repz
xchg
sbb
sahf
int3
roll
subb
or
stos
out
aam
xchg
mov
cld
ret
cmp
jle
cli
pushf
icebp
out
repnz
jno
mov
enter
cmc
mov
sti
mov
jmp
loope
shl
fwait
dec
test
sub
and
stos
test
popf
inc
sub
dec
out
jg
jne
add
mov
cmp
cltd
aaa
dec
repz
or
scas
xchg
int3
lods
jnp
xor
xchg
xchg
add
xchg
mov
sahf
enter
mov
int
cltd
pop
in
mov
adc
andl
mov
int3
aas
loope
fwait
sti
insl
getsec
neg
cmp
pop
iret
xor
mov
lds
adc
xchg
test
roll
push
std
dec
jno
fsts
jg
jecxz
xchg
fisubrs
icebp
dec
lods
inc
es
and
gs
inc
mov
call
mov
cmpsb
std
std
add
push
adc
mov
xchg
mov
lods
rcrb
push
lods
arpl
mov
fs
adc
clc
mov
pop
hlt
mov
sub
out
xor
add
sub
mov
sbb
cld
pop
out
dec
dec
add
cmp
ljmp
lcall
sahf
adc
ss
out
bound
xchg
push
pop
mov
ss
jb,pt
adc
mov
lret
add
scas
mov
mov
and
and
jge
cmp
jno
adc
rcrl
add
push
fisttpl
mov
subb
imul
fstpt
jnp
jae
mull
fbstp
xchg
icebp
jo
lds
stos
aad
aaa
es
or
in
mov
dec
fxam
sar
push
inc
mov
fstpt
cmc
jecxz
test
pop
push
or
addr16
mov
cmp
in
jae
xor
sarl
jae
std
test
int
mov
mov
mov
movsl
fs
and
pop
sahf
and
inc
mov
adc
xor
stos
out
int3
sbb
ret
inc
dec
add
cli
mov
out
lcall
xchg
nop
adc
dec
into
out
arpl
ljmp
lock
loope
xor
inc
mov
sbb
xchg
ss
mov
aam
jb,pt
add
addb
into
faddl
es
cltd
mov
xchg
cmp
call
inc
pop
sub
mov
call
mov
lods
in
outsb
xorb
mov
mov
push
pop
jns
cmc
and
fsubr
stos
aam
dec
arpl
es
dec
and
pop
addr16
mov
sub
xchg
loope
je
in
jbe
shrb
loope
pop
fidivrs
aam
pop
or
and
jl
scas
hlt
dec
outsl
sbb
sub
xchg
jbe
mov
lret
jmp
push
ja
inc
add
outsb
loop
cmp
pop
js
jp
les
push
cli
cmpb
out
push
dec
aam
add
das
adc
cmp
mov
aam
lods
dec
jno
rorb
dec
sar
mov
add
dec
lahf
adc
jo
stc
cmpsl
add
in
sbb
rorl
scas
jmp
popa
add
or
sub
in
cltd
shlb
push
out
inc
mov
cmp
subl
outsl
xor
daa
dec
pop
or
rol
sbb
push
int3
lods
rorb
popf
cmp
mov
xchg
nop
sbb
mov
push
lcall
call
cwtl
mov
in
adc
dec
push
mov
jo
je
test
mov
mov
cmpb
xor
add
mov
rcrb
xor
dec
nop
inc
scas
push
insb
pusha
ret
fisubl
dec
and
cli
sbb
fbld
fdiv
jo
dec
or
sbb
inc
push
jp
divb
push
jae
subb
test
scas
adc
push
mov
sbb
mov
rolb
loope
lods
movsb
push
loopne
push
push
adc
pop
mov
pushf
ds
ficomps
sub
push
add
xchg
das
orb
dec
xor
ds
mov
mov
dec
add
aad
jp
jns
ja
push
push
sbbl
pop
jmp
sbb
fwait
dec
xor
ja
and
pop
fisubrs
popf
in
jb
dec
andl
jne
pop
jmp
test
popf
stos
sti
daa
jns
push
push
xchg
ret
out
icebp
scas
cmp
fbld
je
in
jbe
mov
mov
loop
cmp
push
sub
mov
test
and
fisttps
ljmp
xchg
mov
sbbb
stos
mov
adc
stos
or
fadds
jg
rolb
cmpsb
add
mov
inc
inc
xchg
loop
adc
pop
jb
push
jp
jmp
mov
scas
jp
push
dec
push
jns
cmpsb
jbe
push
ret
mov
pop
dec
push
shlb
in
iret
or
repnz
xchg
and
es
pop
sahf
fs
gs
xor
mov
lcall
shlb
add
fimull
fsubs
enter
aam
push
pop
and
mov
js
int
mov
pushf
xor
jno
jo
push
je
add
mov
cmp
lock
pop
cli
mov
adc
xchg
or
ja
sub
fwait
pusha
call
mov
mov
in
cwtl
push
fnstsw
mov
and
movsb
imul
repnz
test
sarb
cs
nop
mov
push
cld
cmp
jbe
jns
xchg
add
lret
xor
inc
into
jmp
xchg
imulb
push
cmpsb
pop
mov
scas
xor
push
dec
cwtl
mov
ret
mov
pop
adc
shlb
movsb
xor
mov
push
scas
sbb
pop
sahf
fsubl
mov
sbb
sub
xchg
mov
subb
mov
inc
ret
orb
cli
decb
lcall
sahf
adc
dec
into
out
ss
lock
cmp
mov
rorb
ja
test
mov
mov
cltd
jne
repz
jmp
dec
jge
lock
sub
sbb
add
int3
fisttpl
in
adc
dec
scas
push
dec
ljmp
fists
mov
mov
fcomi
call
lds
xor
fistpll
test
jmp
inc
jne
mov
push
xchg
mov
or
pusha
and
and
test
sbb
adc
hlt
dec
pushf
adc
in
add
out
mov
fcoml
cwtl
cmpsb
cmpb
xchg
mov
shlb
cs
imulb
sahf
cmp
ret
mov
add
jne
ror
in
shlb
lret
xchg
xor
in
sahf
out
pop
xorb
inc
and
mov
imul
cmp
hlt
push
xor
mov
int
insl
cmp
rorb
mov
gs
mov
jne
cmp
popf
outsl
adc
cwtl
fsubr
inc
iret
shr
mov
pop
add
repnz
gs
cmp
or
xchg
adc
clc
jle
call
les
and
in
jo
xor
jmp
je
push
test
mov
call
cld
lods
fldt
push
or
mov
pop
sub
jp
ret
sbb
and
xchg
lods
push
mov
mov
cmc
outsb
loop
stc
sbb
mov
xor
inc
mov
scas
lcall
call
pop
out
dec
lds
pop
pusha
sbb
add
xchg
lret
std
adc
mov
push
add
pop
or
inc
cli
xchg
in
out
shll
push
jmp
inc
out
jmp
and
jne
mov
pop
std
sbb
dec
mov
hlt
or
out
mov
jmp
lds
sarl
fwait
dec
rorl
cmp
mov
sub
or
add
xor
test
cmp
lahf
in
popf
cmpsb
je
jns
aaa
push
je
xchg
xlat
clc
adc
in
testl
add
adc
jne
xlat
pop
jbe
fadd
gs
xor
fcmovu
je
data16
cmpsb
inc
mov
shrb
jp
lods
cld
pop
js
mov
sbb
pop
cmp
push
add
mov
push
insb
xor
mov
and
xchg
lret
pop
adc
cld
pop
cmp
loopne
jge
pop
enter
mov
jp
xor
push
divb
fs
scas
loop
push
dec
call
in
ret
mov
pop
ror
mov
or
je
movsl
ljmp
pop
ja
das
aam
jg
dec
je
inc
or
sbb
sbb
push
adc
imul
jmp
movsl
out
out
dec
cmp
xor
out
xchg
jnp
fnstsw
ja
adc
dec
mov
in
cmp
sbb
add
sarl
out
mov
xchg
cmp
mov
push
jne
int
ror
lahf
sub
imul
cmp
test
pusha
call
push
imul
and
mov
aam
fdivl
test
pop
push
mov
mov
fldcw
shlb
pushf
fimull
into
addb
jle
scas
mov
cmpsb
jb
insb
divl
mov
and
daa
sbb
add
dec
das
jo
adc
lock
hlt
dec
out
inc
or
pushf
in
add
sarl
sahf
test
push
ret
mov
pop
rol
shlb
jge
sub
test
test
pop
or
xchg
in
cli
das
shll
popf
out
addr16
and
mov
jnp
and
pop
vmread
out
mov
cs
sub
add
inc
xchg
ja
ffreep
shll
pop
pop
sarl
sub
mov
pop
xlat
push
add
and
fwait
int
imul
mov
loope
mov
popf
stos
and
out
ret
cmp
push
bound
rorb
lods
shlb
les
push
inc
movsb
cmp
sbb
push
mov
jle
in
shrl
outsb
push
push
or
inc
data16
into
xor
jp
adc
xchg
jbe
xor
xchg
cld
ds
fmull
loop
and
xchg
out
inc
mov
fiadds
hlt
dec
adc
or
add
mov
inc
rclb
ljmp
xchg
mov
mov
js
xchg
lods
inc
scas
loopne
cmp
mov
pop
jnp
mov
and
mov
push
stc
jae
xchg
in
mov
shl
cmp
pop
xor
inc
and
pop
out
jnp
dec
inc
ja
jecxz
mov
dec
push
mov
sahf
or
mov
inc
lock
push
fsubl
cmp
dec
out
cmp
jge
popa
daa
pop
xlat
jmp
jne
jge
ror
cmovp
out
mov
loope
out
popf
stos
roll
xchg
ret
lea
scas
fildll
lods
jnp
out
mov
into
je
pop
test
push
cmp
sbb
add
or
pushf
cwtl
pusha
rcrb
test
jns
nop
push
sbb
mov
and
dec
sbb
outsb
and
das
adc
inc
insb
mov
sbb
outsb
mov
pop
lcall
push
push
or
push
add
dec
dec
flds
ret
mov
pop
and
pop
sarb
outsl
or
stos
aaa
and
cld
sub
xchg
sub
mov
xor
mov
cmp
out
subb
push
fmuls
enter
ss
add
arpl
mov
inc
cmp
jge
or
addr16
cmp
lcall
sub
dec
fbstp
xchg
cmp
fldt
add
popf
xchg
ret
xchg
xchg
arpl
ljmp
outsl
xchg
mov
fstpl
icebp
jno
dec
jge
fcomi
scas
iret
sbb
inc
xor
movsl
xchg
and
pop
adc
pop
push
cltd
pop
sti
popa
mov
dec
in
adc
lahf
mov
test
jae
pop
and
xlat
call
mov
add
pop
in
mov
push
ja
rol
sti
inc
mov
lahf
jl
adc
fsts
cmpsb
cmc
jecxz
sub
or
repnz
lods
shr
jg
add
pop
xchg
sub
stc
aaa
inc
inc
adc
das
sub
out
mov
pop
or
das
sarl
mov
in
das
add
and
push
fdivr
cmp
aam
vmovups
into
and
dec
nop
sahf
adc
pushf
dec
into
push
fdivs
ljmp
out
bound
lcall
cmc
mov
stos
mov
push
mov
lret
add
hlt
daa
mov
sub
ds
cli
or
in
sub
or
mov
cli
mov
ficompl
sub
andb
movsb
dec
ficompl
loop
cmp
sub
enter
les
js
push
sub
mov
dec
nop
ljmp
sub
mov
pop
fs
jns
or
jns
push
test
ffree
xlat
rcl
adc
out
ret
lahf
pop
mov
mov
xchg
rol
stos
sbb
lds
jecxz
jae
jg
imul
jae
cmp
andl
test
outsl
xor
push
aad
lahf
orl
scas
xchg
popa
rcrl
stc
cmc
xor
popf
sub
pop
outsl
adc
cmpsl
mov
enter
jl
imul
cmp
fwait
push
adcl
mov
fwait
jb
or
outsb
and
adc
cmp
cld
outsl
adc
dec
sub
mov
iret
jmp
arpl
repz
icebp
insl
ljmp
insl
xchg
ret
push
adc
imul
xchg
pop
mov
mov
pop
xchg
jle
mov
mov
lcall
iret
inc
and
icebp
cmc
fucomp
jmp
mov
rolb
cs
sar
xor
sbb
gs
dec
mov
push
loope,pn
cmp
loop
sbb
and
push
xor
mov
scas
lods
xchg
push
dec
and
andl
aam
movsl
pop
mov
mov
xor
pop
mov
or
clc
push
repz
hlt
xchg
pop
mov
mov
inc
mov
push
inc
orl
das
inc
insb
cmp
orb
pop
sbb
xor
jb
call
hlt
sub
adc
dec
xlat
in
andb
test
iret
movsb
jl
fwait
loopne
cmpsl
jl
adc
rclb
jno
repz
mov
or
sarl
aad
fcompl
inc
push
test
pop
shll
lods
data16
scas
push
mov
mul
lahf
pop
inc
sahf
stos
dec
pop
jp
add
xchg
ret
adc
icebp
scas
jnp
or
cmpsb
xchg
pop
push
add
mov
mov
gs
lods
push
jnp
jnp
jmp
adc
aaa
mov
mov
add
cmp
or
add
fnstenv
sub
xor
xor
scas
pop
pop
inc
fisttpll
sbb
dec
arpl
lret
decb
jns
aam
in
xchg
data16
adc
sbb
ljmp
outsl
bound
sub
push
sub
mov
inc
mov
push
sti
sbb
es
into
xorb
addr16
adc
and
xor
insl
popaw
lods
ljmp
rcrb
data16
sbb
dec
into
int
or
pop
push
jo
pusha
enter
jne
shlb
pop
adc
push
xchg
mov
mov
popa
cmp
cs
mov
jo
mov
jb
xchg
lods
jno
test
sub
or
add
jb
or
xchg
jb
jno
jno
ret
mov
in
out
lea
or
or
lea
dec
mov
push
jo
or
iret
sbb
push
and
stos
push
jno
xchg
sbb
and
sbb
inc
popa
imul
daa
push
andl
xor
xchg
in
lcall
or
mov
push
jmp
add
dec
and
add
fistpll
xor
push
imul
xor
movsb
mov
and
jns
inc
and
adc
or
xlat
and
mov
add
enter
adc
int3
lahf
and
and
stc
dec
ret
dec
sbb
sub
ss
es
stc
fs
fmull
sub
into
adc
push
rcll
jp
call
push
push
dec
push
enter
jge
and
jb
push
xchg
mov
clc
jmp
rcrl
and
daa
mov
das
jge
popa
shl
es
rorl
sbb
sub
shrb
movsl
popa
gs
aaa
rolb
push
push
xor
lea
xor
jb
lcall
or
in
push
jmp
in
leave
ret
push
mov
mov
out
clc
rorb
push
mov
call
cs
mov
ds
movsb
je
push
xor
jb
insb
out
je
shlb
out
je
shlb
out
je
lcall
idivb
jno
fs
repz
jmp
sbb
mov
pushf
fidivrs
lods
jl
bound
inc
sahf
imul
push
mov
lcall
repnz
xchg
pop
add
sbb
in
pushf
movsb
stos
inc
and
ficoms
mov
leave
push
repnz
sbb
jg
mov
hlt
or
ljmp
aaa
daa
jecxz
imul
mov
stos
gs
iret
dec
jmp
das
cmp
xorl
or
addb
jns
dec
add
xchg
subb
xchg
sbb
jp
gs
bound
lds
out
je
shlb
out
je
mov
shrb
jne
cmp
xor
iret
xchg
xchg
in
jnp
mov
xor
aam
out
push
sub
sbb
push
jge
sahf
ja
dec
sub
xor
xchg
xorb
lods
mov
bswap
lret
lods
sbb
mov
push
dec
jo
lods
fidivs
fmul
loope
mov
push
adc
lret
loope
mov
push
pop
lcall
jnp
jp
movsb
pop
cmp
pop
push
gs
dec
ja
shlb
out
je
shlb
out
je
shlb
out
je
pop
scas
gs
mov
fwait
insb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
enter
adc
test
in
divb
dec
in
xor
inc
sbb
push
testl
je
mov
scas
ret
jbe
or
fdivrs
jnp
imul
and
fwait
xor
jb
insb
out
je
test
popa
stos
adc
imul
ror
daa
cmpsl
lret
or
lds
shlb
out
je
ss
mov
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
shlb
out
je
divb
inc
push
ja
sti
mov
mov
cmp
cmp
xor
fistps
mov
pushf
cmpsb
cmp
rol
sbb
clc
xlat
sbb
inc
cmpsb
pop
loopne
dec
and
xor
inc
sahf
mov
mov
push
xchg
push
adcb
in
ret
adc
pop
dec
fisubl
sarl
lock
sahf
mov
adc
sbb
mov
aam
inc
mov
inc
movb
push
iret
stos
ljmp
ss
jp
mov
insl
es
pop
xlat
xchg
pop
sbb
inc
fdivl
push
xchg
jle
mov
adc
aas
mov
xchg
and
fnsave
mov
cmc
adc
shlb
xor
repnz
mov
xor
out
pushf
lds
cwtl
int
ds
mov
or
jno
insb
pop
mov
mov
pop
dec
icebp
adc
insl
scas
fsubs
add
jns
and
cmp
in
je
jle
ficoms
imull
cmp
stc
push
in
sbbl
ds
xchg
or
pushf
or
mov
dec
cmp
pop
in
mov
jecxz
fwait
jmp
mov
sub
imul
les
repnz
mov
or
jle
jg
adc
movsl
adc
cmpsb
or
jne
and
popa
sahf
enter
les
adc
push
out
fnstsw
out
dec
xchg
popf
nop
nop
add
inc
ficomps
and
in
push
int
dec
out
pop
xchg
inc
inc
adc
cld
mov
rep
sub
pop
test
popa
and
xor
pop
fidivrs
cwtl
lret
js
enter
loope
push
rorb
jge
mov
sub
gs
in
shrd
outsb
in
xchg
sub
adc
mov
in
inc
loope
call
in
inc
imull
sub
adc
mov
cmpsl
sahf
jle
jecxz
xchg
or
ret
jno
pop
add
cmc
out
inc
popf
xchg
into
pushf
push
jmp
mov
mov
js
inc
cmp
jns
or
outsb
cmp
das
xchg
sbb
sahf
fbld
mov
lahf
fsubrl
inc
ss
jg
xchg
loope
or
adc
subl
imul
insb
scas
or
sub
scas
xor
jne
dec
mov
mov
ljmp
fs
push
outsb
loopne
cmp
and
cwtl
cmp
nop
aam
mov
pop
cwtl
cmp
js
retw
out
or
sbb
pop
mov
popl
das
add
jp
mov
mov
push
jno
jle
daa
pop
mov
mov
push
mov
xor
in
ffreep
test
leave
cli
mov
jg
jbe
jle
or
dec
bswap
mov
add
aad
fcoms
popa
add
xchg
mov
iret
jo
jae
shrl
std
mov
push
loopne
call
and
imul
cmpsl
imul
xorl
jmp
cmpsb
push
xchg
cmp
daa
in
out
push
jle
adcl
dec
insb
jmp
push
out
xchg
jno
cmp
rcr
sbb
sbb
sahf
mov
push
insb
insb
xchg
inc
ss
in
and
mov
inc
pop
pushl
sarb
push
ror
push
int3
outsb
loope
insb
push
pusha
aad
or
loopne
and
imul
je
xchg
jmp
xchg
pop
pop
cs
in
bound
scas
rclb
adc
out
call
mov
fwait
cld
lock
mov
imul
les
dec
or
inc
xchg
push
enter
arpl
xor
aaa
cli
push
das
push
mov
xchg
or
adc
subl
es
lea
xlat
subb
icebp
incl
movsl
mov
xor
dec
repz
nop
imul
repnz
push
call
testl
sub
int3
lea
stc
dec
test
sub
xchg
movsb
and
dec
nop
int
mov
fwait
into
inc
sahf
add
popl
mov
repz
nop
imul
es
lahf
dec
cmp
xchg
xchg
iret
dec
fs
and
cwtl
and
or
je
mov
dec
sbb
pop
fisubrl
pop
push
cmp
mov
sub
xor
leave
icebp
imul
mov
mov
shrb
inc
jns
or
cmp
rolb
jns
clc
add
orb
call
pusha
or
sub
adc
testl
scas
out
dec
leave
cs
in
sbb
mov
stc
mov
mov
push
mov
cmp
pop
div
xchg
jne
pop
cmpsl
movsb
into
push
or
and
dec
outsb
popf
push
roll
cmp
mov
push
xor
push
sbb
cmp
inc
sbb
xchg
or
sbb
and
xor
aas
mov
ds
out
mov
rclb
lds
and
jp
inc
push
data16
adc
jbe
leave
bound
xchg
sti
add
enter
sub
cli
scas
jg
jge
xor
jae
loopne
jnp
xor
mov
outsb
mov
push
jl
mov
or
cmc
and
jmp
pop
lret
ret
pop
push
repnz
mov
jnp
push
jo
mov
sahf
test
adc
sub
iret
fwait
xchg
mov
imul
aam
and
adc
jg
ljmp
mov
push
outsl
cli
jle
in
xor
cmp
pop
aaa
jl
ljmp
inc
pop
and
loop
pop
ss
and
mov
jo
repnz
inc
outsb
or
test
xor
inc
int3
int3
pop
jmp
jbe
stc
add
out
testb
in
and
mov
out
daa
mov
std
int3
or
cltd
inc
das
call
pop
into
add
shl
int
popf
mov
adc
dec
fwait
or
mov
call
sahf
lock
mov
mov
aam
jl
fisubs
mov
dec
jno
out
insb
jae
and
sub
fistpll
inc
movsl
icebp
jo
pop
add
test
dec
jb
push
pop
fidivrs
stos
mov
add
mov
or
push
call
movsb
fcoms
js
stc
fst
ss
adc
pushf
xchg
cmp
sbb
pop
add
fwait
addb
enter
sub
or
roll
fidivl
sub
xlat
add
call
mov
and
or
mov
out
pop
icebp
test
pop
cmp
loop
push
cmp
arpl
xchg
mov
sub
aam
adc
movlps
mov
cwtl
icebp
ss
add
sbb
cmp
cmp
ss
pop
in
in
insl
adc
mov
cltd
xchg
scas
imul
sahf
mov
xchg
or
adc
imulb
mov
stc
std
in
shl
shld
push
imul
cli
lock
push
out
mov
in
pusha
lods
mov
jnp
jae
jecxz
ljmp
jne
fwait
cmpl
mov
sbb
loopne
outsl
fdivs
arpl
sbb
xor
hlt
out
adc
push
pop
xchg
cmc
incl
leave
in
adc
inc
pop
lahf
mov
adc
inc
jns
call
xchg
push
mov
mov
jne
and
orl
popf
or
or
je
or
aas
sub
out
mov
daa
test
mov
mov
addr16
ds
push
sub
loope
cmpsl
xor
mov
mov
pop
imul
dec
cmpsb
loope
adc
adc
stc
pop
pop
mov
js
push
mov
es
add
test
imul
outsl
out
aam
pop
out
dec
pop
in
idivb
icebp
test
inc
pusha
adc
cmpsb
xchg
sbb
jb
pop
mov
sub
fdivs
data16
jns
fistpl
dec
imul
push
inc
insb
mov
