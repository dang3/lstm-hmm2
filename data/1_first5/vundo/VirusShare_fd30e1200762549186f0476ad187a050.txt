pusha
call
pop
add
popa
jmp
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
sub
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
jmp
adc
mov
int
xchg
ror
into
out
jmp
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
adc
jmp
xor
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
data16
cmpsl
push
std
repnz
sar
lahf
in
mov
mov
pop
push
pop
jmp
lock
jmp
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
jmp
es
mov
cmpb
jnp
addl
and
add
xor
sub
jmp
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
jmp
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
ror
add
dec
jne
jmp
movsl
jp
mov
inc
pop
jmp
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
jmp
test
or
jmp
add
addl
jle
sub
mov
jmp
sbb
xlat
les
cs
pop
gs
cmp
dec
loope
hlt
sbb
fsubrp
out
mov
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
ret
jmp
lahf
in
mov
mov
push
xchg
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
jmp
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
mov
sub
push
push
xor
mov
mov
mov
or
add
shr
and
dec
jne
mov
mov
pop
mov
jmp
imul
add
push
add
add
stos
or
add
jne
leave
ret
push
mov
sub
sub
jmp
and
fstps
fwait
xchg
jmp
cmp
jbe
in
add
mov
push
xor
mov
mov
mov
sub
or
and
add
xor
and
ror
add
or
add
add
sub
and
sub
or
dec
jne
mov
mov
mov
jmp
es
mov
cmpb
mov
jmp
lods
jne
jnp
mov
jmp
icebp
add
xor
leave
ret
push
mov
sub
push
jmp
leave
into
out
cld
test
or
and
push
xor
mov
mov
mov
sub
add
shl
or
sub
xor
sub
add
add
and
add
and
add
and
dec
jne
mov
mov
xchg
jmp
mov
sbb
xlat
les
jmp
jae
test
add
mov
jmp
xor
jmp
iret
pop
gs
dec
loope
add
add
leave
ret
push
mov
sub
sub
jmp
sbb
or
add
xchg
arpl
fidivrs
in
add
xor
mov
mov
mov
add
add
and
or
dec
jne
mov
mov
mov
jmp
push
mov
and
inc
push
nop
mov
scas
mov
add
roll
add
jmp
cmpsw
push
std
repnz
jmp
inc
rolb
and
add
ds
in
mov
les
add
sub
leave
ret
call
cltd
push
jno
mov
imul
bound
cmp
and
push
add
test
sbb
out
shlb
adc
fidivrl
js
pop
adc
bound
and
mull
mov
cmp
and
inc
hlt
dec
jno
mov
mov
outsb
shll
adcb
jb
dec
jg
call
roll
adcb
ja
jnp
add
jg
and
pusha
add
out
adc
push
into
inc
mov
into
mov
sbb
out
pop
out
dec
lods
mov
mov
cmpsb
mov
pushf
inc
stos
mov
xor
sub
jmp
insb
push
push
xor
mov
cmp
and
mov
into
popf
aam
rcll
cmp
out
fbstp
mov
sub
sbb
inc
jmp
inc
sbb
pop
xchg
cmp
out
add
mov
sub
mov
inc
mov
lcall
push
jg
in
outsl
cltd
mov
push
sbb
arpl
mov
pop
sysenter
jecxz
jns
adc
insb
mov
or
shl
jp
xchg
jg
sbb
test
xchg
cmp
out
lods
cmp
cs
jne
jno
insb
sbb
mov
popf
clc
pop
dec
xchg
loopne
push
pop
pop
adc
adc
jp
pop
scas
test
mov
pop
bnd
lret
jmp
pop
adc
out
pop
cld
mov
adc
outsl
rcl
cli
sahf
inc
sbb
fnsave
adc
inc
ret
xlat
out
fnstcw
dec
mov
and
jns
lods
gs
push
inc
sbb
mov
lock
iret
cmp
dec
xchg
adc
lcall
imul
adc
aam
sahf
lahf
mov
and
push
or
jno
fmuls
and
lods
xchg
loopne
loop
xlat
call
iret
inc
sub
sbb
adc
sub
out
loop
push
testb
mov
and
sub
ret
mov
adc
push
ret
mov
and
out
aas
cmp
daa
mov
pop
je
mov
mov
mov
sarl
orl
mov
mov
or
daa
leave
sahf
arpl
outsl
pop
dec
mov
cli
jge
out
ljmp
adc
push
or
sbb
sbb
pop
scas
aaa
jp
imul
jnp
adc
and
pushf
xor
sbb
int
clc
pop
xchg
ds
or
push
mov
inc
add
jo
pop
out
fistpll
jp
ds
leave
add
das
mov
lods
ret
and
and
popw
ret
sbb
pop
sub
cmp
shr
adc
ja
mov
iret
dec
ds
int
sbb
rcll
xor
lcall
lret
or
mov
push
sub
add
push
into
push
and
dec
cwtl
test
lret
jmp
loopne
icebp
jae
jne
stos
fsubrs
outsb
fsubrs
nop
mov
mov
into
les
leave
mov
push
pop
pushf
jmp
shrl
mov
jno
cltd
addb
inc
sar
leave
adc
cmp
fisubrs
shll
cmp
inc
inc
ja
inc
in
stos
sarl
inc
outsb
push
mov
and
or
lds
cmpsl
mov
ja
negl
lds
rclb
or
or
adc
mov
mov
mov
inc
insb
popf
cld
sub
outsb
add
adc
and
and
in
and
mov
mov
lods
cwtl
loopne
loop
adc
jae
sbb
sbb
jmp
movsb
push
inc
xchg
stos
mov
fs
push
mov
push
aam
mov
int
les
rcl
xchg
flds
dec
mov
inc
je
je
adc
adc
sub
push
add
adc
dec
add
dec
ljmp
loopne
xchg
mov
sbbl
dec
jo
inc
ljmp
sbb
lods
mov
loop
xlat
xchg
push
repnz
ljmp
lods
stos
push
popa
sbb
test
or
bound
dec
sub
orb
xlat
lret
loopne
outsb
or
cmp
jbe
insl
xor
jb
mov
mov
jnp
ljmp
adc
cmp
adc
jns
lret
lcall
adc
fs
mov
push
shl
xchg
mov
and
bound
arpl
sti
sub
fwait
adc
push
dec
imul
sbb
xchg
cli
rsm
xchg
leave
fiadds
or
es
pusha
sbb
popa
mov
fldl
ds
sbb
sbb
fmul
ret
inc
les
enter
xor
adc
xchg
incl
stc
pop
nop
enter
call
data16
lret
mov
adc
sbb
pop
pop
hlt
ret
nop
or
loop
pop
adc
pop
sbb
push
mov
sub
stos
or
and
scas
pushf
andl
adc
cli
cmp
dec
jb
add
sub
jno
imul
dec
inc
leave
mov
clc
lea
cmp
push
rol
xorb
mov
jno
mov
adc
or
ret
or
insl
fildll
icebp
inc
lret
inc
xchg
xchg
cltd
push
or
xor
rorl
add
xchg
loopne
loop
fdivrl
fwait
scas
into
loopne
test
fdivl
mov
mov
pop
inc
orl
sbb
jns
add
cmp
movsb
adc
mov
pop
mov
ffreep
out
or
sbb
insb
push
cmp
loopne
mov
and
jo
jae
mov
adc
pop
push
sti
insb
sbb
and
loopne
ljmp
or
jb
pusha
add
mov
cmp
mov
and
add
mov
push
cmp
test
cli
negb
add
pop
jg
push
pop
lds
orb
cmp
lods
push
adc
loop
notl
int
xchg
push
scas
ret
xchg
mov
clc
xor
pop
add
arpl
mov
repnz
sahf
decb
popa
sbb
xlat
and
or
sub
popa
inc
orb
push
pushf
testl
pop
jmp
daa
popf
mov
xchg
cli
pop
sub
movsl
and
jns
adc
test
mov
sub
adc
inc
xor
jnp
aad
out
or
xchg
dec
push
fadds
push
jo
sbb
jo
push
push
adc
iret
push
inc
push
pop
cmp
bound
insl
inc
les
shlb
orb
or
add
cli
and
fwait
test
fiadds
push
or
jno
jb
ret
mov
mov
into
sub
mov
or
and
les
ss
push
lods
mov
out
and
jg
xchg
pop
jmp
jg
out
jmp
or
scas
je
or
jno
pop
mov
add
mov
test
loope
leave
cmp
roll
aad
jg
mov
jl
stos
mov
jecxz
mov
lret
dec
je
cmp
push
loopne
leave
inc
call
sbbl
clc
into
pop
int3
and
xor
fisubrs
xchg
fldl
popa
and
cltd
or
pop
stos
dec
inc
sbb
lret
out
loopne
xchg
bound
gs
lds
dec
and
bound
sub
xchg
shrb
cmp
cmp
inc
cmp
pop
or
jno
jle
mov
pop
inc
jnp
or
xchg
push
add
pop
popa
adc
orb
mov
adc
mov
push
negb
mov
je
sub
sbb
dec
inc
out
es
outsl
adcl
and
mov
push
js
jecxz
mov
jo
das
sbb
jp
pop
je
outsb
pop
lcall
scas
inc
nop
dec
xchg
xchg
add
sub
in
mov
xchg
scas
cwtl
das
jle
ds
pop
mov
push
clc
into
enter
or
test
jb
inc
bound
stc
cld
pop
sbb
sti
pop
pop
inc
push
sub
dec
cld
icebp
popa
lret
adc
mov
xchg
sar
imul
inc
or
insl
scas
push
or
int
sub
sbb
push
push
cmp
shll
or
xchg
sub
inc
xlat
stos
mov
jno
inc
pop
lret
xchg
inc
push
iret
int
or
or
sarb
fidivrs
fisttpll
pushf
rorb
jle
std
ljmp
cltd
inc
in
xchg
cmp
in
vpclmulqdq
mov
lahf
gs
js
call
jl
into
fsubrs
adc
lahf
xor
in
add
in
push
in
adc
and
and
lret
ds
stos
cmp
psubb
mov
or
jl
into
out
push
inc
and
int
scas
add
stos
xchg
cs
xchg
mov
je
in
popf
lods
in
shll
sbb
in
cmp
ljmp
scas
add
inc
sbb
and
cmp
mov
adcl
xchg
or
loop
std
popa
dec
mov
in
mov
nop
loopne
dec
lret
mov
dec
loopne
sbb
cli
add
mov
outsl
loope
sbb
mulb
mov
je
imul
mov
out
mov
stos
push
popf
add
test
or
ffree
or
sub
add
mov
je
enter
push
cs
clc
mov
cmp
xchg
add
jb
mov
pop
loop
loopne
xchg
adc
mov
sub
dec
adc
fwait
shlb
inc
nop
jecxz
push
int
sbb
test
in
cwtl
dec
jo
inc
lahf
or
ss
sbb
and
ja
pop
mov
sub
push
fcmovb
or
mov
mov
test
sti
call
fidivrs
mov
icebp
out
cli
sbb
iret
enter
es
push
or
subl
ss
adc
sarb
sbb
inc
nop
loopne
out
pop
adc
pop
fadd
sbb
and
cwtl
dec
jo
inc
jnp
pop
jmp
loop
cmp
jg
dec
xor
and
loope
cwtl
xchg
cmpsl
lret
scas
dec
mov
in
sbb
mov
sub
fimuls
call
mov
orl
movsl
xor
dec
inc
ja
push
sbb
inc
push
jp
dec
add
adc
in
inc
fstpl
mov
ljmp
mov
add
nop
arpl
insl
jle
jo
das
out
mov
mov
mov
and
ficoml
lea
push
js
and
dec
adc
mov
sbb
push
jnp
or
xchg
loope
mov
iret
imul
mulb
rclb
sar
mov
out
movhps
and
pusha
mov
xchg
sub
push
and
loopne
jno
jo
in
pop
and
fidivs
arpl
cs
sub
jo
leave
jns
stc
inc
mov
fsub
dec
loop
push
dec
outsb
or
cmp
hlt
mov
mov
adc
inc
push
cli
je
ret
imul
loop
or
lock
je
sarl
stc
mov
test
xlat
mov
movb
xlat
sbb
sub
adc
out
out
jmp
cmp
sub
mov
adc
push
mov
loopne
loop
insb
mov
fistpll
fwait
mov
std
lcall
push
mul
das
aam
push
mov
fstl
sub
xchg
sbb
ret
jge,pn
mov
sub
subl
cmc
ret
clc
jno
and
pop
xor
outsb
clc
sub
nop
mov
mov
in
and
and
pushf
jmp
mov
xor
mov
push
mov
pop
xchg
dec
pusha
ret
pop
sbb
sub
nop
inc
ror
lods
lods
shlb
and
in
iret
insb
xor
mov
pusha
dec
xor
mov
or
xor
jp
xchg
jl
negl
lret
mov
lahf
sbb
inc
les
inc
push
pop
sbb
cltd
addr16
mov
inc
inc
rcr
jno
jno
pop
lret
mov
sub
push
leave
add
add
push
enter
out
rcll
push
loop
xchg
nop
inc
mov
cmp
out
pop
out
jno,pn
mov
push
sbb
jnp
notb
cmp
incb
or
popa
cmp
inc
jb
rolb
pop
js
je
icebp
mov
sarb
push
sbb
loope
inc
mov
pop
mov
add
xor
daa
sub
pop
test
lret
or
adc
movsl
bound
mov
rcll
mov
pop
xor
cld
and
in
imul
pop
or
sarl
jecxz
sbb
adc
mov
pop
or
jp
mov
mov
and
inc
jnp
std
xor
or
sarb
or
mov
pop
or
inc
subb
and
xchg
adc
adc
xchg
leave
into
cs
or
dec
jo
sub
mov
and
add
sub
movsl
test
adc
cwtl
dec
jo
inc
push
mul
xor
es
push
push
push
cmp
icebp
jmp
sbb
dec
out
sbb
dec
sbb
and
mov
popa
outsb
push
movsb
add
and
mov
fiaddl
push
dec
inc
mov
nop
loopne
and
dec
pand
jp
sbb
dec
lret
push
or
jno
enter
out
rcll
and
add
rorl
shll
mov
dec
jo
inc
push
bound
lret
lcall
call
add
das
and
xor
pushf
jo
xchg
xchg
out
adc
xchg
push
fstps
push
and
mov
mov
sbb
inc
sbb
pop
xchg
mov
pop
adc
jg
imul
jne
daa
jg
fstp
je
pop
inc
nop
mov
ljmp
fistps
jl
cwtl
test
orb
mov
in
pop
adc
pushf
jns
jae
jl
popf
or
loop
cvtpi2ps
lea
inc
xor
mov
cmp
loopne
popf
or
loop
gs
add
imul
jecxz
insb
add
rclb
sub
xchg
les
pop
clc
je
jo
jg
xchg
push
cmp
add
adc
cmp
or
mov
jae
stos
orl
mov
jns
add
cmp
xor
and
test
cmpsl
pusha
loope
mov
addl
outsl
nop
leave
jnp
mov
push
leave
or
or
dec
enter
notl
loop
cld
aad
push
lds
ret
test
lret
or
adc
popf
mov
pusha
pop
xor
xor
and
arpl
add
xor
shlb
iret
into
push
cs
and
sbb
dec
mov
mov
dec
xchg
xchg
dec
cmp
jns
js
call
mov
pop
or
sub
repz
data16
dec
jns
lods
inc
add
and
mov
mov
inc
outsl
push
inc
mov
mov
and
pop
adc
cwtl
xor
push
in
mov
in
repz
inc
roll
sbb
mov
nop
loopne
test
insb
loopne
aad
and
ret
mov
gs
cltd
sbb
mov
mov
nop
inc
add
ror
mov
mov
icebp
mov
sti
daa
loop
loopne
roll
cmpsl
jl
jno
inc
lods
or
push
sbb
jno
mov
ret
cltd
pop
fsqrt
jnp
nop
loopne
mov
adc
dec
mov
sub
inc
xchg
mov
pop
inc
nop
loopne
push
jnp
outsl
and
and
and
rcll
outsb
out
xchg
or
pop
cmp
dec
mov
ljmp
or
js
jmp
jno
je
adc
inc
xchg
out
ret
or
xchg
loop
push
mov
lods
cltd
mov
mov
inc
and
sub
icebp
popf
ljmp
es
cmpsl
imul
cwtl
dec
jo
inc
sub
mov
daa
xchg
cld
pop
cmp
inc
les
movsl
mov
insl
xor
pusha
addb
outsb
inc
std
lret
lods
shll
rclb
ljmp
and
push
mov
aas
ret
sbb
lahf
jo
jp
add
jo
out
movsb
ds
jne
adc
ljmp
lret
imul
add
push
push
jb
mov
pop
inc
nop
loopne
push
flds
cmpsl
popa
loopne
lods
repz
xchg
push
pusha
ds
adc
bound
lods
and
rcrb
js
mov
rcll
and
test
or
jnp
lahf
leave
imul
mov
cmp
and
push
dec
cli
jns
incb
inc
or
xchg
push
or
dec
lret
jns
fcom
or
dec
les
cs
mov
fsts
into
aaa
cld
sbb
addl
sbb
sub
arpl
xchg
repnz
cltd
mov
js
scas
or
sbb
xchg
loope
pop
nop
inc
or
das
and
adcb
in
add
mov
sbb
and
jbe
addr16
fneni(8087
add
lret
push
sti
pop
popa
ret
clc
pushf
adc
mov
and
pusha
mov
inc
lret
fsubrl
inc
push
add
mov
push
out
insb
sbb
jb
add
lahf
shrl
ja
inc
and
inc
xor
nop
cld
adc
sub
mov
push
cmpb
jg
jno
jecxz
mov
sahf
hlt
jno
loop
or
and
mov
mov
and
jg
jbe
mov
sbb
add
push
mov
adc
shlb
or
mov
jo
ret
lea
cmp
pop
inc
adc
mov
pop
adc
subb
jno
jo
mov
dec
fs
xchg
pop
xchg
xorb
and
daa
wbinvd
jne,pn
mov
pushf
stos
xchg
inc
xchg
lahf
gs
xchg
push
pusha
mov
pop
sub
imul
adc
clc
mov
fcoms
pop
loop
mov
cmp
cli
sub
xor
int
and
jmp
fcoms
pop
inc
nop
pop
add
add
jns
mov
jl
mov
or
jno,pn
jbe
inc
addb
xchg
jp
or
cmp
pop
dec
outsb
out
mov
and
leave
and
inc
lretw
add
orb
shll
sahf
iret
nop
outsb
sbb
inc
jb
jo
into
shr
and
xor
inc
popf
roll
popf
lahf
dec
popf
jne
outsb
iret
mov
out
sub
shlb
xor
xchg
das
mov
fcoms
pop
inc
nop
arpl
loopne
xchg
pop
xchg
les
sub
mov
sbb
scas
nop
lret
mov
cmpsb
arpl
fbld
and
les
pop
loopne
and
imul
test
into
insb
or
jle
movsl
mov
scas
leave
mov
jae
dec
pop
jno
adc
sbb
cmp
cmp
push
jecxz
dec
hlt
in
push
cli
jnp
outsl
xlat
mov
cmp
pop
adc
mov
lret
jne
std
adc
adc
add
xchg
pop
adc
mov
push
or
jle
dec
cli
cmp
dec
sbb
xor
cmp
int
mov
rcll
and
adc
in
sbb
or
pop
adc
push
xchg
jge
pop
ljmp
dec
jo
and
pop
sbb
mov
daa
pop
rcl
dec
or
lods
sub
and
popa
dec
mov
mov
pop
inc
mov
pop
rol
and
add
xor
sub
vmovntdq
cltd
mov
out
out
fmulp
les
fsubrp
pushw
lea
mov
xchg
mov
ds
pop
lds
add
jo
in
jb
push
scas
aaa
iret
push
popa
jp
ds
adc
jmp
shlb
and
test
scas
clc
inc
orb
pop
jge
cmp
pop
mov
roll
je
xchg
cmp
xchg
xchg
mov
adc
pop
dec
imul
insl
xchg
enter
cmp
mov
jge
xchg
push
js
iret
or
push
out
adc
xor
push
pop
push
pop
sub
fcoms
fldl
inc
clc
lea
adcl
in
jmp
cmp
gs
subl
adc
cmp
pusha
sub
xchg
push
add
jge
mov
addb
imul
jns
adc
pushf
arpl
add
add
jns
or
mov
inc
cli
aam
lock
ljmp
loopne
scas
inc
sub
xchg
pushf
fnstcw
inc
xor
jns
sub
xchg
les
ljmp
scas
mov
mov
mov
out
test
arpl
call
aam
push
inc
pop
sub
or
pusha
notl
mov
adc
in
jo
into
shll
and
adc
jecxz
mov
or
push
dec
loop
or
test
rorb
movsl
js
or
and
or
dec
aad
in
or
cld
les
arpl
push
dec
or
pop
xor
adc
hlt
mov
dec
mov
fwait
popf
push
jae
cs
lcall
icebp
jmp
sbb
movsl
push
and
mov
jb
mov
cmpsb
mov
popa
and
inc
les
and
cltd
sbb
mov
inc
sbb
into
pop
clc
and
jl
add
jno
jo
mov
inc
sahf
orl
mov
push
push
ficomps
negl
mov
add
xchg
fmul
ret
inc
push
or
sbb
cwtl
cmp
test
mov
push
dec
repz
sub
or
push
sub
fnstcw
mov
addl
in
sub
and
loopne
roll
sbb
vsubpd
mov
add
sti
fildl
js
aas
pop
popa
dec
push
xchg
jecxz
out
mov
jae
sbb
fldcw
push
fcomp
fmuls
les
test
lret
adc
mov
sti
and
cmp
ljmp
and
mov
rolb
and
inc
or
in
cwtl
popa
xchg
test
in
jo
movb
sub
jae
cld
dec
mov
xchg
loope
add
mov
jge
dec
stos
sbb
fsts
add
and
mov
sti
xchg
lahf
lret
test
or
pop
dec
out
mov
cwtl
jo
sbb
sub
fs
andb
inc
movl
xchg
shl
and
int3
fbld
xchg
mov
jmp
pop
adc
nop
mov
jge
les
dec
rorl
cltd
loopne
loop
mov
imul
mov
adc
dec
out
mov
mov
xchg
rcrl
sub
sub
adc
xor
das
loop
mov
sbb
outsb
je
loope
or
and
insb
xor
jecxz
sub
pusha
sbb
in
loopne
out
xor
call
inc
das
sub
lods
test
popf
ret
lods
xchg
lret
cs
mov
loop
pop
jns
ss
and
leave
or
xchg
pop
sub
push
loopne
mov
rolb
rolb
loop
test
imul
jp
loop
loopne
mov
jnp
int3
xchg
cltd
and
lods
lds
and
clc
cmp
or
jo
and
xor
inc
sbb
push
cmpsb
inc
sub
xor
cmp
jne
mov
out
rcll
and
jbe
les
lret
lds
mov
push
shlb
popa
jbe
loopne
loope
cld
adc
pop
add
adc
adc
lcall
mov
or
mov
adc
xor
push
jmp
dec
and
pop
sub
and
mov
inc
outsl
push
inc
mov
and
outsb
push
pop
adc
cwtl
mov
push
test
dec
jo
dec
mov
fcmovnbe
jg
lret
popa
int
daa
jne
shr
add
scas
ret
divb
in
and
inc
mov
in
rorb
in
pop
fidivl
cmp
pop
jns
dec
inc
in
mov
test
inc
sbb
and
out
fists
cmp
mov
fisubl
push
mov
popf
imul
dec
xchg
sub
cs
sbb
adc
cli
jecxz
adc
and
lock
decl
inc
les
adc
pop
pop
add
cltd
cmc
mov
mov
or
mov
int3
jae
push
into
and
inc
sub
push
push
mov
push
xchg
mov
sbb
and
pop
fisttpl
xchg
dec
mov
test
mov
jge
jno
jecxz
push
dec
loop
or
xor
xchg
std
addb
test
jb
inc
adcb
xor
nop
push
push
and
dec
cmp
jne
jo
mov
scas
sbb
out
xor
cmp
sub
jae
stos
and
mov
inc
cmp
loopne
roll
negb
sub
mov
push
jo
mov
adc
sbb
dec
addb
dec
mov
push
or
and
add
rcl
pop
jge
or
xor
aad
sbb
lret
inc
repnz
add
cs
dec
jo
inc
orl
sbb
and
jns
add
cmp
dec
or
and
pop
loopne
sbb
cwtl
out
mov
push
mov
dec
scas
sbb
jg
mov
test
adc
or
jle
inc
les
cs
push
mov
cmp
bound
adc
mov
push
push
nop
fiaddl
sub
mov
inc
imul
mov
data16
shll
outsb
xchg
gs
daa
std
mov
adc
mov
push
je
xchg
pop
jp
gs
enter
or
xchg
arpl
inc
addb
mov
or
and
les
sbb
push
push
adc
insl
mov
cmpsb
xor
out
adc
inc
clc
add
jmp
add
movsl
add
adc
add
loopne
inc
lret
jg
sub
cmp
sbb
leave
jge
fldenv
pop
inc
sbb
mov
xchg
jecxz
outsb
add
cmp
stos
push
scas
leave
enter
dec
addb
aaa
pop
es
clc
lret
push
bound
loopne
lock
test
popf
rolb
cltd
mov
push
sbb
inc
inc
jo
shrb
pop
cmc
inc
rol
sub
sbb
incb
adc
nop
pop
adc
mov
sub
inc
out
and
nop
cwtl
pushf
jnp
adc
add
into
rorl
mov
and
sub
test
cmp
sbb
jnp
pop
cmp
adc
iret
mov
add
dec
jns
lret
inc
inc
nop
jae
ret
xchg
jb
data16
and
sbb
dec
jecxz
xchg
jmp
jne
jo
stos
in
test
pusha
pusha
mul
xchg
add
push
test
sub
inc
push
popa
lods
int
stc
lcall
sbb
and
sub
xchg
mov
loopne
vpsrlw
in
sub
xchg
cmpsl
jge
jns
fadd
sahf
inc
mov
clc
sub
mov
mov
insl
psraw
xor
jne
fwait
lea
fldl
sti
cli
xchg
lds
xchg
enter
or
inc
push
cli
inc
fwait
push
aaa
xchg
cwtl
inc
popf
and
in
inc
xchg
inc
or
lret
aad
jg
and
mov
add
aam
pushf
lea
jp
fwait
and
cmp
cmp
inc
les
andl
jecxz
rcl
lods
cmc
adc
mov
inc
ss
rol
inc
les
xlat
sbb
in
jge
es
sbb
push
mov
push
adc
fnsave
int
jbe
out
testb
loopne
jmp
inc
and
mov
and
nop
mov
shll
sbb
cmpsb
jne
pop
sub
popa
popa
inc
pop
inc
sbb
pop
scas
add
cmp
mov
sub
push
jo
and
fadds
xchg
pushf
in
adc
pushf
push
xor
dec
icebp
xchg
sbb
jecxz
lret
or
adc
sub
sub
jecxz
inc
adc
jns
and
add
jbe
add
mov
sub
jo
sbb
incb
pushf
jb
ds
pop
xchg
jl
fidivl
xchg
call
daa
dec
jo
push
insl
stc
fldl
xchg
movsl
jmp
inc
ds
push
inc
test
cmp
ja
cltd
repnz
jno
add
cmp
cmpsb
mov
mov
mov
inc
lret
je
out
daa
ljmp
push
shlb
adc
push
les
shll
icebp
movb
loopne
loop
dec
test
das
mov
jmp
xor
orb
fisubrl
add
xor
mov
std
sbb
push
arpl
push
nop
xchg
mov
rol
in
mov
xchg
jns
add
sub
and
leave
pop
cmpb
pop
pushf
xor
cwtl
mov
adc
add
fxch
and
loop
xchg
fmull
rolb
xor
jmp
imul
pavgb
mov
mov
add
test
dec
jle
or
adc
mov
es
cs
out
mov
inc
sbb
jmp
decb
mov
les
cmp
or
imul
je
js
faddp
push
in
loop
dec
xchg
inc
mov
inc
and
pop
sub
jae
imul
and
xchg
inc
add
shll
mov
shll
fadds
popa
inc
pop
inc
sbb
push
mov
and
outsb
or
push
icebp
in
ljmp
jo
sarl
addb
addr16
loopne
xchg
xlat
nop
movl
ror
repnz
nop
scas
push
je
pop
lods
sbb
pop
jge
sbb
addr16
pop
adc
sbb
jb
jecxz
fmull
or
mov
inc
imul
insb
sub
and
lock
mov
fsubl
and
sbb
mov
xchg
jmp
inc
or
test
data16
sub
sbb
adc
lcall
dec
ljmp
dec
lret
inc
cwtl
mov
rcrb
add
inc
ljmp
loopne
loop
lock
cmp
and
push
in
add
dec
mov
pop
inc
inc
or
nop
pop
and
leave
popa
jg
lods
sub
inc
push
popa
in
or
stc
lcall
or
loop
rol
fldcw
and
loopne
xor
push
jo
jns
mov
pop
je
jbe
lret
xchg
scas
jae
in
rorb
adc
mov
inc
orb
mov
sbb
inc
dec
es
testb
jbe
cmp
sbb
pop
inc
sbb
aad
pop
cld
adc
in
adc
inc
lods
rcrb
mov
or
xor
sbb
and
in
test
and
arpl
dec
sub
mov
out
ds
popf
aad
leave
lea
adc
jns
xchg
incb
push
out
adc
xor
and
xor
lret
add
rcl
mov
push
or
sbb
orl
test
add
inc
movsl
js
loopne
fs
pop
lds
ret
add
jle
dec
push
scas
sbb
cmp
or
jg
or
lret
add
adc
push
test
mov
sti
lret
popa
lret
jb
sbb
jnp
inc
imul
les
cs
pop
mov
fcmovnbe
or
or
jns
and
add
mov
mov
or
jno
jecxz
inc
mov
and
push
lret
jg
sahf
pop
shrl
les
sbb
stos
dec
ljmp
mov
stos
xchg
push
pop
sbb
and
inc
or
insl
jb
pop
mov
dec
mov
cmp
inc
enter
ret
mov
pop
pop
inc
inc
iret
mov
mov
lret
popa
test
punpcklwd
mov
or
fimuls
clc
cmpb
pop
cmpsb
or
loopne
jno
jo
xor
fnsave
mov
std
xor
lcall
iret
inc
sub
adc
push
or
adc
or
sub
cmp
and
adc
jecxz
pop
roll
nop
or
xchg
test
out
dec
lret
ds
mov
adc
ret
mov
xchg
notl
jno
arpl
mov
sub
push
mov
mov
out
into
aaa
cmp
dec
cmpsl
cld
jns
mov
cmp
fimull
out
and
jnp
jp
mov
xchg
jecxz
data16
shr
adc
and
mov
int
repnz
in
pop
pop
or
xchg
pushl
fistpll
xchg
or
outsb
scas
jnp
imul
popf
stos
jnp
pop
dec
dec
jb
inc
jae
add
pushf
dec
inc
lret
ljmp
mov
cs
lcall
mov
lret
es
jns
adc
je
or
std
lahf
mov
es
mov
mov
mov
js
mov
ljmp
into
cmp
and
mov
das
outsb
popa
nop
fstps
adc
and
fcmovnbe
lds
rclb
mov
jns
inc
cmp
lds
dec
das
aam
xchg
inc
fs
jg
imul
mov
xchg
arpl
into
daa
jl
mov
add
ds
jmp
mov
cli
icebp
int
sbb
mov
adc
int
mov
cli
xchg
add
add
mov
adc
mov
clc
and
sbb
mov
sub
cmp
test
push
adc
inc
nop
loopne
mov
testb
lret
cmp
insb
fwait
adc
xchg
mov
test
mov
inc
push
inc
mov
cwtl
cmc
mov
jns
scas
sbb
in
in
lock
iret
mov
mov
add
dec
aad
lret
dec
outsl
sbb
jecxz
movl
mov
jns
jecxz
fsts
sbb
sbb
fistpl
xlat
add
lahf
gs
sti
call
pop
xlat
dec
das
es
adc
pop
or
adc
jge
add
dec
push
rorb
and
add
dec
scas
adc
xor
dec
mov
mov
cld
aas
sub
pop
popa
mov
or
js
mov
and
push
outsb
scas
cmp
mov
mov
in
clts
jne
push
cmp
inc
fisttpl
dec
push
inc
lcall
les
dec
add
push
pop
jge
clc
inc
orb
inc
jl
xchg
pop
adc
je
out
inc
push
or
aaa
push
sbb
mov
arpl
jmp
out
pusha
add
adc
in
jbe
fldl
rcrb
pop
mov
cltd
leave
arpl
dec
xlat
mov
add
divb
jl
jb
daa
test
or
push
lret
jge
mov
cmc
adc
aaa
out
das
fdivr
sbbb
lea
jge
jne
or
pop
mov
push
add
nop
shl
lcall
inc
sahf
into
and
mov
std
fnstenv
addb
jmp
jno
cwtl
loopne
xchg
xchg
pushf
add
or
stos
out
adc
sbb
int
clc
pop
mov
xchg
mov
sbb
test
jecxz
lea
jo
inc
jbe
sbb
adc
std
sub
cld
incb
test
cwtl
inc
jo
inc
adc
mov
push
or
mov
sbb
sbb
out
orl
mov
lock
push
mov
iret
adc
or
pop
imul
idivl
mov
iret
xchg
add
shll
sahf
scas
sbb
scas
xchg
popa
loop
inc
pusha
xor
cmp
jnp
out
add
mov
mov
loope
adc
test
push
je
leave
hlt
fyl2x
mulb
inc
orb
mov
adc
jno
inc
mov
inc
push
or
rcrl
loopne
jmp
pop
sti
sub
nop
loopne
sub
fstpl
inc
loopne
sub
push
jo
ss
dec
mov
inc
xchg
inc
sbb
or
mov
loopne
pop
jns
lret
out
nop
adc
cltd
lea
mov
push
adc
popa
out
add
adc
stos
push
add
scas
lds
ljmp
jge
rolb
inc
adc
loop
pop
pop
test
dec
and
test
inc
jae
in
bound
into
lds
pop
inc
sbb
cmp
test
aas
and
mov
rcl
or
lds
addb
leave
test
lret
xchg
adc
cmp
mov
cmp
dec
je
jne
mov
int
add
push
pop
adc
mov
mov
ljmp
pop
fstpl
jo
nop
pop
adc
mov
loope
stos
adc
mov
or
cs
sbb
js
xchg
lret
pop
loopne
cmp
rcr
das
and
mov
in
fldl
adc
in
imul
stos
push
fiadds
movsb
popa
dec
orb
int3
xlat
push
mov
dec
jb
add
push
mov
dec
mov
pop
inc
pop
lods
fisubrs
push
pop
adc
fs
repnz
js
add
stos
or
xchg
loop
sbb
inc
pushl
popa
push
andl
js
push
dec
pop
lods
jecxz
mov
adc
call
aam
lock
rcr
iret
jmp
mov
jb
jecxz
or
xchg
popf
push
and
mov
mov
lods
pop
les
add
inc
adc
test
icebp
ret
enter
sti
ja
push
inc
test
pop
lret
sbb
mov
sub
cvtps2pd
cmp
scas
ret
jg
shll
xchg
inc
cltd
pop
or
cmp
mov
or
fdivs
outsb
or
sub
mov
pushf
push
xor
xor
cmp
and
not
lock
mov
loopne
fstpl
sti
ja
popa
push
add
and
jle
ja
adc
fcmovu
sbb
lea
mov
or
or
pop
lods
hlt
lret
and
lahf
mov
xchg
mov
fwait
mov
enter
int
xchg
push
jge,pn
sbb
dec
xchg
adc
loope
jmp
inc
mov
insl
scas
test
loop
lds
dec
cli
or
dec
out
ret
adc
lret
loope
pop
adc
sbb
and
inc
pop
cmp
stos
add
add
dec
insl
fld1
in
fstpl
sti
call
sbb
test
mov
inc
lds
mov
insl
pop
jl
fnstsw
or
inc
ja
or
in
repnz
idivb
in
nop
ja
lar
insl
sbb
cmp
dec
fs
testb
orb
dec
jecxz
sbb
xor
mov
adc
leave
ret
flds
mov
xchg
insb
or
cvtpi2ps
mov
cmp
js
sub
ficomps
xchg
dec
sti
dec
popf
mov
dec
popf
mov
dec
popf
mov
pop
repnz
xor
in
adc
sbb
add
cs
lahf
insl
repnz
mov
popf
adcl
and
and
leave
mov
dec
xor
out
add
adc
xor
cs
fdivrl
add
fwait
mov
call
jae
je
imull
repnz
pop
xchg
jo
xor
add
jno
pop
cmp
cwtl
out
je
or
aam
or
insl
push
push
xchg
arpl
sbb
jb
pusha
xchg
fisubs
andb
inc
jno
jl,pt
adc
cmp
add
mov
jns
pop
jle
push
jg
adc
mov
dec
popf
mov
dec
popf
mov
or
out
test
mov
fst
inc
in
push
cmp
jmp
or
sub
jmp
jne
cltd
add
dec
sub
mov
enter
ja
cmp
xor
lods
stos
in
dec
pop
out
xlat
pop
fsubr
dec
pop
out
xlat
pop
fcomps
nop
aad
add
daa
pop
pop
test
pop
pop
test
int3
int
out
mov
mov
fisubrs
lret
enter
push
pop
mov
dec
popf
mov
dec
popf
mov
movsl
div
add
xchg
dec
sti
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
fs
cmpsl
lcall
mov
dec
popf
mov
xor
das
loopne
fldl
xchg
adc
or
jecxz
mov
popf
mov
neg
adc
ljmp
in
add
lods
inc
out
popa
push
leave
xchg
xchg
fcompl
xchg
dec
sti
dec
popf
mov
loopne
cmp
jl
add
sarb
jns
lods
shl
ret
ds
jmp
repz
dec
sti
dec
popf
mov
lret
imul
sti
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
dec
popf
mov
and
add
int3
int3
fwait
clc
faddl
inc
or
pop
mov
fnsave
fdivrl
stc
rcr
mov
xor
lret
lret
jp
imul
aad
xchg
rorl
je
outsl
repz
adc
call
dec
jb
insl
out
add
or
mov
test
inc
and
and
fsubrl
jno
cmp
fistpl
enter
add
push
push
and
xchg
stc
aaa
addr16
scas
cs
imul
lret
add
xor
lret
xor
es
cmp
push
ljmp
jg
xor
iret
leave
adc
popa
scas
jp
pop
push
imulw
inc
pop
sbb
mov
push
cmp
aam
int3
lock
push
push
inc
sti
imul
jle
es
fisttpll
ret
sbb
pop
jp
je
dec
cmp
shlb
xchg
push
push
push
int
stos
ret
dec
lret
push
inc
mov
mov
jp
icebp
into
add
cli
test
add
addr16
and
dec
fnsave
cmpsb
in
sub
jl
xlat
push
cltd
lret
jmp
repz
lods
das
mov
xchg
adc
push
adc
into
lahf
daa
add
sub
fcoml
push
cmc
push
pop
fwait
test
ret
xchg
push
xchg
ret
jnp
sbb
or
popa
xchg
fst
js
loop
and
pop
cltd
push
mov
sbb
adc
push
out
inc
jp
or
insb
jmp
mov
mov
gs
in
mov
adcb
stc
push
out
add
jo
mov
pop
or
pushf
adc
cld
jge
gs
stos
xchg
pop
ret
stos
push
test
dec
pop
xchg
and
and
xchg
add
mov
mov
xchg
test
sub
sub
dec
addr16
adc
mov
fistl
js
jp
dec
aaa
aaa
in
sub
jnp
lock
pushf
aad
test
pop
or
or
mov
clc
flds
subl
icebp
mov
dec
adc
pop
and
push
ret
sub
inc
push
js
sbb
push
inc
adc
push
div
xlat
xchg
cwtl
xchg
aad
sub
or
add
mov
divl
cmc
jb
lret
into
movsl
data16
jecxz
sti
push
push
sub
pop
imul
loopne
imul
stos
notl
insl
in
mov
mov
notl
sbb
mov
push
mov
addl
into
push
repz
push
add
dec
outsl
cmp
sub
push
fs
dec
push
lods
or
sbb
lock
jmp
rcl
mov
shl
cmp
scas
enter
jg
jp
dec
push
in
mov
data16
mov
mov
inc
std
jp
add
mov
cmp
sub
scas
mov
xchg
and
xchg
cmp
in
push
cmp
or
aaa
add
sahf
jb
fistl
jmp
fwait
insl
fisubl
in
jno
test
mov
lods
stc
repnz
lods
mov
and
pop
mov
jnp
push
mov
out
jp
ljmp
nop
mov
add
jg
popa
outsl
std
jae
mov
bound
mov
fs
or
out
hlt
add
dec
lret
call
push
lret
int3
lds
out
test
sahf
bound
cmp
sub
sub
stos
push
inc
xor
or
mov
dec
lret
pop
mov
sbb
insl
jb
mov
popa
jge
std
out
fidivrl
jge
repnz
cltd
inc
adc
jne
mov
sbb
popa
mov
and
mov
arpl
xchg
xchg
or
push
clc
in
jle
cld
xchg
adc
mov
mov
stos
mov
ss
push
jmp
xchg
inc
loop
sub
cmp
fsts
out
xor
xchg
mov
and
or
pop
fwait
cmp
int3
cmpsb
jmp
or
add
aam
imul
adc
and
lds
add
cltd
scas
sub
out
popf
xchg
cmp
pop
mov
inc
xor
test
pusha
sarl
sti
pusha
xchg
test
lret
jmp
and
rolb
inc
sbb
pusha
pop
mov
test
out
fdivr
cltd
mov
jo
ljmp
mov
push
push
les
rcrb
mov
ret
pop
out
sbb
hlt
jecxz
out
push
jnp
and
jmp
fs
jb
mov
cmp
gs
mov
push
xor
jp,pt
xlat
pop
es
sbbb
jno
movsl
out
out
mov
fs
mov
cwtl
and
rclb
jne
insl
mov
pop
loopne
sub
cmc
xor
mov
cmp
mov
add
call
mov
shll
test
dec
sub
pop
je
mov
mov
mov
popa
xor
es
sahf
pop
mov
pop
dec
xor
arpl
jg
sbb
loope
movsb
rcl
xor
push
xor
out
mov
xor
or
ret
mov
push
mov
mov
jmp
incl
lea
pop
adc
icebp
aam
pop
mov
neg
fsubr
inc
jns
icebp
out
or
xor
add
jnp
shlb
cli
and
mov
jp
int
jecxz
dec
repnz
stos
mov
dec
mov
sbb
idiv
leave
adc
repz
dec
dec
dec
push
jae
push
dec
push
enter
repz
xor
mov
pop
enter
call
out
aad
fildl
inc
mov
leave
cltd
adc
xchg
add
mov
jg
imul
mov
daa
int3
inc
aaa
sahf
test
daa
int
mov
in
mov
jns
into
push
xchg
pop
insb
loopne
dec
mov
insl
scas
and
test
bound
push
mov
stos
pop
xor
dec
mov
syscall
daa
out
jl
pusha
sub
cmp
roll
mov
cmp
sbb
add
adcl
dec
fimull
repz
pop
push
stc
mov
jb
inc
cmpsl
push
cli
dec
and
xor
addr16
inc
repnz
test
int3
in
push
xor
add
jecxz
adc
push
popf
ret
sarl
out
cmp
xchg
mov
insl
in
mov
push
xor
xor
mov
dec
popf
in
test
mov
ret
iret
pop
inc
mov
jmp
adc
std
pushl
mov
xor
mov
leave
cmp
in
fdivl
cld
add
int
push
rcr
movb
cld
pop
iret
out
adc
cmpsb
ret
sub
mov
xchg
jae
popf
ljmp
scas
xor
pop
arpl
add
je
inc
push
mov
add
or
sahf
fwait
into
lds
pop
in
adc
inc
inc
xchg
int3
dec
stos
mov
rep
sub
outsl
push
inc
dec
iret
push
rclb
mov
xchg
cmp
popf
add
aad
pop
sbb
ficoms
vpackssdw
jp
or
xor
cmp
push
dec
jecxz
les
mov
outsb
sub
jne
xor
dec
mov
dec
mov
push
sbb
mov
inc
movl
cmp
movl
mov
inc
sbb
pop
push
adc
bound
je
and
inc
hlt
cmp
mov
iret
jns
or
cld
adc
add
sub
mov
dec
jae
dec
adc
dec
cmpsb
lock
inc
iret
adc
std
int3
sbb
pop
movsb
xchg
and
xchg
xor
dec
or
jb
pop
aas
pop
decl
sub
int3
or
or
outsb
mov
inc
adc
das
outsl
je
mov
in
sub
mov
fisubs
jge
lahf
pop
das
cmp
not
lock
es
mov
cmp
inc
sbb
add
and
push
insl
push
daa
sarb
cmpb
stos
push
inc
jg
sub
adc
jne
dec
test
push
bts
dec
jbe
cli
daa
push
cmc
lds
sub
and
es
pop
data16
repz
mov
jl
into
jae
outsb
out
adc
add
cmp
xchg
jae
xchg
sbb
decl
and
ja
movsb
cmp
jns
sbb
call
popa
dec
icebp
inc
jge
xchg
outsl
out
cmpsb
pop
jmp
aam
iret
add
cmpsl
out
daa
testl
sbb
push
roll
dec
gs
pop
or
pop
and
xlat
negb
dec
repnz
mov
ret
xor
xchg
sub
mov
xor
mov
inc
insl
leave
xor
out
js
cmp
dec
in
jae
enter
push
loopne
and
mov
mov
dec
mov
jge
inc
shl
pusha
out
stc
and
sahf
stc
int
fiadds
fimull
add
lcall
ficomps
filds
test
mov
cmp
cmp
xchg
rol
mov
mov
and
xor
repz
xor
inc
repnz
mov
out
inc
or
out
mov
faddl
jmp
inc
xchg
aas
add
sbb
enter
and
jecxz
popa
rol
lea
ljmp
aad
lea
jno
mov
mov
out
adc
cmpsl
xor
les
inc
jb
ss
jp
leave
aam
push
enter
arpl
jnp
dec
sarb
push
mov
cmpsl
jo
jp
pop
push
xor
in
mov
out
push
ret
mov
push
and
cmpsl
push
sbb
cmpsb
rolb
sti
sbb
push
cli
lret
sub
jne
hlt
mov
xchg
fidivrs
frstor
cmp
dec
ja
lods
lock
xchg
add
push
and
mov
test
paddusw
inc
sub
add
in
out
pop
xor
cltd
cmpsl
sbb
clc
adc
xchg
sbb
inc
xor
dec
fstpl
and
sbb
xor
push
int3
cmp
sub
ud2
push
pop
fiadds
pop
push
fs
and
pop
aas
out
and
xor
push
cmc
cmp
hlt
mov
int3
insl
xor
cmp
mov
mov
fisubrl
daa
popa
hlt
js
inc
ficoml
lea
adc
cwtl
dec
aad
add
cwtl
jecxz
inc
mov
cmpsl
and
outsb
sub
pop
adc
push
cwtl
sbb
xchg
ret
fidivrs
pop
arpl
cmp
dec
test
xchg
loopne
add
mov
lods
fsub
mov
mov
roll
mov
daa
add
aas
inc
out
test
fsubs
or
loopne
lock
pop
imul
lret
add
push
fs
out
fs
fsubrs
in
cmp
jae
or
mov
jbe
push
cld
shlb
cmp
daa
andb
in
sti
and
mov
rcrl
sbb
movsl
jmp
jns
cwtl
roll
jge
data16
xchg
xchg
dec
clc
shl
mov
fstpl
add
mov
and
pop
xchg
fdiv
mov
jg
dec
arpl
into
es
jne
loopne
ret
sub
xchg
js
jle
test
jp
xchg
lahf
dec
xchg
mov
mov
sarb
pop
fcomip
inc
mov
stos
dec
pop
repnz
mov
jno
pop
test
call
cmp
enter
rcrl
xchg
push
out
daa
xchg
mov
jecxz
rclb
inc
add
cld
imul
lret
mov
les
pop
and
out
jle
mov
mov
lahf
stos
adc
scas
pushf
js
mov
mov
push
stos
sahf
sbb
cld
push
sbbb
pushf
imul
jno
pop
jl
in
js
fcompl
mov
mov
pop
sub
rcrb
jo
add
xor
push
xchg
hlt
or
lods
fstps
lds
and
jo
xchg
pop
lods
mov
and
mov
in
sbb
inc
mov
mov
inc
arpl
xor
fwait
out
ljmp
je
dec
cld
xchg
daa
push
ja
nop
into
push
dec
enter
leave
in
mov
sbb
and
sbb
push
push
mov
cmpb
pop
xchg
mov
jecxz
in
into
outsb
xlat
mov
sbb
icebp
mov
sub
xor
insb
sbb
pushf
or
sbb
aam
inc
pop
aam
mov
cmp
cld
lods
cltd
jp
and
dec
mov
mov
imul
imul
popf
enter
inc
es
cld
ds
shll
push
or
and
je
push
add
inc
pop
sbb
xchg
sbb
mov
dec
outsb
pusha
dec
add
fcmovnbe
jle
xor
std
mov
cmp
inc
lret
mov
movsl
lret
push
mov
int3
pop
jge
shlb
scas
xchg
inc
sbb
sbb
pop
lods
lret
or
cmp
or
and
cld
sub
aaa
mov
inc
aas
mov
pop
pop
outsb
xor
dec
les
sub
pop
push
jecxz
lock
subb
add
xchg
xchg
or
pop
fwait
es
pop
dec
xor
jp
bnd
cmp
dec
clc
cmp
imul
inc
jno
jb
lret
imul
pminub
jge
fs
decb
adc
movb
js
xor
pop
cmp
xchg
xchg
sbb
ds
mov
lret
xlat
xchg
pop
add
insl
or
movsl
inc
frstor
sti
and
pop
jp
shlb
sti
dec
int
mov
sbb
imul
mov
fcomps
pop
les
lds
jns
inc
xchg
shll
pop
dec
rorb
cmp
cmp
dec
push
jno
lods
mov
in
sub
dec
mov
sub
push
popf
push
mov
lock
mov
test
lret
sbb
add
and
adc
ds
scas
decl
sarb
adc
sub
aam
jecxz
dec
test
jecxz
lahf
pop
cld
fnstsw
push
add
rol
orb
sbb
pop
jg
aad
rsm
cld
sub
add
fwait
xchg
sub
xor
jmp
mov
cmpsb
jb
push
or
push
lret
sahf
ficoms
mov
and
xchg
loop
ret
fucom
test
jmp
nop
mov
sar
or
jmp
out
pop
test
mov
inc
loop
pcmpgtd
add
in
adc
cmp
and
ss
add
push
neg
ret
insb
sti
imulb
push
aam
pop
out
push
pop
js
mov
xlat
lods
pop
xor
leave
jg
into
sbb
fld
mov
test
and
xchg
imul
mov
sarl
push
cld
in
jg
mov
ds
push
loop
or
fldcw
mov
es
xor
in
mov
push
cmp
repz
cmpsb
fstps
sub
mov
cmp
dec
call
outsb
mov
lret
aam
dec
aad
adc
stc
pop
push
xor
test
sbb
lret
rclb
fidivs
cmpsl
mov
iret
mov
daa
sub
mov
xchg
je
in
pop
cs
inc
adc
push
push
mov
jmp
pop
mov
arpl
rolb
out
push
push
insb
inc
cmp
std
xchg
xor
loope
mov
xor
jmp
jecxz
mov
add
repz
jmp
pop
jl
mov
or
mov
addr16
dec
jns
jbe
ret
dec
inc
pushf
or
out
shrl
cmp
imul
fdivrs
subl
inc
je
arpl
movsl
ljmp
adc
fisubrs
inc
ds
cmp
shlb
pushf
mov
pop
pop
pop
dec
repnz
sarl
inc
filds
es
xor
pusha
lahf
adc
push
sub
inc
xchg
jecxz
pushf
cmp
rorl
shl
ljmp
push
cld
mov
and
enter
loope
dec
mov
movsl
or
mov
mov
pop
adc
mov
xchg
test
or
daa
into
sub
xchg
mov
aaa
pop
outsl
push
shlb
jnp
mov
dec
mulb
sbb
push
add
dec
xor
shrb
popa
add
xorb
push
push
fisttpl
clc
shrl
sbb
fisttps
mov
ljmp
mov
inc
sub
jge
sbb
daa
mov
iret
cmp
dec
cltd
xor
xchg
clc
xchg
lret
pop
out
pushf
movsb
test
aas
fisubs
inc
pop
jnp
test
mov
fldl
xor
dec
xchg
sbb
pop
dec
mov
rep
xchg
lret
outsl
jb
lea
lret
aas
fs
cmpsl
push
lods
mov
ret
fldcw
add
cmp
inc
add
mov
xchg
cmp
mov
and
popf
lret
outsl
cwtl
repnz
dec
mov
stc
xor
sar
xchg
or
jno
aaa
pusha
xor
cmp
in
aam
dec
mov
cli
loop
push
sub
pop
mov
dec
pusha
sub
push
je
fsubs
pop
ss
aaa
lea
in
pop
testb
outsb
inc
lds
push
int3
xor
icebp
call
es
add
in
icebp
xchg
pushf
cwtl
dec
js
jle
push
and
mov
int
aas
mov
and
ret
jno
icebp
incb
es
xchg
jp
aad
mov
fmuls
xor
lret
add
mov
dec
pop
pop
sub
mov
adc
arpl
call
push
jg
sarb
xlat
out
inc
jle
push
push
out
lea
pop
in
add
test
insb
add
fdivl
mov
in
daa
andb
sub
ja
icebp
push
movq
pushf
adc
push
jl
fwait
xor
cmpsb
pop
lea
imul
adc
and
xchg
xchg
repnz
stos
fistl
or
mov
dec
inc
push
popa
jo
mov
sbb
loopne
dec
pop
shrl
lret
mov
push
test
dec
sbb
jge
add
sub
and
add
dec
mov
jne
jo
lea
inc
call
and
push
ja
mov
jae
je
push
sub
cmpsl
push
repz
int3
hlt
cmp
jl
lret
inc
pusha
mov
xor
arpl
mov
jb
enter
mov
and
cmp
enter
sub
push
xlat
or
mov
pop
popf
dec
mov
test
cli
jno
lsl
mov
loop
andb
lds
cld
xor
add
imul
push
out
mov
inc
test
ljmp
cmc
push
ja
xchg
pop
sbb
cmp
jae
lret
sbb
outsl
sub
mov
mov
inc
fnstsw
mov
pop
xor
dec
cmpsl
imulb
lock
int3
outsl
mov
mov
aas
in
hlt
xor
ret
cltd
fdivs
jecxz
pop
lcall
popf
mov
outsb
sti
mov
lret
jnp
repnz
push
popf
js
mov
jmp
add
add
mov
ja
hlt
mov
push
sbb
es
dec
fiaddl
rclb
lods
inc
test
pop
push
cmpsb
pop
adc
pop
pop
cmp
pusha
push
sub
add
pop
in
mov
lret
adc
pop
dec
mov
and
hlt
cmpsb
xor
xlat
lcall
rcl
das
les
jle
test
imul
lcall
cmpsl
push
xor
fsts
mov
aad
les
xchg
leave
pushf
ja
dec
cmpsl
out
int
lds
fldcw
jne
jp
mov
push
mov
mov
ljmp
movsb
test
inc
fs
cmpsl
pop
jl
cmpsb
push
inc
test
out
mov
fdiv
mov
ds
fcmovb
cmpsl
pop
mov
gs
dec
add
mov
lds
cs
sbb
les
aaa
call
jnp
cmpsl
dec
cmpsb
add
inc
adc
cltd
sbb
leave
xor
js
pop
mov
fisttpll
or
mov
inc
xchg
jne
repnz
loope
pop
adc
sbb
xchg
fcoms
test
push
jo
sbb
in
aam
mov
pop
negl
sub
mov
dec
loopne
or
lcall
fcmovne
lds
dec
shl
sub
cltd
sar
call
and
mov
stc
jle
fcoml
mov
lods
mov
jmp
mov
mov
push
lret
dec
stc
icebp
test
cmp
mov
cmp
cli
mov
xor
shll
shll
test
int
sbb
xchg
xchg
pop
imul
outsb
jle
sub
pop
xchg
aaa
lcall
pop
rcll
mov
inc
pop
aas
mov
rcl
xchg
dec
mov
cmp
stos
cmp
lret
pavgw
cwtl
lock
xchg
loope
sub
ja
clc
push
addr16
imul
lahf
std
fnstcw
fnstsw
jle
sar
inc
les
pop
sbb
mov
jge
aad
ret
xchg
mov
into
cld
popf
imul
push
fs
rorb
loopne
scas
adc
sub
mov
mov
mov
pop
xchg
push
jecxz
push
add
mov
testl
ljmp
and
mov
pop
cmpsl
sbb
dec
add
test
and
pop
mov
sbb
pusha
mov
and
and
shl
cmp
pop
mov
jae
jge
test
or
pushf
cmp
mov
sub
inc
inc
jb
mov
lds
movsl
add
xchg
jle
jo
xchg
movsl
adc
jne
xchg
mov
scas
inc
aaa
in
daa
xchg
jle
fsubrl
push
xchg
jne
sti
xchg
pusha
adc
clc
clc
mov
cmp
push
adc
or
mov
sub
xchg
or
lahf
cli
and
xchg
mov
add
rclb
dec
jo
leave
aaa
fwait
dec
in
hlt
loope
idivl
repnz
in
push
pusha
ljmp
xor
call
or
inc
mov
mov
sahf
xchg
stos
fidivl
xor
mov
xor
call
mov
in
icebp
lcall
scas
ds
push
sub
ss
sahf
push
adcb
push
insb
rcl
xor
lods
enter
push
ret
das
repz
sbb
fiadds
pop
mov
rcr
pop
cmc
loop
pushl
sbb
xor
fwait
mov
xor
ret
lahf
and
gs
cli
cmpsb
insb
inc
jb
ljmp
mov
xchg
mov
jmp
and
jno
sbb
rcll
mov
inc
lds
jns
xchg
cmp
bound
sbb
imul
xor
mov
popa
shlb
mov
cs
icebp
ljmp
inc
cld
repz
fs
push
in
lods
cli
jno
mov
sarb
and
insl
and
int
int
sub
testb
pop
dec
xchg
cmpsl
push
xor
xchg
inc
sub
scas
pop
sub
sbb
rcrb
andb
mov
daa
in
mov
in
imull
testb
sbb
ret
push
addr16
xorb
adc
js
adc
out
mov
fnstenv
pop
lret
cmc
mov
jg
xchg
std
sub
lahf
jns
les
sbb
dec
test
dec
imul
ss
xor
xor
dec
lds
repnz
jl
lcall
xchg
mov
addr16
stc
fcmovnu
jecxz
lahf
aam
in
ss
stos
mov
sbb
push
pop
fisubs
lock
push
or
dec
test
xchg
loopne
xlat
ret
add
sub
mov
or
inc
pop
push
dec
cli
les
sti
popa
incb
test
inc
adc
cmpsl
lret
sub
pushf
pop
cmp
pop
and
mov
push
lods
outsb
cmp
lea
andb
pop
sub
xchg
mov
cmp
fisttpl
jmp
pushf
xchg
rcrl
push
leave
mov
cmp
cs
inc
xor
dec
movsb
loope
pushf
jo
cli
xchg
push
aad
xor
mov
stos
jo
enter
pop
mov
mov
sub
xchg
ds
ret
lret
pop
ret
imul
cmpsb
jg
outsl
push
pop
xchg
mov
cwtl
mov
xchg
fcoml
lods
jne
adc
cmpsb
dec
pop
cmp
mov
dec
push
inc
add
mov
in
cmp
dec
jmp
movsb
test
lahf
into
loopne
shrl
mov
loopne
pop
icebp
xor
aas
cmpl
mov
outsb
pop
mov
pop
in
and
push
lss
xlat
std
pop
xchg
scas
subb
push
sub
push
stos
mov
repnz
cmp
std
sahf
jne
aam
jo
pop
cmp
daa
pop
cmp
out
jns
stc
cmc
mov
cld
loop
test
popa
cli
xchg
push
enter
in
jmp
pop
hlt
clc
jl,pt
mov
les
mov
ljmp
in
movsl
dec
dec
jl
fistl
insb
push
shll
lods
sbb
js
arpl
orb
xor
lea
aad
cmp
mov
rol
cmp
subl
ja
js
pop
adc
bound
adc
pop
cmp
mov
sub
mov
stos
je
inc
sub
dec
std
push
push
dec
rorl
popf
inc
jge
push
pop
gs
popf
je
push
insb
jbe
mov
movl
xlat
std
sub
cmp
jmp
mov
repz
pop
dec
mov
jns
insl
test
js
push
mov
lods
or
and
in
mov
inc
xchg
xchg
cmpsb
mov
and
call
inc
js
inc
into
faddl
lret
stos
xchg
stos
hlt
shr
ds
push
dec
dec
ret
gs
repnz
mov
inc
jbe
lock
stos
sub
das
movsl
mov
leave
cmc
sbb
mov
int3
nop
out
addl
sbb
sbb
movl
or
push
pop
mov
or
xor
sbb
cmp
ret
data16
xchg
pop
pop
xor
sbb
add
outsb
adc
push
and
inc
cmp
add
mov
and
pop
cmp
jge
mov
mov
ret
pop
rolb
inc
push
pop
mov
dec
lods
call
cmc
mov
mov
mov
mov
cmp
arpl
xchg
sbbb
int3
in
xchg
add
inc
cmpsb
outsl
mov
repz
add
pop
mov
xchg
aas
das
lea
dec
xchg
jp
insb
mov
cmpl
cmpsb
add
ret
sbb
stc
sbb
lret
add
inc
jmp
adc
dec
lea
xchg
adc
out
movsl
out
push
jns
xchg
shlb
or
fcomip
addr16
xchg
and
test
jge
add
cmc
mov
jo
push
jnp
add
addr16
movsl
inc
jbe
mov
movd
xor
jmp
ljmp
add
mov
mov
dec
int
repnz
jg
xchg
aas
cltd
mov
push
and
pop
mov
nop
cmp
scas
movsl
pop
sub
aam
jb
or
jl
sahf
hlt
data16
cmp
xchg
idivl
mov
out
cmpsl
sub
enter
pop
mov
adc
xchg
fsubrl
xorl
fs
push
in
neg
mov
sub
out
pop
lret
cmpsl
add
icebp
push
shll
lret
mov
scas
mov
data16
jae
push
sarb
xchg
mov
xchg
scas
cmp
pop
jb
das
test
ficomps
dec
pop
jne
mov
and
push
les
test
mov
jbe
or
fsubl
fbstp
loop
fiaddl
sub
adc
movsb
mov
loop
into
lea
ret
cmpsb
and
jge
das
es
data16
out
xchg
adc
push
pusha
mov
js
mov
mov
mov
std
imul
lahf
fsubl
mov
push
pop
outsb
push
out
jle
rol
call
mov
or
in
scas
cmp
prefetcht1
daa
jo
mov
pop
imul
nop
dec
jnp
xchg
rorb
and
dec
clc
movsb
pusha
rorl
and
xorb
jo
negb
aad
icebp
fs
xor
lret
mov
fildll
sbb
sbb
sbb
xor
mov
push
imull
adcl
mov
jecxz
inc
mov
xorl
add
xchg
xchg
bound
or
sti
cwtl
xorb
adcb
sbb
ljmp
pop
push
mov
jns
test
icebp
inc
pop
inc
pop
fbstp
popa
cmp
push
ret
addr16
gs
mov
inc
cmp
jl
ss
jbe
mov
enter
jge
add
out
jecxz
std
and
push
jae
mov
popf
or
inc
jae
mov
xor
ljmp
sbb
ja
jae
jae
lcall
test
cmp
push
repnz
jg
cmp
fimull
xchg
cmpsl
in
shrl
jge
xchg
adcb
aam
xor
xchg
das
mov
jae
sub
inc
lods
sbb
outsb
xchg
stos
mov
test
rcrb
mov
mov
jp
pop
insl
insb
adc
cwtl
cld
dec
psrlq
mov
add
mov
rcl
loop
xchg
pop
out
insb
mov
sbb
mov
jbe
dec
call
add
enter
idivl
xchg
adc
or
mov
jp
lods
div
sub
subl
mov
mov
push
gs
xchg
pop
icebp
push
mov
mov
or
mov
scas
fisubrs
lret
jo
idiv
mov
adc
add
xchg
imul
or
rcll
adc
and
leave
sti
faddl
push
add
xchg
jge
add
aam
and
mov
jl
cmp
xchg
mov
fidivl
cmpsl
mov
stos
incb
pop
loopne
push
mov
cltd
pop
repz
inc
iret
xchg
jmp
jmp
stos
jmp
rcrb
imul
push
and
mov
cli
push
rclb
sbb
and
lret
rcrb
inc
inc
inc
or
xor
iret
sbb
adc
xchg
mov
inc
lahf
jg
mov
mov
sbb
xchg
xchg
je
inc
adc
sub
jge
call
inc
fistps
lock
pushf
nop
sbbl
not
shll
js
in
mov
xchg
stc
icebp
xchg
movsl
push
out
out
mov
cwtl
je
sti
fs
jge
ss
ja
adc
push
push
aam
ss
fs
sbb
mov
dec
imul
or
push
mov
pop
loope
mov
mov
dec
and
sbb
cld
jp
movsl
out
int
or
mov
jmp
ds
inc
subl
ret
pop
inc
jb
and
xor
in
push
roll
dec
pop
cmp
push
lret
adc
ss
aam
jns
push
dec
sbb
jl
mov
cmp
fmuls
adc
mov
test
mov
imul
push
sahf
fcmove
fldl
adcb
arpl
icebp
jno
mov
inc
stos
nop
cmc
movsl
aaa
push
jns
sbb
gs
adc
cmpsl
dec
lret
jo
scas
int3
jmp
sbb
mov
movsl
call
mov
dec
pop
mov
cmp
sbb
jno
pop
sub
or
mov
pop
cmp
jge
pop
inc
decl
fbstp
subl
or
jg
mov
dec
mov
loope
mov
dec
bound
adc
test
cld
jbe
psubb
mov
add
repz
mov
push
xchg
pop
das
sub
fmulp
sub
mov
bnd
fcomp
leave
cltd
jb
mov
movsl
out
adc
sub
and
cli
push
or
cmovb
cmp
xor
pop
pop
in
mov
rcll
jnp
adc
aad
mov
or
lcall
jo
and
and
into
inc
sbb
loop
pop
or
push
es
stc
cmp
pop
push
lock
fmuls
ss
pop
jno
es
or
push
stos
xchg
in
mov
shll
fwait
adc
lcall
jnp
jnp
or
out
out
sti
push
orb
out
dec
xchg
filds
jl
dec
rclb
ds
cmp
pop
sub
sbb
inc
rcrb
int3
mov
add
pop
iret
add
xchg
ljmp
call
xor
iret
mov
ficoml
adc
dec
cmp
aad
bnd
inc
pop
inc
or
out
xlat
pop
inc
pop
inc
jnp
lea
lahf
lea
xor
inc
mov
cmp
ljmp
les
mov
pop
push
jb
add
mov
aaa
pop
xchg
pop
scas
dec
jns
add
push
enter
std
subl
mov
xor
fidivl
sub
lods
xchg
pop
pop
jmp
pop
loop
adc
clc
popf
js
push
adc
jbe
or
xor
out
xchg
inc
xchg
shll
and
fwait
inc
sub
cmp
pop
je
push
fimull
xchg
scas
jbe
inc
xchg
sbb
xchg
clc
shrl
iret
in
add
push
xor
negl
into
insl
ja
sahf
mov
jmp
lahf
pop
ja
jo
pushf
sbb
lods
in
jmp
sti
hlt
add
sub
std
inc
cmp
and
mov
mov
mov
cwtl
adc
cli
mov
mov
movsb
jle
fmul
out
sub
cmp
pop
cmc
enter
fcmove
jge
inc
stos
gs
int
nop
das
jg
movsb
aas
mov
mov
dec
stc
xchg
fimull
sbbl
xchg
cmpsl
cmpsl
movsb
mov
pop
pop
mov
scas
cmp
cmp
orl
push
aas
mov
jbe
or
sbb
fwait
dec
loope
aam
sub
js
mov
mov
test
cli
pusha
cmp
jns
lret
je
pop
int
loop
fidivrs
cltd
mov
icebp
push
sbb
mov
out
fisubrs
addr16
mov
jnp
pop
cld
bound
fwait
mov
xor
inc
sbb
mov
hlt
xlat
sbb
xchg
add
and
aam
adc
addr16
mov
mov
adc
scas
ret
fsubr
push
lods
lret
out
inc
loope
or
mov
or
pop
and
out
aas
push
shrl
lahf
shrb
sbb
test
das
leave
and
out
out
dec
and
push
jns
xchg
jne
out
jmp
pop
std
cmp
fsubrs
sub
and
dec
aaa
out
cs
mov
gs
adc
and
cmp
or
jae
sar
scas
sub
inc
in
into
push
mov
fsubrs
mov
xor
hlt
inc
sarl
xor
insb
jne
in
xlat
popa
adc
inc
xchg
aaa
pop
inc
dec
scas
in
cmp
add
fs
add
mov
clc
mov
mov
jg
sahf
aaa
inc
pop
leave
inc
cmc
adc
popa
movsb
push
test
insl
test
pop
mov
or
sti
sbbl
mov
fstpl
ret
jmp
aaa
mov
mov
add
std
push
pop
icebp
cld
xor
xchg
push
stos
arpl
jmp
lahf
xchg
out
xchg
dec
test
xchg
cld
xor
mov
fisubs
sub
test
or
je
sub
jbe
inc
outsb
stos
outsb
xchg
iret
fimuls
ret
mov
jae
pushf
mov
xorb
fidivrs
adc
push
and
jns
mov
mov
clc
out
test
add
xchg
repnz
mov
icebp
call
mov
mov
push
lcall
jmp
inc
pop
add
mov
cmp
lea
jmp
jl
aaa
ss
mov
outsl
xor
das
pop
mov
xor
xlat
ja
sub
rcll
ret
cmp
inc
popa
test
xchg
loop
jmp
jno
pusha
das
je
sub
inc
dec
sar
mov
pop
fists
mov
or
test
int
jle
movsb
sbb
test
ss
and
jl
test
pop
shlb
lea
sahf
push
imul
dec
pop
mov
ljmp
and
rorl
pop
pop
inc
outsb
movsb
lcall
hlt
cmp
mov
jp
daa
int
sub
cld
pushf
sbb
sbb
pop
adc
adc
bound
or
pop
or
fs
decb
mov
pop
dec
cmp
mov
cmp
push
test
clc
lods
fwait
mov
cmc
cmpsb
testb
leave
scas
xchg
enter
daa
mov
movsl
loopne
push
or
sbb
inc
or
btsl
add
adc
push
push
xor
lahf
movsb
pushf
icebp
mov
cmpsl
push
xor
data16
test
insl
cmp
add
test
call
mov
fisubrl
cmp
mov
mov
cmp
mov
add
rolb
mov
ret
mov
fs
or
mov
shl
imul
cmc
sub
inc
shll
shr
cmp
or
jo
add
leave
aad
dec
pop
dec
or
dec
ret
xchg
icebp
aas
arpl
loope
fwait
xor
inc
lret
lods
pop
push
add
dec
mov
cmp
add
aaa
outsl
lret
inc
jns
subl
incl
hlt
loop
xchg
xlat
in
xchg
and
and
xchg
js
jae
mov
mov
sub
sbb
sti
adc
enter
xor
push
xor
bound
push
and
jmp
mov
mov
sbb
dec
dec
test
lea
sahf
test
arpl
xor
ja
out
jbe
pop
pop
cmc
and
dec
test
inc
cmp
mov
clc
test
hlt
cld
in
mov
pop
xchg
jo
cld
in
add
cmp
pop
and
xchg
xor
xchg
dec
xor
dec
divb
or
sbb
lret
adc
cld
pop
mov
into
and
sub
cwtl
inc
arpl
add
fdivs
sbbb
inc
lods
mov
jp
sbb
sahf
loope
lret
mov
mov
fnstcw
test
fcoml
mov
or
mov
xchg
mov
xchg
ret
loope
xchg
repnz
adc
inc
jle
test
lret
roll
adc
mov
in
lahf
xchg
push
cmc
and
mov
stos
mov
cltd
sub
fnsave
in
push
cwtl
jae
sub
add
lods
xchg
jae
mov
cmp
adc
pop
loop
clc
pop
sbb
push
les
cld
daa
pop
loop
sbb
call
cmpsl
add
xor
push
mov
mov
in
loope
sar
or
aas
movsb
pop
mov
aas
cmp
fwait
jmp
xor
hlt
push
cmp
arpl
mov
dec
push
xchg
movl
add
pop
xlat
push
stos
out
in
jge
push
mov
cs
roll
ss
into
mov
mov
inc
std
gs
add
mov
lods
fstpt
lods
test
out
xlat
mov
gs
adc
mov
pop
xor
loop
lods
loop
cmp
loopne
insl
push
imul
dec
cmp
or
fsub
pop
mov
adc
and
dec
lea
and
sbb
sar
push
mov
jb
inc
cmp
add
inc
outsl
push
nop
cld
clc
dec
aad
cmp
cmp
in
or
ret
inc
popf
pop
push
pop
repnz
fnstsw
daa
hlt
jmp
pop
pop
add
sar
pop
and
lods
xor
out
ljmp
or
hlt
in
je
pop
sub
mulb
or
ljmp
pop
push
nop
popf
jb
xor
ds
shrl
sbb
cltd
sub
push
push
cli
mov
pusha
scas
or
stc
shrl
adc
sub
js
mov
nop
mov
push
jns
es
push
icebp
pop
sbb
adc
loop
xor
repnz
add
lahf
jl
jne
fs
push
push
mov
shlb
negb
sarl
ret
bound
jecxz
dec
cltd
in
mov
inc
ds
scas
jbe
scas
std
pop
xchg
mov
cmc
cmp
fimull
sar
bnd
mov
push
add
imul
pop
mov
mov
xchg
add
lea
mov
cmp
mov
sbb
jbe
dec
cwtl
leave
mov
pop
sbb
jae
leave
xorb
in
and
xor
shlb
loope
test
in
mov
inc
pop
xchg
lds
scas
inc
jae
cmpsl
inc
pop
and
mov
outsl
out
lods
in
push
js
shrb
popf
clc
push
insb
xchg
pusha
data16
pop
inc
push
mov
xchg
stos
dec
sbb
movsl
cli
mov
popf
cltd
xchg
data16
icebp
sbb
pop
inc
scas
or
xlat
inc
xchg
push
pop
mov
and
ret
add
mov
out
or
adc
out
sub
mov
jno
xchg
loopne
movsb
sahf
movsb
xor
inc
mov
xchg
pushf
neg
lret
jnp
or
push
or
adc
mov
mov
push
xchg
movsl
lock
mov
mov
push
inc
push
jo
out
lret
xchg
xor
add
mov
sti
add
mov
cmpsl
aam
sbb
cmp
movsb
xchg
dec
dec
sub
mov
push
fs
aad
pop
dec
addr16
mov
add
or
and
sub
sbb
fwait
xor
sbb
mov
jne
sub
mov
xchg
mov
mov
movsb
or
movsl
sbb
in
into
call
add
cmp
push
xchg
dec
bound
aaa
and
movsl
std
fsubrl
arpl
xor
jnp
cld
call
loop
inc
xlat
sbb
lcall
out
aad
adc
inc
pop
mov
push
push
orl
outsl
xchg
dec
stos
dec
repz
imull
xchg
daa
lock
inc
repnz
pop
push
scas
pop
cli
arpl
ja
xchg
call
das
mov
sub
lret
cli
add
push
mov
shll
stc
mov
pop
push
les
test
xchg
adc
pop
stos
or
dec
mov
stos
mov
leave
fsts
jle
xlat
inc
xchg
pusha
iret
push
popa
push
daa
mov
adc
inc
data16
add
sbb
pmaxsw
push
jns
ja
js
and
jge
dec
pushf
mov
ret
inc
lods
dec
mov
sub
mov
xor
jg
inc
je
push
imul
cmp
mov
cmp
push
js
sbb
gs
shll
push
ljmp
dec
dec
xor
mov
leave
dec
adc
pop
jnp
into
adc
and
outsl
push
add
sub
lcall
mov
ret
imul
sbb
pminub
out
shlb
xchg
jne
bound
pop
jp
dec
aaa
and
jl
subl
imul
mov
std
loopne
es
popa
pop
imul
and
mov
jo
inc
inc
jg
sub
imull
sub
data16
aas
cmp
add
repz
sbbl
dec
int3
test
jge
mov
ljmp
repnz
dec
test
xchg
outsl
jns
mov
mov
icebp
scas
test
ret
test
out
push
adc
mov
in
test
cmp
jno
xor
jle
mov
xor
xchg
sti
pop
insb
rcl
movsb
cld
push
push
int
mov
out
adc
lret
and
cltd
data16
add
movsb
movsl
repnz
cwtl
movsl
jnp
adc
xchg
or
xchg
fistl
ficomps
sbb
cmp
dec
mov
test
inc
xchg
xchg
add
pop
enter
icebp
pop
sbb
jae
jmp
add
xchg
dec
and
or
mov
cmp
pop
mov
jl
mov
sbb
mov
std
ja
repnz
scas
in
stos
mov
fstpt
mov
ljmp
ljmp
or
sub
sub
xor
or
shll
or
mov
out
inc
add
jno
add
daa
mov
decb
cmp
fsubrs
mov
rclb
jo
fldenv
xchg
dec
cmpsl
xlat
mov
push
out
push
pop
dec
sahf
dec
jns
call
insl
dec
outsl
jnp
fisubrl
sub
test
xor
mov
pop
fsts
push
stos
mov
xor
out
or
jo
sub
mov
or
pop
jl
test
lret
jmp
out
mov
nop
xor
cli
xorl
xchg
adcb
clc
sbb
pusha
fcomp
push
mov
leave
stos
dec
hlt
stos
icebp
or
inc
loop
mov
out
cmp
dec
and
mov
sub
push
insl
inc
cmp
repz
jge
ja
mov
fisttps
pushf
adc
sbb
rolb
jle
push
sub
cmp
mov
xchg
stos
adc
rorl
xor
or
jnp
int3
pop
lcall
and
jmp
pop
mov
rorl
sbb
mov
inc
dec
fwait
sbb
out
addr16
or
adc
adc
lea
in
mov
repz
xchg
mov
aaa
pop
xor
stos
rcl
aaa
call
mov
movsl
pushf
aam
repnz
ljmp
mov
je
int3
jne
adc
mov
sub
xchg
push
mov
dec
fidivs
cmpsl
je
adc
jmp
movnti
fcomp
shll
sub
js
std
das
jle
mov
or
cltd
adc
push
stc
pop
sbb
and
daa
out
cmp
out
add
sbb
es
jno
icebp
stos
das
xchg
dec
outsl
ret
pusha
pop
inc
push
test
pop
mov
jb
or
in
les
ret
cmp
pop
push
jl
inc
jecxz
fsub
mov
and
out
cwtl
mov
xor
or
call
jae
dec
ss
xor
mov
sbb
sarl
inc
mov
test
je
cmp
test
mov
push
jnp
shr
daa
adc
addl
scas
pop
cs
xor
stos
out
xorb
jns
sub
sbb
scas
adc
sbb
stos
shl
xchg
imul
pop
movsb
aam
add
int3
repz
sbbl
push
imull
movl
test
jns
ret
push
in
and
inc
mov
ret
rclb
push
int
ret
dec
leave
or
pop
ror
and
sbb
stos
inc
ja
jg
addr16
jl
pop
iret
mov
out
stos
xor
nop
xor
out
jg
sbb
push
and
mov
pushf
mov
push
jnp
push
or
scas
iret
dec
jg
and
or
fwait
jbe
add
xchg
lahf
aas
das
adc
sub
cmpsl
xlat
xchg
dec
daa
push
lea
and
sarb
jno
mov
call
scas
push
cmp
pop
mov
and
mov
dec
add
jo
nop
cmp
add
jns
jnp
mov
popf
pop
xor
test
xor
fisubrl
imul
fisttpll
cmp
hlt
sahf
adc
xchg
dec
std
push
or
push
jmp
mov
or
js
cmp
insb
pop
mov
xchg
aam
xchg
pop
push
dec
dec
es
pop
mov
outsl
mov
sti
mov
push
jb
iret
dec
add
test
jecxz
or
push
dec
sbb
insb
sub
cmp
and
std
cld
push
mov
popf
mov
in
push
scas
and
lea
pop
insb
xchg
aas
jmp
xor
orps
dec
pusha
add
xchg
out
cmp
sarl
adc
jp
roll
aaa
imul
stc
andl
int3
sub
fisttpl
data16
inc
sub
mov
cmp
lea
pop
sbb
pop
and
enter
or
pop
push
dec
mov
jge
repnz
jbe
insl
fldt
rorb
mov
push
pop
call
or
mov
or
rol
lret
jae
fs
sti
mov
dec
aam
sbb
loopne
aaa
in
jnp
repz
iret
leave
lods
fisttpl
cmc
push
xchg
cmc
cli
adc
loope
or
out
loop
cmp
repnz
pop
mov
mov
xor
mov
rcrb
ljmp
xchg
push
out
inc
arpl
inc
push
mov
out
or
in
test
pop
push
int
rorb
fs
mov
or
out
outsb
in
das
pop
add
enter
xchg
sub
mov
cmc
push
mov
dec
add
jae
imul
cmp
mov
mov
stc
sub
nop
mov
xor
test
enter
push
xchg
cwtl
add
inc
sbb
dec
xchg
imul
pop
sahf
ss
xlat
movsl
pushf
inc
pushf
outsl
call
int
inc
xorl
add
dec
inc
mov
fistpl
call
dec
adc
shr
cs
pop
lods
sub
ljmp
sub
scas
jmp
jmp
push
push
or
sub
and
fnsave
dec
or
push
mov
je
test
and
xor
cmc
fs
add
add
push
testl
and
loope
jae
repz
mov
mov
into
xchg
enter
add
data16
mov
ret
add
popa
scas
cld
xchg
pop
pop
push
popa
sti
adc
push
outsl
daa
xlat
dec
out
dec
adc
cmp
sbb
dec
cmp
fcmovne
mov
test
das
lcall
mov
xchg
adc
push
mov
cmp
xchg
es
jo
and
xchg
sti
int
jns
or
xchg
pop
imul
cwtl
out
into
aad
sbb
loope
test
inc
mov
push
outsl
xor
movsb
das
xor
js
aaa
mov
mov
out
lods
xchg
mov
or
add
jnp
push
ret
dec
inc
and
mov
shll
test
syscall
mov
imul
hlt
push
mov
sub
or
mov
aas
xor
aas
adc
adcl
or
nop
dec
fwait
and
xor
insl
repnz
mov
push
and
frstor
or
aas
hlt
cltd
jmp
mov
rorl
adc
daa
mov
je
addr16
jge
push
mov
cmp
pop
or
xor
jo
lret
mov
jns
lret
shrl
xchg
out
mov
dec
pop
cmpb
jne
cmc
adc
lea
sarl
xor
ss
cli
dec
cwtl
jmp
scas
mov
jo
in
jae
vdivsd
xchg
ja
adc
pop
jp
fsubs
add
cmpsl
pop
inc
out
movsb
lock
out
mov
mov
cmpsl
add
jg
push
mov
pop
rclb
stc
imul
cmpsl
mov
cwtl
lret
nop
faddl
pop
xor
inc
sub
std
stc
xor
pusha
lret
jns
dec
jle
pop
or
inc
dec
xor
xor
push
pop
sbb
sbb
adc
inc
dec
push
cwtl
cli
inc
bound
aad
pop
es
adc
clc
dec
and
push
scas
imulb
adc
inc
ret
inc
jmp
dec
mov
mov
popf
ja
xor
push
mov
nop
and
xchg
cli
add
xor
push
fucom
dec
and
push
mov
in
or
shlb
xor
rcll
movsl
push
sbb
mov
cli
jae
movsb
push
sbb
pop
pop
ret
xor
das
in
stos
dec
sbb
in
sub
lds
sbb
inc
pop
repnz
into
push
sbb
or
xor
mov
jle
and
add
xchg
jl
dec
in
aaa
sub
test
mov
outsl
jmp
fwait
lea
cltd
mov
or
lahf
js
roll
into
push
inc
sub
inc
fwait
test
push
loop
aam
mov
test
cmp
push
mov
inc
or
aaa
in
sahf
pushf
mov
stos
rorl
and
jp
mov
xchg
in
mov
sub
mov
xlat
push
lock
movsb
fidivrl
adcl
out
imul
jge
xor
push
jbe
movsb
dec
mov
and
call
daa
mov
clc
add
addr16
sbb
sub
push
adc
push
jg
imul
mov
popa
shrb
or
cmpsl
jl
js
dec
stos
push
jno
inc
push
add
std
ds
dec
jmp
pop
sbb
sub
fdiv
adc
push
aam
inc
ffreep
pop
xchg
dec
xor
inc
stos
jnp
repnz
ret
loope
lock
bswap
out
js
xchg
mov
sbb
das
xor
cmp
out
sbb
inc
xorb
xchg
pop
fmul
adc
repnz
sarb
sbb
orb
sub
scas
mov
sbb
mov
stos
and
mov
aad
adc
leave
or
or
fidivl
xorb
add
add
mov
mov
lock
xchg
pushf
sub
movsl
pop
pop
mov
out
inc
dec
test
mov
into
cmp
movsb
fsubs
cmp
daa
push
inc
sti
in
pop
cld
pop
sbb
daa
movsb
scas
cli
call
xchg
fisubrl
pop
rcr
popa
sbb
fwait
mov
lcall
or
inc
cltd
outsl
inc
sbbb
mov
dec
enter
dec
jbe
loope
roll
addr16
scas
lret
xchg
sub
lret
std
pop
js
cmp
das
push
outsb
cmp
rolb
roll
pusha
cwtl
add
and
xor
inc
jmp
pop
in
cmp
gs
cmp
push
sub
xor
addb
lods
pop
ds
dec
sbb
insl
cmpsb
jle
adc
xchg
mov
push
cmc
rcll
fs
add
jne
or
dec
call
mov
push
lret
movsl
xor
adcb
daa
int
iret
xchg
data16
mov
sarl
and
loopne
cltd
ss
fs
mov
push
cld
sarb
orb
inc
and
mov
push
mov
int
lock
popf
or
jmp
cmp
cli
sbb
sub
or
outsl
pop
dec
jo
shr
mov
lret
or
test
shr
cs
int3
rcrb
mov
xchg
or
push
add
jne
cmp
in
add
es
fsubrp
push
or
test
shll
sbb
imul
lcall
jmp
lds
decl
scas
in
xor
xor
insl
in
aam
xor
bound
inc
pmulhw
into
in
jb
loopne
out
shrb
push
lcall
push
jle
lods
push
std
adc
ret
cmpsb
test
mov
inc
fnstenv
aas
pop
ficomps
subb
jle
icebp
mov
bound
add
pop
lahf
sub
les
adc
outsl
mov
or
orl
arpl
out
cmp
aas
iret
into
ss
pop
lahf
imul
ljmp
test
push
mov
xchg
int
xchg
lahf
push
dec
mov
fistps
dec
xor
sbb
jnp
sub
ljmp
add
mov
cltd
adc
gs
xor
fidivrs
mov
cmp
or
notl
xor
xchg
stc
out
xchg
sbbb
mov
imul
and
push
pop
test
loopne
mov
out
adc
subb
fsubl
xchg
pop
leave
les
cli
lods
ftst
push
push
sub
mov
xlat
inc
inc
lcall
rcrl
xchg
in
imul
loop
sti
gs
lret
lods
pop
jne
xor
mov
jle
into
loopne
or
xchg
ss
icebp
dec
mov
ss
push
xor
cld
xor
mov
push
out
ret
sub
dec
pop
sbb
cmc
add
daa
fistpl
mov
in
rcrl
xor
fistl
mov
ret
mov
mov
pushf
popa
mov
pop
imul
imul
and
mov
call
sub
or
pop
stos
insl
jns
adc
lret
jae
gs
loope
cs
aad
sub
cltd
cmpsl
icebp
mov
or
push
outsl
cwtl
mov
ljmp
sti
xchg
jo
mov
mov
mov
pop
cld
scas
push
xchg
pushw
divb
js
out
and
pop
push
lods
loope
and
add
ret
or
mov
imul
inc
jne
mov
movsb
in
xor
mov
mov
and
pop
lock
stos
sbb
sbb
or
mov
dec
ds
ss
dec
push
cli
test
xchg
out
jmp
mulb
loopne
dec
or
inc
and
xor
inc
or
inc
add
add
push
scas
dec
adc
fidivrl
cwtl
sbb
push
and
xlat
ret
inc
inc
or
push
mov
pop
mov
ret
sti
stos
fdivs
fsubs
pop
inc
imul
adc
push
adc
popa
xor
ss
scas
in
and
rcl
insb
jae
mov
repz
jmp
inc
clc
mov
jmp
and
enter
xchg
repz
pop
adc
fwait
cmpsb
inc
mov
loop
shll
push
jne
ffree
in
rol
insl
lahf
xchg
xor
fisttpl
cltd
outsl
sbb
xor
stc
add
loope
icebp
xchg
jg
lret
aad
jnp
adc
shlb
mov
imull
rcll
and
jl
scas
pop
stc
test
ja
mov
adc
loope
sbb
jp
imul
and
lret
adc
pop
mov
inc
jp
sub
and
ret
aam
dec
stos
add
sbb
scas
and
test
mov
rcr
push
xor
inc
or
jg
lea
mov
insl
jns
inc
test
push
sbb
and
add
shll
sbb
cltd
jae
bswap
dec
sbb
adc
fwait
xchg
jg
jnp
loop
or
out
out
fs
adc
popf
out
pop
out
je
xchg
jecxz
shlb
jg
push
negb
xchg
gs
test
xchg
xor
xchg
or
out
ljmp
mov
xchg
jno
sub
pop
out
sbb
push
push
dec
pop
jg
lods
cld
or
push
lock
push
test
add
sysret
xchg
cwtl
xchg
xchg
xchg
adc
leave
lcall
sub
inc
fsubrp
add
pushf
cli
mov
jle
dec
sub
mov
out
lret
sub
andl
aas
pop
xor
or
cwtl
push
andl
cwtl
aad
jecxz
aam
leave
add
lods
adc
stc
jne
dec
xor
sahf
mov
mov
jno
iret
push
sub
inc
lea
aad
lds
jmp
mov
pop
jg
dec
adc
addb
shrl
xor
js
inc
sub
loopne
jns
stc
js
pop
push
dec
xlat
nop
out
popf
push
popa
or
pop
data16
movsb
push
xchg
push
push
mov
out
lahf
addr16
js
xor
arpl
aad
lcall
test
mov
out
cmp
mov
filds
add
cmc
cmp
popf
cwtl
mov
fcomps
cmp
jnp
dec
mov
scas
pushl
adc
les
mov
xchg
adc
and
sahf
out
or
cmpsb
stc
dec
pop
push
jge
pop
mov
les
fists
cmp
insl
ficompl
mov
lock
cmovno
or
push
mov
jns
dec
push
imull
pop
cmpsb
hlt
andl
das
hlt
movsl
push
sbb
mov
loope
push
xor
lods
hlt
popf
or
mov
dec
mov
sbb
push
cli
sub
jle,pn
popf
in
xor
out
cwtl
enter
mov
jnp
cwtl
decl
cmpsb
inc
fsubrs
sbb
sbb
pusha
popf
inc
xchg
outsb
add
sahf
and
adc
mov
mov
into
and
lcall
mov
jnp
pop
dec
and
adc
mov
dec
push
push
cmp
jg
jl
loope
mov
fwait
rorl
xorb
lret
rorb
ss
mov
scas
sbb
insl
repz
cmc
lods
rcr
mov
xchg
or
sbb
into
insl
lods
hlt
ret
test
pusha
xchg
fiaddl
xchg
cmp
imul
adc
ss
jmp
scas
dec
addr16
mov
and
stc
fs
insb
lcall
xor
jne
js
data16
cltd
or
jbe
aam
push
push
outsb
imul
mov
imul
inc
testl
mov
mov
ds
js
cmpsl
mov
fdivl
xchg
push
fdivl
mov
mov
sbb
fs
xor
add
push
xchg
std
lahf
and
pop
xchg
push
jo
adc
jg
aaa
pop
push
test
adc
es
or
hlt
push
dec
add
orl
mov
in
adc
sbb
jp
xlat
lds
pop
call
dec
jo
cmpsb
sbb
jge
pop
or
mov
add
stc
das
daa
cmp
loope
dec
xchg
xchg
ficoml
ret
fistps
je
ja
gs
or
cld
xchg
sub
jl
push
les
loopne
fwait
adc
popf
icebp
clc
inc
jbe
sub
sahf
lahf
movsb
mov
in
and
lods
aad
les
aam
cmp
xlat
mov
add
add
jb
pop
xchg
jno
stc
repnz
rorl
and
icebp
adc
dec
push
adc
jl
rcll
lock
push
mov
iret
fldenv
jnp
out
xlat
push
mov
pusha
aas
rcrl
arpl
inc
add
scas
and
jnp
sub
sub
and
cmp
push
jecxz
cmp
mov
popf
out
jno
jge
lock
jp
inc
shrl
jecxz
adc
fcmovu
mov
cmpsb
fadds
sub
xchg
rorl
push
xor
mov
push
dec
mov
pop
sub
add
je
in
cmpsb
adc
add
jbe
pop
orb
andl
pop
iret
cmc
cwtl
arpl
stos
jge
mov
es
cli
cld
call
movsb
ja
in
add
jle
repnz
inc
adc
aam
inc
js
into
pop
int3
jp
lcall
hlt
outsl
add
arpl
pop
in
stos
jbe
add
out
push
pop
pop
test
test
cmc
mov
imul
pop
jl
imul
and
ds
push
cmp
popa
rorb
push
iret
je
or
inc
call
jge
mov
adc
gs
popa
pop
inc
fmuls
push
cmpsb
call
dec
mov
dec
loope
int3
add
and
fildll
lds
loope
add
mov
cmp
xor
gs
add
insb
scas
mov
jg
jge
jo
les
cmc
lret
not
jb
js
or
popl
xchg
cmp
jae
jp
fadd
stc
add
sbb
test
ds
sub
mov
cltd
pop
addb
insb
aas
pushf
mov
xor
test
out
pop
in
xchg
push
stos
and
and
push
das
xchg
xchg
ljmp
push
jnp
dec
cmp
pop
jb
lret
sub
add
mov
mov
loope
pushf
mov
and
xlat
test
sahf
xor
jmp
test
and
fs
push
push
mov
test
in
push
mov
adc
mov
or
sub
push
sbb
cmp
mov
andl
ja
cmp
xchg
sbb
mov
cmpsl
fsubrl
es
mov
push
movsl
jnp
mov
sahf
push
arpl
add
mov
insl
mov
pop
scas
sbb
push
mov
pop
out
pop
les
dec
cmp
or
mov
and
aam
test
dec
sub
aas
jno
ss
pop
out
or
lahf
adc
addb
and
test
mov
jbe
in
into
and
push
jne
and
aam
cmp
aas
int
xor
call
iret
lahf
mov
test
cmp
shrb
add
das
imul
insl
sbb
inc
fs
shr
dec
shrl
pop
lods
lock
fidivrl
movsb
lret
testb
movsl
sbb
adc
adc
fimuls
in
idivl
movsb
jp
ret
iret
rclb
daa
daa
pop
adc
mov
in
mov
dec
cli
sbb
mov
and
jb
and
fsubs
test
lods
add
enter
cmp
cmp
ljmp
mov
dec
cmp
inc
add
mov
jl
cmp
cmpsb
inc
int3
sub
pop
adc
dec
lock
fdivr
ret
jo
ljmp
sbb
ret
clc
pop
or
cmp
shlb
aaa
cltd
out
mov
jle
and
push
pop
shlb
pop
mov
pop
adc
dec
jg
inc
jb
pop
pusha
mov
xchg
sbb
jbe
insb
mov
or
sbb
and
jmp
jbe
pop
bound
mov
add
into
and
pop
dec
jmp
and
mov
fstpt
add
andl
movsl
out
shrb
push
cmpsl
je
rolb
je
lret
jns
mov
sbb
push
lahf
test
roll
pop
jecxz
test
int3
mov
fildl
sbbb
lods
push
jl
ds
or
pop
fsubl
adcb
jbe
ljmp
mov
fiaddl
adc
imul
sbb
rcll
sbb
adcl
cwtl
jbe
dec
dec
mov
xor
or
pop
sub
jecxz
es
push
push
inc
rcl
test
mov
jmp
add
dec
scas
cmp
pusha
xor
add
xchg
push
pop
imul
int3
call
mov
mov
push
push
pushf
imul
arpl
lea
sbb
or
outsb
mov
or
dec
adc
int3
std
stos
sbb
xchg
mov
repz
imul
popf
shl
enter
mov
stc
hlt
add
add
or
cwtl
push
enter
icebp
jg
pop
mov
xlat
push
enter
sbb
sub
mov
sbb
jecxz
cmpl
add
sbb
out
stos
imul
sub
sub
cmpsl
push
push
inc
sahf
xchg
add
das
adc
fwait
ss
push
push
push
fists
shl
push
sbb
and
sbb
jecxz
ficompl
loop
add
in
inc
sub
data16
and
lock
aad
jmp
or
jg
dec
iret
add
xchg
pop
out
outsl
add
mov
add
lret
rclb
push
subl
adc
push
dec
leave
mov
push
clc
test
fistpl
mov
es
fists
shlb
addr16
orl
stos
jns
mov
cwtl
sub
inc
hlt
adc
push
fnstenv
dec
popf
daa
pop
mov
sbb
cmp
inc
jge
xchg
leave
add
jmp
fmull
xor
loopne
cmp
repnz
rclb
mov
add
mov
dec
lcall
add
mov
ret
rcll
test
xor
and
outsb
out
adc
leave
mov
lea
pop
sub
lods
dec
and
and
add
add
and
inc
xacquire
and
nop
dec
jle
outsl
jo
cmpsb
fdivl
adc
ljmp
out
sub
or
daa
fs
inc
fndisi(8087
mov
imul
js
xor
push
aad
idivb
stos
out
sub
movsb
fstps
loop
jg
pop
xchg
loop
mov
push
adc
mov
repnz
ja
lods
xchg
leave
out
and
repz
inc
cmp
loopne
inc
mov
and
push
mov
ljmp
jns
mov
dec
rolb
cltd
inc
mov
lods
jns
xchg
mov
add
sbb
sti
mov
push
pop
rcr
rcr
sti
xlat
pop
das
call
call
jecxz
xchg
loope
add
cmp
jmp
cwtl
push
inc
mov
sbb
in
js
push
mull
movb
sub
aaa
std
test
cmpsl
das
sub
pop
xchg
and
cwtl
into
xor
lods
fldl
adc
xchg
iret
nop
cmpps
and
hlt
jns
sub
out
lds
lds
dec
cmp
hlt
dec
cmc
dec
lds
popf
sbb
add
out
insl
jle
mov
xor
and
pop
xchg
push
push
ret
cli
mov
cmp
inc
imul
mov
mov
cltd
movsb
sbb
jg
sbb
mov
lds
mov
sbb
and
pop
sub
and
jb
xchg
push
add
add
sbb
ficoms
xlat
pop
in
in
out
jns
cwtl
pop
jle
nop
xchg
aad
adc
add
enter
or
mov
fidivl
das
mov
inc
mov
or
mov
jle
add
cld
les
cs
sub
mov
es
mov
xchg
out
xchg
mov
lds
test
sbb
or
xor
xor
push
sbb
stos
add
sti
aaa
adc
dec
xor
pop
cld
fldenv
jo
and
or
push
unpcklps
test
push
sbb
es
sub
jge
and
repnz
or
mov
test
sub
in
gs
jbe
call
ds
daa
cmpsl
sbb
or
mov
jg
push
enter
fwait
jl
xor
js
inc
popa
inc
pusha
adc
mov
sub
lret
test
inc
cmp
sbb
insb
pop
jne
sbb
push
outsb
mov
fstpl
arpl
and
push
lret
int
jnp
icebp
rorb
rclb
lret
xchg
adc
mov
sub
aam
xor
mov
push
mov
mov
pop
push
daa
fyl2x
or
lret
arpl
pop
or
xchg
cmc
popa
or
jns
push
inc
iret
nop
test
cmp
xchg
inc
gs
mov
inc
pop
outsb
or
arpl
cmc
outsl
lods
and
push
rcrb
inc
and
inc
mov
xlat
pop
inc
mov
pop
and
xlat
or
imulb
mov
daa
pop
dec
testl
xchg
rcrl
jae
bnd
pop
cs
xor
loope
cmp
or
addl
mov
lret
movsb
std
mov
mov
cmpsl
and
mov
adc
in
jle
xchg
insl
push
pop
iret
pop
cmp
sbb
and
jg
dec
stc
pop
ljmp
sbb
mov
xchg
add
dec
pusha
sub
popa
mov
out
push
popa
inc
xchg
adc
jnp
sub
idivl
add
xchg
pushf
lock
pop
jecxz
test
jb
sub
sbbl
dec
loope
orb
das
gs
or
sub
test
mov
jb
movsb
and
inc
fcoml
add
xlat
mov
repz
push
leave
popf
test
out
mov
mov
sub
adc
xor
pop
pop
mov
cwtl
test
lret
sub
enter
test
ret
push
add
or
mov
cmp
mov
lock
pop
sti
mulb
hlt
sbb
iret
inc
mov
scas
push
add
xor
cmp
mov
scas
push
mov
sahf
sub
cmp
jmp
aaa
cmpb
outsl
in
loopne
or
xor
ss
add
sbb
ds
mov
repz
push
xchg
test
mov
inc
mov
mov
inc
jg
jle
mov
out
aas
sbb
mov
cli
cmp
sti
lds
rcl
dec
jp
push
leave
or
icebp
sbb
pusha
ss
mov
jae
mov
inc
jno
sbb
stos
or
dec
add
jge
repnz
in
subl
loop
pushf
popa
std
cmpsb
or
cmp
stos
jo
jo
mov
aas
xchg
repz
clc
jp
mov
pop
lea
inc
pop
imul
mov
sub
std
popf
mov
fwait
aaa
in
popf
jle
insb
insb
sub
popa
in
and
adc
push
fnstenv
pop
pop
xchg
xlat
mov
clc
adc
mov
fsubs
test
fs
ret
push
inc
jbe
aad
xor
cmp
xor
movsb
mov
and
fbld
sbb
test
movsl
pushf
lds
bound
inc
adc
dec
xor
xchg
fnstcw
movsl
or
out
mov
jns
lock
mov
jo
xchg
nop
hlt
aad
fmull
movsb
out
mov
lea
sub
adc
push
mov
sub
lds
aad
daa
xchg
cmc
pop
and
lahf
mov
stos
enterw
or
mov
jmp
cltd
push
mov
cmpsb
dec
test
loop
rcrl
cmp
arpl
fcom
stc
xor
sbb
sbb
shrl
aad
mov
pop
ret
cmp
stos
stos
cld
push
mov
dec
jb
and
out
push
add
arpl
jb
in
jb
push
add
push
popf
popa
sbb
out
cmp
jnp
mov
fwait
mov
sub
mov
and
pop
sbb
enter
add
pop
aas
mov
ss
sahf
adc
cmp
xchg
inc
and
mov
ds
adc
mov
setle
fdecstp
out
jnp
dec
int
xchg
mov
iret
fldl
push
lret
aas
jmp
pusha
in
std
mov
inc
in
loope
outsl
sub
sbb
aaa
adc
mov
sti
add
jnp
adc
lahf
subl
call
pop
in
pop
aaa
push
fildll
pop
call
addr16
push
jno
lods
xor
push
mov
push
push
test
xchg
fld
ret
inc
pop
leave
dec
out
push
mov
inc
and
test
xchg
push
test
and
inc
inc
jecxz
ja
or
mov
ja
shrb
fsubrp
mov
lods
in
enter
or
xor
sbb
jno
mov
pand
fsubrl
pop
or
adc
jp
fcompp
and
nop
pop
push
dec
frstor
fiadds
mov
jo
and
movsl
lea
jne
cmp
mov
push
inc
movsl
mov
hlt
gs
clc
out
or
push
movsl
icebp
es
test
jle
adc
dec
pop
jge
lret
icebp
sahf
xor
adc
push
hlt
fs
xchg
adcb
dec
jmp
movsl
loope
repnz
lds
pop
push
fisubl
or
sub
pop
imul
call
movsl
mov
pop
xchg
fwait
lret
pop
jecxz
jno
xchg
sub
push
pop
lret
ljmp
mov
inc
cmp
cmc
mov
push
dec
push
adc
mov
pop
cmp
clc
add
xchg
xor
pop
push
movb
mov
mov
in
nop
push
in
cld
inc
pop
shr
cmp
stos
and
popa
push
add
fcoms
push
dec
push
push
aad
leave
out
push
fimull
mov
lret
scas
leave
in
jle
sbb
jbe
popa
push
ret
xchg
fbstp
fsubr
gs
inc
push
cmp
in
sub
inc
clc
loop
or
sub
lds
mov
aaa
repnz
cmp
jb
test
mov
mov
adc
and
and
ret
nop
stos
mov
sub
lret
jmp
pop
sub
repz
and
gs
push
mov
sbb
mov
popa
mov
xchg
imul
scas
and
add
mov
adc
fwait
cld
fwait
ret
push
push
vcvtdq2pd
dec
std
stos
sbb
mov
mov
jbe
gs
jbe
push
pop
das
cmp
pop
jae
and
lahf
subb
inc
das
or
fiadds
adc
push
sahf
lret
push
pop
jne
jns
cld
int3
sub
sbb
rcll
imul
mov
mov
dec
inc
jnp
loop
addr16
mov
dec
aas
mov
ljmp
les
jge
jno
mov
xor
lret
fsts
pop
and
das
mov
mov
pop
movsl
or
enter
mov
stos
aas
xor
stos
push
sbb
sti
inc
push
xor
inc
je
ja
out
dec
xor
inc
mov
inc
out
mov
ss
jb
out
in
roll
rolb
sbb
ret
aas
cwtl
sub
jne
pop
pusha
mov
jno
out
xlat
mov
xchg
pop
xchg
adc
sbb
int3
xchg
or
int
gs
mov
mov
and
out
inc
call
aad
cmp
mov
and
fisttpl
dec
adc
dec
aad
out
xchg
jno
test
roll
sbb
push
hlt
or
cmp
cmc
rcl
mov
push
mov
jns
sahf
arpl
enter
popa
cmc
mul
cmp
rcr
clc
sbb
push
sub
insb
test
movsl
sbb
cmpsl
and
push
push
neg
lret
dec
outsl
scas
push
mov
pop
cwtl
jb
shrl
std
sbb
jmp
and
jbe
mov
mov
mov
repnz
or
push
sahf
jno
mov
push
mov
or
enter
mov
or
jns
sub
or
mov
es
fwait
gs
hlt
adc
mov
add
pop
outsl
cmpsl
mov
mov
mov
adc
or
adc
nop
outsb
jl
leave
mov
push
sub
scas
in
shll
gs
fiadds
sbbb
pop
jmp
mov
inc
xor
or
inc
loope
push
sub
fildl
xchg
or
jnp
mov
pusha
cmp
ss
mov
insb
repnz
push
daa
lcall
mov
sub
mov
les
fistpll
inc
lds
sti
mov
in
fwait
mov
cmpb
mov
sar
and
js
jle
add
fldt
not
mulb
or
bnd
add
shrl
call
ficompl
mov
dec
je
cmp
jecxz
outsb
in
lea
sub
test
test
and
adc
or
mov
xor
es
std
imul
aad
fistpl
or
loop
test
sub
stc
xor
popf
push
mov
or
sub
push
fisttps
and
jmp
push
sub
push
mov
ja
jmp
jno
pop
jns
add
test
pop
sbb
pop
shr
fsubrs
jo
cltd
mov
adcl
mov
push
lods
push
push
cli
adc
testb
mov
and
subb
cmp
mov
sbb
scas
push
pop
xchg
mov
lods
pop
push
add
xlat
push
xchg
sub
fwait
jl
sbb
mov
mov
insb
clc
rcrb
in
cwtl
and
fistpll
or
jae
pushf
pop
push
test
cmpsl
int
imul
imul
and
and
daa
clc
cli
and
cmpsl
xlat
cmp
mov
stc
pop
sahf
adc
cmp
sbb
jmp
xor
xor
ljmp
test
sbb
jbe
in
xchg
scas
pushw
sahf
push
adc
jnp
jnp
incl
and
in
test
pop
pop
cli
push
add
push
jecxz
jae
xor
data16
test
ds
out
cmpsl
push
xchg
loope
jno
sbb
pop
sbb
adcb
jg
enter
inc
push
fsubrs
and
cs
insl
lock
and
mov
push
mov
xor
sub
inc
mov
mov
adc
sbb
xchg
popa
pop
add
sub
mov
sub
idivl
test
sub
std
xchg
mov
cmp
adc
mov
imul
adc
out
cmp
and
xlat
rcrb
or
fimull
cwtl
in
or
js
push
cmpsb
sub
adc
jmp
ja
and
pushf
ret
hlt
das
adc
mov
icebp
jno
mov
js
ds
je
adc
mov
ficoms
stos
adc
pop
cmpsb
je
mov
dec
subl
sub
and
push
enter
dec
stos
cwtl
pop
call
lods
fnop
xchg
or
xchg
xchg
push
loop
mov
pop
pop
hlt
and
movsb
rclb
js
out
fmull
pop
jl
fwait
jecxz
cmp
in
sbb
arpl
scas
pop
rclw
dec
push
cli
arpl
aad
xor
cmp
xor
and
movsl
cmp
fnstsw
cli
dec
jno
or
mov
pop
adc
xor
ret
sahf
xchg
mov
add
sub
test
flds
mov
push
mov
icebp
repnz
int3
or
rorl
or
out
pushf
outsl
jl
or
icebp
imul
int3
cmpb
cmp
adc
inc
stos
and
sbb
ljmp
subb
mov
adc
ret
aad
add
int3
hlt
outsb
mov
insl
inc
enter
sahf
sub
lods
sub
sub
adc
shlb
sbb
insb
lods
out
mov
popf
pop
and
fidivs
inc
jb
cmp
bound
push
mull
fwait
pop
xor
ss
call
movsl
test
dec
xor
and
push
movb
cld
out
mov
mov
cmp
outsl
and
xchg
mov
sbb
aas
mov
out
fwait
in
jb
mov
mov
inc
mov
xchg
lea
jno
dec
fwait
adc
sub
dec
push
lods
jecxz
inc
imul
xchg
lods
cmpsl
lds
xor
and
scas
pop
xlat
dec
mov
sahf
jmp
aas
lods
and
jg
push
push
dec
loopne
inc
xor
mov
cmp
sbb
push
imul
jmp
sbb
xlat
xchg
mov
fisubl
pop
dec
sbb
mov
inc
pop
or
adc
add
ja
cld
add
icebp
inc
ret
xor
sti
ret
inc
mov
sahf
or
or
outsb
xchg
dec
xorl
mov
orb
pop
add
xor
inc
mov
psubsb
sbb
sbb
sbb
fbstp
fldcw
leave
repnz
sbb
test
movsb
dec
dec
pusha
mov
orb
cltd
stc
call
les
mov
js
jo
inc
loope
adc
sahf
pop
mov
or
out
nop
pop
adc
out
sti
inc
jns
xor
add
out
aad
dec
mov
xchg
lret
pushf
dec
push
inc
xorl
push
pop
repz
push
mov
adc
inc
jae
ret
and
dec
arpl
jns
hlt
push
xchg
adc
jge
or
dec
dec
in
int3
add
sbb
mov
or
dec
fnsave
add
movsb
push
sub
inc
mov
addb
clc
lret
ja
sahf
je,pn
inc
daa
dec
int3
fdivp
idivb
and
or
aas
jge
test
jge
mov
faddl
cmp
outsb
adc
jo
jmp
stos
enter
xor
pop
iret
aam
pop
mov
cmp
fwait
jo
xlat
fwait
and
xor
mov
pop
sub
div
xchg
out
or
bound
or
js
add
outsb
cmp
xchg
mov
sbb
adc
and
xor
cmp
jns
jp
ss
movsl
mov
out
xchg
and
mov
mov
push
and
xchg
dec
inc
cmp
cwtl
fcoms
sarb
shr
inc
jnp
out
insb
jmp
rcl
call
ret
fimuls
in
jl
mov
mov
sub
cmc
in
dec
jbe
gs
sahf
sub
push
push
xor
mov
lods
filds
jg
push
pop
cltd
fisttpl
fs
mov
stos
add
aas
fbld
push
push
and
movsl
or
add
insb
mov
pop
pop
xor
lret
adc
aas
fidivrl
sub
or
enter
addr16
mov
leave
movsb
aaa
stos
notb
pop
imul
lock
sub
push
cld
idiv
loopne
aaa
mov
cld
das
sub
pusha
cltd
cbtw
cwtl
mov
leave
hlt
inc
adc
sub
int3
sbb
xor
jae
mov
mov
dec
into
mov
jecxz
scas
enter
lods
out
push
and
das
jle
or
sbb
lock
pop
adc
scas
aaa
cmp
xchg
mov
add
cltd
lods
mov
and
mov
push
push
lock
mov
pminsw
xchg
or
xchg
movl
mov
sub
mov
mov
push
push
int3
movsl
sub
shl
in
jp
test
push
xlat
js
sub
cltd
sbb
inc
sub
inc
push
ret
fwait
outsl
je
jno
and
dec
and
hlt
js
pushf
mov
bnd
jne
xor
add
adc
sub
adc
outsb
cld
and
push
push
mov
shrb
daa
cmp
and
xor
loope
stos
dec
add
ficompl
push
test
ret
and
mov
sub
cmp
enter
enter
xchg
mov
stos
sbb
cmp
pop
gs
out
push
mov
xor
push
fdivl
push
sub
xor
dec
jnp
mov
shr
out
xchg
dec
mov
out
jne
sbb
mov
inc
leave
aad
mov
or
loop
or
out
popa
inc
and
fdivr
jno
mov
xlat
shlb
sbb
pop
jmp
fildll
pop
icebp
inc
dec
jl
out
push
xchg
test
mov
adc
movsl
sub
sbb
push
es
sub
stc
test
mov
mov
mov
or
cmp
push
shll
shlb
sarl
push
jae
outsb
cmp
jg
xchg
dec
rcll
jge
push
sbb
xchg
mov
adc
push
push
cmp
rcll
movsb
imul
sbbb
adc
enter
cmpsl
notl
loop
pusha
and
and
ffreep
push
xor
fsubr
pop
stos
xchg
aad
push
aad
mov
sub
mov
push
int3
cmp
test
cmp
mov
aam
rcll
mov
xlat
out
pushf
pop
in
aam
sub
dec
dec
xor
lret
sub
cs
stc
stos
and
lods
imul
test
insl
in
inc
pop
call
sbb
pushf
cltd
jmp
arpl
inc
pusha
and
fwait
cwtl
sbb
push
in
out
out
jo
sbb
xchg
ficoml
pop
mov
lahf
lahf
aas
adc
mov
xor
std
ja
mov
xchg
enter
aaa
out
imul
push
sbb
bound
out
fs
mov
xchg
aas
lret
call
scas
xlat
sahf
cmp
je
mov
nop
pop
lock
test
push
in
iret
dec
sbb
xchg
mov
pop
call
jo
test
xchg
inc
out
shl
insl
add
aaa
pop
sahf
sub
jg
mov
mov
enter
lock
ret
mov
pop
fcoml
test
scas
out
dec
pushf
int
jbe
out
fidivrs
into
repz
mov
fs
and
xlat
mov
mov
add
aam
jle
fdivr
ret
int
and
outsl
sbb
sub
mov
fstps
pusha
push
leave
and
mov
fidivrs
mov
mov
sbb
aaa
add
lea
sub
enter
mov
adc
nop
daa
dec
mov
pushf
and
mov
mov
xor
insl
jg
xor
cmp
xchg
xor
jecxz
imul
or
les
adc
loop
lock
and
dec
pop
jbe
or
jno
test
into
push
mov
aam
fists
cmp
add
ss
inc
add
xchg
les
in
bound
push
pop
mov
test
vcvtps2dq
and
jns
leave
cmp
dec
repz
ljmp
ds
cld
or
dec
or
sbb
lahf
cmpsb
hlt
fnclex
aad
mov
jge
push
mov
dec
mov
cmc
and
pop
scas
jg
jne
dec
or
add
mov
xor
mov
jb
clc
popa
push
lcall
sbb
inc
fabs
sbb
cs
sub
cmp
out
adc
dec
daa
dec
loope
push
popa
dec
nop
js
loopne
mov
sbb
add
andl
ret
mull
add
pop
mov
sub
test
cwtl
idiv
arpl
mov
fdivl
add
xchg
into
out
pop
dec
lret
cmp
push
mov
sti
lcall
dec
adc
popl
data16
dec
fistpl
pushf
push
inc
push
arpl
jo
imul
pop
stc
xchg
mov
or
sbb
pop
mov
jge
push
dec
jo
pop
dec
addr16
mov
aam
fmuls
add
rorb
std
mov
jo
call
dec
sub
mov
mov
roll
mov
jae
cltd
sub
mov
cld
and
loope
rol
fwait
dec
out
fistpl
es
or
inc
xchg
cmp
ret
inc
aam
fdivs
push
shlb
cmp
jae
adc
pop
dec
outsb
inc
push
movsl
dec
push
cwtl
into
shlb
jp
ljmp
fistpl
js
in
adc
pop
cld
xchg
sbb
mov
aaa
imul
outsl
xor
mov
mov
imulb
repnz
test
mov
push
int
clc
inc
add
xor
adc
add
jbe
sbb
pop
mov
and
and
xor
pushf
int3
sbb
pushf
push
out
aam
jbe
xor
insl
insl
fcomps
ret
pop
lods
push
xchg
out
stos
inc
fcomp
ljmp
xor
mov
fistps
cltd
xor
dec
pop
mov
push
push
adc
and
push
mov
clc
push
jbe
pop
test
push
sub
sbb
scas
inc
in
mov
sti
std
add
push
cmp
inc
jmp
movsb
sbb
dec
int
mov
popa
je
icebp
loopne
adc
popa
add
idivb
in
sbb
inc
mov
dec
mov
jb
jae
jno
lahf
test
cwtl
xchg
lock
inc
fmul
cmpsl
movsl
fldt
dec
mov
inc
mov
and
popf
sbb
push
pop
insb
ffreep
mov
pusha
test
add
mov
aaa
cld
xor
insl
int3
into
test
mov
push
mov
or
int3
or
imul
sub
stc
add
mov
pop
es
pop
pop
hlt
xor
popf
lds
repnz
inc
sub
cmpsl
dec
jl
dec
xchg
mull
dec
sub
popa
push
add
shlb
xchg
lret
mov
jmp
lock
pop
mov
push
stos
inc
shlb
push
push
lahf
dec
sarb
and
ret
inc
jnp
sbb
test
inc
or
aaa
add
cmp
in
andb
push
jne
add
cmp
pop
nop
and
and
mov
into
jbe
aas
mov
sbb
in
dec
mov
lds
push
mov
pusha
sub
inc
hlt
xchg
mov
pop
std
ja
test
sbb
hlt
mov
repnz
mov
je
and
cmc
or
or
out
dec
sbb
mov
adc
sub
paddsw
or
dec
ret
in
pop
aas
mov
add
bnd
adc
sub
cmp
rorb
mov
mov
jnp
ret
mov
pop
sub
sahf
add
xor
ja
dec
addr16
in
dec
pop
in
pop
lods
sub
aad
rcrb
sahf
dec
and
outsl
mov
lret
in
aas
fldt
lcall
adc
scas
cli
aam
mov
pop
fsubl
or
and
fwait
stos
ret
inc
sub
test
add
pop
insl
fisubs
popf
mov
mov
cmpsl
bound
or
inc
inc
jnp
bound
mov
loop
outsl
cwtl
pushf
cltd
sbb
inc
aaa
sbb
sub
or
jno
sub
decb
movsl
into
mov
bound
hlt
jns
pushf
insl
mov
xor
aad
addr16
xchg
adc
push
xchg
popa
test
das
mov
pop
call
dec
popf
pop
xchg
out
sahf
and
out
xor
mov
push
aas
sub
mov
fs
ja
fstp
xchg
mov
sbb
push
std
out
push
mov
push
dec
call
outsb
add
insb
xchg
in
js
cli
cwtl
push
sbb
mov
adc
rol
inc
inc
and
outsl
xchg
or
dec
push
xchg
lahf
pusha
jl
or
jl
mov
cmp
push
out
notl
andl
hlt
int3
fmul
lea
xchg
ja
mov
adc
call
lds
and
push
out
je
add
out
rorl
aam
sub
mov
repz
cmpsb
mov
sbb
mov
cli
lret
ja
test
inc
rol
and
ret
mov
lock
test
pop
mov
add
push
test
fwait
shl
jne
fldl
sahf
data16
mov
adc
dec
jmp
add
inc
add
out
fistpl
and
jg
test
xor
stc
push
xor
in
xchg
and
das
das
nop
inc
test
pop
cmpsl
sub
pop
in
xchg
les
ja
outsl
scas
js
gs
mov
pop
out
ret
flds
sti
scas
repnz
xchg
sbb
sbb
push
call
mov
jp
into
jo
cmp
stos
adc
mov
cmp
sub
lods
cmp
jge
push
lods
and
call
aaa
mov
imul
sbb
mov
jo
aas
xchg
cmp
outsb
mov
ret
cmp
sub
sahf
mov
xor
or
xchg
fldcw
xlat
jbe
int3
xchg
movsl
in
insl
mov
push
rorb
mov
mov
xchg
stc
pushf
and
mov
je
test
scas
or
xchg
or
enter
inc
sbb
lea
scas
add
jb
enter
fimuls
fiadds
adc
inc
lock
xor
mov
jae
out
addr16
xchg
jmp
icebp
sbb
cmp
movsb
mov
mov
cmpsl
lret
add
sbb
mov
nop
sub
aam
jp
cmovs
mov
insl
cmp
aad
pop
mov
inc
aas
scas
mov
inc
xchg
pop
and
jb
push
or
mov
rcl
cmp
out
cmc
xchg
insb
cmpsb
inc
xor
mov
cli
sub
lret
cmp
cs
sub
idivb
push
jno
or
pop
stos
add
sbb
mov
test
mov
test
les
inc
loope
aaa
push
out
jmp
scas
sbb
mov
test
add
xchg
std
cmp
enter
test
clc
inc
aad
mov
push
jge
btr
push
insb
add
ret
xor
mov
dec
or
test
mov
dec
sbb
xchg
push
int
push
xchg
lods
icebp
and
cli
stos
xor
xchg
lds
mov
fisubl
sti
cmp
cmp
std
sbb
insl
lea
test
xchg
or
movsb
xchg
dec
negl
jns
cmpsl
cmp
nop
and
mov
out
adc
das
jne
mov
inc
jl
xchg
aas
pusha
jno
icebp
xchg
lock
clc
lret
ds
xchg
repnz
iret
jg
adc
and
fisttps
andb
xor
xchg
pusha
popa
mov
stos
cld
and
add
mov
dec
insb
mov
dec
add
inc
sub
pop
scas
les
xchg
jge
mov
xchg
inc
push
add
sbb
fisubs
shll
bnd
mov
mov
or
or
mov
and
sub
lods
fdivrl
pop
xor
jmp
jne
enter
popf
sub
adc
repnz
addr16
sbb
outsb
jae
mov
jmp
mov
sub
mov
scas
mov
popf
pop
cmp
lret
push
pop
out
mov
aas
mov
inc
clc
adc
inc
sbb
and
pop
mov
cwtl
jae
push
aas
ljmp
cmpsl
xchg
es
stc
push
sbb
stos
adc
dec
pop
mov
lcall
and
jp
out
mov
cltd
xor
ss
pop
mov
nop
sbb
mov
imul
xchg
les
add
push
and
cs
jb
dec
mov
add
mov
repz
int
add
adc
pushf
sbb
nop
mov
hlt
xchg
cmp
jmp
cmp
and
repz
data16
les
xor
in
pushf
pop
out
mov
lods
insb
jns
fnsave
stos
mov
stc
lcall
test
clc
aas
xor
rclb
push
add
inc
xchg
cld
pop
mov
outsb
mov
sub
push
adc
dec
int
js
xor
push
and
and
cltd
stc
jecxz
xchg
aad
stos
jecxz
popf
jmp
fcmovb
mov
xchg
push
std
jp
rcrl
movsb
aam
out
push
dec
push
mov
sub
add
bound
rorb
into
dec
mov
jo
fidivl
cld
repz
movsb
imul
scas
loop
cs
notb
adc
add
and
lret
movsb
jge
dec
pop
xor
out
mov
xchg
outsb
pop
cmp
nop
dec
cmp
std
ss
mov
adc
ja
call
loopne
mov
divb
ret
inc
shr
sahf
shrl
loopne
inc
repnz
pop
xchg
movsb
sbb
xchg
sub
sbb
addl
cmp
test
lods
adc
push
pop
out
push
xorb
jecxz
adc
rcl
in
in
shr
cmpsb
push
mov
cmp
test
mov
push
pop
daa
pop
mov
mov
pop
mov
add
cmp
xchg
mov
xchg
xor
sbb
incb
mov
stos
xchg
bound
sub
ffreep
pop
fdivs
add
leave
sbb
dec
add
int3
cli
add
xor
inc
jne
jmp
leave
xor
sub
cs
sbb
loopne
int3
test
shl
sbb
out
js
sti
arpl
inc
pop
jae
insl
inc
adcl
cmp
in
pop
jnp
iret
cmpsl
fidivl
fldl2e
sti
sbb
dec
sbb
pusha
and
and
mov
lds
popf
arpl
je
inc
or
leave
lret
adc
test
fdivs
popf
add
sub
cld
fwait
lret
leave
or
leave
add
jb
shl
dec
pop
push
decl
push
cmp
add
mov
fmuls
jmp
es
shll
sbb
dec
xor
nop
mov
repnz
negb
adc
mov
inc
out
push
std
inc
test
inc
mov
mov
xlat
cmp
pop
in
xchg
movsl
loop
and
sarl
jecxz
and
iret
push
pop
mov
mov
adc
aad
xorl
xlat
ljmp
jae
adc
dec
pcmpgtw
leave
aaa
ja
pop
fst
mov
lret
fwait
dec
jo
stos
mov
push
and
aaa
divl
aam
fisubs
insl
rorb
mov
jo
daa
outsl
int
pushf
sub
mov
pop
hlt
mov
xchg
sub
cmpsb
or
bound
mov
and
data16
sub
sbb
out
pop
and
int
fstpl
sub
push
push
jno
das
adc
or
add
mov
mov
xchg
hlt
hlt
pop
je
jle
jns
pop
ret
mov
ds
addr16
insb
ds
jge
sub
mov
pop
fldl
and
int3
lods
push
dec
inc
dec
lahf
fwait
or
sarl
fmull
jbe
jmp
gs
scas
lds
bound
stos
in
loop
xor
ror
movsb
xor
xchg
push
ficomps
pop
push
cmp
lods
dec
mov
adc
mov
fsubrl
dec
jo
push
push
mov
push
or
insb
ja
jb
aam
push
cmp
ds
insb
pop
xchg
stc
or
dec
fadd
loope
sbbb
xchg
dec
sub
rol
bound
outsb
mov
jns
pop
inc
roll
mov
inc
fstpt
test
pop
punpcklbw
lret
jae
inc
into
and
jbe
fnstcw
xchg
sbb
push
inc
or
repz
adc
gs
ljmp
mulb
jbe
push
pop
cmc
scas
shll
mov
inc
out
sahf
xchg
into
shl
dec
cli
gs
xor
xor
mov
add
jnp
mov
pop
mov
mov
jmp
and
mov
aad
adc
pop
js
cmp
clc
adc
push
push
es
andb
and
fsubrl
add
xor
arpl
ficoms
jg
sub
mov
inc
fisubs
jp
inc
test
push
popa
out
cmp
lcall
hlt
add
clc
mov
pop
outsb
fistpll
mov
repz
jmp
fcoml
lods
or
pop
sahf
jns
test
push
arpl
lahf
repz
clc
jge
add
inc
in
lds
pushf
sarb
shrl
cli
divl
aad
adc
push
add
sub
aas
in
push
cmpl
pop
movsl
jo
loop
addr16
mov
fldl
lret
loopne
shrl
jnp
dec
and
xchg
dec
cltd
mov
and
jo
cmp
sbb
xor
add
inc
stos
lret
mov
data16
jl
jmp
pop
mov
mov
mov
leave
sbb
xchg
xchg
sbb
jp
lahf
stos
inc
xor
push
arpl
inc
lods
inc
hlt
inc
push
add
sub
ss
mov
cld
mov
inc
sbb
jnp
jg
popa
mov
enter
test
aad
inc
incb
pop
mov
dec
jp
cli
call
dec
cld
testl
sti
adc
dec
mov
adc
sub
nopl
xor
xor
aas
loop
subl
insl
xor
push
xor
scas
mov
movb
jmp
or
inc
and
xchg
aaa
pop
mov
lea
adc
pop
dec
scas
push
hlt
pop
scas
out
pop
jo
pusha
xor
dec
sahf
dec
or
pop
pusha
out
arpl
setg
push
xchg
mov
fimull
sub
mov
adc
mov
cmp
push
outsb
adc
pop
sbb
cmp
xchg
imul
out
iret
fadds
call
sbb
lds
xor
add
jne
xchg
inc
mov
mov
cmpsb
cmc
mov
jecxz
or
icebp
clc
mov
test
cltd
or
xchg
pop
test
addr16
and
in
cld
xchg
bnd
rorl
andl
mov
rorb
pop
stos
mov
jp
mov
out
xchg
outsb
out
lock
xchg
adc
lret
int3
adc
or
nop
jle
adc
stos
sbb
and
rclb
in
push
mov
test
out
push
or
lcall
movups
cmp
or
mov
loop
cmp
and
push
mov
mov
jo
imul
xor
mov
push
dec
or
push
ljmp
out
jns
rcrb
cli
int3
push
cmp
cmpsl
es
fmul
inc
lds
sbb
pop
jg
and
and
sbb
in
inc
fidivrs
jecxz
out
jge
loope
add
orl
stos
adc
fbld
test
ret
shlb
or
in
cmp
addr16
aaa
repz
push
aad
jp
or
mov
or
lret
fstps
mov
nop
push
mov
xchg
sbb
and
outsb
mov
std
stos
mov
jbe
xor
dec
enter
mov
sbb
sbb
lock
jp
cmp
mov
cmp
lea
ret
push
add
out
ja
pop
hlt
mov
mov
out
mov
in
push
mov
popa
jne
jne
jle
lret
pop
repnz
stos
and
loope
lods
testl
sbbl
jg
mov
pop
jmp
mov
push
push
jnp
popf
enter
loop
or
cs
mov
popf
jno
movsl
pushf
cld
lcall
jo
pop
xor
mov
je
test
sub
jl
aas
rorl
jge
in
shlb
pop
out
jbe
push
sti
jge
pop
cld
sub
add
cmc
add
adcb
pushf
gs
mov
lret
js
not
inc
out
pusha
fnstcw
dec
mov
or
adc
push
testb
ja
les
fucomip
popw
nop
popa
incb
mov
mov
lods
push
sahf
fistps
lahf
mov
mov
jl
xchg
and
mov
inc
sbb
ret
bound
jl
aas
fisttpl
add
aad
jbe
fs
test
cld
cmp
add
imul
sbb
pop
xchg
xchg
out
dec
cmp
out
das
mov
ds
jmp
lods
int3
sub
and
push
pop
xor
dec
testb
xorl
sbb
popa
mov
lahf
fcoms
mov
ds
xchg
pop
sub
add
call
pop
das
push
pop
xchg
test
ret
sub
ljmp
mov
push
xor
les
arpl
gs
mov
imul
sarb
std
sbb
jle
pushf
lock
fisubl
and
mov
int
adc
sub
je
sub
cmp
dec
jb
fcoml
push
xchg
push
inc
lret
iret
or
jl
dec
les
jmp
pop
inc
xchg
lret
mov
dec
pop
iret
repnz
jmp
outsb
outsl
and
das
int
sbb
push
push
xor
rolb
mov
dec
mov
inc
push
or
adc
ds
insl
std
mov
jb
in
test
into
bound
sub
push
jnp
test
cmpsl
ficompl
mov
test
and
in
cmp
pop
mov
sbb
jmp
cmc
leave
int
stc
hlt
mov
jle
inc
out
rcrb
mov
adc
in
jnp
or
dec
or
pop
add
in
faddp
stos
cs
loope
call
jbe
sub
mov
sub
inc
mov
xchg
dec
xchg
fcomps
jo
sub
ret
hlt
xor
jmp
push
xchg
pop
xor
popf
sub
xchg
jp
ds
fcoms
ja
int
dec
inc
leave
roll
mov
pusha
ja
xor
and
sub
sub
dec
lret
pop
or
shl
test
lock
xor
xor
mov
push
jle
js
xchg
sbb
bound
shlb
mov
adcb
shll
addr16
sub
add
jl
stos
push
adc
cmp
inc
repz
pop
dec
xchg
stos
mov
inc
mov
in
adc
jecxz
push
dec
imul
inc
mov
fsub
out
or
mov
daa
adc
rcr
mov
aad
call
repz
jl
mov
xor
or
gs
aad
gs
xor
cmc
mov
sarb
movsb
addl
mov
jnp
xchg
in
hlt
mov
push
inc
call
lea
mov
jno
repz
mov
shrb
push
std
loopne
movsb
je
cmp
xor
push
or
in
out
lcall
xchg
mov
in
test
mov
aam
imul
or
fmull
or
xor
mov
loopne
cs
sarl
jg
divb
adc
aas
mov
cmp
popf
outsb
and
repz
sbb
cmpsl
dec
push
push
cmp
fstpt
loope
or
dec
cmp
and
lock
jle
lock
dec
pop
or
mov
sub
dec
jl
dec
jmp
je
push
push
cmp
pop
inc
cs
mov
stc
or
pop
add
jbe
daa
aaa
ja
adc
xor
shrl
in
mov
mov
mov
into
mov
sbb
out
fildll
and
stos
or
js
call
int3
and
out
inc
neg
cmc
cmp
jno
xor
hlt
and
in
loopne
mov
stos
in
or
aad
clc
popa
dec
xchg
xlat
negb
out
fldenv
sub
pop
mov
addl
outsl
cmpl
mov
int3
out
imul
cmc
cmpl
les
jge
xchg
xchg
mov
and
out
fiadds
xchg
scas
outsb
sub
das
xchg
mov
jne
cmp
pop
popf
lea
xchg
bound
mov
mov
or
nop
lods
out
jae
test
push
xor
sub
jge
push
ss
scas
orb
mov
mov
testb
fucom
js
int
jne
pop
cmpsl
adc
or
int3
ret
mov
aam
or
jmp
pop
push
lods
cmp
shll
inc
lret
inc
fwait
xchg
mov
or
in
fwait
dec
popa
sbb
push
aad
dec
lahf
sbb
in
flds
xchg
sub
push
andb
cli
dec
leave
jb
pop
jp
sahf
mov
inc
or
and
int3
daa
pop
das
pop
or
fcomps
out
cltd
xchg
or
stos
bnd
add
inc
xor
push
aas
cmc
cld
xchg
lret
divb
ret
fcmovbe
mov
pop
std
and
pop
and
sbb
imul
jo
mov
dec
ret
ret
and
pop
pushaw
scas
cmp
jnp
aad
cltd
sub
push
mov
rolb
mov
xor
push
lods
gs
addl
pop
inc
jns
daa
xchg
scas
lcall
cmp
add
and
dec
addb
in
imul
dec
lret
add
cld
hlt
xor
jmp
adc
testb
lea
paddsw
arpl
gs
es
test
icebp
les
xor
fwait
sbb
sahf
pop
mov
push
add
or
repnz
icebp
jne
je
push
stc
dec
lret
shll
popa
pop
fbld
in
imul
mov
cmp
lea
leave
jp
sbb
int
pop
sarb
add
xchg
enter
in
fdivrl
ds
decl
imul
iret
divb
jne
int
jnp
ret
clc
xchg
pop
inc
dec
push
push
pusha
lahf
or
jns
ret
sub
sahf
cmp
push
imul
pop
repnz
aaa
test
xor
scas
push
scas
or
test
cmp
xor
mov
jns
mov
or
mov
fwait
sub
in
cmp
push
mov
out
jmp
dec
add
jle
jbe
push
lea
ds
cmpsl
repnz
mov
inc
cmp
fcoml
lcall
xor
fistpl
rclb
and
sub
mov
sbb
sub
adc
test
sub
gs
jecxz
cli
or
lea
inc
mov
pushf
orb
xchg
xchg
mov
cmp
cmp
pop
jo
dec
ret
mov
inc
lds
shll
mov
mov
fidivrs
out
fsubl
jb
dec
jo
sbb
pop
inc
mov
mov
loope
mov
jecxz
stos
movsb
in
or
add
sahf
pop
stc
test
lret
in
pop
and
loop
fiaddl
dec
cli
in
loopne
outsl
nop
int
insb
pop
cltd
scas
inc
and
sbb
cwtl
rcrl
mov
imul
push
clc
jne
les
cmpsl
sub
dec
push
inc
jle
mov
hlt
icebp
and
push
cmpl
sbb
loope
cmc
int
push
and
das
pop
lcall
outsl
or
cmp
outsl
push
pop
inc
xchg
jmp
andb
dec
fisttpl
into
je
js
lock
cld
movsl
jno
sub
out
popf
insb
sub
rorl
inc
mov
ja
jmp
decl
ret
xchg
push
mov
mov
fimull
nop
jmp
fstp
ror
push
fists
push
push
dec
or
jae
stos
xchg
scas
add
xor
sbb
xchg
int
lea
cltd
dec
sahf
outsb
popf
dec
shll
in
push
repz
or
xchg
xor
adc
mov
int
sbb
xchg
pop
hlt
push
fisttps
lcall
cld
xchg
pushf
push
loopne
andb
movsb
and
cmp
xchg
out
adc
das
icebp
lret
in
sub
mov
das
into
sub
and
jmp
or
jp
sbb
or
lret
jo
jecxz
ljmp
ret
sub
sbb
fcmovne
jnp
push
dec
cli
inc
inc
jno
insl
or
push
inc
cmp
xchg
xchg
mov
repnz
sub
shr
push
or
popa
pusha
mov
lods
int
adc
mov
jbe
and
testb
pop
inc
add
cmp
in
dec
pop
int
clc
mov
xor
je
cmc
jl
xchg
sbb
les
push
and
shlb
rorb
mov
outsb
pop
lahf
std
cmp
mov
fiaddl
fidivrl
pop
cwtl
gs
mov
pop
xchg
dec
and
jno
pop
or
movsb
fs
jl
outsl
hlt
adc
sbbb
pushf
jp
dec
fnsave
cmp
pop
cs
pop
nop
sub
mov
or
xchg
cld
inc
cmpsl
sub
jg
jmp
lods
sahf
out
aam
mov
cmpsl
xchg
sarl
sub
mov
xchg
or
movsb
pushf
xchg
jp
mov
push
push
pushl
mov
xlat
cmc
dec
sub
push
add
xorl
stos
aam
sub
ja
lods
lahf
hlt
dec
std
pop
jno
push
out
insl
pop
pop
mov
js
xchg
pop
inc
scas
push
lret
mov
pop
and
std
and
lret
popf
mov
aaa
test
mull
out
loopne
sti
leave
adc
arpl
cmp
jecxz
aad
nop
inc
sub
cmc
dec
test
adc
stc
xchg
pop
out
sub
sub
xchg
pop
and
xor
les
cwtl
inc
daa
lds
outsb
fldcw
add
mov
stos
mov
mov
xor
imul
pop
xor
push
jb
or
xor
pop
dec
js
mov
cld
lods
mov
and
push
add
inc
xlat
pop
mov
xlat
gs
mov
mov
mov
push
xor
xor
mov
adc
fmulp
cld
loope
mov
inc
dec
sub
or
iret
add
mov
push
adc
les
insb
fcoms
repz
mov
dec
jnp
push
and
adcl
movsl
insb
mov
xchg
pop
inc
push
loop
sbb
icebp
adcl
push
or
jns
ja
scas
call
or
jg
cwtl
cmp
cmp
cmp
pop
lret
sbb
inc
adcl
outsb
xchg
mov
add
mov
dec
in
repz
jp
dec
js
test
push
pop
fsts
sahf
pop
or
pop
dec
repz
imul
inc
loope
scas
sbbb
clc
loop
dec
scas
or
int
leave
xor
dec
jne
cmp
fwait
loopne
testl
jg
lea
add
pop
call
adc
pop
xor
mov
xor
aaa
sbb
repz
testl
dec
fldcw
rorl
mov
out
push
push
gs
mov
adc
xorb
mov
cmp
test
xchg
jns
jmp
pop
stos
jbe
inc
push
les
daa
rsqrtps
sbb
jg
xchg
jp
inc
push
lea
jne
lcall
adc
or
or
imul
cmp
xchg
clc
jno
cmp
in
cwtl
outsb
std
lods
lahf
dec
dec
adc
xchg
add
int3
test
stos
frstor
dec
cmp
mov
rcrb
xchg
adc
addr16
scas
out
xor
add
sub
push
mov
jmp
jl
sub
push
add
dec
sbb
add
daa
mov
movsb
fildll
adc
rcl
call
jp
cmp
insl
adc
cwtl
pop
nopl
pushf
or
pop
std
addr16
jae
xchg
dec
push
xor
adc
ret
pop
or
arpl
dec
lea
pop
cmp
xor
or
mov
sarl
and
push
pop
dec
pop
insb
orb
jg
dec
and
sub
inc
int
jg
movsb
mov
mov
daa
int
cmp
pop
imul
add
mov
stc
cmp
lret
cwtl
jl
pushf
rclb
sbb
les
stos
push
fistps
aad
loope
sub
xchg
and
lock
sbb
imul
outsb
mov
test
inc
and
in
sub
cmp
push
push
in
mov
sbb
in
pop
xor
dec
andl
mov
mov
in
dec
pop
addl
repnz
pop
inc
stos
lock
lea
es
call
mov
lcall
or
cmp
add
outsb
dec
push
xor
fs
pop
stos
in
repnz
sub
ficompl
xchg
push
into
push
push
push
push
dec
xor
outsb
dec
daa
dec
xchg
mov
xlat
or
lret
sarl
nop
cli
fwait
and
pop
mov
sbb
data16
in
sbb
cld
cltd
rcr
adc
out
mov
add
popf
fistpll
and
cmp
mov
push
or
fdiv
das
cld
int3
mov
mov
push
or
bound
mov
adc
jl
mov
or
sti
xor
cltd
dec
test
xchg
dec
push
enter
bound
cwtl
out
imul
pop
xlat
push
adc
mov
dec
jle
jp
lock
imul
xor
mov
test
mov
mov
jo
and
xlat
bound
fs
in
cmpsb
aas
imul
xchg
int
outsl
or
bnd
mov
lcall
push
jne
scas
ljmp
repz
stos
push
add
mov
aaa
shl
lret
cs
test
mov
js
mov
mov
in
mov
ret
jp
add
push
or
push
sub
xchg
in
bound
mov
mov
cmp
bound
lahf
cmp
movsb
xor
sub
xorb
xchg
dec
pop
loope
aaa
lods
ja
repz
sub
or
xor
fisttpll
jl
inc
cmpb
ds
dec
mov
jo
pop
sahf
sbb
sbb
cmpsl
pushf
pop
into
add
out
out
sub
adc
test
inc
aad
hlt
lahf
mov
cmp
or
mov
jae
fdivp
in
or
push
xchg
pop
jmp
jae
decl
dec
mov
sbb
xor
fdivr
je
xchg
sbb
add
cmp
test
cmp
scas
mov
orl
xchg
repnz
push
pop
loop
jp
and
mov
loop
mov
pop
mov
call
push
cltd
xchg
repnz
cmpsl
stc
jecxz
and
jbe
dec
je
fldt
and
notl
mov
aad
das
pop
mov
pop
sub
xchg
cmc
sub
sub
and
shll
mov
jae
into
xor
sbb
jecxz
add
arpl
es
dec
dec
and
pop
mov
shrb
add
push
mov
jl
data16
mov
push
out
push
ficompl
pop
mov
scas
push
test
scas
jae
outsl
inc
shll
dec
xchg
and
pop
and
push
and
pop
shlb
sub
cld
xchg
jbe
push
dec
push
jbe
sbb
fdivl
sub
addb
aaa
out
pop
cmc
mov
jl
pusha
mov
jge
or
mov
int
mov
clc
test
out
cmovno
sbb
outsb
fidivl
lret
mov
repnz
jp
sbb
pop
nop
pop
jo
mov
sbb
iret
rclb
jg
test
pop
bound
dec
xchg
dec
and
outsl
mov
mov
xor
shr
mov
inc
fistpl
jle
inc
adc
ss
shl
mov
stos
dec
fcomi
icebp
ds
les
jmp
mov
sbb
mov
mull
adc
mov
icebp
jg
xchg
int
inc
sbb
mov
out
fmull
cmpsl
xlat
push
pushf
xor
mov
imul
movsb
or
mov
loopne
sbb
cmp
adc
inc
repz
xor
popf
or
jnp
aad
test
or
rcrb
movsl
push
mov
mov
clc
lods
mov
xchg
jae
pop
jns
mov
cli
rcll
jmp
test
lret
jae
fmul
out
mov
sti
sbb
insl
pop
jo
add
xchg
xor
push
xchg
cmc
mov
call
out
decl
clc
pop
jb
daa
enter
cli
lret
add
frstor
ss
int3
mov
mov
loope
shlb
sub
imul
jl
mov
jecxz
aad
mov
arpl
data16
mov
pusha
sbb
sub
inc
sbb
dec
aaa
call
add
jo
pop
xchg
dec
loope
mov
loope
jo
clc
xchg
mov
mov
out
sbb
add
fadd
push
sbb
cwtl
push
jns
jno
jmp
cmp
push
loop
mov
push
ret
fisttpl
pop
jae
xchg
sarb
popa
out
fs
inc
loope
test
in
pop
in
cli
push
adc
mov
adc
ljmp
aas
pop
test
lret
xchg
jp
aas
or
pushf
sbb
ret
pop
clc
rcl
test
pop
xor
push
jmp
repnz
imul
lea
lret
stc
xchg
xchg
arpl
push
mov
mov
jle
loope
add
outsl
in
pop
pop
imul
push
ret
shlb
stos
outsb
mov
cmpsb
mov
testl
shll
popf
movsb
movsb
jne
out
ja
test
adc
lcall
sahf
in
add
mov
adc
out
cmp
testl
pop
loop
cmc
sub
sbb
ret
pop
or
fimuls
xchg
cltd
sbb
jl
inc
lods
mov
ja
mov
out
mov
xchg
in
pop
lea
jnp
push
enter
das
jmp
loope
mov
shrl
xchg
stos
mov
cmc
bound
xchg
rorb
cmp
pop
imul
mov
fiadds
stos
test
inc
sbb
sbbl
push
sbb
jns
rcr
nop
pop
negl
cs
js
in
jl
lret
scas
push
lea
fidivs
mov
mov
test
test
out
fisubrs
add
or
aaa
add
mov
subl
pop
mov
lcall
cld
dec
mov
mov
or
push
mov
add
inc
push
fcoml
aad
gs
mov
gs
jo
je
sarb
out
mov
pop
fcmovnb
fistpl
cs
mov
cs
loope
push
movsl
xchg
inc
mov
xor
xor
negb
ljmp
pop
adc
sub
lock
cs
sbb
leave
ljmp
mov
xor
test
dec
icebp
adc
loopne
pop
xor
clc
push
jnp
or
mov
das
pushf
sbb
push
loope
pop
loop
xor
or
call
add
and
test
jbe
add
mov
fstpt
divl
xchg
mov
mov
cmp
mov
popa
ja
cmpsl
std
jo
rol
sub
mov
pop
adc
cmpsb
jmp
daa
ret
repz
adc
aad
pop
add
sub
fistl
push
add
outsb
or
adc
cmp
mov
cmp
add
and
nop
outsb
jb
pop
mov
sbb
jnp
es
inc
orl
add
pop
sbb
test
fadds
into
pop
sbb
pop
mov
shll
adc
mov
addl
shl
int3
ja
dec
pop
pop
jo
cmpsl
inc
test
mov
pushf
mov
inc
addr16
daa
dec
cmp
cmc
xchg
and
sbb
jbe
mov
aam
movsl
add
hlt
loopne
popf
adc
xchg
cmc
out
sub
jbe
adc
fcoml
dec
mov
stos
sub
shrl
adc
inc
xchg
fcoms
and
sub
fldenv
jns
mov
dec
test
pop
imul
lret
push
test
xchg
fimull
and
cs
cmpsb
hlt
push
jge
sub
rcll
shrb
xchg
and
mov
sbb
int3
imul
mov
data16
sbb
or
mov
lcall
jg
dec
add
sub
sbb
jno
testb
adc
sbb
jl
pop
out
cmp
lds
or
dec
movsb
insl
adc
mov
inc
mov
in
addb
leave
mov
add
sbb
ret
jnp
repz
push
dec
sbb
js
or
mov
sbb
inc
ret
adc
call
divb
xor
das
daa
sbb
push
ljmp
xor
fmul
pop
adc
jae
inc
aaa
stc
test
cmp
pop
ljmp
pop
jne
sbb
in
jae
adc
mov
pop
in
inc
pop
xor
dec
decl
adc
mov
and
add
dec
gs
test
jmp
nop
push
cmp
aad
pusha
cmp
inc
xchg
out
subl
sub
js
add
add
mov
mov
push
test
cmp
div
call
xor
outsb
push
mov
cmp
push
inc
arpl
mov
lcall
pop
mov
sub
lock
leave
mov
shrb
xchg
xchg
sub
push
cmp
mov
fidivrs
ficomps
pop
repz
adc
xchg
add
das
adc
jge
xlat
nop
xor
cmpb
ss
cmp
ret
sbbb
push
push
add
cltd
mov
popf
push
popf
stc
dec
lahf
jecxz
ljmp
pop
adc
pop
add
outsl
xor
inc
xchg
pusha
shll
sbb
lahf
jle
shr
mov
rcrb
cmpsb
inc
push
push
xchg
into
sbb
push
cmpl
es
rorl
int3
ja
dec
loop
aad
inc
fnsave
sub
enter
sub
xchg
fs
mov
jne
fnstsw
mov
test
mov
out
repnz
lahf
cwtl
xchg
inc
mov
shr
pop
add
jecxz
and
outsb
in
rolb
mov
scas
mov
fnsave
jbe
aad
pop
and
mov
enter
push
sub
xchg
mov
mov
dec
xchg
daa
rorb
sub
scas
push
xor
pop
mov
or
hlt
add
repz
ret
out
pop
or
imul
mov
stc
movlps
loope
cli
loope
movsl
subl
sbb
or
inc
or
test
mov
lods
inc
mov
mov
push
or
mov
xchg
dec
aaa
pop
mov
cmp
sub
scas
xchg
mov
sub
fld
jmp
cmp
jecxz
adc
shr
mov
mov
pusha
ljmp
arpl
scas
mov
sbb
shrl
pop
lret
jmp
call
or
push
sbb
pop
gs
shr
data16
lds
aaa
jmp
test
add
aam
jbe
jno
xor
jnp
mov
adc
scas
pop
dec
fucomp
int3
or
cmp
jns
gs
movsb
addr16
mov
push
cmpsl
lea
mov
dec
cmc
je
nop
push
jb
or
add
testb
xchg
and
in
sbb
and
or
cmp
lds
test
in
mov
mov
repz
xor
outsb
cmp
fcos
mov
cmp
sbb
push
pop
decl
in
imul
rcrl
sbb
mov
cli
jle
jae
push
pop
aas
popf
stc
jne
test
sarl
fs
imul
xor
call
lock
jle
popf
cmp
lods
mov
sbb
andb
mov
pop
out
das
pushf
jno
mov
pushf
xor
ficoms
mov
sbb
mov
mov
lahf
push
mov
push
adc
fadds
insl
popf
mov
xor
sub
mov
and
and
enter
call
jmp
jo
hlt
enter
sub
xchg
cmp
cmpsl
xlat
orb
sub
icebp
cmp
jae
pop
shll
repnz
loop
or
push
cwtl
push
push
mov
scas
nop
pop
mov
test
xchg
sub
aaa
imul
and
das
cltd
add
scas
jno
mov
push
lods
sbb
add
cmpl
fildll
cmpsl
lods
movsb
sub
mov
fistpl
test
arpl
cmp
sbb
stos
mov
data16
mov
jmp
adcl
daa
mov
adc
imull
mov
mov
mov
out
rclb
movl
push
fldenv
sub
xlat
jo
mov
lret
jle
js
ret
cmp
jb
pop
imul
ret
inc
inc
jns
aam
dec
in
mov
jmp
movsl
add
mov
scas
jmp
sbb
and
cmpsl
mov
add
in
cmp
fs
rcrb
cli
jne
shr
mov
fldt
mov
in
pop
pop
jl
and
addr16
mov
lcall
dec
sbbl
pop
stc
push
in
or
mov
and
push
dec
mull
dec
lds
push
in
pop
push
in
loope
incb
sbb
gs
lods
mov
dec
ljmp
add
push
xor
mov
out
mov
xchg
icebp
scas
test
dec
std
cli
in
negl
rcrb
lahf
lahf
mov
jo
mov
inc
or
mov
test
push
outsb
mov
outsl
push
ds
add
jp
mov
jge
cmp
jp
mov
scas
xchg
ror
in
xorb
nop
inc
shlb
jg
out
dec
push
movsl
je
aas
fwait
aas
hlt
push
pop
lods
flds
test
pop
xchg
sahf
jge
inc
inc
rol
test
inc
mov
xchg
mov
add
cmp
push
jne
lret
adc
push
mov
lret
pop
adc
clc
sbb
out
fs
sub
movsb
fildll
xchg
adc
sarb
adc
test
lods
cld
mov
sub
adcl
sbb
je
cmc
mov
jne
ss
lcall
icebp
cwtl
repz
sahf
mov
fnsave
loope
test
int3
imul
and
in
outsb
outsb
or
mov
jmp
pop
jmp
test
fidivrs
mov
fcoml
testb
or
aaa
mov
iret
and
aas
mov
stc
or
push
mov
jne
or
jge
jnp
jmp
test
jns
jg
or
push
dec
repnz
fcmovu
lods
scas
jbe
sbb
xor
mov
pop
rolb
loope
push
push
inc
ljmp
dec
pop
add
into
lret
rclb
or
inc
sahf
loope
fs
test
cmp
repz
sub
cmp
shl
xorl
scas
into
das
xchg
mov
or
js
add
nop
add
das
pop
adc
jp
sub
inc
movsl
inc
cmpsb
out
nop
jbe
lds
adc
push
add
movsl
in
mov
mov
mov
mov
xor
push
or
and
cltd
ja
sti
cmp
or
repz
testb
mov
cmpb
jne
adc
cmpsb
nop
push
aad
mov
test
rcl
or
leave
clc
mov
data16
xor
pop
cwtl
jne
add
lcall
enter
mov
sbb
xchg
scas
pop
mov
movsb
sti
out
mov
adc
xor
bound
shrl
loopne,pt
cmp
shl
fsubrl
setbe
clc
data16
out
scas
aam
scas
je
lock
xor
int
mov
dec
arpl
std
mov
cmc
or
lock
ljmp
xchg
insl
xor
pop
iret
mov
xchg
cs
movsl
jg
pop
mov
scas
dec
xchg
shll
or
push
xor
rorb
fisubrl
cmp
cvtps2pi
and
into
js
sbb
inc
jnp
mov
dec
in
or
inc
or
sbb
jl
out
lock
inc
sub
cltd
in
dec
push
cld
stc
mov
lret
je
xlat
jae
aaa
mov
pop
push
pop
ljmp
jo
jmp
xlat
jle
out
jmp
arpl
sub
nop
mov
ss
lods
jbe
lret
sti
cmp
fisubrl
sbb
mov
gs
insl
imul
aad
cld
sub
test
sbb
jmp
mov
movsl
lcall
or
iret
daa
adc
into
rcrl
and
cmp
sub
xor
sub
lea
cltd
jne
inc
mov
testl
push
push
xchg
adc
pop
mov
dec
cmp
xchg
jae
or
xchg
or
in
xor
test
add
dec
sbb
inc
jnp
and
and
sbb
movsl
jp
adc
xchg
lea
movsb
xlat
lret
sub
cmp
sbb
cltd
cltd
popa
addb
dec
insb
push
jbe
pop
dec
ds
or
in
sahf
imulb
iret
sarb
jne
mov
outsl
insb
stc
popf
jb
adc
aam
fidivrl
rorb
inc
xchg
hlt
mov
fstps
dec
and
shrl
or
decb
negb
dec
jae
mov
pmullw
mov
and
inc
mov
pop
mov
incl
dec
leave
pop
pop
ljmp
push
cmc
dec
mov
loope
mov
inc
pop
fs
das
outsb
aaa
xor
stc
lods
sahf
js
or
pop
daa
leave
andl
mov
cld
in
lea
iret
sbb
fwait
add
inc
add
movsb
shrl
movsb
sub
sbb
xor
xchg
mov
lea
stos
pop
je
cmp
mov
gs
fyl2x
in
add
je
loop
mov
lods
or
add
xchg
inc
gs
data16
inc
cmc
test
ss
or
in
xchg
icebp
adc
add
pusha
sti
dec
push
pop
into
mov
movsb
xor
xlat
pop
add
lahf
les
pop
cli
lods
mov
xchg
insb
push
sbb
stos
push
aaa
rcrl
fcoml
stos
jg
fwait
xchg
popa
pop
imul
sbb
std
cli
out
dec
cs
cmp
push
pop
adcb
xor
enter
add
cltd
jns
jns
sarb
repnz
xchg
dec
pop
lea
mov
jp
jg
test
lcall
out
jge
insl
insl
cmp
lea
xor
cmp
movsb
sbb
popf
sar
shl
ret
testb
lea
sti
popf
cmp
mov
loop
imul
movsb
dec
mov
in
add
cld
mov
jnp
loopne
mov
fdivrl
movsl
pop
mov
or
movsl
push
imul
adc
push
xchg
dec
push
shlb
aad
mov
push
mov
or
ficomps
sub
call
inc
cli
push
in
or
aam
adc
ret
call
scas
popa
mov
shl
in
adc
mov
mov
roll
mov
mov
imul
xor
push
sbb
fsubrl
or
lods
inc
enter
repz
add
ss
mov
xchg
daa
icebp
and
fldenv
aam
xorl
add
mov
inc
xor
dec
jge
jb
jns
jae
cmp
addr16
xor
pop
pop
pop
aad
shl
scas
pop
dec
pop
push
jmp
in
sub
loop
test
adc
xchg
stc
dec
jno
jns
xchg
xor
iret
xor
mov
pop
adc
jno
xor
cmpl
mov
adc
imul
sub
fisttpll
mov
lea
adc
icebp
sub
sbb
insb
and
ljmp
push
pusha
insl
sub
lahf
out
sub
pop
mov
call
mov
push
sarl
adc
push
add
or
jmp
xchg
mov
cmp
negl
mov
sbb
cli
xor
cmp
jg
dec
cmpb
rol
push
in
mov
test
popa
cs
aaa
scas
es
jg
in
ss
clc
jle
std
cmp
gs
popf
pop
ja
lret
test
push
movsl
mov
inc
mov
outsl
inc
fwait
rolb
xchg
lods
jg
pop
in
test
xor
jg
shrl
or
pop
xchg
pop
cmp
dec
sahf
clc
icebp
cltd
dec
repz
mov
mov
cs
lcall
stos
pop
mov
insb
aaa
jbe
jno
pop
mov
pop
test
insb
mov
rorl
adc
and
mov
js
add
jae
js
mov
dec
jle
out
push
cmpsb
lret
xor
pusha
shrl
test
inc
outsb
mov
pusha
and
fmuls
call
mov
push
cmp
jle
negb
mov
cmp
lahf
xor
inc
sahf
jbe
jg
loopne
popf
cli
inc
add
push
icebp
mov
das
or
cwtl
dec
sbb
dec
push
mov
xchg
jbe
jg
jmp
mov
cmp
and
mov
iret
int3
rorl
inc
mov
rorb
sub
sbb
out
sub
adc
xchg
mov
imul
adc
cmp
enter
cmc
popf
or
push
in
pop
leave
cmp
fdivr
lret
lret
fisubrl
lret
shrb
mov
dec
ss
sahf
pop
pop
out
sbb
addr16
mov
lcall
inc
in
add
xchg
out
gs
stos
sub
push
pop
dec
xchg
js
cwtl
mov
or
pop
dec
push
sub
adc
out
push
shrl
jns
fmuls
push
test
cltd
xchg
aaa
and
outsb
or
aam
and
sbb
pop
and
aas
aam
xchg
jne
cmp
or
dec
sarl
xchg
adc
jne
dec
lret
push
shl
int3
dec
stos
pop
inc
pop
mov
mov
xchg
ja
xlat
inc
sbb
fucomp
mov
xchg
xor
push
enter
sarb
lretw
pop
lea
xor
mov
rcrb
add
jg
xor
mov
mov
xchg
mov
movl
xor
outsl
out
jp
iret
std
adcl
cwtl
mov
pop
mov
adc
mov
add
xchg
jg
lcall
pop
arpl
cmp
nop
scas
or
jcxz
dec
jmp
mov
scas
js
mov
ret
mov
cmp
sbb
lret
dec
mov
test
outsb
mov
pop
nop
into
and
les
xchg
jp
xor
sar
frstor
stos
out
lret
sub
arpl
mov
icebp
cmpl
fiadds
dec
push
jns
stos
outsl
push
or
and
cmp
out
or
imul
ficoms
jae
cmp
adc
bound
cmp
cmpsl
push
aaa
cmp
pop
or
out
mov
cwtl
insb
adc
jl
scas
cltd
adc
mov
adc
jle
outsl
stos
fs
scas
adc
aam
sub
mov
divb
shl
cmp
add
outsl
xlat
xor
adc
adc
iret
inc
sub
loop
cli
add
adc
sub
sbb
mov
pop
scas
pusha
jg
push
je
fsubl
jmp
insl
or
mov
push
in
adc
push
push
scas
pop
xor
or
cmp
out
add
daa
lahf
loope
cltd
lock
xor
push
mov
ret
cmc
mov
dec
dec
imul
in
sub
aad
or
test
jg,pt
dec
loope
mov
jp
leave
sti
stos
pop
repz
or
mov
jb
mov
pop
sub
fstp
push
in
add
mov
clc
fisubs
stc
dec
cltd
shlb
mov
mov
cmp
pushl
test
jle
lahf
aaa
dec
or
adc
cmp
sbb
das
lahf
insb
jb
cwtl
xlat
sub
and
adc
jecxz
and
inc
movsb
pop
xchg
mov
fisttpll
out
xor
movsl
and
int
or
cmp
add
adc
movsl
pop
push
test
icebp
cli
notb
pop
adc
mov
dec
in
pusha
push
lea
push
inc
or
loopne
xchg
cltd
inc
imul
adc
iret
outsl
jecxz
adc
ja
inc
fidivrs
rorb
mov
scas
imul
shrb
dec
and
xchg
push
in
stos
int
popf
push
lds
dec
push
nop
mov
les
out
mov
test
arpl
rcl
mov
sub
sub
loop,pn
push
jae
sub
cmp
out
jb
pop
push
sbb
pop
adc
inc
fnstcw
cmp
fs
add
pop
cld
push
jo
push
ror
jmp
repnz
jno
aaa
or
in
mov
pusha
je
jae
xchg
adc
mov
xchg
mov
nop
ds
xor
xchg
nop
mov
push
pop
imul
xor
and
and
lods
push
mov
sti
inc
lret
lock
jecxz
jp
push
movsb
decb
jae
xor
int3
xlat
adc
sbb
adc
and
mov
out
inc
lret
aas
xchg
dec
sahf
cltd
popa
js
out
jg
std
cmpsb
inc
ds
pop
das
gs
mov
mov
sub
ja
arpl
sub
ficoms
mov
xor
xchg
lret
push
dec
cmp
mov
mov
push
and
imul
pop
inc
daa
leave
sahf
push
pop
sbb
and
or
lret
adc
clc
lcall
cmc
push
test
pop
cld
mov
lods
mov
dec
clc
or
mov
int
jno
push
and
xchg
mov
sbb
dec
xor
mov
jns
inc
fwait
gs
dec
mov
scas
xchg
dec
lock
in
fnstenv
pop
xchg
lahf
jl
jmp
add
mov
outsb
push
sub
mov
dec
jno
popf
in
sbb
dec
das
and
sbb
out
fisubs
aam
lahf
xchg
jecxz
lcall
lahf
dec
sub
paddsw
test
gs
sbb
push
fcomps
push
insl
cmp
xor
mov
hlt
inc
scas
dec
adc
out
pop
outsb
xchg
push
stos
arpl
in
ds
jnp
xor
add
jg
mov
nop
pop
fistpl
hlt
or
fisttps
repnz
mov
sbb
dec
cli
cmpsb
iret
sahf
loopne
xchg
scas
js
xor
cmpxchg8b
fcmovnb
pushf
cld
ja
cli
call
xchg
fimull
test
in
xor
clc
lods
cltd
or
inc
jmp
adc
push
nop
inc
inc
pop
popa
or
aam
xchg
push
test
imul
jae
call
dec
dec
cld
mov
iret
cmp
inc
dec
jbe
ljmp
jno
pop
adc
pop
lock
mov
jnp
sahf
sbb
shlb
out
clc
mov
xchg
inc
xchg
sbb
call
sbb
jo
inc
sub
mov
jl
mov
xchg
or
push
mov
jbe
mov
aam
ja
sub
mov
mov
test
push
lods
in
jmp
add
imul
and
mov
xchg
arpl
jns
mov
inc
fldenv
into
ret
add
cmpsb
xor
sbb
cmp
scas
cmp
addr16
fs
inc
stos
aad
outsl
dec
adc
jne
jg
cwtl
ret
inc
jmp
xor
pop
pop
xor
mov
push
jb
inc
and
ficompl
and
std
xchg
push
dec
or
fcompl
inc
mov
dec
add
pop
inc
int
inc
mov
jnp
mov
jg
sub
pop
enter
push
sub
jg
pop
mov
jns
cmpsb
pop
icebp
ja
enter
jae
jo
jmp
rcrb
mov
and
dec
cmp
mov
lret
mov
pop
addr16
add
insl
sbb
push
test
and
popf
xchg
mov
out
jo
push
daa
xorps
mov
clc
data16
sub
and
call
pop
nop
imul
cli
outsb
cltd
mov
inc
or
xchg
mov
xchg
cmp
cmp
lods
cmp
jp
mov
aas
leave
lea
stc
add
rolb
and
or
lea
inc
cli
icebp
stos
xchg
and
lahf
mov
divb
fcmovnu
movsl
mov
lret
inc
mov
push
dec
loop
inc
mov
sbb
hlt
mov
call
jo
sbb
push
dec
pop
mov
add
xchg
stos
mov
lcall
enter
xor
pop
test
sbb
mov
dec
pop
mov
xlat
cli
bound
stos
dec
push
mov
rcrl
mov
enter
out
cld
test
fcomip
popa
cli
xor
mov
popa
dec
mov
cmc
ljmp
adc
push
mov
mov
cwtl
mov
stos
cli
in
inc
stc
loopne
aad
ljmp
fsubrs
out
cli
fdivl
pop
mul
hlt
loope
icebp
xor
sub
cmp
and
hlt
data16
hlt
xor
sub
jae
sarl
pop
fwait
mov
mov
insl
inc
xor
out
xorl
push
mov
aas
call
add
adc
mov
xor
pop
xchg
xchg
daa
out
mov
enter
negl
push
push
dec
cwtl
dec
popf
aas
dec
mov
mov
xchg
imul
mov
js
repz
or
xchg
ret
inc
stos
adc
sbb
fcoml
in
repz
jg
out
lea
mov
xor
dec
rorb
sbb
cmp
push
out
adc
aas
fnsave
imul
pop
imul
lcall
fsts
dec
pop
out
mov
mov
mov
mov
decl
xchg
pop
test
jb
push
pop
int
inc
dec
push
inc
adc
and
jecxz
push
add
jb
dec
add
xor
or
es
mov
add
add
and
jns
xlat
outsb
add
mov
and
or
sarl
rolb
js
in
js
adc
ljmp
pop
lret
faddp
les
test
in
data16
iret
nop
mov
or
addr16
pop
je
push
xchg
out
ficoms
and
push
cwtl
add
sub
inc
dec
pop
pop
enter
scas
pop
sbb
mov
imul
mov
ds
xchg
mov
stos
and
loope
mov
movsl
push
ljmp
je
sub
gs
and
daa
les
and
loopne
aaa
fs
xchg
jae
pusha
mov
lea
dec
mov
lcall
repnz
mov
xchg
push
and
daa
xor
inc
push
mov
or
icebp
push
and
xlat
dec
jle
movsb
pop
jp
test
mov
or
std
push
in
pop
xchg
mov
les
hlt
insl
les
or
bound
cmp
jns
fstl
sub
sti
or
cwtl
push
out
xchg
pop
lret
fldt
std
pusha
mov
adc
or
push
es
sbb
mov
ficoms
dec
testl
jne
int3
dec
popa
scas
cmpsl
ds
sti
mulb
jge
lods
xlat
or
loop
mov
into
push
inc
or
aaa
test
inc
iret
gs
pop
nop
and
mov
mov
xor
mov
push
or
rcll
mov
jp
push
in
daa
fs
iret
leave
pop
mov
add
jl
lahf
int3
dec
pushf
repz
inc
ret
out
sub
std
loopne
scas
in
lahf
mov
aaa
in
mov
les
lret
mov
push
mov
insl
arpl
insl
xchg
subl
mov
das
cmp
xchg
push
popa
das
sti
cmp
inc
sub
mov
mov
repz
add
call
in
in
jl
daa
dec
sbb
mov
lods
dec
aad
jno
je
repz
push
dec
push
out
addr16
repz
cli
pop
jnp
lret
movsb
outsb
ret
mov
mov
mov
dec
inc
test
sahf
popf
aad
imul
insl
or
or
xor
sahf
call
push
and
fwait
sbbl
pop
fisttps
addr16
cli
add
pop
sbb
lret
addr16
mov
mov
test
in
cld
call
sub
jmp
pop
data16
xchg
sbb
xchg
cli
xchg
mov
sub
daa
aad
jmp
into
in
mov
jmp
push
js
and
fldt
push
dec
stos
and
in
push
push
iret
jno
jnp
inc
xchg
out
and
mov
cmc
stos
fisttpll
nop
repnz
xchg
outsl
sahf
mov
cmpsb
pop
rcl
fdivrl
fst
jnp
pop
push
div
fmuls
mov
jecxz
cld
jb
push
and
or
cmp
int
sbb
pop
lods
sbb
es
shl
or
test
mov
lret
nop
cmp
lods
mov
sub
adc
cmpsl
lea
mov
int
test
cmp
hlt
es
adc
sub
pop
sarb
pop
in
ljmp
jne
dec
cs
push
ss
ret
sub
pusha
inc
rcrb
or
push
push
or
sbb
clc
add
mov
xchg
cltd
push
sbb
cmp
adc
ja
and
hlt
pop
mov
std
xor
pushf
mov
repnz
outsb
fstp
xchg
sub
and
pop
hlt
ret
data16
push
adc
cmc
xchg
pop
cmpl
mov
inc
mov
fwait
push
fs
mov
hlt
pop
or
test
or
adc
dec
jae
mov
fnstsw
inc
adcl
mov
ja
add
icebp
xor
adc
movsb
push
mov
test
imul
cwtl
pop
mov
popf
cli
mov
sti
rcr
out
mov
cmp
lods
jo
cli
test
imul
inc
ds
sbb
popa
imul
sti
fsubrp
sub
xchg
out
ret
mov
jmp
cmp
movsb
jmp
add
sub
and
jnp
or
sti
aas
pop
lret
arpl
adc
lea
sbb
mov
inc
in
add
fwait
dec
xlat
xchg
in
mov
inc
ja
cmp
fisttpll
test
cmp
cwtl
shll
or
mov
push
add
out
lret
fisubl
pop
mov
rclb
rorl
hlt
cld
adc
push
sbb
jle
idivb
fsubr
addr16
sahf
jge
inc
jb
lods
test
rorb
mov
inc
jb
dec
mov
roll
jg
mov
pop
push
xchg
sub
push
ja
aam
leave
ds
push
mov
sub
ljmp
fmul
dec
lcall
mov
andb
orl
dec
push
sbb
xchg
xor
mov
ret
mov
xchg
xor
pop
dec
and
add
gs
addr16
sarl
lret
xor
cmp
sub
xor
jb
scas
fdivs
mov
cmp
or
xor
mov
jno
fsubr
clc
sbb
gs
adc
xor
inc
daa
sahf
mov
xor
push
mov
add
xchg
and
add
mov
lea
dec
cmp
add
cmovge
nop
dec
fisubl
in
imul
fdivrs
jp
jo
add
insl
cmp
bound
hlt
jmp
push
push
lea
sbb
fchs
pop
lahf
popa
add
mov
jle
xor
mov
add
jge
decl
mov
adc
add
je
icebp
pushf
stc
sbb
ret
xor
mov
xchg
xchg
aas
outsb
imul
fimull
mov
add
imul
push
into
mov
lds
or
or
lock
out
and
and
call
js
sbb
cs
sub
in
dec
mov
mov
inc
dec
adc
repz
aam
mov
cmp
shlb
sub
dec
mov
in
jo
pop
cmp
add
jne
lock
shrb
adc
cld
mov
stos
sub
add
fisubrs
cmp
cmpl
mov
in
inc
mov
cmpsb
cmc
adcb
rclb
xchg
testl
and
subl
jmp
pusha
loope
xor
pop
shr
and
jmp
negb
sub
mov
mov
add
mov
push
fidivs
shl
nop
pop
mov
xor
jnp
adc
icebp
test
aam
mov
pop
lret
subl
lret
push
insb
jnp
mov
push
push
jne
iret
mov
in
in
cmc
mov
inc
enter
mov
adc
push
jbe
push
and
pusha
cmpb
cmp
cs
dec
pop
stos
icebp
popf
cmpxchg
xor
xor
les
sti
loop
in
push
inc
ljmp
es
xor
fisubl
adc
test
xor
gs
in
jno
fcomip
add
add
addb
cmc
fwait
or
mov
hlt
out
xchg
xlat
lret
and
xchg
imul
dec
mov
adc
or
pop
incl
movsl
mov
into
sbb
pushl
push
popa
dec
push
repnz
jecxz
push
pushf
adc
shlb
jecxz
pushf
jmp
popa
jno
jle
xor
push
movb
add
pop
jge
and
mov
mov
in
jl
or
mov
filds
adc
jne
cmp
mov
imull
ss
fsqrt
dec
jge
mov
and
jecxz
push
jp
cmp
push
mov
jmp
je
push
movsl
adc
cmp
add
jbe
mov
je
daa
hlt
or
jns
lods
test
mov
mov
icebp
out
push
and
cvttps2pi
scas
iret
in
and
jmp
sbb
std
fistps
lret
mov
mov
cltd
ret
and
dec
icebp
sahf
mov
out
lods
sbb
popa
lock
mov
push
pop
std
mov
or
jmp
push
imul
cmp
mov
and
outsl
and
ficoms
test
in
push
outsl
int3
scas
loopne
sbb
lcall
xor
mov
leave
or
mov
mov
dec
pop
cs
mov
pop
adc
std
dec
movsl
scas
scas
jecxz
jo
aad
pusha
fcoms
or
hlt
xor
jnp
jle
pop
jecxz
cmc
shrb
mov
aam
popa
test
pop
add
xchg
cmp
aaa
sbb
mov
mov
push
into
pop
dec
imul
aam
mov
sbb
and
mov
sahf
sub
cmp
jge
inc
and
sub
cmc
in
mov
lret
add
loopne
jle
out
fildll
inc
fdivl
push
mov
xchg
sbb
xchg
fisubrl
xchg
mov
outsl
pop
xlat
xor
xchg
pop
dec
push
in
xlat
add
push
ds
lret
icebp
dec
imul
out
fs
add
in
loopne
sub
mov
out
sahf
loop
push
mov
and
je
pop
ds
dec
adc
add
dec
mov
mov
mov
sub
pop
dec
dec
sub
jmp
fwait
ds
push
sbb
sub
outsb
rcrb
push
imul
mov
scas
push
mov
ss
inc
and
pop
out
xor
xchg
repz
outsb
cmp
mov
fld
jle
push
adc
loopne
xor
dec
sbb
xchg
adc
inc
cmp
jmp
push
lahf
lret
hlt
mov
adc
cmpsl
arpl
addr16
jle
jge
mov
push
mov
fwait
dec
add
insb
in
mov
hlt
dec
js
cmp
mov
xor
mov
adc
mov
sbb
or
shll
add
pop
or
leave
cmc
popa
add
dec
movsl
in
push
mov
mov
arpl
sbb
sbb
leave
mov
push
notb
mov
cmp
gs
insb
sarl
idivb
fwait
ret
add
xor
cli
jle
out
dec
or
dec
xchg
bound
daa
out
insb
adc
dec
push
outsl
or
push
nop
insb
dec
scas
lret
sbb
js
cmpsb
in
shlb
add
lods
test
xor
rcr
loopne
fdivrs
pavgw
dec
xorl
push
push
pop
int3
arpl
pusha
pop
pop
ds
lds
movsl
or
lods
push
adc
call
mov
push
test
xor
out
fists
mov
cwtl
jp
jge
lods
jle
cwtl
pop
sub
popa
mov
lcall
mov
dec
repz
cld
adc
xchg
add
outsl
jge
ja
out
stos
adc
fwait
outsl
out
ret
addb
leave
adc
mov
lea
add
add
adc
mov
aad
lock
mov
mov
lods
cmp
cmp
mov
or
in
mov
jg
or
add
jb
inc
pop
xor
mov
ljmp
mov
jg
fptan
fcmovnb
mov
push
sahf
fisttpll
rolb
and
fdivr
popf
and
sub
cwtl
pop
jl
or
xor
sub
lea
dec
mov
pop
inc
out
je
addr16
in
or
cmpsl
mov
cmp
cmpsb
stos
mov
sbb
test
mov
inc
or
or
and
and
in
out
cmp
aas
sar
add
nop
add
repnz
mov
inc
mov
pop
add
fcomp
mov
std
sub
cs
mov
cmp
shrl
inc
inc
dec
sti
push
push
test
sbbb
adc
test
addr16
call
call
dec
pop
sub
subb
mov
pop
int3
mov
inc
pushf
pop
sub
xor
pop
cmpsb
insb
into
out
jbe
push
stos
pop
stc
es
ret
push
adc
inc
arpl
mov
arpl
movsb
mov
leave
or
dec
push
mov
jnp
mov
push
cmpsl
insb
sub
jne
pop
mov
ljmp
leave
jne
push
mov
lock
ljmp
xor
sbb
repz
push
or
mov
scas
xor
inc
fmull
pop
int
rclb
push
mov
ds
pop
sarb
fildll
add
pop
sahf
jns
out
pop
mov
movsb
jge
subl
xor
jge
inc
aad
jge
loopne
mov
push
test
fsubs
arpl
mov
or
sub
rol
cmpl
cmp
rcrl
dec
gs
add
push
negb
mov
out
enter
sbb
out
leave
dec
mov
push
push
cmp
push
pop
push
mov
ret
and
pop
icebp
insb
xchg
cli
rorb
jne
flds
or
fs
xorb
sahf
adc
mov
and
cmc
xor
mov
xor
lret
sbb
out
or
push
fisttpl
or
jbe
aaa
testl
imul
js
sbb
xchg
mov
xchg
dec
pushl
test
cmp
ljmp
cli
mov
loopne
testb
je
cmp
jae
pop
mov
xchg
sti
pop
nop
sti
lea
push
ja
out
test
add
iret
add
cmpsb
out
ja
add
repnz
xor
dec
fwait
fs
push
data16
or
adc
mov
aas
sbb
scas
lret
dec
lods
or
andl
scas
jno
jae
jp
hlt
or
push
dec
xor
and
mov
jecxz
fstpl
pop
add
lret
or
and
movsl
mov
out
dec
iret
adc
mov
xchg
ret
jnp
mov
scas
jb
or
jnp
sub
pop
insb
mov
in
out
or
dec
ss
jbe
into
mov
outsb
rorl
add
imul
repz
mov
adc
or
cwtl
mov
xchg
notb
cmp
cwtl
add
lcall
mov
sub
adc
add
inc
test
leave
push
call
cmp
or
cltd
ds
dec
incb
mov
mov
test
repz
bound
dec
cltd
fsubl
add
stc
js
call
daa
daa
dec
jne
fsubrl
add
mov
.byte
