add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
js
je
jb
popa
add
add
add
add
sub
add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
add
add
sub
dec
add
and
push
add
jb
imul
add
inc
add
outsb
add
add
insb
add
add
popa
add
add
add
add
imul
add
jo
pop
add
imul
outsl
add
dec
add
je
jb
imul
add
push
add
add
add
add
arpl
outsl
add
and
push
add
jp
add
add
push
add
add
insl
add
insb
add
add
arpl
outsl
add
and
push
add
jp
add
add
add
jne
inc
add
jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
ja
cmp
inc
jb
push
dec
insl
jnp
add
mov
shr
mov
sub
cmp
bound
xor
dec
adc
cmpsl
mov
ret
cld
mov
xor
and
adc
sub
or
lods
repnz
loope
jmp
mov
ds
and
jle
movsb
in
push
sub
inc
jno
cltd
dec
add
lds
sti
sub
pop
or
sarl
or
nop
cmp
and
jp
out
cmp
sbb
pop
and
scas
repnz
loop
mov
mov
std
sub
popf
in
lods
xchg
adc
push
xchg
sub
scas
daa
lea
xchg
int
ret
lods
imul
pop
sbb
movsl
push
inc
sbb
inc
mov
mov
shll
inc
stos
nop
enter
xchg
lcall
sub
nop
fldl
dec
or
xor
dec
adc
repnz
cli
xchg
lret
test
cmc
stos
in
int
les
push
xor
inc
dec
jle
fstps
call
repz
adc
mov
or
pop
sub
and
xor
mov
rorb
inc
jb
bound
sbb
and
pop
add
rcrb
mov
sub
push
sbb
and
pop
add
rcrb
mov
sub
aad
inc
inc
mov
push
movl
lods
or
mov
fimuls
leave
subb
mov
ret
or
outsl
mov
data16
mov
push
jbe
popa
xor
push
push
sbb
insb
and
popf
jns
outsb
push
ret
jbe
xorl
cli
test
clc
mov
aad
lods
sbb
cs
mov
mov
call
pop
mov
mov
jmp
xor
adc
xchg
pushf
pop
call
fildll
jp
push
and
add
add
ljmp
and
rcl
idivl
into
jae
push
inc
ret
bound
fdivrs
pop
fnstenv
pop
enter
xchg
daa
xchg
push
hlt
stos
mov
rcrb
push
out
cmp
sub
dec
out
mov
movb
loope
cltd
les
or
sub
imul
in
adc
sub
push
xor
sbb
clc
aam
jne
pushl
test
ds
push
pop
outsl
and
add
cmp
negl
cld
pop
mov
push
test
lcall
mov
loop
out
outsl
sbb
dec
mov
add
inc
das
pop
lahf
or
jno
and
fsub
lcall
push
cmp
dec
mov
scas
ret
add
ljmp
inc
xchg
out
fwait
ja
sub
mov
mov
loopne
das
jle
mov
fldenv
jl
add
lret
adc
jbe
dec
mov
xchg
and
loopne
pop
cltd
inc
xchg
pop
adc
adc
fldl
jl
mov
fsubp
ss
test
mov
imul
aaa
add
push
fdivrl
or
xor
push
lock
fsts
lret
and
pop
sbb
adc
decl
leavew
mov
call
or
xchg
lock
dec
inc
and
fidivl
or
ja
add
xchg
rcll
std
or
cmpsl
iret
mov
push
mov
inc
sbb
xchg
repz
push
xlat
add
dec
shrl
xchg
xchg
xor
mov
dec
popa
sub
cmp
sbb
mov
std
pop
pushf
aas
sub
xchg
pusha
idivb
shlb
loopne
xchg
ret
faddp
mov
sbb
inc
or
sub
cmp
cmp
fnstenv
fmuls
roll
outsl
test
fwait
rclb
or
and
xchg
xchg
mov
mov
and
std
pop
lcall
mov
mov
sti
mov
pop
xchg
in
xlat
fisttpl
lcall
ret
sub
fcoml
mov
and
in
pop
jo
into
movsl
and
and
push
push
pop
push
and
push
mov
add
push
cmc
push
test
in
push
and
or
lcall
out
and
xor
adc
mov
xchg
shlb
jp
push
mov
push
adc
cli
add
mov
mov
mov
in
xor
shll
add
jb
jmp
adc
clc
shrl
andb
test
popw
ficomps
test
inc
jl
mov
cltd
ds
jge
fwait
in
add
fcomip
pop
dec
mov
bound
pop
cmc
outsb
sbb
dec
inc
xor
xchg
shrl
inc
ror
xchg
cmc
inc
cmp
movsl
mov
pusha
xchg
push
dec
in
std
mov
pusha
pop
jnp
jmp
scas
jns
push
mov
stos
mov
stos
subb
scas
xchg
sub
movsb
aam
addr16
ljmp
repz
push
lret
adc
jbe
add
add
movsl
add
fcmove
mov
jmp
inc
cs
jo
mov
shrb
cmp
pop
mov
or
sub
or
ss
mov
pop
rclb
sbb
mov
int
mov
cld
sti
idiv
pop
cmp
cmc
fiadds
jle
or
sub
adc
jnp
pushf
inc
pop
rolb
ficomps
xor
les
bound
dec
dec
fwait
mov
add
xchg
and
push
jae
repz
sahf
jmp
pop
lods
mov
sub
mov
mov
lgs
pop
divb
add
lahf
insl
ja
adc
popa
lea
dec
rolb
aad
jns
outsl
mov
ret
xlat
inc
add
fsubs
mov
int3
out
push
ret
sbb
sbb
ljmp
out
fisttpll
lods
int3
out
js
xchg
xchg
shll
aam
std
push
fidivrl
mov
cmp
jnp
sbb
test
call
xor
pop
mov
mov
bound
bound
icebp
push
sub
jg
shrb
in
dec
outsb
mov
inc
cwtl
test
adc
cmc
imul
and
lahf
shlb
fstpl
nop
testb
mov
call
into
aas
aaa
pop
mov
lahf
mov
jns
mov
cmp
xlat
add
fcomi
add
movsl
shr
xor
sbb
jb
adc
js
push
out
rclb
dec
xor
lods
push
xchg
out
out
and
dec
cmp
and
insb
add
jno
lock
movsl
ret
push
jle
jne
or
push
lods
inc
sub
out
aaa
xor
nop
mov
jae
pop
xor
mov
sub
lret
pop
cmp
and
push
jno
and
aam
in
test
or
mov
dec
pop
nop
cmpb
idivb
add
daa
pop
or
pusha
les
mov
jne
cmpsl
or
stos
lret
jnp
xlat
subl
aam
hlt
lret
sbbl
jle
out
push
cmpsb
cmpsb
push
lcall
cmp
cld
pop
idivb
dec
sbb
mov
sub
pop
add
cwtl
xchg
mov
add
push
push
or
jp
push
push
in
adc
out
leave
pop
push
jecxz
into
fnstsw
sub
loope
subb
mov
jmp
pop
out
and
push
into
sbb
js,pn
jge
jae
xchg
mov
xor
cwtl
popf
xor
daa
aaa
cmpsb
adc
xchg
outsl
mov
xor
mov
jbe
iret
ds
dec
adc
mov
xchg
mov
sub
inc
js
cmp
inc
inc
fstps
jnp
shll
sar
stc
sar
lret
ret
cmpl
cmp
popw
or
movsl
and
xchg
jnp
into
mov
mov
jge
fnstenv
and
xor
test
mov
xorl
leave
mov
inc
mov
das
or
add
mov
sbbb
popa
add
push
inc
ljmp
or
inc
sub
fmulp
dec
or
xor
sub
inc
push
test
shlb
je
mov
clc
insb
bound
sbbb
stos
cld
stos
cmp
cmp
sub
leave
or
in
sub
mov
adc
xchg
test
clc
cmp
jbe,pt
xchg
fisttpl
or
mov
or
ror
fs
mov
xor
hlt
hlt
or
shrl
xchg
cmp
sbb
mov
jns
out
dec
mov
pop
cwtl
jl
mov
pushl
cltd
dec
push
jo
mov
outsb
aas
add
sarl
xchg
inc
fs
sbb
stc
xchg
movsb
fs
icebp
mov
adc
pop
cltd
pop
ret
jmp
mov
inc
sbb
enter
movd
cltd
push
leave
xchg
fsts
ss
es
jmp
cmp
pop
push
sub
or
mov
xor
or
mov
aas
ljmp
and
hlt
js
or
lea
in
adc
push
data16
mov
push
jo
mov
daa
sbb
cli
sarb
xchg
sub
bound
sub
filds
xchg
es
insb
pop
jbe
std
jle
and
stos
mov
jb
sbb
adc
add
dec
push
jmp
inc
pop
outsb
fwait
xchg
mov
mov
int
pop
mov
jno
or
mov
loope
xor
adc
pop
mov
imul
iret
fisubrs
jae
jae
xchg
sub
psubsb
addr16
push
sub
adcb
push
and
sti
fsubrl
or
jp
lahf
and
mov
xlat
pop
test
pop
and
popa
add
leave
daa
and
fsts
xor
je
cmpsl
inc
xchg
lods
adc
adcb
inc
sar
xor
nop
insb
cli
insb
mov
sub
pop
pop
xchg
or
sbb
add
call
inc
dec
jle
jmp
jl
push
jne
addr16
ljmp
jge
jecxz
loop
fsubrl
outsb
jp
dec
leave
and
or
sbb
das
imul
push
cmc
adc
lds
cmp
cwtl
shrl
dec
dec
xchg
orb
xchg
xchg
adc
addr16
mov
sub
cmpsb
mov
xchg
and
add
and
in
mov
xorb
jno
lret
and
cltd
idivl
or
leave
xor
add
in
int3
and
adc
movsl
popa
and
xchg
into
pop
and
in
sbb
dec
je
popa
dec
xor
test
lcall
push
and
insb
jnp
sahf
leave
dec
stc
repz
hlt
cmpsb
jl
jno
pusha
xchg
outsl
imul
sub
add
loopne
xchg
fldcw
stos
orb
mov
adc
add
aam
adc
jo
mov
xor
aad
cmpsl
out
push
pop
repnz
ja
xchg
jmp
addr16
test
inc
call
je
imul
pop
xor
hlt
xor
dec
out
xor
cltd
push
test
jmp
stc
jno
or
sub
test
mov
mov
xchg
mov
in
xor
nop
xor
push
mov
stos
dec
push
mov
add
lea
sbb
sti
pop
ror
incl
jl
pop
mov
out
mov
mov
xchg
pop
rcrb
jmp
in
xor
scas
pop
clc
dec
pusha
jmp
push
ret
cwtl
mov
std
push
test
adc
out
pusha
mov
inc
jg
mov
addr16
pcmpeqd
bound
mov
jae
btr
jecxz
roll
add
lcall
mov
sub
mov
xlat
repz
jbe
outsl
fwait
call
cltd
daa
mov
mov
inc
orl
in
sbb
aaa
ja
mov
jns
subl
test
adc
pop
out
cmp
pushf
dec
add
xchg
jb
dec
push
clc
jnp
mov
sbb
xlat
xor
inc
xor
dec
cs
gs
insb
cld
or
mov
popa
pop
adcl
subl
call
lods
fstpt
jns
mov
mov
stos
and
stos
sahf
clc
fildl
popa
shrl
jp
and
adc
notl
sub
push
add
sub
jge
pop
sub
and
leave
ret
pop
and
rolb
push
jbe
cltd
adc
push
ja
mov
iret
dec
mov
xor
or
mov
xchg
repnz
rclb
rcr
dec
sbb
in
call
dec
movsb
adc
inc
mov
mov
stos
ret
pop
sbb
js
iret
outsb
sbb
mov
sbb
add
rcrl
ss
jecxz
jmp
cmp
jae
sub
inc
mov
lahf
cli
les
sbb
sub
mov
movsl
or
cmpsb
aad
scas
mov
dec
adc
mov
call
es
xchg
pop
mov
push
sbb
inc
inc
add
test
stos
jnp
xor
jl
sub
adc
pop
mov
orl
pop
mov
mov
mov
sbbb
mov
adc
jnp
mov
stc
adc
sub
divb
mov
mov
sub
out
sub
popf
cmpsb
cld
pop
loope
or
sbb
jns
mov
add
insl
test
adc
jmp
push
cs
jno
mov
scas
rorb
fildl
loop
out
or
jne
xor
jo
cmp
fs
ror
fs
dec
jns
adc
jne
int
pop
xchg
ret
idiv
jae
lcall
stos
test
scas
jg
mov
add
xchg
cmpb
or
fadd
add
inc
cmp
cli
jne
jb
test
hlt
lock
mov
cltd
mov
lds
popf
push
lods
ds
arpl
sbb
cmp
dec
js
push
sbb
not
sbb
push
sub
int
mov
mov
jl
test
jl
inc
repz
xchg
mov
push
fneni(8087
jnp
mov
dec
lods
scas
xchg
mov
push
sbbb
mov
or
subl
daa
ja
arpl
fs
shrl
xor
pop
or
iret
pop
xor
dec
xchg
in
sbb
out
push
filds
fmull
pop
das
fidivl
add
in
xchg
movb
dec
cmp
mov
push
fildl
and
and
fcomip
push
sub
pop
scas
cmc
adc
negb
mov
pop
lods
push
xchg
mov
mov
pop
rclb
data16
dec
frstor
jl
xchg
or
sahf
dec
jne
mov
or
mov
dec
and
scas
mov
pop
lds
dec
arpl
std
xor
cmp
and
cs
jmp
push
inc
rorl
enter
lret
xor
mov
xchg
dec
add
mov
js
lcall
or
add
sbb
fisubrl
std
and
jl
movsl
and
dec
loopne
test
lret
cmpsl
mov
mov
jo
fmuls
clc
dec
or
jo,pn
shlb
xor
jae
mov
jae
mov
adc
mov
pop
and
stos
dec
popa
adc
jns
mov
dec
insb
subl
push
jle
or
push
jle
mov
aad
ja
cmp
xor
mov
mov
test
aaa
scas
cmp
shrl
dec
stos
inc
mov
or
mov
inc
data16
popf
xchg
cmc
sbb
add
sbb
in
repnz
push
xchg
cli
fnstcw
mov
mov
xor
out
and
leave
lods
add
pop
daa
mov
test
mov
repnz
movsl
ss
bswap
stos
shl
in
mov
scas
jl
paddusw
in
or
popf
xor
hlt
mov
loop
mov
add
xchg
in
stos
mov
out
xor
pop
adc
fldt
add
jns
jmp
pop
lds
cli
aas
and
pop
mov
xchg
dec
cmp
lock
and
ret
lret
out
in
popf
mov
jge
adc
mov
nop
aas
fldl
cld
adc
jl
push
pop
jl
and
movsb
in
pop
dec
add
push
adc
aas
fmuls
loope,pn
xchg
inc
sti
sbb
insb
enter
dec
pusha
stc
dec
mov
mov
lcall
insb
xor
jle
adc
mov
xchg
jnp
jle
and
dec
sub
sti
mov
add
iret
test
in
mov
inc
movntq
xchg
jo
cmc
out
jnp
outsb
cwtl
fnstcw
pop
sbb
push
lret
dec
lea
cmp
rolb
lret
push
je
fs
mov
sti
adc
fs
mov
sub
flds
out
test
ret
out
pop
outsb
insb
push
inc
mov
mov
clc
scas
stc
adc
inc
rorl
xor
xor
shll
pop
stos
rcrb
cmp
imul
dec
das
mov
xlat
add
sbb
pushf
cwtl
sub
pop
sub
bound
lock
das
nop
movsl
bound
push
and
and
faddl
inc
lret
pop
int
and
jp
adc
adc
or
cmp
xor
lret
adc
fsubl
inc
mov
mov
enter
fistl
sti
mov
cmpsl
add
jmp
popf
int
lcall
xchg
dec
lea
mov
mov
repnz
rcl
pop
push
icebp
gs
pop
inc
pop
adcl
dec
jl
mov
or
cld
pusha
jo
in
aad
mov
loop
cmpsl
loope
mov
rclb
repz
int3
or
pop
je
or
pushf
adc
imul
ss
or
mov
inc
sti
mov
fs
inc
jnp
add
inc
mov
add
in
mov
cld
add
mov
lahf
jne
lea
les
ja
stc
and
stos
fucom
xchg
adc
adc
cmp
fmull
mov
jmp
fucomi
aas
lds
cmp
jnp
push
push
ds
xchg
scas
pop
pop
in
sbb
lahf
cld
cmp
adc
add
loope
xchg
jp
fldenv
push
mov
mov
ret
loop
repz
daa
jns
add
push
pop
pop
ret
sbb
loope
mov
clc
lock
xor
sbb
sbb
push
mov
mov
pop
mov
jns
fstl
lahf
push
cs
aas
cmpsl
mov
in
aaa
cmpsl
push
push
jp
add
push
mov
enter
popa
cmp
fistpll
je
test
pop
adc
lods
repnz
dec
scas
push
pop
loopne
dec
out
cmp
mov
popf
push
push
and
and
inc
hlt
adc
into
add
lret
mov
lret
add
dec
lods
rolb
cmpsl
mov
out
out
fidivl
dec
aas
pop
icebp
inc
rcl
outsb
mov
inc
jmp
rorl
pop
inc
jb
sbb
jle
push
xchg
mov
cmpl
jno
sahf
xchg
lahf
stos
hlt
lds
xor
rcrb
or
in
shrb
decl
scas
jmp
jp
gs
insl
jmp
jle
push
sti
cs
lock
fcom
shll
es
aaa
sub
mov
mov
inc
sbb
ret
inc
dec
mov
call
cmp
pop
and
fst
scas
adc
push
shrb
push
pop
pop
mov
pop
and
add
popf
or
jmp
mov
xchg
xor
outsb
and
lret
or
icebp
pop
or
ret
mov
mov
xchg
push
lahf
dec
adc
rcl
xchg
aad
notb
xor
lds
test
mov
cmp
xchg
dec
scas
pop
mov
pop
lcall
add
ljmp
mov
jge
out
cs
aaa
xchg
loopne
paddusb
arpl
iret
popf
jo
stos
pop
out
push
neg
repz
in
das
xorl
pop
sbb
mov
mov
pop
and
xchg
sti
push
dec
inc
mov
push
dec
outsl
insl
mov
push
sti
insl
cmp
mov
adc
fisubrl
mov
adc
push
and
aaa
mov
cli
pop
sub
fidivl
into
adc
xchg
stos
cmpps
mov
shlb
fs
lods
in
dec
shl
dec
push
nop
adc
divl
daa
xchg
pop
mov
xchg
aaa
jecxz
and
xor
inc
or
test
fimull
lds
pop
imul
mov
push
loop
stos
into
and
fnstenv
push
jnp
fistl
dec
add
xchg
in
jno
pushf
pop
and
lret
subb
in
or
sbb
xor
aad
adc
ljmp
pop
or
aad
jg
daa
or
loop
push
sub
inc
in
ljmp
fstpt
in
notl
pop
inc
or
jl
pop
jo
cmp
inc
into
inc
inc
push
out
adc
inc
push
shlb
fwait
lcall
aad
popf
cmp
popf
or
mov
imul
xchg
repnz
cmpb
out
add
xchg
xchg
lods
push
gs
inc
bound
subl
sub
pushf
mov
mov
ljmp
cmp
jbe
icebp
fsubrl
push
loop
adc
lea
loope
inc
pop
out
pop
jecxz
ffreep
lahf
add
cmpsb
aas
sbb
cmp
or
jnp
mov
pop
xlat
or
add
pop
xor
xor
in
into
sub
repnz
mov
push
xchg
jbe
scas
jae
imul
pop
jae
cmpsl
push
pop
cmp
enter
sub
xchg
shll
adc
jbe
ds
adc
pushf
into
ja
jmp
cmp
inc
sub
adc
jnp
out
inc
test
pslld
bound
sbb
and
pop
add
rcrb
mov
sub
push
sbb
and
pop
add
rcrb
mov
sub
push
sbb
and
pop
add
rcrb
mov
sbb
cmp
inc
insl
xor
int
ffree
push
repnz
dec
daa
rcrb
fnsave
in
and
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
fbstp
iret
push
call
out
push
shll
scas
cmpsb
loope
inc
xchg
outsl
out
testb
das
das
fbstp
iret
push
call
out
data16
jbe
inc
mov
mov
bnd
outsl
out
testb
aas
das
fbstp
iret
push
call
out
data16
jbe
inc
mov
mov
cmc
sbb
push
mov
pop
outsl
xchg
ss
es
lods
stos
fsubrl
and
and
xchg
out
dec
rclb
repz
fwait
bound
add
mov
mov
adcb
sbb
jecxz
movl
sahf
sub
shlb
cmp
cmpsb
pop
fmull
jns
nop
inc
loopne
xor
push
aaa
fidivl
xchg
mov
mov
mov
mov
sbb
sahf
out
dec
aam
fstps
inc
xor
loop
adc
pusha
inc
out
push
scas
mov
dec
pop
xchg
sbbb
imul
push
ret
iret
flds
mul
sahf
shlb
negb
dec
jle
rcll
aas
mov
iret
push
call
out
data16
jbe
inc
mov
mov
xchg
outsl
out
testb
aas
imul
jae
or
aas
sti
and
pop
das
mov
in
cli
pop
subl
orb
and
mov
mov
fcompl
lret
push
add
sbb
cmp
mov
jnp
sahf
push
pushf
outsl
lcall
inc
mov
mov
xchg
outsl
out
testb
aas
das
fbstp
iret
push
call
out
data16
jbe
inc
mov
mov
xchg
outsl
out
testb
aas
das
fists
sub
inc
pop
inc
sub
and
jbe
sbb
in
mov
les
xchg
fxch
lods
mov
jg
fsubrs
mov
xchg
imul
in
pushf
pop
rcrb
rep
int
mov
cmpsb
test
out
lcall
fists
sbb
int3
xor
xchg
das
or
lahf
xor
sub
cwtl
je
popf
jb
testl
sub
sbb
dec
mov
and
adc
xor
in
lock
hlt
mov
test
movb
dec
and
inc
pop
shrl
xchg
mov
dec
pop
mov
adc
adc
stos
inc
mov
xchg
and
iret
cmp
mov
lea
adc
loope
lret
shrl
push
jnp
or
leave
push
push
test
add
orb
or
frstor
or
or
sub
mov
jb
out
add
js
shrb
push
jmp
cmp
popa
lock
mov
inc
shlb
out
or
and
lcall
or
insb
inc
inc
xchg
pop
lock
ret
dec
out
or
std
jne
popf
dec
mov
sub
sub
subl
cmp
repz
xchg
inc
cmp
push
dec
adc
xor
fmuls
xchg
sbb
bound
sti
add
xchg
dec
cmpsl
mov
jle
push
mov
add
inc
jb
sbb
dec
sub
dec
and
out
js
fidivrl
dec
mov
inc
pusha
jns
push
into
fsts
frstor
sub
mov
gs
fcmovnu
loope
and
xor
mov
xorl
fldt
fstpt
pop
push
mov
xchg
repnz
cmc
dec
add
dec
std
cmp
out
mov
push
loopne
push
into
iret
xor
stos
ret
dec
fcom
pop
test
xchg
lret
mov
xchg
xor
lcall
push
push
dec
push
mov
inc
arpl
mov
sbb
rcl
hlt
decl
shr
push
xor
mov
pusha
mov
fs
cs
xchg
inc
dec
adc
mov
ljmp
mov
xor
dec
mov
pushf
mov
ljmp
xchg
mov
mov
or
cmp
pop
inc
scas
cmc
popf
imul
sbb
jmp
ficompl
lret
rclb
push
nop
jmp
fstps
pop
dec
in
fisubrs
repz
scas
fisubrl
insb
inc
xchg
dec
lret
leave
movsl
jns
and
fnstenv
mov
ds
aas
xor
push
clc
cli
xchg
lahf
mov
and
mov
je
popa
mov
xor
fildll
xchg
push
sbb
mov
sub
inc
xchg
bound
sub
lods
dec
imulb
pop
lock
aas
inc
inc
jb
jecxz
mov
cmp
in
imul
mov
filds
fcoms
dec
adc
imul
jmp
jmp
rcrl
clc
sub
jmp
sbb
dec
inc
decl
push
inc
mov
stos
imul
pop
xor
out
popf
mov
push
aam
int3
in
jecxz
outsl
mov
add
mov
mov
daa
push
sbb
push
inc
add
movl
mov
in
shlb
mov
lea
push
mov
adc
fiaddl
loop
lock
popa
xor
mov
add
loopne
pop
out
imul
int
fistl
cs
or
adc
js
sbb
push
fstl
add
mov
test
sbb
pop
mov
out
inc
xlat
ret
mov
pop
add
stc
push
push
cmp
mov
es
or
jne
popf
jo
cmp
lea
outsb
mov
aaa
movsl
inc
fisttpl
sbb
jp
sahf
inc
pop
in
sarl
add
dec
mov
in
mov
movsb
xchg
or
test
push
scas
sub
sub
and
inc
loop
jle
imul
pop
outsb
xchg
into
pop
inc
cltd
mov
mov
insb
cmp
mov
in
inc
lods
pop
xchg
or
push
xchg
adcb
push
je
mov
cmp
filds
cld
sarl
xchg
xchg
stos
out
mov
jb
push
add
jl
xchg
inc
dec
shll
lret
mov
fmul
dec
les
push
cltd
fs
ret
inc
sbbl
xchg
es
sub
in
in
arpl
scas
iret
xor
mov
push
jne
loopne
mov
xor
in
leave
push
sub
es
insl
add
imul
clc
mov
testb
lods
mov
mov
lcall
movsb
mov
jl
xor
movsl
pop
dec
fbld
movsl
xlat
add
pop
lret
sub
scas
adc
and
fcoml
pop
mov
das
add
aam
lret
mov
add
scas
inc
mov
dec
jae
test
lock
movsb
rcr
cmpsl
outsb
lahf
xchg
popa
clc
jnp
xchg
mov
mov
pslld
and
popa
daa
adc
inc
mov
sarl
inc
cmp
je
xorb
mov
fsubl
cmp
call
or
push
and
jnp
push
test
add
sbb
mov
cwtl
hlt
rcrb
addr16
dec
int3
jmp
dec
sub
cmp
dec
lret
scas
sbb
xor
lock
jo
in
stc
stos
adc
ljmp
test
and
mov
mov
lahf
or
add
push
pushf
das
sahf
nop
test
cmp
xchg
stos
movsb
cli
xor
aaa
imul
inc
xor
dec
xchg
pushf
xor
in
mov
dec
pop
and
and
in
add
in
pop
lock
cld
pop
dec
loope
xchg
add
es
push
jl
adc
cmc
out
add
xor
in
enter
jb
xchg
aaa
pop
rorl
push
mov
add
push
cmp
and
je
mov
xchg
xchg
pop
aaa
ss
test
mov
mov
inc
out
xchg
add
cmpsb
jo
lds
aad
pop
inc
add
mov
out
std
addr16
inc
gs
push
xchg
into
imul
and
rol
out
mov
mov
inc
mov
push
xchg
jle
das
pop
inc
fsubl
call
movsb
cwtl
fidivl
pusha
inc
xor
aam
inc
jge
and
aam
pop
add
fbstp
cmc
push
pop
xor
repnz
mov
jmp
hlt
add
cltd
sarl
pushf
test
sbb
sub
aad
pushf
inc
inc
jp
mov
outsb
adc
fsts
hlt
std
ja
cmc
adc
repnz
add
shll
mov
add
rcrl
dec
jb
and
ficomps
pop
popa
int
push
insb
popf
sbb
add
xchg
adc
ret
jnp
xchg
lock
loope
add
out
fnstcw
xor
xor
add
fisubs
test
jecxz
mov
sbb
adcb
movsl
stos
cmpsl
xchg
mov
mov
add
sahf
call
and
inc
push
or
xchg
push
dec
es
neg
movsb
jae
scas
jge
je
neg
test
xorb
fwait
push
in
jne
rcrl
push
or
clc
adc
lock
push
xchg
inc
inc
adc
shlb
test
orl
and
mull
mov
imul
aam
jbe
mov
ss
or
xor
clc
jp
lock
xchg
enter
mov
clc
push
jno
iret
sbb
xor
cli
cli
shll
mov
mov
sbb
xor
lods
jne
pop
lret
cmp
cltd
and
push
ror
xor
pusha
ret
jp
aad
add
sbb
mov
mov
in
sbb
cmp
cmp
fldt
es
pop
and
inc
sub
lea
test
or
pop
push
sar
xchg
mov
inc
jb
mov
mov
nop
inc
std
inc
mov
cli
shrl
push
lret
mov
push
bound
out
rcll
sbb
insl
xchg
mov
sbbb
and
jbe
push
and
out
rcl
jo
repnz
xlat
clc
aam
stc
pop
or
jle
lcall
out
cmpsb
cld
std
jns
lds
fisubl
xor
pmulhw
xor
data16
pop
iret
push
xchg
mov
jo
repnz
pop
jl
pop
pop
dec
mov
sar
pop
mov
cmpsl
test
jbe
sbb
sbb
pushf
sbb
mov
sarl
mov
sub
out
or
mov
daa
mov
jns
mov
xchg
mov
sub
adc
inc
sbb
lds
aad
divl
push
loopne
cmp
cmp
mov
pop
sbb
cli
jnp
add
popa
cmc
dec
inc
andl
xor
dec
out
loope
xchg
and
inc
out
mov
push
cmpsl
call
adc
cmpsl
movsl
jae
imul
in
cwtl
cmpsb
and
cli
sub
xchg
mov
xchg
xor
add
sti
sbbb
adc
pop
dec
sbb
fsubrl
popa
mov
je
enter
out
jae
insb
movsl
and
into
in
loope
mov
mov
scas
xchg
clc
mov
xor
lods
pop
aaa
ror
ja
leave
jb
in
dec
add
cmp
xchg
lret
imul
insl
xchg
sub
mov
test
subb
xchg
mov
jmp
cs
in
sub
dec
and
adc
pop
hlt
lock
pop
popf
xorb
xchg
stos
imul
loopne
xchg
aas
movsb
in
xchg
clc
mov
repz
push
or
in
popa
lods
lret
xor
push
dec
pop
add
aaa
aam
push
xchg
jmp
fwait
mov
leave
outsb
mov
mov
in
dec
cli
lret
sbb
sub
aas
or
sbb
mov
fs
xchg
dec
testl
sbb
out
jbe
lods
daa
push
xchg
fildll
lods
dec
out
sahf
xor
lcall
sbbl
dec
notb
pop
xchg
adc
mov
stos
jg
es
pop
mov
xorl
jp
lds
mov
add
push
jo
xchg
stos
mov
sbb
inc
mov
push
ficoms
ret
adc
pop
cli
outsl
pushf
and
cmp
mov
xor
dec
sarb
int3
hlt
sbb
aaa
movsb
adc
das
iret
jecxz
mov
mov
adcl
scas
mov
lods
js
pop
insl
mov
inc
push
clc
cmp
pop
addl
inc
icebp
test
xchg
pop
and
sub
mov
pop
andl
out
sbb
cs
enter
aam
hlt
lea
mov
aad
inc
xor
cmp
gs
aaa
dec
rorl
push
cmpsb
jnp
and
jb
inc
in
jecxz
cmpsl
sub
scas
add
fwait
cwtl
fucom
push
add
andb
xor
jb
fidivl
sub
add
xchg
or
xor
xchg
cmpsb
ljmp
mov
mov
call
repz
cwtl
lods
inc
repz
cli
in
imul
inc
out
aad
sub
cmpsl
rcll
jmp
imul
in
fs
sbb
inc
dec
lret
je
fadds
cmp
and
pop
rolb
cmp
aaa
sbbb
jp
sub
shrb
cwtl
sub
fisttpl
leave
pushl
jecxz
mov
rol
mov
popl
stc
xchg
cmp
inc
sbb
cmpsb
dec
outsl
stos
clc
sbb
lcall
cs
outsl
push
push
mov
into
addr16
jp
xchg
jmp
dec
push
dec
mov
cmp
jg
imul
inc
jp
adc
jl
add
inc
dec
sub
mov
or
mov
cmp
lcall
push
stos
aaa
jo
inc
scas
fisttpll
add
xchg
xlat
outsl
sub
repnz
mov
add
in
jl
push
out
loope
inc
rolb
pop
dec
pop
dec
test
sub
mov
add
fsubl
filds
xchg
imulb
in
in
sti
cmp
sarl
sub
in
cmp
xchg
ret
shlb
mov
pop
loope
cltd
pop
ja
jne
xchg
inc
scas
test
cmp
hlt
jmp
lcall
pop
arpl
mov
aas
push
push
mov
sbb
sbb
imul
push
orb
lahf
imul
jle
or
in
cmp
js
mov
jbe
sbb
mov
or
and
inc
shll
cltd
lods
adc
mov
daa
inc
cmpsb
cmpsl
mov
cmp
or
adc
loope
mov
and
orb
outsb
pop
rolb
cwtl
mov
or
notl
xchg
adc
fisubrs
hlt
and
xor
leave
mov
mov
and
jl
push
test
inc
cs
loop
xchg
and
sbb
push
stos
dec
lahf
in
pop
inc
push
mov
mov
aam
fstpt
lds
sbb
xchg
mov
pop
xor
mov
stos
adc
mov
pop
cli
orb
sbb
sbb
add
imul
mov
gs
pop
cld
inc
mov
aaa
push
push
cli
test
dec
mov
into
dec
sub
in
and
pushf
and
test
dec
scas
mov
and
jle
push
pop
pop
jo
es
xchg
push
jns
sbb
cmp
icebp
loopne
mov
cmp
xlat
icebp
push
mov
lods
lods
outsl
or
or
f2xm1
inc
xchg
cmc
add
ljmp
jmp
sub
add
movsb
adc
idivl
add
xor
pop
cmp
fstps
sarl
and
test
cs
lret
cmc
push
scas
sub
mov
xor
push
push
out
xor
out
inc
jnp
movsb
sbb
addl
inc
mov
jecxz
mov
xchg
mov
iret
leave
push
mov
cmp
jecxz
dec
loope
mov
pop
pop
inc
gs
adc
adc
pushf
int
or
test
ficoms
inc
je
data16
xor
pop
add
clc
lods
push
sbb
in
insb
pop
cmp
addr16
lahf
mov
into
cmp
ficoml
in
and
pop
and
pop
pop
cmp
arpl
jecxz
mov
inc
filds
sub
in
imul
push
setb
add
jno
or
mov
mov
push
push
cmp
aam
movsb
sbb
and
mov
pop
xchg
cmpsb
cmpsl
sbb
arpl
sbb
arpl
loope
pop
inc
adc
in
jl
fists
in
neg
jp
or
xchg
stos
aad
pop
jnp
dec
repnz
clc
adc
cld
andl
and
lods
xchg
add
and
arpl
test
lahf
out
mov
in
dec
inc
dec
pop
sahf
jmp
sbb
cld
mov
and
cmpsb
inc
xchg
push
insl
gs
out
test
sub
push
aaa
lods
and
cld
pop
sub
data16
pop
xor
adc
dec
dec
mov
cwtl
mov
mov
rorl
mov
mov
rorb
js
lret
jne
mov
inc
sbb
rorb
or
arpl
orb
scas
adc
jg
fdivl
negl
and
push
inc
cmpsb
repz
daa
jecxz
scas
mov
mov
movsb
lret
mov
and
test
jo
and
add
dec
scas
imul
pop
inc
sarb
xor
hlt
add
out
or
and
xchg
jge
jp
test
imul
dec
outsb
jo
stc
pop
fwait
stos
pushf
add
and
add
sahf
enter
lahf
and
cmp
push
mov
mov
imul
mov
imull
add
ds
fadd
push
pop
cmpsb
mov
insl
and
push
or
rcll
lret
cmpl
imul
fidivrs
imul
loop
je
mov
xor
cmpsl
jb
out
addr16
std
ljmp
and
lahf
mov
mov
mov
clc
pop
pop
xor
bound
cmp
in
and
or
in
sti
test
mov
test
xchg
mov
ret
mov
cmpl
mov
cmp
sbb
push
fcompl
testl
scas
xchg
xor
ret
push
shlb
lock
repnz
dec
push
test
cli
xchg
clc
imul
sbb
insb
out
xor
adc
js
xlat
push
mov
cmp
in
mov
mov
and
jecxz
mov
xor
pop
pop
mov
les
sbb
xor
or
push
push
xchg
out
js
pop
aam
mov
inc
mov
xor
xchg
push
mov
out
jl
rol
cmp
outsb
dec
leave
insb
push
jns
sub
lock
cmpsl
or
adc
dec
cmp
push
jne
xor
out
push
add
mov
mov
mov
mov
popa
or
add
sbbl
fbld
xchg
lods
in
xchg
mov
push
fsubrl
mov
ljmp
mov
xor
dec
push
mov
add
push
scas
test
cmp
aas
ror
cli
dec
hlt
cmp
clc
mulb
xorb
xorl
aaa
jmp
into
aad
lret
mov
mov
iret
mov
push
or
sub
test
sub
push
stc
pop
add
aad
cmpsb
in
xor
lock
xor
call
clc
adc
shrd
movsb
xor
add
loop
pushf
loopne
dec
xchg
bsf
gs
mov
pusha
adc
jnp
cmpsb
das
iret
loopne
rclb
xchg
xchg
pop
push
jo
mov
mov
mov
aam
out
add
add
pusha
xchg
and
dec
scas
aas
push
mov
in
mov
incb
inc
xor
cwtl
scas
rcll
loop
scas
mov
add
cmp
inc
loop
push
loop
int
xor
mov
fcmovnb
cmpsl
push
arpl
xor
cld
jg
xlat
cs
pushf
test
scas
mov
mov
push
sbb
mov
jle
fisttpll
notl
jge
stos
push
add
sbb
test
mov
xor
pop
mulps
xchg
lods
sbb
outsb
in
xor
pop
jo
push
inc
mov
xchg
lret
sti
adc
cli
rcr
mov
cmp
insl
dec
das
outsl
addr16
arpl
add
xchg
mov
xchg
sbb
arpl
xlat
call
inc
pop
stos
mov
std
les
ja
test
mulb
add
push
and
xor
inc
fwait
pop
push
repnz
out
shrl
mov
mov
push
xchg
repnz
dec
sbb
ds
push
scas
xor
dec
pop
stos
and
je
xor
enter
movl
scas
repnz
xchg
add
lods
push
sub
cltd
jmp
rclb
push
mov
cmp
lock
sbb
mov
out
shl
or
or
pop
cmp
sub
dec
inc
push
jmp
sub
in
lods
repnz
xor
aam
test
dec
in
pop
aaa
into
sub
ffreep
test
dec
mov
push
and
push
sbb
sbb
iret
mov
bound
std
xor
push
pop
lret
fsts
pop
sub
jno
xchg
push
jge
lret
mov
fimuls
dec
mov
cmc
nop
push
int
mov
sub
mov
mov
loop
insb
aam
rcrb
int3
pop
push
stos
adc
fmull
add
int3
cltd
imul
cltd
add
push
xor
push
xchg
pop
jns
subl
adc
jbe
nop
push
shlb
xchg
add
mov
push
fisttps
rclb
stos
jo
lahf
in
sbb
das
mov
cmpsl
mov
enter
rcrl
arpl
iret
loop
push
out
data16
jbe
inc
mov
mov
xchg
outsl
out
testb
aas
das
fbstp
iret
push
call
out
data16
jbe
inc
mov
mov
xchg
outsl
out
testb
aas
das
fbstp
iret
push
call
out
data16
jbe
inc
mov
mov
xchg
outsl
out
testb
aas
das
fbstp
iret
push
call
out
data16
jbe
inc
mov
mov
sub
xchg
sbb
shrb
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
add
adc
popa
xor
and
jo
add
int3
add
mov
rolb
fs
adc
popa
xor
add
pusha
and
add
rol
jmp
rclb
mov
sti
call
pop
jle
jo
in
mov
enter
stos
shlb
aad
add
pop
adc
push
push
call
dec
mov
sbb
pop
hlt
cli
in
inc
in
xchg
mov
adc
lcall
in
and
xchg
mov
loopne
paddb
sub
push
cmp
orl
rclb
shlb
insl
sub
jbe
inc
js
lds
jno
adc
jo
addl
aas
xchg
rcrb
pop
lock
xchg
sbb
mov
sti
int
loop
xchg
jmp
test
repnz
cmp
mov
into
mov
lahf
push
inc
xor
aaa
inc
fwait
dec
jmp
repz
inc
jno
adc
sub
pusha
and
mov
jecxz
int
mov
lock
ds
or
jl,pt
push
jo
addb
xchg
mov
mov
fmuls
jne
push
adc
sub
inc
xchg
dec
and
movsb
mov
into
mov
ret
jl
inc
or
push
adc
jo
add
shll
adc
mov
inc
adc
popa
xor
add
pusha
and
add
shll
adc
mov
inc
mov
loop
lock
data16
jmp
stc
ret
add
repz
xchg
and
jl
lds
repz
pop
sub
mov
jnp
xchg
cmpsl
sub
xor
mov
cmc
iret
dec
stc
imul
aam
pushf
call
stc
add
call
ja
imul
jae
lea
lahf
dec
and
scas
lahf
ret
aad
popf
outsb
jl
xchg
stos
dec
out
scas
les
lret
jns
pop
jb
adc
mov
sub
mov
roll
cmovns
outsb
cmp
jl
mov
leave
lds
jecxz
adcl
cmp
push
fcoms
loope
clc
dec
stos
jno
fwait
daa
test
sahf
jmp
data16
scas
sub
jge
sub
addr16
mov
js
xchg
push
dec
lods
insl
jecxz
pushf
aad
pop
sub
and
loop
mov
ficoms
dec
mov
fistl
inc
add
or
mov
sub
stos
in
arpl
rcr
ret
xchg
mov
xor
sbb
into
pop
jae
jg
fwait
ja
sub
insb
lahf
adc
mov
fcom
pop
aas
xchg
enter
adc
or
cs
jns
les
push
jle
lea
loop
ljmp
or
loopne
js
shr
nop
test
sbb
insb
sbbb
in
repz
adcl
call
lds
xchg
add
aam
inc
dec
mov
cld
mov
lds
mov
push
lret
xchg
call
xor
stos
mov
mov
addb
cmp
int3
sub
mov
mov
mov
dec
into
pop
movsl
cmp
sbb
es
push
lock
dec
ljmp
dec
fisttpl
cltd
test
lcall
dec
xchg
inc
push
out
aad
or
mov
jb
mov
jns
and
and
fisttpl
xor
pop
adc
pop
pop
push
push
mov
push
repz
stos
out
ret
xor
lods
push
loopne
imull
out
pusha
dec
cld
jb
xor
dec
inc
in
or
popa
ss
mov
js
push
cmp
bound
lret
pop
aaa
mov
mov
xchg
xor
sbb
or
aam
cmpsl
pop
mov
pop
notb
sbb
lret
cmp
rorl
shl
xchg
aaa
jle
mov
mov
aaa
mov
push
adc
cmp
cmc
cmp
cmp
push
int
xchg
fistpll
sti
adc
pop
roll
out
lods
adc
mov
lcall
les
gs
pusha
scas
cs
repz
mov
add
lahf
inc
lods
push
sub
inc
dec
sub
aam
pop
adc
jae
pop
jle
arpl
push
in
cmpsb
leave
lods
xlat
and
insb
mov
mov
imul
inc
xor
adc
mov
xchg
fildll
stos
push
inc
lahf
cld
mov
into
aas
enter
out
ss
add
adc
les
xor
cli
mov
std
nop
mov
add
in
jle
jmp
mov
push
hlt
scas
or
mov
cld
cwtl
and
adc
gs
jmp
pop
mov
sbb
xchg
insl
iret
and
aad
mov
ficoml
imul
xchg
mov
push
ret
leave
xor
add
mov
stc
das
mov
fcmove
inc
aam
mov
nop
pop
outsb
stos
push
xchg
ljmp
cs
add
adc
or
mov
inc
addr16
cli
jo
jne
sbb
cmp
insb
je
fldenv
pop
mov
push
rorb
movl
mov
flds
xchg
test
mov
push
xor
test
pop
inc
xchg
mov
add
je
or
ret
enter
sbb
imul
test
repnz
and
push
cmp
sbb
mov
pushf
pop
adc
call
xor
push
cmp
hlt
pop
xor
test
jo
dec
insl
sti
dec
inc
sahf
in
push
cmp
xor
pop
mov
insb
inc
loop
cmc
andl
push
mov
ss
xchg
mov
jae
push
jo
cltd
shr
clc
push
jmp
scas
adc
jb
push
xchg
clc
push
shrl
fldt
xchg
mov
aam
push
jns
mov
imul
sub
pop
iret
fnstsw
cltd
fsubs
stc
test
adc
stc
xchg
pop
inc
inc
push
rcll
shrl
push
lods
shll
dec
mov
lds
imul
sub
push
jl
inc
push
dec
cmp
dec
mov
mov
bound
cli
cltd
stos
mov
je
mov
mov
fs
sub
loopne
aam
int
stc
mov
loope
es
iret
popa
scas
mov
aaa
and
and
divl
mov
filds
add
es
jmp
mov
test
adc
nop
jmp
mov
sbb
sti
xor
inc
notb
pop
les
or
scas
or
jne
in
stos
addr16
xor
add
cwtl
aaa
xlat
mov
scas
clc
or
xchg
inc
xor
jnp
lds
inc
pop
mov
push
or
mov
and
push
mov
rorl
cmp
scas
divl
mov
cmpsl
inc
insl
flds
test
adc
adc
and
push
rorb
adc
cmp
into
pushf
bswap
jecxz
shr
pushf
mov
mov
sub
cwtl
imul
pop
repz
pop
and
adc
xchg
xchg
mov
push
aad
addr16
popf
fnstsw
daa
add
popf
cmpsb
int3
js
sti
loopne
jae
cmc
push
mov
out
pop
divb
fsts
mov
popf
es
shll
and
dec
sub
out
stos
dec
test
outsb
and
adc
aad
dec
cltd
sarb
sbb
shll
push
inc
in
push
add
mov
adc
daa
adc
and
dec
dec
inc
popa
cli
inc
or
inc
out
out
js
mov
pop
and
insl
adc
and
add
add
or
jno
hlt
fwait
sub
push
in
or
sbb
stos
adc
xor
push
out
rcrb
jnp
cmp
iret
sub
inc
fs
push
push
mov
sbb
aaa
jnp
xchg
stos
jnp
dec
push
push
mov
mov
test
addr16
lahf
xabort
cmp
int
jo
mov
aad
je
mov
mov
or
xlat
inc
jbe
pushl
sbb
dec
clc
cmpsb
and
mov
sbb
mov
into
cmp
jb
stc
lods
jne
pop
fwait
lods
mov
pop
std
push
and
push
cmp
sti
popf
int
in
daa
push
jbe
cli
and
adc
imul
fidivrl
gs
inc
into
addl
cmp
addb
fnsave
xor
mov
pop
pop
mov
sub
jne
in
in
inc
repnz
lods
popa
dec
clc
aad
movsb
xchg
mov
inc
scas
dec
xchg
mov
lock
jae
iret
movsl
xchg
fidivrl
data16
loop
ret
pop
xor
popf
jmp
fsubr
maskmovq
negl
sub
repnz
dec
sbb
roll
adc
adc
jl
fbstp
mov
push
rclb
pop
jge
xchg
ldmxcsr
adcl
xor
mov
pop
shll
shl
dec
push
cmp
testb
cmp
imul
pop
cs
cmp
add
lds
ja
xlat
xchg
scas
push
xchg
lods
push
test
lods
cmp
cmp
dec
mov
adc
and
xchg
stos
sbb
adc
add
jl
ret
push
sub
mov
lods
fwait
int
sub
in
lea
jg
cmp
cwtl
jns
mov
pop
lret
mov
push
fists
xor
add
dec
lahf
cwtl
fwait
pop
cmp
xchg
mov
cmp
or
cltd
je
rcrl
adc
push
push
add
adcb
sub
ret
mov
push
ds
pop
pop
popa
test
mov
pop
cs
leave
mov
out
subb
lock
sahf
mov
movsb
xchg
push
pop
mov
adc
cli
sub
adc
clc
and
xor
clc
cwtl
cmp
dec
dec
js
mov
adc
lods
call
lock
sbb
orb
push
mov
cmc
insb
icebp
xchg
fnstcw
inc
ret
sub
xor
lods
pusha
push
mov
xchg
data16
inc
inc
mov
dec
rcrl
das
mov
cmp
rcll
popa
pop
pop
mov
mov
pop
test
subb
hlt
jmp
ljmp
mov
or
push
outsb
sub
je
or
test
js
xor
arpl
ror
mov
aad
xor
xchg
daa
fwait
sbb
cwtl
cmc
cmc
push
test
push
jne
pop
leave
inc
jnp
mov
movsb
and
int
leave
enter
je
cwtl
push
sbb
loope
rcrl
jmp
ret
fsubl
add
lahf
push
xlat
leave
and
jmp
sahf
sub
and
mov
sti
push
push
in
popf
ds
dec
inc
movsb
mov
adc
mov
mov
outsb
repnz
cld
cltd
ret
inc
mov
cmpsb
pop
xchg
out
dec
inc
xchg
dec
adc
adc
pusha
iret
cmp
mov
dec
sbbb
jmp
enter
adc
cltd
js
adc
hlt
cmp
loopne
add
or
push
pop
call
js
pop
mov
ljmp
shrl
sbbl
lcall
adc
inc
xchg
rorb
test
jge
pop
test
inc
out
div
bsr
cmpsl
jne
out
xchg
das
rolb
pop
push
stos
and
xlat
cmpsl
push
sub
out
adc
pop
mov
or
mov
sub
push
movsl
adc
in
and
movsb
out
rolb
ja
popf
sbbb
push
sbb
mov
data16
and
inc
inc
jp
mov
mov
jl
lahf
pop
in
pop
push
jecxz
inc
mov
jmp
inc
pop
aam
pop
dec
das
hlt
pop
and
and
rcl
sbb
and
jmp
pop
adc
adc
int
rorb
lret
repnz
dec
movb
jl
and
pop
lret
gs
xor
pop
insl
add
int3
cmp
inc
in
jl
shlb
aaa
inc
pop
test
aad
push
imul
mov
movsl
mov
push
cmc
inc
ds
pop
push
pop
push
int
jge
cli
flds
sub
add
imul
add
inc
les
xor
jo
bound
mov
push
lret
sti
mov
sbb
xchg
insl
fsubrs
lahf
aas
in
in
add
mov
outsl
divl
imul
sarl
lcall
pop
xchg
xor
rcrl
xchg
and
adc
daa
sbb
jge
sbb
lret
pusha
adc
popa
adc
inc
inc
sub
pop
add
dec
cmp
shlb
jb
lahf
fnstenv
pushf
jp
popf
push
pop
daa
mov
pusha
mov
jg
outsl
aad
add
cmp
inc
sbb
sub
mov
shlb
sbb
icebp
and
ja
js
sti
xor
xchg
ficoms
iret
rcrb
sub
ljmp
or
cwtl
add
push
mov
pop
in
jae
cmpsb
push
cmp
sbb
mov
xor
enter
cmp
lcall
adc
add
fwait
ljmp
shll
jno
out
ja,pt
jns
call
adc
daa
cmpsl
cmpsl
jno
popa
addr16
aam
jne
cmpsb
and
in
outsl
imul
dec
mov
hlt
sahf
gs
or
in
fsubrl
subps
or
jl
clc
jb
imul
mov
incb
sub
insl
ret
fdivl
pop
in
dec
aas
xchg
in
gs
adc
xchg
mov
push
and
and
and
pop
mov
push
mov
push
imul
pop
icebp
inc
decb
push
div
ret
outsb
int3
test
xchg
ja
js
mov
jp,pt
shrl
mov
dec
popa
inc
pop
xlat
jp
test
gs
adc
addr16
push
adc
dec
pop
push
pop
in
mov
sub
sub
cmp
jbe
cmc
cld
lahf
adc
mov
inc
je
jecxz
rolb
jmp
sahf
pop
mov
xor
ljmp
and
and
fucompp
mov
test
pop
pop
jne
lea
cmp
dec
and
push
out
cwtl
pop
fsubr
xchg
adc
add
lret
mov
pop
loopne
sbb
das
shll
push
ret
loop
insb
pop
ljmp
ja
cmc
xor
lret
pop
int
adc
xchg
outsl
and
les
mov
and
stos
pop
popa
push
fisttpll
cld
adc
lods
mov
xchg
lcall
mov
sahf
stc
ret
cld
push
pop
pop
cwtl
mov
push
sbb
mov
rolb
jmp
popa
mov
xor
mov
jbe
es
lods
bnd
mov
jg
mov
adc
in
dec
cld
roll
sub
mov
mov
push
mov
jg
or
loope
adc
aam
sbbb
sbbl
cmpb
sbbb
jp
push
mov
mov
push
mov
mov
rcll
pop
mov
jmp
fsubrl
ds
insb
xchg
addr16
fwait
mov
inc
popa
icebp
sti
mov
ljmp
pop
inc
jbe
ffree
outsb
ret
mov
sahf
dec
mov
add
loop
cmp
jmp
out
cs
push
fisttpl
dec
out
das
jmp
mov
pop
in
dec
pop
rcr
xchg
arpl
push
test
imul
iret
dec
pop
clc
inc
fsubl
cmpsb
int3
js
xchg
popl
pop
es
arpl
out
ror
mov
testl
cmpsb
sbb
ret
mov
lods
and
push
push
popl
iret
add
shlb
xor
hlt
sbb
pop
mov
sahf
adc
xor
addr16
dec
add
pop
cmp
push
out
and
mov
jbe
mov
inc
lcall
movsb
push
popf
das
xor
cmp
jns
notb
aad
scas
xlat
and
fisubs
lock
decb
xchg
cwtl
cli
jecxz
or
jnp
add
pushf
mov
cmc
or
shrl
cmp
xchg
mov
cmp
xlat
shr
mov
fwait
push
iret
xchg
and
sbb
aad
mov
shrl
fwait
or
pop
int3
cmpsb
xor
jge
ss
mov
jg
push
flds
cld
mov
xchg
cmc
loopne
mov
mov
xchg
inc
xchg
push
scas
pop
scas
and
xchg
mov
xorb
jno
push
pop
adc
out
ret
leave
mov
add
push
nop
cvttps2pi
test
sub
mov
ds
jbe
scas
pop
jp
leave
dec
add
xchg
cmp
mov
das
or
dec
addb
cmpsl
xchg
xor
mov
xor
ljmp
adc
mov
orb
adc
sbb
xor
mov
loopne
lret
mov
xchg
shrb
incb
inc
dec
shlb
mov
shrl
mov
es
icebp
repz
sbb
mov
inc
les
sti
cld
cmp
fwait
inc
test
xchg
sti
std
xchg
pop
addb
lahf
push
in
lods
mov
mov
jne
push
push
mov
mov
frstpm(287
in
and
insb
sbb
mov
mov
adc
int
pop
and
xchg
or
dec
pusha
loop
sub
sbb
cli
pop
jae
mov
xchg
popa
cli
imul
into
test
or
mov
jle
iret
dec
xchg
and
xchg
and
cmp
lea
in
leave
dec
test
out
test
sub
lcall
xor
push
movsl
stos
aam
and
dec
dec
lock
push
ficomps
stos
mov
hlt
mov
subb
out
pop
or
push
pop
in
add
mov
xor
mov
das
call
cli
lahf
pop
call
dec
leave
mov
push
jl
xchg
mov
sbb
cmp
dec
jb
sbb
pop
in
mov
cmp
pop
pop
rcrb
fdivrp
inc
cmp
jne
mov
adc
mov
test
xchg
pop
into
rolb
or
xchg
dec
outsl
mov
cltd
dec
sub
mov
loop
pop
into
popf
out
xor
dec
shll
mov
sbb
and
push
dec
pop
pop
imul
andb
sub
aaa
and
lcall
xor
ja
cmp
jecxz
mov
test
push
orb
jo
out
loope
cmpsl
sbb
cmp
sub
pop
and
xchg
dec
mov
fcomps
ror
in
jge
std
sub
lea
mov
inc
fcoml
stos
andb
or
hlt
xor
arpl
icebp
pop
ja
xchg
gs
testl
ret
aad
shll
adc
push
jns
lahf
daa
adc
std
hlt
lcall
fists
dec
mov
cmp
fwait
out
push
ja
cli
pop
push
or
jg
mov
or
push
cmp
jns
scas
ja
mov
aam
lret
jne
ljmp
fistps
or
inc
mov
fs
imul
adc
scas
ljmp
push
in
mov
jno
rcr
dec
push
inc
and
jle
adc
ja
and
dec
push
dec
cmp
or
pop
sub
adc
and
mov
out
std
xchg
jl
push
cmp
movsl
loop
pop
cmp
out
mov
cmp
xor
insl
in
aas
fdivr
repz
cmp
les
leave
adc
cltd
and
inc
scas
movsb
fstpl
testb
mov
mov
nop
xlat
cmp
insl
lds
cmpsl
mov
movntq
repnz
sbb
popa
ds
popf
jmp
push
pop
pusha
jb
jp
cmc
call
xchg
or
sbb
outsl
cmpb
xchg
js
shll
nopl
rcrb
rcl
cmpsb
sbb
fimuls
dec
mov
xchg
xor
sub
push
sbbb
test
call
dec
jl
and
cmp
inc
mov
adc
push
push
mov
mov
iret
mov
add
stc
sub
mov
mov
push
push
and
sub
cmp
and
xlat
or
inc
inc
frstor
leave
cmpsl
xlat
add
inc
lock
data16
add
iret
jg
cmp
push
inc
xor
adc
or
popa
fwait
inc
dec
pusha
fs
movsl
cmp
or
testb
call
xlat
xchg
and
adc
pop
sbb
in
lret
jo
fsubr
icebp
into
xchg
xor
dec
push
dec
ljmp
repnz
fld
mov
loop
subb
gs
mov
xchg
ret
xchg
mov
adc
and
lock
jo
iret
dec
xor
dec
push
or
pop
lcall
inc
popf
inc
push
clc
xchg
scas
fmull
sub
jbe
push
dec
into
sub
xchg
mov
lahf
outsb
enter
lods
scas
jae
xor
mov
mov
cmp
jns
movaps
in
sbb
test
inc
cwtl
pop
enter
mov
outsb
xchg
jl
aas
sahf
mov
push
stc
mov
push
lret
inc
inc
cld
mov
repnz
nop
xor
push
ljmp
mov
lods
in
das
jnp
adc
daa
adc
adc
loopne
cmp
fmul
orl
repnz
lcall
push
in
pop
fwait
insb
sbb
jnp
repnz
push
jno
rol
mov
xor
cmpsb
xchg
adc
cwtl
push
inc
insb
bound
outsl
shr
and
xor
pop
outsl
call
hlt
out
es
enter
jno
inc
xchg
xlat
xor
addr16
mov
push
dec
popa
push
and
icebp
and
cmp
out
mov
dec
pop
pop
pop
das
aam
jg
push
ss
sbb
movsb
add
dec
jge
add
pusha
sbb
shlb
popa
pusha
mov
hlt
sbb
jg
insb
xchg
push
add
idiv
aas
and
mov
cmp
fwait
loopne
loopne
mov
movsl
in
dec
addl
ljmp
stos
mov
imul
adc
imul
push
mov
and
xchg
repz
jecxz
fstps
movsl
cmp
insl
inc
push
push
jno
add
pusha
and
add
shll
adc
mov
inc
adc
popa
xor
add
pusha
and
add
shll
adc
mov
inc
and
jns
jne
add
pusha
and
nop
aad
loope
clc
rolb
push
adc
dec
mov
test
xor
inc
adc
lock
cmpb
jnp
loope
xchg
leave
bound
jb
inc
push
push
push
xchg
push
pop
or
pop
inc
jecxz
repnz
ret
xchg
xchg
bound
jb
inc
push
push
push
and
data16
inc
repnz
mov
faddl
adcb
pop
push
dec
push
cmp
data16
inc
sti
push
shll
mov
movsb
ss
push
jno
xor
sub
scas
dec
ret
mov
stos
xor
add
pusha
lea
or
xor
addr16
fistpl
xchg
sub
repnz
popf
outsb
mov
loope
push
sti
mov
mov
shrb
cli
push
pop
jnp
testl
arpl
bound
fnsave
data16
fsts
mov
imull
pop
pushf
mov
or
xchg
dec
xor
fxch
xchg
mov
fnsave
jae
inc
loop
loop
xor
ret
imul
sbb
orb
xchg
flds
add
jmp
and
cmpsb
sbb
xchg
and
imul
push
push
push
xor
push
or
mov
cmpsb
ficoml
stos
out
xchg
scas
push
pop
pop
es
jg
outsl
push
sbb
sbb
push
loop
sahf
shlb
xchg
xlat
xchg
lock
xchg
push
and
xor
add
inc
inc
mov
notl
hlt
mov
xchg
pop
jg
jne
jle
arpl
xor
push
adc
mov
cmpsb
ret
xchg
xchg
bound
jb
inc
push
push
push
and
data16
inc
loop
repnz
ret
xchg
xchg
bound
pop
outsl
std
movsb
and
mov
int3
mov
loope
jge
mov
xor
nop
cli
mov
outsl
ret
xor
stos
sbb
int
movsl
xchg
movsl
test
out
insl
out
mov
sub
and
lods
inc
scas
sbb
pop
sub
shr
and
es
rolb
cmp
repz
fs
repnz
add
xlat
out
mov
push
fisubl
or
test
xor
mov
lock
mov
popf
cltd
jno
iret
cmp
pop
shll
pop
inc
add
mov
or
mov
jne
mov
fistpl
not
dec
or
loop
orl
fisttps
mov
sub
into
leave
bound
and
dec
inc
in
jb
in
out
mov
nop
icebp
mov
jne
and
or
jne
out
out
add
cld
jnp
stos
mov
jmp
clc
call
push
pop
mov
and
js
jl
insb
hlt
or
rcll
incl
in
imul
dec
pop
roll
notl
adc
repnz
in
cmc
testl
mov
pop
inc
outsb
divl
insl
insl
jmp
es
sub
add
repnz
dec
icebp
in
test
adc
xchg
xlat
cmp
ljmp
jg
aam
add
pop
sub
mov
mov
fisttpll
pop
out
popa
xor
fsubp
lods
cmp
loop
sahf
xor
push
jg
cmp
mov
out
or
std
cmp
mov
mov
pusha
aas
jp
dec
fildll
mov
out
add
fadds
jp
add
cmc
xor
add
ljmp
cld
arpl
jns
pop
pop
adc
mov
ss
mov
repz
dec
imulb
or
icebp
movsb
jb
push
out
jmp
inc
pop
and
jne
mov
or
js
push
mov
imul
call
cmpsb
inc
adcb
lahf
or
cmpsl
jo
fcoms
or
aas
xor
mov
xchg
jp
icebp
in
xor
insb
mov
fdivs
bound
dec
jl
cmp
test
insb
sahf
mov
xor
js
xor
mov
xchg
push
ja
stos
mov
xor
ljmp
xor
xchg
inc
ret
in
test
fdivs
sbb
mov
push
mov
adc
jl
imul
mov
dec
enter
xchg
push
pop
mov
jo
jbe
in
shlb
mov
lock
jnp
push
cld
pop
repnz
cmpsl
jp
mov
cwtl
and
push
and
je
mov
popa
adc
pop
jne
fwait
push
inc
lret
fiaddl
pop
inc
lock
and
lcall
icebp
inc
jno
pop
jl
mov
inc
xor
sahf
adc
xor
xor
cs
pop
push
ficomps
mov
ja
dec
dec
dec
and
pop
gs
leave
or
cmp
mov
sbb
cwtl
or
xchg
insb
daa
in
xchg
aam
or
add
insb
xchg
shrb
mov
pusha
dec
mov
add
adc
insl
addl
jno
inc
dec
fisubl
clc
lret
std
test
xchg
jbe
test
cmp
sbb
loop
sub
sbb
decb
in
bound
pop
pop
mulb
xlat
lret
lea
mov
pop
adc
mul
mov
push
inc
insb
ret
fstl
std
adc
and
mov
sub
mov
xor
bound
sub
push
pop
jge
mov
imul
jmp
ds
dec
push
rcrl
das
fstpt
jmp
xchg
sub
loopne
push
insl
xchg
sbb
lahf
and
push
lock
dec
insl
aas
out
std
bound
mov
xchg
push
subb
mov
stos
mov
andl
push
daa
lea
lahf
jne
push
or
xchg
jo
push
inc
cmpsb
int3
push
xor
and
jp
out
add
mov
aaa
arpl
arpl
ret
pop
es
daa
sbb
mov
loop
jb
push
mov
sbb
outsl
rcl
outsl
xor
lods
mov
sahf
loop
out
movsb
std
xadd
pop
sti
xchg
xchg
mov
cwtl
daa
mov
jne
or
jl
int3
push
inc
mov
xor
gs
xchg
ds
fwait
and
pop
dec
jle
dec
xchg
out
inc
or
inc
aaa
movl
adc
adc
adc
or
sti
inc
push
sub
aaa
fdivl
or
pop
mov
xchg
ljmp
cmpsl
pop
jnp
mov
mov
les
or
mov
xchg
pop
dec
cmp
lds
sti
mov
out
push
fistps
sti
test
out
imul
shrl
xor
mov
cmp
addr16
push
loopne
push
adc
pusha
push
daa
and
mov
push
mov
insl
sarl
sbb
imul
xchg
cmp
fisubrl
pop
xchg
movsb
cwtl
shlb
mov
jae
mov
sub
addb
and
xchg
in
lret
sub
jecxz
lea
xor
jg
insb
adc
inc
popa
or
movsbl
es
popf
push
ss
jb
adc
bound
je
aad
cmp
movsl
aaa
add
cmp
xchg
adc
add
movsl
sbb
mov
sahf
loop
sahf
pop
xchg
sahf
sbbb
dec
and
popa
fistpl
sbb
mov
addr16
sub
xchg
jp
xchg
push
or
scas
mov
mov
jo
adc
jge
inc
jp
fisubrl
movsb
push
fsubp
negb
ss
ficompl
test
push
sti
inc
cmpsb
mov
test
insl
in
xor
aaa
int
sbbb
jmp
dec
sub
xor
mov
int3
dec
stc
mov
je
fisttps
sub
sbb
movsb
jo
add
outsl
sub
mov
lcall
lcall
flds
call
sti
scas
into
je
sub
fdivrs
stos
mov
lret
nop
test
stos
and
push
data16
pop
fxch
inc
sbb
dec
loopne
into
sahf
xlat
or
mov
cmp
pop
scas
repnz
pop
ret
xor
sub
mov
push
cmp
mov
loopne
or
xor
iret
scas
fiadds
scas
repnz
es
jno
orb
jb
xlat
loop
push
add
xchg
push
or
gs
sub
mov
iret
xchg
mov
sbb
popl
pop
jecxz
stc
rolb
ja
outsb
ja
fadds
fnstenv
sbb
or
pop
arpl
push
stc
popa
daa
and
mov
imul
in
mov
and
pop
inc
xor
or
xor
push
jge
mov
pop
ja
or
loope
in
cmp
std
or
fdivl
and
xor
aas
mov
in
lock
adc
andl
jno
cwtl
test
and
inc
ds
je
cmpsl
or
jb
pop
icebp
lods
into
call
dec
in
xchg
aaa
in
jno
and
fsubs
jmp
push
inc
cmp
sub
cmpsb
push
sahf
jnp
push
test
ss
xchg
repz
enter
jbe
fistl
imul
in
cmpsb
loop
pop
push
pop
nop
jl
push
pop
jmp
dec
pop
xor
sbb
cwtl
jmp
test
enter
adc
mov
mov
pop
or
popf
or
push
stos
inc
sub
mov
lcall
jns
fidivl
jg
movsl
into
test
jne
mov
or
adc
dec
subl
sbbl
or
and
mov
push
in
and
xor
inc
pop
lret
out
cmp
mov
inc
mov
mov
mov
fs
cmp
fsts
cwtl
inc
bound
pop
push
pop
pop
les
mov
clc
cmpl
dec
dec
jno
lds
jmp
aam
mov
mov
stc
fs
insl
outsl
and
int
mov
inc
mov
pop
sub
fiaddl
jno
in
lcallw
rcrb
lds
mov
nop
and
insl
lds
cmp
push
push
std
xchg
mov
inc
inc
fs
scas
inc
mov
mov
cmp
imul
ljmp
sub
imul
dec
push
imul
mov
mov
iret
frstor
rcrb
xchg
lret
cmp
ret
push
addb
je
ja
sub
pop
push
inc
push
mov
aaa
inc
inc
adc
pop
pop
adc
dec
mov
push
jp
sarb
lods
outsl
mov
test
cmpsb
jns
iret
push
pusha
mov
push
jmp
cs
in
stos
rclb
and
push
dec
nop
push
cmp
xor
mov
mov
ss
popa
lds
jp
loop
mov
sub
push
cmp
into
xchg
cmc
in
das
fildll
cmp
inc
aas
or
xchg
insb
scas
loop
mov
hlt
xlat
sbb
sub
inc
xchg
ret
mov
mov
pop
sub
rorb
pop
jl
ret
push
lahf
out
mov
and
mov
js
int
cmpb
jl
popa
jg
xchg
outsl
out
push
lret
hlt
sub
mov
lcall
mov
pop
movsl
cli
je
sti
in
lea
inc
out
lret
ret
imul
daa
lods
adcl
sti
scas
mov
cwtl
faddp
test
jle
cmp
dec
adc
shlb
movsl
out
pop
inc
pop
fldcw
sbb
jne
fninit
and
filds
out
mov
xchg
out
in
clc
lret
das
jp
inc
fimull
cmp
push
jg
push
push
dec
dec
stos
cmp
pop
sub
xor
push
or
jnp
mov
jno
fistpl
inc
xor
aaa
lock
mov
scas
xor
movsl
cli
roll
jns
fs
sbb
sub
stc
sbb
xchg
mov
pushf
je
orl
andl
push
push
jge
sbb
mov
push
add
imul
jmp
xor
push
dec
fnstenv
inc
dec
lds
fidivl
add
jno
movsb
or
in
stos
outsl
out
outsb
sub
cli
fwait
dec
ret
mov
sub
out
dec
and
and
jb
call
sub
in
dec
sahf
cmp
mov
ljmp
pop
outsl
notl
in
pop
mov
cmp
dec
rolb
fsts
pushf
aam
mov
mov
push
dec
xchg
and
push
jl
pop
xchg
imul
repz
mov
pop
cmp
das
sbb
out
rclb
inc
xchg
pop
test
add
mov
mov
xor
and
cltd
xchg
xor
mov
sbb
sbb
push
in
mov
popf
or
xor
adcl
sub
sbb
and
bound
xchg
icebp
std
loope
mov
cmpsb
loop
sti
in
xchg
imul
dec
jge
jbe
clc
sar
jno
add
lret
adc
inc
out
mov
movsb
roll
std
mov
sti
in
popa
xor
mov
dec
jp
and
aas
int
mov
inc
or
ret
sbb
pshufw
inc
cmp
jg
clc
xchg
lcall
cwtl
std
ljmp
pop
mov
outsb
jb
and
push
bnd
pop
push
mov
sub
xchg
xor
int3
movsl
loop
iret
test
popf
outsb
testb
fistpll
mov
jo
fcoml
int3
int
out
stos
inc
aaa
dec
int3
dec
push
les
enter
cmpsb
push
mov
arpl
lcall
aas
call
lahf
add
inc
subb
mov
ficompl
test
enter
ss
test
inc
pop
addr16
xchg
mov
or
ja
cmp
push
sub
sbb
pop
gs
imull
push
es
dec
scas
andb
in
mov
out
lods
hlt
xor
leave
cltd
pop
into
sti
mov
cltd
out
loopne
ds
daa
pop
lret
mov
lahf
and
mov
add
adc
mov
jmp
pop
pop
ljmp
outsl
cli
inc
mov
popf
cli
das
enter
imul
dec
fs
in
mov
and
leave
loopne
dec
arpl
mov
insb
push
sbb
add
gs
stc
and
ljmp
test
stos
shl
cmp
jmp
lods
push
pop
cmp
stos
shll
loope
inc
stos
cmp
fistps
outsb
ljmp
insl
lods
stos
adcl
fldcw
cmp
out
or
sarl
loop
mov
cmc
stos
rclb
mov
or
sub
popa
and
call
or
insl
mov
bound
xchg
cli
pop
call
aad
cltd
sub
filds
push
cmp
push
sbb
call
sbb
fwait
inc
xlat
jne
and
xchg
icebp
jmp
jge
push
and
sub
pop
test
clc
sbb
xchg
push
xor
inc
outsl
pusha
add
movntps
pusha
jb
jle
sub
xchg
imul
aad
push
mov
addl
sbb
add
jge
mov
lcall
mov
add
mov
fimuls
je
pop
cmp
and
lcall
insl
popf
dec
aad
inc
ret
push
and
cwtl
mov
pop
sti
add
aas
pusha
test
add
cld
xchg
inc
out
jbe
sub
iret
dec
roll
in
mov
loope
dec
push
and
add
mov
pop
popa
movsl
inc
jg
lea
dec
sbb
in
sbb
jle
popa
ljmp
cwtl
into
adc
lods
dec
leave
xchg
dec
shrb
out
cmpsl
pusha
xlat
addl
out
inc
insb
jbe
add
push
jns
sub
push
push
sub
push
lret
sarl
out
insl
jbe
add
lret
jne
xor
dec
es
fistpl
out
bound
mov
or
add
nop
mov
mov
cli
jb
dec
add
daa
nop
aas
adc
add
cmp
jno
xor
popa
pop
dec
clc
ljmp
pop
adc
out
ret
in
es
cmp
test
inc
xchg
outsb
dec
mov
movsb
sbb
lock
xchg
inc
daa
mov
mov
lock
mov
inc
daa
into
fildll
pcmpgtb
aas
test
cmp
or
sbb
movsb
jnp
push
xor
outsb
dec
pop
xor
repz
xor
push
out
and
je
fwait
popa
dec
loop
js
mov
xlat
cmp
movb
outsb
shl
mov
clc
jne
mov
enter
aad
arpl
xchg
imul
sub
add
aaa
add
pusha
nop
dec
out
ljmp
cmp
repz
addr16
or
notl
orb
push
mov
out
test
xor
xor
lahf
out
push
push
add
mov
mov
xor
iret
cltd
iret
dec
jo
add
mov
jecxz
sbb
push
mov
fyl2xp1
cmpsb
out
cmp
loop
mov
and
adc
scas
mov
outsl
pop
testb
inc
or
or
rcrb
test
fwait
add
push
xor
fcom
inc
push
dec
lock
out
jmp
mov
in
popf
cli
pop
jg
xchg
fabs
in
sbb
daa
push
add
icebp
sub
inc
xchg
sti
dec
imul
or
out
movsl
dec
or
fistpll
sbb
dec
repnz
push
mov
ss
mov
adc
adc
jae
lock
lret
pop
inc
sub
pop
adc
push
mov
ja
shl
js
subl
adc
imul
call
addr16
fwait
lods
adc
pusha
cltd
xchg
and
pop
dec
mov
push
mov
jmp
lahf
push
movsb
ds
test
pusha
enter
loop
scas
and
adc
addr16
xchg
test
lods
mov
notl
cmpsl
inc
jb
push
or
ss
loop
sahf
cltd
into
das
mov
cmp
and
sahf
push
sbb
outsb
clc
call
sbb
sub
repz
test
ret
mov
shll
pop
nop
ret
sete
xlat
dec
or
cmp
cmp
ljmp
shrl
and
out
ja
test
sub
sar
in
inc
and
pushf
cwtl
jo
pop
shll
mov
push
add
mov
outsb
inc
movsl
mov
cwtl
jo
fwait
xor
mov
mov
inc
loop
in
mov
std
pop
jne
xor
jecxz
iret
jb
pop
xchg
xchg
push
out
and
lcall
mov
into
jle
jno
mov
sbb
xchg
push
xor
loope
data16
fwait
shld
jns
insl
popf
sub
clc
pop
xchg
inc
in
or
push
xchg
lret
pop
icebp
gs
shl
pusha
hlt
push
out
aam
sahf
arpl
push
imul
sub
mov
loopne
mov
or
cwtl
in
cmp
fisttps
inc
shll
cmp
andl
loope
pop
inc
imul
mov
jnp
sahf
repnz
cmp
pop
pop
scas
xor
mov
rorb
xchg
or
lea
jo
pop
mov
jl
out
cmp
pusha
dec
mov
fsub
mov
out
mov
adc
mov
shll
and
lahf
mov
add
mov
orb
mov
gs
loop
jl
cmp
mov
xor
mov
data16
rcrb
aas
decb
sahf
dec
jne
rcrb
or
xlat
cmp
jecxz
pop
lods
xchg
repz
jbe
and
bound
jne
xchg
inc
push
pop
out
xor
sbb
add
jns
imul
pop
xor
icebp
sbb
sub
aam
aaa
dec
push
jmp
sub
insb
insl
inc
cli
nop
dec
pop
or
ljmp
ss
cwtl
sbb
inc
pushf
mov
xchg
stos
mov
add
scas
into
jle
mov
jmp
inc
sub
outsb
fidivrl
iret
inc
js
ss
lods
loope
in
push
jae
dec
xchg
ss
dec
mov
mov
push
xchg
dec
in
fsubs
pop
mov
xchg
popa
in
jnp
cltd
push
xchg
rclb
pop
mov
xor
insl
repnz
mov
sub
push
in
cmpl
sub
pop
cmpl
mov
xor
nop
cmc
add
push
add
pop
mov
sub
std
daa
xchg
sbb
popa
das
ds
jle
jbe
out
scas
mov
mov
push
lret
mov
jno
ret
aam
ret
jg
ret
adc
xchg
jns
push
mulb
cmpl
cli
pop
xchg
cmc
lahf
mov
inc
test
push
adc
lret
cs
xchg
out
fs
adc
push
scas
xchg
sbb
addr16
xor
dec
es
mov
es
cmp
sbb
or
data16
fimuls
lods
push
mov
int
xor
data16
sbb
adc
jne
ja
fisubrs
mov
xchg
aam
loop
add
sbb
or
ljmp
dec
adc
test
mov
sub
scas
cmp
leave
adc
cmp
jge
mull
lea
mov
in
pop
sar
lea
dec
inc
adc
mov
cmp
lcall
cmp
jne
pop
mov
into
inc
data16
sbbl
imul
add
and
pop
jae
xchg
pop
out
sti
add
xchg
pop
fucomip
jno
fmull
arpl
shll
and
test
fwait
push
sub
jnp
mov
xor
lahf
sub
les
xchg
or
lret
jl
push
in
mov
jne
and
out
jle
lret
int3
fists
adc
lret
inc
xchg
add
mov
inc
and
addr16
int3
xchg
adc
out
data16
fiadds
dec
aas
fisttps
mov
test
xor
or
adc
repnz
nop
shrl
add
ret
subl
sbb
aaa
pop
mov
pop
jns
mov
movsb
or
dec
mov
and
dec
dec
test
push
test
pusha
icebp
push
fimuls
add
fs
cs
push
push
push
and
data16
inc
loop
repnz
ret
xchg
xchg
bound
jb
inc
push
push
push
and
data16
inc
loop
repnz
ret
xchg
xchg
bound
jb
inc
xchg
push
push
and
out
push
adc
repnz
ret
xchg
nop
bound
jo
inc
push
push
push
and
data16
sbb
xchg
shl
aad
cmp
jge
insl
cmp
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
and
out
mov
cmp
xor
inc
mov
insl
in
pop
clc
bswap
das
fsubrs
and
cmp
or
sbb
push
mov
mov
outsl
call
aas
fsubrs
repnz
mov
idivb
xor
test
aam
out
or
outsl
enter
mov
fistps
cmpsb
dec
mov
jecxz
cmp
outsb
fwait
aam
les
hlt
mov
je
subb
ja
adc
adc
jno
xor
inc
cmpsl
ja
jae
insl
lcall
js
sub
mov
or
call
ret
ljmpw
cmp
xchg
insl
popl
jne
dec
fildll
xchg
out
push
mov
lahf
addr16
gs
cli
lock
lds
testl
sti
jae
out
adc
ja
fwait
outsl
sbb
sbbb
cmp
idiv
mov
outsb
int
mov
pop
mov
jg
dec
clc
jp
ror
sbb
cmp
or
je
push
cmpsb
loopne
pop
inc
sub
data16
pop
out
enter
pop
mov
jbe
push
leave
or
ret
stc
aaa
fsubrs
stc
add
aas
lahf
inc
sub
shr
add
sbb
nop
es
cs
or
sub
insl
popf
pusha
mov
sahf
or
sub
mov
mov
outsl
call
aas
fsubrs
sub
cmp
or
sbb
push
mov
mov
outsl
call
aas
fsubrs
sub
cld
dec
mov
mov
inc
shlb
dec
into
push
stc
dec
das
fdivrp
fwait
das
inc
jb
pop
shll
ss
adcl
in
mov
and
jecxz
or
pop
out
icebp
lcall
adc
rorb
addl
and
lds
or
xorb
and
out
les
jecxz
jmp
adc
xchg
std
inc
pop
fstpl
fdivrl
cmp
out
or
mov
mov
loope
int3
pushf
test
negl
stc
arpl
cltd
mov
loop
adc
inc
adcb
int
aad
call
push
dec
shll
jg
rol
and
les
es
das
out
fwait
subb
xchg
lds
negl
xor
lods
xchg
fldenv
push
push
ret
pusha
aas
xor
mov
out
mov
inc
divb
or
js
dec
stos
cmc
cmp
xchg
pop
cwtl
aad
xchg
mov
andl
adc
add
pop
xchg
enter
add
jb
fdivrp
adc
cltd
push
inc
push
int
in
mov
jae
mov
and
into
insl
adc
popf
leave
daa
lock
in
jns
push
out
aaa
dec
call
and
shll
xlat
fadds
jo
push
popf
dec
sub
icebp
in
fsubr
jb
jnp
inc
call
cmpsb
push
in
aam
cmp
dec
dec
add
adc
inc
xor
hlt
and
ja
xchg
fcmovbe
adc
rcll
mov
inc
inc
insb
and
push
repz
sarl
mov
and
negb
rcrl
adcb
mov
and
rol
lret
pop
dec
lock
in
sub
aad
test
sub
lds
dec
mov
es
std
repnz
test
pop
mov
movl
adc
or
dec
dec
fmuls
arpl
pushl
fistpl
scas
dec
jp
or
cmp
jnp
jno
adc
stos
enter
ja
push
jmp
clc
pusha
xlat
sub
add
orb
shlb
mov
dec
nop
cltd
add
fwait
adc
push
xchg
inc
pusha
scas
cmp
jae
je
lret
sbb
jge
sub
sbb
jb
repnz
push
mov
dec
jne
lahf
mov
push
jnp
das
test
mov
in
xchg
pop
mov
mov
divb
cmpsl
or
fcomps
es
into
and
cli
in
test
jne
adc
loop
pop
fstps
mov
push
idivb
pop
mov
sbb
mov
in
jp
ja
dec
xor
add
cmp
lcall
and
fdivrl
mov
ds
hlt
dec
push
in
lods
push
jo
imul
mov
stos
jg
mov
cmp
mov
cli
mov
in
ret
jae
mov
je
cmc
cmpsl
push
lds
add
sbb
test
aas
sbb
inc
dec
push
and
aas
dec
xchg
jmp
add
jns
aas
jg
lods
fisttps
xorb
jge
mov
test
and
ret
pop
adcb
rcrb
or
testb
mov
in
push
jg
stos
stc
imulb
fistps
int
ret
divl
iret
ja
addb
jnp
data16
mov
or
addr16
leave
hlt
or
mov
xor
or
or
ds
cmp
fs
lods
clc
xchg
jmp
inc
ja
push
sbb
std
ss
fsubrs
cmp
add
in
xchg
jb
jnp
push
pop
push
xchg
les
cmp
repnz
cltd
xor
jne
or
bound
dec
idivl
jne
inc
mov
push
adc
into
arpl
push
and
mov
lds
inc
jbe
stc
inc
sub
pop
dec
dec
in
js
movsb
xchg
das
gs
fbstp
out
in
hlt
cmp
test
pop
or
or
movl
pusha
mov
ja
negl
loopne
or
loope
push
dec
popf
push
mov
xor
jge
sahf
stos
inc
aad
jo
dec
jmp
push
lea
jmp
sahf
mov
cltd
outsb
mov
pushl
add
sub
pop
shlb
xchg
mov
arpl
xlat
imul
add
mov
movsl
lea
cmp
and
lea
push
pop
pop
pop
mov
xor
cmp
cwtl
pop
inc
sub
inc
add
orb
pushf
call
inc
lahf
xchg
sub
push
adc
add
imul
and
sbb
test
push
sub
xor
ror
cmp
mov
movsb
jp
cltd
jne
mov
push
loop
jg
mov
cmpsb
aam
rorl
scas
das
daa
adc
decl
mov
jecxz
loopne
hlt
cld
xor
inc
orb
or
cmp
mov
cmp
call
rcrb
imul
jp
push
sbb
cwtl
ret
mov
sub
xor
push
cmpl
icebp
mov
aaa
outsl
in
scas
jb
or
in
jg
jb
cmp
mov
cwtl
mov
mov
in
dec
insb
mov
rcll
cmp
adc
test
add
stos
lods
clc
cmp
and
cltd
dec
mov
or
fs
das
iret
inc
sbb
divb
sarl
mov
ss
incb
lcall
mov
inc
xadd
jno
arpl
mov
jmp
and
mov
cwtl
sub
cmc
sbb
and
stos
xor
lds
sub
push
test
pop
xor
ljmp
xchg
mull
outsl
jne
xor
mov
and
cmc
cmove
outsb
sub
pop
push
movhps
iret
scas
lods
orb
lcall
and
popa
nop
cmpsb
lods
push
pop
or
sub
outsb
jl
popa
and
scas
cmpsl
negb
fldenv
xlat
sub
out
in
push
or
xchg
adc
and
loopne
push
scas
and
nop
stos
push
fucomip
ret
lock
icebp
xchg
inc
push
mov
mov
adc
mov
fnsave
popa
in
or
into
dec
push
enter
jb
xor
add
mov
xchg
mov
inc
mov
out
adc
dec
adc
fnsave
orl
jo
inc
packssdw
loope
imul
mov
inc
or
sub
jl
cmpl
lret
clc
pop
pop
lods
mull
push
jae
pop
fsubs
and
push
cmp
into
out
repnz
dec
sahf
int3
or
lods
mov
cmc
and
mov
pop
jno
add
xor
fisubl
inc
jge
mul
test
rcr
rcrb
mov
and
lds
movsb
scas
jne
cli
adc
sti
addr16
mov
mov
dec
xor
jle
and
inc
inc
fsubrl
mov
sahf
and
aam
jbe
callw
cmp
aaa
mov
cmp
mov
roll
dec
or
pop
adc
sbb
sbbb
leave
scas
push
nop
pop
test
and
mov
push
jg
xchg
cmpsl
mov
xchg
xor
test
mov
cmp
sub
inc
shl
les
aaa
test
sub
lods
xchg
push
add
pop
popf
mov
repz
cmp
xchg
add
test
stos
scas
adc
dec
add
push
sub
or
cmp
pushf
mov
sub
cmp
cmp
xorl
push
push
dec
ficompl
mov
xor
in
cmp
sahf
mov
bound
in
mov
scas
inc
ljmp
out
fmull
fdivl
cmp
jmp
call
mov
lcall
adc
xor
cmc
in
mov
fs
in
aam
lods
add
std
dec
js
push
lret
inc
nop
pop
test
add
aam
cmp
mov
test
sti
dec
cwtl
idivl
sub
rorb
sub
add
out
adc
ja
inc
pop
cmp
sti
mov
adc
sub
xchg
xor
mov
loope
adc
jmp
pop
movsb
dec
jno
or
dec
jecxz
sub
xchg
mov
cmpsb
insb
lods
sbb
out
push
cmp
mov
push
push
sbb
jp
lods
out
jmp
pop
pop
jl
push
sub
add
sbb
fcompl
push
sub
mov
pop
cmp
mov
test
fmull
or
gs
fsubrs
dec
dec
jmp
jmp
mov
cmpsl
adc
mov
ficomps
mov
mov
stos
enter
mov
mov
les
mov
stos
inc
and
cmp
sbb
bnd
inc
pop
push
sbb
push
les
sbb
mov
shlb
cmp
xchg
leave
stos
mov
je
sub
ds
add
cmp
xor
mov
push
out
pop
into
shlb
and
fsincos
mov
pop
dec
push
outsb
out
ja
mov
xchg
xchg
xchg
jl
mov
lock
mov
xchg
sub
mov
mov
dec
pop
sbbb
jnp
mov
imul
mov
pop
and
xlat
push
stos
cs
mov
sbb
add
test
stc
roll
sub
add
mov
xor
dec
rcr
xor
and
mov
or
add
repz
shl
js
and
and
std
add
cwtl
dec
cmp
adc
cmc
lods
call
sbb
ljmp
and
push
jns
call
fwait
movsl
mov
int
sahf
popf
mov
int3
and
addr16
fnstsw
jno
pop
clc
sub
fisubs
mov
or
dec
xchg
jnp
adc
adc
shll
add
incl
cmp
inc
pop
in
test
insb
jae
adcl
mov
das
lcall
inc
aas
mov
jp
add
hlt
cmp
sahf
insl
and
xchg
test
push
and
jge
mov
cbtw
push
nop
sti
aad
into
push
jl
icebp
sub
ret
adc
js
rcrl
sub
adc
add
xorb
ret
addps
sbb
or
rcl
loop
cmpsl
inc
leave
mov
jne
js
jecxz
jle
clc
or
mov
jns
jno
dec
push
cli
jl
insl
sub
adc
mov
orb
data16
and
dec
lret
out
xor
loope
add
cmp
repnz
fnstenv
cmpsl
clc
dec
push
push
sti
adc
xchg
out
nop
mov
adc
or
mov
mov
xchg
mov
jbe
pop
inc
jp
mov
or
pop
out
sbb
negl
out
or
or
cmp
jecxz
loope
adc
lcall
adc
mov
out
fdivrl
mov
dec
in
popa
push
out
inc
add
push
rolb
leave
test
lds
daa
mov
dec
xchg
lea
add
push
cmp
jne
inc
push
movsl
xchg
cld
jp
sbb
sti
jns
jbe
jmp
sahf
xchg
mov
pop
or
jecxz
add
mov
and
xlat
xor
cmp
es
mov
arpl
push
inc
cmp
adc
shl
mov
mov
adc
mov
pop
cltd
into
fwait
xchg
mov
mov
in
and
ficomps
nop
fildl
ja
xor
mov
mov
mov
outsl
cmpsb
pushf
and
push
gs
sub
push
orb
fisubrl
out
cmp
mov
xchg
ror
in
xor
cmp
xor
lods
jae
es
and
jne
adc
js
pop
dec
test
pop
dec
out
mov
data16
jae
sbb
popf
mov
test
sub
mov
sbb
movsl
pop
icebp
in
pop
cmp
nop
pop
rcl
mov
ds
fnstcw
mov
sub
mov
and
mov
fiadds
mov
xchg
fcmovbe
das
dec
pusha
mov
inc
loop
xchg
hlt
mov
rol
subb
inc
dec
js
mov
and
sbb
mov
pop
mov
add
int
sbb
outsl
test
scas
push
xchg
ja
jns
add
aas
inc
add
jns
and
call
lcall
or
pop
and
pop
bswap
inc
mov
sti
inc
rorl
lret
gs
pop
lret
jo
sub
outsl
mov
outsl
jns
cltd
xor
int
movb
dec
jo
pop
mov
pop
imul
iret
popf
test
cmc
je
out
iret
lods
aaa
repz
or
lret
push
dec
sub
out
stos
pushf
fwait
clc
jae
mov
cmp
add
push
lret
fbstp
mov
xchg
das
in
loopne
cmp
test
fidivs
pop
mov
xor
cmp
push
push
imul
push
in
inc
cmp
filds
adc
roll
in
add
or
sahf
std
data16
adc
or
popf
popa
pop
ret
sti
push
sahf
les
jnp
pop
sub
cmc
or
notb
jp
je
jmp
dec
mov
push
mov
aad
add
push
out
sub
adc
add
xor
jae
fcomip
mov
jp
add
jnp
or
popf
cli
ja
loop
jge
in
cmp
lock
push
leave
mov
mov
mov
int
pop
dec
out
and
push
stos
subb
lret
cmp
jmp
pop
push
arpl
sbb
jp
cmpsb
andl
or
mov
pushf
mov
jb
mov
ss
adc
and
jg
cmc
mov
movl
fsts
enter
fidivrl
out
add
ret
repnz
cmc
sub
jl
xlat
test
adc
pop
test
cmpl
sub
inc
push
cmp
mov
xor
jecxz
insl
clc
sbb
jnp
aad
inc
dec
dec
jno
mov
jge
in
cltd
mov
and
mov
xor
dec
and
cmp
dec
lock
outsl
xchg
pop
cmp
mov
push
sub
xor
add
mov
js
push
adc
scas
adc
push
rclb
push
jp
pop
xchg
out
mov
lock
decb
jbe
add
dec
pop
arpl
es
scas
lea
fistpll
xchg
les
test
stc
mov
aaa
ss
pop
pop
add
pop
rcll
and
mov
bound
sbb
movsb
or
dec
jo
scas
xor
push
popf
pop
sbb
or
sahf
dec
jb
pop
lcall
or
popa
addr16
add
aam
xor
mov
mov
in
push
mov
add
xchg
rol
ret
add
sahf
sub
mov
in
aas
xchg
aam
rcrb
out
and
add
jo
ss
push
mov
lret
arpl
xchg
lods
testl
xor
inc
test
ja
pop
scas
or
inc
es
cwtl
mov
lods
shrb
push
push
xor
js
xchg
xor
shl
fs
jmp
dec
sub
int
cmp
inc
jne
sub
in
loope
jbe
adc
push
test
push
lds
cmpl
lret
mov
test
clc
into
jl
pusha
adc
mov
pop
mov
sub
jnp
cltd
dec
mov
and
into
cld
mov
fcomps
lcall
push
shrl
rolb
int3
push
xchg
dec
stos
ror
dec
jae
sbb
or
dec
int3
sub
cmp
call
xor
imul
fs
cltd
cmp
ljmp
cmp
pop
mov
cltd
dec
sbbb
lret
mov
cmp
or
pop
mov
and
das
pop
scas
adc
xchg
sub
loope
cmp
push
popa
jge
lret
outsb
pusha
out
or
jl
push
xchg
mov
and
test
sub
xchg
je
outsb
jae
pop
cmpsb
ja
inc
mov
add
pop
lcall
sbb
leave
gs
es
cwtl
les
xchg
or
cmp
push
xor
bsr
mov
mov
push
xchg
orl
adc
js
test
scas
pop
push
stos
shll
insb
pop
cmp
push
cltd
mov
or
jle
dec
pushf
pop
lds
and
cmp
pop
cmp
andb
push
add
dec
int
inc
sub
dec
sarb
cmp
fldl
add
jo
mov
add
fsubrl
fwait
pop
and
inc
mov
mov
scas
xchg
cmp
jae
test
cli
shrb
cwtl
add
fwait
xor
or
mov
inc
lcall
xchg
add
into
jb
lock
dec
mov
enter
fs
pop
insl
inc
stc
out
add
xchg
je
rorb
push
or
ja
nop
adc
sti
inc
mov
jmp
mov
hlt
ficomps
mov
lea
lret
mov
cmp
add
movsb
xor
push
xchg
mov
cmp
jge
sub
inc
jge
push
pop
xor
cs
jmp
fwait
cmp
lret
mov
out
jno
sub
dec
es
iret
mov
pop
mov
mov
mov
movsl
inc
jp
dec
xchg
mov
push
or
inc
pusha
add
out
pop
repz
push
mov
test
call
adc
push
lea
jmp
adc
mov
jno
or
stos
mov
and
add
adc
add
jecxz
cltd
arpl
push
and
out
into
gs
int
pop
or
pop
dec
xchg
das
push
outsl
mov
nop
mov
mov
ret
pop
add
push
cwtl
sub
adc
jmp
mov
clc
hlt
popa
cmpsb
fsubp
out
es
loopne
mov
and
notb
ds
pop
insb
push
dec
mov
cld
jl
dec
out
pushf
xchg
inc
push
mov
mul
push
adc
pop
mov
rcrb
sub
jge
lret
xor
rorl
add
adc
testb
mov
movsl
mov
pop
jmp
mov
mov
cmpsb
test
dec
dec
mov
mov
and
sub
call
or
dec
ja
shrb
nop
adc
ds
push
test
mov
or
xchg
sti
xor
fcoml
mov
daa
cmp
lods
loope
mov
xchg
xchg
lock
movsl
mov
in
rolb
test
mov
dec
xor
pop
push
dec
out
shrl
sub
inc
lea
pop
scas
push
jne
int
pusha
sub
dec
call
iret
inc
scas
pop
testl
in
mov
ljmp
xchg
push
dec
lcall
inc
cmpb
ja
xchg
and
shr
es
aad
or
ret
sbb
cmpsb
in
mov
in
xchg
mov
into
inc
or
xor
jle
sbb
xchg
mov
or
inc
adc
xor
icebp
pusha
xchg
mov
sub
or
mov
sbb
add
shll
xchg
jmp
lcall
cli
dec
or
incl
xor
rcrl
aaa
inc
adc
test
jl
iret
xchg
push
mov
jle
jg
fwait
mov
mov
mov
ffree
fdivs
popa
pop
dec
ds
std
scas
mul
xchg
lret
fnsave
and
cwtl
mov
aam
jo
jbe
incb
sbb
lds
push
push
std
xlat
mov
inc
dec
std
xor
pop
xorl
push
std
pop
scas
and
adc
xchg
clc
sub
adc
aas
jo
add
cmp
mov
int
std
lret
add
addr16
stos
cmpsb
push
bound
rcl
ljmp
lock
movsb
hlt
fdivrp
les
mov
push
into
pushf
sbb
repz
jo
jmp
adc
scas
fcompl
dec
jg
inc
sbb
mov
out
sub
jnp
fidivrl
push
fwait
jmp
movsl
test
cltd
jbe
nop
fs
inc
ret
add
adc
lahf
leave
inc
jmp
xchg
cs
int3
cmpsb
hlt
mov
and
lahf
stos
mov
add
push
mov
mov
outsl
call
aas
fsubrs
sub
cmp
or
sbb
push
mov
mov
outsl
call
aas
fsubrs
sub
cmp
sbb
sbb
imul
mov
outsb
call
ds
iret
cmp
out
push
mov
inc
in
jg
sbb
shlb
pop
cs
jnp,pt
imul
and
push
outsb
and
loopne
mov
fwait
out
mov
mov
cs
jnp,pt
imul
outsb
or
dec
sub
fldt
jmp
pop
orb
pop
cs
jnp,pt
imul
outsb
or
dec
sub
scas
call
lcall
mov
das
ja
popw
push
rorb
jnp
mov
inc
sub
fildll
scas
adcl
push
xchg
fwait
in
or
lds
push
fimull
add
adc
fs
mov
in
into
es
or
inc
xor
sbb
mov
lahf
xor
xlat
sub
lret
sti
idiv
fimuls
pop
imul
imul
push
jg
and
mov
add
out
lret
add
les
outsb
fwait
pop
xchg
xchg
inc
out
idivl
push
popf
bnd
xchg
lcall
stos
and
push
loopne
fldcw
mov
inc
sub
mov
ret
mov
out
push
lods
dec
sub
xchg
cs
jnp,pt
imul
outsb
or
dec
sub
scas
lret
mov
fwait
out
mov
mov
sub
jg
push
add
sbb
jns
pop
or
or
xlat
scas
mov
lcall
nop
ds
cs
push
imul
sbb
dec
xor
jns
mov
fucomp
sti
lcall
mov
push
jbe
jl
jnp
inc
or
dec
sub
scas
lret
mov
fwait
out
mov
mov
cs
jnp,pt
imul
outsb
or
dec
sub
scas
lret
mov
fwait
out
mov
mov
outsb
push
out
inc
fsub
sbb
bound
mov
dec
fs
sub
cmp
inc
fimuls
iret
adc
adc
push
fnstsw
jno
in
clc
xlat
fs
push
inc
pushf
inc
xchg
repz
lahf
loop
sub
lea
sub
mov
in
pop
jl
mov
data16
mov
inc
adc
mov
int3
leave
pop
mov
cs
sbb
pusha
jnp
insb
sub
fwait
jo
es
push
xorl
jbe
les
push
fcomi
jmp
xlat
cltd
popl
cmp
adcl
mov
or
adc
pusha
and
xchg
cmpb
jle
jne
mov
jno
ficompl
jg
adc
rcrl
dec
mov
mov
cmp
sub
pop
inc
clc
or
and
push
and
ljmp
insl
pop
push
xor
jns
jle
das
sub
dec
pop
and
jmp
loopne
adcb
stos
push
addr16
xchg
js
mov
cltd
or
cltd
xor
mov
stos
mov
or
pop
aaa
sub
dec
sarl
sbbb
sbb
sbb
mov
movsl
mov
mov
mov
xor
lea
movsb
dec
inc
std
xor
bound
pop
push
test
pop
inc
into
lds
adc
fnstsw
popa
mov
inc
addr16
int3
inc
into
mov
hlt
stos
xchg
sti
fs
or
rcr
movsb
in
dec
popf
mov
adc
xchg
notl
fsubr
push
pop
dec
lods
aas
imul
xlat
inc
pusha
call
insb
sbb
mov
pop
xor
icebp
adc
out
fsubp
or
mov
cs
lds
loop
call
cmc
lret
js
je
int3
ja
jle
cld
push
fdivl
sbb
or
je
inc
inc
dec
shlb
ficompl
fisubrs
push
mov
movsb
stos
lock
inc
stc
jp
cmp
or
mov
rcl
das
imulb
adc
and
outsl
shr
jnp
subl
sub
jnp
cmpsl
popf
arpl
rorb
mov
push
shlb
mov
rcrl
or
lods
xor
jne
jnp
ja
mov
pop
pop
dec
mov
pop
nop
pop
sbb
cltd
or
sub
mov
pop
rolb
mov
xor
aam
das
mov
sbb
mov
dec
push
and
into
jnp
roll
fmul
mov
insb
sbb
js
testl
xchg
fmull
test
lea
cmc
iret
mov
fcmovu
and
cli
dec
ret
int3
mov
sub
or
stc
sub
mov
inc
nop
adc
xchg
add
add
sub
stos
pop
jno
out
add
rclb
fistl
adc
pop
jnp
in
sbb
add
stc
adc
xchg
mov
out
imul
mov
push
int3
mov
add
adc
icebp
add
dec
jecxz
cltd
adc
imul
cwtl
cmpsl
ja
mov
sub
imul
and
fwait
jl
sahf
pushl
sti
inc
stos
ret
mov
mov
inc
stc
aad
sarb
cmp
push
push
sahf
mov
cld
sub
aas
inc
mov
in
divl
into
push
add
push
xchg
stc
sub
scas
addr16
in
insl
xchg
lret
orl
imul
and
pop
rorl
pop
inc
jp
jecxz
aas
add
testl
cmp
push
nop
pop
push
lret
frstor
and
push
dec
mov
mov
add
aad
xlat
mov
ss
mov
push
stc
movl
cmc
jle
jge
dec
sbb
add
mov
jge
inc
or
stos
hlt
stos
cmpsl
jnp
jg
addb
add
jp
lahf
sub
pop
les
inc
into
xor
adc
sbb
mov
mov
add
call
cmp
mov
inc
jo
or
mov
std
inc
cmp
adc
lcall
les
mov
cwtl
jle
loope
cmp
inc
dec
xchg
sahf
dec
lock
outsl
shll
jne
test
iret
out
repnz
sbb
cmc
stos
repz
push
jb
fwait
and
lret
repnz
fiaddl
push
xchg
mov
movsl
pusha
add
push
insl
mov
jno
adc
addb
or
push
dec
cs
jne
mov
jge
pop
lret
mov
mov
mov
int3
mov
and
push
int
inc
xchg
call
push
out
add
hlt
mov
xor
daa
jae
inc
jecxz
cli
jge
lret
xor
add
scas
movsl
mov
aas
mov
fldl
notl
testl
out
mov
sub
and
shl
sub
lds
cs
pop
mov
int
aad
mov
mov
fs
ljmp
mov
test
mov
rcl
add
arpl
fisttps
push
mov
pusha
lea
ljmp
cmp
mov
pop
shl
pop
leave
sub
leave
loop
insb
sbb
jo
cmc
loopne
adc
popf
xchg
lods
dec
dec
idivl
fsts
dec
and
mov
scas
jg
inc
mov
mov
and
mov
das
and
out
repnz
subb
jmp
mov
mov
jecxz
dec
push
sar
xchg
fiaddl
mov
fidivl
push
dec
mov
loope
mov
jmp
xor
dec
jecxz
sbb
inc
in
mov
inc
fstp
loope
inc
fmulp
cs
pop
ss
mov
ss
and
pop
stc
mov
out
sbb
mov
add
fnsave
xchg
push
insl
xor
jns
fwait
into
dec
dec
cld
jge
fcoms
lock
testl
jno
je
jbe
pop
add
xor
push
cmc
ret
mov
pop
sub
insl
les
icebp
mov
notb
std
pop
sahf
and
cmp
fists
test
ds
jns
sbb
ret
sub
xchg
in
mov
popa
stos
ds
mov
push
scas
fisttps
fisubs
adc
nop
dec
and
mov
sbb
add
mov
mov
rcll
cltd
lds
cs
fwait
adc
xlat
and
movsl
xchg
and
dec
xchg
sbb
adc
cmpb
sub
daa
mov
int3
fidivs
xchg
adc
pop
lds
jne
loop
adc
mov
bound
fstps
fildl
dec
test
or
lds
mov
into
xchg
or
dec
cltd
loope
or
lods
aaa
sbb
call
xor
dec
nop
cmc
dec
mov
lea
shrb
jae
ljmp
add
push
dec
aas
dec
cmp
mov
pop
in
sbb
sbb
shrb
xlat
cwtl
xor
pop
xor
adc
push
stc
jp
sbb
adc
repnz
jo
popf
inc
push
dec
mov
rcll
sub
gs
mov
or
movsl
add
add
enter
push
out
add
mulb
fists
adc
aas
and
sbb
or
popf
jns
and
mov
out
inc
mov
pop
inc
xchg
jp
shrb
mov
mov
fldenv
cmpsl
out
add
pop
rorb
and
inc
pop
outsb
dec
jb
xchg
push
pop
jb
shl
cmp
xchg
mov
out
repz
jnp
push
inc
sub
fisubs
hlt
push
dec
jg
add
pop
jle
je
mov
repnz
cmc
push
nop
sti
adc
sarl
les
dec
sub
aas
and
pop
mov
or
dec
out
aam
mov
mov
xchg
jb
lcall
cwtl
subb
cmp
shll
or
dec
dec
data16
pop
rcl
sbb
push
push
pop
sub
push
sub
sub
inc
mov
mov
lock
int
pop
and
sti
imul
cmp
test
fisttps
xlat
jbe
repnz
in
cmpsl
add
jno
cmc
ds
pop
bound
mov
sbb
pop
pushf
pop
int3
adc
scas
ret
outsl
mov
in
sbb
ret
add
cmpsl
push
rclb
lods
int
cmp
inc
test
push
dec
mov
in
and
leave
std
jmp
lret
std
sbb
pop
jns
stos
inc
push
ja
inc
adc
out
pop
popf
push
cmc
inc
xor
arpl
ficompl
imul
add
mov
dec
sub
mov
jle
jno
aam
cmpsb
in
mov
aas
in
and
mov
mov
daa
lret
mov
pop
pop
out
in
pop
jbe
sti
nop
out
or
loopne
scas
mov
mov
sbb
jbe
outsb
insb
xchg
jo
pop
int
in
in
xchg
fidivrl
dec
pop
nop
pop
inc
shlb
jnp
clc
fadds
cs
and
mov
mov
iret
cmpsb
popa
add
popl
push
dec
sbb
ret
jmp
adc
sub
popa
cmp
jae
dec
fsubs
jb
aam
mov
lods
pop
loope
sub
repz
xchg
inc
cld
js
hlt
jb
sbb
mov
gs
repz
div
lods
iret
nop
rolb
cmp
push
inc
cmp
out
dec
cltd
es
jg
leave
ja
js
inc
mov
dec
lcall
out
mov
pop
pop
vmovdqa
inc
insb
mov
imul
xor
sahf
rcr
jbe
jl
mov
mov
xchg
enter
jge
jno
dec
mov
mov
aaa
add
jge
adc
roll
js
ljmp
inc
lcall
lods
aam
sar
inc
filds
mov
mull
mov
pop
or
xchg
fisttpll
mov
cmpsb
nop
js
sbb
nop
mov
movsl
popf
mov
jbe
or
push
lods
stos
jae
cmp
ficoml
orl
cld
vmovddup
mov
or
push
push
cmp
lock
pop
and
aam
inc
pop
mov
push
mov
aam
cmpsl
dec
pusha
xchg
movb
push
inc
pop
push
sti
sahf
adc
dec
mov
adc
xchg
mov
lahf
fadds
sub
sub
imul
sub
or
or
adc
inc
andb
cltd
pop
lret
xchg
leave
fistpl
test
outsb
and
dec
mov
addl
aas
xor
and
fsubrs
fldt
addr16
fsub
inc
ffree
cwtl
and
mov
ficoml
mov
int3
subl
pop
pop
fcompl
imul
fists
vhsubps
test
sbb
pop
dec
xchg
and
ret
add
cmpsb
iret
pushf
fwait
jl
jp
xchg
xor
xor
cmp
in
push
push
cmpsb
sbb
mov
jge
adc
shll
add
sub
inc
gs
pop
cli
ja
call
ljmp
rcrl
adc
inc
dec
cmp
push
pusha
test
insl
in
xchg
cvttps2pi
cwtl
mov
popa
roll
divps
jg
mov
mov
cwtl
ljmp
xchg
loopne
in
out
icebp
jle
fsubs
fwait
repnz
adc
lock
test
bound
in
icebp
sbb
adc
aam
shlb
subb
sub
lahf
ret
add
push
and
push
adc
out
inc
mov
jp
jbe
test
std
loope
xlat
lcall
fcompl
inc
add
jecxz
push
and
adc
push
stos
pop
cmp
notl
dec
push
out
add
or
sbb
sbb
dec
es
cmp
push
xchg
sbb
ret
pop
push
ficoml
push
fnstcw
xchg
mov
hlt
test
mov
lods
out
cld
jle
sub
cmpsl
cwtl
jb
ss
lea
mov
fwait
int3
bound
scas
subb
push
sar
mov
test
mov
fisttpl
loop
cwtl
pop
sub
or
mov
mov
iret
pop
stc
fs
cwtl
sbb
sbb
xchg
sub
push
xchg
into
test
ljmp
cmpsb
dec
pop
jge
dec
mov
insl
stos
push
jae
sbb
mov
mov
mov
jno
nop
xchg
jae
jg
hlt
inc
mov
mov
adcl
call
xor
jl
loope
ret
shrb
sub
sar
cltd
dec
push
jmp
sub
add
gs
jnp
jnp
xor
pop
cltd
xchg
and
adc
push
and
jl
push
std
add
insl
outsl
cltd
lea
adc
int
push
sub
fmul
xchg
jp
sbb
cmp
push
xor
add
bound
loopne
cmp
pop
mov
jecxz
into
and
scas
adc
es
cmc
or
add
mov
push
pop
call
out
jg
imul
call
pop
xorl
mov
je
popf
data16
push
sbb
out
xor
call
int
dec
sbb
stos
pop
pop
and
lods
enter
sbb
mov
fstp
mov
hlt
xchg
mov
popf
adc
out
inc
sub
fwait
ds
scas
xchg
sarb
mov
subl
mov
aad
ret
and
lret
xchg
call
dec
test
jne
stos
andb
cmp
xor
andb
sti
cltd
ret
lea
xor
mov
and
imul
loope
bound
or
lea
mov
pushf
push
or
mov
inc
pop
push
int3
mov
xchg
dec
push
in
mov
nop
pop
loopne
add
dec
cmp
add
sahf
fs
shlb
xor
rcrl
mov
xor
pop
lea
mov
addl
jecxz
pop
xchg
add
popf
fsubrs
jmp
and
add
popa
ds
repz
repnz
insb
push
xor
sbb
call
sarl
mov
push
arpl
lret
arpl
adc
jp
mov
adcb
jbe
mov
inc
rol
lcall
adc
ret
push
loop
into
sub
gs
inc
pop
fimuls
lds
outsl
addr16
sub
mov
jo
inc
pusha
ficompl
out
adc
jge
mov
mov
lea
ret
or
mov
adc
je
loope
pop
xchg
in
rorb
push
inc
bound
pop
sbb
fcmovnbe
call
or
cmp
jo
mov
in
cmp
fwait
aam
cltd
add
ss
push
dec
leave
sbb
int3
scas
inc
xor
shlb
or
mov
out
test
mov
cmp
sub
repnz
clc
inc
cwtl
mov
loopne
jmp
pop
lret
adcl
cmp
push
les
pop
into
dec
jmp
in
pusha
push
adcl
sti
jl
jp,pn
or
int3
lahf
mov
ret
testb
sub
sub
inc
sbb
dec
dec
aaa
mov
stc
lret
xadd
xor
dec
and
jbe
lods
jl
std
xor
arpl
pusha
test
inc
push
hlt
mov
pop
sbb
movaps
mov
pop
cmc
pop
in
add
sub
jo
or
mov
scas
sar
mov
test
insl
xchg
push
push
fisttpll
fdivrp
mov
movsl
mov
xor
jmp
test
movsb
xor
mov
jae
cltd
push
div
xchg
cmp
ret
nop
inc
cmp
call
xor
pop
imull
adc
arpl
mov
in
fisttps
jnp
cmp
sub
adc
cmp
sti
daa
xor
nop
popl
aad
ljmp
push
jb
into
push
xchg
xchg
xor
sub
rolb
loope
pusha
inc
fsubrl
cli
jnp
icebp
push
sbb
or
xor
out
xchg
inc
jmp
ja
or
xchg
mov
sub
mov
jbe
xchg
mov
sahf
jb
addr16
cs
ficompl
filds
add
mov
in
sbb
das
or
test
cmp
sti
xor
out
test
test
jo
std
inc
fnstsw
arpl
sahf
cltd
leave
push
inc
cmp
jns
dec
std
adc
xchg
push
xlat
mov
iret
pop
push
adc
cmp
add
add
add
call
mov
pop
in
mov
les
mov
lahf
jmp
insb
xchg
and
cmp
pop
jno
jmp
mov
jmp
ljmp
fists
out
xchg
jmp
sbb
push
pusha
xor
adc
loop
xor
sbb
in
fcoml
and
jns
cmc
cmp
adc
mov
adc
mov
mov
xor
insl
movsl
cltd
push
cmp
xlat
int3
dec
mov
pop
push
call
and
fldl
int3
pop
sub
jmp
orl
icebp
pop
and
inc
pop
dec
jge
mov
fdivr
rcll
data16
xchg
pop
std
push
loop
je
out
stos
lcall
mov
add
push
daa
inc
or
mov
mov
je
in
loope
aam
mov
movsl
push
fisttps
inc
in
xchg
mov
dec
rcr
jle
add
mov
jecxz
mov
mov
lods
push
xor
stos
outsb
cwtl
cmp
cwtl
jecxz
push
std
dec
dec
cmp
and
lods
sbb
push
std
cmp
sbb
test
addr16
add
les
push
sbb
arpl
nop
notl
insb
push
inc
mov
ret
xchg
push
in
int3
insl
or
push
mov
xchg
push
sti
cmc
add
mov
fs
gs
push
fs
fstpl
inc
cmc
cmp
cmp
push
mov
les
fldt
mov
and
and
fs
bound
sub
mov
xor
inc
sbb
xor
dec
in
push
bound
out
jl
repnz
mov
in
adc
inc
mov
into
stos
cs
mov
inc
lds
dec
fadds
in
cmp
mov
ja
iret
push
not
jne
mov
lahf
cmp
cli
jbe
cmp
movsl
mov
or
cmpsb
imul
cwtl
sti
je
das
scas
fistl
dec
addl
adc
or
mov
fdivrl
xor
or
sbb
imul
jae
pop
jns
popf
cmpsl
push
mov
mov
jg
and
mov
fwait
stos
cmpsb
scas
gs
push
dec
xor
mov
adc
leave
push
daa
ss
nop
nop
movsl
inc
shll
push
aam
aaa
mov
rcl
mov
mov
je
sbb
stos
fs
inc
imul
inc
sub
mov
shrb
mov
pop
dec
xor
aas
adc
das
mov
pop
xchg
ja
cwtl
jg
aam
ffree
pop
push
cwtl
jg
loop
pop
push
sbb
inc
and
jns
and
mov
mov
faddl
pushf
push
cmp
movsb
sbb
sbb
call
add
lods
fadds
icebp
dec
sbb
or
out
int
jo
arpl
imul
mov
jl
push
jns
testl
movsb
loope
adc
xor
stos
cmc
ljmp
xchg
push
int
mov
movsl
pop
or
aad
push
mov
jle
cmp
sub
or
and
inc
cmpsb
ret
and
push
xchg
fnstcw
push
jnp
jo
fdivr
jne
xor
xor
mov
add
sub
fsts
mov
nop
lock
mov
stc
mov
and
ficompl
fisubrs
lcall
in
addl
scas
mov
int
fisttpll
inc
jmp
shll
jb
push
inc
cmpl
lock
shl
out
pop
xchg
out
jecxz
fdivl
jle
cmpsb
repnz
mov
repz
mov
hlt
jg
push
in
inc
flds
xor
or
adc
sub
jnp
fcmove
imul
jp
int3
add
adc
cld
cmp
jecxz
in
jl
push
jge
cld
mov
cmpsb
and
add
xchg
jae
outsl
insl
and
fbld
hlt
or
xchg
xchg
in
js
frstor
sahf
mov
xor
je
pusha
popa
lahf
repz
sub
loop
ja
inc
cmp
test
cwtl
das
dec
bnd
jl
xor
sbb
pop
mov
pop
pop
jp,pt
imul
outsb
or
dec
sub
scas
lret
mov
fwait
out
mov
mov
cs
jnp,pt
imul
outsb
or
dec
sub
scas
lret
mov
fwait
out
mov
mov
cs
ds
push
imul
outsb
or
dec
stos
pop
fldt
jmp
fwait
out
mov
mov
cs
jnp,pt
imul
outsb
or
dec
sub
scas
lret
adc
mov
jmp
lret
xor
and
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xchg
add
xor
push
mov
jb
addb
mov
inc
xchg
jbe
repnz
add
xor
inc
push
mulb
jb
addb
mov
inc
shlb
repnz
add
xor
inc
push
mulb
jb
mov
inc
mov
nop
xor
repnz
out
mov
iret
fcompp
test
xchg
ficomps
and
fcmovnb
int
sahf
imul
push
dec
xor
mov
push
jp
aas
mov
enter
add
inc
pop
and
aaa
push
imul
out
pop
adcl
repz
adc
mov
loope
sbb
mov
es
mov
and
mov
xchg
pop
xchg
inc
orb
add
xor
pop
iret
sub
lods
or
push
xchg
mov
or
xchg
mov
data16
mov
pop
inc
std
mov
push
test
inc
add
dec
mov
cmp
fs
add
xor
inc
push
mulb
jb
addb
mov
inc
shlb
data16
outsl
in
lock
mov
test
add
arpl
inc
int3
arpl
shrb
push
xchg
loopne
repnz
aad
out
mov
lea
mov
decb
fisubs
xchg
or
icebp
push
xchg
push
ret
inc
xchg
cs
push
mulb
jb
addb
mov
inc
shlb
repnz
add
xor
inc
push
mulb
jb
addb
mov
inc
shlb
repnz
add
pop
sub
push
xchg
cltd
call
inc
aaa
fisubrs
stos
cmp
comiss
int
jnp
test
mov
and
lret
jl
xchg
gs
out
sbb
push
sbb
mov
ret
lcall
or
and
xor
loope
jno
xchg
adc
ficomps
jl
fwait
pop
mov
mov
int3
cld
inc
push
ljmp
sub
mov
shr
or
ret
ss
lret
pop
ja
jmp
iret
js
or
jp
dec
or
mov
imul
jo
cs
test
sbb
or
ja
push
push
in
cmpsb
or
jo
mov
push
sbb
mov
inc
mov
cmp
jns
loopne
cltd
aad
adc
push
sub
cmp
sahf
sub
mov
mov
out
test
pop
aad
daa
pop
add
sbb
cmp
icebp
lahf
ss
aad
adc
xchg
data16
into
pusha
clc
cmpsb
push
inc
ret
call
stos
shlb
dec
leave
mov
xchg
adc
dec
jge
addb
scas
fsubl
sahf
push
dec
cld
mov
adc
loop
adc
popf
das
inc
and
pop
repnz
aad
mov
repnz
fisubrs
cli
stc
inc
push
sbb
mov
adc
push
xchg
cmp
adc
loope
in
gs
lea
lret
jo
push
aad
popf
mov
fiaddl
outsl
adc
inc
in
out
and
dec
fstl
into
fisttps
xchg
call
mov
xchg
mov
inc
int
cmp
gs
nop
pop
sbb
sbb
cmp
sbb
add
inc
xchg
lds
xlat
daa
mov
mov
jmp
ds
cld
xchg
mov
xchg
out
aam
jge
pop
cmp
fsubrs
adc
mov
aam
dec
in
jb,pn
add
mov
or
xlat
cmp
add
mov
or
shrl
mov
rol
cltd
adc
jb
xchg
pop
repnz
jns
jae
rcr
dec
lret
xchg
das
cwtl
xchg
scas
jge
fldln2
dec
inc
xor
fildll
aaa
dec
dec
dec
orl
fists
icebp
mov
in
mov
pop
mov
pop
ss
cmpb
adc
jmp
mov
out
shlb
inc
aas
andl
insl
push
cltd
scas
mov
or
inc
outsb
int3
in
fmul
adc
mov
or
cmp
and
add
call
push
pop
lods
push
pop
or
ljmp
mov
shll
pop
jle
sbb
dec
andb
and
ds
es
xor
fwait
cltd
leave
add
mov
loop
mov
dec
iret
xchg
adc
nop
inc
sbb
jo
push
mov
cvttps2pi
movsb
xchg
fisubl
inc
mov
mov
push
add
out
loopne
mov
inc
loop
test
jb
movsb
pop
xchg
xchg
xor
fdivrs
in
cmp
loop
add
mov
out
inc
mov
inc
mov
pop
inc
adc
jb
push
bound
fistl
sbb
iret
ja,pn
pand
rcl
cmp
jnp
aam
inc
lret
lods
lock
jge
pop
jl
je
pop
mov
stc
outsb
cmp
test
out
out
aas
loop
dec
pop
cmp
xchg
inc
cmp
ja
jnp
inc
fwait
pop
dec
movsl
fidivl
repz
push
sub
or
icebp
scas
test
fildll
les
adc
xor
adc
or
bound
gs
imul
inc
xchg
adc
lcall
scas
mov
in
jb
cmp
xorb
into
icebp
jbe
ds
cmp
fldcw
xchg
lcall
das
lods
mov
jb
in
bound
int3
rcll
in
loop
sbbl
dec
sub
jne
aaa
daa
stos
dec
loop
pop
aaa
test
mov
leave
sub
or
pop
xor
enter
cmp
fldt
out
push
cmpsl
push
jae
pop
cli
outsb
jne
loop
aam
iret
or
push
sbb
lea
imul
lock
inc
movsl
mov
repz
out
add
pop
mov
inc
push
and
mov
jo
in
or
mov
dec
push
das
pop
in
push
imul
xchg
or
add
inc
ja
jmp
aad
xchg
jbe
or
mov
inc
imul
pushf
fisubrl
ret
pop
dec
pop
mov
push
inc
mov
nop
mov
dec
adc
daa
mov
push
fcmove
lcall
sub
in
in
inc
mov
and
jmp
adc
inc
ljmp
mov
mov
icebp
lcall
inc
ret
shlb
sbb
lds
xchg
or
sub
xor
cmp
and
fs
dec
jle
mov
lcall
adc
adc
ljmp
inc
ds
ficoml
in
dec
or
shlb
mov
call
cltd
cmpsl
je
mov
pop
inc
ds
repnz
jo
out
cld
pop
jl
pop
jg
mov
inc
leave
cmp
out
lahf
daa
cmc
sbb
out
into
notl
and
push
adc
out
cmp
adc
loope
pop
sarl
subb
xor
aad
and
lret
cltd
cmp
xlat
and
xchg
inc
js
andb
inc
lret
pop
xor
add
and
lcall
inc
repz
adc
dec
pop
xor
pop
lret
std
arpl
mov
dec
clc
jno
jne
or
mov
jmp
shll
sbb
push
mov
clc
ret
add
movsl
pushf
fwait
out
lock
lds
xchg
or
xor
int
mov
scas
and
pop
lcall
cmp
mov
fwait
scas
mov
adc
cmc
xor
movsl
ss
lea
cmp
ljmp
sarl
sbb
aam
imul
out
or
clc
mov
mov
call
roll
jne
loop
mov
aaa
aam
cs
add
push
mov
dec
jns
ret
loop
adc
fidivl
notb
subl
and
lret
rcrl
jg
cli
cmp
and
outsb
mov
pop
dec
lods
inc
mov
in
sub
cmp
cmp
cld
shrb
mov
sarl
orl
xchg
sbb
out
xor
lods
iret
mov
mov
push
mov
mov
cs
dec
test
mov
xor
pop
inc
mov
inc
sbb
jo
xor
add
inc
mov
jbe
push
push
cmpsb
decl
dec
mov
jecxz
sbb
andl
movsb
jb
add
in
insb
sahf
cld
sahf
inc
pop
insb
jl
or
pop
xor
orl
inc
push
neg
in
jge
inc
lods
out
mov
les
sahf
aad
sbb
cmpsb
subl
mov
xlat
xchg
lea
pop
mov
xor
mov
int3
leave
sahf
mov
outsl
ljmp
imul
mov
cld
sub
lahf
das
sub
xor
je
fstl
ss
rorl
cmc
ljmp
and
pop
fildll
int3
xchg
xchg
jecxz
pop
mov
loope
sub
or
inc
inc
adc
psraw
cwtl
push
dec
leave
or
push
xchg
jne
mov
test
and
mov
cmpsl
outsl
cli
or
imulb
jecxz
add
pushf
mov
xchg
inc
out
mov
test
inc
js
or
je
in
movsb
jle
leave
shlb
imul
mov
mov
ret
fwait
mov
or
pop
cmp
jne
jmp
or
sub
scas
or
jl
pop
lods
mov
stos
mov
cli
xor
push
jae
aam
cmc
les
push
sub
push
lds
push
jno
in
push
pop
xchg
cld
scas
test
aam
pop
bound
fmull
aaa
cwtl
inc
pop
push
xlat
out
sub
pop
mov
mov
icebp
jmp
xchg
sub
frstor
insb
sbb
dec
xchg
add
stos
xchg
aas
xlat
sub
sahf
js
lcall
xchg
gs
pop
dec
into
xchg
lcall
mov
imul
mov
jbe
movsl
pop
mov
sahf
fcoms
pop
js
cmp
out
fisubs
pop
lea
xchg
mov
add
sbb
test
push
pop
sahf
mov
pop
cwtl
gs
cld
test
pop
add
lds
xorb
addb
mov
loope
sahf
sbb
xor
jo
nop
xor
sub
adc
jno
aad
pop
aad
jp
add
pop
dec
sbb
iret
push
or
jb
popa
arpl
and
loope
cmp
std
xchg
mov
neg
mov
scas
sub
dec
ds
das
inc
std
push
sub
das
rcrl
mov
pop
scas
ljmp
aad
negl
mov
test
mov
and
push
push
jle
cmc
shlb
cltd
or
lahf
popa
or
pop
adc
pushf
or
lret
adc
mov
sub
pushf
xor
mov
mov
fcmovu
imul
adc
jle
inc
dec
aaa
scas
add
fdivp
dec
push
and
movb
setp
dec
aad
ret
jle
inc
aad
jne
adc
and
jns
xor
or
pop
xor
inc
lods
cmp
pop
adc
jle
adc
icebp
mov
lods
jo
mov
lcall
or
das
pushf
sub
cmc
insl
cmp
into
lret
cmc
in
fstpt
mov
clc
pcmpeqw
xchg
dec
push
xchg
or
fadd
repz
xchg
jb
iret
jmp
mov
push
cmpsl
int3
je
push
xchg
mov
xchg
test
mov
stc
repz
stc
sub
and
pop
outsl
ja
ror
inc
pushf
xorl
inc
cmc
aad
decb
arpl
repnz
subb
aad
ljmp
mov
add
mov
xor
push
outsb
sbb
sbb
addl
mov
xchg
or
push
shlb
pop
sbb
jg
pop
sub
lret
mov
sti
shll
adc
das
pop
adc
cmp
imul
bswap
adc
repnz
sub
stos
hlt
es
into
mov
mov
mov
outsb
adc
xchg
inc
mov
and
add
sub
gs
aas
lret
mov
popl
jb
outsl
push
fcmovnb
shlb
sub
outsl
xchg
xor
cli
loope
adc
int
cli
je
xor
fdivr
pop
cmpl
pop
or
sbb
int3
push
movsb
rorl
sbb
gs
sbb
mov
mov
and
jno
test
push
xchg
insl
in
jae
lret
leave
mov
mov
hlt
aas
or
mov
pop
lock
mov
out
imul
mov
in
aaa
sarb
adc
lea
stos
dec
xchg
cwtl
aad
ds
arpl
ror
or
sbb
clc
push
cmpsl
and
or
loop
sbb
test
movsl
ror
jl
jns
pop
shlb
or
mov
and
mov
pop
int
mov
dec
ret
and
inc
outsl
and
int3
xchg
lret
outsb
cmpsl
ficompl
inc
push
out
pop
mov
movsl
loopne
int3
jge
cmc
mov
clc
jns
aas
scas
stos
sbb
jae
mov
scas
imul
mov
int3
mov
push
fadd
push
ror
outsb
pop
and
cmc
sub
test
mov
insb
inc
cld
pop
lea
pop
push
sub
sub
test
inc
xor
xchg
movsl
lds
jle
push
roll
xchg
div
cmp
insl
jmp
xchg
pop
push
add
jae
sahf
sub
leave
movsl
scas
daa
fwait
iret
jecxz
leave
sub
loopne
mov
int3
out
repnz
pop
mov
mov
or
lea
fimull
xchg
sub
in
out
sub
mov
xor
stc
loopne
dec
or
jge
jo
pop
mov
mov
into
subl
fidivl
add
in
jmp
pop
ret
lret
push
push
xor
pop
or
aam
push
dec
cld
addr16
lods
push
pop
push
push
pop
cld
lcall
dec
sub
hlt
out
sub
sbb
xor
inc
ret
stc
adc
xchg
lods
push
inc
sbb
cmc
aam
push
sbb
push
mov
sub
push
clc
jp
mov
push
pop
xchg
sub
leave
pop
and
fwait
pop
out
dec
add
adc
push
and
or
cmp
pop
iret
xchg
in
xor
repnz
test
and
mov
in
mov
mov
jmp
or
dec
lea
mov
jns
leave
ss
notb
jge
call
jmp
jmp
cltd
sti
add
int
fsubrl
xor
sbbl
cmp
std
jo
fidivrl
add
dec
dec
inc
shl
lret
popf
adc
mov
adc
in
aam
divb
pop
xchg
inc
mov
sbbb
push
out
icebp
cmp
and
inc
stos
lock
gs
pop
out
leave
xchg
xor
xor
cmp
jns
xchg
mov
stos
fwait
jmp
cmpsl
sub
data16
insb
sbb
outsb
repnz
fcoml
cltd
ds
lcall
or
pop
xor
dec
sbb
or
xor
js
repz
mov
sbb
mov
dec
push
mov
add
lcall
fiaddl
xchg
fcomip
jno
dec
push
fdivr
in
popf
shrb
mov
loop
arpl
dec
shll
ss
cli
push
pop
sub
cmpsb
andl
pop
xchg
jg
jp
mov
in
orl
inc
pop
or
jb
mov
insb
not
or
inc
jne
icebp
and
pop
and
cs
dec
xchg
mov
outsb
cmp
mov
dec
mov
mov
arpl
popf
pop
xchg
mov
dec
push
jns
mov
push
add
bound
syscall
in
or
pushf
rcrl
test
enter
dec
lcall
aad
cmp
popa
daa
pop
add
aam
and
sarl
sub
sub
mov
mov
and
out
enter
mov
jmp
test
adc
and
cmpsl
std
xchg
push
jns
fidivl
mov
dec
jae
dec
movsl
scas
xchg
test
cvtpi2ps
scas
aad
scas
fimuls
pushf
insb
dec
pusha
jne
cmp
fdivs
movsb
pop
movb
sub
pop
popf
subb
jg
sti
aaa
xchg
jmp
cmp
out
pop
testb
sahf
addr16
jmp
xor
push
mov
add
popa
jbe
jns
jge
bound
ljmp
mov
jb
int3
xchg
popa
or
xlat
mov
sbb
cmpl
cmpsl
lds
sub
pop
negl
adc
sub
mov
or
dec
insb
xlat
insb
pop
adc
iret
pop
ret
ds
add
out
neg
xchg
pop
xor
shll
and
adc
adc
pop
mov
mov
pop
shl
mov
pop
insl
icebp
adc
ljmp
jecxz
outsb
mov
pop
mov
adc
out
inc
mov
adc
repnz
je
push
cmpsl
test
mov
movsb
out
fmull
lret
in
xor
scas
cmp
push
xchg
mov
addr16
sub
stos
xlat
les
testl
loopne
mov
imul
cmc
xor
and
xor
ljmp
and
fisttps
icebp
shlb
mov
jnp
pushf
test
add
cmp
repnz
or
xchg
in
arpl
mov
xchg
sahf
ds
ss
in
mov
test
sub
int
xor
frstor
push
int3
je
add
decb
nop
mov
jbe
pop
cmp
sbb
pop
jno
mov
fisubs
imulb
mov
mov
movsb
mov
pop
aam
loopne
dec
sbb
int
or
stos
inc
push
mov
cmp
fdivl
mov
xchg
test
jnp
push
push
push
insb
mov
xor
cmpsl
mov
push
or
fdivrl
push
and
mov
lods
rcr
aas
sub
push
enter
pop
std
jge
insb
jno
xorl
push
xlat
sub
xor
push
jbe
sbb
fsts
jmp
xor
cli
mov
inc
mov
test
dec
mov
sub
rcll
je
adc
jle
push
pop
es
inc
and
mov
or
leave
orb
lcall
push
push
fisubrl
and
xchg
cmp
test
or
push
loopne
dec
test
or
pop
sub
sti
roll
or
cmp
mov
pushl
jne
insb
inc
test
in
jne
jb
sub
in
loopne
hlt
mov
mov
gs
push
int3
adc
lcall
push
lock
xlat
xor
add
xor
fisubs
xchg
mov
pop
xor
mov
cli
pop
inc
fcompl
add
daa
add
mov
jg
sub
icebp
cmp
rcl
jno
mov
jns
ds
std
lods
adc
mov
mov
bound
mov
jo
sti
mov
int3
icebp
lods
outsb
or
jb
dec
or
into
push
nop
sub
jb
icebp
mov
popf
inc
test
sar
call
clc
lods
and
sub
jo
inc
mov
mov
pop
popa
lods
adc
pop
insb
cltd
push
gs
in
and
test
mov
bound
andl
imul
lret
inc
aaa
xchg
or
cmp
ret
es
jnp
xchg
scas
mov
call
mov
xchg
and
enter
jge
outsb
xchg
push
aas
push
lret
mov
push
daa
jno
lahf
out
pop
mov
cmp
daa
mov
xor
mov
ds
andb
pop
sbb
orl
push
xor
iret
sub
jmp
cmp
popa
pusha
ja
sbb
mov
inc
xor
push
fstl
xchg
and
inc
in
xchg
stos
lds
ljmp
into
call
xor
idiv
popa
dec
cmpsb
insl
xor
jne
les
orb
in
adc
fdivrl
sbb
jecxz
adc
popa
or
je
push
fwait
mov
push
adc
bound
jne
lock
xchg
pop
in
push
jno
or
add
test
or
jae
call
stos
out
gs
sub
or
mov
xor
out
popf
fnstcw
pusha
pop
push
pusha
xchg
lock
and
sbb
sub
and
and
inc
push
out
xor
mov
add
mov
repnz
test
adc
in
push
sub
or
xchg
cltd
dec
test
daa
inc
adc
mov
rolb
fldl
inc
mov
popf
and
and
xor
xor
jns
call
loope
leave
push
xor
aaa
add
dec
xchg
mov
fnstcw
dec
cmp
sub
add
inc
sbb
jl
xchg
insl
fcoms
rol
or
mov
outsb
mov
xor
push
popf
push
mov
adcl
jbe
sbbl
mov
flds
mov
pop
lds
mov
xchg
int
lods
pop
xchg
daa
push
sub
jecxz
lret
test
mov
shlb
inc
aaa
in
adc
lods
jb
sbb
sub
cs
lahf
fsubrl
xor
cmp
adc
add
lods
lret
pop
daa
in
jbe,pn
movsb
mov
sub
dec
xchg
sub
add
jae
insb
sub
inc
fdiv
cmp
pop
mov
dec
sti
out
aas
mov
enter
mov
push
adc
xchg
movsb
or
stos
push
fimull
stc
adc
and
fs
ss
pop
sub
in
or
pushf
js
in
pop
dec
stc
out
cmpsl
mov
mov
inc
mov
cmp
cltd
dec
push
add
out
or
neg
lret
sub
cmp
jne
jne
push
addl
mov
mov
scas
ljmp
inc
jns
cmp
mov
cmpsb
xor
inc
push
mulb
jb
addb
mov
inc
shlb
repnz
add
xor
inc
push
mulb
jb
addb
mov
inc
shlb
repnz
push
xchg
mov
cmpsb
xor
inc
push
mulb
jb
addb
mov
inc
shlb
repnz
add
ss
inc
shlb
data16
jmp
mov
into
sub
repnz
inc
out
jbe
dec
adc
pusha
loop
mov
inc
repnz
ret
data16
push
mov
xchg
es
ss
jb
inc
out
mulb
xchg
sbb
cmpsb
adc
loop
bnd
data16
imul
inc
dec
push
hlt
and
adc
mov
push
fstpt
push
std
ss
jb
push
xchg
add
stc
mov
icebp
in
int
xorl
cli
es
aad
sbb
dec
inc
aaa
mov
cmp
hlt
xchg
arpl
pop
pop
dec
aad
daa
push
out
jae
dec
cld
xor
es
scas
mov
addr16
xchg
jmp
sti
sbb
jb
add
xlat
movsl
push
jb
idivb
loop
adc
mov
cmp
xchg
into
cwtl
gs
rorl
jae
mov
adc
xchg
mov
ficoml
pop
aaa
insl
leave
lcall
int3
ret
adc
sbb
cltd
pop
outsb
pop
mov
andl
mov
jb
inc
bound
and
adc
loop
repnz
ret
mov
es
pop
push
xchg
ss
movsl
sbb
popa
repnz
stc
inc
iret
ja
mov
inc
adc
imul
push
cmp
xchg
roll
push
movsl
add
push
mov
lahf
add
push
rcrl
lea
nop
pop
xchg
and
xor
loop
repnz
ret
jbe
push
mov
andb
ss
jb
inc
out
mulb
xchg
xchg
add
repnz
ret
jbe
push
mov
andb
ss
ja
iret
inc
add
push
pop
adc
pop
pusha
jae
pop
dec
icebp
mov
pop
mov
add
inc
sub
and
inc
and
lret
lret
fmuls
xchg
xor
jge
sbb
mov
mov
fidivrs
dec
sub
xor
pop
aas
dec
add
test
xchg
inc
push
pusha
sbb
bound
xor
out
inc
mov
adc
xor
data16
popa
jns
mov
lret
clc
inc
cmpsb
andl
mov
mov
ja
mov
jl
mov
ds
fidivrl
aas
or
dec
jns
test
div
cmp
test
and
stc
mov
insl
aas
mov
xchg
ret
pop
ficomps
jb
inc
pop
popa
add
xor
xchg
push
lcall
sub
test
cmpsb
clc
test
jno,pt
jb
andb
cltd
ss
adc
fnstcw
pop
mov
mov
inc
out
movsb
ficompl
iret
add
imul
mov
sbb
mov
mov
push
xchg
mov
cmpsb
xor
push
shlb
outsb
sub
dec
sub
test
adc
add
mov
cmp
stos
hlt
ljmp
lret
aam
cmp
push
imul
stc
cmp
mov
lds
fiaddl
add
sahf
in
out
adc
mov
lods
sbb
addl
testl
in
dec
pushf
pop
mov
out
pop
xchg
out
int3
pop
imul
movsl
dec
push
mov
jo
loopne
pop
fs
dec
loope
dec
xor
dec
sub
into
cli
call
jl
fwait
jge
xchg
mov
call
shrl
insl
sub
or
jle
cld
sti
adcl
popa
inc
xchg
and
xor
ret
push
ljmp
jnp
into
popf
push
orb
addl
fldl
out
fidivrs
pop
pusha
mov
not
jp
cmp
adc
mov
fucomip
and
iret
sbb
movsl
add
outsb
scas
mov
push
lcall
push
hlt
inc
inc
scas
xor
ret
movsb
xchg
cmp
mov
imul
aaa
dec
pusha
in
mov
or
mov
xchg
or
fcmovb
imul
mov
add
push
lret
mov
loop
je
shr
mov
pop
out
pop
jnp
rolb
mov
call
fwait
mov
sub
test
push
lret
inc
dec
and
popf
es
sbb
fmulp
add
cli
mov
jnp
decl
call
int3
call
dec
mov
nop
in
sti
xor
setne
lock
sub
ja
xor
sub
fldln2
dec
daa
mov
inc
sub
xor
or
notb
lret
xchg
cmp
jb
cmp
pop
cwtl
std
movsb
shlb
clc
sahf
xor
notrack
cmp
stc
jae
pop
jp
pop
xor
mov
loop
aaa
inc
xchg
mov
in
cmpb
and
jnp
mov
pop
and
xchg
mov
xchg
push
mov
push
stos
stos
aas
xchg
ror
into
bnd
mov
mov
sbb
sbb
cmp
leave
stos
inc
clc
rcll
fwait
iret
dec
inc
cmpsb
sbbl
aaa
and
imul
movsb
inc
add
pop
xchg
es
sub
or
cmp
pop
mov
lahf
loopne
jecxz
adc
orb
cmp
loop
das
pop
pop
dec
pushf
or
dec
stos
cmp
aad
cltd
xor
ds
xchg
fcoms
dec
test
lahf
sub
xchg
insl
stos
cli
pop
inc
adcl
lret
and
adc
add
add
sbb
or
repnz
in
movsl
inc
bswap
lods
jae
lea
mov
mov
jnp
sbb
inc
jns
sub
adc
aad
jecxz
cmp
xchg
popf
or
sub
nop
adc
inc
push
sbbl
daa
push
dec
jmp
stos
push
mov
or
scas
fs
cmp
lret
lret
aas
test
push
sub
cmp
lds
push
inc
push
shl
arpl
push
inc
pop
sub
fcmovb
dec
aad
pusha
pushf
mov
ret
fisubl
mov
nop
pop
nop
xchg
sarb
dec
cmp
push
mov
loope
in
nop
mov
push
and
out
sbb
stos
test
push
xchg
or
mov
add
daa
insb
test
and
inc
jp
or
or
pop
mov
je
sbb
adc
shlb
mov
ret
out
scas
fbld
fisttpl
pop
dec
ljmp
addb
jnp
loopne
add
xorb
xor
js
movsl
jno
out
jl
ret
test
sbb
dec
into
inc
inc
push
loop
es
cmc
mov
std
inc
sbb
dec
or
adc
hlt
insb
jno
subl
pushf
push
fisubs
dec
stc
and
rcll
push
sub
in
push
movsb
in
stc
shrl
sub
adc
mov
jne
add
jo
pop
xor
and
clc
push
hlt
insb
lods
std
add
jns
mov
xchg
xchg
lds
outsl
negl
test
mov
lea
data16
mov
adc
sub
xor
xor
stos
test
pop
jnp
inc
arpl
jle
xor
aad
test
cld
js
out
add
xor
ds
out
sub
out
jbe
call
mov
pop
sbb
or
lcall
cwtl
je
push
adc
pop
jle
xlat
in
ret
jle
call
sbb
mov
xchg
popf
sub
push
mov
add
mov
aas
add
xchg
push
sahf
cmp
and
cmpsb
or
add
dec
push
push
mov
mov
fistps
clc
jae
sub
mov
push
sbb
rclb
sub
adcb
push
pop
or
sub
lods
test
sbb
and
sbb
mov
cmp
insl
sbb
push
loop
test
leave
cmpsl
fdivrs
ss
sar
aaa
lcall
cli
ljmp
out
xchg
jae
xchg
mov
js
popa
or
mov
jecxz
cmc
outsb
ret
push
push
xchg
pop
cmc
cmp
adc
push
mov
adc
repnz
inc
mov
xchg
aaa
jo
add
push
cmp
jl
sub
inc
and
add
adc
mov
mov
ja
jo
push
sub
test
sti
aam
aaa
call
xor
fstpl
pop
fstps
sub
jbe
test
jle
and
mov
sbb
icebp
adc
or
pop
mov
adc
fmuls
xor
aam
fimuls
lock
adc
push
das
les
pop
xor
test
repz
test
mov
push
out
cmpsb
push
ret
mov
pop
int
or
aaa
mov
push
or
cltd
mov
jge
xchg
scas
mov
xor
es
incb
dec
ret
add
mov
inc
dec
push
xchg
inc
or
mov
mov
xchg
fimuls
popa
push
in
f2xm1
gs
mov
outsl
xchg
adc
push
iret
mov
adc
sub
and
jmp
push
ret
adc
jp
xchg
add
lcall
ljmp
push
fnstcw
jmp
push
lret
pop
ss
fisubl
cltd
movsb
xlat
fs
repz
sbb
and
and
imul
sbb
fisubrl
push
repz
in
imul
xchg
and
cmp
mov
sbb
int3
call
mov
imul
insl
je,pn
dec
mov
bound
xchg
fidivl
mov
mov
and
pop
dec
inc
stos
push
faddp
pop
add
or
jae
cmp
xor
sub
aaa
mov
fwait
int3
pop
sar
cwtl
dec
aam
mov
loope
and
inc
lret
xlat
push
lret
sub
sub
adc
lahf
nop
xchg
sub
and
xchg
into
repz
xor
xchg
repz
fstl
cmpsl
aam
scas
dec
mov
xor
iret
repnz
push
sbb
ljmp
test
sbb
shrl
gs
ss
test
inc
inc
mov
pop
je
jp
push
mov
cmp
add
jno
dec
inc
ljmp
cmpsl
rcl
and
xchg
mov
inc
int
lret
pop
sar
or
fmull
cmpsl
push
test
mov
cmp
xchg
pop
fsubrs
jge
mov
xor
jns
imul
idivb
push
xchg
jno
pop
sub
push
or
xlat
jb
sub
mov
nop
pusha
jg
cmp
leave
jmp
sub
add
lods
pop
pop
inc
insl
lahf
jl
sub
in
adc
aas
xchg
icebp
int
jge
mov
adc
xor
adc
sbb
mov
mov
test
stos
out
stos
jle
pop
ss
int3
lcall
popa
fcompl
sarb
test
mov
inc
in
pop
jg
adc
push
cli
out
xchg
jbe
pop
and
or
shll
push
les
jp
out
mov
push
fsubrs
sbb
lock
sub
xchg
mov
xor
outsl
cwtl
mov
jp
xlat
rcr
lahf
sbb
incl
data16
xchg
sub
test
adc
int
mov
mov
fs
lds
ret
or
sarb
movsb
mov
push
push
xor
aas
and
cmp
mov
sub
pop
jle
xor
mov
mov
jb
out
sbb
mov
call
stos
add
cmc
ret
pop
xchg
sahf
sbb
sub
popf
adc
enter
push
into
or
xchg
aaa
or
cwtl
iret
pop
cmp
imul
out
out
jl
sub
dec
xlat
fmul
lret
or
sbb
dec
dec
xchg
cmp
mov
xor
das
jae
mov
add
repz
stos
mov
cwtl
icebp
addr16
and
imul
aas
subb
mov
xor
mov
mov
rorb
mov
cmp
inc
outsl
mov
sub
jmp
mov
inc
adc
mov
mov
lods
cwtl
xor
pop
rcll
inc
repnz
mov
and
popf
inc
mov
lock
mov
sbb
mov
cs
cmp
out
leave
pop
clc
cmp
ds
add
mov
fimuls
xchg
enter
lret
in
bound
xor
pop
sbb
out
dec
xchg
cs
xor
cmp
jg
insl
sbb
je
mov
mov
mov
xchg
cmp
push
adc
or
es
adc
pop
xlat
sbb
jns
imull
mov
push
mov
in
push
mov
in
notl
or
pop
movl
add
and
negb
fwait
aad
mov
lahf
dec
inc
jp
sbb
inc
sti
pushf
les
aaa
mov
cmp
jg
int3
and
setp
xor
cmpsb
ficomps
cmp
dec
jle
lcall
insl
fmulp
xchg
enter
shrl
dec
mov
adc
xlat
pusha
xchg
imul
js
dec
adc
adcl
outsb
mov
dec
stc
xchg
lds
sbb
lea
arpl
inc
cltd
pop
loop
xchg
push
adc
scas
xor
shll
cmc
lods
stc
add
out
cmpsl
inc
leave
out
xchg
mov
insb
int
sub
pop
mov
mov
lret
or
jle
or
inc
mov
mov
aam
stos
mov
mov
fistps
cmc
pop
loope
xor
loop
lret
ret
jle
addl
lods
data16
xchg
mov
popa
cli
inc
push
out
xor
int
or
call
push
inc
xor
mov
or
push
pushf
add
push
sub
rolb
mov
shrb
mov
xor
cmp
test
jo
lret
ret
sbbb
mov
shlb
push
int
xchg
sti
sub
xor
das
test
push
lcall
pop
mov
xlat
stos
sti
push
mov
sbb
sub
ss
mov
push
xchg
aaa
in
push
inc
mov
add
jge
data16
mov
adc
xchg
nop
cltd
ljmp
outsl
rcrb
in
sub
outsb
icebp
fstpl
int3
and
pop
inc
sub
lahf
mov
repz
lcall
outsl
cli
mov
adc
mov
int3
in
xor
ret
aam
pop
adc
shrb
jne
push
mov
cmp
cltd
sub
xchg
sub
xchg
arpl
push
lret
stc
pop
movsl
push
push
push
std
adc
sbb
repz
aad
inc
and
add
cs
add
lods
andl
test
ds
xorb
ljmp
std
adc
insb
add
sahf
stc
xlat
xor
outsb
movsb
ret
pop
fstpl
cmp
pop
push
fists
xor
jp
jbe
iret
inc
popa
in
iret
clc
sub
xchg
fidivrl
jb
xchg
test
cmpsb
test
cmp
aad
shll
out
clc
scas
mov
enter
mov
loop
pop
inc
cmp
push
nop
jl
mov
xacquire
out
pop
outsl
mov
lcall
pop
int
push
mov
sarl
cmp
mov
jle
jo
repz
mov
sar
bound
lds
nop
fcomps
in
out
push
out
xchg
or
xchg
and
lds
ret
es
adc
jmp
jae
or
outsl
bound
add
out
jns
dec
xchg
jnp
push
xchg
ljmp
adc
inc
das
roll
mov
jmp
in
adc
cld
leave
add
sbb
sahf
cld
scas
enter
cmp
xchg
mov
dec
xchg
pop
flds
push
lahf
fldl
sbb
scas
push
or
pop
push
movsb
xor
push
pop
divb
xchg
add
fnsave
push
cli
mov
mov
fcompl
cltd
stc
addb
mov
jb
sbb
sbb
stc
add
rolb
xlat
filds
arpl
sbb
mov
fyl2xp1
jns
mov
mov
cmp
int3
incl
call
xor
sub
loopne
test
fwait
inc
not
adcb
fs
imul
js
out
or
mov
pop
adcl
call
push
sbb
int3
cmp
and
sbb
fstps
jle
shr
jl
fwait
pop
jg
nop
mov
jbe
mov
xchg
xor
xchg
and
xchg
sub
out
lea
ja
pop
and
jno
jnp
sbb
pop
cmp
xlat
call
xchg
test
adc
dec
mov
mov
cmpsb
push
fidivrs
movsb
andl
jmp
or
cmp
jbe
ja
mov
mov
sbb
mov
aaa
sti
fiaddl
push
enter
clc
fcmovnb
mov
pop
add
jmp
cmp
adcl
lea
out
and
xorb
icebp
push
mov
cmpsl
outsl
es
jge
cmpsb
adc
and
pop
into
jae
std
dec
in
fisttpl
aam
push
jmp
push
cmp
insl
push
mov
xchg
out
fcompl
push
inc
jae
add
add
insl
or
mov
pop
inc
mov
dec
mov
repz
xlat
outsb
shrb
ret
popa
cmpb
mov
adcl
mov
lock
dec
in
insl
fbstp
mov
and
lods
pop
loopne,pt
sub
jg
loopne
mov
mov
push
repnz
cmp
add
cmc
pop
rcr
outsb
pop
push
jnp
mov
mov
outsb
jae
push
pop
sub
and
mov
out
xor
push
call
test
out
adc
mov
notb
test
mov
push
jmp
paddb
mov
inc
sub
insb
dec
ja
dec
fadds
add
aas
xchg
or
cmp
into
cli
xchg
mov
aaa
xor
out
icebp
lock
imul
sarl
mov
pop
and
mov
shr
jecxz
push
jge
push
scas
adc
push
repnz
add
shll
mov
sub
jle
sarb
mov
out
mov
and
sub
adc
sbb
mov
jge
iret
or
push
es
or
xor
imul
cmp
std
imul
stos
int
stos
fcomip
bound
popa
xor
mov
dec
push
rcrl
sbb
ret
bound
insb
aas
add
push
pop
cltd
lea
test
jb
icebp
loopne
push
pop
adc
clc
mov
sbb
push
inc
bound
adc
pop
inc
repz
out
stc
xchg
sub
pop
jb
xchg
dec
dec
shlb
jnp
cmp
adc
adc
pop
adc
mov
push
mov
ds
fsts
aam
xor
clc
and
jbe
roll
jb
sbb
lods
in
jmp
fldl
jge
add
incl
idivb
je
dec
jge
sahf
mov
push
enter
jge
cmp
insl
test
cltd
lods
sbb
sub
dec
call
inc
bound
fxtract
mov
mov
je
ja
push
jbe
mov
aas
sahf
int3
push
push
adc
enter
dec
cmc
xor
cmp
pusha
jl
mov
adc
cmp
mov
push
push
jno
mov
sbb
xchg
je
xchg
xchg
jge
rcl
test
jmp
pop
mov
test
and
ss
add
xor
lds
lcall
stos
xor
and
xor
ret
xlat
ret
or
sub
xor
jecxz
xchg
pop
lods
je
mov
cwtl
sub
lcall
stc
iret
add
sbb
bsf
mov
or
sahf
push
in
into
lods
jnp
ret
inc
adc
aas
mov
mov
xchg
addl
jge
scas
and
cmp
xchg
mov
cld
mov
daa
enter
xchg
test
data16
mov
push
daa
sahf
cwtl
outsb
xchg
add
insb
xlat
addr16
jmp
jle
icebp
pop
es
jg
hlt
mull
or
jge
xchg
outsl
jmp
and
mov
mov
les
push
cmc
sarb
fdivl
xchg
cwtl
cmc
iret
dec
push
dec
fcompl
pusha
xchg
std
popa
pusha
cmc
pop
cltd
stos
and
ret
jge
mov
nop
hlt
mov
cmp
xchg
dec
mov
dec
lcall
inc
addl
ja
add
mov
int3
cmpsl
sbb
xor
cmp
pusha
incl
in
es
mov
xchg
popf
je
inc
jno
adc
mov
lock
cmp
mov
fldt
inc
dec
ret
icebp
repnz
jns
xchg
mov
push
or
and
mov
test
push
cld
adc
jmp
test
push
mov
sub
xor
ficoms
jb
cmp
dec
aas
mov
pop
add
and
std
xor
adcb
cli
xchg
sub
das
andl
ror
push
and
xchg
cmpsl
jnp
iret
mov
fisttpll
xor
sub
xor
push
dec
jecxz
xchg
sbb
cmp
adc
xchg
cltd
bound
adc
mov
xchg
arpl
mov
xor
lret
cwtl
or
idivl
mov
dec
lahf
movsl
sbb
xor
or
test
loopne
int3
out
mov
jns
testl
or
add
mov
incl
push
loopne
xchg
push
dec
les
xor
sarl
dec
stc
daa
sahf
in
jae
andb
ret
aas
aas
pop
scas
stos
clc
sbb
jmp
fwait
movl
sub
out
test
jmp
pop
test
dec
mov
test
stc
sub
das
enter
jge
js
add
outsb
rcrb
add
fisttpll
jo
mov
add
lret
popf
xchg
arpl
push
stos
ss
mov
test
cmp
je
jno
push
enter
outsl
into
mov
incb
mov
mov
rclb
call
shlb
xchg
push
ss
mov
mov
mov
mov
mov
xor
sub
enter
call
mov
cli
adc
and
adc
ret
jbe
push
mov
andb
ss
jb
inc
out
mulb
xchg
xchg
add
repnz
ret
jbe
push
mov
andb
ss
jb
inc
sahf
push
mulb
xchg
add
repnz
ret
jbe
push
mov
addb
ss
jae
inc
out
mull
xchg
xchg
add
adc
push
mov
jmp
push
mov
sub
movl
movl
movl
movl
call
mov
cmpl
jne
push
push
push
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sub
and
dec
jnp
and
add
add
push
add
add
or
out
add
add
pushf
add
add
add
add
add
add
ja
pop
add
add
add
or
add
xchg
add
imul
add
add
add
add
add
add
rolb
inc
add
addl
add
insb
add
popf
add
add
xchg
add
add
push
add
jbe
filds
insb
add
bound
in
push
add
arpl
mov
insb
add
lcall
add
add
cmp
mov
cmp
lea
cmp
push
add
add
add
add
add
das
add
add
add
add
popa
add
add
insb
add
add
add
mov
pusha
add
insb
add
mov
test
sbb
push
add
insb
add
pushf
add
add
add
xor
add
add
add
add
adc
or
add
add
add
imul
add
add
add
add
add
add
add
add
dec
add
add
add
sub
nop
add
push
add
add
aaa
add
inc
add
add
add
cmp
adc
insb
add
mov
mov
imul
add
add
add
xlat
add
add
icebp
add
add
push
add
add
add
add
add
add
mov
addl
add
insb
add
roll
jo
ja
push
add
add
add
add
add
push
add
add
adc
mov
adc
cmp
fiaddl
insb
add
sub
adc
adc
jo
popa
add
xor
popf
add
data16
fadds
or
push
add
adc
jo
pusha
add
lret
add
add
add
push
add
sub
loopne
pop
add
xchg
lcall
add
add
fadds
push
add
lods
add
add
xchg
add
add
bound
inc
add
lcall
add
test
adc
int3
add
add
add
add
xor
inc
add
mov
add
int3
add
add
push
add
add
add
add
filds
je
sub
push
add
add
add
push
add
nop
add
loopne
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
jg
loopne
mov
loope
aaa
add
add
add
or
addl
push
add
add
add
jo
loopne
insb
add
aaa
add
add
add
add
add
add
add
add
add
add
push
add
add
add
push
add
add
add
add
mov
add
mov
jo
movl
push
add
push
add
adc
insb
add
add
add
pushf
add
add
cmp
and
insb
add
or
push
add
add
add
pop
add
add
add
cmp
jo
lods
add
outsb
add
add
add
add
add
add
add
je
push
add
add
add
add
add
add
add
pop
add
add
lcall
add
add
add
add
add
add
mov
dec
and
sub
add
jo
addl
xor
sub
pop
adc
xor
add
mov
out
mov
push
cmpsb
xor
or
fimull
push
and
fnstenv
hlt
scas
ret
lret
vsqrtss
jb
or
aaa
mov
inc
adc
js
add
inc
and
dec
ret
sub
pop
in
repnz
pop
aas
lds
fwait
adc
int3
fldt
push
xchg
jp
je
icebp
test
or
out
sbb
sarb
push
adc
sub
inc
push
dec
hlt
cmp
jo
aas
cltd
mov
aam
imul
jnp
mov
in
int3
xchg
pop
pop
stos
fadds
leave
push
jns
hlt
outsb
or
lods
fbld
movsl
dec
shl
imul
or
outsb
xchg
rcrb
fsub
inc
cmpsb
push
ss
sub
into
fwait
subl
xor
adc
or
lcall
dec
push
cmpsb
sbb
jnp
cmp
push
test
stos
add
testl
push
int
sti
lcall
pop
inc
inc
test
divb
push
mov
lcall
out
and
cmp
jecxz
and
push
fisubl
mov
adc
push
mov
mov
out
jns
xchg
gs
ds
enter
stos
push
stc
inc
vmovapd
addr16
std
sub
or
adc
jp
push
jns
mov
std
les
das
stos
push
push
xchg
setbe
dec
fldt
and
cmpsl
mov
cmpsl
shrb
cmc
mov
cmpsb
daa
cs
sbb
shl
and
aaa
mov
xchg
aaa
mov
movsl
out
xchg
ret
sub
jg
lea
push
add
fcos
push
adc
ss
push
in
icebp
push
xchg
cmp
out
add
repnz
imulb
push
outsl
adcb
lcall
out
pusha
add
mov
pop
mov
push
mov
into
mov
cmpsb
cmp
jp
clc
push
xchg
scas
jg
repnz
ret
stos
lds
mov
push
jae
clc
jle
push
das
int
dec
ret
lods
cmp
sub
and
pop
pop
lret
mov
xchg
or
xchg
ret
cmp
in
fidivs
push
dec
stos
test
and
xchg
out
pusha
lahf
jb
mov
mov
aad
dec
mov
stos
mov
push
ret
pop
mov
dec
xorl
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
repnz
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
repnz
fdiv
add
aam
add
int3
repnz
repnz
mov
repnz
lods
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
insb
hlt
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
mov
hlt
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
testb
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
testb
mov
testb
lods
testb
movsb
testb
pushf
testb
xchg
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
testb
cld
testb
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
shl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
clc
add
dec
clc
add
push
clc
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
clc
add
lods
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
