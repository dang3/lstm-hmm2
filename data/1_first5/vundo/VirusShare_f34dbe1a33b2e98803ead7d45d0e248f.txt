jmp
dec
push
insb
jmp
pop
add
jno
dec
inc
data16
fs
ja
jl
push
push
je
outsb
jo
inc
jl
push
push
pop
jb
add
push
push
push
push
inc
inc
popa
push
pop
pop
add
imul
jns
pop
jmp
pop
jae
jne
inc
add
push
jb
lock
dec
outsl
popa
ja
cmp
imul
inc
jae
inc
add
inc
add
pop
inc
addr16
pop
push
addr16
outsb
dec
pop
jns
jge
pop
inc
dec
jmp
insl
jae
insl
push
push
pop
imul
push
pop
jo
jmp
jl
jge
inc
imul
jo
inc
jns
add
jne
gs
add
inc
dec
push
imul
addr16
pop
fs
push
pop
pop
jno
jb
dec
jne
insl
inc
dec
add
inc
insl
je
jmp
jb
fs
push
dec
outsb
inc
arpl
push
push
inc
mov
push
mov
jmp
push
imul
push
insl
dec
push
dec
jno
push
arpl
inc
push
inc
jl
arpl
fs
jge
jns
inc
dec
jle
outsl
pop
dec
imul
jnp
dec
imul
add
push
dec
jmp
outsb
jno
inc
jp
add
jns
inc
push
inc
dec
add
aas
dec
dec
push
push
push
je
fs
add
add
push
pop
inc
jl
inc
inc
imul
inc
insl
jno
insl
jnp
data16
jno
push
je
jbe
jne
jle
pop
push
jmp
jge
push
je
jbe
push
popa
jmp
inc
jb
dec
arpl
jl
pop
dec
inc
add
jmp
pop
popaw
inc
inc
add
pop
push
dec
jmp
pop
jnp
inc
inc
jmp
imul
arpl
inc
push
push
dec
push
inc
gs
push
pop
pop
add
dec
arpl
pop
pop
jbe
inc
jae
bound
fs
arpl
js
imul
jle
imul
je
push
gs
push
jmp
jno
jbe
dec
jb
jle
dec
push
add
ja
inc
dec
jle
insl
add
dec
dec
jbe
add
add
dec
ja
fs
pop
outsb
jns
dec
push
pop
dec
jae
inc
push
pop
jne
popa
push
jmp
arpl
jmp
jle
dec
jno
js
pop
jnp
jnp
jmp
push
jns
pop
inc
jae
outsl
push
jl
inc
jo
jno
gs
inc
dec
outsl
dec
pop
pop
push
push
pop
bound
insb
push
pop
dec
jl
inc
xor
jmp
jge
pop
jmp
jl
insl
inc
fs
addr16
pop
dec
jge
arpl
push
jb
pop
inc
push
pop
inc
pop
pop
dec
jae
push
push
jb
jbe
pop
push
dec
popa
jno
outsb
jo
push
jb
popa
dec
js
sarl
jbe
inc
jmp
jnp
inc
jle
jne
outsl
add
jmp
add
push
push
push
outsl
push
insb
pop
pop
js
add
pop
add
add
pop
insl
addr16
js
push
jb
push
outsb
add
bound
add
push
call
jmp
dec
jne
jmp
jne
bound
push
pop
dec
push
gs
dec
inc
addr16
jo
pop
jge
ja
push
dec
add
outsl
push
jo
jo
insl
push
push
push
dec
inc
jp
enter
inc
add
dec
jne
pop
pop
bound
pop
popa
jmp
insb
pop
push
dec
data16
add
imul
bound
imul
dec
popa
jle
pop
add
cmp
jbe
push
outsb
bound
jns
popa
jne
out
inc
pop
push
push
push
data16
push
push
gs
pop
jnp
inc
inc
dec
insl
jno
push
outsb
push
add
inc
jp
inc
jo
inc
jmp
jmp
jbe
push
jp
push
insb
add
js
jns
add
pop
gs
add
inc
inc
push
push
inc
dec
data16
pop
dec
add
pop
push
jp
arpl
popa
dec
jge
jmp
add
add
push
push
data16
pop
jmp
push
dec
jmp
jne
fs
jnp
aas
pop
dec
push
jno
pop
arpl
insb
arpl
inc
pop
pop
jnp
inc
pop
ja
outsl
push
jl
jbe
ja
gs
inc
inc
add
pop
jge
jne
imul
push
pop
add
dec
add
dec
inc
ret
jmp
dec
jbe
jmp
pop
data16
dec
inc
pop
add
add
dec
push
insb
jle
pop
inc
jmp
popa
jbe
js
push
jo
jle
data16
inc
add
push
dec
add
pop
pop
ja
dec
inc
jo
jnp
push
jge
mov
jmp
add
ja
arpl
jo
push
pop
dec
arpl
push
add
dec
dec
dec
jmp
dec
jns
imul
jne
jp
add
add
pop
js
jae
push
jae
dec
dec
push
jmp
jge
inc
add
imul
addr16
dec
pop
dec
inc
imul
pop
push
pop
bound
jmp
arpl
push
pop
jae
push
insb
pop
jp
dec
dec
fs
pop
addr16
jl
add
dec
dec
inc
pop
imul
add
test
add
add
cmp
addr16
jns
inc
jbe
jne
dec
imul
popa
dec
outsl
push
jae
fs
inc
jns
jno
jns
push
jmp
imul
pop
add
jb
inc
inc
dec
pop
pop
bound
bound
out
arpl
aas
jns
push
pop
popa
inc
pop
bound
insl
push
jno
dec
fs
jae
arpl
dec
jl
dec
push
pop
addr16
push
jmp
jb
jae
jno
pop
inc
push
push
add
inc
jns
outsl
pop
gs
loop
pop
dec
pop
dec
dec
dec
outsb
pop
insb
pop
jne
popa
inc
push
jp
dec
inc
insl
jns
arpl
pop
mov
jmp
jge
bound
dec
inc
pop
inc
dec
addr16
insl
insl
dec
fs
pop
jmp
inc
js
dec
jns
jae
jnp
jb
addr16
inc
popa
dec
js
inc
outsb
pop
jle
inc
add
push
pop
jp
inc
jle
push
inc
add
inc
jmp
jmp
push
jo
add
bound
jle
outsl
dec
push
pop
inc
pop
fs
jmp
dec
data16
inc
jbe
cmp
dec
arpl
popa
je
push
inc
imul
inc
je
jmp
insl
push
jae
push
add
insl
ja
jbe
outsb
dec
inc
inc
data16
jp
arpl
inc
inc
js
js
gs
push
dec
push
push
push
jmp
and
add
add
push
scas
mov
xor
jmp
dec
mov
mov
dec
xchg
sahf
mov
pop
jmp
add
jmp
pop
pop
dec
dec
push
dec
pop
dec
push
inc
dec
jp
inc
jno
outsb
inc
bound
add
inc
push
outsb
imul
push
jne
inc
jle
jae
pop
push
jbe
imul
inc
inc
pop
jmp
push
dec
je
dec
push
pop
jmp
outsl
pop
pop
imul
jmp
insb
insb
pop
insl
add
jo
jle
push
dec
add
add
push
pop
dec
imul
outsb
add
jmp
pop
dec
inc
push
jbe
add
jnp
inc
bound
dec
push
jmp
imul
pop
inc
dec
pop
dec
outsl
add
inc
addr16
insl
jl
pop
insl
push
pop
jp
inc
push
dec
add
push
ds
jge
jmp
add
jle
push
insl
jo
push
jp
add
insl
add
pop
inc
jno
push
push
jp
imul
jns
pop
jo
inc
jle
push
pop
jle
inc
jp
pop
add
imul
jns
ret
add
add
pop
jns
inc
add
popa
pop
inc
outsb
insl
imul
mov
jmp
fcoml
repnz
add
fimuls
jmp
ja
imul
jge
addr16
popa
jl
pop
addr16
imul
jl
outsl
add
inc
jl
jae
pop
jbe
push
pop
jae
jle
jle
pop
jb
inc
add
jl
imul
popa
inc
jge
add
outsb
pop
push
add
pop
jmp
arpl
dec
jnp
imul
push
inc
push
inc
inc
jnp
push
je
pop
insl
insl
push
je
push
imul
inc
js
imul
jns
jge
inc
bound
inc
jl
insl
add
outsb
push
inc
pop
inc
jmp
push
inc
jbe
jmp
dec
pop
pop
jb
imul
jmp
jmp
push
imul
pop
addr16
outsb
ja
dec
dec
dec
add
jae
jae
pop
jo
jge
push
outsb
jns
pop
push
jle
jp
pop
dec
ja
add
jbe
je
jl
jmp
add
inc
fs
inc
pop
push
push
jo
push
mov
add
cmp
outsb
jmp
jnp
bound
dec
push
inc
inc
js
push
jge
popa
push
add
jns
add
inc
push
jno
push
push
push
pop
push
jb
pop
pop
jno
dec
pop
push
pop
pop
pop
insl
dec
add
enter
jae
jmp
jae
push
push
dec
jno
push
push
jmp
push
inc
add
jb
cmp
jne
add
push
popa
pop
dec
jae
add
jle
insl
pop
add
dec
inc
jnp
jl
pop
outsl
jae
jle
pop
dec
jmp
jbe
push
inc
jb
inc
jle
pop
outsb
inc
bound
cmp
jne
jmp
dec
arpl
insl
jnp
push
inc
dec
je
push
ja
outsb
fs
popa
push
jns
jns
add
pop
inc
push
pop
add
add
jle
add
insl
dec
dec
inc
pop
dec
pop
add
inc
jmp
jmp
dec
push
imul
popa
insl
dec
dec
gs
jmp
inc
add
inc
dec
jmp
jae
insl
dec
inc
imul
push
inc
add
dec
push
pop
inc
inc
jne
jbe
inc
jo
push
pop
pop
jb
pop
inc
jle
fisubl
jp
outsl
pop
fs
pop
pop
inc
je
push
je
insb
jle
pop
mov
jmp
push
fs
jmp
add
push
ja
inc
jp
jo
jle
push
popa
outsb
jnp
dec
outsb
jnp
pushw
jbe
inc
outsb
insb
push
dec
pop
popa
insl
jnp
imul
outsl
add
add
add
add
ret
jne
jno
fs
jae
outsl
popa
add
dec
push
addr16
inc
fs
insb
jp
push
pop
dec
add
dec
outsl
inc
jno
add
inc
jae
inc
insb
jnp
jae
jnp
push
inc
pop
pop
push
outsl
arpl
jbe
jne
popa
pop
jno
imul
insb
inc
inc
je
les
jmp
imul
jb
addr16
inc
push
inc
dec
jb
jmp
add
dec
add
jmp
pop
bound
push
inc
pop
push
inc
dec
jo
fs
inc
jbe
jnp
js
add
arpl
loopne
dec
insl
jo
dec
push
jae
inc
push
pop
jge
imul
add
dec
push
inc
xchg
jmp
inc
insb
push
jmp
ja
jle
jno
jb
push
push
jle
dec
add
jl
js
dec
jnp
jns
inc
push
jo
insb
dec
jge
inc
dec
bound
outsw
dec
jl
dec
inc
inc
dec
imul
je
shll
insl
dec
jae
cmp
popa
pop
ja
inc
pop
push
pop
jbe
inc
add
out
add
inc
push
jbe
push
pop
jp
push
jl
jo
inc
jne
pop
dec
inc
push
pop
push
dec
inc
jo
jl
push
gs
insl
jae
jno
jle
arpl
push
jmp
js
jl
dec
jp
jp
dec
push
jnp
inc
push
arpl
add
popa
pop
inc
jb
inc
fs
pushw
jnp
je
inc
push
pop
pop
pop
pop
arpl
jno
push
arpl
enter
bound
cmp
pop
dec
add
insl
push
jle
add
icebp
pop
dec
push
push
dec
pop
jge
inc
add
outsl
jb
push
push
add
outsb
dec
dec
jbe
pop
push
add
pop
add
add
jo
pop
jmp
pop
bound
pop
inc
ja
push
push
jnp
insl
jl
push
pop
je
addr16
push
jo
imul
dec
inc
dec
inc
push
inc
push
inc
push
pop
jns
push
pop
outsl
jno
pop
jnp
pop
inc
bound
inc
dec
dec
jmp
push
je
dec
add
ja
insb
push
arpl
insl
ja
jmp
addr16
js
dec
jmp
pop
jns
add
outsb
pop
jp
add
push
arpl
jae
pop
ja
popa
add
gs
push
jno
je
outsb
inc
gs
jae
insl
push
jp
outsl
push
jns
jge
je
jno
push
jns
push
dec
arpl
inc
add
pop
pop
push
arpl
ret
jmp
gs
jmp
dec
je
push
inc
inc
jnp
push
jge
outsb
dec
jno
pop
imul
insb
push
insb
gs
jle
inc
dec
fs
inc
dec
pop
pop
outsl
inc
popa
inc
jp
jl
dec
jo
push
insl
pop
inc
jle
jae
jb
push
jmp
add
data16
pop
jo
jns
push
push
je
ja
jge
push
add
aas
imul
push
add
push
fs
push
push
insl
dec
jns
inc
outsl
dec
addr16
addr16
insl
addr16
push
jnp
push
js
fs
inc
push
push
dec
imul
jge
inc
push
dec
inc
dec
push
pop
imul
jnp
ret
dec
popa
jae
insb
jmp
pop
pop
popa
jp
add
insb
dec
add
lock
add
pop
arpl
dec
inc
outsb
outsb
je
jns
jle
dec
push
add
pop
add
push
addr16
add
dec
add
inc
pop
jle
ret
iret
jmp
outsb
jno
jmp
jge
inc
jge
jnp
outsb
add
inc
imul
push
outsb
jae
bound
inc
pop
jae
push
gs
arpl
push
inc
jbe
dec
jns
jns
je
imul
jle
popa
jmp
push
push
push
jo
push
jmp
outsb
inc
inc
insb
add
jo
inc
jmp
pop
fs
dec
jno
ja
cmp
pop
jp
inc
jbe
jno
inc
jnp
jp
jne
inc
popa
bound
fs
push
pop
dec
inc
add
insl
ja
jmp
dec
dec
add
imul
dec
add
ja
dec
jae
ret
inc
dec
dec
add
push
add
inc
dec
dec
inc
jo
pop
inc
add
dec
inc
jns
outsb
ja
pop
inc
add
inc
pop
jns
jno
push
pop
je
push
add
push
dec
jns
jne
dec
jnp
pop
outsb
dec
dec
jb
jno
jnp
shr
outsl
jne
add
pop
inc
fs
jp
jl
dec
jno
push
bound
pop
pop
push
dec
jmp
inc
dec
inc
bound
dec
jbe
dec
gs
ja
pop
dec
dec
pop
dec
popaw
dec
add
addr16
fldl
jp
inc
js
add
add
add
jl
pop
jnp
outsl
pop
inc
jno
js
dec
inc
jmp
dec
inc
pop
jmp
inc
jno
jge
addr16
push
inc
inc
jl
insb
inc
outsl
outsl
inc
pop
jae
dec
ja
pop
inc
outsb
jmp
gs
add
imul
jne
bound
addr16
add
jns
insb
jne
popa
inc
dec
jne
jmp
push
jbe
jae
inc
inc
outsl
jne
je
jo
dec
pop
dec
pop
push
jmp
push
push
bound
inc
jle
imul
dec
inc
push
fs
arpl
addr16
jno
push
outsl
je
push
jmp
imul
je
outsb
jnp
push
add
jne
imul
jmp
dec
dec
add
dec
jbe
insb
dec
add
pop
inc
add
add
add
add
dec
pop
jo
popa
outsl
push
inc
push
inc
dec
outsl
push
push
dec
popa
je
js
dec
insb
imul
popa
push
imul
jmp
jo
inc
jno
dec
inc
jle
jle
inc
jae
insl
pop
push
add
jmp
dec
jp
jmp
fs
inc
inc
outsl
inc
inc
push
js
arpl
jae
insb
dec
add
jae
dec
inc
inc
push
push
push
jl
outsb
bound
jo
jo
add
add
imul
jo
jle
je
jmp
jb
pop
add
jnp
jne
dec
jns
imul
dec
inc
pop
jmp
ja
jnp
inc
jns
add
outsl
add
jbe
jne
inc
inc
push
jae
outsb
ja
inc
pop
ja
pop
ja
pop
dec
jne
dec
jnp
jp
popa
arpl
jp
add
add
jp
enter
jo
inc
imul
jns
jl
push
push
addr16
push
add
add
push
inc
pop
pop
jge
insb
bound
jo
jle
jle
inc
dec
jno
jo
jno
dec
push
dec
pop
add
bound
arpl
add
imul
jl
dec
inc
inc
inc
insb
popa
inc
jge
jl
jp
add
add
jmp
bound
data16
jo
pop
pop
dec
dec
jmp
outsl
jnp
jl
jge
outsl
push
outsb
push
jns
dec
pop
je
arpl
push
je
fs
jo
add
pop
jl
jae
pop
js
inc
js
jne
add
dec
jmp
je
jbe
inc
dec
js
insb
pop
inc
jp
jmp
insb
inc
pop
data16
pop
jnp
pop
push
push
inc
add
data16
jnp
push
pop
outsl
dec
push
popa
jnp
dec
popa
dec
imul
dec
addr16
ja
imul
dec
inc
ret
jmp
dec
push
push
jmp
insl
pop
dec
add
push
push
ja
jae
dec
inc
jle
jnp
jbe
pop
dec
jge
inc
pop
add
push
inc
push
dec
dec
jo
push
arpl
data16
push
push
jne
inc
pop
insb
pop
push
je
jmp
dec
jmp
insb
jae
jge
dec
pop
push
gs
pop
push
in
jns
dec
pop
jp
jp
push
jp
add
bound
push
pop
inc
dec
push
ja
jle
pop
push
insb
inc
inc
inc
push
pop
push
inc
imul
sub
sub
jmp
scas
cmp
cmpsl
add
cmp
xchg
jmp
loope
insb
pop
sub
push
jmp
xchg
lock
das
stc
sub
and
xor
mov
mov
mov
xor
and
sub
sub
or
add
xor
and
push
jmp
icebp
movsb
test
push
dec
mov
jmp
inc
fldenv
popa
sub
jmp
mov
sbb
jp
and
inc
pop
lea
rol
add
sub
xor
sub
inc
push
jmp
dec
outsb
and
or
push
or
movsl
jg
jle
add
jmp
in
std
pop
add
push
push
pop
out
lock
add
add
loopne
decl
mov
incl
dec
add
sub
dec
jne
mov
mov
mov
jmp
filds
dec
mov
outsb
pushl
ss
jmp
arpl
cmp
outsl
mov
mov
jmp
aad
and
jmp
lcall
or
jmp
jl
or
mov
adc
jmp
les
jne
leave
ret
push
mov
sub
sub
jmp
sbb
nop
int3
push
xchg
jmp
das
movsl
icebp
test
popa
arpl
pop
sub
push
jmp
push
fchs
adc
and
decl
or
cld
decl
pop
cld
sub
dec
sub
sub
add
sub
shl
or
add
and
shr
add
sub
dec
jne
mov
mov
pop
mov
jmp
cli
in
cmp
leave
loope
fcompl
int
or
ficoms
mov
xor
leave
ret
push
mov
sub
push
jmp
loop
ljmp
push
push
fsubl
imul
and
in
add
adc
add
mov
xchg
jae
add
jns
jmp
xchg
jmp
sub
and
ja
pop
sub
xor
mov
mov
mov
add
sub
rol
and
add
and
add
and
add
sub
or
sub
xor
and
dec
add
ror
or
or
and
or
or
dec
jne
mov
mov
pop
mov
jmp
inc
push
in
out
push
pop
xchg
rclb
movsb
push
add
jmp
add
lods
xor
les
add
sub
leave
ret
push
mov
sub
push
push
xor
mov
mov
mov
and
and
shl
dec
add
and
dec
jne
mov
mov
pop
mov
jmp
adc
aaa
out
cmpsl
cmpsl
add
jmp
mov
and
inc
add
add
leave
ret
call
sbb
je
clc
pop
aas
aaa
xor
cli
orl
testl
rcll
push
bound
push
pop
popf
mov
fisubs
jmp
dec
not
inc
mov
adc
outsl
das
arpl
mov
sbb
jge
pop
aaa
mov
xor
xor
fisttpl
es
orl
subl
scas
sbb
cs
cltd
inc
mov
jge
outsb
ds
xchg
ja
lods
scas
push
pop
sub
and
sub
aaa
sub
jl
adc
cmpl
adc
mov
es
daa
jae
cmp
push
sub
cmc
cmp
dec
add
pop
inc
out
aam
lret
nop
idivl
push
and
sub
popa
insl
mov
xchg
or
rcrl
test
sub
sub
jnp
sbb
ja
aaa
js
fidivs
sbb
or
loope
xchg
daa
pop
push
hlt
mov
jmp
push
aaa
std
es
aaa
fwait
xor
and
pop
aaa
cmp
lret
sub
dec
cs
jns
and
js
mov
sbb
out
adcb
mov
push
ret
and
cmpsl
mov
rclb
cmp
xor
lods
or
cmp
rep
push
jbe
mov
mov
sbb
add
pop
dec
jmp
or
stos
lret
or
arpl
daa
stos
sub
scas
sub
lods
push
lret
inc
sub
pop
inc
popa
aas
das
jbe
or
sub
push
stos
pop
mov
push
cli
xor
push
loop
inc
push
mov
jb
lock
sub
ljmp
fcomps
movsbl
sbb
scas
xor
jae
pop
fs
pop
aaa
jbe
mov
aaa
xchg
or
aaa
in
and
xlat
mov
aaa
xorb
sbb
xlat
mov
sti
pop
sbb
rcr
push
dec
sahf
push
cmp
lahf
fnstenv
cli
sbb
jle
insl
aaa
addr16
daa
cmp
dec
cmp
test
mov
inc
sub
into
push
divb
dec
in
jns
and
test
cmpl
jecxz
mov
or
pop
aaa
xchg
xor
out
push
pop
or
adc
and
adc
fisubs
sub
sbb
add
aam
xor
mov
push
xchg
adc
pop
aaa
or
scas
mov
cld
gs
js
and
push
addr16
in
fisubrs
mov
gs
sbb
subl
mov
push
rcrl
lea
xchg
dec
inc
lods
cmp
imul
mov
inc
push
or
gs
js
lock
cmp
inc
or
dec
inc
mov
fs
test
jmp
dec
outsb
lock
sub
mov
push
nop
cmp
sub
mov
in
mov
mov
pop
aaa
add
loope
cmc
imul
or
std
arpl
xchg
xchg
pop
imul
test
ret
int3
mulb
aaa
insl
aam
fimuls
and
or
sahf
out
cmp
mov
ret
dec
cs
orl
pop
mov
pop
aaa
and
lods
mov
out
mov
xchg
inc
sahf
nop
dec
or
mov
movsl
inc
inc
lret
pop
pop
inc
int
idiv
pushf
jnp
test
popa
nop
pop
cmp
stc
xchg
dec
push
stc
cmp
pop
jno
pop
aaa
inc
xlat
mov
jp
je
test
insl
into
add
lock
add
push
adc
and
fisubrs
adc
lods
fs
push
ja
out
mov
mov
hlt
scas
push
mov
fisubrs
js
xchg
jp
pop
mov
dec
add
aaa
flds
mov
out
push
arpl
mov
xor
jno
rolb
push
orl
mov
fisttpll
lods
fsubrp
ljmpw
pop
pop
jno
loopne
mov
addr16
test
out
mov
outsb
pop
mov
aad
cmp
pop
mov
mov
dec
pop
push
in
fwait
and
pop
aaa
test
jg
mov
jbe
add
add
or
push
add
addr16
popa
xchg
imul
jns
xor
inc
ret
xchg
ficoms
xor
fisubs
lret
sub
xchg
pop
and
popa
sub
jbe
popa
test
imul
push
cmp
loopne
jb
and
outsb
imul
iret
pusha
sub
dec
lds
imul
add
stos
std
pop
aaa
xchg
lods
mov
mov
xchg
loope
pop
loop
mov
push
mov
nop
add
mov
hlt
fisubs
aam
add
jg
inc
dec
jecxz
pop
cmpsb
sbb
sbb
jnp
rcr
addr16
stos
fsubrl
mov
dec
xchg
cltd
add
movsb
rol
icebp
scas
aad
test
cmpl
hlt
dec
mov
pop
movl
sbb
ja
jnp
inc
dec
or
negb
clc
imul
mov
lret
clc
ss
mov
jns
test
rep
xchg
pop
aaa
push
jo
push
orl
call
mov
pop
bound
in
nop
repz
aaa
imul
dec
gs
jne
faddl
mov
inc
pop
stos
repz
js
roll
cmp
inc
mov
mov
in
push
imul
pop
fdivrp
adc
xor
sub
sub
testl
mov
stos
push
adc
inc
fnsave
mul
sbb
call
imul
add
out
jb
jle
pop
jne
ret
mov
mov
out
add
push
sbb
or
notb
dec
lea
push
std
pushf
pop
mov
ret
push
aaa
and
xlat
pop
aaa
ret
inc
pusha
clc
jmp
out
xchg
insb
cmpsl
insb
mov
fdivrp
pop
daa
pusha
sub
jae
repz
mov
icebp
pusha
pop
nop
add
pop
lods
dec
xor
pop
into
ljmp
mov
inc
dec
inc
sbb
dec
jg
and
jecxz
sub
adc
pushf
call
movb
jg
add
stos
add
pop
and
inc
mulb
imul
aaa
push
cmp
lahf
and
xor
pop
nop
lods
cmp
aaa
ljmp
aaa
mov
mov
mov
inc
pop
aaa
inc
jbe
inc
mov
jbe
mov
and
inc
hlt
pop
dec
cmp
jmp
aaa
outsb
mov
iret
mov
inc
pop
les
jno
fs
insb
lret
jno
dec
cmp
mov
stos
aas
ucomiss
fcom
pop
aaa
and
inc
inc
das
mov
sbb
lods
pop
fs
aaa
sub
jle
clc
pop
aaa
int3
arpl
cltd
jle
popa
fdiv
das
aaa
pop
mov
je
test
aaa
jae
mov
aaa
aad
aaa
xor
aaa
loopne
cmpsb
mov
jge
es
stos
rcrb
cmc
fldenv
cmp
shll
les
pop
aaa
jb
loope
not
pop
ret
sbb
out
mov
rcrb
adc
sub
mov
fldl
aaa
adc
test
jle
fiadds
mov
aaa
dec
sti
test
aaa
cmp
dec
mov
mov
adc
fwait
mov
cs
inc
ror
xor
mov
xchg
add
mov
lret
int
and
cmpsb
cmp
pop
or
ss
dec
push
ret
and
out
or
pop
inc
jo
xchg
fmulp
pop
aaa
add
fldcw
test
les
cmc
stc
xor
lret
mov
int3
icebp
xor
pop
pop
sahf
push
daa
sub
inc
push
andb
call
inc
pop
push
pop
and
enter
lods
xorb
ds
sbb
incl
rcr
sti
loope
arpl
imul
cli
and
mov
aam
dec
pusha
cmp
inc
inc
add
pop
fildll
scas
cwtl
pop
jp
andb
cmpsb
dec
movsb
ljmp
aaa
cs
mov
add
push
pusha
pop
out
adc
jecxz
js
insl
out
jmp
and
sbb
jle
pop
inc
inc
push
hlt
mov
pop
aaa
loop
jmp
cmp
mov
test
aaa
in
shrl
jge
loop
jno
adc
and
rcrb
jg
ret
inc
data16
xor
mov
loope
jle
dec
out
adc
clc
add
pop
out
mov
inc
imul
inc
inc
cmp
fldl
adcb
or
mov
and
adc
lret
mov
shrb
lret
xchg
test
xchg
arpl
mov
mov
fdivrp
sarb
cmp
in
and
scas
push
mov
mov
cmp
inc
lcall
pop
cmp
imul
push
mov
adc
mov
mov
arpl
imul
aaa
cwtl
mov
je
rolb
mov
roll
and
mov
fcomps
loop
ficoml
mov
mov
mov
inc
jge
call
aaa
sbb
out
test
xor
aam
jle
and
scas
inc
xor
rcrb
movsb
pop
aaa
popa
add
mov
aaa
mov
dec
rorl
sahf
mov
aaa
pop
mov
aaa
outsl
icebp
xchg
fucom
andb
mov
aaa
xor
rol
test
test
jp
inc
sbbl
push
aam
aaa
out
scas
call
aaa
lea
mov
mov
inc
xor
pop
lea
mov
cmp
lret
push
insb
mov
aad
jne
pop
jp
mov
mov
cmp
jae
mov
in
mov
pop
pop
jo
fidivs
jp
pusha
testb
mov
inc
lret
mov
out
xor
pop
cwtl
or
jns
xchg
imul
push
fdivrl
int
mov
jb,pt
fildll
sub
scas
and
cli
sahf
adc
aas
pop
test
stc
sbb
cmpsl
push
call
stos
mov
sbb
cmpsb
pop
mov
xor
jg
xor
cld
arpl
stos
inc
lds
repnz
cmp
mov
dec
je
dec
sub
rcrl
add
dec
shrb
dec
pushl
aaa
popf
js
push
ljmp
ss
daa
and
les
dec
sbb
and
or
push
push
xor
mov
cmp
mov
jle
pop
aaa
mov
test
rcrl
ljmp
jno
jg
shl
shll
pop
ss
sub
mov
gs
out
inc
stos
lahf
pop
jnp
push
movsb
pop
adc
fs
out
iret
shrb
orb
and
sahf
pop
aaa
xlat
push
sub
cmp
imul
push
mov
das
jo
stos
inc
cmp
xor
mov
jbe
pusha
and
xchg
out
sti
lahf
mov
std
pop
mov
or
ds
fwait
pop
push
xchg
stos
jb
sbb
mov
xor
push
sbb
add
cmpl
sub
arpl
in
in
mov
sbb
cmpsb
addl
xor
mov
icebp
dec
pop
or
mov
xor
ret
jnp
sbb
test
daa
js
adc
aaa
sbb
jbe
lods
fwait
in
fistpl
cmpl
das
xchg
pop
ret
scas
mov
nop
sti
push
push
jle
aaa
pusha
xchg
ja
sbb
push
mov
xchg
adc
iret
dec
ss
adc
repnz
mov
pop
xor
mov
xorb
sbb
xchg
ljmp
or
mov
fsub
les
dec
out
lods
mov
mov
out
inc
inc
data16
pop
mov
fisubrl
rcll
push
mulb
and
mov
mov
mov
rcrb
xchg
mov
jne
cmp
inc
test
insb
jecxz
pop
nop
push
inc
mov
fwait
jp
int3
sbb
add
mov
push
cld
je
dec
jne
aaa
xor
jno
stos
jnp
imul
cmpsb
xchg
and
lcall
mov
mov
xchg
call
add
mov
nop
inc
inc
sub
inc
and
sarb
mov
mov
xchg
js
dec
fisubs
pusha
push
subl
xor
pop
or
imul
push
xchg
push
repz
or
sub
push
fstps
in
xchg
inc
sbb
jge
mov
aaa
dec
subl
scas
mov
stos
lods
mov
loop
push
cmp
sbbl
inc
adc
lcall
push
loope
inc
dec
xlat
xchg
add
imul
mov
sbbb
lret
cmp
scas
ss
in
mov
push
push
aaa
inc
orb
rolb
or
clc
dec
sub
mov
push
fisttpl
call
mov
add
adcl
jp
mov
jg
dec
imul
pusha
roll
jl
xchg
add
nop
inc
dec
insb
push
das
jmp
cmp
or
dec
pop
lret
mov
cmp
les
leave
cmp
inc
sbb
gs
ret
andl
arpl
lds
cmp
push
cld
jo
bound
add
dec
addb
les
mov
jb
imul
cmp
pop
mov
lret
pop
sub
cwtl
xchg
and
mov
mov
jmp
xor
jbe
and
and
xor
adc
cwtl
mov
lods
or
inc
dec
xor
ss
sbb
sti
sahf
sub
out
imul
iret
mov
mov
inc
lea
pop
xchg
dec
xorb
fisttpll
mov
ss
cmp
inc
mov
insl
popa
nop
mov
mov
in
insb
ret
pop
sub
lea
int
ljmp
fistpll
push
js
fcoml
dec
and
push
push
pop
ret
test
aaa
pusha
ret
add
stos
enter
outsb
pop
push
pop
repnz
push
jl
jp
sub
test
pop
aaa
and
push
arpl
cmp
insb
faddl
jne
aaa
pop
mov
add
fildll
fdivrl
dec
fwait
imul
mov
dec
imul
sbb
cmc
mov
and
imul
push
mov
sub
aaa
xor
std
ss
mov
test
jge
push
imul
mov
imul
pop
aaa
sub
andb
addr16
xchg
jg
pop
aaa
gs
and
mov
shlb
pop
aaa
mov
pop
inc
pop
inc
loopne
adc
loope
frstor
inc
jne
cmp
gs
mov
sub
sbb
subl
xor
imul
mov
ss
ja
out
icebp
nop
arpl
mov
imul
lods
mov
lret
or
aas
dec
xchg
test
sub
mov
hlt
mov
rcrl
adc
xchg
or
or
lods
cmpb
mov
fwait
andl
push
in
sub
pusha
pop
xchg
in
xor
sti
sarl
andb
mov
test
inc
jecxz
mov
pop
inc
iret
bound
lods
mov
mov
pop
das
jp
lods
mov
test
sub
add
icebp
mov
fwait
mov
xorb
clc
fildl
rcll
pop
aaa
mov
pop
imul
mov
pop
aaa
ret
in
inc
sbb
and
ret
push
sbb
sbb
fs
scas
imul
out
nop
pop
mov
outsb
sub
lret
dec
call
pop
imul
and
test
cmc
and
push
pop
aaa
push
mov
in
inc
addr16
gs
dec
sti
cld
mov
push
fmuls
mov
loope
push
scas
aas
roll
nop
sbb
sub
cmp
xchg
push
mov
ret
dec
jno
jle
cmp
imul
fwait
mov
ficoms
clc
popf
mov
mov
xlat
xchg
nop
loopne
scas
lahf
lds
mov
add
jb
xchg
mov
xor
ret
out
fnstsw
adc
cwtl
jl
inc
dec
inc
cmp
fadds
lods
imul
fidivrl
push
out
pop
or
adc
add
outsb
imul
into
fs
mov
pop
dec
mov
add
decb
inc
cmp
push
xlat
fcomps
lods
imul
xchg
out
imul
mov
mov
push
js
xor
enter
out
xchg
adc
sub
rorl
lret
dec
mov
fnstsw
movsl
in
xor
test
in
aaa
jle
xchg
push
sub
call
mov
loope
mov
dec
sbb
mov
scas
inc
mov
aam
push
pop
push
imul
add
frstor
std
repz
inc
mov
imul
enter
ret
mov
inc
mov
stos
push
js
lret
outsb
push
inc
imul
lods
lea
jmp
ss
pushf
fiadds
add
testl
jne
enter
jmp
pusha
xlat
hlt
xchg
inc
dec
push
push
ret
jne
sub
xchg
nop
lcall
mov
popf
popf
aam
decl
adc
ret
dec
push
shl
xchg
fnstcw
popl
aaa
in
push
inc
jb
nop
sub
or
mov
fwait
mull
adc
repz
mov
adc
jp
jns
inc
and
xchg
mov
orl
pop
ds
aaa
and
dec
mov
cmp
out
cmp
out
or
inc
insl
push
into
mov
xor
fmuls
sti
mov
aas
sbb
cmp
aas
sbb
cwtl
and
xorl
insl
pop
xchg
mov
xor
fwait
xor
xchg
int3
mov
xor
sarl
sahf
mov
aam
mov
in
subb
mov
and
pop
cmp
imul
sub
pop
dec
jl
mov
jne
out
mov
mov
aaa
jmp
cmp
movb
repnz
xchg
test
xchg
pop
xor
inc
arpl
pop
aaa
dec
xor
inc
xor
push
pop
pop
and
mov
lods
clc
push
fidivl
lods
xchg
push
int3
xor
lahf
aaa
test
cmp
and
and
repz
nop
loope
inc
adc
sub
xor
nop
lods
mov
pop
sub
in
jp
in
cmp
inc
cld
inc
pop
lods
ret
xor
fnstenv
push
add
aaa
mov
mov
lods
push
and
imul
insb
xchg
xor
inc
sbb
cmp
std
sub
das
push
inc
pop
lahf
adc
bound
sub
sbb
or
cmp
jbe
sub
sub
cmp
inc
push
sub
insl
imul
scas
xchg
push
stos
aas
aaa
xchg
sub
inc
jge
mov
movsl
and
push
stos
add
push
mov
push
mov
aaa
fldenv
push
xor
test
stos
mov
xchg
push
loope
ficoms
ret
and
pusha
in
cmpsb
sub
push
mov
push
cmc
xor
and
dec
aaa
pop
and
lods
push
out
push
hlt
in
mov
addr16
cs
and
aaa
test
loope
aam
pop
inc
mov
scas
test
mov
pop
aaa
add
pop
sub
pop
aaa
push
add
sub
mov
inc
pop
mov
aaa
mov
imul
out
jo
cmp
lods
fisttps
pop
mov
xchg
in
fwait
cwtl
mov
or
mov
push
lods
cmp
fucom
mov
inc
cmp
pop
jg
push
mov
mov
test
mov
sbb
xchg
adc
pop
repz
pop
aaa
subb
pop
inc
sbb
mov
mov
push
sub
sub
scas
popa
push
cmp
xor
pop
aaa
jmp
jl
jne
fdivs
push
pop
sbb
jns
nop
shl
scas
pop
adc
inc
adc
roll
pop
aaa
scas
jne
mov
sbb
pop
into
sbb
movsb
dec
adc
lds
movzwl
jl
mov
cmpsl
fdivrl
xchg
es
sarb
pop
scas
inc
dec
pop
out
ret
ret
pop
xor
or
cmp
and
imul
pop
adc
dec
sbb
pop
aaa
jbe
push
lds
sbb
dec
enter
mov
xor
jl,pn
lods
mov
movsb
imul
xor
call
push
xchg
aas
lret
mulb
mov
dec
ss
push
push
inc
fldpi
xor
cs
jg
cmpsl
xchg
jbe
mov
and
mov
mov
cmp
mov
loope
or
mov
or
test
loop
xchg
aad
or
out
sbb
ret
xlat
scas
inc
add
or
je
scas
xor
sub
mov
mov
or
xchg
adc
sbb
xchg
add
ja
loopne
test
pop
mov
xor
pushf
push
jge
fs
frstor
pop
std
cmp
mov
cmpb
and
xor
rolb
jle
das
cmp
xor
daa
outsl
pop
jne
pop
aaa
notl
sarb
dec
dec
and
xchg
imul
icebp
fs
add
pop
addr16
inc
test
aaa
in
cmp
pop
mov
pop
aaa
in
mov
je
mov
je
and
and
pop
testl
icebp
xor
pop
lds
xchg
fsub
rcrb
insl
mov
jbe
loope
dec
add
negl
out
mov
aaa
test
fisubs
addr16
mov
push
aaa
repnz
scas
add
loop
popf
nop
ret
and
xor
subl
call
inc
xchg
ret
or
lds
addr16
into
add
aaa
or
add
pop
lock
mov
adc
push
inc
out
push
out
ds
pop
std
pop
aaa
adc
sbb
gs
mov
in
out
cmp
inc
cmp
jmp
sub
es
pop
les
cli
pop
aaa
fists
mov
data16
or
xor
mov
dec
jmp
xchg
cwtl
push
rcll
fwait
das
pop
nop
test
mov
dec
xchg
dec
xor
fcmove
mov
mov
fbstp
pop
stc
sbb
cmp
pop
sbbb
out
ss
out
cwtl
xorb
das
add
dec
push
push
push
adc
and
push
cmc
pop
aaa
sbb
and
push
dec
add
loope
and
hlt
pop
aaa
cli
fisubs
in
add
pop
lods
push
jge
daa
shll
dec
jmp
hlt
loopne
mov
xor
sub
repnz
cmp
sahf
dec
sub
or
push
sahf
stos
cwtl
lret
stc
jl
js
pop
aaa
lahf
jmp
cli
and
loopne
jl
inc
mov
cli
push
mov
sbb
inc
negl
cmp
jecxz
out
jns
mov
pop
pop
xlat
pop
aaa
mov
and
inc
enter
shl
mov
clc
jl
fstl
jbe
or
push
xor
data16
test
shrl
inc
faddl
js
cltd
pop
mov
xor
movsb
pop
dec
lret
pop
aaa
cwtl
sbb
pop
addr16
add
jae
inc
sub
andb
cltd
gs
push
or
jb
pop
lcall
xor
mov
out
sub
leave
ret
add
xchg
scas
sbb
hlt
mov
loop
ret
sbb
dec
sbb
inc
mov
mov
xor
and
out
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
add
pop
inc
and
push
push
iret
mov
mov
adc
push
fsubr
fstps
push
fwait
cmp
adc
ja
orl
scas
les
dec
cmpsl
pushf
pop
lcall
int
jp
stos
dec
les
dec
ss
jle
add
out
mov
aad
in
jae
aas
sahf
repnz
mov
lock
push
shr
jl
test
mov
lcall
popf
xchg
inc
adc
dec
sub
fidivrl
or
leave
outsl
or
jnp
outsl
nop
push
pop
das
out
shll
out
mov
jg
aam
push
in
es
push
out
gs
and
mov
xlat
add
addr16
push
dec
fmulp
fisttpll
xlat
call
xchg
adc
stos
pop
int3
rorb
std
pop
add
mov
shrl
sub
cmpl
test
add
arpl
cld
arpl
add
repz
push
dec
stc
outsl
in
shrl
push
dec
stc
outsl
in
shrl
xchg
mov
jb
out
in
jmp
xor
jbe
dec
mov
mov
es
push
out
gs
and
push
push
out
gs
and
add
mov
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
scas
ret
xchg
push
es
push
out
gs
and
push
push
out
gs
and
xor
popf
add
leave
insb
movd
dec
out
xchg
es
es
push
out
gs
and
dec
pop
clc
jo
or
fwait
in
mov
loope
cld
cld
lahf
mov
out
fwait
mov
in
es
push
out
gs
and
mov
pop
jge
dec
filds
es
ss
bswap
outsb
shll
pop
push
sbb
push
push
out
gs
and
adc
pop
pop
je
dec
es
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
push
push
out
gs
and
sahf
xchg
jecxz
fldt
cmp
cmpsb
fwait
jle
pop
test
fdivrl
loop
nop
and
mov
push
mov
sysenter
or
addr16
pop
jbe
out
push
pop
cmpsl
out
xchg
pushl
and
sbb
imul
mov
xchg
xchg
out
xchg
in
xor
jne
jno
fistpll
ret
xor
cwtl
or
jne
add
adc
or
mov
jmp
daa
je
ja
jg
into
add
rcrl
rcrb
popa
rcrb
test
loop
in
popa
xor
xor
aad
dec
adc
and
fldcw
shll
lds
cltd
sub
cs
data16
and
jle
jns
leave
scas
ds
jno
sub
sub
mov
decb
and
dec
shl
dec
jmp
sahf
push
cmp
cld
adc
sarl
js
cmpl
pop
and
or
in
cmp
aas
xchg
push
ds
cmpsl
inc
leave
mov
fisttps
sub
int
fisttpl
mov
xor
clc
test
lret
rolb
xchg
adc
mov
dec
inc
mov
sub
rorl
mov
arpl
std
mov
sbb
pop
lahf
out
fxtract
andb
push
lods
andl
cld
cmp
pop
fbstp
sub
jb
pop
dec
lds
lea
pop
rclb
xorl
dec
sbb
xchg
xchg
push
stos
xor
sbb
pop
pop
jp
add
mov
int3
jle
sub
xor
in
sub
in
outsl
scas
xchg
movsl
xchg
sbb
stc
xlat
outsb
cmp
cwtl
xor
int3
cmp
or
jnp
xor
pop
adc
dec
cld
pop
scas
lret
iret
mov
sbb
jp
xor
mov
mov
and
movsl
mov
stos
aas
xlat
outsl
mov
push
and
icebp
pusha
or
and
xchg
add
dec
cmpsl
adc
jmp
or
xor
pop
add
fstps
test
inc
xor
loop
mov
mov
adc
push
popa
sbb
pop
push
jmp
addr16
and
mov
adc
jg
jb
cmp
jmp
pop
outsb
xchg
popa
icebp
into
aaa
mov
xchg
hlt
test
cmpsb
or
notb
inc
and
cmp
or
gs
sbb
adc
pop
mov
and
adc
jbe
push
pop
push
outsb
test
sub
js
test
test
adc
in
push
mov
add
push
push
out
loop
rorb
push
cmp
jns
hlt
ret
fcoml
dec
inc
jmp
sti
xor
les
jge
insl
in
ja
sub
out
test
push
pop
mov
bound
outsb
fxch
mov
pop
sbb
jnp
pop
mov
outsb
bound
nop
mov
sub
sub
daa
or
ret
mov
lret
jnp
xlat
fisubrl
xchg
mov
movsb
fs
sbb
cltd
addr16
jnp
push
test
jns
xchg
pop
bound
push
adc
rclb
and
mov
lds
or
stc
jae
mov
push
dec
ljmp
jb
xor
sub
fs
lret
out
push
jmp
push
xchg
cmp
fstl
jnp
pop
cmp
adc
push
insb
les
in
mov
sub
je
mov
jae
xchg
mov
js
xchg
mov
push
cmp
mov
ficomps
ficomps
xlat
inc
sbbl
sbb
ds
outsb
jnp
in
shl
xchg
sub
adc
xchg
in
fcoms
push
loope
add
jp
cmpsl
enter
xchg
scas
fs
pop
movsb
mov
xchg
iret
sbb
ret
cmc
jbe
repz
pop
in
jecxz
adc
inc
sub
arpl
sarl
push
cld
inc
shrl
outsl
inc
xchg
cmp
adc
sahf
loope
xchg
pop
push
nop
shll
inc
test
push
lods
dec
mov
push
cli
scas
shlb
dec
dec
sarl
mov
xor
xor
jb
mov
in
pop
hlt
bound
or
call
les
or
js
pop
aas
insw
push
sbb
push
pushf
arpl
jb
rorb
test
jg
mov
addr16
ja
dec
divl
mov
popf
sub
fwait
and
lahf
cmp
pop
mov
jp
test
pop
sahf
mov
jno
imull
mov
aad
ss
sub
mov
sbb
mov
mov
jnp
cs
rcrl
and
test
xor
jg
xor
adc
sbb
push
je
pop
jae
push
fiadds
ffree
movsl
mov
repz
loop
jns
sbb
add
aaa
sub
pushf
insb
repnz
and
jg
test
jno
in
cmp
loope
jb
pop
xchg
cmp
pop
and
lahf
rcr
jmp
icebp
pop
jmp
ljmp
js
jl
repz
fidivl
adc
pop
push
jo
daa
push
test
mov
loope
inc
adc
push
das
addl
inc
lods
pop
add
cmp
xor
xchg
fistpl
mov
outsb
cmp
testl
mov
fsubs
das
xchg
int3
cld
xchg
sub
mov
std
and
add
inc
adc
fmuls
inc
jbe
inc
mov
into
xchg
cmp
pushf
lret
pop
pop
fsubl
jp
lods
mov
cs
push
xchg
jb
push
xor
inc
in
fcoml
cmpsl
stos
xchg
rcll
mov
lret
push
stc
outsb
gs
out
shll
xor
fldt
rcrb
mov
mov
fsub
xlat
dec
shll
cmp
loop
mov
or
push
orl
pusha
rcr
jmp
mov
je
les
pop
test
adc
pop
mov
dec
xchg
insb
outsl
movsb
lcall
dec
fdivl
outsl
movsl
pushl
dec
push
jle
je
frstor
cmp
mov
xor
lods
jmp
jo
or
gs
jne
jae
dec
bound
les
add
mov
lret
mov
mov
mov
popa
mov
cli
sbb
roll
dec
cmp
scas
jg
mov
mov
ljmp
jl
popa
jbe
mov
sub
mov
push
lea
ds
push
jge
orb
aaa
lcall
ds
aad
adc
adc
cmpsl
jg
jmp
negb
inc
adc
push
pushf
sub
lock
push
sub
push
es
xor
inc
flds
push
dec
subl
and
cld
inc
lea
mov
aad
ja
inc
xor
jg
jb
push
call
push
iret
sub
jne
sbb
mov
dec
fbstp
mov
xor
pop
push
xchg
add
scas
dec
mov
lahf
jno
push
ljmp
mov
add
lea
sub
jge
js
rcll
test
push
hlt
add
orb
inc
mov
adc
adc
jmp
arpl
push
dec
stos
xchg
decl
adc
pop
jmp
mov
data16
jae
mov
mov
aaa
stos
push
fcmovnu
std
rcrl
les
fldenv
dec
push
mov
fnstenv
cmp
and
mov
xchg
or
inc
mov
mov
cs
iret
or
dec
mov
ds
repz
faddl
sbb
jp
ret
cmp
fistl
push
jmp
sbb
fwait
std
rol
adc
je
mov
push
in
scas
lods
icebp
addr16
popf
mov
lret
cwtl
inc
add
add
sahf
rol
sbb
mov
mov
xor
je
out
fisttps
lock
sti
sbb
mov
jns
bound
xchg
and
mov
das
pop
ret
xor
cmp
mov
inc
push
or
ljmp
and
lock
jno
mov
lock
sub
test
arpl
or
adc
aaa
lds
icebp
les
jne
xchg
insl
std
dec
adc
icebp
xchg
in
sti
jg
imul
testb
scas
test
stos
arpl
fwait
cmp
je
adc
ja
into
push
negl
push
push
ljmp
or
mov
mov
jnp
cmp
adc
pop
push
scas
sarb
shll
dec
je
add
ficoms
cmp
jecxz
sbb
pushf
mov
push
ret
and
cmpsb
fsubrs
sbb
fmul
sub
fcmovbe
adc
xchg
xor
stos
roll
and
pop
jmp
es
scas
dec
adc
popa
dec
cli
mov
push
push
cmp
outsb
and
push
gs
add
cmp
movsb
int
es
jnp
push
ret
cmp
dec
das
mov
in
outsl
jbe
enter
in
iret
sub
xchg
mov
and
push
out
inc
retw
aas
adc
push
in
scas
pmulhuw
mov
inc
gs
xchg
in
push
or
ss
mov
push
mov
testl
daa
ljmp
and
add
cld
xor
xchg
hlt
js
lret
inc
mov
sbb
bound
and
out
nop
arpl
cmpsb
mov
fdiv
mov
cli
mov
lahf
jge
clc
xchg
mov
cld
scas
imul
and
fstps
subl
xlat
xchg
subb
mov
cld
add
out
push
ret
enter
lods
in
je
mov
mulb
das
xor
sbb
pop
mov
push
pop
xorb
push
mov
adc
out
mov
cmc
mov
mov
negl
jo
mov
ret
xchg
aad
decw
sub
mov
mov
pop
dec
popa
cmc
and
xchg
dec
inc
inc
test
fs
leave
in
xchg
xor
shlb
xor
fwait
aas
xor
jne
repz
clc
sub
int3
xor
shrl
dec
dec
hlt
sub
mov
dec
imul
imul
jae
pop
jb
aad
fnstcw
push
ret
adc
mov
test
insl
and
pop
mov
or
or
cmc
mov
adc
in
push
cmp
add
fstl
jae
pushf
push
xor
xchg
pop
xchg
and
ret
dec
adc
push
mov
outsb
jl
sbb
lods
mov
mov
fdivs
dec
popf
test
iret
lods
mov
and
fcom
xlat
push
mov
sbb
out
dec
idiv
std
jmp
mov
sub
cld
outsl
adc
lret
adc
jns
adc
and
and
fidivrl
inc
hlt
jecxz
arpl
lcall
lret
push
adc
je
mov
mov
xchg
out
mov
xchg
mov
cmp
insl
ds
push
jl
fstl
lret
lock
rol
xchg
test
enter
dec
icebp
aaa
sbbl
sahf
gs
jnp
jg
call
rorb
sbb
imul
and
push
sub
sbb
and
dec
mov
testl
imul
mov
pushf
popf
cmp
arpl
push
in
ret
mov
dec
xor
arpl
frstpm(287
ret
mov
lret
push
jne
cmp
pop
fists
jl
xchg
push
sub
push
enter
icebp
fisttps
jnp
outsl
add
and
push
inc
dec
inc
sub
loopne
sarl
nop
dec
out
add
loop
pop
adc
sub
push
mov
mov
cmpsb
jmp
push
addr16
pop
pop
push
add
pop
arpl
inc
and
dec
xor
es
insl
jae
das
and
adc
mov
mov
dec
xchg
inc
xchg
in
pop
mov
in
movsl
rorl
pop
loopne
mov
mov
in
pusha
adc
test
fmuls
cltd
sub
das
movsl
imul
adc
jmp
nop
scas
cmpsl
cmp
or
dec
sbb
pop
shlb
cmp
dec
jmp
aam
pop
inc
inc
mov
mov
sbb
mov
and
sub
clc
loop
xchg
lahf
hlt
mov
out
xor
sub
pop
hlt
sub
shll
stos
aas
cmc
mov
push
shr
roll
inc
pushf
pop
fs
addl
xchg
lods
fbstp
xor
hlt
mov
sub
and
stos
push
add
or
xchg
mov
sar
add
pop
mov
in
enter
xor
jg
fsubrl
xor
shrl
mov
ret
pushl
int3
xchg
pop
adc
hlt
lods
mov
jb
pop
in
cmp
sub
aam
dec
jle
in
fisttps
adc
pop
cli
xorl
xchg
pop
sbb
daa
cmp
jg
sbb
in
pushf
daa
mov
in
lret
xlat
test
jmp
add
jp
nop
pop
outsl
lret
leave
jecxz
cmc
daa
fucomi
cmp
cmp
mov
ds
mov
ss
js
dec
jbe
in
testb
sub
xchg
in
sarl
daa
aad
push
lcall
mov
dec
cmpsb
out
dec
xchg
repz
sti
call
xchg
jl
push
cld
jbe
dec
cmp
xor
add
and
dec
pmulhuw
pop
adc
call
scas
mov
popf
stos
leave
cld
push
in
lock
ja
mov
out
xor
xchg
gs
and
cwtl
and
inc
jae
mov
scas
add
ret
xor
sub
mov
cmp
add
cmp
inc
subl
dec
inc
jle
cwtl
mov
leave
mov
sarb
cmp
enter
mov
addr16
xor
out
xchg
mov
arpl
out
or
jg
mov
xor
dec
push
in
test
mov
xor
xchg
mov
mov
cmp
sub
xchg
jae
fs
cmp
jle
aaa
sub
pop
mov
into
in
stos
sub
jns
out
cltd
lret
ljmp
add
and
aam
push
push
lahf
stos
dec
rol
adc
jg
in
sub
push
rcrb
das
pop
add
xchg
aaa
jmp
mov
movsl
shr
xor
loope
add
repnz
sbb
cmc
jmp
push
arpl
push
cmp
mul
adcb
mov
inc
xor
pop
dec
les
scas
xlat
clc
inc
jecxz
dec
ljmp
mov
sarb
cli
inc
mov
jmp
fiadds
jbe
mov
xchg
jp
dec
lcall
loopne
jp
test
rolb
in
xor
pop
dec
push
pop
jno
imul
pop
and
or
cs
adc
out
inc
subb
mov
dec
cmp
movaps
add
push
popf
test
push
mov
inc
xchg
add
xor
mov
in
mov
jmp
mov
stos
xlat
xchg
mov
mov
icebp
ficomps
push
push
push
push
test
jne
add
pop
mov
popf
sub
inc
sub
jecxz
test
fstl
inc
out
in
lods
xchg
insb
scas
iret
cwtl
out
enter
cwtl
popa
shr
insb
popa
inc
bswap
and
aaa
enter
jge
push
mov
cld
dec
pop
js
out
aam
stos
lahf
mov
loop
adc
ss
jle
sub
inc
sbb
jle
cmp
mov
adcl
sub
into
data16
movsb
mov
fists
insl
mov
inc
in
rcll
jmp
and
shr
cmpsb
not
mov
out
pop
sbbl
stos
dec
dec
enter
dec
sbb
imul
ds
sub
dec
mov
inc
sub
cmpsb
sbb
mov
popa
inc
fdivrl
sub
push
cs
mov
sahf
andl
push
pop
pop
inc
into
test
mov
repnz
cmp
and
sub
xchg
cwtl
scas
sbb
cmp
js
popf
cmp
ret
cmp
sti
fsubrl
movsl
lret
ficompl
aam
mov
aas
in
push
bound
push
or
xor
push
mov
push
mov
leave
xchg
movsl
sti
leave
stos
pop
orl
dec
lds
inc
sbb
sbb
mov
call
fdivrs
and
inc
mov
mov
adc
cmpl
or
insb
lods
and
jmp
jnp
flds
dec
adc
pushf
adc
jne
loopne
sti
stos
loope
dec
mov
sahf
mov
popa
cwtl
ja
xor
add
mov
jb
fisubrl
jp
or
ljmp
mov
jo
jmp
pop
ss
mov
push
and
lahf
popa
outsl
dec
clc
dec
cs
xchg
ret
cmpsl
scas
or
int
mov
idivl
mov
xchg
or
mov
mov
pop
or
shll
lahf
adc
push
aam
lods
inc
mov
mov
arpl
jmp
outsb
inc
add
push
xchg
jo
mov
jg
xor
in
add
or
jecxz
int
and
repz
int
cltd
rorl
dec
and
jge
push
xor
pop
or
popa
push
cld
roll
pop
fstps
jp
xlat
jge
jns
mov
pop
pusha
pop
pop
sub
dec
pop
inc
ds
push
push
xor
nop
cmp
pop
or
push
inc
inc
inc
jmp
inc
ret
cmp
in
movsl
negb
in
enter
mov
push
jecxz
xchg
adc
mov
jmp
xor
jne
scas
in
cs
sbb
mov
out
and
stos
dec
add
aas
sar
mov
and
js
sbb
sub
call
cmp
fmuls
adc
ja
ficoms
lods
daa
mov
mov
iret
std
movb
jp
aaa
mov
mov
movsb
adc
dec
repnz
andb
je
or
sbb
fldenv
pop
loopne
mov
sub
sub
add
jp
bound
fs
fcompl
dec
inc
cmpsb
xchg
bound
mov
jo
cmp
mov
icebp
inc
cld
xchg
inc
ficoml
imul
pop
jl
cmp
push
or
xchg
sbb
mov
jbe
imul
loop
jb
dec
push
pop
xchg
jecxz
aam
mov
outsl
mov
call
mov
dec
cmp
shrl
xchg
push
sub
dec
loop
xor
xchg
in
mov
xor
cmp
lcall
aaa
movsb
mov
xchg
inc
das
je
adc
ficomps
push
xchg
push
jae
cs
lcall
pushf
bound
icebp
pop
lds
cmp
dec
sub
sbb
lods
cs
ljmp
fnsave
sub
insb
push
and
sti
shrb
mulb
jbe
test
rep
or
inc
or
fs
and
fidivl
cmp
ja
sbb
arpl
xlat
scas
cli
insb
xorb
les
sbb
xor
mov
or
sarb
jl
lret
adc
cmpsb
mov
push
loop
or
adc
or
push
in
or
add
adc
daa
stc
cmp
lea
mov
shll
rol
jne
mov
out
out
sub
out
mov
pop
cmpsb
movsl
fiadds
sub
cltd
jbe
enter
test
cli
leave
in
xchg
jmp
push
push
leave
inc
pop
mov
xor
jmp
inc
sbb
fcoms
pop
push
pop
push
or
enter
std
adc
fwait
xorl
xchg
jnp
sub
xor
repnz
dec
rolb
insl
and
mov
pop
or
mov
dec
sahf
loopne
test
in
sub
pop
dec
adc
aam
popa
mov
repnz
jnp
pop
bound
dec
scas
test
sub
fstp
or
pop
scas
xchg
ret
lea
jns
subl
scas
fwait
test
incb
hlt
pop
xor
mov
dec
pop
cwtl
cli
cmp
jle
aad
sub
add
outsb
imul
jg
cltd
icebp
pop
das
mov
dec
sub
mov
push
sub
pop
jp
jno
xchg
mov
push
faddp
sti
inc
push
jne
pusha
sub
mov
insl
mulb
test
sbb
cltd
insb
imul
adc
gs
imul
or
dec
movsl
hlt
insl
pushf
cmc
push
dec
sub
pop
inc
daa
popa
xchg
imul
xchg
xchg
imul
sub
inc
fcoml
xchg
and
jb
push
sbb
test
dec
cltd
repz
cmc
lret
sub
clc
sub
jp
pop
loopne
jl
sarb
into
xor
imul
movsb
xchg
push
sar
adc
iret
or
cmpsl
test
and
adc
add
cmp
les
data16
mov
jmp
lea
out
stc
hlt
mov
mov
lods
adc
xlat
pop
jnp
sub
mov
inc
fldl
add
adc
xchg
std
and
sub
pop
ds
mov
sub
jns
and
mov
mov
jbe
std
ficoms
jp
daa
add
jge
jg
stos
imul
in
test
and
xchg
xchg
ficomps
adc
xchg
sub
imul
and
xchg
stos
mov
jg
into
fnsave
xchg
fistpll
xor
jb
mov
lret
das
sub
sub
lret
fisubs
xchg
mov
lahf
dec
std
xchg
cmpsl
and
orb
stos
pop
nop
pop
xchg
xor
sbb
or
lea
fnstcw
leave
jle
xchg
js
jmp
lods
test
xor
xor
dec
out
xchg
xchg
xor
roll
loope
call
cltd
push
int3
inc
sbb
mov
jae
dec
repz
cmp
xchg
or
add
faddl
jp
gs
or
push
jns
xlat
fisubs
cmp
inc
add
nop
pusha
add
xlat
jle
xor
xchg
stos
pop
jnp
int3
fnstenv
loopne
imul
sbb
sar
lea
push
fst
mov
mov
mov
or
hlt
lret
imul
daa
or
push
stc
xchg
stos
adc
mov
mov
xlat
fildll
pop
jmp
jmp
int3
filds
repnz
outsl
clc
pusha
jbe
xchg
mov
lods
mov
test
pushf
test
inc
icebp
pop
mov
add
push
xchg
push
ficoms
out
dec
mov
add
mov
bound
xor
add
gs
jo
es
jle
xor
inc
adc
mov
in
and
inc
out
ret
imul
dec
and
nop
jge
test
aad
and
mov
imul
lret
sbb
or
and
rorb
and
js
inc
push
jge
bound
fildl
cs
hlt
out
out
ljmp
mov
dec
mov
loop
xchg
fcmovnb
add
jo,pt
lret
and
stos
xor
fstpl
inc
inc
lret
fsubs
sub
adc
mov
leave
sahf
sub
push
mov
fisttpll
aas
xor
add
lods
cwtl
pop
dec
scas
inc
mov
and
fwait
xlat
shlb
inc
inc
loopne
xchg
xchg
cs
mov
and
mov
pop
ja
aaa
mov
xor
pop
cmpsl
or
pop
sub
dec
cmp
fwait
lcall
daa
xchg
lret
sub
xchg
js
jmp
cmpsl
adc
arpl
or
aas
fnsave
outsl
and
dec
movsl
cmc
sub
dec
sub
push
pop
rorb
testb
enter
inc
xchg
mov
pop
xchg
or
lahf
outsl
lds
cli
mov
jb
dec
out
xchg
or
adc
sub
dec
sub
pop
out
popf
push
or
cmp
lahf
mov
lret
jp
inc
cmp
xchg
add
xor
adc
ret
lods
inc
xorb
fsts
cmp
out
pop
add
daa
adc
pop
mov
sahf
mov
cwtl
into
push
xchg
mov
sahf
lret
push
out
add
fcompl
in
mov
outsb
pop
mov
push
testb
sub
cmc
out
call
nop
testb
sub
jne
sub
cmp
xor
push
add
movsb
sub
mov
insl
mov
push
in
xor
aaa
movsb
int3
and
pop
pushf
lods
jb
lret
inc
cmp
add
rcl
neg
lods
loop
mov
sar
cltd
fisttpll
dec
pop
sbb
xor
cmp
lea
mov
cli
cmc
and
fcoml
dec
imul
mov
dec
pop
adc
fldcw
out
icebp
lods
push
sbb
out
xor
loope
scas
xlat
clc
pop
lock
inc
mov
je
lahf
cld
push
add
cmp
pop
outsl
fdivl
in
enter
jl
jnp
pop
mov
std
les
fldcw
fcoms
cmp
dec
inc
cmp
dec
sbb
jb
push
mov
popa
cli
popf
aaa
enter
jg
mov
lret
aaa
out
fcompl
cmpl
inc
fs
mov
ja
outsb
push
add
cmp
and
ja
pop
sbb
inc
or
lods
test
outsl
subb
ja
xor
mov
out
cmc
into
fldenv
xchg
cmpsb
cli
repz
fadd
fs
mov
lea
mov
pushf
movsl
mov
push
shlb
sbb
pop
sub
add
jo
mov
mov
call
loopnew
test
fcoms
shr
dec
movsl
ret
xchg
aas
cltd
push
jae
cmp
adc
or
add
aaa
sti
arpl
repz
mov
jle
xchg
ja
cmpsb
test
pop
mov
subl
push
out
scas
inc
int3
jbe
and
dec
cmp
push
lret
mov
fldenv
sub
xor
stos
xor
pushf
loop
push
stos
mov
dec
das
leave
pxor
jp
cmp
jl
icebp
inc
fisttps
adc
cwtl
pop
lret
push
adc
add
mov
outsb
lds
mov
fcomps
add
push
xchg
hlt
in
rorb
fsubrl
cmp
test
sarl
js
or
out
sub
scas
test
in
sbbb
into
mov
cmp
clc
test
pop
shrl
mov
inc
xchg
and
xchg
ljmp
add
pusha
inc
xchg
push
cltd
mov
sarb
aaa
dec
dec
subl
addr16
je
mov
push
stos
pop
xlat
xchg
mov
lret
push
xchg
inc
fs
pusha
dec
aaa
push
repz
adc
dec
mov
stc
je
adc
jns
cmc
inc
arpl
add
jo
mov
push
pop
andb
mov
pop
sbb
xchg
push
lods
hlt
mov
mov
ss
jns
cmp
xlat
dec
sbb
xchg
aas
scas
leave
push
mov
mov
icebp
fiaddl
mov
mov
sub
sub
cmp
fs
rep
dec
aam
mov
aad
lcall
gs
fwait
dec
ss
insl
cli
jg
cwtl
adc
pop
mov
loopne
lret
pop
inc
add
daa
arpl
daa
add
push
cmp
aas
movsl
cmp
mov
shrb
fdiv
cmc
out
or
inc
sbb
cmp
lret
dec
inc
lcall
pop
xchg
xchg
popf
xchg
mov
and
mov
add
sub
lahf
repz
push
es
add
pop
dec
adc
and
pop
xor
pop
insb
jbe
notb
fwait
sarb
test
fistl
push
insl
jbe
and
aad
pop
loop
cmpsl
jno
mov
cltd
int3
push
fnstcw
and
sbb
mov
dec
clc
das
stc
hlt
out
or
sbb
int
push
cmpsb
test
xchg
mov
push
pop
loope
ja
xlat
add
jmp
adc
mov
mov
adc
aam
dec
lahf
stc
push
sbb
jle
rorl
and
or
jle
call
push
pop
dec
push
shrb
xchg
in
adc
imull
jo
test
sahf
mov
ficomps
mov
fiadds
inc
cmpsl
xor
int
jg
inc
mov
insl
push
mov
in
cmp
push
fs
lock
xchg
movl
push
jo
jae
cmp
mov
bound
ljmp
nop
cmpsb
popf
lret
movsb
pop
subb
inc
pushf
mov
cmp
hlt
mov
iret
aas
mov
fimuls
or
or
rolb
repnz
test
ja
sbb
xor
loop
pop
bound
lods
sahf
sbb
push
and
sbb
pushf
das
cmp
jo
mov
lods
mov
mov
arpl
add
xlat
add
stos
scas
mov
scas
lret
bndstx
cmpb
jb
mov
int
fcomi
sub
jecxz
in
lret
lahf
insl
out
xor
push
lods
rclb
into
mov
sarb
stc
lahf
fwait
xchg
sbb
mov
aam
dec
jl
pop
inc
mov
stos
in
push
shll
das
push
movsl
inc
out
pop
jae
inc
add
js
push
pop
inc
mov
pop
test
insl
fs
es
jmp
pop
xor
cld
or
or
xchg
mov
xor
cmp
xor
and
sbbl
lods
imul
xchg
incb
mov
mov
cmc
mov
sbb
inc
ret
mov
sbbl
subl
push
fsubr
mov
pop
pop
mov
add
jb
pop
or
repnz
cli
into
dec
inc
shrb
xchg
mov
cmp
in
mov
nop
sbb
test
rorb
xor
ds
inc
dec
pop
adc
push
jae
enter
jecxz,pn
pop
rol
ja
cmp
jno
and
fwait
add
leave
mov
nop
add
bound
cmp
pop
pop
xor
push
lds
or
test
pop
loop
dec
xchg
add
les
rorb
add
jmp
jno
cmp
fildll
les
mov
mov
add
out
test
xchg
aam
rcl
mov
jmp
repz
xchg
sub
sbb
cld
mov
das
out
das
mov
and
sbb
arpl
jno
sub
scas
sub
int
adc
clc
push
mov
or
xor
xchg
mov
sti
cwtl
imul
loope
xor
sbbl
test
jb
xchg
mov
les
push
jp
pop
inc
jae
mov
mov
sbb
es
shrl
dec
cltd
orb
jbe
jns
call
int
and
in
adc
mov
jnp
adc
cmovle
loopne
iret
daa
push
xor
push
ds
xor
fisttps
adc
xchg
arpl
insb
sbb
dec
cmp
lds
das
lds
jnp
mov
mov
inc
sub
cmpsl
hlt
and
into
inc
loopne
or
sti
in
lds
lcall
mov
arpl
mov
cltd
nop
leave
lea
push
aaa
mov
rcll
sub
inc
idivl
test
cli
popa
std
imul
jb
push
gs
aam
xchg
inc
push
inc
aas
xor
je
mov
out
or
cltd
xor
or
push
cmp
dec
jecxz
sbb
dec
mov
mov
std
sahf
insb
inc
addr16
int3
push
outsl
sbb
xchg
sub
test
push
add
shll
inc
sarb
push
push
movsb
xlat
cmp
add
push
mov
pop
push
cmp
stos
and
cmp
cmp
out
push
les
lahf
push
pop
xor
add
xor
lret
and
cmp
out
mov
test
jno
mov
jle
dec
cmpb
add
push
hlt
jno
adc
negb
mov
cmp
mov
nopl
xor
or
xchg
das
sbb
scas
inc
adc
push
and
and
or
jmp
inc
lcall
sti
icebp
fwait
inc
sbb
adc
imul
sbb
and
cmpsl
push
dec
pop
ret
mov
pop
add
stc
inc
jl
jae
add
stc
daa
fmulp
les
mov
xor
loopne
and
lret
inc
pop
push
lret
xchg
sbb
sub
add
add
icebp
out
lret
das
xchg
cmpsb
rcll
in
mov
mov
mov
in
ljmp
sarb
mov
adc
jmp
mov
adc
push
jge
inc
pop
fsubs
stc
inc
or
cmp
lret
cs
mov
mov
jbe
cmpb
in
mov
mov
scas
test
dec
inc
add
outsl
inc
and
adc
and
jb
jp
mov
cmpsb
xchg
and
xchg
fisubrs
cmp
sub
dec
sub
sbb
pusha
sbb
sub
adc
dec
xor
loop
les
shl
movsl
mov
ss
rcrb
movaps
push
loope
xadd
fistl
inc
mov
fisttpl
stos
call
jne
and
sub
cmp
xlat
inc
xchg
ljmp
adc
xchg
pop
inc
popa
xor
mov
or
pop
ret
mov
addr16
jecxz
dec
outsl
add
repz
test
and
lcall
jecxz
sbb
dec
pop
mov
rcrb
mov
iret
jmp
rorb
push
pop
pushaw
cmc
fyl2xp1
mov
inc
pop
sub
lea
or
mov
addl
cmp
popa
testl
sahf
scas
scas
mov
cli
aad
or
in
inc
insb
pop
adc
sub
les
adc
jb
out
loopne
sahf
dec
jecxz
fs
pop
add
push
fcmove
or
stc
enter
data16
mov
xor
pop
push
lret
fsubrs
adc
mov
insl
mov
cs
inc
xor
test
pop
ja
cmp
lahf
int
ja
int
rorb
mov
icebp
mov
mov
ficompl
orb
gs
in
or
pop
cmp
push
lds
adcb
cli
les
daa
les
test
sbb
and
pop
fnstcw
or
jno
stc
dec
aas
jbe
in
stos
and
sti
cmp
xor
push
lods
repz
add
enter
adc
xchg
sub
inc
or
movsb
mov
popa
stos
mov
mov
and
aas
clc
jge
dec
jmp
xchg
jg
or
pop
repnz
es
dec
leave
pop
leave
dec
sbb
xlat
stos
mov
lock
jge
dec
mov
mov
clc
lret
mov
popf
mov
stos
push
insl
dec
sbb
mov
into
pop
fstpl
or
push
nop
clc
mov
addb
cmp
notb
cmpsl
or
and
daa
add
inc
into
cmp
leave
outsb
lret
adc
shrb
dec
js
test
sub
mov
test
and
jecxz
pop
sub
dec
or
in
outsl
rcrl
jl
cmp
hlt
bound
pop
jnp
xchg
mov
inc
jle
mov
xor
xor
je
adc
fnstenv
lret
push
sub
es
fstp
fmul
or
jecxz
push
imul
lret
cs
mov
mov
stos
mov
xor
cmp
mov
xchg
sub
ret
daa
cmp
mov
rolb
cmp
stc
lods
nop
pop
pop
out
inc
xor
add
in
outsl
xchg
sahf
inc
xor
cwtl
sbb
xchg
cmp
insb
cs
push
sub
cmp
mov
das
inc
std
cmpsb
cmpl
jmp
xchg
inc
fcmovnbe
cld
shll
hlt
adc
push
adc
rcr
popa
repz
cs
pop
stos
mov
push
xlat
sbb
into
push
insl
movsb
mov
sub
in
pop
push
mov
push
fsubrs
pop
lahf
test
std
dec
mov
sub
jl
push
stc
fimuls
loope
js
lods
pop
cmpsl
dec
ss
and
xchg
cmc
jl
pusha
push
out
je
dec
dec
aad
xchg
push
sub
mov
cmpsl
adc
mov
bound
adc
mov
mov
mov
or
cmp
insl
gs
mov
iret
gs
frstor
xchg
dec
or
jge
int3
add
mov
dec
scas
jns
mov
ds
pop
lods
jle
jmp
ds
arpl
inc
rorl
in
mov
mov
pop
jae
pop
mov
jnp
int3
cld
loope
scas
jle
and
jmp
jnp
or
lcall
jecxz
sbb
xchg
mov
push
out
fsubl
mov
inc
mov
inc
xchg
jl
lods
es
fimuls
inc
lret
jle
ret
and
dec
xor
sbb
mov
mov
push
stos
or
test
jb
cmc
inc
pop
ficompl
fcompl
and
mov
sbb
cmp
stc
mov
in
mov
nop
mov
sub
test
cmp
popa
je
fimull
scas
test
test
push
fcomi
adc
jno
lods
aad
jbe
leave
mov
out
movsl
dec
rcl
adc
std
enter
setg
in
js
mov
test
sti
xor
or
rcl
xlat
iret
xchg
mov
xor
adc
fiaddl
xchg
ret
push
mov
fabs
fwait
mov
cwtl
stos
sub
hlt
rclb
das
sahf
xlat
jp
dec
xchg
mov
lods
divl
pop
pop
jp
xchg
or
xor
cwtl
add
xchg
cwtl
jge
dec
stos
clc
adc
mov
cmp
mov
sbb
xchg
cmp
cmpsl
int3
inc
fcoms
inc
mov
xchg
sub
bound
lahf
in
dec
test
aam
adc
data16
adc
push
adcb
aam
pop
adc
cmp
cwtl
fistps
xor
arpl
sub
ds
jns
out
inc
push
pop
out
in
popa
lea
fwait
dec
dec
ret
loopne
mov
xchg
movsb
loop
mov
mov
cld
psubq
test
and
in
push
pop
xchg
sub
icebp
add
cmp
out
sub
shlb
mov
pop
mov
cmp
aad
pop
js
lea
shrd
out
and
scas
mov
mov
sub
outsb
jp
mov
inc
ret
jmp
xchg
imul
xor
dec
aaa
add
rorl
xlat
push
mov
dec
pslld
iret
mov
push
add
xor
xlat
pop
das
pop
add
push
ficompl
cli
push
lret
xchg
pop
sbb
ret
dec
add
sbb
adc
sbb
ret
push
insl
stc
fdivs
mov
add
test
test
xchg
inc
and
push
inc
loope
fistl
scas
mov
sub
mov
pop
insl
xor
fiadds
test
addl
outsl
iret
data16
repz
dec
mov
mov
mov
cmpsb
xchg
loopne
frndint
or
inc
stos
shrb
add
mov
popa
aas
out
in
adc
clc
sar
pop
add
inc
adc
fimull
jne
scas
cmp
xor
adc
sub
sbb
cmp
sbb
xchg
xor
xchg
pop
aaa
sub
or
stos
sti
xor
out
daa
mov
xchg
pop
cmpsb
ret
scas
adc
pop
inc
mov
pop
fadds
pop
pop
pop
xchg
mov
bound
push
mov
repz
jg
jne
enter
and
das
mov
mov
mov
jae
jmp
mov
fnsave
xchg
cmp
add
and
sub
scas
push
loope
clc
mov
iret
mov
fadds
mov
stos
test
inc
aam
push
dec
pop
add
inc
jmp
loope
dec
dec
pushf
es
rcrl
imul
push
push
ja
rep
mov
sbb
fldl
push
dec
dec
cs
cmpsl
pop
mov
push
aas
scas
sbb
push
lahf
loope
mov
push
mull
inc
mov
inc
push
insl
adc
pushf
or
out
into
jmp
jp
imul
adc
mov
mov
pop
imul
push
cli
sbb
inc
shlb
sub
and
shrb
dec
fistpll
sbb
loopne
adc
mov
imul
in
repz
daa
sti
sub
jo
and
jne
mov
push
push
mov
jl
rcl
add
shr
lahf
dec
loop
out
inc
pop
je
pushf
jnp
jns
shl
mov
outsb
xchg
fsubrs
dec
imul
das
mov
inc
sbb
inc
daa
xor
jns
popf
xchg
or
sub
xor
xchg
pop
jne
movsl
sahf
dec
fdivl
sbb
jl
insb
cmpsb
dec
aam
test
rcl
inc
jnp
rorb
jnp
sbb
out
ja
mov
addr16
in
mov
cli
lock
push
adc
sub
jbe
sti
jo
mov
push
lcall
stos
mov
lods
xorl
push
push
mov
xchg
arpl
orl
mov
or
pushf
xor
ljmp
lock
scas
movsl
inc
lds
inc
push
enter
shll
outsb
inc
push
sbb
in
push
cli
outsb
stos
mov
mov
mov
in
ja
inc
adc
rorl
sbb
cmc
in
lods
hlt
dec
sbb
rcr
xchg
mov
or
sub
mov
inc
add
pop
fisttps
cmc
add
adc
and
orl
push
in
mov
push
and
lret
in
or
xor
mov
xchg
cmp
in
push
aad
and
add
mov
fsubrs
in
pusha
cltd
xchg
je
or
shll
add
jle,pn
xor
push
push
cmp
and
rolb
and
out
fldenv
xor
dec
mov
pushf
in
stos
ja
inc
xor
pop
or
push
mov
loopne
mov
push
jp
mov
movsl
cmp
fs
repz
shrb
jge
adc
jno
stos
and
push
push
sub
js
enter
adc
ret
loope
or
outsl
adc
sub
mov
aaa
dec
fimull
dec
or
and
shrl
pop
mov
xchg
subb
cs
hlt
and
dec
inc
mov
lods
jbe
mov
ret
test
aam
pop
sbb
push
ja
in
loope
inc
sub
pop
shlb
pop
jmp
mov
cli
cmp
xchg
lock
jo
jl
dec
idivb
inc
mov
mov
push
insl
adc
mov
fcoml
orl
stc
dec
and
sbb
nop
and
cmp
inc
enter
adc
fcoml
mov
cmp
mov
or
jo
push
inc
fsubs
xchg
aaa
psubd
dec
imull
int
push
add
lret
cltd
jg
inc
popf
sbbl
pop
rolb
sbb
loopne
jo
popf
outsl
mov
add
std
adc
pop
mov
pop
fmull
xchg
adc
pusha
jmp
jmp
xchg
lret
xor
cmpsb
stc
repnz
movsb
or
mov
cmp
popf
rorb
mov
inc
sbb
shll
push
scas
jecxz
movsl
mov
lds
scas
insb
jnp
sbb
fs
sub
pop
int3
pop
aad
jg
mov
push
mov
and
sub
inc
jnp
ffreep
mov
push
and
mov
mov
mov
pop
imul
pop
sub
push
ret
popa
mov
sub
adc
sbb
push
movb
xchg
fcompl
cwtl
mov
cmp
scas
cmp
jmp
test
dec
xchg
inc
rorl
repnz
mov
push
jb
jp
mov
mov
mov
hlt
aam
push
std
das
cmp
jno
sub
pop
test
dec
adc
sbb
in
cwtl
int
fcoms
fstps
pop
pop
mov
sahf
out
sbb
out
sub
ss
mov
cmp
xchg
and
cmp
and
test
stos
mov
test
sbb
arpl
jns
xchg
in
enter
aam
and
mov
lds
into
idivl
mov
mov
and
cld
mov
jmp
lret
aaa
mov
imul
or
dec
addb
dec
mov
lahf
dec
stos
outsb
adc
cltd
dec
dec
jns
jge
push
data16
scas
ds
stc
outsb
push
lea
test
insb
imul
mov
pop
add
filds
push
je
repz
mov
ljmp
ds
loope
cmc
int3
jno
jg
pop
inc
push
xor
xchg
cwtl
mov
cmp
loope
mov
dec
iret
xor
sbb
out
out
cltd
std
clc
xor
ja
movsb
and
xlat
out
leave
push
add
outsl
fcmovnb
and
in
cmpsb
adc
dec
daa
inc
cmc
mov
jg
outsb
loope
enter
jns
jne
sbb
jecxz
fnstcw
adc
jmp
imul
cmp
stos
icebp
pushf
mov
cmp
stos
popa
or
subb
ss
mov
jne
jnp
pop
lods
or
mov
into
mov
adc
aaa
ret
add
popf
xor
add
xchg
inc
cmc
xchg
add
das
pop
pop
xor
pop
inc
scas
dec
fsubs
jno
ds
jecxz
loop
shll
or
aaa
push
push
push
repnz
loope
pushf
mov
fldenv
test
fdivrs
ret
dec
pop
lcall
movsl
jae
add
adc
dec
mov
mov
fisubl
insl
lcall
xchg
call
add
xor
and
mov
mov
xor
xchg
push
lidtl
js
fcoml
xchg
jle
pop
gs
pop
mov
mov
xchg
dec
out
dec
add
outsl
inc
jmp
bnd
sub
lret
sahf
testl
xor
adc
sbb
psadbw
fcoms
add
pusha
inc
inc
and
push
out
ficomps
dec
xchg
inc
inc
dec
mov
push
xor
iret
ret
mov
outsl
btc
pop
psubusb
sub
xor
aam
stos
fstp
xlat
lret
lcall
sub
lahf
push
sub
inc
roll
pop
filds
xlat
and
imul
push
pop
cmp
push
mov
and
cltd
mov
add
inc
pop
int
test
sub
dec
std
bound
cmp
sbb
xor
add
add
push
inc
les
data16
movsl
das
stos
test
sahf
mov
pusha
mov
stos
jb
mov
test
out
jne
ficompl
das
sti
shrb
mov
mov
in
xchg
jecxz
push
xor
dec
lds
hlt
outsb
inc
mov
ret
cltd
fldenv
mov
jbe
push
pop
sti
inc
adc
cmp
xor
stc
jp
jns,pt
test
jbe
fnstenv
cwtl
sbbl
ss
inc
sahf
xlat
xor
push
pushf
or
xor
xchg
aas
dec
inc
inc
call
lret
loop
and
pop
xchg
insl
jp
cmp
lods
scas
insb
dec
movsb
popf
leave
cmc
mov
push
je
scas
mov
lock
test
mov
push
mov
movsl
aam
push
out
lret
fcmovnb
aaa
cmp
jno
in
push
sbb
jb
xor
test
add
jb
mov
xor
mov
pusha
cmp
scas
call
out
popf
insl
movsb
divl
inc
xor
fldcw
lahf
dec
push
in
cltd
jb
xor
pop
mov
xchg
shll
rcll
push
mov
mov
cmp
imul
bnd
loope
into
fcompl
dec
lods
push
mov
push
repnz
loope
out
shrl
add
clc
imul
push
jmp
test
push
into
push
xchg
in
adc
sub
sahf
pop
cmc
mov
jb
adc
ret
mov
sbbl
lretw
adc
les
in
data16
inc
jns
jnp
imul
adcl
or
jp
into
dec
cmpsb
inc
and
pop
jnp
jbe
jae
mov
push
inc
sbb
jne
cmpsl
jnp
pop
clc
and
adc
push
mov
xchg
pop
jg
add
pop
xchg
mov
cmpsl
push
mov
aaa
shrl
dec
les
dec
sbb
aas
jmp
or
inc
cwtl
xchg
popf
leave
out
sub
out
test
rclb
pop
cmp
ds
fwait
rolb
test
sbb
enter
xchg
sbb
test
xchg
inc
push
or
lahf
cmp
stc
mov
push
lds
mov
adc
fistpll
mov
and
fstpt
data16
mov
ror
xchg
pop
dec
jmp
cmp
xor
stos
push
jecxz
loope
dec
sbb
cmpsb
fnsave
cmpsb
xchg
mov
shll
lretw
inc
adc
or
adc
cltd
jae
sub
xor
cmp
xchg
and
mov
jl
arpl
sub
mov
pop
adc
test
movsb
pop
and
and
imul
mov
jle
or
bound
add
ret
xor
cld
xchg
cmc
ret
cmp
cmp
and
push
js
push
add
andb
mov
inc
mov
adc
adc
in
addr16
dec
push
dec
movsl
pop
les
cli
rcl
hlt
in
clc
jmp
dec
dec
mov
sub
es
xchg
push
negb
fildl
dec
lcall
hlt
dec
test
sbb
scas
leave
inc
adc
roll
outsb
mull
cmpsl
jp
dec
sarb
ds
lods
int
jg
stos
inc
xchg
lret
je
fcompl
out
mov
popf
aam
push
popa
cmp
shll
fbstp
in
sti
icebp
pop
daa
insb
jo
mov
leave
mov
sbb
scas
and
and
subl
lds
push
mov
fmuls
mov
popf
pop
push
mov
cwtl
jmp
movb
jnp
dec
jnp
mov
pop
insb
int
loopne
fsubs
cmpsb
lods
mov
stos
push
inc
fs
into
cltd
fidivl
shld
std
fistps
out
nop
das
or
lret
lret
cmp
int
pop
jp
ljmp
in
aas
mov
stc
outsb
mov
rcrb
mov
dec
lahf
fmull
loop
mov
dec
jnp
sub
rcrb
repnz
fldt
push
sub
in
push
inc
cwtl
mov
sarl
cmp
jle
nop
jecxz
mov
hlt
xor
cltd
lret
stos
cwtl
xchg
mov
pop
in
xchg
xchg
xchg
sub
xchg
js
and
xchg
andb
mov
jg
aam
jl
dec
mov
rol
xchg
jo
fcoml
loope
mov
mov
pop
push
stc
out
js
mov
xchg
sub
in
popa
jnp
jl
cld
lds
mov
test
sbb
stos
in
lahf
fbld
or
lcall
xchg
dec
fistps
js
pop
ja
aam
lcall
sahf
arpl
mov
cmpsl
cli
aas
out
xor
ds
and
mov
sbb
jecxz
pushf
and
pop
data16
outsl
call
cmpsl
add
push
sub
gs
and
dec
popa
std
in
cmp
mov
jno
fmuls
nop
int3
ds
xor
jp
int3
adc
xorl
mov
fldcw
inc
jge
jns
push
mov
jo
xchg
lret
gs
insb
js
jp
push
and
andb
mov
icebp
dec
cmp
inc
aas
rclb
dec
mov
mov
mov
loopne
adc
xor
mov
dec
les
dec
pop
roll
sbb
ljmp
mov
inc
roll
add
jnp
lret
movsl
ret
xchg
sbb
loopne
dec
out
mov
jne
fdivs
xchg
mov
sbb
xor
int
or
mov
mov
std
lcall
add
sbb
pop
dec
pushf
push
xchg
flds
push
jb
or
pop
dec
cs
ret
nop
lods
mov
out
test
shlb
arpl
sub
test
inc
sbb
out
jo
dec
xchg
je
aas
test
movsl
xor
test
adc
jno
mov
push
push
jne
push
jmp
data16
andb
cmp
mov
fildl
jge
lea
test
push
inc
ja
arpl
lock
mull
jbe
cli
jmp
jmp
fwait
addl
or
push
xor
ret
adc
repz
movsl
xlat
xchg
aaa
addr16
and
and
in
pop
cmp
dec
movsl
add
xor
add
xlat
pop
mov
leave
js
out
push
cmpsl
rorl
pop
push
insl
out
outsb
mov
jmp
or
icebp
pop
imul
jl
test
sbbl
sbb
std
jb
fcos
cs
add
dec
loop
ror
mov
inc
out
mov
xacquire
nop
cmpsl
pop
inc
cmp
in
ja
bound
ljmp
xor
cwtl
ljmp
push
mov
arpl
mov
cmp
lret
ds
jle
sbb
jno
xlat
sbb
mov
cmp
rol
xor
mov
sbb
push
jbe
aaa
jle
add
jo
xchg
jno
push
inc
fdivl
aaa
pop
jle
subl
js
and
lret
std
movsl
stc
std
sub
lret
popf
adcl
in
incb
les
jp
data16
fs
adc
aam
lret
addl
cs
xchg
jae
push
cmp
jp
jb
sbb
dec
or
or
push
scas
aad
es
sub
dec
mov
push
incb
sbb
mov
das
mov
mov
sti
jnp
mov
xor
fiaddl
mov
in
movsb
mov
nop
jne,pn
sbb
nop
jnp
xor
add
shl
repz
or
adc
xor
xchg
rorb
sbb
fcomps
lcall
loope
or
mov
xchg
cld
lret
popa
sbb
mov
pusha
aad
push
scas
in
outsl
roll
cmp
mov
adc
sub
roll
cmpsb
into
mov
leave
add
fisttpll
fisubrl
push
cmp
inc
sub
mov
sbb
sub
fidivrs
das
ja
mov
inc
mov
push
stos
jnp
and
jno
loop
adc
jns
adc
push
jb
mov
xchg
cmp
int3
out
mov
xchg
sub
dec
sbb
lods
insb
out
dec
rcll
push
into
add
outsb
xor
push
mov
pop
push
pop
mov
jle
scas
mov
popa
xchg
movsb
outsl
jg
sar
daa
fsts
in
stc
or
cltd
sub
pop
inc
push
iret
jecxz
hlt
dec
scas
sub
int3
imul
fld
leave
and
fwait
cmp
pusha
inc
popf
lret
pop
add
test
dec
push
sub
push
or
fdivl
push
into
btc
nop
jmp
fistps
outsb
xchg
cs
or
mov
iret
mov
push
cld
lret
push
pusha
xor
aam
scas
xchg
mov
iret
lds
mov
aad
or
push
cltd
lret
enter
pop
mov
jle
sbb
adcl
push
inc
cltd
aad
loop
fadd
outsb
and
shll
mov
dec
push
cmp
icebp
pop
ljmp
test
mov
add
out
mov
push
jo
mov
mov
std
out
ss
repz
loop
sbb
cmp
add
test
pop
popa
aad
dec
out
lds
xor
loopne
push
push
pop
push
orb
dec
ret
mov
and
adc
jae
mov
lret
inc
and
out
and
xorl
iret
ret
lock
sahf
or
ficompl
mov
push
in
ret
mov
mov
sub
lret
cwtl
gs
mov
loop
mov
cmp
imul
fwait
lcall
es
ja
jns
jae
pop
cwtl
jecxz
xchg
int
adc
in
lock
ss
ds
sahf
or
mov
das
arpl
lcall
movl
and
push
inc
jle
loopne
aad
adc
stc
mov
repnz
cmp
cs
fs
cmpsl
dec
add
jl,pn
jns
dec
add
xor
shl
ljmp
fucomp
jp
aam
mov
cmp
pop
sahf
xor
xlat
hlt
ret
rolb
fmull
stos
push
xor
xchg
push
imul
jbe
popf
push
cs
jecxz
cmp
mov
es
add
rcrb
repnz
cwtl
pushf
in
pop
stc
stos
and
mov
sarl
pop
or
stc
add
push
cmpsb
jbe
leave
adc
add
imul
lret
or
jne
lea
inc
jnp
jp
mov
sub
aas
xchg
outsb
cmp
xchg
pop
mov
std
mov
fbstp
mov
and
mov
adc
or
fwait
inc
mov
js
call
jecxz
pop
in
cwtl
jo
lods
test
stc
pop
divl
add
mov
out
cwtl
mov
dec
movsb
lret
or
sbb
sahf
add
sti
push
mov
lods
cli
cmpsl
pop
mov
fcmove
mov
add
repnz
daa
dec
dec
in
inc
mov
xchg
mov
pop
repz
fiaddl
lds
cli
sub
adc
or
icebp
mov
pusha
pop
pop
jmp
bnd
sbb
jle
mov
add
popa
inc
push
pop
inc
cmp
pop
sbb
negb
push
insb
and
push
mov
movsb
stc
dec
cmpsb
add
hlt
mov
jmp
rorl
xchg
out
popa
in
movsl
repnz
mov
xor
popa
dec
and
add
adc
pop
cmpsb
dec
test
and
cmpsb
and
sbb
imul
mov
add
lahf
inc
out
aaa
adc
mov
xchg
jae
jmp
mov
add
rolb
xor
sbb
pop
jns
pushf
jmp
les
xor
mov
bound
pop
jge
inc
sbb
lret
clc
cwtl
push
loope
inc
push
xchg
or
divl
push
xchg
sbb
lea
jge
hlt
mov
dec
pusha
xor
addr16
cmpsb
inc
sbb
xchg
outsl
mov
ret
in
adc
mov
frstor
in
mov
lods
or
add
ja
nop
clc
jns
test
xchg
cmpsl
pusha
mov
jo
loop
push
repnz
ret
jb
cwtl
or
loop
cmpsb
ret
fidivs
ljmp
aad
test
lea
xchg
push
es
jmp
fstps
repnz
mov
mov
mov
icebp
rol
adc
data16
fistps
push
push
sbb
sub
lcall
push
scas
jns
mov
dec
mov
dec
mov
pop
sub
cmpsl
sbb
xchg
xlat
mov
mov
and
movsl
jecxz
mov
and
jmp
test
sbb
lcall
xchg
mov
pop
push
xchg
dec
mov
stos
xor
in
imul
jg
xchg
lret
cmpb
cmp
inc
jne
orb
arpl
adc
mov
addl
mov
push
lock
loope
in
addr16
je
and
out
in
mov
imul
cli
pop
aas
push
les
jg
jmp
fwait
cmp
jbe
out
in
xchg
dec
add
faddl
sbb
add
outsb
sbb
inc
pop
lahf
mov
lea
sbb
repnz
ds
sbb
shrl
shlb
loope
jp
scas
pushfw
sar
fsubr
mov
sbb
popf
xchg
adc
shrl
imul
mov
clc
push
iret
pop
adc
xchg
xor
add
rclb
test
test
pop
mov
xchg
xchg
adc
mov
fdivl
push
xor
xchg
stc
sbb
out
pop
jg
movb
ss
and
addr16
adc
or
jne
pop
pop
enter
inc
add
loop
popa
add
loop
shr
dec
mov
mov
test
or
pop
pop
xlat
push
stos
aad
pop
dec
stos
ret
sub
adc
roll
fcmovb
addr16
mov
lds
xchg
jge
out
xlat
insb
inc
mov
cld
out
pushw
jg
stc
aad
daa
ret
lahf
sub
arpl
into
push
mov
push
xchg
sub
in
jno
clc
push
mov
mov
shll
jae
dec
int
or
push
mov
lret
add
out
rolb
ret
dec
mov
dec
ss
mov
cmp
ljmp
inc
into
inc
js
stc
xchg
and
mov
mov
xchg
cltd
add
lds
in
scas
xchg
out
aaa
dec
cmp
loope
inc
test
test
adc
lret
mov
xchg
clc
loop
shrb
divl
out
cmp
scas
dec
push
adc
fdivrs
dec
push
xor
cmc
xchg
xchg
loopne
scas
jle
shrb
cli
cmp
cld
add
or
test
inc
push
dec
cmp
icebp
push
cmp
or
fidivrs
pop
push
stc
arpl
out
xchg
push
jno
movsl
push
lret
xor
push
movsl
aaa
add
jg,pt
adc
enter
loopne
loope
add
clc
ror
loopew
inc
jns
cwtl
jge
lret
rol
xlat
xor
sbb
xchg
push
mov
pop
adcb
pop
add
lcall
test
sbb
ret
push
cmp
xchg
stc
pop
scas
in
dec
shrl
jns
pop
into
repnz
sbb
sbb
push
call
adc
xor
loopne
mov
sbb
push
enter
or
xchg
pop
fwait
pop
jno
pop
mov
jo
dec
dec
xor
mov
push
dec
fadds
sub
mov
pop
inc
sub
data16
mov
jmp
aad
jne
xor
les
stc
mov
jmp
add
cmp
dec
ljmp
or
cmp
jmp
adc
xchg
popa
or
leave
lods
scas
jo
push
adcb
rcl
fnop
sub
adc
push
mov
xchg
push
cmp
mov
mov
jg
xor
js
dec
mulb
in
loope
pop
pop
movsb
ja
ljmp
mov
lods
mov
lods
rcrb
inc
mov
mov
mov
das
pop
ds
ret
imul
sbb
cmpsl
or
cwtl
lea
fisubl
add
pop
mov
bound
xlat
lds
inc
pushl
ljmp
jno
mov
jns
movsl
lea
dec
mov
jg
cltd
stos
jmp
movsb
call
pop
repnz
movsb
in
insb
adc
stos
sub
mov
fsubrl
cmp
in
mov
ja
mov
std
js
cmp
fnstcw
in
sub
push
dec
adc
aaa
ja
add
cmp
addr16
mov
dec
jp
lcall
push
sub
mov
icebp
out
fsubrl
icebp
les
mov
in
cmpsb
rolb
daa
scas
or
mov
jle
jae
sbb
dec
fwait
and
cmpl
test
push
lahf
xchg
mov
jp
mov
loop
lcall
add
mov
jae
jb
repnz
test
pop
xor
push
addr16
movhlps
in
fistpll
mov
dec
jb
xor
dec
mov
lock
int
loopne
cmp
stos
cmp
push
cwtl
or
insl
loopne,pt
inc
cmpsb
jge
xor
xor
pop
push
shrb
jb
ret
adc
stos
add
mov
and
in
mull
les
xor
dec
arpl
out
pop
aad
test
movsb
inc
es
xlat
bound
rcrb
lods
lret
aas
iret
test
hlt
sbb
mov
jge
push
pop
mov
fidivrl
pop
dec
cs
jg
in
mov
push
mov
sub
add
or
das
movsb
sbbl
push
mov
cmp
stos
push
dec
fnstenv
icebp
test
mov
pop
push
shl
xchg
cmp
push
push
and
orb
lock
js
hlt
les
adc
push
daa
sbb
jle
cmp
into
jae
stc
lea
and
xchg
mov
rolb
arpl
or
push
ret
leave
ret
dec
sti
jae
pop
arpl
je
int
or
jno
push
aaa
in
aam
das
adc
outsl
rclb
out
sub
loop
in
mov
xor
add
fbld
xchg
xchg
push
pusha
pusha
aad
jns
and
cs
aas
mov
cmp
jne
pop
pop
cmpb
out
gs
cli
enter
out
mov
test
jno
cmp
push
aas
adc
mov
jge
roll
iret
sub
in
lcall
pop
cmp
scas
sbb
aas
jp
and
jecxz
popf
and
add
inc
scas
stc
dec
mov
xchg
outsb
cmc
fsubrl
cwtl
int
addr16
mov
icebp
mov
cmc
xor
js
lds
pop
xor
or
sbb
dec
sbb
cld
aam
call
sahf
cmp
sub
mov
lods
popw
mov
mov
inc
or
dec
sbb
mov
pop
lret
jno
cmpsb
test
bound
testb
pop
add
in
int
shlb
js
xchg
sbb
and
aas
test
adc
xor
ror
pop
mov
cmp
or
out
xchg
mov
lds
mov
adc
mov
pushf
andl
add
or
inc
xor
mov
inc
icebp
rcll
inc
repz
dec
ret
leave
mov
loope
pop
loopne
mov
jb
fcoml
int3
fisttpl
push
mov
cmp
inc
call
in
call
pushf
push
jmp
lods
jbe
pop
mulb
pop
add
outsl
stos
rcr
stos
lret
jl
idivl
or
mov
and
mov
mov
fwait
aad
call
loop
mov
cmp
imul
loopne
push
lahf
outsl
mov
pop
jp
and
mov
std
popf
push
fists
mov
push
cmpsl
out
fs
mov
ret
mov
sahf
clc
scas
ja
setp
cmpsl
ret
inc
cmpsb
dec
imul
idivb
inc
negl
call
or
jmp
movsl
cmpl
mov
mov
clc
xchg
sub
out
cmc
push
jns
and
and
loopne
mov
loopne
test
es
xchg
iret
sbb
clc
xor
mov
push
in
mov
bts
add
or
dec
sub
test
mov
mov
repnz
xor
cmp
adc
cltd
and
iret
in
nop
lods
aad
mov
mov
sahf
and
gs
les
mov
lret
outsb
xlat
xor
sar
pop
push
loope
mov
lods
inc
or
inc
mov
decl
mov
mov
xchg
nop
call
sub
mov
movsb
loope
adc
lock
rcll
scas
fildl
gs
iret
mov
mov
mov
dec
xchg
push
fiadds
cld
fcomps
jb
out
dec
leave
push
stc
dec
ljmp
sbb
sbb
cmp
mov
repnz
imul
aam
ss
dec
add
pusha
adc
out
lea
mov
adc
dec
push
enter
push
push
cmc
jl
push
cmc
in
push
jo
add
mov
dec
jmp
mov
out
push
push
add
inc
push
push
xor
pop
ss
pop
mov
push
fnstenv
out
orl
lds
mov
cld
pop
or
mov
sbb
sub
in
jns
enter
dec
jns
loopne
sbb
sub
in
push
pop
sbb
loopne
ljmp
movsb
shrl
pop
mov
das
and
pop
rcl
push
pushf
ret
push
mov
push
test
mov
cltd
les
pusha
mov
lahf
pop
into
outsb
sbb
loope
mov
cmp
enter
lods
dec
daa
inc
sub
inc
jo
aas
shll
mov
mov
popa
ret
je
adc
and
cwtl
leave
xchg
es
int
in
mov
add
pop
push
out
ret
ljmp
push
ds
ret
or
adc
add
inc
in
xor
dec
in
test
notl
mov
rcl
in
std
call
cmp
lahf
xchg
xlat
mov
ljmp
pop
fadds
loop
test
out
mov
dec
mov
add
sahf
mov
nop
hlt
add
or
mov
sbb
enter
add
mov
out
xor
xchg
fucomip
inc
push
hlt
sbb
or
stos
jge
push
mov
imul
push
sbb
xchg
push
sub
lahf
adc
cli
and
nop
in
push
push
dec
subl
and
sub
out
mov
data16
ret
in
inc
xor
into
es
jp
adc
cs
sub
stos
xchg
in
in
repz
jmp
jnp
call
movsl
and
mov
jecxz
jne
clc
mov
lods
and
outsl
adc
and
daa
sub
insl
cmp
push
shll
push
adc
fcoms
add
adc
arpl
movsb
and
sti
add
mov
repz
push
add
lock
rorl
jo
jg
push
push
nop
push
push
enter
in
and
push
outsb
ljmp
jl
lods
sbb
inc
das
fisubrs
sub
dec
std
and
add
dec
sub
inc
sub
mov
dec
pop
push
mov
mov
dec
jae
loopne
sub
dec
movhps
out
lock
jl
dec
mov
or
xchg
fnsave
sbb
jb
cmpsl
pop
stos
hlt
arpl
int3
nop
mov
faddl
push
cmp
aam
ret
or
jmp
xorb
cmp
xchg
xor
push
sbb
test
dec
bnd
lds
add
jne
es
sub
dec
jge
lds
outsb
xchg
cmp
and
ljmp
lds
mov
testb
lahf
mov
xchg
lods
xor
inc
int
ret
and
in
push
pop
test
bound
movsl
fwait
jns
cmpsl
inc
jg
sub
hlt
pop
in
inc
adc
add
xor
ss
and
xor
lret
ret
xchg
int
lock
adc
fistpll
mov
lock
int
ret
pop
sbb
lahf
popf
cltd
jge
scas
mov
cmpsb
cwtl
adc
jnp
in
je
outsb
enter
fs
mov
dec
adc
and
out
popa
ret
and
out
test
pop
jae
fucomp
xchg
push
inc
negl
repz
mov
js
mov
ficompl
shl
int3
loopne
xlat
mov
fstl
scas
xor
test
mov
cwtl
test
and
popf
lds
out
in
test
negl
jb
or
add
pop
movsl
xlat
fdivrs
rolb
rorb
inc
repnz
jb
shl
add
jae
movsl
sbb
in
xchg
lret
fimuls
stc
xlat
sbb
push
add
jp
and
notl
lock
out
mov
jnp
mov
out
cmpsb
jbe
sub
lods
jne
mov
sub
xchg
jae
push
mov
inc
push
or
repz
lcall
into
les
sub
push
add
jbe
xchg
call
repz
sub
mov
cmp
xchg
adc
cmp
add
aas
push
enter
or
mov
popa
xchg
jno
lds
dec
jl
outsl
js
jo
enter
xor
ret
push
sub
fbld
icebp
push
lds
popf
add
mov
sub
mov
push
in
jmp
and
call
movsl
push
push
rcrl
mov
pushf
jb
sbb
addl
adc
imul
jo
jo
outsl
lret
push
inc
xor
mov
ret
inc
es
aam
aas
sub
sahf
mov
cmpsb
clc
adc
mov
lahf
dec
jle
shrl
gs
adcb
andl
pop
dec
jb
cli
lret
lret
cs
mov
inc
inc
jl,pn
iret
add
loopne
jge
cs
sbb
ret
cmp
jecxz
mov
mov
loopne
add
pop
es
inc
mov
xchg
call
test
push
sti
sbb
xchg
xlat
stos
lret
mov
and
jbe
das
shll
pop
add
xchg
jns
mov
push
not
add
mov
push
test
out
mov
gs
or
sub
sub
ljmp
dec
pop
nop
push
jp
insl
sub
repz
pop
sti
xor
xchg
test
mov
cmpsb
adc
mov
jle
sub
inc
pop
insb
pop
xor
insl
into
sub
mov
sub
pop
or
jne
lds
adc
outsl
push
mov
xor
mov
int
pop
ljmp
or
fisttpll
jb
mov
leave
mov
pop
test
sbb
ljmp
imul
mov
js
lods
push
inc
or
loope
push
orl
stos
adc
loope
loopne
push
es
sbb
in
pop
cmp
fcompl
jp
jl
xor
lods
xor
sub
test
adc
xchg
mov
push
or
and
nop
sub
es
aam
jne
aad
orb
popf
mov
outsl
push
mov
insb
jmp
jmp
pop
popa
inc
lds
repz
movsb
jg
in
fisttpl
sub
add
movsl
test
in
push
fwait
or
pop
xchg
lcall
add
test
sbb
xlat
cwtl
sub
aas
cwtl
movsl
out
xchg
inc
cmp
lcall
jae
sub
repnz
insl
pop
sub
mov
mov
fcmovb
jns
jp
push
sbb
cwtl
add
mov
sbb
xchg
repnz
cmp
mov
fdivrl
mov
aas
fisubrl
into
jbe
pop
movsb
adc
sub
push
stos
pop
loope
inc
mov
xchg
ljmp
out
in
popf
dec
ljmp
sbb
outsb
nop
jne
and
out
dec
or
gs
movsb
dec
daa
mov
fnstenv
orl
mov
mov
jecxz
pop
shlb
cmpsb
jmp
in
stos
xchg
and
int3
cmp
int
fsts
int3
jmp
mov
xorl
xor
bound
or
and
push
insb
adc
insb
add
or
out
aam
push
xor
inc
arpl
bnd
lds
mov
notl
jg
mov
sbb
test
mov
sub
jae
xor
das
push
push
insl
xchg
jmp
call
adc
clc
in
mov
faddl
sarb
push
sub
and
cli
lods
mov
sbb
pop
lret
sub
in
fstps
scas
mov
mov
xor
int3
pop
mov
jbe
lret
cmp
sub
cli
add
jmp
movsl
lret
add
mov
lea
fwait
inc
aaa
jbe
fcmovnu
mov
lock
iret
add
movsb
jns
pop
inc
cmp
insl
xchg
mov
shl
xor
cli
adc
lret
es
or
pop
and
inc
pushf
popa
dec
movsb
in
movsb
faddl
inc
add
xor
and
jg
inc
add
mov
aad
mov
xor
fisubl
add
dec
mov
cmp
mov
lods
out
sub
fmuls
popf
fsts
fucomi
movsb
add
pop
ret
enter
adc
dec
pcmpgtb
xor
jmp
data16
sub
dec
icebp
pop
jbe
fnstcw
sbb
daa
cmpsl
mov
and
mov
xlat
inc
mov
push
adc
and
in
adc
cmp
jg
pop
fisubl
sahf
xchg
add
arpl
mov
in
shll
aaa
jnp
int
pop
adc
mov
mov
mov
push
pop
int
or
adc
ds
xor
stc
pushf
push
addr16
mov
pop
popa
xchg
cltd
lret
push
jmp
mov
jl
fiaddl
sub
sbb
pop
cmp
sbb
push
das
jmp
push
and
push
fs
fistl
stos
scas
ljmp
test
and
push
movsl
inc
pop
xor
pop
jl
mov
xor
iret
outsb
xchg
mov
in
dec
scas
sub
addb
jb
dec
pusha
xchg
push
test
adc
jecxz
sbb
lahf
mov
push
mov
outsb
pop
cmc
adc
xchg
out
sahf
stos
das
insl
loopne
push
pop
pop
ret
aad
stos
and
icebp
mov
lret
jmp
xchg
jne
push
push
inc
sub
cmp
and
mov
enter
or
ret
icebp
sub
xor
shlb
lcall
leave
fistpl
dec
jb
inc
arpl
bound
out
scas
cmp
mov
push
daa
jnp
cli
mov
mov
shll
mov
mov
pop
testl
pop
xor
or
leave
jno
dec
push
lahf
sub
push
dec
cld
xorl
sub
dec
aas
jg
test
movsl
jne
xor
insb
out
mov
lret
xchg
dec
fcom
in
inc
aam
push
or
pop
dec
mov
cmpsl
rcr
call
pop
mov
lret
mov
xchg
insl
push
loop
mov
mov
fisttpll
ja
ljmp
push
adc
cmp
shr
pop
movsl
loopne
into
push
sbb
test
addl
fidivrl
scas
jae
loop
push
sub
mov
dec
add
arpl
pushf
lods
adc
cmp
nop
jbe
fwait
add
mov
movsl
xchg
out
push
sarl
inc
scas
or
lods
cmp
ds
les
repnz
jecxz
lahf
clc
pop
xor
les
daa
mov
lock
das
and
fidivrl
pop
push
aad
rcrb
dec
and
mov
addb
aaa
mov
ret
mov
inc
mov
fstpl
clc
adc
cmp
gs
popf
xchg
xor
mov
in
int
xchg
adc
mov
and
dec
inc
test
lret
lret
cmp
xlat
sahf
xor
out
mulb
aad
and
mov
idivb
test
mov
pop
sbbb
pusha
cmp
aam
jg
sub
or
fistpll
xlat
or
mov
xor
rolb
xor
loopne
mov
in
fnstenv
fdivrs
lock
or
mov
aad
call
mov
repz
inc
test
icebp
aam
cmp
icebp
daa
xchg
and
or
addr16
mov
jl
stos
loope
push
pop
mov
mov
mov
adc
xor
pop
pusha
sahf
imul
cmp
fsts
pop
sarb
mov
ret
dec
pop
lods
cmp
mov
into
xor
pop
push
dec
mov
movsl
sahf
fcoms
push
gs
xchg
popf
mov
stc
push
xchg
scas
gs
sbb
push
add
lahf
adc
mov
aaa
mov
inc
iret
mov
fs
lret
movsb
inc
adc
sub
push
pop
out
je
popf
iret
adc
mov
dec
sbb
sahf
inc
lea
cmp
and
cwtl
sbb
xor
and
adc
mov
movsb
movsb
scas
cmc
not
aad
jo
adc
inc
cmp
loopne
negl
into
dec
jbe
xchg
cmpsl
xadd
jecxz
negl
and
jnp
movsl
adc
jle
xor
lcall
mov
lods
sarl
jae
xchg
push
and
or
xchg
inc
movsb
jge
inc
out
stc
mov
mov
add
cld
push
mov
inc
scas
aam
hlt
shlb
mov
ja
xor
arpl
ja
adcl
sub
cmp
sub
jmp
add
xchg
or
mov
imul
cld
and
pop
aas
pop
lret
hlt
repnz
std
mov
add
shrl
out
pop
xchg
sahf
jl
sub
lock
jb
lods
arpl
or
je
xchg
out
ljmp
xchg
into
mov
ljmp
scas
dec
test
shll
xchg
or
test
xchg
jmp
cmp
daa
movsb
jmp
out
xchg
addr16
dec
xchg
and
sub
mov
inc
movl
outsl
popa
mov
sub
mov
das
pop
dec
jle
nop
mov
stos
jae
imul
dec
nop
mov
xchg
hlt
mov
inc
adc
sub
push
mov
cmp
xor
roll
aad
jmp
lret
sbb
ficoms
cmpsl
mov
xor
bound
shll
add
test
cwtl
mov
loope
mov
jmp
movsb
out
lock
stos
sar
mov
ljmp
jle
cmc
xor
lret
xor
jge
aaa
fistps
xchg
pushf
push
insl
popf
ret
sub
enter
and
lods
jns
and
pop
mov
inc
jbe
and
mov
pop
sbb
adc
mov
nop
mov
sub
jle
test
loopne
adc
hlt
add
orb
loop
out
jae
ja
mov
sub
addb
clc
cmp
xchg
and
inc
ficompl
call
mov
or
ss
lret
xorl
push
test
test
lds
dec
push
test
movsl
fwait
data16
cmp
mov
xchg
jne
xchg
pop
je
adc
call
jle
sbb
or
fiaddl
push
jmp
push
clc
mov
loope
jmp
jmp
hlt
sbb
jmp
mov
push
add
adc
push
adc
xchg
xchg
loope
and
mov
adc
mov
sub
cltd
mov
push
sar
pop
dec
pop
dec
xchg
pop
in
int3
mov
sub
dec
popf
stc
sbb
lahf
mov
orl
bound
in
rcrl
jne
mov
push
push
sbb
mov
ss
jnp
aad
ret
icebp
sub
pop
inc
mov
int3
in
or
adc
stos
xor
jnp
iret
push
dec
popf
mov
inc
sahf
push
mov
scas
andl
scas
movsl
and
in
cld
adc
mov
daa
add
inc
cli
stos
adc
test
mov
xchg
call
hlt
sbb
sub
sbb
shlb
dec
icebp
stc
mov
stos
loopne
ds
or
lahf
mov
mov
loope
add
divl
cmp
cmp
adc
test
cmc
sbb
mov
imul
adc
inc
insl
les
add
xor
mov
mov
sbb
xor
xor
xchg
test
fadds
push
out
popf
fstpt
mov
push
adc
jb
insb
fsubrs
fcom
test
cmpsb
out
iret
into
pop
adc
test
dec
xchg
dec
jae
jecxz
or
shll
pop
sub
xlat
leave
sbb
adc
es
lods
fldcw
or
inc
add
cmp
rol
lret
dec
add
push
xor
fst
fsubs
mov
dec
add
mov
mov
movb
sub
dec
add
sub
aas
push
mov
mov
mov
decl
sbb
lea
lock
mov
jmp
cmpl
push
pop
push
or
xor
iret
and
lock
dec
pop
and
push
cmp
jae
call
dec
rorl
mov
leave
add
arpl
and
pop
call
lods
and
xchg
pushf
inc
xchg
das
mov
or
xchg
sbb
push
sbb
jp
adc
sub
and
int
cmpb
xchg
int
mov
pop
xor
int
js
sub
push
fisttps
sub
sahf
pop
arpl
fisttpll
imul
es
pop
stos
adc
sahf
mov
fwait
imul
das
mov
inc
and
dec
mov
adc
push
lahf
jp
mov
cwtl
mov
daa
int3
push
push
push
test
call
mov
sub
push
sbb
loop
out
xchg
test
shlb
xor
and
sbb
adc
jmp
lret
js
iret
and
dec
push
ficomps
sub
xchg
inc
xor
or
out
xor
ds
or
test
dec
rorl
movl
push
push
mov
adc
dec
push
pop
push
aaa
xchg
mov
mov
adc
or
mov
adc
sar
jnp
mov
lret
lock
push
lea
lea
in
mov
or
orl
lret
je
insl
fnstenv
pop
push
dec
ds
test
sahf
aaa
inc
test
mov
mov
insb
and
or
cmp
aaa
ds
fisubrs
xchg
xchg
sbb
xlat
cmpl
pop
jns
rorb
cld
xor
sti
into
push
inc
push
dec
movsb
push
xor
pushf
lahf
insb
sbb
loopne
adc
sub
imul
pop
stc
and
mov
jno
stos
imul
cltd
mov
or
les
into
mov
cmpsb
mov
popa
test
sahf
mulb
and
shrl
in
and
cmp
cmp
sub
sbb
iret
jne
bound
fidivrs
xor
sbb
sbbb
jl
div
xchg
sbb
hlt
es
outsl
xchg
movsl
js
repz
jp
mov
inc
sahf
lock
shll
shl
mov
lods
shrl
cmpsb
xor
cmpxchg
mov
jo
ss
test
mov
orb
out
mov
int3
xchg
or
into
mov
mov
inc
adc
js
xchg
inc
repz
ljmp
inc
and
ret
prefetchnta
jo
pop
ss
faddl
and
or
enter
je
enter
mov
push
mov
jg
and
lods
mov
sbb
addr16
dec
cmc
sahf
inc
jns
imul
inc
lds
outsl
lret
in
fdivr
cmp
icebp
jmp
fstpt
jo
fdivr
int
sbb
xor
stos
movsb
sub
bnd
mov
adc
aam
inc
lret
jns
call
dec
stos
out
sbb
jno
imul
push
dec
jmp
stc
inc
mov
sbb
adc
cmp
ss
push
js
sbb
push
mov
sbb
repnz
in
and
jmp
sbb
jmp
shrl
jno
out
out
jno
loope
sbbl
mov
hlt
loopne
mov
xchg
sbb
jmp
mov
adc
jp
or
mov
mov
and
aam
insb
mov
daa
or
out
push
lds
loopne
xchg
je
mov
and
sahf
dec
add
fimuls
mov
push
iret
pop
xchg
inc
xor
and
add
shl
adc
push
cwtl
fisubrs
notb
and
sti
xor
sbbl
lods
stos
fimull
movsl
mov
xor
insl
sub
cmp
hlt
jecxz
imul
out
lahf
and
pop
or
sti
cmp
xchg
mov
xchg
cmp
mov
mov
or
and
pop
dec
lcall
mov
xchg
inc
and
xlat
xchg
fwait
pop
mov
sbb
fcmovne
dec
mov
and
mov
test
jne
rclb
test
fistl
ficomps
sarl
xor
iret
cs
scas
mulb
cmp
adc
mov
std
push
xor
icebp
lock
xor
mov
dec
or
in
dec
pop
jo
jl
xchg
add
fsubrl
or
adc
sub
sub
jne
pop
lret
insl
into
or
inc
inc
inc
push
setne
pop
loopne
shll
jecxz
repnz
or
push
adc
jbe
pop
add
mov
mov
dec
pop
repnz
call
mov
lods
push
jmp
gs
or
inc
ja
sub
xor
aad
lret
daa
in
imul
mov
mov
mov
xchg
lock
pop
cmpsl
mov
xchg
dec
ljmp
xlat
jb
cld
outsb
cwtl
xchg
mov
fimuls
jl
leave
or
jo
dec
in
loopne
cltd
and
push
or
loope
movsb
fcompl
sahf
mov
aas
adc
inc
loope
clc
mov
mov
repnz
and
or
pushf
fwait
inc
xor
insl
call
negl
cmp
stos
mov
or
dec
repnz
jnp
idivb
mov
xsave
adc
sbb
ret
mov
pushf
hlt
inc
je
sub
mov
cmpsb
jmp
out
push
lcall
lret
xor
xchg
lahf
add
sbb
sbb
xor
inc
fsubl
cmp
inc
add
fisubrl
mov
jae
sub
in
dec
in
mov
lcall
leave
sbb
call
mov
pop
xchg
or
outsb
jp
dec
inc
call
or
xchg
mov
stos
add
imul
mov
dec
mov
mov
fidivrl
pop
adc
call
enter
push
mov
dec
or
adc
or
xor
fstpt
in
mov
sarb
aam
and
dec
bound
lods
insl
test
sarb
cltd
mov
mov
cli
mov
mov
gs
das
shlb
cmp
outsl
jmp
mov
dec
js
daa
inc
daa
bound
stos
daa
add
fmul
pop
add
mov
sbb
arpl
and
mov
jmp
scas
jg
xchg
clc
dec
jno
aaa
arpl
dec
inc
lahf
ja
scas
test
sbb
pop
pop
pop
xchg
add
xor
inc
dec
scas
mov
gs
insl
cmp
lahf
cmp
jo
in
fisubl
jg
enter
jbe
jne
push
mov
xchg
or
cmpsl
fwait
stc
push
and
fcompl
hlt
mov
cmpsl
lds
lea
add
enter
mov
dec
sbb
das
lea
mov
nop
lock
inc
push
push
sbb
fcoml
jmp
push
dec
push
leave
popl
leave
xchg
jne
pushw
lods
xchg
sub
mov
jo
fnstenv
ret
push
mov
jge
scas
test
repnz
jp
mov
cmp
test
sbb
popf
mov
aas
stos
sahf
rcll
aad
pop
mov
loop
mov
add
adc
jno
dec
ja
cmp
fld
sbb
daa
push
clc
test
jmp
cmc
sub
and
mov
insb
adc
and
sbb
sub
iret
jecxz
cmp
mov
nop
std
test
xchg
clc
fsubrp
dec
into
sbb
dec
sub
js
lds
dec
push
jne
orl
mov
in
stos
pop
lods
fmull
inc
jl
loope
jl
xchg
mov
sub
lods
rcl
cmp
mov
lods
in
cmp
loope
lock
xor
inc
sub
fmul
lea
mov
jne
cmp
push
es
jl
sbb
push
cltd
push
movsl
mov
inc
sysenter
and
jnp
imul
pushf
or
loopne
movl
fiaddl
ret
insl
aas
mov
or
push
aad
js
dec
mov
fdivrs
add
adc
push
mov
les
mov
or
xchg
movsb
arpl
loope
cld
je
fcmovu
enter
add
fimull
xor
bound
out
out
xchg
push
les
inc
sarb
ja
ja
jno
repnz
or
mov
add
pop
push
jno
xchg
aaa
push
es
sbb
inc
cmp
xchg
pop
push
jp
inc
adcl
popf
xor
inc
ret
shlb
arpl
sub
insb
ret
add
jge
int3
pop
xor
stos
movsl
int3
push
sub
repnz
cvtpi2ps
pop
pop
sbb
mov
mov
ss
popf
fisubrl
mov
xchg
and
shl
mov
in
pusha
push
add
ljmp
je
cs
das
mov
pop
jb
jmp
mov
ja
pop
ds
push
mov
dec
cld
pop
inc
add
icebp
xor
dec
mov
fldt
jne
or
pop
mov
scas
dec
psubusw
out
cli
push
push
sbb
and
dec
mov
push
cltd
fsubrs
nop
sub
sahf
ja
sbbl
mov
xchg
stos
jg
sbb
es
push
dec
xchg
enter
xor
cmc
div
cmpl
inc
adcb
out
jg
xor
xchg
inc
shll
or
push
jmp
mov
xabort
adc
add
xor
mov
test
add
arpl
into
sub
xchg
out
sbb
sbb
loop
call
ret
inc
add
adc
mov
cmp
repz
pop
mov
cmp
test
pushf
in
cmpsb
stos
xlat
adc
stc
leave
add
popa
popa
cmp
out
clc
sarb
push
cli
mov
xchg
jo
lods
roll
mov
sarl
push
xchg
std
fadds
test
cltd
cld
in
sbb
mov
pop
gs
shlb
orb
mov
ret
daa
or
xchg
xor
push
inc
and
xor
xchg
call
mov
jl
push
mov
fmull
iret
dec
cld
mov
xchg
sti
add
jae
and
rol
shl
sub
fadds
adc
sbb
mov
sub
pop
cmp
nop
lods
sbb
stos
mov
adc
adc
mov
dec
inc
dec
mov
mov
outsb
in
enter
pop
xchg
out
ret
in
pop
lock
jb
inc
lea
out
mov
stos
jge
pop
and
cmc
ror
inc
std
adc
pop
push
xor
iret
xor
nop
movsb
sbb
fcomps
push
inc
into
dec
push
dec
jae
and
inc
sbb
jae
lods
or
inc
pop
or
sub
bound
mov
mov
pop
jo
aas
add
and
mov
pop
iret
cs
je
add
cmp
jmp
repz
rcrl
push
hlt
inc
pinsrw
test
frstor
dec
sarb
out
dec
sarb
loop
xor
add
cmpb
sbbl
out
leave
xor
sbb
or
or
sbbb
fldenv
ljmp
push
or
hlt
nop
bound
ret
or
or
mov
lea
lcall
rolb
insb
jge
jmp
and
ja
xchg
arpl
xchg
inc
and
adc
xchg
mov
lock
je
js
test
push
add
mov
pusha
loopne
fcomps
sbb
call
call
push
sub
sub
push
mov
pop
aad
inc
pushf
or
roll
icebp
hlt
test
loopne
movsl
aaa
pop
jnp
xor
mov
scas
ds
and
cmpsb
ljmp
and
mov
cmp
movsb
add
int
pop
cld
push
mov
jns
sub
cmp
push
cld
jge
or
mov
roll
cmp
cmp
cld
xchg
jne
test
or
jmp
data16
daa
cmp
hlt
or
pop
mov
je
or
inc
dec
sub
leave
jne
jnp
scas
in
push
cwtl
push
jge
mov
sub
andb
inc
pop
dec
pop
xchg
andb
mov
sbb
mov
xchg
pop
cmpsl
sub
pusha
dec
test
add
test
xor
mov
jge
bound
mov
fldl
and
test
lahf
mov
pop
xchg
repnz
xor
add
icebp
mov
push
push
in
adc
xchg
xchg
lcall
jo
pop
xor
sub
push
popw
xor
mov
push
cmp
test
cmp
test
xor
cmp
addr16
xchg
xor
mov
sbb
test
cmp
pop
bound
mov
adc
lods
fstl
fisubrl
sbb
push
lods
inc
into
mov
aas
test
ret
les
jns
jae
inc
repz
xchg
insl
add
fldcw
or
mov
rorb
roll
mov
add
xchg
aad
cmp
lret
xchg
out
mov
test
in
shlb
dec
adc
or
mov
cs
adc
and
jge
xchg
jle
inc
loope
or
sbb
int
inc
mov
nop
lret
popf
sbb
mov
lret
jge
std
lret
jne
push
adc
sbb
xchg
cltd
pushf
js
in
lock
in
push
cli
loop
add
in
pop
in
mov
cmp
aas
jge
pop
pop
jle
inc
or
xor
adc
testb
daa
jo
aad
repnz
testb
es
or
das
fwait
jmp
test
ds
cld
mov
jg
and
or
inc
sbb
fdiv
ret
cld
rclb
out
stos
sub
int
insl
sub
ror
insb
aaa
call
shrb
jp
xor
repz
sbb
ja
ret
pushf
cmp
stc
rorb
shll
movsb
ss
push
inc
inc
sub
pop
pop
pop
mov
lods
inc
and
movsb
mov
ss
cs
es
push
arpl
outsl
sub
faddl
sbb
jnp
adc
imul
insl
pop
pusha
aas
sub
push
or
sbb
mov
jl
mov
ds
pop
cmp
popf
sarl
cli
fldl
or
test
push
mov
lods
inc
xor
test
or
hlt
ret
aas
push
scas
into
dec
add
fnsave
lret
iret
xchg
scas
dec
clc
lea
cmp
sub
inc
rcrb
lds
int3
dec
fmul
xchg
xlat
adc
out
imul
and
imul
pop
nop
cltd
lods
out
inc
movsb
pop
jns
mov
add
mov
xor
ds
bound
sarl
push
roll
pushf
dec
cltd
loope
into
cmc
inc
insl
dec
inc
adc
inc
mov
push
inc
lcall
aas
stc
pop
jmp
daa
shll
cltd
xchg
xor
sbb
ror
add
aam
roll
fwait
push
xchg
scas
ss
jge
bound
int
mov
inc
mov
sbb
cmp
popf
in
ljmp
dec
jg
cld
stos
push
hlt
gs
mov
or
push
xor
push
jl
dec
mov
cs
mov
mov
inc
leave
sub
pop
test
mov
lea
push
movsb
push
in
push
int
shlb
ret
inc
cmp
aas
pop
inc
sbb
push
divb
into
imul
mov
rcrl
or
dec
push
mov
clc
mov
out
ret
push
push
jnp
shr
push
xchg
icebp
jns
ret
mov
pop
push
pop
popa
cmp
jp
pop
xchg
sti
rolb
xchg
inc
popa
inc
lock
cmp
adc
jbe
adc
mov
jmp
sbbb
dec
addr16
clc
idiv
cmp
aaa
jmp
inc
dec
pop
mov
dec
in
mov
stos
mov
mov
jnp
cmp
pushl
add
ds
in
mov
push
mov
popa
negl
je
ret
mov
lret
push
and
movb
pop
jg
outsb
dec
pop
pop
jb
lahf
mov
fwait
orb
xchg
aaa
std
cmp
shlb
aad
mov
mov
shll
inc
or
inc
daa
stos
lods
arpl
int
in
bound
cmpps
mov
popf
pop
mov
insl
jmp
mov
xor
dec
arpl
sub
popf
cwtl
in
push
add
push
inc
xchg
inc
into
cmp
shll
insb
push
in
ds
jbe
fstl
pop
lods
xchg
inc
pop
scas
sub
mov
cmp
iret
loop
inc
xor
fldcw
lcall
mov
in
ja
push
aam
call
es
and
xor
icebp
ret
pop
orl
mov
xor
dec
jl
mov
sbb
xchg
xchg
mov
imul
add
aas
jg
or
or
and
cmc
or
push
cltd
jge
sar
ret
mov
cmpsl
hlt
jp
push
lea
cmp
sbb
shrb
and
jp
push
ret
mov
je
or
and
dec
mov
scas
into
ss
je
dec
clc
movsb
in
int
dec
or
xor
hlt
xchg
repz
xchg
mov
bound
and
mov
pusha
js
daa
sub
push
enter
imul
xchg
cmp
or
jnp
mov
outsb
xor
sbb
out
in
dec
sub
lea
lret
xchg
and
int
push
scas
mov
in
or
push
pop
in
jne
mull
jo
or
xor
add
mov
mov
xor
and
sbb
loopne
mov
pop
jg
mov
fcmovnb
movsb
aas
or
push
jbe
out
push
adc
push
xorl
outsb
sbb
sti
testb
pop
shrb
sti
stos
sbb
and
pop
orl
xor
cltd
cmp
mov
jl
pop
bound
outsb
mov
dec
xor
shrl
movsl
in
pop
jge
add
push
xor
sbb
imul
pop
scas
mov
cli
lea
fst
mov
and
jl
mov
nop
in
add
push
pop
scas
test
and
mov
iret
in
sub
jbe
adc
insb
in
rclb
stos
dec
xchg
dec
roll
js
aas
push
nop
out
jl
nop
mov
je
dec
cmp
push
pop
outsb
xor
in
enter
mov
cmc
into
stos
inc
jns
std
lret
dec
gs
dec
inc
push
pop
or
mov
dec
mov
imulb
mov
lret
cld
int
inc
jg
inc
fcmovu
lret
shrl
jbe
push
or
movsb
int3
mov
in
or
jge
loopne
adc
out
mov
cmp
fdivr
jbe
sub
jmp
mov
adc
loope
jge
mov
scas
jmp
mov
rol
mov
in
jo
dec
push
pop
arpl
cld
sub
add
mov
and
mov
shl
dec
mov
jmp
jns
mov
lret
dec
pop
mov
mov
int
pop
mov
jmp
aas
rorb
adc
push
pop
push
mov
andl
cmp
pop
mov
pop
ficoms
loopne
imul
fmul
fmuls
js
stc
pop
ja
jle
lcall
jmp
adc
sub
imul
ret
mov
push
add
mov
lahf
cltd
in
or
dec
sti
fcomip
or
cmpb
jmp
xchg
xor
pushf
mov
push
xchg
lret
sub
push
aam
adc
mov
add
xchg
andb
movsb
sbb
push
sub
rcrb
sub
repnz
jp
int3
stos
leave
pop
out
scas
or
jl
negl
xor
xchg
popf
stc
sub
pop
jl
cmp
lock
sub
pushf
icebp
mov
mov
and
sahf
push
inc
mov
jl
dec
jne
adc
push
mov
push
addr16
sub
cmpl
or
loope
jmp
out
xchg
jns
mov
cmpsl
pop
leave
cmp
jae
cwtl
ret
mov
jmp
inc
ret
arpl
lods
mov
fidivrl
data16
loope
and
adc
pop
lock
fwait
push
mov
ljmp
push
out
or
divl
add
ror
andl
clc
inc
push
mov
push
inc
mov
sahf
dec
jbe
ret
xchg
test
in
dec
dec
push
les
lods
sub
fists
shll
orb
sbb
rorl
inc
cmp
mov
cmp
inc
gs
and
std
out
lods
dec
bound
gs
out
shr
std
sbb
adc
repz
xchg
xor
icebp
ret
xor
lret
jmp
insb
mov
test
dec
fisttpl
sbb
lds
xchg
sub
rcrb
jo
out
xchg
adc
or
inc
push
add
rorl
loope
push
insl
rclb
dec
push
sar
inc
outsb
je
fsubrs
int
cmp
and
lretw
aaa
adc
jecxz
fsubrl
pop
xor
cmp
popf
adc
scas
nop
loopne
ja
in
jnp
jbe
xlat
ljmp
or
das
mov
dec
sub
xchg
jnp
fbstp
and
mov
xchg
pop
shll
sub
aam
pop
mov
sarl
push
inc
stc
xchg
mov
sbb
nop
sbb
loope
data16
fs
jl
movsb
adc
lods
sbb
xchg
iret
adc
leave
mov
dec
fisubs
xchg
imul
idivl
jae
mov
arpl
insl
or
sub
mov
jb
pop
inc
jo
test
incb
or
loope
mov
mov
dec
pop
xor
movsl
pop
in
inc
mov
cmp
test
mov
xor
mov
jge
cmp
loop
aas
lcall
push
aaa
push
insb
xlat
loop
and
jmp
enter
sbb
popa
std
mov
scas
add
cmp
push
jb
call
mov
mov
jns
int3
ljmp
imul
int
lret
jl
aas
scas
out
fcomp
andb
out
fcompl
adcb
sbb
mov
xor
jno
mov
fstps
cmc
jnp
shlb
sahf
jg
mov
add
mov
fwait
jmp
sub
sub
xor
lcall
es
pop
dec
xlat
mov
ret
xor
mov
loop
or
aam
sub
or
xor
mov
cmp
aad
dec
sbb
lock
test
in
mov
xor
or
aad
pop
xorb
out
shr
lcall
pop
jno
push
aas
inc
sub
push
repnz
sbb
xchg
lret
movsl
or
out
das
push
fdivr
sub
nop
jp
fisubl
mov
pop
stos
cli
fcoml
mov
cmp
and
push
jmp
dec
pop
jecxz
pushl
add
iret
xchg
rol
xchg
adc
push
pop
mov
daa
inc
xchg
inc
mov
jns
push
ficomps
inc
lea
jne
stos
xchg
xor
jno
dec
push
mov
pop
sub
sub
in
push
mov
xor
pushf
imul
aam
insb
push
adc
out
push
mov
push
leave
mov
in
cmpsb
push
push
mov
fidivrl
shrb
jmp
mov
lret
cmp
adc
out
inc
mov
pop
sbb
fdivrl
orl
pop
int
xchg
iret
test
dec
cli
dec
flds
push
stos
repz
mov
mov
cmc
jb
dec
int
rolb
jmp
inc
int
lods
pusha
cmp
fisubrl
sub
iret
sbb
mov
fwait
scas
push
ret
pop
xor
and
cmp
adc
sub
mov
push
adc
dec
adc
xchg
jae
sbb
or
or
cltd
dec
pop
aam
outsl
shll
pop
pop
stos
add
jge
out
in
sbb
cmp
ret
scas
test
lcall
adc
std
push
sbb
sbb
cmp
imul
mov
push
lcall
adc
test
mov
mov
mov
cvtps2pd
mov
into
pop
in
mov
fcoms
dec
and
sub
mov
shlb
pushf
sbb
jnp
jp
or
mov
xchg
xchg
test
cmp
lret
jno
or
inc
push
cltd
jp
cld
fcmovnb
pop
mov
push
and
push
pop
adc
loope
je
fwait
pop
xchg
sbb
sbb
or
pop
pop
hlt
in
push
dec
jmp
faddl
pop
enter
sbb
xchg
stos
mov
bound
xor
pop
enter
insl
outsl
push
xorb
sub
out
clc
or
xchg
stos
cli
xchg
mov
sbb
js
out
jmp
fstpt
stc
dec
xchg
pop
mov
out
aam
data16
push
mov
xchg
popa
addr16
push
fs
adc
dec
call
pusha
lahf
movsl
mov
mov
xlat
mov
jne
xchg
cwtl
add
in
jge
aaa
cmp
lods
arpl
seto
aam
add
add
xorl
cmp
cmp
bound
xchg
js
fwait
push
movsb
aaa
mulb
scas
mov
call
sbb
cwtl
shl
add
jne
add
cmc
ljmp
cmp
test
test
cwtl
cmc
jmp
mov
fmulp
mov
jns
ljmp
cld
dec
in
fwait
test
nop
sub
sbb
push
and
mov
cmpsb
fldt
mov
push
lret
sub
mov
jno
movsl
sti
movsl
push
mov
xchg
outsl
rcl
sbb
xchg
popf
pop
sbb
pop
repz
jecxz
cmpl
sub
fld
jecxz
mov
rorb
sbb
data16
bound
push
pop
pop
in
stos
lcall
imul
imul
mov
lahf
mov
stos
inc
sub
push
or
xlat
sahf
test
mov
xor
xorl
or
and
jb
adc
test
jno
sahf
push
inc
mov
jg
mov
lret
in
insb
es
leave
scas
test
sbb
and
sti
imul
and
cltd
xorl
popa
aaa
add
fs
mov
subb
mov
or
pop
cmp
into
cltd
xor
movsl
stos
mov
out
in
mov
imul
nop
sbb
insb
std
inc
ja
jo
inc
cs
jno
movaps
jg
hlt
mov
mov
outsl
dec
add
shr
mov
or
xor
cld
int
inc
adc
test
xor
pop
arpl
mov
jns
imul
in
xchg
jp
xor
mov
dec
xor
adc
mov
leave
sub
pusha
fsubrp
shlb
ljmp
out
mov
out
scas
bound
in
xchg
iret
out
imulb
cmovp
push
insb
dec
ss
xor
pop
shl
sbb
mov
push
popf
push
push
xor
dec
and
dec
bnd
mov
sub
dec
inc
div
fnstcw
nop
adc
sti
jmp
es
cmp
dec
pop
stos
push
mov
fucomp
mov
dec
int
mov
sti
xorl
ljmp
pop
rclb
xor
ret
push
loope
sub
hlt
mov
mov
xchg
dec
in
or
aas
add
daa
pop
adc
scas
mov
xchg
or
pop
in
idiv
out
push
in
mov
aam
pusha
pop
mov
xchg
test
push
push
hlt
shlb
push
les
and
push
movsb
outsl
dec
sub
push
gs
loope
decl
adc
ja
push
repz
lods
jp
cwtl
sub
sub
iret
push
stos
js
stos
xchg
xchg
ja
shrl
aam
movsl
or
add
stos
inc
push
mov
movsb
pusha
push
mov
lahf
or
mov
jbe
fs
outsl
add
xor
gs
sub
bound
cmpsl
in
dec
sbb
mov
xorb
loop
shrb
xchg
shll
les
xchg
mov
adc
sub
xor
and
repnz
mov
xor
mov
jae
mov
shll
pop
cmp
mov
push
dec
addb
cmpsl
xor
adc
rorl
hlt
fs
arpl
pop
adc
pushl
pop
hlt
push
push
mov
or
popl
out
inc
or
stc
jnp
lret
mov
xchg
ljmp
stc
mov
add
in
pop
hlt
or
js
add
sub
add
aam
subb
mov
push
out
movsb
arpl
dec
popf
cmp
stos
inc
lods
mov
adc
push
mov
xchg
cltd
scas
ds
aam
sub
mov
sbb
pusha
dec
sbbl
cmp
dec
and
mov
jns
xchg
dec
jmp
mov
cmc
cmp
push
push
and
mov
lret
cmc
repz
mull
loop
mov
addr16
mulb
mov
ret
fsubrl
popa
jb
and
inc
subb
sbb
add
xlat
sub
ja
sub
das
ss
mov
mov
or
jmp
adc
enter
mov
int
adc
push
popa
iret
xor
dec
daa
fcmovnu
xchg
fnsave
in
lock
mov
gs
test
sbb
pop
aad
rcll
jne
xor
stos
jne
xlat
movsl
int
mov
jb
movsb
add
inc
outsb
and
addl
and
xchg
test
push
lods
int
mov
bound
or
popf
sarl
inc
iret
rcrl
mov
adc
jnp
dec
inc
les
inc
xor
xor
out
inc
mull
mov
jle
ljmp
inc
imulb
js
rcll
cmpb
shr
fcoml
xchg
call
xor
mov
cmpsl
outsb
pop
cwtl
push
jb
call
es
lret
xchg
repnz
repz
test
xor
push
push
nop
cmpsl
inc
nop
mov
adc
testl
aas
test
push
mov
nop
jbe
insb
movsl
pop
xor
mov
dec
mov
js
arpl
sub
lahf
sub
push
sbb
add
pop
mov
and
lock
adc
fwait
rcll
loop
cld
in
or
xor
and
adc
cmc
popf
mov
cmp
arpl
jecxz
test
ds
call
ret
push
mov
push
and
cmp
jmp
cmp
scas
ret
test
scas
mov
cmpsl
outsb
fdivrl
dec
lods
xor
ret
xor
int
cmp
test
sbb
lods
push
ja
mov
cltd
cmpsl
mov
push
inc
ffreep
lcall
push
sbb
and
pop
mov
dec
adc
mov
mov
mov
cmp
sub
sub
into
sub
and
outsl
in
dec
sbb
out
xor
nop
lret
mov
mov
clc
pop
or
mov
aas
xor
lahf
inc
jno
pusha
cltd
or
cmp
test
dec
sbb
in
fcomip
imul
jbe
xor
mov
daa
sahf
mov
sbb
ds
into
int
or
sahf
cwtl
sub
add
shlb
or
lds
or
aaa
xchg
out
cmc
adc
cwtl
lock
adcl
cmp
insl
mov
je
pop
mov
test
mov
scas
pop
call
out
aad
cmc
cld
sub
gs
mov
cld
xchg
scas
or
cmp
fildl
sarl
push
push
outsb
aad
aas
inc
inc
add
inc
xchg
aad
imul
adc
xor
mov
mov
popf
mov
jo
outsl
push
movsb
cli
repz
cmc
fdivl
pop
and
dec
xor
xor
inc
int3
adc
mov
jge
ret
push
sub
dec
shlb
scas
mov
or
in
movsl
push
outsb
out
jmp
fiaddl
imul
loope
push
aaa
sti
mov
pop
or
into
insl
rcrl
fidivs
les
jl
jmp
pop
js
cltd
testl
mov
sbb
or
cmp
add
pop
je
aas
and
out
push
pop
xor
cs
add
sti
fstps
sbb
xor
cmp
ret
loope
jl
cmp
enter
clc
xchg
sarl
ret
mov
dec
add
xchg
loope
call
movsb
aam
mov
and
sub
cwtl
mov
lret
push
xor
add
leave
xlat
mov
or
leave
pause
jo
sbbl
dec
mov
cmpsb
jg
adc
test
cmpsl
ja
xchg
add
sub
sub
inc
lock
ret
xchg
cmp
or
int3
sti
aaa
enter
mov
imul
sub
xlat
dec
clc
and
xor
fdivrl
cmp
fisubrs
ss
fdivrl
pop
sti
sar
xchg
pop
leave
push
cld
sbb
les
push
in
es
cmc
daa
adc
loopne
xchg
dec
addr16
int
loopne
push
xchg
repnz
pop
push
test
or
repz
or
xchg
or
sub
jmp
adc
addr16
xor
xor
in
jecxz
adcb
pusha
aad
jae
pop
sbb
add
bound
xor
mov
imul
clc
push
das
add
insl
cld
mov
or
mov
xor
leave
jecxz
imul
push
incb
lds
dec
pusha
cmp
loop
fistps
mov
insb
out
cmpb
out
mov
fwait
pop
xor
sarl
pop
cmp
popa
imul
imul
or
ret
xchg
add
jbe
movsb
subb
sahf
out
dec
mov
lock
jne
mov
pop
jbe
test
sbb
scas
dec
jmp
insl
jo
sti
push
loope
movsl
pop
and
xor
mov
sub
add
stos
fcmovb
xor
je
cmc
push
inc
cld
ss
sets
lret
push
scas
scas
push
hlt
inc
int
push
xchg
dec
sub
lret
cs
movsl
xor
add
testb
inc
out
push
call
loopne
inc
add
jno
enter
daa
xchg
repnz
frstor
mov
inc
leave
pop
leave
adc
fs
jns
aad
inc
mov
add
das
sbb
lret
lock
ret
lea
jl
mov
nop
adc
test
mov
mov
lea
pop
xor
out
cmc
loop
mov
divl
mov
ja
shlb
ljmp
xchg
push
or
aad
subl
pop
push
aad
loopne
stc
or
jmp
dec
jno
cmpsl
inc
push
les
frstor
cmp
lret
pop
hlt
ret
fs
ret
pop
xchg
dec
loop
push
jge
test
mov
ljmp
xor
pop
xchg
arpl
pop
cld
jno
clc
je
out
popa
and
lret
ja
add
mov
mov
xor
xchg
inc
mov
sbb
adc
nop
mov
insl
push
cmpsb
and
add
fcmovnb
mul
mov
lock
cmpsb
push
pop
fwait
int3
dec
fdiv
fstl
adcb
pop
xor
mov
cld
xor
test
popf
movsw
xchg
call
add
inc
idivb
adc
call
jbe
and
or
or
shr
jge
mov
je
cmpsl
repnz
pop
xlat
inc
test
cmpsl
cs
stos
fisubl
pop
push
insb
loop
into
ds
sbb
sti
cmpsb
repnz
or
dec
outsb
push
dec
fadd
ds
mov
mov
pop
test
jns
shll
xor
dec
insl
pusha
loope
push
or
pop
lahf
stc
add
ds
jo
fnstcw
jbe
mov
insl
jecxz
sbb
negb
push
test
mov
dec
xrelease
push
sbb
lret
xor
mov
pop
inc
pop
leave
sbbl
xchg
call
sbb
cmc
cli
dec
loope
cld
or
negb
outsl
adc
push
adc
mov
cwtl
and
mov
fs
lret
xchg
cmp
out
and
addr16
push
in
xor
inc
add
idiv
test
mov
cltd
sti
rorb
and
mov
ljmp
out
test
cmp
int
lock
aad
cmpsb
push
and
dec
jmp
pop
xor
lea
pop
xor
jmp
pop
scas
ljmp
fbld
sti
cmp
jno
outsl
dec
bound
add
movsb
sbb
std
mov
repnz
es
nop
mov
inc
sub
xchg
mov
ficomps
inc
test
mov
sbb
out
cmp
roll
imul
jb
repnz
arpl
push
dec
push
mov
je
dec
int3
aaa
sub
sbb
and
dec
and
xor
subb
add
jg
adc
lds
repnz
fimuls
movsb
testb
xlat
movsb
inc
or
push
cmp
in
mov
daa
ret
sub
insl
xor
add
cmp
lcall
dec
out
popa
mov
fimull
dec
lahf
mov
sub
xchg
pop
out
bnd
xor
ret
adc
das
inc
in
std
push
clc
icebp
outsb
push
jg
or
pushl
flds
outsl
and
fwait
test
jo
or
popa
push
out
pop
xchg
jb
cmc
sub
dec
pop
fidivl
dec
push
gs
push
sti
jmp
sarl
out
sbb
popa
push
lea
jns
pop
lods
shlb
addl
push
es
scas
push
jmp
repnz
dec
mov
sbb
jge
fs
inc
mov
sub
sbbb
push
test
sbb
cltd
xchg
cmc
stos
cwtl
fadds
dec
inc
shrb
adc
das
into
or
jno
xlat
pop
mov
lods
xor
repnz
imul
fidivrl
mov
outsl
cmp
lock
adc
aam
inc
mov
adc
mov
mov
xchg
add
jp
stos
lahf
pop
nop
inc
pushf
add
ret
cmc
adc
adcl
add
sbb
adc
or
in
xchg
mov
xchg
push
jns
sub
jno
or
icebp
inc
fs
push
ficomps
cmp
stos
out
push
in
inc
mov
jecxz
popf
pop
sar
das
test
insb
das
mov
push
addb
sub
push
addb
cmpsl
pop
xor
mov
ret
pop
cmovge
sbb
mov
add
repnz
es
aas
or
rcrb
gs
ljmp
notl
test
inc
arpl
loope
pusha
cmp
popa
lahf
mov
mov
adc
int3
test
sbb
mov
aaa
inc
call
pusha
mov
das
inc
outsl
push
mov
and
pop
mov
rorl
push
ucomiss
mov
dec
push
sbb
xor
outsb
ret
mov
mov
insb
cmc
dec
dec
pop
mov
ljmp
mov
cli
push
popl
js
cmp
mov
pop
in
sbb
dec
mov
pop
mov
mov
fistpll
cmp
add
int3
shrl
jmp
sahf
stos
push
repz
pop
scas
aam
dec
ja
mov
cmp
mov
jl
repz
into
leave
pop
mov
pop
push
je
int
mov
mov
inc
xchg
dec
mov
out
or
aas
dec
jo
test
mov
daa
mov
mov
and
mov
push
mov
mov
and
push
xor
lods
jne
repnz
mov
inc
fdivrl
push
pop
xchg
stos
pop
shll
dec
ljmp
adc
inc
test
lea
out
aad
mov
ljmp
fsubrp
dec
or
and
fbld
mov
outsb
mov
adc
in
adc
dec
fcoms
mov
cmc
dec
jmp
mov
decl
jg
addb
inc
sbb
leave
mov
insl
sub
mov
in
out
fidivrl
push
ret
inc
add
cld
or
sub
sbb
sbb
cmpsl
jp
and
push
dec
cmp
scas
xor
out
lds
cmp
mov
mov
dec
iret
std
sarb
leave
pop
adc
lock
dec
lret
cmp
fwait
insb
mov
cli
fnstenv
sbb
xor
inc
lock
lds
push
test
int
or
mov
movsb
fldenv
cmp
add
push
add
or
inc
push
aam
dec
repnz
shll
imul
sti
sbb
mov
scas
fadds
adc
cs
pop
fidivs
add
shrl
pusha
outsb
xor
cltd
xchg
outsb
and
scas
sbb
rorl
insl
pop
out
cwtl
sub
adc
mov
dec
testl
xchg
mov
cltd
jns
mov
cmc
add
test
stc
test
imul
mov
sbb
push
sub
add
add
cmpsb
cmp
and
adcl
push
jecxz
movsl
cltd
outsb
divb
xchg
add
lods
cmp
loope
cs
scas
push
push
loope
cmp
mov
sub
dec
fdiv
adc
or
add
add
icebp
xor
adc
xchg
test
inc
cmp
jno
mov
out
loope
clc
in
mov
mov
cmp
or
nop
loope
and
push
sbb
dec
push
cmp
mov
adc
mov
xor
and
xchg
sbb
es
xchg
or
fistps
add
scas
lcall
mov
lcall
inc
dec
loop
imul
lods
mov
imul
ret
inc
pop
aad
jae
dec
fnstcw
leave
cli
push
inc
cmpsl
pusha
stc
in
mov
aaa
mov
xchg
inc
les
sbb
pop
cmp
sbb
sub
addr16
push
jl
ja
in
test
xor
xor
sub
pop
ficoms
adc
insl
push
in
cmp
sarl
mov
test
test
dec
cmp
scas
jmp
cli
dec
sbb
xchg
or
mov
outsb
in
mov
cmc
mov
add
data16
mov
aad
push
daa
pop
or
cmp
sbb
aad
and
out
push
inc
inc
bound
xlat
fidivrl
icebp
fwait
lcall
or
add
test
adc
push
adc
lcall
push
leave
insl
push
pusha
push
pop
xchg
sbb
in
push
popa
cmp
add
in
cmpsl
fs
sbb
fimull
sub
sbbb
mov
sbb
push
adc
pushf
sbb
ds
nop
mov
pop
pusha
push
cmp
mov
cwtl
and
fnstenv
inc
mov
jae
xchg
adc
cmpsb
mov
push
sbb
aad
ds
adc
filds
js
jno
xor
push
jno
push
adc
test
xor
sbb
xor
mov
jle
inc
movsb
mov
sbb
repnz
jbe
cmp
lahf
roll
pop
pop
cld
sbb
in
or
adc
hlt
movsl
pop
inc
lods
mov
inc
sbb
in
pop
stos
in
pop
scas
test
push
fildl
dec
sahf
lret
mov
pusha
dec
push
mov
xlat
cwtl
adc
cltd
mov
xchg
in
and
jg
outsl
or
or
popf
push
incb
inc
in
sub
lret
xchg
jbe
test
repnz
outsb
push
adc
mov
pusha
ds
lea
iret
sti
mov
and
mov
aam
les
sub
adc
sbbl
xchg
dec
jl
xor
xchg
cmp
and
cmc
xchg
xchg
scas
cmp
adc
mov
out
testb
std
cltd
and
push
loopne
pop
xor
jae
pop
and
hlt
ds
dec
dec
addb
imul
pop
mov
les
test
dec
mov
nop
out
lock
imul
or
stc
mov
fisubrl
jl
jno
jns
and
pop
mov
pop
out
jbe
clc
pop
xchg
xor
fildll
fidivrl
inc
mov
ds
dec
dec
sub
xchg
rcrl
fldcw
jp
call
add
rolb
int
movsb
div
pop
jns
sub
sbb
sub
in
stos
and
dec
das
xchg
dec
or
pop
push
or
xor
cwtl
adcb
xchg
sbb
roll
pop
mov
jl
mov
leave
mov
cmp
dec
test
xlat
cli
jb
mov
push
adc
je
inc
xchg
or
das
imul
sarb
mov
sbb
or
cmpsb
aam
addl
arpl
scas
testb
cmp
push
fdivp
ljmp
cmp
mov
das
push
cmpsl
icebp
xchg
mov
jmp
es
sahf
push
sub
imul
add
push
mov
imull
aad
adc
out
xor
sub
xchg
push
aaa
sub
push
imul
fists
test
xchg
and
mov
lcall
sbb
popa
fwait
pop
push
je
sbb
jnp
sub
or
lock
jo
popf
xchg
cmpsb
add
jp
adc
in
jnp
out
jae
mov
and
dec
or
cmp
and
jge
imul
and
sub
inc
and
imul
std
pop
daa
and
cli
push
add
ret
or
insl
inc
pop
cltd
lods
lret
cmpsb
push
out
sbb
outsb
mov
test
mov
out
cmp
inc
jp
sahf
dec
mov
xchg
cli
mov
sbb
in
cmpl
mov
jmp
dec
xor
hlt
ret
call
stos
shrl
mov
push
mov
sbb
mov
data16
dec
push
or
je
in
add
cmp
aam
inc
in
ds
pop
cs
fdivl
adc
cs
adc
fcomps
jno
cmp
int3
das
lret
test
mov
pop
popf
dec
repnz
jnp
add
push
aaa
mov
pop
xchg
mov
nop
mov
mov
pop
mov
cmpsl
dec
inc
ja
mov
cmp
std
jno
push
int
mov
add
sarl
xor
pop
out
popa
out
inc
cli
pop
lea
insl
lcall
pop
aam
adc
jmp
sub
lret
push
stc
dec
jbe
repz
sub
testb
insb
mov
add
loopne
decb
cmc
stc
mov
bound
mov
lds
push
push
mov
nop
adc
lods
cmpsl
scas
flds
rorl
or
hlt
push
lods
push
aad
and
cmp
lds
aam
push
pop
clc
jne
js
or
daa
dec
dec
in
sbb
xchg
sub
xchg
mov
or
jle
lret
std
add
mov
enter
and
popa
mov
stos
push
insl
mov
enter
sbb
mov
adc
out
sbb
enter
sti
sub
test
push
fcomi
mov
testl
xor
dec
xor
or
cmpsb
sbb
pop
call
ret
insl
inc
popa
add
mov
xor
pop
xlat
inc
pop
stos
sub
sbb
mov
test
sub
shll
mov
cwtl
insl
gs
xchg
xchg
and
add
lea
bound
imul
loope
lods
mov
push
mov
jae
cmp
sbb
pushf
inc
mov
add
lahf
inc
inc
mov
repz
daa
mov
mov
roll
or
shr
orb
jmp
dec
xchg
xchg
xchg
pop
cmp
cmp
lock
int
mov
mov
rorb
movlps
mov
xchg
mov
ficoml
jnp
out
pop
dec
ret
clc
mov
or
inc
lret
push
push
out
aam
inc
pop
jge
or
loop
sub
and
mov
xchg
repz
fisubrl
xchg
inc
subb
mov
fisttpll
sub
popf
inc
ds
pushf
mov
mov
lods
xor
pop
sub
and
ret
js
in
scas
iret
xchg
dec
in
push
jb
push
scas
movsb
cmpsl
adc
adc
pop
loopne
cltd
push
stos
push
cs
jo
in
fiadds
loopne
ja
shlb
stos
sbb
andl
lods
jl
jmp
sbb
adc
add
jge
lds
xchg
add
mov
pop
push
ss
inc
inc
loop
ret
dec
stc
mov
or
xor
add
pop
ja
dec
arpl
lods
jae
data16
call
push
xchg
cmp
or
popa
fistl
sbb
cltd
cmp
icebp
nop
shrl
and
add
ds
sbb
jge
and
cmp
xchg
adc
in
rclb
mov
pslld
xchg
add
fcmovnb
jecxz
ljmp
stos
lcall
aam
add
dec
lods
and
ret
loope
lcall
fisttpl
add
sbb
push
jg
out
subb
and
nop
sbb
pop
mov
scas
loop
xchg
xchg
outsl
sub
nop
xlat
xchg
xlat
ret
or
add
lods
clc
stc
xchg
mov
and
xor
mov
mov
add
pushf
stos
movsl
dec
add
mov
les
xchg
mov
mov
mulb
hlt
mov
nop
hlt
fstpt
add
xchg
pop
pop
cmc
loopne
sbb
daa
shlb
ret
jmp
jo
add
pop
fcomps
sbb
xacquire
pop
lods
or
data16
aaa
outsb
mov
sti
fsubs
pop
inc
xor
das
adc
fcom
mov
xchg
mov
and
jg
pop
adc
dec
fcmovnu
std
cli
adc
jo
push
mov
fistpl
push
data16
xor
shll
les
sbb
xchg
pop
jns
jg
popa
imul
xor
movsb
push
pop
push
mov
lock
inc
pop
and
nop
andb
mov
xor
lock
cmp
rcrl
arpl
pcmpeqw
int3
push
scas
iret
movsb
mov
cmp
div
daa
and
push
aaa
dec
pop
mov
sub
pop
mov
jae
in
pop
loope
jb
mov
xor
outsb
les
jp
fimull
adc
pop
leave
in
pop
xor
pop
das
cmp
movsl
popl
mov
ret
repnz
cmc
sub
sub
mov
mov
mov
cmp
js
cmpsb
xor
into
lods
aam
inc
out
int3
int3
lret
push
divl
pop
aas
out
push
cmpsb
push
xor
cmp
fimull
xchg
sbb
add
clc
in
call
pop
fiaddl
inc
pop
sub
push
ds
and
adc
add
pop
sbbb
sbb
mov
imul
fistps
add
shrl
enter
repz
icebp
in
in
mov
icebp
xor
rcrb
sub
dec
sarl
addb
das
outsl
je
sub
xchg
mov
and
mov
cmp
testl
sbb
xabort
dec
shrl
mov
xchg
in
scas
cli
or
pop
scas
mov
xor
negb
sar
imul
icebp
xchg
and
adc
pop
adc
imul
rolb
test
in
clc
mov
icebp
fcmovnu
xor
fsubrs
cltd
push
popa
inc
das
mov
shll
jle
push
push
ret
dec
cmpsb
add
je
loopne
addr16
push
icebp
push
xlat
aas
hlt
nop
dec
decb
fistpll
push
push
and
nop
xor
icebp
inc
dec
jp
lods
in
jne
out
pushf
pop
jo
out
inc
push
mov
jle
mov
dec
dec
xchg
inc
inc
ret
lret
leave
xchg
push
popf
daa
nop
pop
into
leave
xor
shlb
ja
sub
sub
mov
std
adc
xorl
or
in
repz
sub
hlt
addr16
and
xchg
pop
stc
test
pop
out
lds
xchg
sbb
scas
cmp
or
outsb
sbb
mov
fisttpl
sbb
movsl
fnsave
test
or
mov
xlat
jge
sub
xor
inc
subb
std
push
sub
out
cld
jb
imul
or
mov
ret
sub
mov
imul
pop
sahf
add
icebp
cli
aam
pop
xchg
xor
std
jle
ret
aas
shlb
std
xor
xor
sub
cld
arpl
add
int
and
dec
repz
rclb
gs
lods
push
lea
lea
movl
jno
loopne
nop
jae
js
push
add
or
pop
mov
lock
hlt
ret
cli
daa
mov
icebp
jge
jg
cmp
faddl
je
clc
xorl
mov
mov
jg
cwtl
xchg
pop
mov
push
cli
jne
mov
inc
outsl
not
mov
push
movsb
fimull
aam
jp
adc
leave
mull
pop
idiv
xor
mov
das
push
sbb
push
push
orb
jl
imul
stc
lods
and
jnp
jbe
mov
xor
jmp
pusha
ds
test
nop
mov
inc
mov
out
mov
jbe
mov
cmpsb
jne
cld
xorl
mov
push
in
push
sub
test
push
jp
mov
mov
loopne
add
xchg
and
mov
sub
mov
cmp
cmp
pushf
cltd
scas
outsl
or
and
and
xchg
je
shl
arpl
and
mov
xchg
scas
lds
add
in
iret
mov
mov
cmp
cmp
dec
aas
mov
push
cmpsl
je
pop
int
ds
jnp
shll
mov
in
add
cli
stos
xor
push
ss
or
add
push
popa
add
push
push
test
pushf
cmc
mov
xchg
sbb
push
mov
pop
stos
dec
inc
movsl
mov
mov
fiaddl
repnz
repz
sub
ja
fists
sub
and
mov
pop
push
inc
push
lret
add
and
setl
mov
inc
mov
jmp
mov
jp
pop
jne
push
xor
xor
rorl
mov
int3
mov
imul
push
decb
popf
inc
rorw
add
mov
int3
inc
push
out
pop
dec
pop
push
add
mov
int
stc
cmpsb
pop
sub
adc
add
adc
call
mov
cmpsl
enter
jp
hlt
jp
and
add
adc
add
pusha
int3
add
rcll
or
enter
sbb
and
cli
jl
adc
loop
jmp
fwait
call
xor
inc
shll
adcb
fcoms
adc
xlat
mov
out
andb
in
lods
sub
xlat
fwait
and
adc
mov
test
sbb
in
xchg
inc
xchg
repz
sub
loope
cld
adc
jl
add
pop
jmp
aam
hlt
js
insb
scas
jecxz
idivl
imul
push
jmp
xor
cmp
inc
adc
sub
daa
rcr
aad
ljmp
iret
pop
in
push
push
xchg
out
imul
stos
orl
inc
leave
sbb
push
jmp
xchg
addr16
jmp
test
push
les
sub
push
cmp
lahf
mov
xor
int
into
sbb
cmp
xrelease
jns
mov
mov
inc
fnstsw
inc
lret
sarl
sbb
stos
pop
or
in
stos
ljmp
and
and
pop
pop
sbb
mov
dec
sahf
sbb
es
out
ja
dec
in
clc
popf
addb
pop
mov
daa
dec
pop
jge
nop
mov
test
out
pop
sub
shll
scas
fwait
dec
fdivrs
push
lods
lret
push
dec
mov
shlb
pop
sub
mov
adc
leave
jp
cmpb
xchg
or
cmpsl
jmp
cld
sbbb
in
inc
xchg
ret
add
clc
sub
fs
test
add
push
sahf
lret
and
add
mov
push
mov
test
or
mov
in
add
fsubs
outsl
cli
jae
pusha
mov
insb
addr16
pop
inc
mov
cld
test
out
popa
gs
fwait
mov
cmp
outsb
jecxz
sub
es
sub
jmp
mov
lret
mov
cli
lods
pop
inc
lea
int
stc
mov
lret
xor
jns
not
repz
pop
imul
dec
pushf
ss
dec
inc
addr16
xor
cmp
imul
push
sahf
shll
out
outsb
xor
stos
xorl
pushf
lock
mov
mov
jne
inc
inc
push
addr16
fsubl
mov
enter
pop
mov
pushf
adc
sbb
imul
xlat
test
jle
fnstsw
insl
jg
cmpsl
dec
sub
pop
adc
in
out
lret
test
adc
aad
bound
mov
scas
cmp
in
and
pusha
loope
addr16
xchg
aam
push
imul
addb
arpl
out
dec
ucomiss
shlb
scas
inc
inc
fbstp
ljmp
xchg
push
lods
icebp
in
mov
sahf
cli
loop
dec
fwait
roll
movsb
mov
subl
mov
cmpb
jne
cmp
repz
xor
xor
dec
or
loopne
add
icebp
mov
mov
jno
jmp
jle
cmp
cwtl
fstpl
and
loopne
insb
movsl
push
int
fucomp
repz
xchg
xchg
push
mov
out
cld
mov
sub
dec
scas
or
jmp
dec
lret
push
push
xchg
fwait
cmp
adc
mov
sub
add
dec
iret
imul
movsb
dec
into
cmp
test
pop
addr16
add
rolb
out
mov
or
scas
xchg
pop
cmp
dec
add
rcrl
lcall
dec
subb
fdivl
cmp
repnz
mov
sub
aas
rolb
xor
inc
add
out
outsl
or
mov
mov
jb
xchg
pop
and
stos
bound
test
test
jne
xchg
jne
into
arpl
inc
or
fwait
lcall
out
daa
xchg
jns
ret
mov
mov
mov
cld
das
sub
pushf
push
xor
lahf
cmp
div
fistps
mov
inc
mov
mov
scas
fcmovb
adc
inc
movsl
cli
dec
push
aam
add
xchg
call
inc
dec
inc
inc
sti
xchg
loop
pop
xchg
xchg
je
dec
das
and
jl
out
cmpsl
and
add
mov
inc
mov
or
movsb
loope
idivl
xchg
mov
sub
pusha
cmp
lcall
xchg
sbb
lcall
jmp
js
imul
pop
sbb
or
stos
je
push
out
or
movsb
jns
push
ret
cmp
notb
sarb
mov
scas
cwtl
or
testb
push
aaa
test
dec
sub
out
push
jns
push
mov
jmp
loopne
fst
cmc
xorl
xchg
add
sub
push
rorb
sti
ja
fsincos
out
test
mov
outsb
pop
scas
loopne
push
dec
mov
mov
ret
push
mov
pop
std
xchg
pusha
inc
ror
fldenv
add
or
sbb
jl
nop
jns
cs
sub
bound
ljmp
push
cwtl
popa
sub
in
mov
mov
inc
insb
push
cmc
ficomps
inc
inc
sbbb
mov
adc
cmp
dec
jl
xor
or
out
xor
adc
and
cmp
shufps
mov
jge
inc
sub
inc
push
popf
mov
inc
xchg
inc
lods
or
ret
sti
cmpsl
mov
pop
lods
test
jae
pop
jg
in
sbb
jp
add
adc
mov
mov
cmp
fs
cs
pop
ret
lret
ret
cmp
mov
xlat
mov
leave
es
mov
lahf
mov
stos
sbb
mov
fbld
cltd
sbb
xchg
jl
jo
inc
daa
inc
int3
into
dec
scas
shrl
fwait
in
pop
test
pop
icebp
push
or
cwtl
fnstenv
mov
jbe
pop
push
testb
and
int
adc
pop
je
xchg
inc
in
xor
mov
outsl
gs
push
and
sub
cmc
sarb
sar
jns
aad
jp
mov
loop
and
adc
into
add
fneni(8087
jb
mov
nop
push
xchg
and
xchg
inc
fisubl
mov
daa
call
and
sbb
xor
dec
bound
sbbl
xchg
icebp
sub
test
xor
inc
cmc
jg
mov
mov
and
cmp
adcl
stos
loopnew
lods
sub
jo
clc
enter
fists
mulb
pushf
pusha
neg
movsl
inc
cmp
testb
lret
sbb
fs
hlt
fcoml
les
mov
mov
call
pusha
dec
lea
or
lahf
sbb
call
xchg
xor
xchg
add
adc
jbe
push
sti
cmp
xchg
pusha
add
enter
lock
and
xchg
jmp
xchg
insl
or
and
data16
add
movsl
mov
push
out
sub
ret
dec
outsb
xchg
dec
push
add
cli
pop
push
stos
nop
add
loope
in
into
mov
add
je
mov
cmp
pop
test
and
jno
je
jnp
stos
xchg
cmp
fdivs
inc
or
jns
lcall
cltd
xlat
mov
and
pop
cmpsl
movsl
fdivp
mov
adc
popf
sbb
jns
sbb
mov
and
push
push
lods
jb
outsl
push
pop
xchg
ret
bound
ss
mov
scas
pop
in
adc
or
mov
xor
lcall
push
adc
jbe
xchg
outsl
faddp
lock
aam
xor
iret
or
cmpl
mov
enter
inc
enter
aas
pop
jle
or
sub
test
aad
jcxz
mov
mov
daa
adc
lret
mov
das
imul
jle
aam
sahf
and
in
dec
insb
pop
fdivrl
rcl
mov
xor
imul
push
adc
dec
rolb
outsl
sub
mov
or
xor
mov
and
mov
dec
rorl
or
pop
aad
loop
cmp
pop
and
mov
in
jb
mov
loop
repz
out
lret
mov
mov
jnp
js
mov
aam
add
mov
cld
inc
call
mov
shll
xor
mov
imul
add
lea
decl
dec
pushf
rcrl
sarb
lret
xor
mov
imul
mov
inc
jle
dec
outsb
ja
adc
pop
cli
push
fimuls
push
and
fmul
sahf
rorb
sar
ss
fs
das
cmc
ficoms
fs
mov
cmp
sub
dec
testl
pop
bound
mov
ror
or
clc
sub
push
mov
addr16
dec
nop
pusha
cmpsb
mov
sub
and
out
fdivl
pop
mov
ret
mov
in
sbb
xchg
pop
leave
aam
pop
sahf
daa
add
cmp
cld
daa
out
aam
aas
push
ds
push
mov
out
in
outsl
sub
ffreep
filds
cmp
xchg
add
pop
push
push
xchg
scas
pop
cltd
add
jo
xor
jg
movsl
fcom
and
push
dec
jne
mov
mov
out
mov
fmul
clc
int
push
js
movsb
test
pusha
out
cld
scas
imul
cmp
mov
mov
pop
mov
pop
add
inc
pop
cmp
std
sarl
test
les
cld
add
stc
mov
mov
lea
into
jl
push
inc
jmp
pop
popa
dec
push
das
jae
jno
xor
dec
jmp
cmp
or
cli
enter
bound
sub
cs
mov
adc
and
loopne
lret
mov
mov
sti
pusha
jmp
pop
fsubr
loop
jp
xchg
or
addr16
outsl
pop
fwait
stos
xlat
xchg
data16
xor
sub
xor
das
pop
mov
decl
fistpll
aaa
mov
rol
dec
dec
or
fs
sbb
movsb
jnp
xor
cmp
cmp
inc
sub
aas
dec
cmpsl
add
daa
popa
fidivl
div
adc
je
hlt
push
cmp
pushf
pop
push
cmpl
or
jae
cwtl
das
cmpsb
insb
fmuls
ds
loope
mov
fcompl
in
lcall
sub
mov
mov
cmp
sub
or
nop
cmpxchg
add
lahf
add
mov
push
lds
test
stos
cmp
jne
cmpsl
sti
push
push
mov
dec
mov
cmpsl
out
xlat
inc
fistpll
xor
xchg
repnz
shll
dec
xor
test
mov
xchg
xchg
dec
ss
add
jnp
shl
hlt
sub
cmp
mov
xorl
jle
add
test
bswap
insl
aam
mov
stos
test
adc
mov
mov
inc
fwait
add
jbe
xor
in
int
shrb
inc
pop
loopne
mov
fsubs
adc
add
cmp
enter
ja
xchg
xchg
pop
xor
mul
shlb
cli
cltd
into
repnz
ja
mov
enter
mov
jae
and
pushf
jno
jno,pn
cli
bound
lret
inc
pop
aam
movq
loop
inc
xor
add
mov
inc
sbb
pop
mov
inc
or
out
add
jecxz
and
cmpb
jae
notl
lods
jae
xchg
mov
imul
bound
cmpsl
push
jnp
lret
loop
mov
shlb
inc
ljmp
test
mov
sub
stos
xchg
test
mov
leave
xor
iret
out
sbbb
add
jae
or
inc
dec
jne
mov
dec
adc
and
punpckhbw
inc
or
adc
insl
add
movl
stc
xchg
push
cmp
in
mov
cwtl
out
cmp
testl
mov
mov
xchg
fwait
js
adc
aad
push
jle
shrl
xor
sub
insl
bound
adc
test
pop
sahf
imul
xor
lods
add
movsl
sub
insb
in
pop
dec
and
xor
jne
xchg
lahf
shrb
xor
test
xchg
scas
aam
jmp
mov
sub
xchg
ljmp
sti
int3
sbb
mov
ds
mov
bound
std
sbb
sub
jmp
mov
outsb
rorb
xlat
divb
rcrl
lock
dec
shll
xor
xchg
sbb
or
jne
lret
xor
push
jae
stos
cwtl
cmp
xor
stos
test
test
mov
mov
sub
dec
shll
push
mov
enter
cli
sarl
or
stos
int3
jle
pop
repz
jg
pusha
jns
push
jbe
imul
in
imul
xor
mov
adc
cld
dec
mov
or
shlb
fwait
or
scas
loop
shrl
mov
enter
cmpsb
pop
xlat
mov
inc
je
xchg
or
int
or
stc
jge
mov
adc
add
push
lahf
or
sbb
repnz
push
mov
mov
ja
or
pusha
in
cmpsl
xlat
shrl
shlb
lahf
daa
sbb
pop
mov
fs
adc
lret
and
iret
add
lds
pop
div
cli
push
aaa
xlat
enter
lock
int3
push
in
xor
fidivl
movsl
out
inc
mov
lret
stc
add
outsb
pop
adc
xor
int
mov
mov
push
aaa
adc
hlt
push
cli
and
cltd
adc
pop
movsb
iret
sub
test
pop
sti
out
loop
aas
insb
sub
sahf
idivl
dec
pop
xor
ret
sub
mov
jbe
roll
mov
add
mov
test
out
inc
adc
sub
sub
stc
je
jbe
jne
iret
sub
pusha
imul
aaa
scas
popf
int3
fucomip
fcmovbe
jns
mov
mov
or
mov
or
ret
aam
cmp
rcrl
adc
dec
inc
lcall
pop
cli
push
push
sub
sbb
push
popf
int
rcrb
jge
nop
testb
xchg
or
int
xchg
in
sub
sub
cmp
add
in
sbb
or
shlb
push
inc
push
inc
in
and
je
sahf
jge
cmpsb
mov
or
mov
cwtl
out
lods
jo
and
out
gs
mov
cli
cmp
jp
pop
fidivs
mov
lock
insb
fdivl
xlat
mov
int3
inc
ja
mov
in
ficoml
jne
imul
or
sahf
in
xchg
dec
jge
or
icebp
and
mov
lcall
pop
ljmp
ds
mov
cmpsl
mov
lds
aas
sbb
leave
out
inc
call
push
push
icebp
test
cmp
push
es
mov
cmp
jne
je
mov
and
sub
in
cmpsb
mov
xor
xor
mov
and
or
lahf
jg
inc
mov
adc
inc
mov
jae
cli
cmp
in
mulb
and
pop
ja
xor
dec
shlb
mov
push
inc
lea
mov
inc
inc
leave
sbb
cmp
or
insl
rcll
push
jbe
mov
sub
jmp
mov
lcall
jae
cmp
out
dec
mov
scas
scas
push
inc
arpl
andl
push
mov
aaa
push
loopne
mov
fcoml
inc
test
imul
insl
cmpl
imul
rcrb
ja
cmp
push
lsl
pop
mov
jecxz
das
repz
pop
mov
push
pushf
push
cmp
stos
sbb
in
dec
cmp
jno
aam
shlb
cli
mov
cmp
add
cmc
dec
sub
nop
out
and
clc
clc
int3
cmp
pop
fcompl
xchg
lds
add
jno
cwtl
pop
pop
mov
add
or
and
repz
shl
mull
adc
das
or
xchg
rcr
out
push
stos
or
out
mov
ds
pop
es
aas
notb
scas
dec
push
mov
xchg
pop
mov
mov
inc
push
loop
mov
xorl
mov
in
lock
enter
and
insl
inc
adc
stos
int
fwait
pop
xor
xor
movsl
dec
push
jle
ds
and
cmpsb
jno
pop
inc
push
jge
loop
jmp
lods
or
ficoml
inc
mov
sub
lock
inc
inc
mov
pop
inc
jecxz
and
xchg
sub
add
ja
mul
imul
cmpb
jle
push
xor
mov
push
rorl
add
sbb
jno
sti
in
xchg
cmp
out
cld
test
mov
popa
jae
or
stos
xchg
nop
push
jle
jmp
inc
inc
sbb
stc
jne
jl
shr
int
push
lahf
push
ffree
inc
out
test
mov
rol
nop
fists
mov
andb
xchg
std
dec
mov
push
js
sbb
and
out
lods
insl
jmp
inc
sbb
lret
xchg
test
aad
jne
fmuls
in
notl
repnz
push
dec
add
enter
js
inc
push
push
or
out
or
dec
mov
jb
test
ljmp
loopne
loopne
cmp
loop
mov
adc
sti
xchg
addl
sbb
sbb
add
pushf
add
mov
xlat
push
push
sub
xor
cmc
fadd
mov
loopne
fbld
add
mov
mov
dec
adc
aam
ljmp
dec
fwait
pop
cmpsb
cs
aad
lret
jmp
pop
add
int
pop
cmpsb
cmp
das
mov
neg
lds
scas
sbb
add
mov
inc
xchg
dec
cmp
aam
pop
stc
cmp
les
pop
pop
or
xchg
or
jp
cltd
or
pop
lods
ds
pop
push
test
leave
hlt
test
mov
mov
stos
es
shlb
mov
xor
add
dec
xchg
push
inc
fsubr
sbbb
aaa
cld
push
jb
xor
pushf
mov
and
mov
cmp
add
insb
pop
dec
out
sbb
jae
jp
mov
mov
rcr
adc
adc
cmpsb
pusha
shlb
jmp
add
adc
or
lock
mov
pop
inc
int3
ja
popa
lock
pop
mov
push
std
cmp
lds
cli
fs
sarl
sti
lcall
por
mov
mov
inc
dec
sub
mov
sbb
or
xor
jb
imul
sbb
aaa
fisubs
pop
push
out
push
arpl
push
inc
mov
stos
loopne
mov
push
fdivs
shr
jp
cmp
addr16
mov
sahf
sub
sbb
lea
lret
dec
lds
addl
cmp
cmpsl
push
sahf
mov
mov
xor
in
mov
pop
push
cld
push
sub
mov
test
pop
pushl
fldl
push
lahf
xchg
clc
jmp
mov
inc
or
jne
fsubrp
mov
sub
inc
das
cmp
daa
pop
add
and
xor
shrl
stc
mov
test
cwtl
aad
sbb
loop
sbb
dec
jns
cltd
out
sbb
stos
pusha
add
push
sbb
pop
aas
sbb
shll
adc
cmp
dec
sbb
fcompl
lods
stc
sbb
orl
adc
out
jp
int3
in
pusha
shlb
push
cmp
push
mov
mov
scas
xor
jno
rcrb
shrl
cld
jp
inc
scas
xchg
sbb
outsl
out
mov
lahf
stos
add
mov
popf
pop
or
insl
jb
shrl
push
adc
clc
dec
add
repz
int3
ja
mov
add
cmp
dec
and
pop
cld
das
jne
pop
dec
mov
xchg
das
cli
sub
lret
push
fstps
dec
sub
cwtl
lock
test
wrmsr
cwtl
and
pop
cmpsl
fnstenv
and
hlt
cmpsl
pop
mov
in
sub
inc
jno
int
pop
add
add
and
jmp
push
mov
std
jo
lret
jle
pop
cmpsl
sahf
mov
lret
loop
insl
loop
cmp
rep
xchg
enter
repnz
pop
rclb
repnz
jns
xor
fsubs
imul
call
scas
or
negl
lea
xor
cmpps
testb
mov
jl
cmpsb
stc
sbb
pushf
push
jmp
sub
lcall
into
xchg
loop
jl
loope
jo
int
incb
push
icebp
fwait
jl
xor
cld
mov
mov
inc
add
jle
or
mov
sti
or
mov
mov
test
mov
xchg
jb
mov
adc
pop
pop
xchg
lahf
cwtl
sbb
ss
jnp
add
dec
jg
stos
mov
add
pop
xchg
loopne
inc
and
adc
jge
push
test
fisttps
pop
sti
sub
ss
pop
out
pop
xchg
das
mov
pop
xor
movsl
cli
or
jecxz
cli
push
sub
dec
lcall
inc
xchg
sub
inc
mov
push
pop
aas
cmp
or
or
jbe
mov
repnz
adc
add
lcall
clc
fildl
pop
mov
mov
lds
movsb
dec
clc
push
fstpt
push
js
xchg
lret
cmpsb
aam
lret
test
fwait
in
sbb
add
cmp
insb
lea
neg
xorb
lret
xor
inc
popf
popa
cli
mov
int3
fidivrs
cmp
add
jecxz
sub
in
jae
mov
arpl
mov
or
and
xor
xchg
fisubrl
cmp
and
fisubrl
sar
push
push
ret
movsl
movl
dec
sbb
or
pop
imul
xchg
icebp
mov
jecxz
dec
mov
mov
jge
pop
call
xor
adc
jae
dec
jns
dec
xor
and
jns
iret
orb
cmp
push
mov
push
dec
or
cs
shlb
push
ss
xor
je
xchg
rol
dec
mov
mov
movsb
pop
sub
popl
xor
lret
dec
in
adc
scas
out
cmp
pop
and
push
push
dec
pop
pop
test
aad
adc
xor
dec
or
pusha
mov
es
push
leave
aad
movsb
mov
push
das
imul
repnz
mov
pop
inc
pop
fisttpll
imul
mov
cmc
popf
or
sahf
js
stos
pop
daa
cmp
jbe
out
mov
mov
cs
and
sub
inc
ljmp
notl
adc
mov
cmp
mov
pop
stos
jecxz
mov
daa
cmp
and
sbb
loope
out
inc
hlt
shl
sahf
ja
loop
sbbl
xchg
rolb
inc
sbb
sub
dec
ss
movb
test
push
adc
pop
lret
and
in
ds
arpl
and
das
sub
outsl
jne
jle
testb
iret
cmp
lcall
push
lret
dec
mov
jp
scas
jbe
jne
shll
faddp
dec
jge
mov
mov
adc
adc
rorl
outsb
in
or
addl
inc
push
fwait
ror
sbb
mov
inc
enter
out
cmp
dec
cmp
inc
sti
iret
js
leave
push
dec
dec
cld
and
mov
jbe
mov
std
insb
into
scas
cmc
mov
nop
jnp
push
and
xor
and
mov
pop
mov
lahf
repnz
inc
in
loope
lock
scas
push
adc
dec
cmp
push
cmp
mov
xlat
inc
jg
or
dec
mov
cmpsb
dec
mov
cli
inc
mov
push
call
jecxz
lods
xor
dec
pop
subl
es
and
dec
gs
cmp
dec
cmc
push
jge
inc
insb
aad
sbb
out
cwtl
mov
add
ret
mov
shrb
mov
movsb
xor
fwait
or
dec
ss
std
roll
into
loop
aad
daa
mov
out
out
xchg
dec
mov
repz
stc
fnsave
xor
stos
xor
xlat
iret
push
jns
inc
fldt
jnp
pop
movb
sarb
call
add
pop
jmp
inc
jecxz
cmp
cld
adc
push
fbstp
aas
pop
lods
push
xchg
mov
mov
sbb
nop
xlat
mov
les
adc
cmp
ss
xor
push
imul
call
testb
push
pop
stos
sub
mov
push
add
addr16
dec
mov
ljmp
push
ret
js
cld
shlb
jl
xchg
cmp
mov
xor
or
mov
cld
jge
or
cld
cmp
repnz
pop
dec
faddl
mov
mov
jge
in
fidivrl
cwtl
pop
repnz
or
or
dec
sbb
out
or
push
mov
sbb
xchg
dec
shrb
dec
int3
xor
in
mov
push
jbe
out
lods
pop
lcall
dec
ss
mov
mov
fstl
push
cld
xchg
scas
add
or
pop
pop
movsb
fstpl
add
icebp
aam
sbb
push
pop
adc
lcall
cmp
add
or
xchg
lahf
ljmp
push
adc
mov
mov
jg
xchg
cmp
mov
push
push
mov
ja
jne
stos
pop
js
adc
sbb
arpl
ds
xchg
add
jne
lret
push
or
and
xlat
mov
push
ds
xchg
sub
add
mov
fimuls
sbb
shrb
into
loop
popa
or
subl
pusha
pusha
sti
mov
add
sub
xchg
arpl
xchg
push
push
xor
jns
stos
movl
xchg
stc
adc
lcall
xor
pop
fs
movsl
in
test
fwait
jns
imul
gs
mov
jp
sbb
sub
jno
mov
xchg
xchg
lea
call
arpl
mov
cmp
jg
push
push
in
scas
mov
fxam
mov
pushl
mov
mov
or
idiv
push
inc
sub
and
mov
adc
insl
test
leave
bound
push
jp
iret
in
mov
and
outsl
lods
cmpsl
repnz
and
into
push
and
lret
sub
pop
ja
scas
hlt
lods
sahf
loopne
aad
out
xchg
mov
data16
or
or
test
push
scas
leave
xchg
loop
mov
mov
sub
mov
pop
pop
pop
push
cmpsl
stc
mov
test
or
punpckldq
xor
mov
lea
jmp
out
dec
daa
jle
xchg
movsb
mov
cmpsb
push
mov
fcomps
jbe
fst
fidivs
or
sti
pop
cmpsb
daa
sahf
daa
xchg
outsb
sbbb
xor
nop
jg
xchg
hlt
fwait
jp
or
dec
orl
dec
insb
scas
repnz
or
divb
fstpt
shlb
lcall
std
and
lret
sub
pop
cmp
pop
xchg
push
rol
ds
test
out
xchg
mov
push
neg
js
mov
in
insb
sub
cmp
sahf
jnp
sbb
mov
leave
inc
repnz
inc
es
outsl
pop
push
adc
or
ret
shr
mov
and
pop
out
jle
lock
iret
dec
stc
lods
sbb
inc
pop
outsb
push
ficoms
push
xchg
add
mov
mov
cmpl
xchg
mov
mov
jp
in
jmp
mov
adc
test
and
cmp
sahf
mov
jnp
ret
push
pop
repnz
jno
test
mov
and
out
and
in
mov
jg
pop
data16
mov
sbb
mov
add
mov
sbb
or
pop
pop
out
xchg
cs
in
pop
xor
cmpb
cli
int3
nop
pop
vsqrtpd
imull
push
adc
clc
bound
or
test
add
sub
adc
aam
mov
cwtl
jmp
and
in
test
lods
popf
inc
cmp
aad
outsb
push
lock
cmp
out
pop
dec
sti
test
movsl
shll
xchg
repz
jg
xchg
js
adc
lds
sub
dec
xor
sti
clc
ffreep
cmp
mov
mov
ret
dec
xor
ljmp
sbb
pushl
push
int3
jo
jp
int
imul
adc
add
cmp
dec
cmc
jmp
fcoml
and
xchg
inc
call
sbb
jle
jle
or
in
lods
jns
aad
push
scas
or
adcb
popa
idivl
adc
sub
mov
mov
stos
inc
xchg
lea
mov
xor
jb
push
mov
or
shr
testb
ret
out
mov
pop
mov
sub
subl
jae
fldl
cmp
ret
or
jne
push
add
in
sti
adc
pusha
movsl
repnz
cmp
insb
jl
cmpsl
inc
nop
in
inc
dec
xor
or
xchg
pop
fwait
mov
xor
divl
and
ja
rolb
pop
aam
icebp
inc
xchg
cld
dec
loope
in
xchg
mov
and
sti
xor
add
push
jge
ss
out
popa
cwtl
pop
pusha
jmp
lret
dec
ret
bound
adc
aad
adc
insb
shlb
mov
inc
shlb
add
rorb
inc
test
or
pop
lock
icebp
scas
and
cwtl
hlt
jnp
imul
inc
ficompl
pop
push
test
push
cmp
clc
insl
addb
daa
fistpll
cld
push
lcall
add
mov
cld
fidivrl
or
xor
les
into
ficompl
mov
lods
sub
fbld
mov
jmp
int
mov
add
enter
into
pusha
jne
repz
push
scas
add
and
pop
sbb
out
mov
dec
outsb
push
popa
sub
sahf
jo
inc
dec
icebp
fs
push
pop
pusha
cmp
outsb
push
lock
lds
cmp
dec
movsb
aas
sbb
stc
scas
stos
add
ficoms
clc
mov
repnz
movsl
jecxz
dec
push
mov
and
xor
push
jns
push
stc
cmpsb
xchg
lret
pop
mov
lods
mov
jle
lods
fcoms
adc
add
hlt
fsubrl
testl
mov
iret
fcomps
movsl
leave
push
add
test
xor
adc
or
push
leave
stc
xor
mov
xchg
add
sbb
pop
xlat
xorb
scas
cli
xor
and
scas
scas
lock
pop
sahf
lahf
add
repz
std
jbe
aam
pushl
xor
lock
roll
xor
cltd
out
push
mov
push
push
lret
add
xor
int3
push
lock
jp
orb
pop
shll
xchg
gs
mov
lcall
aam
adc
lds
stc
cld
aad
fdivrl
xchg
xor
ds
cmp
sub
out
mov
pop
shr
lcall
add
adc
dec
into
int
xchg
js
mov
test
cmp
nop
ds
jae
fdivl
repz
out
cmp
popl
jg
jbe
inc
cmc
jg
mov
dec
xchg
push
fs
ds
cmpsb
in
call
dec
ja
loopne
lea
clc
push
stos
mov
and
push
lods
mov
jo
pop
out
stos
shlb
insb
je
ret
insb
mov
mov
pop
mov
divl
lods
jne
arpl
icebp
into
shlb
xchg
lock
cmp
addr16
sarb
dec
mov
shll
addr16
dec
movsb
hlt
test
push
and
sbb
inc
push
mov
or
fst
out
inc
or
mov
nop
mov
loop
fldcw
testb
lods
into
add
movsb
imull
in
jmp
dec
jns
add
rcl
in
pop
mov
ret
dec
or
movsb
and
pop
mov
push
rclb
jp
dec
and
popl
scas
xchg
jl
mov
cld
fmuls
imul
popf
rorl
sbbb
inc
fisubs
lods
pop
aaa
pop
mov
and
lret
sbb
xor
xchg
adc
adc
add
jp
mov
leave
jne
mov
push
xchg
mov
push
mov
push
arpl
loopne
stc
sbb
les
repz
pushf
jae
mov
fcoml
or
pop
das
int
in
push
jecxz
and
test
gs
jmp
scas
add
popa
pushf
test
scas
subl
lcall
add
jbe
and
add
sbbl
mul
cwtl
or
stos
jb
dec
mov
sub
aad
shrl
cmovp
out
mull
cli
mov
sti
mov
rolb
pop
ret
jecxz
or
std
sub
jae
push
fstpl
imul
std
mov
add
mov
out
push
outsl
rclb
sub
push
adc
jmp
inc
mov
add
mov
out
jl
sub
fs
sbb
stos
stos
cmpsb
lret
jo
rolb
subl
inc
icebp
inc
pop
fdivrs
call
jp
test
loopne
ret
cmp
iret
add
adc
rdpmc
js
lcall
dec
xchg
xchg
and
rcr
inc
loopne
nop
adc
pop
loope
sbb
xchg
jg
imul
sub
inc
sbb
mov
les
loope
das
or
fisttps
pop
cli
xor
pop
inc
xchg
fcoms
mov
pop
neg
jge
lods
fwait
aad
push
les
fprem1
jl
adc
in
mov
test
adcl
mov
jbe
mov
and
jns
fwait
pushf
mov
mov
cmc
dec
push
or
cs
mov
subl
xchg
adc
movsb
fdivp
jo
dec
push
aad
out
fisttpll
imulb
fwait
movsb
sub
loop
xchg
daa
push
inc
xor
mov
sti
pop
mov
in
jne
cmp
mov
movsl
push
mov
out
aas
in
xor
push
movsl
adc
ljmp
cli
jne
dec
mov
movsb
clc
add
push
lods
cs
and
mov
push
lcall
bound
cmp
dec
cmp
jns
xor
loope
push
mov
js
pop
ds
lods
inc
push
and
jg
into
xor
daa
int
jle
lods
mov
inc
enter
ja
mov
test
repnz
lods
pushf
mov
mov
sahf
aad
xor
add
enter
or
cmpsb
sahf
in
jno
sbb
mov
call
push
in
sbbl
xor
mov
leave
lods
pop
mov
int
out
call
inc
addl
je
dec
inc
mov
fs
xor
pushf
imul
test
ja
cli
nop
pop
test
dec
dec
icebp
cmp
jbe
dec
aaa
out
jge
stos
into
jg
aad
int
xchg
into
cwtl
out
mov
fisubrs
mov
outsl
ret
fldt
js
cmp
push
int3
cmpsb
shlb
insb
push
xchg
fwait
jns
mov
stos
jg
mov
pop
sub
lds
inc
scas
andb
jae
test
std
sbb
push
xchg
adc
aaa
push
mov
pop
lcall
add
jmp
outsb
loop
xor
mov
popf
test
mov
stos
dec
or
mov
add
push
test
insl
enter
sbb
int
inc
cli
shrb
stc
ss
pop
and
xchg
lret
addr16
push
movsb
dec
es
sbb
pop
aaa
fildll
mov
repnz
push
arpl
push
pop
add
adc
dec
sub
dec
pop
roll
adcl
les
pop
cli
dec
xchg
sub
cmp
adc
ret
and
mov
add
dec
push
push
mov
pop
and
test
scas
mov
bound
sub
cmp
ret
outsl
iret
xlat
lcall
rorl
mov
mov
out
mov
rcr
sub
mov
jmp
sub
jbe
clc
lahf
sub
adc
dec
aas
rcr
inc
cld
js
dec
sbb
add
add
mov
out
pop
sarl
sti
in
insb
shrb
pop
pop
ds
dec
das
movzbl
lods
movsb
aam
xchg
jno,pt
push
addl
aas
xlat
sbb
xor
shrl
insb
sahf
push
roll
fisttps
dec
sbb
and
lcall
or
aaa
cmpsb
lcall
mov
and
idivb
xor
in
out
cmp
push
xlat
push
aaa
cld
adc
push
scas
or
in
mov
push
bound
sub
leave
incb
and
addr16
sbb
push
jbe
and
push
cmp
imul
or
xorl
mov
mov
sub
out
scas
cmp
mov
mov
je
cwtl
mov
add
sbb
dec
jmp
mov
jp
pusha
test
jmp
fs
loop
and
das
dec
dec
dec
test
jecxz
in
sbb
data16
bound
sarb
push
xchg
outsl
jle
mov
popf
adc
sbb
dec
xchg
push
mov
dec
xchg
jne
lret
outsb
sub
mov
inc
xchg
lock
xlat
add
cmpl
pop
fwait
pop
outsl
cmp
mov
or
int3
addr16
cmp
dec
out
mov
push
lods
pop
xchg
sub
outsb
jb
xchg
pop
lock
add
adc
shll
cmp
sub
fcoml
mov
sbb
push
mov
mov
and
js
adc
cwtl
jl
xchg
arpl
xchg
loope
and
jmp
test
and
scas
mov
sti
jnp
ss
or
aaa
mov
mov
fs
movsb
pshufw
cmp
add
scas
das
rcrl
pop
mov
pusha
inc
mov
shll
jns
addr16
inc
mov
xchg
push
popf
idivb
imul
pop
mov
repnz
jp
add
fcomps
fcmovbe
cld
adcl
mov
inc
jne
mov
mov
mov
sbb
dec
jecxz
dec
or
mov
xchg
enter
push
and
mov
sub
pop
xor
sbb
outsl
incb
xor
cmp
xchg
fidivrl
nop
popa
daa
mov
pop
mov
negl
cs
or
aad
cwtl
xor
data16
call
ss
inc
sub
sbb
add
mov
or
sbbl
mov
or
push
jge
imul
shll
pusha
sub
xlat
jns
jne
ss
add
incl
cmp
arpl
pop
jecxz
sub
lock
ss
aam
push
adc
in
or
push
daa
push
fadds
leave
mov
cmp
and
fisubrs
inc
jecxz
jmp
dec
xchg
mov
enter
or
mov
cmpb
adc
push
mov
gs
divl
sbb
sti
jmp
xchg
shrl
repnz
dec
repnz
scas
or
int
mov
and
ss
mov
jne
in
inc
repz
mov
adc
arpl
xchg
outsb
mov
add
pop
and
jne,pt
cmp
pop
fs
movsb
add
sbb
pop
xor
sbb
push
call
std
test
mov
inc
popf
xchg
mov
inc
out
mov
xor
mov
push
das
xchg
arpl
data16
pop
mov
or
sub
popf
stc
inc
outsb
mov
xchg
in
pop
outsl
adc
mov
nop
pop
das
loope
or
mov
sti
loope
out
mov
mov
add
mov
push
stos
hlt
in
int3
xor
dec
lret
sti
popa
mov
in
sbb
cmp
adcl
mov
or
or
int3
adc
pop
or
clc
jo
push
movsl
daa
lcall
lret
cld
dec
and
dec
ja
pop
adc
aaa
cld
std
mov
lods
idiv
outsb
add
cmp
adc
mov
and
mov
aam
and
je
cmpl
push
adc
lahf
ss
jbe
das
push
push
cmp
push
inc
pop
inc
repz
cmp
xor
scas
xorl
call
add
out
mov
js
mov
fmull
push
dec
seta
ds
xor
cmp
addr16
mov
mov
push
fimuls
add
cltd
sti
adc
loope
aaa
mov
mov
jg
sarb
arpl
pushf
lahf
cwtl
into
dec
psllq
aam
push
rorb
mov
or
call
fdivrl
inc
or
nop
movsb
jmp
push
gs
cmc
sbb
lret
cmp
cltd
mov
insl
ret
rorb
mov
cmp
adc
enter
push
movsl
int
adc
mov
fidivs
adc
fucomi
addl
push
lcall
sahf
call
xor
mov
pop
fadd
push
xchg
sub
jo
jle
stos
add
push
icebp
into
lret
aaa
popf
imul
jnp
push
push
imul
fwait
lds
or
inc
jp
cli
inc
inc
or
mov
cmpsb
push
into
addb
push
mov
xchg
mov
cs
das
mov
adc
orps
inc
sbb
cmp
andb
sbb
jp
and
jo
mov
test
ret
mov
xchg
jg
mov
mov
cwtl
fcomps
ss
stc
pop
daa
cwtl
and
int3
add
fisubrl
push
mov
movsb
outsl
cmp
jmp
mov
dec
imul
jmp
lret
cmp
xchg
das
mov
and
mov
sbb
ret
rcl
cmp
dec
sti
xchg
and
push
or
cltd
dec
rolb
mov
inc
pop
jmp
mov
sbb
loope
pop
adc
adc
fcmovb
ficomps
xchg
scas
jge
rolb
fnstcw
jbe
adc
pop
les
mov
sbb
addb
sbb
inc
fldl
mov
in
xor
xchg
adc
or
adc
aas
leave
jl
jle
loop
roll
jecxz
in
in
xlat
ss
lcall
gs
aaa
popf
and
int
ret
mov
test
addr16
jle
popa
loopne
dec
out
popf
adc
fisttpl
and
jns
popa
xchg
aam
xchg
imul
rol
xchg
xchg
insl
sbb
call
fs
pop
add
cmp
mov
fs
mov
or
es
mov
dec
imul
insb
addl
mov
fstpl
cli
popf
fadd
lock
add
add
movsl
mov
arpl
sbb
test
mov
lods
mov
fdivrl
pop
ss
mov
add
orb
aas
and
sbb
ds
repnz
xor
fwait
subl
mov
inc
jno
mov
push
aad
jg
ds
sti
ret
or
pop
fucom
inc
cmpsl
mov
push
loope
jae
sbb
push
sub
pop
jl
push
in
and
sbb
hlt
call
dec
into
add
ss
cmp
mov
and
and
add
cmp
jmp
add
loopne
xor
pop
outsb
out
data16
mov
out
inc
mov
add
inc
mov
fidivrl
jmp
lret
aas
arpl
sub
cmp
gs
aam
mov
psubq
loopne
insl
cmp
inc
sub
movsl
pop
popf
mov
test
xor
jle
push
mov
mov
jno
in
add
mov
int
in
in
sub
int3
xchg
xchg
aas
pop
jp
inc
lret
lret
jo
or
mov
out
xchg
push
dec
cli
and
and
xchg
or
sbb
and
sub
cwtl
and
jg
adc
mov
test
js
fldt
scas
or
ret
shll
push
sub
or
cs
sub
cli
cmpsl
test
rclb
stc
aam
pusha
out
push
mov
cmp
ja
test
sbb
pushf
adc
or
inc
bound
clc
aad
popa
mov
mov
add
sub
dec
xorb
test
mov
test
jns
push
and
xor
movl
add
cmp
xchg
and
mov
and
test
push
and
dec
rorl
jecxz
inc
push
pop
enter
daa
test
test
pop
js
fnstcw
mov
add
out
aas
add
mov
cmp
cmp
add
mov
sti
rcll
movsl
and
insl
jle
inc
and
inc
push
leave
aaa
mov
loopne
insb
dec
imul
in
hlt
and
mov
add
arpl
pop
in
lret
cmp
sbb
add
ds
test
dec
xlat
out
movsl
pusha
scas
out
xor
pusha
jae
addr16
xchg
xchg
mov
mov
push
cmp
pop
push
lods
mov
mov
aad
outsb
fistpl
pop
push
scas
mov
add
and
je
add
sbb
inc
imul
sub
test
enter
xor
and
lret
add
fstps
mov
in
call
pop
pop
pop
mov
dec
leave
cmpsb
mov
sbb
sbb
push
add
in
mov
daa
and
inc
xchg
int
dec
push
jae
and
xchg
imul
pop
out
test
sub
pushf
sarb
das
jecxz
push
movsl
cmpl
sbb
je
mov
lds
std
ljmp
add
mov
aaa
jno
popf
add
dec
add
sbb
das
and
sbb
jp
push
xchg
cmpsb
adc
sbb
icebp
insb
xor
sub
gs
andb
mov
xor
outsb
cmp
sbb
lret
fildll
mov
jo
mov
pop
mov
pop
xchg
clc
subl
mov
popf
push
sub
inc
pop
test
mov
ret
int
mov
sbbl
movsl
es
bound
shll
int
xor
and
dec
in
scas
test
jbe
mov
popa
andb
es
fnsave
repnz
outsl
lcall
or
cmc
dec
add
pop
or
lea
mov
inc
push
les
call
gs
pop
mov
push
pop
pop
inc
push
call
arpl
push
rcll
rorl
fstl
cmp
setbe
out
jo
pop
xlat
lods
imul
test
xor
dec
cmp
and
add
addb
enter
sti
jns
stc
in
and
xchg
dec
pushl
in
push
cmpsb
loopne
std
add
ffree
xchg
or
jae
xchg
pop
mov
push
xor
movsb
xchg
pop
lods
mov
aaa
in
leave
add
movsb
sbb
mov
lcall
addr16
adc
push
jl
mov
inc
faddp
cmp
sbb
das
inc
or
cwtl
out
mov
jg
nop
xor
inc
mov
and
jmp
adc
les
repz
repnz
stos
leave
jmp
mov
orl
sub
ds
push
aas
or
xchg
pop
push
rol
push
ret
add
cmp
pop
dec
pop
dec
jnp
adc
inc
xchg
ja
add
pop
pop
xchg
test
dec
test
data16
push
xchg
popa
mov
sbb
loope
xchg
mov
es
lock
inc
lock
xor
dec
cmp
popa
test
mov
ljmp
pop
mov
or
lds
inc
xor
cmp
arpl
scas
add
inc
rcrb
imul
cmp
test
int
inc
jne
orb
or
sub
into
ret
insl
mull
push
movsb
add
in
stos
mov
arpl
pop
adc
inc
xchg
stc
sbbl
lock
adc
pop
mov
pop
fcoms
movsl
adc
cmpsb
push
fnsave
adc
cmp
mul
pop
xor
and
pop
push
push
xor
push
dec
out
lods
jle
mov
cs
sub
loopne
sub
lods
inc
out
movl
fldcw
pop
dec
ror
mov
xchg
mov
insl
shlb
sub
popa
inc
inc
xlat
mov
sub
outsl
pop
add
imul
mov
push
or
xchg
aaa
les
mov
mov
lcall
fisubrs
jmp
fistl
mov
jp
cld
out
fdivr
loope
shll
dec
jns
xor
jbe
sub
lods
icebp
mov
lret
out
pop
fbld
popf
cmc
shll
fwait
in
adc
jnp
cmp
popf
out
cmp
les
xchg
int3
adc
jb
test
dec
into
push
mov
jmp
icebp
adc
sub
adc
movups
add
pop
jno
mov
stc
imul
mov
xor
jae
movsl
out
inc
out
xchg
jg
sbb
in
or
mov
xchg
cs
les
mov
popf
push
out
pop
stc
std
cwtl
fistl
sub
mov
dec
dec
dec
icebp
decl
pop
inc
scas
addr16
lea
ret
inc
cmpsb
mov
push
pop
aam
rcrb
jmp
pop
mov
scas
cwtl
mov
shlb
ficoml
gs
dec
daa
rclb
dec
cltd
inc
rcr
push
shll
adc
mov
sub
mov
aaa
ljmp
adc
xorb
inc
mov
dec
aam
sub
sbbb
hlt
loope
mov
xchg
xlat
jo
jns
imul
in
or
lret
ja
lds
adc
xor
aam
repz
xlat
das
loop,pt
ss
push
mov
and
js
andl
jmp
cmp
pop
pop
sarl
push
and
loope
pop
jno
cmp
mov
imul
sti
popf
leave
dec
fs
es
mov
mov
cmpsb
ret
das
fnstenv
arpl
mov
loope
test
out
mov
xlat
cltd
mov
clc
in
ja
fistl
cld
imul
mov
fcmovnbe
in
push
or
shll
inc
dec
jb
xor
cmp
call
rorl
lahf
popf
ljmp
jns
cmpsb
outsl
std
lds
nop
test
push
lea
rol
xchg
mov
enter
fcos
jmp
inc
ja
ret
sub
mov
fidivrl
ficomps
xchg
xchg
mov
cwtl
mov
pop
mov
mov
ja
sahf
mov
mov
stos
push
mov
mov
and
mov
jo
cs
sti
mov
sub
cltd
xchg
xchg
in
jmp
nop
push
pop
and
into
in
pop
inc
das
mov
xchg
cld
arpl
mov
xchg
pop
imul
pop
cmp
ffree
in
jge
push
or
lret
sbb
aad
sub
sbb
pop
inc
bound
sbb
cmp
aam
add
or
rcrb
or
mov
mov
das
jecxz
mov
adc
je
ret
fsubs
sbb
in
sbbl
out
fstpt
xchg
loop
test
cwtl
mov
fwait
dec
mov
in
mov
scas
dec
test
push
cmp
xchg
xor
inc
cmp
mov
dec
xchg
mov
pop
dec
jmp
jnp
mov
cltd
daa
cld
xchg
lds
ret
xchg
lret
mov
or
es
xlat
sbb
dec
jne
je
test
ja
popf
xor
mov
sbb
xchg
pushf
out
or
aad
nop
xchg
xor
filds
lods
xchg
mov
in
adcb
test
mov
fldt
out
repnz
sub
clc
out
or
jno
pushf
loope
pop
mov
fsts
or
out
pop
xchg
es
or
add
inc
mov
in
mov
and
mov
les
pop
out
inc
fbld
cmp
shlb
inc
mov
icebp
bound
popa
cld
dec
lahf
clc
in
inc
pop
jg
les
jle
and
jno
leave
xchg
cmp
sbbb
sarb
iret
scas
cmp
jns
mov
and
dec
mov
rclb
aaa
cmp
dec
sub
lock
aad
pushf
sbb
in
jle
add
add
inc
xor
iret
movsb
sbb
mov
ret
lds
pop
ds
test
mov
dec
int3
insb
clc
in
xor
daa
in
cmc
push
repz
push
stos
xor
mov
cmpsb
pop
sbb
sub
ja
cltd
in
mov
rcll
notl
dec
xor
bound
rcll
or
push
jp
inc
shlb
into
jne
and
jb
add
lea
cmp
les
dec
push
pop
js
mov
push
jl
dec
fcoml
pop
mov
lods
gs
mov
mov
mov
data16
inc
mov
inc
and
imul
mov
dec
xor
inc
and
xchg
inc
inc
push
push
mov
jmp
sbb
addr16
testl
jne
outsl
mov
ret
insb
jns
mul
sub
shlb
popa
and
ja
fstl
test
into
test
stos
repnz
jl
pop
lods
insb
and
push
mov
jnp
cmp
mul
iret
sbbl
xor
sub
add
mov
std
jnp
movsl
sub
loopne
cmp
gs
inc
jb
and
orl
xor
das
cmc
sub
cmp
rcrl
lds
inc
jns
aam
or
daa
nop
les
movsb
enter
inc
fwait
mov
fldt
and
fcmovb
clc
mov
mov
insl
fwait
cmc
pop
adc
dec
repz
jae
push
popa
nop
jbe
mov
add
testl
and
sub
out
xlat
movsb
cs
shrl
dec
cmpsl
shrl
leave
cmp
cltd
mov
rcll
sbb
mov
out
out
cltd
xchg
ljmp
mov
cltd
out
adc
in
shr
add
ljmp
loope
and
popf
sub
sub
pusha
and
sub
push
adc
jo
fcompl
push
mov
and
cmp
mov
addps
shlb
ljmp
loope
inc
cmp
cs
inc
xchg
jae
dec
hlt
loope
jle
push
addr16
sar
ja
leave
popa
adc
roll
popf
aas
rep
adc
dec
or
cmc
xchg
add
lahf
inc
add
cmp
xchg
rolb
cs
sti
lahf
mov
adc
pusha
popl
sub
leave
addl
add
pop
sbb
push
arpl
aam
sub
cli
into
lret
and
inc
mov
std
aam
fcmovb
xlat
add
sbb
sar
xchg
or
mov
mov
pop
dec
imul
pop
ret
cmp
mov
add
pop
mov
dec
and
call
xchg
mov
icebp
mov
loopne
jle,pn
jl
mov
lcall
ja
vmwrite
stos
add
into
in
xor
call
mov
mov
lret
sub
or
sbb
pusha
dec
xor
mov
mov
mov
std
repnz
push
jbe
xor
sar
sahf
fcmovb
jg
leave
dec
lea
loop
xlat
std
sub
cmpb
inc
fstpt
inc
sub
and
mov
jmp
xorb
sub
mov
inc
shlb
push
outsb
lds
pusha
daa
mov
ret
cwtl
stc
jbe
gs
jnp
imul
repnz
jg
xchg
cmp
xchg
test
out
nop
repnz
test
les
rcrb
jo
stc
ja
andl
pop
jo
mov
fsubs
cmp
pop
scas
stos
mov
mulps
and
lods
jl
pop
lret
outsb
ja
jb
repz
in
pop
push
jp
movsb
dec
or
or
rol
iret
xor
xchg
clc
pop
mov
mov
xchg
cmp
int
cmpsl
ds
adc
jae
lock
xchg
scas
push
xchg
sub
jnp
fwait
xchg
leave
sbb
ret
std
mov
out
dec
inc
or
pop
inc
mov
scas
lret
pushf
inc
jge
int3
or
pop
xor
lock
mov
add
inc
roll
pop
cmp
test
fsubs
xor
scas
lods
pop
popa
shl
xor
jno
repnz
orb
mov
in
pop
sub
cld
mov
jnp
sbb
push
xor
lods
int3
dec
jne
repz
sbb
sbb
jno
ror
lods
cmp
xchg
push
insl
or
into
cs
sbb
mov
jae
rclb
inc
push
cmp
and
jp
aas
aam
popa
pop
popa
leave
push
repz
mov
ret
push
test
int3
movsb
out
sub
popa
hlt
push
sbb
in
inc
sti
sbb
jo
sbb
cs
xchg
or
and
sub
lods
loopne
lret
imul
out
pop
cwtl
cmp
push
jno
loopne
pop
mov
clc
and
xchg
dec
stc
and
and
xchg
jne
imul
pop
pop
mov
stc
pop
pop
pop
addr16
lea
or
in
dec
pop
mov
adcb
mov
cmc
or
inc
in
mov
cmpsb
pop
pop
mov
xor
enter
sbb
jbe
into
sbb
sub
adc
xchg
aaa
add
stc
rcll
fbld
push
outsl
push
dec
jnp
ss
add
inc
int3
inc
ret
sbb
inc
lcall
push
inc
das
icebp
push
into
movsl
aaa
mov
fcom
lea
je
jnp
incb
stos
lcall
jne
mov
jge
jo
sbb
pop
insl
xlat
test
sub
pop
push
pop
dec
mov
ja
push
sub
bound
pop
or
xchg
movsb
int3
or
lds
mov
cltd
lcall
adc
in
and
inc
repnz
add
jbe
push
pushf
mov
or
pop
int3
hlt
mov
pop
ljmp
mov
jne
mov
mov
pop
xlat
mov
jns
scas
es
jecxz
fildll
lods
sub
mov
push
mov
pop
imul
push
sbb
daa
cltd
xchg
cltd
jb
and
jo
aam
sub
adcl
jle
and
xchg
jne
cwtl
mov
jle
pop
outsb
jp
std
sub
test
popa
sbb
push
pop
nop
sbb
xor
dec
cmc
xchg
cmp
push
pop
inc
mov
xor
psllq
add
inc
test
mov
mov
fsin
shll
fsubr
jl
mov
jo
lods
int
cld
roll
xlat
mov
and
daa
inc
aam
pop
and
jecxz
cs
ljmp
push
xchg
dec
adc
dec
xor
out
pusha
lods
cli
inc
pushf
popf
in
push
cwtl
pop
lock
sub
jmp
scas
sbb
fnsave
dec
cltd
dec
and
pop
or
arpl
sub
mov
pusha
xor
rcrl
pop
push
fnstcw
call
dec
insb
scas
rcll
scas
xchg
test
lods
out
push
and
leave
loop
pop
push
sbb
cmpsb
xchg
inc
cmp
cmpsl
daa
mov
xchg
mov
jbe
sbb
pop
shr
rorl
mov
cmp
sub
in
dec
add
inc
push
or
dec
pop
outsb
jmp
jg
mov
inc
cmp
mov
test
bound
mov
imul
into
rol
xchg
jbe
leave
push
xor
icebp
stc
jne
out
add
fisubl
cmp
mov
push
test
out
aad
popa
xchg
popa
sub
into
es
int3
gs
loop
pop
lcall
jb
xor
sbb
push
sarl
push
test
dec
out
insl
xor
sub
rcll
xchg
aam
mov
add
sub
fnstcw
mov
mov
gs
mov
dec
or
mov
push
fcoml
cmp
sub
mulb
mov
fwait
cld
dec
push
mov
jle
push
lods
iret
pop
sbb
mov
pusha
enter
xor
loop
fs
mov
ficomps
fisttpl
xchg
sbb
stos
sub
and
inc
or
jb
cmp
add
clc
pop
das
xor
mov
mov
or
pop
push
popf
pusha
fidivl
stc
je
adc
popa
cmp
aas
out
shrb
insb
add
cli
sbb
and
dec
ss
xor
daa
jmp
and
incl
inc
pushf
adc
bound
imull
into
lahf
push
rcrl
sahf
mov
out
movsb
movsb
mov
pop
out
enter
into
out
mov
dec
and
lret
sub
cmp
mov
jmp
lret
pushf
enter
popf
subl
iret
bound
xchg
cmp
subb
lahf
and
cltd
or
mov
adc
cmp
or
lcall
xor
xor
int3
sub
jb
decl
scas
xchg
xor
mov
jno
out
out
jmp
xadd
add
call
mov
clc
add
lods
lcall
add
push
dec
stos
fiaddl
addr16
xor
lret
fmul
dec
pop
dec
imul
mov
sahf
pushf
js
pop
negl
cmp
jmp
out
sahf
dec
adc
dec
loop
imul
pop
ret
stc
sub
mov
fcmove
les
in
mov
mov
sub
jl
fwait
aas
stos
aad
xor
pop
std
faddl
je
inc
cmp
into
jge
add
cwtl
adc
mov
add
movsb
dec
std
scas
decl
inc
pop
jnp
cmc
loope
pop
idivb
xchg
ds
int
jnp
in
push
das
mov
sub
mov
ret
ss
ljmp
mov
enter
rolb
push
mov
lret
fsubs
adc
xchg
std
mov
adc
in
flds
enter
testb
sbb
xor
cmp
sub
pop
rcll
stos
gs
push
ret
add
shll
mov
mov
outsb
aam
xor
adc
sub
cmp
xchg
and
xchg
push
inc
mov
push
arpl
inc
rcrl
jecxz
idivl
test
or
in
cmpsl
adc
or
mov
imul
pop
dec
in
xor
jbe
rclb
xchg
or
bound
idivb
or
add
stc
rcll
sub
mov
add
jno
lahf
fistps
jno
shr
sbb
es
mov
idivb
fldl
add
jle
pop
arpl
jae
pop
pushf
xor
add
roll
xor
jno
cmpsb
fbstp
les
push
rcr
push
nop
mov
fsubl
test
xchg
xor
inc
decl
or
adcb
sti
mov
enter
lcall
out
imul
mov
testb
push
loop
mov
lret
mov
out
rcl
cmpsb
xchg
pop
xchg
jle
or
sub
in
repnz
mov
xchg
stc
shll
xor
pop
pop
sub
and
or
or
out
cmc
lahf
dec
push
mov
jb
mov
enter
rcrl
sub
fstpt
inc
shlb
xchg
in
or
push
sub
cld
jecxz
cmp
adc
shrb
mov
sbb
cli
mov
nop
pop
mov
add
xchg
loope
fbstp
cmp
sbb
xchg
ljmp
into
push
mov
mov
sub
test
push
es
mov
mov
ret
outsb
jmp
jl
add
stos
aas
inc
push
sub
and
pop
cmpsb
fxtract
popa
jg
mov
sub
and
faddl
push
mov
or
divb
shlb
cmp
ror
das
xchg
fisubrl
in
jnp,pn
mov
pushf
int3
xor
aaa
inc
jmp
call
cmp
je
sbb
js
outsl
push
inc
jbe
lock
pop
ljmp
cs
push
push
leave
cmp
call
mov
mov
sub
xchg
fsubrl
dec
movsb
jno
jmp
adc
pop
and
sbb
mov
xor
cmp
cmp
jmp
xor
data16
mov
repz
push
xchg
and
pop
push
or
movsb
out
in
ljmp
and
mov
scas
out
movsb
push
shl
rsqrtps
push
xchg
out
je
fucomi
pop
pop
or
fidivrs
pop
jg
mov
popf
out
sub
dec
fstps
mov
pop
insl
js
jnp
push
jae
enter
jp
sub
pushf
lock
cmp
dec
inc
bound
ja
cltd
xchg
fisttps
cmp
mov
js
ret
ja
std
addr16
les
fldt
mov
cmp
iret
pop
cmp
std
test
push
xchg
add
dec
out
push
lods
pop
pop
cmp
call
xor
pop
fisttps
mov
out
data16
rcll
fldenv
push
std
sahf
mov
orb
les
cmp
imul
inc
rclb
cmpsl
rcrl
pop
pusha
js
mov
das
out
shlb
insb
adc
xchg
xor
in
add
movsl
mov
push
cmp
pusha
out
fldl
insb
jo
jp
dec
mov
test
and
in
xchg
out
push
adc
fadds
rol
mov
scas
xchg
sbb
or
add
adc
imul
dec
int3
mov
lahf
sbb
dec
cmp
scas
push
jb
mov
xlat
sbb
movsb
push
insb
push
aad
cwtl
cltd
fisubs
push
xorl
das
or
xor
cmpb
les
cmp
inc
inc
and
fdivr
jae
out
rcrl
adc
out
arpl
inc
mov
jl
push
push
adcl
popa
xchg
lds
dec
pop
push
out
sub
testl
test
push
inc
in
repz
rcll
mov
push
in
fnstenv
pushf
inc
mov
cmp
fldl
xlat
dec
lea
pop
sbb
or
je
jo
rcrl
push
inc
mov
aaa
aas
push
xor
es
or
lcall
sub
dec
sarl
push
adc
int3
cs
xlat
xlat
pop
es
push
xor
inc
dec
daa
jp
sbb
pop
cmp
lods
and
sbb
out
daa
int3
sub
mov
arpl
repz
loope
mov
les
xchg
or
adc
ret
mov
push
cmp
dec
bound
xor
xchg
mov
xchg
notl
xor
loop
and
out
mov
aas
inc
cli
adc
pushf
enter
adc
nop
xor
mov
scas
xchg
lds
and
jmp
mov
adc
inc
pxor
mov
std
mov
stos
mov
cltd
imul
xchg
mov
lods
push
mov
inc
inc
or
jle
jno
push
scas
mov
mov
loopne
xchg
add
mov
inc
push
pop
pop
adc
test
addr16
and
jbe
dec
pop
or
jbe
xchg
mov
idiv
add
insl
in
adc
movsl
and
fsubrl
jle
and
push
mov
mov
ja
les
mov
test
lea
inc
mov
mov
scas
out
cmp
pop
xor
mov
inc
leave
inc
aad
sar
xor
testb
push
jo
lds
rol
push
pushf
jns
clc
mov
push
cli
jbe
jae
push
lea
mov
sub
movsl
lahf
xchg
xor
push
outsb
adc
mov
mov
das
or
cmpsb
in
xchg
xcrypt-ecb
cmpsl
or
movsl
jl
jecxz
fidivrs
ret
fs
xor
mov
mov
pop
adc
lock
arpl
rcl
out
add
sarl
pop
add
mov
adc
and
pushf
fsubrl
or
xlat
test
mov
add
mov
loop
imul
ret
jp
stos
cmp
jmp
pop
jbe
shl
gs
test
push
pop
ret
or
outsl
call
inc
cmp
jae
xor
xchg
daa
add
fimuls
jne
repnz
mov
cmp
sub
fwait
jno
movsb
test
fdivr
test
cmpsb
in
ja
movsl
xor
loopne
pop
adc
add
push
stos
outsb
aas
mov
and
jg
pop
xor
imul
pop
adc
rclb
testl
movsl
mov
jnp
shlb
push
loope
cmp
fisubrs
and
push
mov
pushf
frstor
gs
incl
xor
add
movsb
out
pop
scas
imul
fs
inc
push
js
mov
adc
loopne
cltd
lock
mov
jl
and
fisubs
mull
outsb
rcl
lds
and
imul
add
test
and
lock
or
mov
fs
pop
push
rcl
pushf
cltd
jle
pushf
adc
pop
push
jl
sahf
push
inc
cmpsl
es
pop
stos
iret
mov
xchg
mov
dec
xor
repz
pop
lcall
dec
adc
mov
add
push
push
sahf
xor
loop
ds
imul
sub
lods
mov
mov
lret
jl
pop
adc
dec
and
mov
adc
bound
movsb
dec
loopne
fdivl
dec
imul
aas
lods
repnz
sbbl
outsb
pop
test
das
push
jo
std
cmc
fsubr
sub
and
push
imul
mov
popa
xor
push
and
or
pop
adc
add
mov
test
ljmp
pusha
adc
cmp
cmp
mov
mov
jl
dec
popa
adc
or
mov
and
outsl
cmp
pushf
push
icebp
mov
movb
adc
je
hlt
fidivl
cmp
mov
cmp
pop
mov
cli
mov
call
xchg
lahf
fcomp
xchg
push
test
std
cli
and
inc
mov
mov
enter
lret
sbb
inc
movsb
or
jecxz
enter
ja
cmpb
adc
sbb
push
sub
jno
loopne
jns
bound
pop
push
aaa
jmp
movsl
cltd
pop
ja
inc
mov
mov
outsb
mov
icebp
push
xorb
cmpsb
pop
loopne
setl
imul
inc
sub
rcll
jbe
lock
pop
push
cmp
ljmp
jecxz
popf
fcomip
bound
xchg
fdivrs
stos
dec
jecxz
push
jmp
jae,pt
add
mov
fbld
rcll
cmpsl
sub
xchg
adc
jecxz
push
mov
cmp
cs
cli
adc
xorl
mov
test
ja
insb
int3
fdivl
dec
xchg
push
xor
pop
xchg
repz
pop
fcompl
sub
lret
add
adcb
ljmp
inc
fisttps
std
xchg
pop
mov
xor
call
fisttpl
test
sbb
mov
cld
push
adc
aad
and
and
out
nop
push
xor
xchg
mov
push
or
mov
xchg
adc
mov
pop
pusha
add
mov
iret
mov
jge
nop
lock
call
or
push
push
adc
pushl
dec
mov
jle
pop
ja
cmpl
mov
out
ficoml
lret
cmp
bound
mov
loope
hlt
aad
lret
dec
cmp
xchg
push
mov
cmp
sti
jno
jg
ljmp
inc
inc
sbb
fs
mov
xchg
cmp
xchg
or
fstpl
fdivrs
mov
or
mov
jmp
lret
fcmovnbe
sub
punpckhdq
mov
jl
loopne
movsb
inc
lods
mov
aam
bound
inc
call
and
or
jns
jp
orl
or
mov
test
outsl
fcomps
sub
ja
add
in
int3
inc
mov
dec
push
nopl
xor
pop
pop
pop
pop
pop
jge
jns
sbb
fcmovu
or
lods
sbb
test
jbe
pop
inc
js
mov
jo
ret
int3
lds
and
mov
fcom
dec
das
xor
dec
lds
scas
cmp
outsb
stos
outsb
lods
pop
sbb
jns
xor
stos
mov
and
xor
sbb
pushf
add
mov
imul
cltd
push
mov
cmp
inc
adc
xchg
add
fimull
and
cmp
pop
jo
jbe
roll
lahf
fisttpl
sub
pmaddwd
xor
iret
shll
mov
fildll
mov
add
movsb
and
sub
xchg
inc
movsl
xchg
je
inc
ficoms
xchg
adc
sub
jns
aad
cmp
push
jle
dec
das
xor
ret
into
movsl
mov
fdiv
dec
lods
gs
dec
shufps
iret
or
test
mov
mov
adc
aas
cmpsb
outsb
mov
outsl
push
insl
dec
icebp
out
popf
push
enter
mov
fcompl
scas
out
or
cmpsb
pushf
into
lret
xchg
xchg
sbb
add
stos
sbb
xchg
stc
fcomps
in
xchg
jecxz
pushf
xor
hlt
pop
mov
shll
pushf
mov
aaa
mov
pop
push
test
sbb
inc
ljmp
mov
adc
sub
xor
jne
inc
mov
bound
and
dec
and
sarl
jecxz
xchg
jae
pop
sub
lea
in
int
cmp
mov
mov
daa
push
cmp
pop
jmp
mov
pop
push
inc
ljmp
repnz
pop
cmp
xor
push
rcrb
js
mov
ret
pop
dec
nop
cmp
fildl
sbb
sti
cmpsl
decb
int3
push
jecxz
push
push
int
xchg
sbb
mov
std
xchg
cmp
dec
pop
arpl
jmp
mov
fucomp
mov
cli
sbb
sub
add
ret
fs
lods
sub
adc
stos
mov
loop
jno
mov
xchg
mov
aam
sbb
icebp
clc
xor
jns
inc
push
mov
ret
mov
imull
pop
xchg
mov
dec
jns
pop
cld
push
int
hlt
movsb
out
mov
popf
mov
and
lock
das
test
in
lea
fwait
mov
xchg
jnp
idivl
jo
jno
repnz
fdivrs
xchg
push
or
cltd
push
test
test
popf
test
out
repz
jp
ret
xor
adc
aam
test
mov
mov
mov
xor
fwait
into
pop
ret
lds
push
sub
xor
jno
aad
mov
sbb
mov
sahf
pop
cmpsl
test
push
loope
movl
jae
xchg
fistps
inc
cmp
adc
adc
dec
movsb
xchg
push
mov
cmp
stos
ret
pop
push
ret
mov
pop
mov
bound
cmpsl
push
aaa
xchg
out
dec
pop
or
pop
and
cmp
fiadds
das
cmp
jne
incb
mov
mov
xchg
or
dec
insl
out
jmp
adc
push
popa
jmp
pop
idivb
nop
pusha
cwtl
pop
popa
out
sti
jle
lret
lock
bound
ja
push
xchg
mov
adc
pop
adc
mov
data16
imul
jns
jae
rclb
insb
jle
and
cmpsl
call
adc
push
xchg
aam
sub
outsb
and
pop
jmp
push
test
cwtl
bound
push
flds
mov
or
insl
jmp
out
push
xchg
mov
push
mov
dec
cmc
or
xchg
mov
push
in
push
mov
adc
inc
mov
orb
das
aad
xlat
nop
xor
mov
ljmp
repnz
cwtl
ja
lock
xchg
xlat
mov
lahf
lret
mov
out
notb
jle
mov
xchg
adcb
arpl
leave
push
popf
or
outsb
pop
and
fnstenv
lea
icebp
aas
popl
les
mov
dec
cmp
loope
adc
mov
xor
sbb
arpl
inc
ret
scas
sbb
mov
inc
call
adc
outsl
sub
jns
xchg
or
mov
out
mov
arpl
aad
mov
jmp
aad
outsl
ret
cmpsb
jle
and
jle
mov
cmc
add
jl
scas
lds
les
adc
add
xor
xorl
xlat
adc
cmc
or
cli
jbe
pop
mov
lcall
imul
mov
leave
out
dec
push
lods
cltd
and
inc
cmpsl
sbb
cmp
into
test
fdivs
sahf
sbb
sbb
or
sbb
bound
jecxz
loop
xchg
cmp
shl
push
xor
mov
lahf
inc
stos
pop
sqrtps
imul
sbb
adc
xchg
inc
sbb
push
jno
inc
xor
fucomp
add
mov
mov
orl
aam
int
push
mov
inc
inc
xchg
loop
xor
xlat
scas
add
fildll
push
lcall
xor
sbb
sti
lret
or
mov
lahf
or
icebp
adc
add
add
push
xchg
fidivl
jnp
addb
repz
jno
mov
jae
inc
mov
cli
inc
rol
das
push
dec
lods
jo
shr
ljmp
mov
and
pop
xchg
add
mov
mov
stc
insl
jo
daa
ficomps
stc
pop
pop
mov
arpl
xchg
cltd
nop
xor
test
add
mov
xchg
loopne
nop
and
xlat
xor
dec
into
rcr
cwtl
lea
js
pop
lahf
dec
pop
push
push
pop
xor
int
jl
pop
into
into
outsl
addl
and
fstpl
sarl
sub
add
inc
cmc
adc
cs
pop
jge
daa
mov
sbb
xchg
jecxz
push
sub
pushf
test
popf
push
sti
jo
xor
add
shl
stc
mov
sub
test
stc
push
movups
mov
bound
mov
adcb
ljmp
in
sbb
mov
pop
lcall
repnz
rcrb
aam
pop
repnz
sbb
mov
sbb
iret
mov
rorb
sub
push
add
shrl
sbb
push
test
cmpsb
mov
sbb
ljmp
in
fs
xor
loopne
jnp
ss
mov
inc
push
pop
rclb
mov
call
cmc
gs
inc
add
xor
mov
add
cmp
or
aas
fisubrl
cli
movsl
mov
lret
and
hlt
pop
ljmp
push
dec
jnp
jne
in
mov
pop
cmp
lret
and
jg
ljmp
stc
sub
loope
cmp
adc
ja
sub
filds
dec
push
ds
xor
test
jmp
imul
ljmp
dec
or
lods
out
fldcw
xor
xor
mov
les
push
mov
xchg
movsl
mov
push
and
orb
mov
xchg
mov
adc
push
xchg
jge
adc
ret
mov
push
outsb
xor
or
scas
mov
sti
xorb
stc
lea
arpl
jp,pt
clc
out
int
loope
jb
mov
int
xchg
out
arpl
sub
lahf
pop
cli
and
jae
addr16
mov
pushf
push
fnstsw
xor
lods
pusha
xchg
mov
mov
out
test
fnsave
sub
add
inc
lcall
add
xchg
div
imul
out
inc
add
outsl
int
mov
or
aas
add
jno
dec
xchg
push
ljmp
addr16
arpl
inc
gs
jne
adc
dec
dec
push
jne
enter
jns
lret
out
loop
scas
fisubrs
inc
push
jmp
cltd
shr
lods
cmp
dec
pop
and
cli
mov
aaa
insl
mov
pop
fbstp
ja
in
push
jge
mov
lods
sub
jge
aaa
stos
out
daa
add
lahf
mov
add
fldt
fcmove
mov
mov
shrb
sub
jge
inc
into
cs
xchg
mov
sub
fisttpll
add
mov
test
xlat
add
mov
jno
push
inc
outsl
neg
fs
sbbb
jb
cwtl
push
jns
pusha
frstor
mov
cmc
cmp
inc
and
dec
test
mov
hlt
and
adc
inc
add
jl
and
stc
sbb
inc
stos
insb
pop
fs
sbb
pop
xor
shrl
mov
adc
and
jae
sub
mov
cli
xorb
mov
call
ss
sbb
lock
seta
pop
iret
sbb
fsubrs
inc
mov
sbb
mov
sbb
mov
add
xchg
or
fwait
mov
dec
movsl
js
sti
in
test
pop
pop
mov
pop
jle
int
hlt
arpl
xchg
cmp
mov
and
add
int3
les
xchg
cli
xchg
sub
sbbl
faddl
stos
mov
inc
stc
xchg
xor
pop
xchg
das
pop
sub
sub
ja
push
jne
cmp
inc
out
flds
sbb
popf
dec
loope
and
fcmovu
dec
icebp
xlat
jge
add
push
sub
test
pusha
test
mov
push
fidivs
xchg
lds
mov
fprem
mov
rcrb
mov
xchg
es
jae
andb
bnd
jne
xchg
pusha
shlb
neg
pop
cmc
insl
cwtl
test
push
inc
adc
mov
xchg
push
sub
insl
add
mov
add
loope
insb
and
cmpsl
arpl
mov
repnz
adc
adc
add
sub
sub
jl
aas
push
and
add
bound
lahf
ds
out
fwait
pop
sub
xor
adc
mov
mov
cltd
ret
pop
out
jge
iret
imul
iret
hlt
cs
or
es
imul
sahf
mov
xor
int
loope
icebp
mov
sbb
jns
pop
fmull
pop
js
aaa
pop
push
in
and
add
outsl
popl
lahf
cmc
xor
ds
mov
or
repnz
xor
dec
and
xor
push
xor
cmp
sti
leave
ja
mov
sbb
adcb
daa
das
inc
pop
sbb
sub
jbe
out
push
data16
xchg
mov
add
inc
es
push
push
push
mov
jnp
jmp
xlat
movsb
dec
sub
sub
inc
aad
in
or
fmuls
mov
cmc
push
rclb
mov
dec
fwait
and
enter
jl
dec
push
scas
pop
dec
aas
fmuls
dec
outsl
pop
ja
mov
nop
pusha
in
mov
mov
jmp
jg
sub
xchg
shrl
cmpsb
mov
lds
jmp
sub
mov
adc
stc
jge
mov
dec
in
xchg
sub
mov
loop
adc
stos
mov
cwtl
mov
cmp
insb
or
aaa
push
jo
cli
push
imul
imul
test
test
sbb
ret
sub
out
sbb
and
mov
dec
movsl
pushf
or
subb
sub
rol
add
mov
ret
xor
pop
pop
pop
add
or
ljmp
fwait
adc
sub
outsb
leave
pop
sub
imulb
inc
xor
and
in
adc
mov
pusha
xchg
stos
or
jge
loopne
jnp
sub
stos
jge
aas
cmp
pushf
cmp
inc
mov
gs
jne
mov
push
fwait
inc
inc
sbb
xlat
jle
ret
xor
sub
fiadds
xchg
rolb
ds
rcrb
and
jle
scas
pop
daa
mov
cltd
xor
ljmp
dec
lods
cmp
xchg
sahf
mov
cltd
lock
jnp
daa
aam
xchg
adc
cwtl
xchg
jnp
rcll
loope
sbb
test
out
and
xor
fldl
sub
xor
test
in
pop
sub
lcall
gs
ljmp
insb
sub
lretw
sbb
enter
push
mov
or
aam
loop
push
xor
xchg
in
aas
or
sbb
pop
stc
dec
sub
shll
mov
jno
or
aaa
movsb
clc
andb
stc
add
iret
cmc
testl
test
cs
xchg
inc
adc
sarl
xlat
shlb
ds
xchg
icebp
fiadds
std
mov
add
lods
adc
aam
fsubs
fnstcw
xchg
mov
xor
push
cmp
cmc
adc
in
and
xchg
leave
add
push
faddp
dec
push
push
out
loope
xor
test
sbb
jmp
xchg
dec
push
cmp
xchg
icebp
mov
mov
call
or
pop
inc
mov
repnz
rcrl
enter
jmp
movsl
xor
xchg
adc
movsl
in
sbb
sub
xchg
jmp
nop
mov
xlat
hlt
push
repz
iret
mov
jbe
ficoml
and
inc
add
and
pop
pop
and
sbb
jp
push
sbb
stc
push
dec
mov
jno
fldenv
test
loop
rcl
in
lcall
aad
push
mov
push
sti
push
ds
lods
out
shll
lea
jnp
jno
xor
cmp
push
push
mov
mov
in
das
loop
sub
popf
idivl
push
mov
fdivp
and
in
pop
stos
xchg
mov
into
cs
fdiv
push
je
xor
test
pop
pop
jae
sub
xchg
mov
adc
mov
push
rcl
mov
fs
lods
fidivl
jno
cmp
sbb
cli
and
mov
push
aas
add
cli
ds
adc
jle
movsl
inc
cld
pop
fsubs
jecxz
mov
test
sbb
js
pop
dec
es
jno
pop
bound
sub
pop
sub
out
sbb
add
inc
cmp
push
ret
cmpl
outsl
add
int3
and
stos
push
lahf
jb
pop
add
and
xchg
out
mov
mov
inc
pop
mov
pop
loopne
popa
ja
stos
repnz
in
mov
cli
js
dec
fwait
mov
xor
sub
es
xchg
add
popa
mov
in
push
xor
mov
aam
lcall
mov
dec
repnz
sub
dec
xor
scas
or
dec
dec
cmpsl
xchg
mov
faddl
daa
jae
loope
sbb
out
cmp
fbld
push
xchg
and
rclb
shlb
movsl
int
mov
jmp
jg
in
push
jl
mov
fldt
pop
cmp
lea
cmp
hlt
add
fcoml
adc
dec
push
cmp
lods
fs
adc
sbbl
push
dec
pop
bound
add
repz
push
jo
sbb
push
inc
jne
lds
mov
ss
xchg
jbe
pop
out
mov
and
enter
jle
inc
dec
xchg
xor
mov
