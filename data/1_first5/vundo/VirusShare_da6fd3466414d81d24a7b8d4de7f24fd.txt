add
add
add
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
in
sub
lea
push
mov
push
call
cmpl
je
cmpl
je
push
call
mov
xor
xor
call
mov
xor
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
test
jne
mov
not
mov
or
mov
lea
push
call
mov
pop
leave
ret
push
mov
sub
orl
mov
inc
mov
mov
andb
mov
cmp
jbe
andl
cmpl
jne
mov
add
push
pushl
call
mov
call
push
push
push
pushl
call
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
push
call
mov
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
push
call
mov
add
mov
jmp
jmp
pushl
pushl
pushl
push
push
call
add
pushl
call
mov
add
cmp
jb
mov
leave
ret
push
imul
jb
je
arpl
mov
sub
push
push
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
movl
call
push
pushl
call
mov
call
call
push
pushl
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
pushl
call
mov
push
push
call
mov
call
xor
mov
push
push
push
call
lea
push
push
push
call
add
push
push
push
push
push
pushl
call
pushl
call
push
push
pushl
pushl
pushl
call
push
push
push
push
push
call
pushl
pushl
pushl
call
mov
add
push
push
pushl
call
push
mov
pushl
call
mov
jmp
lea
push
pushl
call
xor
mov
push
push
push
push
pushl
call
pushl
mov
pushl
pushl
push
push
call
push
pushl
pushl
push
call
lea
push
call
pop
push
lea
push
push
push
push
call
push
lea
push
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
pop
pop
leave
ret
push
push
push
mov
mov
mov
mov
push
add
pop
mov
mov
add
mov
mov
cmpb
je
movzbl
sub
push
call
add
cmp
jg
mov
mov
mov
movzbl
sub
inc
test
jne
jmp
mov
mov
call
dec
movzbl
sub
je
inc
call
jmp
call
mov
xor
push
push
mov
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
push
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
movl
movl
mov
movl
call
push
push
mov
call
push
mov
call
pop
pop
ret
push
mov
sub
pushl
call
pushl
movl
movl
movl
pushl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
push
lea
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
push
push
push
pushl
call
pushl
call
mov
push
pop
pop
ret
add
add
add
add
outsb
push
or
add
add
add
add
add
inc
add
add
imul
add
add
add
dec
sti
jo
add
push
outsl
fs
outsb
add
jg
add
leave
mov
or
clc
jecxz
sbb
insb
and
rcll
inc
fcoms
add
dec
or
clc
add
decb
pusha
incl
lcall
xor
add
push
adc
jne
mov
pop
addl
add
jge
mov
add
add
add
push
add
add
push
lea
test
call
push
cmp
js
popf
loopne
loopne
std
pop
add
incl
insb
int
test
jge
push
enter
add
push
std
test
inc
call
lret
repnz
push
adc
or
hlt
inc
adc
add
add
add
add
add
add
inc
inc
insl
je
imul
mov
add
add
outsb
add
jns
lret
mov
dec
add
gs
js,pn
push
fldz
inc
push
insb
add
insb
add
outsl
insb
jne
outsb
gs
sbb
insb
je
insb
add
stos
mov
sbb
add
sar
sub
gs
data16
sub
mov
cwtl
push
fdiv
fs
jo
pop
add
cmp
xchg
popa
or
mov
mov
pop
adc
lret
xchg
sysenter
fisttps
mov
add
mov
add
or
das
movsl
mov
xchg
xchg
stos
loop
and
add
add
sti
aad
jbe
ljmp
loop
mov
aaa
test
mov
test
push
mov
in
popf
rorb
fwait
ljmp
aaa
stos
lea
rclb
out
int3
fwait
or
mov
and
fstl
orb
push
insb
fmul
push
call
pop
cmp
lea
repnz
notl
xor
leave
shrl
roll
sub
mov
aaa
jae
mov
je
and
cmpsl
frstor
ljmp
cmp
adc
daa
sub
repnz
pushl
pop
lock
mov
sub
add
xchg
jp
adcl
and
xchg
int3
dec
filds
pop
pop
fwait
addl
ret
xor
jle
push
std
aaa
ds
fistl
push
repnz
data16
test
adc
sub
jg
mov
loopne
push
pop
cmp
cs
test
cld
sbb
stc
inc
cmp
sub
xor
adc
test
inc
adc
daa
pop
leave
cs
adc
mov
jne
adc
insb
popf
jo
mov
or
push
imul
fbstp
pop
testb
cmpsb
xchg
jge
es
cwtl
leave
pop
popw
je
sbb
aas
push
mov
sbb
call
mov
sbb
inc
push
cmpsb
pop
es
loope
cwtl
xorl
out
and
pushf
mov
adc
mov
push
xor
int
pop
out
pop
and
aas
xchg
or
xor
add
cmp
mov
call
ja
xor
dec
fistpll
sub
out
scas
in
lahf
lret
dec
xchg
in
sub
rclb
push
jecxz
movsb
push
add
popl
sbb
xchg
gs
adc
push
test
out
add
sbb
jne
scas
stc
test
imul
and
pusha
das
sub
aas
push
pop
xchg
adc
in
or
call
fidivs
inc
jp
push
sbb
in
xchg
nop
cld
pop
repz
mov
push
sub
fwait
mov
sub
mov
cltd
mov
jge
xchg
xchg
das
mov
mov
jno
and
mov
je
and
cmp
jns
xor
lea
pop
icebp
xor
call
lret
inc
fildll
dec
addr16
inc
jbe
or
and
and
pop
dec
mov
popf
adc
enter
and
xchg
flds
push
popa
mov
fucomip
icebp
pop
hlt
sbb
loope
loop
lods
ficoml
nop
scas
lock
mov
std
pop
pushf
repnz
or
sti
mov
repnz
dec
add
adc
lods
loope
jbe
cmp
sub
mov
pop
dec
push
push
out
mov
xchg
mov
xorl
and
mov
dec
mov
out
sub
mov
scas
shll
cmp
add
mov
jle
fdivrs
ja
sahf
sarl
mov
push
push
outsl
sbb
jne
jb
sbbl
das
inc
push
lret
pushf
sbb
xchg
or
icebp
xor
mov
pop
outsb
pop
sbb
xor
das
loopne
xchg
hlt
sbb
dec
bound
pushf
in
dec
inc
adc
inc
aas
xor
dec
xor
xchg
sub
cli
lds
jae
shlb
ret
cmp
adc
es
mov
repnz
inc
dec
jns
jmp
in
add
mov
les
cs
push
mov
scas
sbb
cmp
cld
dec
add
loop
mov
and
or
lret
mov
add
shrl
sub
push
cwtl
in
fmulp
stc
jae
mov
jmp
loope
fsts
clc
pop
push
jne
mov
outsl
add
xlat
xor
fsubr
mov
xor
std
lcall
xorl
add
in
mov
add
cmp
out
pop
jg
outsb
insb
inc
sbb
ja
mov
fdivrs
dec
leave
jg
ds
jbe
and
filds
cmp
or
sbb
xor
js
rorl
repz
inc
cmp
repz
popf
jmp
inc
std
jbe
xor
jno
pusha
ret
sub
shlb
xchg
into
push
lods
mov
xchg
pop
pop
inc
jno
dec
insb
jp
fadds
scas
shl
push
aaa
or
psrlw
xor
mov
cs
xor
pushl
xor
test
lods
in
ret
add
shl
mov
pop
xchg
int
pop
push
fiadds
sbb
inc
xchg
shl
out
mov
int3
inc
sti
cmp
out
js
stos
xchg
and
movsl
iret
cmp
scas
rolb
push
sbb
je
cmpsb
loopne
js
dec
xchg
pop
testl
mov
adc
mov
push
lret
and
rorb
and
push
stc
and
xlat
jle
je
sub
pop
jg
sub
push
push
xor
mov
shrb
mov
pop
jl
bswap
int3
nop
arpl
xchg
pop
xor
sbb
xchg
test
pusha
into
mov
xchg
mov
test
push
lds
adc
dec
jns
xor
cmc
fs
jl
cmc
sub
pop
jnp
add
out
and
sbb
rorb
clc
loop
lcall
cmp
push
jmp
push
into
filds
ja
mov
lcall
outsl
clc
mov
pop
ja,pn
mov
sub
adc
pop
cmp
push
sbb
push
test
inc
dec
pop
sbb
adc
add
mov
pusha
ret
dec
mov
push
fmul
gs
in
dec
lds
jmp
leave
dec
test
inc
pop
mov
imul
add
pop
sbb
xchg
or
out
fwait
adc
addr16
mov
cltd
insb
ficoml
das
cmp
ljmp
jl
outsb
cmp
xchg
or
inc
popf
movsl
roll
pop
push
js
xor
or
ljmp
mov
iret
arpl
daa
test
insl
pop
dec
sbb
dec
loop
inc
orb
adcl
loopne
mov
xchg
popf
ret
xlat
xlat
loop
test
cmpsl
pop
mov
pusha
add
cmpsl
dec
in
repnz
gs
in
dec
inc
in
sbb
mov
sub
sahf
mov
int
dec
pop
ret
or
and
sbb
sub
and
movsl
xor
es
sub
movsl
mov
mov
mov
add
jbe
push
or
hlt
add
jno
fldl
adc
loope
insl
sbb
repz
lods
aam
dec
lcall
mov
pusha
push
jmp
pop
sti
push
jnp
cmp
cmp
mov
mov
xor
iret
mov
cli
insl
out
xor
popa
dec
add
mov
shrl
xchg
mov
xor
leave
cwtl
push
xor
nop
inc
movsb
int
mov
xor
and
call
sub
fildl
aam
mov
adc
clc
out
lret
aas
fldl
insb
sub
pop
testl
aaa
inc
ret
jno
jb
mov
lcall
or
inc
xor
add
movsl
jecxz
rep
shl
sbb
pop
bnd
dec
jle
and
mov
mov
sub
push
xor
ret
cli
jae
loop
xlat
decb
stos
movsl
repz
aaa
add
inc
xchg
xchg
push
mov
jmp
jo
aaa
or
mov
xchg
mov
push
shrl
xchg
sub
ror
xor
sbb
jecxz
and
dec
push
aam
xor
iret
pop
jno
jp
sub
push
inc
xor
and
jnp
sub
lret
add
xor
xor
stos
inc
pusha
mov
mov
adc
push
rol
sbb
jge
cmp
call
leave
int3
cli
loope
insb
out
inc
mov
or
fstps
fnstenv
xor
pop
pop
jae
push
ljmp
call
fsubs
xchg
sahf
jb
mov
es
mov
and
push
lret
dec
cli
pop
sbb
stos
faddp
add
mov
add
xorl
adc
dec
mov
int
jp
outsb
mov
adc
aad
push
leave
dec
or
js
pop
push
aaa
andl
adc
std
pushf
test
lds
sub
in
xchg
test
mov
dec
sub
pop
int3
mov
inc
ficoms
les
fdivr
xchg
push
mov
sbb
aad
in
add
nop
jns
pushf
xor
insb
xchg
and
sub
adc
jb
aam
jg
andl
out
inc
flds
lcall
mov
lahf
add
or
mov
cmp
jne
aaa
xchg
xor
icebp
sub
adc
je
adc
add
out
mov
stos
xor
mov
push
jns
fwait
mov
sti
test
sbb
insb
fimuls
cmpb
push
mov
int
subl
cmc
cmpsb
arpl
imul
mov
cmc
lret
push
inc
ds
rcrl
cmpsl
dec
jmp
lcall
xor
insl
mov
pop
xor
dec
dec
pop
lds
xor
xchg
xor
mov
cmc
jbe
ficoml
dec
ds
idivb
sub
fisttpl
or
sbb
std
das
repz
adcw
dec
xorl
dec
aas
push
mov
or
lret
inc
js
cmp
adc
outsb
xchg
out
add
movl
cmc
and
mov
icebp
pop
adc
nop
xchg
mov
xchg
mov
mov
add
lret
out
inc
std
inc
dec
stos
add
andl
xor
cwtl
rol
jl
jb
sub
int
inc
pop
outsb
insb
push
insb
pop
mov
iret
das
or
fs
fadds
pop
fs
cmp
je
xchg
arpl
dec
push
push
dec
sbb
arpl
arpl
test
or
inc
add
adc
daa
jns
or
mov
pop
bound
insl
dec
mov
loop
sub
mov
jnp
mov
add
jge
test
or
in
or
sbb
fdivp
or
push
js
sbbl
out
cmp
mov
xor
stos
and
clc
jo
xchg
or
xorl
pop
mov
push
test
cmp
cli
loopne
in
sbb
shll
fistl
sub
adc
js
or
sti
les
pop
pusha
mov
lods
mov
out
imul
push
mov
xor
xor
adc
sahf
push
xor
push
lret
ret
movsl
adc
cmp
or
sarl
and
sub
pop
xor
scas
mov
repnz
push
in
sbbl
icebp
fwait
xchg
dec
pop
scas
jl
push
aam
cmp
les
lods
cmpsb
int
ret
add
mov
mov
pop
dec
loop
xchg
jmp
popf
add
mov
pusha
xorb
push
aad
cmp
xor
add
repnz
rol
push
push
insb
jmp
xchg
je
call
sbb
xor
pusha
sbb
dec
mov
push
mov
cmp
xor
aaa
xchg
sbbb
loop
rorl
or
mov
jne
dec
mov
aad
mov
add
pop
test
insl
adc
xchg
xchg
mov
dec
or
int
clc
filds
fnstsw
xor
dec
pop
pop
xchg
sbb
stc
ror
imull
xor
pop
jmp
dec
clc
pop
fstpl
in
hlt
jl
idivb
mov
mov
jnp
xor
adc
inc
push
and
xchg
int
cmp
stc
loop
mov
je
cmpsl
pop
lret
scas
xchg
mov
inc
sub
sti
pop
mov
push
mov
push
lods
ss
dec
add
daa
outsb
lret
mov
dec
fmulp
push
jl
into
mov
push
cmp
lods
movsl
stos
lods
sahf
jecxz
xchg
ficompl
aam
add
pop
pop
lahf
mov
jnp
fnsave
sbb
sub
mov
aad
mov
xlat
mov
movsl
daa
out
fs
pop
push
js
push
mov
or
popa
ret
sub
out
push
mov
xor
ret
mov
cmp
jl
sbb
sub
test
mov
adc
aam
push
inc
test
stos
test
cltd
sub
mov
adc
jg
mov
mov
xchg
sub
addr16
stos
inc
jns
cmpsl
cmc
lods
ds
jns
or
lds
cmpsb
push
xor
sub
sti
inc
call
cmpsb
mov
ljmp
sub
adc
repz
push
ljmp
sarb
mov
fstl
in
pop
xor
add
frstor
and
data16
pop
popa
aad
mov
repnz
inc
dec
push
rcrb
or
rorb
dec
out
xchg
movsl
rcr
das
arpl
mov
movsl
clc
mov
sub
idivl
rcrb
int
neg
nop
js
mov
lods
sub
xchg
dec
frstor
gs
cmp
cmp
dec
push
inc
dec
in
push
repz
jecxz
jne
jne
cmpsb
subl
pop
sub
into
xor
xor
inc
ficompl
inc
outsl
push
repnz
xchg
movsb
ds
jecxz,pt
test
stos
or
mov
push
mov
lret
sub
pop
js
mov
ret
mov
xchg
jo
push
adc
fldt
sbb
shlb
cmp
push
fs
popa
mov
inc
nop
mov
mov
ret
adc
out
pop
inc
cld
aad
addr16
dec
aaa
lahf
mov
push
std
fimuls
inc
cmp
packssdw
stc
mov
rcpps
test
mov
and
cmpsl
push
fadds
push
mov
out
loope
jl
fbstp
hlt
sarl
xlat
js
and
popa
mov
in
cmp
pop
cs
pop
sub
lahf
mov
pop
add
hlt
addl
mov
insb
push
scas
ss
fs
or
push
fnstcw
imul
and
cmp
lea
jmp
dec
lea
pop
movb
dec
cs
hlt
mov
jnp
test
arpl
add
hlt
xchg
fisubs
ficompl
push
inc
pop
and
push
inc
sbb
inc
idivb
enter
ja
pop
or
ljmp
inc
mov
mov
shll
lcall
movsb
aaa
inc
xchg
or
in
out
inc
ret
in
andb
daa
cmp
sahf
test
clc
addr16
xor
hlt
addr16
lahf
fcoms
jmp
movsb
outsl
or
pop
ljmp
xchg
push
push
push
cmp
addr16
jl
adcl
fsubr
sahf
mov
mov
jge
sarb
icebp
and
pop
andb
sub
int
mov
mov
js
mov
int3
notl
sub
fwait
add
pop
or
ficompl
in
cmp
out
mov
xor
mov
add
sbb
sbb
hlt
leave
sti
cmpsb
mov
mov
test
dec
negb
andl
dec
jp
testl
das
addb
out
loop
pop
ja
fiaddl
adc
xor
mov
or
xchg
and
push
xchg
outsl
mov
sbb
in
imul
das
mov
and
cmp
push
ret
fdivr
sahf
pop
sub
xchg
pop
test
mov
test
inc
test
test
xchg
sahf
iret
ficoms
std
out
and
cmp
repnz
mov
sbb
sbb
mov
or
xlat
aam
jl
cmp
and
testb
fs
xor
enter
dec
je
sbb
aad
mov
cmp
mov
das
mov
mov
aam
mov
sub
mov
out
or
pusha
add
pop
fwait
rol
mov
into
mov
jg
mov
jg
fmull
push
or
pop
ljmp
mov
mov
iret
std
sbb
inc
adc
sarl
js
clc
sbb
ljmp
adc
popf
jae
inc
and
cli
inc
pop
or
cmp
ss
inc
xchg
aam
dec
test
fs
lock
ficompl
jl
fwait
pop
mov
mov
shll
adc
fists
pushf
cli
mov
xor
lret
std
imul
mov
adcb
push
stc
add
push
add
mov
lea
out
cmc
data16
push
fs
jecxz
aas
xchg
adc
sub
or
cmp
scas
orl
inc
movsl
push
xor
int3
cmpsb
icebp
notl
pop
mov
pop
push
pop
mov
mov
push
insb
mov
insb
mov
add
add
scas
and
pop
popa
in
mov
adc
gs
mov
aaa
mov
xchg
mov
mov
and
leave
cmp
jmp
mov
pop
loop
lret
jl
push
loope
rorl
mov
dec
xor
repz
out
gs
rolb
push
int3
movsb
fcoml
pop
or
popf
pushf
cmpsb
ljmp
xor
and
rcll
rol
and
mov
sahf
hlt
out
sahf
std
jg
pop
scas
push
stc
push
xor
mov
test
mov
imul
xchg
rorb
gs
lcall
xchg
in
pop
fisttpll
stc
mov
stc
fisubl
adc
xchg
lcall
jg
add
cmp
lds
mov
or
stc
adc
and
test
mov
enter
and
imul
lret
mov
sub
loope
jnp
fdivrs
imul
xchg
shll
sub
add
addr16
mov
add
add
test
add
stos
add
add
add
add
add
add
add
sbb
add
add
jmp
add
add
add
jo
jo
fwait
pushl
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
or
or
stc
add
and
adc
imul
add
adc
add
add
push
add
cld
xor
add
add
add
add
add
add
or
add
and
js
add
pop
pop
fcoml
mov
add
gs
mov
sub
orl
or
xor
sbbl
lea
adc
lea
adc
ss
ljmp
pop
add
cld
shl
inc
dec
test
mov
rol
add
add
push
lea
add
leave
cmp
lea
int3
add
and
lcall
add
jp
add
mov
add
xor
adc
imul
jmp
or
dec
push
adc
clc
push
add
ljmp
dec
call
mov
add
incl
push
push
add
add
leave
add
dec
add
aad
pop
add
add
add
add
add
add
stc
sbb
cmp
add
inc
insb
add
gs
je
jae
shll
add
insb
sbb
fs
in
gs
ja
insl
outsl
insb
popa
insb
outsl
dec
jo
insb
inc
add
cs
gs
addr16
push
add
xchg
jbe
fs
addb
insb
gs
add
add
sub
add
add
add
add
leave
add
push
add
add
sub
cmc
xlat
insb
dec
add
in
pop
fs
cmc
sbb
stos
inc
scas
sbb
mov
cli
sbbb
pop
fsubrl
cmp
and
hlt
adc
jne
xchg
negl
mov
cmp
das
mov
xchg
cmp
movsb
aaa
push
int
aaa
fcoms
imul
pop
pop
movsl
mov
dec
in
mov
adc
jmp
arpl
mov
pop
add
lret
mov
dec
adc
cmpsl
and
sbb
into
cmp
cwtl
mov
gs
lock
sub
xor
das
push
shll
adc
sbb
data16
insb
xchg
jp
icebp
call
aas
sti
inc
ss
add
outsb
inc
xor
cmp
orl
or
push
cmc
imul
or
or
sti
add
pop
arpl
incl
call
lcall
pop
sub
roll
pusha
out
mov
daa
pop
mov
lods
fcoml
pop
dec
jns
xor
push
lret
shrl
cmp
push
fsub
in
ss
adcl
xor
push
data16
inc
xor
inc
lds
or
es
scas
push
scas
imul
push
pushf
mov
xchg
pop
test
pop
sti
dec
sub
loop
ret
sbb
pop
jl
mov
add
movsl
andb
repz
sbb
mull
jne
sub
stos
push
jns
ja
lret
sbb
sub
stos
mov
hlt
hlt
sub
fsubs
xchg
das
shlb
fimull
mov
adc
add
xchg
pop
jo
adc
and
jae
dec
adcl
or
xor
fistps
maskmovq
imull
xlat
sti
sahf
mov
mov
sub
jmp
or
test
std
sarl
aas
lds
inc
push
leave
es
jle
push
ss
inc
xor
and
xchg
jge
sbb
je
ret
cmpsb
xchg
mov
cmpb
insb
movsb
push
pop
sbb
scas
idivl
pop
jbe
lock
xor
dec
xchg
mov
js
mov
adc
popa
mov
inc
pusha
dec
inc
sahf
jo
jb
enter
dec
jle
mov
add
outsl
adc
jp
cmp
loope
cs
inc
jge
jecxz
and
cli
mov
out
lea
lods
xor
push
sub
mov
pop
push
sub
add
lcall
add
lret
hlt
lcall
xchg
push
mov
mov
mov
loop
pop
push
mov
negl
pop
inc
nop
rcrb
xor
sub
inc
clc
xchg
std
and
pop
mov
cwtl
sub
and
pop
cmp
lahf
xlat
js
push
dec
lcall
lods
pop
gs
sti
pop
fnsave
pushf
jo
fcmovnb
andb
jns
xchg
xchg
fiadds
xchg
sti
shlb
ds
bound
cmp
or
daa
sub
cmc
dec
xchg
or
pushl
add
cmp
add
test
fnstenv
mov
xchg
stc
adc
rcl
pop
test
clc
pushf
adc
adc
cmp
xchg
inc
stos
inc
mov
jecxz
clc
xor
cmc
sbb
inc
bound
outsb
ret
lea
pop
mov
dec
jp
pop
jb
fistl
xchg
ficoms
push
and
mov
fwait
sbb
pop
mov
iret
rorb
or
sbb
in
xor
cmp
and
jmp
filds
push
iret
icebp
loope
lods
cltd
sbbb
in
mov
stos
scas
push
lret
fnstsw
or
inc
mov
lahf
add
and
xlat
iret
xorb
xor
sti
lods
std
call
jge
imul
loop
rorl
xchg
subl
jb
mov
movsl
stos
sahf
and
lods
aad
pop
movntq
mov
lods
cli
and
push
pop
mov
push
pop
cmpsb
push
out
cmpsl
scas
lahf
sub
jmp
fdivl
lahf
mov
loop
js
cwtl
sbb
mov
or
loopne
pusha
push
xor
les
rcll
popf
xchg
sbb
xchg
mov
push
push
out
lret
and
ficoms
jo
lahf
rcl
icebp
xchg
mov
bound
nop
leave
dec
imul
cmp
add
xchg
icebp
mov
adc
aas
dec
add
and
les
rorb
js
mov
jns
jge
daa
jns
mov
stos
das
xorb
sbb
pop
adc
loope
pop
xlat
dec
enter
sbbl
or
mov
lret
xchg
mov
mov
or
shl
es
pushf
push
mov
pushf
mov
sbb
shrb
or
stos
adc
jnp
push
in
adc
xor
arpl
out
sbb
sbb
stos
or
push
mov
jnp
push
jns
dec
movsb
adcl
insb
xor
sub
enter
stos
dec
repnz
push
clc
adc
bound
xor
mov
or
cmp
pop
jl
push
dec
sbb
fisubl
inc
inc
loopne
nop
call
repnz
xchg
mov
inc
lock
out
pop
mov
cmpsl
shrb
xchg
out
sbb
dec
mov
jmp
add
sub
pop
mov
rdpmc
lods
lock
bound
fidivs
mov
scas
enter
mov
ds
dec
and
xchg
ds
sbb
out
popf
aaa
or
andl
adc
mov
aas
add
cmp
dec
je
or
mov
fwait
or
sub
inc
jmp
jecxz
or
enter
mov
movl
pop
or
adc
dec
ret
sub
je
cmp
push
pop
fmuls
lahf
cmpsb
inc
icebp
fwait
hlt
mov
mov
lret
loope
or
jbe
and
pop
inc
jmp
icebp
dec
lea
add
xchg
ljmp
jecxz
dec
mov
adc
cmp
inc
lock
and
xchg
clc
xchg
dec
jmp
sub
scas
bound
or
aad
jp
bound
fmulp
or
das
pop
mov
xor
adc
outsb
shufps
xor
int
jmp
and
into
and
in
and
dec
xlat
mov
cli
or
cmp
aas
repnz
int3
xchg
orl
adc
ljmp
les
scas
call
inc
loopne
out
jg
sti
cmp
mov
jg
or
fwait
pop
xor
insb
jl
and
pop
pushf
test
and
outsl
scas
loop
frstor
mov
sahf
adc
inc
mul
subl
cmp
jnp
jmp
xlat
pop
xor
imul
ret
mov
lods
cmp
out
ss
in
sub
sbb
push
dec
clc
and
fcoml
push
jns
ljmp
shlb
mov
adc
or
jb
and
jp
push
ja
push
pushl
scas
cld
mov
paddsb
in
fs
mov
les
in
inc
out
iret
pop
lods
xchg
aad
insb
mov
push
xor
mov
and
jecxz
add
ds
lcall
mov
pop
sbb
push
mov
mov
jp
fwait
sbb
inc
pop
sub
pop
sub
push
xor
daa
fsubrs
pop
lods
adc
out
repz
sub
es
loopne
out
out
pop
jp
xchg
push
jb
sti
aam
ja
test
push
inc
sbb
outsb
inc
imul
cltd
cltd
inc
flds
hlt
cmp
xor
cmp
jb
clc
jl
xor
add
jbe
xor
stc
movsl
imul
outsb
sbb
inc
loop
stos
pusha
fidivrl
inc
inc
add
movsb
xor
jns
push
insl
icebp
jae
gs
jle
add
test
jle
loop
add
es
les
or
loopne
inc
je
movsl
in
enter
lea
or
mov
sar
add
jbe
out
xor
adc
pop
pop
mov
pop
loopne
push
xchg
inc
popa
jbe
mov
mov
out
xchg
xchg
mov
sub
fwait
xorl
sbb
xchg
loope
test
pop
fs
mov
pop
mov
rcrb
xor
lock
in
cwtl
daa
push
lret
mov
sbb
pop
cmp
cmpsb
xchg
cmpsl
cmp
and
adc
jbe
inc
mov
test
or
adc
dec
push
push
dec
pop
stc
sbb
adc
sub
add
push
loop
adc
lret
scas
lcall
in
ss
push
fnstcw
pop
dec
movsl
lock
pop
push
mov
dec
and
cmp
cmp
xchg
jbe
aad
cs
ljmp
arpl
cmpsl
adc
daa
jne
jge
or
cmp
jl
inc
ds
lds
xchg
push
movsl
shrl
aam
inc
pusha
inc
lret
or
xor
mulb
iret
fwait
iret
loopne
xchg
ljmp
cld
testl
fucomp
cli
or
jg
movsb
stos
jno
ret
mov
fildl
inc
in
push
xchg
arpl
inc
push
pop
jns
and
in
jg
sbb
push
sbb
xchg
cmp
inc
pop
mov
mov
mov
sub
inc
jns
dec
rolb
cli
jle
mov
call
cmp
mov
das
jecxz
daa
daa
lret
addr16
mov
xchg
cli
das
jne
lahf
adc
arpl
jae
xor
xor
shll
mov
cwtl
cmc
xor
daa
xor
loope
dec
pop
xchg
out
in
push
xchg
insl
ja
dec
cmp
and
aad
addl
nop
movsl
clc
dec
xor
movsl
aad
jl
repz
insb
xor
cmp
movb
lock
dec
mov
jg
ja
jge
fwait
sbb
push
lods
scas
lcall
test
xchg
data16
pop
out
jns
cmp
cltd
call
sbb
cmp
repz
sbb
cmp
and
popf
sbb
push
xorb
popf
mov
ret
adc
je
dec
mov
inc
adc
jo
lretw
mov
cld
pop
jbe
ss
push
clc
mov
int3
scas
xor
ds
adc
iret
into
mov
push
loop
aaa
mov
pop
scas
push
inc
lcall
mov
or
mov
xor
fldl
test
stos
loopne
inc
call
sub
call
mov
enter
sbb
fisttpl
cmp
cmp
inc
mov
sarb
mov
icebp
cmp
mov
xchg
popa
jb
mov
xchg
jle
jecxz
mov
sub
xchg
add
push
ficompl
les
pop
cwtl
out
mov
mov
gs
push
sahf
cmp
icebp
dec
push
aad
lcall
jnp
cmp
inc
push
jo
lods
push
mov
cs
ret
das
leave
cvtdq2ps
stos
mov
ret
fstpl
xor
test
mov
or
jmp
sbb
cmp
xchg
imul
aam
lea
mov
cmp
shl
jbe
push
inc
or
xor
gs
mov
adc
mov
add
adc
js
test
fs
cwtl
test
divb
jmp
loop
lss
push
adc
inc
in
fcmovb
lahf
adc
gs
negl
and
xchg
addr16
test
repnz
mov
sub
mov
scas
dec
fcmovb
cmp
mov
imul
dec
test
repnz
gs
lcall
fwait
movsl
in
mov
mov
pop
jmp
push
sahf
xor
and
sti
jecxz
int3
stos
or
mov
in
mov
add
shlb
sbb
dec
fistl
in
fistpll
or
pushf
inc
pop
cmp
cmp
xlat
shrl
lret
xorl
in
in
pusha
rorb
inc
inc
inc
xor
das
cmpl
mov
push
pop
dec
jecxz
lods
xchg
pop
adc
adc
xor
ret
cmpsl
dec
shll
or
sbb
jb
lea
xchg
int
lahf
cli
outsb
xor
jbe
adc
imul
daa
sti
rcl
mov
jo
fwait
push
nop
sbb
mov
pop
cmpsl
jmp
jnp
int
xchg
mov
or
pop
jl
sub
ds
mov
or
mov
popf
int3
repz
hlt
jae
popf
pop
jb
push
int
inc
mov
add
daa
push
dec
mov
cmc
dec
push
mov
sub
push
fcomi
aam
add
sti
adc
bound
xchg
mov
xor
mov
mov
imul
xor
jle
lea
aaa
adc
popa
icebp
insb
in
and
aaa
add
gs
sbb
pop
or
xchg
pusha
xchg
sub
push
mov
cmp
push
push
fcoml
mov
sahf
or
aas
sbb
xor
jb
xchg
fnstenv
xchg
outsl
xor
sub
cmp
outsb
push
push
cltd
in
adc
loope
aas
jns
daa
adc
sub
pop
ljmp
push
cs
xchg
jb
or
stc
mov
inc
pop
dec
test
pop
xor
sbb
dec
adc
bound
push
adc
sbb
in
dec
aad
das
mov
dec
mov
iret
jmp
push
pusha
inc
sbb
mov
cs
add
repz
fstl
xor
inc
add
mov
lret
stos
leave
cmp
mov
mov
out
push
add
lock
cltd
adc
push
jne
adc
movb
cmp
out
pop
jo
fiadds
xchg
aaa
xchg
mov
aam
push
pop
and
scas
repnz
mov
mov
fldenv
test
out
sarl
call
cli
sub
fmull
jecxz
or
js
rcr
pop
mov
out
xor
sub
xchg
inc
lea
int
fimull
sbb
and
sub
or
gs
jno
cltd
push
cltd
adc
xchg
icebp
mov
sbb
ret
fnsave
ja
test
enter
mov
cmp
xchg
int3
mov
sub
xchg
mov
pop
cld
pushf
loop
inc
out
mov
jb
lds
jnp
bswap
adc
push
xor
js
mov
andb
and
push
jg
bnd
les
ret
xor
and
jb
pop
adc
jnp
push
cmpsb
sbb
sbb
push
add
imul
cmp
icebp
jne
push
pop
orl
mov
or
shrb
scas
mov
adc
mov
insl
fwait
stos
aas
outsl
scas
lock
xchg
xor
mov
mov
pushf
sub
adc
int3
test
adc
arpl
push
add
lock
dec
sahf
inc
in
cwtl
inc
mov
jb
and
adc
mov
xchg
and
sub
pop
push
mov
das
stos
in
loopne
jmp
pop
inc
ja
xchg
les
pop
ficomps
enter
push
cli
sub
call
xor
jae
aad
mov
xchg
or
scas
xchg
cli
jae
call
fs
push
hlt
out
outsb
ja
lcall
pop
insl
mov
or
xchg
mov
inc
add
jge
lds
sub
xchg
add
and
or
and
mov
insb
mov
es
testb
xor
mov
mov
nop
aas
cmp
insl
rcrl
sub
shlb
mov
shl
das
or
xchg
loop
sarb
inc
fldl
mov
call
aaa
popa
jbe
sbb
ror
bound
jmp
pop
mov
int3
adc
adc
ja
cmc
movl
cmpsb
jecxz
cmp
repz
inc
push
mov
pop
or
jmp
dec
rcl
cmpl
rcl
imul
inc
xchg
inc
mov
loop
movsb
jb
insl
xchg
adc
hlt
inc
jno
js
pop
xor
push
mov
cli
cld
dec
jle
daa
sub
adc
jno
xor
pushf
fistpl
cmp
dec
ljmp
push
aad
bound
xchg
xor
jecxz
mov
mov
int
jmp
jbe
push
fwait
cs
inc
rorl
fcomi
lods
jb
mov
xor
jg
jno
add
mov
sbb
daa
push
pop
call
jmp
ja
cmpsb
aam
icebp
out
sub
jmp
dec
enter
xlat
jl
lea
adc
mov
pop
pushl
lahf
scas
push
das
pop
cwtl
lret
inc
jl
es
push
shrb
lret
addr16
outsl
xchg
fwait
lds
les
insb
lret
push
js
xor
xchg
jl
rorl
xchg
cmp
mov
mov
mov
and
push
push
rcrl
dec
sarl
dec
xchg
lods
js
in
mov
imul
inc
mov
das
adcb
leave
jl
into
inc
and
in
mov
lahf
jne
jecxz
pop
mov
inc
inc
shrb
jno
push
testb
push
cwtl
fs
into
xlat
rcr
push
sub
xchg
mov
add
cli
ljmp
fisttpll
dec
sub
fcmovu
jge
jno
loope
mov
jl
push
inc
stc
cwtd
dec
mull
icebp
push
add
mov
imul
pop
jnp
or
mov
mov
pop
in
loopne
sub
pop
out
sub
xchg
hlt
mov
lock
mov
or
loop
ss
fcomi
adc
jno
xlat
inc
sub
pop
add
nop
and
out
mov
or
cmp
scas
lahf
cmp
sub
call
lea
and
mov
nop
fistpll
out
lret
fisubs
fxch
jbe
xchg
sub
dec
cld
hlt
cmp
jns
cmp
daa
inc
insb
stos
push
mov
dec
push
push
pop
jne
sub
or
add
add
add
add
or
add
add
mov
add
add
jne
add
add
add
leave
add
push
add
add
add
add
add
add
add
jns
add
add
stos
stos
add
sahf
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
add
mov
dec
xor
add
add
add
mov
add
insb
add
add
add
adc
add
lds
or
add
add
inc
jb
add
add
add
sbb
sbb
sbb
push
sbb
sbb
jb
jns
jne
dec
jb
push
jb
outsl
outsb
dec
dec
jo
test
xchg
enter
jecxz
out
inc
fidivl
dec
pop
add
jb
clc
push
mov
add
in
add
mov
icebp
xor
decl
incb
pusha
pop
dec
add
fprem
pushf
inc
imul
pop
leave
mov
or
add
adc
movsl
inc
mov
fcompl
jmp
in
push
incl
add
pushl
add
decb
add
add
incl
jnp
cld
rorb
and
cmp
cltd
inc
mov
clc
push
or
lcall
jnp
mov
incl
xor
push
push
decl
add
push
pop
pop
push
adc
sbb
add
add
add
add
movb
sbb
xor
dec
sbb
sbb
cmp
add
gs
outsl
add
je
add
add
add
gs
outsb
add
gs
dec
test
imul
push
xor
push
xor
gs
add
outsl
add
inc
je
add
test
lds
add
add
add
addl
adc
add
add
add
add
mov
movsb
imul
jge
push
mov
pop
jmp
add
jae
dec
pop
add
push
pop
or
push
sbb
cmc
xchg
xchg
mov
and
adc
adc
mov
jl
inc
push
sbb
sti
mov
jnp
test
add
stos
fldcw
es
stc
jne
cwtl
icebp
sub
mulb
or
xchg
mov
stos
mov
shl
mov
icebp
in
mov
test
jnp
mov
sarb
sbb
mov
fsubp
pop
cli
adcb
testl
popf
jge
xor
xchg
insb
sbb
stos
out
popf
mov
pop
push
clc
test
mov
lods
dec
idivl
mov
mov
data16
jmp
insl
inc
xchg
mov
std
xchg
dec
nop
adc
jnp
and
adc
mov
inc
pop
push
mov
data16
jo
mov
in
push
push
test
ret
mov
jae
xchg
mov
cwtl
ja
push
std
imul
mov
sbb
aas
int
jae
and
sahf
loope
push
lret
fbstp
and
cmp
clc
sub
inc
cmpsl
popl
leave
sub
mov
icebp
scas
jbe
leave
shlb
ss
filds
call
sub
jg
aam
mov
mov
adc
add
andl
sbb
mov
lds
rcrl
or
push
add
push
mov
xchg
xor
in
xlat
js
orb
push
xor
mov
cmpsb
sar
lods
lods
mov
idiv
dec
arpl
mov
push
ds
ljmp
mov
xchg
push
add
insb
lcall
push
insl
cli
jg
fsubrl
or
and
cmpsl
mov
inc
sbb
or
mov
dec
push
inc
xchg
movsb
jecxz
xchg
sar
cmpsb
negb
mov
ficomps
push
jecxz
adc
pusha
fsubp
fnstcw
cmpb
cs
xlat
cmp
pop
inc
mov
cmpsl
jne
ret
mov
hlt
popa
jp
lret
addb
dec
out
pop
out
xor
pop
sub
push
ret
lret
sbb
mov
xchg
loopne
xlat
cmp
mov
jl
xor
fildll
lcall
mov
popl
cmp
push
neg
jbe
cmpsl
add
in
inc
dec
cmp
lahf
daa
mov
dec
aam
xchg
xchg
jnp
dec
jle
xchg
jnp
jmp
fs
mov
ja
or
testb
pop
lea
out
enter
nop
pop
jb
inc
mov
orl
das
push
pop
add
enter
mov
in
stos
data16
stc
fildll
iretw
jb
add
sahf
orb
test
out
iret
jg
stos
mov
insl
pop
jbe
loope
lea
jno
call
jecxz
imul
add
jl
jb
pop
add
addb
push
add
push
or
cltd
ss
lods
or
push
or
inc
pop
sbb
and
inc
cld
pop
cmpsl
adc
es
jbe
adc
mov
cmpsl
outsb
data16
pop
cmpsb
cwtl
pop
jbe
push
mov
xchg
test
sub
add
repz
push
pop
cs
popa
flds
js
dec
lret
pop
pop
dec
xchg
fcmovne
xlat
fnstenv
xlat
lcall
cmp
lret
hlt
rcrl
bound
cmp
setb
add
fmull
mov
mov
sbbb
pop
mov
stos
inc
pop
fnstenv
in
out
jo
push
or
lret
push
jmp
test
pop
loope
pop
addb
sbb
dec
and
dec
dec
dec
dec
sbb
mov
xchg
cmpsl
clc
sahf
roll
jle
pop
dec
and
out
insl
and
addr16
dec
fcompl
test
cmp
mov
or
xor
mov
outsb
aam
mov
jb
outsb
aas
adc
mov
sbbb
lcall
push
xor
in
pop
lret
addr16
sub
mov
mov
add
loop
cmp
and
out
arpl
js
ss
sahf
dec
ds
fwait
xchg
sbb
pop
or
cs
mov
pop
add
cmp
add
sub
rol
xchg
fwait
dec
inc
lds
lea
repnz
jge
mov
cltd
mov
inc
jns
daa
imul
test
jae
pop
mov
lahf
stos
mov
pop
jl
mov
imul
jo
rcrl
or
push
mov
inc
cwtl
bound
jmp
inc
dec
test
cmp
stc
pop
dec
lahf
adc
fistpl
repnz
dec
shl
pop
les
and
xchg
xor
xchg
push
push
add
movsl
daa
or
mov
mov
lcall
clc
imul
popl
adcl
mov
ffreep
cmp
xchg
das
push
push
rcl
push
lock
test
add
xchg
xor
lea
mov
adc
jl
add
addr16
jno
inc
and
inc
mull
lock
stos
sbb
test
cmp
outsb
push
add
pushf
in
daa
insl
pop
inc
add
mov
push
dec
and
mov
add
outsb
cs
jb
popa
sarb
dec
out
in
xchg
dec
push
xchg
jge
xchg
mov
sahf
push
rclb
in
pushf
add
das
movsl
js
lock
loope
push
adc
mov
ficomps
lret
in
or
push
mov
lock
xor
btc
mov
inc
lea
xchg
fiadds
pop
push
mov
into
data16
jne
lock
jg
test
and
jae
jo
sbb
rolb
mov
and
in
xor
or
mov
push
pop
add
pop
mov
jl
icebp
cmp
call
addr16
test
and
fsub
pop
pop
xchg
mov
sub
out
jge
xor
jns
movsl
sub
mov
push
daa
fs
mov
loop
inc
insl
movsl
or
sarb
sarl
add
fnsave
ret
jge
jp
stos
cltd
xchg
push
push
jae
lret
sbb
or
loop
mov
les
sbb
pop
test
or
pop
pop
inc
cs
call
aad
pop
jle
stos
es
daa
mov
pusha
stos
insb
jbe
xor
dec
lcall
dec
jecxz
fbld
mov
ss
ret
imul
inc
pusha
dec
inc
cld
and
pop
icebp
andl
fnstcw
xchg
dec
stc
or
pop
xor
bound
std
sub
lods
fdivrl
jecxz
mov
push
std
sub
xor
xchg
or
xchg
jb
sahf
lds
sub
clc
shlb
ja
pop
jge
push
mov
repnz
movsl
aad
pop
sub
mov
mov
sbb
add
repz
lcall
cmc
add
test
fistps
mov
mov
mov
in
pop
aam
inc
push
sub
xchg
ds
out
jo
ficoms
xor
and
push
leave
mov
lods
cmp
jno
dec
inc
loope
sahf
sahf
rcl
fsubrl
sahf
popl
mov
jge
lds
inc
jns
imul
test
into
insl
mov
jo
shl
mov
fwait
enter
push
mov
test
mov
arpl
xchg
push
icebp
sbb
lret
add
inc
push
jg
sbb
in
pop
adc
xchg
add
pop
add
scas
push
and
adc
sbb
lea
pop
scas
lds
gs
pop
lret
sbb
sti
add
mov
inc
mov
cmp
or
orl
jmp
iret
mov
ror
xor
mov
cmpsb
and
sarl
out
int
push
xchg
scas
mov
sub
or
xor
pop
aas
sbb
mov
pop
dec
int
pusha
jno
xchg
xchg
dec
fs
int3
in
aas
jne
jae
aaa
cmp
lret
repnz
enter
jg
or
movsb
sub
mov
mov
outsl
sbb
int
in
in
call
cwtl
xchg
push
pop
daa
inc
aaa
push
cld
mov
and
inc
rcl
ret
push
mov
push
fstps
mov
sbb
mov
rcrb
pop
bound
outsb
rol
jmp
sahf
aam
aas
pop
mov
lods
pop
jnp
pusha
inc
lret
mov
scas
lret
mov
call
and
cmp
sbb
dec
insb
adc
push
and
aam
cmp
mov
fcmovbe
mov
add
push
cmp
sbb
cld
inc
xlat
ljmp
test
and
lret
sarb
stos
xchg
neg
jns
mov
ljmp
sbb
arpl
push
jo
and
push
fs
pop
aaa
push
push
sbb
arpl
cmp
and
nop
scas
mov
cmp
pop
stc
pop
push
dec
add
sbb
add
leave
lcall
jno
lea
fmul
or
fadds
adc
inc
sub
jl
sub
mov
dec
mov
mov
cmp
pop
mov
clc
pushf
lret
inc
data16
lods
xlat
addr16
scas
ret
cmp
jge
lcall
push
movsb
or
adc
add
sti
out
cmp
sbb
mov
xlat
dec
aam
out
pop
sub
ja
lahf
mov
fldcw
fdivs
shl
icebp
mov
push
adc
fidivrl
cltd
leave
or
adc
leave
cmp
xchg
add
mov
cld
mov
cmp
movlps
sub
out
add
xchg
gs
inc
mov
mov
cmpb
movb
cmp
jne
pushf
sbb
or
icebp
enter
cmp
out
call
pop
jo
shlb
xor
lret
mov
push
jnp
pop
lahf
dec
jne
lea
xchg
and
fisttpll
push
sub
mov
ret
jnp
fs
push
loop
mov
stos
mov
push
jp
or
enter
pop
sub
push
cmp
sbb
into
xlat
adc
mov
gs
fs
push
nop
insb
icebp
jl
sub
aad
push
xor
fwait
xchg
cmpsb
xchg
jge
rclb
cmp
dec
pop
cmc
mov
popf
shl
lods
xchg
or
jmp
iret
sahf
push
bnd
mov
scas
xor
je
dec
mov
or
out
xchg
pop
popa
jo
add
shrl
out
sub
push
arpl
lahf
pushf
xor
xchg
jle
bound
call
ss
mov
js
xlat
ja
fldl2e
jb
rol
push
mov
cmp
lahf
push
insb
fidivs
jmp
push
mov
into
mov
enter
push
add
add
mov
dec
jno
lcall
dec
sub
sub
push
aad
scas
test
jecxz
hlt
mov
xor
xchg
sbb
mov
ja
or
aaa
lcall
pop
or
lcall
jecxz
shrb
pusha
stc
jno
mov
daa
mov
rcrb
jo
nop
pop
out
adc
jnp
shlb
push
aam
and
xchg
cmp
loope
push
gs
jle
fldl
dec
cmovle
jo
inc
leave
lock
cmp
aad
and
mov
lds
adc
mov
sub
mov
xchg
push
daa
dec
stc
aad
sarb
xor
sub
cmp
and
jmpw
jnp
les
ja
mov
lods
push
aaa
movsl
xchg
pop
fstl
mov
fst
data16
stos
sub
cmp
movsb
mov
xor
sub
mov
mov
inc
adc
outsb
clc
mov
scas
out
lcall
scas
xchg
js
aas
negl
hlt
out
je
ja
inc
ret
lods
fidivrl
pop
movaps
rolb
subb
movsl
cli
push
sahf
stos
mov
and
popa
push
pop
lock
mov
xchg
add
in
in
mov
std
xlat
xorl
sahf
cmp
add
cs
inc
adc
mov
cmp
arpl
fists
pop
cmp
add
test
lods
ss
loope
mov
push
add
ret
mov
mov
pop
adc
lret
call
mov
gs
shl
dec
scas
hlt
fidivs
adc
or
int
xor
sbb
loop
pop
ss
negl
pop
sbb
ret
inc
je
shrl
test
fimull
icebp
push
sbb
mov
xor
stos
imul
lock
insl
cmp
adc
xlat
out
mov
mov
stos
mov
push
fistl
call
mov
push
lock
cmp
adc
in
jne
fcoms
and
daa
sub
xchg
push
popf
test
sbb
cli
pop
orb
or
cmp
pushf
test
mov
lea
les
dec
repnz
jg
sub
in
pop
popf
adc
adc
stos
cmpsb
lcall
sub
pop
outsb
xchg
es
push
pusha
enter
sub
mov
xchg
sahf
inc
nop
sarl
into
repz
lgdtl
inc
mov
jmp
jae
clc
lods
dec
shl
mov
in
out
add
push
out
sti
push
or
ror
lcall
js
or
pop
pop
xchg
imul
dec
mov
pop
lahf
xchg
xchg
mov
pop
or
movsl
pop
aaa
into
sub
and
aad
fiadds
mov
mov
arpl
les
inc
fnstcw
sub
mov
lret
sub
inc
pop
add
dec
out
clc
mov
hlt
std
xlat
jbe
jp
int3
test
dec
add
cltd
xlat
sub
xchg
jne
out
mov
cs
dec
insb
cs
aad
fsubr
inc
adc
jnp
add
adc
aad
mov
popa
arpl
test
inc
cmp
push
addr16
push
cli
pop
lods
xchg
data16
mov
pop
decl
sub
jnp
fwait
cli
mov
jmp
xor
test
sub
test
outsb
test
cmp
cmpsb
mov
arpl
dec
cmp
loope
lahf
mov
xchg
xchg
adc
push
inc
push
and
add
pop
mov
orl
stos
add
ficompl
jb
pop
mov
pop
jge
mov
pop
cmp
jns
mov
stos
xor
mov
or
inc
xor
xchg
push
or
inc
cs
xchg
pop
rcrl
arpl
cmp
arpl
inc
xchg
insb
or
lahf
lahf
fcoml
mov
out
mov
jge
mov
pop
xchg
popa
test
add
sarl
sbb
adc
and
dec
push
out
stos
rcrb
and
int3
icebp
sbb
shl
pop
and
nop
dec
movsb
test
stos
out
cli
and
fdivrl
notb
lret
test
mov
cmp
xchg
cmp
cli
add
inc
movl
nop
sbb
sarl
sti
adc
ret
xor
movl
arpl
pop
fsubl
cmpsl
popa
add
inc
cmp
sub
push
stos
mov
sbb
repz
mov
leave
stc
dec
popa
sub
loopne
nop
movsl
xor
std
or
sub
adc
repnz
mov
fcoml
pcmpeqw
pop
repnz
in
jnp
xor
sbbl
cmp
ss
jb
arpl
add
repz
or
lods
jle
add
xchg
cmp
cmpsl
sbb
xor
mov
rcl
xchg
test
mov
cmpl
mov
jnp
fldlg2
fwait
stos
mov
sub
jecxz
int3
push
xor
into
jmp
lahf
in
xchg
repnz
lret
ss
incl
rcrb
add
fnstsw
mov
jae
sbb
test
scas
cmp
dec
jbe
fwait
sbb
shrl
test
fwait
sbb
call
mov
sub
mov
add
xlat
sar
outsl
add
fldl
mov
int
jno
or
jbe
aad
stc
int3
push
imul
pop
fdivs
mov
jns
dec
cmp
sahf
push
and
mov
mov
inc
pop
push
fsubrl
loopne
xchg
ret
nop
jo
ja
xor
push
ljmp
cmp
add
pop
fldt
aam
sbb
arpl
lods
popf
mov
mov
jbe
repnz
dec
cmp
sahf
imul
pushf
outsl
lods
sub
shrl
out
jmp
int
in
mov
or
int3
jno
into
sub
ljmp
xor
mov
arpl
rorb
stc
clc
sbb
xor
adc
popf
cmp
and
and
and
and
cmp
pand
pop
and
cmp
cmp
ljmp
pop
sti
mov
xor
cmp
ljmp
mov
or
or
aaa
pop
cmp
movsb
imul
add
test
aas
mov
ljmp
mov
mov
pop
dec
loopne
out
and
inc
ljmp
ja
mov
movsb
jle
sub
sub
int3
lret
notb
lock
mov
cmp
repnz
mov
jae
add
jecxz
xchg
cltd
jmp
ja
push
mov
dec
add
daa
inc
cmp
pop
in
stos
mov
int
mov
inc
stc
out
mov
push
jne
rorl
xor
in
pop
sub
mov
dec
pop
xchg
or
lcall
mov
xchg
mov
mov
pushf
add
lock
xor
filds
mov
mov
xor
add
push
add
data16
loope
add
add
jno
add
add
add
add
add
add
add
nop
addl
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
mov
ljmp
ja
mov
jg
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
add
add
add
add
dec
jae
and
add
mov
and
add
inc
add
add
cmp
add
add
add
js
dec
add
add
add
add
add
add
fcomps
add
add
add
sbb
pop
add
add
and
popa
das
push
dec
push
subl
dec
dec
push
cld
add
sti
jecxz
jne
leave
in
js
dec
cld
adc
mov
pop
adc
mov
pop
adc
lock
or
je
call
push
leave
in
sub
or
dec
or
adcb
sbb
add
lea
pop
push
call
mov
loopne
mov
mov
add
xor
push
loopne
add
add
je
push
pop
mov
rorb
decl
add
add
lea
sbb
loopne
add
mov
or
inc
insl
adc
push
clc
add
loopne
add
add
pop
add
add
add
test
add
add
add
add
add
add
push
jae
gs
add
fs
imul
xor
add
outsb
je
inc
fs
dec
add
mov
je
sub
insb
imul
inc
cmp
outsb
jae
adcb
imul
js
add
add
bound
add
add
add
add
adc
add
add
addb
sub
add
add
push
das
je
adc
shll
pop
in
xchg
mov
xchg
xor
aas
int
ret
dec
add
fmul
pop
nop
cmpsb
ds
or
xchg
iret
xor
nop
and
adc
add
push
or
mov
and
pushf
scas
mov
xor
pop
cmpsl
or
dec
leave
mov
cld
xor
and
lods
xchg
stos
insb
in
mov
outsb
ror
mov
stos
hlt
mov
dec
stc
jae
cmpsl
mov
dec
in
fsubs
push
xor
dec
mov
xchg
mov
fsubrp
mov
lret
sti
sbb
mov
cmp
dec
icebp
and
mov
adc
mov
shlb
mov
test
push
addl
js
and
cmp
cmp
fimull
dec
pop
test
in
imul
xchg
jae
arpl
mov
fsubl
out
gs
daa
std
sbb
adc
push
sub
dec
and
add
bound
bound
sbb
sbb
fbld
pop
sahf
mov
sbb
int
jecxz
xor
and
repz
cmp
mov
sahf
inc
mov
jns
dec
nop
aad
pusha
mov
inc
dec
jne
stc
fdivl
jne
pusha
into
sarl
icebp
xchg
or
pop
icebp
and
add
cmp
fbstp
loop
loope
test
test
gs
jbe
xchg
push
mov
add
decl
and
jmp
add
pop
jge
cli
fisubs
add
mov
xor
jmp
xchg
enter
xchg
inc
loopne
cmp
cmc
rorl
je
nop
adc
push
dec
stos
adc
add
push
jle
pop
jecxz
mov
outsb
xchg
mov
sub
cmpsl
pop
aas
jmp
add
decb
add
aas
in
inc
mov
push
push
arpl
xchg
ffreep
mov
inc
dec
ja
ret
xor
mov
pop
mov
fbstp
addl
mov
out
insb
cwtl
mov
outsb
push
cmp
cld
repz
cmp
dec
mov
iret
fisubs
sub
push
mul
ljmp
out
pop
inc
lret
add
retw
mov
scas
sub
adc
jne
add
out
xchg
cmp
jecxz
push
fdivl
mov
int3
fisttpl
or
lret
movsl
mov
and
inc
adcl
lret
jnp
adc
inc
cmpsb
fs
je
sbb
pop
rcrl
in
xor
cmp
inc
pop
xchg
ss
in
into
push
mov
push
mov
mov
sbb
xchg
fcmovnbe
pusha
mov
repnz
cwtl
jns
ret
in
and
stc
pop
loop
out
loop
aad
fisubl
movsb
pop
jo
xchg
cmpsb
out
dec
push
xchg
adc
cmp
dec
inc
ret
mov
push
in
jae
repnz
xchg
repnz
repnz
nop
into
sbb
sub
mov
dec
into
fstpt
scas
daa
nop
push
sbb
or
sub
pop
movsl
cmp
sbb
loopne
stos
jg
fstps
popf
arpl
sahf
adc
mov
mov
decl
inc
add
std
fnstcw
addr16
mov
aad
gs
daa
jp
ja
pop
test
ss
add
loopne
cmp
lret
adc
push
js
pop
sub
mov
test
nop
dec
sbb
or
filds
ret
mov
mov
dec
sbb
push
and
push
jp
mov
xchg
shlb
dec
xor
mov
cwtl
aas
jb
xchg
dec
push
or
shr
daa
cmpsl
xor
dec
xor
dec
jnp
mov
push
clc
push
int3
push
out
cmp
sbb
dec
ss
add
lahf
mov
cli
outsb
fists
aad
nop
xchg
lret
repnz
mov
pop
dec
mov
jne
dec
sub
negl
or
pop
and
mov
push
orb
add
stc
or
and
inc
pop
fwait
outsl
xchg
jge
insb
add
fistpll
movzbl
lcall
leave
insb
jmp
insl
lcall
and
fdivl
inc
xlat
xorb
fs
test
inc
in
and
adc
roll
jbe
adc
push
adc
cmp
pusha
jbe
jbe
mov
sti
sub
dec
mov
pop
mov
mov
jno
mov
jl
leave
jg
sbb
ret
adc
dec
popf
clc
lods
loope
jecxz
or
sub
push
xor
cltd
cmp
mov
shrb
in
push
lods
cld
xor
cmp
clc
xor
enter
fdivl
mov
int3
ret
push
mov
ljmp
fisttpll
mov
inc
cmpxchg
jmp
in
into
cmp
pusha
push
add
push
jns
push
adc
lcall
push
push
fidivl
push
mov
out
and
fdivrs
or
adc
cli
mov
cmpsb
sti
outsl
rcrl
or
fs
arpl
icebp
ja
jmp
arpl
sbb
loope
add
jno
lods
nop
jecxz
mov
js
out
orl
hlt
pop
shlb
mov
loope
jp
icebp
mov
lds
mov
jne
pop
rolb
xor
sbb
leave
or
popa
push
jg
cmp
cmp
ja
icebp
mov
push
shrl
stos
out
movsb
adc
lods
sub
das
es
pop
xchg
mov
mov
out
mov
push
xchg
les
cmp
mov
test
mov
cmp
icebp
and
neg
push
int
stc
mov
fsubrl
xchg
push
pop
xlat
xlat
sbb
pop
cli
insb
jge
enter
or
pop
adc
repz
lcall
inc
fstp
sbb
and
xchg
add
cmpsb
pusha
mov
mov
sub
mov
pop
test
jno
ret
jnp
pop
in
mov
xor
mov
inc
pop
add
mov
or
push
mov
sbb
lret
inc
insl
ja
xchg
sub
jb
dec
fisubrl
sub
xor
adc
pop
adc
pop
xchg
xchg
out
xor
mov
add
mov
jo
xor
lcall
xchg
fsubrs
dec
fwait
xchg
mov
mov
imul
daa
lahf
mov
add
inc
adc
mov
pushf
mov
cli
addb
xor
xchg
xchg
sbb
sub
iret
andl
sub
inc
fmull
nop
out
pop
push
sbbl
jle
aaa
enter
pop
dec
mov
sub
mov
and
jne
sub
add
mov
push
xchg
int
outsl
dec
jg
add
and
mov
stos
sub
scas
mov
daa
xchg
pushf
push
ret
in
imul
pop
sahf
cwtl
ss
jbe
mov
addb
in
rclb
lea
out
mov
pop
fcmovnb
in
and
inc
jne
fwait
xchg
cmp
push
ja
sbb
sbb
or
push
mov
cmp
imul
pop
insl
addl
sbb
scas
fcomps
adc
outsl
and
loop
imul
mov
mov
mov
dec
mov
cld
mov
out
loop
adc
pusha
cmpsb
es
or
std
pop
orl
add
movsb
inc
sbb
imul
dec
fistps
add
cmpsb
inc
fisubrs
xor
mov
mov
jge
mov
scas
ljmp
das
cltd
jmp
pop
insb
mov
jle
fdivs
and
scas
insl
push
xor
xor
mov
ffreep
into
mov
imul
and
or
add
jge
xor
adc
in
or
jbe
ja
cmp
add
inc
pop
shlb
sar
jmp
mov
rorb
inc
adc
and
inc
pop
sub
lea
lret
mov
lea
lock
fsubl
mov
popa
add
test
cmpsl
js
add
fsub
addr16
test
fstpt
mov
push
add
mov
sar
insb
mov
cmp
repz
incl
les
rorb
pop
sbb
inc
dec
les
xchg
push
inc
imul
pushf
adc
xchg
dec
xchg
dec
sar
lods
into
aas
or
adc
pop
dec
lock
lret
xor
push
and
inc
lcall
ret
cmp
inc
fildl
pop
shr
cmp
test
jmp
stos
and
cmp
inc
aad
inc
test
push
mov
mov
cmpsl
fnstsw
pop
jecxz
rclb
ret
inc
jmp
xchg
cltd
and
dec
sbb
shl
or
leave
hlt
jp
inc
cld
out
mov
shlb
lods
sti
lahf
push
cmp
xchg
and
test
pop
repnz
orl
scas
scas
insl
cmp
pop
test
stos
lods
pop
jecxz
cmpb
mov
mov
rcll
icebp
loop
xor
cwtl
mov
mulb
rorl
jp
push
stos
scas
stos
lock
xchg
call
lods
or
inc
enter
jl
cmpb
jnp
fsubp
sbb
mov
js
imul
push
incb
sbb
leave
sbb
cld
mov
data16
dec
lea
add
std
movsb
and
loop
mov
jle
mov
mov
aam
push
mov
outsl
push
das
loop
add
push
subl
mov
push
daa
jmp
pusha
in
lods
nop
mov
movsb
fdivl
insb
push
jp
push
out
xchg
mov
or
cwtl
sti
std
adc
push
stos
sub
sti
lret
cmpsl
andl
int
test
inc
fldenv
sub
mov
inc
sub
xlat
arpl
loope
ret
jle
jmp
les
shll
push
icebp
jecxz
inc
push
loopne
fs
lret
je
push
out
ja
inc
les
mov
sub
cmp
cmp
pop
pusha
aam
adc
mov
cmc
jmp
cld
and
aaa
add
xchg
shlb
sub
data16
add
ficompl
out
cmpb
sbb
loop
dec
pmaxub
mov
popa
xchg
add
imul
ja
or
push
and
jle
lret
or
and
push
or
mov
xor
xlat
stc
dec
pop
xor
dec
mov
jae
inc
lock
movsl
and
dec
push
ss
xor
gs
aam
jnp
jp
xchg
imul
pop
mov
pop
lods
push
fsubl
inc
andl
out
adc
outsb
adc
test
ficoms
stos
cs
push
inc
dec
negl
cs
mov
fcompl
xchg
lahf
sbb
add
fmull
shl
adc
jmp
je
cltd
add
in
add
pop
mov
dec
mov
jg
jmp
fidivrs
jmp
in
mov
add
movsb
mov
enter
mov
imul
popl
je
dec
jl
jns
cmpsl
xor
ffree
jnp
dec
lcall
xchg
stos
mov
inc
scas
xor
gs
mov
mov
push
sbb
push
orb
or
out
mov
mov
cmp
idivb
jno
sub
popf
stos
sti
xchg
insl
xchg
push
js
push
and
inc
popa
in
pop
push
mov
in
mov
mov
dec
rclb
vcvtsi2ssl
pop
pop
icebp
fwait
pop
xchg
and
jnp
jno
inc
mov
adc
cmp
sbb
cmp
shrl
jmp
loopne
mov
rcrb
movsl
repz
mov
loope
std
xchg
push
lahf
inc
mov
and
push
sbb
iret
lds
test
cmp
in
add
cmp
and
jg
icebp
push
xchg
inc
pop
lods
outsl
or
cmp
outsl
andl
insl
jbe
pusha
jge
js
mov
iret
shlb
sbb
and
jo
lahf
out
loopne
adc
bnd
inc
jbe
insl
das
mov
mov
or
out
repnz
xor
pop
cmp
les
mov
repnz
mov
pusha
jg
or
jg
fnsave
fistpl
rcll
iret
sbb
dec
pushl
jecxz
pop
orb
dec
pop
fisubs
xchg
movsl
clc
test
adc
or
jecxz
imul
push
sti
mov
add
subb
andb
add
out
cmpsb
jp
cmp
jecxz
std
sti
fildl
cmp
and
test
dec
push
xchg
test
sub
fsts
push
inc
pop
jp
pop
dec
lcall
pop
mov
notl
hlt
shl
aam
sbb
or
xchg
popa
dec
add
out
push
mov
mov
cltd
stos
jae
cmpsb
out
fisttpll
cltd
pop
push
sub
rorb
push
fldt
into
ret
mov
sti
push
mov
andl
sub
loopne
sbb
mov
sbb
lock
pop
dec
adc
repz
lret
pop
jmp
testl
jb
and
push
sbb
and
mov
cmpsl
mov
lock
inc
add
jne
xor
divb
add
out
js
inc
lret
dec
push
insl
cli
cwtl
addr16
ss
add
mov
pop
sub
mov
lahf
xor
inc
outsl
les
lods
add
fsqrt
stos
jecxz
in
pop
ds
push
push
fsubs
sbb
adc
mov
sub
jne
hlt
nop
aas
cmp
loopne
jge
sahf
fnsave
mov
ja
popf
or
mov
out
icebp
sub
xchg
xor
adc
pushf
sbb
xor
cmp
push
push
mov
jge
sub
sub
orb
sub
hlt
jecxz
add
sub
push
jno
adc
or
push
sti
xor
loope
addr16
jno
inc
fimull
cmp
xor
popa
mov
xchg
jae
xchg
ret
mov
pop
arpl
cmp
jl
roll
push
roll
cltd
xor
ret
pop
int
xchg
test
ret
arpl
in
xchg
out
mov
push
push
push
vmovhps
shll
mov
ss
mov
lock
sti
adc
sub
xchg
shlb
int3
sub
mov
test
fcoms
int3
repz
lods
sahf
pop
pop
arpl
xor
pop
mov
lcall
cmp
or
pop
add
fneni(8087
negb
fldln2
daa
test
test
push
inc
sbb
enter
mov
fidivs
push
mov
jnp
mov
inc
and
into
lock
arpl
mov
push
and
xchg
jno
popa
mov
or
out
movsb
lret
lds
push
stos
shrb
fwait
aad
or
mov
jmp
ss
aaa
test
scas
inc
push
xlat
popf
and
movsl
enter
fidivl
add
pmuludq
insl
mov
sub
cmp
popa
les
subl
inc
push
inc
pop
mov
loopne
dec
ret
add
xchg
rcrl
and
xchg
pop
or
stos
push
jg
mov
into
popa
cmpsl
pop
cmp
fistpll
sbb
push
test
lock
xlat
lods
xchg
jno
cltd
rcr
pop
test
sbb
mov
cmp
jb
xchg
jl
test
lcall
fimuls
mov
mov
repz
sub
lahf
sbb
mov
das
add
pushf
xor
sub
loope
mov
sbb
dec
jle
shl
pop
hlt
test
mov
push
je
jge
cmp
movsb
cmp
or
xchg
add
mov
mov
enter
lea
repnz
mov
insl
aad
rolb
aaa
mov
mov
repz
loop
inc
les
rcrl
fimull
adcb
mov
jle
adc
adc
mov
add
add
out
push
dec
cmc
add
test
pop
jo
je
mov
out
add
dec
loopne
dec
out
icebp
mov
test
push
fwait
outsl
add
repnz
pop
loop
test
stos
jb
add
xor
repz
cmc
mov
jl
rcrb
xchg
outsb
jne
and
stos
test
repnz
add
adc
sbb
or
or
cmp
test
cld
mov
jno
push
pop
test
adc
add
dec
scas
lret
insb
mov
lods
pushf
out
push
cmp
sti
adc
out
std
hlt
jae
xor
sub
pop
or
gs
cmpsl
xor
in
pop
mov
addl
mov
pop
xchg
pop
test
adc
sub
jne
enter
xor
lock
int
jmp
lock
xor
cmpsl
inc
jns
xchg
sarl
sti
adc
mov
sbb
mov
push
mov
pop
mov
ljmp
mov
push
inc
ret
inc
and
adc
movsb
push
lea
dec
out
movsl
xor
and
mov
cmp
iret
adc
adc
adc
jbe
xchg
pop
mov
push
inc
mov
or
inc
in
pop
mov
pop
pop
lock
pushf
pushf
fisubrs
pop
mov
cmp
out
sub
outsl
adc
std
andb
add
in
and
jo
ljmp
push
xchg
mov
mov
out
jle
fsubrp
push
jg
js
mov
and
and
lcall
ja
loope
movsl
xorl
shr
hlt
sub
outsb
mov
out
inc
fwait
sbb
xlat
pop
cltd
test
push
out
stos
ret
inc
push
data16
cmp
out
data16
cmp
cwtl
xor
out
jge
cmp
mov
imul
sti
into
add
scas
aaa
adc
inc
test
stos
push
xchg
loopne
and
add
xchg
aad
mov
inc
dec
aas
sub
loope
cltd
sbb
fnstcw
and
cmp
inc
sbb
in
ret
nop
testb
ja
push
inc
js
mov
add
add
inc
add
push
add
repnz
clc
add
add
add
bound
add
add
add
add
adc
add
add
addb
add
add
add
add
xor
xor
xor
add
add
add
add
addb
mov
stos
add
dec
int3
int3
int3
int3
int3
int3
int3
int3
nop
incl
add
jns
cmpb
add
add
add
add
jmp
adc
cmp
add
add
add
add
add
add
add
and
add
add
mov
inc
add
add
add
add
cmp
xlat
add
add
add
pop
gs
push
imul
add
outsb
dec
jne
push
mov
and
sbb
push
inc
push
cld
xchg
lea
mov
mov
mov
mov
inc
jne
call
xchg
lea
std
add
ret
and
clc
lea
sbb
add
mov
mov
push
test
decl
add
adc
adc
mov
loopne
add
adc
pushf
push
add
push
call
push
or
adc
adc
inc
add
add
push
jp
push
push
push
clc
cltd
add
push
enter
cld
incl
mov
je
sbb
add
add
std
add
add
add
stos
fiaddl
addb
add
add
add
add
cmp
push
inc
add
cs
insl
outsl
inc
imul
outsl
je
imul
popa
pop
inc
cltd
inc
je
dec
and
add
insb
push
gs
push
adc
addr16
push
jae
push
popa
pop
ret
cs
arpl
arpl
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
stc
add
add
add
sub
add
add
add
inc
jae
lahf
mulb
add
mov
arpl
lret
ret
push
daa
adcb
xchg
popa
jmp
out
pusha
xor
test
enter
adc
push
pop
xchg
mov
popf
into
sbb
adc
pushf
jecxz
mov
sti
adc
cli
sbb
add
and
icebp
xor
sbb
sub
out
stos
add
inc
xorb
aas
sbb
mov
pushf
cmp
gs
sub
add
sub
jmp
xor
cmp
mov
popa
pop
dec
popf
in
mov
mov
js
and
add
filds
dec
test
inc
adc
sarb
fiadds
pop
mov
jl
out
mov
ja
sbb
pop
fdivrs
add
cmpsb
dec
xor
fdivs
adc
mov
pop
ret
push
imul
mov
nop
popf
xchg
cmpsl
aaa
mov
xor
xchg
push
dec
xchg
insb
jnp
dec
test
jl
push
sahf
xorb
leave
inc
dec
mov
sbb
xchg
lock
xchg
int3
rorl
jmp
and
adc
sub
sahf
cmp
rcr
int
lahf
scas
dec
cmp
int
pop
xchg
cmp
rsm
mov
and
das
andb
xlat
loopne
fsubrs
in
mov
and
dec
pop
pop
xchg
arpl
mov
jae
xor
movsl
shlb
icebp
push
jno
add
or
aas
cmp
adc
xchg
popa
xchg
aas
int3
in
adc
sti
push
dec
aam
call
mov
pop
sbb
dec
add
test
sbb
or
stc
dec
mov
sub
cmp
sub
sti
aas
cmc
mov
test
mov
stc
in
fdivs
faddl
inc
and
xor
push
push
leave
dec
and
push
xor
cmp
jns
push
xchg
pop
cmp
dec
aaa
push
inc
in
sbb
cwtl
lea
jae
loopne
and
cmovnp
inc
jns
and
jnp
lret
popf
or
jbe
movl
out
push
cltd
mov
add
in
jg
sahf
into
xor
mov
pop
out
push
in
rorb
pop
xchg
cmp
push
mov
mov
call
sbb
out
pushf
jmp
out
fmuls
rcrb
stos
mov
fs
mov
lods
dec
push
lret
aad
mov
div
ljmp
sti
push
cmp
aam
xchg
sarb
in
and
mov
mov
in
jbe
pop
imul
xor
inc
mov
roll
shlb
jnp
jmp
neg
loop
out
cmp
fwait
ret
mov
or
mov
loop
inc
in
js
xchg
inc
cld
in
cmpsb
sub
dec
jae
gs
push
jmp
in
mov
aaa
cmpsb
movsb
pop
stc
jns
ret
push
sbb
outsb
ror
cmp
fstpt
mov
dec
ljmp
inc
sub
mov
daa
es
lcall
pushf
add
sbb
and
ss
push
fwait
or
mov
cmc
jnp
xchg
mov
scas
pop
dec
push
cld
lret
arpl
cwtl
or
sub
jecxz
mov
fldenv
aam
frstor
shrb
idiv
pop
mov
pop
cmp
xor
sub
in
jne
dec
pop
mov
add
pushf
xchg
js
xchg
push
mov
xchg
inc
or
push
fstl
movsl
adc
fmull
sub
push
cli
and
inc
mov
cmp
and
repz
push
mov
mov
lods
outsb
lret
cmpsb
mov
xchg
mov
add
lds
sbb
cs
fcomp
fmulp
pop
ljmp
fisubrl
add
dec
adc
add
cmc
loop
mov
cltd
xchg
xchg
xchg
repz
das
clc
push
popl
push
sbb
push
lcall
push
iret
repnz
shl
aas
adc
push
loop
pop
in
pusha
dec
movsb
lret
jmp
leave
das
ficoml
sub
push
out
cmp
cmp
jecxz
jg
cmp
xor
mov
sbb
popa
jae
fldenv
ds
sub
sub
pop
mov
lock
mov
add
mov
jl
jp
popa
dec
mov
xor
cmpsb
cmp
addr16
xchg
lds
pop
inc
pop
loopne
ss
xor
jg
pop
xor
gs
cmp
xchg
mov
pop
sbb
dec
sub
int3
lods
bound
push
adc
std
sbbb
std
mov
pop
push
adc
enter
pop
fisubrs
mov
xor
in
lods
inc
xor
xchg
lds
iret
add
lds
or
xchg
mov
pushf
outsb
popa
es
adcl
mov
jbe
mov
dec
jmp
arpl
mov
sbb
add
addl
and
out
jge
in
aas
aad
jecxz
clc
mov
decb
adc
into
jmp
cmp
test
inc
cmpl
jg
enter
inc
sub
das
pop
es
sub
jo
sbb
or
sub
lahf
movsb
mov
mov
das
xchg
xor
mov
fistpl
pop
in
imull
ljmp
xchg
imulb
sti
sub
pop
data16
inc
pushf
je
pop
jp
inc
ds
xor
sbb
outsl
xor
imul
lret
iret
test
pop
fnstenv
out
fcoml
push
in
adc
aaa
inc
inc
mov
xchg
pop
cmp
scas
shll
inc
add
repz
pop
fcomps
push
fsubrs
mov
push
fisttpl
pop
out
cmpsl
scas
dec
std
push
add
sti
xorl
aaa
cmp
cmpsb
mov
pop
xor
fbstp
out
stos
mov
cmp
mov
sub
lea
loop
daa
inc
cmp
cmovb
fdivl
dec
idivl
in
push
movsl
sbb
bnd
push
dec
daa
xor
cmp
in
std
adc
insb
xchg
mov
pop
push
sbb
leave
lret
dec
pop
incl
pop
int
dec
idivl
jmp
dec
std
fstpl
xor
lret
cmp
mov
xlat
push
pop
fwait
sub
jle
int
dec
push
and
scas
push
arpl
sub
xor
sbb
arpl
push
pop
mov
xor
or
jnp
mov
ret
cmp
sub
cmpsl
sbb
cmp
mov
sub
ljmp
lcall
mov
movsb
mov
sbb
test
pop
and
daa
xchg
mov
aad
jb
jae
push
and
mov
popa
xorb
imul
jl
or
movsb
hlt
push
lcall
sbb
or
xchg
addr16
sub
xchg
std
movsb
sbb
mov
into
sub
mov
mov
std
sub
cmp
jl
adc
sub
jmp
dec
test
mov
or
cltd
pop
dec
push
daa
popf
pop
push
push
ljmp
push
pop
sub
rclb
or
xchg
adc
lock
and
pop
ljmp
push
orl
mov
cmp
inc
jg
loope
mov
and
popf
out
pop
add
clc
jb
ficomps
cmp
rcrb
xor
mov
mov
outsb
or
test
ja
aam
add
cmp
cmc
aas
push
ret
xchg
mov
dec
mov
jmp
in
sbb
imul
inc
add
testl
ljmp
packuswb
push
adc
add
test
push
mov
jo
std
dec
dec
icebp
cld
push
xor
jl
cmpsb
fmull
mov
insl
push
add
fs
pop
mov
add
into
add
dec
rcll
push
fldl
jge
sbb
sarl
outsl
dec
dec
pop
mov
sbb
mov
addl
loope
insb
ja
add
leave
or
stos
sahf
jo
push
add
icebp
sbb
push
jecxz
sbbl
lret
sub
pop
loope
and
push
xchg
push
in
mov
jno
in
push
sbb
mov
mov
mov
repz
ljmp
jge
mov
leave
mov
lcall
jge
fidivrs
jl
pop
loopne
imul
jnp
dec
sub
inc
push
lret
xchg
ret
sub
loop
jns
xchg
std
fcoml
pop
jl
cmpsb
dec
pop
mov
jno
stos
inc
pop
xchg
ret
pop
xchg
sub
cmp
push
mov
jnp
push
mov
sbb
cmp
loop
xorb
push
testl
or
loope
dec
pop
fsubl
in
mov
or
push
jle
xor
lds
mov
jnp
dec
pop
push
sbb
mov
push
or
cmp
push
push
xchg
or
push
sbb
jns
jg
xchg
loopne
add
shrl
call
sbb
dec
cwtl
lahf
call
outsb
push
ret
adc
iret
add
or
nop
fstl
adcb
es
or
jne
xchg
jno
mov
dec
dec
int3
ljmp
xchg
push
xor
test
inc
add
jmp
or
outsl
mov
jb
adc
out
rorl
inc
orl
mul
xlat
push
addr16
test
movsl
in
or
in
insl
call
and
inc
scas
mov
xchg
adc
dec
jmp
aad
sub
mov
push
repnz
test
mov
sbb
es
jp
test
cmp
imul
iret
xchg
or
add
notl
mov
int3
lahf
dec
jg
mov
sahf
push
mov
jge
mov
jmp
push
pusha
aam
lods
cmp
out
cmp
inc
dec
std
sub
lods
inc
rcrb
mov
aas
std
pushf
add
insl
icebp
outsb
xchg
mov
ja
testl
sub
lahf
mov
xchg
test
into
cmpsl
mov
movsb
fstl
push
and
fiaddl
cmpsb
mov
or
neg
jp
repnz
in
das
cmp
rol
or
jp
xor
pop
sbb
ljmp
scas
scas
pop
push
je
jp
lahf
sub
jmp
test
sbb
scas
xor
stos
gs
add
add
add
dec
stos
push
sub
je
xor
sbb
and
xor
fimull
and
aad
stos
je
mov
in
mov
bnd
lock
xchg
arpl
adc
call
scas
icebp
dec
sub
xor
rcr
pop
nop
pop
stos
clc
sarl
scas
popa
rcl
jecxz
dec
or
lcall
or
mov
and
fcmovnb
subb
mov
jno
flds
fimuls
dec
int
out
jnp
jp
loope
xor
gs
mov
adc
test
jge
imul
inc
inc
popa
cmpsb
jnp
xchg
adc
mov
jne
and
adc
xchg
sbb
cmp
pop
gs
insb
iret
mov
loope
aam
or
idivb
or
jns
ret
add
inc
repnz
ret
ss
mov
in
aam
inc
jmp
jg
fcmovu
xor
jns
and
sub
push
xor
mov
dec
call
das
adc
push
pop
ds
out
test
mov
jae
xor
xchg
dec
xor
in
adc
xlat
ljmp
loop
sub
adc
inc
xchg
fdivrl
inc
xchg
mov
repz
pop
cmp
fucomi
dec
sbb
idivl
xchg
add
mov
push
pusha
xchg
in
jne
repnz
pushf
cmc
test
jle
ret
cmc
or
test
cmp
mov
jb
xor
adc
push
xchg
es
mov
dec
in
or
mov
inc
mov
pop
mov
rcrl
test
mov
cltd
pop
pop
icebp
xchg
sub
mov
icebp
pop
sbb
data16
push
jl
sarl
cld
gs
and
insb
lods
inc
in
js
lods
sbb
mov
push
cmpsl
loop
aam
inc
arpl
jg
cmp
nop
ljmp
cmp
adc
out
ss
mov
and
mov
sarb
mov
or
bound
cmpsl
dec
out
int3
in
cwtl
stos
or
sbb
sti
rolb
sub
dec
dec
xor
sbb
movsl
mov
lods
jne
cld
mov
xor
jb
pop
push
jmp
loop
mov
idiv
dec
fcmovb
push
sbb
adc
xor
mov
jmp
mov
mov
nop
xor
inc
pop
leave
cli
xor
sbb
or
pop
ret
aam
popf
mov
mov
or
mov
div
popf
out
loopne
aas
stos
cmpb
mul
lods
je
jns
mov
adc
mov
xlat
push
push
push
xor
inc
and
cltd
xor
inc
js
or
push
xor
jno
call
xchg
cli
and
xor
sbb
cmc
shll
adc
movsl
movsb
outsl
test
scas
adc
and
sub
arpl
dec
push
dec
and
mov
fdivs
into
stos
push
cmp
int
test
xor
fisttps
xor
or
stos
insl
mov
cwtl
xor
out
push
cltd
enter
and
push
loopne
sti
dec
test
js
cmp
outsl
int3
add
jg
xor
out
dec
xchg
jnp
push
push
arpl
shlb
mov
pop
lock
leave
dec
inc
jge
push
outsb
leave
cmp
out
sahf
hlt
movsb
push
es
mov
sub
outsb
adc
add
adc
dec
mov
jl
inc
xor
test
dec
push
inc
mul
cltd
or
leave
movsb
ret
pop
push
jne
popa
sbb
mov
mov
pop
sbbb
xlat
adc
int
xchg
mull
pop
into
movsb
imul
sbb
mov
mov
sbb
or
mov
pushl
rcl
int3
inc
xchg
test
sarl
clc
js
xor
or
xchg
push
aad
js
popa
and
pop
fiaddl
test
dec
call
dec
je
or
lods
cs
adc
dec
xor
or
or
xchg
and
cmp
fimull
scas
jnp
mov
cmp
or
jo
fimuls
mov
stos
ja
into
gs
into
or
jge
cli
mov
sbb
jne
pusha
inc
sub
push
and
inc
lahf
popf
push
jp
daa
lods
add
in
cmpl
add
and
ss
sub
out
cmpsl
mov
xchg
or
add
push
aaa
mov
xlat
push
mov
rorb
inc
adc
stc
loope
pop
lahf
mov
mov
fistpll
sbb
add
inc
push
push
dec
mov
jns
ret
pop
frstor
xor
lcall
loope
mov
cld
ss
imul
sbb
push
pop
push
shl
rcll
and
sahf
cmp
xorl
pop
cld
dec
cmpsb
adcb
cmp
repnz
in
mov
idiv
loop
push
sbb
mov
push
pop
lahf
inc
cmp
fiaddl
sub
nop
es
sbb
sar
xor
out
fadds
cmp
mov
mov
shl
arpl
stos
loop
faddl
pminsw
xlat
daa
sub
decb
mov
or
es
xor
enter
bound
je
dec
in
dec
mov
jno
in
call
push
ja
push
fcomps
pop
test
pusha
mov
lahf
adc
insl
ds
fwait
mov
daa
xor
jle
les
mov
repnz
pop
aas
pop
fdivrs
lret
out
stc
xor
sbb
std
jo
mov
and
test
rcrl
insb
das
jmp
push
mov
jns
test
jae
or
loop
or
jo
enter
hlt
add
loopne
add
inc
sbb
jno
insb
dec
mov
popf
ja
or
les
mov
popf
ja
sub
das
push
mov
jp
rclb
iret
out
mov
mov
inc
jle
call
arpl
or
push
cmpsl
sti
ljmp
adc
and
and
xchg
iret
jmp
mov
loopne
and
lret
arpl
and
push
dec
fldz
xchg
inc
dec
outsb
inc
lcall
inc
push
pop
gs
sub
hlt
btr
imul
lods
es
pop
iret
jle
or
ret
cmp
or
jge
jo
dec
xor
and
xchg
sub
sahf
xor
mov
aam
inc
mov
pop
mov
add
in
orl
mov
gs
push
cwtl
imul
das
cld
test
pop
loopne
adc
and
mov
test
lahf
mov
xchg
into
jne
out
sub
jmp
popf
nop
cmp
xchg
aam
sub
scas
inc
xor
andl
out
cli
jbe
pushf
cmp
xor
lret
aaa
pop
std
push
jmp
mov
repz
pop
jns
jecxz
push
lods
mov
jmp
jecxz
aad
cmp
xor
call
add
sub
psllq
and
jns
add
mov
out
xchg
push
fisttpl
lds
in
sbb
ret
sbb
in
lock
cmc
stos
fildl
dec
jb
sub
pusha
jmp
pop
xchg
test
jbe
cmp
stos
sub
jmp
je
and
or
mov
sahf
sbb
cmp
dec
pusha
jae
xorl
idivb
jno
seta
out
lock
cs
loop
add
jl
cmpsb
jnp
out
jnp
push
mov
lock
daa
in
or
jns
or
push
hlt
in
or
mov
mov
cmp
push
ds
flds
sets
mov
loope
add
add
add
cmp
add
add
add
add
add
cli
add
flds
add
add
add
add
add
js
add
add
add
fadds
add
stc
add
add
add
sub
add
add
add
add
add
add
add
cmpb
stos
add
ja
adc
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
and
add
push
and
gs
gs
add
or
adc
add
adc
add
add
add
add
add
add
add
add
add
add
arpl
mov
add
add
add
sbb
sbb
sbb
add
add
add
jae
cs
inc
arpl
push
popf
add
add
je
mov
add
mov
fimull
mov
adc
cld
inc
pop
mov
inc
cmc
mov
decb
out
testb
adc
push
add
mov
enter
pop
push
adc
jge
out
in
add
push
mov
mov
gs
add
add
add
sar
push
decl
push
push
push
cmp
cmp
mov
push
jb
adc
mov
lea
cld
inc
add
lret
clc
cmp
mov
cmp
adc
adc
add
sbb
pop
add
pop
and
add
add
add
add
add
sbb
sbb
sbb
pop
add
add
imul
das
push
dec
outsb
gs
inc
insl
inc
imul
gs
mov
insl
add
add
gs
arpl
gs
popa
inc
je
mull
push
outsl
jb
repz
jne
sub
add
add
add
add
add
add
aam
add
add
add
add
add
add
add
mov
add
add
add
hlt
add
movsl
xchg
cmp
mov
int
jge
pushf
ljmp
or
xor
ljmp
sbb
mov
cs
dec
cs
rorl
stos
pop
sahf
imul
and
pop
or
mov
push
jmp
mov
repz
decl
pop
push
or
jno
fists
push
mov
and
push
fadd
enter
dec
mov
into
or
xchg
pop
int3
lods
fsts
jb
inc
mov
test
int3
es
xor
out
icebp
outsl
dec
ja
and
cwtl
testb
pushf
cmpsl
arpl
mov
mov
lahf
xchg
add
jbe
push
sbb
push
cltd
mov
mov
or
loopne
pop
outsl
inc
push
dec
shll
test
popf
add
into
mov
and
jae
push
adc
loopne
pop
sub
shlb
push
icebp
fstpl
fcompl
es
faddl
xchg
nop
pcmpgtb
ja
xchg
rcrb
pop
mov
mov
mov
sbbb
xchg
mov
loopne
jg
js
dec
cmp
mov
add
scas
lcall
stc
mov
imul
add
insb
pop
lahf
mov
mov
out
inc
roll
cmpsl
push
fists
sbb
in
imul
jb
popf
xchg
insb
call
movsl
mov
or
in
inc
inc
mov
popf
push
mov
jnp
xchg
mov
pop
ffree
pop
cmp
addr16
std
sbbb
mov
clc
pop
push
in
scas
xor
je
fldcw
popa
idivb
mov
mov
sub
fidivl
mov
fs
test
mov
in
pop
testl
push
push
lret
pop
lret
xor
adc
nop
loope
jecxz
xchg
cld
mov
push
in
clc
and
add
cmpsb
pushf
xor
mov
xchg
mov
pop
test
xor
insb
shlb
push
mov
enter
sbb
hlt
data16
mov
iret
in
fsts
lods
sarb
push
pop
decb
out
and
adc
arpl
mov
arpl
pop
xchg
push
mov
mov
decl
dec
push
nop
bound
adc
fdivrl
testb
push
hlt
nop
insl
sub
je
lcall
nop
shl
int
cltd
pop
mov
and
and
lock
add
rcrl
rorb
mov
in
pusha
pop
mov
incb
int
jne
std
xchg
mov
std
jg
std
xlat
test
imul
jns
or
mov
or
mov
pop
jecxz
adc
imul
cmpsl
loop
or
movsl
push
fisttps
mov
xchg
cwtl
rolb
cmp
sub
xchg
loop
fists
or
cmp
scas
lock
js
and
aaa
mov
xor
pop
test
movsl
mov
mov
mov
dec
test
and
pop
test
inc
cltd
cmp
inc
mov
daa
mov
fmull
lds
inc
cli
or
sub
or
add
push
stos
mov
xchg
test
xchg
pop
adc
mov
addr16
scas
cltd
dec
gs
mov
xchg
or
jmp
mov
mov
imul
add
sbb
test
leave
inc
add
sub
dec
insl
sahf
mov
sbb
and
scas
imul
jle
push
cmp
es
fists
jmp
jno
pushf
hlt
or
fwait
scas
clc
testb
lret
iret
arpl
rcll
cmp
loope
sub
and
dec
mov
mov
cmp
dec
or
jmp
jns
ja
icebp
jne
movsb
pop
adc
cmpsb
push
int3
mov
into
lea
adc
lahf
lods
mov
loop
int
sub
pop
or
mov
push
fcmovnu
dec
xor
pop
mov
xchg
xor
ds
orb
mov
fcmovne
nop
xchg
sub
jmp
sbb
repz
mov
cld
jmp
and
je
inc
test
sbb
push
dec
cs
push
jecxz
xchg
pop
fprem
adc
ret
push
iret
les
fistpl
stos
mov
dec
or
lret
pop
ja
add
rcr
into
data16
ret
sbb
notl
add
pop
ss
mov
jp
dec
shrb
imul
add
and
and
and
push
lret
sub
push
add
shll
inc
pop
cmp
xor
out
in
mov
and
mov
cmp
repz
xor
subb
call
inc
sahf
sti
fadd
jg
shrl
dec
adc
cwtl
outsb
inc
adc
jl
pop
cmpsb
xor
call
clc
mov
adc
bound
dec
mov
inc
test
mov
into
test
fisubrs
pop
mov
ret
imul
mov
xor
jmp
cmpsb
shrb
fnstenv
sbb
sbb
sub
daa
subl
inc
cmp
sbb
cmpsl
cltd
jmp
out
or
sub
stc
cmpsl
jbe
add
insb
outsb
notl
add
inc
lods
sub
push
mull
test
dec
ror
fdivs
pop
es
pop
sub
pop
pop
xlat
jbe
outsb
imull
arpl
jbe
jp
sbb
lds
sub
cltd
jg
scas
adc
xor
dec
test
pusha
sub
pushf
mov
sti
pop
cmp
add
or
js
nop
push
xor
cli
xor
cmp
rorl
cld
test
dec
dec
jno
adc
mov
lret
pushf
adc
jg
in
push
add
notl
mov
cmp
arpl
aam
push
popf
jb
add
push
mov
jmp
scas
stos
cvttps2pi
iret
imul
add
rorl
cs
adc
jge
lret
inc
jns
rorb
sub
gs
jo
scas
pushf
test
or
xchg
aaa
add
jg
imul
mov
cmp
loope
push
xchg
jge
filds
clc
stos
ret
daa
mov
in
pop
icebp
jg
mov
sbb
xchg
out
dec
das
lret
jno
aam
mov
inc
or
inc
negl
mov
jmp
jp
dec
shrl
push
cmp
or
iret
in
imul
or
inc
mov
add
dec
arpl
sub
push
add
add
mov
stc
mov
insb
movsb
xor
xor
push
xchg
inc
mov
jmp
scas
outsl
xorb
push
xor
outsb
dec
add
imul
push
fcoml
repz
push
xor
cmpsl
xchg
loop
daa
cmp
push
sahf
add
add
add
push
xor
and
je
test
mov
push
sub
cld
jmp
mov
fisttpll
inc
xchg
sbb
sti
shrl
or
repnz
sti
cmp
in
mov
shrl
in
nop
mov
adc
aaa
popa
sahf
sub
hlt
mov
adc
mov
push
add
adc
sbb
jnp
jne
popf
mov
dec
inc
mov
mov
inc
fisttpll
cmp
xor
ret
cltd
and
dec
xor
cmpsl
jp
sti
add
cmp
mov
out
mov
ret
sti
fs
mov
scas
xchg
lea
xchg
shrl
cmp
dec
imul
mov
adc
imull
sub
mov
add
cmc
lret
push
jae
inc
mov
shlb
cs
xor
jns
js
push
dec
mov
sti
cmpsb
jo
push
lea
daa
push
aaa
xor
cmp
clc
rcl
fnstsw
mov
jp
in
push
jecxz
fsubs
pop
mov
or
hlt
mov
mov
lods
loopne
lcall
insl
repnz
das
mov
pop
out
imull
jb
lock
mov
imul
jnp
push
sbb
loop
lods
add
imull
lods
lods
jae
xor
out
sub
stos
mov
out
stos
push
cmp
sti
stos
xchg
inc
pushf
lock
adc
aaa
cmc
imul
sarb
xchg
repnz
pop
and
cmpb
or
cmp
or
cmpsl
xor
and
ret
lock
pop
cltd
cmp
into
mov
popa
pop
dec
hlt
lods
stos
mov
pop
or
movsl
mov
mov
sub
and
lea
mov
popa
rorl
rcll
mov
mov
lret
add
daa
fnstcw
mov
inc
jae
xchg
jae
xor
sar
mov
xor
out
sbb
ss
std
popl
sbb
andl
stos
mov
jno
mov
xchg
pop
dec
call
mov
mov
movsb
pusha
xor
cmpsb
sbbl
cltd
pop
jne
adc
pusha
or
fnstcw
lret
icebp
imul
sbb
mov
xor
lock
mov
js
test
and
push
sub
sbb
int3
or
mov
or
mov
dec
jno
pop
push
arpl
jecxz
push
je
lds
sbb
mov
adc
cmp
add
and
add
adc
or
imul
mov
add
fidivrs
xor
ja
pusha
outsb
in
and
cli
call
mov
mov
pop
cmp
fisttpl
sarl
movsb
inc
fidivs
lds
sub
jnp
cmp
test
jecxz
sbb
sti
movsl
ret
out
into
add
mov
fisubrs
mov
pop
xor
push
das
lods
pop
adc
ret
sub
jne
sbb
cltd
sarl
std
pop
es
push
push
adc
divb
jecxz
ret
push
sbb
icebp
in
bound
fimuls
jae
sahf
fmull
add
sub
das
push
out
cmp
repnz
xchg
ja
push
push
out
push
inc
mov
xor
jns
fidivl
inc
test
ljmp
shll
add
mov
jno
mov
cld
cmp
aaa
icebp
out
push
popa
je
pop
lcall
aas
int
out
iret
aam
pop
sahf
mov
or
dec
xchg
sub
aaa
fs
and
jns
mov
sub
or
push
lret
or
lea
mov
shl
lahf
xlat
cmp
hlt
mov
lcall
fcmove
xchg
xchg
in
js
shl
rolb
dec
mov
mov
cmp
std
loop
inc
cli
jno
insl
sub
shll
cld
cmp
cmp
outsl
sarl
mov
mov
push
scas
lcall
jecxz
mov
xor
inc
and
lods
int
mov
aaa
cs
fsubp
mov
in
pop
fsts
pop
outsl
lea
mov
cmp
mov
insl
inc
sub
ja
mov
cmpsb
mov
ret
cmpsb
adc
test
ljmp
dec
adc
lea
xor
testb
push
insl
and
xchg
bound
notl
mov
cmpsb
rorl
fdivs
pop
add
xor
mov
mov
dec
in
mov
lret
sub
movsl
mov
lret
xacquire
into
gs
xlat
mov
frstor
lret
mov
dec
andb
dec
push
sbb
sub
and
stos
xchg
outsl
das
lock
mov
push
into
jmp
adc
cltd
sub
fstpl
sbb
ds
arpl
lret
lret
loopne
addl
int3
leave
push
mov
test
xchg
ja
fmull
lahf
jae
sbb
sub
out
repnz
out
sbb
jp
mov
cli
rcrl
sbb
add
call
sbb
out
pusha
mov
jecxz
mov
xchg
out
add
cli
mov
lea
out
aaa
insb
add
dec
scas
loope
push
pop
sub
add
fsubrs
mov
mov
decb
pop
daa
sbb
lods
outsl
popa
shlb
adc
cmpl
popa
pop
test
loope
sbb
push
in
mov
mov
sub
push
daa
mov
sbb
xchg
mov
repnz
adc
popa
mov
add
mov
pop
or
mov
dec
add
testb
push
movsl
leave
pop
cmp
push
xchg
bound
fwait
xor
xor
ret
fwait
jecxz
jne
add
pop
flds
push
mov
stc
fs
pop
aam
inc
int
mov
loopne
imul
mov
pop
mov
loope
dec
aas
mov
push
mov
sarb
leave
dec
pop
call
in
fcomi
je
aad
lret
pop
mov
push
add
scas
subb
cmp
insb
test
iret
pusha
jnp
jnp
jecxz
adc
movsb
pop
je
out
mov
sahf
sbb
xchg
xchg
les
test
jb
mov
fadds
jmp
jmp
cltd
push
mov
fs
xlat
push
mov
adcb
test
add
xor
icebp
and
jecxz
pop
loop
xor
stc
mov
addr16
and
in
iret
mov
into
in
idivl
mov
jmp
mov
xchg
cmp
mov
xor
push
int3
fstpl
insb
lods
inc
fs
cmp
inc
pop
sub
test
aaa
pop
push
jb
xchg
arpl
sbb
ror
into
bound
cmpsb
xor
and
repz
insl
mov
push
loop
fdivl
add
jno
xor
sub
cmpsl
rolb
mov
enter
and
mov
ret
inc
mov
push
fnstcw
mov
and
outsl
pop
gs
mov
cmp
test
mov
ljmp
mov
adc
popa
push
push
and
mov
fst
cmp
ret
mov
lods
shll
cmovno
sub
cli
cmp
out
pop
jmp
xorl
and
inc
push
rorl
mov
push
mov
xor
and
negb
cmpsb
cmp
sti
pop
push
fnstenv
dec
xchg
loope
out
inc
adc
leave
sub
push
mov
jmp
xlat
push
dec
ficomps
xor
cmp
mov
push
pop
das
pop
add
push
ret
loop
repnz
cs
lcall
cmpsl
mov
xchg
sbb
jbe
fsubrs
add
adc
lock
arpl
cmp
xchg
es
inc
push
or
fs
pop
and
outsl
or
stc
imul
sub
imul
lret
jl
adc
inc
enter
daa
jnp
or
fs
mov
xor
dec
and
add
mov
dec
pop
jbe
pop
jns
lds
xchg
out
jp
std
gs
mov
sub
or
inc
repz
repz
cmp
cmp
dec
mov
lea
notb
out
shr
adc
jp
dec
imul
or
test
cmpl
inc
icebp
mov
aas
test
cltd
add
out
out
test
ja
rcrb
fmuls
dec
cmpsl
rorb
inc
nop
dec
out
loope
inc
push
les
fsubl
mov
fisubrl
sub
jo
adcl
paddusb
mov
shlb
fstpt
xchg
sbb
scas
scas
std
pop
cmp
mov
mov
js
fcompl
dec
jp
mov
sub
push
push
pushf
xlat
sub
jbe
or
lcall
lock
loopne
push
cmpsl
pop
push
out
into
cmpsb
jmp
imul
pushf
pop
or
sub
and
nop
or
pop
movsl
sahf
jb
xchg
push
pop
call
fidivs
adc
rcrl
mov
jnp
inc
xor
pop
in
test
mov
push
mov
pop
enter
mov
rorl
in
add
inc
sub
or
or
fiaddl
mov
pop
into
sahf
ljmp
rclb
mov
xchg
repz
mov
xor
mov
adc
xchg
inc
pop
xchg
push
cmp
pop
test
sub
ja
pop
adc
or
les
pusha
add
fs
call
cld
cmp
sbb
mov
das
jns
in
imul
js
xor
inc
jno
faddl
inc
imulb
stos
add
push
adc
das
mov
nop
popa
insl
inc
dec
popf
jl
dec
setle
addr16
outsl
bound
push
adc
pop
out
jmp
xor
pop
mov
pop
scas
lahf
cmp
out
sti
sub
inc
sub
or
or
and
loope
outsb
mov
movsl
inc
xchg
scas
jo
inc
mov
pop
pop
cmp
in
push
push
popf
sbb
aad
into
scas
jbe
pop
imul
mov
jecxz
lock
mov
loop
adc
inc
push
dec
and
xlat
mov
cltd
xor
ret
mov
sub
aad
xchg
push
jmp
mov
insl
fs
sbb
mov
mov
xchg
inc
fdecstp
loopne
sub
lods
pop
int
pushf
jo
push
sub
or
add
jbe
int3
fimuls
pop
cltd
cld
gs
cmp
inc
xchg
cmp
loop
add
jno
getsec
xchg
dec
mov
sub
jge
adc
call
push
call
out
mov
xchg
xchg
or
push
jle
xchg
xor
push
mov
les
lret
mov
lcall
cmp
cltd
pop
sbb
jmp
cli
stos
mov
rclb
stc
inc
int3
fld
divb
cmp
add
add
add
arpl
add
add
add
inc
add
add
add
addl
aam
add
add
add
add
add
add
add
mov
add
add
add
hlt
add
add
add
xor
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
or
outsl
jne
or
test
add
add
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
jb
add
pop
add
push
xrstors
jmp
mov
sahf
sub
or
test
mov
incl
add
shlb
incb
decl
push
push
push
push
cmpsl
or
dec
insb
push
rcl
lret
in
mov
rolb
cmp
mov
adc
pop
add
incl
pop
popl
push
fisttpl
mov
push
clc
decl
incl
adc
adc
add
or
decl
jns
incl
lea
clc
cmp
stc
sub
lea
inc
add
adc
in
push
mov
add
add
aad
imul
inc
imul
test
gs
popf
inc
inc
xchg
jae
add
jbe
je
arpl
sub
gs
dec
fs
ja
add
addr16
popa
add
mulb
imul
push
inc
push
or
mov
add
and
pop
push
popa
dec
popf
mov
inc
ror
xor
push
rol
push
cmp
data16
push
cmp
dec
insl
gs
xor
ret
scas
ljmp
bound
and
es
cmpsl
cmp
fldl
mov
aas
pop
sub
lcall
out
test
push
int3
inc
cld
push
sub
pop
xchg
je
sti
es
and
xor
mov
ss
mov
sahf
stc
mov
xchg
sbb
int
sbb
test
push
or
sbb
cld
mov
popa
iret
gs
lahf
xorb
fbld
mov
jmp
fstpl
and
fwait
inc
loopne
sti
outsl
or
gs
push
lea
in
enter
out
mov
idivb
mov
mov
mov
push
inc
outsb
in
sbb
lods
dec
push
hlt
add
cltd
mov
aaa
test
push
jae
std
call
ljmp
sub
and
call
sub
jnp
lock
ja
push
xchg
add
jge
jmp
jg
ds
scas
pushf
dec
leave
fwait
add
push
jno
inc
push
stc
notl
mov
fiaddl
ljmp
push
pop
jnp
cmp
in
jle
xor
popl
sarb
popf
or
mov
out
jne
mov
and
cmpsb
sbb
cmpsl
mov
cli
imul
insl
out
jo
lods
imul
lret
movb
lods
fs
icebp
mov
inc
ljmp
jp
mov
es
test
loope
push
adc
imul
cmpsb
mov
push
jae
sbb
add
add
es
int
sti
test
and
pop
and
outsb
hlt
push
and
cmpl
mov
mov
jne
enter
ja
out
shlb
inc
pop
cwtl
jecxz
in
stos
mov
popa
inc
rcrb
sahf
xchg
dec
sar
sub
dec
cld
movl
pusha
dec
pop
push
pop
cmp
popf
iret
fneni(8087
mov
insb
das
xchg
int
sub
lcall
popa
aas
jno
add
xor
xchg
mov
adc
xor
jnp
and
cld
iret
xlat
outsl
gs
aad
outsl
sahf
inc
aad
insb
mov
rorl
mov
or
stos
sub
mov
pop
push
imul
fwait
bound
push
push
je
add
push
pushf
sub
xorl
pop
jg
mov
inc
add
mov
cmp
daa
lods
adc
and
subl
pop
mov
adc
push
or
xchg
call
insl
mov
std
jg
aad
ja
cwtl
jno
ret
adc
lahf
repz
fidivs
push
jmp
mov
insb
cld
nop
mov
push
push
arpl
sub
movsl
loopne
or
aad
push
cmp
fisttpll
ljmp
scas
add
in
out
in
pop
inc
sbbb
lret
cmp
ljmp
js
orb
mov
test
xchg
or
sarl
mov
ljmp
dec
xchg
js
pop
das
dec
or
adc
or
inc
in
stos
loope
fdivl
adc
repnz
imul
sub
in
cmp
mov
jns
and
jbe
call
add
xor
pop
mov
and
push
aaa
enter
mov
hlt
mov
mov
daa
pop
push
imul
xchg
jo
or
push
pop
mov
lahf
xchg
sbb
mov
xchg
fsts
notl
xor
pop
xchg
mov
lods
int3
ret
stc
dec
mov
mov
mov
mov
mov
jp
sbbb
adc
leave
jle
shr
scas
jno
xchg
mov
aam
clc
push
mov
xor
mov
inc
push
push
sub
adc
nop
fcoms
xchg
xchg
bound
xchg
jb
xor
adc
cs
data16
rcrl
out
xor
inc
push
and
xchg
add
lret
inc
mov
xchg
pushf
repnz
arpl
push
rcrb
out
cld
sahf
cmp
xchg
jge
lock
push
pop
enter
xor
outsb
adc
lock
mov
jnp
outsb
insl
fcomps
mov
inc
mov
das
mov
sbb
rdmsr
adc
pop
ljmp
or
sbb
test
ja
cwtd
shl
push
push
push
aaa
xchg
or
inc
insb
cmp
sub
jns
stos
adc
pop
mov
xchg
inc
mov
dec
mov
daa
add
aas
pushf
cld
sti
addr16
aad
jp
sbb
xor
push
dec
pushf
div
jo
lea
push
movsb
jnp
fmuls
sti
and
xorl
pop
js
push
jnp
outsb
adc
or
dec
adc
rolb
shrl
push
mov
push
in
sbb
daa
out
cmp
mov
pop
int3
loopne
test
lods
jnp
xor
stos
dec
fdivs
mov
lods
icebp
jbe
or
pop
and
dec
and
and
sbb
cmp
dec
scas
inc
ret
and
mov
inc
fadds
mov
pop
outsb
fmul
dec
cmp
and
push
jb
adc
leave
cltd
cmp
outsb
add
xchg
push
fs
mov
test
inc
mov
add
cltd
dec
imul
adc
bound
paddd
popf
lahf
xor
orb
test
and
arpl
addr16
xor
stos
or
mov
loopne
jge
pop
pop
mov
int3
popf
lret
aas
and
mov
dec
sbb
sub
pop
data16
and
push
ret
inc
jle
aad
rcr
scas
and
test
jns
not
xlat
call
jns
jg
sbb
pop
imul
mov
or
sbb
push
xchg
sbb
xorl
inc
cmpsb
dec
sub
push
ds
inc
fcoms
cmp
addr16
add
test
dec
sub
movsb
pop
roll
dec
ficompl
neg
jl
movsb
test
mov
pop
comiss
lds
or
es
stc
sbb
ret
mov
fs
and
or
jnp
mov
pop
dec
ss
mov
aas
in
and
xlat
mov
mov
lret
pop
aad
xchg
xorps
jecxz
or
mov
stc
xor
dec
dec
push
add
mov
outsb
loope
mov
inc
imul
and
mull
insl
lahf
xorb
insl
push
inc
xchg
pop
push
sub
cmp
adc
aas
sbb
hlt
add
xchg
or
arpl
push
lret
dec
cli
mov
enter
jns
fisubs
xor
sbb
dec
fidivrs
fildl
xchg
mov
mov
cmp
jbe
call
mov
inc
imul
pushf
cmp
lret
pop
aad
add
xchg
mov
and
xor
mov
jbe
imul
nop
fildl
push
inc
pop
cs
mov
pop
in
idiv
xchg
fbstp
imul
sbb
dec
stos
stos
push
sbb
sbb
into
aas
add
jo
adc
out
xor
bound
lds
xor
push
xchg
mov
xor
mov
xchg
dec
dec
scas
enter
push
int3
mov
push
repz
ss
and
mov
outsl
mov
enter
cli
sahf
pop
jbe
into
rcrl
fidivl
mov
add
push
addl
dec
push
mov
aad
xchg
stos
add
mov
or
inc
jb
mov
push
push
jl
sub
rcr
pushf
in
xchg
ds
inc
test
cmc
fmuls
sub
inc
adc
jle
loop
sub
jbe
mov
lret
pop
dec
pop
shlb
inc
out
aam
cld
add
bswap
sbb
fdivrs
scas
js
pop
fucomip
or
arpl
inc
jbe
sbb
sub
inc
lahf
int
cmp
or
scas
inc
dec
pushf
fdivr
xor
jo
int3
fcmovnu
lret
sti
cltd
sahf
loope
xchg
jae
jns
push
pop
icebp
addb
sbb
or
idivl
ljmp
in
mov
xor
jb
push
pusha
out
push
ss
xchg
cwtl
sub
repnz
lcall
xor
xchg
xor
outsb
pop
dec
aad
and
jecxz
pop
dec
fucomip
pop
enter
pop
inc
cmp
pop
jle
loopne
adc
push
dec
lret
sti
mov
cmpsb
subl
or
xchg
loop
inc
bound
lods
in
fs
sar
int3
lea
jle
push
andl
mov
sbb
test
cmp
pop
cmpsl
cmpsb
repz
pop
push
mov
jae
in
xchg
dec
lds
dec
cwtl
bound
fidivrs
inc
cwtl
jp
xchg
shr
iret
cmp
sub
dec
mov
stos
mov
xor
jns
and
jno
les
je
lsl
mov
fildll
lock
ja
dec
fwait
lods
push
pushf
xlat
pushf
fstl
bound
mov
dec
data16
scas
lds
jnp
test
inc
fiaddl
lds
xchg
rcll
rcrb
cli
repnz
lcall
fwait
xor
lods
ss
lahf
mov
lods
cmp
xchg
sub
es
loope
jl
cmp
gs
dec
cmpsb
rorl
jns
arpl
xlat
stos
mov
repnz
add
enter
fcmovnu
pop
out
jno
scas
hlt
loop
mov
mov
lods
mov
cmp
push
in
call
pop
test
ss
shr
mov
inc
sub
loop
in
outsl
outsl
xor
popf
pop
add
fnstenv
test
or
outsl
pushf
xlat
jecxz
cmpsl
popf
xor
push
cmp
sarb
rcrb
cld
mov
sbb
xor
inc
cltd
jecxz
sbb
nop
mov
mov
repz
sti
mov
jmp
scas
jne
mov
xor
jbe
lock
stc
rorl
inc
out
pop
sbb
sbb
xchg
outsl
mov
xchg
js
in
adc
test
sub
es
sub
xchg
lea
jecxz
leave
pop
addr16
add
jnp
mov
sub
mull
push
cli
cmpsl
imul
insl
popf
cmp
and
movsb
jg
push
enter
mov
pop
mov
daa
repnz
lods
fs
pop
mov
in
out
dec
fildl
pextrw
mov
ficompl
fdivp
negb
xor
mov
adc
rcll
ss
push
sub
jb
popa
inc
xor
sbb
dec
jge
add
ret
cmpsl
test
stc
ljmp
inc
or
test
xchg
ljmp
enter
pop
clc
repz
add
jl
mov
jno
mov
xor
adcb
outsb
add
adc
cmpsl
je
rcrl
je
andl
fstps
js
xchg
sbb
push
xchg
mov
and
cwtl
pushw
jecxz
rclb
sub
push
cmpsl
ret
inc
jecxz
inc
bound
mov
shr
mov
push
loop
shrb
mov
dec
outsl
aad
loopne
push
fsubl
xlat
in
xlat
and
scas
cltd
leave
mov
sahf
sbb
aas
cwtl
cmp
sbb
mov
arpl
sbb
jae
fdivl
cmp
xor
movsb
in
lods
xchg
rcrl
push
scas
sub
mov
push
sub
inc
ljmp
cwtl
aaa
cmp
pop
sbb
int
xor
and
inc
xchg
xor
jnp
js
inc
dec
out
pop
pop
sbb
pop
jns
movsb
outsl
cmc
push
das
daa
add
mov
test
iret
repnz
push
add
push
dec
pop
lock
xchg
in
xchg
andl
add
and
rorb
xor
mov
std
or
shll
mov
mov
seta
ss
mov
and
movsl
lret
pop
pop
push
ret
inc
mov
mov
xor
ret
dec
sbb
sar
jnp
cli
dec
fwait
adc
adcl
scas
xchg
out
mov
sti
loope
mov
or
fnstsw
adcl
mov
xor
pop
cltd
jecxz
xor
add
test
loopne
rcll
xor
insl
decb
call
mov
movsb
out
add
popf
out
es
sarl
mov
pop
add
data16
int3
cmovns
aad
or
cmp
add
mov
jbe
xchg
xchg
in
push
ret
pop
sub
xchg
mov
jmp
adc
nop
jl
sub
imulb
xor
cld
inc
mov
js
fisttps
int
js
fwait
popf
xchg
outsl
shll
jbe
xchg
aam
shr
rcrl
adc
arpl
xor
test
mov
mov
inc
call
mov
call
scas
cmpsl
fs
xchg
xor
popa
jl
imul
inc
or
or
push
jmp
adc
sub
jbe
leave
in
fstpt
lret
pop
xor
adc
rolb
icebp
nop
lods
and
adc
or
cmp
xchg
aam
das
mov
testl
cmp
jo
jne
pop
clc
adcb
mov
xchg
negl
push
mov
cmp
sub
ja
xchg
mov
in
div
decl
aad
xor
mov
fstps
fcompl
scas
fwait
clc
push
icebp
xchg
mov
sub
mov
pushf
sbb
loope
sbbb
mov
dec
or
xor
cmp
xchg
xchg
lret
and
dec
push
cmp
dec
mov
inc
pop
out
mov
xchg
mov
loop
or
rcrl
mov
mov
push
push
fldt
arpl
pop
mov
repz
arpl
repnz
mov
jo
inc
mov
lret
mov
jl
jg
or
push
stos
jg,pt
cmp
mov
push
and
jp
sbb
fucomp
pushf
sbb
jg
std
and
inc
je
addr16
sbb
rcll
add
stc
mov
bound
pop
pop
jnp
xchg
jp
cmp
mov
insb
sbb
mov
cmp
js
sti
cwtl
add
in
mov
scas
cmp
dec
adc
pop
out
sub
not
push
cmp
xchg
in
rep
lea
push
insb
xchg
cltd
dec
and
in
ret
cli
gs
jb
loope
fwait
and
xchg
adc
mov
inc
shlb
repz
sbb
mov
cltd
lods
xchg
cmc
mov
das
ljmp
pusha
pop
jbe
loopne
sbb
negb
inc
pop
and
ffree
repz
fimull
or
daa
xchg
push
mov
push
lods
cltd
inc
add
fcmovbe
dec
adc
cmp
or
rorb
or
fiaddl
mov
dec
pushf
loope
mov
rcll
dec
and
or
je
imul
aaa
stos
mov
imul
jnp
jl
xor
mov
std
scas
cld
mov
clc
push
shlb
ljmp
sbb
sbb
in
cmp
add
fwait
andl
repz
int
fmull
xlat
mov
dec
lods
xchg
xor
out
jbe
xchg
xchg
movsl
sub
pop
sub
push
icebp
mov
inc
adc
lahf
sarl
int3
enter
out
ss
stos
mov
xor
pop
repnz
inc
add
sbbb
ret
dec
push
dec
in
inc
sbb
xchg
es
int
dec
vphsubbw
xor
add
jno
xor
pop
orb
jg
dec
xchg
sbb
cmpsl
xorl
inc
jbe
sub
subl
mov
dec
daa
mov
movsl
cmp
mov
mov
clc
mov
leave
cmp
mov
push
push
xor
mov
pop
popa
iret
out
adc
aas
in
xchg
adc
gs
testb
mov
lods
push
push
pop
jns
xchg
shl
push
rcrl
ret
and
jg
mulb
sub
xchg
aas
testb
push
xlat
js
or
jae
rorb
insl
mov
or
rolb
jo
or
mov
fistpl
cmpsl
xchg
cltd
pop
cmp
pop
mov
sub
out
xchg
nop
pushf
jo
movsb
xor
sbb
inc
bound
sbb
shll
mov
cmp
push
cmp
mov
ss
dec
mov
into
mov
mov
lea
ljmp
mov
adc
dec
mov
push
jae
mov
xchg
push
sbb
jne
sub
cmp
in
dec
sbbl
cmp
into
repnz
aaa
lods
cs
int
mov
push
xor
mov
imull
add
cmc
das
jge
or
jnp
add
outsb
xor
jns
jmp
mov
sarb
cmp
clc
movsl
add
mov
lahf
cmp
xchg
pop
sbb
push
aam
adc
ss
or
jle
movsb
lods
scas
leave
or
stos
dec
mov
jnp
loop
bound
add
add
cmpsl
mov
and
sub
push
loope
mov
testb
mov
mov
pop
push
push
xchg
sbb
clc
test
popa
ror
cmc
adc
adc
aaa
into
xchg
ret
leave
jecxz
scas
ja
or
xor
jecxz
cmp
daa
adcb
xchg
xchg
sti
mov
sarl
mov
cmp
stos
xor
add
pushf
sub
stos
roll
cmpsl
sub
pop
outsb
outsb
repz
data16
sbb
nop
icebp
cmp
dec
ja
mov
pop
in
mov
int3
outsl
or
inc
pop
push
jp
push
or
test
insb
insl
lods
add
sbbl
add
pop
cmp
mov
fbld
cltd
xchg
or
dec
jnp
fstl
mov
mov
std
call
push
stos
jne
aad
xchg
int3
test
push
dec
stos
push
and
in
in
or
inc
mov
jns
insl
inc
lds
sub
lret
sub
add
cli
mov
pushf
imul
cld
mov
dec
cmpsl
enter
cmp
mov
push
add
add
add
mov
add
addb
add
add
add
add
add
add
add
add
add
pop
push
add
addb
add
add
outsl
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
dec
jg
inc
add
add
push
and
popa
je
insl
and
les
loopne
xor
add
add
add
add
add
pop
inc
cs
add
add
or
lret
add
add
add
add
cmpsb
add
lcall
sub
clc
xor
add
and
popa
jb
push
pop
int
jb
fs
inc
and
push
ja
mov
inc
stc
add
add
xor
or
fcmovnu
inc
or
pushl
rorb
ret
cmp
and
test
test
push
test
lea
push
xor
in
jno
daa
lock
add
adc
push
cld
repz
movl
push
dec
add
xor
rolb
cmpsb
test
adc
incl
lea
jl
fdivrp
std
sar
xor
cld
shlb
push
insb
loopne
lock
adc
test
add
pushl
rorb
jo
or
push
clc
push
add
add
push
adc
testl
add
add
add
add
inc
fadds
push
cmp
cmp
out
rcrl
xor
jbe
inc
aaa
outsb
insb
outsb
movsl
jne
adc
inc
popa
inc
inc
jo
movsl
popa
test
inc
outsb
outsl
je
inc
imul
jae
insb
imul
xor
popa
loop
gs
insb
xor
gs
jne
inc
jae
jae
loopne
insb
inc
insb
inc
dec
add
add
addl
add
add
add
mov
add
add
add
add
add
add
add
add
jecxz
add
add
add
les
dec
and
xor
nop
int3
std
mov
fs
push
mov
pop
jge
mov
std
xor
jecxz
rcrb
stos
imul
test
jns
xor
push
jnp
inc
scas
push
sbb
ss
adc
push
scas
mov
pusha
cltd
out
cmp
lret
movsl
xor
pop
test
daa
lcall
outsb
aas
mov
sbb
lock
ss
stos
lods
xchg
stc
stc
outsl
movsb
aas
into
pop
sub
xchg
and
xchg
bound
into
fxtract
or
ljmp
cltd
cmc
aam
int3
cmp
cld
and
imul
test
std
out
insl
add
test
jl
or
enter
mov
fistpll
scas
lcall
insl
aam
add
add
ret
mov
or
xchg
insb
adc
cmpb
aas
fsts
cs
jmp
test
pop
mov
fs
mov
pop
or
mov
loopne
adc
sbb
pop
push
dec
bound
adc
xchg
jno
xor
mov
push
xorb
fisttpl
fimuls
aam
arpl
push
imul
mov
loope
xchg
lds
mov
fnstcw
jne
repnz
jmp
rolb
loopne
mov
es
sub
cmpsb
and
and
or
ret
lods
fadds
pop
jne
mov
and
out
cmp
sbb
push
sbb
inc
daa
xchg
add
jne
iret
ficoms
andb
scas
in
scas
jne
and
popf
add
xor
pop
addr16
dec
out
or
inc
iret
xor
inc
cmpsb
push
aam
or
jb
inc
xor
xor
or
aas
inc
imul
dec
sbb
mov
hlt
in
in
or
xchg
dec
pop
mov
adc
out
aaa
inc
or
push
iret
mov
imul
cltd
add
cltd
xchg
scas
mov
jb
stos
or
cs
aas
popf
and
scas
cmpsb
into
sub
ss
ljmp
sbb
adc
push
ds
sahf
aas
xor
xchg
xor
cwtl
ljmp
push
movsb
mov
mov
and
call
fimull
push
xchg
inc
cmpl
test
adc
adc
andb
out
dec
lahf
incl
fistps
xchg
cwtl
xchg
jge
xchg
xchg
cmp
sbb
shrl
in
test
inc
sahf
jns
das
fs
xor
jmp
imulb
lods
pop
mov
or
xor
xchg
in
mov
add
aaa
xor
or
jbe
or
inc
mov
dec
and
jmp
rorb
push
adc
mov
inc
fnsave
push
jno
and
shrl
repnz
ljmp
push
mov
fistl
outsb
push
pusha
cli
arpl
jmp
push
push
cmpsb
or
les
ds
stc
sti
pop
lock
cmp
insl
inc
mov
imul
mov
push
jmp
mov
aad
lds
push
inc
imul
sub
fsts
xchg
push
mov
inc
scas
xchg
push
and
cmpsb
in
enter
adc
ljmp
push
or
pop
fimull
rorb
xor
and
push
pop
inc
lret
add
dec
stos
lcall
mov
std
inc
sub
inc
and
es
mov
je
ss
cmp
lds
push
sarl
xchg
adc
lret
movb
daa
xor
aad
pop
jmp
and
outsb
jb
and
mov
icebp
pushf
dec
out
sbb
fdivr
or
mov
push
leave
repz
rcr
adc
xor
inc
adc
lods
js
rcrl
push
jge
jge
or
sub
mov
mov
add
cmp
push
jl
xchg
out
and
and
jb
or
cwtl
sub
adc
adc
loopne
fisubl
jmp
data16
insl
pusha
out
xor
cmp
rolb
xor
add
int3
cmp
aas
add
lock
popf
js
es
decb
fdivr
mov
push
lahf
test
je
pushf
sub
and
lahf
inc
popa
sar
pop
sbb
shl
sub
add
xchg
inc
push
mov
and
cmpsl
pop
xchg
shlb
in
fdivrp
int3
pop
jl
dec
lea
movsl
and
mov
mov
imull
push
ret
popa
add
or
mov
sbb
mov
jno
add
inc
sub
jge
cmpsl
dec
cmp
inc
push
mov
add
dec
je
and
test
xchg
imul
and
mov
aas
out
sub
das
dec
negb
arpl
push
aas
dec
lahf
leave
repnz
adc
arpl
mov
adc
or
jle
adc
dec
incl
sub
in
int3
xchg
sub
outsl
lcall
cmpsl
dec
pusha
xchg
jbe
jle
jmp
pop
cmp
jge
push
adc
movsl
dec
rclb
jmp
lahf
testl
iret
icebp
and
out
or
cltd
mov
mov
adc
shlb
inc
out
adc
fs
pushf
sub
ja
les
sbb
ret
les
fistpl
orb
sub
jmp
int3
insb
loope
push
lds
adc
dec
aaa
xchg
aad
ss
sbb
pop
jbe
fsub
jne
enter
pop
les
push
aas
and
dec
cmpb
out
inc
in
popfw
mov
inc
test
push
xchg
pop
scas
das
lret
sub
jae
xor
sbb
mov
vrsqrtps
push
cmp
mov
and
mov
ds
incb
test
dec
sahf
pop
cmp
daa
lret
rcll
jge
adc
into
adc
add
mov
pop
pop
popa
test
imul
inc
pop
xor
jp
cmp
dec
fisubrl
stc
dec
test
inc
adc
ret
loopne
adc
adc
dec
dec
lret
cmc
cmpl
fiadds
and
xchg
xor
stos
push
bound
xchg
leave
cwtl
jg
int3
mov
dec
orl
and
cmpb
add
stos
ja
add
inc
mov
cmp
in
adc
popf
test
cmc
dec
ret
outsb
adc
ja
nop
add
pop
pop
push
leave
mov
outsb
or
inc
and
iret
xor
fldcw
repz
mov
sbb
xor
iret
cmp
aas
cld
mov
sbb
sub
xor
popf
popa
fucom
inc
shrb
mov
cmp
hlt
inc
mov
jp
sbb
mov
inc
out
jge
sahf
addr16
or
mov
cmp
test
bound
jb
shll
push
cmp
cltd
dec
lcall
aam
jo
stc
rcll
aam
shlb
pop
int3
dec
or
je
dec
push
dec
mov
add
push
movsl
es
sbb
push
loopne
pop
lods
mov
ret
xchg
scas
ficomps
mov
mov
sbb
out
bound
int
xor
mov
es
jno
sub
aad
insl
loopne
lcall
lret
icebp
dec
jle
adc
aas
mov
pop
scas
imul
sbb
scas
push
ljmp
jbe
inc
mov
mov
dec
in
push
push
mov
and
mov
or
cmpsb
leave
inc
les
mov
mov
push
out
ret
ja
sarl
sahf
jmp
jno
addr16
mov
arpl
loopne
popf
clc
inc
pop
insb
int
mov
xchg
jle
jo
in
xchg
cs
jno
xchg
jae
cwtl
mov
lods
ret
sub
movsb
movsl
enter
scas
sub
jmp
pop
into
int3
push
loop
adc
mov
or
mov
call
or
inc
push
lret
andl
lret
push
cmpsl
loope
test
pushf
mov
ss
fistpll
rolw
inc
lds
mov
stc
mov
push
jbe,pn
dec
xchg
xchg
int3
stos
push
sbb
jbe
lret
mov
daa
test
in
jbe
outsl
jecxz
test
mov
jne
dec
jbe
inc
in
pop
xchg
sbb
jns
mov
popa
adc
call
jecxz
xchg
adc
data16
cmp
xor
cltd
notl
pop
scas
cwtl
in
addl
aaa
std
add
jo
int
adc
stos
sub
push
aad
adc
rcrb
push
out
add
cmc
xchg
mov
outsb
sub
mov
lret
clc
aam
push
adc
add
loopne
xor
cmpsl
xor
insl
call
mov
cmp
xor
jle
jbe
out
scas
gs
and
stc
push
addb
lret
or
xchg
and
lods
jecxz
pop
mov
inc
cmp
ds
popa
in
jmp
scas
fnstcw
aad
addr16
out
and
rep
push
arpl
pop
loopne
pop
xchg
mov
nop
mov
sub
xor
pop
cmp
xor
sub
sbb
ret
pop
mov
insb
imul
push
push
cwtl
movups
sbb
icebp
shrb
mov
push
jge
test
inc
enter
xor
or
fisubrs
dec
ret
or
fsubrs
and
stc
pop
mov
push
cmpsl
jns
mov
in
mov
imul
xchg
pop
lahf
vmwrite
lahf
fbstp
iret
dec
sub
inc
cmpsl
inc
inc
push
jnp
xchg
xor
jo
push
cmp
repnz
mov
inc
dec
add
arpl
mov
xor
sub
stos
adcl
xor
mov
mov
jbe
fcmovu
lea
call
xchg
daa
xchg
mov
mov
in
and
jmp
bound
cmp
adcl
pop
repz
call
scas
test
and
into
mov
fldl
sbb
pop
shl
in
or
sbb
shr
fwait
clc
mov
dec
mov
call
jecxz
cwtl
adc
mov
addr16
cmp
jle
es
push
xchg
lret
jae
mov
sub
aam
mov
cli
lret
lret
mov
adc
inc
mov
and
test
cmp
mov
bound
and
shrl
or
xchg
xlat
add
imul
xor
pop
stc
sub
jle
pop
xor
mov
jge
and
mov
jb
std
lret
fldenv
jne
mov
mov
mov
cmp
std
add
mov
push
fdivrs
into
push
inc
les
fbstp
pop
test
xor
adcb
and
ja
or
or
cmp
loope
cmp
mov
mov
js
movsb
mov
or
popf
pop
sbb
jae
or
mov
xlat
mov
adc
and
pushf
clc
pop
mov
cmp
sbb
repnz
sbb
es
imul
scas
aaa
pop
fidivs
push
lahf
mov
pop
bnd
add
mov
mov
daa
fnstenv
jmp
jge
sbb
subb
sub
dec
push
mov
mov
pop
fdivr
mov
imul
dec
clc
lcall
jne
and
or
gs
jo
sbb
lahf
and
inc
sub
scas
xchg
xor
push
push
xor
sub
bound
hlt
idivb
call
jg
xor
out
push
inc
jns
pop
jl
bound
cli
lods
nop
shll
pop
sub
rcll
out
or
mov
push
xchg
sar
push
pop
add
fdivrl
pop
push
mov
xchg
mov
imul
leave
mov
bound
pop
push
imul
xchg
fisubl
push
outsl
pop
scas
imul
xchg
xor
or
popf
out
xchg
cmp
or
adc
and
inc
inc
in
xchg
stos
push
sbb
jle
popf
lahf
int
add
pop
out
jnp
ds
or
mov
outsb
outsl
pop
cmp
dec
mov
mov
sbb
mov
adc
call
xor
cmp
and
push
sub
cmp
adc
mov
xor
jl
ljmp
sub
adc
jae
add
jmp
xchg
or
popf
std
jge
scas
mov
repnz
push
jecxz
xchg
cmp
xlat
out
sbb
xchg
mov
test
push
xlat
dec
fcoms
dec
into
push
jg
cmp
out
fs
inc
push
int
sbb
loope
dec
test
jae
mov
pop
dec
into
sbb
adc
jo
pop
repnz
gs
das
push
js
pop
cmp
xchg
xor
dec
outsb
dec
dec
or
cmp
lret
loope
nop
sahf
and
sub
das
or
outsl
dec
fwait
pop
sbb
mov
ret
and
dec
int3
and
jns
pop
call
sti
and
mov
mov
mov
pop
adc
subl
ja
dec
lods
cmc
iret
xchg
mov
dec
push
out
mov
andl
je
dec
mov
pop
ja
push
scas
cld
aad
push
jge
sti
xor
add
push
iret
mov
mov
popf
pop
aad
pop
hlt
je
pop
pusha
lret
add
cli
popf
and
or
enter
and
xlat
dec
inc
mov
jg
std
lcall
ret
add
xchg
fnstcw
stc
sub
inc
push
mov
sbb
mov
xor
jns
xchg
push
roll
cs
shll
mov
int3
mov
xchg
clc
pop
out
xlat
add
sbb
and
jmp
add
loop
push
loope
mov
outsl
fs
push
outsb
pusha
mov
ret
push
fcomps
add
push
sbb
jno
mov
pop
scas
add
out
shll
jbe
loop
addl
nop
out
test
mov
call
cld
jl
fdivrl
cmpsl
adc
aam
sti
loope,pt
cwtl
repz
add
inc
push
cmp
fisubl
outsb
push
es
jg
pop
jae
out
stos
gs
fcomip
inc
mov
aaa
mov
gs
mov
mov
xchg
mov
jmp
dec
push
seta
jg
sti
mov
insb
mov
iret
fs
xchg
pop
mov
test
sti
insb
in
inc
icebp
push
mov
sub
sbb
inc
and
sbb
push
cmp
adc
xchg
mov
cmp
out
int
and
stos
add
xlat
jl
pop
scas
cmp
mov
pop
test
xchg
jno
sbb
cmpsb
and
xchg
pop
js
movl
xor
imul
jge
fucomp
sbb
adc
mov
mov
leave
sysenter
das
inc
test
jne
and
into
dec
lock
inc
lds
in
sub
add
adc
mov
shll
jnp
mov
repnz
and
adc
cmpsb
dec
inc
cvtps2pi
shr
or
fsts
sarl
adc
pop
lds
pop
ja
lret
sti
cmpb
sub
test
xor
std
sbb
ja
sti
xor
dec
dec
xor
test
andb
cs
ret
xor
cmp
sbb
xor
outsb
mov
xor
aam
jo
imul
mov
lea
or
aas
xchg
mov
adc
push
mov
and
imul
and
dec
js
xchg
ret
xchg
pop
out
outsb
hlt
adc
pop
mov
fs
lock
sbb
sbb
testl
dec
mov
and
outsb
in
xor
outsl
xchg
xor
sub
lock
push
int
addr16
je
xchg
bound
jno
jae
cltd
xor
push
sub
jnp
inc
inc
ss
cmp
or
pop
js
aad
das
nop
lods
popf
xchg
jno
addl
scas
adcl
nop
fdivrp
dec
test
js
push
mov
popa
dec
cmpsl
mov
add
fstps
xchg
neg
add
cmp
in
gs
cltd
or
or
pusha
and
js
pop
and
addr16
in
xchg
ss
mov
xchg
lods
add
push
ljmp
gs
pop
ss
cmp
xchg
aaa
test
cwtl
lcall
pop
out
lcall
loop
iret
mov
in
xor
dec
mov
movsl
or
icebp
fwait
js
movsl
ljmp
scas
sbb
cwtl
inc
sbb
mov
mov
pop
sbb
or
or
cltd
fs
mov
pop
mov
loope
imul
shrl
mov
jp
inc
sti
mov
xchg
or
xchg
sbb
mov
std
jne
dec
rorb
inc
rclb
pop
pop
inc
xchg
into
xchg
dec
pop
out
and
and
scas
cmc
jnp
cmp
jp
rcrl
dec
movsb
outsl
icebp
xchg
call
mov
push
cmc
addr16
in
and
push
dec
sbb
xchg
xchg
cld
inc
mov
xchg
rcr
out
adc
jne
call
add
push
lcall
dec
lahf
test
popa
push
fs
pusha
subl
sbb
dec
xchg
push
jo
in
and
inc
aad
out
sub
in
stc
jb
push
rclb
addl
add
inc
add
pop
adc
push
dec
mov
cmp
enter
fldt
lret
mov
nop
xor
pop
sbb
or
mov
mov
xchg
fwait
cld
add
ret
lahf
jecxz
ja
mov
js
cs
int
sub
push
jmp
pop
push
fmuls
cmpsb
push
movsb
jp
jge
clc
cwtl
mov
push
add
jg
movsl
xchg
jge
lods
mov
bound
shl
push
mov
nop
dec
mov
xor
hlt
add
mov
add
add
stos
adc
add
add
add
add
addl
add
add
add
mov
add
push
adc
add
add
add
add
add
add
add
add
xor
sbb
sub
mov
sub
add
add
add
ljmp
ja
mov
js
js
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
leave
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
lret
sbb
add
adc
add
or
add
add
add
cld
leave
add
hlt
leave
add
in
leave
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
lret
push
lret
pop
lret
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
lret
add
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
lret
add
pushf
lret
add
movsb
lret
add
lods
lret
add
mov
add
lret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
lret
add
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
int
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
bswap
add
cld
int
add
int
add
int
add
int
add
int
add
int
add
int
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
add
xor
add
cmp
add
push
into
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
enter
call
iret
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
fs
add
insb
iret
add
je
add
jl
add
test
add
mov
add
xchg
iret
add
cmpsl
iret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
ror
add
iret
add
fmul
add
in
iret
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
