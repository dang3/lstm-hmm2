add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
js
je
jb
popa
add
add
add
add
sub
add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
add
add
sub
dec
add
and
push
add
jb
imul
add
inc
add
outsb
add
add
insb
add
add
popa
add
add
add
add
imul
add
jo
pop
add
imul
outsl
add
dec
add
je
jb
imul
add
push
add
add
add
add
arpl
outsl
add
and
push
add
jp
add
add
push
add
add
insl
add
insb
add
add
arpl
outsl
add
and
push
add
jp
add
add
add
jne
inc
add
jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sub
lods
and
adc
add
jne
inc
mov
or
sbb
cmc
insl
in
les
xor
and
adc
add
je
fcoml
cmp
sub
jge
or
jl
insb
in
aam
les
mov
je
fcoml
cmp
sub
jge
imul
jl
and
rolb
popa
ja
int3
mov
push
incl
aaa
das
pop
adc
pop
iret
jo
clc
xchg
or
movl
jmp
fs
push
fdivrl
pop
inc
imul
push
insb
mov
cmp
ret
clc
cmp
push
mov
movsl
dec
xchg
repz
or
jnp
lods
xor
shlb
movsb
sub
ljmp
in
add
mov
push
fcmovne
jmp
or
in
faddl
pop
mov
imul
cmpsl
add
fnstcw
xor
stos
or
cmp
and
or
ret
mov
mov
or
insb
mov
aam
cmp
xor
and
adc
add
je
fcoml
cmp
sub
sbb
or
jl
insb
in
aam
or
call
inc
mov
xor
mov
or
cmp
call
aaa
mov
faddl
mov
outsb
roll
fs
or
push
nop
lret
ja
jno
jl
inc
in
fcoml
cmp
sub
sbb
or
jl
insb
in
aam
les
mov
je
fcoml
cmp
sub
sbb
or
jl
insb
in
aam
les
faddp
popl
and
xchg
pusha
xchg
jp
push
stos
cltd
mov
xchg
push
insb
out
out
roll
cwtl
jb
jae
inc
shl
pop
in
cmpsl
sti
in
push
adc
and
inc
mov
scas
sbb
data16
jmp
jg
sbb
mov
in
ljmp
push
mov
out
push
xor
mov
pop
jno
daa
mov
adc
jns
loopne
jae
arpl
adc
mov
shrl
jl
jo
or
fs
or
sbb
jge
stos
sbb
clc
sbb
test
aas
movsl
and
pushf
add
pusha
adc
scas
in
ss
mov
roll
enter
shrb
xchg
mov
xchg
mov
clc
out
cmpsl
out
repz
leave
dec
or
mov
fstpl
jne,pn
jp
and
dec
mov
jecxz
mov
cs
lcall
cmp
jecxz
push
fwait
push
jb
mov
pop
xchg
mov
rol
mov
jp
scas
lods
mov
jp
mov
cmp
push
leave
enter
jno
and
sbb
ja
cld
inc
push
sub
sub
dec
mov
leave
sahf
loope
daa
sbb
fildl
clc
lea
fs
outsl
adc
mov
cs
jns
mov
in
aad
lcall
cmp
test
arpl
stos
daa
mov
xor
inc
and
jle
fnstenv
adc
jb
jo
ficompl
jp
stos
add
pushf
sarb
xor
dec
xor
push
jle
sbb
xchg
xor
xchg
jg
sahf
jmp
pop
iret
pop
fldl
sti
js
mov
mov
adc
or
fisubl
push
cltd
shl
addr16
test
pop
mov
or
fwait
mov
test
cmp
sub
jae
imul
add
out
imul
pushf
mov
lea
in
jl
scas
push
cmp
cmp
mov
stos
pop
sarl
imul
sbb
test
in
pushf
ret
jns
or
pushf
pop
hlt
dec
lahf
jae
dec
imulb
out
mov
push
int3
cwtl
std
pop
imul
pop
and
mov
daa
into
filds
lcall
je
sbb
push
mov
sbb
mov
add
lret
sti
idivl
dec
mov
and
xor
mov
jle
jle
push
mov
out
pop
mov
mov
xorb
cmp
cmp
ljmp
push
hlt
sbb
int3
cli
in
int
cwtl
sbb
movsl
xchg
pop
nop
pop
dec
les
mov
xor
das
loop
cmpb
outsl
and
lahf
pusha
push
jno
adc
adc
mov
push
cli
cmpsl
jle
push
loop
cmp
stos
sbb
push
fldt
inc
push
inc
sahf
shlb
in
xlat
jge
mov
movsb
icebp
jg
popf
lods
jnp
and
and
aam
fldcw
dec
ret
inc
stc
xor
pop
jne
je,pt
add
ljmp
push
adc
cld
mov
je
mov
gs
adc
imul
pop
int
sbb
and
roll
into
mov
rcll
iret
lds
imul
imul
sub
outsb
in
add
notb
mov
les
lahf
loope
mov
push
dec
add
xchg
jecxz
repnz
rclb
jl
sbb
jmp
inc
leave
repz
loop
jecxz
mov
pop
mov
mov
pop
scas
push
je
mov
aad
push
jne
jl
fnstsw
dec
sbb
bound
fsubp
mov
popa
lods
jp
jg
std
add
jecxz
jg
sti
ja
cmp
sbb
jnp
cmp
imul
shl
xchg
lahf
xchg
sub
loope
sub
and
add
ja
in
in
sbb
lds
pusha
test
test
jo
test
negb
pop
add
jmp
mov
sub
sti
ja
leave
out
popa
inc
sbb
imul
mov
outsb
or
sbb
and
mov
repz
or
fwait
push
pop
lods
int
pop
aam
in
dec
sub
push
fisubl
and
outsl
incb
or
jnp
inc
jp
xchg
nop
adc
xor
shll
dec
jge
lock
xor
xor
bound
ljmp
fstpl
movsl
test
aas
test
adc
imul
iret
sub
loopne
adc
mov
lret
es
insb
int3
jb
int3
adc
jbe
sbb
mov
add
push
inc
xchg
mov
push
movsb
cmpsl
xchg
iret
fs
lods
gs
inc
and
pop
lds
test
push
repz
pop
leave
lock
inc
testl
icebp
aam
xchg
mov
dec
ds
dec
or
mov
sti
fsub
jecxz
xor
mov
mov
xchg
adc
sbb
bound
push
adc
addr16
sti
pop
pop
cmp
arpl
dec
mov
and
pop
in
rcrl
aam
movsl
dec
xchg
daa
xchg
or
jae
ljmp
leave
or
sbb
pusha
icebp
popf
mov
mov
ds
mov
mov
mov
sbb
movsb
movl
imul
dec
packuswb
xchg
inc
mov
ficomps
dec
push
pop
icebp
fwait
add
push
icebp
mov
lods
mov
lret
pop
inc
mov
sub
lods
cmc
cld
sub
adc
push
lret
int
les
or
add
fmul
pop
mov
and
sti
repz
ret
pop
sub
adc
clc
mov
ret
out
mov
arpl
mov
gs
mov
dec
or
fildll
dec
gs
out
dec
cs
std
in
push
jne
arpl
rolb
addb
adcb
xchg
rorl
or
and
arpl
sub
outsb
adc
add
adc
mov
bound
pop
add
repnz
cmpsb
adcb
xlat
in
ret
dec
sbb
in
jbe
xchg
and
inc
out
push
call
scas
call
jle
mov
pop
sub
dec
gs
pop
sub
mov
mov
jg
mov
and
pop
cmc
pop
jle
mov
mov
int
mov
cmp
sub
inc
gs
sbb
mov
push
xor
incl
or
and
add
cmp
add
cmp
jle
fsubl
mov
xor
pop
mov
mov
xor
das
pop
pop
pop
test
out
xor
cli
loop
add
popf
ss
cmp
push
cmp
or
stos
mov
mov
nop
sub
push
aas
pop
rcrb
lods
push
mov
cs
mov
in
into
pop
xchg
add
je
pop
mov
jle
pop
or
jnp
repz
repnz
sarl
push
pushf
sub
or
adc
insl
ds
arpl
xor
mov
pop
ret
lea
mov
iret
test
mov
xor
lock
push
testl
aad
cltd
jbe
in
pop
rcl
and
addl
cld
push
lea
mov
cli
mov
inc
jp
push
lock
dec
adc
iret
nop
xor
rcrl
adc
cld
lock
loope
sarl
mov
in
cmpsb
test
add
and
mov
push
cld
jnp
jbe
xchg
dec
std
jg
push
jnp
jo
mov
rolb
mov
sub
enter
xor
sub
das
test
xor
pop
jns
std
sarb
jmp
jl
ja
cmp
aam
xor
lock
scas
jecxz
sub
jo
iret
fnstenv
sbb
out
push
pop
popa
adcl
fistpll
adc
jg
xchg
sub
xor
xor
push
pop
shr
or
mov
adc
or
sahf
sahf
dec
mov
ret
add
les
adc
leave
fsubrl
je
je
sbb
into
adc
inc
fiaddl
mov
inc
or
push
mov
ja
out
push
add
es
mov
xchg
lds
fistps
ret
test
jno
push
sbbb
loope
out
xor
addl
sub
lds
mov
rcl
fdivl
and
mov
xchg
aad
and
push
out
jp
mov
mov
mov
push
and
or
cmp
stos
push
in
aaa
xchg
jl
sbb
stos
sub
xor
inc
mov
push
fwait
cld
mov
lahf
xchg
test
mov
dec
or
rol
hlt
add
sbb
arpl
jle
jno
daa
push
xor
pop
push
mov
and
lret
aad
les
scas
pushf
test
in
jbe
into
jne
cmp
sbb
mov
ljmp
mov
inc
bound
icebp
shrl
testb
arpl
movsl
mov
popa
dec
mov
dec
mov
lds
push
enter
out
rclb
inc
mov
leave
repnz
mov
push
xor
insb
test
push
push
add
stc
xchg
sbb
cmp
cmp
repnz
rorb
les
mov
fisubrs
inc
cmp
xchg
xor
imul
add
add
sbb
addr16
jno
push
clc
adc
daa
addr16
loopne
shl
aas
cs
insl
mov
in
pop
cmp
lret
lahf
xchg
mov
jbe
sarl
dec
lods
and
test
pop
fsubrl
out
pop
xchg
xor
mov
sub
mov
rclb
lahf
xchg
dec
pop
imul
push
adc
scas
push
aad
js
addr16
mov
adc
jmp
cltd
dec
and
testb
arpl
sbb
scas
and
or
or
pop
in
jno
sub
mov
jle
sbb
jecxz
loope
aad
repnz
les
out
sahf
sub
outsb
loopne
je
addr16
cmp
je
mov
dec
cmpsb
cmp
insb
test
sub
add
mov
das
out
gs
adcl
pop
cmp
jnp
ljmp
or
mov
lcall
and
xchg
inc
ja
roll
imul
push
push
xlat
sub
xchg
xor
mov
cmp
jae
mov
add
in
loopne
sbb
add
ret
rol
pop
insl
imul
movsl
imul
fs
sbb
or
mov
add
jns
mov
mov
xchg
pop
mov
repnz
sbbb
sub
icebp
jg
enter
adc
jmp
push
addr16
out
ja
pop
add
out
add
mov
adc
sub
inc
in
jmp
subl
xchg
jp
and
js
lret
stos
mov
insb
add
aas
jbe
dec
mov
jb
popf
dec
ss
mov
ret
popf
ds
inc
adc
lds
cmp
pop
test
xchg
in
adc
adc
xor
popf
pop
div
inc
push
call
dec
push
movsl
push
out
inc
inc
jl
js
mov
movsb
lods
mov
add
mov
jbe
dec
add
jp
mov
and
inc
push
ja
push
mov
mov
daa
sub
cmpl
sbb
inc
rol
ret
mov
and
push
pop
pushfw
inc
int3
pop
fdivs
js
lods
push
cmp
fldcw
les
and
jmp
mov
rcrl
rcl
jne
testl
outsb
push
faddl
ljmp
xchg
sar
xor
xchg
icebp
sbb
scas
ja
repnz
mov
xor
cmpl
mov
gs
mov
test
adc
jno
or
or
jle
xchg
sbb
xchg
lea
sbb
popa
push
mov
idivl
ud0
or
sbb
cmpsl
dec
xchg
adc
add
add
jp
in
adc
inc
mov
push
shr
aaa
xor
jmp
adc
testb
mov
cmpl
in
jne
cmc
inc
push
and
dec
int
and
push
jne
xorl
outsb
inc
ja
sub
push
mov
std
push
insb
aaa
sahf
jmp
out
lods
outsb
dec
xchg
jbe
dec
jp
xchg
adc
mov
xor
dec
jl
push
jp
add
mov
mov
mov
sub
pop
xchg
in
nop
jp
pop
mov
adc
jl
stos
out
mov
cmp
test
dec
mov
mov
mov
jmp
push
mov
cmc
mov
test
ret
xor
out
xor
jecxz
cmc
in
push
div
push
daa
sub
lock
popa
insl
stc
mov
fcomps
lcall
hlt
fstps
ret
out
test
cmp
pop
inc
add
lret
sbb
aaa
add
sbb
dec
jbe
sbb
idivb
sbb
div
or
add
ds
mov
xchg
pop
ds
mov
movsl
shlb
pop
cmp
sbb
inc
movsl
nop
xor
dec
mov
adc
mov
dec
sbb
frstor
pop
mov
xor
inc
hlt
add
testl
popa
popf
insl
dec
dec
jecxz
xlat
sbb
sub
dec
imul
xchg
sub
and
pusha
sarb
stos
out
sbb
dec
push
les
jle
es
das
cmpsb
jmp
out
push
sub
neg
mov
es
xchg
lea
push
jl
je
fstpl
leave
lods
lods
cmp
inc
outsb
pop
mov
pushf
xchg
lret
jmp
bound
roll
cmpsl
push
jns
daa
je
mov
xor
and
xor
and
repz
xchg
popa
jmp
jmp
adc
icebp
mov
and
or
sahf
mov
iret
push
lds
clc
cli
fidivl
repz
push
xor
arpl
push
stc
mov
pop
int3
pop
and
aaa
stos
ficoms
inc
aaa
inc
mov
int3
loope
lcall
or
adc
rclb
pop
xchg
xor
inc
movsb
jnp
sub
ret
in
or
push
test
rorl
loope
nop
dec
cwtl
xchg
push
mov
out
sub
adc
mov
xor
out
add
cmp
inc
xor
and
dec
or
mov
bnd
fnstsw
add
xor
adc
fwait
js
popa
idiv
pop
pushf
sub
lcall
adc
pop
xchg
xor
sub
lds
es
add
rorb
aad
jp
iret
imul
inc
mov
roll
lcall
out
or
mov
out
loop
stos
xor
ljmp
sub
das
imul
je
push
xchg
sbb
mov
mov
imul
push
mov
mov
adc
cmp
fnstcw
je
xchg
pop
movsl
into
xchg
xadd
rorb
imul
sub
adcl
outsl
push
mov
inc
jge
add
pop
sub
insb
rolb
aad
or
inc
fildl
adc
testb
rorb
movsl
adc
pop
pop
mov
ja
lds
jbe
mov
popa
inc
push
call
inc
js
adc
mov
ss
or
stos
and
ds
add
shlb
js
aad
adc
xor
sahf
xor
into
aam
mov
sbb
push
pop
lcall
mov
ja
dec
mov
add
mov
aad
out
mov
inc
int
stc
sarb
fs
aas
leave
mov
xchg
mov
mov
xchg
xor
cmc
cli
sbb
sarl
jp
cmp
icebp
aad
adc
insb
and
push
ljmp
aad
push
adc
mov
cmp
gs
sti
pop
lods
rorb
jle
fwait
int3
jecxz
jl
lahf
xchg
fs
or
xchg
repnz
popa
das
xorb
sbb
and
cmp
sub
push
cwtd
dec
icebp
sub
in
test
leave
push
or
test
les
jl
repz
jg
mov
out
xchg
xchg
aam
xlat
lahf
shll
push
push
and
pop
mov
adc
arpl
lds
pusha
cli
push
fucomip
cs
inc
or
out
mov
lcall
xchg
lahf
jl
pushl
sub
and
nop
sarl
fmuls
int3
fstl
repnz
sahf
sbb
jmp
popf
cli
call
lds
std
inc
jnp
or
scas
fstpt
push
fs
fisubl
xchg
pop
push
push
lret
popf
in
adc
fsubl
jo
mov
enter
jg
xor
push
dec
jae
mov
pop
bound
test
mov
cmp
ljmp
mov
leave
lods
add
stos
imul
int
fs
es
sub
js
dec
fsts
insb
xor
mov
add
jae
loopne
imul
inc
push
pop
jl
inc
sub
jae
sub
add
cs
out
xchg
daa
repnz
mov
jb
cli
mov
push
adc
sub
push
inc
sbb
or
movsb
jns
mov
dec
shll
fwait
dec
mov
jbe
pop
std
xchg
mov
fisttpl
jbe
bound
push
in
mov
out
cmp
je
daa
aad
loope
dec
mov
mov
sbb
sub
dec
lcall
imul
dec
dec
imul
adc
push
fsubs
mov
xchg
push
imul
cmp
das
cmp
out
out
sbb
xor
mov
pop
mov
int
es
cmp
sti
aam
xor
dec
outsl
sub
aaa
out
mov
sub
mov
xchg
pop
fstpt
xchg
and
push
add
imul
or
imul
mov
insl
jb
iret
xor
sbb
inc
mov
dec
mov
das
mov
inc
data16
out
out
into
push
add
add
xor
out
mov
gs
ret
push
inc
cmovge
movsb
lock
pop
sahf
xor
jbe
aam
pop
mov
sub
movsb
jecxz
pop
mov
cwtl
shl
push
mov
adc
add
cld
mov
xchg
test
in
mov
dec
lahf
adc
lods
mov
iret
imul
mov
sub
xlat
and
xor
daa
adc
fbstp
scas
xchg
ljmp
pushl
mov
push
mov
pop
and
xor
xchg
rclb
clc
mov
pop
dec
aad
dec
push
inc
sub
imull
daa
icebp
inc
and
cwtl
les
insl
or
xor
test
xchg
lcall
cli
cmc
jp
mov
push
out
int
mov
sbb
lret
test
jg
and
sub
adc
ret
lock
adc
jmp
cmp
inc
mov
jle
sahf
jnp
mov
dec
sahf
ret
in
lahf
iret
sbb
sub
push
mov
enter
jo
mov
repz
sarl
movsb
dec
or
adc
daa
or
xchg
mov
lea
push
repz
imul
pop
xchg
bound
add
je
out
xor
xor
ljmp
inc
pop
and
jp
sbb
xlat
arpl
xor
add
dec
enter
xor
and
in
in
mov
ss
dec
mov
mov
test
das
dec
cwtl
or
out
push
xchg
or
or
in
pop
ror
lds
sahf
out
jns
xchg
add
or
adc
fadd
push
cmp
cmpxchg
rclb
test
sub
test
out
jle
jmp
or
mov
adc
xor
xor
das
cwtl
sub
mov
in
nop
inc
push
mov
xlat
and
lock
insb
pop
test
test
testb
test
or
lock
xor
push
xlat
jb
idivl
mov
notb
push
adc
lret
dec
daa
cmp
sub
dec
push
cli
jbe
jnp
cltd
addr16
mov
dec
jp
inc
or
fnstcw
int3
xchg
adc
inc
inc
jae
fistpl
cmpsl
and
mov
insb
jp
jae
sbb
jne
rcrb
sub
clc
sub
adc
xchg
inc
out
inc
mov
call
rcll
test
inc
add
jo
push
fwait
insl
sti
imul
jl
jne
cmp
xchg
out
ret
imul
sub
jle
jecxz
les
inc
hlt
jmp
push
sbb
int
sbb
and
cmp
hlt
pop
pop
push
lea
testl
daa
push
ds
adc
add
je
fcoml
cmp
sub
sbb
or
jl
insb
in
aam
les
mov
je
fcoml
cmp
sub
sbb
or
jl
insb
in
aam
les
mov
je
fcoml
cmp
sub
sbb
or
jl
insb
in
aam
les
adc
add
je
fcoml
cmp
sub
mov
or
or
mov
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
shll
loope
cwtl
lahf
out
imull
jno
popa
pop
adc
loop
push
and
mov
cmpsl
icebp
xchg
loope
xchg
testl
inc
jno
popa
pop
adc
xor
and
mov
cmpsl
icebp
xchg
loope
xchg
testl
daa
add
pop
adc
jb
jb
dec
inc
movsl
mov
clc
icebp
clc
mov
sahf
xor
add
or
push
jnp
data16
test
icebp
sbb
xchg
je
sbb
dec
xchg
fmuls
add
mov
jo
cs
stos
mov
pusha
test
les
ss
sub
lret
popa
xlat
in
adc
cmpsl
mov
and
shll
out
stc
idivb
call
in
int3
dec
nop
call
add
adcb
je
sbb
outsb
mulb
inc
push
lret
dec
jo
call
sbbl
lret
icebp
push
jle
orb
adc
inc
add
addl
push
mov
adc
loope
xchg
testl
daa
jno
popa
pop
adc
xor
cs
mov
out
hlt
fwait
out
out
cltd
and
push
add
inc
xchg
push
inc
adc
push
push
push
cmpsl
mov
movsl
xchg
xchg
mov
xor
in
and
push
or
popa
push
pop
xor
mov
shl
incl
mov
mov
daa
jno
popa
pop
adc
xor
inc
shll
loope
xchg
testl
daa
jno
popa
pop
adc
xor
inc
shll
sahf
rolb
or
jnp
jo
sub
dec
orl
xchg
stc
fimull
push
sbb
and
mov
test
insl
daa
js
mov
mov
cmp
add
xchg
arpl
lcall
add
mov
lcall
jge
dec
clc
js
xchg
or
jbe
lods
movsl
push
notl
std
out
mov
mov
xchg
dec
mov
jne
ja
cmp
fcomps
and
lods
popa
sbbl
stc
sub
popf
push
mov
xchg
xchg
in
push
orl
sub
inc
push
push
jnp
movsl
arpl
jae
sbbl
xor
adc
pop
sub
jne
jge
dec
loop
mov
fs
and
xchg
jne
or
sub
sub
sub
popa
cmp
xchg
std
sub
push
jo
sub
out
add
fmull
out
shll
adc
push
jb
mov
jne
in
or
div
xor
daa
inc
add
popf
loope
pop
fcoml
adc
call
lret
inc
in
roll
push
push
push
popl
dec
sbb
cmc
fimuls
sahf
xor
gs
inc
imul
fcoms
mov
lock
mov
mov
cmpsl
int3
mov
loope
pop
ret
outsb
pop
add
lahf
pop
stos
xchg
pop
mov
insl
shl
adc
pop
lret
sbb
push
loope
lea
mov
cmpsb
sbbb
outsl
adc
lea
push
inc
sbb
loop
imul
sti
dec
movsb
jg
rcrl
pop
loopne
cmp
cmp
and
popf
cwtl
int
mov
push
pop
push
rcrb
push
stc
loop
mov
cld
jo
jae
mov
mov
mov
push
mov
mov
fs
pop
aaa
cmpsl
and
inc
adc
fldlg2
cmc
xor
inc
insb
mov
push
fmuls
mov
negb
lahf
dec
inc
mov
xorl
out
addr16
or
dec
aad
or
or
sub
insl
lock
stos
jg
loopne
inc
out
dec
push
scas
xor
cmp
or
xor
notb
push
test
and
lcall
stos
scas
xor
xlat
pop
stos
int
mov
xchg
shlb
mov
imul
mov
stos
mov
divl
add
imul
sub
ss
sbb
lods
loop
inc
jecxz
jle
sbb
out
inc
lds
push
pop
cmp
pop
jle
dec
or
addr16
imul
xchg
stos
xchg
or
shlb
pop
js
aam
mov
ljmp
jle
or
add
sub
out
outsb
insb
jb
nop
adc
cmp
xlat
or
sbb
and
jnp
test
mov
adc
insl
cmp
add
icebp
push
daa
ljmp
test
out
mov
clc
sti
xor
xchg
mov
adc
pop
or
inc
xchg
cld
xor
icebp
adc
and
inc
xchg
adc
and
jp
rolb
mov
mov
into
loopne
jb
mov
pop
arpl
cs
ret
and
repz
ljmp
repz
jns
lret
es
sbb
bound
fstpt
fidivrs
adc
ret
adc
sbb
xor
cwtl
sarl
in
fwait
add
dec
jnp
imul
cmp
out
lods
les
ss
fnsetpm(287
jne
fadds
sbbb
xor
push
xchg
inc
xchg
sarl
mov
mov
push
imul
bound
sbb
xchg
mov
stos
push
add
add
dec
jns
lods
jle
iret
or
fnstsw
hlt
cmp
fsubs
loope
aaa
mov
sbb
jp
xchg
adc
clc
mov
xchg
pop
movsl
rcrl
adc
ret
pop
pop
xorl
push
adc
cld
jp
mov
leave
inc
lcall
sti
insl
or
push
xor
ljmp
mov
pop
inc
jp
xorb
xchg
rolb
inc
mov
jp
pop
mov
cmp
inc
out
enter
movl
dec
or
imul
xor
test
push
push
push
inc
xchg
sub
repz
repnz
push
outsb
jg
xchg
xlat
mov
or
push
mov
xor
imul
mov
aam
and
pop
lret
sarl
call
gs
xorl
fimuls
push
sbb
fdivr
jg
mov
pop
iret
jp
pop
push
and
sahf
xchg
push
mov
cmpsl
dec
call
sahf
cmpsl
orl
fcoms
lcall
fwait
and
call
jno
shl
out
lret
leave
cmp
out
dec
daa
lods
lcall
push
adc
sarl
sub
xchg
xor
jns
xor
inc
mov
or
stc
cmpsl
loop
outsb
sbb
cld
test
cmp
scas
mov
mov
push
inc
stc
data16
popf
int
inc
movsb
mov
dec
xchg
push
jle
inc
fbld
jge
test
xchg
mov
lods
jb
inc
ret
mov
mov
push
add
mov
pusha
bnd
scas
in
mov
cltd
mov
mov
orl
jno
jmp
imul
xchg
adc
sbb
or
mov
fidivrl
xor
push
inc
adc
int3
test
ret
popf
sbb
mov
in
inc
dec
dec
adc
aaa
jmp
add
dec
add
inc
or
add
scas
mov
fists
cwtl
std
dec
outsb
aas
cli
mov
call
aam
mov
pop
out
mov
lds
adcb
adc
adc
cmp
cmp
hlt
mov
and
rorl
pop
mov
and
mov
mov
or
xchg
andl
cmp
xorl
cmpb
ret
sbb
imul
pop
pop
push
ret
jo
imul
mov
jo
jb
push
sub
xor
dec
icebp
int3
jmp
add
repz
xchg
mov
xchg
sti
xorl
or
mov
mov
sub
push
dec
pop
push
push
mov
mov
outsl
or
adc
cmp
fiaddl
aas
lods
mov
test
enter
push
mov
adc
outsl
pop
imul
in
addr16
pop
sarl
sub
xchg
in
dec
das
add
out
cmp
lret
cwtl
je
xor
sub
and
int
pusha
cmp
cmp
icebp
orl
in
pop
hlt
aaa
mov
jl
mov
popf
in
daa
xor
cmp
jmp
insl
into
inc
rorb
sbb
push
in
iret
xor
jns
stos
pop
movsl
ret
loop
movl
jae
gs
pop
xor
fstpt
pop
or
push
loope
loope
imul
repz
bnd
sub
jbe
aam
imul
into
lods
out
adc
mov
adc
rclb
lods
js
mov
cmp
dec
hlt
mov
imul
mov
mov
and
sub
adc
bound
scas
push
jmp
pop
inc
ret
lret
push
lock
dec
cmp
xor
shll
out
mov
or
in
or
adc
mov
into
lock
cli
and
test
dec
or
mov
mov
sbb
fidivrl
jg
jle
push
out
mov
je
dec
add
ljmp
lcall
push
xorb
ror
xor
jmp
add
aas
and
repnz
mov
mov
scas
loop
mov
adc
xor
or
xchg
dec
push
xchg
loope
push
and
mov
mov
sub
push
sbb
sti
mov
aam
xor
jge
adc
fs
repnz
push
addl
movsb
ds
xchg
pop
lret
mov
pop
in
scas
add
push
xchg
icebp
pop
out
shr
sub
push
inc
adc
sbb
mov
jecxz
xchg
push
pusha
ficoms
cmpsl
push
sbb
mov
das
icebp
ret
inc
jp
lods
jg
cmpsl
sub
fidivs
xchg
inc
testl
cli
xchg
pop
stc
mov
lock
mov
imull
cmpsb
cmp
inc
mov
cmpsb
inc
outsb
push
popf
or
call
xor
lret
cmp
sub
mov
fldt
stos
movsl
adc
repz
dec
push
mov
movsl
mov
lock
cs
dec
cld
sub
inc
gs
add
xchg
aam
test
mov
dec
fadd
add
das
push
and
scas
aad
dec
cmpl
mov
and
in
jo
push
sahf
insl
je
int
xchg
add
insb
pop
jg
into
fbld
pop
jbe
movsb
sub
hlt
pop
daa
jae
push
dec
scas
aam
loopne
mov
imul
push
mov
pop
cmpsb
lds
inc
jp
mov
lahf
push
imul
imul
xor
lea
jo
icebp
mov
ss
xor
sahf
mov
push
and
insl
inc
mov
push
jns
mov
dec
inc
mov
cmpsb
rorl
call
sbb
push
xor
mov
mov
outsl
xchg
sbb
leave
arpl
pop
jbe
sarl
pop
imul
aas
fwait
jp
test
sub
xor
imul
cmp
aaa
fsubrs
cmc
push
cli
in
xor
es
inc
dec
xlat
push
movsl
xchg
pop
loopne
ljmp
dec
pop
push
pop
xor
adc
ljmp
cmp
or
and
mov
and
sbb
ljmp
mov
pop
aad
adc
add
inc
dec
adc
movsb
fisubrl
sbb
cld
subps
pop
lahf
lods
hlt
xchg
add
jg
in
addl
mov
push
std
xor
stc
dec
ljmp
xor
or
pop
sbb
shlb
or
test
push
xor
stc
adc
xor
mov
inc
dec
inc
adc
add
xchg
push
mov
mov
add
ret
cmp
inc
push
xchg
sub
mov
inc
out
lods
add
ficompl
pop
mov
stos
ljmp
out
sub
popf
push
jb
cmc
xor
popa
pop
pop
adc
in
push
add
adc
rcrl
lods
and
push
push
sbb
jp
stc
jns
cwtl
pop
dec
idiv
out
aas
mov
scas
xor
adc
imul
je
dec
mov
jns
push
mov
ficoms
cmp
and
mov
jmp
mov
sub
jne
or
cmpsb
into
add
cmp
mov
lret
into
aaa
xchg
mov
movsb
or
popa
xor
mov
movsl
inc
insb
sbb
mov
sub
or
pop
jno
popl
xchg
aaa
adc
andl
pop
int
movsb
pop
pop
ds
or
testb
push
sbb
bound
pop
xchg
mov
fwait
lea
data16
cmpsl
bound
hlt
push
adc
stc
sbb
shll
lahf
push
aas
sub
jp
inc
mov
cwtl
sub
pop
sbb
dec
lahf
cmp
in
andl
lods
and
rcll
pop
inc
jnp
scas
scas
jo
arpl
push
lcall
jmp
lds
aaa
push
sarb
mov
jmp
stos
fs
dec
icebp
icebp
cld
pop
out
xchg
clc
mov
pop
push
jecxz
arpl
mov
jae
dec
jbe
hlt
and
jecxz
dec
push
mov
dec
imul
ss
mov
inc
stc
sbb
jns
in
jnp
sub
fimuls
nop
dec
push
and
iret
xlat
fwait
call
jg
and
push
aas
push
pop
js
fiadds
or
ret
mov
pop
test
add
insb
je
pop
test
lea
ret
inc
inc
cmp
popf
aam
push
ja
clc
sbb
pop
lods
adc
lods
mov
stos
xchg
push
dec
or
push
bound
iret
dec
loop
lret
js
stos
fwait
jp
pop
fsubl
pusha
stos
in
dec
mov
mov
push
pop
sub
sub
sbb
cmpsb
cmp
jnp
mov
addr16
cli
in
jecxz
js
addb
in
es
mov
jae
outsb
mov
mov
out
rcll
mov
nop
push
daa
mov
les
js
add
mov
jmp
xorl
imul
add
push
adc
pop
or
jns
mov
or
adc
xlat
hlt
pop
stos
pop
daa
loopne
push
cmc
test
lret
movsb
sub
or
iret
adc
movsl
sub
dec
jge
cmp
ds
les
sbb
pop
fidivrl
rclb
sbb
adc
push
push
in
add
inc
sahf
or
dec
stos
fcomip
imul
mov
fsts
data16
out
xor
sbb
push
and
fnstenv
or
or
nopl
jns
sub
mov
mov
adc
ds
leave
jle
repnz
sub
cmp
xor
pcmpgtd
add
inc
out
mov
out
ja
mov
adc
je
push
sbb
test
mov
sbb
and
or
mov
mov
or
xor
sbb
mov
sar
int3
mov
hlt
hlt
dec
movsb
adc
mov
pushf
mov
push
push
das
loop
out
xchg
add
adc
lret
movsl
sub
bound
adc
pop
mov
pop
out
loope
fldln2
test
rcr
fistpl
cmp
push
mov
push
arpl
inc
test
push
pop
scas
inc
inc
lret
push
inc
es
pop
sahf
adc
push
push
push
int
sbb
mov
ds
rolb
sti
ss
subb
pop
cli
scas
adc
add
push
lods
jg
push
mov
push
leave
lods
jmp
and
pop
aad
xchg
adc
push
pop
or
fidivrl
sub
fimull
jp
inc
lret
lret
xchg
test
sbb
out
inc
lret
push
dec
cli
gs
or
push
repnz
mov
cmpsl
add
imul
nop
lret
xchg
push
dec
pop
cmp
adc
scas
lahf
push
mov
mov
xor
ret
cmc
adc
mov
ret
jp
cmc
mov
call
ds
dec
stos
mov
jecxz
iret
call
adc
test
dec
xlat
mov
out
mov
push
shll
sub
cmp
xchg
push
movsl
fnsave
incl
xchg
es
hlt
shrl
sbb
pop
or
mov
xlat
in
sub
lea
lret
aaa
adc
dec
sbb
pop
sldt
inc
sub
sbb
pop
pop
sti
cmpsl
rcrl
mov
sbb
jo
scas
pop
cwtl
xor
xor
sbb
loop
dec
repnz
mov
jmp
loop
jmp
xor
ds
cwtl
push
idivb
test
imul
test
fists
mov
pushf
andl
cld
xor
fisubs
jnp
mov
sub
xchg
jo
xchg
dec
jb
fcoml
push
sti
cli
mov
adc
or
dec
mov
inc
and
dec
fstps
mov
mov
fwait
push
cmpsl
bound
or
ror
pop
push
rorl
cmp
hlt
pop
cld
mov
mov
jno
ret
sbb
pop
daa
mov
sub
outsb
std
aas
xchg
inc
sub
push
xchg
cmpb
mov
fstpt
insl
jne
pop
push
imul
or
push
mov
cmpsl
inc
dec
imul
or
xchg
mov
push
pop
xor
jo
and
jge
aad
mov
jb
jb
pop
xchg
or
cmp
ljmp
outsl
dec
push
and
push
adc
outsl
insb
jle
sub
push
ja
mov
pop
add
in
test
test
popf
push
jp
repz
les
cmpb
aad
dec
rolb
push
aad
cmc
and
sti
movsl
jl
call
out
in
and
fcomps
fidivrs
push
mov
add
cmp
adc
push
lock
cmp
pop
mov
jns
fsts
inc
mov
push
mov
adc
inc
inc
pop
jp
out
popf
adc
xor
jo
int
sbb
sbb
jnp
mov
or
pop
sbb
jl
adc
lods
dec
in
es
xchg
repz
and
adc
aaa
push
jno
pop
lods
mov
cwtl
inc
fwait
aam
jmp
sbb
test
xchg
or
push
jl
dec
xchg
lahf
mov
fs
ja
es
lock
cmpsb
adc
mov
xchg
jb
and
enter
lahf
loop
and
iret
xor
out
inc
jo
cmp
into
daa
sbb
jnp
add
outsb
push
es
jmp
cmpsl
gs
adc
xchg
adc
mov
sbb
pusha
insb
test
fs
pushf
sub
ljmp
adc
sahf
in
lods
sbb
inc
cmp
push
stos
std
sub
jg
fadd
repnz
fsubrs
test
adc
or
cmc
xchg
xor
lret
xchg
push
push
lods
outsl
dec
cltd
pop
outsl
mov
add
into
int
or
push
idivl
cwtl
jae
push
pop
aas
aas
subl
pop
in
push
xor
or
ret
ja
sbb
add
and
hlt
xor
popf
push
inc
popa
dec
out
or
scas
fs
sarb
jmp
roll
sub
fiadds
cmpsl
mov
inc
dec
shlb
out
mov
inc
mov
cmp
les
sbb
jno,pn
test
call
mov
xchg
push
cmp
aam
or
mov
and
dec
xchg
js
into
es
jmp
notl
mov
test
jbe
sbb
or
cmc
ret
leave
mov
cmp
pop
insb
adc
out
jmp
lret
dec
cltd
sbb
mov
cwtl
test
in
push
test
ja
pop
mov
jb
inc
bnd
dec
mov
aam
test
mov
out
cmp
fisubl
dec
lods
andb
lea
xlat
adc
cld
inc
test
or
push
popa
mov
les
pop
fsubrs
adc
inc
jmp
jnp
push
imul
aas
loopne
sub
jno
push
sahf
sarl
mov
or
jle
cmpl
jg
mov
lret
in
into
mov
aas
inc
dec
ljmp
jb,pn
jp
shrb
cli
push
push
stos
jne
add
sub
stc
or
idivb
add
dec
cmp
mov
jb
inc
shrl
mov
adc
jae
push
mov
fisttpl
orl
out
sahf
stc
jne
push
mov
jo
out
sub
negb
fisubrl
or
and
stos
or
aas
jo
push
sub
mov
addl
xorb
mov
js
sub
pop
cmp
mov
mov
sub
adcb
aas
cmp
imul
rol
and
idivb
xchg
mov
cs
mov
out
cmpsb
add
xchg
call
sub
cld
aaa
test
icebp
loop
jl
adc
xchg
push
push
jecxz
mov
es
jae
xchg
cld
pop
mov
cmp
pop
cs
xor
hlt
add
add
or
mov
inc
dec
in
push
pusha
scas
adc
mov
jle
mov
mov
adc
xchg
les
loopne
adc
into
mov
and
aam
pusha
sbb
pop
insb
fwait
test
in
test
loope
jo
decl
shll
daa
in
xchg
scas
mov
sub
mov
lret
ficomps
xor
fistl
cmp
ja
jns
xchg
cmp
adc
jle
pop
dec
pop
iret
ja
pop
or
test
fdivl
lcall
loop
dec
loopne
xor
leave
and
xor
das
clc
icebp
sbb
or
scas
aaa
xchg
mov
fisttps
loopne
sbb
frndint
adc
inc
xor
pop
pop
xchg
repz
dec
mov
ret
adc
mov
mov
push
imul
les
fildll
sbb
fists
popa
and
dec
and
push
in
aad
sbb
into
xchg
loope
xchg
testl
daa
jno
popa
pop
adc
xor
inc
shll
loope
xchg
testl
daa
jno
popa
pop
adc
xor
inc
shll
loope
xchg
testl
daa
jno
pusha
pop
adc
xor
inc
shll
loope
xchg
testl
fistl
popa
jo
decl
mov
in
xor
faddl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
daa
sub
jl
or
sbb
dec
sbb
cmpsb
push
xchg
pushf
out
cmc
adc
int3
xlat
fsubl
sub
cmp
or
sbb
insb
ja
inc
dec
push
jb
lods
mov
xchg
cld
int3
xlat
fdivrl
mov
cli
pop
xchg
punpckhdq
outsl
xor
inc
push
outsb
mov
in
out
out
out
cwtl
lcall
pop
jge
pop
popa
jns
arpl
xchg
nop
popf
and
dec
inc
push
into
iret
ja
xor
lock
xor
xchg
cmpsb
das
enter
stos
jecxz
jns
test
push
sahf
inc
jnp
imul
movl
gs
push
push
in
movsb
xor
int3
mov
dec
lods
mov
pop
or
sbb
sbb
sub
cmp
or
sbb
js
dec
mov
sub
popf
sbb
divl
xor
mov
mov
mul
cwtl
pop
outsl
jge
lea
jmp
insb
insb
pop
xchg
jmp
iret
rcl
ret
inc
jns
int3
cwtl
and
mov
pop
pop
pop
cmp
cli
pop
mulb
and
mov
mov
pop
sbb
insb
addr16
dec
dec
into
mov
mov
adc
aam
out
dec
sub
push
bound
jo
leave
adc
or
push
sbb
sub
jmp
stos
xchg
xchg
mov
mov
jp
jg
jo
ja,pt
inc
and
ror
xchg
lods
out
pushf
cld
mov
mov
inc
pop
pop
fsubrl
jg
das
and
inc
dec
push
pop
cmpsl
lods
mov
xchg
cld
int3
xlat
fsubl
sub
cmp
or
sbb
insb
ja
inc
dec
push
pop
cmpsl
lods
mov
xchg
cld
int3
xlat
fsubl
sub
push
jno
repnz
jae
add
insb
xchg
add
dec
or
mov
jmp
and
data16
cmp
adc
pop
in
popa
jge
jo
push
jns
jge
xchg
lcall
insl
add
outsl
in
testb
mov
push
mov
je
cs
arpl
jbe
jo
cmpps
jae
out
jp
out
sbb
stos
jmp
mov
xor
movsl
cmp
push
movsl
ds
xchg
add
shrb
adc
js
mov
xor
sbbl
popf
or
xchg
push
sub
mov
addl
insb
xor
das
jne
dec
test
fldt
mov
cmp
pop
fadds
dec
loope
mov
fstps
adc
xor
aam
or
xchg
jne
std
divl
loop
lret
xorl
dec
in
scas
imul
je
std
movb
sbb
clc
xor
mov
jb
add
iret
adc
mov
jb
loop
and
sahf
imul
jae
ja
push
and
into
out
lock
cs
add
pop
push
adc
or
adc
sub
imul
divb
loop
pushf
cmp
lcall
das
or
mov
cmp
sub
out
push
add
mov
rcr
cs
mov
dec
inc
inc
push
jl
lahf
rolb
pop
fs
mov
loop
jo
xchg
movsb
cmp
cltd
ret
movsl
or
adc
hlt
and
out
adc
movaps
xchg
loope
insl
cli
repz
jmp
mov
repz
shlb
sub
les
push
dec
popa
aas
pop
in
scas
mov
lret
mov
rol
mov
cmpsl
jge
add
mov
cmp
aad
daa
mov
jae
jbe
inc
aam
fsubrs
shlb
arpl
fcompl
push
insl
cmp
xor
and
xchg
shlb
in
movsl
jne
push
test
ss
repz
lods
and
pushf
cmp
inc
les
mov
mov
imul
clc
lods
dec
lods
add
fcomp
xchg
cmp
orl
mov
mov
incb
push
mov
inc
fsubl
outsl
push
push
jns
mov
cmp
adc
lcall
cmp
enter
inc
push
ja
mov
mov
or
and
cli
xchg
pusha
cmp
or
js
frstor
mov
into
xchg
pop
dec
push
xchg
test
cvtpi2ps
cltd
jne
lcall
pop
sbb
les
pop
and
push
lret
push
fstl
fdivs
xchg
das
stc
ret
mov
mulb
pop
dec
xchg
inc
xchg
bound
xor
lahf
or
sbb
cmpsl
jnp
call
out
div
mov
dec
mov
xor
fadds
mov
out
jbe
aaa
daa
loopne
cli
dec
and
dec
fadds
sub
or
mov
sbb
mov
dec
dec
stos
add
mov
mov
scas
lock
or
addr16
xchg
dec
xchg
mov
adc
lahf
shlb
imul
xor
mov
xchg
add
dec
jne
outsl
repz
cmp
pop
aas
push
ficoms
mov
jae
mov
xchg
test
cmp
fcos
sub
pusha
test
stc
loopne
add
pop
aam
dec
and
mov
pop
or
stc
mov
mov
sub
cwtl
pop
push
push
sbb
lcall
ret
js
xor
ror
repnz
fldt
outsl
mov
sbb
jo
xor
rolb
or
push
enter
scas
cmpsb
pop
push
adc
ljmp
cmp
fistpll
xor
push
pop
push
push
cmpl
daa
cwtl
xor
fisubrs
push
ret
xchg
xor
cmp
addl
neg
js
rcrb
out
sbb
adc
data16
adc
jp
add
mov
int3
mov
aad
out
iret
outsl
cmp
pop
sub
shlb
mov
cmp
aad
or
jmp
fdivr
xlat
nop
dec
sbb
fisttps
test
jno
fs
orb
jl
lds
sub
outsl
inc
jbe
xchg
cld
orl
adc
pop
lret
jge
movsb
test
loop
bound
repz
int
or
test
incb
pop
or
iret
popa
mov
ljmp
repz
or
jb
loop
daa
inc
fidivrs
test
gs
mov
sti
xchg
pop
outsl
pop
add
inc
aaa
xor
hlt
cmp
pusha
fcompl
ja
stc
pop
cmp
popf
out
jmp
xor
and
or
cmp
push
xor
push
push
or
ljmp
sbb
jl
imul
jne
sbb
out
adc
stos
push
cmp
in
shrl
cmp
jl
inc
jns
xchg
sub
cmc
pop
pop
je
fnstsw
sub
mov
jae
loope
repz
sub
movsb
cmp
sub
rcll
xor
movsb
fildl
fcompl
mov
add
sbb
add
lock
insb
xor
or
cmp
mov
les
and
cmpsl
pop
rorb
mov
fcomps
stos
and
lcall
jle
xlat
mov
out
lret
cmp
or
xor
mov
repnz
repnz
mov
inc
scas
aam
andl
ds
jo
cli
lods
iret
cmc
mov
loop
movsl
lahf
xor
dec
mov
pop
add
hlt
ljmp
fistpl
xchg
pop
or
addr16
xchg
imul
movsb
aam
mov
cmc
add
movsl
fimuls
jge
mov
mov
sbb
fisubrl
sbb
jp
xchg
aas
cmp
js
mov
lret
cltd
loopne
mov
push
push
bound
pop
push
jbe
cmc
pop
mov
ret
test
mov
ret
sbb
add
inc
stos
jge
std
and
mov
jecxz
rclb
sbb
xchg
and
push
dec
sbb
jnp
mov
roll
fucomp
or
inc
cld
xchg
xchg
fs
and
pop
mov
or
scas
mov
test
pop
movsl
cs
push
bound
mov
pop
sbb
push
xchg
aam
jecxz
pusha
aam
pop
addr16
dec
bound
aam
and
mov
scas
popf
push
xchg
lods
inc
sub
push
fimuls
or
jmp
sbb
sbb
mov
in
bound
push
leave
aas
cbtw
addr16
stos
fs
sbb
jno
out
loope
pop
int
inc
dec
das
cmpsl
int
mov
lret
cmp
pop
test
xchg
loope
mov
and
mov
aad
lar
scas
jl
cmp
roll
inc
sbb
dec
data16
or
stos
ljmp
xor
js
cli
mov
sbb
inc
in
out
pop
iret
aam
movsl
into
lods
dec
scas
jo
and
movsl
cli
sub
repz
stos
push
adc
push
popf
fimuls
xchg
pop
scas
dec
mov
mov
pop
mov
loope
or
lea
push
dec
and
dec
lds
call
add
loop
xor
inc
stos
sti
mov
out
fiadds
loope
push
fwait
inc
mov
lds
push
iret
mov
into
jg
fldl
scas
pushf
negl
cmp
xor
and
mov
add
pcmpgtd
cli
int3
mov
pop
mov
je
dec
pop
push
repz
sbb
jne
jle
add
sub
adc
jno
shlb
dec
ret
dec
sarl
fwait
mov
inc
dec
pop
rol
pop
mov
fwait
in
popf
ss
jbe
sarb
jno
shl
xor
loopne
pmaxsw
stc
je
jbe
cltd
add
xor
ret
dec
lock
test
fnstcw
iret
jbe
inc
jmp
insl
sbb
jp
mov
fucomip
or
int3
inc
mov
xor
mov
loop
data16
stos
pop
pusha
jmp
fsubrs
fwait
mov
lahf
das
and
jmp
cmp
push
loope
mulb
mov
adc
test
adcl
mov
xor
jge
pop
rorl
push
xchg
xchg
and
lods
les
jge
adc
repz
cs
orl
mov
lret
in
loop
ret
xor
pop
sub
push
jns
push
xchg
mov
xor
inc
cmpsl
cmp
insb
outsl
dec
cli
mov
xchg
xchg
mov
mov
sub
insl
scas
outsb
or
mov
push
scas
and
jge
in
cltd
ficomps
clc
pop
xor
sub
aas
sub
pop
pop
sub
loope
and
cmpsb
lds
add
mov
jbe
mov
sub
test
add
in
sub
mov
sbb
jmp
into
stos
sarb
jno
lods
bound
mov
mov
mov
add
pushf
cs
lods
les
jmp
jg
out
test
addb
pop
xor
orb
out
call
push
bound
std
pop
pop
dec
xchg
xor
xchg
adc
sbb
adc
xchg
sub
mov
imul
and
stc
xor
adc
adc
arpl
movsl
jl
inc
ljmp
adc
lods
dec
pop
inc
inc
mov
sub
popf
lds
cmc
cli
addr16
pop
cmpsb
dec
outsb
xchg
push
sbb
mov
xlat
lea
cld
push
cltd
ficomps
dec
inc
mov
xchg
nop
inc
cmp
push
je
insb
xchg
pushf
xchg
mov
js
adc
out
rclb
sub
mov
rolb
mov
fcmovne
jg
adc
mov
mov
cld
mov
fmulp
sbb
imul
sbb
std
shlb
loope
out
aas
cmp
and
ss
cmp
shl
arpl
sarl
cmp
mov
mov
adc
fdivs
in
popf
adc
push
arpl
enter
cmc
xchg
rcrb
mov
mov
aad
int
cmp
add
fisttpll
xor
pop
inc
sbb
jle
dec
enter
push
outsb
mov
ficomps
shl
pop
aas
push
data16
xchg
jmp
or
out
xchg
stos
mov
dec
test
in
adc
push
jb
sbb
jge
les
sbb
adc
into
mov
push
dec
push
dec
or
adc
pusha
sti
jne
dec
rcr
push
mov
dec
jnp
xchg
or
push
mov
mov
jp
sti
xchg
in
fmull
imul
in
bound
fidivrl
mov
cmp
and
dec
adc
adc
pusha
xchg
sub
pop
cmpsl
shll
das
pop
pop
mov
sti
cmpsl
mov
clc
sbb
int
iret
xchg
xchg
pushf
cmp
inc
arpl
jae
addr16
inc
fadds
adc
cs
ret
ljmp
mov
pop
out
rolb
push
out
loopne
repz
pop
mov
fisttpl
pop
das
out
in
or
xor
cmp
out
insl
fwait
jne
test
stos
orl
les
popf
loopne
fistpll
xchg
popl
xor
cmp
xchg
xchg
cmp
push
mov
into
cmpb
cmp
sbb
push
adc
faddl
repnz
jmp
pop
inc
pushf
xlat
xchg
sub
mov
inc
mov
mov
mov
jle
psubusb
shrl
in
push
jmp
roll
int3
sbb
pop
fisubrs
pop
xor
xchg
in
pop
loopne
js
jne
popl
sarl
popf
xchg
xchg
fs
mov
add
divl
pop
psllw
or
jns
cmp
aad
loopne
sub
xor
xor
or
outsl
sub
icebp
jae
addr16
ja
cld
ja
mov
jge
dec
icebp
inc
sbb
mov
cmp
mov
into
pusha
pop
mov
out
pop
test
mov
pushf
loope
mov
jl
shrl
outsl
sti
xchg
mov
imul
insl
sub
push
inc
xchg
and
mov
out
push
daa
lods
scas
cmove
add
mov
inc
cld
pop
pusha
daa
sub
push
das
frstor
leave
je
in
jno
int3
mov
mov
pop
jns
mov
in
or
loop
xchg
mov
imul
xorl
lods
xor
pop
dec
ret
push
inc
mov
dec
test
clc
xor
or
aaa
int
push
js
lods
or
cmp
fs
xchg
inc
mov
leave
ret
notb
jns
sbb
or
iret
data16
jp
sbb
sub
loopne
adc
lea
daa
pushf
jecxz
mov
lods
xchg
jle
sub
adc
shr
push
cs
je
jnp
or
pop
mov
fwait
push
jne
pushf
outsl
cmpsl
mov
stos
jb
push
loop
jl
jns
aam
mov
aam
adc
push
ret
mov
repnz
sbb
push
pop
pop
or
arpl
lret
ja
inc
xor
mov
jmp
cmp
mov
cmp
in
loopne
xor
sub
nop
scas
fucomp
shll
fisttps
pop
inc
dec
jle
std
das
shl
fsubs
and
pop
icebp
pcmpeqb
xchg
ret
in
jge
mov
mov
xor
dec
cmc
cmc
jecxz
sbb
into
mov
fcmovb
clc
shlb
mov
rclw
xchg
out
pop
and
inc
bound
int
xchg
adc
xor
and
in
mov
and
nop
push
pop
aam
out
fsubr
add
outsl
xchg
xchg
les
cwtl
push
imul
add
adc
cmc
cmp
aaa
xchg
test
pushf
and
sub
mov
push
add
xchg
jg
in
dec
pop
xlat
les
testb
mov
inc
int
push
sbb
bound
shr
icebp
push
fs
fldenv
fildl
jnp
push
xchg
adc
fisubl
insb
jp
icebp
inc
popf
fnstsw
push
cmp
adc
shrb
cmp
data16
int3
adc
mov
repnz
mov
pop
inc
popf
adc
push
movsb
inc
push
sahf
sub
mov
xlat
push
aaa
mov
mov
outsl
mov
nop
loop
cld
out
jnp
xchg
dec
and
xor
das
cltd
jae
push
inc
jne
dec
ret
pop
xchg
jae
cld
push
add
pop
and
mov
push
mov
push
and
mov
jg
jb
add
mov
lret
adcb
fs
test
cmp
call
arpl
test
xor
cmp
lret
in
jnp
push
dec
adc
mov
mov
push
icebp
adc
xchg
cmp
fisttps
out
inc
mov
push
movsb
xorb
lods
mov
cmp
mov
inc
xchg
rorb
enter
jnp
aaa
dec
inc
in
sub
inc
mov
lret
clc
pop
xor
inc
and
or
dec
lods
and
pop
jns
or
sbb
sub
push
daa
mov
jmp
ret
jae
xlat
leave
cmp
or
das
addr16
icebp
stos
mov
clc
call
inc
push
push
or
sub
mov
jg
dec
arpl
lret
jae
iret
out
pop
flds
push
imulb
ss
add
std
dec
jl
movsb
pop
ljmp
pop
jns
cli
jb
testb
test
inc
or
sbb
aas
movsb
test
fimuls
lods
pop
outsl
sub
pop
sub
or
mov
scas
and
stc
jo
cld
imul
lea
push
outsl
push
xchg
repz
sbbl
mov
mov
stos
shlb
icebp
test
add
sbbb
jmp
es
pop
cmp
cmp
and
jle
dec
cli
add
inc
imul
ret
jne
and
and
cvttps2pi
jae
call
mov
jo
pusha
xchg
adc
sti
xchg
stos
into
lcall
roll
leave
stc
rcrb
leave
lock
sub
jne
jle
sbbb
push
into
xlat
cld
or
fcompl
mov
dec
subb
inc
lds
xor
and
mov
in
dec
ficoml
xchg
fs
stc
jmp
or
add
jmp
pop
xor
jmp
xorl
js
adc
add
jge
adc
pop
jge
and
or
scas
movsb
shl
loopne
mov
and
out
mov
dec
mov
or
mov
jle
and
pop
and
shrb
adc
pcmpgtb
and
aas
fistpl
imul
jns,pn
hlt
sub
mov
into
jb
cmp
push
mov
add
lds
add
out
push
cmp
cmp
jae
mov
dec
loope
lcall
sub
add
in
lret
test
into
dec
xchg
lret
push
adc
and
mov
and
aad
cs
hlt
stos
mul
jg
xlat
inc
rcr
mov
mov
dec
aam
mov
adc
sub
lea
mov
lods
dec
mov
pop
insl
mov
fidivrl
lods
out
xchg
stc
adc
dec
scas
loop
lahf
or
inc
hlt
es
aam
arpl
scas
sbbl
hlt
jl
xchg
push
in
shrb
ja
mov
fisttpl
jnp
mov
outsl
push
sub
mov
hlt
fcom
mov
jg
out
int3
cmp
cs
mov
sbb
repz
sti
testb
pop
aad
push
push
add
cwtl
in
into
or
nop
sbb
nop
jg
sbb
mov
mov
sti
jb
pop
sbb
lods
adc
ljmp
fimuls
or
sub
inc
mov
push
jo
add
mov
sub
sahf
test
push
shlb
ret
pop
dec
jnp
or
jnp
pop
add
cmp
sbb
pushf
ret
mov
xlat
aaa
xchg
fadd
stc
jl
mov
inc
xchg
in
mov
cmpsl
cltd
and
out
inc
sti
aaa
mov
test
push
sti
add
xchg
lahf
fs
xchg
loope
cmp
dec
sti
pop
pop
iret
mov
sbb
adc
jns
add
movsb
mov
pusha
pop
mov
fiaddl
or
jnp
inc
rorb
or
pop
jecxz
in
mov
outsb
pusha
pop
sbb
push
dec
sbb
lock
jge
daa
ja
dec
dec
xchg
adc
popf
pusha
lods
outsb
insl
fchs
adc
loope
dec
repz
sub
mov
sub
xor
sub
fstpt
rcll
idivl
sbb
pop
mov
lahf
mov
jp
mov
xor
lret
and
lods
cld
test
sti
movsb
push
jne
sbb
int3
mov
lahf
inc
xor
pop
mov
pushf
pop
mov
or
mov
ds
mov
lahf
fidivrs
dec
pop
daa
sub
adc
test
out
mov
adc
inc
pop
xchg
or
sahf
sbb
pop
jl
jno
dec
loop
mov
fildl
scas
mov
mov
out
sbb
lret
in
outsl
cmc
fldt
mov
mov
adc
es
sub
pushf
sbb
mov
pop
and
cmp
mov
sub
shlb
mov
cmpsb
sahf
or
jecxz
xchg
ds
shlb
in
or
pop
xor
shll
clc
adc
or
and
cmc
out
push
in
sub
and
mov
lret
pop
negb
vzeroupper
in
jecxz
imul
jb
mov
sub
inc
imul
mov
push
xchg
das
pop
sub
daa
cli
nop
cmp
mov
sub
inc
scas
cmp
stos
test
pop
test
inc
imulb
push
sti
lret
lds
jmp
lods
and
pop
aam
or
and
push
int3
shl
mov
or
aad
jae
aaa
adcl
cltd
cli
sbb
stos
sub
add
push
adc
fsub
das
scas
inc
add
stos
mov
enter
out
mov
sbb
add
inc
cwtl
sub
inc
sub
dec
add
lods
push
mov
cmp
or
sbb
insb
ja
inc
dec
push
pop
cmpsl
lods
mov
xchg
cld
int3
xlat
fsubl
sub
cmp
or
sbb
insb
ja
inc
dec
push
pop
cmpsl
lods
mov
xchg
cld
int3
xlat
fsubl
sub
xor
adc
sbb
ja
inc
dec
push
pop
cmpsl
lods
mov
xchg
cld
mov
xor
pop
gs
ja
int3
xlat
pushf
pop
push
dec
push
sub
xchg
jg
cmp
dec
fnstcw
out
je
fldt
jnp
das
jns
push
out
cmp
or
fnstcw
outsl
mov
aas
mov
fildll
pop
decl
stc
lock
stc
int
dec
leave
insl
mov
rorl
lods
xor
enter
lret
scas
cmpsb
pop
lea
movsl
cmp
and
fsubl
scas
jge
insb
add
or
pop
test
test
insl
test
in
lahf
cmpsb
xchg
mov
sahf
sub
test
test
gs
aaa
adc
cmp
bound
push
jl
or
mov
leave
xlat
sahf
pop
mov
shl
and
lahf
cmpsl
lret
sahf
imul
dec
or
loopne
test
das
xchg
mov
cmp
push
mov
or
lahf
push
repnz
push
jnp
pop
mov
mov
fistps
imull
movsb
jo
mov
jmp
gs
in
scas
jns
imul
cmp
or
mov
cmp
inc
mov
push
mov
cltd
or
pop
mov
xchg
lock
jp
dec
into
pushf
sbb
mov
push
fildl
mov
dec
mov
iret
inc
ret
jne
jl
pushf
or
or
jnp
setns
mov
jns
imul
cmp
or
fnstcw
outsl
mov
aas
mov
jns
imul
cmp
or
inc
fsub
inc
inc
xchg
leave
cmpsl
push
pop
stc
mov
adc
lcall
sbb
mov
test
mov
or
and
lahf
test
lret
in
push
push
cli
jae
xchg
or
das
int
rolb
rcr
adcb
add
scas
cmp
jns
push
xor
notl
aaa
or
and
sub
xchg
out
sbb
push
ljmp
inc
sahf
repnz
dec
gs
sbb
scas
mov
jge
sbbb
pop
outsl
mov
pop
jge
orb
add
jne
xchg
jmp
outsb
push
cltd
push
jmp
or
jp
mov
std
or
outsb
call
pop
lahf
fisttpl
adc
sub
in
dec
jo
cltd
daa
adc
inc
test
loop
pop
pop
lret
inc
mov
sti
insl
or
loopne
cmp
or
mov
push
push
cs
dec
ja
ss
sarl
std
in
jmp
jmp
test
and
mov
xor
out
jae
cmpsb
mov
clc
add
add
fcomp
fnstsw
pop
inc
iret
add
and
inc
ret
cmp
jne
clc
mov
adc
les
jmp
repnz
and
jg
sahf
xchg
mov
nop
xchg
push
mov
jb
andl
aaa
or
push
jnp
in
shrb
mov
push
lds
testb
push
bound
lock
loopne
sbb
mov
jo
ljmp
rcr
movsb
aam
arpl
or
adc
cmpsl
fisttpl
xlat
dec
lea
lods
mov
bound
and
and
inc
movsb
push
fst
fmuls
mov
adc
call
inc
fidivrl
xchg
xchg
lock
scas
ljmp
lods
fadds
pop
sbb
jmp
iret
push
xor
lret
sbb
imul
mov
orb
int
sbb
pusha
cs
aaa
adc
js
jae
mov
lcall
fwait
cmpsl
scas
scas
ret
jle
sub
push
int3
addb
adcl
xchg
push
mov
lock
fcompl
cmp
push
push
dec
mov
xor
jo
adc
adc
push
sbb
push
mov
or
xor
mov
or
popa
xchg
aaa
add
add
xchg
cmp
jle
cmp
pop
mov
int
aad
inc
push
or
fdivrl
pop
xchg
in
jmp
fistpll
push
lds
xor
ret
stc
invd
out
loop
jnp
lods
cwtl
mov
inc
mov
lret
int
dec
jl
bound
js
and
out
jo
sarl
fisttps
repnz
leave
ss
cmc
iret
shr
std
arpl
outsl
jle
mov
cmp
push
sahf
adc
int
add
push
hlt
jo
or
int3
jmp
jae
or
clc
lock
mov
jg
pop
jno
sbb
loopne
or
sahf
imull
jl
push
outsb
rcr
addb
inc
jecxz
jecxz
add
aaa
ret
sub
mov
addb
out
fdivl
xchg
dec
dec
jo
leave
pop
aad
stos
xor
aas
xchg
mov
dec
in
movsl
inc
or
jge
jecxz
add
inc
inc
mov
cltd
mov
addr16
mov
loopne
and
add
scas
gs
mov
push
clc
es
cli
es
sahf
mov
mov
sbb
or
mov
lahf
ficoms
es
bound
inc
jmp
addr16
seta
cmp
cs
mov
repnz
or
mov
jecxz
call
pop
testb
stos
jge
jno
push
out
push
in
xchg
popf
fwait
pop
add
push
std
cmp
fucomip
pop
lock
cmp
rclb
add
push
ja
mov
push
dec
xchg
and
out
cmp
aaa
mov
mov
push
mov
loopne
pop
or
xor
inc
mov
mov
rcrb
pop
add
push
leave
or
inc
stos
test
andl
jns
shl
add
in
shlb
push
sbb
inc
pusha
inc
ret
test
mov
sbb
pop
dec
lcall
push
xorl
cmp
xchg
aam
out
push
insl
sub
pop
mov
arpl
mov
add
push
dec
int3
sbb
sub
shlb
mov
lods
ja
pop
fistps
icebp
lods
pushf
sahf
lock
mov
xor
test
dec
sub
or
push
push
mov
or
fiaddl
sbb
jno
sub
decl
dec
jmp
sub
loop,pt
xchg
andb
or
and
bts
mov
inc
mov
sbb
iret
je
and
ljmp
cmpsb
lods
sbb
pushf
rdpmc
cmp
mov
and
repnz
xchg
jo
cld
pop
push
cmp
iret
xor
subb
outsb
jmp
jg
mov
pop
test
in
jo
imulb
mov
adc
daa
sti
in
push
sub
test
ljmp
mov
sub
loop
mov
test
ret
int
shll
into
in
shrb
jnp
fbstp
in
mov
out
and
lcall
repnz
adc
cmp
pop
shll
outsb
dec
imul
add
mov
ss
cmp
jb
xor
dec
mov
imul
mov
sbb
mov
nop
inc
repz
sub
in
cld
adc
ficomps
cltd
sbb
mov
adc
sti
mov
mov
adc
movsl
cmp
int3
roll
repnz
ret
sub
xorl
dec
sub
and
mov
stos
sti
out
ret
push
or
mov
lods
popa
popf
push
dec
or
fistpll
xadd
cmp
jnp
ret
scas
jae
addr16
pop
sub
push
notl
iret
and
pop
arpl
mov
pop
and
mov
dec
xchg
cmp
lock
mov
mov
mov
movsl
inc
or
lea
pop
iret
out
mov
shl
stc
push
and
mov
movsl
cmpsl
xchg
sbb
and
into
out
xchg
jb
adc
pop
or
mov
es
rorl
psubsb
sub
mov
pop
lods
sbb
sti
aam
add
xchg
mov
jae
mov
repz
pop
sub
dec
pop
adc
pop
fcomps
xchg
dec
push
adc
pop
cmpl
ljmp
push
popa
in
cmpsl
xchg
cltd
test
repz
push
sub
mov
mov
add
lcall
pop
jg
popa
sbb
leave
and
jmp
push
xchg
loope
mov
gs
outsl
adc
mov
es
shl
mov
push
aam
into
testb
add
sahf
dec
mov
push
or
clc
cmp
mov
fs
imul
scas
cmp
push
ljmp
imulb
mov
ss
pop
fildl
outsl
push
lret
pop
xor
inc
push
mov
cmpsb
dec
sbb
daa
aaa
cmc
in
je
push
cli
jg
cmp
test
dec
push
es
mov
js
lock
push
mov
fistpl
inc
std
xor
sub
iret
rorl
out
inc
sarb
das
outsl
push
push
aaa
push
scas
pop
repz
sbb
ja
inc
xchg
add
push
movsb
and
bound
scas
movsl
fisttps
out
std
pop
std
into
test
jp
xor
stos
sbb
cmc
and
test
or
in
mov
lods
popl
cmpsb
pushf
nop
add
scas
pop
jns
cmp
ljmp
pusha
pop
xorb
add
sbb
test
iret
sbb
cmp
in
ljmp
push
xchg
sub
fstl
mov
inc
mov
mov
or
popf
dec
dec
push
cltd
orl
pop
jo
out
mov
lret
inc
inc
cltd
sbb
movsl
cmovne
repz
jmp
mov
xchg
pop
out
push
lods
dec
pop
xor
cs
sbb
push
adc
push
jns
and
sbb
mov
sarl
out
ja
mov
je
movsb
add
lods
cs
pop
loopne
icebp
daa
push
repz
lds
outsb
in
push
dec
jp
push
inc
test
ss
pop
mov
push
cmpsl
jmp
std
popf
gs
xor
pop
adc
out
mov
int3
xchg
push
jl
lock
xor
addr16
repnz
rcll
sar
and
jp
mov
jo
mov
push
dec
push
pop
cwtl
jle
sbb
push
lea
scas
cmp
hlt
loop
test
fiaddl
and
mov
cmpb
mov
pop
xchg
dec
cli
lret
sub
bswap
fcom
sbbl
sarl
jae
mov
sarl
stos
cmp
and
or
pop
mov
pusha
mov
dec
add
fwait
je
cli
stos
outsl
and
ss
cmc
std
outsl
scas
xor
imul
call
sbb
cli
int
stc
stos
call
xor
xchg
sbb
pop
or
inc
xor
mov
loope
lods
stos
sti
pop
lock
fcoml
cld
jae
xchg
pop
xor
ja
int3
ljmp
xchg
outsb
jbe
insl
sarl
gs
pop
mov
and
xor
lahf
mov
rorl
lods
ficoml
mov
cmpsb
jns
mov
nop
or
subb
mov
lock
mov
xor
out
call
add
cmp
xor
nop
test
pushf
jp
hlt
stos
std
or
in
dec
dec
test
movsb
aam
pop
mov
mov
sub
cmp
mov
ja
mov
mov
or
pop
aaa
stos
lcall
js
outsl
scas
mov
mov
sbb
or
sub
jnp
int3
sbb
xchg
and
add
cmp
sbb
scas
fisttpl
mov
in
mov
add
pop
stos
aam
imul
xchg
mov
sub
adc
mov
adc
mov
shlb
cmp
jno
or
push
stos
mov
xchg
rcll
mov
jno
into
movsb
jmp
add
xchg
pop
fisubrl
and
movsb
push
dec
jnp
and
ljmp
jo
or
dec
test
popa
and
inc
int
daa
outsb
add
clc
add
aad
in
xor
movsl
test
cmp
loopne
push
dec
add
inc
mov
icebp
in
sbb
add
clc
fwait
jecxz
clc
push
popf
jecxz
mov
add
cmc
je
subb
cli
test
arpl
cmp
mov
mov
pusha
movsl
stc
or
pop
mov
xchg
dec
mov
xor
dec
dec
lcall
mov
pshufw
lret
das
popf
fnstcw
and
mov
cmpsb
adc
mov
cld
or
lret
add
scas
in
xor
inc
aad
and
stos
inc
push
dec
or
adcl
push
mov
aam
js
mov
xchg
in
jle
cwtl
dec
mov
cs
and
push
xor
fistpll
aas
xor
jb
cmp
jne
sbb
adc
mov
outsb
std
push
mov
out
and
mov
sbb
loopne
and
pop
lret
loop
popf
pop
mov
aad
lods
xchg
je
lahf
ja
testb
jo
or
sbb
adc
sti
test
mov
adc
pop
lods
stos
cli
mov
or
pcmpeqw
jbe
add
and
divl
cwtl
fiaddl
pusha
or
into
xor
mov
inc
push
mov
call
mov
das
in
pop
shrb
jp
add
filds
lock
sahf
sub
test
cmpl
sti
leave
cmp
inc
mov
arpl
aaa
jmp
adc
lock
loope
stc
mov
pop
cmp
cmp
dec
mov
testl
push
neg
aas
mov
icebp
mov
xchg
pushw
iret
mov
xlat
push
pop
rcll
pop
push
std
and
push
mov
and
sbb
das
addl
arpl
or
cltd
xchg
int3
xchg
fcoms
test
subl
xchg
mov
lods
ficompl
pop
daa
insb
and
lahf
clc
sbb
data16
xchg
pop
inc
scas
xchg
pop
sbb
bound
sbb
pop
or
inc
and
mov
inc
adc
js
add
push
out
mov
in
pop
cmpb
dec
movsl
daa
subl
fnsave
mov
insb
or
aaa
clc
mov
jne
out
ja
xor
loopw
mov
mov
out
dec
xchg
scas
and
adc
subl
test
stos
dec
loope
add
cltd
inc
andl
and
fimull
notb
das
imul
dec
mov
jne
xor
xchg
mov
test
frstor
ja
cld
or
std
adc
adc
pop
or
mov
testb
cmp
xchg
cmpsb
fisubrl
rol
xor
push
int
repz
mov
cmp
stc
movsb
add
jl
data16
mov
clc
aad
pop
loop
or
sbb
add
mov
xlat
dec
mov
adc
ljmp
jmp
cmc
test
loop
imul
fimull
push
ds
movsb
xor
push
xor
enter
or
xchg
mov
fwait
sub
jge
out
adc
ror
lods
sub
cmp
jle
sbb
jae
xchg
sub
mov
xchg
sub
xor
mov
add
mov
lds
into
fs
pusha
xor
sub
or
clc
test
xor
push
mov
iret
sbb
in
sub
data16
jae
push
out
movsl
or
cmpb
mov
push
jge
dec
push
push
and
pusha
inc
xchg
and
mov
sbb
add
sbb
loopne
in
pop
pop
scas
enter
pop
aam
test
arpl
inc
aam
pop
or
js
das
repz
scas
xorb
mov
lock
push
loope
xchg
ret
sbb
mov
push
inc
sub
mov
hlt
and
mov
imul
mov
pop
into
xchg
addr16
es
movsl
in
daa
xlat
lcall
push
mov
xor
mov
lcall
fidivl
sbb
jmp
fs
gs
cmp
or
mov
shrl
or
jns
repnz
sbb
xchg
xor
cmp
cltd
inc
xchg
or
pop
jnp
jne
aad
rcrl
icebp
sub
into
repz
sbb
adcl
and
in
xor
push
out
mov
int
jp
dec
js
xchg
imulb
aas
ja
mov
cmp
xchg
gs
inc
jae
in
push
jp
mov
pop
mov
mov
push
xchg
dec
fldl
jns
in
jbe
loop
add
jo
stos
movsb
pop
inc
pop
xchg
into
jl
out
or
mov
lods
stos
stos
and
push
inc
push
repnz
js
mov
je
or
dec
repnz
xchg
and
mov
inc
pop
cmp
insb
js
xor
jns
pop
das
pop
xlat
loopne
add
mov
aaa
aad
insb
jae
aad
push
pop
xor
push
cmp
push
mov
inc
iret
insl
and
add
mov
xchg
cmp
lods
stos
sub
jns
test
xor
iret
mov
inc
mov
mov
pop
cmpsl
cmp
inc
mov
and
mov
popf
xlat
lret
dec
push
jp
fldl
xor
lcall
jp,pn
mov
inc
push
loope
rcrb
add
cmp
stc
mov
xor
cmp
test
fwait
int3
loope
nop
sti
fcoml
sbb
ja
sarb
adc
addr16
push
lods
cld
xchg
sub
cmpb
mov
lret
popf
add
mov
jmp
movsb
pop
dec
ds
repnz
aaa
fisttps
sarl
push
cmp
lea
fadd
pop
and
int3
icebp
in
xchg
mov
push
jnp
and
cld
test
sbb
and
shr
int
cmp
mov
je
xor
inc
rolb
pop
mov
xchg
lcall
pop
mov
negl
jmp
or
pop
xchg
mov
out
ret
js
mov
sub
dec
sub
cmpsb
loop
adc
push
push
outsb
mov
pop
mov
cld
xchg
or
paddb
mov
mov
ret
sahf
insl
frstor
xor
pop
cmp
cmp
inc
fs
and
jl
fidivrs
mov
aam
inc
daa
cmp
in
out
mov
cmp
pop
and
das
in
adc
and
xor
and
xchg
das
adc
mov
aam
enter
out
cld
xlat
or
mov
aam
adc
xor
notb
iret
add
std
hlt
adc
mov
mov
xchg
mov
pop
das
fstpt
mov
inc
add
ret
jns
or
mov
enter
mov
popa
insl
push
cmp
jp
stc
jp
aam
addl
or
add
pop
dec
sub
fsubl
xchg
test
aad
test
dec
lock
xchg
pop
fnsave
inc
xor
sbb
fdivrs
xor
adc
std
jbe
rcr
cs
cmp
push
in
sarb
je
or
mov
imul
ja
mov
cltd
or
inc
push
mov
into
pop
dec
cmpsb
sub
clc
mov
int3
rorb
inc
mov
or
rol
jecxz
cvtpi2ps
xchg
movb
push
push
sbb
pop
add
aad
xchg
lds
jge
lea
inc
jecxz
test
dec
lret
mov
bndldx
out
jb
mov
cmpsw
leave
sub
in
xchg
icebp
insl
iret
pop
pop
jns
mov
xchg
cmp
and
sub
outsb
in
and
outsb
inc
fcompl
fistps
xor
mov
cmp
lods
sub
push
call
xchg
lahf
cmp
cmp
in
iret
ljmp
cmp
jl
jns
add
cmp
aam
sub
inc
cmp
shrb
in
cmp
sbb
cmpsb
push
mov
int3
decl
icebp
push
out
cmc
mov
jp
fimuls
mov
sbb
inc
lret
xor
add
movsb
xchg
ds
shl
pop
dec
scas
mov
clc
lods
imul
mov
jg
lahf
int
xchg
rcl
jb
and
and
adc
sub
pop
or
jl
xchg
paddw
dec
push
xor
and
adc
push
enter
mov
mov
mov
inc
pop
jl
xor
ss
mov
test
jle
pop
stc
fs
popf
jge
or
orl
shll
mov
jle
insl
test
adc
pop
lds
xchg
or
xor
push
popl
pop
ljmp
lcall
mov
mov
mov
adc
xor
stc
enter
push
lods
sbb
jno
mov
or
push
mov
lods
adc
mov
scas
sub
dec
adc
mov
inc
mov
jbe
add
js
dec
jg
pop
test
mov
mov
mov
aaa
mov
lret
fistpll
ljmp
nop
or
push
in
xchg
es
ret
iret
mov
orl
scas
lods
mov
inc
mov
and
adc
cld
sub
pop
out
ret
mov
outsl
repz
addr16
call
dec
outsb
sbb
lds
cmc
test
jle
cmp
sbbb
xor
xor
pop
sbb
and
inc
insb
adc
mov
pop
sti
mov
mov
pop
cli
or
xorl
stos
cmp
cmpsb
cmc
cmp
xor
pop
mov
in
cmp
mov
clc
mov
jl
imul
pop
fucomi
mov
or
aaa
xchg
and
ss
pushf
mov
push
in
mov
inc
fdivr
js
sti
out
daa
adc
int
out
cli
jo
jae
test
lea
sarl
cwtl
push
add
fisttpl
adc
push
ja
inc
inc
jp
dec
xlat
test
push
lods
inc
push
out
xchg
sarb
adc
aad
cmp
inc
ret
pop
mov
push
push
nop
or
in
xor
or
iret
fnstsw
sub
add
loopne
in
out
pusha
add
aas
cmp
adc
outsl
mov
aas
mov
jns
imul
cmp
or
fnstcw
outsl
mov
aas
mov
jns
imul
cmp
or
pop
pop
leave
outsl
cmp
test
das
jns
imul
cmp
or
fnstcw
outsb
mov
mov
imul
pop
pop
jo
inc
jns
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
pop
test
and
push
movsl
ss
cmp
les
dec
hlt
pop
jo
add
pop
mov
push
jmp
mov
aad
movsb
sbb
in
lods
test
cld
cltd
dec
jmp
fs
sub
js
cmp
mov
lock
dec
cltd
push
leave
inc
cld
scas
inc
dec
push
ror
mov
jmp
sub
sub
imul
cli
clc
xor
les
jmp
xor
jge
imul
mov
jecxz
lahf
popf
loope
jns
cmp
ret
mov
push
movsb
dec
les
cmp
fsub
enter
shll
inc
clc
mov
test
xor
les
jmp
or
adc
mov
jo
mov
pop
jne
mul
sbb
or
call
xor
cltd
fcmovu
stos
call
push
pushf
cmpsl
cmp
or
imul
mov
mov
cmp
je
ret
sub
cmp
or
dec
in
jge
jbe
inc
mov
mov
nop
add
xlat
cmp
insb
shrl
stos
sbb
xor
faddl
inc
cltd
cmp
mov
inc
mov
fdivrl
stos
js
pop
movsl
ss
push
cld
pop
movl
sub
aam
les
dec
in
adc
add
xor
and
push
jmp
fsts
movsb
sbb
imul
pop
adc
mov
pop
fwait
popf
sub
or
xor
cli
xor
sti
push
out
ja
mov
psubd
push
cmp
arpl
or
aaa
cli
xchg
das
jne
pop
sub
rcr
lock
push
xor
mov
sbb
jmp
hlt
in
outsb
mov
into
sub
add
inc
daa
sbb
mov
fbld
dec
daa
mov
enter
mov
and
mov
jg
mov
cli
scas
cmp
dec
cmp
jnp
lods
push
jnp
mov
dec
cmp
mov
repz
xlat
cmp
push
sbb
fildl
data16
lods
inc
cmp
sti
push
fidivrl
inc
add
test
push
push
mov
mov
jl
push
mov
cmp
sbb
sbb
cmc
add
jnp
mov
cwtl
mov
or
fs
jp
jp
cmp
mov
dec
hlt
sub
imulb
lret
or
mov
ljmp
popf
mov
or
jg
mov
sub
jne
cs
cwtl
lret
mov
push
inc
mov
xlat
pop
push
mov
imul
test
out
popa
pop
and
lods
jbe
stc
jnp
cltd
mov
push
mov
imul
xor
out
cmp
out
mov
sbb
jecxz
mov
imul
cltd
xchg
dec
jno
repz
add
decb
filds
sub
mov
add
lds
int
insl
icebp
xchg
jbe
out
cmp
je
mov
adc
push
lret
das
pushf
in
mov
or
xlat
inc
add
dec
pop
push
cmpsl
mov
lahf
mov
mov
dec
and
xor
cltd
notb
incl
jmp
incl
andl
in
or
push
push
xor
sbb
inc
cmpl
sub
out
xchg
mov
xchg
imul
movsb
cmp
sub
cwtl
das
into
dec
push
and
jg
shll
pop
and
pusha
xor
shl
fs
dec
mov
mov
mov
push
test
cmpsl
das
cmpl
jno
jle
bound
jge
out
fcoms
lcall
xchg
add
stc
outsb
dec
test
out
push
push
inc
movsl
mov
pop
jns
dec
add
push
insb
popa
orl
insl
push
mov
out
mov
pop
xor
aad
leave
daa
xchg
add
sub
sbb
mov
mov
push
pusha
addb
jo
push
mov
and
int3
mov
add
test
pop
inc
lret
enter
je
movsb
outsb
out
adc
dec
dec
jnp
mov
push
adc
imul
std
mov
popf
cld
mov
iret
pop
dec
pop
imul
in
jb
push
pop
pop
das
cmp
jecxz
adc
stc
pop
and
pop
lds
sub
popf
jg
add
mov
jno
fs
jle
cmp
in
sbb
inc
mov
or
fsubrl
add
and
loope
mov
mov
sbb
and
fadds
loop
pop
mov
andl
repnz
test
lds
or
push
pop
out
jmp
int
mov
mov
mov
mov
shl
fisubrs
clc
push
lock
cmp
add
mov
jne
dec
stos
fsubrs
cmp
testl
xchg
jge
test
sarl
ret
cmc
stc
lods
fdivrs
ds
sub
aad
mov
xchg
retw
push
mov
incb
xchg
xchg
or
loop
jo
mov
add
fmuls
push
sbb
aam
xchg
repnz
bound
pop
inc
pop
or
inc
xchg
push
and
insl
mov
xor
cli
pop
pop
shll
lods
xchg
xor
lock
mov
or
pop
pop
push
ljmp
cld
gs
mov
stos
mov
dec
push
repz
test
inc
ds
xchg
push
mov
xor
sbb
clc
jle
sbb
inc
jmp
aaa
movl
push
push
adc
cmp
int
adc
mov
xor
call
cltd
popf
dec
std
outsl
in
stc
xchg
lret
sub
cwtl
push
inc
jb
je
xor
test
ror
and
incl
rclb
clc
cmp
mov
jbe
cld
into
push
lea
pop
clc
add
jmp
jge
ljmp
fwait
lds
stos
lods
dec
push
and
shl
rorb
imul
push
mov
cwtl
hlt
adc
mov
add
add
fstl
or
cmp
and
xchg
cmc
jno
jbe
popa
and
sbb
mov
push
jecxz
jg
sbb
scas
ret
sbb
fs
mov
fcomip
mov
xchg
popa
outsb
sbb
sub
in
push
das
pop
mov
adc
sahf
shrb
jl
arpl
daa
nop
cs
rcl
ret
cmp
sbb
mov
out
or
aad
lods
jne
icebp
push
in
pop
out
sti
xchg
cmp
lret
inc
pop
cmp
inc
fildl
pop
fwait
inc
push
std
add
lea
in
add
aas
leave
push
sub
data16
or
addr16
pop
hlt
sbb
iret
imul
xchg
out
jno
mov
cmp
cmp
sub
sbb
pop
insl
out
add
popf
lahf
inc
sub
dec
cmp
aas
and
sbb
sti
aad
cmp
mov
push
dec
lret
adc
sbb
orl
sarl
enter
adc
add
mov
mov
test
fwait
mov
sub
and
mov
test
movsl
mov
lock
lods
sub
js
ret
jo
in
or
cmp
cld
shl
test
pop
mov
in
mov
push
pop
mov
ja
cs
rorb
sti
fldenv
cmp
add
inc
mov
mov
add
xor
dec
sbb
sub
into
sub
inc
ds
push
leave
out
popa
xchg
xor
ja
iret
dec
xchg
push
ss
cmp
cmp
loopne
add
pop
xor
adc
sbb
lret
bound
cld
das
dec
and
mov
push
sub
or
inc
xchg
mov
es
lds
sbb
inc
inc
push
pop
dec
cmpb
adc
test
jnp
dec
push
or
loop
push
dec
pop
fisttpl
or
dec
ja
xchg
stos
and
sbb
jmp
xchg
in
repz
adc
jmp
xor
out
xchg
push
push
lahf
adc
and
je
lds
insb
sbb
insl
sub
fsubp
jnp
jb
pop
jbe
pop
fistl
sarl
push
in
xchg
xchg
lods
or
cwtl
insb
dec
les
outsb
sub
jae
mov
ljmp
pop
int3
sbb
and
dec
inc
mov
mov
mov
popa
jp
pop
pop
ljmp
fmul
decl
and
sbb
cld
pop
push
push
ret
aas
add
jns
mov
push
jne
out
mov
int
mov
mov
test
outsl
in
mov
in
fstpt
sub
movsb
and
adc
or
ret
fwait
and
dec
lret
jle
sarb
popa
adcl
and
and
mov
xchg
pop
adc
out
pushf
cmp
push
dec
mov
pop
call
xchg
stos
outsl
and
pushl
adc
sub
sub
sub
call
test
xchg
cld
dec
dec
cmc
lcall
cmpsl
push
insl
add
add
add
pop
mov
outsb
xor
xchg
hlt
lret
adc
lods
dec
push
popf
cmp
imul
pop
sbb
jge
fsubrs
lds
xchg
and
lods
sub
mov
ss
jmp
loopne
xchg
cmp
cmpsl
shl
in
mov
cwtl
jo
bnd
pop
xchg
fidivrs
pushf
nop
cpuid
jmp
pop
data16
js
cld
mov
loopnew
push
filds
shr
xor
mov
mov
mov
dec
mov
mov
sbb
scas
and
std
aaa
ficomps
and
insl
mov
xchg
js
or
jne
repnz
cwtl
jno
mov
mov
loopne
in
or
and
mov
dec
jle
icebp
paddw
cli
fwait
jns
test
adc
sub
nop
xchg
inc
or
push
xor
aaa
mov
adc
xchg
mov
mov
xchg
fcompl
test
mov
lret
cwtl
shrb
mov
in
jb
les
es
xchg
adc
xchg
in
ret
movl
or
dec
jns
outsb
fdivr
cmp
loop
imul
and
mov
dec
jecxz
arpl
mov
jecxz
insb
push
xor
int
daa
bound
jbe
or
dec
bound
adc
push
ret
lds
push
je
out
stos
inc
in
add
push
cmc
push
pushw
mov
lods
jmp
stc
jmp
and
iret
add
xor
test
in
aas
jmp
leave
js
arpl
sbb
inc
push
jle
int
dec
mov
fidivs
xchg
test
cmp
aam
idiv
jno
pop
sub
int3
or
dec
clc
add
push
nop
lds
int3
and
dec
inc
test
sub
stos
jb
xchg
cmp
addr16
dec
sub
mov
idivl
mov
mov
nop
out
or
mov
ss
pop
add
dec
push
or
aaa
mov
mov
sbb
ja
shlb
sahf
test
cmp
adc
mov
pop
and
lret
out
push
lret
mov
call
iret
mov
inc
lods
cmp
jmp
cmp
xchg
fucomip
jp
jmp
jl
fdivrs
stc
enter
in
jmp
mov
mov
mov
in
add
mov
testb
insb
mov
ja
sbb
xchg
mov
fstl
in
pop
je
and
pop
or
aas
cmp
lea
repnz
push
inc
daa
inc
push
mov
dec
mov
dec
or
dec
stos
inc
lock
inc
enter
push
add
inc
out
sub
stc
popa
test
clc
push
int3
jbe
sub
jae
push
pop
test
int
out
imul
xchg
sti
sub
imul
cmp
lret
or
mov
insl
jecxz
fidivs
adc
mov
adc
mov
ljmp
or
pop
dec
in
imul
shrl
mov
mov
add
or
sbb
pop
push
lea
sahf
mov
sub
jecxz
stc
add
in
mov
inc
mov
mov
lods
lods
arpl
and
pop
je
xor
mov
xchg
pop
adc
xor
push
mov
and
xchg
and
or
hlt
pop
jo,pt
int3
cwtl
insl
pushf
inc
ret
lods
cmp
inc
out
fnstcw
in
push
shlb
push
pop
cld
and
and
aam
push
in
daa
dec
out
push
sub
aad
imul
aas
mov
fucom
adc
shrl
xchg
cmp
xor
jmp
inc
hlt
iret
cmpl
sahf
addb
push
or
fsubl
fs
popf
iret
stc
push
fs
add
mov
pop
sbb
add
inc
dec
ds
shlb
xchg
sti
jecxz
cltd
mov
mov
aas
xchg
shlb
in
sti
ficomps
stc
add
cmp
dec
adc
pop
mov
rorb
mov
dec
cmp
add
or
mov
cld
pop
or
sbb
loopne
mov
fwait
je
push
or
and
sub
cmpsb
shrb
insb
adcl
push
xchg
mov
jle
adcb
mov
inc
and
add
dec
jp
aad
pop
jbe
and
add
adcl
pop
pop
je
aad
jmp
fs
sbb
jne
jecxz
cmp
pop
inc
or
dec
sbb
mov
rclb
mov
add
sar
mov
inc
pop
stos
push
or
xchg
jmp
sbb
push
fwait
push
cwtl
sub
mov
in
arpl
mov
cmpsl
movb
dec
push
and
cmp
mov
enter
das
jns
fs
movsl
and
dec
ret
add
xor
xchg
sbb
or
mov
cmp
scas
fcomi
lahf
cmpsb
sti
dec
cmpsl
and
or
loopne
adcl
jl
clc
cmp
hlt
pop
mov
jne
mov
lea
and
ja
sbb
ja
sbbb
stc
popf
push
addl
mov
leave
jecxz
je
cmp
jnp
push
inc
pop
and
xor
shll
out
ds
mov
cmp
cmp
mov
and
xor
repnz
fmul
lret
inc
insb
aaa
jmp
rcrb
fcoml
js
test
std
ret
and
dec
sbbl
int
sub
popa
jno
inc
xchg
sti
jg
fsubs
dec
inc
lret
or
ja
mov
stos
rcl
aas
cmp
popf
adc
and
mov
add
cwtl
cltd
and
daa
inc
ficompl
or
push
add
cmpsb
cmp
or
arpl
call
lock
ficoml
and
add
pop
aaa
cwtl
push
rcll
mov
and
test
les
test
aam
std
shl
xor
inc
addl
lahf
xor
cld
repz
lcall
cwtl
popf
xlat
pop
data16
xchg
mov
cmc
rolb
gs
pusha
loope
pop
pushf
hlt
divb
daa
rclb
jb
mov
adc
and
dec
std
inc
test
pop
int3
pushl
lock
xchg
sti
jmp
daa
lods
cmpb
mov
mov
pop
and
pop
mov
nop
not
mov
jne
cs
mov
test
xor
mov
test
in
loopne
xor
adc
mov
push
pop
lcall
inc
stos
sub
std
mov
cld
cltd
add
push
adc
mov
mov
xor
je
pop
rclb
hlt
pop
push
mov
mov
ja
and
int
push
movsl
dec
mov
or
je
daa
std
out
push
pop
fcmovne
repnz
lods
pop
jae
push
add
cs
mov
inc
sbb
sub
inc
lret
arpl
daa
jbe
lods
ss
cmp
das
jno
scas
mov
out
lods
lcall
cwtl
inc
fcompl
sarb
lcall
orl
inc
bound
in
pop
ljmp
dec
sbb
xor
and
fsubl
xor
xchg
xchg
jecxz
loope
inc
pop
xor
jns
in
mov
mov
rcll
pushf
sbb
rorl
xchg
stos
mov
or
mov
out
sub
repnz
pop
xchg
ljmp
or
loop
out
rorl
repnz
enter
dec
call
and
mov
sub
sahf
inc
xchg
pop
call
and
pop
or
inc
add
or
push
or
or
lds
jg
jp
inc
loope
call
mov
mov
imul
xlat
mov
movsl
and
iret
mov
push
inc
addr16
call
pop
add
ffree
mov
aad
mov
imull
in
jns
pop
xchg
scas
jge
inc
test
repnz
aas
sbb
scas
add
aad
cmpsb
mov
add
jb
ficoms
sahf
mov
cmpsb
and
sub
cmpl
mov
mov
lret
js
push
outsl
icebp
cmp
lods
out
and
ljmp
cld
xchg
inc
xchg
stos
incb
inc
ljmp
lods
es
cmp
loop
cmp
mov
or
xchg
neg
je
cmpsl
jbe
jle
jge
sub
pop
cmp
adc
mov
jle
int3
add
sbb
inc
lret
push
insl
test
or
push
es
pop
nop
cli
movsl
ja
mov
out
mov
mov
test
adc
mov
add
mov
movups
mov
into
sarl
pop
call
push
pushf
mov
mov
dec
shll
lcall
push
adc
movsl
je
push
movsl
cli
ds
xchg
jns
popf
enter
xor
test
js
jle
pop
push
addl
or
add
lcall
into
cmp
outsb
mov
mov
andb
and
jns
mov
jnp
adcb
insl
gs
dec
out
adc
adc
jns
push
dec
cld
stos
dec
jne
xchg
es
jle
sti
pushf
sbb
sub
mov
or
cmp
inc
dec
lods
nop
lds
and
stc
aaa
cmp
out
inc
sub
inc
cmpsb
push
pop
out
ss
movsb
sub
push
sarb
add
adc
in
or
rcrb
cs
mov
outsl
mov
pop
movsl
es
shll
rcrb
cmp
fisttpll
push
lock
xchg
ja
aam
hlt
jmp
data16
add
sub
test
dec
loopne
arpl
push
add
inc
mov
pop
mulb
inc
mov
sub
or
xchg
push
add
shrb
adc
mov
scas
das
int3
movsb
or
jmp
mov
stos
inc
bsr
or
repz
or
les
popa
test
dec
mov
pop
insb
cli
mov
mov
inc
es
test
mov
dec
test
add
add
pusha
ss
pop
popf
shll
mov
push
loope
not
jp
pop
icebp
movsl
lock
sub
fcomi
adc
aaa
and
pop
pop
icebp
in
rcl
xor
loopne
inc
dec
pop
sbb
js
and
lahf
out
mov
and
jbe
mov
jecxz
data16
jmp
and
mov
xchg
sbb
jmp
ret
jle
adc
subl
rclb
bound
jmp
mov
ret
fwait
or
fst
pusha
xor
xlat
out
lds
movsl
jge
push
in
adc
stos
xor
mov
sbb
test
out
mov
or
in
imulb
test
adc
or
or
and
dec
pop
in
das
shrl
sbb
mov
in
mov
xor
or
dec
aam
mov
in
push
xchg
inc
mov
mov
dec
mov
fdivr
xlat
xor
mov
cltd
or
push
sub
jbe
dec
test
shlb
xor
push
push
push
popf
mov
lods
in
frstor
movsb
scas
jmp
ljmp
jecxz
test
pop
adcl
sbb
fwait
xchg
mov
jbe
xor
rorl
mov
adc
xor
xor
xor
cmc
out
retw
mov
mov
or
insl
and
lea
aam
pop
jp
cmp
jp
adc
pop
push
in
loope
into
aad
mov
and
clc
sbb
adc
lds
pushaw
loopne
test
js
insb
push
les
or
mov
lods
sub
push
ret
mov
xchg
cltd
scas
into
roll
enter
jl
iret
jge
sub
adc
ret
cmp
call
ret
or
notl
add
ret
out
les
push
add
or
push
add
ljmp
jg
testb
flds
cmp
imul
les
mov
inc
jle
or
sbb
imul
fstpl
xchg
lds
pop
scas
cmp
push
push
ss
repnz
cmp
sub
sbb
ljmp
std
mov
and
pop
or
lret
sbb
lock
js
sbb
sbb
add
iret
mov
pop
aas
add
adc
dec
fildll
pop
sub
dec
das
sahf
or
lret
pop
jnp
mov
mov
push
jmp
fsts
movsb
sbb
imul
pop
adc
add
xor
and
push
jmp
fsts
movsb
sbb
imul
pop
adc
xor
push
mov
jmp
movsb
fsts
movsb
sbb
imul
pop
add
add
push
jmp
in
xchg
sub
push
or
or
leave
push
inc
cs
ds
outsl
pop
xor
jl
mov
icebp
xchg
sarl
fiadds
push
jno
inc
cs
and
pop
add
jle
mov
sahf
out
mov
mov
sub
icebp
push
ss
daa
xor
inc
sub
insl
popf
movsb
cmpsl
mov
mov
push
ja
pop
es
mov
adc
into
stos
pop
call
les
mov
pop
jns
fadd
jno
into
mov
gs
or
ds
and
xor
popa
cltd
inc
jno
pop
test
sbb
xchg
mov
adc
cmp
cmp
jb
into
and
or
cmp
add
and
sahf
add
adc
rorl
inc
sub
mov
xchg
outsb
xchg
in
mov
mov
outsb
mov
inc
ds
jg
add
mov
shr
in
in
jno
mov
je
mov
sbb
shrl
les
sub
inc
ds
pop
add
adc
sbb
scas
leave
sub
pop
push
add
sbb
add
and
out
sti
mov
enter
cmc
out
xchg
popa
jbe
push
push
pop
lcall
or
fincstp
mov
movsb
fidivrl
mov
adc
adc
jnp
dec
adc
and
pop
add
jle
mov
sahf
shrl
fiadds
push
jno
inc
cs
and
pop
add
jle
mov
sahf
shrl
fiadds
push
mov
jmp
jae
lret
or
sub
xorl
push
xor
pop
rep
jmp
ret
insl
mov
or
mov
insl
fs
jo
fnstenv
shlb
and
and
cltd
push
push
and
or
fldenv
int3
lcall
pop
das
mov
dec
dec
and
jnp
jnp
push
mov
cld
test
out
push
dec
loop
gs
loop
fisttps
rcrl
dec
sbb
pop
dec
jecxz
jae
outsl
mov
stos
jmp
sbb
mov
in
ret
jo
popa
movsb
xchg
lcall
repnz
or
xor
enter
icebp
rcl
cmpsl
icebp
in
mov
push
mov
inc
in
pusha
dec
xchg
xor
cwtl
cmpsl
arpl
inc
mov
inc
push
jmp
xchg
xchg
adc
pop
push
xchg
jmp
stos
dec
dec
dec
sub
or
pop
scas
popa
mov
mov
mov
pop
jae
mov
test
or
popa
mov
stos
or
scas
pop
pop
lea
pop
sub
dec
add
inc
std
lock
pop
xchg
push
int3
and
fsubr
mov
sub
nop
fbld
mov
test
rolb
pop
sbb
sahf
fbld
cmp
jo
rorl
lods
add
mov
jb
nop
aam
sub
adc
pop
xchg
or
imul
mov
push
in
pop
push
loopne
mov
and
and
dec
out
inc
pop
cmp
repnz
ja
pop
xor
dec
xor
sbb
flds
sar
mov
jl
sbb
sar
lds
test
jo
dec
mov
xlat
stc
adc
in
xchg
lea
jmp
dec
pop
adc
adc
mov
std
test
xchg
pop
lahf
inc
arpl
daa
fidivrs
cmpsb
jg
adc
jae
xorb
ljmp
fisttpll
mov
push
jmp
aas
lea
sub
xor
push
shrb
aaa
cmpsb
nop
mov
inc
push
lods
add
insb
dec
xor
sbb
lock
leave
mov
lret
insb
jno
add
mov
mov
and
xlat
leave
dec
fidivrl
ret
dec
nop
in
adc
std
cmp
sub
insl
sbb
aaa
sub
sub
cmp
mov
pop
and
lret
mov
xor
or
shll
lret
fstl
pop
imul
pop
into
adc
cmp
int
jecxz
xchg
out
jmp
mov
fs
inc
jno
out
mov
jp
in
inc
sbb
fwait
xlat
jg
fistpll
or
lcall
popf
push
dec
pushf
add
mov
loope
jb
in
lret
adcl
and
jnp
jg
sub
dec
ds
push
inc
into
stos
in
inc
xor
dec
mov
popf
loope
and
adc
adc
aas
int3
cli
push
shll
daa
add
cwtl
push
pop
subl
ja
pusha
movsl
mov
add
dec
cmp
ja
dec
call
push
jmp
fsts
rclb
test
mov
pop
xchg
mov
push
or
pop
mov
out
test
stc
adc
rclb
gs
fwait
ljmp
push
mov
mov
mov
out
pushf
inc
add
mov
inc
fs
jp
push
cmp
jns
mov
sarb
fldt
and
pop
std
push
cmp
add
dec
cmp
mov
adc
or
nop
dec
je
call
data16
clc
pusha
pop
jmp
xchg
add
stc
loop
ljmp
jno
cld
pop
mov
mov
lods
outsl
dec
adc
pop
add
inc
push
lods
test
mov
rcll
insb
call
loopne
lods
or
cmp
sub
mov
test
xchg
cmp
subb
and
sub
push
into
mov
sub
dec
pop
psubsw
lahf
push
ret
adc
cmp
popa
sbb
adc
xchg
shl
add
mov
cmp
cmp
ja
cmpl
ds
mov
adc
jns
cmpsl
add
loopne
inc
das
sbb
pop
push
add
mov
test
movsl
xor
lock
push
push
mov
pop
and
outsb
push
mov
aam
pop
pop
mov
and
ret
jp
fimuls
push
jb
lret
movsl
mov
adc
lret
and
testb
in
xor
rcl
mov
aad
sub
ret
rcll
jge
out
aas
aaa
dec
xor
fcmove
inc
mov
add
fwait
jne
fisubrl
push
scas
test
je
xor
push
dec
pop
or
mov
pop
push
cmc
out
sbb
xchg
pop
das
stc
cmp
mov
jno
flds
test
mov
loop
mov
lahf
leave
scas
in
out
cmp
add
clc
repz
xchg
aaa
imul
pop
mov
add
movsb
mov
or
mov
mov
jb
xchg
lea
data16
jg
sub
into
sarb
cmp
bound
int3
cmpsl
out
mov
bound
clc
cwtl
lods
sub
mov
idivb
dec
jecxz
add
pusha
ds
test
mov
dec
cmpsb
inc
stos
mov
mov
jmp
pusha
in
sti
loop
fucomi
enter
mov
subb
add
and
pop
jnp
ret
or
bound
mov
push
mov
xor
push
ret
repnz
sub
imull
stc
dec
pop
push
pop
cmp
and
mov
out
leave
push
scas
pusha
loope
add
popf
jecxz
adc
adc
mov
les
cmp
lahf
popa
test
dec
inc
cltd
movsl
add
jp
mov
imul
ret
test
and
push
fnstenv
in
mov
movsb
or
std
jno
inc
jo
scas
nop
sub
mov
jo
cmpsl
jmp
mov
into
adc
push
loope
sub
mov
ds
aas
mov
inc
mov
sbb
xchg
mov
scas
dec
cmp
cmpsb
jg
es
and
popf
imul
pop
lds
test
dec
in
push
roll
dec
cmpsb
mov
push
sub
inc
aad
sub
xchg
shlb
outsb
cmpsl
cmp
jae
lret
loope
lret
mov
enter
adc
sarl
pop
pop
stc
xor
loopne
push
scas
bound
inc
movsb
divb
in
stos
loope
pop
inc
out
xchg
adc
mov
frstor
adc
bound
std
imul
push
adcb
clc
repnz
mov
lret
aas
and
inc
jae
lret
fstps
xor
xchg
mov
addl
inc
lcall
lahf
shrl
mov
hlt
jl
call
xor
outsb
js
mov
pop
imul
cmp
pop
jge
nop
mov
dec
aad
pushfw
jg
ret
add
hlt
movsb
sbb
mov
cmc
mov
jecxz
lock
sahf
add
movsl
mov
xor
inc
shl
jo
adc
cmp
jne
shrb
aaa
std
les
jecxz
out
xchg
inc
mov
mov
pop
xchg
fidivrl
sub
mov
adc
mov
push
enter
or
sbb
push
shll
movb
cmpsb
ss
lods
lret
pop
mov
fst
jb
mov
push
mov
add
ror
lahf
shlb
in
adc
push
or
popf
int3
add
gs
dec
jecxz
pusha
or
ja
stos
out
pop
pop
push
push
cmp
iret
int
pop
sub
jl
add
or
int
add
xchg
and
cmc
xor
sub
pop
adc
pop
push
pushf
cli
and
mov
mov
int
cmpsl
sbb
sbb
add
mov
sbb
popa
push
data16
mov
les
fistpll
push
pop
mov
aaa
mov
push
add
fdivrp
test
xchg
cld
bound
addr16
push
push
dec
or
pop
pushf
insl
xchg
cltd
ds
mov
cli
in
aad
xchg
and
shlb
dec
ljmp
lock
push
in
xor
shll
mov
adc
push
sbb
adc
jnp,pt
out
jl
ja
aam
sbbb
mov
push
cmp
movsl
xchg
and
rorl
loope
push
sbb
fwait
jb
fstl
mov
jecxz
mov
sub
sti
lock
xlat
hlt
xor
jle
popa
xor
sqrtps
leave
mov
push
jne
shrb
subl
add
fldl
rcl
scas
push
or
mov
mov
push
pop
push
fidivrl
insl
sbb
pop
in
jmp
popf
imulb
or
xor
outsb
adc
cwtl
push
add
cmp
js
inc
sub
jge
xor
ds
out
push
push
clc
enter
insl
push
data16
mov
flds
mov
inc
rcrl
xor
pusha
xchg
les
lods
jg
inc
imul
daa
test
add
arpl
xor
mov
jmp
push
push
test
iret
push
idivl
insl
arpl
aas
adc
sub
pop
adc
orl
cmc
ret
sub
scas
subb
loop
mov
ret
lock
push
mov
inc
add
cmpsb
movsb
jp
adc
mov
test
sub
add
js
bound
ljmp
jl
rorb
rcr
aas
cmpsl
lock
push
rcl
xlat
fildl
loope
movsb
cld
lcall
add
mov
xchg
out
cmp
pusha
inc
enter
adc
xor
fnstcw
inc
shr
cmp
enter
insl
gs
scas
xor
xchg
inc
in
fwait
outsb
inc
gs
aaa
test
sbb
cmpb
xchg
jp
out
scas
shll
xchg
jle
jae
cmp
or
das
fwait
pop
out
push
mov
out
fcmovnu
pop
jle
out
adcb
adc
push
movsb
arpl
ljmp
es
in
push
clc
lahf
cmc
add
cmp
and
nop
addr16
mov
mov
or
adcb
push
rclb
insb
frstor
add
jmp
push
inc
out
mov
outsb
lds
mov
pop
loope
outsl
shr
adc
sbb
imul
mov
std
das
xor
jb
sub
fadd
lret
in
test
stos
data16
sub
sbb
test
icebp
and
sbb
stos
mov
xor
out
subl
xchg
fiadds
adc
popa
arpl
ds
push
jp
lds
popf
test
movsl
push
aad
add
pushf
xor
dec
xlat
aam
enter
mov
cmc
xlat
push
jg
sub
stos
fiadds
ror
push
add
imul
repnz
shll
cmc
std
mov
push
fists
jp
jno
lcall
test
loopne
bound
add
lahf
mov
or
and
cmp
shlb
js
cltd
daa
rclb
into
add
and
fmulp
mov
mov
out
sub
jno
sbb
pop
icebp
data16
ror
or
negb
dec
pop
lea
mov
incb
bound
sub
jns
fstl
aaa
push
sti
inc
jo
sub
sub
icebp
mov
push
out
inc
and
loop
sbb
lret
into
dec
sub
sub
and
stc
cmpsl
dec
jmp
push
add
movsl
js
cmpsl
xchg
mov
mov
inc
inc
sbb
mov
loopne
shl
cmp
cmp
int
jle
inc
or
fidivrl
dec
in
iret
je
mov
sub
cmp
out
pop
stos
ds
jg
cmp
bound
cld
fsubrp
pop
ja
add
daa
rclb
aam
test
pop
fs
test
and
jbe
adc
sub
aad
or
in
cwtl
ret
test
scas
loopne
inc
loopne
xchg
testl
es
xchg
push
das
sub
dec
pop
jae
or
mov
fnstsw
add
divps
jge
pop
jge
fistpll
pop
les
scas
mov
mov
xchg
rcrb
pop
outsb
and
lods
stos
gs
dec
jl
xchg
jg
dec
push
and
lcall
fildll
mov
popa
lea
adc
outsb
or
lock
into
movsb
jno
add
mov
xor
xlat
popa
jmp
xchg
mov
mov
jmp
loop
jl
repnz
jge
loopne
setns
inc
mulps
push
ret
or
dec
xchg
loopne
pop
mov
xor
jno
add
enter
orb
js
jns
add
xchg
or
es
int3
xlat
dec
lock
mov
idivl
dec
pop
mov
aad
inc
pushf
sub
jne
mov
jo
add
int3
lea
lods
sbb
or
stc
sbb
xchg
mov
enter
jmp
sbbb
jl
pop
sub
jno
rorb
sahf
addb
into
adc
jl
xchg
add
fnstcw
jno
jge
fisubl
decb
and
jbe
mov
cmp
imul
pop
ret
lret
and
dec
mov
push
addr16
mov
inc
and
andb
pop
mov
push
inc
jmp
mov
dec
xchg
lods
mov
dec
fnstcw
int
sub
loop
and
jno
popa
or
jge
cmp
mov
clc
jb
mov
mov
mov
xchg
cmpsb
sub
fdivrp
push
mov
pop
sub
or
push
shll
xchg
pop
fimull
ficompl
mov
ffreep
loop
in
pop
pop
loopne
xchg
jmp
in
pusha
out
lahf
add
or
adc
mov
es
mov
mov
daa
jb
insl
xchg
lret
adc
cmp
mov
das
shll
cmp
jecxz
inc
push
in
leave
pop
enter
or
int
lret
cwtl
mov
cmp
lds
inc
pop
adc
adc
pop
cmp
call
out
leave
cmp
data16
jo
enter
push
push
ss
idiv
test
ljmp
xchg
faddl
adc
insl
stos
pop
or
adc
js
jle
sub
aam
adc
xchg
push
jo
dec
js
sub
mov
mov
orb
dec
frstor
out
call
enter
mov
sti
dec
and
out
dec
ret
es
movsl
push
out
add
jbe
sbb
jbe
pop
scas
mov
push
rorb
mov
outsl
and
sub
les
clc
stc
es
push
push
repnz
xor
test
loopne
fbstp
nop
aad
test
inc
sbbb
outsl
sub
jle
cltd
and
in
stos
mov
pop
mov
push
fs
sub
daa
lods
lret
movsl
sub
clc
sahf
xor
int3
or
cmp
in
lcall
add
push
mov
pop
faddl
pop
mov
lahf
loope
lock
cmp
aas
push
insb
inc
out
fisubrl
and
jb
popf
pusha
xrelease
rorl
xchg
testl
aas
fisttpll
dec
inc
push
push
mov
cmp
jno
xchg
sbb
in
clc
cmp
fmull
mov
mov
cmp
ret
int
je
popf
out
pushw
bound
lahf
and
pop
stc
jno
pop
mov
repnz
ss
cmp
push
mov
shl
mov
fcomp
adc
mov
dec
rorl
shrl
cmp
dec
mov
mov
sub
fcoms
pusha
sbb
movsb
stos
lahf
mov
fwait
outsb
loope
jo
jnp
iret
xchg
push
pop
faddp
int3
dec
aas
scas
out
movsb
push
xchg
push
sbb
mov
inc
pop
es
add
in
stos
cli
sub
add
stos
arpl
or
jge
into
jp
rorl
lret
aaa
ljmp
ret
test
aaa
push
insl
mov
out
insb
stos
rcll
mov
cwtl
imul
push
popf
lea
add
jnp
in
insb
arpl
scas
jnp
ss
roll
outsb
xor
mov
insb
inc
pop
test
and
incb
adc
iret
jnp
jns
mov
scas
imul
imul
xchg
or
and
out
sub
jmp
and
movsl
popf
stc
push
cs
enter
jge
sbb
mov
pop
daa
outsl
std
idiv
jmp
les
out
dec
aad
loope
push
add
and
cmp
inc
lea
outsl
lcall
daa
jo
outsb
push
add
nop
adc
fiaddl
mov
sbbb
rorl
flds
jae
sub
pusha
outsb
ret
minps
cltd
sbb
sahf
and
mov
repz
out
dec
adc
inc
jnp
sbb
cmp
in
add
cmp
xorl
pop
jg
adc
add
std
es
in
outsb
or
xchg
mov
gs
lret
adc
and
into
arpl
sub
outsb
sti
cmp
adc
test
xor
pop
addb
sub
fadd
jg
dec
je
idivl
push
inc
dec
jns
sub
cmc
dec
xchg
cmpb
in
mov
daa
and
mov
mov
cmp
add
xor
stos
ret
xor
out
imul
lahf
pop
mov
imul
lea
mov
and
inc
push
das
jge
iret
dec
mov
jnp
xchg
xor
or
mov
jns
int
daa
cmpl
jle
aaa
add
sub
sbb
xchg
cmp
pop
adc
and
mov
mov
mov
add
adc
pop
pusha
gs
std
mov
fdivp
into
es
xchg
xlat
outsl
outsl
jnp
jb
xor
lcall
pop
xchg
into
dec
fs
cld
decl
pop
scas
dec
jp
int
jae
sbb
mov
sbb
movsl
push
cmp
aam
fsubrp
push
cmpsb
pop
jecxz
jo
test
sbb
hlt
cltd
sarl
shrb
jecxz
adc
mov
sub
and
cmpsb
adc
rcll
lods
adcb
inc
rolb
popa
pop
sti
mov
and
or
cli
sub
test
mov
or
pop
mov
or
or
pop
das
subl
mov
jb
jp
xchg
xorb
js
cld
adc
es
out
adc
mov
inc
cmp
adc
into
lret
nop
test
inc
pop
sub
test
dec
sbb
push
sbb
push
adc
mov
scas
dec
mov
xchg
mov
add
shll
mov
imul
inc
xchg
adc
sbb
dec
inc
daa
call
inc
pop
jmp
push
or
rol
pusha
mov
xchg
jecxz
mov
inc
inc
int
or
lcall
sbb
and
ret
outsl
popf
cmc
gs
push
out
push
or
hlt
push
data16
or
jbe
inc
mov
lds
sbb
and
add
and
push
add
cmp
or
popf
ret
idivl
jb
or
out
xchg
dec
xchg
in
sub
mov
fcmove
out
mov
aad
xchg
push
sbb
cmc
and
jmp
pop
cld
or
pop
dec
fdivrs
repz
nop
into
in
subl
enter
mov
fsubs
in
sbb
mov
shl
lahf
sahf
push
add
repnz
je
sub
loope
cmpsl
mov
jp
or
cmp
out
pushf
jmp
and
scas
mov
sub
in
cmc
mov
push
xchg
test
popf
xchg
test
mov
int
mov
pushf
dec
insb
xor
jge
sbb
add
shrl
leave
pop
mov
dec
xor
insl
or
lret
mov
dec
test
xor
ret
push
or
es
xlat
aas
pop
into
cmp
divb
jg
cmc
jl
pop
xor
popf
jecxz
jae
jle
rol
mov
int3
or
popa
lods
sti
sub
addb
xchg
das
bound
mov
adc
xchg
adc
jbe
mov
mov
mov
icebp
push
shrb
or
shl
ret
push
loope
sub
push
mov
daa
sbb
or
jp
popf
addr16
flds
inc
or
pop
mov
mov
push
push
mov
aas
jne
mov
mov
lahf
jle
mov
pushl
and
cmpsb
pop
int
ds
imul
pop
xchg
rcrb
push
fwait
rorl
dec
xor
outsb
adc
mov
sahf
shrl
fiadds
push
jno
inc
cs
and
pop
add
jle
mov
sahf
shrl
fiadds
push
jb
push
cs
and
pop
add
jle
mov
sahf
enter
mov
out
mov
push
leave
jns,pn
and
pop
add
jle
mov
xor
scas
ror
inc
cmp
jle
outsb
add
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
stos
jmp
sti
mov
frstpm(287
decl
fwait
sub
jnp
dec
sbb
sub
dec
or
stos
jmp
sti
mov
fucomi
stos
sti
mov
sub
jnp
dec
sbb
sub
dec
or
stos
jmp
sti
mov
fucomi
stos
sti
mov
sub
daa
js
xor
pop
add
jmp
clc
scas
jmp
jp
mov
js
ja
cs
dec
dec
or
sub
jecxz
sbbb
and
pop
mov
rcll
rolb
sbb
jmp
mov
or
sub
mov
ljmp
stos
push
test
dec
jno
lret
sub
or
hlt
fwait
sbb
adc
cli
std
lret
jmp
jmp
xor
pop
sub
mov
movsb
xchg
js
imul
cmp
pop
loope
mov
inc
lret
int
cs
jp
mov
push
stos
or
push
outsb
addl
lret
adc
mov
jnp
push
push
dec
pop
pop
push
aam
iret
dec
push
xor
cmc
jmp
sti
mov
fucomi
stos
sti
mov
sub
jnp
dec
sbb
sub
dec
or
in
xchg
sub
popf
xchg
mov
scas
out
lcall
and
adc
mov
jle
stos
leave
mov
lret
decb
in
fwait
dec
cmp
dec
sbb
das
push
cmp
jne
mov
lcall
mov
fwait
sub
jnp
dec
sbb
sub
dec
or
stos
jmp
sti
mov
fucomi
stos
sti
mov
sub
jnp
dec
sbb
sub
dec
or
stos
jmp
out
xor
mov
jo
adc
pop
int
mov
aam
and
pop
jnp
lea
push
xchg
xchg
pusha
outsb
ljmp
mov
mov
rcrl
mov
ret
pop
imul
xchg
or
fidivrl
add
bound
and
jp,pn
pop
cmpsl
cmpsb
sarl
lock
aaa
sbb
mov
shrb
lcall
push
jge
hlt
inc
jb
scas
xchg
sarl
inc
ljmp
ret
xchg
les
mov
ljmp
sbb
xchg
sbb
ds
jl
popf
nop
inc
notl
jle
mov
dec
mov
sbb
test
repz
jl
cs
mov
sbb
adc
clc
and
ret
insl
mov
mov
ret
adc
js
js
arpl
mov
add
dec
and
aaa
pop
sbb
cs
sbb
lcall
or
push
jb
cmc
and
in
dec
push
fs
xchg
lods
sbb
and
out
mov
push
jle
out
cwtl
cwtl
dec
xchg
sub
dec
movsb
jmp
xchg
dec
repnz
addl
add
inc
lret
or
subl
cmpsl
in
shlb
sbb
push
xor
test
fs
outsl
mov
enter
leave
adc
pop
and
lret
idiv
pop
lock
stc
into
outsb
test
cmp
jbe
and
mov
sahf
cmpsb
orl
bound
pop
add
out
in
add
adc
xchg
test
push
pusha
xchg
sbb
or
sub
adc
movq
sub
mov
mov
add
bound
cmp
bound
inc
jnp
xchg
divl
call
cli
inc
mov
stc
cmp
add
jae
mov
mov
adc
mov
ret
lret
cmp
bound
imul
sbb
inc
lcall
bswap
lods
lahf
int
and
ja
mov
adc
mov
cmp
or
push
ja
rorb
xor
aaa
push
sub
and
loop
cmc
loopne
fs
test
stos
jle
imul
mov
mov
fbstp
outsl
or
jge
mov
push
inc
push
loopne
cmp
pop
fists
iret
adc
push
push
ljmp
dec
xchg
ret
pop
inc
fwait
stos
xor
adc
push
adc
test
stc
subl
aam
call
sbb
data16
mov
mov
add
jge
and
les
adc
mov
adc
inc
and
jns
add
mov
add
test
fcoms
in
mov
xchg
sbb
pop
mov
jmp
ja
or
xchg
fistps
ret
lods
cmp
outsb
mov
loope
cmp
dec
add
idiv
or
xchg
or
cld
push
cmp
push
into
fsubrp
mov
jg
add
mov
je
jge
aad
outsb
cwtl
xchg
mov
cmp
jmp
inc
clc
xor
adc
or
scas
ss
rcrl
pop
push
jnp
out
push
mulb
mov
test
mov
rol
mov
xchg
mov
mov
mov
stc
mov
dec
pushf
xchg
mov
arpl
mov
inc
add
jb
mov
push
mov
and
lea
clc
fs
add
mov
shrb
sub
dec
mov
int
lock
pop
ja
add
sub
mov
stos
mov
add
rcll
adc
pop
add
ss
aaa
push
scas
fisttpll
jecxz
xor
and
mov
int3
mov
mov
in
enter
sub
loope
pusha
test
in
xchg
out
dec
cmpsl
sub
dec
aas
push
pop
cmpsb
fucomi
and
test
pop
or
dec
add
daa
inc
cmp
sub
xchg
into
mov
add
mov
and
movsl
sbb
test
adc
fsub
adc
xor
rorl
adc
lock
mov
shlb
out
leave
dec
push
xchg
out
pop
shlb
xchg
add
sub
imul
add
popa
into
leave
dec
sti
sbb
test
mov
or
or
mulb
mov
call
adcb
aad
sub
std
cmp
mov
pusha
outsl
ret
dec
mov
imul
add
cs
cmp
push
mov
mov
lea
pop
or
loope
mov
adc
sarl
adc
popa
lahf
lods
sbbl
xchg
add
fbstp
scas
cmp
aas
std
mov
and
jae
jl
inc
inc
push
gs
dec
sub
in
loop
and
pop
xor
roll
cld
sbb
mov
add
pushf
lret
mov
mov
shl
pushf
iret
cmc
fcoml
adc
sub
scas
cmp
call
sub
cmp
stc
sub
xchg
pop
mov
sahf
push
popa
or
xor
jnp
lcall
sahf
and
dec
pushf
pop
cmpsl
push
cld
xor
mov
lods
mov
sbb
roll
add
and
sub
push
and
mov
jmp
mov
push
sub
adc
mov
xchg
adc
andl
pushf
inc
sub
jp
cld
enter
mov
fnstcw
adc
aaa
je
pop
daa
sbb
ret
adcb
mov
xor
testl
inc
test
mov
mov
xchg
jno
std
pop
add
adc
leave
xor
subb
sbb
push
push
mov
nop
dec
xor
mov
icebp
mov
dec
cmp
scas
push
xchg
ja
xor
mov
popf
push
mov
out
leave
pop
mov
jecxz
ja
inc
mov
xchg
mov
jle
jl
jp
add
repz
ret
inc
mov
adc
sub
mov
jmp
xchg
dec
mov
popf
lahf
xchg
inc
addr16
lret
cmp
mov
push
adc
lcall
int3
sbb
mov
sbb
or
pop
pop
cmc
lret
outsl
xchg
cltd
dec
rol
fsubrp
pusha
lds
fidivrs
jp
movsb
inc
lcall
ror
arpl
add
roll
pop
inc
popf
lods
pop
mov
mov
loope
stos
jl
ljmp
jne
jge
scas
in
xor
xchg
insb
sub
ret
pop
out
jg
icebp
arpl
inc
and
mov
cmp
inc
xor
iret
xor
adc
jle
shll
or
in
into
xor
cmpl
xor
bound
repnz
fcmovbe
insb
jno
daa
lahf
iret
insb
jg
arpl
sbb
nop
sbb
mov
dec
add
push
add
cwtl
sti
sbb
push
fwait
orl
ret
xor
dec
jo
lods
test
push
push
cltd
xlat
movsl
call
or
dec
jmp
dec
inc
adc
inc
cmc
nop
mov
sti
inc
pop
stos
sbb
sbb
adc
inc
sub
lcall
xchg
jns
jae
pushf
sahf
stos
lea
aad
add
rcl
mov
sub
jae
xchg
jb
add
cs
mov
sub
cmp
pop
iret
xchg
in
mov
out
stos
cmpsb
stos
xchg
push
xchg
pop
xchg
pop
fcmovnu
mov
imul
xor
lret
or
and
push
out
or
out
scas
sub
repnz
add
ret
cmp
push
cld
push
pop
mov
add
add
js
xor
cwtl
xchg
push
inc
or
mov
je
pop
jge
daa
cltd
xor
push
pop
loope
addr16
pop
dec
std
or
sub
popl
xchg
mov
mov
mov
lods
pop
inc
sahf
rol
fcmovnbe
mov
pop
ljmp
ffree
dec
sub
setno
pop
mov
sub
sti
loopne
sub
int
or
std
mov
test
gs
xchg
push
or
cld
adc
push
or
mov
icebp
push
lahf
seta
fnstenv
pop
scas
push
mov
push
les
sbb
outsl
mov
loope
mov
incl
cmpsl
repz
xor
lahf
mov
pop
push
imul
mov
mov
or
outsl
arpl
lahf
or
sbb
push
jb
mov
mov
sub
add
push
push
sub
aas
std
push
lods
sub
and
add
rcrb
push
out
cmp
js
mov
out
sub
pop
dec
inc
add
call
roll
loope
xor
sbb
or
add
xor
sbbb
loop
cmpsb
or
movsl
xor
and
dec
decl
mov
jmp
add
movsb
dec
sbb
inc
mov
in
es
jmp
in
fs
imul
fwait
or
mov
sbbl
test
sbb
in
rcrb
cs
stc
add
xchg
push
adc
xor
add
cwtl
push
jns
inc
adc
xorl
fidivs
add
es
inc
enter
loope
out
sub
pusha
aam
pusha
or
nop
lods
hlt
mov
fidivs
cwtl
cmpsb
mov
or
and
cmp
or
push
pop
dec
repnz
test
fsubl
jns
sub
cs
xor
push
dec
inc
inc
fidivs
mov
icebp
xstore-rng
cmpsl
add
jl
lods
outsb
mov
and
and
push
jno
xchg
mov
ret
jge
mov
outsl
adc
fidivrs
sub
xchg
mov
insb
scas
cmp
sub
cmp
arpl
push
out
jecxz
popa
xorb
fiaddl
scas
scas
mov
dec
and
aad
movsl
aad
mov
xor
pop
lds
orl
sub
mov
lcall
rcr
cli
pop
sub
jg
xchg
inc
push
pop
pop
xlat
pop
leave
cmp
xlat
enter
or
js
jno
mov
imul
jo
push
jo
imul
sahf
push
loop
xchg
inc
xchg
popa
out
jg
cld
cltd
mov
test
dec
es
bound
push
xchg
cltd
mov
xchg
push
mov
enter
pop
adc
js
jae
sahf
xchg
mov
push
sub
xchg
pop
jle
add
inc
mov
jne
pop
xor
mov
jne
jne
subl
lahf
jmp
jmp
scas
pop
sub
and
loop
fldenv
mov
xlat
cmp
adc
jmp
int3
push
call
ja
outsl
xchg
sbb
test
jle
gs
jge
xor
das
xor
es
lods
push
xchg
push
neg
pop
inc
stc
iret
xchg
pop
push
mov
lcall
pushf
pop
loopne
cli
push
xor
std
inc
arpl
cmpsl
adcb
pop
in
xor
hlt
adc
inc
and
fcoml
sub
fisttpll
outsl
pusha
pop
jnp
jb,pn
daa
stos
pop
xor
iret
mov
decb
imul
push
jg
mov
jmp
mov
jmp
nop
xlat
fsubs
gs
pop
mov
push
xchg
mov
and
add
adc
mov
dec
imul
sbb
mov
inc
data16
mov
fwait
sbb
movsb
je
add
jne
enter
or
adc
adc
mov
in
popf
xchg
push
daa
enter
rorl
pop
sub
pop
lahf
sub
test
sbb
aam
insb
sbb
loope
xchg
push
sub
sbb
and
pop
fwait
daa
ficomps
mov
test
loop
mov
rcrb
lcall
mov
fsubrp
or
pop
es
enter
insl
movsl
pop
xchg
icebp
pop
sbb
push
xorb
rorb
orb
xorb
ret
cmpl
add
sbb
add
lcall
in
mov
and
movsl
pop
adc
movsl
leave
fwait
pop
outsl
in
jl
call
and
rcrb
mov
cld
jle
mov
mov
add
sbb
jbe
mov
jl
ja
loope
enter
lret
mov
mov
or
ljmp
xchg
cmp
inc
pop
scas
fs
push
mov
dec
fstp
aad
cli
adc
or
sbb
lods
popa
mov
das
lret
test
push
adc
xor
pop
or
cmp
aaa
fwait
sub
and
das
ficoml
and
pop
cli
es
mov
mov
lahf
mov
adc
das
mov
lds
mov
jnp
movsb
xchg
in
mov
push
xchg
out
inc
lods
mov
jo
xorb
push
mov
mov
out
loopne
push
pop
dec
fs
ficomps
pop
std
sbb
jge
dec
ds
sbbl
fstl
test
and
mov
and
adc
xor
sub
mov
mov
xchg
push
pop
cmpsl
loop
push
pop
mov
or
pop
test
or
sub
jne
outsl
shl
jp
in
lret
adc
push
jbe
add
imul
inc
aas
lods
mov
push
or
fidivs
sbb
mov
fs
pop
mov
jle
mov
adc
add
xchg
mov
pop
mov
sbb
out
jg
xchg
inc
popa
xor
sub
iret
dec
pop
cmp
inc
jne
xchg
cmpsb
or
cmp
push
and
mov
jae
sbb
insb
fcmovne
nop
out
std
aas
aaa
dec
mov
popf
add
or
mov
lahf
imul
repz
push
sbb
addr16
js
dec
add
aad
adcb
mov
cli
xorb
mov
and
or
or
adc
mov
rclb
filds
or
mov
dec
cwtl
or
sbb
fmull
andb
call
ror
repnz
js
pop
inc
mov
arpl
xchg
add
aaa
stos
jmp
testb
sbb
xorb
fwait
dec
sbb
loopne
mov
adc
inc
clc
sbb
mov
add
add
fstps
add
jl
loop
insb
cmc
fbld
mov
add
cwtl
jg
sbb
pop
out
mov
or
mov
jecxz
dec
xchg
push
cmp
sbb
int
xchg
push
dec
icebp
mov
push
orl
scas
cmp
jae
jb
sbb
mov
ss
xchg
inc
mov
adc
iret
dec
push
cltd
stos
das
arpl
xor
jmp
int3
add
test
aas
lret
inc
cmp
rol
mov
xor
daa
mov
fistps
adc
fsubs
lcall
mov
mov
icebp
and
xchg
fmuls
adc
dec
lret
mov
xchg
data16
xor
movsl
call
adc
mov
push
xchg
mov
mov
cmpsb
je
cmpsb
popf
jnp
xlat
mov
movsl
aaa
jge
int3
test
adc
test
inc
lods
pop
adc
lahf
js
movsb
dec
loop
sbb
xor
sahf
cltd
pop
pop
ret
icebp
sbb
gs
es
es
int3
sub
pushl
and
fcoms
aaa
xchg
adc
adc
out
std
clc
pop
lock
in
dec
imul
aad
fwait
enter
sub
cltd
xchg
or
jmp
cmp
mov
scas
into
mov
xchg
mov
pop
test
push
stos
pop
sbb
nopl
int3
xchg
cmp
test
out
add
pop
mov
jbe,pn
adc
fistl
mov
paddw
jo
fwait
insl
push
add
cltd
aaa
fists
lahf
cld
bound
cmpsl
dec
cld
pop
mov
push
mov
cmp
add
jae
push
movb
div
mov
dec
xlat
imul
cmp
call
repz
or
dec
or
mov
fstpt
popf
push
sti
or
lahf
jb
sbb
jle
or
scas
adc
pop
sub
enter
clc
fidivl
loop
roll
xor
lock
lea
cwtl
xor
mov
or
add
or
add
cli
and
aam
add
movl
mov
cs
xchg
int
rcrl
outsl
ljmp
aas
lret
mov
and
inc
scas
xchg
mov
dec
dec
push
out
adc
test
jnp
js
hlt
jne
inc
rcr
imul
rcrb
inc
pop
imul
sbb
out
add
fsubs
data16
rcrb
jle
xchg
inc
cmp
int
lcall
mov
inc
dec
sub
dec
adc
add
push
inc
lcall
inc
movsb
inc
push
ret
mov
push
dec
xchg
mov
pop
loopne
push
les
jmp
fbld
iret
push
xor
mov
cltd
adc
pop
decb
and
repz
add
mov
xchg
in
gs
dec
xlat
sub
fwait
add
imul
jne
nop
xchg
js
and
sbb
int
mov
push
stos
sub
pushf
and
daa
nop
hlt
mov
mov
pop
imul
testb
mov
adc
jnp
icebp
mov
adc
sub
inc
hlt
push
adc
xor
movsl
push
xchg
mov
lock
xor
jp
pushf
in
sub
loope
xor
pop
or
sti
sahf
xor
scas
outsl
dec
cmp
rclb
mov
das
orl
jle
push
pop
inc
adc
ljmp
adc
push
add
xchg
push
inc
imull
faddl
daa
mov
out
out
mov
scas
fcmovne
jmp
aad
push
and
movsl
pop
sbb
iret
dec
loopne
adc
enter
jecxz
jecxz
pop
lods
nop
lahf
jb
stos
out
sbb
pushf
push
sbb
sbb
scas
ficomps
and
imul
add
roll
inc
mov
push
or
in
insl
jg
in
sub
mov
pop
into
xor
push
adc
mov
movsb
lret
mov
roll
pushf
ds
pop
lret
aaa
outsb
arpl
sbb
sub
fldl
adc
xor
jg
dec
fcoml
sub
inc
mov
jbe
xchg
sbb
push
subl
int3
loope
ss
jecxz
xlat
jo
pusha
xor
out
sub
loop
dec
popf
scas
fs
dec
mov
mov
icebp
out
mov
adc
fs
out
dec
lods
adc
stos
jl
mov
and
xchg
adc
out
sti
rcr
mov
outsb
mov
pop
sbb
lods
fimuls
mov
iret
hlt
stos
or
daa
mov
inc
popf
dec
cmc
push
pop
fsubl
adc
in
outsl
xchg
aas
in
inc
cmp
insl
loopne
popa
in
leave
jne
insb
out
in
adc
idivl
or
add
in
sbb
push
dec
scas
xchg
cmp
mov
mov
gs
sti
mov
push
xchg
adc
adc
pusha
add
cmp
loopne
stc
inc
jle
jns
sub
push
sbb
lea
nop
sbb
push
cmc
jp
mov
fs
dec
popf
data16
and
add
mov
int
fists
push
mov
sub
insb
push
bnd
in
rolb
insb
add
and
imul
sbb
jp
ret
scas
stos
adc
imul
add
outsb
sub
mov
aam
adc
ror
push
inc
std
mov
cmc
and
insl
test
shl
movsl
xchg
jbe
daa
cmp
lods
je
mov
icebp
push
add
and
add
scas
cmc
jne
aad
push
je
sbb
and
push
mov
and
ret
add
addl
pusha
xor
mov
pop
xor
inc
add
popf
dec
pop
jb
out
out
cmp
sbb
cli
adc
push
inc
fmul
sbb
popf
mov
cmc
cwtl
mov
fisttpll
stos
mov
test
push
cmp
pop
push
mov
out
shl
int
pop
sbb
add
bound
test
ljmp
imul
loop
je
xorb
xchg
xor
and
dec
jae
scas
jle
cld
sahf
push
sbb
callw
daa
mov
jle
sarb
sahf
and
xor
mov
sbb
out
arpl
lahf
jmp
int3
xchg
add
fwait
and
fistpl
sti
lret
jmp
sti
mov
sub
jnp
dec
sbb
sub
dec
or
stos
jmp
sti
mov
fucomi
stos
sti
mov
sub
jnp
dec
sbb
sub
dec
or
stos
out
mov
stos
sti
mov
sub
jp
dec
sbb
sub
dec
or
stos
jmp
sti
mov
fucomip
stos
sti
cmp
or
sub
sub
mov
movsb
in
add
mov
cmp
or
jne
mov
xchg
sub
sbb
in
cmc
pushf
add
mov
inc
jmp
sti
add
mov
xchg
dec
movsl
stc
mov
mov
xlat
imul
cmc
xchg
sbb
or
cmp
ret
jge
outsl
or
dec
shlb
sbb
fwait
gs
aad
ret
lea
xchg
fadds
jecxz
loop
xlat
mov
cmp
je
mov
stos
gs
and
sbb
in
aam
ss
mull
testb
push
jns
test
fidivrl
push
jecxz
or
les
pusha
push
insb
shl
mov
pop
mov
dec
fidivl
data16
inc
into
inc
add
sti
lock
gs
sub
cmp
stc
or
sbb
ljmp
sbb
sti
insl
jmp
add
push
pop
cmp
pop
xorl
fwait
popa
in
ss
or
hlt
in
in
aam
cmp
in
dec
xor
dec
adc
xor
jmp
loop
adc
and
jmp
clc
add
fists
inc
mov
jmp
ljmp
daa
mov
push
cltd
mov
into
push
mov
sbb
icebp
sbb
outsb
rorb
mov
aad
cmpb
add
mov
push
jmp
sti
jne
test
xchg
sub
pop
aad
in
cmc
mov
mov
push
jmp
sti
jne
test
xchg
sub
pop
aad
in
cmc
mov
shll
in
dec
mov
in
xor
jle
mov
mov
jne
fnstcw
push
inc
or
add
sub
int
push
inc
lock
sbb
test
push
dec
mov
arpl
rclb
lret
mov
xchg
mov
cltd
mov
inc
out
mov
sti
xor
pushf
sbb
mov
fadds
push
jno
movsl
mov
xchg
inc
ja
adc
mov
cmp
clc
and
sbb
jns
cmp
pop
pop
rol
xor
mov
stos
pop
push
sbb
sbbb
sbb
and
jmp
jae
xchg
mov
pop
daa
daa
into
stc
inc
mov
jecxz
sub
std
or
sub
mov
push
jp
mov
lods
xor
sbb
aad
mov
cmc
mov
inc
dec
sbb
into
xor
daa
rolb
sbb
insl
push
jae
adc
jbe
push
xor
subl
add
fldcw
pop
cmp
fcomps
cmp
cs
xchg
je
int
xor
mov
orb
push
jmp
inc
dec
push
popa
cmp
loop
cmpsl
test
or
cs
js
mov
dec
test
and
pop
testb
xchg
or
mov
das
and
test
mov
push
cmp
jb
fbld
xor
push
jmp
jle
or
sub
sub
jo
hlt
inc
xor
sti
fistps
iret
ljmp
pusha
push
mov
rolb
lret
mov
aam
cmp
mov
sbb
cwtl
push
into
addr16
out
mov
leave
add
jns
push
dec
jne
data16
inc
mov
mull
jo
lret
das
stc
and
lods
xor
jbe
inc
ss
mov
subl
xor
push
xor
test
dec
lahf
jb
fsubr
test
mov
xchg
lea
dec
and
imul
xchg
cmpsb
or
jno
lock
cmp
xchg
inc
cmp
lcall
outsl
into
xor
jp
movsb
pop
shlb
or
or
leave
je
push
push
inc
adc
repz
and
loope
jne
inc
xchg
cld
loop
sub
mov
fiadds
mov
jb
add
lods
in
pop
adc
cli
ljmp
pop
dec
aam
std
in
std
out
pop
push
mov
imul
adcb
clc
adc
movsb
push
fistpl
fwait
pop
mov
mov
in
dec
jl
lock
sbb
and
push
mov
lahf
jg
fidivrs
fwait
stos
pushw
cmpsb
out
jmp
cmp
popf
add
pop
imul
outsl
cs
inc
mov
ret
in
pusha
daa
push
xor
mov
stc
loop
cwtl
std
sub
jbe
xor
xor
stos
push
outsl
loopne
cli
repz
sbb
nop
mov
sbbb
adc
pop
pop
xlat
pop
in
aaa
mov
mov
mov
std
shll
pop
xor
lcall
adc
cmp
mov
in
stc
push
stos
mov
and
iret
xor
je
sub
nop
push
cmp
icebp
jno
aas
les
mov
or
add
loop
push
pop
fidivrs
inc
mov
cmpsl
stos
ret
xchg
mov
inc
sub
dec
ret
test
dec
sub
rorb
sbb
test
mov
mov
cwtl
adc
shlb
jne
popa
lods
outsl
dec
push
jecxz
and
pop
xchg
push
pop
enter
mov
mov
jo
or
mov
shl
mov
adc
mov
lds
ss
stos
js
out
dec
ret
repnz
jno
adc
pop
dec
xchg
test
outsl
mov
fdiv
fwait
cmp
jl
call
decb
icebp
ficomps
pop
jbe
push
or
xchg
pop
jle
hlt
xor
je
xchg
sub
cwtl
sub
lea
test
enter
je
lcall
pop
in
test
xchg
mov
mov
cmp
outsb
lcall
or
jne
lcall
pop
jmp
mov
jno
jp
popf
js
lret
loop
inc
add
dec
sbb
mov
push
sbb
inc
cmp
ds
scas
cmpsl
out
xor
in
out
iret
push
rolb
jge
pop
pushf
sub
in
pop
decb
jbe
stc
xchg
mov
xchg
call
adc
stos
pop
cli
fdivl
xor
les
xchg
xchg
jnp
sbb
outsl
add
jp
loopne
divb
mov
inc
mov
jne
lcall
call
ljmp
mov
xchg
add
lcall
jo
xchg
or
cmp
mov
out
adc
pop
cmp
adc
inc
add
pop
idivb
xchg
pushf
sbb
adc
push
pop
push
sahf
iret
adc
lock
out
neg
jo
or
jae
jb
std
repnz
rol
dec
outsl
cli
hlt
cwtl
and
cld
clc
xor
movsl
cld
loop
push
adc
xchg
inc
jg
cmp
nop
jmp
pop
mov
loop
sarl
mov
sub
sbb
dec
cmc
in
cmp
in
sub
mov
cmp
nop
pop
jg
xlat
jo
push
inc
icebp
xchg
mov
ljmp
andl
xchg
pop
sub
inc
lea
aaa
jno
and
xchg
dec
in
cmpl
iret
idivl
adcl
push
adc
or
cmpsb
cmp
xchg
les
addr16
test
shlb
outsl
cmp
pop
repz
out
add
loop
into
popa
lret
push
sbb
nop
leave
movsb
lcall
sub
xor
roll
fwait
jl
lock
sub
pusha
adc
in
and
push
stc
into
lock
push
pextrw
stos
sub
add
or
xor
fidivs
ret
movsl
mov
jle
daa
lods
pop
outsl
lea
fisubrl
cmp
pop
lds
into
fnsave
adc
pop
movsl
out
mov
xor
inc
mov
outsl
jp
and
cmp
adc
cmp
push
mov
imul
mov
sub
push
arpl
test
jmp
inc
cmpsb
xchg
cmp
mov
rorl
je
xchg
into
mov
fs
bound
andb
xor
pop
pusha
loopne
rcrl
std
gs
sub
mov
addr16
pushf
xchg
or
pop
jb
dec
or
in
add
daa
xor
jnp
push
or
jl
mov
fs
pop
test
scas
inc
cmp
das
jno
cwtl
aad
sbb
jnp
jae
inc
in
cmpsl
sbb
pop
mov
into
or
mov
stos
cs
fcmovb
mov
push
cmp
js
or
jb
mov
inc
or
ret
pop
pusha
jae
dec
add
pop
xor
dec
test
fsubrs
data16
shlb
and
stos
out
push
je
popa
mov
jmp
pop
xor
repz
xchg
fwait
lds
and
pop
cmp
adc
outsl
ret
cmp
aas
sub
cs
fsts
leave
test
ret
mov
out
inc
xchg
hlt
insb
or
dec
jg
movsb
xchg
out
or
jge
add
push
popa
sbb
ja
in
stc
or
mov
nop
cmp
xchg
pop
xor
pop
dec
lods
and
arpl
cmpsl
push
mov
mov
push
jge
mov
ljmp
test
and
mov
in
scas
loop
sbb
xor
sbb
pop
pop
push
aaa
int
adc
inc
fdivrs
fucomp
dec
aaa
sbb
rcll
xor
xor
mov
mov
jge
cmp
mov
jecxz
xor
in
aaa
adc
inc
mov
adc
insl
cmp
imul
stos
adc
xchg
imull
adc
mov
sub
jno
jmp
fidivl
cmp
pop
xor
movsb
cmp
lret
scas
mov
ret
mov
and
adc
push
mov
push
mov
xlat
popf
dec
sub
mov
xchg
xor
sbb
je
mov
xor
or
xchg
inc
lods
mov
jno
push
loopne
mov
jp
negl
call
push
inc
xchg
das
dec
imul
xchg
mov
pushf
scas
jnp
mov
imul
testb
mov
test
mov
aas
dec
push
lret
or
aas
or
mov
loopne
inc
ss
fwait
push
inc
adc
cwtl
adc
xlat
lods
adc
movsl
push
in
stos
mov
loop
rcll
jbe
add
iret
push
aad
dec
jl
jg
cmp
ds
xor
icebp
jnp
add
insb
mov
or
and
add
lock
mov
jg
iret
jge
mov
pushf
in
fsubr
repz
insb
push
jl
jne
jo
cmc
mov
add
sbb
cmp
jb
ss
xchg
inc
mov
pop
lods
and
mov
dec
cmp
add
call
fidivrl
pushw
add
or
pslld
cld
cmc
scas
lds
aaa
xor
in
fadd
jle
and
call
mov
jne
out
enter
xchg
and
lret
adc
mov
xchg
adc
lcall
mov
int
das
add
fcomi
pushf
movb
fwait
add
lea
lret
mov
hlt
xchg
es
mov
rorb
lcall
jmp
push
adc
cli
iret
inc
cltd
repz
and
xchg
lods
bound
add
pop
popa
arpl
sub
std
and
sbb
and
mov
xor
cld
repz
loope
and
adc
out
cmp
andl
nop
lcall
loopne
add
sbb
fadds
mov
xchg
mov
call
adc
in
jg
outsb
cmp
iret
inc
enter
or
jbe
int3
inc
mov
xlat
push
jl
dec
call
cmpsb
xorb
cmpsl
and
ret
mov
adc
pop
imul
push
stc
out
packssdw
ret
test
jecxz
in
flds
dec
mov
mov
in
pop
out
loopne
ds
mov
cmovge
cltd
xchg
mov
lea
push
pop
xorl
jbe
in
push
mov
mov
pop
mov
push
xor
in
xchg
pop
lods
or
jg
cmp
dec
imul
loopne
out
push
inc
xor
jo
lods
mov
mull
xchg
insb
cmc
ss
xlat
test
jg
push
mov
jmp
jns
mov
xor
mov
xchg
repnz
jmp
int
cmpl
dec
popa
mov
mov
daa
rcrl
lock
ficoml
xor
push
jbe
ret
sbb
shlb
mov
lret
cmpsb
adc
insb
ja
mov
rcl
mov
jmp
push
repz
cmpb
cs
push
imul
test
add
xlat
mov
das
adc
pusha
or
adc
inc
inc
out
insl
and
imul
jns
jo
fistps
pop
xor
sub
iret
xchg
push
mov
sbb
mov
inc
xorb
add
mov
xlat
orb
jg
cmp
out
sbb
fidivl
stos
xor
leave
in
push
scas
lods
negl
mov
add
push
repz
inc
inc
xor
movsb
inc
scas
das
xor
cmpb
sub
pushf
jl
mov
stos
mov
dec
fisubs
jle
adc
int
pop
std
clc
and
add
push
enter
xor
addl
into
lea
js
mov
dec
popf
mov
repnz
mov
mov
loope
mov
in
in
fstps
scas
das
fistpl
jge
out
cmp
ds
int3
jnp
pop
pop
pushf
jl
stc
cmp
or
push
jnp
jl
stos
mov
fsubrl
out
bnd
ljmp
icebp
in
sub
xor
cltd
dec
push
xor
js
popf
loopne
aas
out
inc
rcrb
scas
popf
int
in
rorl
pop
in
add
cld
mov
ljmp
aaa
lods
in
test
and
pop
pop
push
jecxz
mov
xor
sub
jp
sub
or
adc
mov
mov
dec
jmp
aad
adc
enter
call
xlat
push
mov
or
inc
add
or
das
push
out
mov
sahf
pop
dec
ja
sub
xor
pop
cmp
sub
adc
add
xor
sub
dec
push
mov
xchg
in
stc
mov
xchg
js
jp
add
aaa
cmpsl
mov
jo
insb
jbe
xchg
outsb
lods
and
in
std
push
xchg
cs
cmpsb
jle
push
inc
movsl
jg
cmpsl
dec
jne
fldt
sub
cmpsb
rolb
jb
or
cmp
sub
and
mov
xchg
sbbl
jmp
mov
cli
or
scas
js
sbb
adc
gs
stos
test
clc
mov
jge
stos
adc
roll
ret
add
and
loope
pop
dec
ljmp
jle
xchg
out
outsb
adc
mov
addr16
pusha
std
imul
fldcw
scas
xchg
aam
xor
les
arpl
fists
jle
in
je
movsb
adc
and
fwait
daa
or
push
mov
xor
ljmp
mul
xchg
lock
xor
rorl
mov
fwait
mov
das
or
repz
out
lret
mov
mov
sub
jg
jecxz
mov
dec
xor
jb
xchg
mov
sbb
into
jb
xchg
pop
mov
sbb
outsl
outsb
popa
adc
jecxz
lds
lret
outsb
add
test
fsubrl
xor
sub
pop
loopne
inc
fcompl
fisubl
stos
dec
inc
int
ja
pop
cmp
jmp
sub
sbb
add
lret
insb
test
sub
mov
fwait
and
mov
mov
lods
jg
pop
dec
mov
jbe
ja
gs
xchg
cmc
xchg
pop
iret
adc
mov
xchg
arpl
loop
mov
cld
inc
xchg
dec
sbb
cmp
xchg
sbb
mov
jne
lods
or
dec
outsb
mov
inc
jmp
imul
jecxz
ljmp
or
daa
lods
xchg
push
gs
mov
mov
pop
shlb
cld
cmp
xchg
push
pop
mov
ucomiss
push
test
xchg
mov
jg
add
imul
xorl
sub
ret
or
clc
cmp
dec
stos
sbb
jmp
mov
in
in
adc
add
pop
push
sub
orb
popf
and
xchg
cmc
jae
mov
jb
fnsave
sbb
inc
jb
es
fisubrs
dec
dec
sbb
sbb
nop
jge
push
outsb
test
inc
and
rcll
jl
data16
pop
aas
repnz
mov
neg
jge
mov
loop
or
neg
mov
xor
scas
pop
and
sbb
dec
mov
lret
es
arpl
and
cltd
popa
xchg
sbb
cmp
cvttps2pi
xlat
pop
pop
pop
mov
jge
ljmp
insb
in
int
dec
pusha
test
fsubrl
and
push
cmpsl
shr
je
dec
mov
sbb
adc
movsb
adc
add
xlat
outsb
pop
lcall
fbld
inc
xchg
push
scas
push
fs
rorb
mov
leave
outsb
lahf
jg
call
dec
aad
mov
lock
push
leave
lcall
add
mov
cltd
enter
arpl
lret
mov
rcll
mov
or
cmp
cmpsb
das
or
dec
jle
cli
ficomps
adcb
push
mov
inc
insb
add
adc
mov
test
imulb
and
lret
aam
dec
fistps
xor
imul
add
xchg
pusha
dec
mov
pop
or
xchg
and
or
jns
sbb
lods
inc
ljmp
mov
lcall
mov
fimull
jno
cli
mov
dec
cmp
rcrl
stos
pop
jl
loopne
fnstcw
sti
sub
cli
add
mov
mov
lea
sbb
icebp
fcom
add
dec
movsl
loopne
cmp
xchg
repz
fs
inc
xchg
out
out
popa
pop
jno
xor
sbb
mov
lahf
lds
in
mov
imul
lret
pop
lahf
shll
dec
insl
xor
fdivl
push
shr
cmpl
dec
sahf
sub
jb
movsl
jp
add
sbb
mov
cld
popa
clc
and
repz
pop
leave
push
fs
mov
jp
add
add
pop
in
xchg
mov
je
mov
mov
pop
sub
mov
mov
leave
sub
adc
sti
popf
loop
hlt
inc
fsubrs
lret
sbb
stos
lods
lret
sbb
popa
int
xchg
xchg
and
push
mov
sbb
lcall
jecxz
xchg
sbb
lods
push
push
insb
test
mov
xor
mov
shrb
ljmp
leave
int
or
mov
xchg
mov
imul
inc
stos
ds
cmp
mov
movsb
addr16
nop
mov
fwait
sbb
js
pushf
dec
mov
dec
es
adc
lods
cmp
xor
pop
test
mov
std
enter
stc
loop
mov
pop
lock
jnp
pop
jns
xor
xchg
mov
cmp
lock
enter
repnz
push
inc
cli
ja
pop
mov
sbbl
repz
mov
jle
mov
sub
callw
lahf
sahf
pop
aad
lods
test
ljmp
movsb
cmp
stos
or
jb
jns
das
stc
mov
mov
daa
xchg
jmp
mov
lahf
mov
lock
mov
popa
mov
shlb
mov
xchg
adc
mov
mov
lea
lcall
push
lock
add
ljmp
mov
test
jecxz
shr
cld
dec
outsl
test
cld
xor
adc
mov
ja
xor
repnz
fdiv
lods
xor
sub
or
sbb
les
mov
scas
fisubrs
aam
out
xchg
mov
ret
push
jle
pop
jecxz
push
idiv
sub
ret
sub
inc
mov
mov
scas
mov
and
bound
dec
mov
inc
dec
je
cmpsb
push
mov
adc
aad
repz
pop
add
mov
adc
mov
leave
pusha
shll
ss
xchg
aad
pop
or
lret
test
pusha
sub
xchg
pop
insl
pop
idivb
and
mov
pop
sahf
in
sub
and
int
test
jmp
sub
lock
xor
aas
into
dec
cld
loope
pop
in
adc
push
mov
xchg
ret
pushf
xchg
mov
scas
leave
add
sub
xchg
push
sub
pop
pop
xchg
imul
sbb
jl
mov
jae
push
push
aas
jg
imul
negl
idivb
cs
add
mov
or
insl
xchg
into
add
aam
push
adc
jbe
fstl
movsl
cmpsl
mov
dec
adc
ds
int3
xchg
mov
push
jae
aaa
sub
push
and
aam
outsb
int
push
incl
cmp
inc
hlt
mov
ljmp
or
fistl
cmp
hlt
dec
mov
ss
ja
stos
adc
fisttpl
movsb
das
mov
lods
pop
pusha
xlat
out
push
fistl
fldenv
iret
subl
jge
push
xor
xchg
outsl
ss
fcmovnb
mov
pop
cmpl
ds
mov
cmpsl
mov
add
mov
ror
jmp
outsl
pop
into
and
jbe
sub
push
pop
jns
ljmp
sub
jp
or
xchg
mov
or
jmp
sub
mov
mov
inc
xor
js
xchg
int
lret
mov
lods
aam
pushf
nop
xchg
aas
add
je
jnp
cmpl
or
sbb
add
les
push
cmp
inc
cmpsl
movsl
adc
push
sbb
jne
lock
cmp
xchg
dec
push
lods
test
jle
imul
fsubrs
xor
shufps
cmpsb
movsb
or
push
xor
jmp
sti
jne
test
xchg
sub
pop
aad
in
cmc
mov
mov
push
jmp
sti
jne
test
xchg
sub
pop
aad
in
cmc
mov
mov
push
jmp
sti
jne
test
xchg
das
movsl
cmp
imul
icebp
mov
and
push
imul
hlt
test
aas
andl
test
in
adc
inc
lock
add
movl
movl
movl
call
mov
cmpl
jne
push
push
push
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
popa
mov
and
mov
push
or
pop
add
or
add
jbe
jno
cmp
add
add
add
add
add
add
add
ret
add
add
add
add
xor
sub
cmp
add
add
faddl
mov
mov
inc
add
add
add
add
adc
dec
add
add
jbe
sub
cmp
add
add
stos
add
add
add
add
add
add
add
add
jg
push
add
add
or
sub
add
jg
insl
add
add
add
add
add
mov
add
add
add
jg
sub
data16
add
add
add
add
add
add
add
add
add
add
add
or
push
add
add
add
jg
bound
add
add
add
add
add
add
add
and
xchg
xchg
add
add
add
add
add
add
add
lret
add
add
add
fiaddl
xchg
add
mov
mov
pop
add
add
add
add
add
add
push
add
add
in
add
add
add
addl
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
mov
add
sub
scas
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
dec
add
add
add
add
add
add
add
loop
cmp
mov
add
add
add
or
xchg
add
add
add
add
add
add
mov
sbb
inc
add
add
and
js
jne
iret
add
add
add
push
add
add
add
add
add
js
add
add
mov
add
popf
add
add
add
add
add
cmp
inc
add
add
in
test
ret
add
add
je
jbe
je
cmp
add
push
inc
add
add
ret
add
add
add
add
add
movsb
add
lret
add
add
inc
add
faddl
dec
add
mov
add
sub
sti
add
add
add
incl
add
add
push
add
add
add
mov
add
sub
or
pop
add
add
movsb
add
dec
add
add
inc
add
add
push
add
add
add
add
add
inc
add
lret
add
add
add
add
add
add
add
add
inc
add
add
add
add
xchg
add
add
or
add
add
cmc
add
add
add
add
and
add
jbe
add
add
add
add
addb
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
or
add
mov
add
add
add
xchg
add
add
add
add
add
add
dec
add
add
add
add
xor
push
sub
inc
pop
mov
push
stos
mov
int3
adc
lea
and
sbb
hlt
dec
es
loope
test
jbe
inc
push
test
fistl
popa
out
pop
je
push
cltd
jg
push
ret
sub
cmp
xor
loopne
ret
add
lods
int
gs
stos
fsubrs
add
mov
cwtl
daa
adc
fstps
xor
fidivrs
jnp
movsb
fistl
fidivl
jne
mov
cmc
out
iret
mov
cmpsb
jmp
jp
insb
sub
pop
push
pop
lret
leave
xchg
daa
pop
xor
dec
idivl
loopne,pn
inc
and
lcall
pop
mov
dec
ret
nop
fiadds
scas
pop
sub
lret
mov
cmp
xor
lock
jbe
mov
xchg
loope
inc
jle
sub
insl
hlt
inc
in
jg
xlat
add
cmp
add
ljmp
jb
std
aaa
popa
fdivl
mov
mov
inc
pop
ljmp
adc
lret
int
push
movsl
stos
jecxz
addr16
dec
xchg
push
dec
ljmp
mov
roll
pop
in
sahf
cmp
xor
sbb
stos
xor
mov
pop
negl
insb
jo
insl
jb
push
in
shll
adc
popa
fists
loope
iret
insb
push
lcall
and
push
inc
cmp
imul
cmp
mov
add
fistl
xlat
and
stos
and
daa
lret
rolb
sbb
mov
sbb
dec
add
gs
test
or
mov
movsb
inc
fucom
jns
push
jle
or
sub
mov
fadd
xchg
outsl
fisubrs
push
mov
sbb
mov
stc
mov
sub
xor
outsl
icebp
mov
mov
mov
adc
loop
fldenv
add
es
or
mov
fwait
push
jae
mov
mov
in
aaa
cmp
sbb
adc
mov
xchg
or
jmp
sub
cmp
mov
rcrl
sbb
push
shrb
push
jo
das
lea
jbe
decb
and
hlt
dec
and
mov
scas
push
ja
pop
lret
xor
shll
jge
add
jg
popf
mov
dec
mov
pop
rcl
lock
adc
imul
jmp
mov
das
pop
mull
push
pop
mov
test
inc
add
addb
sbb
xchg
push
add
mov
jbe
mov
scas
outsl
xor
push
aas
sub
xchg
pop
pusha
test
mov
int3
fwait
push
add
add
add
rolb
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
repnz
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
repnz
fdiv
add
aam
add
int3
repnz
repnz
mov
repnz
lods
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
insb
hlt
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
mov
hlt
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
testb
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
testb
mov
testb
lods
testb
movsb
testb
pushf
testb
xchg
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
testb
cld
testb
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
shl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
clc
add
dec
clc
add
push
clc
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
clc
add
lods
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
