jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
test
lahf
aad
lock
nop
mov
add
add
add
push
pop
add
je
or
or
add
add
lcall
add
int3
add
add
lods
add
inc
add
add
add
add
add
pop
add
add
add
add
or
add
or
cmp
outsb
add
pop
add
ja
je
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
scas
add
add
cltd
add
add
pusha
add
inc
add
add
add
add
add
scas
add
add
adc
or
pop
add
popf
add
loope
scas
add
adc
aas
add
add
add
add
scas
add
add
add
add
add
add
or
scas
add
add
add
lods
add
add
add
or
test
ss
add
pushf
add
add
add
add
add
xor
or
pop
add
incl
sbb
fwait
add
add
add
add
or
cmp
add
add
add
add
add
add
add
add
push
add
inc
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
pushf
add
add
add
pop
add
clc
add
aad
and
add
add
add
addl
add
clc
add
add
add
pushf
add
add
or
sbb
push
add
stc
add
add
leave
add
lret
add
add
or
add
pop
add
cmp
add
or
test
inc
add
add
add
add
add
add
inc
add
add
add
pop
add
add
xchg
add
add
add
aad
test
test
push
add
add
add
add
add
add
add
pop
add
jne
or
pop
add
add
add
fwait
add
add
add
add
add
inc
add
add
add
add
add
je
pop
add
add
add
add
push
add
add
add
add
mov
add
add
add
daa
add
add
add
add
add
add
add
push
add
add
add
add
inc
add
push
add
or
sub
fildl
sub
xlat
add
add
jns
mov
add
add
add
add
pop
add
add
and
or
fildl
cmp
add
add
add
push
add
je
pop
add
add
add
add
add
roll
push
add
cmp
adc
or
jns
cmp
adc
je
fwait
add
add
add
add
add
add
add
jle
xchg
add
add
add
add
add
ret
add
stc
add
add
js
insl
add
add
lods
add
add
add
add
mov
add
add
add
mov
cmp
outsb
add
add
add
mov
add
add
inc
add
add
add
add
add
or
push
add
add
add
add
outsl
add
add
cld
add
add
add
adc
pop
add
cld
add
sub
cld
add
add
rorb
mov
mov
xchg
test
sbb
inc
or
fldt
adc
je
mov
and
push
mov
add
adc
adc
xor
repnz
lahf
xor
mov
shlb
mov
and
lods
inc
cmpsb
xlat
pushw
jae
push
xchg
repnz
sub
jmp
idivb
pop
jmp
and
dec
pop
pop
outsl
or
idivl
xchg
call
out
cmp
shl
insl
insl
push
hlt
lock
xor
xor
sub
sahf
mov
mov
adc
sbb
jno
mov
sbbl
ds
test
sbb
push
mov
add
jne
nop
scas
or
xlat
sub
rolb
jo
dec
mov
dec
or
xor
pop
ret
add
add
leave
pop
lret
jecxz
ljmp
adc
and
leave
scas
ret
popa
testl
inc
push
push
sbb
mov
xor
sbb
lods
and
lods
dec
sub
pop
add
jno
fcomps
gs
sbbb
rol
push
ljmp
cmp
shr
loope
pushf
and
sbb
lods
mov
addr16
rcrl
mov
loop
movsl
movsl
sbb
les
or
shlb
or
sbb
push
in
mov
jne
test
mov
push
jge
cs
cwtl
lods
xchg
push
sti
jmp
movsb
mov
mov
cmpsl
inc
mov
stos
jo
xchg
pusha
movsl
mov
sbb
push
push
ret
mov
aam
dec
ljmp
mul
dec
repnz
rclb
or
mov
jns,pn
jge
jbe
lods
in
or
dec
or
add
lcall
sbb
cmp
xor
lea
mov
ss
jo
jns
movsl
mov
cmc
inc
hlt
subb
gs
xchg
dec
jns
inc
push
mov
and
pop
imul
and
or
push
sub
pushf
xchg
inc
sahf
add
cmp
cli
jns
stc
pop
push
pop
pop
add
mov
and
pop
clc
std
fisttpl
cli
inc
test
fidivrl
or
into
push
repz
push
xlat
and
or
cs
movsl
int3
jb
sbb
cmpsb
lock
dec
mov
andb
lds
lahf
xlat
adc
hlt
aad
xor
mov
and
aad
testb
mov
das
loop
pop
add
fld
int
push
sbb
xchg
mov
adc
jecxz
pop
out
nop
cwtl
adc
pop
xchg
test
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
hlt
add
push
xor
or
in
hlt
lahf
lds
mov
xchg
cmc
xchg
cmc
fs
push
xor
add
adc
in
hlt
xchg
movsl
movsb
aam
movsb
mov
xchg
cmc
fs
push
xor
add
adc
in
hlt
mov
shlb
movsb
cmp
adc
je
or
push
scas
call
jmp
jo
push
imull
incb
mov
xor
adc
fmuls
xchg
or
pop
pop
mov
mov
movsb
loope
jne
dec
divl
fwait
mov
movsb
xchg
xchg
mov
je
pop
push
je
xor
push
in
adc
hlt
jns
push
arpl
inc
aad
xor
cltd
lds
cmp
into
cmp
add
adc
mov
adcb
lds
lea
pushf
pop
je
into
fwait
sarl
cld
out
sar
sbb
pop
dec
rcl
mov
test
xchg
or
add
push
xor
add
adc
in
hlt
xchg
les
mov
test
xchg
mov
add
sbb
push
and
jno
mov
inc
mov
mov
xchg
jmp
imul
push
inc
push
push
adc
insb
pop
mov
cltd
out
ret
out
mov
mov
daa
inc
je
gs
push
add
adc
in
hlt
xchg
les
mov
test
xchg
cmc
fs
push
xor
add
adc
in
hlt
xchg
les
mov
test
xchg
cmc
fs
push
repnz
mov
cli
loopne
sti
sbbl
push
dec
mov
jne
in
movsb
jae,pt
mov
insl
stos
xchg
lcall
repz
add
pop
fimuls
jmp
add
cltd
sub
aaa
shlb
daa
in
lahf
dec
imul
arpl
mov
jae
cmp
mov
jno
arpl
or
and
xor
xchg
ds
mov
aad
lds
sbb
ja
shll
cltd
imul
dec
adc
mov
movsl
cld
stos
roll
cmp
fnstsw
cmp
iret
xor
sub
icebp
imul
and
mov
fs
cmpl
sar
cmp
out
push
add
popa
lock
arpl
inc
stos
hlt
ja
add
lds
cmp
lahf
cmp
enter
push
sub
jns
es
cltd
aam
gs
rcll
jae
fdivrl
jecxz
js
or
ret
enter
fstpt
cmp
cmpl
lea
push
subl
imul
nop
xchg
push
xchg
push
adc
add
jecxz
imul
jge
inc
lahf
dec
test
or
push
xor
sbbl
int
jl
cmpsb
sub
sbb
imul
in
mov
pop
mov
fsubrs
mov
rcrl
push
cmp
aad
aam
pop
mov
cltd
jbe
stc
movsb
lods
mov
fldenv
sbb
and
pop
cmc
jno
dec
or
cmp
mov
arpl
jl
data16
out
daa
in
jbe
testl
jne
scas
dec
xchg
jae
adc
sbb
mov
mov
pop
out
aas
scas
mov
rol
pop
xor
daa
clc
cmc
push
mov
mov
pusha
scas
dec
daa
push
and
and
inc
xor
xor
dec
push
sub
popf
out
sub
mov
inc
push
cmp
jp
fs
add
or
jge
inc
sub
push
out
lcall
mov
pop
dec
mov
cmp
loope
fstpl
in
mov
fcoml
mov
push
lock
scas
inc
xor
cmp
stc
js
jmp
sti
std
mov
sbb
sahf
push
xchg
inc
inc
and
jge
jle
dec
idivl
outsl
pop
xchg
jg
shlb
xchg
pop
xchg
dec
mov
add
test
adc
push
mov
sub
mov
fidivl
push
mov
gs
popa
fdivrp
xchg
loop
into
nop
jmp
pop
mov
out
cltd
into
add
int
sub
jp
loop
ja
into
mov
ljmp
mov
xlat
out
lods
std
fincstp
mov
or
scas
adc
in
jg
jmp
mov
das
push
mov
out
sar
xchg
daa
pop
ret
call
icebp
int3
movsl
or
push
mov
mov
xor
dec
out
or
cld
movsb
dec
fisubrl
sub
fidivs
fisubrl
cmp
jmp
mov
lock
shl
push
xlat
xchg
cmp
hlt
inc
fmull
stos
arpl
xchg
popf
jo
mov
cld
jp
arpl
xor
addr16
dec
inc
jns
push
push
pop
fstps
push
cmp
dec
push
lds
pop
add
pushl
cmpsb
jmp
pop
push
jmp
mov
iret
xchg
mov
call
into
out
mov
sbb
mov
lock
ret
xchg
add
mov
sbb
xlat
sbb
jno
ficomps
mov
addl
orb
mov
movsl
gs
fsubrl
cmpsb
insl
lret
mov
aam
push
jnp
cmp
push
mov
lods
ret
cwtl
add
mov
daa
faddl
mov
inc
push
add
rcrb
or
jae
xchg
jns
dec
lds
in
push
test
sub
in
aaa
test
jo,pt
lcall
sub
mov
shll
push
sub
xchg
scas
jecxz
xor
mov
xchg
cwtl
out
xchg
dec
and
jb
or
mov
movsl
mov
xor
jle
dec
rcrl
fistl
jp
int3
sub
inc
xor
mov
or
pop
ds
lods
adc
out
fstpl
mov
xchg
jb
push
cmp
push
fnsave
pop
in
test
jecxz
ror
loopne
popa
daa
fyl2x
cltd
nop
sbbl
loopne
jbe
xor
cmp
xchg
ret
jo
sub
scas
ffree
enter
addr16
repz
dec
sub
ljmp
pushf
andl
movsl
loopne
mov
loope
xlat
cmp
stos
pop
pop
loop
call
sub
dec
mov
push
xor
mov
fstps
in
les
push
loopne
sbb
and
xor
cli
mov
sub
fisttpl
dec
sub
repnz
adc
mov
adc
movsl
rcll
test
add
sti
stos
ljmp
sbbb
les
mov
sub
mov
int
mov
mov
adc
xor
in
inc
sbb
cmp
test
mov
lret
dec
inc
pop
push
mov
add
pop
fmuls
repnz
insb
stos
dec
adc
cmp
dec
movsl
insl
jno
adc
mov
loope
aas
sub
pop
jns
xor
sbb
jmp
sub
mov
mov
adc
dec
mov
or
nop
mov
push
push
dec
test
cmp
sarl
push
out
and
pop
scas
adc
sbb
rcl
jg
lret
add
clc
int
jnp
dec
jmp
push
lret
mov
lcall
mov
lods
js
mov
mov
pop
jg
sub
xchg
dec
push
sub
gs
xor
fcoms
outsb
ss
and
js,pt
mov
nop
adc
icebp
cmp
lea
mov
sub
in
hlt
das
je
xlat
and
push
jecxz
addl
pushf
ja
xor
dec
mov
pop
and
jbe
or
mov
jecxz
ret
jmp
das
dec
xchg
pop
test
pop
bound
outsl
jmp
and
ficompl
push
imul
add
push
loopne
inc
dec
mov
rcll
mov
cwtl
out
xchg
xor
add
outsb
sbb
pop
sub
arpl
dec
mov
data16
or
cmp
mov
lcall
pop
pop
rclb
les
and
add
ret
loopne
xchg
enter
push
out
dec
jecxz
daa
outsb
lea
int
xchg
push
cmc
aam
push
adc
pop
stc
sub
jg
jl
mov
xor
cmp
aam
int3
movsl
aam
mov
mov
lds
enter
push
sub
jbe
out
push
push
sub
sub
hlt
pop
int
pop
test
aad
xchg
rclb
roll
push
sbb
les
hlt
leave
jns
out
outsb
push
es
mov
sbb
jecxz
fcmovb
loop
or
push
adc
add
inc
cwtl
loopne
lret
adc
push
or
ret
loope
test
jl
dec
adc
jmp
and
daa
and
std
scas
outsb
pop
divb
adc
iret
push
repnz
lods
xor
pop
dec
push
fstl
fwait
not
xor
fwait
adc
and
add
mov
test
aas
adc
fnstenv
in
pusha
fxch
les
jnp
es
cmpsl
push
sub
imul
mov
push
xor
pop
xor
push
ret
xchg
xchg
aad
adc
push
imul
adc
pop
sub
add
fmuls
sub
mov
mov
arpl
xchg
add
push
pop
inc
scas
mov
insl
pop
insb
cmp
pop
xor
fadds
int3
push
sti
rclb
ret
out
shlb
sub
ret
in
pop
leave
enter
out
cs
xchg
movsb
and
std
out
sbb
in
jne
outsl
dec
add
and
jl
mov
mov
daa
rclb
mov
adc
repnz
rclb
arpl
push
add
shrb
out
sub
into
cld
cs
repnz
add
lret
jne
aam
sub
shrb
adc
cs
arpl
mov
jecxz
and
lahf
mov
clc
call
or
push
xor
stos
mov
mov
test
jg
loopne
bnd
mov
mov
aas
push
sbb
ret
or
popf
pop
or
dec
adc
mov
lahf
mov
fists
xchg
cmp
fstl
repnz
jge
xor
push
jnp
mov
imul
std
cmp
pop
jb
sti
cmp
sbb
in
in
mov
mov
lahf
sbb
or
shrl
ret
fisubs
sbb
js
mov
cli
sub
xlat
bound
out
cmp
in
lods
xchg
xchg
jae
mov
clc
sti
xor
test
inc
jbe
loope
and
ficomps
adc
adc
loopne
and
mov
xchg
test
loop
add
les
das
add
pop
mov
add
jno
adc
in
scas
xchg
sub
lods
insl
loope
out
sbb
jg
ss
dec
aam
lcall
adc
inc
popf
fmul
pusha
lahf
pop
push
pushf
lret
and
cmp
jmp
int
or
in
testb
outsb
mov
and
xor
mov
lret
lret
or
pop
jnp
add
adc
rorl
mov
jp
leave
imul
jns
pop
dec
lea
mov
xchg
insl
fstl
addb
nop
aaa
loope
mov
movsl
fnstcw
cmpsb
lock
ds
pop
cmovg
inc
push
pushf
inc
testb
int
insl
xchg
inc
imul
rorb
jp
xor
stos
lahf
sub
xchg
xor
repnz
mov
xchg
sub
push
sbb
imul
jne
jne
stos
jle
mov
mov
sbb
mov
dec
sti
rcrl
mov
jnp
cwtl
fwait
sub
stc
imul
push
jmp
mov
adc
mov
inc
cmpsb
add
popf
lret
jge
lds
popf
fcoml
pop
sub
sti
pop
push
lods
addl
push
nop
cs
mov
mov
idivl
aad
push
repnz
sub
insb
addb
leave
dec
rol
xor
dec
inc
dec
and
adcl
cmp
xor
addr16
cmp
xchg
or
cs
mov
arpl
jp
and
push
add
adc
pop
adc
scas
jno
idivb
cmpl
scas
inc
out
sub
xchg
mov
stos
mov
or
scas
jl
sahf
aaa
pop
stos
cwtl
pushf
sbb
mov
jo,pt
push
mov
mov
shrl
das
pushf
cmp
and
and
xor
test
cmpsb
mov
cli
mov
push
cmpsl
daa
jo
pop
stos
dec
xor
mov
pop
loopne
mov
inc
clc
pop
jge
jo
mov
xor
jno
xor
mov
jbe
or
sub
pop
push
iret
scas
add
popf
mov
hlt
and
pop
jecxz
dec
sarl
fisttpl
movl
in
hlt
mov
jae
jle
ficompl
repnz
and
test
sub
and
sub
gs
test
fadds
icebp
int
test
pop
sbb
sahf
pushf
inc
inc
outsb
add
pusha
mov
cmpsl
in
pop
std
lret
mov
inc
pop
push
mov
ror
xchg
xor
clc
fisubrl
sbb
int3
or
in
cmp
push
cmp
fistps
cmpsb
rclb
push
mov
jle
fdivl
or
jmp
es
clc
mov
add
pusha
jbe
les
outsl
addr16
mov
testb
sub
sbb
adc
cmpsl
movsb
inc
test
or
dec
daa
mov
xlat
mov
ds
pop
jmp
inc
pop
jne
mov
fs
mov
xor
xchg
aas
shrb
jge
jno
xor
mov
jo
or
push
cmp
pushl
roll
ljmp
mov
mov
adc
cs
out
loopne
mov
or
out
xor
dec
lcall
stos
inc
mov
jmp
dec
cli
sbb
adc
jae
or
aaa
xor
fsub
dec
filds
lret
loopne
cs
out
js
loope
lahf
or
scas
movsl
aaa
sbb
sbb
nop
cli
addr16
aas
js
mov
sbb
mov
pop
inc
movsl
xchg
mov
iret
mov
ret
add
xchg
arpl
daa
jp
pop
mov
neg
sub
push
and
leave
es
jl
fadds
inc
inc
sub
ljmp
jl
jno
mov
push
sbb
pop
cwtl
orb
push
mov
call
ss
pop
cmp
test
sar
jmp
ljmp
sbb
outsl
inc
push
mov
test
sub
imul
pop
into
mov
popw
and
add
movsl
inc
std
adc
les
inc
bound
and
push
es
movsl
jb
sub
lds
mov
xor
icebp
and
daa
pop
imull
fwait
or
mov
sub
jg
testb
popa
mov
dec
sbb
adc
sbb
rcrl
fsubl
cmpsl
adc
pop
pop
adc
mov
push
sub
loop
mov
dec
jb
cltd
in
dec
mov
push
out
xlat
push
fcmove
stos
inc
cmp
pop
jb
enter
std
fsubrs
adc
push
nop
mov
push
loop
xlat
fbstp
pop
scas
xlat
cmc
enter
fsubrs
or
stos
pop
mulb
mov
dec
mov
cli
pushf
add
test
jecxz
cltd
aad
cmp
xor
mov
xor
mov
in
cmp
xchg
cmc
xchg
xor
or
call
enter
shrb
stos
add
cmp
into
inc
les
cs
fmull
dec
fbstp
xchg
jl
pop
jg
sbb
fimull
push
lcall
mov
lret
lea
add
sbb
shlb
jmp
adc
mov
mov
jo
dec
push
add
hlt
push
xor
jns
mov
bound
stc
push
sub
xor
stc
shll
xchg
dec
jae
sti
mov
sbb
ret
adc
mov
addr16
add
hlt
jp
cmp
push
jno
int
gs
sahf
loop
or
sbb
xchg
mov
push
scas
arpl
movsb
mov
jne
jle
pop
add
dec
test
mov
clc
rcll
movl
mov
xor
mov
push
sub
cmp
add
out
push
add
dec
jge
pushf
push
or
xor
adc
sbb
jge
or
cmp
ret
jg
sti
xchg
out
lea
jecxz
scas
dec
int3
iret
xchg
push
and
jle
sub
or
scas
lea
mov
in
les
subb
push
idiv
lds
es
pop
setl
dec
cmpsb
jg
cmpsl
add
xor
sarl
rorb
imul
loop
stos
xor
inc
and
jg
or
arpl
addr16
lret
inc
jg
test
xor
adc
es
xor
ss
movsb
xchg
inc
mov
clc
cld
js
jge
jg
dec
or
rorl
addb
test
inc
xor
jmp
cmc
test
aaa
bound
stos
mov
xchg
cwtl
stos
vmovaps
pop
insb
imul
and
stos
and
push
sub
xchg
mov
nop
dec
sbb
inc
mov
out
add
mov
adc
test
cmp
xor
clc
jne
jmp
xchg
loopne
jae
pmulhw
pop
nop
and
repnz
lock
or
lock
dec
jecxz
jle
js
mov
inc
decb
test
cmp
out
mov
pop
mov
xchg
dec
push
add
sub
daa
jmp
rcll
push
sbb
push
mov
jg
sub
iret
push
jmp
imull
and
pop
out
jne
jmp
sbb
jge
dec
push
mov
mov
pop
mulb
out
test
test
inc
dec
push
mov
into
xor
inc
fistl
or
out
jl
sub
cltd
jl
decb
pop
push
sub
push
dec
les
lock
cwtl
or
mov
aaa
mov
or
adc
pop
jns
mov
push
imul
jp
test
fs
adc
mov
dec
icebp
cmp
cmpsl
pop
pop
add
outsb
shl
inc
stos
jecxz
mov
js
mov
scas
loopne
jmp
pop
jecxz
xchg
pop
inc
outsb
push
xchg
push
lock
and
js
stos
mov
clc
dec
leave
pop
es
or
leave
jp
test
xor
test
mov
adc
pop
call
mov
insl
push
and
or
das
cwtl
pop
mov
add
inc
pop
fimuls
icebp
and
ret
jecxz
jp
sbb
fldenv
cmp
push
mov
xchg
inc
jb
push
arpl
enter
sbb
ret
pop
inc
add
fwait
xlat
sbb
insb
mov
sahf
divl
into
push
xchg
gs
mov
adc
pop
sbb
dec
adc
cli
int
sub
dec
push
es
sahf
imul
push
dec
cltd
jmp
xchg
inc
outsl
fldl
ja
call
mov
fbstp
xchg
or
arpl
xor
mov
jecxz
or
cmc
sub
xor
push
add
es
mov
subl
orl
and
jo
out
xchg
cld
dec
icebp
out
test
cld
or
inc
hlt
inc
daa
mov
inc
jae
lea
mov
mov
sub
xchg
shl
cmp
mov
scas
sub
sbb
test
xchg
sahf
sahf
flds
sbb
mov
sbb
push
cmp
jge
jne
and
imul
ljmp
pop
in
insl
popa
lods
lahf
xlat
movsl
fidivs
cltd
mov
mov
pop
wrmsr
jge
out
popf
int
sti
fdivp
jns
cmpsb
ret
arpl
frstor
nop
xor
inc
aas
push
pop
lods
jmp
pop
stos
and
pop
push
adc
es
jns
mov
xlat
push
int
pusha
js
inc
shr
arpl
cwtl
sbb
and
jnp
fsub
push
sti
push
push
inc
inc
insb
repz
cmp
xchg
xchg
or
aas
cmpsb
std
or
xor
stos
js
xlat
push
xchg
add
pop
sub
out
ss
xchg
push
scas
cvtdq2ps
inc
int
dec
jo
sbb
dec
and
les
loopne
add
sub
sub
lcall
or
cmp
add
and
aam
fmull
cmp
cmpsl
cmc
addb
xchg
xor
enterw
adc
sub
jnp
lcall
sbb
sbb
pop
xor
mov
pop
ret
repz
bound
lcall
xor
xor
outsl
jnp
sub
cmc
sbb
stc
imul
sbb
fs
jp
xchg
call
xor
and
xchg
inc
fidivl
jbe
dec
xchg
sarl
mov
mov
rorb
pop
inc
push
call
sbb
test
repnz
loope
icebp
in
pushf
std
into
jmp
push
xchg
mov
data16
or
mov
lods
add
aaa
fldt
shlb
xchg
test
stc
shlb
cmpsl
cli
movb
scas
add
or
mov
iret
subl
repnz
imul
or
push
pusha
xor
in
cmp
sbb
icebp
in
dec
icebp
iret
inc
xchg
xor
push
call
call
cmp
cmp
in
jecxz
lahf
dec
mov
int3
aam
pop
mov
jecxz
sbb
inc
dec
xacquire
mov
mov
repnz
xor
out
mov
movsl
in
sub
fisubs
in
imul
pop
scas
push
push
pop
pop
icebp
nop
inc
jecxz
add
cmp
imul
sub
inc
ljmp
mov
lods
call
mov
scas
jb
mov
push
pop
adc
xchg
cli
pop
in
xchg
mov
lret
or
and
das
sub
xchg
cli
aam
sbb
pop
mov
mov
shll
ja
leave
and
jecxz
repz
adc
jno
sub
pushf
js
int3
add
xor
fisttpl
inc
cmp
push
dec
xor
leave
sahf
pusha
sbb
or
add
dec
fbstp
inc
mov
xchg
dec
imul
aas
jae
in
fldt
sbb
xchg
sbb
cmp
jmp
enter
inc
lock
and
and
and
stc
jg
mov
push
daa
fs
das
mov
jge
jg
jbe
sbb
xor
add
adc
in
hlt
xchg
les
mov
test
xchg
cmc
fs
push
xor
add
adc
in
hlt
xchg
les
mov
test
xchg
cmc
fs
push
xor
add
adc
in
hlt
xchg
les
mov
test
xchg
cmc
gs
push
xor
add
adc
in
hlt
aas
outsb
movsl
aam
rorl
sub
imul
stc
sub
leave
lret
add
push
dec
adc
pop
inc
cmp
sbb
stc
xchg
jmp
lds
cmc
std
push
jne
imul
dec
xor
sbb
pop
loopne
lock
jae
aad
popf
mov
orl
cmp
jbe
pop
adc
les
ret
jno
push
mov
mov
mov
mov
ret
sarb
xchg
leave
sub
data16
addl
les
jmp
test
dec
xor
inc
jns
imul
pushf
fcoms
shlb
lcall
testl
cmpsb
lret
add
mov
add
pop
es
cmp
fsubl
test
fisubl
push
cmp
push
xchg
popf
pop
and
inc
dec
xor
fscale
adc
add
xor
leave
and
gs
xchg
stc
movsl
rcr
lds
dec
nop
idivl
jno
inc
sub
and
add
or
stc
jecxz
loope
fldt
cmc
xchg
in
fs
push
imul
cmp
adc
test
jle
lods
mov
xchg
inc
cmp
dec
ss
xor
adc
jge
stc
cmpsb
jmp
orb
mov
pop
xor
sub
jne
test
xchg
jmp
lds
cmc
mov
pop
xor
sub
jne
test
push
cli
or
xor
leave
adc
orb
outsl
scas
mov
outsb
loope
dec
out
and
aaa
sub
xor
inc
dec
cmpsl
lods
ret
sarl
in
enter
ds
inc
dec
pop
mov
or
sub
xchg
adcb
inc
inc
jmp
inc
dec
in
jns
mov
lea
fstpl
and
negl
mov
rolb
jl
and
aas
ret
push
test
and
stos
mov
xchg
pop
mov
icebp
movsl
adc
fdivl
jmp
mov
push
notl
sar
mov
loopne
lds
and
mov
or
mov
add
popl
inc
add
xchg
pop
imul
out
data16
mov
mov
clc
push
dec
insb
push
xor
add
ja
test
inc
dec
mov
iret
and
xor
xchg
add
dec
pop
les
jg
jo
jg
mov
mov
cmp
xor
lahf
mov
aas
cs
call
cmp
lcall
cmpl
add
out
and
sub
cmp
pop
cs
nop
adc
je
push
xchg
cld
lea
and
xchg
fwait
inc
push
jne
lret
in
jb
mov
mov
inc
mov
addr16
xor
cmpsb
cmp
into
or
loopne
push
jle,pn
les
adc
mov
std
cli
xor
psadbw
add
mov
mov
cmpsl
pop
rorl
mov
xchg
cmp
pop
cmp
or
xor
stc
aas
mov
cmc
jno
aam
dec
insb
pop
xor
xchg
lods
xchg
call
rolb
jge
jmp
dec
dec
xor
and
or
jae
in
iret
add
xor
mov
xchg
push
mov
out
les
mov
dec
imul
push
ds
mov
jmp
jb
jo
add
mov
fidivs
pop
jno
pop
sbb
sbbl
imul
pusha
iret
mov
sub
aaa
int3
mov
xchg
aas
call
and
fisttpl
rcll
stos
push
pop
hlt
mov
push
or
xchg
dec
xchg
xlat
loop
loop
rcll
adc
mov
xor
outsl
mov
mov
pop
pop
mov
aas
das
popf
pop
dec
sbb
in
jae
subl
aam
lds
addl
or
ss
and
xchg
adc
clc
or
out
cmp
jae
test
popf
or
clc
sub
jbe
mov
inc
aad
test
pop
imulb
add
and
cmp
test
sbb
xor
push
stc
inc
test
cwtl
lret
inc
sbbl
pop
rcl
test
mov
arpl
and
ljmp
and
jo
loop
mov
sub
push
rcr
icebp
jae
xor
jl
xchg
dec
adc
out
rcll
xor
scas
gs
sbb
jne
pop
in
mov
adc
roll
movsl
fdivp
aas
lds
push
push
imulb
cmpsb
cli
push
pusha
outsl
cli
add
fcmove
int
lret
test
mov
ficomps
add
lods
cmp
and
mov
fstpt
dec
stc
add
fsubrs
xchg
dec
fwait
sbb
jo
insb
or
xor
clc
jmp
push
sbb
inc
xchg
insl
inc
and
iret
cs
icebp
test
stos
push
cmpsl
sub
popf
add
imul
push
hlt
pop
mov
cmp
call
popa
bound
mov
insl
or
mov
ja
loopne
fcompl
enter
inc
in
sahf
mov
pop
je
cwtl
push
out
sbb
mov
push
mov
ret
dec
fists
out
jno
add
mov
jae
mov
gs
cmpsl
cli
jnp
fidivl
out
mov
inc
ja
call
cmp
sbb
shll
sbb
addr16
test
push
pop
mov
cmp
xchg
pop
mov
xor
inc
or
xchg
stc
aaa
mov
mov
sub
int
fisubl
mov
je
sbb
push
mov
popf
push
pop
dec
mov
icebp
mov
inc
cli
mov
dec
imul
dec
mov
nop
mov
and
pop
hlt
jns
js
mov
mov
andl
test
mov
popa
imul
sub
arpl
xor
popf
fs
popa
mov
cmpsb
mov
cld
inc
aas
mov
mov
mov
pop
addr16
aad
into
xchg
push
adc
mov
jmp
sbb
xor
icebp
xor
xor
test
mov
ss
sub
inc
mov
iret
add
xor
mov
imul
or
push
gs
ret
xorb
push
cmp
jle
sbb
sub
mov
lahf
out
rclb
inc
sub
rcrl
rcrl
jle
sbb
loope
ja
cs
push
stos
and
sub
stc
xor
nop
or
push
adc
ret
xchg
in
push
and
pushf
fcmovnb
push
mov
mov
xor
adc
subb
iret
or
lods
addr16
movsl
cmpl
cli
jne
mov
add
adc
repz
xchg
cld
dec
or
movsb
push
jnp
mov
xchg
cmpsl
les
imul
pop
mov
mov
aas
add
cltd
out
adc
imul
dec
cmpsb
add
and
xchg
test
loop
and
test
sub
movsb
or
data16
jo
and
cmp
pushf
and
jge
insl
inc
xlat
xchg
dec
add
shrl
jne
pop
rcl
into
addr16
mov
ss
jge
pop
gs
adc
cmpsb
xor
xchg
out
and
leave
ret
pop
out
dec
jb
stos
jmp
jns
idivb
popf
ret
jl
in
aas
andl
in
rcl
int3
iret
pop
push
dec
testb
push
and
and
jp
inc
ret
js
add
lods
gs
or
inc
mov
cld
and
cmpsl
hlt
add
lret
loope
push
pop
mov
adc
in
pop
repz
fistpl
jl
push
adc
mov
arpl
mov
cmp
fistl
cli
xor
dec
jle
ja
mov
xchg
ja
sbb
cs
mov
es
xor
inc
fildl
inc
jmp
sub
cmc
rclb
outsb
sbb
mov
and
and
mov
cs
lahf
lcall
sub
and
cmc
sub
rcr
std
cmp
and
cmp
mov
cmp
insl
insl
mov
mov
jns
and
enter
cmc
mov
sbb
fistpll
xchg
hlt
mov
adc
sub
mov
xchg
pop
push
idivb
mov
cmp
dec
xor
pop
in
jle,pt
mov
movsb
icebp
mov
sub
add
mov
outsl
fcomi
mov
pop
xor
dec
fildll
lods
push
daa
push
cmp
push
stc
xchg
inc
les
out
sub
mov
jns
dec
mov
xchg
pop
push
ljmp
mov
lock
cs
mov
scas
mov
or
sti
or
pop
jo
jne
and
inc
rcrl
adc
push
fsqrt
aad
shlb
icebp
push
jl
jp
and
aam
es
jnp
and
aas
or
mov
dec
xchg
jbe
rcrl
adc
sub
test
fmull
adc
neg
lahf
push
es
mulb
mov
into
sbb
jecxz
lret
cltd
cmpsl
cmpsb
pop
insl
ret
push
mov
into
aas
das
sub
daa
mov
ficoms
shrl
jne
jg
or
imul
aad
rcr
shll
ret
adc
fildl
out
gs
pop
xchg
sbb
idivl
mov
mov
push
mov
lock
jg
mull
inc
xor
aas
xor
jne
xor
adc
loop
sbb
repnz
mov
das
inc
and
mov
mov
test
dec
adc
daa
mov
fs
dec
dec
int3
pop
pop
mov
gs
cmp
push
stos
adc
sbb
sub
mov
xor
lock
cmp
rol
mov
insb
mov
insb
pop
pop
mov
and
inc
jge
push
insl
int3
shll
jp
cmpsl
and
mov
loope
push
out
add
shll
enter
mov
in
imul
or
repnz
add
cmp
mov
fisttps
ret
xlat
jnp
fcomps
ja
mov
push
mov
inc
adc
xchg
addr16
push
xchg
je
or
sub
add
or
sbb
xlat
cmp
xchg
daa
xor
iret
insb
add
cmp
scas
add
xchg
js
or
iret
stos
mov
mov
out
sbb
pop
pop
andl
sub
aam
mov
mov
xor
dec
mov
inc
icebp
mov
sbb
les
sbb
cmp
idivl
fsubrl
mov
popf
dec
ljmp
test
dec
cmp
test
stos
jo
ficomps
imul
xor
jbe
in
insb
inc
mov
mov
mov
rcrb
push
ret
push
pop
mov
outsl
imul
mov
mov
mov
xchg
jo
testl
cmpsl
push
push
lds
mov
daa
mov
or
in
gs
test
adc
pop
xor
xlat
push
add
dec
sbb
cmp
sarl
fwait
adc
enter
pusha
mov
movsb
ret
imul
fnstsw
sahf
lods
fisubrs
lods
and
jp
pop
jns
mov
iret
bound
cwtl
test
dec
sbb
push
push
sbb
pop
lahf
jp
jecxz
ss
clc
push
out
pop
push
mov
mov
lcall
jns
ret
test
lcall
pop
and
push
push
lret
andl
xchg
sahf
adcb
mov
in
popa
adc
fstps
js
inc
cmp
ret
fistl
call
cli
xchg
int
sbb
xorl
adc
mov
jge
insb
ret
or
mov
sbb
insb
ja
push
pop
add
jns
gs
adc
arpl
das
dec
xlat
scas
sahf
cmp
or
jnp
sti
sahf
dec
cmp
mov
decb
inc
insl
adc
test
bound
gs
stc
cld
cmp
jl
adc
sub
push
adc
or
mov
cmpsl
imul
jg
scas
inc
push
jb
divl
shrb
push
mov
mov
push
push
sub
imul
sbb
push
test
dec
sbb
sub
repz
pop
mov
rcl
or
adc
sti
xchg
mov
leave
adc
repnz
repz
pop
xor
pop
fisubs
sbb
mov
inc
sbb
adc
sahf
subb
mov
and
xchg
dec
jmp
pusha
dec
inc
shlb
lods
jmp
pop
sbb
movsb
hlt
sbb
cmp
mov
dec
and
enter
inc
lods
popa
popf
lret
leave
jmp
sub
dec
pop
add
fsubrp
sub
sbb
mov
js
movsl
inc
add
in
testl
push
test
sub
mov
call
sbb
mov
stc
mov
mov
cmc
or
jle
aaa
push
xchg
pop
push
stos
nopl
test
movsb
jne
xchg
xor
jle
mov
and
sub
cmc
mov
pop
xor
add
shlb
addb
adc
rorl
pop
push
cmp
iret
les
add
shll
inc
daa
dec
inc
in
aam
idivl
std
out
xchg
repnz
cli
sub
lock
adc
in
fdivr
push
fists
test
addr16
or
add
adc
stc
dec
loopne
pop
and
lret
clc
shrl
lret
mov
add
mov
stos
inc
imul
xor
dec
cmp
ljmp
movsb
sti
sar
hlt
cmp
jecxz
mov
imul
popf
pop
fs
push
xchg
add
xor
les
xor
inc
sub
inc
push
out
gs
xor
scas
push
dec
jbe
ret
std
push
cmp
mov
inc
ljmp
icebp
shl
or
fsubs
nop
in
imul
movb
ss
mov
xor
xchg
dec
aad
js
sti
mov
sbb
test
cld
imul
lds
sbb
outsb
in
subb
mov
and
bswap
pop
or
push
inc
add
jbe
push
fstpl
push
imul
pop
push
movsl
jne
mov
add
pusha
mov
iret
stos
and
sbb
fs
out
inc
add
sub
std
das
push
not
jecxz
jmp
fistps
hlt
mov
dec
pop
push
imul
xchg
mov
gs
outsl
mov
movsb
lds
jo
roll
in
icebp
loop
mov
push
test
fiadds
xor
cmpsb
clc
pop
test
movsl
dec
inc
adc
clc
pop
dec
fnstcw
stc
mov
sahf
in
pop
ljmp
xchg
xchg
mov
aad
fcoml
dec
fcmovu
loope
pop
mov
cmpsl
jbe
testb
lret
test
or
mov
jmp
push
stos
mov
call
or
jmp
adc
push
fbld
xchg
inc
mov
pop
push
notb
jl
gs
mov
dec
aas
pop
stos
idiv
pushf
xchg
inc
outsl
cmp
test
subb
test
int
dec
and
mov
mov
out
mov
add
fmulp
loope
mov
pop
push
lds
mov
test
sbb
mov
pop
xchg
xchg
pop
sub
xchg
adc
js
loop
lds
pusha
addr16
loope
fwait
push
repnz
adcl
inc
jp
or
or
lods
xlat
jg
gs
cltd
popa
or
adc
and
pop
data16
jmp
xchg
cmp
gs
push
push
xchg
stc
adc
test
pop
cmp
addr16
cmpsl
inc
push
add
into
mov
idivl
or
lock
ret
xchg
push
aas
pop
iret
push
add
and
xchg
stc
push
in
repnz
mov
mov
lret
xor
hlt
mov
jp
fbld
sbb
add
xor
shlb
xchg
movsl
jg
and
imul
mov
leave
loopne
jb
push
and
out
dec
mov
shlb
jnp
fidivrs
sahf
stc
sti
xchg
jo
push
push
pop
sbb
test
test
sub
mov
xor
mov
mov
cs
ror
fdivl
mov
lods
scas
xor
mov
mov
das
sarb
xchg
stos
mov
into
adc
out
shlb
aas
pop
frstor
shlb
and
inc
and
icebp
mov
test
and
in
add
or
sbbb
and
mov
and
in
inc
sub
push
xchg
movsl
mov
pop
pop
mov
insl
in
pop
mov
ffreep
jnp
cld
xchg
inc
dec
fs
and
cmpsb
daa
cwtl
or
leave
lcall
fdivs
add
test
xchg
sbb
sub
in
cmp
cmp
ret
jb
inc
scas
push
adc
aas
stos
inc
in
xchg
lds
xchg
cwtl
jns
jbe
add
das
imul
rorb
test
adc
sbb
dec
jae
movsl
dec
inc
or
cmp
scas
lahf
inc
mov
in
inc
xor
pop
cmpsl
xchg
mov
push
add
dec
mov
adc
mov
cld
push
jbe
xchg
push
inc
jb
ds
pop
lcall
fdivrl
rcl
dec
cmpsl
jne
inc
repnz
lea
cs
push
in
mov
mov
fcoml
or
mov
mov
data16
inc
stos
lds
movsb
jmp
lea
fucomip
push
add
inc
loopne
movsl
js
daa
rclb
imul
into
sub
push
dec
sub
imul
in
add
movsl
push
or
ret
ljmp
push
lcall
xchg
cltd
or
outsb
xchg
ja
pop
fsubrp
add
sbb
push
inc
jmp
adc
xchg
shll
dec
cmp
inc
fwait
mov
fcoml
testb
bound
mov
lds
pop
mov
jne
test
leave
sti
adc
stos
pop
cmp
ret
xchg
cs
int3
in
inc
fistpl
ja
sub
dec
jae
push
popa
in
inc
adc
pop
xor
stos
add
pop
cmp
mov
cmp
and
daa
xor
mov
cmp
popf
std
mov
and
and
iret
fistpl
pop
orl
pop
cwtl
mov
nop
repnz
inc
adc
adc
or
dec
fadds
xchg
add
dec
ret
popa
mov
out
pop
sbb
mov
enter
lahf
jae
adc
and
push
pop
addr16
flds
jns
jecxz
xchg
in
ja
mov
push
jmp
in
pop
add
ss
lods
sbb
pop
dec
lock
cmp
dec
sub
cli
scas
xchg
lret
and
negb
and
aas
fadd
in
in
add
cmp
mov
les
xorb
rclb
sbb
dec
scas
icebp
in
and
lcall
sbb
dec
jne
aas
push
and
cwtl
test
rorb
test
arpl
je
aam
pop
inc
dec
movsl
cld
xor
mov
lods
sbb
xor
jnp
arpl
mov
or
push
movsb
push
ljmp
pop
dec
cwtl
push
mov
test
sub
bound
jb
cmpl
ficomps
in
es
insl
adc
imul
jge
cmpsl
fistps
or
in
sub
or
in
push
adc
cmp
mov
add
in
leave
ljmp
lock
jb
lods
mov
ss
das
in
pop
enter
scas
push
push
test
pop
add
fldz
xchg
cs
sbb
pop
lret
or
enter
sbb
imul
mov
inc
int
pop
jb
mov
xchg
addr16
icebp
jp
adcb
sbb
mov
out
cli
push
sbb
popf
orl
add
push
pop
pop
push
ja
xchg
jge
mov
dec
mov
mov
test
push
mov
inc
aam
sbb
pop
pop
jae
mov
aad
mov
push
xchg
or
into
xchg
call
ret
testl
push
mov
cltd
sbb
push
add
pushf
hlt
enter
and
insl
cmpsb
mov
arpl
dec
push
pop
mov
cmpsl
addl
push
sbb
jb
mov
mov
or
xchg
mov
jno
andb
adc
lock
out
mov
inc
aaa
lea
xchg
insb
mov
jb
sbb
testl
add
int3
mov
enter
loope
dec
ss
push
loop
sbb
lcall
mov
cmpsl
mov
cwtl
inc
lock
or
pop
mulb
cs
aas
ret
pop
and
mov
arpl
sbb
addr16
lods
jl
aad
mov
inc
aam
xor
inc
movsl
incb
mov
mov
lret
adc
add
bound
outsl
mov
or
shl
loope
inc
mov
orl
fwait
mov
mov
inc
xor
inc
movsl
jp
repnz
mov
aas
adc
mov
pop
mov
jns
xorb
inc
shl
outsb
lret
stc
movsl
xor
sbb
out
sbb
mov
sbb
sub
neg
mov
mov
mov
push
aas
jns
movl
les
sub
insl
cmp
stos
pushf
aam
and
and
sbb
decb
and
or
out
inc
movsb
int
iret
pop
mov
outsl
mov
shll
pop
sbb
xor
es
push
out
cmp
ljmp
cld
ss
sbb
xor
lret
in
mov
sub
pop
das
jb
push
arpl
lods
out
add
jmp
call
fldcw
test
add
pop
xor
sub
jne
test
xchg
jmp
lds
cmc
mov
pop
xor
sub
jne
test
xchg
jmp
les
hlt
mov
jns
imul
dec
sub
inc
or
sub
mov
jne
add
pop
xor
push
lcall
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
cltd
mov
mov
mov
in
sbb
or
cmp
sub
pop
dec
dec
mov
push
mov
fxch
leave
fdivr
call
or
cmp
sub
pop
dec
pop
jns
imul
xor
nop
stc
loop
lret
sub
dec
dec
dec
dec
pop
sbb
cmp
add
sti
rcr
sahf
and
imul
andl
xor
rcl
nop
ret
xchg
xor
jbe
inc
fcoml
push
add
testl
das
jecxz
xor
shl
loopne
mov
and
sbb
or
sub
cli
mov
scas
cwtl
jp
scas
mov
mov
lea
or
aad
xchg
loop
lret
gs
push
inc
es
jmp
add
sub
dec
mov
mov
dec
xchg
imul
sbb
push
pop
cwtl
stc
stc
pop
pop
dec
dec
leave
incb
mov
test
pop
add
mov
fxch
leave
fdivr
call
or
pop
je
mov
jo
dec
cld
mov
idiv
out
aam
insl
cmpsb
mov
popf
insl
mov
dec
lea
invd
aaa
sbb
sbb
out
into
std
fucomi
aam
lcall
imul
inc
jp
or
or
mov
int3
aam
test
fdivr
call
or
cmp
sub
pop
dec
dec
pop
jns
imul
test
mov
stc
call
or
cmp
sub
pop
dec
dec
pop
jns
imul
aad
push
or
pop
xchg
xor
cmp
out
jecxz
cmovne
enter
mov
jo
dec
in
pop
pop
mov
imul
push
sub
and
mov
xchg
jb
jae
pop
pop
dec
repnz
dec
mov
cwtl
in
in
jg
ss
lahf
xor
ja
int3
sbb
pop
push
out
mov
shll
mov
ds
inc
mov
or
jns
inc
xchg
ds
pusha
fcomip
cmp
in
in
stos
call
mov
pop
bound
jp
cmp
nop
push
sub
xor
cs
lock
xchg
sti
mov
lock
or
gs
mov
nop
inc
pop
ljmp
in
iret
adc
pop
test
cmc
jge
in
push
iret
cmp
cltd
push
std
mov
cmp
imul
mov
sbb
bswap
inc
lret
rcrl
jne
data16
in
push
shlb
sub
aas
mov
jne
test
addl
repz
inc
and
xchg
pop
ret
fnsave
xchg
jbe
mov
push
mov
sbbb
sub
sti
test
add
cwtl
les
int3
loope
cmp
jg
adc
stos
mov
call
outsl
mov
es
mov
jl
sub
dec
fdivl
sub
sti
adc
mov
jecxz
inc
jo
xchg
jbe
insl
xchg
xor
lret
mov
xchg
push
popa
cmp
enter
sub
sti
aas
or
cmp
adc
pop
sbb
out
mov
jecxz
jle
adc
pop
ljmp
cmp
mov
stos
insl
cmpl
and
jle
mov
clc
lahf
dec
fnstcw
xchg
fcomp
push
rclb
inc
out
loope
or
sbbl
pop
loopne
data16
push
dec
dec
lret
mov
in
mov
adc
outsb
sahf
mov
cmc
loopne
mov
rcrl
stos
test
insl
int3
aam
inc
sti
adc
sbb
or
ret
gs
adc
out
push
fwait
push
ja
jnp
shlb
jo
std
imul
repz
xchg
and
pop
imul
push
mov
xor
mov
lret
xchg
test
cmc
sti
pop
imul
and
cld
jb
nop
rcll
mov
fwait
stos
inc
pop
push
lret
xchg
add
fstpt
addl
mov
adcb
or
mov
lods
lds
or
fcmovu
cmc
sub
out
cmp
inc
xor
xor
inc
lea
and
das
call
out
sbb
and
push
test
sub
adc
fwait
cltd
jmp
cmpsl
mov
pop
lret
sub
ret
fs
mov
fimuls
loopne
adc
xchg
ljmp
add
or
xchg
leave
xor
add
aaa
arpl
jb
adc
or
or
ds
inc
pop
jno
cmp
and
lret
push
frstor
jno
mov
sbb
test
loopne
call
pop
sahf
bound
xor
outsl
push
sahf
pop
insb
lret
jl
repnz
jge
lods
int3
mov
rcrb
mov
mov
mov
sub
jb
fcoms
js
bound
mov
mov
test
aas
scas
fmul
rolb
dec
inc
scas
xlat
inc
ret
xor
aad
lret
cmp
clc
iret
sbb
jo
lret
xor
cmp
outsl
sarl
ret
loop
jmp
cmp
and
jl
pop
ret
cmp
lds
scas
push
jne
data16
mov
jae
dec
cmp
insb
jge
outsb
cmpsb
xor
xlat
add
sub
add
xchg
lods
mov
cld
mov
mov
sbb
jns
pop
lcall
cmp
xchg
mov
cmp
scas
sbb
inc
push
js
dec
xchg
pop
mov
sub
xchg
or
orb
rol
push
push
repz
ds
and
or
test
mov
xor
pop
or
cmp
sub
getsec
repnz
frstor
cmp
jno
mov
stos
lret
cmc
int
ja
or
sbb
xor
test
and
fnstsw
mov
loope
xchg
xor
pop
lods
adc
fnsave
mov
das
dec
pop
adc
jl
cmp
add
mov
cmpsb
ret
popa
xchg
sub
lret
aas
and
in
add
mov
push
jnp
pop
stc
fwait
test
pop
loopne
push
mov
xor
adc
jecxz
sub
ljmp
mov
cli
wbinvd
movsb
pop
in
ljmp
int
es
pop
xchg
sub
mov
sub
and
mov
lret
mov
ds
jmp
jo
pop
mov
aad
cmpsl
push
mov
lods
or
fsubl
sbbl
es
mov
movsl
imul
jne
mov
imull
out
jb
xlat
dec
fisttpll
and
mov
repnz
mov
cmp
leave
and
dec
or
ds
and
cli
aad
push
and
roll
xchg
ficoms
or
aaa
xor
mov
jns
pop
ljmp
pop
lock
add
fisubs
sahf
inc
fs
sub
les
iret
add
xchg
icebp
pusha
call
jno
mov
cld
gs
adc
pop
scas
les
cmpsb
xor
adc
xchg
in
xor
or
aad
aad
or
adc
loopne
jl
ss
cmc
mov
mov
or
mov
xchg
sahf
sub
cmp
xor
xchg
sbb
cs
repz
sti
ss
sbb
das
cld
jl
and
aad
out
xor
lret
loope
xchg
pop
fs
pop
nop
dec
and
jae
ficomps
test
fs
mov
dec
cmp
ret
insl
test
out
mov
inc
insb
jbe
sub
movsl
gs
cmc
pop
loopne
push
jecxz
test
mov
movsb
ret
out
imul
and
shl
cs
pop
test
xor
mov
lret
adc
andl
mov
pop
cmpsb
shll
sub
ljmp
in
out
test
es
xchg
lret
mov
in
stos
fwait
in
mov
sbb
and
arpl
popl
dec
cmp
mov
and
gs
lret
cmp
xchg
test
and
push
ss
ret
jecxz
xchg
adc
mov
out
xlat
fwait
or
inc
ljmp
sbb
sub
lods
fmul
jge
ret
push
mov
pushf
data16
ss
insl
test
sub
push
pop
jne
divb
xchg
ljmp
roll
out
push
lods
sbbb
leave
push
insb
out
jae
sarl
rcll
jno
or
daa
in
cwtl
pushf
mov
mov
lret
bound
mov
arpl
dec
push
pusha
dec
js
mov
fcmove
ss
xchg
jo
mov
test
jb
jbe
inc
pop
cmpsb
mov
push
pop
pop
mov
inc
sar
icebp
ret
push
sbb
push
jne
fwait
or
shlb
scas
cmpb
and
mov
mov
lods
fisttps
lcall
sbb
dec
push
out
mov
or
push
cmpsl
inc
out
notl
mov
push
mov
call
push
inc
pusha
insl
cs
ret
cmp
fdivs
imulb
out
shlb
xchg
mov
pushf
fmuls
pop
testl
jns
xor
fldcw
test
mov
js
mov
mov
add
dec
scas
rcl
adc
adc
orl
or
cmpsl
pop
sbb
test
push
jecxz
cli
add
sub
ror
repz
xchg
out
addr16
add
sbb
icebp
dec
push
adc
fcomps
cmp
es
pop
xchg
pop
sbb
adc
jecxz
push
or
pop
add
test
jg
out
mov
je
mov
outsb
sbb
cli
push
xor
enter
mov
mov
dec
adc
in
mov
cmp
int3
pusha
mull
orb
daa
cltd
rorb
rclb
mov
stc
dec
cmp
push
int
out
xchg
mov
pop
mov
push
push
lock
sub
adc
sbb
cmc
push
and
aas
out
movsb
shl
jbe
pop
lcall
and
testl
cmp
pop
jo
sarb
lock
ss
hlt
dec
js
out
sti
or
jmp
or
movsb
aam
mov
push
out
out
or
jecxz
lahf
clc
in
pushf
test
and
nop
int3
call
and
das
stos
jp
mov
sub
jmp
pop
adc
mov
jge
xchg
outsb
and
test
lds
fcomi
andb
sarb
into
jle
jl
rcrl
movsb
in
dec
and
mov
xchg
call
mov
mov
lret
mov
sbb
fiadds
push
imul
lret
loop
subb
lcall
push
shrl
testl
lock
in
lock
pop
outsb
xchg
cmp
xor
pushf
cltd
push
cmpsl
inc
inc
mov
sub
subb
int
inc
push
lods
shll
in
jbe
ret
sbb
pusha
or
mov
hlt
sbb
aam
sbb
and
out
mov
sbb
decl
push
xlat
fcomip
mov
sub
and
jnp
inc
in
cli
mov
popa
rcl
das
in
push
insb
addl
pop
sub
push
push
outsb
enter
push
insl
xor
mov
sbb
popa
roll
js
fisttpll
and
mov
sarb
push
cmpsl
fwait
gs
xchg
pop
mov
movsl
mov
fisubs
push
sbb
sub
and
sahf
repnz
cs
mov
push
pushf
jmp
cld
mov
pusha
fldenv
orb
sub
push
in
sub
push
in
adcl
sub
push
repz
pop
popa
mov
movsl
mov
insl
push
xor
add
dec
mov
push
in
mov
dec
fildll
xchg
jnp
leave
or
es
inc
shl
jnp
nop
sub
in
data16
xor
push
sbb
add
inc
sub
test
push
xor
jg
and
or
cmp
not
out
inc
popl
outsb
data16
or
add
mov
insb
subb
movsl
stos
or
mov
lahf
jecxz
out
xchg
ljmp
aaa
adc
mov
rcll
pop
pop
out
cli
popf
addb
pusha
push
lds
sbb
dec
les
pop
sbb
dec
lods
scas
mov
xchg
hlt
mov
hlt
xchg
pop
and
dec
outsl
mov
scas
sub
xchg
fidivl
xor
fcoml
in
jmp
test
pop
mov
loope
and
insb
lock
dec
inc
mov
inc
fs
xchg
insb
test
pop
and
adc
inc
jne
test
addl
push
out
jno
dec
shr
jae
or
dec
clc
rolb
pop
xchg
repnz
mov
iret
call
test
jle
sub
jmp
mov
movsl
dec
sbb
in
dec
sbb
mov
push
mov
jns
pop
push
jge
or
lret
frstor
push
sbb
fwait
xchg
repnz
or
shrl
pop
dec
shl
xchg
cmpsl
leave
xchg
out
in
stos
pushf
in
daa
pop
lods
pushf
jge
repz
pusha
sbb
bound
imul
sbb
stc
sub
cmp
loop
je
xchg
test
mov
lods
mov
jecxz
pop
pop
popa
ret
adc
negb
lock
inc
sti
cvttps2pi
push
cmc
in
mov
adcl
mov
jmp
dec
jb
mov
adc
xor
out
mov
xlat
or
mov
scas
in
shlb
call
push
out
cmp
repnz
in
jle
pop
ljmp
jo
andl
daa
jb
mov
nop
fbstp
jmp
push
inc
xor
subl
sbb
xchg
dec
cmp
mov
mov
cmp
outsb
js
insl
cmpsb
adc
pop
mov
rorl
daa
outsl
jecxz
inc
incb
sbb
sbb
fwait
rcrl
ficomps
or
movsl
fisubl
mov
mov
ret
jmp
dec
push
arpl
jp
lods
sbb
ljmp
fs
push
ret
ds
pop
dec
dec
mov
add
mov
mov
lret
mov
cmp
or
cmp
ret
cmp
adc
repz
push
adc
fwait
add
or
push
sub
sub
adc
shll
or
xchg
add
add
xchg
das
into
popf
add
pop
sub
out
aas
test
jb
in
xchg
and
lds
xchg
popf
rorb
mov
aas
pop
fidivs
fstpl
scas
xor
push
outsl
pop
pop
lret
movsb
inc
mov
mov
fists
mov
loopne
pusha
or
dec
ds
cmp
mov
mov
jge,pt
pop
fiadds
call
lret
sub
mov
lods
pusha
fsubs
stos
and
pop
jo
inc
out
outsl
inc
test
sti
in
rol
ret
mov
inc
popl
dec
lock
xor
out
jo
inc
jp
mov
adc
lret
stos
pop
mov
aam
dec
push
pop
leave
call
xor
pop
push
fucomip
std
mov
push
mov
mov
xor
push
sub
cmp
and
subl
outsl
pop
sub
xchg
fadds
test
inc
sub
rdtsc
aas
ret
aas
fs
sub
mov
pop
cmp
sbb
push
add
and
mov
iret
mov
lods
push
dec
cld
cmpsb
pop
movsl
sub
cs
sarb
mov
loopne
stos
popa
push
mov
pop
imul
add
cmp
test
int
dec
cmp
aaa
push
mov
pushf
push
xor
push
es
xor
std
push
mov
shrl
add
sbb
mov
in
xor
roll
jge
cmpsl
imul
push
jbe
rcrl
adc
loopne
xchg
jmp
icebp
jnp
push
or
cwtl
sub
xchg
inc
addps
in
or
or
sbb
outsb
mov
iret
orl
mov
leave
push
xor
shll
arpl
jecxz
cltd
dec
stc
ss
xchg
out
fnsave
inc
les
je
pop
pop
sbb
faddl
repnz
and
pop
outsb
jle
outsb
into
les
daa
in
mov
mov
push
cltd
mov
cmpsl
cmp
aam
sub
add
mov
sbb
dec
dec
push
nop
mov
lcall
add
cld
jns
lret
push
repz
mov
dec
xor
sub
push
jbe
xchg
cmp
xchg
jl
and
jne
xorl
movsb
fstpt
add
or
jbe
repz
cld
test
jge
xchg
pop
mov
xchg
dec
rol
stos
mov
fdiv
mov
rcrl
adc
pop
adc
xchg
aad
mov
adc
jge
sub
in
loopne
fwait
sti
mov
add
lods
cli
and
cmp
idivl
dec
dec
push
pushf
ret
ror
iret
or
lods
jp
push
dec
insb
lods
pop
sub
in
push
inc
jo
mov
or
into
ret
xchg
dec
daa
test
sqrtps
cmp
outsl
mov
lret
rolb
aam
dec
daa
cmpsb
mov
mov
mov
and
mov
push
inc
jns
cmpsb
mov
dec
ja
test
gs
mov
hlt
flds
or
daa
ficoml
lock
cmp
dec
and
sub
mov
xor
and
pop
mul
rcll
jecxz
aad
jecxz
fdivrl
mov
sbb
xchg
addr16
jne
fbstp
divw
mov
les
iret
gs
push
inc
cltd
enter
lods
arpl
or
fsubrl
add
xchg
addr16
jno
add
gs
adc
cmp
ljmp
lret
decl
jb
sbb
adc
and
loop
stos
iret
ljmp
dec
out
bound
arpl
jge
das
ffreep
popf
mov
inc
xor
cs
sub
and
movsl
mov
test
dec
push
fdiv
mov
dec
aam
or
add
movsb
push
mov
leave
fcmovne
add
mov
jge
jge
xchg
xor
mov
sub
push
jp
dec
jecxz
out
mov
jbe
jmp
andl
das
push
xchg
inc
push
mov
inc
imul
mov
inc
fdivl
and
or
in
cmp
pop
xchg
jb
add
push
adc
dec
cmp
xlat
shll
lds
jg
inc
mov
lret
xchg
push
dec
mov
inc
popf
jb
jge
scas
test
fdiv
shlb
lcall
gs
push
pop
xor
rol
scas
test
or
sub
adc
xchg
and
cli
mov
stos
jp
fcmovne
cmp
mov
imul
dec
mov
and
mov
push
and
stos
dec
xchg
mov
clc
mov
mov
aad
push
lods
insb
or
sbbl
jb
mull
push
int
aad
push
scas
test
pop
xchg
scas
lret
add
dec
stos
jae
lock
movsl
push
jnp
pop
cs
outsl
ss
cmp
and
imul
mov
roll
jg
loop
int3
cmp
jbe
out
mov
cmp
movsb
sbb
or
mull
inc
mov
addr16
gs
xlat
pop
add
push
aaa
mov
xchg
hlt
and
adc
ret
xchg
iret
inc
xchg
lds
and
aas
cltd
adc
sub
aam
ljmp
fwait
cmpsl
repz
mov
dec
jge
push
sbb
ljmp
adc
stos
daa
leave
pop
stos
lcall
pusha
adc
lea
xchg
fldl
dec
xchg
sub
test
cld
fs
aaa
mov
pop
cmp
dec
lock
mov
and
dec
mov
cli
ret
orb
push
cmp
mov
sub
sub
out
jae
cwtl
inc
inc
xchg
pop
loopne
pop
icebp
jo
cmp
test
mov
xchg
push
out
cmp
pop
xor
or
mov
adc
loope
mov
jp
fisubrs
aaa
gs
mov
push
cmp
aam
jns
js
repnz
mov
int
outsl
and
ds
xchg
push
scas
and
push
loop
push
gs
push
test
scas
dec
iret
sahf
inc
leave
jbe
mov
ds
mov
fwait
sub
cmp
fnsave
rcrb
addb
icebp
out
cwtl
pusha
mov
dec
mov
test
or
fs
pop
mov
pop
insl
into
loope
movsb
aaa
mov
xor
push
and
sbb
stc
xchg
mov
and
in
rorb
ret
gs
rorl
fidivs
insb
jnp
fsubl
pop
pop
es
adc
dec
sbb
add
xor
adc
iret
xchg
cmp
rolb
vaddsd
test
xor
add
and
add
inc
adc
dec
int3
or
rorb
addr16
test
movsl
xor
sbb
shll
in
cmpsl
mov
sbb
jecxz
cld
xchg
imul
iret
fimull
dec
ja
aaa
xchg
testb
mov
jo
popa
hlt
dec
jne
cmp
jle
dec
in
ss
pusha
negl
loop
mov
rorb
xor
lahf
fdivs
fstpl
push
test
dec
lods
cmpsl
xor
icebp
cmp
xchg
or
fldt
sti
in
dec
ljmp
xor
mov
dec
jmp
mov
clc
stos
cmpsb
mov
xchg
add
sub
outsl
int3
xchg
mov
loopne
cmpsb
push
pop
icebp
stc
movsb
dec
add
xlat
es
stc
sub
cmp
pushf
push
push
sub
lea
push
arpl
jae
mov
add
xchg
sub
fxch
leave
fdivr
call
or
cmp
sub
pop
dec
dec
pop
jns
imul
test
mov
stc
call
or
cmp
sub
pop
dec
dec
pop
jns
imul
mov
mov
stc
in
jmp
sbb
sub
xor
dec
pop
js
imul
enter
push
divb
cs
and
add
xor
or
popf
jno
iret
adc
inc
rcll
jb
xchg
add
xor
inc
rclb
popa
repnz
adcl
mov
lods
push
shll
jb
fwait
add
xor
inc
lret
push
cli
popa
in
add
inc
shrb
pop
xchg
sbb
out
dec
fdivl
lret
push
shr
or
stc
ljmp
test
scas
adcb
mov
inc
sub
jnp
cmc
in
outsb
fnsave
sbb
add
aaa
mov
shl
xchg
ljmp
clc
int
mov
fs
push
inc
xorb
loop
push
or
repnz
ss
outsb
and
add
and
fwait
lock
inc
sti
jno
mov
repnz
push
or
fnsave
pop
xor
out
loope
punpckldq
jno
inc
pop
cltd
add
xor
nop
in
ret
xor
loope
in
add
xor
inc
enter
jmp
sbb
sub
imul
and
xor
daa
lahf
and
push
les
xorb
pop
cwtl
pop
mov
movl
mov
mov
add
adc
addr16
aam
scas
and
adc
mov
push
mov
popa
bnd
adcl
mov
rcll
loope
icebp
addb
adc
inc
rclb
popa
bnd
adcl
mov
rcll
loope
icebp
addb
jns
int3
in
xor
decl
out
push
jge
sahf
jb
mov
imul
add
xor
mov
out
jecxz
mov
fwait
xchg
das
xchg
jns
push
call
mov
clc
int3
popf
jge
jno
mov
pop
aam
jle
pop
lds
pop
xor
mov
mov
xor
inc
sub
add
int
mov
jno
add
lods
filds
push
push
call
cbtw
movsb
sti
mov
xchg
xor
in
pop
jmp
std
repz
jne
cmp
and
sbb
mov
shlb
pop
mov
dec
sub
mov
testb
in
outsl
mov
mov
mov
push
xor
lea
lret
ja
pop
aam
hlt
repnz
xchg
lcall
gs
loope
bswap
cmp
sbb
jecxz
negb
scas
adc
aam
mov
jl
mov
cmp
insb
xor
sub
mov
push
xchg
sbb
mov
pusha
nop
adc
inc
mov
lods
push
and
sub
cwtl
sbbb
shl
filds
cwtl
lret
gs
popa
pop
cld
lret
jns
dec
test
popa
jae
and
sub
cmp
adcl
mov
adc
mov
cmp
sub
pusha
cmp
mov
jmp
repz
add
shl
xchg
mov
push
adc
xor
inc
push
enter
mov
add
mov
cltd
lahf
cmpsb
ret
jb
jle
mov
scas
mov
xchg
daa
pop
sbbl
pop
or
jmp
xor
xchg
les
rclb
and
or
adc
mov
rorb
call
sub
gs
in
dec
push
add
xchg
cmc
cmp
cld
jo
push
adc
mov
rorl
cmp
pop
sub
les
xchg
cld
mov
add
xchg
int3
mov
push
mov
xor
stos
dec
dec
sbb
lea
mov
neg
push
lahf
mov
es
cmp
or
pop
push
xchg
jle
sub
push
mov
fdiv
mov
cltd
xor
aas
dec
rcrb
outsb
add
ficomps
dec
sbb
stos
inc
into
xchg
rclb
pop
outsb
inc
test
jne
sub
dec
inc
mov
cmp
lods
inc
je
mov
push
inc
out
pop
out
enter
ja
mov
pushf
sub
scas
dec
bound
addps
mov
pop
inc
ret
sbb
add
fwait
inc
into
add
lds
dec
cmc
cwtl
scas
mov
out
cmpl
xor
hlt
loop
jecxz
mov
dec
cmpsb
movsl
push
sub
mov
add
push
sti
jmp
je
popa
adc
clc
ss
rclb
pop
add
in
out
xor
push
fcomps
mov
cmp
ja
out
test
push
ljmp
inc
aad
or
adc
xchg
rolb
addr16
adc
lock
nop
inc
inc
into
or
fimull
mov
jns
ja
fs
or
loopne
pusha
jmp
or
push
or
push
jne
push
insl
push
cmp
insl
jo
cmc
gs
cmp
push
dec
mov
movsl
fstpt
les
insl
mov
xchg
dec
mov
outsl
mov
inc
sbb
push
cmpb
mov
out
fwait
popa
xchg
test
adc
in
iret
pop
xchg
jnp
scas
adc
push
cs
in
cmpsl
int3
mov
push
cmp
sarl
cwtl
clc
jmp
pop
arpl
enter
sti
sbb
jae
rcll
les
js
mov
xlat
push
rcr
sbb
cmpb
arpl
fsubl
aas
sbb
xchg
xchg
test
cmp
adc
test
lods
push
sub
mov
popa
mov
mov
in
call
dec
inc
sbb
mov
loopne
or
cmpsb
imul
inc
mov
lea
sahf
adc
rolb
mov
and
cld
lahf
add
mov
fmulp
adc
addr16
inc
or
inc
cld
loop
or
popf
mov
sbb
mov
xchg
pop
and
mov
inc
jns
jmp
jge
int
jp
movsb
loope
rclb
pop
mov
jb
sbb
mov
dec
insl
mov
inc
push
push
mov
xor
daa
pop
xchg
xor
or
inc
xchg
inc
in
nop
xchg
test
adcb
jecxz
dec
repz
mov
push
adc
inc
jbe
mov
rcrl
mul
mov
mov
das
popf
xchg
das
out
pop
mov
sbb
es
fcomp
mov
dec
fwait
push
shlb
xlat
fwait
or
pop
in
jb
or
pop
mov
cmp
mov
cmp
testl
or
outsb
pop
push
stos
out
or
adc
mov
test
out
roll
lods
iret
pop
adc
out
or
cmpsb
xchg
std
adc
mov
js
push
jle
cli
jo
push
bound
and
jge
add
insb
out
mov
sub
xchg
xor
cmp
fisubs
cltd
fdivr
jmp
cmp
pop
sahf
test
adc
pop
add
push
push
cmpsl
int
mov
int
aas
jno
stos
inc
js
pop
mov
mov
sub
icebp
mov
xor
jbe
ds
dec
pop
pop
inc
dec
jb
mov
lock
sub
insb
mov
mov
movsb
out
or
pop
loope
cwtl
stos
jno
rcrl
or
mov
aaa
push
ja
add
popa
add
mov
es
inc
pop
adc
icebp
sub
loope
inc
es
outsl
mov
fsts
decb
out
sti
int
inc
sub
into
lds
test
test
cmpsl
js
inc
pusha
jle
into
imul
out
iret
push
bound
add
shlb
clc
repz
popa
mov
jo
jge
aad
into
jb
loopne
popf
std
push
lea
das
push
xor
jecxz
leave
jg
pop
push
mov
cmp
popf
or
sub
cli
sub
adc
js
les
push
psllw
lods
sbb
mov
push
sbb
out
outsl
jne
jne
sti
sbbb
int3
je
pop
into
push
aaa
sub
mov
loopne
lods
cs
xlat
xor
jmp
sti
bnd
aam
cmp
and
sub
jle
cmp
aaa
xchg
mov
fcmovb
push
sbb
xor
scas
lds
stc
add
xor
mov
lcall
pop
pop
jmp
loope
mov
icebp
mov
pop
dec
dec
hlt
popf
int3
xor
mov
push
aam
and
cwtl
shl
shrb
push
mov
imul
adc
pop
in
lock
lret
sbb
aaa
mov
xchg
inc
pushf
sbb
adc
inc
popa
sbb
pop
push
xchg
subl
outsl
les
push
push
inc
jns
arpl
add
pop
pop
add
sahf
adc
push
push
mov
pop
add
inc
dec
sub
leave
jge
fidivl
repnz
and
mov
ss
mov
movl
adc
and
mov
cmpl
push
mov
adc
icebp
sub
jns
cmpsl
enter
insb
fwait
pop
test
cmc
popa
push
mov
or
inc
adc
dec
cmp
test
adc
mov
int3
inc
int
out
mov
pop
lds
outsl
lods
cli
xchg
sbb
fldenv
add
into
mov
mov
push
mov
pop
mov
push
add
call
add
pop
xchg
int
int3
repnz
adc
sub
jno
or
lret
fcompl
jl
stos
xor
jmp
in
lcall
arpl
in
data16
cmp
add
pop
popa
cmp
movsl
test
in
ds
mov
out
aad
lds
pop
sbb
cmc
outsb
jb
pushf
mov
mov
addl
xor
adc
xlat
pop
xor
pop
and
mov
mov
xchg
adc
or
and
add
mov
and
inc
and
jbe
loopne
out
jns
daa
cltd
and
jnp
inc
dec
xor
imul
pop
add
sbb
and
mov
cltd
mov
pushf
mov
sub
sub
popf
loop
xchg
mov
sbb
xlat
pop
mov
call
movsl
outsl
inc
repz
push
push
or
xchg
mov
orb
dec
pop
addr16
icebp
pop
xchg
dec
fildll
popw
sub
popf
pop
addr16
adc
aaa
mov
inc
fwait
mov
sti
and
data16
sub
sti
aaa
shr
mov
fsubrl
sub
lods
into
adc
test
aad
outsl
bound
xor
cmp
loop
cmp
in
aaa
or
loope
icebp
or
cmp
fisttpl
lret
movsl
xor
and
ret
and
xchg
dec
xchg
cmpl
push
mov
insl
movsb
or
xchg
add
outsb
cmp
imul
mov
inc
into
lods
push
fbstp
faddl
inc
cmp
sbb
outsl
lret
pop
mov
pop
push
outsl
push
jmp
pop
mov
pop
rorl
sub
je
nop
mov
xor
push
out
cmc
in
push
push
stc
dec
mov
xor
ret
in
ds
xchg
inc
shl
inc
sub
push
int3
loopne
xchg
insb
jno
mov
jge
inc
stos
mov
push
jne
addl
cmp
and
fnstenvs
or
xchg
mov
jae
inc
in
fwait
xchg
popa
dec
bound
sti
out
gs
je
loopne
sub
popf
cmp
fcomps
jg
xchg
xchg
clc
sbb
ja
ret
pushf
sbb
mov
jge
std
imul
xor
mov
loopne
xchg
sahf
mov
jne
push
jg
mov
mov
mov
lds
sbb
andb
jbe
xchg
fisubrs
push
mov
cmp
mov
dec
lcall
mov
lcall
fisubrl
cltd
subl
sub
fwait
sbb
roll
shl
push
data16
data16
subb
mov
shll
dec
add
sub
inc
xor
inc
std
scas
loopne
mov
or
sub
stos
jns
stos
inc
xchg
ds
sub
jp
mov
xlat
mov
xor
repnz
push
pushf
cmpsb
adc
aad
and
jbe
out
jae
sub
fisubrs
adc
movsb
xor
jl
ret
inc
inc
sbb
cmp
or
adc
adc
fs
in
push
pop
gs
dec
shrl
in
in
lods
pop
cmp
nop
push
sbb
or
cli
nop
lods
ret
pop
push
xlat
cli
test
mov
out
xor
cltd
push
cmp
movsl
ja
add
inc
jmp
pushl
or
and
cld
test
orl
adc
repnz
repz
ljmp
jbe
test
mov
jmp
lcall
push
jge
or
lea
cmpsl
sbb
mov
and
inc
xor
ss
popa
fstpt
movsb
sbb
adc
in
xor
dec
pop
push
out
aaa
adc
inc
xor
in
mov
sbb
daa
mov
add
sbb
mov
push
lcall
rolb
cwtl
cmp
dec
mov
insl
fs
mov
add
movsb
mov
pop
xchg
cmp
push
jl
lods
add
cmp
jecxz
cmpsb
or
jno
and
push
ljmp
jl
mov
and
jo
movl
clc
int3
loopne
push
add
mov
push
ja
dec
cmp
dec
cmp
sbb
xchg
loop
outsl
mov
fwait
mov
jbe
inc
fs
and
int3
mov
fcomps
call
add
iret
jnp
aas
lret
mov
mov
jae
bound
aas
sbb
cmp
sti
idiv
sub
jo
xchg
test
xchg
inc
scas
mov
inc
clc
out
pushf
movsl
xchg
cmc
xchg
rorl
push
lcall
inc
iret
or
sub
dec
add
cmp
loop
push
mov
test
sbb
into
adc
and
adc
xchg
xchg
cmp
sbb
add
inc
pushf
xchg
pop
dec
add
pusha
add
test
lret
jne
xchg
mov
arpl
inc
push
dec
mov
push
pusha
int
fisubl
xchg
jnp
decl
rorb
aam
daa
icebp
scas
mov
mov
cmpsl
jo
xchg
inc
std
mov
jo
mov
xor
inc
and
add
in
jp
dec
dec
mov
inc
or
pop
mov
cmp
cli
jns
arpl
punpckhdq
jno
add
movsb
cmpsb
fstpt
sarl
xchg
outsl
sub
daa
xor
test
test
xor
mov
or
rcrl
sbb
les
pop
sbb
cmp
ss
fdiv
mov
dec
xor
jg
sub
dec
push
or
push
bound
int3
ljmp
mov
mov
xor
pop
push
cmp
add
nop
mov
imul
out
lahf
xor
fldt
loop
fstp
es
cmpsb
jmp
ljmp
sub
scas
add
dec
vphadduwd
cld
std
addr16
jbe
push
push
rcrb
or
js
mulb
push
in
pop
addr16
mov
jb
adc
lcall
cld
pushf
loop
xlat
js
insl
mov
inc
xchg
aas
and
xor
call
xchg
adc
xchg
or
orb
inc
cmp
nop
out
dec
scas
mov
push
fdivrs
pop
incl
push
mov
fisttpl
out
ret
add
leave
cltd
push
or
dec
test
pop
pop
and
addb
xchg
inc
inc
add
sub
test
push
rorl
mov
cmpb
push
jbe
sbb
loopne
test
ret
sbb
stos
arpl
mov
mov
cwtl
test
pop
mov
enter
fildll
test
pusha
ret
into
adc
and
inc
xchg
dec
in
in
outsb
dec
aaa
jmp
push
clc
cwtl
in
loop
notl
mov
jns
pop
sub
adc
dec
inc
int3
xor
xor
pop
cmp
xor
mov
xchg
sbb
push
in
test
les
cwtl
cmp
or
cmp
jb
sbb
xchg
jge
lea
fsts
sub
cmp
jmp
lods
jecxz
jns
insb
inc
push
xchg
mov
xchg
jge
jg
pop
pushf
sub
fcomps
pop
mov
xchg
mov
icebp
idivb
loop
enter
mov
and
popf
aam
jl
jecxz
sarb
int3
pop
mov
popa
adc
xlat
or
mov
ds
jne
mov
fstpt
int
rolb
jg
movl
dec
xor
in
xchg
dec
and
out
mov
jb
test
sarb
xor
sbb
push
xchg
mov
lret
push
data16
les
inc
push
xchg
lahf
jmp
outsl
dec
clc
cmc
jne
test
sbb
aas
int3
repz
push
lods
hlt
mov
dec
stos
ret
push
cltd
dec
shrb
and
in
cli
and
jg
xchg
imul
int
sbb
xchg
das
insb
cmp
dec
sarb
inc
out
lcall
out
sti
jno
scas
sub
or
adc
add
cmpb
mov
push
pop
and
ljmp
outsb
add
pop
push
mov
les
daa
xchg
and
xor
cmp
sbb
inc
mov
andl
cmc
fisubl
hlt
sarb
cld
hlt
jge
nop
jle
dec
push
mov
scas
orl
mov
inc
pusha
rolb
sbb
pop
sub
in
stos
dec
mov
pop
cmp
push
push
cli
cmp
mov
mov
imul
push
or
mov
clc
repz
gs
xchg
inc
nop
aaa
loope
mov
fldl
arpl
lods
cwtl
nop
gs
jnp
sbb
mov
mov
cltd
xor
jge
push
mov
mov
cmp
mov
ret
ja
popf
outsl
sbb
clc
mov
les
xchg
cmp
subb
adc
inc
popa
xor
insl
and
and
jns
xchg
jo
xchg
sub
sub
call
adc
mov
cld
mov
mov
mov
test
in
adcb
dec
imulb
fdivs
mov
xor
loop
and
mov
push
cltd
mov
sbb
adc
xchg
inc
xor
int3
mov
mov
sub
shlb
lret
aad
xor
jp
sub
add
mov
mov
arpl
fs
lcall
sub
push
sbb
in
push
pop
xor
jl
imul
xchg
pop
rorb
inc
inc
dec
sub
xchg
out
jnp
ret
into
sub
add
mov
jecxz
jno
ret
jp
lcall
stos
popf
fnstcw
in
rclb
sahf
adc
rorl
shrl
mov
push
sbb
cmc
in
cltd
cmp
mov
xchg
cmpsl
rcrl
adc
sub
fisubrs
inc
inc
int
xor
scas
jge
iret
loopne
adc
ss
movsl
add
icebp
xor
imul
int3
pop
cmp
leave
popa
out
ror
daa
mov
pop
test
push
mov
fnstsw
aam
pushf
lock
fcompl
dec
push
cmpsl
stos
pop
sbb
cs
cli
and
mov
xchg
or
push
les
inc
sarb
xor
mov
xchg
inc
into
movsl
or
or
sub
lret
inc
pop
gs
std
xlat
stos
out
xor
push
mov
push
xchg
insl
decl
pop
sbb
loop
imul
ret
mov
add
jns
mov
xor
aaa
out
testl
add
popa
decb
adc
sbb
cmp
jmp
xchg
bound
mov
sub
loopne
cmp
and
cmp
push
test
mov
shll
scas
xchg
jb
insl
jne
shrl
adc
mov
xor
out
into
insl
sub
sbb
testb
jbe
mov
pop
test
cmc
inc
out
sbbl
or
mov
es
out
adc
in
outsl
jle
sahf
dec
test
xor
ja
dec
out
mov
adc
iret
mov
ret
dec
mov
mov
mov
xor
xchg
iret
stos
or
cli
cli
shlb
pop
pop
test
cmp
xor
cwtl
sahf
fidivl
dec
pop
aas
jb
loope
dec
inc
lcall
xchg
out
mov
xchg
orb
sub
insb
xlat
push
xchg
leave
cmp
stc
mov
pop
inc
cli
lcall
pop
jmp
fmuls
xchg
popa
mov
or
adc
pop
and
lods
insl
into
add
cli
insb
cmpsl
adc
mov
pop
push
mov
xor
mov
inc
insb
mov
hlt
or
iret
mov
sbb
cmp
and
adc
aas
outsl
adc
jns
lcall
or
out
mov
int3
popf
lret
jl
cmc
xor
mov
clc
loopne
ret
inc
outsb
outsb
dec
out
mov
stos
movsb
push
in
mov
xchg
xchg
or
adc
or
ds
or
shl
notl
and
mov
cmp
dec
jbe
lds
mov
and
pop
hlt
xor
jo
sti
add
jo
xchg
subl
xchg
loop
jmp
add
sti
jb
mov
fistl
cmp
push
fwait
ret
mov
xor
into
or
scas
adc
fisttpll
mov
jbe
andl
ljmp
call
shlb
cwtl
bound
ds
sbb
scas
mov
mov
dec
lret
popf
xlat
xchg
xchg
mov
loope
pop
out
pusha
pop
and
push
jge
jmp
lock
ljmp
lock
mov
dec
or
outsb
add
jmp
dec
loope
sti
push
pop
mov
ja
sbb
mov
mov
popf
in
adc
out
rcrl
sbb
repz
lret
xor
mov
push
mov
lahf
mov
rcrl
sbb
leave
dec
cmp
sub
sbb
jb
mov
out
mov
jb
push
int
jns
push
into
mov
jle
sub
mov
mov
enter
out
aaa
cmp
scas
sbb
push
mov
adc
mov
ret
push
loop
bnd
adcl
mov
rcll
loope
icebp
addb
adc
inc
rclb
popa
bnd
adcl
mov
rcll
loope
icebp
addb
adc
inc
rclb
popa
bnd
adcl
mov
rcll
loope
icebp
mov
cmpsb
adc
rclb
popa
jb
std
sub
xor
push
lea
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
inc
addr16
ja
inc
jo
push
dec
pusha
pop
inc
daa
push
pop
shl
mul
lock
andb
xchg
inc
addr16
ja
inc
jo
add
adc
and
xor
shl
xchg
xchg
lock
andb
xchg
inc
addr16
ja
inc
jo
add
adc
and
xor
rorb
xchg
mov
repz
cmc
ficoms
adc
add
inc
loopne
aam
adc
jns
ljmp
xchg
mov
cmp
lock
lret
xor
notl
movsb
xchg
enter
push
paddd
insl
jne
jg
test
xlat
dec
mov
mov
cmp
add
pop
inc
fdivrp
rcrb
or
pop
lcall
js
push
add
mov
push
add
add
fimuls
rcrb
int
dec
mov
xchg
or
dec
test
sbb
and
xor
cmp
or
js
sbb
and
mov
nop
xchg
mov
mov
xchg
fcoms
pusha
inc
jo
add
adc
and
xor
shl
mul
lock
andb
incb
or
ja
cs
aaa
inc
dec
jno
addl
stc
in
in
inc
and
inc
adc
push
and
pop
movsl
lahf
rolb
in
loop
sub
xor
or
jno
add
adc
and
xor
shl
mul
lock
andb
xchg
inc
addr16
ja
inc
jo
add
adc
and
xor
shl
mul
lock
andb
xchg
inc
addr16
ds
push
adc
jmp
fstl
and
es
and
ret
cmp
xchg
xchg
add
push
clc
and
mov
fldt
shr
lcall
mov
push
or
mov
mov
mov
pop
mov
sbb
add
pop
sub
dec
outsl
hlt
aas
negl
pop
mov
jae
lods
and
mov
addr16
cs
push
cwtl
negl
in
das
test
jno
pop
sub
cmp
cmp
pop
and
nop
mov
mov
stos
test
sub
pop
lods
pop
push
bndldx
cmp
dec
mov
jmp
push
jmp
push
mov
sbb
lock
dec
daa
push
out
mov
lcall
cltd
pop
mov
addb
lahf
xchg
fildl
shrl
or
std
orb
imul
repz
inc
rorl
mov
dec
insl
pop
xorb
cwtl
rcll
add
movsb
in
stos
enter
test
adc
and
dec
sbb
or
inc
mov
in
aad
mov
inc
pop
jno
and
or
mov
shlb
xor
adc
push
push
in
fcomps
mov
pushf
das
repnz
mov
sti
sbb
push
add
push
pop
add
dec
out
lods
imulb
cltd
mov
fs
imul
into
xorl
js
jb
pop
xchg
hlt
js
jmp
jbe
out
shll
cmpsb
push
jnp
push
mov
jmp
stos
mov
pop
sbb
fdivrs
repnz
rorb
insl
jb
stos
sbb
dec
mov
je
push
cmp
mov
sbb
cmp
out
mov
add
xchg
loopne
xchg
dec
stc
mov
cltd
orb
lahf
les
call
sbb
stc
shll
inc
pop
arpl
inc
loope
cli
inc
mov
mov
jg
sarl
jne
mov
jmp
push
data16
cmp
jl
push
add
cli
sahf
movsb
pop
dec
loop
lds
sti
mov
ljmp
push
push
and
je
inc
pop
jne
mov
test
lods
test
rorl
push
dec
mov
inc
push
cmp
xlat
push
jae
ret
out
inc
dec
outsb
rorb
add
xchg
cli
push
mov
or
mov
cmp
pop
popf
mov
incb
mov
mov
xchg
sti
cmpl
push
sub
dec
mov
fcmovne
stos
cmpsl
mov
mov
fs
cmp
dec
sbb
das
int
inc
xor
addr16
call
or
mov
lods
mov
dec
stc
cmp
in
mov
pop
xlat
adc
je
adc
cmpb
adc
je
dec
inc
insb
test
xor
loope
jne
jne
push
sbb
lretw
mov
sahf
out
repnz
sub
scas
int
push
and
push
push
pop
dec
fsubrl
incb
sub
imul
jmp
cmp
test
jb
mov
mov
cli
pop
lret
or
ficoml
mov
sbb
xchg
mov
or
jmp
jo
xor
out
inc
or
xchg
dec
xchg
testl
sbb
lea
xchg
pushf
sbb
or
bound
add
mov
sub
fwait
notb
or
mov
mov
test
data16
sbb
and
mov
in
loop
xchg
iret
insl
xchg
push
out
data16
insb
lds
adc
in
mov
fcmovb
jecxz
movsb
pop
dec
pop
stos
ret
mov
jl
add
insb
push
xor
outsl
push
push
dec
or
push
fcomi
push
jns
pop
or
das
adc
push
loopne
or
jbe
adc
mov
sbbl
int
push
jecxz
cmc
test
lret
or
xor
xchg
or
mov
cs
ret
sbb
mov
mov
mov
sub
jbe
or
jae
movsb
les
ja
pop
out
ljmp
xchg
test
xchg
pusha
sbb
stos
mov
jae
aad
insl
movsb
ljmp
pop
push
faddl
outsb
jne
stc
sub
push
rcrl
cmp
in
in
insl
movsb
in
xor
fwait
iret
ffree
ret
xchg
push
stos
and
out
and
jg
mov
jp
inc
fistpl
in
sbb
mov
test
aam
lcall
add
pop
arpl
xchg
inc
push
ja
nop
adc
iret
gs
ret
sub
and
mov
arpl
jbe
andb
xor
fstps
push
ljmp
jne
sbb
jmp
push
ret
ret
mov
into
cmovns
add
sbb
mov
testl
pop
push
js
sarl
dec
cs
inc
subl
sub
shrl
lcall
mov
stos
push
aad
push
push
adc
std
cmc
jo
sub
xchg
insb
push
outsb
lret
and
xchg
sub
mov
popa
mov
push
popa
jns
aam
push
sarb
sbb
jmp
and
sub
cmp
push
ja
mov
cmp
push
and
imul
jne
dec
cmpsl
and
push
add
test
sahf
xchg
es
sbb
adc
cmp
aaa
imul
jmp
jb
mov
add
jp
enter
filds
pop
sbb
mov
mov
shrl
sarl
mov
push
mov
dec
sbb
mov
push
mov
mov
mov
mov
movaps
out
mov
movsl
jne
dec
rcrl
xchg
into
testl
jae
arpl
pop
js
arpl
sbb
push
dec
stos
pop
pop
push
dec
pop
or
jae
mov
jge
pusha
popf
cmp
aaa
add
movsb
xchg
lods
sub
pop
sub
test
pop
mov
and
fdiv
pop
mov
dec
xor
test
test
pop
and
lret
jl
push
or
inc
xor
xor
sbb
jmp
mov
pop
dec
xchg
cltd
stos
jbe
lahf
inc
jle
jnp
jo
insb
rol
idivb
out
call
push
ret
es
je
sub
inc
repz
aas
push
pusha
xchg
xchg
enter
jle
pop
xchg
sub
aad
aas
mov
fildl
jnp
pop
add
push
xor
push
add
es
arpl
jp
sub
xor
jns
or
mov
movsb
sub
mov
out
cmpsl
nop
push
sub
jno
xor
cmp
mov
rolb
mov
push
xchg
sarl
fidivrs
jecxz
dec
mov
jl
rsqrtps
testl
push
xor
sbb
in
rcrb
sbb
sbb
or
stc
pop
jno
jmp
fcoms
ds
out
xchg
jae
mov
mov
or
mov
pop
mov
popf
adc
out
cmp
mov
mov
xor
push
pop
xor
lret
adc
imulb
or
mov
or
mov
scas
sub
sti
cmc
mov
jae
int
or
add
xchg
inc
adc
xor
sbb
dec
dec
cmp
xchg
repnz
push
push
ficoml
stos
cli
daa
clc
inc
sbbb
xchg
stos
inc
daa
stc
insl
push
stos
dec
scas
in
loope
mov
pop
push
inc
lods
adc
in
sub
mov
mov
add
push
mov
cs
cmp
mov
repnz
cmc
ss
mov
movsl
and
mov
in
faddl
sahf
outsb
xor
jb
sub
jmp
adc
cmp
in
pop
mov
xchg
mov
mov
mov
mov
push
jb
cmp
scas
add
jl
outsl
jge
idivb
mov
sahf
jge
arpl
fwait
or
lret
mov
icebp
fs
and
sbb
mov
and
loope
insb
and
std
insl
mov
dec
shll
movsl
popf
notb
clc
jae
hlt
jl
and
push
add
jl
mov
mov
xchg
sbb
cmp
sbb
xor
cmc
push
dec
add
gs
push
cli
xchg
ret
cld
hlt
or
repnz
lock
outsl
aam
repz
sub
dec
push
sub
push
imul
or
aad
imul
sbb
pop
dec
jecxz
sub
mov
mov
pop
sub
jbe
pop
addb
in
fnstsw
loop
movsb
jecxz
sbb
ss
add
mov
and
cmpsl
es
or
lret
push
cmp
jge
and
mov
and
cmc
jns
mov
fnsave
mov
subb
jnp
lcall
fadds
push
mov
outsb
stc
sub
adc
imul
sbb
in
inc
je
movsb
inc
mov
roll
cmp
aad
dec
ret
dec
dec
scas
xchg
inc
dec
shrl
xor
shll
mov
mov
push
mov
divb
adc
jp
js
stos
ds
rcl
leave
xchg
jmp
jecxz
aad
jne
adc
dec
ret
xor
mov
mov
js
push
mov
aad
pop
jge
or
xor
sbb
dec
fisubrs
out
sahf
dec
inc
sub
popa
xor
les
lret
ljmp
cmpsl
add
pop
mov
push
inc
icebp
dec
in
je
js
andl
out
test
mov
es
fsubl
xchg
adc
adc
cmp
in
xchg
insb
or
les
inc
andb
or
fildl
or
in
push
aaa
mov
inc
cmp
test
dec
jb
push
mov
fs
mov
sbb
lret
push
mov
out
push
fiaddl
fdivrl
das
hlt
pusha
addr16
mov
sbbb
notb
cwtl
aas
xor
push
sub
dec
or
xchg
xchg
clc
jle
lods
pop
and
sbb
lcall
push
out
enter
jbe
xlat
and
inc
or
sahf
add
scas
inc
lret
push
gs
scas
inc
mov
mov
sub
frstor
fdivs
icebp
push
cmp
enter
sbb
jbe
cmpsl
pushf
jp
pop
lret
push
xor
lock
sbb
lahf
pop
jmp
add
jae
cli
pop
mov
xlat
push
sti
loope
mov
imul
lret
outsl
lahf
pop
nop
xchg
aad
insb
jl
mov
mov
stos
sub
aaa
dec
and
lret
mov
mov
test
jl
inc
add
inc
call
das
adc
hlt
movsl
fisttps
loopne
bound
sub
int3
movsl
pop
push
and
out
xlat
push
fsubs
xor
dec
sti
adc
lret
xor
mov
cmp
cmp
sub
jmp
test
sub
and
adc
adc
inc
outsl
sbb
cmp
in
stos
dec
cltd
jb
push
lods
add
enter
pop
es
inc
leave
add
fs
in
ja
mov
ret
gs
test
pop
jp
sbb
shrl
lods
mov
xchg
stc
push
dec
add
sbb
adc
jmp
movsb
icebp
jae
daa
bound
test
dec
iret
mov
xchg
fwait
xchg
pusha
or
or
pop
icebp
mov
sbb
and
mov
bnd
push
subb
pop
out
add
pop
test
cmpsl
xchg
sbb
xor
lods
xor
jnp
movsl
xor
inc
and
sahf
insl
sbb
mov
movsb
clc
shll
mov
addr16
sub
fcoml
jmp
inc
pushf
mov
pop
je
jecxz
cmp
mov
push
dec
int
fildl
insb
insl
cmp
call
xchg
add
iret
push
sub
xchg
insl
inc
cmp
test
or
iret
and
cltd
jle
lock
pop
ret
dec
mov
xchg
fmulp
dec
xchg
or
or
neg
jbe
push
mov
mov
insl
jnp
inc
lea
push
fistps
jns
stos
pop
mov
push
data16
fsts
cld
adc
xor
ja
push
or
test
or
xor
std
xor
mov
fs
push
ret
sbb
cmpb
and
je
std
test
stos
sahf
stos
sub
sub
fiadds
lea
idivl
fisubs
sbb
enter
dec
inc
xor
adc
popl
ja
mov
loope
and
imul
hlt
adcl
addr16
fisubrs
xchg
imul
out
mov
aaa
aas
mov
adc
add
and
mov
es
mov
aaa
pop
sub
clc
adc
inc
add
mov
mov
insl
cmpsb
hlt
mov
ds
nop
mov
aas
mov
out
sbb
popf
inc
sbb
addr16
or
lret
push
or
sub
cmpsl
cmp
add
out
mov
mov
int3
lods
xchg
add
dec
mov
cmpsb
mov
jo
adc
sub
xchg
mov
sbb
std
repz
push
mov
out
sub
mov
dec
clc
add
inc
iret
das
cmp
ja
pushf
pop
out
in
pop
arpl
mov
mov
mov
outsl
orb
xchg
push
loop
dec
dec
test
adc
push
and
xor
fdiv
pop
shl
push
dec
dec
hlt
lret
outsb
sub
inc
add
mov
arpl
add
scas
xchg
sub
test
push
nopl
jnp
or
xchg
pushf
loope
jl
push
push
aaa
fadds
int
shl
jp
inc
dec
nop
imul
adc
in
or
xor
insl
dec
call
mov
sbbl
and
sub
mov
push
popf
xor
push
fnstcw
testb
stos
mov
fildll
inc
xlat
xchg
lods
lods
jnp
xor
xor
out
jo
aaa
cmp
pop
mov
mov
inc
dec
sarl
mov
jae
or
or
or
in
jmp
mov
mov
fistps
and
sub
out
and
cmp
adc
xchg
pop
mov
xchg
icebp
iret
shlb
push
frstor
sub
add
and
push
shrb
jp
mov
pop
adc
cwtl
sub
xorps
stos
cs
lock
xor
mov
jo
ret
mov
xor
mov
das
inc
mov
jmp
push
ret
cmp
fisubrl
in
cmc
push
pusha
xchg
push
mov
add
add
outsb
and
clc
scas
xchg
inc
std
sti
xorps
cmp
or
call
scas
hlt
or
mov
or
mov
imul
stc
push
and
jmp
push
jp
dec
pop
xchg
out
cmp
jmp
cmp
sub
mov
xor
gs
xchg
into
sti
sub
iret
jg
pushf
dec
fisttpl
cli
in
push
or
cmp
fiaddl
push
pop
adc
xchg
mov
jle
loop
xor
cmp
sbb
push
push
stos
lret
aam
ss
stos
mov
xchg
or
or
jbe
and
jmp
insl
adc
xor
jge
rcl
xlat
cld
in
lcall
pop
lcall
mov
ja
lcall
mov
test
pop
ja
icebp
insl
stos
cltd
pushf
jnp
push
inc
lret
test
mov
jae
xlat
sbb
fcomip
sub
jecxz
test
jg
mov
daa
push
gs
addr16
pushf
enter
push
mov
adc
call
push
xchg
sbb
cmp
inc
hlt
xchg
mov
ret
push
leave
outsl
mov
stos
xor
out
add
ret
popa
pop
xchg
xchg
xchg
adc
push
cli
movb
push
ret
mov
cld
fcmovnu
out
jns
popf
add
pop
push
cmp
shl
adc
movsl
xchg
sbb
pusha
cmpsl
push
push
push
adc
mov
inc
loopne
out
mov
inc
lcall
mov
loope
sub
dec
ja
push
mov
fdiv
mov
std
js
into
lcall
ret
mov
test
cmp
shll
mov
xor
aas
xchg
xor
and
lods
mov
mov
addr16
lds
adcb
imul
pop
lods
dec
inc
scas
cmp
jnp
mov
xchg
mov
mov
cmp
lds
gs
andb
adc
dec
pop
jb
sahf
enter
mov
pop
popa
cmpsb
mov
add
jg
sbb
and
out
sbb
add
sbbb
mov
pop
mov
xchg
cmpsb
mov
jg
insl
in
in
jg
sahf
and
inc
mov
cmp
adc
scas
mov
rcll
xor
in
out
shl
cmpsl
lods
and
test
insl
adc
pop
mov
shl
lret
jecxz
repnz
rcr
xchg
fwait
mov
sub
inc
out
ret
add
iret
fbstp
in
add
cmp
jmp
cmp
movsl
cmc
dec
add
jg
cmpsb
ja
sub
sub
jg
and
sbb
mov
lret
in
ficoml
pop
pop
pop
sbb
gs
movsb
add
add
adc
testl
xor
movsb
fs
pop
adc
cld
outsb
cmp
shll
aaa
dec
scas
or
out
rorb
cmp
dec
mov
and
rorb
dec
sub
data16
jae
ror
pushw
add
add
mov
or
mov
jl
mul
inc
pop
das
or
pop
sbb
or
jmp
jg
inc
jae
adc
fwait
jbe
mov
push
pop
ficompl
cwtl
pop
sarb
and
jmp
add
xchg
ss
lahf
arpl
mov
fsts
pop
fildl
and
out
or
out
sbb
stos
in
mov
hlt
mov
inc
mov
jo
and
les
dec
mov
adc
aaa
pop
jge
sahf
aas
and
out
xchg
dec
enter
clc
enter
inc
stos
cmp
add
jae
dec
lea
imul
xor
mov
arpl
xchg
mov
repnz
inc
enter
das
cmp
mov
push
rclb
incb
jbe
mov
mov
inc
lods
jnp
test
out
xor
lret
pop
jae
lock
add
xorb
xchg
adc
ja
loop
loopne
jmp
lcall
pop
in
dec
xor
cmp
lret
cmp
push
dec
rcrb
dec
outsb
xchg
out
jge
incb
cwtl
in
or
adc
sub
lret
and
out
lcall
test
cmp
or
scas
ret
mov
shl
push
mov
outsb
xor
mov
outsl
dec
sbb
sbb
xor
xchg
movsl
ljmp
xor
inc
pushf
cs
sbb
test
je
loopne
sub
xchg
test
adc
mov
cmpb
and
dec
mov
add
les
cmpsb
jnp
pop
in
and
xor
mov
add
lds
add
fdiv
aad
jnp
add
or
pop
cmp
jecxz
and
jb
cmpsb
outsb
aam
test
cmpsb
and
pop
cs
inc
dec
cs
sub
pusha
lods
mov
sbb
fwait
xor
jo
adc
nop
xchg
bound
popa
shlb
or
sahf
sbb
lcall
and
inc
jne
or
adc
sub
xor
rorl
call
sbb
std
es
xchg
repz
movsl
mov
fs
out
inc
popa
scas
and
rclb
fmul
notl
inc
jp
add
and
xchg
fcomps
xchg
adc
je
mov
cmpsl
mov
inc
or
cmp
fs
inc
mov
push
and
call
rcrl
inc
mov
xchg
loop
add
out
or
inc
stos
add
ss
mov
fimull
mov
xchg
ror
int
in
loopne
out
test
lret
scas
mov
sbb
mov
dec
pushf
mov
flds
inc
hlt
mov
mov
adc
jle
fsubl
xchg
pop
xor
xor
das
cltd
shll
dec
sbbl
test
adc
dec
inc
jo
add
adc
and
xor
shl
mul
lock
andb
xchg
inc
addr16
ja
inc
jo
add
adc
and
xor
shl
mul
lock
andb
xchg
inc
addr16
mull
jo
add
adc
shlb
loopne
lock
andb
xchg
inc
addr16
ja
inc
jo
add
adc
and
xor
shl
pop
dec
lock
pop
js
push
in
adc
add
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
rorb
repnz
loop
pop
shl
fcompl
das
jb
arpl
adc
arpl
inc
and
mov
mov
xchg
repz
shll
and
bound
rclb
add
shrb
loop
xchg
ljmp
push
shlb
push
bound
adc
insl
or
lea
mov
pop
sbb
cmp
mov
mov
pop
arpl
dec
loop
sbb
sbb
scas
mov
lret
lea
popf
add
testb
gs
scas
push
orb
int3
xchg
out
movsl
mul
cmp
push
jecxz
scas
mov
arpl
and
jecxz
mov
mov
xchg
and
mov
fmull
inc
pushf
mov
pop
sub
insb
sbb
pop
xor
adc
notl
add
std
out
bound
mov
xor
jo
aas
jmp
mov
lea
dec
adc
push
ja
mov
mov
and
xchg
repz
lret
push
sub
jb
bound
adc
je
push
and
xchg
mov
fwait
xchg
mov
mov
daa
pop
jb
sbb
add
push
push
fs
cmpsl
mov
xchg
add
lret
scas
aaa
dec
adc
bound
add
aas
push
es
ret
repnz
ficomps
mov
and
bound
adc
arpl
push
and
mov
mov
xchg
repz
shll
and
bound
adc
arpl
push
and
mov
and
mov
nop
insb
into
daa
imul
mov
cld
loopne
push
push
cmp
xchg
jle
int3
xor
lahf
push
ss
pusha
stos
sub
push
das
mov
fisttpl
mov
push
sar
ror
push
sbb
mov
inc
mov
arpl
jbe
mov
sbb
xor
cwtl
in
mov
sbb
mov
scas
adc
ja
inc
btc
mov
jmp
sub
imul
pop
int3
xor
gs
lea
aas
flds
xor
out
push
lods
rorl
push
mov
pop
andb
jbe
nop
pop
lds
daa
mov
and
out
and
or
adc
pushl
pushf
adc
out
mov
pop
cmp
iret
or
dec
movsb
insb
cmp
xor
icebp
aam
xchg
pop
dec
mov
mov
shlb
jg
out
sub
mov
inc
cmc
mov
adc
lret
ss
insb
mov
push
iret
mov
cmc
mov
xchg
sbb
cs
fmuls
and
ja
aas
mov
jg
dec
add
mov
ja
pop
mov
mov
or
mov
xor
and
push
push
sub
or
in
test
inc
fcmovu
xchg
jge
out
fistpl
jmp
inc
arpl
or
clc
sbb
mov
hlt
punpcklwd
mov
or
enter
fs
xchg
adc
sbb
pushf
xchg
jl
mov
xorb
in
dec
into
ds
js
mov
loopne
mov
js
addb
aam
or
jg
xor
jmp
jne
or
test
cmp
dec
imul
jmp
popf
idiv
addr16
insb
pop
out
hlt
ljmp
popf
adc
xor
cmc
cmp
ja
loope
pop
cwtl
lahf
out
mov
mov
into
mov
jnp
and
dec
int3
xorb
or
data16
xor
xchg
ret
jb
dec
aad
mov
cmc
les
pop
popf
dec
push
mov
in
das
ljmp
pop
xor
mov
jno
or
pop
dec
ds
repz
outsl
mov
inc
sbb
pop
or
loopne
lcall
enter
movsb
gs
push
push
call
pop
enter
cld
add
xchg
pop
dec
test
cmp
pushf
xchg
movsb
or
cmp
mov
lock
adc
subl
or
mov
lea
pop
cmp
mov
adc
xchg
sub
lods
iret
mov
dec
and
adc
adc
outsl
stc
and
into
call
in
xor
mov
sub
cs
arpl
or
pop
and
inc
sahf
sub
loop
adc
push
lahf
scas
jp
in
mov
cs
pop
xchg
sub
icebp
mov
cmpsl
clc
mov
mov
bnd
push
clc
leave
fwait
iret
cwtl
repnz
movaps
in
inc
in
adc
xor
jp
fists
mov
pop
xor
imul
jg
jecxz
out
ret
dec
xor
mov
loopne
adc
addb
adc
cltd
dec
push
pop
mov
sti
movsl
mov
mov
mov
xchg
sbb
lea
imul
jle
std
lahf
inc
js
out
cld
popa
mov
pop
loop
pop
mov
insl
enter
movsb
push
fmul
add
ss
and
cmpsb
leave
lods
adc
and
icebp
jo
loopne
push
inc
out
push
mov
imul
and
pop
mov
add
sbb
mov
mov
mov
rclb
inc
adc
fistpll
rcll
cmp
add
add
jns
loope
inc
movsb
lcall
pop
cwtl
dec
mov
cltd
dec
ret
cmova
xchg
add
add
push
pop
cmp
in
pop
imul
aad
cmpsb
and
lcall
jg
rcll
shll
cmp
sub
jne
lods
loop
push
and
cmp
xchg
xchg
jnp
js
pop
sahf
in
aas
dec
fimuls
hlt
mov
movsb
and
cmovs
pop
xor
flds
cmp
fs
xor
dec
stos
aas
movsb
and
mov
lods
pusha
sahf
cmp
subl
fisubs
push
mov
lret
mov
test
push
mov
cmp
sub
pop
push
push
out
enter
mov
int3
dec
jecxz
and
inc
cltd
and
test
jo
xchg
ficomps
loopne
shlb
sub
or
cmpsb
and
ds
adc
cmp
mov
cmp
arpl
inc
shl
mov
shlb
sbb
push
pop
lods
and
adc
call
cmp
ret
fcmovu
or
testb
push
jl
xchg
lock
adc
int3
test
mov
xchg
inc
push
aad
fisubrl
stos
pop
sbb
divl
xor
mov
aas
and
and
inc
leave
pop
and
mov
out
add
int
outsb
mov
testl
mov
ficoms
sub
jo
pop
xchg
sti
mov
mov
pop
xor
cwtl
dec
test
mov
adc
icebp
out
fwait
into
mov
decb
mov
push
lret
add
mov
les
outsl
xchg
call
or
and
push
jno
and
into
sbb
adc
add
mov
mov
adc
inc
cmp
adc
pop
push
jns
iret
and
out
xlat
imul
add
jl
mov
mov
call
test
dec
sbb
dec
jp
popf
int
jns
xchg
cltd
ret
pop
dec
and
add
pop
lds
mov
jl
cmpsl
cmp
test
add
cmpsb
sub
loope
sbb
je
mov
sub
cmpsl
aam
and
inc
ja
data16
shrl
mov
jbe
shr
fsubs
mov
lret
rcll
mov
inc
lret
fadds
xchg
jo
adc
nop
inc
sbb
stos
adc
clc
jb
adc
push
jmp
lea
fs
sti
adc
mov
pushf
cmpsb
in
or
cmpsb
in
insb
shl
jg
lods
ret
inc
jo
shrb
push
mov
mov
stos
mov
shlb
fsts
lcall
sbb
jno
call
cld
andl
pop
pop
add
mov
mov
out
ss
out
xor
fcoml
adc
sub
rcll
sti
mov
out
outsl
pop
dec
dec
lds
xlat
mov
enter
lcall
scas
int
push
pop
inc
or
clc
adc
pop
mov
mov
test
pushf
xor
xor
mov
cmp
shlb
shrb
insb
test
inc
inc
leave
sub
mov
incl
cmpsb
call
lock
push
and
jp
xlat
sahf
lahf
lds
lock
je
mov
aas
push
add
and
dec
mov
or
xor
inc
xchg
sub
lea
jb
sub
stos
add
xchg
add
stos
mov
lret
fnsave
mov
mov
xchg
insl
push
jg
xchg
mov
add
inc
mov
leave
xchg
fs
sub
into
cmp
sub
inc
inc
or
pop
push
fistpll
push
cmpsl
mov
rorb
dec
mov
xor
outsl
mov
int3
daa
mov
mov
sti
fcmovnu
in
pop
mov
inc
cld
popa
inc
push
rorl
push
push
adc
setb
bound
xchg
push
cmpsl
lret
xchg
aam
aaa
fisubs
push
mov
push
repz
into
mov
std
xchg
cld
mov
jge
cmp
lret
ffree
or
mov
cmp
xchg
inc
cs
mov
cld
add
cmpb
movsb
fsubrs
add
or
fidivl
jbe
add
cmp
dec
mov
ret
lahf
mov
call
sbb
mov
jmp
mov
scas
faddl
daa
cmpsb
mov
lods
ja
cwtl
int3
hlt
decb
xchg
or
imul
pusha
push
jmp
outsb
jle
repnz
adc
sub
inc
mov
sarl
cwtl
xor
imul
inc
xor
adc
outsl
test
fnstenv
sub
jo
sbb
lcall
push
or
outsb
xchg
sbb
aaa
adc
xchg
outsb
push
lret
lea
inc
pop
dec
nop
or
fwait
and
mov
sbb
dec
imul
pop
pop
xlat
cli
xor
jecxz
lea
add
outsl
lahf
lahf
or
scas
dec
xlat
js
sahf
or
xor
leave
negl
adc
jbe
push
sub
pushf
fdivrs
mov
sbb
add
mov
pop
test
rcrb
xchg
dec
bound
loopne
sti
adc
push
push
jne
fistl
xchg
sarb
hlt
cmp
outsb
mov
push
push
movsb
cmc
pop
test
dec
repnz
mov
add
sbb
xor
movsb
hlt
xchg
dec
jne
push
cmc
mov
add
cmpsb
mov
dec
sti
and
mov
or
fsubs
mov
cmpl
or
pop
and
sbb
jle
jo
xchg
mov
jle
test
inc
sub
mov
repz
pop
sbb
mov
pop
lret
xchg
xor
insl
roll
xor
xchg
sbb
or
movb
fisttpll
xor
sbb
popf
sti
stos
ljmp
lods
inc
aad
inc
sub
adc
rorb
mov
or
dec
push
in
push
mov
mov
lret
xorb
cli
or
mov
adc
push
xor
out
lcall
push
rorb
inc
orl
adc
shrb
sub
test
aad
ds
inc
out
lret
inc
shrb
mov
sbb
xchg
jle
int
cli
push
out
ret
fchs
loopne
jmp
mov
jnp
out
movsl
idivl
pop
sbb
mov
and
lock
popf
mov
in
adc
jp
dec
jo
mov
inc
or
mov
push
out
lcall
lret
js
jecxz
mov
or
mov
loop
and
fsts
mov
mov
pop
pop
stc
pop
dec
scas
shll
decb
daa
outsb
daa
sub
push
sub
pop
cmp
xor
rcll
xchg
xor
out
pushf
aas
repz
mov
mov
loope
or
aaa
jo
imul
test
pop
icebp
push
cwtl
jl
loopne
cltd
mov
adc
xchg
adc
jae
dec
cld
cmp
jmp
pop
jnp
cmpsb
push
incl
jnp
mov
incl
dec
stc
mov
lods
fdiv
aas
jl
pop
adc
or
lods
pop
inc
enter
lahf
cltd
or
loope
mov
lea
out
push
and
pushl
inc
or
mov
xchg
clc
pop
out
or
cltd
or
leave
push
sub
mov
dec
lods
clc
sti
into
lahf
xor
xor
xor
dec
adc
lcall
fists
iret
icebp
and
pushf
mov
add
push
sub
rcrl
xchg
mov
sahf
outsb
xor
and
mov
xor
outsb
pushf
and
lret
sbb
je
add
pop
mov
push
faddl
call
ds
xchg
in
sti
cmc
fisttps
loope
xchg
sbb
lock
out
inc
jbe
in
test
in
push
cmpsl
xchg
jle
mov
nop
pop
sub
jmp
xor
sub
pcmpeqw
in
sub
aam
or
lret
stos
clc
ja
push
push
bound
push
cs
mov
sbb
mov
stos
repnz
lret
shrb
in
ret
mov
ficompl
jle
aaa
pop
dec
das
test
xor
scas
xor
jns
leave
out
mov
adc
pop
cmpsl
dec
sbb
fcomps
iret
jp
jmp
out
lret
and
inc
pop
js
sub
enter
sub
fcmovb
and
mov
add
popf
aad
or
sbb
mov
pusha
xchg
in
jns
pop
cmpsl
mov
in
pop
lock
insl
call
ficoml
std
inc
pop
jmp
sahf
aas
ret
pop
das
dec
cmc
frstor
jo
jae
out
inc
fisubrs
aam
and
imul
ds
iret
push
dec
cmpsl
aas
rcrl
cmp
dec
dec
jecxz
jecxz
popf
dec
hlt
cli
mov
cmpsl
fsubl
loop
outsb
movsb
mov
and
les
adc
in
inc
movsb
xchg
rorb
jo
mov
cmp
fsubs
stos
mov
in
dec
jne
sti
xor
mov
cbtw
push
push
addl
pop
clc
dec
jae
xor
mov
sbb
inc
scas
jg
inc
aam
dec
mov
loope
jo
xlat
sahf
movb
loope
sub
sub
iret
aam
sti
js
dec
stos
imul
lock
cltd
xor
cmc
push
and
inc
adc
repz
add
cltd
sbb
movsb
inc
hlt
jmp
mov
mov
or
push
movsb
out
imul
test
lea
and
lds
cli
mov
mov
roll
out
lods
mov
lea
xchg
aad
inc
mull
and
shlb
insb
ljmp
sbb
sbb
push
xor
jmp
rcr
mov
dec
xor
and
mov
jmp
sarl
cmp
clc
cmp
je
and
sbb
xchg
sub
in
movsb
inc
cli
mov
inc
filds
outsl
mov
dec
or
loope
push
ss
jg
xchg
test
dec
cmp
faddp
jecxz
les
lods
pop
inc
out
divb
aam
loope
daa
xchg
and
cli
push
and
repz
cmp
aam
sbb
out
cltd
lock
clc
dec
loopne
and
dec
push
pand
and
repz
iret
pop
imulb
xchg
push
adc
aad
orb
xchg
xor
clc
adc
js
sbbb
call
in
inc
daa
mov
xchg
lahf
sahf
fnstsw
ja
lcall
dec
pushf
add
lea
mov
pusha
in
pop
add
cmp
mov
fsub
push
cmp
inc
cltd
test
or
jno
mov
cmpsb
out
mov
inc
push
mov
mov
mov
mov
jae
sarb
xor
jmp
dec
mov
in
lahf
lock
dec
adcb
xchg
xor
xor
pop
dec
test
inc
pop
ja
add
stos
aas
xor
cmc
jae
lods
lcall
inc
jge
mov
xlat
push
inc
dec
sbb
or
jb
test
or
ja
mov
mov
repz
dec
int
xor
push
iret
mov
mov
jle
loop
out
ljmp
fwait
jne
mov
outsl
cmp
pop
mov
out
nop
pop
push
dec
out
daa
fisttpl
fadds
or
jg
inc
pop
orb
jbe
cmp
pop
fucomi
insl
dec
mov
mov
lea
popf
ss
jmp
xchg
fdivr
and
inc
inc
jecxz
std
imul
bound
jne
rcll
add
xlat
xor
xor
stos
or
loop
cmpsl
add
inc
call
jl
out
inc
sbb
mov
adc
sub
pusha
pop
add
sub
adc
mov
adc
xlat
pop
cmp
std
and
mov
fdivrl
push
cwtl
aam
sub
and
dec
mov
cmp
cmc
lods
ss
sub
pop
in
lock
xorl
jno
add
daa
dec
lahf
sbbl
sub
jmp
jne
repz
inc
lock
pop
add
mov
jmp
cmp
jns
or
nop
es
dec
dec
push
out
fdivrs
outsl
cmp
data16
jno
mov
fidivrl
pop
movsl
cmp
bnd
mov
dec
movl
or
xchg
repnz
lahf
mov
jmp
xor
inc
dec
sbb
sbb
xchg
cmpsl
inc
push
xor
add
mov
pop
pop
dec
push
rcl
cmp
aad
adc
inc
fnstsw
push
cmpsl
rorb
add
insb
cli
sti
call
arpl
xchg
nop
jle
out
adc
mov
add
lods
adc
fsubl
pusha
push
xor
scas
lcall
daa
js
mov
arpl
rcrl
mov
add
lea
or
dec
ret
rcll
or
xchg
inc
lcall
cmpsl
mov
iret
jl
test
inc
inc
insl
xchg
push
xchg
in
mov
cmp
pop
mov
ret
mov
mov
js
mov
sbb
ret
cmp
push
repnz
scas
pop
in
mov
xchg
add
pop
arpl
dec
mov
mov
test
aas
lds
clc
lock
inc
xor
imul
repz
into
aas
mov
push
and
cmp
mov
cmc
xchg
ja
sahf
inc
lods
loope
arpl
and
in
jne
out
dec
outsl
push
test
jg
pop
pushf
xchg
js
dec
push
adc
xchg
and
push
or
test
cmc
imul
push
nop
fldcw
enter
arpl
data16
movsb
xchg
fldenv
add
scas
aam
sbb
mov
lcall
js
in
xchg
fistpll
dec
and
pop
enter
jne
imul
or
movsb
cli
dec
movsl
dec
lret
aaa
xchg
lods
or
jmp
test
mov
aaa
jo
cmp
adc
sbb
push
jg
ss
adc
insl
cmpsb
stos
mov
jno
ds
inc
xchg
dec
push
sarl
inc
nopl
es
cmpsl
adc
das
jne
in
xlat
add
ss
mov
adc
call
cwtl
and
rorb
std
int3
sbb
xchg
cmpsb
popa
ret
gs
pop
mov
rcll
push
cltd
xchg
mov
push
lock
xor
or
mov
int
or
or
and
mov
filds
adc
mov
mov
pushf
out
lret
test
lret
stc
pop
jmp
sub
movsl
mov
lea
imul
add
movsb
ja
mov
out
pop
jae
inc
imul
cwtl
mov
mull
and
pop
popf
adc
mov
in
icebp
mov
lret
int
xlat
jb
mov
pusha
adc
hlt
mov
sarl
inc
and
xchg
mov
push
add
push
mov
cmp
jb
xchg
adcb
test
mov
sahf
test
repz
jg
les
sbb
add
iret
inc
xchg
jmp
addr16
lods
enter
das
pop
sbb
insl
sbb
scas
subb
push
mov
insb
sti
xor
fs
fbstp
sbb
fisubrs
mov
ret
xchg
push
fmull
aad
fdivs
or
add
inc
and
dec
mov
or
out
cmp
sarl
push
push
or
scas
movsl
lret
and
pop
test
sbb
subb
rcrl
adc
push
mov
cs
add
insb
push
xor
jge
hlt
aam
lahf
arpl
dec
popa
push
sbb
fs
nop
sahf
or
mov
or
scas
cmp
xor
pop
fwait
xchg
arpl
loop
aam
jg
fisubl
loop
add
mov
pusha
imul
mov
pushl
fs
popa
fisttpl
dec
xor
jl
sub
sub
sahf
aad
and
xchg
xlat
mov
jecxz
sti
sbb
fdivrl
adc
out
dec
lret
xor
adc
cmc
sbb
loopne
cli
push
pop
mov
dec
jmp
gs
and
sbb
dec
pusha
iret
ja
aam
nop
aaa
fistps
nop
add
sbb
lock
mov
outsb
jnp
je
je
inc
and
addl
cmp
jnp
fistps
mov
jns
aas
sbb
jecxz
std
xchg
mov
xor
pop
or
push
fnstcw
aad
aad
imul
sub
mov
outsb
dec
pop
scas
sub
es
lock
mov
outsb
nop
adc
xor
xor
mov
lock
faddl
adc
mov
int
cmp
lahf
push
loop
xor
xor
sub
jl
adcl
mov
and
bound
adc
arpl
push
and
mov
mov
xchg
repz
shll
and
bound
adc
arpl
push
and
mov
mov
adc
and
shll
ret
push
xor
jb
bound
adc
arpl
push
and
mov
mov
xchg
repz
shll
mov
adc
sti
jb
inc
lods
push
mov
in
inc
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
arpl
dec
inc
jnp
imul
inc
and
sub
shr
mov
mov
jo
sub
push
imul
xor
add
adc
loopne
lock
mov
fwait
mov
cmpb
dec
sarb
imul
push
or
cmp
sub
mov
lret
leave
ret
fmulp
stos
push
pop
cmp
inc
pop
cmp
fidivrl
cmp
cmpsl
mov
mov
test
xchg
bound
aad
push
jecxz
hlt
lea
popf
and
data16
pop
pop
in
add
dec
xor
pop
jmp
cmp
stos
mov
lock
mov
cmc
mov
mov
jp
jg
sbb
sbb
rclb
jnp
call
cs
enter
inc
nop
mov
lods
int
fcompl
mov
jge
sahf
jae
rolb
fsub
push
mov
js
pushf
sti
lahf
fsubrp
mov
jp
push
push
and
fimull
and
sub
scas
xchg
stos
cmp
dec
inc
jnp
imul
dec
or
cmp
lret
mov
loopne
call
mov
add
dec
je
dec
je
adc
mov
mov
shl
fdivp
jmp
sbb
cmp
jle
and
xchg
test
fxtract
jmp
or
and
add
jae
xor
add
adc
loopne
lock
sar
jmp
fwait
mov
cmpb
dec
inc
jnp
imul
xor
add
adc
loopne
lock
sar
jmp
fwait
mov
cmpb
pop
orb
rorb
mov
adc
loop
cmpsb
dec
fs
in
mov
dec
sub
inc
mov
movsb
icebp
add
fcompl
adc
ss
xor
push
jecxz
enter
lahf
adcb
push
lcall
sub
fwait
leave
adc
jb
lods
xchg
adc
adc
orb
mov
mull
jnp
pushf
jl
dec
jne
loope
push
mov
rclb
jb
jmp
outsl
movsb
ficoml
stc
mov
mov
lods
pop
ss
adcb
adc
mov
nop
dec
adc
dec
pop
mov
pop
jbe
xor
aam
jne
cmp
rcll
pop
adc
sbb
mov
fbld
test
inc
sti
ret
jl
scas
cmp
xor
clc
sbb
outsl
iret
mull
scas
div
fcmovu
push
jae
add
dec
dec
fnstsw
jo
sub
mov
xchg
jg
jo
pop
aaa
xchg
adc
jecxz
loope,pn
pusha
dec
dec
sbb
push
or
or
push
cmovne
movsl
fcomps
push
scas
cmp
cli
pop
fcomps
mov
in
into
jno
scas
fwait
and
push
in
lods
sti
cmpsl
pop
ds
sbb
es
imul
es
inc
andps
and
stos
vmwrite
je
lret
out
dec
lods
pop
jae
adc
scas
mov
push
fildll
mov
sbb
sub
fiaddl
out
push
ss
mov
divb
cli
sahf
sub
xchg
cmp
outsl
data16
sbb
mov
pop
or
xchg
in
cs
xor
cmp
cld
movsl
cmp
shr
out
bound
xor
movsl
das
xchg
imul
add
and
in
mov
lods
stc
xchg
jnp
dec
je
mov
sub
fnstsw
fisubrl
xor
int3
jne
add
out
dec
xor
frstor
js
pushf
hlt
add
jne
dec
push
push
mov
mov
push
and
and
jge
leave
mov
mov
and
push
and
push
xchg
lea
shrl
mov
xchg
popf
mov
inc
in
push
xor
std
and
xor
test
mov
ret
mov
mov
test
inc
mov
aam
call
xchg
inc
fcomi
into
ret
mov
pop
fdivr
mov
roll
dec
out
loop
mov
jle
sbb
sbb
js
mov
push
lret
lea
mov
stos
rcl
adcl
mov
rcrb
xchg
out
pop
pusha
push
jg
mov
and
mov
or
or
push
inc
jecxz
sbb
sbb
aad
jno
aas
pop
xchg
movsb
test
call
inc
sbb
mov
lret
inc
add
divb
and
cmpsl
pop
and
insb
test
mov
or
push
iret
test
dec
mov
xor
jns
pop
gs
inc
jnp
mov
int3
fisttpll
cmc
xchg
ret
sub
inc
int
mov
xlat
and
sub
inc
enter
imul
and
pushf
sbb
xchg
jnp
mov
xor
and
mov
icebp
sub
dec
dec
add
repz
xchg
shlb
adc
fistps
mov
in
rorl
addl
cli
out
jle
dec
in
add
or
popl
cli
clc
add
lods
or
adc
ret
popa
mov
mov
decb
mov
daa
das
and
inc
inc
mov
test
cmp
mov
test
mov
dec
js
enter
push
jno
iret
pop
fmul
push
clc
pop
sub
mov
movsb
lods
xchg
xor
daa
xor
gs
adc
push
mov
push
mov
insl
lods
jg
addr16
cmp
push
inc
negb
out
sub
mov
movsb
mov
arpl
cltd
mov
xchg
push
lock
pop
mov
in
lret
sar
stc
lret
push
fs
mov
mov
in
lret
test
loope
loope
push
dec
mov
rcrl
dec
iret
in
jne
pop
repz
fwait
dec
sbb
fnstcw
adc
bound
xor
xchg
int
adc
fisubrl
enter
in
in
pushf
mov
inc
or
inc
push
fs
es
ds
mov
and
cmp
cmp
mov
add
testl
lcall
mov
sbb
daa
add
inc
xchg
push
imul
mov
cld
scas
test
int3
push
adc
roll
inc
gs
cmpsl
xor
push
xor
in
inc
repnz
pop
xchg
xor
loop
xor
xor
cmp
mov
fdivp
inc
dec
imul
out
negl
aaa
insb
dec
fnsave
xchg
push
pop
outsl
or
jo
fistpll
insb
pop
dec
lds
paddq
pusha
cmpsl
icebp
gs
rcll
cmp
jmp
push
test
fnstsw
adc
pop
cmpsb
cmpsl
xchg
dec
jge
sbb
or
inc
out
pop
push
push
cli
clc
xchg
test
push
pop
mov
stos
enter
stos
insl
jnp
popa
cli
mov
xchg
inc
lret
setne
jecxz
clc
and
mov
push
jge
xchg
nop
test
ja
rclb
xor
dec
mov
lret
dec
push
sbb
aaa
cmpsb
repz
mov
mov
or
unpcklps
mov
dec
pop
fnstcw
mov
lock
or
inc
pop
add
mov
xor
out
addr16
sbb
jno
pop
out
xor
and
xchg
sbb
lods
jp
pop
out
xor
sbb
or
cmpb
popa
push
or
push
dec
adc
lds
ss
jnp
test
rcl
int3
in
mov
shr
les
fisubs
int3
dec
in
add
xor
and
lcall
or
arpl
fsubrl
add
fisubl
fldl
das
pop
mov
in
aam
scas
jecxz
mov
rcr
std
mov
pop
mov
or
lret
cmp
mov
enter
xorb
xchg
mov
or
jae
and
out
ja
inc
std
mov
dec
lcall
iret
push
mov
loope
lahf
sbb
mov
into
imulb
subl
sub
cmp
jge
mul
rcrl
out
add
test
and
cmc
insb
or
shlb
push
jbe
mov
and
sti
jo
and
pushf
xorb
jp
mov
aad
test
jo
orl
arpl
mov
and
push
je
jg
clc
pop
lret
mov
inc
and
cmp
push
insb
scas
popa
and
shlb
pop
fs
dec
push
dec
subb
in
inc
in
xchg
sahf
dec
call
pop
or
lds
cltd
popa
mov
rolb
call
push
jl
repz
inc
or
adc
pop
push
icebp
adc
loop
cmp
inc
movsb
inc
lods
xchg
xchg
mov
fistl
jb
inc
das
fstpl
jmp
add
stos
stos
orb
pop
orl
xchg
or
repnz
test
sbb
ret
push
subl
fwait
std
push
lods
divl
mov
mov
popf
insb
fwait
lcall
jbe
popa
or
push
outsb
lret
sarl
sub
mov
sbb
jmp
adc
movb
aam
cld
sbb
cmp
sub
aam
pop
mov
sub
in
jb
fldcw
push
loopne
aad
mov
pushf
or
sub
sub
xchg
and
cmp
mov
lods
mov
test
adc
rorl
dec
sub
xchg
outsb
dec
and
scas
test
and
or
daa
movsb
sbb
mov
add
iret
cmc
sbb
xchg
mov
sahf
xchg
roll
gs
mov
mov
cmc
pop
pop
insl
mov
push
fstps
mov
mov
movsl
pusha
ljmp
cmc
dec
add
jo
jns
cmp
mov
adc
addr16
push
mov
sbb
add
cmpsl
cmp
pop
outsl
int3
aaa
scas
mov
shlb
cld
add
mov
shrb
pop
mov
adc
mov
dec
imul
shr
out
test
outsl
call
cmp
pop
imul
lock
mov
icebp
shll
outsb
jl
icebp
and
xor
js
cld
jmp
mov
push
jle
xor
subl
gs
pop
ret
cli
mov
sub
and
into
xchg
lea
mull
xchg
add
push
mov
lret
mov
mov
loop
mov
pusha
xor
aad
dec
mov
lret
les
push
movsb
mov
xor
add
dec
mov
out
mov
cmc
lret
dec
jbe
mull
add
push
inc
push
and
inc
jle
test
icebp
adc
and
lahf
jno
scas
add
mov
rcll
xchg
repnz
call
cmc
mov
add
xchg
mov
adc
xor
ss
cli
fdivr
sti
mov
idivl
xor
mov
cmp
std
sub
idivl
ss
test
lock
pop
in
in
aaa
sarl
cmp
movl
call
shlb
add
dec
movsl
and
xlat
add
nop
lods
xchg
pop
fwait
sbb
std
xor
cmp
in
addr16
mov
int3
jg
mov
cmpsb
das
fdivrl
add
stc
push
push
pop
scas
push
or
inc
cmp
out
push
mov
ljmp
sub
es
insl
cmp
mov
add
jle
sbb
xor
pop
jge
xor
mov
shlb
shrl
dec
or
sbb
mov
xor
out
loop
push
and
mov
lods
loopne
lods
add
or
popf
movsl
jns
push
xchg
push
or
mov
xchg
xchg
lcall
lods
arpl
cld
mov
dec
pop
sbb
adc
cmp
push
jl
loopne
pop
aas
jns
imul
sub
pop
cmp
movsl
mov
cmpsb
outsl
or
loope
pushl
call
mov
pushf
mov
cmp
push
jle
mov
outsl
orl
xor
dec
fcompl
ret
fbld
inc
cmp
xor
fidivl
pusha
mov
sbb
and
flds
cmpsl
xchg
cwtl
dec
out
daa
repz
addl
cmp
in
clc
into
scas
fsubp
push
in
inc
add
loope
pop
les
or
mov
popf
adc
xchg
in
dec
rep
adc
lods
sub
scas
in
jno
hlt
ficoml
leave
cmp
push
mov
mov
cmp
mov
ja
adc
pop
xor
inc
dec
dec
pop
pop
insl
mov
shlb
push
into
addr16
push
lods
iret
into
lds
iret
mov
pop
andl
jne
lock
imulb
ja
mov
or
fidivrs
cmp
adc
xor
xchg
xchg
push
int
pop
iret
ljmp
cmp
popa
aaa
hlt
and
fwait
inc
lahf
xor
add
dec
test
xorb
and
test
nop
insl
and
dec
addr16
sbb
mov
xor
and
or
shll
data16
xor
imul
push
push
mov
aas
ja
rclb
std
iret
jecxz
insl
aam
xor
cs
mov
cltd
aam
and
fcmove
inc
add
push
lcall
bound
js
add
lret
fwait
push
inc
dec
push
xlat
cmp
stos
clc
cmp
rcll
push
adc
mov
les
movsb
xor
jg
jmp
insl
or
inc
adc
aam
cwtl
and
ja
fisubl
xchg
push
call
mov
daa
sbb
inc
xlat
icebp
lret
push
ja
repnz
outsb
or
push
cs
popf
push
push
push
test
lea
jmp
adc
pop
fcmovu
mov
ss
rorb
scas
sub
cwtl
sub
ss
push
testl
addr16
pop
adc
mov
xor
pusha
repnz
bound
pushf
mov
out
mov
into
shll
repnz
fs
sbb
mov
imul
andb
cld
sti
incb
mov
pop
pop
rcl
pop
subb
hlt
add
loop
int3
lods
aam
inc
fsubrs
clc
out
mov
inc
sub
mov
andb
cs
sbb
mov
mov
jno
test
je
fwait
ja
mov
loope
mov
cmp
std
jge
ljmp
call
stos
js
fidivs
inc
out
mov
stc
sar
test
rcll
sbb
and
cmpsb
jne
adc
lret
mov
lods
jbe
mov
inc
out
xchg
push
xor
mov
jp
add
xchg
outsl
mov
xor
scas
add
xchg
into
add
push
nop
fs
cmp
and
pop
xchg
adc
stos
icebp
movsb
ljmp
or
lds
adc
iret
sahf
pop
xchg
cmp
fsts
cmpsb
add
icebp
inc
sub
push
xor
inc
into
aam
addr16
xor
mov
mov
jno
push
fs
xor
rorl
ljmp
xor
rorl
dec
mov
mov
sbb
bound
insb
sub
rcr
das
adc
test
pop
rorb
lds
jns
push
push
adc
push
das
dec
fnstcw
push
addb
fimuls
int3
pop
xor
in
lea
and
jmp
cs
xchg
and
push
and
mov
push
imul
mov
jecxz
sbb
mov
dec
jmp
mov
js
inc
rorl
cmp
xor
fimull
or
and
pop
int
cmpl
jne
inc
rorl
leave
fcmovnb
jl
mov
mov
ss
repz
fimull
or
xchg
icebp
iret
xlat
sbb
int3
jg
lcall
ljmp
movsb
adc
sub
mov
adc
mov
pusha
xchg
rolb
push
xchg
arpl
sbb
inc
jns
push
and
lret
push
inc
xor
xchg
mov
cmp
bound
cld
or
sub
mov
test
cmc
cmp
flds
lcall
or
and
aaa
js,pt
pop
fwait
bound
or
push
scas
sar
inc
movl
incb
test
and
roll
sbb
out
hlt
scas
xor
mov
aad
aad
jle
lock
cmpsl
aas
xchg
jne
jecxz
cltd
sbb
jnp
icebp
sarb
imul
sahf
jns
jb
cmp
xchg
bnd
das
dec
test
jge
sub
lret
fnsave
and
mov
ds
aaa
inc
ret
cmp
push
push
jg
add
dec
xor
jg
mov
test
cmp
stos
fwait
arpl
cmp
sub
mov
inc
xor
xchg
sbb
leave
dec
mov
flds
xor
jecxz
mov
push
shll
and
test
push
test
pop
add
fisubrl
xchg
mov
es
lods
shlb
push
or
inc
dec
dec
jecxz
adc
popl
adc
xor
add
fdiv
out
ljmp
cmp
sub
flds
pop
movsb
xor
fnstsw
inc
into
and
lahf
push
sbb
rorl
gs
jb
push
push
push
mov
dec
stc
or
lahf
mov
subl
int3
xor
add
rcrb
test
xchg
ja
push
sub
je
call
imul
push
ds
clc
fwait
test
push
mov
call
adc
jle
and
cmp
outsb
stos
iret
out
in
cmp
inc
mov
dec
add
xchg
stc
loopne
pushf
ficomps
or
pop
sub
cmc
cmp
decl
pop
xchg
cltd
cmp
push
dec
adc
jecxz
mulb
push
dec
bound
pop
inc
add
mov
mov
mov
mov
jp
lahf
mov
stos
pop
pop
push
test
aam
mov
stc
mov
daa
es
and
clc
dec
popa
mov
mov
dec
adc
jb
and
xor
andl
js
insl
pop
sub
pop
bound
std
in
pop
cmp
inc
sub
jo
cmp
push
and
push
push
stc
xchg
iret
aas
and
loop
popa
or
call
std
xorb
cmc
ljmp
out
sub
sub
popa
jmp
stos
xchg
shrb
sbb
sub
subb
mov
subl
mov
inc
jae
imul
sahf
xor
jecxz
decl
inc
das
adc
adc
loop
adc
and
lret
popf
subl
xlat
lcall
ljmp
or
aas
mov
movsb
ds
dec
sbb
sub
fcomps
jmp
fists
test
mov
sbbb
lret
fisttpll
test
call
call
xchg
rcll
cmpsl
push
push
xchg
leave
jns
xchg
push
fdivs
push
ror
dec
fists
stos
xor
cld
daa
loopne
or
xchg
jns
sub
mov
jae
jns
fsubrp
sbb
mov
xorb
into
push
push
lock
add
mov
mov
testl
iret
imul
fistps
add
outsb
adc
out
sbb
aas
fwait
jp
lret
adc
mov
dec
out
dec
sbb
xchg
jg
aaa
pusha
pushf
movsb
fimuls
into
mov
insb
xchg
pop
xchg
xchg
ret
or
mov
sub
jle
fcompl
mov
in
push
data16
ss
push
push
das
mov
mov
fidivrs
jecxz
adc
test
jne
jno
mov
std
insb
lods
out
pop
lods
fucomip
aas
loop
xchg
push
mov
addr16
mov
test
jle
das
add
adc
insl
jecxz
xchg
rclb
mov
aad
mov
stos
loop
and
rcrl
aaa
mov
xchg
mov
jnp
add
add
xor
dec
add
pop
sub
stos
mov
aam
adc
dec
xor
les
rorl
arpl
inc
hlt
arpl
ret
lahf
popa
push
sarw
addl
nop
xlat
mov
mov
in
insb
xchg
mov
hlt
sbb
dec
in
inc
pushf
push
popa
mov
pop
push
iret
shl
jle
jmp
mov
adc
inc
fisubrl
push
mov
pop
cli
outsb
and
mov
dec
adc
sbb
leave
in
popa
sahf
cmc
es
mov
dec
icebp
xor
pop
inc
and
or
ljmp
or
lahf
adc
cld
pop
ljmp
and
out
icebp
jb
xlat
scas
sbb
stos
ja
mov
dec
movsl
cld
mov
arpl
cmp
movsl
pushf
hlt
pusha
and
cmpsb
cmp
cli
pop
mov
and
shlb
xchg
jb
jge
mov
int3
sbb
das
jne
test
loope
enter
inc
adc
scas
bound
loop
in
outsl
ljmp
add
fwait
and
pop
decb
xor
es
mov
lret
fiaddl
jmp
inc
xor
rcll
adcb
pop
leave
xchg
cmovae
lock
je
sbb
cmp
cs
push
fwait
or
sub
cli
mov
orl
xor
add
add
ljmp
divb
mov
es
jp
test
push
popf
push
mov
enter
inc
arpl
jmp
test
ror
mov
ljmp
jmp
imul
add
jge
cs
out
in
inc
ffreep
mov
mov
outsb
push
pop
cltd
inc
gs
and
pop
dec
adc
mov
out
mov
sbb
sbb
jmp
out
cli
inc
mov
popa
fs
lret
pop
aaa
sti
jecxz
inc
inc
sub
mov
hlt
inc
and
loopne
jmp
add
mov
adc
jns
sahf
insl
les
pop
jle
test
pusha
scas
maskmovq
mull
adc
test
inc
lea
aaa
imul
int
adc
popa
lods
xchg
fsubrs
adc
insl
stc
int
push
jge
mov
xor
dec
addr16
dec
pop
jp
imul
xor
add
adc
loopne
lock
sar
jmp
fwait
mov
cmpb
dec
inc
jnp
imul
xor
add
adc
loopne
lock
sar
jmp
fwait
mov
cmpb
dec
and
push
sbb
or
cmp
sub
fcomi
lret
shr
mov
mov
sub
sbb
outsl
and
and
loopne
punpcklwd
rcrb
inc
outsl
push
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
sub
mov
adc
lods
sbb
or
cmp
sub
pop
decl
jl
insb
sub
mov
jge
dec
cld
pop
cwtl
mov
cmp
sub
xor
dec
int
and
adc
loopne
lock
adc
mov
sahf
outsl
shlb
pop
in
or
insb
inc
pushf
push
loop
leave
imul
jmp
inc
mov
lcall
inc
insb
in
cld
rcll
ret
out
adc
jge
enter
sub
xchg
pop
jno
arpl
jge
loope
popf
rorl
stc
hlt
pop
popf
addr16
xchg
inc
mov
jl
dec
int
fnstsw
sub
adc
fdivrl
pop
pop
adc
jecxz
pop
mov
pop
std
mov
xchg
fnstsw
jge
mov
sub
sub
hlt
lods
in
lods
dec
jnp
mov
insl
sub
paddw
insl
int
lds
dec
lods
loop
xchg
fwait
jg
mov
sbb
fs
int
test
scas
mov
jl
call
or
fsubrl
dec
es
insb
mov
movsl
lret
test
in
xlat
jl
add
pop
mov
imul
lods
pop
rorl
dec
stc
inc
in
xor
or
add
push
sub
fcomps
pop
fmull
or
add
lret
popa
in
jne
and
cld
pop
in
lods
sbb
or
cmp
sub
pop
std
dec
int
cmp
lods
insl
fdivrl
dec
cld
pop
in
lods
sbb
or
cmp
sub
pop
std
dec
int
adc
pop
outsb
addb
jns
outsb
or
scas
sub
jb
scas
sbbb
decb
jl
mov
sub
mov
int
fwait
in
insb
xor
or
mov
mov
lret
fcoms
stos
mov
jp
enter
xor
and
out
cmc
xor
ljmp
fcmove
nop
xor
test
das
daa
leave
inc
pop
pushf
push
or
mov
call
jb
pop
test
mov
sbbb
adc
in
sar
fsubl
loope
mov
sbb
je
in
xor
push
push
or
push
addr16
fmul
aaa
xor
fs
inc
addl
pop
lds
mov
out
rorl
lock
aad
imul
push
inc
xchg
loopne
xchg
dec
dec
cs
adc
pop
mov
sub
sub
subb
dec
test
xchg
cld
xchg
cmpsl
test
fildl
jl
jbe
dec
lock
je
out
dec
incl
ljmp
mov
dec
cmp
out
fsubs
add
or
es
clc
lahf
cmc
inc
pusha
jl
xchg
push
cmc
inc
aaa
sub
js
dec
test
mov
pop
outsb
push
dec
mov
jno
xor
lods
xor
andb
xchg
jmp
adc
ja
or
popa
enter
xor
loop
inc
and
outsb
lcall
fsqrt
pop
xchg
scas
and
cmp
cld
mov
and
in
loopne
adc
push
lods
adc
cmp
clc
loopne
pop
inc
inc
in
xorb
jnp
outsl
pop
shrl
adc
inc
insb
mov
shll
inc
push
loopne
ret
hlt
xchg
jne
mov
inc
push
adc
fwait
aad
sub
jbe
loopne
or
sbb
jo
or
loop
arpl
inc
dec
outsl
fsubr
xchg
lahf
or
sbb
js
add
jle
jge
jo
jl
mov
sub
adc
cmp
stos
jmp
or
cmp
mov
cmp
mov
cmp
adc
sub
dec
jo
clc
cltd
cltd
jno
icebp
imul
ret
icebp
xor
or
lock
fdivrs
sbb
sbb
dec
inc
into
ljmp
ds
stc
mov
and
push
movsl
ret
cmp
stc
mov
jns
pushf
mov
ficoml
cmp
das
sbb
std
push
jle
push
xchg
cmp
push
notl
bound
cs
cmpsb
mov
fcoml
push
jge
lods
and
mov
pusha
test
sbb
sbb
sarb
xchg
lods
imull
adc
jecxz
fbstp
std
cmp
mov
ret
mov
sbb
mov
sbb
ja
lret
leave
inc
or
or
add
icebp
mov
pop
cmp
push
leave
adc
cwtl
mov
sbbl
roll
movsl
pop
sub
in
jae
sti
fs
lea
cmp
in
pop
mov
hlt
imul
loope
stc
in
mov
push
cltd
sbb
cltd
cmp
nop
push
push
xchg
sbb
inc
lods
push
je
mov
mov
pop
push
cmp
rsm
dec
loopne
mov
or
xchg
mov
dec
sbb
pusha
mov
mov
mov
xor
lcall
cmp
mov
pop
adc
sub
lds
rclb
xchg
dec
mov
das
sbb
xchg
sbb
mov
iret
jnp
insl
pusha
aam
rcrl
push
adc
inc
adcb
shll
or
sub
out
mov
ffree
dec
gs
out
daa
lret
inc
jo
cltd
lahf
cs
int
into
test
cltd
jge
and
cmp
inc
movsl
shlb
pop
js
clc
pop
femms
cltd
shlb
lcall
cmp
lods
faddl
fwait
add
test
loope
in
data16
jge
xchg
pop
lock
push
in
xor
and
sbbl
mov
inc
out
jge
loope
call
das
inc
daa
mov
mov
out
lea
mov
add
daa
popf
jg
xlat
dec
bound
or
or
or
lock
repz
out
xor
enter
mov
mov
clc
cmp
aas
mov
mov
ja
xchg
or
mov
movsb
xor
push
xchg
in
jns
mov
jle
loopne
lds
dec
dec
fldl
ja
mov
pop
cmpsl
and
in
adc
push
jo
or
push
jb
lret
js
shll
sbb
push
in
inc
lods
cmp
iret
pop
or
lods
cli
dec
add
mov
fs
gs
pop
sub
adc
mov
cld
dec
xlat
and
into
jg
scas
inc
imul
adc
shll
cmp
loop
in
lret
in
xor
insl
lcall
ss
es
push
jbe
fcmovnb
outsb
xor
movsb
dec
cltd
mov
jecxz
xchg
hlt
jmp
cmp
cld
scas
mov
cmp
push
and
xor
cmp
jl
sbb
dec
adc
icebp
je
mov
mov
cltd
cmp
shll
xchg
icebp
lea
sub
adc
test
icebp
sbb
in
shlb
das
filds
pop
xchg
pop
add
mov
mov
mov
mov
cs
dec
aaa
xlat
adc
scas
mov
cmpsb
xor
xchg
add
fsubrl
lods
and
out
jmp
rcr
sub
sahf
xchg
mov
loop,pn
and
fwait
clc
xchg
push
enter
popf
xchg
fisubrl
stc
cmp
mov
jbe
inc
push
out
push
push
dec
dec
jle
aam
es
pop
jno
aaa
jl
test
ljmp
jle
fcompl
out
sbb
ja
addr16
lret
data16
fsubs
jnp
push
loop
or
inc
cli
xchg
data16
stos
aad
push
fnstsw
arpl
xchg
stc
aam
sarl
lea
shl
push
shll
jmp
test
call
es
sub
popf
mov
scas
mov
cmc
fistl
cmpsb
xchg
repz
or
dec
and
stos
stc
adc
xor
mov
cmp
sub
clc
aas
mov
xchg
out
notb
fbstp
fisubrl
dec
add
jecxz
jbe
mov
mov
loop
ja
jo
pop
mull
mov
enter
dec
out
adc
cmp
stc
or
mov
lret
sub
xchg
lock
jne
roll
xchg
xor
sub
mov
xor
or
dec
addr16
adc
mov
mov
rclb
daa
and
sub
push
fcoms
jecxz
pushw
cmp
xchg
cmc
insb
cmp
faddl
loopne
in
xchg
xlat
pop
add
aad
fcoml
sbb
test
mov
dec
lds
loope
or
xchg
or
push
inc
sbb
push
je
hlt
loope
in
push
into
mov
ss
loope
mov
nop
frstor
mov
sbb
inc
add
xlat
push
insl
hlt
outsb
lret
jnp
stos
les
cwtl
aad
hlt
jg
out
ret
jle
dec
mov
cmp
or
dec
push
adc
adc
popa
int3
iret
or
cmp
mov
jae
cltd
sbb
out
ljmp
pop
stos
push
das
cmp
lods
icebp
mov
movsb
call
fldenv
insl
repnz
and
mov
popa
inc
aas
cwtl
cmp
pop
ret
daa
mov
push
subb
jnp
fs
xor
cli
shl
lock
test
fstpl
out
mov
lea
jae
ret
and
push
xlat
imul
jmp
cmp
push
xchg
xchg
pop
lds
adc
cmp
dec
insl
mov
push
push
mov
cmp
pop
fildl
mov
jbe
jmp
sbb
jge
xor
add
or
xchg
mov
mov
mov
shrl
mov
enter
aam
mov
mov
pop
push
jle
adc
cli
leave
mov
aas
fldl
in
push
cmc
sub
pop
decb
lcall
in
sub
sbb
inc
sbb
mov
scas
out
fidivl
mov
cld
fbld
mov
push
loopne
xchg
mov
jbe
adc
hlt
pop
fisttpl
pop
cmp
mov
or
xchg
push
add
cld
xlat
or
sub
in
lods
adc
pop
xlat
out
sti
mov
and
or
int
add
or
xchg
int3
cmp
add
loopne
pop
mov
jle
pop
orl
ret
sbb
or
fnstsw
jle
xor
call
cmc
jmp
xchg
dec
inc
jns
fsubl
loope
mov
mov
or
aas
mov
sbb
mov
lcall
xor
arpl
ja
xchg
sub
aam
dec
inc
clc
pop
cmp
mov
pop
mov
in
sub
or
icebp
sbb
sbb
jno
dec
stos
aam
jle
mov
mov
lahf
lods
jg
loope
les
push
add
rcrl
jmp
add
jbe
loope
fldl
fwait
mov
dec
movb
xchg
or
enter
add
outsb
dec
mov
push
mov
lcall
cs
push
or
pop
movsl
stos
push
ror
inc
int
xor
int
repz
int
outsb
or
xchg
mov
xchg
lds
mov
in
lods
loopne
inc
mov
or
sub
xchg
insl
mov
push
es
and
lcall
ret
push
cmc
repz
lock
jmp
mov
cmpsb
popf
mov
push
jnp
inc
mov
push
shrb
xchg
adc
pop
out
out
leave
mov
push
fadd
lods
daa
fsubrl
pusha
push
jno
mov
mov
std
mov
mov
scas
mov
clc
inc
push
xchg
push
add
dec
loop,pn
jge
aas
add
shll
cmp
mov
fsubl
jns
mov
lea
or
pop
mov
mov
add
inc
das
jbe
cwtl
xor
pop
cli
movsb
ljmp
out
ljmp
cmp
pop
push
fmull
imul
xor
inc
in
and
das
out
daa
cmpsl
lret
les
mov
std
shrb
std
inc
dec
pop
sbb
je
push
add
mov
std
iret
test
addr16
lock
mov
test
push
gs
mov
or
mov
add
fwait
outsl
mov
sbbb
fcmovu
lds
loope
dec
pop
xchg
and
or
mov
inc
hlt
scas
roll
loopne
add
hlt
sahf
and
fbld
lahf
mov
stos
sub
call
test
mov
movsl
adc
mov
add
mov
mov
aas
inc
repz
mov
sbb
test
popa
jo
cli
mov
test
dec
ds
sbb
mov
xlat
fildll
mov
adc
xchg
pushf
enter
dec
mov
stos
cwtl
push
loope
lods
fisttpll
loope
inc
rcrb
jle
jg
adc
jge
push
mov
mov
ljmp
xchg
xchg
xchg
xchg
add
or
or
cs
enter
test
imulb
mov
lcall
cli
fs
jno
jg
add
cmc
cld
stos
ret
lods
out
xchg
inc
and
adc
push
push
mov
cwtl
dec
in
push
pop
in
fidivrs
fldcw
test
repnz
insb
enter
xchg
jno
jmp
in
jne
jp
in
jae
or
popl
iret
sub
repz
sub
sub
jns
adc
cmp
sar
dec
or
and
xchg
lods
sbb
cmp
jmp
fwait
hlt
test
ret
fdivrs
mov
adc
inc
aam
inc
mov
iret
cli
pusha
out
inc
fnstsw
xor
popa
mov
cmp
sub
test
pushf
add
out
arpl
mov
dec
aam
nop
fwait
inc
dec
adc
push
sub
repz
in
test
jg
jmp
sbb
push
cmc
mov
ja
adc
das
popa
aas
scas
insb
repnz
rclb
cmp
imul
or
lea
in
imul
arpl
inc
cwtl
lret
and
xor
and
xchg
loope
sbb
push
xor
mov
sbb
mov
cwtl
lcall
pop
mov
cwtl
sub
inc
push
and
and
pop
jo
jae
mov
mov
cmpsb
dec
pop
cmc
shll
js
adc
mov
mov
xor
das
inc
mov
out
inc
ret
in
clc
xor
lods
data16
pop
cltd
pop
push
and
push
inc
ja
or
jge
inc
mov
mov
cmc
aaa
in
in
loope
mov
mov
mov
lods
scas
jae
shlb
test
pop
lea
test
div
imul
mov
xchg
fidivs
and
fwait
push
sub
loopne
adc
dec
xchg
push
push
xchg
mov
dec
daa
insl
lea
sub
cld
sbb
das
jne
shrl
xchg
into
jmp
mov
in
pop
loopne
sbb
mov
cmpsb
pop
xchg
xchg
inc
mov
dec
rorl
mov
pop
mov
shll
xchg
imul
pop
push
divb
mov
mov
mov
addl
incb
arpl
push
adc
incl
push
movsl
aad
ss
lods
fistl
addr16
mov
dec
cmc
jl
lock
xchg
mov
movsb
stos
dec
imul
out
or
rcrl
and
dec
xchg
and
ret
or
out
lahf
rol
sahf
jns
daa
lcall
ret
lock
test
lods
repz
add
mov
jmp
dec
or
mov
aam
shrb
mov
jb
ret
mov
filds
sub
mov
push
fwait
aaa
xchg
push
mov
lea
and
bound
dec
cmc
or
push
clc
lock
enter
cmp
sub
int3
mov
xor
mov
call
pusha
or
dec
jno
enter
lods
pushaw
into
mov
insl
movsb
cld
shr
mov
xor
divb
lods
jge
test
push
cmpsb
dec
push
cmp
cmc
adc
test
inc
mov
cltd
lock
xor
jge
inc
xlat
push
jnp
lret
inc
dec
scas
nop
ret
inc
dec
jmp
stos
insb
xlat
out
cmpsl
fsubrl
sti
cmpl
xor
ret
mov
and
cld
cs
lds
sub
out
sarb
loopne
mov
xorl
pushf
lea
ljmp
pop
in
or
dec
or
iret
mov
jp
das
xchg
pop
xchg
das
arpl
ljmp
sbb
outsb
xor
cmp
pop
in
push
add
add
enter
test
mov
jne
les
shll
pop
jnp
cmp
mov
out
lret
je
jp
add
jl
rclb
mov
lods
cmp
mov
loop
dec
lcall
sbb
faddl
pop
shrl
enter
pop
loopne
cmp
rcrl
out
sub
jbe
mov
clc
sarl
loop
cmp
dec
xchg
mov
jo
mov
dec
jge
mov
in
stc
lods
aam
dec
push
push
lret
fsubl
pop
and
in
inc
pop
sahf
fcomp
in
mov
lea
ret
fbstp
fists
xchg
lahf
cmp
fdecstp
jmp
fldt
sub
ret
lock
cmpsb
arpl
sub
and
cld
sti
test
fimull
insl
jl
loope
fwait
jne
aaa
aam
popa
xlat
xlat
arpl
movsl
fwait
xchg
ss
or
lret
insl
push
push
inc
push
inc
cmpsl
fists
inc
orl
and
or
stc
fs
dec
and
jmp
inc
rclb
ss
or
mov
cld
popa
in
adc
jmp
mov
pop
icebp
xchg
xchg
movb
pop
cmpsl
fsts
sahf
inc
cmpsl
daa
repnz
sub
push
lods
jo
mov
push
call
inc
scas
jo
push
fwait
jle
push
lret
repnz
ret
jp
mov
nop
mul
add
mov
movsb
and
add
adc
aas
lods
inc
or
mov
dec
sub
sbb
leave
mov
movsl
mov
sbb
inc
clc
call
and
push
ja
sub
and
pop
aaa
jl
add
push
and
comiss
xlat
sub
inc
insl
jno
mov
loope
fdivs
sti
dec
movups
adc
or
fnstenv
mov
outsb
ret
mov
and
hlt
pop
fsubl
and
adc
notb
stos
clc
push
or
fprem1
mov
aad
and
lock
sti
cmp
mov
cli
std
es
sti
or
in
push
xchg
add
test
xchg
loope
lea
and
out
jo
sbb
push
addl
add
push
dec
mov
stc
int3
mov
and
scas
in
xchg
jne
push
and
cmp
pop
push
leave
sti
mov
push
and
add
aad
clc
adc
bound
pop
andb
push
das
mov
scas
aaa
mov
xchg
adc
lea
and
gs
or
push
push
and
and
hlt
inc
mov
adc
sub
push
xor
xchg
mov
dec
jb
fimull
mov
stc
insl
sub
jae
in
cmp
mov
sub
lahf
pushl
in
test
push
cld
push
jge
jns
sub
cmp
fwait
out
mov
pop
mov
addl
xchg
xor
ljmp
sti
inc
jbe
lcall
aas
popa
jmp
mov
pop
in
shrl
stos
inc
ds
pop
mov
jmp
mov
cmp
mov
filds
inc
mov
repnz
adc
mov
or
push
fldz
inc
das
jae
sub
sub
stos
sbb
pushl
ss
sbb
cmpsb
leave
mov
push
imul
sub
gs
cli
imul
lret
xor
dec
in
add
std
mov
ret
imul
adc
or
lds
dec
mov
add
ss
mov
out
xchg
inc
cmp
jbe
fs
add
aad
pushw
xchg
rcrb
rclb
arpl
xor
or
xchg
mov
lods
inc
fbstp
mov
jnp
pop
dec
mov
fs
stos
add
mov
push
push
pop
repz
and
add
loope
loop
lock
out
dec
or
xchg
adc
inc
jae
cwtl
push
inc
sahf
mov
out
xor
scas
cmp
aad
xor
jmp
pushf
dec
out
mov
mov
pop
dec
dec
stc
lahf
stos
push
fldl
imul
jno
out
mov
loope
invd
cmpsb
xor
test
push
call
out
arpl
andb
outsb
xchg
out
pop
dec
fs
in
xchg
out
mov
add
push
sbbb
test
int3
push
fidivl
jle
inc
add
jns
mov
aam
push
xor
cmp
xchg
notl
mov
mov
cwtl
pop
jg
push
cmp
mov
xchg
pop
les
mov
dec
push
inc
je
movl
imul
adc
mov
push
jae
pop
fwait
xor
out
pop
clc
sub
mov
inc
cmpsb
cmp
dec
push
stc
int
fsubs
or
dec
xchg
push
movsb
sub
jno
fisttpl
mov
addb
xchg
popf
pop
inc
pop
daa
addr16
add
testl
xchg
outsl
jnp
movsl
jge
mov
je
mov
pop
lret
and
xor
add
push
sahf
push
aad
mov
pop
data16
cmpl
mov
int
jg
xor
sub
xchg
sbb
dec
mov
xchg
test
mov
mov
pop
lods
xchg
inc
cs
pop
movsl
aam
mov
or
aam
cmp
push
mov
aas
cmp
sahf
adc
lret
xchg
hlt
ret
cli
xchg
xchg
psubw
shl
or
pop
adc
mov
nop
adc
gs
int3
pop
pop
mov
sub
aaa
pusha
cld
lds
imul
cs
ja
daa
push
int
into
jle
mov
invd
add
loop
data16
cmpsb
and
inc
fucomi
cltd
add
sub
scas
enter
jb
jno
dec
jle
leave
inc
idivb
push
pusha
jbe
pop
rcrb
int3
dec
cld
pop
in
lods
sbb
or
cmp
sub
pop
std
dec
int
cmp
lods
insl
fdivrl
dec
cld
pop
in
lods
sbb
or
cmp
sub
pop
std
dec
int
cmp
lods
insl
fdivrl
dec
cld
pop
in
lods
les
sub
pop
cld
dec
int
fildll
aas
mov
sbb
int3
int
fucomp
push
jecxz
cmpsb
daa
cmp
pop
lcall
xchg
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
