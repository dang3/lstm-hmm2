iret
call
jmp
nop
mov
jmp
nop
push
or
mov
push
xor
sub
push
dec
idiv
notb
in
and
or
mov
push
push
push
jg
ljmp
enter
push
call
jl
lea
push
call
lea
imul
lock
mov
sti
movl
and
push
xor
or
lds
mov
ror
cmp
sar
mov
mov
add
mov
rclb
push
insb
pop
sbb
mov
xchg
pop
clc
popf
jbe
les
push
adc
cmp
cmp
in
fidivrs
or
inc
sar
cmpsl
loopne
and
jle
adc
push
cmp
div
dec
int3
testl
das
jb
insb
and
mov
cmp
je
push
mov
roll
mov
out
fiadds
mov
lret
mov
out
and
mov
shrl
mov
jns
cltd
inc
sub
jo
xor
sub
fsubrs
or
aad
sub
pop
mov
iret
jle
scas
adc
sbb
xor
daa
sub
mov
ret
inc
imul
pop
enter
mov
lock
icebp
cmp
add
jg
aas
pop
mov
fidivs
add
mov
cmp
jne
adc
or
gs
cmp
lcall
or
andb
mov
lcall
jl
out
dec
mov
lds
jmp
lea
cmp
and
mov
sub
sti
mov
and
cmp
xor
lret
push
out
pop
popa
jae
sub
mov
push
cmp
roll
mov
test
cmp
sub
lock
hlt
loopne
dec
jle
cmc
inc
call
in
mul
jge
xor
inc
rcr
and
iret
sbbl
mov
push
aas
pop
ss
jg
pop
pop
pop
pop
or
ret
push
mov
push
push
sbb
mov
and
jle
or
mov
movl
or
or
ret
mov
dec
lock
ljmp
mov
pop
ret
jne
bound
test
jne
jle
out
fucomi
sbb
adc
jmp
or
jmp
xor
inc
push
or
decl
mov
sbb
jge
ret
call
push
inc
fcompl
cld
lea
push
fmull
push
data16
add
push
pop
dec
adc
or
xchg
jo
lock
fdivrs
je
frstor
in
push
jmp
adc
cli
movl
push
clc
dec
mov
orl
adc
dec
loopne
stos
or
orb
push
daa
data16
lock
and
xor
mov
add
mov
mov
push
cld
pop
jge
outsl
sbb
loopne
mov
push
in
mov
lcall
cmp
cmp
ret
push
fistpll
jge
sub
dec
loopne
std
std
add
pop
add
sbb
lea
push
popf
insb
pop
push
sbb
push
loopne
inc
dec
xchg
nop
test
push
and
cmp
enter
pop
js
clc
fsubp
or
push
sbb
ja
push
out
lcall
jo
subb
jne
dec
jp
add
sarl
hlt
jmp
mov
jl
add
aam
jle
push
mov
mov
dec
movl
add
inc
sti
push
lea
push
les
ss
jecxz
dec
sbb
sti
lcall
or
inc
or
jbe
jbe
mov
mov
or
lea
pushf
sbb
push
mov
pop
jnp
adc
add
enter
and
testb
les
mov
rep
or
movsl
loop
mov
add
sbb
insb
mov
imull
sbb
push
lea
sbb
and
push
sbb
mov
mov
js
imul
test
or
test
add
in
mov
sarb
cmp
push
mov
cmp
shll
add
movsb
test
decl
push
sahf
sbb
jne
mov
mov
inc
sahf
insb
push
add
enter
imul
nop
rcrb
xchg
ss
push
add
sbb
sbb
popf
out
push
mov
jmp
dec
imull
insb
sbb
clc
std
mov
push
mov
pop
lods
sbb
xorb
loop
lea
pusha
ja
lea
mov
shr
rep
mov
and
repz
loopne
mull
movsl
out
faddl
iret
jge
mov
jmp
int
test
jge
push
fisttpll
mov
inc
es
cltd
adcb
add
loop
mov
lahf
sbb
bound
mov
xor
pop
and
ret
cltd
test
jno
movsl
xchg
dec
mov
mov
lcall
xor
inc
xor
inc
mov
dec
adc
orl
push
mov
inc
cmp
jne
sub
mov
sbb
jae
mov
jo
dec
call
mov
les
rcrb
or
gs
hlt
cmp
add
dec
mov
inc
cmp
clc
mov
cmp
pushw
mov
ret
dec
dec
lret
orb
imul
repz
cmp
adcb
jmp
pushl
shl
in
je
mov
cmp
dec
lea
mov
mov
sti
pop
leave
rorl
mov
fcomps
rolb
and
orb
aam
lahf
in
in
add
lea
test
push
mov
mov
jle
andb
and
divb
popf
add
mov
scas
ja
pop
in
and
cmp
jp
add
int
fwait
enter
fstl
mov
inc
or
jmp
arpl
sub
push
xor
xchg
or
ret
add
je
outsb
shrb
push
mov
push
add
loopne
inc
cmpb
adc
call
sbb
shlb
fistps
stos
pop
add
sub
jo
cmc
pop
cmp
inc
push
push
push
push
mov
inc
or
jle
sub
cwtl
stos
lahf
mov
lret
fisubl
xchg
mov
sbb
add
push
sbb
lock
leave
jbe
mov
adc
test
ret
fsubs
sbbl
sahf
sbb
mov
mov
cmp
mov
or
or
or
sbb
pop
or
je
and
mov
push
sbb
es
cmp
ret
ljmp
pop
jmp
les
loopne
jmp
je
dec
mov
je
call
xor
sbb
ficomps
and
cwtl
sub
dec
scas
mov
cmp
mov
mov
les
inc
lea
loopne
roll
into
stos
cld
sbb
sbb
xor
bound
leave
push
es
fsub
add
cmp
lock
nop
sub
push
push
ds
or
wrmsr
inc
test
test
dec
ret
mov
nop
aas
add
and
push
ficoml
cld
push
mov
or
sub
xchg
dec
mov
clc
xchg
push
xorps
sbb
popf
sub
pop
cmp
cmpl
repnz
jg
fidivl
ficoml
adc
js
mov
gs
outsb
and
xor
and
test
cmp
mov
cmp
cmp
repnz
dec
and
mov
movsb
xor
pop
add
aam
push
push
in
or
jmp
sub
push
push
push
inc
sub
push
sbb
pushfw
fsub
pop
out
xlat
inc
in
mov
loop
mov
or
pop
pop
lods
xor
xor
mov
repnz
test
add
jno
pop
pop
push
ret
push
mov
add
adc
subb
or
or
arpl
je
and
jbe
insl
gs
outsb
and
mov
and
adc
and
gs
or
fs
sti
lods
or
or
popa
add
popa
imul
arpl
je
and
outsl
xor
sub
into
or
js
or
push
push
add
incl
mov
sub
and
xor
fnsave
bound
sbb
test
xchg
pop
fisubl
pop
and
xor
pop
repnz
test
pushf
or
push
pop
stc
jo
dec
pop
jno
jo
adc
and
lret
cmp
dec
jno
mov
clc
repz
std
mov
lcall
sahf
adc
dec
cltd
test
lods
sbb
loope
enter
negb
idiv
cmp
jne
lods
or
inc
test
mov
in
ret
cmpsb
shrb
cmp
inc
repnz
dec
push
ror
lods
dec
test
pop
incl
push
jnp
jb
push
inc
adc
sub
fwait
aas
call
add
add
lea
add
jmp
fadds
jne
and
jbe
outsb
xor
push
push
dec
fistpll
aam
push
sub
xlat
add
push
nop
jg
in
mov
xor
mov
subl
rcrb
add
dec
movsb
xor
outsl
stos
cmc
add
icebp
js
dec
xor
add
jg
sti
pop
mov
jle
inc
outsb
add
inc
test
sahf
jne
adc
add
pushl
add
mov
fsubl
xchg
add
les
out
add
movaps
cmp
addb
add
ret
add
test
rorl
inc
lock
adc
test
add
inc
pop
ret
xor
push
fisttpl
lcall
call
mov
std
outsl
push
inc
inc
xor
decl
xor
mov
aam
xor
sar
ret
in
test
cmp
std
add
test
mov
ss
mov
mov
decl
mov
sahf
inc
mov
test
jae
xor
call
add
sbb
mov
push
mov
int3
aad
jg
mov
insb
inc
add
add
inc
mov
push
lock
fdivrs
ljmp
ss
xor
lea
inc
cmp
fldt
xor
adc
xor
add
mov
mov
call
fistpll
or
jmp
xor
pop
insb
dec
fld
outsb
and
fs
sbb
mov
mov
aas
jl
popa
xorb
setae
pop
pop
int3
cmp
push
mov
std
add
jle
jmp
mov
cmpsb
fdivp
ret
sbb
fcom
ltr
inc
adc
inc
add
mov
push
jg
adc
sar
sti
adc
add
add
sbb
jge
cld
xchg
inc
jge
push
add
shrb
fdivrl
or
addl
mov
lea
nop
outsl
cmpb
sub
sbb
lcall
sbb
jge
xor
adc
mov
fildl
adc
call
fstl
inc
sub
add
clflush
push
add
xor
sbb
inc
jb
dec
add
cmp
or
jne
jbe
jne
add
lea
mov
test
jmp
inc
mov
nop
pop
and
mov
add
incl
loopne
and
push
or
je
mov
add
in
jge
inc
stos
fs
testb
mov
in
inc
add
or
inc
cmp
mov
or
mov
or
pop
call
push
inc
in
mov
incl
movb
arpl
add
adc
fs
in
push
add
cld
jae
xor
pop
xchg
in
sti
mov
in
adc
sbb
neg
jbe
and
test
jl
mov
test
mov
jo
push
into
pop
mov
mov
je
cmp
push
cmp
mov
loopne
cs
xor
ss
cmp
lock
int
hlt
decl
call
sbb
je
push
inc
fists
jecxz
adc
mov
fwait
neg
cli
stc
add
cmp
incl
and
jecxz
push
fdivrl
cmp
cmpsb
std
lahf
fidivrl
stc
test
and
and
add
jne
mov
mov
les
mov
popa
test
mov
jl
fistpll
je
or
dec
jne
push
cld
inc
call
or
and
pusha
enter
ljmp
out
push
jl
inc
out
add
outsl
cli
std
clc
or
sbb
mov
pop
lock
mov
sub
mov
add
frstor
and
and
pop
int3
nop
add
cmp
mov
mov
popa
out
cli
clc
jae
push
push
mov
push
or
ret
dec
xchg
mov
shll
push
cltd
testb
loope
sbb
fsub
mov
add
fildl
adc
test
mov
outsb
aaa
cld
call
ret
pusha
or
xor
in
andnps
ret
andb
mov
incl
adc
incb
aaa
fsubr
roll
or
ret
dec
scas
fdivs
mov
push
add
jmp
pop
add
pop
int3
mov
scas
or
push
sub
pop
sbb
xor
lret
jbe
sbb
clc
pop
mov
ss
xor
pop
sub
js
mov
adc
outsl
aaa
std
popa
or
call
jnp
and
or
or
ret
int3
mov
test
ret
dec
lds
jnp
ljmp
sub
add
loopne
dec
push
mov
jecxz
pop
insl
mov
mulb
mov
sbb
inc
xorb
int3
adc
push
ss
push
arpl
mov
dec
icebp
fistpll
js
int3
adc
sub
xor
insb
incl
mov
fcompl
inc
add
outsb
push
add
cmc
mov
int3
shll
pop
lock
jp
mov
fwait
out
sbb
sub
cmp
lods
js
scas
stos
jne
test
call
fcoms
divb
pop
or
push
inc
testb
or
mov
pushf
cld
adc
mov
or
and
popa
cwtl
mov
inc
test
std
xchg
mov
ljmp
dec
repnz
inc
lock
push
adc
and
gs
pop
test
pushf
cmp
push
repz
ljmp
mov
movsb
test
shrb
jb
inc
jb
pop
cmpb
testb
xor
sub
movsl
mov
fs
adc
andl
pminub
push
test
cld
in
lods
or
testb
sub
sub
jb
sub
movsb
push
mov
int3
imul
or
ret
add
incl
adc
lcall
out
incl
pop
std
add
xor
or
sar
xchg
into
xor
fucomip
pop
xchg
pop
jle
pop
add
pop
ds
jle
ljmp
push
lods
lcall
je
pop
cs
hlt
je
inc
add
push
int3
out
int3
hlt
add
shlb
insb
jo
add
or
sbb
sbb
hlt
loope
push
imul
sbb
mov
mov
xor
push
add
test
subl
outsl
int3
in
push
push
call
into
adc
insb
mov
dec
aad
adc
adc
jo
jnp
mov
mov
lock
out
je
and
ja
or
push
mov
out
rcll
cmp
add
cwtl
test
or
jae
sub
aad
test
test
and
cmp
aaa
pusha
xor
cmp
imul
add
sub
jmp
aad
dec
mov
add
sub
fldl
and
push
mov
es
mov
call
loopne
je
dec
pop
cwtl
add
inc
subb
sub
fildl
push
orb
imulb
jmp
pop
mov
rol
adc
sub
call
mov
jle
test
xlat
and
and
push
push
add
mov
push
adc
xchg
jmp
ja
push
adc
xor
mov
add
xor
bnd
inc
dec
call
incl
scas
enter
or
int
div
dec
adc
je
jnp
xor
ljmp
jg
aas
push
stos
sbb
pop
and
aas
test
roll
add
cmp
dec
and
mov
or
push
aaa
mov
lret
sub
inc
push
lea
cld
pop
inc
cwtl
or
mov
add
sbb
fs
push
mov
roll
mov
mov
mov
push
xor
mov
or
xor
ljmp
pushf
mov
or
decb
push
and
insb
in
xchg
push
push
jmp
ret
loope
push
jbe
sbb
ret
fucompp
fcomps
loopne
loope
add
cld
outsl
push
cld
in
push
jg
mov
mov
add
jp
mov
mov
ljmp
and
xor
mov
add
mov
add
out
mov
mov
insl
test
xor
jge
shrb
or
movsl
rcll
cmpsl
or
test
cmpl
into
loope
lcall
fisubrs
sub
mov
fadds
mov
add
js
add
hlt
je
mov
mov
cmp
lds
adc
add
int3
lock
out
pushl
or
mov
xor
inc
push
int3
pop
ret
mov
mov
dec
mov
ror
adc
les
in
sbb
out
or
add
push
or
rcl
cld
add
push
xchg
testb
nop
mov
or
je
cmp
repnz
pop
decl
jge
test
bnd
mov
push
xchg
push
movsb
add
fwait
mov
orl
call
jno
and
jo
push
cmp
sub
jmp
stos
xorb
call
insb
add
cmp
sbb
ljmp
inc
inc
sub
sbb
pop
test
sbb
cmp
loop
stos
cli
mov
mov
inc
inc
push
fadds
mov
push
xchg
xor
push
test
sub
incl
leave
jl
mov
pop
push
pushf
add
cld
aaa
lds
push
add
stos
insl
nop
dec
mov
cmp
pusha
add
push
hlt
mov
inc
sar
xor
fldt
pop
in
daa
in
data16
inc
add
sbb
mov
fcoml
mov
adc
jg
sbb
scas
or
add
inc
mov
push
inc
or
jp
imul
inc
push
push
insb
add
inc
fcomps
ficoms
mov
cmp
mov
adc
pop
fs
cmp
push
or
gs
xorl
push
inc
addl
adc
pop
mov
push
add
jmp
filds
pushl
loope
mov
lods
clc
ja
data16
filds
je
push
pop
xchg
pushl
adc
sub
or
and
test
xchg
fimuls
cmp
mov
jbe
add
pop
jne
ret
jne
or
push
pusha
jnp
rorb
cli
xor
leave
cmpsb
push
lods
inc
push
ret
adc
add
sbb
xchg
dec
and
sub
pop
cld
pop
std
test
mov
ds
add
mov
cmp
mov
call
xor
sti
adc
aas
aas
rclb
sbb
pop
mov
adc
mov
fdivr
ffree
jne
adc
xchg
push
rclb
xor
insl
push
ja
lock
or
jae
jae
enter
mov
movsb
adc
push
test
gs
mov
push
add
sub
lea
sub
jne
nop
cmp
push
mov
push
or
rol
xchg
iret
dec
or
inc
enter
std
push
lea
cmp
push
inc
subb
sahf
sbb
cmp
dec
es
ret
jmp
in
mov
pusha
insb
push
cmpsb
insb
ds
push
jne
pop
and
loop
decl
mov
add
je
ret
nop
push
add
mov
in
gs
leave
fdivrp
add
test
sub
lea
push
loopne
movsb
test
push
popa
rcrl
movsb
repnz
push
outsl
jmp
xchg
mov
mov
xchg
sar
or
addl
mov
xchg
ss
test
fcomps
incb
adc
sub
adc
mov
cmp
loopne
call
xor
and
mov
mov
js
jbe
les
pusha
ficoml
add
inc
stos
int3
jns
xor
push
inc
or
or
inc
dec
add
pop
fisubl
lret
add
sub
sbb
adc
stos
rcr
sbb
ljmp
jmp
push
mov
ds
xor
add
rorl
aam
jae
sub
js
pop
icebp
mov
sub
je
xor
push
push
mov
loopne
mov
xchg
jo
std
sbb
xor
push
or
mov
shlb
push
push
inc
adc
cmp
inc
shrl
add
outsb
cmp
pop
add
mov
pusha
js
orl
push
cmp
mov
jle
lret
mov
data16
mov
add
xor
call
jmp
sbb
cmp
pusha
mov
inc
pop
decl
hlt
in
add
push
fcmovnb
pop
sub
js
outsb
jg
cmp
inc
add
mov
sahf
mov
mov
push
add
or
or
test
adc
aas
pop
andl
add
divb
cli
mov
js
rclb
inc
push
insl
add
sar
jae
adcl
mov
faddp
out
push
aaa
shll
loopne
xor
add
push
pop
pop
inc
js,pt
inc
insb
mov
je
ljmp
jge
pop
sti
adc
mov
call
mov
clc
jg
adc
push
rclb
lock
pop
enter
mov
cmp
pop
inc
pop
adc
shll
fwait
push
aam
hlt
mov
dec
sbbb
dec
decl
mov
addb
jns
rolb
mov
loop
push
jnp
test
cld
push
js
add
add
pop
pop
cmp
adc
test
jl
jge
inc
clc
sarl
roll
mov
enter
inc
icebp
sbb
cs
cs
pop
mov
add
cmc
and
or
test
push
in
adcl
movsl
sub
pop
mov
inc
cwtl
sti
adc
negb
std
mov
xor
pop
push
inc
ret
flds
fwait
movsb
cmp
sub
inc
or
jl
jg
add
testb
andb
pop
lea
fs
dec
cli
xorb
jl
inc
push
icebp
jl
out
mov
jo
inc
xor
add
mov
ret
jge
or
imul
adc
adc
push
inc
aaa
cmp
cmc
lea
insb
pusha
mov
add
mov
frstor
lock
add
push
push
enter
and
pop
lds
mov
add
ss
push
rol
loopne
push
sbb
mov
pop
insl
adc
stos
ja
pxor
pop
cmp
pop
mov
je
das
call
stos
add
js
orl
mov
cmp
negb
sbb
push
cmp
adc
mov
xlat
gs
lret
fdivrl
or
jp
inc
sti
and
xchg
push
fadd
setnp
dec
add
clc
loop
cwtl
rcl
xorl
xchg
loop
mov
and
inc
pushf
and
fisubl
js
fmull
jo,pn
out
dec
push
mov
outsl
rcrb
jb
push
dec
cmpsl
push
rclb
xchg
mov
adc
jne
xchg
call
lcall
and
outsb
lea
dec
mov
inc
lock
fidivrs
push
clc
pop
dec
sub
mov
mov
inc
jo
bound
inc
or
inc
pop
hlt
xor
mov
or
jne
addb
pop
jge
mov
inc
into
push
add
ja
rorb
int
mov
adc
or
je
rorl
mov
call
sbb
cli
jg
loop
dec
mov
sub
int3
sarb
mov
cmpl
add
scas
pop
adc
lock
test
je
cmc
jnp
or
xorl
jp
inc
leave
push
pop
adc
cmp
dec
dec
hlt
fisttpl
cmp
push
cmp
inc
jae
sbbl
je
mov
adc
cmp
fs
jbe
push
mov
or
inc
adc
cs
fadd
jmp
jo
loope
jg
clc
pop
mov
jge
lcall
loopne
testb
mov
sbb
imul
push
mov
dec
fcoms
push
mov
pop
repnz
mov
insb
pop
jae
rcr
or
insb
into
paddd
adc
add
stos
or
add
shlb
ret
push
mov
push
fs
adc
rcrl
push
pusha
cld
inc
xor
pusha
adc
sub
push
popa
mov
push
js
inc
dec
sahf
inc
adc
dec
sub
or
push
jmp
mov
insb
cmc
add
or
jge
sarl
scas
inc
push
sub
dec
inc
outsb
or
pop
jmp
jne
adc
ljmp
clc
cmp
jge
push
mov
sarb
int3
xor
push
aas
adc
insb
cmp
mov
mov
fistl
icebp
mov
ljmp
in
gs
in
sub
mov
or
data16
mov
push
adc
rcrb
sbb
into
push
sub
rol
ljmp
push
mov
push
bound
into
push
mov
jo
mov
dec
arpl
cmp
data16
bound
or
fcmovne
test
pop
shll
sub
add
inc
sbb
mov
in
mov
jnp
sub
test
incl
add
inc
in
mov
loopne
cwtl
es
jecxz
outsl
pop
icebp
data16
ret
push
mov
jp
cmc
adc
cld
add
clc
sub
addb
pushl
sbb
test
xchg
ds
xor
shl
es
adcb
addl
add
mov
cmp
cmpb
mov
pop
add
lock
je
hlt
filds
adc
jp
add
pushl
ret
push
loopne
mov
insb
mov
lods
add
mov
insb
inc
lds
cld
outsl
push
inc
mov
ror
xor
inc
push
mov
cld
or
in
push
ret
cvtpi2ps
call
add
test
rorb
idivb
xchg
stos
outsl
jge
icebp
call
inc
inc
icebp
test
adc
orl
je
inc
pop
fimull
sar
test
test
adc
in
or
inc
inc
pusha
clc
test
repnz
cmp
mov
mov
inc
lea
sbb
sub
jge
mov
push
or
jae
mov
es
mov
sub
adc
cmc
or
rorl
pop
sbb
shrb
inc
pop
shrb
loopne
mov
adc
ret
xor
add
jo
test
rclb
lret
hlt
push
mov
out
dec
sbb
psrlw
cli
and
and
cwtl
jl
push
or
notb
in
cs
loopne
push
inc
xchg
inc
and
out
push
and
xor
dec
push
push
jg
lock
cmp
call
xor
enter
mov
mov
cwtl
out
push
int3
ud0
mov
mov
inc
bound
xchg
aaa
movsl
in
out
push
test
and
or
mov
sub
inc
mov
pop
mov
push
fdivr
mov
pop
push
imul
stos
mov
test
mov
into
push
ja
or
push
out
inc
mov
cmpb
jecxz
mov
add
mov
enter
pop
jl
mov
push
sbb
movb
inc
cvtps2pd
call
mov
mov
and
sti
data16
adc
add
je
sub
loop
push
cmp
mov
jne
mov
mov
xchg
ret
cs
jge
lret
and
insb
clc
out
cli
cmpsl
xchg
ret
clc
maxps
xor
insb
add
incl
pop
aam
and
xchg
xor
adc
push
adc
inc
stos
clc
outsl
es
mov
push
add
sbb
rolb
dec
push
imul
sti
int3
rorl
outsb
push
mov
imul
int3
jo
jo
jmp
jle
xchg
cmp
call
sahf
jne
fdivrs
cs
lock
inc
pop
repnz
xchg
add
dec
jg
pop
popf
mov
mov
push
add
cmp
hlt
xor
sbb
lods
in
add
xor
test
adc
inc
dec
loope
add
pop
movsl
sbb
std
cli
add
sbb
jb
lea
std
xor
sub
std
js
lods
loopne
pushw
and
rol
test
cwtl
incl
sahf
fildll
aam
js
cmp
inc
cmpsb
mov
and
mov
pop
push
sbb
cmp
das
xor
cmp
push
jmp
pushl
insb
out
in
movntps
dec
loopne
add
push
data16
addl
add
fnstenv
fisubrl
ljmp
cmp
xchg
push
inc
mov
fstpt
or
cld
xor
enter
les
xchg
xor
repz
cld
add
push
add
or
sahf
out
mov
popa
call
fdiv
or
clc
or
ds
fisttps
rcrl
icebp
inc
mov
push
mov
loop
lret
lods
cmp
or
mov
lahf
fstl
jl
cmp
or
je
rcll
jmp
jae
add
cmp
cmpb
sub
or
ret
add
jmp
jmp
fsubrs
push
rclb
adc
sbb
fcomip
pushw
mov
repnz
mov
adc
roll
push
adc
mov
shrl
loop
not
test
pop
inc
jmp
dec
push
je
mov
mov
incb
pop
mov
jg
dec
xorb
in
lahf
jle
push
or
pushl
xchg
rolb
ds
leave
or
outsl
xor
outsl
in
lea
push
add
fisubs
sar
mov
push
mov
mov
sbbl
stos
xchg
call
inc
inc
fistps
nop
mov
pop
adc
aaa
ljmp
dec
or
dec
xor
pushl
faddl
dec
inc
adc
decb
cld
mov
jle
cmp
fwait
or
cmp
fisubs
mov
inc
jae
shlb
or
cld
mov
add
inc
rcrl
adc
jle
lock
call
or
fisubrl
pop
push
push
addl
jg
insb
mov
sbb
loopne
push
lret
add
sbb
rorb
xchg
adc
pop
and
inc
fiaddl
adc
rcr
icebp
jle
jecxz
push
stos
lods
cmp
in
xchg
sar
jmp
mov
push
int3
jno
push
mov
mov
jne
pop
sub
mov
or
or
inc
lods
fmulp
push
push
pushl
aam
cwtl
fs
mov
ret
stos
fbstp
adc
adc
and
mov
ljmp
jno
cmp
stc
mov
icebp
push
pop
icebp
jmp
mov
incl
cmp
insb
mov
call
dec
mov
sub
cmc
or
cmp
dec
in
pop
shrb
ljmp
mov
sbb
cld
push
test
cld
lea
leave
adc
shlb
notb
lds
pop
data16
sarb
fsubrs
incb
xlat
inc
sbb
adc
push
cld
xor
fwait
sub
jmp
mov
lea
jle
mov
or
enter
lods
xor
mov
dec
mov
inc
inc
insl
ret
push
pop
aam
cs
mov
pop
and
sarb
or
out
aas
je
sub
xchg
mov
pop
add
sbb
rcl
rcl
rorb
inc
test
push
mov
jle
xchg
orb
movsb
inc
pop
call
clc
add
xor
repz
sbb
scas
mov
mov
mov
hlt
push
jg
js
clc
test
push
push
inc
adc
call
push
xor
call
popa
jb
pushf
clc
mov
mov
fimull
add
leave
js
pop
cmc
sbb
outsb
fildl
xchg
aaa
push
pop
push
jle
jmp
jae
shlb
es
mov
fdivs
jge
mov
mov
cmp
std
scas
testl
mov
sarb
lret
fdivp
xchg
stos
jl
mov
call
xchg
xchg
test
outsb
xlat
call
push
lret
fistpl
add
jb
call
add
inc
fdivl
les
adc
mov
push
or
clc
jae
xor
arpl
mov
sbb
int3
scas
lret
lock
jmp
popa
push
push
int3
xchg
sub
push
les
jmp
cld
inc
mov
lret
sbb
xorl
dec
xchg
push
inc
call
push
es
call
dec
test
les
addb
lea
pop
enter
mov
inc
mov
lock
cmp
loopne
loope
loope
add
push
jmp
les
ljmp
int3
mov
rcl
fnstsw
and
popa
icebp
or
lods
call
mov
add
add
add
mov
sti
in
lcall
pop
sub
out
push
inc
or
incb
arpl
shlb
adc
rolb
push
aad
xor
daa
push
add
mov
add
lcall
ret
cmp
adc
dec
lods
icebp
js
int3
dec
pop
js,pn
sti
mov
jbe
sbb
lret
mov
adc
inc
jl
dec
push
mov
xchg
outsb
out
data16
pop
lea
bnd
push
je
push
outsl
sbb
lahf
cmpsb
and
leave
adc
ret
pop
jg
cmp
xor
inc
icebp
push
sub
sbb
push
das
cli
std
mov
pop
in
mov
mov
icebp
push
sti
pop
mov
in
dec
mov
bswap
aad
mov
fs
jb
mov
pminsw
or
mov
int
or
decb
add
sbb
call
lock
push
push
aas
xchg
lcall
mov
rolb
jge
outsb
mov
cmp
test
mov
rorl
pop
mov
mov
mov
lods
idivb
pop
add
jb
mov
dec
rcrb
rcl
pop
inc
mov
adc
ds
inc
push
inc
add
add
ror
or
jle
rolb
shr
push
inc
jae
xchg
add
jl
lock
add
jmp
jbe
fldt
push
push
shll
les
pop
cmpsb
mov
jne
dec
call
je
fstl
mov
xchg
add
xor
cmp
rclb
dec
push
stc
cmp
outsl
aam
jmp
stc
outsl
dec
xor
xchg
add
adc
je
add
ljmp
xchg
mov
push
adc
push
dec
mov
pop
add
push
xor
add
testb
rorb
mov
push
mov
add
insb
iret
nop
mov
pop
incl
fsubrs
jbe
or
sar
ds
cmp
sbbb
shrb
adc
jne
ret
add
insb
rol
aas
cli
shl
call
mov
outsb
or
in
mov
adc
and
push
or
push
adc
ret
pop
rcrb
je
test
cwtl
add
decl
lods
std
testb
jb
cmpsb
or
push
or
popa
inc
inc
fwait
int
xchg
mov
fs
pop
xchg
clc
add
lea
loopne
in
pop
std
fildl
xchg
repz
sub
add
pop
mov
fs
jl
inc
cs
inc
jmp
push
int3
scas
out
inc
add
mov
or
decb
incl
call
sbb
ret
push
mov
sbb
add
add
decl
inc
inc
sbb
push
clc
orb
xor
mov
add
inc
pop
inc
aam
xor
aam
push
or
stos
push
stos
add
or
pop
inc
fiadds
insl
je
mov
pcmpeqb
je
and
or
orb
fisubs
xlat
cmc
ja
jl
enter
add
shl
addl
fcmovb
dec
pusha
in
jo
loopne
push
adc
cmp
dec
add
aas
push
imul
outsb
push
adc
adc
cmpsb
mov
push
lret
or
in
add
pmaddwd
add
prefetchnta
in
ds
lret
cld
adc
lea
stos
in
outsb
mov
loopne
or
add
xchg
data16
jo
rorb
and
test
sub
mov
enter
dec
mov
inc
iret
jne
push
ret
or
sbb
fcompl
push
push
in
fistpll
cmp
jmp
add
add
shrl
loopne
std
cs
xor
fucom
fwait
adc
sub
int3
rolb
sbb
jp
or
stos
fwait
mov
or
push
inc
rcl
pushl
test
push
or
cmp
sbbb
inc
mov
int3
adc
adc
jae
aas
loope
sbb
cld
jmp
lcall
sub
push
mov
sub
cmp
loop
int3
jge
sub
cmp
and
fisttpl
jbe
and
push
push
cmpps
adc
cmp
mov
xlat
cmp
push
push
pop
pushf
lea
movsb
les
rolb
sub
shll
icebp
incl
je
ds
lahf
pop
add
dec
rorl
pushl
adc
fcoms
imul
ss
bound
add
mov
jg
inc
jo
scas
aas
jne
nop
xor
call
jl
xchg
mov
push
add
ljmp
sbb
jmp
pop
cwtl
notb
les
insb
add
sahf
inc
mov
fldcw
fldt
add
pop
fcomps
sahf
and
loop
mov
out
mov
pop
jb
popf
mov
xchg
push
sahf
hlt
inc
cmc
repz
test
in
pushl
jb
stos
je
fs
xorl
shll
sub
adc
js
mov
add
dec
rolb
in
dec
movl
and
lcall
rorb
adc
or
ret
dec
jo
aam
cmpsb
and
mov
clc
push
jo
fstps
clc
push
or
lea
stos
loopne
mov
jmp
shl
bound
rol
inc
xor
add
jecxz
jo
cwtl
mov
mov
push
scas
test
xorb
pop
adcl
rolb
insb
add
mov
lcall
jg
cmp
je
mov
jecxz
adc
mov
fcomi
cmp
loop
lock
or
xor
and
jl
sub
outsl
out
ret
imul
xor
fisubrl
hlt
push
mov
push
cs
imul
mov
mov
cmp
push
push
sti
mov
pop
xor
mov
add
stos
jmp
and
je
clc
leave
jb
fmull
mov
dec
jo
ss
aas
add
outsl
lret
add
cmp
in
mov
sub
jae
mov
lock
jle
mov
cmpsb
shlb
popa
lea
xlat
jecxz
test
jmp
sar
bswap
scas
adc
lret
mov
pop
scas
jne
and
cld
popf
cmp
stos
lods
jo
cs
roll
push
cmp
adc
add
add
ret
push
hlt
ss
gs
and
insl
cs
shrl
aad
faddl
jmp
push
test
mov
cli
call
mov
cmp
pop
sub
mov
adc
lock
mov
mov
dec
jg
mov
mov
out
pop
aaa
clc
roll
sbb
add
inc
in
rcrb
cvtpi2ps
add
mov
or
stos
mov
test
lock
xor
dec
or
or
pop
or
mov
int3
mov
push
andb
sti
pop
lods
add
or
rcrb
jmp
adc
repnz
rclb
mov
push
add
jmp
pop
cmp
sub
mov
push
pop
dec
cmp
in
fwait
or
cmp
aaa
les
incl
incb
push
adc
in
add
outsl
push
sbb
mov
call
mov
push
aam
add
push
add
adc
dec
loope
sub
dec
bound
pop
ss
hlt
pop
icebp
dec
push
and
test
jnp
cmp
xchg
fimull
push
insb
outsl
push
or
or
int3
ljmp
je
jb
mov
into
mov
call
into
mov
sahf
rorb
adc
push
gs
adc
push
jbe
add
adc
jo
loopne
mov
jb
mov
cmc
cmp
mov
ljmp
imul
xchg
push
inc
les
mov
in
add
cmp
pop
jo
call
clc
aas
add
pop
inc
push
mov
xor
into
pop
inc
cmpsl
mov
es
scas
push
push
push
xor
mov
dec
push
mov
sbb
loope
enter
adc
push
and
or
int3
lcall
scas
and
lret
sbb
adc
adc
rclb
add
jp
jecxz
jl
sbb
push
or
pop
call
mov
add
pop
lods
sarl
pop
sbb
cmp
xor
lods
call
mov
mov
cli
imul
nop
and
shlb
adc
cmp
pinsrw
pop
or
xchg
int3
es
ds
pop
inc
fstpt
movl
stos
clc
call
pop
push
gs
loopne
jmp
mov
dec
inc
or
push
call
mov
outsl
cmp
fstpl
add
stc
adc
xchg
iret
std
and
stos
ret
loopne
push
jns
adc
or
and
jo
push
ret
add
in
mov
mov
insb
sar
shrb
pop
cmp
jbe
cwtl
add
out
notb
loopne
aaa
mov
loopne
cmp
adc
push
unpckhps
fdiv
pop
pop
shlb
fmull
mov
xor
hlt
xchg
push
xor
inc
add
push
call
js
test
or
inc
inc
sahf
xchg
lcall
outsb
mov
js
jno
sub
push
insb
sbb
push
inc
sub
je
mov
sub
pop
cmp
sbb
fwait
cwtl
mov
clc
mov
push
test
test
jne
xor
mov
fsubrs
js
fildl
add
movb
mov
inc
aad
xor
into
pushl
xchg
test
jne
add
or
int3
in
jmp
rorl
stos
test
mov
in
mov
int
popa
add
lea
notl
pop
inc
inc
mov
inc
or
addb
inc
decl
inc
leave
push
mov
decl
paddsb
mov
inc
loopne
shl
fcmovnb
jge
dec
cmp
jbe
add
cmp
int3
fcmovb
sarb
aas
sahf
notb
sbb
shll
out
mov
dec
out
test
push
or
ret
and
xor
inc
xor
es
sbb
stos
mov
mov
push
inc
lods
sub
mov
sub
fisttpll
sub
push
rorb
es
sbb
ret
dec
cmc
hlt
and
rcll
loopne
mov
push
ja
test
adc
push
fcmovb
or
mov
lock
imul
cmp
test
ljmp
pop
pop
mov
jo
data16
je
fidivrs
inc
ret
adc
adc
fs
out
decl
mov
out
sbb
aam
lock
popa
mov
add
jbe,pn
xor
jp
mov
dec
jne
dec
inc
nop
lcall
adc
mov
adcb
xchg
scas
inc
push
pop
dec
xchg
aaa
push
cld
cwtl
and
ret
add
mov
inc
popa
lods
or
push
add
test
jbe
roll
mov
cmp
test
repnz
push
dec
cli
insb
push
add
jmp
inc
mov
or
test
lods
incl
enter
push
pop
inc
mov
jbe
or
pop
add
push
sbb
loopne
shlb
add
in
xor
rorb
aam
xor
xor
push
hlt
mov
push
or
push
add
mov
xchg
in
xor
sbb
loop
or
push
xor
test
decl
or
inc
sbb
cld
vcvtdq2ps
dec
mov
adc
nop
mov
mov
ret
push
test
add
mov
pop
inc
mov
push
fcoms
js
mov
sarl
mov
inc
or
or
adc
enter
lds
mov
test
push
pop
insl
pop
dec
mov
iret
ss
xchg
inc
xor
test
cmp
xor
loope
xchg
aam
pop
or
sti
in
daa
mov
cld
or
push
lock
into
mov
pop
add
fistps
hlt
stos
add
jae
xor
outsb
mov
mov
xor
mov
icebp
pop
pop
push
pop
or
fcmovnu
cmp
mull
arpl
xor
sub
outsl
pop
mov
jo
adc
adc
cmp
push
pusha
in
or
xchg
enter
cmp
inc
mov
jb
stos
je
cmp
dec
pop
rcrl
das
xchg
adcl
roll
les
push
cld
mov
cmc
shlb
test
pop
xchg
cld
mov
dec
add
outsl
mov
jne
sar
cmpsb
adc
add
push
pop
mov
jp
sbb
adc
add
inc
add
pop
popa
mov
add
push
test
push
pop
lea
nop
or
adc
rcrb
push
mov
or
or
add
mov
loope
mov
sub
inc
inc
and
jb
inc
jbe
mov
push
mov
enter
das
test
mov
pop
mov
fisubrl
or
fisubs
jne
mov
add
xor
sub
adc
xchg
mov
xor
add
mov
hlt
and
push
xor
test
loop
fs
adc
decl
inc
std
fsubs
lret
xor
and
jle
out
adcb
sbb
mov
xor
adc
pop
gs
sbb
push
push
mov
push
repnz
test
push
mov
jne
hlt
aas
mov
xor
mov
dec
mov
mov
mov
inc
outsb
jge
mov
mov
cmp
stos
cmp
mov
pop
cs
mov
add
sbbl
add
fdivrs
movsl
and
adc
popa
dec
pop
jle
add
addl
inc
xchg
mov
mov
test
ret
je
sarl
loope
push
mov
mov
xor
into
test
dec
add
fstpl
inc
push
cmpsl
shrl
out
mov
dec
test
mov
mov
rorb
or
or
rorb
sti
nop
sbb
clc
mov
xchg
cld
add
cmp
int3
int3
ret
lcall
lods
in
push
je
push
pop
int3
insb
inc
inc
pop
jne
clc
push
mov
mov
inc
jne
xor
mov
idiv
orb
lods
lcall
ljmp
incl
shll
inc
lar
and
xor
push
sahf
add
sbb
mov
adc
push
daa
shlb
sbb
fucomip
mov
ret
jae
push
push
jge
mov
shrb
jmp
mov
pop
std
mov
sbb
pop
jne
sub
jle
in
pop
sub
mov
cmc
inc
push
xlat
add
pop
add
push
dec
mov
in
xorl
xchg
cli
call
push
in
cmpsb
push
scas
mov
sub
and
cmp
adc
add
or
jp
pop
cmp
fdivs
push
push
inc
icebp
mov
cld
test
push
hlt
nop
arpl
aaa
andl
push
nop
xchg
inc
add
xchg
and
in
fstps
sbb
add
mov
pop
inc
cwtl
push
inc
xchg
pop
addl
outsb
xor
in
or
mov
or
jmp
jle
mov
loopne
mov
jo
pop
in
adc
jne
js
std
sbb
js
js
lcall
xchg
lock
add
inc
ret
ror
mov
push
mov
inc
mov
push
aaa
adc
mov
xor
orb
sub
icebp
in
jne
push
mov
mov
mov
mov
mov
push
jb
inc
into
add
cmpsb
rolb
cmp
fcomps
push
mov
mov
stos
repnz
cmp
push
lea
ficoml
jbe
sub
jne
pop
outsb
adc
sahf
les
ret
enter
in
inc
or
xchg
pop
ds
je
cmp
es
adc
add
test
inc
addr16
mov
push
adcl
push
pop
cld
idivl
inc
faddl
adc
sub
es
push
or
lcall
fsubl
jmp
out
adc
push
add
jge
xor
pop
outsb
mov
dec
cld
mov
push
xor
test
jp
add
jne
or
sub
pop
mov
outsb
into
pop
or
or
or
test
out
or
adc
decb
mov
into
push
mov
pop
add
adc
inc
test
inc
adc
nop
rclb
pop
cmp
js
das
push
inc
pushf
loopne
xor
adc
push
jo
loopne
or
int3
xchg
cmp
dec
enter
pop
scas
ret
mov
xor
mov
pop
je
les
lock
pop
add
shlb
sbb
andb
or
data16
rcrl
mov
cmpsb
outsb
adc
clc
xor
or
lcall
adc
or
ds
dec
add
int3
xor
icebp
pop
mov
dec
or
in
pop
clc
pop
adc
fs
test
in
add
orl
pop
mov
add
and
jmp
mov
mov
add
lret
call
test
ret
mov
pop
add
sub
pop
test
lret
hlt
adc
sub
std
out
mov
jne
push
jno
outsl
pop
call
mov
and
mov
dec
push
push
add
sahf
dec
push
pop
je
jbe
mov
test
and
fwait
mov
xor
adcb
adc
push
push
or
xor
adc
ss
adc
nop
jle
leave
add
jle
inc
push
cmpsl
in
xor
dec
dec
scas
lret
adc
inc
js
ret
call
cld
cmpl
or
xchg
sbb
pop
cmc
outsl
sbb
cld
call
jo
fstps
outsl
negb
aam
int3
dec
popa
sbb
call
js
xchg
decl
push
lods
adc
fiadds
loop
rorb
sub
push
dec
loopne
mov
add
ret
inc
jae
cmc
pop
hlt
xor
push
fs
add
or
sub
jmp
adc
fcomps
mov
mov
loopne
push
cs
xorb
or
cmp
mov
add
mov
call
hlt
add
js
insb
mov
js
fs
push
mov
stos
xor
fdivrs
push
mov
je
iret
in
or
test
in
testb
mov
insb
pop
in
icebp
ja
inc
mov
les
push
cmp
scas
mov
shll
je
adc
add
jge
pop
fisttps
je
call
xor
pop
mov
add
add
out
hlt
pop
movsl
sbb
adc
test
subb
mov
xor
aad
mov
add
pop
pop
pop
jne
xor
ret
scas
test
xchg
enter
push
cld
insb
inc
and
push
call
outsl
or
lea
push
add
add
inc
repnz
testb
outsb
mov
push
mov
mov
jl
cmove
and
in
fdivl
add
or
out
mov
add
test
adc
push
stos
inc
or
cs
mov
das
les
rolb
fwait
cmp
fsubl
pop
pop
loopne
and
test
dec
add
add
std
jg
mov
popa
add
cmp
mov
xor
push
mov
add
cmc
jp
call
xchg
pop
mov
xor
dec
clc
or
jp
aam
pushf
inc
or
popa
xlat
stos
dec
rcrb
mov
pushl
add
xchg
test
sbb
rcll
scas
ret
pop
sti
mov
cld
orl
jmp
in
jg
sbb
inc
xor
std
and
scas
jle
scas
push
inc
mov
scas
rcl
mov
mov
or
xchg
mov
loope
subl
pop
and
pop
les
cmp
add
ds
and
push
push
mov
or
cmpsl
push
push
pushf
pusha
dec
adc
mov
xchg
mov
xchg
in
rol
push
pop
test
mov
lcall
loop
push
push
dec
clc
inc
out
mov
pop
mov
clc
pop
outsb
imul
imul
test
ljmp
xchg
cmp
clc
inc
xlat
and
mov
dec
jg
rcl
shl
insb
decb
fdivp
jge
sti
mov
daa
sbb
stos
std
scas
nop
shll
push
xorb
cld
aaa
insl
push
gs
push
xchg
mov
addl
call
fsubrp
outsb
ja
jo,pn
push
dec
xor
outsb
cmp
int3
mov
pop
or
dec
xor
push
sbb
call
pusha
test
adc
inc
or
aam
jl
lock
iret
scas
cmp
hlt
gs
mov
rcrl
mov
mov
mov
incb
call
push
jmp
adc
nop
jb
call
mov
les
dec
push
mov
cld
xlat
pop
mov
adcl
test
mov
cmp
dec
mov
push
ja
sub
mov
cmp
fdivrs
or
xchg
outsb
ljmp
stos
cmp
xlat
cmp
cmp
popa
jo
cs
pop
cmp
mov
xor
mov
pop
pop
push
je
in
orl
dec
add
add
jg
out
scas
inc
push
push
jo
jo
inc
out
mov
cmp
sbb
int3
jp
gs
xchg
mov
mov
fs
and
int3
cld
push
push
push
in
add
test
jo
rolb
call
add
pushl
or
jmp
lfs
sub
cld
ss
inc
addl
add
cld
add
jle
cmpsb
push
xor
mulb
xor
mov
add
fmuls
test
inc
sub
into
shlb
mov
dec
and
pop
movsb
xchg
mov
fcom
cld
test
add
popf
adc
jecxz
outsb
icebp
adc
add
fs
adc
inc
push
lahf
pushf
sub
push
sarb
pop
mov
std
jg
movsl
cld
push
push
add
mov
sbb
les
or
iret
jge
movsb
add
insl
sbb
iret
outsb
mov
dec
cmpsb
cli
aas
ss
mov
hlt
mov
popf
lea
add
sub
dec
nop
arpl
push
aaa
inc
shll
jge
dec
enter
inc
or
inc
xor
ds
shlb
inc
es
addb
lea
xor
jno
add
or
mov
jbe
jb
int3
inc
jbe
mov
ss
scas
hlt
add
xor
dec
call
push
or
xorl
adc
cmpsb
dec
repnz
mov
push
xchg
mov
cwtl
cmp
outsb
adc
frstor
insb
sarb
iret
cli
xor
adc
rorb
lock
cld
jo
or
and
shlb
mov
jne
xor
add
jge
divb
or
and
add
adc
pop
shlb
shr
rclb
jle
cmp
fwait
hlt
fwait
adc
dec
mov
sbb
cmp
dec
push
push
cs
jg
pop
imul
fidivl
add
sub
int3
int3
fsubl
lods
loopne
inc
les
mov
lds
add
xor
rcrb
out
sbb
cmp
addr16
pop
cld
nop
mov
ret
push
or
mov
ljmp
mov
test
xlat
je
inc
add
xor
scas
test
je
sti
dec
xchg
dec
xchg
mov
jb
mov
inc
xor
xor
pushf
fs
pop
xchg
shlb
or
mov
idivb
outsl
add
fiaddl
xorps
insl
jbe
xorb
call
dec
clc
add
cmp
xor
inc
es
in
push
pushw
jb
mov
aaa
sbb
push
test
insb
hlt
in
js
outsl
movd
nop
dec
shr
mov
push
in
lea
pop
add
jmp
sub
dec
in
dec
fstpt
add
pusha
push
decl
in
inc
adc
mov
pushf
push
pop
sahf
inc
pop
mov
clc
mov
xchg
je
jne
ret
call
jp
imul
xchg
add
mov
xor
cmp
or
mov
ffree
rcll
faddl
test
test
push
ficomps
xchg
jecxz
jle
jmp
pushf
dec
loop
hlt
pop
push
and
inc
mov
jns
cmp
test
sbb
jne
sbb
xor
sbbb
push
cmp
xor
or
cmp
stos
lcall
add
outsb
loop
cmp
dec
lods
mov
std
dec
sbb
dec
mov
rorb
sbb
push
mov
pop
mov
mov
push
fldt
jbe
or
dec
iret
xchg
cmp
jmp
xor
pop
test
push
mov
push
rorl
cld
loop
inc
jno
pmaddwd
xor
mov
pop
movsb
ljmp
push
test
icebp
jecxz
jmp
test
or
xchg
jge
rcl
mov
les
cmp
rol
loopne
mov
mov
and
loop
push
jne
add
mov
cli
or
out
add
fmuls
mov
push
data16
add
or
leave
and
jo
mov
jnp
rcrb
adc
inc
xchg
mov
and
mov
mov
je
jne
decl
dec
jbe
lret
fdiv
das
aam
pusha
fiadds
inc
add
push
fmuls
test
pop
or
test
imul
pusha
xchg
out
into
add
cmp
cli
sub
sbb
mov
cmp
cmp
and
cmp
push
xchg
sub
push
test
xor
push
jmp
dec
and
add
inc
push
std
and
lcall
and
jbe
jl
xchg
adc
lods
pop
stos
aaa
adc
mov
je
lock
in
icebp
outsl
gs
jbe
fiadds
mov
sbb
mov
ret
negl
cmp
sub
faddp
cmpsl
mov
mov
add
cld
push
into
rcl
pop
jbe
loopne
lods
cmp
xchg
cmp
adc
int3
jns
or
decl
int3
mov
jle
xchg
add
xchg
add
mov
jae
in
push
push
cmp
mov
and
inc
pusha
jle
push
inc
insb
fcmove
pop
and
or
ds
movsb
call
clc
lds
xor
mov
and
mov
and
insl
sahf
dec
out
add
incb
dec
jo
push
adc
push
int3
clc
pop
cmp
orl
dec
mov
clc
xorl
jmp
movsb
and
add
inc
jae
inc
push
cmp
xchg
enter
mov
xchg
jle
lock
in
je
dec
divps
lock
gs
add
mov
sbb
rorb
xchg
mov
jecxz
pop
pop
add
sub
call
insb
push
dec
xchg
adc
rcl
daa
into
sub
push
std
inc
cwtl
pop
cld
jo
or
adc
or
sub
push
lock
call
pop
pop
clc
inc
push
lea
inc
ljmp
loop
sti
in
and
or
rdmsr
xor
adc
inc
aas
in
xchg
fimull
repnz
adc
rcr
fiaddl
icebp
or
sub
popa
push
sub
hlt
addl
cmpsb
sub
and
loope
mov
push
subl
mov
mov
stos
or
insl
out
lods
ret
jp
in
nop
int
cli
pop
cs
jl
and
mov
test
mov
ret
mov
cmp
insb
lret
add
and
dec
test
mov
cmp
mov
rolb
loopne
add
cld
pop
push
insl
push
les
outsb
shrb
icebp
shrl
int3
shll
mov
xor
mov
jmp
add
fisubrs
xor
mov
fcmovnb
lcall
mov
adc
mov
pop
xor
jg
adc
sahf
ret
inc
ljmp
decb
jecxz
mov
call
lods
jmp
xor
sbb
popa
add
filds
push
rolb
je
test
insb
cld
push
movnti
lret
loopne
stos
push
push
push
xorb
push
aam
pushaw
test
pop
sar
pop
cmp
push
fmull
aaa
std
push
inc
js
jnp
add
add
js
push
add
in
cmpl
icebp
push
add
jge
shlb
push
pop
or
mov
mov
xor
loop
ret
add
sti
aad
int3
in
mov
lock
call
fsubrs
ret
in
xchg
push
push
cmpl
testb
and
inc
mov
jne
pop
jmp
push
lock
fimull
cmp
add
mov
in
xor
push
mov
mov
push
cmp
pop
cs
aad
pop
test
inc
mov
in
jge
pop
sti
das
into
push
and
mov
add
outsl
mov
mov
rcrb
xor
leave
push
inc
add
cmp
mov
jmp
jbe
hlt
fs
movl
sarl
in
xor
inc
add
incl
test
data16
dec
in
incl
or
js
mov
adc
jb
std
mov
inc
adc
adc
cmp
push
add
jp
push
ss
bound
loop
push
cld
das
push
pop
mov
fbstp
repnz
pop
data16
jne
push
or
out
aam
loopne
rcll
ret
dec
mov
mov
add
adc
and
add
add
dec
orb
pop
xchg
into
jne
or
jge
int3
mov
push
dec
sbb
fstp
adc
insl
add
adc
add
xchg
je
pop
xchg
fdiv
nop
push
push
mov
xchg
dec
gs
xor
lahf
pop
xor
push
pop
push
ja
paddd
xchg
loopne
int3
jns
or
subl
cmp
and
pop
jecxz
sbb
add
mov
in
inc
lds
mov
enter
xor
mov
testb
xchg
inc
adc
in
sarb
aaa
sub
add
ret
jae
adc
sub
in
into
push
xchg
mov
shrb
push
fsubl
fcomi
add
adc
pop
jge
xor
pop
cmp
xor
das
clc
filds
ret
orb
aaa
add
add
push
xchg
fcmovu
mov
jmp
jnp
adc
dec
sbb
repnz
pop
fidivrl
in
push
pop
jp
shrl
das
push
std
shr
pop
and
jns
gs
xor
add
outsb
loop
lods
dec
mov
ss
pop
mov
fwait
stos
cmp
push
rorl
push
test
and
lock
call
mov
rorl
test
call
mov
add
hlt
sbb
inc
dec
out
add
mov
dec
ret
mov
dec
pop
pop
adc
add
cmp
leave
sub
movsl
inc
sbb
or
inc
or
adc
gs
mov
mov
mov
call
add
jo
jbe
add
call
mov
adc
xchg
aas
mov
xchg
jl
rcrb
hlt
dec
ds
push
decb
jbe
js
mov
cmp
dec
xchg
inc
cld
nop
das
inc
cmpsl
clc
pop
pop
xor
and
mov
test
sub
and
or
pop
mov
or
push
jne
push
and
or
push
push
out
pushf
inc
fists
cmp
les
test
pop
testb
adc
je
fnsave
and
mov
subl
and
add
jle
inc
push
mov
inc
pop
push
pop
adc
xlat
shll
dec
imul
fisubl
dec
adc
clc
cmpl
push
push
sti
inc
shr
adc
cli
mov
add
dec
movzwl
jecxz
shl
call
adc
and
adcb
or
or
cmp
sub
mov
imul
cmp
lret
popa
cmpsl
push
jne
dec
jp
cmpsb
in
sar
jp
outsl
jle
in
mov
fwait
mov
mov
lahf
jl
inc
push
xchg
ret
out
leave
mov
sbb
dec
test
xor
mov
fmull
xor
call
push
sti
add
scas
mov
mov
sbb
cmp
clc
pop
push
dec
jl
inc
push
mov
add
push
mov
outsb
out
je
fstps
push
test
dec
dec
call
and
add
jb
fisttpl
add
test
sbb
add
leave
insb
pop
roll
push
mov
imul
dec
sub
xor
push
cltd
add
sub
hlt
inc
pop
nop
mov
ljmp
push
call
inc
or
inc
adc
mov
sub
stos
pop
vcvtsi2ssl
cmp
mov
ret
cld
pop
dec
push
push
add
imul
fildl
sub
push
adc
sub
or
pop
sbb
data16
mov
rolb
adc
mov
mov
loop
cwtl
adc
in
add
cmp
nop
add
mov
lock
xor
call
scas
shrb
in
push
xor
inc
push
sbb
or
pop
cmp
inc
lods
jecxz
scas
push
sub
test
add
ljmp
div
shlb
sub
pop
push
inc
adc
push
sub
int3
mov
out
jne
test
push
stos
ja
das
aam
mov
add
jne
test
mov
jp
add
jmp
or
data16
push
lods
pop
pop
push
clc
inc
and
fistpl
mov
adc
and
test
gs
jo
xchg
enter
aaa
mov
adc
inc
inc
in
inc
lock
jecxz
or
loopne
dec
mov
xor
pop
add
mov
subl
and
fldcw
xchg
sbb
sub
mov
pop
mov
test
jl
jle
or
inc
sbb
dec
not
loope
inc
lods
outsb
dec
ss
imul
xor
int3
rorb
ficoms
jbe
adc
enter
push
cld
or
inc
jp
inc
imul
or
dec
cmpsb
shrl
mov
rcrb
sub
cmpsb
push
cmp
add
lock
jle
sbb
push
rcll
inc
rorb
push
sub
outsl
sub
loopne
xchg
ljmp
pop
or
jne
push
loop
mov
mov
adc
xor
js
mov
pusha
pop
in
xchg
sbb
xor
lock
fmuls
je
fildl
cli
mov
fiadds
rcr
lock
lods
inc
pop
call
bound
mov
nop
cs
lock
loopne
pop
enter
push
dec
sbb
jb
or
add
pushf
lea
jl
icebp
sbb
sbb
jecxz
push
or
call
mov
in
adc
enter
lock
fwait
shl
push
call
xor
cmp
adc
stos
je
cmp
mov
aam
call
ficoms
sbb
pusha
push
mov
data16
add
decl
test
xor
inc
add
adc
push
mov
test
inc
gs
cli
or
adc
hlt
inc
shll
cli
push
les
push
lea
sbb
sub
xchg
movb
aam
mov
cmpsb
fsubr
or
mov
lcall
movsl
clc
ja
sub
xor
xor
mov
cmp
adc
lret
inc
test
fs
dec
sub
dec
push
xchg
pop
std
mulb
pop
xor
and
pop
rolb
outsb
aaa
sub
cli
mov
call
or
int3
dec
or
mov
dec
and
mov
sarb
pop
aad
outsb
mov
push
cvtdq2ps
ror
cs
and
in
add
or
gs
clc
ja
add
inc
leave
dec
xor
lods
sbb
hlt
xchg
adc
in
add
pop
jecxz
and
test
movsb
pop
push
int
ret
jbe
enter
test
call
dec
adc
cmpsb
bound
jmp
sti
mov
into
push
push
or
sub
cmp
pop
js
push
call
cmovge
xchg
out
or
fs
shl
incl
pushf
movsb
sub
adc
pop
ljmp
add
cmp
test
or
imul
cmp
cli
inc
dec
pop
or
xchg
xlat
outsb
lcall
or
add
test
call
sti
not
mov
gs
jle
sbb
dec
push
out
ret
push
faddl
test
sbb
ret
ja
mov
inc
je
rorl
push
lds
lret
fldl
into
fdivrp
push
orb
int
lock
call
call
xchg
incl
push
loop
jne
dec
mov
loopne
cs
fisubs
in
sub
call
aam
mov
mov
dec
and
adc
and
or
xchg
fsubl
repnz
xchg
cmpsb
cld
fs
ret
movsb
adc
mov
js
adc
add
mov
pusha
cmp
call
cmp
or
and
int3
int3
into
jne
fidivrl
pop
mov
jne
sbb
addb
in
jle
pop
loope
inc
enter
inc
lods
or
scas
js
mov
add
rorb
mov
push
push
pop
add
dec
notl
dec
repnz
fsubl
test
data16
loopne
cld
add
dec
push
cli
inc
sbb
dec
or
adc
fldlg2
test
insb
insl
ret
out
loope
je
sbb
xor
adc
sar
call
sbb
jmp
add
xlat
movsb
add
cld
fs
imul
mov
mov
roll
repz
push
push
jle
add
pop
pop
cwtl
jno
adc
fsub
lods
sbb
icebp
push
pusha
fs
jle
test
pushl
cs
out
inc
add
add
bound
jle
stos
bound
mov
sti
sbb
in
inc
sti
or
gs
cmp
push
mov
inc
xor
mov
int3
jne
sbb
add
inc
sub
xor
dec
data16
int
push
es
xor
mov
mov
mov
ret
andb
xchg
mov
call
lock
rorl
jb
test
xlat
shrl
lea
adc
inc
push
into
ret
xor
jb
pop
aam
shrb
xor
add
mov
lods
or
push
add
mov
sbb
cld
in
sbbb
or
negb
aam
cmp
repnz
andb
add
cmp
in
out
add
cmp
loopne
add
xchg
mov
cmpsb
mov
inc
xor
or
xchg
mov
imulb
loope
dec
int3
int3
add
lock
clc
int
mov
out
les
inc
leave
jp
lea
jno
mov
shrb
loopne
pusha
inc
and
push
call
xor
adc
std
push
rcr
pop
cli
adc
jmp
jmp
add
addl
pop
push
jo
sete
ret
add
dec
int3
push
adc
iret
pusha
ljmp
push
inc
add
and
mov
cs
ja
test
cmp
into
js
add
or
pop
pop
orl
ljmp
cld
cmpl
in
and
push
sarl
mov
inc
int3
ret
test
jecxz
jmp
std
movsb
mov
sub
xchg
mov
clc
cmp
fisubl
int3
fimull
outsl
sub
push
add
add
out
jae,pn
jb
xor
add
addb
testb
dec
ja
dec
insl
mov
push
mov
inc
sbb
pop
push
mov
push
call
in
inc
fwait
lea
xchg
popa
in
sub
cmpb
jecxz
mov
enter
outsb
dec
mov
pop
dec
std
shr
out
or
or
filds
insb
mov
inc
test
push
iret
stos
fcom
adc
inc
and
verr
add
add
rolb
add
sub
add
test
mov
cwtl
push
push
movsb
push
mov
cmp
jmp
lock
add
cli
mov
faddl
out
loopne
jg
or
mov
mov
push
test
xchg
outsb
lods
js
xchg
mov
ljmp
sub
push
mov
jb
adc
mov
lret
add
std
clc
sahf
mov
push
fisttpl
loopne
test
loopne
mov
add
inc
and
sbb
ja
std
mov
cmp
dec
add
jmp
xor
lret
loope
pop
adc
loopne
add
orb
pop
test
jecxz
adc
adc
adc
jp
rorb
jo
mov
sub
lods
aam
add
sub
call
or
int3
xor
adc
sub
sahf
insl
mov
clc
dec
cwtl
or
dec
rsm
mov
push
sti
cmpsb
and
inc
and
and
jmp
jb
incl
jae
xlat
ja
pop
cmpsl
xor
les
hlt
jmp
adc
xor
jne
cmpsb
inc
testl
add
mov
xor
mov
je
adc
jle
jne
pusha
inc
jge
lret
add
ret
pop
push
push
movsl
rcrb
pop
adcb
sub
into
jo
adc
movsl
daa
shl
push
push
add
cld
imul
fucomip
push
jge
mov
sub
sub
pop
add
data16
pop
std
xchg
mov
xor
call
mov
sbb
mov
pop
into
jge
add
push
xchg
aaa
push
js
movsb
ljmp
adc
push
jp
mov
push
ljmp
arpl
into
push
dec
les
test
jne
push
test
enter
inc
fs
std
add
mov
add
in
cmp
je
cmp
add
in
xor
sbb
inc
inc
ljmp
loopne
loop
mov
cmp
push
into
add
das
add
movsl
stos
es
js
mov
stos
je
test
cmp
ljmp
roll
pop
stos
incl
scas
pop
call
loop
decl
push
mov
add
mov
pop
mov
cli
pop
add
out
push
mov
and
lods
addb
fmuls
pop
call
in
jne
daa
sbb
push
std
inc
sti
jmp
cld
push
inc
or
jmp
aaa
faddp
setbe
ja
mov
fdivs
mov
std
jg
xchg
add
out
inc
je
cmpl
loope
lock
jg
pushf
xor
test
mov
cld
jne
jl
adc
bound
add
jp
or
dec
jo
or
loopne
jno
add
in
push
ljmp
loopne
subb
add
adc
jl
adc
ret
mov
xor
xor
je
out
popa
clc
int3
ds
fnsave
mov
fsubr
enter
ljmp
fs
xor
loopne
test
das
push
orl
loopne
push
fadd
int3
mov
cltd
add
mov
jbe
cmpb
lds
pop
cs
mov
cld
clc
es
fadds
fwait
loop
mov
push
add
gs
xor
out
mov
pop
roll
jo
cli
std
sbb
les
in
push
shl
push
shlb
lcall
lds
cmp
push
adc
xchg
pop
lahf
pop
cmp
shr
fstpt
shll
pusha
clc
adc
add
inc
lea
inc
mov
mov
mov
jmp
mov
xor
jb
mov
bound
mov
test
cld
mov
add
ret
movsb
cwtl
lcall
fsubrs
rcll
add
leave
push
push
or
push
push
pop
lock
shlb
testl
clc
fdivrs
fidivs
ret
sbb
testb
mov
das
lock
add
dec
ja
pop
aam
or
inc
inc
imul
adc
shll
adc
xor
ss
inc
or
and
mov
test
clc
fsubrp
stc
negb
andb
aam
je
mov
das
call
inc
lea
mov
nop
clc
cs
cmp
out
sarb
mov
jge
int3
roll
xchg
xchg
cld
mov
add
mov
xchg
adc
pop
cmp
mov
stos
inc
nop
add
push
mov
mov
fdivs
pop
dec
orb
jb
jae
sub
nop
imul
xchg
xor
push
bound
mov
or
push
pop
and
out
rorb
push
pop
push
ret
js
call
mov
aam
rorb
fisubrs
ljmp
js
add
pop
test
rorb
fldt
mov
lock
jl
add
int3
cmp
je
sbb
movsb
mov
cltd
add
add
and
mov
inc
ret
cmp
pop
pop
jge
cli
lcall
pop
sub
mov
pop
and
cmp
lock
add
push
jns
scas
es
inc
add
sbb
cmp
inc
stos
lea
repnz
xor
mov
or
in
dec
jb
or
add
add
jg
push
test
dec
add
adc
push
and
adc
rcll
mov
sub
xor
cld
mov
iret
insb
add
add
es
jmp
leave
cld
loope
adc
scas
popa
mov
pop
dec
es
pop
mov
scas
push
push
leave
jmp
adc
dec
je
or
add
stos
pop
sbb
jmp
adc
add
ret
test
or
push
jp
add
das
aam
push
stos
int3
push
andnps
xchg
lea
fdiv
mov
fisubs
into
or
push
int3
mov
add
lcall
mov
push
or
cmp
xchg
fimuls
cmp
call
push
xor
inc
cli
push
inc
and
mov
sbb
hlt
icebp
mov
rcrb
out
mov
call
sub
prefetch
or
aam
adc
or
inc
inc
sbb
stc
lea
and
ljmp
mov
into
push
loop
rcl
mov
dec
jo
push
mov
sbb
pop
cmc
orb
divl
push
jmp
rcll
mov
inc
xor
or
cmp
or
mov
in
ret
jl
call
cmp
add
fcmovnu
cmpsb
inc
outsl
jb
js
std
sahf
push
pop
or
pushf
dec
and
aad
or
or
xor
pop
inc
cmp
cmp
cli
cld
int3
add
cmp
fs
in
out
xlat
cld
repnz
xor
pop
jbe
lret
fwait
out
mov
test
xchg
cmp
jb
test
mov
out
aam
and
ljmp
mov
inc
jo
lret
rcrl
rcrl
dec
mov
je
loop
and
adcb
in
add
jne
rorb
and
int3
mov
outsb
push
mov
gs
in
add
roll
mov
in
fcmovu
lock
dec
jmp
mov
int3
push
mov
add
outsb
xchg
jl
inc
rorl
scas
sbb
mov
gs
or
mulb
mov
mov
inc
inc
cmp
sarb
jno
mov
shr
sbb
sub
insb
inc
pop
or
mov
add
in
call
mov
cmp
mov
push
jb
mov
inc
jle
test
hlt
bndstx
add
lods
js
call
aaa
mov
je
mov
mov
pop
push
out
xor
shlb
add
roll
cs
into
adc
sbb
pop
add
add
mov
ret
pushf
pop
xchg
in
scas
js
sbb
cmp
add
or
inc
repnz
or
jb
mov
fildll
jl
push
or
pushf
add
add
fildl
call
or
inc
or
inc
inc
inc
outsb
xor
neg
and
sbb
bnd
shr
pinsrw
fstl
rolb
pop
bound
adc
mov
mov
jle
sbbl
sti
imulb
add
lea
enter
incl
fs
sbb
imul
add
mov
js
sub
jno
jb
imul
sub
aad
or
and
cld
add
dec
into
push
add
push
js
mov
push
cmpsb
ja
cld
ror
std
add
movsb
inc
jbe
push
and
rorb
sbb
mov
adc
incb
pop
add
mov
lcall
leave
andl
pop
inc
dec
jns
add
addl
mov
add
or
cs
push
push
and
je
mov
and
ret
xor
pusha
dec
shr
jbe
adc
mov
pop
add
divb
or
je
in
pop
cmp
mov
clc
mov
outsl
mov
cmp
add
or
les
mov
jmp
pushf
adc
inc
push
mov
mov
adc
mov
cld
lahf
mov
push
adc
test
or
decl
loopne
or
outsb
dec
int3
inc
pop
fildll
lods
rcrb
orl
adc
aad
xor
leave
mov
and
mov
pop
dec
leave
or
push
orb
add
addl
pop
jbe
and
cmp
sarb
pusha
xchg
mov
lcall
stos
aas
nop
lret
mov
aas
push
sub
xor
ficompl
es
cmp
call
and
pop
into
rorb
dec
mov
cld
loop
rorl
push
inc
lret
fnstsw
push
adc
test
mov
adc
sahf
les
adc
cmp
fbld
fs
push
inc
push
cwtl
xor
mov
sub
dec
add
mov
jg
movl
nop
push
or
push
pop
out
xchg
lds
and
add
pcmpgtd
cld
inc
add
mov
inc
ret
push
mov
push
inc
incb
cld
mov
jo
fs
xchg
lods
or
adc
out
push
mov
test
add
xor
test
sub
pop
ja
loopne
in
dec
rcr
incl
inc
mov
push
inc
jbe
mov
jnp
add
push
add
mov
lods
lcall
dec
mov
sub
mov
mov
decl
push
lret
or
addb
inc
push
add
leave
cli
inc
inc
inc
aaa
fdivrs
mov
jbe
mov
mov
negb
or
ja
je
loopne
mov
cld
shlb
jbe
sbb
mov
adc
lcall
inc
insb
jge
mov
add
and
sub
sbb
les
inc
add
sbb
int3
clc
mov
ja
faddp
dec
add
lea
cmp
mov
dec
je
les
mov
loop
push
cmp
xor
decl
push
xorl
inc
mov
aam
or
clc
ljmp
pop
jmp
mov
push
test
add
leave
scas
push
add
std
push
aam
mov
out
js
fs
movsb
ucomiss
cld
aas
mov
jne
mov
push
push
xorl
mov
outsl
mov
enter
jmp
arpl
mov
push
inc
pop
lock
add
aaa
je
or
xorb
repnz
in
push
fcomi
pop
loope
js,pn
ret
enter
mov
mov
xor
nop
outsb
adc
hlt
fcomp
pushfw
inc
loop
gs
mov
xor
sar
sahf
dec
cmp
rorl
dec
loopne
or
sbb
inc
mov
rcrb
call
call
adc
inc
jge
call
adc
andb
dec
mov
mov
push
cld
ljmp
fs
scas
add
rcr
cmp
push
insb
test
mov
jne
movsl
orl
lds
callw
sarb
add
lock
sarb
ljmp
mov
inc
cmpsl
dec
and
add
add
movsb
aaa
mov
sahf
cmpsl
cmp
or
or
dec
mov
lea
push
out
add
cld
push
push
push
add
pop
sbb
sarb
sar
mov
int3
and
inc
je
fimuls
mov
jg
add
jmp
sarb
mov
clc
or
je
jmp
insb
mov
mov
pop
in
cmp
pusha
or
dec
call
pop
inc
dec
test
test
cmp
aam
shl
lods
sbbl
sbbl
adc
adc
mov
shrl
sbb
add
xor
and
int3
je
orl
pop
sbb
adc
call
add
mov
dec
pop
hlt
lea
lock
int3
in
sbb
mov
ss
ftst
mov
add
add
adc
pop
add
roll
jge
ds
inc
add
mov
sbb
xor
push
out
ret
nop
ds
adc
push
jne
inc
jecxz
js
fldt
or
push
pop
mov
call
mov
push
pop
loopne
int3
mov
or
and
push
gs
rcrl
sub
push
testb
inc
insl
in
es
mov
aaa
mov
and
shlb
mov
fdivl
cmp
pushf
xor
add
adc
push
sahf
fsubrp
mov
rcrl
cmp
lock
push
outsl
in
cmpsl
mov
js
dec
call
sbb
aaa
push
cld
outsl
jne
jg
decl
mov
add
cmp
fs
inc
andb
add
push
pop
mov
test
or
or
push
sub
jmp
jne
add
mov
or
adc
jae
inc
subb
pop
pop
test
inc
push
shlb
mov
ret
lcall
out
movsb
gs
or
sarb
xor
and
call
fistl
mov
mov
dec
clc
jp
mov
cwtl
test
imulb
rcll
into
dec
fidivs
mov
mov
mov
rolb
shll
mov
jb
loope
insb
mov
push
and
push
int3
cld
inc
add
jg
add
cwtl
push
shl
outsb
gs
inc
lahf
push
sub
insb
mov
mov
ret
add
cmp
xchg
mov
aaa
fnstcw
mov
ret
sub
xchg
push
and
arpl
pop
pusha
cli
inc
loopne
jecxz
sarb
in
jp
std
inc
outsb
incl
cmp
mov
push
add
mov
push
loopne
and
mov
mov
cmpsl
mov
push
roll
aad
dec
subb
ds
sbb
inc
or
imul
sbb
jae
push
fbstp
pop
aad
mov
xor
ror
inc
nopl
jg
in
ret
xor
shl
rol
add
mov
dec
shll
loopne
jbe
add
lcall
rorb
or
push
mov
je
pop
pop
push
in
fisubrl
test
push
push
add
int
or
adc
mov
fadd
or
jb
dec
shl
push
clc
xchg
cwtl
push
enter
or
jne
inc
cmp
enter
xor
nop
dec
out
shl
clc
or
jle
outsb
lock
cmp
add
push
jp
scas
adc
mov
clc
add
dec
dec
or
call
push
das
and
pop
jp
dec
dec
fcompl
out
je
shl
dec
xor
or
adc
pop
adc
test
clc
ss
shrb
jb
or
xchg
push
int3
or
and
faddl
jne
adc
push
loopne
mov
adc
or
lock
les
in
mov
ret
or
dec
insb
or
stc
mov
xor
fdivp
in
or
loop
sbb
pop
lea
add
push
xchg
je
xor
pop
sub
pop
cmp
add
sbb
xor
push
push
pop
daa
in
pusha
xor
pop
inc
jo
jne
js
out
ss
inc
push
mov
stos
jb
jecxz
dec
jne
inc
ret
in
inc
lock
ret
cmp
inc
push
dec
mov
dec
mov
mov
fisubs
out
lret
lcall
add
push
pop
dec
mov
lea
fnsave
inc
pop
shlb
insl
adc
imul
mov
mov
push
ja
mov
or
adc
push
sub
imul
aas
xor
xchg
addb
in
fistpll
sub
lcall
test
and
ljmp
sar
mov
add
cli
nop
sti
add
stc
incl
inc
fwait
stos
mov
sbb
mov
jg
shrl
pusha
push
pop
push
adc
cwtl
subl
cmp
sub
xchg
into
test
fmuls
inc
hlt
out
outsl
mov
das
into
cmp
out
push
mov
sub
shll
push
adc
out
ret
leave
xor
mov
decl
inc
adc
test
outsb
add
inc
fsin
shll
mov
add
push
jne
add
aam
jle
test
or
cmp
subb
push
xor
inc
adc
fdivl
mov
pop
clc
rol
jmp
repz
mov
arpl
call
mov
test
movsl
or
mov
les
sbb
jmp
test
ljmp
cmp
out
sbb
cmp
cmp
ret
cld
add
clc
jge
push
xor
xor
push
sbb
mov
orl
dec
pop
add
fdivs
call
mov
lock
out
cmp
addb
mov
sub
and
out
mov
and
push
ljmp
insb
jo
dec
sbb
push
pop
inc
lods
add
into
outsl
adc
dec
insl
in
push
or
cwtl
add
decl
sbb
pop
push
aam
ljmp
mov
push
xorb
push
adcb
sub
fcomp
dec
fadds
je
lock
sar
xchg
push
es
ljmp
test
mov
rcrb
mov
icebp
aam
mov
jae
push
push
test
and
ret
and
enter
pop
inc
adc
jge
loopne
adc
mov
pop
enter
jecxz
add
inc
aas
hlt
jno
cmp
cmc
orl
ret
add
add
pop
push
xlat
cmp
push
lret
js
movsb
movsb
add
mov
in
or
je
ret
imulb
lret
xor
push
clc
sub
push
mov
mov
inc
call
sub
test
or
test
add
mov
sub
mov
sbb
test
mov
push
push
clc
sub
movsb
pop
shl
mov
add
push
mov
rclb
mov
rcr
inc
adc
adc
cmp
sbb
pop
or
push
decb
adc
es
insb
lret
test
pop
inc
push
push
add
lret
inc
std
aas
sub
inc
and
shl
mov
cmp
push
sub
push
push
add
or
mov
mov
or
cmpl
rclb
data16
adc
sub
insl
mov
mov
outsl
aaa
cmp
int3
cmp
enter
push
adc
sub
sarb
sbb
insb
mov
je
test
mov
add
push
ljmp
inc
xchg
cmpb
lcall
subb
out
ret
ss
mov
jp
add
add
fwait
pop
mov
pop
orl
mov
mov
loop
pusha
or
mov
jle
mov
insb
les
sbb
or
pop
inc
fnstcw
pop
ljmp
sbb
push
lds
outsb
push
sahf
sahf
ficomps
push
sbb
add
mov
sbb
loop
jmp
jo
test
xor
faddl
aam
inc
push
inc
es
add
add
inc
lcall
or
add
or
pop
in
dec
enter
je
je
sub
call
ljmp
cmp
jg
cmp
sar
xor
jmp
xor
call
and
add
pop
push
adc
lock
jl
addb
clc
test
jne
xchg
or
dec
sub
sahf
adcb
popf
push
fstps
std
int
dec
cmp
mov
xor
add
add
add
adc
adc
std
adc
adcl
pop
and
jmp
rolb
push
push
push
pushf
xchg
ret
or
scas
add
js
and
sub
cmc
lahf
sub
cld
movsb
push
cmp
pop
add
mov
shll
ljmp
push
lcall
mov
mov
es
pop
adc
mov
lock
cld
mov
push
cmp
das
pop
cld
scas
xor
mov
ds
test
insb
es
jo
call
mov
mov
jnp
push
rcrl
jmp
aas
inc
mov
push
roll
frstor
aaa
std
imul
add
pop
loopne
call
dec
loop
les
adc
push
pop
xchg
xor
push
stos
jmp
inc
push
jmp
add
pop
test
je
pop
dec
lret
testl
aaa
cmp
call
inc
fcomi
icebp
nop
or
pop
push
inc
stc
inc
adc
push
cmp
cmp
cld
dec
movl
leave
sub
or
mov
loopne
aad
repnz
int3
cmp
add
jg
cmp
jno
pop
inc
ds
add
mov
test
out
les
lcall
nop
cmp
add
xor
push
in
xchg
pop
sub
add
ret
test
cwtl
inc
mov
aas
int3
jne
lea
shlb
cmpsl
mov
insl
lock
leave
cli
in
cmpsl
push
pop
es
push
mov
fs
mov
mov
push
sub
cmp
mov
pusha
push
mov
mov
hlt
add
scas
pop
int3
pmulhuw
mov
add
rorb
je
pop
cmp
or
inc
jbe
lea
je
and
popf
cli
pop
mov
je
pushf
adc
lods
add
inc
rcrb
insl
inc
test
divl
cmpsb
adc
pusha
sbb
sub
movsl
add
push
scas
mov
jmp
push
push
cmp
cmp
sbb
fdivs
aaa
cmp
mov
popa
scas
pop
jne
out
inc
insb
fdiv
pushl
outsb
loopne
lcall
jbe
fidivs
jb
jmp
xchg
cmp
fs
sahf
push
fisttpl
ljmp
pop
pop
dec
or
fisubrs
lea
arpl
outsb
jg
pusha
jmp
or
loop
mov
cs
test
into
pusha
push
test
out
add
pop
mov
add
push
push
add
adc
int3
pop
add
popa
dec
cmp
les
mov
jge
mov
ret
push
jp
in
mov
add
xor
add
mov
popf
push
daa
and
clc
lea
fldl
inc
inc
mov
jge
bound
xor
pop
lods
push
jmp
push
roll
stos
push
cmc
mov
inc
out
sahf
loope
pusha
push
stos
clc
push
call
lea
scas
push
incb
leave
dec
inc
push
cli
fisubs
push
or
fidivl
jle
inc
dec
leave
mov
mov
cmp
xchg
loope
outsl
call
add
int3
hlt
push
dec
bswap
insb
mov
mov
dec
jo
adcl
fmull
scas
ss
loop
pop
or
xor
sbb
mov
inc
pop
shrl
sub
mov
cmp
add
mov
push
pop
pop
decl
sub
push
inc
rcl
jbe
out
pop
shlb
push
cmp
cmp
cmpb
or
in
jle
mov
imul
bound
shlb
inc
and
and
pop
mov
jge
push
add
cmp
loopne
push
push
int3
outsl
adc
aas
dec
decl
ret
add
xchg
sbb
sbb
inc
inc
jmp
and
aad
mov
jbe
push
cli
je
test
dec
mov
movsb
js
or
cmp
push
cwtl
data16
fadds
sbb
std
push
jb
adc
es
or
sti
pop
lcall
add
ljmp
movsl
lods
fxtract
xchg
fmul
sub
push
mov
call
add
jbe
sbb
xchg
add
cmp
hlt
cmp
inc
pop
add
xchg
push
add
sub
mov
xchg
mov
fmuls
les
mov
mov
ret
mov
push
hlt
mov
sbb
shr
adc
call
leave
fisubrl
dec
or
test
int3
andl
pop
gs
loopne
push
hlt
nop
sbb
inc
es
adc
cmpb
testb
adc
sub
push
mov
add
adc
push
mov
add
incb
sub
jne
or
dec
adcb
push
cld
dec
or
sti
push
jns
ss
fists
out
dec
inc
jmp
ret
std
lock
call
out
jmp
inc
jmp
pop
xor
js
mov
cld
sbb
cld
jae
je
mov
call
jb
rolb
sub
mov
lret
in
pop
push
pop
scas
push
xlat
mov
into
push
or
jle
stos
test
shrb
sar
out
cmp
or
jbe
std
ret
pushf
xor
mov
mov
xor
mov
cmc
cmp
pushl
flds
push
sti
sub
out
adc
pop
lahf
orb
or
js
push
std
jl
inc
ljmp
pop
loopne
pop
inc
cmp
push
pop
int3
push
test
sbb
in
sbb
xor
dec
movb
incb
mov
add
js
inc
shll
xor
mov
sbb
lcall
push
les
je
sub
in
pusha
test
bnd
clc
imul
fmul
sbb
xchg
or
stos
mov
movsl
adc
sbb
fsubrl
sbb
inc
cmp
pop
pushf
test
mov
jge
or
pop
jbe
adc
add
sbb
nop
add
clc
lock
test
enter
ss
jmp
and
outsl
leave
lods
incl
sub
mov
mov
test
hlt
imul
in
cld
int3
xorw
loope
add
push
pop
fildl
jb
insb
jmp
adc
adc
out
add
out
dec
sbbb
add
push
or
adc
push
xchg
mov
fistpll
sbb
arpl
insb
xor
cmp
sbb
js
testl
mov
sub
roll
and
addr16
movsb
push
insb
cmp
dec
lea
jmp
je
rolb
clc
add
rclb
pop
sti
arpl
mov
adc
and
fcomps
cmp
mov
xorb
clc
fistl
sbb
add
out
push
ret
mov
xchg
push
es
cmp
cvtps2pd
inc
jp
dec
pop
loop
mov
js
lret
inc
push
out
cli
add
jp
adc
repnz
mov
cli
test
push
mov
loopne
stos
adc
push
cs
sbb
daa
mov
push
add
push
pop
add
inc
xor
call
xor
jb
gs
inc
or
xchg
xchg
call
push
add
mov
inc
mov
lar
mov
pop
pop
push
add
dec
loopne
cmpl
jmp
es
call
xor
clc
js
js
scas
into
mov
sub
fildll
push
aas
sbb
rclb
test
fmuls
inc
dec
cmp
pop
fsubs
ja
mov
adc
repz
aaa
sbb
mov
sbb
adc
push
xchg
clc
push
test
mov
cmpb
xchg
leave
push
mov
jnp
scas
incl
insl
fisubs
mov
in
imul
ljmp
clc
scas
sbb
jmp
push
test
add
push
pushf
push
jne
in
sub
call
rorb
push
pop
push
pop
inc
or
fsubr
pop
call
js
sahf
leave
rorb
xor
pushl
add
push
aaa
and
push
mov
ja
add
outsb
xor
je
mov
xchg
fdivr
popf
xchg
xorb
stos
pop
sbbb
push
shl
push
or
in
push
add
cmp
outsl
xor
sti
jmp
nop
push
and
fmuls
call
add
push
jae
or
lcall
mov
rcl
or
add
lahf
out
or
jae
andl
mov
adc
fdivrs
and
les
enter
fldenv
sub
cmp
dec
push
jo
dec
cli
push
jmp
add
incl
add
data16
add
mov
jbe
std
lds
insl
add
inc
xor
xchg
sub
cmp
inc
test
sbb
movsb
lea
sar
jg
inc
loop
icebp
push
adc
mov
or
data16
xchg
scas
cld
test
shlb
fsub
cld
call
scas
adc
lock
adc
dec
pop
int3
adc
add
ljmp
rorb
mov
cmpsb
inc
mov
cld
jle
out
sub
pop
adc
add
sbb
lock
add
divb
addb
pusha
inc
push
mov
test
adc
mov
negb
and
ljmp
jl
shll
and
shlb
adcl
inc
xlat
push
pop
mov
lea
push
insb
xchg
pop
scas
push
mov
cmp
pop
mov
sti
jb,pt
dec
xor
jno
ja
stos
rcll
gs
insb
pusha
xchg
fidivrl
and
mov
push
lcall
adc
in
xor
sbb
jmp
jae
int3
add
loopne
lods
xchg
adc
lea
or
ss
adc
jno
mov
push
add
hlt
mov
ret
inc
subl
jl
xchg
cmp
std
or
push
add
call
and
mov
add
adc
popa
and
sbb
pop
mov
push
xchg
test
mov
lahf
xchg
add
int3
ja
or
pop
pusha
and
jmp
jmp
lods
call
mov
lea
sarl
data16
out
sub
or
and
sub
sbb
ret
aas
add
orl
loope
push
adc
or
xchg
rolb
adc
push
mov
ss
xor
inc
xchg
sbb
push
ljmp
lods
shr
or
dec
and
push
jmp
hlt
daa
sbb
pop
in
lock
dec
inc
xor
mov
test
je
cmp
cmp
jo
vaddss
sbb
dec
sbb
mov
push
add
outsb
jl
outsb
lds
fadd
push
inc
adc
ret
or
or
cld
jmp
clc
and
xchg
sbb
xchg
fidivs
int3
mov
cmpsb
ret
ror
clc
call
imul
push
adc
xor
nop
lock
and
or
adc
mov
bound
xchg
mov
jp
mov
js
dec
mov
mov
or
jl
push
mov
mov
mov
or
xor
inc
adc
pusha
mov
mov
insb
lea
lcall
pop
mov
pushf
add
push
fcomp
sbb
add
stos
incb
in
aaa
inc
mov
jb
aaa
je
es
ljmp
push
pop
inc
fistps
sub
mov
lods
push
insb
pop
shrb
inc
push
sbb
ljmp
lcall
xor
mov
inc
std
mov
adc
push
adc
subl
push
add
mov
mov
test
fdivrp
mov
ja
stos
dec
faddl
and
push
in
pop
cli
or
outsb
mov
mov
das
test
adc
dec
adc
sbb
dec
dec
lock
cmp
xor
jo
xor
aad
dec
int3
xchg
push
fiadds
clc
aad
leave
mov
in
add
or
inc
insb
add
ss
xchg
jne
mov
ret
add
test
and
cmp
adcb
inc
test
add
orl
mov
je
fildll
and
sub
push
fdivr
or
bound
test
inc
and
or
add
mov
call
pop
stc
xor
or
dec
cmp
jae
add
sbb
jge
leave
jo
int3
std
add
xlat
outsl
mov
fdivs
cmp
mov
loop
shrb
push
cli
or
into
mov
jmp
sub
mov
sub
add
notb
sbb
mov
incb
push
iret
out
pop
and
cmp
in
repz
sbb
pop
outsl
es
call
addl
and
mov
xor
loope
push
mov
inc
adc
mov
jb
jmp
loopne
pop
hlt
loopne
push
je
sub
mov
out
push
xchg
dec
jg
mov
mov
call
push
jmp
pop
or
mov
push
add
jg
stc
int3
pop
les
cld
xor
repz
test
xchg
clc
dec
mov
insb
adc
shrb
es
cld
and
lea
das
test
popf
jge
add
xor
orl
mov
insb
push
mov
sbb
data16
mov
fsubr
dec
pop
loope
lods
mov
test
pop
bound
mov
lods
lock
push
test
xor
mov
movb
push
cs
or
cld
add
mov
fwait
sub
decb
xchg
jle
sbb
cmpb
or
test
sub
mov
push
loope
adc
scas
mov
lock
test
sub
jno
clc
or
jp
xchg
mov
pop
jl
or
sub
int3
notl
js
xor
dec
ret
test
inc
je
sar
pushl
xor
mov
shll
sub
or
xchg
adc
push
mov
mov
push
and
fdivrl
clc
cld
or
and
add
ss
loopne
push
cmp
scas
js
mov
or
pushf
sahf
xor
fs
mov
add
push
mov
rolb
imul
adc
or
mov
in
mov
scas
push
mov
sbb
mov
insb
add
push
mov
dec
fldl
and
add
sbb
add
incl
sub
push
div
fdivp
add
push
jl
push
pop
or
add
push
cli
xchg
sbb
or
lds
test
xchg
shrb
jmp
ds
push
movsb
push
cmp
aam
negb
jg
fdivs
push
xlat
and
push
fsubrl
aas
cli
jp
cld
mov
or
ret
jae
fisubs
push
ss
call
adc
adcl
loopne
dec
or
dec
mov
pop
decl
add
je
inc
cli
outsl
decl
decb
sarl
inc
out
insl
js
push
add
sbb
cmpsl
cmp
add
leave
in
push
xor
or
xor
aad
cs
mov
cwtl
inc
fsubrp
test
fdivs
push
or
cmp
mov
mov
lods
cwtl
clc
jg
mov
clc
or
rcr
xor
mov
cmpsb
test
mov
data16
cmp
inc
jne
and
mov
mov
scas
xor
xchg
sarb
shlb
pop
clc
mov
add
movsb
stc
adc
mov
and
not
pcmpgtb
lock
jne
sarb
mov
into
andl
adc
cmp
enter
or
ljmp
push
notb
cmp
pop
sub
iret
aam
mov
arpl
leave
sahf
call
mov
sbbb
jecxz
mov
inc
push
test
pushf
xor
aad
lea
call
xor
mov
add
push
mov
loopne
call
jg
sbb
mov
out
pop
decl
popa
je
pop
mov
ret
cmp
jno
cli
dec
mov
mov
vcvtsd2ss
mov
jo
sub
ret
mov
dec
dec
fs
mov
xor
inc
jl
out
mov
dec
pop
push
std
sub
adc
inc
negb
in
pop
and
push
rol
inc
pop
testb
add
shrb
pop
push
mov
push
lea
mov
dec
int3
arpl
jno
mov
xchg
das
rol
pop
jmp
insb
xchg
push
cld
out
mov
cmp
insb
cli
inc
inc
dec
test
aam
test
int3
rcl
add
sti
inc
and
shrl
jp
dec
gs
xor
jb
loope
ss
andb
aam
push
cli
jle
adc
adc
cmp
call
rclb
ljmp
mov
les
xor
add
test
dec
push
int3
jmp
das
push
or
enter
cmpsl
mov
sahf
hlt
or
cmp
movsb
test
xchg
push
loope
rclb
or
roll
adc
sbb
enter
and
nop
mov
mov
stos
add
inc
xor
fs
jo
aaa
xor
xor
add
imulb
ret
fsubs
mov
adc
and
les
je
add
call
pushf
pop
bound
or
mov
loope
xchg
lock
adc
adc
or
sbb
inc
inc
data16
sbb
dec
add
push
mov
stos
mov
pop
insl
mov
fsts
mov
jb
sub
mov
rorb
mov
fs
sahf
inc
ffreep
call
jge
test
or
addb
in
mov
mov
adc
push
push
dec
mov
adc
pop
push
in
jecxz
jge
test
xor
fs
mov
rorl
or
or
cmpsb
add
xor
push
mov
and
loopne
movsl
popf
sbb
add
inc
or
in
mov
adc
mov
cs
test
int
jmp
inc
push
mov
push
sub
ljmp
into
mov
cmp
push
stc
push
pushw
ret
das
add
pop
jp
dec
ret
cs
xor
loopne
fdivrp
mov
jl
rol
cmp
js
add
add
call
mov
dec
cs
loopne
pop
jmp
push
pop
cvtps2pi
xchg
popa
pop
sub
dec
pop
mov
xor
clc
stos
rol
sbb
mov
jl
dec
jg
cmc
push
ret
mov
and
out
mov
pop
pop
inc
pop
adc
in
mov
or
cmp
lea
cwtl
inc
cli
orl
pop
dec
icebp
cmpsl
ljmp
call
dec
mov
ret
xor
dec
mov
mov
decl
ds
mov
loop
mov
nop
mov
sarb
cld
mov
inc
push
sbb
sti
add
sub
in
jbe
fsubs
add
outsb
loop
or
and
push
cs
shlb
push
pop
lock
adc
push
cld
dec
mov
xor
inc
add
add
ffree
jo
push
xorl
inc
js
dec
xor
lret
fs
cld
ffreep
jl
mov
repz
push
push
push
rolb
push
push
jno
pop
inc
inc
adc
dec
sahf
leave
addl
rorb
mov
inc
fmuls
hlt
sbb
pop
pop
xor
sbb
aam
test
leave
pop
call
push
pop
call
cmp
add
sti
cmpsb
int3
add
mov
cld
mov
lahf
mov
and
outsl
fwait
or
shrb
mov
dec
in
cmp
clc
ret
popf
enter
lret
cmp
mov
andl
sub
pop
inc
mov
mov
adc
rclb
xor
leave
inc
test
call
jmp
inc
add
jbe
mov
loope
jo
fdivs
pop
dec
orl
call
popa
adc
and
inc
leave
pop
sub
lods
arpl
xor
mov
cmp
cld
sbb
xchg
dec
rcl
stos
add
loopne
scas
pusha
mov
inc
sbb
scas
cmp
call
daa
sub
dec
xchg
sbb
sti
jmp
inc
aas
adc
nop
mov
adc
sub
call
push
int3
inc
jge
sar
icebp
or
imulb
cmc
ret
cmp
mov
mov
call
test
sub
inc
xchg
jge
loop
insb
inc
add
mov
and
hlt
movsb
pop
inc
ds
inc
sbb
mov
cwtl
fidivl
cli
and
mov
pop
shlb
add
loop
jmp
push
mov
add
xchg
jo
push
enter
std
and
jmp
roll
push
aad
rclb
jne
push
dec
push
inc
adc
clc
dec
inc
jge
push
xor
add
mov
jne
push
mov
lea
add
inc
ror
ror
cmp
cmp
xor
stc
or
rclb
orb
fcmovnbe
or
adc
sbb
insl
sbb
loopne
add
gs
loope
and
cwtl
cmp
adc
jns
inc
stc
shll
lea
jle
jae
les
rol
fbld
add
jl
pop
jp
in
lock
popl
ret
sub
clc
push
jbe
jecxz
clc
int3
pop
pop
adcl
cmp
inc
xchg
pop
fs
iret
inc
ret
adc
fdivr
cmp
clc
sahf
push
sbbb
jle
ss
into
rorl
or
fiadds
int3
jg
sbb
rcrl
aam
sbb
out
mov
je
jge
inc
les
mov
dec
shll
xchg
out
negb
rolb
out
adc
lock
mov
out
outsb
xor
mov
add
test
push
push
rcrb
dec
test
mov
rorb
mov
adc
ficoms
xor
mov
aad
xor
test
dec
call
add
mov
test
inc
and
xchg
mov
adc
mov
mov
rcrl
daa
clc
pop
movsl
ds
icebp
push
rclb
cld
sarb
popa
and
xor
pop
cmp
xchg
fmuls
sub
jecxz
mov
repnz
jmp
faddl
rcll
push
call
inc
stos
push
es
lret
add
lds
roll
popa
xchg
addb
cld
cmp
add
add
mov
test
and
jmp
outsl
icebp
xchg
pushf
mov
test
cmpl
adc
shlb
mov
mov
pmullw
lea
dec
mov
mov
dec
movsb
xchg
push
push
push
int3
push
ficomps
and
adc
jae
shl
sub
lret
insb
fisubrs
popa
push
pop
dec
or
push
stos
add
add
test
loop
xorb
in
mov
cs
cmp
or
aaa
add
popf
call
add
push
push
push
fimull
repz
fdivs
sysexit
push
sub
add
call
cmp
jmp
hlt
popa
add
iret
and
mov
mov
outsl
add
inc
iret
insb
xor
xor
movsl
jb
mov
mov
prefetcht0
inc
mov
stos
sbb
adc
cli
pop
add
lea
clc
dec
std
push
addl
add
mov
in
mov
mov
and
add
gs
jae
push
cmc
push
ret
push
push
jo
dec
mov
mov
pop
cs
roll
test
outsl
incl
xor
ret
pop
cmp
and
int
lea
jb
push
jmp
cmc
inc
rcl
mov
jbe
pop
inc
xchg
test
xchg
adc
adc
orl
out
cli
add
xor
imul
xor
inc
lods
mov
pop
je
pusha
cmpsl
mov
jo
xchg
mov
xchg
sub
xchg
mov
or
dec
sub
rclb
mov
and
mov
pop
inc
shlb
lea
adc
call
pop
insb
push
outsb
dec
and
mov
pop
jecxz
mov
rclb
mov
xor
aaa
cwtl
inc
xchg
mov
sbb
push
push
mov
inc
clc
adcl
push
into
mov
cmpsl
mov
xchg
add
adc
in
data16
ja
clc
enter
or
dec
jo
push
shr
rolb
or
cld
pop
xor
gs
xor
aaa
insb
sub
add
ljmp
test
je
and
dec
iret
sarl
pop
cmp
dec
sbb
mov
aad
xchg
push
jo
aad
push
pop
pop
test
mov
mov
call
lea
push
push
jb
sahf
movsb
nop
pusha
fildll
sub
lcall
mov
fimuls
subb
or
adc
inc
xchg
mov
inc
sub
push
movsb
xchg
ret
jmp
testb
mov
inc
cmp
xor
out
movb
les
test
call
sbb
movsb
push
jmp
push
lea
bound
push
pushf
mov
jecxz
mov
add
shrb
xchg
mov
mov
pop
or
outsl
jbe
lock
jle
loopne
icebp
push
mov
inc
push
sbbl
jmp
insb
pusha
jo
js
mov
loope
test
je
cmp
lock
jne
mov
aas
test
lea
movsl
gs
fcomip
jne
sti
mov
std
int3
sbb
std
fldcw
pop
test
sti
push
push
push
push
test
dec
rclb
push
mov
shr
je
and
repnz
pop
or
mov
addl
add
dec
fistpl
mov
or
or
xor
xor
xor
addb
call
ret
and
fistl
pop
ja
aam
cmp
shlb
mov
hlt
cli
jnp
loopne
mov
mov
and
outsb
bound
sbb
lea
sar
mov
sub
pop
int3
add
test
adc
scas
sbb
mov
pushf
push
adc
dec
fsubrl
jle
dec
xor
cmp
jbe
xor
call
clc
add
push
notb
inc
push
test
rorl
lds
cmp
addr16
pop
and
push
outsl
or
test
adc
dec
pusha
loope
mov
jne
int3
add
int3
inc
test
fwait
ja
adc
lea
xor
popa
mov
cmp
mov
js
jl
js
movsb
and
sahf
push
aaa
popa
xor
outsb
test
jmp
inc
shl
mov
mov
cmp
push
out
insb
push
push
adc
or
fisubl
or
lret
stos
test
add
dec
or
inc
adc
mov
jo
sbb
inc
or
xor
movsb
pusha
or
mov
mov
nop
inc
ret
sbb
sahf
sub
add
xchg
int3
mov
mov
aad
xchg
xor
mov
xor
je
mov
outsb
adc
pop
xchg
add
push
mov
sbb
lods
fsub
idiv
push
inc
add
rol
inc
call
stos
mov
xchg
or
mov
adc
jecxz
imul
mov
into
or
mov
sarb
lock
les
adc
adc
fs
cmp
jno
add
jmp
push
lcall
imul
push
cmp
mov
mov
inc
clc
dec
rcrb
neg
cwtl
js
jl
inc
pop
adc
adc
jne
mov
xor
sarb
push
cmp
and
jl
mov
push
push
mov
call
icebp
out
rcrb
or
loop
xor
enter
pusha
add
test
push
rcr
mov
or
cmp
push
jno
adc
xor
subl
mov
inc
jl
rdtsc
push
add
call
or
mov
push
test
loop
mov
mov
sti
outsl
xchg
mov
xor
inc
aaa
and
add
subb
jp
outsl
push
ja
push
mov
push
arpl
clc
enter
rcrb
cli
mov
pop
or
inc
aam
hlt
fwait
loopne
ret
or
mov
pusha
push
or
push
imul
je
push
cmp
test
pop
js
xchg
dec
repz
loope
fsubrs
xchg
or
push
into
jmp
sub
adc
cmpsb
adc
imul
mov
mov
mov
and
xor
je
addl
sub
lcall
and
filds
cmp
mov
lea
xchg
lea
in
nop
mov
inc
pop
idiv
or
xchg
mov
mov
push
mov
cld
sbb
sbb
and
mov
shrb
mov
movsb
sahf
mov
and
inc
outsb
loop
mov
addl
mov
test
push
sti
ja
xchg
jns
add
lret
roll
mov
loopne
jbe
cmp
jb
add
les
jge
jg
insb
outsl
jl
subl
lcall
adc
std
add
mov
push
loopne
outsb
into
popf
mov
inc
ret
dec
loopne
mov
inc
mov
push
sbb
mov
push
enter
cmp
test
push
push
push
inc
filds
xor
fsubrs
int3
dec
pop
mov
das
inc
pop
jo
sar
sbb
call
inc
in
pop
push
call
xchg
sarb
cwtl
out
jne
adc
mov
aaa
ds
data16
jb
leave
inc
cmp
nop
call
mov
dec
push
out
jmp
xchg
stos
or
sub
add
call
add
aaa
lock
ja
ss
jne
push
dec
xor
in
add
jae
jge
add
and
sbbl
push
push
into
inc
lea
enter
je
rcrb
decb
test
inc
shlb
jmp
shrl
bound
test
jne
sub
sbb
ljmp
adc
mov
jp
mov
inc
push
pop
or
push
push
lcall
dec
fcmovne
pop
stos
add
pop
hlt
mov
fildll
adc
test
add
js
outsb
jl
dec
inc
push
push
outsl
pop
dec
mov
mov
add
fistl
mov
inc
imul
cmp
cmp
mov
mov
cmp
mul
inc
sub
lods
ret
mov
pop
lock
pop
hlt
cmp
call
vpcmpgtd
enter
test
xor
fnsave
jg
cwtl
loopne
ss
lahf
repnz
arpl
adc
add
rolb
daa
and
mov
aaa
mov
mov
negl
push
lcall
cmp
cld
test
mov
cmp
lcall
pop
xchg
test
or
mov
dec
ret
jl
pop
test
add
xor
sub
fdivp
push
and
andb
push
addb
mov
inc
mov
xchg
nop
stos
push
mov
sti
loop
push
fs
mov
pop
add
add
sbb
cmp
inc
mov
cmp
fisttps
loop
call
aad
out
stos
adc
push
push
push
jl
mov
push
mov
push
fsubp
fiaddl
inc
stos
jp
xor
mov
lock
jbe
fdivl
call
add
and
sub
cmp
jg
jbe
out
push
add
push
dec
xor
mov
xchg
ljmp
pushf
jae
les
mov
inc
ficoml
mov
dec
arpl
push
push
mov
int3
cmp
or
mov
pop
enter
dec
mov
rorb
addb
cmp
sarb
jne
fdivl
jne
add
adc
inc
inc
decb
shrb
jge
outsl
push
inc
call
fcoms
loope
sbb
call
pushf
sub
jmp
sarl
mov
movb
jo
jne
jl
push
fisttps
orl
xorb
pop
inc
or
jge
cwtl
stos
outsl
inc
std
cmp
add
push
dec
scas
jns
mov
repnz
mov
std
rclb
sbb
js
inc
aaa
fadds
pop
add
or
cmp
adcb
inc
incl
pop
fsubl
xchg
mov
jb
jo
add
push
cld
or
loopne
sub
mov
fmull
sub
mov
xchg
jg
mov
or
or
add
aaa
or
insb
xorl
xchg
int3
inc
les
jp
fs
fs
pop
push
fmulp
push
adc
pop
cld
fistps
add
loopne
in
inc
movsb
rorb
aam
jge
sahf
addb
mov
and
push
push
add
inc
arpl
or
or
push
data16
fsubs
xor
cmp
dec
in
lret
loop
add
and
jge
sub
adc
add
and
insb
call
cmp
int3
push
das
cmp
outsl
pop
mov
mov
inc
adc
mov
shlb
inc
xor
inc
test
jns
mov
mov
ljmp
loopne
rcrb
fs
mov
inc
fcoml
push
and
mov
mov
dec
mov
movsb
adcl
dec
lock
add
aaa
repnz
jnp
out
test
mov
test
push
mov
sarb
inc
push
cmpsb
inc
call
cmp
int3
jb
loopne
cld
gs
lods
testb
inc
inc
loop
insb
sti
dec
jbe
push
ss
cli
lahf
mov
push
loopne
jnp
das
in
rorl
ss
mov
pop
call
push
popa
inc
ret
sbb
stos
call
mov
cmp
fwait
mov
enter
or
push
lock
repz
dec
pop
hlt
mov
test
pop
test
mov
push
je
outsb
pop
jmp
cli
pop
jmp
push
shlb
jmp
pop
lock
mov
sbb
clc
pushf
dec
mov
and
call
sub
les
cltd
adc
or
fmuls
push
pop
push
mov
enter
sbb
flds
xor
adc
dec
addr16
cmp
mov
icebp
push
cmpsb
xchg
aaa
push
cmp
add
lock
aas
jle
cmp
loopne
cwtl
jge
pop
cmp
add
or
adc
push
sbb
sar
inc
movl
cmp
fs
push
jbe
test
jne
ja
cs
in
cwtl
fbld
sub
jle
add
mov
loope
adc
lea
data16
xor
decl
mov
aaa
sbb
scas
xchg
push
push
mov
or
mov
int3
and
adc
pop
imul
rcl
aaa
std
mov
jge
or
pop
pop
cld
outsl
movsb
outsb
sub
popf
xchg
call
mov
sbb
test
jl
inc
lods
js
mov
xor
rcl
sarb
push
push
movsb
mov
ret
ret
call
or
daa
cld
push
leave
std
cmpsb
aaa
loopne
mov
leave
fdivrp
add
ss
push
xchg
jbe
mov
cmpsl
push
push
add
push
mov
mov
sti
mov
xor
fs
loopne
sub
fisubrl
lds
add
xchg
jo
ret
jmp
cmp
lods
sub
ljmp
sahf
jecxz
test
shrl
xor
arpl
call
aam
hlt
inc
mov
or
cmp
lock
adc
outsb
or
mov
mov
rclb
push
stos
push
dec
xchg
jp
sub
arpl
inc
jl
push
icebp
rolb
nop
mov
dec
inc
fs
jbe
push
sub
fucomp
inc
mov
pusha
xor
pop
push
cwtl
add
outsb
xchg
movsb
pop
dec
mov
pop
sahf
pushf
sub
dec
xlat
or
ljmp
mov
mov
shlb
push
mov
outsb
pop
push
lea
push
sbbl
ret
mov
add
adc
out
sub
aam
mov
inc
fsubrp
jo
clc
sbb
iret
sarb
rorb
push
push
push
xchg
cmp
or
jmp
dec
cmpl
mov
es
stos
in
call
xchg
and
push
icebp
mov
enter
and
adc
repnz
std
stos
inc
sbb
xor
mov
dec
sbb
jo
repnz
xor
add
push
adcb
lods
jp
inc
or
aam
sub
movl
lock
pop
mov
aam
inc
mov
xor
std
sub
add
or
stos
sbb
rclb
mov
xchg
sub
sbb
loopne
or
sbb
cmp
mov
mov
xor
mov
jmp
jmp
test
leave
add
repnz
popa
fucom
push
mov
jle
adc
fs
call
popa
sarl
adc
adcl
mov
mov
es
ss
sahf
add
xor
loopne
dec
push
in
and
int3
or
push
cltd
loope
push
mov
sbb
pop
inc
pusha
stos
mov
shl
add
jge
inc
mov
ret
adc
adc
cld
cwtl
pop
xchg
lcall
xchg
xchg
sti
aas
push
pop
cwtl
ja
xor
or
icebp
clc
addb
data16
fdivr
jae
shlb
add
push
push
jo
test
in
jle
cld
outsb
push
aam
lock
pop
rol
incl
xlat
push
je
movsb
dec
ljmp
add
or
test
and
jne
sbb
nop
fcomp
jp
popf
stos
jge
adc
push
andb
int3
sbb
repz
ljmp
in
pop
mov
dec
xor
xor
cmp
divl
mov
fcomps
adc
mov
pop
pop
cmc
mov
jl
js
movb
push
or
aaa
mov
or
ret
add
dec
sub
jae
loop
stos
shll
and
push
out
add
inc
scas
shlb
call
out
cmp
and
xchg
inc
push
gs
push
clc
outsb
in
cmp
pop
cvtps2pd
loopne
movl
push
pop
shll
sub
xor
cwtl
lcall
fidivrs
into
mov
call
mov
mov
ss
sub
faddl
xor
jb
pop
adc
or
out
test
pop
xchg
mov
mov
das
testb
jns
repz
pop
rorb
fisttpl
or
repnz
pop
sti
ret
xchg
in
sub
mov
ljmp
cmc
pop
mov
js
sbb
sub
pop
aam
enter
ret
and
dec
inc
mov
out
test
push
xor
mov
incl
test
jl
cmpsb
fdivr
fadds
inc
dec
adc
xor
and
mov
ret
stos
mov
mov
sub
pop
leave
mov
push
jo
fs
fucomi
adc
in
ret
sub
sahf
fcomps
push
test
jmp
les
sbb
pop
call
test
hlt
data16
les
push
adc
in
lock
push
push
pop
cmp
mov
test
add
icebp
mov
cld
sbb
push
xor
pop
and
mov
jne
inc
shlb
imul
imul
push
in
add
ss
xchg
or
ret
dec
call
inc
cs
mov
loopne
andnps
mov
add
jge
aam
mov
jmp
std
ja
push
movsb
ret
mov
imul
push
inc
sub
and
or
push
adc
lea
jl
orl
movsb
add
call
mull
inc
jg
inc
js
adc
mov
cmpsb
mov
add
lock
add
jmp
xor
mov
lret
ljmp
rolb
mov
scas
jp
sarl
out
push
in
dec
sbb
adc
int3
jno
test
mov
add
jo
inc
mov
or
cli
or
ret
inc
inc
sub
cmp
int3
pop
lea
adc
test
sahf
and
pop
push
jge
cmp
xor
rorl
jo
jl
cmp
mov
cmp
dec
pop
jp
gs
cmp
add
mov
xlat
les
dec
push
jmp
hlt
jne
mov
lret
adc
sub
inc
inc
cmp
xor
scas
xchg
int3
add
dec
cmc
mov
mov
clc
imul
clc
inc
hlt
adc
adc
push
mov
xor
push
pop
test
addb
ret
call
add
mov
addr16
test
dec
js
and
stos
sahf
push
add
adc
fiadds
jge
fsub
test
push
mov
add
push
mov
and
lret
mov
test
ret
loope
sbb
inc
add
shlb
lea
cmp
mov
or
push
inc
dec
jne
call
adc
sbb
mov
or
xor
int3
and
xchg
enter
mov
cs
pusha
in
dec
adc
push
scas
sbb
or
hlt
xor
shrb
inc
inc
mov
push
adc
loope
mov
jge
pop
inc
cmp
jns
dec
insl
nop
std
jae
or
adc
sbb
ljmp
into
mov
mov
ss
outsl
adc
scas
ljmp
fdiv
and
mov
arpl
jb
repz
cmp
adc
imul
inc
jne
inc
mov
and
sbb
jb
int3
outsb
mov
mov
out
mov
and
jg
inc
aaa
leave
inc
xor
inc
pop
add
cli
call
arpl
add
fwait
and
call
xor
decb
push
mov
xchg
jmp
adc
sbb
fbstp
or
xor
cld
pop
lret
mov
icebp
or
int
xor
pushf
in
outsb
shrb
mov
push
push
push
fisttps
add
inc
test
mov
add
out
or
adcb
and
adc
or
loopne
enter
pop
loopne
inc
out
shlb
xchg
ljmp
mov
pop
mov
cmp
cld
gs
lea
add
cmpsl
push
outsb
jo
pop
or
imul
shlb
xchg
pop
mov
gs
add
jg
inc
add
push
jmp
iret
mov
and
orb
cmpl
pop
jbe
push
pop
movsb
outsb
outsb
or
insb
stc
or
rorl
incl
cmp
les
mov
test
dec
inc
lea
lcall
push
jno
pop
mov
das
clc
adc
in
in
nop
ret
cmp
sub
cmpsb
lock
pushl
or
push
inc
sti
sbb
outsl
outsl
fists
inc
xor
push
cs
dec
pop
or
cmpb
test
push
scas
ror
adc
mov
incb
dec
mov
add
push
insl
insl
ss
cmp
xchg
adc
jge
xchg
push
mov
insl
sub
or
jecxz
adc
js
inc
fsubl
dec
inc
pushl
sti
mov
stos
cmp
inc
mov
insl
adc
int3
out
xchg
mov
mov
aaa
or
xchg
or
add
movl
sub
call
nop
push
dec
mov
lods
and
pop
repz
or
fdivr
jbe,pn
adc
dec
add
add
fwait
inc
mov
push
add
stos
add
enter
push
mov
push
stc
adc
sbb
push
push
test
jmp
call
mov
mov
shr
cld
data16
je
outsb
adc
and
sub
mov
and
pushl
add
mov
jb
push
call
mov
rolb
cwtl
jle
clc
or
lods
or
cld
leave
sub
std
xor
loop
push
shrb
push
cmp
adc
mov
push
in
lock
adc
fmul
in
push
mov
push
imul
fimuls
jle
je
cmp
loopne
or
inc
aaa
dec
data16
push
mov
sbb
pcmpgtd
pusha
js
cld
idiv
cmpsl
dec
sub
repz
mov
pop
dec
iret
mov
sub
add
mov
addl
cmp
add
in
imul
jp
or
idiv
sub
flds
add
mov
jb
aaa
push
jne
or
in
cld
jmp
cmc
mov
push
shlb
or
inc
std
pop
roll
pushf
push
inc
cmp
fstpt
ljmp
add
aaa
jo
rcrb
fcomi
outsb
jns
cmp
xlat
ret
add
mov
adc
test
fcmovnb
test
sub
xchg
add
fdivs
shll
rcl
xor
adc
rcr
inc
lods
or
sbb
mov
or
jnp
adc
nop
add
add
test
mov
clc
inc
sbb
inc
or
outsb
push
xchg
adc
push
push
add
mov
push
jo
mov
stos
push
stos
fsubl
movsb
in
push
fcomi
stos
das
pop
ret
lea
push
push
icebp
movsb
cmovo
outsl
outsl
movb
inc
ficoms
push
add
pop
xor
lods
inc
test
jne
and
and
jmp
icebp
rolb
jge
jbe
xor
or
inc
cmp
xchg
jb,pt
inc
icebp
mov
stos
call
jb
movsb
test
adc
jb
aaa
cwtl
lods
mov
mov
or
cld
cmp
push
dec
mov
lods
jbe
mov
inc
cmp
sbb
jg
mov
rclb
or
mov
adc
ljmp
inc
loopne
xchg
push
notb
rorl
pop
push
sbb
cmpsb
add
mov
mov
loopne
push
adc
jp
nop
push
test
clc
inc
lcall
les
lea
mov
dec
int3
movb
add
mov
fwait
cmp
mov
xchg
jmp
and
cmp
call
push
cmp
lock
test
add
int3
mov
les
mov
rcll
mov
push
xor
inc
adcb
mov
pop
cmc
iret
js
int3
inc
test
gs
fisttpl
and
cmp
enter
jo
lock
add
and
push
loope
ljmp
push
add
dec
ljmp
mov
mov
push
inc
ud0
mov
addl
push
adc
js
and
arpl
aam
fs
insb
push
pop
incb
stc
mov
xchg
loop
push
xchg
test
inc
push
int3
push
dec
fdivr
ljmp
ss
pop
in
or
mov
inc
call
jge
rcll
xor
fisubrs
sahf
dec
sbb
cmp
pop
mov
jbe
rorb
loopne
mov
xchg
xor
xor
mov
je
lea
inc
sbb
push
data16
xchg
xchg
jp
movsb
pop
jmp
out
lea
push
sub
add
incb
test
inc
fdivl
and
push
repnz
xchg
add
adc
sbb
dec
in
popl
jmp
rorb
ret
push
out
push
add
int
nop
mov
es
clc
das
xchg
fcmovbe
les
cld
jne,pn
je
je
or
or
xor
xor
xor
mov
lret
push
in
idivl
mov
aas
andl
mov
dec
jne
decl
decl
add
in
js
test
jle
or
fildll
jecxz
mov
data16
fmuls
inc
mov
cmp
cmp
rorb
shr
out
sub
sbb
inc
aaa
rol
rorl
mov
add
pop
ror
lret
push
lret
lcall
xchg
movsl
mov
rcrl
inc
pop
je
iret
sbb
push
std
add
inc
into
dec
or
dec
dec
sbbb
scas
in
ror
push
push
cli
mov
jnp
mov
notl
mov
push
push
cld
mov
push
ret
aaa
mov
or
jne
and
pusha
sbb
fildll
pop
inc
xor
ljmp
cmp
in
xchg
fs
jg
inc
cmp
xor
mov
jl
cli
add
jae
xor
fadd
testb
mov
mov
orb
rcl
test
or
dec
cld
repz
pusha
loope
jl
int3
jmp
jp
or
orb
mov
push
pusha
xchg
nop
imul
outsb
add
fildl
add
dec
sub
or
out
pushf
mov
sbbb
jl
std
fcmovnb
push
pop
clc
push
out
jae
dec
xlat
adc
dec
loopne
outsb
testb
or
mov
ret
mov
int3
orl
xchg
adc
inc
dec
inc
les
dec
mov
test
subl
adc
leave
ret
adc
dec
ljmp
test
lret
add
faddl
scas
inc
ljmp
push
mov
push
shll
rolb
imul
add
sbb
loop
enter
je
rcr
icebp
and
inc
mov
push
loopne
cmpb
in
and
pop
rorb
jbe
xor
mov
loopne
out
mov
adc
popf
cmp
sbb
push
sbb
lods
dec
loopne
inc
inc
push
stos
cmp
or
mov
or
das
and
mov
das
xor
xor
loopne
mov
mov
mov
and
hlt
cmp
jbe
inc
rolb
aad
hlt
mov
stc
lock
incb
add
mov
enter
add
clc
mov
mov
hlt
add
add
int3
test
or
add
or
mov
inc
and
test
or
lea
hlt
loop
adc
fimull
int
imul
movsl
aam
aaa
mov
pushf
push
mov
push
adcb
and
sub
rorb
nop
adc
clc
seto
test
add
jb
loope
fistl
sbb
scas
cld
cld
cmp
adc
dec
imul
stc
push
pusha
call
lock
or
decl
dec
add
movsb
pusha
inc
xor
or
push
lret
in
je
leave
jne
test
cmp
mov
fmull
decl
sbb
sub
out
nop
mov
xor
frstor
jmp
data16
stos
add
mov
cmp
inc
sar
dec
pop
inc
push
fs
outsl
fwait
and
mov
add
fs
mov
add
sub
mov
and
push
icebp
sub
inc
int3
or
std
push
std
xor
test
mov
fsubl
adc
mov
scas
jo
jbe
cltd
popl
iret
mov
incb
lds
or
aaa
mov
mov
adcl
cwtl
lcall
scas
push
hlt
scas
add
int3
rol
pop
pop
je
test
add
test
add
dec
push
dec
push
inc
sbb
lods
push
xchg
lret
inc
fcoms
lods
mov
add
ljmp
push
xor
cli
push
inc
inc
inc
xor
adc
ljmp
outsb
in
push
add
or
call
ret
mov
mov
push
pusha
sarl
push
fstpl
lock
mov
xchg
mov
cmp
inc
or
jb
add
jg
sbb
mov
mov
add
xor
jno
xchg
adc
ret
lcall
and
inc
mov
mov
push
push
es
cmpsb
mov
arpl
and
push
inc
cmp
bound
loope
sub
cmpsb
cmp
ret
adc
adc
lock
jecxz
call
mov
xor
adc
clc
push
lods
shrb
and
mov
test
out
sbb
cmp
cmp
pop
add
je
inc
dec
add
adc
cmpb
pop
call
pop
mov
hlt
aam
mov
loopne
data16
adc
jmp
xor
leave
cmp
cmp
cli
pop
jo
sarl
jge
ret
outsl
mov
test
std
add
add
push
inc
jo
jbe
xor
push
pusha
push
sbbl
push
sbb
and
cwtl
adc
inc
sar
push
add
push
cmp
icebp
sub
inc
arpl
sbb
inc
cli
mov
mov
es
or
sbb
or
lret
and
or
jle
scas
add
hlt
add
stos
add
mov
les
jg
jecxz
pusha
jae
icebp
insb
jge
pop
fisttpl
and
insl
aaa
or
add
mov
mov
cli
int3
aam
adc
pop
add
push
sbb
cmc
cmp
inc
mov
lock
shlb
lcall
mov
loopne
or
loopne
js
push
xorl
rclb
mov
clc
mov
xchg
cld
add
rorl
push
xchg
dec
push
sar
das
sub
pop
add
cmpl
call
push
roll
out
jle
and
add
mov
std
or
gs
aaa
rcll
int3
cld
je
and
int
push
dec
or
lret
xchg
mov
dec
sub
mov
mov
lods
icebp
testb
pop
jg
push
xlat
sti
insb
inc
sarb
xorb
pmulhw
subb
call
lock
rcl
testb
mov
std
adc
pusha
fsubrl
push
push
rol
push
mov
sti
outsl
sbb
jl
inc
inc
mov
pushf
stos
in
mov
mov
sub
jg
inc
xor
add
push
inc
popa
mov
jl
shrb
sbb
or
push
dec
sbb
cmp
std
cs
cmp
mov
les
lock
dec
lea
aam
popf
add
pop
cs
ss
mov
gs
jge
incl
loop
xor
pop
adc
inc
fcoms
cmp
call
adc
push
rclb
mov
pop
mov
orb
and
loop
xchg
dec
mov
push
aaa
xor
call
sub
ffreep
push
cltd
mov
shlb
int3
hlt
shl
cmp
or
jo
call
xchg
add
jl
pushf
push
lock
js
inc
arpl
dec
rcrb
dec
sbb
sub
add
or
adc
mov
cmp
decl
or
dec
adc
cs
jae
mov
mov
add
cmc
sbb
or
mov
lock
pop
add
test
xor
and
mov
cmp
fdivl
mov
sbb
das
fs
add
inc
and
fisttps
jne
inc
mov
add
jnp
dec
sahf
fiaddl
pop
shll
sahf
hlt
insl
jae
inc
fadds
push
mov
push
lret
pop
sbb
pop
ret
lret
inc
pop
bound
jb
clc
sbb
not
pop
ss
cmpb
ret
adc
clc
mov
push
mov
add
xor
push
fs
inc
pop
mov
lcall
push
adc
loopne
pop
cld
cs
mov
test
or
ret
or
testb
inc
sub
int3
cld
fcmovb
push
mov
push
mov
in
add
lea
pop
mov
test
push
add
jmp
faddl
xchg
insb
cld
das
mov
mov
out
add
dec
shlb
aas
and
icebp
inc
bound
cmp
sub
pop
push
roll
pushl
pop
jp
cmc
je
ljmp
pop
jne
mov
inc
jne
push
mov
dec
push
test
adcl
or
add
push
cmpsb
jmp
jp
std
sbb
inc
adc
mov
movsl
add
xor
pushf
loopne
nop
incb
pop
mov
adcl
mov
fs
pop
mov
jge
mov
scas
and
jmp
jns
push
inc
in
call
rorl
or
dec
or
or
push
xor
add
shlb
es
nop
outsb
jg
push
mov
inc
idivl
pusha
sbbb
mov
out
add
in
mov
mov
cli
subl
push
inc
sar
jmp
mov
mov
xchg
inc
and
add
xor
cmp
inc
ret
pop
mov
test
push
mov
stos
jle
sbb
adc
out
xor
es
pop
aam
faddp
shlb
jb
add
out
js
sbb
std
add
sub
pop
sub
mov
test
fcom
cmp
adc
iret
mov
mov
mov
das
xor
lods
inc
fmuls
cmp
jo
je
and
clc
stos
aad
lods
or
insb
cmp
clc
push
into
hlt
mov
subl
cmp
mov
pusha
sbb
cmpxchg
and
popa
push
xor
jl
fs
inc
sbb
out
add
mulb
incb
or
je
dec
adc
add
push
loope
sub
jb
jns
pop
adc
call
sub
je
in
repz
call
sbb
or
dec
cmp
into
or
bound
loopne
push
aam
xor
xor
scas
rclb
inc
loopne
pop
xlat
hlt
xor
aam
lahf
xor
and
xchg
or
mov
xchg
mov
dec
std
xchg
jmp
push
lock
cmpl
pop
loope
mov
cmpsb
lret
bound
adc
jbe
test
inc
cmp
rclb
pop
fdivr
test
push
pop
push
rcll
dec
push
stos
mov
jo
cs
jl
sarb
pop
shlb
jne
or
or
cmpsb
mov
cmpsb
push
je
cmc
sbb
cmp
sub
cwtl
add
out
mov
aaa
jo
call
outsl
mov
mov
fcomps
loopne
stos
rol
ret
adc
nop
out
dec
and
mov
xor
ficoml
jbe
fwait
add
xlat
jmp
popa
xchg
sbb
shl
test
sub
mov
rcr
dec
mov
or
push
push
leave
pop
sub
stos
push
pushf
inc
xchg
ss
popa
or
in
addl
incb
push
push
es
into
or
lods
sub
out
sbb
fldt
inc
sub
jne
les
mov
mov
mov
inc
add
mull
pop
add
pushf
popa
adc
push
mov
jmp
mov
sub
aas
ss
push
out
add
ret
in
sub
mov
fsts
mov
mov
gs
dec
cld
icebp
jl
inc
cld
sub
call
xor
mov
lds
cmc
outsl
fildl
clc
nop
sbb
sub
pop
gs
add
jg
sbb
scas
inc
les
je
icebp
sub
push
sarb
rclb
mov
or
mov
push
ret
inc
adcl
into
jnp
outsl
push
add
ret
insl
les
mov
adc
inc
fdivrs
ret
add
push
sub
add
jge
enter
aad
sbb
test
clc
sahf
scas
mov
adc
and
loopne
push
pop
cmc
cmpsb
mov
mov
jmp
or
xchg
jmp
movsl
push
outsb
mov
pusha
aam
cmp
inc
popf
inc
cmp
inc
sub
cli
sub
sub
push
push
pop
sar
jge
jge
mov
dec
add
jbe
fistpl
ss
mov
fldl
xchg
aaa
mov
les
cmpsb
dec
adc
jne
lods
sbb
xor
ljmp
fisubrs
add
incl
xchg
out
addl
jp
jo
into
call
push
gs
fnsave
add
push
stc
subps
lock
push
jge
dec
mov
clc
mov
scas
fmuls
in
lcall
xchg
incb
pop
pop
add
push
xor
cmp
js
mov
cmp
mov
dec
xor
decb
mov
pop
cmp
push
inc
bound
in
lcall
and
adc
decl
cmp
cwtl
call
mov
inc
jmp
cli
add
xor
or
pop
inc
add
jmp
ret
test
shll
fdivrs
push
popa
shlb
icebp
shl
loop
jl
cmp
sub
cmp
inc
aad
shl
mov
aam
pop
and
mov
cld
ret
into
adc
push
xor
mov
mov
dec
loop
je
push
insb
adc
test
fiaddl
mov
mov
xor
jbe
and
add
std
jecxz
inc
loope
cmp
js
add
sub
xor
or
jle
das
insl
dec
push
mov
mov
jbe
push
inc
or
rclb
jle
push
mov
inc
fs
ss
rorb
sbbb
out
add
dec
ljmp
fcmove
les
push
pop
or
dec
fnstsw
mov
adc
shrl
movsb
cwtl
jge
add
clc
pop
js
push
jmp
cmp
into
clc
push
daa
aam
and
clc
fucomip
data16
adcb
std
shlb
andl
jle
push
js
sbb
add
pop
jbe
mov
push
inc
cld
xor
mov
or
lock
std
push
in
or
gs
mov
mov
pop
xchg
xor
jb
jle
mov
inc
es
fdivrp
fcomps
aaa
inc
add
and
mov
adc
add
pop
xor
rcll
push
test
push
lahf
xor
lock
pop
hlt
es
mov
push
xor
add
ja
and
add
loope
je
add
iret
push
push
sub
sbb
repz
and
xor
xchg
jmp
or
lea
add
add
pop
std
inc
pop
shlb
push
bnd
clc
mov
push
inc
int3
pop
testl
jmp
push
dec
dec
or
pop
sbb
repnz
xchg
inc
pushf
mov
and
adc
push
dec
sbb
je
mov
push
cmp
mov
push
or
dec
xor
or
mov
rcrl
mov
mov
pop
cltd
cmp
mov
notb
std
pop
std
mov
add
sub
inc
add
mov
stos
push
adc
pop
cs
call
in
cld
pop
mov
mov
or
gs
dec
jg
push
add
call
loope
sub
inc
je
stos
mov
daa
mov
js
add
add
mov
mov
mov
aam
and
lcall
and
cmp
adc
xchg
test
andl
xor
sub
fmul
sbb
xchg
jb
fisubrl
and
decl
dec
or
test
inc
test
rorb
inc
cmp
sar
inc
inc
sbb
or
xchg
jg
es
lock
cwtl
inc
addl
lods
xor
push
hlt
mov
or
dec
lcall
jns
dec
rolb
and
addb
push
mov
hlt
xor
out
adc
sub
jbe
pop
pop
sub
leave
test
stos
mulb
add
jb
shlb
mov
push
cmpsb
mov
loopne
or
test
or
cmp
and
shl
sbb
push
mov
lock
loopne,pn
vmovss
dec
sub
add
push
icebp
fbld
aas
xor
jnp
fistl
jae
sbbl
inc
lret
sbb
mov
push
fcomps
and
xor
aas
dec
in
loopne
adc
js
ret
inc
lea
aam
jge
pop
pop
leave
int3
cld
std
and
push
loopne
dec
in
mov
ljmp
mov
ror
mov
inc
pop
ja
rcr
je
add
in
mov
mov
xchg
rclb
sbbl
dec
ret
push
sbb
stos
stc
enter
decl
call
je
inc
loop
mov
incl
fstps
fidivrs
das
cmpb
dec
mov
pop
add
call
outsb
or
call
sbb
test
sub
cmp
mov
or
and
mov
push
add
push
mov
jmp
jge
int3
dec
cmp
sarb
js
sub
daa
lret
dec
loopne
push
cli
shl
loopne
mov
gs
mov
stc
gs
or
frstor
dec
insb
mov
aam
inc
popa
lock
mov
ds
ds
lea
stc
faddl
pop
mov
cmp
aad
lret
or
sbb
daa
into
and
cld
ret
sbb
mov
jmp
pop
sbb
pop
inc
xor
sub
stos
dec
pop
out
rolb
pop
jne
and
sbb
int3
pop
push
cld
mov
pop
fidivs
mov
mov
push
gs
out
add
dec
dec
into
cs
and
push
push
or
mov
in
adc
out
ret
xchg
inc
je
mov
pop
mov
cltd
loop
add
xchg
inc
mov
data16
adc
ljmp
cld
je
lfs
inc
stos
mov
mov
jle
or
add
pop
sbb
in
push
mov
lods
jne
lea
std
incl
mov
sar
outsl
cvttps2pi
lock
pop
in
outsl
cmp
rorl
pminsw
cld
inc
or
decl
jbe
add
loopne
negb
gs
lea
scas
cs
std
mov
and
push
sbb
data16
jne
mov
data16
mov
xor
jmp
pmulhuw
shl
outsl
mov
loope
lahf
insl
xor
mov
bound
scas
pushf
sbb
cmpsb
paddsb
jmp
dec
mov
mulb
jle
js
stos
push
ret
subb
xchg
and
in
mov
lock
add
dec
jl
sti
or
xor
add
push
stos
jmp
push
add
loope
roll
mov
call
mov
je
mov
or
ljmp
lods
aam
push
push
inc
sbb
add
inc
rolb
cltd
inc
je
pop
sbb
shrb
ljmp
call
mov
adc
loope
cmp
mov
imul
xor
inc
push
jp
outsb
adcl
repnz
inc
mov
xor
bound
test
cmpsb
cmpsb
aaa
mov
mov
sbb
rorl
jbe
and
cmc
sbb
add
call
push
add
xchg
cmp
add
pop
xlat
xor
call
push
addl
add
test
cmp
xor
sub
mov
ja
xchg
hlt
inc
xchg
jl
dec
in
inc
xor
les
clc
xor
cmp
popa
addl
stos
xor
aam
cmp
add
sbb
pop
call
lods
fmuls
sahf
enter
dec
sahf
sub
adc
and
iretw
adc
push
insb
or
incl
inc
dec
lods
xchg
dec
aas
in
or
add
pop
and
adcb
adc
decl
popf
gs
scas
add
jo
mov
or
jge
sar
inc
movups
rol
adc
mov
xor
xor
push
ficoml
adc
scas
js
jmp
pop
sahf
cmp
xor
test
pushf
push
cmp
bound
inc
movsb
lret
jmp
add
mov
jl
pop
inc
push
int3
rclb
in
mov
ret
xchg
loop
int3
in
mov
lods
imul
cmp
xlat
mov
call
dec
cmp
scas
rorl
mov
mov
sbb
cld
popa
rorl
les
cmpl
lock
xchg
push
cmp
je
mov
jl
data16
in
mov
sbb
mov
je
fdivr
and
sbb
cmpsl
mov
mov
ret
push
sub
outsl
ret
hlt
shrb
icebp
xor
fadd
je
addl
fwait
ljmp
movsb
inc
xor
push
jl
imul
sahf
push
dec
ss
int3
push
add
jle
call
push
xchg
rcrb
or
je
push
pusha
xchg
mov
dec
es
adc
xor
sub
push
inc
add
sbb
mov
adc
add
addr16
cmpb
movsb
adc
dec
arpl
sbb
ja
add
scas
js
add
lock
adc
push
push
aaa
jne
inc
notb
push
inc
adc
stc
mov
ret
dec
jmp
outsb
mov
cwtl
shlb
lcall
adc
push
mov
mov
inc
xchg
clc
lcall
fwait
pusha
das
test
mov
fidivs
push
adc
push
rcl
cmp
dec
roll
fs
dec
call
pop
cmp
add
xchg
mov
lock
push
and
cmp
xchg
sub
xor
fcmovne
mov
mov
mov
jbe
or
call
mov
jb
pop
js
or
std
imul
inc
out
jge
sbb
cmpsb
pop
push
mov
add
mov
fs
sbb
sbb
cmp
cmp
adc
xchg
lea
lret
icebp
ljmp
shrl
push
push
insl
or
je
loopne
call
or
divb
or
shl
sti
int
int3
loopne
or
jne
pop
pop
pop
jo
movsb
insb
ss
ss
or
push
or
push
xor
inc
mov
test
fildl
mov
stc
push
fcoml
jo
addb
stos
xor
and
jne
inc
sub
adc
ss
inc
cmp
add
jbe
mov
sbb
and
mov
push
scas
or
pop
in
jmp
cmp
jmp
test
hlt
mov
xchg
adc
dec
sub
cmpl
add
or
sub
es
dec
nop
lock
jmp
xor
mov
scas
or
or
daa
push
cld
push
cld
sub
int3
and
shlb
push
insb
sub
jmp
or
push
mov
mov
incb
or
insb
push
mov
lahf
mov
insb
jmp
gs
test
in
mov
add
mov
pop
fsubs
add
push
imul
jle
fcmovnbe
scas
mov
js
inc
cmp
pop
add
inc
push
pop
or
in
shll
les
in
sti
push
sbb
lret
fsubrl
mov
pop
mov
cs
inc
in
sti
shr
cmp
or
fbstp
lock
and
cmc
push
adc
int3
cmpsb
dec
xor
insb
adc
insb
and
add
andb
pop
or
add
movb
pop
incl
or
cmp
add
je
clc
incl
xlat
jb
jge
pop
std
jmp
les
pop
insl
je
sar
or
lea
adc
mov
cmp
dec
ret
popf
dec
in
cs
clc
scas
inc
stos
or
daa
add
js
xorb
mov
in
sbb
test
adc
inc
mov
pop
mov
push
mov
or
fisubrs
and
inc
add
decb
cld
mov
xor
mov
xor
sbb
xlat
adc
xchg
sbb
inc
dec
mov
xor
fmull
sbb
mov
jbe
scas
subl
xchg
and
dec
add
into
jae
pop
call
ret
inc
and
aaa
enter
mov
iret
push
add
jg
mov
test
adcb
popf
inc
adc
push
and
iret
mov
pop
call
sub
jp
std
inc
orl
repnz
xor
inc
gs
push
dec
or
xor
xor
xchg
stos
mov
lea
jo
jg
sahf
mov
sub
out
push
add
push
out
mov
loopne
push
out
jne
fwait
loopne
jp
loopne
inc
int3
dec
lock
jbe
das
lock
hlt
inc
mov
mov
mov
fmuls
aas
fsubrl
inc
inc
dec
add
stos
ds
sub
push
pop
nop
shll
push
scas
or
cmp
add
loopne
mov
cld
test
xor
aas
mov
sbb
cmp
cmc
sahf
or
jb
aas
jle
mov
jg
or
out
pop
push
jle
inc
or
lods
sbb
rorb
in
pop
sub
inc
je
cli
adc
mov
lods
push
cmp
mov
adc
sub
cmp
adc
js
and
cmp
pushf
add
jne
arpl
in
cld
cmpsb
and
rclb
pop
push
dec
and
insl
popa
and
pop
or
lahf
movsl
push
cld
dec
call
ret
dec
rol
sbb
cmp
cmp
in
jl
popa
shlb
add
inc
xor
adc
mov
js
sbb
mov
es
jo
loope
xchg
mov
add
addr16
pminsw
sarb
sub
cmc
mov
jmp
mov
and
cmp
xor
lods
mov
adc
inc
push
fidivrl
pop
inc
jg
sub
push
in
push
xor
mov
sbb
push
add
pop
negb
ja
aas
mov
or
pop
jne
push
sbb
lods
test
push
cmp
push
fisttpl
cli
outsl
sbb
test
js
add
pop
andb
jb
rorb
or
fs
movsl
add
mov
adc
add
cld
or
xor
push
jmp
mov
inc
cmp
push
sahf
cmp
fmuls
mov
testb
or
stos
call
inc
lretw
test
clc
cmp
jl
sbb
rcl
fcmovb
cmp
std
xchg
in
jne
fnstcw
mov
sarb
repz
add
je
loopne
jo
push
mov
dec
pop
ja
pushl
in
je
andl
adc
call
movsb
mov
insb
mov
adc
adc
dec
push
cmp
fistpll
dec
inc
jbe
xor
rclb
fistps
into
jl
lea
jmp
cli
fwait
cmp
in
sbb
push
inc
pop
push
inc
adc
aas
jp
adc
lea
add
pop
inc
int
out
xor
sarb
sub
cmp
and
call
push
xlat
in
sbb
filds
xor
push
or
add
sub
loopne
or
jo
fsubl
jmp
into
and
dec
push
xor
or
pop
je
xor
jp
cmp
xor
push
pop
pop
jne
mov
bound
rolb
ljmp
mov
rcll
xor
fsubs
sbb
xchg
mov
mov
pushf
ffreep
inc
pushl
popa
call
add
decl
test
mov
jmp
incl
lret
psrld
mov
xor
push
fiaddl
rorb
test
mov
xor
clc
pop
fsubl
out
push
add
dec
add
insb
imul
in
xchg
push
add
push
cmpb
jb
jbe
mov
xchg
sub
cmc
and
jmp
push
aaa
flds
insb
aam
xchg
or
fs
or
in
xchg
shlb
jp
outsl
push
and
xchg
rolb
clc
es
loope
push
ret
dec
decl
or
jmp
jb
enter
in
cmp
inc
xor
fwait
mov
cmp
scas
fwait
hlt
ret
mov
mov
rorl
ret
push
cmp
repz
mov
shl
or
mov
into
mov
call
aad
adc
inc
fs
fs
aaa
stos
loop
add
push
push
adc
or
mov
dec
add
test
jmp
adc
cmp
dec
cmp
popa
rclb
jmp
lahf
out
fcoml
cld
jo
aaa
sbb
data16
and
mov
in
push
jge
jo
inc
call
mov
cmc
xorl
jno
and
sbb
jo
mov
lea
fcmovb
push
sbb
nop
test
ret
jg
cmp
pop
sub
or
pop
jge
inc
mov
xchg
sub
repnz
call
sub
jecxz
pop
or
incl
adc
nop
lods
mov
inc
lock
cmovo
dec
add
cmp
int3
shlb
das
mov
dec
cwtl
sti
mov
mov
adc
or
or
adc
stos
add
or
in
push
pusha
mov
sti
test
shlb
pop
sbbb
sbb
add
sti
mov
lea
es
test
or
mov
mov
push
les
mov
push
push
xor
mov
or
mov
cmc
and
push
and
enter
add
pop
adc
or
push
push
inc
cmp
push
pop
adc
popa
shll
loopne
mov
aaa
dec
mov
or
push
mov
jbe
hlt
in
add
cmovo
fcmove
arpl
das
mov
adc
imul
mov
push
xor
fcmovb
stos
jg
push
mov
mov
mov
mov
jp
jb
ljmp
jp
pop
mov
mov
into
xchg
push
test
ja
sbb
shlb
and
rorb
push
repnz
lcall
xchg
or
add
push
mov
call
sub
push
sbb
mov
nop
xor
xchg
mov
push
cmp
inc
inc
je
mov
pop
mov
or
test
pop
sbb
inc
lea
mov
fcoml
and
inc
or
hlt
xor
mov
and
clc
or
ljmp
adc
fsubl
out
lret
mov
push
rcll
push
add
mov
fwait
add
lods
pcmpeqb
jnp
add
paddsb
dec
add
test
add
loope
hlt
js
adc
fs
fcomip
stc
aam
rcrb
jle
mov
out
shrb
clc
push
call
pusha
mov
sbb
dec
and
mov
mov
jmp
inc
push
js
cmpsb
sub
into
push
outsb
enter
shl
scas
subb
push
jbe
xor
outsb
xorb
cmpsb
push
stos
push
addb
es
in
sarb
test
imul
sbb
fsubs
frstor
pop
mov
testb
mov
fldt
orl
lea
sub
and
cmp
inc
jmp
mov
pop
sbb
lea
or
mov
ja
pushf
in
mov
xchg
sahf
cmp
mov
clc
push
test
mov
mov
cmp
pop
xchg
test
adc
push
xorb
lds
enter
add
xchg
dec
cs
push
clc
sahf
jbe
jb
loop
lock
dec
push
push
nop
adc
adc
add
cld
sub
pop
insb
add
sbb
sub
test
push
dec
mov
leave
xor
test
popa
adc
shr
cmp
push
xor
in
sbb
rcr
sub
enter
push
or
sub
js
lea
sub
dec
cmp
popl
mov
and
add
jo
mov
in
xor
pushl
rcrl
filds
xor
fdivr
cmpl
scas
mov
mov
push
adc
xchg
push
xchg
loopne
in
cli
xchg
mov
mov
push
mov
sub
inc
adc
cmp
mov
cmp
sbb
or
es
mov
and
mov
addl
mov
push
xchg
repnz
mov
popa
cld
mov
aam
imull
mov
inc
dec
mov
cmp
dec
mov
decl
in
cmpl
cwtl
xor
movsb
lock
push
je
call
mov
or
dec
mov
push
adc
xchg
lcall
xor
mov
test
or
js
fisubrl
dec
add
mov
xor
icebp
outsb
xlat
inc
pop
add
fidivrl
dec
cmp
xchg
push
adc
push
sti
push
push
cld
mov
enter
loopne
pusha
out
int3
out
sarl
mov
cs
mov
in
add
push
aad
jno
mov
mov
inc
lock
or
or
int3
por
enter
dec
xor
ss
add
fsubl
into
push
fwait
ds
jb
push
sbb
fdiv
icebp
inc
lea
out
or
mov
clc
fwait
jbe
js
lods
rol
cmp
sahf
cmp
outsb
mov
dec
adc
inc
stos
ret
pop
imul
jbe
sub
imul
test
dec
pushf
inc
mov
push
or
adc
sbbb
add
add
inc
adc
xchg
outsb
repz
cli
pusha
ret
insl
xor
add
andl
or
dec
fists
inc
mov
jae
mov
sarb
jbe
or
je
insb
mov
pop
pop
pushl
mov
cmp
mov
adc
push
jbe
lahf
std
dec
movsb
jb
insb
fucomip
xchg
sub
fwait
ja
aam
mov
mov
push
fldt
adc
sarb
or
push
push
xchg
inc
fiaddl
sub
rorl
rclb
fistl
ds
addb
pop
xchg
push
hlt
data16
in
sti
cmp
jb
jg
push
stos
pop
mov
in
pop
inc
or
or
push
mov
mov
mov
pop
or
in
inc
ret
jmp
cmp
fcomip
cmpsb
fsubrl
xor
test
or
ficoml
push
fs
push
lock
adc
mov
call
xchg
mov
sarb
or
je
pop
push
sub
push
jge
aam
adc
ret
mov
push
xor
call
jno
adc
xor
sbb
cwtl
or
fimuls
push
jmp
sbb
sub
test
icebp
sub
mov
push
xchg
pop
lock
sub
in
mov
or
and
js
add
sbb
in
cmp
in
icebp
inc
pop
dec
jb
ret
xor
rcl
loopne
dec
sub
or
icebp
incl
push
push
call
dec
les
ja
adc
cli
lds
aam
aas
dec
mov
or
in
push
add
mov
mov
push
aas
pop
into
xchg
add
or
pop
lock
mov
jae
addr16
sbb
or
and
aas
or
iret
adc
lcall
fsubr
inc
dec
mov
jo
and
mov
outsl
mov
test
stos
mov
mov
sbb
cmp
add
data16
push
lret
inc
and
jmp
push
fldt
add
int3
fs
mov
sbb
push
xchg
loopne
imul
pop
and
push
push
add
dec
les
call
and
enter
lea
push
cmpsl
add
push
test
xor
mov
cwtl
gs
cs
inc
aad
push
sub
inc
mov
addr16
dec
movsb
adc
mov
outsl
call
xor
outsl
in
mov
inc
jmp
add
add
cld
mov
outsb
inc
pusha
inc
ret
popa
lcall
ret
xor
cmp
mov
xor
pop
xor
dec
inc
inc
je
je
pop
loope
repnz
mov
mov
xchg
mov
adc
stos
add
mov
cld
pop
loopne
lock
outsb
adc
xor
nop
add
das
add
flds
aas
mov
mov
mov
and
aaa
cld
aaa
movsb
pop
add
call
cmp
dec
clc
das
add
and
imul
mov
mov
fdivr
lods
ss
clc
fimuls
push
jecxz
aas
in
mov
fldenv
cmp
fistl
repnz
mov
js
mov
adc
adc
lods
sbb
hlt
pop
mov
std
enter
sub
shlb
cld
inc
dec
sqrtps
pop
cmc
pop
les
inc
add
dec
xor
inc
lcall
or
fidivs
sbb
jae
push
inc
nop
adc
add
adc
add
push
sub
rorl
sbb
mov
jmp
jnp
ret
jne
pshufw
ret
jmp
test
add
lods
pop
enter
test
or
mov
movl
jb
sub
movsb
int3
or
pop
push
adc
sbb
mov
dec
xchg
push
or
mov
pop
mov
inc
fsubs
clc
push
push
es
mov
jne
inc
cmp
push
stos
push
mov
lahf
fcoms
lea
call
inc
loopne
cmpsb
pcmpeqw
scas
sub
inc
sbb
mov
inc
adc
fadd
mov
xor
ret
add
int3
cld
add
lods
sub
cmpsb
adcb
dec
pop
loopne
cld
gs
adc
add
insl
jb
lock
and
imulb
adc
test
xlat
xchg
push
insl
dec
mov
clc
dec
fcompl
imul
mov
dec
dec
incl
inc
and
sub
movsb
ss
nop
push
inc
lret
sarl
das
push
call
ljmp
fs
or
adc
and
sahf
add
rcrb
dec
loope
jg
sub
and
mov
orl
or
dec
xor
lock
int3
xor
daa
mov
add
push
int3
push
test
shl
jnp
js
gs
mov
orb
in
mov
or
cmp
mov
aas
mov
push
inc
lea
cld
sub
add
mov
sub
call
push
lret
int3
fistps
shlb
loopne
jmp
inc
mov
inc
push
adc
and
imul
test
or
cwtl
out
push
dec
pop
mov
rolb
mov
adc
in
adc
mov
sbb
lcall
lea
push
inc
loop
mov
mov
jnp
mov
je
jmp
icebp
scas
xchg
push
add
stos
lods
sbb
push
es
mov
jne
dec
iret
out
mov
add
pushf
push
fdivr
mov
int3
mov
call
inc
aam
mov
sub
and
mov
xor
mov
scas
sub
int3
adc
mov
pop
adc
push
fstpt
xor
sub
xor
adc
imul
push
mov
xchg
in
aas
pop
adc
sbb
stos
pop
xchg
test
xor
dec
je
cld
outsl
stos
or
hlt
dec
ret
add
adc
push
jmp
jmp
inc
xor
jg
dec
mov
insb
testb
mov
add
add
dec
test
ja
ds
mov
and
pop
xrstor
aam
ret
sbb
fimuls
imul
inc
cmp
xchg
lods
addb
mov
dec
js
in
add
inc
push
loopne
cmp
sbb
add
sbb
adc
adc
inc
mov
inc
pop
aam
xor
fcompl
or
xor
pop
test
enter
je
leave
les
fnstsw
roll
add
fadds
lret
fisubs
cmp
xchg
add
imul
scas
ss
pop
pop
sub
pop
imul
push
add
mov
test
fs
dec
js
neg
jle
lcall
jb
xor
popfw
and
pop
and
mov
adc
inc
xor
inc
add
fisubl
aam
adc
mov
ljmp
jae
out
add
in
jl
les
pop
out
mov
sbb
adc
ret
lods
push
negb
mov
nop
std
inc
cmp
les
nop
jbe
mov
xor
test
adc
push
push
jae
dec
loopne
add
enter
sbb
pop
cmp
por
mov
push
jmp
loope
push
or
inc
inc
push
fcoms
cmp
jmp
pop
loopne
dec
pusha
lea
jb
call
cmp
jg
pop
ljmp
mov
shll
add
inc
arpl
lcall
mov
rclb
dec
cld
daa
pop
sbb
and
les
add
in
push
mov
lea
pusha
mov
push
cmp
pusha
pop
hlt
dec
es
add
add
push
test
xchg
cmc
test
xlat
add
out
sbbb
jl
ds
cmp
mov
and
mov
cs
es
test
icebp
jge
add
sarb
je
sbb
in
adc
pop
aam
popa
mov
stos
adcl
mov
adc
push
add
add
outsb
std
je
stc
pushl
xchg
mov
jno
cld
roll
out
pop
inc
sub
xchg
add
cmp
mov
mov
call
cmpb
repz
push
shlb
pop
push
add
pop
int3
js
dec
cwtl
aad
cmp
push
sbb
mov
sar
dec
dec
jmp
push
mov
jg
cmp
divl
mov
mov
fidivrs
or
pop
mov
in
pop
roll
fcoml
add
mov
jne
adc
push
inc
jns
and
cs
insb
inc
or
adc
in
and
sbb
mov
pop
call
push
add
mov
sub
aaa
push
mov
cmpsl
hlt
and
int3
mov
fisttps
les
and
and
stos
test
out
and
add
aas
push
nop
add
in
push
jb
add
fs
mov
lret
clc
jmp
call
lahf
push
cmp
lahf
sbbl
xor
jmp
lret
ljmp
push
or
in
cs
push
sbb
and
test
dec
popa
xor
dec
mov
jmp
fcompl
loopne
xor
cmp
test
lods
push
loopne
cmp
and
mov
or
mov
dec
loopne
push
pop
pop
mov
mov
fs
mov
pop
sahf
add
add
pop
shlb
loope
aaa
cld
inc
lea
into
mov
inc
dec
je
add
inc
decl
fsubl
push
pusha
mov
push
inc
clc
xor
sahf
xchg
add
adc
fs
cld
jmp
pop
mov
sarl
adc
outsb
add
orl
or
mov
sbb
xor
lea
adc
pop
out
sarb
das
aam
movsb
mov
xchg
add
je
repnz
ret
push
sub
popf
and
ret
sahf
fmull
xor
push
rorb
push
cmc
ds
xor
xchg
mov
xchg
outsl
clc
mov
insb
rclb
movsl
outsb
insl
push
pop
xor
mov
sub
pusha
or
mov
ss
js
cmp
push
or
xor
add
mov
cmp
jb
pshufw
add
test
add
mov
or
enter
rorl
clc
clc
shr
mov
or
sbb
in
fdivrs
je
xchg
clc
mov
enter
inc
pop
aam
sub
pop
adc
push
test
gs
dec
insb
lock
mov
adc
leave
fadds
jbe
rclb
fsub
push
jmp
or
enter
es
inc
into
xchg
jbe
mov
divb
std
insl
push
lea
or
aas
dec
or
push
fisubl
sbb
cwtl
push
dec
sub
cmpsb
or
push
pushl
push
mov
push
pushf
jo
inc
xor
bound
fists
test
test
inc
mov
mov
aam
cli
sbb
mov
dec
mov
loop
test
gs
inc
incb
push
sub
jle
rorb
insb
lock
shrl
or
or
push
push
push
cwtl
inc
inc
adc
adc
clc
lea
pop
xor
test
insb
pop
mov
jmp
mov
xchg
mov
push
lea
std
fistps
mov
aas
popa
outsb
or
pop
add
push
jl
cs
movsl
subb
addb
mov
in
outsb
scas
pop
mov
lock
cmp
add
mov
push
add
lea
outsb
sti
adc
insl
ljmp
sbb
mov
enter
test
aaa
cli
xor
and
add
loope
incb
nop
xor
sarb
pop
or
test
rclb
out
add
mov
dec
xchg
push
in
pop
and
je
jmp
pop
lods
js
mov
mov
fwait
inc
pop
xchg
lea
mov
outsb
insb
incl
cmp
sub
jae
ja
add
nop
je
sub
es
push
and
lock
pop
mov
push
pop
aas
enter
mov
or
xor
adc
nop
pop
insl
mov
push
or
cli
cmpl
dec
je
mov
pop
pop
lods
cmp
inc
sbb
or
outsb
cwtl
lea
mov
push
nop
ret
push
decl
mov
push
cmpsb
ret
subl
clc
jge
push
push
ds
outsl
rclb
in
cmp
sbb
fcmovu
rolb
sbb
das
rcr
test
call
in
cld
mov
adc
clc
adc
lods
incl
cmp
fisubrl
push
cmp
sarb
outsb
lea
mov
or
pushf
clc
out
rcrl
icebp
mov
call
icebp
sbb
and
mov
mov
call
push
mov
add
nop
inc
xor
cmpsl
test
inc
adc
dec
enter
mov
adc
pop
xor
mov
xchg
incl
inc
push
loope
or
pop
fidivs
xchg
ss
adc
fwait
repz
mov
les
fidivs
pushf
nop
mov
fidivrl
loopne
xor
ret
xor
sbb
mov
add
in
out
aas
dec
fimull
push
or
fmul
push
or
inc
mov
mov
das
sbb
push
push
sbb
inc
jl
adc
in
push
ret
std
cmp
cld
clc
sub
sbb
or
mov
testl
fistpll
cmp
addl
cmp
clc
cmp
push
cmpsl
lods
pushw
das
push
push
push
mov
outsl
adc
jp
call
mov
push
inc
jb
cli
ja
mov
add
jne
insl
inc
or
push
mov
mov
jmp
std
fs
xor
xor
xor
fmuls
pop
adcb
dec
inc
sbb
inc
cmp
dec
jle
xor
shlb
adc
daa
ljmp
push
mov
jne
jmp
repz
adc
inc
jo
mov
xor
sbb
popa
mov
test
pop
push
test
jg
test
outsl
cmp
test
enter
xchg
jbe
sti
pop
popa
adc
jmp
jae
dec
jmp
mov
sbb
lods
lods
mov
js
aam
aam
and
das
adc
shlb
cmpsl
mov
ds
add
xor
pusha
enter
fs
ret
incl
jno
dec
movsl
lods
pop
imul
pop
and
mov
push
inc
or
lock
add
mov
cmp
xchg
cmc
shr
ds
hlt
mov
adc
or
cld
mov
loopne
sub
mov
ret
push
jg
xchg
stc
push
xchg
or
adc
mov
int3
mov
es
les
dec
add
imul
cmp
pusha
adc
shlb
xor
push
call
out
dec
cmc
sub
or
insb
inc
out
loopne
mov
adc
jl
mov
daa
jmp
jo
jl
xor
je
mov
inc
hlt
mov
jb
mov
adc
pop
jo
inc
clc
test
adc
ret
icebp
and
mov
rclb
xor
sbb
loop
mov
xchg
mov
sar
loope
pop
imul
mov
push
sub
xchg
mov
xchg
sahf
xor
push
test
jae
not
add
mov
fdivrs
clc
cmp
fdivs
inc
mov
aaa
ja
add
push
mov
mov
mov
cmp
es
xchg
call
sub
stos
mov
repnz
dec
cwtl
jbe
leave
jae
xchg
mov
jae
or
incl
shlb
lods
insb
bound
or
cs
pop
mov
mov
loop
xor
and
orb
adc
mov
aad
lcall
sub
add
cwtl
mov
pop
add
loopne
loopne
scas
adcl
add
shlb
rcr
adc
orb
inc
je
sub
pop
mov
jo
adc
jbe
cmpsl
add
shrb
add
jp
adc
push
mov
mov
sar
fiaddl
inc
or
stos
add
cs
les
add
jl
rclb
sbb
mov
pop
or
mov
loop
pusha
clc
sti
pop
ljmp
adc
mov
out
push
loopne
adc
inc
insl
push
ja
stos
adc
jo
rol
push
push
outsb
cmp
sbb
push
in
adc
pop
pusha
push
adc
push
xchg
repz
lods
pop
sbb
imul
and
pop
sub
mov
jae
inc
int
mov
clc
dec
int3
jae
sarl
das
sar
push
push
loopne
subl
out
xor
add
test
fadds
js
and
and
mov
sub
pop
orb
call
aam
stc
push
add
addr16
and
cwtl
insb
xor
mov
cwtl
push
scas
push
pop
push
lea
fdivr
int3
ret
fstl
bound
add
lret
loop
push
je
call
lds
adc
imul
mov
pushf
push
and
sar
mov
or
nop
adc
addb
jae
sarb
xor
mov
in
mov
inc
add
cmp
sbb
mov
pop
jnp
jp
mov
rclb
shlb
or
mov
xchg
xchg
and
push
sbb
aas
push
int3
add
push
rorb
aam
mov
sub
pushf
les
imulb
mov
pusha
es
loope
jmp
push
arpl
xchg
insl
xchg
jne
cmc
inc
and
push
or
sarb
stos
and
add
mov
addb
xchg
std
fwait
lea
adc
and
cld
icebp
mov
js
cli
ljmp
mov
push
mov
incl
push
hlt
mov
test
inc
addl
dec
fbstp
or
push
push
psubsw
mov
sbb
jp
mov
test
jle
outsl
aam
adc
mov
and
out
pop
mov
out
cli
xor
mov
and
add
fldl
into
add
or
mov
inc
mov
mov
and
xor
out
mov
push
inc
je
jge
inc
push
jne
lea
dec
cli
mov
popf
jae
rcr
shlb
call
adc
out
add
mov
dec
cs
test
push
mov
or
push
dec
pop
add
push
jl
mov
push
cmp
xorl
add
mov
cmp
mov
mov
inc
es
push
adc
minps
decl
adc
in
pcmpgtb
push
push
mov
test
ja
xor
mov
and
mov
ljmp
xor
inc
cs
push
ret
cs
outsl
aam
add
je
pop
xor
sub
les
pop
pop
cmp
mov
adc
jb
imulb
adc
outsb
loopne
push
cmp
adc
es
cli
add
jmp
fdiv
adc
cmpsl
mov
out
lea
inc
mov
inc
mov
push
out
mov
jb
data16
add
pop
push
mov
xor
mov
mov
fdivrs
push
jmp
dec
mov
paddsb
test
push
les
add
sbb
xor
push
test
push
xor
mov
lcall
sbb
cli
es
xchg
push
lods
nop
pop
lret
and
adc
add
rolb
cli
push
adcl
mov
mov
jne
or
inc
bound
mov
std
idivb
inc
adc
ds
call
push
xor
jo
and
aas
das
mov
mov
mov
push
dec
es
cmp
dec
nop
pop
adc
xchg
subb
cld
add
inc
add
mov
loopne
add
mov
mov
cld
cld
idiv
xor
add
je
fadds
xor
mov
mov
cmp
add
add
add
jae
outsl
fucomi
orl
je
push
sbb
or
cmp
push
sub
sbb
xor
add
adc
xchg
jmp
test
xor
jne
sbb
push
pop
add
out
push
push
push
aad
push
mov
cld
ljmp
push
pop
lret
test
enter
clc
inc
jg
pop
aaa
fwait
mov
or
add
pushl
push
and
decb
mov
icebp
sub
mov
incl
adc
inc
push
mov
mov
jl
in
sar
orl
or
and
mov
xor
inc
inc
push
push
jne
lcall
pop
and
insl
or
pop
pop
push
xchg
sub
in
jbe
xor
cmp
mov
or
shrb
inc
adc
filds
push
xor
sbb
or
adc
loopne
fmulp
stos
mov
sbb
repnz
cld
sbb
cs
push
sbb
jmp
testl
push
xchg
jne
mov
mov
mov
movb
mov
xor
inc
xchg
or
inc
xorb
push
mov
dec
push
xor
push
sar
iret
dec
mov
xor
add
jne
data16
loope,pn
pop
add
cmp
hlt
roll
mov
xor
mov
lock
cli
push
hlt
sbb
mov
fs
popa
cwtl
inc
push
sysexit
repz
jb
es
fidivrs
imul
xchg
jne
and
pop
sbb
insl
fsubrl
mov
or
xor
push
sbb
jg
leave
sub
inc
and
cmp
mov
add
test
clc
cmp
mov
push
or
inc
xor
push
jle
add
insb
xchg
in
jne
mov
mov
rol
ljmp
or
lea
int3
faddl
mov
daa
push
enter
ret
push
mov
sub
jo
or
std
adc
stos
sbb
push
inc
enter
nop
loopne
ljmp
mov
lret
int3
dec
jns
mov
cmp
add
cmp
jl
mov
push
cmpsb
ret
leave
dec
jne
inc
jp
ret
in
jmp
dec
std
add
pop
call
mov
xorb
decl
xchg
cld
popf
outsb
push
test
cmp
push
dec
mov
adc
scas
icebp
loop
mov
push
loop
into
inc
fbld
adc
sbb
mov
mov
dec
shlb
xor
cmp
push
xor
mov
adc
adc
lret
or
jae
add
jne
mov
or
cli
dec
xor
data16
add
dec
mov
rol
adc
pop
cwtl
inc
inc
or
xchg
add
mov
pop
sbbb
dec
xor
add
data16
mov
push
loopne
cmp
jo
rcrb
shrb
pusha
mov
mov
mov
call
nop
rorb
xorb
lods
mov
and
enter
incb
cld
jmp
adc
sub
in
push
mov
mov
je
mov
orl
js
das
push
mov
add
rcll
call
popa
sub
mov
jne
or
pop
adc
mov
or
mov
rclb
ret
leave
xchg
mov
out
sub
add
jb
je
jae
xor
mov
push
xor
xor
sub
push
sbb
cmp
lcall
sub
outsb
lock
testl
and
sbb
mov
lcall
insb
sub
into
cmp
mov
xchg
mov
push
pop
xchg
aam
enter
xlat
es
pop
adc
ret
or
inc
push
fdivp
jle
add
test
les
test
mov
decl
mov
sahf
inc
and
mov
shld
ljmp
cmp
mov
popf
les
pop
adc
inc
add
and
xchg
push
cmp
jne
sahf
pusha
adc
js
push
sbb
adc
jo
add
add
dec
inc
push
aam
and
rol
sbb
in
or
push
pop
les
or
ret
lret
shll
ret
jbe
mov
es
jl
jb
popa
sbb
xchg
sahf
in
inc
outsb
dec
iret
dec
ljmp
lds
pop
adc
test
or
lcall
gs
fbstp
adc
adc
rolb
ret
pusha
sub
movsl
lods
aam
cltd
test
add
and
add
call
adc
stos
mov
fisubs
outsb
jbe
test
call
xchg
adc
sbb
inc
icebp
mov
fldl
jbe
jmp
pop
cld
fdivrp
call
cmpsl
cli
sti
mov
in
inc
xor
sbb
in
push
pop
add
mov
test
cmpsl
das
push
and
icebp
daa
movsb
adc
test
loop
sbb
sub
cmp
adc
cs
and
cmp
mov
das
rorb
mov
mull
jp
mov
push
mov
rclb
mov
mov
rorb
arpl
scas
add
or
pop
add
push
popa
rolb
pop
add
sub
in
icebp
cmp
sbb
fs
xor
test
add
lods
mov
stos
stos
push
add
xor
push
je
dec
add
inc
pop
push
adc
or
stos
cld
call
fmuls
neg
loopne
mov
add
cmpsb
dec
pop
inc
les
ljmp
or
js
je
test
rorb
out
add
std
inc
or
fwait
fs
or
push
cmp
scas
fsub
add
push
pop
jb
adc
mov
inc
rclb
inc
ret
pop
inc
jmp
add
js
jno
inc
movsb
jne
pop
out
adc
movsb
push
or
mov
and
shrb
sbb
and
les
out
imul
loopne
mov
jbe
lea
ss
mov
test
cmpb
adc
data16
sahf
mov
jbe
pop
and
scas
cmp
mov
mov
or
adc
cmpsb
push
pop
popa
jne
ret
fsubs
ret
frstor
dec
out
les
rorb
mov
je
push
push
inc
data16
xor
les
mov
fiaddl
out
daa
inc
mov
lret
inc
jge
jae
and
fiadds
mov
or
adc
cmpsl
push
or
movsb
push
sub
adc
cmpsb
xor
out
shr
xor
outsl
adc
xor
xor
sbb
sub
jbe
cmp
enter
xor
sub
dec
je
push
inc
fst
mov
xchg
outsl
aam
ret
mov
imul
pop
dec
push
js
lea
mov
lock
ret
mov
adc
subl
in
xor
test
jb
inc
bound
push
data16
mov
pushf
xchg
sbb
pushl
pushf
add
adc
je
mov
add
push
or
loopne
test
mov
sbbl
hlt
or
cmp
iret
pop
ljmp
xor
xchg
rorl
stc
mov
sahf
rcrb
sbb
add
popa
in
mov
fprem1
xor
push
repnz
pop
adc
push
clc
movsb
jp
stc
lret
lea
adc
in
mov
push
test
mov
cmp
xor
add
insb
ss
mov
xchg
jmp
jge
inc
stc
incb
leave
sar
dec
or
imul
cmp
inc
aam
mov
jmp
shlb
daa
fiaddl
js
jbe
push
call
or
rorb
lea
insb
ret
arpl
xlat
xor
pop
dec
jmp
inc
int3
mov
shr
sar
xor
mov
xor
inc
ss
sub
lahf
ds
jo
jno
adc
insb
pop
inc
es
test
hlt
dec
push
fs
mov
xchg
push
jecxz
and
aaa
push
jne
mov
imul
pusha
loop
or
xor
or
sbb
dec
test
mov
fisubrl
daa
pushf
xor
jo
mov
sbb
imul
ret
loopne
faddp
jle
jb
test
cwtl
push
jmp
jg
outsl
mov
push
xor
aam
ficoms
addl
sbb
test
and
sar
pop
sub
jbe
loopne
xchg
or
cli
jne
adc
in
adc
push
adc
je
or
nop
add
push
in
add
stos
pop
xchg
je
call
cld
decb
dec
inc
xor
adc
setle
push
popa
pop
fisubrs
mov
adc
sti
mov
mov
pop
test
pop
push
pop
pusha
jne
push
outsb
add
int
mov
int
mov
fcmove
shlb
in
xchg
pop
jbe
or
push
sbb
sbb
in
xor
push
lahf
mov
rcr
aaa
adc
incl
dec
int3
test
cs
enter
test
repnz
int3
add
cmpsl
xor
fidivrs
repnz
sahf
dec
adc
dec
jb
sahf
call
data16
mov
fs
gs
test
mov
push
inc
js,pt
out
and
sarb
je
push
jne
push
push
pop
or
loop
orb
data16
dec
aaa
inc
cmpsb
dec
pop
mov
sub
mull
shrl
xor
ror
push
pop
int3
shlb
adc
inc
cmpb
lods
adc
xlat
les
cmc
pop
call
call
mov
pop
jle
call
or
adc
sub
pusha
xor
icebp
mov
or
cmc
mov
in
sub
iret
andb
and
push
mov
test
add
sbb
test
mov
push
dec
push
js
xor
cld
outsl
addr16
icebp
xchg
adc
cmp
add
adc
xor
inc
push
add
lret
push
les
std
nop
std
pop
aas
hlt
inc
bound
mov
pop
xchg
push
dec
test
shll
push
sahf
inc
shl
call
xor
push
repz
add
mov
aad
cmc
inc
sub
add
lea
mov
std
jne
pop
enter
outsb
inc
xor
jl
adc
enter
insb
lods
or
or
inc
loope
aam
lret
push
push
andl
pop
cmp
mov
leave
adc
jmp
pop
add
dec
lea
test
into
addb
add
lock
push
pop
loopne
adc
pop
add
push
mov
sub
orb
bound
aad
cmpsb
push
out
imul
aas
mov
int3
mov
jge
jns
sbb
add
xor
jp
enter
in
std
in
inc
sbbb
lret
pop
pop
add
fbld
adc
mov
enter
push
adc
int3
or
loopne
add
call
mov
inc
das
or
push
and
clc
cmp
ss
iret
cmp
inc
call
cmp
repnz
push
cld
cs
mov
lea
dec
adc
inc
lea
hlt
dec
inc
fdivrs
je
mov
pop
mov
pop
add
out
in
xchg
loope
xorl
clc
ds
rcrl
mov
pop
inc
xor
or
sbb
xor
mulb
enter
inc
lods
rolb
fldl
xchg
inc
mov
stos
nop
mov
cmp
dec
inc
xlat
push
adc
jne
add
rorb
add
sarl
shrb
add
inc
inc
aas
add
mov
jl
adc
test
ljmp
mov
push
out
pop
or
adc
fadd
sbb
add
pop
jne
imul
mov
test
aam
jmp
repz
jge
rclb
dec
pop
nop
lcall
mov
jmp
ljmp
rcrb
or
sahf
xorl
shl
mov
lea
orl
mov
pop
add
stos
and
cmp
fdivp
int
or
jl
outsl
or
add
insb
mov
outsb
out
add
pop
or
push
inc
mov
je
jno
cmp
loop
jle
dec
push
add
mov
aam
pop
jle
sub
stos
push
movl
mov
pop
fsub
sbb
xchg
pop
dec
inc
mov
in
and
sbb
fnstenv
push
cmpsb
dec
repnz
std
cmp
sub
ds
pop
orl
test
add
aam
js
out
loopne
push
notb
test
add
es
push
call
mov
xor
and
inc
mov
inc
fcmovbe
cli
cmp
mov
push
ret
call
rolb
int
xchg
cld
arpl
add
xchg
lds
xor
ret
lock
jne
sbb
pop
and
out
jge
ret
jbe
or
sarl
dec
mov
mov
les
inc
cmp
cmp
push
mov
dec
cmp
jmp
pop
push
pop
or
call
js
xor
add
pusha
shll
loopne
mov
or
icebp
fwait
test
inc
and
add
inc
call
cmp
sbb
xor
cmp
pusha
sbb
and
inc
mov
xchg
inc
inc
je
outsl
fdivrs
jge
mov
adc
push
push
inc
adc
sbb
xor
sbb
adc
rorb
enter
add
add
and
scas
hlt
adc
insb
inc
call
fcoms
dec
into
dec
aam
movsl
scas
mov
mov
out
test
mov
je
xor
push
popa
and
mov
adc
fcmovbe
add
shlb
pminub
clc
les
in
add
ds
jp
sbb
jg
shlb
ljmp
pop
lcall
push
mov
push
adc
adc
movsl
inc
incl
lret
movsb
mov
mov
lret
dec
inc
insb
jbe
aaa
loope
dec
xor
loopne
cld
mov
xor
jne
js
push
add
fdivr
lcall
ss
add
fimuls
inc
push
inc
scas
or
rolb
xor
lock
cmp
jne
push
sbb
push
add
mov
movsb
inc
hlt
add
push
jg
inc
adc
add
jb
inc
popa
int3
inc
xor
das
rorb
lds
pusha
pushw
outsb
xor
inc
push
xor
add
xchg
mov
pop
mov
mov
sar
loopne
dec
imul
lods
xor
add
orb
aad
loop
roll
adc
jo
mov
out
shl
lock
call
imul
imul
cld
mov
or
sub
adc
mov
fdiv
leave
outsb
dec
ja
in
adc
gs
ss
push
call
insb
adc
lcallw
dec
ss
shlb
lock
adc
adc
dec
or
dec
adc
lcall
push
cs
or
movsb
mov
and
dec
adc
mov
mov
push
outsl
mov
sub
sti
xorl
push
jl
push
adc
lcall
aaa
pop
daa
stos
sbb
push
add
add
push
subb
sub
fmuls
mov
ds
addr16
mov
mov
sub
cmp
rorl
sbb
adc
add
lea
add
or
sub
insl
hlt
mov
or
mov
jge
sub
xor
ss
inc
aaa
jbe
flds
shrb
ret
hlt
jbe
inc
addl
mov
out
hlt
shlb
sbb
push
loope
fidivrl
aaa
scas
fsubrs
popa
or
sahf
sub
pop
cmp
xlat
push
outsb
or
push
add
add
enter
in
inc
mov
pop
add
push
mov
sub
clc
dec
xchg
mov
call
inc
movsb
mov
sub
fisubs
add
jno
insb
sbb
out
jbe
cmpsb
push
adc
push
shlb
mov
jns
mov
loopne
idiv
in
cmp
mov
test
movsb
cmp
add
lcall
outsb
inc
cmp
imul
cli
push
jmp
aam
dec
mov
mov
add
dec
lods
push
test
push
pushf
dec
rolb
loop
or
jmp
orb
andl
adc
shr
cmp
faddl
mulb
cli
add
adc
mov
sbb
push
adc
adc
or
decl
add
movsb
add
int3
cld
push
rolb
push
js
inc
jmp
out
enter
movsl
dec
sub
insb
xchg
aam
call
dec
mov
or
jge
sub
or
test
fidivl
add
xchg
inc
js
adc
sbb
in
fldenv
mov
cmp
and
cmpsl
cmc
or
push
add
mov
or
mov
sub
adc
jbe
out
clc
test
push
xor
mov
test
adc
push
xor
push
imul
push
jne
cmp
outsl
cmp
sahf
pushf
rcl
cmp
mov
pop
shl
cli
sarb
mov
lods
xor
lock
push
pushaw
iret
add
cmpb
xor
push
mov
cmp
or
in
push
and
jns
xchg
das
cmpsb
int3
xor
mov
adc
dec
out
cmpsb
sbb
mov
mov
out
pop
inc
adc
mov
fimuls
xchg
outsb
fstpt
inc
stos
xchg
dec
jae
mov
sub
mov
jecxz
out
mov
and
std
scas
dec
pop
call
push
inc
ljmp
int3
push
and
xor
addb
mov
lcall
int3
test
mov
push
push
mov
xor
dec
mov
call
adcb
adc
dec
mov
imul
ljmp
cmp
nop
jno
sub
push
add
or
mov
jo
lret
bound
dec
adc
jae
mov
punpcklbw
cld
sbb
mov
roll
adc
lods
leave
add
ss
push
test
or
xor
aad
std
add
sarb
xor
test
out
adc
xor
mov
xchg
js
pop
loope
adc
lret
or
cmp
repz
pop
aam
push
push
mov
add
rorl
add
test
clc
inc
jmp
mov
clc
lcall
addl
cmp
push
shrb
test
xor
dec
xor
test
outsl
adc
mov
popa
les
outsl
fsubrl
inc
lret
ss
xor
out
pop
or
adc
xlat
loope
test
and
push
mov
pop
xor
dec
pop
pop
pop
lcall
clc
xor
in
cld
loop
adc
cmp
mov
xchg
jle
mov
mov
fisubrs
or
pop
mov
dec
xor
push
inc
gs
call
inc
leave
rol
fucomip
mov
sub
data16
into
out
sub
enter
pop
mov
faddl
push
cld
in
push
inc
fdivl
pmulhuw
adc
sbb
test
add
test
mov
sub
add
outsl
gs
daa
mov
sahf
cmp
rorb
cmp
lea
push
mov
cmp
fcos
xorb
test
adc
or
mov
inc
loop
fisubl
cld
or
xor
adc
inc
shlb
icebp
inc
and
xor
sub
aas
push
pop
aam
dec
add
test
cmpsb
add
movsb
lock
imul
ds
sub
neg
push
lds
cmc
scas
add
stos
mov
cmp
inc
in
pop
and
pop
mov
push
pop
or
popf
and
movups
test
rcl
test
add
xchg
loopne
push
dec
jmp
jmp
orb
shrb
xorl
mov
ljmp
fcompl
add
int3
xor
inc
aam
mov
pop
pusha
jns
push
dec
sub
dec
push
push
adc
insb
or
cld
test
lea
aam
add
aas
rorb
mov
xchg
sbb
loope
inc
movsl
out
loop
testb
rorb
je
inc
call
mov
cli
pop
stos
pop
mov
mov
pop
test
lea
in
aad
lea
fcoml
daa
xor
lds
lds
xor
into
jne
cld
and
outsl
jecxz
jbe
or
rorb
in
mov
sahf
dec
clc
push
cld
cmp
mov
add
pop
in
dec
mov
inc
add
aas
ret
cmp
and
adc
inc
in
xor
shr
orl
sub
test
and
push
mov
mov
lock
mov
add
pop
dec
mov
pop
mov
clc
icebp
jle
bswap
cmp
data16
xor
in
ffreep
add
add
add
push
xor
pop
inc
cwtl
imulb
nop
mov
pop
push
mov
enter
inc
lcall
pushl
mov
inc
outsb
inc
dec
outsl
adc
and
jne
fmuls
push
mov
mov
inc
mov
shr
jae
rorb
mov
lcall
int3
adc
push
or
xor
rclb
cmp
mov
mov
sbb
xchg
sbb
push
jne
bnd
xchg
icebp
sbb
push
mov
negl
push
cli
dec
test
push
mov
push
cmp
add
movsb
icebp
ljmp
or
cmp
sub
movsb
je
add
and
cs
sub
sbbl
fsubs
xchg
xor
mov
fbld
or
mov
mov
test
dec
or
push
xor
pop
imull
mov
mov
add
adc
mov
lret
clc
adc
jne
dec
rol
pop
jg
call
popf
shlb
push
cmp
cmpsb
push
mov
gs
push
push
adc
pusha
xor
or
je
add
mov
mov
mov
inc
pop
add
dec
jp
movsb
push
mov
loopne
mov
inc
mov
int3
pop
rcrb
or
cli
adc
xor
or
faddl
mov
loopne
push
add
xor
mov
mov
mov
dec
adc
rorl
pushl
cltd
add
mov
mov
lcall
pop
nop
sbb
and
fidivs
orb
add
ret
push
mov
push
lds
xor
mov
add
or
mov
cld
xchg
sub
jmp
scas
test
lea
les
insl
cld
adc
inc
call
xorl
adc
shl
add
ljmp
sub
xor
loop
scas
sbb
rcrb
adc
or
test
inc
mov
add
add
testl
adc
shlb
xor
cmp
xor
rolb
adc
ficoms
dec
inc
dec
dec
stos
aaa
fcomp
or
mov
ss
movsb
cmp
xor
fistpll
lea
cld
or
jne
or
test
xor
int3
dec
pop
stos
xlat
aas
mov
pop
mov
and
dec
mov
cmp
and
les
cmpsl
mov
push
or
push
inc
insl
enter
outsb
add
pop
pop
xlat
insb
push
lea
push
scas
fs
sbb
out
dec
ret
ljmp
and
and
mov
push
sub
push
shlb
pop
test
out
es
adc
sub
xor
mov
xor
repz
test
xor
lcall
mov
stos
sbbl
pop
mov
test
sbb
jmp
mov
jmp
inc
pop
push
int3
leave
mov
jne
jmp
add
push
sbb
dec
cmpb
fildll
mov
mov
outsl
jo
inc
jne
mov
or
add
addl
sbb
push
mov
mov
mov
or
std
push
incl
in
adc
lock
test
mov
mov
add
lock
rorb
mov
arpl
xchg
rcr
cli
xor
sub
xor
imul
xor
push
mov
es
add
int3
jb
inc
xor
xchg
adc
mov
fucomip
shlb
push
or
or
xchg
pop
push
push
int3
outsl
fldl
decl
add
dec
xor
pop
jmp
int3
mov
mov
push
clc
loopne
jp
insb
and
xor
data16
sbb
jl
lret
lock
insb
mov
nop
cld
push
outsb
push
shrb
mov
insb
push
push
add
add
std
add
sub
mov
test
outsl
add
std
push
mov
movsb
sub
inc
pop
inc
push
movsl
sbb
sbb
rcll
xor
decl
add
xlat
leave
mov
mov
movb
flds
jae
jo
test
lea
in
add
sub
mov
ss
pop
sbb
test
imul
mov
lea
loope
lock
or
inc
mov
ss
push
push
pop
test
add
int3
rcl
pop
xchg
fcomps
pusha
rcrb
push
jle
pop
in
movsb
inc
aad
imul
cs
call
nop
push
inc
adcl
shll
add
jmp
inc
xor
ret
xor
clc
es
push
decb
add
movsb
or
mov
mov
enter
mov
xorb
ror
loopne
push
lahf
imul
dec
and
pop
cmp
and
xchg
out
call
mov
fcoms
mov
int3
lret
into
call
or
int3
int3
std
adc
into
add
hlt
mov
gs
add
add
cmpsl
mov
mov
push
add
push
sbb
mov
mov
ds
mov
pop
pusha
xchg
sbb
pop
outsb
inc
icebp
add
push
sti
ret
add
insb
jmp
inc
icebp
push
inc
loopne
cld
andl
add
fsubr
jne
mov
je
es
mov
aas
pushl
push
pop
sbb
push
hlt
push
dec
stos
add
lock
scas
fadds
pop
into
cmp
icebp
rcr
mov
fcomip
loop
xor
sbb
add
mov
lahf
mov
pop
pop
inc
mov
xlat
push
pop
add
lock
and
cmp
cmp
push
mov
cld
and
push
xor
push
cli
fidivs
mov
push
rolb
mov
push
adc
std
sbb
pop
pop
fsubs
mov
sbb
mov
mov
push
rolb
leave
or
add
nop
jmp
sarl
sub
ljmp
scas
xchg
xor
or
dec
xor
jne
sbb
test
sub
push
adc
lcall
pop
mov
ficompl
insb
inc
xchg
cli
push
xchg
stos
cmpb
push
add
stos
xchg
dec
pop
jg
lcall
xor
pop
cmp
push
mov
call
mov
in
jne
scas
add
add
pop
sarb
mov
push
std
fldt
imul
aas
std
sbb
adc
push
es
add
inc
icebp
jne
inc
ss
cmp
jge
add
mov
aas
mov
pop
je
inc
lret
cld
jne
in
inc
jmp
hlt
lock
jo
and
sahf
repnz
jae
cmp
dec
cld
aas
cmp
dec
jo
mov
orl
sbb
sub
mov
add
cli
xor
xchg
bnd
jne
inc
in
jl
lock
mov
jp
fsubs
and
jae
out
stos
dec
jecxz
aaa
dec
fs
add
bound
xor
push
push
cwtl
andb
dec
push
cmp
shl
mov
mov
inc
jl
test
and
in
inc
push
loope
pusha
fisubrl
clc
sub
dec
stc
pop
std
lock
stos
out
ljmp
xor
movsl
add
out
mov
inc
push
jne
call
jp
push
push
test
sbb
loopne
push
xchg
js
inc
aam
sbb
add
subl
dec
adc
leave
mov
nop
hlt
fdiv
sar
push
jle
loopne
test
popa
add
ss
inc
and
in
mov
mov
mov
sbbl
hlt
insb
lock
in
push
add
cmp
lcall
or
inc
cmpsl
andl
jge
in
imul
xchg
jp
cmp
dec
mov
push
mov
jg
fcmovne
adc
ret
call
mov
fists
ds
icebp
xchg
and
push
ja
int
fcompl
pop
rolb
jmp
mov
leave
adc
push
and
sbb
xor
test
es
push
fwait
insl
cmpsb
test
stos
mov
je
iret
rcrl
dec
push
or
jne
xorl
fiaddl
sub
lcall
aas
inc
out
lea
push
mov
int3
jmp
test
pusha
jmp
movsb
xchg
hlt
pop
rorl
insb
ss
mov
push
shll
pop
mov
test
out
sub
jle
mov
cld
incb
fistps
rol
add
sti
add
inc
cmp
mov
xor
push
adc
sbb
mov
add
and
pop
and
xchg
and
sub
cmp
adc
mov
cmp
mov
int3
adc
arpl
push
adc
xor
xorl
add
not
loopne
test
cmpl
cli
cmc
inc
lods
popf
cld
mov
movsl
jo
jb
mov
aam
push
push
push
loope
jne
sbb
ljmp
les
cli
fs
lods
push
cmp
mov
pop
mov
movsb
stos
push
push
dec
push
pop
mov
movsl
add
nop
push
inc
xor
testb
clc
add
int3
jmp
mov
jae
ja
outsl
xor
xor
cld
dec
call
rorb
inc
cwtl
ljmp
and
mov
dec
sub
orl
repz
mov
mov
arpl
pop
fldt
mov
jo
dec
or
push
mov
xor
push
lret
mov
dec
or
ror
jae
or
push
add
xor
sbb
pop
push
jne
scas
mov
lds
nop
xor
call
xor
cld
push
mov
fs
add
push
adc
push
ror
fisttpl
movsb
gs
cmp
cwtl
inc
add
vmread
add
or
and
pop
push
and
stc
mov
repnz
dec
fwait
inc
pop
xor
dec
cmp
test
mov
sbb
int3
sub
jle
xchg
jle
jge
or
mov
enter
test
aaa
adc
pop
add
add
pop
add
nop
cmp
or
adc
pop
dec
sbb
dec
test
and
cmpsl
or
aas
xchg
xor
lock
dec
dec
and
pusha
call
jg
rcrb
inc
pop
stos
mov
mov
les
test
into
cmc
stos
or
dec
jge
xor
pop
icebp
popf
or
mov
jne
sbb
cld
dec
and
inc
cmp
jmp
incb
stos
enter
insb
bound
out
pop
inc
sti
addb
cmp
mov
mov
jp
or
xchg
cld
mov
push
ret
push
shll
push
jmp
mov
outsl
mov
cmpsb
subb
lret
in
stos
lea
jo
pop
jmp
push
sti
add
inc
add
ret
xor
dec
cltd
or
stos
dec
push
lret
sub
add
fwait
add
and
loope
je
add
je
inc
ss
in
push
add
push
inc
add
clc
int3
mov
inc
adc
scas
mov
jo
pop
inc
or
xor
leave
icebp
mov
in
or
and
outsl
sbb
jo
sbb
pop
sbb
or
test
lret
push
inc
push
adc
stos
ret
mov
pusha
arpl
dec
jl
cmp
outsl
mov
mov
rclb
sbb
test
or
adc
arpl
subb
adc
test
ljmp
mov
or
mov
or
fidivrs
data16
add
int3
pop
pop
scas
mov
push
shrl
mov
fadds
orb
js
call
clc
fwait
hlt
and
push
and
test
dec
push
data16
mov
loope
or
addl
std
dec
ja
mov
lcall
jb
inc
fidivs
dec
xchg
push
in
lock
push
out
inc
sbb
lea
lds
jecxz
loopne
and
rcrl
ljmp
mov
add
mov
data16
pop
pop
sbb
jecxz
push
xor
sbb
inc
loop
push
xor
add
decl
sbb
fs
add
pop
sbb
jmp
pop
xor
xor
push
add
repnz
in
add
add
incb
mov
int3
lock
fmuls
enter
pushf
xchg
fidivrs
mov
dec
or
and
sbb
inc
shl
jp
mov
pop
dec
and
mov
push
les
adc
push
cmp
ret
cmpsl
test
add
int
aam
xor
mov
xchg
pop
data16
adc
aaa
cmp
fisubrs
push
inc
fistl
aad
push
ljmp
mov
pop
int3
int3
adc
insb
cld
sbb
iret
add
and
xchg
call
icebp
jecxz
movsl
mov
decl
in
pop
cmp
add
fdivrs
lea
jae
es
cmp
jmp
mov
cli
mov
add
xor
pop
movsb
ror
ss
inc
pop
ret
lret
dec
push
icebp
push
call
dec
add
fists
dec
dec
mov
lcall
add
sahf
pushl
push
mov
pop
xchg
xor
arpl
rcl
adc
add
push
and
jno
sbbl
test
adc
scas
adc
and
fiaddl
leave
lock
xor
ds
cmp
test
es
jp
sbb
cmpsl
in
test
or
cld
and
and
add
push
push
sarl
test
lret
mov
subl
mov
loope
psubb
cmp
aas
pop
lock
and
gs
cwtl
sbb
jmp
or
sbb
push
enter
pop
cld
add
rolb
jb
loop
dec
sbb
adc
mov
mov
inc
sub
jb
inc
add
mov
mov
push
push
mov
xchg
cwtl
movb
lcall
out
sbb
mov
fmull
push
adc
call
jo
sarl
mov
xchg
lea
mov
push
mov
or
push
ret
xchg
jb
mov
orl
adc
mov
add
push
sub
adc
add
jnp
mov
mov
mov
add
and
mov
imul
je
cmp
std
cmp
cli
jb
mov
adc
xlat
or
fdivrl
inc
outsl
push
push
cli
xorb
scas
in
call
or
lea
cmp
sub
jp
push
movsb
int3
jne
loopne
std
cmc
call
mov
insb
das
add
lcall
rorb
cmp
mov
aaa
mov
push
lret
call
pop
enter
std
add
or
xor
inc
lea
inc
ret
andb
ret
and
mov
aad
mov
test
adc
xor
movb
adc
add
pushl
sub
push
sbb
in
nop
inc
push
xor
cmp
xor
call
cmp
in
pop
orl
xor
int
neg
lea
xor
jle
loopne
rolb
movsb
adc
add
cmp
inc
test
rorl
ljmp
xor
fbstp
mov
or
add
aam
lock
jg
pop
js
mov
call
data16
lods
loop
jb
negb
fsubr
jg
jbe
fmull
jge
adc
std
scas
adc
insl
mov
inc
jne
scas
clc
mov
sub
pushf
mov
mov
stos
push
add
ret
js
icebp
or
cld
shlb
adc
loopne
mov
jbe
hlt
jl
in
loopne
push
ficoms
int3
mov
sub
push
movsb
mov
data16
mov
fmuls
lea
sbb
aaa
sub
movsb
in
mov
sub
jmp
call
add
es
mov
push
fcomps
cli
xor
mov
add
inc
sbb
sub
push
int3
jae
in
pop
adc
test
pop
movsw
test
loopne
out
imul
sbb
push
jmp
mov
orb
or
int3
sub
or
xchg
xchg
pop
and
add
or
rcl
outsb
jbe
stos
ret
out
call
sbb
nop
jp
adcl
arpl
cld
adc
dec
test
add
shrb
adc
mov
sbb
aaa
popf
sub
inc
rolb
adc
cmpsb
les
sub
mov
and
and
test
mov
mov
divl
add
fs
imul
mov
xor
imul
int3
inc
mov
dec
adc
mov
mov
dec
sbb
push
pusha
or
cmp
and
mov
aam
add
loop
adc
lcall
push
push
mov
cmovbe
mov
push
loope
add
jge
iret
cld
xchg
mov
cld
jo
adc
pop
or
js
lret
or
pop
clc
dec
je
scas
ret
jp
ljmp
mov
ss
mov
xchg
mov
mov
orb
pop
daa
add
mov
pusha
jo
push
sbb
jmp
jne
mov
mov
xor
jno
mov
add
xor
loope
movsb
and
xchg
xchg
xchg
lea
getsec
dec
stos
mov
sub
xor
mov
cmp
enter
sahf
pop
test
push
popa
cwtl
push
inc
cmovs
fidivl
jne
imulb
adc
rolb
dec
loope
incl
xchg
or
pop
mov
adc
mov
jge
pcmpeqd
insb
cmpsb
fcoms
aam
cmp
xor
jb
adc
mov
jbe
jne
je
pop
sbbb
inc
inc
roll
pop
push
add
push
les
loop
pavgb
lods
xchg
sbb
ds
int3
call
inc
pusha
fisubrs
data16
lea
mov
andb
xor
inc
mov
mov
addr16
add
rcrl
scas
or
jo
mov
push
call
sub
test
push
and
mov
sarb
xchg
das
cmp
call
outsb
mov
adc
add
cmp
es
fsub
mov
sti
sbb
pusha
rcll
and
pop
cmpsb
jl
jecxz
ficoml
lock
std
sub
pop
cmp
repz
fs
pop
or
std
sub
std
adc
shlb
dec
push
ja
imul
lock
incl
xchg
pop
sbb
ss
incl
pop
dec
dec
or
leave
push
adc
pusha
push
push
or
stos
push
mov
mov
add
outsb
sbb
dec
cli
xor
mov
jbe
xor
lock
lcall
inc
imul
dec
and
add
gs
pop
pop
mov
int3
cmp
mov
dec
jle
daa
and
cwtl
mov
pop
and
adc
repnz
sbbb
ret
or
nop
cmpsl
or
ljmp
xchg
cmc
dec
xchg
fistl
dec
imul
lods
cwtl
mov
ds
inc
scas
sub
movsb
pop
rcrb
and
and
add
les
push
data16
mov
enter
pop
sbb
shll
stos
mov
sbb
push
insb
add
loopne
fisubrl
xchg
into
inc
sbb
lock
fisubrs
adc
jae
push
mov
out
cmp
mov
test
stos
push
xchg
lods
and
sbb
or
movsb
dec
orl
mov
orb
inc
pop
mov
or
popa
dec
test
inc
pop
sbb
jo
iret
aad
aam
add
add
mov
inc
fiaddl
fstps
mov
loopne
int3
ret
jge
cmp
dec
scas
jmp
add
sub
je
add
call
js
jo
mov
xor
cmp
clc
dec
out
mov
lret
data16
sbb
rolb
aas
push
pushf
cmp
test
enter
inc
dec
sbb
mov
hlt
test
or
lock
pop
pushf
mov
mov
rclb
add
in
mov
push
cwtl
pop
xor
dec
or
jp
inc
mov
mov
mov
insb
popa
enter
mov
push
lcall
add
add
in
es
ljmp
shr
sbb
sti
sub
test
loopne
jo
ss
or
push
outsb
adc
hlt
mov
push
push
insb
add
in
mov
call
ret
test
loope
xor
mov
std
stc
push
and
pop
data16
lea
xchg
mov
add
mov
fbld
fxam
push
xor
sub
fadds
xor
test
or
sub
movsl
or
cmpl
or
push
pop
sbb
push
rorb
push
clc
outsl
lods
dec
shlb
push
enter
adc
shlb
inc
int3
cmpsb
adc
hlt
dec
xor
sbb
sbb
dec
addl
inc
insb
sbb
mov
push
movb
mov
dec
push
cld
add
xor
mov
or
jnp
pop
xchg
add
push
adc
add
lcall
aam
push
lcall
stos
adc
outsl
out
call
or
push
nop
shll
scas
lahf
push
or
shrb
fmull
adc
adc
jg
test
push
stos
inc
and
push
cli
add
cli
push
cs
cmp
stc
jmp
jno
mov
and
dec
les
add
and
mov
add
pop
fmul
push
rorl
adc
es
sbb
test
sub
push
pushf
clc
popf
es
jp
dec
fdivrs
out
mov
adc
and
test
add
or
sub
jle
fwait
insl
xor
aam
in
xor
push
mov
pop
pop
push
adcb
mov
adc
mov
or
fadd
sub
mov
fs
je
mov
adc
je
add
xlat
call
insb
push
mov
add
call
add
pop
lds
data16
mov
movl
out
ret
lods
and
add
dec
punpcklbw
imul
subl
orl
add
lsl
stc
rcrb
jno
fisttpl
mov
add
test
add
or
popf
mov
sbb
fisttpl
ds
cli
ljmp
xlat
sbb
add
cs
inc
push
sbb
insb
jo
push
push
inc
dec
in
inc
inc
fnsave
lods
sbb
cmpb
sbb
lock
adc
mov
or
or
stos
lock
xchg
and
mov
and
outsb
xor
xor
xor
add
loopne
lods
or
inc
std
add
je
pushf
push
mov
mov
add
or
push
lretw
add
loopne
inc
add
inc
jne
xor
inc
dec
pop
jl
dec
cmp
ret
loopne
shr
dec
fmuls
and
scas
fisubrs
pop
mov
mov
outsl
adc
ds
add
notl
fmuls
mov
fadd
aam
xchg
movsb
sub
fcoms
cli
jns
mov
decb
aas
es
jne
push
adc
shrb
cmp
add
push
mov
cmp
loop
icebp
clc
or
fdivr
clc
pop
and
mulb
mov
jae
stc
inc
jecxz
loopne
cmpsb
mov
and
mov
and
cmp
adc
je
imul
jbe
cs
pop
cli
adc
mov
mov
sub
inc
in
and
mov
inc
incl
xor
repz
test
jle
or
divb
shlb
call
jg
xor
jo
mov
or
mov
popf
mov
xor
dec
cmp
and
ret
aas
hlt
push
push
mov
mov
ret
jge
push
xchg
jmp
hlt
push
pushf
addr16
add
sarb
add
inc
push
in
outsb
mov
into
or
fsubrl
xchg
jmp
leave
or
ss
pop
notb
mov
add
cmp
jb
add
cmp
pop
sub
lea
cs
sub
fadd
push
and
sarb
pop
xor
aam
cmpsb
outsl
shld
or
fcomp
inc
or
lods
les
test
push
ficoml
add
push
sub
inc
rclb
ss
call
clc
pop
add
xor
ret
leave
orl
in
mov
fistpll
jge
aaa
jne
pop
pop
lock
insl
cmp
pop
cwtl
xlat
loopne
inc
shlb
or
inc
mov
jne
cmpsb
mov
jbe
shrl
add
out
je
mov
jecxz
add
int3
mov
add
sbb
loopne
push
push
mov
push
push
in
push
decl
add
movsl
push
loope
mov
dec
mov
pop
jae
mov
jo
test
and
push
pushf
in
cli
push
mov
ljmp
shll
xor
cmp
fdivr
inc
rcll
test
sub
cld
dec
rorl
nop
mov
les
push
subb
jne
dec
push
push
lock
shr
enter
adc
push
dec
jmp
into
mov
in
push
add
out
fsubrs
inc
std
push
inc
adc
or
jmp
inc
lret
adc
push
testb
jl
push
sub
pop
or
sbb
rcll
adc
and
sub
nop
inc
mov
movl
jmp
push
inc
je
push
fmuls
hlt
sbb
stc
adc
mov
jns
testl
xorl
xlat
dec
xchg
test
inc
xor
mov
dec
movsb
fiaddl
mov
rolb
pop
or
or
cmp
cli
xorl
xchg
clc
stc
pop
mul
je
ret
add
adc
inc
shl
lret
and
mov
std
imul
dec
inc
dec
roll
add
mov
fwait
sub
xor
and
add
jp
cmp
bound
xchg
add
stos
dec
shrb
push
loop
ja
add
inc
lea
inc
xor
mov
icebp
push
inc
pop
jb
ss
inc
pop
xor
dec
aam
cmpsb
sub
sar
mov
or
cmpsb
mov
sub
into
ds
unpcklps
daa
test
hlt
push
insb
movsl
add
jl
add
inc
iret
adcl
enter
cli
push
pop
adc
xchg
loopne
mov
outsl
sub
lea
imul
shr
add
mov
mov
lods
aas
or
mov
pusha
pop
jg
xchg
jne
add
add
ss
icebp
push
lret
fcmovu
mov
adc
es
jne
xor
sub
std
call
add
test
into
push
icebp
sbb
add
sub
push
dec
les
lock
hlt
xor
leave
popf
dec
leave
xlat
int3
fistps
inc
xor
sub
push
out
data16
je
call
cs
adc
sbb
mov
pushl
push
dec
xor
outsl
jb
add
adc
xchg
call
es
mov
lret
cmp
call
xchg
xor
pusha
dec
sbb
shll
out
or
xor
push
jmp
push
or
pop
xchg
out
add
inc
xchg
call
lods
jmp
xor
jp
and
xchg
mov
pop
mov
test
sub
adc
ds
addb
push
adc
js
call
adc
mov
loopne
rol
aaa
pop
test
pop
push
pusha
inc
dec
addb
inc
lock
jge
mov
inc
rclb
pushf
push
stos
sub
in
xor
ret
adc
mov
or
and
fwait
push
and
aad
loopne
arpl
pushl
adc
rdmsr
jp
aam
data16
les
push
in
sub
pushf
cmp
lret
push
adc
into
test
or
pop
sar
ljmp
push
mov
jp
pop
and
mov
loopne
cs
mov
icebp
test
dec
lock
sub
jo
insb
mov
sub
adc
rolb
icebp
dec
or
hlt
cmp
sub
jo
mov
pushl
bndstx
fnsave
mov
push
in
push
mov
shr
sub
stc
mov
adc
pop
jg
out
popa
enter
mov
mov
jbe
fiaddl
cld
inc
fildll
jb
push
xor
decl
mov
lahf
xchg
je
subb
adc
mov
test
jl
sbb
or
adc
mov
mov
and
jmp
dec
jmp
sbb
pushf
in
adc
inc
out
lea
mov
mov
lea
loopne
call
shr
or
jne
pop
iret
and
jmp
filds
mov
add
push
push
mov
mov
jle
pop
js
push
std
loope
sub
popl
adc
inc
pop
inc
mov
adc
repz
add
push
or
ds
or
push
sub
mov
rorl
in
ret
add
cmp
inc
clc
dec
outsb
je
leave
lock
dec
aam
lcall
rcrl
pop
das
xor
jle
add
dec
out
ss
mov
test
inc
pushf
ret
lods
mov
js
hlt
test
test
lods
scas
mov
mov
aam
pop
xor
push
and
adc
add
test
test
es
and
sbb
pop
pop
or
punpcklwd
les
jb
jp
hlt
add
mov
mov
push
mov
stos
ljmp
xchg
sbb
pushf
inc
addr16
fidivrl
push
and
test
fdivs
xchg
inc
mov
stos
add
mov
mov
add
lea
add
lcall
push
movsb
scas
mov
xor
mov
add
inc
xor
inc
cmp
shlb
pop
lods
jbe
into
or
add
stos
fildl
add
xchg
mov
out
outsl
xor
std
fimuls
and
add
mov
mov
enter
test
add
inc
xchg
sbb
and
push
ds
lea
jg
push
loope
xor
mov
mov
cmpsb
push
lock
or
add
inc
mov
imulb
add
or
rcrb
xor
aas
incl
cmpl
cmp
push
lock
cmp
test
je
es
in
in
or
incl
add
shrb
add
and
or
push
pop
lock
pop
lods
insb
fcoms
add
leave
sbb
into
push
pushf
enter
pop
mov
lods
les
add
xchg
testl
loopne
pusha
mov
enter
inc
lods
lea
xchg
in
cmp
push
adc
fidivrs
jae
mov
adc
cmp
das
pop
xchg
sahf
push
xor
jo
outsl
sbb
mov
xchg
push
cmpl
in
xor
push
push
inc
jbe
sahf
sar
mov
fisttpll
mov
fildll
mov
rorb
call
inc
mov
xchg
dec
call
subb
sahf
shlb
or
jne
fwait
push
cmp
sahf
jle
xor
loop
pop
jmp
cld
cld
and
aas
cld
decb
gs
xor
imull
test
in
insb
stc
loopne
mov
dec
and
rcll
inc
int3
testl
sub
jp
sub
add
push
or
sub
mov
test
mov
aam
xchg
add
push
dec
pop
adc
outsl
mov
push
int3
lea
dec
dec
mov
in
mov
faddl
test
xlat
add
jmp
mov
hlt
add
cwtl
cwtl
xor
lea
loopne
lock
mov
mov
add
mov
adc
ljmp
mov
mov
aad
cld
inc
int3
in
ret
test
or
xor
jb
mov
jge
pop
pop
mov
orb
call
mov
xor
mov
pop
dec
dec
xchg
in
mov
call
outsb
xorb
adc
sbb
and
dec
mov
xchg
movsl
push
xchg
arpl
mov
fiaddl
adc
cld
pop
dec
out
sarb
ljmp
pop
add
mov
call
push
test
lret
js
cmp
adc
add
xchg
sbb
adc
loop
aam
clc
imull
add
xchg
inc
adc
adc
jo
inc
pop
mov
pop
push
mov
popa
jp
or
inc
stc
data16
enter
mov
aad
je
jmp
add
mov
nop
aam
int3
push
loopne
bnd
or
push
clc
mov
jno
nop
inc
pop
shll
fildl
push
cmpsb
jge
aaa
shrl
dec
in
xor
je
ss
pop
loop
outsb
add
lock
lea
gs
jge
or
push
inc
pusha
fdivl
les
data16
das
push
mov
ret
xlat
add
shlb
pop
dec
mov
notl
popa
fdivs
push
jp
xchg
ret
ret
lcall
rclb
outsl
insb
clc
mov
pop
add
mov
rclb
cmp
mov
std
add
fdivp
sti
sbb
add
fisttps
shlb
and
add
jmp
je
shlb
in
push
add
dec
loop
int
rorw
jmp
je
inc
jmp
orl
push
mov
mov
loope
xchg
inc
call
dec
sub
dec
add
je
jmp
jp,pt
lock
out
rolb
lea
sahf
adc
xor
cmc
xchg
jge
movsb
std
js
incb
cld
push
ret
cwtl
and
ds
cltd
sbb
stos
or
mov
in
shr
adc
mov
imul
cmp
imul
call
pushf
testl
mov
xchg
xorl
add
movhlps
icebp
mov
inc
push
dec
hlt
jnp
cld
xor
push
pop
lea
jmp
lods
in
or
push
stos
sub
mov
pop
add
sbb
add
fbld
mov
jmp
mov
dec
stos
lods
test
pop
mov
or
push
add
pop
mov
dec
xchg
cmp
adc
enter
jo
in
lea
pushf
adc
loopne
cmp
jle
mov
xor
sub
or
dec
clc
or
mov
or
xchg
ret
mov
insb
sub
mov
cmp
mov
cmpsb
inc
insl
pop
mov
or
adcl
mov
out
push
pop
xchg
and
add
push
shrb
pushf
or
mov
xor
pop
fcoml
jg
sar
mov
mov
sbb
std
movsb
lea
push
mov
addl
sti
adc
fsubl
push
push
lea
push
clc
in
add
mov
in
int3
xchg
int3
inc
je
icebp
fcos
in
nop
jae
pop
hlt
bound
inc
bound
cld
test
icebp
sahf
in
push
push
fdivr
out
dec
cld
out
rolb
push
push
cmp
xor
fs
dec
xor
dec
in
mov
mov
mov
mov
add
mov
nop
xorl
sbb
mov
lock
mov
dec
adc
push
cmc
add
push
and
push
lock
clc
paddd
jl
stc
push
pop
icebp
rorb
es
jo
mov
xor
std
adc
es
jo
fisubrs
in
in
cli
das
clc
xor
call
stos
aam
notb
add
or
repnz
or
fisubs
test
int3
fsubl
test
mov
xor
push
mov
push
mov
ja
loop
insb
push
call
out
loope
sbb
inc
add
clc
loopne
cmp
push
push
or
aaa
adcb
outsb
in
or
mov
sub
add
subl
cmp
ss
int3
shlb
test
or
test
jnp
jle
add
cwtl
push
xchg
inc
and
cld
jae
mov
sbb
jno
mov
inc
pop
insb
mov
mov
xchg
push
cmp
jae
les
je
add
or
fisubrl
icebp
inc
rcl
xchg
lea
add
dec
add
sub
mov
out
testl
ror
jmp
mov
push
aaa
pop
push
in
call
push
push
mov
push
out
or
sub
pop
or
out
sbb
push
lret
add
ljmp
sub
push
push
push
add
pop
mov
dec
mov
push
mov
mov
lock
ds
es
inc
ljmp
push
pusha
into
pushf
aaa
or
mov
outsb
cmp
fnsave
mov
rclb
and
or
cs
into
mov
sbb
std
xor
test
push
mov
lret
inc
arpl
aam
ljmp
sarb
inc
fcoml
addr16
sbb
inc
xchg
cmp
adc
mov
mov
aam
into
push
and
xor
loopne
loopne
xor
sahf
mov
inc
lock
push
incb
fwait
adc
pop
popf
jb
out
xor
stos
sarb
and
xor
mov
push
inc
test
pop
jne
adc
test
xor
mov
xchg
mov
cld
or
movsb
loope
dec
std
fsub
inc
pop
mov
or
mov
outsl
inc
test
xchg
or
mov
mov
les
inc
cmpb
leave
and
pop
xor
clc
xor
mov
xchg
xchg
ljmp
and
fs
pop
gs
mov
outsb
adc
and
ret
insb
gs
mov
pusha
cmp
test
add
push
push
movsl
xorb
loopne
dec
inc
jmp
data16
jl
mov
test
test
mov
adc
push
inc
icebp
cmpl
pop
stos
and
sti
pop
add
test
mov
out
loope
adc
xor
ss
sub
and
mov
les
mov
test
pop
push
in
push
mov
fwait
call
mov
add
adc
dec
xor
outsb
loopne
sub
xor
mov
inc
fs
cld
sub
add
jmp
fsts
jmp
dec
daa
cld
sub
cld
xor
data16
or
je
mov
dec
loopne
into
addb
out
unpckhps
jge
mov
imulb
add
push
aaa
mov
in
xor
inc
jg
hlt
mov
mov
mov
xchg
nop
xor
push
dec
rolb
outsl
mov
sar
or
movsb
test
mov
pop
xor
push
mov
or
adc
cwtl
push
xchg
cmp
push
icebp
jbe
shl
cwtl
sub
int3
notb
adc
cmp
adc
outsb
push
inc
mov
loopne
or
push
test
cmp
pushf
imul
call
dec
sbb
xchg
xor
push
add
sub
call
ja
mov
out
pushl
fs
js
dec
sub
sub
or
imul
mov
add
push
push
xchg
rolb
repnz
xor
mov
sub
dec
jo
and
xor
adc
mov
pushf
cmp
call
pop
mov
ljmp
hlt
rclb
insb
or
or
add
fistpl
push
push
push
jg
call
test
out
jne
ret
loopne
cmp
push
cmp
movsb
jo
jbe
push
clc
jne
enter
mov
push
loop
and
mov
cmp
push
into
cmp
or
xor
push
in
push
mov
aaa
pop
sbb
push
int
mov
adc
or
push
andb
add
mov
sub
jne
sbb
jne
call
in
add
adc
push
fwait
sub
cld
mov
pop
sub
adc
push
sub
rorl
cs
xor
mov
inc
movb
pop
lea
cld
dec
lods
xor
add
push
jb
stos
psubsw
in
lock
enter
je
pushf
fmul
cmp
push
xchg
jecxz
testb
sbb
mov
add
or
push
sbb
jle
add
mov
gs
cmp
mov
mov
sti
les
mov
gs
aad
out
fmull
add
push
loope
push
mov
xchg
les
add
je
cmp
jg
sub
les
nop
fcomps
pavgb
push
into
jne
out
mov
add
sub
fs
mov
dec
adc
mov
fwait
dec
xor
insl
pop
test
jne
sub
arpl
jnp
cli
cmp
push
inc
cwtl
adc
cs
or
aad
mov
mull
bound
nop
jge
or
mov
push
ret
mov
pop
je
subb
call
into
adc
add
sbb
pop
les
call
xor
decb
pop
mov
es
fcoms
pushf
pop
pop
jmp
popl
mov
push
mov
mov
jne
jg
popa
add
mov
cld
in
and
gs
dec
adc
or
adc
and
mov
pop
clc
in
int3
dec
adc
mov
ss
adc
cld
jp
push
mov
nop
push
movl
lock
xor
ss
mov
pusha
js
mov
mov
inc
fdivr
and
push
xchg
mov
and
roll
nop
mov
jle
xlat
add
hlt
outsl
fiadds
subb
pop
vcvtdq2pd
mov
cli
push
stos
add
lock
mov
ret
sub
lea
std
test
push
aam
jne
stos
call
les
pop
inc
push
loop
cli
add
push
loopne
incb
push
je
add
frstor
push
adcb
int3
call
les
mov
sarl
mov
je
ffreep
pop
outsb
hlt
inc
les
test
faddl
inc
bsf
loopne
xchg
add
xchg
add
mov
inc
nop
fmuls
jle
dec
push
or
cmp
addr16
inc
clc
xorb
in
pop
dec
clc
pop
scas
les
adc
adc
call
rol
movaps
lock
push
push
test
or
bound
test
es
sbb
dec
je
cmp
push
ret
push
rolb
cs
enter
add
push
adc
adc
pop
movsb
xchg
ret
mov
and
dec
les
pop
mov
push
rclb
inc
inc
xchg
test
dec
adc
insb
sub
cmp
sub
mov
fs
ljmp
inc
jp
mov
add
or
push
xchg
add
decl
push
inc
ret
jmp
clc
mov
and
xor
inc
cltd
pop
push
shrb
shl
push
nop
mov
or
stc
jmp
cmp
inc
pop
or
mov
sar
fiaddl
call
aas
fidivs
cmp
cmp
or
xchg
test
jle
mov
push
decb
push
and
mov
or
add
jno
call
mov
fadds
ss
lret
in
push
subl
push
add
es
lcall
sub
mov
dec
outsb
mov
xor
pop
fs
lret
int3
mov
sub
popa
cmp
out
outsb
aam
cmp
dec
add
cmpsl
add
in
sbb
icebp
outsl
mov
pmulhuw
mov
add
add
insb
in
pop
or
push
xchg
shl
inc
xor
subb
pop
jge
in
push
xchg
adc
outsl
add
cmp
lcall
add
hlt
into
or
icebp
inc
dec
or
movl
mov
jne
inc
inc
and
scas
pop
rcr
jb
jl
inc
xor
mov
and
and
inc
rcll
pop
or
xor
mov
lock
imul
ret
cmp
push
dec
andl
insb
add
in
fs
mov
mov
inc
xchg
call
mov
or
push
je
or
mov
adc
or
aas
sbb
mov
inc
or
mov
cmp
dec
mov
pusha
inc
adc
insb
push
leave
xorb
cs
icebp
cwtl
jo
jmp
add
or
cmp
pop
add
dec
mov
mov
loop
sbb
xor
pop
and
ss
gs
addb
or
inc
mov
pop
jl
ljmp
dec
testb
jae
adc
sbb
push
xchg
mov
add
mov
xchg
out
mov
push
aam
add
pushl
jmp
lea
mov
cwtl
ret
xchg
and
cs
lock
adc
inc
ret
inc
loop
inc
push
add
inc
inc
jo
and
add
jne
push
inc
lcall
ljmp
scas
sarb
lods
xchg
jmp
or
andl
pop
test
adcl
bound
and
sbb
push
mov
lods
aam
mov
imul
add
cwtl
aam
es
test
insl
push
sub
or
in
or
inc
movsb
jge
scas
inc
pop
jecxz
int3
ja
push
adc
movsl
fcoms
stos
mov
movsl
je
pop
ss
adc
lret
jne
add
inc
inc
or
mov
call
dec
jne
or
loopne
rcrl
add
gs
pop
shrl
imul
es
int3
push
test
insb
pop
or
cmp
rolb
inc
mov
mov
cld
mov
test
call
data16
mov
sub
mov
daa
xor
mov
or
insb
lock
bswap
loopne
bound
rdpmc
add
lcall
adc
rolb
test
mov
and
add
add
cmp
ds
sub
lock
jmp
cmp
and
test
into
mov
shlb
js
outsb
test
add
inc
addb
push
faddl
inc
fiaddl
bound
push
mov
aas
xor
sub
fistpll
mulb
shlb
mov
adcb
mov
loop
or
lock
cli
lods
xor
push
xor
adc
movsb
data16
mov
clc
mov
lock
or
int
push
jb
adc
add
test
mov
mov
test
xor
aas
into
adcl
mov
aam
gs
xchg
hlt
push
cld
rorb
jo
clc
mov
loope
push
pop
repnz
test
call
movsl
test
ror
mov
push
testb
shr
pop
xor
movsb
out
mov
xchg
loopne
adc
outsl
adc
les
pop
fiaddl
roll
fistpl
adc
rcl
adc
add
and
cld
pop
jg
fmul
add
mov
data16
xchg
clc
mov
jecxz
je
dec
rol
les
push
mov
cmpsb
add
inc
mov
movsb
fstl
dec
dec
jl
aam
imul
std
mov
or
ret
js,pt
sub
pop
add
mov
ror
sahf
test
pop
and
sub
movl
dec
mov
insb
mov
sub
outsl
adc
jns
add
clc
test
pusha
imul
negb
pop
in
add
and
dec
push
cmp
ljmp
mov
cmpb
jge
pop
call
fiadds
xchg
push
push
add
add
inc
xchg
idivl
mov
add
loopne
jo
push
lea
and
sub
ret
inc
insb
stos
pop
imul
cmc
push
rolb
and
cli
mov
in
lock
shlb
call
and
pop
and
xchg
push
mov
sbb
out
pop
dec
fmul
std
shrb
mov
push
test
inc
inc
cwtl
push
add
loopne
test
xor
adc
popa
sub
pop
lcall
and
jge
fistps
sbb
add
or
dec
xchg
adc
fdivl
jg
jmp
mov
test
stos
mov
push
add
sahf
mov
pop
mov
push
mov
and
mov
cmp
jmp
or
xor
and
lret
icebp
and
stos
iret
push
mov
in
jle
pusha
mov
rcrb
dec
mov
inc
hlt
sahf
decb
xchg
insb
mov
sbb
xlat
xor
add
ret
pop
mov
xor
fidivrs
mov
jne
mov
loopne
fs
nop
lock
les
xlat
ja
fs
mov
pop
lea
push
mov
or
sbb
clc
cmp
jmp
js
pop
and
sbb
outsb
cli
or
inc
mov
lret
inc
or
or
test
rcrl
add
cwtl
shll
add
xor
mov
repz
aad
mov
or
add
add
or
ficompl
add
dec
inc
rorl
sub
sbb
jp
mov
icebp
shl
inc
rorb
fnstcw
prefetcht1
push
push
les
add
das
inc
mov
test
aad
je
xor
popa
mov
pop
adc
mov
lock
dec
cld
mov
pop
adc
shlb
das
and
push
out
int3
push
ljmp
mov
aas
adc
clc
xor
jl
testb
icebp
mov
jo
repnz
popf
rclb
dec
lea
jbe
or
cmp
sbb
jle
imul
lcall
push
mov
xchg
xor
test
mov
xchg
loopne
add
mov
add
sahf
or
jns
mov
test
xor
loopne
pop
and
cmp
push
add
outsb
push
jae
adc
add
test
or
in
inc
jnp
jbe
cmp
xchg
add
push
aad
add
pop
daa
mov
enter
inc
mov
add
sbb
std
xchg
jmp
mov
test
or
mov
cmp
inc
xchg
shrb
test
incb
icebp
xor
ret
rclb
pop
mov
daa
add
or
arpl
fwait
clc
push
ljmp
mov
mov
or
repnz
aam
jb
adc
xor
push
xor
mov
dec
js
mov
mov
adc
push
add
call
clc
push
sar
scas
out
pop
and
loop
cmc
add
rolb
xchg
mov
mov
fcoms
push
popa
dec
dec
ljmp
adc
sub
add
cltd
jne
fistpll
cmp
sbb
sub
pushf
push
call
ljmp
sub
mov
push
shll
int3
cmp
adc
fneni(8087
mov
lea
pop
inc
mov
xchg
testb
xchg
xchg
xchg
push
aam
adc
testb
sbb
pop
cli
push
leave
sub
ret
out
and
popa
insb
xchg
push
loopne
adc
mov
int3
mov
mov
in
sub
roll
inc
cs
fadds
rcrb
cmp
add
jp
insb
sbb
push
loopne
mov
xchg
mov
fdivl
dec
dec
fistps
add
dec
jne
outsb
int3
cli
push
call
add
and
add
mov
clc
pop
and
int3
int3
push
clc
aad
pop
sarl
punpcklbw
clc
in
cmp
dec
idiv
add
pop
rolb
cmp
int
xor
sarb
or
aam
or
mov
loopne
pop
shr
andl
por
xchg
adc
mov
xchg
add
dec
insb
in
dec
mov
xlat
addr16
add
sbb
mov
fcomps
xchg
push
push
cmp
in
inc
insl
push
bound
push
adc
cmp
fmul
push
push
mov
movsl
cmp
mov
jle
call
push
inc
mov
les
scas
pop
and
pushl
adc
mov
or
mov
inc
dec
test
mov
inc
cld
shrl
idivb
mov
sub
fwait
popa
mov
mov
mov
jno
inc
mov
jae
mov
pushf
mul
dec
push
pop
jbe
jp
cmp
scas
jo
sti
addr16
inc
aam
add
fbld
sahf
fs
dec
mov
sub
inc
xor
dec
mov
clc
mov
ret
and
mov
mov
es
dec
lods
and
sub
push
in
icebp
push
fcoml
sub
dec
mov
push
cld
push
fs
enter
xchg
and
add
inc
movl
add
push
mov
es
push
ret
xchg
fmulp
mov
bound
dec
xor
jb
xchg
fbld
xchg
mov
test
cmovs
mov
jp
and
jne
adc
inc
xchg
js
mov
insl
clc
mov
cmp
or
cmc
cmp
fcompl
jb
sbb
cli
fcomip
sar
repz
jb
mov
inc
cmp
inc
push
mov
push
or
sub
mov
aaa
int3
sub
ljmp
sbb
movsb
xor
bound
add
dec
push
pop
adc
jecxz
loopne
mov
sub
pop
push
adc
stos
jb
inc
cmpsl
sbbb
xor
std
pop
or
js
ret
popa
call
and
leave
sar
andl
hlt
and
sbb
out
fwait
xor
mov
add
rolb
cmove
xor
push
mov
in
sbb
or
cmp
cmp
ret
inc
sub
ss
pop
inc
leave
or
mov
and
pushl
ret
sbb
orb
shrb
rcrb
clc
adc
test
mov
loopne
cwtl
cmpsb
les
mov
cmp
aaa
add
clc
loop
shrb
fdivrs
mov
loopne
lea
inc
mov
cmpb
stc
call
sti
inc
push
mov
in
jns
jmp
ds
fistpl
stos
cmp
shr
xchg
shrb
cmc
aaa
ret
cli
mov
push
loope
push
or
cvtdq2ps
push
cmp
testl
dec
clc
inc
lea
cmpsl
lcall
inc
adc
push
mov
xor
push
out
pushf
cmp
nop
push
fbld
int3
adc
cld
lcall
push
dec
sbb
cmp
sbb
mov
pusha
sbb
xchg
push
or
add
ret
mov
inc
inc
jge
jo
in
add
movsb
pop
sub
dec
xorb
add
adc
loopne
out
cmp
inc
outsl
pop
lret
loope
loopne
dec
or
shrl
adc
clc
insb
shll
les
cmp
in
hlt
subl
les
add
cld
jb
movsl
in
test
adc
adc
adc
adc
mov
cli
push
pusha
add
xchg
jmp
arpl
xor
mov
js
pop
inc
ljmp
shr
lea
push
std
rclb
mov
fbld
fdivs
lock
testb
xorb
add
mov
sub
lcall
sub
out
mov
inc
mov
xchg
loop
cmc
cmc
pop
mov
mov
inc
je
inc
rorl
dec
nop
loop
out
pop
dec
dec
push
push
sbb
cmpsb
add
enter
mov
mov
push
add
outsl
dec
orb
insb
orl
fcomps
cmpl
xchg
cmc
stos
or
sar
mov
aam
mov
outsb
fidivs
mov
push
in
mov
ss
aas
into
movsb
cmp
mov
sbb
and
push
pop
sbb
es
push
cmp
pop
cmp
out
inc
or
mov
sbb
cmp
int3
sbb
add
loope
xor
bound
jmp
pop
push
mov
enter
fdivrs
mov
mov
add
je
mov
inc
data16
incl
sbbl
xchg
add
decb
fnstsw
sbb
repnz
add
mov
int3
add
adc
lock
aaa
int3
cli
push
cmp
js
add
adc
cwtl
test
nop
push
test
ret
dec
jl
imul
jb
jl
ljmp
mov
lea
nop
push
mov
jb
mov
dec
mov
jl
adc
lret
int3
ret
push
ret
add
jne
sub
mov
inc
push
lahf
add
jmp
mov
hlt
fstpt
mov
add
movsl
push
or
pop
pop
dec
divb
and
popf
shr
aas
inc
bnd
bound
or
iret
jb
mov
mov
js
cmp
or
push
mov
faddl
jge
roll
gs
incl
mov
je
adcl
or
push
mov
les
dec
fstl
mov
loop
fdivl
in
test
aam
lret
sbb
test
xchg
xchg
xor
jb
jo
mov
int3
rol
dec
push
push
out
mov
and
nop
push
push
mov
movb
test
mov
adc
pop
test
sub
or
mov
fmul
jge
pop
pop
int3
aam
push
push
sbb
push
push
cld
add
bound
push
mov
inc
incl
push
ret
shlb
sub
mov
jle
in
inc
mov
dec
outsb
adc
ret
mov
sahf
mov
jg
outsb
add
push
sbb
inc
cmp
in
subb
cmp
test
adc
fs
shl
adc
andb
and
xor
inc
stos
rolb
cld
push
jne
mov
jecxz
pop
xor
adc
mov
push
int
jb
mov
clc
add
mov
sub
or
cs
cmpsb
add
clc
push
or
xchg
sub
out
orb
and
arpl
dec
or
movsb
add
ret
add
cmpsb
fwait
inc
inc
pop
push
sbb
cmp
popa
nop
pop
clc
or
or
xor
dec
add
je
push
ret
mov
or
adc
inc
cli
nop
jne
push
or
fsubs
out
push
push
and
dec
nop
jb
jg
cmp
test
mov
inc
outsl
gs
mov
lret
pushf
xchg
jecxz
pop
push
les
add
mov
icebp
and
movsb
cmc
arpl
dec
bound
jl
mov
add
mov
dec
loopne
add
push
inc
andb
rorb
sub
adcl
orb
fwait
mov
in
jg
ret
lea
mov
xor
cs
shl
jo
adc
lret
decb
fisttpl
loope
stos
push
cmp
lods
xchg
push
stos
or
repnz
push
stos
mov
pusha
jge
pop
imul
jb
sub
rorb
sti
push
clc
add
cmp
or
sahf
movsl
lea
adc
pusha
jl
add
insb
push
mov
sbb
cld
filds
jbe
insl
idiv
jmp
dec
jne
lret
xchg
vmovddup
dec
ret
in
xchg
test
ret
in
inc
sahf
punpcklbw
mov
loop
hlt
mov
ds
jbe
xchg
xlat
cmp
les
mov
xor
push
in
add
push
add
xchg
and
jbe
add
test
xor
call
lcall
inc
stc
cmpsl
jmp
push
and
pop
inc
cs
insb
gs
test
hlt
imul
movl
clc
cmc
push
push
and
in
or
push
push
insb
xor
es
mov
jbe
sbb
push
cld
lcall
loopne
ret
inc
outsb
inc
outsb
sub
andb
sbbl
inc
or
test
test
inc
add
adc
cmp
pop
sub
dec
or
ret
push
push
jns
jg
inc
inc
pop
jp
xor
add
add
xor
fistpl
dec
inc
mov
dec
lods
push
jo
inc
add
js
aad
lock
xchg
shlb
sbb
push
jmp
mov
je
sarl
orb
adc
push
push
jb
test
mov
mov
inc
mov
xor
cli
push
dec
mov
das
orb
and
adc
popa
xchg
push
cld
ret
es
jbe
mov
mov
inc
dec
out
dec
xchg
inc
shr
or
or
xchg
jmp
jmp
rolb
aaa
sbb
xor
lock
shll
jl
test
jb
inc
jo
dec
cmp
mov
push
loopne
call
clc
out
sub
and
orb
movsb
dec
gs
pop
sub
imull
push
mov
mov
lods
mov
and
add
adc
add
push
loopne
in
mov
and
mov
dec
lret
insl
push
in
inc
lcall
add
xchg
ret
mov
test
enter
ret
mov
and
xchg
sahf
mov
pushf
and
sub
add
cmp
jns
cwtl
pusha
paddd
dec
sbb
sub
push
add
ljmp
push
lock
xorb
adcl
xor
adc
mov
adc
jne
pushf
psubsb
and
and
ret
mov
mov
fs
pop
jae
adc
popf
scas
pushl
mov
jns
add
lock
mov
mov
bound
mov
clc
jmp
xchg
hlt
out
adc
je
int3
enter
sub
jo
ss
and
pop
push
cs
xchg
negb
add
jo
xchg
mov
fistps
inc
adcl
sbb
nop
add
adc
loop,pn
mov
dec
mov
in
inc
outsb
add
inc
filds
add
and
xor
xchg
orb
ljmp
add
insb
add
push
sbb
divps
xchg
mov
mov
sbb
rorl
js
add
jo
sarl
add
or
adc
jmp
punpckhwd
pusha
adc
add
ret
pop
sbb
sbb
add
dec
int3
in
and
add
push
arpl
lahf
fsubs
imul
inc
in
or
or
outsl
js
and
pop
add
push
cld
in
mov
lock
jne
call
add
sub
sbb
adc
cmpsb
add
ljmp
mov
xor
push
loop
std
fwait
jmp
jo
aam
mov
sbbl
inc
loopne
test
mov
fucomp
add
dec
in
mov
call
das
outsb
data16
mov
mov
push
push
les
incl
add
push
cld
inc
inc
sarl
inc
jecxz
adc
inc
loopne
lcall
adc
adc
pop
mov
mov
gs
loopne
stc
mov
mov
call
adc
mov
and
mov
rcl
sbb
xor
adc
fmuls
jne
sub
fs
inc
add
mov
pmuludq
lods
or
clc
mov
lock
mov
and
inc
cmp
in
jo
mov
test
mov
mov
test
jo
or
out
pusha
mov
sbb
dec
fdivl
repz
mov
stos
imul
test
push
pop
add
sbb
dec
sbb
push
dec
inc
inc
add
pusha
call
xor
mov
call
lret
push
test
jl
mov
jecxz
testb
mov
xchg
cmc
lcall
pop
and
jo
lret
rclb
aad
or
mov
not
push
and
pop
sbb
fcomi
aaa
mov
push
xor
push
inc
cwtl
mov
clc
outsl
adc
rolb
imul
adc
push
sub
mov
fidivl
push
adc
mov
stos
arpl
or
adc
lock
and
fcmovnb
inc
push
inc
xchg
push
lcall
je
test
push
enter
or
xchg
hlt
movsb
sub
xchg
cwtl
sub
or
pushf
in
ret
jge
aaa
or
pop
add
jmp
add
inc
hlt
test
outsb
mov
imul
add
push
add
jb
cmp
push
dec
mov
mov
cli
out
sbbb
dec
add
jo
xor
pop
push
push
cmp
fistl
sti
mov
inc
pop
push
sbbb
les
test
mov
shrb
add
push
enter
movsb
push
rolb
inc
adc
jmp
sahf
aad
inc
and
mov
push
notl
fldl
xor
rorb
in
adc
scas
ljmp
or
aas
mov
adc
add
ljmp
add
outsb
inc
dec
mov
rolb
xchg
jo
ret
stos
or
js
mov
call
js
mov
cmp
inc
pusha
inc
adc
test
mov
js
jg
adc
adc
loopne
adc
rcrl
mov
ret
cmpsb
data16
add
sbb
addb
push
push
pop
fcomip
jl
mov
or
fisttpll
ret
add
call
movsb
call
data16
enter
sub
lds
push
sbb
clc
repnz
movsb
cmc
incl
jmp
int3
loopne
jge
mov
dec
jg
mov
push
push
scas
lods
add
scas
mov
outsb
cld
xchg
clc
inc
cld
sub
js
adc
cwtl
mov
mov
sub
push
sbb
test
les
jno
popa
mov
or
ret
inc
call
or
jne
jle
rclb
mov
adc
rcrb
add
jmp
es
jbe
mov
cmp
stc
lret
adc
xor
into
adc
mov
add
adc
xchg
and
push
pop
mov
mov
mov
inc
loope
fwait
cld
mov
inc
adc
into
incl
inc
je
fcmovnbe
cmc
scas
xchg
sub
and
or
in
pop
cmp
sub
xor
cmpsl
mov
dec
cmp
add
fnstenv
dec
lahf
mov
adc
loop
imul
cmp
aam
push
ficoms
add
xchg
cld
js
loopne
pop
dec
loope
push
sarb
dec
daa
psubb
pusha
sbbl
lea
inc
cs
or
icebp
push
in
sub
push
inc
adc
push
lret
outsb
cltd
cs
rclb
jne
loope
sarb
sub
je
cmc
mov
mov
pop
decl
pop
pop
call
enter
or
lea
cmp
cld
add
repnz
xchg
data16
pop
addr16
ljmp
popa
in
lea
sub
push
lock
jo
les
cmp
mov
jne
inc
loope
bound
call
cld
sbb
pop
push
push
add
add
and
mov
add
mov
inc
outsb
fsubrl
push
hlt
das
andb
jb
shlb
ja
mov
and
mov
scas
test
pop
add
fs
enter
or
or
dec
rclb
ret
sub
test
lods
jnp
and
ret
inc
clc
icebp
mov
orb
icebp
adc
pusha
push
sbbl
adc
decb
pop
push
sysret
lea
xor
dec
outsl
jl
push
imul
sub
les
dec
movsb
mov
and
out
cmp
pop
push
movlps
out
or
dec
and
push
rolb
adc
leave
dec
testl
xchg
mov
jmp
mov
xor
jge
int3
sub
in
cld
mov
pop
push
fldl
mov
add
push
int3
bound
xor
or
movl
fadds
adc
xchg
outsl
rolb
test
imul
mov
inc
pop
aam
stos
es
add
adc
add
dec
inc
or
pop
cwtl
sub
add
mov
in
aam
xor
insb
adc
push
sarb
push
xor
pop
or
inc
ljmp
push
push
adc
adc
xchg
add
and
or
daa
lock
pcmpgtd
push
clc
call
std
mov
repz
mov
mov
add
xorb
jle
adc
mov
or
mov
mov
jle
and
inc
les
sub
cmpb
gs
pushf
push
adcb
pusha
insb
mov
inc
pop
das
jb
cld
xor
clc
lods
lret
enter
adc
jecxz
enter
lods
ljmp
or
mov
or
clc
cmpsb
xlat
mov
sbb
cli
into
ret
mov
add
sbb
mov
or
jae
mov
cmp
fildll
movsl
pop
xchg
pop
add
je
mov
push
push
xor
call
call
adc
rclb
or
stos
jb
add
cmp
cmpsb
push
movsl
xlat
mov
pusha
xor
jp
pop
int3
fsubr
daa
shl
lcall
in
sbb
inc
and
hlt
dec
in
add
inc
rclb
mov
pop
inc
andl
inc
call
js
push
sarl
inc
fadds
ror
sbb
in
add
xchg
insb
adc
xchg
dec
in
pop
or
cmp
dec
inc
add
pop
inc
roll
mov
add
add
sub
add
mov
imul
mov
or
mov
add
inc
shrl
lock
lea
xlat
nop
or
addb
lret
or
jo
push
pop
mov
lock
cwtl
enter
or
lea
inc
sbb
inc
das
adc
mov
faddl
test
shlb
push
repnz
xor
aam
cmp
je
mov
mov
scas
or
jl
fdivl
and
mov
clc
outsb
aaa
push
xchg
fiadds
pusha
decl
cld
or
or
icebp
rolb
push
adc
test
and
and
fcoms
punpckhbw
adc
bound
xor
shlb
cld
ljmp
cmove
insl
das
pushf
inc
inc
cli
push
xor
test
int3
push
jl
shl
insb
and
pushl
mov
imulb
add
dec
push
adcb
pop
lods
popf
pushf
lcall
xchg
add
push
shrl
testb
add
or
insb
out
std
sub
cmp
pusha
pop
dec
rolb
mov
es
test
pop
cmc
leave
fildl
jecxz
mov
dec
repz
jl
mov
sbbb
push
sbb
shlb
jg
xor
jbe
sbb
lock
add
ljmp
dec
cli
clc
mov
mov
ret
mov
daa
sub
fldl
std
mov
inc
push
dec
push
add
out
outsb
push
cmp
jo
or
loop
add
outsl
adc
pop
sbb
ret
lock
ljmp
ret
sar
aad
or
push
pop
test
mov
and
jo
sub
outsb
xor
add
xor
xor
mov
cmp
test
shr
lcall
inc
mov
xorl
stc
and
clc
das
add
cmc
jbe
lcall
decb
in
cli
add
ret
add
mov
rorb
jle
mov
dec
xor
lea
adc
add
add
arpl
mov
stos
jb
lcall
adc
filds
dec
cld
stos
xor
jne
inc
adc
popa
ret
addb
inc
and
mov
adc
mov
add
jmp
sbb
and
push
and
gs
dec
jmp
sbb
add
popf
mov
sub
ret
push
ret
clc
mov
orl
imul
push
cmpsl
es
ds
sbb
fdivl
loopne
aaa
jb
pop
mov
push
push
mov
sahf
rclb
add
pop
mov
pop
xchg
ss
push
call
mov
inc
and
push
push
pop
jne
shrb
pop
mov
ljmp
add
ret
and
lock
inc
lods
add
and
outsb
lcall
mov
clc
push
js
mov
inc
je
je
jo
icebp
inc
mov
inc
cmp
mov
ret
or
outsl
adc
push
or
mov
scas
mov
jmp
lret
shr
addb
out
jmp
out
lret
gs
push
sahf
scas
push
subb
movsb
xor
sbb
and
xlat
fwait
mov
nop
push
call
clc
cs
pop
pop
inc
sar
sbb
aad
ret
xchg
adc
popa
mov
rolb
mov
test
xor
stos
das
aaa
cwtl
mov
lea
inc
pop
mov
adc
xchg
add
jb
add
fdivs
push
add
adc
lret
je
adcl
or
inc
and
je
xchg
mov
or
add
aas
sbb
test
xor
sbbl
push
scas
lahf
push
push
adc
ds
arpl
xchg
not
lock
data16
push
jl
ja
std
int3
orl
and
shlb
xor
icebp
mov
xor
je
mull
pushl
jecxz
jmp
and
test
push
mov
mov
mov
je
xor
les
mov
xchg
cmp
adc
ret
lods
out
add
dec
push
adc
add
scas
lods
adc
mov
xor
mov
and
shl
bound
add
sbb
adc
mov
inc
cli
mov
in
movb
cmp
out
lds
push
ss
pop
hlt
stc
call
adc
clc
adc
push
mov
cmc
mov
add
sbb
shrl
xor
lcall
mov
mov
daa
rcrl
xor
mov
mov
cmp
adcb
or
cmp
or
test
push
add
or
ror
sbb
pop
mov
call
or
or
pop
cmp
add
loopne
pop
mov
fisubl
into
cmp
push
in
push
dec
jne
jmp
mov
dec
pop
jae
sbbb
sub
mov
add
inc
call
sbb
pop
js
or
lea
dec
push
sub
xor
mov
xchg
int3
jne
adc
push
dec
or
add
aad
into
and
or
pop
sub
mov
int
dec
adc
mov
dec
add
cmp
js
clc
mov
sbb
cmp
std
xor
jo
loopne
sbb
shl
add
stc
mov
pop
add
add
es
add
xchg
ds
cmp
or
scas
xchg
mov
pop
mov
inc
adc
inc
sub
or
push
add
insb
fs
rorl
cld
add
adc
cmp
mov
push
cs
pop
push
mov
leave
sub
xorl
xor
mov
xchg
push
sbb
sub
cwtl
push
call
dec
push
dec
and
loopne
adc
cwtl
cwtl
mov
dec
mov
test
mov
mov
push
mov
pop
or
test
push
stc
xor
cmp
mov
push
sbb
les
cmp
adc
aam
adc
icebp
inc
adc
inc
and
sbbb
push
lods
xchg
jne
lret
ret
shll
or
das
or
adc
sbb
cmp
mov
add
ret
or
push
jbe
mov
fmul
mov
jne
in
add
loopne
jbe
or
pushf
xchg
je
jne
pop
and
and
lea
test
cmc
push
adcb
and
or
and
push
cwtl
lock
dec
mov
stos
incl
sub
lock
fs
push
mov
or
gs
jns
adc
hlt
inc
test
mov
mov
add
mov
dec
mov
add
push
mov
lcall
pop
mov
js
inc
adc
dec
lea
add
jl
cmpb
xchg
ret
dec
mov
negb
mov
add
cmpsb
popa
jb
adc
xor
jo
popf
mov
ret
aaa
add
sbbl
pop
stos
or
jge
mov
jmp
jp
orl
push
cmpb
orb
xor
hlt
cmp
dec
loop
push
or
bound
orl
sbb
gs
mov
sub
rolb
or
mov
or
mov
aaa
sbb
push
push
popa
pop
dec
push
push
adc
mov
cmp
jp
lock
jge,pt
enter
bound
pop
stos
push
mov
or
cli
dec
std
das
cmp
jo
adc
adc
shl
mov
loopne
and
cmp
es
inc
or
mov
and
or
aam
fxch
pop
xchg
mov
pop
loope
mov
sysret
push
jne
incl
sahf
sub
adc
pop
push
adc
adc
fs
adc
inc
dec
movl
aam
pop
mov
push
pop
daa
jne
jl
sbb
int3
jmp
lds
sub
inc
loop
sub
jle
xor
shlb
cmp
outsl
add
nop
mov
push
and
les
mov
test
fdivl
out
push
mov
or
xchg
jne
or
pop
sub
shlb
inc
shrb
fdecstp
adc
adcb
mov
arpl
lods
pop
std
sbb
loopne
inc
xchg
adc
pop
mov
nop
dec
inc
lret
pusha
out
outsb
adc
aad
mov
lret
mov
lahf
orb
push
addl
and
add
mov
mov
mov
dec
cmovbe
imul
push
mov
add
icebp
jno
hlt
lahf
inc
lock
mov
pushl
jp
and
and
push
jne
nop
shlb
cld
or
mov
add
mov
xor
clc
add
or
lea
jno
push
and
pop
add
dec
pop
testb
insb
outsl
adc
add
mov
mov
roll
imul
fisubl
push
mov
mov
mov
mov
push
inc
les
cmpb
fcom
or
or
rcrb
pop
push
mov
mov
sub
cmp
jle
push
jp
mov
mov
mov
mov
out
and
push
push
mov
mov
int3
stos
adc
or
jb
ljmp
loopne
inc
jmp
lock
add
cld
mov
fwait
movsl
mov
enter
roll
push
pop
add
pusha
jne
xchg
adc
outsb
sbb
lea
roll
repnz
sub
mov
mov
push
push
rclb
or
mov
or
lea
cwtl
icebp
mov
push
inc
pop
dec
sbb
rorb
imul
jbe
push
add
popf
xor
push
mov
sbbb
push
movsb
mov
or
into
xchg
data16
insb
ret
ucomiss
out
xor
add
dec
jge
jne
xor
je
push
mov
in
jbe
push
movsb
adc
je
out
cmp
cld
sub
inc
dec
pop
inc
and
cld
sbb
adc
lock
sbb
pop
push
call
movsl
mov
and
jmp
lds
push
sub
inc
outsb
or
jl
cld
sahf
jmp
les
mov
dec
mov
lcall
call
pop
cmp
jae
cwtl
call
xchg
cli
imul
addb
jmp
fcoms
mov
stos
idiv
push
jl
outsl
sub
add
sarb
cmp
jp
mov
test
pop
inc
lods
dec
js
xchg
pop
mov
ds
bound
sbb
incb
push
push
in
or
sbb
xchg
loopne
push
mov
mov
lea
sbb
and
in
xchg
jo
dec
enter
or
mov
adc
std
adc
cmp
stc
adc
imul
push
mov
or
popf
rcrb
adc
lcall
cmc
add
adc
pop
xor
push
outsb
adc
lods
test
push
jmp
aas
push
mov
xchg
push
je
test
sbb
add
push
aaa
inc
add
pop
and
incl
inc
jle
push
bound
mov
rol
pop
dec
sbb
mov
add
decl
jge
xor
jle
mov
test
ret
aaa
mov
mov
push
notb
mov
push
decb
push
xor
out
rcl
inc
gs
pusha
sti
cli
push
pusha
xor
call
mov
add
test
sub
je
aaa
lods
mov
testb
bound
sar
mov
sub
fs
cmc
pop
sbb
out
in
push
sbb
xchg
mov
and
or
inc
lods
xchg
push
js
je
add
test
hlt
aas
adc
push
movl
xor
in
cs
adcl
enter
subb
pusha
fmull
or
mov
push
adc
mov
jmp
mov
xor
sbbl
lcall
call
outsb
inc
in
repnz
jecxz
lahf
xchg
cmp
jecxz
movsb
and
add
aad
add
mov
or
in
mov
insb
push
mov
cmp
outsb
jbe
cmpsb
inc
inc
ds
add
cmp
push
test
ss
cmpb
jns
inc
mov
les
add
sahf
ret
idiv
add
add
jb
mov
add
add
add
mov
mov
sarb
inc
call
mov
test
pusha
into
loop
loopne
sbb
in
add
add
pop
dec
adc
adc
adc
inc
inc
sub
jnp
mov
rol
sbb
push
mov
add
sub
jo
test
dec
inc
testb
mov
inc
mov
sub
xor
add
ds
sub
fcoml
cmp
mov
cli
cmp
push
inc
fildll
mov
cld
lea
shrb
lock
int3
pop
ficoml
dec
adcb
xchg
cli
push
ljmp
icebp
xor
out
loop
lock
in
sub
mov
mov
rcr
pop
jl
xor
test
adc
test
push
int3
loop
mov
mov
sarl
jbe
adc
mov
roll
mov
cld
lock
sbb
push
std
mov
sbb
in
ret
pop
movsl
jb
pusha
add
pop
mov
call
pop
hlt
dec
xchg
out
or
jge
aam
mov
movl
out
daa
sub
pop
pop
add
pop
xor
adc
aaa
cld
xor
rorb
lock
add
movsl
inc
shl
rcrb
mov
inc
dec
stos
sub
add
push
js
rorb
lock
jge
inc
test
pop
mov
shlb
jmp
push
lock
jb
add
xlat
repz
xchg
mov
pop
cmpsb
push
popf
je
test
xor
aas
xchg
or
outsb
and
xchg
pop
add
into
push
xchg
jge
push
and
push
jo
daa
push
push
mov
mov
pop
sbb
dec
call
je
pop
dec
pop
repnz
cmp
pop
push
cmp
inc
push
push
aas
pop
push
xchg
mov
aaa
mov
or
cld
xor
shll
jne
pop
sbb
and
sbb
xchg
nop
aam
stos
add
and
ret
loop
adc
adc
or
mov
out
or
clc
in
shlb
fsubrs
dec
or
xor
jp
ret
lea
add
cmc
mov
mov
rolb
int3
push
movsl
or
dec
adc
pop
jp
dec
add
jb
clc
xchg
aam
push
add
xchg
outsb
stos
xor
outsb
mov
or
loope
mov
cmp
enter
bound
shr
aaa
fwait
mov
lea
pop
adc
or
fwait
mov
and
pop
stos
sub
dec
or
int3
mov
add
iret
loop
mov
test
aaa
add
cld
adc
xchg
lea
inc
movsb
push
or
or
sbb
imull
arpl
das
sbb
lret
adc
leave
js
add
into
jl
les
test
fistpl
jbe
dec
adc
push
xor
push
hlt
notl
dec
xor
mov
inc
roll
fadds
adc
jnp
pop
mov
adc
test
mov
rol
adc
pusha
test
or
fimuls
cs
paddsw
sub
lret
inc
sub
out
mov
movsl
cld
scas
rcl
or
or
aad
mov
mov
adc
pop
dec
outsl
jmp
push
andnps
jo
cmp
adc
fcoms
ds
dec
loop
mov
bound
adc
ss
jg
sbb
fiadds
cmp
xor
pop
xchg
fstp
adc
int3
ss
sub
push
fidivs
and
ds
push
aam
sbb
mov
pop
cwtl
cmp
jge
ja
pop
das
hlt
ds
or
ljmp
or
add
fdivl
add
cltd
mov
mov
pop
loopne
xorl
rol
scas
adc
testb
aaa
pop
daa
shlb
push
test
or
xor
stos
fistps
inc
xchg
fs
lret
push
pop
xlat
aas
insb
call
jmp
in
mov
pusha
call
add
inc
cmp
and
sbb
jb
inc
orps
dec
cld
xor
push
test
inc
add
cli
xchg
jno
in
pop
pop
push
cmp
shlb
mov
and
cmp
sbb
cs
or
xor
xchg
jg
hlt
push
into
add
push
sbbl
sub
xor
mov
mov
lea
mov
add
pop
adc
addb
inc
pop
popa
scas
imul
jne
jp
add
sub
add
loop
pop
enter
inc
enter
shlb
mov
or
add
pop
adc
xchg
sub
mov
pop
jmp
jb
lock
shl
insb
lret
xor
out
scas
sub
xchg
test
jp
in
mov
xchg
push
xor
jne
fldt
add
test
pop
fiadds
lret
or
xor
icebp
in
mov
rorb
aam
movsl
movsb
aad
popa
xchg
inc
mov
add
push
faddp
cmp
sub
xlat
aaa
std
je
dec
mov
in
pop
cmp
fldt
add
icebp
es
fldt
mov
or
test
in
push
push
adc
jg
or
add
or
fisttpl
cmp
sbb
pushf
std
int3
mov
add
cmp
pushf
and
xor
and
es
cmp
loope
sbb
add
addl
jbe
cmp
xchg
push
std
cmp
adc
int3
push
push
adc
dec
fmuls
dec
sbb
in
push
sub
or
incb
int3
aam
ret
push
sub
insb
enter
mov
sbb
xlat
test
fmull
jbe
push
divl
fidivl
and
inc
add
inc
sbbl
fsubl
pop
popl
xor
sub
mov
rcrl
xchg
mov
mov
jo
xchg
push
div
inc
mov
push
jmp
sub
test
bound
pop
inc
test
add
addl
and
fdivs
js
sub
addb
dec
fcoml
clc
add
mov
test
xor
mov
mov
sahf
jbe
stos
and
stos
mov
add
and
mov
jnp
xchg
je
mov
push
inc
popa
rolb
fdivrs
jge
mov
xor
rcr
out
outsb
sbb
add
movl
sti
push
int3
pop
mov
xor
aam
add
mov
adc
mov
inc
cmp
out
add
fadds
fidivrs
aad
aam
or
mov
aaa
add
movsl
clc
stos
add
lds
lret
mov
test
and
jle
mov
daa
xor
pop
shlb
rclb
mov
sub
sbb
xchg
cmpl
inc
adc
subps
int3
repnz
fsubrl
inc
scas
in
push
mov
mov
sti
fs
pop
movsb
cld
idiv
adc
ret
or
push
or
dec
test
call
mov
mov
xor
rolb
call
pop
mov
and
sbb
dec
jae
scas
int3
pop
test
inc
out
xor
or
fidivs
mov
ret
jge
dec
or
inc
add
add
lret
sahf
pop
ret
or
add
jb
add
std
mov
bound
jmp
dec
rcl
cmp
sbb
mov
and
xor
inc
pop
call
insb
test
outsl
cs
sbb
std
inc
orb
aaa
mov
inc
data16
add
mov
aaa
ds
xor
push
dec
or
sbb
adc
add
out
sti
call
inc
jnp
dec
fisttpll
test
pop
nop
xor
ret
or
adc
pop
sbb
test
or
inc
adc
mov
lock
les
aam
mov
sbb
or
or
jae
pop
ja
mov
daa
add
jb
xchg
xchg
movsl
xchg
dec
and
call
adcb
and
adcl
rcl
aad
or
addb
fadds
inc
adc
test
scas
ret
in
std
push
jnp
pop
pop
test
sub
push
or
add
xor
leave
mov
mov
dec
ds
add
test
add
ud0
jge
popf
cmp
incl
xor
fisttpl
jge
dec
push
add
add
mov
adcl
push
bound
add
movsb
push
fsubrl
cmp
adc
test
adc
or
xor
sbb
shlb
xor
pop
dec
inc
movsl
inc
or
xchg
les
cli
xchg
je
stos
std
mov
ja
fwait
mov
outsl
stc
inc
pop
xor
xchg
insb
fs
mov
mov
push
add
rclb
hlt
jb
add
add
mov
test
mov
cmp
xor
inc
cli
pop
inc
xchg
fwait
pop
fdivrp
mov
mov
xchg
mov
popl
lcall
fisubs
xchg
in
repnz
cmp
jmp
sbb
and
ret
inc
xor
push
pop
cmp
inc
mov
mov
push
lock
xor
xor
adc
lock
pop
fdivs
adc
mov
or
cmovl
aad
mov
jb
ret
pusha
push
imulb
cli
popf
int3
cmpsb
pop
leave
cli
clc
lock
in
push
pop
icebp
adc
clc
hlt
mov
add
or
test
jl
jle
inc
inc
cmp
test
fisttps
sbb
mov
add
pop
pusha
ja
cmp
xchg
lock
add
xchg
mov
ljmp
fs
lock
push
pop
pop
mov
adc
je
out
adc
push
pop
jl
adc
lods
mov
inc
xor
add
sub
xor
push
push
lret
add
aam
add
loopne
jmp
mov
and
in
test
add
or
int3
mov
inc
add
mov
jno
sub
push
add
and
inc
clc
fwait
push
decb
add
add
dec
push
pusha
test
inc
pop
xchg
mov
enter
nop
xor
pop
xor
ja
push
js
outsl
xlat
adc
je
mov
mov
xor
add
jo
lret
in
mov
inc
movl
adc
fsubl
enter
mov
test
loopne
test
mov
sub
cmpsb
adc
add
pop
adc
mov
cld
xchg
test
gs
jle
or
jmp
xchg
psraw
mov
inc
sub
mov
pusha
stos
imul
pop
inc
je
in
test
shl
ljmp
fbld
sbb
or
lret
xchg
leave
jns
je
dec
pop
ds
cli
scas
in
mov
popa
push
and
call
mov
data16
push
jle
ja
pop
ret
shrb
cli
in
push
push
aam
addl
dec
lea
push
pop
inc
inc
aad
test
pop
divb
movsb
xor
sarb
lock
pop
or
push
sbb
scas
arpl
mov
hlt
adc
std
enter
push
cld
jne
sti
add
shll
loopne
sub
jmp
jne
stc
imul
or
push
pushf
and
or
mov
cld
pop
push
add
jmp
fs
and
add
insl
push
and
insl
jae
jp
mov
xchg
inc
adc
mov
rcrl
push
pop
das
lea
or
or
cmp
bound
mov
stos
and
test
cwtl
mov
xor
ss
pop
mov
inc
dec
pop
stos
idiv
sar
push
adc
data16
pop
ret
sbb
out
fwait
orl
xor
mov
aam
shlb
lea
cwtl
ret
jmp
or
lods
xor
inc
cmpsb
cld
or
pop
ret
in
pusha
dec
jg
ficoms
push
popf
mov
or
call
add
sbb
clc
jmp
jne
xor
pop
add
test
test
inc
shll
mov
push
and
xor
movsb
out
adc
ret
inc
fs
in
mov
lcall
jmp
ret
pop
push
js
jne
jae
std
mov
data16
test
inc
pop
insb
mov
add
test
mov
je
decl
mov
jb
cmc
dec
subb
lea
push
pop
cmp
andb
data16
in
shlb
mov
dec
xor
dec
pop
hlt
inc
mov
and
add
test
add
std
jp
push
adc
movsb
adc
add
mov
outsl
inc
cli
es
aaa
cli
das
push
lods
and
cmc
scas
jb
nop
ret
xchg
in
lea
xor
int
stos
jle
mov
and
dec
dec
and
cs
jnp
push
push
mov
mov
push
mov
mov
xor
cld
add
dec
jmp
inc
cmp
sub
rcrl
inc
inc
aad
push
or
call
inc
xchg
pop
test
ficomps
sub
into
adc
pusha
mov
out
push
bound
dec
pop
sbb
ljmp
sbb
loopne
int3
pop
or
leave
out
ficoml
test
lcall
adc
rorb
add
aam
fsubr
clc
push
sbb
dec
jge
pop
adc
push
add
test
lock
cmp
mov
scas
test
dec
and
rolb
nop
rol
ljmp
push
mov
aas
inc
push
add
and
cmp
dec
and
add
rorb
add
adc
inc
sbb
stos
outsb
movsb
lea
jo
mov
in
fs
sbb
cmova
push
mov
mov
lock
je
and
clc
outsl
inc
inc
bound
pusha
rorb
out
inc
mov
jmp
mov
movd
add
into
or
adc
pop
adc
loopne
lret
pop
mov
addl
push
gs
xor
ja
adc
pop
jnp
mov
mov
push
test
clc
pop
sub
movsl
jp
push
outsl
scas
or
faddl
test
and
push
loope
add
jle
fsts
loopne
ljmp
aam
pop
pop
aam
add
daa
incb
adc
leave
mov
test
ds
dec
les
fimuls
mov
testl
pop
test
jo
mov
cmp
and
mov
add
out
xor
insb
sub
nop
filds
push
sbb
xchg
lods
imul
clc
mov
fwait
or
adc
das
dec
jmp
mov
push
sbb
cli
std
xchg
dec
push
push
mov
push
push
movsl
sbbb
xor
push
mov
sbb
cmpsb
js
test
and
bound
cmpsb
cmpsb
ret
fdivs
cmp
movsl
hlt
mov
dec
add
les
xor
adc
push
or
cld
lcall
push
push
xbegin
push
push
ret
insl
and
jmp
fdivr
pop
mov
mov
pusha
imul
aad
loop
dec
rclb
addl
or
out
aad
mov
std
imul
xor
sbb
jmp
jb
push
add
mov
out
dec
dec
push
pop
push
push
fsubs
jl
aaa
mov
call
je
add
sub
mov
adc
inc
dec
call
jl
aad
mov
cmp
add
out
loop
pop
pcmpgtb
mov
add
outsl
mov
push
test
stos
addl
test
inc
rcll
cld
test
loope
xchg
mov
jmp
decb
loopne
adc
xor
jo
adc
sub
loopne
add
jp
int3
adc
inc
add
or
cmp
pop
mov
dec
clc
test
inc
mov
sbb
push
nopl
je
adc
dec
pop
xor
lea
mov
add
fs
and
push
jo
dec
xor
and
sub
xor
sub
push
add
inc
or
and
fwait
add
out
data16
mov
jo
je
dec
cmp
add
and
insb
add
mov
xchg
shlb
push
out
push
pop
jb
add
in
mov
clc
test
cltd
les
pop
add
push
xchg
outsl
call
test
push
mov
xor
sbb
mov
sbb
lahf
dec
xor
pop
or
and
cld
cmp
mov
or
xor
inc
insb
jle
call
inc
scas
adc
lcall
pop
movl
enter
cmp
cmp
push
andl
xor
jmp
cli
fdivr
add
inc
mov
je
fisubrs
cld
jns
in
lret
mov
cmp
sub
nop
inc
lea
cld
pop
or
add
inc
adc
sub
lods
sbb
popf
xor
inc
inc
mov
hlt
or
adc
je
adc
nop
mov
fs
cmp
and
test
push
call
decl
sbb
add
inc
movb
testb
sarb
repz
fistl
test
xor
fldenv
in
mov
test
stos
test
call
cli
insb
push
inc
mov
sub
dec
push
inc
in
mov
sbb
mov
rolb
mov
pushf
push
push
adc
adcl
and
or
push
fldl
pop
sbb
test
fs
shl
or
shlb
pop
movsb
ja
jmp
rorb
sub
add
mov
sbb
mov
xor
lret
sub
dec
and
push
jae
mov
lret
cmp
pop
repnz
and
adcl
mov
movsl
mov
fiaddl
add
sub
jb
or
cmp
call
mov
int
outsb
mov
push
xchg
add
pop
loope
hlt
addl
push
dec
sbbb
aas
sub
bound
call
add
stos
mov
or
stos
cmc
data16
add
ljmp
movsb
mov
in
xor
xchg
push
dec
push
aaa
adc
in
je
pop
push
idivb
out
lret
or
jp
je
or
lods
jbe
add
mov
cld
enter
sar
cli
pop
sub
nop
dec
push
cmp
or
pop
jo
lods
cmp
jns
repnz
dec
lea
dec
sarb
mov
mov
adc
add
fs
push
rolb
stos
and
ficoms
and
outsb
sub
xor
inc
mov
test
jl
add
hlt
pop
mov
cmp
add
push
adc
loopne
adc
inc
adcl
ret
pop
xchg
lods
pop
andb
int3
pusha
aaa
mov
add
sarb
ret
inc
lret
fsubrp
xor
add
xor
and
les
dec
or
adc
faddl
pop
and
das
add
andl
arpl
fdivs
test
stc
ret
sub
loop
xchg
sbb
add
test
add
push
out
dec
push
inc
add
sub
and
add
fistpl
add
int3
pop
sub
pop
mov
dec
flds
pushf
cmp
pop
pop
sbb
xchg
bound
or
push
xor
int3
jmp
mov
leave
pop
pop
cmp
fsubrs
in
insb
jl
push
add
loopw
test
sub
mov
lods
scas
ret
rol
shlb
sahf
pop
popa
insl
dec
adc
rcl
lods
xchg
test
mov
mov
movb
mov
push
xor
mov
decl
pop
pop
push
add
rol
pop
movsb
daa
call
lds
pop
and
in
lahf
and
sahf
ret
and
xor
push
shrl
mov
sub
loop
push
jmp
je
push
lret
and
andb
ror
int3
loop
mov
xchg
inc
das
jp
xor
jge
in
push
stos
push
pop
inc
xor
ja
std
lahf
add
jle
adcl
add
xor
add
inc
mov
push
dec
jecxz
dec
lock
lret
pop
hlt
fadd
data16
push
jbe
into
push
sub
int3
adc
or
inc
mov
xlat
movsl
push
inc
jne
xor
or
into
cld
add
sahf
add
push
je
pop
bound
cs
sub
popa
mov
rorb
push
jle
clc
and
cltd
loopne
nop
add
jo
inc
mov
sti
adc
inc
add
idivb
push
jl
rolb
and
inc
add
lock
lret
jmpw
jo
enter
mov
movsb
push
sbb
out
pusha
lock
push
jp
test
test
push
sar
test
inc
inc
gs
push
and
add
fidivrl
clc
cwtl
pop
sahf
jecxz
pop
rorb
pop
sti
rorb
mov
cmp
outsl
inc
dec
dec
shl
xor
es
out
mov
jmp
and
sbb
inc
roll
xchg
dec
rcll
sti
mov
add
es
sbb
aam
inc
enter
in
mov
jae
enter
mov
andl
push
cld
mov
insl
out
adc
sub
fsts
and
pop
outsl
xor
adc
xchg
sbb
mov
pop
test
sbb
pop
mov
jp
je
ret
data16
call
ret
pop
inc
cmp
push
sub
ret
fbld
or
testl
pop
push
push
or
sub
mov
decl
aas
test
inc
data16
jb
loope
loopne
jmp
adc
jo
mov
mov
adc
mov
jecxz
dec
push
xor
subl
test
mov
in
cs
jmp
ds
lcall
or
jo
add
in
cmp
sbb
mov
aad
rclb
rclb
mov
adc
fsubr
clc
shl
call
xor
ret
iret
inc
hlt
decl
mov
pop
sub
inc
inc
scas
xchg
adc
mov
or
mov
movsl
popf
sub
clc
movsb
jg
cli
dec
inc
cmp
hlt
int3
pop
xor
aas
lret
mov
sub
inc
add
mov
lea
mov
rolb
sub
int3
subl
je
ljmp
push
jle
mov
pop
xor
daa
hlt
fsub
imul
pop
in
push
mov
xor
mov
mov
sbb
les
mov
cmp
popf
xchg
adc
adc
aaa
lock
add
imul
inc
pop
es
js
ss
scas
mov
aas
pushf
cmp
decb
aas
push
outsb
mov
push
pop
insb
cld
cmp
std
data16
xor
jle
mov
inc
dec
and
add
scas
mov
sub
lcall
imul
rolb
movsb
fistpl
fs
xor
loopne
jmp
je
push
and
idivb
dec
std
movsl
das
pop
inc
fld
ljmp
mov
aas
inc
push
adc
shlb
xchg
fwait
mov
and
mov
mov
aaa
data16
push
ds
sub
insb
push
aam
nop
imul
adc
addb
or
push
jecxz
mov
add
call
add
inc
and
mov
jbe
pop
jo
call
sbb
and
loopne
ds
add
sbb
sbb
shlb
je
call
inc
add
hlt
inc
sahf
or
mov
clc
outsl
ds
mov
rorb
xor
mov
sbb
mov
jne
daa
std
je
cs
pop
push
or
sbb
aas
mov
shl
incl
ret
negl
push
cmp
dec
add
xor
leave
add
pop
fcmovne
cltd
add
lea
sbb
jecxz
dec
fsubl
mov
xor
add
jae
std
lea
enter
movsb
arpl
add
stos
push
push
cmpsb
inc
cld
movsb
xor
mov
xchg
shrb
inc
test
int3
test
gs
je
aad
aam
or
pop
or
inc
pusha
adc
inc
pop
mov
sti
jnp
lds
adc
cmpsb
push
add
addr16
bound
pop
jno
testb
cmp
std
inc
test
mov
or
sub
pushf
jo
dec
gs
xor
incb
add
push
dec
xor
pop
clc
add
inc
cmp
xor
xorl
mov
mov
repz
fiadds
lock
hlt
jmp
push
xchg
divb
call
cmc
das
rclb
xor
push
mov
mov
or
clc
sarb
les
mov
popa
push
cmp
iret
sbb
xor
lret
push
rorb
mov
jp
pop
push
adc
add
shl
dec
aad
in
jge
insl
mov
lea
sbb
enter
dec
pusha
inc
and
jp
pop
in
dec
xor
loopne
mov
enter
inc
sbb
push
and
pop
and
mov
enter
xor
test
js
daa
sub
jp
ret
pop
add
lods
fmull
fsubr
mov
sub
lret
mov
loope
fidivl
pop
shll
scas
xlat
gs
cmc
in
cmp
mov
loopne
pop
test
adc
push
push
daa
pop
test
pop
in
cmp
or
loope
cmpsb
xor
and
cs
xchg
mov
cmp
and
inc
in
mov
cmp
cmp
inc
ljmp
lret
sbb
clc
xor
add
call
dec
fucomip
push
cld
adc
ljmp
add
sbb
mov
jmp
xor
inc
imul
jge
push
sbb
inc
sbb
push
xchg
or
test
data16
add
push
push
bound
adc
jo
cs
add
pushl
inc
mov
dec
int3
shl
mov
jne
pushl
jbe
imul
aaa
mov
jo
sub
mov
ja
xchg
push
pop
lods
add
std
add
fldl
sbb
jmp
dec
inc
pop
in
jg
popa
cmp
or
push
les
pop
push
pushf
push
inc
mov
cmp
xchg
add
cs
mov
lods
push
rclb
iret
shl
mov
or
mov
dec
mov
cld
je
mov
shll
or
ss
fstpl
push
stos
push
dec
and
test
cmp
mov
mov
mov
cmp
ret
push
mov
popa
mov
fstpl
push
sarl
xchg
icebp
add
aam
mov
mov
pop
scas
push
insb
ret
mov
mov
ljmp
popa
or
mov
dec
insb
cmp
sub
and
add
inc
add
or
mov
push
inc
fmuls
call
loop
rorl
adc
ficompl
cmp
es
shrl
cmp
push
insb
pop
je
jmp
jo
add
call
test
mov
lcall
mov
jmp
and
add
enter
add
cld
adc
mov
push
pop
adc
fdivrp
mov
cmp
lods
and
movsb
aam
cmp
loope
adc
int3
inc
mov
or
test
and
les
mov
es
stc
shrb
or
jl
xor
test
lock
xor
xchg
mov
stos
out
stos
and
test
jmp
push
clc
rol
movsl
out
pop
mov
push
in
add
add
sbb
inc
hlt
mov
aas
mov
je
adc
enter
fimull
inc
xor
lock
lea
and
call
push
push
and
add
bound
mov
ja
and
mov
dec
pop
mov
cld
cmp
loope
inc
inc
dec
testl
xor
arpl
in
mov
push
mov
or
pop
jmp
xor
insl
jmp
mov
test
mov
mov
add
cmpb
and
push
in
xchg
inc
test
shl
sub
in
add
xchg
mov
inc
ret
inc
or
addl
loopne
jbe
loop
in
inc
sub
adc
jbe
adc
inc
or
sub
push
incl
ljmp
adc
adc
rcl
jl
push
call
push
enter
bound
nop
icebp
add
adc
and
push
adc
inc
push
call
fdiv
repnz
jp
add
fists
loope
sbb
push
lret
push
or
mov
mov
and
jle
cmp
in
mov
jg
lock
je
inc
jo
lods
xor
add
sbb
ret
cli
push
popa
popf
fs
and
push
sar
jg
dec
in
test
call
mov
mov
xor
fcmovnu
inc
test
adc
lea
mov
cmp
imul
rcrb
cmp
and
insb
mov
inc
call
loop
in
hlt
add
mov
stos
mov
ret
mov
rolb
push
cmpsl
jno
in
out
or
enter
out
xor
sub
and
inc
cld
lock
bound
aas
or
push
pop
shrb
pusha
sbb
cmp
mov
cmpl
pop
pop
cmp
rolb
cmp
call
mov
jne
shrb
nop
dec
mov
ret
shrl
jp
adc
add
test
cmpsb
rclb
xor
nop
inc
insl
mov
add
mov
dec
fimuls
jns
outsb
and
push
cld
test
popf
mov
divb
mov
jl
int3
mov
pop
call
mov
adc
fsubr
xor
jmp
orb
stos
into
xor
xor
loop
pop
fdivs
or
call
std
mov
xor
and
jns
inc
test
push
aaa
cmp
data16
sbb
lret
cs
fildl
test
push
add
mov
sbb
sub
mov
add
rclb
jl
pop
push
call
cmc
mov
cmp
ljmp
mov
mov
int3
mov
jne
or
in
add
jmp
cld
dec
push
fcmovbe
jne
test
cltd
test
cld
push
sbb
int3
idiv
mov
adc
mov
and
packssdw
and
test
lcall
adc
or
ret
push
add
outsl
rcrl
pusha
je
mov
push
mov
dec
dec
std
inc
adcl
add
hlt
mov
mov
adc
es
hlt
mov
std
pop
mov
push
loopne
cmp
lret
add
inc
mov
jl
dec
mov
push
mov
jg
jmp
ret
xor
push
push
int3
xor
call
jle
shrl
stc
ficompl
cld
mov
inc
add
cmp
cmp
orl
cld
adc
inc
shlb
mov
sub
incb
cld
cmp
xor
pusha
jl
cld
xor
push
dec
push
inc
shrl
call
inc
push
scas
out
push
pop
fimull
mov
insb
test
imul
add
incl
and
div
add
clc
adc
add
outsb
push
pop
xor
ret
inc
es
mov
push
pop
cs
loope
les
pushf
mov
xchg
mov
ret
rorb
andl
cwtl
mov
pop
inc
inc
cwtl
add
mov
fildl
sub
mov
mov
pop
fildl
std
in
dec
in
jmp
inc
rclb
inc
xor
shr
movsl
mov
dec
xadd
filds
stos
xor
lods
add
inc
mov
mov
jmp
hlt
in
adc
push
fiaddl
jnp
shr
mov
or
mov
pushf
insb
push
add
add
or
shrb
pop
imul
mov
push
das
retw
mov
cmp
xchg
fisubrs
mul
dec
dec
test
std
filds
dec
ret
clc
mov
clc
add
in
push
jbe
dec
incl
dec
xchg
xchg
jl
jmp
orl
rorb
fs
outsb
dec
rolb
and
jl
jge
jl
fstpt
gs
bound
xlat
lcall
outsl
pop
sbb
jp
call
lret
ret
lds
push
xchg
inc
je
mov
ljmp
fsubs
adc
jne
jne
adc
data16
dec
jmp
jne
loopne
cmp
inc
cli
neg
sbb
mov
je
out
dec
je
call
les
cmp
scas
bound
xchg
movsb
sbb
xlat
push
loopne
inc
and
shll
fsubrl
mov
push
es
xor
or
hlt
mov
push
pop
enter
mov
sub
xor
inc
jecxz
fucomip
hlt
push
jns
in
ljmp
addl
ret
add
cwtl
xchg
je
mov
subl
fistpl
cmp
aaa
inc
fistpl
dec
mov
push
inc
jbe
push
pop
mov
push
add
test
fwait
xor
fwait
sbb
mov
loop
inc
push
loop
aaa
into
push
push
jle
pop
idivl
pop
and
inc
aam
idiv
sbb
inc
cli
mov
out
add
xor
cmpsb
push
in
add
adc
sub
cmp
call
shll
es
bound
call
xchg
push
lahf
add
in
jno
popa
outsb
icebp
out
les
mov
repz
add
adc
jb
or
inc
jp
orl
inc
add
inc
or
pop
pop
and
inc
les
cmp
cmp
lret
lock
or
fsubrs
inc
mov
insl
mov
and
les
mov
add
adcl
mov
mov
inc
add
or
inc
pop
and
outsl
cmc
pop
dec
inc
or
mov
push
and
fisubrl
sbb
push
push
out
loopne
sub
in
inc
adc
inc
cld
stc
pop
fs
inc
pushl
pushf
inc
xchg
mov
rorb
test
les
stos
addl
mov
orl
jne
ret
sbb
mov
fnstcw
shlb
popa
pop
mov
inc
pop
xor
gs
jmp
mov
mov
and
std
xchg
or
inc
push
dec
xor
dec
cmpsb
ja
sbb
outsl
pusha
add
adc
icebp
leave
push
sub
test
loop
ficoms
scas
push
adc
dec
pop
test
shll
cmp
sahf
xor
in
mov
fimuls
test
ret
stos
inc
ljmp
rclb
subb
sarb
xor
test
add
push
dec
sbb
call
mov
addl
pop
push
push
int3
add
adc
int
xor
pop
std
add
lock
fisttpll
push
mov
stos
sbb
aas
lea
sub
ret
inc
xchg
lock
clc
test
orl
or
adc
jl
jb
or
and
lahf
push
decb
mov
add
dec
sub
popa
adc
sub
or
or
dec
push
mov
gs
sub
jmp
call
or
jl
inc
add
inc
imul
lock
sub
cmp
mov
adc
sahf
loop
cmp
jno
inc
in
andl
xchg
adc
push
xor
int3
mov
lahf
call
lock
enter
addb
sarl
je
jmp
fidivs
fcoms
push
mov
inc
decl
push
fsubr
nop
insb
nop
add
mov
imul
cmp
push
sub
ss
jg
add
mov
ret
ret
popa
test
int3
repz
lods
mov
push
clc
xor
repnz
dec
cmp
test
push
aaa
pop
cmp
dec
mov
mov
jo
add
mov
add
dec
add
dec
pop
xor
shlb
and
jl
cmp
cli
lcall
outsl
test
pop
add
inc
push
or
and
adcl
fnsave
push
test
cmp
and
xor
cmp
movsl
mov
das
clc
loopne
stos
push
mov
mov
lds
push
sub
cli
pop
pusha
mov
lret
dec
movsbl
aaa
movsl
int
mov
mov
cs
fists
or
cs
hlt
stos
xor
jl
ljmp
inc
int3
xor
cmp
inc
cmp
int
cmpsb
shlb
repz
mov
scas
je
out
pop
cs
clc
adc
enter
or
fwait
xor
add
insl
ljmp
or
jb
sbb
lods
or
std
or
stos
stc
add
unpcklps
test
imulb
in
and
mov
mov
sub
adc
push
sbb
xor
ret
pop
lods
push
mov
xor
insb
mov
or
jb
jbe
clc
loopne
add
pop
mov
popf
mov
cmp
fdivl
inc
or
mov
hlt
shld
sbb
and
jbe
dec
sarl
mov
adc
pop
test
pop
sarb
jno
mov
inc
adc
xchg
rclb
lcall
sbb
jp
je
mov
enter
popf
xchg
loop
adc
ljmp
mov
adc
cmc
xchg
mov
ds
dec
stos
loope
rcrl
push
push
or
cli
jle
pop
mov
aam
push
xor
xor
pop
mov
loopne
mov
nop
scas
hlt
or
in
inc
push
cli
sub
std
inc
add
outsl
leave
push
stos
lcall
test
pop
add
cmpl
add
push
push
pop
and
decl
mov
icebp
jnp
push
addb
enter
jmp
ret
cmp
dec
add
data16
lahf
inc
mov
dec
xchg
hlt
push
sbb
mov
sub
cs
test
xor
jnp
or
je
pop
cmpsb
lret
add
pusha
insl
outsl
sbb
jp
test
jbe
mov
les
sahf
clc
mov
testb
mov
in
mov
rolb
add
jge
les
rorl
mov
rcrl
call
js,pn
test
and
les
jp
mov
cs
push
enter
mov
mov
cli
sbb
enter
aaa
loope
cli
push
push
and
cld
in
std
mov
jae
lock
fisttpl
inc
inc
mov
sub
mov
push
pusha
dec
push
mov
dec
out
movsl
add
je
mov
adc
sbb
xor
xchg
andl
movsb
je
mov
add
scas
jp
jno
lret
add
je
jmp
xor
mov
and
movsb
push
jne
mov
ficoml
pop
in
inc
cmp
mov
js
les
pushf
pop
add
int
and
insb
add
mov
mov
dec
add
add
cld
push
nop
les
push
enter
push
hlt
aas
jne
dec
dec
rorb
and
add
fs
mov
rorl
out
add
loopne
rorb
add
and
add
adc
sar
pop
hlt
nop
adc
ja
inc
add
pop
lret
lock
or
and
or
je
pop
pop
adc
adc
fidivl
les
mov
imul
adc
add
jecxz
pop
ret
decb
xlat
rorb
cmp
add
mov
or
mov
test
mov
fistl
cld
shlb
movsb
lret
mov
sub
xor
mov
sub
fsubs
es
int
imul
outsl
xchg
add
push
lretw
pop
inc
clc
insl
xor
add
mov
or
mov
xor
cld
mov
add
mov
pop
and
sbb
pop
in
pop
inc
dec
sbb
incl
sti
loopne
fbld
test
cld
inc
insl
hlt
jo
lds
jl
dec
aam
or
xchg
sarb
fs
xor
add
xchg
clc
xlat
es
mov
xorl
mov
xor
fcmovnbe
mov
std
jb
decl
fwait
movsl
lods
popf
gs
cmp
es
cmp
fs
fs
add
outsb
push
stos
std
rcll
test
test
fildll
int3
cwtl
je
sbb
push
mov
sub
cmp
pop
arpl
or
enter
and
dec
stos
adc
add
mov
inc
and
inc
or
push
cmp
add
jbe
jecxz
hlt
inc
pop
jp
bound
mov
push
scas
call
test
ss
ljmp
int3
jge
xor
rclb
dec
pop
test
jb
or
popa
and
test
out
ret
pop
insb
inc
cmc
jmp
test
mov
negl
mov
mov
mov
pop
cmp
mov
jmp
mov
call
jae
mov
mov
add
inc
pop
imul
jne
roll
jmp
and
and
shlb
cmpsl
clc
xchg
icebp
inc
ret
mov
sbb
hlt
add
add
jb
out
pop
adc
std
xor
and
add
inc
push
loopne
pop
insb
ss
dec
sti
je
push
or
inc
push
lock
sbb
xchg
loope
adc
push
jge
mov
dec
call
insl
sbb
cmp
mov
push
inc
movsb
jo
jle
push
loopne
cld
call
outsl
or
pop
and
inc
lock
fwait
pop
sbbl
sub
ds
imul
out
dec
dec
into
push
nop
sbbb
ret
push
or
push
int3
jns
push
inc
sbbl
pop
inc
xor
xchg
cmp
mov
add
ljmp
test
loopne
incl
push
jmp
jb
and
push
lcall
sub
int3
leave
mov
pop
xchg
add
pop
mov
pop
lret
push
push
xchg
mov
adc
outsl
incl
mov
andb
je
clc
xchg
into
inc
sti
mov
sbb
or
js
repnz
stos
sub
push
je
pop
xor
outsl
xchg
jns
stos
mov
orb
or
pop
int
push
jae
xchg
cmp
in
inc
popf
push
push
ficomps
cmp
cld
mov
push
push
push
stos
rorb
add
mov
adc
sbb
cmp
mov
xchg
mov
int
orb
mov
mov
push
dec
push
and
pop
test
or
xor
fs
test
int3
add
xchg
cs
push
call
mov
dec
je
jbe
pop
jns
repnz
aaa
je
ds
mov
popa
test
xor
add
xor
push
std
and
outsb
outsb
mov
js
movsb
cs
inc
or
xchg
lcall
inc
inc
mov
rorl
jle
ss
and
inc
sub
inc
ja
jge
xor
adc
push
shlb
sub
inc
sub
dec
out
push
dec
inc
inc
lds
pop
xor
shlb
cli
add
stos
leave
dec
into
mov
or
mov
fs
lea
mov
inc
js
dec
cwtl
adc
mov
lods
mov
mov
pop
lods
lea
loopne
ljmp
or
es
ret
fisubrs
add
es
data16
mov
pop
cmpsb
mov
mov
mov
scas
push
mov
insb
nop
push
add
mov
xor
inc
into
inc
jp
fsubs
adc
fldl
rolb
xor
test
dec
push
mov
mov
shlb
rcrb
loopne
jp
outsl
or
mov
mov
hlt
inc
cmpsb
loopne
or
data16
lcall
push
insb
push
inc
mov
push
in
sub
xor
aas
cmp
aam
movsb
inc
xor
mov
add
add
enter
leave
test
and
cld
ret
sbb
sti
mov
inc
dec
jge
loope
push
inc
pop
fs
cld
jne
add
xor
inc
dec
mov
pop
popa
adc
cmp
pop
aam
push
inc
mov
jge
adc
fs
addb
std
jg
mov
test
cmp
in
push
loopne
lret
mov
push
mov
jo
xchg
adc
incl
test
pusha
roll
jo
pushw
cmp
dec
pop
and
insl
popf
aam
fistl
ss
fwait
fs
and
inc
rclb
cmp
inc
jmp
jecxz
xor
decl
push
shrl
add
sub
lock
adc
mov
scas
addb
mov
xchg
ja
lea
adc
pop
mov
xchg
push
clc
xor
stos
fidivl
dec
dec
data16
xchg
xchg
jo
enter
mov
push
dec
mov
add
lea
or
sbb
inc
cmp
add
mov
pop
dec
pop
sarb
inc
int3
sbb
in
rolb
push
adc
loop
or
dec
add
adc
cmp
mov
adc
cmp
or
cs
ret
pop
add
cwtl
lea
ds
loopne
cmp
lods
cmp
scas
jne
push
rorb
rol
push
ss
out
out
test
pop
push
mov
hlt
or
inc
dec
inc
rcll
nop
mov
mov
ja
stc
add
inc
into
dec
std
sbb
lea
sbb
incl
arpl
cmp
inc
and
xor
or
std
rcrb
hlt
subl
or
call
lods
pop
sub
fsubr
sub
and
jl
sub
or
icebp
test
jne
mov
xchg
add
insb
je
decl
ror
add
xor
jg
pop
jle
add
es
push
call
loope
jg
out
mov
add
dec
or
add
sbb
add
add
rcr
jmp
icebp
jg
xor
cmpps
clc
mov
and
insb
pop
lret
mov
inc
repnz
fisubrl
cmp
adc
or
jmp
rcl
inc
or
leave
cmp
cmp
xor
mov
xchg
aad
mov
mov
add
lock
loopne
sbb
cmp
shll
lret
xor
push
mov
pusha
test
xor
jl
sub
pop
out
mov
sub
jbe
ret
or
push
push
into
cmpsl
mov
in
test
add
inc
mov
xchg
sahf
sbb
fs
call
xchg
sbb
dec
jne
lcall
call
sub
outsl
add
jle
sbb
adc
jmp
inc
test
outsb
es
dec
push
ret
xchg
int3
rolb
inc
push
fcomp
mov
in
lods
je
shlb
add
out
loopne
or
ljmp
imul
mov
mov
ret
mov
adc
adc
cwtl
jb,pt
add
adc
cli
inc
loopne
mov
lea
pop
sub
add
xchg
call
jne
clc
lea
in
mov
adc
imul
imul
stos
or
add
pop
test
or
jmp
into
clc
mov
sub
xor
push
ret
in
notb
sbbl
mov
mov
mov
mov
pop
loope
push
es
test
or
mov
add
add
movsb
in
push
mov
enter
aas
adc
sbb
outsb
mov
or
ret
add
mov
dec
push
inc
mov
sahf
mov
inc
mov
cli
mov
stos
aas
jecxz
push
pop
push
mov
or
jl
test
mov
mov
cld
fiadds
mov
orb
movsb
cmp
add
gs
call
fisubl
mov
arpl
fstl
int3
adc
adc
jmp
loop
pusha
insl
xchg
mov
leave
push
or
mov
sub
or
pop
sbb
stos
test
and
dec
mov
cmp
jnp
push
adc
insb
jle
int
cld
les
dec
aas
shr
jne
test
push
ret
adc
add
cmp
addr16
sbb
dec
test
call
icebp
mov
jecxz
ror
sbb
decb
testb
aam
push
int3
mov
and
push
push
push
or
jbe
lcall
call
xor
and
add
push
mov
xlat
add
rcrl
or
test
stos
adc
clc
pop
jne
adc
mov
rcrb
and
lea
test
call
mov
xorb
jo
cmpsl
inc
add
leave
cmp
aam
xchg
js
adc
fwait
xor
push
cmp
sub
jne
xor
mov
mov
and
pushf
and
roll
pop
sahf
test
xor
jecxz,pn
or
mov
lcall
fimull
rcl
mov
daa
jo
xchg
testb
push
push
adc
fcomps
jg
out
mov
loope
sbb
icebp
or
sahf
push
sub
jmp
out
loopne
test
pop
cmp
xchg
aad
pop
push
mov
xchg
dec
cld
movsb
cmc
lea
shlb
loopne
cld
pushl
rclb
rolb
dec
nop
mov
aaa
jecxz
mov
add
insb
mov
sbb
les
add
addb
add
mov
sub
outsl
or
pop
push
sbb
inc
add
sbb
les
ret
jo
or
fnsave
add
cwtl
and
inc
std
setne
into
and
jne
rorl
push
push
or
insb
dec
dec
test
mov
shl
ss
call
imul
sub
fcoms
jl
out
ret
aam
lods
and
fimuls
fdivrl
push
lock
pop
mov
cwtl
add
pop
adc
pop
loopne
lock
cmp
jecxz
jb
aas
push
andb
and
pop
test
mov
dec
add
lea
and
adc
pop
add
hlt
mov
fucomp
push
or
scas
add
testb
dec
mov
ljmp
repnz
test
pusha
xor
adc
test
push
add
and
cmp
divps
push
add
adc
push
or
aad
test
ds
or
xchg
or
sbb
in
push
aam
ficomps
outsl
cli
pop
pushf
pop
push
stc
ret
lds
push
mov
add
fcmovb
mov
rolb
push
pusha
out
mov
icebp
lock
push
jmp
push
lret
adc
cs
xchg
ljmp
sti
mov
sub
pop
push
addr16
mov
push
push
cli
adc
shrl
inc
cmp
push
adc
pop
xor
std
or
lock
mov
inc
ret
sbb
lods
sub
rolb
or
ljmp
fstpt
or
lea
jnp
call
test
ss
cld
inc
jne
mov
insb
jb
cmp
mov
jne
pop
inc
xchg
push
cmpsb
xchg
ret
mov
push
adc
jb
add
jg
repz
lea
lods
cmpsb
incl
dec
xor
mov
aam
stos
outsb
pop
mov
inc
aas
mov
add
ljmp
and
push
add
or
xor
call
sub
fcmovb
dec
push
sub
inc
jns
sbb
xchg
in
push
or
xchg
mov
jb
mov
add
aaa
add
add
enter
test
push
push
push
je
mov
push
ljmp
fdivr
or
sar
and
dec
cmp
dec
xchg
fdivs
jne
and
add
inc
sbb
sbb
add
bound
ljmp
xabort
shlb
inc
addl
jb
mov
mulb
lock
push
inc
mov
adc
sbb
inc
ds
xor
mov
mov
xchg
gs
movsb
int3
fsubrs
outsb
adc
mov
mov
or
cmp
sbb
add
sbb
cmp
push
mov
and
mov
sti
mov
push
sub
mov
jbe
idivb
sbb
mov
mov
mov
test
xchg
gs
loop
jne
mov
xor
gs
jmp
push
roll
les
lods
test
jmp
jge
jno
test
lea
in
fmull
inc
mov
mov
std
fsub
notb
xchg
les
adc
mov
add
outsb
add
pop
xor
fldt
jle
cld
pop
jbe
cli
fsubrs
and
push
sbb
jns
test
pop
xor
insb
aad
lock
rolb
push
call
aaa
add
xchg
mov
popf
mov
cwtl
pop
psubb
sub
mov
je
pop
pop
test
adc
lahf
mov
or
xlat
call
jne
xor
dec
sub
sarl
pop
pop
jge
es
add
andnps
loop
aaa
sbb
push
add
mov
cmp
jl
rol
lret
push
add
adc
jne
test
js
inc
js
sub
adc
call
xchg
mov
pop
ret
rcll
call
cmp
call
add
pusha
mov
or
rolb
adc
and
inc
test
push
sarb
push
lock
rorb
pop
or
cli
inc
gs
cmp
mov
xchg
pop
out
push
ds
cmc
and
mov
inc
xor
sahf
mov
add
icebp
enter
cli
mov
sbb
push
inc
mov
int
sub
pusha
out
clc
push
add
inc
add
out
mov
cmp
rclb
inc
nop
cmp
cmpsb
lcall
js
mov
bound
lock
cmp
cld
loopne
push
sarb
incl
mov
in
inc
jg
add
movsw
mov
jecxz
aaa
fsubrs
insl
xchg
jecxz
shr
js
cld
fisttps
pop
orl
std
add
dec
cmp
and
pop
js
lock
ret
clc
addb
insb
movb
mov
add
sbb
stc
pmaxub
cwtl
scas
pop
pusha
adc
stos
add
in
ret
xchg
popf
mov
je
or
clc
xchg
and
outsb
rol
add
cmpb
inc
jecxz
inc
inc
or
mov
mov
out
sbb
loopne
jne
test
or
push
sbb
mov
push
jle
push
std
lea
andl
scas
inc
xchg
add
jae
sar
fistl
xchg
push
roll
xor
inc
push
push
xor
faddl
push
fs
push
or
inc
xor
dec
outsb
out
push
inc
mov
adc
mov
mov
es
push
cs
cmp
pop
icebp
adc
repz
push
and
inc
adcb
mov
sub
clc
xor
cmp
push
jecxz
xor
mov
mov
jb
inc
inc
test
enter
ljmp
push
lea
mov
rol
out
adc
popa
call
push
cmp
arpl
repz
sti
mov
cmc
mov
mov
xor
inc
push
fdivrs
mov
js
mov
adc
jle
in
xor
pusha
xorb
sbb
sub
push
mov
jl
call
mov
mov
adc
and
fistps
mov
pop
hlt
and
or
push
lea
inc
rorl
andb
pop
loop
int3
inc
jl
flds
outsb
rclb
sub
jo
or
mov
jle
mov
inc
or
dec
xchg
jbe
inc
cmp
fs
or
test
mov
push
mov
xor
add
jl
pop
outsl
mov
test
xchg
call
add
lret
pop
shr
mov
add
cld
mov
sbb
jb
fisubrs
sbb
enter
mov
mov
sub
call
mov
add
jo
inc
adc
test
imul
rolb
push
jmp
std
push
das
mov
cmp
lods
dec
jle
test
popa
sbb
pop
into
adc
inc
or
mov
std
roll
mov
pop
nop
push
mov
jle
push
or
icebp
or
nop
cmpl
dec
add
test
add
adc
data16
mov
jae
call
xchg
sbb
or
dec
sub
in
loopne
xor
popf
mov
roll
call
xchg
faddl
xor
lea
addb
aas
insb
aas
cli
pushf
incb
imul
inc
sahf
test
movsb
or
add
call
push
je
xor
pop
mov
je
add
adc
rorl
sbb
popa
xchg
sbbl
xor
ret
sbb
mov
leave
loop
jle
nop
stos
sub
loopne
cmpl
sub
inc
add
mov
cld
fdivrl
lea
adc
cmp
popa
lds
ljmp
rorb
pop
inc
lock
aas
xor
les
enter
mov
je
call
and
adc
jge
out
inc
inc
out
push
lods
fiaddl
mov
pusha
and
adc
test
cli
xchg
test
cmp
out
mov
test
xchg
xor
ret
bound
push
lret
fstl
mov
insb
lock
dec
test
js
add
sti
jle
rorl
jnp
dec
pop
jmp
jp
pop
call
or
push
jb
aam
mov
push
rorb
incl
pop
adc
cs
push
mov
mov
push
xor
jl
into
sbb
mov
pop
cli
adc
fdivrs
sahf
cmp
je
ss
pushf
call
les
fldenv
push
xchg
adc
call
mov
lea
mov
fs
adc
xlat
ret
lea
sbb
add
cltd
in
repnz
cs
sub
adc
js
add
jne
jb
jb
cmp
pop
adc
mov
xor
push
mov
aas
or
push
hlt
push
dec
and
or
int3
add
mov
out
push
call
mov
loope
cli
jl
int3
or
dec
xchg
mov
test
shlb
dec
pop
pop
enter
or
ljmp
jbe
movsl
pushl
cmovne
fists
outsb
mov
repz
daa
cld
rclb
adc
push
pushl
je
enter
and
xor
cmpsb
mov
mov
push
mov
or
adc
pushf
xor
ds
mov
add
and
xlat
add
shrl
push
inc
pusha
or
jne
clc
hlt
add
pop
inc
push
in
push
xchg
cmp
mov
xchg
push
sbb
xchg
push
jnp
pop
cmpsb
sub
in
pushw
xchg
loop
out
loopne
lds
mov
add
rcrb
lea
or
mov
out
rorl
cmp
mov
dec
loopne
clc
fmuls
out
xchg
fsts
iret
cmp
add
in
fistl
adc
inc
sub
and
test
fidivrl
sub
mov
imul
in
mov
call
imul
add
push
mov
shlw
nop
xchg
andb
sbbb
adc
push
mov
pushl
xor
orl
ret
je
adc
push
sbb
add
push
push
ja
in
mov
je
aam
add
aam
mov
test
mov
xchg
out
shr
mov
push
cld
test
je
adc
addb
pop
enter
stos
out
sub
imul
pop
cmp
sarb
or
and
inc
push
add
pop
pop
adc
add
add
pop
lods
mov
aas
ljmp
mov
xor
sbb
xchg
ljmp
jb
inc
dec
std
inc
add
adc
call
push
push
int3
shrb
mov
outsb
fmul
mov
mov
push
xor
or
jb
sub
fisubs
je
mov
xor
shrb
inc
push
ret
dec
jge
std
sub
push
sub
jl
jp
sub
jmp
push
dec
add
out
stc
mov
xchg
jg
icebp
xchg
les
imul
std
adc
outsl
pop
rol
add
push
mov
or
add
mov
and
mov
dec
add
adc
adc
test
loopne
sti
subl
mov
jle
adc
imul
imul
lock
xor
inc
pop
in
aam
ficoml
jl
jo
cmp
in
cli
xchg
inc
mov
orb
mov
adc
pop
int3
rclb
popa
pushf
jb
scas
pop
mov
add
ss
aad
pop
xor
lea
cmp
cld
rcl
dec
call
pop
cmp
faddl
xadd
sub
xor
cmp
mov
lcall
jge
mov
adcl
push
xor
dec
ss
push
add
ss
dec
inc
dec
aad
sbb
pop
fcomps
dec
out
inc
pop
adc
inc
jae
xchg
orl
mov
xchg
fmuls
inc
jmp
inc
popa
sti
lds
leave
clc
lock
lock
mov
mov
idiv
xor
jo
sbb
fisubrs
dec
je
nop
scas
nop
xchg
inc
pushf
xchg
lods
rolb
test
out
inc
adc
cmc
jb
add
pop
movl
stc
js
or
mov
or
push
rclb
ficomps
cmp
lds
xor
orps
call
inc
mov
add
aam
sbb
or
push
sbbb
add
cmp
ljmp
fdiv
jne
push
nop
cmp
sti
hlt
fcmovnb
enter
popa
add
iret
or
lock
jle
inc
shll
test
xor
sbb
xor
jp
faddl
pop
repnz
mov
mov
out
adc
inc
xor
or
push
push
test
and
loopne
inc
push
int3
lea
sbb
cmp
push
push
add
sbb
call
jle
int3
movsl
add
and
test
or
mov
xchg
jo
push
test
jmp
sbb
scas
inc
add
fs
fcmovnb
sarb
cli
faddl
xor
push
repnz
dec
or
push
je
adc
adc
sub
rorb
jmp
cmovns
sbb
es
ficoml
addl
push
in
xor
imul
mov
adc
adcb
add
mov
aas
xor
add
xor
lock
imul
xchg
mov
mov
jge
mov
outsl
xchg
xchg
add
jno
inc
rcl
mov
loop
stos
mov
int3
push
inc
sbb
mov
cli
sub
cmp
inc
and
lock
ja
or
testb
sub
test
nop
and
pusha
mov
inc
pop
ret
or
adc
icebp
push
or
cli
test
mov
dec
loopne
xchg
pop
popaw
ret
loop
loope
pop
inc
mov
std
xor
mov
mov
dec
push
ret
test
fs
lock
pushf
test
movsb
sub
xor
mov
push
stc
incl
mov
or
or
mov
adc
loopne
lods
inc
push
data16
push
mov
xor
xchg
jp
cli
or
insb
fnstenv
push
mov
xor
or
loope
mov
fadds
shr
fs
jbe
xor
into
movq
addr16
call
cwtl
aam
inc
icebp
lea
mov
pop
sarb
addb
pushf
clc
mov
outsl
dec
inc
stos
mov
das
jge
push
dec
or
into
gs
addr16
in
cmp
sub
inc
xor
ror
mov
aaa
call
je
push
mov
push
inc
or
aad
test
or
dec
outsl
les
ljmp
in
stc
push
fisubs
loope
xchg
test
mov
daa
or
push
ror
cmp
push
call
or
mov
dec
xchg
je
gs
imul
adc
je
les
daa
ja
add
mov
cld
sbb
fldt
jmp
js
sar
xor
dec
adc
mov
mov
jp
mov
push
or
mov
outsl
jns
or
pop
outsl
out
add
mov
outsl
mov
fbstp
test
xor
inc
xor
jne
add
add
sub
mov
cmpsl
lcall
ror
les
xchg
ret
jle
sbb
sbb
sub
fdivr
mov
call
rcr
pop
out
jmp
pop
mov
and
push
gs
fwait
sbb
fs
mov
adc
jge
or
in
inc
adc
xchg
int3
into
mov
sbb
add
std
xchg
lock
sti
inc
lea
insb
adc
adc
push
sub
inc
leave
inc
movb
inc
mov
mov
jne
aam
icebp
xchg
jmp
adc
mov
adc
in
jae
popa
mov
pushf
clc
mov
jl
subl
and
adcl
test
push
jmp
add
adc
and
test
cmp
and
mov
add
outsl
mov
push
push
arpl
pop
add
dec
dec
dec
or
cmp
nop
sbb
and
xor
int3
push
loope
pop
mov
aam
mov
dec
pop
lods
add
mov
or
and
or
dec
aam
cmc
cmp
shlb
js
xor
xchg
push
xor
je
push
std
sbb
push
push
cltd
sub
cmp
shlb
decl
dec
sub
mov
push
cmp
aaa
subl
or
leave
cli
sbbb
add
sbbl
inc
call
outsb
jo
mov
ljmp
pop
xchg
adc
mov
fs
inc
fsubs
je
aas
adc
mov
sti
mov
mov
jle
dec
ficompl
add
sbb
mov
push
call
dec
jbe
outsb
decb
or
icebp
xlat
clc
mov
std
call
mov
cld
jb
int3
fmull
adc
aad
push
mov
loopne
mov
aam
push
xchg
leave
mov
push
mov
cld
mov
add
out
lea
or
adc
mov
pop
mov
sbb
fs
mov
cmpsb
add
pop
push
test
xchg
ljmp
insb
ret
add
or
xchg
dec
add
and
js
cmp
shlb
mov
mov
pop
js
leave
jne
inc
or
mov
dec
pop
shll
push
inc
push
movsl
mov
mov
lcall
les
mov
jne
adc
mov
imul
shlb
jmp
push
pusha
cmp
outsb
mov
cmc
mov
call
fnsetpm(287
fidivrl
movsb
pop
test
leave
sbb
pop
adc
mov
mov
cld
inc
mov
cmp
incb
cld
notl
loopne
sub
add
add
pop
or
mov
jp
push
cld
jl
incl
adc
jbe
mov
rclb
mov
or
fwait
std
adc
faddl
and
gs
xor
dec
or
sbb
gs
push
aas
shll
hlt
inc
loop
adc
pop
inc
filds
inc
add
pop
adc
mov
cmp
clc
data16
adc
sarb
sub
mov
test
xor
cmp
push
sub
push
ljmp
mov
loopne
cmp
mov
jno
xor
xor
popa
jb
and
push
and
sub
test
mov
sub
es
or
icebp
push
clc
popf
xor
push
int3
jne
xchg
push
test
and
xor
hlt
cmpsl
dec
xchg
ret
dec
into
lods
test
stos
sub
cmc
push
xchg
add
xor
xchg
jle
sub
pusha
sbb
lods
mov
and
inc
stos
movsl
outsl
or
dec
nop
push
inc
add
lods
test
add
sub
or
ds
adc
cmp
sub
jmp
adc
push
iret
sbbb
rcrb
mov
add
cld
xchg
or
push
shlb
add
in
ss
stos
test
add
pop
mov
or
sbb
loopne
jmp
pusha
mov
push
subl
xchg
call
mov
decl
lret
fiadds
inc
je
sbb
stc
add
aaa
ret
cmp
mov
jne
insl
or
fdivl
jl
jne
jbe
add
imul
rorb
popa
inc
je
mov
inc
add
rorb
cmp
cmp
incb
mov
adc
fs
cmp
ret
subb
sahf
push
inc
inc
shufps
mov
fistps
jmp
add
adc
int
jp
mov
jl
push
inc
inc
enter
add
mov
idivb
mov
push
into
addr16
sbb
add
mov
add
lahf
mov
cld
imul
lret
clc
jne
inc
cld
fisubrl
or
into
push
push
rorl
xor
fld
pop
int3
rol
sarb
xchg
loopne
orl
rol
or
add
add
or
divb
popaw
incl
add
dec
jp
enter
clc
push
repz
movsl
dec
ret
test
mov
int3
pop
pop
mov
push
or
xor
push
jo
dec
insl
jmp
dec
xchg
pop
repnz
jne
cld
push
orl
mov
clc
fs
pusha
js
popa
movsb
lcall
push
push
cmp
push
and
subb
or
mov
sub
sub
sbb
inc
ffreep
push
clc
sbb
inc
int
or
mov
rorb
mov
mov
orb
mov
add
es
adc
shlb
cli
cmp
jbe
jecxz
dec
in
outsb
jb
adc
scas
xchg
inc
or
in
adc
pop
jns
cs
and
pop
add
loop
out
int3
sahf
out
lret
clc
orl
or
ret
xor
cmpsb
pop
shlb
or
test
push
add
ds
dec
in
clc
xlat
mov
xchg
xchg
mov
or
jmp
or
mov
inc
stos
inc
imul
inc
andl
pop
add
and
fidivrs
mov
and
ja
mov
mov
add
mov
or
cmc
pop
andb
clc
adc
imul
rclb
mov
inc
pop
add
lods
icebp
jns
loope
mov
mov
subl
mov
fmull
push
bound
inc
dec
mov
ficompl
in
push
xchg
mov
clc
sbb
mov
test
fisubs
xor
mov
idivb
mov
std
jmp
lea
ficomps
pop
pop
stos
fs
mulb
jmp
cmc
mov
pop
stos
add
cmpsb
enter
push
push
sti
loopne
xlat
call
call
add
popf
lods
orl
je
es
pop
inc
in
xchg
movsb
xor
adc
outsb
dec
xchg
mov
popa
push
inc
mov
pop
mov
test
jge
popa
js
mov
ja
jp
incl
sbb
push
push
sarb
xor
adc
add
aaa
sub
or
das
lea
leave
arpl
adc
pop
push
cmp
dec
and
push
jmp
pop
scas
jg
mov
jbe
jge
daa
test
arpl
xchg
js
inc
jge
or
cmp
call
adc
js
push
call
ret
fidivl
inc
aas
cli
aaa
movsl
aaa
cld
cltd
add
xor
test
inc
js
sarb
xchg
jecxz
call
call
call
mov
push
inc
dec
jb
mov
sar
lods
push
mov
stc
adc
test
xor
cmp
test
fs
mov
pop
mov
cmp
jne
push
cmp
xorb
ss
mov
out
adc
int3
add
xchg
adc
icebp
repnz
addr16
adc
cmpsl
pop
add
mov
aad
dec
mov
loopne
and
xchg
and
dec
mov
test
popf
cmp
pushf
adc
mov
add
pop
xchg
lock
mov
in
adc
sub
incl
add
push
inc
dec
add
mov
cs
fcomps
clc
and
outsl
inc
lods
xor
test
cmp
int3
add
inc
mov
mov
inc
pop
mov
ss
jecxz
addr16
pusha
imul
pop
mov
mov
jp
fs
mov
xchg
push
jne
ds
popa
insb
add
inc
mov
or
cmpsb
sub
mov
orl
push
push
pop
icebp
popf
adc
in
aaa
lock
popa
cli
pop
push
jmp
xor
add
jb
mov
mov
arpl
data16
adcl
mov
adc
bound
push
enter
test
rol
std
test
popa
push
sbb
ret
add
insb
jp
xchg
push
pop
test
add
mov
jmp
data16
enter
pop
test
hlt
mov
pop
and
inc
push
in
xchg
hlt
push
sbb
or
test
adc
sbb
adc
lock
mov
mov
inc
cmp
cld
mov
pop
xchg
sub
add
xchg
clc
into
test
add
push
sub
push
mov
loop
test
ret
addb
dec
into
push
or
inc
fadds
xor
push
push
jl
cmp
sub
push
cmp
add
cmpsb
or
and
outsl
sbb
es
cld
pop
fiaddl
mov
clc
pop
scas
les
xor
mov
enter
scas
dec
test
inc
call
add
xchg
call
add
out
imul
or
stos
or
push
jo
adc
jae
cmpl
jmp
faddl
mov
mov
push
lret
in
add
mov
jne
negb
mov
add
mov
inc
add
idivb
lcall
fwait
sub
jbe
lods
lar
add
jb
add
cmp
sbb
dec
std
and
mov
mov
call
les
sarb
out
push
ja
bound
dec
adc
push
and
mov
fiaddl
ret
pop
dec
pop
add
mov
add
loopne
fiaddl
mov
mov
out
out
add
push
push
cmc
lds
loopne
movsb
add
test
mov
adc
into
push
ljmp
sbb
or
add
xor
add
gs
cmpsb
xchg
subl
adc
sarb
clc
ret
hlt
ja
cmp
call
pop
pop
and
data16
add
sti
sub
js
mov
jp
fildl
adc
in
in
cli
sub
in
push
popf
add
push
push
fidivrl
adc
aaa
cmp
test
mov
es
cmp
sbb
jmp
sub
cli
or
push
pushf
aas
or
mov
or
sbbb
loopne
decb
daa
pop
lahf
xchg
pop
and
in
mov
out
fimull
push
lock
sarb
call
cmp
push
xchg
adc
xor
or
xlat
xchg
add
lret
mov
lahf
lret
movsb
test
shll
imul
or
mov
push
xorb
adc
rcrb
inc
push
xorl
add
sbbb
or
cmp
dec
sbb
pushf
add
jb
fisubl
lods
push
mov
cli
ljmp
push
test
call
jne
mov
cld
add
test
lods
hlt
and
inc
rcl
in
xchg
orl
dec
test
mov
loopne
jo
loope
push
inc
jecxz
sub
rcl
jl
mov
cmp
add
push
xor
aam
mov
and
fwait
jno
mov
jge
or
jecxz
andb
mov
cmp
mov
insb
add
lret
jae
int3
pop
clc
adc
fsubs
inc
enter
pop
aas
inc
int3
inc
xor
lock
jp
push
mov
das
pop
lret
sub
add
movsl
inc
popa
and
int
cmp
fcoml
xorb
or
shll
ljmp
ds
enter
adc
sbb
sub
jmp
adc
rcr
xor
jne
push
or
sub
rorb
or
inc
mov
inc
addl
mov
jp
roll
pushf
movsb
add
xchg
xlat
pop
push
inc
adc
xchg
enter
push
lods
inc
cli
dec
mov
push
mov
mov
adcb
pop
rcrb
jb
and
sar
addb
data16
inc
loop
sbb
shlb
and
aaa
xor
inc
or
adc
jl
nop
add
sti
mov
ret
leave
incl
ret
push
cmp
insb
ljmp
icebp
ljmp
aaa
lea
sub
call
ret
pop
shl
movsb
pop
dec
imul
mov
test
mov
test
push
cwtl
cli
mov
ds
popl
movsl
insb
enter
xchg
cmpl
lret
notb
sbb
push
push
push
sbbb
mov
test
clc
call
dec
fsubl
enter
dec
call
mov
mov
or
xchg
lret
mov
fadd
outsl
pop
loopne
pop
mov
push
mov
or
add
mov
cmp
aas
adc
les
adc
scas
decl
rol
dec
mov
pop
or
jb
xlat
dec
or
mov
adc
hlt
stos
mov
int
ret
adc
test
xor
sub
clc
adc
fdivl
testb
mov
mov
dec
jmp
lret
popa
sbb
add
jge
push
and
xchg
cmp
push
mov
or
roll
push
fimull
movb
enter
push
xor
test
mov
inc
movb
and
call
je
fucomip
mov
inc
adc
xor
inc
fs
mov
movsb
stos
pop
hlt
xchg
lock
pop
pop
push
movsb
je
push
decl
dec
call
test
enter
aas
pop
add
add
loopne
push
mov
int3
es
iret
test
add
out
and
aas
jo
test
push
divb
jl
or
jo
dec
in
adc
pop
jp
dec
je
nop
sub
std
push
cld
push
xchg
mov
pop
pop
push
xor
test
jb
aas
cs
dec
dec
sbb
xchg
js
mov
stos
movsb
call
add
pop
stc
lock
add
add
popa
sarl
push
dec
lahf
rorb
bswap
lods
je
push
loopne
inc
cli
dec
imul
adc
je
pop
adc
js
adc
loope
out
add
jo
push
cmp
lcall
adc
lret
iret
pop
cli
test
addb
rorb
sti
aas
cmpsl
xor
sub
xor
adc
or
andl
sbb
sbb
add
push
add
pop
or
outsl
popa
cmp
jns
outsb
jg
in
leave
inc
lds
gs
mov
push
push
or
fnstsw
ds
sub
add
iret
cld
ret
testb
inc
in
stos
call
int3
cmp
adc
mov
jo
mov
jl
pop
cmp
jmp
xor
fwait
and
push
sarb
call
lea
lods
xchg
aam
cld
cmp
inc
pushf
inc
mov
xchg
sub
stc
xchg
addb
mov
aaa
test
push
xor
mov
or
shlb
sbb
adc
fwait
mov
lods
or
adc
xor
mov
adc
add
es
cli
jmp
pop
aad
sub
inc
jp
mov
cmp
add
je
push
es
adc
push
test
mov
cld
popf
psadbw
hlt
mov
jg
push
mov
insb
jl
test
add
fs
ds
push
xchg
cmp
cld
xor
mov
outsl
and
cmp
in
sub
mov
into
pop
sahf
dec
push
ja
int3
rcl
pushf
mov
clc
adc
inc
std
mov
dec
aaa
jp
call
lcall
pop
ret
cmp
inc
xchg
cld
push
les
int
push
cmp
adc
loope
add
xor
add
add
pop
cmp
inc
xchg
mov
pop
adc
jle
sbb
jmp
cmpl
adc
xor
stos
and
je
js
in
pop
test
negb
and
dec
cmp
xchg
pop
xor
cmp
or
gs
clc
push
insl
inc
mov
xor
fdivs
or
mov
push
mov
fwait
ss
inc
outsb
pop
dec
shll
ljmp
or
sbbl
pop
mov
std
sarl
add
lea
rclb
dec
xorl
cmp
loopne
pop
movsb
addr16
std
push
dec
add
clc
lock
incl
fld1
mov
push
icebp
in
inc
loopne
lret
inc
sbb
or
pop
jns
mov
mov
decl
or
jl
mov
sbb
sub
pop
cmp
mov
test
test
and
mov
jge
shlb
dec
inc
or
fs
cld
fs
jae
cs
push
lock
push
xchg
adcb
or
mov
pop
paddb
cli
adc
inc
mov
inc
cwtl
jne
cld
repz
jp
aas
int3
fisubs
adc
shll
inc
in
inc
xchg
cmp
xor
scas
mov
es
mov
mov
test
inc
mov
and
add
push
adc
mov
cwtl
xor
ja
xor
sub
adc
sbbb
pop
pop
xor
add
mov
cmp
int3
mov
fs
fnstenv
les
mov
adc
pop
sub
rorb
cmp
add
mov
inc
int
cmp
add
lock
pop
inc
jmp
sbb
push
dec
mov
add
ror
mov
sub
mov
lock
add
dec
popf
and
shlb
jl
jo
mov
shrb
sbb
inc
inc
mov
fmul
idiv
or
cld
adc
fsub
insb
dec
cs
adc
sbb
es
push
dec
mov
mov
fs
xchg
mov
cmp
pop
inc
adc
or
add
cmp
es
dec
lods
push
inc
shrl
sub
outsb
fmuls
jg
cmp
pop
mov
add
push
lock
push
repz
sbb
or
insb
or
ret
fcomps
jp
or
ret
movl
aaa
dec
or
mov
lcall
out
std
stc
pop
ss
dec
add
mov
scas
negb
adc
pop
xor
sar
mov
cmp
sub
stc
notb
sub
outsl
cs
sbb
cmp
ret
rorb
jne
cmp
push
mov
filds
dec
sti
xchg
or
dec
clc
out
mov
test
mov
rorl
jne
mov
add
adc
xor
xor
orl
sub
daa
mov
jnp
jle
jge
mov
adc
sbbl
lock
int3
outsb
push
push
lahf
and
out
pusha
in
rclb
es
pop
add
test
mov
adc
push
dec
popa
and
pop
push
sbb
add
rorb
add
inc
add
add
mov
dec
add
in
mov
dec
mov
or
ret
cmpsb
aad
inc
add
sub
xchg
fldcw
faddl
mov
sarb
xor
lock
loope
les
mov
je
pop
sub
xchg
xchg
inc
fwait
adc
cmp
sbb
or
mov
jo
cld
ss
adc
cmp
enter
push
push
mov
jns
sti
data16
adc
aam
lock
cmp
sbb
pop
lret
inc
inc
mov
dec
mov
fisttps
aam
test
add
jo
and
lods
rolb
mov
mov
cmp
test
and
or
imul
xorl
cmp
out
movsl
ss
sti
add
jne
mov
decb
ss
or
faddl
cmp
in
or
ljmp
sbb
cmp
add
push
xchg
add
aaa
mov
rolb
out
cmp
imul
or
in
xlat
sbb
int3
push
push
mov
js
loop
lret
push
mov
push
gs
or
arpl
scas
inc
add
outsb
and
scas
test
mov
xchg
pop
dec
hlt
xchg
add
dec
shrb
std
pop
call
sbb
add
fmull
scas
jg
add
cmp
pop
data16
shll
js
subb
sahf
sbbb
sub
add
push
cs
inc
pop
incl
shlb
or
xor
hlt
loop
les
loopne
rol
leave
or
dec
xchg
lea
sub
push
cltd
mov
into
cmp
mov
add
clc
gs
iret
int3
lods
lcall
into
popf
pop
decl
cmp
add
ret
out
sbbb
lret
cmpsb
call
ret
mov
lret
shlb
cmp
mov
mov
add
push
dec
pop
in
loop
scas
ret
addl
in
jne
arpl
popf
dec
aaa
mov
ret
ficompl
add
aam
pop
in
push
mov
xchg
xchg
inc
sub
jmp
mov
aad
xchg
push
movzbl
adc
xor
dec
push
push
fcos
ret
incb
cmp
push
push
call
sar
nop
dec
int3
mov
pop
fbld
movsl
in
imul
dec
dec
add
lcall
xor
mov
cmp
outsl
sbb
std
jg
pop
push
rclb
inc
inc
mov
js
cmp
jge
in
in
pop
adcb
inc
pop
pop
inc
or
fsubs
push
in
jl
cmp
jl
mov
gs
sqrtps
ja
pop
push
mov
sub
pop
mov
test
adc
rcrl
lock
test
xchg
pop
mov
mov
xor
ficoms
ss
sti
cld
inc
or
dec
pop
pop
cmc
ret
enter
and
sub
pop
push
xchg
mov
outsb
ljmp
fidivl
adc
inc
push
into
rolb
mov
mov
or
pop
and
mov
call
adc
decl
outsb
imul
int3
push
inc
pop
sti
cmp
adc
mov
lock
lret
sbb
lea
sti
and
icebp
add
xchg
and
push
std
es
aam
xchg
pop
mov
push
or
mov
push
adc
sbb
pop
loop
mov
push
sub
mov
aam
and
out
hlt
shrb
inc
mov
shrb
push
test
rolb
test
push
lock
push
mov
addb
inc
movsl
add
add
jb
dec
xor
test
xor
push
jl
jecxz
push
les
filds
mov
lret
sar
mov
jle
in
mov
adc
adc
mov
mov
adc
mov
jg
leave
cld
or
rcl
mov
incl
jmp
jne
mov
dec
push
jmp
push
call
in
push
adc
loop
cmp
pop
je
add
cmp
jmp
or
into
data16
fwait
outsb
push
ret
repnz
int3
push
movsb
jge
pop
and
push
add
dec
add
ror
ret
pop
mov
mov
shr
sub
lods
enter
aas
std
shlb
das
mov
scas
fadd
pop
loop
dec
loop
std
jbe
adc
mov
lea
adc
loope
jb
loopne
dec
filds
nopl
cmp
mov
jg
add
add
cmpsb
loopne
mov
xchg
jne
adc
xor
fs
jle
in
aam
jo
mov
lods
and
fldl
adc
cmp
lock
iret
and
mov
loopne
pop
and
jno
push
push
les
jmp
jae
xorb
or
gs
add
sub
push
xor
and
push
inc
outsl
jp
mov
test
std
sbb
add
and
popa
shlb
push
pop
mov
ljmp
subb
pop
rorb
and
jmp
popa
jmp
xor
mov
xchg
fimull
push
xchg
test
push
int3
add
movsl
outsl
loopne
jle
call
and
jge
imul
lcall
or
out
push
insl
shlb
or
mov
out
dec
xor
inc
adc
testb
aad
fistps
sbb
or
lea
jae
lods
inc
test
cli
mov
sbb
xor
je
loopne
fstl
xchg
inc
lock
adc
lret
push
dec
rcll
inc
pop
push
test
call
mov
fs
push
fcoms
jmp
in
or
and
aam
negb
xchg
ret
or
add
or
pop
test
push
cwtl
dec
fisttps
jo
add
movsb
les
aam
push
mov
andl
rcrb
sub
inc
or
pop
xchg
ret
sub
scas
pusha
mov
ljmp
and
test
push
out
sbb
aaa
cld
pop
arpl
fsts
jne
popa
adc
or
repz
out
sbb
or
les
stos
mov
lret
mov
outsl
sub
mov
movq
adc
incl
les
mov
hlt
dec
insb
js
mov
adc
imul
outsb
push
jl
add
push
mov
mov
in
sub
fnstenv
dec
and
loopne
push
into
add
sub
lahf
sarb
mov
sub
mov
inc
ret
push
lahf
call
jle,pt
jnp
pop
jle
push
sbb
lret
cmpsb
outsb
and
jp
fstpl
out
sbb
test
and
or
mov
ljmp
aad
daa
xchg
fimuls
adc
into
cmp
out
fdivl
cmp
jo
and
mov
mov
stos
inc
inc
test
push
inc
mov
jmp
inc
cmp
xchg
push
mov
lds
mov
inc
test
inc
cmp
pop
loopne
mov
or
lret
gs
add
mov
sarl
and
mov
insl
lret
sbb
or
adcb
push
rorb
test
cld
std
jno
int3
xchg
fsubs
inc
lret
cmp
lods
add
movsl
outsl
ljmp
test
add
xor
mov
inc
xor
cmp
sbb
mov
add
shr
outsl
imul
pop
pop
into
pop
dec
jb
push
aam
or
pop
xor
nop
cmp
test
jbe
mov
movsb
mov
add
loop
stos
pop
and
inc
ljmp
stos
sbb
pushf
inc
rcrb
xor
xchg
cmp
mov
jp
add
push
inc
adc
dec
add
mov
and
enter
push
jmp
add
hlt
adc
pusha
sub
or
add
bound
test
ficomps
int
lods
dec
fs
pop
rolb
or
push
cmp
push
jmp
xchg
add
or
icebp
adc
sahf
mov
sub
cmc
jl
out
movsb
cmp
xlat
mov
push
mov
pop
or
stos
push
pop
xor
dec
add
cmp
mov
shlb
sbb
inc
inc
dec
scas
mov
hlt
mov
mov
cmp
pusha
cmp
inc
jnp
outsl
mov
xor
push
push
in
rcl
add
sti
lcall
xor
andl
call
int3
and
or
mov
push
add
ljmp
jge
cmp
test
push
adc
mov
rorl
add
loopne
call
adc
mov
pop
into
fmull
outsb
mov
aam
notb
mov
outsb
lds
xchg
mov
and
rcll
bound
adc
push
mov
add
insl
xorl
hlt
and
outsl
clc
dec
push
mov
cmc
add
je
xchg
push
push
movsb
test
mov
ret
pop
mov
out
push
mov
xchg
cmp
int3
adcl
jae
test
repz
sbb
push
and
mov
fmuls
add
cli
outsl
inc
mov
fdivrp
cld
std
call
jl
and
jb
add
mov
add
jb
mov
fistps
fcoml
sub
scas
mov
clc
push
adc
jo
mov
push
push
fistl
les
hlt
jg
mov
mov
nop
test
sar
data16
add
adc
mov
pop
push
arpl
xchg
scas
sbb
js,pn
bound
inc
in
jne
decl
or
add
push
ds
decb
es
inc
push
push
xorb
les
movsb
push
xchg
lock
inc
test
mov
daa
dec
lret
aas
pop
push
mov
push
add
or
jmp
aas
lret
adc
push
stos
jne
add
lcall
cmc
mov
cld
xor
push
and
mov
ret
andl
shll
fadds
add
dec
sub
pusha
ret
pop
inc
pushl
nop
mov
dec
pop
enter
xor
dec
push
pop
add
ds
sub
rclb
dec
aam
add
mov
rolb
pusha
xor
in
call
call
add
out
ljmp
xchg
rorb
xchg
mov
push
mov
jo
and
cmp
inc
test
push
sahf
jns
gs
loopne
push
pop
jmp
aam
xor
cmp
sbb
mov
call
fiaddl
pop
xor
ja
loopne
test
add
stos
pop
push
mov
mov
push
mov
and
ret
add
add
cmp
decb
mov
xor
adc
mov
mov
xor
hlt
push
mov
in
sub
or
loopne
cmp
int
daa
sub
or
js
rol
inc
inc
dec
fdivrl
lods
lods
rorb
test
sub
leave
cs
adc
xor
pop
cwtl
cwtl
jge
loopne
js
and
push
dec
dec
add
sbbb
ret
movq
add
mov
inc
push
fs
cmpsb
or
push
xchg
push
clc
imul
lock
adc
adc
incl
add
jo
mov
and
stos
and
push
push
push
xor
ds
sub
xchg
adc
bound
xchg
xor
or
loope
xchg
jbe
xchg
and
addl
les
outsb
push
sbb
aaa
pop
push
push
adcb
movsb
pop
stos
sub
stos
adc
es
cld
je
jb
adc
xchg
lret
repnz
gs
mov
inc
movsb
sub
push
test
ljmp
enter
mov
loop
inc
andnps
call
orb
or
sti
mov
aaa
fnstcw
sub
sbb
mov
das
or
add
inc
pop
mov
or
mov
ret
and
mov
fadds
push
adc
inc
pop
adc
out
sbb
mov
daa
pop
mov
mov
into
test
decb
xor
mov
dec
mov
xor
jb
jbe
nop
inc
mov
ss
xor
push
mov
mov
inc
shl
in
cmc
loope
jo
fidivrs
fimull
test
mov
mov
push
mov
pop
loopne
cld
mov
movsb
add
data16
and
add
push
or
cli
ret
stos
cmp
push
add
xor
dec
mov
pop
jp
fldt
add
jmp
imul
or
pop
js
loop
xor
repnz
pop
out
clc
jbe
js
mov
pop
inc
idivb
mov
pop
cld
add
loopne
inc
and
jb
inc
lcall
cmp
push
adc
test
sub
gs
out
add
xor
push
in
jo
cmp
xor
mov
push
sbbl
test
cmp
lock
popf
fcom
jmp
add
cmp
push
cmc
nop
ror
push
jmp
sub
xor
inc
bound
push
mov
decl
cli
add
jge
hlt
and
xor
sub
neg
clc
mov
adc
gs
lcall
xor
andb
leave
xchg
or
iret
ror
outsl
int3
fsub
adc
sbb
in
or
je
or
cmp
push
jle
insb
test
add
or
cld
shlb
out
jp
insl
push
or
pop
data16
rorb
nop
push
cli
adc
je
jbe
push
mov
cld
pop
dec
inc
jno
rorb
adc
xorb
pushf
mov
mov
or
std
or
adc
add
push
cmp
das
xorb
jne
addb
repz
testl
loop
lods
push
lret
dec
adc
ja
out
or
dec
or
in
jo
inc
ljmp
pusha
sbb
and
loop
sbb
jp
push
push
adc
fbld
in
rolb
jge
jns
mov
pop
les
push
dec
xor
jl
mov
icebp
dec
adc
ret
add
xorl
fmuls
sarb
sar
jg
mov
xor
enter
lcall
mov
mov
inc
int3
shlb
jle
sbb
and
push
jne
push
push
fisubrs
jbe
out
fimull
hlt
in
into
push
fdivs
adc
xchg
dec
pushl
mov
aas
test
mov
and
cmpsl
or
dec
mov
clc
call
mov
lods
gs
int3
adc
clc
movsb
jne
and
cltd
mov
mov
test
push
cli
repz
inc
add
lea
popa
cmp
add
aam
mov
outsb
popa
sbb
int3
push
sbb
sti
rcll
decl
push
inc
test
decb
aam
push
adc
pop
les
int
cs
push
mov
mov
call
sub
mov
jp
push
add
sbb
cli
ja
xchg
stos
push
lea
aas
sub
mov
sub
cwtl
add
test
mov
pop
xor
push
mov
cmp
fisubs
divw
popa
js
icebp
sbb
es
stos
mov
inc
jbe
inc
add
test
dec
cmp
or
pop
dec
clc
clc
jns
les
and
pop
js
sarb
std
push
cwtl
add
xor
bound
rcr
imul
lahf
test
mov
call
xor
loope
gs
int3
addb
jge
fimuls
cltd
sub
inc
and
in
inc
jae
cld
xor
je
push
test
mov
push
orl
cmp
xchg
jl
sbb
hlt
popa
adc
pop
push
add
pushf
add
test
mov
movl
pop
fwait
cli
push
jne
repnz
ds
push
add
les
inc
inc
inc
mov
or
subl
je
shlb
ljmp
ret
loope
add
test
daa
lea
pop
add
fiadds
add
pusha
pop
mov
out
xor
lea
mov
inc
dec
and
jb
cmpsb
call
mov
pop
test
pop
xlat
shrb
push
mov
mov
add
add
pop
subl
jl
cli
ljmp
mov
jne
xor
and
dec
inc
adc
fmul
shlb
je
cmp
mov
ret
leave
mov
dec
jmp
leave
je
je
ja
je
sbb
mov
fs
call
rcrl
mov
cld
inc
movsb
xorl
adc
inc
vpmacssww
jg
inc
sbb
testb
inc
or
es
inc
ss
push
xchg
test
xchg
push
push
inc
std
mov
mov
xchg
les
bound
mov
call
inc
leave
fbld
adc
sbb
xor
pop
fs
insb
add
lcall
cli
pop
dec
push
push
add
adc
imul
xchg
xchg
add
push
or
rolb
test
sub
xchg
add
and
adc
xorb
sar
subl
push
and
add
nop
push
out
rclb
inc
push
sub
lcall
mov
or
insl
loope
lods
ljmp
jle
gs
call
push
sbb
hlt
xor
adc
loop
ljmp
sbbb
rolb
xor
ja
fmull
pop
push
inc
or
lcall
lods
inc
dec
lcall
push
adc
ljmp
or
ljmp
adc
and
push
outsl
cli
push
push
adc
or
push
and
or
cmp
xor
fdivl
inc
outsl
xchg
adc
adc
mov
leave
xchg
sbb
push
and
adc
push
xchg
push
aaa
and
imul
pop
dec
inc
jo
inc
xor
push
mov
add
xchg
jp
mov
jno
dec
std
shlb
inc
sub
jmp
test
mov
movsl
push
add
ljmp
cmp
les
adc
adc
inc
dec
shlb
xchg
jmp
hlt
pushf
aam
lods
adc
sbb
std
mov
call
dec
add
scas
ret
cmpsb
filds
pop
ret
cmp
shr
and
mov
shll
ret
cmc
ja
pop
xchg
or
push
push
push
mov
xor
and
into
je
xor
pop
icebp
sbb
ret
pop
inc
rcll
sub
dec
push
add
inc
push
adc
test
add
sub
push
inc
and
or
lcall
aaa
add
fsubs
jne
movsb
add
jne
insb
or
add
es
add
cmp
and
popa
ficoms
pop
pushf
filds
stos
pusha
mov
mov
mov
mov
push
out
rclb
cmp
push
ljmp
jbe
fcmovu
aam
inc
das
cmp
out
cmp
mov
lods
repz
mov
add
mov
inc
sar
sub
mov
inc
add
and
shlb
pusha
and
mov
sbb
cli
push
rclb
test
sbb
in
pop
stc
inc
jmp
push
and
sti
je
test
pop
insb
fadds
in
sub
jae
dec
mov
data16
jp
movsb
xlat
mov
js
jae
or
mov
je
dec
cld
sub
call
out
fdivl
repnz
push
mov
inc
xor
push
call
push
add
cmp
push
decl
pop
mov
in
cmp
je
mov
adc
bound
pop
je
xor
add
jle
push
adc
adc
cmpsb
lret
inc
call
and
sub
mov
sub
or
stos
cmp
mov
rolb
adc
push
mov
scas
xchg
repz
jge
fs
out
push
pushf
pop
mov
cwtl
mov
shlb
insb
sbb
mulb
mov
add
cwtl
and
call
pop
lock
sub
adc
inc
adc
sub
or
inc
mov
jnp
jl
icebp
inc
out
pusha
mov
add
int3
sti
mov
jno
out
adc
mov
add
and
and
pushf
or
stos
out
hlt
push
pop
out
call
pop
insb
push
or
add
lcall
pop
xchg
test
lret
xchg
mov
push
jmp
add
call
or
mov
fs
add
mov
sahf
cld
or
inc
jb
push
dec
cs
cwtl
push
push
movsb
jb
jbe
ds
mov
adc
cs
pop
pop
lret
push
pusha
subb
xchg
xchg
ljmp
test
push
pop
stc
loopne
mov
mov
mov
adc
test
xor
jne
or
pusha
inc
in
les
mov
stc
imul
orb
cmp
faddl
add
outsl
sarb
jb
sub
add
call
push
ret
pop
dec
pop
mov
hlt
stos
in
ljmp
cmp
fs
lea
clc
push
and
in
xor
inc
xchg
testl
sub
ljmp
adc
mov
jb
or
mov
hlt
ret
je
or
sarl
pop
inc
movsb
lea
xlat
push
or
cmp
test
mov
mov
cmp
sub
aad
mov
dec
ret
cld
leave
push
sbbb
arpl
xor
clc
aas
or
je
mov
push
xchg
mov
pusha
subl
in
shrb
pop
ljmp
add
test
fistps
out
xor
call
decl
mov
xor
jmp
push
inc
shlb
cmp
or
mov
sbb
mov
add
add
dec
push
mov
popf
inc
negl
outsb
add
insb
push
xor
scas
mov
cmp
faddl
add
push
scas
mov
xchg
clc
mov
call
jmp
xor
mov
add
nop
test
adc
ret
shrb
aam
imul
movsb
js
cld
add
les
mov
dec
je
xchg
jbe
lea
and
nop
mov
xchg
ss
adc
clc
movsb
pushf
sahf
dec
xor
mov
into
aaa
popf
fcoml
mov
insl
jmp
ds
xor
stos
pop
fs
push
lods
ret
sub
mov
inc
mov
mov
or
push
adc
jae
int3
xor
inc
adc
movups
fsubs
out
mov
jbe
ja
pop
lods
ljmp
push
ss
nop
mov
scas
mov
and
test
add
je
sub
xor
cld
jbe
xor
fs
out
call
popa
ret
bound
test
stos
or
fimuls
dec
inc
jo
insb
int3
sub
inc
pushf
cwtl
cld
bts
test
adc
pop
mov
and
xor
or
dec
jb
inc
sbb
popl
cmp
mov
jl
sbb
jmp
stc
xor
xorb
out
dec
jp
adc
mov
mov
lret
cmp
sub
stos
inc
cli
cmc
pop
adc
xor
notb
fimull
jge
and
cmp
push
in
cli
or
ficomps
icebp
mov
enter
cld
mov
xor
adc
xchg
dec
push
or
hlt
pop
fwait
push
test
ja
aaa
add
sbb
or
movsl
pop
sbb
sbb
pop
xor
push
cs
hlt
pop
and
dec
out
nop
adc
hlt
std
or
xor
fcmovnu
push
pop
test
incb
adc
jg
popa
filds
je
in
add
testb
repnz
and
push
sub
ret
cld
insb
xor
inc
mov
movsb
pushf
ret
inc
call
sti
xchg
mov
inc
cli
pop
mov
mov
push
and
lock
jg
popa
stc
imul
in
jbe
fiadds
pop
pop
push
stos
sub
pop
dec
mov
mov
movups
add
push
jns
inc
pop
das
push
shl
test
icebp
mov
cmp
inc
fisttpll
or
jg
icebp
js
nop
rcr
out
mov
inc
pop
loopne
add
mov
cmpl
stc
or
jecxz
mov
xchg
fmull
lods
inc
inc
rcrb
sbb
or
cmp
ljmp
aam
adc
inc
fbstp
test
rep
test
lret
xor
adc
sar
mov
jne
inc
cmp
jnp
adc
cld
xlat
decl
push
adc
mov
jle
jb
xor
or
dec
inc
gs
dec
loope
les
jbe
outsl
scas
shlb
int3
loopne
into
push
test
push
addl
popa
pop
mov
mov
clc
or
loopne
push
ds
je
call
add
jmp
mov
push
jo
shlb
lods
stc
lods
test
add
cli
xor
or
xchg
and
aam
add
lret
pop
jg
push
and
and
hlt
decl
mov
in
or
push
test
lret
push
mov
jb
add
imul
add
test
mov
stc
add
inc
inc
scas
test
das
push
enter
outsl
inc
and
push
fsubl
rolb
add
nop
lea
xor
push
adc
add
call
loop
sub
mov
add
push
clc
dec
cmp
or
mov
adc
lret
sbb
loopne
xor
jne
and
mov
divb
mov
push
rcrl
or
test
add
lock
mov
movsb
imulb
and
inc
jb
adc
mov
mov
sti
fs
cmp
push
adc
add
int3
xorl
or
mov
dec
add
jo
add
jge
cmp
xor
popa
push
and
push
or
mov
lret
lcall
outsl
sbb
cmp
or
cld
jns
mov
add
je
adc
insb
mov
xchg
and
mov
fsubs
inc
sbb
enter
cld
outsb
jp
dec
mov
and
jo
cli
and
mov
dec
push
je
mov
xchg
lock
fs
add
cmp
pop
mov
xchg
xor
sahf
bound
jmp
shll
jnp
adc
pop
sub
and
push
cld
cmp
xchg
mov
lahf
imul
rorb
les
lock
mov
dec
push
test
cmp
mov
adc
jmp
shrb
mov
jo
bound
mov
adc
rcrl
jl
or
test
dec
mov
and
scas
inc
sbb
and
cmpsl
test
aad
in
mov
mov
pop
jg
je
or
pushf
xchg
mov
dec
cmp
hlt
vmread
decl
dec
xchg
int3
or
mov
or
cmp
or
shrb
outsb
addb
push
xlat
je
or
or
mov
dec
ljmp
loope
sub
mov
mov
push
mov
mov
into
clc
adc
push
dec
icebp
sbb
bound
dec
mov
mov
adc
adc
jp
fsubl
sbb
push
add
pop
je
rclb
lcall
lcall
call
mov
shlb
push
les
roll
push
mov
fmull
lea
popa
lret
lods
adc
test
mov
adc
push
sbb
lea
mov
sub
add
mov
add
aad
in
jbe
xor
push
cmp
mov
call
test
data16
fildll
mov
pop
pushf
mov
add
arpl
dec
jge
mov
add
dec
sar
cmp
lock
in
rol
and
lock
push
cs
push
inc
je
call
roll
and
mov
clc
jg
dec
clc
push
inc
add
mov
mov
out
pop
mov
inc
jl
or
push
sbb
xorl
insb
int3
dec
fsubrl
imul
bound
orb
sbb
and
mov
or
dec
inc
cwtl
push
pushf
cld
nop
into
inc
push
push
pushl
mov
cmpsb
add
add
xor
ljmp
inc
push
or
push
xchg
cli
add
les
rclb
push
push
rolb
cmp
inc
jb
in
add
sub
or
inc
and
int
mov
and
mov
add
pop
xor
mov
add
cld
inc
cwtl
je
jmp
pop
pop
out
les
popl
push
mov
std
shl
xchg
push
sahf
leave
adc
call
jecxz
call
xchg
add
roll
or
inc
loope
push
push
dec
cmpsb
adc
pop
push
das
xor
aam
jns
test
les
inc
xchg
jbe
sbb
add
loopne
inc
lock
xchg
popf
pop
pop
int3
add
dec
es
pop
inc
cld
xchg
xchg
pop
je
fsts
je
ds
pop
idivb
fs
js
push
push
adc
cmp
add
lcall
sub
push
push
adc
xchg
mov
rol
aas
inc
aaa
mov
cmp
push
cmp
xchg
cmpb
push
sbbb
sbb
pop
loope
data16
push
cli
clc
fucomi
enter
mov
push
pop
xor
jb
or
push
lcall
mov
dec
mov
mov
jmp
lea
push
sub
js
shlb
mov
les
shrb
or
push
xor
mov
mov
ret
inc
into
or
cmp
mov
in
decb
arpl
pop
mov
je
mov
push
inc
pop
lods
or
mov
mov
pop
mov
xor
dec
movl
stos
add
jecxz
adc
push
out
inc
adc
enter
mov
push
push
xchg
bound
push
push
adc
lods
out
inc
pop
jne
jo
stos
sub
and
pusha
insl
inc
xor
jp
outsl
sub
and
adc
loopne
fs
mov
or
lock
jb
mov
pop
and
jmp
rolb
mov
inc
mov
and
cld
call
pop
push
or
inc
mov
ficomps
cmp
adc
lret
call
icebp
test
mov
add
add
ljmp
and
cld
imul
popa
mov
lods
fdivl
add
jbe
xchg
lock
sub
sbb
cmpsb
xchg
dec
mov
or
jmp
call
or
fucomi
push
jb
loope
adc
jmp
adc
adc
pop
and
sub
push
fwait
test
dec
push
sbb
mov
loopne
inc
jo
dec
rcrb
mov
jecxz
loope
xchg
mov
jl
cmpb
xor
xchg
adc
inc
push
test
dec
mov
xor
nop
push
adcb
push
push
add
loop
inc
xchg
add
adcl
les
out
cmp
cmp
stos
push
loopne
push
inc
out
jb
call
or
inc
lea
call
adc
dec
or
jle
add
test
cmpsb
sbbb
dec
popa
jnp
hlt
int3
jmp
ret
jmp
ljmp
outsb
mov
mov
inc
or
cmp
xchg
iret
call
scas
pop
push
dec
adc
outsl
mov
xor
nop
jbe
insb
add
and
mov
push
sarl
loop
add
inc
enter
pop
adcl
push
push
outsb
leave
out
ficompl
test
fdivp
andl
or
nop
lret
xlat
aaa
jb
jmp
push
xchg
fbstp
inc
pop
sbb
sub
inc
inc
mov
or
jne
in
cmpsl
mov
gs
fxch
movsl
xor
enter
ss
add
insb
add
jge
adc
jg
xor
in
cld
inc
pop
adc
rolb
add
sbb
jbe
loope
ljmp
ljmp
adc
jmp
decb
or
adc
xor
dec
fsts
push
fimull
dec
lods
fldl
es
and
adc
sarb
push
add
mov
cli
push
clc
jne
mov
into
mov
adc
pushl
mov
aas
lea
push
shll
jbe
nop
aas
add
cmpsl
adc
mov
fnstcw
out
xor
lock
mov
nop
mov
inc
std
into
fs
scas
inc
rorb
ss
cld
fs
mov
jo
dec
push
cmp
clc
and
shrb
in
add
mov
loopne
xchg
ret
inc
sub
std
test
add
fs
fcmovne
inc
ret
lea
add
enter
dec
adc
insl
push
pop
mov
add
xchg
mov
icebp
add
shll
pop
adc
ds
hlt
adc
jmp
addr16
fimuls
sbb
aas
push
add
jbe
dec
les
mov
mov
dec
push
rclb
nop
aaa
les
ja
aaa
fdivs
dec
outsb
pop
mov
push
push
push
mov
push
xchg
push
icebp
movsb
or
push
pop
mov
pop
in
into
hlt
lea
sub
pop
dec
decl
rolb
and
sub
jg
mov
mov
sub
ficompl
dec
add
scas
int3
and
and
cld
add
sub
mov
fmuls
leave
std
push
les
aam
mov
xchg
dec
rclb
xchg
callw
push
xor
jg
gs
pop
cmp
in
mov
push
rclb
lock
fstpl
cmpsb
sbb
or
fstps
js
shr
fucomip
test
mov
add
pop
adc
lret
dec
cmp
outsl
lea
ds
jo
pusha
inc
or
js
movsl
add
mov
rcrl
sub
cmp
inc
push
enter
or
ja
adc
add
divl
add
fmuls
push
jecxz
inc
or
repnz
imul
cmpsb
fsubs
into
jl
mov
pop
cmp
add
cld
inc
inc
dec
dec
push
mov
xor
mov
hlt
cmp
or
and
push
push
adcb
pusha
cmpsb
pusha
out
fcmovbe
mov
and
inc
mov
cmp
push
jmp
and
pop
pop
les
ret
rcl
fistpl
add
or
jmp
push
mov
mov
xchg
add
pcmpgtb
adc
dec
xchg
push
cmp
mov
cli
mov
test
in
xor
ds
fldcw
ljmp
xor
sti
push
mov
mov
mov
push
add
mov
jge
sbb
movsb
cmp
stos
dec
inc
xlat
xor
out
je
and
call
cli
or
xor
cmp
call
test
mov
cmp
test
je
imul
int3
aas
dec
mov
lcall
mov
or
sbb
pushf
rolb
add
or
rcll
dec
pop
mov
pop
push
mov
andl
lea
loopne
push
xor
sub
inc
dec
adc
push
mov
or
inc
mov
lock
push
aam
add
ret
cmc
mov
mov
mov
adc
and
xor
cs
push
and
mov
mov
les
mov
push
int3
jmp
lods
adc
pop
sub
sbb
lea
pushf
lods
adc
sub
stc
xor
and
xchg
xchg
das
and
bound
stos
push
mov
inc
pop
add
sub
xor
mov
push
popf
das
lea
dec
int3
xchg
mov
les
ljmp
shlb
ss
push
push
mov
ss
into
xchg
sub
roll
fs
data16
test
loop
jmp
inc
das
cmp
les
rolb
xchg
bound
mov
insl
adc
or
jnp
je
jo
sbb
hlt
pusha
popf
dec
pop
cmp
enter
mov
leave
rclb
lret
inc
adc
push
push
test
jmp
push
jp
mov
fs
mov
jmp
inc
push
mov
adc
xor
arpl
or
mov
xchg
lea
mov
or
loopne
or
pop
in
inc
sbb
ret
or
and
sbb
dec
bound
adc
rolb
push
mov
jo
adc
fimuls
and
pop
test
les
test
or
popa
inc
dec
pop
add
push
mov
int3
inc
arpl
adc
inc
cmp
push
sbb
xchg
insb
lods
pusha
test
out
shrb
sarb
loopne
cmp
xchg
push
push
or
add
mov
loop
push
gs
sbbb
jne
dec
lock
icebp
push
sbbb
cld
lret
js
mov
insb
inc
jnp
xchg
lods
movsl
sbb
fisttpl
jno
jecxz
push
or
adc
jne
sub
add
cmpl
decb
fmulp
jl
cmovs
in
ja
sahf
mov
push
pop
mov
test
hlt
stos
add
push
movsb
cwtl
adc
dec
pop
in
jbe
outsb
ljmp
stos
stc
or
mov
push
adc
mov
fldl
lea
jbe
sub
lea
ret
clc
cmp
test
cwtl
orb
cmp
andb
mov
dec
cmp
fiadds
xchg
mov
push
xor
mov
fidivl
dec
adc
inc
jne
mov
clc
pushf
add
add
or
sub
add
push
pop
ret
sbb
push
sub
xchg
jp
scas
push
push
add
pushf
pop
add
sbb
enter
out
and
mov
jmp
xor
xor
cs
xchg
ljmp
lea
inc
dec
cmpsb
int3
mov
test
mov
adc
push
add
je
jmp
or
mov
out
jp
push
int3
repnz
push
sub
xchg
mov
dec
ret
test
dec
dec
sub
unpcklps
call
cmpsb
cs
sbb
jb
push
sub
ljmp
inc
call
xor
or
incl
cs
clc
enter
push
mov
ja
push
mov
mov
dec
sbb
inc
jmp
test
ret
sub
pop
jo
gs
push
scas
xor
je
dec
add
jge
shl
add
lcall
mov
xor
or
pushf
push
inc
outsl
lods
addl
mov
je
lock
add
xchg
addl
jmp
femms
inc
cmp
pop
mov
push
push
or
aas
movsl
jo
mov
xor
jne
xchg
cmpb
push
fbld
test
jo
push
or
jb
inc
pusha
cmp
or
je
fs
or
outsb
xchg
test
rorl
lret
cmp
test
dec
enter
decl
cld
adcl
sarb
call
aas
xchg
pusha
rorl
outsl
addl
ljmp
fistpl
fadds
enter
xchg
test
popf
outsb
mov
lods
xchg
inc
mov
stos
and
mov
repnz
cmp
movb
jbe
sbbb
loop
mov
jne
or
scas
or
test
fmuls
mov
cmp
sub
scas
jle
sub
out
pop
pop
sahf
roll
sbb
shlb
pcmpgtd
sar
and
mov
in
test
test
aaa
cmp
arpl
popf
fstl
ret
popa
pop
cld
push
ret
xor
pushf
adcb
out
push
lret
fstl
movsb
jbe
ss
clc
out
clc
sbb
dec
mov
icebp
inc
leave
xor
arpl
add
mov
pop
adc
fcmovbe
in
push
scas
push
lea
adc
cmc
rcr
pop
xchg
mov
outsb
add
je
aam
fwait
and
pop
sbb
sahf
les
jb
dec
call
dec
fdivs
inc
aaa
hlt
loopne
or
dec
push
leave
mov
outsb
ret
jb
cmp
fcoml
bound
pop
sub
add
or
push
dec
lret
ja
fwait
repnz
fs
dec
add
leave
push
add
add
adc
std
incl
pop
arpl
movsbl
test
jp
clc
mov
scas
push
loope
jb
cmp
pop
cli
and
or
mov
ret
xor
mov
lods
rolb
sbb
sub
jl
daa
mov
test
and
lret
clc
ljmp
cmp
cmp
inc
push
jg
jmp
push
mov
adc
pop
movl
addl
movsb
dec
shlb
filds
mov
outsb
rolb
int3
fs
mov
pop
jle
fcmovbe
insl
hlt
dec
push
in
es
add
mov
lfs
andb
jne
int3
push
jle
test
ljmp
add
or
clc
call
push
gs
jp
pop
fisubs
movsb
push
add
mov
clc
inc
repz
scas
test
clc
out
xor
ret
mov
arpl
mov
js
mov
in
movsl
dec
xlat
sbb
cs
add
cmp
mov
xor
sub
out
daa
xchg
mov
rolb
hlt
roll
in
jnp
lds
jl
mov
cli
mov
lock
incl
lea
sbb
out
sub
mov
or
mov
sbb
sar
add
xchg
jg
test
loopne
in
rorb
inc
cmpsb
dec
enter
push
fisubl
ss
cli
sub
xchg
xchg
out
pop
int3
flds
movl
xorl
and
fcoms
rclb
in
rcr
jne
pop
lock
push
xor
cmp
shlb
cmp
jne
mov
xchg
adc
add
das
or
fs
mov
inc
mov
orb
jge
cli
test
loopne
dec
lds
or
sub
sbb
pop
sub
movzbl
aaa
lock
xchg
or
jb
push
xorl
int
lods
and
mov
loope
into
cmpl
int3
lea
mov
ret
add
sbb
xor
repnz
ficoms
dec
push
add
add
inc
in
es
fwait
in
dec
aad
adc
adc
or
xor
push
cwtl
mov
mov
cld
hlt
jb
adcb
adc
cli
negb
popf
inc
mov
inc
adc
inc
rolb
add
push
adc
add
jl
or
adc
jle
sbb
adc
rolb
leave
lret
push
cld
stos
popa
mov
fwait
or
add
pop
and
movsl
mov
fmuls
clc
inc
je
mov
dec
enter
push
mov
loopne
sub
cwtl
fisubrs
es
rolb
inc
into
ds
mov
les
mov
mov
cwtl
mov
dec
lods
add
data16
sbbb
call
out
add
jge
ss
adc
sbb
lret
mov
fmuls
out
mov
dec
or
mov
add
sarb
shrb
mov
lcall
pop
inc
clc
int
sbb
rorb
push
pop
scas
adc
mov
inc
cmp
movzwl
inc
push
sbb
fisttpll
mov
sub
xchg
mov
and
inc
aam
add
lret
or
je
pop
push
mov
xor
push
push
dec
jbe
mov
mov
mov
mov
and
and
dec
push
jge
and
or
xor
dec
xor
adc
roll
sub
inc
jp
add
fstl
insl
jecxz
push
xchg
cmp
push
test
push
je
or
sbb
pop
and
rclb
mull
fadds
push
in
test
or
pop
data16
inc
cmp
push
adc
adc
adc
addr16
add
call
dec
and
or
inc
jo
mov
mov
into
sti
add
cmp
mov
xorb
mov
mov
sub
add
push
pop
into
and
shlb
mov
outsl
nop
inc
mov
or
bound
lcall
insb
xor
mov
js
jne
outsb
outsb
imul
dec
jo
rolb
sbb
cmp
outsb
add
xchg
dec
aam
loope
jmp
dec
test
push
push
sub
jns
xor
sub
xchg
or
arpl
sbb
push
fxtract
aam
sub
pushl
out
push
push
stos
adc
test
test
aad
lock
sbb
mov
cmp
mov
push
or
or
clc
dec
or
lret
jge
cli
loop
push
icebp
or
nop
push
loopne
xchg
test
fimull
push
ss
stos
adc
inc
fcmovnu
adc
repz
in
or
cmc
sub
addb
sbb
int3
jmp
lock
xchg
xchg
stos
test
jbe
adc
fidivrs
mov
aam
xor
inc
mov
xchg
jl
sti
push
sbb
in
mov
cli
bound
pop
sar
cld
aaa
add
dec
mov
xchg
or
fwait
push
gs
mov
push
mov
ljmp
test
mov
fiadds
lods
jo
and
lods
iret
cmpb
cmp
jl
push
push
sub
inc
jo
lret
hlt
stos
xor
sub
lret
xor
adc
mov
callw
lret
fcomp
or
leave
mov
out
sbb
lcall
repnz
mov
pop
add
std
mov
jmp
inc
sbb
scas
testb
shlb
dec
push
mov
sub
cwtl
pop
mov
jb
xchg
sub
pop
aas
je
repnz
jmp
lods
and
or
pop
push
or
pushl
sbb
xor
xor
lock
or
pop
push
sbb
subl
aas
inc
mov
call
pop
push
lock
or
inc
dec
add
mov
mov
jmp
aam
xor
mov
xchg
mov
cmp
xor
pop
adc
mov
cmp
inc
inc
mov
in
icebp
setl
cli
add
test
mov
popa
ret
lret
lods
mov
rcrb
mov
aaa
xchg
xchg
data16
rolb
jl
xchg
cmpsb
cmp
add
adc
mov
sbb
pop
xor
lret
test
xor
ret
in
ds
jp
mov
dec
dec
ret
fs
pop
insb
push
int3
sbb
or
mov
pop
add
adc
jmp
scas
les
push
or
shl
cmpsb
outsl
clc
leave
adc
sub
into
inc
jmp
call
pop
add
ss
ret
lock
pop
cmp
lock
inc
xor
cld
loop
push
mov
or
dec
fcoms
add
adc
fdivr
scas
test
add
call
inc
and
mov
xor
pop
push
pop
mov
pop
or
stc
push
add
mov
int3
dec
fadds
insl
insb
mov
outsb
push
sbb
dec
hlt
stos
pop
rcrb
je
into
pop
test
hlt
js
jne
ds
scas
and
add
mov
sbb
xchg
pop
nop
xorps
movl
je
das
add
jno
les
call
lods
xchg
jle
shlb
or
pusha
or
data16
and
loopne
pop
dec
jp
or
call
es
fs
mov
adc
sbb
jmp
lds
test
mov
movsl
fsubrp
in
jl
roll
call
cmp
adc
in
ljmp
adc
dec
dec
ja
add
inc
lret
adc
push
sbb
add
adc
dec
hlt
test
lcall
xchg
jo
push
add
xorl
push
test
out
dec
rclb
incl
insb
loope
sub
dec
pushf
jae
push
leave
mov
add
dec
fiaddl
std
bound
pushf
sbb
lcall
call
and
add
insb
xchg
xor
sarl
lea
std
int
mul
pop
test
movhps
rcll
sub
dec
mov
mov
jecxz
add
jg
ljmp
rclb
push
filds
xchg
je
mov
push
mov
add
mov
pop
cmp
std
xchg
ret
mov
sbb
ret
xor
std
roll
jb
sbb
clc
xor
idiv
xor
inc
js
cmp
adcb
mov
cmpsl
xchg
je
sarb
sub
sbb
or
xchg
push
adc
jle
not
add
je
adc
cmc
lds
fdivs
xlat
jp
sub
dec
mov
xchg
xchg
ret
lock
jmp
cld
and
mov
xor
repnz
decb
mov
mov
orl
adc
lock
sbb
ret
bound
js
std
mov
or
aaa
xor
cmp
cld
xor
add
je
loopne
xchg
cltd
into
xchg
rclb
pop
pusha
or
push
ret
ja
leave
xchg
jne
incb
inc
sbb
xchg
int3
test
es
mov
or
mov
pop
inc
mov
inc
ret
mov
xchg
in
xor
cli
and
in
add
push
jb
fdivs
pop
lcall
int3
ret
and
gs
or
ja
mov
or
loope
pop
and
fiaddl
mov
dec
mov
fucomp
mov
mov
add
das
shlb
mov
sbb
loopne
fadds
push
xor
jmp
pop
add
mov
imul
lret
jne
mov
jle
rclb
cmpsl
mov
cmp
add
test
xor
or
jo
xor
push
sbb
xor
add
or
sbb
pop
pop
cli
fistpl
inc
mov
les
inc
rorb
xor
aam
test
fmuls
pop
add
enter
mov
add
cld
push
aam
call
inc
call
pop
sbb
sbbb
jo
jge
mov
xor
sarb
inc
add
sbb
ljmp
call
scas
pop
lcall
sti
imul
push
ret
test
and
pop
roll
je
jmp
inc
jb
xor
inc
sbb
xor
rclb
clc
and
cltd
cmp
enter
mov
add
shll
dec
cmp
repz
cmpb
dec
stos
repnz
inc
je
inc
loopne
xor
pop
callw
xchg
fiadds
aas
clc
push
and
xor
dec
enter
testb
or
movsb
outsl
test
outsb
insl
sub
add
adc
xor
jbe
dec
lds
insb
andb
mov
cmp
mov
mov
push
mov
xor
pop
aam
jne
lock
imul
push
inc
je
add
or
test
shlb
pusha
adc
mov
inc
icebp
push
hlt
inc
lock
add
adcb
lret
xchg
cmp
lcall
je
insl
mov
xor
rorb
push
lret
xor
xchg
fadds
stos
rcrb
in
mov
lock
push
pop
data16
jp
xchg
in
jg
cmp
or
ret
hlt
rcl
rorl
mov
mov
mov
sbb
adc
inc
dec
mov
leave
shlb
pusha
fstpl
xorl
std
loope
ss
pop
cmp
mulb
mov
dec
mov
pop
cmpsb
std
dec
pop
test
dec
jmp
call
push
in
add
insb
in
or
mov
outsb
adc
fsts
push
inc
lock
and
lret
inc
loope
and
jb
rclb
fcmovnbe
mov
cmp
pop
loop
cmp
mov
shrb
push
xor
test
fwait
clc
sbb
mov
sti
mov
cmp
mov
mov
or
scas
and
rclb
sub
mov
in
add
sub
shl
andl
push
ljmp
dec
dec
sub
jmp
mov
data16
clc
std
adc
push
mov
push
adc
cmp
cmp
mov
ds
iret
cwtl
or
std
push
lcall
leave
into
adc
pop
pusha
movsb
test
imul
ss
jp
flds
dec
push
jg
fs
push
cmpsb
movsb
mov
pusha
push
incl
sbb
xchg
inc
ret
clc
cmp
iret
push
and
mov
loopne
stos
sbb
call
insb
fisttps
shlb
cwtl
jge
or
cmc
add
mov
dec
push
sbb
sar
or
lea
call
test
outsl
push
lods
test
rcrl
ret
ljmp
jmp
jmp
add
xchg
pusha
adc
or
jbe
push
xor
es
pop
pop
push
adc
or
lock
inc
pop
dec
push
add
and
inc
pop
outsl
sub
scas
sahf
pop
mov
aas
push
ds
mov
adc
in
push
add
loope
push
push
test
clc
popf
call
and
rolb
mov
dec
orb
ljmp
cli
int3
pop
data16
mov
test
lea
push
shl
jb
pop
mov
xchg
xchg
or
lea
jb
sbb
lock
or
jb
pop
out
mov
mov
sahf
add
and
fsubs
mov
push
or
retw
je
cmp
rorl
jmp
cmc
pop
inc
and
lods
addl
or
pop
cld
push
dec
in
mov
cmp
sbb
out
jl
mov
orl
aam
mov
loope
or
test
in
sti
jp
push
fildl
cmp
xchg
and
adc
add
leave
pop
adc
xlat
je
fisubs
xor
dec
loop
jo
xor
mov
rdtsc
jl
lcall
jl
testb
test
mov
cld
loope
ret
push
int3
adc
add
dec
push
inc
lds
stos
call
mov
xlat
inc
xchg
pop
movsl
dec
cld
xor
filds
out
add
jo
inc
mov
ds
mov
ja
clc
mov
test
xor
loopne
cld
test
jno
int3
mov
fmulp
push
dec
cld
xchg
repnz
add
adc
push
cmp
jmp
pop
lock
and
xor
loopne
inc
mov
push
pop
add
enter
call
jo
jge
hlt
loop
add
push
cmp
add
mov
divl
bnd
inc
je
repz
push
add
inc
inc
adcl
bound
inc
je
dec
add
jae
xorb
push
data16
xchg
outsb
call
jl
or
sub
adc
dec
and
fists
cmp
push
pop
call
push
dec
sbb
sbb
nop
out
call
mov
push
inc
inc
fadds
outsb
jmp
testl
xchg
pop
dec
cmp
lea
xor
pop
push
data16
inc
addb
test
gs
inc
sub
and
ret
push
mov
aaa
test
in
mov
dec
std
mov
ficoml
add
adc
insl
icebp
push
adc
sbb
sub
push
dec
lods
push
imul
je
ret
rcl
cld
pop
addl
add
imul
mov
icebp
add
add
fs
test
sbbb
in
loopne
loopne
or
lock
add
rorl
mov
push
and
in
push
xor
subb
push
mov
mov
pop
ret
fldt
mov
add
push
mov
lods
push
add
inc
pusha
sub
hlt
outsb
inc
andl
fcmovu
jge
cmovs
lret
enter
jo
xor
call
ret
outsb
dec
sarb
mov
mov
push
leave
inc
and
aas
fsubl
sahf
push
mov
xchg
jle
mov
adc
inc
adc
lret
or
or
jae
lret
rcrl
fsubs
dec
cld
int3
xor
jg
clc
jg
xor
inc
int3
mov
testb
sbb
pop
add
andl
data16
js
into
push
pop
lock
mov
dec
aam
inc
mov
jo
push
push
test
ds
loop
push
pop
jge
aaa
xor
sbb
pop
insb
mov
push
int3
sbb
push
stos
pop
mov
lds
pop
lock
aam
mov
xor
aas
insl
mov
sbb
cmp
std
add
jmp
xor
sbb
mov
cmpl
movl
add
add
repz
fs
dec
xor
lods
sbb
popa
mov
ret
add
mov
scas
push
lds
mov
push
cmp
mov
test
je
mov
clc
inc
and
or
add
or
add
in
test
xchg
test
ret
and
adc
sub
inc
fistl
pop
mov
outsb
nop
mov
leave
mov
push
ficomps
add
call
shll
inc
add
or
push
inc
stos
movb
pop
jmp
or
and
push
and
loopne
or
mov
fs
xor
outsl
xor
push
lea
incl
loopne
je
outsl
gs
les
insl
adc
mov
mov
pop
sti
lock
push
into
es
std
scas
je
shlb
adc
lcall
fs
push
or
stos
inc
dec
jo
out
jle
fsubs
inc
mov
icebp
shrb
aaa
lock
rolb
loop
dec
ljmp
add
loopne
or
jl
mov
adc
mov
pushl
push
lahf
loope
jmp
dec
ss
cmp
test
cmpsb
adc
xchg
mov
mov
pushf
cmpb
and
nopl
mov
cmp
jb
fwait
sbb
xor
addb
xor
int3
and
xchg
xor
cmpsb
outsb
jp
inc
xor
xchg
mov
rcl
push
nop
prefetch
or
lret
mov
bound
out
add
jnp
test
jp
xchg
and
push
mov
mov
aam
ficompl
push
clc
popa
mov
daa
mov
jne
dec
inc
inc
and
orb
enter
dec
mov
popa
ret
pop
sbb
jp
hlt
das
xchg
jle
subb
aam
std
gs
xor
pop
cmc
or
dec
xlat
mov
dec
inc
pop
lret
mov
xor
sbb
pop
inc
andb
dec
daa
jge
dec
push
sub
cmpsb
enter
sbb
ret
aad
sub
mov
movsb
or
mov
mov
outsb
mov
stos
cli
adc
das
xor
sbb
je
xchg
sub
and
test
lret
subb
pmullw
dec
or
add
dec
gs
xor
lods
and
loop
xchg
js
or
mov
mov
mov
loopne
test
mov
stos
js
cmp
push
pop
or
mov
cmpsb
hlt
mov
rolb
mov
xchg
add
xor
push
mov
data16
insb
or
push
jl
adc
add
ss
inc
sbb
cwtl
dec
mov
or
in
mov
mov
push
add
add
mov
rcrl
andl
mov
sbb
cmp
popa
cwtl
iret
or
call
push
lcall
dec
loop
push
push
test
or
aam
negl
or
out
push
outsl
push
mov
cmpsb
pop
push
mov
fdivl
push
inc
js
call
test
imul
push
dec
es
fcmovnb
mov
clc
cmp
push
pop
loope
jo
mov
xor
or
shlb
pop
add
jo
push
dec
xchg
test
dec
adc
jae
int3
inc
sahf
test
adc
fadds
lods
ss
inc
adc
adc
je
or
cmc
and
psadbw
gs
xchg
nop
leave
nop
mov
dec
rcll
push
testb
sti
les
push
sub
fs
xchg
or
add
push
das
pop
lea
cld
mov
pop
test
pusha
inc
mov
inc
xchg
lods
divps
or
add
ficomps
testl
adc
clc
adc
jg
aad
es
push
call
or
xor
lea
lret
inc
mov
mov
test
cld
and
jmp
mov
cmp
incl
push
adc
dec
push
dec
inc
repnz
inc
cmp
outsl
adc
repnz
or
arpl
jge
jne
js
loope
mov
in
call
mov
mov
mov
xor
adc
sbb
push
push
xchg
inc
pop
ljmp
cs
or
dec
pop
pop
push
add
sbb
inc
stos
inc
loopne
jo
dec
test
loopne
pop
test
in
jge
xor
xor
or
pushf
push
mov
dec
rcl
gs
and
sub
mov
cld
cmpsl
and
and
gs
pop
mov
sub
clc
out
jne
xor
fdivrs
mov
aaa
cmp
ljmp
xchg
mov
sub
fldt
or
mov
add
and
or
dec
ret
adc
add
in
fbstp
fisttpl
cmp
addl
or
movb
jnp
mov
push
and
aas
lock
mov
dec
push
add
pop
notl
push
push
repz
add
mov
and
xchg
clc
fmull
mov
pushf
xor
fs
mov
incl
or
test
cwtl
jp
mov
push
mov
mov
lock
mov
mov
xor
lock
mov
pop
dec
adc
mov
jmp
shlb
test
push
mov
mov
in
mov
arpl
and
rolb
insb
mov
adc
jne
in
sbbb
jo
lea
aaa
adc
mov
fmull
jae
in
cmp
dec
call
imul
psllw
sarl
ret
sbb
pop
out
rolb
mov
lcall
pusha
xor
dec
dec
pop
shrb
adc
movb
add
clc
and
jo
jp
push
mov
pop
pop
scas
jo
clc
mov
add
and
dec
fstps
out
jge
movsb
cmp
dec
sbb
pop
inc
repnz
clc
mov
jmp
rol
add
repz
jb
fsts
lock
push
cwtl
outsl
in
cmp
sbb
stos
cmove
push
ret
lods
inc
shll
jo
mov
idiv
aad
loop
cmp
movsb
in
add
xchg
mov
push
xor
xor
js
jno
xor
cmpsl
xchg
aas
add
inc
adc
sbb
es
cmc
lcall
mov
int3
inc
inc
sbb
mov
push
add
je
jmp
pop
or
xchg
cmp
fs
int3
or
push
inc
cld
dec
int3
ljmp
mov
lods
out
mov
out
pop
xor
in
test
scas
repnz
nop
pop
jp
negl
and
loope
sbb
jl
fwait
arpl
jmp
les
enter
das
xchg
push
or
dec
es
test
jae
or
mov
adc
fildl
out
adc
mov
shrb
push
dec
push
xchg
mov
dec
inc
loopne
in
sbb
cltd
sahf
lods
or
push
ret
cmp
out
shl
aam
rclb
into
pop
jmp
xchg
jbe
cmc
add
add
or
mov
cld
loope
jns
js
hlt
pop
jl
call
inc
lret
pop
inc
test
push
jo
sub
xchg
add
mov
rcrl
stos
fwait
adc
or
push
outsl
or
mov
xor
clc
and
loop
xchg
jo
push
in
pop
dec
mov
xor
aam
sub
bound
add
int3
fsubl
lds
jne
sub
xor
stc
xchg
shlb
sbb
pop
mov
mov
fidivrl
xchg
icebp
inc
scas
inc
sbb
xchg
es
notb
sbb
lahf
mov
fdivrl
lea
and
fmuls
fs
sarb
loopne
mov
aaa
add
cld
int3
test
pop
and
lock
mov
imulb
sub
sbb
mov
xor
pusha
mov
pusha
add
out
push
mov
nop
mov
ret
add
mov
push
ret
ret
push
je
inc
icebp
mov
xor
mulb
add
sub
pop
and
jmp
rclb
mov
or
loopne
cmpsb
dec
lods
and
call
lock
je
je
nop
mov
or
mov
jb
push
sbb
adc
jp
add
jnp
out
jnp
fisubrs
sub
mov
pop
rorb
fidivrl
inc
insl
pop
enter
pop
lods
ss
loopne
cli
push
mov
data16
outsb
scas
fistl
add
les
and
push
mov
dec
push
pop
les
icebp
inc
add
stc
lock
jo
out
mov
xchg
adc
push
add
jge
testb
sar
or
je
mov
mov
aam
repz
push
jmp
nop
adc
xor
mov
cmp
sub
jbe
inc
mov
and
fimuls
je
mov
data16
call
jno
data16
js
adc
fsub
inc
pop
mov
iret
dec
adc
adc
stc
sub
test
mov
aad
adc
aad
inc
scas
test
leave
sar
pop
mov
les
mov
addb
and
imul
js
stos
push
or
jb
adc
shrl
xor
sub
jae
push
iret
mov
mov
inc
jnp
add
adc
insb
sbb
pop
or
sahf
cmp
xchg
add
pop
push
jl
test
stos
in
xchg
dec
sbb
scas
fiadds
sbb
or
inc
mov
aam
adcb
daa
ljmp
test
and
dec
push
ret
xor
incl
test
js
add
push
adc
les
or
mov
loope
mov
nop
push
sbb
adc
int3
int3
jle
mov
mov
cwtl
mov
loopne
enter
add
lahf
loopne
and
inc
les
cli
add
ret
sarb
popf
rclb
mov
pop
mov
rcl
subb
or
rorl
mov
adcb
inc
fsubrs
cld
jbe
sub
lock
loope
lret
add
mov
outsl
shll
mov
dec
imul
or
andb
push
ret
mov
sub
mov
dec
or
mov
lods
xchg
fsub
adc
sbb
aaa
fnstcw
rorb
mov
mov
cmp
pop
mov
add
insb
add
xor
inc
dec
inc
xor
or
add
orl
pop
roll
and
cmp
cmp
dec
sub
add
push
mov
inc
and
negb
fs
inc
sub
adc
push
add
in
insl
loopne
imul
or
sti
call
lea
xor
cmp
sub
lock
pop
and
fs
inc
push
mov
cmp
test
cli
ret
add
push
jb
mov
cmp
cwtl
pop
xchg
aas
dec
xor
sub
add
sbb
jp
rolb
rol
loop
outsl
pop
sbb
push
adc
mov
clc
addl
inc
mov
push
mov
inc
inc
jp
mov
cli
dec
add
jbe
aaa
mov
add
or
in
test
fbld
mov
je
mov
cmpsb
xchg
ficoml
ds
icebp
out
cmpsb
inc
add
and
stos
icebp
xor
pop
add
dec
inc
pushf
stc
mov
pop
push
cmpb
in
adc
hlt
push
adc
xchg
inc
inc
hlt
inc
sti
pusha
fmull
test
push
push
js
add
scas
inc
aaa
inc
sub
and
test
mov
popa
or
push
or
popa
call
jo
adc
jg
mov
mov
rcr
popa
je
sub
mov
mov
pop
adc
mov
cmpsb
jne
bound
sbb
push
stos
loope
fdivrs
xor
cmc
sub
push
pop
or
in
movsl
fisubs
mov
lods
xchg
push
mov
ss
call
lock
cmp
call
sub
pushf
pop
push
or
cmp
cli
andb
mov
call
mov
jo
jne
inc
mov
inc
lock
inc
mov
ret
push
scas
shrl
out
roll
sbb
sbb
aaa
jg
xchg
aam
adc
aam
call
mov
jmp
xor
mov
pop
sub
out
mov
adc
and
cmp
pop
xchg
adc
jge
outsb
mov
adc
pop
sbb
call
rclb
mov
test
hlt
jmp
aad
xchg
pop
inc
push
mov
pusha
cld
into
add
sbb
mov
loop
sahf
inc
sub
insl
sub
popl
in
add
add
jle
mov
jg
lock
es
and
mov
imul
dec
das
dec
inc
push
adc
pop
sbb
pop
jb
hlt
add
push
outsb
es
std
aas
or
les
jl
loopne
in
pop
movsb
rcrl
test
push
gs
fdivr
inc
loop
sub
call
mov
fists
hlt
pop
test
int3
adc
inc
add
shrl
inc
jne
and
gs
das
stos
adc
ret
xchg
repnz
push
sti
mov
arpl
cmp
jmp
jge
add
push
mov
adc
xor
repnz
mov
adc
add
out
jp
dec
push
ret
loop
lcall
cmp
add
jg
cbtw
fwait
popa
push
add
outsl
out
xor
mov
mov
andb
pop
inc
mov
mov
pop
out
scas
ds
add
mov
add
js
xor
dec
push
xchg
xorb
call
add
sarb
pop
add
or
or
mov
repnz
loopne
push
and
jnp
jb
outsb
les
insl
mov
pusha
push
cmc
aaa
adc
push
test
cmp
lock
pusha
jl
push
mov
adc
js
sbb
in
out
xor
mov
mov
clc
push
pop
jge
inc
adc
dec
clc
adc
mov
gs
addb
jmp
pop
sti
shll
test
mov
sbb
lea
add
pop
fstpt
out
les
add
or
sahf
les
and
add
addb
inc
nop
fs
mov
add
xor
adc
ljmp
adc
cmp
pop
or
add
jb
jle
mov
sbb
pop
dec
pop
adc
mov
push
jecxz
pop
sub
or
xor
or
mov
sbb
sarl
sbb
pop
and
add
push
jg
bound
bound
push
cmc
mov
add
mov
dec
mov
andb
dec
stos
test
pop
push
clc
rcll
inc
xchg
xchg
push
add
shr
je
ret
data16
mov
pop
sub
orl
loope
mov
cmp
mov
mov
bound
or
int3
push
movsb
neg
adc
dec
push
mov
adc
xor
push
mov
shlb
mov
outsb
fistpl
insb
sub
and
ret
add
orb
or
je
inc
add
inc
lcall
pushf
lea
jno
pop
or
sub
pop
cmp
scas
popa
cmpsb
mov
jmp
test
mov
dec
test
imul
xchg
push
rol
push
jo
mov
add
lods
inc
divb
shl
pop
lea
adc
push
inc
cmp
nop
in
fistpl
int
push
stos
dec
faddl
jbe
add
inc
push
or
xchg
mov
mov
inc
mov
push
fmull
test
mulb
inc
push
cld
pop
add
or
pop
inc
test
dec
adc
les
jecxz
shll
sbb
xchg
push
adc
outsl
xor
jnp
add
addr16
repz
das
ss
pop
add
pop
jl
outsl
jmp
xorl
mov
mov
scas
ljmp
add
push
jnp
fcomip
addl
mov
xchg
sbb
cli
gs
gs
adc
jp
into
shlb
inc
pop
sub
push
mov
cmp
lret
mov
sub
and
sub
push
sbb
in
xor
adc
sahf
inc
loopne
int
adc
lcall
into
xchg
loopne
push
mov
outsb
adc
les
adc
das
and
test
adc
fistps
jle
xor
dec
cmpsb
bound
lea
mov
add
and
aad
adc
xchg
and
pop
adc
jmp
pop
gs
in
clc
iret
rorl
mov
lea
jne
fwait
or
fisubrl
dec
dec
xor
ret
push
inc
out
mov
inc
pop
call
push
jmp
push
call
rorb
and
int3
test
insl
cli
mov
pop
mov
enter
cmp
inc
push
mov
dec
jnp
rolb
test
cmp
sbb
dec
data16
lahf
std
cltd
add
sbbl
mov
mov
mov
scas
cmp
je
call
xchg
clc
pop
into
lsl
push
ljmp
mov
ja
inc
pop
sbb
out
mov
jmp
pushf
mov
inc
ret
fcmovu
in
xchg
stos
test
cmp
pop
mov
test
add
or
sub
dec
ret
xor
sbb
fildll
test
push
test
cmpsl
jno
mov
sbb
add
mov
mov
clc
orl
pop
add
loopne
adc
lea
pop
nop
int3
lock
int3
into
add
ss
cmp
in
push
push
or
shr
cmpsl
lea
cli
push
imul
movsb
jmp
and
mov
push
aas
adc
es
out
xor
or
lea
stos
cmp
pop
leave
int3
adc
add
jp
inc
lahf
inc
add
subb
call
mov
fsub
jmp
adc
xor
lock
push
dec
mov
xor
cwtl
xchg
add
shll
in
dec
cld
test
fsubl
ds
jle
outsb
add
mov
mov
scas
inc
mov
pop
aam
call
fdivrl
push
fcoml
adc
lods
sbb
hlt
icebp
popf
xor
adc
push
in
xor
pusha
lea
push
fsubl
pop
mov
icebp
inc
sbb
sbb
mov
mov
xor
roll
clc
enter
cmpsl
rolb
and
insb
rcrb
insb
jne
loopne
out
cli
test
bound
les
fidivs
out
adc
mov
cwtl
cmp
xchg
xor
outsb
ret
lcall
push
ficomps
testl
fistl
add
fmull
outsb
push
sbb
adcb
mov
rcrb
jne
mov
sbbb
add
or
xor
xorl
push
je
mov
adc
es
imul
adc
jb
mov
push
xchg
push
pop
stos
jb
call
mov
mov
loopne
stos
push
fsubrs
sar
loope
push
ret
inc
call
in
sub
andnps
jo
jle
test
outsb
mov
pop
pusha
test
inc
xor
stos
inc
xor
push
ljmp
pusha
ljmp
push
pop
movsb
xor
jp
or
fimull
push
loopne
xchg
pop
dec
mov
and
call
and
add
mov
adc
xor
orl
cli
xchg
ljmp
jbe
or
pop
and
adc
pop
mov
rcrl
je
jne
and
mov
stc
push
add
push
mov
rolb
sbb
enter
push
push
sbb
push
stos
mov
loopne
add
cmp
pop
sbb
dec
ret
daa
mov
roll
loop
adc
push
push
outsl
mov
mov
jl
or
xchg
add
sub
scas
push
mov
rcrb
or
ss
ret
mov
inc
rorb
ret
dec
xor
mov
paddb
test
ficoms
sbb
js
add
push
clc
mov
cmp
divb
jb
fistpll
mov
negb
sub
fs
sti
mov
sub
js
inc
decb
lret
pushf
push
jg
into
xor
xor
enter
inc
ret
sbb
repz
adc
in
ret
lock
adc
adc
inc
outsb
shlb
add
pusha
mov
rolb
add
clc
sbb
idivb
adc
lret
push
stos
lret
jmp
cmp
movsl
cld
movsl
cmp
push
into
insb
in
cwtl
js
or
push
dec
jl
push
pop
fisttpl
mov
mov
js
test
fsub
mov
adc
and
stc
jg
push
jo
clc
pop
je
jo
mov
pop
inc
int3
mov
cmpsl
and
call
cmp
mov
divb
fisttps
movsb
insl
cs
lea
add
cltd
clc
mov
and
out
outsl
lock
cmp
mov
enter
rcr
mov
xlat
adc
xor
push
js
cmpb
inc
int3
outsb
add
xor
scas
xchg
push
push
sub
arpl
shlb
popf
add
mov
inc
aas
or
mov
and
and
incl
add
outsb
xor
dec
jae
mov
push
add
shrb
cmpsl
stos
popa
rorb
movsb
jne
inc
mov
pcmpeqw
push
test
clc
pop
fimull
push
dec
lea
je
cmc
aam
in
out
xchg
or
je
cmp
cmp
rolb
int
mov
lea
xchg
pop
cmp
ret
push
push
xchg
lock
shlb
pushf
dec
lock
divb
or
add
cs
add
mov
inc
mov
shlb
push
or
sbb
test
fwait
cs
or
test
push
inc
outsl
cld
or
ficoml
push
mov
mov
mov
outsl
add
pop
sbb
push
into
sub
push
ss
test
push
lock
movsb
mov
or
add
clc
and
ljmp
xor
push
fdivr
mov
add
lock
cwtl
inc
push
cmpsl
push
push
out
mov
push
xchg
push
mov
sarl
inc
add
adc
stos
xchg
mov
in
outsb
js
jae
cs
imul
repnz
push
cs
xor
jmp
fsubr
mov
add
mov
into
mov
and
out
cli
dec
inc
call
test
xchg
push
push
xchg
mov
push
inc
sbb
mov
xchg
shr
notb
adc
sub
jbe
aam
push
push
or
in
adc
fdivr
xor
pop
jo
pop
mov
ds
add
and
pusha
and
mov
fdivl
sbb
mov
adc
xor
repnz
add
adc
inc
mov
or
mov
jb
adc
std
inc
or
push
int3
cmp
insl
add
pop
pop
add
push
mov
or
rcrb
push
mov
adc
jo
push
stc
sbb
mov
push
ficoml
pop
adc
rorb
mov
decb
sbb
add
mov
jle
mov
push
add
mov
mov
add
xor
and
lea
fmull
icebp
push
add
push
add
es
add
adc
pusha
add
adc
fs
jmp
sti
shrb
sub
or
dec
lret
or
lea
dec
push
jbe
mov
orb
gs
in
pop
idivb
dec
and
add
test
push
add
pushf
mov
add
pop
add
fildl
mov
lcall
cld
lea
popa
inc
lds
lock
add
mov
or
push
dec
inc
mov
sahf
ret
sbb
push
dec
hlt
pavgb
mov
dec
call
push
inc
add
fistl
push
jo
pop
stos
addl
test
cwtl
push
push
mov
cli
xchg
dec
call
push
mov
add
bnd
add
jmp
adc
sbb
inc
test
mov
mov
jbe
scas
gs
clc
push
dec
add
lds
enter
push
cli
and
stos
inc
test
cmp
fcmovbe
in
pop
test
mov
push
aam
fs
int3
mov
fisttps
jo
mov
nop
jmp
or
dec
mov
add
loopne
xor
xchg
test
lock
addb
push
lcall
lret
xchg
nop
les
mov
add
adc
inc
stos
rcrb
test
sbb
sub
add
xor
push
in
push
lcall
add
arpl
mov
repnz
mov
push
stos
loopne
pavgw
addb
call
addl
cwtl
bound
xchg
mov
fs
enter
xorb
add
rolb
test
or
add
inc
push
mov
movsl
insb
jmp
orl
jne
test
adc
xorl
pop
insb
pcmpeqb
adc
rorb
mov
dec
nop
xchg
mov
lea
add
mov
pop
ficomps
lcall
test
fcomp
cmp
sub
push
sbb
sbb
popa
ljmp
imul
aam
into
sub
orb
xchg
xchg
sti
or
sub
add
outsl
popa
fildl
adc
insl
adc
icebp
inc
jmp
push
push
push
adc
sub
mov
movsl
mov
pop
mov
push
imul
aam
mov
inc
lods
shr
inc
inc
mov
enter
or
push
inc
std
sbb
mov
sahf
and
cmp
xor
add
rorb
dec
pusha
aam
add
dec
inc
xlat
sbb
add
add
inc
add
ljmp
add
push
fbld
push
jmp
xlat
fimuls
inc
mov
adc
es
fsub
mov
jbe
push
pushf
lret
mov
add
clc
or
clc
mov
xor
cmp
ljmp
ret
sbb
mov
xor
js
shufps
mov
xchg
sub
movsl
stos
and
mov
pop
adc
push
pusha
ljmp
sub
sarb
jmp
in
inc
out
push
js
fisubrl
test
movsb
out
adc
in
sbbb
push
sbbl
add
aam
int
push
sbb
pop
add
mov
push
cmpxchg
pop
xlat
jmp
mov
add
or
push
mov
aam
add
mov
adc
add
add
jb
rcl
std
aas
jl
jp
dec
xor
sub
push
or
mov
ret
adc
sbb
push
repz
mov
jo
dec
les
insl
push
or
and
popf
mov
mov
fadd
pop
xor
sbb
pusha
mov
cmpsb
insl
push
outsb
sub
push
mulb
incl
in
xchg
and
inc
adc
inc
ja
js
jb
push
mov
dec
inc
fildll
ret
cmovo
adc
mov
pop
cmp
call
pop
mov
pop
ljmp
dec
orb
in
sub
mov
pop
vmread
dec
fwait
mov
je
jnp
inc
push
or
lcall
clc
pop
ds
push
daa
nop
in
sarb
imul
mov
jg
mov
call
hlt
push
testl
fs
dec
hlt
ret
mov
int3
adc
sbb
push
test
push
pop
inc
or
or
mov
sar
inc
les
adc
rclb
sub
sub
in
sbb
mov
fmuls
xor
add
mov
shlb
cmp
push
imul
sub
clc
jo
pushf
loop
add
adc
xor
lret
adc
shl
in
nop
jbe
arpl
add
add
aam
mov
pop
or
mov
mov
sub
lcall
test
mov
mov
add
jbe
add
mov
push
aad
pop
xchg
roll
test
xchg
in
xor
ja
xor
scas
sarb
jmp
sub
pop
or
decb
movb
push
jnp
loopne
ret
xchg
fmuls
movsl
cwtl
loop
ret
mov
mov
testb
mov
cmp
test
leave
or
fwait
and
les
inc
push
lea
andl
popa
jl
rorl
add
mov
sbb
gs
bound
sub
dec
jmp
push
sub
gs
aad
data16
inc
jmp
shlb
sarb
push
adc
lcall
ja
sbb
sbb
out
dec
test
shrl
outsb
loope
dec
add
or
xor
pusha
xchg
fdivrp
jle
mov
into
inc
push
in
repz
sbb
and
push
add
gs
push
popaw
push
call
arpl
sahf
cmpsb
jle
in
ret
mov
fidivs
ss
rolb
lock
mov
out
xchg
add
add
inc
lcall
pushf
clc
xor
dec
ret
xor
insb
pusha
xchg
push
adcb
insl
outsb
inc
mov
inc
adc
add
pop
test
shr
ret
mov
push
dec
cli
mov
loope
ljmp
add
push
gs
es
insb
leave
imul
inc
imul
insb
orb
imul
cmp
aam
out
bound
mov
call
ret
sub
fiadds
andb
inc
daa
nop
push
lock
mov
in
cmp
mov
les
fs
push
cld
dec
or
decl
ret
test
xor
mov
jae
mov
dec
xchg
das
mov
push
pop
cmpb
jbe
lcall
sbb
rcl
sbb
sub
inc
imul
ret
shlb
lea
cmp
mov
sub
and
not
inc
pop
jns
jg
mov
jae
sbb
je
sub
in
pop
sub
aaa
adc
jg
add
inc
push
pusha
es
or
inc
mov
sarl
mov
test
push
cmpsb
push
jo
inc
pop
pop
pusha
xor
adc
sarb
and
pop
cmpsb
sbb
iret
jb
loop
cmp
movsb
push
xchg
sbbl
adc
xchg
ljmp
aam
sub
stos
shll
int3
pop
or
push
adc
outsl
pop
sbbb
inc
xor
shrl
nop
rcl
outsb
shl
ds
dec
fsubs
iret
fdivrs
xor
rclb
sub
data16
xor
add
stos
fcos
xor
into
xchg
dec
rolb
les
add
mov
xor
outsl
aas
xchg
cmp
mov
add
paddsw
aaa
sti
ja
lock
int3
movsb
push
sar
pushf
push
fsubrs
push
ficoms
in
inc
xor
jg
xor
adc
mov
loop
cmp
clts
mov
push
jecxz
or
add
shr
sub
add
out
jae
xchg
push
test
orb
les
mov
inc
mov
jle
xchg
js
xchg
sub
lods
mov
push
push
pop
adc
nop
pop
aam
xchg
push
test
movzbl
sbb
xor
icebp
add
push
mov
sub
inc
or
dec
dec
icebp
inc
sbb
push
call
dec
or
repz
or
adcl
add
adc
mov
inc
mov
pop
add
inc
std
das
dec
add
lea
push
test
jne
jg
rorb
cmpsb
pop
imulb
test
mov
decl
add
rol
test
dec
add
inc
or
mov
or
lods
xor
pop
cmc
inc
mov
in
stc
mov
jb
dec
test
xor
mov
test
cwtl
mov
mov
rolb
mov
addr16
cmpsb
xchg
outsb
dec
inc
jne
xor
add
xchg
lock
stc
mov
sbb
push
jno
cltd
clc
xor
sbb
dec
faddl
fst
addb
pusha
int
mov
out
sbbb
add
mov
push
test
dec
push
dec
jb
dec
int
std
xor
ss
push
test
repnz
nop
clc
push
nop
or
push
pop
stos
cmove
test
cs
pop
inc
int3
xchg
jmp
cwtl
mov
and
inc
sbb
sahf
aam
mov
fdivl
fcoms
dec
movb
and
test
fisttps
adc
in
xor
mov
jmp
push
test
mov
pop
dec
jo
insb
and
andb
jne
sub
sub
movsb
xor
push
dec
sub
test
loop
jo
push
xchg
jo
cmp
clc
dec
sarb
xor
mov
or
les
push
sub
outsb
leave
dec
rclb
xor
or
outsb
and
add
lcall
mov
in
or
xorb
and
push
mov
mov
popf
out
shrb
repnz
add
fmull
add
ret
stos
int3
sbb
cmpsl
test
add
loop
pop
mov
sbb
stos
lods
cmp
sbb
dec
test
inc
mov
imul
push
insb
jl
call
inc
and
aaa
dec
mov
push
mov
dec
scas
ljmp
push
mov
ret
icebp
int
jne
movq
stos
jae
add
dec
mov
iret
xor
or
test
add
mov
in
dec
or
xchg
call
jle
out
clc
lea
pop
shlb
addb
add
mov
mov
xchg
and
sarb
sub
es
push
bound
inc
sbb
add
popf
test
test
out
rorl
movsb
pop
fwait
adc
jne
cwtl
fsubp
clc
jle
cli
pusha
inc
mov
sub
sbb
sub
hlt
out
push
adc
pop
or
bound
mov
mov
cmp
incl
push
dec
add
stos
add
loop
fdivs
jl
nop
mov
push
pusha
adc
in
rcrb
push
loop
mov
aam
lahf
outsl
sbbb
test
fldt
icebp
popa
test
push
mov
jbe
insb
jge
xchg
dec
mov
dec
daa
adc
lods
dec
xchg
xchg
jle
cmc
pop
into
pop
dec
pop
inc
push
or
add
jmp
cmp
ror
aas
test
mov
add
or
inc
outsb
imul
ret
int3
repnz
mov
cs
pop
push
mov
stc
inc
mov
mov
jb
xchg
push
xchg
inc
push
jge
les
inc
pop
fs
in
push
cld
xchg
mov
mov
inc
fildl
test
loopne
add
insb
data16
add
les
pop
enter
out
jbe
push
push
mov
testb
fcmovnb
jle
out
jb
scas
and
sahf
pop
mov
call
aad
xor
inc
mov
adcb
push
add
mov
inc
clc
add
pusha
and
and
fisubrl
mov
push
ss
mov
rol
fnsave
mov
dec
or
hlt
and
cld
inc
mov
insl
inc
sub
bound
ficomps
mov
repnz
cmc
gs
call
lock
shlb
dec
bound
lods
leave
push
adc
mov
inc
imul
sbb
push
in
inc
cmp
mov
subb
andl
or
loopne
cmp
add
push
mov
pop
adcb
ud0
mov
xorb
es
sti
push
shlb
push
and
mov
mov
fbstp
lods
push
aas
inc
movl
push
fildl
ss
in
add
sub
mov
add
push
int3
cmpsb
js
loope
idivb
test
mov
mov
jne
jb
lea
rol
sbb
mov
pop
and
fwait
hlt
jb
or
mov
rcrb
xor
dec
pop
ds
jo
lock
mov
sbb
call
pop
push
jg
cmp
shrb
cmp
jl
movsb
lods
dec
pop
gs
inc
mov
call
cmp
add
inc
fwait
mov
push
dec
and
sbb
ret
pushf
sbb
aaa
or
ljmp
subb
mov
fstpt
dec
test
imul
jb
mov
das
mov
and
in
dec
test
outsb
push
insb
mov
fsubs
mov
or
mov
mov
pop
ja
push
inc
roll
std
cltd
adc
add
or
push
jge
or
inc
mov
stos
cmp
mov
adc
loopne
or
ret
inc
cld
hlt
in
rcll
jne
hlt
inc
push
loopne
push
ret
and
push
dec
leave
sbb
adc
cmc
mov
add
int
ret
lea
loopne
xor
push
inc
pop
mull
add
fsub
cld
dec
inc
pop
push
add
sahf
sub
addl
jge
addb
pop
push
inc
in
sub
jne
xor
inc
mov
js
and
xor
pop
es
xor
sbb
cmp
push
sbb
mov
or
adc
scas
je
lods
mov
movb
test
fistps
add
fsubs
test
pop
imul
or
pop
mov
fidivrl
out
movsb
in
add
xchg
push
cmp
in
dec
or
inc
mov
cli
push
daa
cwtl
movnti
repz
rorb
cwtl
inc
mov
push
outsb
or
mov
addb
adc
inc
sub
mov
mov
lret
pusha
aad
mov
jae
mov
add
fwait
or
or
pop
mov
mov
subl
lcall
incl
jmp
jmp
jge
or
jne
lods
stos
or
call
xor
mov
decl
test
jp
scas
and
dec
out
jmp
notb
pop
mov
jb
rcll
lret
inc
ja
sbb
jno
mov
jmp
push
fs
push
or
fisttps
pop
jle
pop
jmp
mov
stos
xchg
mov
fldenv
hlt
push
cwtl
pop
mov
add
fidivs
jo
idivb
mov
sbb
push
mov
adc
pop
leave
push
shrb
xor
sub
ds
pop
or
inc
push
int3
lahf
in
icebp
xchg
mov
mov
push
pop
push
jle
mul
add
inc
out
aas
std
inc
test
sub
or
pop
pop
pop
mov
xor
pop
adcl
jne
pop
loopne
xlat
inc
add
add
inc
test
into
cmp
rol
and
mov
xchg
dec
and
mov
fcoms
or
movsb
mov
mov
popl
pop
sub
adc
je
fdivrs
aam
testb
push
bound
loope
sbb
mov
cld
mov
xor
sbb
rclb
test
adc
cmpsb
push
adc
jb
xor
clc
fldt
xor
sbb
inc
mov
stos
push
cmp
xchg
in
xor
fstl
outsl
stos
aas
push
sub
insl
mov
adc
sbb
jmp
cli
push
arpl
test
sbb
sbb
pushw
or
adc
add
pop
scas
addb
pop
ja
ljmp
inc
enter
ds
xlat
stos
insl
loopne
enter
data16
jl
push
pop
add
pusha
inc
fwait
icebp
popa
pop
stc
in
inc
outsl
cmp
and
add
push
fimuls
imul
and
push
inc
ret
call
dec
cli
lds
andb
sbbb
mov
jae
or
aad
jae
rorb
dec
push
ret
adcb
xor
jecxz,pn
test
pop
je
add
test
sub
jmp
fstpt
pushl
call
pop
mov
sti
outsl
mov
fsts
divb
push
mov
jge
xor
loope
imul
pop
cmp
enter
xchg
and
rcrl
test
add
xor
loop
mov
mov
out
loopne
pop
ret
dec
scas
sbb
aam
ljmp
jb
insb
mov
cld
fs
cltd
sarb
xor
rcr
xor
sub
mov
ja
movsb
lcall
test
mov
jmp
xchg
jo
adc
inc
test
std
loop
ss
pushl
nop
decl
pop
test
orl
outsl
xchg
and
inc
mov
test
adc
jl
fwait
shlb
in
xchg
dec
xchg
sub
mov
test
jnp
aas
push
sub
push
pop
push
call
gs
sub
pop
push
push
mov
cwtl
mov
xor
ret
stos
push
jne
outsl
cmp
jbe
sub
inc
push
ljmp
enter
fdivs
dec
leave
je
jb
push
mov
in
call
jge
add
or
inc
sbb
push
push
mov
leave
lea
fsubl
or
cs
jne
mov
lods
std
scas
inc
sub
or
jb
repnz
loopne
mov
cmp
jno
adc
xor
orps
shrl
pop
mov
icebp
jmp
les
pop
cmc
pop
jmp
scas
mov
fbstp
inc
push
mov
cmp
add
clc
iret
outsb
mov
fldcw
ds
dec
loopne
fimull
xor
push
in
nop
test
das
rorl
or
adcb
pop
or
sbb
or
lret
or
fidivrs
hlt
inc
adc
push
sahf
call
popa
mov
xor
dec
adc
push
adc
aad
or
xor
andl
loope
sbb
mov
add
sar
sbb
adc
loope
xor
jmp
mov
jo
mov
sub
xchg
add
jo
fsubl
jne
sbb
adc
ret
mov
idiv
pop
cmp
jo
cwtl
call
rcl
or
jbe
stos
in
cld
sahf
lss
loop
call
test
cmp
push
into
xor
dec
cwtl
jbe
mov
mov
mov
jno
hlt
out
shll
stc
sub
std
xchg
rclb
in
adc
add
lock
or
cmp
call
imul
mov
sub
or
out
cld
aas
loopne
loop
inc
inc
mov
call
adc
movsb
push
cmp
scas
fcmovne
xchg
pop
add
add
jb
add
jo
add
and
fiadds
cmp
inc
das
sbb
pop
push
pop
std
inc
movsl
cmp
push
cmp
sti
dec
shll
inc
cmp
js
dec
pop
mov
inc
dec
dec
out
shl
mov
inc
rorl
mov
adc
ss
add
sub
stos
xorb
mov
lcall
push
and
or
insb
jo
test
sbb
cmp
ljmp
add
fs
lock
and
jl
pushf
rolb
sub
mov
jmp
mov
add
enter
jne
jo
add
mov
loop
sbb
rorl
lock
xchg
jp
sbb
out
xchg
icebp
or
or
mov
lock
add
pop
sar
fiaddl
sarb
jl
jbe
nop
lcall
dec
or
out
xor
and
daa
xor
xor
pop
inc
sbb
jb
inc
add
cmp
pushl
add
sarb
aam
dec
cmp
cmp
test
cmp
call
xchg
dec
icebp
mov
mov
shlb
aam
not
cmc
adc
ret
mov
dec
cmpl
add
pop
insb
inc
int3
mov
cld
filds
cld
sub
mov
push
sbbb
jns
leave
mov
mov
incb
test
inc
out
inc
mov
inc
push
outsl
xor
mov
data16
aam
jo
data16
cmpl
push
lahf
nop
inc
mov
outsl
ja
lock
mov
add
int3
mov
shll
outsb
jbe
addl
nop
xchg
add
outsb
adc
or
lods
push
inc
les
ds
xor
insl
mov
push
xchg
rolb
jbe
aaa
cmpl
mov
mov
jge
ds
aas
mov
outsl
call
mov
cmp
mov
fildll
fnstenv
adc
testb
movsb
mov
cmp
inc
push
push
mov
inc
fcoms
pop
fimuls
cmp
ficomps
inc
sub
add
hlt
inc
jmp
je
or
sub
inc
push
push
clc
push
mov
pop
push
xchg
pop
adc
fdivs
in
scas
mov
pop
push
and
fidivrs
adc
dec
inc
flds
push
popf
cmp
int3
push
ret
dec
or
cmc
jg
mov
or
inc
push
dec
pop
jg
push
or
pop
test
enter
adcb
push
dec
dec
push
mov
test
dec
inc
pop
test
lds
sbb
out
subb
cli
push
ficoml
push
inc
push
pop
inc
mov
push
dec
jge
sbb
inc
add
or
mov
add
push
push
mov
ljmp
jecxz
std
xchg
jbe
test
in
out
cmp
ljmp
xor
add
jp
call
xchg
scas
sub
mov
sbb
insb
jae
insl
mov
stos
ret
rclb
outsb
ljmp
inc
sbb
imul
push
repz
cld
mov
sbb
repnz
shrb
mov
jmp
daa
leave
test
pushf
add
test
addl
dec
add
mov
dec
idiv
leave
cmp
inc
push
js
or
cli
decl
loop
xor
mov
xchg
adc
push
mov
movsb
jbe
or
xchg
dec
stos
jg
ret
pop
mov
sar
faddl
jb
lea
aaa
adc
shll
movsb
xchg
cmpsb
and
data16
xor
pop
mov
stos
fbld
sbb
sub
icebp
int3
cmp
mov
cmp
cli
fs
call
sub
mov
lods
out
jmp
inc
jmp
test
xor
call
sub
sub
mov
loopne
add
fisubl
mov
test
cwtl
mov
add
sti
jb
and
adc
mov
push
cmp
xchg
mov
bnd
std
or
roll
cld
inc
jmp
sub
faddl
ljmp
pusha
push
rcrb
cmpsb
inc
mov
xor
sub
xchg
clc
pop
loop
icebp
scas
jmp
jne
mov
pusha
and
push
pop
mov
xor
add
mov
mov
push
popa
push
les
mov
jns
orb
fidivs
je
jecxz
mov
loope
cmp
pop
rolb
xlat
add
bound
cmpsl
adc
jne
adc
xchg
pushf
js
je
jmp
add
jp
mov
leave
push
ja
jo
fidivs
push
cmc
jle
sbb
in
sarb
adc
and
push
loopne
clc
or
mov
adc
inc
addb
stos
jmp
inc
mul
addb
ficoml
sbb
push
xor
and
inc
pop
sahf
mov
add
cmc
shr
jecxz
cmp
enter
stos
pusha
mov
les
push
cs
xchg
cmp
inc
inc
sti
lcall
sub
mov
and
int3
jge
stos
inc
sbb
inc
hlt
jg
xor
xor
nop
dec
dec
push
jne
divl
push
cmp
push
incl
scas
jne
sbbb
dec
std
cli
push
ljmp
rorl
add
jecxz
das
mov
xor
movsb
cmp
decl
aam
mov
mov
push
xchg
enter
push
roll
in
jmp
pop
outsb
mov
push
scas
clc
ds
inc
and
sub
jae
push
xlat
xor
dec
dec
adc
sahf
xor
push
ret
ds
mov
ljmp
repz
data16
or
dec
movsl
rol
add
adc
les
xchg
jno
out
mov
pushf
dec
add
mov
jecxz
xor
inc
fadds
inc
mov
orl
push
ret
sbb
pop
test
jbe
push
scas
shlb
mov
sbb
lock
mov
or
loop
in
mov
sarb
push
mov
add
js
pop
cmp
inc
jmp
push
pusha
sbb
sub
scas
xor
and
imulb
clc
orl
int
in
xor
push
inc
es
push
push
je
inc
dec
dec
icebp
push
adc
add
dec
mov
fs
pop
mov
and
out
movsb
sub
adc
shlb
mov
sbb
cmp
jnp
dec
mov
dec
mov
dec
xor
shr
mov
dec
test
fmull
icebp
mov
and
cli
lea
cltd
cld
cld
pop
xchg
lock
addr16
push
mov
or
mov
add
pop
jo
adc
or
cmp
jo
fs
setle
sti
add
mov
adc
jp
stos
movsb
sbb
add
add
or
add
bound
movsb
inc
xor
or
push
ret
xor
pop
adc
jmp
xchg
lods
add
pop
lret
add
or
jne
test
or
push
out
pop
test
or
daa
mov
icebp
rorb
les
es
mov
mov
xchg
cmpb
popf
sbb
push
je
je
jbe
or
jns
call
push
adc
push
and
jg
mov
jle
jmp
inc
inc
sbb
xor
test
adc
xchg
mov
add
add
jl
sub
decl
jne
rol
inc
call
fdivs
mov
push
pop
movsb
orl
mov
sbb
mov
pop
inc
inc
shlb
ljmp
roll
decb
arpl
jb
into
add
clc
mov
mov
cwtl
fldl
test
outsl
inc
cld
sahf
and
clc
lods
fbld
push
sub
mov
ss
inc
test
xorl
lcall
pop
and
lea
push
repnz
ret
test
inc
mov
bound
dec
jmp
sbb
inc
jne
shlb
sub
inc
or
sbb
sbb
out
pusha
mov
inc
push
sub
mov
inc
and
lea
cmpsl
sar
xchg
adc
loopne
add
or
inc
or
repnz
dec
ret
movl
cmp
lret
ljmp
inc
adc
mov
push
shlb
push
dec
clc
aam
jg
adc
mov
daa
jnp
xor
lock
std
pusha
pop
orl
decb
insl
xor
test
add
insb
xor
ret
mov
adc
ret
scas
pop
fstl
jmp
mov
add
lock
lods
cwtl
hlt
add
iret
or
mov
out
push
pop
or
inc
and
mov
push
mov
jnp
and
mov
sahf
dec
fldt
adcb
push
mov
ret
push
shr
js
jg
fmull
sub
filds
push
mov
push
jbe
inc
das
mov
mov
pop
fwait
enter
adc
and
push
inc
inc
jp
ficompl
xchg
pop
sub
mov
sbb
or
rclb
pop
scas
push
divb
lret
out
xchg
xchg
and
jge
pop
je
mov
addr16
ljmp
push
outsl
fimull
rol
call
das
jge
pop
adc
mov
add
add
inc
stc
mov
scas
stos
and
or
jg
push
adc
mov
rorb
xchg
mov
divl
ss
enter
fildl
jb
push
rorl
inc
repnz
add
or
sub
pop
call
dec
push
loopne
mov
push
cli
clc
mov
mov
test
pop
inc
sbb
inc
loop
rcl
je
mov
mov
jmp
rolb
inc
push
cld
add
rolb
mov
and
js
nop
dec
bound
adc
dec
les
inc
inc
aas
loopne
lods
push
jecxz
rcl
jmp
cmp
jle
in
add
ret
lea
les
mov
dec
inc
cmp
push
inc
push
xlat
loop
or
sub
push
xchg
sbb
mov
fstpt
push
sub
gs
lods
add
sbb
dec
dec
mov
mov
data16
mov
inc
mov
dec
sub
cmp
clc
or
imul
pop
out
cmp
mov
and
xchg
loop
mov
cli
adc
ret
push
loop
sub
jle
and
lret
inc
cli
push
pop
dec
jecxz
test
clc
mov
cmp
push
xor
leave
xor
and
and
jle
lock
adc
mov
pop
lea
inc
lds
ret
std
loop
cwtl
in
scas
call
mov
inc
sub
inc
ret
sbb
loope
ret
sub
imul
sbb
sarb
cli
push
lahf
ss
shr
sub
lock
add
roll
test
out
outsb
rclb
sahf
fadds
mov
pushf
push
test
mov
test
mov
inc
es
sbb
sub
jmpw
sbb
add
push
sub
rolb
shll
js
test
cmp
add
jo
cli
push
aam
jno
fldcw
cmp
adc
cmc
push
lea
mov
adc
push
add
decl
sub
ja
xchg
push
adc
cmp
sbb
lret
xchg
test
dec
insb
push
adc
adc
loop
or
call
adc
das
add
push
jbe
sarb
and
push
pop
pop
call
jmp
nop
jnp
rorl
jle
mov
cmc
jo
jle
gs
and
test
jbe
cmc
arpl
stos
into
in
pop
mov
sub
cmp
popa
xchg
mov
or
inc
call
fwait
rol
mov
lock
popa
and
or
dec
cmpb
dec
xchg
cli
xchg
mov
ret
sub
loop
cmp
add
sub
add
fisubrl
dec
je
inc
mov
lods
in
rorb
int3
ret
call
mov
je
mov
shrb
pushf
pushf
jp
jg
sahf
add
jle
mov
sub
xchg
test
xchg
lret
lock
fisttpl
push
icebp
inc
mov
add
add
push
enter
xchg
cmp
aam
push
add
xor
sbb
aad
add
or
leave
sub
add
pop
jmp
push
js
pop
test
out
and
sub
and
int3
cmp
mov
lcall
out
setbe
fdivs
jb
inc
mov
imul
push
popa
sub
fimuls
mov
and
adc
adcb
add
xchg
sbb
int3
inc
or
leave
jmp
dec
or
push
call
loopne
pop
int3
jmp
xor
loop
ret
decb
sub
movsb
aas
and
pop
add
cmp
jl
loop
ss
or
push
fldcw
movsb
and
call
fcmovnbe
mov
and
dec
mov
xor
cld
adcb
mov
std
fs
bound
jl
fwait
mov
push
insb
inc
dec
push
call
jo
inc
sar
mov
loopne
je
stc
ret
add
or
shll
ljmp
decb
or
add
push
cmp
xor
es
add
mov
nop
or
dec
push
bound
mov
cld
aaa
sbb
jae
adc
loopne
pop
add
sub
xchg
iret
aam
inc
daa
mov
fdivl
fs
push
push
pushl
pop
push
test
pop
mov
lea
and
out
jae
mov
mov
mov
shlb
cmpsb
pop
les
xchg
and
jecxz
mov
dec
testl
pop
nop
sahf
imul
pop
cld
adc
enter
add
xor
xor
imul
mov
loop
lcall
rclb
adc
jl
or
inc
mov
test
mov
lods
call
mov
add
aam
incl
orl
and
jmp
adc
cmpsl
mov
shl
mov
xlat
mov
pop
incl
sbb
add
in
rcrl
scas
dec
cld
test
data16
push
pop
je
es
push
or
pop
pop
jmp
pushf
push
inc
scas
mov
push
jbe
sbb
and
or
das
push
push
fimuls
decb
dec
inc
data16
mov
mov
pushl
or
ret
pop
sbb
mov
mov
and
scas
es
je
jo
les
loop
incb
xlat
test
mov
mov
popf
cli
mov
push
mov
cmp
ror
inc
in
inc
repnz
aas
sbbb
adc
ds
fadd
dec
lods
mov
mov
xor
push
push
or
lds
nop
mov
sbb
aas
lcall
sbb
stos
push
adc
sub
in
mov
push
add
mov
sub
into
dec
or
outsb
outsb
popf
mov
sub
xor
outsl
fisttpl
inc
insb
outsl
lock
sub
shl
pop
push
stos
xchg
stos
add
js
in
mov
test
ljmp
mov
rorl
rcrb
ljmp
xchg
xor
push
pop
pop
enter
xor
and
and
push
lcall
je
fisttpl
or
or
sarb
ss
xor
push
mov
sbb
push
xchg
add
xchg
cmc
sbb
filds
js
and
lods
loop
fs
ljmp
jmp
inc
ds
jmp
lods
sub
jae
or
pop
test
inc
ss
adc
fwait
je
mov
mov
sub
jo
stos
mov
mov
jecxz
sub
mov
lock
lods
bound
mov
or
adc
fnstsw
xor
sbb
in
imul
adc
mov
outsb
cmp
add
lods
mov
jl
push
bound
add
pop
adc
cld
push
cmpsb
add
shrb
sbb
pusha
loope
xor
or
mov
mov
mov
lret
push
xchg
lcall
sbb
pop
je
pop
adc
mov
cmp
and
cmp
inc
xor
shlb
sub
int3
rcll
adc
and
mov
fiadds
add
jp
mov
insl
xchg
mov
jmp
jbe
fildl
add
mov
lea
sub
loop
add
push
mov
loopne
or
cmp
pushf
inc
mov
fldt
stos
outsb
mov
jmp
je
push
push
testb
pusha
xchg
jle
negb
mov
dec
out
insl
je
nop
cwtl
push
dec
jle
add
insb
pop
inc
or
ja
cmp
sbb
add
dec
cld
xor
lds
mov
sub
imul
enter
and
sbb
adc
shlb
inc
fmuls
cwtl
jbe
aam
sub
or
test
inc
stos
jmp
adc
dec
hlt
dec
sbb
adc
push
pop
push
ficomps
or
rclb
inc
or
je
xchg
dec
adcb
mov
leave
lods
jg
cmpsb
cmp
mov
roll
mov
test
cmp
adc
adc
inc
push
xchg
loopne
and
addr16
or
loop
push
or
scas
addb
stc
or
xchg
pushf
les
jge
mov
rcr
mov
movsl
fcomi
fisttps
add
adc
pop
jne
js
push
outsb
jecxz
push
mov
jg
cmp
sub
xchg
rorb
leave
xchg
pop
aam
push
jl
int3
lods
subl
js
movsl
dec
or
adc
leave
in
jg
notb
xor
loopne
add
inc
mov
mov
push
xchg
or
imul
out
mov
fs
std
cmp
and
add
pop
sub
popa
mov
and
and
sarl
inc
cli
pop
push
adc
mov
adc
jp
xchg
fsubs
or
push
aam
lahf
out
xor
or
pop
push
ja
ljmp
jmp
imul
mov
andb
test
cmpsl
jle
mov
cwtl
xor
test
or
and
jnp
mov
xchg
mov
mov
sub
mov
or
mov
mov
int3
or
mov
mov
and
outsl
mov
inc
std
dec
push
push
data16
add
int3
sub
push
stos
test
inc
gs
cmpsb
into
addb
lods
add
cwtl
nop
sub
sub
mov
hlt
adc
add
pop
into
and
in
mov
test
add
mov
or
lds
sbb
shlb
inc
lds
lods
and
aaa
or
incb
nop
pushf
test
int3
adcb
cltd
insb
into
or
in
push
push
call
clc
push
push
mov
push
cmp
roll
cmc
cmpl
je
mulb
adc
or
xor
mov
pop
int3
add
jo
mov
popa
mov
sti
and
or
dec
mov
push
push
pop
push
ret
push
and
incl
dec
cld
sub
mov
mov
and
sbb
jmp
adc
bnd
cltd
clc
cltd
mov
jb
sbb
js
xchg
out
mov
pop
pop
or
std
xor
dec
insl
adc
pop
ljmp
xchg
movsb
sahf
mov
mov
test
nop
jbe
sahf
or
incb
scas
xchg
shrb
push
in
dec
fsubrl
pusha
mov
movsl
xchg
add
sub
add
dec
movsb
cld
inc
test
adcw
cld
aas
les
inc
mov
add
push
push
mov
cld
add
push
xor
pop
xor
notb
cmp
xor
cmp
jne
in
int
dec
cld
cmp
push
bound
test
outsl
pusha
loop
and
xchg
jg
ja
clc
aaa
push
ret
cs
test
jne
mov
jmp
cmc
jg
test
in
adc
pop
inc
shrb
aaa
jge
push
add
or
jb
inc
push
imul
scas
cmp
daa
bound
inc
shrb
push
jb
call
jb
sti
cld
cld
dec
add
std
mov
add
lods
hlt
rolb
ret
or
cmp
rcll
adcb
in
or
andb
in
or
and
fnstcw
roll
jecxz
push
ljmp
setae
pushl
loop
in
xor
lea
adc
adc
adc
clc
mov
fdivl
gs
sub
sbb
int3
push
clc
int3
inc
inc
mov
test
pop
fldt
packssdw
mov
das
orb
iret
cmp
pusha
jge
rcll
shlb
sbb
add
fnstcw
inc
aas
add
xchg
daa
test
loopne
inc
mov
jge
lret
rcl
mov
mov
popf
aam
xlat
lock
imul
and
xor
stos
push
dec
add
adc
add
in
int3
mov
ret
xchg
add
outsb
adc
mov
nop
push
lods
lar
or
sti
sub
aaa
leave
lea
fdivs
mov
push
xor
popf
push
push
leave
clc
sub
xor
pop
pop
jb
adc
cmc
mov
test
adc
and
cmp
xor
loopne
push
js
call
inc
subl
add
adc
subb
idivb
lods
adc
xor
adc
adc
mov
cmc
mov
and
sbb
add
loopne
dec
out
les
add
inc
xor
push
rolb
pop
push
mov
inc
loopne
fbld
movsb
add
orl
sbb
add
je
clc
jmp
push
addl
mov
lret
jno
inc
in
lcall
test
push
xchg
add
pop
aad
add
mov
or
shrl
inc
push
clc
pop
or
lcall
and
mov
adc
or
adc
je
mov
dec
fadds
sahf
xchg
xchg
push
and
mov
pop
push
inc
add
lahf
pinsrw
mov
push
insb
jge
ja
add
call
add
rorl
push
sub
push
dec
add
cmp
test
jae
imul
jbe
fadds
mov
loop
movsb
subb
insb
repnz
xchg
inc
add
imul
jbe
mov
pushf
call
int
cwtl
into
pop
push
aam
adc
enter
push
gs
int3
testb
dec
jmp
faddl
add
pop
hlt
inc
imul
pushl
sbbl
add
shl
insb
arpl
pop
mov
fldt
add
xchg
rclb
mov
mov
xchg
outsl
add
int3
inc
adc
fwait
in
inc
adc
push
fs
mov
mov
test
loop
fildl
pop
rolb
mov
xor
popa
loopne
enter
iret
or
add
cmpb
das
in
mov
push
pushl
pushl
inc
sub
add
aas
xorl
pop
adc
aam
dec
mov
push
loope
rcr
shll
lret
push
sub
mov
dec
rolb
es
xor
dec
lock
rorb
or
add
push
aam
pop
dec
jno
dec
lods
jb
mov
push
pusha
out
in
pop
pop
ja
mov
scas
or
movsl
and
orl
int3
es
xor
addr16
rclb
jecxz
sbb
fistl
gs
sbb
ljmp
xor
and
enter
cli
pop
shlb
rolb
xor
xor
fimull
loopne
sti
add
dec
dec
adc
and
loopne
inc
add
sbb
mov
add
jae
dec
loopne
ljmp
int3
test
add
std
push
adcb
lock
sub
je
mov
mov
mov
xchg
add
sub
jmp
inc
pushf
cld
lret
adc
popa
mov
pop
xor
test
sbb
mov
inc
jae
stc
dec
inc
and
push
test
test
mov
jne
sub
add
push
je
xchg
and
mov
dec
ret
cli
es
clc
jmp
add
adc
leave
and
fimull
fcomip
jae
mov
sbb
xor
les
mov
in
dec
jge
jne
lock
add
xchg
cmp
clc
pop
roll
orl
rolb
sub
adc
mov
test
je
cmp
pop
mov
pop
and
bnd
pop
fnstcw
pop
shll
jmp
adc
jle
pop
cmp
scas
sbb
hlt
adc
jne
dec
cwtl
sti
js
ja
inc
aam
scas
sbb
push
mov
and
movsl
mov
jp
inc
lds
test
test
dec
add
adc
fidivrl
push
mov
cmp
cmpb
mov
fiaddl
add
sub
test
aam
push
cld
mov
dec
dec
lods
pop
cmp
arpl
pushl
lcall
add
cmp
push
mov
sub
push
rclb
mov
mov
sbb
out
push
aas
and
sub
add
scas
xchg
mov
cld
outsl
call
and
or
mov
mov
sbb
sbb
mov
mov
mov
push
inc
push
int3
push
jmp
loopne
add
add
or
jl
lock
cld
lock
insb
xor
repnz
stc
imulb
pop
mov
cmp
dec
dec
es
fsubp
push
mov
sahf
int
pushf
pop
rorb
sbb
test
imul
psubsb
add
out
xor
paddd
pusha
xlat
fistpll
mov
sarb
lods
outsb
adc
je
push
subb
fisttps
mov
fsubs
leave
inc
lea
sahf
lock
sbb
pop
sbb
inc
push
add
ja
fcomi
jbe
pop
clc
mov
mov
fcos
in
hlt
mov
gs
adc
xor
imulb
push
inc
int3
cld
mov
outsl
int
or
mov
push
inc
inc
adc
pop
test
push
call
jl
int3
push
push
mov
push
in
push
xor
cmpl
adc
in
test
mov
ficompl
mov
loop
std
cmp
cmp
lahf
popw
clc
pop
or
inc
icebp
pushl
sbb
andb
jb
xor
sbb
and
jb
adc
lods
nop
jo
push
xor
inc
in
push
clc
lods
mov
enter
fdivr
jo
or
in
pop
jmp
cld
iret
add
test
in
orb
adc
pop
lcall
mov
pop
or
add
inc
cmp
pop
pop
cli
dec
shrb
sub
lock
sub
je
or
sub
lcall
xlat
mov
mov
pop
inc
test
push
or
add
dec
add
aam
xor
ja
mov
cmp
push
in
cwtl
adc
push
pop
test
mov
mov
mov
stos
jo
or
cmp
das
cwtl
dec
test
and
stos
dec
shr
push
das
jb
enter
push
bound
test
imul
jmp
adc
das
cmpsb
and
push
jae
insb
add
mov
pop
sub
inc
adcl
push
test
insb
mov
test
push
jne
dec
lcall
xchg
dec
enter
bswap
repz
subl
push
leave
add
mov
adc
into
cld
sub
jmp
jecxz
pop
inc
xchg
add
xor
add
inc
aam
ret
push
jae
or
dec
fs
je
sbb
dec
insl
push
inc
int3
rorb
inc
push
mov
sub
hlt
or
movsb
or
enter
fdivrs
repnz
mov
std
fs
outsl
sub
into
dec
sub
insl
aaa
test
fxam
sti
hlt
xor
fidivs
std
pop
inc
lods
lock
adc
push
call
inc
loope
mov
scas
shl
cmp
pop
adc
aam
push
xor
hlt
push
pusha
ljmp
insb
outsl
push
sbb
fcompl
popa
sub
push
jecxz
xor
pop
and
inc
cmp
xor
dec
mov
adc
dec
fadds
pushf
or
sub
jbe
dec
lods
add
pop
popa
mov
cmp
jmp
int3
inc
inc
adc
mov
ret
dec
or
push
mov
or
outsb
push
adc
push
push
cmp
sub
enter
xchg
xor
adc
subb
xor
cltd
data16
je
dec
pusha
push
mov
xchg
scas
add
test
xchg
les
aam
xor
lock
fcoms
orb
push
and
jb
mov
jp
in
fnstsw
pop
divl
inc
push
inc
ret
call
mov
cmp
inc
push
or
add
insb
test
inc
sub
push
jl
mov
fiadds
push
cmp
push
lods
xor
xor
enter
push
push
mov
jge
mov
data16
ret
mov
shll
pop
ss
cmp
or
mov
shlb
vmwrite
inc
pop
ss
les
mov
sbb
sub
dec
add
psraw
decl
sbb
sar
xor
mov
jg
mov
call
decl
int3
adc
in
icebp
push
scas
sub
or
dec
mov
pop
adc
xor
rcrb
jns
mov
pop
fdivl
jb
adc
add
add
or
xor
xchg
inc
add
add
push
je
jne
es
dec
cmp
xchg
pop
push
push
rclb
cmp
jg
dec
js
inc
fmuls
cmp
paddd
adc
fdivr
in
je
push
xor
stos
mov
xlat
dec
out
mov
pushf
dec
std
fcom
jbe
data16
inc
call
data16
or
gs
clc
pop
adc
adc
or
repz
add
adc
jmp
mov
bound
add
call
pop
and
lret
repnz
fidivs
int3
insl
mov
pusha
rorb
and
dec
mov
mov
add
rolb
xor
xor
cmp
sub
lods
into
dec
or
inc
jl
inc
lret
push
mov
cmpsb
mov
in
arpl
insb
in
jno
push
imul
inc
fs
in
xor
loop
push
adc
add
sbbb
sahf
inc
xor
call
loope
or
inc
es
mov
call
ds
loopne
and
jmp
sarl
add
shlb
xchg
mov
xchg
mov
mov
cmp
or
sti
aad
inc
xorb
lock
test
lea
loopne
insb
test
push
push
dec
pushf
add
push
inc
inc
add
xor
lock
xor
or
dec
test
jae
incl
rolb
aas
xor
arpl
dec
cmp
add
int3
jp
mov
mov
xor
ljmp
sbb
shrb
leave
inc
popf
aaa
loope
fimuls
adc
dec
mov
mov
movsb
sub
inc
sar
data16
call
add
out
int3
hlt
cmp
and
push
jmp
adc
loop
ret
inc
adc
ds
data16
mov
incl
movsl
inc
add
clc
mov
add
dec
push
insl
sbb
enter
ret
push
ret
cli
aas
add
or
pusha
into
lret
inc
inc
xorl
sti
adc
subb
pop
iret
mov
inc
cmpsb
push
adc
sub
inc
inc
dec
inc
shlb
das
add
dec
pop
push
xor
adc
push
jg
sbb
cld
mov
popa
nop
cmp
mov
fucomp
xor
mov
dec
addb
pop
loope
pop
add
daa
jb
push
inc
adc
mov
ja
adc
jne
jae
sbb
sbb
jp
cmp
mov
sarb
inc
repnz
push
int3
push
fsubrs
dec
shll
sub
mov
cld
popf
cmp
inc
xchg
movsb
outsb
push
or
mov
fsubrs
mov
jl
push
fcomi
data16
inc
push
dec
sbb
and
jle
adc
mov
dec
ljmp
out
and
push
push
adc
cmp
outsb
nop
pop
add
es
test
jb
or
outsb
call
adc
dec
pop
xchg
push
loope
pop
das
inc
inc
push
sbb
push
sub
jp
sub
and
pop
add
call
subps
fsubrs
dec
xor
outsb
xchg
mov
or
cmpl
xchg
mov
movsb
sbb
pop
or
lcall
lea
or
test
xor
mov
push
aas
or
cs
pop
pop
lock
adc
mov
sbb
mov
aaa
icebp
sbb
mov
movsl
ss
mov
add
jmp
and
loope
dec
adc
add
mov
dec
out
nop
mov
popa
sbb
xor
es
outsl
fwait
test
outsb
adc
shlb
mov
xchg
adc
pop
dec
push
fs
push
push
pop
or
sub
mov
incl
sahf
clc
add
jl
insl
adc
xor
mov
pushf
imul
lock
add
mov
rolb
push
adc
dec
aaa
lock
ret
jb
fdivrl
fsubl
js
sub
imul
test
cmp
push
sbb
cld
insb
jne
adc
int3
faddl
push
rcr
jecxz
push
mov
sbb
push
rolb
test
sub
push
adc
add
xor
or
adc
stc
adc
push
out
insb
call
ror
popa
push
clc
arpl
paddd
ja
sbb
add
mov
mov
mov
lret
push
sbb
adc
jo
pop
arpl
xor
sbb
inc
sbb
add
repnz
loopne
or
pop
mov
in
mov
xchg
mov
andb
sub
inc
sub
fdiv
fstl
jge
and
push
pop
or
sti
aaa
adcb
dec
push
mov
out
sub
push
pop
add
adc
jbe
push
add
add
jp
mov
fs
movb
xor
movsl
orb
inc
hlt
dec
adc
rorb
jg
loop
inc
into
out
dec
int3
inc
xchg
add
mov
decl
jmp
jb
mov
mov
mov
and
negl
daa
shll
pushf
filds
sbb
xlat
ja
bound
data16
fdivs
add
sub
sbb
cmp
mov
xchg
sbbb
jne
xchg
add
fsubrs
pusha
xchg
and
or
mov
and
push
mov
icebp
mov
loop
push
call
adc
sub
ret
adc
xor
add
lea
test
push
and
cmc
decl
stos
testl
push
enter
test
and
mov
mov
jmp
mov
jnp
jns
mov
xchg
xor
int3
sub
and
push
adc
jecxz
xchg
sub
add
xor
jbe
jg
sbb
sbb
adc
xchg
mov
subl
adc
inc
aad
mov
int3
push
mov
jle
rcrb
aaa
cmc
adc
mov
cli
add
jecxz,pt
inc
push
mov
lock
adc
loop
cld
or
mov
add
pop
enter
ret
lods
xchg
subl
test
mov
test
shll
out
mov
adc
lret
push
clc
xchg
inc
rcr
fmuls
or
push
add
jge
dec
dec
jmp
cmp
pop
movsb
test
adc
add
icebp
divb
pop
inc
test
push
clc
movl
add
pop
add
les
add
lock
incb
push
sbb
add
sub
mov
cmp
dec
jle
push
lock
sbb
jmp
dec
aad
add
push
int3
xadd
push
mov
pop
add
mov
mov
fsubrl
xorb
stos
fimull
jmp
push
test
xor
adc
inc
insb
fsubs
fsubrs
in
mov
fs
sub
fiadds
jmp
jmp
cs
sub
std
add
rcll
out
add
nop
dec
adc
add
popa
insb
jo
xor
nop
jb
mov
add
xchg
mov
lcall
dec
inc
inc
andl
nop
xor
adc
and
push
fs
or
pop
es
or
jmp
shrl
dec
ljmp
mov
mov
pop
sub
push
add
pop
add
or
or
orl
add
andl
xchg
xor
adc
xchg
fidivrs
ljmp
jne
adc
sub
cmc
push
add
cmpsb
cmp
lock
xchg
jne
fsts
fs
mov
inc
imul
or
out
sbb
xchg
pop
sub
fs
sbb
je
icebp
pop
xor
in
stc
daa
xchg
in
insb
test
jg
cmc
enter
xchg
pmulhw
into
clc
lea
mov
test
call
xor
add
sahf
adc
xor
jnp
add
out
les
adcb
sub
push
push
outsl
popw
popa
and
flds
add
aam
rclb
fidivrl
test
xor
sub
cli
mov
aaa
sbb
and
and
xchg
lret
sbb
adc
pop
cmp
stos
fs
sbb
jge
in
adcb
pusha
setbe
cwtl
push
fisubrs
push
ficoms
and
adc
jb
idiv
aaa
or
fisubrs
add
test
outsb
xor
and
or
inc
aam
jmp
pop
mov
mov
dec
and
add
mov
nop
xor
xchg
inc
mov
je
decb
adc
repnz
add
mov
add
call
jmp
and
mov
cmpsb
inc
push
or
xor
cmp
repz
insb
test
ror
mov
sbb
sbb
mov
push
and
popf
insb
jae
cld
push
add
inc
faddl
cld
adcb
inc
push
mov
fmuls
fildl
push
and
stos
sbb
xor
cmp
adc
loope
cwtl
jb
pop
lcall
pop
call
cmc
bound
gs
xor
lcall
adc
pop
or
push
rclb
in
nop
sbb
sub
inc
add
and
rcrb
ret
push
sbb
cld
cmpsb
sub
adc
or
aam
imul
loope
jne
xlat
push
inc
mov
fmuls
and
mov
or
pop
mov
imul
xor
call
enter
arpl
insb
pop
pushl
out
inc
push
cmpsl
hlt
or
imul
insb
inc
clc
lock
jo
inc
addb
mov
push
aam
jns
movsb
ds
add
je
out
sar
or
roll
fadds
push
xchg
leave
fmull
mov
data16
inc
mov
stos
mov
ds
jecxz
cmp
inc
fs
cmp
data16
pop
and
mov
push
and
mov
fiaddl
xor
loop
in
sub
xor
or
jge
rorb
xor
and
pop
xor
adc
popf
xchg
mov
sarb
or
jmp
jl
outsb
xchg
push
adc
and
mov
das
pop
dec
mov
jmp
lret
mov
push
push
mov
and
pop
cmp
mov
xor
pop
jg
add
sbb
mov
emms
add
ljmp
leave
or
mov
fdivs
call
dec
loopne
inc
sub
insb
pop
test
shlb
add
mov
mov
push
leave
push
add
mov
add
adc
jmp
sbb
inc
mov
cltd
push
adc
leave
sbb
xlat
test
cli
add
or
and
mov
movsl
mov
xchg
idiv
call
test
sahf
inc
push
push
lods
add
leave
aam
movsb
xor
pushf
push
fs
xor
test
in
adc
mov
orl
pop
mov
dec
add
ja
jo
mov
ret
sbb
sbb
inc
mov
jo
fmuls
lret
cwtl
mov
or
cmp
mov
mov
shlb
jb
lcall
cltd
cs
lea
cli
jne
push
inc
dec
sbbb
into
and
cmp
data16
fistl
mov
fdivr
jecxz
add
shrl
push
pop
push
dec
outsl
mov
test
lret
mov
std
ret
call
call
dec
inc
pusha
add
cmp
cmp
lds
and
push
mov
cmpb
fcomi
lret
es
sbb
mov
ret
inc
loop
push
inc
jge
int3
gs
inc
rclb
lret
adc
pop
add
enter
insb
fnsave
test
mov
scas
ror
sbbb
mov
and
push
aaa
lea
or
clc
cmp
push
inc
test
insb
pop
inc
pop
cmp
cmpsb
sahf
mov
cli
mov
and
inc
add
inc
mov
dec
sbb
sbb
push
fstpt
ficoms
sub
adc
mov
into
push
test
aas
lea
jo
pop
mov
clc
outsb
sbb
insb
js
in
das
sahf
inc
inc
lcall
roll
mov
inc
jp
cmc
adc
leave
rorl
gs
xor
scas
stos
clc
adc
and
rorb
xor
inc
shlb
nop
inc
add
sti
fstpt
push
cwtl
pop
inc
enter
or
std
push
push
inc
inc
enter
inc
mov
cld
mov
jl
or
mov
insb
add
inc
pushaw
push
lea
adc
rclb
das
sbb
adc
test
out
push
aaa
int3
xor
lea
add
jp
ror
sub
mov
fmuls
sub
ret
adc
inc
and
test
mov
fidivrs
out
shrb
mul
jne
lret
stos
insl
xor
cmp
jo
mov
push
inc
sbb
inc
loope
and
jo
roll
test
cli
int3
cmc
dec
pop
dec
cs
in
xchg
pop
lock
arpl
push
add
jl
adc
rolb
push
jne
call
pop
mov
sbb
mov
das
ret
int3
push
imul
adc
cs
sub
es
inc
subl
inc
ds
orb
fs
movsl
jg
cmp
decl
xchg
jae
pop
insl
in
dec
loop
pop
and
jecxz
pop
cmp
push
jno
push
pop
pop
mov
push
inc
movsl
out
mov
add
vmread
outsb
andl
loop
and
gs
cmp
mov
call
jo
mov
mov
sbb
lcall
push
mov
push
or
aad
pop
pushl
jne
cmp
inc
int3
inc
inc
jb
sbb
jp
cmp
pop
cmp
ss
jmp
xor
and
test
outsl
and
in
adc
ss
lods
cwtl
incb
ljmp
and
add
gs
je
iret
push
sbb
sahf
or
lret
data16
xchg
mov
jge
stc
inc
les
test
mov
or
fistl
sub
xchg
fidivs
and
hlt
mov
popa
jp
adc
add
data16
test
clc
mov
mov
sub
lcall
push
pop
mov
in
or
pusha
push
sub
cmpb
sub
shl
movsb
js
pop
mov
and
enter
mov
mov
hlt
pushf
cld
outsb
loope
dec
xchg
cmp
inc
inc
fwait
int3
mov
add
add
push
push
jmp
scas
mov
dec
js
hlt
mov
roll
or
jl
ja
inc
xor
push
inc
je
sub
lods
pop
enter
sbb
add
aam
imul
inc
and
adc
xor
mov
aam
mov
lahf
and
mov
jge
bound
push
jne
add
sbb
std
nop
lahf
icebp
inc
stos
inc
push
add
xor
fs
push
xchg
notb
imul
adc
mov
mov
fdivl
icebp
cwtl
xchg
cli
inc
adc
add
xchg
mov
ljmp
and
add
sbb
je
add
test
test
out
jg
and
out
addl
dec
add
mov
loope
test
mov
add
and
stos
sub
sbb
push
sub
mov
push
loop
adc
mov
mov
pop
or
mov
or
xor
cmp
adc
sbb
test
adc
adc
or
mov
inc
or
xchg
dec
into
inc
leave
add
mov
jb
xchg
dec
push
sub
pusha
testb
int
push
cld
gs
test
push
push
cld
ss
jnp
test
rclb
or
and
xor
xchg
mov
sub
outsb
and
imulb
aam
adc
inc
xor
out
inc
cmp
jno
les
mov
call
lret
mov
mov
xor
adc
aas
xor
or
call
sub
loope
mov
dec
and
push
pushf
dec
mov
add
jb
cld
sbb
inc
xchg
add
out
sub
jbe
and
dec
jne
xor
sub
rolb
inc
jne
icebp
nop
xor
and
mov
test
sub
push
or
lods
mov
add
sbb
push
loope
pushf
adc
hlt
shlb
push
popa
popa
inc
inc
imul
sub
pop
mov
push
mov
jmp
adc
cmpb
or
jmp
push
js
ds
fisubrs
add
sbb
aas
int3
mov
popa
or
jae
sbb
dec
lods
pop
add
scas
push
inc
xor
jp
cld
or
sub
xor
enter
or
cs
or
mov
dec
sub
sbb
mov
xor
mov
push
xorb
in
sub
and
or
cwtl
xor
cmp
les
outsb
icebp
xor
decb
test
nop
pushf
rolb
xor
and
sbb
inc
rcl
dec
xor
aas
add
pop
dec
cmp
mov
or
cld
pop
test
lds
xchg
mov
ljmp
pop
dec
inc
addb
loopne
inc
push
inc
pop
push
lods
popa
sbb
aam
jne
jb
sbb
add
and
push
push
fcomps
xorb
test
sbb
jmp
and
movb
mov
cmp
xor
sub
fildl
call
mov
lock
add
fdiv
insb
dec
int3
in
push
jbe
pop
xor
mov
cmp
ljmp
ror
cwtl
mov
dec
cmp
iret
and
inc
out
jge,pt
xor
pop
cwtl
inc
call
pop
je
inc
out
xor
dec
ret
mov
xor
push
insb
or
xchg
loopne
push
push
xchg
popa
inc
mov
es
jno
push
or
mov
add
pop
enter
push
outsb
jmp
rorb
loopne
inc
int3
je
fwait
ret
es
lea
ljmp
and
es
enter
out
es
sahf
sub
stos
add
aaa
or
gs
les
jg
inc
test
xchg
lea
stos
pop
mov
mov
push
add
stos
inc
mov
sar
repz
xchg
xorb
and
clc
xchg
clc
cmpsb
cmp
or
or
push
cli
cmp
ds
lock
out
and
lock
js
add
lea
cmpsb
cld
das
push
pop
fdivrl
jmp
testl
popf
mov
das
shll
popf
inc
shr
je
mov
inc
or
inc
xchg
insb
adc
cmp
jae
inc
sub
test
out
mov
push
pop
adc
pop
fisttps
push
jmp
clc
adc
jne
fsubrs
mov
data16
jb
cmpsl
pop
or
inc
into
cmp
pop
push
push
inc
testb
cld
cmc
mov
test
sarl
or
ret
jl
fcompl
push
shlb
and
not
notb
mov
sub
sub
mov
push
mov
cmc
decl
gs
test
mov
je
adc
sbb
inc
mov
int3
pop
sub
mov
icebp
push
je
mov
inc
add
mov
mov
mov
adc
outsl
and
mov
mov
xor
xor
dec
pop
pop
cld
jbe
mov
lock
ret
add
cmp
aam
mov
fisubrs
rclb
lret
cmpsb
inc
sbb
test
movsl
roll
cwtl
push
mov
loopne
jo
std
mov
mov
loopne
or
fmul
push
adc
fcmovne
clc
mov
call
ja
imul
mov
inc
push
aad
ret
filds
sbb
or
pop
aam
out
roll
out
xchg
inc
arpl
mov
and
test
test
xchg
hlt
call
mov
or
cmp
cmpsb
add
push
mov
dec
dec
mov
decb
je
clc
and
enter
les
push
sbb
push
pop
pushf
hlt
and
or
sub
sub
cmp
push
add
test
jle
inc
lods
add
test
loop
xor
jbe
out
cmpsb
push
movsb
jg
adc
sub
xor
nop
shl
outsl
xor
jne
adc
mov
and
push
aad
lods
cmp
mov
cli
inc
or
inc
mov
or
dec
mov
mov
sbb
call
sub
cmp
adc
xchg
nop
call
cmpsb
pop
add
push
mov
xor
mov
adc
mov
test
xlat
lret
test
sub
or
push
sbb
adc
push
xchg
stos
and
cwtl
je
dec
clc
pop
test
movsb
testb
ss
dec
dec
les
push
shrb
pushf
fs
adc
mov
pop
movsb
andl
rorl
cmpsb
adc
mov
lock
inc
push
shl
push
adc
stos
sbb
sub
add
sbb
pop
inc
nop
clc
pop
hlt
aam
into
cmp
mov
pop
call
into
sub
pop
insl
inc
mov
push
lods
out
pop
adc
bound
xchg
flds
mov
and
adc
in
mov
jecxz
inc
stc
pop
inc
call
ret
mov
dec
hlt
add
stos
rorb
sub
add
push
jecxz
push
cmp
lea
aad
sbb
xor
add
rorb
xor
je
push
icebp
adc
sbb
and
add
loope
jne
ds
add
or
insb
pusha
inc
shll
movsb
sahf
mov
pop
xchg
cmpsb
test
pop
push
jp
add
dec
je
inc
jne
fistps
adc
push
push
pop
inc
loopne
or
cmpsb
jg
jecxz
sub
sbb
dec
mov
cld
inc
or
cmc
add
mov
adc
ret
clc
sub
clc
add
cli
mov
sbb
aas
xchg
push
inc
lea
jp
test
inc
mov
mov
sub
mov
shlb
push
or
dec
push
and
fisubrl
jne
xor
leave
jle
jb
bound
dec
test
mov
inc
mov
sbb
mov
cli
add
push
lea
int3
push
mov
inc
xor
lods
sbb
clc
fadds
xor
pop
out
sbb
fidivrs
sbb
cmp
loope
dec
inc
xchg
dec
push
mov
addb
faddl
jl
cmp
lock
add
push
mov
mov
movl
aad
inc
adc
lock
mul
cli
out
ret
and
add
fs
jo
add
add
mov
mov
mov
popa
lods
fimull
add
data16
mov
sbb
lea
test
jl
jb
mov
mov
mov
rcll
sbb
loop
inc
push
cld
or
out
xor
inc
insb
add
inc
sub
add
sbb
cmp
mov
popa
lea
add
add
mov
inc
lods
sub
scas
subb
dec
adc
mov
push
pop
popa
movsb
inc
sbb
or
ss
mov
nop
push
imul
jmp
and
into
sbb
cmc
testl
push
mov
icebp
stos
dec
insb
loopne
in
add
out
push
subb
add
lock
aad
push
or
pop
and
bound
fcoms
or
daa
and
xor
rolb
mov
cmp
add
hlt
subb
pop
test
jne
pop
out
gs
mov
and
cmp
mov
mov
cmpsb
lock
push
pop
jmp
fmul
adc
dec
repnz
inc
je
pop
inc
call
stos
imul
adc
push
or
or
or
inc
test
sbb
std
fimull
xor
inc
jp
and
inc
sahf
push
xchg
lods
mov
rol
push
notb
loopne
ja
mov
xchg
out
and
enter
push
cmp
mov
or
dec
mov
add
sub
pusha
and
xor
xor
inc
leave
pop
add
outsb
clc
mov
sbb
in
and
add
adc
push
mov
jle
pop
add
fwait
add
addb
mov
cli
lods
gs
mov
pop
outsb
clc
loop
or
data16
data16
fdivs
push
sub
and
icebp
pop
inc
out
nop
adc
adc
ja
call
mov
push
push
je
mov
insb
jmp
jb
stos
xor
push
cmc
cmp
add
rorl
fnstcw
push
cmpsb
mov
sbb
cmp
jnp
invd
in
inc
imul
test
push
sbb
cli
adc
push
jge
pop
jle
add
fcoms
xor
cld
addb
and
popf
adc
lock
push
jo
dec
loope
mov
pop
je
mov
fdivr
push
test
push
cmpl
inc
clts
push
or
aam
out
xorb
push
sub
push
push
push
adc
mov
adc
jmp
xlat
in
les
adc
pop
and
retw
sahf
add
rolb
outsl
dec
cmp
jmp
mov
imulb
add
push
adc
cmp
loopne
push
pop
adc
dec
mov
adc
jne
xor
mov
call
push
je
cmp
add
jmp
mov
pop
inc
faddl
mov
push
cld
stc
sub
inc
cld
xchg
jno
and
mov
cwtl
inc
sub
shlb
mov
fdiv
nop
cmp
inc
cwtl
pop
fstpl
sahf
gs
jl
xchg
rcr
mov
mov
test
mov
xor
mov
adc
push
jb
gs
out
jmp
cmp
pusha
lock
sti
cmp
xor
mov
aaa
ffree
clc
cmp
or
aaa
loopne
divl
add
push
sbbl
cmp
xor
popa
cli
lret
bound
mov
push
sub
lods
fcmovb
inc
leave
mov
push
aad
jp
sub
push
leave
inc
mov
mulb
loopne
pushf
rclb
mov
xchg
dec
std
add
cmp
outsb
mov
cltd
fs
std
xchg
xor
mov
scas
add
inc
call
mov
arpl
in
movsl
es
dec
xlat
jne
adc
push
sbb
sahf
and
lret
fdivs
or
loope
lods
pop
push
mov
push
fdiv
jbe
cwtl
inc
mov
cmpsb
or
cmp
sti
dec
cld
lock
jnp
subl
pop
gs
mov
shl
stos
sub
outsb
paddb
jp
pop
test
addb
and
and
bound
mov
es
ljmp
je
aam
test
cmp
xor
adc
jg
mov
jmp
inc
jmp
cmp
xor
loopne
sub
divb
mov
test
jb
js
or
mov
cmp
and
inc
je
push
fsubl
test
pop
push
and
jo
pop
add
stc
shlb
xchg
sub
movsl
mov
std
xchg
jae
int3
or
pop
push
sbb
adc
inc
sbb
add
mov
movsb
dec
mov
add
decl
idivb
dec
or
inc
add
cmp
in
rcl
push
aas
pushf
inc
sarb
mov
cli
dec
pop
xor
rcrl
adc
lea
jae
clc
inc
push
dec
mov
mov
aas
pop
jb
add
imul
cmp
xor
fs
add
lods
push
add
popf
test
mov
xor
out
mov
pusha
mov
cli
or
cmp
pop
ds
lods
pusha
push
xchg
push
inc
or
mov
aas
push
in
jb
pop
pop
push
jo
test
pushf
xor
pop
inc
push
sarb
lods
loopne
mov
cltd
incl
push
jle
popl
pop
test
push
dec
int
xchg
loopne
lock
jb
test
adc
addr16
jmp
test
push
dec
cs
mov
fcomps
dec
loop
nop
sbb
sub
cmp
mov
cmp
pop
cmpsb
jbe
in
and
jge
mov
das
push
addr16
dec
inc
mov
xchg
sbb
push
in
xchg
mov
mov
push
call
or
push
xor
cmp
mov
cmp
ss
jg
adc
and
inc
mov
add
mov
mov
loopne
roll
cltd
andb
xchg
adc
and
mov
lret
std
ja
push
add
dec
jmp
jp
in
xor
icebp
bound
xor
mov
push
dec
or
dec
sub
jmp
mov
cmp
cmpsl
sbb
cmp
mov
mov
push
push
pop
cld
adc
iret
adc
std
add
aas
leave
inc
add
inc
sbb
or
fucomi
aaa
pop
push
jbe
cmpsb
pop
jo
xor
into
outsb
out
jle
mov
in
outsl
rcr
test
inc
mull
loop
jecxz
adcl
iret
add
std
mov
lods
add
and
lods
jle
mov
jg
mov
cmp
push
test
or
jae
push
aas
ret
mov
push
jl
pop
aam
mulb
or
jbe
orl
enter
fcom
leave
inc
xor
shll
cmc
xor
push
pop
xchg
ret
data16
sub
aaa
adc
push
xlat
testb
das
pusha
jmp
jl
or
fimull
push
jb
or
or
dec
rcrb
mov
dec
adc
adc
push
pop
fstpt
data16
add
inc
sbb
sub
xchg
inc
inc
inc
add
mov
sbb
sub
xor
cld
mov
mov
loope
into
pop
rclb
js
cmp
les
sub
test
loopne
test
add
je
or
js
mov
pop
hlt
mov
jb
mov
bound
mov
add
push
mov
cmp
rclb
shll
xor
shl
clts
pop
lock
clc
ret
mov
add
mov
orl
notb
dec
call
pop
loopne
daa
adc
nop
out
jbe
test
in
or
jne
jne
inc
cmpb
testb
roll
pop
in
push
xor
mov
popa
pop
negb
inc
inc
pmulhuw
pop
cmp
dec
or
ds
insl
ljmp
xor
and
les
cmp
jmp
cmpsb
cmp
lret
jle
pop
sbb
mov
mov
cmpsb
push
cmp
in
addb
inc
mov
loop
push
mov
push
and
push
cld
add
je
cmc
fistl
bnd
imul
adc
lods
push
or
pushf
call
test
push
push
pop
sub
or
mov
shlb
and
testl
push
sbb
dec
adc
push
cld
test
sub
mov
mov
pop
aas
adc
in
or
mov
jecxz
jp
and
nop
cld
sbb
bnd
test
or
shlb
jl
xchg
icebp
je
jle
add
and
mov
push
mov
push
add
in
seta
add
mov
cmp
push
pusha
jmp
add
xchg
push
rolb
fwait
sbbb
ret
movsb
sbb
stos
mov
sti
mov
icebp
repz
push
adc
fiadds
je
jl
xor
xor
pop
lea
add
jmp
inc
add
punpcklwd
sbb
adc
push
jl
and
imul
hlt
aaa
adc
and
addb
and
mov
sbb
loop
inc
pop
sub
js
addb
outsl
mov
insl
out
mov
les
scas
xchg
dec
or
push
add
mov
punpckhbw
sbb
dec
lcall
mov
gs
test
inc
rclb
jl
cli
faddl
loop
in
lods
mov
dec
mov
mov
push
pushf
imul
shll
xor
push
stos
js
pusha
push
mov
movsb
test
inc
dec
cld
pop
add
aam
sbb
mov
les
lcall
add
mov
jnp
xchg
inc
add
sub
jge
daa
loopne
or
push
movsb
jl
lret
orb
or
lea
jae
and
push
les
xor
inc
or
mov
push
or
inc
mov
call
xor
test
dec
lock
and
call
ret
sub
xlat
cltd
pop
sub
cld
xor
or
fs
xor
push
xor
lock
aad
das
dec
push
add
add
mov
cmp
sbb
adc
jne
jmp
dec
or
std
xlat
cli
xor
mov
outsb
mov
adc
rolb
or
lock
mov
outsl
push
les
incl
aad
mov
pusha
pop
mov
repnz
xor
js
lcall
ret
cmp
jb
call
jp
inc
mov
clc
pushf
mov
mov
dec
jmp
mov
add
loop
cltd
sbb
xor
adc
in
fldt
add
and
clc
or
or
push
loopne
pusha
nop
add
dec
or
cmp
and
adc
inc
pop
lock
pop
jae
adc
mov
movsb
adc
call
jnp
dec
jo
add
into
push
and
fwait
cmc
dec
pop
push
xlat
or
call
lock
mov
cmp
jp
mov
inc
adc
and
fiadds
push
and
add
shlb
mov
xor
add
test
in
xor
test
shlb
js
mov
jmp
or
add
fwait
mov
sbb
lea
xor
lea
cmp
or
add
xchg
add
cmp
lea
lods
aam
xchg
mov
shlb
sti
les
pusha
mov
rclb
faddl
add
sub
scas
push
sbb
mov
push
mov
sar
insl
sahf
push
mov
mov
or
in
xor
jb
icebp
mov
std
jne
add
aas
add
jne
outsb
imul
pop
and
inc
gs
mov
std
pop
pop
sub
or
push
mov
call
push
jecxz
ret
jne
gs
add
and
mov
mov
xor
cmpsb
or
je,pt
sti
sbb
cvtps2pd
add
std
sub
pop
xor
jl
sub
mov
adc
xor
lea
and
inc
mov
ret
mov
cli
movsb
fwait
mov
add
sarl
ja
adc
dec
jae
add
pop
clc
dec
and
lahf
ds
sbb
jmp
add
and
js
mov
lock
and
or
fdivrl
sbb
lea
push
fadds
adc
pop
shll
add
inc
xchg
ss
ret
cmp
xchg
push
add
jns
mov
mov
push
sub
mov
cmp
xor
movb
cmp
aaa
and
xchg
add
popa
ret
sbb
test
mov
push
inc
addr16
push
sarl
fwait
lcall
aaa
or
pop
sti
add
sub
push
lea
ret
inc
cmpl
outsb
fwait
addl
loopne
lock
or
pushf
leave
rclb
push
mov
ret
imul
insb
jns
jnp
in
in
jmp
push
out
mov
or
cmc
add
int3
out
andb
clc
mov
clc
nop
je
add
jg
cld
mov
xchg
pmulhw
ja
mov
int3
test
jne
or
fisubrl
inc
pushf
lea
cmp
outsl
add
sbb
xchg
pop
je
addr16
add
movsb
xlat
imul
add
lahf
rclb
or
mov
test
bound
add
cmp
shlb
add
add
adc
xchg
loopne
stc
mov
lock
inc
xor
inc
mov
cld
std
rclb
sbb
popf
loop
andl
lea
aaa
adc
sbb
ljmp
sbb
adc
out
lret
pop
hlt
loop
push
stos
mov
push
cmp
leavew
push
and
sbb
pop
fadd
adc
sub
std
fmul
decb
clc
mov
stos
out
add
xchg
jne
xchg
cs
cmp
or
repz
ja
fidivs
je
jmp
daa
add
clc
mov
add
sub
hlt
sub
push
inc
sti
rclb
mov
arpl
lods
dec
cmp
clc
sub
je
xor
cmp
inc
sub
incb
add
add
in
loop
sbb
inc
cld
cmp
adc
ret
adc
gs
lds
ret
call
dec
xor
mov
cld
push
fmuls
xor
loopne
sub
pusha
jnp
cs
push
sub
xor
xchg
sub
mov
andb
mov
jbe
push
cmp
ljmp
lret
loopne
xorb
testl
clc
add
mov
mov
das
out
in
insb
add
std
arpl
cmp
test
xor
jo
rolb
mov
push
nop
push
jl
inc
int3
or
in
iret
mov
mov
bound
ficoml
pop
add
add
test
sar
push
or
test
das
push
inc
push
aaa
push
movsb
or
das
add
jo
sub
clc
mov
pushf
pop
sub
pusha
push
xor
or
mov
xchg
xor
dec
sub
lcall
pusha
add
xor
cli
or
fsubrl
push
pop
adc
xor
adc
sbb
inc
cmp
je
or
xchg
inc
push
pop
jb
bound
xchg
push
loope
sub
mov
fsubs
lea
xor
jne
push
mov
mov
ds
mov
dec
jecxz
sub
pmuludq
xor
jle
adc
dec
divb
icebp
cmp
and
jmp
push
in
sar
add
mov
insb
cmp
movsb
rcll
pop
std
mov
sbb
nop
popl
mov
add
cmp
outsl
cmp
bound
and
push
push
jno
dec
mov
sbb
mov
int3
addb
push
xchg
add
pop
lds
cmp
or
jle
test
ret
inc
cmp
add
scas
leave
jle
push
pop
dec
add
adc
mov
jo
jae
fdivrp
sar
mov
mov
mov
cmp
jmp
lds
xchg
lock
mov
pop
jb
int3
xchg
add
repnz
or
and
scas
add
sbb
mov
shrl
pop
mov
push
pop
call
leave
inc
je
mulb
mov
mov
push
leave
in
inc
ret
push
shlb
addl
mov
ds
push
out
jmp
incl
adc
push
mov
lds
clc
int3
lea
test
jg
loopne
arpl
call
sbbb
adc
rcl
inc
int3
inc
xchg
bound
inc
rolb
add
movsl
in
je
cld
aad
and
outsb
outsb
jo
adc
jb
inc
pushl
test
outsb
xchg
hlt
fisttpl
pushl
fisttpl
cmp
cmp
cmovbe
adc
mov
push
cwtl
fsubs
sahf
ret
push
jbe
fisubs
imul
pusha
mov
call
xchg
jno
test
bound
pop
jl
ret
sub
cmpsl
xorb
pop
adc
clc
push
into
lock
cmovo
icebp
xor
mov
hlt
not
adc
push
xor
or
pshufw
pop
jmp
add
mov
test
add
call
popf
mov
adc
mov
and
js
aaa
outsl
or
sahf
inc
gs
pop
push
xor
movsl
push
sub
and
ljmp
sub
dec
lea
inc
jns
addb
jo
scas
inc
mov
push
add
push
jl
jo
jl
sub
leave
mov
cmc
add
push
lods
sahf
cld
enter
jmp
imulb
lret
mov
fimull
mov
jmp
jnp
push
cmc
shl
les
and
call
sub
pop
int3
xchg
ljmp
xchg
shlb
les
add
rcrb
and
adc
movb
insb
test
jo
mov
push
add
adc
imul
in
mov
add
mov
inc
push
loopne
aas
dec
push
jl
lcall
aam
ss
mov
rcrb
fs
int3
xor
or
insl
xchg
test
xor
lret
inc
inc
sti
inc
push
push
inc
mov
mov
push
cmp
cld
mov
or
jo
jne
pushl
stos
orl
decl
adc
xor
mov
outsl
adc
push
mov
inc
mov
xchg
add
inc
or
push
ficoml
nop
mov
aaa
in
gs
push
jl
sbb
sbb
add
fmuls
or
xor
or
inc
call
sub
mov
or
jmp
adc
push
or
and
add
inc
cmp
cmpb
inc
xor
outsb
lods
xor
add
addl
pop
mov
dec
jmp
sub
fidivrs
xor
and
cmp
ret
cld
cmp
pop
icebp
add
mov
xchg
hlt
addb
ja
int3
adc
mov
arpl
data16
sbb
mov
push
movsb
push
push
pop
mov
dec
into
mov
dec
stos
dec
push
push
pusha
dec
adcb
push
jbe
cmp
ljmp
fistl
mov
pop
mov
push
pusha
enter
mov
and
jmp
out
mov
je
and
add
cmpsb
in
incl
ljmp
adc
rorl
adc
add
mov
mov
pop
hlt
test
pushf
jmp
add
jb
xor
dec
sbb
xlat
scas
repnz
in
adc
push
jl
mov
adc
pop
xor
cmc
mov
pushf
std
mov
decb
insb
mov
cld
lock
pop
add
cmp
push
pop
inc
mov
lea
decb
clc
aas
scas
push
xchg
lcall
xchg
mov
or
mov
push
popa
adc
dec
mov
jo
movsl
or
inc
into
in
push
jmp
insl
sbb
sbb
je
insb
mov
xor
mov
test
jg
inc
xchg
add
test
dec
nop
mov
jecxz
mov
push
outsb
add
sbb
fisubl
int3
jo
shlb
push
and
or
incl
pushl
orl
push
push
mov
das
lock
imul
xor
adc
inc
lods
and
push
jmp
mov
aas
dec
mov
push
ficoms
mov
pusha
or
inc
test
or
sub
insb
or
jecxz
and
or
insl
mov
push
ja
and
adc
test
xor
cld
stos
mov
inc
xor
out
shlb
arpl
or
inc
sbb
sub
pop
mov
lock
outsl
dec
test
sbb
xchg
cmovl
sbb
jle
fs
nop
mov
lret
fisubrs
ds
hlt
addr16
xor
sub
jle
push
rol
push
roll
mov
add
adc
popf
ljmp
lret
shlb
loopne
xchg
mov
add
inc
ret
jne
jge
call
xor
cld
dec
shlb
pop
scas
sub
pop
add
xor
push
mov
push
add
xor
mov
fdivrl
mov
ret
sub
mov
rolb
add
sbb
xor
nop
mov
push
mov
js
xor
jne
push
pop
inc
inc
mov
cmp
pop
shlb
into
popa
adc
pop
xor
data16
or
push
lods
mov
push
mov
add
rcr
sub
ret
mov
push
xchg
jmp
das
scas
int3
nop
rcr
mov
mov
aaa
push
test
mov
addl
movsb
inc
push
orl
jge
jmp
or
jbe
daa
xor
sub
sub
dec
inc
mov
xchg
and
cmc
mov
jmp
icebp
mov
stc
rorb
or
and
daa
and
ljmp
pop
dec
shrb
ljmp
and
sbb
shll
or
js
lcall
xchg
scas
add
pop
lea
cwtl
ds
pop
xchg
mov
in
jne
or
adc
adc
xchg
jmp
xchg
fs
aad
ret
xchg
add
call
loopne
add
push
clc
sub
add
or
or
clc
fstpt
imul
lock
xchg
je
je
xor
outsb
mov
dec
inc
mov
cmp
jl
push
xor
rorb
pushf
icebp
leave
je
je
adc
pop
inc
adc
rorb
dec
xchg
push
in
pop
into
or
jbe
cmp
movsb
ljmp
movsb
sub
sub
adc
clc
pop
inc
ljmp
push
xor
cs
rcll
mov
sahf
lea
mov
xor
les
inc
test
enterw
test
xor
mov
push
push
mov
je
cmp
ja
inc
inc
dec
or
push
push
push
mov
sub
sarb
inc
jmp
divps
mov
test
push
sbb
pop
add
pop
xchg
push
test
rol
xlat
cmp
lds
cmp
push
mov
bound
ss
dec
pusha
inc
cmp
inc
push
rcr
add
mov
stos
call
mov
adc
stos
or
mov
pop
cmp
data16
inc
push
fadd
add
test
pop
outsb
pop
xor
or
dec
jns
scas
mov
cli
inc
pop
inc
inc
enter
adc
jb
inc
add
fstpl
lods
outsb
xlat
mov
sub
mov
add
and
inc
push
mov
xor
add
shll
xor
ja
shlb
or
stos
nop
and
push
int
push
aad
nop
add
inc
xor
jbe
add
mov
je
stos
jl,pn
fidivrs
fcos
pushf
ret
lods
mov
shrl
cli
cli
idivl
mov
pushl
jne
inc
lcall
fisubrs
popf
push
jo
incb
pop
lcall
aaa
fidivl
push
scas
call
add
addl
or
sub
test
cli
cmp
or
mov
lea
inc
mov
addb
jmp
pusha
fs
or
outsl
rorb
orb
push
xchg
inc
mov
xchg
add
lods
stos
mov
fsubs
std
and
call
xor
ret
enter
into
scas
xor
cmp
pop
mov
in
sbb
jmp
push
clc
adc
inc
sbb
jbe
in
popa
cltd
fmull
add
js
sbb
cmp
mov
les
lods
mov
cli
int3
push
pusha
sbb
xchg
hlt
inc
pop
das
push
mov
out
inc
imul
add
notb
lock
add
xor
imulb
test
cmp
hlt
add
mov
imul
jbe
add
rclb
pop
pop
popa
push
xor
in
push
adc
daa
sub
push
test
sub
add
jl
mov
cmp
push
orps
clc
dec
cmpsb
pop
xchg
popa
inc
fmull
cmpsb
lock
xor
inc
inc
adc
test
aas
insl
cld
jp
xor
std
pushf
decl
repz
in
cmp
inc
lock
lock
pop
lcall
cli
sbb
mov
or
jo
and
nop
inc
dec
test
and
into
gs
ret
xlat
out
pop
movsl
push
fwait
call
jg
fucomip
addr16
iret
or
mov
xor
mov
mov
loope
movsb
cs
std
jmp
xor
ja
fldl
mov
pcmpeqw
and
jo
or
add
jecxz
in
or
push
dec
pusha
cmp
pop
sbb
jb
inc
cld
and
into
dec
sbb
inc
sub
cpuid
ret
jmp
sub
push
loop
dec
imul
adc
mov
mov
andb
mov
ret
add
jl
add
and
push
imul
lea
aas
test
test
aam
data16
jne
add
mov
push
mov
data16
les
mov
scas
ljmp
mov
inc
sbb
jae
aaa
and
and
inc
in
pushf
add
lods
rorb
cld
insb
insl
pop
addl
mov
test
pop
sbb
push
cmp
aam
dec
mov
fnclex
ret
jb
sub
enter
enter
aad
fs
cmp
cmpsb
ficompl
jo
call
mov
mov
lcall
fmull
add
push
dec
jno
movsb
push
push
mov
loope
or
idivb
xor
mov
add
leave
cmp
push
fdivs
jne
xor
mov
aaa
push
and
pop
call
fcmove
loope
dec
gs
or
push
mov
push
in
add
clc
mov
push
je
hlt
jb,pn
pusha
inc
rcrb
adc
mov
xlat
shll
sub
clc
adc
dec
mov
jb
imul
push
test
and
test
xchg
imul
movb
add
pop
or
enter
push
fucomi
test
pop
pop
bound
dec
xchg
insb
sub
cli
pop
rcrb
mov
test
inc
mov
pusha
stos
data16
xchg
adc
push
cld
je
imul
add
sub
sbb
push
lret
test
mov
sub
aam
lods
push
pop
jp
xor
mov
lahf
add
enter
scas
rcl
lods
cmp
mov
sbb
pop
push
cmp
ficoms
xorl
hlt
jmp
call
std
mov
js
rorl
or
data16
call
sbb
mov
std
xor
insb
or
mov
mov
data16
outsb
pop
adc
push
xchg
stos
icebp
mov
mov
adc
mov
lods
inc
adc
push
jb
scas
xor
sub
inc
sub
adc
pop
cwtl
in
sub
call
cmp
inc
getsec
lea
xor
or
inc
test
adc
add
ficomps
add
fiadds
push
add
test
addb
stos
mov
cs
ret
adc
xor
add
push
dec
ss
xor
mov
sbb
sbb
push
inc
cmp
jb
jle
adc
adc
and
pop
repz
loopnew
rolb
aas
jg
hlt
xor
ljmp
enter
or
test
xchg
xorb
dec
shrb
xorl
insl
insl
fwait
inc
inc
and
sbb
or
push
jle
mov
push
adc
fdivrp
sar
adc
inc
rolb
add
ds
sub
loope
dec
dec
mov
ds
push
callw
jno
test
les
push
lcall
lock
sbb
test
sbb
in
hlt
les
xor
jg
inc
rolb
rorb
pushf
lret
int3
jns
cld
cmp
mov
add
ss
cmp
xorb
mov
add
test
ss
push
movsb
xor
add
xor
and
add
xchg
xchg
sbb
rclb
shr
shlb
jmp
jns
mov
cmp
inc
xor
pop
pop
idivb
stos
jmp
push
mov
inc
imul
sbb
js
inc
adc
sbb
out
push
push
mov
jo
outsw
es
cmp
lods
loopne
shlb
shlb
inc
dec
cli
shrb
mov
scas
inc
inc
je
decb
add
sub
adc
int3
inc
push
xor
pop
push
rol
aam
xorl
enter
mov
rcrl
rorb
push
adcl
jmp
cld
outsl
fadds
mov
dec
mov
jns
shl
lahf
or
xor
push
cmp
aaa
mov
or
xchg
push
push
mov
cmp
mov
sar
scas
jo
fsts
lret
cmp
xor
mov
or
push
dec
push
insb
mov
aad
or
add
cld
and
cli
mov
add
pop
outsb
incl
and
lods
or
call
sub
mov
push
sbb
lret
pop
pop
cmc
sbb
shr
stos
push
push
lret
fmuls
lock
pop
call
call
jmp
addl
inc
ret
cltd
clc
les
loopne
add
imul
loopne
lock
pop
mov
cltd
pusha
popl
ror
jmp
add
push
add
call
insb
dec
cmp
inc
rcll
push
or
pop
jg
xor
cmp
add
out
cmp
je
mov
repz
movsl
mov
mov
sbb
iret
inc
int
pop
sub
lcall
mov
cmp
or
push
pop
insl
js
repz
push
fcompl
add
jmp
adcb
loopne
add
add
cld
jmp
ret
mov
sub
ret
sub
push
popf
fdiv
add
nop
mov
aad
jbe
pop
rorb
adc
mov
inc
ljmp
les
test
loopne
push
fdivrl
and
inc
cmp
outsb
cmp
inc
mov
sub
inc
push
loopne
or
push
dec
add
pop
arpl
or
out
add
frndint
lret
insl
inc
bound
cld
push
movsl
xchg
dec
pushf
add
pop
test
and
aas
adc
push
and
dec
inc
cld
rclb
sub
adc
xor
aas
loope
xchg
lcall
push
addl
je
je
inc
loopne
test
adc
jecxz
sbb
inc
jne
xor
rcl
lahf
lods
mov
inc
pop
lret
mov
les
cmpb
mov
jbe
cmp
lret
ss
add
add
dec
inc
and
mov
push
call
insb
jns
insb
lods
lcall
cltd
or
stos
sbbl
arpl
ljmp
add
lret
sbb
dec
aam
rolb
or
sbb
xor
sbb
sbb
insb
mov
mov
and
inc
xor
sub
xchg
sub
test
or
xchg
adc
add
outsb
nop
shlb
lods
xlat
or
aam
xor
xor
jo
jbe
fcmove
movsb
pop
mov
inc
je
mov
daa
mov
inc
push
jbe
sub
fs
dec
jae
rcll
orl
out
and
xor
pop
mov
jb
mov
dec
cmp
aam
add
jb
adc
in
out
das
cmpsb
jge
mov
mov
mov
xchg
je
and
push
and
test
loop
fiadds
add
push
sbb
lds
push
and
cwtl
mov
jno
in
neg
mov
jne
xorb
mov
mov
outsl
dec
enter
insl
aam
pop
xor
fisubrs
data16
jmp
ret
into
push
jg
mov
mov
call
inc
call
and
decb
and
jmp
cmpsb
xchg
mov
add
and
lea
out
adc
pop
cmc
stos
imull
orb
sbb
or
ret
and
add
jle
test
arpl
push
push
mov
mov
push
dec
add
outsl
loop
and
push
or
scas
test
pop
cmp
dec
popa
and
xlat
xor
jb
sbb
inc
inc
push
jne
out
lock
fwait
jmp
addl
loopne
dec
cmp
push
xor
int3
push
sbb
push
push
or
mov
mov
xchg
fwait
mov
cmp
data16
popa
push
jle
add
rorl
push
out
pop
lret
adc
xor
nop
loopne
aad
sbb
jae
push
mov
stos
cmp
imul
adc
adc
jae
pusha
or
adc
dec
sbb
popa
js
fmuls
outsl
pop
loopne
dec
rcr
inc
mov
push
lret
outsb
sbb
ljmp
jae
in
call
mov
push
pop
dec
out
mov
push
add
jp
sub
in
mov
pop
push
push
add
mov
cwtl
les
mov
or
cmp
shll
ljmp
push
adc
rcr
sbb
sbb
lods
gs
add
je
mov
adc
push
adc
int3
cld
pop
rolb
push
shl
add
add
cmp
add
imul
xor
je
mov
js
clc
cmp
xchg
mov
or
jecxz
push
sbb
or
jl
idiv
in
add
fidivs
out
mov
push
orb
decb
in
dec
cld
imulb
jne
test
aam
mov
mov
iret
cmp
loop
rolb
pop
add
push
enter
test
or
jg
or
fimuls
inc
cmp
das
cltd
and
and
mov
dec
les
clc
mov
add
and
rdmsr
ds
imul
mov
mov
nop
or
add
leave
push
sar
aaa
cli
cmp
popa
inc
add
pusha
push
mov
shlb
fidivrl
nop
push
push
int
shl
aas
and
push
inc
decb
sbb
inc
insl
adc
in
ljmp
jb
xor
mov
xor
cwtl
mov
push
xchg
inc
jle
or
stos
push
jbe
sahf
add
mov
mulb
je
xchg
push
jne
push
or
scas
dec
xor
sub
gs
add
add
inc
sub
faddl
jl
scas
adc
sub
addl
mov
aam
sbb
pop
push
add
aas
or
mov
or
inc
jl
clc
push
movsl
push
pop
fcomps
test
data16
call
loope
jo
test
mov
invd
mov
pop
inc
inc
xchg
adc
loopne
aad
or
mov
push
push
bound
add
mov
mov
mov
mov
adc
push
stos
rcl
xchg
sahf
js
sub
rcrl
fldpi
and
dec
and
ret
arpl
adcb
inc
push
ret
push
imul
xor
std
and
loop
lods
sub
xchg
dec
popa
push
stc
testb
pop
orb
push
push
outsl
test
cmpsb
cmc
xchg
and
xchg
clc
mov
aam
mov
ss
push
push
cld
stos
adc
xchg
xchg
ja
jae
add
mov
mov
xchg
mov
inc
je
add
nop
in
into
mov
icebp
imul
sub
test
jne
push
icebp
push
int
jp
in
fsubrp
fs
mov
sub
fcos
mov
push
pusha
xor
jp
push
cmpsb
jbe
sbb
dec
dec
add
popa
call
in
push
pop
je
xor
loop
pop
lret
cmp
jne
stos
mov
add
sbb
pop
add
sbb
and
inc
or
mov
test
cmpb
ds
fsubrl
hlt
js
mov
in
test
dec
mov
test
pusha
insl
je
or
cwtl
add
inc
mov
orl
test
std
inc
push
pop
xor
jl
jne
xor
daa
push
mov
int3
push
push
stos
pushf
incb
or
test
add
jo
pop
ficompl
testl
inc
inc
cld
mov
out
and
and
push
pusha
sbb
or
sbb
outsb
insb
mov
jmp
loopne
mov
push
sahf
orps
lret
lret
and
aaa
xchg
pop
les
lock
mov
mov
xchg
jno
inc
pop
stc
ret
pop
call
push
stos
add
pop
stos
dec
cmp
lock
lods
jns
int3
push
jne
mov
or
mov
sbb
adc
in
dec
js
into
mov
inc
push
adc
gs
jge
or
dec
or
add
inc
pop
rorb
or
int3
cmp
push
sub
fistpll
cmp
ds
xchg
push
test
push
jle
jle
xor
sub
je
repz
inc
lock
sbb
ret
fldt
aaa
jp
mov
movsb
push
movsl
mov
pop
pushl
jmp
add
push
jne
add
mov
cmp
push
imul
shr
inc
jo
xor
ja
insb
test
loope
inc
scas
in
adc
test
push
push
inc
add
or
sub
sbb
mov
mov
ss
in
or
cmp
lock
or
push
mov
insb
or
fcmove
xchg
xor
loopne
std
pop
push
add
fiadds
or
scas
adc
in
xchg
push
clc
mov
xor
lock
out
or
and
xlat
pushl
std
cmp
pop
mov
aas
cld
cmp
mov
loopne
inc
add
mov
ficoms
imul
or
data16
inc
dec
xor
test
cmp
dec
rorw
sub
inc
or
push
repnz
mov
adc
xchg
push
repnz
mov
enter
add
jae
ja
or
add
test
add
addl
push
mov
lods
enter
push
in
adc
jl
fs
inc
out
inc
in
clc
mov
xchg
jne
push
adc
xor
lcall
add
aaa
fmuls
adcb
cmc
pop
dec
and
push
mov
je
inc
and
mov
pusha
outsb
clc
jo
adc
adc
dec
inc
sbb
inc
loop
sbb
mov
sub
in
push
add
cmp
rcll
mov
or
test
push
shll
push
add
call
xchg
or
iret
push
sbb
xor
nop
imulb
dec
xchg
push
movsl
push
je
loope
adc
pop
lock
or
sbb
adc
cmp
mov
mov
mov
mov
test
repnz
int
movsb
or
pop
js
xor
xor
mov
daa
add
add
jp
push
inc
dec
test
rolb
aas
xchg
xor
adc
push
mov
scas
roll
sbbb
mov
movsl
pop
fstps
lret
or
push
rolb
cld
pop
pop
orb
mov
in
mov
mov
ret
in
mov
aas
adc
jge
inc
testl
push
aas
pop
insl
sub
push
sbb
loopne
pusha
cli
subl
add
push
and
jp
mov
sbbl
adc
mov
rolb
lods
cmp
dec
jbe
lcall
les
add
sbb
jne
push
mov
aam
add
cli
or
add
sbb
inc
push
adc
pop
jp
sub
pop
dec
das
push
nop
cli
scas
push
push
mov
leave
adc
into
lock
scas
lods
mov
outsl
fs
and
pop
rorb
mov
dec
aad
push
inc
xchg
call
out
or
push
or
aad
add
push
pop
pusha
les
mov
bound
add
dec
jns
cld
sbbb
mov
push
inc
je
fcomi
andl
and
nop
cmp
in
or
pop
xchg
hlt
push
inc
icebp
adc
push
dec
dec
arpl
in
mov
jl
stc
add
cmp
mov
aad
ljmp
aad
push
imul
mov
or
add
inc
repz
dec
push
sub
ss
and
adc
inc
jb
shlb
add
fsub
push
mov
enter
std
dec
mov
push
jp
insb
or
push
cmpb
movsl
es
cmp
out
or
xchg
pop
idiv
xor
test
add
enter
std
push
push
inc
insb
add
cld
inc
enter
sub
sahf
inc
inc
rcll
rcll
push
jge
pop
sub
adc
add
push
mov
mov
or
shrb
lds
les
lock
mov
pop
mov
inc
les
lods
movb
std
mov
cmp
adc
push
xor
push
mov
add
push
add
call
sub
test
ss
mov
roll
push
inc
jo
dec
mov
push
jne
fs
dec
lock
push
mov
jbe
sbb
pop
aas
sub
fcompl
push
das
test
adc
sahf
xor
mov
cmp
movl
push
pop
inc
push
add
xchg
push
push
popa
or
sbb
pop
xor
outsl
je
xor
clc
or
cmp
prefetch
lret
add
fs
bound
ljmp
inc
fiadds
dec
push
std
xor
adc
mov
pop
dec
add
sahf
mov
cmp
fadds
cli
into
loopne
mov
mov
imul
inc
and
add
lea
jo
and
scas
push
mov
adc
dec
mov
adc
div
pop
mov
inc
mov
cmc
add
jbe
lods
adc
aam
jle
jno
cmp
mov
call
std
inc
testb
outsb
adc
mov
stos
xlat
xchg
fidivrs
hlt
add
push
mov
hlt
mov
cmpsb
fiadds
test
cmp
cmp
jo
outsl
or
adc
mov
push
fs
pop
rorb
cmp
inc
inc
xchg
push
mov
mov
loope
pop
sub
rolb
into
clc
xor
lods
lea
add
inc
addr16
inc
rcrb
adc
jne
mov
pushf
jne
roll
stos
test
push
sti
pop
das
and
push
mov
add
push
mov
inc
jne
fimuls
xor
shr
or
call
pusha
in
call
push
cmp
add
and
out
mov
imul
aam
negl
and
mov
sbb
push
push
aas
test
cmovne
aaa
inc
jns
pop
sbb
pop
rclb
mov
aaa
or
psubsb
cmp
jo
lock
mov
mov
insb
sub
into
test
sub
insb
test
push
dec
mov
ret
subl
and
or
push
adc
lea
daa
mov
mov
and
jmp
xchg
in
jg
pushf
std
sbb
or
scas
add
and
sub
pop
sbb
add
stos
lahf
jle
jo
out
lea
dec
lods
shrb
testl
fs
fcoms
push
movb
sbb
cs
decl
inc
xchg
int3
push
movb
aas
dec
push
pop
pushf
into
retw
adc
adc
sbb
xor
or
push
dec
dec
push
lea
cmp
or
jl
add
jb
outsl
inc
data16
adc
ret
jne
inc
push
fsubrl
mov
idiv
xor
cld
add
push
xchg
outsb
cmp
test
cwtl
int3
push
shll
or
popa
es
mov
and
xchg
add
movb
sub
gs
jg
pusha
into
test
insb
pop
cmp
das
push
jo
jne
test
cld
stos
push
pop
push
and
je
adc
test
lret
stos
mov
push
add
shlb
lea
addr16
mov
push
jno
fdivs
cld
lea
sbb
inc
cmp
inc
add
adc
in
mov
and
push
push
push
xchg
mov
dec
data16
sbb
push
cmp
inc
mov
sbb
test
inc
pop
cld
mov
repnz
pop
cmp
push
pop
aad
mov
mov
rolb
ror
popa
shrb
pop
fs
mov
xchg
sbb
out
lea
add
addb
test
test
adc
adc
dec
push
out
into
std
mov
and
nop
jmp
push
or
and
mov
lods
xor
jmp
push
mov
sbb
out
repz
call
add
mov
add
int3
testb
sub
mov
inc
mov
adc
std
ja
sarb
jmp
popf
stos
shlb
rolb
shlb
push
cs
push
into
je
test
xor
dec
or
addr16
aas
outsl
sbb
jo
jg
mov
pop
fdivp
inc
push
jbe
ret
dec
mov
push
fldl
incl
loopne
push
jmp
jge
sub
sub
xor
stos
push
mov
cli
push
xor
gs
jo
test
outsb
jecxz
mov
mov
sub
sub
imul
adc
stc
jne
das
mov
push
jmp
cli
clc
sbb
lock
test
into
inc
jmp
shr
xor
shll
sbb
loope
test
fildl
push
repnz
xchg
inc
or
adc
mov
mov
inc
pop
dec
loope
test
xor
rclb
mov
out
loop
stc
lods
mov
rorb
pop
cmc
hlt
outsb
je
inc
xchg
stos
lret
mov
add
push
icebp
push
les
inc
inc
pop
aas
jne
cmpsb
sbb
add
pop
sub
decl
pusha
sarb
popf
pop
leave
lea
mov
test
sub
les
sbb
cmp
push
cld
pop
and
lretw
loope
inc
add
andb
int3
pop
mov
inc
add
in
outsl
loop
mov
or
jle
insb
in
push
nop
jns
cli
push
mov
stos
and
cmpsl
in
or
cld
adc
loop
dec
cmp
xor
jmp
xor
je
in
push
xor
fwait
mov
mov
mov
fadds
loop
and
or
cmp
decb
mov
call
mov
decb
in
rolb
push
mov
jo
push
add
or
add
pop
inc
decb
mov
int3
xchg
sub
cmp
sub
dec
repnz
pop
sbb
jno
test
int
jge
fstl
mov
popf
nop
jmp
in
adc
dec
je
cmp
test
je
jne
add
add
sub
test
inc
sbb
or
or
es
cmp
aam
push
pop
in
repz
add
fcompl
adc
pop
mov
add
bound
cli
cmpsb
call
ficompl
call
xor
mov
inc
push
nop
cmp
push
or
jne,pn
insb
pop
fisubl
lock
push
mov
jl
pop
or
or
add
sbb
mov
sub
jp
cli
adc
add
or
mov
sub
mov
push
mov
shrl
jg
out
ja
xor
fs
push
xchg
call
add
and
push
mov
sbb
push
jne
sbb
cmp
sbb
test
push
loop
cmp
xor
mov
xor
insb
push
incb
imul
pop
rolb
fisubl
mov
adc
xor
adc
mov
ljmp
imul
cwtl
add
cmp
inc
shr
mov
push
test
bound
shlb
cmp
mov
fs
ret
ss
or
push
inc
cli
aad
sti
or
sbb
les
mov
enter
sbb
add
cmp
in
mov
xlat
imul
dec
gs
adc
daa
ret
push
loop
js
xor
dec
jmp
and
testb
adc
dec
pusha
lret
mov
je
cmpsb
test
dec
sub
es
pop
int3
fistps
test
mov
dec
out
add
mov
push
test
leave
pop
insb
fcoms
push
shrb
push
mov
mov
push
cld
mov
push
ljmp
mov
cmc
add
cmp
out
loopne
orb
daa
mov
mov
hlt
in
adc
sbb
adc
fsub
adc
adc
push
icebp
mov
sbb
mov
je
and
add
scas
add
dec
out
sbb
push
add
sbb
dec
incl
cmp
add
fidivrl
dec
call
pop
mov
sub
jl
add
rclb
add
icebp
and
xor
lods
fidivrs
dec
bound
scas
dec
dec
lods
mov
push
stos
fs
mov
jne
mov
pop
jnp
data16
inc
lods
movsw
lcall
call
mov
add
lock
push
lea
lahf
pop
loop
std
fadd
xchg
decl
mov
pop
lret
test
inc
push
pop
xchg
leave
clc
sub
push
adc
lock
int3
aad
sti
add
pop
pop
xor
mov
add
jne
cmp
jne
mov
push
test
lea
mov
jo
pusha
in
dec
lahf
nop
rolb
cld
dec
inc
sub
notb
adc
mov
lea
ret
hlt
mov
cmc
mov
dec
in
mov
inc
lret
hlt
mov
jne
xor
mov
les
lahf
and
rol
inc
jp
clc
stc
incb
push
push
adc
dec
adc
rcrl
mov
loopne
data16
fstpt
dec
jge
xor
jmp
je
or
mov
adc
pop
mov
cltd
rol
inc
addr16
test
es
jp
icebp
test
iret
add
hlt
aaa
call
shlb
inc
pusha
add
aaa
je
cmp
aaa
mov
inc
mov
fildl
adc
add
add
xchg
and
push
dec
ljmp
int3
pop
xor
lods
movb
scas
es
push
sub
add
ja
mov
dec
inc
hlt
call
jo
sub
jg
add
xchg
bound
push
les
inc
movsl
rclb
fsubrs
std
hlt
adc
mov
pop
popf
call
aam
xor
or
mov
inc
pop
ss
shl
push
subl
scas
adc
testl
sbbb
mov
adc
xchg
lret
loopne
cmp
inc
add
add
mov
add
or
mov
inc
or
rclb
push
or
inc
rorb
mov
adc
cmp
mov
fwait
dec
mov
sbbb
hlt
mov
inc
imul
inc
push
hlt
jg
inc
push
and
rcll
mov
mov
inc
inc
push
loopne
sbb
push
dec
xchg
inc
lcall
sahf
push
loopne
add
push
mov
cmp
movsb
test
cmp
fucomi
add
movsl
lcall
mov
mov
sbb
push
mov
jl
mov
lods
jno
insl
mov
test
push
cli
adcb
add
test
or
sbb
add
inc
sbb
pushf
scas
or
jbe
ljmp
fs
or
mov
inc
mov
jne
xor
push
xchg
aas
stos
and
fs
leave
mov
lcall
fsubrs
cld
loopne
sub
in
pop
mov
in
rorb
lea
push
add
push
or
push
push
orb
push
sahf
inc
inc
dec
cmp
dec
push
call
pop
mov
pop
aam
shlb
mov
push
or
imulb
mov
jbe
jge
imul
hlt
pusha
rorl
sti
or
pop
mov
sbb
dec
pushl
movsb
loopne
push
loope
add
in
mov
jae
aaa
sbb
push
test
push
push
sbb
je
rcrb
add
and
add
sub
add
rclb
or
mov
aaa
loop
insb
lret
jbe
add
lods
stos
lods
add
inc
loopne
mov
aaa
movsl
hlt
clc
shll
dec
shll
imul
mov
inc
test
nop
test
dec
cmp
sahf
lods
test
shlb
adc
fimull
outsl
shrl
outsb
mov
sub
dec
sbb
lock
ja
adcl
insb
lods
pop
leave
jo
add
cld
incl
stos
push
push
clc
rorl
jge
dec
pop
push
fsubrl
lock
pop
ret
pop
jmp
aas
lods
icebp
xchg
add
aam
push
call
mov
adc
add
mov
call
pop
inc
jmp
outsb
in
or
inc
push
and
sub
lods
das
mov
stc
xor
jne
push
rcr
sub
inc
mov
and
cmp
inc
inc
lds
adc
push
lock
enter
push
test
mov
mov
inc
jge
cmpl
fcmovb
lcall
imul
lock
push
loopne
adcl
decb
or
mov
test
sub
addl
and
xchg
pop
sahf
mov
cld
lcall
scas
fst
cld
push
subb
inc
dec
push
mov
mov
xor
popl
ds
push
inc
inc
jp
mov
into
and
or
hlt
dec
jl
mov
jbe
aaa
cld
xlat
and
inc
cmpsl
ds
pop
add
inc
or
fsubrl
pop
dec
pop
and
test
aas
cmpsb
pusha
and
pop
outsb
mov
call
clc
sar
cmc
cmp
jl
add
pop
lds
inc
dec
sub
cmp
mov
jne
add
inc
inc
and
rclb
add
lods
sbb
xor
nop
in
sbb
orb
push
xor
dec
sarb
push
adc
dec
push
jle
mov
push
mov
dec
ffreep
stos
pop
in
or
sbbl
nop
mov
pop
or
rorb
mov
shl
test
aad
ret
push
push
cmp
mov
sbb
rolb
call
push
out
les
enter
mov
push
and
insb
mov
or
int3
jbe
push
jg
mov
cmpb
push
mov
dec
xor
jae
rcrb
mov
mov
rclb
data16
cmpsl
jge
fbld
ret
jge
lea
jmp
lahf
faddp
or
pop
dec
lcall
push
ret
push
jp
outsl
les
inc
jne
fiaddl
sahf
add
pushf
mov
cmpsl
ljmp
icebp
dec
push
loopne
xorl
cmp
mov
and
adc
stos
call
sarb
in
test
mov
movl
xor
sarb
iret
pop
and
push
adc
std
push
xor
add
add
repz
add
pop
push
mov
push
cmp
xchg
mov
push
ds
fwait
aam
ljmp
push
xor
mov
movsb
adc
and
daa
inc
bound
hlt
js
sbb
shl
push
and
mov
je
lock
push
fcmovnb
pop
sti
adc
nop
xchg
inc
cmp
inc
sub
push
ret
or
pusha
inc
fdivs
xor
test
fiaddl
inc
xor
adc
mov
dec
jp
inc
xchg
adc
mov
data16
mov
outsb
jl
add
in
xor
add
cmp
loopne
repz
cli
sub
pop
jae
sub
loope
decl
out
inc
jecxz
push
idivb
fcoml
lea
or
jle
filds
xor
or
icebp
inc
adc
idiv
je
cmpsl
push
add
inc
push
cld
cli
xadd
rolb
adc
push
loopne
push
jnp
scas
cmc
xor
mov
mov
lds
fsubrl
or
sbb
and
adc
or
pusha
add
dec
or
dec
ljmp
cmp
adc
adc
repnz
xchg
sbb
and
cwtl
cmpsb
clc
or
movsl
test
mov
push
test
push
and
pushf
fs
pop
push
jno
xor
addw
fisttpll
jmp
std
or
add
test
add
loopne
cwtl
cwtl
xor
adc
outsb
les
scas
ret
mov
test
pusha
pusha
jecxz
mov
sbb
lock
cld
inc
cwtl
and
clc
adc
adc
scas
je
cmp
inc
pop
pop
pop
loop
xor
jo
scas
cld
je
pop
dec
sub
clc
push
xor
insb
push
add
std
push
dec
dec
rcl
out
push
out
xchg
mov
dec
sub
fs
push
rorb
pop
push
gs
mov
stos
test
arpl
test
or
lock
add
push
insb
es
sbb
xchg
emms
fsubs
adc
shl
and
iret
push
lret
xor
lret
mov
pop
xor
pop
sbb
pop
sarl
mov
and
push
and
add
fiaddl
mov
insb
andb
pop
cli
test
inc
push
sar
stc
adc
cli
xchg
out
andl
lods
out
push
sbbb
outsb
and
enter
push
sub
outsb
pushf
sub
add
cltd
rolb
add
push
push
mov
cmp
mov
push
add
loopne
and
cmp
cmpsb
or
push
outsb
stos
pop
cli
or
adc
sub
fadd
sbb
cmc
dec
push
mov
push
cmp
pop
out
arpl
test
aam
push
icebp
ret
push
and
sbb
adc
test
jecxz
cmp
stos
and
out
mov
int
mov
push
jb
mov
in
inc
call
icebp
adc
sub
xchg
and
das
xor
decl
dec
jle
adc
inc
mov
inc
xchg
stos
or
pushf
push
lock
cwtl
sbb
movsb
sti
aam
dec
mov
lea
add
sahf
cmp
xchg
push
or
es
mov
movsb
movsb
or
sbb
jne
add
adc
sbb
or
add
xor
inc
call
add
pop
jo
decl
mov
fdivs
call
clc
enter
pop
add
icebp
add
arpl
cmp
mov
mov
jl
aaa
mov
jg
add
out
sub
mov
sub
sar
lock
xor
push
test
cmc
inc
sub
stos
xor
xor
or
fidivrs
pop
cmp
in
xchg
sahf
fldl
add
add
sar
cmp
adc
ss
push
ds
mov
add
lock
inc
test
sbb
xorl
or
loopne
jo
ljmp
das
jbe
push
xchg
pop
dec
lock
push
mov
jo
jb
adc
pop
hlt
and
cld
add
adc
push
orb
arpl
das
add
pusha
outsb
outsb
sbb
and
adc
add
mov
add
mov
ss
cli
add
rcll
aam
sbb
inc
lret
jne
xorb
or
inc
je
and
call
mov
iret
stos
clc
and
or
popa
rolb
mov
xor
jmp
xor
jle
xchg
jmp
add
pop
sub
adc
loope
inc
jge
mov
push
xchg
pop
push
pop
in
fs
add
and
cmp
or
subb
es
inc
or
jecxz
jb
xor
jle
adc
sub
mov
add
cmp
mov
lea
push
mov
pop
cli
push
cmc
rolb
adc
add
mov
xchg
fs
cmp
add
ret
int3
dec
sub
mov
and
xchg
jne
cwtl
pop
fldt
inc
and
xor
add
pushf
xchg
push
or
jp
ljmp
add
or
fiadds
imul
adc
push
sbb
mov
mov
js
push
sub
xchg
test
insb
xor
xchg
push
mov
outsb
fadds
pusha
jae
mov
push
jl
xchg
gs
inc
cmp
dec
pop
es
test
and
sub
sbbb
test
sahf
push
mov
mov
ja
xor
rcrb
aam
fadds
push
jo
push
movsb
push
inc
test
insb
sbb
inc
fistpll
pop
les
lock
and
lods
pop
std
jne
fidivs
ss
lea
fistpl
scas
mov
cwtl
mov
mov
pushl
cmpsb
rorl
xchg
aaa
or
gs
and
adc
push
into
mov
ror
cmp
xor
je
mov
jmp
sar
sbb
in
mov
pop
add
dec
xchg
adc
mov
xchg
sbb
jl
lods
sbb
mov
leave
or
push
out
sub
imul
int3
data16
mov
mov
mov
mov
imul
outsl
mov
popa
roll
mov
inc
ljmp
divb
cmp
pop
je
push
ja
mov
hlt
jb
or
les
dec
xchg
add
mov
call
insl
insl
loopne
adc
fs
call
cmp
data16
cmp
pop
or
push
push
int3
addb
sub
fbstp
push
add
sbb
stos
mov
adc
ljmp
and
mov
or
jne
orl
jge
int3
add
in
sbb
xchg
aam
and
xchg
sbb
add
sbb
mov
fs
loope
mov
ss
push
sbb
add
dec
adc
aas
add
sbb
aas
push
pushf
mov
inc
and
jl
test
loopne
inc
xor
adc
into
push
sbb
mov
xchg
insb
shlb
test
cmp
bound
mov
pop
ret
lahf
add
add
adc
test
call
lock
test
jo
add
orps
mov
mov
out
test
xor
add
adc
adc
js
das
xor
adc
fs
inc
jne
popf
les
cwtl
xchg
inc
xchg
and
sub
inc
addb
pusha
pop
hlt
fcomps
mov
add
pop
pop
mov
push
mov
inc
push
clc
or
dec
sar
ja
test
ds
jg
les
sahf
push
repnz
rcl
add
dec
fisttpl
sahf
lret
loopne
xor
push
and
fdivs
in
or
leave
dec
or
add
in
fsubrs
adc
outsb
sub
push
cmp
into
or
fmuls
cmc
jge
add
or
add
mov
gs
jne
cmp
mov
sbb
sub
aam
movsl
inc
or
bound
call
aaa
into
jmp
push
add
or
movl
xchg
xchg
shlb
int3
mov
jg
les
jmp
mov
mov
and
pop
xchg
stos
gs
xor
pop
test
loopne
push
pop
pop
sbb
mov
mov
cmp
push
les
sbb
push
xor
jo
xor
stos
lds
or
dec
fmull
ficomps
je
sbb
push
sar
outsb
js
sbb
or
mov
inc
xor
das
movsb
inc
data16
icebp
push
and
cmp
push
inc
add
shlb
shlb
sarl
dec
push
enter
incb
repz
inc
or
testl
hlt
jbe
inc
mov
and
stos
add
mov
or
push
push
and
sbb
sbb
mov
sarl
add
cmp
std
mov
cmp
fcomps
lock
add
pushf
ds
sahf
ficoml
sub
outsl
mov
insl
mov
mov
or
mov
loopne
ss
stc
icebp
xchg
jp
xor
rclb
xor
inc
mov
clc
bound
mov
jb
data16
into
pusha
jmp
pusha
push
xor
add
add
inc
jl
rol
fmuls
sub
cmp
mov
in
xchg
xor
push
sub
xor
inc
call
add
test
mov
jae
inc
call
lods
in
push
fisubrs
lcall
ss
rolb
xchg
and
dec
cwtl
loope
pop
lods
mov
and
sar
mov
jb
mov
mov
or
dec
push
jbe
stos
xchg
sbb
les
mov
mov
std
xchg
add
fcompl
xor
test
pop
and
jge
iret
push
inc
or
mov
scas
sub
or
mov
jb
pop
inc
call
clc
js
lock
int3
jmp
pop
js
add
je
mov
bound
push
test
popf
add
outsl
adcl
out
jo
cmp
push
cmpsb
jne
jne
das
xor
call
jne
jge
dec
jae
rcl
rclb
add
gs
cs
cld
sub
inc
lods
xor
je
pop
call
cmpsb
cmc
dec
xor
mov
jb
je
pop
jmp
ficoml
jmp
pop
inc
je
cmp
push
sub
mov
mov
push
fadd
into
push
adc
and
insl
adc
int
loope
or
and
je
fwait
push
push
dec
xor
mov
push
add
xchg
ja
movsb
push
lods
call
sub
imul
out
ds
mov
scas
clc
imulb
cwtl
rcrb
in
cld
es
sbb
mov
or
or
sahf
mov
push
divb
dec
xor
xor
adc
push
and
pop
call
call
and
std
fwait
insl
loop
insl
adc
add
in
sub
sarb
ficoms
sub
add
clc
xchg
adc
inc
xorl
push
xchg
xchg
xchg
mov
in
and
loope
idiv
push
inc
add
sarb
sahf
or
xor
popf
inc
stos
sbb
mov
rolb
loopne
push
xor
mov
fsubs
std
add
jl
mov
shl
add
push
sbb
mov
add
mov
dec
outsb
push
sub
and
shlb
ja
lock
sti
repnz
adc
aaa
loope
lea
cmp
or
cmp
push
or
std
cmc
add
inc
xchg
xor
loope
mov
push
adc
fimuls
jne
dec
and
inc
xchg
or
test
cmc
lods
cld
dec
sbb
add
cli
outsl
rsqrtps
adc
test
orl
iret
ret
dec
push
and
push
jecxz
push
ret
les
jo
inc
ljmp
mov
ficoml
mov
aad
and
andb
out
or
pop
cs
dec
sarl
cmove
rcrb
push
cld
das
rol
sub
das
cmp
inc
adc
jecxz
test
lock
cmp
inc
orl
sub
dec
in
enter
mov
fsubr
ret
and
inc
sarb
jge
push
inc
out
out
jbe
add
je
das
mov
cmp
xor
mov
sbb
push
mov
lock
enter
dec
add
adc
inc
xor
negb
sti
cli
je
pop
lret
jb
rclb
das
fadds
jl
cmp
dec
push
ds
push
ret
rcrb
testl
jle
je
int3
mov
rorb
les
daa
push
test
xor
adc
lock
gs
lds
add
test
ljmp
push
fistps
push
xchg
and
add
mov
ret
out
mov
incl
pop
cwtl
push
loop
loop
mov
jecxz
add
adc
rorb
fwait
and
adc
inc
ficoms
xchg
xchg
stos
pop
data16
adc
sahf
clc
or
cmp
xchg
movsb
mov
push
adc
lods
ror
xor
pop
pop
dec
pop
xor
leave
fistl
jmp
fsubrs
sub
test
call
xor
jb
xchg
dec
fdivrl
ret
add
je
es
ficomps
or
pushf
imul
mov
xor
outsb
fadds
mov
or
add
adc
dec
adc
outsb
add
hlt
pop
sub
call
rcll
dec
stc
fs
stc
pop
iret
and
push
test
xchg
ret
test
mov
shlb
cli
cmp
inc
or
shr
int
in
adcb
adc
or
je
in
and
incl
jecxz
cmpb
or
lock
test
inc
push
jg
mov
pushf
ljmp
shr
inc
adc
outsb
sub
cmp
pop
jp
lods
pusha
icebp
mov
mov
js
or
fistps
or
gs
mov
dec
testb
or
jmp
cmp
mov
dec
xchg
fs
push
xor
test
inc
xchg
aas
les
incl
add
add
xor
jmp
pusha
or
ljmp
sub
xchg
cmp
sbb
insb
adc
push
sbbl
or
mov
sub
sub
jge
dec
or
add
jge
test
fs
xchg
popa
add
mov
negl
mov
fldl
jl
aam
js
fmull
test
ss
add
inc
dec
lock
jmp
and
and
xor
sub
jbe
subb
movb
das
push
scas
jns
test
dec
add
sbb
inc
dec
data16
sub
mov
push
mov
or
push
nop
sbb
jb
lods
fs
sbb
sbb
add
in
xchg
je
inc
mov
loope
les
and
shr
sub
xor
loopne
jmp
ss
clc
dec
xchg
in
push
mov
dec
mov
roll
loopne
push
push
insl
or
add
push
aam
repz
fcoml
lock
xchg
and
ret
push
adc
sub
cli
lea
call
adc
pop
push
pushf
incb
dec
dec
orb
add
sub
mov
movsb
imul
jl
pop
adcl
inc
out
dec
push
cmp
push
or
clc
and
mov
mov
hlt
mov
or
fstps
mov
les
push
mov
stc
ljmp
fdivl
repnz
xor
push
cmp
push
imul
es
inc
cs
je
mov
add
xchg
pop
sub
xor
cmp
ss
lsl
mov
push
adc
push
pusha
jg
insl
jne
pop
inc
mov
cmp
mov
mov
push
mov
jmp
fistl
frstor
bound
lock
xchg
out
add
cmpsl
mov
addb
shrl
xchg
push
sahf
xor
and
rcl
xchg
adc
inc
cld
xlat
mov
jo
xor
or
fcmove
test
lock
aam
rcrb
icebp
or
gs
or
rorl
push
data16
sub
xor
inc
xchg
push
push
jo
mov
lahf
adc
movsb
jae
cmp
and
mov
xchg
dec
add
mov
test
add
and
mov
mov
jbe
jne
adc
fs
jl
out
rolb
push
dec
and
push
push
mov
shl
std
addl
xor
push
andb
mov
in
pop
push
xor
cmp
dec
in
cs
sbb
push
std
and
mov
imul
repz
xor
shlb
jne
iret
sub
rorb
inc
jle
hlt
add
push
mov
push
push
pop
push
incb
pop
icebp
bound
jge
xor
aam
rolb
add
mov
fidivrl
dec
push
or
inc
inc
xor
inc
nop
outsb
xchg
pusha
stc
fwait
mov
nop
lock
outsl
xor
inc
enter
popa
mov
push
mov
xor
mov
test
stos
sub
add
push
xor
push
cmp
mov
sub
lods
dec
loop
dec
shlb
in
mov
jge
mov
jle
lds
inc
push
call
pop
faddl
dec
dec
add
jne
aam
xchg
sbb
pop
cmpsl
mov
pop
push
mov
cmp
je
aas
xor
call
pop
add
push
xor
and
lods
pop
rolb
popa
loope
test
jp
or
mov
jnp
test
loopne
xchg
loop
std
xchg
push
mov
stos
mov
icebp
cmp
popa
int3
pop
add
and
loop
inc
dec
adc
sbb
inc
hlt
fildl
cmp
push
add
push
test
xchg
cmp
mov
out
gs
xchg
test
mov
xchg
fs
mov
mov
movsb
mov
inc
cmp
insb
cld
add
and
call
test
xor
pop
add
sub
xchg
pop
sub
rolb
lret
ss
mov
addl
ljmp
xchg
xor
push
bnd
and
pop
and
mov
inc
in
aaa
lahf
jae
push
push
lock
push
mov
es
scas
repnz
addl
push
sbb
lea
jmp
lock
cltd
test
sbb
and
std
cld
mov
pushf
mov
and
pop
movb
inc
test
pop
push
ret
push
xchg
ss
stc
mov
das
pusha
pop
bswap
sarb
adc
popa
xchg
lods
addl
cli
cwtl
pusha
cmpsl
gs
in
cmpsl
or
inc
xchg
jo
es
push
xor
mov
std
cmp
js
mov
adc
push
outsl
add
cmp
add
scas
outsl
pushf
add
fisttpl
xlat
cwtl
aaa
fs
sarb
in
cmp
movl
or
adc
vrcpss
adc
add
imul
inc
test
mov
dec
mov
sbb
jb
jmp
outsl
test
loop
mov
int3
jmp
andl
adc
mov
sbb
fisttpl
lea
fs
cmp
cmp
into
adc
and
jno
push
sarb
inc
sub
in
call
addb
pop
inc
mov
movsl
rorb
insb
push
int
mov
mov
push
lret
cmp
loopne
stos
rorb
pop
jg
mov
xor
pop
je
jle
add
and
icebp
and
shll
aas
insl
add
inc
mov
arpl
dec
dec
mov
ret
clc
mov
test
into
push
std
repz
sti
mov
lods
pop
inc
loopne
mov
test
pop
lods
inc
sar
inc
inc
shlb
int3
mov
stos
xchg
mov
mov
mov
jge
call
hlt
cs
lcall
std
or
jbe
mov
lcall
sub
mov
jb
mov
push
and
or
fiadds
sbbb
pusha
jge
loop
shrl
pop
int3
xchg
lret
mov
mov
inc
or
cmp
loopne
or
cmp
pop
xchg
aam
mov
pop
xorl
pop
lock
aaa
adc
push
enter
setne
leave
dec
or
ss
enter
hlt
or
mov
pushl
aam
add
mull
xchg
fstl
lock
sub
mov
adc
adcb
add
pop
or
pushf
mov
je
les
pushl
lcall
jmp
sahf
pushl
dec
test
test
es
and
sub
xor
inc
dec
ficoml
or
std
mov
aas
push
lods
pushf
mov
pop
sub
adc
fdivrl
pop
adc
add
int3
pop
lret
xorb
pop
add
dec
sbb
or
mov
fcom
and
mov
jae
movsl
fistpll
xor
imul
sbb
cld
adc
xlat
mov
xchg
call
es
jo
aam
loope
or
adc
and
sub
and
scas
mov
jne
lods
orb
outsb
aaa
jae
cwtl
fdiv
mov
decl
lods
in
push
in
or
sbb
cld
cmp
xchg
icebp
sbb
cld
mov
xor
pushf
mov
mov
ljmp
xor
jbe
xchg
adc
or
jecxz
data16
fidivl
jge
cli
test
imulb
mov
popf
call
and
es
inc
daa
hlt
mov
mov
popa
pop
dec
popa
mov
aaa
rol
pop
je
and
push
mov
ficompl
rorl
int3
aam
inc
lock
mov
aaa
mov
je
bound
add
dec
cli
add
inc
cld
scas
test
test
jbe
add
mov
pop
setp
xchg
mov
mov
inc
fstpl
dec
add
fdivl
ljmp
mov
dec
pop
ret
adc
sbb
adc
push
dec
in
loop
xchg
inc
cld
sub
xor
add
cld
decl
ret
cli
jbe
dec
neg
dec
cmp
cwtl
xor
ret
xchg
lret
loopne
mov
inc
or
xorb
mov
jne
mov
sbb
leave
push
mov
mov
icebp
insb
sbb
hlt
xchg
add
data16
sar
movsb
dec
pop
cld
or
les
add
sar
lcall
add
sub
dec
and
addb
int3
loopne
scas
add
add
jb
or
pop
push
fcomps
xor
in
movsl
ss
decl
jl
fs
jge
mov
dec
in
out
cmp
pop
mov
lock
jmp
les
enter
jo
dec
sar
pop
ret
lret
sub
movsb
xor
add
mov
lods
int3
outsl
ret
xchg
je
cmp
pop
pop
test
popa
sbb
lret
fisttpl
push
ds
je
call
adc
dec
mov
lret
xchg
test
data16
xor
or
sarb
jne
ror
loope
jmp
jne
push
shlb
or
in
add
test
jecxz
push
cmp
mov
je
sbb
leave
data16
jl
mov
pusha
add
inc
fsubrs
out
in
or
add
adc
mov
pop
aaa
repnz
out
and
add
inc
adcl
adc
dec
sbb
lods
sbb
adc
pushf
insb
sub
popf
xor
roll
or
lock
jl
lock
push
jle
in
mov
ror
mov
sbb
push
xor
ss
adc
icebp
mov
js
gs
dec
pop
sub
dec
hlt
pop
mov
push
std
or
mov
push
dec
mov
loopne
test
cmp
sbb
ret
jle
dec
das
rorb
rolb
jge
mov
dec
decl
mov
or
and
orl
add
jb
or
push
cmp
inc
gs
mov
and
adc
sub
and
aas
jmp
mov
sbb
fbld
enter
push
and
popf
std
push
push
loopne
cmp
or
push
add
jno
call
shr
xor
ret
sbb
add
inc
or
mov
jp
mov
addb
push
mov
add
jle
pop
sub
cmpsb
ret
je
xor
adc
jb
or
and
hlt
add
mov
enter
and
add
sub
mov
push
inc
fwait
push
outsb
sbb
or
ret
mov
xor
movsb
and
mov
out
mov
ret
sub
rorl
ret
pop
js
mov
dec
lock
inc
fsubrl
lods
int3
je
test
aaa
mov
adc
push
inc
pop
fs
insb
mov
dec
loop
add
xor
xor
pop
push
ret
add
xlat
jl,pn
sbb
and
shr
and
mov
mov
inc
aaa
push
rcrb
add
add
ljmp
xlat
xor
loopne
aaa
movsb
and
add
inc
pop
and
add
divb
adc
ret
gs
je
pushf
scas
in
pushf
sti
push
lcall
pop
imul
addl
jns
and
add
or
mov
mov
cmp
sbb
and
push
push
fcomps
icebp
sub
pop
cmp
ss
push
mov
and
push
adc
fs
pop
add
pop
enter
or
and
sub
je
xchg
cld
push
dec
lock
cmpsb
mov
sub
cmpsb
xor
in
add
int
cli
bound
fs
add
pop
rolb
lods
lods
insb
inc
xor
inc
and
adc
fdivr
shr
data16
and
jecxz
lds
insb
sub
or
cmp
mov
jmp
mov
ret
ss
in
out
js
notb
int
leave
fwait
sub
add
push
dec
mov
sbb
push
jecxz
ret
inc
mov
push
xor
mov
shlb
push
push
test
mov
mov
and
cmp
js
mov
inc
addl
loop
loop
loop
cmp
adc
xchg
xor
add
add
pop
jo
je
rcrl
xor
mov
fbld
ret
bnd
lea
push
add
ds
lods
mov
lea
or
loopne
mov
mov
mov
and
adc
and
xor
xlat
mov
sbb
push
test
sbb
mov
shlb
ja
pop
imulb
adc
rorb
ds
xchg
lret
mov
ds
int
cmp
ljmp
dec
pop
adc
mov
push
inc
cmp
push
pop
fs
stos
xchg
jg
jno
mov
rorl
cmp
mov
clc
inc
jecxz
xor
lea
push
les
addr16
es
push
mov
dec
xchg
jb
pushf
loopne
push
mov
sub
sti
add
adc
push
mov
xor
mov
les
xor
lret
out
js
adc
push
orb
mov
add
fcompl
add
mov
mov
jl
insb
movsl
sub
lock
cld
add
pop
incl
cli
xor
push
lret
adc
call
xor
movsl
xchg
add
outsb
call
xchg
mov
addr16
outsb
and
mov
insl
leave
pushl
fdivr
inc
loope
xor
fwait
sbb
roll
pop
divb
xor
push
ds
into
mov
mov
pushl
or
outsl
inc
mov
test
add
popf
faddl
cld
push
sarl
mov
pop
dec
jge
mov
addr16
test
jbe
lcall
in
pop
xor
dec
push
test
sahf
nop
or
or
dec
data16
ljmp
xchg
mov
iret
inc
fldenv
cmp
decl
into
jge
add
inc
fiadds
aas
pusha
push
scas
fs
dec
loopne
lea
loopne
test
adc
pop
pop
xchg
pop
push
out
rcl
jno
jle
pop
mov
popf
mov
sti
je
dec
divb
sub
mov
inc
cmpb
sbb
fcom
test
mov
das
loope
cmp
dec
inc
adc
lock
mov
mov
aaa
in
fcoms
cmc
andl
sub
xchg
ds
push
fdivrl
clc
mov
call
mov
adc
repnz
push
adc
add
call
out
aam
adc
loopne
mov
in
or
test
xor
dec
cld
lock
mov
jg
xchg
test
push
inc
shrl
adc
jo
rcl
fisubl
pop
mov
push
sarb
sub
add
adc
adc
add
mov
hlt
and
push
into
fwait
adc
fwait
adcl
mov
test
fmull
xor
ja
adc
negl
call
shlb
testb
xor
lods
jns
inc
gs
repnz
add
push
sub
insb
ficomps
xor
cli
push
addr16
ret
les
add
cli
or
xor
and
fbld
int3
push
int
cmp
jge
lret
xchg
inc
jmp
jne
sub
push
outsl
or
adc
add
shrl
out
cs
add
inc
jmp
cmp
pop
mov
add
add
push
xor
fdivrs
mov
std
popa
mov
add
sbb
sub
add
jg
cmp
push
sub
jl
in
pop
mov
inc
popa
jb
add
add
jbe
pop
push
popf
mov
mov
add
push
int3
mov
test
push
repnz
loopne
and
js
push
hlt
mov
test
adc
test
les
push
xlat
dec
xor
sahf
mov
in
jl
pop
cld
ret
lcall
adc
mov
or
data16
jo
jg
push
mov
add
test
mov
push
movsl
in
repz
push
sub
ror
mov
test
adc
int3
push
call
in
shlb
mov
js
pop
and
out
sti
mov
and
pop
imul
mov
cli
sbb
push
test
shlb
mov
mov
and
mov
cld
fadd
rclb
add
inc
or
cmpb
xor
sti
and
sbbl
lcall
cmp
call
mov
dec
xor
adc
dec
negb
adc
and
aaa
mov
sub
jbe
xor
les
jne
arpl
popw
pop
dec
js
loopne
mov
inc
xor
sbb
and
notl
mov
loopne
xor
jecxz
mov
fwait
mov
lret
lock
pop
in
mov
mov
test
or
fadd
inc
sub
push
inc
mov
dec
mov
jo
mov
lods
loopne
scas
mov
lock
fucomp
movsb
into
xorb
add
bound
dec
in
xchg
incb
jmp
movsb
pcmpeqw
stc
repnz
mov
jg
jb
icebp
xor
in
xor
pop
inc
mov
lcall
inc
mov
fsubl
outsb
addb
adc
insl
push
pop
cmp
bound
pop
mov
into
inc
push
int
or
push
pop
sar
mov
xchg
nop
clc
adc
scas
add
aad
jno
aam
xchg
jl
das
jno
sub
in
push
adc
jo
pop
je
cli
xor
mov
fiadds
sbb
out
cmp
add
add
pop
jae
mov
mov
inc
add
jecxz
adc
out
push
and
lcall
aaa
push
pop
add
sub
add
mov
xchg
mov
fcoml
pop
mov
ret
dec
loopne
or
scas
cli
cmp
inc
push
aaa
imul
and
rorl
dec
inc
mov
push
push
inc
pop
push
or
dec
std
stc
enter
stos
add
mov
adc
xlat
es
clc
adc
pop
sarb
clc
sbb
cld
lock
scas
fcmovu
jmp
adc
push
adc
xchg
rorb
jb
xor
mov
xor
loope
xchg
sbb
jle
push
mov
js
clc
imul
and
mov
rcrl
dec
lcall
fmull
jge
sbb
push
dec
jp
or
inc
push
sbb
pop
shl
add
mov
out
pop
iret
adc
sti
xchg
insb
adc
xchg
sbb
sub
push
repnz
inc
cltd
mov
adc
pop
test
add
stc
xchg
push
pop
or
aaa
out
adc
pop
jb
pop
pushf
inc
add
out
mov
sbb
jge
in
push
xor
add
mov
lock
ret
jecxz
jnp
lret
shr
jo
sub
add
mov
add
xor
xor
pop
add
popf
fcmovnb
in
mov
add
orb
dec
inc
mov
aaa
jecxz
add
or
push
hlt
push
inc
cmp
xchg
sub
xchg
dec
test
mov
and
push
popa
add
add
loope
mov
dec
mov
sbb
out
or
push
cmp
xor
inc
cld
nop
add
int3
inc
insb
push
dec
push
adc
push
shlb
pusha
mov
xor
test
push
hlt
adc
cs
into
rolb
xor
fildll
fs
add
adc
mov
pop
pusha
or
inc
add
or
sbb
xadd
xchg
jo
js
pop
repz
dec
push
aad
pop
fs
pop
xorb
push
orb
xorl
mov
push
jmp
xor
mov
mov
lock
pop
les
jo
mov
daa
push
into
icebp
jmp
psubq
add
int3
das
xor
cmp
fcoms
sbb
rolb
jecxz
pop
push
mov
pop
add
mov
aaa
sbb
lock
xor
adc
jge
test
sbb
inc
sbb
je
xchg
sub
jne
outsb
push
xlat
in
mov
lea
push
or
jge
mov
rcr
adc
sbb
test
clc
xchg
cmp
xchg
loopne
lods
push
or
in
xchg
inc
jl
fcmovnb
mov
shll
or
rorl
sub
push
in
sbb
inc
mov
xchg
sar
decl
rorb
mov
xrelease
jge
ds
adc
fimull
and
icebp
lock
adcl
mov
movsl
lcall
mov
cli
xor
hlt
add
inc
mov
pusha
xorl
rorb
addr16
mov
inc
dec
aas
add
adc
push
pop
adc
test
or
out
insb
sbb
mov
sarb
cmp
addl
adc
cmp
es
aam
sbb
mov
insl
addr16
fbld
push
lea
dec
dec
fcomps
popf
mov
call
jg
loope
jmpw
aaa
mov
cmp
lret
cmpsl
cmp
cmp
clc
dec
or
stos
mov
push
int3
add
test
sub
push
pop
or
mov
xor
inc
daa
test
and
inc
in
pusha
aas
movsb
or
lret
push
mov
push
jo
bound
dec
adc
mov
and
add
fcmovb
pop
lcall
push
mov
pop
sar
fidivrl
leave
xor
lea
mov
xor
inc
cmp
push
push
iret
call
scas
or
fiadds
rorb
push
pop
and
sub
xor
icebp
loop
push
cmp
adc
andb
cmp
insb
pop
mov
sbb
outsl
adc
cmpsl
push
mov
dec
aaa
pop
adcb
sbb
outsb
in
add
in
movsb
call
add
add
pop
sbb
sub
jle
enter
push
lds
ja
cmp
mov
sbb
call
adc
je
and
pushf
jge
push
sbb
push
mov
push
nop
test
and
xchg
dec
cmpb
sbb
pop
inc
dec
fldt
sub
leave
mov
fwait
scas
jae
inc
pusha
mov
push
or
insl
jp
mov
add
insb
fs
sarl
gs
adc
mov
outsl
jmp
add
inc
clc
mov
or
push
es
not
cmp
clc
and
call
sub
mov
ret
push
lahf
ret
and
mov
sub
and
sub
scas
dec
ret
rorb
adc
push
fmull
pop
inc
mov
push
mov
clc
add
push
outsb
shlb
movsb
adc
ja
add
jg
dec
into
push
orb
mov
jge
mov
call
inc
mov
int3
dec
mov
fcom
sub
lea
cmp
imul
loop
pop
inc
call
inc
sub
sbb
std
es
jp
push
js
lock
pop
push
add
mov
mov
dec
jb
inc
scas
inc
insl
mov
movups
sahf
xor
inc
movd
pop
adc
das
inc
mov
les
subl
pop
mov
adcl
xchg
aam
or
push
scas
cli
xor
movsb
cmp
inc
adc
mov
adc
push
jae
pop
inc
mov
jne
orb
dec
jnp
pop
ja
dec
push
stc
adcb
hlt
insb
mov
mov
mov
mov
pushf
je
cmc
or
fbstp
icebp
adc
rorb
adc
push
imul
fwait
shrb
mov
adc
and
push
cmp
jl
xchg
mov
mov
or
test
movsb
arpl
sub
mov
roll
lea
push
aam
test
int3
sub
sbb
cmpsl
push
push
adc
pop
inc
and
xor
fs
mov
xchg
icebp
pop
xchg
rclb
add
arpl
test
ljmp
jl
lock
jg
push
ret
jl
add
cmp
mov
fwait
js
push
dec
dec
subl
or
mov
aam
dec
lahf
pop
jne
push
cmp
dec
or
outsb
adc
and
in
and
mov
add
push
xor
pop
call
xor
inc
push
in
sbb
and
mov
mov
loopne
mov
or
testb
push
xor
mov
lods
lods
add
jne
inc
cmp
push
arpl
cmp
imul
mov
orb
clc
jg
mov
mov
inc
enter
or
dec
adc
or
mov
jecxz
mov
mov
add
stos
mov
cs
lock
mov
or
cmp
aas
mov
jb
xor
test
sub
sub
mov
xor
mov
inc
adcl
or
and
inc
into
sbb
xchg
test
int3
push
mov
push
and
cmpl
add
xchg
or
outsl
aas
mov
rep
scas
dec
int3
push
bound
cmc
test
lods
inc
lcall
enter
adcl
dec
ss
repnz
cs
rorb
testb
or
jg
lea
enter
mov
pop
push
xor
sbbb
ret
aaa
dec
fwait
or
inc
pop
mov
fdivrp
push
lock
push
and
inc
cld
mov
and
in
mov
and
clc
shll
jbe
loopne
add
mov
rcr
in
mov
gs
imul
push
ljmp
jmp
or
inc
stos
es
xor
fdivrl
cmp
ljmp
loope
andb
push
test
je
mov
pop
pop
fsubrs
push
cmpb
inc
imul
mov
sbb
push
mov
sub
inc
adc
add
and
rcr
mov
or
test
gs
movsl
enter
jne
data16
in
imul
pslld
mov
jle
push
cli
push
inc
enter
mov
gs
nop
rcr
pop
xchg
andb
test
pop
out
jmp
mov
add
pop
sbb
add
cmp
mov
and
flds
push
sarb
jo
pop
shlb
jne
cs
mov
mov
lcall
sub
or
cmp
pusha
pop
mov
lret
or
imul
or
cmp
in
mov
push
adc
lcall
and
add
push
add
loopne
mov
cld
xor
inc
lret
mov
cli
sub
sbb
add
pop
xor
mov
push
fcomps
fiaddl
mov
push
mov
push
pop
inc
mov
xor
mov
call
fcom
adc
stos
out
data16
and
adc
xor
add
lcall
rcl
fldenv
push
outsb
mov
pusha
add
mov
lods
sar
pop
les
outsb
into
push
dec
add
push
fadds
inc
cld
sbb
cmp
shlb
push
loop
push
dec
test
pop
outsb
sahf
push
shlb
imul
call
jmp
jg
sbb
mov
pop
clc
jbe
sbbl
addb
add
sub
xchg
add
cld
aam
xchg
and
repz
insl
in
jo
je
inc
ljmp
pop
jno
push
mov
fdivrl
inc
mov
cmp
js
data16
fadds
sbb
pop
adc
and
push
mov
lea
add
cmp
movsl
sub
add
test
ret
dec
sub
mov
and
mov
or
and
push
pop
sbb
and
hlt
or
xlat
je
xchg
or
jb
mov
xchg
addr16
aas
xchg
mov
pop
cmovbe
adc
xor
jns
and
loopw
int3
or
push
or
insl
inc
jae
sub
or
outsb
cmp
pop
test
adc
rorb
push
leave
or
lods
mov
add
cmp
inc
fildll
test
push
xorl
shrb
or
ljmp
adc
pop
inc
adc
mov
cs
mov
sbb
lea
pop
push
mov
jp
cwtl
mov
sbb
mov
push
xchg
or
call
mov
ret
icebp
mov
add
jecxz,pn
jmp
jg
dec
pusha
xchg
data16
push
mov
sub
movb
mov
aas
outsb
ss
inc
pop
or
mov
cmpl
mov
fldt
aas
push
mov
ja
push
aad
rorb
sub
es
xchg
cli
mov
movsb
add
or
jmp
jbe
jae
xchg
insl
jb
add
mov
cmp
dec
add
in
into
addl
mov
js
ret
not
and
mov
out
fldt
les
int3
xchg
in
adc
std
insb
dec
lock
inc
addl
call
or
cmp
and
ret
daa
add
dec
mov
push
orl
ss
dec
inc
inc
int3
popa
push
js
add
sbb
cmp
sbb
sub
ret
adc
push
and
cltd
push
fcomps
cmp
popf
mov
inc
xlat
jmp
hlt
das
rorl
leave
mov
cmc
negl
sub
dec
faddl
lahf
lcall
hlt
outsl
outsl
popa
xchg
imul
push
push
andb
mov
dec
dec
push
cs
jg
lods
test
int3
int3
fmuls
xchg
leave
and
jne
dec
insb
push
sub
xlat
adcb
add
pop
add
insb
addr16
shlb
or
sbb
add
jmp
mov
sub
cmp
add
out
shr
lock
or
inc
pop
sub
push
loop
call
lahf
add
outsb
adc
fnstenv
loop
es
lret
cld
mov
push
popa
ret
out
je
mov
xor
inc
inc
push
sbb
xor
in
je
mov
ret
inc
pop
test
cld
add
stos
add
sbb
pop
sbb
andl
add
and
test
ljmp
jmp
les
inc
mov
lock
repnz
sub
fcomps
mov
fimuls
fdivp
pusha
push
mov
out
test
dec
mov
mov
pop
out
add
cli
push
in
inc
mov
add
loopne
pushf
xor
insb
xor
mov
mov
std
or
inc
add
lea
ljmp
dec
jo
add
lock
fcoms
and
popa
sub
adc
outsl
push
mov
mov
repnz
mov
mov
cli
repnz
push
or
aaa
jbe
rclb
outsl
nop
and
lea
loope
or
inc
test
decl
inc
rol
mov
add
xor
popf
sub
push
test
je
add
and
sbb
add
data16
pinsrw
dec
push
cli
stos
shrl
cmp
enter
inc
push
dec
fs
rolb
clc
into
insl
pop
sbb
jne
pop
mov
xchg
inc
push
inc
inc
sbbb
in
inc
out
enter
es
dec
or
movsb
inc
mov
mov
ja
lea
andl
push
iret
lock
push
mov
shl
call
mov
jo
les
cmp
sub
sub
and
xorl
push
fdivrs
jbe
sahf
lock
jae
push
orb
jge
nop
sbbl
add
jp
mov
fdivl
sti
dec
or
fadds
cmp
jecxz
inc
push
call
add
test
ret
xor
test
mov
loopne
xchg
sub
inc
mov
stos
loopne
mov
hlt
jmp
push
cmpsb
push
xchg
sbb
push
or
xchg
shl
sbbl
push
icebp
push
cmp
jb
mov
mov
test
push
inc
inc
add
into
mov
push
jp
arpl
outsb
cmp
inc
xlat
aas
mov
jmp
das
xor
or
push
imul
call
adc
or
and
cli
stos
out
mov
push
jg,pn
jg
cmpsb
aas
nop
cmp
rolb
push
or
outsl
mov
mov
inc
loop
shlb
pop
push
cmp
mulb
xor
sbb
pusha
clc
adc
test
adc
mov
inc
dec
mov
push
mov
add
jne
ret
push
add
cmp
cmp
mov
lret
mov
push
test
or
or
ljmp
aas
sub
lock
dec
lock
andl
mov
pop
push
jnp
pop
dec
jne
jns
lea
dec
mov
mov
sbb
jp
cmp
sub
lea
and
mov
add
hlt
sbb
add
incl
add
and
add
jl
in
fprem
adc
mov
mov
ret
je
pop
mov
mov
fldcw
inc
loopne
or
cld
cmp
lret
inc
jp
adc
or
cli
insl
xchg
and
test
xchg
loop
xor
dec
add
mov
int3
or
pusha
cs
adc
dec
sub
fiaddl
cmp
imul
fadds
or
push
add
call
xchg
inc
es
popa
sub
or
rorb
pop
mov
mov
test
mov
push
pushl
gs
incl
dec
pusha
outsb
add
push
jg
je
imul
ss
adc
jbe
clc
xor
test
pop
inc
cmp
and
fsubrl
loop
jmp
add
mov
adc
inc
movb
insl
fadds
inc
ss
cmp
jb
movsb
push
out
cwtl
mov
clc
sbb
cld
loopne
sbb
cmp
das
inc
or
push
outsb
inc
daa
pusha
or
push
cmp
xlat
adc
sub
ljmp
jo
ficompl
fcmovnb
xchg
rclb
adc
gs
jne
jecxz
dec
cmp
adc
xor
mov
loopne
add
mov
add
mov
adc
ret
dec
das
xchg
push
sbb
mov
mov
sbb
add
pop
cs
inc
sbb
add
subl
icebp
lods
iret
sar
pop
sub
lcall
sbb
add
mov
ljmp
mov
mov
push
push
inc
xchg
mov
stos
mov
rcr
mov
loop
subl
pop
mov
bound
insb
adc
cli
aaa
ret
movsb
adc
std
push
mov
fcmove
sar
add
jge
jns
or
movsb
les
or
pusha
daa
pop
push
xor
inc
push
pop
mov
pop
insl
and
mov
repnz
mov
mov
sub
push
mov
stc
inc
call
mov
push
neg
push
inc
jae
js
jae
ret
scas
pop
ja
pusha
push
and
test
inc
adc
add
adc
sbb
or
lods
inc
and
and
inc
and
rorb
call
cmpsb
data16
add
pop
fdivs
pop
test
lea
add
aam
aad
xor
cmp
jbe
fdivs
js
add
les
mov
insb
and
mov
je
cmpsb
cli
xchg
jb
out
sbb
data16
int3
xchg
test
sahf
mov
sbb
mov
les
in
cld
stc
cwtl
add
cld
mov
adc
ss
rcl
jl
out
rcrb
pop
mov
jmp
xor
lahf
add
sub
or
mov
rorb
ss
add
adc
and
ffreep
fcmovnu
mov
mov
hlt
add
cld
dec
testl
rcrl
cmp
pusha
pop
clc
dec
ror
into
je
lock
push
into
jbe
jae
lods
or
fistpl
idiv
push
and
jge
rolb
jb
sub
mov
test
movsb
xor
or
mov
push
inc
push
sbb
cmp
lret
mov
xlat
add
data16
jge
pop
aam
lock
js
cmp
hlt
ret
fiadds
aam
mov
ja
lods
aam
jl
mov
data16
rclb
mov
push
sub
and
or
inc
xchg
inc
shlb
ror
mov
leave
fwait
loope
add
int3
push
mov
jbe
clc
cltd
les
push
cld
gs
fidivrs
sbb
inc
mov
shlb
or
neg
mov
je
inc
mov
push
and
mov
or
cmp
icebp
mov
jge
in
icebp
or
mov
xchg
push
incl
push
xor
push
mov
jle
mov
rolb
push
mov
or
xor
xor
test
daa
xor
shrb
xor
idiv
add
and
je
inc
imul
mov
add
jo
jb
pop
pusha
popf
adc
xchg
add
push
mov
enter
or
shl
inc
inc
lcall
pop
dec
sub
inc
inc
push
pop
cmc
or
inc
fisubl
mov
sub
subb
mov
pop
cmp
out
movsl
pop
hlt
rcrl
dec
sbb
or
aad
pop
into
and
es
and
addps
cld
int3
xor
outsb
icebp
andb
push
fdivrs
xor
or
and
xor
pop
clc
repnz
int3
jmp
in
ret
sbb
sub
push
sbbl
pop
loopne
add
fwait
xchg
push
push
lock
arpl
push
sbb
jb
fnstsw
xchg
sub
add
sub
incb
jnp
std
pop
pusha
rorb
jo
sahf
popl
pop
inc
push
in
mov
je
sub
add
pop
pop
ret
push
ds
mov
jl
aam
adc
adc
mov
rcrl
adc
ret
add
push
sbb
inc
add
call
sbb
call
in
sbb
in
mov
lods
mov
repnz
xor
cli
dec
sbb
arpl
dec
in
push
adc
adc
jo
adc
push
mov
add
mov
and
inc
inc
dec
push
fildl
scas
jae
dec
add
sbb
cmc
adc
mov
add
or
pop
addps
add
je
imulb
inc
loope
cltd
movsb
stc
mov
es
inc
mov
out
sub
mov
mov
fcomps
scas
test
dec
add
push
cmp
mov
sub
dec
adc
stos
loop
push
clc
dec
sub
xor
mov
xor
xor
sub
xchg
cmp
pop
lret
xchg
or
inc
add
mov
pusha
aam
mov
bound
dec
inc
fs
mov
lcall
mov
adc
sbb
test
mov
mov
mov
jmp
mov
inc
push
cmpsl
jp
or
test
add
add
fiadds
ret
add
sub
in
cmpsl
enter
orb
add
inc
push
adc
pushl
mov
mov
jge
pop
mov
loope
jmp
pop
out
fstl
push
nop
outsl
push
push
pop
cld
sub
adc
mov
xor
pusha
jo
add
sbb
testb
inc
pop
fs
fsubrs
push
add
pop
test
cmp
cld
pop
lret
lret
or
aas
lret
fisttpl
clc
pop
lock
scas
adc
cmc
add
push
incb
pop
or
fs
gs
and
hlt
inc
dec
xchg
or
xor
mov
push
fs
or
inc
mov
test
ret
ret
add
mov
mov
sub
test
mov
movsl
mov
inc
mov
test
mov
xchg
and
ljmp
xor
or
int3
push
add
adc
cld
sub
loopne
aaa
outsl
inc
int3
sbb
ljmp
push
insb
dec
push
xor
andb
or
inc
rorl
arpl
add
sbb
orb
xor
inc
adc
lock
xor
pop
xchg
hlt
aam
leave
add
out
mov
and
faddl
clc
rorl
sbb
sub
cmp
adc
mov
inc
js
mov
push
nop
fcoml
mov
pop
mov
lea
fadds
inc
xchg
pop
or
insb
push
xchg
cmp
fdivp
inc
rclb
xchg
nop
sarl
into
xchg
fsubrl
inc
jo
lea
push
outsb
add
jecxz
inc
daa
inc
adc
dec
test
mov
leave
jmp
jae
push
sarb
cmp
in
mov
ftst
ljmp
jne
xorb
jge
rcrl
call
std
pop
mov
pushl
or
stos
and
movsl
adc
clc
dec
loop
pop
dec
jb
mov
push
insb
cs
loope
shrb
cli
add
shlb
js
dec
mov
aad
aas
add
out
mov
xchg
std
ja
pslld
xchg
jg
ljmp
xchg
shrb
ljmp
jo
in
mov
inc
into
les
inc
jmp
bound
cld
add
inc
and
ss
jle
mov
mov
shlb
add
inc
adc
pop
ror
add
fbstp
fcoms
lods
test
data16
sbbb
sub
jecxz
jo
das
and
int3
pop
dec
out
nop
negb
sub
clc
ret
dec
push
push
imul
das
inc
addl
sub
clc
push
clc
mov
sub
lea
clc
add
jmp
push
outsb
adc
test
movl
cld
pop
push
movsb
push
nop
lcall
in
add
lcall
fsubl
loop
hlt
idivb
sbb
jbe
mov
xchg
push
cld
mov
add
pop
xor
dec
addl
jmp
pop
xor
cmp
dec
shrb
and
push
int3
push
call
mov
lea
es
roll
movsb
ja
adc
call
loopne
inc
mov
pop
test
or
stos
leave
fsub
pop
fsubr
popa
inc
mov
pop
sub
inc
into
ret
das
call
test
aaa
mov
xchg
in
insw
jae
add
gs
mov
mov
cmc
add
dec
add
add
aam
push
sbb
and
cmp
xchg
les
mov
or
setge
xor
push
inc
mov
lea
adc
pop
cmp
and
lock
mov
ss
sbb
xchg
inc
mull
ja
mov
inc
addr16
add
cmc
and
jbe
sbb
and
sub
arpl
cmp
sub
push
add
outsb
dec
push
adc
lea
sti
fadd
inc
push
stos
xor
add
pop
mov
js
or
xor
cmp
mov
inc
adc
cld
cli
mov
scas
nop
and
sbb
out
das
arpl
push
and
add
push
mov
es
clc
pushf
add
inc
mov
adc
mov
add
or
inc
rcrb
cld
or
adc
pop
dec
push
bound
or
push
es
rolb
movsl
and
sbb
push
sbb
test
test
jle
and
mov
inc
jb
mov
outsb
je
adc
mov
jle
xchg
scas
int3
sub
test
into
fnstcw
xor
adc
pop
int3
push
pop
cltd
inc
mov
add
add
jbe
inc
das
cmpl
je
jo
in
sub
jmp
cmp
xor
pop
adc
fimull
sub
add
jg
mov
jo
pop
std
pop
lcall
scas
adc
inc
sbb
adc
punpckhbw
inc
imul
mov
cmp
cmp
in
mov
sub
pop
push
data16
ds
add
shll
jecxz
pushf
sbb
jl
rol
lock
mov
test
xchg
orb
rcll
add
pop
cmp
leave
testl
fbld
loope
inc
test
dec
push
xor
mov
fadd
arpl
lock
pop
adc
enter
adc
inc
scas
pop
xor
sbb
inc
add
xor
inc
add
or
pop
gs
cld
pop
int3
incl
and
imul
adcl
rcr
gs
test
stos
adc
pop
bound
cmp
stos
ds
jne
mov
test
out
inc
push
rclb
xor
push
mov
add
and
cld
xchg
pop
sbb
xor
fwait
mov
movsb
push
xor
daa
je
cmpsb
or
lret
sahf
jbe
jb
mov
fldcw
push
int
mov
or
stos
xchg
repz
inc
call
push
lret
dec
push
inc
int3
cli
push
dec
cmp
xchg
in
mov
bswap
fmull
dec
add
mov
pushf
int3
inc
insl
test
inc
adc
mov
or
and
rol
xor
pop
in
jecxz
cltd
je
push
cmp
push
or
add
inc
rcrl
fimull
push
inc
and
mov
ss
add
and
mov
insl
aaa
outsb
mov
cmp
mov
mov
or
push
test
dec
lds
or
in
notb
or
mov
cwtl
cmp
cmp
adc
xor
pop
mov
cmp
clc
push
loope
loopne
ljmp
mov
hlt
roll
push
mov
xor
test
pop
and
adc
push
inc
testb
ret
mov
xchg
jmp
adc
or
cmp
mov
fisubrl
fs
mov
outsb
add
xchg
js
aas
mov
jle
dec
sar
cmp
lods
inc
test
push
orl
imul
in
mov
cmp
and
adc
das
and
fsubr
mov
outsb
stos
mov
dec
aas
inc
push
mov
test
push
and
movb
in
fnstsw
xchg
hlt
cmp
aas
loope
xor
pop
orb
sbb
push
gs
test
clc
mov
fldcw
push
sub
lods
adc
add
aaa
fmull
mov
dec
cs
daa
icebp
push
ljmp
adc
add
filds
movhps
decb
dec
or
and
push
mov
cmp
add
push
inc
push
pop
mov
dec
xor
inc
cmp
sbb
mov
mov
js
mov
dec
pop
inc
adc
rclb
lock
test
adc
inc
insl
jb
xor
cli
pop
mov
ret
add
dec
xchg
pop
mov
xor
push
inc
and
fstl
dec
sbbl
pop
push
movsb
fsubs
inc
jl
or
pop
mov
jae,pn
pop
js
ret
add
popf
bound
pop
test
movsb
sub
pop
loopne
add
ficomps
pop
sub
add
push
push
nop
push
dec
xor
xchg
push
push
ret
inc
loop
sbb
enter
mov
shrb
mov
in
lea
or
fldl
dec
nop
inc
shr
incl
push
or
movsb
lock
ljmp
xorl
adc
shll
add
inc
sar
pop
movl
jb
pop
sub
mull
mov
dec
pop
sbbb
adc
fsub
adc
sub
mov
lret
cmp
outsl
fnsave
imul
jge
jbe
cmpb
mov
xor
or
call
incb
sub
push
push
nop
gs
shrl
pushf
sub
cmp
or
jb
mov
mov
pop
pop
push
loopne
sbb
enter
mov
xor
xchg
cld
in
sbb
rorl
jge
ret
mov
sub
adc
repnz
sub
outsb
or
xor
xor
repnz
adc
add
lock
inc
inc
adc
mov
or
mov
push
adc
movsb
xorb
adc
push
clc
and
sub
push
gs
push
addl
sbb
lcall
xchg
data16
rcll
fbld
adcl
adc
sarb
roll
aam
ret
mov
or
mov
mov
ret
pop
push
rolb
mov
ret
fstpt
inc
add
nop
push
push
pop
subl
movsb
mov
cmpsb
xchg
fcoms
cwtl
ljmp
fsubs
mov
pop
fs
adc
or
divb
sub
in
lcall
gs
pop
push
les
sbb
jmp
xor
shlb
or
sub
push
shlb
neg
insb
test
lcall
scas
testb
fiaddl
call
inc
xchg
dec
add
mov
and
test
aam
adc
or
inc
adc
cmp
shl
xor
sbb
fldl
in
inc
fcmovu
inc
inc
pop
icebp
lock
push
clc
mov
inc
push
test
or
mov
int3
les
cld
lret
aam
ret
pop
dec
out
xor
add
xchg
int3
xor
pop
data16
inc
jno
ljmp
je
adc
xor
mov
add
dec
xchg
addb
addb
repnz
shlb
rcrb
sti
cmp
shlb
push
inc
cs
cli
add
add
movsb
mov
add
push
jae
test
aam
sbb
cmc
xor
movsb
add
jo
cmp
inc
xlat
xor
and
jl
inc
cmpsl
jle
push
roll
push
sub
xor
in
mov
popf
cli
inc
jmp
add
fistps
xor
sti
inc
jb
hlt
sub
jmp
adcb
dec
jmp
mov
add
popa
or
push
push
hlt
adc
push
push
xor
mov
xchg
xor
test
push
rorb
add
sub
sbb
rcl
fisubs
pushf
dec
ret
or
adc
mov
fcoml
xchg
inc
and
dec
or
dec
or
test
inc
push
stos
push
jp
adc
adc
mov
rolb
bound
clc
cmp
add
xchg
add
adc
lds
cmp
aam
and
add
jne
jge
jle
cli
jns
push
cmp
cli
sbbb
add
sub
push
test
shlb
sbb
mov
ret
fistpll
or
das
mov
pop
add
enter
mov
jg
push
fcoms
adc
rcl
outsb
retw
popf
andps
std
fisttpl
jmp
and
addr16
in
add
add
or
lret
or
mov
push
add
mov
push
push
and
xor
sbb
subb
cld
push
ds
push
xchg
mov
inc
dec
pusha
pop
push
xor
jl
clc
sbb
call
jl
or
rorl
push
mov
aam
push
cltd
jb
mov
nop
mov
hlt
adc
push
push
push
mov
outsl
and
je
testl
mov
mov
sbb
push
push
add
sub
xor
mov
ss
jb
cmp
xchg
les
pusha
fs
and
add
ljmp
dec
push
sub
inc
shlb
xchg
scas
test
gs
jbe
xor
adc
add
je
rolb
aam
repnz
add
push
and
jns
cld
inc
dec
mov
mov
mov
or
fldlg2
sbb
js
push
andl
stos
push
lods
addb
jmp
cwtl
jmp
mov
push
dec
js
mov
xchg
mov
dec
jle
inc
addr16
xchg
nop
out
in
push
xor
leave
cmp
loopne
scas
cli
sub
rol
cmp
into
mov
js
jnp
ret
cltd
lock
outsl
jo
fmuls
push
jne
jne
fdivl
test
cmpl
nop
xor
fadds
add
push
decl
add
inc
inc
stc
gs
jno
inc
add
adcl
or
in
nop
dec
stos
sbb
or
test
rorb
cmp
or
in
testl
lea
xor
cli
cmp
jne
test
jne
push
push
jo
or
sub
sbb
add
adc
cmp
lock
hlt
adc
dec
ret
icebp
dec
push
pop
outsb
jl
in
push
push
rorb
pop
lods
adc
adc
insb
cmp
jmp
add
jge
jge
xchg
stos
jge
fwait
adc
sub
jnp
addr16
dec
push
das
aam
lods
jbe
jmp
xor
cmp
pop
xlat
stc
xchg
movsl
icebp
popa
push
mov
insb
cwtl
add
mov
push
fs
dec
int3
repnz
rcrb
add
call
out
or
push
test
test
pushf
xchg
loopne
mov
cmp
lock
mov
mov
dec
stos
rolb
push
mov
mov
je
mov
dec
jne
and
xor
push
push
sbb
in
lea
dec
adc
xchg
add
hlt
lock
sub
jmp
dec
inc
hlt
sub
imul
cmpsb
scas
popf
stos
jle
mov
xor
mov
pop
push
popa
outsl
lret
rcrl
or
cwtl
push
mov
ljmp
lahf
xor
insb
std
adc
pushl
inc
imul
lock
das
mov
push
fsubrs
xchg
cld
inc
adcb
cld
in
fcoml
outsl
xchg
in
out
push
je
mov
fldcw
inc
adc
add
mov
shlb
jnp
outsb
outsb
jbe
xchg
ret
clc
jne
cmp
push
sub
cmp
or
push
popa
dec
mov
mov
cmpb
mov
push
adc
ja
inc
shr
add
mov
and
mov
add
hlt
shll
fistps
movsl
add
mov
mov
add
movsb
jp
jp
add
pop
sar
movsb
add
ljmp
aaa
loop
and
addb
insb
mov
adc
xchg
add
xchg
outsb
push
xor
movsb
and
pop
into
xor
mov
hlt
push
cs
xor
call
lock
and
add
or
xor
push
rorb
xchg
mov
mov
call
insl
je
pop
repnz
push
js
pop
cmc
enter
sbb
mov
mov
andb
sbb
dec
pop
xor
call
cmp
pop
outsl
cwtl
mov
and
or
cmp
nop
adc
arpl
inc
adc
add
movb
sbb
xor
adc
add
fistl
clc
inc
mov
js
add
add
data16
cmp
sub
enter
ds
add
dec
xchg
dec
out
cld
mov
inc
pop
imul
rcll
adc
cmpb
mov
adc
fsubrs
sbb
adc
aam
rcrb
push
cli
jg
ss
mov
clc
inc
arpl
cmp
insl
cmp
add
decl
dec
enter
fdivl
gs
js
pop
mov
outsb
lret
cmp
inc
sbb
inc
in
dec
push
adc
add
sets
rorb
ss
inc
jns
cwtl
or
or
mov
mov
push
adc
daa
or
std
push
add
pop
dec
xchg
sbb
test
mov
mov
adc
lods
ret
sub
sbb
mov
int
mov
test
int3
ja
clc
je
push
ret
orb
add
test
push
pop
add
inc
push
je
or
push
sbbb
push
sti
test
pop
int
imul
divb
push
or
sub
pop
mov
sbb
push
idivb
rolb
push
push
js
in
pop
mov
lret
sarb
movsb
int
adc
jae
rclb
xchg
pushfw
dec
push
int3
out
mov
mov
push
les
mov
lea
mov
ljmp
add
and
into
jl
rcll
or
or
fs
in
nop
inc
and
mov
push
setl
out
fs
xchg
cmp
inc
dec
cmp
jo
sahf
insl
dec
push
fdivrs
loope
bound
lods
adc
int3
pushf
fdivrs
mov
shl
cld
push
test
outsb
sbb
xchg
jae
sub
clc
sub
lcall
stos
bound
jo
movsl
test
mov
negb
leave
xchg
icebp
xchg
fisubl
dec
clc
adc
jmp
mov
je
test
xor
clc
aam
mov
jg
cmpsl
ret
add
pop
jmp
mov
testb
mov
add
jne
hlt
xchg
and
loop
test
ss
lret
pop
movq
cmp
adc
ret
cmp
std
pop
sub
inc
in
ret
mov
ds
or
and
mov
in
push
incb
lcall
mull
jne
in
push
push
jle
mov
je
jmp
subb
lods
sbb
lods
push
and
test
pop
adc
pop
incb
pusha
mov
sub
nop
daa
sar
cli
sub
xor
sbb
mov
rcrb
mov
lcall
dec
outsb
sub
mov
jecxz
imul
mov
pop
or
test
add
cli
in
add
push
push
xchg
cli
mov
stc
inc
xor
xor
or
hlt
xchg
rol
mov
lret
push
and
nop
and
int3
dec
adc
lock
push
cmp
sbb
jl
push
jne
cwtl
and
and
mov
ret
stos
imul
scas
mov
mov
or
add
hlt
push
fsubrl
mov
xchg
cmp
mov
imul
jb
or
add
xchg
movsb
mov
mov
inc
and
mov
mov
lcall
cmpl
or
fdivr
out
jo
fidivrl
daa
push
lock
push
std
mov
mov
fistl
testb
pop
push
or
js
into
popf
movsb
movsb
and
mov
or
cmp
fmuls
sbb
mov
leave
add
add
jge
leave
lret
cmp
adc
rorb
sub
lds
or
mov
rcll
test
sbb
cmp
test
jg
cmp
mov
push
test
sub
xchg
push
lcall
ds
mov
jl
push
gs
xchg
call
mov
adc
mov
inc
inc
pop
pushf
sbb
push
push
mov
decl
cmpps
bound
aas
sub
add
inc
xchg
mov
dec
sbb
ret
clc
mov
add
rolb
sbb
or
adc
jge
jle
pop
mov
stc
in
push
push
inc
fwait
test
fidivrl
or
rorl
in
mov
push
and
xor
push
ljmp
test
sarb
sarb
push
insl
add
lret
push
rolb
pop
test
outsb
mov
pop
mov
and
test
jo
or
aaa
fcomps
pop
jnp
pop
push
andb
dec
push
in
insb
mov
inc
jb
sbb
push
insb
mov
mov
sbb
inc
or
ret
test
inc
insb
shlb
js
into
std
cmp
rclb
outsb
adc
mov
adc
ja
add
aam
andl
xor
mov
subb
sub
ret
add
add
mov
and
movsl
pop
fcmovnb
add
mov
cmc
cli
lret
mov
ljmp
pop
mulb
xchg
or
out
or
faddl
push
add
xchg
movsl
lahf
xchg
js
add
mov
in
sbb
dec
mov
pop
push
adc
popf
test
incb
push
js
add
and
test
add
inc
js
hlt
ss
dec
out
js
cld
cmp
inc
and
cmp
subb
inc
adcb
fs
sub
jle
insb
mov
xchg
and
lock
popf
in
mov
cld
rorb
std
sbb
adc
pop
cmp
lods
leave
shrl
out
cld
sarl
cmpb
mulb
sbbb
mov
add
sub
mov
jae
sbb
test
out
fidivrl
cli
push
push
adc
or
sub
icebp
ficoml
les
jb
jmp
push
and
or
add
adc
loope
jo
mov
jo
mov
cmp
sahf
rorb
inc
clc
loop
int3
mov
jecxz
lods
adc
test
arpl
jnp
es
push
add
push
ret
and
jl
mov
jmp
out
jecxz
and
mov
fwait
push
xchg
cmpsb
aam
lcall
rorb
stos
int3
mov
mov
add
mov
shlb
out
mov
and
or
sarl
aaa
push
pop
mov
pop
subl
mov
lea
call
lods
add
fidivrl
call
sub
hlt
xadd
rolb
inc
fwait
mov
out
je
adc
xlat
scas
std
ljmp
mov
cmp
setbe
lcall
psraw
jne
loop
or
orb
mov
adc
mov
mov
hlt
js
inc
mov
lret
mov
mov
test
out
pop
clc
and
push
jge
push
incl
addl
jg
sub
shll
loopne
jbe
or
jp
vmread
adc
loopne
sub
sbb
adc
xor
aam
loop
rolb
inc
mov
sbb
push
stos
or
ror
inc
iret
subl
adc
sub
shl
movsb
or
mov
ret
les
pusha
loopne
clc
loope
decl
rcrb
push
aam
mov
int
test
call
sbb
add
je
mov
shrb
jb
mov
and
sbb
mov
repnz
cmp
ficoml
inc
add
mov
or
pop
outsb
rorl
das
rolb
punpckhbw
jl
jg
jge
test
data16
movsl
cmpsl
fsubs
or
dec
sbb
sbb
sbb
dec
inc
ret
mov
mov
jmp
mov
pop
add
mov
sub
aaa
mov
arpl
dec
cmc
hlt
rolb
into
inc
stos
xchg
test
add
and
in
push
xor
push
mov
jmp
push
test
mov
je
dec
dec
sbbb
ljmp
sbb
jmp
cmpl
add
adc
inc
and
push
or
mov
and
xlat
push
ds
sti
aam
sbb
dec
bound
cmp
push
or
jge
mov
cld
jp
or
add
push
ja
in
mov
jl
mov
cmpl
add
mov
imull
repz
and
or
jle
jecxz
fisttps
pusha
and
push
outsb
lods
sti
repz
rorb
add
inc
cld
pushf
push
jecxz
dec
add
cld
push
lea
xor
or
push
cmp
ja
jne
cmp
lea
ret
insb
insb
jge
decb
loopne
jb
insb
xor
mov
in
dec
push
es
add
sub
out
push
lock
pop
pop
push
push
insl
mov
into
pop
push
mov
aam
mov
push
cmp
adc
or
lods
das
jl
inc
sub
scas
or
inc
imul
mov
dec
mov
pop
ret
adc
push
or
ret
in
pcmpgtb
into
xchg
or
repnz
cwtl
and
lock
clc
add
mov
nop
cld
or
icebp
insb
in
add
xor
out
xor
test
xor
sub
jno
popf
xor
test
inc
or
xor
mov
shll
les
shr
mov
test
xor
xlat
mov
icebp
out
clc
mov
ret
push
lea
js
mov
aad
aad
jmp
imul
loop
addb
lock
jecxz
fistps
rorb
cli
lahf
lods
in
or
pop
outsl
test
aaa
push
or
pop
sub
cmp
arpl
xor
inc
repz
cmp
in
pop
mull
jo
mov
in
jl
cmp
movsb
mov
push
ljmp
cmp
ljmp
mov
or
inc
xchg
mov
pop
sbb
push
sbbl
jmp
add
inc
jl
xlat
fistpll
or
test
inc
ss
mov
sub
test
xor
rclb
test
dec
mov
int3
repnz
in
cmc
mov
testb
je
fisubl
add
or
mov
xchg
inc
decl
lcall
fisubrs
lea
xor
test
fsubrl
cld
out
mov
push
int3
push
mov
or
xchg
xchg
ljmp
or
test
jbe
push
jle
dec
dec
or
fwait
aad
mov
xchg
les
outsl
les
lret
mov
call
loopne
inc
addr16
cmove
mov
mov
xor
das
iret
test
xchg
jmp
shlb
clc
push
lcall
xor
call
push
je
jo
push
aam
popa
nop/reserved
data16
mov
mov
xchg
push
outsb
or
sbb
push
repnz
inc
mov
mov
js
cmp
addb
cwtl
mov
mov
sbb
mov
addl
cs
or
xor
inc
fildll
mov
add
in
imul
mov
vpshuflw
pushf
pop
jecxz
adc
add
sbbl
sbb
test
roll
inc
dec
and
push
fs
loop
pushl
call
lock
nop
gs
movsb
ljmp
mov
fadd
out
negb
xor
les
add
mov
mov
or
mov
or
push
sub
fidivs
in
xchg
xlat
jle
push
xchg
xor
or
loop
outsb
xchg
hlt
js
mov
push
sub
scas
inc
js
add
pop
adc
ret
add
mov
pop
pop
mov
add
dec
push
out
in
push
push
mov
lock
and
sbb
xchg
adc
in
cmp
push
dec
adc
sub
loop
pusha
xchg
mov
xor
pop
lcall
lea
outsl
push
call
addr16
les
xchg
aam
xchg
xor
push
sub
jo
adc
add
inc
jp
inc
std
and
rorb
lods
pop
xor
cmp
add
mov
nop
mov
mov
adcl
mov
mov
add
mov
and
jp
xchg
inc
je
and
ficoml
pushf
mov
fs
and
xchg
add
ss
xchg
and
jp
push
orb
fcomps
add
inc
testl
xor
addb
cmp
popa
jb
sub
push
insb
ss
aad
cmpsb
inc
cli
inc
pop
ret
pushf
out
jl
add
clc
add
or
mov
daa
inc
push
rol
xor
enter
push
decb
aam
or
lods
and
mov
mov
mov
dec
inc
jl
xchg
inc
aaa
xor
popa
mov
pop
ficompl
daa
imul
dec
js
inc
ljmp
cmp
xchg
test
and
sbb
add
clc
andl
enter
rol
leave
outsl
jg
fdivs
mov
inc
push
test
rolb
or
lods
dec
out
sub
fwait
xchg
mov
arpl
lock
and
movsb
inc
mov
push
rolb
outsl
add
fidivrs
dec
out
push
test
shll
add
repnz
cwtl
cmp
push
xchg
mov
out
inc
cmp
enter
sub
xor
mov
fcmove
sbb
sub
nop
sbb
mov
xor
nop
fcoml
dec
pop
inc
pop
pop
inc
ret
adc
sarb
je
xor
jb
and
lahf
cmp
adc
dec
lea
inc
std
mov
les
jle
or
add
jmp
push
pop
rcr
or
mov
popa
and
adc
clc
lea
fsubr
cmp
cld
rorb
data16
std
popf
jo
mov
xor
add
adc
add
xor
add
cmp
jns
push
lret
and
int
pop
test
and
push
dec
out
push
mov
pop
adcb
mov
ja
outsb
jg
out
mov
cmp
inc
and
popf
shlb
faddl
cmp
xchg
inc
or
xor
adc
rcrb
pop
es
or
or
mov
add
push
mov
push
mov
out
inc
mov
loop
mov
outsl
cmpsb
mov
xor
adc
xor
mov
in
push
jecxz
pop
dec
sbb
push
mov
push
dec
sub
shlb
and
fmull
movsb
inc
stos
pop
ret
mov
push
add
cmpb
mov
mov
jmp
push
nop
stos
and
sarb
pop
call
add
mov
mov
cli
mov
mov
fdivl
push
jbe
loopne
rclb
xor
mov
push
sub
dec
xor
cmp
insb
push
shl
inc
mov
mov
push
orl
loope
dec
pop
cld
push
decb
push
mov
mov
orps
fadds
mov
inc
pop
dec
loop
add
mov
mov
mov
lret
pusha
test
into
mov
lods
mov
add
std
loop
insl
push
lea
pop
jge
insl
xor
xor
cmp
call
in
loope
or
cld
sarl
loopne
push
out
cmp
loopne
jmp
jo
sbb
push
das
push
sti
outsb
and
push
ret
inc
adc
pushf
or
adc
sbb
xor
cmp
mov
aam
int3
or
ds
jl
call
punpckldq
xor
sub
xor
xor
fnstcw
scas
or
xchg
cmc
add
inc
test
mov
push
jbe
lret
add
sbb
insl
add
scas
sub
push
jl
inc
rol
aaa
aad
sub
push
test
jge
jbe
jl
rorb
adc
frstor
leave
scas
mov
dec
adc
mov
inc
dec
lcall
mov
pop
sbb
jb
das
outsb
or
jne
push
jne
out
xor
sub
mov
inc
push
inc
pusha
sbbl
add
or
inc
mov
xchg
or
or
sub
add
xor
test
sub
mov
jb
loop
xchg
push
data16
and
leave
andb
adc
push
add
xor
test
pop
movsl
dec
sbb
xor
dec
cs
mov
and
ja,pt
add
dec
adc
imul
inc
rcrb
jl
mov
mov
inc
cmpsl
jno
mov
ss
loopne
lcall
mov
incl
pushf
push
les
or
pushf
mov
and
mov
push
mov
push
sbb
adc
inc
xor
push
and
into
sbb
mov
xchg
enter
add
in
push
ja
sub
inc
je
scas
pop
add
add
adc
push
cmp
adc
xor
mov
pushl
mov
mov
out
sub
dec
in
push
xor
out
cmp
push
xlat
add
test
push
or
subl
test
jbe
push
lret
pop
push
adc
mov
cmp
imull
jae
pop
test
pop
adc
mov
mov
or
decl
dec
mov
test
sarb
shlb
mov
add
test
bound
scas
nop
int3
cmp
mov
add
mov
jecxz
in
mov
dec
xor
push
test
sbb
dec
fcoms
int3
jmp
fadds
sahf
js
inc
and
je
aam
cmp
inc
addr16
adc
scas
jb
inc
mov
inc
mov
ror
decl
add
or
repnz
std
subl
lods
push
aam
mov
jne
push
mov
xchg
sar
jmp
fistpll
adcl
inc
mov
popa
push
push
jae
sarb
mov
push
pop
icebp
mov
push
cld
clc
out
and
add
stc
hlt
push
pop
add
inc
inc
jl
mov
rolb
sub
push
cmovo
fidivl
inc
or
rorl
push
sbb
call
mov
cmpb
int3
push
xchg
dec
mov
dec
or
push
lea
lret
inc
sbbl
sarl
in
cs
aam
and
sarb
mov
sub
sbb
jne
jle
and
ret
imul
addr16
cmpxchg
adc
orl
add
dec
inc
sub
sbb
mov
cld
gs
rolb
sbb
and
sub
jo
bound
loopne
pop
mov
inc
jo
adcb
aam
pop
test
or
pushf
test
ret
sbb
inc
sub
push
fisttpl
mov
push
jmp
in
movsb
dec
sub
shll
push
sbb
jae
scas
fcmovnb
push
call
push
push
ss
nop
cltd
and
pop
loope
sbb
aam
lea
add
dec
filds
outsb
xchg
push
add
sti
sub
push
loope
sub
cmp
or
lret
pusha
shlb
push
fsts
mov
ss
jmp
sbb
in
xor
jb
hlt
pop
cmp
adc
inc
add
pop
push
xor
ja
adc
xor
lods
adc
dec
dec
add
or
add
pop
es
pop
xchg
dec
xor
adc
and
sbb
mov
idivb
in
jb
scas
jg
push
xor
rcrb
push
mov
orb
and
rcll
lock
xchg
sbb
adc
adc
clc
lea
push
xchg
rorl
bnd
and
loopne
sbb
mov
loop
inc
fisttps
push
je
xchg
pop
mov
mov
xorl
ljmp
cwtl
je
cs
rcrl
dec
adc
loopne
xchg
xor
xchg
mov
or
lods
hlt
int3
cwtl
std
pop
aam
outsb
adc
notb
push
std
andb
mov
mov
mov
add
fisubs
int3
fsts
sub
or
mov
aam
rolb
xchg
mov
jne
xchg
inc
leave
adc
xchg
mov
sti
outsl
add
inc
inc
xor
fs
add
imul
test
sub
add
sbb
std
pop
or
loopne
inc
test
jnp
cmpsb
xchg
pop
rclb
je
shrl
push
push
add
or
dec
add
push
or
outsl
pop
jbe
inc
dec
fs
jl
testb
fistl
pusha
fidivs
call
mov
enter
loopne
jmp
mov
push
aam
cmp
mov
cli
fwait
inc
nop
sbb
out
mov
scas
int3
or
jo
lcall
sub
push
sbb
mov
loopne
sub
sub
push
xchg
and
fidivrs
pop
xor
mov
hlt
scas
ja
push
jg
les
add
es
int3
xchg
sarb
jne
add
popa
stos
sbb
les
cld
add
jp
push
push
in
fdivs
or
ficoml
add
mov
in
mov
mov
xchg
shlb
jg
call
movsb
popa
fs
roll
incb
dec
xchg
test
lret
cmp
xor
xor
cmp
fiaddl
pop
dec
ds
int3
jmp
push
in
call
mul
or
xchg
sbb
dec
faddl
mov
adc
call
or
sbb
nop
mov
and
ret
xor
xor
mov
ja
cmp
aaa
into
js
or
cmp
jb
repz
int3
repz
out
fadds
pop
ret
je
sub
add
inc
ljmp
cld
std
push
push
push
in
repnz
adc
cld
jbe
aam
sbb
inc
cld
add
int
push
push
adc
mov
push
jle
or
pop
enter
cmp
shrl
inc
data16
or
mov
sbb
nop
and
push
inc
jb
test
cmc
sbb
data16
jmp
or
sbb
stc
adc
pop
fldl
mov
add
xor
lcall
mov
sub
fwait
push
out
ret
adc
int3
and
hlt
push
push
xchg
nop
push
add
call
in
add
mov
fsubl
pop
xor
outsb
adc
xor
push
neg
loopne
jecxz
push
xchg
lret
loopne
inc
xchg
dec
push
fs
adc
jb
mov
push
adc
lea
jp
mov
jb
cmpsb
xchg
movsb
scas
jbe
lret
push
lods
nop
pushl
pop
stos
insb
ret
ljmp
pop
add
jne
inc
shl
sub
rcrl
xor
mov
lcall
cmp
adc
popf
inc
xor
inc
pop
mov
sbb
es
add
lock
xchg
push
dec
xchg
lea
xor
test
or
xor
lods
inc
test
loop
in
orb
push
imul
sub
mov
cld
pop
xor
xor
movsb
jno
cwtl
fdiv
pop
iret
nop
xchg
sarb
inc
lea
dec
sar
or
out
adc
mov
inc
inc
decb
cmpsb
aaa
add
add
and
mov
test
fsub
inc
push
rcl
imul
add
push
daa
movsb
xorb
jb
loope
andb
lea
scas
or
aas
movsb
test
dec
jno
inc
jbe
std
es
push
lock
sub
bound
ss
mov
jle
pop
aas
add
adc
push
ret
push
inc
adc
loope
loop
sbb
mov
dec
push
loop
add
scas
je
sub
pop
sarb
xchg
ljmp
add
outsl
shll
dec
pop
fsubrs
inc
jl
jne
repnz
mov
inc
push
lock
mov
cmovne
inc
loope
pop
push
dec
add
inc
ret
scas
imul
loopne
clc
mov
shlb
int
loopne
mov
pop
add
repnz
in
mov
cld
mov
xchg
clc
push
je
ss
ljmp
cli
xor
dec
mov
dec
mov
ja
lock
mov
js
test
fsubl
xor
or
data16
sarl
mov
push
aas
fildll
xchg
sarl
icebp
adc
add
dec
add
cmp
and
cmp
push
add
dec
insb
hlt
clc
or
incl
lds
movsb
mov
or
jmp
pop
push
shlb
mov
jg
testb
push
dec
pop
xor
inc
mov
test
dec
jbe
or
xchg
mov
dec
pop
or
shlb
movsb
or
mov
cli
or
xchg
ds
mov
mov
mov
sub
pop
jmp
adc
gs
sbb
and
push
rclb
push
push
or
lds
xor
int3
ss
or
fsts
lea
call
mov
xor
xchg
xor
jecxz
mov
loope
test
loope
movsb
add
ja
ja
outsl
lea
jno
add
sahf
push
add
pusha
test
movb
cmp
xor
pop
shlb
int
or
sbb
sub
pop
inc
xor
mov
sbb
push
sbb
push
into
dec
inc
loopne
or
push
test
imul
frstor
jle
add
cli
add
loopnew
flds
jne
loopne
ja
int3
xor
call
xor
sarb
es
inc
mov
and
add
jbe
es
push
adc
inc
lahf
xor
jmp
push
loopne
sbb
mov
inc
mov
sub
push
in
es
popf
test
adc
ret
and
shlb
fcomps
test
cmpsb
inc
sub
test
push
and
dec
repnz
pop
pop
push
dec
pop
sti
mov
sub
xchg
scas
and
xchg
dec
popa
adc
incb
xchg
sbb
and
sbb
push
mov
das
mov
mov
xor
in
adc
movsb
hlt
cld
shr
sub
xorl
fdivrs
push
fdivrl
orb
sbb
fsin
sbb
test
insl
jne
jl
sar
inc
fs
outsb
xor
xor
push
inc
rorl
push
xchg
mov
cmp
cli
mov
mov
add
or
cmp
pop
add
out
add
leave
lds
incl
shrl
das
add
out
dec
mov
inc
inc
mov
test
jp
andb
loopne
loop
jae
push
jmp
jmp
inc
cld
xor
fs
pusha
mov
push
ds
fdivs
add
andl
or
out
or
add
movsl
adc
es
orb
inc
add
mov
neg
sti
cmp
sbb
call
and
push
popa
jnp
lock
push
or
pop
add
pop
daa
test
push
ret
inc
in
out
push
jae
push
lea
std
jne
adc
push
sub
bound
push
into
adc
push
add
add
adcb
mov
push
inc
add
popf
add
add
add
insl
mov
inc
mov
inc
xchg
add
fs
in
es
push
inc
rorb
and
movsb
enter
cmp
lock
jecxz
mov
orl
insb
jmp
dec
mov
jb
fisttpll
mov
jmp
or
mov
pop
push
pop
xor
dec
push
mov
jo
test
push
sbb
hlt
dec
call
and
adc
out
xchg
pop
sbb
add
sbb
lods
loop
int3
lret
push
sti
push
fs
hlt
cwtl
cmp
clc
icebp
add
ds
jb
adc
mov
push
lock
in
sbb
sub
bound
insl
jo
inc
call
std
add
xor
mov
xor
mov
xchg
dec
nop
test
push
icebp
repz
pop
mov
add
je
in
imul
sub
adc
roll
or
cmp
aam
and
clc
test
mov
mov
xor
dec
pop
mov
insl
icebp
sar
leave
outsb
call
sub
test
adc
add
ljmp
rolb
pop
pusha
je
add
sub
cmp
movl
loope
test
out
xor
push
lock
sbb
add
xor
test
decl
or
sarl
not
hlt
add
fs
outsb
mov
mov
or
pushf
adc
movsb
call
clc
xor
fidivrs
cld
mov
clc
sbbl
ret
pop
mov
dec
cmpsl
outsl
lods
inc
outsl
and
daa
and
ret
fmuls
ret
push
or
push
mov
jmp
mov
jle
popf
push
pop
inc
mov
push
nop
mov
adc
fbld
sbb
xor
js
adc
mov
mov
push
rolb
add
fnstsw
rolb
test
movsb
push
add
scas
subb
mov
fistpl
rcrb
fisttpl
je
addb
insl
dec
shr
divb
incb
rolb
xor
xor
cmp
icebp
scas
add
xchg
je
pop
shl
and
cwtl
mov
mov
sub
ss
cld
divb
xchg
rolb
dec
jge
push
push
xor
xorb
or
std
call
ljmp
jmp
sub
jecxz
sub
mov
and
mov
iret
sbb
gs
rcrl
mov
fimull
dec
cmpsb
xchg
int3
inc
and
stos
mov
lea
ret
lea
shlb
loop
push
push
sar
add
and
shrd
fsts
push
add
sti
enter
rolb
ficompl
call
lcall
inc
dec
adc
test
pcmpeqd
and
jo
cmc
mov
mov
push
testb
dec
mov
mov
ss
ljmp
xlat
cli
push
call
hlt
or
ret
push
add
inc
inc
mov
dec
outsb
adc
jae
aas
mov
inc
cld
cmc
fwait
and
sbb
jmp
mov
test
rclb
adc
test
mov
imul
negl
data16
ss
push
or
sarb
cwtl
es
cmp
mov
adc
aas
dec
aad
movsb
std
jge
hlt
pop
fbld
jb
inc
push
aas
ljmp
cmp
jae
ljmp
push
lds
push
fmulp
inc
xchg
loopne
imul
xor
mov
mov
ljmp
imul
adc
pop
jmp
push
pushf
pusha
xchg
loope
mov
sbb
add
shlb
and
fiaddl
loop
pop
ret
add
out
lock
cli
add
dec
out
mov
out
push
insb
adc
addb
add
xor
call
adc
testb
jno
fdivrl
push
mov
cld
mov
int3
sbb
mov
sub
fidivrl
rorl
faddl
jp
add
aam
xor
movsl
pop
dec
jne
loope
adc
shrb
mov
adc
sbb
inc
mov
xchg
mov
dec
int3
dec
and
bound
sbb
cmp
les
mov
clc
jb
push
in
bound
jl
sub
xlat
in
inc
rorl
lret
push
rclb
adc
clc
movsl
add
imul
je
pop
mov
nop
icebp
mov
jbe
je
enter
cli
nop
or
dec
mov
pop
mov
push
jne
jae
push
fldl
pop
pop
and
and
xor
int3
into
jg
mov
daa
mov
imul
add
mov
pop
xor
push
push
dec
mov
movsl
stos
test
mov
sbb
mov
xor
add
roll
mov
inc
and
aaa
test
xor
fs
stos
mov
out
mov
cmp
nop
lcall
mov
lods
lock
pop
es
inc
jnp
sub
xchg
cltd
push
adc
jb
dec
sbb
inc
xor
jae
mov
jl,pn
lock
imul
out
pop
es
enter
aam
hlt
cmp
nop
cld
add
cmp
add
push
or
subl
call
int3
sub
test
mov
jp
arpl
pop
dec
dec
mov
add
jne
push
in
adcb
cmpsb
inc
or
push
jbe
andb
mov
xchg
cmp
dec
cmp
cmp
and
or
cmp
xor
sbb
adc
filds
and
dec
es
lea
clc
jecxz
incl
push
lret
int3
mov
inc
ss
cmp
popa
xor
fldt
mov
pop
or
shrb
cwtl
adc
sbb
notb
cmpb
addb
dec
out
negl
mov
stc
ficoml
dec
cld
outsl
mov
cmpsb
pop
sub
je
loope
pop
pop
mov
fadds
adc
dec
adc
or
push
cli
cs
dec
sbb
pop
cmp
pushf
rcrb
insw
sbb
xor
mov
and
aas
add
imul
rcll
call
loopne
test
push
add
cmp
add
push
and
rclb
int3
push
add
add
lea
add
ss
aam
rorl
cmp
fsubrl
mov
sbb
call
pop
or
xor
xor
roll
ret
pop
push
mov
test
add
movsb
fimuls
sarb
jne
ret
inc
inc
decb
stos
pushf
push
xor
clc
fildll
out
sub
xor
loopne
mov
mov
add
repz
add
adc
adc
leave
mov
pushl
mov
adc
or
out
sub
fldt
add
enter
push
jb
sub
insl
or
push
xor
mov
mov
lods
fmuls
into
push
cmp
add
clc
pop
mov
add
fisubs
jl
movsl
sbb
decb
add
add
add
ret
xchg
jge
hlt
mov
add
outsb
pop
inc
and
mov
jb
fisubl
daa
xchg
mov
orb
insb
cmp
add
mov
nop
pop
add
cmp
lds
sbb
jne
sub
inc
cwtl
dec
sbb
bound
push
adc
insl
test
jne
add
decl
adc
and
mov
mov
dec
inc
fs
ds
mov
xor
jne
insb
xor
jne
cmovo
xor
sub
pushf
add
mov
mov
mov
stos
nop
push
sbb
mulb
loop
insb
adc
or
inc
add
fwait
iret
add
mov
adc
mov
jb
mulb
cltd
aam
dec
mov
push
pop
push
ljmp
orb
lcall
std
mov
lea
push
lods
outsl
add
imul
js
inc
lea
mov
mov
std
push
cmc
inc
mov
out
xor
pop
fdiv
dec
vshufps
jmp
sbbl
mulb
push
mov
dec
sbb
sbb
inc
add
and
mov
dec
lret
ds
cld
sub
inc
adc
add
mov
mov
inc
mov
sub
dec
test
dec
mov
cmp
in
sub
mov
lret
fldenv
mov
push
inc
xchg
nop
and
inc
popa
loop
mov
sti
xor
and
js
xor
andl
push
add
pusha
inc
or
sub
or
jo
repnz
test
mov
imul
xchg
clc
outsl
dec
movzbl
ret
add
pop
inc
pop
fnstenv
push
imul
mov
test
std
push
stos
ss
adc
dec
push
in
enter
xor
or
fsubs
adc
pusha
scas
lods
or
cmp
cmp
shll
mov
jbe
push
push
mov
fcmovu
sub
xor
scas
ljmp
xor
and
rcl
sbb
je
rcrb
js
cmp
dec
inc
or
mov
popa
xchg
sbb
int3
pusha
clc
hlt
mov
and
sub
nop
add
pop
clc
repz
inc
int3
mov
cwtl
inc
lds
std
pop
decl
cmp
ret
loopne
stos
jmp
pop
or
push
sbb
inc
mov
inc
mov
montmul
cmpsb
xchg
rolb
jp
movsb
xor
clc
mov
pushf
and
leave
pop
aaa
push
jp
dec
enter
jnp
clc
sar
inc
mov
pop
hlt
jmp
test
add
cld
test
inc
add
jo
mov
jl
daa
add
xchg
cmp
fnstenv
or
adc
sub
inc
pop
mov
or
mov
shlb
mov
mov
mov
ret
push
xchg
or
pop
dec
xchg
jle
mov
ds
xchg
xchg
pop
out
push
inc
insb
jl
push
mov
jo
dec
pushl
push
sbb
inc
adc
lock
pushf
pop
add
jmp
jae
dec
in
sub
jp
mov
push
jp
push
cwtl
jl
inc
pop
stos
inc
test
xchg
mov
jp
jmp
bound
mov
add
enter
punpckhwd
jecxz
xchg
test
gs
push
xchg
fadds
mov
mov
fidivrl
call
ret
dec
sti
push
xlat
js
aaa
add
dec
pop
push
xor
cmp
mov
movsb
xor
testb
scas
popa
sbb
inc
sar
in
pop
mov
xchg
pop
mov
pop
xor
and
push
in
add
jbe
and
pop
dec
or
dec
into
sub
add
cmpb
les
cmp
xor
xchg
xor
into
pop
mov
pop
data16
or
repz
push
pusha
outsb
pushf
mov
mov
aas
leave
push
loope
into
inc
popa
pop
pushl
and
cmp
ror
push
lea
sbb
adc
pop
call
push
dec
es
cmp
xchg
push
dec
jmp
push
in
pop
aas
mov
test
mov
dec
sub
xchg
inc
testb
inc
mov
movsl
xchg
rolb
fildll
movhps
pop
sub
outsb
mov
xor
add
inc
pop
fdivr
mov
ret
and
pop
clc
add
inc
xor
mov
testb
jne
dec
loope,pn
jecxz
loopne
push
call
or
push
fsubrs
jge
inc
adc
rclb
aas
loop
sarl
pop
shll
adc
sub
cmp
ret
push
jge
push
outsl
bound
lea
or
cmp
ror
or
and
mov
inc
cld
test
adc
dec
jno
pop
pop
in
xchg
es
mov
add
sub
or
mov
insb
adc
int3
fcmovu
scas
mov
pushf
test
imul
pop
dec
mov
rcl
sbb
push
sub
adc
imul
and
pop
add
push
cli
nop
call
pusha
xchg
hlt
lods
xorl
pop
fs
aaa
arpl
ret
ds
xor
or
ss
dec
mov
jle
and
mov
scas
jo
mov
mov
inc
call
stos
enter
sub
enter
mov
orl
push
jmp
cwtl
mov
imul
call
aad
push
mov
pop
inc
pusha
add
pop
push
xor
ficompl
jbe
ljmp
push
ljmp
or
inc
pop
and
clc
jle
imul
jo
inc
dec
fcoms
add
adc
cmpsb
push
mov
xchg
cld
test
adc
stos
ds
mov
push
push
lret
pushf
mov
adc
lret
call
pop
out
shll
jne
js
ret
and
dec
sbb
ds
or
sbbb
insb
je
mov
cmc
mov
cmp
fmuls
xor
inc
lds
push
sub
sbb
cmp
ret
inc
ljmp
ss
pop
dec
ret
jp
add
add
ljmp
pop
shr
loopne
add
call
mov
loopne
adc
leave
or
xchg
pop
push
les
inc
mov
add
sarb
shrb
adc
push
add
aaa
pop
pop
push
jo
push
inc
call
and
cmpb
fsubl
jne
movlps
hlt
lea
fistpl
add
inc
dec
jb
repnz
lahf
jbe
jp
ds
jle
in
push
add
add
sti
mov
std
bound
mov
lcall
mulb
outsb
cmpsb
sbb
inc
mov
pop
rcrb
mov
sbb
ss
inc
call
test
shl
sahf
xchg
and
sahf
xor
data16
pop
inc
xor
adc
sarl
stos
xorl
rclb
inc
fcom
cmp
push
enter
push
loopne
push
sbb
cmp
sbb
mov
push
dec
adc
pop
add
mov
jg
or
xor
push
dec
push
mov
aaa
test
loopne
push
or
fadd
addb
xor
outsl
sub
fs
cmp
cmp
push
fs
mov
xor
pop
add
mov
or
mov
sahf
cld
dec
inc
loop
insl
ljmp
out
adc
mov
adcl
cmp
xchg
imul
pusha
je
mov
call
pop
jg
rorl
rorb
rorl
mov
addr16
dec
add
mov
stos
push
sbb
scas
shlb
int3
fistps
mov
mov
je
pop
xchg
flds
adc
aad
sbb
adc
gs
js
mov
shr
imul
add
mov
adc
sbb
pop
sarb
jo
jge
sbb
fmuls
sbb
xchg
scas
pop
icebp
or
imul
cmp
xchg
cmp
add
or
sub
test
in
inc
aam
js
pavgb
std
push
xor
test
dec
jmp
call
out
test
push
push
add
inc
insl
sbb
or
adc
add
int3
xor
repnz
pop
inc
adc
jo
ret
or
loopne
testb
data16
add
push
xchg
or
enter
mov
lea
and
repnz
sbbl
push
sub
pusha
mov
fsubl
rorb
faddl
and
cmp
imul
xor
mov
cmpb
adc
or
adc
pushf
jns
mov
enter
push
pushf
jmp
sbb
insb
ja
add
loop
fldl
mov
pop
fs
hlt
loope
dec
mov
call
xor
cmc
es
mov
inc
pop
scas
add
mov
adc
mov
test
aaa
pop
dec
movsb
shrl
js
fsts
inc
mov
sub
into
jmp
xor
pop
inc
sbb
push
je
add
pop
popa
jb
jne
call
loope
sub
adc
mov
sbbb
push
in
or
lret
fdivrl
out
mov
jne
movsb
aad
and
mov
or
insb
loop
fistps
push
loopne
mov
sub
test
pop
adc
pop
aaa
add
movhps
fistps
call
arpl
add
rorb
rorb
insl
sub
push
in
cmovs
test
adc
and
dec
nop
sub
pop
add
push
xor
std
jg
or
out
call
loopne
jbe
jne
jmp
pushf
dec
lea
pusha
sbb
xlat
lret
push
bnd
and
loop
pusha
xchg
pop
xorb
sbb
lods
pop
xor
jge
dec
xor
repnz
jle
xor
and
das
jo
loopne
leave
stos
test
mov
test
xchg
add
outsl
roll
sbb
xor
decl
mov
out
mov
je
mov
sbb
adc
enter
mov
fs
push
mulb
xor
gs
ret
decl
mov
jae
or
mov
pmuludq
xchg
and
add
xchg
jmp
dec
or
adc
rclb
fidivrs
inc
fs
dec
mov
inc
lock
add
fidivs
mov
push
fcoml
leave
jne
cs
gs
dec
cmp
pop
add
mov
sub
add
mov
mov
push
or
mov
sahf
test
testb
push
dec
dec
jmp
jmp
loope
iret
xor
add
pop
dec
inc
pop
mov
lock
andb
mov
jl
adc
sub
jns
outsl
push
roll
fisubrs
dec
sbb
xor
push
ljmp
call
mov
cld
inc
and
int3
cmc
adcl
movsb
sbb
mov
mov
repz
shr
push
sbb
pushf
push
dec
push
mov
mov
dec
inc
mov
mov
pushf
cmp
push
mov
push
icebp
ljmp
add
ret
push
movsb
push
xchg
out
xor
js
es
fdecstp
fisubrl
inc
in
or
test
add
rcll
adcb
cmpsb
mov
push
inc
and
call
hlt
outsb
jns
enter
andl
mov
cmc
push
push
mov
enter
inc
add
inc
jl
insb
push
jb
rol
es
mov
push
dec
pop
dec
inc
sbb
add
icebp
cwtl
add
sbb
fmuls
add
inc
pop
add
out
or
pop
xor
xor
xchg
or
or
and
sbb
in
push
cmpsb
cmp
sub
rorl
pop
push
call
cmp
les
dec
jl
push
or
add
in
call
inc
push
inc
xor
sub
ds
roll
movsw
test
sbb
test
addb
jbe
loopne
in
dec
pop
sub
divb
test
inc
out
call
call
je
push
into
std
add
cmp
dec
scas
jb
cmpsb
and
icebp
mov
pop
inc
mov
jne
adc
dec
xchg
pop
jg
fcomps
inc
js
pop
test
fadds
xor
outsb
adc
dec
jb
test
dec
xchg
add
cmpsb
pop
push
icebp
or
mov
je
mov
fimuls
adc
sub
add
inc
int3
sbb
mov
mov
enter
dec
xor
pop
inc
ret
cmp
fdivp
push
and
mov
push
or
fiaddl
insb
fnstsw
hlt
cmp
inc
inc
xchg
push
insl
movsl
or
cmc
dec
add
inc
jg
inc
xor
pop
mov
lcall
mov
out
mov
push
in
sub
xor
adc
xor
jp
xor
je
std
pop
hlt
lea
inc
les
js
subl
push
rclb
dec
pop
push
mov
push
add
push
adc
test
ljmp
or
ss
mov
sbb
in
mov
pop
test
dec
sarb
push
cmc
pop
lea
jae
fmull
sti
push
mov
push
jo
adc
push
test
ret
mov
insb
cmpb
push
mov
faddl
cwtl
fs
bound
and
aam
orb
dec
xchg
in
lods
xchg
and
loope
fistps
inc
add
cli
pushf
push
aas
std
dec
hlt
xchg
jae
insb
xlat
mov
fdivrl
and
aad
adc
sub
push
add
and
lar
xor
ret
cli
jne
mov
add
adc
test
fisttps
decl
xchg
rcrl
mov
orb
cmp
push
call
cld
cmpsb
add
mov
roll
int3
incl
push
add
fstpt
stos
insl
xchg
add
mov
mov
cli
mov
in
sbb
dec
xor
data16
sbb
pop
mov
addr16
clc
nop
sub
sub
jecxz
inc
mov
mov
inc
mov
testl
push
pop
push
ffree
hlt
push
sarb
cmpsb
jle
les
inc
add
ret
mov
das
mov
cmp
cmp
inc
adc
jbe
imul
ljmp
stc
fisttpl
pop
or
and
xor
and
ljmp
enter
mov
call
add
or
mov
xchg
or
popf
sub
lods
lock
mov
cmp
pop
sarb
shr
adc
or
cwtl
dec
nop
gs
mov
jmp
je
add
jae
divb
adc
or
jo
es
or
mov
or
xchg
sbb
outsl
add
aad
sub
push
or
xor
mov
shl
int3
ds
xchg
cli
mov
fsubrs
push
adc
sub
clc
mov
inc
cmp
push
hlt
add
inc
fwait
dec
and
shll
cmp
sub
sahf
mov
mov
out
sarl
add
mov
jmp
sub
push
cld
or
fsubrs
jae
and
rcrb
dec
add
mov
mov
push
xchg
shlb
xor
push
aam
pop
inc
or
cmpxchg
sbb
movsb
outsb
push
mov
dec
dec
or
push
adc
adc
in
rol
push
outsb
ret
cltd
lea
mov
add
jp
cmc
cmp
add
and
inc
addps
and
xor
adc
push
idivl
and
shl
jmp
pop
cmp
xchg
pushaw
je
mov
sarb
cmc
loop
push
sbb
inc
jmp
xor
fdivr
cwtl
xchg
sub
adc
in
int3
ret
adc
movsb
mov
xchg
push
xor
adc
mov
fisubs
int3
push
hlt
inc
loop
pop
jbe
negl
or
lock
xchg
cmpb
jmp
xor
aam
mov
icebp
xlat
sub
xor
and
inc
xchg
add
or
lods
xchg
inc
je
out
inc
rcll
push
sarb
adc
pop
fimuls
mov
jle
cwtl
push
add
adc
incb
int3
adc
mov
pop
xor
push
pop
call
inc
pop
dec
sub
mov
test
in
scas
shr
push
pop
bts
and
adc
mov
mov
js
sub
aam
jne
add
push
dec
cmpsb
test
hlt
push
or
xlat
movb
mov
and
adc
mov
sti
sarb
mov
adc
call
test
xchg
ds
mov
test
adc
xchg
ftst
sub
icebp
popl
int3
test
push
insl
fcoml
xor
bound
sbb
movsb
add
push
adcb
jnp
test
add
inc
pop
lcall
sahf
inc
add
clc
sub
je
jb
loopne
push
push
adc
and
add
mov
cmp
mov
add
push
push
fcomip
dec
mov
adc
dec
ret
mov
call
and
jo
stc
pop
cld
dec
insl
dec
test
ret
pop
inc
mov
fists
push
mov
jns
inc
leave
clc
in
push
ret
dec
pop
in
adc
insb
cmp
dec
add
outsl
jecxz
push
jp
and
push
je
imul
jl
sbb
xchg
dec
bound
push
call
add
sbb
ret
outsl
ljmp
push
sar
and
pushf
andb
cmp
js
and
lret
fnsave
nop
fs
test
jne
mov
xchg
ret
lea
clc
or
adc
or
sub
fistl
rorb
loopne
lods
mov
incb
sub
or
sub
and
hlt
adc
in
push
mov
sub
adc
push
js
cmc
inc
rcrb
mov
push
stc
inc
mov
movsl
fisttpl
xchg
sub
adcl
jne
sbb
mov
ret
cld
aas
add
pusha
or
aaa
or
jmp
outsl
out
push
xor
lock
inc
scas
dec
enter
inc
gs
mov
ret
mov
sub
pop
test
add
je
aaa
addb
push
outsl
push
xchg
test
jl
fwait
cs
add
jo
out
hlt
cmp
jg
add
and
cli
clc
mov
push
clc
rcll
js
adc
add
icebp
decl
cmp
jmp
orl
adc
push
jge
fdiv
jg
sarl
addb
int3
or
out
inc
pop
test
inc
outsb
push
sbb
push
adc
mov
aam
rolb
es
xlat
es
cmp
enter
cld
andb
push
sub
inc
add
xor
ljmp
clc
push
add
in
mov
subb
inc
inc
ret
mov
in
imull
pushf
es
in
mov
xchg
xchg
int3
cmp
mov
movb
adc
mov
add
mov
ss
sbbb
fiadds
lahf
lods
pop
imul
repz
hlt
add
or
je
mov
aam
xor
mov
test
cld
push
inc
sub
dec
mov
sub
loopne
mov
hlt
add
or
adc
inc
push
add
sysret
push
loopne
mov
sti
rclb
adc
add
sbb
xor
gs
dec
or
cli
jb
push
push
dec
add
aam
add
adc
jnp
push
add
dec
outsl
push
pop
outsl
ss
push
mov
xor
outsl
adc
sahf
lods
sbb
in
loop
sbb
add
rclb
push
and
aam
mov
jo
int
pop
imul
js
lret
movsb
and
mov
rolb
mov
push
cli
add
fs
loop
xlat
cmpb
shrl
cwtl
add
xchg
outsb
or
xchg
je
jne
pop
adcl
fisubrl
add
and
scas
gs
mov
arpl
sub
or
push
enter
push
cmpsl
push
pop
adc
pop
dec
sub
test
inc
aam
jg
clc
or
mov
dec
add
sub
and
mov
ds
inc
or
and
cli
xchg
std
or
or
imul
cld
sbb
mov
mov
push
push
mov
or
mov
pop
aas
pusha
xchg
stos
push
add
les
cmp
inc
test
inc
adc
add
and
lock
mov
xor
jl
inc
and
ja
lock
add
mov
mov
add
popf
je
add
xchg
jp
jb
dec
mov
fs
add
lods
add
scas
shrb
mov
xlat
jne
adc
test
js
dec
loope
cs
in
dec
loope
add
pusha
xor
subl
or
pushf
movsb
push
mov
cld
sub
sbb
les
jg
loopne
inc
int3
rolb
pop
dec
test
popf
in
cs
jmp
inc
adc
fisubs
rcrb
ret
cmp
scas
xchg
xor
mov
gs
je
adc
sahf
cmc
pop
push
jae
rorb
icebp
and
xor
jne
jae
nop
pop
mov
es
sarl
in
adc
cmp
loopne
push
inc
cld
das
call
outsb
inc
je
pop
or
js
sub
lock
sbb
mov
lss
ljmp
outsb
outsl
adc
cmp
fmuls
pop
sbb
orl
pop
nop
test
sbb
sbb
insl
fisubrl
push
or
mov
addb
mov
push
push
dec
xchg
mov
scas
dec
push
mov
out
aas
push
gs
or
fmuls
adc
add
mov
sub
sub
add
shl
jae
nop
add
or
aam
repnz
push
push
add
push
pop
es
xchg
insl
mov
push
loopne
es
daa
clc
or
pcmpeqb
imul
jo
mov
sub
xorb
test
pop
or
in
movsb
sbb
sarb
and
inc
jmp
fsubs
or
enter
add
sub
mov
sar
xchg
adc
stos
push
aas
push
xlat
push
mov
inc
add
incl
pop
mov
adcb
sub
shll
or
mov
mov
pop
pushf
mov
or
ret
sbb
popa
call
fdivr
cmp
test
std
orb
pop
ret
fmul
xor
mov
add
lret
loopne
xor
and
iret
mov
or
test
lahf
pop
iret
xor
nop
push
or
call
sar
icebp
jns
mov
mov
rorl
shll
mov
cwtl
xchg
sub
xchg
add
add
mov
jo
mov
or
cmp
pop
sub
gs
or
aas
aas
push
rol
push
xorl
sbb
xchg
add
inc
loope
out
dec
dec
call
adc
add
dec
rol
mov
adc
xlat
nop
push
jmp
pop
fs
mov
push
add
test
fwait
mov
mov
clc
sbb
outsb
push
push
cli
xor
and
call
add
out
cmp
push
add
adc
cmp
pushl
nop
dec
push
xor
cmpsl
mov
lea
inc
mov
daa
add
mov
sbb
sbb
mov
cmp
les
push
or
or
mov
jmp
cmp
cli
out
and
add
test
enter
push
dec
sbb
xchg
xor
jecxz
or
int
xchg
fcomps
outsb
shlb
inc
scas
jge
sub
lcall
std
pop
or
jge
push
int3
jno
add
push
mov
pushl
adc
aam
push
shl
repnz
pop
push
pop
mov
hlt
imul
jno
hlt
imul
pusha
inc
cmp
cmp
int3
sub
inc
idiv
xor
sub
inc
pusha
dec
or
pop
push
movsb
xor
subb
into
call
lea
sub
mov
lahf
into
dec
test
push
jmp
mov
lock
sbb
jg
adc
mov
imulb
sub
jmp
push
or
adc
icebp
push
dec
xor
hlt
lock
adc
dec
sub
or
push
xchg
arpl
jg
sbb
cmp
repnz
add
sub
sbb
andl
mov
mov
pop
dec
push
gs
out
aam
mov
shll
ss
add
std
nop
push
push
lock
cmp
into
mov
rcrb
gs
xlat
into
cmp
adc
data16
scas
dec
std
fnstenv
shrb
andl
test
inc
repz
outsb
mov
popf
cli
push
cwtl
jne
jne
js
or
inc
sbb
aam
or
mov
je
xchg
pop
inc
clc
cwtl
mov
gs
pushf
inc
fadd
jo
std
pop
ljmp
xlat
sub
repnz
push
or
pmaxsw
adc
das
or
outsl
mov
or
push
lds
dec
pop
pop
and
mov
or
pushf
mov
cmp
out
sub
pop
lods
add
imul
add
push
sbb
mov
test
jb
add
es
mov
cwtl
mov
ljmp
shlb
and
sti
lcall
les
dec
cmp
push
orl
pop
adc
sub
aas
repnz
rcpps
std
in
xchg
adcl
scas
push
push
adc
hlt
and
dec
scas
in
scas
orl
cmp
sub
rclb
mov
jae
fs
cwtl
adc
fs
lods
outsb
sub
dec
test
push
pop
push
pop
inc
fstps
in
dec
lods
add
pusha
adc
rcrl
add
pop
or
fsubr
call
stos
push
shl
je
sarl
int3
jge
testb
mov
or
stc
push
jne
fdivr
test
add
mov
scas
add
add
test
jl
jge
test
pop
xchg
xorw
jbe
dec
pusha
and
dec
sub
outsl
pop
aam
inc
push
mov
dec
insl
add
rcrl
and
cmpsb
mov
aam
leave
cmpl
or
test
cmpsb
test
or
je
inc
and
or
jne
aas
lcall
sub
and
es
inc
ljmp
pop
jmp
imul
ret
mov
sub
imul
mov
stos
xchg
pop
pushf
jb
sbb
cwtl
mov
pop
and
call
jle
fidivs
adcb
js
mov
clc
adc
add
test
cmpb
pop
pop
hlt
outsb
std
aas
pop
rolb
adc
ljmp
rorb
fimuls
je
sahf
adc
test
lock
xor
jl
jle
les
insb
arpl
stos
pop
or
cmp
add
test
or
push
loope
dec
dec
inc
add
jne
das
pop
fidivrs
cmovae
int3
call
add
fmul
jmp
loop
mov
adc
inc
int
ljmp
mov
dec
les
sbb
je
mov
or
pop
arpl
push
cltd
orb
inc
test
push
movsb
in
inc
daa
pop
xchg
push
mov
lock
iret
adcb
sub
adc
adc
push
add
fstl
pushf
sbb
or
push
scas
and
in
jbe
and
gs
js
push
jl,pn
push
xor
fdivr
fcoml
pop
incb
rorb
dec
push
ret
rcr
sub
outsl
sbb
jg
and
or
push
cld
fidivl
mov
pop
mov
or
in
cs
test
jo
fildl
jne
adc
jmp
push
or
movsl
mov
bound
icebp
movsb
sub
cmp
lods
push
pop
sbb
cmpb
call
data16
pop
lret
call
adc
sub
popa
add
xor
cmp
lret
fdivs
arpl
or
les
loop
add
fimull
mov
push
stc
cmpsb
push
imul
inc
xchg
mov
and
mov
push
jmp
shrb
pop
sbb
add
jmp
sbb
or
push
sub
add
lcall
pushl
pushf
dec
int3
add
or
xor
push
les
pop
loopne
jo
mov
sbb
dec
xor
in
inc
cld
je
nop
mov
mov
in
testb
stos
dec
stos
mov
mov
lods
adc
jl
push
cmp
lock
mov
sbb
ljmp
data16
ret
adc
shlb
add
xor
loopne
adc
sub
inc
sbb
daa
mov
push
pusha
rclb
or
clc
adc
jp
mov
fstpt
sbb
push
mov
and
stc
push
add
mov
in
xchg
add
sbb
ret
or
mov
and
insl
lds
xor
pop
sub
repz
mov
rclb
and
or
incl
and
pusha
and
ljmp
or
loope
cmpl
ffreep
xorps
rcll
ss
fbstp
testb
loope
or
fcomps
adc
outsb
dec
clc
mov
push
sub
out
je
gs
repz
xor
ret
jle
cmpsl
add
xchg
rcl
mov
pop
test
mov
insb
out
int3
sub
lcall
sub
mov
or
jo
std
in
add
push
pop
es
jge
insl
add
call
jae
in
push
inc
and
push
stc
cmp
cmp
ds
ds
sub
nop
push
pop
xlat
imul
jo
orl
mov
das
nop
jmp
aam
shll
lods
push
cmp
loopne
clc
pop
mov
shrb
add
data16
loopne
es
icebp
inc
mov
xchg
adc
ret
pusha
bound
cmp
neg
adc
adcb
jle
cmp
add
gs
or
jp
mov
pop
add
or
xor
cmc
cmp
subb
pop
js
outsl
ficoml
test
stc
cmp
add
loop
stos
lods
adc
in
imull
xchg
mov
je
int3
adc
je
loopne
lea
or
jbe
das
mov
lods
add
sbb
adc
mov
pop
imul
jp
test
xor
syscall
out
insb
ljmp
incb
pusha
inc
fisubrs
pop
das
jl
orb
xchg
jmp
adc
inc
in
es
cmp
jmp
cld
mov
inc
jne
jle
les
popa
and
add
leave
adc
insb
xor
jmp
mov
and
or
fadds
cmp
mov
sahf
std
add
clc
cmpb
outsl
xor
xor
js
add
jnp
pop
sbb
add
add
sbb
and
call
addr16
inc
and
jo
adc
mov
inc
cmp
push
pop
nop
pop
cmp
adc
rcr
sbb
push
fsubp
cmpsb
outsb
sarb
fucomi
in
inc
and
add
add
inc
push
push
or
lock
cmp
pushf
sarl
mov
daa
mov
mov
sbb
ret
pop
pop
jo
or
loopne
push
ja
hlt
ret
pop
mov
lea
and
mov
push
xor
mov
inc
mov
pop
cli
fbld
add
mov
scas
fimuls
je
adc
int3
leave
xchg
rcll
jne
sbb
lock
repnz
movsb
data16
lds
xchg
xor
cmp
or
jno
mov
testl
jbe
xor
lcall
mov
pusha
push
xchg
in
out
je
ffree
and
les
sbb
push
xchg
mov
pop
pop
cmp
xor
lds
jb
lock
addb
adc
push
inc
sub
mov
inc
push
xor
js
dec
dec
adc
stos
xchg
rorl
mov
in
push
movb
scas
bound
inc
and
jnp
mov
mov
popf
decb
incl
arpl
cmpsb
mov
jbe
cmc
xor
sub
jno
mov
jp
dec
inc
adc
pop
mov
int3
or
rcrb
mov
jl
rcl
cmp
sub
jge
dec
call
mov
xlat
inc
cmpsb
aam
cs
lea
push
adc
incl
loope
dec
inc
mov
add
jb
fmull
int
call
js
in
lea
lock
push
shlb
mulb
pop
fsubs
dec
hlt
pop
pop
imul
fs
rorb
mov
mov
xor
fsubrl
outsb
inc
mov
int3
divb
or
xlat
scas
cmc
adc
dec
mov
ljmp
inc
mov
inc
inc
and
lock
mov
dec
movsb
xchg
data16
xor
lcall
popw
in
clc
es
pop
or
dec
scas
fs
test
ss
mov
add
sub
push
and
jne
faddl
mov
das
mov
jmp
xchg
xchg
cmp
js
ficomps
lock
xor
adc
pop
sbb
ret
sahf
sti
adc
dec
adc
hlt
sbb
jge
pusha
xchg
cmp
rorb
mov
and
cmpsb
lcall
add
dec
sbb
inc
lea
push
sbb
dec
sar
jns
push
jne
or
sub
or
push
mov
or
jae
ljmp
or
inc
outsl
pop
out
ret
xor
mov
rcrb
incb
sbb
sbb
sbb
push
xor
loopne
ror
add
push
pop
add
insb
lcall
jp
mov
dec
mov
and
aam
out
test
sub
fcmovnb
ss
push
inc
mov
ret
outsl
xchg
fld
cmp
mov
sbb
and
dec
sub
pcmpgtd
push
or
jg
mov
idivb
pushf
addb
or
fmul
mov
push
clc
pop
sbb
xor
jae
jmp
int
xor
add
push
xor
lcall
inc
mov
mov
ret
aas
popa
mov
cmp
rcr
mov
push
in
push
sbb
xchg
mov
pop
add
fsub
or
push
lcall
cmp
rolb
fsubl
mov
in
hlt
lea
lfs
std
stos
fidivrl
je
test
repz
daa
jle
dec
jecxz
adc
cmp
mov
sub
sub
loope
call
test
or
push
xor
cwtl
les
sub
xor
jl
shlb
ret
neg
enter
pop
inc
scas
mov
mov
cli
jb
loopne
ret
fwait
lock
mov
mov
faddl
out
dec
ss
or
sbb
test
push
inc
ja
out
jo
sbb
dec
test
dec
stos
out
stos
jp
aaa
cmp
stos
xor
push
cld
lods
rcr
in
loop
cld
loopne
sbb
pushf
cmp
mov
and
pop
fcompl
mov
sbb
hlt
lds
cwtl
and
or
arpl
rclb
data16
adc
xchg
sub
sub
and
jle
mov
dec
cli
inc
inc
rsqrtps
in
popf
in
jne,pt
inc
adcb
mov
xor
idiv
pop
push
inc
or
incb
je
into
xchg
out
mov
mov
scas
xor
pop
mov
jno
and
mov
xchg
mov
and
enter
and
cli
dec
aas
cmp
jne
jmp
mov
pushl
sbb
adc
inc
mov
cmc
push
push
inc
mov
lods
bnd
mov
dec
popa
push
mov
push
push
bnd
fisubs
dec
orb
push
incl
adc
cli
clc
inc
inc
push
stos
or
pushf
jbe
shll
mov
mov
fcompl
add
push
mov
lock
faddl
mov
or
mov
push
sbb
mov
or
es
adc
pop
in
pop
add
push
cld
xor
fbld
jmp
mov
std
clc
rcr
lea
and
aas
je
xlat
sub
jne
inc
aam
mov
xor
mov
add
cltd
jne
notb
cmp
cmc
test
in
int
pusha
cmpsb
in
inc
les
data16
and
les
inc
push
xchg
xchg
sbb
rorl
sub
imul
mulb
gs
mov
scas
cmp
cmc
lahf
mov
jne
mov
les
stos
add
inc
rolb
adc
shrb
insb
dec
std
dec
xchg
ljmp
mov
into
jl
rcll
out
aam
notb
in
shll
xchg
jo
nop
xor
nop
enter
pop
dec
scas
push
daa
adc
mov
hlt
cs
inc
sub
push
test
imulb
inc
test
push
pop
mov
or
pop
in
cmp
pusha
push
loope
lock
push
jmp
mov
negb
push
out
inc
jns
inc
in
inc
or
jg
pusha
push
clc
lock
cld
rorl
inc
sub
pop
test
inc
cs
test
cmovne
pop
fwait
sarb
and
sti
fprem
sbb
push
lock
adc
push
enter
fdivr
fcomi
add
rcrb
arpl
bound
not
xchg
push
or
movb
mov
test
insb
add
jne
sub
dec
add
sub
sarb
sub
leave
cmp
lret
scas
int3
or
and
cld
inc
pop
popa
dec
add
inc
mov
xchg
ret
inc
nop
jne
push
lahf
mov
mov
dec
in
icebp
xor
xchg
adc
add
inc
add
gs
cld
push
mov
cmp
inc
daa
pop
mov
jle
ret
inc
out
inc
imul
lds
pop
in
pusha
inc
sub
push
or
dec
pop
add
test
push
or
les
leave
pusha
in
inc
mov
addl
adc
nop
push
or
enter
cmc
mov
adc
adc
add
mov
lcall
add
mov
push
test
movl
rorb
pop
xor
push
push
filds
rorb
inc
in
insb
ret
sbb
xor
dec
cmp
xchg
psllq
imul
sub
push
mov
mov
mov
mov
sub
mov
andb
aas
ret
mov
fisttps
mov
fwait
inc
addl
adc
mov
ret
loop
scas
or
add
mov
icebp
sub
push
inc
push
cmp
xchg
stos
add
adc
push
sbb
pop
xchg
push
mov
ljmp
cld
mov
int3
inc
icebp
inc
lock
cmp
mov
or
mov
in
and
or
mov
es
fcmovnb
xchg
loopne
push
cmp
les
or
cmovbe
cmpb
jmp
negb
mov
add
inc
stc
adc
adc
mov
shrl
pusha
xchg
push
jl
movsb
ss
lret
movb
push
ret
sahf
mov
lea
cmp
inc
inc
adc
pop
call
les
pushf
inc
xchg
mov
jb
data16
xchg
jecxz
mov
movsl
mov
in
imul
stos
add
loope
into
pop
imull
cmp
jae
addl
mov
int3
sbb
out
add
ljmp
mov
rcrb
inc
push
test
in
dec
adc
pop
jb
sbb
outsb
mov
nop
add
test
push
xor
movsl
push
cwtl
push
je
jne
push
cmp
fdivrl
loop
sub
mov
sbb
pop
xor
shll
shrl
fidivrs
bound
xor
xor
xor
sbb
icebp
loop
push
lret
push
popa
mov
cmp
pop
mov
adc
jbe
test
test
xor
aaa
loopne
in
dec
aam
or
into
pop
push
mov
sub
insb
faddp
push
pop
shlb
adc
pop
mov
pop
pop
dec
outsl
faddl
sub
fbld
rcl
sub
imul
mov
insl
jp
outsl
shll
outsb
nop
popa
and
inc
mov
sub
fsub
adc
or
sbb
mov
jmp
stc
fisttps
dec
ficompl
xor
shlb
and
jl
call
hlt
adcb
dec
lods
pusha
sub
sub
mov
call
mov
lock
and
clc
pop
xchg
andps
and
outsb
add
jmp
mov
dec
rolb
or
jo
je
loop
mov
test
ret
aad
and
sub
mov
int3
xchg
pop
add
mov
lret
or
fisttpl
add
shlb
inc
and
into
cmp
in
std
mov
mov
pop
add
fsubrl
xor
sub
mov
fisttpll
pop
push
test
push
and
xchg
adc
dec
pop
clc
push
lock
jp
subl
push
add
in
add
call
insb
loope
cmp
xor
pop
xchg
int
pop
and
dec
push
sbb
pop
in
inc
sub
jae
mov
call
test
call
add
mov
cmp
test
aas
xor
mov
or
daa
inc
ja
bnd
cmp
inc
test
cmp
inc
fs
or
insb
inc
out
fs
push
adc
jbe
and
push
xchg
inc
test
clc
adc
cs
mov
push
mov
fiadds
pop
loopne
cmp
xor
enter
inc
je
sahf
add
inc
in
adc
rcll
jmp
mov
ljmp
xor
addl
je
push
pop
and
pop
push
jb
ret
adc
aas
and
pop
test
das
jns
pop
clc
mov
lods
andb
int3
push
inc
dec
push
inc
mov
push
mov
xchg
push
cmp
ret
cmc
lds
dec
sub
test
and
or
adc
shll
adc
push
je
int
neg
add
pushf
pop
inc
cmp
jno
cmp
mov
add
sti
add
cli
ljmp
push
sbb
mov
dec
scas
les
mov
inc
lea
push
xor
pop
push
outsb
inc
in
or
adc
clc
lock
adc
push
lock
dec
test
adc
call
xor
sbb
mov
cli
ret
insl
addr16
in
idivb
data16
les
adc
add
fistps
push
adc
dec
add
or
xlat
ret
mov
sbb
push
ss
movups
outsl
mov
mov
add
rorl
add
cmpb
adc
xor
inc
les
inc
loopne
xchg
xor
popf
mov
lea
and
adcl
outsb
mov
loopne
or
mov
fisubrl
pop
mov
std
add
pop
jne
jge
or
adc
sub
lock
mov
or
imul
push
add
sub
dec
int3
das
add
adc
jl
outsl
inc
xchg
jg
inc
cmp
xchg
mov
adc
mov
movb
pop
stos
inc
cmpb
push
dec
inc
jb
movsb
push
adc
add
cmp
popl
inc
sub
lock
dec
insl
push
mov
push
lret
xor
mov
fs
xor
or
adc
xor
cmp
mov
push
std
das
and
mov
jne
mov
add
mov
push
loop
xor
test
sub
sbb
mov
shlb
inc
das
add
clc
jne
xchg
test
sbb
mov
jbe
adc
cld
in
jg
or
push
push
add
jne
shl
rcll
xor
test
cs
jb
les
cwtl
stc
jl
test
aas
xchg
ja
pop
nop
push
mov
or
xor
jmp
inc
sti
jp
fdivrp
sub
push
or
mov
jne,pt
in
inc
sub
xchg
mov
into
jp
and
lds
and
repz
pusha
popa
xchg
or
push
mov
addr16
test
jae
mov
and
scas
jp
sbb
fdivrp
mov
or
inc
ss
or
ljmp
add
stc
add
push
mov
add
aam
mov
mov
cmp
call
add
add
call
and
push
mov
cli
sub
sub
and
xor
inc
xchg
jg
xor
push
sub
jo
mov
xor
sbb
lods
jb
call
mov
push
push
add
jle
adc
sahf
or
push
loope
xchg
mov
sarb
or
jecxz
mov
in
or
sub
repnz
jge
xchg
outsb
mov
inc
lahf
gs
ds
shl
sub
mov
data16
test
xchg
push
adc
add
cmp
fimull
clc
xor
jb
adcb
les
mov
add
testl
sub
jle
bound
sub
mov
lods
cmp
add
stos
pusha
sub
je
and
ffreep
sar
decb
imul
inc
sbb
add
shll
inc
lret
add
inc
clc
testl
push
jmp
and
inc
das
adc
mov
cs
imul
aam
push
into
mov
popa
pop
inc
cmpsl
mov
cld
divb
push
mov
addl
jne
in
adc
jge
fs
mov
pop
mov
pusha
mov
dec
out
mov
movl
cmc
jle
add
call
testl
pushl
pop
loopne
pop
fidivrl
push
test
push
sub
push
mov
nop
jb
hlt
insl
add
roll
mov
xchg
mov
mov
int3
std
lea
sahf
and
mov
ja
andl
dec
or
mov
and
add
inc
subb
pop
push
sbb
inc
push
test
dec
shrb
jg
push
cmp
pop
jae
test
ror
sub
call
cmp
popa
inc
add
sbbb
imul
add
mov
sbbl
adc
mov
ljmp
subl
mov
cli
leave
ss
inc
push
sbb
push
je
xchg
jmp
ror
js
ret
push
mov
sbb
mov
mov
mov
pusha
gs
xchg
je
dec
repnz
pushaw
sbb
outsb
test
push
sub
popa
pop
mov
cmpsl
call
ret
add
adc
cmp
ss
xor
insb
repnz
and
sbb
or
lea
or
mov
pop
cld
gs
or
or
add
inc
jo
add
pushw
cmp
mov
fistl
cld
mov
cmp
aaa
lcall
jne,pn
xchg
out
cmp
inc
xchg
lods
xchg
sbb
pop
test
jge
shrl
sbb
fisttpl
je
push
pop
xor
lcall
mov
lea
inc
mov
add
das
aam
adc
loop
sbb
out
ficoms
and
ficoms
sbb
popf
aam
xchg
icebp
bound
aad
in
test
in
sbb
fcomps
push
lret
andb
mov
mov
ret
call
test
loopne
jne
inc
das
sbb
sahf
dec
shlb
call
or
sti
mov
add
mov
mov
mov
or
adcb
jne
lods
sbb
stc
sbb
pop
or
inc
push
inc
mov
or
push
js
push
ret
sbb
cld
xlat
loop
mov
push
lahf
push
or
dec
mov
sbb
or
push
sub
mov
pop
shl
cld
inc
test
jbe
pop
shrl
pop
pop
test
xor
and
aam
fdivp
test
jmp
loop
cmp
call
orl
mov
mov
nop
push
cld
cmpsl
fsubrp
ja
cmp
inc
xor
call
sbb
or
jns
xor
add
push
jmp
cmc
call
cli
ds
mull
dec
stos
push
ret
push
or
cmp
jbe
ds
fimull
mov
or
lds
mov
repz
lret
mov
cwtl
sbb
push
outsb
sub
xchg
add
hlt
lea
push
and
lcall
lds
lcall
jo
lret
pop
lods
popf
addb
dec
dec
loopne
jmp
incl
loope
les
xorl
add
stos
loopne
imul
int3
mov
ss
mov
mov
mov
cmp
xchg
add
and
leave
jno
lods
fdiv
lcall
ds
int3
test
cmp
fdivrs
push
dec
push
test
test
push
mov
xor
and
clc
insb
jl
xorl
pop
filds
shl
mov
mov
call
mov
bound
add
pop
jne
inc
fmull
sahf
inc
push
push
sub
test
imulb
jge
hlt
call
add
push
push
push
jae
lcall
ficompl
push
adc
jo
les
lcall
cmp
cli
jo
add
mov
push
xor
push
mov
filds
dec
inc
and
and
mov
mov
outsb
adc
addl
add
std
xor
xor
push
sarb
dec
roll
push
or
loop
pusha
jle
imul
in
dec
xor
lcall
call
movsb
pusha
arpl
add
cwtl
jo
push
jecxz
cmpb
xchg
cld
fisubs
cmp
mov
cmp
sbb
cmp
imulb
adc
iret
xor
dec
cwtl
je
decb
add
dec
je
std
push
push
push
repnz
je
cmp
rclb
add
lea
scas
jmp
jg
mov
or
dec
jb
adc
ljmp
pop
inc
rolb
and
ljmp
test
out
lea
ret
std
mov
pop
xchg
lret
clc
jmp
mov
adc
pop
testl
hlt
xor
cmp
clc
shlb
pop
into
movsb
int
or
mov
lods
lcallw
std
xor
sub
add
add
cmpsb
push
mov
loopne
or
rcl
enter
nop
jno
test
xchg
cmp
pop
or
fs
inc
xchg
mov
cmp
push
add
clc
clc
or
or
push
push
and
pop
sub
bound
cld
add
sbb
and
pop
jp
xor
mov
inc
call
jp
ja
or
inc
xchg
sub
dec
push
xor
pop
mov
leave
push
jo
mov
add
imul
adc
push
mov
or
xchg
ljmp
decl
push
dec
mov
mov
add
jmp
jne
mov
dec
shlb
dec
orb
pushf
or
mov
repz
adcb
in
ret
jp
cli
pusha
call
dec
adc
hlt
andb
nop
orb
sbbl
pop
adc
sub
popa
jp
mov
inc
sarl
add
fnsave
lcall
or
mov
mov
rcl
ret
fidivrl
sbb
sub
fs
mov
or
fadds
and
clc
pop
fistpll
adc
push
lods
lods
pusha
rol
pusha
jecxz
sbb
mov
repz
into
add
sbbb
neg
push
mov
das
into
insl
cmpsl
pop
cmp
imul
mov
sahf
js
mov
inc
dec
push
inc
xor
outsb
pushf
adc
mov
mov
push
push
lds
das
mov
ret
jae
push
push
sbb
je
sbb
mov
inc
daa
push
andb
test
lods
adc
je
inc
adc
inc
mov
ds
fimull
push
repnz
or
fs
les
dec
jo
stos
mov
cli
lock
call
pusha
add
xchg
add
enter
mov
xchg
imul
xor
sbb
push
mov
mov
push
xor
mov
rorb
jne
pop
je
ret
push
rorb
scas
aam
pop
sbb
pop
pop
cmp
inc
add
incl
add
adc
lds
fs
adc
popa
test
add
and
jbe
test
lea
out
je
xor
jp
icebp
rolb
into
scas
push
add
sbb
cmp
mov
add
and
clc
nop
andb
jge
inc
push
adc
push
loopne
xchg
inc
enter
mov
or
das
xchg
and
mov
adc
outsb
enter
or
mov
xchg
sar
sub
xor
inc
jl
and
je
dec
pushf
gs
in
and
fwait
or
xchg
inc
fdivrl
cmp
cmp
push
dec
mov
jmp
adc
cwtl
mov
jne
pop
push
inc
ret
insb
js
sub
outsb
pushf
pushf
je
sbb
andb
out
xor
clc
add
adc
add
jge
fadds
inc
shr
push
cli
xor
push
xchg
cmp
push
push
int3
sub
mov
loopne
dec
xchg
lea
sub
mov
cli
mov
cmp
xor
sar
inc
sbb
jne
jae
cwtl
xor
test
xor
jmp
xchg
les
aas
mov
jp
mov
in
loop
inc
mov
cmp
cs
shlb
or
dec
cmp
test
daa
jl
out
inc
ret
cmp
lea
jl
add
dec
push
iret
and
sub
aam
or
push
push
add
xor
mov
jo
nop
dec
dec
sub
push
sbb
mov
les
sub
fisttps
je
clc
lea
add
xchg
adc
adc
mov
cmpsb
mov
cmp
test
inc
sbb
and
insl
inc
push
mov
andl
mov
mov
push
add
lcall
pop
rolb
adc
cwtl
pusha
push
push
push
les
cli
call
incl
stos
sub
mov
inc
sbb
sub
aaa
add
pushf
int3
xchg
mov
shlb
movsb
aaa
cld
adc
sub
int3
rolb
or
or
cli
jp
mov
lret
sbb
adc
decl
inc
loopne
inc
mov
jl
pop
push
push
lea
icebp
jge
sbb
lock
sbb
les
shlb
hlt
roll
jmp
lods
ret
jb
jno
pop
test
inc
popf
cmc
mov
mov
test
sbb
fsubs
add
int3
push
add
js
jno
adcb
push
imul
xorb
dec
mov
fisttpl
fldt
add
mov
sub
jbe
inc
inc
daa
cmp
xor
xchg
clc
mov
push
add
mov
jne
je
lock
or
push
gs
dec
pop
rol
pusha
mov
das
dec
icebp
shrb
mov
push
mov
ja
push
and
inc
mov
xorl
cmc
and
push
push
lods
out
lods
clc
add
leave
pop
int3
lea
out
cld
fwait
cmpsl
or
dec
jl
out
loopne
jne
cwtl
jge
and
mov
mov
stos
test
nop
out
sub
adc
aaa
and
or
les
call
add
cwtl
sbb
rclb
lods
mov
mov
fisttps
es
cmpl
jb
sahf
push
mov
mov
sbb
loope
hlt
or
pop
xor
xchg
enter
pusha
xlat
ss
decl
and
jmp
subl
aad
push
lcall
aaa
adc
ljmp
call
mov
lds
test
xor
jmp
out
or
dec
clc
loopne
push
js
add
inc
push
mov
push
shrb
inc
inc
jb
jmp
orb
repz
jmp
or
outsb
call
push
xor
icebp
mov
decb
orl
ror
jge
std
add
stos
sub
push
ret
inc
fmull
movsb
into
into
pusha
add
mov
jp
out
add
loope
push
pop
mov
mov
mov
mov
xor
cmp
call
or
test
sbb
or
inc
aam
setl
mov
fisttps
out
dec
pop
sahf
insl
add
shll
pushf
push
je
loope
adc
test
loope
gs
stos
adcb
inc
aas
mov
jle
dec
push
je
aam
inc
jb
xchg
push
push
adc
mov
test
pop
and
cmp
popf
fisttpll
push
push
mov
jo
adc
inc
int3
jne
xor
test
dec
gs
jl
or
frstor
movsl
pop
mov
lahf
loopne
js
data16
add
pushf
pop
mov
jp
jno
and
push
in
cmc
xchg
bound
xchg
sub
xor
push
push
inc
jbe
or
sbb
adc
push
jmp
roll
push
mov
lret
je
in
cmpb
loopne
rclb
and
in
xchg
xor
in
jb
inc
cld
out
testb
cltd
lret
and
cmp
push
call
test
gs
pop
addb
lock
sbb
insb
clc
pop
push
mov
fisttps
leave
ljmp
mov
push
push
inc
inc
inc
sub
mov
shlb
cmc
fcomps
mov
xor
inc
mov
push
or
mov
push
dec
xchg
cli
mov
jl
inc
mov
xor
insl
add
pusha
test
fcmovbe
sbb
xchg
jle
idivb
fs
loope
pop
push
in
inc
mov
sub
adc
insb
xlat
or
fbstp
mov
jne
sub
dec
std
inc
inc
inc
jae
inc
jge
clc
clc
mov
shlb
sub
xor
nop
cmp
inc
push
add
xchg
dec
and
pop
cmp
fisubs
ret
std
jg
push
fcoms
mov
sarl
inc
sbb
or
lea
adc
dec
loope
pop
lock
pop
mov
in
ret
std
xchg
adcl
lea
inc
mov
orl
add
push
insb
test
dec
xor
fdivl
pop
test
mov
add
test
scas
push
fsubs
push
clc
sbb
dec
insl
push
jle
or
sub
bound
cmc
icebp
inc
frstor
lahf
arpl
roll
orl
loop
std
jno
lock
adc
imulb
inc
mov
test
ss
sbb
mov
iret
push
push
iret
adc
lea
or
pop
sbb
add
lret
cmpsl
push
pushl
mov
jmp
xchg
lcall
mov
cld
aas
add
mov
std
int3
mov
cli
xor
cmp
push
data16
rclb
mov
into
decb
adc
adc
out
roll
test
mov
push
sub
lea
jo
fistl
push
pushf
or
push
loop
push
jg
and
adc
lock
mov
enter
cwtl
pop
fldl
push
pop
sub
xchg
jns
enter
in
jbe
ljmp
add
leave
inc
mov
pop
push
cmp
jmp
push
es
jmp
test
stos
xchg
sar
push
jmp
dec
pmaddwd
dec
insb
jns
xor
lcall
test
sbb
push
daa
mov
lea
pandn
loopne
jnp
movb
cmp
jne
data16
pusha
mov
xchg
inc
shlb
jg
shll
sub
je
mov
lds
add
lcall
adc
aad
ljmp
adc
popa
cmp
push
adc
fdivrl
mov
inc
hlt
icebp
ja
xor
push
mov
push
add
mov
sbb
lods
push
ljmp
shlb
sub
or
lea
les
push
xor
loopne
push
outsb
ss
lret
call
mov
loope
arpl
fadd
push
lea
mov
fld1
ss
xchg
sbbl
rolb
inc
and
outsl
bound
std
dec
mov
out
push
mov
inc
cmp
lea
or
cmp
jp
lock
sbb
mov
push
and
jne
lea
leave
arpl
das
pushf
and
push
inc
push
sbb
xor
sub
push
pusha
les
adc
mov
cmp
and
aas
push
adc
gs
add
mov
into
call
in
add
xor
mov
sahf
loopne
or
mov
pop
shrb
inc
xchg
mov
shll
dec
or
loopne
stc
andl
repz
inc
inc
xchg
addb
mov
pop
cld
clc
fs
movsb
pop
mov
into
fdivl
pop
mov
lea
sar
les
jbe
inc
mov
pop
lods
lea
push
inc
ljmp
mov
sub
xor
dec
sbb
mov
sub
lahf
add
cmp
mov
inc
jp
mov
jne
mov
fcompl
mov
ficoml
out
enter
or
flds
mov
add
or
mov
xchg
mov
incl
mov
call
adc
mov
iret
sbb
add
cmpb
lock
shrl
add
add
pop
mov
and
sti
mov
cmp
push
pop
mov
inc
int3
pop
ret
inc
sbb
enter
inc
loopne
xchg
rclb
mov
cmp
push
add
xchg
dec
cmp
lods
cmpsb
fs
inc
cmp
sub
hlt
mov
push
and
jl
xchg
pop
test
add
xor
cmc
inc
add
cmp
icebp
sbb
jl
aad
fiadds
inc
and
retw
ret
daa
ret
or
int3
adc
addl
inc
inc
in
ret
int3
decb
dec
jg
push
or
pcmpeqb
inc
push
cmp
cmp
loopne
mov
xchg
push
pop
in
ljmp
test
mov
mov
shlb
mov
mov
add
addl
or
pop
addl
mov
push
inc
adc
pop
and
add
ror
jae
imul
rcrb
cmp
pop
push
and
adc
xor
lock
push
inc
mov
jns
adc
js
jns
push
lret
lret
push
inc
std
add
mov
test
in
push
mov
ljmp
arpl
jle
mov
insb
xchg
decb
add
test
mov
and
lea
cmp
pusha
xor
lcall
mov
test
and
xchg
and
mov
push
loopne
clc
push
popf
loopne
push
xchg
jb
leave
movsb
add
xchg
maxps
rorb
mov
bnd
aam
scas
les
rcr
daa
mov
adc
inc
ret
mov
or
mov
je
cmp
rorb
and
in
xor
lcall
or
xchg
hlt
add
hlt
call
jne
adc
sbb
rcrb
xchg
rol
inc
cmp
ret
adc
aas
call
xchg
jns
lods
dec
lret
dec
rorb
and
data16
dec
push
jle
sbb
inc
add
add
sbb
roll
shufps
add
gs
push
inc
inc
shrb
gs
mov
stos
add
imul
icebp
jmp
test
cmp
cmp
lds
add
es
sbb
cli
pop
pushaw
jne
les
pushf
pop
pop
cmp
or
ja
push
and
sbb
jl
or
sbb
push
imul
incb
jae
pop
pop
add
fdivrp
push
mov
push
add
pop
inc
mov
push
adc
inc
fcompl
sbbl
shll
pop
rclb
add
add
mov
dec
dec
popa
adcl
push
and
xor
es
cmpb
mov
sarl
push
xorb
jg
leave
mov
jge
or
sbb
jne
add
std
mov
dec
push
and
scas
or
repz
pop
jge
out
popf
mov
test
aas
call
dec
inc
or
bound
aam
push
pop
or
mov
and
jle
gs
add
icebp
roll
xchg
push
andl
and
call
clc
in
xor
clc
sbb
fs
push
push
adc
xchg
or
adc
adc
popa
roll
loopne
cmp
push
and
cmp
jo
test
mov
lea
cs
cs
and
adc
mov
mov
pop
sub
mov
dec
out
mov
jmp
mov
add
adc
mov
insb
inc
imull
data16
lahf
test
sub
test
xor
mov
rcrb
inc
data16
scas
inc
adc
inc
mov
adc
rcrb
push
fmull
jne
xchg
cwtl
adc
mov
jae
add
dec
mov
insl
cmp
sub
or
mov
mov
adc
lds
adc
xor
mov
push
add
incb
jle
xor
push
add
decb
int3
repz
xchg
or
push
daa
mov
inc
push
mov
cmp
pop
fists
push
jp
add
roll
add
xor
cld
xchg
jg
cmp
les
xor
mov
addr16
cmp
and
arpl
popa
stos
push
mov
xor
cmp
fiadds
hlt
add
rclb
sub
xor
xor
out
jl
mov
xlat
add
insb
std
movsb
mov
mov
stos
into
jmp
adc
shll
sarb
ljmp
inc
rcr
mov
je
sarb
jg
pop
add
push
add
mov
lods
jne
lods
or
mov
sahf
inc
dec
dec
push
mov
xchg
dec
mov
std
push
in
mov
cmp
std
hlt
decl
loopne
pop
negb
fs
aaa
and
testb
push
fs
push
sub
faddp
xor
insl
outsb
aam
shl
jbe
rclb
hlt
mov
mov
les
push
outsb
les
push
xchg
sahf
xchg
and
lcall
subl
xor
stc
repz
jecxz
pop
jo
sahf
mov
test
mov
pusha
mov
dec
call
xchg
outsl
and
cwtl
fcmovnu
push
test
cld
data16
sub
push
inc
enter
sub
js
mov
mov
mov
cld
cli
xor
test
in
adc
or
inc
lcall
dec
mov
push
cwtl
mov
mov
into
test
xchg
xchg
ficoms
aam
test
in
insb
push
add
inc
lock
adc
dec
out
dec
mov
xchg
mov
xchg
mov
icebp
scas
cmp
or
xor
clc
push
out
and
dec
xor
pop
pop
push
scas
inc
ljmp
idivb
call
test
pop
mov
jne
unpckhps
in
jge
adc
xor
or
mov
add
enter
xchg
mov
rorl
jp
add
ss
sbb
inc
mov
add
add
add
sub
fldl
sub
icebp
decl
and
callw
scas
adc
mov
das
mov
clc
inc
add
int3
xor
mov
inc
push
push
data16
aad
mov
hlt
pop
pop
inc
cmp
push
push
mov
faddp
call
shll
fisubl
push
hlt
pop
pop
test
pop
je
xchg
lret
push
sbb
mov
pop
and
js
xchg
mov
fucomi
mov
jno
and
jne
push
pop
cmp
sbb
or
movb
add
cs
fdivs
xor
scas
add
leave
and
add
xor
std
lahf
add
bound
hlt
lcall
inc
jg
out
mov
cmp
movsb
ss
cwtl
and
xchg
cmp
ljmp
adc
push
dec
xor
or
adc
enter
int3
push
add
lock
push
test
and
aas
mov
rclb
xor
scas
mov
aas
mov
add
sar
cmpsb
inc
or
add
mov
das
jmp
jmp
aam
fsub
jne
or
ja
ja
scas
in
cld
pusha
or
idiv
pmulhuw
mov
cmp
mov
cmp
test
sarb
mov
jno
mov
gs
dec
loope
or
test
cmp
cmpsl
or
int3
std
xor
sub
add
mov
jge
fwait
or
or
mov
dec
add
aas
lods
jg
cmp
rorb
xor
call
mov
mov
jb
pop
inc
cmp
jns
inc
jmp
xorl
ja
faddl
outsb
fs
aam
in
nop
test
inc
repnz
fwait
stos
and
dec
pop
fwait
hlt
push
push
jge
iret
addr16
push
add
add
subb
or
mov
inc
cmp
add
psubq
xchg
sbb
decb
inc
movsb
bound
loopne
mov
xor
inc
insb
push
push
cmp
clc
add
nop
mov
lock
outsl
cmp
ret
mov
xchg
or
rclb
add
jmp
ss
sbb
inc
sub
xchg
adc
aas
sbb
xor
cmp
or
gs
gs
sarb
mov
add
mov
arpl
negb
dec
dec
adc
sub
add
xor
inc
cld
dec
ret
hlt
lods
add
adc
sahf
pop
clc
or
push
cmp
decl
ret
xorps
inc
dec
test
sub
or
jb
cmp
sub
push
js
dec
je
sub
incb
ret
in
roll
xchg
movb
adcl
testl
mov
out
fs
xchg
fiadds
and
incl
out
adc
cmp
pusha
add
pop
push
cltd
popa
scas
push
mov
vxorps
inc
push
movsb
outsl
lock
jne
adc
or
insl
sti
xchg
mov
insb
mov
call
arpl
aas
scas
hlt
in
add
hlt
and
cmp
add
mov
ja
sub
test
xor
jmp
outsb
bnd
inc
sti
sub
cmpl
movsb
or
insb
push
mov
jle
test
jle
movb
roll
mov
outsb
inc
mov
cmc
cmp
out
mov
xor
or
je
sub
inc
dec
pop
outsb
inc
jl
pop
test
push
pop
push
inc
mov
mov
mov
xchg
out
rorb
leave
mov
fdivp
mov
mov
cmp
fstpt
jb
sbb
sbb
loope
add
jno
push
jne
mov
lods
xor
pushf
add
gs
dec
fsubr
je
cmp
xchg
inc
lds
sub
push
cmp
add
ret
test
pop
cmpsb
lock
xlat
push
push
sub
orb
testb
out
push
jo
add
pop
loope
jne
mov
cld
mov
adcl
or
or
dec
or
or
sahf
pop
add
push
pop
push
fs
mov
adc
xchg
mov
in
dec
xchg
inc
adc
jle
rorl
mov
mov
push
push
mov
fidivs
pusha
push
inc
pushf
add
push
push
adc
dec
fcompl
cli
or
dec
sub
sub
push
add
push
sti
rcr
xor
loope
hlt
fstpl
out
push
mov
dec
movsb
add
xor
sub
loop
pop
pusha
lods
xchg
pop
pop
ret
or
mov
inc
xchg
lock
mov
mov
insl
dec
add
shlb
xchg
sbb
pop
and
lahf
add
jecxz
lahf
loopne
push
and
push
mov
loop
push
push
int3
push
rorb
sti
lea
or
push
decb
inc
rol
inc
notb
out
jae
dec
mov
aas
fs
imul
sub
inc
ljmp
pushf
nop
hlt
cmpl
jne
ss
jle
icebp
sbb
jmp
push
inc
or
rol
std
adc
insb
jg
imul
pop
scas
lcall
cwtl
pop
cmp
add
lods
sub
ret
inc
mov
adcl
push
out
push
imul
test
les
sub
rclb
es
dec
fadds
jp
mov
pop
or
fdivl
cmp
xor
jnp
shlb
add
push
sub
sbb
jl
shl
bound
xor
inc
jnp
outsb
push
pushf
fs
cmpsb
xchg
mov
push
add
push
push
dec
scas
xorb
decl
and
addr16
int3
in
pop
jge
lcall
mov
add
sub
jbe
in
jmp
ds
inc
mov
loope
add
add
mov
push
adc
aaa
dec
push
ret
repnz
sub
stos
add
push
cmp
xor
and
add
ljmp
lods
orb
mov
shll
mov
sbb
daa
sbb
movsb
or
push
or
or
or
lcall
cmp
mov
xor
and
dec
loopne
adc
in
dec
arpl
sub
or
pushf
adc
fiaddl
mov
test
pop
xor
test
inc
js
into
mov
subl
movsl
sub
cmpb
daa
xorb
dec
jnp
fidivs
mov
test
std
xor
mov
push
add
dec
imul
decb
testl
add
rolw
mov
cld
adc
lcall
or
mov
sub
test
add
insl
outsb
or
ljmp
andl
mov
jne
in
adc
add
outsl
mov
inc
stc
mov
xchg
jbe
add
mov
pusha
aad
push
mov
or
je
lret
aaa
push
add
xor
push
add
fistpll
sbb
push
jg
adc
mov
inc
cmp
rolb
mov
dec
stos
sub
add
mov
cli
decl
adc
leave
loop
mov
mov
push
out
inc
xor
lcall
cmp
lock
xor
inc
add
sbb
pop
call
jl
cmc
hlt
outsl
cmpsb
pop
test
sti
cmpb
sarb
rorb
test
lea
sub
ret
popa
fdivr
data16
mov
std
aas
pop
push
push
jmp
push
inc
dec
pop
pop
fsincos
es
sbb
push
movsb
pop
test
and
adc
cli
stos
roll
cs
nop
adc
jle
jnp
push
push
pop
push
mov
cmc
sbb
in
aaa
push
mov
pop
cmc
ljmp
mov
leave
mov
add
jmp
push
mov
xchg
clc
fdivl
or
clc
add
mov
jp
into
add
inc
bound
inc
adc
js
mov
not
movsb
lret
inc
adc
cmp
adc
xchg
mov
mov
lret
mov
enter
add
adc
mov
inc
aam
cmp
cltd
out
push
add
cmp
jg
loop
mov
fidivs
xchg
shlb
mov
mov
pop
add
mov
outsb
mov
push
mov
out
jnp
loop
xor
subl
icebp
pop
pop
push
jp
push
les
sbb
popa
xor
leave
push
mov
cmp
add
mov
add
xor
insb
inc
call
dec
push
push
pop
outsl
test
pop
cli
insl
add
add
mov
call
pop
xchg
push
aam
je
shld
xor
and
xchg
push
jle
or
cmpsl
fs
aaa
xor
or
int
dec
cmc
and
cld
adc
jbe
cld
inc
xchg
dec
cli
loope
sti
cs
adcl
push
sahf
movsb
inc
xchg
cmp
pop
dec
iret
data16
mov
shrl
dec
ret
sbb
cmp
add
jl
push
and
imul
pop
je
inc
jne
inc
and
cli
iret
push
mov
xchg
es
add
add
div
add
pop
adc
xor
aam
and
orl
and
adc
ss
jo
mov
xchg
push
adc
call
mov
inc
test
outsb
call
or
and
in
negb
xchg
aam
push
adcb
push
das
cmpsb
out
lret
lock
fadds
lock
loop
stos
les
fwait
and
mov
or
mov
sub
das
push
dec
test
sub
loop
push
add
add
enter
sbb
lock
ret
cmp
dec
pop
aam
pop
rolb
popa
mov
std
ja
pop
test
push
dec
pop
jne
add
push
add
in
int3
adc
push
push
xor
dec
fimuls
lahf
sahf
push
mov
je
jo
sub
jle
pop
push
jle
jne
push
inc
callw
add
and
mov
mov
sbb
sbb
cmp
inc
push
mov
xor
add
cld
add
call
push
in
and
outsb
sub
int3
scas
outsb
stos
xchg
add
adc
mov
hlt
mov
adc
push
pop
lock
loopne
dec
adc
push
subb
incl
gs
cmp
push
popf
ss
xor
inc
cmp
aam
push
mov
ljmp
ret
cmp
rcr
testb
mov
jg
ror
mov
sub
mov
fwait
adc
add
adc
pop
scas
popa
mov
lock
inc
fcmovnu
jle
push
sub
pop
int3
fs
je
push
jge
push
loop
inc
mov
add
mov
outsb
add
mov
jl
push
xor
push
xchg
lock
push
xor
decb
call
pop
fisttpll
clc
push
test
adc
je
jbe
imul
dec
call
subb
xor
rclb
adc
xor
ret
call
push
xchg
mov
aam
ds
and
push
sub
test
rclb
das
imul
testb
dec
movsb
push
test
sub
pop
test
or
inc
mov
imul
in
enter
out
xchg
pop
push
js
sub
sub
push
cmpsb
cmc
cmpsb
dec
dec
push
aam
dec
data16
hlt
mov
adcl
sbb
ljmpw
and
das
inc
adc
in
adc
jno
movsb
dec
enter
lods
mov
cld
mov
add
pop
incb
lock
mov
push
add
dec
jle
cmp
outsb
fucomi
daa
out
mov
add
fcomp
pop
add
bound
call
jne
test
xor
inc
or
ja
cmp
in
movups
outsb
ds
lcall
lea
add
add
sbb
inc
loop
in
mov
incb
es
mov
push
add
mov
data16
popf
inc
pop
cli
push
jg
paddsw
scas
xchg
test
in
mov
inc
inc
dec
stos
les
push
outsb
or
mov
inc
inc
mov
inc
sub
in
adc
push
or
dec
push
push
fldl
inc
adcl
outsb
sub
push
int3
out
test
fsin
adc
and
and
pop
and
mov
mov
xor
pop
dec
xchg
test
loopne
jb
loop
inc
arpl
lea
movb
lds
mov
outsl
movl
in
inc
add
clc
ret
sub
std
lock
push
jnp
push
insb
jmp
push
inc
inc
and
popa
std
lret
in
push
xor
insl
scas
xlat
fidivrl
icebp
rcrb
rcl
pop
and
mov
inc
xor
cld
call
sbb
loop
cmp
jp
call
xchg
jo
xchg
push
dec
push
repz
and
insl
push
fisubl
cmp
and
or
fstps
mov
inc
cld
je
bound
pop
lock
insl
shlb
imul
lds
jge
ret
lods
add
xlat
jp
call
out
incb
imul
cli
pop
call
jle
or
lret
cmc
pop
dec
pop
add
orl
mov
xchg
push
and
xor
pushf
dec
dec
cld
lret
aam
or
mov
or
xchg
lcall
jbe
xchg
or
rcll
shll
es
stos
jecxz
mov
fs
xor
lods
inc
and
push
push
and
loopne
sbbl
dec
fwait
test
mov
add
xchg
or
dec
stc
fdivrl
lds
mov
dec
add
fiaddl
pop
mov
xchg
aam
adc
add
xor
in
lea
test
push
mov
dec
xor
pop
shll
subb
and
mov
sbb
mulb
scas
ret
xor
lock
mov
fs
data16
xchg
mov
mov
inc
jmp
push
jle
xor
xchg
in
les
push
inc
or
subb
and
cld
pop
xor
sub
add
add
mov
iret
jbe
inc
fsubp
into
and
adc
mov
push
pushf
mov
mull
mov
add
flds
or
lods
orb
sahf
stos
and
mov
mov
out
divb
xchg
xor
rorb
test
cld
repnz
jmp
fcompl
push
shl
subb
and
ljmp
xorb
or
call
and
adc
testl
xor
adc
lret
les
push
out
mov
add
dec
inc
sti
mov
push
sahf
jbe
shrb
test
fdiv
pop
fcmove
inc
or
push
fs
push
js
sbb
mov
loop
push
test
push
add
mov
std
mov
mov
inc
insb
cmp
hlt
adc
lret
cltd
mov
or
and
aas
dec
pusha
pop
sbb
test
test
xor
test
mov
push
jge
sub
pop
pop
cmp
stos
push
fdivs
inc
jb
test
and
dec
cmp
pusha
mov
je
out
popf
push
scas
adc
cmp
add
mov
decb
mov
sub
xor
leave
pushf
mov
out
add
jge
jbe
add
in
inc
add
loopne
dec
out
test
mov
mov
xchg
mov
pop
or
add
loop
cmp
inc
popa
cwtl
pusha
add
fbld
ror
outsb
dec
insl
inc
mov
jp
rolb
test
dec
repz
js
sbb
push
xchg
cmp
out
mov
push
add
adc
cmp
adc
xor
xlat
icebp
dec
sbbl
test
or
and
sub
mov
rcrb
pop
cmpsl
add
aas
pop
in
sbb
das
repnz
in
mov
in
test
mov
cmp
leave
mov
mov
fsubrs
aam
enter
movsl
push
cld
mov
inc
imul
mov
add
movsb
add
lods
adc
adc
mov
sbb
and
loope
fs
xchg
add
cmp
notb
add
push
add
popa
aaa
add
or
je
or
inc
cli
outsb
jne
mov
enter
jb
fsubl
stc
fildl
mov
cmp
mov
inc
adc
push
mov
push
push
push
lret
js
ss
out
push
sahf
mov
hlt
int3
mov
add
int3
or
jg
test
push
adc
repz
gs
sarl
pop
adcb
call
sub
mov
loop
subb
pop
push
inc
or
mov
push
mov
add
dec
xchg
push
sbb
jbe
dec
sbb
in
inc
orb
and
push
sub
sub
call
das
cli
or
jo
pushf
inc
jne
xor
in
xor
inc
test
xlat
pushw
popa
clc
add
jmp
fs
adc
inc
cmpl
mov
inc
xorb
add
mov
arpl
pop
sub
sbb
vmread
mov
jb
ds
out
mov
jp
sbb
ljmp
pop
dec
mov
xchg
loop
sbb
cmpb
mov
cmpsl
sarb
or
mov
rolb
xor
push
sub
xchg
or
push
and
cmpb
call
jne
jae
sub
jb
ja
les
and
xchg
mov
rorb
and
lock
ret
adc
ret
or
outsb
push
and
and
call
mov
adc
lea
fadd
xadd
out
andl
mov
insb
shl
add
fdivl
push
ret
fdivl
insb
in
ret
jbe
inc
movl
mov
jg
add
xchg
sbbl
cmp
cmp
mov
mov
and
adc
adc
inc
rclb
jmp
cld
pop
mov
cmpsb
test
shrl
pop
push
imul
test
or
or
data16
inc
pusha
inc
xchg
dec
pop
pop
mov
clc
fisttpl
pop
sarb
push
dec
in
clc
push
test
push
xor
xchg
adc
addr16
shlb
adc
adc
repnz
push
icebp
leave
mov
adc
shr
and
and
inc
jmp
mov
fisubs
call
add
ja
inc
daa
mov
lea
in
add
dec
jbe
adc
imulb
push
push
mov
sbbb
loopne
fmulp
dec
repz
jns
stos
adcl
xor
add
bswap
fdiv
jno
and
ljmp
mov
popf
test
inc
in
xchg
int3
dec
decb
lock
sub
or
dec
ucomiss
mov
outsl
lcall
lret
push
in
clc
int
mov
out
and
inc
rcl
scas
mov
ret
pop
movzwl
enter
xor
hlt
adc
icebp
jae
loopne
scas
xor
in
push
mov
pop
xchg
sbb
mov
mov
test
sub
int3
hlt
hlt
cmp
rol
nop
xlat
lahf
mov
xchg
add
mov
pop
ret
adc
data16
push
nop
adc
jecxz
inc
sub
test
iret
xchg
cs
es
aam
pop
cmp
pop
inc
push
push
ret
std
imul
xor
les
mov
push
pusha
cld
sub
cs
adc
mov
add
sub
add
test
jo
sub
push
add
aam
movups
rorl
mov
ret
repz
lods
push
adc
leave
lea
test
push
pusha
daa
jne
int3
add
or
pop
xor
xor
loopne
test
and
ret
sub
dec
xor
mov
rclb
mov
sahf
cmpl
xchg
adc
push
dec
lea
xorb
add
inc
pop
addb
movsb
inc
jb
dec
cli
xor
ficoms
push
imul
push
roll
push
test
jl
jne
add
push
xchg
jb
dec
xor
or
shll
je
daa
inc
mov
push
lds
or
notb
sbb
adc
sbbb
mov
outsb
and
or
adc
and
cwtl
xor
inc
xor
ds
dec
rcrb
or
xchg
sbb
dec
loope
dec
imulb
shll
xor
pop
clc
inc
and
lea
insl
push
rolb
je
es
cli
lahf
int3
mov
mov
pop
jne
test
popf
mov
into
inc
xor
int3
nop
cmpsb
add
cmp
out
add
cmpsb
insl
mov
jp
jb
inc
leave
lock
adc
shll
sub
call
ret
xor
jmp
fidivs
mov
lret
inc
cmp
adc
and
mov
jge
add
mov
xor
in
sub
cli
inc
fmuls
add
clc
shrl
push
push
adc
mov
sbbl
outsb
dec
out
xchg
push
sub
or
pop
std
mulb
hlt
ds
cmp
xchg
insb
les
add
push
pop
or
push
fwait
aam
adc
rolb
pop
or
mov
outsb
jo
adc
add
inc
cs
push
mov
test
je
xor
push
pop
sbb
cmp
std
add
jle
mov
mov
lds
aam
or
loopne
sbb
sub
rcrl
xchg
scas
or
scas
aas
arpl
fiadds
mov
mov
pop
outsb
lea
xor
das
push
sbb
push
adc
stos
incl
dec
push
pop
enter
sub
cmp
add
dec
adc
mov
ds
push
push
cmp
or
xchg
pop
inc
loopne
sbb
sbb
out
pop
fmull
icebp
mov
hlt
mov
aas
mov
mov
mov
xor
fs
xor
xchg
lea
mov
mov
mov
addr16
cmp
mov
dec
push
insb
push
icebp
adc
loopne
push
fdivr
dec
and
icebp
iret
mov
mov
sub
pop
sbbl
mov
pop
inc
pop
mov
push
mov
cs
aam
test
mov
cmp
cli
add
clc
mov
lea
je
xchg
pop
push
test
mov
ret
fcompl
orb
dec
or
into
rorb
test
dec
push
mov
jo
adcb
sahf
and
or
outsl
shrl
icebp
add
pop
movb
enter
outsb
mov
cmp
inc
in
push
adc
push
aam
in
fcmovb
push
lds
fs
or
sbb
loope
cmp
mov
adc
inc
mov
or
test
ffree
dec
es
fistpl
fistl
cmpb
add
insb
into
cmp
ljmp
popf
mov
sub
push
mov
shlb
xor
or
or
xchg
mov
cwtl
rcll
addr16
cmp
cmp
mov
sbb
repnz
clc
sub
push
add
jo
nop
je
adc
les
aaa
cmpb
js
test
cli
outsb
fildl
dec
sub
push
call
dec
adc
xchg
gs
adc
xor
mov
mov
push
hlt
call
mov
cmpsb
orb
ret
dec
push
pop
xchg
ljmp
sub
daa
ret
sbb
test
call
nop
ss
xor
and
pop
cli
movsl
push
or
sbb
xor
call
pop
pop
faddl
sub
jl
orb
jbe
dec
clc
xor
xor
jl
fstl
mov
bound
pusha
mov
pop
in
or
loopne
aaa
add
sbb
jo
mov
lods
pop
adc
hlt
call
icebp
test
rclb
mov
cld
lcall
and
add
arpl
pop
sbb
pop
inc
ja
add
inc
inc
test
jbe
inc
je
addr16
adc
fistpl
jb
cmc
cmp
or
cmp
adc
pop
jbe
std
push
add
ds
jp
jmp
aam
jmp
ret
rcr
dec
jne
insb
jl
dec
pop
xor
jb
mov
push
dec
std
dec
mov
repz
inc
mov
add
pop
cmp
es
rcrb
imul
and
test
shlb
addl
ds
loopne
xchg
jmp
rcrb
testb
stos
faddl
fcomps
dec
sub
sbb
jmp
aad
pop
cwtl
sbb
mov
jno
jne
pop
pop
dec
jne
hlt
cli
sbb
xchg
adc
dec
dec
js
xor
clc
repz
jg
scas
xchg
cs
mov
notb
stos
push
mov
decb
leave
cmp
cmp
adc
sub
cmp
je
cmpsb
cwtl
xor
jmp
out
loopne
jne
fcmovne
movups
loopne
or
pop
cmc
call
adc
push
insl
cld
mov
mov
mov
pop
cmp
xor
adc
xchg
insb
out
clc
aad
sub
test
fistl
lea
inc
sti
add
idiv
mov
icebp
adcl
cmp
xor
inc
add
pop
mov
rolb
ret
mov
jge
or
call
sub
push
inc
flds
out
and
push
loope
dec
loop
push
push
fdivl
and
push
sbb
das
xchg
in
data16
jmp
sbb
mov
pop
hlt
xchg
mov
sbb
add
movsb
or
mov
and
mov
push
popa
ret
aam
mov
loop
insb
cmpsl
aas
mov
fsubp
xchg
push
sarb
cmp
ds
movl
xchg
sub
add
loopne
push
addl
pop
subb
mov
shrb
lods
out
jne
push
jno
and
test
js
orl
stc
fwait
sbb
repz
pop
leave
call
mov
out
fs
adc
or
mov
xchg
pop
arpl
shll
adc
mov
mov
scas
push
xor
mov
pop
xor
mov
mov
add
call
adc
adc
dec
cmpsb
or
xor
sub
inc
out
mov
inc
pop
mov
lock
inc
fisubrs
rcl
sbb
aam
inc
sti
or
sub
or
mov
mov
loopnew
jb
sub
push
loopne
mov
loopne
orl
popf
rolb
data16
aam
into
and
add
pusha
sti
or
mov
push
inc
push
xchg
ret
rorb
hlt
data16
loope
roll
push
mov
pop
sub
mov
test
push
sbb
xchg
dec
add
jge
inc
call
inc
lret
cmp
adc
cli
mov
jb
clc
add
shlb
dec
inc
ret
sbbb
push
and
inc
pop
rcrb
sbb
xchg
lret
inc
xor
lret
lock
push
stos
dec
mov
mov
push
add
outsl
xchg
push
adc
or
add
jecxz
sub
movsb
jo
ret
xchg
mov
mov
xchg
dec
mov
mov
pushf
xabort
push
idiv
mov
or
inc
hlt
add
lods
int3
add
xor
mov
mov
fsubrl
xor
jbe
sbb
mov
and
out
pop
cvtpi2ps
or
or
les
sbb
or
add
mov
mov
xor
shlb
arpl
inc
dec
or
xor
jne
clc
loopne
sahf
mov
and
fcompl
hlt
dec
add
jno
call
dec
les
out
insb
sbbb
sub
sub
and
shlb
clc
xchg
cmp
or
sahf
adc
call
insl
rclb
test
fimuls
push
adc
ljmp
rcll
shlb
inc
mov
rcll
sahf
pop
ret
adc
adc
xchg
and
outsl
fnsave
jmp
jecxz
daa
lods
cli
pop
jnp
dec
or
and
and
or
add
mov
es
push
push
adc
lock
or
or
cmc
nop
cmp
testl
inc
cmp
aaa
aam
test
outsb
les
ss
adc
add
and
lea
push
cmovae
hlt
dec
mov
add
mov
push
hlt
jbe
js
fsubrl
notb
test
out
pushf
or
sub
inc
xor
pusha
add
push
and
popl
dec
mov
mov
notb
jecxz
mov
int
or
sbb
push
call
fdivrs
and
dec
sub
adc
inc
ja
sub
add
outsl
inc
jb
push
pushf
outsb
mov
adc
add
leave
dec
sub
ret
outsb
add
shl
mov
cmp
gs
bound
mov
sbb
mov
lods
mov
test
out
ljmp
inc
dec
mov
sbb
test
jne
mov
sub
outsb
xor
adc
inc
cmp
call
in
xor
adc
int3
call
roll
or
mov
lock
adc
jne
jo
sbb
sub
dec
cmpsb
xor
out
mov
prefetch
or
dec
inc
or
inc
pop
adc
mov
push
clc
push
imul
or
push
lods
decb
inc
imul
call
insb
push
outsb
fnstcw
lock
faddl
push
mov
sti
lcall
outsb
add
jbe
xor
loope
pushf
mov
mov
or
inc
mov
es
adc
es
into
and
lods
mov
adc
push
jp
dec
add
cs
lret
cmp
inc
orl
in
jno
inc
sbb
adc
lret
pop
int3
adc
inc
lcall
add
jo
adc
push
or
dec
cs
fisttps
adc
imul
fdivrs
fmulp
add
mov
mov
idivb
cmpl
xchg
ja
inc
gs
push
mov
adc
js
gs
mov
das
cmp
pop
mov
add
pushl
push
ror
fisubrs
or
movsl
dec
cltd
add
push
push
cmp
mov
gs
sub
rorb
xor
dec
sub
fadd
ss
sbb
adc
dec
enter
push
cmpsb
stos
lcall
xchg
cmp
push
in
add
fmuls
sarb
cmp
test
adc
xor
dec
pushf
cmp
pop
js
jbe
cmp
ret
and
xor
rorb
outsl
push
jo
or
pop
mov
and
cmpl
cmp
dec
pop
popf
test
aam
push
mov
sahf
dec
and
das
pop
popa
insl
inc
dec
js
adc
ret
push
stos
adc
pop
lea
movsb
cs
push
mov
push
jo
subl
outsb
mov
push
call
pop
adc
mov
rorb
mov
or
or
outsl
into
out
push
jge
jge
mov
stos
out
sbb
pop
stc
out
fwait
stos
mov
mov
inc
inc
je
decb
xor
push
ret
push
xor
fmul
in
dec
inc
adc
pushl
mov
clc
mov
xchg
hlt
in
pop
pushf
ret
outsl
ds
or
leave
push
cmovae
adc
and
cwtl
dec
shlb
icebp
rcrb
or
test
mov
sahf
jp
hlt
sub
push
arpl
sub
push
jo
inc
adc
mov
bound
mov
adcb
mov
ss
js
sub
add
rol
fwait
rcrl
inc
ret
mov
es
andb
ja
test
mov
jmp
inc
adc
add
int
and
inc
xorl
sub
sbb
push
popa
insb
mov
cld
cli
mov
push
dec
out
dec
andl
sbb
adc
sub
jno
pop
fdivs
fildl
nop
test
pop
dec
popf
pop
loope
cmp
xchg
mov
inc
or
movsl
out
shll
test
int3
xchg
test
push
insl
push
pop
insb
mov
inc
xchg
push
test
sbb
jb
push
jae
sbb
cmpsb
mov
ljmp
mov
xor
rcrb
cld
int
data16
mov
lret
mulb
xor
pushaw
xor
dec
js
inc
ss
loope
scas
shrl
neg
data16
adc
in
push
test
mov
cwtl
movb
popf
xor
dec
les
cmp
pop
push
rcl
addb
jmp
mov
push
rcll
lods
lret
mov
inc
add
add
add
inc
fucomi
syscall
xor
xchg
adc
dec
push
test
sbb
lcall
int3
push
pop
insl
adc
push
cmpsb
and
push
fucomip
out
adcl
fisubrs
nop
lods
icebp
and
scas
push
outsb
hlt
mov
movl
jecxz
xchg
jne
pop
sbb
push
mov
call
xchg
jo
daa
subb
ss
das
or
or
fimuls
jbe
dec
xchg
clc
inc
push
mov
jo
out
and
push
dec
hlt
sbb
lret
xor
sbb
push
mov
and
jb
rclb
cmp
push
xor
mov
je
jnp
add
or
fdivrl
movsl
and
sbbl
pop
or
shll
mov
push
rclb
mov
ret
insb
pop
pop
lods
fstpl
mov
test
mov
or
insl
mov
cli
insl
mov
stos
outsl
mov
inc
sti
push
pop
or
add
loop
jmp
add
sar
and
hlt
adc
mov
pop
shrb
inc
xlat
or
pop
jmp
xor
test
lea
testb
stos
sbb
mov
cli
enter
pop
sbb
push
orb
mov
mov
insb
adc
call
push
enter
js
aas
addl
mulps
pop
dec
mov
or
xchg
sahf
cld
or
rorl
pushf
pop
xor
mov
mov
push
and
push
lock
xorl
pop
sbb
pop
fadds
rclb
inc
inc
jmpw
int3
data16
add
cmpb
mov
pop
leave
add
sub
int
enter
test
mov
hlt
dec
push
adcb
mov
mov
shlb
cmp
outsl
test
ss
clc
fcomi
push
cmp
shrb
shrb
test
mov
sbb
add
pop
sbb
mov
inc
xor
mov
add
mov
jne
jne
xor
xchg
xor
mov
push
and
dec
jl
add
pop
pop
cli
or
int3
add
pop
insl
cmp
mov
sub
dec
insb
mov
xchg
pop
rcl
fcomps
data16
fiaddl
jno
jb
mov
cmp
mov
mov
and
cmp
aam
pop
nop
cli
mov
or
imul
sbb
mov
je
inc
cld
mov
sbb
jb
xor
dec
adc
dec
inc
and
push
mov
test
jp
incl
insb
dec
and
lock
dec
add
fimuls
mov
cld
testb
es
adc
ret
pop
int3
clc
int3
cmp
lea
ret
int3
rcll
or
inc
ficomps
test
in
push
adc
mov
rcr
sub
loope
int3
xor
jbe
xchg
cmp
or
orb
adc
dec
lcall
mov
push
insb
clc
ja
cli
dec
rclb
xor
bound
pop
aad
sub
jge
sar
test
inc
add
adc
push
fdivl
jno
lcall
dec
fbld
hlt
inc
cmp
call
dec
xor
push
mov
push
adc
incb
imul
ja
cmp
push
dec
sub
pushf
adc
aam
inc
push
lcall
push
rcll
dec
in
insb
sbb
add
inc
pop
or
pop
mov
and
addb
mov
mov
cmp
ljmp
out
dec
xchg
sbb
cmp
jge
inc
in
xchg
movsb
jb
inc
sar
mov
pop
roll
inc
loope
and
dec
dec
sbb
cmp
pop
mov
push
jo
mov
or
jecxz
jle
adc
inc
jmp
cmp
stc
loope
xorl
stos
cmp
push
xorl
jne
mov
rolb
cmp
ja
jl,pn
sbbl
insb
push
add
imul
or
and
sub
xor
sbb
and
clc
rcr
cmp
dec
call
test
jl
sub
cmp
push
jmp
and
xor
and
add
inc
push
test
nop
rorb
mov
inc
push
in
shl
pop
add
pop
cmc
xor
push
dec
add
cmp
je
out
cmp
faddp
test
push
xchg
xchg
or
cmpl
out
out
xor
inc
sub
sbb
jecxz
xchg
mov
jg
loopne
cld
rcr
sub
jmp
or
cmp
je
mov
int3
sbb
fcmovnu
test
imul
inc
in
jmp
fiadds
add
xchg
xor
adc
push
mov
int3
dec
or
sub
incb
xor
imul
shr
ds
mov
adc
ret
fsubrl
jae
arpl
pop
movb
pop
or
xor
jo
xchg
mov
pop
lret
rclb
aaa
adc
in
fcmovb
or
int3
xor
cmp
mov
and
pop
sbb
xor
pop
and
pop
test
fisubrl
cmp
lea
add
faddl
push
add
push
sbb
add
fldt
add
add
dec
inc
sub
clc
mov
insb
or
dec
cld
ret
pop
jl
sub
clc
push
hlt
aad
inc
jne
cmpl
xchg
sahf
mov
xchg
imul
cmp
dec
xchg
xchg
inc
mov
mov
adc
jl,pt
cmp
sbb
push
mov
aam
icebp
test
mov
lock
push
adc
ror
push
xlat
aad
xor
mov
push
xchg
enter
mov
jb
and
lret
out
inc
or
test
jl
mov
cld
nop
and
popa
rorb
xor
insl
not
shr
mov
dec
inc
adc
in
mov
mov
faddl
inc
ss
adc
or
aaa
or
jb
dec
je
cmp
add
je
adc
or
and
insb
push
dec
and
je
or
dec
mov
mov
or
aam
jmp
jg
xor
fwait
addl
jo
rcr
icebp
std
rcll
push
fstpt
insb
int3
add
push
cmp
add
cmp
add
cmp
jecxz
ds
call
test
pop
inc
call
mov
push
add
or
xor
loope
adc
es
js
push
or
rolb
enter
cmp
mov
cmpsb
pop
xor
fdiv
pop
mov
enter
pop
inc
shlb
mov
sbb
jnp
mov
cmp
and
push
and
out
mov
aas
adc
popa
cmp
push
jne
push
roll
pop
xchg
mov
scas
add
fimuls
stc
jmp
jmp
or
ljmp
jmp
push
pop
sahf
repz
mov
dec
pop
pop
lret
jne
push
mov
ja
aaa
jl
test
shlb
ficoms
lcall
push
pop
sub
and
push
xchg
fs
adcb
loopne
push
inc
or
sti
clc
ds
in
mov
loopne
push
push
ret
leave
rcrl
popa
mov
movsb
fldt
xorw
adc
out
loopne
clc
xor
stos
in
out
adc
rcll
xor
movsb
cld
adc
dec
xchg
loop
adcw
rclb
decl
dec
out
push
mov
jae
add
sub
hlt
pop
sbb
push
ror
push
add
sbb
inc
xor
xchg
push
stos
sbb
je
or
jle
inc
or
rorb
sub
outsb
mov
pop
mov
enter
call
fwait
jl
inc
jae
std
ss
sbb
inc
cmpl
add
cmp
push
subl
aas
add
mov
sbb
or
je
rolb
fwait
xchg
call
jb
hlt
mov
mov
add
mov
cld
fdivs
dec
dec
stos
dec
ss
mov
sub
data16
out
nop
hlt
jno
lock
icebp
inc
cmpb
inc
inc
data16
mov
push
clts
jle
addr16
shlb
out
cli
jne
rclb
iret
pop
mov
lea
jl
stos
jp
call
dec
out
loop
cmp
mov
andl
pusha
ds
jle
mov
and
inc
mov
clc
or
scas
add
leave
call
dec
shlb
loope
mov
enter
inc
add
hlt
test
outsl
sub
in
cmc
insl
mov
cmpsb
dec
in
push
mov
push
mov
mov
icebp
or
orb
push
or
or
je
pop
xchg
lods
add
fdivrs
jg
and
jmp
cwtl
dec
xor
fdivrl
push
loope
add
xchg
xor
popa
mov
jae
iret
jb
add
test
xchg
xor
cwtl
sbb
mov
push
je
ret
insb
xchg
xor
dec
push
adc
push
sub
ljmp
push
test
sbb
cld
in
ja
mov
or
or
mov
inc
mov
sar
dec
add
inc
and
add
push
jmp
push
mov
mov
jnp
xchg
faddl
mov
push
or
mov
loop
mov
push
mov
into
call
ljmp
std
test
cmpsb
pop
fsubrs
push
add
mov
add
xchg
pusha
cld
sar
test
or
aaa
adc
xchg
xor
inc
das
dec
add
xorb
lods
push
inc
add
pusha
rorb
xor
add
mov
mov
mov
lea
loopne
subb
int3
shlb
push
bound
sub
mov
aad
call
add
push
mov
mov
add
inc
clc
test
and
rcrb
push
jae
call
lock
mov
test
cs
sbb
and
push
fcoml
sbb
cld
jge
mov
xchg
xchg
filds
pop
add
sar
push
pop
xor
xchg
and
pop
stos
sbb
xchg
jae
subb
enter
sbb
jge
ret
lea
das
dec
or
arpl
mov
sbb
cmpl
inc
pop
rclb
add
pushf
or
popa
mov
sti
mov
xor
popa
ss
inc
outsb
push
aam
mov
out
call
push
mov
nop
mov
mov
adcb
test
mov
push
mov
loope
pop
sub
push
lea
pop
mov
or
pop
nop
push
mov
push
or
cmp
and
outsl
adc
sbb
or
sub
movsb
fwait
jle
pop
bound
push
mov
and
into
pushf
mov
inc
movsb
push
mov
mov
inc
clc
test
pop
sti
les
jae
movb
test
dec
add
xor
aam
dec
les
into
bound
clc
movsb
shll
jmp
ud1
xor
jae
mov
sarb
std
jl
or
lea
mov
je
xor
mov
sbb
pop
xor
popf
sarb
mov
jae
std
xor
ds
xchg
push
cmpsb
cli
xor
dec
div
mov
adc
mov
testb
jg
lock
cld
fdivl
push
movb
mov
pop
int
cmpsb
notb
add
sbb
test
mov
sbb
mov
push
mov
out
fadds
decl
push
push
enter
push
sti
test
mov
adc
jmp
inc
ljmp
cmp
sub
pop
and
lods
inc
mov
push
or
pop
and
outsb
ja
cmp
dec
xor
or
xchg
add
mov
dec
xor
icebp
data16
addb
jo
push
jmp
scas
adc
cmp
xchg
xor
cmpsb
mov
xchg
xchg
cmp
sub
fistl
inc
in
gs
sbb
or
pop
outsl
pop
mov
cmp
inc
adc
lods
lret
add
loop
push
ret
adc
lret
call
sbb
or
in
inc
inc
jge
in
sub
incl
test
incl
mov
inc
or
add
mov
xchg
inc
lret
jg
mov
or
inc
mov
loope
or
mov
jle
lea
xor
lods
iret
add
inc
mov
les
add
adc
cmpsl
es
mov
mov
pop
mov
mov
xorl
sub
cmpsb
adc
dec
push
enter
rcl
cmp
xor
fwait
sub
adc
div
loopne
push
push
xor
clc
test
jmp
out
push
push
inc
mov
mov
call
add
jl
rolb
int3
xor
xor
push
loop
in
in
jmp
montmul
cmpsb
add
int3
dec
mov
push
mov
nop
push
push
cmp
jg
jle
sbb
xor
sub
and
xchg
sbb
rol
push
mov
ds
and
aas
add
dec
mov
and
and
mov
lcall
movsb
and
data16
test
scas
stos
test
push
add
aad
sub
push
ret
lods
scas
jbe
jno
pushf
in
xchg
xor
js
loopew
xor
jo
cmp
pop
adc
clc
rclb
lods
xor
cmp
call
jle
jg
outsb
mov
fadds
xor
pushf
mov
pusha
ljmp
push
inc
outsl
pop
add
sub
sub
movb
js
cmp
mov
xchg
hlt
push
stc
or
or
mov
push
adc
or
pop
or
ja
dec
mov
ret
push
fadd
lcall
adc
iret
adc
lcall
mov
arpl
push
out
in
jne
popf
xchg
fidivrl
pushf
in
je
fisttpl
sbb
mov
mov
imul
adc
aam
push
shlb
leave
push
cli
and
pop
add
les
mov
push
jo
pop
mov
icebp
call
jne
inc
dec
sbb
jmp
mov
and
push
mov
xchg
je
fidivl
push
mov
or
push
movsb
jle
pop
mov
and
push
dec
ret
ss
xor
sub
test
mov
call
push
std
lea
mov
into
or
add
mov
and
mov
jns
push
dec
loopne
rorb
fadds
outsl
pusha
jbe
mov
icebp
sub
fidivl
mov
push
stc
orb
mov
stos
dec
inc
inc
fdivrl
jg
jmp
int3
mov
pop
xlat
jne
cli
sub
lods
push
hlt
cmp
push
inc
fstl
push
sar
mov
in
fimull
mov
jns
scas
mov
mov
jbe
ss
add
push
adcl
inc
or
fdivrl
sbb
add
or
cmp
aam
test
and
ljmp
mov
in
rclb
popa
ret
les
xchg
cwtl
mov
mov
outsb
push
and
aam
and
mov
pop
mov
insb
or
cwtl
outsl
aaa
loopne
gs
xor
push
fstpt
call
push
mov
pop
inc
in
push
mov
mov
js
xchg
ret
sbb
in
ficoml
jmp
fs
adc
mov
pop
push
mov
inc
add
push
ja
jo
lret
icebp
inc
call
pop
push
mov
fstpl
lea
mov
add
sbb
pop
mov
inc
jle
ljmp
fmuls
mov
iret
lock
fildll
icebp
cld
adc
pushl
je
add
stos
insl
pop
mov
divps
jg
jo
es
dec
in
jne
mov
in
pop
addb
xor
mov
mov
add
rorb
shlb
mov
hlt
rolb
push
xor
data16
inc
dec
and
xor
inc
movsl
mov
stos
daa
int3
dec
popf
pushf
or
fwait
ret
jo
rcl
inc
add
jbe
cmpsb
adc
pop
jg
ret
aaa
in
mov
jmp
and
or
dec
aam
rcrb
jne
and
int3
data16
and
adc
inc
xor
push
movsb
inc
lock
nop
mov
outsb
ss
test
xchg
adcb
push
or
lcall
sarb
js
insl
fiadds
or
xor
loop
add
xor
pushf
sub
sub
inc
mov
test
enter
push
add
push
sub
cs
push
mov
ret
or
inc
sub
hlt
mov
adc
fs
mov
jb
mov
test
lret
jae
ret
mov
stos
and
js
icebp
mov
add
add
enter
shlb
outsl
call
cmp
cmpps
cli
out
int3
mov
push
add
je
test
push
mov
scas
inc
in
push
adc
add
inc
add
or
imul
dec
stos
sbb
mov
dec
rol
rolw
add
and
fdivrl
pop
push
nop
inc
mov
insl
dec
sbb
aam
shl
clc
mov
cs
shrb
sbb
mov
sbb
and
and
push
lods
mov
and
cmp
movl
inc
clc
sub
rolb
in
stos
mov
push
xchg
popa
loopne
jecxz
cmp
mov
jne
sbb
fiadds
ljmp
add
out
jp
outsl
mov
nop
push
or
push
testb
dec
loope
fisttpll
aas
loopne
xor
mov
cs
call
add
sarb
data16
int3
sbb
cld
shlb
adc
orb
adc
insb
xchg
sbb
mov
fadds
or
xor
mov
sarb
fdivl
jge
add
call
fwait
adc
mov
aaa
jmp
pop
dec
ljmp
sbb
or
ret
mul
jb
inc
je
pop
or
fisubs
add
mov
adc
jb
jp
loopne
repnz
nop
addl
cli
xor
or
rcl
adc
imul
adc
rcll
mov
int3
sub
mov
rolb
mov
adc
call
cmp
clc
ds
arpl
mov
sub
int3
or
mov
jp
and
shll
sti
mov
add
mov
pop
cs
cwtl
movsb
pop
cmp
lcall
mov
inc
mov
subl
xor
dec
rclb
dec
test
mov
or
test
or
rclb
pop
cmp
xor
fiaddl
dec
push
inc
or
loop
xchg
xchg
adc
push
and
add
movsb
cmp
cmp
sbb
pop
pop
in
xor
in
sbb
pop
daa
jne
push
loopne
clc
add
sub
jo
ds
mov
ss
and
push
dec
push
mov
into
data16
push
pop
or
fisubrl
dec
dec
jae
mov
and
das
pop
or
pcmpeqb
test
push
push
adc
ret
shll
mov
rclb
and
xor
sbb
jne
cmp
mov
les
cmp
or
cmove
push
push
lret
mov
xor
shlb
adc
ret
cmp
xchg
add
inc
in
pop
ret
xor
mov
call
clc
lret
inc
and
jmp
cmpsb
jmp
push
and
or
cmp
jbe
pop
cmp
add
ss
pop
dec
stos
xchg
insl
jbe
scas
push
outsb
pop
fstps
hlt
inc
les
dec
pop
loop
dec
mov
inc
pop
push
and
imul
jge
ret
ret
rcll
jge
pusha
jne
loopne
add
xchg
sarb
push
and
add
mov
or
aam
cmpb
ret
je
daa
pop
sub
mov
orl
pushf
push
mov
push
pop
pop
jp
clc
das
loop
loopne
mov
mov
scas
mov
cs
pusha
out
dec
std
movb
repz
lea
rorb
sbb
out
add
cmp
mov
popa
jbe
pop
mulb
add
aad
incl
minps
push
xor
or
cmp
push
popa
adc
dec
cmp
fs
movsl
and
or
pop
sbb
ret
les
mov
xchg
push
or
enter
mov
inc
cld
mov
mov
nop
testb
movsb
pop
or
aam
sbb
sti
dec
test
add
and
mov
loopne
cltd
out
jle
or
adc
mov
mov
fs
ret
clc
pop
mov
movsb
xor
xchg
cli
mov
dec
addb
insb
mov
test
jnp
movsb
in
push
insb
mov
fmuls
push
das
xchg
clc
es
sub
pop
adc
call
aad
mov
and
pop
cmpb
xlat
inc
rclb
rcll
push
mov
addb
fdivl
cld
jno
loopne
mov
push
in
psrad
rcl
mov
xchg
lea
mov
out
push
gs
jg
test
xor
ret
test
lea
dec
sbb
rcrb
in
xor
dec
aas
out
xchg
mov
insl
enter
sti
add
shlb
push
add
jbe
jb
sub
xchg
push
imul
dec
push
adc
bound
pop
mov
inc
jb
into
mov
cld
mov
loopne
push
loopne
loop
ja
sub
pusha
xlat
pop
stos
push
call
push
dec
mov
icebp
mov
jne
gs
push
leave
aad
pop
adc
xchg
in
pop
loope
jg
into
and
or
cmpsl
xor
mov
xor
out
jb
dec
inc
push
std
cmpsl
pop
mov
lea
mov
add
adc
push
jg
xchg
sarl
daa
je
lock
test
fmull
inc
mov
mov
lahf
sub
movsl
out
and
fidivl
pop
push
adc
out
repz
add
jo
and
out
xchg
dec
and
mov
inc
adc
or
test
es
cld
add
negb
movsb
or
inc
fiaddl
push
imul
mov
mov
xor
ljmp
adc
push
sub
and
push
adc
bound
outsb
fimuls
sbbl
jl
mov
imul
mov
mov
mov
sbb
int3
scas
les
cld
jb
data16
cmp
or
jnp
pop
stos
adc
cmp
add
lock
and
jge
shrb
stc
jne
sbb
sub
lret
addl
mov
andl
push
in
in
xor
inc
rcrb
xor
xchg
inc
shll
stos
mov
jae
mov
mov
jo
lods
inc
in
lret
loope
and
in
loope
fsubs
mov
xor
aaa
mov
xchg
add
xchg
into
mov
data16
clc
cwtl
xor
pop
xchg
leave
add
push
add
mov
movsb
jg
mov
add
cmp
mov
mov
mov
out
and
xchg
dec
adc
mov
jbe
fisttpl
in
loope
push
push
mov
rolb
dec
outsb
adc
hlt
aas
mov
inc
xchg
inc
ret
xchg
loopne
popa
push
sti
ret
fadds
cwtl
add
mov
or
scas
and
dec
decb
and
pop
enter
mov
fmulp
mov
jmp
jg
test
push
lock
fisubrs
mov
cld
test
push
dec
push
movsb
jmp
movsb
and
sub
fstp
lock
xor
ret
adc
je
push
sub
dec
dec
adc
adc
fwait
inc
insb
mov
pop
adc
int3
adc
lock
inc
dec
lock
push
stos
dec
daa
push
or
or
dec
std
fwait
lcall
inc
lea
xor
pop
popa
fs
cwtl
inc
pop
push
and
push
add
mov
dec
xchg
pop
sub
sysexit
mov
mov
dec
add
or
mov
popa
fildl
ss
movsb
jae
shl
pop
lock
mov
inc
push
jnp
xor
ds
enter
add
int3
and
test
cmp
jecxz
adc
rorb
clc
sbb
mov
rol
cmp
push
xor
mov
imul
mov
enter
ficomps
ljmp
out
jp
mov
ret
repnz
cld
aas
or
out
mov
mov
dec
mov
cmp
and
repnz
sub
lock
xchg
xchg
test
outsb
cmp
call
mov
in
pushf
aaa
xor
subl
popa
insb
cmp
pop
stos
add
or
mov
sub
sbb
sbb
clc
jae,pt
push
test
popf
test
push
push
and
inc
js
cli
mov
push
xchg
mov
inc
mov
cld
repnz
push
add
mov
adc
mov
inc
sbb
adc
sti
cwtl
in
loop
inc
pop
cmc
or
mov
call
lret
mov
sub
lret
push
aam
or
push
or
test
mov
cmp
sbb
bswap
jmp
fcoms
push
ds
jnp
add
mov
lahf
jbe
mov
insb
xchg
jmp
push
cmp
pop
mov
xchg
cmp
inc
and
arpl
add
add
dec
gs
xlat
outsl
jo
inc
out
or
shlb
test
sub
dec
outsb
jmp
xor
cmpsl
or
ret
ret
jne
dec
js
push
sbb
push
jns
push
xchg
loop
jecxz
call
push
pusha
aas
xor
int3
fistpl
and
adc
add
or
or
add
add
sbbl
cmp
xchg
mov
sbb
dec
test
inc
xor
xchg
inc
sbb
xor
aam
inc
aad
adc
aam
pop
enter
ss
sub
or
lea
add
mov
mov
mov
push
mov
push
loopne
sbb
mov
push
mov
pop
ds
pop
sbb
sub
test
pop
jp
addb
mov
incb
cmp
rorb
inc
out
mov
dec
add
lock
or
mov
lret
aam
shlb
mov
jnp
cmp
xor
mov
add
add
lcall
push
sbb
call
adc
push
xor
xchg
dec
and
scas
imul
cmpsb
adc
enter
add
and
dec
nop
xchg
jne
xchg
sub
push
movb
or
pop
xchg
jne
fs
pop
cmp
and
je
test
xor
or
test
clc
sub
aad
lea
push
fidivs
jl
lods
fmull
rol
mov
mov
adc
jno
xor
in
ds
das
jg
add
or
sub
test
mov
mov
xchg
addb
adcb
scas
inc
inc
push
sar
xor
jp
or
pushf
ret
adc
fisttpl
mov
nop
jle
dec
mov
fdivs
push
mov
fnsave
inc
mov
mov
aaa
xor
adcl
pop
sbb
cmpb
stos
mov
mov
and
sbb
mov
jle
lock
jne
and
sub
dec
nop
adc
push
inc
orb
pop
jbe
jmp
inc
rcl
rcrl
gs
jp
hlt
jg
icebp
orb
mov
das
testb
add
or
loope
dec
pop
fs
rcll
sub
push
inc
in
or
pop
sub
mov
adc
mov
add
pop
jmp
fmuls
and
clc
int3
pop
add
jne
pop
insb
mov
inc
neg
inc
aaa
je
rolb
add
loop
xchg
sub
jns
test
std
and
ret
adc
test
lret
fs
mov
dec
jne
cli
push
and
push
les
pop
shl
ret
test
mov
pop
gs
and
ret
and
mov
arpl
push
push
flds
sahf
cld
pushf
adc
test
and
stos
adcb
cwtl
jmp
sub
fwait
or
lea
jg
inc
xchg
fcmovb
xrelease
hlt
or
bound
mov
dec
clc
insl
sub
cld
sub
incl
clc
jne
addb
add
cmc
inc
push
int3
add
mov
outsb
sub
test
fisttps
or
loopne
sti
pushf
mov
xor
movl
inc
inc
mov
mov
fwait
push
arpl
std
cmp
outsb
fimull
call
add
sub
loopne
mov
dec
ljmp
or
push
mov
mov
test
xchg
add
push
les
lock
pop
and
inc
sub
and
fmull
pop
in
clc
inc
push
or
sub
sti
sub
and
jmp
sbb
jo
sbb
lock
push
inc
aas
add
mov
addr16
inc
je
adc
jle
ds
jmp
push
push
dec
push
daa
inc
pop
push
cmc
arpl
inc
lds
sub
mov
mov
test
mov
call
and
jne
in
ret
lods
fsubs
push
dec
adc
gs
test
jle
lea
sbb
insb
and
mov
loopne
push
je
loop
jb
add
pushf
call
outsb
imul
xchg
add
xor
xorb
xchg
out
xchg
sbb
repz
ds
jo
inc
add
adc
sbb
pop
mov
sbb
push
rorb
sub
inc
loopne
xchg
mov
imulb
mov
cld
je
incl
in
inc
lods
inc
call
subl
js
pop
movsb
sahf
push
add
push
ret
les
mov
push
imul
dec
fisubl
jecxz
into
or
or
inc
les
rorb
or
dec
adc
xor
movsb
clc
das
adc
call
cmpsl
movsl
pop
andb
mov
pop
xchg
cmpl
add
lea
jo
xor
clc
mov
movsl
dec
adc
cmp
int3
and
adc
jns
mov
or
orb
fadds
pushl
add
fcmovnbe
push
dec
add
add
lea
mov
cmc
jns
dec
nop
add
int
pushf
adcb
or
dec
push
outsb
jo
sarl
mov
pop
lcall
pop
mov
inc
jmp
xor
jbe
lds
out
jb
or
add
aam
pop
xlat
push
into
xor
cmpl
jmp
iret
mov
inc
push
cmpsb
in
push
test
pushl
outsl
cwtl
jne
mov
inc
clc
xor
or
fadd
hlt
cmp
pusha
jge
clc
xlat
cmp
andl
iret
dec
mov
or
adc
pushf
bsf
enter
or
mov
hlt
popaw
push
push
jl
je
ljmp
push
sbb
xor
sbb
dec
hlt
hlt
add
mov
push
aam
adc
sar
cmp
sbb
sbb
xor
stos
lods
adc
ds
sub
mov
mov
shr
in
int3
xor
test
adc
js,pn
call
add
sbb
xor
mov
jae
mov
nop
mov
or
adc
push
mov
test
dec
fnstcw
push
out
cmc
xor
or
pushf
and
cmpsl
sbb
dec
push
push
inc
je
or
xor
pop
or
leave
mov
into
or
cld
pop
scas
push
movl
xor
push
pop
cmp
in
xor
mov
inc
subl
lock
aas
push
dec
stos
pop
push
dec
fsub
pop
mov
aad
or
rcl
outsb
dec
cmpsl
incl
mov
add
stos
and
pop
push
inc
jne
jmp
jo
dec
xchg
sbbl
push
loope
jecxz
or
pop
push
movb
cli
loope
imul
aas
push
pop
xor
push
or
mov
inc
inc
sbb
push
jno
mov
je
xor
push
push
incl
jnp
movsl
insb
xlat
fwait
or
push
stos
test
and
sub
jns
data16
mov
mov
adc
push
adcb
and
push
enter
sbb
inc
iret
popa
negb
or
sbb
leave
cld
adc
mov
xlat
cwtl
or
and
cmpsb
cmp
add
orb
xor
push
das
sbbb
push
pop
dec
and
sbb
and
push
jne
push
jb
fdivrl
outsl
inc
sub
pcmpgtw
add
lock
call
mov
sbb
and
dec
repnz
add
mov
clc
ja
add
inc
gs
add
shrb
jne
jbe
dec
in
inc
pop
sub
int3
popf
jmp
mov
mov
outsb
jb
jo
call
repnz
cs
mov
jbe
push
movsl
jne
sbb
clc
adc
or
add
add
sbb
inc
inc
or
arpl
mov
lahf
ss
inc
scas
test
fstpt
mov
jnp
fabs
mov
insb
pusha
pop
xchg
add
daa
lock
xor
cmp
xor
or
fisttps
fisubrl
jbe
xor
xor
pop
jmp
ficompl
rcrb
call
into
test
inc
mov
mov
pop
xor
sbb
mov
adc
pushf
dec
push
insb
decl
adc
aad
xchg
cs
jp
inc
or
loop
sbb
mov
cwtl
adc
or
stos
mov
insb
rorb
push
push
push
shlb
hlt
call
jmp
mov
jl
add
mov
add
push
lret
dec
out
xchg
daa
mov
xor
mov
in
out
shr
xor
xor
cmpb
hlt
ret
jbe
dec
loope
popa
jb
sub
int
xchg
test
subb
test
mov
add
add
decl
jmp
fld1
adc
mov
mov
cmp
add
fsubrl
pop
jge
or
jne
ret
adc
cld
inc
outsb
pop
inc
sbb
add
scas
hlt
pop
dec
imul
mov
pushf
enter
je
dec
xchg
xchg
aad
add
push
lret
push
leave
inc
pop
lret
pop
and
lret
mov
cmp
push
xchg
pushl
push
and
mov
mov
movsb
pop
push
stos
call
js
enter
or
push
inc
sbb
ret
push
and
out
push
mov
adc
nop
out
loop
and
jle
dec
int3
aam
sub
sub
leave
lea
inc
mov
inc
cmpsb
scas
gs
fidivrl
mov
subl
mov
mov
je
or
sbb
xchg
loope
je
mov
jae
push
mov
rol
push
push
out
sbb
jp
sarb
clc
push
xchg
fmuls
jge
adc
push
scas
sahf
and
adc
pushf
lds
test
pop
in
sub
push
jae
xchg
sti
xor
mov
popa
insb
fmul
adc
shlb
jge
lds
lret
or
loop
sbb
popf
int3
incb
ljmp
mov
ds
call
inc
je
inc
gs
frstor
or
push
test
lea
push
mul
cmp
imul
add
add
push
sbb
push
sbb
inc
test
or
lea
cld
popf
mov
pop
test
fdivs
xchg
std
or
js
add
outsb
imul
mov
test
nop
add
dec
dec
inc
das
shrb
push
or
xor
inc
jmp
aaa
jo
mov
add
jne
int3
jbe
or
cwtl
inc
cmp
fsub
mov
or
ret
xchg
dec
into
and
adc
push
or
test
test
add
xchg
inc
xor
sar
mov
pop
ret
cld
jns
dec
sbb
sarl
add
fiaddl
inc
jge
ds
mov
addr16
mov
test
idiv
je
add
rolb
xor
mov
loop
mov
mov
xchg
mov
jle
add
incb
and
push
xchg
enter
inc
and
pusha
jo
jae
sbb
aas
add
adc
jmp
pop
xor
ljmp
adc
repnz
xor
mov
mov
icebp
or
test
cmp
inc
test
sub
repz
stc
or
nop
clc
bound
mov
cld
aas
pop
adc
jmp
je
xchg
imul
sbb
int
lahf
sub
push
sbb
lea
rolb
nop
mov
push
xchg
std
sbb
lods
inc
mov
xchg
mov
push
sub
rorl
loope
add
adc
insl
call
pop
dec
push
add
mov
mov
xchg
subl
add
add
lock
int3
data16
dec
clc
xor
cld
and
jecxz
wrmsr
stos
mov
and
and
mov
push
out
in
pop
jge
push
mov
mov
test
cltd
pop
or
push
js
xor
adc
xor
xchg
add
pop
icebp
mov
enter
add
push
mov
mov
nop
inc
mov
rorb
xchg
orl
popl
add
adc
mov
jne
cli
and
jp
in
cmp
jg
pop
cmp
adc
test
pop
cmpsb
push
inc
imul
pop
pop
mov
dec
add
bound
add
xchg
clc
int3
fwait
sub
mov
mov
mov
sbb
add
mov
outsb
out
das
jnp
push
jmp
cmc
stos
jecxz
xor
xor
xorl
pop
scas
xchg
cmp
dec
jl
jg
jbe
into
dec
cmp
adc
push
sub
or
adc
fisttpl
movsb
jne
inc
cmp
and
fs
and
add
adc
or
fsubs
xor
stos
and
pop
mov
xor
mov
popf
sarb
push
sarb
sub
mov
es
sub
push
or
mov
fwait
popa
loope
out
idivb
cmpsl
lock
ds
lea
push
ficomps
mov
cwtl
mov
jne
inc
sub
mov
imul
call
data16
jb
ja
sbb
in
push
int3
fisttps
and
aad
js
loop
enter
or
dec
mov
sub
je
gs
inc
cld
scas
push
nop
push
mov
xor
out
add
sbb
shll
rol
xor
lds
xor
mov
loopne
cmp
mov
dec
es
icebp
or
js
add
je
decl
sub
mov
xor
pop
inc
aam
adc
dec
xchg
jl
popa
or
cmc
loop
test
adc
addl
mov
push
mov
xor
push
mov
inc
and
mov
inc
in
cmpb
ja
test
push
add
je
data16
test
inc
or
rolb
int3
lods
pushf
xchg
add
jecxz
ret
and
lods
inc
sbb
dec
pop
test
xor
push
ds
rclb
mov
decl
ret
mov
subl
ja
pushw
inc
or
adc
push
push
hlt
pushf
ret
or
or
mov
inc
cli
lea
or
lea
in
ds
idiv
aas
insb
mov
push
or
insl
add
cmp
cld
stos
sbb
inc
or
add
mov
test
bound
jo
push
mov
and
pop
sbb
adc
adc
bnd
subb
mov
pop
les
adc
cmpsb
push
add
push
into
js
dec
rclb
mov
cld
and
inc
rcrb
jne
js
push
inc
loope
decb
in
sbb
outsb
xchg
xor
pop
scas
shrl
loop,pt
mov
add
push
push
std
add
xchg
and
mov
jmp
jo
inc
leave
jo
pop
mov
rolb
lret
xor
or
out
push
push
jb
mov
dec
cmp
xchg
icebp
lea
add
call
adc
cld
dec
lea
and
push
in
push
xor
jg
dec
fdiv
xor
add
cmp
fcmove
mov
stc
scas
fs
jecxz
fs
movsb
pop
mov
and
mov
adc
mov
into
cltd
sub
adc
pop
decb
test
push
addl
cld
add
inc
outsl
je
rorb
stos
add
cmp
sbb
rcrb
enterw
mov
sbb
push
xadd
cmp
inc
sub
lea
cld
inc
pop
test
testb
push
mov
mov
insb
xor
call
push
mov
inc
cld
mov
stos
or
sbb
xchg
mov
paddusb
mov
cs
sub
aam
jne
cltd
rorb
aas
and
mov
mov
int3
mov
push
lds
lea
test
push
hlt
xor
les
jg
pop
out
test
or
test
jne
push
mov
mov
std
mov
xor
int3
ret
pavgb
into
add
lret
sbb
test
fmuls
adc
push
push
mov
outsl
repnz
jmp
stos
mov
add
jbe
or
sbb
cmp
test
sbb
xchg
mov
enter
mov
mov
add
shlb
es
sar
inc
lock
push
sub
mov
push
dec
inc
push
es
push
jecxz
jecxz
adc
stc
inc
adc
rclb
sub
fs
data16
lods
adc
iret
imul
add
insb
mov
je
cmp
cmc
mov
lock
mov
mov
lock
js
sub
adc
xor
das
rorl
gs
cltd
xor
ds
mov
xorb
or
fisttpll
add
push
dec
fsubrl
test
cli
push
xchg
push
lock
mov
push
xchg
cmp
and
pop
dec
cld
or
jbe
push
test
stos
pop
lcall
fisubrl
ret
clc
test
xchg
hlt
xchg
dec
ret
enter
fstpt
cmp
call
jle
adc
sbb
rol
push
push
les
js
add
or
mov
pop
shll
push
pushf
pop
mov
cli
pop
dec
data16
mov
nop
xchg
adc
adc
icebp
dec
xchg
xor
repz
in
leave
popa
out
push
add
push
sub
mov
mov
jmp
mov
hlt
mov
or
mov
sub
and
adc
clc
push
add
fildl
call
test
and
mov
add
mov
or
ljmp
repnz
arpl
test
pop
bound
dec
pop
add
xor
fs
es
and
sarl
inc
nop
mov
shl
inc
jmp
and
fimuls
add
je
pop
lock
pslld
push
out
aaa
dec
sub
or
mov
or
ss
cld
mov
jne
test
fwait
xchg
cmp
sub
clc
and
and
sub
push
mov
roll
lcall
xchg
xlat
lcall
mov
daa
sbb
adc
lods
pop
and
int3
jmp
sbb
mov
clc
test
ds
mov
fwait
lea
seta
xor
pusha
imull
xchg
add
arpl
push
out
cmp
mov
adc
lea
loopne
adc
push
jb
lods
mov
sarb
je
test
ret
and
or
sbb
push
xor
pop
xchg
push
sub
xchg
aaa
or
lea
bound
movsl
lcall
push
loopne
nop
cmp
mov
imul
inc
in
jl
lcall
ror
inc
inc
test
aam
ffreep
mov
push
dec
sbb
int3
jbe
notb
dec
push
fiaddl
jecxz
xchg
test
push
xchg
movsb
adc
std
and
shrb
inc
push
pop
out
shll
inc
pop
clc
push
xor
xchg
movsl
ljmp
lods
cmp
shrl
push
cmpsb
arpl
push
nop
pop
sar
stos
je
cld
jne
sub
dec
mov
clc
les
pop
fcoml
cmp
mov
loop
sbb
out
out
push
ror
adc
jo
test
push
push
ret
pushf
add
lock
mov
mov
push
int
lcall
adc
test
subl
cmp
xchg
idiv
fldl
mov
mov
shrb
add
and
mov
gs
test
jae
jb
push
jbe
movsl
fstl
mov
test
inc
clc
mul
shlb
xchg
add
jae
loopne
adc
into
test
push
xor
inc
icebp
pop
in
xor
in
jb
mov
outsl
adc
xor
movsb
sti
out
adc
push
mov
and
stos
icebp
mov
out
inc
aam
cwtl
push
test
dec
sahf
les
sbb
addb
add
or
push
push
fldt
pushf
xchg
add
pushf
outsl
fisttps
adc
inc
nop
out
cli
mov
mov
adc
imul
insb
lds
lods
rolb
test
mov
mov
sub
shl
push
mov
or
pop
add
jmp
gs
loopw
push
stos
or
cmp
mov
push
rorb
mov
outsb
lds
jp
inc
xorl
lea
fmuls
ret
pop
sbb
shrl
and
dec
xchg
loop,pn
aas
loopne
fmuls
test
mov
mov
and
mov
push
loop
adc
adc
lret
leave
rcl
inc
test
orl
sbb
xchg
mov
aas
inc
jl
ret
mov
paddw
and
movsb
leave
fsubs
int3
lods
insb
sbb
clc
mov
fstps
lods
xchg
call
aad
in
and
pop
mov
push
mov
loopne
fcomps
int3
mov
in
push
call
loopne
and
test
mov
jno
sub
int
cmp
les
filds
adc
sar
sub
sub
or
pushf
dec
push
add
decl
mov
popa
fistl
test
or
inc
xor
imul
sub
push
call
mov
xchg
roll
aaa
mov
mov
nop
lock
cmpsl
and
jae
inc
in
test
push
pop
or
push
scas
aas
cmp
jecxz
dec
push
inc
jne
mov
sbb
inc
ja
arpl
xor
sub
sub
mov
lods
orb
stc
mov
jb
jle
push
test
mov
cmp
lods
lea
jge
call
in
pop
scas
xlat
stos
push
ds
mov
mov
incl
jmp
rclb
orl
sub
stc
pop
clc
adc
dec
sub
adcb
repnz
mov
clc
mov
add
cmp
in
push
nop
mov
and
add
dec
js
cld
fimull
push
dec
sbb
push
lods
gs
adc
pop
inc
ljmp
push
adc
cmp
pop
js
bound
ficompl
subl
add
xor
testl
dec
mov
rorb
add
rorb
std
inc
mov
inc
sub
xor
into
add
lods
push
xor
sub
push
sub
lock
sahf
js
push
and
clc
sbb
or
mov
sahf
sahf
push
jle
inc
les
cli
incb
jo
icebp
les
sbb
std
cmp
add
sbb
mov
push
jns
int3
in
and
insb
cmp
jmp
or
bound
adc
lds
fisubrl
je
je
push
inc
jl
pop
sbb
mov
adc
cld
push
and
jbe
stos
js
scas
cmp
clc
idivl
subl
mov
in
add
call
jmp
push
test
add
cmp
dec
cmp
add
jg
stos
jp
fcoms
arpl
xchg
push
cmp
pop
cld
push
jne
mov
fcomps
sub
les
mov
jg
pusha
cmp
inc
jge
in
dec
adc
loop
test
jp
mov
sub
cmpsb
scas
insl
inc
popf
mov
mov
pop
push
adc
pop
ret
push
ret
clc
mov
fiaddl
inc
mov
mov
xor
adc
jle
jb
jae
pop
adc
fisttps
adc
iret
jbe
icebp
lea
mov
clc
inc
jne
xor
push
test
filds
pop
xor
adc
sbbb
xor
mov
fucom
fdivrs
mov
cmp
xor
adc
adc
add
mov
mulb
jecxz
pop
scas
add
in
mov
adc
stc
retw
in
test
loopne
push
shr
and
inc
ljmp
mov
outsl
call
cld
into
jmp
fdivl
adc
cmp
cmp
test
dec
push
inc
pop
shlb
inc
pop
xor
inc
or
pop
shrl
inc
fwait
pusha
inc
ljmp
scas
inc
sbb
stos
fs
mov
mov
call
sbb
mull
lea
loopne
jp
dec
sub
sbb
rcr
ljmp
call
mov
xchg
cmc
stos
add
into
invd
adc
mov
outsb
push
dec
imul
cmp
dec
inc
fadds
test
sbb
repnz
rolb
test
in
and
mov
jo
icebp
dec
inc
sub
jne
pop
dec
pop
mov
and
out
mov
add
fisubl
loop
imul
push
xor
sqrtps
jecxz
push
bound
xchg
jae
sbb
ss
dec
add
adc
test
add
sub
add
jge
out
cmpsb
xor
call
shll
mov
fmuls
inc
test
test
sbb
mov
test
test
jle
lea
ret
push
inc
xlat
adc
push
inc
mov
dec
fisubl
xorl
shrb
inc
rclb
mov
adc
popa
or
dec
loop
outsl
nop
mov
gs
push
leave
mov
cmp
push
push
inc
add
add
stos
push
cli
daa
out
pop
add
cld
test
fadds
int3
test
sub
mov
inc
mov
imul
xor
cmp
lcall
mov
aas
test
sbb
insb
jmp
dec
loop
cmpb
dec
add
lods
lock
int3
repnz
mov
insb
push
and
sub
adc
pusha
adc
cli
inc
call
rclb
pop
adc
mov
push
mov
subb
ljmp
mov
fdivrs
cmp
sar
incb
inc
and
or
sbb
adc
pop
sub
icebp
push
mov
loop
icebp
dec
sahf
dec
leave
xor
sbb
adc
xor
dec
or
outsb
lea
fadds
loope
push
mov
mov
dec
roll
mov
cmp
call
push
adc
jmp
repnz
fsubr
add
pop
jmp
pusha
rclb
rorb
mov
adc
push
push
mov
dec
adc
mov
inc
add
scas
cmp
cmp
and
adc
pop
popf
add
lock
push
aam
mov
jecxz,pn
nop
sahf
hlt
mov
mov
inc
les
push
cmp
sub
call
adc
sbb
jbe
adc
inc
rclb
clc
push
lods
dec
loop
jb
clc
mov
or
int
xchg
push
mov
sbb
das
jo
test
or
mov
mov
jmp
fmull
clc
sbb
inc
or
xchg
nop
xor
push
add
jle
or
ret
shrb
mov
or
push
xchg
jmp
push
pop
ljmp
in
js
xor
jo
jle
dec
imul
pop
cmpb
dec
mov
shl
push
dec
ss
dec
insl
rcll
sbb
fnsave
mov
rol
xchg
pushf
int
xor
mov
or
rorb
mov
orb
iret
test
mov
push
lock
lea
clc
ds
mov
call
sbb
jg
sbb
jbe
jae
lods
cld
mov
shl
imul
arpl
movsl
cmp
mov
push
loopne
pushf
xor
insb
adc
leave
gs
fimuls
pop
call
push
test
frstor
add
adc
aas
sti
push
push
outsl
lods
mov
addl
pop
pop
insb
cmp
xlat
stos
adc
add
mov
inc
gs
shr
inc
mov
jb
call
fs
cld
lea
xchg
push
cmp
sbb
fstpt
lahf
add
jbe
or
cmpsl
mov
aas
repnz
inc
jo
in
xchg
push
out
inc
adc
mov
sub
xchg
scas
or
push
dec
les
push
inc
xchg
icebp
sbb
or
add
jmp
cmpsb
inc
loop
xchg
js
push
enter
aam
int3
or
sbb
inc
jg
xor
fs
mov
cmc
cmpl
inc
rorb
sub
add
and
not
subb
repnz
xor
pop
pushf
mov
frstor
inc
add
pop
adc
mov
pop
testb
dec
cld
dec
inc
sub
adc
jb
or
sub
cs
and
xchg
lods
lods
sub
push
adc
fisttps
xor
loopne
dec
mov
call
insl
cmc
or
push
mov
jle
out
mov
push
jge
scas
fst
les
adc
in
sahf
out
pop
push
loop
adcb
inc
push
mov
inc
jg
stos
push
inc
test
push
rorl
sbb
and
cmc
mov
test
jb,pt
dec
shlb
jmp
shl
mov
mov
and
xchg
shlb
stos
ja
cmp
mov
or
inc
lea
pop
mov
les
call
jae
and
xchg
loop
mov
movb
sub
or
mov
push
sbb
or
mov
bound
fdiv
mov
mov
je
cwtl
and
ret
scas
ljmp
sbb
out
movb
jo
jne
lods
sti
test
or
jb
dec
and
push
cmc
mov
and
cmpsb
xchg
rolb
cmpsl
cmp
les
shl
pop
add
sbb
pop
setbe
push
mov
js
jae
cmp
cmp
mov
rolb
and
jl
shrb
cmp
cmp
and
cmp
jle
xchg
fs
out
add
gs
push
pop
cmc
cmp
jle
sarb
add
or
aaa
dec
and
sbb
call
xor
rcrb
rcr
jge
sbb
cmp
out
hlt
dec
xchg
mov
dec
cmp
fwait
loopne
cmp
inc
mov
stos
xabort
adc
inc
nop
orl
jge
insl
cmp
out
not
je
mov
add
faddl
xor
fdivl
inc
int3
and
pop
push
add
mov
mov
call
xchg
adc
test
mov
loopne
mov
pusha
pusha
fwait
outsl
jb
lcall
jbe
push
mov
lods
mov
jmp
ss
gs
lea
adcb
xchg
xor
cmp
sub
mov
aam
ljmp
adc
pusha
dec
enter
mov
fdivrs
arpl
cmpsb
outsb
loop
or
push
lock
adc
add
sar
sar
aam
xor
mov
loopne
inc
inc
mov
aam
outsb
push
ret
push
jecxz
ljmp
clc
cli
test
lret
das
les
rclb
ljmp
addl
pop
test
daa
ss
ret
lods
add
xor
dec
gs
push
lret
push
out
lds
dec
call
sbb
add
movl
xor
add
and
inc
pop
aad
mov
inc
repz
mov
adc
loopne
stos
mov
mov
mov
pop
or
les
je
jp
sahf
mov
or
repnz
adc
out
push
sbb
sarl
lock
daa
or
fildl
cwtl
mov
cld
xor
or
cmp
mov
mov
dec
outsb
je
sar
pop
cmp
xor
or
mov
sub
xor
pop
loopne
les
add
xchg
gs
xor
and
xor
cmp
mov
lods
mov
outsb
xor
test
sbb
movsl
adc
push
xor
subl
inc
adc
orb
sbb
imul
insl
xor
sub
shlb
movsb
sub
repnz
inc
aas
mov
push
test
push
movb
push
inc
jmp
add
push
leave
decb
enter
call
cld
in
ja
dec
inc
fsubrs
in
mov
sbb
pop
xor
hlt
mov
stos
mov
xchg
xchg
fwait
cmp
aas
roll
adc
dec
push
fxtract
inc
sbb
cmc
add
add
jmp
add
movsb
inc
jo
es
xchg
push
shlb
mov
mov
mov
cld
out
lea
mov
adc
inc
sbb
mov
out
decl
add
sbb
imul
xor
rep
sbb
cmp
mov
push
rorb
rolb
pop
imul
icebp
pop
shrb
icebp
adc
aas
push
xor
push
inc
stos
pop
stos
dec
or
fs
sub
adc
in
stc
fmuls
xor
adc
add
nop
jbe
inc
add
ret
hlt
das
sbb
call
mov
pop
push
xorb
adc
inc
adc
mov
dec
dec
shll
dec
cmp
dec
mov
les
dec
mov
ljmp
push
aam
dec
add
rorb
cmc
loop
popa
push
in
fdivs
lods
cwtl
xor
or
jbe
fisubs
repz
ljmp
jbe
call
jmp
push
pop
decl
cmp
fsubs
push
in
inc
xchg
add
or
add
aaa
cld
dec
out
push
dec
mov
and
add
add
pop
add
imul
xchg
ljmp
cmp
xor
xor
dec
inc
shlb
and
push
sbb
dec
cmp
jmp
inc
idivl
test
add
pop
inc
pop
adc
push
inc
rclb
into
lea
mov
hlt
incl
repz
add
xchg
call
test
jne
fs
adc
push
dec
ljmp
test
sub
ljmp
das
add
add
xorb
rorb
mov
sub
add
mov
ret
popf
xchg
int3
or
das
cmp
out
test
insl
xor
dec
or
test
sahf
out
int3
in
or
stos
cld
xchg
add
inc
stos
mov
out
cmc
push
sub
js
sub
testb
xchg
add
push
and
inc
fcmovnu
add
and
lock
xchg
push
inc
jne
sub
jo
and
aam
rorb
jmp
mov
popa
mov
call
sub
cmp
clc
mov
inc
cmp
cwtd
add
adc
jmp
cmp
pop
lea
dec
cmp
pusha
and
shlb
shl
movsb
xor
cmp
push
lock
mov
or
leave
xor
xchg
sbb
sub
or
fsub
imul
mov
or
mov
pop
cmpl
add
lret
xor
test
xlat
incl
frstpm(287
cld
xor
adc
sub
stos
or
out
add
cmc
mov
add
dec
test
and
push
mov
jge
pushf
xchg
push
adc
pusha
lds
or
mov
sub
addb
mov
or
sub
cli
leave
push
mov
ds
jp
orb
mov
icebp
inc
mov
mov
iret
lret
mov
adc
cmp
orl
xchg
cmpsb
in
jmp
pop
fistl
repz
aaa
push
shr
adc
xor
or
outsl
mov
inc
cmp
roll
inc
adc
or
stc
or
mov
lcall
or
movsl
cs
push
adc
add
gs
add
lret
and
add
fists
pusha
int
lea
aaa
jl
pop
sbb
enter
popl
cld
sbb
add
push
mov
cld
mov
movsl
rolb
add
xor
nop
jge
cmp
rcr
adc
outsb
les
xchg
icebp
lret
lods
pop
mov
add
lret
mov
or
into
pop
enter
hlt
or
cld
orl
test
push
and
add
sub
in
clc
aaa
int3
sbb
repnz
jbe
repnz
mov
add
in
in
jae
pop
mov
outsb
add
add
add
xchg
dec
mov
loopne
or
ljmpw
jo
push
add
jecxz
inc
adc
fdivrp
movsb
call
ficomps
adc
and
jle
sub
imul
push
inc
lcall
fs
test
loop
cmp
sub
pop
mov
sbb
ret
je
push
push
push
mov
cmpsb
push
inc
mov
movaps
and
xchg
sbb
hlt
or
cld
enter
and
lds
adc
and
clc
jb
std
push
pushf
add
out
cli
add
shrb
push
pop
mov
sbb
mov
pusha
pop
sbb
mov
dec
and
adc
mov
movl
and
cld
pushl
inc
in
cmpsb
inc
xor
inc
adc
int3
mov
push
lock
push
mov
xchg
jge
aad
and
push
test
push
pushf
pusha
or
or
sarl
decl
pop
jb
mov
jp
adc
or
fs
jae
pop
test
sbb
and
xor
ljmp
mov
inc
aaa
adc
stos
rcrb
or
or
pop
incl
push
jmp
inc
push
jl
pusha
cmp
mov
push
enter
add
popa
cmp
in
jg
stc
sbbb
std
adc
adc
dec
dec
stc
mov
dec
mov
push
adc
mov
mov
and
ret
rcll
cmovge
je
cmp
lds
add
push
sub
add
xor
decl
inc
subl
popa
jmp
adc
jne
cli
les
xchg
fsubrl
pushf
rol
lock
stos
add
jo
mov
add
dec
sub
pop
hlt
xchg
adc
add
mulb
jle
adc
dec
mov
pop
sbb
mov
mov
test
or
xor
adc
pusha
test
inc
fmulp
jo
and
mov
mov
loop
add
sub
or
out
jbe
xchg
test
xor
cmpsl
lock
add
cwtl
push
jmp
hlt
adc
cmp
push
and
lock
cwtl
sbbl
add
es
adcb
dec
pop
and
mov
js
into
andl
sub
mov
mov
out
andb
adc
hlt
fildl
clc
jo
push
xor
pusha
mov
cmp
xor
stos
push
and
insb
push
sub
xor
jle
cmp
dec
xor
rcrb
in
aad
xor
mov
cs
and
jp
and
add
inc
pop
inc
xor
mov
test
rolb
pop
test
pop
sub
inc
test
out
cmp
scas
ret
push
pop
rorl
mov
mov
sbb
push
fisubrs
test
mov
mov
mov
push
push
shlb
mov
add
fwait
push
jle
mov
daa
hlt
add
adc
adcb
pop
sub
popf
mov
and
inc
movsb
fcoml
outsl
test
cmp
stos
jmp
cmp
mov
fwait
add
scas
mov
call
scas
cmp
ret
lcall
dec
mov
pop
cmp
mov
orb
aas
lock
int3
rcll
lods
push
and
jbe
cli
or
push
fdivrl
test
fiadds
and
addl
or
nop
sbb
dec
add
lret
inc
mov
push
inc
add
sub
div
xchg
cmp
jge
xchg
adc
mov
popf
lea
sbb
adc
cld
sub
call
jne
push
xchg
or
fs
cmp
inc
fcomps
push
and
mov
inc
sarb
push
js
xchg
lods
cmpsb
inc
sbb
add
and
sub
push
ret
pop
mov
sarb
mov
fcomps
int3
cmp
pusha
or
pop
scas
enter
bnd
add
sub
jl
imul
inc
lcall
and
fstpt
inc
testb
orl
push
push
popf
sarb
mov
scas
pop
pop
push
adc
loop
jmp
mov
mov
outsb
pop
js
push
inc
adc
sbbl
cmpsb
lret
mov
mov
mov
push
pushl
loopne
lret
outsl
jle
push
call
and
add
adc
fadds
nop
xor
jo
or
ficoms
dec
or
dec
inc
cmp
adc
add
imul
mov
dec
rorb
pop
sub
cmp
test
lret
test
jg
dec
and
push
cmp
and
pop
jb
sti
jl
dec
adc
imul
or
leave
mov
mov
pusha
push
pop
out
lcall
add
ss
mov
stos
inc
call
jmp
sbb
xchg
mov
add
aas
fs
orb
in
les
stos
mov
andl
stos
inc
repz
dec
bound
mov
sbb
xor
pop
inc
and
icebp
push
ljmp
call
push
test
fists
push
mov
or
mov
cs
mov
mov
push
add
adc
lcall
xchg
dec
fcompl
adc
mov
inc
ret
adc
or
or
pop
xor
adc
rorb
test
jmp
inc
imul
in
mov
add
xchg
test
pop
mov
adc
xchg
and
pushf
cmpsb
mov
sbb
imul
xor
adc
fdivs
sbb
js
push
fsubs
mov
test
inc
imul
sbb
movl
jbe
push
sub
xchg
popa
inc
inc
dec
mov
sbb
mov
test
or
mov
lock
push
inc
jp
pop
jge
aam
je
adc
jb
addl
cs
pop
inc
inc
push
sti
add
lock
sbb
adc
mov
or
or
pop
fwait
or
inc
adc
mov
push
inc
fcoml
out
call
jae
jne
and
enter
in
out
mov
pop
xor
aam
pusha
int
loopne
lret
je
in
insl
push
test
hlt
lret
mov
adc
aad
adcb
adc
cld
sub
inc
rol
fisttpll
xor
pusha
cld
mov
js
out
push
sub
ret
fldenv
xor
lods
mov
add
je
rcl
add
inc
add
orb
cmp
add
pop
fmuls
fwait
jl
mov
rorb
push
into
mov
hlt
sub
add
cs
mov
push
ds
add
fwait
jmp
push
shll
stos
jl
mov
adcb
cmp
test
pop
int3
incb
mov
mov
movsl
mov
sub
add
and
xchg
sbb
mov
push
push
mov
mov
insb
adc
scas
nop
push
int3
scas
rcrb
and
sti
call
addb
adcb
fisttps
inc
fcom
lcall
sbb
or
ret
adcb
inc
popl
mov
popf
mov
pop
outsb
or
mov
and
in
add
ret
sti
inc
inc
sub
xchg
icebp
pop
loopne
ret
cmp
jbe
xchg
cmp
pushl
and
outsl
aaa
idivb
pop
add
add
cmp
out
in
lock
cmp
push
pop
xchg
in
xor
xor
mov
or
mov
ret
and
ds
inc
fdivs
inc
and
xchg
push
test
xor
and
push
pop
mov
sbb
imul
das
sbb
mov
and
loope
lock
sarb
pushf
je
inc
adc
sub
mov
or
rclb
sbb
pusha
test
pop
jl
jge
add
gs
or
je
add
mov
add
push
inc
or
clc
and
loopne
mov
movsb
rolb
xorl
jno
pop
mov
sub
js
push
pop
mov
dec
push
sub
or
push
push
cmc
lea
pop
and
or
sarb
jno
add
fadds
adc
in
je
popa
xor
add
insb
lods
lds
or
insb
rorb
push
pop
push
bound
idiv
sti
dec
test
dec
dec
pop
ss
jmp
jns
gs
or
add
fisttps
stc
sbb
jg
jmp
in
cmp
in
test
cwtl
push
fwait
push
and
cmpsb
push
rcrl
mulb
cmp
out
nop
push
xchg
add
push
sar
add
mov
add
xor
fadds
pop
addb
test
scas
pop
es
jb
test
push
add
ret
xor
aaa
dec
push
jb
addb
rolb
and
jne
and
xorl
mov
mov
mov
test
sub
push
jmp
ret
jns
push
mov
add
xchg
adc
jge
lock
adc
notl
adcb
test
mov
adcl
fmul
std
and
je
jae
xchg
mov
xor
lea
cmp
xchg
pusha
sbb
and
jb
inc
stos
sub
adc
adc
sbb
and
cmp
nop
ja
incl
jp
mov
shll
fildl
call
rorb
lret
cld
inc
ret
subl
cmp
inc
sbb
scas
sub
ja
pop
imul
loop
xor
mov
inc
ja
jge
sbb
add
adc
stos
sub
bound
stos
test
or
ds
xchg
fsts
push
adc
xor
imul
jge
cmpsb
jo
and
mov
test
movsb
jae
jb
shlb
mov
cli
inc
dec
das
cmp
sub
and
jae
sub
je
ret
mov
sub
push
mov
inc
mov
xor
lea
jbe
dec
push
sub
lods
inc
aad
push
movb
call
stos
insb
dec
sbb
ljmp
or
rorl
hlt
xor
or
das
roll
fisttps
adc
mov
jp
dec
cmp
sti
inc
rolb
sar
repz
or
jge
push
sahf
aam
je
push
into
add
xor
call
loope
or
add
jb
cmp
or
mov
add
jge
cmp
lahf
lret
xchg
or
pop
js
xchg
xchg
rorb
lea
mov
xchg
xor
icebp
cmpsb
les
push
jl
mov
pop
add
mov
pop
push
not
lea
inc
or
cmp
andl
mov
push
subl
stos
jns
cld
adc
ds
incb
push
inc
sub
adc
xor
cmp
mov
jle
xor
int
xchg
inc
ljmp
mov
stos
rcl
test
adc
jle
jbe
mov
mov
lock
push
adc
loopne
mov
mov
in
mov
jne
xchg
mov
mov
lock
pop
movsb
incb
lods
or
push
testb
pop
cmpsb
call
cld
jmp
dec
pop
ljmp
inc
add
push
cmpsl
clc
cwtl
mov
cmp
rcrb
sbb
mov
push
dec
inc
sbb
stos
add
jo
pop
and
jb
mov
dec
pop
or
outsl
sub
or
dec
adc
mov
into
jne
je
and
xchg
jp
or
ret
xor
stos
mov
xchg
jmp
ret
push
or
sub
cmp
xchg
sbb
push
popa
bound
jle
movb
fisttpl
and
xchg
mov
cmp
ficoml
jmp
sub
icebp
xor
pop
roll
test
inc
mov
jp
int3
adc
lods
or
sub
rorb
or
jo
jno
pop
test
shll
loop
pusha
or
fcomip
inc
call
rol
mov
test
xor
movl
cmp
or
loope
push
adc
push
jo
push
push
cmp
insb
pop
aas
adc
lea
and
shrb
mov
jmp
push
ret
sub
adc
cmpsb
adc
or
loopne
es
pop
pop
rol
cmp
inc
jge
out
rorb
xlat
xchg
movsb
and
inc
sub
out
shlb
int3
mov
and
push
pusha
in
bnd
mov
and
inc
jo
inc
pop
inc
stc
inc
push
lea
mov
adc
nop
lea
cli
inc
and
push
sub
push
call
shr
push
add
call
xchg
sub
jle
pop
ret
push
push
push
push
or
adc
or
adc
mov
push
xor
roll
ret
test
mov
adc
xchg
ret
push
jmp
lea
rorb
ja
clc
jmp
pop
cmp
sbb
adc
mov
sbb
mov
jb
mov
sub
jl
insb
mov
sub
aam
jne
adc
test
imul
sbb
adc
cmp
mov
xor
xchg
push
movsb
push
and
and
push
add
test
movsb
adc
lea
movb
cld
clc
push
paddd
test
mov
cltd
and
test
mov
push
sbb
dec
mov
inc
push
fidivrs
and
mov
sbb
mov
mov
adc
jo
faddl
movb
add
lcall
sbb
ret
ret
mov
pop
pop
cmpl
add
movsb
fldcw
outsb
fdivrs
or
and
lock
mov
leave
imul
scas
xor
adcb
inc
fnstcw
and
ret
ret
cs
lock
pop
ss
adc
inc
mov
push
inc
test
mov
mov
push
fcoms
std
mov
pop
pusha
push
pop
js
sbb
fidivrs
in
xchg
fimull
mov
xchg
xchg
push
sub
leave
jno
inc
lock
xor
test
shlb
or
push
or
or
ds
or
mov
adc
xor
mov
ret
shr
data16
pop
mov
pop
cmpsl
js
aam
icebp
mov
xlat
jnp
cmp
adc
and
mov
in
pop
mov
xlat
subl
add
push
js
fcom
sbb
mov
leave
not
sbb
scas
xchg
cmpsb
fdivs
push
into
cmp
leave
sub
jno
mov
cwtl
push
pop
hlt
xchg
dec
loop
mov
popf
jb
jle
mov
out
stos
cs
cmp
pop
sub
cmp
mov
int3
je
sub
dec
fcmovb
add
jge
mov
scas
xor
test
sbb
jae
push
fmull
and
inc
mov
inc
lods
shll
jo
out
mov
add
jmp
add
mov
and
pusha
sub
sbb
aas
cli
jo
mov
push
movsb
flds
sar
mov
jmp
incb
lock
adc
leave
pushf
cmp
mov
xor
fimull
outsl
adcb
sub
mov
inc
mov
or
je
xchg
push
mov
rorb
and
dec
pop
movsb
inc
lock
clc
test
lcall
add
fcomps
dec
lods
sbb
out
pop
sub
push
push
add
out
cmpsb
je
sarb
and
xor
shr
dec
js
push
cltd
jb
int3
jle
dec
xchg
mov
movsb
iret
push
xlat
lret
cwtl
out
cli
inc
dec
mov
xchg
outsb
lea
and
std
je
add
xchg
ret
lcall
dec
or
push
add
test
jp
mov
xor
fstl
sbb
std
shlb
push
cmp
cmp
cli
iret
adc
sbb
fists
mov
mov
loop
inc
sub
xor
jle
jbe
push
roll
add
adc
xor
push
data16
pop
mov
call
lods
into
loope
sarb
mov
and
shll
cltd
mov
nop
fldl
fnstsw
xor
bound
push
popa
aam
mov
shlb
jae
scas
inc
jmp
inc
inc
inc
and
adc
xor
ss
dec
idivb
adcl
scas
dec
loopne
bnd
push
xchg
loopne
sub
lea
push
xor
pop
incl
dec
outsb
jge
jne
out
in
xor
push
cmp
aam
or
aam
test
cmp
gs
and
push
pop
pushf
pop
mov
mov
arpl
dec
or
xchg
clc
call
call
cmp
shlb
cmp
je
adc
or
inc
arpl
mov
clc
rclb
lock
add
cmpsb
push
dec
ret
inc
dec
sbb
ret
push
push
outsl
fidivl
mov
xchg
xchg
lea
and
hlt
mov
inc
mov
int
add
sbb
add
call
cs
push
inc
ds
rclb
sbb
mov
fcoml
shll
aad
into
and
out
lcall
test
mov
jb
adc
sbb
mov
jb
xchg
jb
xchg
sbb
lock
inc
cmp
jns
adc
inc
jbe
and
inc
out
mov
push
test
addb
sub
insl
mov
sub
and
leave
or
ret
inc
mov
aam
push
push
js
add
xchg
xchg
hlt
xchg
insl
dec
mov
test
sub
add
add
cld
dec
xor
cmp
inc
ja
mov
or
enter
outsl
push
das
inc
out
aam
mov
dec
pop
sbb
adc
jp
lods
mov
xchg
pop
mov
or
mov
xor
xchg
add
ret
cmp
loopne
and
xor
adc
das
sti
test
cmp
cltd
mov
daa
jo
aaa
xchg
lock
and
clc
dec
add
or
xchg
add
xchg
movsb
lock
lea
in
data16
mov
jne
into
pushf
pop
stos
orb
pop
mov
cmc
cmp
pop
adc
sahf
ss
fstpt
ds
push
enter
or
clc
insb
mov
jo
push
or
push
icebp
mov
mov
dec
sbb
cmp
insb
adc
mov
aam
lock
jge
rolb
or
cmpsb
pop
dec
call
rclb
jbe
adc
inc
inc
or
add
sbb
sar
xor
xor
pcmpgtw
jle
clc
aas
jl
pop
mov
out
dec
cld
mov
add
gs
test
push
inc
lret
pop
mov
push
add
mov
iret
jmp
je
mov
call
lea
push
push
xchg
push
sbb
cmp
sbbl
mov
or
negb
fistl
sbb
sbbl
sub
shl
and
xor
iret
or
scas
sub
mov
add
jg
movsb
ror
and
lcall
ljmp
jb
hlt
aam
call
mov
jne
dec
add
push
arpl
xchg
xchg
add
js
sub
add
subb
pop
mov
add
cmp
or
mov
mov
je
push
and
or
mov
outsb
dec
add
xlat
pushf
sbb
adc
cmp
add
sar
ret
mov
mov
jp
shrb
dec
mov
ret
roll
sbb
jl
call
jne
out
adc
lods
push
loop
mov
mov
rclb
loop
aas
sub
loopne
js
jge
ficomps
push
mov
mov
outsb
sbb
ss
or
adc
sarb
adc
add
fistpl
sub
cmpb
inc
ljmp
mov
push
xchg
pusha
pushf
jbe
mov
pop
push
mov
lock
cmc
dec
cmp
pop
adc
inc
aas
or
lea
add
ss
mov
fcoms
jmp
aam
sti
mov
faddl
push
dec
xchg
loope
pop
shr
test
push
nop
lock
in
scas
das
inc
insl
xor
mov
xor
xchg
jbe
testb
outsl
inc
repnz
mov
icebp
xor
push
mov
jle
push
inc
shlb
inc
cmp
movsb
sub
mov
sub
aas
pop
push
push
loop
imul
xor
pusha
push
and
mov
dec
or
mov
jnp
mov
orb
or
mov
sub
test
mov
psubsw
xor
rorl
xchg
sbb
add
or
cmp
xchg
roll
and
push
cmp
inc
rcll
in
pop
mov
jmp
adc
jb
flds
cwtl
outsb
push
inc
inc
and
sub
xor
lea
out
ds
inc
stos
ret
ja
ds
nop
sub
rcrb
mov
xor
mov
xor
add
cld
sbb
js
pop
pop
std
lret
xor
in
pop
lods
outsl
inc
mov
sub
jb
mov
mov
jle
clc
adc
dec
xchg
sbb
add
call
xor
cmpsb
sub
push
mov
sbb
adc
gs
push
ret
push
or
mov
test
hlt
test
jle
push
or
pop
ret
jae
adc
push
add
add
mov
mov
pushl
dec
or
pop
add
xor
das
mov
pushf
push
mov
ljmp
and
test
add
test
imulb
jle
push
sub
call
mov
aam
and
xor
mov
push
jo
sbb
cli
lods
dec
mov
and
fsubr
inc
inc
orl
xchg
cmp
test
idivb
mov
and
cld
add
addr16
sbb
les
mov
sbb
data16
mov
lcall
cli
decl
in
xchg
xor
jbe
outsl
inc
stos
mov
add
ret
mov
or
add
out
out
adc
xlat
mov
pop
mov
int3
pushl
sub
leave
rolb
mov
inc
cmp
sbb
sbb
adc
jecxz
cmp
jmp
fildl
jle
push
sub
push
sbb
lds
aam
pop
sahf
pop
or
outsb
mov
ds
and
shlb
mov
jo
stos
add
push
jne
jno
xor
cmp
inc
sub
xor
or
or
adc
or
cmpsl
mov
fdivs
or
lea
pushf
out
jp
adc
jg
push
jae
je
dec
lea
push
pop
dec
xor
call
addl
pop
data16
data16
mov
aam
and
int
adc
dec
loope
mov
xchg
orb
rep
std
ja
sti
push
rclb
inc
dec
dec
push
mov
push
mov
jge
mov
or
dec
jmp
pop
dec
xchg
add
pushf
add
sahf
divb
jge
es
xchg
adc
push
loope
push
sbb
js
adc
add
or
push
decb
lret
ds
jnp
aaa
mov
pop
xor
jg
mov
fwait
jne
or
mov
xor
lds
incb
call
mov
in
sub
or
outsl
int3
jne
sub
lcall
mov
ret
test
vmcall
in
push
stc
sti
add
call
lea
test
fcomps
out
sub
clc
rclb
or
aam
push
fs
out
mov
daa
add
jmp
sub
dec
mov
fisttpll
xor
cs
fcoms
jecxz
stos
push
pop
adc
mov
pusha
push
inc
aam
mov
ljmp
int3
int3
inc
jp
sbb
push
push
xchg
test
fstl
pop
fdiv
std
enter
sysenter
or
shr
pop
pop
push
cmc
jno
mov
call
mov
stos
push
mov
mov
jl
pop
jl
mov
sbb
lea
sbb
xor
inc
cld
sbb
pop
lea
dec
mov
cmpsb
xor
jg
bswap
and
int3
or
mov
fldt
adc
negl
push
shlb
pop
scas
imul
xor
aas
clc
jne
fsub
push
std
mov
imulb
aaa
rorb
adc
xor
popa
add
jp
daa
mov
pop
mov
test
pop
out
fcompl
in
call
mov
adc
pop
mov
pop
cld
setnp
jo
insb
les
fisubrs
xor
jmp
cld
clc
inc
push
mov
in
mov
std
js
inc
pushf
inc
loopne
jne
cwtl
add
icebp
xchg
and
pop
inc
jle
add
sahf
dec
cmp
push
pop
fcom
aaa
add
call
int3
pop
shl
out
push
or
ror
push
js
jns
cs
jo
es
push
jmp
inc
in
inc
cli
pop
loopne
les
inc
loop
push
pop
adc
and
fs
lea
loopnew
push
shlb
jbe
sbb
rclb
push
add
xchg
hlt
incl
jmp
ret
xchg
js,pn
sub
fists
movsl
mov
dec
ficompl
pop
add
test
push
sti
fdivrp
push
adc
cmp
mov
scas
clc
sbb
add
sub
cld
lret
out
jmp
xchg
mov
insl
push
sbb
pop
shlb
test
xchg
ret
je
dec
stc
cltd
xorb
rcll
or
or
fdivl
jecxz
xchg
mov
divb
lret
add
pop
fxch
cmp
jo
mov
mov
aaa
jl
int3
popf
add
adc
mov
loope
inc
mov
clc
ds
loopne
shrb
adc
inc
in
inc
xabort
or
testb
dec
cmc
push
repz
fnstcw
out
das
movsl
xchg
mov
hlt
lods
mov
adc
or
xlat
and
movsb
test
inc
pushf
dec
call
mov
pusha
mov
mov
add
sbb
aas
mov
add
push
add
orl
mov
sbb
std
std
mov
mov
jge
scas
in
mov
inc
enter
lock
cmp
lods
inc
mov
xorl
ja
and
push
imul
outsb
push
push
push
int3
dec
and
negb
lea
call
hlt
mov
loop
dec
pop
xor
jecxz
or
pop
loopne
mov
fidivrl
mov
add
dec
push
push
mov
cmp
sbb
cld
stos
in
pop
repnz
ret
mov
push
inc
pop
fcmovb
cli
sar
stos
mov
and
or
std
xor
sbb
cmp
cs
mov
clc
jle
add
xor
mov
inc
push
cmp
fistpll
call
add
pusha
loopne
test
insb
movsb
xchg
insb
dec
mov
aas
xor
test
and
sub
nop
out
loopne
push
clc
es
jecxz
mov
enter
push
mov
jbe
rolb
jmp
xchg
jne
into
pushl
mov
cmpxchg
std
push
test
insl
sar
add
ret
jae
push
orl
shlb
mov
test
ret
adc
clc
mov
xor
pushf
sub
add
mov
cmpl
aas
jbe
ret
fisubrl
sub
or
dec
les
es
mov
addb
clc
nop
jmp
in
loop
nop
popf
addb
sti
sbb
aam
int3
and
push
mov
inc
cmp
icebp
loop
sub
in
mov
xor
dec
mov
add
inc
lods
pop
popa
inc
roll
inc
xchg
inc
sub
jp
fmuls
enter
ljmp
xchg
ret
mov
push
xchg
fmuls
mov
dec
pop
aaa
or
push
jle
inc
inc
clc
jbe
jecxz
cmc
adc
and
shrb
into
jg
xchg
sahf
sub
mov
lods
jae
dec
xor
sbb
mov
adc
jo
cs
aam
add
addl
mov
idivb
mov
and
add
inc
pop
push
xor
test
pop
and
aam
movsb
incl
dec
lcall
cwtl
jp
adc
pop
ret
adcb
and
rolb
push
cmp
das
lock
adc
clc
dec
adc
fdivrs
mov
fld1
rorb
add
or
call
stos
pusha
mov
loopne
pushf
cmp
inc
mulb
adc
inc
rcr
adc
jbe
inc
sbb
and
add
mov
sub
imul
push
inc
xor
xchg
sti
ds
nop
test
scas
mov
pushf
mov
inc
xchg
aas
std
inc
xchg
push
call
mov
jp
loop
orl
inc
cmpsb
loopne
dec
ret
sbb
adc
dec
clc
cmp
test
rorb
je
mov
lock
jecxz
add
outsb
push
hlt
mov
movb
push
xor
mov
decl
stos
jb
divb
pop
into
hlt
mov
jp
mov
cli
push
imul
sbb
xor
out
or
subl
daa
sbb
mov
inc
add
add
mov
insb
jle
and
add
test
push
repnz
movsb
dec
cmp
push
and
xor
push
adc
inc
scas
add
pop
push
cmp
inc
fs
jnp
rcrl
pop
xor
sarl
testb
push
xchg
arpl
cld
neg
xor
pop
fsubrl
or
adc
aad
sub
rclb
in
add
movsb
push
or
out
mov
inc
ss
pop
add
fcompl
aaa
sarb
push
je
inc
clc
fcom
sub
add
incb
adc
insl
adc
xor
enter
xchg
lock
push
jmp
testb
imul
xchg
push
or
loopne
insb
rorl
push
dec
insl
mov
xchg
sarl
mov
cs
or
js
mull
ss
push
pop
sub
adcl
mov
adc
add
aas
sar
push
and
loopne
jle
nop
cld
stos
xorl
fstps
stc
call
test
call
xchg
shll
or
or
mov
fisubrs
cli
pop
call
dec
sub
xor
clc
cs
rolb
mov
icebp
sbb
das
test
sub
inc
add
fistpl
int3
decb
scas
xchg
shll
add
rclb
push
js
and
xchg
xchg
xor
mov
loop
inc
test
fs
ficompl
mov
push
adc
push
cmpl
cli
mov
jmp
lea
psllw
popa
dec
popf
rcr
rorl
les
adc
jge
popf
nop
jbe
push
jo
ljmp
es
icebp
enter
mov
in
fs
adcl
add
test
and
into
sub
rcl
adc
movsl
push
leave
add
jp
inc
jmp
mov
sub
sub
cwtl
cld
sub
push
loope
roll
loopne
idivl
xchg
test
out
push
les
sbbb
lret
add
pusha
pop
mov
adc
pop
cld
and
jmp
mov
mov
mov
sti
add
add
movsl
std
inc
push
cmpsb
pop
adc
call
inc
xor
shlb
sub
shr
add
aad
test
xor
cmpb
adc
icebp
and
pop
dec
fsubrs
sbb
lock
adc
mov
adc
dec
mov
xchg
orb
add
adc
mov
lods
subb
rol
cld
sub
sub
popf
rcrb
je
std
add
aaa
push
add
shrb
add
pushf
mov
rorl
push
push
jl
ds
das
in
mov
inc
mov
fs
pop
xor
je
imul
mov
leave
xchg
mov
adc
pop
shlb
dec
cmp
adc
inc
jb
xor
icebp
add
jge
and
push
push
xor
lods
sbb
inc
push
inc
sbb
test
mov
add
jne
mov
rcll
inc
mov
orb
fs
jge
scas
jae
inc
call
scas
xor
icebp
mov
test
cld
addl
int3
jmp
out
adc
adcb
popa
ljmp
paddusb
ret
mov
adc
adc
mov
xor
push
lods
push
cmp
and
push
sub
add
dec
mov
call
mov
or
lods
rorb
test
and
pop
prefetchnta
cld
dec
xchg
push
rorl
mov
pop
loope
mov
xchg
add
addr16
test
and
lock
js
adc
aad
icebp
cmp
adcb
scas
cmp
mov
rorl
sbb
mov
int3
clc
jne
bound
jge
xchg
add
pop
or
mov
pop
mov
add
push
out
insb
jns
adc
adc
cwtl
popf
cmp
jge
cli
sysret
dec
push
testb
jge
mov
xor
outsl
xor
fdivrl
xor
inc
nop
loop
xor
sbb
lock
cmpsl
mov
lea
inc
cli
and
xor
and
clc
sub
mov
pop
push
lock
js
xor
jne
ret
push
clc
cld
dec
mov
mov
into
adc
fsts
push
roll
rolb
dec
push
jp
lea
sbb
push
clc
cli
lea
roll
mov
cmp
lcall
gs
ret
into
fmuls
xchg
mov
pop
fs
push
push
dec
push
mov
cmp
mov
sahf
add
in
jmp
jl
shll
xor
es
mov
arpl
nop
leave
or
inc
xor
cmpsb
ja
adc
jp
int3
jl
test
add
dec
aam
dec
lcall
xorl
push
mov
ret
or
push
out
push
jno
cmpsl
cmp
jmp
jle
mov
incl
adc
pop
mov
enter
push
mov
adc
push
lea
imul
add
mov
mov
inc
shl
xor
jo
push
lods
lods
lods
mov
adc
xor
test
loop
push
and
or
add
adc
jo
sub
out
push
adc
pusha
ja
pop
push
jp
adc
mov
lock
mov
mov
push
loop
lods
adc
ja
je
fiaddl
andb
adc
dec
ret
inc
bnd
outsl
add
loop
into
or
lea
or
mov
and
push
pop
xchg
add
push
or
or
fimuls
mov
add
data16
out
js
pushf
rol
andb
pushf
enter
inc
ffree
lock
push
adc
fsubrp
inc
or
add
jmp
push
pop
enter
or
rorb
sarb
pop
xor
mov
adc
jp
js
insl
test
in
hlt
jp
sbb
movsb
bound
mov
push
mov
lea
push
or
lock
xor
and
sub
or
push
imul
into
ljmp
hlt
out
push
cmp
movsb
mov
mov
inc
test
push
dec
mov
xorl
sbb
adc
fildll
cmp
test
mov
push
or
pop
dec
xor
lret
pusha
cwtl
lods
incl
mov
xorb
clc
xor
mov
xor
outsb
xchg
cs
test
pushf
inc
xchg
inc
xorl
les
cmp
sub
or
test
outsl
mov
pop
and
in
sbb
sbb
imul
clc
pop
jne
sidtl
aad
mov
inc
jmp
std
lods
push
pop
mov
call
sbb
and
adc
stos
sub
les
pop
xchg
stos
lods
hlt
ret
xchg
add
mov
mov
push
dec
loop
insl
mov
push
fadds
push
lock
dec
or
push
jmp
and
mov
push
inc
es
adc
dec
pop
clc
pushf
push
mov
insb
loopne
push
insb
imul
cmp
mov
add
popf
cli
and
jo
in
push
push
or
loop
ds
std
xchg
pop
nop
pusha
mov
rclb
nop
add
sub
push
cmp
pop
cmp
ret
int3
xchg
mov
sbb
dec
inc
lds
xchg
adc
mov
psubb
add
clc
data16
outsb
add
add
leave
push
xor
push
addb
xchg
or
loop
into
adc
inc
ffree
sti
push
or
pushf
fcoms
mov
inc
or
int3
hlt
das
pop
das
aam
fimuls
sub
lret
shlb
test
pop
add
pop
cmp
cs
xchg
aam
push
idivb
dec
inc
add
jmp
sub
cmp
stos
mov
dec
xor
jl
pop
push
pop
sbb
lea
das
push
dec
push
pop
mov
out
jl
test
inc
xor
add
mov
pop
add
ljmp
dec
push
shlb
dec
mov
imul
mov
add
sbb
jl
xchg
decl
sub
mov
fs
cmpsl
call
xor
inc
adc
aaa
movsb
out
shlb
mov
adc
adc
mov
fdivl
icebp
add
adc
loopne
int3
dec
int
mov
popl
leave
scas
cmp
hlt
aaa
adc
inc
adc
inc
mov
jp
adc
adc
nop
and
mov
mov
clc
ret
daa
cld
xor
fmuls
cwtl
int3
stc
jl
mov
gs
adc
outsl
xor
arpl
add
jle
rolb
aam
sahf
jne
push
ljmp
jge
adc
jle
cmp
push
popa
add
ljmp
or
pop
sub
add
jne
cmp
decl
shr
scas
test
or
and
jle
inc
dec
hlt
push
push
jge
test
xor
ret
clc
loop
cmp
mov
addb
jp
adc
cmpsb
outsl
pop
imul
clc
adc
pushf
nop
xor
xor
jmp
cld
cli
pop
inc
and
push
add
ss
testl
push
cmp
lods
adc
add
inc
stos
repz
jle
pop
inc
cli
leave
icebp
mov
std
pop
adc
icebp
or
xor
lock
xor
sbb
push
rorb
sbb
xor
rclb
outsb
test
mov
mov
outsb
or
insb
mov
mov
mov
test
inc
les
jbe
test
je
gs
adc
push
es
push
test
or
dec
pushl
ss
loop
clc
add
iret
jge
mov
sbb
mov
or
adc
dec
cli
or
xor
add
lock
fimuls
add
mov
cmpsb
cs
je
pop
pop
and
mov
push
imul
jle
das
sbbb
add
jge
xchg
sarb
loope
xlat
push
imul
xor
dec
das
xchg
shr
jg
movsb
bound
in
sbb
inc
bswap
push
push
mov
mov
add
movq
pop
ret
rorb
rdtsc
add
add
dec
add
clc
add
js
adc
outsl
mov
sub
add
add
sbb
es
or
dec
jmp
test
test
cli
aaa
mov
pop
dec
add
sub
mov
xchg
inc
nop
adc
arpl
scas
das
hlt
pop
test
push
or
out
adcl
adc
mov
jle
and
pop
rolb
nop
add
mov
sar
inc
pop
jg
flds
mov
and
insb
ret
cmpsl
decb
std
add
dec
push
data16
jmp
push
test
mov
xor
sar
lcall
dec
mov
lea
jbe
and
add
xor
sbb
add
add
adc
enter
add
mov
dec
jne
rclb
adc
push
jle
stc
pusha
adc
inc
push
mov
cmp
int
xchg
addb
xor
xor
push
cmp
or
mov
mov
cmc
pushf
cs
rolb
inc
adc
jmp
mov
popf
std
fsubs
dec
out
jo
fstpl
xchg
xchg
push
pop
out
add
aaa
dec
inc
nop
lcall
outsl
adcb
jne
cmc
insl
std
test
mov
sbb
sub
dec
out
and
fcmovnu
test
mov
pushf
and
or
outsl
sbbb
cmp
ljmp
pop
mov
call
add
pop
pop
fdivs
cmp
lock
or
fcmove
in
mov
adc
inc
dec
mov
les
adc
push
std
mov
inc
jne
inc
pop
mov
mov
xor
cmp
clc
xchg
or
mov
cmp
jle
in
xor
mov
push
aam
or
lock
decl
xchg
sbb
push
bound
ret
dec
sbb
js
adc
or
and
sbb
inc
bound
adc
add
gs
int3
call
push
inc
sbb
dec
and
inc
add
sub
fisubs
enter
add
push
or
rolb
mov
stc
add
test
or
ljmp
int3
mov
pop
mov
out
pop
jg
int3
or
jl
or
dec
mov
mov
je
jb
push
pop
jmp
mov
js
je
push
in
call
sbb
mov
lea
sbb
cmp
cs
xchg
xor
rolb
int3
dec
dec
jne
xor
push
mov
rclb
les
push
orb
subl
decl
mov
jne
lea
and
movsl
mov
fimull
and
pop
add
test
dec
addr16
add
sbb
mov
inc
lea
adc
mov
cmc
pusha
adc
or
shll
cmp
call
jb
test
daa
call
stos
es
cmp
mov
shlb
add
inc
jne
sbb
je
adc
shlb
and
sbbl
mov
xchg
or
hlt
sub
stos
push
xor
rol
xchg
addb
pop
mov
mov
mov
je
stos
xor
push
ja
xorb
sub
pop
aas
xchg
cmp
add
or
cmp
push
cli
out
stos
mov
xor
lock
pop
fwait
add
jne
push
lcall
std
lea
mov
push
push
imulb
enter
or
push
xor
cmp
lcall
dec
test
jno
stos
test
fsubl
inc
loopne
fs
dec
inc
cmpl
xchg
inc
push
inc
ss
push
daa
add
out
dec
fsts
dec
push
mov
clc
cmpsb
push
addb
int3
push
push
mov
push
ljmp
xchg
dec
pop
pop
jmp
lea
sub
or
daa
shrl
jge
mov
inc
cld
jp
cmp
xlat
lock
fadds
ret
xor
xchg
hlt
xor
das
cmp
mov
push
movsl
sbbl
jb
and
ret
mov
ficoms
sbb
out
es
idivb
aam
mov
jge
mov
inc
or
xor
ja
xchg
repnz
sti
adc
sub
and
in
loopne
dec
lock
pop
movsb
mov
ret
push
mov
mov
movq
loopne
sbb
add
fcoms
inc
push
jb
lcall
rol
fldenv
pusha
fbstp
jl
add
xor
movb
push
jae
pop
and
add
adc
or
and
sbb
je
sahf
ss
ret
mov
xchg
xchg
adc
lcall
sbb
push
add
je
jl
or
in
les
mov
lea
out
sar
sub
out
adcb
int3
mov
cmpsb
push
das
adc
stos
mov
jmp
test
jbe
adc
clc
mov
add
ljmp
jo
mov
add
aas
jbe
add
fadd
shlb
push
and
mov
fisttpl
aam
jb
sbb
mov
or
mov
jmp
cmp
dec
xor
ljmp
xor
outsl
nop
je
push
rolb
or
clc
sub
enter
mov
xor
in
arpl
mov
adc
psubb
rclb
test
adc
and
mov
inc
jnp
mov
push
std
out
sar
data16
mov
jge
mov
cli
mov
fisubrl
std
popf
sub
and
adc
or
adcl
mov
push
push
lock
pop
aas
xchg
jb
jge
js
les
cmpsl
push
push
inc
lods
loop
std
push
rcll
mov
cmp
es
adc
sbb
inc
mov
add
mov
enter
daa
sbb
dec
stos
push
out
fsubrl
pusha
std
xor
enter
mov
mov
sti
adc
call
inc
mov
stos
jo
loopne
push
orb
pop
bound
sub
mov
inc
test
jl
nop
les
test
andb
or
dec
in
cmp
or
cmp
mov
or
xchg
ljmp
jg
pop
hlt
adc
mov
mov
inc
outsl
cmpb
xor
rcl
adc
adc
mov
and
add
mov
adcb
pop
popa
adc
rcr
dec
xor
adc
push
push
pushf
add
rolb
je,pt
dec
mov
or
mov
push
pop
xchg
add
cld
sbb
jmp
int
test
arpl
inc
in
jo
mov
push
orl
dec
push
jl
pop
outsb
ds
fists
call
mov
push
or
push
sbb
cs
or
push
push
fnstsw
icebp
push
subl
scas
fs
push
and
call
rol
je
movsl
dec
dec
and
js
sub
test
testb
leave
iret
add
mov
xor
sar
jae
data16
inc
push
or
incl
and
mov
mov
lea
lcall
push
jb
jg
mov
call
jmp
push
pushf
xorl
mov
pop
rcll
fmull
les
lods
inc
add
xchg
xor
int3
push
xor
pop
mov
sbb
les
xor
aas
pop
out
pop
push
scas
movsl
mov
pushl
rorb
push
pop
cld
outsl
push
mov
shl
cmc
orl
and
scas
popa
imul
adc
ljmp
xor
out
ror
leave
push
into
xchg
dec
xchg
inc
pop
mov
shl
jne
test
shr
leave
pusha
sbb
jmp
inc
push
int3
fnsave
mov
mov
push
dec
and
data16
mov
nop
mov
mulb
clc
lahf
sbb
int3
push
cmp
fwait
cmc
pop
js
in
add
lea
adcb
int3
call
mov
decb
js
call
push
pop
sub
add
sbb
sbb
pop
push
sub
or
les
mov
clc
dec
jbe
add
mov
push
dec
pop
call
adc
dec
cld
push
add
aam
xor
pop
andl
mov
push
aaa
adc
lcall
subb
movsl
decb
add
loopne
leave
inc
insb
xor
cmp
scas
mov
push
stos
dec
daa
push
in
add
lret
jle
add
inc
adc
and
pushf
push
cld
adc
inc
inc
adc
dec
pop
jge,pt
jo
xchg
insb
jne
sti
push
mov
popa
or
pop
incb
icebp
mov
and
or
fistl
jo
pop
mov
adc
insl
xor
test
cwtl
les
xor
and
sbbb
in
dec
and
cli
neg
loope
test
or
loopne
jo
addr16
ss
fidivrl
dec
or
push
pop
add
jg
clc
push
data16
je
inc
cmp
jbe
ret
add
cs
pushf
shlb
push
mov
xchg
cmp
movsl
sbb
push
jb
sub
sar
inc
xor
mov
ja
mulb
mov
aas
and
xchg
scas
xor
nop
dec
mov
xor
push
push
mov
mov
loopne
ret
push
mov
shl
adc
mov
movsb
pop
or
dec
xor
shrb
dec
mov
fimuls
js
jno
add
cld
sbb
cmovle
mov
xchg
fwait
push
lret
and
mov
mov
add
mov
int3
bound
addl
loop
adc
cmp
add
das
js
insb
xchg
inc
test
mov
in
inc
lock
adc
ja
and
xor
scas
cmpsb
pop
pop
cmpl
pop
push
jne
call
mov
je
cmp
repnz
inc
push
mov
imul
outsl
insl
inc
push
enter
addr16
and
imul
bound
imul
in
pop
dec
jb
popa
outsb
imul
jb
roll
mov
outsl
imul
lahf
sub
arpl
xchg
insl
popa
fmul
ljmp
dec
sbb
jns
adc
or
cmp
add
add
push
add
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
inc
push
add
cmpsb
add
mov
and
or
imul
das
and
or
xor
push
inc
rorl
add
dec
jne
lods
aaa
pushl
jns
gs
outsl
push
imul
gs
in
outsl
xor
inc
jb
outsl
sbb
insl
jo
inc
jb
mov
sti
dec
popa
insl
gs
and
jge
in
outsl
mov
push
imul
data16
insl
dec
outsl
fs
mov
or
push
je
dec
jo
outsb
outsw
inc
idiv
xchg
cmpsl
or
add
addr16
jo
outsb
dec
gs
js
sbb
push
push
push
cwtl
jne
pop
inc
jb
popa
scas
inc
fcomi
mov
jae
sbb
jb
pop
or
jns
into
cmp
aas
ss
and
xchg
imul
pop
je
insl
inc
inc
push
and
pop
sbb
dec
outsb
in
imul
inc
or
inc
inc
inc
push
xor
inc
dec
inc
sbbb
outsl
call
mov
mov
sbb
inc
jae
mov
pop
xor
push
inc
inc
sti
gs
push
in
insb
inc
lea
xor
xchg
xor
outsb
cmp
inc
pop
mov
add
sub
imul
in
imul
orb
dec
clc
scas
cmp
fs
gs
gs
pop
push
jecxz
xor
mov
xchg
jge
test
arpl
mov
push
mov
popa
fs
jae
imul
mov
xor
adc
and
adc
pusha
cmp
popf
rcr
fs
shlb
sbb
in
sbb
stos
je
adc
popa
jp
add
pop
outsb
imul
cmpsb
jnp
mov
insl
xor
lods
call
push
mov
add
insl
insl
jbe
sbb
lods
mov
je
jo
dec
fmuls
push
or
fisubrl
jle
inc
fwait
and
or
movsb
adc
pop
pop
adc
insb
je
imul
dec
fs
or
mov
xor
jo
inc
dec
lods
outsb
addr16
arpl
fists
push
xor
push
lods
out
push
ja
imul
inc
jno
cmp
push
ds
adc
sub
scas
enter
jmp
jb
and
sbb
mov
aam
lock
add
mov
jg
orb
or
sub
daa
sbb
dec
fwait
jne
inc
pop
add
push
add
mov
sti
mov
dec
add
insl
imul
mov
add
cmp
add
and
push
bound
and
clc
sarl
jb,pn
push
popa
es
sub
mov
or
inc
out
mov
pusha
push
or
mov
push
cmp
loopne
mov
out
movsb
add
and
out
jbe
test
sbb
sub
incl
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
