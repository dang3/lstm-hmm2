add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
push
dec
pop
mov
cli
arpl
subl
add
or
pop
add
add
add
add
xlat
add
dec
add
add
mov
push
add
add
xor
add
add
out
jae
fiaddl
adc
aaa
add
add
add
add
push
add
add
push
add
add
std
pop
jae
sub
dec
add
add
xor
pop
add
add
add
add
push
add
test
jae
scas
add
add
add
sbb
add
test
jae
xchg
out
add
add
int3
add
push
add
pop
add
add
add
insb
add
js
imul
testl
jae
jmp
add
add
test
jae
or
jl
sub
jae
sbb
add
test
jae
or
inc
add
add
and
add
add
add
testl
jae
inc
add
push
add
jae
and
pop
add
jae
add
add
add
cmp
jb
cmp
sub
jae
xchg
mov
add
add
jmp
add
and
add
add
mov
mov
jae
test
lock
add
popf
add
add
dec
add
add
add
add
sub
xor
dec
add
add
insl
add
add
add
add
call
add
jae
jae
add
add
dec
add
add
adc
xchg
mov
dec
add
xlat
add
add
add
add
jae
xchg
add
push
add
add
add
int3
add
inc
add
add
add
add
sub
popf
add
add
add
add
add
add
add
das
add
add
das
add
push
add
flds
cwtl
add
add
pop
add
sub
roll
add
add
add
inc
add
hlt
add
icebp
add
cmp
js
test
push
add
add
fiaddl
add
add
add
popa
add
add
add
test
lock
jae
or
mov
add
dec
add
add
mov
add
add
add
jg
dec
add
add
add
add
jl
out
jl
cmpsl
add
mov
cmp
cmp
jae
adc
push
add
dec
add
add
add
add
add
dec
add
add
add
add
add
add
pop
pop
add
dec
add
add
add
add
add
add
add
add
add
add
add
push
add
xchg
add
add
add
add
add
add
testl
outsb
add
add
add
add
add
add
in
add
pusha
add
add
imul
cmp
hlt
add
add
add
testl
cwtl
add
add
add
add
add
push
add
xchg
add
dec
add
push
push
add
jae
aaa
add
add
add
add
add
ljmp
add
add
push
add
dec
add
arpl
roll
pop
add
add
add
add
add
add
add
adc
test
dec
add
push
add
add
add
xchg
add
add
pop
add
xor
dec
add
mov
or
dec
lds
or
scas
rcr
mov
or
sbb
mov
push
icebp
mov
jmp
adc
xchg
aas
stos
pusha
dec
fidivrs
jle
jmp
sti
repnz
mov
pop
pop
out
xor
pop
lea
ljmp
mov
int3
outsl
cmpsb
and
repz
inc
cli
movsb
adc
imul
xchg
mov
sbb
aaa
notl
or
cmc
mov
dec
cli
out
stos
dec
jmp
into
arpl
ja
jl
pop
in
leave
in
in
ja
sub
in
mov
jg
test
lods
mov
add
xlat
add
aas
pop
enter
sub
mov
mov
push
movsl
sub
fs
dec
xlat
mov
sbb
xchg
scas
rcrb
fadds
gs
push
fiaddl
daa
xor
sbb
insl
mov
cmp
and
cmp
decl
dec
push
cs
pop
pusha
mov
cmp
mov
xor
xchg
xchg
outsb
fs
mov
push
add
pusha
es
sub
fadd
lret
dec
cmp
mov
insl
daa
push
icebp
jae
shl
aaa
daa
cmpsl
out
pushf
into
cs
adc
ficompl
sbb
and
test
mov
sbb
sbb
outsl
cmc
jl
divl
cmc
mov
mov
fxam
jnp
test
mov
and
and
mov
vpmaxub
add
xor
je
orb
cltd
test
sub
jle
lret
sahf
pop
cli
cmp
mov
jne
mov
hlt
inc
lods
stos
lahf
push
pop
jp
xchg
addr16
sbb
adc
mov
pop
pop
iret
dec
ljmp
and
mov
jg
ret
pop
inc
cmpsb
xor
in
xchg
addl
loopne
jg
mov
sub
in
mov
inc
loope
scas
rcl
das
or
rclb
pop
add
js
repnz
adc
lahf
add
rcll
ret
xor
mov
or
xchg
sub
xor
xchg
xor
lret
fisubs
mov
xor
imul
cwtl
xor
loope
outsl
dec
mov
out
xor
test
dec
and
mov
lock
lds
ds
pop
leave
pop
mov
xor
out
ss
shlb
shrb
xchg
ror
adc
ret
xchg
mov
adc
in
pop
xchg
xchg
cwtl
rcrl
shll
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
gs
jne
inc
pop
push
pop
sub
push
or
sbb
xor
lds
mov
test
xchg
gs
jne
inc
pop
push
pop
and
push
adc
cmpsl
lds
mov
test
xchg
gs
inc
andnps
and
dec
adc
test
mov
cld
test
jnp
push
inc
jb
pusha
sub
sahf
test
insl
fsubrp
iret
xchg
rolb
sub
mov
mov
pop
xor
mov
cmp
sub
xchg
mov
shll
les
lcall
pop
jo
out
iret
fs
sbb
loopne
aad
push
js
push
ds
push
xlat
xchg
andb
fadds
ja
ja
and
pop
and
sub
cmc
lret
mov
jge
push
xlat
ss
fadd
call
adc
das
in
std
pop
dec
outsl
pop
ds
cmc
xor
inc
pop
enter
out
stos
lea
std
mov
pop
mov
push
out
inc
aad
shll
push
pop
and
push
adc
mov
movsl
out
mov
test
xchg
movb
push
push
add
bound
pop
push
push
xchg
and
xchg
nop
loop
xchg
hlt
in
mov
add
fs
inc
ja
sub
push
jne
ret
xchg
ret
aad
push
xchg
out
mov
mov
aaa
jne
add
inc
pusha
inc
xor
inc
in
cmc
cmpsl
lds
mov
test
xchg
gs
jne
inc
pop
push
pop
and
push
adc
cmpsl
lds
mov
test
xchg
gs
adc
fcoms
or
cmp
stos
out
dec
and
mov
inc
mov
jp
xchg
mov
or
mov
and
cmp
lret
lods
jp
inc
sub
push
xchg
es
adc
das
pop
fwait
pop
mov
or
in
stos
test
mov
gs
cmpsb
jle
mov
inc
jnp
inc
and
cmp
imul
lret
or
dec
xchg
rcrl
pop
int
jmp
lods
std
mov
push
sub
cmp
aam
mov
movsb
pop
and
mov
mov
inc
div
cwtl
mov
out
pop
aas
popf
xchg
aam
fdivs
dec
push
je
or
jne
cli
dec
test
mov
les
loop
mov
sub
aaa
repnz
xor
mov
or
adc
xchg
ja
xor
cltd
xor
cmpsb
pop
mov
cmp
xor
xchg
jae
gs
cmp
lahf
xchg
xor
jp
pop
push
lods
xchg
das
dec
hlt
xchg
jp
cmp
pop
fsts
xor
adc
jnp
jl
jns
cmpl
in
push
sub
adc
stos
fsubrl
inc
cmp
or
hlt
lcall
lret
or
inc
loopne
or
inc
xor
enter
push
lea
xor
pop
dec
mov
bound
sbb
nop
jge
push
cmp
xor
jg
aaa
inc
int
lea
jnp
push
iret
cmp
lods
pop
repz
js
insl
sub
loop
add
mov
or
mov
xchg
jle
popf
fists
mov
popa
jb
js
xlat
in
jmp
cld
jbe
xchg
in
push
sbb
mov
sbb
sbb
sbb
andl
xor
xchg
imul
dec
cmc
in
ror
loope
xor
dec
mov
push
addr16
xchg
and
push
or
jmp
mov
mov
rcrl
push
movsb
xchg
pop
mov
xor
scas
sarl
inc
dec
add
filds
lods
xchg
pushl
cltd
stos
daa
push
jp
xchg
shlb
mov
add
arpl
sub
popf
pop
fwait
mov
orl
push
out
aaa
notl
mov
dec
mov
add
and
xor
test
icebp
movsb
mov
sub
dec
mov
xlat
xor
rclb
lret
aam
cwtl
add
pop
pushf
aas
ss
lds
cwtl
adc
insl
push
sub
rolb
rcrb
ljmp
out
pop
leave
mov
inc
mov
mov
pop
push
pop
or
pop
in
pop
xlat
and
pop
sub
adc
push
call
cmp
dec
jecxz
lret
aaa
or
test
jge
out
loop
xor
and
test
in
fildll
and
inc
cmp
bound
inc
xor
negb
add
cltd
fcmovne
lahf
into
pop
ds
sbb
mov
aam
daa
icebp
ret
sti
mov
pop
jne
in
js
stos
add
fwait
cld
icebp
ret
in
jno
inc
loopne
cmp
shll
pop
lds
test
adc
mov
fldenv
adc
out
call
lret
sbb
mov
push
xchg
mov
lcall
arpl
lds
and
xor
aad
jl
cltd
insb
sbb
lods
cmp
dec
push
mov
jecxz
ljmp
enter
mov
sub
xchg
aas
xchg
leave
js
lds
movsl
mov
pop
paddq
pop
mov
inc
ret
adc
sbb
pop
xchg
adc
je
and
adc
out
lea
sub
pusha
ret
call
or
pop
pop
ljmp
stos
loopne
push
scas
ljmp
jle
into
mov
mov
dec
lahf
imul
pop
out
pop
mov
cmpsl
adc
sub
pop
iret
fbld
add
ja
cmp
sahf
and
in
sub
pop
outsl
adc
repnz
push
push
sbb
lods
or
or
or
in
int3
adc
mov
repz
pop
mov
and
out
push
inc
andb
pop
rorl
jp
mov
dec
dec
negl
shll
daa
rolb
mov
and
dec
adc
test
idivl
cmp
pop
hlt
mov
rorl
or
daa
dec
mov
test
pop
in
pop
cmp
sub
pop
mov
loop
test
ljmp
xchg
add
idivb
adc
dec
push
dec
ja
repnz
mov
add
mov
and
int
leave
fnsave
shrl
mov
sub
mov
loope
ja
adc
mov
into
mov
xchg
inc
outsb
mov
sub
test
mov
inc
cmp
in
cmp
xchg
cmc
pop
and
icebp
mov
jb
popf
sbb
mov
jmp
push
addr16
push
dec
hlt
jg
xlat
subb
and
and
repnz
arpl
fidivl
mov
test
imul
test
adc
ret
inc
push
xchg
imul
movsb
mov
stos
mov
xor
repz
add
cmp
in
jecxz
cmp
add
mov
push
adc
or
pop
jl
outsb
xor
or
inc
lret
push
repnz
dec
sub
test
dec
ret
jmp
cli
sahf
scas
js
inc
iret
sub
add
sarb
add
jp
sti
ret
xchg
jne
jle
fcomip
fimull
or
add
cmpsb
add
mov
jg
mov
dec
inc
test
mov
mov
inc
ficoml
imul
xchg
scas
sub
repnz
sbbb
jo
sbb
mov
subb
imul
jne
bswap
add
xor
vpmaxub
daa
stc
sub
xlat
xchg
aad
pop
pop
pop
push
pop
sbb
addb
mov
cmc
enter
adc
dec
mov
outsl
pushf
pop
mov
fisubs
rcrl
movsb
insb
arpl
xor
sub
mov
lret
int
out
in
sub
jecxz
jmp
cmpsl
mov
stc
sbb
xchg
clc
hlt
or
cmpsb
push
popf
xor
push
cmpb
push
shrb
movsb
jo
mov
test
rclb
mov
call
rcll
jns
out
mov
dec
in
sub
aam
out
pop
xchg
xor
xlat
imul
xchg
jle
add
stos
pop
loopne
ja
jmp
xlat
fisubl
ds
jl
out
je
cltd
sbb
xor
mov
shrl
or
pop
sub
outsl
add
fiaddl
aas
jp
shrb
inc
sub
add
sub
pop
jmp
fdiv
sub
fisubrl
jmp
add
arpl
xchg
xchg
jle
push
mov
add
adc
mov
leave
outsl
mov
fimull
push
inc
jno
es
inc
jecxz
or
jmp
mov
insl
cmp
pop
fisubs
dec
jae
ret
inc
nop
out
stc
pop
sbb
gs
sub
out
les
cmpsb
es
pop
movsl
mov
outsb
and
xchg
movsl
add
test
xchg
loop
fisubs
adc
scas
mov
dec
adc
and
pop
scas
pop
push
cmpsl
mov
jg
out
clc
sub
arpl
sub
jp
mov
mov
incb
out
jb
mov
cmp
int3
test
sub
xchg
das
xor
enter
mov
pop
or
inc
es
mov
shl
cmp
xlat
jno
cltd
jne
fstpt
xchg
pop
int
push
pop
dec
mov
cmpsb
out
pop
mov
jge
adc
xor
dec
sub
dec
and
pop
inc
adc
lods
dec
mov
ret
inc
lcall
lock
sub
ret
xchg
out
clc
add
jnp
jge
mov
xchg
adc
mov
nop
imul
dec
fwait
ss
and
sbb
or
pop
push
shrl
mov
out
in
cmp
aas
cltd
jmp
rorb
dec
pop
inc
pop
xor
movsb
ror
mov
pop
cmp
int3
push
or
popf
mul
into
mov
fdivl
sbb
push
test
pop
xchg
ljmp
xchg
mov
and
add
adc
mov
jnp
mov
enter
stos
jge
jne
and
sbb
sahf
arpl
inc
mov
imul
jg
jne
or
cmc
mov
imul
mov
pop
add
mov
rclb
adc
mov
movsb
add
les
pop
inc
mov
jns
jno
idivl
aaa
call
mov
push
lds
cmc
aas
hlt
or
mov
dec
fs
cs
dec
inc
inc
arpl
sbb
repnz
jno
fwait
aad
repz
pop
loopne
cmp
mov
push
aas
and
bound
push
loope
add
dec
int3
pop
adc
dec
rcr
fs
sahf
jbe
neg
hlt
hlt
rorl
push
xchg
clc
xchg
stc
mov
adc
push
sbb
sbb
mov
pop
lds
adc
push
sbb
pusha
aas
mov
addb
negl
stos
mov
xor
loopne
jno
scas
out
sbb
mov
cmpsl
lahf
add
daa
xchg
fwait
lahf
push
push
call
imul
xchg
mov
inc
scas
jae
adc
sbb
dec
arpl
add
lods
sub
pop
mov
js
outsb
ret
add
dec
xchg
jne
lds
popf
add
lods
cwtl
pop
xchg
stos
mov
mov
les
sbb
popf
sbb
jae
xor
out
in
int
arpl
mov
jp
inc
xchg
call
sbb
push
stc
fadds
outsb
cmp
aas
cmp
and
outsl
mov
fcomp
push
push
jnp
hlt
mov
mov
arpl
mov
ja
leave
xlat
and
jg
xchg
into
add
push
jae
jecxz
xor
xchg
pop
xchg
inc
scas
andl
clc
in
ret
sub
and
cmp
cmp
inc
xor
xchg
icebp
cmp
repz
xorl
sub
loop
call
test
mov
rorb
test
enter
lahf
dec
ss
je
call
aas
sub
ja
xor
in
in
or
sbb
subl
int
lcall
mov
adc
es
pop
js
into
adc
cmp
pusha
es
aaa
cmc
mov
and
xor
ror
mov
xchg
orb
out
sub
mov
add
fsts
jp
add
sub
xchg
fdivl
pop
ds
xlat
xchg
push
add
scas
inc
sub
xor
push
xorb
lods
sbbl
jmp
xchg
out
std
sbb
lret
mov
dec
movsl
sbb
and
jge
nop
sub
pop
inc
inc
cmp
lea
cmp
xchg
adc
inc
andb
jp
adc
dec
cmc
addb
fstl
lahf
insb
pop
or
dec
mov
add
lret
ja
test
mov
test
mov
cmpsl
and
mov
xlat
movsb
js
test
lcall
or
push
xchg
mov
repz
push
fwait
mov
lahf
mov
rclb
fistps
xchg
movsb
pushf
loop
dec
adc
adc
fildll
cmp
mov
imul
mov
pop
sub
int
flds
and
fiaddl
outsl
imulb
sub
sub
mov
mov
mov
mov
mov
into
push
sub
push
in
imul
cwtl
jmp
jo
fdivrs
xchg
and
mov
mov
mov
mov
adc
pop
insb
sbb
mov
mov
cmp
fcompl
mov
or
insl
dec
add
sbb
imul
cli
mov
adc
xor
adcl
jb
in
mov
leave
mov
pop
xchg
and
pushf
jge
ret
inc
mov
mov
icebp
shl
das
adc
jbe
in
push
pushf
popf
push
insb
inc
imul
push
in
loop
lock
lods
in
mov
mov
and
dec
push
pop
add
jnp
loop
or
mov
notl
jbe
jg
xchg
lret
std
or
and
cmp
inc
pop
scas
idivl
pop
loop
sbb
pop
and
xchg
or
fwait
inc
es
sti
pop
repnz
loope
sub
inc
and
add
and
or
add
and
fisttpl
and
fdivrp
or
xchg
icebp
fimuls
sti
pop
in
cmp
out
addl
sti
js
jae
mov
or
mov
sub
or
sbb
push
jg
xlat
pop
and
add
sbb
sbb
push
mov
imul
mov
mov
mov
addr16
bswap
push
mov
or
das
mov
sbb
mov
mov
pushf
push
adc
ljmp
mov
add
pop
addr16
cmp
mov
and
fcmovb
std
inc
incb
sbbb
daa
pop
call
orl
mov
mov
mov
add
adc
adc
dec
jle
stc
sbb
add
pop
es
mov
pop
sbb
xlat
cmp
movl
cmpsl
fldt
or
hlt
imul
sub
shr
js
notl
inc
sbb
pop
adc
js
data16
mov
pushf
cmp
pop
lods
jne
inc
fldcw
mov
in
lret
mov
mov
push
xchg
cmp
adc
xorb
dec
inc
xchg
lock
jmp
add
xchg
pop
mov
jb
addb
mov
pop
jbe
cmpb
jmp
mov
and
and
mov
xor
imul
jl
xor
and
add
js
fwait
mov
and
adc
pop
sbb
ja
nop
push
xchg
lret
jecxz
cmp
cmp
cli
add
inc
inc
mov
test
mov
das
cs
or
sub
cmpsb
stos
int3
cwtl
and
icebp
and
mov
cmp
cli
ljmp
nop
fnsetpm(287
mov
cmp
out
or
jbe
hlt
sbb
iret
push
lret
inc
xor
xchg
std
xchg
sahf
ret
mov
mov
dec
dec
loope
int
in
cmp
js
mov
dec
fsubl
bound
shl
outsl
ret
lea
or
lea
xchg
mov
jnp
and
cmp
cmc
lods
push
sub
push
in
add
and
testb
or
mov
sbb
mov
push
fcompl
mov
ja
and
jns
or
stos
pop
cwtl
sub
scas
jno
sub
insl
jnp
sarl
mov
add
mov
cld
xchg
mov
mov
mov
sarl
ds
cli
aas
and
lcall
or
jp
gs
add
xchg
out
mov
xchg
stc
test
cltd
sbb
sub
mov
cmp
test
sbb
mov
jmp
js
lahf
outsl
mov
mov
push
ret
cmpl
mov
add
std
or
inc
xchg
jge
and
sub
cwtl
mov
cmpsl
imul
cmp
movsl
mov
test
hlt
pop
cmp
cmp
lods
mov
ja
out
sbb
lea
pop
dec
clc
hlt
lock
mov
sbb
test
mov
ljmp
xchg
push
inc
aam
push
pushf
sub
sub
xor
mov
out
insl
aam
in
rclb
lea
push
push
lods
shll
mov
and
in
mov
aad
sbb
mov
add
add
inc
insb
mov
lret
mov
fiaddl
out
xor
rclb
jle
imul
scas
bound
adc
xlat
add
or
pop
fcmovnu
xchg
mov
das
cmpsb
cmp
cli
mov
insb
xor
cmp
hlt
nop
push
out
pop
adc
lock
aas
jno
or
adc
cltd
out
addr16
and
pop
in
sbb
cs
iret
push
cmp
data16
mov
pop
xchg
shlb
data16
ja
and
sti
leave
dec
adc
fidivrl
rclb
inc
rorl
dec
sbb
shrb
or
stos
jb
push
rcll
movsb
fcompl
pop
adc
das
jno
inc
push
mov
fisubl
subl
shrl
push
dec
inc
push
mov
jl
mov
sbb
jecxz
lods
mov
dec
pop
mov
gs
jno
adc
mov
insl
push
sub
xchg
dec
xchg
dec
outsl
daa
aam
add
push
adc
and
pushf
imul
dec
cmp
add
gs
lods
mov
xor
insl
aaa
rcr
cmpsb
insb
mov
aad
add
mov
pop
out
movsl
call
or
popf
in
inc
sub
or
and
enterw
xlat
bound
mov
jne
sbb
cmp
subl
cli
in
shrb
fdivs
sete
fldcw
jg
fsubp
inc
adc
ljmp
lods
dec
add
and
pop
and
jmp
lods
shlb
mov
nop
push
out
test
fcmovbe
ss
fcomp
mov
sbb
inc
mul
jne
flds
cmpsb
cmp
shr
jns
push
push
xchg
popa
push
or
ds
icebp
cmp
mov
and
mov
je
mov
lahf
cmc
lods
mov
push
mov
jb
add
push
mov
cwtl
popl
cmp
mov
mov
push
fidivs
data16
scas
xchg
shlb
dec
cmp
add
jbe
xchg
push
loopne
push
adc
roll
repnz
cld
adc
addr16
mov
or
add
scas
jmp
pop
rorl
and
inc
push
rol
fidivs
subl
mov
mov
xchg
sbb
cmp
mulb
cmp
or
shrl
cmpsb
add
fnsave
shlb
push
lahf
dec
stos
lock
cltd
popa
iret
push
lock
jne
fbld
jp
mov
enter
xchg
repnz
jb
jmp
andl
fists
dec
lods
fcompp
sbb
rorb
mov
fs
adc
subb
push
mov
insl
inc
add
fnstsw
jg
push
mov
xchg
push
mov
lea
pop
movsl
pop
push
test
call
jge
jnp
gs
sbb
lock
call
int3
out
inc
add
dec
push
out
lds
out
bound
and
pop
outsl
hlt
inc
sbb
pop
pop
test
inc
je
xchg
xor
hlt
int
ljmp
xchg
jl
adc
add
lock
js
inc
push
xor
mov
or
mov
add
out
push
loop
loop
sub
xchg
cmc
dec
mov
mov
and
out
or
inc
cmpsb
rclb
ret
stos
sub
sahf
mov
cmpsl
data16
pop
fnsave
jae
xlat
push
sub
stos
mov
inc
shll
js
dec
fwait
js
and
lret
ret
daa
lahf
into
mov
sub
inc
push
push
jno
xchg
mov
dec
pop
je
cli
dec
add
xor
xor
push
mov
shll
insb
jp
xchg
cmp
or
mov
and
or
cmp
insb
rcrb
scas
lcall
loop
sub
push
mov
js
xchg
icebp
add
test
mov
outsb
adc
leave
mov
cld
and
mov
mov
mov
fimuls
add
insl
or
jns
adc
sbbb
inc
int3
out
mov
mov
mov
hlt
push
mov
cwtl
rorb
inc
push
popf
in
xor
popf
jmp
ja
mov
ljmp
mov
mov
adc
dec
push
mov
mov
xchg
or
popa
enter
and
fwait
adc
push
mov
pop
or
xor
out
sti
pop
and
jmp
rorl
daa
jp
push
pop
and
push
adc
cmpsl
lds
mov
test
xchg
gs
jne
inc
pop
push
pop
and
push
adc
cmpsl
lds
mov
test
xchg
gs
jne
inc
pop
push
pop
and
push
adc
cmpsl
lds
mov
test
xchg
ret
xor
inc
adc
and
push
xchg
xchg
mov
or
sarb
cwtl
jge
insl
mov
stos
outsb
mov
jge
push
lahf
or
cmp
dec
mov
push
jp
mov
pop
stos
outsb
mov
push
ljmp
ficomps
cmp
dec
loop
sahf
push
jp
mov
pop
stos
outsb
mov
push
ljmp
std
pop
pushf
adc
and
cmp
and
adc
ret
cmp
enter
ficompl
popa
movsl
add
loop
imul
add
aaa
sti
loopne
pop
fwait
loope
or
cld
mov
mov
push
imul
push
bound
js
push
lret
sahf
xchg
fstl
or
push
scas
ljmp
push
iret
or
sub
lods
lret
inc
xchg
rorb
or
cmpsl
push
push
mov
xor
movsb
js
jne
out
push
sarb
repz
rcll
sbb
out
cmp
mov
fstpl
mov
mov
xor
sbb
adc
fbstp
rclb
jg
jbe
pop
int
scas
adc
stos
outsb
mov
push
ljmp
fisubrs
out
cmp
dec
mov
push
jp
int3
dec
repz
iret
outsb
fistpll
imul
dec
mov
fisttps
push
mov
int
sti
xlat
lock
call
jle
bound
pop
outsl
test
cmpsl
imul
lahf
sbb
jp
jecxz
push
ret
sbb
sbb
and
push
ljmp
fisubrs
out
cmp
dec
mov
push
jp
mov
pop
stos
outsb
mov
push
ljmp
fisubrs
out
cmp
dec
mov
push
jp
mov
adc
inc
adc
fcoms
das
cli
lds
lea
pusha
lcall
inc
das
mov
nop
ds
adc
xor
dec
adc
mov
pop
dec
addr16
insb
ss
leave
lahf
xchg
ret
into
pop
test
ja
popf
lcall
mov
pop
fmull
or
ret
std
dec
push
std
stos
in
dec
lods
bound
push
xchg
mov
pop
inc
jg
adc
int
pop
mov
es
addl
mov
pop
push
cmp
sbb
int
or
mov
mov
in
aad
push
mov
dec
dec
insb
push
fadds
mov
dec
repnz
push
push
rcll
inc
cli
std
int3
xor
cmpsl
negb
jnp
mov
sbb
aaa
out
xchg
pushf
outsl
leave
scas
shll
mov
and
mov
pusha
inc
ss
pop
popa
fcomi
test
xor
mov
mov
sub
lds
push
dec
ss
xlat
mov
imul
sbb
and
imul
imul
sbb
dec
arpl
dec
dec
pop
xchg
jmp
xor
mov
inc
inc
mov
leave
aam
inc
out
pusha
cmp
sti
sahf
lret
sbb
pop
stc
add
xor
sti
adc
das
cmp
movsb
bnd
roll
dec
loope
sbb
addr16
cmp
mov
jmp
ss
cmpb
lods
mov
lods
xchg
stos
leave
vmovups
or
rcrl
mov
inc
mov
push
int3
clc
mov
pop
inc
cli
and
jo
sub
mov
dec
jg
xlat
mov
das
xchg
outsb
push
jb
pop
les
movsl
mov
add
xchg
mov
movsl
sbb
push
mov
sub
pop
sub
ret
mov
out
je
pop
push
sbb
mov
mov
cmpsb
lds
inc
push
lcall
out
ret
push
sti
push
out
in
pushf
out
sbb
imul
lods
cmp
ret
imul
ja
lods
pop
pop
and
int3
sub
xor
hlt
xor
mov
fs
push
pop
sahf
jmp
rdpmc
adc
sbb
jnp
fwait
adc
inc
bound
insb
movsb
vpor
fistl
jp
sub
dec
and
mov
cld
repnz
jge
cli
xor
adc
test
mov
sbb
cmp
rcrl
cmp
adc
pop
out
inc
insb
imul
jecxz
sbb
push
rcrb
mov
mov
cmp
mov
or
inc
shlb
repnz
in
pop
aam
sbb
lsl
mov
adc
ret
loopne
clc
insb
mov
push
cld
bound
scas
test
cmp
mov
xor
xchg
xor
push
dec
cmpsl
nop
sub
jp
cmp
mov
add
scas
sbbl
subb
xor
jg
and
fwait
into
mov
in
mov
cmp
pop
cmpl
dec
mov
leave
popf
cmp
inc
jo
cli
lret
xchg
or
jb
jmp
shll
jge
nop
scas
pop
push
and
jne
xchg
jmp
pop
fistpll
cld
ja
stos
inc
js
mov
push
add
movsb
js
xchg
sub
rolb
and
lcall
outsl
popf
jbe
outsl
gs
sbb
xchg
cwtl
shlb
aam
sub
and
dec
xorb
jne
mov
mov
push
jno
test
lret
push
adc
jle
loop
dec
shrb
iret
pop
jg
mov
out
sbb
xor
cltd
out
test
sub
and
ljmp
lahf
fisubrl
lcall
jmp
pusha
adc
sarb
lds
pop
out
xchg
mov
gs
es
xchg
jecxz
std
or
adc
les
mov
xor
cli
and
pushf
dec
fisubl
and
adc
xchg
xor
lods
sbb
xchg
pushf
or
movsb
jns
movsl
aad
or
outsl
and
mov
lds
and
outsl
outsl
xor
data16
pop
push
or
out
xlat
jns
sbb
sub
sbb
add
cmovle
mov
dec
xrelease
push
cs
jne
popf
pop
fcoms
test
lea
lret
mov
dec
jns
int
loop
push
mov
ds
lock
xchg
dec
mov
and
sub
sti
dec
and
cld
jle
cs
int3
call
mov
xor
aas
leave
dec
stos
enter
and
addr16
lods
push
jle
out
xchg
push
sbb
jmp
adc
pop
jecxz
and
jnp
add
vmread
sbb
repz
imul
cmpsb
and
repnz
into
bound
jno
push
or
mov
in
lods
jge
cmp
loope
addr16
mov
mov
or
in
arpl
out
mov
loop
cmp
adc
jae
inc
jbe
rcll
mov
jb
adc
in
dec
inc
inc
lods
jns
cltd
mov
jb
push
leave
or
mov
out
jb
pop
pop
negl
loope
int3
stos
addr16
mov
cs
nop
push
sub
stos
and
popa
insb
ds
sbb
xchg
pop
in
ret
cltd
sub
jg
or
ret
ret
aad
push
inc
cmpl
cmp
add
ljmp
popa
dec
inc
rcl
ss
mov
jg
in
mov
and
outsl
inc
pop
ss
std
or
push
jo
imul
xor
sub
mov
shrb
cmpsl
dec
add
cmp
and
roll
pop
pop
stos
jl
arpl
dec
mov
push
fdivl
ss
lods
sbb
pop
ret
push
push
and
inc
and
leave
jl
fldenv
aaa
shl
fbstp
sub
es
mov
sub
cltd
add
cmp
pop
scas
jp
shrl
mov
stos
sarl
cmp
xchg
shlb
mov
mov
push
in
gs
sub
adc
scas
out
push
cmp
shlb
push
insl
pop
out
in
into
push
mov
stc
adc
clc
push
das
ffreep
xchg
cmp
push
shrl
push
insl
pop
push
push
jae
ret
mov
outsl
xchg
aas
repnz
fs
or
and
loop
push
adc
ds
mov
out
out
pusha
add
xchg
testb
lds
sub
in
pop
jecxz
jle
cs
test
loopne
cmc
lahf
cwtl
pop
movsl
test
pop
sub
dec
cmp
outsb
xor
jecxz
add
or
repz
xor
push
mov
and
movsb
das
imul
hlt
pop
xchg
outsb
cs
xchg
ljmp
jge
jl
inc
pop
add
ja
addl
or
inc
loop
fs
xchg
pop
aad
xlat
cmp
sub
insl
jmp
pop
and
xor
imul
popf
pop
pop
int3
imul
popa
inc
pop
lods
cmp
int
in
mov
ret
sbb
mov
xchg
sbb
jp
movsl
movsb
xlat
fadds
arpl
mov
ss
icebp
cli
xchg
sbb
cmp
mov
gs
jecxz
push
loop
mov
xchg
test
mov
outsl
cltd
push
dec
ds
mov
inc
es
jle
ror
jecxz
jp
aam
or
mov
lret
mov
cli
fs
nop
xor
icebp
rcrl
mov
sub
sub
out
loopne
push
add
testb
jmp
fdivrs
fldl
pop
cltd
pop
jne
cs
jno
in
cmp
inc
cmpsl
rdpmc
push
fnstsw
rol
cmc
add
lahf
cmp
loop
outsl
and
push
xchg
dec
das
jnp
pop
sarl
lods
jl
clc
fldl
cwtl
mov
clc
cmp
push
test
jecxz
sub
push
push
fisubrl
xor
xor
imul
nop
jg
cmpsb
je
gs
movsb
mov
fdivs
lods
xor
inc
mov
dec
ljmp
mov
mov
cwtl
mov
sub
push
cltd
lret
ficompl
arpl
fcompl
gs
pop
mov
lcall
subb
ror
mov
dec
clc
jb
fldt
ret
loopne
mov
mov
setnp
icebp
dec
mov
xchg
notl
pop
int
scas
test
sub
andb
aam
rcll
sti
push
lods
mov
sbb
es
adc
xor
push
jge
adc
push
arpl
push
cmp
mov
mov
js
mov
jno
mov
xor
push
cmp
hlt
add
loopne
test
xor
lret
addb
inc
mov
fsub
out
lret
cmp
mov
es
das
push
mov
mov
jbe
imul
ficoms
popa
stos
movsl
shl
rorl
imul
jno
test
or
adc
xchg
daa
icebp
pusha
pop
std
lea
add
cli
mov
lock
mov
lret
repz
add
call
xchg
xchg
sar
cltd
mov
out
test
cmp
dec
mov
addl
insb
pop
js
imul
push
xchg
leave
push
cmpsl
call
or
push
add
adc
and
rclb
dec
rcr
jb
pop
jo
mov
jle
js
je
and
out
dec
flds
lods
loopne
sub
and
fisubl
push
push
mov
stos
inc
sub
sub
out
divl
and
push
cwtl
cmp
outsl
lods
mov
xchg
mov
jnp
pop
iret
outsb
mov
and
fistps
cs
cmp
mov
decl
inc
into
imul
xor
push
mov
pop
ja
scas
das
xor
sti
std
iret
xchg
scas
sbb
scas
iret
and
std
push
pop
lock
add
push
or
mov
add
push
sub
call
dec
jns
push
lea
pop
pop
mov
gs
push
adc
outsl
int
pop
xor
cltd
cltd
and
inc
lea
testb
mov
pop
mov
rcrl
mov
jae
xchg
pop
out
sbb
xchg
cld
push
push
sti
cmp
mov
pop
push
test
jmp
repz
js
in
add
and
jecxz
cmpsb
inc
jb
lret
je
lock
xchg
or
shll
jns
sbb
pop
pop
fisttpll
hlt
mov
sbb
adc
cltd
repnz
pushf
sbb
mov
fwait
insb
and
and
cmp
stos
sbb
dec
cmp
adc
inc
repz
imul
imul
or
inc
sbb
add
dec
xor
jmp
rorl
data16
sbb
adc
cmp
mov
data16
sub
iret
pop
cli
adc
and
sbb
div
cmp
aas
mov
sbb
repnz
idiv
or
jne
jns
mov
lea
ret
sahf
or
cmp
sub
and
lcall
inc
pop
cmpl
jl
cwtl
test
mov
fdivrs
nop
push
repz
inc
gs
cmp
idiv
push
mov
orl
cmpsl
and
stc
pushl
push
or
movsb
xlat
fstpt
mov
and
dec
loope
sbb
and
pusha
push
and
cmpsl
jns
mov
and
decl
cmp
icebp
push
mov
mov
or
faddp
cltd
sub
loopne
fldcw
push
das
and
push
mov
data16
xchg
push
adcl
loope
sbb
jp
dec
pop
repnz
xor
xchg
cmp
mov
leave
test
sub
mov
js
mov
mov
cmp
sub
outsl
xor
pop
in
sti
lock
pop
lods
push
shll
add
mov
pushf
jg
fildl
push
xor
and
mov
inc
mov
cmp
jnp
sahf
sub
lret
fildll
scas
into
mull
rcl
inc
mov
cld
andb
and
clc
jo
jl
incl
mov
or
mov
cmp
stos
xor
cwtl
add
xchg
cld
je
lods
dec
lods
add
mov
mov
mov
cs
jmp
js
dec
mov
adc
xlat
shrl
test
mul
and
add
adc
or
inc
shlb
cmp
push
lret
mov
push
clc
addb
pop
adc
ja
mov
aam
out
push
gs
inc
jge
mov
push
cltd
mov
ret
in
imul
push
arpl
fildll
out
faddl
outsb
adc
pop
lock
add
fcoms
cmpsb
add
nop
mov
subps
jmp
and
jnp
icebp
mov
repz
push
pop
vpaddsb
ja
xlat
sbb
xchg
les
add
insl
repz
mov
pop
or
inc
xchg
outsb
xchg
xchg
cmp
arpl
jg
sbb
dec
fldcw
xlat
loopne
inc
add
mov
dec
mov
pop
push
dec
sbbl
adc
cmp
cwtl
mov
repnz
in
aas
mov
in
mov
mov
or
comiss
iret
in
jle
mov
test
xchg
inc
bound
in
cwtl
cmp
dec
outsb
ja
cmp
push
or
jno
je
addr16
cli
push
adc
scas
rcr
jbe
inc
icebp
cmc
mov
mov
ret
imull
rcll
jne,pn
jno
fwait
and
xchg
rcrb
mov
sbb
movsb
push
cmp
or
aam
out
stos
cmp
xrelease
in
adc
je
push
test
bound
arpl
fwait
mov
call
xor
arpl
aam
add
cmp
add
mov
dec
mov
pop
test
sbb
int
shll
or
sarb
repz
imul
pop
sub
add
mov
cmp
xor
adc
pop
mov
es
mov
mov
mov
inc
ss
cmp
idivl
fsubl
in
in
inc
sbb
fs
or
xchg
pop
xchg
adc
stos
adc
inc
cmp
mov
stos
out
int3
sti
or
fwait
add
or
cmpsb
ljmp
xor
cmp
dec
mov
mov
sbb
repnz
and
inc
cwtl
outsb
pop
sbb
idivb
xchg
cmp
xor
std
cmpsl
test
popa
mov
outsl
popf
int3
or
cmpsl
jecxz
xlat
inc
cmp
scas
push
mov
bound
mov
mull
pop
callw
imul
mov
push
push
es
jle
mov
dec
scas
enter
call
jnp
xor
push
sub
aaa
adc
inc
inc
dec
mov
ja
sbb
int3
lods
jnp
jge
push
fmuls
cmpsb
cmp
clc
mov
sub
pop
and
sbb
mov
mov
mov
pop
test
cltd
ror
je
jbe
adc
mov
xchg
aaa
xchg
mov
int
sub
btr
fldcw
dec
adc
outsl
scas
int
push
dec
es
push
pop
outsl
jg
sbb
cs
test
cmc
sub
inc
adcl
fwait
pushf
movsl
mov
je
scas
adc
xchg
cltd
cltd
lock
cmpsb
jae
inc
in
push
loop
xlat
out
mov
out
dec
fucomp
nop
sbb
pop
mov
xor
mov
cli
fsubrl
fldl
cmpsl
fldenv
loop
insl
arpl
add
daa
loop
mov
jg
js
jmp
cwtl
push
mov
inc
in
fnstcw
jge
in
movsl
push
pop
cltd
mov
es
inc
sbb
cmovae
mov
iret
inc
repnz
jmp
out
lcall
push
mov
inc
pop
pop
cmp
mov
cs
arpl
out
xor
add
in
ja
adc
and
popf
inc
shl
mov
jne
out
call
out
and
sub
inc
mov
xchg
ss
xchg
sbb
push
shrl
xchg
mov
cltd
cmp
mov
and
arpl
mov
in
shll
adc
out
insb
pop
loope
ficompl
jecxz
push
lods
mov
sub
cmp
movsl
and
sbb
push
mov
xchg
loope
pop
leave
xlat
mov
loop
jg
mov
sub
int
cmpsb
mov
ret
outsb
or
sbb
dec
mov
sub
pop
xor
int
insl
inc
sarl
cmp
push
mov
out
mov
xchg
sbbl
clc
push
xchg
sub
and
cmp
add
sub
imul
or
fimuls
stos
cwtl
lods
dec
lahf
mov
aas
fidivl
popa
add
adc
push
sub
jge
mov
test
and
xor
data16
inc
hlt
fsubrl
jg
bound
push
loope
movsb
and
mov
xchg
insl
fcmovnb
pop
test
inc
es
les
out
pop
mov
dec
pop
test
cmpsl
mov
pushf
mov
insl
repz
js
test
fists
scas
ficoms
lea
les
gs
jl,pn
test
push
push
push
xor
lock
jmp
out
push
and
mov
mov
in
shrl
lahf
pop
movsl
shrl
adc
inc
push
lret
ss
cld
rolb
repz
sbb
lods
and
imul
dec
repnz
xchg
imul
sub
xchg
cmp
jmp
stos
int3
stc
inc
insl
jg
sbb
test
mov
iret
lock
or
fldcw
out
mov
mov
mov
les
xchg
mov
jno
daa
xlat
in
push
jg
or
test
mov
cld
dec
push
cli
cmpsb
push
adc
add
popf
pop
push
dec
pop
jmp
push
mov
in
popa
cwtl
xlat
pop
aam
test
push
in
sbb
fisttpll
cld
mov
or
and
je
mov
cwtl
cli
hlt
jo
mulb
push
and
movsb
jle
loope
enter
adc
out
pop
xor
out
jl
mov
cmp
xchg
jnp
in
fsubr
popf
mov
lcall
fsub
mov
xlat
jae
mov
les
push
add
xchg
mov
out
jb
ret
and
push
fwait
outsl
fdivs
js
aas
or
bnd
sub
jl
scas
push
mov
or
and
rcrl
sub
or
push
js
ja
jnp
fsubrl
imul
lret
in
inc
xchg
jg
push
inc
enter
adc
js
mov
xchg
test
sbb
mov
dec
scas
aad
sbbb
ret
adcb
push
cmp
xchg
mov
xchg
add
sbb
add
lret
sbb
mov
imul
popa
cmp
lods
in
jecxz
pop
xor
cmp
push
in
pushf
out
std
enter
push
pop
jp
sahf
add
xor
cmp
dec
jbe
out
mov
and
add
mov
fnstsw
pop
cld
jmp
dec
and
xchg
add
repnz
iret
in
xchg
xlat
gs
cmp
mov
filds
mov
xor
jg
push
cs
rolb
push
aaa
mov
and
lcall
repz
stc
cmp
popf
mov
shl
jbe
mov
sub
inc
dec
mov
inc
mov
outsb
ret
push
mov
icebp
daa
scas
mov
scas
imul
mov
cs
jmp
fistl
cmp
lcall
dec
cmp
imul
out
negb
insb
xor
pop
sbb
ljmp
xor
insl
inc
xor
lds
popf
or
and
dec
addr16
or
dec
ret
mov
adc
lods
popa
fldenv
dec
mov
push
leave
jo
mov
pop
fiadds
or
sbb
push
ja
aas
in
sub
iret
lret
dec
mov
and
loop
mov
xchg
sbb
mov
ja
loope
daa
jns
jne
jne
mov
cld
jge
mov
icebp
cmc
arpl
cmp
scas
rcl
mov
fisubrs
adc
mov
add
jecxz
lods
mov
insb
stos
outsl
push
inc
and
cltd
iret
mov
dec
push
jecxz
ds
fistpl
push
lahf
fld
dec
test
cmp
jle
push
ficompl
ljmp
fisubrs
out
cmp
dec
mov
push
jp
mov
pop
stos
outsb
mov
push
ljmp
fisubrs
out
cmp
dec
mov
push
jp
mov
pop
stos
outsb
mov
push
ljmp
fisubrs
out
cmp
dec
mov
push
jp
mov
pop
stos
outsb
mov
push
ljmp
je
out
cmp
xchg
push
test
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
xchg
cmpsb
xorl
mov
aas
adc
adc
push
jae
push
jbe
xchg
mov
jecxz
repz
not
push
and
xor
and
adc
inc
jbe
xchg
mov
cli
jmp
fcomi
leave
push
shlb
inc
and
sbb
fldenv
ficompl
pop
sub
pop
push
adc
fnstcw
add
jb
into
sbb
outsl
cmp
or
sti
mov
leave
adc
inc
sti
push
pop
sahf
xor
fadd
testl
test
push
cmpsb
inc
repz
sub
mov
xchg
mov
xorl
arpl
xchg
int3
fsub
pop
in
mov
leave
inc
cmp
jbe
inc
jl
jae
ret
pcmpgtw
inc
xor
or
lods
jnp
imul
fldenv
imul
pop
push
and
daa
fsts
push
add
xor
push
and
movsb
cmpsb
xchg
mov
jecxz
repz
test
cmp
sub
sbb
or
push
fs
jbe
mov
fists
subb
dec
es
dec
jl
push
push
and
fcomi
mov
repz
sahf
cmpsl
movsb
mov
and
ss
inc
adc
sbb
das
add
jecxz
xchg
leave
loop
out
repz
not
push
and
xor
add
adc
push
jae
inc
jbe
xchg
mov
jecxz
repz
not
push
and
xor
add
adc
push
jae
inc
jbe
xchg
cltd
cmpb
movsb
lds
std
cltd
mov
xchg
mov
shlb
insl
dec
pushl
adc
pop
mov
and
dec
jg,pn
lahf
jne
pusha
mov
popa
sti
push
lcall
jg
mov
popfw
fdivs
scas
inc
in
xchg
mov
xchg
bswap
dec
es
mov
pop
xchg
jl
sbb
xchg
ja
cwtl
mov
add
sub
add
loopne
jnp
push
xchg
sbb
test
xor
stc
fcomi
push
xor
xchg
or
leave
inc
xchg
adc
cmovp
ljmp
add
ljmp
push
aaa
mov
dec
test
fsubl
xorl
xchg
imul
idivb
addr16
fsubp
movsl
mov
repnz
push
pop
icebp
adc
scas
ret
xor
lods
lock
aaa
ja
push
push
jecxz
es
dec
push
and
xor
fcomps
imull
jecxz
imul
repz
sbb
mov
push
loop
dec
mov
out
cltd
inc
icebp
dec
adc
cli
sbb
fisubrs
jno
lcall
lea
cmp
ljmp
adc
fbld
jmp
cld
popl
and
jbe
insb
push
ret
in
push
mov
ljmp
outsb
icebp
lods
stos
mov
int
mov
das
jp
or
xor
pop
sbb
bound
lahf
lret
rcrb
dec
push
mov
popf
pop
sti
mov
cwtl
sub
or
movsb
enter
dec
out
rcr
repnz
xchg
out
xchg
lock
popa
ret
and
stos
pxor
dec
std
xchg
push
cmp
test
call
cli
cmp
sbb
push
xchg
lock
jmp
div
jb
pop
roll
sub
dec
push
adc
ret
stos
or
push
xchg
jbe
outsl
aaa
sbbl
aam
aaa
je
lret
add
add
pop
push
sbb
stos
pop
std
or
inc
sbb
pop
roll
enter
or
add
out
sub
aam
push
loop
rorl
jge
aam
push
sbb
mov
mov
pop
xchg
xor
orb
in
add
cmp
or
clc
and
repnz
in
pop
clc
loopne
mov
adc
ror
imul
into
je
mov
cmp
inc
and
sub
insb
sarl
sub
call
jne
outsl
insl
mov
jecxz
cmp
lods
les
push
repnz
cld
mov
adc
jle
lods
xchg
pop
pop
sahf
imul
movsb
push
xor
mulb
jnp
repz
ret
adc
push
xchg
out
fsubp
inc
mov
in
pop
sub
test
xor
out
and
lods
call
fiaddl
cmp
adc
mov
cmp
out
push
push
inc
fldt
dec
ljmp
inc
dec
fsubrp
fisubs
mov
clc
or
and
std
loopne
xor
xlat
or
addl
adc
je
jne
mov
jge
xor
jmp
cmp
xor
lahf
jl
jle
in
push
xchg
xorl
ret
shl
imul
fcmovu
cmp
test
xchg
cwtl
add
fs
test
ja
and
jmp
add
data16
aam
ds
js
arpl
adc
scas
aas
cmpb
fadds
stos
adc
pminsw
push
dec
mov
push
in
notl
inc
std
shlb
cli
mov
pop
in
nop
scas
ja
ret
push
in
roll
jo
push
jg
popf
jmp
imul
dec
jg
jbe
testb
stc
pop
movsl
loop
inc
cmp
xchg
fwait
mov
inc
jl
sahf
xor
aaa
andb
jg
jge
in
aaa
rclb
add
dec
inc
fdivr
jnp
outsl
cmp
icebp
fisubrs
adc
imul
push
outsb
inc
rcr
inc
add
mov
mov
pop
outsl
lods
inc
fsubr
jne
int
sbb
add
and
push
test
mov
out
jbe
mov
cltd
pop
jne
aam
test
mov
sarl
xchg
lods
add
mov
loop
sarl
shll
sub
push
jle
push
test
and
fldl
inc
jmp
repz
nop
push
hlt
data16
and
pushl
dec
mov
push
shlb
fsubs
fs
shll
mov
fisttpl
inc
pop
dec
cmp
call
jns
testb
xchg
scas
subl
stc
xchg
jbe
and
or
pop
push
leave
mov
xchg
and
stc
ljmp
lcall
mov
fcoml
fisttpl
sbb
dec
adc
add
mov
pop
cmpsl
ret
rcll
mov
je
jp
insb
xor
gs
fsubp
cmc
xchg
mov
mov
andl
and
lcall
shl
mov
in
jne
mov
xor
shl
mov
ljmp
fwait
cmp
adc
xchg
call
xchg
and
ds
shrb
out
xor
hlt
mov
das
lds
pop
push
dec
cmp
sbb
jg
cmpb
iret
into
xchg
test
lea
and
mov
jno
adc
enter
neg
icebp
leave
inc
stc
popf
adc
fsubrs
adc
icebp
decl
mov
xchg
xor
ret
sti
adc
call
pop
cmpsl
and
popf
dec
mov
xchg
mov
dec
nop
push
and
add
sub
inc
cmp
and
and
push
arpl
and
mov
pop
arpl
cli
shll
jbe
lahf
xchg
stos
stos
popa
or
and
add
sub
mov
cmpsl
add
push
lret
leave
lcall
push
decb
insl
int3
sub
xor
es
push
and
pop
les
loope
push
cmp
adc
xor
and
mov
outsl
cmp
jno
dec
sub
adc
nop
int
ret
xor
jp
imul
inc
cmp
fiaddl
aas
xchg
in
mov
mov
popf
xor
lods
loop
fsub
push
push
sbbl
sbb
cmp
int3
push
jle
sti
sub
lods
call
xor
and
adc
mov
and
je
bound
in
mov
mov
pop
xchg
push
sbb
sti
cli
adc
hlt
fdivl
xlat
repz
in
and
mov
jg
mov
inc
jl
sbb
mov
xchg
fwait
push
subb
das
rclb
add
cli
add
and
xorb
mov
lret
add
sub
fistpl
pop
jnp
rclb
push
fidivs
loope
push
jnp
or
iret
in
mov
and
jecxz
cmc
leave
icebp
mov
fstp
loopne
xor
popa
dec
out
pop
lret
shlb
adc
or
mov
xchg
inc
loope
mov
xchg
sbb
out
sub
add
insl
lods
mov
pop
pop
jmp
adc
xorb
das
fdivr
xor
pushf
sbb
femms
adc
scas
and
std
cmp
bound
mov
sahf
mov
mov
cmp
and
pop
aam
jge
cwtl
rorb
or
adc
dec
lret
cmp
mov
adcb
push
int
adc
xlat
mov
jmp
outsl
cmp
lahf
or
sahf
xchg
mov
fcompl
pop
pushf
fwait
fs
test
push
fimull
mov
outsl
ds
shrb
pop
cmpb
xchg
stos
pusha
mov
sub
out
loop
xor
push
lret
ror
jb
scas
dec
fmul
add
lea
pop
xchg
inc
insb
loopne
mov
cmp
sbb
iret
mov
and
pop
jge
pop
int
jbe
lea
xchg
out
rclb
lods
les
jae
fucom
mov
fidivs
or
ret
mov
adc
and
jb
movsb
xor
cmp
fmuls
out
add
outsl
call
rolb
mov
mov
inc
mov
jo
ss
adc
dec
mov
mov
out
pop
cmp
inc
cld
add
push
or
sub
call
pop
sbb
cli
mov
aad
inc
outsl
xlat
cmp
pop
lahf
imul
push
push
sbb
sarl
add
ret
cmpl
mov
out
jo
jp
xchg
das
lods
repz
loopne
sbb
aaa
push
add
cs
add
aad
push
test
fisttpll
loopne
ja
or
fwait
jg
and
mov
cmp
cmp
hlt
and
insb
pop
shl
push
je
jl
mov
push
icebp
or
hlt
xor
push
repnz
lret
inc
insb
imul
outsb
sahf
ss
mov
sarb
int3
mov
or
aad
out
fildl
insb
cltd
cmp
in
mov
cmp
and
dec
inc
mov
daa
jecxz
push
pop
xchg
pusha
adc
fldl
pop
lods
pop
outsl
mov
das
sub
mov
xor
pusha
in
insl
push
insl
sbb
xchg
sbb
sbb
lret
std
cld
or
shlb
push
mov
ds
fmulp
xchg
dec
adc
pop
outsb
and
inc
mov
lds
push
pop
lahf
aam
mov
pusha
les
add
mov
cmc
cmp
cmpsb
dec
lret
xchg
in
pop
or
sahf
fsubr
jnp
sti
cld
test
idivl
mov
push
mov
jb
das
neg
mov
ja
out
adc
addr16
xlat
stos
dec
out
and
adc
sbb
push
pushf
cli
sub
out
inc
lds
dec
test
jle
jae
into
pop
dec
gs
enter
add
add
in
cltd
inc
mov
lods
cltd
cmp
mov
mov
push
push
int
hlt
push
and
cmpsl
pop
scas
xorb
inc
test
call
or
push
mov
mov
ret
add
roll
rorl
mov
jae
or
out
xchg
aas
jns
sbb
xchg
push
dec
sbb
mov
cmp
mov
mov
push
cmp
mov
sti
inc
xchg
sbb
aam
xor
test
divb
repnz
test
nop
push
loopne
hlt
sbb
rsqrtps
ja
les
test
sub
push
and
cmpsb
es
cmp
sub
xchg
jle
pop
sbb
ret
int
ljmp
jge
iret
push
cltd
jne
int3
mov
notb
adc
pusha
mov
cmp
xor
fs
xlat
sbb
mov
rorb
in
inc
jmp
fs
xchg
popl
sbb
mov
or
lret
sbb
test
movsb
in
outsl
negb
out
and
xchg
rorl
test
int3
ss
rcl
inc
sbb
stc
sbb
in
and
ret
mov
sbb
ss
ljmp
test
enter
adc
adc
mov
aas
fs
sbb
mov
les
jae
repz
add
outsl
and
push
push
mov
push
add
cld
out
int3
imul
out
pusha
out
sub
jg
mov
scas
loop
jmp
adc
outsb
shrl
and
pop
inc
cltd
xchg
bound
xchg
cmp
adc
inc
in
out
sbb
add
iret
xorb
fdivrl
cwtl
xchg
push
popf
adc
cmp
xlat
mov
push
loope
lods
mov
lods
cmc
in
es
je
pop
scas
cmp
fbld
push
ja
stc
call
pop
fnstsw
ja
or
cmp
push
inc
mov
push
aam
dec
mov
add
inc
cmp
fcomps
or
mov
xor
sub
hlt
or
and
add
gs
inc
stos
mov
mov
cmp
fidivrs
negl
mov
push
dec
push
mov
dec
por
dec
lods
add
dec
push
cmc
outsl
push
xor
pop
and
sbb
sti
jmp
jae
cs
adc
push
mov
shl
mov
and
add
push
roll
inc
adc
push
jmp
inc
call
shl
stc
cmpsl
std
into
add
lea
pop
mov
cmpsl
inc
fsubl
repz
rorl
push
inc
mov
cmp
push
in
xchg
out
mov
leave
jb
jne
add
daa
sti
jns
incb
mov
mov
mov
outsl
push
cmp
push
in
insl
jp
clc
mov
xchg
inc
cmpsb
dec
dec
mov
stc
push
pusha
xchg
xor
pop
fstpt
dec
ljmp
jne
pop
mov
sbb
inc
xchg
cmp
subb
testb
das
sbb
fisttpl
cld
mov
outsb
xchg
sbb
or
mov
sub
jnp
dec
or
ret
orl
lret
loope
adc
cmpb
ja
sbb
mov
lcall
pop
xchg
nop
pop
mov
mov
jns
std
jne
lret
das
add
mov
xor
mov
ss
test
mov
bound
sbb
fcomp
insb
push
cmpsl
stc
out
rorb
and
fildll
stos
pop
xchg
imul
sti
test
mov
inc
inc
stc
sub
imul
dec
push
out
or
fcomp
xchg
test
cltd
int
sti
ret
subl
fiadds
repz
in
mov
ss
mov
sahf
add
lahf
xchg
cmpsb
xchg
jge
pushf
add
or
lcall
aas
inc
push
adc
xchg
gs
ret
not
dec
mov
dec
and
mov
pop
xor
mov
imul
daa
mov
cmp
jmp
lea
in
in
sub
cmpsb
out
divb
sti
test
mov
inc
jno
aam
std
fisubrs
push
std
sti
jmp
pushl
jne
or
mov
popf
cmp
scas
xchg
xchg
pop
and
sub
sahf
sub
arpl
pop
insb
sub
xchg
xor
ret
fwait
pusha
jae
xchg
ds
ja
mov
inc
fs
bound
sti
cmp
dec
fisubs
sahf
cmpsb
sub
movsb
ret
fs
add
loope
sbbl
iret
out
dec
jne
arpl
lret
cmp
adc
aas
ss
pop
push
test
subb
pop
jo
mov
jle
roll
popa
xchg
cmp
mov
xor
int
fwait
cmp
lcall
push
mov
inc
movsl
inc
out
bound
in
leave
pusha
inc
pcmpeqd
cmpsb
rorb
loope
out
scas
je
shl
inc
pop
mov
shlb
jo
rcll
cmp
and
jl
and
arpl
mov
imul
inc
fcoml
xlat
negl
jb
inc
push
loope
sti
adc
fcoms
mov
ss
sub
and
push
ficomps
mov
push
push
je
lret
cmp
das
sarl
arpl
addr16
sub
roll
push
jp
adc
fldcw
mov
add
sbb
cltd
dec
pop
pushf
xor
mov
jae
push
jmp
insl
mov
imul
imul
push
dec
jb
xor
xor
in
rclb
xor
xchg
test
stc
aam
push
enter
adc
xor
push
pop
pop
xchg
into
jne
push
mov
nop
idivl
popf
push
or
inc
arpl
push
adc
sub
cmp
and
fisubrl
or
bound
lahf
test
insl
mov
loopne
fcoms
dec
sub
sti
and
and
dec
test
hlt
xchg
repnz
sbb
sub
mov
mov
push
jmp
xor
and
in
aam
add
sub
out
js
pushf
sbbl
lahf
mov
test
ljmp
xchg
cmp
add
xor
mov
jbe
nop
pop
mov
scas
cmp
sbb
fnsave
push
mov
mov
pop
push
push
fs
jnp
mov
push
dec
pop
cmpsb
es
dec
mov
and
pushl
xchg
inc
jmp
push
insl
dec
pushf
sub
scas
cwtl
xchg
adc
inc
mov
jmp
push
fs
mov
loope
arpl
sarl
inc
jno
mov
dec
into
xor
mov
jbe
ljmp
mov
ja
sbbl
inc
sbb
mov
sbb
insb
push
fiadds
jmp
leave
sbb
gs
cld
sbb
std
pop
and
dec
jecxz
bound
dec
dec
push
ja
andb
loope
cmp
mov
icebp
gs
jmp
pushf
lret
xchg
and
ljmp
movsb
shl
add
mov
stos
xchg
push
inc
inc
and
jnp
adc
dec
or
mov
inc
mov
sbb
insb
fnsave
inc
lods
scas
iret
jg
add
push
test
mov
sub
push
out
adc
pop
mov
mov
pop
pop
jg
inc
shl
lahf
dec
cmp
gs
sbb
scas
sti
insb
jmp
call
pop
sub
pop
sub
adc
sub
test
push
pushf
sub
lret
lret
divb
inc
cmp
ror
push
xchg
cwtl
aam
into
lds
sbb
aas
das
xlat
jns
or
dec
or
test
xor
repnz
lcall
cmp
cmp
and
sub
mov
test
ffreep
add
pop
xor
adc
and
xchg
popf
leave
xchg
dec
scas
dec
rclb
and
outsb
and
arpl
xlat
inc
mov
sbb
jno
testb
mov
add
sub
push
jbe
jno
lods
inc
sti
mov
jns
das
cmp
jns
cmp
clc
rcll
inc
or
inc
lea
xor
and
or
js
adc
in
les
inc
xchg
cmc
int3
cwtl
sbb
test
sbb
repnz
pop
xor
or
lea
mov
lods
lock
mov
js
int3
ja
xchg
dec
aas
jo
inc
es
pop
sub
dec
lret
push
test
dec
and
test
cli
inc
add
clc
adc
jb
sub
loopne
imul
adc
ret
push
adc
pushf
leave
mov
lods
push
out
into
jno
xor
lcall
add
xor
push
je
jno
cmp
or
fcoml
pop
gs
bnd
dec
out
mov
pushf
inc
data16
fwait
mov
xor
int
testl
inc
les
outsl
adc
adc
stc
cltd
repnz
sub
adc
pop
mov
test
repnz
push
test
jne
bound
jae
pop
pop
mov
xchg
enter
pop
repnz
pop
pop
lcall
pop
lea
neg
pop
mov
lret
fs
int3
cmp
data16
or
fimuls
pop
dec
out
mov
dec
cmpsl
ficompl
inc
jecxz
lods
mov
stos
add
jmp
repz
jne
mov
test
cmp
lahf
add
in
jmp
sahf
lock
jne
cmp
mov
dec
stos
stos
arpl
cmp
and
jp
or
mov
cwtl
adc
inc
mov
xor
stos
and
sub
mov
and
sbb
xor
imul
sub
fstpt
arpl
sbbb
cli
shll
jo
cmc
int3
push
jl
pop
mov
int3
sbb
pop
jbe
mov
mov
sbb
pop
fsubl
ja
or
std
sbb
dec
movsl
sub
int3
cwtl
or
mov
ret
sbb
push
nop
sub
pop
or
pop
test
dec
push
push
jp
pop
jge
pop
dec
scas
popa
add
gs
pop
enter
lock
mov
mov
push
sub
cmp
mov
xor
arpl
jl
ret
adc
in
repnz
mov
add
dec
pop
andb
xchg
jg
mov
cltd
cmpsl
pop
pop
and
pushf
adc
loopne
testl
sub
lods
ja
imul
call
inc
xchg
in
pushf
repz
cli
js
mov
xchg
icebp
in
sub
fcmovne
jnp
arpl
divl
and
insb
mov
jecxz
repz
not
push
and
xor
add
adc
push
jae
inc
jbe
xchg
mov
jecxz
repz
not
push
and
xor
add
adc
push
jae
inc
jbe
xchg
mov
inc
jecxz
repz
jbe
push
and
xor
add
adc
push
jae
inc
jbe
xchg
mov
jecxz
repz
not
push
and
cltd
mov
ss
mov
mov
out
aaa
filds
iret
pop
or
rcrb
adcb
outsl
mov
xchg
aas
out
jb
pmovmskb
daa
out
aaa
filds
iret
pop
mov
inc
push
outsl
cmpsl
outsl
xlat
pop
xchg
aas
out
negl
test
xlat
out
divb
movl
mov
xchg
push
cmovl
aas
mov
pop
xlat
xchg
daa
subb
mov
xchg
pop
popf
dec
push
stc
cmp
aaa
and
jl
iret
ds
cmpsl
popa
jae
xchg
in
mov
inc
sbb
cli
dec
inc
dec
mov
xchg
aas
sbb
xchg
lock
jg
and
jl
sub
sub
dec
addr16
ret
out
aaa
pop
cmp
pop
xor
mov
lret
jmp
inc
data16
ja
enter
jl
fldt
mov
rorb
pop
scas
enter
call
rclb
aam
pop
test
push
imull
or
cmp
pop
pop
mov
enter
out
inc
adc
mov
shl
mov
xchg
pop
xchg
jp
jl
pop
rorl
ss
divb
filds
iret
pop
test
mov
push
cmpsw
ja
inc
xchg
daa
out
testl
outsb
mov
ja
or
ret
sub
sub
aas
xchg
insl
lds
nop
daa
mov
shrl
scas
adc
fisttps
ret
push
clc
aas
test
mov
andl
jb
scas
ja
inc
push
jg
outsl
mov
xchg
aas
out
negl
pmovmskb
daa
out
aaa
filds
iret
pop
mov
inc
push
jg
outsl
mov
xchg
aas
out
negl
pmovmskb
daa
sarb
mov
xchg
inc
mov
mov
iret
mov
push
icebp
std
xor
rorb
test
jno
and
lods
int3
adc
mov
aad
dec
jg
adc
mov
insl
mov
lahf
fidivrl
test
jmp
mov
out
jp
lods
cwtl
mov
mov
sbb
aad
adc
dec
sbb
repnz
fs
mov
xchg
cli
movsb
test
xor
sub
push
cli
aam
rcrl
ror
stc
xor
aaa
xchg
fcmovu
xor
sbb
dec
in
int
fdivs
inc
sub
aaa
mov
add
inc
and
cmp
mov
mov
jno
mov
test
push
outsb
xor
leave
pop
std
int3
lods
lods
rol
ljmp
sbb
rolb
cmp
dec
pop
xchg
dec
fistpll
pop
outsb
sbb
subl
and
mov
arpl
cmp
push
push
mov
xchg
cmp
in
data16
mov
mov
jp
out
add
push
jo
mull
inc
loop
nop
xor
ds
jo
fidivs
cs
outsb
ret
test
adc
scas
jb
call
inc
fcompl
lcall
mov
mov
push
dec
out
push
or
lret
pushf
sahf
mov
loop
outsl
insb
xor
fldt
jbe
mov
or
in
dec
in
jecxz
sete
loope
std
pop
xor
sub
inc
in
or
minps
fcomps
mov
xchg
gs
push
mov
add
xchg
mov
xor
mov
xchg
or
ss
mov
adc
add
shlb
call
or
mov
into
repz
jbe
std
xchg
addr16
adc
jecxz
jge
jecxz
mov
insl
xor
cli
cli
pop
js
inc
dec
and
or
imul
mov
fisubl
cmpsb
jmp
inc
lds
xor
sbb
fistl
jge
mov
xchg
es
push
and
gs
push
jo
fistl
xor
mov
scas
xchg
push
adc
xchg
shrb
mov
push
and
sbb
mov
call
gs
arpl
ss
stc
lea
jp
mov
fbstp
push
add
mov
ljmp
sti
pusha
aad
adc
out
or
mov
ret
sbb
mov
js
int
and
xor
insl
mov
rol
hlt
cmp
mov
mov
jno
dec
out
jbe
stos
pop
pop
cmc
stos
jecxz
or
adc
xchg
dec
in
ja
clc
dec
sbbb
add
test
jns
lds
add
movaps
aam
adc
jae
int
mov
sub
ret
ja
aam
es
mov
cmp
cli
call
or
test
stos
loopne
adcl
jecxz
xor
or
push
sbbb
inc
arpl
out
cmc
aaa
mov
les
dec
popa
xor
xor
test
fabs
inc
xchg
cmp
push
sbb
mov
ret
mov
and
fs
pop
mov
dec
ds
add
sbb
dec
loope
pop
loopne
cmpsl
mov
pop
loop
jae
std
lea
dec
cmpxchg
xor
out
mov
xchg
push
mov
mov
xlat
push
icebp
mov
pop
add
and
shlb
jnp
inc
push
add
pop
pop
lea
and
add
add
push
jg
popa
or
lds
lea
nop
cmp
mov
mov
cmp
ds
fsts
mov
pop
ljmp
mov
dec
fcomps
inc
stos
inc
or
insb
fstl
mov
std
imul
jb
xor
jg
stos
push
mov
push
pop
fsubrl
dec
scas
imul
mov
or
ror
test
mov
neg
pop
cltd
push
and
push
clc
hlt
lahf
cmp
hlt
mov
push
repnz
and
popf
bound
jo
fucom
ss
push
jge
pop
sub
aad
leave
jmp
insl
insb
hlt
ljmp
mov
aad
and
fistpll
ljmp
es
sbbl
cmc
sbb
in
push
orl
arpl
cmc
hlt
cmp
and
repz
and
pop
mov
and
arpl
test
rorb
test
das
jno
sahf
jns
cs
das
cltd
sub
push
in
cmpsl
jmp
mov
sbb
icebp
addb
scas
xchg
sbb
pop
sub
jo
pop
hlt
ror
ss
mov
xchg
subl
pushf
xor
es
jo
adc
mov
push
repnz
movsb
or
call
shlb
xchg
mov
addb
push
sbb
shlb
movsl
lahf
fwait
adc
or
ss
in
add
jmp
sub
add
push
and
lret
inc
cld
push
and
divl
shrl
insb
loopne
int3
push
adc
fidivrs
das
sbb
dec
pushf
or
cmp
xchg
int
and
aad
pop
adc
ds
out
jmp
fcoms
push
test
fiadds
mov
das
add
mov
fdivrp
ds
sub
pop
sbbl
adc
mov
or
inc
aad
push
push
inc
aam
aam
shrl
jp
adcl
sub
out
mov
out
mov
mov
mov
aas
int
xchg
fwait
jg
mov
push
xor
rcrb
loope
imulb
aas
xor
jns
mov
dec
les
jmp
loope
lret
jmp
mov
test
lret
fistl
rcll
out
cmpsb
xor
mov
roll
push
cmpl
mov
adc
mov
mov
repnz
mov
pop
punpcklbw
ljmp
out
dec
mov
outsb
push
cmp
out
cmp
sbb
call
in
cld
xor
pop
imul
stos
imul
mov
dec
push
leave
add
inc
pusha
inc
clc
aas
cmp
dec
push
ret
ss
dec
sbb
loope
loopne
pop
idiv
sbb
push
rorb
stc
or
xor
in
leave
movsl
dec
dec
and
sbb
push
fmul
add
dec
xchg
push
mov
push
xchg
push
std
mov
fucomip
inc
xlat
and
jbe
pop
cwtl
and
xchg
testb
popf
mov
push
push
movsb
push
lds
out
or
adc
xchg
jbe
clc
ja
les
je
int
int3
ret
add
enter
pop
scas
mov
lret
push
sub
subl
mov
push
cmpsw
push
mov
xor
push
idivl
mov
daa
jae
inc
mov
cmpsb
mov
xchg
scas
out
inc
bts
mov
sub
dec
add
jl
sub
pop
imul
sbb
pop
inc
inc
inc
pop
mov
stos
pop
aaa
and
enter
movsl
ret
fcmove
cmc
dec
std
xchg
sub
js
arpl
insl
fists
jle
popf
orb
filds
mov
xor
lock
push
out
lcall
xor
xorl
push
pop
hlt
out
aas
out
pop
cltd
cmpb
adc
fcmovnu
push
dec
or
insl
cmpsl
push
out
push
aas
xor
mov
adc
jno
popa
push
jne
lahf
mov
sbb
repz
and
pop
cmpl
js
arpl
pop
iret
mov
je
xchg
or
mov
sbb
jns
iret
mov
incl
mov
or
sbb
test
es
mov
movsl
pop
movsl
cmp
outsl
addr16
or
or
cmp
and
or
dec
cmp
push
scas
mov
aaa
cltd
and
ds
out
add
dec
add
inc
inc
adc
and
mov
enter
clc
inc
jmp
push
shl
dec
imul
fiadds
jl
mov
pop
andl
in
cmp
adc
into
js
sub
inc
xchg
filds
xor
mov
int
sti
jle
fldt
addr16
addb
mov
push
sbb
rorl
mov
jl
scas
pop
or
out
or
inc
inc
lock
jg
stos
fistpll
xchg
int
sbb
out
jp
xorb
jmp
sbb
jbe
fisubrl
cld
mov
sbb
dec
dec
cmpsb
pop
xchg
dec
pop
out
push
int
pop
pushf
mov
mov
in
ds
shll
jmp
jecxz
dec
fcomps
and
rcr
lds
call
mov
fdivl
fcomps
call
push
push
sbb
push
out
push
mov
int3
pop
cltd
fnstsw
movsb
stc
daa
xchg
inc
xor
push
fsubr
mov
jp
in
xor
cmp
iret
pop
lock
sti
outsb
xchg
sbb
mov
lods
sbb
sti
or
dec
xor
scas
fiadds
mov
lret
mov
cmp
mov
pop
mov
bound
jae
pop
dec
lahf
lods
stos
lea
cmp
aaa
in
inc
das
out
mov
incl
push
lods
negb
push
push
fwait
and
sub
stos
rcl
push
add
jb
outsb
aas
mov
cmpsl
push
xlat
sbb
scas
dec
sub
push
mov
xor
loope
ja
sbbb
mov
push
mov
add
ljmp
xor
push
jae
jb
pop
jns
or
mov
add
xchg
pop
xlat
idivb
cmp
leave
pop
jl
push
dec
repnz
jp
cmc
xchg
add
pop
pusha
sbb
aaa
push
inc
xor
jp
xor
in
mov
sbb
lock
adc
ds
mov
iret
enter
and
in
xchg
std
xchg
push
lcall
xchg
popf
popa
iret
push
jae
jp
sub
mov
aas
stc
repnz
jg
incl
or
pop
pushf
cmp
sbb
stc
fxch
inc
lods
jns
insb
pusha
sub
insl
jns
dec
mov
gs
cwtl
sahf
mov
cmpb
adc
mov
cmp
mov
sahf
mov
mov
add
dec
jg
cmc
sbb
shlb
daa
sub
sbb
or
cmp
cmc
add
out
es
and
or
xor
or
sub
es
cmp
or
mov
lea
sbbb
mov
shl
mov
iret
mov
loope
add
je
push
out
stc
pop
push
xor
xchg
sar
push
mov
mov
shll
push
mov
jb
push
fcomi
paddq
call
pop
xchg
mov
lcall
dec
xchg
lock
push
mov
fwait
cmp
push
mov
ret
outsl
cwtl
insb
mov
push
fwait
loop
mov
cmpsl
ret
xchg
and
push
mov
addr16
arpl
scas
fnstsw
sbb
icebp
pushf
and
loopne
dec
lock
shr
mov
dec
dec
fistl
mov
stos
pushf
and
imul
pusha
lret
mov
mov
mov
cli
ficoml
or
and
cmpsb
into
sub
idiv
hlt
inc
mov
mov
push
add
dec
cltd
dec
and
ret
sbb
sbb
lret
pop
fdivrl
sarl
shll
fimuls
aam
loopne
xor
sbb
pop
sbb
cmp
or
inc
push
aas
test
popl
in
mov
mov
xchg
inc
xchg
ror
sti
push
adc
dec
jecxz
xchg
hlt
jmp
push
jl
cmpsb
stos
inc
mov
pop
fstpl
sbb
test
xchg
mov
aad
xchg
in
jl
fwait
xchg
les
ja
xchg
dec
hlt
cmp
push
out
bound
pop
popf
shll
loop
mov
cmp
inc
mov
mov
mov
pop
loope
push
js
add
jl
sbbl
or
in
das
flds
cmpsl
in
cmpsl
mov
mov
clc
sbb
int3
mov
dec
jmp
sbbl
ffree
pop
in
adc
rclb
aam
lahf
addr16
mov
jbe
and
shl
push
out
inc
lret
xchg
xor
cwtl
pop
jmp
mov
daa
fmuls
movsb
adc
dec
cmp
jmp
or
test
pusha
cmp
mov
in
iret
mov
insl
push
loopne
and
hlt
push
int
shll
pop
stos
lret
in
mov
xchg
outsl
gs
pop
sub
mov
mov
add
cmp
cmpsb
and
out
jge
mov
mov
pop
ret
arpl
push
addb
out
xchg
test
jns
ror
cmpsl
fistpl
sahf
inc
insb
jg
push
icebp
stos
xchg
into
stc
movsl
mov
adc
cmp
mov
nop
sub
or
mov
lods
pusha
jbe
mov
sbb
ret
loopne
das
dec
jae
cmp
pop
dec
mov
xor
rclb
lret
pop
or
push
cltd
in
outsb
lods
mov
mov
mov
shlb
cmp
mov
ficompl
lret
shll
dec
lcall
popa
lret
push
mulb
and
mov
mov
jo
adc
mov
repz
xchg
ja
fstpl
je
test
xor
jg
imul
inc
adc
jl
in
sub
rorl
enter
pop
mov
or
data16
insl
cld
dec
lods
add
mov
int
js
mov
fmuls
and
sub
pusha
and
das
mov
outsb
pop
lcall
aad
xchg
mov
mov
add
jno
inc
ja
mov
push
sbb
leave
mov
in
hlt
or
ret
iret
mov
in
adc
sub
in
jb
cmp
dec
mov
and
scas
mov
adc
sbb
mov
clc
imul
call
xor
jmp
js
icebp
ja
dec
repz
jbe
jecxz
mov
push
pop
pushf
xchg
mov
mov
add
dec
sub
mov
add
rcrb
aam
sarb
das
mov
imul
adc
pop
repnz
cwtl
xor
xchg
fisubs
pop
xchg
enter
xor
xchg
ds
dec
lods
inc
pop
repz
cmp
lcall
sahf
cmp
cwtl
pop
sarl
dec
inc
adc
mov
sub
and
jno
cmp
xor
push
xchg
dec
xor
jge
dec
or
xor
mov
inc
adc
pop
pop
movsb
dec
test
lods
push
inc
jmp
jb
dec
hlt
inc
xchg
jg
arpl
imul
and
shlb
enter
dec
mov
jbe
jle
loop
out
pusha
mull
dec
lret
cmp
add
cltd
mov
movsb
je
pop
mov
cmpsb
xchg
das
movsb
fdivr
mov
or
enter
push
lock
dec
adc
mov
or
and
scas
push
mov
sub
inc
inc
lock
es
pop
sub
sahf
fcmovne
xchg
dec
push
out
into
jbe
dec
add
mov
decl
addr16
jl
jb
pop
mov
sub
outsb
push
mov
test
jo
aas
xchg
gs
clc
mov
adc
push
push
push
xchg
ss
outsb
mov
push
pop
fisubrl
je
fiadds
fidivl
in
jo
movsb
mulb
cmp
inc
cli
addr16
inc
stos
push
clc
mov
xchg
inc
cmp
ret
hlt
xchg
dec
dec
push
jmp
jno
loopne
pop
leave
jae
inc
dec
in
xor
mov
jbe
mov
lret
repnz
push
daa
loop
mov
or
enter
or
and
or
andb
int
les
jns
jge
nop
mov
lret
mov
jmp
out
out
push
adc
push
lret
les
iret
sub
cmpsb
add
cmp
cltd
gs
popw
xor
mov
push
sub
and
inc
mov
sti
jo
repz
mov
sbb
ljmp
mov
mov
mov
fwait
cmp
xor
jge
imul
or
and
pop
pop
cmp
lret
popa
test
js
dec
mov
ret
out
mov
rcrb
adc
mov
sub
sub
mov
jecxz
pushf
inc
cmp
lret
inc
lock
lea
and
rclb
xor
iret
jge
push
icebp
jo
cmp
mov
sub
es
dec
les
mov
add
aam
or
and
cmp
xor
pop
push
test
insl
add
cmpsl
sbb
out
push
call
sub
dec
loopne
push
fdivrl
and
mov
enter
sarb
add
push
icebp
shlb
mov
sbb
lock
in
lcall
or
test
jle
push
cmp
lret
mov
adc
push
mov
rclb
sbb
mov
test
cmp
jne
xlat
or
jmp
in
sub
or
xlat
icebp
xor
outsb
jg
pop
or
stos
fistpl
mov
push
sub
push
icebp
sub
pop
in
daa
sbb
adc
mov
shlb
mov
aad
repnz
imul
adc
popf
in
pop
mov
mov
add
cld
cmp
insl
pop
stc
imul
inc
xchg
fisubl
cld
dec
jp
pop
daa
push
shrl
and
fildll
push
adc
xor
add
fcmovbe
pop
subb
pop
loope
mov
in
fcomp
dec
ljmp
fidivrs
das
push
lds
loopne
pop
and
fld
sbbb
stc
xchg
repz
test
das
xchg
out
rcll
mov
mov
mov
or
mov
repz
and
xchg
xchg
and
fnsave
push
fadds
les
xor
call
lods
iret
inc
iret
jmp
testl
scas
ficoms
inc
popa
lods
movntq
out
loopne
or
fdivp
xor
out
or
or
jp
mov
xor
add
and
add
iret
ja
ds
and
outsb
ficoml
enter
fwait
push
adc
mov
inc
and
sbb
inc
cmpsl
out
es
sub
add
out
test
outsb
imul
cli
pop
jg
mov
cmpsl
sub
adc
iret
insl
mov
leave
lock
mov
out
jge
and
hlt
pop
int3
insl
imul
push
jo
pop
dec
es
push
mov
adc
pop
les
icebp
xor
inc
xchg
mov
imul
jae
sbb
pop
pop
adc
loope
dec
add
push
mov
imul
inc
orl
push
loop
mov
scas
leave
addr16
js
movsb
cli
xchg
push
xchg
pop
xchg
pop
popa
xchg
jecxz
cmp
stos
inc
and
scas
fcompl
jle
call
dec
enter
push
mov
repnz
fbld
inc
mov
push
call
or
jl
mov
mov
adc
mov
add
addr16
cmp
mov
leave
fst
scas
das
movsb
push
cmpb
xchg
lea
repz
pop
cmp
adc
dec
xchg
fyl2x
and
fldt
xchg
or
sbb
pop
ds
fnsave
ds
scas
mov
adc
adc
pop
cmp
mov
lds
dec
add
fmul
mov
movsl
cmp
fisttpll
aad
std
negb
cmpb
stos
mov
lret
pop
cld
fsts
push
scas
arpl
pop
add
dec
sub
adc
push
pop
sub
movsb
int
cmp
call
mov
xor
cmpsb
xchg
mov
neg
pushl
push
repz
dec
movsl
mov
mov
mov
bswap
jp
xchg
inc
jl
jmp
pop
in
mov
cmp
mov
adc
or
add
mov
imul
enter
inc
fwait
or
jns
xchg
pop
jns
adc
mov
add
pop
out
lret
ret
and
imul
add
mov
dec
and
mov
lret
cli
decb
cs
mov
enter
sbb
push
shl
jl
rcll
mov
aas
mov
push
leave
popf
xchg
in
pop
xchg
dec
push
adc
inc
sbb
sub
lret
adc
mov
inc
sbb
fiadds
add
repnz
or
lods
imul
rolb
aaa
aad
iret
pop
mov
inc
push
jg
outsl
mov
xchg
aas
out
negl
pmovmskb
daa
out
aaa
filds
iret
pop
mov
inc
push
jg
outsl
mov
xchg
aas
out
negl
pmovmskb
daa
out
mov
xchg
pop
mov
inc
push
jg
outsl
mov
xchg
aas
out
negl
or
aaa
fiadds
iret
pop
mov
inc
xorps
xchg
dec
outsl
cmpsl
or
cmp
sub
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
out
hlt
inc
les
bound
mov
ret
push
loop
xchg
xor
add
add
adcb
test
aam
movsb
adc
shlb
repnz
loop
xchg
xor
add
adc
pop
push
push
inc
push
jb
bound
xor
sub
xor
dec
rolb
xlat
dec
mov
les
mov
ret
pop
xor
xchg
sbb
fnstenv
add
adc
pop
or
inc
arpl
mov
xor
or
sbb
xchg
outsl
add
fistl
or
jmp
sbb
xchg
mov
ret
inc
cmc
mov
je
push
notl
xchg
jno
int3
dec
sub
and
jbe
adc
gs
xlat
rorb
fcmovnb
xor
add
iret
stc
mov
pop
adc
inc
xchg
test
popa
pop
xor
cld
mov
repnz
imul
jnp
mov
ror
mulb
jbe
cmpsl
pop
mov
les
bound
int3
add
out
ret
fs
xchg
xorb
adc
lea
xchg
lret
jge
inc
lock
xchg
push
fs
xor
xor
test
jb
xor
jno
shll
xchg
es
inc
movsb
sub
pop
std
pop
in
insl
push
int3
mov
cwtl
movsl
push
xchg
idivl
add
je
inc
repnz
loop
xchg
xor
add
adc
in
hlt
inc
les
bound
xchg
and
ret
push
loop
xchg
xor
add
adc
in
push
push
push
adcb
xlat
lret
cld
jl
inc
cmpsb
cmp
in
mov
mov
mov
aad
mov
inc
scas
aaa
pop
or
push
movsl
fidivrs
jg
pop
pop
mov
mov
jo
push
cmp
push
les
pminsw
pop
shrb
dec
aam
adc
mov
mov
scas
jecxz
push
and
cld
add
mov
mov
sti
xchg
xchg
dec
outsl
in
cli
mov
push
mov
jb
push
xor
pop
and
add
pop
xchg
stos
mov
mov
test
cmc
imul
test
xchg
cmpl
std
inc
push
pop
mov
inc
in
dec
das
js
xor
sub
loop
xchg
and
xchg
repnz
pop
out
pop
pop
dec
xor
frstor
sub
jno
loope
in
jge
hlt
test
mov
adc
inc
outsl
adc
push
lods
lahf
ds
sti
mov
fnsave
xchg
pushf
movsl
data16
mov
mov
in
out
mov
shll
xchg
aas
insb
ja
rcrb
xchg
mov
lds
hlt
leave
leave
cld
inc
addb
dec
cltd
push
outsb
sub
adc
cmp
into
nop
test
out
xor
shll
add
mov
mov
inc
lods
clc
pop
and
push
xlat
repnz
inc
sbb
mov
sub
push
das
xchg
mov
mov
adc
popa
inc
inc
aad
push
andb
mul
and
lods
add
jbe
cmp
jmp
loop
outsl
or
sub
cmp
dec
add
rclb
loopne
insl
shl
jb
hlt
ds
xlat
sbb
out
xchg
into
xor
xchg
out
insl
orl
sti
shl
popa
add
lret
jne
cmpl
jg
cmp
clc
jle
js
and
sbb
cmp
adc
add
adc
daa
lcall
cmp
pop
cmp
test
leave
xor
adc
mov
add
dec
push
mov
xor
mov
dec
movsl
and
js
popf
mov
xchg
cwtl
sbb
mov
push
and
dec
lds
sbb
adc
cltd
ret
aas
sbb
adc
movsb
fmuls
addl
jg
das
adc
ret
je
adc
xchg
mov
out
cmp
int3
and
xchg
jmp
jp
xlat
fmuls
sub
shlb
or
sbb
fsubrs
sbb
mov
dec
pusha
mov
inc
ret
fldcw
pop
pop
mov
arpl
repz
fnstcw
add
ret
popf
je
mov
xor
dec
in
pushf
cmp
in
or
push
or
stos
push
xchg
inc
adc
mov
mov
sbb
es
std
stos
test
xor
jge
int
push
lds
dec
daa
mov
push
xchg
movsb
fists
jmp
mov
inc
or
test
xchg
jbe
pop
jmp
xor
into
jl
addr16
mov
mov
inc
cmpsl
adc
pop
xchg
cwtl
xor
xor
rcr
rcrl
pop
sarb
adc
xchg
fdivl
popa
test
cmp
sub
pop
cmpsb
add
test
jp
push
in
xor
incl
xlat
clc
push
mov
js
repnz
cmp
push
mov
lcall
pusha
out
mov
mov
loope
notl
cmp
out
inc
in
or
cmp
arpl
call
ds
mov
mov
push
jecxz
hlt
ljmp
inc
adc
lods
jmp
pop
push
adc
movsl
mov
xor
movsl
push
rcrb
push
data16
in
sub
adc
xchg
jno
and
jg
dec
pop
hlt
inc
fsubrl
jne
adc
jg
repz
test
outsb
fidivl
shl
and
jp
int3
lea
in
imul
out
or
int
jnp
jo
insl
mov
insb
dec
xor
pop
stos
ja
je
insl
fsubl
push
push
sbb
sub
push
test
out
push
in
sub
mov
adc
data16
sub
xchg
mov
inc
cld
insb
pusha
sub
inc
lods
sub
mov
push
out
and
adc
adc
cmp
sbb
xchg
add
push
rclb
lods
fstl
and
mov
push
cmpsl
leave
test
cmc
sbb
in
xchg
mov
jbe
cmp
fldenv
sbb
push
test
int
adc
pop
arpl
hlt
in
jo
std
push
pop
nop
xor
les
popa
push
lea
mov
cmc
bnd
sub
mov
lea
das
clc
add
ret
xchg
scas
mov
mov
inc
adc
sahf
cwtl
pop
cmp
outsl
xchg
xor
xor
pop
cmpsl
icebp
dec
addb
repnz
stc
mov
sbb
sub
mov
aaa
push
je
out
jbe
mov
shlb
aad
rorl
fs
xor
rol
stc
icebp
out
xor
inc
mov
and
mov
push
sbb
aam
pop
ds
pop
fldt
loope
cld
jp
fucom
into
jle
ds
std
xorl
adcl
loop
pop
jecxz
pop
adc
or
inc
mov
push
adc
jns
popa
fldl2e
inc
xchg
in
into
int3
pop
push
xor
add
ret
ret
or
mov
es
pushf
sub
cmp
out
out
mov
mov
test
inc
clc
clc
mov
cmp
das
cmp
gs
int3
pop
pop
cmp
insb
loopne
mov
ss
pop
and
xchg
rclb
in
lcall
push
xchg
les
in
mov
xchg
out
repz
fmull
mov
jns
cmp
cmp
mov
mov
pop
ror
or
push
mov
pop
std
push
and
inc
aaa
idivb
jns
ret
mov
aaa
mov
add
sub
loope
test
inc
ss
cmp
je
nop
int3
movsl
fwait
outsl
pcmpeqw
or
sub
stos
push
sbb
dec
shrb
jecxz
push
xchg
pop
scas
push
sub
sti
fdivrs
lret
cmp
xor
adc
xor
bound
jns
clc
inc
and
inc
test
xchg
ss
mov
sub
xchg
mov
push
fwait
mov
pop
jb
loope
xchg
mov
xor
aaa
mov
pop
adc
scas
lods
cmpl
adc
test
jae
popf
and
lcall
stos
stos
sbb
jmp
addb
cmpsb
push
add
xor
clc
push
or
fistl
sub
dec
pop
dec
aaa
sbb
push
sbb
mov
pop
or
stos
pop
xor
mov
add
sti
pop
mov
ljmp
push
cmp
insl
cmp
pop
fmul
xchg
jno
jge
mov
decl
cmp
cmp
repz
push
ds
sub
push
dec
out
pop
inc
push
or
sbb
cmp
ret
cmp
xchg
xchg
adc
test
imul
jo
scas
mov
jns
data16
or
or
push
mov
mov
repnz
jns
dec
mov
popf
push
or
jbe
cltd
cmp
and
mov
scas
mov
mov
rorb
mov
aas
jge
cmp
insb
cwtl
in
add
mov
lea
sub
cld
and
lods
rol
movsb
in
lods
or
mov
sub
movsb
in
mov
into
fwait
dec
fimuls
into
es
xchg
or
sbb
outsl
push
testb
sub
push
jge
xor
insb
xor
add
cmp
leave
pushf
mov
cli
pushf
repnz
ret
add
cli
test
shrb
add
shrl
push
xchg
push
mov
lea
and
cmp
aas
fdiv
ss
scas
cld
push
xchg
mov
shrl
xchg
adc
cmp
jnp
int3
push
rolb
dec
xchg
fldenv
mov
xchg
imul
clc
push
jecxz
pop
mov
inc
pop
pop
add
push
dec
jns
pushf
fstp
mov
scas
ljmp
sbb
dec
arpl
dec
lcall
dec
movsb
cmp
mov
out
cmpsl
add
into
mov
dec
mov
stos
pop
inc
sub
les
push
insl
lret
jo
jle
mov
push
out
mov
jmp
outsb
mov
or
pop
mov
bound
data16
icebp
inc
jg
fadds
shl
outsl
shlb
into
enter
mov
mov
ljmp
push
scas
sbb
sbb
mov
pop
pop
mov
outsb
mov
lods
ret
sarl
mov
out
cld
jecxz
jo
negb
lret
push
repz
adc
sbb
int3
inc
xor
jle
push
je
arpl
jp
mov
aaa
xchg
enter
mov
les
outsl
mov
sub
cli
inc
mov
xor
jg
mov
lods
pop
xor
sbb
cmp
jp
mov
in
mov
adc
and
inc
mov
xor
fucomip
jae
push
mov
mov
orb
jae
adc
sub
js
xchg
lods
jmp
dec
inc
mov
scas
call
test
sbb
cmc
xchg
xor
mov
shll
cmpsb
cmp
sbb
add
into
stos
jo
adc
fiadds
xchg
xchg
mov
inc
mov
stos
lods
and
movl
add
sbb
lods
lret
dec
lds
stc
scas
xor
cmpsb
xchg
testl
dec
jl
inc
sub
fnstsw
dec
xor
inc
leave
roll
mov
in
fcmovbe
sarl
je
inc
mov
aad
push
in
rcl
pop
negb
mov
mov
add
rcrl
fdivl
ja
pop
dec
ror
xchg
stc
sub
push
sbb
mov
or
mov
divb
inc
movsb
adc
dec
popa
push
pop
cld
adc
xor
aad
pop
sbb
jg
cld
scas
jno
andb
lret
imul
xchg
sti
xor
push
cmp
shrb
inc
shll
pop
jae
dec
pop
lret
test
pop
shlb
fadds
mov
in
add
pop
jne
imul
sub
sub
or
xchg
cld
je
xor
iret
sbb
jp
out
xlat
or
mov
xchg
or
mov
int3
push
fwait
mov
xchg
movsb
dec
andl
cld
fwait
js
ret
rol
in
jb
ja
out
lahf
imul
or
mov
sub
xor
shll
jg
mulb
test
call
push
not
jne
xchg
inc
call
imul
sbb
and
pushf
insb
push
jo
in
sbb
stos
or
jmp
dec
fisttps
sahf
mov
dec
popl
adc
es
jg
jno
adc
jae
mov
inc
jbe
xchg
cmc
out
mov
pop
add
mov
push
adc
pusha
fcompl
lahf
daa
fbld
jmp
jp
decb
jbe
xor
pop
lcall
lret
mov
sbb
ja
xor
movsb
imul
repnz
arpl
aaa
jecxz
ja
adc
lret
cwtl
inc
arpl
jl
sbb
outsb
xchg
popa
and
pop
sub
lcall
or
pop
cmp
jnp
ret
sbb
cmp
jg
movsl
mov
add
push
push
mov
sbbl
jmp
sub
push
cs
loope
loope
xor
not
icebp
mov
sub
pushl
ret
repnz
sub
aam
cmc
cmc
into
or
cmp
cmpsb
jnp
jmp
jae
mov
movsb
push
repz
loope
lea
into
fisubl
iret
xchg
lret
xchg
lods
js
xor
js
jle
scas
jnp
inc
mov
inc
fistpll
sti
mull
nop
add
inc
or
pusha
sbb
scas
popa
push
mov
mov
mov
and
ret
push
ss
sbb
mov
in
sbb
loope
sbb
lahf
cli
addr16
jmp
cmpsb
dec
iretw
sbbl
aaa
in
xchg
loope
clc
addb
lds
push
sub
lret
enter
pop
jo
push
lcall
jno
pop
cmp
xchg
fdivs
xchg
push
add
lret
and
jge
cmp
aas
cmp
sub
mov
sti
or
or
sub
fisttpll
dec
xchg
dec
jecxz
mov
scas
movsl
into
mov
fisubrs
and
imul
sti
xchg
shrl
xchg
outsb
aaa
push
shr
pop
inc
aam
fidivs
loopne
add
cmp
sub
ss
gs
inc
cld
mov
fs
mov
and
xchg
inc
mov
fsubrp
xchg
enter
dec
fidivrl
xor
das
fwait
and
adc
jg
push
fwait
mov
sbb
mov
xor
inc
xchg
js
aad
je
inc
aaa
out
mov
mov
add
js
add
push
cli
pop
fnstenv
jns
mov
and
loope
add
add
jp
lret
jbe
lods
lea
and
aas
rorl
aaa
pop
sub
pop
cmp
movsb
and
xor
jbe
enter
mov
jo
cli
cmp
dec
fs
mov
gs
inc
mov
jae
imul
subps
cmp
pop
shlb
int
out
leave
test
xor
jecxz
adc
jp
lods
and
xor
loop
xchg
addr16
jmp
arpl
movsl
mov
add
fidivs
in
mov
test
fldt
pop
pop
pop
fcoml
pop
les
dec
into
movsl
cmpl
or
pop
jno
data16
sbb
outsl
adc
pop
and
xchg
adc
movsl
sti
aad
out
in
and
rcrb
xchg
xchg
adc
cmp
daa
sbb
je
lcall
fisubs
pop
push
push
imul
repz
mov
push
jp
adc
sbb
inc
xchg
sti
jp
or
or
lea
cmp
dec
stos
xchg
es
mov
jge
push
out
jns
push
pop
mov
mov
jmp
test
mov
add
mov
cmp
push
rorl
fstps
sub
fsubr
jl
or
invd
pop
mov
xchg
fcom
rcrl
call
ss
mov
pushf
add
pop
lods
sti
aas
dec
mov
mov
mov
lcall
mov
ds
push
test
ret
out
mov
rorl
dec
adc
out
sbb
mov
imul
ret
push
dec
xchg
loopne
and
mov
icebp
add
rorb
jae
add
test
ja
stos
mov
loop
or
js
inc
call
sbbb
add
fdivl
add
cltd
mov
hlt
icebp
lahf
add
mov
mov
out
sahf
inc
push
mov
push
adc
imulb
rcrl
loopne
mov
cmp
adc
cld
mov
dec
add
jge
pop
mov
loope
jle
cmc
push
or
popf
push
xor
xchg
xchg
jbe
outsb
imul
inc
push
mov
jecxz
pop
fimull
pop
ds
loopne
lret
hlt
sti
lea
dec
subb
lock
sbb
rcll
mov
lds
lret
cmp
mov
in
insb
hlt
ja
enter
push
sbb
jo
sub
pop
xchg
mov
iret
fidivs
jmp
outsw
fdivrl
mov
lock
repz
in
jae
popf
das
ds
mov
leave
sbb
inc
aaa
fwait
jae
ret
or
push
outsl
push
gs
loop
xchg
lods
scas
jmp
addr16
imul
rol
xchg
je
movb
cli
out
sti
xchg
push
add
sahf
adc
lret
pop
or
or
aad
xlat
outsl
pop
inc
icebp
lret
pop
push
pushf
xor
adc
xlat
add
in
orb
iret
cli
cwtl
call
push
bound
gs
clc
stos
movsb
xchg
jmp
fmull
pop
sbbb
rclb
lods
test
data16
into
adc
mov
jb
rorw
insl
pop
sbb
inc
or
mov
push
and
pop
roll
xchg
sub
inc
out
lret
inc
cmp
mov
cli
scas
scas
cmc
lret
xor
pop
push
daa
insb
imul
push
lods
jp
ljmp
cmp
mov
inc
mov
dec
jbe
mov
mov
je
cmpsb
mov
insl
adc
test
inc
jl
xor
fcoml
lret
xchg
dec
gs
cmpsb
push
mov
pop
arpl
and
pop
adc
xchg
jmp
mov
push
dec
je
pop
jmp
cmp
adcl
push
sbb
jae
dec
pop
test
cwtl
lods
ds
loope
xchg
sub
sahf
jae
rorb
mov
inc
mov
out
xor
dec
pop
push
nop
inc
mov
loopne
dec
jne,pn
adc
scas
leave
jo
xchg
shrb
push
ss
adc
mov
add
aad
or
popf
std
les
aad
jns
bound
pop
push
jae
stc
arpl
out
cmpsb
sbb
sub
popf
jno
aam
xchg
out
and
in
jecxz
xchg
imul
dec
gs
in
cmpl
dec
fistl
int
sbb
xchg
mov
push
sbb
mov
sub
adc
mov
jmp
push
popf
add
adc
ljmp
mov
int3
jmp
les
or
insb
mov
xor
lcall
rcrl
dec
fld
mov
inc
mov
shlb
mov
cwtl
jg
ret
leave
shlb
enter
movsl
push
sbb
rclb
mov
loope
mov
mov
pop
test
popa
mov
imul
imul
inc
push
or
mov
inc
into
fdivrl
push
lods
push
shrb
pop
cmc
mov
fs
aad
mov
mov
sub
push
adc
push
lret
lret
inc
jmp
ljmp
lahf
push
idivb
mov
int3
sub
jbe
mov
shlb
lea
sbb
sbb
rclb
pop
push
and
and
ljmp
fistl
mov
mov
mov
jb
xlat
lods
jl
push
pop
xchg
loope
cltd
mov
xor
or
sbb
enter
sarb
xchg
or
jae
xchg
sbb
xlat
test
outsb
dec
leave
xchg
inc
inc
out
out
mov
sahf
push
shll
cmp
test
lahf
mov
pop
pop
dec
ljmp
test
cli
or
or
inc
dec
repz
lods
cltd
fildll
cs
sub
jle
aas
xchg
gs
bound
inc
mov
ja
dec
int
lea
inc
pop
fcoms
push
and
lock
mov
lret
xchg
shr
insb
mov
and
jg
jge
cmp
jne
add
hlt
xor
repnz
stos
movsl
lods
mov
mov
dec
aaa
push
push
adc
mov
scas
scas
push
and
mov
xchg
adc
push
int3
or
notb
add
cmp
ja
outsl
jl
jnp
mov
lea
lock
push
cs
or
test
int
aam
push
jp
cmc
mov
or
rorl
ret
pushf
lcall
xor
fisttps
flds
cmp
mov
rcrb
arpl
fdivrp
test
pop
fwait
dec
or
fbstp
jp
fwait
test
add
lock
inc
in
cmp
arpl
cli
xchg
fldl
shlb
mov
shll
jae
subb
push
sysret
repz
rorb
leave
mov
dec
mov
and
xlat
pop
xchg
sub
pushf
dec
mov
sbb
outsb
imul
insb
xor
shlb
push
dec
mull
lret
scas
jge
dec
sbb
sub
cmp
jmp
pop
mov
roll
xor
adc
jecxz
cmp
pushf
bound
loope
jae
pop
cmpsb
inc
stos
ror
or
adc
call
pop
int
shlb
nop
dec
lcall
adc
sub
ror
mov
xchg
mov
mov
xorl
movsb
adc
shlb
repnz
loop
xchg
xor
add
adc
in
hlt
inc
les
bound
xchg
and
ret
push
loop
xchg
xor
add
adc
in
les
jb
arpl
mov
test
push
and
ret
mov
push
loop
xchg
and
add
cld
mov
sahf
jb
data16
adc
fs
push
xchg
push
sbb
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
iret
jb
popf
jg
outsl
cmp
pop
test
iret
sbb
sahf
dec
mov
insl
scas
jge
lea
jle
outsl
mov
aas
in
das
mov
or
out
cmp
mov
pop
dec
popf
jg
outsl
mov
aas
add
in
ror
jle
jb
dec
cld
sbb
xor
sbb
jge
lea
xor
aas
call
icebp
sbb
pop
push
int3
cmpsl
lock
mov
shr
sub
or
ret
imull
add
int3
add
mov
pop
mov
cmpsb
inc
bound
mov
push
lock
xchg
sbb
pop
jbe
sbbb
and
pop
cmp
ljmp
mov
and
iret
repnz
sbb
sarl
mov
mov
jp
imul
pop
cwtl
aas
in
std
mov
mov
cmp
cmp
cmpsl
dec
dec
and
mov
pop
lods
jmp
jne
shlb
jmp
mov
add
outsl
mov
int
fnstsw
aaa
das
jge
mov
cmp
movsl
mov
fisttps
popf
adc
and
js
dec
cwtl
mov
jge
nop
pop
mov
ret
sub
sub
sbb
enter
int3
daa
cwtl
jp
imul
adcl
push
mov
sbb
mov
sub
popa
ficompl
paddusw
in
das
std
fisttps
out
cmp
mov
lea
jg
outsl
mov
aas
in
das
std
fisttps
out
cmp
mov
lea
repnz
cmp
or
mov
pop
jb
pop
mov
adc
inc
mov
and
mov
jg
sbb
ftst
imul
xchg
jo
cmpsb
clc
mov
shll
pop
mov
push
push
or
push
ret
lock
jb
in
push
iret
adc
fstpl
pop
inc
cmpsb
lods
mov
jl
mov
sbb
int
mov
or
shrl
je
fs
mov
shr
mov
cwtl
or
add
je
cmp
test
xchg
ss
cmp
xchg
inc
ds
cmp
cmp
mov
or
imul
aad
ret
jae
ss
lds
adc
push
roll
sbb
sbb
push
dec
rolb
je
arpl
jno
test
cmp
xchg
add
sub
add
sub
xchg
push
mov
out
shll
mov
xchg
xor
dec
add
icebp
and
pushf
ss
sarb
pop
and
loop
adc
dec
mov
adc
add
inc
rorl
pop
jmp
hlt
lods
xchg
pop
in
cmpsl
repnz
push
out
movsl
in
in
dec
inc
adc
jg
add
push
sti
jge
lcall
mov
stos
popf
out
fnsave
repz
cwtl
fs
jge
frstor
mov
pop
inc
pop
or
xchg
push
mov
cld
jp
xor
mov
dec
insl
dec
aaa
add
mov
cmp
out
pop
lock
mov
test
cltd
inc
or
pop
in
and
in
pop
imul
or
stos
xchg
gs
in
inc
or
scas
jnp
lock
arpl
push
or
das
mov
cwtl
jo
movsl
js
inc
fimull
push
dec
add
pop
jo
push
lret
jecxz
and
test
fldl
xchg
lea
inc
sarl
and
push
jle
dec
lods
mov
inc
sti
ss
and
xchg
mov
adc
dec
mov
gs
test
xor
rcrl
out
or
cli
ficoml
and
cld
pop
mov
inc
or
loopne
mov
mov
add
ja
sub
sub
pop
add
sbb
hlt
xor
insl
sub
call
sub
sti
mov
add
cmc
push
or
enter
divb
les
mov
ja
jecxz
jo
push
or
and
sbb
outsb
mov
jg
xor
jge
pop
iret
jle
and
test
ss
and
adc
aad
scas
mov
jp
dec
dec
cmp
sets
aam
aad
mov
adc
flds
cmpsl
lret
clc
rcrl
in
sti
sbb
cmp
adc
repnz
push
jmp
jo
and
pushf
nop
xor
hlt
or
movsb
shlb
push
mov
jmp
gs
push
adc
dec
std
fdivl
adc
cmp
aas
imul
rol
or
inc
stos
movsl
add
xchg
in
sbbl
in
push
cltd
pop
test
and
adc
pop
test
out
mov
inc
int
add
shrb
dec
ds
andl
add
add
je
sbb
sub
adc
fsubrs
popa
loop
imul
push
jmp
das
sub
dec
push
pop
ret
xor
es
popa
cli
dec
shlb
js
sahf
cwtl
jbe
push
popa
inc
mov
mov
insb
jne
xor
call
mov
out
mov
add
cmpsl
mov
mov
enter
mov
sub
arpl
add
fwait
test
mov
jmp
lret
imul
jo
mov
jo
pop
cmp
and
jl
push
sahf
add
add
hlt
lods
gs
outsl
imul
push
add
xor
inc
and
in
cltd
jecxz
aas
loope
aad
insl
mov
adc
or
js
mov
xchg
push
sub
jge
mov
push
insb
leave
adc
ret
out
rcll
ret
bound
repnz
mov
in
cmp
pop
jbe
mov
dec
sbb
mov
cwtl
mov
enter
xchg
push
aad
hlt
lock
scas
fmull
or
or
xchg
int
mov
xor
lret
dec
sbb
popa
sub
addr16
jae
je
xchg
jne
adc
mov
leave
and
dec
movsb
push
ja
aam
jecxz
aas
sbb
sub
mov
mov
and
fdivrs
cmp
rclb
mov
pop
xorb
outsb
push
inc
ja
mov
cmc
iret
subl
loopne
jne
dec
jbe
sub
sub
gs
lret
mov
push
jne
mov
inc
loope
test
mov
xlat
in
adc
pop
mov
les
std
outsl
lods
push
mov
out
or
sbb
nop
out
adc
fs
lret
inc
add
push
cli
xor
iret
icebp
jg
mov
sbb
adcl
rorb
sbb
sub
cmc
repz
cli
in
repnz
cmp
jae
xchg
pop
sub
cld
and
fsubrs
popa
mov
mov
call
bound
outsl
push
mov
ficoml
out
aas
jo
cmp
popf
testl
xchg
jo
out
rclb
adc
div
and
lds
lret
jge
pop
mov
push
inc
mov
mov
mov
cltd
or
xor
sub
ljmp
cwtl
xchg
scas
pop
fst
out
cli
pop
into
sbb
fmuls
add
pop
popf
push
mov
or
push
mov
or
add
in
aaa
sahf
pop
mov
mov
cmp
xchg
xor
mov
jbe
data16
xchg
adc
fdivr
mov
fxch
jmp
repnz
adc
jg
inc
push
popa
mov
jns
rcll
in
out
ficoml
inc
cmp
ret
ltr
jecxz
fiaddl
rcr
or
dec
or
cld
addr16
fcomps
jnp
mov
jmp
repnz
adc
jmp
xchg
mov
jae
jb
shlb
push
std
pushf
vmovshdup
push
sbb
add
shrb
sti
mov
out
pop
adc
idiv
or
jno
push
pop
cmp
cld
xchg
inc
mov
sbb
loop
jl
imul
mov
pop
jp
fiadds
sub
sahf
scas
in
push
cmp
sbb
inc
mov
mov
pushf
ljmp
test
mov
mov
iret
int3
and
cmp
xor
mov
xlat
push
loop
fcmovnbe
push
roll
jge
sub
push
and
adc
movsb
push
andb
jp
loope
or
fdivrp
and
or
sti
add
jge
cmpsw
mov
test
fdivrp
pop
dec
xor
shlb
cmc
push
imulb
movsb
pop
rcl
mov
mov
push
xor
out
clc
dec
aas
repnz
add
pop
add
jmp
ret
inc
add
icebp
cmp
and
subb
and
inc
xchg
or
mov
adc
rclb
stc
xor
cmp
or
lcall
cli
lods
jp
test
or
test
out
clc
hlt
test
lods
decl
idivb
mov
cmpsb
rclb
pop
pop
mov
push
gs
xor
fisttpl
lods
leave
mov
test
aaa
ljmp
test
rcrl
rorl
dec
xor
dec
bound
jmp
fmull
xor
or
je
fisttpll
xor
lods
push
jb
jb
pop
cmpsl
push
sub
pop
sahf
mov
xor
rcll
jo
rorl
scas
les
iret
xchg
push
cmpsb
cmp
xchg
sbb
sub
shll
cmpb
movsl
fnsave
fmuls
sbb
inc
mov
rcl
mov
mov
mov
nop
enter
jnp
ret
pop
repnz
jle
int
dec
test
inc
pop
push
jmp
or
shrl
add
lcall
jle
test
dec
add
leave
and
daa
loopne
or
mov
aaa
imul
out
push
ret
cmp
push
xchg
mov
in
mov
pop
add
add
jae
add
and
repz
roll
leave
shrl
in
out
xchg
mov
stc
testb
and
outsb
push
rolb
in
jmp
cltd
fwait
add
and
ljmp
in
or
roll
dec
adc
icebp
pop
jge
inc
add
mov
push
fidivrs
jmp
je
adc
dec
orl
das
in
sbbl
out
data16
sub
aaa
pop
mov
je
sarl
lahf
in
xchg
and
rclb
jp
shlb
dec
push
movsb
or
fidivrl
test
jecxz
xor
mov
int
ret
ja
adc
enter
lods
dec
iret
movsl
lret
xor
or
mov
adc
mov
push
adc
xchg
inc
insl
lock
daa
dec
out
jecxz
aam
xchg
shrb
jne
sub
int3
pusha
dec
adc
sbb
fstl
outsb
loope
sbb
inc
nop
iret
or
test
lahf
push
and
adc
inc
pusha
inc
je
mov
popa
or
and
dec
mov
xorl
jns
out
push
out
mov
adc
ja
pushf
mov
loope
jb
out
or
cmp
fwait
test
jno
adc
sbb
adc
out
mov
mov
push
sti
mov
inc
ret
adc
sub
xchg
sbbb
and
xor
shrl
xor
push
push
pop
into
mov
mov
dec
add
lret
or
jl
neg
popa
movsb
jne,pt
push
pop
bound
sub
stos
or
adc
cmp
add
into
stos
inc
pop
test
mov
lret
or
sti
xor
movl
push
lcall
mov
adc
cmp
xor
lea
lcall
leave
xor
ret
andl
daa
cmp
or
add
fnstenv
bound
dec
push
fdivrp
out
popa
lahf
stos
loop
inc
ja
negb
xchg
adc
out
shl
sub
mov
jle
imul
call
jge
lock
pushf
lahf
sub
mov
gs
sarb
ret
popf
insb
das
pop
mov
fwait
dec
mov
stos
lds
imul
inc
lret
cmp
jl
insb
dec
fisubs
lock
dec
icebp
and
mov
jo
adc
sbb
js
mov
mov
loopne
les
aad
jecxz
stos
lock
push
call
repz
or
outsb
add
cmp
lea
sbb
out
sarl
push
rorb
push
js
mov
scas
jp
pop
ds
inc
icebp
cli
jo
lret
and
xchg
mov
popa
sub
decb
sub
pusha
xor
pop
aas
aam
ficompl
xor
aad
in
scas
movb
test
xor
mov
or
sbb
inc
mov
add
xor
jbe,pn
ljmp
mov
jnp
test
xor
sub
int3
push
sbb
cs
dec
icebp
test
xor
pop
bound
sbb
aaa
je
cmpsb
mov
sbb
pop
mov
push
call
push
xor
aam
jae
shrl
icebp
mov
test
es
cmp
push
sub
pop
adc
iret
sbb
clc
mov
sbb
cmp
sub
add
leave
jg
pop
roll
inc
fistl
idivl
mov
cmpsb
adc
mov
in
lea
into
xor
iret
pop
not
repnz
xchg
inc
xchg
pop
out
lods
add
js
xor
and
ljmp
in
mov
xor
or
push
shl
inc
and
xchg
ljmp
outsl
and
inc
push
ss
mov
inc
mov
xchg
sub
adc
push
test
xlat
jmp
pushf
ret
adcl
mov
jo
add
mov
cld
adc
imul
in
jl
std
xor
popa
repnz
jno
lahf
dec
push
jl
xchg
fcomi
cld
movsb
cmc
test
inc
ss
cmp
mov
or
data16
int3
iret
iret
sbb
xchg
ficoml
or
xor
mov
das
jae
dec
lds
mov
mov
in
fcomp
int3
xor
or
icebp
xchg
lahf
jl
imul
dec
nop
jnp
testb
xor
popf
xchg
cmp
fistpl
out
test
mov
pop
push
dec
lock
mov
sbbl
xchg
ljmp
adc
adc
ljmp
mov
sub
ss
jl
sbb
das
lods
mov
fldt
aaa
test
roll
cmpsb
insl
push
dec
mov
xor
add
dec
sbb
mov
fdivl
jle
repz
fcompl
jns
cmpsl
sahf
lods
push
mov
out
sub
jmp
mov
fisubs
lahf
int3
aam
add
push
int3
out
sbb
mov
repz
xchg
adc
inc
sub
rorb
push
movl
jnp
mov
sahf
add
cmp
push
pushf
sbb
repnz
or
pop
push
mov
js
loope
iret
dec
pop
inc
es
xchg
sarl
fsub
pushf
ds
dec
jp
jl
leave
xchg
xor
cli
test
jp
add
mov
xor
cmp
inc
mov
pop
stos
jecxz
or
inc
inc
mov
push
push
loop
ss
aad
dec
das
or
mov
and
daa
adc
jnp
push
add
test
lods
out
inc
sbb
xchg
adcb
and
insb
fistl
and
fwait
inc
mov
bound
clc
idiv
stos
sub
roll
jbe
adc
call
lods
loop
lcall
add
jg
fisubs
hlt
lcall
stos
push
push
inc
mov
sti
int3
or
push
xchg
xchg
mov
sbb
mov
iret
xor
add
jae
mov
aam
push
pop
test
lds
aam
gs
add
int3
dec
cwtl
nop
push
cltd
mov
jp
sub
call
pusha
movsb
mov
jno
lahf
push
mov
jmp
xchg
rcl
in
imul
bndstx
in
sbb
and
int
sbb
xchg
clc
gs
xor
and
dec
cmp
in
jae
ss
or
add
inc
mov
popa
and
mov
push
ljmp
outsl
and
cmpsl
inc
stos
sbb
in
sti
movsl
inc
aad
xor
movsb
ljmp
inc
push
stc
aad
or
es
ret
jle
pushf
aam
sbb
dec
je
mov
cwtl
or
sbb
in
mov
push
adc
cmpl
and
push
ror
into
lea
cli
add
mov
hlt
test
sbb
inc
pop
mov
pop
sbb
push
mov
shlb
xor
push
push
pop
stc
dec
cld
push
jbe
adc
inc
and
imul
mov
mov
sbbl
call
int
imul
test
adc
pop
sbb
stc
add
cmp
nop
pushf
inc
ret
inc
pop
xchg
in
and
pop
xchg
mov
cmp
sbb
lods
and
cwtl
push
orb
loop
sahf
push
fwait
xor
fistpll
jl
sbb
jmp
push
xchg
inc
add
jbe
lcall
cld
lret
xchg
sbbl
mov
cmc
add
adc
ret
adc
cmp
loope
fists
int3
dec
push
imul
insl
or
ret
pusha
cmp
int3
icebp
test
push
mov
push
cmpsb
xor
ds
push
xchg
and
mov
add
or
sub
ljmp
or
mov
outsl
movsb
jmp
lret
das
data16
jno
cwtl
jl
shlb
sahf
xor
stc
int
lret
shrl
or
pushf
adc
cs
jns
test
movsl
pop
hlt
xor
icebp
inc
cmpsb
lret
fcomps
lods
aaa
cmp
in
fisubl
ficoml
jp
lock
push
mov
mov
aam
pop
jb
cmp
les
ljmp
mov
inc
xor
in
inc
cmpsb
mov
jae
or
cmp
icebp
xor
sbbl
jg
mov
push
das
mov
scas
loopne
fadd
mov
and
imul
mov
mov
bsr
jmp
test
rcr
in
sbb
lods
add
rcll
push
iret
popa
leave
sub
lods
fucom
jecxz
inc
mov
clc
dec
subb
orl
inc
clc
adc
push
xor
cmp
and
mov
xchg
loope
mov
sub
xchg
xchg
flds
jns,pt
jno
push
xor
mov
jbe
out
fsts
add
lock
mov
shll
or
fistpll
fsubs
inc
mov
mov
leave
in
jge
packssdw
push
rorb
insb
jle
aas
ret
inc
push
or
and
mov
or
clc
cmp
movb
or
outsl
fldl
jmp
pop
shr
push
mov
call
les
test
push
mov
xor
nop
cmpsb
jle
leave
xchg
push
out
adc
aam
aam
and
lret
add
sbbl
mov
push
dec
mov
leave
dec
jno
aaa
aaa
cmp
loope
inc
or
out
icebp
pop
movsb
pop
pop
mov
popf
lods
mov
outsl
xchg
and
aas
and
leave
adc
ljmp
call
and
jnp
dec
jp
idivl
into
lock
arpl
test
jecxz
pushf
stc
mov
xor
cli
mov
lods
inc
sub
imul
enter
mov
cmpsb
mov
adc
fisttpll
jbe
roll
adc
std
xchg
dec
xor
mov
ljmp
popa
aas
pop
popa
ds
js
icebp
dec
mov
or
jae
xchg
cli
icebp
lea
pop
aam
call
dec
dec
mov
push
cli
jl
out
popa
xor
xchg
mov
filds
jecxz
cmpb
dec
xor
push
or
clc
dec
mov
daa
xchg
jg
leave
adc
out
cmpsb
xchg
dec
aad
in
jb
fsubr
loope
scas
inc
rorb
ljmp
push
ja
push
jp
imul
cmp
aam
sbb
in
notl
outsl
out
add
jp
xor
in
mov
fimull
rcpps
sub
int
fwait
inc
cmp
outsl
pop
inc
stc
push
ja
lods
aas
dec
test
mov
adc
fstpt
xor
and
test
jbe
inc
dec
pop
adc
push
jns
xchg
dec
push
push
repz
lds
mov
inc
push
dec
lret
xchg
sub
sub
dec
sbb
outsb
scas
fstpt
jo
jae
mov
sti
xor
push
pop
fs
orb
inc
repz
jmp
fidivrs
mov
or
sbb
lahf
icebp
aaa
xchg
mov
push
lret
jmp
mov
int3
ds
mov
sub
pop
push
mov
outsb
in
cmpsl
dec
mov
movsl
dec
adc
jg
test
icebp
lahf
push
cmp
adc
xchg
jb
fmuls
add
mov
scas
jb
outsb
mov
dec
cmovge
add
into
fsub
in
sahf
jmp
ret
pop
push
in
sti
outsb
shll
fcompl
cmpl
or
mov
pop
xor
xor
push
xchg
mov
in
and
cs
sbbb
sahf
mov
jnp
and
stc
lcall
rol
and
outsb
lds
jge
aaa
jmp
aas
outsb
push
stc
push
push
cli
adc
inc
push
sub
int3
cltd
popf
loopne
rorb
pop
push
xchg
fidivs
loopne
xlat
test
cmpb
mov
jle
dec
sbb
xor
pop
fnstenv
inc
jecxz
or
add
jl
adc
jle
jl
lea
add
imul
decl
imul
adc
sub
push
xor
lcall
and
insb
cwtd
pusha
push
sub
cmc
gs
jno
outsl
mov
aas
in
das
std
fisttps
out
cmp
mov
lea
jg
outsl
mov
aas
in
das
std
fisttps
out
cmp
mov
lea
jg
outsl
mov
aas
in
das
std
iret
sbb
lahf
dec
pop
mov
lea
jle
outsl
mov
aas
insl
das
std
fcomip
iret
mov
sub
pop
mov
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
pop
sbb
insl
cmp
adc
push
adc
push
and
sub
lods
ljmp
pop
cmp
or
jp
xrstors
aas
stos
lea
mov
or
sub
add
xor
lcall
mov
lahf
aam
cmp
imul
movsl
push
jns
outsl
sbb
loope
push
popa
mov
dec
sbb
sbb
insl
cmpsl
lret
hlt
loopne
mov
jne
inc
lock
inc
inc
xor
and
mov
test
mov
and
jb
fdiv
pop
ja
es
xchg
dec
pop
lea
idivb
or
jb
mov
data16
in
jl
das
or
into
sub
push
ljmp
or
pop
rcr
movsl
cmp
and
daa
mov
lods
inc
pop
sbb
test
and
lock
jecxz
lcall
dec
lret
lea
lea
pop
or
push
sbb
jp
push
lcall
xchg
fiaddl
lods
sbb
jae
jnp
imul
ds
pop
push
push
mov
jmp
stc
enter
dec
jbe
data16
dec
jns
jae
inc
sub
test
mov
call
lahf
mov
pop
or
push
jne
sbb
push
lcall
ficompl
ljmp
jge
or
jp
push
lcall
ficompl
ljmp
adc
subl
sahf
shrl
ret
jne
inc
xchg
jmp
xchg
in
js
js
mov
jns
loope
fmull
add
fisubs
push
mov
nop
mov
add
or
lds
pop
adc
in
jle
adc
in
mov
sub
inc
jo
in
lods
xchg
push
xor
in
arpl
fistps
push
adc
sub
outsb
dec
mov
dec
stc
subl
inc
les
push
popa
pop
sbb
outsb
into
dec
sub
ftst
xchg
cmp
scas
in
dec
addr16
cmp
imul
imul
mov
xor
stos
ds
mov
xor
inc
lret
mov
es
int3
test
cs
int3
sahf
stc
hlt
push
push
cmpsl
rorb
jp
stc
in
mov
mov
divl
lods
shrb
jmp
push
mov
data16
gs
incb
push
cmpsb
gs
sub
in
inc
rcrb
or
popf
imul
adc
dec
jne
loope
stos
fsubl
sbb
mov
orb
dec
sub
cmc
xchg
sub
push
push
ljmp
rcrl
sub
stos
and
bound
ds
push
je
loop
or
shlb
ljmp
and
sub
dec
fwait
loope
and
repz
ljmp
testb
insb
repnz
mov
dec
sub
push
add
and
mov
mov
and
and
in
in
jbe
mov
pop
ljmp
xchg
lea
jge
adc
and
mov
push
lcall
dec
add
xor
rcr
loope
outsl
movlps
pop
insb
xor
adc
and
sub
sub
subb
cmp
testb
ljmp
hlt
stos
pushf
cs
pop
mov
sbb
pusha
pop
gs
jg
jg
leave
sahf
mulb
xor
xchg
mov
jle
sahf
lret
xor
and
dec
notl
jl
stc
push
lds
jns
adc
pop
mov
pop
mov
sbb
add
mov
adc
cmp
jl
cld
sbb
pop
pusha
jno
mov
dec
cmp
hlt
sbb
or
je
sbb
ja
in
pop
pop
mov
sbb
andl
cmp
xchg
cli
lret
sbb
clc
xchg
orl
ss
fnstenv
test
inc
lock
jecxz
daa
jge
int
out
mov
jp
movsl
jo
shld
mov
and
or
add
xor
fsubrs
lods
ja
ds
insl
mov
lahf
clc
cmpl
mov
xor
mov
shlb
sbb
fldcw
push
mov
adc
push
lea
fcmovnbe
xor
lcall
dec
dec
sbb
or
call
cmp
loop
popf
or
cltd
fcoms
mov
mov
xchg
xchg
in
sub
roll
data16
cli
cld
and
push
out
fwait
loop
aaa
fldt
push
dec
adc
add
inc
dec
into
or
push
fistpll
je
mov
adc
dec
data16
rclb
dec
movl
jecxz
lahf
fs
mov
cmp
es
unpckhps
cmp
lahf
and
mov
inc
pop
outsl
lods
into
shrb
ljmp
pop
out
or
stos
jmp
fidivl
sbb
jbe
pop
xor
pop
lcall
test
repz
adc
loopne
mov
les
incl
sub
mov
fwait
sbbl
test
loope
cmpsl
aad
clc
mov
test
stos
cmp
mov
rcrb
sbb
push
push
pop
ret
movsb
push
call
push
aas
jle
jp
mov
xchg
frstor
imul
fisubs
imul
and
inc
lret
or
mov
stc
inc
jns
mov
cmc
divl
jbe
sbb
xchg
sbb
popf
sub
adc
out
jp
ja
cli
std
and
sbb
bound
andb
or
scas
rolb
in
inc
adcb
mov
and
sbb
cli
xlat
xor
xchg
mov
jo
cli
sbb
sub
test
pop
outsb
and
cmp
mov
inc
mov
sub
mov
aas
mov
mov
push
sbb
cs
insb
jo
scas
test
jne
mov
jns
cld
push
xchg
push
cli
jns
add
mov
shrl
push
call
addr16
std
jne
adc
and
out
scas
push
loope
inc
outsl
sbb
sbbb
fs
xchg
jmp
lahf
jae,pn
pop
jb
push
xchg
out
or
mov
pop
popf
pop
mov
adc
lret
call
inc
sbb
lods
sbb
jae
mov
fisubs
jle
xor
push
test
mov
stc
idiv
mov
sti
push
out
repnz
mov
lcall
lods
outsl
lods
sbb
popf
push
xchg
std
fstpt
sbb
xchg
mov
push
sub
push
inc
push
lds
sarl
out
adc
add
cwtl
push
repz
push
jge
pop
in
push
mov
cltd
or
loope
nop
stos
xchg
lea
push
nop
jle
jle
ret
mov
aam
inc
hlt
xor
cli
adc
xchg
lods
lds
stc
ret
fsubrl
dec
pop
xor
cmp
xchg
cltd
push
mov
and
mov
push
mov
dec
fcmovu
adcb
mov
ds
int
repnz
xchg
jne
sub
fldt
dec
std
cmp
rcrl
pop
dec
jbe
mov
pushf
loopne
push
sbb
cmpsl
mov
icebp
daa
xor
subl
mov
sbb
loop
clc
repz
cld
mov
lcall
mov
out
pop
jg
pop
cmp
gs
mov
pop
jmp
icebp
or
jg
mov
jns
imul
push
lods
xlat
inc
xor
cmpsb
mov
push
push
ljmp
pop
cli
inc
fdivp
test
sub
scas
pop
mov
jle
cmpsl
inc
lcall
fists
std
inc
sarl
dec
mov
pop
jno
inc
add
addr16
cli
and
and
adc
arpl
pushl
xor
pop
push
add
imul
inc
adc
xor
roll
dec
enter
pop
repz
pop
pop
cmp
or
jmp
xor
or
sub
or
adcb
mov
jg
orb
cld
call
inc
mov
ljmp
test
lcall
loopne
cld
lahf
cmpsl
mov
data16
movsl
cmp
add
mov
pop
cvttps2pi
out
adc
push
cli
aam
mov
and
negl
mov
jle
incl
cmp
xor
cmp
jmp
notl
pop
jp
hlt
adc
mov
xchg
cmpsb
pop
add
mov
lods
cltd
add
pop
inc
xchg
fildl
and
pop
out
fistl
push
add
xchg
sbb
jnp
mov
repz
es
pusha
mov
iret
xchg
pop
int3
lods
mul
idivl
mov
andl
inc
jle
dec
xchg
or
dec
pop
mov
and
sbb
jne
sbb
jecxz
in
xchg
test
lds
push
mov
ss
xchg
sbb
and
in
or
mov
xchg
repnz
or
or
inc
mov
lock
cli
orb
lret
sub
test
jns
dec
into
dec
sbb
outsl
mov
movsl
push
dec
adc
xchg
cmc
rolb
and
sbb
and
push
mov
outsl
pop
lods
pop
mov
ret
hlt
jmp
fxch
int
mov
jo
vsubpd
xchg
iret
inc
test
jle
jp
out
sbb
lds
sbb
xchg
mov
adc
in
mov
sahf
ficoml
or
mov
sarl
mov
loop
jns
dec
adc
addr16
pop
popf
out
aam
mov
push
mov
fcmovu
movsl
inc
sub
jb
push
inc
inc
mov
imul
cmp
sbb
cltd
mov
cmp
jae
fmull
jmp
cltd
sub
je
fsubl
push
mov
hlt
inc
inc
or
jmp
xorl
ret
sub
lods
mov
enter
aas
cwtl
dec
lds
jg
mov
xor
dec
mov
xchg
ss
pop
sbb
incl
cli
mov
push
mov
imul
pop
sub
inc
clc
fidivrs
pop
cmp
mov
fildl
pop
aas
aas
sbb
shlb
ret
fstps
cmp
ds
leave
xchg
dec
repnz
cwtl
psubw
fwait
out
cltd
adc
icebp
push
xlat
xor
mov
push
mov
mov
push
loop
sar
mov
sarb
dec
jmp
faddp
fwait
ja
and
shr
xchg
mov
dec
sub
js
xlat
movsb
cmpsb
or
xchg
stos
ljmp
inc
xchg
xchg
jb
jne
fwait
mov
aaa
jle
das
sub
pushf
insb
push
mov
add
xchg
mov
insb
repnz
cmp
xlat
pop
xchg
hlt
cwtl
test
mov
and
pusha
shl
jp
xchg
scas
pop
push
dec
adc
fcomps
push
ljmp
push
jbe
int
mov
pop
lret
pop
inc
adc
adc
mov
sub
mov
je
inc
jns
fiaddl
or
shll
push
jge
xchg
pop
std
lret
add
inc
cmpsl
pop
clc
sub
adc
std
add
stc
insb
xchg
or
notb
sahf
or
enter
cwtl
pop
lock
lods
insl
xlat
jl
test
pop
testb
xchg
mov
inc
test
adc
sbb
aaa
out
xchg
ror
xchg
push
jne
or
push
inc
inc
push
mov
push
cmp
or
movsl
shl
xchg
add
mov
mov
mov
shll
out
stos
sbb
jbe
push
cwtl
jmp
mov
push
ss
arpl
loope
xchg
add
ret
xor
mov
daa
into
and
mov
movsb
mov
add
pop
jecxz
lock
cmp
cmp
and
cwtl
add
mov
push
mov
xchg
mov
and
movsl
pop
mov
add
push
or
push
or
arpl
jge
push
xchg
jae
pop
and
mov
cmpl
cmc
adc
pushf
lods
lock
enter
test
push
fildll
jns
sub
pop
cltd
push
push
pop
adc
loopne
insl
mov
inc
movsb
mov
inc
jle
xor
mov
cmp
lret
xchg
test
mov
push
jecxz
inc
out
arpl
ljmp
lock
scas
sarb
out
jmp
insl
cmp
cs
imul
jnp
adc
adc
xor
fiaddl
fdivr
sahf
lcall
xchg
or
bndstx
test
inc
movsl
and
mov
push
lret
dec
mov
mov
out
xor
mov
aam
clc
sub
pop
sbbl
imul
stc
lea
enter
sub
or
or
es
jle
xchg
movsb
mov
push
rorb
xor
popf
sbb
mov
add
imul
adc
insb
lods
cltd
in
lahf
add
push
add
pop
pushf
lea
jno
stc
jmp
std
js
ljmp
push
and
mov
gs
icebp
mov
rclb
sub
sbb
push
shrb
mov
stc
cltd
je
xor
jle
imul
cwtl
mov
jg
cwtl
xchg
mov
lret
jne,pt
fistpl
pop
xchg
clc
xchg
pop
push
std
push
jmp
and
sbb
sbb
hlt
jb
fidivrs
add
sahf
aam
ss
sub
stos
mov
push
xchg
lods
fnsave
push
xchg
aas
jb
sub
ja
jmp
push
fsubs
push
loope
addl
arpl
sub
pop
lret
sbb
dec
in
inc
in
iret
jecxz
jae
push
aas
or
mov
andb
pop
dec
cmp
or
push
insl
imul
rol
mov
push
mov
enter
jnp
fldt
roll
xor
addr16
xor
inc
in
inc
lods
jae
addr16
into
or
es
jge
das
jbe
sbb
mov
pushf
jb
add
xchg
sub
repz
dec
fstps
mov
add
xor
xor
js
notl
mov
and
testb
dec
adc
jo
jnp
sub
outsb
loopne
or
cmp
mov
stos
cmpsb
xchg
xor
test
mov
lds
mov
push
inc
icebp
xchg
cld
sbb
insb
jo
jle
add
xchg
ret
pop
mov
pop
lock
pop
imul
es
into
mov
gs
adc
lock
out
or
test
inc
push
mov
sub
xor
pusha
add
and
decb
pop
jb
ds
mov
shlb
cmp
jp
out
sub
jne
pop
adc
lret
pop
dec
sub
pushf
imul
push
mov
and
mov
jbe
xchg
push
sub
test
jmp
xchg
xchg
dec
mov
xor
push
push
lret
jg
mov
lods
fsubrp
mov
fildll
jne
fidivrl
imul
cs
std
pop
or
jnp
stos
adc
sub
pop
add
mov
fsubl
lods
push
js
sub
aad
out
mov
aaa
cmpsb
jg
popa
dec
cmp
data16
outsb
inc
lret
aad
test
lcall
add
stos
pop
mov
push
mov
lcall
leave
out
xchg
push
push
arpl
mov
sti
aam
sbb
adc
shlb
xor
fdivrl
hlt
push
mov
push
imul
cmp
mov
rcrl
aam
pop
movsl
push
scas
stos
and
int3
adc
dec
sub
popf
and
cltd
and
xchg
mov
push
jo
cmp
dec
mov
and
xchg
and
mov
and
cmp
cmp
add
rcl
data16
mov
scas
dec
aam
add
push
subb
sti
shll
add
in
pop
pop
data16
jno
inc
ds
aam
repnz
push
loope
mov
dec
outsb
add
sbb
loope
add
xchg
or
cwtl
push
repnz
mov
imul
xchg
add
enter
test
in
fimull
outsl
ja
xchg
push
cltd
mov
pop
lock
test
nop
push
push
mov
in
cs
jns
out
xor
or
dec
leave
mov
push
cld
push
sub
stos
stos
stc
mov
sahf
dec
jns
mov
mov
pop
adc
les
popf
or
push
xchg
ret
or
dec
bound
add
aas
test
insb
xchg
xchg
movsl
in
inc
in
ja
inc
or
push
mov
and
loope
ss
call
push
lock
imul
repnz
inc
jns
dec
xchg
push
xor
mov
enter
mov
pop
mov
push
mov
sub
inc
out
ret
nop
adc
divb
xor
lcall
fwait
dec
cli
jl
sub
cltd
fldl
lea
btr
jp
jle
fiadds
jge
pop
idivl
inc
jmp
je
cmp
jg
leave
js
sub
mov
test
nop
sbb
mov
iret
push
sbb
pushf
int3
adc
pushf
xlat
pop
cltd
mov
or
mov
push
aam
cmpsb
in
push
sbb
push
add
sbb
adcl
cs
mov
push
push
jecxz
out
movl
mov
sti
mov
jg
jmp
sti
cmp
and
cmpsl
insb
fidivrl
mov
xchg
pop
push
out
ret
add
repz
inc
faddl
jmp
jne
sub
dec
ss
sbb
daa
in
test
rcrl
jne
clc
lcall
mov
mov
cli
xchg
bound
cmpsl
jp
fadds
popa
lret
mov
rcrl
xorl
jb
mov
popa
mov
nop
xor
pop
sub
fidivl
inc
test
mov
xor
push
pop
mov
or
and
scas
push
inc
cmp
push
fwait
push
out
xchg
stos
and
arpl
mov
out
jae
pop
jnp
dec
std
cmpsb
inc
and
mov
js
sub
call
inc
xor
lods
out
mov
xor
iret
ss
sub
out
mov
js
add
mov
out
jmp
sub
sti
mov
push
lcall
ret
inc
mov
add
pop
aas
shll
add
cmp
mov
jbe
imul
add
mulb
cmpsl
inc
push
sti
in
push
cmp
aas
imul
inc
fistl
sbb
or
mov
mov
imul
push
mov
push
fsubs
inc
incl
ret
add
lock
dec
inc
push
sbb
sbbl
or
popf
aad
inc
adc
xchg
cs
leave
in
popa
addr16
pop
mov
stos
out
scas
or
enter
movb
xchg
loop
ss
xlat
mov
loopne
imul
sbb
subl
inc
sub
cmpsl
cmp
daa
mov
mov
xchg
and
push
out
inc
lret
add
inc
clc
mov
sub
pop
fsub
mov
pop
jbe
jl
sti
insb
rclb
and
sub
jp
ja
push
dec
loopne
testl
jne
push
scas
sub
stos
mov
xchg
push
or
fiadds
add
je
or
adcl
negl
adc
insl
sub
daa
int3
jbe
cmp
loop
xchg
cmp
mov
jecxz
and
dec
mov
icebp
lret
cmp
mov
jbe
rcrl
cmp
stc
lea
pop
pop
push
cmp
pop
pop
dec
lret
xor
je
mov
mov
iret
jno
dec
mov
lcall
dec
rcll
xchg
sbb
mov
mov
cmpsl
lret
mov
testb
push
arpl
fmul
mov
aaa
pop
sbb
pop
xchg
aad
inc
cmp
out
mov
cmp
decl
sahf
mov
mov
sbb
es
orl
inc
clc
adc
or
in
mov
sbb
mov
inc
mov
pushf
cld
movsl
call
xor
scas
aaa
sub
loope
hlt
pop
inc
mov
mov
add
mov
add
push
sbb
ljmp
push
push
jg
cmp
xor
push
lret
call
sub
push
mov
push
dec
jno
rep
xchg
das
and
and
outsb
in
push
push
push
sub
je
rolb
mov
icebp
jecxz
jo
dec
dec
xlat
loopne
adc
xor
fwait
imul
inc
dec
rorb
push
cmp
adc
subl
idivb
cmp
stos
out
cmpb
in
and
jne
mov
inc
inc
out
test
xor
int3
ret
fldl
int3
mov
mov
or
fs
jmp
fwait
inc
icebp
sub
jle
mov
jo
addr16
pop
enter
adc
insl
push
cli
mov
js
inc
test
imul
mov
or
pop
insl
loop
cmc
pop
mov
mov
jmp
mov
lds
mov
pop
shl
and
addr16
push
outsl
popf
cmc
lret
push
add
jle
fimuls
jle
cmpsl
repnz
or
push
cmp
mov
hlt
fcmovu
fldt
xor
aaa
mov
fsubl
sub
or
push
insb
in
mov
pop
xchg
push
jae
into
rclb
and
in
out
sbb
mov
inc
pop
pusha
repz
sbb
sti
pop
mov
adc
psadbw
aas
sbb
xor
outsb
hlt
lret
lock
sbb
andb
int3
sbb
push
xchg
lods
or
add
out
int
adc
push
mov
adc
cmp
or
loop
insl
cmp
or
jp
push
lcall
ficompl
ljmp
jge
or
jp
push
lcall
ficompl
ljmp
jge
or
jp
push
lcall
ficompl
ljmp
jge
or
jp
stos
xor
std
push
adc
adc
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
push
adc
inc
jae
arpl
sbb
push
dec
inc
adcl
and
xchg
aad
sub
pop
adc
jae
arpl
adc
inc
xor
dec
adcl
mov
mov
mov
cmc
stos
movsl
push
add
or
jp
push
rcll
adc
sbb
les
arpl
arpl
aaa
repz
cld
repnz
int3
testb
stos
pop
adc
dec
inc
ljmp
cmpsl
lahf
push
outsl
jl,pt
dec
or
push
lds
lahf
xor
lods
add
pop
jae
jecxz
fwait
mov
sbb
xchg
xchg
cmp
or
sbb
cmp
and
daa
push
adc
add
xor
and
inc
cld
jo
mov
in
adc
sbb
push
lds
pushf
mov
fucomip
arpl
pushf
adc
loopne
pusha
mov
insl
out
inc
decl
sti
mov
add
popa
sub
cmp
repnz
push
mov
mov
pusha
pushf
inc
and
mov
push
inc
inc
xor
repnz
std
pushf
repz
popf
cs
shlb
adc
dec
jge
jbe
and
xor
adc
in
scas
movl
dec
jp
bound
pop
sbb
jmp
xor
loop
nop
loopne
out
xchg
loop
and
loopne
pop
and
add
jo
pusha
rcll
jecxz
xchg
rolb
loopne
adc
jae
arpl
adc
inc
xor
pusha
rcll
jecxz
xchg
rolb
loopne
adc
into
pop
aaa
and
js
rcrb
sarb
ror
push
inc
sbb
test
ljmp
call
out
jecxz
jne
dec
or
mov
xor
pmuludq
sub
hlt
notl
pop
xchg
add
jge
mov
lret
in
jmp
dec
cmp
fldenv
pop
lods
jmp
insb
ds
fstl
rcrb
mov
jl
dec
rclb
inc
inc
mov
mov
outsb
lcall
fisttpl
dec
sub
sbb
jecxz
mov
pop
imul
xchg
lret
lahf
stc
jno
pop
cmpb
daa
mov
xor
pusha
lock
int3
dec
out
jo
pop
cld
pop
jb
stos
aas
pop
out
sahf
xor
lds
jg
icebp
test
pop
lds
jbe
int
iret
xchg
out
and
addb
push
cmp
mov
outsl
add
mov
pop
pop
js
mov
out
dec
arpl
dec
nop
mov
popf
ds
or
std
aaa
mov
cmp
test
xchg
jl
mov
or
and
mov
push
fs
out
pop
and
sti
sub
popa
subb
dec
ss
dec
out
leave
imul
dec
outsl
fidivs
xchg
movsl
mov
or
in
cli
push
cmp
pop
jae
jle
and
fcoms
lahf
loope
pop
pop
pop
sub
jns
ja
cmpsb
dec
aam
insl
add
push
cltd
aad
jmp
filds
push
mov
adc
push
or
call
lcall
mov
xchg
iret
mov
aad
mov
neg
push
mov
mov
pop
in
leave
stos
jg,pt
jns
inc
and
adc
xor
inc
test
sub
xor
xchg
add
adc
jnp
popf
fwait
hlt
cli
mov
in
rclb
iret
cli
fwait
xor
add
hlt
scas
mov
pop
lock
or
xor
xlat
xor
data16
in
ss
ds
mov
add
lret
cmp
xchg
ret
fistpl
ljmp
jmp
aad
dec
adc
mov
push
cmpsl
and
xchg
sbbl
adc
jmp
ljmp
lahf
pop
lock
or
or
push
mov
mov
ret
in
mov
or
lcall
aaa
cltd
out
sbb
mov
add
sub
lods
je
push
jns
negb
mov
das
cmpsb
pop
or
and
jmp
inc
cmp
add
sub
sbb
push
inc
cmp
xor
add
lret
fmul
stc
sarl
in
xor
jns
jnp
fistps
cld
xchg
mov
jno
sbb
int3
popa
shrb
mov
into
xchg
in
stos
mov
inc
pop
lds
xchg
into
pop
pop
cmp
and
cmp
jmp
ret
xorb
pop
mov
jns
jnp
and
sbb
jecxz
fdivrl
jnp
jno
ret
cwtl
lock
aas
add
adc
cmc
mov
xchg
gs
add
test
gs
je
and
and
xor
push
and
aaa
pop
or
imul
xlat
mov
sbb
int3
xchg
add
mov
xchg
cmp
insl
mov
push
sub
movsl
push
rcrb
fisubrs
inc
inc
jo
fldl
inc
adc
xchg
mov
fs
in
pop
add
xor
imul
adc
adc
pop
adc
jle
jne
imul
pop
gs
push
enter
mov
fdivrl
shrl
gs
stc
repnz
in
jns
fs
test
jmp
imul
jmp
jp
std
jmp
cmp
aaa
jp
in
sub
push
cli
cwtl
ljmp
cmpl
or
mov
jl
bound
lea
int
jns
cmpsb
or
repz
div
adc
xchg
or
lahf
sub
cld
or
lahf
jecxz
pop
push
inc
add
jle
icebp
xlat
mov
dec
sahf
mov
popl
repnz
jmp
adc
test
bound
out
mov
test
xor
aad
outsl
mov
lret
xor
cmp
imul
cltd
out
arpl
es
push
iret
loope
daa
cmpsb
inc
xchg
aam
mov
sub
mov
mov
imul
xor
iret
not
lea
cmp
nop
sti
enter
push
jbe
jg
loope
lods
pusha
mov
mov
or
aaa
sub
xchg
movb
aad
lret
jmp
popa
int3
test
xor
xor
adc
mov
out
sbb
xor
lods
pop
lods
push
popa
sub
dec
push
in
jle
jecxz
daa
out
dec
add
cltd
xchg
inc
cltd
int
imul
push
pushf
mov
jp
mov
inc
popa
adc
das
aad
lea
sahf
inc
sub
or
pop
xchg
cmpsb
add
scas
and
add
xchg
dec
mov
nop
fidivs
cmp
inc
es
hlt
adc
daa
je
ror
jp
jmp
xchg
inc
inc
xor
rcrb
cltd
cmp
sarb
nop
ljmp
je
fs
imul
dec
in
sahf
mov
movsl
or
repz
mov
sub
rorb
xor
int
enter
mov
pop
jne
cmp
in
popf
and
mov
stos
sub
js
sub
push
cmpl
pushf
adc
int3
pop
test
xchg
shrb
xchg
addr16
xchg
test
aaa
mov
mov
fstl
jg
sbb
jo
and
test
mov
jae
pop
fcmovbe
shll
adc
mov
addr16
pop
ret
mov
sti
ret
xor
lods
mov
dec
jae
fldt
xchg
mov
fwait
scas
iret
dec
jne
pushl
in
lret
sub
movsl
adc
pop
fsts
fldl
pop
xchg
imul
mov
push
and
sbb
sub
jns
mov
sub
pop
cwtl
ds
xchg
fnstcw
pop
cmp
cltd
loopne
lcall
xchg
aam
and
test
or
mov
sub
sahf
adc
ds
lahf
or
aam
push
add
cltd
mov
cld
inc
mov
inc
es
add
repnz
inc
mov
push
dec
data16
rclb
mov
pop
int
clc
or
sbb
cmp
or
aaa
leave
fisubl
pop
or
test
xchg
inc
sbb
inc
add
inc
ret
lret
js
or
or
imulb
mov
test
push
push
push
jl
lret
nop
loope
dec
adc
mov
repz
nop
cmp
in
adc
xchg
gs
fisttpl
insl
push
xor
inc
loop
cld
mov
mov
pushf
inc
dec
das
pop
push
lcall
push
test
xchg
sub
sbb
xchg
adc
mov
dec
lods
adc
sub
push
lea
cmpsl
inc
call
ds
mov
sbb
fstpl
cmp
lahf
cmp
ljmp
or
lret
lahf
das
add
and
loop
daa
sub
out
cmp
popf
push
mov
cmp
ja
push
push
repnz
mov
fcoml
clc
aam
inc
cmp
rcr
enter
pushf
std
in
int3
sbb
cwtl
outsl
xchg
loop
jp
jl
popf
das
cli
andb
cmp
scas
in
xchg
add
jecxz
mov
ljmp
or
sbb
shr
inc
mov
fcoml
jge
mov
and
xchg
adc
sbb
xchg
ss
andl
dec
test
inc
mov
sub
rorb
out
aad
inc
lods
fdivs
mov
sbb
jge
lock
add
in
in
xchg
cli
fsubl
lock
mov
ret
xor
icebp
push
and
mov
insb
sub
mov
icebp
into
dec
sub
stc
fwait
jae
subl
lock
add
dec
mov
adc
rcl
jmp
int3
outsl
pop
les
push
jg
cmp
mov
test
or
cmp
adc
mov
mov
sbbb
movsb
icebp
xor
ret
lods
adcb
addr16
mov
inc
popf
stc
sbb
fsubr
push
js
jb
push
fldl
add
cmp
push
iret
pop
iret
lds
push
jmp
mov
cmp
mov
int3
popl
xor
dec
xchg
lods
mov
fimuls
lods
subb
addr16
and
popa
xchg
lods
decl
or
into
cltd
cmp
jl
test
or
je
adc
test
adc
xor
popa
ds
mov
mov
push
xor
jns
lcall
sbb
cmovp
jmp
add
fwait
mov
or
mov
jp
out
stc
add
ret
test
jns
lds
sarl
insl
insl
push
scas
mov
jns
push
in
push
cmp
out
popl
or
cli
push
fidivrs
xchg
xor
push
ds
test
sarb
insl
mov
fst
mov
sbb
adc
xor
rep
mov
in
loope
mov
hlt
enter
dec
imul
add
push
pop
jecxz
jns
mov
xchg
sbb
into
push
mov
xlat
dec
sub
aas
cmp
sbb
in
xorl
movsb
out
or
and
iret
jns
dec
loope
das
mov
mov
inc
stos
test
out
loop
jne
xor
adc
std
mov
clc
sbb
xor
jae
es
or
mov
push
lea
pop
test
mov
mov
jae
sahf
cmp
cs
in
ja
jbe
adc
add
inc
shl
mov
test
aad
dec
sbb
adc
sub
in
xor
sub
dec
inc
fwait
lds
push
or
stos
pop
lret
mov
ret
in
fdivrp
mov
mov
aas
aad
lods
inc
out
mov
dec
cmp
cs
bnd
xchg
cmp
xrelease
repz
jp
jae
xor
nop
mov
fidivrl
fildl
pop
pop
orb
movsb
sbb
cmpsb
dec
pop
mov
loop
idiv
jmp
adc
adc
sub
clc
mov
dec
inc
xchg
aaa
jge
dec
andl
ja
dec
and
lods
lret
and
jecxz
xchg
dec
movsl
shl
xor
je
scas
mov
dec
push
xchg
lcall
movsl
in
lahf
adc
testl
out
jle
fsubl
xchg
jecxz
mov
sub
mov
sbb
lds
cwtl
es
and
fdivl
cmp
adc
stos
movsb
bound
mov
mov
into
mov
push
mov
into
inc
lret
std
arpl
dec
add
jl
out
pop
add
jne
adc
pop
cld
pop
out
dec
decb
movsl
jbe
shll
mov
movb
data16
xchg
insl
cmp
dec
sub
imul
pushf
or
andl
out
jmp
div
mov
sbb
ljmp
and
mov
cmc
insl
and
jae
repz
in
jmp
mov
mov
jno
sub
lret
mov
fisttps
xchg
adc
stc
iret
mov
pop
mov
or
cmp
xor
xchg
jno
dec
mov
add
or
push
adc
pop
inc
jbe
fsts
imul
adc
pop
outsb
add
cmpl
call
jmp
lds
test
in
popa
scas
outsl
sti
fs
cmp
jg
ficoms
in
rorl
push
xlat
in
into
add
je
mov
push
aam
test
jmp
jecxz
cs
mov
int3
pop
roll
test
cld
add
mov
outsb
scas
pop
xchg
in
jns
loopne
js
dec
ljmp
push
xchg
js
andb
call
adc
adc
icebp
dec
mov
dec
push
lock
inc
dec
out
adc
repz
out
test
sbb
mov
in
push
mov
cmc
xor
cltd
cltd
cwtl
les
in
das
cmc
jmp
pop
hlt
ficompl
pop
mov
pop
insl
popa
cld
push
xchg
mov
jp
sti
fldt
push
xor
repz
push
xchg
loopne
dec
or
mov
mov
andb
out
aam
divl
nop
add
push
or
cmc
ja
pop
xchg
mov
sbb
loop
nop
cld
mov
add
insb
out
aaa
aam
mov
addl
mov
jae
push
xchg
xchg
mov
cmc
push
xlat
int
ret
in
mov
test
xor
sub
jae
pushf
mov
mov
sahf
fs
dec
call
mov
pushf
cmp
dec
pusha
pop
push
or
xchg
pusha
sub
push
aaa
inc
push
xor
ficomps
jbe
jnp
add
cltd
pop
or
inc
cwtl
inc
push
cmpsl
ljmp
pop
imul
jmp
inc
fsubs
sbb
stos
xor
mov
loopne
push
xchg
lock
xor
pop
xchg
mov
rorl
rcll
movsb
test
in
xchg
and
push
cmp
jnp
xchg
add
cwtl
test
jp
dec
lds
jo
stos
sbb
ljmp
int3
repnz
das
mov
cmp
push
lock
cmp
cs
adc
dec
jae,pt
addb
loope
and
or
clc
xor
je
pop
inc
out
icebp
ss
mov
xor
pop
arpl
mov
ret
out
sarl
add
jo
xor
div
dec
mov
popf
std
add
push
mov
xchg
std
data16
ret
xchg
mov
push
dec
xchg
pop
and
imul
xchg
inc
dec
icebp
adc
mov
mov
xchg
iret
xchg
adc
incb
adc
adcl
dec
dec
mov
enter
mov
xor
stos
mov
pusha
mov
addr16
mov
fsubl
sbb
mov
cltd
aam
js
jmp
and
dec
jg
js
sub
lcall
jecxz
sahf
adc
les
or
push
mov
cmp
stos
xorl
out
mov
mov
cmc
mov
out
pushf
dec
or
movsl
popa
xlat
push
movsb
adc
bnd
xchg
mov
or
loopne
movsl
mov
push
addr16
xlat
hlt
dec
loop
mov
out
into
sub
and
lods
jecxz
jge
mov
sarb
testb
fcoml
xchg
and
mov
xor
cmpsb
lods
mov
sbb
xor
jmp
shll
int3
xor
rorl
xchg
subps
nop
or
pop
testl
fs
aaa
mov
fcomp
psraw
push
add
adc
aas
movsb
aam
dec
dec
lods
pop
fcoms
lock
push
mov
xor
add
jmp
test
mov
add
push
mov
adc
sbb
dec
add
loope
dec
in
pop
pushf
jge
pop
sbb
sbb
jle
sub
inc
inc
jne
and
xchg
xor
mov
mov
add
addr16
adc
addl
pop
addl
mov
or
iret
push
push
inc
mov
outsl
andb
fdivr
sti
orb
ja
mov
mov
aad
lea
sti
es
cmp
adc
mov
bound
sub
sbb
stos
mov
outsl
out
movsl
sarb
jae
xchg
imul
pushf
jo
movsl
imul
sti
jmp
add
dec
pop
fistps
popf
cmp
add
movsb
inc
jno
xor
dec
mov
sbb
insl
aam
mov
jo
lret
dec
stc
jb
aaa
cmp
arpl
jno
cmp
ljmp
push
xor
dec
mov
inc
das
xchg
cmp
pusha
iret
les
pusha
sahf
dec
xor
or
fldcw
es
stos
adc
or
dec
mov
adc
mov
pop
scas
mov
xchg
adc
mov
jbe
mov
lcall
lret
mov
or
ret
repnz
xor
inc
inc
enter
dec
adc
sub
or
in
pop
insl
rcll
mov
sub
push
mov
in
xchg
ljmp
test
mov
dec
ficoml
popa
or
push
push
cmp
stos
add
into
push
ja
jo
aad
lods
stc
lods
xchg
je
xchg
fs
cs
pop
push
cmpsl
lods
mov
outsl
or
xchg
mov
pop
jne
iret
cltd
cmc
xchg
sub
xor
jb
push
lock
add
adc
sti
scas
insl
or
iret
pop
xor
xor
add
cmp
sti
xchg
push
push
pushf
xor
mov
pop
inc
lahf
mov
push
out
aad
imul
insl
push
or
mov
fildl
adc
add
jnp
sti
mov
xchg
mov
lods
mov
outsl
mov
inc
test
pop
add
jg
xchg
push
es
xchg
inc
or
mov
jmp
or
sbb
bound
std
insb
orl
int
and
cmc
mov
jb
mov
xor
or
addr16
adc
inc
fistpl
aad
xchg
mov
aaa
mov
xchg
lret
test
jae
repz
xor
mov
call
pop
out
mov
mov
dec
aad
ss
dec
data16
jb
or
push
push
nop
jo
pop
test
push
jns
idivl
mov
sbb
pop
mov
or
sbb
lcall
es
ret
shll
popa
jg
lahf
jmp
test
ret
cmpsb
xchg
sub
loope
mov
dec
orb
lahf
cmc
es
inc
inc
aam
push
bound
pop
cmp
popa
in
adc
jns
mov
sbb
pop
arpl
sbb
test
ljmp
ficompl
loope
and
dec
mov
adc
movsb
test
mov
sti
cwtl
pop
or
iret
sarl
cld
and
push
mov
push
sbb
ret
lcall
cs
or
mov
loope
fisttps
imul
and
xchg
popf
cld
jge
faddl
out
jle
mov
lcall
xchg
add
inc
fs
push
add
mov
push
mov
xchg
imul
add
jne
jg
arpl
xchg
scas
mov
les
loop
adc
dec
cmp
push
push
outsl
push
jmp
insb
int3
xlat
stc
addr16
cmpsl
xchg
cmpsb
jno
jle
xor
out
aaa
data16
add
lock
dec
ret
std
sbb
cmp
sarb
sub
mov
es
dec
in
ljmp
rcrl
xor
add
lcall
pusha
icebp
jecxz
test
add
or
jns
leave
loope
test
lret
inc
xor
push
dec
cli
xor
cmp
mov
sub
test
cmpsb
mov
out
mov
dec
pop
add
and
and
out
pop
dec
scas
mov
leave
test
mov
pop
mov
arpl
scas
ret
xor
xchg
jle
cltd
add
imul
cmp
movsb
lds
or
insb
mov
hlt
fcomip
stc
adc
in
mov
movsb
cmp
push
fidivs
loope
add
andl
cmp
jle
mov
inc
shlb
sub
loop
dec
test
jge
into
outsl
xor
cmp
jne
jge
fcoml
mov
adc
ficompl
das
jo
dec
push
lret
jo
out
jl
stc
stos
ss
aas
outsl
pop
fdivrp
mov
xorl
popf
cmp
inc
cwtl
movb
rcrl
sbb
popf
push
jbe
pusha
and
mov
push
mov
leave
xchg
aas
fsubs
or
xchg
dec
fstps
aad
jl
js
pop
and
cmpsl
loopne
mov
lods
mov
dec
cmp
imul
sbb
sbb
xor
xchg
mov
jl
loope
sbb
add
popf
dec
push
sub
xchg
sub
bound
inc
in
xlat
sub
dec
out
fcompl
jl
cld
jmp
aad
lret
adc
mov
jnp
dec
xor
pusha
daa
mov
sti
js
aam
inc
cmpsb
lods
je
sbb
jns
mov
testb
mov
imul
sbb
adc
lds
lcall
jge
lcall
mov
pusha
xchg
cmc
cmp
xlat
fwait
mov
call
inc
cmp
add
int
jae
insl
notl
cmc
mov
inc
and
sbb
mov
sub
stc
fdivs
mov
sti
inc
or
mov
nop
xchg
aaa
push
mov
lret
xor
add
jo
pusha
rcll
jecxz
xchg
rolb
loopne
adc
jae
arpl
adc
inc
xor
pusha
rcll
jecxz
xchg
rolb
loopne
adc
push
arpl
arpl
push
pop
sub
je
pusha
xlat
xchg
ret
test
mov
test
mov
xchg
add
hlt
outsl
in
aam
pusha
adc
inc
xor
mov
sub
jecxz
in
or
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
