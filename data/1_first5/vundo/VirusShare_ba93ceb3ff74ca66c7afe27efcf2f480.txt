add
add
outsb
add
add
push
add
ja
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
je
insb
add
add
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
arpl
jb
outsl
add
out
lock
test
mov
inc
cmpsb
data16
fiadds
add
push
or
add
dec
add
xchg
push
add
lret
add
jbe
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
rolb
lock
add
add
xchg
popf
add
add
add
add
add
add
xchg
cs
add
add
add
add
add
lock
daa
add
add
add
xchg
inc
add
add
add
add
add
lock
daa
add
add
add
xchg
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
addb
add
sbb
add
add
add
add
adc
add
add
jae
rolb
and
add
les
sbb
in
flds
xchg
add
add
add
add
scas
add
add
add
add
add
in
add
add
add
add
add
dec
add
add
add
add
add
add
and
adc
add
add
add
add
add
add
addb
add
add
add
add
add
add
addb
add
add
add
add
add
rolb
add
add
rolb
add
add
add
xchg
into
add
pop
add
add
add
add
add
push
add
addb
add
xchg
addl
push
add
add
add
add
lods
add
add
add
add
add
add
add
add
addl
popa
add
add
add
add
add
add
add
add
add
addl
push
add
add
add
add
add
add
add
add
add
add
popa
add
insl
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
sub
xchg
adc
stos
add
add
add
add
lock
add
add
pop
add
add
add
add
add
mov
xchg
imul
lock
add
add
add
outsl
add
add
add
add
add
add
xor
add
add
add
add
add
insl
add
imul
testb
add
add
add
add
add
or
sbb
pop
sub
xlat
xor
outsl
pop
lods
sub
adc
adc
and
jb
gs
dec
rorb
test
dec
push
movsb
pop
pop
out
movsb
dec
or
mov
cmp
leave
adc
push
add
add
mov
mov
mov
mov
pop
out
xchg
pusha
adcl
cmp
ljmp
in
cmp
cmp
adc
push
xchg
mov
sbb
out
sahf
pop
stc
pop
pop
push
mov
lea
push
inc
lcall
add
dec
and
adc
adc
cwtl
push
sub
pop
and
test
ret
shll
in
dec
add
lods
insl
int3
or
xchg
dec
lock
mov
loopne
fadds
and
jle
inc
jo
or
xchg
loopne
dec
gs
loope
sbb
imul
pop
xchg
push
xchg
or
dec
jb
sbb
icebp
and
mov
aam
xor
xlat
mov
mov
pop
lret
int
xor
cmp
movsl
mov
leave
inc
scas
xchg
cmp
mov
jno
loop
mov
movsl
nop
decb
cmp
xor
popa
mov
add
ret
lock
push
sbb
out
and
lds
in
lods
and
xor
mov
lock
dec
and
sahf
push
sbb
jbe
jecxz
aam
xor
stc
negb
arpl
sbb
sti
mov
mov
dec
xchg
into
inc
shll
jp
sahf
or
fadds
add
mov
imul
loop
fnsave
push
and
push
push
insl
cmp
push
mov
sarb
in
push
lcall
xor
test
mov
pop
mov
xchg
push
jne
mov
ret
push
push
cmp
fdivrs
mov
repz
adc
in
jnp
mov
cmp
sub
test
xchg
mov
push
repnz
cmp
loop
test
dec
pop
mov
or
and
and
aad
pop
outsb
or
push
mov
aad
insb
push
jnp
mov
push
push
mov
xor
mov
aam
push
ret
xchg
imul
mov
loope
stos
mov
leave
dec
xchg
icebp
sbb
mov
arpl
ljmp
fstp
and
mov
ja
sti
jo
mov
xchg
int
xor
mov
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
push
call
mov
movb
mov
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
adc
cmp
lret
dec
mov
xchg
add
pop
add
xor
fnsave
subb
sbb
loop
repnz
add
xor
int
fldl
adc
shlb
push
repnz
add
xchg
push
popf
inc
lods
and
imulb
fistl
or
jns
lret
sub
fld
mov
xor
jl
test
ret
sbbl
sbb
mov
popf
int
adc
int
nop
jge
clc
mov
xchg
cmp
jge
cmp
jge
xor
std
loope
jb
cmpb
popa
or
sub
mov
ret
insl
int
adc
stc
mov
adc
dec
std
cmp
sbb
sbb
adc
jb
mov
or
pop
pushf
inc
ja
rolb
push
test
cmpsb
mov
jo
inc
sub
mov
ret
jge
push
repnz
add
xor
int
mov
in
hlt
sbb
cmp
xor
ja
push
fdivs
les
add
sarl
cmpsl
push
cltd
dec
cmpsl
sub
fcompl
xor
mov
aaa
xchg
or
xchg
pop
in
xlat
push
loop
repnz
add
xor
int
fldl
or
sarb
dec
repnz
add
xor
int
fldl
sub
push
adc
dec
add
add
leave
or
xchg
adc
inc
dec
xchg
lods
mov
cld
les
movsl
imul
push
iret
xlat
lret
mov
jo
jo
jns
movsl
int3
jmp
push
popf
cmp
push
int3
dec
sub
xchg
cmpl
bound
xchg
pop
call
mov
pop
test
decb
sahf
push
adc
push
push
push
dec
ja
sub
pop
mov
sub
pop
dec
lcall
shr
jmp
iret
mov
shlb
dec
sbb
imul
rcrl
enter
nop
push
mov
jno
sub
cmp
sub
dec
das
sub
test
inc
inc
and
cwtl
sbb
std
dec
adc
mov
sub
adc
push
push
jmp
mov
cli
mov
jmp
popa
movsl
jns
add
jp
repnz
rolb
sti
mov
mov
mov
pop
add
lea
into
fmuls
adc
popa
fsubrl
sbb
mov
test
ja
cli
sub
push
fisttps
test
mov
cwtl
pushf
rol
jne
cmp
mov
mov
sub
lea
aam
xchg
push
jmp
push
out
das
inc
mov
punpckhbw
dec
ljmp
xorb
mov
sbb
xlat
pusha
stc
xor
adc
addl
lcall
mov
ds
lods
ficomps
dec
enter
je
sbb
hlt
pop
je
jo
pop
leave
dec
rorb
mov
ud0
aam
inc
mov
sub
add
jnp
das
icebp
cli
int
into
adc
xchg
or
push
push
testl
fldt
or
popf
ret
mov
or
imul
sbb
popa
push
pushf
imul
pop
jns
lret
mov
inc
hlt
add
icebp
leave
lret
push
ficoml
inc
aad
cmp
mov
jmp
ss
xor
aad
mov
mov
cmp
push
lahf
cmpsl
lea
pop
and
loop
mov
pop
sar
dec
sbb
idivl
xor
jmp
out
cmpsb
insl
sbb
mov
aas
dec
jns
add
pop
xor
sbb
jecxz
jmp
mov
sub
sub
aas
mov
mov
popf
xor
lcall
loop
inc
cs
dec
test
add
jne
mov
and
mov
in
cmp
lcall
and
inc
and
stos
jae
inc
fwait
sbb
or
stc
fstl
jle
mov
mov
jle
test
and
xor
mov
insl
insl
lahf
addr16
out
insl
lahf
cmp
inc
and
das
les
iret
negl
nop
out
stos
inc
mov
jp
scas
insl
pop
jno
test
fst
and
daa
adc
sub
daa
aas
adc
mov
and
mov
push
gs
mov
cltd
rcr
std
mov
popa
or
enter
mov
mov
pusha
fidivrl
dec
sbb
gs
ret
xor
ret
push
fstl
adc
test
cwtl
and
loop
jmp
xchg
mov
pop
dec
mov
enter
sub
xchg
add
scas
loope
jae
inc
aaa
ljmp
hlt
mov
mov
cltd
addr16
adc
ljmp
mov
icebp
daa
xchg
adc
or
fnstcw
jnp
xor
js
adc
or
inc
push
mov
das
dec
mov
xor
inc
add
xor
dec
sbb
push
ret
dec
mov
daa
aam
add
and
inc
pop
aaa
pop
pop
push
pop
adc
js
lods
xchg
sbb
inc
aas
enter
add
mov
nop
std
nop
mov
daa
inc
leave
jg
cmpsb
movsb
xor
fsubs
fsubr
pop
mov
cmpl
or
dec
in
lcall
int
dec
inc
cmp
negb
push
jl
push
incl
movb
cli
test
jns
pop
sbb
out
mov
fnstenv
xchg
lcall
loop
jnp
xsaves
daa
xchg
jns
push
inc
aad
mov
cmpsb
daa
fbstp
iret
cmp
dec
dec
mov
cmp
lock
in
sahf
vmovaps
pop
dec
dec
and
test
and
lods
pushf
in
test
add
pop
inc
bound
jecxz
mov
pop
leave
fistps
xchg
or
sbbb
scas
cmc
and
add
arpl
lret
push
stc
fdivs
inc
dec
cltd
pop
inc
cmpsl
loop
xchg
cmpsl
or
jno
mov
and
leave
mov
clc
push
mov
ror
loop
icebp
lahf
cmp
add
jle
and
xor
repz
bound
add
pop
addr16
repnz
flds
adc
ljmp
mov
mov
test
idivb
enter
pop
cmp
and
push
and
cmc
pop
lds
call
stos
sbb
mov
mov
sahf
ret
inc
push
mov
rclb
cmp
mov
mov
xchg
roll
sti
dec
mov
ss
push
mov
mov
cli
mov
push
and
or
adc
mov
xchg
cmpsl
mov
mov
popa
jae
sahf
xor
fsubrl
adc
inc
cld
inc
xor
int
ret
cmp
mov
lret
or
or
aaa
inc
out
movsl
lcall
lea
aam
or
sbbb
cmp
cmpsb
ljmp
lret
shlb
mov
jge
popa
sarb
cmp
xor
dec
jge
xor
mov
push
inc
outsb
dec
jno
adc
adc
out
mov
popf
cltd
incb
fsubr
je
imul
sbb
sahf
popa
enter
sbb
pop
mov
das
nop
inc
or
outsl
fsubr
inc
bound
dec
push
out
mov
push
xor
dec
mov
fcompl
in
cld
cmp
stos
imul
xor
stos
cmp
cmpsl
test
incb
movsb
scas
push
cmpsl
adc
mov
in
mov
fwait
ss
xchg
mov
cmp
data16
aas
ficoms
dec
or
and
dec
jo
and
jne
sbb
data16
inc
fcoms
xchg
ljmp
stos
ret
jne
ret
push
cmp
popa
mov
out
dec
cli
leave
mov
cmp
cmp
fisttpl
imul
inc
nop
sahf
pop
divb
in
sbb
push
jmp
lret
cmp
cmp
loope
pop
ficoms
and
outsb
std
jno
in
fldt
xor
incb
mov
out
inc
xor
js
fdivrs
dec
rorl
push
shrb
flds
xlat
data16
iret
lea
setno
mov
add
pop
jbe
ss
or
adc
inc
xchg
mov
pop
fcomps
jb
xor
or
add
mov
add
lods
inc
or
mov
mov
inc
or
sub
or
lods
mov
in
ficoml
or
dec
push
inc
adc
mov
in
or
dec
mov
or
inc
cli
cmp
cltd
es
mov
sub
jnp
xchg
addr16
push
add
shlb
cmc
mov
push
inc
mov
xlat
popa
repnz
adc
lahf
test
and
lods
pop
stos
xor
imul
test
pop
mov
adc
out
mov
adc
hlt
stos
push
iret
add
es
mov
in
cmp
shrl
pop
cmp
jno
xlat
loopne
mov
inc
test
pop
add
idivb
out
mov
pop
jg
jno
jns
add
aas
aas
and
aas
add
fistps
icebp
inc
insb
ja
shlb
cmc
cli
sub
xchg
es
cli
jno
aas
mov
inc
xchg
jae
mov
mov
and
xchg
fwait
lret
jmp
mov
ds
sbb
test
mov
push
pop
ss
mov
std
mov
bound
stos
xchg
push
inc
testb
aas
jp
rol
push
or
cs
lcall
and
inc
popa
push
inc
push
rcl
sbbb
call
ja
push
gs
fcomps
sbb
push
jp
inc
jmp
iret
ret
in
pop
dec
out
lods
mov
cwtl
mov
rorl
rolb
mov
pop
addr16
popa
xchg
inc
divb
loopne
xchg
js
iret
jb
add
xchg
dec
mov
xor
stos
jmp
inc
loope
imul
push
cmp
into
inc
filds
cmp
inc
add
mov
xchg
in
inc
fstl
push
out
dec
in
lret
jp
xorb
sahf
js
ss
mov
mov
roll
pop
xor
fdivl
in
pop
das
int
stc
cmp
aad
movsb
mov
dec
mov
lods
ss
and
or
adc
adc
cwtl
sbb
inc
push
mull
fcmovnbe
inc
mov
sbb
pushf
push
inc
lods
scas
not
hlt
inc
or
jnp
xor
dec
or
in
mov
jae
aam
add
lahf
cmp
cmpsb
mov
adc
xor
popf
rol
xor
and
sub
pop
shlb
jmp
aas
cwtl
push
jmp
and
mov
in
push
mov
dec
insl
addr16
jne
adc
jnp
xor
add
je
xor
negb
inc
or
or
pop
push
fwait
adc
call
shll
push
xor
cmp
scas
push
sub
mov
push
je
dec
jl
data16
mov
jmp
jecxz
mov
jne
out
lret
dec
xchg
in
sbb
cmpsl
add
and
mov
xchg
into
mov
stc
and
fs
aaa
bnd
add
outsb
pop
cmp
jecxz
scas
lret
adc
push
dec
aam
lds
fisubl
scas
xchg
cmp
rorl
movsl
arpl
jns
mov
les
dec
adc
cmp
jge
sub
jge
sarb
dec
repnz
sub
fiadds
dec
and
pop
mov
mov
or
push
jno
mov
arpl
and
cld
andb
hlt
sbb
mov
or
mov
rcrl
and
or
or
or
ldmxcsr
sbb
jbe
cltd
test
jae
fnsave
inc
jne
pop
ja
rcll
xorl
in
cld
add
or
pusha
and
in
out
sbb
adc
sub
xchg
aad
sarb
stc
repz
fstpl
iret
loop
xchg
jnp
in
inc
and
test
xor
xchg
std
jmp
ficompl
cwtl
scas
stc
out
dec
ret
decl
mov
xor
inc
icebp
mov
and
outsb
stos
jo
icebp
lods
test
push
sub
sub
sbb
push
lret
mov
leave
mov
inc
rcrl
fcos
pop
sub
cs
sbb
aam
daa
jnp
iret
sbb
push
cmp
int3
mov
mov
pop
lret
mov
sarl
iret
and
sbb
adc
add
jg
xchg
xchg
adc
shrb
push
cmp
insl
push
gs
mov
pusha
and
rorl
mov
dec
mov
ljmp
cwtl
adc
lret
mov
rcr
aam
dec
stc
push
mov
out
dec
scas
cmc
imul
movb
cli
cltd
cmp
out
dec
cmpl
cmp
cmp
test
cmp
jnp
mov
clc
or
and
imul
jp
repz
mov
sbbl
pop
adc
xchg
mov
imul
je
ss
mov
dec
pop
aas
mov
adc
add
fsubrl
fstpl
movsl
stos
int
ljmp
loopne
inc
cmpsb
into
xchg
push
dec
sub
mov
push
incl
loop
inc
sbb
mov
sbb
mov
pop
out
cltd
into
sub
sub
mov
loopne
jg
fiadds
jge
leave
fsubrl
in
mov
jnp
leave
shl
cmp
out
in
stc
sti
sub
cwtl
add
xor
decb
dec
popa
cmp
xor
dec
adc
jae
mov
mov
loope
sbb
mov
mov
pop
or
les
adc
insb
aaa
int3
xchg
xor
xchg
add
push
sbb
push
mov
mov
adc
xor
insl
inc
in
or
iret
subb
mov
pusha
sahf
cmp
rcrb
fiaddl
xchg
loopne
out
xchg
push
mov
loope
into
xorb
std
cmp
leave
ja
daa
and
xchg
push
dec
ret
add
pop
out
mov
test
repnz
pop
xor
outsl
gs
pop
int3
test
dec
ret
ds
movsl
cwtl
or
out
int3
inc
cmc
adc
sbb
mov
mov
test
aas
adc
jb
xchg
add
push
mov
push
pusha
mov
sub
ret
cmp
and
fmuls
out
mov
jg
lock
mov
shrl
mov
test
xor
xchg
mov
or
mov
aam
fadd
scas
sbb
push
dec
ret
lods
clc
pusha
in
mov
adc
aad
dec
fld
inc
xchg
sub
addr16
xor
pop
test
jmp
mov
mov
into
fcmovu
mov
jo
lcall
cmp
sbb
mov
les
pop
js
sbb
cmp
pop
mov
fistpl
lahf
ds
out
dec
sub
or
or
jns
adc
xchg
xchg
and
xchg
sbb
call
aas
xor
lods
sub
pusha
lret
ja
sete
pop
iret
in
sbb
daa
popf
icebp
jl
jbe
mov
imul
inc
adc
mov
jl
pusha
and
repnz
idivl
sub
mov
sbb
aas
insl
mov
or
inc
push
or
lahf
jb
inc
xchg
sbb
add
xor
pusha
enter
imul
scas
push
cmp
divl
fs
mov
jns
mov
aad
mov
inc
jle
xor
cmpsl
push
inc
cltd
sub
mov
cmp
push
loopne
push
pop
icebp
das
jns
mov
and
ret
test
mov
push
popf
cmpsl
cmpsl
adc
pop
and
inc
push
or
into
and
lock
into
fstpt
filds
daa
dec
ljmp
cmc
fistpll
lods
stos
mov
ficomps
pop
popa
push
add
mov
add
pop
sub
sarl
xchg
iret
ds
out
pop
cwtl
jne
mov
xchg
sbb
test
jnp
lea
add
add
dec
fbstp
mov
jb
pop
out
bound
push
xor
dec
lret
lods
sub
testb
aaa
rclb
sti
imul
adc
xchg
inc
sbb
or
in
add
push
call
fstps
sbb
clc
popa
test
lahf
push
ret
xor
fldcw
iret
pop
aam
and
pop
insl
inc
scas
sub
jb
imul
enter
test
push
push
mov
pop
xchg
jmp
fwait
or
mov
std
mov
movsl
scas
push
xchg
das
subb
or
andl
into
mov
lock
and
adc
daa
loopne
arpl
inc
and
mov
and
push
jl
loopne
adc
mov
cwtl
lods
popa
lret
inc
jns
dec
movsb
add
adc
pop
add
iret
xor
lea
mov
xchg
negb
inc
mov
iret
sahf
and
add
dec
dec
pop
sbb
mov
mov
push
stc
push
out
gs
xor
clc
dec
jecxz
in
push
sbb
ret
and
scas
jmp
cmc
lods
into
mov
in
sahf
xchg
jle
jb
mov
out
lret
add
pop
ljmp
lods
movsb
in
mov
fdivrp
dec
and
ja
sbb
and
das
ret
sub
imul
add
pop
arpl
icebp
fwait
gs
push
leave
mov
insl
sub
std
push
mov
pop
sti
hlt
cmpl
std
sbb
xchg
ljmp
mov
stos
into
sti
test
decb
xor
loope
and
daa
arpl
incb
js
test
cmpsl
scas
mov
icebp
js
adc
call
jno
inc
sysenter
mov
mov
in
repz
rclb
sbb
push
lea
mov
adcl
dec
push
aaa
loop
pushf
sbb
aas
cmpsb
hlt
out
icebp
add
popa
push
xor
sti
insl
in
xchg
dec
inc
inc
xor
imull
mov
xor
mov
rorl
cwtl
movsl
push
fs
adc
jns
cli
mov
aam
mov
mov
mov
fidivl
mov
mov
or
push
dec
jnp
or
test
and
in
jno
pop
xchg
pop
mov
negb
out
addr16
arpl
movhps
add
call
jnp
inc
nop
or
xchg
aad
cmp
lret
pop
jnp
pushl
icebp
dec
mov
push
mov
ror
mov
pushf
cmp
in
std
mov
xchg
inc
mov
pop
mov
sbb
add
pushl
jg
int3
sub
add
lret
adc
xlat
cld
sub
jle
rol
pushf
add
ror
mov
stos
xchg
pop
xor
sub
jecxz
jne
in
ffreep
mov
push
or
push
sbb
lock
js
addl
sbb
jo
dec
pusha
mov
pop
pop
clc
daa
out
mov
ficoml
mov
sbb
mov
aam
or
adc
lahf
rorl
jae
imul
loope
mov
inc
inc
push
mov
or
dec
mov
nop
mov
mov
mov
sti
dec
xor
not
push
shlb
push
rcrb
jbe
dec
pop
shl
add
lahf
and
movsl
jne
mov
mov
inc
pop
mov
loop
ror
adc
push
adc
jne
mov
push
pop
inc
inc
sbb
aaa
adc
lods
add
bound
xchg
mov
mov
bound
pop
out
add
push
cwtl
sub
iret
lret
inc
sub
inc
xor
sub
mov
mov
push
inc
adc
push
mov
cld
aas
pop
xchg
pop
xchg
insb
dec
mov
aam
lahf
test
insl
sahf
fnsave
mov
dec
adc
adc
lret
or
imul
dec
cmp
push
inc
fld
aad
js
xchg
mov
lds
pop
mov
pop
mov
sti
fdivrp
mov
and
lret
or
ds
dec
ds
dec
cmpsb
lds
inc
orl
repnz
jno
sbb
sub
cli
test
add
xchg
sbb
xor
int3
push
jo
dec
adc
dec
aam
cltd
iret
movsb
dec
sub
negb
aad
mov
mov
add
xchg
movsb
call
insb
push
lret
mov
fadds
xchg
jl
fists
mov
dec
mov
cmp
mov
in
mov
pop
xor
sahf
shlb
adc
scas
jbe
fidivl
test
andb
nop
les
mov
insl
inc
push
cwtl
inc
arpl
add
rorb
inc
and
lea
mov
mov
addr16
idivl
fdivs
mov
mov
mov
sub
ss
insb
sbb
xlat
sub
and
mov
into
jg
cltd
sub
pop
push
test
pop
or
add
mov
and
mov
jle
test
in
mov
inc
dec
pop
movb
stc
cs
popf
jp
sbb
shlb
mov
outsl
lret
jge
inc
pop
inc
dec
pop
mov
cld
xor
push
jg
adc
xor
xor
xchg
inc
or
cmc
sbb
cs
dec
adc
sbb
out
or
lds
cmp
mov
sti
lahf
inc
shrl
repz
into
pushf
pop
insl
push
cs
xor
mov
sbb
xchg
daa
mov
push
sub
jno
jp
cmpsl
pop
fistpl
movsb
test
and
daa
fwait
dec
jecxz
push
jo
jns
sub
jno
adc
rcrb
insb
sub
lock
bound
push
in
sbb
cmp
ret
jge
dec
repnz
add
xor
int
fldl
or
sarb
dec
repnz
add
xor
int
fldl
or
sarl
dec
repnz
add
xor
int3
jb
subb
sbb
bound
pop
std
lods
in
pop
mov
fiaddl
lcall
pop
and
jle
adc
xorl
inc
rcrb
add
pop
and
jle
push
push
push
pusha
jo,pn
nop
into
nop
fisubs
jmp
sahf
loopne
lock
cmp
jle
push
dec
push
js
jo
cltd
into
mov
decl
mov
leave
imul
inc
sbb
mov
icebp
mov
dec
imul
mov
mov
pop
shr
cmp
jp
dec
out
dec
pop
add
repz
push
xchg
in
in
add
adc
nop
sahf
rol
push
pxor
pop
in
sahf
sarl
shr
cmc
mov
xlat
into
outsl
fistps
jno
mov
add
add
jnp
sub
es
or
xchg
and
sahf
sarb
fcomi
mov
lods
xchg
shlb
test
sub
xor
mov
fst
mov
loopne
call
ror
jbe
inc
push
xchg
xchg
movsb
js
jg
sbb
add
scas
lock
leave
dec
or
outsb
xor
push
inc
push
pusha
imul
mov
mov
sahf
cli
scas
lock
insb
dec
jne
inc
das
inc
aas
xor
push
dec
jo
cmpb
mov
cli
mov
xchg
fcompl
xor
inc
sbb
pusha
jns
adc
stos
cmc
lods
mov
jmp
or
or
or
push
pusha
jo,pn
or
fisubs
mov
sahf
loopne
lock
and
jle
push
push
push
pusha
jo,pn
or
fisubs
mov
sahf
loopne
lock
lahf
add
sub
and
add
dec
test
xor
iret
jp
adc
mov
sti
cs
pop
sbb
push
pop
jb
jl
in
in
lcall
inc
ftst
jl
inc
test
adc
push
sbb
lods
push
outsb
das
test
nop
shlb
testl
andl
and
inc
lret
mov
add
add
mov
out
cwtl
sbb
enter
ret
xor
test
fistpll
stos
pop
adc
fwait
mov
addr16
mov
inc
dec
add
pop
xchg
jne
stos
push
push
cwtl
xor
xor
mov
aad
mov
bound
add
xor
out
fcom
hlt
fidivs
inc
mov
sbb
xor
inc
pop
dec
out
adc
cltd
cmp
jbe
outsb
xor
data16
bound
shrl
jl
lods
fidivrl
insb
sub
push
mov
jge
add
jle
aas
pop
into
dec
push
adc
loopne
dec
inc
sbb
mov
cmp
dec
into
mov
and
loopne
add
ss
xchg
add
mov
mov
cmp
paddusb
pop
adcl
sarb
movntps
dec
dec
fs
mov
pop
dec
mov
jno
and
pop
mov
xchg
xchg
cli
pop
mov
jb
lock
pop
sub
in
xor
jne
bound
das
mov
cwtl
and
and
enter
popa
addr16
mov
jmp
adc
out
aad
push
int
adc
adc
mov
pop
imul
addr16
pop
int
xlat
mov
cmpsl
xchg
cmp
test
es
pop
lret
std
enter
sub
imull
or
call
lahf
mov
stos
popf
pop
in
out
inc
inc
lret
mov
loopne
cwtl
jmp
xchg
mov
or
or
add
mov
push
bound
jns
cmp
pushf
scas
mov
and
rol
cs
mov
sub
popa
test
cmp
mov
outsb
cs
pop
lret
sub
rcl
push
push
pop
mull
push
pop
shrl
mov
int3
les
dec
lcall
out
orl
jns
xor
xchg
inc
loope
sbb
mov
jl
lods
push
push
mov
icebp
mov
bound
arpl
sub
negb
mov
fwait
test
mov
out
aad
into
pushf
mov
pop
cmp
ror
fucom
mov
mov
arpl
adc
jne
cltd
and
aam
push
cli
push
js
lcall
cmp
stos
mov
flds
test
mov
lcall
jnp
sti
in
sti
pop
daa
sbb
ret
icebp
cltd
push
push
addr16
jp
mov
ss
add
or
pop
sbb
and
inc
dec
xchg
scas
dec
sub
jo
divb
loope
addb
xor
cmpsl
sbb
lret
dec
mov
fcmovbe
pushf
cmpsl
iret
xor
loopne
icebp
out
pop
mov
adc
push
sub
icebp
xchg
add
push
movsb
sti
insl
test
out
icebp
push
mov
imul
xor
mov
hlt
pop
inc
cmpsb
outsl
and
and
dec
inc
pop
cmpsb
shlb
cli
lock
sti
mov
inc
add
fldt
xor
add
das
dec
mov
je
aad
ret
mov
imul
push
sbb
loopne
and
and
push
mov
sub
cld
cmpsb
pop
jg
popa
cmpsl
std
and
sbb
jo
add
and
fldln2
arpl
ret
adc
mov
cmp
mov
xor
les
rcr
dec
adc
sub
xchg
cltd
pop
loopne
jb
outsl
stos
mov
outsb
push
in
cmp
popa
push
je
dec
inc
aam
xor
jns
inc
fwait
and
imul
scas
xchg
push
rolb
xor
cs
xor
cmc
lret
jl
cmpsb
and
insb
sbb
jp
ljmp
jmp
insl
fcomps
das
mov
test
mov
mov
into
adc
jns
lds
aaa
mov
out
pop
inc
mov
push
xor
in
mov
mov
int
flds
enter
mov
test
cltd
lds
int3
fisubl
and
mov
ret
or
mov
mov
xchg
lods
xchg
push
fucomip
arpl
xor
popa
jmp
pop
jp
mov
mov
das
xor
mov
xchg
gs
xor
test
iret
fimuls
loopne
test
xor
scas
fld1
sarl
ret
jns
and
test
mov
fisubl
sbb
lock
dec
cmpsl
add
leavew
adc
das
les
test
mov
data16
mov
repz
mov
aad
je
mov
fiadds
shrl
imulb
jno
add
out
xchg
in
bound
jns
in
push
jge
in
dec
jbe
xor
cmc
mov
test
or
inc
or
shlb
or
jle
ret
mov
and
jnp
out
ljmp
mov
pop
pop
xchg
pop
jl
popf
pusha
push
rcll
mov
inc
sbb
scas
sbb
adc
stos
adc
aas
push
dec
lods
js
fisttpl
mov
jnp
sub
test
sahf
scas
mov
push
pusha
cmp
imul
add
mov
jl
jno
pusha
aas
orb
mov
in
jns
dec
xorb
jno
roll
sub
movsb
adcl
lea
das
inc
lock
lock
push
dec
add
mov
aad
aaa
mov
mov
fists
mov
mov
jns
sub
imul
repnz
add
xlat
inc
insl
ror
loopne
cmpsl
dec
pop
pop
in
cmp
cmc
leave
jmp
sbb
rclb
fisttpl
xor
sbb
ds
xlat
jmp
lds
cwtl
shll
stc
xor
xor
popf
push
js
out
inc
push
inc
mov
movsl
lock
push
mov
nop
decb
aad
sub
sbb
cli
rol
mov
in
notl
wbinvd
cmpsl
int
xor
ret
aam
es
mov
aaa
out
pop
add
iret
jb
rcll
xchg
mov
jb
js
testb
or
push
test
cwtl
fldt
xor
push
or
add
push
stc
and
jecxz
push
cs
inc
iret
pop
cmpsb
lods
lea
cs
shrl
push
cs
lcall
aad
push
pushf
inc
cli
jl
out
pop
pop
stos
mov
iret
xchg
cwtl
sbb
sbb
and
hlt
xor
mov
dec
jno
push
sbb
pop
lahf
rcll
repz
inc
and
in
cmpsl
dec
mov
jecxz
andl
cltd
popa
xchg
testl
scas
mov
mov
fimuls
push
jl
pop
das
loope
xor
adc
lahf
add
sbb
mov
jae
jbe
andl
repz
cmp
push
sbb
insl
mov
sbb
stc
je
fcomi
ja
or
mov
fisubrs
sbb
addr16
cs
dec
sahf
mov
into
pushf
push
mov
push
aad
test
mov
insl
sbb
mov
sub
stos
lods
mov
xor
test
cwtl
add
test
jmp
les
dec
inc
dec
sub
or
add
jmp
in
dec
cli
and
gs
jnp
movsb
rcll
sub
inc
cmp
int3
ds
add
shl
jle
les
adc
and
pop
and
inc
jo
sar
stc
inc
in
sbb
or
std
pop
fs
ds
out
push
sbb
mov
loope
push
and
dec
jle
mov
lahf
xchg
aaa
stos
sbbl
movsl
orl
cmp
lds
or
pushf
jp
fstps
mov
rcr
repnz
mov
in
ss
mov
outsl
daa
out
or
rcl
adc
jns
rcll
loop
shl
push
xorl
leave
inc
push
mov
jno
stc
iret
mov
repnz
fstp
out
push
mov
xor
inc
sbb
stc
scas
jnp
shlb
fldt
xor
rcl
inc
dec
inc
cmp
push
mov
out
les
rolb
js
ja
cmp
add
pop
pop
and
cmp
xlat
push
add
stos
popa
daa
jecxz
movb
cld
or
inc
pusha
mov
xor
mov
mov
mov
jmp
mov
and
pop
pop
sbb
xlat
and
sub
cwtl
loopne
mov
mov
addl
in
popa
jmp
fwait
sarb
and
adc
cmp
or
inc
ret
fs
fisttpll
lcall
xchg
push
adc
mov
repz
sbb
adc
jae
lcall
adc
xor
jns
sahf
roll
dec
mov
xchg
cmp
mov
push
outsb
js
jg
push
scas
dec
outsl
insl
scas
in
icebp
xor
clc
divl
dec
xor
out
insb
cwtl
inc
pop
inc
inc
ss
adc
pop
sub
push
lahf
out
clc
cmpsb
cmp
xchg
inc
xor
and
into
cmp
in
mov
adc
insl
aaa
shlb
dec
cmpsb
pop
sti
jecxz
fnsave
jle
ljmp
stos
mulb
sub
dec
dec
inc
add
mov
and
and
bound
lock
out
xor
les
push
push
cmp
adc
mov
xor
cs
lcall
push
xchg
mov
cmp
xor
icebp
out
xchg
dec
pop
sbb
push
push
inc
lea
pop
xchg
push
adc
or
call
lret
lock
add
ja
add
jecxz
mov
popa
imul
dec
fsts
mov
xchg
jecxz
testl
sbb
and
insl
and
or
dec
fists
jmp
cmp
insb
outsb
out
mov
pop
mov
or
mov
jo
les
xchg
orl
adc
or
dec
das
idivb
add
popf
jg
ror
jge
lahf
jnp
pop
mov
in
push
xchg
ret
pop
outsb
pop
sub
loop
or
test
cmpsl
jl
mulb
cmp
into
inc
ret
adc
sbb
adc
jecxz
dec
pusha
fisubrl
adc
sub
in
pushw
add
shrb
dec
or
xchg
xchg
xchg
cmpsb
cltd
enter
repnz
xchg
mov
sbb
imul
bound
jg
hlt
adc
mov
inc
push
popf
mov
fcompl
stc
xlat
clc
mull
out
pop
stos
out
pop
fwait
into
xor
xorb
into
jmp
ss
pop
test
in
xor
jle
je
cmpl
lret
push
out
xor
mov
lods
fcmovnu
jo
jecxz
push
jo
pop
pop
xlat
xchg
inc
mov
ljmp
jle
test
jecxz
lods
xchg
adcb
mov
out
lahf
push
add
mov
and
cmpl
insl
push
mov
out
out
mov
outsb
test
sbb
scas
cmp
jbe
out
dec
lahf
or
pop
lcall
mov
divl
xchg
mov
aad
cmp
mov
xor
pop
shlb
pop
pop
ficoms
enter
lcall
out
pop
iret
imul
adc
mov
xchg
dec
lea
xchg
pop
adc
sbb
cmc
dec
insl
jmp
dec
out
lods
xlat
pushf
sub
dec
pushf
mov
xchg
out
jo
mov
int
fs
pop
dec
repz
dec
xchg
xor
imul
loope
call
sti
sbb
inc
push
iret
push
aam
sub
sti
mull
iret
mov
or
in
daa
testl
aaa
pop
push
out
mov
addr16
imul
or
or
rclb
mov
and
push
pop
sub
push
adc
jo
pushf
enter
sub
adc
xor
data16
fadd
pop
and
shlb
mov
jno
inc
cwtl
push
hlt
xchg
iret
add
xchg
add
insl
mov
and
stos
sbb
cmp
jp
xlat
in
xchg
std
dec
fmuls
jmp
push
pop
or
in
push
pop
add
add
popa
jbe
inc
es
xlat
push
out
jle
cwtl
inc
popa
push
sbb
dec
mov
cmp
lock
sub
and
inc
out
adc
shrb
push
roll
adcl
arpl
jns
pop
mov
pop
adc
push
outsl
mov
es
xor
add
xchg
mov
or
movsb
adc
mov
mul
das
cmp
mov
fwait
pop
rorl
test
jl
add
rcr
leave
xor
js
xor
fldcw
jmp
out
push
loop
mov
out
mov
sbb
cli
or
in
and
mov
adc
xor
fisubrl
add
es
pusha
adc
push
gs
cmp
ret
pushf
in
sahf
out
or
loopne
xor
and
xchg
adc
cmpl
call
jns
sahf
ret
rolb
mov
imulb
imull
cli
or
out
punpckhbw
and
das
orb
cmpsl
adc
sub
cmp
ds
int3
mov
cwtl
or
lahf
testb
subb
int3
jb
xor
mov
arpl
mov
push
jo
mov
adc
rclb
fs
cs
pop
mov
xchg
sbb
js
ss
or
mov
loope
cmp
push
xchg
ret
popa
call
push
jbe
iret
inc
sub
lret
jp
lock
lods
cmp
jb
daa
test
ja
dec
fiaddl
jmp
sbb
mov
clc
mov
bound
mov
sbb
outsb
cmp
jecxz
mov
in
mov
lret
push
scas
ret
les
call
sbb
ss
jb
cwtl
or
test
adc
aaa
daa
cmp
xrstors
and
out
inc
push
cli
ret
jg
out
xchg
cltd
push
inc
mov
jecxz
je
mov
jecxz
mov
fisttpl
push
cmpsl
icebp
lahf
andb
cmp
je
jne
jle
lcall
fwait
mov
test
add
insb
xor
lcall
jo
andb
mov
pop
imul
cmp
ret
push
dec
mov
lds
adc
inc
xor
jae
in
pop
outsb
jne
lods
in
jne
jg
jae
ss
rorb
mov
dec
inc
pop
sbb
loope
and
jnp
test
push
push
sti
mov
shrb
mov
inc
int3
dec
int
ret
hlt
dec
loop
stos
xchg
pushf
inc
out
ficomps
out
shrb
mov
jno
sbbl
add
mov
stos
popf
xor
test
cmp
das
inc
mov
cwtl
mov
xchg
movsl
insb
lea
repz
cmpsb
cmpsl
inc
pop
adc
stc
mov
ja
sbb
call
jns
aas
or
insl
inc
xor
cmpsb
outsl
adc
fcompl
xchg
cmp
inc
inc
push
sub
xor
fimuls
xlat
aam
mov
xor
jbe
das
rcl
clc
mov
cmpsl
not
or
mov
test
jle
aaa
add
cmp
cmp
pop
or
aaa
and
insb
cmc
insl
mov
pushl
xor
mov
loopne
pop
push
fimull
hlt
push
iret
push
cmp
or
xchg
mov
sub
jl
es
fucomi
add
push
int
fsubrs
cmp
jno
adc
adc
mov
jbe
fld
pusha
jbe
popf
and
fistl
xchg
push
sub
or
fcom
and
outsb
leave
lock
sub
sbb
out
cmp
out
lock
sahf
add
and
pop
mov
ss
xchg
jnp
out
pop
mov
push
mov
mov
sahf
icebp
dec
mov
or
mov
jl
or
mov
ficoms
cmp
sti
jne
mov
mov
mov
rcll
iret
fadd
lock
scas
repz
std
leave
fcomps
jge
lahf
hlt
ret
mov
jg
xchg
cmp
and
lds
iret
fidivs
mov
scas
lahf
fldt
in
xchg
dec
and
shl
jo
neg
insl
inc
sub
daa
jmp
xor
cwtl
decl
jp
rorb
jmp
cmpb
adcb
arpl
add
mov
pop
jmp
subl
sub
movsl
fsts
cmpsb
pop
call
mov
push
dec
das
sbb
jmp
out
lret
ret
pusha
push
adc
insl
nop
lods
push
mov
mov
mov
push
hlt
mov
addl
jmp
out
insl
mov
push
xor
dec
test
mov
fsts
lock
mov
popf
pop
mov
inc
enter
and
dec
or
sbb
push
cld
addr16
fs
or
push
or
aam
ret
sub
std
pushf
test
insl
mov
adc
xchg
lret
pop
xchg
add
adc
or
inc
add
lods
lcall
shrd
aas
dec
adc
sahf
es
jnp
mov
in
popa
rclb
push
fcmovnb
pop
jecxz
lock
loopne
mov
call
adc
insb
push
cmp
mov
cmc
add
pop
xor
xchg
daa
test
cmp
ret
xor
daa
cmc
xor
out
fcmove
orl
lea
call
jb
idivb
call
rcrl
jne
mov
inc
ficomps
xchg
shrl
jmp
mov
inc
inc
push
mov
stos
mov
or
and
cmp
xor
inc
rcrl
lcall
out
imul
pop
rcll
inc
std
cltd
shrl
mov
jae
mov
jne
popl
add
fs
pushf
sbb
imul
xorl
fistl
std
repnz
into
mov
mov
adc
les
in
jp
sub
sbb
loop
scas
imul
mov
push
pop
imulb
mov
arpl
out
xor
mov
orb
hlt
rcr
and
and
rcrb
loope
sahf
sub
out
push
adc
cmpsl
movsb
push
aaa
mov
xchg
sub
sub
sub
mov
jno
loop
and
push
xor
ss
inc
aas
popf
push
jl
in
lcall
leave
in
add
bound
shrl
mov
sub
fistps
out
adc
push
ficomps
mov
and
ret
aaa
add
xchg
scas
adc
jmp
movsb
aas
push
inc
jb
test
xchg
inc
rolb
sbb
xchg
mov
lea
andl
mov
mov
lods
movsb
push
in
out
jle
scas
stos
adc
dec
ret
lahf
xchg
push
addr16
adc
test
push
lods
and
and
fcoms
inc
iret
sbb
out
add
and
loopne
test
ss
imul
mov
scas
pop
xor
pop
dec
inc
fbstp
pop
arpl
push
mov
dec
push
fstps
sbb
and
clc
js
push
cs
mov
cmpsb
mov
not
add
jne
mov
jno
out
jno
sub
mov
xor
gs
pop
xor
mov
mov
fcompl
inc
pop
sbbl
cmp
ljmp
pop
shl
aam
sub
xchg
adc
lcall
mov
or
jae
push
add
cmc
call
insl
shlb
data16
outsl
cmpsl
movb
out
frstpm(287
bound
movsb
std
mov
mov
je
mov
loopne
stos
adc
call
loop
outsb
icebp
push
arpl
pop
push
add
test
or
es
js
dec
fidivrl
je
and
push
and
jmp
jl
repz
in
inc
adc
jae
mov
adc
cmp
cmpsb
cltd
and
ja
mov
cmp
mov
lock
insb
xchg
xor
adc
mov
lods
test
push
fimull
cmovbe
mov
or
xchg
fimuls
in
movsb
pop
jo
ss
fwait
mov
cmp
xchg
push
inc
push
je
xor
pusha
ljmp
test
ret
movsl
arpl
rorb
scas
and
outsb
xor
push
push
push
pusha
jo,pn
or
fisubs
mov
sahf
loopne
lock
and
jle
push
push
push
pusha
jo,pn
or
fisubs
mov
sahf
loopne
lock
and
jle
push
push
push
pusha
jo,pn
or
fisubs
mov
sahf
loopne
repnz
and
jle
push
push
push
loopne
lock
jg
outsl
je
out
mov
mov
pop
popa
pop
push
cmovno
in
sub
push
push
mov
push
pushl
movl
movl
movb
push
push
call
mov
andl
push
movl
pushl
movb
call
andl
push
push
mov
movl
mov
movb
call
push
push
mov
call
mov
mov
mov
lea
push
movl
movb
movl
movb
movb
movb
movl
call
pop
pop
leave
ret
adc
jge
dec
and
xchg
xor
fs
sbb
mov
mov
xor
lock
je
add
dec
and
sub
pusha
imul
ffreep
mov
test
repnz
xor
and
hlt
in
mov
test
loop
leave
movsb
mov
or
push
in
cld
stos
out
dec
repnz
aaa
mov
out
leave
sub
ss
jb
in
insl
cld
divl
pop
ror
repnz
loop
adc
add
int
jecxz
jge
gs
icebp
inc
push
inc
jle
add
ds
inc
in
cmp
cmpsl
mov
add
int3
xor
aad
int3
push
scas
sub
pusha
cwtl
xchg
or
pop
push
das
xchg
sarb
jb
out
call
mov
dec
sti
add
add
mov
in
xchg
scas
shrb
xchg
popf
or
mov
xlat
scas
cmpsl
test
dec
mov
xor
test
fwait
dec
jp
insl
xor
mov
cmp
push
in
sbb
aam
les
xchg
loopne
jns
jb
inc
sub
aas
das
cs
add
pusha
js
adc
aad
lds
cltd
loop
icebp
pop
add
adc
ds
xor
sub
xor
cwtl
mov
fcomp
test
ljmp
push
sub
add
inc
cmp
nop
in
cmp
int
fst
lods
sarb
insl
add
dec
and
sub
pusha
sbb
mov
mov
mov
adc
outsb
repnz
lahf
cmpsb
aas
decb
popa
mov
test
pushf
sbb
inc
pop
push
pop
test
ret
pushf
f2xm1
cmpsl
inc
in
mov
push
clc
cmp
iret
xor
dec
jb
xchg
fnstenv
test
xor
pop
ss
cld
add
jge
pushl
push
jo
sub
xchg
and
jmp
sbb
mov
push
dec
daa
movsl
lods
popf
pop
out
gs
stos
xor
mov
cmpsb
mov
sarb
adc
addb
fwait
pop
mov
pop
push
aad
push
shll
aaa
or
push
push
add
cwtl
adc
mov
movb
mov
call
push
pop
mov
sub
mov
mov
cmpsb
outsb
cmp
and
pop
sub
push
fstps
xor
je
push
fs
andl
or
dec
mov
cmp
rclb
mov
jl
adc
jge
in
cs
and
lods
mov
inc
and
mov
imull
in
push
jg
mov
xchg
fdivl
mov
lds
push
pop
fs
push
dec
fwait
test
lods
sub
xchg
in
jmp
mov
jnp
fidivrl
int
or
inc
imul
xchg
pop
cmp
stos
mov
lahf
xor
repnz
jp
push
clc
and
insb
rolb
rcll
cmp
in
mov
xchg
jmp
adc
mov
fistpll
jl
fs
ss
jg
test
daa
repnz
sub
or
xchg
add
gs
mov
mov
loopne
lds
sbb
or
mov
xlat
or
cmp
pop
inc
or
in
mov
xchg
sub
cmp
pushf
mov
jg
lcall
aad
stos
push
pop
add
ja
out
cltd
push
add
insb
dec
or
mov
adc
sub
jl
movsb
mov
jno
dec
ja
dec
xchg
cmp
test
lahf
push
jl
sbb
fs
mov
cmp
lahf
lahf
adc
ss
mov
enter
mov
insl
stos
lods
jo
movsb
xor
push
sahf
test
pop
jle
fnstenv
sbb
xor
daa
sbb
movsb
add
in
jp
dec
mov
jge
jbe
pop
testb
cld
test
insb
in
push
arpl
xor
mov
and
jp
call
mov
imul
and
pushf
add
arpl
xchg
out
sti
push
cs
jp
popa
test
out
mov
inc
cmc
decl
dec
sbb
pop
xor
add
adc
push
push
lods
in
jns
and
es
and
je
lea
add
leave
mov
cmp
ret
loopne
adc
sti
les
fistpll
push
adc
mov
mov
mov
imul
or
je
xchg
arpl
and
and
rolb
jb
ret
call
divl
add
xchg
lret
mov
faddl
pop
stc
repz
insb
int
shlb
pop
add
scas
jbe
and
pop
xchg
push
xchg
dec
xchg
rcrl
add
daa
dec
push
sbb
addr16
pop
iret
int
subb
imul
test
pop
sub
add
adc
lret
test
ja
mov
add
mov
movsl
scas
dec
call
loopne
xlat
cld
mov
fists
jae
mov
in
mov
and
ss
inc
sbb
lret
in
xchg
clc
pop
xchg
xlat
dec
fmull
push
aas
test
mov
fstpl
cmp
movsb
fldt
push
mov
add
fdivrs
ret
lcall
idivl
add
sub
dec
lods
jo
mov
in
or
pushf
dec
cs
int
mov
arpl
add
xchg
ds
shlb
fsubrp
mov
cmp
out
insl
lods
push
jno
in
dec
inc
in
push
jecxz
push
and
hlt
mov
inc
mov
cs
adc
lcall
out
out
xchg
xor
jecxz
adc
and
neg
loope
pop
and
add
ret
xlat
sub
sbb
adcl
cli
pop
into
mov
fimull
shl
insb
push
lods
push
jne
pop
aas
add
std
mov
test
push
mov
xor
aam
addr16
sub
mov
sub
popa
in
xor
loope
adc
mov
imul
jb
mov
mov
mov
jno
cmp
insb
fabs
xor
insl
jmp
into
add
and
iret
or
mov
stc
loopne
call
jb
movsl
push
mov
idivl
test
push
cmp
xor
sub
mov
jmp
jns,pn
adcb
js
add
in
xchg
fcmovne
and
jl
add
out
xchg
xorb
mov
jo
dec
jmp
aaa
sub
js
xor
cld
aas
std
imul
jb
dec
jbe
and
cmp
sarb
das
adc
repz
pusha
inc
mov
cld
imul
push
add
jecxz
jmp
pushf
mov
enter
and
popf
repz
clc
mov
xlat
or
icebp
daa
add
dec
icebp
jb
movl
mov
rol
dec
add
imul
stos
xchg
insl
push
arpl
sbb
adc
adc
xor
sub
or
pop
dec
mov
test
std
and
jle
push
inc
or
daa
addr16
shrb
add
out
rcrl
andb
je
imul
data16
into
call
pop
je
cld
mov
push
aam
divl
cli
cwtl
inc
movsl
imul
adc
jecxz
cs
das
xor
mov
enter
lds
mov
inc
xor
jno
add
mov
jo
int3
push
rcrl
and
enter
jo
mov
cmovge
xchg
loope
mov
fisttpl
insl
push
mov
or
mov
sub
or
xchg
js
pop
ret
mov
jge
mov
fwait
inc
pop
jmp
out
call
divl
andb
jb
in
bound
mov
mov
sbb
pop
jnp
enter
pop
dec
inc
mov
ret
hlt
add
jmp
out
pop
aaa
mov
mov
dec
or
push
nop
das
dec
xor
pop
jae
fs
mov
cmp
or
dec
loopne
adc
or
addr16
mov
nop
sarl
in
and
add
mov
xor
xchg
adc
add
test
test
add
in
and
dec
cmc
inc
fnstsw
dec
ret
dec
cmp
pop
lock
ret
push
repnz
mov
xchg
out
ja
jge
rcrl
cwtl
jns
cwtl
scas
mov
out
pop
mov
gs
xchg
push
stc
loope
mov
mov
mov
jmp
into
ds
jbe
xchg
mov
sbb
xlat
icebp
cli
jno
lods
add
iret
mov
outsb
and
xor
xor
push
ss
mov
jmp
add
adc
out
into
xorb
fcmovbe
cmpsb
xorl
icebp
es
cmpsl
cmp
iret
fdivs
inc
lret
cmpsl
xor
mov
les
mov
cmp
xchg
mov
adc
push
pop
insl
pop
popa
call
scas
xor
lds
sti
jmp
sahf
repz
test
push
xor
cmp
lcall
incb
arpl
ds
movsl
jmp
fwait
lcall
xor
ffree
sub
out
sub
adc
fcoms
daa
ja
jne
xchg
dec
pop
push
mov
push
dec
std
int
loop
mov
inc
jae
or
cli
insl
iret
sbbl
lret
mov
jno
dec
lods
mov
and
in
int3
add
jge
lret
je
xor
test
dec
lods
aad
repz
xor
sub
fsubrl
cltd
push
or
adc
xchg
je
lret
repz
sti
inc
xorb
outsl
les
divb
sbb
cmp
cmp
daa
mov
in
subl
xchg
ljmp
mov
call
sub
roll
inc
jg
data16
out
test
mov
mov
push
pop
push
cmpsb
xchg
jg
or
pop
cmp
fstpl
add
nop
adc
dec
pop
mov
adc
mov
pop
aas
push
test
fldl
cmp
mov
ss
mov
mov
movsl
je
out
sub
dec
pusha
mov
mov
and
je
sub
sbb
and
ret
and
out
xchg
repz
mov
les
fwait
mov
and
adc
jbe
fwait
test
rorb
or
dec
das
out
pop
and
aam
or
aam
loop
or
pop
lret
jp
and
mov
stos
flds
lcall
xlat
adc
jmp
or
xlat
or
jbe
sbb
lret
scas
xchg
push
push
icebp
gs
ffree
xlat
imul
or
mov
mov
clc
cmp
push
xchg
lods
jmp
jo
aas
or
negb
dec
adc
pop
add
mov
mov
jge
inc
jnp
adc
movsl
out
xchg
xlat
add
outsb
loop
mov
imul
out
inc
mov
lods
sbbb
icebp
in
and
in
fldcw
outsl
xchg
imul
inc
cmc
sbb
pop
mov
push
iret
cmpl
sbb
repnz
hlt
adc
cmp
jl
sub
inc
sbb
sbb
pushf
mov
inc
imul
sahf
add
jnp
ret
hlt
je
and
push
cmp
int
xchg
push
or
push
in
sahf
sub
lods
mov
nop
out
sub
dec
lods
inc
xchg
hlt
ss
cs
imull
loope
adc
repz
pop
dec
enter
loope
mov
dec
insb
lcall
aaa
ds
jge
mov
cmp
ucomiss
lods
cltd
inc
mov
cld
jmp
sbb
les
inc
and
add
leave
push
test
das
je
test
loop
pop
cmp
xchg
xor
and
inc
sarl
outsb
xchg
push
test
xchg
dec
jge
mov
jae
xchg
mov
movsb
mov
shrl
cli
fisubrs
sti
and
pusha
jl
dec
int3
ret
adc
jno
sbb
mov
lds
cmp
mov
or
push
lods
ret
daa
add
fs
lea
mov
imul
and
cmp
inc
out
aaa
cwtl
cs
fwait
ret
push
sbb
sbb
arpl
jb
inc
mov
enter
sbb
push
std
out
leave
inc
sbb
in
cld
ret
pushf
sbb
mov
lea
gs
jnp
xchg
push
cltd
dec
jne
aaa
fmuls
pusha
xchg
dec
push
icebp
xor
fistpl
lods
inc
call
cmc
iret
js
mov
jmp
movsb
sbb
fdivl
jmp
popf
mov
icebp
pusha
cmpsb
das
scas
and
xchg
addr16
pop
xchg
andb
stos
bound
jne
or
aas
sbb
inc
flds
lea
mov
xor
enter
mov
sub
inc
adc
lea
mov
int3
inc
repnz
push
out
int
in
lea
ret
fwait
dec
sub
loope
sbb
jp
test
xor
fwait
loope
imul
pop
out
xor
in
mov
jnp
xor
lds
inc
jle
mov
inc
aam
push
fimuls
adc
xor
fiadds
sub
call
pop
pop
pop
pop
sub
sbb
dec
jg
xlat
lea
inc
inc
sbb
inc
mov
jg,pn
fisttpll
iret
loop
inc
popa
cli
jge
lahf
outsb
out
daa
push
loop
adc
pushf
dec
incb
mov
repnz
insb
cmp
or
stc
fnstenv
jecxz
in
enter
lgs
int
inc
in
fwait
notb
mov
data16
jbe
push
flds
popf
pop
add
lds
add
movsl
xchg
push
into
add
movsl
fisubl
push
insl
adc
jns
push
out
rcrl
sub
pavgw
pop
jmp
movsb
inc
pop
inc
clc
fmuls
dec
cltd
lock
push
mov
mov
sbb
sbb
jecxz
pop
xor
push
inc
cmpsl
jno
sub
loope
mov
call
dec
pop
fcompl
imul
fists
enter
dec
push
ret
lret
outsl
dec
jno
inc
or
xor
imul
pop
lahf
aaa
mov
mov
stos
fisubl
xlat
mov
test
or
sbbl
dec
jmp
adc
pop
inc
xor
push
cmp
sbb
shlb
pop
and
push
repz
sub
cmovae
jmp
jg
ror
lds
clc
push
fsts
mov
push
pushf
push
in
aaa
dec
mov
push
fidivs
mov
mov
push
sahf
inc
fstl
aam
mov
icebp
cmove
xchg
cli
mov
jnp
divb
xor
inc
mov
sub
in
and
sbb
dec
es
sub
pushf
shll
mov
sbb
xor
cmp
mov
jle
shrb
cmp
ret
add
cli
cmc
fnsave
push
test
dec
adc
xchg
mov
lods
scas
pop
int3
cwtl
les
xchg
and
rcll
into
jl
ljmp
mov
bound
sbb
mov
lahf
adc
inc
mov
push
data16
in
xor
es
bound
sub
fildll
cmp
popf
test
cld
pusha
aaa
pop
xor
ret
mov
push
stc
cld
xlat
xor
sbb
js
gs
and
aaa
lds
or
loope
inc
ret
je
push
or
mov
pop
inc
jne
stos
insl
fldenv
int
into
ret
mov
sub
mov
fstpt
xchg
mov
loop
push
sahf
sbb
rcrl
lret
or
xchg
lods
out
leave
jmp
imull
movsl
xchg
xor
mov
shrb
jl
inc
js
cmove
xchg
sahf
out
pop
xchg
push
int
loopne
push
movl
inc
jb
divl
repnz
cld
jae
pop
shlb
push
imull
pop
mov
sbb
mov
lcall
add
shrb
es
lcall
pop
sub
jcxz
sarb
inc
cmc
repnz
push
fsts
movsl
mov
iret
repz
add
enter
mov
movsl
and
add
cmp
cs
push
jle
jns
mov
daa
jno
dec
adc
lods
daa
stos
xchg
lret
mov
cmp
es
xor
add
pop
je
test
fildl
adcb
and
xchg
pop
aam
jo
leave
shll
into
xor
gs
stos
mov
adc
or
rcrl
and
lods
sahf
cld
mov
aas
fwait
sbb
jmp
push
pop
sbb
push
dec
fidivrl
lcall
jbe
mov
xor
sub
dec
incb
jae
bound
pop
jno
and
pop
ds
aad
mov
add
adcl
or
dec
fsubrs
aam
ljmp
stos
dec
imul
mov
loopne
testb
mov
popf
std
gs
int3
lods
mov
jle
ljmp
jb
cmp
sbb
call
sti
sti
ljmp
add
ss
cmp
fsubl
scas
cmp
int3
es
push
jbe
or
imul
das
mov
loopne
jns
push
incb
push
inc
fnstcw
shr
dec
movsb
aad
sahf
ficompl
es
xor
jno
push
mov
out
sub
nop
fidivs
adc
sub
xlat
aam
int3
xchg
pop
xchg
int
fcompp
int3
js
int
push
jle
sahf
or
fsubl
dec
daa
jns
push
add
nop
sbb
cltd
js
add
push
xchg
mov
cmpb
jb
out
leave
xchg
std
roll
pop
mov
js
mov
in
sbb
add
pop
lea
push
je
fimull
leave
ficoml
sub
inc
pop
cmc
test
pop
arpl
fcoml
mov
cmp
mov
xlat
idivb
divl
jecxz
and
lock
out
popa
outsb
pop
out
popf
push
sbb
push
jmp
inc
dec
jl
nop
cli
shrb
icebp
and
push
sahf
push
inc
xor
inc
sub
mov
repz
in
inc
dec
mov
push
addr16
add
loopne
pop
lock
repz
jns
push
sub
or
mov
scas
call
sarl
xor
das
mov
sbbl
ja
lea
fadds
adc
pop
imul
sub
push
push
loopne
sub
je
pop
daa
test
aaa
dec
inc
mov
aam
lahf
jno
jg
cmp
mov
mov
sub
sarb
xor
addr16
popf
ret
sub
mov
adc
int
stos
and
push
adc
xor
loope
ret
adc
in
ja
jae
insl
xor
mov
inc
test
cwtl
sbb
test
std
pop
addr16
mov
cli
add
adcb
xchg
mov
mov
and
fwait
pusha
mov
push
stos
and
gs
mov
jne
and
inc
jl
enter
adc
fdiv
jne
xchg
dec
dec
or
jbe
fs
and
xchg
call
ljmp
ja
rcll
jns
shll
aaa
xor
push
int
inc
cwtl
mov
mov
xlat
xchg
mov
pop
aam
in
call
outsb
out
xchg
insb
pop
jmp
inc
add
push
and
inc
mov
fcmovnb
xchg
mov
push
testl
dec
push
push
mov
aas
sbb
pop
fists
fsubrs
pushf
cmp
adc
test
mov
nop
push
xor
das
loop
add
cwtl
mov
repz
adc
push
xor
mov
mov
jbe
aas
or
sahf
dec
xchg
xor
pop
jo
repz
aaa
adc
xchg
dec
insl
or
cmc
cmc
inc
xor
sub
or
add
lcall
les
daa
mov
push
orl
dec
loop
enter
loope
leave
or
or
pop
adc
stos
jmp
rcrb
cmp
dec
out
repz
mov
lret
inc
or
dec
call
inc
xchg
fs
sub
pop
rcrl
cmpsl
pop
stc
pop
mov
icebp
mov
movsb
jnp
in
fwait
outsb
pop
dec
test
lods
mov
ds
pop
jecxz
lret
les
jo
fsubrs
or
cmp
jae
sarb
xchg
aaa
call
pop
sbb
xor
push
je
in
and
lret
inc
pop
mov
xchg
adc
shl
inc
test
mov
int
xchg
movsb
test
lea
jg
loope
cmc
and
xor
sahf
fucom
in
icebp
push
push
sbb
inc
adc
mov
and
ret
push
test
pop
push
mov
loope
daa
jl
add
lds
addb
xchg
out
xor
loopne
pusha
xor
inc
inc
xor
jno
pop
mov
adc
rorl
pop
cli
ds
outsl
xchg
adc
icebp
lcall
jmp
xor
cmpsl
push
clc
lea
dec
sbb
sub
rcrl
out
push
add
and
push
sti
xor
lods
cmp
adc
adc
pop
fisubl
jge
repnz
mov
xchg
mov
icebp
jne
cmp
xchg
push
cli
mov
jae
sub
mov
jo
jecxz
add
or
push
test
mov
sub
xor
aas
and
rorl
stos
sub
rclb
lods
and
sbbl
xchg
dec
and
sbb
mov
icebp
dec
cs
pop
cmpsl
call
cmp
enter
out
sub
test
mov
inc
push
stos
sub
jne
movsl
loope
das
sub
faddp
icebp
mov
xchg
push
inc
dec
or
loop
mov
jne
inc
gs
cmp
rorb
mov
imul
mov
testl
jge
dec
and
sub
pusha
sbb
mov
mov
mov
adc
jge
dec
and
sub
pusha
sbb
mov
mov
mov
adc
jge
dec
and
sub
mov
std
inc
int
fnop
lods
sarb
add
pop
jns
dec
add
sub
loopne
nop
in
jg
sbb
mov
ret
pop
loop
xchg
push
fiaddl
dec
insb
sbb
ljmp
mov
mov
jp
dec
dec
pop
cmp
sub
clc
ljmp
mov
lret
js
push
pop
cmp
sub
sbb
or
clc
xor
lods
test
mov
push
adc
aas
sbb
mov
or
jns
jmp
xlat
or
aaa
iret
iret
add
sub
adc
out
sub
xchg
dec
jge
iret
pop
stos
andl
jo
std
imul
push
sub
mov
xchg
clc
addr16
push
push
mov
sbb
mov
pop
movsb
loop
sub
clc
icebp
or
call
jmp
es
stos
sti
inc
mov
leave
test
xchg
or
pop
push
and
add
sbb
or
sarb
stos
push
pusha
fsubrs
mov
pop
ljmp
int3
stos
test
cltd
mov
mov
dec
push
cmp
sub
sbb
or
fcomp
enter
test
cwtl
mov
jp
or
je
pop
dec
push
pop
arpl
nop
lods
pop
mov
int3
cmc
lret
cld
sti
daa
das
sub
sub
add
inc
dec
or
fs
stos
popl
mov
enter
push
cmp
cmp
jns
sub
sbb
or
clc
ljmp
mov
mov
jp
dec
dec
pop
cmp
sub
sbb
or
clc
ljmp
mov
mov
lods
aad
sbb
mov
out
mov
push
mov
inc
mov
pop
push
aas
negl
sbb
fadd
cmc
xchg
push
arpl
cwtl
in
sbb
hlt
jb
sbb
xor
hlt
pushf
jae
dec
addr16
lds
xor
sub
aas
ret
rolb
test
loopne
mov
xchg
jmp
shrl
cld
bnd
xor
cmp
add
shr
dec
mov
out
jne
push
repz
int
sbb
pop
fiadds
adc
inc
orl
decl
xlat
push
mov
mov
fnstsw
or
leave
bound
add
loopne
cmp
mov
test
jp
aad
push
movsb
sbb
shr
mov
lret
mov
fcmovbe
enter
push
jne
fsubs
jg
aad
repnz
icebp
mov
mov
inc
mov
cmp
out
int3
ds
aaa
mov
inc
popf
mov
cmc
clc
mov
rcrb
mov
sub
int
bound
push
xchg
push
jae
push
ret
mov
pusha
push
mov
add
out
out
mov
scas
gs
fimuls
out
push
mov
adc
fcom
sub
insl
mov
and
and
push
xchg
filds
pop
es
out
or
imul
lds
jge
lret
out
ficoml
and
iret
insb
pop
pop
int
sub
orl
cs
push
add
clc
cs
jae
mov
jb
xchg
sub
xor
divl
or
movsl
repnz
cli
insb
or
mov
fmul
mov
jmp
in
rorb
sbb
or
loop
ds
pop
jecxz
lods
arpl
adc
not
outsb
icebp
arpl
inc
sbb
and
sbb
sub
and
test
xchg
lods
sub
stc
pop
into
addl
aad
andnps
xchg
sbb
add
pop
cmp
aas
loop
inc
jne
daa
int3
xchg
mov
mov
mov
mov
cmpb
jno
cmc
lea
jbe
sbb
adc
inc
icebp
jnp
loopne
adc
mov
popf
lahf
or
addb
jle
jo
data16
xchg
mov
dec
es
lret
and
mov
inc
mov
test
lret
xor
dec
loopne
or
xor
xor
jmp
and
mov
cltd
daa
xchg
fmuls
int
data16
repnz
push
mov
fs
pop
mov
inc
push
jno
movsb
outsl
mov
hlt
andl
or
xlat
or
or
pop
mov
lds
or
imul
mov
int3
jae
and
rcrl
in
xchg
in
pop
lret
dec
sbb
and
xchg
daa
out
outsl
xchg
jns
bound
fsubr
cmc
test
test
mov
aam
aaa
popl
xor
mov
jmp
sbb
sub
sub
cmp
fwait
and
and
xor
fnsave
sahf
dec
mov
lods
fs
cmp
lock
or
or
scas
lods
or
inc
dec
scas
das
sbb
mov
adc
mov
inc
mov
rcrl
gs
jne
lds
xor
les
push
dec
nop
repnz
pop
mov
jg
sahf
popa
and
sahf
push
testb
flds
and
adc
mov
lock
lahf
setg
add
jae
insl
into
jnp
cmpsb
mov
pop
jno
pop
cltd
test
pop
xor
lret
in
jb
xor
jecxz
add
outsb
adc
loop
adc
cltd
sbb
lret
cmc
dec
mov
stc
sbb
jo
sbb
push
fwait
aas
sub
and
xchg
pop
add
inc
cmp
ret
shl
pop
cmp
mov
or
and
cmp
add
pop
cli
jnp
loop
outsb
sbb
fcmovnb
sub
outsl
loopne
jmp
fcompl
cmc
sub
imul
pusha
ficompl
in
push
shl
xchg
jns
xchg
jae
sub
ret
fstl
dec
cmpsl
in
orb
ljmp
adc
xchg
cmp
adc
pop
inc
lret
test
mov
daa
mov
negl
cmp
repz
sub
sbb
sub
cmc
bound
repnz
pop
push
js
cld
xlat
push
out
inc
pop
in
dec
push
insb
cld
sarl
mov
push
test
ja
push
cmp
mov
or
cmp
js
daa
popa
js
repz
outsb
fldcw
mov
dec
xchg
jbe
shlb
lahf
push
inc
xor
hlt
jle
in
fwait
push
pusha
mov
mov
icebp
icebp
or
mov
leave
pop
inc
jecxz
push
mov
pop
inc
loop
movsl
in
add
rorl
xchg
test
stc
dec
insl
and
into
loopne
jle
pop
push
stos
out
push
cltd
ljmp
lods
or
cmp
add
cmovnp
pop
sbb
xchg
xchg
jbe
mov
jnp
out
cmc
ljmp
mov
adc
lahf
and
dec
mov
and
xchg
mov
mov
sub
sub
xor
loopne
ljmp
lret
test
decl
mov
pop
push
bound
xor
cmp
mov
insl
xchg
insl
mov
dec
mov
outsl
lahf
mov
jae
fmull
push
jge
outsb
pushf
dec
dec
adc
push
pop
cmc
mov
push
ret
fidivrl
or
incl
push
std
lock
adc
test
push
cmp
push
add
or
push
jnp
shl
cmp
scas
or
lock
hlt
mov
ds
ds
scas
lret
cmpsl
jmp
out
push
pop
push
jp
mov
rolb
arpl
sub
adc
or
es
push
sub
dec
jne
mov
push
vpaddw
dec
sub
clc
mov
add
and
mov
cmp
loop
adc
scas
pop
cs
sub
or
sub
outsl
enter
mov
inc
xor
push
xchg
mov
inc
daa
dec
orb
push
push
push
and
xor
add
sbb
sub
add
sbb
mov
dec
inc
or
sub
push
adc
xorl
fisubrs
hlt
jne
lock
jns
jb
push
in
fsubr
adc
push
bnd
xchg
mov
pop
mov
popf
push
add
xchg
cmp
and
xor
stc
leave
out
sub
pusha
iret
fwait
cmpsb
and
dec
xor
je
ret
fldenv
jp
jne
cld
xor
les
xchg
dec
or
cli
xchg
push
cltd
pop
shll
and
inc
push
adc
mov
enter
xor
inc
dec
arpl
daa
cmp
xchg
daa
lods
out
rolb
lock
cmp
std
inc
rcrl
sysenter
xlat
and
cmp
scas
inc
push
pushf
test
push
outsl
bound
dec
push
and
shlb
dec
jp
movsl
dec
cmp
imul
jecxz
inc
push
fiadds
push
sub
out
fcom
add
pop
test
and
aad
popf
jg
adc
fs
xchg
xchg
idivl
ja
jmp
dec
and
or
xor
push
lret
ds
fsubrp
push
mov
out
push
sbb
lea
mov
das
fcompl
add
sbb
outsl
mov
cmp
scas
sbb
jbe
pusha
pop
clc
xor
push
ret
sub
fmull
aad
mov
filds
mov
gs
les
sub
adc
shll
cld
arpl
mov
decb
add
cmp
aam
mov
adc
or
sarl
or
pushw
jmp
dec
push
sbb
adc
adc
push
sub
ljmp
lahf
sbb
sbb
shrb
mov
jae
rcrl
notl
not
stos
test
jecxz
inc
xchg
arpl
ret
adc
xchg
xchg
mov
sbb
imul
lcall
inc
ds
ret
sub
lcall
enter
adc
push
sbb
dec
sar
lods
mov
push
mov
loope
in
mov
mov
ret
push
add
and
shl
sbbl
imul
and
xor
call
out
push
cmpsb
jl
pop
cwtl
adc
sbb
jmp
sub
mov
shl
lahf
mov
mov
into
or
adc
cmp
call
fcompl
jno
xchg
pop
int3
shlb
leave
mov
das
jnp
aas
mov
pop
inc
sbbb
or
xchg
jns
jbe
fxch
xchg
popa
mov
ss
in
cmpb
or
imul
sbb
cmp
gs
push
and
repz
mov
adc
mov
pusha
repnz
mov
cmp
lds
jl
pop
and
imul
jge
sub
cmp
sub
ljmp
mov
loope
xchg
icebp
and
lock
jbe
fld
mov
stos
add
pusha
dec
jl
add
cmp
out
cs
popf
sbb
add
fcomip
add
in
aad
mov
jnp
cmp
cmp
call
adc
pop
addr16
sbb
and
pop
and
scas
ljmp
lds
fdivs
push
lret
jne
pusha
es
mov
xor
test
and
dec
gs
inc
icebp
in
mov
sub
fldl
rolb
movsb
in
cwtl
addl
sarl
pop
je
sub
rorb
shlb
rorl
dec
inc
dec
or
push
test
gs
push
pushf
loop
out
cmp
mov
cli
lret
into
mov
ds
pop
mov
negl
mov
addr16
xchg
leave
dec
sub
mov
push
jmp
pop
repz
and
jg
pop
pop
or
test
inc
andb
sbb
shrl
insb
pop
lcall
pop
or
mov
mov
movsl
lret
push
push
mov
int
ljmp
test
jae
popf
mov
jne
and
test
neg
cmp
stos
cwtl
push
outsb
scas
mov
jne
inc
lret
cld
aas
pushf
cli
cltd
mov
dec
ljmp
jmp
pop
call
inc
insl
push
fistpll
mov
push
test
sub
push
test
xchg
popa
movsb
adc
orb
popa
push
fs
leave
movsb
cmc
test
psubusb
xchg
add
lret
fs
pusha
cmp
lret
push
dec
cmp
jne
das
loop
sub
popa
mov
stos
ss
cli
js
inc
cmpsl
add
sub
sub
cmp
pop
das
mov
xchg
mov
lods
in
pop
rorl
btr
mov
adc
lock
mov
out
jle
cmp
rcl
adc
add
mov
fmuls
and
lds
call
lret
mov
je
adc
movsb
jae
aam
fdivrl
bound
mov
pop
fstpl
aas
daa
add
movsb
adc
jae
sbb
cmp
mov
mov
and
sbb
lret
add
mov
mov
mov
mov
inc
sbb
pop
xor
push
cmp
sti
mov
int3
mov
icebp
stos
enter
movsl
xchg
mov
jg
sub
xchg
das
add
icebp
sbb
jle
push
out
xchg
cmpsb
xor
inc
test
sub
notb
filds
pop
dec
rcll
jp
inc
into
cmp
jmp
xrelease
daa
rolb
push
sbb
scas
cmp
stos
gs
dec
js
push
aam
inc
pop
push
clc
sub
dec
jnp
pop
xchg
fcoms
dec
adc
andl
mov
outsl
outsw
pop
enter
jp
cmpsl
cmpsl
insl
dec
call
fucomp
mov
insb
sub
dec
dec
fs
imul
sbb
xor
arpl
ret
notb
lret
dec
ja
add
movsl
js
outsl
sub
out
or
pop
push
out
lods
aad
daa
cwtl
inc
cmpsb
jno
sub
psubusb
or
cltd
inc
in
push
push
imull
mov
adc
mov
das
adc
mov
lahf
nop
into
movsb
push
cmp
inc
movsb
in
xor
cmp
jp
popa
fsubr
sbb
adc
fimull
mov
mov
subb
mov
aad
mov
mov
jmp
or
push
and
lret
xchg
subl
push
addr16
das
mov
cmp
shrb
shlb
jg
and
xor
xchg
cmp
das
in
and
sahf
lds
xor
movb
outsl
ds
sub
loop
xor
jge
leave
jnp
cld
and
enter
cmp
mov
add
pop
jge
cld
mov
cmp
adc
lahf
xor
sub
push
pop
in
sub
mov
test
cmp
stc
movsb
icebp
int3
inc
xchg
int
cld
xor
or
xchg
pop
lret
dec
js
dec
jnp
into
cli
roll
push
jo
adc
add
mov
ja
out
xchg
flds
xchg
or
mov
loopne
inc
cmp
cmp
int
test
dec
push
inc
add
pop
push
fdivl
push
jo
fldcw
sbb
inc
xchg
outsb
jge
adc
rcll
fmuls
testb
mov
push
rorl
jnp
lods
dec
dec
loop
testl
or
dec
jo
and
cmp
enter
es
aas
mov
xchg
and
jns
dec
jmp
lods
fcoml
aad
adc
push
ljmp
insb
push
gs
test
sub
dec
ljmp
outsl
int3
lds
add
outsb
sub
sub
nop
sub
mov
daa
in
pop
mov
cmp
ret
push
xor
xchg
enter
cmp
ret
jo
inc
jmp
mov
cmp
fcompl
in
ds
or
test
cmp
cmp
and
out
jg
xorl
and
add
sbb
push
in
out
pop
inc
push
icebp
ljmp
test
lds
adc
mov
lock
out
jg
inc
push
jns
loopne
int3
fwait
or
push
xor
add
cli
fistpl
xchg
out
ss
adc
out
sbb
sbb
iret
je
inc
jns
pop
pslld
xchg
popf
sbb
pop
push
addl
xor
add
lret
insl
aas
jns
mov
lret
jmp
mov
add
xchg
sbb
jno
mov
dec
jl
lahf
lds
push
xchg
inc
pushf
jge
add
arpl
das
addl
dec
jl
addl
cld
loope
repz
cmp
pop
and
in
into
xor
cmp
in
daa
ds
loope
jl
insl
cli
scas
call
inc
test
xchg
mov
inc
sbb
lods
into
aad
orl
mov
ret
inc
mov
cmp
out
scas
pop
push
test
rcr
xlat
daa
push
pop
xchg
loop
mov
mov
xchg
push
sbb
adc
or
inc
sbb
mov
xchg
out
jp
mov
add
push
sbb
or
popf
int
cs
in
lcall
mov
gs
xor
out
fldcw
mov
or
cmp
fisubs
sbb
inc
in
pop
or
and
repz
mov
xchg
jle
gs
jl
push
shll
leave
test
jl
sahf
and
xchg
inc
adcb
inc
jns
jl
icebp
aas
lret
cmp
ss
scas
outsl
inc
mov
mov
and
push
out
inc
orl
fwait
cld
add
sbb
pop
or
adc
sbb
inc
shr
popl
xor
sar
pop
push
fisttpl
pop
das
outsl
pop
adc
les
sahf
push
test
adc
das
add
movsb
add
push
les
idivb
stos
add
dec
scas
lret
sbb
std
repnz
decb
mov
xlat
adc
and
xchg
lcall
in
hlt
scas
negb
or
std
pop
lock
ss
xor
fucom
push
inc
and
mov
jne
rol
cmp
sbb
mov
insb
repz
popf
scas
ror
mov
or
sub
out
mov
sbb
addr16
jns
sahf
sahf
fs
hlt
hlt
out
cmp
push
mov
shll
jmp
or
jo
in
frstor
pop
stos
xchg
dec
lahf
popl
xchg
fimuls
sub
ss
aam
movsb
push
push
push
sub
push
rorl
mov
mov
std
mov
pop
add
sub
sub
cmp
lret
mov
pop
fimuls
adc
jne
adc
lods
jbe
or
aam
cltd
ret
jo
dec
dec
in
mov
rcrb
int3
jl
repz
mov
mov
push
fs
mov
dec
scas
jo
xchg
add
ja
adc
daa
mov
into
pop
add
dec
mov
xchg
mov
stos
cld
out
lods
rcl
xor
fildl
out
sub
push
add
push
jecxz
lret
or
ss
popf
mov
xor
jecxz
mov
sbb
adc
push
adc
and
jne
call
add
icebp
stos
dec
jl
mov
ret
pop
or
xchg
sub
xchg
es
sbb
and
or
inc
jb
pop
xor
dec
inc
fmulp
jno
jmp
into
in
sarl
ds
stos
repnz
mov
adc
es
and
data16
push
and
push
andl
scas
xor
cli
jg
mov
cld
ret
mov
mov
sub
lcall
imulb
push
aad
inc
cli
icebp
or
and
pop
sub
sbb
mov
inc
test
xor
ret
dec
fmuls
mov
sub
arpl
sub
in
dec
inc
ds
pusha
lea
jnp
cmp
icebp
rclb
in
sbb
rorb
scas
mov
cmpsl
or
sti
mov
pop
ret
dec
stc
dec
out
dec
mov
lret
addr16
lcall
dec
bound
pushl
fldl
push
xor
fistpll
pop
jp
sub
jmp
cld
outsb
jmp
add
test
adc
and
mov
test
ljmp
jns
xchg
jle
or
and
inc
add
std
push
add
xchg
and
and
xor
ret
iret
or
or
push
xchg
pusha
pop
add
test
test
or
dec
es
dec
sarb
fimuls
stc
jb
inc
fdivrs
mulb
mov
and
mov
cli
ds
mulb
scas
jg
push
data16
jl
and
js
jl
jecxz
mov
mov
push
movsb
pop
add
push
icebp
in
lret
shrb
sub
jp
pop
jae
add
test
loope
shl
and
pop
or
nop
dec
stos
push
cmpl
pop
inc
fadd
inc
inc
ljmp
sub
imul
mov
inc
or
lret
cmp
xor
add
cmpl
cmc
xor
aaa
xor
leave
daa
int
or
push
or
out
pop
outsl
mov
mov
inc
orl
mov
test
mov
mov
imul
pop
push
jle
pop
jns
popa
mov
push
pop
mov
mov
inc
sub
insl
ffreep
hlt
lahf
insl
jecxz
inc
mov
repz
adc
ret
in
mov
mov
bound
xor
insl
dec
out
sub
jae
dec
into
xchg
stc
iret
and
movsl
cmp
pushf
fimuls
nop
adc
adc
shll
aam
rcrl
fs
rcl
inc
mov
ret
and
aaa
loope
and
cld
lcall
cld
ror
inc
pop
pop
sub
stos
arpl
jbe
sub
ljmp
push
shr
pop
sub
dec
inc
and
cwtl
sbb
mov
mov
xlat
cmp
sbb
popa
mov
xchg
leave
ret
inc
repz
jecxz
dec
mov
stos
fwait
lods
sbb
arpl
imul
pop
push
aam
mov
jbe
cmp
inc
xchg
sbb
push
mov
es
pop
cmp
sub
sbb
or
clc
ljmp
mov
mov
jp
dec
dec
pop
cmp
sub
sbb
or
clc
ljmp
mov
mov
xor
dec
pop
cmp
sub
clc
xor
cli
fmul
enter
test
cwtl
stos
mov
pop
dec
dec
pop
cmp
sub
sbb
call
lods
iret
and
inc
addr16
gs
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
lds
loope
call
cmp
xor
jge
dec
add
mov
mov
movsl
std
xchg
int
movsl
and
or
inc
jge
dec
add
mov
movsl
in
in
std
mov
sub
and
adc
and
mov
in
popf
ds
clc
xchg
inc
xchg
into
dec
pop
into
gs
sub
push
xor
stc
mov
in
rorl
in
pop
js
lds
xlat
icebp
pop
cwtl
ret
scas
jns
insl
mov
xchg
dec
mov
out
fwait
cmp
ds
mov
push
mov
jge
enter
call
nop
lret
pop
cld
xchg
cmpsl
xchg
pusha
shlb
ret
mov
addl
cli
pop
jo
sbb
sub
add
je
cmpsl
int
mov
xor
sbb
ds
mov
sub
pop
xor
lea
or
dec
adc
mov
mov
loope
xchg
int
fldl
or
cmp
dec
popa
xor
test
stos
popf
fisttpl
in
adc
and
add
cs
sbb
inc
adc
enter
call
les
dec
data16
xor
js
add
pusha
sbb
jmp
test
lock
movsl
std
xchg
int
fnsave
gs
xor
dec
add
mov
mov
movsl
std
xchg
int
fnsave
gs
xor
dec
add
aad
pusha
lcall
xor
mov
int3
jbe
outsl
imul
and
jle
inc
fsubl
or
std
mov
push
out
popa
add
cmpb
push
mov
aam
mov
mov
xchg
in
scas
jle
add
mov
pop
jb
mov
orb
xor
insl
adc
xor
sbb
inc
xor
outsl
xor
cs
stos
push
add
adc
inc
dec
into
repnz
gs
push
js
inc
jno
push
pop
mov
cli
test
mov
sti
pop
ret
jecxz
fldt
jae
addr16
lock
cmp
or
test
xchg
inc
xchg
add
icebp
and
andb
jno
aas
sub
je
sbb
push
add
daa
fildll
call
sahf
cli
cltd
es
pop
lahf
push
pop
fwait
push
push
inc
cmpsb
outsb
xchg
jnp
into
jns
adc
adc
cmc
ficomps
insl
es
stos
sub
add
repnz
mov
daa
mov
test
iret
in
add
repz
pop
sub
cmp
xor
mov
aam
sub
mov
shl
lock
or
or
jnp
pop
aas
test
mov
mov
mov
mov
leave
jecxz
and
testl
pop
test
xor
cmpsl
xor
pop
adcw
pop
int
je
sub
shll
jg
ficomps
movsl
aam
adc
mov
xchg
xor
daa
jo
sbb
clc
xchg
sbb
idivl
fsubrl
hlt
sbb
lods
cmpsb
fbld
pop
jb
mov
stos
mov
outsl
sub
pop
and
insb
mov
push
stos
fidivs
pop
xchg
or
pop
jnp
sub
cwtl
fsub
and
or
scas
bound
inc
sbb
mov
and
out
cltd
xor
mov
dec
lahf
arpl
xor
inc
xor
sub
cs
xchg
lock
and
into
mov
jge
cmp
adc
add
pop
xor
lcall
inc
jmp
dec
clc
mov
mov
dec
sti
faddl
mov
je
cmp
inc
cltd
adc
xor
add
push
insb
int3
add
nop
add
inc
out
dec
pushf
mov
cwtl
adc
jb
and
scas
ret
push
cmp
xor
sub
mov
pop
adc
shr
pop
mov
popf
mov
ficoms
and
inc
out
mov
ss
sbb
lock
popf
or
pop
push
in
jno
int
dec
out
out
sub
dec
mov
shlb
in
dec
cmc
pop
arpl
jp
dec
sbb
add
jl
jmp
clc
mov
ljmp
cmp
imul
or
mov
sub
shll
scas
gs
js
repnz
mov
out
mov
aaa
jbe
xchg
inc
mov
mov
or
mov
dec
stc
mov
mov
gs
mov
xchg
push
insl
in
add
pop
inc
bound
mov
cwtl
das
or
or
push
xor
lods
and
out
movsl
mov
or
leave
xchg
daa
inc
inc
adc
js
fadd
mov
cld
push
movsl
mov
and
in
pusha
sbb
dec
sub
jg
jae
loopne
movups
push
mov
jp
mov
jbe,pt
fcomps
pop
cli
outsl
cltd
gs
push
dec
jno
mov
adc
into
and
mov
notl
addr16
xchg
mov
or
insl
push
bound
sbb
or
dec
shll
pop
movb
and
xor
adc
push
sbb
mov
adc
fstps
jg
int3
xor
fwait
arpl
fstpl
dec
lods
pop
jp
ds
cli
pop
xchg
adc
adc
clc
movsb
movsb
push
mov
push
jnp
push
outsl
adc
xlat
std
xchg
test
push
inc
jge
bound
in
cmc
dec
push
loopne
push
shr
aad
mov
or
lea
mov
lret
shrb
jmp
in
mov
xorb
lods
xorl
xor
mov
jge
in
add
dec
xor
mov
and
aaa
insl
lret
stos
cltd
ds
fdivrl
dec
xor
leave
mov
mov
mov
jg
or
xchg
xor
frstor
popa
pop
aas
push
test
adc
mov
add
jl
call
gs
adc
inc
mov
ret
iret
into
lea
subb
stos
int
mov
cmc
add
dec
clc
adc
mov
mov
pop
add
fiaddl
leave
xchg
fcoml
pop
dec
scas
movsl
adc
jp
jmp
sbb
sbb
fwait
popa
cltd
test
cmc
scas
divl
mov
int
jns
push
pop
idiv
nop
push
mov
sbb
adc
outsl
les
xchg
pop
arpl
mov
in
dec
jl
xor
ja
mov
add
xchg
fucomip
push
inc
dec
shrl
lahf
aaa
stos
lods
repnz
cmp
cmp
imul
jge
cmp
push
pusha
xchg
mov
pop
aaa
or
cmpsl
fs
shlb
or
mov
stos
jno
jno
xchg
in
pop
pop
adc
mov
xchg
mov
insb
shlb
lret
cmpb
cmp
jns
jl
pop
sub
pop
nop
enter
in
lea
dec
jne
cwtl
inc
jae
sbb
adc
in
dec
ljmp
int3
xchg
mov
imul
mov
sbb
insb
divb
jp
out
aad
xchg
repz
or
icebp
pushf
and
jecxz
ret
dec
les
adc
xor
cmp
xor
adc
push
mov
in
sub
scas
dec
xlat
mov
in
into
pop
shrb
xor
shrl
scas
xor
adc
sbb
or
stos
les
xchg
mov
mov
add
xor
pop
cmpsl
rcrb
mov
push
mov
mov
cwtl
push
fnstenv
dec
push
push
push
sub
or
and
popf
mov
in
fdiv
sbb
xor
movsb
jmp
pusha
cmp
mov
sub
pushf
repz
jmp
aam
xchg
pusha
sbb
adc
mov
sub
pop
and
scas
xor
in
push
push
popf
pop
xchg
push
jmp
jg
mov
add
rcrl
mov
sbb
pop
movsl
and
loop
aaa
fucomi
mov
and
testb
mov
pusha
sub
mov
inc
inc
pop
loop
add
mov
imul
out
xlat
inc
mull
iret
cld
stc
pop
in
adc
shrl
mov
shlb
dec
aad
leave
movl
fistps
into
arpl
pop
add
movb
cmp
mov
inc
pop
pop
jle
push
cmc
icebp
lea
mov
xchg
cwtl
lahf
scas
inc
nop
cmp
inc
pop
out
es
ret
and
mov
fadds
mov
stos
mov
loop
pusha
jb
jae
push
data16
loope
arpl
push
cs
and
jmp
xchg
mov
es
mov
lsl
sub
adc
mov
sub
popf
repz
mov
dec
mov
mov
xchg
pop
aad
ret
adc
mov
fwait
and
das
mov
cld
inc
test
sbb
mov
insb
shll
xchg
jmp
out
xorl
and
loopne
inc
pop
movsb
jecxz
adc
ret
scas
mov
pop
lahf
pop
fs
sti
cli
push
xor
mov
es
cmpl
repnz
outsl
ss
push
syscall
cmpsl
lock
push
into
ror
das
xor
arpl
imul
stos
aas
arpl
sbb
in
or
bound
push
mov
aad
sub
push
arpl
xchg
pop
das
dec
fistl
rclb
jl
mov
and
push
repnz
aam
int3
mov
dec
pusha
movsl
xor
lret
jmp
inc
jbe
and
adcb
mov
idivl
loop
fwait
cs
mov
add
iret
jl
arpl
xchg
jne
push
xchg
out
lahf
rcrb
push
mov
and
push
jne
fdivr
and
add
daa
movsb
out
jae
stos
gs
loop
push
hlt
cmc
sti
fwait
xor
loope
mov
rcll
testl
and
mov
in
or
test
xor
les
add
xchg
pop
mov
fsubp
or
test
jo
push
mov
xchg
dec
dec
jb
or
dec
sbb
cwtl
aas
out
leave
xor
adc
les
lret
dec
insb
bound
inc
jp
aaa
pop
imul
mov
xchg
mov
in
pop
cmp
pop
mov
hlt
in
loopne
mov
gs
add
loopne
push
hlt
pusha
sahf
sti
imulb
imul
inc
and
rcl
and
int
aaa
les
das
xor
lock
add
jb
sub
shl
testb
xor
dec
xchg
push
aaa
test
mov
inc
mov
cmpsb
or
imul
sbb
out
mov
mul
xchg
aad
fwait
push
push
jne
test
mov
jmp
or
pop
mov
scas
jp
sahf
fldcw
shll
enter
pop
mov
scas
cwtl
and
xchg
ljmp
mov
mov
jne
jl
cli
add
inc
fdivl
inc
fisttpl
push
rcrb
push
les
push
cmove
xor
dec
fs
xlat
pop
or
dec
xor
cwtl
scas
js
or
cmpsl
lret
jle
jno
arpl
jnp
sub
push
outsl
mov
or
loop
negl
test
cld
jb
add
into
iret
jmp
cli
test
mov
adc
cltd
fwait
aad
cmp
cmp
mov
mov
pop
test
inc
mov
dec
pushf
inc
int
inc
jne
vpmulhw
pushf
fmuls
lahf
ret
movsb
push
mov
push
lahf
sub
add
ret
fwait
xor
pop
push
cmc
into
mov
mov
call
inc
mov
adc
push
mov
inc
sti
aaa
js
ds
stos
data16
sbb
jae
frstor
dec
add
adc
jo
sub
popf
dec
orb
and
idivl
call
stos
push
pop
shlb
or
jle
lods
enter
movb
mov
mulb
and
pop
dec
fisubrl
sbb
dec
add
fiadds
testb
rorb
int3
ficomps
sbb
es
sti
jae
movsl
add
repnz
adc
sub
inc
aad
xchg
pop
jp
je
addb
out
and
mov
cwtl
fs
or
jo
xchg
cli
cld
cwtl
enter
push
mov
xlat
pop
dec
push
xlat
es
sbb
insb
mov
out
cmpsl
out
inc
jle
mov
mov
add
xor
ljmp
cmpsl
enter
fidivl
xchg
xchg
cmp
pop
push
add
xchg
xchg
xchg
dec
in
pop
ljmp
lret
mov
jnp
push
or
jo
ret
lcall
mov
xor
cmp
xor
xor
xchg
mov
push
sub
adcb
mov
jecxz
decb
push
cli
or
xchg
jecxz
pop
loop
orl
mov
xchg
sub
repnz
and
insl
or
jb
insb
int3
pop
in
repnz
sub
fisttps
fcoml
xchg
sbb
mov
lcall
mov
inc
xor
nop
cwtl
inc
mov
push
shrb
or
dec
popfw
mov
mov
leave
cwtl
and
mov
push
loop
sbb
dec
mov
loopne
mull
ret
adc
push
pop
out
dec
fstpl
and
addr16
adc
test
stos
mov
sub
in
push
dec
pop
scas
pop
sub
pop
sbb
xchg
mov
cmp
inc
or
mov
inc
mov
loopne
push
adc
stos
jnp
and
decb
mov
insl
sbb
lret
push
pushf
leave
mov
insl
add
pop
cmp
std
dec
addb
xor
mov
cs
adc
cs
fwait
pop
push
dec
mov
addr16
decb
xchg
std
gs
jno
enter
arpl
add
sbb
stc
ret
xchg
inc
repz
imul
push
shrl
mov
out
in
jo
dec
iret
cmp
xor
mov
sbb
jnp
jg
or
cli
dec
mov
bnd
movsb
test
fimull
in
push
inc
adc
outsb
fdivrl
inc
add
push
stc
xor
stos
or
adc
push
js
cmp
ret
jle,pn
out
cld
aaa
jne
and
jbe
test
outsl
out
rolb
pop
lret
inc
push
imul
pop
popa
push
out
inc
sbb
lret
iret
stos
push
lds
scas
cmp
mov
fistpl
repz
sub
adc
std
mov
push
shl
xor
jno
push
mov
mov
loopne
or
jmp
ljmp
inc
and
push
push
and
sbb
outsb
pop
stos
addb
lods
loop
je
inc
into
mov
dec
sbb
pop
add
push
push
lcall
adc
jecxz
mov
das
pop
scas
adc
or
jg
or
loop
iret
add
and
adc
cltd
arpl
push
rcrb
dec
xchg
rorb
into
xorb
test
mov
adc
cmc
sub
scas
into
in
subl
mov
add
lds
popa
lcall
xchg
lods
mov
in
dec
outsl
fdivr
adcb
sbb
ret
testl
pop
cmp
popa
cmp
pop
leave
fmull
lcall
mov
popa
ljmp
les
cmc
mov
mov
mov
push
adc
pop
ja
fs
cmp
out
aad
fists
push
pusha
pop
pop
add
imul
and
mov
inc
push
call
sub
cmpsl
pop
inc
push
dec
jo
dec
js
and
dec
sub
rol
or
mov
sbb
or
lret
xchg
adc
stos
lock
cld
add
xchg
ret
inc
xchg
test
adc
inc
mov
imul
out
sbb
jg
in
sbb
sahf
mov
mov
mov
scas
repz
rorb
bound
dec
sahf
std
cmp
lds
inc
cmpsl
xchg
xor
and
js
jno
lahf
inc
call
mov
jl
push
jno
dec
pop
jnp
imul
dec
inc
adc
cmpb
add
stc
jmp
and
insb
cmp
cs
mov
repz
imul
pop
mov
add
or
xor
pop
sarl
push
rcrb
inc
mov
push
push
or
mov
insl
xchg
aas
insw
xlat
add
mov
add
xor
ss
movsb
pusha
shll
shll
pop
outsl
sub
jbe
dec
das
jg
pop
jne
pop
push
and
xchg
fdivl
adcb
testl
xor
aam
ret
jne
dec
test
push
or
dec
lock
mov
dec
jge
push
inc
cmpsl
xadd
mov
sbb
ficomps
fwait
ret
or
mov
inc
jg
jge
dec
push
or
mov
inc
outsb
rolb
dec
int3
mov
insl
stos
pop
inc
xor
mov
outsb
fldt
cmp
iret
push
out
int
and
stos
push
add
dec
testb
gs
scas
fmuls
shr
xor
ss
adc
repz
xchg
xor
aaa
hlt
mov
in
inc
mov
aaa
fs
mov
inc
sub
jg
and
mov
cmpsb
xor
mov
ja
jecxz
and
ja
inc
xor
outsb
push
mov
cmp
bound
fnsave
add
sub
movsl
ror
cli
rcr
mov
notb
xchg
es
cmc
sarb
add
incl
shl
popa
xchg
cwtl
sub
adc
popa
inc
ret
dec
loop
fbld
adc
inc
pusha
mov
rol
mov
sub
addr16
out
insb
pop
arpl
or
mov
roll
cli
push
adc
popa
cmp
push
sbb
xor
cmpb
fucomp
orb
mov
xchg
pop
mov
and
sbb
aas
cltd
and
xchg
xor
andnps
ds
daa
push
aam
call
cmp
push
sub
fdivrl
repnz
mov
xor
xchg
mov
adc
and
sub
stos
adc
lds
add
movhps
stos
les
out
mov
xor
mov
lahf
add
inc
push
sbb
sti
jb
cmp
in
jle,pt
adc
gs
xchg
jmp
push
repz
pop
je
mov
insl
aad
mov
imul
test
adc
jne
sub
fld
nop
das
push
sbb
daa
jns
mov
mov
add
jno
inc
bound
aad
jle
jle
pop
in
sub
aas
aad
dec
lods
imul
repz
and
pop
mov
xchg
push
sbb
out
cltd
imul
sar
pop
and
add
sbb
stos
lock
out
mov
addr16
mov
jp
mov
xchg
add
push
stos
or
xor
rcll
es
call
sub
loopne
sarb
pushf
enter
pushf
mov
lahf
lahf
dec
loop
dec
and
pushf
add
sbb
rolb
xchg
and
jmp
pushf
paddusw
cmp
push
xor
mov
mov
js
sub
sbb
movsb
lods
add
lods
mov
pop
mov
pop
push
mov
mov
popf
outsl
leave
shl
cs
xor
ret
or
repz
xchg
cmp
cltd
pop
jp
xchg
das
inc
cmp
mov
fistpl
sahf
imul
xor
xchg
insl
jns
jle
inc
mov
cmp
pop
push
imul
lcall
aam
mov
cmc
dec
jbe
cmp
xchg
into
dec
xor
repnz
cmp
repz
rorl
dec
add
add
dec
js
sub
das
cmpsb
test
test
nop
jns
lret
addr16
lea
and
pop
adc
xchg
push
scas
xor
cmc
cs
in
ret
imul
ret
out
cmp
push
push
jnp
ss
ds
rcrb
push
aam
in
add
push
movsl
push
dec
add
sub
adc
insl
stc
push
cli
push
pop
out
int
jge
lods
in
inc
movsb
mov
sti
adc
pop
mov
fimull
sbb
mov
out
insb
fstp
dec
dec
mov
jbe
xor
enter
addr16
xchg
sbb
addr16
mov
add
push
push
lret
jb
cs
sbb
adc
push
push
dec
addb
sub
js
add
pop
scas
insl
or
fistps
icebp
rcrb
cmpsb
js
jle
loopne
int3
xchg
and
scas
lods
pop
in
inc
push
gs
jl
aas
test
pop
lcall
ds
push
mov
enter
adc
data16
xorl
push
sub
adc
clc
jno
stos
movsb
arpl
pushf
gs
cmp
mov
mov
lods
popa
insb
lcall
or
inc
cmp
sub
xchg
leave
iret
fiadds
lret
iret
dec
aaa
push
scas
fs
cmpsl
jbe
aam
cmp
sbb
lods
das
xorb
jo
and
stos
mov
shlb
cmpsb
adc
clc
mov
pop
filds
sub
and
mov
hlt
jae
sub
pop
jns
or
adc
outsb
pusha
inc
cwtl
cmovbe
scas
popf
sarl
inc
cmpsl
stos
loope
sub
in
addl
sbb
xchg
jge
cmpsb
mov
fildl
mov
js
mov
mov
and
fimuls
and
fadd
mov
imul
jo
cmp
inc
das
mov
rcrb
mov
or
cli
clc
insb
bound
loope
mov
mov
vpextrw
lds
fnsave
loope
aad
inc
add
ss
mov
cmp
sahf
imul
in
lods
outsl
and
js
xchg
sub
sbb
jns
popa
sub
popa
inc
mov
enter
fstps
xchg
int
fnsave
gs
xor
dec
add
mov
mov
movsl
std
xchg
int
fnsave
gs
xor
dec
add
mov
mov
mov
fnsave
gs
xor
dec
xor
mov
mov
mov
xchg
int
fnsave
lcall
in
sub
cli
mov
in
adc
add
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
push
out
push
ds
fists
fsubl
outsl
jg
dec
scas
pop
fisubrs
into
jg
pmaxsw
push
out
push
ds
fistps
dec
mov
sahf
outsl
mov
dec
scas
pop
push
das
into
aas
decb
out
pop
push
out
push
ds
fistps
dec
mov
sahf
push
lods
and
aas
scas
pop
fidivrs
pop
mov
pop
inc
out
push
ds
inc
xor
mov
sub
dec
outsl
or
test
push
out
mov
mov
adcl
inc
dec
push
pop
and
iret
mov
packsswb
dec
cli
push
sub
cmp
aad
cmp
scas
fiaddl
mov
mov
fwait
lock
push
push
adc
push
into
cs
jns
pop
scas
sti
data16
iret
adc
inc
mov
mov
jge
fstpt
loope
out
add
sbb
and
scas
dec
inc
std
jo
leave
jbe
fdivrs
mov
insb
out
jp
push
out
dec
jecxz
icebp
pop
std
into
movsl
stos
pushf
fs
sbb
nop
jle
inc
dec
xchg
rolb
mov
out
push
ds
fistps
dec
mov
sahf
outsl
mov
dec
scas
pop
fisubrs
into
aas
decb
out
pop
pop
cmpb
mov
pop
sarb
ljmp
mov
inc
into
inc
popf
lea
mov
iret
inc
mov
or
sti
sub
adc
mov
jno
mov
inc
stos
adc
dec
mov
sahf
outsl
mov
dec
scas
pop
fisubrs
into
aas
decb
out
pop
push
out
push
ds
fistps
dec
mov
sahf
outsl
mov
dec
scas
pop
fisubrs
into
aas
decb
out
pop
push
out
sub
mov
push
inc
iret
loope
sbb
ss
lock
lcall
ljmp
dec
pop
pushf
mov
sub
jbe
mov
out
js
mov
stos
daa
test
iret
xchg
push
sti
cmpsl
xor
test
mov
add
add
jl
jmp
jl
pop
fsts
sarl
aad
jmp
leave
lret
fcompl
push
and
push
sbb
mov
fcom
xchg
pusha
mov
dec
ss
or
pop
jb
daa
mov
xor
add
imul
dec
bound
or
inc
into
inc
pop
mov
mov
scas
or
pop
cmp
jecxz
rorl
test
mov
cmpsl
xchg
lret
ja
cli
arpl
pusha
pop
in
mov
xor
jnp
ret
movsl
and
popa
jg
adc
adc
cwtl
cs
rcll
lods
repnz
lcall
inc
lea
jl
nop
cmp
and
lcall
lcall
add
sub
xor
into
das
addl
jbe
xor
ja
andl
mov
repnz
and
pop
jne
std
mov
sbb
jae
out
test
jle
cmp
leave
daa
jns
outsb
je
aad
repnz
dec
nop
lds
and
call
shll
das
sbb
jge
movsl
xor
xchg
ror
daa
shr
add
sti
xor
cli
jnp
cmp
aaa
ljmp
and
mov
and
cltd
out
out
ljmp
mov
cld
shrl
leave
mov
mov
mov
psrlw
xor
push
sbb
sub
and
xchg
in
insl
mov
or
aas
push
das
cld
jb
fsts
ss
and
in
nop
ljmp
and
mov
in
lods
mov
mov
or
add
negl
mov
scas
aaa
daa
mov
push
xorb
pop
cmpsl
mov
clc
leave
out
bound
pop
dec
jle
aas
push
repz
xchg
cmp
sub
jge
arpl
je
je
rcl
sub
xchg
adc
adcb
fmuls
dec
shll
nop
lods
jne
add
mov
lods
push
fcom
lahf
or
or
pop
cmp
jp
or
fldl
mov
ret
fistpl
inc
xchg
and
in
inc
fs
incb
inc
xchg
sbb
out
adc
setg
mov
mov
std
mov
mov
jge
sti
lods
add
lret
add
push
iret
mov
ret
xor
mull
adc
cmc
xchg
insb
xchg
nop
sub
jmp
rcr
cwtl
shlb
mov
cmp
sbb
sub
jno,pn
inc
mov
sbb
loopne
mov
ret
stc
dec
outsl
rclb
cli
mov
mov
mov
roll
mov
mov
cld
stos
outsl
inc
je
jmp
jmp
icebp
inc
and
or
push
jecxz
push
mov
add
mov
bound
es
mov
repnz
jmp
ljmp
out
test
fsubs
stos
pop
sbb
xchg
or
loopne
int3
adc
fildll
mov
hlt
aad
add
repnz
sti
inc
shr
mov
fsubrs
jmp
mov
xor
cwtl
sbb
xchg
xchg
adc
push
mov
enter
xor
repnz
xchg
add
rcrl
xchg
mov
mov
in
jmp
dec
int
sbb
ret
fstpl
lock
in
mov
test
imul
push
jnp
in
inc
lahf
cld
insb
cmpsb
jno
in
adc
push
jae
fcompl
ja
test
add
idiv
call
cmp
testl
cmp
sbb
addl
sbb
leave
jl
pop
push
jmp
sti
lahf
mov
rclb
jl
aad
push
jmp
inc
out
andl
pop
xchg
pushf
cwtl
out
mov
data16
daa
cmpsb
push
addr16
je
cmp
inc
scas
add
mov
and
push
test
sbb
mov
jg
push
not
std
loope
imul
into
data16
jle
movsb
lock
dec
add
xchg
sbb
clc
in
jmp
add
loop
mov
or
pop
add
cmp
sub
clc
xchg
push
xchg
ja
mov
into
fs
jae
push
push
pop
popa
cmp
outsb
lret
outsl
test
jecxz
dec
cmc
inc
cmpsl
movsb
insb
dec
xlat
repz
data16
push
addr16
mov
xor
int
jb
lahf
je
fmuls
add
movb
cmp
jns
jne
inc
push
xor
dec
pop
jge
lret
adc
pop
out
inc
idiv
ja
mov
mov
jno
movsb
dec
cmpsl
cmc
xchg
cmp
popf
dec
pop
lods
lock
jbe
int
mov
sbb
dec
outsb
pop
push
andb
aaa
test
shlb
cli
mov
gs
daa
leave
outsb
mov
ds
popf
movsb
fisubs
sub
dec
test
popa
or
jg
mov
fiaddl
jb
pop
inc
mov
jl
dec
fisubl
mov
icebp
stos
orb
mov
sahf
sbb
or
cmpsl
pop
pop
dec
push
in
imul
sbb
fiadds
push
mov
stos
xchg
cmpsl
sti
mov
mov
inc
mov
daa
jecxz
inc
loope
push
pop
push
add
insb
sbb
scas
adc
pop
loope
xchg
mov
xchg
jecxz
arpl
jmp
dec
jge
dec
push
call
cmc
mov
mov
push
or
sbb
dec
inc
jge
shlb
cld
insl
mov
jno
sub
imul
sbbb
mov
jnp
jne
mov
adc
lahf
inc
sub
ret
shr
or
adc
cmp
clc
cmp
test
jp
outsb
xor
out
dec
lods
jmp
outsb
and
sub
xor
jb
ja
jb
repz
aad
loop
fidivrs
push
cmp
push
das
aas
in
outsl
mov
xor
fs
pop
dec
lcall
jp
mov
xchg
ljmp
in
insb
dec
mov
xchg
dec
push
adc
cmp
mov
adc
pop
cmp
cmp
add
mov
test
bnd
xor
xchg
mov
subl
pop
jnp
in
mov
orb
or
addr16
test
hlt
pusha
xchg
adc
mov
mov
jp
ret
or
mov
add
ss
mov
mov
pop
push
cmp
cli
lret
sbb
push
push
clc
inc
pusha
add
mov
cmp
mov
xor
in
ss
mov
cwtl
roll
pop
es
xor
fs
push
int
in
scas
mov
mov
jge
out
daa
in
pop
mov
std
pop
sbb
cmpsb
inc
or
repnz
fildl
aam
outsl
sub
divl
xor
cld
xor
es
outsb
call
inc
push
cmp
scas
wrmsr
dec
shll
andb
pop
add
cld
ljmp
scas
std
js
dec
jecxz
ss
cmp
shlb
int3
adc
jb
icebp
aad
in
je
das
imul
es
and
gs
dec
imul
xchg
fists
lret
adc
push
pop
loopne
ja
cmp
mov
adc
sub
push
fldl
xor
add
add
pop
dec
and
fdivr
xchg
mov
outsl
sbb
imul
clc
cmp
mov
dec
leave
sub
jecxz
das
cmp
loope
cmp
dec
inc
push
sbb
js
mov
adc
dec
int3
xchg
sub
pushf
bound
pop
sbb
jge
push
int
sahf
popa
into
ds
mov
inc
icebp
push
sub
or
jle
sub
mov
jl
jno
call
push
jecxz
pop
and
test
or
xor
adc
sbb
jbe
inc
into
leave
push
mov
xor
fnstenv
lahf
xchg
daa
xchg
lods
je
outsl
push
or
lods
sub
jne
mov
mov
push
bnd
and
loopne
pop
jo
dec
mov
lcall
or
dec
lcall
sbb
es
dec
adc
pop
jb
je
jae
fistpl
push
ret
sub
stos
repnz
cmpsl
fsubl
test
push
fsubs
mov
shrl
lods
mov
in
outsl
pop
mov
sbb
jg
fsts
dec
arpl
push
repz
push
cmp
cmp
pop
mov
scas
lcall
pop
notb
push
push
clc
lcall
inc
adc
inc
push
xor
add
adc
or
push
add
cmc
and
jmp
jp
inc
mov
cmp
inc
mov
mov
pop
loope
jno
pushf
into
pop
subb
movsb
adc
xchg
mov
mov
inc
xchg
sahf
loop
es
lret
movsl
or
loop
jge
and
addr16
jp
mov
lret
cmp
add
or
repz
add
mov
pushf
rorb
inc
outsl
mov
les
lcall
push
sub
test
push
xchg
inc
xchg
add
inc
cmp
out
adc
leave
pop
je
push
add
leave
cmc
mov
cltd
icebp
add
adc
push
jp
insb
lret
mov
out
push
into
sub
std
jae
shrb
mov
clc
fcmovne
adc
add
pop
pop
sbb
mov
add
imul
pop
movl
xor
mov
aas
add
ret
mov
cmp
test
or
xchg
insl
ret
sub
push
cltd
in
sbb
test
scas
fwait
pop
out
xor
push
xor
xor
mov
push
lahf
sbb
nop
xor
cmpsl
pop
pop
sbb
inc
mov
jno
pop
test
cmp
lods
push
mov
je
mov
adc
orb
in
mov
aaa
push
ret
cwtl
adc
pushf
lods
jg
xchg
fldl
ja
or
test
push
mov
dec
cmpsb
xchg
push
nop
pop
cltd
cld
add
ds
lods
mov
sti
add
cmpl
mov
je
fldenv
jno
pop
sbb
sbb
decl
inc
iret
nop
sub
call
cmpsb
sahf
add
push
mov
fistps
adc
lea
mov
jno
jb
test
lahf
push
sbb
push
gs
test
ljmp
es
sbb
jns
xor
pop
pop
add
and
push
pop
xchg
or
lret
cmp
subb
sbb
mov
mov
xchg
nop
pop
xchg
or
ret
cmp
mov
in
inc
lods
xchg
shr
jge
lahf
dec
into
test
push
cmp
mov
xchg
ret
andl
cwtl
mov
aam
std
shlb
xchg
std
mov
stc
add
aaa
push
hlt
cmpb
and
xor
daa
sbb
les
jne
push
or
and
mov
or
sbb
push
push
xchg
aam
mov
lret
xor
pop
inc
mov
ss
sub
outsl
mov
repz
mov
in
loop
aaa
movsl
loop
mov
sti
xor
dec
shll
add
pushf
popa
icebp
js
add
mov
adc
xchg
push
scas
dec
fldl
insl
xor
mov
sahf
jmp
and
cmp
shlb
lods
js
dec
cmp
jg
lock
jg
pop
rcrb
add
mov
std
pushl
mov
out
sub
xor
sete
dec
inc
insb
xlat
mov
dec
nop
pushl
cmp
push
sbb
pop
test
and
ret
out
lods
push
iret
pop
and
add
mov
sub
ja
movsl
jl
dec
rolb
es
inc
push
out
xchg
xchg
and
fcomp
cld
xchg
mov
mov
pusha
jp
loop
imul
xchg
cltd
jnp
test
adc
push
add
cltd
aad
rolb
mov
pop
add
add
push
divb
xchg
fdivrp
mov
jp
xchg
pop
mov
testb
jb
cwtl
mov
sbb
push
jae
lock
mov
and
mov
hlt
sbb
pushf
int3
test
jno
inc
mov
mov
xlat
xchg
mov
cltd
xchg
rcrl
clc
or
shrb
in
out
xchg
sub
loop
xor
xchg
in
mov
or
movsl
cmp
mov
loopne
lahf
clc
sub
pop
frstor
mov
imul
jo
cli
adc
push
and
ss
adc
mov
pop
add
imul
xor
sti
ss
push
out
ja
fs
adc
jbe
xchg
fidivs
imul
mov
imul
bound
mov
out
and
pop
shlb
fisubl
mov
test
push
mov
cmpsb
dec
xchg
in
pop
pusha
dec
pop
sub
and
adc
pop
ret
pop
fsubp
cmpsl
xlat
jns
mov
pushw
or
adc
or
sub
xchg
mov
xorb
or
in
pop
pop
xor
push
mov
cmp
xlat
sub
or
lcall
cmpsl
int
loopne
xchg
inc
insl
in
sub
inc
inc
jns
jl
jl
jae
and
pop
sub
mov
lds
mov
jecxz
mov
out
xchg
inc
mov
out
xchg
mov
dec
pop
iret
push
push
xor
dec
sbb
test
cmp
sub
mov
push
mov
xchg
fldcw
mov
push
adc
popf
andb
xchg
add
xor
cld
decl
das
or
sbb
cld
pusha
cs
mov
mov
pop
dec
xchg
cmp
cli
mov
add
push
ja
xor
arpl
cmp
xor
mov
fs
ret
or
or
hlt
cmp
add
sbb
add
icebp
fincstp
les
leave
scas
sbb
jecxz
nop
adc
xor
adc
push
adc
mov
xchg
mov
xchg
inc
sahf
pop
jne
xor
lds
inc
add
or
popa
lods
pop
inc
xor
inc
icebp
in
push
sti
popf
jno
je
pop
out
cmp
xchg
push
inc
addl
outsl
scas
jp
or
ss
xlat
popa
jle
pop
sysenter
or
inc
pop
push
jecxz
adc
mov
mov
jl
mov
in
xor
sub
scas
pop
and
sarb
mov
and
sbb
bound
jo
push
testl
xor
push
xor
sbb
cmc
iret
inc
pushf
hlt
or
test
shl
pop
insl
cmc
cmc
sbb
jge
ds
test
repnz
cs
fdivs
mov
shll
adc
mov
sbb
or
das
add
mov
into
popa
ljmp
pop
pop
pop
imul
rcrb
scas
ss
sti
stos
cmp
jb
mov
leave
push
push
icebp
call
repnz
push
mov
mov
add
sbb
cmp
dec
and
and
lahf
imul
lret
sbb
test
xchg
popf
in
sahf
imul
jg
pop
cli
repz
leave
cwtl
cmp
mov
xchg
test
flds
push
lret
lea
xchg
sbb
dec
and
inc
add
int
daa
jle
jo
xchg
orl
int
sbb
into
push
add
mov
and
pop
in
push
cmpsb
subb
movsb
hlt
lahf
jae
mov
adc
sbb
jnp
lock
mov
scas
jge
sub
jge
mov
cmpsl
aaa
fucomi
mov
xlat
fwait
in
movsl
loop
xor
insl
int3
orl
stos
hlt
mov
xor
fcoms
adc
pop
adc
push
jnp
adc
sbbl
sbb
mov
sub
xchg
dec
add
inc
out
scas
xchg
sub
sub
scas
xor
pop
into
sub
out
mov
inc
pop
enter
sar
test
sub
lcall
mov
les
xchg
cli
xchg
out
outsl
xchg
inc
jbe
cmc
mov
lock
int
pushf
les
lret
sbb
cmc
movb
inc
add
leave
fadds
dec
fdivl
je
sbb
rcrb
pop
rcll
insb
sbb
adc
imul
or
adc
jno
mov
add
push
mov
ja
loope
shlb
push
mov
scas
jbe
sbb
shrb
pop
lock
push
cmp
movsb
leave
sub
cwtl
data16
out
sbb
inc
adc
pop
inc
popf
mov
je
and
and
shrb
mov
insb
xor
pusha
cmp
push
sub
jo
xchg
xchg
mov
push
xor
scas
jecxz
xlat
lods
mov
stos
or
mov
shlb
dec
je
add
xor
inc
xor
xchg
add
sub
and
cmp
or
test
push
mov
mov
xor
loop
push
pop
xchg
mov
mov
pop
sub
add
pop
sahf
cmp
mul
inc
test
out
xchg
cltd
pop
insl
mov
and
jecxz
insl
fildll
imul
inc
add
jno
sub
sbb
xor
imulb
cmp
cli
xor
adcl
inc
mov
pop
aam
sub
xchg
pop
and
push
inc
lret
aas
pop
push
repz
fisubrl
movsl
cmp
jmp
mov
das
sub
aad
xchg
shl
sahf
leave
mov
sub
dec
out
push
or
xchg
ficoml
data16
enter
ljmp
fisttpl
jl
lds
out
push
dec
mov
mov
xor
lcall
lcall
fadd
test
adc
fmuls
fucomp
pop
cmp
mov
cmp
pop
mov
fisttpl
and
in
inc
jge,pn
sub
xchg
mov
mov
js
ficompl
sbb
jge
sbb
adc
int
pop
test
jns
or
loop
push
in
pop
int
test
adc
ljmp
aad
outsl
je
push
icebp
in
jo
xchg
idiv
faddl
mov
cmp
rclb
aas
mov
add
loop
sub
push
jecxz
outsl
js
lock
shlb
scas
sbb
ljmp
xor
int
dec
outsb
sbb
scas
pushw
jb
mov
repnz
adc
call
push
pop
sbb
ret
shrl
mov
dec
or
push
jecxz
rcll
xchg
pushf
loopne
or
out
xchg
ret
xor
mov
jns
lahf
fnsave
xor
adc
push
mov
repnz
jl
imul
dec
lret
mull
mov
mov
stc
and
jae
mov
cmp
push
and
cs
push
jmp
mov
jmp
mov
arpl
imul
jb
jbe
in
inc
push
push
or
dec
add
lds
insb
aas
nop
dec
fbld
mov
sbb
pop
fdivs
imul
pusha
mov
std
in
pop
jmp
shlb
loope
stos
insb
inc
dec
icebp
popf
mov
imull
movsl
pusha
mov
mov
test
loope
or
pop
cmpsb
sub
add
mov
scas
push
sti
aam
cmp
mov
sarb
test
testb
daa
add
jae
jo
xor
stos
rclb
inc
in
popa
stos
pop
add
pop
inc
loop
popa
cmp
popl
movsb
leave
and
faddp
fcomps
testb
xchg
add
xchg
jmp
xchg
pop
rcll
in
jg
mov
fsubl
in
movsl
shrb
mov
xchg
mov
mov
push
paddsw
pop
pusha
sub
mov
imul
in
jo
faddl
add
jbe
mov
mov
add
adc
mov
cs
sti
not
mov
aas
into
fistps
dec
mov
sahf
outsl
mov
dec
scas
pop
fisubrs
into
aas
decb
out
pop
push
out
push
ds
fistps
dec
mov
sahf
outsl
mov
dec
scas
pop
fisubrs
into
aas
decb
out
pop
push
jmp
mov
scas
dec
mov
sahf
outsl
mov
dec
scas
pop
fisubrs
into
aas
decb
out
pop
push
out
push
ds
fistpl
dec
aas
jle
outsb
pusha
sahf
nop
mov
adc
scas
sub
lock
loopne
mov
mov
dec
dec
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
push
mov
call
xor
pop
ret
mov
icebp
loope
stc
xchg
stc
mov
inc
jno
popa
adc
push
xor
and
shl
shl
loope
xchg
mov
xchg
jbe
and
popa
adc
add
jae
and
shr
rcr
into
loope
xchg
scas
sbbl
adc
jnp
jne
jg
xchg
shl
sahf
mov
dec
bound
iret
mov
and
in
lret
cmp
jecxz
xchg
xchg
push
popa
adc
jbe
pop
loope
mov
pop
in
lcall
jo
mov
rorl
sbb
push
xchg
icebp
mov
lods
mov
fsts
jae
lods
into
shrl
es
mov
pop
push
mov
sub
mov
into
ljmp
je
push
notb
xchg
outsb
lods
mov
push
mov
mov
aaa
std
mov
out
lods
push
inc
idivb
mov
cmp
inc
cltd
and
inc
mov
add
out
push
and
shl
rol
shl
xchg
lods
addl
jno
popa
adc
add
xor
dec
xchg
mov
mov
ret
addl
cmp
dec
jo
jb
xor
out
test
icebp
aam
rcr
fsub
ljmp
xor
adc
push
inc
jb
push
push
push
jno
cwtl
les
ficoms
xchg
mov
inc
jno
popa
adc
add
xor
and
shl
rol
loope
xchg
mov
xchg
jbe
inc
jno
popa
adc
add
xor
and
shll
cmpsb
mov
jo
mov
or
and
dec
mov
sbb
xchg
out
mov
pop
adc
pop
fdivrs
add
clc
jns
and
ret
shl
insb
jecxz
rorl
push
stos
xor
jp
loope
pop
sub
dec
out
mov
test
jl
sub
cmpsl
xor
loop,pt
inc
les
adc
pushf
inc
sti
lsl
out
adc
sbb
pop
pusha
mov
inc
addr16
mov
xchg
pop
movsb
sub
scas
fsts
std
or
jg
mov
and
and
mov
push
rclb
pop
add
add
push
stc
in
pushf
dec
bnd
aas
xchg
fisttpl
icebp
pop
sbb
adc
sbb
imul
add
bound
xlat
or
pop
mov
pop
add
jmp
jnp
mov
testl
jae
cwtl
cs
loop
xor
cltd
in
add
ss
sbb
dec
movsb
andl
add
or
in
jp
sbb
jmp
test
inc
in
mov
aam
repnz
inc
stos
jge
ss
pop
std
insl
push
cmp
icebp
cld
fdivs
add
push
adc
js
jnp
shlb
negb
test
pusha
or
lret
aas
jae
scas
mov
in
inc
xor
pop
mov
sti
lcall
push
jge
xorb
imull
in
mov
jo
add
test
push
scas
pop
push
inc
mov
addb
shrb
adc
insb
movsl
xor
in
push
lea
dec
sub
dec
gs
push
add
mov
cld
insl
ja
in
mov
jno
call
cmpsl
xor
cmpsl
mov
addr16
sbb
bound
cmp
xor
sub
in
mov
fiadds
fsubrs
dec
lret
sub
fsts
ja
in
cmpsl
lods
jns
jle
pop
lock
outsb
loop
arpl
icebp
pop
and
push
xor
dec
mov
push
adc
adc
mov
lcall
and
mov
inc
mov
fidivrs
mov
je
cld
sar
mov
add
adc
gs
sbb
adc
mov
enter
adc
imul
pop
into
sbb
xor
jecxz
inc
sti
inc
sahf
mov
dec
cs
fnstenv
xor
inc
mov
inc
xchg
xchg
and
mov
cmc
jmp
mov
dec
and
ret
roll
fadd
lret
icebp
sbb
subl
jo
sti
aaa
mov
sbb
daa
pop
or
push
push
sbb
push
mov
out
sub
lcall
loopne
repnz
adc
dec
dec
loopne
jl
jle
xchg
mov
stos
pop
stc
sub
cmp
bound
jae
mov
js
adc
mov
adc
mov
mov
dec
pop
in
dec
pop
cmp
adc
ret
jae
jb
inc
jae
lods
xchg
add
out
in
int
cs
jmp
scas
scas
lret
cmp
daa
mov
pushf
stos
andl
or
xchg
xor
test
movl
pop
xor
cmpsb
jg
leave
je
daa
in
pop
aam
inc
pop
lods
lret
and
mov
into
test
scas
push
or
mov
sub
mov
jmp
xchg
push
lods
sub
mov
addr16
sbb
add
pop
push
shl
jg
sub
pop
dec
push
inc
mov
imul
leave
clc
jo
out
lods
xor
cmp
lret
push
mov
jbe
sub
enter
scas
pop
cmp
pusha
shlb
push
sbb
out
fcomps
out
dec
add
int3
add
jmp
jle
xor
gs
sub
sti
mov
loopne
sub
lock
loope
lds
in
in
pop
pop
sub
mov
shrb
adc
loope
popa
xor
outsl
and
pop
xlat
loopne
adcb
stc
push
xor
test
test
andb
adcb
bound
in
dec
push
xor
sar
and
rorb
arpl
and
inc
xchg
in
xorb
out
cltd
jmp
push
inc
push
xchg
pop
pop
inc
cwtl
imul
das
mov
arpl
jp
adc
sub
test
scas
cmp
orl
leave
les
push
push
xchg
push
cmpsl
xchg
rcrb
daa
xchg
loopne
inc
jo
jle
test
ss
xchg
pop
sbb
incb
iret
lds
fstl
mov
jmp
mov
popf
into
xchg
dec
cmp
aam
mov
cmp
lahf
sub
add
in
mov
cmp
or
aam
mov
mov
aad
xor
insl
xor
or
je
mov
roll
inc
or
js
xor
stos
inc
in
leave
aaa
push
sub
sub
scas
xchg
xchg
xchg
in
stos
shlb
repz
nop
or
add
sub
pop
adc
sarb
andb
and
or
inc
loop
jp
daa
xchg
fwait
sbb
shrb
jge
or
push
mov
and
push
mov
fnsave
vprotd
sub
mov
insb
fildl
xchg
xor
adc
and
mov
jg
pop
out
lahf
sub
mov
bound
shrl
pop
sbb
and
xchg
push
mov
jge
mov
mov
inc
mov
mov
xchg
xchg
and
ljmp
xor
js
iret
lahf
in
mov
dec
imul
test
ret
sti
shrb
int
out
mov
out
das
mov
mov
and
mov
jo
clc
push
dec
mov
icebp
xchg
ss
lods
rorl
inc
jbe
lret
enter
inc
pushf
dec
sub
pop
push
add
push
add
loope
cwtl
mov
ds
push
mov
pop
xlat
lock
scas
outsl
sub
fnstsw
mov
fstps
jle
cmpsb
cmp
jge
call
jb
xor
pop
dec
fisttpll
out
push
jge
or
fstps
repnz
mov
sbb
es
mov
mov
mov
jl
cmpsl
xor
push
lock
jb
dec
mov
into
ffree
jbe
or
shl
mov
pop
into
pop
loopne
push
repz
adc
jno
repz
xorl
out
push
or
in
jl
jb
mov
in
pop
fwait
jp
jge
icebp
adc
push
xchg
lds
clc
stos
outsl
sahf
lcall
pop
hlt
cli
out
enter
lahf
jle
inc
fmull
clc
or
stos
add
xchg
jmp
mov
sbb
loopne
push
xlat
pop
adc
xor
add
nop
pop
stos
in
pop
mov
xor
and
or
arpl
mov
ljmp
jp
mov
jl
sahf
imul
insl
lods
mov
loop
movsl
dec
in
push
add
jae
dec
popf
mov
pop
mov
ljmp
out
outsl
mov
xchg
sub
cs
add
add
iret
add
add
into
es
adc
lahf
int
stos
push
sbb
fnstsw
and
test
sub
orl
js
stos
xor
fs
sbb
in
inc
add
paddsb
xchg
nop
adc
mov
dec
inc
adc
in
shl
dec
dec
ja
adc
idivb
movsl
shll
jno
sbb
ljmp
pop
rcrb
jbe
sti
cmp
in
jmp
call
cmc
mov
rcl
inc
mov
inc
lret
rorl
cld
cmp
adc
sbb
and
jo
loopne
xlat
ja
lods
fs
adc
insb
hlt
int
push
xchg
jb
lcall
adc
mov
sbb
add
lahf
hlt
mov
std
jne
lret
insl
adc
in
jle
or
or
pushf
lods
adc
subl
pusha
gs
stc
jge
or
fldt
scas
push
cmc
pop
inc
lock
fucomp
inc
inc
dec
divl
inc
jg
adc
fucomi
iret
jle
jge
fiadds
inc
xor
or
lea
pop
push
push
shll
in
ss
mov
adc
outsb
ret
in
inc
je
pusha
cli
pop
loope
in
cs
out
push
gs
jmp
jg
lahf
int
and
cmpsl
push
lea
iret
jnp
shrb
stc
push
fcomi
xchg
sub
rorb
cmp
cmp
test
add
iret
gs
pop
mov
ljmp
sbb
aas
push
fdivrp
and
dec
or
outsl
daa
jge
pushl
mov
jnp
sub
fidivrs
sbb
aam
pusha
rolb
stos
xchg
leave
lret
loopne
pushw
inc
or
jno
daa
add
inc
imul
push
aam
mov
cmpsb
push
push
cmp
das
xor
push
inc
push
loop
xor
pop
and
cmp
out
or
sub
pop
adc
adc
jne
push
in
loope
push
mov
es
movsb
adc
insl
cmp
mov
dec
cmpsl
push
xchg
mov
push
out
push
fnstcw
aas
jl
cli
imul
cs
faddl
xor
fiaddl
xor
cmpsb
js
or
or
mov
test
scas
add
pop
cmp
dec
push
enter
pop
inc
rolb
lret
xchg
sbb
or
add
xchg
arpl
fidivrl
fs
dec
jle
orl
mov
data16
add
loopne
mov
xchg
pop
lods
xor
loop
ficoms
rol
insl
std
inc
insb
lcall
and
jecxz
stos
mov
pop
scas
sub
jb
clc
jg
push
jmp
shrl
or
dec
movsb
out
in
jecxz
mov
dec
loop
scas
sub
cwtl
cmpsl
insb
adc
cwtl
xchg
test
push
cmp
test
pop
sub
in
pop
jmp
xchg
aaa
add
push
jp
mov
sub
and
jp
stos
imul
adc
xor
mov
xchg
out
fnstcw
xor
mov
lret
jle
das
sub
sub
xchg
pushf
xor
les
sbb
mov
pop
jo
add
mov
push
rorb
sub
jae
cmp
leave
inc
imul
stc
inc
pop
xor
lcall
xchg
add
xchg
and
lods
mov
mov
cli
mov
dec
mov
xchg
and
jnp
cmpsb
rcl
lock
lcall
cmp
cmp
lahf
or
outsb
xchg
fwait
out
icebp
ret
adc
jae
add
add
cmp
pop
sub
add
sarl
out
shrl
rol
loopne
ljmp
push
fsubs
hlt
jl
in
or
push
inc
cmp
imul
lock
and
je
lock
ret
in
pop
mov
in
aam
aaa
std
lahf
lods
inc
cmp
cld
add
and
jo
loopne
jge
jp
add
mov
aam
call
push
add
mov
lret
adc
lods
mov
and
fistl
and
clc
adc
std
lahf
or
insb
and
xor
lahf
movsl
bound
push
jbe
aaa
mov
in
addr16
rcrl
add
xor
cwtl
mov
dec
mov
fcomps
mov
and
arpl
aad
es
jo
fisubrs
loope
ret
insl
test
outsl
cmp
mov
incl
addr16
mov
inc
std
sbb
test
pushf
and
jnp
adc
sbbl
xchg
jae
inc
sbb
or
ret
mov
sbb
loopne
or
ja
aam
mov
jl
jmp
push
sti
popf
cmp
cwtl
jl
mov
dec
add
inc
dec
xor
ret
push
xor
cli
icebp
ret
ret
push
leave
sbb
mov
pop
mov
pop
std
and
jl
ljmp
dec
push
jbe
aaa
ret
mov
rcrb
xlat
mov
push
pop
rep
adc
xchg
add
push
jecxz
sbb
out
dec
pop
push
sub
xor
test
mov
adc
cs
enter
jb
les
lret
push
cs
repnz
popf
jge
fpatan
or
pop
push
bound
jne
xchg
nop
pop
std
mov
lods
bound
mov
roll
jle
inc
ljmp
cmp
arpl
gs
pop
jmp
xorb
xchg
sbb
add
and
push
lret
lahf
ds
sarl
jle
sub
cs
push
dec
mov
call
scas
sub
es
sub
gs
jl
xor
jnp
pop
cmpsl
cmp
rorb
int
xlat
cmpsb
mov
push
pushl
or
mov
mov
repnz
add
push
in
and
push
or
push
push
xor
inc
mov
sbb
mov
sub
clc
notb
mov
cwtl
rclb
je
cmp
loopne
dec
daa
nop
jmp
fsubp
in
out
mov
mov
scas
cmp
std
das
xchg
xor
pop
push
insb
rcrl
pop
inc
push
movl
and
push
cmp
ficompl
pop
add
mov
dec
outsl
inc
inc
cs
outsb
push
push
adc
mov
fiadds
test
sub
fisubs
xchg
mov
mov
xor
pop
jp
shl
ret
pop
sbb
dec
rcrb
dec
mov
push
push
jmp
xchg
jne
ret
dec
test
fsts
mov
call
dec
sbb
pop
xor
and
pop
in
daa
idiv
cli
jmp
push
sub
jmp
push
rcl
je
cmp
mov
mov
fs
push
push
test
lock
xchg
mov
mov
je
clc
aas
jne
push
xchg
xor
sub
iret
push
icebp
daa
or
jg
sarb
sub
sar
xchg
xchg
adc
cmpsb
pop
fwait
push
dec
cltd
std
pop
inc
addb
add
adc
or
mov
mov
jb
shrb
push
push
rcrl
xor
jl
je
mov
loope
lahf
outsb
cs
jns
sub
mov
mov
fldenv
ja
rorl
cmp
daa
mov
mov
stos
loopne
add
dec
jl
sub
lret
sub
mov
loope
push
adc
test
in
aad
sbb
adc
stos
bound
call
test
sti
idiv
dec
shlb
push
cli
sbb
stc
cltd
std
and
mov
pop
ret
mov
inc
mov
fisubl
inc
adc
sub
arpl
xor
ffree
das
xchg
or
cmpsb
or
mov
dec
cltd
pop
aad
dec
dec
sub
xor
inc
jae
adc
mov
inc
mov
div
adc
pop
add
in
bound
mov
andb
in
inc
popf
jg
ret
mov
mov
mov
pop
sbbl
push
ja
and
push
mov
loop
mov
mov
in
xchg
adc
movsl
sub
lret
mov
mov
jb
imul
sbbb
addr16
rcrl
mov
push
push
lret
rcll
push
rcr
push
push
lret
out
jl
loop
pusha
adc
xor
testb
ja
xchg
push
lret
bound
dec
jmp
xchg
fdivp
sub
cs
xor
int3
sub
notb
repz
fs
leave
inc
sbb
sbb
xchg
ret
rcrl
iret
inc
dec
adc
pusha
les
outsb
sub
lret
dec
xchg
movsb
pop
sbb
pop
fninit
std
fsubrs
hlt
sti
ret
xor
add
stc
shr
xor
xchg
popa
jecxz
xlat
inc
pop
gs
jo
fdivrl
cmc
sbb
sahf
insl
push
les
sub
mov
in
mov
cmp
cmp
sbb
inc
push
fstpl
cltd
mov
aam
adc
bound
ret
popa
aas
xchg
jno
fwait
xchg
add
push
push
pusha
nop
jno
xchg
test
mov
jle
inc
pop
push
mov
lods
ljmp
int
add
ss
loope
ss
jmp
jno
fiadds
or
mov
or
orl
or
pop
clc
xchg
xorl
jns
loope
push
jne
mov
xchg
xchg
jl
and
xor
ss
jo
cmp
insl
enter
adc
fwait
repnz
out
pop
gs
stc
add
and
xor
repnz
sub
xchg
mov
xor
sub
xchg
dec
inc
cmp
add
lds
cmp
mov
jecxz
lret
dec
pop
roll
jae
ficoml
js
cmp
stos
cmpsb
inc
inc
stc
mov
mov
test
push
sahf
inc
cli
xchg
jo
adc
pop
cmp
gs
push
xchg
outsl
insb
cld
mov
inc
xchg
test
mov
lods
inc
shlb
data16
sbb
sub
leave
pop
xor
add
push
mov
or
mov
mov
mov
clc
cld
fxch
inc
mov
xchg
ret
outsl
icebp
adc
xor
or
xchg
shrl
adc
mov
enter
jns
repz
sub
test
xchg
mov
dec
sub
jg
jne
xor
hlt
fldt
mov
add
out
sbb
fwait
inc
movsb
cmp
jg
adc
inc
fistl
ret
inc
adc
int3
push
iret
std
sub
jne
lcall
jo
hlt
out
sub
lds
daa
lahf
into
add
dec
inc
lcall
dec
mov
adc
dec
add
movsl
pop
mov
cs
addr16
jns
cmp
loop
mov
adc
cmpsl
sub
jl
or
lret
cmp
in
aaa
shrl
and
cwtl
fxch
mov
mov
push
push
mov
lods
movsl
jbe
inc
and
xchg
jo
out
lret
add
aam
push
in
out
pop
jb
mov
outsb
outsb
std
loop
xchg
daa
addr16
lds
mov
mov
lea
loopne
jnp
adc
sbb
pop
stc
mov
popf
sbb
adc
inc
test
lahf
out
int
xchg
imull
fnstsw
adc
stos
shlb
xchg
and
out
daa
fmul
lcall
pop
or
loopne
cwtl
cld
and
push
fs
iret
popa
cmp
cmp
test
in
test
inc
aam
pop
xor
mov
sub
mov
sub
mov
scas
fucomip
jmp
add
in
sub
movsb
jle
lock
call
ret
and
call
arpl
pop
daa
test
pusha
jl
loope
pop
inc
inc
test
aaa
fdiv
xor
test
mov
decb
ja
mov
xchg
jmp
add
push
gs
hlt
cmp
xchg
in
movl
out
push
cmpsb
adc
jo
push
jge
es
aas
pop
sub
and
out
daa
sbb
sbb
nop
push
jns
pusha
and
jle
mov
mov
push
sbb
mov
mov
adc
xchg
cmp
call
nop
add
pusha
aam
xchg
ficomps
add
pop
xor
inc
jbe
mov
cmp
add
or
mov
pusha
inc
xchg
mov
xchg
push
xchg
pop
lods
std
mov
jp
pusha
int3
cmp
pop
cld
insb
std
ror
cmpsl
dec
incl
cmp
pop
shrl
gs
lods
sub
mov
fimuls
lock
adc
add
jae
sbb
in
lods
lcall
xor
xor
out
stc
stc
pop
or
cld
mov
hlt
rcrl
into
cltd
rcl
xor
in
pop
fistpll
cmp
pop
and
jns
sahf
in
pop
jb
cmp
stos
outsl
pop
out
jns
scas
fwait
pop
outsl
or
pop
add
addl
popa
cmp
dec
loopne
add
shr
movsb
iret
xor
mov
outsl
xchg
test
dec
xchg
mov
sahf
testb
movsl
xchg
fwait
or
dec
stc
into
inc
push
imul
add
cli
lret
jecxz
push
fsubrl
mov
andl
pop
fisubs
push
inc
cmp
mov
cs
mov
je
fs
pusha
or
mov
jl
into
and
or
jl
dec
cmc
loopne
rcll
in
gs
xor
cmp
sub
loope
mov
scas
call
imul
push
xchg
rolb
les
out
xchg
sarl
cmpsb
xchg
mov
xchg
jbe
inc
jno
popa
adc
add
xor
and
shl
rol
loope
xchg
mov
xchg
jbe
inc
jno
popa
adc
add
xor
and
shl
inc
jno
loope
xchg
mov
xchg
jbe
inc
jno
popa
adc
add
xor
and
rol
shl
loope
xchg
mov
push
mov
mov
in
jno
push
push
cltd
mov
ficoms
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
repz
ret
lea
std
out
jae
arpl
push
sub
and
repz
ret
lea
fldl
sub
xor
insl
adc
dec
repz
imul
ret
sti
mov
mov
pushl
arpl
and
pop
cs
or
insl
sub
into
mov
repz
or
mov
rcrb
movsl
xor
mov
pop
outsb
es
daa
cbtw
and
test
dec
rcr
loop
pop
int3
push
std
add
aad
hlt
sbb
dec
jge
adc
xchg
jae
or
xchg
mov
mov
cltd
inc
lea
sbb
jae
fsubp
gs
push
add
or
xchg
push
mov
into
test
xchg
sbb
xor
lahf
jp
std
lret
pop
and
push
push
rorb
push
xchg
call
bound
insb
lods
or
and
jge
lret
push
unpckhps
sub
mov
daa
lods
xor
shr
ret
lea
fldl
test
inc
xor
inc
and
mov
mov
mov
cmpsb
loope
pop
ljmp
jle
pop
xor
dec
add
push
and
sti
xchg
jmp
out
cmpsb
loope
scas
iret
mov
push
pop
popa
pop
adc
cmp
popa
cmp
ds
loope
mov
in
xchg
fldl
sub
xor
insl
adc
dec
repz
ret
lea
fldl
sub
xor
insl
adc
dec
repz
out
imul
or
shrl
sarb
into
add
dec
lds
xchg
jg
mov
mov
iret
push
addl
adc
data16
add
or
call
mov
stos
testb
push
imul
pushl
inc
daa
ficomps
jmp
add
out
inc
ficoms
cmpsb
pusha
sbb
std
repnz
div
push
test
bound
imul
xor
ret
inc
dec
call
add
pop
test
addr16
test
inc
jp
jbe
or
sub
push
popl
ret
cmp
stos
pop
push
jge
jl
mov
and
dec
jbe
add
add
xor
and
inc
add
shll
stc
mov
jmp
test
cld
xor
fs
das
mov
dec
arpl
jo
call
xlat
or
in
inc
xor
sbb
cld
jl
jns
xor
cli
mov
lcall
je
jecxz
cmp
xchg
dec
mov
adc
push
lret
dec
inc
sub
std
mov
ret
xchg
imul
insl
xor
xchg
push
pop
adc
adc
adcb
and
jmp
in
cmp
cmpsb
insb
pop
pop
rorl
or
jbe
and
xchg
adc
loope
dec
push
movsl
fmull
and
cmpsb
fisttpll
aas
cmp
hlt
mov
repnz
xchg
inc
sbb
mov
sub
push
fimuls
mov
lahf
es
jl
outsb
dec
lret
cmp
dec
xchg
cwtl
clc
xchg
jno
in
push
pop
js
pop
fcmovnu
out
rclb
out
mov
ljmp
ror
clc
push
mov
test
repz
cs
sbb
fidivrl
pop
dec
add
add
dec
loop
scas
inc
and
mov
add
decl
pop
adc
dec
jp
shlb
xchg
and
dec
imul
or
pop
mov
add
push
xor
pop
adc
add
data16
mov
mov
test
in
aas
movsb
mov
mov
jg
inc
adc
mov
sarb
shrb
push
mov
fisttpl
sbb
imul
faddl
loop
cwtl
mov
jo
mov
fadd
mov
and
mov
ficomps
sahf
js
push
nop
les
aam
int
inc
aad
inc
push
pop
sbb
jbe
sub
sub
addr16
mov
pop
gs
scas
push
jl
fcmove
fsub
sahf
and
test
jle
cmpl
bound
popf
loop
mov
xor
jmp
fdivrs
xchg
jnp
add
inc
fmull
xchg
fneni(8087
pop
sub
xor
mov
out
jo
jge
lock
sahf
imul
cltd
sahf
sbb
in
fistps
je
test
mov
xchg
mov
scas
shll
outsb
fs
adc
lahf
outsb
not
jmp
xor
and
push
mov
int3
mov
mov
cld
jp
xor
adc
adc
adc
push
sbb
fdivs
mov
mov
or
xor
insb
dec
inc
push
inc
add
jg
mov
out
test
push
pop
xchg
ss
mov
mov
mov
roll
or
or
xchg
mov
dec
jo
mov
repz
or
mov
jo
add
iret
and
sub
xchg
pop
jnp
xchg
loopne
bound
scas
into
nop
sbb
dec
or
out
rolb
sub
jnp
push
sbb
cmp
stc
cwtl
pop
push
cli
inc
mov
dec
cmp
xchg
push
loopne
xchg
push
lds
jo
call
rcr
lcall
stos
stc
push
fiadds
mov
popa
subl
push
test
push
sub
clc
xor
sti
lock
fwait
enter
ficoms
xchg
addr16
movsl
frstpm(287
and
jmp
aad
cmpsl
push
jle
sbb
nop
cmpsb
jge
pushl
add
inc
test
xor
lods
mov
mov
inc
les
mov
popa
pop
hlt
jae
mov
xchg
dec
jns
mov
ja
or
xchg
pop
mov
shlb
fmull
jae
rorl
sbb
daa
cmc
pop
cmp
xchg
sbb
fcompl
sub
cmp
push
pop
sbb
dec
sub
aas
testb
mov
mov
movsl
out
cmc
in
sub
adc
mov
push
sbb
or
clc
sub
rcrl
je
mov
mov
popf
call
movsb
imul
daa
push
mov
test
and
aam
fdiv
icebp
popaw
cmp
mov
push
lcall
mov
mov
mov
pusha
cmp
or
mov
adc
sbb
sarb
dec
sbb
xchg
aam
shr
xor
and
mov
das
sbb
fsub
sbbl
rcll
jg
jnp
arpl
jmp
sub
add
lock
shlb
dec
cmpsl
mov
js
gs
cmp
jp
mov
cwtl
push
jmp
add
inc
push
cmp
mov
mov
jb
daa
pop
testb
bound
mov
rcll
clc
das
sbb
stos
js
sbb
jmp
dec
stc
ficoms
movsl
xorl
sub
xchg
cwtl
adc
loope
cmp
jno
jno
xchg
mov
test
xor
dec
loop
pop
out
mov
mov
outsb
mov
mov
xchg
mov
fwait
or
or
mov
xlat
in
dec
aad
add
cmp
inc
fstpl
jmp
int
jg
nop
dec
call
mov
pop
pop
adc
test
sub
sar
or
out
cwtl
imul
cmp
push
push
inc
mulb
lret
cmpsb
in
test
in
lods
loope
or
idivl
in
xchg
enter
pop
xor
test
pop
fimull
frstor
in
fwait
or
inc
jl
xchg
cmpsb
pushf
ljmp
jns
mov
outsb
dec
push
gs
mov
xor
adc
repz
sbb
and
dec
fsubrs
fistpl
aaa
inc
pop
inc
testl
pusha
call
mov
xlat
and
repnz
int3
out
dec
out
or
inc
mov
xor
dec
xchg
sbb
mov
fisttpl
push
push
lret
cmc
and
test
push
inc
cli
popa
ret
loopne
jne
pop
shll
push
pushl
jne
jns
or
cmpsl
fcoml
in
outsl
ljmp
mov
cmp
cmp
cmp
mov
push
xor
cwtl
lahf
and
mov
insl
pop
and
jl
or
adc
les
inc
out
stos
test
loope
test
call
ffreep
ja
sarl
paddusb
mov
fxch
outsl
dec
repnz
clc
outsb
mov
jmp
mov
add
sbb
jae
adc
jg
in
sub
and
mov
and
or
sub
cmp
clc
jl
inc
out
adc
add
dec
mov
rcr
imul
fucomi
jle
shl
or
adc
loope
inc
cs
dec
push
insb
push
jle
xchg
ds
shrl
push
adc
lds
jns
lock
mov
subb
xchg
add
adc
dec
and
adc
pop
mov
outsb
xchg
xor
cmp
fnstsw
and
xchg
xchg
lret
filds
mov
jb
add
pop
or
ret
leave
xor
mov
iret
jge
dec
test
ljmp
stos
or
xchg
xor
dec
out
inc
mull
mov
jae
int
mov
mov
cmc
inc
jmp
xor
fs
in
mov
jne
sbb
movsl
inc
mov
mov
add
cmp
rorl
xchg
xor
pop
fstpt
clc
dec
jbe
lods
inc
das
jp
call
xor
mov
pop
iret
orb
out
insl
outsl
cmp
pop
add
dec
pop
scas
sbb
mov
and
xchg
lds
loopne
in
lds
mov
lods
push
aas
inc
bnd
cltd
scas
cmp
aas
mov
sbb
insl
insb
sbb
hlt
dec
push
ja
inc
loope
dec
or
cmpb
int3
into
stos
jb
in
jne
loope
pop
sti
cmp
in
outsb
pop
sub
xchg
fdivl
mov
mov
fimull
imul
cmp
pop
jo
fisubl
mov
mov
pop
jae
lea
in
les
in
aad
mov
xor
in
mov
test
std
leave
data16
test
xor
out
in
mov
out
aaa
dec
ja
incb
stos
ja
cmpsl
pop
add
push
rcll
out
test
jno
in
shll
lock
jge
ss
fildl
xor
mov
scas
mov
pop
mov
fsubr
add
lcall
dec
jl
or
mov
fcoml
clc
cmp
fs
push
dec
ja
inc
loope
movsb
add
fcoms
xchg
dec
loop
push
mov
sub
aaa
ret
or
js
arpl
mov
mov
cmpsl
aam
stc
dec
xchg
lea
and
or
orb
pop
pop
out
arpl
ss
repnz
pusha
loope
test
incl
sbb
mov
push
adc
fnsave
push
pushf
rcl
and
dec
lret
and
or
cmc
and
arpl
popf
sub
push
push
or
and
ds
sbb
cmp
cwtl
popa
dec
es
xor
or
testl
mov
mov
mov
out
in
stc
add
mov
sar
xchg
dec
in
cmp
icebp
pop
mov
cltd
out
cmc
jns
out
mov
lret
loop
push
rol
cs
ficompl
push
leave
cmp
rorl
xchg
cmpsl
xorb
jno
jno
stos
lods
cmp
inc
fisttpll
scas
push
stc
jns
xor
mov
popa
cmp
decb
lret
inc
jne
cwtl
mov
aad
or
push
or
pop
pop
cld
mov
mov
fdivrs
std
orb
pushf
lea
das
out
clc
gs
repz
pop
jae
mov
sahf
push
dec
fildl
push
in
lret
loopne
add
fnstsw
rolb
or
mov
push
jo
add
push
jbe
jle
sar
test
lahf
pop
loope
mov
dec
push
sbb
or
push
sbb
loopne
mov
lcall
sahf
dec
cmpsb
xor
and
insl
sub
inc
insb
adc
push
push
aas
mov
popf
or
inc
stos
nop
clc
push
mov
jne
and
sbb
xchg
test
sub
xchg
adc
outsl
imul
mov
pop
sbb
xchg
xor
call
loope
dec
adc
inc
cld
dec
lahf
mov
dec
je
repz
sbb
js
xor
mov
dec
das
mov
push
test
hlt
cmc
mov
inc
xor
jbe
orb
cmp
sub
es
push
lret
sub
mov
mov
jecxz
push
scas
mov
mov
push
jg,pn
insb
lods
xor
sbb
cwtl
inc
cmp
das
nop
popa
add
mov
xchg
push
mov
inc
lret
bound
cmp
push
insb
das
inc
jecxz
jb
repz
xlat
xchg
movl
andl
fcmovu
test
pop
jp
cmp
leave
dec
in
push
fcmovne
divb
scas
dec
ret
sbb
jbe
test
sti
dec
push
testb
arpl
cmp
mov
cmpsl
leave
cmp
outsl
pop
lods
inc
cli
rorb
rclb
clc
fsincos
xchg
movsb
add
or
out
les
xchg
cld
fsub
popa
mov
fcompl
cmpsl
decb
jb
fucom
mov
jb
push
in
mov
and
add
sahf
stos
pushf
pusha
sub
testl
mov
fmull
push
enter
mov
pusha
xchg
fsubrl
dec
fmull
adc
icebp
sbb
sarl
pop
push
fcoml
popa
sahf
mov
xchg
push
sbbb
lock
or
mov
fcmovne
gs
mov
incb
sbb
mov
pushf
mov
mov
addb
mov
stos
jae
mov
out
sti
in
out
jl
icebp
daa
divl
dec
enter
mov
aad
js
inc
and
inc
dec
dec
rclb
adc
hlt
aas
les
lods
and
xorb
insl
dec
jmp
mov
sub
fcoms
les
ss
insl
ret
push
in
push
inc
test
sbb
push
into
mov
pushf
dec
mov
cmp
ss
add
mov
push
je
aad
or
nop
add
int
scas
shrl
mov
nop
pop
xor
sub
out
jns
dec
ret
or
daa
psraw
add
add
inc
sarl
inc
mov
xchg
ss
pushf
ret
in
lret
out
jecxz
aam
or
aam
sub
push
ja
inc
pop
jl
int3
rcll
jne
inc
lcall
sahf
into
jnp
fwait
sahf
fidivs
dec
out
mov
mov
mov
enter
and
xchg
cmp
stos
sbb
adc
imul
test
mov
xchg
jl
popf
mov
push
or
push
popf
gs
repz
cmp
inc
jg
mov
sarb
pop
pop
and
fucomi
cmp
and
outsb
adc
inc
stos
push
dec
mov
cmp
sar
in
int
xor
gs
inc
push
outsb
out
pop
hlt
rol
jae
pusha
jmp
and
xor
cmp
fcmove
enter
pop
ret
push
and
inc
jmp
cmp
xchg
cmpsb
sbb
lods
xchg
mov
dec
push
addr16
ret
in
cmpb
mov
xchg
adc
inc
xlat
jp
out
lock
inc
sti
loopne
or
out
lock
xlat
test
or
aas
push
jmp
pop
and
ds
jnp
dec
xchg
cmp
imul
pusha
cmp
inc
mov
and
jecxz
jae
sub
test
mov
add
cmpsb
dec
jae
movsb
shl
sub
adc
jmp
ret
bound
lods
shl
lret
shll
mov
aam
shll
add
ljmp
cld
xchg
cmpsb
jmp
mov
push
shrb
mov
push
lods
pop
cmp
mov
pushf
push
cmpsl
add
jge
and
adc
std
mov
pop
cld
fcompl
push
and
sbb
xchg
add
out
in
popf
insl
or
mov
mov
stc
xchg
jnp
stos
and
add
mov
push
or
les
stos
push
and
into
xlat
lret
outsb
aas
dec
add
nop
adc
into
sahf
je
imul
loop
fwait
mov
into
inc
fs
jnp
pop
test
jnp
pop
test
mov
xor
clc
pushf
ret
pop
sbb
push
pop
mov
mov
xchg
jbe
xor
adc
das
jp
xor
mov
iret
cmp
sub
mov
std
pop
and
stc
aam
js
mov
das
sbb
mov
xor
lods
xor
cs
mov
or
push
and
jge
das
inc
and
out
fwait
mov
addr16
or
ja
movsb
into
and
fists
xchg
dec
movsb
mov
cmp
mov
sub
add
fcmovnu
cmpb
int
lods
cmp
orl
dec
mov
xchg
sub
and
into
inc
addr16
fstpl
imul
add
inc
adc
js
or
or
ds
jge
jecxz
mov
push
bound
add
mov
cwtl
xchg
ds
pop
sarb
cmp
testl
addr16
shrl
loopne
mov
scas
push
rcll
mov
cmp
pop
and
scas
ret
gs
xchg
scas
fldl2t
pushf
mov
call
pushw
inc
scas
lahf
cmp
out
push
xchg
fadd
dec
cmpsl
rolb
inc
movsb
cmpl
add
adc
or
mov
pushw
inc
fcomps
jmp
sub
cwtl
jl
push
dec
mov
test
mov
jl
mov
mov
incl
cmc
mov
mov
add
pop
pop
hlt
cmp
ret
test
jns
lods
movsl
stos
and
cmp
sarb
lods
jo
sbb
jg
repnz
iret
stos
pop
inc
add
imul
inc
jbe
or
xchg
mov
dec
and
fwait
push
pop
lods
jnp
imul
fwait
movsl
inc
pusha
in
test
movsl
pop
lea
insb
loop
ret
movb
dec
ja
das
inc
lods
imul
jbe
xchg
lds
and
sbb
out
fsubl
mov
sbb
repnz
maskmovq
testl
pop
shrb
jp
sbb
dec
leave
jo
pop
dec
lods
xor
fs
test
adc
adc
inc
enter
mov
nop
adc
pop
shl
shlb
xchg
adc
popf
or
add
addl
push
arpl
xchg
aam
adc
dec
or
testb
adc
dec
or
sub
dec
sub
inc
pop
int
add
mov
mov
stc
and
pop
cmp
pop
loope
dec
xchg
jb
fwait
mov
pop
in
cltd
jns
sbb
or
fistl
sahf
js
cmpsb
pop
inc
mov
add
mov
pop
fistpl
loope
insl
cs
push
insl
in
ss
cmp
and
adc
mov
dec
add
mov
push
stc
add
or
xsha256
cmpsb
push
es
loop
xor
jecxz
fcmovu
dec
popf
dec
pop
rorb
insb
dec
or
push
mov
adc
stos
cmc
in
ds
sub
outsl
push
mov
daa
push
movsb
push
add
call
xor
xchg
sub
movsb
ja
notb
dec
xchg
and
repz
mov
fildll
cmp
add
mov
in
mov
pushf
mov
flds
jge
xchg
scas
out
int3
aad
xchg
jmp
xchg
mov
stos
mov
inc
sarl
add
std
mov
fildll
ficompl
push
js
inc
shlb
push
ljmp
add
sbb
jp
adc
jo
dec
xor
push
push
add
ret
dec
mov
pop
test
and
lds
aad
push
mov
enter
mov
call
adc
inc
sarb
icebp
or
pop
fistps
insb
int3
sub
xchg
popf
or
movsl
movsb
sbb
mov
int3
mov
dec
push
jg
push
mov
jae
mov
movsb
adc
add
and
dec
jp
mov
rcl
add
les
loope
in
popf
test
out
push
cmp
in
mov
xchg
sti
stos
jmp
imul
mov
dec
inc
adc
rorl
lret
mov
fildl
sub
mov
fnclex
gs
aam
sub
int
jmp
pop
jnp
sbb
mov
push
cli
out
lcall
cltd
or
push
push
ret
mov
sbb
jle
sar
add
in
sbb
mov
add
mov
mov
push
or
push
mov
xchg
lea
ss
in
add
mov
out
out
jecxz
mov
mov
into
jb
sub
icebp
popf
jg
fistps
mov
lea
xorl
scas
inc
jmp
sub
adc
adc
pop
cs
sbb
std
nop
sub
fdivrl
dec
mov
incl
pop
and
pop
mov
aaa
xor
mov
lahf
xlat
aas
adc
push
pop
jae
ficompl
insb
daa
jp
das
push
pop
pusha
jg
stc
cltd
mov
add
jecxz
mov
int3
dec
dec
add
es
push
or
sbb
je
push
jge
fucomi
mov
loope
fcoml
movlps
xor
test
inc
jno
xchg
sti
mov
cmp
call
aad
pushf
pop
xchg
adc
sub
adc
rclb
cwtl
push
xchg
dec
jno
push
shrb
cmp
cmp
shll
xorb
test
ret
adc
or
push
sub
sbb
cmpl
mov
and
push
jo
decb
sbb
dec
add
xor
decb
or
mov
call
lea
fldl
sub
xor
insl
adc
dec
repz
ret
lea
fldl
sub
xor
insl
adc
dec
repz
ret
mov
flds
sub
inc
add
jns
insl
adc
repz
jecxz
sarl
int
std
mov
or
stc
sbb
stos
adc
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
hlt
add
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
cmc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
in
add
fdiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
cmc
add
dec
cmc
add
pusha
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdiv
add
clc
cmc
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
fdiv
add
call
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fdiv
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
inc
clc
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
clc
add
mov
clc
add
sar
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
stc
add
cmp
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fdivr
add
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
pop
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
cli
add
pop
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
