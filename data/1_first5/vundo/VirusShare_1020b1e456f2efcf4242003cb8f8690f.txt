add
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
push
mov
sub
lea
push
mov
push
call
cmpl
je
cmpl
je
push
call
mov
xor
xor
call
mov
xor
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
test
jne
mov
not
mov
or
mov
lea
push
call
mov
pop
leave
ret
push
mov
sub
orl
mov
inc
mov
pushl
pushl
pushl
push
push
call
add
mov
cmp
jbe
andl
cmpl
jne
call
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
call
call
jmp
push
call
mov
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
push
call
mov
add
mov
jmp
jmp
push
pushl
call
mov
pushl
call
cmpl
jb
mov
leave
ret
push
imul
jb
je
arpl
mov
sub
push
push
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
mov
movzbl
movzbl
sub
je
addl
movl
call
call
push
pushl
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
pushl
call
mov
push
push
call
xor
mov
push
push
push
call
lea
push
push
push
call
add
push
push
push
push
push
pushl
call
pushl
call
push
push
pushl
pushl
pushl
call
push
push
push
push
push
call
pushl
pushl
pushl
call
mov
add
push
push
pushl
call
push
mov
pushl
call
mov
jmp
lea
push
pushl
call
xor
mov
push
push
push
push
pushl
call
pushl
mov
pushl
pushl
push
push
call
push
pushl
pushl
push
call
lea
push
call
pop
push
lea
push
push
push
push
call
push
lea
push
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
push
mov
pop
cmpb
je
movzbl
sub
push
call
add
cmp
jg
mov
mov
mov
movzbl
sub
inc
test
jne
jmp
mov
mov
call
push
pushl
call
mov
mov
inc
push
pushl
call
mov
dec
movzbl
sub
je
inc
call
jmp
call
mov
xor
push
push
mov
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
push
mov
push
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
movl
movl
mov
movl
call
push
push
mov
call
push
mov
call
pop
pop
ret
push
mov
sub
push
pushl
call
pushl
mov
xor
movl
pushl
mov
movl
movl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
push
push
push
pushl
call
pushl
call
mov
push
pop
pop
ret
add
add
add
lcall
inc
or
add
add
jno
add
add
cmp
je
add
and
add
add
outsl
xor
dec
inc
add
sbb
sbb
sbb
cmp
dec
ficompl
sbb
and
pop
js
add
imul
outsb
add
push
push
aaa
add
xchg
mov
or
add
orl
add
test
inc
test
in
push
add
ret
add
decl
repz
sub
cmp
incl
add
xchg
add
add
add
adc
leave
adc
incl
add
xor
incl
push
xor
add
decl
adc
loopne
jmp
inc
dec
or
mov
push
adc
lock
push
add
call
adc
call
adc
cmp
inc
add
incl
lea
ja
push
sbb
push
incl
add
test
add
lock
or
add
add
ficompl
sbbb
sbb
sbb
sbb
jb
sbb
sbb
add
push
add
je
jae
pushf
outsl
dec
imul
inc
jae
imul
inc
insl
popa
outsl
inc
popa
inc
outsl
popa
jo
insb
outsl
add
add
mov
gs
add
add
dec
jbe
fs
iret
push
insb
inc
insb
push
push
add
add
add
inc
cmp
add
add
mov
add
add
add
add
xlat
mov
cltd
xlat
testb
add
in
pop
mov
jnp
movsb
ret
push
jle
jmp
popf
adc
jns
ljmp
jnp
sub
rcl
mov
nop
in
jg
inc
jge
jp
scas
cmp
push
sub
ss
cmp
pop
wrmsr
fnstenv
push
or
jl
mov
and
push
sbb
fs
dec
push
aad
js
inc
dec
out
or
aad
add
xor
adc
in
subl
lds
add
jno
icebp
inc
insl
adc
push
and
mov
add
xor
jno
in
mov
je
stc
or
mov
cmp
das
nop
push
xor
mov
jmp
ror
jg
push
das
sub
add
lcall
ja
pop
sarl
addr16
adc
mov
adc
inc
sub
xchg
pcmpeqw
or
add
pop
pop
ret
ljmp
jae
cmp
sbb
roll
cmp
rorb
jecxz
lea
pop
std
cmp
movsb
add
int
loopne
shlb
sbb
push
into
xlat
jbe
int
ret
adc
push
dec
mov
sarb
pop
cltd
cmp
or
cmc
cmp
xor
shrd
sub
mov
jae
sbb
cwtl
push
mov
pop
cmp
mov
loopne
testl
ljmp
xchg
mov
mov
pop
inc
cltd
cld
add
xor
adc
ret
ja
and
popa
jle
cli
inc
fs
adc
insl
xchg
in
es
iret
jnp
sbb
ljmp
ljmp
iret
movsl
sub
mov
fdivrs
arpl
push
push
mov
mov
mov
ds
in
ss
dec
imul
cmc
fisttps
add
outsl
lret
ja
cmp
aaa
xchg
inc
es
cmp
aaa
or
into
daa
ss
fmul
adc
mov
mov
aas
push
or
rcll
pop
pop
scas
and
fadds
sub
mov
jno
sbb
sbb
data16
shr
ss
xchg
pop
ja
push
lret
mov
js
shr
popa
fwait
arpl
add
xor
in
dec
jnp
shlb
sub
pop
inc
dec
ss
adc
cmp
loopne
xchg
imul
cmp
sub
sub
xor
nop
sbb
xor
pop
std
or
das
je
movsl
xchg
adc
dec
roll
pop
call
jne
movsl
pop
push
sub
push
or
pop
add
xor
sub
or
sbb
and
mov
sub
jae
das
cmp
pop
or
sbb
es
insb
daa
mov
loope
mov
lret
adcl
sbb
sub
or
leave
and
push
or
pop
daa
int
push
imul
ljmp
jp
fcoml
jl
add
sahf
inc
ret
cltd
xchg
inc
mov
xlat
xor
fnstsw
or
nop
data16
add
imul
shl
pxor
aaa
mov
push
es
lahf
cmpsb
sbb
or
xor
push
popa
push
and
ret
aad
add
jns
jo
pop
movsl
shll
mov
scas
out
xor
daa
aad
out
push
push
cmp
dec
in
loope
pop
mov
sti
sbbb
mov
xor
dec
pop
in
lcall
mov
jg
sbb
adcl
xchg
mov
hlt
and
add
mov
cli
mov
xchg
lret
push
xor
push
test
pop
pop
and
fsincos
pop
push
dec
insl
lds
sbb
push
rcrl
insl
pop
jb
and
jnp
data16
mov
outsl
xchg
test
dec
inc
ret
pop
fisubl
fnsave
sarl
jo
cli
mov
ja
movsl
movsl
cmp
loope
xchg
sub
and
mov
jns
ds
pop
sbb
and
push
jecxz
mov
mov
out
or
xchg
jmp
push
enter
test
dec
xchg
cmpsl
mov
mov
sub
sbb
xchg
fadd
ficoml
je
insb
jno
cmpsb
adc
and
iret
xor
xor
js
gs
and
je
loopne
dec
inc
dec
mov
aaa
pop
adc
xor
add
lret
push
pop
rcrb
xchg
scas
in
popf
jge
mov
and
sbb
sub
cmc
into
movsb
popa
data16
test
adc
fs
xchg
sub
callw
lods
push
loopne
stos
cmp
ret
xlat
in
mov
cld
fldt
mov
pop
add
or
sub
mov
or
and
in
shr
mov
test
out
les
lods
imul
jne
mov
sbb
bound
fisttpll
adc
arpl
popa
jne
cld
mov
out
hlt
scas
dec
in
xchg
inc
cwtl
mov
pusha
stos
jecxz
inc
or
je
dec
icebp
pop
das
sahf
push
imull
sbb
dec
jnp
pop
ja
daa
and
ds
pop
pushf
mov
dec
aad
push
data16
addr16
xor
lret
repz
adc
daa
and
jne
ds
or
lret
and
add
cmp
inc
cmp
das
ja
mov
repz
inc
jmp
movsl
fwait
mov
rcll
aad
push
push
lods
call
inc
stos
shlb
jnp
inc
stos
xchg
ret
fcmovnbe
mov
sbb
mov
cld
adc
mov
mov
fdivrl
fs
gs
jne
or
in
cmp
lahf
jl
dec
sub
xrelease
or
into
sub
idiv
movsl
xchg
pop
fdivrs
rorl
dec
mov
outsb
cs
push
inc
enter
push
loop
xorl
int3
pop
and
sub
jecxz
cltd
shll
scas
clc
imul
sahf
je
neg
test
loopne
and
cmpsl
int3
faddp
pop
ja
xlat
jmp
test
cmpsl
and
pop
mov
dec
repnz
pushf
pop
mov
pop
pop
mov
lock
lret
add
xor
jbe
ljmp
jmp
mov
sbb
out
pushf
push
dec
pop
push
stos
push
xor
iret
jo
xchg
inc
test
mov
adc
pop
pop
addr16
sbb
inc
cmp
rorl
rolb
scas
xchg
xchg
pusha
sub
pop
and
lret
mov
sbb
mov
ret
add
dec
mov
xor
adc
ret
xor
imulb
sti
mov
cmpsl
call
addl
cmp
inc
xchg
adc
fadds
sub
pop
stos
add
dec
shlb
arpl
orb
inc
fwait
mov
or
pop
adc
adc
ss
mov
fimuls
xor
ds
out
dec
jg
push
shll
xor
mov
leave
mov
loope
mov
or
push
outsb
aad
lcall
mov
push
fs
cmpb
sub
cmp
lods
in
aaa
scas
out
bound
jge
cltd
repnz
outsb
adc
jne
or
aaa
lock
adc
ffreep
mov
aam
adc
jg
fs
popa
push
mov
push
cld
fwait
sub
jmp
das
add
or
ds
or
aad
mov
std
stos
scas
lret
sbb
jo
mov
or
sbb
test
lret
jmp
lahf
pop
push
sti
popa
lcall
fistpll
add
jno
loop
cltd
jle
negl
mov
sub
dec
cmp
andl
jno
fcomp
sti
hlt
cmp
adc
sbbl
and
sahf
jne
mov
repnz
cmp
mov
inc
mov
test
sbb
cmp
shrb
lds
mov
pop
loope
mov
movsb
xchg
xor
and
push
cli
les
lcall
addr16
add
xchg
int
stc
mov
sub
push
mov
loope
and
and
cwtl
cmc
xchg
scas
lret
insl
xchg
sar
jp
push
cld
xlat
fimuls
mov
jl
cmp
and
jecxz
and
pushf
sbb
mov
and
pusha
inc
mov
lahf
jmp
push
push
sti
enter
test
and
pop
cmp
push
sub
sub
bound
lcall
sahf
inc
push
add
fisttps
add
test
or
or
cmp
jge
movsl
mov
sbb
es
or
cmpsl
mov
lret
push
mov
sub
dec
xor
sarb
adc
mov
pop
sti
mov
icebp
fstps
mov
sub
cmp
sti
cmp
cmp
mov
sub
bound
cmpsl
pop
mov
jnp
out
negb
xor
pop
push
mov
daa
jmp
inc
addr16
adc
scas
jb
cmc
cmp
fisubs
daa
nop
dec
mov
and
fidivrs
pop
in
or
jae
sahf
lahf
sub
pop
or
stos
divl
push
xor
lahf
sub
xchg
push
fcompl
pop
rclb
ss
push
jo
movsb
add
xor
mov
lcall
pop
dec
popa
aas
sahf
cmp
pop
outsb
pop
gs
ss
push
pop
movsb
dec
jmp
lret
aam
xor
adc
sub
and
ret
int
and
lret
fstps
jle
es
fsubl
loop
add
push
push
popf
jae
or
xor
or
mov
inc
mov
lock
cmp
loop
mov
das
mulb
pop
andl
mov
push
push
push
or
and
add
jns
push
push
lds
jl
ss
xchg
or
js
dec
rdmsr
xor
push
lods
pop
mov
pop
mov
outsl
aas
sub
in
push
ret
and
push
pushf
inc
add
das
ret
dec
das
xchg
ret
jecxz
cmp
mov
daa
popf
and
stc
or
mov
sti
xchg
sub
pusha
mov
adc
pop
int
or
mov
loope
xor
and
xor
stos
mov
adc
std
and
fdivrl
push
push
repz
jb
dec
ss
jg
cli
mov
xchg
dec
into
aam
push
fldl
subl
sti
sbb
std
ret
dec
cld
jns
imul
adc
test
lods
jmp
adc
lock
jg
xchg
aad
movsb
gs
and
push
cmp
xchg
js
or
movntq
push
mov
aas
push
xchg
dec
xor
pop
cmp
or
icebp
roll
arpl
gs
adc
sub
out
jns
imul
leave
data16
es
loope
jne
pop
shlb
xchg
std
enter
adc
sbb
or
pop
subb
push
mov
add
pop
pop
les
js
xor
addr16
pop
ss
or
pop
xor
add
aad
shlb
jge
lahf
cwtl
pop
xchg
or
mov
cmc
cmp
sbb
dec
adc
loop
lds
aad
or
cmp
data16
call
imul
sub
pop
outsb
xor
hlt
mov
jg
fwait
hlt
push
mov
lea
pop
daa
mov
dec
sbb
xchg
xchg
inc
push
arpl
mov
push
pop
xchg
xchg
rorb
adc
mov
dec
aaa
movsb
in
mov
in
or
mov
push
inc
xor
stos
and
add
call
xchg
pop
loope
cmc
sub
xlat
sbb
repnz
out
sub
push
inc
ja
cmp
xchg
stos
fisubrs
sub
dec
sub
std
mov
xchg
loop
call
arpl
in
mov
cs
jno
xlat
sbb
fnstsw
std
push
pop
cmp
aaa
jae
aad
mov
sarb
push
mov
insb
inc
adc
pop
push
pop
jne
adc
pop
mov
adc
bound
jne
inc
stc
jne
xor
out
mov
les
sub
pushf
sub
popf
mov
inc
rclb
add
movsl
sbb
enter
mov
mov
and
mov
out
enter
pop
inc
movsl
pop
push
dec
in
mov
inc
popa
sub
inc
fcoms
adc
js
push
addr16
insl
cld
leave
fisubl
lcall
test
mov
dec
jo
sti
int3
clc
inc
stc
push
inc
or
push
mov
adc
stc
std
dec
jne
sbb
pop
and
sub
and
mov
mov
idiv
sub
pop
push
add
popf
sbb
inc
xchg
sbb
pop
fcmovnu
ret
pop
out
xchg
mov
nop
mov
dec
ss
sub
clc
add
sbb
cmp
cmc
ss
shl
cmc
imul
cmp
daa
mov
aaa
pop
push
jae
cmp
jbe
xor
sti
and
mov
jp
lods
dec
aam
int
mov
mov
and
jbe
int3
cltd
int3
fisubrl
mov
add
lods
jp
fcomps
in
pop
adc
movsl
movsb
hlt
popf
add
sbb
lahf
jb
pushf
pop
out
testl
jns
mov
cmp
loopne
sarl
inc
push
fistpll
andb
mov
pop
sbb
aam
int3
dec
jmp
into
mov
xchg
jbe
mov
pusha
mov
ljmp
ja
orb
jecxz
dec
mov
fimull
mov
cltd
sub
or
and
test
push
xchg
pop
inc
mov
sahf
rol
lcall
sub
out
add
cld
xor
xchg
mov
add
and
sbb
xchg
popf
ftst
lahf
fst
in
cmp
mov
cwtl
mov
adc
out
test
clc
popf
cli
jmp
sub
sbb
popa
or
les
inc
push
dec
insl
inc
or
xor
js
lret
popa
xchg
inc
lods
arpl
cmp
dec
fsts
mov
stos
into
sbb
pop
imul
test
inc
mov
mov
lret
xchg
fdivs
jg
xor
pop
aaa
rcrb
pop
fimull
fs
fmull
or
xor
icebp
mov
arpl
inc
cwtl
dec
mov
push
xchg
lret
movsl
mov
add
adc
ja
lock
and
sub
imulb
shrl
fstpl
sbb
jmp
fwait
arpl
mov
imul
bnd
lock
loope
jo
mov
or
cltd
imull
arpl
fimuls
and
ss
sub
daa
mov
lock
adc
mov
mov
adc
sbb
repz
mov
mov
dec
shll
ret
std
push
push
mov
pop
adc
movl
ss
test
paddsb
fs
ret
movsb
mov
filds
or
xor
xchg
jl
es
lds
out
cltd
xchg
stos
jb
ret
sbb
outsb
adc
stc
out
pop
es
stos
fisubrl
jg
pop
mov
xchg
mov
xchg
and
packuswb
mov
pop
out
xor
mov
ljmp
mov
xchg
sahf
std
shl
out
cmp
mov
cmc
sahf
xor
pop
mov
cmp
or
fcoml
sbb
arpl
mov
popl
inc
loope
subl
icebp
xchg
push
popf
sub
mov
adc
fldenv
mov
notb
adc
incb
ficoml
mov
clc
sbb
dec
out
dec
imul
pop
cs
cmpl
fbstp
or
push
popf
cltd
stos
mov
inc
cmp
into
popf
pop
add
mov
cmp
jg
sahf
mov
ja
cmc
jg
shlb
sub
adc
lods
sbb
test
mov
xchg
jb
aam
fcoml
jp
sbb
iret
imul
int3
lods
rcrl
xor
mov
lods
jno
insl
sub
pop
mov
es
in
das
shlb
adc
mov
inc
fstps
std
add
inc
testb
cmp
sahf
imul
pop
imul
mov
and
mov
aad
inc
rcrl
test
inc
mov
int3
jns
test
bound
rorb
or
pop
pop
pop
es
aad
pushf
mov
adc
aad
hlt
mov
fistpll
ror
jmp
mov
les
pop
out
fistl
js
call
xchg
imul
pop
gs
enter
dec
les
and
pop
sahf
push
or
xchg
dec
addr16
addr16
ret
aaa
cmp
out
adc
ljmp
mov
fs
and
lret
sbb
sbbb
cwtl
out
and
mov
fisttpll
lahf
mov
jg
xchg
pop
in
lahf
pushl
push
mov
push
aaa
shlb
lcall
aam
repnz
test
test
cmp
stc
push
pop
sub
sbb
repnz
das
fistpll
cs
icebp
pushf
or
push
push
sbb
mov
pop
inc
cmp
gs
jbe
addr16
stos
push
lods
add
popf
jb
push
sub
repz
jle
cld
repz
push
fimull
iret
xor
incb
xlat
fnsave
xor
sbb
dec
out
enter
and
inc
scas
push
mov
pop
loopne
add
fs
cmp
cmpps
shll
inc
xor
jno
loop
out
jle
mov
movsl
jno
mov
adc
gs
adc
add
push
inc
fstps
popf
push
xor
es
add
xlat
fcoml
mov
jne
sbb
dec
push
jb
in
inc
xchg
arpl
xchg
cmpsl
mov
mov
xlat
sub
mov
and
gs
in
dec
cmpsl
out
mov
jne
mov
cmc
or
inc
jmp
dec
cmp
ss
or
arpl
leave
xchg
add
insb
add
add
add
add
add
stos
inc
cmp
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
lock
addb
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
add
jb
and
add
or
arpl
add
add
add
adc
add
add
add
repz
add
add
add
add
add
add
inc
data16
add
add
mov
add
add
add
push
add
add
and
push
outsb
imul
push
inc
pop
ja
dec
dec
jo
push
imul
add
mov
xorl
pop
pop
lea
mov
add
add
in
ret
cld
adc
adc
mov
adc
cld
adc
add
inc
shlb
leave
dec
inc
into
or
xor
push
add
add
incl
enter
fmull
in
push
incl
add
add
add
movsl
incb
add
add
rorb
cld
mov
add
incl
add
add
clc
push
popf
push
add
cmp
xor
add
jne
decl
add
lcall
push
roll
add
add
add
add
push
add
add
add
or
xor
add
add
je
js
outsl
inc
outsb
je
add
inc
sbb
gs
ja
inc
imul
insb
rorl
arpl
gs
cmc
push
push
cs
jb
addr16
push
jns
outsl
xchg
imul
push
popa
gs
js
xor
add
add
mov
add
add
add
add
add
loope
add
add
add
add
add
cmpsb
sub
mov
iret
cmc
adc
adc
sbb
mov
por
mov
fdivp
mov
xchg
stos
lcall
subb
stc
clc
push
or
sbb
scas
out
mov
loope
movsl
push
jle
aam
xchg
lahf
ss
dec
jge
pushf
jo
mov
ret
inc
sub
out
lret
test
into
jb
mov
movsl
scas
dec
pushf
pop
adc
ja
inc
inc
sub
addr16
das
mov
ret
push
jae
or
cmp
mov
ljmp
inc
imul
sahf
adc
subps
mov
cltd
jecxz
pop
and
sbb
xor
xchg
push
xchg
or
xchg
test
ss
and
adc
or
pusha
call
adc
dec
scas
hlt
push
push
mov
into
movsb
mov
jg
add
mov
cmp
andl
push
push
adc
bnd
std
je
out
scas
arpl
xor
aad
cmp
hlt
push
gs
std
sbb
push
cld
lahf
adc
dec
sub
mov
stos
xor
mulb
inc
in
lds
lds
pop
mov
sbb
pop
loop
sub
filds
xchg
inc
xchg
aas
repnz
cltd
jno
adc
mov
jmp
testb
xor
movb
sub
out
inc
mov
pcmpeqb
in
js
xchg
lods
sbb
cmp
aam
aas
in
into
enter
jg
mov
jae
xchg
xchg
lods
ret
push
dec
pop
adc
arpl
dec
lds
pop
adc
or
aaa
xchg
sbb
out
out
fistps
or
and
lods
roll
add
xor
cmpsb
push
int3
or
inc
xchg
lock
ds
bound
in
rolb
data16
mov
jp
cmp
in
inc
xchg
ret
cltd
sub
push
dec
sub
incl
mov
ret
into
rep
insb
mov
or
clc
push
out
or
lret
add
or
sub
add
jbe
dec
mov
xor
mov
jnp
sarb
inc
aad
jmp
jnp
enter
fdivl
jbe
mov
jg
pop
movsb
lods
dec
xchg
pop
mov
xor
and
testb
lcall
sub
pop
lods
sub
incl
dec
cmp
xchg
push
add
adc
jae
xchg
leave
mov
mov
repz
sub
lea
pop
js
test
push
cli
push
jp
mov
ds
cmp
pop
mov
jne
sub
xor
mov
push
lds
pop
loop
fisubs
ds
jge
dec
jne
pop
add
aad
sbb
repnz
jbe
dec
xchg
fcomp
sbbl
pop
inc
out
lock
and
arpl
ss
jmp
cmp
xor
dec
cmp
sub
les
out
out
jle
out
cmp
dec
mov
pop
or
out
dec
cmp
cltd
mov
test
cs
sub
out
ret
lea
out
ret
adc
cmp
loop
lock
out
test
pusha
popa
movsl
push
xor
jnp
mov
int
mov
jp
jno
push
dec
add
pop
popa
outsl
and
mov
xchg
sbb
xor
jmp
xchg
lret
mov
insb
cmp
adc
nop
jae
mov
pop
in
repz
inc
sbb
sub
inc
js
pop
mov
fcmovne
fdiv
test
cmp
adc
in
or
jbe
lcall
repnz
insl
je
and
adc
push
add
scas
ret
mov
push
ljmp
mov
fdivp
jbe
fisubrs
xchg
mov
mov
push
movsb
das
into
daa
sub
sub
xchg
adc
ljmp
insb
or
pop
andb
sahf
fisubrl
and
xorb
fs
lds
sub
gs
adc
mov
mov
nop
sbb
add
ljmp
lea
shrl
inc
or
les
sbb
pop
test
cmp
mov
outsb
add
sub
lds
jge
inc
xchg
sub
fnstsw
mov
outsl
test
outsl
push
add
cmp
ja
out
or
enter
les
sbb
mov
push
call
rol
or
lret
jne
inc
mov
sbb
imul
mov
or
sbb
out
push
dec
aam
add
jno
jnp
sbb
gs
iret
shll
xchg
lret
push
fcompl
sbb
in
jne
subl
fwait
mov
mov
mov
xchg
pop
jbe
push
int3
jne,pt
mov
pop
inc
inc
ficomps
fs
pop
movsb
xor
cmpsb
sub
fwait
xchg
jmp
inc
mov
es
ljmp
loope
movsb
aaa
fmuls
iret
pop
adc
out
mov
mov
fsubl
dec
stos
mov
inc
lds
shll
xor
sahf
into
jmp
push
sub
xchg
inc
push
xchg
mov
or
pop
and
push
out
repz
xchg
jns
out
mov
cmc
mov
sbb
in
jp
sub
insb
hlt
mov
fcmovnb
sbb
sti
pop
sub
icebp
cmp
bound
push
add
mov
loopne
jle
pop
cld
das
pushf
aas
loopne
adc
and
mov
popa
cmpsl
or
mov
orb
icebp
push
scas
or
jecxz
insb
es
and
jnp
ljmp
shrb
push
sbb
test
jp
mov
mov
cmc
mov
aaa
mov
cmp
cltd
mov
out
xchg
testl
fisubs
lcall
and
addr16
fnstcw
daa
adc
out
xchg
test
xchg
sbb
repz
hlt
mov
sbb
mov
mov
jl
sub
xchg
hlt
add
gs
add
sub
enter
repz
xchg
lret
pop
adc
jmp
dec
jo
add
add
ret
call
sbb
adc
std
xchg
add
jl
cmpsb
inc
aas
adc
movsl
enter
aad
pop
or
addr16
addr16
cld
sub
cmpsb
fstpt
shrb
adc
and
jnp
mov
aam
add
cmp
mov
test
je
in
inc
push
mov
jge
pop
mov
add
sub
jg
cmpsb
sarl
jbe
sbb
das
jp
xchg
jecxz
fwait
test
dec
cli
pop
mov
fstpl
add
test
repnz
repnz
popf
aam
xchg
xor
sub
sub
push
insb
lds
inc
lret
out
scas
inc
in
push
mov
push
dec
mov
or
gs
pop
fdiv
imull
or
popa
jno
mov
sbb
bound
jne
popf
jmp
xor
daa
repz
jo
lcall
pop
mov
sub
mov
and
add
movsb
iret
mov
leave
mov
test
gs
mov
hlt
mov
inc
jecxz
mov
inc
ss
add
mov
sub
test
enter
movsl
push
pop
cs
call
data16
sti
push
push
int
movsl
and
mov
cltd
outsl
xchg
es
setg
je
xchg
aas
ja
mov
jo
std
mov
loopne
mov
inc
mov
repz
rcrl
cmp
adc
dec
cmp
mov
pop
xor
adc
xor
lock
mov
push
or
scas
dec
std
xor
xchg
aam
push
cmp
xchg
lods
pop
cmpsb
sbb
cmp
jl
push
or
cmp
fldcw
cltd
push
mov
popa
add
jg
test
scas
rep
daa
sahf
insl
fadd
pop
inc
rcl
leave
lods
inc
call
jo
out
aas
arpl
ss
fs
sub
fcoms
lret
sbb
cmp
mov
and
das
subl
hlt
mov
je
mov
xchg
out
xor
add
ret
mov
repnz
pop
repz
adc
js
test
test
xchg
push
arpl
cmp
push
mov
mov
jns
arpl
inc
movsb
inc
and
adc
inc
cld
dec
pop
cmp
cmp
out
clc
xor
movsl
add
sbbb
icebp
jge
inc
outsb
arpl
inc
mov
sar
lret
test
jg
dec
mov
or
pop
sub
gs
xchg
lahf
mov
cmp
mov
jo
movsb
sub
xor
leave
daa
out
popa
dec
adc
fistpl
outsb
push
das
push
sub
ret
ret
popa
test
sub
add
out
dec
cmp
push
inc
mov
mov
pop
fdivrs
pop
mov
xor
cmp
adcb
cs
adc
stos
add
lods
cmc
sub
pop
adc
in
add
rcll
dec
pop
scas
out
lds
ret
jmp
lea
repnz
test
mov
sbb
ret
mov
test
jmp
insb
mov
test
adc
inc
outsl
mov
adc
out
push
or
js
fisubl
xor
int3
pop
mov
adc
xchg
test
pop
imull
lcall
scas
jg
add
mov
sbb
dec
jbe
stos
movsl
pop
inc
lahf
push
and
insl
je
dec
or
and
jp
jbe
cmc
call
ds
mov
shrl
imul
mov
lret
dec
pop
mov
jmp
cmp
arpl
cmp
testl
mov
ret
cmpsb
cld
jno
test
jp
mov
jg
bnd
mov
jne
bound
pop
lea
xlat
outsb
adc
inc
adc
or
dec
adc
rcrl
idivl
xchg
xor
jp
scas
sbb
aad
out
mov
sbb
dec
outsl
movsb
adc
inc
and
ljmp
enter
lods
jl
jbe
mov
or
xchg
gs
mov
mov
iret
cmp
scas
jge
sti
push
lds
push
decl
add
aam
std
mov
and
std
pop
xor
pop
xlat
notl
rcll
mov
inc
inc
fdivrl
dec
or
loop
xchg
mov
jb
add
sub
mov
mov
stc
rol
or
ret
lds
sbb
inc
add
sub
adc
nop
das
push
dec
addr16
sub
xchg
mov
mov
cmp
jae
mov
push
rolb
ja
movsl
mov
mov
sub
mov
sahf
cmp
rcr
jecxz
dec
insb
xchg
pop
adc
enter
subb
stos
in
xor
mov
leave
addr16
dec
loop
jmp
and
clc
outsl
cltd
scas
push
xchg
push
out
imulb
loop
sub
mov
pop
xor
movsl
jnp
and
fisubrs
jns
idivl
sahf
xchg
and
xchg
jmp
aad
test
lahf
inc
cmpsb
inc
xchg
xchg
sub
das
pop
jmp
xchg
sarb
sub
mov
pop
xchg
mov
jbe
out
cmp
ljmp
ret
xor
inc
popf
mov
aaa
cld
cltd
mov
dec
jmp
cmp
icebp
clc
sbb
push
sbb
test
cmp
push
aas
add
jb
test
movsl
mov
pop
pop
mov
repnz
add
enter
fildl
js
xorl
fwait
test
mov
pusha
or
iret
mov
mov
sbb
mov
icebp
pusha
cmp
inc
push
mov
test
dec
jae
mov
cmpsl
std
in
xor
incl
sub
mov
dec
out
push
jne
mov
push
insl
push
pusha
mov
je
das
je
xor
clc
lods
icebp
and
stc
mov
or
icebp
mov
cmp
int3
pop
imulb
movsb
sbb
mov
out
fsubrl
mov
test
mov
lahf
jbe
push
sbb
gs
mov
xor
xadd
lock
not
in
mov
xor
outsl
adc
sahf
fdivl
inc
hlt
clc
cli
repnz
aas
jg
push
aam
ja
push
repz
insb
lahf
add
dec
pop
cli
hlt
outsb
lret
enter
mov
pop
rcrb
das
negb
inc
mov
cmpsl
clc
inc
pop
pop
lock
ret
adc
or
movsl
sub
out
or
add
scas
xor
inc
fldcw
push
arpl
popa
dec
push
test
fisubrl
adc
aam
lea
sub
push
lret
in
cmp
inc
in
jno
cwtl
test
sbb
xchg
inc
and
push
mov
add
insl
add
sbb
cmp
fiaddl
add
mov
jo
jns
add
or
add
mov
lret
bnd
jge
repz
cmp
add
jae,pt
jp
pusha
xchg
inc
ds
dec
sbb
insb
mov
or
jmp
loopne
fwait
or
and
mov
repz
cltd
mov
repnz
addr16
fidivrl
lcall
add
cmpsb
inc
rcrl
arpl
dec
ja
pop
repnz
inc
mov
and
sar
mov
cmpb
jns
data16
lock
and
movsb
clc
shlb
icebp
dec
pusha
outsl
rclb
pop
add
jmp
and
mull
pop
adc
stc
repz
pop
movsl
sbb
add
pop
mov
jno
test
lock
lret
pop
std
push
mov
pusha
mov
mov
cwtl
rcrb
sbb
pop
or
lods
xchg
shrl
mov
loop
ljmp
scas
add
sbb
popf
pop
insb
into
ja
inc
or
sbb
mov
test
fstpl
movsl
mov
push
mov
js
stos
fwait
jecxz
xchg
or
cs
stos
orb
sub
inc
ret
cli
repnz
mov
int3
push
jae
cmpsb
push
iret
pop
aad
pushf
sets
repz
aaa
mov
or
jne
clc
xchg
or
lds
lods
and
add
fdivr
movsl
and
das
out
aam
sub
aad
xchg
cmpsb
imul
sbb
faddl
nop
enter
mov
inc
add
xor
insb
call
mov
stc
cmpb
jnp
faddl
ffreep
popf
sbb
or
mov
std
sub
add
enter
repnz
inc
adc
push
add
dec
cmpb
sub
or
adc
mov
clc
imul
xor
cs
mov
cmp
or
data16
fstps
ss
mov
inc
mov
dec
xor
aad
test
mov
and
mov
pop
push
push
push
add
dec
mov
in
inc
adc
je
jb
sbb
or
cmp
and
xchg
xor
xor
out
aam
cmc
mov
dec
sub
inc
xchg
lods
jae
fisubrs
cld
outsb
leave
sti
aas
enter
fdivrs
jmp
outsl
cmpsb
sub
jne
je
fcoml
out
frstor
cs
adc
les
es
xor
mov
adc
dec
cld
add
pop
inc
fmull
ja
fwait
lret
clc
cwtl
sub
iret
cmc
out
inc
stos
clc
in
jae
arpl
push
lock
rol
xchg
clc
jmp
fwait
dec
cmc
bound
jae
fcomp
daa
sbb
jae
jmp
dec
shll
bound
sub
ljmp
mov
bound
mov
testl
int3
in
mov
popl
insl
sti
jne
test
add
fisubl
imul
mov
xor
inc
ljmp
mov
out
cmp
push
lods
push
lock
daa
push
add
and
pop
mov
xchg
test
jo
rclb
mov
mov
ja
jne
or
cli
adc
jns
sub
pop
dec
lds
pop
cld
add
in
push
cmp
inc
push
es
jmp
mov
clc
sti
rorb
ja
out
lock
xchg
add
pop
push
adc
or
pop
incb
lods
imul
mov
jnp
mov
mov
push
sub
js
fwait
pop
aas
test
and
in
stos
adc
push
fdivrs
cmp
pop
das
or
inc
ljmp
ret
cmp
fs
add
clc
pop
xchg
addr16
cmp
andb
repz
jecxz
xchg
test
sub
mov
jno
in
jae
shlb
movsbl
jbe
ds
dec
inc
and
xor
in
add
push
mov
loope
push
or
inc
sarb
pop
mov
sbb
idivb
insb
test
xor
shrl
lock
aas
rorl
daa
lret
dec
sbb
jmp
ds
lret
dec
loopne
xchg
fadds
inc
shlb
mov
scas
xchg
mov
lcall
and
add
cmc
xchg
xchg
jno
mov
mov
insb
sbb
repnz
scas
es
js
mov
test
daa
mov
icebp
sbb
sahf
dec
bound
outsl
add
fildll
inc
or
lods
cli
sbb
adc
cmp
jb
mov
sbb
pop
dec
push
cmp
mov
mov
clc
and
into
shr
sub
mov
or
nop
sbb
cld
dec
sbb
mov
pusha
add
ja
enter
or
into
sbb
add
cmp
mov
mov
decl
pop
aad
mov
or
stos
test
fcoms
add
push
popa
out
jns
lret
mov
xchg
fbld
or
movsb
pop
xchg
pop
push
imull
ja
mov
jnp
fcmovnbe
mov
sbb
pop
add
outsl
shrb
rorl
mov
add
add
add
add
xchg
add
xor
add
add
add
add
roll
add
add
mov
add
add
add
add
xor
pusha
add
add
add
add
add
push
lock
add
add
add
add
add
and
add
adc
add
add
add
stos
stos
add
add
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
inc
add
add
or
addr16
jne
or
lock
add
add
add
add
pop
add
dec
add
add
add
cmpsl
or
fildl
add
add
add
add
aaa
jbe
sbb
dec
add
add
add
and
jo
gs
push
jae
inc
jb
fs
popa
inc
add
stc
jmp
mov
enter
or
jmp
fmuls
shr
add
ret
pushl
add
lahf
mov
call
adc
push
dec
clc
push
dec
lock
in
sar
lret
pop
mov
lret
add
mov
adc
movl
add
pop
push
rolb
lock
add
add
push
test
test
std
mov
rorl
loopne
lock
push
adc
cmp
clc
cmp
shrb
dec
mov
ret
jo
sbb
inc
push
lock
push
in
push
inc
in
cmc
push
out
and
je
xchg
xchg
add
add
cmp
cmp
out
add
add
add
daa
inc
insb
movsl
outsl
insl
outsl
jne
inc
jo
gs
movsl
inc
mov
gs
imul
jbe
gs
push
inc
imul
jge
add
xor
mov
addr16
loopne
insb
gs
inc
dec
push
add
or
add
add
fwait
add
ja
add
add
pop
add
popf
jge
out
shlb
sbb
cmp
int3
cmp
cmp
lods
ret
pusha
cmp
push
aad
push
out
inc
outsl
faddl
jb
and
leave
mov
lea
mov
cwtl
data16
movsl
mov
inc
movsl
pusha
xchg
cmp
xor
lret
cmpsl
loopne
sbb
and
cwtl
push
jne
and
xchg
sti
dec
or
add
sub
cmp
loopne
stos
scas
popf
repnz
mov
or
js
fwait
enter
jne
push
xchg
pop
call
adcb
jne
je
or
add
mov
or
lahf
push
xchg
xor
sbb
out
sub
aam
jb
in
das
ss
imul
push
idiv
fmull
xchg
mov
es
fwait
mov
pop
inc
inc
mov
pop
adc
fidivrl
pop
js
notl
out
jp
add
mov
dec
inc
aad
sbb
inc
pop
jge
lret
mov
xor
jne
nop
popa
or
popf
xchg
mov
mov
int
pop
aad
push
push
fsubrp
mov
cltd
cmp
std
aas
and
ror
clc
pop
mov
lds
test
jb
ja
xchg
xor
push
mov
ljmp
jp
jno
sub
lahf
or
jmp
bound
or
adc
test
or
or
out
lret
loopne
add
cmp
or
adc
and
in
int
sbb
xchg
pusha
out
push
pop
fmull
pop
jp
inc
call
add
inc
pop
mov
repz
cli
jo
div
leave
nop
xor
scas
and
sub
movsb
std
or
jp
mulb
pushf
in
push
jno
scas
setle
xor
cmpsb
stos
cmp
sbb
enter
sbb
aam
js
sbb
jge
add
adc
mov
subb
push
stos
mov
cmp
jno
cmp
inc
cltd
sbb
jbe
in
mov
pop
xchg
loop
and
out
sub
pushf
fs
and
mov
outsb
inc
bnd
xor
sbb
xor
fcmovu
cmpl
std
mov
scas
movsl
xchg
push
test
push
pop
inc
out
int
fisttps
or
mov
outsb
sub
sbb
mov
adc
xchg
xor
inc
lret
mov
cmp
ljmp
mov
movsb
inc
leave
incl
icebp
adc
enter
lcall
dec
xor
popa
xchg
mov
in
add
arpl
add
sbb
dec
pop
inc
adc
add
das
add
xchg
fcoml
rdtsc
notl
sub
fisttpl
pop
inc
mov
repnz
pextrw
cmp
xchg
mov
pop
fwait
lahf
repz
sti
adcl
mov
or
xchg
outsb
add
mov
mov
nop
icebp
mov
push
outsb
jnp
pop
push
outsl
lds
aaa
nop
cmc
pop
popf
xor
jno
fisubs
mov
xchg
sub
and
aad
mov
pop
adc
jo
jge
inc
mov
push
addb
sbb
sbbb
jne
cmp
fnstenv
push
add
mov
sahf
ret
sbb
pop
cmp
or
inc
out
iret
pop
mov
ja
shlb
daa
push
into
jb
stos
push
push
out
fistl
jmp
rclb
cmpsl
fs
test
test
out
cld
ljmp
push
or
je
lock
out
adc
mov
divb
mov
cltd
cli
dec
push
push
inc
jno
pop
ret
loop
out
ja
clc
int3
jmp
nop
or
loop
outsb
je
mov
xor
int3
lahf
inc
jns
lock
mov
popf
dec
shll
aas
ss
cmp
lods
stos
pop
lea
mov
fmul
adc
addr16
jne
jp
test
out
stc
mov
inc
or
ret
dec
mov
push
jg
mov
xor
enter
jmp
pop
ret
test
scas
dec
and
ja
mov
in
test
add
and
hlt
jge
movsb
in
or
push
push
test
adcl
in
xor
cmp
jge
fdiv
or
mov
fsts
int
incb
mov
lcall
jl
in
sbbb
addr16
mov
sub
mov
jb
adc
and
out
jne
inc
popf
loop
ss
sahf
gs
test
sub
cmpsb
pop
xor
sub
adc
jo
jae
sbb
cs
rcr
xor
lret
inc
jns
scas
stos
xor
ja
jl
sub
push
adc
out
ss
loope
xchg
xchg
mov
sub
cmp
test
vrsqrtps
jnp
mov
lret
fisubrl
pop
mov
jle
jp
mov
ret
imul
push
jmp
sarb
lret
sarb
mov
mov
mov
inc
xor
lret
pop
jmp
stos
imul
daa
je
lods
xchg
inc
push
jmp
mov
jnp
aas
mov
or
jnp
xlat
mov
insb
add
stos
cmpsl
push
ds
pushf
xchg
daa
mov
ret
inc
adc
cmp
scas
mov
fisubrs
iret
dec
xor
pusha
mov
pop
xor
aaa
out
and
es
jl
add
int3
rorb
loop
das
cmp
cmp
lcall
xchg
pusha
ja
enter
or
jl
push
sbb
out
push
rcrb
lcall
test
mov
mov
cwtl
cmc
jno
sub
sub
pusha
mov
fdivrl
dec
test
and
shrl
sti
sbb
push
lahf
mov
vpavgw
jp
imul
ljmp
push
mov
fsubs
jo
nop
fnstenv
inc
imul
shl
mov
fsub
jmp
jle
mov
and
jb
jnp
arpl
fimuls
mov
cmpsl
les
mov
shlb
xor
pop
rcrb
stos
pop
out
or
lods
jp
dec
sbb
adc
adc
lret
inc
into
jge
and
mov
lods
inc
outsb
mov
mov
sahf
pop
testl
ret
xchg
add
sbb
scas
mov
mov
repz
jecxz
or
mov
mov
inc
sbb
addr16
xchg
mov
push
repz
dec
lahf
add
cmp
sub
sub
inc
sahf
xchg
adc
xor
mov
xorb
push
sub
sahf
outsb
mov
push
pop
lods
enter
adc
jle
add
test
xor
rclb
push
out
mov
lods
aas
in
jmp
adc
test
out
pop
mov
inc
scas
push
and
test
aad
stos
aaa
cwtl
dec
mov
mov
dec
sub
add
jbe
pop
outsl
xchg
daa
mov
fiadds
cwtl
lret
rolb
cmp
add
inc
sub
pop
mov
mov
pop
mov
push
dec
in
loope
add
mov
sahf
and
bound
fisubs
jmp
push
nop
lods
add
into
jne
mov
mov
imul
xchg
sahf
aas
scas
addb
pusha
repnz
jmp
inc
pop
testl
cltd
jbe
lods
inc
fucom
imul
rorl
xchg
mov
dec
cmp
push
xor
mov
push
lea
fucomp
cmp
inc
xor
sub
lock
xchg
cmp
cmp
mov
mov
xchg
or
int
inc
mov
and
das
adc
add
xor
ss
leave
sub
xor
push
fimull
flds
lcall
mov
orl
xchg
out
bound
in
popf
mov
sub
xor
pop
jo
cmp
or
adc
ss
lea
out
out
adc
push
rclb
lods
cmpsl
mov
shrb
scas
mov
outsb
cli
and
mov
mov
mov
repz
and
cmc
loopne
call
mov
das
push
mov
push
loopne
jge
insb
sti
sbb
pop
and
lods
adc
cld
jl
push
mov
adc
andb
imul
je
ret
lods
mov
rclb
jae
pusha
aas
pop
adc
cmpb
jae
pop
outsb
and
sbb
or
pop
and
mov
or
test
jecxz
fmuls
cs
fiaddl
into
jnp
push
push
int3
popl
and
push
pop
mov
dec
pop
mov
mov
sub
mov
sub
adc
scas
jl
fisubrl
rcrw
mov
push
and
dec
cmp
hlt
je
dec
ficompl
stos
jae
jg
sbb
and
mov
mov
mov
sbb
mov
shrb
sbb
sub
cs
sarl
adc
jge
pop
mov
jmp
mov
jbe
fisubl
in
stos
int
pop
adc
push
loope
outsl
pop
out
testb
idivb
or
enter
add
outsb
loope
mov
jmp
popl
push
push
lret
js
xor
xchg
mov
scas
mov
dec
lcall
mov
or
xlat
push
lret
and
and
sbb
sbb
arpl
adc
push
call
add
dec
xlat
pop
xor
add
mov
dec
cmp
inc
aad
jg
jle
pop
divb
add
mov
mov
scas
cld
dec
movsl
jp
ret
pushf
aam
rolb
icebp
fwait
cmp
push
xor
xor
sub
dec
pop
lcall
jno
mov
mov
inc
aas
ss
cmp
test
jecxz
sub
and
call
xor
and
or
notl
push
fucom
notrack
add
xor
xor
cmp
cmpsl
mov
das
xor
xchg
shlb
out
jbe
push
fsubr
fldenv
dec
inc
cli
sbb
das
mov
pusha
les
loope
lds
test
xor
cmp
mov
adc
out
fcoms
outsb
aad
mov
fdivs
lahf
adc
jns
arpl
jle
out
xor
cltd
or
dec
fnsave
bound
shrb
or
inc
fildll
add
pop
jo
add
push
fmull
sub
pop
sub
mov
out
incb
cmpsl
mov
ja
pop
ret
bound
hlt
push
xor
cld
pop
in
and
dec
push
xlat
inc
jne
adc
mov
int
outsl
push
popa
xor
fs
enter
and
sub
mov
add
pop
int3
jge
aas
mov
mov
xor
dec
push
popa
sahf
cmp
in
mov
rcrb
dec
stos
mov
fidivs
xor
leave
mov
fildll
in
leave
mov
mov
lret
pop
imul
test
sbb
mov
clc
xor
mov
repnz
std
stc
xor
stos
andb
repnz
outsb
cli
scas
and
sub
cmp
incl
jbe
mov
sub
mov
cli
pop
jnp
and
fcomip
xorl
xchg
adc
cmp
aad
jno
and
sub
cmp
adc
mov
scas
adcl
shlb
adc
fmulp
fsin
pushf
xlat
cmp
push
cmpsl
push
imul
xchg
mov
lret
outsl
xchg
xchg
daa
push
xor
popf
insb
jge
cmp
xor
jecxz
jge
xchg
std
mov
sarb
movsb
movsl
or
sbb
push
sub
es
dec
in
and
cmp
and
sbbb
insb
fwait
xor
mov
jmp
outsb
xor
push
sub
comiss
mov
dec
xor
xlat
xchg
sub
inc
jl
xor
jb
sub
lods
je
outsb
and
adc
adc
dec
xor
mov
scas
mov
cmpsl
call
lcall
popa
xlat
and
pushf
sub
test
push
dec
add
adc
mov
in
loopne
aaa
xchg
ljmp
mov
or
pop
fldt
lods
mov
ljmp
gs
mov
ljmp
xchg
out
pop
add
bound
rcrb
cwtl
les
and
int3
mov
scas
jo
and
and
in
fwait
jo
pop
jb
lods
mov
aas
jnp
jne,pn
xor
scas
inc
mov
or
divb
jns
sub
js
stos
in
negb
pop
flds
aad
fimuls
hlt
xchg
xor
insl
mov
mov
add
dec
in
faddl
pop
cmp
loopne
in
test
fadds
int3
xchg
jnp
scas
stos
jg
push
mov
data16
mov
leave
adc
xchg
loopne
cmpsb
cwtl
inc
cmp
and
mov
es
xlat
in
mov
clc
pop
and
in
jecxz
mov
cmp
pop
or
jo
dec
mov
aas
sbb
cmp
test
xchg
notb
mov
and
mov
clc
push
data16
insl
testl
mov
fidivl
xchg
leave
jp
ss
ljmp
add
inc
jb
clc
push
xchg
lcall
daa
xchg
inc
push
stos
and
cli
mov
adc
mov
aas
mov
push
push
outsb
jmp
movsb
or
jo
cli
inc
inc
call
pop
inc
into
mov
jl
popa
js
cwtl
adc
adc
mov
push
movl
das
dec
movsb
jns
jecxz
jb
and
aas
add
les
lahf
push
push
sub
dec
js
jecxz
jle
jne
pop
dec
jl
or
out
jmp
leave
in
adc
or
in
insb
lds
fdivrs
in
mov
testl
jmp
loopne
push
ret
lock
adc
cmp
adc
outsl
and
dec
and
mov
sbb
pop
sub
pushf
enter
ficomps
dec
inc
xchg
repz
mov
mov
leave
fucom
push
adc
cmpb
and
push
loopne
adc
rcll
out
mov
xchg
jne
lds
and
not
add
dec
mov
pop
jle
icebp
xchg
xchg
pusha
aaa
cmp
dec
and
pop
add
insl
leave
icebp
std
in
mov
shrl
out
loop
movsb
scas
popa
add
xor
cmp
push
push
fs
and
fsub
incb
int
mov
filds
jb
fsubrp
sbb
lcall
xor
dec
pusha
jbe
pop
mov
pop
cmpsb
and
aas
push
out
je
push
or
push
pop
push
pop
jnp
scas
adc
ljmp
adc
ja
lret
outsb
cmp
push
sbb
dec
mov
cmp
in
cwtl
neg
jb
fs
rol
or
sbb
jb
call
into
and
lahf
inc
loopne
roll
mov
dec
inc
repnz
addr16
push
mov
enter
or
add
test
dec
adc
lods
adc
in
xchg
mov
pop
leave
lea
jae
add
and
loope
lock
cmp
push
mov
test
mov
dec
js
call
or
sarl
lods
cwtl
ret
das
push
je
popf
sarb
cs
jne
adc
pop
inc
inc
out
add
mov
mov
and
jno
sbb
les
mov
dec
aam
test
cmp
push
in
fwait
movsl
mov
xor
pop
cltd
jl
shll
push
pop
dec
lds
rclb
xorl
sbb
mov
fcoml
dec
and
mov
cmpsb
icebp
jle
loop
movsl
sbb
pop
and
enter
iret
sti
and
inc
cld
pop
loop
iret
negb
aaa
mov
jnp
jno
jmp
add
inc
bound
jbe
or
xchg
cmpsl
adc
jne
cwtl
mov
gs
mov
sbb
cmp
mov
sahf
inc
dec
inc
push
data16
ja
test
loop
imul
bound
sbb
fldenv
outsl
mov
jmp
lds
imul
jge
mov
add
add
insl
mov
addb
fwait
scas
push
repz
cltd
popa
outsb
inc
popf
sub
sarb
xchg
faddl
es
xor
and
jno
dec
ja
cmpsb
addb
cmpsb
cld
fldenv
mov
std
nop
out
dec
xor
sub
adc
sbb
pop
int
fcmovnb
iret
and
push
and
cmp
dec
cmpsl
repnz
fmull
test
in
sti
test
sub
mov
loop
sub
adc
adc
xchg
and
mov
add
outsl
mov
in
mov
lret
push
fstpl
mov
cld
pop
js
or
and
cmc
sarl
lret
fistpll
scas
add
in
icebp
adc
stos
mov
andl
xchg
mov
add
js
fbld
mov
mov
daa
jmp
gs
inc
sar
xor
loopne
sti
add
movsb
adc
lcall
mov
je
rcrl
out
mov
pop
int3
cli
mov
dec
sahf
inc
sbb
mov
xchg
or
cmp
lcall
test
sub
aaa
adc
insl
jo
cmpsb
cmpsb
push
fdivl
xor
loop
mov
xor
outsl
cwtl
push
lcall
add
jbe
test
mov
jl
push
bound
lret
cld
movsl
or
and
sbb
push
ss
push
sbb
dec
cmc
add
repnz
push
push
lea
or
imul
mov
jg
call
hlt
mov
mov
jmp
cmpsb
ficompl
or
outsl
cmp
sbb
xchg
mov
iret
jecxz
outsl
add
add
add
movl
push
add
or
add
add
fwait
add
push
add
add
add
imul
ja
add
add
add
or
add
add
or
in
in
lahf
add
add
add
add
ljmp
stos
lret
add
js
js
js
js
int3
int3
int3
int3
int3
int3
int3
int3
jae
jb
jo
add
mov
add
push
insl
add
add
add
add
add
add
add
add
pop
add
outsb
add
add
out
add
add
add
inc
add
les
addb
add
jg
add
sub
clc
add
test
add
popa
add
lret
ja
jae
inc
add
pop
jp
ja
mov
inc
cld
add
add
sahf
add
andnps
mov
xor
or
push
cmpb
mov
push
cmp
sub
test
call
jmp
test
in
adcl
adc
testl
in
inc
std
jmp
inc
std
incl
shl
mov
inc
adc
push
add
add
add
popl
decl
ljmp
adc
loopne
incl
adcl
cld
push
push
inc
incl
shl
add
pushl
test
mov
lea
lea
jne
add
adc
add
add
inc
adc
mov
add
insb
add
add
add
add
add
add
add
push
add
add
outsl
jbe
inc
imul
adc
push
popa
gs
je
xchg
imul
inc
push
add
or
insb
ja
add
js
jne
popa
insb
outsl
jae
imul
push
jb
xor
push
add
add
scas
add
add
add
scas
add
pop
add
add
add
aas
add
into
add
add
add
dec
les
mov
inc
dec
int3
and
sbb
nop
push
std
mov
jp
in
outsb
pop
cmp
mov
fcoms
dec
es
pop
sub
cmp
out
cmc
pop
mov
in
dec
jmp
lahf
popf
mov
jge
nop
sbb
inc
shll
sbb
in
push
mov
xchg
lock
add
jl
cld
bound
in
mov
xchg
data16
popf
mov
mov
fdivl
jae
lods
inc
xchg
pop
dec
enter
or
enter
push
movsl
mull
imul
or
and
jg
in
mov
jae
fs
std
jb
aam
sub
cmp
stos
dec
or
jge
daa
or
mov
push
add
cmp
test
jns
dec
mov
and
cmp
jnp
outsb
pop
lret
cmp
sub
cmp
mov
mov
popa
lahf
mov
aam
imul
mov
add
cmpsb
gs
aaa
or
add
pop
cmp
and
push
fs
test
movd
add
mov
cli
pop
and
push
int
outsb
enter
jae
fnsave
cltd
outsl
ss
bound
fnstsw
leave
xor
addr16
cmp
and
xor
scas
lcall
loope
mov
pop
stc
fadds
iret
mov
push
sub
inc
pop
addl
stos
mov
ret
sub
sub
or
pop
js
add
pop
dec
or
add
xor
cwtl
out
jmp
test
mov
sub
or
pop
lahf
cmp
push
cmp
mov
scas
xchg
or
les
pushf
mov
or
pop
jge
dec
clc
mov
push
lods
xchg
fcoms
loopne
add
sti
jae
leave
lock
out
xchg
add
popf
sbb
out
sub
add
mov
addb
nop
mov
dec
push
mov
out
les
lret
in
shlb
addb
jno
cmp
xchg
mov
movsb
pop
cmp
imul
sub
enter
scas
add
sahf
daa
aad
pop
sbb
test
sub
xrelease
lahf
shrb
fs
cli
dec
xchg
push
lods
mov
pop
sbb
loopne
add
incl
sbb
jmp
cmpsl
sarb
dec
push
lcall
inc
add
out
repz
sub
mov
ds
inc
roll
or
cli
jb
cmc
lcall
add
inc
xlat
movsb
mov
imul
out
xor
gs
nopl
or
sbb
dec
jne
insl
lds
xchg
cltd
adc
sub
cmp
pop
mov
ds
shrl
xchg
mov
outsb
repnz
es
xchg
inc
xorb
xor
test
jb
mov
mov
cwtl
ja
in
test
add
mov
scas
add
push
fdivrl
xor
xchg
aad
bound
outsb
adc
jnp
mov
ds
jb
pushf
data16
aaa
sbb
sub
lods
mov
int
ja
imul
testb
push
ret
ja
jl
inc
loop
xor
sahf
cltd
push
jo
sarl
clc
adc
clc
hlt
out
lahf
add
testb
jns
rclb
xchg
or
xor
mov
pop
pop
mov
mov
das
mov
stc
lods
inc
sbb
mov
stc
inc
mov
adc
clc
sub
add
or
dec
cmp
out
mov
and
insb
icebp
push
cmc
sbb
xchg
outsl
in
jp
dec
mov
aam
lock
mov
ds
xor
mov
dec
inc
call
jne
mov
pop
cmp
sub
lea
mov
push
shll
xor
xchg
ret
popf
cmpsb
mov
mov
and
clc
fidivrl
rorl
sahf
aaa
jmp
jns
cltd
jb
lods
subl
cmp
int3
mov
mov
xchg
mov
in
pop
outsl
popa
pop
sub
icebp
cmp
repz
les
sbb
mov
fistps
or
sub
outsl
xor
fwait
mov
add
jne
jle
notb
adc
jae
pop
cmp
jge
scas
loop
addr16
sub
mov
pop
lock
sar
xchg
or
inc
daa
cmp
mov
and
andb
push
sbb
rcll
jnp
add
dec
out
push
jl
and
data16
scas
sub
mov
adc
daa
popa
out
sbb
sub
and
outsb
sahf
and
xlat
fcoms
in
jo
adc
ja,pn
inc
int3
and
insl
sti
pop
insb
lahf
xor
or
jbe
loope
lods
cmp
notl
negb
jp
scas
mov
inc
xor
sbb
adcb
sbb
fistpl
test
push
andb
popa
and
cmc
xlat
mov
std
aam
jno
sbb
cmp
push
fiaddl
lods
fldt
fnsave
inc
sti
fnstenv
popa
add
mov
push
jl
adc
std
ret
ret
or
lahf
call
movsb
xchg
and
jo
arpl
inc
rorl
xchg
lods
mov
push
imul
pop
jge
lods
cmp
ja
mov
imul
mov
dec
and
mov
adc
pop
xchg
adc
mov
daa
aad
aam
rol
jnp
out
shlb
insb
adc
cld
icebp
cmpb
call
daa
aam
jecxz
pop
mov
jno
add
mov
ror
mov
jmp
cmp
out
add
std
fs
inc
fdivrl
add
push
jp
ret
add
aam
add
sarl
xchg
and
cmp
and
add
loope
push
xchg
jg
pop
aaa
ss
xchg
mov
push
adc
cmp
mov
sub
pusha
repz
loop
xor
mov
loopne
pusha
cmp
rcrb
xchg
scas
daa
add
hlt
in
or
imul
enter
pop
mov
or
xor
mov
movsb
sbb
inc
addl
mov
int3
xchg
mov
ja
fadds
jne
push
mov
xor
or
aas
lahf
inc
fidivs
and
dec
jbe
or
or
push
mov
mov
jns
jno
and
loopne
sbb
sbb
push
icebp
sbb
jg
cmp
dec
pop
push
sub
mov
stos
inc
adc
xor
mov
je
cmpsb
jle
lods
push
or
stc
jnp
jo
add
push
and
push
add
inc
int3
inc
sti
out
sahf
mov
mov
lcall
add
add
mov
cmp
jp
adc
and
loope
dec
pop
shl
mov
xor
idivb
mov
lret
sbb
rorb
shll
or
divl
push
movsl
cmp
sarb
pop
fadd
outsl
shrl
test
xchg
daa
mov
imul
jp
cmp
cmc
leave
jg
pop
bound
push
xlat
add
loopne
out
and
xor
les
aas
push
arpl
mov
mov
inc
das
jnp
push
sub
adc
jne
cmp
xor
outsb
stos
popf
mov
das
fmuls
jle
lcall
pop
mov
cmpsl
mov
dec
rorl
mov
jecxz
jecxz
push
call
push
aam
mov
shll
mov
outsb
mov
mov
dec
push
mov
aaa
push
inc
xlat
mov
testb
dec
xchg
cmp
call
stos
outsb
sbb
ds
bnd
test
mov
les
push
jb
cmp
sbb
inc
mov
push
rorl
mov
movsl
mov
cld
leave
lods
leave
stos
imul
in
icebp
test
mov
icebp
int3
adcl
aad
aad
fisttps
push
rcll
pop
mov
cs
mov
mov
icebp
int
push
js
adc
or
stc
lock
movsl
xchg
fdivl
cmp
in
and
iret
mov
ror
imul
sub
xchg
je
push
lea
xorb
push
mov
test
pop
fstps
or
push
lea
sarl
sub
lahf
and
dec
pop
sahf
or
mov
xor
ss
test
ja
lods
push
ds
or
es
insb
jne
insl
mov
push
cltd
cmc
xchg
movsb
out
movsb
fsubr
push
add
sub
jg
data16
jecxz
mov
movsl
and
loop
call
jmp
ret
test
lds
mov
sti
insb
mov
adc
incl
inc
loopne
or
adc
adc
inc
jne
imul
and
loope
jbe
or
out
mov
adc
scas
mov
paddb
mov
pop
shrl
sub
adc
jmp
sub
push
jg
into
xchg
movsb
negl
ds
ds
test
inc
sahf
repz
xchg
mov
iret
out
and
mov
scas
xorl
jge
nop
mov
pop
xchg
ret
cmp
jge
js
bound
pushf
xor
mov
mov
popa
dec
mov
std
jmp
mov
or
or
enter
je
lock
ss
pop
pop
push
pop
push
fmull
jno
fs
js
fwait
jno
popf
mov
jge
adc
outsl
or
es
adc
mov
fs
mov
sarb
cmpsb
daa
fwait
fcmovne
lret
mov
in
aam
mov
sub
outsb
out
inc
push
mov
pop
jns
xor
inc
and
lea
pop
mulb
mov
arpl
push
pop
in
mov
or
in
clc
cmpsb
adc
inc
and
xor
scas
arpl
and
je
lds
int3
push
out
and
mov
fs
clc
outsb
xchg
inc
out
addr16
push
movsl
and
ror
inc
cltd
cmovb
dec
stos
dec
mov
xor
and
xor
lret
xor
dec
popf
inc
or
and
cltd
cld
and
aam
pop
lea
adc
insl
dec
into
rolb
stos
int3
sbb
mov
insb
jne
jb
jecxz
ss
sete
cld
push
mov
es
daa
adc
pop
lcall
mov
imul
dec
pushaw
outsb
out
outsb
and
inc
hlt
dec
incb
fstp
out
mov
pop
inc
inc
fistpll
aas
lret
jns
push
sub
sti
sbb
inc
sbb
xchg
sub
dec
cli
nop
push
sbb
inc
les
std
or
mov
movsb
mov
xchg
gs
icebp
or
movsl
test
stos
loopne
enter
pop
mov
fnstenv
nop
inc
aas
sbb
fildll
or
test
out
pop
xchg
dec
push
xchg
fisttps
mov
mov
call
sub
iret
jg
mov
loop
sahf
aaa
mov
lods
imull
jl
adc
jecxz
sbb
adc
xchg
sub
adc
xchg
lods
jae
filds
lahf
inc
roll
stc
dec
xor
dec
inc
xchg
dec
adc
push
jecxz
mov
mov
pop
xlat
jmp
ljmp
in
fmull
nop
inc
cld
clc
xor
fidivrl
sti
sub
mov
lods
mov
lea
xchg
mov
or
rcrl
cmp
adc
pop
cmp
test
shrb
pusha
xor
jne
gs
push
or
add
push
es
aaa
inc
cwtl
popa
stc
ss
pop
pop
aad
dec
rorb
gs
mov
cmpsl
xchg
mov
imul
ss
dec
out
inc
adc
push
outsl
insl
scas
sub
stos
push
mov
dec
data16
dec
lock
or
push
push
xor
call
pop
xor
xchg
jge
jecxz
xchg
push
clc
test
push
rcl
push
iret
and
pop
and
xlat
cmp
popa
jmp
ret
insb
test
sbb
jle
lret
xor
pop
adc
mov
out
fimuls
mov
rcrb
jae
loop
xor
stos
pop
clc
out
frstor
rcl
xchg
and
lds
fisubrl
mov
inc
jle
push
fs
popa
pop
shlb
fcompl
mov
call
jmp
outsl
inc
mov
lcall
out
fmull
mov
nop
bound
dec
mov
out
lcall
xor
repnz
mov
lea
push
xor
dec
fwait
cmp
pop
clc
add
imul
negl
rorb
xor
cmc
mov
rcrb
popf
xchg
xor
add
cmp
dec
and
mov
pop
sbb
fimull
lret
mov
das
out
iret
sub
push
inc
sarl
pop
xchg
iret
sbb
sahf
jo
pop
push
roll
or
mov
cmp
jnp
cltd
sbb
xchg
lret
stc
mov
pop
xchg
push
call
inc
xor
pop
ja
inc
or
push
daa
cmp
mov
movsbl
inc
sbb
mov
mov
mov
ret
ficompl
aam
gs
test
pop
push
and
mov
dec
xor
sub
and
cmp
adc
sbb
and
int
and
lcall
inc
mov
xchg
das
sub
push
aam
lea
repz
mov
repnz
mov
cmp
mov
push
scas
mov
andl
adc
pop
add
xchg
out
jge
inc
ret
aaa
push
xorl
js
hlt
jno
gs
clc
int3
iret
xchg
in
jno
cs
outsl
cmp
sahf
inc
ja
test
xchg
xlat
dec
push
scas
or
testl
jle
pop
es
repnz
pusha
lahf
adc
insb
adc
xchg
mov
push
leave
sbb
outsl
xchg
mov
xorl
lahf
adc
lret
sub
out
jnp
and
loopne
dec
push
add
jle
push
cmp
lcall
dec
mov
mov
test
mov
fimuls
in
xchg
std
test
mov
and
jge
into
xchg
xchg
pop
enter
adc
in
and
jg
xchg
fsubr
or
xchg
scas
lret
es
daa
cli
push
gs
ss
and
test
aad
mov
jecxz
adc
fisttpl
sbb
mov
das
sysenter
and
mov
dec
or
inc
inc
pop
push
bnd
aad
sti
pop
loopne
xchg
adc
in
fcmovne
adc
repnz
mov
ds
push
sbb
nop
jg
xchg
hlt
in
out
es
fstpl
ud2
mov
add
aam
loope
enter
jge
mov
fmull
jecxz
add
rcrl
mov
push
cmp
mov
pop
sub
push
adc
mov
inc
decb
int3
in
mov
or
dec
mov
dec
data16
jnp
push
aaa
lahf
repnz
clc
frstor
cmp
pop
or
lahf
xchg
jne
dec
ds
mov
out
push
add
xor
adc
lahf
sub
cmp
lods
int
push
les
cwtl
notl
xchg
outsl
es
mov
and
nop
ja
mov
and
pop
mov
xor
adc
xor
aaa
add
mov
mov
inc
dec
xor
mov
outsl
filds
int3
lret
das
cld
jge
cltd
push
cmpsb
mov
loope
sbb
sub
xchg
push
loop
mov
outsb
push
xchg
aam
inc
xchg
sbb
cltd
xor
ja
pop
int3
ljmp
movsbl
jns
hlt
test
out
lock
jmp
sbb
push
push
sub
and
lock
call
lea
adc
mov
mov
xchg
and
in
xchg
mov
cmp
and
dec
adc
andl
out
xchg
loopne
inc
idivl
mov
rorb
inc
or
mov
or
adcl
jns
jge
jg
xor
and
jp
dec
push
out
in
sbb
pop
out
pushf
jl
sbb
mov
mov
incl
cmp
jb
shrb
xchg
pop
sub
mov
mov
sub
xor
cwtl
incb
repz
shl
mov
jl
xor
xchg
lcall
mov
pop
dec
hlt
fnclex
arpl
and
pop
adc
mov
frstor
add
mov
mov
imul
insl
pop
nop
movsl
or
sbb
jns
hlt
lahf
loop
xchg
pop
popf
add
lds
ds
mov
out
js
rorl
dec
dec
xor
xchg
pop
movsb
push
mov
imul
mov
mov
jg
dec
mov
mov
jge
pop
test
vmread
iret
jge
sub
inc
addr16
in
in
jl
sub
inc
inc
cmpsb
cmp
dec
movsb
mov
and
dec
sub
sub
xchg
adc
mov
test
pop
test
add
jecxz
aas
push
ljmp
mov
push
xor
inc
and
push
sahf
sub
xchg
mov
xchg
in
push
subl
dec
arpl
pushl
pop
jbe
and
mov
outsb
xchg
cltd
adc
clc
mov
sbb
in
aad
sbb
push
mov
push
mov
mov
push
jb
inc
or
pop
xlat
int3
ljmp
mov
les
xchg
inc
shl
and
lcall
jp
lahf
cmp
and
ds
sbb
xor
pop
sub
pop
aas
inc
sub
or
jl
int3
arpl
cld
xor
sbbb
ljmp
mov
pop
mov
ret
pop
pop
aaa
fists
push
mov
adc
out
add
mov
bound
push
mov
sub
ds
mov
sarb
pop
mov
push
xchg
fwait
xorb
mov
lcall
add
add
add
add
add
popl
add
add
add
add
pop
add
scas
add
add
add
scas
add
add
add
pop
add
add
add
add
add
or
add
add
xlat
add
xor
sbb
add
add
add
addb
add
jne
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
xchg
and
outsb
dec
or
add
add
add
int3
add
adc
add
ret
add
jl
add
add
add
and
add
arpl
mov
add
add
add
add
add
add
add
add
pushf
jecxz
cmp
jae
inc
outsl
outsb
jne
outsb
add
push
mov
insb
mov
or
iret
mov
jmp
das
push
cld
add
dec
pop
mov
mov
cld
decl
std
mov
addb
and
lea
decl
xchg
pop
jne
mov
add
push
rolb
rolb
incb
add
push
add
push
add
daa
and
decl
subl
push
inc
incl
cmp
loope
call
pop
and
cld
adcl
call
inc
jge
push
imul
push
add
std
ud0
incl
mov
ret
jb
cmp
lea
lock
adc
lea
faddl
pop
add
add
pop
add
add
sbb
stos
add
add
add
add
add
int3
pop
add
add
je
imul
jb
sbb
add
sub
push
js
add
push
arpl
stos
insl
gs
add
insb
add
js
push
insb
stc
jns
popa
add
add
outsl
insb
insb
jne
gs
or
outsl
popa
insb
jne
out
add
mov
add
adc
add
add
add
add
add
add
add
faddl
add
add
add
add
and
adc
cmp
int
sub
fcmove
mov
cwtl
pushf
fdivrs
insb
popa
sub
mov
int
enter
outsb
jp
lcall
jo
and
pop
xor
jo
ljmp
in
jg
sbb
stos
jp
mov
lret
addr16
fs
mov
lahf
mov
dec
inc
mov
in
call
aaa
sbbb
push
sub
or
xchg
mov
push
dec
ja
scas
jge
cld
lods
nop
or
and
jmp
inc
sub
pop
shll
cmp
ret
outsl
xchg
sub
mov
cmp
test
ss
call
rcr
sbbl
push
ret
ljmp
dec
cmc
push
add
and
jge
xchg
inc
jbe
dec
dec
xchg
faddl
lock
sub
rcl
sbb
mov
in
inc
jecxz
fwait
xor
or
nop
mov
stos
jae
stos
and
lds
mov
lret
mov
cmp
and
scas
mov
sbb
in
jl
cwtl
inc
testb
and
stc
mov
cmpb
or
sub
imul
js
in
sbb
adc
and
jmp
daa
xor
mov
jl
rorb
adc
std
std
mov
or
cmp
or
lahf
jle
ljmp
sbb
mov
xchg
sbb
stc
pushf
pop
pushf
jp
test
jp
mov
cld
sbb
lock
pusha
rcrl
popf
pop
pop
sub
mov
into
ret
insl
mov
scas
aad
mov
es
inc
mov
ds
ja
dec
cmp
jne
mov
dec
lret
dec
adc
xchg
cli
out
test
adc
loopne
or
dec
stos
cmpsl
xchg
aam
or
pusha
xor
mov
mov
outsb
cmpsl
xchg
mov
adc
inc
xchg
push
cmc
pop
lret
push
jns
inc
mov
lods
xor
jecxz
stc
push
adc
pop
add
rorl
clc
mov
sub
add
xchg
in
cld
xor
fdivrs
mov
pop
adc
sahf
sbb
test
xchg
jne
pop
test
push
decb
dec
testb
movsb
into
push
sbb
xor
sub
ja
xchg
mov
in
jb
iret
inc
xchg
push
mov
outsl
jns
push
cli
roll
fnstsw
ljmp
test
lea
inc
add
pop
or
and
lret
pop
and
adc
mov
mov
cmp
xor
test
fidivrs
movsb
and
pop
mov
mov
into
pop
jb
scas
mov
stos
cmpsl
push
xor
sbb
lahf
inc
popf
sub
and
sbb
add
fstp
inc
sub
in
aam
mov
aas
mov
xchg
jge
loopne
ret
cli
mov
jmp
xchg
and
cmp
jmp
jl
push
in
cltd
popf
loope
jb
data16
enter
mov
movsb
sub
cmpsb
xor
iret
mov
push
loope
sti
je,pn
int3
mov
ret
xchg
push
mov
gs
mov
dec
gs
mov
in
je
nop
rorb
mov
enter
ds
mov
dec
jo
test
pop
dec
stos
pop
movsl
out
fwait
daa
scas
data16
dec
addb
cmpb
mov
sti
push
ss
jl
repz
scas
ja
sub
or
xchg
mov
dec
mov
mov
xchg
adc
add
mov
imul
jb
aas
sub
cltd
shlb
push
mov
or
mov
fwait
cmpsl
pop
mov
and
loope
movsl
pop
movsb
push
hlt
or
gs
gs
sub
dec
cmpl
add
cmp
outsb
stos
pop
jle
cs
ja
loop
test
mov
dec
dec
push
in
iret
xchg
sub
jnp
iret
js
cld
inc
aaa
scas
stc
push
shl
or
mov
aas
imul
pop
jecxz,pt
repz
add
dec
sub
divb
mov
ret
ret
shlb
bound
dec
dec
loope
repnz
scas
stc
lods
xor
test
loope
mov
cmp
xchg
or
std
fildl
in
popa
lea
pop
idivb
mov
cmpsl
adc
sbb
adc
and
pushf
mov
ret
dec
xchg
movsl
repz
push
jp
aaa
cmp
sbb
add
das
fs
pop
mull
pop
add
lods
daa
in
dec
sbb
nop
pop
inc
jecxz
pop
inc
xchg
pop
es
das
fisttpl
divl
mov
lods
adc
dec
imul
imul
in
mov
and
dec
mov
xor
mov
inc
shl
gs
inc
popa
out
mov
stc
imul
fisttpl
cs
add
mov
movsl
fcmovne
mov
rol
lods
pop
aad
clc
add
mov
shlb
xchg
inc
cmpl
in
ja
lods
push
mov
mov
lahf
xor
or
sbb
std
sarl
les
sbb
cmp
leave
and
xchg
movsl
mov
clc
mov
movsl
testb
pop
lods
push
fsubs
sub
xchg
data16
jbe
cwtl
mov
jns
bound
mov
xor
sbb
push
in
xchg
repnz
fs
jge
xlat
repnz
or
xor
rcrb
push
cmpsb
test
in
xor
jns
mov
lea
jb
jecxz
add
lea
call
icebp
inc
jne
adc
mov
repz
out
add
cmp
lods
fiaddl
rclb
mov
xchg
sbb
js
clc
mov
pop
pop
loopne
test
lods
sub
add
sub
lret
push
je
push
aas
sbb
adc
inc
cmpsb
sub
pop
mov
jae
mov
pop
int3
clc
push
or
xchg
xor
and
lcall
sub
fs
lods
push
daa
negb
sub
push
or
push
not
ljmp
aaa
push
xchg
outsb
ret
jge
pop
xchg
mov
arpl
clc
cltd
pop
inc
cmpsb
sbb
pusha
or
xor
inc
adc
ljmp
jmp
fsubrl
ret
ja
and
fldt
pcmpgtw
dec
mov
loopne
cli
xor
pop
ds
pushf
push
adc
adc
cmp
dec
std
cmpsb
leave
or
pop
push
or
data16
sbb
mov
fiadds
inc
imul
mov
adc
dec
and
sub
xor
insl
sti
xor
pop
pop
adc
insb
mov
sub
or
in
and
cmpb
in
mov
nop
lock
jmp
les
fbstp
inc
repz
mov
sbb
mov
mov
xor
sahf
xor
sarl
pop
xor
les
out
stos
lahf
fistpl
or
in
jae
out
pusha
push
and
inc
sbb
mov
cmp
orl
inc
subl
ja
sti
sti
lock
pop
fidivrl
xor
fs
sahf
xchg
rorb
and
jb
ds
pop
test
or
cmp
inc
out
rolb
sub
mov
ljmp
aaa
jmp
sbb
sbb
cwtl
mov
cld
jno
hlt
cmpsb
rolb
adc
dec
inc
push
adc
mov
or
and
jo,pt
xor
mov
mov
jno
stos
xchg
int3
xchg
sub
add
stos
add
dec
insl
cmc
adc
aas
je
pusha
mov
sahf
scas
test
clc
inc
mov
jecxz
pushf
ret
or
jmp
push
movsb
addr16
cwtl
mov
pop
and
xor
jbe
mov
push
movb
cmp
jb
add
mov
mov
aas
aaa
je
add
pop
test
mov
cmp
pop
or
xor
mov
outsb
and
loopne
mov
pop
addr16
insb
into
mov
push
and
outsl
jg
into
test
scas
jns
mov
arpl
mov
mov
daa
dec
mov
lods
movsl
call
js
fmuls
and
jae
pushf
pop
cmp
push
dec
sub
dec
aaa
mov
popf
mov
mov
pop
or
and
mov
test
bound
xor
adc
sbb
in
xchg
mov
mov
loopne
sbb
sbb
sub
cmp
xchg
dec
fs
mov
push
daa
push
xor
bound
arpl
cmp
cmpsl
or
add
cmp
lfs
es
sahf
into
xor
cmpsb
mov
jmp
mov
cmp
and
loop
fs
call
cmpsl
out
call
div
add
loopew
sbb
repz
in
fsubr
rcl
test
jnp
and
fs
pop
imul
sub
push
in
mov
stos
je
imul
dec
movsb
add
push
inc
daa
jge
fistps
xchg
and
push
sbb
push
xorb
push
shll
pop
out
fs
aad
jl
or
fdivl
inc
punpcklwd
and
or
lods
or
loop
mov
and
rcl
testb
xchg
aad
inc
jecxz
outsl
mov
dec
xchg
lods
push
mov
cltd
xchg
push
jg
mov
insb
xchg
imul
or
lret
mov
xor
popf
push
mulb
pop
xorl
dec
xor
js
xchg
sbb
dec
scas
fldt
mov
mov
ret
dec
cmp
out
mov
sub
std
call
fst
in
les
fmulp
ss
dec
push
push
in
aad
xchg
xchg
pop
out
daa
sti
ljmp
loop
push
movsl
xor
xor
jns
jecxz
add
dec
stc
test
xchg
mov
adcb
pop
xchg
or
and
mov
sub
mov
cmp
iret
sbb
mov
push
test
mov
cltd
out
fstp
cmp
xchg
imul
fmulp
and
cmp
jno
test
jmp
stos
divl
fdivs
rol
ja
lds
lcall
stos
out
jecxz
test
cmp
mov
ja
add
test
ss
adc
sahf
mov
nop
scas
jne
aad
jnp
mov
vsubsd
adc
mov
jnp
bound
jb
xor
pushl
adc
mov
stos
mov
leave
leave
mov
jp
scas
adc
fistpl
pop
cltd
call
sub
sub
lret
pop
mov
repz
sbb
adc
movsb
call
jecxz
jae
loopne
mov
xor
into
test
pop
inc
in
mov
clc
mull
test
sbb
mov
or
stc
adc
ror
stc
jg
loope
enter
addr16
adc
fwait
ja
repnz
rcll
fnstsw
dec
push
lahf
ljmp
mov
fiadds
lds
mov
flds
mov
or
add
ror
dec
adc
das
mov
in
ljmp
mov
negb
test
shrb
jo
cmpsl
pop
cmpsb
sub
xchg
xor
call
mov
xchg
movsl
add
and
fidivrs
jne
sub
jnp
and
repz
mov
outsb
rorb
sub
push
lcall
imul
imul
adc
mov
clc
lods
pop
scas
mov
stos
push
cmc
add
jmp
sub
push
lcall
dec
ds
push
cmpsb
fldcw
pop
sub
jecxz
xor
push
adc
and
mov
and
test
lea
test
push
movsb
cmp
xchg
loopne
cmp
mov
or
addb
pushf
pop
and
cmp
pop
inc
push
mov
imul
xchg
clc
fsubrs
fwait
out
jl
xor
xor
cmp
stos
fiadds
fwait
or
test
popa
popf
push
cli
cltd
jb
insb
push
hlt
mov
adc
scas
enter
roll
pop
xor
inc
gs
push
les
push
push
leave
cmp
out
push
sbb
mov
dec
push
dec
add
stos
shlb
loope
mov
pop
popf
jb
cmp
xor
cmc
fists
test
dec
insl
xor
cwtl
xchg
xchg
je
xchg
imul
pusha
sbb
adc
jg
lret
dec
or
xchg
mov
cmp
stc
repnz
dec
int
sub
aam
xchg
lods
or
popf
pusha
lcall
aam
jo
pop
push
pop
inc
ror
pop
pop
testb
xchg
cmp
sub
mov
out
or
cmc
rorb
loopne
sub
push
xchg
jmp
add
pop
jmp
aam
jno
jbe
jbe
adc
addr16
jmp
sahf
adc
xchg
xchg
test
cld
pusha
mov
adc
mov
jae
dec
aas
mov
jle
mov
mov
jo
cld
arpl
dec
inc
add
sbb
jle
iret
mov
fdivrp
xchg
sub
fwait
mov
les
inc
dec
mov
mov
or
adc
test
js
test
push
popw
sbb
stos
call
movsl
mov
sub
adc
aaa
jmp
or
fistl
sbb
gs
testl
sub
inc
lret
lret
pop
loope
cs
xor
aaa
jecxz
cmp
mov
dec
test
dec
jno
cmp
sarb
adc
pushf
inc
jne
dec
sbb
bound
or
jle
mov
test
xchg
sub
cwtl
into
adc
imul
out
addr16
daa
push
ds
aaa
cmp
subb
ljmp
cmp
jbe
push
cmc
jns
lahf
xchg
fdivr
mov
push
pop
mov
scas
lahf
adc
jo
addr16
jo
xchg
dec
imul
sub
mov
push
mov
mov
jno
or
bound
cmp
jmp
pop
fs
test
mov
stos
hlt
mov
mov
pop
idivb
nop
xor
inc
aad
les
push
xchg
test
pop
jp
insl
test
mov
and
addr16
int
inc
dec
xor
push
dec
and
pusha
pop
into
add
jno
pop
aaa
out
shlb
into
addr16
lds
mov
test
das
loope
push
aam
mov
push
je
repz
xchg
pushf
adc
push
mov
push
pop
imul
add
ja
cltd
arpl
jae
inc
sub
out
mov
cmpsb
xchg
insl
dec
mov
out
push
xchg
xchg
sbb
or
jle
addr16
rcr
jmp
fstpl
jns
insl
xchg
pop
mov
popf
es
lcall
or
outsb
inc
ja
lret
xchg
and
jg
jle
push
jne
lods
dec
jnp
mov
je
fidivrl
insb
xor
inc
or
jne
sbb
loop
mov
pop
and
inc
je
outsb
sbb
mov
add
fldt
and
inc
imul
loope
in
icebp
dec
and
lret
mov
mov
mov
fdivl
sub
mov
les
inc
es
enter
cmpl
xorl
rclb
ja
enter
xchg
popa
lcall
cmp
or
mov
ds
movl
mov
xchg
fadds
mov
icebp
cmp
pop
shll
lods
mov
je
or
movsl
push
jae
add
xchg
push
loopne
shll
dec
ds
loopne
adc
pop
shrb
push
and
or
hlt
sbb
outsb
dec
xchg
and
push
mov
loope
out
bound
movsb
xlat
fnsave
out
jg
mov
sti
in
mov
xor
or
xchg
dec
pop
xor
jnp
mov
jl
addr16
lahf
dec
cmp
push
mov
rorl
ffree
xor
add
cmp
xor
in
jae
ds
mov
jns
cmp
iret
dec
inc
fstps
shll
jnp
dec
lds
mov
rol
jae
ret
scas
fadds
push
push
in
repz
enter
cld
leave
es
ljmp
sub
data16
xorl
loope
fsts
scas
xchg
inc
or
cwtl
cltd
push
aaa
mov
pop
pushf
jns
xchg
sub
loopne
ret
mov
adc
push
mov
test
xchg
mov
inc
add
pop
jg
clc
cmp
xchg
xor
ja
pop
jbe
mov
or
mov
sarb
mov
inc
lds
pop
xor
adc
mov
and
rcrl
sahf
loope
pop
movsl
push
mov
insl
repnz
mov
nop
pop
movsb
dec
ja
add
out
adc
push
pusha
sbb
pop
mov
stos
mov
out
out
mov
mov
mov
jb
les
stos
cmpsl
mov
in
addb
push
std
push
fwait
in
inc
mov
repnz
popa
inc
in
ds
enter
pop
insl
pop
cmp
adcb
test
adc
shr
sti
in
cmp
shrl
sbb
mov
sub
fdivr
ds
out
push
cltd
stos
rolb
sbb
jmp
incl
xor
mov
xchg
sub
xchg
jle
adc
cmp
and
dec
pusha
imul
addr16
sub
mov
test
cli
insl
pop
je
sub
ss
add
into
fists
outsb
ret
jle
jmp
cld
out
cltd
call
enter
stos
pop
out
inc
adc
call
nop
or
jb
inc
movsl
imul
mov
inc
out
pop
pop
adc
mov
xlat
mov
mov
jbe
xchg
out
hlt
mov
mov
outsb
xchg
add
aaa
ret
mov
sub
lret
cld
pushf
dec
incl
add
add
add
add
add
add
add
add
add
add
mov
add
adc
add
add
add
add
mov
add
add
add
faddl
add
add
add
add
dec
add
add
add
inc
add
jo
jo
mov
jo
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
add
add
add
and
push
add
add
add
add
add
roll
inc
adc
push
add
add
add
add
add
add
inc
add
add
data16
add
add
add
add
add
add
add
testb
add
arpl
add
add
imul
add
xchg
mov
and
sti
add
jecxz
sbb
lldt
sub
xchg
fcoms
mov
push
or
incl
clc
mov
or
jmp
add
mov
add
cld
test
popa
insb
add
mov
add
push
push
add
shl
incl
and
add
and
in
adc
add
loopne
add
xor
jmp
push
push
push
adc
or
std
popf
cld
xchg
adc
incl
incl
push
push
cld
push
xor
push
push
clc
test
sti
mov
test
lret
enter
movb
mov
add
hlt
add
add
add
add
add
add
xchg
add
add
add
add
push
inc
je
inc
shrl
inc
inc
outsl
add
gs
insb
mov
outsl
outsb
outsb
je
dec
jns
jno
gs
inc
mov
je
dec
push
gs
arpl
insl
insb
ds
gs
dec
outsl
jae
push
jne
outsb
jbe
je,pn
je
je
insb
add
add
add
xor
add
add
mov
push
add
add
add
shll
lahf
gs
aad
xor
lock
jg
jecxz
arpl
push
outsl
sbb
jmp
rolb
inc
movsb
add
cli
sbb
push
repz
test
or
jno
mov
sbb
pop
testb
xor
pushl
test
pop
lock
push
int
clc
and
adc
pop
bound
div
jns
mov
jp
movl
mov
dec
xchg
addb
or
add
xchg
shll
add
jle
loopne
push
stos
imul
fstps
loopne
jmp
xchg
jo
dec
adc
bound
xchg
es
dec
cmp
cmpl
push
pop
jmp
inc
in
mov
mov
sbb
jmp
cmc
and
and
lret
loopne
imul
scas
cmp
es
mov
sub
test
xor
adc
fldenv
xchg
dec
xor
sti
mov
loopne
mov
inc
push
and
inc
ljmp
or
or
adc
dec
loope
jmp
addb
out
scas
lds
pop
inc
push
xchg
jbe
iret
pop
test
repnz
sti
shrd
and
inc
inc
mov
clc
rorb
cltd
pusha
pop
enter
lods
mov
jnp
push
sub
cmpsb
add
jae
jo
jbe
movsl
pop
fldenv
adc
dec
inc
gs
mov
ret
sti
sbbl
push
jge
dec
mov
addr16
adc
movsl
sbb
dec
shlb
fmul
adc
sub
repz
push
rorb
inc
loope
test
sub
fcomi
hlt
cld
and
rcrl
pop
stc
mov
stos
sete
vcvtsd2si
xor
mov
inc
mov
or
aas
popf
cs
cmp
lcall
cltd
sub
aad
das
add
shrb
dec
xor
lret
and
test
fstps
mov
pop
loop
in
fs
adc
leave
into
jmp
pop
out
dec
sbb
cli
int3
frstor
data16
push
mov
enter
jne
scas
rclb
mov
pop
in
push
hlt
mov
mov
movsb
push
xchg
mov
ja
sub
jne
push
cmpsl
push
xlat
pop
jne
fs
jle
ret
sti
mov
cmpsb
adc
mov
popl
sub
jnp
test
out
sbb
inc
or
mov
out
mov
scas
mov
dec
xor
mov
popf
aam
pop
pop
repnz
scas
dec
sub
clc
and
mov
test
jo
stos
test
into
mov
enter
lret
clc
js
imul
sbb
lea
fwait
add
add
inc
lea
mov
dec
dec
movsl
cmp
bound
lods
mov
into
jns
cli
inc
ja
test
push
leave
mov
mov
push
mov
and
das
jmp
adc
mov
push
adc
leave
std
jbe
push
lret
insl
xor
mov
jbe
jecxz
push
inc
pop
mov
push
dec
jle
cmp
insl
into
hlt
pushf
add
lock
pop
scas
mov
bndstx
fs
sub
sub
inc
inc
int
mov
popa
iret
outsl
jge
es
mov
jge
in
stc
gs
dec
push
mov
cmp
dec
add
aas
and
jg
lds
sub
insb
jl
pmulhw
addr16
add
aad
add
push
and
outsb
lea
mov
xchg
jmp
subb
or
xor
sub
call
stos
sub
push
icebp
and
adc
push
cmc
add
push
jns
pop
sbb
mov
dec
jecxz
in
lock
or
sbb
subl
jns
adc
lock
enter
sti
test
inc
push
xor
out
shrd
cmpb
push
pop
sbb
sub
addl
jno
fiadds
dec
in
inc
mov
xlat
mov
ret
ret
lret
mov
mov
bound
cmp
lock
lcall
jl
pop
push
pop
xor
mov
sub
push
push
arpl
mov
mov
jmp
mulb
jns
pop
mov
xchg
add
clc
adc
push
mov
cmpsb
and
bound
mov
xchg
push
roll
addr16
adc
movsl
shll
add
rolb
add
leave
jne
stos
mov
xchg
lahf
scas
arpl
addl
shlb
ret
cmp
test
sub
mov
dec
fildll
fldl2e
adc
mov
je
daa
push
test
data16
adc
mov
inc
out
shll
or
xor
movsb
jl
sbb
cmpsb
mov
jo
xchg
mov
roll
push
pop
sub
inc
test
pop
int
mov
pop
pop
testl
fcompl
call
imul
leave
push
arpl
inc
add
mov
xlat
pop
fsts
sub
pushf
dec
cli
lods
out
addr16
fistl
push
push
pop
dec
jmp
sub
imul
test
call
jg
mov
aas
pop
js
sub
or
mov
out
push
sub
out
in
xor
scas
mov
sub
and
adc
je
out
pop
jmp
xor
jns
sub
cmpsb
cs
and
push
pusha
repz
mov
out
loop
add
das
movsl
or
dec
mov
daa
push
lcall
xor
pop
subl
arpl
scas
cmpsl
fbstp
adc
inc
lods
mov
jae
fbstp
add
aad
imul
xlat
mov
fdivs
arpl
roll
xchg
test
outsb
movsb
iret
mov
testl
inc
call
iret
popa
shll
ds
data16
inc
inc
dec
xchg
xchg
sub
dec
cmp
fldenv
mov
aas
std
fsubrp
std
aas
xchg
adc
inc
popf
push
subl
push
iret
inc
lock
aad
and
jl
sub
out
and
add
int3
sbb
lds
stc
sahf
daa
sub
stos
out
outsl
fiadds
out
sti
popf
jg
ret
insb
scas
push
fisttpll
mov
or
mov
xor
or
lds
add
nop
pop
xchg
aas
cmpsb
test
mov
inc
call
cld
popa
and
std
int3
adc
faddl
mov
je
rol
push
mov
jg
add
into
out
xchg
cmp
xchg
jecxz
aaa
inc
ret
add
inc
lret
pop
cmp
out
or
call
imul
movsl
popa
repnz
mov
add
xor
test
mov
or
pop
xchg
jmp
xchg
dec
fnstsw
mov
arpl
adc
mov
mov
sbb
cwtl
arpl
mov
jecxz
inc
add
xchg
mov
mov
push
fs
xor
std
adc
mov
in
xchg
shl
aad
mov
push
dec
push
test
inc
scas
int3
daa
xchg
inc
cmp
pop
repnz
dec
jo
or
jne
xchg
ret
or
out
and
add
or
add
push
aaa
sbb
ss
jb
icebp
das
in
stc
jge
pop
push
mov
xchg
prefetch
dec
fbstp
cmp
pcmpeqd
xchg
lods
popf
jnp
xchg
addr16
jno
iret
cmpl
cmp
sub
outsb
scas
push
lahf
mov
mov
and
jp
and
xchg
sub
pop
jle
xchg
loope
adc
jno
sbb
mov
fidivs
cltd
sbb
hlt
daa
jne
movsb
inc
lret
ja
or
mov
dec
pop
push
xor
add
jno
scas
adc
fmull
adc
xchg
adc
lret
int3
and
imul
out
xor
pusha
jb
mov
cwtl
xor
inc
jmp
stc
fists
push
dec
loopne
push
fidivrl
lock
outsb
fs
cmp
cmp
cld
scas
push
data16
mov
nop
std
pop
loopne
lret
push
rclb
pushf
or
cmp
pop
aad
hlt
push
insb
imul
adc
pop
cmp
jb
xchg
jbe
mov
aam
addr16
rolb
into
lret
mov
mov
aad
pop
add
stos
repnz
int3
shll
insb
pop
and
jne
cmpsl
dec
inc
adc
mov
loopne
idiv
out
movsb
xchg
inc
push
add
cmpsl
inc
pop
in
sbb
cli
mov
fwait
int3
mov
or
mov
push
mov
test
les
fstp
adc
test
xor
add
repz
or
loope
test
loop
adc
xchg
lcall
pop
push
out
lock
test
aaa
xchg
and
scas
test
test
sahf
test
add
xchg
mov
scas
stos
ds
jp
mov
insb
add
shl
lods
push
jge
mov
adc
pusha
mov
and
mov
push
jge
inc
dec
sub
das
push
xor
or
insl
mov
sub
out
add
lcall
and
insb
jnp
or
mov
sbb
loope
hlt
push
scas
push
or
out
xchg
adc
ret
and
out
mulb
fbstp
sub
jg
popf
stc
adc
push
inc
lret
jno
push
negb
cmpb
inc
push
xchg
imul
cmpsl
or
add
jecxz
imul
nop
jg
pushl
mov
sub
or
pop
decb
test
cmp
and
subl
int3
mov
popa
cmp
add
inc
mov
cmpsb
mov
js
out
scas
sbb
sub
shl
and
dec
mov
aad
aad
stc
frstor
clc
dec
loop
lds
cmp
mov
sub
lcall
popf
insl
enter
push
icebp
xchg
or
mov
cmp
jo
inc
add
bound
push
pop
push
aam
test
inc
cld
mov
ficomps
mov
xchg
dec
mov
std
dec
add
imul
loop
sbbb
repz
sub
push
cwtl
lds
mov
sarl
insl
xchg
es
jo
clc
arpl
jo
sbb
cltd
in
jp
dec
xor
inc
int3
cmp
arpl
aas
inc
repnz
out
jo
mov
lahf
pop
stc
ret
xor
lret
cmp
xchg
mov
dec
pop
sarl
mov
pop
xchg
in
mov
or
stos
or
jbe
sbb
pop
jnp
jmp
push
in
inc
jae
jo
loopne,pn
sti
cli
cs
shr
sub
lret
int3
addl
dec
pop
imul
rcr
mov
mov
pusha
inc
jbe
sbb
push
xchg
ss
or
insb
test
fstpt
mov
jnp
shrl
xor
repnz
jne
ljmp
mov
outsb
jb
mov
push
jp
push
jle
dec
adc
inc
outsl
dec
push
or
pop
ja
movsb
sbb
pop
lea
lahf
cmp
fcoms
xchg
inc
outsb
mov
or
ss
nop
push
dec
mov
mov
nop
mov
push
aam
sti
pop
inc
insl
cwtl
ljmp
mov
xor
fcoml
scas
xchg
xor
inc
cmp
jmp
mov
xor
fsubrp
enter
xor
scas
cli
call
inc
sarb
out
mov
jecxz
sub
es
fldcw
adc
and
mov
fs
inc
call
dec
ficoml
cwtl
rcl
lret
leave
jge
ficomps
fldenv
pop
mov
in
rcl
mov
std
inc
std
adc
adc
jmp
mov
bound
xchg
cmp
ds
dec
shll
pop
out
out
hlt
pop
inc
rcrl
mov
test
or
into
lock
dec
call
out
test
dec
mov
and
in
mov
in
mov
sbb
inc
push
push
adc
adc
mov
cltd
in
mov
inc
or
imul
cmp
mov
repz
insb
mov
or
push
lret
mov
inc
cltd
add
sub
mul
shll
sbb
dec
and
push
cmp
shrb
push
mov
xchg
xor
rep
push
or
lret
xlat
imul
xchg
pushf
xor
pop
in
test
xor
mov
fs
aad
in
pop
in
and
or
fmuls
xchg
push
mov
adc
movsl
mov
jle
mov
mov
or
and
int3
lret
leave
mov
clc
lock
out
insb
imul
in
push
push
enter
sbb
dec
add
push
out
fs
xchg
mov
cmpsl
leave
test
adcb
push
clc
aam
outsb
jp
jecxz
jg
bound
cmp
add
repnz
jo
outsl
mov
push
outsb
int
jnp
xchg
pop
push
test
dec
jbe
bnd
je
mov
dec
insb
aad
xlat
ljmp
mov
mov
int3
dec
test
addr16
adc
stos
faddp
lods
sbb
call
jne
xchg
push
mov
stc
jno
lret
jae
sahf
and
ret
out
and
aas
adc
xchg
jl
pop
add
cmp
xchg
movsb
sbb
push
mov
adc
mov
push
pushf
repz
dec
and
fst
cli
loop
pop
dec
add
aaa
lods
ret
das
call
rclb
push
in
stos
pop
fsubr
sahf
xchg
adc
xor
lahf
mov
shlb
pop
cmpsl
icebp
jae
aas
pop
or
clc
popa
jle
pop
inc
pushf
divl
fdivr
sbb
ret
ret
push
xchg
sahf
mov
dec
adc
out
adc
jns
scas
pop
clc
int
enter
dec
loopne
sub
lcall
adc
popf
loope
jp
jb
jl
pusha
sahf
sbb
popf
test
test
dec
jbe
cmp
add
dec
pop
loopne
push
jge
cld
orl
sbb
fld
lods
cmpsl
add
sahf
xchg
in
dec
sub
imul
hlt
jmp
mov
scas
mov
or
imul
jl
xchg
loop
mov
jne
fs
pop
cs
lds
dec
dec
adc
jmp
fnsave
mov
xor
in
or
call
pmulhw
call
inc
jno
fidivs
ficompl
in
push
std
pop
push
ss
out
imul
xchg
jno
rcll
test
xor
test
dec
mov
pushf
push
inc
xchg
adc
dec
andb
mov
inc
sub
testl
xor
loope
sub
jno
mov
subl
out
sbb
mov
fldenv
inc
rorb
int
sub
cli
repnz
adc
int
mov
push
jp
adc
inc
xchg
jmp
daa
test
lock
lock
sbb
cmp
and
in
in
inc
sbb
pop
push
jae
mov
xchg
jp
push
cmp
xchg
pop
aaa
inc
lret
dec
push
pop
daa
sub
lds
jbe
jno
jnp
mov
or
pop
ljmp
xor
rcr
sbb
mov
xchg
add
push
and
in
sub
jne
mov
insl
or
cmp
out
icebp
mov
push
outsb
pop
sbb
enter
jno,pn
dec
xor
ficoms
sub
rorl
lahf
idivl
mov
ja
jbe
mov
aaa
daa
stos
inc
das
imul
sub
push
mov
js
rcll
sbb
or
cmc
mov
cld
es
jecxz
outsb
in
push
cli
sahf
and
pop
cltd
jnp
fnstsw
or
mov
test
push
test
call
cmc
xchg
adc
pop
in
data16
mov
ret
push
mov
sarb
rorb
jge
mov
addr16
dec
xor
inc
in
outsl
stos
es
ret
cld
inc
mov
sub
push
fcompl
adc
push
fucom
es
ss
jp
lds
sbb
push
xor
pop
test
xchg
pop
pop
add
jae
hlt
ljmp
or
or
insl
cmp
push
mov
and
add
aad
cwtl
dec
push
mov
in
mov
loope
jmp
mov
xchg
xor
push
in
inc
adc
rol
pop
and
and
push
mov
dec
addr16
hlt
xor
pop
dec
int
fisubl
mov
data16
lret
pop
test
and
sbb
add
and
jmp
xor
icebp
and
pop
test
popa
in
mov
loopne
mov
icebp
jmp
mov
fimull
lea
push
push
xchg
insb
pop
bound
addr16
dec
cmp
in
das
cmp
mov
xlat
shr
xchg
mov
pop
insl
jle
cmp
lods
pop
cmp
mov
mov
sub
jle
or
pop
ljmp
scas
ljmp
push
fs
dec
mov
xchg
push
add
das
xor
fsubl
xchg
out
popf
jl
xchg
test
repnz
sti
push
push
leave
hlt
mov
cmp
test
mov
dec
dec
dec
push
lea
push
cmp
xor
xchg
inc
stc
arpl
stos
adc
adc
jl
inc
and
add
jmp
ficompl
cli
inc
push
aad
mov
or
nop
mov
cmc
inc
xor
shr
xlat
imul
popw
repnz
pop
and
stos
das
addr16
lds
adc
cmp
and
in
lret
shrb
repz
popl
jmp
add
pop
dec
dec
dec
lret
fcoms
fbld
mov
sub
cmp
adc
or
ds
dec
repz
mov
lret
movsb
bound
je
cmp
jb
or
mov
mov
into
push
clc
xor
push
and
sbb
inc
loopne
xlat
xor
jle
les
fs
lea
add
jne
xor
leave
push
int
jnp
or
andb
inc
mov
out
push
add
add
add
add
arpl
add
add
add
add
add
add
addl
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
mov
push
add
add
add
add
add
add
push
add
add
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
rolb
add
push
dec
jo
or
add
add
add
add
add
add
add
add
add
mov
add
add
add
lret
je
add
add
add
add
add
add
add
add
add
add
add
and
cs
push
outsb
insb
jae
jae
dec
jae
jb
inc
and
add
mov
fidivl
leave
push
js
iret
adc
lea
pop
mov
pop
lea
or
testb
je
fists
adc
push
clc
add
push
pop
or
cmpb
outsl
add
lcall
push
xchg
adc
sarb
sub
add
push
incb
call
and
incb
push
add
je
push
push
cmp
add
and
cld
dec
adc
mov
lea
add
add
lea
loopne
clc
or
enter
inc
push
adc
push
clc
clc
inc
adc
add
push
add
sub
add
add
add
add
add
add
add
add
inc
add
inc
add
fisubs
imul
add
arpl
je
inc
dec
gs
jns
dec
add
aas
push
gs
insb
dec
xchg
imul
jns
mov
push
add
add
inc
fs
imul
add
add
add
add
add
add
add
add
add
loop
add
add
add
add
push
stos
add
add
movsl
push
fidivl
push
mov
push
kxnorw
sbb
out
xchg
push
fsubs
and
pop
cwtl
flds
orb
or
xchg
rcrb
xor
adc
xchg
mov
mov
mov
mov
cmp
aam
decl
xchg
jl
cmpsb
fistpll
rcll
xor
fisubs
jne
and
pop
cwtl
lahf
icebp
out
arpl
clc
inc
mov
or
adc
sbb
mov
in
data16
leave
das
ret
mov
xlat
adc
mov
fisubrs
int3
ret
push
cmp
int3
aam
and
test
jecxz
mov
movsl
cmp
or
outsb
cmp
add
mov
test
mov
xor
pop
pop
sub
jo
jmp
insl
inc
or
xchg
sbb
or
xchg
daa
insl
xchg
pop
push
orl
in
stos
cmpsl
mov
aaa
mov
xchg
sbb
outsb
sbb
sub
cld
stos
mov
jge
adc
and
and
mov
addr16
pop
popa
stos
push
adc
lret
pop
jnp
in
mov
negb
inc
es
cmpsl
dec
sbb
dec
outsb
int3
test
roll
ss
push
inc
das
test
repnz
mov
shrb
ja
jae
dec
pop
mov
outsl
push
cltd
lock
movsl
pminsw
mov
and
pop
or
loope
mov
scas
subb
pushf
adc
or
inc
xor
cs
mov
lret
test
inc
dec
lock
ja
jmp
sbb
xchg
cmpsl
cmp
scas
mov
adc
stos
fstps
dec
cmc
movsl
dec
sub
add
xchg
call
and
mov
dec
cmpb
xor
mov
and
fisubl
fdivl
xchg
inc
mov
out
mov
push
push
cmc
xor
scas
into
fsubr
iret
jp
mov
adc
iret
jge
xchg
pop
test
xor
add
sub
rolb
cs
inc
ret
vmptrld
mov
lock
jecxz
adcl
arpl
mov
imull
out
rcll
xor
in
inc
sbb
xchg
xchg
sbb
lds
or
mov
adc
and
cmpsb
sbb
xor
push
cmp
xchg
into
test
add
arpl
fisubs
add
lcall
pop
xor
pop
push
aam
je
jp
cwtl
sahf
scas
call
mov
add
jns
inc
js
scas
int3
adc
out
or
pop
lock
in
imul
lcall
jo
xor
and
xchg
xchg
pop
sbb
out
jnp
add
lock
pushf
test
negb
sahf
push
adc
push
scas
dec
xchg
sti
cli
push
roll
mov
daa
pop
and
repz
stos
sbb
ljmp
push
pop
iret
aaa
mov
xor
xchg
hlt
or
jne
inc
bound
adc
mov
mov
insl
push
addr16
test
pop
lcall
dec
out
xor
cmpsl
fsts
fsub
or
jecxz
dec
test
pop
lret
cmp
xorl
xor
inc
adc
push
sbb
scas
mov
lds
mov
cmc
xor
push
push
jmp
das
pop
xor
fdivrs
sarb
roll
pop
lahf
loop
mov
mov
sbbl
nop
negb
jnp
xchg
cmp
repz
sarl
mov
jmp
jnp
and
dec
test
subb
jo
out
lahf
sub
fcmovu
cmp
pop
ss
orb
xor
lcall
dec
aaa
sbbl
and
cmpsl
sub
mov
pop
sahf
sbb
orb
push
inc
ret
incl
dec
sub
sbb
and
xor
push
push
out
shlb
ja
aam
push
out
add
push
mov
xchg
dec
lds
push
cld
xchg
sbb
mov
decb
int3
sub
je
mov
push
inc
xlat
sbbb
adc
lcall
xlat
inc
jbe
adc
jmp
inc
loopne
ret
mov
fbstp
xor
into
imul
iret
push
cli
jb
or
mov
xchg
and
and
jg
rcrl
mov
aam
scas
stos
sahf
sbb
mov
pop
aam
imul
cmovne
aaa
lret
mov
je
cwtl
movaps
mov
hlt
pop
mov
test
sbb
loope
jecxz
rorb
pop
fcmovnb
adc
out
push
pushf
pop
aaa
xor
popf
int3
mov
inc
aad
ds
loope
out
stc
mov
pop
xor
cmp
int3
xchg
pmulhuw
pop
jmp
rolb
stos
pusha
and
out
pop
pop
cmp
ja
xor
mov
inc
sub
mov
push
outsl
and
das
ret
divb
jg
aas
clc
and
lea
cmp
and
lods
pop
movsl
sub
inc
orl
ja
fsubrs
inc
daa
push
iret
and
in
gs
pop
add
stos
cmp
push
gs
lcall
push
mov
pop
and
ljmp
pushf
loopne
aas
sahf
push
aad
arpl
jmp
scas
jecxz
fs
add
mov
ret
mov
jl
gs
mov
pop
pushf
loop
xor
push
sub
stc
fwait
lret
jl
dec
ja
in
fldcw
ds
jle
mov
lods
mov
addl
data16
mov
leave
clc
sub
jmp
popa
cltd
mov
out
inc
pusha
xor
mov
inc
xor
ja
xchg
popf
jbe
iret
subl
adc
add
mov
rclb
fsts
fwait
scas
lods
dec
fs
sub
iret
fwait
lea
pop
cmpsb
jmp
std
addr16
jns
lock
aaa
fistps
push
pop
pushw
push
xchg
add
dec
aam
pop
add
movsb
ja
not
out
std
cmp
lods
decl
cmp
mov
in
mov
push
ss
or
xor
xchg
jns
jle
mov
pop
loop,pt
sbb
movsb
jno
pop
sub
push
jecxz
cmp
je
jnp
cmpl
pop
mov
lret
lods
pop
gs
leave
and
fs
cmp
dec
dec
ret
das
or
mov
mov
std
sub
mov
xchg
and
inc
loop
fsub
cmp
test
das
inc
push
sub
outsl
mov
mov
add
daa
cli
jno
jp
enter
stos
lea
cmp
jb
sti
mov
pop
push
lret
leave
or
and
push
mov
and
and
out
in
jb
xor
incl
fs
push
decb
mov
ljmp
and
adc
jp
pop
sub
sbb
push
std
push
pop
negb
fcomps
clc
mov
xchg
and
xor
push
and
es
pop
jbe
cmpb
test
sti
dec
jbe
test
push
lret
pop
mov
pop
lahf
shlb
push
sbb
pop
arpl
fildl
push
push
push
pop
ljmp
xchg
inc
ljmp
add
xchg
and
repnz
out
aaa
adc
adc
pop
clc
mov
ss
sub
or
xor
adc
mov
fdivr
and
xor
in
lock
or
pop
int3
ret
addr16
jne
bound
xchg
pusha
push
mov
xchg
mov
sbb
dec
data16
loopne
xlat
adc
inc
sub
int
dec
rol
inc
jge
shll
push
mov
arpl
fwait
add
adc
stc
xchg
mov
fdiv
mov
lods
ret
mov
sub
std
mov
ljmp
xchg
push
or
xor
mov
popf
cwtl
ljmp
mov
jge
dec
cld
adc
fcmovne
addr16
insb
test
std
and
mov
mov
jg
dec
add
test
cmp
pop
lods
out
jmp
nop
add
adc
mov
cmc
cmpsb
sub
rorb
clc
cs
scas
fadds
xchg
xchg
insl
adc
pop
and
cmp
jl
das
lock
cmpsl
shll
and
int3
cwtl
inc
mov
data16
xlat
fs
jae
rcrl
test
mov
push
fcoml
cmpsl
arpl
addr16
sub
das
out
dec
xor
fistps
addb
jp
aaa
or
pop
popf
sahf
scas
inc
pop
cmpsl
push
ss
push
lods
in
test
cltd
cmc
cmp
mov
mov
cmp
dec
mov
out
test
lea
jae
sbb
shll
loope
mov
je
pop
push
sbb
sub
adc
cmp
mov
mov
ficoms
ret
xchg
cld
pop
mov
int3
lret
fwait
les
mov
repz
sti
aam
test
leave
xor
lret
and
arpl
lods
into
in
xchg
push
sbb
mov
sub
jmp
mov
arpl
jmp
sbb
scas
dec
std
subb
xor
insl
adc
fdivs
shl
into
testl
sbb
mov
stos
mov
pusha
mov
or
sub
xchg
fiadds
and
pop
mov
jno
test
sub
push
cmp
dec
inc
test
xchg
xor
push
lahf
scas
mov
mov
stos
push
popa
mov
add
push
mov
dec
es
push
inc
mov
push
mov
scas
dec
sbb
push
ret
sub
inc
inc
loopne
pop
cmp
and
repnz
mov
xlat
jne
sahf
sub
lcall
adc
sub
es
ret
cmp
out
dec
xor
gs
xor
jb
or
push
les
mov
je
push
sub
pop
xchg
in
inc
lcall
mov
rorb
mov
sub
fstl
push
aas
fcoms
aad
pop
sahf
add
mov
xchg
xchg
push
data16
mov
mov
sbb
and
pop
mov
mov
fsts
cmp
pop
jge
pusha
jmp
pop
sbbl
cmpl
outsl
hlt
pop
in
es
outsb
push
cwtl
jb,pt
rcr
lcall
fdivs
push
ret
xacquire
repnz
call
xchg
fwait
cmc
gs
aam
das
sbb
ljmp
cmc
add
js
sbb
mov
int
aas
lock
out
xchg
dec
lret
add
jns
mov
outsl
mov
sahf
sub
addl
mov
sub
rorb
mov
enter
add
xor
enter
jae
pop
jmp
add
rclb
cmp
fsqrt
xor
repz
mov
andl
mov
mulb
xchg
hlt
fpatan
pusha
xor
mov
daa
jecxz
lret
out
aad
outsl
jecxz
jge
push
lea
jmp
and
adc
adc
mov
sub
hlt
cmp
test
in
fs
mov
jp
mov
out
shll
jp
das
lcall
xchg
in
xor
xor
sub
fcoml
enter
jae
incb
cmp
adc
sbb
cmp
addr16
cmp
rcr
aas
bnd
jnp
test
mov
divb
cmp
xor
xor
sar
pusha
test
lock
and
popa
cmp
dec
jge
cmpsl
in
shll
sub
mov
or
js
icebp
and
cwtl
test
js
fisubs
in
lods
clc
scas
pop
aas
mov
push
aas
cmp
arpl
inc
mov
mov
inc
pushf
shll
aam
int3
rcrl
sbb
push
movsb
xlat
or
push
jle
mov
mov
mov
jge
add
mov
hlt
fcmove
push
jp
pop
data16
scas
jmp
lahf
sub
mov
fwait
mov
lea
test
mov
xor
sahf
shlb
pusha
or
insl
call
cwtl
cmpsl
ds
out
pop
pmaxsw
aas
jp
and
add
and
cmpsb
mov
dec
xor
jp
das
cmp
push
pop
daa
cltd
jge
sbb
in
leave
mov
jno
stc
int
mov
imul
inc
fistpll
cli
xlat
inc
sti
cmpsl
dec
iret
das
mov
mov
leave
push
rclb
outsl
push
or
in
inc
jnp
adc
mov
rolb
xchg
inc
push
jl
cmp
clc
inc
cmp
popa
loope
jae
xor
mov
push
cld
and
stc
cmp
cmp
lret
xchg
xchg
add
movaps
int3
cmp
outsb
xor
mov
cs
lods
movsl
aam
sbb
into
iret
mov
sbb
je
adc
jge
call
pop
ja
into
roll
dec
fbld
lret
xchg
xor
push
and
push
jmp
mov
aam
scas
ret
nop
orb
fsub
movsl
leave
mov
lea
mov
cmp
bound
icebp
or
cs
rorb
push
adc
adc
fstps
xchg
xchg
push
shll
mov
jge
insl
aaa
or
xor
jno
pop
sub
or
mov
mov
aad
mov
ficoms
testb
mov
mov
xlat
pop
aad
jae
ret
outsb
inc
sub
je
inc
cmp
dec
mov
and
fadds
sahf
jns
pop
aaa
jp
enter
aas
mov
lret
lcall
or
mov
call
test
into
loop
lock
jb
jecxz
cmp
dec
lret
out
cmpsl
subl
xorl
add
cs
cmp
iret
xchg
ror
jne
jg
push
and
cli
adc
fxam
xchg
int3
inc
clc
pop
adc
faddl
cmc
stos
fnsave
mov
and
enter
add
mov
jbe
xor
mov
xchg
pop
adc
into
dec
mov
jae
jmp
fcomps
xchg
imul
shlb
and
sbb
repnz
xor
lods
jecxz
pop
aas
pop
sbb
xchg
hlt
outsl
pop
inc
in
lods
insb
pop
mov
lcall
push
xor
push
inc
lods
stc
xor
out
scas
in
jo
fdecstp
cs
icebp
adc
fdiv
jbe
dec
loop
ljmp
lahf
or
cltd
in
push
fiadds
repnz
jp
jg
adc
push
jl
pop
cltd
inc
add
mov
gs
mov
bound
testb
mov
cld
bound
push
jbe
outsb
aas
ret
or
cmp
out
adc
fsubrl
dec
jg
xor
ror
mov
sahf
mov
popf
xor
dec
fscale
rorl
jne
mov
add
mov
insb
shll
xchg
sub
or
cltd
clc
pop
inc
fisubs
sub
xchg
jecxz
lcall
hlt
aad
sti
push
shll
out
jecxz
sub
pushf
push
dec
sbb
sub
mov
push
and
jne
mov
sarl
jne
popa
push
cs
ljmp
pop
pop
pop
adc
dec
inc
loop
jnp
lods
lds
adc
push
xor
mov
push
test
mov
jl
rorl
cmpsb
lock
divl
or
popf
xchg
dec
mov
push
loop
shlb
aam
adc
add
add
jl
sub
fildl
fwait
loope
mov
out
sbb
and
jp
nop
mov
sbb
dec
sub
call
push
je
mov
xchg
bswap
std
cmc
push
es
cmpsl
sbb
inc
and
das
mov
iret
mov
loope
sbb
push
sbb
std
imul
lcall
es
cmp
movsl
push
push
pop
push
test
mov
pusha
sarl
xchg
xchg
sbb
push
lahf
enter
js
cmpsb
aad
call
daa
dec
inc
push
sub
xchg
push
in
xchg
sbb
cmp
push
sub
cwtl
mov
pop
add
fcmovne
inc
test
bound
out
push
xchg
lret
pop
fisubl
aas
in
add
or
xor
push
and
test
inc
ss
imul
lock
pop
push
fcoml
lahf
bound
scas
jp
divb
data16
mov
dec
inc
jb
fyl2x
mov
scas
dec
mov
or
pop
add
mov
sub
xchg
cmp
cmp
cmp
pusha
enter
cltd
lock
xchg
sub
cmp
push
or
pushf
adc
std
test
cmpsb
sarb
xchg
pop
push
xsave
into
mov
fadd
push
inc
sbb
mov
mov
or
sti
xchg
sbb
call
and
push
shll
mov
cmp
imul
push
arpl
scas
gs
mov
pushf
js
mov
scas
sar
xchg
movsb
mov
cmp
mov
shll
inc
fisttps
sbb
adc
mov
js
or
sub
ljmp
xchg
notb
jnp
imul
addr16
lahf
out
lds
lds
cmp
cld
or
xchg
gs
xor
push
pop
sbbb
inc
loope
pop
lea
mov
xor
test
movsb
add
ljmp
xchg
ja
stc
daa
ret
fidivl
sti
mov
add
xlat
outsl
pusha
jecxz
lahf
pop
xor
dec
js
mov
lods
outsl
int3
xchg
das
rep
and
lods
lret
inc
dec
cld
aas
adc
jbe
jmp
xorb
fdivrs
bound
pop
xlat
leave
lods
popf
sahf
out
pop
pop
cmp
test
pop
ljmp
dec
jge
mov
jb
adc
sub
imul
push
orb
mov
hlt
pop
mov
outsb
test
out
or
jecxz
mov
cmp
outsb
pop
inc
dec
xlat
insl
dec
in
int3
sbb
mov
movsl
push
and
cwtl
fstpt
loopne
aam
dec
fcoms
vmovntdq
mov
sub
or
xchg
jae
mull
push
cli
mov
mov
outsb
insl
rcr
and
lcall
aad
icebp
adc
arpl
xchg
pop
or
add
add
add
xchg
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loop
add
add
add
add
push
stos
ret
add
add
add
cmp
add
stos
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
pop
add
add
mov
outsl
add
add
pop
adc
adc
add
add
add
add
add
add
adc
add
cltd
or
add
add
add
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
cs
jns
jne
dec
dec
je
jb
outsl
jo
add
fsubrs
or
cld
shll
xor
sti
dec
leave
add
je,pn
cld
mov
decl
jns
add
push
lods
push
lock
dec
call
call
mov
lock
clc
lea
pop
dec
mov
sub
into
sbb
add
add
repnz
jmp
sub
pop
adc
loopne
mov
add
test
pop
lea
jmp
jb
pushl
rol
int
adc
cld
call
add
adc
incl
je
clc
lea
mov
add
push
ret
push
incl
inc
jne
loopne
add
push
rclb
adc
sbb
add
add
int
add
sbb
add
sbb
sbb
sbb
sbb
jae
gs
gs
popa
add
je
add
jb
outsb
adc
add
gs
add
add
jae
outsl
je
orl
inc
xor
je
push
gs
add
add
add
add
xor
add
add
sub
add
add
mov
add
add
fldl
add
add
add
add
add
add
dec
add
add
add
ret
adc
xchg
das
mov
imul
mov
xchg
adc
mov
stos
popf
inc
and
pop
push
enter
xchg
fs
cmc
ds
mov
mov
or
mov
pop
clc
shlb
xor
mov
cltd
jmp
inc
mov
push
mov
add
pop
or
xchg
inc
jo
mov
mov
pop
aaa
lds
andl
jecxz
sub
xchg
sub
cltd
pop
movsl
adc
enter
out
stc
sub
roll
inc
fs
data16
push
test
stos
fs
cld
cli
xor
inc
mov
cmp
xchg
cmp
leave
imul
das
pop
cs
rcr
ss
cmp
adc
xchg
xor
xchg
dec
fwait
jmp
add
div
sub
jl
and
cmp
and
nop
pop
in
stos
mov
pop
cld
inc
ret
push
xchg
push
xchg
sub
mov
add
mov
loop
sub
cli
fildl
mov
fbld
inc
sbb
inc
cs
mov
inc
xchg
xabort
mov
jmp
pop
and
cs
add
or
cmpsl
pop
xchg
lret
cld
and
and
ret
mov
es
cmc
sub
adc
push
popf
out
cmc
or
xor
roll
or
lods
incb
popa
das
pop
mov
cmc
add
daa
sub
push
mov
mov
dec
mov
sub
out
xchg
loopne
mov
xchg
xor
mov
in
cmp
push
mov
mov
dec
scas
mov
cltd
es
add
sub
je
arpl
hlt
pop
cli
lods
mov
popa
sbb
lret
and
sbb
cld
push
popa
mov
ja
mov
test
mov
out
loop
pop
cmp
rcll
xchg
sbb
cmpsl
and
cmpsb
testl
sub
aam
xor
sarl
mov
dec
scas
fldcw
push
negl
xchg
adcl
and
or
mov
popf
cld
lcall
jl
adc
sbb
sbb
add
mov
jmp
fwait
cwtl
in
xchg
stos
inc
or
xor
sub
xchg
dec
dec
push
adc
loopne
sub
or
cmp
cli
cli
push
dec
je
adcl
scas
ds
jecxz
dec
cmp
push
push
pop
xchg
fisubs
out
or
inc
aaa
dec
dec
push
dec
cmp
aaa
xlat
xor
fidivrs
out
jno
and
jle
dec
pop
rcrl
fstpl
leave
loopne
add
lret
ret
inc
pusha
adc
enter
fildl
jo
mov
inc
add
mov
adc
or
sahf
jo
lret
xor
jb
int3
add
insl
out
popf
data16
sbb
jno
push
int
push
repz
xchg
mov
or
mov
xchg
popa
or
jbe
out
fmulp
dec
imul
movsb
dec
aad
sub
and
scas
rolb
test
shlb
iret
xchg
inc
out
popa
js
call
ret
sbb
jge
cmp
sub
inc
rcrb
fcmovnbe
push
aad
cmpsl
arpl
jp
push
mov
repnz
xchg
or
inc
movb
xlat
test
sbb
push
ficoms
enter
jle
cmpsb
cmp
xchg
or
loope
in
jl
loop
add
lea
stos
cli
mov
imul
jae
xor
inc
inc
inc
in
mov
rorl
mov
out
cmpps
int
adc
rcr
fnstenv
lock
icebp
cmovo
pop
pop
nop
mov
pop
push
ror
test
ja
bound
cmp
mov
dec
push
jmp
sbb
nop
mov
shr
ret
cwtl
mov
mov
sti
je
push
fisubl
or
mov
leave
enter
xchg
xor
outsl
jp
pop
leave
cmp
adc
cld
imul
pushf
pop
mov
leave
pop
call
pop
sarl
push
or
sub
into
arpl
add
mov
dec
jne
pop
inc
xchg
cs
lods
xchg
pop
jo
dec
jge
insl
lahf
js
pushf
aad
cs
pop
mov
mov
pop
push
jp
pop
xchg
pop
not
pop
fcompl
test
in
jge
test
lods
jl
shl
inc
sub
add
xchg
jns
sub
push
push
pop
add
pop
sub
pushf
cmp
sub
and
shll
mov
xchg
int3
cmp
std
stc
push
in
push
mov
mov
xor
pop
pushf
xor
mov
aas
mov
or
dec
int3
push
xchg
ret
cmp
jmp
dec
xchg
xor
loope
shrl
fwait
sub
cli
sbb
out
iret
jne
sbb
fimuls
push
mov
lods
test
pop
mov
xchg
adc
std
ret
imulb
cmp
inc
outsb
sti
imul
out
repz
fsts
insb
mov
sbbl
inc
push
inc
add
int3
pop
aas
mov
not
jno
lods
ja
adc
into
dec
lahf
repz
shlb
xchg
test
adc
pop
fmuls
aaa
out
jg
mov
mov
js
jecxz
xor
jl
repz
rol
push
jg
in
xchg
into
mov
sbb
and
dec
fimull
out
fisttpl
add
push
movsb
divl
jo
inc
imul
inc
into
jae
lret
sbb
xor
jl
mov
pop
out
mov
scas
rcr
cmc
pop
jnp
cmp
out
addr16
xchg
mov
lret
rcr
and
lock
scas
cmpsl
rolb
jp
jbe
movsb
adc
push
inc
xor
jb
icebp
cmp
push
and
xor
add
stos
or
lret
inc
xchg
adc
jmp
cmp
ret
cmpl
inc
xchg
sbbl
pushf
inc
jmp
rolb
and
out
jg
mov
jbe
test
sbb
aaa
sub
adc
dec
outsl
cmpsl
cmp
jge
push
pop
or
cmpsl
add
jbe
popa
and
shlb
cld
add
fcompl
daa
xor
fiadds
aas
push
jmp
jo
dec
inc
pusha
mov
arpl
sub
adcl
and
pslld
mov
cmp
cmpsb
or
push
push
scas
or
cli
popf
mov
je
mov
stc
push
imul
dec
test
outsb
jns
xchg
jp
aas
in
shlb
or
jae
inc
stos
outsl
in
push
mov
sbb
pop
mov
or
and
push
pusha
xchg
outsl
cwtl
mul
sbb
pop
mov
out
fld
outsl
mov
lock
mov
pusha
lods
call
push
xlat
fldcw
push
add
mov
cli
cli
jmp
xchg
fstpl
aaa
mov
mov
and
mov
push
mov
ret
cmpsl
scas
out
inc
jnp
push
jle
mov
xchg
clc
or
out
cli
rorb
xchg
ss
leave
mov
mov
imul
xor
jp
pop
imul
xor
sti
insb
sub
pop
rorb
push
mov
fwait
cmp
or
cltd
int
outsb
cmp
je
sar
add
lods
xchg
loopne
stos
test
pop
xchg
mov
mov
fstps
lods
cmpsl
sbb
popa
hlt
or
stc
mov
adc
loope
mov
lret
pushf
push
push
adc
add
or
or
mov
xlat
pop
xor
and
cmp
sub
pop
aaa
mov
jno
xchg
leave
cmp
pop
add
cmp
gs
xor
ret
or
stc
out
add
lods
scas
das
orb
xor
rcl
cltd
out
test
mov
sub
pop
orl
or
popa
jae
jge
mov
and
ss
jmp
and
ret
xlat
repnz
loop
shlb
int
loopne
testb
sbb
out
push
nop
sub
xchg
xchg
mov
rclb
xor
call
aaa
scas
movsl
jl
testb
outsl
xor
stos
in
cli
mov
loope
les
pop
push
dec
mov
test
xor
dec
aas
cwtl
sbb
xchg
arpl
sbbb
scas
test
xorl
inc
jns
push
dec
push
push
cmp
test
xor
in
xchg
xor
xchg
xchg
adc
jmp
sub
lret
stos
in
inc
cmp
jmp
cmp
xchg
add
cmp
mov
sub
jo
test
jb
les
lock
in
sub
daa
sbb
xor
inc
jno
jg
test
push
and
and
in
scas
neg
stc
pop
and
xlat
xor
xchg
test
mov
xlat
sub
stc
pop
out
or
fsubrl
sti
fs
cmp
mov
scas
mov
in
mov
xlat
xor
sbb
sub
outsl
xchg
into
inc
jge
roll
ret
jl
call
sbb
out
out
mov
outsb
pusha
jns
cmp
push
sbb
cmp
rcr
mov
mov
jecxz
xchg
and
aaa
adc
jo
and
loopne
push
and
push
dec
or
bound
sbb
mov
pop
or
ret
test
cmp
in
loopne
add
sbb
leave
out
cwtl
add
loop
xor
out
xchg
mov
fildl
sub
flds
ja
jmp
int
mov
in
in
outsl
das
mov
nop
jno
shlb
loopne
and
in
sbb
ds
mov
gs
jno
push
xchg
pop
xor
pop
outsb
mov
add
sbb
dec
pop
subl
and
aad
lahf
out
cmc
mov
nop
or
jb
mov
mov
cltd
mov
arpl
aas
jbe
jb
test
es
sbb
xchg
sub
mov
in
imul
sarb
pop
mov
cmp
push
jo
pop
aad
subb
je
xchg
and
or
push
test
jns
outsl
clc
fwait
jns
push
or
insb
scas
stos
shll
rorb
xchg
push
aam
mov
shll
data16
cmp
jns
gs
or
icebp
add
mov
pop
lods
xor
lds
sbb
dec
dec
mov
xor
es
lcall
inc
int3
jae
pop
lods
mov
gs
aam
pop
rcpps
jnp
loope
xchg
mov
cmp
cmp
dec
ret
cld
aas
or
fwait
xchg
fnsave
push
or
push
and
leave
sahf
cmp
add
pusha
dec
stc
push
adc
and
icebp
cwtl
mov
mov
pop
sti
movsb
fwait
jmp
mov
imul
out
pop
adcl
or
inc
jns
in
push
testl
mov
gs
out
test
movsb
or
mov
or
or
pop
subb
mov
jnp
xor
adc
dec
inc
sbb
pusha
icebp
subl
mov
loopne
fsubp
jge
nop
test
fucomi
int
and
lds
lods
push
fcomps
js
mov
jnp
test
sbb
mov
out
cmovs
int
imul
loop
mov
cmp
and
mov
mov
test
int3
testl
sbb
std
pop
adc
ljmp
faddl
movb
pop
cltd
lret
movsl
mov
or
push
sub
dec
lret
adc
dec
mov
inc
dec
lret
xchg
in
xor
ss
and
mov
mov
sub
mov
mov
fimull
repnz
insl
lret
cmp
cmpsl
push
mov
andl
adc
inc
xchg
stc
test
and
xchg
jno
mov
pop
adc
pop
push
mov
jg
xor
jbe
jmp
push
add
lds
fnstenv
fdivp
fisubl
dec
pop
insl
jle
and
xor
ljmp
movsl
test
into
ljmp
push
sbb
lret
inc
xchg
or
xchg
je
adc
stos
mov
mov
repnz
scas
or
push
call
test
std
dec
pop
sub
jae
insl
mov
cmp
and
mov
sbb
lret
mov
xlat
mov
sahf
adc
jmp
mov
ret
out
inc
les
cmpsb
aad
inc
enter
inc
repnz
jo
rcrl
jl
mov
jg
iret
pop
dec
clc
mov
iret
les
shrb
mov
lds
add
sar
out
dec
jbe
xchg
rcrl
sub
push
dec
sti
mov
and
cld
fimuls
aas
sbbb
daa
cmp
idivb
add
rcrl
xchg
clc
fcomip
sub
pusha
jnp
xor
and
sub
push
hlt
pop
xchg
lds
jbe
jne
cmpsb
pop
leave
push
or
incl
dec
jecxz
ljmp
rcr
xchg
adc
dec
inc
dec
sbb
mov
in
adcl
mov
imul
pop
inc
and
fwait
cmc
push
adc
xchg
jns
pop
js
fisttpl
xor
lea
in
andb
movl
pop
mov
xchg
cmp
jmp
repnz
ja
inc
clc
adc
outsb
pop
or
xorl
ljmp
pop
push
test
cli
sub
dec
aas
inc
mov
lods
cmp
daa
ret
es
xor
and
mov
cmp
add
lret
push
mov
adc
cmp
lea
loop
sbb
fisubs
adc
jo
sbbb
hlt
fildl
cmpsl
leave
arpl
repz
jns
data16
cmc
mov
dec
pop
popa
out
addr16
pusha
gs
add
push
stos
repz
jo
adc
aaa
stos
xor
push
pop
rclb
jbe
popa
loop
das
jge
push
insb
movsb
aas
bound
ret
push
jp
pusha
mov
jp
lcall
hlt
nop
add
or
jl
das
jno
mov
push
xbegin
pop
mov
test
enter
int
mov
cli
aaa
xor
cmp
int
jmp
cmc
dec
push
jmp
out
ret
lahf
in
or
dec
adc
int3
stos
adc
inc
dec
add
popf
push
jnp
dec
adc
testl
test
rcrl
pop
xchg
loope
xor
fldcw
xchg
mov
sub
jnp
aas
sbb
cmp
int
outsb
xchg
xchg
push
pop
push
push
out
rolb
imul
mov
mov
hlt
xchg
dec
ja
xor
aad
push
xor
push
or
movsb
push
das
xorb
jnp
popa
adc
xor
jbe
lret
adc
mov
ljmp
add
jne
push
mov
dec
les
into
mov
mov
arpl
scas
xor
pop
cmp
dec
scas
mov
fcomip
je
cwtl
inc
cmp
div
add
sti
push
les
add
sub
push
jl
and
mov
mov
mov
add
add
fdivr
stos
outsb
cmpsb
mov
jne
ret
and
es
icebp
mov
xchg
and
jmp
popf
mov
cltd
imul
xchg
inc
into
xchg
jle
and
cmpb
push
pop
test
rcl
mov
sbb
in
sbb
and
dec
pop
addr16
loop
dec
dec
xor
ficoml
mov
andl
pop
jo
and
push
insb
inc
outsb
inc
jno
shrl
inc
xor
fidivs
mov
nop
mov
dec
das
xlat
ds
pop
push
push
adcb
push
mov
jle
rcrl
mov
mov
jno
xchg
xor
add
jge
jl
or
fwait
adc
adc
addr16
jns
and
mov
loopne
adc
cmp
cmp
std
stos
imul
cmp
sbb
fxch
xchg
mov
repnz
lds
and
mov
pop
adc
fisubl
lock
mov
nop
jnp
xchg
xchg
fs
pavgw
xchg
mov
mov
sahf
add
dec
add
adc
sbb
jae
pop
dec
aaa
iret
je
sub
data16
popa
push
inc
cmp
mov
cld
es
jg
dec
das
mov
xchg
xorl
jno
push
movl
in
inc
stos
mov
inc
dec
fisubrl
jae
mov
mov
mov
frstor
pop
sahf
fidivl
xor
aad
faddl
dec
dec
je
jecxz
mov
inc
inc
insb
mov
sarl
pop
mov
repz
cmp
inc
mov
lahf
rcrl
push
cmc
imul
adc
ss
cli
int3
clc
jne
cmp
rcrl
outsb
ret
inc
inc
dec
movsl
xchg
push
inc
ficompl
dec
loop
in
dec
movsl
mov
lret
lahf
sbb
adc
add
push
sar
in
popf
shll
int3
jo
push
orb
lret
repnz
mov
jae
xchg
addr16
bound
pushf
sbbl
fistpll
lods
jo
mov
adc
mov
scas
mov
je
mul
insl
dec
pop
stc
xor
stos
insb
xor
xor
add
inc
imul
pop
insb
or
gs
cmp
arpl
xchg
pusha
jge
inc
xor
les
sbb
pop
out
sub
or
outsb
rclb
orb
aam
adc
scas
repz
mov
sbb
dec
push
xor
insl
pusha
mov
testl
nop
in
xchg
and
xchg
jg
xor
insl
lods
add
cwtl
pusha
popl
or
das
push
push
ret
adc
cmc
adc
mov
xchg
or
into
xor
sub
scas
test
push
push
ret
dec
sub
fiaddl
repz
ret
sbb
mov
je
pop
mov
xchg
jbe
pop
jg
outsb
mov
or
inc
and
mov
push
dec
aad
out
lods
mov
add
das
pop
out
inc
std
push
pop
outsb
dec
js
add
add
or
add
add
pop
mov
add
add
int
add
add
add
add
add
add
mov
add
add
fldl
add
add
add
add
add
add
xor
xor
stos
add
add
add
add
add
stos
stos
add
jg
jg
adc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
leave
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
lret
sbb
add
adc
add
or
add
add
add
cld
leave
add
hlt
leave
add
in
leave
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
lret
push
lret
pop
lret
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
lret
add
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
lret
add
pushf
lret
add
movsb
lret
add
lods
lret
add
mov
add
lret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
lret
add
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
int
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
bswap
add
cld
int
add
int
add
int
add
int
add
int
add
int
add
int
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
add
xor
add
cmp
add
push
into
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
enter
call
iret
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
fs
add
insb
iret
add
je
add
jl
add
test
add
mov
add
xchg
iret
add
cmpsl
iret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
ror
add
iret
add
fmul
add
in
iret
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
