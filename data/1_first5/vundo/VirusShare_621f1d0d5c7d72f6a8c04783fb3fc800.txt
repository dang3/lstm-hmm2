jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
stc
add
rcrl
std
ret
pop
ret
pop
push
or
add
add
pop
push
add
add
add
add
jnp
and
mov
push
add
jno
pop
add
pop
add
lcall
add
add
nop
add
add
add
add
add
jae
filds
cmp
outsb
add
jo
pop
add
add
add
add
inc
add
add
pop
add
add
xchg
add
add
add
fldl
and
mov
add
add
add
push
add
push
add
rolb
das
add
ret
add
add
outsl
add
add
ret
add
out
add
inc
add
add
aas
add
add
add
add
inc
add
adc
addb
test
ret
add
leave
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
and
das
add
add
add
add
add
add
add
xchg
verr
inc
add
add
mov
inc
add
add
cmp
xchg
add
add
add
enter
inc
add
add
add
add
add
mov
add
add
add
add
add
lea
lret
add
add
and
add
add
add
incl
push
add
jno
push
add
pop
add
add
add
add
verw
add
xchg
add
add
add
add
inc
add
add
add
add
add
adc
add
add
adc
inc
add
add
add
add
mov
inc
add
das
add
add
add
add
add
add
add
xlat
add
add
add
add
add
add
inc
add
and
mov
add
add
adc
or
and
push
add
add
push
add
pop
add
lcall
add
add
add
add
add
add
add
das
add
add
add
add
add
inc
add
cmp
push
add
add
add
add
add
push
add
add
addl
mov
add
add
add
pop
add
add
add
add
add
sbb
sub
lock
add
add
leave
add
add
add
xchg
das
add
leave
add
inc
add
add
add
add
add
add
arpl
filds
das
add
leave
add
add
add
das
add
add
mov
xchg
add
add
and
arpl
test
das
add
add
add
jno
ja
enter
inc
add
add
add
add
nop
add
jno
push
add
sub
cwtl
add
add
cmp
das
add
add
faddl
aas
add
inc
add
add
jnp
pop
add
add
add
sahf
add
add
sbb
test
inc
add
icebp
add
pop
add
add
jno
leave
add
add
inc
add
inc
add
add
add
add
inc
add
add
push
add
xor
sub
add
add
insl
add
add
add
add
add
add
add
add
mov
mov
lds
push
mov
cmc
adcl
neg
sbb
iret
test
sub
mov
push
hlt
push
pop
xchg
add
outsb
sbb
adc
out
mov
negb
jne
pop
jns
das
xchg
xchg
sarb
in
mov
mov
das
sub
aad
inc
inc
inc
and
and
push
mov
add
stc
lods
out
mov
ja
movsb
sub
sbb
and
leave
call
rcr
jmp
sbb
add
fucomi
hlt
ret
inc
in
push
pop
fwait
ret
inc
fistps
stc
cld
pop
icebp
or
ror
pop
mov
xchg
out
jmp
leave
cmp
jle
rcr
lock
rorb
pop
jbe
push
cmp
lods
psubsb
mov
sbb
sbb
aas
xor
shlb
cmp
div
and
inc
shll
mov
test
pop
or
or
rcrb
sub
out
scas
aaa
popa
imul
test
mov
popa
das
movsl
shlb
fwait
add
pop
loopne
movb
mov
mov
and
xchg
or
inc
daa
ret
fdivrl
push
movsl
xchg
cli
cmp
jne
nop
ror
push
dec
lcall
imul
jge
xchg
lods
add
in
ljmp
inc
pop
ret
add
pop
fiadds
adc
add
inc
lret
xor
fucom
dec
sbb
sbb
and
fistps
jecxz
insb
jns
shlb
pusha
addr16
repz
pusha
jo
mov
push
jp
and
push
xor
hlt
sahf
and
pop
cwtl
imul
enter
clc
sahf
sub
mov
repz
push
lret
dec
sub
mov
jb
cmp
pop
aam
subb
cltd
enter
adc
and
test
xchg
data16
stos
je
mov
xchg
push
inc
mov
aaa
jo
loope
xchg
inc
cmp
aas
inc
dec
rcrl
xor
pop
push
push
pushf
arpl
hlt
inc
addr16
pop
mov
mov
push
mov
pusha
mov
xor
lods
mov
cmc
nop
gs
and
add
mov
xchg
inc
movsb
mov
or
into
and
lahf
cmp
push
loop
mov
dec
cmc
stos
cmp
dec
xchg
and
lock
fmull
or
xorl
mov
push
arpl
mov
push
jne
addr16
imul
sbb
dec
movsb
ja
js
les
sbb
push
dec
xchg
dec
mov
add
add
add
add
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
andb
mov
adc
cli
call
and
xor
inc
pop
push
dec
pusha
js
push
mov
fcom
inc
loopne
lock
add
adc
and
xor
xorb
dec
pusha
cmp
orb
mov
in
hlt
loopne
lock
xor
xor
and
cwtl
hlt
out
int
std
or
pop
inc
jmp
or
popa
sbb
mov
cli
icebp
push
xor
sbb
aas
fnop
xor
mov
xchg
pop
fists
cmp
jns
in
cltd
cwtl
lea
mov
arpl
xchg
inc
lea
mov
movsl
adc
dec
add
pop
nop
cwtl
lret
adc
fadd
mov
out
pop
fimuls
adc
jg
jo
inc
jmp
sub
arpl
mov
call
decl
adc
scas
dec
xor
xchg
jge
outsl
xor
add
lock
sbb
pusha
ffreep
sbb
adc
mov
js
in
dec
cwtl
nop
js
cmp
mov
loopne
lock
and
xor
je
mov
js
push
ror
mov
sti
flds
test
jne
and
inc
aaa
push
cmp
cmp
or
leave
vpaddusb
cwtl
xchg
mov
pop
and
dec
inc
or
add
sbb
iret
iret
call
ror
loopne
lock
and
xor
inc
pop
push
dec
pusha
js
push
mov
fcom
enter
call
and
xor
inc
pop
push
dec
pusha
js
push
cmp
inc
mov
xor
mov
mov
lock
in
dec
daa
xor
fiaddl
sbb
xor
sarb
push
mulb
adcl
add
mov
add
adc
std
pop
lahf
fsubs
test
lods
cmp
ss
imul
mov
pop
icebp
shlb
and
and
outsb
pop
ret
pop
imul
lea
fnsave
push
fs
lods
jo
pushf
and
mov
mov
popf
arpl
cmp
push
cmovs
push
aam
in
jl
jns
jge
xchg
or
lock
and
dec
inc
cmpsb
call
mov
subb
xor
mov
sti
test
jnp
inc
popa
sub
xchg
fistps
cmp
cmp
xchg
mov
scas
and
xor
or
pop
lcall
inc
push
leave
das
cld
in
test
inc
push
lahf
cmc
xchg
std
fistps
adc
rol
xor
xor
sub
lret
movsl
pop
sub
decl
sbb
mov
loopne
rcll
movl
ja
adc
cs
ds
push
movsl
repnz
jp
loopne
imul
jne
push
push
imul
ret
data16
cmp
or
sahf
sub
mov
add
popf
cmpb
ja
adc
ret
and
and
cmp
sbbb
and
out
sarb
pop
dec
lods
hlt
jmp
sub
jecxz
lahf
jl
popf
mov
xchg
fcomps
testb
inc
mov
cmp
mov
jmp
int
xor
lret
neg
jnp
inc
add
inc
mov
lret
pop
ficomps
mov
lret
mov
pop
xorl
xchg
mov
scas
pop
add
mov
in
and
push
xchg
mov
and
jecxz
adc
inc
pop
mov
xor
cltd
int
mov
cltd
data16
int3
fadd
leave
jmp
mov
add
rcl
sub
mov
jbe
xchg
lods
fdivrs
xchg
push
testb
mov
dec
lods
pop
lock
leave
js
std
lahf
aas
stc
sbb
inc
insb
subl
and
adc
pushf
mov
pop
sahf
stos
dec
out
jg
hlt
test
mov
lock
jns
pusha
out
daa
scas
andb
outsb
insb
fs
pop
stc
ficomps
jne
mov
mov
data16
sub
rcrl
push
ja
movsb
repz
std
push
loopne
int
mov
add
nop
cmp
negl
cmp
outsl
test
ss
inc
ljmp
jp
add
mov
clc
mov
in
std
jmp
std
mov
mov
dec
mov
jle
push
lret
push
jns
hlt
push
enter
inc
cmp
xor
ret
cs
daa
push
adc
sbb
fs
pop
cs
xchg
pop
jns
inc
lcall
imul
mov
adc
jle
pop
mov
movsl
mov
rcrb
ret
cmc
bound
inc
pop
outsb
gs
push
cltd
or
negb
in
ljmp
cs
popa
pop
fldcw
pop
pop
int3
xor
stos
mov
dec
loopne
dec
or
jp
cs
xchg
push
mov
addr16
push
orl
jnp
ficoms
add
mov
out
js
js
pop
inc
or
xor
out
loopne
jno
mov
inc
mov
and
icebp
ds
stos
sahf
inc
and
leave
lret
push
js
in
sbb
lret
je
adc
das
fwait
mov
hlt
xor
dec
pop
and
xchg
pushf
jbe
imulb
pop
push
xchg
push
ds
movsl
shr
mov
sub
cmpsl
jo
out
aad
daa
push
xchg
dec
int
jle
mov
jo
dec
mov
mov
clc
fstpt
push
js
and
cmp
sub
pop
call
push
adc
int
testl
xchg
adc
sti
outsb
pop
add
movsb
push
and
into
push
fcoml
jp
into
cmp
imul
enter
fdivr
scas
stos
inc
lds
mov
cmc
cmpsb
mov
rcl
out
inc
or
dec
mov
add
pop
scas
int
fcmovbe
or
jle
or
pop
inc
xchg
sahf
mov
adc
popf
jmp
adc
insl
clc
sti
jbe
dec
call
jle
dec
les
fistl
imul
ja
outsb
repnz
cltd
jmp
or
jmp
pop
popf
repz
and
sub
cmp
pop
lock
sbb
push
mov
xor
rorl
inc
xchg
lds
xor
jmp
aad
icebp
add
out
scas
cmpsl
adc
or
cmp
push
cmp
inc
cmp
mov
and
sub
and
scas
cmp
mull
sub
sbb
inc
cmpsl
dec
pop
mov
mov
nop
andb
pusha
cltd
leave
cwtl
xor
sbb
out
loopne
mov
mov
pusha
adc
sub
aam
cmpsl
pop
repnz
dec
push
in
xchg
popa
sub
cli
test
mov
ret
mul
insb
fcmovu
hlt
inc
jp
pop
das
pop
in
lods
insl
popf
cmpsb
mov
scas
mov
xchg
add
negl
push
pop
int
cmc
mov
cmp
adc
popf
ret
lahf
and
inc
mov
mov
test
repnz
sub
imul
cmp
or
sub
sub
gs
nop
jg
mov
aad
adc
aas
int3
sub
mov
push
outsl
lock
mov
pushf
aaa
lea
ret
push
dec
cmp
adc
add
lock
and
sbb
sub
push
in
jecxz
jne
es
rorb
lret
inc
test
das
xor
and
loop
cmp
out
shlb
xlat
enter
rcl
out
ss
adc
shlb
stc
in
loope
and
fsubrs
jo
mov
pop
pop
ret
mov
mov
outsb
mov
inc
out
ss
das
jno
dec
pushf
lea
sbb
push
es
xchg
fsubrs
leave
sub
outsl
mov
add
rorl
jmp
lret
int
jbe
fldt
xchg
out
jl
sbb
shlb
jl
adc
repnz
es
das
pushf
or
dec
mov
das
stos
lcall
aam
repnz
leave
inc
outsb
sub
inc
mov
add
jbe
xor
cmpsl
xor
aas
repnz
mov
outsl
popf
test
test
cmp
jle
into
add
jnp
lock
jle
inc
cmp
cli
scas
repz
in
loopne
add
outsl
ss
push
call
or
xor
jge
aaa
sbb
call
dec
fwait
shl
jnp
xchg
in
fs
dec
pop
icebp
scas
hlt
ljmp
cld
and
inc
mov
push
inc
dec
or
mov
mov
fldenv
insb
pop
push
fs
xor
popf
and
mulb
push
fisubrs
aaa
cs
add
xchg
or
call
mov
mov
and
xchg
outsl
jno
scas
add
outsb
cld
int
fs
mov
jne
pop
das
shrl
stos
icebp
and
repnz
sub
or
inc
mov
mov
aad
cmpsl
lret
xor
test
loop
cld
pop
call
mov
dec
rorl
in
jne
fcompp
sti
in
push
in
leave
push
jno
dec
shrl
hlt
shll
das
pop
adc
shll
sbb
lds
push
pusha
outsl
cli
outsl
and
call
sahf
dec
sbb
mov
cs
mov
inc
sub
daa
jne
push
call
mov
push
je
ljmp
out
incb
cmpsb
pop
inc
dec
aaa
rcll
and
loop
inc
test
cmc
sbb
push
pusha
push
loop
push
xchg
sub
stos
enter
push
jp
push
xor
sbb
mov
out
cmc
xor
pop
ficompl
ss
mov
fwait
sbb
sub
fs
ljmp
jno
mov
push
dec
xchg
inc
mov
pop
xchg
lea
popa
repz
sbb
xor
jne
das
mov
and
mov
pop
shrl
xor
sbb
out
cld
mov
test
adc
jecxz
inc
loop
add
dec
stc
push
jo
or
scas
mov
inc
sbb
lods
jo
jg
in
cmc
jge
push
mov
cld
fwait
ljmp
mov
jg
fwait
leave
inc
std
sbb
mov
sbb
cmp
lcall
test
add
test
fsubs
lret
movl
and
bound
lret
xor
push
fcoms
stc
bound
push
xchg
aam
push
push
inc
mov
ret
rorb
xor
andb
fmull
andb
adc
cli
pop
jo
mov
ret
imul
in
sub
adc
mov
popa
inc
mov
push
add
int3
cmp
add
sarb
cmc
or
mov
mov
dec
cmp
pop
sarb
cli
jp
push
ret
shlb
dec
in
dec
aad
lea
jmp
push
cmp
imul
dec
loop
add
adc
mov
fisubrs
push
pop
jae
mov
and
mov
add
mov
dec
pop
pushw
mov
jnp
jae
mov
mov
cwtl
aad
lods
imul
push
dec
pop
js
outsb
adc
mov
imul
shrb
ja
jmp
mov
leave
insl
and
push
add
jb
bound
mov
xchg
stos
inc
das
and
imul
or
inc
ret
cld
in
push
jge
scas
outsl
sti
xor
sbb
jmp
xor
push
pop
in
adc
xchg
push
mov
xchg
out
bnd
andl
mov
jge
mov
mov
rcl
xchg
fldcw
lcall
mov
pop
cwtl
loop,pt
jne
pop
js
mov
int
mov
pop
and
fucomp
inc
mov
testl
mov
cmpsl
mov
jbe
push
sahf
pop
add
dec
inc
test
xchg
jg
pop
lahf
repz
jecxz
arpl
int
stc
cmp
enter
push
sbb
dec
xchg
adc
mov
cmp
imul
pop
push
push
adcw
xchg
add
jno
fucom
lret
mov
mov
mov
mov
sbb
les
scas
mov
imul
ds
jge
xchg
rol
dec
add
jb
pusha
arpl
sarl
dec
dec
out
xchg
cmp
jns
pop
jmp
aaa
stos
and
into
inc
add
inc
ja
mov
mov
arpl
pushf
scas
xor
ror
add
or
cs
xchg
cmpsl
and
icebp
pop
pop
xchg
ja
test
popa
mov
xchg
inc
mulb
aam
repnz
fcmovu
int3
xchg
imul
jae
xchg
lcall
lahf
dec
stos
mov
cmp
jae
pop
loop
sbb
ret
and
call
or
sbb
hlt
push
test
scas
jno
mov
pop
sub
ret
mov
pop
push
cwtl
add
je
push
fwait
std
dec
xchg
test
shlb
repz
pop
cltd
push
jbe
mov
nop
pop
jmp
imul
popa
push
out
xchg
fs
call
test
push
out
sti
arpl
in
int
mov
sbb
aas
or
pop
rorb
xor
push
hlt
and
in
das
loope
stos
or
xchg
shll
sbb
lret
repz
pop
imul
mov
rcll
lds
pop
in
pop
pop
cmp
fs
out
xor
aas
out
ss
pop
mov
xchg
repnz
push
in
pusha
xchg
cmpb
xor
xor
push
or
lds
push
stos
leave
push
movsb
imul
cwtl
rclb
push
or
popa
loop
jmp
and
adc
add
xchg
mov
popa
fwait
and
mov
xchg
or
or
subl
leave
xchg
lcall
ljmp
inc
cs
test
push
mov
out
mov
ljmp
sar
aas
cmp
fsubs
leave
sub
adc
test
push
sub
push
test
or
outsl
int
insl
pop
mov
lea
mov
cmp
pop
sarb
in
cltd
out
push
repnz
gs
push
hlt
or
imul
ljmp
xor
and
push
call
ljmp
int
inc
clc
gs
dec
loope
sahf
jg
lea
lret
xor
shl
pusha
xchg
shr
mov
js
paddb
cmp
repnz
icebp
in
mov
and
in
in
fwait
jae
aas
shlb
ret
adcl
fnstenv
mov
xor
dec
pop
sbb
testb
rcll
cmp
call
or
cmpsb
mov
testb
stc
sbb
xchg
jnp
aam
out
add
int
push
cltd
jp
sbb
and
push
leave
and
inc
sarl
adc
je
loop
or
xchg
push
ss
adc
lret
inc
jno
mov
aad
sub
jmp
rclb
movsl
jae
mov
mov
test
jge
push
out
sbb
in
jno
ret
popf
test
call
ror
test
lcall
lret
mov
ljmp
xchg
les
xchg
adc
mov
jmp
pop
push
pop
das
push
fcoml
jo
xchg
nop
or
ret
fsubrp
cs
adc
mov
pop
adc
and
insl
lods
dec
popa
sub
mov
and
xchg
arpl
dec
xchg
les
fimuls
cs
popa
or
dec
sbb
xchg
push
dec
sub
enter
ret
hlt
test
inc
std
iret
or
pop
mov
test
dec
and
dec
dec
outsb
and
mov
mov
andl
shlb
adc
mov
pop
das
mov
leave
mov
jnp
jmp
push
dec
in
push
push
pop
or
mov
pop
push
gs
adc
sub
xor
mov
cmpsb
sbb
mov
pop
test
add
and
dec
inc
ja
pushw
jge
divb
and
add
lds
or
sbb
gs
mov
pop
xor
cmp
sub
clc
movsl
iret
nop
jl
jnp,pt
cmpsl
mov
xor
xchg
pop
insl
jg
js
jb
out
shl
lahf
mov
jno
hlt
and
sub
mov
int
dec
and
in
stc
jp
pushf
cmc
jnp
jno
xchg
sbb
jp
dec
sub
mov
in
or
stos
and
add
mov
scas
lcall
jns
sub
jg
daa
add
mov
push
inc
cmp
sub
and
cmp
repnz
sbb
push
movsl
gs
out
pop
jno
std
test
in
out
lock
push
js
or
jb
push
les
sbb
push
test
repz
dec
cwtl
adc
loopne
dec
jle
cmp
rorl
test
lret
movsb
add
jo
stc
cld
jmp
out
in
repnz
mov
jge
sahf
fistps
sbb
call
cmp
int3
sub
pop
negl
sti
pop
adcl
xor
inc
xchg
mov
in
hlt
xor
xor
test
dec
mov
and
out
ss
sub
add
adc
pop
and
jmp
jge
test
dec
js
repz
jle
inc
dec
movsb
push
aad
aas
pop
xlat
jne
xchg
lods
jmp
lcall
test
jae
jmp
ret
es
in
sbb
sub
push
jmp
nop
pop
add
xchg
jg
sar
xor
xchg
mov
in
inc
jmp
in
inc
inc
hlt
dec
sbb
pop
jae
sbb
or
xchg
daa
adc
inc
rcrl
mov
jno,pn
nop
ret
lret
addr16
inc
push
mov
jmp
dec
add
insb
add
mov
add
xchg
lock
jl
push
fidivrl
scas
pop
mov
stos
xchg
mov
jno
mov
lcall
pop
push
fstp
movsb
pmullw
dec
xchg
aam
push
cmp
jbe
data16
or
jg
jns
pusha
pop
mov
in
inc
push
orl
pop
sbb
les
lret
lretw
sbb
jg
lea
mov
jb
stos
jbe
pop
and
fdivrl
mov
addl
dec
push
mov
mov
adc
dec
fcom
nop
mov
out
xor
mov
sti
inc
adcb
add
fbld
xchg
lods
jnp
inc
bound
mov
dec
sar
and
cwtl
hlt
and
lret
dec
pop
add
repnz
nop
lahf
xchg
push
in
xor
decb
and
xor
rcll
lret
mov
push
mov
sub
sub
or
jo
push
sbb
mov
pushf
sbb
lods
aam
push
push
stc
dec
pop
pop
cmp
mov
sbb
dec
mov
inc
mov
sub
dec
mov
push
xchg
xchg
shll
xor
adc
lock
and
pop
push
mov
addr16
je
mov
fs
mov
mov
xchg
mov
or
fisttps
jg
add
add
dec
int3
mov
push
pop
xor
add
mov
test
cli
out
scas
loope
mov
xchg
sbb
test
or
pop
dec
iret
jns
cmp
jp
hlt
das
dec
loop
sbb
jle
sbbb
mov
std
mov
daa
ss
inc
cwtl
jno
add
sbb
ficompl
es
stos
pop
cs
addl
ret
je
shr
xor
dec
addr16
mov
jae
and
sarl
adc
sub
roll
cmpb
cmpb
or
aam
and
or
sub
push
push
lcall
icebp
repz
and
clc
in
or
mov
ret
fcomp
ret
in
das
fadds
mov
sbb
fucomi
inc
jo
call
jne
fdiv
and
fcmovbe
mov
push
pop
or
lahf
or
loop
movsl
outsl
mov
decl
divb
mov
sahf
roll
adc
jne
mov
add
add
push
aaa
in
repz
rcll
lods
mov
loop
gs
ljmp
rcrb
rorl
in
sbb
mov
push
pop
add
outsb
scas
mov
push
cmp
push
xor
testb
stc
sbb
insl
sub
jp
push
dec
lds
jne
cli
pop
negl
sub
iret
add
jo
mov
addr16
in
cmpsl
outsl
jmp
jns
or
jl
ret
das
sub
fwait
jp
cmpsl
sbb
in
sbb
into
mov
test
or
dec
dec
sub
scas
repnz
cld
lods
push
jb
pop
lahf
popa
sbb
jno
or
xchg
cmp
or
imul
pop
cwtl
mov
mov
add
insb
inc
in
add
jne
xchg
mov
and
sahf
repz
jmp
ljmp
mov
iret
ret
shlb
sbb
cld
xlat
push
stos
jb
mov
xor
sub
xor
xchg
dec
lods
ror
mov
sub
mov
loop
cmpsl
lods
mov
add
je
cmp
nop
daa
adc
addl
mov
mov
add
rolb
xorl
mov
dec
and
xchg
cmp
bound
out
jle
adc
or
mov
cmpsl
pop
cmp
dec
fmuls
jecxz
add
dec
push
ret
push
fisttps
invd
pop
inc
add
setb
add
jg
sub
lcall
sub
cmp
pop
xchg
out
jp
mov
push
gs
fs
lret
loope
pop
cmp
test
outsb
jl
mov
je
shlb
or
push
in
pushf
fsubl
xchg
je
and
xchg
or
mov
daa
xchg
je
les
mov
ljmp
cmp
mov
stos
inc
addb
mov
push
into
cltd
adc
iret
add
outsb
mov
jb
push
xchg
mov
fcom
enter
call
and
xor
inc
pop
push
dec
pusha
js
push
mov
fcom
enter
call
and
xor
inc
pop
push
dec
pusha
js
push
and
mov
inc
fcom
pusha
loopne
jo
add
adc
and
xor
inc
pop
push
dec
pusha
pop
jo
sbbb
test
loopne
lock
mov
xor
shlb
mov
xchg
xchg
aam
les
jb
bound
xor
insb
jge
and
inc
into
je
fs
xchg
push
andb
mov
hlt
jb
bound
movsb
and
ret
push
adc
xor
xor
and
int
fldl
push
jnp
or
dec
xor
sub
imul
in
mov
hlt
push
xchg
jmp
jne
arpl
rcrb
dec
std
idivb
sbb
add
stc
push
add
test
xor
insl
sub
pop
adc
xor
fucomi
sub
mov
add
inc
fs
add
add
addr16
clc
xorb
mov
cmp
xor
fstp
addb
adc
jge
cmp
test
mov
imul
stc
bound
pop
add
mov
loop
cli
add
lret
mov
pop
cmp
and
mov
sbb
inc
or
or
xor
push
rcll
dec
and
sbb
in
adcl
add
pop
fisubrl
sti
or
sbb
cs
mov
jae
arpl
inc
loop
stc
pop
movsb
dec
push
mov
add
inc
mov
iret
mov
add
mov
testl
xchg
in
inc
fiadds
mov
test
cwtl
adc
mov
movsb
and
ret
fs
xchg
add
xor
and
aam
les
jb
bound
movsb
and
ret
fs
xchg
add
xor
and
aam
jmp
dec
push
xchg
jno
das
lock
popf
push
adc
mov
and
lret
mov
daa
jo
stc
dec
push
std
les
sub
xchg
sub
xor
add
sub
sub
push
sbb
movsl
xchg
insb
jne
out
fistps
lock
dec
push
lods
adc
dec
xchg
xor
inc
mov
pop
cmp
arpl
out
and
xor
repnz
insb
sti
out
and
call
movsb
nop
lds
xor
scas
xchg
ffreep
popf
xchg
sub
test
popf
stos
popa
and
cld
sarb
mov
dec
adc
cmpsb
cmp
pop
xor
pop
inc
mov
adc
movsl
nop
clc
fildl
rcr
dec
sub
or
addr16
sbb
inc
xchg
add
mov
inc
lds
repnz
jge
xchg
push
sub
loope
or
cli
test
cmp
push
mov
mov
stos
mov
ds
sbb
or
movsb
out
sub
sbb
std
fnsave
das
test
mov
mov
out
xor
and
in
jge
shrl
in
mov
dec
push
sbb
sub
mov
xchg
dec
push
jle
cmp
loop
inc
and
push
es
pop
mov
pop
jg
sbb
xlat
mov
out
sub
arpl
fs
mov
mov
outsb
cld
mov
dec
push
rol
mov
fiaddl
adc
dec
int
sbb
into
adc
xor
daa
mov
pop
xchg
cli
mov
xor
clc
jb
arpl
sbb
mov
xchg
dec
imull
arpl
clc
mov
xlat
in
fwait
or
lea
es
sbb
jl
fnstenv
in
xchg
aas
repz
or
jmp
push
cmp
fldenv
cmp
jp
or
xor
ds
icebp
mov
arpl
or
popf
pop
popa
clc
pop
adc
out
adc
pop
pop
lret
and
pop
popf
dec
mov
call
testl
and
adc
xchg
jecxz
enter
add
xor
push
aaa
xchg
test
lods
sbbl
push
scas
loope
cmpsl
ret
pushf
pop
or
or
addr16
mov
mov
les
testl
cmpsb
and
in
enter
fs
aas
call
pop
pushf
inc
mov
ss
mov
nopl
cmp
leave
xchg
ss
xor
cmpl
iret
dec
mull
xchg
inc
cmp
js
pop
mov
fdivr
stos
test
add
jo
jecxz
ret
or
ss
sar
mov
jnp
out
mov
or
iret
enter
lret
pop
aam
popf
or
pushf
movsb
aam
dec
adc
aas
imul
dec
xor
mov
test
lock
pusha
jmp
outsb
pop
jb
xchg
cmpsl
inc
cltd
rol
push
arpl
fnsetpm(287
out
js
pop
dec
push
push
mov
pop
push
lahf
xor
mov
int3
cltd
mov
sti
incl
mov
cli
gs
shl
out
jmp
negb
inc
xchg
orb
mov
in
and
xchg
sbb
fisubrl
xchg
shll
pop
ret
mov
inc
mov
push
inc
fsubs
loopne
inc
mov
mov
dec
and
pop
test
enter
insl
ljmp
inc
cmp
repz
in
loopne
int
std
cmp
pop
adc
popa
subl
dec
out
fs
mov
fdivrs
aas
sub
pop
adc
dec
jae
jge
push
adc
roll
jle
dec
jb
daa
fcom
mov
loope
mov
jo
sub
cmc
and
or
push
jmp
in
or
mov
pop
xchg
xchg
sbb
jmp
or
add
inc
xchg
dec
cmp
jns
jnp
ret
popa
push
xchg
jae
sub
div
cmpsb
lock
sub
jbe
inc
mov
rolb
pop
icebp
xor
insl
cwtl
pop
and
pop
ja
add
pop
mov
test
ss
inc
sahf
jno
mull
enter
pop
insl
das
mov
call
jbe
pop
rol
lods
sbb
push
mov
cld
ret
in
push
inc
mov
push
loope
cmpsb
sbb
and
pop
mov
inc
ja
mov
adc
in
icebp
pop
pusha
and
lret
lcall
repz
dec
dec
pusha
pop
sahf
into
add
sbb
push
mov
adc
cmp
add
enter
loopne
mov
pusha
mov
ds
rol
dec
xor
push
jnp
out
cltd
loopne
pop
mov
test
xor
xor
stc
scas
test
adc
shlb
lock
pop
aad
pop
movsb
mov
insb
in
cmp
cwtl
push
int3
cmp
leave
cmp
or
pop
push
cmpsl
das
sbb
enter
scas
dec
rcll
aas
xlat
popa
in
pop
cmp
cli
imulb
inc
push
aad
scas
jb
sub
iret
xchg
cmp
scas
xor
movsb
inc
push
pop
enter
test
into
cli
repz
fs
pop
cmc
xchg
add
ror
pop
outsl
imul
arpl
inc
inc
sahf
mov
adc
jno
mov
jg
lods
cmp
ds
negb
sahf
push
fs
push
stos
cmc
cmpsl
sub
fs
addl
rorb
pop
pop
ret
in
pop
jle
and
push
add
jge
in
jbe
xchg
mov
push
inc
mov
push
pop
add
and
hlt
movsl
cmpsb
mov
push
mov
or
pop
mov
and
and
popa
jp
movsl
add
add
add
xchg
adc
fsubs
out
je
es
gs
movsl
pop
lds
movsb
lock
jnp
cmp
fwait
jmp
jle
movsb
push
idivl
popf
cmp
xchg
lret
add
pop
daa
into
fsub
or
sbb
loop
and
gs
mov
cmp
out
lret
movsb
dec
or
jmp
out
fistpll
pop
popa
int
aaa
daa
imul
test
push
aad
hlt
and
outsb
xchg
daa
xchg
outsl
mov
xchg
outsb
xchg
ficoml
popa
pop
dec
jg
clc
insl
dec
xor
dec
push
sbb
and
mov
icebp
call
cmpsb
sarl
or
xor
popa
xor
xchg
out
jecxz
addr16
xchg
push
shll
or
outsl
push
xchg
inc
sbb
icebp
mov
jo,pt
mov
sub
repz
mov
inc
sub
mov
shlb
sbb
jmp
loope
xchg
mov
push
pop
scas
mov
inc
mov
pop
loop
iret
into
cmp
fadd
mov
cld
movsb
cmp
add
and
and
xor
pop
pushl
mov
cmc
mulb
jnp
cmp
pop
faddl
into
jns
xor
jae
dec
mov
shl
ret
test
jno
adc
arpl
negb
cwtl
jp
std
icebp
daa
movsb
loope
out
push
cs
lock
mov
aam
jle
mov
out
jbe
rcrl
sbb
std
cmc
inc
fcmovu
mov
pop
repnz
mov
mov
add
ljmp
or
testb
in
je
sub
mov
jnp
ficompl
push
test
gs
pop
pop
jmp
sbb
ljmp
shlb
jnp
pop
leave
pop
pop
mov
dec
lret
loopne
arpl
cmc
sbb
js
cmp
adc
push
in
mov
nop
lea
pusha
cli
pop
sub
mov
xchg
lret
int3
or
divb
inc
sub
repnz
jo
mov
mov
loop
imul
dec
out
test
ljmp
and
scas
rcrl
push
stc
and
mov
enter
idivb
loope
mov
xor
jo
lret
scas
push
in
outsb
jl
in
cmpl
out
movsl
movsl
sub
mov
bnd
mov
sbb
sarl
jae
fiaddl
xchg
push
mov
inc
out
jns
add
cmp
hlt
mov
mov
pop
jo
fdivl
fildll
int
sbb
roll
cmp
add
push
add
rcr
sbb
rclb
xchg
jp
xor
sub
xorb
sahf
mov
xchg
sti
ljmp
fwait
pushf
mov
das
dec
sub
stos
shlb
pop
lea
sub
add
out
inc
out
jb
sbb
mov
shrb
lret
add
aad
fmul
jno
jo
jo
push
sbb
lods
jmp
mov
cmp
adc
aaa
sub
ret
mov
je
mov
neg
and
ds
inc
xchg
push
loopne
xchg
pushf
loopne
dec
mov
cmpsb
sbb
mov
icebp
fcoms
loope
mov
lods
dec
sbb
enter
fcmovnu
jmp
fimuls
lock
outsl
loop
or
shlb
fsubr
mov
fwait
or
mov
loop
clc
dec
jge
sub
mov
and
or
les
pop
sbb
xor
insl
jmp
sbb
mov
fwait
xor
imul
xchg
stc
repnz
xchg
ja
bound
sub
dec
xchg
rclb
das
jecxz
jmp
xor
xchg
aad
mov
rolb
inc
rorl
fmul
ja
inc
push
or
sub
jp
lea
in
movb
dec
stos
in
push
js
jg
mov
rol
jle
adc
nop
mov
ret
andl
pop
test
pushf
dec
enter
xchg
inc
xchg
sub
inc
outsb
popf
ret
stos
cmpsl
stos
out
test
mov
lock
add
jno
ds
adc
xlat
out
xchg
clc
sub
out
or
scas
xchg
mov
adc
mov
or
mov
int
insb
cmp
push
pop
aad
popf
or
adc
pop
and
mov
jmp
ret
cmp
and
mov
in
push
sub
icebp
insl
sub
mov
dec
jae
pop
idivl
push
pop
and
jbe
in
push
out
js
gs
push
lock
int3
dec
mov
popa
inc
pop
dec
dec
dec
cld
sbb
push
addr16
int
mov
mulb
stos
mov
mov
inc
fisubs
jno
and
inc
stos
lock
sbb
loop
mov
nop
pop
mov
icebp
clc
cwtl
in
and
and
cmp
pop
imul
aad
nop
and
push
leave
xchg
mov
fwait
or
xchg
bound
or
jl
sbb
sub
add
mov
fs
nop
jno
outsb
push
add
adc
ret
mov
in
pushf
imul
pop
xchg
add
imul
jmp
addr16
sahf
cld
or
gs
jmp
pop
test
pop
inc
jmp
es
aad
popa
xchg
cmc
je
push
inc
xchg
xor
in
mov
movsl
dec
or
sub
aaa
andb
sbb
add
lahf
mov
pop
fcoms
lea
inc
push
or
out
cmc
mov
pop
fs
in
jle
subl
mov
xchg
cli
sbb
test
lods
adc
scas
je
adc
mov
cmp
fistps
lret
push
cld
cmp
sbb
pop
xor
popf
adcl
cmp
mov
mov
dec
mov
or
mov
inc
stos
cmp
pop
push
and
test
add
enter
je
into
test
lock
dec
xor
and
and
jl
test
inc
pop
cs
push
cmpsb
mov
dec
and
in
daa
cltd
fimull
or
movsb
test
lret
fnsave
popf
jmp
pusha
sbb
or
jno
sub
jle
push
mov
mov
lret
mov
fsubr
fs
repz
inc
adc
adc
jge
lret
lods
aad
ss
je
xchg
adc
or
and
mov
pop
pop
mov
adc
mov
adc
and
hlt
sarb
push
fcomps
in
mov
inc
cli
jo
cli
popa
mov
out
int
or
mov
xchg
sahf
ljmp
cwtl
mov
fwait
cmp
inc
push
or
push
das
cs
add
pop
adc
iret
cltd
xchg
stos
rcr
dec
cmp
fsub
stos
int
mov
adc
sub
lods
rcll
mov
out
dec
and
add
xlat
sbb
add
aaa
push
and
lret
adc
es
add
inc
rolb
pop
mov
dec
and
push
call
push
jnp
and
mov
je
scas
dec
arpl
test
roll
push
lret
es
xorl
pop
ja
sbb
sbb
mov
subb
in
jmp
rorb
xor
sbb
xchg
and
daa
cld
in
inc
jne
push
sbb
sub
lods
jo
nop
pop
or
imul
aam
mov
add
jge
hlt
or
outsb
mov
pushl
push
into
add
aad
fstpt
insl
fdivrs
out
mov
push
mov
xchg
push
lock
arpl
adc
out
mov
or
dec
mov
xlat
jno
add
xlat
outsl
sub
ja
addr16
ljmp
xchg
lods
imul
ja
nop
enter
mov
xor
sbb
xchg
inc
cmp
mov
jne
pusha
cmpsl
jle
es
or
aad
popa
dec
rclb
adc
cmp
sub
lret
rclb
mov
jo
stc
and
xchg
xor
sub
sahf
adc
mov
push
or
loope
adc
in
nop
cmc
or
ljmp
mov
mov
insb
xor
inc
pusha
mov
ja
push
pop
cmpsl
clc
addr16
push
or
sub
xchg
or
clc
repz
jnp
and
jbe
or
xor
adc
shlb
add
outsl
movsb
push
dec
mov
jnp
in
mov
jge
add
xchg
xor
jp
cmp
push
dec
cwtl
mov
pop
dec
mov
loope
adc
jnp
pop
cmp
jmp
xor
jge
aaa
test
out
lcall
pop
cwtl
add
arpl
xor
sub
lods
mov
xchg
test
cwtl
roll
pop
aas
daa
add
cmp
sub
dec
fucomp
adc
data16
in
and
xchg
stos
cli
ffree
int3
loop
pop
lods
loope
cmp
xchg
mov
adc
mulb
sbb
iret
aad
cmp
xor
xchg
push
add
in
adc
pop
bound
pop
stos
add
fiadds
mov
mov
inc
sbb
and
mov
movsb
movsb
lret
mov
xchg
xchg
out
xchg
cmpsl
cltd
sub
xchg
imul
pusha
adc
mov
inc
inc
fiadds
and
inc
dec
mov
leave
mov
push
lods
and
mov
xor
xor
cmp
out
popf
xchg
adc
cmpsl
rorb
int3
xor
xor
enter
popa
sbb
push
repnz
fsubs
xor
ret
lds
cmpsl
and
imul
enter
sti
ss
sbbb
ja
jo
push
out
xor
adc
jmp
add
lock
out
adcl
loop
sbb
loopne
or
and
sbb
push
push
loopne
repz
int3
repnz
sub
or
mov
inc
shl
cmp
jge
ja
inc
outsb
mov
inc
jns
pop
ja
lods
addl
cld
mov
pop
fwait
lea
mov
cmp
sahf
jo
mov
or
in
outsl
stos
jg
popa
jno
insb
and
fistps
lods
inc
pop
sbb
cmp
xchg
int
scas
pop
ljmp
pop
xchg
test
scas
jmp
aad
lods
or
mov
and
push
bound
push
push
stos
add
mov
clc
icebp
add
and
das
dec
pusha
aam
mov
push
fwait
mov
movsl
mov
add
push
repnz
and
loopne
rolb
mov
movsb
mov
aam
jmp
leave
fsubrp
pop
add
les
and
xchg
fdivrp
shl
jmp
stos
jne
fidivs
aad
mov
sub
sub
addr16
sub
jnp
cmp
fisubs
xor
call
hlt
aad
xorl
das
out
in
fisubrs
scas
push
in
xchg
jle
push
mov
xor
push
push
out
inc
shlb
or
test
pushf
jp
jle
fisubrs
cmp
push
sbb
lret
jg
arpl
inc
out
fdiv
jmp
scas
fucomp
jno
icebp
dec
popf
xor
push
mov
popa
fwait
in
ja
cmp
lahf
push
mov
arpl
push
in
pop
push
das
fbstp
jae
adc
sub
insb
pushf
movsb
push
clc
sbbb
adc
test
sbb
ficomps
data16
dec
push
dec
in
jp
fsubl
sbb
inc
sub
push
jo
es
adc
cltd
mov
gs
aad
adc
pop
xchg
cld
daa
jg
or
xor
cs
mov
les
pop
into
xor
enter
shrb
loope
out
ja
push
xor
pop
loope
or
cmp
pop
daa
push
clc
sahf
push
movsb
fs
jl
inc
mov
jne
mov
repnz
adc
lods
mov
imul
negl
push
mov
cmp
dec
arpl
or
mov
rcl
xchg
sahf
fcmovnb
xchg
and
dec
divb
xor
sbb
fwait
cmp
add
bound
push
cmp
and
int3
lahf
mov
sub
gs
dec
aam
cmp
mov
loop
and
int3
fmuls
xchg
inc
adc
inc
jmp
nop
das
cmpsb
fldenv
xor
mov
xor
hlt
adc
int
xchg
fldt
sub
jae
daa
sbb
xchg
jbe
jmp
fisubrl
mov
aad
and
repnz
add
adc
dec
jno
nop
jecxz
and
jge
dec
sar
faddl
mov
sub
inc
popa
addr16
cmp
and
push
inc
in
addr16
test
dec
movl
or
test
mov
pushl
insb
inc
cmp
add
loopne
aaa
in
cmp
popl
sub
jo
int
sbb
cwtl
int3
sahf
mov
add
mov
pop
fisttpll
xchg
in
data16
jae
pop
into
shll
pop
cltd
repnz
or
ret
mov
outsb
testl
inc
sub
or
or
fisubrs
sbb
push
adc
mov
cmpb
push
push
push
addb
push
xchg
js
cmpsl
jg
rorl
fldt
push
cld
mov
jne
fiaddl
inc
cmp
mov
inc
les
pop
sarl
adc
lret
or
in
push
lds
sub
inc
es
dec
lahf
lods
xchg
dec
add
xlat
test
jno
push
sbb
and
cmp
pop
hlt
xchg
into
add
xchg
add
test
js
xchg
outsl
or
nop
mov
mov
xchg
es
adc
rolb
jae
hlt
mov
iret
pop
xor
sahf
push
mov
dec
cmp
das
pop
mull
or
pop
in
cli
or
xor
adc
test
enter
jge
adc
lcall
or
mov
dec
inc
pop
addr16
or
xchg
inc
push
negl
arpl
xchg
popa
es
jae
push
add
jmp
daa
out
pop
xchg
and
inc
sti
lods
fwait
sbb
cmp
dec
or
flds
cmp
sub
push
mov
mov
fldl
and
jnp
testl
ds
out
negl
adc
xchg
xchg
push
es
mul
jl
sub
imul
xor
ss
mov
mov
inc
mov
imul
je
icebp
mov
movsb
inc
not
jl
mov
xchg
imul
fildll
scas
mov
jbe
mov
loope
xor
fisubrl
rolb
ja
pop
jb
mov
scas
sbb
imul
out
pop
les
loop
lods
push
pop
into
aaa
out
imul
inc
xchg
je
movsb
or
inc
popf
in
xchg
adc
push
rolb
repnz
xchg
add
xor
and
aam
les
jb
bound
movsb
and
ret
fs
xchg
add
xor
and
aam
les
jb
bound
movsb
and
ret
fs
xchg
add
mov
cmc
jb
bound
xor
stos
sarb
xchg
arpl
mov
dec
fistpl
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
pop
stos
dec
jp
push
adc
insl
lahf
dec
out
daa
cli
fldl2e
enter
ljmp
dec
stos
pop
pop
scas
dec
mov
sbb
or
cmp
sub
fisubrl
lret
push
ljmp
dec
stos
pop
pop
or
jp
push
sbb
or
fisubrl
jmp
insb
lcall
cmp
ljmp
adc
dec
mov
shl
in
cmc
pop
mov
jb
mov
adc
test
xchg
popa
sbb
or
xor
and
inc
ret
adc
and
vmovlps
xlat
and
add
pop
lock
fs
fildll
ljmp
cmpb
stos
cltd
pop
scas
insl
mov
jb
cmc
into
arpl
sub
stos
inc
ficomps
icebp
adc
repz
mov
and
js
inc
pushl
popa
in
sub
pop
and
or
popa
out
lret
imul
shll
mov
inc
sti
xchg
dec
xor
cmp
popf
jge
outsb
or
xorb
cmp
test
cltd
and
jp
push
sbb
or
cmp
sub
lret
or
and
push
stos
insb
aas
scas
sub
cmp
sub
jg
gs
push
mov
scas
dec
mov
lret
adc
cmp
aaa
sub
ds
sbb
sub
jg
inc
lods
jg
outsl
in
test
lods
dec
xchg
insl
and
jle
sub
sub
cmp
pslld
or
cmp
sub
fisubrl
lret
push
ljmp
dec
stos
pop
pop
scas
dec
mov
sbb
or
cmp
sub
fisubrl
lret
push
ljmp
dec
stos
pop
pop
scas
sub
out
adc
sbb
lcall
fsubr
jne
cmp
sbb
or
fisubs
pop
add
sbb
inc
push
or
push
pop
fwait
aam
fists
out
add
fisubl
fnsave
pop
repz
out
sbb
cmp
lcall
cmp
test
mov
or
in
inc
push
mov
or
mov
and
cmp
and
ja
adcl
hlt
popf
js
add
mov
pop
push
stos
cltd
xor
stos
stos
adc
in
xchg
pop
fmuls
call
loop
pushf
leave
adc
xchg
fcmovbe
lret
jl
iret
lcall
mov
iret
call
add
mov
jg
cli
fiaddl
cmp
sbb
gs
push
pusha
call
andb
push
inc
add
pop
jp
and
jne
sbb
or
outsl
add
js
dec
fldenv
adc
enter
xchg
jge
add
daa
push
je
or
jb
out
data16
ja
or
push
leave
fidivl
pop
fldt
xorb
xchg
daa
push
jge
sub
pop
jge
test
outsl
sbb
sbbl
jo
and
and
dec
mov
ficoml
test
rclb
div
jecxz
in
hlt
and
aam
xchg
out
adc
out
push
mov
mov
mov
inc
xchg
cmp
adc
adc
mov
stc
int3
fnstcw
cmp
sub
icebp
inc
adc
out
xchg
arpl
leave
stc
in
adc
or
sarb
xchg
idivl
push
ja
adc
shll
xchg
push
in
aas
lods
sahf
mov
das
jmp
aad
aaa
popa
xor
push
adc
rcrb
mov
pop
sbb
out
dec
scas
jns
ja
jle
hlt
fisttps
decl
push
clc
cmp
in
push
daa
cs
aam
fldcw
sbb
leave
jae
mov
jp
movsl
push
jo
push
push
mov
in
out
inc
dec
fcos
push
jge
push
call
mov
aad
push
xchg
add
pop
in
pop
lret
mov
adc
cli
lahf
imull
test
icebp
sbb
leave
sti
dec
pop
cld
mov
arpl
dec
inc
jns
cmp
pop
popa
dec
or
cmp
sbb
orl
in
cltd
push
mov
sbb
std
jle
dec
jns
lds
sub
cld
icebp
imul
roll
push
out
ja
das
aam
push
imul
inc
das
cwtl
inc
in
rcll
pushf
sbb
mov
test
xchg
adc
fstpl
push
insb
or
inc
mov
mov
and
fildll
pop
aad
aas
jecxz
jle
mov
lods
int3
ret
cltd
pop
je
pmaxub
insb
sub
jp
imul
fstpt
mov
cli
cmp
xor
push
xchg
cmpsl
mov
in
in
xchg
icebp
scas
adc
fidivs
dec
xor
test
insl
sarb
lock
push
fistpll
leave
push
inc
in
jg
xchg
mov
scas
and
dec
xchg
mov
cmpsb
cmpl
add
dec
fucomip
sbb
push
enter
pop
mov
dec
pop
jno
icebp
sahf
sub
push
movsl
insl
adc
test
daa
sub
jb
out
stos
lods
mov
call
push
std
dec
imul
ret
call
pop
aaa
mov
jecxz
mov
mov
or
rcrl
outsb
insb
mov
adc
test
fwait
stos
aad
in
in
gs
or
sub
jns
mov
clc
js
lock
rcrl
mov
loopne
in
mov
lods
pushf
sbb
in
mov
cmp
loope
shlb
subl
jmp
dec
orl
adcl
dec
pop
sahf
mov
sbb
test
dec
pop
fiaddl
and
test
jecxz
sbb
jecxz
inc
dec
jg
push
pop
pop
stos
cmp
fcomi
xchg
addr16
iret
sub
repz
call
aas
stc
insb
mulb
mov
push
cld
addb
mov
cli
fisttps
sbb
pop
sbb
popf
int3
dec
adc
pop
jnp
in
mov
mov
sbb
pushf
rcr
xlat
xchg
ljmp
out
cltd
push
mov
ss
fdivs
stos
dec
es
push
xor
lret
dec
xchg
shlb
xchg
mov
dec
pop
mov
lahf
dec
push
adc
mov
and
negb
sub
add
rclb
mov
dec
out
xor
pop
inc
dec
js
push
scas
enter
in
insb
ret
cmp
cmpsb
push
addb
pop
data16
adc
pop
jbe
rclb
xchg
lock
xor
xchg
xchg
insb
insb
adc
mov
add
scas
add
mov
cmp
cmp
mov
mov
inc
mov
or
cmp
data16
pop
xor
mov
jl
push
and
test
sbbb
push
in
pop
insl
jae
cmp
lret
outsb
mov
or
data16
lret
push
ja
mov
dec
out
test
jne
daa
rcll
enter
in
jne
mov
or
stos
or
js,pn
arpl
out
int3
pop
fcmovbe
push
push
insb
std
push
ja
or
cmp
lret
repnz
mov
shr
int3
sbb
ret
fdivl
pop
outsl
cmp
test
addr16
mov
inc
inc
adc
pop
xchg
shrb
pushf
repz
jle
nop
cltd
scas
jge
xor
and
jno
adc
sub
ret
xor
in
push
ss
or
imul
nop
inc
cmp
add
pop
in
psubw
and
add
ljmp
jle
pop
ljmp
xchg
imul
inc
decb
rorl
lret
jbe
xor
fisttps
add
mov
adc
inc
jo
mov
cmpsb
inc
shll
int3
pop
pop
mov
jge
adc
xor
loop
clc
and
cmp
push
lret
xor
in
lock
repz
scas
test
insl
addr16
sbb
push
sbb
or
xchg
or
pushf
jle
pop
mov
or
sarl
add
pop
test
in
test
jl
adc
sub
cmp
push
cmp
add
nop
out
aam
pushf
insb
push
es
adc
cmpsl
insb
outsb
xchg
push
and
pop
test
pushf
push
sub
xchg
imul
pop
xor
je
mov
pusha
xchg
call
mov
out
pop
loope
jmp
je
cmp
mov
insl
jb
sub
jmp
mov
sub
sarb
das
int
repz
xor
mov
shrb
push
cmp
xor
ficoms
cmp
mov
pop
pop
mov
mov
cmpsl
fildl
outsl
fwait
sub
stos
enter
mov
add
add
jae
xchg
jg
fmuls
or
and
jns
jno
outsl
adc
insl
pop
add
dec
add
inc
addr16
adc
xor
cmp
cmp
addr16
sarb
cmp
cmp
pop
xchg
sbb
cmpsb
imul
sub
ror
jge
adc
add
rcl
push
push
outsb
movsl
xor
dec
sub
lods
and
insb
fcompl
push
in
inc
cltd
inc
cltd
or
adc
dec
mov
sbb
mov
or
push
jnp
dec
add
imul
push
cwtd
and
ret
pop
sar
hlt
mov
int3
in
mov
fildl
lods
adc
jb
movsl
fsubrl
xor
test
cwtl
daa
push
movsl
xor
aaa
pop
stos
repnz
clc
mov
rcrl
pop
sub
push
xchg
or
leave
cwtl
mov
sub
out
mov
sarb
arpl
dec
fidivl
xor
adc
and
mov
jne
push
push
les
fsubl
mov
push
push
pusha
fstpl
xorb
daa
test
jne
or
mov
repnz
into
ret
sahf
jb
cmp
test
mov
jbe
or
or
pusha
xor
or
iret
sbb
inc
lds
mov
es
mov
cmp
clc
cltd
loop
fs
adc
adc
das
stos
lock
and
adc
test
dec
or
push
stc
cld
or
jle
add
ret
cmc
imul
fdivr
int
sbb
mov
push
jle
cmpl
pop
adc
cmp
jg
lds
mov
loop
imul
mov
test
jmp
bnd
adc
enter
pop
mov
mov
fistl
mov
adc
pop
fnstenv
jecxz
jbe
push
repnz
pop
push
xchg
or
aad
and
fistpll
xchg
sub
lock
jo
dec
pop
scas
and
aas
dec
roll
movsl
stos
xor
jb
js
mov
iret
mov
addr16
scas
mov
shr
lods
xchg
mov
rclb
rorl
dec
cmpsb
push
stc
mov
aaa
ljmp
lret
imul
push
enter
add
jl
lcall
mov
lahf
in
cmp
aam
or
lret
jno
jo
mov
cmp
stos
pop
insb
outsb
pushf
sbb
push
push
dec
mov
leave
hlt
out
fimuls
aaa
in
push
inc
sbb
xchg
popa
loop
cs
cltd
jle
or
dec
sub
inc
dec
xchg
loop
add
ja
fists
fisubl
sbb
inc
pop
insl
dec
sub
jnp
inc
add
scas
jns
jne
orb
into
aaa
mov
fmul
push
imul
or
lahf
test
push
ds
adc
movups
je
mov
inc
xlat
jp
xor
and
xchg
lods
fiadds
movsb
xchg
mov
ds
dec
cmpsl
pop
push
jp
shl
sbbl
and
mov
add
insb
stc
jmp
aad
loopne
and
aad
popf
sbb
addr16
jnp
sub
cmp
or
orl
jmp
and
sub
push
push
mov
jecxz
fs
jmp
hlt
les
loope
or
inc
divb
mov
push
or
cmpsl
cwtl
shll
push
jl
call
insb
cs
sbb
cmp
stc
shrb
aad
cltd
sbb
push
sahf
mov
lahf
xor
psllq
inc
jns
rcll
push
pop
lret
jo
push
pop
jbe
add
rcrb
outsb
sti
adc
out
fnstenv
mov
push
inc
xchg
xor
test
mov
insl
lahf
fsubrs
adc
cmpsb
lods
test
mov
cld
in
int3
sbb
ret
popa
filds
mov
shlb
fcom
xchg
jp
sahf
rol
sub
mov
movb
dec
mov
cmovle
push
push
jp
xor
fdivr
cs
jg
push
aad
popf
lret
pop
in
dec
mov
repnz
ds
mov
test
push
jb
mov
loopne
stc
pop
insl
mov
int3
std
sti
lret
stos
xor
jge
shll
cmp
mov
fisubl
jb
in
clc
mov
test
xlat
push
add
sbb
xchg
stos
inc
pop
leave
repz
in
push
out
enter
push
pop
mov
jnp
fistl
mov
xor
xchg
pusha
pop
inc
and
cwtl
mov
pop
sub
push
out
push
shl
xor
das
ja
or
mov
xor
sbb
or
pop
out
loope
xor
pop
lcall
inc
xor
push
mov
push
repz
nop
xchg
mov
shlb
cmp
test
test
and
inc
sbb
outsb
mov
cmpsl
mov
lcall
outsb
mov
add
xchg
push
mov
loope
cltd
clc
inc
popa
fs
pushf
inc
and
scas
push
pushf
lret
mov
inc
ljmp
xchg
sbb
jo
cli
lcall
sbb
ret
mov
lcall
ljmp
push
rcrl
jle
push
mov
sarb
bound
mov
addl
dec
insb
fiaddl
dec
jle
adc
bound
jno
sub
jp
dec
xor
inc
sti
push
mov
push
pop
sti
cld
jnp
jbe
loope
xchg
jl
pop
int
or
adc
sub
or
test
jmp
add
fldt
leave
sub
mov
cs
sarl
aad
sbb
sbb
aad
subb
dec
ljmp
add
mov
fwait
adc
jne
les
roll
push
je
push
fdivl
and
pusha
xor
int3
jnp
enter
push
sahf
imul
dec
mov
mov
pop
mov
int
xlat
pop
cmp
repz
iret
repz
out
cld
mov
inc
lds
lret
pop
cs
sbb
lahf
hlt
ja
sub
adc
xchg
adc
push
adc
mov
sub
mov
cld
mov
enter
push
mov
fisubl
adc
pop
xchg
jge
cmp
leave
mov
cld
pop
mov
cmpsl
xor
insb
inc
leave
mov
dec
xor
lods
ja
movb
ret
sarl
mov
push
xchg
ja
repnz
sarb
add
roll
jmp
bound
decb
loope
inc
insb
push
sbb
and
sub
bound
sub
inc
add
mov
addb
je
imul
or
push
cmpsb
ss
gs
adc
jns
xlat
jge
sahf
mov
lods
out
and
sbb
mov
mov
push
dec
xlat
testb
cli
push
cld
sbb
lock
call
jg
loopne
imul
mov
imul
jle
mov
jp
push
mov
pop
bound
lret
fmul
mov
sub
xchg
je
out
xchg
adc
js
or
push
or
dec
pusha
sbb
in
outsb
movsb
pop
mov
icebp
repnz
in
mov
js
adcl
add
cmp
jecxz
ret
ljmp
and
jge
clc
mov
dec
iret
gs
mov
scas
mov
add
out
or
mov
fiaddl
cmp
xchg
std
enter
out
in
push
aam
mov
inc
dec
jno
adc
test
mov
pushl
movsl
inc
repnz
cmp
pop
mov
cmp
mov
sub
mov
repz
adc
inc
sti
adc
or
jmp
insb
xchg
mov
or
push
xchg
repz
xor
loope
push
mov
cwtl
pop
in
dec
cwtl
hlt
adc
aas
push
sub
movsl
test
decl
inc
cmp
insl
mov
addr16
cmp
outsb
pop
mov
push
nop
insb
cmp
inc
mov
loope
loope
dec
pop
clc
sti
int3
mov
pop
mov
je
idivb
out
mov
outsb
inc
jnp
inc
cli
mov
test
sbb
sahf
ja
mov
sub
xchg
int3
add
push
push
and
inc
lcall
cmp
mov
test
dec
pandn
inc
cmp
dec
jge
push
subb
push
mov
incl
or
push
pop
jb
push
daa
or
mov
in
xor
sahf
sbb
scas
mov
adc
and
ja
imul
or
movsb
and
inc
loope
lcall
clc
scas
aam
fwait
int
inc
rcl
xor
adc
imul
leave
cmp
popa
pop
je
cmp
sub
push
mov
test
jmp
pop
out
sbb
fmull
ja
ror
adc
or
sub
jne
fwait
mov
scas
mov
aas
std
fcoml
loope
cmp
xor
int
lret
jp
ret
or
data16
push
in
sbb
jl
cld
enter
mov
div
or
test
sbb
out
scas
push
adc
and
insl
adc
fistpll
xlat
mov
sub
adc
or
add
je
or
out
pushf
fwait
lahf
movsb
rcrl
fsub
loop
test
or
pop
das
xor
mov
outsb
adc
int
cmp
inc
xchg
outsb
push
clc
pop
jmp
repnz
dec
push
inc
mov
fiadds
jle
xchg
psrld
push
adc
fidivrs
mov
test
pop
mov
mov
add
mov
cmpsl
add
out
jns
insl
mov
fldt
scas
lea
jg
mul
jecxz
sub
xor
sub
sub
scas
inc
dec
or
mov
aam
fildl
pop
jle
sub
cmp
cwtl
test
sbb
jae
push
mov
push
xchg
lret
adc
and
out
mov
dec
adc
jbe
movsl
notl
subb
push
mov
out
push
inc
sub
add
sbb
mov
inc
xor
mov
dec
stos
frstor
push
inc
enter
arpl
jbe
sbbl
dec
out
dec
xchg
fbstp
sub
lea
insb
mov
inc
je
ret
sub
outsl
mov
xchg
pusha
xor
adc
mov
jno
mov
mov
faddl
pop
imul
cld
cmp
and
out
cmp
inc
iret
ret
xchg
imul
xor
cmc
sbb
movsb
sbb
adc
fidivl
and
or
clc
dec
inc
or
in
add
jb
ljmp
add
and
mov
jg
push
rclb
jl
jmp
ret
repnz
fbstp
ja
sbb
inc
ss
hlt
pop
hlt
mov
bound
icebp
sub
sbb
adc
filds
in
cmp
cli
js
inc
mov
mov
rclb
or
push
das
xchg
popf
enter
loope
mov
inc
lods
push
cmp
xchg
inc
test
add
jbe
negl
xor
std
mov
jle
stos
or
xchg
mov
mov
push
add
mov
aaa
in
dec
je
outsb
inc
cmpsb
jae
movsl
push
push
and
decl
jecxz
mov
or
mov
repnz
sbb
addb
lahf
cmp
rcll
cmp
repnz
fisubs
mov
cltd
sbb
dec
inc
je
mov
loope
ds
jae
out
xchg
sti
iret
mov
pop
jg
pop
mov
mov
test
sub
loopne
insl
iret
rcl
repnz
scas
ret
and
ror
xor
jae
xchg
imul
pop
andl
movsl
cltd
mov
outsl
ret
jnp
orl
aaa
and
lret
and
fidivrl
inc
popf
mov
jns
jl
push
and
stc
push
sbb
sbb
outsb
stc
jno
sub
into
ja
aaa
pop
push
orl
xor
orb
xchg
xor
ficoml
fs
mov
pop
push
jae
inc
cmp
push
ret
mov
add
loope
dec
outsl
lcall
leave
out
rol
fnstcw
cmpsl
mov
sub
mov
dec
xchg
cli
repnz
and
outsb
out
mov
imull
lea
xchg
dec
out
scas
test
int
clc
dec
and
sbb
mov
dec
pop
add
stos
fistl
mov
xor
outsl
cld
scas
shlb
cmp
orb
into
mov
pop
mov
and
in
pop
rol
nop
imul
mov
out
mov
xlat
jle
inc
fidivs
popf
inc
fidivrs
shl
das
cmp
negl
mov
aad
fisubrs
add
xor
cmc
pop
movsl
cld
pop
mov
or
in
mov
push
xchg
das
fs
push
mov
test
inc
xor
cmc
push
xlat
jg
popl
push
push
xor
push
xchg
arpl
add
sahf
xchg
mov
psubsb
pop
arpl
xor
mov
insl
push
outsl
sub
adc
leave
sbb
and
or
pop
hlt
jne
push
mov
lret
xor
and
out
ja
xor
test
xor
jmp
cmc
das
gs
xlat
dec
mov
stc
rolb
inc
pop
jbe
xchg
or
loopne
jmp
cwtl
xchg
fwait
iret
scas
xor
int
out
xchg
sub
pop
js
in
cli
push
dec
xchg
mov
push
movsl
arpl
out
push
stos
or
pop
adc
mov
add
rcr
and
sbb
outsb
sub
jne
fs
out
mov
and
sbb
or
cmp
sub
fisubrl
lret
push
ljmp
dec
stos
pop
pop
scas
dec
mov
sbb
or
cmp
sub
fisubrl
lret
push
ljmp
dec
stos
pop
pop
stos
dec
mov
xchg
push
sbb
or
fldt
lret
push
jmp
lcall
mov
jp
push
sbb
or
mov
shll
imul
ss
es
and
adc
add
je
push
pop
je
push
clc
mov
test
aam
aam
push
and
js
add
je
fs
inc
inc
push
mov
movsb
shl
addb
add
mov
xor
pusha
add
dec
inc
inc
push
rorb
xchg
lahf
movsl
xchg
lahf
xorb
outsl
adc
insl
inc
jo
fs
mov
xchg
mov
mov
in
ror
rclb
jbe
mov
sub
in
flds
adc
rorb
cmpl
aam
cmp
popa
notl
jl
in
and
mov
addl
xor
clc
pop
call
int3
call
jo
iret
inc
scas
mov
movsb
fcoml
jg
rorb
in
aad
les
shrb
xor
cltd
out
mov
fists
rcll
rcll
in
sub
enter
mov
jmp
stos
xor
mov
xchg
jns
mov
aam
shrl
jb
adc
add
nop
pusha
sbb
push
inc
loop
jb
ds
xorb
rol
pop
dec
push
xor
jl
sbb
jo
push
inc
add
loope
xchg
mov
xor
bound
aaa
adc
fdiv
lds
mov
pop
imul
daa
pusha
fs
inc
inc
push
mov
movsb
mov
addb
rol
xor
and
adc
add
je
fs
inc
inc
push
mov
movsb
mov
addb
rol
xor
cmpb
les
lods
sbb
jmp
inc
cmp
cmp
in
sahf
xlat
jle
add
jecxz
xor
pop
enter
in
ljmp
cmp
adc
push
mov
fidivrl
cmp
sub
inc
xchg
inc
aam
push
xchg
jg
sub
jne
jl
outsb
dec
dec
rcr
jns
adc
sbb
movsb
pop
or
lock
jl
mov
nop
ret
push
push
xchg
mov
sbbl
outsl
int
or
cld
fdivrl
sbb
dec
out
imul
adc
inc
dec
xchg
jne
aas
shll
aas
jnp
add
ficoml
jo
popa
mov
jmp
cmpsb
push
xor
int
arpl
dec
cs
cmp
cmpsb
dec
push
push
sub
sbb
test
xor
lea
test
add
xchg
ljmpw
pop
mov
adc
mov
and
push
fdivs
sbb
add
into
sub
xor
xor
enter
mov
fwait
and
imul
int
inc
cmp
mov
rorl
fisubrl
stc
pop
and
adc
into
lods
in
fwait
push
rcrb
clc
and
ds
sbb
mov
inc
fildll
int3
and
cmc
xchg
ss
and
sahf
addr16
and
cmp
lcall
dec
mov
into
outsb
sub
and
xor
add
or
js
divl
adc
inc
jecxz
and
pop
in
loope
jmp
push
lods
sub
imul
dec
add
mov
push
test
fwait
add
mov
shlb
dec
lret
or
stos
fwait
cltd
mov
push
daa
xor
push
flds
jp
sbb
pop
cmp
loopne
mov
cmp
ss
or
fucomp
gs
inc
mov
or
mov
sub
fs
adc
cmp
jmp
out
mov
jae
aad
movsb
cmp
nop
leave
sub
jmp
in
add
enter
jb
notb
inc
mov
in
lcall
mov
pop
add
shll
les
add
mov
pop
lret
cmc
bound
dec
push
stos
mov
sub
rcrb
xor
push
mov
adc
pop
jmp
aad
dec
dec
rolb
add
xor
adc
sub
adc
movsb
mov
inc
pop
jne
fnsave
pop
shl
sub
sbb
inc
arpl
and
cwtl
clc
sub
popa
mov
pop
or
in
mov
std
mov
inc
mov
adc
cld
test
cmp
out
xor
rol
jae
inc
mov
outsl
movsb
out
sahf
xchg
aas
add
daa
cwtl
int
mov
push
sti
jle
stc
repnz
dec
lahf
out
jmp
push
add
fadds
movsl
mov
jg
fbld
mov
sbb
mov
push
mov
dec
adc
pop
cwtl
adc
mov
fmull
lds
leave
sti
lret
sbb
mov
andl
or
loopne
sub
mov
lea
adc
cmp
and
iret
adc
arpl
int
std
repnz
jecxz
decb
movsb
imul
push
das
add
sbbb
clc
in
pop
fnstcw
clc
in
jl
es
fisttpll
rcll
mov
xchg
insl
inc
ljmp
mov
js
jp
je
or
lret
jae
inc
add
dec
add
mov
iret
sbb
pop
iret
pop
adc
stc
mov
sbb
fistps
repz
fiaddl
pop
out
jbe
out
loope
inc
orl
jge
jnp
std
xlat
sarb
and
sub
ss
in
adc
lods
push
mov
jle
leave
fildll
sub
and
in
push
and
in
jno
mov
mov
sbb
jae
jl
mov
push
ds
ljmp
call
push
xor
mov
push
cmp
push
movsb
cmp
add
imul
push
loope
xchg
std
pop
fcompl
repz
xor
sti
imul
dec
leave
ficompl
ficoml
cmp
cmpsb
enter
lods
imul
ficomps
rcrl
test
sbb
mov
fadds
test
std
jecxz
and
arpl
cli
mov
mov
test
movsl
sbb
popf
addb
push
pusha
fistl
loope
das
add
xor
scas
sub
pop
jnp
pop
insb
xchg
add
xlat
jb
mov
into
ss
cmpsb
mov
fnstenv
push
mov
lds
cmp
inc
xor
jmp
punpcklwd
stc
and
daa
scas
fcmove
inc
xchg
dec
mov
adc
add
in
cmp
jbe
mov
rcrb
lahf
ss
jg
es
bnd
xchg
in
out
std
bound
daa
push
sti
mov
adc
aad
add
push
gs
dec
fs
in
orb
loopne
pushf
pop
adc
fisttpll
ret
mov
push
fidivrs
jae
je
jo
jo
popf
ja
movl
jns
push
sahf
jno
iret
rcl
push
cmp
in
subl
push
inc
inc
mov
cld
dec
inc
push
mov
dec
shll
mov
mov
xchg
pushf
jae
ficompl
andb
jle
adc
xlat
shr
movsb
sahf
xchg
loope
repz
push
inc
loope
mov
and
push
inc
xchg
out
mov
mov
xor
mov
sub
outsl
out
dec
mov
fisubs
lock
xor
push
das
cmp
ljmp
lahf
testl
inc
pushf
sub
mov
xchg
xchg
pop
in
pop
out
dec
mov
sub
push
movsb
sub
dec
call
test
lret
add
cmpsb
and
pop
jbe
sub
inc
ficompl
inc
add
jns
ficoms
mov
insl
pop
xchg
add
add
and
dec
mov
das
or
cld
cmp
mov
or
lret
mov
or
jns
mov
test
jmp
loope
pop
mov
xchg
xor
outsb
pusha
push
call
dec
mov
pop
xor
pop
mov
movsl
push
xlat
hlt
out
sub
int
call
inc
pop
push
nop
mov
lds
dec
jae
jo
faddp
fsubr
cltd
lahf
lds
pop
je
roll
sbb
add
lret
hlt
dec
push
rcl
orb
mov
cmp
icebp
ss
mov
out
dec
dec
gs
mov
push
mov
cli
jae
es
subb
adc
sub
or
pop
or
sbb
test
sub
add
pop
mov
push
lahf
hlt
scas
add
test
dec
enter
cmc
dec
push
fsub
sbb
fdivrl
loopne
xor
mov
mov
in
imul
mov
mov
stc
sbb
lods
push
mov
push
cmp
icebp
cltd
jp
mov
out
pushf
aas
add
sub
movsb
leave
repz
push
push
popa
xor
jp
inc
pop
dec
test
cmc
sub
movsl
jbe
pop
jge
sub
jg
and
jle
ja
sub
dec
sub
scas
jge
mov
or
nop
adcl
pushf
ds
inc
popa
jae
scas
loope
inc
icebp
sbb
pop
outsl
rorb
cltd
cltd
jl
and
jl
int3
mov
jne
hlt
mov
outsb
cmp
push
ret
dec
cli
xchg
incb
outsl
cs
out
ljmp
cld
repz
xor
js
lods
arpl
mov
adc
test
and
loope
and
loope
inc
mov
pop
shrl
xlat
adc
and
push
shlb
movsl
clc
sub
ret
hlt
addb
jge
dec
mov
orb
cwtl
or
xor
inc
jae
and
notb
push
mov
mov
inc
enter
jns
daa
fsubrs
test
jl
ficoms
sbb
fldcw
clc
outsl
scas
mov
ret
jne
cmp
cwtl
jge
dec
mov
in
xchg
movsb
fists
add
xchg
push
dec
xchg
adc
das
stos
sahf
xor
jns
ret
adc
or
inc
cmp
lret
or
fdivrs
mov
jno
insb
iret
popa
lods
or
xchg
stos
push
ja
jecxz
shll
ret
sahf
inc
lock
cmpsl
int
lock
aaa
ja
arpl
roll
cli
jl
sbbl
lret
aas
mov
ljmp
lcall
push
insl
negb
mov
dec
aaa
and
into
add
mov
sti
test
rcll
push
fiaddl
or
inc
sbb
mov
out
mov
int
pusha
dec
xchg
loop
xchg
nop
jno
xchg
sti
cmp
sbb
mov
jg
jge
mov
into
inc
aas
inc
cltd
jb
in
mov
mov
sbb
mov
xor
leave
and
enter
jo
jo
bound
fdivp
lods
sarb
test
fisttpl
sub
repnz
adc
fisttpl
test
xor
rcll
pusha
push
dec
cmp
pop
out
xchg
insl
stc
fcmove
repnz
sbb
addr16
ret
mov
mov
in
nop
mov
cmp
pop
jno
daa
loopne
mov
gs
mov
nop
popa
xchg
pop
or
into
mov
push
push
gs
inc
pop
imul
xor
dec
fcoml
rcr
or
cmpsb
or
or
and
orl
outsb
out
pop
shlb
jmp
jae
adc
mov
add
inc
lea
jecxz
arpl
popf
sti
popa
daa
mov
outsb
aas
stc
pop
pop
pop
fbld
mov
push
lea
jmp
adc
arpl
sahf
pop
call
pusha
loope
out
mov
inc
sbb
hlt
scas
and
cmp
outsl
test
lods
jp
push
in
std
ret
mov
sub
lods
ja
insb
push
lret
jg
outsl
xchg
repz
mulb
sub
cmp
test
imulb
mov
leave
rclb
add
aaa
lcall
sub
gs
cmpsl
mov
es
scas
nop
jge
mov
ret
mov
in
sub
scas
mov
add
jns
mov
clc
gs
mov
sub
mov
scas
sbb
test
movsl
push
mov
push
and
cltd
mulb
xchg
pop
ds
das
out
in
rolb
xchg
popa
pop
xor
xchg
pop
push
add
sbb
jg
leave
adc
int
stc
rcrl
cmp
cld
and
mov
sbb
xchg
jne
inc
jl
out
adcb
mov
lahf
mov
sarl
jnp
insl
mov
sbb
cld
sbb
sub
cmp
sbb
outsb
mov
das
aaa
adc
xchg
pop
in
mov
fadd
xlat
push
push
mov
leave
sub
fs
xchg
aam
mov
inc
mov
jae
in
mov
push
mov
das
xchg
fdivp
rol
testb
push
lahf
mov
push
push
outsb
sbb
mov
int3
les
shl
arpl
xchg
stc
je
in
fdivl
clc
into
dec
cmp
in
maskmovq
sub
and
xor
mov
arpl
outsl
jmp
dec
push
std
xchg
sbb
and
fwait
cmp
lcall
cmp
orl
ds
mov
in
jb
ja
lcall
xchg
or
out
mov
mov
and
push
push
iret
outsl
mov
fstps
sbb
or
or
lea
or
dec
dec
pop
xor
xlat
int
pop
fisubrl
pop
das
xor
xchg
fcmovnbe
push
push
imul
adc
or
fisttpll
add
mov
and
and
int
sbb
sbbl
dec
xchg
lea
xor
dec
dec
loopne
xchg
ret
out
jo
sbb
xchg
sbb
ficomps
int3
aas
in
adcb
push
clc
outsl
data16
fisubrs
fcomp
pop
aam
jmp
out
jnp
jb
add
adc
in
in
jo
pop
xlat
ljmp
aaa
xor
cli
pop
and
lahf
loopne
cwtl
shlb
int
in
mov
dec
xor
mov
test
sahf
cltd
loope
scas
repnz
ljmp
test
sub
mov
fmul
ja
dec
mov
xor
mov
jne
aas
mov
stos
cltd
sbbl
mov
dec
ljmp
ja
movb
cld
mov
int3
sub
ja
ss
add
lret
shlb
imul
and
inc
xchg
pop
dec
push
pop
pushf
mov
adc
fcoml
hlt
mov
popa
movsb
icebp
stos
ds
sub
int3
aam
push
fistpll
sub
cmp
in
es
xor
or
push
inc
adc
jo
jmp
loop
pop
popf
mov
jns
pop
sti
popa
test
adc
pop
push
sub
push
inc
loopne
lcall
pop
inc
xor
test
dec
adc
xchg
ret
out
leave
mov
lods
sbb
cmpsb
aad
iret
xchg
dec
jg
jae
mov
mov
xchg
scas
sub
adc
xor
ja
ffree
sub
dec
dec
push
js
cmp
jnp
mov
push
subl
adc
jbe
dec
shll
pop
pop
in
xor
inc
in
mov
xchg
out
outsl
mov
or
call
mov
testl
adc
xlat
inc
mov
aad
gs
mov
mov
jmp
clc
in
jle
fisttpl
mov
xchg
int3
sahf
test
mov
dec
cwtl
shr
in
xor
scas
inc
jo
dec
push
fstp
jp
pop
daa
fisubl
inc
aaa
mov
cmp
inc
mov
xchg
or
sarb
lcall
enter
pop
sub
add
push
sbb
jbe
jae
leave
fs
sub
es
and
icebp
test
adc
movsl
insb
or
les
inc
xchg
fistpl
div
fmuls
push
sub
fstp
loope
sub
or
mov
scas
or
add
mov
shlb
imulb
cmp
push
or
aam
hlt
icebp
cmc
pop
xchg
inc
mov
test
outsl
adc
insb
rclb
arpl
jb
fildll
cwtl
or
movsb
cmp
sahf
pop
jno
shl
lds
pop
pop
mov
cmp
rclb
xchg
xchg
dec
inc
lds
push
xor
lds
jl
mov
arpl
pop
xchg
adc
jecxz
out
inc
dec
push
in
flds
mov
movsl
add
shlb
aad
mulb
xchg
inc
sti
adc
andb
pop
lods
dec
icebp
rcrl
fisttpl
cmpsb
mov
in
and
loope
xchg
fs
add
sahf
shr
mov
pusha
sub
mov
dec
mov
xor
mov
ja
or
jecxz
scas
dec
outsb
mov
bound
sub
push
or
jnp
into
das
ret
xchg
in
fsubl
sbb
inc
iret
test
dec
dec
cmp
push
fmull
lods
or
pop
mov
stc
rep
in
cmpsl
ja
icebp
push
cwtl
call
xchg
cmp
test
jb
daa
sub
shll
fwait
add
add
outsl
ds
dec
pop
insl
outsb
xchg
inc
cmp
int
rclb
js
push
dec
out
rorl
and
and
dec
arpl
in
call
mov
mov
sub
inc
jecxz
jg
add
inc
and
out
std
cmc
loope
cmp
jge
push
add
inc
jecxz
fmul
xlat
dec
cmpsb
imul
lds
inc
les
addr16
loope
ss
mov
into
sub
js
stos
out
adc
inc
sbb
call
aam
mov
jecxz
repnz
inc
sub
mov
and
loopne
aam
add
jno
xor
inc
mov
xchg
xchg
mov
sbb
sbb
repz
imul
push
and
aas
shrb
subl
ret
xchg
popa
cmp
enter
push
add
mov
fisubrl
xchg
imull
iret
stc
dec
push
fcomps
stc
sub
outsb
das
lea
lods
repnz
pop
bound
pop
jl
fmul
fsub
jge
pop
std
push
jmp
pop
js
hlt
push
outsl
jge
mov
push
cwtl
pushf
test
repnz
push
sbb
pushf
xor
loope
aas
scas
sub
sbb
mov
repz
mov
push
push
movsl
cmp
xor
jg
mov
xchg
add
pop
out
cmp
mov
inc
jne
inc
leave
sbb
mov
outsl
inc
cwtl
mov
cmc
pop
mov
and
dec
iret
cmc
lock
icebp
mov
stc
adc
clc
cmc
cltd
frstor
jo
sbb
movsb
in
js
jge
push
cmpsl
shll
ljmp
popa
mov
lret
dec
lret
cmp
and
mov
cld
push
mov
push
out
movsb
hlt
pop
dec
rclb
xorl
mov
dec
insl
sub
mull
divb
fdivr
mov
addr16
std
aad
inc
sbb
inc
adc
iret
fwait
mov
std
dec
mov
movsb
scas
mov
mov
adcb
and
shlb
xor
xor
out
mov
xor
imul
popa
arpl
incb
and
mov
imul
sbb
in
jecxz
xor
fstps
pop
lret
or
test
mov
cwtl
stc
or
leave
jne
je
inc
add
mov
sub
fwait
cmp
cmp
sub
outsl
testl
and
xchg
sbb
dec
fistpll
sub
push
nop
in
je
rclb
sbb
xchg
and
xor
dec
add
and
cmp
mov
mov
mov
out
addr16
mov
add
aad
das
in
push
imul
adc
out
mov
or
mov
dec
stos
leave
mov
rcr
repz
cli
mov
in
push
outsb
cltd
mov
add
jns
xchg
ror
xchg
pop
cmp
inc
fnstcw
out
imul
fwait
jb
js
aad
icebp
xlat
stos
mov
xchg
lcall
fistps
pop
xchg
and
and
ja
add
popa
pop
cmc
cltd
xchg
std
xchg
imul
pop
sbb
fadd
pop
movsl
mov
popa
movsb
mov
add
and
adcb
lods
xlat
sub
push
or
jge
dec
sbb
lods
jo
shrb
int
popa
adc
test
jno
jmp
dec
stos
cmp
int
sub
rclb
pushf
ret
mov
xchg
cli
or
popa
lods
mov
in
das
add
xlat
inc
and
sbb
lock
imul
lds
hlt
jg
fs
int
push
pushl
mov
xor
mov
wrmsr
jg
enter
xlat
jl
enter
sub
xor
aam
mov
data16
cld
mov
push
lock
inc
ffree
mov
fidivrl
outsl
loop
add
test
jbe
and
mov
push
aam
shrl
lret
xchg
pop
xor
and
out
into
mov
push
mov
aaa
xchg
testl
mov
push
push
flds
rcrl
sahf
adc
sbb
lea
imul
aaa
mov
je
mov
jecxz
insb
xchg
xor
std
out
add
mov
mov
fxam
adc
sbb
lods
hlt
or
aad
adc
push
int
repz
add
fdivl
dec
shl
les
cld
hlt
ret
or
fistpll
lods
cmc
int
pop
cmc
sti
aas
sub
loopne
ss
pop
fmuls
push
add
push
aad
pop
dec
or
inc
cmpsl
nop
mov
arpl
add
xchg
es
imul
pusha
mov
mov
cmp
sub
outsl
push
mov
adc
cmp
data16
je
dec
js
outsb
bound
insb
jecxz
int
mov
jb
sub
fwait
xchg
adc
push
push
fwait
mov
mov
mov
orb
sbb
add
andb
push
rcrl
add
cwtl
fs
leave
xchg
in
imul
dec
lcall
pop
call
out
inc
neg
lock
or
in
shll
mov
sahf
hlt
aad
mull
cwtl
rcrb
push
push
ret
lahf
and
loope
push
add
je
fs
inc
inc
push
mov
movsb
mov
addb
rol
xor
and
adc
add
je
fs
inc
inc
push
mov
movsb
mov
addb
rol
xor
adc
je
add
in
fs
inc
test
and
hlt
loopne
lock
sub
and
js
dec
add
je
je
push
inc
les
mov
test
subl
sub
cmp
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
in
fmul
repnz
call
pop
push
insb
inc
jl
or
pop
adc
int3
in
aad
mov
mov
jnp
inc
jl
or
sbb
sub
cmp
int3
fcoml
add
movsl
mov
pushf
mov
jb
add
sbb
jl
pop
jns
bound
cmp
int3
lds
ds
loopne
xchg
scas
xchg
push
or
into
sub
or
push
cmpsl
xor
stc
les
add
je
arpl
icebp
cwtl
cmp
insb
scas
jge
int3
mov
xchg
sub
shlb
inc
nop
cmp
stos
mov
mov
lret
das
out
pop
cmp
test
nop
call
xchg
inc
xchg
pusha
jg
dec
inc
xchg
mov
dec
add
cli
sbb
sub
add
arpl
push
int
mov
xor
dec
mov
pop
inc
sub
in
sub
pusha
mov
inc
pop
lahf
adc
cmp
push
and
cmp
int3
in
aad
test
pushf
xchg
lods
cmp
pop
lea
push
or
sbb
sub
jp
mov
stos
mov
xchg
in
adc
and
add
popa
dec
gs
scas
inc
pop
cmc
lea
xchg
in
push
stos
fsubr
les
dec
or
xor
sub
inc
arpl
pusha
pop
inc
push
xchg
mov
loopne
pushf
xchg
lods
test
insb
inc
jl
or
sbb
sub
cmp
int3
in
aad
mov
mov
push
insb
inc
jl
or
sbb
sub
cmp
int3
and
jge
lcall
ret
ficoms
bound
imul
lea
aas
adc
push
int3
insb
test
shlb
pop
mov
adc
jbe
test
loop
inc
jb
cmp
xchg
mov
out
inc
xchg
scas
sti
gs
ljmp
loop
sarl
adc
adc
adc
sti
arpl
pop
cmpsl
out
inc
cmpsl
in
cmp
xor
lds
adc
pop
sbb
adc
xchg
cmp
es
cld
pop
mov
pop
icebp
mov
insl
jae
jo
hlt
fimuls
mov
xor
jne
ljmp
lahf
imul
jo
cs
test
mov
adcb
lods
inc
or
loop
sub
dec
adc
inc
lods
sub
decl
stc
fiaddl
push
cmp
dec
das
xchg
mov
jle
add
and
insb
fadds
insl
fisubl
adc
inc
bound
push
mov
movsb
cmp
aas
sbb
addb
xchg
jmp
divl
test
inc
xchg
cmpsb
xchg
push
dec
pop
jbe
cmp
sbb
inc
sub
dec
cmp
jmp
jg
push
sub
add
dec
adc
xchg
push
adc
pop
add
daa
insl
and
ds
int3
cli
fwait
rcrl
testl
jle
adc
dec
fcmovnu
sbb
fbld
jle
call
push
pop
rol
xlat
lods
in
loope
lret
cmpsl
shl
sub
or
xchg
or
and
push
fbstp
fs
ljmp
fwait
jg
inc
movsb
or
dec
insl
inc
roll
arpl
push
shll
xchg
inc
andb
cwtl
sub
lds
nop
mov
pop
aas
push
jae
test
ficoml
sub
movsl
cmp
sbb
insl
jge
push
mov
arpl
sub
lcall
fadd
out
insb
adc
int
inc
inc
call
dec
pop
bound
adc
pop
mov
mov
push
aam
mov
fwait
sti
lds
inc
push
mov
and
ja,pn
scas
loope
add
pushf
jns
xchg
cmpsl
add
or
push
add
cmpl
mov
xorl
adc
jecxz
ret
mov
inc
in
adc
pop
fbld
inc
cmp
xchg
or
stc
jmp
push
inc
outsl
push
push
jo
and
sbb
cmp
into
icebp
cwtl
sub
gs
popf
sub
daa
xchg
in
push
jo
aad
or
clc
sub
or
xor
pop
popf
jmp
mov
and
jae
inc
or
outsb
in
addr16
xchg
inc
and
or
test
in
addr16
pop
xor
repnz
in
cmc
mov
mov
push
out
xor
mov
pop
push
push
adc
in
jg
jo
jle
jb
je
pushf
mov
loop
sbb
inc
cmpsb
inc
fs
pusha
lock
jb
sbb
pop
outsb
or
mov
clc
imul
ljmp
xorl
push
push
rcrb
mov
sbb
cmp
jecxz
xor
out
xchg
sub
fsts
outsb
mov
xchg
xchg
data16
fwait
gs
mov
add
adc
stc
cmp
mov
xor
lcall
repnz
sbb
aas
mov
xor
sbb
jmp
jae
movsl
mov
inc
pop
inc
stos
xchg
js
xchg
add
push
cltd
jecxz
int3
mov
push
inc
cwtl
lods
pop
test
dec
jl
subl
clc
mov
mov
mov
out
push
mov
std
stos
inc
shl
mov
imul
cmpsb
je
jb
std
jmp
lock
repz
mov
lcall
xlat
pop
popa
adc
jle
in
xchg
gs
lret
add
xchg
dec
addb
sbb
lods
call
xchg
add
mov
xorb
aas
addr16
aaa
xchg
stos
fldcw
xchg
pop
jnp
or
nop
jp
pop
mov
xlat
loopne
pop
xchg
call
cmp
push
lods
mov
jo
jl
xor
test
inc
push
call
xchg
into
jb
sbb
add
dec
les
push
in
sub
pop
ljmp
jne
mov
hlt
pop
mov
inc
lods
ds
aad
dec
dec
pusha
add
xchg
cli
ja
pop
aam
pop
addl
cwtl
ficomps
push
or
mov
mov
and
pop
push
push
adc
jp
dec
repz
sub
mov
mov
into
stc
dec
push
xor
xchg
jo
enter
mov
sahf
or
xchg
add
in
fisubs
or
pop
adc
mov
mov
dec
pop
jae
imul
sbb
imul
mov
inc
test
and
add
mov
and
out
lret
stos
jne
push
xchg
push
aaa
arpl
lcall
jmp
xchg
cmp
pop
mov
jne
clc
inc
sub
fwait
adc
dec
adc
mov
push
fstp
nop
and
cmc
sub
arpl
sub
jg
mov
xchg
mov
and
mov
jmp
cmp
xchg
mov
shll
fidivl
dec
cmpsb
stos
ss
xchg
push
jp
or
andl
aaa
ja
arpl
inc
mov
push
inc
sbb
pop
adc
inc
scas
cmpsl
in
push
and
outsb
ja
mov
popf
test
fstpt
mov
mov
es
push
push
out
pop
xor
push
in
adc
ljmp
ret
jb
adc
and
inc
pop
cmp
repz
jnp
or
in
and
add
xlat
add
mov
pop
shrb
rcll
inc
mov
push
lds
push
or
xchg
imul
je
orl
add
mov
in
les
jo
popf
inc
or
xchg
or
test
and
sti
jp
sbb
jne
scas
mov
fwait
jl
movsb
bound
leave
leave
push
lcall
je
jl
xchg
push
adc
cmp
fs
insb
push
dec
test
jge
jno
dec
push
mov
inc
scas
sarb
sbb
adc
and
aam
fnstenv
push
out
mov
rcrb
jae
pop
in
mov
xor
pop
push
mov
movsb
sahf
or
sub
scas
jbe
add
mov
sti
mov
nop
mov
push
pop
mov
iret
jae
cli
xor
shll
adc
fiadds
xchg
adc
test
inc
enter
and
cmp
xor
inc
fwait
lock
sub
out
pop
cwtl
pop
xlat
and
mov
xchg
ja
call
in
lret
jns
push
cmpsl
push
jge
pop
int3
pop
sub
mov
jle
iret
gs
mov
jns
pop
daa
add
out
add
lods
loope
rcrl
dec
sbb
orb
mov
push
jae
mov
scas
icebp
cmp
inc
fistps
push
pop
xchg
test
cmp
inc
jnp
and
mov
je
call
push
mov
insb
out
cld
cmp
jge
mov
cli
sbb
pop
adc
sub
es
sub
popf
sahf
or
mov
js
lret
mov
xor
fdiv
loopne
push
filds
push
shll
xor
xor
ficoms
int3
sbb
fsubrs
out
push
xchg
push
mov
xor
cli
push
dec
test
dec
pop
arpl
mov
pop
fsubl
notl
sub
cmp
cmp
push
and
bound
fmuls
movl
pop
xorb
loope
pop
jne
inc
jnp
dec
or
cltd
addr16
inc
fcomps
stc
push
pop
inc
addr16
jecxz
negl
call
out
notl
pop
fidivrl
mov
ljmp
pushf
add
fisttpl
inc
out
xor
psllw
cwtl
test
pop
sub
cmp
fldcw
or
aam
inc
lret
inc
sti
rcrl
insl
jl
clc
xchg
jg
pop
and
jmp
sbb
mov
push
adc
xchg
ds
xor
icebp
inc
pop
xchg
ret
push
lods
lods
push
shlb
adcb
cltd
inc
cmpsl
sub
gs
in
jns
inc
fadds
int3
jb
insl
movsl
mov
jmp
cwtl
data16
hlt
movsb
mov
clc
das
sbbb
xor
inc
popa
lcall
cmpsl
mov
dec
aad
or
std
sbbl
rcll
out
xlat
rorb
inc
pop
jae
bt
mov
test
daa
xchg
loop
test
nop
ja
fld1
push
adcb
jns
sub
cmp
mov
rolb
shrl
popf
pushw
push
in
pop
rcrl
aad
jge
insl
int3
mov
loope
sub
inc
insl
cmp
das
jns
mov
movsl
push
push
mov
sbb
fistps
je
or
sarl
jmp
adc
lds
cmp
cld
test
sub
dec
das
mov
fldcw
mov
jmp
sbb
add
ljmp
dec
cmpsb
iret
aam
stos
lods
jle
inc
out
push
add
adc
movsl
pop
outsb
mov
inc
aam
pop
cmpsb
jae
dec
ds
out
iret
add
jae
sbb
sub
scas
push
adc
imul
cmp
stos
or
sub
pushf
jns
nop
pop
aam
jle
fmull
scas
xlat
xlat
sub
stc
roll
mov
inc
xchg
cmpsl
jl
or
push
or
leave
adc
in
pop
jp
add
cmp
dec
ret
int
pusha
jle
cmpb
sub
aad
push
test
lock
icebp
add
fwait
mov
popa
add
or
dec
cmp
int3
jle
sahf
testb
jl
pop
js
rolb
js
mov
in
fwait
imul
cld
fnsave
sbb
lds
sbb
imul
pop
and
jb
lahf
cmp
sbb
int3
mov
hlt
xchg
fistl
jb
cmpsl
movl
xchg
push
mov
sbb
lds
mov
inc
enter
adc
fldcw
bound
rolb
xor
into
and
and
cmpsl
mov
push
adc
add
mov
fcoms
call
das
scas
lret
cmp
jb
mov
fwait
cmpsb
rcrb
sub
xchg
xor
adc
nop
mov
pop
scas
add
pop
dec
inc
mov
mov
cmpl
nop
lret
sub
and
or
imul
add
ret
sub
xchg
push
dec
mov
push
sbb
jp
jo
xor
push
mov
cld
mov
sbb
add
scas
sahf
lcall
pop
jo
insb
rolb
cmp
inc
filds
mov
fwait
jle
adc
inc
cltd
jl
pop
mov
xlat
jl
push
xchg
pop
jne
pop
xchg
dec
int
pop
push
cmpsb
pop
es
test
ret
fisubrs
ds
out
scas
movsb
popl
test
xchg
xchg
or
dec
shll
imul
cltd
pop
jg
jo
in
mov
xchg
std
jno
and
jge
jb
cld
jae
mov
out
pop
mov
scas
mov
cmp
dec
lret
cmp
xor
stos
cmpsb
add
sbbb
iret
fnstcw
adc
pop
jb
mov
aaa
test
loop
inc
es
push
arpl
xchg
daa
ds
out
aad
xor
or
ja
adc
mov
pop
pushf
ficoml
push
sub
js
fldt
test
inc
jmp
adc
addl
out
mov
cmp
pop
outsb
ret
mov
lcall
jecxz
sub
fucom
rcr
mov
stos
pusha
test
mov
fmulp
dec
je
jae
xor
adc
jnp
cmp
mov
push
jge
call
lret
out
cltd
jbe
je
in
inc
cmpsl
ljmp
xchg
imul
dec
lret
rcrb
add
in
out
and
sarl
imul
sarb
xorb
pusha
sbb
ficomps
jle
and
push
imul
cmc
aad
test
scas
pop
jmp
testb
and
lock
xchg
leave
mov
and
out
in
sbb
das
push
aas
in
call
subl
enter
or
xchg
mov
add
ret
mov
stos
and
out
push
add
pop
fdivr
jno
lahf
inc
and
mov
inc
xchg
ret
or
int
scas
sub
shrb
or
in
cmc
arpl
std
ss
mov
cmp
out
js
xor
add
shl
cmp
aaa
orl
imul
in
add
cmpsl
in
mov
loop
repnz
mov
sbb
int
fisubrl
jbe
movups
ret
or
aam
aam
rcll
pop
jmp
mov
or
stc
xor
push
add
add
mov
adc
or
in
dec
lods
pop
lock
cmp
das
mov
push
ja
push
je
ds
cld
repnz
sub
and
push
sbb
pop
push
add
cltd
cmc
mov
out
call
andb
out
scas
lret
cltd
xchg
push
idivb
lods
jl
cmp
jo
pop
stos
fstl
hlt
dec
xchg
stos
insb
aaa
jmp
movsl
sub
in
sub
push
clc
stos
cmp
dec
mov
andb
int3
fldcw
and
cltd
jge
fisttpl
cmpsl
jmp
aas
out
sahf
mov
and
jmp
sbb
sbb
push
fldt
jp
mov
sub
lds
fdivrl
or
pop
test
out
insl
enter
rolb
jne
shlb
test
ja
das
call
lret
xchg
lea
cli
aaa
mov
dec
push
dec
stos
data16
xchg
mov
mov
std
mov
sbb
cmp
pop
fdiv
rcl
out
in
jg
lret
xchg
into
jno
or
enter
jbe
and
or
aaa
and
jno
jns
aam
mov
in
imul
sub
sbb
in
jbe
jbe
mov
movsl
dec
cwtl
mov
push
adc
mov
jl
mov
or
mov
pusha
pop
xor
fs
es
push
in
adcb
push
scas
pop
or
fmull
pushf
mov
ficomps
inc
inc
repnz
mov
stos
add
cmp
scas
gs
in
pop
or
in
fisttps
xchg
mov
sub
movsb
rcr
sahf
sub
lcall
hlt
in
dec
popf
xchg
pusha
or
xchg
jns
mov
jnp
dec
and
les
fwait
xchg
jmp
or
mov
insb
sub
aad
adc
testb
outsl
aas
mov
pop
sbb
rcrb
xchg
xor
mov
push
mov
push
jno
sti
ret
push
js
jb
pop
lret
xchg
inc
out
insl
dec
push
outsl
cmp
fdivrs
dec
inc
popf
or
ret
cmp
add
fadds
or
jb
test
xchg
jle
jno
mov
dec
xchg
lret
sbb
jp
fisttpll
jne
jecxz
shlb
iret
jo
jl
popa
or
sbb
mov
fs
iret
inc
aam
push
inc
shlb
inc
inc
or
dec
loop
pop
fwait
adc
jmp
jbe
sub
stos
pop
push
outsb
dec
and
out
cmpsb
test
mov
insb
cs
lcallw
mov
lea
push
ret
pop
lret
sbb
data16
add
inc
in
pop
xchg
test
ss
cmp
inc
jb
mov
mov
mov
cld
fnclex
add
sti
jne
mov
cmc
ret
inc
popf
in
cmp
imul
cmpsb
cmp
adc
dec
jp
stos
in
mov
les
aaa
out
dec
mov
sti
mov
data16
dec
and
xlat
adc
push
fs
pop
out
add
push
sarl
rolb
inc
or
pop
mov
es
xlat
movsl
subb
paddb
mov
cli
dec
or
into
pop
sub
sbb
bound
adc
pushf
xchg
pop
test
rorb
cwtl
outsl
movsl
mov
push
into
jge
cmpsb
insb
cli
fscale
sub
jo
fstpl
movsb
mov
add
fwait
or
xor
ja
add
cltd
mov
mov
arpl
jle
lods
scas
ret
mov
inc
leave
xchg
test
jo
mov
ljmp
popf
test
xchg
rolb
lahf
pushf
sbb
sub
mov
out
leave
popf
lret
pop
arpl
je
test
loope
shl
fnstsw
add
jmp
pop
add
adc
pop
imul
or
push
pop
jge
and
imul
pop
shlb
xchg
icebp
lcall
fidivl
and
fidivrl
cld
sub
inc
aas
xchg
xchg
mov
icebp
push
popa
aaa
shl
mov
popa
jmp
mov
lret
adc
push
inc
js
sbb
xorl
push
movsl
and
test
cmp
sbb
and
or
add
and
outsl
sbb
daa
lret
pop
xchg
dec
xor
stc
loop
dec
je
popf
movsl
fdivp
inc
add
cmp
cld
xchg
iret
popa
out
lcall
cmp
and
inc
fdivrp
inc
sbb
sub
xchg
cmpsb
lret
or
mov
mov
addb
lret
fwait
inc
movsl
cld
scas
int3
int3
stos
jae
mov
lret
daa
sub
rol
lcall
push
sbb
lcall
push
iret
nop
inc
nop
add
sahf
int
cmp
cld
adc
test
lcall
or
push
mov
sub
outsl
pop
fsubrs
movsb
sub
fbstp
add
mov
inc
fdivr
push
ficompl
push
xor
cmp
sub
adc
mov
fucomi
or
xchg
jo
ss
lret
mov
sub
sub
jnp
xchg
xchg
mov
icebp
rcl
rcrb
sub
push
stos
inc
jno
pop
and
stos
popf
inc
sub
int
sbb
xor
xor
adc
add
iret
rol
arpl
shlb
push
in
jge
mov
sbbl
xchg
pusha
sarb
in
sub
pop
push
popa
dec
fstps
rcll
and
fnstenv
inc
movsb
stos
push
sti
adc
jmp
rcll
adc
cmc
inc
push
imul
xchg
test
mov
mov
pusha
inc
arpl
shrb
pop
lds
mov
add
mov
jg
scas
sub
outsl
cmp
lret
test
pop
jo
shrb
mov
xor
lods
icebp
jmp
mov
rclb
add
leave
lret
sbbb
sbb
mulb
and
lcall
sarb
mov
test
iret
push
cmp
and
je
mov
or
or
mov
loop
filds
mov
cmpl
jmp
sahf
lock
cld
outsb
xchg
xor
jle
movsb
icebp
add
jmp
roll
outsl
and
lahf
jge
push
int
pop
mov
mov
and
fiadds
in
ficoms
imul
fwait
jg
jp
repnz
push
out
mov
push
bound
mov
mov
xchg
and
call
call
xchg
jb
cwtl
popa
cltd
popf
mov
lods
shll
push
xor
imul
mov
and
push
sbb
shl
mov
mov
lods
lahf
sbb
cld
inc
pop
cli
xor
jbe
sub
sbb
in
clc
out
push
or
cld
adcl
jg
push
inc
addr16
shl
jo
inc
and
cld
push
dec
lea
insb
add
repnz
test
push
cld
pop
or
popf
divl
int
mov
cs
rol
ds
aad
call
dec
lcall
xor
shll
ret
mov
and
jg
push
lahf
sub
divb
push
cmp
lcall
xor
outsb
sbb
wrmsr
imul
shlb
fisubrl
and
testb
hlt
xchg
xchg
mov
mov
clc
pusha
pop
mov
xor
in
pop
dec
lock
outsl
sbb
repnz
fdivl
repnz
sbb
push
std
aaa
fldt
icebp
mov
and
jno
add
aas
std
in
add
aam
mov
mov
push
test
pop
cmp
xchg
inc
or
loopne
inc
imul
packuswb
inc
xchg
stos
inc
mov
jge
mov
in
addl
mov
movsl
pushf
xchg
lods
test
insb
inc
jl
or
sbb
sub
cmp
int3
in
aad
mov
mov
push
insb
inc
jl
or
sbb
sub
cmp
enter
in
mov
mov
pop
insb
inc
jl
or
xor
fcompl
in
clc
mov
mov
xchg
sub
inc
jne
lcall
test
ret
imul
or
cmp
sub
adc
sub
pop
out
push
pop
mov
sub
or
or
sti
sbb
or
cmp
sub
js
adc
imul
mov
enter
call
fstpt
lret
sub
js
push
cmp
cs
pop
mov
cmp
jmp
xchg
push
fwait
sub
js
dec
pusha
repz
std
push
jno
shlb
popf
mov
mov
dec
data16
movsb
int
jo
bound
in
xchg
ja
lods
int3
fcom
add
clc
repz
aam
stos
cs
mov
cmp
or
int
enter
push
cmp
jmp
sti
adc
jg
sti
xchg
adc
ja
cmp
dec
fcmovnu
js
or
add
push
insb
adc
mov
movsl
push
shlb
dec
adc
les
inc
dec
lods
push
clc
hlt
push
add
dec
push
arpl
sub
cs
mov
sbb
or
movsb
sbb
or
cmp
sub
js
push
pop
mov
sub
sbb
or
mov
test
clc
cmp
out
cmp
loope
mov
lods
jbe
jg
movsb
jge
insl
scas
pop
subl
xor
add
adc
or
roll
icebp
and
cs
mov
leave
dec
scas
adc
lea
mov
jbe
dec
fwait
js
push
pop
mov
sub
sbb
or
sti
sbb
or
cmp
sub
js
push
pop
mov
sub
sbb
or
sti
sbb
pusha
push
aad
ljmp
pop
add
arpl
push
jge
int3
sbb
ss
pop
test
jno
icebp
cmp
adc
dec
lods
mov
stc
hlt
xchg
fs
inc
mov
jo
aam
inc
mov
sbb
xor
jbe
mov
lock
xor
rcll
js
push
push
test
out
mov
mov
and
fisttps
xchg
sub
jg
daa
pop
das
sub
mov
add
std
xor
fwait
scas
and
mov
ss
iret
mov
ja
jl
lret
leave
test
sub
dec
sbb
loope
mov
sti
mov
sbb
ds
outsl
outsb
scas
js
inc
mov
and
push
test
fstpt
imul
dec
es
mov
inc
add
dec
jg
stos
stc
shll
jbe
jp
cmpb
jo
mov
rol
stos
mov
andl
pop
xchg
or
and
mov
mov
leave
jmp
adc
cltd
add
lods
pop
int
stos
lret
and
pop
lods
push
sub
ror
leave
push
pop
sbb
test
pop
lods
lock
pushf
shrb
mov
dec
aad
nop
into
dec
inc
int
and
js
lahf
inc
mov
xchg
lods
fcmovnu
je
stos
repz
add
aam
sti
pop
jo
sarb
lret
sbb
jns
mov
push
popw
test
or
sbb
and
mov
cmp
xor
data16
hlt
dec
movsl
mov
popf
mov
int
test
out
in
cmp
adc
shl
dec
lea
sub
mov
dec
ret
push
cmc
outsl
dec
sbb
xchg
sbb
subb
lods
pop
lret
pop
jecxz
cli
jo
es
aaa
loope
jno
xchg
pop
mov
insb
fmulp
jge
adc
fwait
mov
mov
xchg
cmp
mov
push
or
shlb
and
pop
negl
or
add
bound
out
loope
push
xchg
rcll
sbb
dec
aaa
pop
or
data16
lcall
jno
mov
and
out
ret
in
js
ret
idivb
and
and
stc
mov
xchg
mov
rorl
cs
arpl
inc
loopne
or
push
cwtl
mov
wrmsr
sbb
and
mov
mov
fs
cmp
rorb
fs
pop
push
xor
mov
cmp
add
xor
jl
clc
xchg
pop
shrl
jecxz
lret
jo
in
mov
fnsave
jmp
xor
cmp
xor
fcmovb
popf
mov
sub
lock
jns
mov
mov
jns
cmp
test
dec
bound
adc
cmp
ss
pop
loope
mov
mov
insl
inc
jg
rcrl
in
add
mov
sti
jmp
cmp
lock
scas
and
insl
jo
ljmp
int
addb
scas
sub
les
stc
dec
dec
imul
mov
jge
xor
fisttpl
xchg
xchg
fisubs
loope
shll
inc
mov
int3
or
arpl
push
cmpsl
aad
sarb
stos
imul
sarl
lods
or
dec
dec
clc
repnz
xchg
cld
cmpsb
push
and
sbb
xchg
ds
insl
in
lock
dec
xor
mov
addr16
mov
dec
fmulp
dec
push
sub
push
aad
sub
iret
int3
xchg
sti
cs
and
fmul
mov
rorl
fdivp
stc
cmp
daa
fstpt
cltd
mov
jne
sbb
dec
lods
test
lock
fcmovbe
arpl
pushf
cmp
clc
mov
jno
out
or
out
ss
mov
mov
scas
jmp
and
lret
repnz
test
mov
outsl
lcall
add
loope
jns
cmp
clc
bound
jecxz
dec
mov
sbb
jo
mov
mov
push
pop
mov
pop
sbb
js
fiaddl
into
in
popa
pop
or
mov
mov
push
adc
or
jg
inc
jnp
mov
aaa
mov
loope
xchg
mov
jecxz
fstpt
cs
mov
icebp
imul
incl
adc
popa
sub
movsb
xor
insb
jae
outsb
xor
inc
jae
test
addr16
fisubs
lods
js
mov
cmpsl
adc
inc
aas
fisubl
test
jge
jbe
fld
xchg
inc
mov
ficoml
ret
jle
cli
pushf
icebp
sbb
jmp
mov
dec
add
test
lret
loope
mov
ret
jecxz
jae
mov
scas
xor
fisubrs
inc
inc
cmp
xchg
sbb
lcall
pop
sub
fcoms
push
sahf
mov
and
jmp
sbbl
sbbb
call
in
fisubs
pop
push
and
outsb
cmp
mov
and
out
std
mov
push
mov
xor
mov
outsb
icebp
imul
push
mov
out
sbb
mov
inc
lock
mov
cmp
or
cmp
test
mov
stos
and
xchg
sti
mov
or
les
rorl
fwait
ret
mov
fldl
sbb
dec
mov
gs
loop
and
mov
loope
bound
cmpsl
pop
push
lea
test
lret
cltd
cwtl
push
stc
in
sub
stos
aas
lret
je
xchg
rcl
lcall
shlb
jmp
pop
imul
sbb
in
mov
insl
adcb
lret
jb
jp
scas
bound
or
and
sbb
dec
add
ja
or
pop
lock
jnp
pushf
xor
cmpb
mov
outsb
xchg
dec
push
cmpsl
jle
xor
out
iret
mov
jecxz
leave
jno
inc
call
sbb
inc
adc
test
jo
pushf
cli
pop
insb
je
sub
add
jge
adc
cmp
clc
cli
jne
popa
xchg
repz
stc
cmpsb
cwtl
sbb
push
xlat
cld
sub
pop
lea
je,pn
imul
push
jmp
lods
jecxz
xchg
push
hlt
adc
jnp
lahf
leave
lret
insb
dec
inc
das
mov
or
push
dec
adc
mov
jae
dec
xlat
ja
aas
xor
adc
mov
add
lret
into
xchg
push
add
adc
inc
push
add
repnz
mov
cmpl
into
dec
sub
in
xor
push
inc
mov
shlb
inc
jbe
fwait
jbe
dec
mov
iret
ja
repnz
jecxz
pop
mov
jns
sbb
dec
and
add
shl
sti
jne
into
or
mov
push
sti
sub
daa
sti
loop
int3
out
fstl
mov
sti
cltd
xor
test
aas
jno
iret
fbstp
out
lret
jmp
popa
ficoms
stos
stc
in
mov
pop
xor
fyl2x
add
jns
in
mov
jno
pop
lods
pop
push
pop
xchg
jne
mov
push
jo
loopne
and
mov
push
dec
mov
push
inc
jb
mov
jle
pushaw
test
pushf
cmp
outsl
pop
dec
ficomps
add
pop
les
mov
pop
mov
mov
adc
mov
loope,pt
cmpsb
xchg
fstpt
sub
cld
inc
pop
cmp
mov
inc
aad
enter
mov
cmp
ss
inc
aam
loope
cmp
aad
or
mov
popf
imul
pop
int
data16
cld
pop
into
aaa
push
mov
aaa
iret
sbb
jne
lret
dec
inc
lcall
mov
pop
pop
lods
sub
loopne
pusha
or
lods
int3
inc
lret
jge
jno
loop
add
lock
jno
push
mov
shl
inc
insb
jb
and
cs
sub
mov
js
push
fistpl
inc
add
xor
loope,pn
dec
shlb
mov
daa
push
and
cmp
lea
jl
insl
arpl
and
or
fnstcw
cli
inc
or
mov
inc
jae
lods
xchg
push
addb
fnstenv
add
dec
push
mov
jge
outsb
pop
xor
mov
mov
cmp
cmp
dec
pop
ja
iret
jmp
xor
xchg
ret
out
mov
bnd
and
or
adc
in
aas
xor
push
inc
xchg
cmp
fiadds
pop
fwait
decb
movups
sbb
and
push
jge
adc
sbb
xor
vcvtps2dq
cli
jmp
pushf
les
cmc
pop
pop
xor
jbe
je
pop
cmpsb
fcompp
xchg
dec
sbb
shll
cld
jecxz
or
lds
data16
and
outsb
jbe
bound
xor
frstor
or
push
add
push
sbb
xor
in
push
adc
xor
test
push
add
js
nop
cwtl
icebp
jbe
lret
cld
xchg
sub
mov
jno
xor
lret
ja
xlat
mov
int3
ret
sbb
je
push
into
nop
mov
jg
pop
pop
fidivrs
shlb
orl
out
pop
repnz
les
push
into
cmpsl
test
hlt
xchg
jno
les
cmp
das
cltd
scas
aam
scas
push
push
add
jecxz
cmp
dec
rcrl
fdivrl
out
out
aaa
sbb
mov
repnz
pop
xchg
inc
cld
pusha
mov
cmp
add
testl
sti
cmc
int
adc
icebp
lahf
movl
adc
push
mov
add
sbb
popa
lods
idiv
rcl
xor
pop
mov
fildl
je
xor
shlb
hlt
lret
lahf
outsl
add
fisttpll
xchg
adc
cmpsl
hlt
push
sbb
jg
sub
leave
sbb
pop
ret
fs
inc
mov
rcll
adc
sub
call
popa
mov
sub
cmpsl
cmp
les
sub
repnz
into
pop
sbbb
cmpsb
loop
sub
pop
lret
sbb
mov
das
pusha
call
test
jns
and
mov
add
roll
arpl
scas
push
mov
mov
add
mov
xchg
icebp
sub
jno
push
dec
repnz
jo
mov
bound
arpl
sub
dec
jns
jecxz
jnp
jb
mov
icebp
mov
enter
jle
mov
pop
daa
in
addr16
cs
fisubs
ret
mov
addl
push
subb
push
out
out
dec
jmp
jl
cmpsb
mov
in
sbb
mov
xor
loopne
mov
int
stc
dec
push
clc
mov
les
fists
int
mov
mov
fbstp
mov
add
cwtl
adc
adc
dec
mov
outsb
mov
push
fsubl
clc
sbb
pop
iret
cmp
mov
cmp
out
loope
fidivs
sub
mov
div
sahf
outsb
sbb
cmpsb
mov
cs
cmc
add
xor
leave
hlt
mov
test
scas
pop
sub
ds
dec
mov
and
call
out
and
mov
mov
dec
inc
mov
ljmp
jo
cmp
fistl
adc
scas
sub
jp
push
int
mov
outsl
xorb
or
xchg
push
test
in
in
mov
ljmp
dec
mov
dec
xchg
ljmp
xor
cmp
mov
sub
out
jmp
add
mov
xorb
lcall
push
fdiv
icebp
icebp
rcl
add
lret
loope
nop
fadds
jmp
mov
add
lods
inc
cmp
out
mov
or
decl
sub
inc
sbb
jg
js
or
push
push
sub
xor
jno
pop
inc
fcmovnbe
mov
mov
mov
mov
rcrb
test
aaa
cwtl
mov
lahf
pop
fnstsw
rolb
fstl
xor
insb
add
jb
pop
scas
cmpsl
adc
enter
repnz
push
nop
in
cwtl
cmpsl
sub
ds
shlb
cmpsl
xlat
add
lret
rclb
loopne
pusha
roll
ds
mov
ljmp
cmp
in
add
dec
es
fiaddl
and
addr16
xchg
dec
xor
cwtl
loop
and
jnp
jge
push
jnp
inc
aad
sub
push
inc
call
xor
cltd
push
cmp
pop
iret
ja
xchg
push
test
fstps
sub
fcoml
add
mov
mov
scas
cld
mov
leave
push
push
mov
out
adc
cmp
pop
aad
in
rorl
in
cmc
pop
out
jo
jo
pop
push
loop
and
stos
jge
push
cmp
ds
mov
xchg
push
in
sbb
rorb
bound
jbe
notb
adc
ss
xor
lds
fcompl
mov
nop
rcll
imul
mov
dec
sbb
mov
stos
xlat
lret
dec
jle
sub
sbb
sbb
pop
fcompl
mov
push
loopne
or
in
and
xor
rcrl
cmpsb
lods
loope
jmp
fcomip
sub
xchg
outsl
dec
dec
int
ss
fwait
inc
jns
das
jecxz
mov
loop
cmp
jle
jmp
je
pop
les
pop
push
js
inc
mov
xor
shll
adc
xchg
nop
inc
dec
sbb
ja
data16
addr16
imul
in
inc
addr16
xlat
push
cld
lock
shll
mov
jp
adc
jb
cwtl
fisubs
pop
lds
imul
xor
push
mov
jge
in
out
mov
jl
jmp
mov
sub
inc
xchg
dec
aas
jns
insb
repnz
cmp
xchg
into
adc
bound
aam
int
int
shlb
decb
inc
stc
mov
push
jle
xchg
shll
jmp
cmp
lea
cmpsl
push
mov
icebp
push
mov
mov
adc
notb
xor
xchg
mov
xchg
cli
mov
mov
xchg
fwait
lahf
inc
ljmp
icebp
loop
pushf
push
push
test
dec
in
cmp
xchg
push
jb
negb
sub
cmp
cwtl
push
jbe
cwtl
sbb
cmp
pop
dec
ss
push
mov
fmul
nop
or
xor
sbb
out
lds
jg
push
lahf
add
lods
sahf
lcall
sub
jl
ds
sahf
or
fstpt
and
add
add
xchg
in
test
push
bound
and
mov
cltd
pop
xor
mov
or
test
push
test
mov
imul
inc
stos
sbb
jle
xor
les
sub
pop
imul
inc
push
cmp
aaa
pop
jno
push
inc
mov
ret
jne
mov
les
inc
push
mov
mov
or
das
or
push
jo
daa
or
cmp
js
mov
add
sub
lods
stc
bound
je
jmp
inc
mov
insb
mov
xchg
mov
xchg
sub
add
add
pushf
and
xchg
push
inc
pop
push
call
sub
mov
js
pop
pop
push
sbbl
jmp
xor
and
adcb
shrl
push
jecxz
xorl
xchg
xchg
call
sub
sbb
cmp
xchg
pop
xor
repz
iret
repz
dec
movsl
dec
mov
ds
or
movsb
std
repz
lret
pop
scas
sbb
cmpsb
inc
out
jp
pop
ret
repz
popa
push
mov
leave
add
rep
inc
and
icebp
xor
pop
ror
dec
lret
cmp
pop
xchg
aas
lret
lahf
mov
fwait
cmpsl
sbb
aad
stc
insb
movsb
dec
int
pop
int3
aad
mov
call
arpl
fistps
mov
test
jo
pop
fcomps
outsl
mov
mov
xor
cmpsb
addr16
cwtl
mov
ds
negl
inc
pop
into
push
aaa
lea
lods
loope
aas
out
inc
fstp
pop
xchg
dec
in
pop
sbb
jb
lret
sbb
scas
scas
fucomip
imul
inc
adc
shll
lods
mov
es
mov
stos
in
fcmovnbe
xor
sarb
dec
sbbl
int3
pushf
xor
sbb
lea
mov
cmc
or
sbbl
rolb
sbb
fidivrl
outsb
pop
lea
fcmovne
push
jns
push
orb
sbb
lcall
stos
sub
clc
add
cmpsl
insl
inc
push
add
aam
pop
pop
cs
dec
and
test
push
stos
lcall
fisubs
nop
ret
jecxz
int3
inc
mov
pushf
mov
mov
xor
movsl
mov
add
pop
mov
mov
loop
insl
mov
int3
sub
jmp
daa
sub
lcall
dec
sbb
hlt
shll
int3
mov
clc
dec
adc
in
rcll
inc
insb
lret
mov
pop
and
clc
push
mov
push
sbb
push
cmc
dec
in
push
ss
cli
enter
or
mov
stos
fdivrs
bound
and
mov
jp
sub
dec
enter
jmp
es
ret
aas
cmp
xchg
cwtl
push
and
mov
adc
js
jns
scas
cli
outsl
arpl
iret
cmp
test
fcomps
scas
in
into
jge
sbb
push
fs
inc
adc
or
or
andl
rcl
inc
es
fistl
outsl
subl
out
loope
mov
or
movsb
mov
xorl
mov
leave
cwtl
shll
pop
mov
stos
adc
cmp
sti
stos
rolb
dec
ret
jmp
loop
movsl
jo
push
popf
outsb
sbb
lret
jmp
xor
popa
in
orb
insb
fildl
or
ret
unpckhps
add
ja
mov
add
in
cmp
or
mov
fcmovne
pop
sbb
es
cmp
pushf
jae
nop
ds
xchg
aad
xchg
imul
add
scas
lods
push
ret
xlat
inc
pop
test
xor
sbb
jbe
cli
mov
sub
mov
mov
imul
mov
xor
movsl
pusha
xor
mov
mov
aad
dec
mov
pushf
mov
imul
lods
pop
and
repz
lahf
ja
out
mov
sub
movsb
pusha
les
xchg
daa
sar
cmp
xchg
fidivrs
outsb
xor
mov
gs
jnp
xchg
adc
lcall
fldl
insb
push
mov
mov
movl
lds
popf
pop
mov
nop
test
mul
sub
ss
mov
out
dec
cli
subl
scas
adc
pop
add
pop
mov
into
sbb
cmp
cmp
and
push
mov
dec
ret
inc
lods
out
add
lea
push
cmp
mov
xor
in
push
or
fs
sub
dec
lds
adc
mov
xchg
pop
fnstenv
ret
xchg
test
mov
mov
xor
pop
adc
pusha
pop
dec
and
and
pop
xchg
jb
hlt
sub
shll
dec
in
cmp
dec
test
or
push
jp
sahf
mov
and
in
aaa
shlb
movsb
pop
mov
clc
shrl
xlat
mov
ret
mov
cld
js
sub
ret
sub
jbe
call
dec
mov
pop
pop
xor
ds
jp
pushf
sahf
cmpsl
lods
shlb
dec
lods
push
out
popf
sub
pop
jl
push
mov
jnp
and
sbb
pop
stc
inc
mov
iret
fprem1
mov
xor
popa
push
inc
mov
dec
mov
sub
addl
lahf
rclb
fidivs
inc
adc
jp
fidivs
std
js
ss
shll
sbb
pop
popf
xlat
jp
cmp
jno
mov
adcl
or
jmp
andl
sub
add
add
sahf
jle
mov
orb
loopne
adc
xor
sahf
ja
mov
pop
stos
js
scas
popf
mov
popa
lods
icebp
push
mov
or
stc
push
push
rcll
lods
fimull
arpl
stos
xchg
fidivs
fistpl
mov
jge
sbb
jmp
negl
mov
fidivs
xor
popa
lcall
inc
and
in
lock
ret
sbb
test
jae
and
lds
sbb
xlat
or
adc
js
mov
jmp
vpmacsdql
or
pop
stos
dec
fwait
js
push
pop
mov
sub
sbb
or
sti
sbb
or
cmp
sub
js
push
pop
mov
sub
sbb
or
sti
sbb
or
cmp
sub
js
push
pop
mov
sub
sbb
or
cli
sbb
or
cmp
sub
js
push
icebp
mov
mov
pop
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
pushf
enter
call
in
xchg
fnstcw
fs
push
sbb
cmp
cmp
enter
call
xchg
cwtl
cmpsb
test
fisttpll
pop
add
js
insl
pop
sbb
sub
cmp
enter
call
cwtl
mov
dec
pop
jnp
or
pop
inc
push
dec
pop
dec
mov
test
mov
push
xchg
stos
dec
mov
scas
xor
insl
xlat
cmp
enter
and
inc
cwtl
imul
cltd
xchg
jnp
mov
nop
mov
sbb
lds
jnp
dec
test
xchg
notl
mov
int
std
jge
mov
mov
cmpsl
data16
sub
sbbl
clc
pop
fistpll
or
daa
mov
add
mov
cmpsb
mov
jae
jbe
lods
pop
pop
or
xchg
into
test
sbb
xor
sbb
push
dec
sub
movl
call
mov
pop
dec
dec
pop
jle
outsl
js
or
sbb
sub
jle
enter
test
sti
in
movsb
int
int3
xor
push
inc
adc
sbb
push
jb
inc
pop
push
pop
movsb
mov
mov
clc
push
xchg
inc
sub
add
arpl
mov
ss
scas
mov
mov
mov
mov
inc
dec
push
pop
pushw
push
or
sbb
sub
cmp
enter
call
xchg
cwtl
cmpsb
test
mov
pushw
push
or
sbb
sub
cmp
enter
xchg
push
es
cwtl
add
add
das
dec
cmpsl
adcb
inc
outsl
test
dec
sbb
adc
push
push
out
hlt
ja
adc
out
cmp
test
xlat
lods
rcl
add
ja
jmp
adc
inc
pop
adc
sbb
dec
mov
fbld
dec
addr16
ljmp
call
pop
int
xlat
dec
sub
sar
insb
adc
out
ds
jle
cmpsl
cmc
enter
ds
xchg
lret
out
stos
leave
loop
int
stos
cmp
in
xchg
inc
sbb
iret
adc
int3
jae
subl
push
xchg
popf
push
sbb
arpl
mov
pop
ljmp
mov
xor
popa
data16
aaa
jbe
sbbl
inc
rorl
sbb
adc
or
mov
addr16
xor
pop
into
loop
test
mov
out
cwtl
sbb
mov
mov
adc
pop
fistps
fisttpl
push
das
push
fsubp
aaa
inc
sub
sbb
leave
and
out
sub
movsl
inc
das
cmp
sub
mov
ret
or
rcll
insl
or
inc
sbb
in
ret
stos
std
push
xchg
mov
push
scas
sub
aam
mov
and
inc
xor
xchg
xchg
loop
jle
bound
test
sub
inc
pop
pop
stos
mov
mov
outsb
push
pop
imul
push
popa
inc
lds
xor
inc
jmp
mov
mov
test
ss
iret
insl
mov
jns
rorb
movsb
pop
sub
xchg
ss
lahf
out
and
xchg
cmp
fs
pusha
push
lahf
mov
mov
inc
jecxz
mov
mov
cmpsb
fnstsw
sub
std
and
arpl
out
pushl
xor
mov
je
cmp
inc
xor
arpl
push
pop
and
fcomps
sahf
lea
out
mov
mov
stc
fisubrs
ret
int3
push
add
mov
inc
shll
sbb
sub
mov
dec
mov
das
cmpsb
je
orb
push
cmpb
cmp
cmp
xchg
aad
adc
pop
jl
insb
cmpsb
lock
iret
mov
sub
fisttpl
popf
pushf
ret
lcall
call
lock
and
add
mov
or
ss
mov
xchg
push
and
fstp
or
sub
push
ss
push
cmp
and
adc
cmp
or
notl
inc
test
xor
repnz
fs
dec
in
jns
mov
jbe
pop
dec
fs
in
adc
fidivrs
xchg
mull
lods
icebp
ja
outsl
jmp
jbe
mov
inc
fildll
je
fwait
jbe
cmpsb
enter
push
int
out
stc
or
notl
iret
mov
dec
arpl
cmpsb
call
in
xchg
scas
mov
mov
negl
icebp
inc
sbb
imul
fwait
in
arpl
orb
std
add
and
scas
pop
dec
ds
aaa
loopne
dec
or
adc
repz
inc
cmp
jmp
xor
mov
push
dec
push
inc
enter
out
inc
xchg
add
sub
mov
dec
incb
mov
les
sub
cmp
jle
loope
imul
lcall
sub
cmpsb
add
imul
inc
test
pusha
stos
pop
xchg
add
sub
add
incl
mov
push
push
ret
mov
jnp
push
cli
das
and
mov
call
and
add
jo
push
fnstenv
aam
mov
test
dec
movsl
add
stos
mov
scas
mov
mov
shlb
scas
xor
dec
pop
dec
inc
mov
mov
out
pop
xchg
xor
jge
push
data16
das
cld
mov
in
scas
sub
iret
adc
mov
cmp
dec
dec
stos
into
add
mov
and
cld
push
mov
push
or
adc
mov
jae
arpl
mov
add
inc
jmp
and
and
adc
repz
pop
pop
scas
call
lea
xchg
mov
push
cli
push
imul
imull
mov
jne
popf
insb
sbb
jae
daa
and
repnz
inc
fwait
jp
dec
sahf
sub
push
movl
int
insb
pop
xlat
jbe
mov
cmpsb
insb
test
add
cmp
xor
lds
jbe
pusha
sub
in
imul
int3
je
jno
clc
mov
cwtl
xor
pop
fistpll
insl
loope
mov
loopne
das
ja
imul
ja
cmp
mov
loope
jae
mov
rorl
fs
mov
dec
mov
xor
in
xor
fisttpll
xchg
pushl
sbb
dec
je
ljmp
pop
test
dec
leave
sbb
mov
push
sbb
lods
mov
out
push
jo
fsub
xchg
leave
fsubrl
pop
shrb
inc
iret
mov
fiadds
fs
leave
xchg
aaa
loopne
jo
popf
lock
add
sbb
icebp
pop
mov
shrb
push
mov
push
adc
sub
orb
ja
nop
cmp
dec
mov
lea
mov
mov
or
sub
jle
and
pop
dec
out
ja
ds
and
aad
cmp
push
mov
sbbl
lock
movsl
icebp
mov
cli
dec
mov
popf
xchg
jge
dec
fwait
mov
inc
cmp
inc
jecxz
popf
sbb
and
or
outsb
or
and
jmp
jbe
or
dec
fistpll
xchg
cmp
mov
fcomip
add
add
data16
es
jl
cmpsb
jo
ror
xchg
popf
cmp
jmp
sbb
scas
loopne
mov
fwait
xor
cld
mov
jns
test
cmc
bound
pop
cmp
and
daa
lods
aad
icebp
pusha
adc
jne
xorb
xlat
xlat
je
pop
mov
cmp
or
mov
pop
out
pop
ficompl
inc
xchg
and
and
or
out
in
xor
xchg
out
jno
rcrb
xchg
lea
rcrl
mov
sub
mov
fsubr
inc
stos
mul
test
jle
loopne
and
lods
lcall
dec
mov
pop
out
push
aad
movsb
and
ljmp
pop
aas
movsb
and
mov
or
cmpl
loopne
int3
jnp
aad
mov
inc
scas
cmp
jmp
xchg
sbb
cwtl
add
shlb
sbb
pxor
jle
lahf
jge
mov
stos
pop
mov
insl
sahf
loop
stos
cmp
out
and
cli
std
xlat
xor
in
add
test
push
je
repz
add
lret
xchg
mov
or
cmpsb
xchg
and
ljmp
cltd
mov
fmuls
mov
mov
jbe
adc
adc
loopne
jle
stos
or
rolb
cmp
xor
frstor
pop
les
or
adc
adc
pop
mov
aam
dec
out
xchg
mov
mov
adc
std
dec
push
iret
jp
mov
rcr
and
test
push
cmpsl
call
lahf
pop
call
cmp
add
inc
inc
jmp
dec
mov
je
xor
sbbl
add
orb
loop
inc
scas
mov
ja
in
ror
lret
cmp
testb
xchg
xorb
xor
pop
insb
xor
jb
insl
aaa
cmpsb
pop
sbbb
sti
and
dec
sbb
xchg
arpl
pop
and
push
push
pop
fdivl
adc
jo
push
lahf
or
dec
pop
js
test
lock
decb
aaa
pop
sti
test
jo
dec
push
mov
xor
dec
loope
xor
or
cmp
mov
les
sub
mov
popa
aas
sbb
call
cmp
pop
iret
cli
fbstp
lock
incl
data16
clc
push
or
popa
and
xor
fs
pusha
pop
jecxz
lret
mov
inc
xorl
jg
fs
in
pop
lods
cs
mov
xor
push
add
or
fs
dec
push
pushf
sbb
int3
cmp
test
xor
xor
das
out
test
xor
cmp
xchg
fwait
out
shl
ret
fidivrs
inc
push
faddl
xchg
or
fdivrl
jae
ret
js
jbe
xor
mov
sbb
mov
loop
adc
shlb
xchg
xor
das
shll
loopne
mov
sbb
lea
jle
jge
lret
in
mull
popa
icebp
xchg
sub
pop
pop
test
sub
mov
push
bound
pop
and
loopne
cmp
call
clc
les
loop
or
nop
cmp
jecxz
mov
cld
pop
call
adc
hlt
aas
movsb
aad
lcall
cmp
sarl
cmp
xchg
sbb
mov
mov
sub
xchg
and
testb
mov
cmp
pop
or
leave
test
nop
stos
cmp
pusha
xor
arpl
push
dec
cmp
fldcw
out
popf
orb
adc
and
lock
js
jp
push
jnp
push
jbe
dec
mov
add
cmc
orl
dec
lret
adc
test
xor
fisubs
sbb
mov
popf
cmp
stc
mov
cs
mov
mov
mov
sbb
or
pop
incb
outsb
pop
jbe
int
push
jno
mov
mov
cmc
ljmp
sub
sbb
dec
vpmullw
mov
and
mov
in
mov
orb
dec
dec
sbb
add
add
idivb
pop
sbb
fidivrl
inc
divl
enter
xlat
cld
mov
push
shlb
insl
lahf
mov
or
pusha
dec
and
data16
xor
mov
negb
or
rcr
sbb
stos
cmp
popf
push
ret
add
arpl
mov
test
fcmove
aam
divl
jae
adc
nop
aad
outsb
stos
push
popl
repz
xchg
jne
jno
daa
mov
dec
jp
push
pushf
fwait
push
jae
popa
xchg
jne
jp
movsb
movsl
into
adc
out
cltd
sbbb
ret
push
jp
and
pop
ret
xchg
dec
ficompl
sti
shrb
dec
pop
jne
xchg
xchg
out
sbb
dec
xchg
rclb
xchg
call
jle
lret
push
dec
gs
sbb
xchg
or
and
aas
nop
xor
fcoms
repnz
or
and
stc
push
mov
push
jge
aas
push
ret
pop
bound
arpl
das
lds
add
in
jle
es
push
int
out
clc
loop
dec
xlat
fxch
movsb
pop
cltd
or
sub
jo
jbe
lret
mov
and
jle
faddl
cmp
mov
mov
mov
xor
xchg
xchg
into
xor
movsl
xchg
cmp
pop
popf
mov
loop
sub
dec
into
movsb
inc
push
jne
ja
clc
and
aam
lahf
fcoms
push
enter
adc
mov
xchg
lcall
mov
jns
dec
pop
call
sbb
inc
je
mov
mov
add
sar
shrl
stc
cmp
inc
loopne
push
mov
out
xor
stos
xchg
jecxz
cld
and
dec
adc
jo
je
bound
out
popf
clc
loop
dec
dec
dec
fs
outsl
shrl
jns
outsl
cmp
int3
sbb
stos
jbe
pop
pop
imul
cmp
push
and
push
rcr
adc
fstpt
sub
movsb
xor
in
mov
cli
push
lahf
mov
cld
dec
cmpsb
int
iret
aam
popf
cmp
dec
sbb
sub
outsb
mov
std
popf
pop
sub
push
test
lcall
jl
pop
hlt
movsl
into
sub
outsl
movsl
xlat
out
fwait
pop
fistl
jmp
out
xor
jnp
dec
cwtl
fisubs
lea
popf
mov
subl
sbb
stos
pop
popf
out
fisubrs
push
add
stos
decb
sbb
xor
or
hlt
xchg
dec
hlt
leave
in
ror
fnsave
insb
cmc
xchg
cwtl
int3
mov
sub
dec
adc
js
fiadds
cld
pop
xor
cmp
outsl
and
and
andl
loopne
loopne
fistpl
jg
gs
scas
sahf
and
cmpb
and
push
or
pop
or
sahf
js
and
dec
je
adc
shrl
add
mov
insl
shrb
adc
nop
adc
out
mov
jmp
mov
cltd
bound
cltd
roll
fidivrs
dec
or
lret
mov
jbe
push
sub
mov
mov
outsb
lods
imul
dec
fsubrl
aam
bound
or
push
pop
jno
gs
ror
jl
gs
mov
daa
gs
mov
sub
ret
aad
push
ss
cmc
jmp
cwtl
js
mov
ret
push
cmp
fcompl
lds
pop
jmp
mov
std
fcomp
adc
push
out
rcr
ljmp
add
xchg
cmp
mov
outsb
xchg
jp
mov
stc
aaa
pop
sar
repz
inc
push
or
adc
fiaddl
ficompl
pop
iret
mov
popa
push
mov
jle
add
mov
test
or
xor
sub
ljmp
test
add
outsl
out
outsb
sub
rcr
jl
jnp
adc
jae
jl
xchg
push
inc
mov
add
xor
cmpsl
pop
dec
mov
movsb
in
or
lock
cli
adc
pushf
pop
xorl
mov
lret
insb
xchg
scas
adc
test
ja
imul
stos
mov
xor
and
add
ja,pt
movsb
addr16
pop
adc
xorb
xchg
sbb
and
dec
shr
dec
xchg
test
test
cmp
imul
sbb
and
nop
sbb
push
daa
icebp
loopne
hlt
adc
call
lret
in
jns
out
mov
subl
aas
cmp
xchg
imul
cmp
ljmp
shrl
sti
movsb
sbb
mov
loopne
pop
ret
icebp
add
xor
cmp
test
call
icebp
cmp
adc
adc
sub
cld
xor
cmpsl
mov
pop
inc
jbe
in
sbb
stos
ja
cmp
lea
or
and
js
jmp
inc
xchg
nop
inc
test
test
push
cli
push
js
xchg
jle
push
popf
add
imul
push
lds
add
in
mov
in
sbb
fildll
movl
or
mov
leave
xor
lret
pop
push
cwtl
mov
daa
out
jo
or
pop
pop
dec
and
adc
push
jnp
pop
and
lods
int
arpl
mov
ss
sub
orl
cmc
cwtl
xchg
inc
nop
fs
mov
dec
notb
fsub
pop
stos
xchg
lcall
jecxz
xor
dec
test
pop
into
pop
inc
cmp
test
sahf
icebp
das
in
jecxz
cmpsb
inc
pop
jle
sub
jo
sbb
jl
inc
xlat
mov
test
adc
shlb
cld
push
shl
jo
add
out
rcl
sbb
xor
inc
mov
mov
lret
rolb
xchg
inc
fbld
xchg
lea
shrb
aam
dec
aas
int3
mov
in
xlat
mov
pop
hlt
cli
pop
dec
aas
pop
add
jg
sub
shlb
sbb
pop
test
gs
lcall
lea
test
pop
mov
push
out
sub
sub
iret
push
push
outsb
jnp
and
or
mov
test
pushf
std
mov
cwtl
dec
lret
mov
imull
call
lock
ficompl
mov
jp
or
jbe
cmp
sub
dec
cs
rcrl
in
lcall
imul
xor
fiadds
out
dec
mov
aaa
cltd
mov
hlt
es
jae
lds
orl
les
lcall
cli
mov
jbe
xor
lods
in
sbb
lret
push
jge
icebp
mov
leave
imul
push
sbb
enter
fidivrl
adc
out
mov
xchg
jg
mov
mov
pop
fnstcw
stos
push
and
mov
in
fidivrs
add
pop
adcb
ror
cwtl
push
jmp
cmp
repnz
mov
xchg
insl
jns
addr16
jmp
fcmovb
push
rol
pop
popa
mov
loopne
and
pop
sub
fdivs
repnz
mov
std
mov
jl
sbb
pop
lods
or
out
std
gs
out
and
in
inc
or
mov
add
mov
inc
xchg
push
shlb
fs
inc
xor
rcll
insl
mov
jmp
imul
xor
or
jnp
xor
movsb
pop
and
push
sub
push
jae
mov
loop
lcall
sbb
and
xor
sbb
add
ret
pop
pop
adc
movsl
push
push
test
xchg
bound
lret
or
or
push
or
cmp
icebp
cld
adcl
jle
jbe
test
in
jne
popa
mov
mov
add
std
cmp
out
fdivl
rcl
mov
testl
and
mov
xlat
sarb
inc
aam
cmc
mov
pop
sar
ds
shll
call
test
out
mov
orb
xor
mov
jo
divl
lret
jmp
dec
or
sub
cmpsl
jb
mov
xlat
int3
pop
clc
test
or
mov
jl
mov
aaa
mov
jo
jne
mov
and
ja
pop
ret
add
mov
mov
and
mov
shlb
test
xor
sub
lock
jle
mov
sarl
sbb
rcrb
sbb
lret
rcrb
inc
call
cli
rcrl
mov
mov
jbe
inc
mov
fidivl
fs
rolb
adcb
xchg
jmp
orl
inc
sub
pslld
mov
jecxz
xchg
adc
jns
ret
in
add
or
mov
sbb
enter
pop
loopne
cld
mov
repnz
push
push
pop
pop
ret
into
inc
clc
lds
xchg
mov
mov
stos
in
ljmp
or
leave
sbb
and
add
loopw
mov
dec
ss
xor
outsl
idivl
das
pop
int
and
jp
in
in
je
push
out
jae
arpl
or
in
popf
or
xor
dec
mov
ja
and
jb
mov
imul
in
fidivrl
jae
mov
mov
mov
enter
inc
stc
sbb
test
and
lret
pop
mov
pop
ret
icebp
mov
out
shrl
cmp
mov
ss
jp
mov
sub
lahf
mov
mov
cwtl
lret
into
loop
subl
sub
add
cmp
pop
dec
rcl
outsb
xor
jp
cmpsl
nop
mov
mov
cltd
or
fstpl
jae
push
test
test
stos
dec
lods
out
ja
insl
dec
mov
and
out
inc
dec
ss
jecxz
inc
pop
scas
out
adc
test
loop
addl
int
orl
mov
test
mov
addr16
scas
bound
sub
jecxz
fbld
or
push
jg
sub
in
xchg
sbb
fisubrs
sbb
push
inc
js
xor
repz
ds
add
scas
inc
into
sbb
cli
test
into
jnp
mov
cmp
arpl
adc
roll
pusha
or
int3
pop
faddl
sbb
mov
test
adc
cmp
subl
aaa
frstor
xlat
call
je
sbbb
adc
sahf
sbb
ret
popf
mov
leave
sub
enter
jecxz
or
push
push
and
jo
les
mov
pop
jae
inc
call
xchg
cwtl
cmpsb
test
mov
pushw
push
or
sbb
sub
cmp
enter
call
xchg
cwtl
cmpsb
test
mov
pushw
push
or
sbb
sub
cmp
enter
call
xchg
cwtl
cmpsb
test
mov
bound
js
or
sbb
sub
cmp
enter
call
xchg
cwtl
es
js
dec
test
sbbb
push
mov
sub
movl
movl
movl
movl
cmpl
jne
pushl
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
pop
hlt
pop
in
aam
les
daa
leave
add
adc
inc
mov
xor
stos
out
testl
aam
les
push
mov
xchg
ja
xchg
rcll
movl
add
in
pop
std
daa
int3
aaa
faddl
push
mov
xchg
aam
cltd
xor
cwtd
imul
xchg
push
mov
mov
in
ja
imul
sub
in
dec
int3
scas
push
mov
mov
stos
outsb
rcr
mov
push
insb
imul
sub
mov
out
or
ljmp
out
out
fwait
sbb
inc
sbb
std
fs
fnstsw
adcb
inc
stos
push
sbb
mov
inc
mov
mov
loopne
add
stos
xchg
leave
cmp
mov
adc
jno
sbb
cmpxchg
je
shll
jbe
xchg
mov
mov
ds
dec
ss
pop
inc
loop
clc
or
nop
pusha
sub
dec
mov
xchg
cld
aam
sbb
push
pop
stos
repnz
out
lahf
add
pop
hlt
daa
int
les
push
movsb
addr16
ja
xchg
cmpsl
dec
mov
sub
cmp
push
testl
sub
ss
sbb
and
jnp
push
ja
push
stos
add
mov
add
inc
mov
jae
jo
hlt
jae
dec
mov
addl
ja
xchg
cmpsl
push
mov
xor
and
adc
add
hlt
pop
in
aam
les
push
movsb
addr16
ja
xchg
cmpsl
push
mov
xor
and
adc
add
hlt
mov
pushf
push
adc
popf
aas
iret
addr16
jae
and
clc
ja
xchg
push
cmpsb
fidivl
pop
add
add
sub
je
add
fadds
outsl
int
out
stos
xlat
fidivs
xchg
pop
mov
cmc
or
pushf
jae
sbb
pop
pop
enter
adc
lock
or
cwtl
clc
push
pop
cmp
pop
imul
int
test
mov
loop
lock
adc
dec
and
and
sbb
out
and
aam
sahf
or
sbb
loop
mov
std
sub
negb
stos
mov
jo
pop
jecxz
iret
dec
pushf
cmp
test
fwait
xor
push
xchg
lret
xor
jno
jne
push
push
in
push
dec
xchg
jle
inc
jae
xor
out
xor
ss
xchg
sub
pushf
inc
push
js
dec
mov
cltd
and
in
push
or
xor
std
ret
mov
xchg
fisubl
mov
mov
fdivrl
inc
mov
movsb
into
jnp
inc
push
mov
clc
imul
stc
inc
mov
pop
jbe
mov
sbb
arpl
push
sbb
outsl
pop
dec
sbbb
mov
imul
mov
popf
jb
sub
movsb
out
push
scas
and
xor
adc
push
sub
call
fsts
pop
test
es
sbb
inc
scas
jnp
push
cmc
sub
and
push
cwtl
lahf
jnp
pop
xor
jbe
adc
push
pop
and
jne
cmp
jae
mov
pop
fwait
cmp
mov
lds
into
mov
aam
inc
loopne
xchg
xchg
pop
and
scas
ret
jo
sbb
ror
ljmp
pop
outsl
clc
mov
sbb
lcall
inc
sbb
repz
in
rolw
or
pop
loop
loop
jae
xchg
mov
cmp
adc
jbe
inc
jno
mov
dec
addl
dec
aam
xchg
push
arpl
xchg
xchg
rcrb
adc
pop
jns
movq
pop
lahf
cmp
add
xorb
pop
push
xlat
dec
jge
enter
pop
cmp
sbb
pop
or
push
mov
mov
adc
mov
int
aas
xchg
test
xchg
inc
mulb
mov
jne
cs
negb
inc
xor
xchg
inc
mov
xlat
cmpsb
test
xorl
xchg
popa
lods
jge
and
rolb
leave
and
shr
test
in
or
dec
push
xchg
dec
add
push
and
test
iret
inc
push
inc
jmp
js
mov
cmp
data16
cli
mov
jnp
popf
cld
push
push
test
sbb
outsl
jp
clc
cmp
imul
in
movsb
dec
flds
into
push
int3
ffreep
pop
aaa
aas
lods
stc
dec
adc
mov
sarl
cmc
jecxz
subb
pop
or
int3
pop
mov
ret
jb
mov
lds
mov
mov
test
call
ja
loope
std
dec
hlt
imul
xchg
in
nop
inc
jae
adcl
and
insl
std
popl
lods
push
sbbb
loope
sub
or
jl
jno
adc
outsb
ds
mov
add
xor
loop
mov
movsl
cmpsl
je
seta
imul
sarb
and
icebp
aaa
add
xchg
cmp
loopne
push
aam
mov
push
xchg
imul
cwtl
dec
sahf
xor
sarl
jne
mull
fbstp
xor
insb
and
ss
fsubrs
in
mov
decb
lock
mov
push
clc
jno
push
data16
jb
sbb
adc
test
roll
adc
popf
movsl
jns
mov
bound
into
xchg
cltd
fimuls
movsl
push
cli
subl
or
inc
cltd
ret
das
gs
aaa
mov
push
imul
pop
hlt
stc
push
inc
daa
loope
mov
jg
add
scas
js
lea
sbb
leave
daa
test
fmuls
mov
nop
xchg
sbb
pop
jge
call
fwait
in
dec
pop
jns
and
sbb
sub
push
mov
call
mov
add
cmpsl
xchg
jno
jno
pop
sub
jge
cmp
arpl
sbb
pop
sub
dec
adc
lret
jbe
adc
in
inc
lret
gs
add
lahf
inc
enter
in
out
rcrl
std
sub
mov
dec
push
cmp
or
test
or
xor
cmp
lods
pop
xchg
addr16
xchg
sbb
and
jmp
adc
add
xchg
adc
test
mov
sub
inc
in
inc
jp
or
loopne
mov
decl
pushf
or
push
loop
push
loopne
fwait
mov
fimuls
fiadds
cld
add
out
inc
loope
test
sbb
inc
sbb
mov
ljmp
sub
push
cmp
cmpsl
dec
fwait
jmp
pop
mov
sahf
fwait
xor
xchg
call
xchg
jns
pop
jb
adc
pop
push
jmp
adc
loopne
adc
xchg
fwait
into
add
andb
pop
sbb
cmp
push
ficoms
idivb
clc
pushf
out
out
scas
aam
mov
test
adcb
push
test
jp
mov
adc
fidivrl
loop
xchg
lcall
mov
mov
loopne
mov
insb
lret
pop
adc
jae
add
dec
icebp
fcompl
lcall
shr
imulb
popa
cmp
test
xchg
clc
pop
sub
das
shll
cltd
popf
mov
pop
mov
js
jp
mov
mov
mov
adc
sub
test
fiaddl
repnz
sahf
pusha
add
pop
or
mov
pop
mov
daa
sub
outsb
mov
cld
push
push
repz
jnp
pushf
push
jp
pop
inc
cmp
sub
jmp
dec
daa
add
xchg
imul
jb
fidivl
xchg
fcmovnb
pop
rolb
mov
add
addb
loopne
lret
and
enter
stos
xchg
xor
mov
mov
xchg
pop
scas
cmp
lods
inc
mov
cltd
arpl
adc
decb
jns
stos
adc
nop
mov
lods
cmc
out
test
mov
pop
push
inc
push
cmp
inc
inc
ds
or
or
cmp
sti
sbbl
sub
inc
repz
xchg
rorl
sub
xor
sbb
adc
jp
or
push
pushf
push
xchg
loopne
xchg
mov
inc
ficompl
pop
pop
xor
push
and
xor
mov
ret
shr
mov
roll
adc
xorb
cmp
sti
jbe
mov
mov
cmpsb
xchg
out
sub
pop
in
pop
mov
sub
loop
movsb
inc
dec
mov
xor
push
lret
movsl
and
and
test
and
xlat
lods
sbb
pop
or
roll
aad
lret
cmp
push
mov
jp
cwtl
sub
mov
aam
add
and
cmp
jp
loopne
je
push
stos
aas
test
insl
xchg
add
imul
int3
cmp
push
sub
mov
sub
test
sarb
inc
inc
sub
mov
mull
add
cmp
or
push
xor
scas
fs
fidivl
mov
push
scas
fidivl
cmp
mov
or
loope
and
inc
jo
scas
sub
or
fistpl
shl
shrl
and
jno
fbstp
cmpsb
inc
xlat
sbb
mov
or
jle
ljmp
iret
repnz
fisubrs
rorb
cmp
lret
fdivp
and
push
push
sbb
ficoml
es
in
subl
jl
aad
inc
xor
xchg
mov
lret
shl
push
sub
push
std
aas
ficompl
rclb
lret
xchg
negb
cli
jae
jne
jle
aas
push
inc
jle
sbb
push
mov
loopne
push
mov
dec
lahf
or
cli
and
fistpl
gs
cwtl
cmp
mov
aaa
mov
ret
shrl
and
and
cmp
push
inc
xchg
leave
xchg
dec
ljmp
pop
xlat
je
add
lock
icebp
sub
push
test
pop
cld
cmpl
dec
add
movsb
jmp
cmp
mov
sbb
or
dec
or
sbb
add
xlat
xchg
in
jo
int
clc
das
aaa
and
roll
mov
fmuls
jge
fdivl
repnz
cmp
sbb
leave
jnp
sbb
imul
and
jns
mov
das
and
mov
test
cli
es
fmul
shrl
ret
ljmp
insb
xlat
xor
mov
pushf
das
inc
and
cmp
adc
and
jecxz
xor
incb
mov
add
pop
ret
jle
ret
cs
cltd
ja
jo
cwtl
loopne
icebp
nop
test
sbb
push
filds
mov
inc
push
aas
mov
stc
stc
in
fildll
cmc
cmp
ds
mov
scas
enter
ror
mov
pop
or
pushf
cli
mov
testl
push
pushf
cmp
jbe
mov
cmp
xchg
adc
loop
sbb
pop
std
mov
divl
dec
arpl
leave
lcall
movsl
mov
push
pushf
jns
xchg
imul
inc
js
jbe
cmp
pop
push
add
xchg
imul
xchg
dec
or
insl
test
pop
add
inc
roll
mov
sbb
mull
fnstsw
lret
push
inc
xor
in
movsl
pop
lods
stos
cmp
add
xor
sbb
lods
aad
pop
ljmp
mov
jecxz
pop
dec
in
xchg
xchg
cwtl
mov
jno
xor
cs
dec
test
push
vpsrad
lcall
push
cmpb
mov
aaa
cwtl
adc
inc
adc
cmpsb
int3
pop
insb
cmp
shl
jne
mov
jnp
xor
mov
sbb
js
mov
mov
bound
xchg
cwtl
push
sbb
push
jne
jae
fisubrs
xchg
jg
xchg
inc
sahf
in
es
adc
inc
cltd
les
testl
mov
lods
jge
int3
dec
js
jb
adc
ja
scas
sub
mov
lret
xchg
cmovno
fs
outsl
dec
mov
pop
inc
or
fwait
mov
push
mov
ficompl
je
dec
pop
repnz
sbb
shll
mov
push
push
sbb
sbb
notl
rorl
push
ss
notb
add
sti
sbb
jo
faddl
adc
sti
add
sub
out
jle
inc
es
mov
cs
sbb
push
sbb
pop
cs
cld
pop
mov
lea
stc
mov
mov
aad
nop
test
icebp
jnp
lods
ds
cmp
add
add
stos
push
sarb
data16
jnp
cmpsb
push
jnp
push
fdivrl
test
mov
and
sbb
addr16
pop
movsb
mov
fs
dec
add
sti
jg
jae
std
aad
and
mov
inc
mov
jecxz
insb
pop
add
jno
js
pop
iret
mov
movsb
xchg
cmp
iret
jnp
arpl
mov
mov
inc
xchg
lgs
xlat
inc
lods
xor
mov
pop
xlat
in
sub
pop
push
sbb
outsb
ret
in
mov
mov
jl
xor
pop
or
cmpsl
gs
ret
jmp
sbb
cltd
push
test
mov
movsl
jbe
hlt
pop
push
xor
lcall
push
repz
aaa
sarl
jns
enter
ficomps
shr
lods
push
mov
cwtl
movsb
cwtl
pop
sub
fwait
sbb
pop
rolb
jle
out
xchg
or
fnstsw
jp
adc
pop
or
ucomiss
cmpsb
mov
in
sarl
adc
into
je
scas
mov
xchg
movsl
iret
stc
cmp
in
cmp
cmp
stos
dec
xor
and
mov
mov
mov
jno
push
test
inc
dec
fistl
mov
xchg
out
xor
int
stos
fisttpl
pop
adc
adc
pop
leave
mov
mov
and
jno
inc
pop
pop
xlat
dec
cmp
pop
stos
xor
fisubrl
add
xchg
mov
push
shrb
rorb
mov
movsb
addr16
jl
testl
mov
mov
in
rcr
lret
mov
or
xchg
inc
jmp
ret
add
pop
test
adc
cmp
sbb
push
adc
and
je
out
icebp
dec
jno
push
or
jge
add
lods
icebp
xlat
cli
xchg
jbe
sub
xchg
jge
lahf
in
xchg
and
in
and
push
decl
dec
imul
dec
lret
cmpsb
loope
mov
jo
fstps
xchg
add
mov
jl
and
add
pop
jle
cmp
js
orb
and
pop
cmpsl
bound
aas
gs
cltd
dec
ja
fnstenv
cmp
adc
jmp
out
mov
jmp
mov
jbe
mov
ret
cmp
push
gs
xor
xor
mov
mov
es
movsl
cmp
sti
mov
das
sub
fwait
inc
enter
xor
push
mov
mov
sahf
movsb
cld
push
sbb
jecxz
out
inc
lahf
push
fwait
out
push
test
or
mov
push
mov
push
jl
push
and
into
outsb
or
cmp
sbb
shl
je
adc
shl
jp
mov
mov
cmp
or
arpl
add
js
or
xor
cmp
outsl
ljmp
jbe
pop
mov
add
cmpsl
push
aas
clc
ljmp
sti
call
jb
test
cs
orb
in
loop
out
cmp
add
dec
insl
add
cltd
xchg
push
ss
xchg
or
xor
sbb
jp
fists
mov
pop
scas
mov
xchg
in
and
sbb
push
pushf
loopne,pt
adc
stos
fstps
sub
mov
add
cltd
mov
adc
mov
jmp
add
xorb
or
push
cmp
jecxz
and
sarb
add
cs
movl
and
jecxz
jae
std
jp
mov
pusha
stos
lds
jo
push
xchg
pop
rol
sti
dec
ficomps
loop
sub
cmpsl
fisubrs
scas
mov
aaa
iret
dec
cmpl
lret
mov
fidivl
ja
sub
in
jge
push
mov
mov
pop
mov
movsb
cmp
or
pop
mov
dec
nop
ss
lods
insl
xor
sti
daa
pop
jnp
pop
sub
shlb
faddp
inc
mov
inc
out
pop
popf
aas
mov
add
mov
adc
js
es
pop
mov
test
sbb
gs
dec
sbb
inc
ja
fwait
xchg
xchg
sub
popf
xlat
push
pop
adc
add
sahf
push
pop
cmp
cmpsl
icebp
or
jl
inc
test
mov
cld
pop
and
fstpt
fwait
xorl
leave
loopne,pn
inc
mov
dec
or
sub
fldl
cld
int
push
or
adcl
push
adc
adc
cld
in
cld
mov
xor
lcall
repz
sbb
cltd
xorl
push
frstor
das
and
mov
cmpl
insb
std
sub
into
xor
and
jb
out
add
cmpsl
imull
int3
xor
add
inc
fimuls
ret
xchg
je
fistpl
enter
push
mov
and
sbbb
mov
pop
fnstenv
out
imul
cmp
ljmp
jle
pop
test
jne
jb
jmp
push
leave
sbb
add
mov
data16
and
sbb
scas
or
mov
mov
pushf
lods
push
scas
mov
js
fdivrp
arpl
jno
cmp
lret
out
out
je
push
addr16
sbb
push
icebp
add
sahf
mov
sbb
out
or
push
das
in
rorl
stos
imul
xorl
inc
in
xchg
iret
inc
stc
loop
scas
lret
hlt
imul
mov
mov
sbb
or
rclb
mov
pusha
fnsave
out
jae
xchg
leave
fdivr
or
mov
in
push
jg
pop
pop
or
mov
xor
into
mov
inc
scas
jnp
notl
cmc
scas
in
hlt
insb
inc
hlt
push
mov
dec
dec
fs
aam
adc
add
movsl
ror
add
push
inc
aaa
fldl
add
addr16
jecxz
push
push
jb
insb
icebp
or
mov
mov
xchg
repnz
add
lcall
inc
test
jecxz
lods
shll
out
ja
jae
ljmp
cmpsl
cmpl
test
daa
and
or
sbb
pop
mov
ja
imul
adcb
pop
jecxz
insb
xchg
inc
enter
push
in
jge
push
pop
mov
test
insb
inc
mov
mov
cli
cmc
ss
mov
cmpsb
popf
cmp
xchg
or
jl
jnp
push
imul
adc
cltd
mov
in
xor
dec
int3
shrb
das
push
mov
rol
mov
fiadds
addr16
ret
jmp
cs
shrl
jo
mov
dec
mov
or
loope
aaa
hlt
and
xor
jg
mov
lock
aam
mov
bound
jns
imul
xchg
jno
pop
sub
cmp
arpl
je
mov
dec
or
and
jb
mov
jmp
cli
in
fdivrs
and
loope
ja
cmp
xor
push
fldcw
mov
push
cs
or
int3
sahf
jb
mov
inc
jg
adc
cmpsb
data16
dec
loopne
fstl
sub
add
add
push
pop
pop
cmc
mov
push
in
pop
jnp
mov
ss
cmp
js
enter
dec
test
dec
cmpl
xor
subb
adc
fcomp
add
and
pop
mov
jg
addr16
sub
cmp
in
xchg
movsl
decb
push
push
push
xor
xchg
rcrb
pop
imul
pop
add
xchg
inc
aam
or
or
or
jp
fsubs
inc
push
xlat
mov
imulb
dec
loopne
sub
pop
or
cmpsl
sub
pop
stos
int3
mov
call
rep
mov
mov
pop
arpl
daa
mov
test
xchg
cmp
or
or
dec
mov
sbb
push
cwtl
pop
jp
das
sbb
mov
sti
and
dec
cmpb
mov
into
fsts
pop
dec
cmc
dec
int3
cs
mov
loope
fstp
js
iret
aas
mov
mov
xor
xor
mov
test
jl
in
les
pop
leave
inc
call
mov
sbb
jns,pn
adc
shl
mov
xchg
dec
mov
pop
pop
movsb
or
scas
jo
gs
popa
ja
jmp
add
push
pop
test
fdivrl
cmp
dec
scas
push
jecxz
insl
lret
mov
ljmp
insb
outsb
adc
xchg
xchg
mov
or
test
icebp
lahf
and
mov
pushf
inc
lcall
adc
mov
out
jnp
icebp
test
outsl
cmp
fildll
lahf
mov
cmp
and
pushf
stc
xlat
pop
mov
aaa
push
imul
nop
adc
pop
and
mov
sbb
pop
dec
out
shlb
out
sub
enter
cli
lcall
jg
sbb
xor
add
test
test
leave
stos
cs
jbe
mov
inc
sbb
jge
adc
cmpsl
lods
icebp
rcll
jns
xlat
mov
cmp
dec
into
push
std
gs
jno
test
js
nop
out
addr16
cli
aaa
pop
loope
and
in
out
or
imul
push
pop
lcall
cmc
shr
add
rep
jmp
mov
popl
test
cmpl
insl
xchg
mov
cmp
mov
add
lret
mov
push
out
fwait
jmp
movsb
out
daa
push
dec
outsl
xor
ret
lret
in
stos
outsb
loope
and
sbb
clc
xchg
sti
push
lahf
push
adc
xchg
aas
add
xchg
mov
sub
and
mov
and
rcll
fldenv
sbb
ss
data16
enter
sub
xchg
jmp
sar
and
mov
jmp
movsb
or
and
jno
test
pop
pushf
dec
fwait
test
sti
ss
sub
xor
add
lods
aam
les
push
movsb
addr16
ja
xchg
cmpsl
push
mov
xor
and
adc
add
hlt
pop
in
aam
les
push
movsb
addr16
ja
xchg
cmpsl
push
mov
xor
and
adc
add
hlt
pop
in
aam
les
push
movsb
addr16
ja
xchg
cmpsl
push
mov
xor
and
adc
add
lock
loopne
shlb
les
push
movsb
addr16
ja
xchg
or
mov
or
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
cld
repz
and
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
hlt
add
mov
add
test
add
jl
add
je
add
insb
hlt
add
fs
add
pop
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
int3
hlt
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
cmc
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
cmc
add
cld
cmc
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
testb
pop
testb
push
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
testl
push
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
testl
add
add
lods
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
testl
add
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
clc
add
mov
clc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
stc
add
dec
stc
add
push
stc
add
pop
stc
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
stc
add
cwtl
stc
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
