mov
stc
pop
or
xor
add
mov
add
or
and
push
mov
call
test
pop
je
push
mov
sbb
jmp
ljmp
add
shlb
or
mov
mov
mov
pop
ret
push
push
push
cmp
cmp
add
inc
jne
push
push
daa
push
jbe
mov
mov
pushf
dec
dec
add
and
rolb
add
popa
mov
add
cmpb
je
pop
addr16
aas
mov
jmp
andl
movl
adc
fmuls
jmp
jmp
mov
sub
push
mov
xor
cmp
jne
push
jmp
outsl
cmpb
jne
sub
addb
loopne
testb
cmp
cmp
push
or
repz
lock
fdiv
movsl
jne
and
adc
lea
push
pushl
inc
nop
cmp
hlt
loopne
or
mov
cmp
dec
fmuls
adc
adc
data16
call
inc
mov
xor
cmp
or
or
or
lock
jmp
push
pop
pop
leave
ret
jg
sbb
insb
pushl
call
clc
mov
ret
nop
sub
mov
jne
push
mov
mov
add
inc
ljmp
loope
cmp
or
loope
test
ja
xchg
jl
fidivrs
push
cmp
test
out
inc
add
test
dec
add
ficompl
js
shrb
sbb
pop
cld
pop
pop
mov
imul
add
inc
add
or
sub
repnz
jmp
std
dec
or
xor
cmp
push
shrl
outsb
push
add
inc
adc
movl
lea
sbb
cmp
sbb
mov
cmp
jl
cmp
jg
aam
add
or
movsbl
push
inc
movsb
adc
fcmovnu
aas
ss
push
push
mov
jmp
adc
inc
inc
cmp
je
cmp
je
ljmp
cmp
je
movzbl
shr
mov
mov
inc
and
mov
cmpsb
pop
push
inc
inc
push
dec
inc
or
adc
pop
imul
insb
inc
or
or
push
xchg
cmpl
fsub
push
outsl
sub
pop
jbe
adc
xor
cmp
mov
mov
push
call
push
pop
shrl
cltd
in
in
inc
cwtl
adc
insl
adc
dec
xchg
pushl
xchg
popf
cld
jmp
inc
push
push
insb
orl
sbb
push
push
adc
xor
push
jae
leave
cmp
rcr
mov
sbb
jbe
movzwl
mov
cmp
sub
cmp
jb
push
movl
mov
iret
sub
or
and
add
testb
ret
jbe
clc
mov
cwtl
stos
dec
dec
orb
mov
aad
jb
test
dec
ret
addr16
mov
jmp
push
lods
cmp
pop
hlt
add
fs
push
mov
dec
ja
enter
mov
cmp
je
daa
add
mov
add
out
push
sub
or
or
push
adc
andb
push
ljmp
push
or
adc
add
add
lcall
push
push
adc
cs
pop
popa
mov
push
xor
adc
mov
rclb
push
add
jp
dec
repz
cmpsb
or
or
inc
or
imull
lods
push
rol
fs
mov
mov
lahf
in
sub
mov
push
cld
call
lret
adc
repnz
lea
sub
lcallw
push
mov
add
pop
ret
push
jno
call
pushf
jl
cmpb
je
push
push
pushl
movb
js
repz
test
cwtl
outsb
aam
mov
pop
ret
add
push
inc
test
icebp
outsl
jo
popf
rolb
das
cmpsb
ljmp
pop
mov
cmp
ljmp
mov
rcrb
inc
cmpsb
enter
call
sbb
les
xchg
mov
mov
pop
xor
add
lock
mov
sub
mov
jb
xor
jge
outsb
and
je
lock
jo
pop
pop
mov
rol
pop
mov
xchg
fsubrs
arpl
mov
cltd
jl
and
test
add
or
addl
dec
hlt
out
jae
cmp
mov
mov
enter
jl
inc
xlat
mov
notb
push
sbb
sub
ds
push
push
xor
insl
sub
orb
xor
out
fwait
lea
push
add
sub
cltd
xchg
ret
mov
mov
decl
shrl
stos
mov
and
rep
fdivrs
out
scas
jle
mov
lds
jge
jle
or
push
je
and
mov
mov
inc
div
sub
mov
pop
add
loope
test
sbb
xor
insb
sti
loopne
push
inc
cmp
int3
dec
push
xor
add
add
push
and
jmp
push
lea
les
adc
sbb
dec
xchg
adc
lods
sahf
mov
adc
mov
xchg
je
int3
test
loopne
cmp
into
inc
rorb
mov
cld
inc
push
add
loop
sub
lock
push
pop
jno
ljmp
add
js
je
jbe
outsb
outsb
mov
push
push
jbe
or
je
adc
sub
adc
outsb
push
mov
xor
lods
clc
jmp
add
je
fimull
fildll
pop
dec
aas
jmp
ss
data16
or
loopne
dec
fistpll
loop
inc
sahf
sbb
mov
push
adc
or
into
divl
mov
sti
add
test
out
dec
adc
dec
je
adc
jne
mov
cmp
das
push
jb
cmp
cli
jbe
xlat
xor
repz
push
pop
sbb
je
lret
xor
dec
mov
xor
inc
jg
mov
loopne
gs
rolb
imulb
xor
add
mov
mov
xor
inc
add
jb
test
mov
and
mov
fdivrp
ja
add
mov
mov
inc
js
xchg
inc
dec
jb
fsin
mov
xor
adc
jne
ds
sub
mov
rorl
call
and
loop
push
pop
push
and
xchg
out
push
xchg
dec
scas
loopne
jmp
or
pop
shll
inc
movb
call
jmp
mov
inc
sub
pop
popa
shrb
mulb
inc
xorb
cwtl
rcrb
negl
loop
cli
fistl
xor
cmp
push
or
addl
pop
add
mov
je
mov
pop
adc
cmp
je
cmpl
jbe
pop
ljmp
mov
push
push
push
push
mov
add
test
insl
xor
jge
add
cs
rcl
fsubrs
cmp
pop
push
pop
push
push
mov
cmp
stos
fiadds
sub
aas
pop
jo
cwtl
add
inc
or
mov
lea
sub
jno
addl
pop
hlt
jmp
push
je
cmp
je
ljmp
mov
test
jne
adc
ljmp
cmpl
dec
in
loop
push
sahf
add
cmpl
xor
push
hlt
jmp
push
xor
push
push
lret
loopne
pop
mov
add
in
mov
sbb
lock
in
in
in
in
out
or
cmp
cli
xchg
in
mov
ret
les
adc
test
sbb
push
xor
or
daa
insb
jl
sub
dec
hlt
fs
fsubr
sub
mov
or
cmp
jo
iret
sub
call
daa
les
ret
mov
mov
roll
sbb
and
rolb
fs
pop
subb
sahf
insl
inc
lcall
aad
or
loopne
popa
adc
je
neg
jbe
adc
adc
jge
movsl
pop
inc
xchg
xor
mov
inc
orl
and
push
push
outsb
jbe
enter
call
in
sbb
pop
cmc
jle
lock
je
call
or
aam
adc
jo
push
movsl
adc
sbb
pushf
mov
mov
sub
jle
mov
xor
inc
shl
or
jmp
clc
mov
movb
sub
cmpsl
adc
push
push
insb
outsb
jle
js
fidivrs
int
pop
inc
sbb
stc
sbb
or
jbe
xor
data16
outsl
inc
roll
pop
push
pop
cmp
mov
jb
imul
je
mov
mov
dec
mov
cwtl
out
xor
loope
js
adc
add
aaa
ficomps
cmp
add
mov
add
inc
or
loopne
mov
pop
test
pop
xchg
cmpsb
mov
push
pop
push
adc
je
sbb
add
sub
movhps
push
pusha
hlt
adc
andl
sbb
mov
inc
jae
mov
jg
std
add
jge
push
cmp
jne
push
jecxz
outsb
cmp
sub
repnz
mov
outsl
jmp
mov
xchg
adc
xor
in
addl
js,pt
pop
mov
sbb
jae
jmp
sub
adc
aad
lcall
push
xchg
push
insl
mov
pop
iret
xor
adc
iret
ret
shl
or
jecxz
scas
add
js
lods
orps
insb
jae
push
or
xchg
clc
add
rcll
jecxz
pop
mov
inc
add
fwait
icebp
rorl
and
cmpl
jne
cmpl
cwtl
ret
cmovo
lock
test
lock
mov
das
and
cmp
inc
add
cmp
adc
fmuls
mov
jg
cld
adc
mov
push
cmp
je
mov
add
xor
shr
ss
adc
push
or
cmp
pop
jecxz
dec
lock
push
push
jl
je
push
or
jmp
or
push
mov
or
dec
jl
add
imul
or
sti
movsb
inc
adc
sbb
in
and
push
in
fwait
or
mov
andl
and
pop
pop
push
sbb
adc
mov
cmp
push
js
je
cmp
push
loopne
jo
pop
mov
jo
adcb
fmuls
pop
je
pop
mov
imulb
js
inc
or
adc
mov
mov
inc
dec
mov
xor
jmp
and
or
adc
sbb
dec
hlt
cmp
das
dec
je
dec
mov
aaa
aaa
ret
xor
mov
inc
sbb
jmp
mov
sbb
or
mov
xchg
daa
js
and
test
mov
sbb
mov
and
shr
clc
icebp
mov
rorl
pop
lea
into
lock
imul
daa
and
jle
jne
into
sbb
ds
cmpsl
push
out
add
xchg
cs
pop
inc
pusha
ret
nop
mov
or
push
add
orl
ds
mov
jp
or
jmp
xchg
xor
repnz
or
mov
inc
aad
clc
inc
insb
pop
or
jg
jp
je
orb
push
mov
mov
or
icebp
daa
and
inc
push
mov
push
cld
dec
fistpl
lret
dec
add
out
mov
ret
pop
xor
cmp
ljmp
ret
push
push
xor
lea
incb
hlt
ja
pop
das
daa
fcomps
dec
and
adc
or
pop
adc
jnp
cmp
enter
push
push
or
clc
or
mov
mov
push
std
mov
or
stc
jb
mov
fnstcw
sti
jb
add
stos
sub
push
js
shlb
fs
pop
sahf
pop
arpl
ret
lea
xor
add
or
push
fmull
push
jl
out
or
loopne
loopne
pop
push
cs
adc
loopne
fdivrl
xchg
push
adc
imul
pop
decl
and
cmp
sete
popf
clc
ret
loop
es
adc
js
xchg
adc
mov
and
adcb
test
subb
jp
mov
sub
std
add
adc
ret
add
rolb
lods
mov
fstpt
mov
fcomip
repz
cmp
je
inc
aam
cmp
in
lahf
mov
mov
sahf
jl
popa
add
pop
std
sti
data16
outsl
push
div
movb
movb
push
add
mov
add
outsl
dec
pop
or
cmp
jbe
mov
inc
pop
mov
pusha
xchg
cmp
push
or
roll
jle
rcrb
jmp
loopne
decb
add
cltd
mov
pop
cmp
dec
ja
adc
and
sbb
push
ds
movsb
add
adc
sub
pusha
dec
xlat
jle
or
sar
negb
adc
sbb
int
or
or
adc
inc
and
inc
and
mov
add
punpckhwd
adc
pop
cmpsb
imul
imul
cli
adc
scas
cs
andb
movaps
xor
adc
mov
adc
push
adc
push
sbb
sub
inc
xor
sbb
sbb
div
mov
adc
sbb
push
ffreep
push
icebp
push
lea
jecxz
or
out
cmp
pop
cmpsb
adc
das
mov
inc
je
mov
repnz
cmp
cld
clc
jb
je
test
mov
inc
test
cmp
add
jo
jb
repz
cmp
cld
push
add
add
add
push
push
pushl
loopne
sub
lret
stos
rep
orl
pop
pop
mov
push
cmp
mov
mov
cmp
sub
cmp
jo
lods
xor
jp
mov
lds
mov
incb
push
pop
sub
pop
or
and
dec
jne
mov
inc
xor
mov
inc
push
rclb
dec
add
lcall
xchg
mov
jge
je
imull
adcl
mov
push
xchg
into
hlt
jno
pop
pop
es
cli
add
push
pop
or
push
cmp
pop
rol
neg
jne
cmp
sub
aad
bound
push
mov
pop
pushf
push
sbb
xchg
cmp
call
imulb
lea
push
xor
jg
mov
mov
push
xor
adc
push
gs
add
loopne
shlb
test
rorb
shlb
or
jbe
cwtl
fcoml
fs
roll
adc
cmpb
rcll
jb
fs
push
push
aam
sub
jne
push
push
dec
fs
push
jnp
push
in
mov
xchg
lods
pop
jmp
or
andl
out
rcll
lea
add
pop
push
pusha
ja
pushf
in
inc
mov
imul
fisubrl
pop
push
das
test
pop
push
pop
pop
mov
adc
mov
pop
mov
mov
mov
xlat
jle
cmp
call
and
sbb
clc
loopne
push
das
push
in
add
xor
sti
out
movsl
inc
sbb
gs
inc
xor
jo
mov
nop
inc
or
xchg
scas
hlt
add
cmp
cmp
jle
mov
fs
jmp
test
andl
rcr
or
inc
mov
add
cmpsl
mov
adc
shlb
incl
or
subl
loope
pop
jbe
test
jle
ret
stos
and
push
fisttpl
or
cmc
jmp
or
hlt
test
pop
inc
daa
inc
ja
aas
inc
rcrb
cmc
cld
push
push
pop
aad
aas
xor
pop
aam
push
add
jne
ds
cmp
inc
jmp
or
cmp
fisubrs
adc
js
outsb
and
in
nopl
sbb
scas
pop
loopne
jo
cld
nop
add
ret
push
mov
aas
adc
movsb
dec
in
cmc
mov
mov
pop
mov
mov
imul
cmc
inc
jle
idiv
std
adc
inc
lret
add
lret
movzbl
add
fists
aaa
xchg
mov
movl
inc
js
mov
test
xchg
adc
addr16
inc
fdivs
in
dec
mov
sub
inc
mov
lods
inc
or
push
les
mov
inc
xlat
orl
xchg
xchg
push
mov
decl
in
adc
shll
pushf
das
mov
in
les
mov
fadds
or
cld
ret
lock
add
cmpsl
les
sbb
sub
or
bound
push
outsb
out
cmp
int3
cmpsl
xchg
aam
pushf
loope
xchg
push
cmp
cmovno
pusha
ret
shrl
mov
and
movsb
pop
fimull
xchg
mov
sbb
cmp
push
das
sub
sub
adc
pushw
add
cwtl
in
push
push
cmp
pop
mov
les
xor
mov
mov
in
in
loope
inc
push
adc
xor
dec
xchg
push
lea
shll
lea
mov
push
cmp
aad
jo
cltd
mov
adc
pop
je
mov
add
inc
cmp
dec
ret
jb
lea
clc
lcall
movsb
push
and
jl
mov
cltd
popf
mov
ficoms
aaa
sbb
push
xor
xchg
test
pop
cmp
jmp
mov
cmpl
xor
fwait
ljmp
std
decb
or
xlat
rol
push
loope
xor
push
push
int
test
sbb
add
mov
cmp
ja
stc
push
push
jle
in
or
jnp
push
or
testl
add
or
add
sbb
testl
adc
inc
dec
dec
lcall
sbb
and
sub
jno
pushf
popl
adc
push
mov
out
add
cmp
shlb
jnp
jl
movl
mov
out
add
adc
push
popf
xor
mov
add
ja
push
rcrl
sbb
mov
jae
and
ret
mov
mov
xor
cmp
ja
sub
jmp
cmp
sbb
jmp
cmp
push
sahf
popa
push
jmp
xor
push
loopne
mov
pop
jns
rcrl
lock
xchg
cmp
scas
sbb
mov
cmp
jmp
and
pop
push
and
mov
jbe
xchg
adc
shr
sub
mov
mov
inc
push
lods
and
je
mov
leave
ja
cmpsb
je
xlat
push
push
ror
mov
cltd
loopne
push
jmp
jg
or
fildll
je
mov
dec
jo
or
xor
push
mov
jg
push
lock
test
xchg
test
mov
add
xchg
push
pop
clc
or
jmp
inc
test
push
push
jmp
rolb
adc
pop
add
sti
outsl
xor
test
add
xchg
sbb
dec
mov
decl
leave
dec
mov
in
call
push
in
orl
mov
clc
ret
xchg
push
mov
mov
inc
gs
adc
push
jmp
jne
test
cld
or
dec
or
ret
mov
xlat
loop
stos
push
cmp
or
cmp
mov
ss
mov
and
jg
int3
mov
push
hlt
scas
mov
std
add
lcall
call
je
xchg
push
dec
sub
mov
push
push
out
js
out
lret
adc
xor
adc
push
inc
daa
adc
add
sub
push
icebp
mov
outsb
mov
sbb
lcall
sub
outsb
jns
mov
fiadds
cli
add
sarl
push
push
jne
push
aam
outsl
test
mov
cmp
pop
jbe
adc
dec
and
inc
jl
pushf
mov
mov
push
mov
outsl
push
in
negl
push
cld
mov
addr16
push
in
or
and
sbb
push
fwait
outsb
sbb
lock
jbe
cmp
dec
xchg
mov
adc
lods
dec
push
popa
movsl
mov
ds
push
pop
and
push
jo
cs
inc
jo
push
xchg
jge
jne
push
out
out
outsb
aam
pop
xchg
mov
mov
cs
mov
rcrb
inc
hlt
mov
add
jo
sub
lods
sbb
inc
je
push
je
cmp
fnsave
and
mov
sub
enter
xorb
pop
sub
dec
cld
shrl
test
mov
mov
push
cmp
push
daa
aaa
mov
pop
sub
inc
data16
pop
jle
test
call
add
and
int3
mov
jle
or
jg
or
outsl
or
dec
xchg
xor
cltd
sbb
dec
shrb
daa
mov
cmp
add
mov
cld
aas
inc
aaa
inc
push
pop
push
pop
lea
rep
jmp
pop
test
adc
mov
subl
and
mov
push
jne
cmp
adc
jne
cmp
xor
div
or
or
xor
mov
sbb
cli
push
jb
jmp
imul
lea
mov
pushl
pusha
lods
sbb
rclb
cld
je
orl
or
pop
push
cwtl
dec
ret
mov
inc
cmp
or
mov
jmp
mov
add
hlt
jmp
push
rolb
mov
add
rclb
je
test
out
test
mov
leave
roll
movb
jne
cmp
mov
xchg
fdivrl
cli
add
test
test
add
cmp
mov
push
out
inc
data16
push
or
inc
cmp
jl
pop
in
shlb
jle
xchg
sbb
sbb
push
push
sub
ljmp
pop
mov
test
add
sub
js
push
movsb
mov
sarb
jle
movl
mov
aad
fisubl
in
mov
add
inc
cmp
cmp
mov
and
mov
or
xchg
sbb
adc
movsb
mov
adc
pop
enter
push
dec
movsl
imul
and
sbb
push
cmp
les
fcompl
mov
fwait
or
pop
jb
xchg
cmp
jle
jmp
add
rorb
mov
fstl
or
ror
add
jne
repz
into
call
sub
int3
sub
jmp
mov
xchg
jmp
cmp
jle
or
lret
lea
cld
or
fmuls
or
lea
fbstp
loop
ja
cmp
jge
lea
repnz
pop
lcall
scas
push
mov
add
inc
push
xor
jl
add
jb
fsubr
mov
push
mov
inc
jl
psubd
or
xchg
hlt
mov
rcr
shr
add
adc
xor
xor
mov
pop
cmp
or
mov
xor
xor
push
mov
dec
pop
pop
sbb
xchg
mov
xor
cmp
jae
aaa
popl
xor
add
rcrl
lea
push
push
xorb
cmp
decb
icebp
bound
je
cmp
shlb
xor
loope
mov
pop
dec
sub
inc
sahf
lret
sub
sub
daa
sub
pop
mov
repz
lea
sbb
cmpsb
lds
pop
mov
pop
inc
or
dec
mov
sub
sbb
xchg
jl
push
shll
xchg
push
ljmp
or
dec
inc
add
push
jo
pop
xor
xchg
cmp
inc
fadd
push
or
mov
xor
adc
dec
pushf
dec
cmp
jo
xchg
jmp
mov
adc
mov
push
fmul
jno
fidivrl
sub
sub
jle
decl
mov
mov
xor
sub
cmc
xor
aas
push
or
sbb
pop
and
cmp
sbbb
jecxz
and
xor
sbb
fcoms
xor
fnstenv
pop
adc
out
std
lcall
xchg
rcr
push
push
mov
lret
mov
in
rclb
cmpsl
fwait
sbb
int3
xchg
imul
negl
mov
xchg
dec
popf
jge
fistps
xor
and
sbb
or
fmuls
push
es
dec
mov
mov
rorb
mov
cmp
mov
aas
mov
mov
jne
jo
push
sbb
mov
sbb
mov
lea
mov
into
jo
mov
or
cmp
push
jnp
pop
push
std
sbb
je
mov
shl
push
adc
or
out
and
xchg
cs
add
pop
sbb
add
sub
mov
xchg
mov
fwait
test
cs
movsl
cmp
mov
rcll
fdivr
pushf
mov
into
push
hlt
sub
add
js
and
jno
loop
aad
dec
inc
jb
imul
fisubrl
lea
shl
shl
jl
adc
shrl
rcr
xor
xor
cmp
adc
pop
pop
pop
mov
adc
jl
insb
sbb
pushf
mov
fsts
sbb
push
cmp
and
cmp
imul
xor
add
or
lcall
add
mov
xchg
push
daa
add
dec
xor
sbb
xchg
or
adc
or
sbb
adc
mov
push
daa
or
push
push
sbb
jo
xchg
fnstcw
add
sti
mov
mov
mov
sub
js
adc
ljmp
and
ds
sub
xor
pop
js
pusha
lea
push
adc
scas
fdivrl
fs
imul
rolb
inc
pop
adc
pop
xchg
push
dec
hlt
icebp
mov
cmp
je
add
xor
cmpsb
adc
and
mov
cmp
arpl
or
movsb
jl
cld
sub
push
je
mov
inc
bound
or
sbb
or
jmp
cmp
je
inc
cmp
jb
push
pop
jmp
or
mov
testl
mov
out
adc
test
mov
outsb
cmp
loop
or
push
jp
shrb
je
xor
push
add
sub
dec
or
push
movsb
xlat
ljmp
hlt
xchg
push
faddl
push
lret
jmp
imul
adc
jae
sti
jge
adc
lock
adc
jl
mov
iret
lods
aaa
add
add
push
pop
enter
inc
mov
xor
add
mov
aas
inc
inc
ja
sbb
push
or
jbe
or
sti
fsubrp
or
jb
js
or
push
pop
adc
jo
mov
mov
test
rorb
mov
lock
xor
sub
fcos
xor
notb
addb
mov
lods
out
mov
test
imul
xor
and
lahf
push
add
xor
das
pusha
or
jl
je
mov
mov
adc
call
sub
add
pusha
mov
test
bound
mov
jo
pop
jb
xchg
jge
incb
add
pop
and
and
orb
out
inc
add
pop
sar
enter
leave
je
cmp
test
dec
ret
js
addb
sar
pushl
cwtl
push
pop
xor
rclb
dec
mov
dec
push
pusha
mov
jne
inc
add
jp
xchg
xadd
sub
xor
fs
push
add
dec
mov
add
sub
and
mov
ret
loop
cltd
call
xchg
mov
loopne
popa
les
dec
push
aas
es
inc
jb
cld
insb
dec
testb
fcmovnb
push
jb
mov
or
pop
rcll
and
dec
dec
dec
adc
mov
xchg
xlat
mov
je
ret
jle
in
and
fdivp
adc
inc
adc
mov
div
inc
mov
sub
inc
xchg
popf
mov
dec
loopne
xchg
or
stos
jae
sub
xor
push
xor
inc
jbe
loopne
js,pn
gs
rcrl
jb
cmpb
mov
ljmp
xor
sbb
mov
push
es
jbe
mov
xor
jns
jle
mov
in
xchg
pop
dec
ja
pushf
flds
inc
mov
imul
adc
pop
jbe
push
mov
add
inc
and
iret
or
jb
sbb
std
jno
fidivl
cmpsl
lahf
sub
dec
add
sbb
shl
pop
cmp
jb
ret
inc
pusha
adc
js
out
push
add
sbb
popa
sbb
pushf
push
cld
sti
dec
divb
mov
cmp
sbbb
xor
pop
pop
pop
cmp
add
ja
pushl
and
mov
ja
or
repz
ja
push
adc
inc
pushf
xor
mov
lahf
mov
arpl
adc
push
add
inc
inc
inc
dec
jnp
test
or
push
push
add
jl
inc
js
cmp
and
rorb
mov
adc
cli
adc
jl
pop
vpmacssww
jbe
es
outsb
or
jbe
inc
jae
in
sub
cmp
mov
push
js
push
sub
jg
pop
inc
cmp
scas
pushf
inc
add
nop
push
scas
push
pushf
hlt
push
mov
orb
add
out
decb
daa
push
push
xorl
movsl
cmp
rcl
pop
push
outsl
mov
arpl
outsl
push
add
call
pushf
inc
pop
mov
adc
cmpl
cmp
outsl
sub
cmp
add
test
sub
in
inc
pusha
mov
adc
dec
sarb
push
sub
cltd
jo
or
push
cmpsb
xor
add
cmp
jb
jmp
adc
adc
call
inc
cmp
roll
loope
nop
fidivrl
leave
cmpw
sete
mov
push
pop
ret
sub
push
mov
lods
mov
adc
daa
inc
sub
loopne
cmc
lea
cmp
push
pop
stos
bound
push
push
enter
ficomps
xchg
xor
jge
jg
or
xchg
adc
sub
xor
dec
mov
imul
sub
push
jle
outsl
out
aaa
mov
rcrb
imul
dec
jo
loop
fnstsw
and
lea
jbe
iret
imul
xlat
xchg
imul
and
pusha
lea
arpl
sti
adc
xchg
nop
dec
mov
jo
gs
jmp
dec
mov
pop
insb
dec
mov
xor
movswl
xchg
je
call
cmp
mulb
jbe
xor
dec
xor
jo
mov
addr16
and
dec
and
daa
mov
insb
or
daa
adc
inc
or
das
es
hlt
adc
sarl
push
push
mov
mov
out
jne
mov
push
and
add
add
aaa
inc
sarb
jbe
cmp
jl
pop
rorl
js
hlt
xor
cmp
fdivs
je
sbb
inc
fdiv
sbb
outsb
jle
cltd
push
fcoml
pop
lret
sbb
xor
or
sub
add
pop
imul
pop
mov
lea
out
insl
or
cmc
mov
xor
push
mov
movb
sysenter
adc
testb
adc
jns
call
pop
outsl
add
hlt
or
sti
incb
inc
in
je
and
imul
adc
dec
xchg
mov
mov
add
sbb
xlat
mov
cmp
in
dec
jne
loopne
icebp
push
loopne
add
movb
and
into
cmp
lcall
pop
fs
lret
and
ds
cmp
push
lea
loopne
pop
mov
xor
xor
lds
call
fidivl
and
test
sbb
lahf
sbb
push
insb
cmpsb
push
hlt
or
sub
pop
ss
or
mov
jo
pop
outsl
or
pop
push
aaa
mov
outsl
jmp
cmp
add
mov
subl
movzwl
dec
cld
xchg
push
je
dec
je
add
cmp
push
xlat
mov
dec
out
mov
jo
loop
push
mov
sbbb
push
cwtl
or
cmp
pop
ss
inc
jae
adc
je
and
or
je
insb
xorl
je
pop
je
jne
push
testb
and
dec
xchg
pop
enter
jmp
and
pop
xor
xor
push
daa
jl
mov
dec
je
push
jmp
mov
inc
ljmp
inc
aas
gs
lock
or
mov
pop
ret
sbb
lea
and
mov
orb
and
test
mov
cmp
xchg
adc
mov
or
mov
pop
xor
push
or
sub
push
push
int3
jl
dec
inc
addr16
out
les
test
push
push
cli
inc
dec
add
sahf
out
adc
roll
dec
shll
shlb
cmp
cmp
xchg
xor
lcall
xor
sbbb
xlat
pusha
cli
ljmp
jo
andl
sub
nop
push
frstor
xchg
push
outsl
sub
inc
mov
call
rol
add
test
cld
enter
and
sub
inc
xchg
ret
push
js
jmp
xor
call
sub
pushl
push
std
ljmp
pop
mov
mov
neg
sbb
jmp
push
or
lret
decl
sbb
cli
and
shrl
dec
cmovo
stos
push
ret
lods
push
loop
cmpl
mov
sti
pop
int3
adc
mov
leave
cli
mov
add
out
ret
pop
cli
jle
loop
pop
and
pop
sar
mov
dec
pusha
shlb
push
loope
lods
sub
mov
imul
adc
push
push
js
popf
sbb
cmp
and
xchg
or
mov
rolb
jne
mov
dec
and
sbb
and
ret
mov
and
mov
fdiv
roll
sub
mov
sar
push
sub
and
and
lea
mov
shr
mov
adc
adc
pop
xor
sahf
fstpt
insb
adc
adc
in
es
adc
adc
xchg
out
adc
adc
sahf
adc
push
adc
es
push
sbb
iret
xor
out
sbb
sbb
jns
imul
sbb
sbb
addr16
sbb
aaa
jns
push
sbb
pop
sub
sarb
push
call
add
roll
loop
jbe
stos
or
jl
dec
mov
xorps
faddl
in
pop
shl
rcrb
mov
mov
add
jle
or
sbb
jo
sahf
jl,pn
out
inc
enter
push
inc
xor
push
inc
mov
add
mov
mov
mov
mov
xor
xorb
inc
add
dec
or
rol
test
cmp
lods
sub
mov
das
push
push
sbb
and
mov
stos
addb
pop
andb
mov
or
out
push
arpl
sub
xor
out
xor
adc
mov
pop
scas
mov
jb
inc
cwtl
push
push
rcll
pushf
mov
repz
mov
cmp
adc
mov
cmp
jb
nop
pushl
in
in
imul
add
out
movzwl
jbe
push
stos
inc
sub
nop
add
jbe
cmp
aam
adc
adc
enter
iret
ja
adc
mov
out
jbe
rcrl
ja
xchg
xor
orb
jmp
or
test
push
dec
push
aad
enter
es
mov
xorl
es
and
sbb
sub
jb
pop
mov
testb
or
les
and
je
loop
push
mov
pop
rep
lea
add
mov
neg
push
sbb
mov
out
mov
lahf
mov
push
push
push
push
push
cmc
aam
lock
les
clc
js
add
add
jbe
mov
loop
cmp
mov
rclb
and
or
das
xchg
dec
pop
loope
lcall
xor
push
rolb
cmp
and
sub
inc
add
sbb
fbstp
shl
or
jmp
cmp
je
cmp
cmp
aaa
mov
je
jp
ljmp
je
std
sub
test
sbb
test
jb
fs
movl
fs
push
mov
cwtl
int
leave
pusha
and
mov
pop
out
loope
jle
lock
ljmp
mov
repnz
repnz
add
mov
push
jmp
pop
rcl
dec
inc
fs
xchg
fwait
std
push
in
mov
adc
mov
clc
addb
mov
xor
in
or
push
xor
out
int
sub
add
mov
mov
adc
mov
inc
cmpsb
lock
sbb
cmp
testl
les
inc
mov
push
test
mov
mov
loopne
or
mov
add
dec
inc
and
push
pushf
or
cmc
scas
adc
jne
push
pop
jmp
test
repnz
mov
popf
int
or
xor
inc
jmp
push
sub
inc
mov
fcoms
lods
lea
sub
jb
inc
add
sub
sub
fwait
and
outsb
add
rclb
jae
fidivrs
mov
cmp
sahf
stc
add
ret
inc
rolb
push
fsubl
rorb
jno
out
dec
jle
cmp
jns
cmp
inc
add
into
js
clc
add
jl
test
dec
jnp
cltd
dec
jbe
out
dec
and
adc
xlat
lret
and
iret
leave
shlb
sbb
insb
or
mov
xchg
pop
nop
mov
push
push
sub
dec
jo
ret
and
and
cs
outsb
fs
test
mov
divb
rcll
pusha
or
call
rolb
es
push
pop
jmp
mov
add
xchg
dec
or
int3
icebp
sub
insb
or
and
jbe
add
popl
fmuls
adc
loop
sub
call
jle
or
jl
das
mov
pop
add
dec
into
lock
fisttpll
mov
mov
mov
aam
lea
push
imul
jl
pop
adc
sub
sbb
sbb
cmp
aaa
sub
mov
sub
or
cmp
jne
xchg
out
js
test
pusha
dec
or
test
adc
cmp
sarl
mov
or
push
mov
push
push
nop
sbb
or
jne
data16
add
nop
enter
cmpsl
iret
jo
and
inc
push
mov
inc
fwait
push
iret
test
shr
add
or
dec
stos
push
sbbb
clc
pop
or
stos
call
stc
arpl
dec
sub
sbb
pop
push
cmp
add
mov
push
mov
arpl
es
jb
enter
xor
add
movsl
add
rolb
mov
push
pusha
xor
int3
outsb
push
add
add
out
hlt
pushl
mov
xchg
ja
test
sahf
fs
push
mov
je
dec
xchg
add
sbb
andl
add
jnp
cmc
inc
jle
lds
dec
je
mov
stos
cld
add
xchg
pop
adc
add
mov
xorl
mov
inc
mov
sbb
nop
movsl
push
xchg
mov
and
sti
sub
inc
mov
je
jbe
jle
shl
mov
inc
cmpb
call
inc
or
and
jnp
sbb
add
jns
adcl
mov
adcl
pop
or
stos
mov
push
jmp
push
fildl
mov
inc
or
dec
nop
hlt
mov
pop
pop
and
mov
mov
push
scas
ss
in
rcrl
add
adc
hlt
jmp
dec
pop
stos
or
loopne
scas
imul
popf
mov
and
lock
pusha
add
jecxz
jle
pop
pop
pop
push
out
push
jo
decb
or
cmpb
sar
inc
shlb
add
inc
je
dec
push
imul
insb
testb
adc
xchg
add
pop
add
jg
je
xor
sub
je
dec
and
add
inc
addl
das
xchg
inc
and
push
and
pop
je
pop
mov
and
mov
and
and
test
je
imul
jp
and
pop
fsub
pop
cmp
clc
data16
pop
jle
out
sbb
or
adc
xchg
das
cs
xchg
les
roll
lods
add
andl
mov
cmp
pop
sbb
xchg
or
mov
je
cmp
sbb
sbb
clc
mov
pop
andl
imul
pop
push
mov
lock
pop
jmp
mov
and
mov
inc
xor
or
jecxz
and
push
push
add
mov
andl
jle
mov
cmp
jno
push
decl
push
inc
and
mov
lock
or
inc
insl
sub
push
testl
dec
cmp
sbb
jae
dec
mov
in
cwtl
inc
jne
fcoms
fwait
inc
pop
aas
insb
cmpb
pop
xor
stos
push
xor
inc
inc
or
sbb
mov
shrl
jae
cmp
lret
pop
push
or
mov
inc
inc
cmp
jb
outsl
lock
or
and
jmp
addr16
fiaddl
mov
or
cmp
cmp
mov
bound
pop
rclb
or
pop
add
xor
dec
pop
shrb
xorb
mov
cmp
clc
xchg
cmp
or
orb
push
mov
xor
dec
pop
push
push
movl
mov
and
pop
xchg
hlt
jnp
adc
dec
or
or
call
add
aam
ficoml
in
ret
and
dec
sub
shrb
dec
dec
inc
add
add
jge
add
inc
insl
fadd
shll
xor
mov
test
sahf
cmp
push
loopne
xchg
je
push
push
jg
xchg
add
pop
cmpl
fs
xchg
fisttps
ds
or
push
mov
add
xlat
call
ret
loopne
inc
ss
adc
push
pop
xchg
push
cmp
and
sub
mov
loope
in
jmp
or
mov
mov
xor
sbb
jle
xor
push
mov
test
xchg
and
movsb
mov
test
in
sarl
push
lea
xor
mov
inc
subl
sahf
std
ds
push
cmp
je
inc
cmp
jb
fldl
in
mov
imul
out
xchg
dec
lret
aad
and
test
test
or
fdiv
call
loop
aas
in
sub
jns
roll
fstpl
sub
push
and
add
push
push
clc
xchg
add
dec
imul
faddl
imul
push
xchg
scas
adc
out
adc
inc
push
jle
mov
jl
push
push
push
adc
cmpsb
test
incb
mov
cmp
push
sbbb
sub
add
pop
mov
push
mov
push
mov
pusha
ret
or
cwtl
mov
addb
testb
adc
in
adc
aad
rorl
and
mov
push
sub
adc
sbb
notl
pop
inc
pushl
push
fcoml
or
adc
ljmp
ja
push
je
sbb
js
lcall
and
jp
xchg
ret
enter
jns
in
sbb
fisttps
roll
dec
and
rclb
lods
or
adc
and
inc
nop
sbb
nop
sbb
xchg
daa
pop
adc
es
cltd
mov
xlat
cmp
in
vrsqrtps
test
fcoms
out
pusha
icebp
fstps
in
add
mov
es
mov
ret
lods
es
add
cmp
push
and
mov
jl
sub
push
push
mov
adcl
inc
cmpsb
or
jl
scas
fs
test
push
push
andl
pop
or
adc
mov
pop
or
mov
jle
les
lea
shlb
popa
cmpsl
push
lods
cmpb
inc
push
mov
push
pop
mov
cmp
pop
xchg
imul
xchg
js
sub
mov
outsl
mov
add
xchg
push
jne
xor
pushf
or
push
out
orl
xor
mov
or
out
add
sti
jae
push
mov
andl
xchg
sbb
inc
mov
sti
aad
or
cli
jne
daa
sub
ffree
sti
mov
loopne
cmpsb
xor
cld
inc
lret
sub
add
repnz
and
jmp
dec
sub
inc
pop
testl
adc
or
inc
pop
imul
jp
mov
and
sbb
push
lock
hlt
xor
dec
sub
adc
xor
pusha
mov
inc
hlt
xor
and
idivl
mov
xchg
mov
or
xor
pop
mov
fwait
imulb
push
mov
xchg
mov
cltd
and
mov
cmp
sub
rorb
inc
ss
clc
mov
movsl
xor
popa
adc
fisubrs
push
mov
push
loopne
or
add
out
dec
movsl
push
in
fiadds
cwtl
push
dec
mov
push
fadd
mov
imul
and
fbstp
mov
movsb
lea
lea
mov
movsw
mov
cli
insb
rcrb
int
add
pop
jle
ja
sub
xchg
lock
fucomi
pop
call
cmp
add
cmpsb
insl
aam
push
dec
stos
stos
mov
cld
pop
push
sbb
out
adc
xchg
ret
fs
rol
sbb
mov
pop
aaa
push
bound
test
adc
insb
push
push
pop
push
dec
add
jno
push
cmp
xchg
cmp
jno
test
mov
test
dec
cmp
or
fbstp
sbb
cmpsl
mov
cmp
inc
mov
cmp
dec
jmp
sbb
lahf
fwait
insb
mov
inc
push
jb
ljmp
adc
sarl
sti
mov
xor
push
or
pop
push
insb
cs
je
push
lds
dec
stc
pop
push
pop
adc
pop
pop
or
sbb
loopne
jb
mov
aad
jle
call
repnz
push
out
aaa
or
cmpb
insl
xor
pop
seto
js
test
push
push
popa
outsl
xlat
jmp
push
push
xchg
sub
adc
jb
stos
test
mov
je
sub
cltd
xor
cmpsb
inc
xor
and
insl
jns
push
xchg
inc
cmp
sarb
cmp
jbe
push
ficoms
xor
outsb
outsb
push
cmp
push
aam
inc
xchg
lret
ja
cmpsl
in
fwait
mov
sahf
hlt
push
jle
test
push
pop
data16
scas
dec
add
cmp
adc
adc
mov
xchg
fcoml
adc
adc
lret
or
xorb
jp
push
mov
notb
push
push
or
xchg
mov
js
mov
pop
into
or
mov
mov
mov
movsl
mov
aam
mov
lea
jne
shr
adc
shlb
fsubs
or
sub
or
fsubl
test
mov
mov
mov
pop
dec
dec
imul
cld
loope
xor
add
mov
loopne
sub
adc
in
sub
sub
add
cld
xchg
mov
in
test
lea
pop
sub
mov
xor
sbb
add
adc
or
add
add
test
test
xor
je
gs
inc
and
mov
push
mov
inc
dec
add
jbe
adc
shll
incb
lock
push
je
mov
or
in
clc
mov
push
cmp
xor
je
imul
jl
cmc
stos
icebp
pop
xor
pusha
mov
shl
xchg
out
mov
inc
or
out
jbe
insb
push
orl
cmpl
mov
and
and
mov
push
sarl
add
push
roll
or
jb
into
or
inc
jnp
shrb
cmpb
xor
je
rclb
test
daa
sbb
sub
add
push
dec
mov
pop
ja
nop
adc
jp
mov
mov
cmp
mov
fbstp
cmp
les
daa
scas
xlat
lock
fldpi
in
fsubrl
jmp
int
jge
and
lock
pop
adc
cmc
ljmp
add
addr16
clc
add
jmp
fnstenv
push
or
mov
lahf
mov
imul
pop
push
scas
push
cltd
jg
dec
or
clc
jg
js
pop
pop
imulb
or
pop
sbb
enter
push
mov
test
xor
cmpb
popa
add
mov
push
mov
mov
popa
sbb
movsb
sub
cld
mov
xor
mov
adc
dec
mov
push
push
dec
movl
mov
rorb
or
or
and
pop
adc
push
call
jb
xlat
out
xchg
add
and
add
ret
nop
das
mov
adc
add
xchg
popf
data16
jno
push
jb
add
pop
loope
jp
sbb
neg
scas
dec
sbb
lret
ret
test
hlt
add
mov
pop
mov
inc
pusha
insl
cld
in
jg
fs
mov
sub
enter
mov
sub
gs
int3
sbb
hlt
mov
or
ficoms
dec
inc
shrb
push
fs
rolb
mov
mov
sub
test
je
nop
jle
mov
icebp
shl
mov
js
jbe
cmp
rcrl
movsl
andb
and
inc
sub
push
jne
lock
clc
xor
xchg
cmp
add
imul
jne
mov
es
sarl
cmp
ficoms
pop
popa
sbbl
cld
cmp
lcall
jl
jmp
push
push
gs
push
fcmovnu
dec
icebp
daa
inc
testb
out
add
into
sub
lock
ja
adc
mov
in
cld
jmp
fs
mov
decl
jle
jmp
xchg
stos
sbb
mov
cmp
cli
push
mov
inc
xor
mov
mov
std
cmc
aaa
scas
adc
inc
push
fdivs
scas
imul
mov
push
out
and
test
in
imul
mov
and
jl
cmc
inc
jne
cltd
lea
enter
repnz
stc
imull
int
sbb
idiv
std
dec
push
fs
sti
cli
scas
xchg
iret
inc
outsb
cli
cli
cmp
jb
ds
and
scas
sahf
add
flds
aam
mov
push
nop
pop
push
lea
cmp
cs
outsb
jle
push
movsb
mov
push
ret
jmp
pop
arpl
jbe
xchg
mov
call
movl
and
push
xchg
inc
and
fsubs
sahf
push
adc
pop
push
je
rorl
xor
xor
ret
add
sbb
sbb
imul
sub
das
jl
dec
mov
add
fmuls
loope
fisubrl
or
or
es
dec
inc
jne
sbb
jp
and
push
dec
mov
sysenter
or
int
ja
std
mov
and
neg
sub
negl
inc
inc
ss
xor
and
jne
xor
xchg
ja
push
adc
idiv
sbb
lds
fcomi
fisttpl
sahf
cmp
sbb
mov
jns
std
and
lret
jns
push
stc
push
stos
ret
jmp
fcmovnbe
nop
in
mov
rorb
imul
rcl
inc
fcoms
and
adc
dec
jecxz
addb
push
xor
movsb
dec
or
sub
lods
sbb
adc
add
addb
scas
add
arpl
cmp
xor
cmp
pop
icebp
mov
je
cmpsl
pop
and
andb
jmp
add
mov
push
push
adc
sbb
xchg
add
dec
clc
xor
movl
adc
push
cld
scas
adc
inc
loop
mov
pop
into
call
es
dec
roll
lcall
movsb
mov
mov
inc
mov
adc
jo
mov
push
or
andl
push
ja
mov
sbb
mov
xor
xor
lods
stos
arpl
cmpl
or
loopne
or
dec
popf
jne
sub
in
cltd
rorb
sub
push
adc
mov
inc
cs
clc
and
je
mov
add
or
and
dec
mov
fdiv
xor
shlb
int
aaa
sub
dec
push
dec
js
mov
ljmp
bound
inc
or
aaa
pop
mov
cld
or
mov
sbb
inc
xor
push
and
cmp
mov
mov
push
cmp
adc
push
add
jns
ja
clc
add
push
pusha
pop
pop
pop
mov
pusha
in
inc
data16
jbe
adc
add
mov
lock
dec
jne
stos
clc
push
aam
push
push
or
mov
add
push
mov
mov
jne
xchg
rolb
adc
iret
jmp
dec
ljmp
push
call
sub
xor
sbb
or
mov
in
cmpsl
mov
fidivrl
aaa
movl
icebp
rolb
je
pop
jl
add
cmp
je
add
add
pusha
subl
ljmp
add
out
xchg
insb
js
imul
sub
mov
fldl
push
mov
add
ljmp
loopne
jno
repnz
mov
jbe
insb
adc
js
cmp
mov
call
shr
cmp
jne
pop
jo
cmp
rolb
rcl
mul
fbld
push
cmp
jb
dec
cs
mov
jns
inc
cmpsl
pop
sbb
sar
not
cmp
mull
jge
adc
sub
aas
inc
popf
fidivrs
push
or
aas
inc
ja
call
jb
jmp
xchg
idivb
xchg
mov
das
sub
iret
push
dec
arpl
mov
adc
mov
pushf
push
jae
pop
in
adc
lea
pop
pusha
mov
rcll
or
or
sar
fld
jmp
adc
xor
mov
mov
push
push
jne
fs
bound
and
and
dec
dec
cmp
mov
loopne
dec
jne
dec
es
je
fildl
adc
push
cmpsb
or
into
add
enter
xchg
fsts
ret
mov
mov
inc
call
je
or
das
mov
jbe
pop
daa
rolb
jp
insb
lcall
dec
stos
inc
js
mov
or
jp
scas
push
add
push
testb
or
lock
mov
pop
setge
cmp
mov
add
je
sbb
cmp
jmp
dec
je
adc
arpl
or
clc
xor
jo
addb
pop
mov
lock
jl
cmp
jg
xchg
aaa
add
rcl
adc
lcall
dec
orl
push
xchg
add
and
inc
dec
push
xorb
aas
jecxz
inc
or
pusha
adc
mov
xor
lods
mov
negl
jo
inc
cmpsb
pop
not
cmp
mov
jl
jle
push
sbb
int
pop
in
or
sbb
mov
or
cli
jmp
mov
imul
je
pop
pop
fadds
fidivrs
sbb
loope
in
push
lea
pop
loopne
sbb
sub
ret
sbb
das
mov
cmp
repnz
push
out
int3
xchg
mov
or
addr16
clc
clc
add
and
push
adc
imul
add
xchg
clc
push
jno
mov
movlhps
das
sbb
scas
lods
cmp
push
cmp
sub
icebp
jnp
aam
and
and
adc
inc
mov
add
adc
add
push
mov
mov
or
pop
cli
add
pop
pop
pop
pop
pop
mov
mov
lock
mov
jl
or
cmp
push
fdivrl
pop
adcl
shrl
in
sahf
inc
adc
or
fcompl
sub
sbb
lret
jnp
mov
fs
push
xchg
inc
dec
ljmp
push
push
sarb
pop
scas
adc
cmp
dec
push
stos
push
mov
cmp
leave
push
push
pop
adc
jne
push
imul
mov
jecxz
pop
out
push
xchg
incl
mov
and
push
int
or
pop
out
cs
pop
mov
push
and
movsb
pop
mov
shl
out
and
pop
not
pop
pop
fisttpl
adc
rorl
xchg
fimull
std
stos
loopne
jne
mov
and
orb
mov
mov
addb
cltd
mov
sbb
jne
push
or
xor
jmp
sbb
xor
push
jae
bsf
loopne
pushf
push
mov
mov
inc
mov
add
add
cmc
mov
add
or
das
movsl
jmp
push
pop
lea
mov
mov
movsb
or
mov
ret
shll
rep
add
push
add
inc
adc
or
or
pop
inc
pop
xchg
test
or
add
push
or
mov
xchg
ficoms
pop
push
lea
sub
inc
mov
insl
xchg
dec
clc
mov
push
push
inc
imul
mov
inc
xchg
testb
cwtl
jae
dec
clc
add
or
or
loopne
ja
add
adc
hlt
ja
xor
mov
out
lahf
in
dec
jae
in
les
jns
add
push
add
mov
cmpsl
ljmp
add
lock
jecxz
add
call
sbb
lods
xor
paddd
sub
lds
sbb
sbb
cld
jae
jb
insb
outsb
cmpsb
outsl
cmp
jmp
sti
mov
jg
adc
outsl
push
sbb
push
mov
shll
loop
add
push
mov
lea
sub
xor
pop
sbb
sub
adc
pop
sbb
xor
and
pop
sbb
push
push
mov
adc
ret
pop
imul
testb
out
xor
movsbl
xor
into
cmp
ja
xor
scas
out
pop
jg
hlt
sub
icebp
fs
push
mov
mov
sbb
cmp
push
mov
xor
orb
leave
push
mov
jmp
pop
lock
cmp
mov
add
adc
push
not
or
cmpl
rorb
std
mov
or
lock
aas
lcall
repnz
jl
dec
inc
jg
es
or
call
ficompl
lods
movsb
int
xchg
cmp
outsb
dec
mov
fsubrs
lahf
les
mov
ret
or
xor
push
enter
int
sub
pop
dec
push
bound
lock
or
sub
nop
loopne
dec
inc
or
orl
iret
repz
mov
addr16
out
xor
xor
mov
cs
pop
dec
mov
imul
movsb
test
or
add
rorb
roll
jl
mov
xor
je
jbe
add
add
lret
inc
shll
shlb
mov
or
fsubp
iret
mov
pop
sbb
add
pushf
rcrl
xor
shrb
sub
inc
jo
test
mov
jmp
pop
rcrl
push
je
mov
xor
mov
imul
and
and
xchg
sbb
add
fstl
add
mov
add
sahf
inc
xor
in
cmc
mov
sub
cli
inc
add
push
sti
or
pop
shrl
call
pusha
or
movl
adc
jg
stos
rcrb
pop
push
loopne
push
testb
dec
fisttpl
pop
push
fwait
movsb
fmull
sbb
add
push
js
ljmp
insb
cmp
adc
je
push
xchg
not
push
loopne
xchg
dec
pop
push
add
mov
inc
and
js
lock
call
push
or
cltd
sahf
cmpl
dec
out
lret
fcoml
inc
imul
sbb
dec
hlt
mov
mov
xorl
scas
aaa
aas
adc
cld
cs
cmp
xor
add
pop
gs
inc
dec
jo
or
pusha
xchg
out
pop
adc
sbb
mov
sub
add
mov
or
adc
sbb
sbb
xchg
and
jo
pop
test
call
pop
or
add
call
sahf
mov
add
sub
adc
aas
test
rolb
hlt
sub
push
add
add
add
add
sub
pusha
dec
stos
jb
sub
imul
push
push
adcl
jnp
jle
rcll
enter
test
dec
or
xchg
fs
mov
enter
push
or
std
xor
dec
outsl
jns
outsl
cmp
addr16
pop
hlt
std
fwait
xor
inc
push
push
add
andb
rcrl
lea
ja
pop
inc
cmp
inc
push
jmp
jns
mov
push
or
lcall
or
xchg
and
fs
inc
shl
xor
or
adc
test
xor
jmp
testb
xchg
add
dec
xchg
ror
xor
jl
pop
cmp
scas
add
adc
cs
xchg
or
pop
mov
sbb
mov
or
xorl
push
sub
enter
push
pop
jl
nop
inc
cs
push
cld
push
outsl
cmpsb
inc
mov
xchg
nop
inc
dec
inc
add
pusha
pop
aas
and
or
in
push
and
lcall
xchg
fs
inc
mov
push
or
xchg
mov
sbb
fs
test
bound
fstpt
loopne
lret
in
inc
lock
icebp
sub
fldcw
and
pop
hlt
add
add
imul
mov
add
sbb
sti
mov
push
cmp
push
adc
shlb
cmp
jbe
rcl
and
dec
mov
out
mov
rolb
and
dec
mov
push
pusha
push
dec
jne
bound
or
push
inc
test
imul
in
sbbb
jno
pop
sub
lock
int
mov
push
pop
push
in
or
orl
ja
cld
adc
inc
jmp
mov
inc
fsub
push
addl
sub
push
sbb
sub
push
test
stc
add
popa
push
mov
or
dec
jae
adc
or
or
push
sbb
rep
in
cwtl
push
add
jmp
push
mov
lods
imul
clc
ret
adc
push
pop
stos
dec
mov
ja
push
cmp
lds
cwtl
adc
nop
or
mov
add
ljmp
and
adc
pop
or
pop
mov
mov
inc
adcb
shrb
inc
jo
rorb
adc
shrb
loope
xchg
fstl
jl
call
cmp
push
dec
pop
add
enter
sub
sahf
cwtl
wbinvd
js
mov
pop
pop
xor
sbb
adc
cmp
jg
cmpsb
cmp
jecxz
imulb
sub
push
add
aam
fmuls
enter
pop
inc
adc
inc
bound
aad
xchg
hlt
testl
decl
xchg
into
lret
add
inc
fnsave
out
daa
addb
pop
pop
cmp
pcmpgtd
popa
push
adc
sub
in
aaa
xor
xor
mov
repz
jmp
mov
xor
and
and
dec
pop
jb
add
add
add
xor
sbb
pusha
pop
enter
sub
cwtl
data16
sub
push
jl
outsl
fcompl
dec
cmp
cmp
adc
in
cmp
xor
mov
jl
push
aam
pop
cs
sbb
xchg
and
sbb
movsl
lods
adc
and
sub
enter
add
fdivs
xor
rcr
push
je
push
xchg
pop
idiv
mov
adc
je
dec
jne
push
push
jo
push
insb
mov
push
popa
push
and
nop
mov
xor
jae
inc
cld
negb
xor
dec
shll
push
pop
cwtl
pop
test
jp
add
mov
ljmp
in
xrstor
xchg
jmp
sar
outsb
dec
enter
call
and
clc
mov
and
fisubrs
pop
pop
jg
pop
cwtl
mov
adc
cmp
js
je
push
or
sbb
div
ret
add
out
stos
lods
adc
dec
mov
push
xchg
loop
or
and
xor
loopne
adc
rcl
sbb
gs
cmp
lea
shll
nop
jg
je
push
mov
lods
test
stos
test
in
mov
shlb
xchg
xlat
add
les
xorb
repnz
push
xchg
js
xchg
adcb
inc
add
orl
add
add
mov
stos
in
mov
enter
inc
jbe
hlt
mov
jne
adc
jl
inc
je
decl
push
or
sub
test
into
rclb
cld
xchg
adc
leave
orb
adc
jmp
cmp
jbe
pop
adc
add
pop
adc
cs
adc
jg
push
pop
push
push
fucomi
dec
lea
cmpl
cli
movsl
cmc
and
sbb
push
orb
je
or
xchg
and
aas
xchg
jno
pusha
out
pop
add
popl
adc
jne
xorl
and
add
and
adc
lret
pop
mov
adc
mov
dec
decb
enter
lea
mov
mov
add
dec
push
pop
adc
pusha
or
add
sarb
cli
mov
insb
and
pusha
test
or
jle
fidivs
inc
scas
or
test
adcb
sahf
shlb
mov
out
adc
and
out
lahf
sub
pop
adc
adc
roll
jnp
hlt
cmp
mov
adc
inc
mov
push
dec
add
xchg
inc
insb
sbb
push
rorl
and
roll
sti
sub
jne
jmp
sub
js
or
xor
fsub
jb
test
xor
movsb
mov
lods
mov
cmp
xor
jae
aaa
dec
inc
enter
mov
jl
sbb
jo
nop
mov
add
pusha
push
push
test
roll
and
add
sbb
cmpsb
test
jae
fs
repnz
pushf
inc
lret
sub
outsl
push
pusha
adc
sub
repnz
inc
aad
dec
push
pop
or
shlb
lods
test
mov
dec
lock
lea
push
push
or
jle
xor
sbb
test
dec
mov
add
outsb
or
sarb
call
push
lods
in
aaa
fldl
hlt
add
push
lds
cmp
mov
test
cmpl
inc
cmpsb
std
sub
jo
add
lock
lock
cmc
push
jae
and
xor
in
sub
in
jnp
fisubl
push
adc
push
sub
scas
add
sbb
icebp
cmp
add
movsb
or
shlb
inc
roll
adc
lock
notb
loop
jo
push
mov
inc
cmp
test
adcb
add
pop
test
rorb
add
aaa
mov
cmpsl
je
pop
mov
movb
enter
fcomp
or
inc
add
sarb
sbb
cmpsb
jge
adc
movsl
and
push
icebp
dec
jge
movsb
lea
mov
xchg
inc
mov
pop
xchg
incb
in
inc
cs
push
nop
dec
lock
test
push
add
pop
mov
fwait
out
add
pop
or
cli
push
sub
mov
xor
inc
pop
mov
pop
mov
cli
xchg
push
loope
enter
int
push
and
push
push
push
nop
push
add
add
out
xor
fs
cmp
ja
lea
dec
js
mov
cmpb
or
into
and
jne
push
inc
jl
fistpll
cmp
rcrl
sbb
push
add
scas
xchg
or
mov
mov
or
push
jns
daa
jl
adc
and
cld
je
pop
and
xchg
outsb
adc
push
inc
clc
jne
sub
outsb
jmp
push
push
or
jbe
pop
xchg
mov
jl
hlt
adcl
jae
pop
rcrb
out
mov
push
adc
shlb
dec
adc
je
clc
and
iret
push
cmp
pop
add
mov
pop
cmp
adc
sbbb
xchg
insb
push
pop
pop
jecxz
pop
adc
test
adc
imul
pop
xor
pop
push
lock
xchg
and
xchg
pop
orl
dec
xorl
lds
stos
sbb
cld
push
inc
add
or
or
insb
movsl
jae
mov
or
add
and
addr16
and
das
js
and
sub
nop
and
inc
adc
and
roll
sarl
bound
insl
pop
or
or
es
or
dec
dec
nop
sbb
or
icebp
daa
xorb
cmp
cld
leave
mov
xchg
mov
mov
cmp
jb
jb
cmpsb
insb
and
arpl
enter
dec
mov
and
push
cmp
sbb
mov
push
js
and
mov
pop
mov
or
push
jg
test
push
das
pop
dec
paddw
jle
test
cmp
jg
aaa
mov
add
add
movb
daa
sbb
pop
test
sub
inc
push
inc
or
add
out
inc
sub
aaa
xchg
or
enter
in
adc
stos
jecxz
lahf
mov
dec
or
or
std
mov
xor
jo
jne
dec
pop
inc
adc
adc
popa
nop
jo
inc
add
into
jne
push
push
cli
loope
nop
cltd
clc
cmp
add
pop
adcb
and
and
clc
xor
add
and
js
popl
mov
int3
and
pop
adcl
pop
scas
xor
or
jae
xchg
lock
add
mov
lock
mov
push
pop
stos
sahf
daa
cmpsb
lret
push
mov
mov
mov
popa
lock
or
pop
inc
push
or
pop
sbb
jecxz
xor
xor
xor
aas
dec
fnstenv
xchg
push
fistpl
mov
adc
push
adc
in
pop
ja
rcl
scas
cmpsb
into
add
push
out
fnsave
pop
sbb
sbb
and
das
jp
ret
jb
pop
xor
pop
int3
mov
pop
mov
test
call
mov
xor
mov
inc
fcoms
lock
shlb
jg
lock
pop
sub
xor
pop
js
and
fidivs
movl
fstpl
movsbl
xor
lods
pop
testb
mov
mov
and
rorl
ja
cld
sub
or
or
sub
dec
das
sbb
movl
sub
js
sub
sub
and
imul
add
dec
mov
int3
adc
mov
or
rorl
or
stc
and
add
cmp
cwtl
inc
ret
in
mov
out
mov
das
je
or
aaa
xchg
cld
push
data16
or
push
xor
or
cmpsb
inc
aad
fcmovne
mov
dec
shrb
stc
sub
cmp
jbe
out
mov
sub
shll
aas
cmp
aam
outsl
cmp
dec
sub
shll
dec
cmp
dec
sbb
movsl
xor
fdivr
inc
aam
sbb
inc
ja
jmp
mov
inc
loopne
stc
add
pop
dec
lea
jmp
sarl
sub
jmp
dec
icebp
sub
fistpl
jmp
add
adc
mov
ja
lea
mov
test
sub
in
and
lock
push
push
push
mov
inc
push
mov
idivb
push
push
outsb
js
dec
and
je
dec
push
pop
push
xor
push
js
lock
mov
mov
sbb
sbb
mov
sbb
mov
xor
xor
data16
push
xor
pop
and
mov
push
fistpll
inc
cmp
add
bnd
lea
lea
lret
and
cmp
scas
adc
push
sub
push
sbb
sbb
fisttpll
lods
pop
jg
jle
sbb
add
mov
rcrl
push
fstl
mov
into
fcoml
xchg
push
pop
lret
inc
aas
cld
adc
adc
cmp
shll
cmc
xor
pop
xor
hlt
pop
jge
mov
push
dec
loopne
inc
movsl
push
push
cmp
pop
adc
loop
popa
push
insl
ret
jge
inc
and
inc
sbb
add
pop
in
ds
test
fistpl
pop
add
clc
adc
push
ret
cltd
xchg
add
ja
data16
xchg
lock
jge
imul
fmull
scas
adc
or
testl
lock
jne
mov
mov
clc
fmull
push
arpl
xor
mov
or
cltd
daa
inc
shll
mov
add
add
jne
lock
call
mov
xor
hlt
or
push
mov
push
test
movsb
dec
pop
inc
or
inc
adc
sar
inc
pushf
dec
out
mov
or
inc
les
outsb
test
popa
xor
push
imul
icebp
das
sub
cmp
imul
jnp
xor
mov
push
filds
pop
data16
jecxz
imul
test
xchg
cmpsl
out
jo
lds
out
push
push
cmp
call
cmp
mov
clc
add
loope
cmp
pushw
xor
mov
xchg
inc
xchg
pop
push
out
daa
xor
aam
sbb
or
mov
je
adc
sub
add
test
bound
push
or
jmp
push
mov
mov
pop
mov
inc
leave
rcrb
jge
and
inc
push
inc
pusha
jg
inc
push
jno
mov
dec
xor
sub
in
aam
cld
cmp
int
push
xor
sbbb
fs
das
fmull
lret
bswap
cmp
test
jne
je
or
add
test
outsb
dec
pop
xor
leave
jl
psubsb
dec
or
sbb
push
push
sbb
inc
add
popa
clc
jmp
pusha
xchg
pop
mov
cmp
je
dec
je
dec
loopne
test
cmpsb
lea
arpl
repz
push
xor
outsl
cmpsl
jge
enter
and
cmp
push
ljmp
stos
in
add
inc
adc
xchg
fildl
mov
or
add
cmp
lea
test
sbb
jmp
mov
add
lods
xchg
out
leave
orl
lods
sub
push
rolb
push
repnz
dec
push
sub
insl
lods
cltd
imul
push
mov
orl
or
mov
adc
and
push
imul
mov
fisttpll
out
shrb
push
lea
clc
enter
sbb
adc
orl
sub
sbb
mov
ret
jne
int
jmp
inc
rorb
pop
roll
jae
sbb
mov
xchg
add
xorl
sbb
into
shlb
pusha
adc
or
cmpsb
imul
cmpsb
imul
inc
insl
and
cmp
inc
inc
or
sub
mov
push
dec
cmp
and
pushl
fcoms
dec
cld
dec
test
popa
and
dec
imul
pop
or
mov
jno
cmpl
loope
data16
lock
pop
loopne
push
or
or
in
add
enter
enter
movsb
sbb
or
and
dec
sbb
xchg
sbb
shll
movsb
push
enter
or
imul
dec
shlb
add
adc
sbb
ja
add
xor
inc
inc
pop
cmp
call
fs
xchg
loopne
call
dec
push
inc
push
ret
inc
jmp
and
leave
les
push
inc
dec
rcl
fcomp
popf
in
adc
dec
dec
testb
test
adc
or
lock
dec
out
cmpsb
or
loopne
hlt
jo
jnp
cmpsl
insb
dec
testl
inc
scas
jo
inc
mov
cmpb
movsb
ss
sbb
sub
mov
call
push
push
gs
ret
mov
push
sbb
pusha
xchg
push
and
mov
jnp
flds
xchg
sahf
cmp
pushf
or
es
mov
ja
mov
lods
es
movsl
inc
or
push
fildll
or
push
add
pop
xchg
sbbb
mov
mov
dec
es
dec
push
push
mov
lods
dec
and
in
pusha
pop
push
jl
sahf
ljmp
adc
add
shlb
sbb
push
pop
push
sub
jbe
push
mov
or
sub
push
or
or
loopne
ret
or
aam
mov
pusha
adc
aad
pop
push
sbb
xor
dec
push
aam
out
cmp
or
push
in
adcb
ss
sti
sub
add
or
ret
adc
jg
jle
sub
mov
mov
adc
in
mov
sub
sub
bnd
lcall
fsubrp
inc
mov
repz
mov
sbb
or
xor
inc
mov
add
or
dec
jg
outsb
mov
sbb
xor
xor
mov
inc
xor
in
mov
push
and
pop
mov
in
out
mov
outsb
andl
mov
xchg
cmp
sub
mov
loopne
add
orb
addb
pop
fadds
sti
mov
decl
inc
lret
repnz
cld
loopne
pushw
adc
cmp
into
aas
stos
xchg
adc
and
add
sbb
sub
rcrl
and
sub
cmp
sub
mov
mov
jno
add
cmp
and
sub
dec
push
imull
inc
sub
mov
das
push
jmp
pushl
and
movsbl
sub
sbb
push
push
push
adc
add
push
cmp
test
stos
popf
and
aad
mov
in
insb
mov
add
in
stos
xchg
dec
movsl
repnz
lret
dec
dec
or
ret
push
inc
les
or
shll
loopne
mov
xchg
push
xchg
adc
xchg
sub
sub
popf
adc
pop
mov
popa
adc
jns
xor
push
mov
mov
daa
push
push
add
pop
in
adc
and
xchg
imulb
dec
pushf
pusha
faddl
inc
or
call
or
sbb
movb
lret
add
cmp
or
imul
divl
stc
push
enter
adc
shlb
cmpsl
pop
mov
mov
cmpsb
inc
leave
jne
mov
xor
mov
push
inc
mov
jge
movsb
hlt
adc
pop
inc
add
inc
add
inc
mov
popf
pop
push
mov
mov
inc
movl
mov
pop
add
and
je
mov
pop
add
daa
pop
adc
sbb
mov
or
dec
mov
pushf
jmp
lret
inc
adc
sub
adc
push
xor
push
sub
push
dec
aam
pop
test
arpl
faddl
mov
xchg
xor
push
inc
xchg
sub
or
adc
xor
dec
shll
or
adc
add
or
push
adc
sub
xor
stos
mov
loopne
push
push
dec
adc
shrb
push
insl
pop
and
mov
stc
mov
cmpsb
jbe
bound
and
fs
sbb
fxch
and
call
fs
add
movsb
das
andnps
jmp
clc
xchg
fdivrl
shl
mov
cmp
scas
dec
hlt
pop
mov
cmpsb
ja
xor
pusha
add
inc
and
or
dec
call
mov
sub
cwtl
test
cmpsl
jae
sub
mov
cmp
jle
sbb
push
ret
out
hlt
shlb
in
inc
xor
mov
out
rorl
stc
leave
push
adc
adc
xchg
cmp
xchg
and
dec
ret
rorl
orb
icebp
and
push
xor
fidivs
std
and
or
cmp
jb
jmp
mov
imul
dec
aas
mov
fidivrl
fimull
xorl
xor
dec
sbb
fadds
jbe
adc
mov
shr
dec
push
adc
and
aas
inc
fistl
icebp
repnz
incl
jae
lock
and
ljmp
jne
push
mov
roll
lret
mov
add
inc
or
shlb
dec
adc
sub
pop
sbb
jnp
adc
add
lock
lock
inc
push
push
test
iret
mov
inc
loopne
dec
dec
loopne
push
or
ja
mov
subl
int3
stos
cwtl
fadds
nop
arpl
mov
xchg
call
pop
dec
dec
sbb
ret
iret
add
mov
fs
into
inc
dec
xlat
mov
nop
stc
adc
in
dec
ds
xor
fs
sub
jb
jp
jl
loop
iret
cmp
sbb
xchg
hlt
movsb
xchg
aam
outsb
in
push
inc
cli
cmp
push
lock
xchg
inc
sahf
mov
int
pop
lahf
mov
jle
mov
pushl
cmp
jl
cmp
jg
xchg
xchg
rcrb
mov
pop
imul
adc
and
je
cmp
test
mov
loope
push
xor
dec
es
ret
and
xor
sbb
and
icebp
add
stos
into
bnd
or
push
sbb
sub
cmp
cs
xor
rorl
or
shll
js
fidivrs
inc
fs
sbb
imul
add
in
xchg
andb
je
mov
pop
mov
or
jb
push
and
xor
inc
inc
sub
push
xlat
or
push
dec
sbb
cltd
fldenv
movsl
ljmp
gs
in
jno
loop
sub
xchg
xchg
inc
in
mov
pusha
ss
pop
ds
push
push
adc
sub
or
xchg
rclb
push
aas
daa
adc
or
adc
push
push
enter
mov
xchg
jno
outsb
pop
mov
test
decb
mov
inc
fnsave
cmp
adc
fstps
fnstsw
xchg
push
js
leave
testb
jmp
sub
scas
or
inc
add
shll
loope
mov
add
xchg
dec
jne
xchg
orb
mov
std
in
pop
stos
sarl
aaa
and
pop
sub
adc
jo
cmp
in
fst
decl
loope
pop
add
mov
inc
add
jne
loopne
jmp
adc
ljmp
pop
sbb
into
adc
sub
dec
adc
mov
push
inc
sbb
pop
jb
mov
pop
inc
inc
mov
xor
sub
add
sub
mov
loop
movsl
push
or
pop
inc
inc
sub
fmuls
in
jae
add
and
test
add
xorl
mov
mov
mov
cwtl
cmpsb
sbb
push
je
or
mov
cld
mov
push
push
pop
sbb
push
or
insb
push
or
pop
mov
movl
jns
js
add
das
shll
loopne
cmp
adc
mov
or
xor
mov
push
int3
push
orl
push
inc
sub
adc
gs
dec
mov
enter
loopne
into
jle
push
lea
ret
pop
pop
pusha
jae
jl
outsb
addr16
cmp
inc
xor
add
lock
pop
test
sub
dec
leave
cs
in
clc
pushf
and
or
add
pop
fiaddl
sub
jg
xor
test
loop
jnp
cs
mov
adc
jnp
push
je
inc
push
and
sub
push
and
and
sub
rol
lds
inc
je
mov
add
jno
dec
inc
bound
lock
pop
mov
pop
lea
cmp
lds
shll
stos
xchg
cld
add
cmpb
jne
inc
sbb
mov
andb
fildll
mov
shl
sub
sub
add
mov
sti
out
jno
mov
sti
loope
mov
or
pop
cmp
jne
jnp
scas
adc
push
jne
cmpl
dec
inc
bswap
mov
aam
cmc
inc
ss
fnstsw
mov
mov
lock
pop
je
arpl
cwtl
push
xchg
xor
gs
dec
xor
push
push
or
pop
lods
outsl
mov
inc
andl
adc
jne
sub
mov
mov
shlb
push
and
insb
or
mov
sbbb
jl
sbb
cmp
test
enter
xlat
popf
mov
das
jmp
fstpt
jmp
and
dec
push
inc
push
push
sub
test
js
jp
ljmp
ja
cmpsb
sub
push
stos
stos
push
cltd
fcoml
cmpsl
pop
dec
aas
imul
cmp
jbe
fabs
pusha
mov
mov
and
dec
test
pop
push
stos
jle
lea
fwait
xor
repz
je
sbb
sbb
test
movb
scas
ret
in
mov
push
push
cmp
xchg
gs
idivl
pop
mov
fldl
mov
mov
fisttpl
mov
xor
adc
es
inc
sti
pop
jbe
or
jl
sbb
in
pushf
mov
stos
mov
xchg
mov
xlat
sbb
mov
inc
add
mov
sub
push
sub
inc
mov
movsb
adc
leave
and
push
cmpsl
and
rclb
cmpsl
adc
movsb
jge
fwait
cmp
inc
pop
and
imul
push
scas
sbb
arpl
loop
jl
lahf
les
cmp
add
int
js
push
mov
stc
andl
mov
adc
std
outsb
ss
inc
xchg
push
rclb
imul
out
jbe
adc
mov
push
xlat
rcll
pop
add
andl
pop
or
popa
push
mov
xchg
insb
xchg
adc
stos
pop
and
arpl
inc
cmp
jmp
fnstcw
and
sbb
paddsw
movl
ja
idivl
je
decl
mov
sbb
into
add
sahf
sbb
bswap
aaa
adc
pop
adc
mov
mov
mov
daa
sub
ja
test
sbb
jbe
cmp
dec
pop
sub
mov
lock
sbb
lret
ljmp
lods
sbb
xorb
add
inc
cmp
add
daa
and
sub
or
andb
pop
or
push
dec
imul
out
mov
cmpl
ret
ja
inc
fimuls
or
dec
adc
es
sbb
push
xor
imul
add
add
dec
gs
inc
loopne
filds
push
xchg
ja
rcr
jecxz
cmp
or
or
das
aas
mov
cmp
cmpl
lret
cmpl
mov
push
fadds
mov
mov
mov
xchg
sub
test
or
or
inc
outsl
je
sbbl
xchg
mov
pop
push
aas
test
fdivl
aam
cs
jl
mov
or
mov
add
push
popa
or
xchg
push
sub
push
dec
push
leave
or
cmpsb
jecxz
push
dec
push
enter
sbb
sbb
and
in
mov
sbb
xor
into
mov
push
and
adc
add
and
cmpl
repz
cmp
xor
rolb
jp
and
divl
scas
jns
dec
or
inc
insl
stc
mov
jg
test
sar
sub
or
jl
xchg
dec
je
push
inc
adc
fisttps
push
or
dec
mov
jp,pt
sti
mov
push
push
push
and
popa
cmp
adc
dec
mov
cmc
mov
sbb
cmp
iret
ret
pop
repnz
pop
xor
add
mov
loopne
and
push
mov
mov
orb
sub
add
inc
or
cmp
mov
rcll
push
jne
lea
fldenv
push
sub
inc
cmp
lret
cs
xor
xorb
idivl
pop
jle
cmp
jg
mov
fbld
mov
mov
cmp
push
dec
imul
dec
in
outsb
mov
pop
lea
adc
aam
out
fwait
sbb
fistpl
dec
jne
and
fsubs
fldcw
rol
jl
loope
loopne
cs
in
xor
iret
cltd
fdivs
mov
ret
adc
call
sub
out
ret
inc
enter
inc
add
mov
pop
ljmp
cmp
lock
lods
add
mov
lds
push
mov
jl
dec
sbb
mov
inc
sbb
sbb
std
insb
and
test
test
test
jo
inc
adc
inc
or
or
lahf
and
fwait
xchg
xor
nop
dec
and
mov
movsb
adc
adc
push
sbb
lahf
fwait
xchg
sbb
pushf
pop
or
or
xor
mov
lea
jge
push
mov
dec
xor
xor
cmp
out
add
movsb
lock
sub
jo
ljmp
jl
sbb
fsts
cs
and
and
sub
or
or
and
fisttpll
pop
xor
popa
mov
pop
or
xlat
dec
loope
flds
push
sbb
popa
mov
and
xor
cmpsl
movsb
fldln2
scas
addr16
dec
xchg
sbb
test
icebp
sbb
out
js
test
call
nop
adc
jo
mov
xchg
mov
rorb
jns
mov
enter
pop
pop
or
cmp
pop
shrb
push
pop
sbb
push
js
mov
xor
push
mov
sub
test
popa
lret
sbb
mov
ss
and
sbb
mov
push
push
and
fbstp
or
or
or
or
sbb
imul
and
fimull
and
js
cld
insl
sbb
push
sub
repnz
sub
insl
dec
push
mov
pop
xor
pop
loope
pushf
cmc
test
inc
push
push
xchg
cwtl
pushf
scas
mov
adc
add
ficoms
addl
and
aas
inc
rolb
or
mov
call
mov
fldz
pop
dec
je
adc
xor
test
bound
pop
adc
push
ret
inc
adc
fnstenv
scas
and
adc
mov
jmp
cmpl
push
push
push
pop
add
daa
add
addr16
mov
mov
mov
or
jmp
arpl
pop
mov
aam
jne
shlb
mov
test
sti
xor
xorb
stos
or
std
mov
add
push
movsb
xchg
rclb
mov
mov
je
mov
mov
or
push
cmp
arpl
lods
movl
or
gs
adcl
and
mov
dec
mov
popf
int
adcb
gs
inc
popf
in
les
iret
xchg
pusha
mov
and
push
shlb
adc
mov
mov
xchg
rclb
dec
fmull
cs
xchg
xchg
or
inc
pop
pushf
inc
mov
add
out
psllq
sbb
push
xor
mov
push
ja
sbb
ficompl
mov
inc
fldcw
pop
or
js
dec
adc
pop
shl
icebp
jle
xor
enter
cs
pop
aam
add
add
adc
gs
leave
data16
push
and
jnp
cmp
push
rolb
test
int3
roll
dec
ja
xlat
adc
xor
les
mov
inc
sub
lods
aam
or
and
shlb
es
scas
rorl
adc
pop
test
es
stos
andb
mov
sbbl
sub
mov
hlt
testb
lods
jle
addb
pop
push
push
or
lock
push
push
jg
jge
movsw
jle
push
movl
jo
jmp
aam
inc
sbb
leave
jne
lea
jge
iret
lea
movsl
mov
add
adc
sbb
xor
movsb
testb
int
mov
jl
jnp
sbb
call
testb
or
in
mov
dec
cmp
les
sbb
imul
sbb
std
dec
push
adc
aaa
mov
pusha
neg
sbb
and
in
add
jo
insb
and
inc
inc
cmp
cmp
xchg
mov
sbbl
add
andl
and
mov
sub
and
push
inc
sbb
push
clc
add
push
push
cmp
sub
add
gs
dec
sbb
dec
and
pusha
dec
add
push
add
dec
shll
sbb
sbb
inc
shll
sub
dec
xor
push
push
xchg
jo
cwtl
fs
mov
ret
pushf
mov
ljmp
dec
mov
aad
push
mov
test
push
mov
sub
sbb
or
push
pop
movsl
xchg
pop
loop
clc
xor
or
xor
mov
rorb
mov
pop
test
aaa
adc
push
add
mov
xchg
mov
cmp
out
and
pusha
and
cmpsb
mov
mov
mov
and
push
sbb
ret
hlt
sbb
jge
sub
dec
dec
or
add
ljmp
or
xor
sub
aam
sub
and
sbb
mov
and
mov
jp
inc
jnp
cmp
ud2
or
movsb
aas
mov
mov
mov
xor
out
sarl
sbb
pop
dec
int3
inc
lods
adc
testl
movsl
mov
or
inc
and
or
inc
sbb
jo
lret
mov
xchg
xchg
cmp
nop
jno
or
push
push
fists
or
mov
mov
add
mov
jae
lret
out
cmp
adc
inc
xor
cmp
mov
jne
js
mov
jne
addl
pop
les
cmp
lret
xchg
andb
sbb
adc
adc
push
cmp
xor
mov
push
xchg
push
sbb
sub
test
inc
sub
sbb
jb
enter
sbbl
mov
or
sbb
fstl
sbb
into
or
fwait
lods
inc
inc
sbb
jecxz
jns
mov
mov
inc
adc
ds
pop
sub
call
inc
add
push
mov
xchg
mov
sbb
es
mov
call
arpl
out
dec
cmp
insb
xchg
add
dec
push
or
or
add
pop
jne
push
addb
lods
lea
fidivrs
jno
imul
xor
es
idivl
mov
xlat
mov
ja
mov
decb
sbb
add
in
xchg
xor
rcrb
je
add
push
mov
inc
mov
mov
mov
lods
pop
int3
xor
outsb
cmpsb
or
push
or
cmovb
cmpb
ljmp
dec
test
out
and
dec
push
je
int3
and
add
loop
cmp
mov
pop
xchg
es
js
inc
jne
jb
jae
jns
and
mov
and
add
ja
je
adcl
cmp
or
or
mov
test
jmp
enter
dec
adc
enter
daa
aaa
test
adc
adc
sbb
inc
push
sahf
and
mov
inc
push
jb
mov
in
xchg
subl
leave
iret
out
xor
add
push
in
xor
clc
inc
lcall
mov
inc
jo
lret
nop
pop
push
stc
xor
test
adc
out
and
int
fistl
cmp
enter
mov
mov
scas
stos
imul
fstps
or
add
lock
jno
ret
adc
mov
xchg
or
inc
xchg
xor
xchg
and
in
das
or
mov
loop
inc
mov
inc
mov
mov
cmp
sub
insl
mov
dec
std
lret
je
or
mov
push
and
add
loopne
jo
jmp
aas
out
lcall
lea
fstpt
cmp
push
dec
leave
cmpsb
inc
inc
insb
icebp
andb
lds
andl
out
jo
repnz
add
and
fwait
push
add
and
dec
movl
icebp
add
sbb
cmp
fcoms
push
xor
adc
xor
inc
dec
loope
pop
or
adcl
ficomps
or
pop
push
lret
adc
stos
flds
cmp
pusha
lock
add
adc
pop
adc
push
and
ja
push
xor
jne
mov
jp
add
pop
xlat
or
test
dec
inc
mov
loop
pop
xchg
pop
mov
push
cmc
cmp
push
sub
and
jne
pop
sbb
cmp
je
rclb
outsb
adc
sub
in
out
cli
js
xor
call
inc
cmp
jbe
pushl
adc
ret
or
pop
into
xlat
cmpl
add
and
mov
daa
pop
and
test
rolb
test
out
dec
lods
dec
pop
xor
and
jg
adc
and
and
push
test
inc
imul
xchg
or
test
pop
xor
mov
lret
js
jl
mov
popa
xor
pop
sahf
gs
jl
push
jb
jp
cmp
jns
arpl
sbb
rcrb
or
push
aam
inc
xchg
jns
mov
mov
scas
shrl
add
dec
jmp
scas
push
add
fs
je
ret
and
pop
ret
push
add
lods
jb
cmp
mov
ljmp
sub
dec
lcall
sahf
xchg
pop
push
inc
sub
push
imul
fmull
out
inc
mov
gs
sbb
sbb
je
hlt
sub
movsb
fs
or
lods
das
imul
ret
mov
and
jbe
fsts
mov
dec
jne
dec
mov
sub
xchg
sub
iret
or
sbb
jmp
pop
xor
push
out
jge
inc
sahf
aad
mov
mov
nop
add
mov
je
movsb
cmp
sub
dec
pop
inc
popf
add
inc
sbb
push
pusha
insb
cmc
dec
add
xor
add
xor
iret
mov
outsb
pop
push
popa
movsb
push
insb
into
dec
adc
push
mov
xor
dec
adc
push
push
int3
mov
add
and
pop
push
divb
mov
push
pop
lea
push
sarb
push
fadd
movb
cmpsb
add
add
sbb
mov
fimull
add
imul
mov
loopne
mov
add
adc
mov
pop
mov
cmp
jge
outsb
or
sub
je
mov
push
push
fs
xchg
jno
cmp
int3
in
decb
add
or
fs
pop
add
mov
repnz
cmpsb
mov
dec
idivl
add
mov
sbb
int
shl
push
pop
mov
mov
adc
sbb
jle
punpckhdq
sub
jo
mull
xor
ret
leave
jmp
js
jg
lods
mov
outsl
push
push
mov
stos
xchg
and
and
sub
dec
iret
movsl
leave
mov
add
xchg
add
jle
shlb
data16
mov
pop
adc
pop
shrl
adc
add
fs
sbb
es
inc
nop
adc
and
add
cmp
sti
es
mov
adc
js
dec
mov
pushf
mov
dec
pop
mov
or
outsl
add
mov
cld
xchg
incb
cmp
jae
imul
cmp
mov
cmc
aam
or
inc
mov
add
adc
sbb
lock
sbb
daa
mov
push
sub
mov
clc
add
add
test
xlat
loopne
in
pop
mov
cmp
push
out
pop
and
jb
and
in
inc
mov
dec
adcl
cmp
call
xchg
inc
aas
fneni(8087
rdpmc
test
lcall
or
rep
movsb
sbb
pop
or
push
xchg
or
push
pop
adc
cmp
lock
das
xor
pop
mov
rcrl
push
adc
xchg
shrb
jno
in
adc
mov
adc
and
push
push
xchg
or
sahf
out
mov
add
incl
xchg
inc
jne
pop
adc
ret
xchg
and
jb
popa
push
inc
shlb
ret
add
popa
pop
mov
jl
in
lea
mov
shrb
pusha
add
push
cmpl
mov
or
fcompl
rclb
inc
rcpps
jne
mov
popa
and
push
adc
scas
pop
mov
mov
andb
dec
or
test
cmp
jne
aam
cmp
shlb
loopne
loop
aas
enter
jecxz
pop
sarl
shr
rcr
or
jne
div
cmpsb
mov
inc
inc
mul
add
jb
cmp
jg
dec
ja
jb
cmp
or
xor
and
out
dec
adc
or
fadds
cmp
fucom
mov
insb
test
je
push
jne
aad
sub
mov
aam
int3
mov
in
popa
idivb
or
xor
xor
sub
push
mov
add
test
push
aaa
lock
mov
fimull
out
fsubl
mov
sbb
cmp
push
ss
mov
lock
and
and
push
pop
outsl
mov
dec
movsb
inc
orb
test
jne
cmp
and
adc
mov
mov
jg
and
add
cmp
jle
jmp
jne
jo
mov
pop
sbb
sti
call
mov
sbb
add
cmpsb
fisubs
and
shl
popa
sahf
test
pop
mov
lret
inc
push
fimuls
lods
sbb
mov
jle
lcall
sub
jmp
lea
lea
jns
push
or
ret
fnstenv
push
push
fsubrs
add
push
jne
cld
inc
jecxz
dec
or
jnp
mov
push
push
or
cmp
cs
bound
xor
scas
xchg
rorl
pop
insl
cmp
mov
das
mov
jne
push
pop
sub
hlt
dec
sahf
hlt
jbe
mov
js
loopne
adc
jecxz
push
push
or
jb
ret
cmp
xchg
adc
ljmp
mov
inc
adc
call
jae
pop
insb
mov
cmp
aam
or
dec
in
xchg
int3
popf
and
pop
jle
inc
js
sub
push
fiadds
fs
insb
lahf
xchg
stc
adc
inc
adc
jge
adc
cmp
sbb
cmp
fs
sub
jmp
or
dec
dec
pop
mov
sbb
pop
or
loop
dec
in
add
pusha
shl
or
in
adc
dec
pop
add
push
mov
repnz
nop
or
adc
idivl
subb
cmp
cmp
xor
xchg
adc
jbe
test
adc
xor
cmp
pop
clc
daa
pop
cli
daa
mov
inc
mov
inc
fadd
add
push
cmc
or
add
jp
adc
test
stos
push
adc
test
mov
fdivrs
cld
or
xchg
arpl
bound
inc
or
and
mov
pop
cmp
push
movsb
in
jbe
xchg
bound
push
cmpsb
add
loope
ret
jbe
shl
and
add
int3
mov
jae
adc
imul
sbbl
dec
push
hlt
or
push
mov
mov
and
mov
cmpb
or
in
aam
fldt
clc
jns
inc
pop
push
and
pop
add
or
pop
jns
fldl
and
add
add
out
push
cld
test
into
and
test
add
ljmp
ljmp
icebp
xor
div
in
cmp
notl
fwait
add
stos
jns
daa
movsl
jbe
sbb
mov
push
jge
dec
lea
push
subb
jne
push
imul
push
shrl
pop
xor
clc
lea
inc
stos
shll
jne
decl
andl
dec
sub
ja
rclb
xchg
push
adc
or
jnp
test
mov
mov
scas
or
cmp
or
push
inc
icebp
movb
mov
lods
rol
je
push
pop
dec
fcomp
in
fmuls
lret
push
cmp
xor
insl
xor
mov
xchg
ss
sbbl
cmp
push
xchg
adc
popa
mov
adc
dec
cmp
push
push
dec
ret
outsl
movsb
movsl
and
dec
inc
mov
hlt
nop
adc
or
aam
mov
popa
xorb
fdiv
ficompl
shl
shlb
push
loopne
icebp
mov
push
cld
jne
cmp
jecxz
invd
xlat
push
test
adc
pop
jnp
push
repz
cmc
pop
cmp
mov
movb
xor
or
lret
cwtl
xchg
mov
je
cmp
inc
pop
or
lcall
addr16
dec
bound
stc
jl
cmp
push
push
sub
xor
sbb
jbe,pn
lea
dec
push
adc
ljmp
sbb
pop
jle
mov
cmp
mov
shr
push
out
adc
or
push
adc
lea
push
jnp
int3
mov
insb
daa
cmp
repnz
adc
mov
testb
scas
push
pop
push
insb
rorb
rolb
pop
xor
les
dec
loop
in
mov
stc
inc
inc
push
int
xor
xchg
nop
mov
test
pusha
pusha
cmp
push
push
lret
sbb
mov
icebp
cmp
pop
int3
or
xor
or
sbb
imul
sbb
cmpsb
imul
cwtl
test
sub
adc
sub
sub
inc
add
mov
cmpsl
jo
and
pop
fbld
pushf
lret
ret
subb
sbb
aas
cli
xor
xor
and
mov
sbb
mov
mov
popl
sub
in
sti
push
pop
jns
adc
cmp
cmpsl
mov
stos
movd
cmp
xlat
jmp
sbbb
add
jne
dec
loopne
adc
mov
mov
test
push
rorb
adc
mov
lretw
sahf
sbb
lods
push
dec
adc
dec
sahf
xchg
addr16
fs
jb
cmp
shrb
adc
add
jge
rolb
loope
out
cmc
jecxz
cmpsb
xor
sbb
jbe
pop
xor
cmp
bts
cmp
push
and
in
test
dec
ja
adc
or
in
sbb
sub
jl
sti
jae
or
xchg
dec
cmp
inc
pushf
sbb
loop
fimuls
pop
mov
scas
sbb
sbb
or
fsubrl
je
mov
or
jo
jl
jbe
test
and
sarb
pop
and
aas
pop
shll
mov
cmp
lea
mov
aaa
sbb
lret
sbbb
int3
cmpsl
test
fs
es
inc
push
out
test
data16
push
or
cmp
adc
cmp
add
cld
ret
jecxz
jb
mov
jl
out
sbb
movmskps
jecxz
daa
jle
cmp
cmp
jmp
mov
aas
sbb
js
sbb
or
loopne
and
shlb
jbe
and
hlt
jns
push
jb
clc
push
inc
or
jo
and
mov
imul
mov
test
mov
add
subb
push
dec
add
call
orb
les
shlb
push
js
push
push
sub
lock
jg
push
loopne
mov
mov
sbb
test
mov
movl
leave
cmp
jbe
ss
cs
jo
xor
push
test
andl
inc
jmp
std
dec
ret
mov
or
jb
rcll
je
loopne
add
inc
cmp
dec
or
les
mov
cmp
ds
sbb
dec
hlt
rclb
mov
dec
sbb
cmp
ss
pop
jbe
adcb
jae
sbb
and
adc
cmp
mov
int3
jb
cmp
ficoml
iret
adc
xchg
das
iret
in
push
mov
jne
xor
push
jbe
push
cmp
mov
adc
mov
jne
mov
outsb
lahf
ss
int3
dec
or
je
sarl
clc
in
adc
sub
push
cld
mulb
adc
in
ret
movsb
sbb
push
adc
mov
test
test
in
je
rclb
sub
les
sub
add
push
outsb
lods
sar
pop
add
adc
push
adc
inc
add
push
mov
pusha
sbb
movb
cltd
nop
inc
cltd
and
mov
sub
inc
jmp
push
mov
xor
aas
xor
push
stos
push
loope
call
xorl
jmp
add
dec
jo
inc
xor
jbe
sub
jno
mov
fsts
xchg
xchg
push
dec
mov
fistl
mov
or
dec
add
je
xchg
outsl
popa
add
or
cli
jl
cmp
nop
cmpsl
cmp
lock
dec
mov
je
and
int
pop
and
xchg
inc
or
fcoms
xchg
push
cmpsl
adc
sbb
jnp
and
test
es
aaa
xor
lock
cmp
push
xor
and
add
adc
shll
sub
and
lret
mov
adc
sbb
enter
mov
or
loopne
out
pop
adc
mov
and
or
enter
cmp
and
pop
cmp
repnz
sbb
sbb
and
sbbb
add
or
sbb
sbb
adc
sbb
dec
hlt
ficomps
push
xchg
and
jns
in
and
test
adc
shrl
sbb
pop
icebp
nop
test
hlt
mov
dec
sub
jbe
adc
jg
out
imulb
inc
and
test
push
and
pop
add
add
cmp
fiaddl
mov
and
cmpb
cmp
imul
mov
adc
test
push
dec
lds
lds
xchg
mov
push
xor
push
push
jnp
sub
sub
lods
or
xor
push
loopne
sbb
xor
xor
push
add
addb
mov
sahf
jo
push
mov
arpl
inc
pop
cmp
or
repz
jne
push
lods
orb
mov
negl
add
xor
pop
cli
mov
push
jg
add
add
or
add
push
push
mov
mov
adc
popa
in
push
das
cmp
test
fbld
mov
push
jmp
push
mov
lods
leave
fdivs
dec
cmp
lock
xor
jne
inc
xchg
lock
into
lods
dec
test
or
outsl
mov
mov
add
mov
dec
and
dec
sub
fmul
sub
imul
mov
xchg
sbb
cmp
fcmove
add
test
ja
test
mov
cmp
inc
in
xchg
adcl
loopne
inc
or
jne
mov
cmp
adc
or
sub
int
xor
mov
cmp
pop
inc
cmp
pop
and
xchg
or
mov
sbb
mov
call
out
mov
push
sbbb
jo
cmc
rcr
xor
inc
pop
lods
push
jno
loop
sbb
jge
in
push
dec
push
stos
push
je
push
pop
idiv
mov
inc
jne
movsb
sub
push
xor
outsb
sbb
pop
or
addb
xchg
xor
aaa
mov
adc
adc
lock
daa
mov
test
mov
lock
or
bound
out
and
xchg
mov
and
push
test
aas
aaa
hlt
add
jg
int3
js
jo
cld
push
adc
aam
xchg
and
xchg
cltd
cltd
cwtl
in
out
xor
cmp
adc
inc
dec
into
add
neg
push
pop
push
sbb
push
inc
adc
and
ret
push
jecxz
mov
add
insl
mov
or
add
jle
xchg
add
xchg
icebp
and
adcb
inc
sbb
bound
sub
test
add
out
std
sbb
jo
mov
adc
gs
loope
mov
int3
mov
andl
sub
insb
pop
jbe
testb
adc
jo
cltd
les
xor
jl
test
orl
adc
pop
imul
adc
inc
push
mov
jp
inc
aas
cmp
ret
cmpsb
test
mov
mov
cmp
cmp
push
arpl
adc
push
pop
adc
xchg
cmp
int
dec
fisttps
pop
jbe
aas
add
das
fdivr
ror
nop
rol
xor
imul
add
loope
mov
imul
add
push
ret
adcb
int3
sbb
sub
xor
pop
cli
xor
mov
mov
sahf
sub
push
mov
dec
adc
or
adc
or
inc
pop
pop
cld
daa
xlat
xchg
pop
xchg
das
jnp
inc
cmp
insb
xlat
stos
lret
cmp
adc
fsubrp
out
lcall
enter
ret
cmp
push
out
out
fcmovnbe
xchg
aaa
aas
je
sbb
rol
cmp
icebp
test
movsb
mov
jne
mov
mov
mov
fdivl
add
cmp
mov
jl
sbb
stc
sbb
shll
mov
mov
shlb
dec
les
scas
push
fnstcw
jnp
or
sbb
adc
sbb
or
aas
cmp
push
xor
cwtl
das
sub
xor
xchg
mov
add
sahf
jp
xchg
xchg
lock
jge
add
or
jns
mov
mov
add
jge
dec
cmp
sbb
shlb
sub
ret
sub
xlat
jb
addb
cmp
and
rcr
adc
pop
and
mov
or
add
sbb
mov
pop
stos
cmpsb
or
inc
adc
jnp
mov
test
addr16
call
cmp
int3
mov
inc
cs
jp
push
aam
cmp
insb
clc
xchg
xor
push
push
fdivrs
adc
and
gs
mull
cmp
addl
push
push
in
pop
imul
push
inc
dec
jbe
lea
xchg
imul
and
push
push
pushl
push
sarl
pop
add
sbb
mov
cld
scas
rol
addr16
hlt
add
lret
sub
nop
add
xchg
jns
sub
sub
xchg
loop
les
add
test
push
inc
push
or
xor
lret
push
or
dec
shrl
movl
or
and
pusha
pushf
lret
sbb
jle
mov
or
cmc
cld
js
push
stos
xchg
adc
cmp
dec
jno
out
sbb
loopne
std
add
outsb
inc
dec
mov
addr16
shlb
in
and
mov
adc
scas
mov
and
test
mov
fiadds
mov
add
aas
out
dec
out
fistpll
ss
adc
cmp
je
call
xor
rcr
fldl
add
xchg
and
fisttpll
aad
in
cmpsb
or
jne
popf
add
and
pop
jne
sarb
adc
pop
xor
in
in
xor
or
frstor
or
popf
aaa
je
inc
sub
dec
fs
pusha
mov
insb
jl
lret
hlt
dec
or
hlt
cmp
jb
pop
sub
push
add
out
jbe
insl
sub
pushl
adc
imul
push
add
inc
adc
mov
fnstenv
xor
mov
and
pop
fdivrs
and
pop
je
jne
adc
sbb
jb
sbb
cltd
or
push
pop
or
mov
in
pop
pop
push
add
shll
stc
fiadds
add
jp
or
adc
adc
dec
add
inc
mov
or
rcrb
inc
and
lods
popa
xchg
cmp
add
push
sub
dec
xor
adc
and
xor
cmp
push
call
jle
xchg
xchg
incl
and
pop
mov
mov
int3
jmp
call
filds
stc
mov
jg
adc
mov
jl
pop
orl
rorb
push
loopne
or
xor
sbb
cmp
sti
cmp
sbb
test
pop
xor
xor
push
or
fldl
jg
xchg
idiv
xor
fistpl
adc
mov
rcrb
add
add
jg
mov
jne
cmpb
jne
inc
adc
and
repnz
into
push
sahf
push
test
pushf
movsb
jo
sub
je
ret
push
push
and
jmp
and
push
push
testb
and
sbb
or
mov
orb
mov
fldl
sti
cld
cmp
push
enter
add
lret
pop
stos
add
stos
pop
pop
in
scas
fwait
scas
nop
sbb
push
mov
inc
mov
and
repnz
xchg
pop
inc
lea
out
xchg
sub
mov
scas
jo
sahf
into
pusha
mov
lods
push
pusha
xchg
popa
sbb
dec
lods
mov
jbe
daa
mov
mov
push
mov
test
dec
insb
lds
cmp
and
lock
or
inc
es
incl
dec
ret
mov
mov
inc
repnz
and
jnp
pop
inc
dec
and
loopne
mov
pop
xor
xchg
jns
sub
test
pop
int3
inc
decl
adc
push
or
aam
dec
adc
mov
push
inc
lods
adc
gs
ror
mov
push
in
or
lret
roll
test
dec
mov
int3
dec
rorb
sub
xlat
cmp
decl
and
int
pop
lea
bound
cli
fdivrs
out
shr
imul
call
repnz
data16
adc
lods
adc
ljmp
daa
mov
mov
imul
push
push
xor
sub
int3
popf
je
cld
inc
sbb
incl
xlat
push
mov
add
jb
mov
cmp
and
hlt
add
inc
add
xchg
rcr
cld
ljmp
mov
pop
add
insb
jne
pop
adc
sbbl
mov
inc
pop
lcall
dec
xorl
and
mov
out
push
cwtl
mov
dec
testb
add
fwait
test
push
xor
jmp
outsl
and
push
sbb
pop
adc
adc
imulb
popa
add
mov
rcrb
mov
lret
sbb
cld
lea
mov
inc
add
mov
out
add
push
inc
and
loopne
pop
or
pop
jo
je
sbb
ret
inc
filds
and
push
fdivrl
xor
aam
cmp
fmull
leave
jb
ret
push
xor
push
popa
call
add
mov
rorb
adc
test
shrb
outsb
xor
xor
sub
ss
pop
and
push
adc
xor
rclb
clc
pop
add
fildl
lock
loopne
jo
add
add
push
test
xchg
cmp
data16
incl
cmp
ret
repz
addb
add
or
cmp
stos
fldt
add
add
mov
lea
insb
cld
je
jecxz
push
mov
add
jg
pop
lock
and
stc
sahf
rorb
mov
ljmp
sub
jmp
rcrb
sbb
outsl
adc
sahf
sub
leave
add
addl
out
inc
loopne
test
mov
cmp
push
nop
mov
jge
and
fimull
push
mov
and
or
movl
add
adc
nop
sub
jl
rolb
push
call
ret
push
mov
inc
adc
mov
cld
jne
mov
xor
ret
cmp
jmp
or
adc
or
insb
and
cmp
jmp
add
inc
stc
push
icebp
lcall
ret
icebp
add
cmp
xor
sbb
push
test
int3
test
sbb
outsl
mov
lcall
out
je
int3
cld
test
inc
mov
jmp
lock
lcall
std
add
inc
adc
lock
sarb
ret
add
inc
popa
xor
and
loopne
shlb
mov
mov
imul
psrlq
and
fldt
clc
dec
test
incl
push
add
adcb
mov
push
popa
clc
jmp
clc
call
gs
dec
cld
mov
call
aas
xor
in
add
in
push
lods
outsb
cmp
add
add
fldl
mov
movl
fwait
mov
add
jo
cwtl
cld
aam
jns
push
adc
in
add
iret
insb
and
and
add
rclb
nop
fidivl
divl
mov
pop
push
roll
int3
lea
jecxz
inc
mov
mov
loope
dec
fs
add
mov
mov
imul
ret
add
cmp
int3
adc
hlt
negl
mov
neg
dec
cmp
scas
push
lea
adc
cmp
push
test
sub
test
in
ljmp
sbb
add
push
clc
enter
mov
add
cmpl
mov
nop
outsb
rolb
inc
pusha
push
push
mov
jns
xchg
je
mov
jle
rol
push
int3
pop
fistps
sbb
add
add
not
xor
mov
push
pop
or
mov
clc
cwtl
push
idivb
sub
data16
fwait
jmp
add
sbb
lret
pushf
xlat
test
in
bnd
movmskps
push
scas
jl
clc
pop
push
inc
call
ja
dec
call
sbb
inc
xchg
lock
in
mov
jle
xchg
lods
rolb
push
gs
jae
push
adc
sbb
fs
les
add
push
test
add
sbb
icebp
imul
jb
fs
incl
repz
pop
jg
cld
add
sbb
and
clc
sbbb
xchg
xchg
mov
add
push
push
push
insb
std
stos
jle
jp
scas
jmp
push
xor
adcl
in
push
inc
mov
mov
cmp
insb
sbb
inc
movsl
pop
jo
push
cmp
mov
shll
adc
loopne
mov
repnz
int3
outsl
pop
adc
xor
inc
pcmpeqb
dec
cwtl
mov
shlb
enter
das
push
outsb
dec
dec
cwtl
jb
add
xor
mov
pop
xchg
aas
or
fimuls
jo
inc
push
add
adc
add
add
js
add
call
push
sti
sub
cmp
xor
imul
pop
in
jp
jge
cwtl
out
push
and
jno
faddl
cmp
test
sub
mov
adc
add
mov
dec
and
arpl
mov
xchg
dec
xor
push
xor
and
inc
or
or
cld
call
mov
pop
push
les
cmpsb
mov
adc
sub
adc
add
fldt
mov
inc
aam
decl
pop
pop
jo
je
int3
jmp
ret
rcll
movl
mov
std
call
adc
mov
pop
pop
add
pop
call
add
clc
mov
push
test
cmp
shl
cmp
push
loopne
rcrb
je
jmp
dec
xor
mov
pushf
jge
xor
aam
inc
pop
jae
inc
mov
sub
out
jecxz
pop
adc
lock
mov
add
adc
adc
lods
clc
add
adc
mov
cmp
or
call
adc
les
sbb
inc
dec
dec
push
pop
test
call
sbb
mov
add
pop
fwait
push
xor
jmp
out
subb
push
enter
in
or
pop
add
data16
sbb
pusha
shrl
in
addl
push
mov
or
cwtl
add
push
mov
cmpsb
js
mov
mov
push
or
nop
push
andl
shl
push
mov
jbe
inc
cwtl
pop
insb
fldz
pop
sub
jo
popa
and
repz
popa
inc
fstl
stos
call
xor
cmp
mov
sti
add
loop
sub
lea
imul
aad
sub
mov
cmp
pop
add
xchg
xor
das
clc
in
cmp
in
lock
cmpsl
jmp
decl
mov
or
nop
insl
and
xchg
pop
gs
into
lcall
mov
add
fcomps
mov
cld
lea
add
adc
hlt
xchg
shl
faddp
stos
mov
sbbb
add
decb
pop
mov
or
fimull
cmp
subl
sub
push
jnp
jns
push
xor
or
xor
idiv
or
push
mov
fdivs
cmc
xor
pop
dec
push
inc
pushf
fdivs
lods
dec
inc
rorb
scas
mov
adc
lock
rorl
mov
mov
mov
inc
jo
mov
cmp
data16
fnstcw
push
mov
cmp
movsb
mulb
dec
aas
mov
call
add
add
push
mov
jnp
push
add
out
push
add
test
jmp
subl
hlt
adcl
dec
xchg
push
clc
lea
lock
xchg
mov
pop
add
inc
dec
cld
pop
clc
int
cmp
out
pushf
push
jae
outsb
std
pop
add
jne
mov
mov
dec
ret
repz
lea
jbe
sbb
fisttpl
or
out
insb
or
shl
loope
fwait
icebp
jg
lcall
sarl
xchg
inc
stos
sbbl
mov
push
xabort
jmp
cs
inc
cmp
addl
negb
xchg
inc
loope
and
stos
cs
pop
xchg
push
or
les
xchg
mov
dec
jb
xchg
adc
xchg
shl
js
fwait
mov
das
test
out
mov
lock
mov
decl
and
add
lock
int3
or
adc
cli
push
hlt
test
push
orb
mov
js
pop
aam
jo
fildl
insl
fimull
ucomiss
stos
out
js
incb
pop
test
add
clc
mov
sbb
outsb
push
in
push
test
and
cmp
jecxz
push
hlt
gs
add
xchg
push
jnp
push
out
mov
inc
fmuls
add
mov
cmp
inc
jecxz
pop
xchg
cmp
in
mov
sar
std
mov
mov
andl
mov
jne
push
lock
jle
mov
out
lods
loop
add
or
faddl
push
dec
int3
add
decl
add
adc
xlat
push
nop
xchg
inc
jl
cli
push
jge
mov
dec
jmp
iret
adc
xor
mov
add
or
adc
fstpt
mov
mov
loopne
lea
push
xor
push
loopne
decl
xchg
mov
add
pop
push
mov
fnstcw
in
add
hlt
cmp
movsb
loope
pop
std
std
test
fdiv
jle
add
gs
mov
adc
loopne
jbe
mov
pushf
sub
mov
mov
sbb
push
add
adcb
in
mov
popa
push
add
popa
mov
lahf
xchg
aam
inc
cmp
lahf
loopne
std
cmp
js
lods
inc
inc
ud0
push
xchg
test
pop
push
call
stc
push
aad
clc
pushl
cmp
int3
lcall
push
jge
or
faddl
loopne
pop
pop
jp
movsb
push
jns
hlt
dec
pop
add
pop
add
push
loope
inc
mov
cmp
dec
or
dec
and
lcall
popa
scas
sahf
add
inc
sub
push
in
pop
cmp
outsl
js
dec
cmp
lock
testb
add
ds
scas
int
xor
xchg
mov
not
mov
fcoms
add
dec
mov
fs
ret
add
hlt
enter
clc
inc
shrl
in
shrb
add
fisttps
pop
xchg
lea
cli
test
ret
xorl
xor
fwait
adc
push
test
std
xor
add
push
or
xchg
ljmp
hlt
xor
jp
mov
in
roll
sub
add
gs
jb
and
inc
mov
jne
xchg
adc
pop
and
xor
push
mov
pop
ja
int3
push
or
popa
push
clc
dec
insb
push
push
dec
add
pop
lea
mov
add
pop
jo
divb
ret
popa
xor
sbb
xchg
cmpsb
ds
pop
xor
dec
nop
mov
or
fildll
mov
ja
add
mov
or
aad
pusha
push
pop
cmp
outsl
scas
jns
ret
xor
dec
add
stos
mov
sbb
ja
in
enter
mov
rorb
push
inc
xchg
icebp
mov
loop
lods
cmp
push
xor
xor
mov
stos
push
push
cld
push
cmpsl
es
pusha
adc
movsb
test
fiadds
pop
es
repnz
mov
mov
in
cltd
push
sar
sbb
adc
add
jns
xor
mov
arpl
inc
loope
jmp
cli
sub
out
mov
ljmp
mov
dec
or
mov
add
in
shrl
popa
and
shrb
adc
dec
orb
data16
pop
ret
cmp
shlb
sub
cmp
icebp
in
scas
sarl
daa
pop
push
or
ds
pop
icebp
stos
mov
outsb
push
push
idiv
sbb
das
ljmp
das
lock
jne
pop
adcl
xor
dec
mov
push
inc
push
and
mov
add
movd
add
cwtl
data16
jb
test
mov
adc
dec
cli
addl
mov
or
clc
out
jp
push
in
fcomi
je
add
nop
mov
and
jl
sbb
gs
insb
clc
dec
mov
jb
ficoml
incl
lock
pop
mov
jne
movl
mov
lods
or
push
adc
test
shl
xor
push
pop
mov
or
in
stc
test
add
add
mov
push
movsl
jle
mov
mov
pop
es
cld
jno
int
inc
xchg
add
imul
je
icebp
fisttps
pusha
push
push
jbe
inc
ljmp
dec
or
bsf
fs
aad
mov
push
rorb
mov
inc
shrb
pop
mov
dec
pushf
mov
dec
loope
jmp
inc
int3
cmovo
imul
mov
mov
push
add
jne
add
call
jl
pop
add
dec
aas
jmp
adc
add
xlat
ja
mov
mov
adc
adc
fistps
pop
cmpl
int3
mov
jmp
push
aad
and
out
jmp
add
adc
shlb
roll
add
add
loop
clc
out
loopne
mov
add
cwtl
data16
or
addl
call
imul
add
cmp
andb
cmp
xor
gs
pushf
inc
pusha
outsb
in
adc
jg
push
jo
mov
xchg
je
push
clc
or
adc
int3
xor
or
inc
push
outsl
inc
xor
dec
mov
or
adc
inc
sbb
pop
faddl
imul
adc
ss
mov
addb
cld
fs
mov
arpl
addb
adc
mov
out
in
sti
or
sbb
xchg
enter
push
roll
std
bound
hlt
add
aam
rorb
cmp
xchg
xor
jne
mov
sub
xchg
push
jg
mov
adc
fs
fistl
int3
pop
adc
fucomip
sub
mov
xor
mov
inc
stos
das
push
pop
cld
in
sarl
cli
pop
movsl
or
or
dec
leave
xchg
mov
lock
dec
out
adc
js
push
mov
dec
add
or
pop
jae
cltd
mov
sbb
ret
ljmp
mov
mov
inc
test
mov
inc
nop
jmp
repz
xchg
jmp
mov
lret
inc
xchg
jge
inc
xor
push
fidivrl
cmp
add
sub
xchg
mov
mov
jl
pop
add
mov
cmp
sub
push
test
gs
or
loop
push
adc
sub
jle
add
jle
stos
ljmp
sub
or
add
jmp
push
test
movsl
rclb
jb
mov
lds
rclb
fisubl
mov
xor
xorb
add
push
test
dec
inc
insb
pusha
xchg
bound
insl
dec
call
adc
cmc
outsl
push
add
icebp
add
sbb
push
push
cmp
jp
jne
mov
pop
lock
dec
orl
xchg
in
mov
mov
addr16
cmp
call
data16
mov
or
xchg
push
inc
in
movsb
test
scas
add
int3
inc
popa
sbb
pop
mov
test
cmp
orb
add
ljmp
mov
sar
rcpps
sbb
lods
fsubs
shlb
outsb
mov
push
outsl
lock
sahf
jmp
ret
push
sbb
movsb
js
gs
scas
ret
inc
xor
call
cmpsl
mov
sub
in
add
loop
in
mov
mov
add
stos
shll
mov
cltd
jmp
push
dec
and
dec
mov
mov
pop
jno
sub
in
adc
inc
cmc
jecxz
sub
jo
dec
sahf
stos
sub
xchg
inc
xorl
mov
sub
or
into
inc
and
add
cmp
adc
fs
mov
mov
add
test
or
pop
and
push
mov
lock
mov
and
push
mov
pop
xchg
mov
cld
xor
pop
push
jg
jne
insl
mov
add
or
pop
push
sbb
inc
out
mov
adc
add
lock
lret
aas
mov
insb
mov
mov
outsb
test
fadds
cwtl
mov
push
adc
xor
movb
aas
adc
pop
jg
mov
push
scas
add
xchg
pusha
ss
mov
cli
cli
clc
sbbl
sbb
xor
mov
sysret
lds
push
mov
bound
add
and
mov
stos
mov
xchg
sbb
call
in
aam
sbb
nop
jmp
inc
cmp
gs
adc
add
movnti
mov
js
in
jmp
mov
popa
and
jg
cmpl
mov
dec
pushf
popf
mov
shl
adc
lock
call
call
inc
push
xchg
pop
sbb
hlt
mov
inc
mov
add
cmp
cli
mov
sbbb
jno,pn
call
push
lock
sbb
push
xchg
mov
roll
fs
loopne
pop
inc
push
enter
add
aas
movsl
pop
js
inc
pop
xchg
shll
cmp
es
mov
into
into
inc
ret
imul
adc
loop
pop
push
fisttpl
out
mov
pop
push
fs
cwtl
or
sub
pop
je
and
xor
sub
orl
fadds
adc
cmpb
shll
enter
xor
push
mov
dec
mov
jl
adc
push
cld
sbb
adc
cmp
outsb
add
cs
push
jo
cs
mov
popa
outsb
and
incl
decb
pop
push
test
push
data16
decb
rcl
fsubs
cmp
popa
ja
inc
lods
sbbl
rcrb
jo
mov
cmp
pop
jo
fisttpl
lods
lcall
test
shl
inc
cld
aas
jp
cld
std
mov
pop
xor
fiaddl
jge
pop
insb
fnsetpm(287
outsb
or
mov
cs
adc
bound
scas
cmp
nop
pop
cmp
call
or
insb
mov
mov
cmpl
lret
push
jo
mov
call
or
loopne
aaa
jmp
aam
stos
test
sbb
pop
fdivrs
pushw
dec
les
cmpl
add
jns
and
mov
xor
mov
adc
adc
cmp
gs
adc
es
xchg
sbbl
aam
xor
jbe
inc
insb
out
sysexit
fcomps
ljmp
lock
dec
add
sahf
mov
add
insb
xchg
dec
add
jbe
fwait
aaa
shll
and
sbb
add
or
pop
bound
or
jb
inc
mov
out
in
outsl
mov
dec
push
orl
ffree
mov
mov
xor
jae
add
push
movsb
clc
xchg
and
data16
xchg
or
enter
outsl
push
add
push
shll
xchg
add
cmp
lea
mov
push
or
imul
xchg
dec
dec
cmp
stc
push
test
xor
aad
dec
add
mov
sub
mov
mov
add
loop
sbb
imul
fdivl
nop
pop
incb
push
insb
add
in
xor
push
sub
aaa
ljmp
cmp
jo
aam
or
ficoml
je
mov
rorb
cld
pop
icebp
push
fists
scas
movsb
mov
or
data16
jmp
outsl
mov
clc
cli
pop
loope
enter
fiadds
inc
cmp
test
je
push
enter
ror
sbb
add
add
mov
rolb
pop
push
mov
cmp
lcall
arpl
out
mov
or
icebp
or
bound
neg
incl
push
cmp
jne
inc
imul
movsb
and
dec
push
and
hlt
lods
xor
fwait
adc
in
rcrb
decl
inc
outsl
pop
dec
xchg
fmuls
test
jne
decl
mov
add
nop
pop
pop
xor
mov
pop
cld
inc
adc
jb
cmp
sub
inc
mov
inc
clc
mov
dec
in
xor
push
push
add
mov
cmp
mov
into
mov
push
jge
sub
out
testl
jmp
push
inc
adc
push
add
mov
ror
addl
dec
add
insb
jbe
shl
cmp
hlt
mov
lea
ljmp
mov
sbb
fidivs
pop
pop
or
dec
ss
ljmp
or
inc
mov
test
add
hlt
out
bound
mov
sar
pop
cmp
cmp
je
stos
addr16
pop
popa
push
stos
adc
cmp
decl
dec
add
ljmp
pop
and
stos
mov
push
mov
aaa
or
sahf
inc
loop
cli
outsl
das
and
cld
push
xor
lods
enter
std
push
or
mov
mov
push
add
ret
push
mov
xchg
jg
unpckhps
loope
int3
push
int3
gs
add
inc
xor
mov
jmp
icebp
lahf
rcrb
add
je
sbbl
shr
mov
or
xor
ss
mov
insl
cmp
adc
mov
push
push
adc
jp
add
adc
xchg
jb
push
push
cltd
push
mov
hlt
mov
cld
mov
bound
xor
fistl
mov
and
test
pcmpeqb
jno
lahf
mov
add
pop
hlt
outsb
push
in
pop
loope
push
push
mov
addb
sub
lods
mov
repnz
pop
hlt
add
push
mov
xchg
pusha
xlat
int3
leave
sub
je
xor
jp,pt
ss
dec
jle
and
aam
cmp
cmc
pop
xor
je
cmp
or
rolb
insb
mov
sldt
add
mov
or
insb
decl
add
or
sub
gs
jge
insl
cli
out
add
mov
orl
enter
test
push
test
push
call
mov
fsubr
pop
sub
je
cmp
sub
push
mov
push
mov
js
adc
inc
cs
aad
sti
lea
push
xchg
loop
mov
sbb
or
sbb
lret
test
adc
dec
mov
mov
adc
sbb
jb
outsb
or
sub
movsb
aas
mov
xor
push
xor
xor
sub
jne
call
jp
repnz
ret
or
pusha
cmp
mov
inc
jo
je
test
xor
ficompl
inc
xchg
lds
xor
cmp
rolb
push
push
add
cmp
or
xor
push
pop
mov
inc
sbb
push
dec
push
push
loop
xchg
je
jg
add
rorb
add
mov
sarb
lds
adcb
inc
adc
jae
cmp
loopne
and
xor
push
repnz
push
fsubr
xchg
xor
roll
mov
out
mov
jne
pop
ljmp
jbe
hlt
add
cwtl
mov
int
cmp
fadds
push
adcb
imulb
lds
adc
incl
leavew
mov
ljmp
sbb
mov
bound
repz
jmp
les
addl
sbb
repz
stc
test
mov
adc
incl
mov
mov
iret
mov
test
lods
adc
push
or
loope
cmp
mov
bound
xchg
mov
jp
inc
subb
pusha
subb
ljmp
sti
gs
cmp
inc
popf
mov
and
sbb
rolb
ret
inc
jl
dec
xchg
push
xor
push
jmp
sub
jecxz
adc
mov
push
add
push
pop
adc
jg
lret
xor
xor
mov
movsb
pop
adcb
lcall
add
inc
sbb
sbb
or
sbb
js
inc
sti
outsl
mov
ret
xchg
js
inc
test
aam
jg
mov
add
sub
lock
cld
std
int3
nop
mov
push
cmovs
jle
cmp
imul
fs
pop
icebp
leave
cmpb
mov
cmp
dec
push
dec
sbb
and
sbb
aad
lock
shlb
add
std
cmpsl
mov
movsl
adc
mov
sti
and
adc
or
push
mov
shrb
in
data16
add
fs
push
rolb
in
jns
xchg
push
aaa
adc
mov
and
dec
int3
enter
mov
push
lods
push
test
ret
or
dec
test
and
aad
into
ret
loopne
lods
out
gs
jle
xor
into
addl
movsb
push
rorb
in
xor
sbb
lds
pop
mov
adc
cld
inc
xchg
push
movsb
inc
pop
hlt
testl
jb
call
subps
adc
xor
js
inc
cmp
jge
mov
scas
jae
mov
or
roll
cmp
insl
xchg
dec
mov
xlat
mov
fisttps
add
mov
inc
sub
inc
cld
repz
incl
xor
xor
cmp
cltd
or
loope
add
lock
push
add
push
inc
mov
fdivr
outsl
ror
stos
out
sti
mov
or
mov
lods
dec
cld
xchg
ret
loopne
dec
mov
xor
sahf
push
mov
jb
std
stos
jl
data16
push
xor
loope
clc
sub
mov
or
pop
mov
dec
shlb
pop
mov
push
imul
mov
idivb
aaa
push
add
out
push
add
fnstsw
mov
pop
fs
pop
jnp
or
push
jns
jne
mov
repnz
cmp
repnz
adc
jp
out
push
mov
jbe
mov
clc
pop
fcmovnu
sub
add
inc
fs
xchg
fistps
or
shlb
adc
xorl
and
or
mov
rcll
jae
sub
and
fidivrs
test
mov
ja
mov
sbb
outsb
push
cld
mov
testb
addl
aam
mov
shrl
mov
addl
push
enter
add
inc
pop
sbb
imulb
orl
push
or
shlb
mov
orl
decl
add
ljmp
notl
or
das
fmuls
cmp
jb
add
cmp
dec
jp
rol
ficoms
sub
fidivrl
dec
loopne
loopne
shlb
cmp
ss
xor
cmc
les
ret
pop
push
mov
icebp
mov
cli
pop
xor
ss
faddl
mov
xor
mov
andb
mov
in
inc
pusha
add
lea
sbb
incl
mov
jo
cltd
xorl
lods
push
adc
add
sbb
fiaddl
ret
sub
mov
sub
les
loopne
call
icebp
roll
fs
adc
add
dec
or
pop
subb
aas
lock
sub
push
js
add
gs
clc
dec
add
add
lods
popa
or
aaa
jg
insl
sbb
add
adc
sub
jae
push
or
or
jl
sub
inc
inc
clc
push
or
lock
pushf
pop
and
cmp
test
les
aam
cmp
mov
adcl
push
pusha
or
lods
sbb
inc
xchg
dec
scas
and
inc
xor
mov
add
fisttps
mov
mov
add
enter
push
mov
push
lock
mov
test
lea
jge
mov
stos
and
mov
enter
mov
loopne
or
or
movsb
jmp
sahf
mov
stos
and
or
notb
or
push
xor
jg
insl
xchg
push
fldt
jo
mov
cmp
rcrb
cmp
push
cmp
fldcw
jge
test
xchg
sbb
lea
das
cli
out
xchg
divb
add
dec
mov
jne
mov
or
loope
inc
hlt
inc
pop
mov
sbbl
mov
or
or
pusha
imul
ret
mov
fcomps
data16
or
push
jl
fsubl
push
shll
sub
push
push
jb
jl
lret
ss
mov
hlt
cmp
mov
xor
sbb
mov
rolb
lea
negb
push
ret
or
mov
roll
add
xor
adc
adc
aam
in
dec
roll
test
lods
outsb
inc
inc
jne
add
jns
add
push
push
xor
xor
ds
mov
mov
mov
dec
mov
dec
push
mov
jl
push
push
mov
mov
or
cli
inc
push
mov
faddl
pop
cli
and
jle
cmc
and
or
push
js
dec
sar
gs
inc
rorb
jg
sbb
nop
cli
shl
mov
xorb
lods
add
adc
aas
call
ret
fsubs
cmp
popa
xorl
xchg
ret
fistps
xlat
cmpsl
cmpsb
lock
mov
je
les
mov
cmp
loop
add
mov
mov
or
push
adcb
dec
jg
xchg
popf
dec
andl
test
inc
sub
jae
pushf
insb
or
and
mov
out
and
adc
nop
add
add
mov
sub
inc
sahf
insb
mov
adc
xchg
push
or
mov
leave
jae
xor
mov
jb
add
mov
adc
or
jl
xor
mov
add
dec
test
fdiv
push
inc
pop
inc
add
ret
pusha
xchg
sbb
pop
lock
ficoms
sub
pusha
cmp
testl
imul
pop
adc
insb
test
mov
subl
insl
push
in
ficoms
sbb
movsb
cmp
or
es
or
inc
xlat
dec
fldenv
xor
pop
mov
cld
jne
shl
mov
adc
clc
jns
rclb
pop
cmp
or
add
mov
sarb
and
popf
add
orb
bound
or
inc
adc
xchg
jns
call
push
adc
lock
cmp
push
dec
mov
mov
xor
add
pop
add
lahf
loope
push
add
and
jmp
std
jmp
fmull
push
add
and
dec
fwait
xor
or
loopne
out
pop
or
inc
mov
je
imul
xor
add
jl
sahf
and
inc
cld
dec
xor
movsb
jbe
stos
mov
mov
adc
push
lods
push
mov
ret
xor
or
mov
inc
push
in
dec
je
fsubr
add
cwtl
mov
insb
jo
xchg
mov
fcompl
push
jmp
fs
push
shlb
test
dec
and
cmpb
cmpsb
shlb
xchg
xor
xchg
dec
iret
mov
movsb
imul
lock
repnz
sub
bound
je
repnz
ljmp
sub
mov
lods
sub
mov
jl
or
aaa
es
sbb
ror
or
mov
sbb
adc
sbb
repnz
dec
stos
push
lock
loopne
dec
paddd
inc
test
ret
mov
test
or
les
cmp
add
push
cmovnp
or
test
call
cltd
cwtl
and
xchg
pushf
adcb
push
add
push
xor
and
cmc
jb
pop
pop
std
push
fcoml
shlb
test
test
in
rolb
aas
inc
dec
add
call
clc
mov
outsb
movsb
jge
push
mov
push
and
movb
popf
mov
inc
xor
xor
add
lock
mov
cld
dec
pop
push
inc
push
inc
push
fiaddl
int3
jb
test
adc
sub
or
mov
push
push
stos
testb
lods
fisubs
cmp
rorb
das
adc
shr
lea
sub
inc
pushl
dec
je
mov
push
faddl
mov
pop
call
pushf
fnstcw
jbe
aaa
xor
mov
not
cld
insl
sbb
push
inc
mov
add
out
fildl
ja
mov
or
and
loope
push
pop
ret
xor
sub
test
mov
ret
lock
aam
enter
inc
decb
test
push
or
loope
mov
jmp
mov
or
xor
or
les
sbb
jge
cltd
sbb
and
call
lock
lds
xchg
loop
movsb
push
mov
clc
xor
jne
adc
insb
add
xorl
xor
jle
pminub
push
ds
repz
test
jl
lea
je
test
xchg
jp
dec
inc
push
adc
add
inc
int3
fsubr
call
or
push
cmc
and
mov
jp
add
dec
les
int3
jne
lock
cs
fcomps
sar
mov
inc
fidivrl
loopne
add
mov
or
cwtl
clc
mov
les
insb
scas
nop
mov
push
out
les
sub
mov
mov
add
mov
rcl
fcmovbe
xchg
sar
cli
and
pushf
mov
cli
fld
rcr
insl
xor
sub
mov
jg
ss
jl
jae
mov
clc
clc
or
mov
lcall
push
push
xor
out
js
mov
adc
cli
jge
push
mov
loope
sahf
aas
add
cmp
adc
inc
push
push
cwtl
inc
clc
repz
clc
in
add
xorb
shlb
stc
or
mov
add
outsb
push
add
xor
cmp
pop
mov
pop
mov
enter
fmull
jl
shll
cwtl
in
sub
mov
push
adc
lds
mov
cmpsb
adc
popa
pop
mov
and
adc
push
fsubrs
and
dec
mov
xchg
mov
cmp
inc
push
adc
push
subl
jno
pop
loopne
mov
mov
ljmp
or
inc
fiadds
add
sar
shr
inc
mov
jne
out
jo
out
xor
pop
scas
or
xchg
push
pushf
sub
dec
test
xor
aas
sahf
cmpsb
adcl
push
fbstp
sub
adc
add
lds
or
int3
push
adc
and
pop
push
or
pop
lods
and
cmp
add
jg
mov
xor
aaa
xor
rcll
and
fbld
mov
stos
call
xchg
mov
int3
or
xchg
add
data16
lea
or
and
sub
and
pop
cltd
dec
dec
loope
fs
or
loopne
shl
lock
push
sub
jg
je
push
into
lret
sub
lea
mov
push
mov
ss
add
movsb
hlt
lock
cmpsb
testb
push
outsb
cmp
decl
mov
cs
jge
sub
cmp
push
sahf
jmp
pop
add
mov
xor
ret
inc
dec
mov
clc
pusha
jb
add
xor
push
ret
jne
mov
pop
hlt
rcl
mov
popf
mov
or
xchg
int3
dec
mov
inc
xchg
pushf
fmuls
mov
adc
jg
cld
xor
cmpb
cmp
sub
jmp
ja
and
incb
loop
mov
mov
mov
add
orl
adc
shlb
push
mov
fisubs
mov
mov
inc
push
out
push
mov
sbb
adcl
inc
js
jp
push
loopne
lea
add
pushl
stc
push
adc
test
gs
lock
add
xchg
test
loope
xor
loope
pop
into
insb
adc
jo
push
in
shll
add
mov
scas
push
aas
sarb
ljmp
stos
lcall
push
cs
je
sbb
adc
xor
adc
out
jne
stos
pop
xlat
cmpl
mov
pop
std
les
sbb
es
lea
dec
xchg
and
and
sub
mov
dec
add
add
imul
call
fcomip
pop
repnz
add
or
mov
test
mov
decb
push
test
lret
imul
add
dec
inc
or
mov
test
add
lds
aaa
mov
mov
addr16
mov
decb
push
sub
sbb
stos
jmp
stc
fcoms
je
adc
jp
mov
cld
mov
idiv
pop
pusha
loope
aad
lock
adc
in
push
xor
mov
or
pop
mov
inc
cmpl
ljmp
add
sbb
sub
movsl
sub
outsb
stos
int3
data16
shlb
data16
mov
cs
push
or
scas
jo
sbb
xchg
rorb
and
push
push
mov
dec
hlt
sbb
cs
fs
rorb
test
mov
insb
mov
mov
add
xchg
stc
in
and
sub
es
and
in
push
xor
loope
stos
jl
xor
xorl
push
aam
test
inc
or
sub
mov
push
sbb
cmp
inc
mov
insb
icebp
call
add
pop
sub
or
lds
sub
adc
mov
inc
xchg
sbb
fwait
mov
add
push
sub
stos
dec
lock
jmp
sub
sub
sarb
lods
nop
cmp
rcll
pusha
pop
mov
adc
addr16
ljmp
jae,pn
fisttpll
shlb
ret
add
adc
mov
mov
and
lods
inc
outsl
dec
push
and
cli
aad
add
lea
xor
clc
inc
jp
pop
fs
cld
insb
or
inc
movsl
lock
decl
and
fcmovnb
in
les
push
add
sub
js
jne
inc
xchg
sbb
lret
aas
test
sti
hlt
outsl
and
add
lcall
shlb
std
fdivrp
loop
sub
aas
cld
mov
xor
xor
push
adc
outsb
sbb
cmpsb
sbb
add
clc
jg
xchg
add
leave
cmovge
mov
mov
xor
pop
mov
cmp
loope
in
inc
out
dec
add
mov
push
add
mov
ret
bound
or
aad
icebp
call
imul
scas
jl
jl
or
xor
xor
icebp
es
jp
inc
inc
aad
hlt
adc
scas
cmp
sbb
test
or
push
enter
jge
sbb
push
adc
xor
rclb
mov
inc
mov
popa
mov
sbb
scas
fmull
push
pop
dec
dec
sbb
mov
jo
mov
inc
sti
mov
adc
sub
mov
roll
rol
mov
adc
inc
push
or
andl
decl
pop
lock
inc
clc
cltd
fldt
sbb
subb
je
or
push
bound
add
rep
pop
jl
scas
ljmp
pop
pop
xor
sbb
push
insb
clc
dec
sbb
fs
mov
push
jge
fsubl
rolb
testb
adc
cmp
add
add
push
push
xor
mov
std
push
call
add
push
mov
inc
adc
mov
xchg
cmpl
fildl
in
mov
cmp
jg
and
incl
sbb
adc
sub
leave
mov
lock
outsb
cmp
mov
push
faddp
sbb
or
pop
push
gs
stos
pop
in
cli
add
notb
sarl
test
cwtl
dec
sbb
cltd
dec
mov
cli
test
subb
int3
shlb
xorl
orps
push
test
adc
pop
fadds
push
sbbl
mov
sbb
loop
adcb
inc
or
pop
inc
leave
mov
pop
cltd
push
xchg
or
push
jl
inc
ret
insb
mov
fs
or
pop
sbbl
clc
push
mov
pop
or
jns
pop
clc
mov
test
mov
mov
dec
adc
push
mov
aad
out
inc
int3
mov
shlb
rcrb
sbb
jb
dec
cmp
sbb
mov
in
pop
leave
test
xchg
cmp
push
roll
pop
xchg
pop
jge
pop
or
add
shl
adc
andb
orb
jo
int3
pusha
imul
and
scas
aad
jl
in
push
insl
mov
and
in
add
bound
add
dec
adc
loop
inc
xchg
fcoml
mov
jle
insb
and
inc
enter
xor
push
or
aas
sahf
clc
iret
fmuls
je
int
decl
mov
jo
inc
notb
adc
and
sbb
push
or
rol
decl
push
test
lea
loopne
mov
xor
setbe
shll
gs
push
push
hlt
pusha
push
shll
add
lret
lds
push
es
fcompl
rcll
stos
jno
aaa
addl
xorb
dec
and
int
mov
inc
ret
fldt
in
orb
xor
mov
call
pop
add
push
jmp
jne
or
cmpsl
outsb
xchg
inc
lock
xchg
add
scas
xorl
mov
in
sbb
fadds
pop
pushf
clc
jp
loopne
jo
ret
mov
jo
mov
mov
add
test
les
int3
sbb
je
and
ret
adc
push
mov
adc
jmp
add
xchg
or
testl
outsb
fsubrl
mov
inc
dec
pop
add
or
add
test
mov
in
inc
lea
xchg
jp
mov
test
mov
mov
jne
in
enter
arpl
movb
pop
mov
fimuls
mov
loopne
push
cmpl
push
mov
clc
add
pop
and
out
mov
pop
test
xor
inc
xor
nop
stc
imul
in
pop
adcb
xchg
push
jne
xchg
jne
cmp
dec
xor
adc
cltd
rorb
add
or
mov
xchg
iret
js
dec
add
mov
push
mov
test
scas
cs
mov
pop
add
ficoms
xor
in
mov
push
adc
sahf
scas
xlat
sbb
pop
ljmp
imul
ja
and
ss
scas
rclb
fcmovnb
jle
dec
sbb
out
mov
sbb
clc
jno
gs
adc
call
lods
test
dec
or
jbe
sub
je
adc
ds
lock
mov
rol
xchg
fcomps
cmp
xor
test
mov
repz
jg
dec
cld
gs
fimuls
jl
mov
aaa
xor
into
xchg
lods
lods
ljmp
mov
lcall
jne
xchg
mov
add
xor
int
xor
aas
xchg
dec
xchg
lock
pop
icebp
or
mov
in
adc
cmp
xor
push
jnp
addr16
mov
adc
xchg
inc
inc
pop
adc
fisttps
insb
enter
mov
dec
mov
push
mov
enter
add
mov
mov
aaa
push
xchg
int3
push
xor
mov
test
adc
mov
mov
pusha
repnz
fdivrp
fisttpl
rclb
xchg
jl
cmp
outsl
xor
add
inc
push
xor
or
jmp
lds
jne
rcr
sub
sub
xor
cs
xor
scas
js
add
insb
inc
addr16
xchg
lcall
inc
fnsetpm(287
fmuls
mov
fidivs
or
push
mov
mov
push
out
sbb
lret
ss
shll
jmp
mov
mov
push
jle
stos
incl
push
ret
mov
imul
lea
sub
je
scas
mov
inc
add
lods
arpl
not
push
mov
loopne,pt
testb
mov
and
inc
add
adc
pusha
orb
cld
insl
add
lock
shr
ljmp
and
ret
insb
divb
sbb
push
dec
pop
dec
mov
insb
inc
in
pop
in
arpl
mov
adc
outsb
fs
std
mov
push
adc
std
xor
ja
mov
pop
inc
mov
mov
adc
aam
lea
jp
adc
cld
inc
sahf
jge
xorl
lret
mov
mov
fcomps
nopl
add
or
adc
fcoml
scas
cmp
adc
stos
push
xor
inc
jo
inc
mov
cmpsb
push
inc
aam
fisubrl
shr
aaa
test
pop
ss
cwtl
xor
pop
sarb
aam
js
addl
outsb
sub
fs
frstor
mulb
ret
lret
shrl
and
adc
xor
mov
mov
std
aad
mov
push
mov
icebp
fcom
xchg
mov
or
sbb
pop
sbb
and
push
les
ds
pushf
push
mov
insl
cmp
cmp
cmp
ja
add
stos
fimull
push
jbe
leave
test
jge
cmpsb
fnstsw
sbb
sub
mov
cmpsb
pop
lss
addb
push
sahf
push
dec
fisttps
push
mov
dec
add
lock
add
add
call
fimuls
adc
pop
add
clc
mov
xorl
std
in
dec
push
cwtl
scas
jle
pusha
incl
or
mov
shrb
nop
sub
rcrb
inc
subb
push
and
push
sub
push
or
js
jae
xchg
pop
mov
dec
pop
cwtl
fs
xchg
lods
lock
pusha
jo
jge
es
out
js
mov
ja
pop
lret
cmp
jo
or
or
or
out
add
cmp
add
test
nop
ret
lods
pop
ret
stos
pop
mov
fistpl
cs
loopne
pop
xor
cli
push
sbb
xchg
cli
inc
rcll
jne
andl
incl
pop
sbb
push
push
jno
call
ds
mov
aas
out
push
adc
pop
mov
adc
lock
ds
notb
dec
les
stos
push
outsl
fcom
add
cmp
in
adcl
mov
call
push
add
dec
adc
xlat
jo
test
inc
add
subl
push
ret
or
sub
adc
push
xor
push
je
dec
push
jne
push
push
rcrl
adc
push
cmp
js
ss
arpl
or
call
ljmp
psrad
jmp
push
push
adc
sti
aaa
shll
add
scas
fs
lock
cld
rorl
fucomp
jbe
jle
loop
sbb
call
sub
pop
jl
push
call
push
push
sub
add
enter
ss
clc
das
outsl
inc
push
jbe
fs
sti
dec
gs
xchg
or
dec
add
mov
inc
jmp
cmp
pop
dec
int3
mov
and
fwait
add
in
and
adc
clc
xor
subl
and
and
xchg
xchg
cld
adc
dec
sbb
das
test
adc
mov
int3
and
dec
and
outsb
or
lret
mov
inc
jge
ja
in
ljmp
pusha
ret
mov
adc
mov
inc
jbe
lea
xchg
shrb
pop
cs
cmp
pavgb
lret
test
test
xchg
js
mov
mov
std
sub
pop
popa
scas
popf
shll
aam
cmpsb
dec
movsb
adc
push
decb
fs
mov
and
and
dec
js
cmpl
hlt
dec
dec
xor
push
push
adc
adc
xorb
xor
push
pop
or
inc
mov
in
lods
add
dec
pop
inc
mov
jge
pushf
inc
cs
loope
and
mov
inc
je
call
push
js
loopne
and
call
je
mov
insb
adc
dec
rcl
inc
sti
push
add
add
sbb
inc
lret
dec
fmull
push
leave
dec
cmp
inc
adc
sar
pushf
loopne
mov
and
fistps
and
or
jmp
rclb
ds
mov
in
sub
cmp
xchg
cltd
jne
mov
add
add
test
shlb
in
adc
test
outsl
repz
inc
or
stos
or
adc
push
push
and
mov
or
dec
sbb
xchg
jle
into
std
xchg
pop
pop
xor
push
scas
les
jmp
sti
pop
push
test
ljmp
pusha
test
cmp
insl
sub
sub
push
std
sub
lea
enter
or
outsl
or
mov
pop
or
cmp
inc
adc
ret
je
mov
push
std
bound
shll
cmp
xchg
xchg
pop
lret
xchg
popa
mov
jmp
cmpsb
sahf
hlt
mov
or
std
pop
add
decb
shrl
cmpsb
push
push
aam
or
movsl
push
dec
call
mov
mov
rclb
cld
lock
or
dec
add
cld
xlat
push
lods
inc
jg
add
jp
xor
lock
call
lea
adc
add
mov
shl
sar
shll
adc
es
sbb
test
lods
cli
ficoms
or
push
jne
les
imul
int3
mov
push
cwtl
cld
hlt
and
loopne
mov
cmpsl
ljmp
mov
mov
xor
sbb
sub
popf
mov
add
bound
push
xor
rorb
aaa
adc
push
pop
inc
xor
xchg
mov
notb
shl
dec
cmc
loope
add
mov
push
mov
mov
inc
mov
and
call
int3
sub
es
inc
push
push
rcrb
xor
pop
std
and
lea
popf
ret
dec
and
test
jnp
and
test
pushl
cmp
xor
cmpb
leave
xor
rclb
cmp
cmp
or
xlat
or
movsl
xchg
pop
aam
fistl
je
pop
xor
and
lcall
inc
adc
shll
pop
filds
fistpl
xchg
pop
adc
cmpsb
mov
cli
adc
daa
std
adc
rclb
cmp
out
and
cli
loopne
rcll
mov
push
test
cmp
rcrb
sub
roll
inc
loope
lret
dec
mov
jmp
mov
push
mov
data16
aas
shlb
test
lock
sti
mov
rolb
add
lea
push
idiv
insb
int3
cmp
cmp
jae
pusha
sub
mov
das
fisubrl
push
push
clc
into
cmp
cmp
test
mov
push
inc
cmp
sub
hlt
test
sbb
test
jne
adc
add
leave
cmp
icebp
add
mov
jo
and
ss
mov
decl
mov
das
rcr
mov
add
iret
jno
pop
mov
sub
pop
add
gs
pop
and
dec
xchg
je
je
mov
push
dec
mov
add
or
and
push
push
sbb
pushf
inc
inc
lahf
test
xchg
ds
std
mov
or
call
jp
jp
mov
inc
imul
das
inc
lea
cmp
mov
push
ret
data16
faddl
test
cmp
adc
pusha
je
cmp
mov
mov
add
sbb
xor
inc
dec
mov
or
adc
test
xor
pop
rcll
insb
sahf
mov
sahf
movsb
negl
pusha
aad
mov
cli
or
or
loop
mov
and
movzbl
sub
pop
inc
testl
push
xor
cmp
je
add
adc
clc
icebp
or
add
es
xor
xor
sub
mov
ss
pop
psrld
cltd
clc
push
movb
faddp
jmp
rcl
xor
add
icebp
mov
xor
std
clc
pop
inc
lock
movsb
inc
das
push
in
sbb
shlb
mov
and
and
or
dec
inc
ficoml
dec
loope
vmread
fbld
insb
movsb
decl
jno
inc
cmp
call
roll
add
sbb
aaa
add
mov
mov
add
jmp
int3
add
and
call
fsubr
push
adc
or
xor
lds
loopne
xchg
jp
mov
adc
xor
sub
imul
sahf
test
vcvttsd2si
xor
out
add
xor
lcall
inc
test
insb
add
pop
sbb
adc
clc
scas
lock
bound
sub
pop
dec
inc
add
call
les
adcl
sarb
or
mov
jo
inc
xsha256
cmpsb
push
fsubrs
sub
cld
inc
aam
cmp
loope
sbb
add
lea
fbld
in
mov
mov
mov
xchg
rclb
rorl
dec
adc
adc
mov
mov
mov
dec
imul
sbb
repnz
test
call
mov
sub
orb
dec
mov
adc
cltd
and
cmp
jmp
xor
gs
push
inc
dec
aas
int
push
cmp
mov
jp
movsb
cmp
push
subb
fsub
mov
lock
push
pop
add
gs
fs
cmp
xor
enter
sar
mov
data16
insb
add
icebp
xchg
push
popa
adc
mov
adc
pop
or
cmp
pop
dec
jg
mov
cld
mov
call
add
roll
mov
cmp
in
or
cmp
decl
rcrl
sbb
and
call
sbb
pop
pushf
add
mov
addr16
mov
pop
jge
ja
imul
adc
jg
jg
xor
je
mov
sarb
mov
pop
xchg
js
pop
lock
sahf
lret
push
pop
jle
decb
add
test
sbb
fldl
adc
sub
sbb
loope
or
cld
scas
push
xlat
ss
mov
sub
mov
cmp
or
lea
sti
flds
cmp
pop
adc
sbb
popf
in
cmp
add
add
nop
faddl
fcomps
xor
and
js
out
mov
outsb
es
fstl
mov
add
sbb
test
add
in
pop
pop
add
pop
sub
test
in
mov
push
inc
addl
mov
xorb
jo
inc
les
sbb
pop
or
shl
call
movsl
insb
inc
push
int3
inc
xchg
scas
mov
into
xchg
inc
lcall
pop
pushl
sar
mov
rorl
repnz
lcall
push
push
dec
ret
push
roll
jmp
adc
stos
push
push
out
xor
lcall
sub
pop
stos
jnp
or
jne
andl
adc
pop
test
cld
mov
mov
sbbl
cli
xor
dec
data16
xor
cmp
and
jmp
adc
mov
and
push
aad
cmp
inc
jne
cwtl
inc
or
mov
mov
add
mov
push
adc
les
xchg
filds
mov
xchg
mov
pushl
sbb
xor
lret
dec
push
call
pop
push
push
cmp
cmpsl
decl
out
sbb
mov
clc
test
mov
es
push
call
sbb
xchg
je
insb
ret
inc
int
mov
xor
adcb
inc
xchg
lock
add
fiaddl
pop
js
aas
add
or
and
mov
push
adc
in
mov
push
scas
les
andb
cmp
es
mov
in
stos
or
add
sbb
ljmp
int
mov
cmp
and
xchg
addl
mov
rorb
jne
or
mov
sbb
outsb
sar
hlt
cmp
add
aaa
loopne
dec
mov
sbb
pop
cmpsb
inc
cmp
push
stos
fadds
sub
data16
adc
testb
mov
dec
dec
push
shlb
mov
loopne
int3
repnz
cmp
mov
adc
sub
test
mov
and
add
lods
call
movsb
sub
shl
sbb
sbb
push
movsl
xor
cmp
and
push
jne
fidivrs
aas
push
insb
fsubrl
ds
mov
testl
aam
ud0
faddl
mov
or
xchg
ret
inc
add
sahf
push
sbb
xor
or
mov
subl
push
mov
insb
sub
jge
lock
inc
gs
add
popa
fs
sahf
sti
push
or
inc
mov
mov
mov
rcll
cmp
pushf
dec
test
les
xchg
clc
sub
shr
dec
call
repnz
imulb
inc
data16
test
mov
and
adc
fs
test
xor
xlat
jg
cmp
aas
stc
jno
idivl
add
ret
sub
xor
jb
mov
addb
and
popa
fisttpl
lret
or
out
mov
clc
cld
and
sbb
rcrl
push
mov
jbe
andl
and
mov
or
push
sub
fsubr
jb
mov
lods
add
sub
cmp
mov
cmc
push
jg
adc
jne
push
pcmpeqw
mov
into
mov
cli
rcr
mov
or
jg
and
dec
inc
std
lock
mov
lcall
adcl
test
sub
adc
movsl
xor
int
pop
cli
or
mov
std
fldl
cmp
pop
mov
mov
icebp
cmp
push
pop
inc
pop
lret
dec
mov
sub
sar
or
inc
mov
movsbl
out
push
inc
js
lock
pop
fcompl
ja
mov
sbb
and
jl
push
add
cld
sub
add
push
push
ljmp
negb
loope
or
push
sbb
mov
sub
pusha
push
cs
mov
adc
ds
aam
xor
mov
pop
outsl
popa
mov
cmp
inc
adc
cltd
jb
roll
or
nop
pop
push
push
add
sub
xchg
sub
orb
int3
cmp
mov
xchg
mov
or
mov
pop
in
aad
mov
loopne
add
add
xor
push
lret
roll
and
sub
xor
rcrb
mov
mov
add
xor
inc
out
inc
xor
cmp
nop
pop
fiaddl
inc
adc
fidivs
ja
push
mov
out
inc
add
mov
clc
xlat
scas
jl
mov
adc
orl
sub
pop
into
add
aam
mov
adc
jmp
and
add
jo
call
mov
add
push
add
sub
adc
sbb
sbb
int3
add
mov
js
pcmpeqd
sub
push
adc
scas
push
and
in
mov
inc
or
mov
call
pop
push
loopne
scas
mov
fmull
add
fs
call
stos
or
add
jne
clc
cld
jb
push
push
add
fwait
movsb
fbld
gs
outsb
sub
inc
pop
add
lods
adc
fs
shll
cld
pop
inc
dec
inc
rolb
mov
mov
mov
pop
orl
bt
pop
mov
nop
dec
and
mov
and
push
in
fs
mov
cmp
mov
cld
and
js
adc
rorb
adc
leave
inc
dec
les
adc
ret
ss
jbe
pop
xor
xor
or
sti
push
add
data16
adc
push
adc
in
inc
mov
add
xor
dec
mov
push
push
pop
dec
pop
rolb
fadds
jecxz
testb
mov
int3
in
arpl
in
enter
sub
into
rcrb
je
sbb
call
push
hlt
push
adc
xchg
xchg
inc
or
pop
cwtl
add
shrb
xchg
gs
mov
cmpsl
dec
jo
repnz
test
subl
test
aas
inc
add
mov
add
sbb
cld
jae
ljmp
gs
in
sar
pop
and
movsb
mov
push
js
pop
adc
pop
insl
mov
jmp
pop
loop
inc
lea
mov
ss
push
insb
dec
inc
mov
or
je
mov
jne
fdivrp
fbstp
cmp
adc
mov
adc
inc
push
inc
push
stos
adc
adc
mov
push
push
orps
cmp
incl
push
mov
push
data16
add
pop
test
loope
fmull
pop
dec
mov
xchg
mov
push
pusha
and
je
or
ljmp
mov
mov
inc
int
adc
xor
enter
jbe
mov
cld
lock
sbb
or
hlt
mov
pop
stos
test
mov
sbb
push
add
mov
in
cmpb
add
pop
cs
xlat
mov
mov
call
mov
pushf
insb
ficompl
call
insb
ljmp
jecxz
and
nop
pop
rolb
xlat
jg
in
add
dec
push
mov
fiadds
int3
dec
or
add
sub
rcr
ljmp
movsb
sahf
add
add
push
in
lret
stc
imul
xor
pusha
or
popf
cmp
stos
inc
lods
mov
add
fadd
or
add
outsl
mov
lods
xlat
stos
cld
ljmp
fnsave
aam
cmp
push
jo
fiaddl
cli
cmp
push
mov
cmp
dec
leave
shrl
push
pop
inc
das
mov
or
pop
push
bound
add
jnp
pop
loop
jne
add
add
cli
pushl
sahf
push
out
push
repnz
cld
xor
dec
mov
sbb
test
dec
cvtpi2ps
mov
mov
jmp
jo
push
or
add
and
icebp
loope
cmp
xor
cmpl
ret
adc
ret
mov
sbb
add
push
insb
mov
mov
movsb
outsb
dec
les
sub
pop
jbe
arpl
je
inc
jmp
in
xchg
mov
loopne
inc
mov
mov
out
jge
inc
lods
cmp
or
add
pop
imul
mov
in
mov
in
mov
mov
pop
jbe
push
clc
cmpsb
jp
loope
cmp
push
into
adc
rorb
jmp
repz
push
adc
mov
sbb
push
and
push
jl
xchg
ljmp
inc
pop
sub
pop
adc
icebp
jo
and
jg
sub
in
ljmpw
dec
mov
cmp
inc
fwait
dec
fwait
test
mov
add
xchg
lods
dec
jmp
jge
pop
or
jnp
or
sbb
mov
inc
in
xor
stos
test
cli
lcall
or
jmp
mov
dec
outsb
add
or
dec
mov
mov
inc
rcrb
cmp
and
in
jno
or
pop
mov
lea
add
das
and
out
inc
push
ret
and
lods
nop
add
std
lcall
push
adc
adc
dec
push
cld
adc
sbb
test
mov
jecxz
test
fidivs
push
push
pop
mov
push
cltd
sub
xchg
cmpsb
add
test
mov
lea
fsubrl
mov
xor
xorb
mov
std
loope
int3
bound
push
xchg
es
push
jae
jne
cmp
add
cmp
sbb
shlb
mov
mov
lea
pop
cmpsb
mov
fisttpl
sbb
push
inc
fisttpl
int3
je
les
pop
cmc
pop
dec
out
inc
pop
push
mov
ret
enter
aas
std
and
mov
adcl
call
aaa
mov
cmp
pop
test
pop
aam
mov
dec
pop
xor
leave
pop
xchg
jbe
jg
loopne
decl
push
movb
mov
shll
jae
mov
and
notl
mov
test
mov
inc
repz
leave
call
loop
adcl
mov
mov
pop
movl
mov
adc
ljmp
testb
movsb
ds
and
or
xchg
rcl
repnz
std
push
push
pop
push
adc
mov
lods
pop
js
outsb
shrb
add
fs
test
add
push
cmp
push
es
cs
adc
mov
bnd
loopne
xchg
clc
inc
push
ret
push
mov
test
mov
push
rolb
add
inc
pop
pusha
push
dec
inc
data16
mov
pop
adc
mov
test
orl
shlb
roll
mov
xor
add
enter
mov
jne
xor
addr16
mov
pcmpgtw
inc
adc
push
adc
fidivs
sub
lock
mov
push
push
lea
xor
cmp
loop
dec
sbbb
leave
mov
cld
dec
fsubl
push
add
clc
mov
in
add
out
fdivs
inc
lea
pop
inc
or
fadd
ret
aas
add
mov
in
in
and
aad
sbb
xlat
std
mov
sarb
shll
movsl
push
fcoms
push
push
mov
xchg
cmp
dec
cli
mov
ja
je
aam
mov
stos
push
push
mov
inc
pusha
cmp
jne
in
jmp
mov
rsm
add
jle
fmull
inc
add
mov
jo
push
push
add
fidivrl
xor
push
fst
lock
lods
pop
fdivrs
popa
cld
add
pop
cs
inc
xchg
inc
call
sub
loop
xor
inc
mov
out
cmp
dec
mov
or
aaa
loope
xchg
loop
ret
dec
mov
xlat
xchg
mov
mov
push
jmp
push
xor
out
push
and
push
add
hlt
les
pushf
inc
add
cmp
cmp
inc
insb
or
andl
sbb
sbb
sti
icebp
sbb
sub
les
or
xchg
push
mov
sbb
pop
test
stos
in
mov
push
orl
outsl
sbb
lds
outsb
int
push
lock
push
xchg
fimull
xor
arpl
push
call
fadds
je
shlb
das
push
add
xor
mov
mov
sub
je
addl
mov
sub
adc
jne
call
mov
scas
mov
das
or
cwtl
int3
jp
sbb
sub
adcb
out
inc
stos
dec
mov
and
psrlq
lea
add
loope
test
mov
mov
add
pop
imul
mov
push
insl
out
and
pop
ljmp
pop
test
adcl
add
inc
mov
mov
inc
je
sub
mov
cltd
rcl
mov
cmp
push
or
cmp
sbb
rorb
mov
cmpl
fs
and
jne
or
sbb
mov
lock
imul
jl
cwtl
insb
xor
mov
sub
cmpb
data16
mov
xor
mov
pop
icebp
sbb
fnsave
testl
push
shl
jg
add
js
pop
in
mov
lcall
lods
imul
inc
lahf
inc
inc
lods
pop
pop
add
or
xchg
adc
into
mov
xor
ficomps
push
inc
mov
mov
cmp
push
movl
ds
inc
movsb
ret
adcb
add
sub
ret
hlt
repnz
mov
adc
lret
jmp
filds
or
mov
insb
dec
shrb
or
sub
xchg
add
mov
sbb
ret
push
push
fsubrs
cmpsl
fsubrl
or
mov
pop
aam
outsb
pusha
cmp
add
cld
test
call
mov
pop
push
subl
not
dec
mov
clc
es
enter
mov
pop
aad
test
andl
fmull
lods
fdivr
jle
jne
mov
iret
rolb
or
pop
push
jle
aaa
pop
outsb
fdivr
xchg
mov
in
stos
sarl
cmp
mov
fildl
cmpl
lret
dec
xor
cld
inc
and
lret
clc
inc
adc
aad
mov
mov
xchg
out
mov
push
into
les
loope
inc
mov
push
mov
adc
arpl
lds
scas
add
mov
test
inc
add
jge
std
js,pn
mov
insb
and
mov
incb
cwtl
mov
xor
add
or
push
outsb
mov
repnz
add
outsb
loopne
add
out
mov
cmpsb
pop
inc
adc
add
pop
push
push
xor
lock
fimuls
xor
inc
ret
add
inc
pop
subb
pop
and
mov
rclb
mov
mov
cld
jg
lock
dec
rcrb
mov
mov
mov
icebp
dec
push
adc
pop
outsb
sbb
test
ja
pop
adc
popa
sbb
sub
xor
push
outsb
loopne
jo
jne
jno
add
aam
push
mov
cld
jl
out
lds
loope
ret
in
lock
inc
or
dec
and
es
or
clc
loopne
push
sbb
add
bound
das
push
incb
shll
push
jmp
sub
xchg
mov
lret
mov
jae
push
push
mov
adc
outsl
fiaddl
add
mov
sub
mulb
shlb
aas
movsb
les
les
popa
sub
sub
cmp
and
jl
jecxz
push
cld
hlt
mov
mov
inc
mov
rcl
insb
cmp
nop
add
adc
push
and
lods
fildl
js
jle
xchg
sbb
dec
adc
test
mov
mov
fsubrs
mov
ljmp
inc
pushf
in
lea
and
rcrl
pop
in
pushf
lcall
jge
loopne
adc
pop
adc
push
shll
je
add
mov
lret
ljmp
and
pop
test
in
xor
cmpsb
or
mov
cwtl
pop
push
inc
insb
incl
or
sar
icebp
aaa
orl
shl
or
les
outsb
xor
cmp
ficoml
cmpl
movb
mov
loop
cld
add
push
dec
adc
and
mov
pusha
fimuls
std
es
push
inc
movsl
mov
add
ja
xlat
xchg
adc
jb
leave
or
fsubr
aad
pushf
cmp
test
decl
sbb
add
xor
dec
cmp
into
mov
fs
orl
jmp
push
and
push
mov
adc
mov
push
add
adc
mov
ficoms
shrl
jle
int3
push
push
mov
cli
or
xchg
jge
jo
jl
jp
mov
loop
in
adc
cld
add
aaa
mov
mov
jae
inc
sahf
push
rclb
gs
ret
mov
data16
mov
jb
loop
leave
add
pop
les
jmp
fs
les
addb
aaa
push
fadd
mov
in
push
adc
in
push
sub
ds
int
cli
mov
dec
xor
push
dec
xor
loopne
jnp
or
jg
and
push
les
push
lea
adc
divb
out
out
test
xchg
sbb
clc
jb
xchg
test
mov
leave
xchg
push
inc
pop
push
mov
cmpsl
dec
mov
push
push
mov
pop
aam
xor
cld
or
mov
add
inc
mov
dec
jle
adcl
call
test
sbb
and
xor
pop
incl
push
push
mov
mov
add
stc
loopne
cmpsb
add
xchg
cmp
cmp
sti
or
pop
push
pop
lret
pop
fs
add
sub
xor
mov
cmpsb
sub
xchg
add
adcl
shl
stc
inc
shlb
and
add
sub
pop
add
or
or
pop
jl
int3
fidivs
pinsrw
fldenv
xor
lods
repz
sbb
dec
out
mov
add
or
add
ss
imul
push
xor
in
hlt
ljmp
sbb
icebp
pop
rclb
daa
mov
addb
nop
mov
inc
xor
ret
inc
push
inc
or
add
inc
fs
push
mov
adc
mov
dec
sbb
mov
hlt
or
test
jne
sbbl
jle
out
enter
lods
push
push
push
loope
outsl
cwtl
punpcklbw
fsubp
xor
add
push
test
mov
mov
fsubrs
cmpsb
mov
jmp
push
sti
mov
pop
push
shlb
or
xor
test
incl
testl
jmp
add
js
xchg
and
jae
js
jl
sub
push
push
rclb
inc
add
pop
add
mov
jae
jo
sar
outsl
push
add
popf
decl
push
pop
lock
mov
call
and
ss
loop
into
and
jne
add
inc
sahf
push
orl
cld
inc
add
lds
cmp
mov
xchg
sarb
jecxz
jo
mov
sub
or
pop
or
cwtl
nop
jmp
lods
mov
loopne
cmpsb
outsb
push
fildll
mov
test
in
incl
and
cld
arpl
jb
push
push
push
adc
lcall
repnz
subl
cmpsl
jle
pop
push
jbe
mov
adc
shll
push
rcll
clc
pushf
cmp
addl
push
adc
dec
mov
ret
andl
int3
aaa
xchg
popa
paddsw
pop
mov
inc
xor
xchg
sub
cld
add
ret
data16
inc
push
mov
or
int3
sti
mov
adc
add
jp
les
sarb
sbb
cwtl
dec
clc
lock
hlt
test
xor
scas
cmpsb
or
cmpsb
mov
adc
mov
pop
push
notb
cmp
aaa
sbb
dec
outsb
dec
cmpsb
inc
das
mov
cld
and
jb
dec
in
push
not
jns
cld
das
shlb
inc
mov
pop
rolb
les
dec
adc
cli
inc
nop
outsb
push
filds
jp
outsl
pop
or
ljmp
mov
inc
loopne
inc
out
mov
call
hlt
js
add
or
scas
add
mov
cltd
mov
add
lahf
fiaddl
sahf
in
xchg
push
push
and
mov
inc
pop
or
nop
cmp
js
movl
sub
test
mov
shr
push
cld
test
and
push
lea
or
paddusb
or
adc
fisubl
cmpsb
mov
pop
pop
imul
mov
loop,pn
imul
mov
lods
sbb
add
mov
mov
outsb
add
push
inc
push
rorb
sbb
push
sbb
mov
test
shrb
push
push
jp
cmc
loop
lods
das
add
sbb
insb
sbb
bound
sub
lea
mov
mov
adc
scas
call
mov
sub
sarl
jae
mov
mov
cld
pop
loopne
adc
or
cli
and
imulb
ret
inc
push
push
push
add
movsb
mov
inc
pop
adcb
sub
incb
loope
leave
std
call
and
and
insb
cmp
xchg
sbbb
jmp
lret
filds
data16
mov
adc
mov
push
notb
adc
xor
cld
or
in
into
xor
push
movsb
add
int
call
fs
inc
push
ror
movsb
pop
fcoms
sub
sub
shl
cld
sarb
les
cld
test
xchg
pop
xor
pop
imul
cmp
dec
jo
pop
clc
sbb
xchg
sbb
je
int3
pop
ficoml
adc
or
jne
xchg
xor
mov
ss
mov
test
mov
cmpb
testl
mov
add
mov
dec
gs
test
mov
or
dec
cmp
push
xchg
inc
ljmp
stos
int3
lret
push
jle
mov
inc
jl
clc
mov
sar
aam
outsl
add
divb
sbb
cmpsb
inc
mov
addb
or
jl
jp
mov
int3
adc
or
icebp
mov
mov
je
jge
mov
dec
jb
mov
add
sub
push
adc
test
push
cmp
mov
add
push
sbbb
rcll
fs
cmp
int3
jmp
push
icebp
push
decl
orb
sub
add
push
pushf
les
nop
js
or
fiadds
xor
sbb
push
inc
incl
add
aam
dec
lret
ljmp
test
or
rorb
pop
pop
shlb
mov
shr
incb
loope
ljmp
cmp
add
jle
sbb
dec
add
inc
inc
and
xor
push
cld
push
mov
test
daa
mov
and
ret
push
or
jo
mov
inc
dec
fildl
pop
lcall
addl
mov
and
mov
xor
popa
cld
and
push
scas
xor
cld
cs
movsl
mov
lds
xor
scas
orb
add
xor
fs
fdiv
dec
pcmpgtd
add
mov
xor
in
push
les
incl
test
add
xorl
es
xchg
lret
fistl
testb
into
icebp
cs
cmpsb
ret
pop
and
and
pop
mov
je
jle
push
xchg
cld
cmpl
pop
les
lods
or
out
mov
mov
pop
sbb
pusha
sbb
aam
adc
lock
push
sti
add
mov
rcrb
cmpb
test
jmp
repz
pop
sub
je
aas
dec
mov
lret
sub
lds
stos
sbb
and
push
push
test
push
es
je
sbb
scas
int
inc
mov
aam
sub
dec
push
mov
push
mov
and
iret
outsb
dec
jl
pusha
push
gs
push
or
mov
mov
mov
jl
inc
pop
cmp
mov
mov
incl
sbb
inc
outsb
dec
and
lock
lret
fs
inc
mov
inc
incb
stos
push
ljmp
xchg
out
and
clc
dec
mov
repz
xor
cmp
mov
mov
sub
ds
push
lds
mov
sub
dec
sahf
nop
rcr
sarb
jge
data16
inc
dec
add
adc
fstps
pop
mov
mov
je
or
pop
inc
arpl
push
out
push
out
shlb
push
adc
fwait
push
lock
mov
lcall
pop
adc
lods
dec
xlat
std
push
loopne
jne
arpl
mov
outsb
jle
loope
or
insb
dec
ja
ret
cld
sub
add
cmpl
xorb
push
push
sbb
and
cmp
sbb
or
and
mov
mov
push
stos
xlat
mov
add
out
fcoml
adc
fs
mov
notb
or
das
sti
pop
mov
pop
call
sahf
inc
sub
jne
inc
sarb
cmp
test
jecxz
add
int3
or
xchg
in
movl
mov
cmpsl
cld
sub
push
sti
mov
les
jge
xchg
xor
add
push
adc
or
add
mov
pushf
lahf
lock
nop
dec
mov
les
push
lock
dec
ret
pop
xor
fmuls
pop
mov
adc
lahf
sbb
in
sbb
adc
fsub
push
clc
rorl
cmp
cmp
pop
in
and
mov
incb
in
adcl
cld
int3
jg
or
and
add
jo
pop
test
jne
pop
fiadds
add
push
std
test
sub
mov
lret
ss
mov
ret
add
pop
ret
push
xor
mov
xchg
clc
pop
andl
push
cwtl
jge
lock
movsb
mov
inc
pop
fmull
pop
mov
in
lods
push
mov
clc
iret
add
ret
sub
inc
push
sbbb
aam
push
cmp
cs
mov
push
test
bound
xorb
test
xor
xchg
imul
jo
ret
push
push
outsb
xchg
fs
repz
pop
mov
xchg
pop
fimull
movsb
lret
mov
sbb
ss
inc
xor
add
or
call
mov
adc
lcall
and
rolb
ljmp
dec
and
dec
aad
xor
inc
loope
sarb
cmp
js
sahf
xchg
push
addl
mov
add
dec
fadd
push
sub
pop
pop
pushf
outsb
inc
inc
les
push
mov
add
cld
push
int3
mov
push
cmp
mov
mov
fiaddl
in
in
incb
aad
rolb
pusha
pushl
mov
fwait
inc
adc
mov
add
lcall
std
aas
stc
mov
pop
test
fdivl
push
inc
lock
add
push
rol
or
incl
rcll
ret
adc
inc
js
mov
data16
inc
cmp
add
or
mov
sbb
mov
adc
pop
lock
push
xorb
popf
add
mov
add
add
and
out
or
jmp
mov
jae
jbe
mov
pop
test
fcom
jecxz
push
decb
sbb
ss
push
arpl
mov
ja
pop
test
inc
mov
lock
dec
insb
push
jo
jbe
test
in
jle
adc
addr16
mov
jl
sub
dec
xor
xor
cmp
insb
mov
push
dec
cli
push
out
test
inc
add
and
push
shrb
pushf
lods
sbbb
and
mov
add
pop
shlb
imul
add
sub
lods
testb
inc
aaa
movsl
add
mov
call
rcl
adcw
jnp
call
mov
and
dec
xor
mov
add
cs
js
fiaddl
cmp
pop
dec
loopne
sbb
add
lock
lea
dec
aaa
js
jl
xor
xor
inc
fsubrs
cli
sbb
popf
aas
push
mov
or
add
fidivrl
imul
lret
fs
xchg
pop
push
mov
sbbb
mov
mov
shrb
js
pop
push
mov
dec
scas
stos
mov
mov
add
dec
add
pop
mov
jb
lea
jb
les
data16
cmp
jbe
pop
mov
icebp
jns
jle
int3
xorps
add
and
loope
out
and
xchg
movsb
dec
or
inc
mov
fidivs
and
mov
mov
add
rolb
dec
stos
mov
jo
test
addl
xor
shr
add
nop
push
xchg
push
push
insb
jne
sbb
and
cmp
cmp
aam
or
xor
cmpsl
mov
xor
xor
in
jmp
mov
mov
inc
inc
jo
and
imul
push
frndint
dec
xor
xchg
neg
add
fidivs
xchg
mov
push
fcomps
and
subl
aad
addl
mov
aam
adc
cmp
rcrb
jmp
push
push
mov
jno
sbb
incb
inc
mov
mov
xchg
mov
adcl
loope
ja
inc
rolb
sbb
jmp
ret
jb
aad
cmp
enter
pop
pop
mov
add
mov
rorb
pop
jle
mov
inc
aaa
lcall
js
leave
out
adc
cs
cmp
adc
cld
pop
inc
shll
fucomp
lods
adc
push
int3
jmp
lcall
adc
and
add
jmp
cld
sub
sub
or
mov
idivb
or
rorl
das
movb
int
add
je
inc
scas
in
mov
stc
ds
mov
mov
adc
aas
or
mov
add
rorb
xchg
iret
push
jmp
outsb
cld
inc
inc
ja
inc
inc
adc
hlt
adc
cld
inc
std
lods
ljmp
clc
scas
mov
pop
add
cmp
cmp
inc
fsin
jg
cld
les
bnd
mov
call
movsl
add
mov
stc
fbstp
sahf
cmp
sbb
cmp
mov
push
call
push
push
adc
add
add
xor
rorb
sbb
pop
sbb
adc
push
jne
jno
add
cli
inc
adc
pop
iret
inc
loopne
decl
xchg
ret
jg
enter
mov
call
mov
aaa
push
push
jnp
std
aam
mov
sub
mov
jl
pop
lods
lea
lea
je
dec
adc
push
pop
leave
cmp
xor
mov
lret
push
je
shlb
push
cwtl
add
mov
inc
sub
add
dec
or
cmc
nop
mov
jp
pop
sbb
div
js
and
out
bound
pop
inc
push
lret
jo
sbb
ds
ret
imulb
or
decl
cmpsl
cmp
les
mov
bound
incb
dec
xlat
mov
or
nop
adc
scas
ss
lea
or
mov
push
in
inc
cmpsb
adc
inc
dec
call
xor
adc
add
pop
cmp
mov
jne
jne
xchg
shrb
add
clc
loope
xlat
nop
pop
pop
adc
or
decl
xor
leave
leave
inc
xchg
mov
pop
dec
sbb
mov
push
mov
xor
aas
adc
inc
iret
or
sbb
lret
jno
scas
orl
inc
fdivrs
push
loopne
push
aaa
push
mov
int3
mov
push
clc
movsb
mov
inc
inc
push
xchg
pop
sub
cmp
subl
mov
idiv
in
popa
push
enter
adc
test
jp
dec
loopne
mov
sbb
stos
adc
cli
jle
sub
jmp
fnstenv
js
ds
and
aas
jo
int3
push
cli
jl,pt
push
test
cld
ret
mov
scas
movsl
decb
test
out
shll
add
test
aaa
add
in
sbb
jbe
orps
or
or
mov
dec
jae
inc
cmp
pop
sti
mov
mov
rclb
adc
insb
sbb
std
jne
push
or
xchg
stos
adc
int3
mov
ret
and
fadd
les
sbb
ss
jbe
rolb
add
fs
mov
xchg
pop
fsubrl
sarb
or
and
inc
add
mov
vmread
shrl
es
adc
test
aad
test
insb
dec
fbstp
push
pmullw
inc
into
pop
and
dec
data16
jbe
fildll
std
add
inc
je
sub
xchg
lea
lock
in
out
add
or
mov
mov
sbb
call
mov
add
inc
es
dec
orl
loopne
pushl
mov
ret
sbb
adc
shlb
ljmp
mov
repnz
add
xor
es
stos
sbb
cmp
mov
cmp
jmp
pusha
or
int3
rcrl
cmc
adc
dec
popa
inc
rol
out
push
pop
add
inc
sbb
test
cli
xorl
inc
mov
sub
push
push
sbb
sti
call
scas
xchg
mov
bound
scas
jmp
mov
cmp
mov
dec
or
test
pop
dec
mov
loop
and
xor
push
push
mov
ss
mov
adc
scas
test
inc
in
gs
inc
aas
or
adc
mov
xor
xchg
add
andb
dec
dec
mov
jo
adc
and
mov
mov
jmp
xor
add
add
lock
insb
jge
mov
rol
loope
pop
cmp
cltd
std
js
or
cltd
pop
pop
mov
jbe
dec
adc
pop
orb
or
popf
movsb
incb
notb
jo
ja
daa
push
or
mov
shr
stos
xor
stos
xlat
dec
lret
adc
std
daa
in
adc
mov
xor
xor
hlt
jl
sar
ja
cld
cmp
test
js
mov
icebp
int3
add
addb
inc
sbb
mov
andb
sbb
mov
rolb
enter
fdivrs
decl
or
or
cmc
add
enter
shlb
shrl
jbe
xor
pop
pop
or
shl
lret
inc
shll
inc
pushf
pop
ss
add
or
jge
insb
pop
dec
xor
fcompl
ret
add
jecxz
pop
call
push
pop
jne
rcrl
std
imul
in
mov
jle
lods
fsubrs
fs
push
fsubrs
test
in
fidivrs
in
pushf
test
shrb
pop
aaa
fadds
aad
inc
xchg
mov
stos
aad
insb
cwtl
movsl
sbb
jb
mov
mov
cmp
cmp
flds
push
add
xchg
popl
es
int3
ljmp
in
push
movb
adc
cmpsl
add
adc
add
sub
mov
jo
dec
sub
add
ret
adc
push
out
sbb
jmp
mov
lea
in
inc
int3
insl
outsb
jmp
imul
rorb
fcompl
push
adc
mov
push
into
xchg
fidivs
mov
inc
or
adc
dec
out
xor
xor
jl
add
movsl
dec
inc
orl
lds
sbb
dec
cwtl
fwait
add
or
jmp
mov
fdivrs
inc
push
push
out
mov
xor
in
cld
addb
les
pop
mov
cs
adc
jge
add
dec
sub
test
and
jle
jg
sbb
jge
pop
in
jmp
call
push
add
test
les
clc
inc
lock
dec
lods
orb
bnd
jo
add
mov
mov
ljmp
sbb
jne
adcb
jo
push
and
ret
outsb
xor
rcll
call
add
dec
and
fldt
push
adc
cmp
push
sub
or
xchg
int3
jg
jne
ds
xor
add
aas
ds
les
inc
aad
dec
jb
pop
jbe
dec
fdivrs
cmp
sub
sbb
inc
and
cmp
aas
test
pusha
pop
and
sbb
sub
lea
push
lods
push
mov
les
loop
mov
ret
mov
inc
add
jmp
insb
add
shlb
enter
mov
scas
ret
fcompl
inc
nop
fidivrl
out
push
leave
stos
inc
xor
enter
push
mov
outsb
push
xor
add
mul
lods
or
call
and
out
in
lea
push
test
pop
aas
into
jo
sarl
add
add
mov
imul
adc
xor
mov
cmovbe
cmp
xor
fcoml
cmp
jp
add
out
mov
fmul
inc
mov
les
fwait
mov
shrl
jnp
cli
jecxz
push
push
loop
xchg
ljmp
and
sbb
test
lahf
inc
clc
loopne
sbb
mov
vmulsd
hlt
jne
fcmove
imul
push
push
int3
mov
sbb
mov
pop
rcl
mov
add
divb
add
lea
btcl
pushf
adc
pop
xor
stos
fisttpll
and
xor
fsubs
fdivrs
ret
loopne
setbe
and
lds
or
popa
sbb
or
mov
incl
jle
pop
jmp
push
mov
int3
cmp
je
push
ret
adc
mov
dec
pop
and
inc
addr16
repz
adc
mov
jne
cmc
outsb
adc
ret
inc
out
lock
cmp
ds
or
add
sub
add
push
orb
mov
pop
sbb
add
sbb
mov
push
or
dec
add
add
std
pop
mov
fcmovbe
sarb
out
add
push
sti
ljmpw
xor
insb
jmp
data16
inc
decl
loop
push
and
lods
imul
in
push
rcr
inc
scas
fcomip
pop
aad
mov
sar
punpcklbw
shll
jl
jmp
hlt
nop
xor
ja
inc
inc
incb
testl
sahf
jo
cmp
cmpsb
xor
insb
or
xchg
mov
cmp
into
cld
add
cmp
mov
or
inc
shlb
std
adc
loopne
data16
sbb
dec
fisubl
fidivrl
add
dec
push
leave
mov
test
push
in
out
sbbb
fs
add
ds
clc
ficompl
mov
xchg
pop
ret
popf
jle
push
cmpsb
orl
push
adc
mov
add
orl
xchg
and
mov
cmp
out
mov
sbb
test
std
xor
mov
filds
xchg
push
sbb
push
aam
mov
or
cli
popl
sar
cmp
stos
in
mov
xchg
xchg
neg
inc
adc
lock
dec
mov
movsb
push
xor
sub
add
sbb
xchg
icebp
pop
icebp
mov
ret
mov
stos
adcl
fsubrl
adc
inc
sarb
mov
mov
jae
in
inc
daa
jno
out
or
les
pop
aam
shr
xor
cmp
mov
iret
push
sarl
push
fdivl
test
mov
stc
int
sbb
fadds
xor
and
std
mov
in
movsb
in
mov
cmp
push
push
mov
ret
mov
mov
stc
mov
je
incl
push
jecxz
sbb
mov
inc
jl
inc
mov
nop
out
ljmp
mov
mov
movsl
ret
in
outsl
call
das
cmp
mov
push
cmpsl
or
mov
inc
mov
sbbl
cmp
mov
push
lock
hlt
adcb
fucom
mov
ss
shr
lahf
and
add
inc
xorl
xchg
push
cld
lods
sets
fisttps
xchg
cmp
mov
mov
hlt
test
sub
out
or
cs
add
and
xor
pop
and
push
mov
gs
mov
stos
outsb
adc
clc
adc
outsl
mov
lcall
adc
cmp
pop
push
insb
filds
add
dec
and
lret
mov
enter
in
fldl
mov
je
mov
xchg
das
lcall
jge
test
inc
sahf
lcall
push
or
add
and
lods
lret
xor
jbe
sub
ljmp
pcmpeqb
rorb
popf
orb
nop
clc
divl
ret
mov
repnz
lock
sub
adc
outsl
add
push
mov
jnp
incl
mov
sub
cltd
add
adc
inc
and
lret
aam
cmp
push
sahf
xor
call
es
mov
mov
lea
jl
jg
sub
or
jmp
lcall
stc
rcll
jge
testb
movsb
stos
lea
fldt
ret
inc
mov
movsb
push
repz
js
xchg
out
movsl
inc
stc
push
int3
test
loope
inc
lea
jne
add
cmp
push
dec
push
add
add
pop
in
sub
push
add
jb
js
jg
add
sub
shl
xor
in
and
add
or
loop
aam
push
mov
and
das
fiaddl
rorb
inc
lret
cmp
cld
dec
lea
or
jmp
loope
shlb
int3
aam
scas
cli
dec
dec
fnstsw
xor
adc
lds
add
imul
push
xor
xchg
add
aam
je
mov
je
clc
loopne
cmpb
test
rol
push
les
mov
leave
scas
push
jmp
inc
jae
mov
cwtl
add
mov
sbb
fidivs
mov
sahf
xor
jmp
lret
dec
cld
fstp
adc
outsb
loopne
shll
push
out
push
movsl
mov
dec
movsb
decl
adc
icebp
add
fmull
test
popa
loopne
inc
std
cmp
adc
push
aam
lds
mov
and
rcll
fcomi
aas
lods
push
push
pop
sbb
test
cmp
push
call
add
mov
test
pop
sbb
dec
sbb
and
leave
movl
pop
aam
mov
stos
jg
adc
inc
adc
sub
dec
inc
stc
add
xchg
es
cld
or
shl
push
loopne
ret
cmp
or
xor
adcb
mov
xor
add
xor
jp
ret
add
test
push
inc
mov
mov
sbbl
cmp
mov
addb
test
pusha
shrl
push
dec
sub
xor
in
scas
cmp
xor
ret
add
pop
orb
iret
fsubrp
inc
cmc
push
mulb
cmc
add
in
mov
push
pusha
jnp
or
mov
mov
xchg
out
cmp
dec
fs
mov
cmpb
enter
enter
mov
mov
mov
sar
outsl
fdivs
add
xor
xor
push
sti
test
cmpb
push
sbbb
cld
imul
cld
add
mov
fldcw
adc
je
call
faddl
xchg
mov
lock
mov
sbb
fcmovbe
pop
add
fs
or
clc
or
sbb
add
adc
mov
and
gs
fcoms
or
lock
or
mov
or
sub
jge
loopne
loopne
mov
mov
xorl
cmpl
or
stos
jecxz
out
call
ror
sbb
push
sub
sbb
testl
mov
fimuls
xor
adc
add
dec
hlt
loopne
push
mov
jmp
ss
add
jmp
scas
xchg
addb
mov
xor
mov
cmp
repnz
imul
scas
outsb
fcmovbe
divb
xor
ret
faddp
pusha
push
dec
xor
data16
punpckhdq
ja
xor
into
ret
call
add
or
sub
push
nop
lea
sbb
imul
int3
stos
stc
stos
jg
test
push
xchg
jmp
dec
jmp
test
loop
bound
les
cmp
sub
adc
loope
stos
popa
dec
sbb
push
mov
shrl
insb
cmp
pop
jo
call
test
add
pop
testb
sbb
adc
mov
or
jg,pt
mov
jb
jb
int3
sub
cmp
loope
js
lock
int3
jmp
int3
call
jp
je
js
add
inc
add
and
cmp
inc
clc
shll
inc
push
ret
cmpsb
pop
push
xor
dec
push
push
cmp
dec
xor
aas
cli
xor
leave
sbb
dec
cmp
add
arpl
sbb
pop
push
inc
cmpsb
mov
mov
shll
add
out
fcompl
mov
lea
xor
das
mov
mulb
pop
dec
inc
andb
fmul
or
jnp
mov
js
add
lods
nop
cli
dec
mov
call
push
jae
mov
int3
sub
pop
subl
decl
xchg
aaa
mov
mov
push
mov
pusha
xchg
and
push
popa
push
test
push
repnz
mov
rolb
mov
adc
jl
jle
out
add
insb
inc
cli
dec
loopne
push
pushf
add
mov
out
leave
pop
clc
and
dec
or
adc
jg
jmp
push
rolb
inc
push
sbb
iret
pop
add
pusha
add
and
push
cmp
pop
and
xor
insb
cmp
sub
jmp
dec
call
add
push
inc
sub
add
in
inc
cs
int3
mov
paddd
hlt
pop
or
shlb
inc
leave
push
pushl
cmp
and
lods
orl
sahf
mov
ja
stos
scas
add
gs
pop
in
insl
xlat
cli
and
cld
add
nop
rol
adc
aam
push
push
mov
outsl
gs
js
sub
inc
lcall
push
xchg
repnz
js
in
jle
mov
int3
sbb
sbb
sti
push
xor
add
icebp
mov
cld
das
stos
mov
jbe
cmp
mov
xor
dec
lea
or
xor
cld
ljmp
inc
hlt
inc
cmp
add
inc
cmpsl
push
jnp
repnz
aaa
insb
js
insb
fs
out
jne
add
test
cli
jg
lcall
fdivrp
outsb
xchg
enter
cmp
inc
test
outsb
mov
jae
pop
push
pusha
jmp
inc
xor
mov
insb
add
jl
rorb
mov
jmp
lds
sub
inc
rclb
inc
xor
pop
ret
jbe
mov
jo
subl
xor
outsb
sbb
dec
jg
clc
inc
mov
std
adc
sub
xor
notl
insb
es
inc
dec
rclb
fcomp
cld
mov
cmpb
cld
inc
pop
pop
ja
mov
or
jo
pop
dec
je
rolb
push
push
adc
test
push
dec
add
mov
mov
push
adc
es
dec
xchg
mov
mov
jb
clc
call
mov
cwtl
mov
inc
pop
jg
test
mov
std
ror
push
scas
mov
outsl
add
rcrb
push
push
jmp
mov
sbb
lods
cmpb
ss
clc
outsl
andb
fcoms
push
shlb
orl
jp
hlt
add
add
push
stos
int
push
in
mov
lods
sahf
mov
xchg
xchg
push
inc
add
jge
push
dec
loopne
shlb
cmp
pop
add
iret
jae
je
sub
or
xor
lds
in
pop
and
ljmp
dec
fdiv
ficomps
fs
and
jb
mov
or
mov
call
cs
and
jg
es
sbb
add
and
cld
cmp
std
or
or
dec
psubb
mov
push
mov
inc
rolb
inc
xor
mov
inc
or
push
les
jo
enter
dec
push
inc
aam
xchg
jl
fisubrl
lds
add
mov
mov
call
lock
fwait
mov
mov
mov
mov
in
jne
outsb
inc
push
cli
or
fiadds
test
sar
inc
push
outsb
xor
or
cmp
rolb
mov
jl
mov
mov
mov
lods
int3
ret
cmp
adc
xor
pop
jne
jne
xor
js
or
dec
adc
in
andl
inc
jmp
popa
xor
dec
push
add
fiadds
adc
add
inc
test
std
fsubrl
enter
bswap
shrl
data16
jo
stc
repz
dec
push
into
sub
add
out
imul
xchg
loope
popf
inc
sahf
bound
sub
loopne
ss
gs
loop
add
jg
sbb
inc
jg
dec
jmp
lods
cmpsb
fildl
cmp
movsb
cmp
jb
mov
lahf
jl
cltd
adc
xchg
sbb
or
outsl
sbb
cmp
fs
jl
int3
xchg
mov
stos
xor
sub
scas
xchg
leave
jmp
lods
stc
inc
jecxz
mov
push
lock
leave
fs
mov
in
pop
inc
push
pop
mov
sahf
inc
mov
in
push
mov
nop
sarb
mov
jmp
and
add
or
mov
test
and
inc
cmp
xchg
cmc
shlb
inc
push
sbb
dec
call
mov
or
fdiv
sbb
shrb
imul
mov
movsb
xchg
fcoml
jge
cmpsb
popa
xchg
mov
xchg
rcrb
loopne
sub
or
push
and
mov
shrl
ljmp
dec
xor
adc
fdivp
jae
mov
sub
mull
rcrl
sahf
mov
dec
insb
dec
je
pop
int3
jb
xor
scas
lret
adc
ja
incl
popf
pop
std
aam
cmp
add
pop
popa
push
push
jae
rorl
and
and
daa
loope
ds
add
test
jnp
rcll
and
mov
add
loope
mov
aas
inc
and
mov
mov
mov
outsl
pop
mov
jne
data16
adc
add
push
hlt
push
lcall
dec
push
insl
push
cltd
jb
adc
or
mov
les
xor
add
adc
ljmp
jl
sub
cmpsb
add
insb
push
mov
xor
imul
pusha
add
lock
call
std
clc
jne
add
jecxz
icebp
jo
mov
data16
sub
sub
data16
inc
movsb
add
adc
add
xchg
and
dec
inc
test
fcomp
and
or
lods
insb
pop
pop
cmpsl
jle
jl
inc
movsb
fs
data16
add
out
rolb
push
inc
je
adc
dec
in
orb
fidivl
pop
imul
fdiv
aaa
and
add
into
xor
dec
add
das
add
dec
cld
cld
xchg
mov
inc
test
fwait
lods
lock
jge
in
inc
lcall
adc
add
sub
call
adc
mov
add
sub
fldenv
ret
lock
inc
mov
cld
std
ret
mov
inc
mov
andl
incl
aas
outsb
adc
add
lea
xor
mov
ret
mov
out
add
lcall
adc
push
les
mov
mov
in
ja
add
sub
push
or
icebp
cwtl
mov
add
mov
add
or
add
je
or
lods
xchg
push
aam
mov
pop
movsl
pop
push
adc
mov
add
sub
or
jecxz
fmul
dec
push
xor
inc
mov
lahf
aaa
dec
out
test
pusha
jl
jmp
dec
lods
insb
repnz
ficoml
rcrb
stc
inc
ret
cmp
call
dec
add
lea
jg
add
mov
call
xor
push
test
jp
scas
push
out
pop
hlt
subl
ja
or
fcmovb
add
mov
inc
push
popa
inc
xchg
mov
jl
aas
or
ficompl
out
fcoms
add
rclb
orb
pop
jne
push
mov
std
or
jae
adc
stos
or
adc
cli
jmp
inc
jnp
jbe
cmovbe
jae
pusha
pusha
gs
add
mov
lods
fucomip
je
loop
jo
shlb
inc
xchg
push
add
xchg
sbb
sahf
loopne
stos
stc
jle
fsubl
mov
xchg
push
mov
mov
xchg
ret
in
push
mov
or
aaa
call
or
push
and
xor
loope
jge
mov
mov
xchg
or
iret
or
pop
in
int3
stos
cld
test
sbb
imul
mov
add
sbb
or
xor
std
or
stos
xor
rclb
pop
mov
sub
scas
jl
cmc
jmp
imull
lcall
mov
mov
fldcw
lea
pop
data16
sub
pusha
mov
pop
cmpsb
sbb
call
dec
push
xor
in
xchg
mov
out
add
aaa
cmc
mov
dec
and
mov
sub
lahf
lea
psubusb
mov
call
push
insb
pop
jne
sbb
xor
mov
pop
cld
mov
icebp
lock
and
or
xor
es
xor
cwtl
mov
and
adc
mov
test
shlb
nop
xchg
jle
jge
xor
in
mov
adc
sbb
mov
push
rorb
imulb
lcall
mov
add
packssdw
add
bound
adcb
jmp
idivl
cmp
inc
push
dec
testb
dec
mov
push
clc
movsb
dec
push
insb
mov
xchg
test
mov
loopne
sbb
dec
and
push
mov
fwait
add
call
int3
cld
int
push
ret
jge
push
dec
jo
pushf
aas
mov
fwait
push
jecxz
jmp
or
jae
addb
decl
mov
pop
adc
sbb
ds
mov
test
pop
push
inc
add
clc
std
push
into
jbe
dec
outsl
ja
call
or
mov
popa
cmp
out
or
add
leave
popa
adc
jo
cltd
add
cwtl
fsub
xchg
xchg
ret
sbb
popf
jnp
movsl
bound
ds
sub
mov
push
sub
lcall
pop
bound
adc
push
inc
add
inc
mov
inc
mov
seto
xor
gs
cmp
call
mov
test
sti
and
mov
dec
cmp
es
mov
jo
add
mov
push
fucomp
xor
pop
test
pushf
out
test
inc
jg
xor
outsl
mov
pushf
xor
xchg
mov
mov
call
xor
stos
fs
cmp
pop
mov
inc
cmc
pop
xchg
mov
push
jno
nop
pop
je
or
add
pusha
push
loopne
daa
lods
scas
cmp
push
incl
push
xor
mov
jmp
cmp
shl
out
lds
incb
clc
xor
setg
push
aas
in
add
test
adc
jp
fsubl
adc
or
cmp
push
or
lods
enter
mov
movsl
inc
pop
dec
cmp
call
adc
mov
scas
mov
pop
std
push
xorl
cs
sub
mov
cs
sbb
or
add
add
in
add
inc
add
sbbl
ss
insb
decl
mov
adc
inc
push
sbb
and
xchg
test
mov
sar
loop
enter
mov
push
push
cmp
clc
push
cmp
push
lcall
test
fsubl
arpl
jo
fwait
insl
or
test
or
push
paddusb
pop
jle
mov
and
or
inc
inc
mov
mov
js
sbb
aam
add
pushl
pop
add
sbb
dec
call
or
dec
push
orb
mov
fiaddl
dec
xor
mov
mov
and
push
aaa
mov
xor
adc
sub
jecxz
inc
clc
dec
xor
aaa
push
jb
fucompp
scas
nop
idivb
gs
fs
dec
push
nop
cmp
mov
jp
gs
divb
fucomip
fadd
jae
shlb
mov
mov
sti
xor
cld
popf
cli
add
add
cld
testb
add
cmp
push
mov
or
in
ss
in
sbb
mov
mov
adcl
test
hlt
mov
push
sub
lea
cld
stos
sub
aam
and
jb
ja
cmp
adc
dec
lock
mov
cmpb
add
rol
je
cs
jecxz
pusha
inc
lock
movsb
mov
sbb
decl
sub
jo
ret
test
scas
cltd
push
xlat
push
rcrb
sbb
add
mov
mov
push
sbb
mov
test
addl
test
mov
push
mov
jg
dec
xchg
divb
mov
jmp
and
test
scas
or
out
cld
imul
push
cld
add
mov
loope
outsb
insb
adc
insl
jb
hlt
pop
mov
add
pop
push
and
xor
add
xor
adc
aas
xor
gs
outsb
test
adc
push
ljmp
or
fs
push
popa
fcompl
dec
push
je
xor
rorb
cld
sub
scas
jmp
mov
movsl
fimuls
pop
rcll
push
adc
shrl
add
call
add
lcallw
or
add
int3
insb
cwtl
push
or
outsl
addr16
fbld
inc
sahf
insb
sbb
dec
cmp
sub
jg
xorl
in
clc
xchg
add
add
and
xchg
add
push
inc
test
xchg
inc
xor
aaa
mov
nop
sub
xchg
ljmp
pop
sub
inc
insb
std
add
dec
inc
mov
sbb
add
and
cltd
testb
lock
orb
cs
add
push
mov
popa
leave
inc
mov
pop
push
imul
jbe
cmp
xchg
sbb
inc
int3
mulb
dec
sub
sub
movsl
out
xchg
ljmp
push
stc
mov
mov
add
pop
leave
sarb
clc
loope
clc
inc
js
jo
ficompl
adc
stc
or
add
dec
add
hlt
cmp
loopne
sahf
mov
add
xchg
xchg
dec
mov
and
and
jbe
lcall
stos
subb
sbb
in
mov
enter
mov
push
mov
add
incb
pusha
mov
bound
les
mov
jp
pop
les
pusha
cld
sub
gs
popa
mov
and
mov
loop
xchg
pushf
int3
lock
xor
cmp
enter
je
je
fs
push
lcall
call
iret
push
ss
or
ljmp
jo
cld
mov
inc
in
sbb
popa
add
inc
pop
ja
lcall
enter
dec
inc
rcll
push
dec
ret
mov
dec
jne
xlat
lret
rclb
call
es
push
lea
sar
dec
fistl
adc
test
push
push
mov
jmp
fchs
popa
pop
shlb
xchg
jbe
cwtl
jp
adc
add
cmc
sub
xor
mov
or
lea
mov
call
aas
push
pop
aam
jns
sbb
add
adc
push
shl
push
pop
shr
sbb
clc
cltd
sar
inc
jmp
cmpps
mov
sarb
clc
dec
sarb
ljmp
inc
jl
sarl
cmp
jge
mov
mov
popa
add
jl
mov
pop
lods
pusha
pop
das
jecxz
clc
adc
xchg
cmp
pop
aam
popf
fstl
or
fdivl
pop
inc
dec
jne
xchg
mov
dec
or
cmp
add
add
rolb
fdivrl
xchg
js
stos
adc
jae
mov
addb
add
test
incb
aam
nop
and
int3
xor
mov
add
fstpt
je
or
push
negl
jecxz
cs
rorb
outsl
push
bound
pop
mov
mov
andl
jmp
and
mov
push
push
mov
sti
and
mov
je
adc
dec
enter
dec
js
inc
push
and
jae
les
je
or
aad
cmpsb
inc
add
pop
fs
add
push
lret
jge
push
jb
push
sbb
lods
inc
xchg
lock
xchg
mov
fsubp
jns
mov
mov
ljmp
cmp
lea
cmc
cmpsb
mov
int3
add
push
pusha
add
cmp
mov
pushf
push
push
pusha
cmp
orb
sbb
sbb
push
mov
mov
in
adc
and
pushf
pop
add
out
jle
add
push
jge
dec
jle
cwtl
inc
jmp
pop
and
add
fs
jp
jo
aam
and
mov
int
popa
jo
rclb
cld
and
test
or
add
orb
jmp
incl
pushf
pop
dec
fmul
mov
loop
add
pop
jmp
inc
divl
shl
inc
pop
loopne
das
add
adc
cli
ja
and
lret
push
adc
ret
out
or
or
pusha
and
inc
push
adc
mov
int3
mov
test
pop
inc
hlt
loopne
or
jae
xor
sbb
mov
adc
sbbb
insb
pushf
pop
scas
lods
mov
mov
pop
push
inc
ljmp
sahf
add
lahf
rolb
adc
jl
mov
adc
inc
add
clc
mov
fcompl
or
xor
das
jle
lock
mov
push
mov
je
adc
mov
fsubl
add
inc
orl
jno
mov
push
xor
push
jl
xor
cmp
mov
mov
sahf
enter
xchg
mov
lock
adc
mov
push
mov
mov
arpl
xchg
ret
enter
or
scas
fcoms
xorb
add
sub
clc
push
dec
add
jb
mov
cmp
xchg
lcall
pop
ret
fs
cs
cmp
cmp
xor
jo
sti
push
add
xchg
stos
mov
jo
mov
mov
cmp
mov
rclb
les
dec
push
push
jae
hlt
jg
lods
and
add
or
lock
mov
add
nop
push
inc
in
add
add
and
xor
arpl
add
dec
rorb
dec
roll
adc
sbbb
into
ja
pop
dec
ficoml
inc
pusha
ret
inc
outsb
mov
inc
xor
cmp
mov
jmp
push
insl
cmp
push
out
loope
test
call
ss
push
push
adc
test
rol
jg
or
jle
mov
cmp
scas
push
mov
mov
adc
ss
js
es
shlb
je
push
jmp
sbb
cltd
push
inc
mov
mov
xor
pop
std
rorl
bswap
out
push
add
into
cmp
inc
pop
push
mov
outsb
sbb
cs
adc
js
push
push
stos
pop
ljmp
out
cmp
jl
add
test
decb
test
ud0
pop
mov
xchg
into
nop
adc
dec
pop
pop
fiadds
push
add
lret
lock
std
add
loop
inc
pop
adc
sahf
imul
fildll
pop
jbe
test
mov
adcl
mov
cmpsb
push
mov
daa
gs
lock
cs
xchg
push
pop
mov
push
xorl
inc
or
and
push
stos
decb
call
jge
and
xchg
fimuls
jecxz
push
or
mov
jne
jl
xchg
sahf
cmpsb
rcrb
adc
lea
push
into
jo
xor
call
hlt
popa
fs
sub
adc
xor
js
and
or
outsl
repz
push
sub
add
jnp
loopne
inc
jb
dec
inc
adc
ret
call
std
sub
insl
or
movsb
lock
sub
sub
sub
stos
sbb
xor
clc
push
mov
xor
jl
push
pop
aaa
ja
test
cli
insl
push
push
jge
mov
lcall
int
jle
jl
dec
push
sarb
xchg
fistps
mov
dec
stc
leave
push
enter
repnz
dec
inc
fcomip
push
cmp
push
gs
addl
add
loop
or
push
sbb
loopne
out
cmp
lock
adc
dec
sbbb
or
xor
xor
pushf
int3
inc
sub
fisubs
out
bound
and
add
mov
inc
gs
or
add
jbe
mov
mov
jle
call
mov
je
xchg
adc
insb
xor
xor
mov
push
repnz
push
icebp
pop
mov
in
mov
stos
shlb
lret
fiadds
in
xchg
and
lods
inc
rcrl
add
sub
inc
test
lods
lret
fsubrp
in
and
das
lock
es
clc
sub
push
mov
mov
call
jge
in
out
add
xor
out
shll
jmp
in
add
jo
xchg
dec
or
mov
mov
sub
ja
outsb
in
add
or
test
inc
add
std
push
adc
call
lea
add
pop
adcb
pop
jns
out
pusha
loopne
inc
arpl
movsl
add
jp
divb
pop
ret
sarb
loopne
sbb
sbb
push
mov
push
add
sbb
push
test
add
mov
xor
loop
mov
jb
jo
std
pop
adc
pop
xor
call
shrb
jne
rcl
xchg
sbb
repnz
mov
pop
or
adc
or
xchg
or
push
rclb
rorl
insb
es
sbb
xorl
addr16
dec
xchg
mov
test
mov
add
push
lea
add
xor
fcomip
cmp
ret
mov
fstp
cmc
cmpsb
enter
jmp
inc
lds
xlat
mov
adc
or
arpl
ds
and
test
push
mov
std
aaa
or
push
mul
adc
xor
add
into
and
test
push
sbb
inc
je
dec
loop
push
xor
sub
mov
lods
test
pushf
adc
push
sbb
sbb
xchg
cmp
fimuls
movsl
loope
push
movsb
enter
pop
mov
inc
cwtl
sbb
gs
xchg
or
aas
pop
mov
fs
outsl
orl
lret
in
jge
adc
movsb
jmp
repz
js
loop
and
add
pop
outsb
adc
insb
inc
shl
fimuls
xor
fsubl
and
add
cmp
or
add
js
add
je
and
add
mov
addl
sbb
add
je
andl
gs
cmpb
shrb
andb
cmp
sub
iret
pushf
inc
clc
dec
int3
pop
mov
mov
mov
stos
add
add
add
push
int
int3
outsb
addr16
or
pop
js
cmp
or
in
loope
sub
and
fdivs
sarb
cli
add
mov
icebp
cmp
xchg
mov
jae
incl
xchg
out
jmp
scas
push
rcll
shrb
mov
mov
push
add
adc
hlt
movq
addl
adcb
mov
cmpsb
push
sub
dec
inc
add
xor
add
loop
dec
push
jmp
xor
and
pushl
fst
daa
rcrb
mov
pop
add
sbb
dec
les
jg
adc
mov
push
inc
xchg
cltd
inc
add
outsb
es
push
or
clts
mov
cmpsl
cmp
jg
push
call
sub
loop
test
mov
lock
sbb
fsubs
add
mov
add
fs
mov
data16
push
push
xor
lods
pop
in
scas
les
arpl
sub
push
jae
sti
jae
sub
push
decl
push
lea
pop
rcr
add
xchg
scas
call
push
gs
and
stc
mov
jns
pushl
xor
sti
iret
mov
dec
inc
mov
mov
push
into
paddd
scas
adc
xor
sub
xor
sub
mov
inc
insl
lock
push
cmovno
movsl
push
xor
roll
incl
pop
and
mov
sbb
dec
pop
hlt
mov
or
insb
jmp
cmpsb
cli
fstl
sbb
mov
pop
icebp
mov
jbe
and
jnp
cmc
je
mov
xchg
ror
in
mov
jbe
data16
dec
incb
arpl
add
por
out
rcr
sbb
shl
test
cmp
int3
cmc
push
mov
lods
sub
stc
add
push
test
inc
mov
sub
inc
add
icebp
mov
jg
lea
imul
jp
loopne
scas
cli
jp
je
insl
mov
xchg
movups
and
inc
inc
je
incb
xchg
push
add
sbb
jbe
rcll
je
dec
dec
or
imul
call
jl
adc
inc
jae
ret
add
dec
mov
sub
mov
shlb
test
push
cld
or
jecxz
add
mov
int3
jl
jb
adc
call
push
call
xor
shrb
mov
and
push
incl
jmp
int3
add
xor
cld
test
fsub
std
inc
xchg
cmpl
inc
jg
push
sarb
nop
cmp
sub
and
inc
int
pusha
incl
idivb
rolb
add
incb
mov
push
out
loope
rcrb
jb
js
mov
lock
inc
xchg
cs
inc
xor
xor
and
clc
mov
shrb
inc
adc
mov
pop
push
pusha
mov
fdivrs
add
jp
cmp
shrb
xchg
or
aad
jp
push
mov
push
cld
bound
test
dec
sbb
movups
pop
aam
dec
ja
xor
mov
inc
xor
push
push
loopne
or
jmp
aam
nop
clc
sbb
or
enter
insb
ja
or
dec
call
push
cli
cli
push
jo
pop
or
enter
js
inc
adc
inc
and
mov
mov
bound
leave
daa
test
dec
xchg
mov
pusha
xchg
or
push
in
xor
inc
loopne
rcrb
flds
push
popa
mov
fwait
test
jne
sbb
or
out
pusha
insl
push
sahf
addl
stos
jp
mov
xchg
sbb
sbb
outsb
fistl
jle
or
incl
mov
pop
rcrl
stc
inc
mov
mov
push
jl
dec
cli
push
sbb
pop
sarb
sarl
ret
and
xchg
mov
loope
dec
mov
lods
cmp
mov
push
mov
in
jl
mov
cmp
enter
lret
inc
mov
xor
push
rcr
pop
fmull
mov
xor
or
cltd
jle
ss
aam
cmp
rcl
cmpb
imull
add
pop
ss
sbbb
mov
icebp
clc
test
int3
jp
clc
pop
icebp
pop
sahf
pushf
or
addr16
loopne
push
cmp
jge
cmp
pushf
fisttpl
add
xor
lods
fs
in
adc
inc
lods
jnp
subb
xor
or
add
test
add
mov
mov
sbb
inc
pop
jl
or
lds
sub
cld
push
les
decb
addb
repnz
add
inc
movsb
in
mov
hlt
pop
add
mov
add
or
loop
mov
lock
add
outsl
xor
push
push
sbb
std
iret
mov
push
xchg
cmp
and
sbb
jmp
sbb
ret
sbb
rorb
dec
clc
push
call
rcrl
sahf
add
outsb
push
jne
xor
mov
mov
adc
lods
icebp
push
mov
ret
fcoml
mov
push
pop
xorb
inc
ja
mov
cmp
shrl
gs
dec
cmc
or
push
jle
or
lds
bound
repnz
push
and
or
mov
cs
inc
test
or
xor
xchg
sbb
sbb
mov
mov
xchg
push
mov
sub
inc
mov
xor
loopne
inc
or
test
ret
cmp
test
fisttpl
cmp
jb
xchg
lcall
outsb
outsb
test
aam
xchg
adc
xchg
jb
mov
push
repnz
test
mov
sbb
dec
int3
sub
pusha
mov
push
pop
decl
testl
rolb
xor
adc
push
insb
adc
or
xchg
stc
fists
xor
clc
js
sbb
mov
popl
ds
cmpsl
ds
mov
fwait
inc
jmp
gs
inc
adc
outsl
cmpb
jl
xchg
ss
sub
aas
icebp
test
mov
xor
mov
mov
or
ficomps
mov
inc
dec
lahf
mov
cmp
movsl
pop
insl
cmp
mov
adc
scas
test
jmp
sahf
stc
cmp
aam
jmp
jb
stos
and
xlat
cmpb
les
shlb
mov
call
adc
data16
and
inc
pusha
test
rorl
jp
repz
push
lock
or
mov
xor
fcomip
mov
adc
xor
fsubrs
lcall
imulb
jl
or
mov
dec
mov
xchg
insb
sarl
push
dec
push
js
gs
das
pop
push
in
push
dec
jp
loop
fs
cwtl
push
inc
adc
jl
mov
cmpsb
call
dec
ja
mov
sub
iret
inc
xrelease
loope
repnz
mov
js
or
cld
adc
andb
mov
ret
adc
push
in
pusha
or
inc
aas
sbb
icebp
fdivl
stos
insl
ds
pop
test
je
cmp
xchg
repnz
adc
shlb
push
dec
inc
add
mov
push
mov
test
or
mov
call
or
inc
mov
repnz
add
sti
add
push
adc
lea
adcb
pop
sbb
xchg
pusha
adc
sub
adc
inc
insl
and
filds
cmp
jmp
and
clc
das
mov
mov
lcall
adc
fcomps
rclb
mov
jle
jl
or
int3
adc
pop
sbb
pop
sahf
push
add
aam
sub
inc
mov
and
inc
ret
push
add
push
xor
je
fadds
fldl
adc
cs
scas
cmp
aad
xor
test
sahf
mov
stos
sub
sti
mov
add
jo
ds
push
sbb
rorb
mov
inc
dec
mov
push
lock
sbb
sub
lea
outsb
cmp
mov
xor
pushf
scas
lcall
xor
cltd
jbe
xor
add
sarl
or
outsl
push
inc
jge
adcb
fcomps
cs
mov
inc
ljmp
add
inc
pusha
inc
lea
fsubl
gs
pop
cmp
stos
in
add
or
rorb
pop
adcl
xor
or
pop
sbbl
sbb
pop
movsb
fcoms
les
add
sti
das
clc
pop
push
andl
jge
add
wbinvd
and
xor
lahf
nop
je
mov
jecxz
adc
push
dec
icebp
test
push
cmp
mov
test
out
or
push
push
mov
clc
stos
faddl
adc
test
stos
mov
and
pop
and
mov
loopne
mov
cmp
add
sti
pop
and
test
inc
and
call
cmp
int
push
push
shl
xchg
clc
dec
test
in
mov
or
sbb
cltd
or
add
mov
ret
mov
inc
jo
lea
mov
movsb
inc
push
xor
lock
sarb
adc
xchg
pop
fnsave
arpl
pop
pushl
flds
insl
out
packssdw
dec
sub
fwait
test
inc
cmp
scas
clc
lcall
pop
sbb
adc
xchg
sbb
popf
ss
leave
mov
call
icebp
in
push
mov
gs
movsl
xorb
aam
add
mov
jge
pop
adc
push
cli
stos
jg
push
movb
or
cld
jb
xor
lock
adc
xor
adc
sub
and
divb
xchg
dec
jp
add
pop
pushl
add
jmp
pop
fs
shlb
inc
jo
pusha
jg
cmp
lcall
mov
cmp
push
sbb
arpl
mov
in
or
into
lock
inc
or
push
pop
je
inc
andl
push
dec
decl
test
jo,pn
sti
incb
rorl
mov
pusha
test
sbb
test
f2xm1
cld
xor
in
push
adc
mov
add
xchg
int3
shlb
jg
popa
or
decl
js
rorl
cli
mov
push
jmp
insb
jmp
and
dec
inc
loop
loopne
sahf
loopne
xor
int
adc
lods
or
js
cli
dec
icebp
mov
mov
add
rcrl
fsubr
xchg
inc
lahf
push
dec
cmp
sub
cmpb
pop
in
mov
mov
lcall
inc
cmp
cli
addr16
sub
sbb
ljmp
jne
add
adc
add
jne
not
inc
mov
or
xor
pusha
shlb
dec
jl
xchg
mov
xchg
pop
and
push
popa
lock
push
push
dec
mov
add
andl
xchg
jo
jmp
mov
cmpb
les
test
mov
fcoml
je
mov
jecxz
mov
add
add
or
pop
dec
scas
adc
ret
add
fs
lods
mov
das
xchg
sbb
push
mov
lret
jl
jae
mov
mov
mov
adc
cltd
jecxz
add
pop
push
std
mov
pop
mov
in
rclb
inc
outsb
cmp
ret
jg
add
int3
dec
orb
jg
add
inc
nop
or
int3
mov
or
cmp
test
dec
int3
int3
push
je
sar
mov
jne
mov
add
ja
aam
sub
inc
xorl
jbe
add
add
pop
clc
out
sbb
or
mov
rcll
sbbl
mov
ret
dec
stos
adc
inc
fsts
sbb
push
int3
addr16
int3
incl
pop
sub
inc
jecxz
add
xor
xor
inc
cld
test
jge
pushw
mov
cmp
mov
rorb
mov
call
inc
and
loope
in
outsl
mov
mov
shl
add
mov
mov
stc
pop
xor
push
mov
ss
daa
call
int3
pop
inc
fldl
ds
jmp
mov
dec
in
repnz
jne
pushf
cmpsl
sbb
adc
add
push
lret
add
mov
pop
cmpl
in
nop
insb
lret
sar
ficompl
push
and
add
xor
lret
mov
lods
or
stc
pop
popa
xor
addb
scas
jno
arpl
lods
ljmp
aaa
in
ljmp
and
lea
inc
push
jg
xor
mov
mov
cmp
dec
push
dec
pop
mov
enter
test
nop
ret
pop
pop
dec
or
jo
out
add
and
les
call
out
mov
mov
xchg
ja
inc
fs
testl
cmc
test
movsb
aaa
xor
and
lock
or
push
fdivl
aas
rorb
mov
jb
mov
xor
lock
ljmp
add
call
jmp
clc
mov
push
pusha
cwtl
push
in
test
or
xchg
add
pop
and
mov
orl
insl
mov
mov
adcl
add
decl
loopne
push
subl
std
aas
mov
add
inc
insb
call
adc
jns
test
aas
inc
or
incl
xor
ja
lahf
cmp
pusha
push
jp
push
add
rorb
loope
cmpsb
outsb
mov
mov
adc
mov
loopne
and
insl
pop
lret
inc
jo
add
or
mov
js
push
xor
mov
or
dec
test
lret
adc
or
in
jbe
jbe
clts
testb
push
or
aam
clc
in
shlb
sbb
rorb
aam
push
jl
push
pmuludq
push
cmp
add
pushl
dec
hlt
fimull
loopne
test
xorl
add
js
pop
jns
xor
aam
data16
in
add
call
fdivs
jae
push
inc
lahf
sbb
jl
add
push
adc
sub
test
or
jecxz
push
test
jge
xlat
push
mov
push
cmp
pushf
dec
in
pop
push
mov
sarb
ljmp
fidivrs
fbld
rorb
pop
insb
pop
dec
inc
cmpb
xor
xchg
dec
int
incl
outsl
jp
dec
xor
movsl
fcoms
jle
jmp
adc
push
pop
jg
mov
jmp
pop
cmp
xchg
decb
jnp
or
mov
or
dec
sbb
aaa
pop
mov
lea
ret
mov
mov
loopne
fcoms
pop
scas
insl
outsb
push
fwait
and
mov
test
inc
add
mov
les
push
clc
test
arpl
rorb
mov
mov
out
lcall
push
je
lea
push
mov
icebp
inc
sbb
mov
rol
push
lcall
mov
mov
stos
push
pusha
mov
es
xor
cltd
lods
mov
testl
aam
je
adc
xchg
ficompl
dec
push
push
and
flds
mov
push
gs
lea
pop
cmp
push
add
cmp
xor
dec
and
inc
or
scas
clc
jmp
and
jle
jg
stos
ja
pop
add
pop
popf
sbb
ret
sti
and
rcll
mov
sahf
and
std
lcall
lret
imul
push
mov
repz
outsb
ss
cmp
test
rcl
push
fucomip
adc
clc
push
pop
mov
mov
xlat
cld
sete
inc
and
add
jecxz
push
sahf
sahf
pop
add
sbb
lds
dec
insl
lret
xlat
in
lcall
mov
xorb
filds
pop
mov
les
scas
rcrl
inc
pop
push
icebp
in
cmp
ss
std
dec
adc
push
mov
mov
push
mov
in
mov
iret
cmp
std
imul
hlt
jg
sbb
stos
add
cmp
jge
add
int
mov
test
and
mov
scas
and
sbb
div
add
rcll
add
rclb
mov
sbb
inc
xchg
add
sub
adc
dec
adc
outsl
pop
inc
xor
jnp
add
cmc
add
orl
nop
mov
or
or
fs
sub
aaa
xor
fadds
adc
mov
fwait
in
xlat
cmc
xlat
xchg
mov
or
xor
test
fsubp
push
int3
je
add
push
andl
push
sbb
fcoms
test
jb
xor
decl
or
lcall
xor
mov
fidivl
lret
xchg
in
je
dec
push
and
xchg
jns
add
repnz
push
adc
jmp
add
nop
xchg
inc
push
call
xchg
push
jp
inc
in
in
out
fdiv
or
mov
sub
xchg
xor
movsb
dec
jbe
clc
dec
add
sbb
scas
clc
loopne
cld
and
inc
xor
cld
cmp
inc
rcrb
lds
jne
push
jmp
js
clc
dec
test
insl
inc
push
push
hlt
icebp
mov
xor
push
adc
test
nop
fiadds
xchg
cmp
ret
xor
clc
lock
pop
les
bound
sub
push
and
ret
lock
push
dec
mov
jbe
jmp
cmp
sub
pop
lods
pop
insb
jmp
nop
pushl
ror
lret
mov
stc
enter
add
adc
pusha
aad
xchg
mov
or
pop
popa
xchg
repnz
dec
add
inc
je
add
paddb
dec
in
xor
push
push
hlt
mov
dec
mov
andl
sub
jg
or
rolb
into
mov
inc
mov
out
pop
cmpsb
mov
or
jne
push
aaa
in
mov
adc
mov
shll
int3
fisubl
aaa
jo
rolb
xor
hlt
jl
enter
pop
repz
mov
cmpl
push
repz
mov
inc
fiadds
leave
sbb
push
or
and
and
xchg
push
lret
xchg
stc
pop
adc
jbe
mov
inc
daa
hlt
jl
je
out
sbb
pop
sbb
xchg
les
lcall
ror
in
inc
sub
sub
mov
add
mov
loope
add
fidivl
xor
sbb
or
add
cmp
bound
lock
scas
jmp
pop
and
test
push
test
je
or
and
pop
jno
ficomps
call
in
inc
jg
mov
mov
fsubrs
mov
adc
inc
add
mov
adc
adc
inc
add
int3
cwtl
ret
pop
or
sbb
xor
psubd
repz
cmp
mov
aaa
sbb
adc
in
adc
insb
mov
sbb
pop
xor
pushf
mov
fwait
mov
mov
imul
xor
pop
lret
and
inc
mov
pop
outsl
dec
push
add
push
ds
push
cmpsb
lods
in
or
mov
push
mov
stos
add
xor
or
adc
lock
arpl
pop
sahf
jmp
or
cwtl
adc
clc
push
fwait
xchg
fcoms
aas
adc
lahf
incb
push
cwtl
pushl
mov
mov
or
sbb
arpl
xchg
inc
or
andb
sbb
push
faddl
shlb
adc
shrb
out
sbbb
cld
jne
xchg
test
les
scas
mov
or
push
jp
and
lcall
pop
jne
cmp
xchg
inc
add
sub
stos
and
aam
sub
mov
cmp
xchg
sbb
sbb
and
test
addr16
or
fcoms
add
pushl
cmp
fimuls
add
pusha
clc
js
shlb
add
mov
or
int3
mov
filds
jg
inc
std
rcr
jo
shlb
movsb
ret
jl
add
or
repnz
jnp
mov
js
call
adc
addr16
cmpl
addb
jmp
rorl
pop
ret
je
call
jecxz
dec
pop
or
xchg
inc
add
icebp
mov
sbb
js
sbb
push
fimuls
sub
shll
mov
and
sbbb
xchg
mov
mov
or
pushl
xlat
push
cmpsb
cwtl
jb
int
jnp
xor
js
pushf
mov
nop
sbb
mov
pop
in
data16
or
test
mov
mov
insb
rorb
imul
xor
int3
mov
test
and
or
and
pop
xchg
lock
adc
push
adc
das
jmp
scas
divb
icebp
sahf
in
pop
push
lods
sar
mov
sbb
mov
pop
aam
pop
cld
sbb
jns
and
mov
mov
mov
sub
add
shrl
adc
push
sbb
jmp
jl
push
fmull
shlb
ret
lahf
cld
es
pop
add
jb
shrb
mov
dec
sbbb
hlt
cs
xchg
inc
push
clc
pop
cmp
call
scas
xchg
pop
ret
or
fs
fcoms
add
mov
mov
shll
sbb
ret
sub
mov
ss
add
push
ret
inc
sbb
and
in
lock
js
stos
shlb
insb
mov
add
jle
es
rcrb
orb
add
adc
icebp
xchg
push
mov
faddl
aam
lret
adc
sbb
repnz
sub
push
push
sub
pop
xchg
dec
loopne
sbbl
xor
inc
sub
add
mov
adc
lea
or
and
xorb
dec
loope
fsubp
and
insb
gs
push
stos
sbb
mov
push
test
pop
iret
or
lea
movsl
cmp
orps
in
mov
dec
popa
pop
sub
cmp
sbb
mov
push
int3
dec
pop
and
aam
dec
cmp
in
je
loop
mov
adc
pusha
and
pop
sbb
gs
push
adc
lock
shr
jecxz
sub
ljmp
aaa
pop
loope
jbe
cld
lret
add
mov
push
sbb
mov
nop
xchg
cmovs
cld
pop
lcall
ret
movsb
inc
insb
mov
adc
push
mov
jg
cltd
outsl
pusha
cs
push
adc
pusha
aas
inc
aas
sbb
push
insb
push
mov
out
les
ret
xchg
ss
cmp
repnz
dec
cmp
cmpb
outsl
sub
mov
pusha
ja
mov
inc
adc
dec
inc
fdivs
sarl
call
rcrl
mov
add
mov
mov
xor
pop
push
mov
add
and
cli
add
out
xor
les
sub
sub
xchg
pop
hlt
push
mov
xor
orb
jnp
out
xchg
adc
fadd
js
sub
scas
sbbb
in
sbb
cli
and
cmp
outsb
roll
dec
sbb
cld
add
push
stc
mov
cmp
adc
or
cmpsl
outsb
adc
je
push
sbb
mov
push
les
clc
mov
xor
les
push
jmp
mov
mov
test
or
mov
je
lods
movsb
xchg
adcb
add
mov
dec
and
ds
mov
dec
and
mov
mov
add
cmp
nop
inc
lock
or
in
inc
mov
gs
mov
sbb
lret
xor
ss
outsl
decb
push
adc
add
or
cld
mov
test
arpl
xor
add
push
in
add
fisttpl
fs
xchg
insl
sub
mov
cmp
dec
lods
cmp
mov
adcb
insl
push
ret
mov
inc
jne
les
cmp
mov
mov
adc
test
int3
pop
cli
fisttpl
xchg
dec
sub
jb
pop
mov
and
in
and
mov
push
mov
mov
add
xchg
ret
xchg
test
incl
movsb
cld
data16
cmc
mov
push
movsl
add
call
sub
adc
daa
ficoml
sbb
fcompl
pusha
jno
add
or
inc
sub
cld
rcrb
or
inc
dec
ss
fdivrp
jge
cs
sub
faddl
rorb
inc
ret
sbb
hlt
test
mov
add
sbb
add
cli
fcoms
jl
icebp
sub
and
push
shr
std
incl
rolb
fsubrl
adc
add
or
fdivl
xor
movsb
insb
sti
popf
loop
pusha
add
cwtl
add
cwtl
mov
gs
mov
subl
enter
or
dec
rorl
insb
add
mov
fcmovu
xor
mov
je
adc
push
pushf
adc
add
adc
pop
fs
mov
ds
xor
js
add
sub
fs
roll
push
or
pop
jg
ljmp
jle
sub
sub
pop
add
out
xorb
xlat
add
decb
into
sbb
jg
push
adc
inc
jo
dec
push
ja
mov
iret
shrb
ljmp
aad
mov
pop
inc
adc
or
aam
test
or
leave
adcb
mov
push
test
mov
jne
roll
data16
mov
or
xchg
push
sbbb
sbb
jg
add
dec
jne
mov
dec
aam
fidivrl
shr
add
mov
inc
dec
lret
push
mov
lea
mov
mov
ja
inc
dec
jne
js
xor
inc
loopne
mov
or
je
dec
bound
dec
cmpsb
push
lods
push
xor
cmp
push
movnti
stos
pop
cmp
push
roll
push
movsl
dec
hlt
and
and
loop
jo
dec
test
mov
and
mov
dec
sub
outsl
mov
sbb
jge
and
xchg
hlt
pop
pushf
or
inc
addr16
outsl
out
jecxz
add
cmpl
inc
sbb
sbbb
call
adc
mov
cmp
xchg
or
pop
ret
stos
ja
mov
test
cmp
movsb
inc
push
dec
mov
xchg
xor
add
std
pop
lods
xor
sub
jg
pop
pusha
les
ret
fcoms
sbb
dec
sub
mov
mov
nop
rcrb
aam
add
and
pop
daa
add
jnp
out
jne
bswap
jle
addl
inc
jge
pop
mov
cmpsl
push
pop
add
ds
adcb
repz
ljmp
xor
pop
das
jb
out
and
nop
lea
pop
pop
pop
dec
insl
inc
push
pop
adc
insb
fs
or
loope
es
incl
pop
loope
aam
mov
push
cmp
std
shlb
cli
xchg
mov
inc
jb
or
jo
mov
and
inc
in
mov
call
pop
sbb
ret
in
jmp
xchg
pop
xchg
adc
push
adc
mov
mov
cli
dec
lods
mov
or
inc
jge
sub
lret
mov
out
test
or
data16
mov
jle
filds
hlt
or
push
mov
add
inc
adc
jb
xor
adc
or
hlt
repz
or
sbb
cmp
je
add
adc
mov
mov
jmp
inc
sbb
xor
aas
ss
pop
ja,pn
xor
ss
adc
test
mov
clc
decl
ret
xor
orl
daa
imul
aad
out
pusha
pop
insl
or
lret
mov
jp
add
mov
enter
xchg
shl
test
cmp
or
and
or
fsubl
ljmp
mov
sbbb
test
and
ljmp
sbb
pop
aas
sbb
sbb
mov
rcrb
outsl
notb
adc
lods
mov
inc
mov
and
add
es
cld
add
ret
sbb
pop
mov
cwtl
jp
ret
add
push
dec
add
mov
mov
push
add
mov
adc
das
jle
inc
push
pop
inc
out
adc
pop
fdivrp
jge
dec
xchg
int3
insl
lahf
dec
xchg
add
mov
xchg
sub
mov
sbb
mov
cmp
mov
jmp
scas
sbb
bound
jne
cmp
xchg
popf
sbb
sbb
lea
mov
jae
xor
inc
dec
cltd
fs
stos
loopne
loopne
pop
add
pop
cmp
shrl
inc
aam
xor
dec
out
insb
test
mov
js
cmc
adc
add
xor
sub
mov
cli
js
daa
adc
hlt
xchg
out
es
adc
jl
ret
mov
movsb
add
ret
xor
sbb
adcb
xor
add
lock
or
scas
orb
adc
xor
nop
ljmp
test
hlt
or
push
mov
push
clc
xchg
lea
rorl
imul
adc
mov
xchg
rcl
adc
sub
mov
in
mov
loope
xchg
mov
and
add
jns
inc
cs
inc
pop
mov
pop
mov
push
pop
bound
mov
inc
and
cmc
ja
outsl
in
add
or
ret
cld
pushf
pop
outsb
shr
lods
adc
pop
inc
dec
inc
dec
push
add
fs
int
and
cmp
popa
pop
adc
sarl
cld
ret
rolb
jb
add
jmp
enter
xchg
adc
in
ret
jmp
pushf
sbb
mov
psllw
mov
test
hlt
int
add
adc
aad
stos
ljmp
jmp
push
or
sub
adc
test
mov
or
call
xchg
mov
cs
adc
pop
rorb
mov
adc
push
xor
dec
dec
ds
adc
in
mov
in
push
adc
ja
inc
mov
call
inc
mov
push
mov
ret
push
cmp
inc
adc
dec
mov
in
sbb
push
or
bound
int3
jo
scas
clc
adc
mov
sbb
pop
sarb
or
jp
cld
nop
jo
outsb
mov
scas
cmp
insb
pop
cmp
mov
clc
xchg
jp
cmp
cmovne
and
adc
in
push
fisubrs
sub
fisttpl
push
loope
fnsetpm(287
ficoms
and
cmp
push
mov
adc
aam
decb
rcll
sbb
mov
rcrb
loopne
ret
daa
xchg
pop
push
lea
push
mull
cmp
xor
push
mov
jg
cld
icebp
push
xor
jnp
jmp
cli
dec
imul
test
push
xlat
mov
add
jne
add
in
fmuls
push
inc
outsb
xor
orl
adc
aad
pop
clc
add
dec
dec
ret
movsl
pop
adc
lcall
xchg
mov
jbe
inc
pusha
or
xchg
inc
add
fdivrl
sub
jle
pop
add
loope
xchg
mov
add
movsb
add
xor
pop
into
andb
js
cmp
or
add
call
inc
xor
les
cmp
rorb
sub
pop
incl
popa
xorb
or
test
das
jecxz
repnz
int3
sub
or
shrl
in
ret
adc
ds
in
popa
rorb
adc
pusha
push
bound
mov
pop
stos
or
cmpsb
js
or
in
and
xor
jo
xchg
dec
fwait
ss
xor
or
ffree
adc
cmp
dec
sub
loope
inc
mov
test
stos
pop
loopne
mov
mov
int
shll
ds
int3
mov
in
xor
push
cmp
adc
popf
dec
test
xchg
test
movsb
cli
mov
push
pop
fwait
sbbl
pop
lea
inc
loopne
lret
xlat
mov
xchg
arpl
cmpsb
or
push
push
imul
xlat
push
outsb
insb
test
in
mov
data16
or
pop
pop
adc
inc
out
test
aam
adc
mov
add
pop
stos
pop
mov
dec
jmp
jns
out
cmpsl
rcll
xchg
mov
xchg
pop
xor
jae
and
rclb
hlt
pop
or
hlt
fmuls
mov
pop
scas
aaa
ljmp
faddl
adc
gs
fisttpll
pop
inc
pusha
jl
fnsave
pop
popa
jl
bound
inc
adc
push
clc
fnstenv
add
and
fnstenv
inc
mov
fmull
add
push
je
jp
ljmp
daa
lret
nop
bound
xor
push
jns
xor
or
push
cmp
mov
test
cmp
outsl
push
xchg
jl
popa
mov
stc
and
push
test
in
int3
shl
cmp
cltd
add
inc
sbb
dec
add
mov
test
adc
insb
inc
mov
inc
adc
push
adc
hlt
jl
push
les
mov
jmp
cmp
repnz
mov
or
in
lock
xor
aam
pusha
dec
or
push
inc
cld
popa
jno
ficompl
jno
add
mov
int3
xchg
movsb
and
mov
idiv
divb
cmp
push
pusha
or
inc
mov
push
es
or
push
movsb
in
jecxz
gs
adcl
hlt
js
and
lock
xor
and
xor
add
leave
nop
push
add
push
orl
cmp
int
jmp
jb
pop
or
mov
mov
xorb
sti
pop
stc
add
mov
cmp
enter
mov
xor
dec
pop
dec
add
add
std
std
sub
xchg
std
jb
data16
push
mov
mov
add
inc
orb
fmul
pop
or
shl
lock
mov
mul
sti
add
mov
and
sbb
cmp
push
ss
cli
cmp
jg
bound
clc
cmpb
cmpsb
sub
or
inc
ror
adc
push
or
outsl
cmp
add
subl
mov
or
loopne
cs
pop
or
mov
jb
lock
bound
jno
fadd
cmp
imul
in
test
insb
or
cld
push
out
orb
fmul
push
cmp
inc
sbbl
or
sbb
sbb
jo
mov
mov
ds
or
jecxz
aam
jne
add
jle
es
add
dec
inc
in
leave
inc
mov
mov
loope
fadd
movb
mov
fidivs
xchg
js
out
and
lock
push
pop
jmp
mov
pop
ret
mov
inc
jmp
cwtl
push
adc
adc
scas
clc
mov
test
jmp
mov
xchg
dec
rorl
jo
push
scas
inc
test
sbb
sbb
add
add
or
in
sub
icebp
imul
mov
mov
mov
ficomps
shlb
push
pop
stos
pop
test
mov
movsb
jo
or
xor
mov
pop
icebp
nop
and
add
test
mov
ret
lea
add
lods
push
or
fdivrp
mov
mov
mov
test
call
cmp
jo
lea
mov
ret
cs
mov
ror
sbb
sub
in
clc
notb
and
sub
add
jg
jo
push
dec
inc
mov
push
xor
jbe
std
movsl
cmc
call
dec
insb
mov
cmp
cmpb
add
jg
mov
jle
xchg
inc
sub
rcl
add
pushl
mov
add
in
cs
enter
lock
gs
incb
cmp
xchg
dec
scas
out
ret
or
adc
dec
lahf
jno,pn
arpl
inc
sub
or
or
stos
loope
pop
out
sahf
adc
xor
mov
in
inc
cmp
cmp
or
mov
call
mov
adc
shlb
test
incl
push
lock
push
sbb
enter
fs
movl
dec
loopne
sbb
inc
jnp
jae
mov
pop
add
push
cmp
adc
cld
call
inc
aas
shlb
pusha
xor
loopne
sub
cmpsl
inc
and
or
shll
or
lods
insb
push
ret
inc
bound
adc
int3
movsl
xchg
test
je
orb
mov
sbb
jmp
dec
movsb
pusha
movsb
cwtl
scas
push
sti
inc
xor
push
mov
pop
ret
clc
add
cli
inc
add
mov
pop
mov
pushf
test
mov
lock
push
or
pop
pop
pop
aam
inc
lock
loop
stos
and
push
aad
push
fstpt
incb
sbb
ret
pop
out
cmc
incl
ficoml
dec
xor
mov
ret
add
cmpsb
data16
inc
add
mov
int
int3
inc
push
cli
icebp
je
jmp
push
sbb
cwtl
sub
flds
dec
pop
cmp
mov
pop
inc
daa
fsubrl
inc
int3
xchg
add
xor
imul
into
ljmp
pop
sbb
mov
shlb
in
dec
cmp
add
and
mov
scas
ljmp
mov
ds
fcoml
call
sar
mov
push
dec
mov
mov
or
fwait
push
leave
push
jle
cmp
or
rorb
dec
jle
cld
xor
mov
add
out
andl
sbb
insl
loopew
sbb
or
cwtl
std
sbb
in
push
fcoms
mov
inc
or
sbb
inc
push
mov
or
and
mov
cwtl
enter
nop
rol
dec
fdivl
es
in
push
imull
jle
or
icebp
popf
xchg
inc
mov
pusha
xor
xchg
and
loope
mov
pop
mov
sbb
gs
cld
inc
outsl
test
in
psubd
dec
push
notb
sbb
aam
bound
inc
add
adc
mov
and
fsubrs
ds
cli
mov
loope
pushl
aam
or
jmp
clc
or
pop
and
mov
push
nop
es
xor
push
push
push
add
nop
push
xchg
xchg
mov
push
pop
jge
xor
inc
mov
lods
loope
or
cld
or
sbb
lea
jb
mov
push
mov
push
rorl
iret
stos
shrd
aad
daa
mov
inc
in
test
lcall
add
ds
and
dec
es
push
xchg
push
cmp
mov
dec
test
jmp
int3
and
stc
pop
adc
mov
cmpsl
clc
or
rcll
test
call
fdivrs
icebp
dec
and
pusha
fiadds
call
les
jle
test
shrb
arpl
mov
xor
pusha
adc
xorb
dec
mov
or
lock
or
or
mov
inc
test
sub
fwait
orl
or
in
call
inc
mov
out
dec
pop
mov
insl
mov
mov
xor
add
ror
add
adc
cmp
jne
sub
lods
incl
pop
jl
push
je
sbb
or
ret
fcompl
ljmp
subl
lods
loope
sbb
dec
jns
clc
push
sbb
push
ss
inc
mov
push
ljmp
push
and
call
cld
add
add
cmpb
lcall
test
push
or
sahf
inc
ret
es
test
ljmp
je
lahf
popa
jbe
push
or
push
cmp
xchg
rol
add
negl
fsubs
int3
adc
xor
push
js
cld
adc
fbstp
repz
cli
lock
stos
inc
js
adc
xor
add
rclb
fwait
test
dec
jb
dec
rorl
mov
lea
fdivrp
mov
push
lea
inc
insb
push
sbb
dec
loopne
pop
es
pop
out
cld
adc
adcl
jb
jae
push
xor
arpl
cmpb
add
sarb
push
jnp
push
sbbb
loopne
adc
lods
inc
jl
lahf
pop
daa
pop
add
shrb
test
add
stc
adc
dec
push
push
jno
pop
xlat
fsub
add
pop
bound
xor
and
inc
mov
es
outsl
or
mov
sub
mov
xlat
sbb
inc
call
dec
jns
outsb
or
mov
jmp
dec
mov
mov
xchg
inc
loopne
test
and
in
in
or
lcall
fldt
add
mov
inc
push
mov
ljmp
fmuls
add
add
in
inc
xchg
lcall
cmpsl
pop
and
push
pop
dec
and
incl
dec
add
push
loopne
push
mov
popa
rclb
dec
sbb
insl
loopne
movsl
adc
push
pusha
inc
loopne
orb
cmp
addr16
popf
stos
xchg
jne
mov
lock
mov
mov
lea
cmp
cmp
test
lods
ja
xchg
cmpsb
les
mov
xchg
ficompl
psubb
inc
ljmp
sub
sub
inc
push
stc
loope
subb
adc
in
jb
jmp
movsb
jne
sete
roll
xor
sbb
adc
dec
jp
dec
inc
in
inc
in
aad
aad
loope
cmpsb
test
mov
xor
out
incl
push
adc
inc
repnz
xorl
cmp
jle
push
rorb
sahf
adc
mov
mov
jg
push
jge
popa
or
sbb
movl
and
cmp
loopne
inc
sbb
dec
sub
imulb
sbb
stos
pusha
sbb
das
fadds
fwait
sbbb
lods
hlt
xor
jg
movsb
push
adc
sub
sbb
test
sub
in
mov
push
roll
adc
lahf
pushf
push
jle
mov
call
adc
or
dec
xchg
sbb
movb
or
jle
stos
js
shlb
mov
outsb
xor
lock
add
leave
movsb
jg
jbe
negb
push
out
addb
mov
pop
or
in
enter
or
int
pop
jecxz
fcomp
es
sub
fs
stos
dec
and
je
push
movsl
mov
in
mov
push
mov
insl
nop
push
in
pusha
dec
xchg
push
imul
add
add
clc
push
in
fiaddl
sbb
repnz
int3
or
jb
jmp
lock
pop
out
insl
adc
inc
imul
outsb
cs
mov
push
sbbb
sti
mov
mov
clc
jg
inc
outsb
mov
xor
mov
add
push
mov
jmp
cwtl
sar
incb
enter
test
cmp
rorb
adc
rcrb
cmp
jmp
mov
testb
inc
clc
and
xchg
in
dec
insl
mov
xchg
test
or
or
popa
ret
cmp
pop
inc
or
insw
cmpb
andnps
out
and
lea
or
xchg
adc
add
xorb
and
out
adc
pop
sub
orl
push
inc
and
arpl
mov
dec
in
je
repnz
mov
aam
lods
or
inc
inc
es
add
and
pop
sub
mov
bound
arpl
fwait
clc
adc
cli
inc
jne
int3
mov
jle
cwtl
loop
mov
push
xchg
lret
loopne
cmp
jae
call
lods
mov
lock
jbe
mov
in
es
adc
xchg
sub
mov
mov
test
xor
jp
pop
clc
xchg
in
arpl
addr16
dec
adc
or
sbb
cltd
mov
rclb
mov
add
les
fadd
mov
pushl
sub
add
jmp
addl
add
rclb
add
bound
inc
test
fisttps
call
xor
aam
sub
cwtl
dec
mov
out
fidivrl
pop
add
push
fwait
mov
dec
test
cld
or
jo
add
in
sub
mov
call
fs
inc
sub
mov
std
outsl
add
shrb
and
or
rcl
into
push
in
je
mov
push
mov
hlt
sbb
je
mov
cmp
push
cli
arpl
sub
bound
xor
xchg
xchg
jbe
stos
pop
add
js
pop
mov
lcall
lods
in
test
xor
mov
fwait
sub
ror
lret
or
pop
inc
cmp
jbe
add
ret
mulb
loop
push
inc
sub
add
cmp
mov
mov
push
push
test
mov
call
es
loop
mov
clc
mov
push
idiv
or
cmp
add
popf
jo
pusha
jno
add
xor
and
repz
loop
lret
pop
bound
push
dec
loopne
clc
pop
adc
mov
in
lock
xchg
xor
je
fildl
push
dec
nop
inc
cld
or
lret
ja
add
sub
subl
add
push
nop
sbb
dec
pop
sub
out
fnstsw
lcall
cmc
jp
mov
lcall
mov
mov
mov
push
add
pop
testl
sar
sub
dec
push
fadds
push
mov
xorl
sarb
ret
out
fcoml
std
loopne
mov
jno
adcb
xchg
call
fcomps
shrb
xor
cmp
mov
mov
in
dec
mov
cmc
sub
movl
aas
mov
or
jle
stc
adc
push
call
pop
inc
out
jne
sub
push
repz
fwait
add
std
xchg
daa
push
xchg
hlt
mov
inc
jmp
outsb
add
int3
adc
dec
adc
ljmp
bound
call
jbe
orl
add
and
inc
and
es
add
push
call
dec
out
push
sub
sub
mov
cmp
sub
mov
test
sbb
inc
imul
jns
push
xor
mov
mov
mov
int3
in
add
fs
lock
les
sbb
lods
adc
pop
fmulp
and
shll
cmp
xor
cwtl
int3
lret
jp
or
push
movsl
dec
inc
mov
push
mov
loop
inc
push
jb
rcl
mov
push
in
mov
outsb
push
mov
fdivl
mov
loope
mov
fs
in
add
in
es
xor
or
mov
cltd
xchg
cltd
cmp
lret
adc
mov
fildll
mov
mov
or
push
or
dec
xor
xchg
lcall
aam
jne
mov
shlb
sbb
mov
std
push
xchg
add
cld
xchg
fcmovu
add
stc
dec
cvttps2pi
adc
jge
idiv
inc
dec
gs
and
aaa
cmp
lahf
aam
add
mov
or
shlb
pop
hlt
movsb
add
repz
mov
js
xchg
mov
loopne
fwait
adc
push
ret
out
jb
bound
mov
daa
or
shl
push
testb
xor
ds
add
cmp
adcb
jp
adc
pop
lods
xor
xor
and
pop
cmp
std
or
mov
test
cli
sub
mov
movsb
test
push
call
mov
je
sub
gs
cmp
adc
test
jle
test
push
push
fmulp
rcrb
aas
dec
xlat
mov
in
push
in
bound
add
cli
mov
or
cmp
cld
es
clc
xchg
fs
inc
int3
sti
push
mov
orl
xchg
adc
ret
test
dec
test
fiadds
fs
stc
das
dec
adc
cmp
clc
lcall
bnd
cld
test
mov
push
inc
jp
icebp
mov
subb
test
pop
aam
popa
and
hlt
cmp
call
addr16
loope
mov
test
pop
test
adc
xor
into
jae
or
cmp
jp
add
adc
mov
or
add
xchg
pusha
ljmp
ss
or
jmp
push
mov
mov
mov
inc
insb
ret
mov
mov
jecxz
outsl
pop
or
or
mov
lahf
dec
cld
inc
mov
int3
push
mov
adc
push
inc
and
in
fstl
push
fs
jl
xor
adc
pop
in
push
bound
psllw
ljmp
sub
or
gs
fwait
lods
testb
and
inc
mov
add
sbb
es
pop
or
sahf
hlt
aam
pop
icebp
mov
out
and
sub
in
pop
test
sub
movsb
pushf
movsb
aaa
or
cmp
inc
inc
dec
in
mov
push
adc
jbe
cld
mov
add
in
testb
insb
add
jb
je
or
or
adc
mov
and
cld
int3
movb
mov
pop
sub
lcall
add
mov
adc
mov
int
push
adc
mov
add
jb
mov
mov
sbb
cli
hlt
or
or
push
add
rclb
push
mov
and
add
pop
ss
jp
dec
dec
dec
test
and
xor
dec
cli
outsl
jg
mov
call
mov
int3
ror
adc
inc
pop
xlat
popf
mov
mov
in
aam
jg
call
jecxz
aas
sbb
push
inc
scas
out
rclb
adc
data16
or
inc
add
movsb
sub
out
dec
xor
jg
mov
pop
dec
aaa
dec
mov
outsb
int3
shrb
jo
cld
pop
sbb
orb
pop
and
clc
icebp
push
add
add
ja
mov
in
add
cli
jno
jmp
xor
inc
xor
andb
sbb
or
mov
jno
push
int3
mov
movsb
les
dec
cmpsb
dec
mov
sub
sub
mov
jl
jp
leave
sub
cld
push
dec
cltd
das
cmp
adc
add
lcall
nop
cli
lea
push
push
adc
push
ljmp
xor
subb
mov
lock
sub
cmp
or
cs
jbe
clc
sub
mov
add
std
cmpsb
cmp
lcall
lock
jecxz
inc
fsub
lcall
out
sub
int
xor
mov
jo
xorl
sub
inc
push
aam
inc
ficoms
jb
mov
mov
out
pop
cmp
cs
ss
lock
and
adc
pop
push
dec
ret
cwtl
add
mov
in
pop
in
sbb
fsubl
clc
inc
and
push
or
cltd
ss
add
out
shlb
push
inc
pop
jnp
test
mov
cmpb
fmull
adc
and
rorb
cmpsb
inc
ljmp
scas
adc
mov
push
daa
int3
push
cmp
in
mov
fs
mov
or
mov
mov
fildll
test
jae
lea
sbb
pop
inc
lea
loop
push
inc
movsl
xchg
mov
clc
jmp
cli
sub
fisttpl
mov
add
test
orb
mov
pop
mov
iret
mov
sbb
add
call
hlt
mov
fnstcw
jne
adc
loope
and
inc
cld
pop
dec
ret
sub
inc
add
sarb
ret
sbb
shr
lret
push
adc
leave
idivb
xlat
out
mov
lock
addl
xor
fsubl
xchg
imul
outsl
inc
cmp
xchg
nop
adc
jmp
data16
js
mov
ss
setl
stos
scas
sbb
stc
pavgb
ds
fs
or
mov
and
movsl
cmpl
aam
dec
enter
adc
ficompl
pop
jge
inc
je
lret
leave
dec
fwait
lret
mov
idivb
xchg
pusha
mov
pop
sbb
js
aas
sbb
sbb
jp
add
pop
dec
test
adc
adc
fsubrs
loopne
shl
xor
test
push
push
es
add
aas
data16
fiaddl
push
and
stos
outsl
pushl
xorb
push
flds
loope
pop
pop
jecxz
xor
jle
mov
fs
gs
and
addl
in
stos
dec
adc
sbb
nop
adc
and
int3
push
pop
adc
xchg
fmull
es
dec
jno
enter
xchg
mov
or
fildl
movsb
or
cmc
int
adc
lea
adc
jns
cmp
or
rolb
mov
pop
sbb
pusha
push
cmp
xor
movlps
ss
cmp
push
xchg
clc
in
adc
loopne
cmpb
inc
sbb
test
push
sub
mov
stos
stos
mov
push
dec
aaa
enter
push
cwtl
test
test
or
add
in
cld
enter
out
cmp
xchg
cld
lea
mov
mov
add
push
pop
mov
mov
add
divl
fwait
and
mov
cli
test
adc
lock
inc
push
mov
and
dec
push
ret
xchg
decb
pushf
mov
cmc
call
cmp
in
pop
shl
in
inc
aam
cwtl
jmp
and
push
call
and
imul
jb
mov
outsl
outsl
mov
pop
push
adc
jb
out
mov
add
enter
insb
call
mov
icebp
and
enter
jp
or
loopne
lods
ja
js
dec
fs
mov
jbe
mov
ret
mov
fs
lods
inc
mov
clc
cmp
and
dec
dec
pop
mov
lods
fbld
sub
pusha
mov
cld
push
jmp
inc
cld
loopne
out
insl
adc
inc
adc
in
addl
nop
or
inc
shrl
jge
stos
ds
fcomip
gs
cmpb
mov
fldenv
dec
sbb
je
icebp
scas
clc
xor
shlb
sub
das
cmp
or
jo
mov
nop
jmp
inc
es
sub
scas
es
std
enter
stos
inc
int3
cli
sti
das
adc
ljmp
xor
mov
or
std
add
rorb
push
xor
xor
mov
fnsave
adc
pop
sbb
or
lahf
je
add
std
in
inc
or
jg
hlt
push
xor
add
add
aas
mov
inc
cwtl
jge
xor
cmp
inc
dec
lcall
sub
fists
sbb
sub
lods
fs
inc
adcb
mov
inc
addb
inc
dec
cld
in
outsb
push
nop
sarl
mov
mov
inc
decb
jae
jne
call
dec
orb
pop
cmpsb
pop
je
or
lock
out
in
mov
lret
lea
call
xor
lock
arpl
call
je
adc
sar
push
sub
xor
jge
inc
rcr
movsl
hlt
dec
hlt
mov
push
fsub
dec
jmp
mov
shll
add
mov
mov
test
pop
iret
ficoml
sbb
adc
nop
mov
mov
les
mov
or
call
xchg
fwait
dec
adc
rorb
xlat
test
mov
inc
mov
push
sbb
add
inc
push
ljmp
bound
sahf
push
push
jno
and
mov
mov
das
ficomps
jnp
test
inc
sub
push
lcall
pushf
data16
adc
jmp
mov
lock
xor
test
pop
sbb
pop
lock
gs
dec
js
mov
icebp
xlat
out
scas
call
pop
adc
outsl
pop
dec
and
rolb
add
sub
sbb
mov
pop
sti
jp
add
mov
sti
or
add
mov
popa
loope
mov
popa
jbe
and
and
jae
les
inc
sub
xor
jp
xchg
stos
into
push
std
add
add
jl
push
lea
std
inc
lcall
movsb
into
mov
mov
mov
push
fs
sub
iret
sahf
mov
pop
mov
xchg
adc
push
lahf
add
add
loopne
add
test
mov
lock
imulb
sbb
rcll
jl
mov
dec
aam
lea
jge
lock
stos
push
pop
xor
decl
inc
das
add
or
mov
adc
inc
push
mov
pop
imul
or
adc
stc
inc
lea
sub
adc
les
add
fcoms
sahf
add
in
xchg
ret
insb
mov
mov
mov
jl
test
mov
insl
lods
pushf
mov
add
pusha
fstpl
sub
mov
adc
inc
nop
fmul
jle
rolb
xchg
mov
cmp
jno
test
movsb
aas
js
jge
sbb
adc
es
mov
loopne
stos
lret
push
lock
mov
push
enter
decl
mov
dec
icebp
dec
sbb
rorb
jl
or
int3
notb
jecxz
lds
cmpsb
call
sub
loopne
lret
ret
mov
adc
mov
ret
stc
movsl
lret
lret
sub
in
jecxz
dec
ret
mov
pushf
mov
in
or
cmp
push
push
cmp
add
clc
outsb
ret
mov
or
cmp
js
in
jbe
cmpl
mov
mov
jb
xchg
dec
mov
push
je
aaa
cmp
or
mov
cmp
je
push
mov
cmp
or
pop
or
decb
jo
xchg
sbb
push
push
lods
jmp
mov
xor
dec
push
loop
mov
adc
pop
push
add
mov
jo
sub
sbb
shrb
xor
pop
mov
push
pop
negb
or
cld
call
test
js
mov
mov
and
mov
and
jno
xor
dec
push
add
pop
sarb
push
insl
inc
xchg
or
test
orb
xchg
push
push
mov
addl
sbb
mov
fldl
out
dec
mov
add
shl
decl
mov
rol
es
add
push
and
popa
fcompl
jo
arpl
sub
sbb
lock
mov
int3
or
xor
rcrl
sub
clc
test
pusha
or
addr16
or
mov
xor
mov
je
jl
das
xor
add
cmp
push
adc
movsb
inc
test
mov
in
mov
dec
js
inc
add
dec
mov
out
mov
leave
es
cmpsb
outsl
test
mov
cmp
sub
add
sub
adc
xchg
lods
call
push
jno
addl
pop
sub
jmp
and
lds
jnp
and
sub
jmp
xchg
push
sbb
mov
xor
jp
lea
cmpsl
je
js
pop
push
mov
js
mov
inc
sub
pop
cli
add
dec
lock
shll
dec
mov
and
push
mov
mov
add
push
sbb
lahf
std
popa
dec
mov
adc
inc
scas
loope
mov
sar
iret
call
jp
cwtl
mov
cmp
lret
pop
xchg
stc
push
lods
push
mov
pop
fdivl
pop
push
xchg
hlt
pop
repnz
or
jle
mov
add
mov
mov
aam
test
mov
sbb
or
mov
test
cmp
sub
pop
add
ret
jmp
mov
mov
add
adc
shrb
add
ret
dec
mov
mov
and
mov
push
inc
jl
fimull
dec
push
xchg
ds
dec
add
call
fdivs
add
fstl
lods
mov
add
scas
aaa
cmp
mov
and
insb
push
inc
ret
pop
or
test
mov
ret
inc
shlb
cli
mov
jp
addl
int
push
xor
call
push
movsl
dec
add
or
and
pushl
adc
clc
xchg
cmp
dec
or
dec
nop
call
push
xchg
add
mov
test
cld
pop
push
mov
adc
push
add
js
fcmovnb
test
add
adc
rolb
fcomp
fildl
adc
orl
mov
scas
mulb
xchg
js
dec
inc
push
shl
inc
mov
or
inc
test
jo
shll
dec
lds
test
ds
rolb
roll
test
or
xchg
xchg
sub
or
das
loop
push
leave
xor
call
imul
pop
fs
push
call
in
jl
or
outsb
cmp
mov
aam
or
mov
fdivr
jg
jmp
add
test
cld
insl
test
movsb
ret
out
cli
lea
faddl
in
fldt
sbb
push
jno
sbb
idivb
jo
inc
mov
xor
orl
inc
in
push
call
insb
les
call
std
inc
sub
repnz
mov
test
cld
mov
outsb
or
lret
insb
mov
dec
sbb
mov
xchg
sbb
pop
xchg
dec
push
inc
leave
leave
jge
leave
pop
lods
test
pop
cmp
les
je
mov
add
roll
adc
sbb
inc
gs
pop
or
fisubs
cld
int3
aam
mov
dec
test
xchg
xor
xchg
pushf
push
inc
push
repz
sub
movsl
lods
in
mov
stc
jb
movl
fdivrs
jle
or
jmp
leave
test
sti
push
js
push
mov
cmpsl
jne
xor
adc
icebp
inc
add
pop
scas
ret
mov
inc
and
inc
lds
fiadds
insb
ret
popa
shl
mov
in
lret
push
mov
loopne
cmp
mov
insl
push
jne
negb
add
xor
push
cmpb
inc
adcb
lea
jae
aad
mov
jge
xor
push
jo
jne
inc
mov
push
inc
test
push
fildl
and
push
rorl
aam
mov
push
test
leave
fldt
inc
inc
sub
adc
pop
sub
and
xor
push
jg
push
add
mov
sub
mov
stos
out
or
mov
jno
push
popa
ficoms
rorb
adc
test
bnd
call
cmp
dec
call
or
sbb
pop
scas
mov
push
adc
les
loop
test
adc
and
insb
repz
cmp
push
clc
inc
in
je
popa
push
sar
pop
rcr
lds
xchg
or
inc
mov
test
dec
lds
aam
rolb
shl
cmpl
push
cli
pop
xchg
mov
imul
mov
push
shl
and
inc
stos
add
std
push
or
cmp
lret
pop
fldt
ds
ds
xlat
sarb
jae
jb
inc
mov
icebp
icebp
sbb
cli
out
gs
pop
gs
sbb
les
mov
adc
mov
imul
cmp
mov
mov
je
sti
sub
movsb
loop
fcoms
inc
sar
jmp
nop
add
int3
dec
mov
push
hlt
mov
cmp
sub
je
jmp
pop
mov
adc
sbb
movsl
ja
add
aam
aam
loope
test
movsb
dec
in
push
mov
jae
call
push
push
and
or
push
pandn
es
data16
divl
mov
aam
rorl
xor
ljmp
aam
pusha
movsb
mov
pushf
mov
jge
popa
add
pop
xor
addb
int3
cmp
sahf
enter
pop
shll
movsl
sbb
jg
mov
mov
jb
jmp
push
mov
in
call
jmp
add
push
pop
jge
add
call
push
aam
mov
out
pop
mov
xor
dec
and
and
imul
mov
and
add
pusha
cmp
pop
movsl
iret
jbe
xor
jne
xchg
fbld
cmp
pop
xchg
hlt
push
idivb
je
add
mov
int3
push
dec
or
in
or
pop
sbb
fmull
lcall
or
negb
push
xor
pop
cmp
cli
add
and
mov
jmp
sub
aaa
inc
les
pop
pop
inc
insb
pusha
inc
cld
call
fidivs
sbb
xchg
mov
mov
pop
mov
addl
das
insb
cld
mov
adc
fdivl
mov
jae
add
loopne
inc
fucom
rorb
roll
aam
ja
push
fsubs
lods
fwait
add
jl
push
dec
cltd
dec
cwtl
repnz
push
xor
cmp
test
mov
cmp
push
push
push
ret
sub
mov
cmp
daa
pop
insb
inc
rolb
pusha
data16
sbb
popf
sbb
arpl
adc
jae
dec
mov
out
inc
pop
sbbb
push
call
cwtl
lock
xchg
pop
mov
jo
push
xchg
add
adc
ret
add
xor
mov
popa
add
shr
mov
lret
subb
jmp
jo
xchg
adc
arpl
lock
and
push
decl
int3
sbb
xlat
rorl
adc
push
mov
push
mov
mov
and
lahf
pusha
lcall
je
pusha
addb
std
addb
sbb
cmc
fisubrl
stos
in
and
iret
test
jne
call
stc
sub
pop
inc
orb
out
ret
fs
cmpsl
pop
test
bnd
xchg
fiaddl
pop
inc
fcomps
fmuls
sub
mov
loope
incl
les
add
jg
adc
adc
nop
cmp
icebp
ucomiss
mov
ficoms
sub
je
ja
mov
mov
rcr
icebp
cmp
dec
pop
out
outsl
sub
es
dec
mov
in
mov
incl
fimull
outsb
or
cmp
add
lock
cli
sbb
xorb
inc
xor
push
mov
jmp
rorb
rcl
aas
push
and
push
outsb
sbb
stos
xchg
lods
inc
mov
mov
shlb
push
insl
ss
or
call
sbb
push
int3
xor
sarb
nop
pop
cmc
xchg
pusha
cmp
xor
push
jge
xchg
xchg
sbb
jle
std
or
movl
jge
repnz
in
cmp
das
jle
push
cmp
stc
nop
aad
test
aaa
loop
fs
cvtps2pi
or
rorl
add
cmc
into
outsl
xchg
xchg
sub
mov
or
dec
stos
and
or
adc
pop
cld
loop,pt
shll
mov
mov
mov
mov
push
push
hlt
push
int3
sub
das
mov
push
ret
fiadds
sbb
add
js
push
mov
movl
call
xor
sub
sub
cmc
rorl
mov
inc
dec
dec
imul
aam
insb
xor
dec
insb
xor
adc
sahf
mov
cmp
pop
push
mov
push
dec
int
mov
cmovp
rolb
inc
mov
in
inc
loopne
jl
cld
test
insb
mov
ljmp
fwait
dec
outsl
lcall
jmp
sub
pop
icebp
icebp
out
pushf
ror
cld
stos
mov
lock
jmp
mov
push
ljmp
jmp
les
jle
daa
adc
push
mov
dec
test
mov
inc
xlat
mov
pop
call
lds
adc
add
lret
xchg
js
mov
orl
fldpi
push
incb
add
in
inc
lea
xlat
lock
xchg
add
in
inc
add
mov
add
sar
in
je
andb
cli
sbb
repz
adc
sbb
lea
adc
adcl
cmp
popa
shrb
test
dec
pop
mov
shrl
dec
gs
daa
pop
je
or
nop
mov
sahf
imul
dec
pop
pusha
push
dec
fucomip
mov
pusha
jmp
adc
rolb
lea
dec
mov
pop
xor
movb
and
fnstcw
pop
mov
nop
ds
adc
mov
mov
lock
pop
jl
and
push
and
ljmp
shlb
popf
ljmp
aad
jmp
shrb
xorb
out
xor
cmp
les
sti
adc
dec
cmp
lcall
lds
mov
pop
or
fcoml
aam
outsb
push
sub
xchg
dec
rcr
mov
jge
jo
jle
push
jmp
add
mov
push
subb
mov
std
mov
inc
or
pusha
loopne
mov
jge
or
hlt
sbb
add
push
pushf
ds
xchg
mov
sbb
dec
call
sub
call
add
mov
push
xlat
aaa
bound
call
loop
add
dec
push
mov
adc
pusha
add
mov
dec
test
shl
loopne
inc
ret
add
push
js
inc
inc
js
fadds
push
adcb
decl
into
cmp
ja
dec
jnp
int3
les
add
iret
mov
inc
stos
mov
in
je
push
testb
mov
or
lcall
push
ljmp
ret
or
adc
push
fstpt
popf
push
push
push
movsl
call
xor
jo
mov
sbb
sbb
popf
cwtl
aaa
loop
fstpt
inc
movsb
add
inc
mov
push
xchg
aas
les
rolb
leave
or
fimull
lea
pop
add
call
btrl
push
fiaddl
fisttps
fdivs
and
out
jo
adc
out
ret
cld
enter
mov
inc
sbb
aas
mov
aaa
insl
and
test
in
lock
inc
sahf
leave
imul
dec
xchg
in
cli
push
adc
xorb
iret
pause
add
adc
add
rcrb
cmp
xorl
push
xchg
push
mov
add
push
jae
out
ret
insb
mov
jg
cld
jae
int3
mov
mov
dec
mov
loop
adc
inc
pop
dec
sbb
xor
es
adc
inc
sar
popf
add
cmpsb
and
inc
jge
mov
std
lahf
pop
sbb
add
lock
subb
in
add
dec
xor
fisubrs
and
mov
xchg
add
rolb
or
pop
mov
jno
mov
mov
icebp
pop
jmp
adc
xchg
mov
pop
daa
add
dec
push
rclb
orl
mov
je
daa
mov
nop
mov
js
loopne
insl
lret
push
ss
push
or
jmp
sbb
cli
add
mov
les
adc
mov
clc
and
lahf
hlt
xchg
cmp
rolb
mov
mov
xor
repnz
js
xchg
push
lock
pop
add
sbb
dec
cld
mov
rcrb
push
dec
mov
mov
test
mov
push
out
sbb
cli
scas
cmp
sahf
in
mov
mov
pop
pop
fsubs
dec
jmp
fs
sbb
and
ds
pop
adc
cmpsb
mov
or
in
and
add
sbb
je
mov
mov
cmp
int3
mov
and
dec
fidivrs
and
sub
adc
loop
pushf
pop
dec
dec
ljmp
hlt
clc
and
cmpb
pop
dec
cmp
lret
mov
stc
add
mov
add
test
jmp
or
loop
push
shl
push
add
adc
jmp
int3
fdivrl
or
insb
add
mov
call
pushf
push
lahf
inc
and
push
js
int3
sarb
test
xchg
cmp
cli
pop
lock
mov
data16
adc
push
mov
mov
push
sub
push
out
movsb
dec
inc
sub
jb
mov
dec
mov
sub
enter
sub
jle
dec
bound
insb
push
adc
scas
ret
mov
xor
xchg
add
jge
int3
fisubl
loopne
jmp
std
fiadds
dec
push
in
xorl
push
out
in
icebp
mov
cld
popf
loope
and
jmp
icebp
cwtl
sar
rolb
add
jg
ss
push
add
mov
ja
pop
or
in
out
cmp
inc
lods
mov
xchg
in
fs
jecxz
divl
test
es
sbb
push
pop
div
neg
and
jmp
pop
sbbl
pop
in
mov
xor
rorb
test
mov
mov
push
adc
sbb
or
mov
mov
hlt
ret
mov
shrl
adc
cwtl
stos
stos
and
dec
xor
std
popa
incl
ret
mov
adc
adc
rorb
les
dec
lods
jns
or
test
mov
in
push
shlb
cltd
fdivs
scas
in
icebp
push
subb
lods
xor
jge
pextrw
push
ss
and
cmp
call
cmp
dec
in
push
cmp
ret
push
inc
dec
aas
jmp
cs
and
addl
dec
lods
xor
rcrb
push
add
push
icebp
push
test
add
es
popa
rol
outsb
loopne
ja
add
mov
pop
inc
imul
mov
sub
mov
lock
inc
movsb
add
dec
sbb
add
cli
or
inc
cld
inc
outsl
and
push
fmul
adc
icebp
xor
cli
dec
mov
cmp
loopne
jmp
push
cmp
adc
inc
ss
push
pop
adc
cmp
rep
push
hlt
inc
loopne
add
in
or
lods
repnz
mov
jb
addr16
fwait
pop
out
adc
cmp
ljmp
cmpsb
push
into
outsl
jne
add
sahf
sbb
inc
adc
jmp
aaa
out
mov
xor
pop
mov
pop
pop
jmp
ljmp
jl
and
cmp
out
push
movsl
mov
scas
outsl
adc
into
insb
jae
stos
dec
pop
dec
ret
test
push
pop
sub
adc
cld
ret
mov
lods
add
in
jbe
orl
cmp
sub
xchg
ss
sarb
clc
mov
xor
lcall
mov
call
test
add
lock
adc
sahf
mov
cmp
lret
lods
testb
je
mov
cwtl
subb
pusha
es
pushf
sbb
add
lea
jge
inc
or
pop
std
dec
pop
and
cmp
mov
fcomps
in
fadds
push
fsubr
xchg
rcll
mov
xchg
fwait
push
popf
cmp
add
dec
and
hlt
cmpsb
mov
ljmp
cmpb
adc
mov
dec
mov
cs
xor
in
loop
cmpsl
mov
sbb
adc
cmp
or
loope
std
mov
lcall
cld
ret
nop
in
mov
cli
xor
lock
mov
push
pop
mov
in
sbb
sbb
pop
lock
js
repnz
wbinvd
mov
sbb
pushf
mov
push
pop
and
ss
sbb
pop
mov
inc
push
xor
clc
shlb
test
or
insl
cmp
push
mov
lods
lods
cmp
push
adc
jle
hlt
lcall
test
pop
push
rorb
cmpl
fwait
xor
cld
lock
add
sub
insb
push
dec
cmp
mov
push
inc
outsl
pop
aad
enter
ret
dec
and
or
inc
hlt
mov
rorb
push
push
movsb
fisttps
adc
pop
or
pop
jp
mov
les
jbe
rcrl
push
mov
push
outsl
loopne
mov
lahf
jne
sbb
xor
lea
fs
lret
xchg
push
mov
shlb
cmp
push
and
pop
mov
and
je
movsb
inc
jae
mov
out
push
std
pop
pop
mov
fs
adc
nop
data16
xchg
inc
pop
or
xor
dec
pop
xorb
xchg
ret
aam
enter
sbb
adc
xchg
stc
les
mov
ret
xchg
jmp
xor
jo
cmp
ljmp
nop
loop
cltd
fdivrs
adc
push
mov
scas
loope
rorb
dec
clc
and
popa
inc
ret
lea
mov
dec
rclb
movsl
mov
into
mov
adc
lock
sbb
jecxz
push
xorl
mov
or
and
push
sbb
std
punpckhbw
in
testb
imul
ljmp
or
pop
add
loopne
mov
sbb
pop
jne
mov
xchg
fs
sbbb
inc
xchg
mov
inc
and
test
dec
inc
ret
loop
sub
sti
js
cmp
jp
sarb
ds
ljmp
in
and
add
mov
adc
sub
xchg
iret
jle
add
dec
push
inc
popa
and
cmp
inc
cmp
push
or
or
lea
add
imul
ljmp
in
pop
or
ja
decl
pushl
cld
pop
insb
fcmovne
ljmp
push
lret
leave
sub
cmp
push
es
mov
fadd
push
ss
mov
in
mov
add
test
test
ss
inc
in
cmp
mov
dec
push
dec
pop
push
test
rol
pop
add
push
inc
adc
aaa
xchg
cmpb
pop
add
je
lods
mov
adc
push
sub
add
and
cmpsl
or
jo
loop
rcl
or
leave
insb
fdivrp
das
push
fidivrl
mov
xlat
mov
dec
mov
ret
and
pop
shll
jmp
into
mov
add
orl
rcl
push
sub
or
or
jge
dec
sbb
inc
xor
call
loope
outsb
mov
jge
sbb
adc
pop
push
sbb
orl
mov
das
sarl
inc
xor
cmp
mov
dec
push
jne
ret
lcall
dec
cmp
js
mov
or
push
or
shlb
mov
in
sbb
hlt
pop
adc
lea
jmp
je
dec
sbb
std
jae
push
cmp
fxch
pop
imul
sub
push
cmp
mov
fs
xchg
rclb
xchg
and
loopne
ljmp
cmpsb
cld
cmp
inc
addl
aad
lcall
add
push
cld
dec
in
in
enter
lea
mov
and
jns
ss
push
cld
fbld
cld
int3
sbb
inc
repz
outsb
xor
jmp
mov
jecxz
call
xor
or
test
jmp
pop
loopne
push
push
push
ret
cmp
std
incb
loop
je
sahf
and
add
in
push
xor
clc
and
insb
lock
jmp
add
outsb
dec
pop
add
call
out
mov
lock
mov
dec
jg
dec
ds
mov
pusha
stos
mov
loope
enterw
ds
push
or
inc
push
adc
mov
pusha
ret
lret
sbb
cmp
sub
shrb
jnp
adc
sbbl
enter
mov
dec
sbb
repnz
je
movsl
push
push
lcall
lea
gs
mov
out
mov
adc
inc
test
cmpsb
popa
scas
loopne
sbb
xor
stos
xchg
inc
imul
cltd
pop
inc
int3
dec
sub
and
jmp
jmp
push
fimull
cmp
aam
into
jmp
inc
push
push
mov
sahf
add
and
add
jl
pop
push
int3
jl
jl
gs
hlt
sub
mov
dec
std
ljmp
mov
adc
add
aas
cmc
push
mov
mov
rdpmc
lret
nop
push
rclb
in
fwait
dec
test
inc
sub
or
mov
jecxz
mov
pop
outsb
and
mov
lret
mov
sbb
and
imul
xchg
int3
pop
loopne
rorb
push
je
jg
inc
xchg
movsl
fidivl
and
mov
sub
lret
pop
or
shlb
adc
inc
xor
and
xor
sar
icebp
sbb
sub
lret
pop
test
mov
push
xor
fldenv
loope
push
push
into
lock
clc
xor
test
sub
mov
sarl
add
xlat
insb
push
mov
push
xor
popa
xor
testb
push
pop
adcb
push
push
and
adc
pop
stos
mov
jle
cmpsb
aam
mov
pop
dec
cmc
aad
sbb
lock
sbb
add
stc
sbb
sbbl
hlt
cmp
sub
push
pusha
dec
scas
fisttps
rolb
andb
mov
stos
ret
cmp
sub
adc
js
add
and
outsb
mov
or
xor
and
insb
loopne
pop
adc
sbb
pop
pop
push
lcall
mov
sub
movhps
mov
les
mov
pop
cli
adc
jne
shll
test
jl
and
clc
push
jp
push
bound
rcr
stc
xor
add
add
out
and
sub
nop
pusha
mov
rolb
mov
andl
cmp
into
mov
dec
add
jmp
dec
stos
jl
popa
sti
js
add
rolb
or
and
mov
adc
push
arpl
es
mov
push
ss
fiadds
xchg
xor
dec
push
or
cwtl
pop
cs
or
jae
cld
cmpsl
jg
push
mov
jmp
adc
add
or
push
das
xchg
mov
xchg
xor
aad
or
push
pop
mov
dec
dec
add
sarb
rclb
jne
add
sbb
inc
and
adc
movsb
jnp
mov
dec
rol
or
cld
ljmp
popl
shlb
sahf
mov
jmp
and
jl
push
enter
ljmp
scas
mov
cli
sbbl
lea
pop
std
ds
fnstenv
sbb
bound
push
inc
adc
push
mov
xor
outsb
int
sub
cmpsb
stc
insb
push
fiadds
faddp
adc
sahf
int3
cmovo
es
cld
inc
pop
mov
mov
and
addb
cld
sbb
push
or
dec
mov
gs
cli
and
popa
fstps
or
and
dec
or
and
leave
rol
xor
cmp
movsl
outsb
lcall
push
sbb
xchg
fs
outsb
xor
aaa
jl
or
mov
push
sbb
mov
inc
jmp
inc
add
dec
sub
push
xor
lock
mov
mov
scas
sbb
push
sub
aam
dec
xor
inc
lods
mov
dec
dec
add
dec
or
xor
pushf
mov
push
mov
mov
cmp
gs
sbb
adc
add
fsubl
add
or
jp
not
call
lea
xor
adc
cmp
inc
push
sbb
adc
test
enter
xor
and
jecxz
clc
incl
push
push
les
adc
jl
je
adc
outsb
cmpsl
movsl
mov
mov
mulb
in
push
cmp
sub
imul
and
mov
jmp
sbb
push
push
clc
mov
shrb
push
lret
cmp
je
pop
jmp
push
nop
cmp
mov
push
test
dec
push
ljmp
andl
dec
dec
into
loope
in
mov
fstl
scas
mov
xor
and
and
adc
sub
jo
push
dec
sbb
and
xor
cmp
jne
xor
std
mov
push
int
pop
leave
cmp
and
push
pop
ret
out
add
and
es
insl
aam
mov
fldt
cmpsb
rorb
outsl
xor
sbb
les
jae
xor
sub
aad
loopne
lock
sbb
push
arpl
push
test
mov
out
or
aaa
cmp
sbbl
sbb
and
cmp
fiaddl
int3
fcoml
and
lret
pusha
imul
call
icebp
fisttpl
add
loopne
rolb
adc
addb
mov
gs
data16
outsl
int3
dec
push
test
shl
ds
test
mov
incl
mov
jb
test
jmp
mov
add
or
sbb
test
dec
and
ret
inc
sub
push
mov
test
cmp
pop
pop
or
shl
dec
jb
jne
or
mov
add
daa
movsl
sbb
lret
cmp
dec
cld
and
xchg
add
add
jmp
sub
push
sahf
nop
ret
xchg
adc
xor
lock
pop
cmp
mov
test
cmp
cmp
xlat
inc
fldenv
cmp
cmp
inc
mov
mov
push
data16
cmp
push
add
or
jae
sbb
movb
iret
inc
xorb
inc
lea
and
pusha
lods
clc
mov
pop
rorl
ja
inc
push
ss
out
mov
lds
pop
xorb
mov
jmp
xchg
push
loopne
xor
inc
test
add
inc
decl
out
mov
popf
inc
imull
cmp
and
push
add
cmp
mov
mov
add
scas
pop
inc
enter
dec
sbb
jge
ret
test
imul
std
cmpsb
add
int3
or
icebp
mov
test
movsl
es
ficoms
test
pop
in
sbb
enter
int
push
scas
enter
lds
mov
das
cmpsb
dec
push
incl
rorl
lods
ret
shr
addb
mov
push
sub
arpl
out
add
sbb
push
mov
outsb
fbstp
sub
fs
sub
std
pop
xchg
nop
and
jno
sbb
adc
sbb
fstpt
jmp
fs
sbb
or
test
cmpsb
mov
call
add
rolb
add
inc
out
add
sbb
je
xchg
mov
mov
cli
outsb
inc
mov
ljmp
jmp
nop
sbb
bound
push
fisubl
imul
enter
nop
dec
rorb
rolb
test
adc
aam
cmpsb
xor
ret
adc
cmp
testl
sbb
mov
lea
mov
icebp
xchg
or
call
xchg
push
test
mov
add
mov
push
incl
push
push
push
push
call
dec
mov
shrb
xor
inc
andb
fsts
xchg
or
insb
call
cmp
int3
cmc
inc
push
lea
xchg
cmpsl
aaa
scas
pop
add
push
xor
sarb
stc
lea
shlb
xor
dec
or
mov
cmpsb
mov
divb
xor
and
clc
sub
test
mov
je
add
jb
loop
andnps
sbb
arpl
sub
add
push
dec
movl
imul
mov
lods
rclb
xchg
faddl
data16
lds
les
push
sbb
jbe
dec
mov
icebp
or
nop
xlat
add
lock
cwtl
cmp
mov
aaa
add
fwait
and
adc
or
adc
mov
pop
inc
call
and
mov
mov
clc
fadds
adc
mov
sub
nop
dec
fisubrl
jge
fidivl
repnz
int
mov
mov
sbb
scas
shrb
cmpl
add
gs
pop
nop
shr
jle
push
pushl
in
inc
loopne
xchg
int
push
jne
je
adc
cmp
dec
mov
int
insb
test
lcall
lock
ret
test
mov
add
in
mov
outsb
cmp
push
cs
inc
bound
decl
add
push
addl
fcomps
cli
hlt
pop
cmp
cld
inc
loopne
clc
dec
add
sub
call
fnstsw
and
add
push
push
add
mov
pushl
repnz
push
push
rclb
sahf
pop
fs
ret
mov
or
loopne
xor
push
sbb
ret
loopne
fmuls
lods
int3
cli
xor
inc
adc
clc
xchg
cld
push
xor
stc
cmp
sub
xor
jbe
cli
and
rcrb
sbb
sub
shrl
adcl
push
movsl
pushw
mov
inc
ret
mov
loope
loopne
sub
inc
xchg
mov
jle
orl
push
push
out
jp
jbe
inc
adc
push
mov
push
pop
inc
push
push
pop
lock
cmp
fstpl
sub
push
or
sub
scas
sub
outsb
lock
and
xlat
adc
sub
iret
loop
js
sub
cld
pushl
loopne
out
ds
mov
daa
inc
mov
dec
in
add
fwait
std
ja
mov
rcll
inc
test
paddsw
mov
mov
dec
sahf
call
mov
inc
adc
nop
or
jnp
sbb
mov
and
ds
adc
in
fnstcw
ljmp
or
iret
and
mov
gs
xor
mov
push
cli
movsl
andb
test
xorb
add
push
mov
push
rorl
stc
dec
je
les
or
mov
add
jb
mov
test
mov
mov
hlt
xorb
shr
jmp
adc
enter
and
rclb
or
mov
ljmp
adc
lock
insb
cld
fwait
rclb
dec
add
adc
and
test
pop
ret
fcomps
repz
aam
mov
jp
cmp
scas
adc
adc
cltd
imul
or
push
stos
adc
mov
and
mov
loopne
push
cmp
xor
add
addb
mov
adc
add
addr16
add
pop
cli
lret
xor
shll
test
in
lret
add
xchg
movsb
outsb
sahf
divb
cmp
insl
sbb
sub
shll
adc
dec
ret
dec
dec
mov
mov
xchg
push
or
xchg
adc
andb
inc
add
ljmp
loop
scas
pop
mov
adc
cmp
lahf
clc
or
aad
outsl
or
mov
movd
or
pop
cmc
mov
cmp
mov
ret
adc
lcall
jg
push
adcb
lahf
cmp
dec
bound
mov
xor
lret
shlb
jle
xchg
mov
movl
inc
push
outsb
mov
stos
sub
lods
dec
roll
mov
imul
in
arpl
push
in
js
push
sbb
decb
pop
or
lcall
adc
push
pop
je
in
dec
dec
icebp
jne
sbb
sub
fbstp
add
int3
push
or
mov
lock
add
js
xchg
andl
mov
inc
lods
pop
dec
push
and
data16
mov
and
inc
in
in
mov
out
mov
enter
test
cmp
mov
push
jae
pop
dec
mov
push
enter
push
dec
inc
mov
rclb
mov
sub
int
or
sbb
mov
mov
ret
sbb
fisubrl
push
aam
add
mov
ljmp
aam
or
mov
movsl
mov
in
mov
in
roll
in
dec
add
jge
test
inc
inc
jp
mov
dec
incl
data16
dec
or
fdivr
rorb
pop
dec
jp
push
push
jge
mov
mov
add
pop
fs
je
cmpsb
lock
inc
es
and
push
std
sub
inc
aas
test
adc
jb
je
or
lods
mov
xchg
adc
lea
xor
scas
cmc
add
scas
push
mov
mov
outsl
and
jo
xchg
sahf
insb
add
or
in
mov
dec
clc
daa
push
je
jp
jo
push
push
out
add
lret
nop
lcall
push
or
out
jp
add
push
fisubrs
sbb
cmpsb
mov
int3
imull
add
sub
ret
pop
punpckhbw
push
jmp
push
push
scas
mov
outsb
stc
mov
mov
pop
shrb
inc
leave
outsb
jmp
sub
push
lret
jp
cmp
adc
adc
push
cmp
clc
pusha
adc
jle
mov
rolb
cmp
aam
sbb
imul
icebp
dec
inc
pusha
in
pop
inc
test
aam
sub
sub
sub
aad
test
ficoml
sbb
sub
push
xchg
fimull
inc
enter
pop
push
push
inc
inc
rcll
dec
inc
shlb
insl
test
cmpsb
adc
push
mov
adc
movsb
aad
push
add
into
adc
aaa
or
xor
xchg
adc
mov
inc
push
testb
push
fsubs
dec
cli
push
dec
or
mov
cmpsb
scas
add
adc
lock
and
pop
out
ret
sbb
adc
mov
ret
push
loop
sbb
add
std
mov
pusha
orb
test
cli
fwait
pusha
push
popa
inc
mov
push
adc
in
pop
lsl
stc
dec
incl
pop
loop
rolb
or
ret
outsb
pop
addl
mov
out
add
cmpl
ljmp
iret
jle
out
outsb
xchg
inc
dec
aaa
pop
mov
movsb
jnp
loopew
cmc
xchg
inc
jb
hlt
inc
loopne
add
addl
cld
pop
divb
cltd
pushl
add
mov
pop
loope
xor
mov
dec
enter
sbb
pop
rolb
xchg
mov
mov
movb
lock
lea
data16
cmp
in
fistpl
loop
aam
inc
test
int3
loope
sbb
shlb
xor
mov
stc
ljmp
jnp
cmpl
or
add
push
scas
shlb
pop
mov
test
adc
sahf
in
fistl
addb
incl
mov
mov
and
decl
and
inc
cmp
addl
cmp
fdivs
and
dec
xor
fisubl
or
pop
sbb
cmc
lahf
les
pushf
add
adc
xor
lahf
add
jp
inc
loopne
subb
je
es
sbb
aas
sbb
shl
add
nop
jbe
hlt
mov
ja
pop
add
les
or
fsub
or
fisubl
jg
arpl
push
jae
push
sarb
ja
mov
mov
adc
addb
lock
fsubrl
xchg
sbbb
dec
std
or
jle
mov
into
insl
and
pop
leave
push
call
adc
test
shll
sbb
std
cmpb
data16
sub
fst
mov
test
xchg
mov
mov
pop
add
push
stos
xchg
xor
mov
xchg
outsl
gs
ljmp
sub
adc
cmp
rcrl
dec
dec
push
jp
call
mov
jle
jp
sbb
mov
sub
mov
mov
mov
pop
bound
out
jnp
mov
mov
cld
mov
xor
mov
movsb
jbe
stc
cwtl
push
mov
mov
xchg
and
push
adc
jb
retw
mov
sbbl
and
std
add
lock
inc
or
outsl
mov
adc
ret
sti
dec
andb
nop
xor
clc
vmread
jmp
mov
jae
pushf
xchg
mov
mov
ret
xor
stc
and
jmp
hlt
inc
das
push
test
clc
sbb
in
jne
sbb
fiaddl
pop
outsb
and
and
stos
inc
jb
push
into
pushl
imul
or
jmp
jb
fwait
icebp
inc
lock
xor
cmp
loopne
jecxz
push
test
cmpb
adc
lods
pop
jb
pushf
loope
dec
std
inc
push
sub
mov
jp
leave
cld
ss
stos
add
jo
or
adc
cmp
inc
test
stos
movsbl
cmp
cwtl
into
cld
test
test
jae
ret
xor
dec
push
ret
push
je
mov
xchg
inc
jg
fidivrl
jp
dec
jb
sub
outsb
push
dec
jb
xchg
gs
dec
rorb
jp
xorb
push
adc
cmp
cmp
push
pop
loopne
cwtl
jg
add
andl
pushf
andl
inc
mov
cmpsb
outsb
jmp
cmp
or
ljmp
or
je
icebp
test
pop
sti
mov
and
in
and
mov
out
push
in
mov
mov
shlb
cwtl
in
loop
and
push
adc
lods
es
add
mov
popa
push
adc
clc
jbe
or
sahf
sbb
pop
push
into
lret
pusha
push
pop
lret
sahf
ds
inc
push
jb
stos
mov
cmc
je
push
addb
cli
lods
mov
mov
mov
jp
jecxz
pop
jecxz
int3
mov
push
sbb
ret
or
inc
sub
bndldx
mov
hlt
mov
sub
nop
pop
std
add
jb
push
data16
mov
and
in
leave
gs
and
xor
xchg
add
and
inc
add
jne
test
push
aam
or
push
test
push
js
add
inc
leave
push
xchg
mov
cwtl
push
sbb
pop
ret
imul
mov
jecxz
jmp
rolb
mov
cld
hlt
bound
push
in
loopne
mov
cmp
fildll
sub
ds
adc
jge
push
icebp
add
shll
add
insb
nopl
push
insb
sub
add
lret
scas
loop
mov
lret
jbe
jae
addb
or
inc
movsl
push
sub
rorb
mov
cwtl
mov
das
sub
or
cmc
lret
rcl
int3
out
dec
sbb
je
leave
pusha
mov
pop
add
xor
std
mov
push
mov
pop
inc
lret
mov
jle
ss
leave
rolb
add
sbb
or
les
mov
je
test
sub
sub
sub
out
inc
xor
push
out
mov
aam
pop
sahf
jne
mov
adcl
repz
push
lods
sbb
or
lcall
in
nop
icebp
lahf
xchg
mov
mov
ret
push
cmp
nop
ret
test
lret
nop
pop
mov
lcall
mov
cli
push
std
std
sub
clc
int3
rclb
dec
push
ret
cmpsb
pop
mov
pop
imul
mov
push
pop
add
adc
jne
sbb
aas
add
aas
and
jl
nop
add
inc
mov
rcll
andl
out
add
mov
shlb
outsl
mov
outsl
add
imul
rcrb
pop
test
sbb
jg
or
clc
or
aas
xchg
ljmp
and
cltd
addr16
hlt
jge
cmp
push
add
mov
outsb
mov
sub
inc
sub
ja
loope
mov
add
add
loop
mov
repnz
sub
xchg
mov
mov
decl
ds
add
leave
xor
xchg
push
std
cmpsb
xor
cli
paddq
rclb
push
inc
int
je
add
popa
cmc
fcoms
in
call
sarl
mov
clc
adc
outsl
pop
test
dec
aaa
imul
into
aam
or
inc
push
cli
out
sysexit
outsl
or
add
push
mov
adc
incb
jns
js
or
std
push
and
cmp
xor
push
nop
jae
adc
pop
call
pop
into
sub
jp
mov
pop
iret
inc
scas
hlt
push
movsb
les
insb
mov
jmp
loopne
inc
cmpsb
daa
mov
dec
fadd
ss
cmp
mov
adc
cmp
test
sub
ficoml
aad
and
negl
mov
pop
mov
rorb
roll
xchg
mov
or
popf
leave
aaa
jo
cld
out
loopne
mov
loopne
add
jg
fiaddl
cld
mov
fs
jmp
xor
add
subl
add
test
mov
inc
mov
aam
int3
xor
push
arpl
jno
pop
sbb
or
fs
ljmp
adc
or
adc
mov
dec
mov
push
arpl
pop
rclb
push
cld
push
ljmp
jl
ret
mov
add
add
add
loop
je
nop
dec
in
jl
sbb
dec
lods
jb
add
lahf
adc
and
push
fldl
xor
std
mov
dec
add
imul
icebp
mov
shll
adc
adcb
sti
lea
push
mov
jmp
pop
add
adcb
test
rol
test
lret
mov
pop
into
inc
stos
add
jp
add
add
mov
sti
mov
jg
les
rcll
push
data16
je
daa
lea
sub
das
rol
pop
je
add
cmpsl
lock
sbb
adc
loopne
lds
mov
add
les
incl
jg
stc
mov
cmp
dec
add
inc
das
invd
lea
adc
in
and
lret
enter
jo
ficoml
mov
out
adc
cltd
mov
les
mov
test
rcr
mov
mov
nop
cmp
sub
cmp
jb
lret
aaa
loop
lea
stc
cmp
sub
push
mov
adc
inc
ret
movsb
dec
aad
push
mov
mov
call
xchg
add
loopne
mov
dec
xor
aaa
loop
mov
dec
add
pop
lahf
faddl
shlb
rcll
jo
inc
ljmp
push
out
int3
add
add
add
sbb
mov
mov
push
push
cld
push
ret
daa
adc
add
outsl
or
jbe
cli
mov
mov
add
stc
cld
jmp
inc
xchg
mov
xor
push
into
cmp
outsl
xorw
sahf
jo
bound
inc
or
dec
mov
mov
dec
sub
jb
or
jmp
cmpsl
dec
push
sub
test
hlt
jge
fs
cmp
and
sbb
dec
cmp
inc
test
inc
gs
mov
cmp
mov
adc
cmp
lods
cmpsb
push
and
pop
int3
shll
loop
mov
cmp
ret
imul
adc
lock
inc
jp
jl
adc
add
faddl
or
pop
call
pop
mov
xor
incb
lret
gs
push
dec
es
aam
jae
adc
mov
push
cmp
jmp
lock
ret
gs
sbb
testb
mov
mov
orl
adc
push
loope
orl
jns
mov
lock
xor
push
sub
jmp
push
pop
cld
add
mov
mov
fcomps
cld
adc
jp
and
loopne
fstpl
ljmp
add
cld
mov
cwtl
and
sub
dec
mov
cld
inc
mov
iret
add
femms
jno
cmp
jnp
inc
in
pop
iret
pop
je
sti
mov
jle
into
jmp
jne
outsl
gs
std
mov
les
jae
cmp
jmp
xor
push
push
sub
mov
fdivr
adc
int3
movsb
cli
add
sub
ljmp
mov
adc
call
dec
inc
mov
pop
out
push
adc
jb
pop
shrl
inc
xor
xor
xor
push
test
xchg
push
dec
mov
xchg
jg
cmp
arpl
jo
mov
out
in
push
stos
and
and
es
es
sub
pop
cmovo
cld
sahf
int
add
add
movb
jmp
addb
add
adc
rcrl
hlt
push
insl
fiadds
inc
jne
push
mov
call
mov
push
rcrb
fisttpll
imul
mov
mov
cmpl
fcomps
inc
sub
adc
stos
mov
lock
dec
leave
jo
sbb
lea
insb
and
scas
icebp
stos
mov
and
push
ds
and
mov
add
dec
adc
loope
or
andl
sub
mov
insb
lock
je
hlt
add
imul
and
adc
jle
mov
add
in
shlb
dec
push
and
push
icebp
mov
push
rol
int3
fs
push
cmp
xchg
jne
test
jmp
mov
and
push
loopne
push
mov
sbb
mov
les
call
lock
rcrb
cs
cli
push
dec
sbbb
push
aam
push
shlb
mov
sub
sahf
scas
pop
fiaddl
movsb
xor
pop
push
sbb
stos
mov
inc
inc
xor
out
pop
mov
lods
int
jo
shrl
inc
xor
pop
test
jg
adc
xchg
mov
pop
loop
mov
fdivp
sub
adcl
cld
ret
mov
cli
pop
pop
mov
in
mov
cmp
mov
gs
nop
mov
sbb
add
nop
push
xor
xor
insl
sar
xor
clc
xchg
or
cmp
fdivl
ret
test
mov
xor
cmp
insb
mov
sar
sub
pop
pop
mov
roll
ficoms
in
push
aas
cmp
jae
cmp
pusha
inc
fcompl
inc
xchg
and
insb
sub
dec
pop
mov
jl
fcoml
push
add
maxps
ret
ds
push
push
mov
bound
cwtl
and
fadd
outsl
fdivl
daa
pop
adc
adc
xorb
dec
pushf
xchg
outsl
popa
ret
adc
jb
pop
xor
in
add
sahf
dec
ret
subb
push
fistpll
or
add
addb
or
xchg
push
push
and
and
cmp
jg
pop
pop
or
icebp
loop
mov
enter
or
xchg
sti
push
sub
push
jne
enter
mov
mov
or
inc
leave
add
xor
add
adc
mov
push
ja
in
fnstcw
ljmp
push
xchg
xor
pusha
jmp
clc
lret
clc
mov
jo
pop
xchg
test
mov
push
push
enter
xchg
push
ret
fildl
imul
sub
std
push
add
movsb
push
cmpb
add
testb
dec
push
outsl
mov
subb
cli
lcall
arpl
xor
push
mov
insb
je
jno
sbb
loop
inc
xlat
out
dec
cmp
cmp
imul
loopne
ss
fstl
inc
jmp
fdivs
ret
mov
es
push
loope
mov
inc
adc
lock
mov
mov
mov
adcl
aad
out
push
je
adc
cmc
lret
repz
mov
cmc
test
lods
push
cs
in
add
rolb
cmp
inc
popf
mov
std
bound
push
stos
push
lods
mov
aam
jmp
cmpb
ret
xchg
adcb
aaa
mov
mov
movl
insl
jbe
jge
loop
dec
cmp
stos
shrb
mov
aad
rclb
lcall
cmp
xor
mov
mov
mov
adc
cmp
xor
inc
pusha
in
dec
mov
mov
cmp
push
push
mov
scas
pop
xor
repnz
cwtl
xchg
mov
aaa
pop
push
cmp
sar
imul
call
and
sar
xor
clc
mov
pushl
adc
mov
hlt
xchg
xchg
ret
add
in
cmp
push
push
test
push
jb
xor
and
test
pop
jae
adc
fwait
loop
adc
jo
xor
repnz
inc
sbb
sbb
test
outsl
jmp
jmp
mov
inc
cmp
adc
repnz
sbb
loopne
add
adc
mov
push
rorb
inc
and
lea
and
mov
fimuls
loop
add
rcr
cmpsb
out
dec
es
in
mov
or
push
adc
add
clc
fwait
push
cs
test
xor
add
iret
rol
outsl
fistl
ror
jo
mov
pop
jmp
cmp
xor
negl
call
mov
sub
fsubrs
mov
jge
divb
mov
je
mov
xchg
js
cmp
rorl
add
dec
orl
dec
add
das
stos
push
add
add
sub
incl
cmp
mov
mov
in
pop
repnz
les
int3
and
leave
pop
adc
inc
jp
loopne
stos
or
mov
test
xchg
pop
dec
sub
push
fs
adc
adc
push
sub
loopne
xlat
adc
sbb
xor
insb
mov
stos
and
lret
cmpb
scas
mov
and
jle
inc
inc
loopne
sbbb
repnz
mov
jbe
in
test
clc
jnp
clc
or
jo
loopne
lret
mov
push
mov
xchg
insb
push
fidivs
mov
sub
loop
pop
decb
jge
jb
cmp
sub
lahf
xchg
dec
or
clc
fimull
popa
js
lds
add
mov
int3
sahf
add
loop
int3
sbb
fwait
add
adc
jmp
jo
inc
out
test
cmp
test
xor
push
push
fiaddl
inc
push
cwtl
je
pop
lret
dec
lock
dec
jl
and
or
jle
inc
cld
add
daa
and
mov
ret
or
cmp
jae
dec
loopne
shl
adc
shll
pop
add
lock
jbe
lret
insb
pop
push
shll
adc
xorb
je
out
and
clc
push
shr
mov
mov
jno
pop
shrb
jl
and
adc
xor
vpshlb
mov
jmp
test
fs
sub
and
incb
push
out
mov
sahf
sub
cmp
push
setle
mov
test
call
push
fidivs
add
leave
add
lods
or
mov
pop
push
adc
jecxz
ds
idiv
rcrb
call
cmp
xor
xchg
inc
mov
lcall
jnp
insb
aas
mov
cmp
outsl
xlat
sbb
and
pop
or
inc
dec
cmpb
add
outsb
aas
aam
fadds
add
unpcklps
scas
push
js
mov
xchg
add
call
orb
cmp
push
arpl
push
shl
push
mov
or
test
orl
sbb
and
mov
dec
lock
add
lock
cwtl
sbb
jb
enter
xorl
repnz
test
daa
mov
add
test
lret
dec
add
stos
fs
push
adcb
dec
shrl
sub
add
fdivrs
out
and
js
cwtl
inc
ds
mov
add
in
mov
and
stc
mov
push
mov
sti
mov
inc
and
jae
push
mov
shrb
mov
mov
js
sbb
out
inc
adc
push
outsb
scas
xchg
add
enter
sti
jl
rorb
dec
lahf
add
push
clc
pusha
xchg
loopne
cmc
and
add
shll
fs
hlt
scas
mov
jl
inc
cmpb
or
je
inc
inc
fidivs
mov
mov
cmp
unpcklps
pop
mov
mov
jo
mov
xor
xor
xchg
notb
movsb
icebp
push
mov
pop
mov
dec
push
imul
adc
cmp
ja
mov
mov
fisubl
sub
mov
adc
jae
cld
js
pushf
pop
sbb
sub
or
ficompl
mov
sbb
jge
xchg
add
xor
add
loopne
call
inc
jnp
or
xor
icebp
jbe
or
and
add
scas
inc
pop
lock
fsubrs
add
jmp
jle
lods
add
sti
jbe
mov
add
orl
fmuls
enter
push
inc
push
ret
jno
mov
outsb
push
dec
xor
and
jmp
mov
pop
or
in
rcll
inc
mov
fldenv
insl
lea
testb
outsb
outsl
inc
mov
out
push
insb
incb
js
or
or
push
push
pop
xor
adc
mov
ss
add
mov
imul
loopne
inc
mov
mov
in
inc
or
dec
push
loopne
add
mulb
gs
lea
inc
sbb
pusha
push
hlt
push
imul
lea
aam
add
push
cmp
xchg
aam
sbb
test
dec
cmpsb
or
jl
test
jnp
in
mov
or
andl
sbb
ret
nop
incb
test
stos
sub
or
xor
cmp
fcomps
add
add
shrb
dec
or
in
mov
pop
int3
mov
and
or
push
push
out
xor
call
stc
bound
nop
push
imul
jmp
iret
or
adc
lods
out
mov
jb
icebp
movsl
or
lea
jne
into
aas
test
fdivrp
pushl
inc
sysret
rcrb
lods
dec
inc
hlt
cld
cmpsl
sbb
das
xchg
lea
inc
fmull
rcll
movsb
push
sti
cmpsb
dec
lock
mov
and
sub
inc
sub
xor
push
test
cmp
shll
xorb
or
add
sahf
loop
dec
push
inc
dec
mov
ljmp
xchg
cmp
push
jp
mov
jmp
int
fimuls
add
fistl
add
pop
aas
hlt
mov
outsb
xchg
sbb
les
shl
xor
lea
inc
jmp
inc
int3
pop
orb
xchg
cli
mov
outsl
std
test
push
call
or
mov
movsb
xlat
fcomip
ss
paddsb
scas
inc
jmp
adc
dec
aas
jl
hlt
idivb
call
mov
push
int3
mov
lea
test
icebp
push
mov
add
pop
mov
lods
cmpsb
ret
inc
add
push
push
movl
test
mov
or
outsb
rcl
pop
pop
jg
in
sub
lds
jbe
mov
ficomps
add
sbb
inc
xlat
cmp
mov
inc
into
adc
addr16
push
in
jne
cld
add
pop
xchg
xorb
clc
cmpl
loope
adc
ret
add
insl
pusha
mov
outsb
data16
push
les
cmp
je
imul
or
repnz
adc
fsubs
adc
test
adc
enter
cmp
add
sbb
ja
xor
call
jae
inc
lcall
in
gs
pop
inc
add
mov
sar
je
int3
sbb
pop
pop
sbb
cmp
pop
pop
aaa
mov
or
xchg
gs
fldcw
stc
jl
nop
or
xchg
addr16
push
div
adc
out
push
fwait
jb
ja
or
mov
cmp
cmp
mov
and
dec
sbb
aad
xchg
push
aam
push
add
inc
push
loopne
call
cmpsl
pcmpeqd
mov
lods
int3
shrl
scas
cld
push
sbb
dec
leave
inc
jmp
xlat
sub
add
add
mov
lock
data16
add
jne
adc
mov
incl
ret
add
xor
int3
outsl
adc
stos
mov
hlt
or
lcall
sbb
xchg
pop
push
test
sbb
push
aas
mov
inc
add
xor
adc
mov
loopne
mov
daa
je
and
push
ja
rcr
or
jmp
cmp
test
sbb
xor
mov
inc
shrb
dec
sbb
sub
inc
es
push
push
insl
js
cli
nop
inc
xchg
and
push
mov
aas
push
add
mov
iret
mov
mov
mov
adc
xor
shrb
add
jns
hlt
xor
sarl
lahf
movsb
pop
cmp
inc
out
inc
decl
mov
insl
cwtl
push
inc
add
jp
jmp
pop
add
push
cmp
lds
repnz
cmp
addb
cmp
pushf
jbe
aaa
adc
mov
cld
cwtl
lods
test
lret
or
cmpsb
and
je
call
pop
subl
in
add
jecxz
lret
cmc
push
dec
call
ss
mov
inc
nop
shll
ror
aaa
cmp
mov
add
movsl
loop
cld
fdiv
js
push
pcmpeqb
ficomps
test
mov
loopne
sbb
rcrb
loope
pop
loopne
pop
fisttpl
enter
inc
dec
jb
jo
into
mov
mov
fdiv
idivl
adc
xchg
jp
sahf
push
push
pop
and
adc
sbb
xor
push
in
cli
mov
mov
jne
push
in
mov
sub
or
fisubrl
out
jne
inc
cmp
aad
outsl
push
jmp
push
ret
mov
mov
push
xor
mov
outsl
out
ret
inc
incl
or
adc
push
test
adc
or
sbb
or
aas
cmp
mov
dec
mov
mov
repnz
mov
add
xor
fisubs
nop
push
xor
add
jmp
call
and
mov
inc
inc
in
mov
push
fnsave
in
repnz
mov
test
push
cltd
cli
insl
adc
push
push
inc
out
mov
cltd
adc
mov
push
pop
movsb
mov
out
adc
or
push
push
add
mov
mov
ret
int3
arpl
adc
add
push
shrl
add
mov
jmp
mov
pop
rcrb
inc
dec
inc
jg
mov
mov
jbe
scas
add
xor
fs
js
sub
and
jae
cmp
aaa
cmc
movsb
push
enter
lret
aaa
adc
roll
adc
push
inc
ret
push
xor
ss
lods
mov
movsb
testl
fwait
pusha
pop
and
inc
inc
jmp
int3
pop
je
ret
mov
xor
hlt
shld
in
add
mov
push
mov
mov
imul
mov
lock
lods
mov
clc
je
sub
test
popf
mov
pusha
ljmp
jne
and
lret
in
int3
rolb
sahf
in
jle
fdivr
pop
inc
aam
mov
fmull
fistpl
jo
adc
pop
cmpl
mov
mov
cmp
imul
mov
loopne
adc
and
rorb
xor
push
iret
aam
sbb
inc
pushl
adc
shr
aam
push
lcall
mov
cld
mov
jne
sbb
aaa
jle
test
mov
test
shll
loopne
dec
out
lret
stos
rolb
aaa
in
dec
push
call
mov
out
lcall
incb
mov
mov
add
jne
adc
inc
mov
imul
std
sti
in
cmp
mov
and
mov
mov
shr
or
push
add
test
into
test
std
in
mov
out
enter
pop
push
shll
xor
ljmp
ret
cmpsb
call
inc
rorb
shr
add
dec
sbb
xchg
js
xorb
cld
scas
and
ret
mov
xor
push
push
popf
add
sbb
or
das
sbb
push
lcall
push
push
dec
loope
add
inc
push
jle
adc
jne
ret
ret
mov
cli
and
xchg
adc
out
adc
js
aam
or
sti
test
ret
pop
outsl
and
jae
xor
push
orb
xchg
or
cmpsb
cmc
test
pop
mov
or
nop
ds
ss
mov
lds
je
inc
mov
push
cs
cmp
cmpsl
dec
mov
and
cmp
insb
arpl
test
dec
jl
or
pusha
sub
push
call
lahf
movsb
stos
in
mov
sarb
mov
subb
rcr
out
push
or
sub
cld
pop
inc
mov
cmp
arpl
xor
cld
loope
jg
stos
into
sub
movsl
cmp
mov
pop
push
adc
cmp
enter
sbb
mov
add
and
pop
mov
lock
cld
jmp
test
shrb
imul
lds
clc
data16
gs
aaa
roll
mov
lods
subb
dec
repnz
sub
or
sbb
mov
jp
pop
cmp
punpckhwd
iret
push
mov
inc
xchg
adc
fisubs
cmp
ja
addb
jne
or
fwait
int3
aad
ret
push
adc
sub
xchg
movsb
mov
add
add
fwait
test
test
test
or
mov
adc
mov
mov
mov
pop
pop
adc
pop
push
pop
mov
cwtl
pop
push
mov
dec
mov
mov
nop
fs
and
js
jmp
in
or
push
fnsave
loop
add
inc
push
mov
pop
inc
les
push
out
xchg
mov
cwtl
ds
ret
fadds
sbb
mov
pop
mov
ja
rcll
hlt
fnstcw
mov
cli
pop
dec
sbb
mov
mov
dec
decl
xor
fnsave
lcall
fsubp
into
jbe
mov
add
mov
scas
mov
mov
mov
add
cwtl
dec
mov
pop
int
popf
lock
mov
sbb
cmp
andl
adc
mov
dec
xchg
loop
xor
add
inc
loopne
add
jne
repnz
mov
or
mov
pushf
jo
rorl
out
clc
cmpsl
add
xor
fsubrl
popa
inc
roll
dec
mov
stos
sbb
imul
push
inc
lcall
mov
sub
mov
jl
fcmovb
js
add
pop
subl
mov
or
dec
inc
shrb
mov
jmp
rclb
jp
imul
test
and
mov
mov
outsb
es
add
inc
decb
pop
lea
push
test
ss
mov
inc
mov
scas
les
rcr
inc
lea
test
in
clc
aas
or
test
jbe
mov
mov
pop
inc
pop
xor
incl
loope
inc
pop
and
or
sub
inc
xor
inc
testb
mov
or
add
lcall
sub
sbb
sbb
test
inc
dec
and
sub
mov
add
mov
xor
mov
inc
lea
scas
test
xor
adc
push
adc
popf
push
push
xor
pop
inc
push
loopne
mov
add
clc
add
mov
mov
test
jbe
lds
mov
dec
lods
push
ret
push
pop
test
jle
inc
push
and
mov
jp
fs
mov
rclb
push
stos
in
sbb
xor
ret
mov
loop
or
mov
xor
fiaddl
xor
aam
pop
dec
push
into
repnz
xchg
sub
sub
ret
hlt
paddusb
ja
jle
arpl
push
xchg
out
jmp
and
push
push
hlt
std
sbb
mov
add
mov
pop
call
jb
dec
mov
cmp
lock
fcompl
sub
sbbb
add
mov
fimuls
add
sbb
cmpl
in
sbb
cmpl
xchg
or
push
orl
arpl
inc
mov
pushl
scas
outsb
push
aam
cmp
jp
push
shlb
xchg
ljmp
clc
mov
mov
xor
cmc
mov
dec
hlt
ja
in
push
enter
std
int
ss
repnz
lcall
pop
popa
mov
sbb
movsl
hlt
nop
adc
in
dec
fadds
adc
hlt
push
adc
pop
mov
ret
push
clc
testl
aaa
loope
je
movsl
call
sub
xchg
inc
adc
outsb
and
call
push
add
imull
imul
inc
sbb
dec
jp
lods
push
pop
sub
cs
je
xchg
ds
and
or
in
cld
stos
push
int
or
cld
mov
or
mov
es
lea
mov
cmp
xor
dec
adc
add
data16
mov
rolb
inc
aam
or
in
aad
add
mov
rclb
sub
repnz
or
aaa
int3
lods
mov
mov
xchg
adc
push
clc
add
jmp
add
sub
mov
push
call
test
add
loope
je
adc
outsb
call
jge
xor
and
sahf
cli
shl
xchg
std
adc
mov
or
pop
xor
addl
mov
call
inc
and
cmp
pop
jg
lock
fstps
mov
dec
push
add
mov
lock
shlb
inc
or
mov
clc
std
enter
sbb
mov
push
pop
arpl
out
sbb
push
push
jne
aaa
and
push
addr16
and
and
lods
add
adc
in
sub
mov
mov
add
sbb
or
sarl
or
scas
push
mov
pop
push
push
movsb
ret
into
push
adc
or
in
inc
dec
or
std
lock
test
inc
shl
sub
call
subb
test
inc
xorb
xlat
and
sbb
xorl
aam
lods
lock
jl
les
cmp
ss
mov
xor
inc
jmp
push
push
stos
mov
repnz
fcmovu
add
adc
jp
jmp
mov
adc
push
test
inc
cld
fxam
inc
sub
adc
xor
data16
cli
adc
and
cmpsb
mov
nop
ss
mov
sub
inc
pop
jmp
daa
loop
fists
in
ss
or
dec
xchg
xchg
lds
jmp
inc
sub
ret
rclb
xchg
jg
and
dec
lock
inc
add
cmp
sub
jge
push
dec
sub
cmp
inc
inc
rolb
push
jae
fldcw
and
or
imul
push
loope
dec
jp
push
push
fcomip
or
test
cmc
push
rolb
mov
or
jo
cli
das
xor
mov
and
divb
push
cmp
inc
mov
push
ljmp
shl
dec
mul
lea
aad
push
ffree
pop
psubb
testb
dec
faddp
adc
jb
leave
call
test
popf
mov
movsb
xchg
lea
in
dec
push
inc
sbb
ja
add
push
pusha
add
mov
mov
movsb
fidivs
clc
pop
add
inc
xor
mov
and
sbb
jl
je
pop
sub
jl
lret
push
adc
in
ljmp
inc
loopne
test
pusha
mov
lock
lock
add
mov
sub
bound
dec
mov
add
mov
pop
xor
aam
sbb
dec
lock
sbb
dec
pop
sub
addl
and
dec
xchg
push
push
ja
xchg
out
stos
add
stc
push
add
into
mov
aad
adc
and
mov
repnz
xchg
mov
adc
mov
test
lret
rol
fwait
movsb
rclb
mov
mov
xor
jne
andb
rcl
out
push
clc
loopne
add
pop
dec
or
xor
clc
add
test
push
gs
arpl
cmp
jecxz
mov
inc
adc
enter
inc
in
ret
into
int3
test
cmc
or
in
les
dec
std
xorl
xor
adcb
shrl
inc
add
xor
sti
pop
mov
pop
jp
adc
mov
ret
add
test
enter
adc
incl
jmp
adc
cmp
jbe
inc
repz
cmc
push
xor
cmpsb
test
inc
push
out
ds
adc
lahf
out
mov
pop
imulb
shl
icebp
ljmp
mov
ds
pop
jbe
add
mov
insl
inc
add
push
ds
in
gs
add
pop
lods
mov
pop
cs
std
inc
cmp
iret
mov
call
ds
push
lret
xor
cmpb
mov
mov
negb
in
roll
mov
dec
push
call
inc
adc
xchg
dec
les
fisubrs
mov
add
les
adcl
mov
arpl
jl
lods
add
call
aad
dec
ret
loop
adc
add
xchg
sbb
push
loop
scas
test
aam
mov
adc
mov
xchg
lret
sbb
mov
lock
lock
push
inc
xchg
jmp
adc
mov
pop
lock
pop
jl
pop
mov
sbb
add
adc
jne
ljmp
ret
ljmp
pop
mov
adc
xor
pop
orl
xchg
jbe
mov
mov
decb
pop
decl
rol
xlat
cmp
add
jecxz
cli
jecxz
inc
jle
jnp
cmp
dec
dec
jle
lea
push
loop
cmp
sub
movsb
cwtl
lock
daa
xchg
jbe
outsl
sub
xor
pop
mov
ret
call
xchg
pop
dec
add
dec
cmp
xchg
adc
sbb
fmuls
add
lahf
pop
push
inc
rcrl
jne
adc
mov
cmp
dec
add
pop
jmp
push
cs
iret
cmpsl
sub
imul
pop
mov
mov
test
fwait
mov
push
add
fldl
add
rcrw
inc
jge
pop
adc
pop
arpl
scas
xor
sarb
xor
ss
pop
sbb
lcall
shlb
and
sbb
or
adc
out
outsb
ret
call
push
call
pop
mov
popf
mov
outsb
nop
mov
and
addb
sbb
cli
add
add
aas
push
fbstp
adc
out
mov
or
cmp
push
test
and
jne
stos
ret
icebp
dec
pusha
add
cwtl
mov
aaa
push
inc
je
test
or
xchg
adcb
in
push
and
jbe
add
dec
loopne
push
pusha
fdivl
sub
adc
fs
cmp
cld
adc
lea
pop
add
add
enter
clc
jg
adc
std
ror
loope
xorb
test
mov
mov
cli
add
es
cld
jge
inc
fs
ret
dec
lods
and
nop
adc
nop
or
outsb
add
cld
mov
push
imul
cld
push
push
mov
es
cmp
jecxz
icebp
pushw
add
inc
nop
mov
sub
mov
push
adc
mov
call
mov
push
mov
mov
push
mov
add
lcall
jne
inc
movsb
hlt
sub
mov
icebp
push
inc
push
adc
loop
push
or
aaa
paddw
lods
ficoms
outsb
adcb
mov
or
jbe
std
div
adc
faddl
les
push
xor
mov
fmulp
lds
idivl
push
xor
mov
pop
or
push
lds
call
das
xchg
leave
mov
sub
dec
pop
cmp
xchg
dec
xchg
rol
shl
pop
fildll
push
mov
adc
inc
shlb
sub
imul
dec
jae
test
xchg
aam
or
paddd
frstor
and
std
test
inc
push
adc
sub
rorl
mov
lahf
jle
jl
jecxz
movl
jecxz
inc
add
and
xchg
and
cld
push
sarl
xorb
mov
add
sbb
cmpsb
stc
inc
mov
cmp
into
pop
int3
mov
scas
arpl
xor
pop
fmulp
adc
jmp
das
mov
sbbl
xor
inc
or
mov
arpl
add
pusha
mov
sub
ds
xchg
cmpsb
pop
stos
gs
sub
int3
popa
leave
pop
push
sub
cmp
push
decb
and
jo
add
pop
loope
dec
push
mov
jo
sbb
mov
push
sub
cmpsb
dec
dec
adc
lock
add
adc
add
push
loope
test
sbb
in
pop
or
push
mov
pop
dec
or
push
test
scas
cmp
clc
adc
add
xor
lea
testl
cs
jb
push
jb
and
pop
inc
or
fs
xor
test
and
in
dec
push
inc
ljmp
adc
inc
add
push
outsl
push
push
mov
inc
adc
pop
testb
sbb
lods
add
repnz
outsb
lds
add
aam
scas
enter
push
lods
mov
mov
inc
mov
and
das
pop
mov
pop
sbb
dec
stos
inc
cmp
ret
pop
mov
adc
mov
aas
mov
add
leave
aam
movsb
mov
outsb
cmp
adc
mov
int3
lret
es
dec
ljmp
or
jle
loopne
push
scas
mov
xor
orl
rol
loope
lock
in
or
orb
inc
cmp
push
loopne
push
adc
imul
dec
jns
pop
mov
add
ret
jmp
repz
dec
cmp
loopne
add
ds
xor
mov
adc
or
in
ljmp
add
stos
int
add
mov
insb
aam
mov
int
add
repz
out
shlb
cwtl
fcomps
test
push
lds
adc
andb
push
dec
hlt
or
in
cmp
adc
dec
xor
and
clc
test
mov
xor
addb
mov
adc
jmp
add
jle
lret
sbb
dec
push
cmp
ss
jne
clc
xchg
xchg
push
xchg
jmp
rolb
pop
scas
mov
or
push
xchg
fidivl
in
ljmp
jl
test
orb
scas
js
les
or
repnz
mov
mov
movl
aas
or
mov
dec
xor
cld
scas
mov
push
sub
push
xchg
mov
mov
cli
jg
rcll
arpl
xorl
jb
add
pusha
cmp
cli
outsl
scas
mov
pop
xchg
mov
add
jne
push
sahf
aas
add
inc
loopne
pop
in
frstor
dec
shl
les
push
je
ja
ficoms
fisubl
sar
sbb
adc
or
mov
cmp
out
jle
std
inc
cmp
sbb
arpl
or
add
mov
sub
and
sub
mul
or
mov
lock
inc
adc
pop
int3
jmp
xor
mov
shlb
incl
push
scas
xor
mov
loope
push
mov
pop
aaa
mov
jno
test
lcall
xor
and
fdivl
cltd
lcall
lock
jb
push
cmp
call
xchg
sub
add
mov
adcb
flds
mov
daa
out
add
stos
add
in
roll
outsb
mov
scas
ret
inc
add
add
enter
pmulhw
iret
and
sub
add
jb
sbb
add
xorl
data16
nop
aam
cmp
outsl
insb
push
inc
lock
cmp
push
pavgb
pop
and
adc
std
ss
test
icebp
pop
xor
sbb
push
enter
inc
cld
xchg
loopne,pt
roll
call
lea
pop
push
and
cmp
ret
rcrb
fs
imull
loopne
imul
call
cld
repz
adcl
mov
or
mov
push
and
push
jmp
movsb
or
adc
cli
lods
aas
test
jae
lock
or
jge
jecxz
pushl
imul
adc
and
repnz
cld
insb
add
mov
imul
dec
add
sbb
inc
add
test
sub
adc
and
idiv
add
or
in
jae
fnsave
and
or
data16
cmpl
jle
mov
dec
aam
push
ffreep
dec
and
xor
cs
data16
sbb
repnz
add
cmp
ja
call
ficompl
jno
add
mov
insl
ret
inc
push
mov
mov
jecxz
mov
add
movb
scas
push
cmp
scas
mov
call
adc
test
push
mov
pop
movsl
pop
push
out
pop
nop
add
pop
pop
sub
inc
mov
add
push
clc
pop
or
repnz
add
sbb
add
negb
fs
mov
lds
cwtl
aam
add
jbe
dec
int3
cmp
jo
and
movsb
out
loop
subb
or
xlat
int3
aaa
mov
or
dec
dec
cld
jmp
repnz
std
or
sub
or
push
fldcw
and
mov
jb
adc
sbb
push
test
cmp
pop
mov
adc
push
int3
pop
sbb
push
lret
stos
data16
or
mov
lock
push
call
adc
int3
hlt
mov
in
inc
pop
xchg
js
pop
es
xor
push
fdivrp
mov
cmp
test
in
int3
pop
push
inc
mov
rcll
inc
dec
fwait
xlat
data16
cld
mov
cmp
and
fs
movsl
gs
pop
add
ret
test
and
scas
out
jmp
sbb
int3
adc
lea
dec
sbb
push
shl
cs
icebp
jg
jmp
mov
jl
add
je
dec
in
call
jg
pop
loopne
in
incb
daa
push
xor
hlt
incl
call
cmpsb
mov
push
divb
lea
and
jne
jo
xchg
or
stos
add
fs
jl
out
push
mov
sti
pop
outsl
incl
push
and
jae
je
xchg
push
sbb
popa
fmull
push
insb
mov
enter
sarb
inc
test
mov
push
into
dec
loope
icebp
int3
std
mov
insl
sbb
sbb
pop
push
inc
add
dec
call
mov
aaa
jno
decb
adc
xchg
aas
fcomps
xchg
mov
dec
jl
cs
pop
mov
fmul
push
jl
push
push
or
pusha
test
push
xchg
cs
lret
mov
dec
dec
test
and
sub
inc
or
or
or
sbb
mov
xchg
add
xor
jp
xchg
aam
subb
rolb
mov
in
adc
out
lock
sar
and
adc
mov
je
aas
push
lock
mov
mov
mov
mov
fildl
sub
testb
jmp
cltd
fsubs
bound
mov
mov
imul
add
adc
ljmp
icebp
je
ds
clc
xchg
jne
mov
push
aam
cld
inc
mov
pusha
insb
gs
loope
sti
std
or
lret
gs
mov
xor
rorb
ss
add
test
gs
out
jne
aam
push
fidivs
inc
pop
clc
xchg
push
mov
or
ss
jge
adc
mov
inc
sarl
dec
sbb
push
shl
loopne
or
aam
cld
cmpsl
xor
push
adc
les
pusha
call
xor
testl
mov
orb
add
cmp
inc
adc
sub
xchg
lea
dec
add
lret
and
xor
jne
clc
fldcw
loope
xor
fmull
push
stos
ficomps
or
jmp
sbb
lock
idiv
lods
jbe
inc
jmp
or
nop
movsl
fwait
mov
cmp
clc
testb
adc
mov
int3
sbb
or
dec
aaa
adcb
xor
mov
je
mov
data16
mov
ja
inc
cmp
adc
outsb
mov
std
es
xchg
clc
fs
in
mov
call
loop
cmp
sbbl
lret
adc
adc
ret
sub
and
adc
xor
bound
jns
icebp
and
jle
mov
cmp
dec
lock
fldenv
push
insb
pop
jb
mov
adc
je
inc
or
mov
cli
outsb
mov
loop
adc
push
inc
mov
cmp
add
add
cmp
mov
jmp
mov
add
xchg
jne
in
loop
cmp
mov
sub
or
mov
push
arpl
lock
fistps
jae
lea
pop
scas
adc
shlb
adc
in
ss
int3
xor
cwtl
fcoms
mov
mov
mov
mov
jo
pop
inc
pop
gs
pop
add
inc
daa
add
es
or
cmp
lea
push
jae
sub
mov
lea
cmp
gs
lods
dec
insb
push
fwait
vmovups
mov
push
pop
out
cld
call
mov
pusha
mov
test
fiadds
mov
jmp
sbb
mov
jecxz
pop
clc
mov
js
loope
lret
int3
sbb
cmpl
hlt
int3
int
xor
add
aad
cmp
lea
and
out
and
in
int
push
or
insl
adc
xor
jb
jb
ret
dec
ret
popa
cmp
lcall
inc
pop
mov
dec
loopne
bound
sub
in
or
test
mov
jns
nop
push
pop
add
test
int3
pop
add
jecxz
pop
xchg
mov
pop
or
and
and
int3
test
nop
mov
jnp
push
lds
mov
cld
adc
stc
jb
movsl
in
test
sub
pusha
in
in
push
pop
fdivs
add
jbe
cmp
hlt
add
ret
mov
pusha
pop
lcall
js
daa
jno
push
inc
in
fmull
andl
cs
mov
test
mov
inc
dec
push
or
jl
clc
pop
imul
jmp
add
je
push
incb
pusha
mov
push
popf
adc
xor
push
adc
mov
out
add
ja
ds
mov
dec
push
fmull
loope
adc
scas
push
mov
and
mov
mov
roll
testb
mov
fwait
adc
inc
das
int
mov
lret
and
in
jp
push
bound
add
add
adc
shl
adc
insb
and
cmc
mov
xchg
push
call
rcrb
rcrb
mov
and
add
adc
sub
inc
sbbl
jg
pop
mov
loope
out
scas
notb
out
je
and
adc
cmp
int3
dec
je
cmc
add
in
decb
jmp
rorb
lock
push
aam
dec
icebp
cmpsl
push
push
fadd
sbb
test
in
add
jb
sbb
push
add
pop
call
or
aaa
shlb
data16
sti
push
js
add
gs
add
mov
push
and
mov
add
clc
lea
xor
inc
xor
pop
ret
incl
mov
hlt
insw
cs
outsb
add
jae
inc
push
lock
gs
sbb
mov
ret
cmp
and
call
dec
roll
fadds
lret
mov
sbb
adc
test
xchg
dec
xor
mov
push
dec
fldt
hlt
cmp
hlt
sbb
adc
rcl
cli
and
xor
push
cwtl
push
lock
sar
cmp
mov
clc
ret
mov
test
pop
pop
addb
inc
mov
add
add
and
ret
inc
dec
push
xchg
addb
out
nop
addb
or
sub
mov
sbb
push
hlt
popa
xor
mov
clc
dec
flds
mov
push
mov
mov
sub
lahf
dec
xchg
sbb
hlt
jle
inc
imul
aam
loopne
mov
inc
cmp
mov
xor
ror
inc
paddw
imul
sbb
jmp
dec
gs
mul
or
rolb
imul
in
jle
ss
add
xchg
push
mov
add
mov
pop
jbe
aas
mov
stos
jge
mov
mov
in
js
jbe
mov
call
add
aas
sbb
mov
xchg
add
inc
adc
jo
mov
scas
dec
in
gs
xor
inc
jns
vcvttsd2si
ret
int3
ds
adc
jmp
jmp
or
dec
sbb
or
add
mov
add
das
xchg
test
les
add
push
jmp
je
xchg
push
outsb
cmpsb
jno
fmuls
push
call
adc
sub
dec
push
push
add
sbb
and
mov
mov
mov
xchg
cltd
lret
push
and
adc
sbbb
stos
mov
add
dec
out
pushf
sub
movsl
test
lock
xchg
cld
roll
or
lock
pop
mov
inc
jmp
jg
loopne
stos
xchg
or
mov
in
adc
or
stos
cs
push
fisubl
push
dec
xchg
inc
sbb
xlat
push
ljmp
add
nop
repnz
sar
cld
popf
stc
ljmp
mov
dec
lock
aam
mov
push
loope
pop
call
lea
dec
enterw
pop
add
adc
and
pop
pop
adcl
fdivrs
cs
sbb
or
dec
cmpsl
sbb
orl
add
std
mov
xchg
cmp
mov
jno
mov
sub
outsb
dec
add
sub
loopne
cltd
dec
mov
mov
mov
das
stos
push
inc
bound
ss
pop
sub
or
dec
cmp
dec
adc
dec
orb
jl
pop
rorb
jle
push
adc
movsb
and
popa
sarl
pusha
push
push
push
out
fdivrl
rolb
sub
and
cmpl
and
mov
jmp
ret
fdivl
ret
sub
cmpsb
fwait
lock
inc
inc
sbb
push
les
leave
les
inc
xor
adc
and
incb
and
push
test
sbb
cld
das
adc
push
sar
data16
sbb
mov
adc
add
mov
sbb
mov
cmp
or
jbe
mov
call
pop
cmp
rcrl
ljmp
ljmp
fcmovbe
push
inc
adc
popf
mov
mov
xchg
cmovge
addb
lcall
cwtl
scas
and
call
and
and
lea
jmp
mov
add
test
adc
and
xchg
aad
jge
adcl
lock
mov
inc
add
lea
das
jbe
jecxz
rolb
push
fdivrl
sub
pop
into
xchg
or
aam
test
ds
sbbb
in
xchg
inc
movsl
mov
repnz
sub
xor
test
add
add
adc
fsubrl
and
dec
loop
ret
push
call
aas
mov
xor
loop
pop
lock
lods
movsb
ljmp
or
rcr
clc
test
push
cld
or
addb
push
pop
mov
mov
test
call
jmp
roll
int3
jne
das
ljmp
push
lock
dec
pop
inc
and
push
pop
movsb
fisubl
xlat
aam
or
ret
orb
sbb
inc
movsl
loopne
movsb
push
pop
add
push
icebp
addr16
add
test
inc
xlat
adc
mov
dec
push
lock
inc
pop
push
push
push
add
xchg
fimuls
add
inc
mov
and
ret
les
pop
sbb
incl
cmpb
adc
decb
cmpb
fildl
jl
cmpxchg
leave
mov
in
ret
and
inc
sbb
mov
pop
sub
xor
lock
jne
jae
sbb
cmp
mov
and
cld
add
mov
cmc
in
sbb
push
mov
testl
and
mov
mov
and
ret
aaa
mov
pop
mov
dec
add
push
fldcw
sub
add
nop
and
inc
xchg
imul
jle
inc
mov
dec
popf
jmp
sbb
mulb
pop
stos
and
mov
pop
mov
ret
xchg
mov
dec
icebp
push
mov
and
inc
add
push
inc
test
nop
dec
sbb
lods
sbb
sub
xor
add
mov
dec
jbe
jl
rorb
bound
int
push
or
dec
outsl
ss
lahf
add
int3
punpckhwd
jo
add
out
or
xor
pop
pop
cmp
push
adc
mov
push
andb
push
fsubrl
jp
lahf
mov
subb
and
push
fldt
aam
loope
unpckhps
gs
sbb
outsb
arpl
mov
xor
sbb
or
movsl
add
out
icebp
fstps
mov
cmp
sub
outsl
test
cmp
fs
dec
push
dec
adc
loopne
stos
clc
add
push
or
add
adc
rcrb
inc
jmp
decl
out
fiaddl
adc
mov
pusha
inc
push
clc
add
fcoml
outsb
sub
xor
adc
push
out
and
fsub
push
sar
jge
and
jge
stc
sub
addr16
filds
out
mov
add
add
int
shll
or
xor
add
test
pop
ljmp
jne
popf
inc
mov
inc
xor
cmp
fimull
test
jmp
jb
sbb
inc
pop
fs
and
loopne
jo
mov
mov
cmp
cmp
push
jge
loop
pusha
and
sti
cltd
or
scas
adc
add
imul
push
xor
xorb
add
inc
push
jmp
mov
dec
push
andb
adc
insb
adc
in
jb
fsubr
jbe
jne
in
loop
jle
lods
pushf
mov
mov
add
popl
jo
pusha
mov
jbe
push
lea
outsb
test
add
popf
out
xchg
les
dec
insb
leave
jle
lea
add
je
or
popa
xchg
sub
ret
mov
in
sub
push
xchg
xor
inc
rolb
aaa
loopne
pusha
scas
xchg
push
lea
subl
jmp
xor
movsb
clc
add
cmp
xor
into
std
pop
pushf
pop
int3
push
lock
cli
and
mov
add
and
in
add
fcoms
add
pop
iret
fdivrp
mov
add
pop
sbb
xchg
sbb
ret
xchg
cmp
jge
or
mov
repz
push
push
iret
sub
cmp
enter
neg
fiadds
push
fisttps
add
fs
call
sbb
inc
add
dec
xor
add
sbbb
and
popa
insb
ss
pop
aad
les
sbb
add
movsl
int3
lcall
push
cld
inc
test
sbb
dec
lock
xor
ja
dec
loope
inc
push
mov
mov
add
data16
cli
lret
pusha
ret
sbb
sub
sti
jp
mov
mov
leave
push
mov
mov
mov
adcl
test
scas
nop
idivb
adc
incb
add
mov
decl
add
add
cmp
sub
fisubrs
add
or
fisttps
fistps
dec
mov
inc
cmpsl
imul
sbb
flds
sub
xchg
ret
fistpll
cmp
push
inc
cmpsl
inc
outsb
push
or
xchg
push
popfw
sbb
or
sbb
ret
xor
nop
add
std
add
int3
in
shl
mov
mov
hlt
mov
ljmp
test
lods
fadds
push
dec
lcall
movl
inc
rol
pop
loop
rcrb
rolb
loopne
xchg
jp
ja
outsb
fdivrl
outsb
loope
adc
adc
or
dec
adc
inc
and
shrb
sbb
adc
sub
cmp
adcl
ret
movsl
andb
inc
mov
test
push
ret
outsl
push
push
or
nop
imul
lock
xchg
push
dec
ss
push
dec
add
test
fcompl
xchg
loope
dec
outsb
lcall
inc
pop
fists
mov
jb
xor
lcall
loopne
hlt
mov
jbe
sar
dec
or
and
dec
or
rorl
sti
out
lock
jmp
and
xchg
leave
and
cli
push
rcrb
add
mov
xchg
in
add
clc
xchg
ret
add
mov
cmp
cmp
aam
iret
pop
adc
push
and
push
or
test
inc
imul
orl
jb
mov
xor
dec
loop
jecxz
pop
sbb
pop
fisubrs
add
movl
jp
xchg
mov
std
fwait
sub
add
push
xchg
orl
outsl
add
popa
add
pop
or
dec
inc
xchg
incb
dec
fisttps
sbb
cs
push
xchg
lods
mov
mov
cld
cmp
fdivrp
jecxz
sarb
jmp
cs
dec
push
sbb
sub
dec
lahf
add
jb
push
aaa
inc
icebp
leave
mov
xor
mov
or
test
fcmovu
jo,pt
mov
lcall
xchg
icebp
sub
ds
pop
pusha
jne
sub
xor
jmp
inc
or
mov
negl
xorb
pop
inc
nop
xlat
inc
and
gs
mov
sub
push
scas
je
and
sbb
push
fstpl
sub
cmp
andb
fnstcw
jno
mov
sbb
popf
adc
xor
les
push
lcall
cmp
sbb
imul
incb
xorl
mov
add
insl
sub
or
movsl
in
inc
das
push
int3
rclb
mov
fisubrl
mov
jmp
stc
mov
sub
arpl
or
push
bound
mov
stos
xor
mov
daa
add
mov
lods
push
and
add
jne
inc
push
js
fildl
lcall
fs
outsl
push
mov
repnz
adc
cmp
aas
sbb
test
fisubrl
pop
pop
jecxz
test
test
je
or
jne
push
cmpsb
enter
xchg
ds
ss
inc
int3
fildll
add
sbb
testb
pop
stos
wbinvd
or
inc
sub
aas
pop
int
push
add
adc
and
xchg
xchg
out
movsbl
lea
ss
popa
fwait
sarb
jo
xchg
mov
fs
scas
jle
aam
and
push
fdivs
push
xor
inc
adc
cmp
add
jne
xchg
lock
cmp
inc
pop
sarl
add
repz
fnsave
lret
add
hlt
or
int3
dec
dec
or
je
mov
pop
mov
pop
and
bound
std
ja
and
leave
inc
aaa
add
lret
rorl
enter
test
xchg
pop
jmp
add
add
mov
pop
jmp
scas
test
loop
lock
aas
in
insb
lods
mov
int3
jl
decl
int3
into
jne
ljmp
add
inc
nop
aas
push
les
mov
ret
sbb
jb
inc
cld
inc
inc
add
cmp
rolb
adc
cltd
mov
ja
add
sbb
xor
imul
dec
mov
mov
cltd
inc
sar
popa
mov
shr
push
xor
inc
inc
adc
enter
arpl
fildll
rcll
xchg
xor
lods
loopne
inc
adc
mov
push
ljmp
pop
jne
call
push
add
cwtl
fs
inc
inc
add
add
ja
or
mov
cltd
sbb
ficoml
cmp
inc
inc
test
xchg
cld
fdivp
xchg
incl
adc
cmp
fmul
inc
dec
adc
sbb
int3
fsubl
xor
xor
int
dec
push
and
push
ret
mov
ss
repnz
sub
mov
cs
and
mov
push
or
inc
mov
ret
mov
lcall
test
cmp
enter
mov
xor
test
inc
lock
jo
mov
bound
sti
jae
add
inc
outsl
xlat
call
fildl
mov
jo
xor
jge
push
sbb
negb
test
repnz
pop
inc
and
incb
pop
pusha
mov
inc
mov
mov
inc
sub
mov
popf
clc
adc
mov
dec
add
cld
mov
sbb
adc
sub
add
cmp
aaa
addl
sub
pop
andb
lods
or
pop
stc
jo
mov
cmp
decb
enter
gs
push
lea
push
sbb
dec
daa
test
mov
inc
ficoms
adc
mov
sub
cs
sub
xor
nop
stos
mov
mov
pop
xchg
cld
cbtw
addb
or
xchg
jo
out
outsb
inc
ja
fstp
inc
in
push
pop
push
pop
add
xor
imul
pop
addb
cmp
cmpsl
jo
leave
push
or
inc
imul
fdivs
push
xchg
shl
and
movsb
sarb
dec
jp
mov
mov
sbb
lret
in
jo
cmp
mov
addb
jecxz
icebp
dec
cmpsb
bound
rorl
sub
shlb
xor
sbb
push
add
push
jb
aaa
or
mov
mov
mov
rolb
inc
int3
dec
test
or
sbb
pop
mov
out
sahf
ret
sarb
shlb
shlb
mov
lea
mov
push
mov
cmpsl
pop
lret
push
or
les
fidivs
addr16
in
mov
js
shlb
sbb
jmp
push
lret
push
or
jb
jg
mov
sbb
mov
cmp
mov
cld
sub
and
fwait
mov
jb
fwait
rolb
iret
add
into
stos
loop
add
in
or
xchg
ss
jmp
pop
fnsave
leave
cld
out
add
push
fiaddl
setle
xor
call
mov
inc
rorl
push
clc
ret
sbb
add
and
mov
fsubl
in
ret
rorl
andb
jl
inc
mov
test
idiv
push
cli
ja
jo
cmp
or
psraw
sub
pop
jg
mov
jb
lcall
inc
xor
xchg
outsb
loop
jbe
divl
mov
les
fsqrt
add
pop
mov
js
es
int3
mov
movsb
ret
xchg
push
nop
mov
dec
test
jge
sbbl
push
jne
pop
mov
lds
out
push
fdivrs
inc
mov
test
pop
jmp
je
mov
xchg
loope
inc
add
or
xlat
add
sub
pop
mov
mov
std
gs
sub
lea
aad
sub
pop
in
add
js
fiaddl
mov
test
sub
add
adc
adc
push
adc
std
imul
push
or
add
adc
cmp
loope
aad
xor
lea
or
sbb
pop
mov
aas
mov
push
scas
cmpsb
cmpsl
daa
jmp
and
popa
jo
ret
add
dec
testb
inc
mov
mov
push
sar
xchg
imul
call
je
sub
add
cltd
pop
insl
inc
jmp
inc
imul
mov
mov
decl
xchg
mov
jg
daa
inc
pop
cld
cmp
push
inc
aam
dec
das
sbb
push
xor
and
je
movsb
push
mov
lcall
aam
dec
sar
add
cld
xchg
insb
rol
lahf
cmp
mov
js
sbb
and
jo
push
lea
xor
sub
punpckhbw
test
mov
mov
nop
cmp
iret
adc
adc
add
std
scas
add
mov
xchg
sub
jmp
or
lock
sahf
sub
pop
bound
mov
dec
adc
sar
sbbl
ljmpw
add
rolb
push
pop
test
dec
fs
movsb
cmp
inc
cmpsb
insb
mov
movl
push
jo
rol
or
pusha
add
jae
rorb
xchg
or
pop
jb
mov
xchg
mov
mov
gs
lea
dec
adc
lahf
push
or
add
or
lret
rorb
std
sub
je,pn
pop
es
jno
or
dec
lahf
add
lcall
mov
jecxz
les
cs
push
ret
cs
mov
inc
pop
inc
arpl
mov
jge
test
cmp
jmp
fs
pop
in
test
dec
cld
scas
push
aas
mov
dec
cmp
test
mov
mov
mov
lahf
xchg
rolb
jns
mov
xchg
iret
xchg
movb
loop
add
add
rclb
outsb
sbb
xchg
sub
fs
pop
leave
jl
push
dec
pop
sbb
pop
xchg
cmpsb
arpl
xor
add
dec
pop
call
in
cmp
shlb
mov
cwtl
loopne
rorb
dec
nop
push
pop
sti
ret
cmpb
dec
sbb
lret
mov
fcomps
fcmovne
mov
sub
dec
cld
xchg
add
lea
cld
add
add
xorb
cmp
int3
inc
push
jmp
gs
push
icebp
testl
cwtl
mov
fwait
or
push
mov
test
mov
call
mov
adc
js
aaa
add
int3
push
outsb
setl
xor
xor
movsb
mov
dec
jg
xor
stos
sub
or
loopne
inc
and
push
xor
push
sub
dec
and
mov
inc
roll
and
ljmp
mov
loop
jge
test
push
pop
sub
fwait
dec
inc
inc
call
lea
and
gs
push
fiaddl
or
mov
test
mov
cltd
cmp
push
je
add
xchg
mov
ds
push
adc
and
mov
mov
incl
pop
mov
andb
or
or
add
fsub
cmp
decb
pop
and
ss
pop
ret
movsb
add
inc
ret
xchg
dec
xor
aas
push
lock
add
pcmpeqb
insb
pop
int
or
int3
sub
inc
daa
loopne
pop
not
inc
outsl
pop
addl
test
cmpsl
or
pusha
inc
mov
push
jp
push
or
sbb
dec
aam
loopne
xor
add
loopne
test
jecxz
and
or
sub
pop
les
inc
aas
es
cli
andl
mov
outsb
nop
jle
inc
mov
int3
clc
cmp
bound
mov
movsb
mov
mov
mov
clc
adc
dec
sarb
xchg
inc
adc
cmpsl
rclb
or
mov
int3
int3
mov
add
jb
pop
inc
and
inc
cmp
cld
or
dec
gs
xchg
aaa
inc
lock
adc
xor
sbb
push
fs
or
negl
or
sbb
and
enter
dec
mov
test
subl
pop
jge
or
mov
lcall
push
mov
ret
or
fs
inc
pop
sub
dec
test
push
sub
xchg
decb
sbb
jb
fmuls
xor
inc
or
push
or
je
xorb
test
es
je
movl
addl
popa
mov
repnz
sub
pop
or
adc
cld
inc
push
stos
xchg
or
data16
cli
push
adc
cli
jno
dec
fsubrs
fildl
loop
mov
int
in
lret
in
test
or
in
rcl
loopne
loopne
sarb
cwtl
repnz
or
andb
xchg
adc
sub
stos
dec
call
stos
rcrl
dec
inc
pushf
add
adc
ret
jle
repz
test
shrl
lret
test
push
pop
aaa
xor
mov
push
lock
push
push
add
insb
unpckhps
jmp
outsl
dec
pop
jl
jge
xchg
add
adc
repz
inc
adc
loop
or
and
add
loop
mov
mov
adc
push
lock
les
add
mov
rolb
jne
mov
inc
mov
jg
mull
decl
insl
negl
loopne
inc
inc
shl
rclb
pop
or
cli
ljmp
mov
push
pop
lds
mov
and
pop
xor
mov
addl
incl
mov
mov
lock
call
ja
xlat
inc
mov
adc
ret
inc
fadds
jg
push
adc
test
ret
or
cmpsb
add
inc
loope
sub
mov
rcrb
fstpt
pop
xor
enter
push
xor
dec
adc
add
sahf
inc
or
pop
and
cmpb
xor
gs
mov
jg
fiaddl
fisubrl
push
inc
cmp
cmpl
in
mov
ja
inc
push
mov
fadds
add
adcl
in
jbe
adc
jl
scas
lock
and
les
orl
les
and
loop
adc
rorb
jmp
mov
pop
mov
rclb
cmp
fs
push
mov
mov
adc
add
push
int
sub
sub
lea
in
pop
sbb
sub
stos
call
mov
mov
fsubs
jbe
mov
xchg
imul
push
push
push
cmp
lods
lds
xchg
mov
adc
inc
pop
adc
add
or
dec
pop
xchg
nop
insb
xor
arpl
repz
add
add
ljmp
or
inc
add
mov
or
mov
mov
and
inc
loope
mov
call
mov
test
push
fs
cmp
push
push
jne
pop
clc
or
xchg
adc
lods
push
adc
es
sbb
loopne
lcall
hlt
adc
jg
call
and
stos
mov
add
cmp
call
add
mov
cli
sub
adc
sub
mov
add
sub
mov
jo
loopne
xchg
cmpl
ljmp
test
fdivl
inc
xor
shr
or
cld
fcmovnu
inc
js
inc
and
std
sub
outsl
ljmp
mov
mov
push
aad
xchg
int3
fisubs
push
subl
test
jmp
je
nop
push
dec
pop
loopne
mov
adc
fwait
les
push
dec
pop
adc
push
cmp
test
and
dec
popa
jb
sbb
inc
jl
xchg
pop
sahf
aaa
xor
mov
test
loopne
lock
je
sbb
movsl
cld
add
or
mov
adc
and
ret
loopne
or
je
and
fisubrl
inc
or
fisubl
add
lahf
out
mov
frstor
dec
jp
jecxz
sbb
push
gs
int3
divl
hlt
out
es
push
push
sarb
inc
in
add
inc
and
adc
push
pop
dec
adc
add
stos
dec
mov
repnz
sub
arpl
cld
mov
push
jns
rclb
push
mov
into
mov
pop
mov
jl
add
mov
sub
pop
mov
push
fidivs
test
xor
ljmp
adc
in
cmp
mov
call
or
int3
div
dec
loope
insb
js
fmulp
mov
cmpsl
cmpsb
push
or
xor
adc
jle
or
cmp
ljmp
mov
outsb
push
inc
adc
sbb
add
andb
repz
sbb
js
je
rol
int3
arpl
pop
dec
cmp
shlb
mov
or
rolb
sar
mov
mov
cmp
dec
rorb
pmuludq
mov
stos
push
psubusb
push
loopne
fs
enter
loope
inc
mov
popf
mov
mov
shlb
jle
int3
cs
lcall
cld
and
shrb
mov
xchg
add
int
clc
adc
or
jle
adc
push
and
inc
or
orl
and
aaa
cmp
xor
or
and
adc
sahf
adc
adc
lcall
and
enter
outsl
cmc
cmp
cltd
inc
jne
clc
pop
jmp
data16
filds
dec
pop
rcrb
add
roll
jmp
add
les
xchg
push
mov
jae
inc
or
test
testb
cmp
or
mov
mov
sbb
pop
mov
and
inc
sub
mov
int3
sub
xchg
js
adc
aam
flds
lcall
int3
push
rcrb
loopne
sub
test
decl
cmp
mov
rolb
add
flds
pop
cld
je
jnp
ja
or
push
mov
mov
aam
cmp
faddl
call
mov
test
mov
cmpsl
mov
lret
dec
inc
dec
pop
stos
cmp
dec
push
push
std
data16
inc
cmp
mov
push
cmp
test
push
sbb
dec
je
loopne
add
cltd
sbb
ja
xchg
cmp
push
and
ret
das
inc
pushf
imul
les
rclb
into
mov
test
jmp
stos
add
icebp
push
loopne
pop
or
mov
inc
inc
add
and
lea
les
pop
lret
xchg
add
sub
push
imul
fdivs
or
mov
sub
mov
sahf
xchg
lcall
xchg
or
cmp
mov
or
add
jo
xor
or
fsubrp
and
adc
pop
movsl
and
mov
xchg
gs
and
test
pop
inc
js
push
shl
adc
movsl
sub
ljmp
pop
sub
lock
cld
inc
pop
incl
adc
pop
repnz
cmp
mov
push
es
jge
add
add
popa
aaa
adc
pop
adc
cs
stc
rorb
push
push
push
jbe
nop
push
add
lea
addr16
mov
push
push
test
mov
adc
add
aam
adc
add
mov
add
outsb
js
cmp
dec
adc
and
test
dec
aam
or
cmp
jmp
popa
adc
dec
sbb
insb
es
push
xorb
lahf
lcall
jne
fadds
icebp
inc
and
mov
xor
xor
adcl
loopne
aas
mov
fadd
mov
outsb
add
icebp
adc
mov
roll
push
jmp
add
push
inc
inc
push
push
mov
mov
cwtl
call
mov
mov
orl
xor
jo
push
mov
call
dec
sbb
push
xor
push
add
int3
lea
sti
mov
dec
add
add
ljmp
jns
incl
insb
add
push
test
ss
fbld
insb
sarb
xchg
adc
add
call
test
js
movups
outsl
mov
out
hlt
cmpsl
aam
xor
clc
icebp
clc
dec
inc
jg
adc
lock
xorb
xor
and
cmc
sbbl
cld
push
sub
call
adc
push
xorb
sahf
jle
mov
inc
lea
adc
cmc
cmp
nop
dec
les
add
iret
push
add
arpl
movsb
or
in
out
mov
sar
inc
inc
jne
mov
cmpsb
push
call
mov
cmc
roll
xchg
xchg
adc
lcall
inc
sub
cmpsb
xchg
lahf
test
mov
icebp
popf
mov
add
push
lea
add
mov
aad
dec
cld
or
loopne
dec
push
sub
dec
jbe
sbb
dec
in
cmp
lcallw
loope
inc
fldt
adc
cmp
ja
adc
incl
data16
add
xchg
jge
sub
icebp
pop
cmp
pop
and
adc
mov
sbbl
in
xorl
jns
cs
gs
add
aas
enter
adc
loop
push
test
ret
pop
cli
fsubl
add
inc
inc
rolb
insb
pop
loop
ljmp
xchg
ret
mov
sbbb
je
lret
lock
xor
pusha
mov
mov
dec
sbb
sub
in
add
add
sbbb
xorb
dec
sbb
arpl
punpcklbw
jo
and
addl
mov
add
dec
dec
dec
push
adc
dec
adc
push
fnsave
adc
les
jmp
and
cmpsb
pop
enter
dec
mov
int3
jb
jmp
push
dec
neg
sbb
adc
jl
in
popa
jne
xor
sub
sarb
lret
mov
in
movsb
enter
mov
xor
dec
call
das
or
jle
popf
xor
sbb
outsl
mov
addb
add
mov
jge
test
cmpb
gs
sahf
or
jp
push
stos
cwtl
rcl
jne
dec
xlat
and
jcxz,pt
cmp
in
loope
pushf
adc
add
js
push
xchg
add
or
mov
dec
xor
adc
lods
dec
rorl
pusha
jecxz
js
xchg
sub
inc
jmpw
xchg
lea
and
and
or
popf
fs
push
inc
call
add
incb
inc
cld
sbbb
shlb
lods
xor
sbb
divb
dec
je
cwtl
mov
popa
pop
ds
cmpsl
inc
inc
mov
dec
pop
dec
dec
push
mov
test
push
cmp
int3
rclb
pusha
mov
mov
out
sub
add
inc
adc
ljmp
mov
mov
jl
push
push
xchg
fisubrs
jl
jbe
test
incb
call
and
test
xchg
inc
adc
pop
push
rolb
adc
sbb
and
add
out
clc
shrl
fimuls
jmp
jb
xchg
jge
lret
fsubr
xchg
mov
jmp
mov
repnz
ds
jp
dec
decl
les
divl
fs
rsqrtps
adc
sub
fisubs
test
and
add
mov
adc
mov
je
cmc
mov
cmc
mov
mov
or
rcll
hlt
loop
loope
in
or
or
pop
push
loop
cmp
mov
mov
jp
xor
mov
ret
and
and
in
loope
mov
out
inc
clc
out
insb
arpl
inc
mov
xor
movsl
icebp
pop
mov
push
outsb
push
pop
loope
fmuls
pop
jmp
loope
mov
dec
xor
ret
sbb
push
cmp
imul
fisubrs
inc
daa
fs
jbe
mov
insb
cltd
stc
jle
mov
sarl
and
sbb
mov
mov
es
cld
pop
loopne
dec
xor
or
ss
mov
push
push
inc
test
arpl
and
je
es
adc
mov
mov
popa
out
push
pop
mov
pusha
mov
jo
dec
cmpsb
cmp
jae
rsqrtps
sub
sbb
pusha
xor
insl
outsl
ds
mov
lock
xor
out
push
cmpsb
inc
sbb
lock
xchg
mov
push
push
cmp
mov
fsubs
add
push
mov
push
inc
xor
jl
cmpsl
lock
addb
mov
sbb
popa
in
sub
mov
loopne
cmp
in
fmulp
test
mov
sub
lret
mov
icebp
xor
hlt
jp
aaa
fdivl
jae
test
pop
fsubrl
inc
and
mov
push
push
xchg
xchg
fcompl
sarb
icebp
xchg
into
aam
lock
fnstcw
push
arpl
rorb
fnstsw
jge
lock
jmp
lea
inc
dec
inc
mov
or
loopne
pop
clc
adc
mov
rcll
mov
ljmp
or
scas
mov
pop
sub
mov
mov
ror
mov
cmp
test
mov
inc
js
push
inc
call
dec
mov
cmp
imul
in
xor
in
and
movsl
fstpl
xchg
idiv
push
dec
fmuls
mov
and
jp
les
push
add
mov
shlb
in
popa
and
sarb
jle
pop
pop
ljmp
sarb
rol
ljmp
rcrl
mov
mov
mov
in
adc
into
add
cmp
push
mov
shl
dec
inc
add
mov
xchg
dec
jne
mov
pop
pushl
lock
scas
andl
jle
clc
mov
nop
jo
xchg
cmpsb
inc
jne
adc
out
cmp
addb
xchg
call
push
or
fs
ret
mov
add
pusha
pushfw
enter
cmp
test
scas
cmp
push
inc
mov
mov
inc
pop
or
add
cwtl
subl
add
adc
mov
in
and
and
in
mov
out
cmp
or
sub
cmp
inc
call
sbbb
cmp
pop
push
sarb
loopne
call
scas
jne
ljmp
and
pushf
test
add
rolb
adc
mov
stos
cmpsb
jmp
add
jo
add
gs
sbb
adc
mov
fnstsw
or
loope
xchg
fwait
mov
or
fdivrl
fwait
aas
or
mov
into
arpl
add
cmp
pop
dec
mov
pushf
call
shrl
and
pop
inc
and
repnz
outsl
push
daa
popf
adc
ljmp
jle
mov
mov
mov
loopne
std
lcall
push
stos
insl
pop
dec
test
nop
pop
or
add
pop
lret
lcall
mov
aad
dec
cmp
lock
push
mov
shrb
mov
inc
test
shll
or
and
cmpsb
jbe
inc
xchg
mov
decl
je
fs
and
mov
and
jge
lea
push
nop
mov
loopne
pop
mov
or
loop
lock
addl
jb
sbb
pop
jg
fnsave
insb
mov
in
xor
or
int3
adc
int3
shll
push
pop
in
fmuls
and
arpl
insb
shlb
loope
in
dec
lcall
push
and
cwtl
push
add
add
imul
cmp
add
int3
inc
add
or
fdivr
or
push
mov
push
clc
mov
jle
jp
and
jb
inc
xor
push
aaa
xchg
repnz
cmp
adc
pusha
fs
mov
push
or
ja
ret
insb
les
xor
mov
push
sbb
push
and
cli
idiv
mov
aaa
add
push
test
sub
out
pop
dec
cld
pop
inc
jg
rcrl
push
pushf
std
add
lods
and
cmp
ret
mov
insb
ljmp
xchg
fbstp
mov
mov
pop
fcmovb
jmp
inc
outsb
ljmp
sbbl
adc
movsl
outsb
xor
pop
je
cld
lea
or
mov
aam
out
sub
icebp
pop
stos
lahf
enter
xor
fs
xor
mov
add
mov
stos
shlb
push
je
inc
or
mov
ljmp
pusha
movsl
out
mov
rclb
add
lret
ss
mov
add
pusha
sub
das
je,pt
add
push
sub
dec
cmpb
jo
faddl
loopne
jp
and
mov
repnz
push
mov
push
in
cmp
js
jnp
ret
in
xor
lcall
jb
mov
push
mov
mov
push
fsubrl
mov
nop
dec
add
loop
push
sbb
call
pop
call
cli
cs
pop
xor
xchg
xchg
loopne
ret
fadds
adc
pop
sahf
add
cmp
outsb
js
mov
stos
pop
cmp
jg
mov
add
xchg
dec
stos
test
push
mov
add
sar
loopne
pop
hlt
jne
movl
inc
push
pop
iret
movb
jmp
cmp
shrb
jp
fcos
out
fisubrl
inc
imul
pcmpeqb
bound
test
or
sarb
xor
mov
into
fistps
fmuls
movsl
outsb
jle
in
xchg
lret
inc
in
mov
lcall
dec
mov
cli
and
mov
and
push
and
dec
test
clc
adc
push
mov
cmpsb
aam
push
icebp
and
push
mov
in
inc
cli
add
cmp
jmp
dec
adc
add
std
test
test
ret
cmp
adc
push
mov
mov
cli
cld
mov
sbb
pop
mov
cmp
fdivrl
add
daa
jbe
inc
mov
aam
or
inc
adc
sub
adc
or
sub
cli
add
add
test
out
xchg
jp
pop
mov
je
adc
adc
adcl
std
add
out
pop
cmpb
jo
loopne
push
pop
cwtl
adc
cmp
mov
mov
in
popl
jg
rorl
cwtl
push
rcll
leave
mov
inc
pop
xor
mov
adc
mov
xor
mov
clc
inc
fs
xorb
and
lea
jb
lock
xor
mov
xor
rorl
pop
mov
mov
int3
xor
inc
and
jno
gs
jl
stos
or
adc
pushf
movsb
mov
mov
sbb
test
arpl
repnz
int3
mov
mov
sub
push
dec
add
pop
or
lcall
add
dec
xchg
cmp
push
jo
adc
mov
clc
jecxz
fisubrs
add
adc
and
pop
ficompl
mov
jg
push
jne
std
jb
dec
add
shr
push
lea
repnz
ljmp
fs
fisttpll
adc
les
cmpsb
mov
test
fstps
add
loope
jg
add
pop
out
xor
jnp
orb
xchg
rcll
rcl
inc
jmp
xchg
insl
inc
mov
mov
add
xor
test
push
pusha
xor
or
das
or
mov
push
shlb
add
mov
int3
sbb
shll
jl
jge
dec
cmp
dec
push
and
inc
jle
inc
daa
pusha
sub
aas
shlb
jne
cs
mov
addr16
jmp
mov
add
xor
push
cmp
faddl
inc
stc
jmp
lds
jge
push
repnz
loop
add
push
movb
call
xor
push
sub
mov
aaa
push
arpl
dec
mov
loopne
mov
imul
add
inc
loop
pop
mov
nop
jbe
cmpl
jl
xorb
inc
pop
pop
or
mov
dec
inc
ficoml
cmp
pop
dec
clc
js
in
fs
orl
sub
cmp
clc
test
or
push
imul
pop
add
cmp
mov
jns
adc
push
inc
inc
inc
sub
mov
add
lods
jp
adc
mov
sub
dec
and
push
or
psrlw
in
lock
mov
lods
or
cwtl
adc
jne
and
cld
les
rorb
clc
rclb
dec
jb
mov
push
xorb
jmp
fwait
test
add
or
push
ds
cmp
jbe
push
mov
jno
mov
out
sahf
bound
xor
push
mov
pop
mov
jb
adc
push
push
mov
xor
clc
add
in
lods
push
xor
add
push
cmp
nop
xchg
push
inc
mov
cld
push
pop
shlb
inc
pop
js
imul
dec
mov
add
xor
mov
mov
lock
das
adc
in
aad
enter
mov
mov
dec
sarb
lea
pop
cmpb
je
pop
mov
xorl
popa
sbb
iret
std
bound
push
insl
adc
bswap
jle
aad
mov
sub
ret
pop
adc
xchg
fadds
jae
xor
dec
jmp
imul
scas
xor
scas
sub
push
ja
push
lcall
ret
adc
cwtl
fsubrp
dec
call
out
sub
add
mov
dec
iret
fsubrp
sbb
cmp
mov
dec
imul
jle
or
dec
fnstsw
add
cld
sub
pop
js
dec
loop
sbb
les
lods
ja
mulb
or
jno
pop
add
xor
push
icebp
das
ret
loopne
mov
push
mov
addr16
push
cmp
and
out
fcompl
hlt
shlb
mov
ja
sbb
or
xor
add
test
fdivrs
sbb
sub
or
int3
test
mov
hlt
sbb
arpl
lret
popa
jp
fnsave
dec
mov
mov
lock
jmp
adc
add
dec
pop
in
and
add
stos
sti
rol
push
test
lret
jge
nop
rcl
or
sbb
scas
sub
cmp
adc
or
cmpsb
mov
push
rcll
addr16
daa
test
gs
mov
mov
fstpt
inc
dec
dec
or
mov
push
ds
xor
out
inc
push
sbb
and
ljmp
mov
adc
lock
and
sub
cs
dec
mov
andl
push
xor
pop
add
adc
dec
lods
inc
imul
js
or
sarl
push
mov
sub
fisttpl
inc
ds
push
roll
ret
adc
adc
jmp
push
cmp
aas
leave
inc
ss
xor
xor
xor
mov
out
test
xor
or
cmp
imul
ror
sub
lret
cmpsb
loopne
xor
add
xchg
xor
adc
push
push
ret
add
inc
mov
adc
dec
rclb
outsb
jbe
ljmp
ret
jo
mov
dec
mov
adc
iret
add
inc
mov
mov
hlt
ljmp
cs
cmp
shlb
std
dec
adc
mov
addb
push
nopl
je
inc
mov
rcrl
inc
and
pusha
push
in
rorb
or
lea
add
and
subb
mov
xchg
mov
or
mov
xor
movb
movsb
cmp
inc
xor
es
push
dec
add
ja
mov
mov
xchg
dec
lcall
addr16
pushl
add
adc
mov
and
fs
aas
sbb
shrb
rolb
mov
sbb
add
lret
xor
xchg
jmp
add
or
imul
inc
and
sbb
inc
cmp
js
pop
xchg
fsubs
loopne
push
mov
add
into
cmp
mov
dec
mov
mov
shrl
jb
int3
xor
or
cld
pop
lret
sbb
xchg
mov
shrl
lea
idivb
sar
xor
mov
fs
ret
jle
mov
popa
fcmovbe
pop
cmp
mov
pop
mov
mov
xchg
push
aam
je
fiaddl
mov
push
add
jo
or
daa
test
dec
test
push
cmc
mov
push
pop
ljmp
call
pop
sub
subb
fdivl
or
test
iret
jb
fidivs
add
jge
aas
mov
sbbl
dec
in
mov
test
call
leavew
xor
push
jle
fsubs
lods
and
pop
add
je
mov
sub
test
mov
rcrb
movsl
or
subb
xor
push
inc
jmp
cwtl
insb
sbb
ret
stos
sub
cli
mov
mov
pusha
inc
sbb
dec
aam
add
js
pop
jbe
push
adc
jne
jp
popa
cld
mov
cld
movb
dec
cld
inc
outsl
int3
pop
hlt
js
aad
jne
or
or
loopne
jge
lock
cmp
or
insb
in
call
add
std
push
xchg
shufps
arpl
pop
mov
pop
mov
sbb
insb
xchg
xor
jne
call
jne
mov
mov
adc
scas
les
adc
aaa
or
and
repnz
in
xchg
add
cltd
cmp
pop
loopne
or
mov
and
js
mov
sbb
enter
stos
add
sbbb
rcrl
ret
scas
js
hlt
call
xor
xchg
push
xor
jmp
pusha
and
jb
jmp
cs
jnp
xchg
data16
in
cmp
pop
xchg
adc
ret
rcl
test
add
outsb
add
rcll
es
xor
or
popa
sbb
loop
inc
jmp
decl
xchg
dec
add
lret
loope
mov
xor
ret
adc
sbb
push
xor
inc
inc
shrl
insl
or
movsb
sbbl
out
rcrl
jmp
add
and
ljmp
sbb
pop
push
push
push
or
sub
mov
test
incl
fcomi
inc
hlt
jne
outsl
mov
xchg
movsl
fildl
pop
jmp
jl
fwait
add
and
and
pop
ret
or
pop
sbb
out
and
divl
adc
loope
lret
mov
les
scas
adc
ss
and
outsb
dec
call
cmp
lcall
jge
imul
faddl
mov
clc
mov
pop
jecxz
pop
and
inc
and
or
mov
lods
sbb
clc
cmp
jg
imul
nop
inc
dec
mov
insl
inc
xlat
sbb
fdiv
sub
add
or
inc
and
out
xchg
push
mov
pop
clc
test
jo
hlt
fs
call
sarl
or
loop
push
add
fs
decb
mov
adc
test
pop
cmpb
leave
int3
les
fildl
inc
pop
inc
icebp
jo
lret
rcrb
push
adc
les
fdivrl
and
outsb
aam
fadds
push
mov
sarb
push
cmpsl
cmp
hlt
clc
or
rclb
and
add
xor
dec
mov
sbb
jp
inc
cld
cmpsl
testl
pop
mov
aas
dec
insl
and
testb
rolb
cwtl
stc
and
or
mov
xchg
rclb
ret
or
ja
arpl
fcomi
decl
dec
cmpsb
sbb
and
mov
and
mov
call
inc
mov
das
add
imul
xchg
in
ljmp
adc
rclb
fnop
or
mov
dec
jmp
pop
and
mov
add
pop
cld
rcrb
jmp
cld
dec
push
adc
push
sub
lods
pop
or
jg
int
and
push
inc
pop
ljmp
sbb
repz
push
repnz
rcrb
ljmp
scas
mov
xor
add
cmc
dec
push
lock
xor
inc
adc
mov
aaa
push
daa
add
sahf
testl
std
push
xchg
mov
sub
outsb
clc
xchg
add
in
nop
mov
jecxz
decl
and
sahf
add
add
jl
lock
jns
or
mov
rep
dec
mov
sub
sub
insb
js
decl
lret
push
cmp
and
lret
jbe
mov
cmp
adc
ds
rolb
ret
add
orb
jmp
cmp
fbstp
hlt
adc
popa
adc
std
xor
or
add
pop
pop
popf
repnz
inc
orb
push
push
mov
adc
loop
jae
pop
das
add
mov
cmp
sub
add
fistpll
outsb
jp
inc
mov
jbe
je
dec
fmuls
pusha
shl
inc
cmc
sar
mov
jne
xor
aad
mov
mov
or
push
inc
test
jb
and
sti
fcomps
fisttpl
ret
outsb
rolb
mov
ljmp
outsl
rolb
mov
mov
imul
xor
sub
testb
jo
dec
andl
in
sarb
or
and
lea
pusha
adcb
test
hlt
ret
mov
fists
jp
xchg
jbe
push
fs
adc
mov
aam
push
push
add
roll
push
scas
jl
pop
nop
mov
fcmovnu
sarb
dec
xor
movsl
adc
icebp
sti
push
mov
push
pop
mov
idivb
sbb
movsl
mov
icebp
test
fidivl
mov
inc
in
repnz
aaa
and
xchg
dec
lods
jmp
je
outsl
cld
dec
in
lahf
shrb
add
les
pop
les
push
jnp
fcomps
push
adc
js
add
leave
jbe
adc
in
enter
sbb
sub
push
pop
sbb
lahf
inc
in
and
pop
push
or
sbb
and
shrb
xchg
mov
dec
int
push
shrl
push
loopne
sub
sub
out
add
adc
dec
mov
sar
cmp
enter
add
mov
mov
sbb
int3
push
cmpsb
sbb
sbb
inc
add
cld
ljmp
sbb
jnp
and
loope
rorb
ret
jno
inc
hlt
push
ss
mov
mov
int3
or
add
mov
mov
push
adcb
out
and
or
inc
outsb
add
mov
sbb
inc
fmull
mov
inc
sarb
mov
xchg
inc
insb
sarb
add
aas
outsb
test
xor
in
sub
and
call
cmp
mov
add
push
add
fcomps
jge
mov
pop
mov
mov
sbb
out
scas
addb
push
cmpsb
shr
add
jmp
mov
push
lds
mov
fs
test
jl
punpcklbw
pop
call
xorl
cmp
sbb
adc
test
xor
clc
sbb
and
lahf
out
or
push
pushf
inc
push
in
test
in
add
call
rclb
adc
fstps
cld
inc
pop
cli
sbbl
xor
inc
inc
cli
jno
loopne
gs
dec
mov
inc
push
ret
cld
jg
cmp
xor
push
popf
cmp
int3
fs
cmp
push
icebp
fwait
les
out
call
pop
mov
dec
js
rolb
adc
mov
sub
inc
enter
mov
pop
pop
push
push
push
popa
add
xor
pop
or
test
xchg
dec
xchg
fsub
sub
test
aam
lock
enter
add
xor
test
rclb
nop
std
lahf
aam
push
js
iret
das
adc
ret
pop
sub
xor
adc
push
cmc
xchg
cld
push
leave
nop
mov
cs
sub
adc
loopne
les
add
lods
inc
addr16
jmp
inc
push
pushf
add
cld
sbb
rcrl
pop
ljmp
ss
push
xchg
push
xchg
stos
sbb
dec
jb
scas
sub
rorb
movsb
aaa
add
push
xor
lods
adc
outsb
dec
repz
add
mov
push
in
dec
add
jb
dec
xor
or
jae
push
lods
cmp
pop
dec
push
pop
rolb
or
sbb
popa
lcall
jne
rcrb
subl
roll
pop
fistpll
inc
add
sarl
push
in
sbb
bound
dec
aam
or
dec
inc
mov
add
ret
xchg
fisubrs
jae
push
inc
test
mov
adc
mov
push
add
scas
sbb
push
pushf
stos
jnp
addr16
jne
mov
mov
push
je
stos
mov
fiadds
in
aad
adc
jmp
js
or
xchg
out
aad
test
neg
rcl
inc
push
push
stos
jbe
push
cmp
orb
data16
jg
scas
ss
clc
insb
add
int3
or
add
inc
shl
rcrb
imul
subl
sbb
push
jae
adc
pop
adc
push
outsb
add
loopne
fcmovnu
lret
jnp
adc
pop
mov
lret
jmp
mov
jmp
rorl
imul
psrlw
insb
cltd
push
cmp
sub
lock
stc
push
add
hlt
orl
adc
sub
jne
jp
push
loop
and
cld
mov
lods
add
dec
pop
push
les
dec
loop,pt
mov
adc
cltd
pop
adc
push
mov
sub
stos
sti
push
das
xor
cmp
adc
fistps
adcl
push
jns
dec
into
or
loopne
pop
jmp
mov
and
test
cld
push
add
mov
push
rcl
andb
sub
pop
dec
mov
dec
mov
and
cmpb
push
push
lods
add
mov
and
push
cld
xchg
pop
push
inc
sub
test
loopew
nop
xlat
fimuls
sbb
jb
xchg
mov
imul
sbb
pushf
mov
xor
inc
enter
mov
inc
mov
test
ret
mov
jle
cmp
xchg
clc
pushf
outsl
les
pop
jl
dec
mov
mov
push
push
test
cmp
cwtl
push
push
lret
push
test
lea
adc
ss
test
mov
fdivs
pop
test
das
negb
pusha
dec
rcll
cld
cld
jmp
in
xchg
dec
popa
xchg
mov
jmp
fisubrl
movsb
inc
add
cmp
push
ss
push
dec
push
imul
push
jnp
adc
push
mov
dec
mov
sub
ffreep
inc
sub
push
or
ljmp
mov
push
mov
dec
sub
cs
add
not
loop
pop
fimuls
rcll
test
or
xlat
je
push
iret
repnz
mov
lods
lods
movl
rcrb
imul
or
test
or
mov
cmp
xchg
icebp
mov
sahf
adc
test
cmp
cmpsb
push
not
sbb
mov
out
adc
xchg
push
filds
rorb
rcr
jne
lods
mov
popf
leave
mov
adc
clc
lea
dec
nop
incl
loop
idiv
test
sbb
add
add
test
repnz
mov
add
and
or
movsb
shlb
insl
and
gs
subb
dec
pusha
mov
cmp
dec
pushf
add
out
int3
data16
bound
cli
aad
mov
mov
xor
pushl
leave
data16
inc
push
push
mov
sarb
int3
push
xchg
cld
mov
mov
mov
test
sbb
xor
and
sub
push
mov
inc
push
andl
test
adc
stos
add
ljmp
scas
xor
sbb
jno
cmp
jo
je
pop
mov
cs
and
imul
mov
adc
lcall
mov
push
pusha
xor
rcl
jne
inc
pop
add
movsl
xchg
in
pop
arpl
mov
inc
mov
and
leave
mov
dec
dec
stos
cld
sarb
add
push
push
push
mov
addr16
pop
mov
xchg
idiv
sbb
movsb
sbb
dec
in
fmull
or
in
push
cmp
dec
inc
add
lcall
decb
andb
inc
movsb
fdivrs
sub
cmc
mov
das
jle
xchg
movsb
sbb
inc
mov
inc
adc
adc
shlb
js
lea
add
sarl
sbb
icebp
add
push
verr
adc
ficompl
aam
call
mov
add
xor
push
mov
inc
xor
xchg
cmp
jnp
repz
mov
xor
insl
pop
mov
cld
push
imulb
aad
sbb
arpl
ds
push
push
push
xchg
jl
loopne
pop
push
push
or
pusha
or
cmp
inc
mov
pop
daa
popf
pop
lock
mov
push
mov
je
sbb
mov
clc
mov
lcall
dec
or
imul
subb
inc
mov
lcall
in
cmpsl
mov
les
xor
dec
call
lock
add
cmp
mov
mov
ret
in
dec
fdiv
sbb
mov
loopne
fimull
or
fs
mov
and
daa
jl
test
xchg
push
xchg
and
pushl
push
mov
cli
cmp
lret
in
xor
cmp
push
mov
andb
addb
insb
scas
js
cld
dec
mov
adc
roll
outsb
mov
dec
out
mov
and
adc
repz
test
xchg
cmp
push
cmp
mov
push
push
push
out
or
decl
jne
xor
flds
cmpsl
aad
inc
xor
jo
fdivrp
add
in
sbb
xlat
add
adc
jp
js
sbb
out
add
inc
dec
ljmp
adc
aaa
or
jnp
lcall
dec
lock
and
jl
repnz
subb
inc
add
negl
or
mov
adc
push
shll
or
push
push
in
xor
mov
std
push
add
ret
sub
dec
pusha
je
jno
pop
cmpb
or
loopne
dec
cmp
mov
inc
push
lods
ss
cmp
clc
jne
inc
loopne
shll
lock
push
dec
clc
jb
push
mov
or
push
push
decw
jp
aad
push
inc
push
dec
pop
rorb
ja
push
js
push
cli
pop
cmp
mov
mov
ret
cltd
jmp
or
xor
stos
mov
ret
rcll
test
mov
mov
inc
cmp
int3
push
push
insl
xor
mov
aam
jmp
cmp
sahf
repnz
add
adc
mov
and
mov
pop
adc
dec
push
loopne
push
sbb
mov
clc
adc
pushf
cmp
inc
inc
and
enter
fwait
inc
pop
mov
xchg
shll
sub
jbe
push
adc
jle
lds
or
pop
mov
sub
andl
dec
jmp
sbb
es
cs
nop
and
jno
fstpl
or
cmp
test
pusha
cmc
mov
pushf
lea
rclb
and
test
mov
inc
dec
sarb
dec
jne
cli
mov
and
mov
add
mov
sub
cmp
xor
jmp
popf
mov
adc
aam
daa
jmp
outsb
cld
nop
add
insl
mov
jg
adcl
cmp
mov
adc
push
sbb
pusha
pusha
jnp
jp
or
loope
and
nop
shll
sbb
jg
hlt
je
push
imul
push
push
mov
sbb
dec
pushf
and
push
adc
push
in
ror
cmp
add
xor
cltd
loopne
stos
mov
js
inc
ret
inc
mov
cli
imulb
test
adc
add
add
bound
adc
rorb
les
call
test
inc
or
mov
add
inc
pushf
je
push
cld
rclb
push
lock
subl
mov
and
adc
repnz
fdivr
rorb
fs
notb
or
mov
sub
pop
mov
push
lcall
dec
inc
fs
jb
in
and
push
jmp
call
lock
test
and
jmp
add
push
push
add
insb
mov
push
push
fiaddl
inc
loop
ret
repnz
sub
jne
inc
sahf
cmp
int3
mov
arpl
mov
rolb
adc
cmpb
int
add
pop
sub
push
rorb
aam
sbb
sbb
sbb
aaa
xor
mov
sub
jp
sub
jl
jbe
mov
push
and
loope
adc
call
cmp
add
sub
fldt
fidivs
mov
ds
jle
enter
daa
add
jo
sbb
lea
or
pop
inc
add
out
lock
ljmp
pop
and
popf
fs
loope
das
push
lods
insb
testb
lock
mov
scas
movb
fwait
add
or
lods
cwtl
mov
pop
adc
add
push
ret
lock
jmp
les
adc
mov
xchg
add
cld
movl
jl
mov
and
inc
imul
lcall
icebp
xchg
inc
scas
mov
cmp
int3
adc
aaa
and
push
push
incl
insb
mov
add
int3
jae
mov
ret
xchg
add
icebp
sbb
cmp
push
js
mov
outsl
mov
and
pop
inc
clc
test
or
sbb
add
icebp
call
push
pop
ja
inc
sub
add
mov
int3
jl
push
xchg
xor
adc
push
lods
xor
mov
and
pop
push
add
adc
jl
xor
rclb
decl
add
jnp
sub
mov
mov
dec
je
xlat
xchg
push
mov
fildll
ret
sub
add
add
dec
loope
cld
inc
jl
add
add
loop
or
sbb
cmp
int3
jg
insl
sub
xor
sub
lods
or
js
inc
inc
scas
rcrl
push
xor
test
or
scas
xlat
add
stos
subl
shl
mov
loop
mov
incl
or
mov
popa
int3
mov
fmuls
leave
lods
dec
popa
int
inc
pop
xchg
js
or
hlt
pushf
push
mov
sti
push
aam
push
addr16
and
pusha
std
cmpsl
mov
xor
lods
xchg
and
decb
cmc
or
mov
push
adc
in
xchg
call
cmpsb
imul
nop
sarb
sahf
shll
xchg
ljmp
or
jmp
sbb
or
or
bound
pusha
or
add
jl
add
pop
sub
data16
jp
pop
lea
jae
data16
andb
in
imul
idivl
inc
test
push
sub
call
jl
jp
aam
pop
adc
mov
scas
xor
xorb
in
aam
test
lret
roll
in
pop
push
inc
addr16
mov
inc
add
cmp
pop
inc
mov
and
movsb
push
sub
fcmovne
add
arpl
jno
repz
test
loope
int3
dec
je
cwtl
sar
push
shrl
sti
inc
rolb
jg
push
es
fsubrl
xor
mov
xchg
mov
push
mov
adc
push
xor
inc
scas
lcall
push
jmp
or
add
xchg
fiadds
push
lds
decl
jl
stc
jb
cmp
xchg
adc
loopne
stos
ret
add
lods
mov
mov
test
or
sbb
inc
sub
sarb
pop
jmp
xor
pop
push
ret
imul
outsb
sbb
pop
xchg
dec
clc
outsl
mov
and
xlat
mov
jmp
pop
jbe
sbb
loopne
pop
in
jle
sarl
lock
sub
inc
mov
cmp
cmp
imul
adc
dec
mov
sahf
dec
sub
jo
shrl
xchg
cmp
push
mov
pusha
cmpb
adc
xor
cmpl
sbb
pop
mov
test
fldcw
adc
ja
pop
inc
inc
cld
pushw
inc
cmp
xchg
les
das
test
adc
add
xchg
orl
sub
add
and
jle
add
adc
mov
testb
mov
inc
std
inc
xor
or
aas
xchg
lea
cs
or
and
sub
cmp
add
cmp
jl
xchg
int3
sbb
sbb
insb
mov
or
ficoml
adc
addr16
sbb
adc
or
and
lock
inc
cmpsb
ret
jmp
insb
inc
add
cmpsl
add
adc
or
call
dec
adc
aas
or
ret
jne
loop
addl
adc
sub
es
push
cmp
inc
and
push
insl
js,pt
inc
mov
push
mov
mov
xchg
xchg
ds
add
add
or
ss
in
inc
or
cmp
sarb
adc
cmp
push
rcrb
xor
lret
test
sub
sub
rep
xlat
jb
mov
call
push
pop
fiadds
sub
incl
add
jecxz
push
push
in
add
mov
mov
repnz
xchg
mov
scas
pop
jb
pop
lea
and
or
sub
mov
inc
jnp
sarl
mov
push
inc
outsb
rolb
mov
rcl
mov
ds
mov
sub
pop
stos
lock
imulb
fdivrs
rorb
data16
push
aaa
mov
push
push
jae
mov
pop
sbb
cmp
push
out
xchg
sub
popa
pop
call
fmull
orl
add
mov
loopne
dec
xchg
sbb
movsl
mov
mov
push
daa
test
sarl
outsl
or
add
pop
inc
mov
lcall
stos
and
and
bound
add
movsb
xchg
addr16
insl
push
add
adc
test
jmpw
push
test
and
int
movsb
addb
lods
xor
dec
call
adc
dec
sahf
mov
pop
popa
add
sbb
loopne
pop
jg
lret
std
clc
lock
or
and
call
add
push
ljmp
loop
and
inc
not
cmp
test
dec
mov
ss
sbb
mov
dec
or
arpl
add
and
cld
add
ds
mov
ljmp
mov
scas
push
rorb
xor
inc
inc
lock
pop
xor
dec
rcl
add
cmp
inc
xor
incl
idivb
mov
jmp
mov
or
es
add
je
ljmp
push
push
adc
mov
addl
mov
sub
lock
js
pushl
rcrl
call
mov
push
mov
xor
nop
out
pop
jno
out
add
leave
push
add
fists
push
rcr
mov
pop
and
inc
jl
pop
jo
adc
push
out
sahf
xor
andb
pop
nop
incb
mov
add
aaa
mov
sub
add
jmp
adc
scas
cwtl
call
fisttps
faddl
inc
scas
js
dec
mov
pop
and
insb
sub
inc
push
les
int3
and
xchg
imul
hlt
ret
xchg
test
andb
mov
sti
pop
and
adc
cmp
cld
push
rol
faddl
ret
popa
popa
jmp
pop
add
in
jno
data16
mov
fs
cmp
pop
push
push
inc
sub
mov
push
rolb
dec
push
push
and
cmp
movsl
xor
xchg
sub
push
and
clc
aad
mov
sarb
jb
addr16
mov
xchg
adcb
fs
mov
data16
inc
adc
cld
call
pop
dec
push
mov
or
in
pop
aam
fsts
into
in
adc
testb
adc
mov
xor
jb
lea
xor
add
mov
cli
cmpsl
mov
xor
fs
cli
sub
call
push
mov
jo
int
mov
xchg
dec
push
mov
mov
jno
scas
jb
jae
insb
mov
bnd
or
stc
mov
sub
push
fsubrp
int3
test
inc
pop
pusha
cmp
in
jle
or
and
out
mov
aam
std
add
dec
roll
adc
mov
pusha
nop
js
fs
pusha
filds
push
test
fdiv
cwtl
ficompl
push
dec
jg
mov
mov
add
in
inc
mov
fwait
ret
dec
mov
jecxz
mov
mov
dec
inc
push
fiaddl
jb
dec
xor
mov
push
std
push
dec
cld
push
stc
xor
nop
in
int
push
add
std
mov
fldcw
incb
xor
nop
ja
ret
sbb
xchg
mov
andl
pushl
mov
inc
pushl
push
sub
jne
pop
add
sub
ficoms
inc
outsb
adcl
les
or
cli
lds
in
jl
test
mov
mov
jae
test
mov
gs
mov
mov
xchg
clc
xor
and
lds
jbe
push
inc
push
mov
int3
dec
add
cs
into
dec
and
and
sbb
in
push
fnstsw
scas
stos
adc
rcr
cmp
push
adc
es
jb
rorl
inc
mov
fs
xchg
cmp
ds
add
cmpsl
inc
arpl
mov
push
pop
lea
test
lods
dec
mov
minps
nop
xor
add
pop
pop
sub
ret
jg
mov
aad
add
xchg
test
add
push
andl
inc
jp
movsb
cmp
in
ficoml
xor
add
loopne
adc
cmpsl
add
jmp
mov
push
xor
jle
push
arpl
xor
jne
pop
in
scas
xor
enter
rcll
add
imul
inc
loope
pusha
adc
outsb
std
dec
fnstsw
es
jl
fcoms
cs
cli
sub
adc
mov
push
decb
sbb
je
loope
sub
mov
rolb
push
inc
mov
clc
mov
inc
cmp
adc
fdivs
add
add
pop
push
sbb
push
cs
inc
in
and
je
cmpsb
sub
into
adc
rolb
aam
mov
push
aad
repnz
pop
mov
mov
pop
adc
fsub
sahf
pop
adc
push
faddl
add
into
adc
leave
scas
add
sbb
mov
test
add
and
lods
push
pop
xor
xor
inc
jg
cmp
dec
and
cltd
mov
sub
outsb
xor
or
pop
movsb
sahf
les
cmp
add
cmc
cmp
mov
shl
mov
jne
lods
sahf
les
mov
mov
push
int3
inc
imulb
push
dec
cli
inc
pusha
add
cmpsl
inc
add
sahf
jae
movsb
add
adc
orl
xchg
mov
ja
pop
push
mov
and
or
hlt
aas
mov
mov
mov
ljmp
dec
push
fdivs
rorl
xor
mov
xor
mov
and
xchg
push
and
aam
inc
orl
pop
scas
sub
pushl
xchg
sub
inc
xlat
add
and
in
mov
test
or
jbe
pop
jbe
cmp
mov
stos
dec
ljmp
pop
push
rclb
fs
outsb
andl
xor
std
push
mov
mov
push
adc
and
data16
xor
test
sbbb
dec
insb
adc
mov
add
jp
pop
or
aaa
sbb
ja
jle
pop
inc
loopne
and
cmp
or
dec
in
outsl
loop
jp
add
and
xor
adc
push
mov
inc
xor
push
addb
push
rclb
or
add
mov
mov
mov
mov
loope
mov
repnz
inc
jns
jo
xchg
mov
sub
mov
inc
cld
add
jb
js
push
aam
jo
mov
dec
jg
jmp
fdivs
xchg
pop
cmp
je
pop
add
xor
dec
add
adc
popf
push
cmp
mov
inc
andb
cmp
or
cmp
imul
push
rclb
lcall
jbe
sub
add
cmp
xor
adc
inc
add
inc
stc
pop
add
fdivrl
sbb
inc
pop
ss
mov
pop
out
push
data16
mov
cld
in
sub
shrb
mov
adc
xor
aam
cmp
mov
or
cmp
push
mov
sub
or
clc
jb
cmc
pop
cmp
mov
aam
cmpl
pop
mov
ret
in
mov
cwtl
push
inc
pop
bound
cmpsb
jp
stos
dec
es
sbb
mov
lcall
or
hlt
sbbl
push
subl
sub
or
faddl
sahf
jae
xchg
decl
inc
push
and
in
or
inc
xor
sbb
mov
sub
nop
sub
out
icebp
xchg
popa
loop
enter
cmp
xorb
adc
ja
orb
inc
imul
sbb
add
in
push
gs
push
mov
xor
rolb
dec
dec
xchg
jns
out
lds
popf
bound
lret
push
dec
lods
std
xchg
mov
je
push
mov
adc
xor
int3
mov
popa
jne
pop
fmuls
sub
dec
ficomps
movsb
cli
push
jecxz
les
ret
add
js
incl
sbb
pop
xor
push
jo
repnz
inc
mov
hlt
inc
push
cli
xor
sub
je
outsb
lock
icebp
dec
lods
fisttpl
mov
mov
sbb
data16
jmp
mov
jb
jne
sbb
lea
dec
jl
mov
jle
dec
sbbb
movl
aaa
or
xor
push
test
rorb
movsb
mov
pop
mov
in
outsb
mov
popa
incl
xor
mov
es
leave
mov
add
push
sbb
jp
mov
sbb
and
push
sar
lods
mov
inc
shlb
aaa
and
mov
sbb
std
adc
addl
cmpl
mov
pop
pop
add
andb
rorl
dec
mov
xchg
inc
fisttpll
mov
and
adc
call
or
mov
cld
mov
sub
pushf
insb
and
scas
mov
test
out
ljmp
mov
aad
mov
enter
das
test
mov
mov
test
xchg
xor
mov
mov
sbb
mov
push
adc
cmp
call
imul
scas
xchg
je
inc
sub
and
and
adc
inc
mov
add
mov
sbb
lock
ret
inc
int3
pusha
lods
dec
dec
loopne
inc
push
or
dec
pop
out
adc
xchg
jmp
sbbb
jnp
adc
sub
ret
ret
dec
addb
mov
rcr
mov
jge
int3
push
fisttpl
jge
lock
mov
or
adc
int3
add
or
mov
xchg
ret
shl
or
inc
mov
push
stos
fcompl
mov
lcall
mov
dec
lret
in
jne
fsubl
or
ss
mov
je
push
hlt
and
push
jmp
ud2
das
xchg
in
rcrb
jb
fs
jmp
cwtl
add
adc
clc
inc
add
test
add
dec
aam
jmp
loopne
and
pop
in
lret
sbb
mov
mov
leave
sub
test
mov
test
mov
or
add
jp
ja
add
pop
es
stos
bound
push
xchg
test
mov
subb
mov
jmp
adc
pop
sub
add
lcall
dec
add
enter
mov
mov
dec
jmp
xchg
dec
xor
mov
add
mov
adc
mov
xchg
cli
add
call
lea
push
add
imul
lea
pop
outsl
xor
jne
cli
cld
sbb
cld
pop
xchg
jp
nop
cld
push
mov
cli
or
icebp
dec
test
hlt
or
les
jne
add
je
sbb
dec
pop
jo
stos
insl
rclb
adc
rclb
inc
aad
inc
gs
rclb
sahf
jl
rcrb
test
popa
les
cmp
pusha
xchg
cld
dec
dec
xlat
movl
jp
sub
xor
subb
push
call
rolb
into
fmuls
rcrb
mov
pop
jmp
or
ss
lret
repz
lea
outsb
adc
xchg
daa
and
mov
add
sbb
fildl
int3
loopne
inc
fidivs
jno
ret
fisttpl
and
mov
rol
xor
cmp
push
cmp
les
add
insl
cmpsl
pop
sub
lock
fiadds
or
jnp
xchg
dec
mov
push
add
icebp
jle
push
cli
jl
shll
test
push
fs
pushl
cld
pusha
cmpsl
call
inc
or
pop
pop
insb
push
fmuls
dec
inc
adc
sub
int3
outsl
sub
mov
test
insb
clc
test
jo
adc
jmp
xchg
push
mov
faddl
idivb
aaa
mov
data16
dec
jb
add
add
jl
add
cmp
push
push
mov
ds
movsb
std
cmp
call
and
cs
xchg
cli
and
mov
aas
movsb
push
inc
ss
inc
and
add
addr16
mov
mov
mov
out
lods
clc
fisttps
mov
cmp
loope
leave
lcall
les
mov
push
icebp
adcl
in
mov
mov
cmpsl
cmp
jp
lahf
mov
push
mov
push
ret
inc
push
dec
shlb
in
ss
sub
ret
mov
add
or
fstpl
sti
rcrl
into
repz
add
mov
ja
pop
or
sub
cwtl
cs
inc
or
stos
jmp
mov
cmp
mov
test
call
xor
xor
loope
aam
jl
in
pop
test
sub
or
fimull
subl
cmp
movb
fistpl
push
push
fsts
or
nop
mov
pop
cltd
js
jb
shlb
cmp
sub
lods
call
cs
jecxz,pn
jae
cmovnp
mov
add
push
ss
out
cmp
ljmp
data16
movsl
mov
mov
aad
sub
adc
add
icebp
pop
aaa
incb
xor
incl
rolb
cmpsb
adc
or
addl
xchg
pop
adc
add
sti
pop
or
pop
inc
dec
rolb
push
in
or
fs
pusha
add
xor
cmpsb
filds
rolb
push
inc
fbld
mov
leave
pop
leave
nop
jo
add
mov
addl
fs
dec
pop
push
inc
data16
xor
xor
and
int
lea
or
cmova
sbb
insl
in
js
mov
xor
mov
cmp
cmpl
addr16
les
add
je
mov
push
adc
adc
bound
fwait
cli
add
sbb
fimull
mov
adc
mov
add
push
or
xchg
cld
and
or
xchg
incl
push
and
enter
mov
aam
sbb
jne
push
jno
int3
out
mov
rorb
push
or
or
ret
and
push
lock
jge
mov
push
ljmp
dec
mov
and
incl
cmp
cmp
pusha
sub
inc
add
sbb
jo
mov
and
or
sub
or
dec
fmuls
ds
add
add
push
cld
mov
inc
shlb
jae
test
mov
popl
push
inc
pop
lods
ljmp
repnz
js
jne
or
fmull
jnp
fs
outsb
test
rorb
jmp
lock
mov
test
adc
lea
int3
fildll
cmp
fidivs
fadds
dec
pmovmskb
push
dec
nop
icebp
dec
shll
pop
je
push
ds
popl
daa
fisubrs
xorl
inc
lods
pop
push
fstl
add
lea
jmp
add
pushf
sub
fdiv
jg
cmpsb
xor
dec
push
push
popf
enter
add
sbb
adc
sbb
mov
ret
fdivr
cmp
aad
ja
cs
mov
add
loope
int3
adc
icebp
test
stos
dec
push
push
mov
jns
fs
push
or
inc
lods
inc
jmp
fidivl
sbb
cmp
jmp
adc
cmp
ds
inc
mov
sahf
sub
je
das
ljmp
sub
and
lods
add
test
and
inc
scas
and
adc
push
pop
mov
lahf
lcall
cli
push
and
fwait
adc
xor
mov
adc
notl
rorb
add
ficoml
dec
push
push
ljmp
cltd
mov
xchg
aam
xchg
sbb
dec
decl
pop
sbb
into
push
mov
pop
out
scas
cli
sub
in
inc
inc
ljmp
or
dec
das
and
aaa
roll
xchg
mov
test
or
dec
and
mov
jo
mov
adc
and
ss
ljmp
or
cmp
xor
je
je
lock
mov
mov
xchg
xor
sub
sub
push
lcall
cld
test
mov
mov
cwtl
add
sub
inc
jmp
jb
leave
cmovno
mov
syscall
je
hlt
or
xchg
push
stos
push
sub
push
jmp
scas
mov
mov
lea
inc
outsb
fidivs
jns
inc
fcmovu
loopne
aam
xchg
nop
es
pusha
cmpl
cmpl
push
mov
mov
icebp
push
or
mov
mov
push
mov
test
adc
nop
dec
dec
je
scas
jle
int3
cmp
sub
hlt
mov
cmp
lret
pushl
rol
mov
pop
pop
popa
stos
pusha
movsb
dec
mov
inc
outsb
adc
jmp
cwtl
mov
mov
ret
inc
dec
scas
test
mov
inc
iret
dec
call
clc
or
bound
fs
dec
mov
pop
sbb
xor
or
push
jg
clc
fadds
inc
adc
loopne
add
or
aam
mov
test
es
fadds
cmp
xchg
ja
sub
pusha
es
ljmp
loopne
mov
enter
ss
sbb
std
cmp
xorb
inc
inc
divb
mov
pop
fidivl
int
mov
xor
call
es
cmp
mov
mov
into
adc
dec
sti
push
pop
dec
andb
test
lds
in
add
push
fsubrs
cmp
test
cli
outsl
push
rcrl
push
push
or
test
pop
movsl
lret
loopne
xor
faddl
pop
shll
in
and
lods
das
ficomps
sbb
sub
popf
int3
fmull
mov
es
and
mov
inc
push
popa
inc
add
ja
imul
into
jne
or
lods
call
jo
mov
xchg
int3
aam
sbb
icebp
pop
adcl
imul
mov
pop
fsub
mov
das
gs
xor
cmc
sbb
xchg
add
ds
into
xchg
add
and
add
jl
not
or
cmp
fdivr
out
sub
sahf
dec
popa
add
pop
sbbb
gs
inc
push
test
and
shl
lcall
les
xor
mov
data16
int
lock
adc
and
add
xchg
clc
scas
adc
clc
test
popf
into
jg
dec
add
sub
sarb
pushf
sti
decl
pop
push
sub
jb
add
es
push
fsub
lods
mov
jnp
lea
call
pop
or
mov
rolb
mov
cld
fsubr
cli
clc
outsl
push
sahf
mov
pop
inc
lcall
xchg
push
pusha
mov
sbb
push
and
hlt
lret
lock
leave
pop
sbb
add
sub
fs
das
mov
and
rorb
test
add
fstps
ds
or
aas
inc
je
mov
insb
cmpsb
js
jne
decl
rclb
mov
ljmp
int3
sbb
cmp
or
incb
andb
cmp
adc
cmp
and
outsl
bt
lret
ret
mov
jmp
rorb
push
stos
sbb
js
xor
push
test
push
hlt
scas
lods
sbbb
inc
jmp
mov
hlt
pop
dec
pop
push
dec
int3
push
inc
pop
mov
xor
mov
mov
pop
push
fisttpll
push
cli
nop
mov
push
andb
cmp
lock
adc
inc
mov
pop
sbb
ret
inc
or
inc
jb
jecxz
std
ss
cs
xor
fwait
mov
pop
mov
adc
jo
add
mov
int3
lock
mov
aaa
div
adc
psrlw
repnz
mov
lock
push
xchg
orl
jno
decb
int3
and
xorb
xchg
push
test
push
push
pop
shlb
sub
add
pushf
xchg
xchg
dec
jne
iret
xor
lret
cmpl
cmp
push
rol
testb
or
mov
jno
fsubl
dec
jle
jmp
sarb
inc
mov
add
adc
popf
jmp
adcl
mov
mov
or
push
dec
nop
mov
inc
ret
mov
xor
pop
aaa
loopne
push
rclb
scas
popf
cmpsb
and
std
test
outsl
inc
push
sahf
adc
insb
push
or
mov
mov
dec
or
mov
mov
adc
add
inc
dec
mov
mov
add
les
jl
push
add
clc
andl
add
add
adc
mov
out
mov
sub
ds
repnz
je
adc
dec
dec
outsb
dec
test
test
push
loopne
out
fiadds
jo
decl
shlb
mov
xorl
inc
adc
and
or
xchg
mov
pusha
add
push
inc
es
sti
pop
push
adc
inc
cwtl
js
mov
in
inc
xlat
addb
mov
push
mov
es
js
add
or
adc
in
push
cwtl
pushf
mov
hlt
iret
lods
adc
scas
pushl
add
divb
pop
js
shlb
lock
test
xor
jo
cld
xchg
and
mov
movsb
dec
jecxz
call
jo
mov
push
inc
out
push
xchg
xchg
rolb
dec
outsb
add
js
sbb
jno
mov
call
call
ljmp
pop
add
sub
xor
int3
nop
sbb
call
add
shrl
cmpsl
daa
add
bound
imul
xchg
sbb
or
lcall
sub
in
sarb
add
out
xor
scas
or
filds
cmp
cmp
jge
fldlg2
stc
mov
sub
adc
adc
cmp
lods
cmp
movq
notb
adc
jp
lods
fs
dec
add
cmp
lock
xchg
or
cmp
rcl
mov
xchg
mov
push
sub
leave
int3
push
ret
jp
gs
and
cmp
add
rolb
mov
add
push
fsub
mov
inc
adc
mov
hlt
add
inc
loopne
add
push
push
adc
stos
outsb
xor
xor
lahf
loopne
mov
roll
sbb
fwait
or
icebp
int3
push
xchg
aam
cmp
cwtl
pop
push
std
jecxz
enter
aas
daa
dec
or
dec
sahf
lea
or
add
dec
es
mov
rorb
mov
inc
xor
push
ljmp
idiv
loope
push
mov
mov
outsl
mov
mov
push
xor
clc
adc
pop
mov
and
inc
hlt
je
and
sbb
aaa
adc
inc
xchg
hlt
std
or
xor
jmp
faddl
sti
mov
pop
xor
xchg
enter
rcll
clc
mov
jge
test
mov
rclb
mov
lret
dec
call
ss
test
jbe
cmp
jne
outsb
inc
mov
add
lea
push
int3
mov
ret
mov
push
in
mov
lret
inc
inc
pop
mov
pop
push
jle
jl
dec
push
add
loopne
stos
mov
std
clc
in
addl
cmp
enter
add
lods
push
jo
jbe
sbbl
ss
enter
mov
addr16
mov
das
cld
xor
push
mov
xchg
in
mov
push
and
push
cmp
sarb
inc
and
jne
push
mov
push
xor
int
lds
xor
fsubs
push
inc
out
out
icebp
or
mov
add
jg
sbb
mov
add
jge
ret
push
push
and
lock
lret
aam
incb
xchg
aam
mov
inc
cwtl
in
ja
mov
or
mov
or
push
and
dec
pop
out
shrb
aas
call
sub
add
fnstenv
push
les
std
addb
int3
inc
aas
mov
mov
cmp
push
lcall
ret
jmp
jo
or
jmp
sub
cmp
push
push
sbb
inc
rorb
mov
nop
adc
sbb
jge
pop
dec
les
add
adc
push
add
cld
cmp
jmp
leave
or
int3
ret
mov
xchg
lret
in
dec
adcb
inc
and
lret
xlat
sarb
fcmovb
roll
sub
outsb
sub
jno
pop
or
sub
cs
adc
fsubrp
div
push
test
mov
add
movsl
add
fistpll
sti
outsl
jmp
fdivr
loopne
or
push
cltd
mov
addl
orl
int3
movsl
cmp
add
orl
int3
sti
mov
push
ljmp
jmp
insb
and
push
orl
jg
adc
adcl
int
out
mov
outsl
pop
xchg
adc
mov
dec
rcrl
adc
xstore-rng
cmpsl
mov
jno
popf
ret
cwtl
inc
enter
push
fistpll
mov
jmp
aad
fisttpll
pop
sbb
rorl
add
ret
pop
rolb
shrl
xor
push
adc
aam
push
inc
jl
mov
pop
sbb
lret
hlt
xchg
xor
add
das
xchg
mov
shlb
pop
add
imul
sub
mov
js
lock
inc
add
fsubr
mov
xchg
jge
and
xor
into
movsb
xor
mov
inc
sbb
testb
cli
mov
cld
stos
inc
nop
fcom
add
inc
and
lods
stos
adc
mov
add
in
push
and
stos
test
lock
push
mov
into
jle
mov
dec
xorb
outsb
mov
clc
dec
lea
cli
mov
adc
call
inc
test
repnz
adc
lea
je
add
pop
into
sub
add
clc
jg
arpl
lock
add
bound
or
dec
add
mov
loopne
testl
dec
or
in
mov
roll
jmp
imul
pop
or
data16
dec
inc
pop
ljmp
roll
inc
cli
std
scas
sub
add
or
ret
call
sub
mov
gs
push
or
jmp
mov
aam
mov
jnp
in
and
je
jp
mov
or
cld
inc
aas
mov
fwait
or
out
cmp
sub
or
call
add
ret
sbb
test
in
mov
adcl
inc
mov
add
je
push
mov
add
mov
add
push
pop
int3
push
xchg
inc
pop
fstpt
jecxz
lcall
aam
jle
mov
je
mov
or
lods
and
add
pop
call
add
fimull
push
roll
popa
or
add
je
jns
test
pusha
in
popa
xor
add
adcl
dec
sbb
ret
cld
sar
insl
lcall
lea
popl
mov
push
or
enter
dec
inc
andb
leave
test
movl
icebp
ret
sahf
mov
push
xchg
hlt
xorl
je
lock
das
dec
repnz
jl
ljmp
arpl
mov
fnstcw
dec
and
lods
jo
insb
inc
push
sub
sbb
loope
xor
je
xchg
mov
mov
shr
adc
jp
mov
mov
cld
dec
loope
pop
pop
dec
outsb
or
inc
mov
call
mov
pop
jne
test
add
xor
pop
aad
mov
mov
xor
mov
pusha
jmp
arpl
test
adc
add
fildl
add
sahf
pop
stos
mov
pop
inc
push
push
xchg
shlb
xchg
sub
add
sbb
insl
adc
jecxz
mov
in
mov
add
mov
shrb
in
stos
inc
and
push
call
add
xor
mov
push
push
lcall
scas
cmp
lock
scas
popf
nop
pop
clc
je
mov
push
xlat
mov
hlt
cld
ljmp
mov
rorb
adc
cld
xchg
mov
lcall
pop
sbb
adcb
js
call
jne
sub
enter
int3
or
or
add
xor
ds
ja
sbb
jb
mov
add
jl
loopne
dec
mov
xor
adc
roll
dec
push
mov
fsubs
stos
or
fimull
dec
mov
add
sub
add
pop
cs
adc
push
cltd
ds
test
mov
jno
out
jecxz
imul
push
imul
inc
rcl
push
sub
ficompl
aad
clc
arpl
je
fimuls
mov
jb
stos
bound
movsb
and
dec
and
xor
in
daa
cmp
rcll
stos
cs
decb
adc
fs
mov
imul
push
inc
testb
jle
jle
and
inc
cltd
dec
push
sbb
in
rclb
add
sub
mov
lods
popa
test
mov
xor
call
push
jb
shlb
fldt
xlat
lret
test
add
dec
push
js
push
test
add
add
fdivrs
stc
lock
xor
mov
jmp
mov
fdiv
aas
popa
mov
adc
add
gs
movsl
jo
mov
mov
adc
orb
mov
jae
sub
js
lret
icebp
cmc
int
faddl
dec
jge
push
ljmp
cmp
test
stos
push
push
and
je
inc
pushf
gs
add
push
mov
mov
insb
add
adc
cmp
cld
inc
shrl
lock
and
inc
and
out
cmp
and
fldt
mov
in
cmpl
clc
scas
inc
into
call
inc
gs
add
aam
lea
or
lock
cld
shrb
sub
clc
xor
or
orl
adc
lock
xorl
rclb
incl
mov
xchg
sbb
shlb
inc
clc
ret
pusha
mov
or
nop
push
or
ljmp
sbb
cmp
clc
sub
xchg
aas
and
jg
loopne
inc
or
test
ds
cmp
test
aaa
or
add
add
or
or
insb
or
sub
xchg
js
jb
test
ljmp
loope
addl
cltd
fs
xchg
push
adc
movsb
or
dec
sub
faddl
cli
adc
inc
lock
orb
fldcw
push
inc
xchg
in
or
mov
pop
dec
data16
aaa
icebp
sbb
cmp
cld
adc
add
sti
pop
adc
sub
inc
notb
leave
ds
pop
mov
inc
pop
inc
loopne
xor
lret
add
cs
adcb
cld
mov
call
adc
jge
pop
adc
cmc
jl
push
adc
clc
mov
ret
rcr
sub
lock
adc
push
add
gs
sbb
mov
into
rclb
rorl
ljmp
dec
push
or
loope
xor
rolb
xor
sbb
mov
sbb
adc
jg
subb
xor
xchg
clc
xor
inc
call
cmc
lcall
adc
into
push
sub
call
sub
andb
mov
add
enter
adc
mov
data16
jecxz
stos
cmp
pop
push
lock
shrd
cmpsb
aad
gs
and
sub
lock
aas
sbb
mov
add
sbb
or
cmpsl
lock
mov
mov
mov
add
push
adc
jae
sbbb
pcmpeqw
mov
leave
push
adc
xor
test
jle
rcrl
pop
lock
aas
and
pushf
leave
add
jae
jne
lds
sub
pop
xor
clc
sysenter
add
sub
and
fiadds
add
jmp
and
lods
adc
mov
adc
test
out
add
cmovp
dec
ljmp
add
xchg
clc
lods
or
rcr
sub
mov
jle
icebp
bound
jo
in
push
outsb
mov
cmpsb
rorb
aas
pop
xchg
jae
inc
or
dec
fsubrl
add
pop
sarl
push
adc
sti
push
jmp
inc
or
push
int3
cmp
incl
lds
or
dec
js
cmp
nop
cmc
sub
ret
add
into
cmpsb
adc
push
sti
fs
mov
adc
insb
push
add
xor
dec
or
in
jmp
int3
xchg
jg
mov
cmp
pushl
pop
mov
mov
or
inc
in
xchg
icebp
movsl
mov
xchg
xor
sub
cmp
push
mov
mov
dec
inc
mov
clc
rol
ret
push
cs
xchg
sbb
xor
orb
add
push
outsb
push
imul
mov
jmp
mov
sub
gs
xor
jb
xor
xchg
cmp
add
inc
push
add
test
inc
mov
cli
rclb
sub
icebp
iret
fsubl
cli
add
jo
cmp
loop
insl
add
out
mov
adc
out
std
mov
int3
daa
scas
cmpsl
and
int3
jp
in
mov
add
enter
xor
sbb
or
aas
cld
fsts
jp
enter
rcrb
bound
sub
push
in
xchg
jp
jecxz
insb
movsl
cmp
ds
or
or
cld
insb
xchg
adcb
xor
dec
adc
or
xor
push
dec
jp
jb
and
xor
in
push
lock
xchg
rolb
ficoml
inc
adcb
dec
ds
and
cli
movsb
sbbb
movsl
adc
mov
and
and
adc
cmpsl
ss
in
mov
push
jae
jne
dec
data16
mov
adc
das
mov
cld
out
inc
mov
insl
mov
push
push
stos
cmpsb
mov
mov
adc
orl
and
mov
adc
mov
pushf
inc
mov
inc
add
jbe
xchg
inc
lahf
xchg
xor
sbbb
clc
inc
sub
mov
adc
mov
or
mov
mov
add
pushl
cmpsb
or
arpl
or
mov
sahf
jae
or
shrb
xor
test
mov
movl
cli
or
xchg
xchg
add
pop
pop
arpl
pusha
pop
call
push
mov
xchg
loopne
lcall
sub
rcrl
push
dec
je
cmp
lahf
rorb
cld
test
shll
pop
add
or
xor
aam
push
add
movsb
push
test
jle
je
std
int
js
adc
sbb
push
add
cmp
ret
fildl
lret
or
jb
test
mov
dec
sbb
int3
sar
dec
mov
push
inc
cmp
outsb
jne
call
push
mov
sbb
add
pop
movl
dec
push
or
adc
pusha
fdiv
adc
or
mov
adc
push
je
out
add
or
inc
push
xchg
aas
in
mov
mov
je
pushf
fmull
test
ds
jle
pop
lock
movsb
cmp
pop
loop
jnp
mov
shrb
xor
je
mov
movsl
mov
fsubs
sub
sub
add
mov
loop
addb
andb
push
xor
data16
call
sarb
sbb
xor
jb
out
adc
popa
adc
es
dec
inc
nop
call
adc
xor
push
addr16
lcall
es
xchg
loop
fidivrl
push
mov
js
and
inc
cld
sbb
jbe
or
jmp
pop
sub
ljmp
adc
imul
jg
cmp
dec
mov
inc
inc
jmp
sbb
aaa
call
aaa
dec
xor
cmp
ret
push
sub
call
jo
in
lcall
clc
cmp
nop
mov
and
dec
mov
mov
push
std
push
fnstcw
add
cmpb
scas
sub
sti
cld
jmp
mov
or
aaa
std
add
test
imul
pusha
dec
repnz
lret
mov
imulb
hlt
or
fdivrl
mov
push
mov
xor
jp
or
dec
xchg
add
add
fdivrp
outsl
mov
xchg
je
sub
inc
dec
clc
out
cs
das
lcall
js
fisubrl
xor
loopne
add
xor
push
aam
sub
fimuls
xchg
cwtl
sbb
adc
mov
push
inc
aaa
cmp
add
rcrl
add
inc
mov
add
ja
fidivrl
adc
jmp
shl
pushw
outsl
inc
cld
mov
push
add
test
mov
shlb
jmp
pop
and
sub
into
mov
mov
std
jge
scas
add
aam
adc
movsl
lods
aam
insb
xlat
decl
lret
push
test
cmpsl
insb
dec
mov
push
mov
inc
add
cld
push
sub
cld
xor
dec
push
jmp
push
sub
cwtl
xor
add
sub
mov
inc
inc
adc
mov
test
out
test
cmpb
enter
lods
xchg
cs
push
pop
icebp
aaa
mov
adc
hlt
add
mov
call
mov
mov
mov
inc
ud0
sbb
lods
mov
call
mov
lock
mov
outsl
mov
lcall
bound
int3
out
pop
pop
lock
xor
jbe
xchg
cmp
mov
sbb
push
mov
push
add
xor
mov
sbb
fbld
sbb
dec
push
cld
add
rcrb
fdivs
mov
std
sarl
adc
xor
xchg
ljmp
icebp
xor
add
sti
adc
cmp
dec
jae
xchg
lret
inc
cmpsl
pusha
shr
jle
cmp
cld
mov
andl
mov
inc
test
aad
stos
jae
ret
insb
stc
add
call
adc
dec
xchg
dec
int3
mov
shrb
add
inc
scas
adc
mov
xor
add
fdivrs
add
gs
cs
xchg
rolb
hlt
fwait
lea
mov
aas
xchg
add
fildl
jb
sub
push
daa
in
loope
mov
pop
dec
inc
inc
sti
jb
adc
es
and
push
test
and
adc
dec
push
push
loopne
lock
rcl
push
inc
jl
mov
xchg
sub
xchg
or
mov
mov
movsb
rorl
or
adc
xor
cld
addr16
push
and
mov
shlb
subb
mov
add
push
and
sub
push
mov
sub
pusha
inc
mov
sbb
fst
addr16
js
sub
rcll
inc
or
inc
mov
je
arpl
loope
mov
lret
or
stc
inc
dec
les
dec
or
pushw
sub
jp
scas
push
lcall
mov
and
jmp
push
enter
int3
in
push
mov
mov
inc
push
adc
loopne
push
pop
add
push
ss
xor
fbstp
clc
das
push
or
adc
mov
mov
mov
rcr
mov
hlt
pop
mov
inc
and
pop
shrl
push
int3
or
bound
add
test
push
std
cwtl
dec
push
cmp
bound
mov
sar
das
mov
daa
cmp
lret
xchg
mov
sbb
jb
push
jl
call
cmpsb
cmovb
cmpsl
test
ret
rcl
in
inc
and
xor
ss
rorb
psubw
mov
xchg
repnz
rorl
and
mov
cmp
dec
mov
mov
aaa
aas
fdivrs
cwtl
lds
sub
lahf
decl
push
icebp
and
dec
je
loopne
mov
lret
mov
sub
pop
adc
sub
gs
call
in
push
dec
outsb
in
scas
fcomps
rclb
pop
aas
add
mov
jle
mov
add
in
out
sbb
je
add
insl
insl
push
mov
push
mov
cmpsb
add
lock
cmpsb
incl
add
out
add
xor
xlat
adc
pop
add
mov
gs
fsubr
add
sbb
mov
dec
ffreep
pop
push
mov
test
mov
shll
mov
icebp
call
addl
ret
add
push
shlb
inc
push
enter
xor
xorl
mov
sbb
xor
insl
in
sbb
push
xor
inc
add
pop
out
push
adc
push
sbb
push
push
pop
je
inc
cld
and
pop
adc
push
es
rol
bound
pop
pop
sub
rorl
dec
js
jmp
push
mov
addr16
out
jo
je
lea
or
xchg
lcall
loopne
pop
outsb
and
push
or
mov
or
mov
pushf
add
xchg
mov
cld
adc
testb
ret
cmc
xor
push
call
addl
call
xor
sub
mov
test
lock
sahf
je
sahf
loopne
test
call
sahf
and
adc
jbe
clc
call
or
pushf
xor
ds
out
call
bound
dec
sbb
dec
repnz
pop
js
scas
add
lock
adc
push
out
xchg
xchg
adc
enter
inc
sub
arpl
mov
adc
inc
pop
cld
cmpsl
ret
inc
push
add
inc
cmp
add
outsb
jbe
ret
inc
and
addb
add
popl
jnp
pusha
add
push
fdivrs
xor
and
lods
adc
inc
xor
subb
mov
fiaddl
loopne
add
xchg
dec
dec
loope
and
icebp
pop
cmp
push
push
loope
lcall
xor
mov
mov
pop
shlb
mov
je
inc
inc
push
sahf
or
test
orl
jmp
xor
or
push
rorb
sbb
mov
xor
pushf
xchg
cs
lock
int3
and
pop
and
mov
movsl
pop
xchg
sbb
adc
sbb
jo
out
cmp
or
add
jbe
jb
hlt
xor
adc
sbbb
test
cmp
aam
mov
hlt
popa
mov
adc
lock
int
dec
in
xorl
or
add
dec
cmp
and
inc
dec
nop
jb
pusha
andl
enter
out
hlt
std
test
inc
or
ss
push
fimuls
cld
xor
mov
hlt
xchg
push
lock
cmp
add
nop
jae
push
clc
aaa
rorb
les
sbb
orb
cmp
inc
dec
pop
loopne
and
or
bound
cvtps2pd
adc
scas
push
fs
lods
sub
addr16
dec
scas
fidivrl
push
aas
in
push
xor
push
jb
mov
mov
in
adc
aas
into
std
ljmp
or
in
mov
mov
lcall
mov
stos
push
add
add
mov
shl
mov
gs
cld
sub
add
fldenv
test
test
sbb
xor
mov
je
add
mov
outsl
sar
fdivs
add
add
and
mov
mov
inc
add
rclb
js
xor
rcrb
dec
test
push
js
adc
dec
inc
mov
xor
bound
les
les
shrl
xorl
nop
je
call
dec
cmp
scas
leave
inc
enter
ficompl
inc
loope
add
fiadds
arpl
jmp
adc
loopne
add
push
jle
and
adc
pop
movb
and
js
stos
lds
xor
adc
jmp
sbb
repz
into
sbb
sti
push
je
or
lock
adc
mov
es
clc
gs
or
add
add
inc
shlb
mov
xor
outsb
jmp
sbb
movb
adc
cmp
jg
stos
jbe
mov
int3
inc
test
xor
call
jae
ret
push
jne
xchg
add
fidivrs
int3
call
add
adc
lock
ds
jne
aam
push
movsl
sbb
es
cmp
or
inc
xor
mov
xor
mov
pop
scas
sub
fbstp
push
xor
cmp
fisubs
add
je
xchg
mov
cmc
cmp
insl
inc
ljmp
or
test
inc
add
mov
outsl
dec
imul
inc
xlat
adc
adc
stos
stos
ret
call
test
push
fwait
add
call
adc
insl
adc
cmpl
add
dec
and
pop
and
pushf
sub
dec
or
or
imulb
xchg
std
out
sbb
mov
cmp
clc
push
mov
mov
jle
dec
mov
into
rorb
dec
adc
fnsave
out
int3
orl
cmp
pop
pop
mov
icebp
mov
sti
in
jl
shl
xchg
inc
push
incb
cwtl
test
and
lret
jle
cwtl
pushf
ds
add
ja
mov
scas
mov
or
cmpsb
call
test
cmpsb
dec
lea
rclb
ds
adc
ret
pop
cli
jmp
lock
rolb
push
dec
add
notl
inc
push
rolb
adc
mov
jne
xchg
outsb
std
or
sahf
push
adc
and
push
je
pop
push
push
and
cmovge
xchg
jbe
cmp
int3
leave
adc
stos
mov
cmpsb
sub
scas
int3
cmp
sub
inc
jl
aas
lea
mov
inc
adc
incl
leave
inc
xor
fstpt
inc
outsl
xorb
push
ret
ret
jp
or
test
push
mov
pop
inc
fmull
sub
sbb
in
rorl
test
xor
sbb
repz
ds
int3
imul
lret
in
les
out
loope
addr16
mov
inc
shlb
pop
testl
or
pop
jbe
mov
jecxz
call
fs
call
push
mov
loopne
jne
jne
push
cmp
add
je
ds
pop
call
jo
das
cmp
and
std
cmp
sarb
test
ficoms
or
mov
aaa
pop
pushl
inc
aam
lea
adc
sbb
pusha
call
dec
inc
pusha
and
mov
fwait
cmp
pop
test
mov
int3
loopne
cs
mov
gs
jns
aam
push
xor
mov
int3
sub
dec
call
sbb
push
or
dec
and
gs
xor
push
jmp
jmp
je
mov
add
sub
xchg
adc
cmp
lcall
sub
xchg
add
cmpb
push
xchg
cmp
int3
js
fcoml
sbb
add
clc
add
dec
clc
push
ficomps
adcl
bound
test
mov
cmpsb
xor
xchg
mov
xorl
mov
outsl
gs
xchg
dec
lcall
cmpsb
pop
jne
out
jmp
or
push
or
jle
cmpsb
xchg
data16
xchg
fadds
sbb
repnz
hlt
ljmp
incl
dec
daa
mov
data16
lret
mov
mov
incl
cmpsb
mov
pop
add
test
push
cld
cmpsl
xchg
dec
pop
mov
int3
clc
adc
scas
ret
popa
add
cwtl
mov
adc
mov
fs
es
add
int3
mov
stc
adc
inc
pop
pop
or
add
hlt
in
xor
mov
jae
std
test
shlb
fs
aam
inc
scas
dec
mov
xor
inc
push
insb
popa
and
pushf
mov
push
pop
or
xor
pop
scas
push
pop
jae
aam
push
mov
push
mov
enter
add
pop
lea
push
pop
int3
xchg
mov
push
adc
xor
fdivs
pop
push
js
mov
add
cmp
push
test
adc
adc
repnz
in
inc
jo
xor
inc
push
out
cmp
jb
inc
dec
gs
push
cmpsb
push
inc
push
push
addb
lea
loop
xor
loopne
test
or
adc
push
daa
mov
cmp
adc
cmp
cli
inc
mov
ss
test
enter
jp
add
pop
push
sbb
pop
test
adc
push
jecxz
jmp
loopne
lods
adc
insb
add
fmuls
ljmp
adc
aaa
mov
rcrb
repnz
test
pop
inc
mov
test
cmp
sarb
and
push
dec
or
lock
add
jp
fadd
data16
in
mov
push
fnsave
imul
add
cmc
stos
addr16
mov
xor
mov
sbb
jbe
or
dec
loopne
add
and
adcb
xor
shlb
outsl
mov
or
mov
mov
push
lock
leave
or
add
bswap
add
mov
call
aas
adcb
push
out
fiaddl
push
test
pop
adc
mov
je
incb
add
dec
sub
dec
inc
cmp
in
mov
dec
pop
movsb
lea
ds
mov
sahf
push
dec
sbb
mov
loope
adc
pusha
add
dec
mov
test
jmp
dec
push
cmp
fsubl
addl
mov
popa
cvtpi2ps
mov
cmp
sub
std
pop
add
xorps
pop
or
fstpl
aam
sbb
sarb
cld
dec
and
mov
push
inc
adc
jge
xchg
mov
pop
shlb
inc
fmulp
or
mov
test
or
lea
lock
das
push
outsb
cs
push
and
cmc
rol
and
xorl
inc
testl
sub
push
insb
lcall
adc
outsl
orb
add
lret
aas
lcall
lock
fisubs
mov
inc
cmp
xchg
mov
add
mov
test
xor
out
int3
push
rorb
and
sbb
pusha
xchg
std
push
push
inc
out
add
je
xor
sahf
mov
sub
xor
data16
fs
inc
xorl
xor
frstor
sbb
pop
or
push
pop
orb
mov
cli
bound
sub
test
inc
jae
push
popf
ss
cwtl
mov
dec
cmp
dec
std
ret
adc
cmpsl
add
pop
hlt
jne
mov
mov
or
jnp
ss
addb
outsl
xor
jae
dec
sti
ds
pop
icebp
fwait
mov
jmp
mov
add
cmp
call
call
dec
dec
lcall
adc
pop
scas
ss
dec
test
xor
jbe
repnz
fsubs
push
mov
jo
push
adcb
gs
cmp
aam
fmull
sub
inc
push
mov
xor
call
scas
push
and
call
push
aas
imul
cs
jmp
pop
mov
ficoms
stos
aad
loope
add
je
mov
addl
mov
cmp
in
xchg
cwtl
shlb
sub
gs
out
mov
mov
cld
push
cmp
pop
fdivs
add
out
int3
out
incl
stos
add
push
or
mull
mov
fldl2e
and
ficomps
jge
lahf
or
xchg
push
push
push
and
fwait
mov
lea
jle
aaa
pusha
push
repnz
push
mov
popa
scas
add
rorb
push
jle
lret
leave
xor
xor
mov
shl
cmpsl
jl
xchg
sub
push
or
push
faddp
outsb
fiaddl
insb
rol
or
test
jp
sbbb
sbb
cmp
inc
dec
test
pop
fiadds
push
fcoml
adc
lret
shlb
or
mov
jbe
movsb
xor
or
das
stos
js
jo
clc
sbb
fisttpl
inc
outsl
ljmp
enter
ret
xor
mov
xchg
bound
xchg
ds
push
cmp
mov
imul
cmp
cld
loopne
call
ljmp
femms
pusha
insl
inc
adc
sub
sti
cli
push
ret
int3
movb
sbb
outsl
jecxz
cld
fdivrl
test
xor
push
mov
dec
cmp
out
xchg
jb
rcrl
test
mov
outsb
add
xor
sub
sbb
push
int3
fs
fcmovbe
imul
lods
push
cmpsb
ret
inc
mov
adc
daa
std
imul
mov
lock
pop
pusha
test
and
pop
add
scas
jbe
push
sub
insb
lea
inc
aas
rorl
in
je
push
and
sub
mov
dec
in
xchg
jne
sub
in
les
jle
ud0
and
xor
or
and
js
sub
in
xchg
hlt
repnz
adc
movb
pop
jns
cmp
shl
in
loop
cmp
push
pop
mov
push
mov
arpl
push
hlt
in
jo
pop
mov
mov
jl
lods
xor
inc
xor
ds
and
add
ljmp
movsb
pop
sarb
jmp
push
xorl
adc
in
rclb
adc
xchg
pop
and
dec
mov
sbb
test
imulb
pop
mov
repnz
loopne
fs
out
test
enter
test
stc
sbb
xchg
xor
jl
call
cmp
cld
jae
mov
cs
mov
adcb
enter
dec
xorb
push
cltd
xchg
xor
xchg
mov
shlb
push
xor
jbe
sbb
mov
fisubrl
cmp
adc
cmp
xor
jo
rclb
test
jne
dec
add
xchg
fidivl
outsl
fsts
paddw
lcall
js
enter
push
adcl
mov
js
add
pop
insl
loopne
je
sti
inc
pop
dec
test
mov
out
sub
fcmovb
inc
pop
testb
xor
lods
jle
in
mov
mov
ljmp
test
pop
xor
jb
in
sub
mov
sub
or
ja
inc
adc
add
sbb
mov
enter
movb
rolb
or
sbb
test
dec
and
aas
mov
add
adc
test
fmull
movb
vpsrld
push
xchg
adcb
outsb
adc
fmul
jp
roll
ja
loop
fnstsw
fidivrl
pop
test
int3
cs
dec
pop
sub
mov
xor
adc
mov
adc
popf
aam
gs
ljmp
dec
jmp
call
mov
and
arpl
adc
lock
mov
xor
jmp
cmc
xchg
mov
mulb
push
cmp
scas
push
loope
and
and
lock
or
pushl
pop
or
xor
fidivs
lock
sti
xchg
shlb
inc
stos
jne
test
pop
repz
mov
dec
sub
sahf
les
out
jne
dec
adc
jno
push
dec
insb
sub
add
fadds
in
sbb
movb
fldl
inc
test
mov
fsubs
cmp
inc
loop
adc
dec
adcl
inc
nop
outsb
and
ss
imul
adc
stc
xchg
or
push
aam
les
push
ret
mov
cmpb
les
ret
bnd
mov
or
sahf
cmp
pop
mov
and
or
movsl
add
cmpsb
int3
lea
shlb
inc
cmp
mov
in
xor
mov
sub
inc
mov
sub
or
loopne
mov
mov
inc
nop
add
add
mov
dec
js
imul
push
push
add
add
inc
ret
and
add
pop
lcall
mov
inc
mov
imul
xor
push
sbb
mov
add
insb
mov
or
add
test
mov
push
pop
dec
testb
fistl
mov
nop
cs
rclb
or
dec
loop
or
scas
dec
xor
ljmp
dec
rorl
je
sbb
dec
inc
xchg
mov
push
lret
fs
shl
jo
xchg
add
test
push
sbb
lock
pop
sub
lock
inc
lds
in
div
out
push
dec
ror
out
add
or
pop
inc
roll
fucomi
clc
xor
push
fcmovbe
xchg
adc
cli
jge
dec
mov
pop
fsubs
add
scas
xor
fidivs
cs
sub
mov
xchg
sub
mov
adc
jle
sub
jae
int
push
mov
pop
add
adc
ficoms
test
adc
gs
xchg
and
adcb
pop
adc
push
adc
je
loope
adc
sub
ljmp
repz
pop
dec
lea
aaa
cld
inc
aam
dec
jne
incl
adc
out
cld
push
or
dec
inc
imul
in
push
inc
loopne
or
iret
lret
popa
add
fcomps
xchg
mov
push
mov
adc
stos
mov
int3
and
push
sbb
imul
in
xchg
idivb
sub
dec
ds
cmc
cmp
lcall
addb
or
add
call
popa
incl
scas
pusha
push
ds
inc
fadds
or
call
scas
test
insb
and
mov
mov
dec
mov
push
dec
movb
scas
mov
sbb
in
push
in
jle
popf
sub
loope
or
mov
push
mov
xchg
sbb
jb
pop
xorl
pop
inc
jg
mov
push
inc
in
jge
jb
movsl
movd
fcompl
incb
dec
outsl
fwait
mov
lock
inc
mov
fildll
jo
fs
orb
test
or
lods
loopne
ret
sahf
dec
xchg
xchg
ss
push
push
je
mov
inc
sbb
clc
icebp
out
add
mov
cmp
jecxz
pop
cmp
pushl
mov
pushf
jl
and
aaa
xor
xor
push
jge
mov
dec
loopne
xchg
jbe
inc
loope
lea
sbb
lahf
adc
nop
aam
or
ret
mov
jo
add
push
xchg
dec
out
sarb
js
adc
jl,pt
adc
sbbb
ret
pop
dec
sub
mov
out
stos
je
aad
ret
sti
out
add
fwait
jne
imul
jne
xchg
out
lret
popa
cmp
add
sahf
imul
stos
fmuls
cmp
push
or
pop
push
jno
xchg
jp
inc
loope
mov
and
adc
sub
mov
pop
stos
xchg
and
fs
dec
int3
ds
out
push
lock
lea
sub
push
mov
andb
xchg
mov
sub
add
and
outsb
arpl
stos
jmp
sbb
or
mov
shlb
loopne
ljmp
sbb
or
jmp
es
in
fadds
addl
add
int3
scas
or
mov
loopne
fs
hlt
push
mov
les
mov
add
sbb
inc
addl
pushf
jmp
pop
add
imul
mov
lret
mov
dec
pop
movsb
nop
pop
push
out
push
pusha
adc
fs
fsubl
add
mov
xor
mov
shlb
fstps
lret
movb
sbb
mov
inc
push
mov
push
test
xor
insl
xchg
jp
and
add
ficompl
out
or
or
jg
add
adc
in
or
lea
fwait
test
mov
or
cmp
clc
fs
mov
pop
inc
loop
std
mov
orb
inc
add
mov
or
inc
loope
xor
sar
mov
mov
add
sub
aam
fildl
push
mov
mulb
xlat
inc
les
push
aaa
cld
rcl
mov
orps
cmp
mov
mov
mov
test
mov
mov
scas
add
ja
pop
ficoms
adc
inc
xor
clc
sbb
aad
and
mov
cmc
out
loop
dec
xor
mov
icebp
cmp
mov
call
pop
fwait
mov
mov
inc
inc
mov
out
inc
cmp
cld
jg
cmp
std
stc
jb
dec
add
or
xchg
inc
cld
push
jne
push
call
or
out
js
mov
repz
into
callw
dec
and
adc
push
mov
mov
jmp
mov
sub
loope
sarb
cmpsb
gs
mov
xor
movswl
iret
mov
pop
xor
mov
pop
inc
jp
outsb
xchg
and
lret
push
pop
loopne
fsubs
sbb
push
jmp
aam
and
rcl
sbb
or
cmp
jl
adc
scas
mov
mov
loop
pushl
je
imul
loope
push
add
or
pop
das
fsubs
dec
cs
pop
add
into
jbe
mov
jne
imulb
je
push
jo
push
popf
and
sbb
leave
pop
pop
aaa
leave
call
adc
or
test
cmp
add
out
dec
incb
ss
push
mov
jne
int3
add
call
out
hlt
orl
add
push
mov
dec
adc
push
int3
jo
xor
lock
hlt
and
cmp
icebp
adc
adc
lods
xor
addl
verr
inc
pop
push
je
movsl
hlt
leave
xor
test
andb
popf
inc
push
or
pop
out
or
out
adc
ret
insb
mov
call
cmp
cs
mov
add
cmp
jbe
xchg
add
pop
sbb
pushw
xchg
jg
pop
and
pushf
movsb
out
ljmp
adc
adc
or
imul
lcall
xchg
gs
mov
pop
orb
divb
adc
jl
xchg
push
mov
sub
and
push
and
fs
add
pop
lock
ficomps
push
or
mov
inc
jmp
in
jge
inc
push
mov
mov
outsl
jl
push
fisubrl
pop
mov
subl
add
pop
mov
cmpsl
and
mov
fwait
push
or
mov
andl
dec
in
filds
in
push
mov
fnsave
popa
cwtl
mov
cs
ds
pop
mov
dec
fsubrs
xor
adc
loope
call
aas
int3
inc
hlt
mov
push
push
push
dec
dec
sub
inc
add
add
dec
push
decl
andl
jb
rclb
pop
jl
jmp
pusha
push
push
xchg
mov
bound
das
sbb
lock
cmp
xchg
cmp
out
fxch
mov
loopne
mov
mov
in
ja
push
add
pop
xchg
inc
jo
dec
jge
cmpb
rorl
sub
jae
cwtl
and
ret
mov
and
dec
fadd
adc
pop
add
fcmovbe
cs
cmc
hlt
arpl
outsl
push
adc
mov
divb
jne
lock
aas
add
test
mov
push
rorb
pushf
test
sbb
jl
jmp
push
test
and
cld
adc
jp,pt
adc
data16
jmp
aas
add
inc
jmp
int
add
sub
sub
or
lods
sarb
xchg
jge
dec
and
pusha
pop
push
mov
push
cmp
inc
imul
sub
mov
adc
or
or
fadds
enter
push
shlb
lea
xor
in
xor
idivl
dec
adc
stc
cld
or
adc
jbe
xor
in
pop
mov
add
js
xor
xor
add
fdivs
test
out
loope
shrl
sbb
push
push
xchg
push
je
push
in
push
add
insb
sbb
into
push
jb
mov
inc
cmpsb
sbb
inc
sub
sub
cld
aam
faddl
or
and
inc
push
out
jmp
add
or
pop
cmp
jne
in
pop
ljmp
aaa
fnsave
leave
js
mov
enter
mov
adc
fs
xor
push
adc
ds
mov
andb
insl
adc
cmpsb
or
test
add
xor
push
push
rcl
pop
decl
imul
adc
xchg
and
inc
ret
mov
je
hlt
clc
stos
cli
xchg
data16
test
cmp
fiaddl
sbb
in
test
pop
xorb
add
and
push
xchg
test
into
insb
cmp
dec
xor
sbbl
push
push
test
clc
sbb
dec
rol
push
sub
push
insb
jl
push
outsl
cli
fmull
cld
push
or
jg
jp
cwtl
pusha
sar
mov
sub
dec
push
scas
or
sbb
sar
cmp
push
mov
jne
add
outsb
fildll
loop
pusha
mov
nop
loopne
pop
mov
incl
ja
add
ss
xor
or
push
pop
pop
mov
mov
or
sbb
lock
mov
push
or
loope
rorl
sub
mov
imul
sti
ret
adc
mov
push
dec
add
cmp
loop
dec
add
push
sub
rep
mov
add
and
cmovl
mulb
loope
add
sbb
rolb
sbb
js
ja
or
pop
jne
dec
testl
and
jge
sarb
mov
lea
push
mov
add
js
xor
push
mulb
sti
lea
mov
inc
inc
icebp
rorb
xchg
daa
hlt
add
cmp
mov
jbe
loope
jo
jmp
sbb
adcl
push
mov
dec
add
adc
arpl
je
jp
pop
cmpsl
jo
in
adc
notl
and
mov
adc
add
xorl
or
cs
enter
push
push
js
push
aam
push
cmp
das
nop
fmull
inc
mov
ret
push
les
adcl
mov
pop
fidivrl
push
mov
jg
or
dec
push
push
mov
cmp
leave
in
jge
pop
mov
adc
push
mov
push
clc
sub
xchg
movsb
popa
push
mov
stos
adcl
pop
insb
push
dec
mov
add
mov
call
cmp
sub
pusha
mov
je
mov
add
push
push
push
jb
push
mov
mov
inc
out
mov
loopne
mov
pop
icebp
les
add
movsb
mov
lea
out
xor
pusha
daa
icebp
lock
lahf
subl
lea
fwait
test
shr
pusha
out
xor
sub
jb
incl
push
dec
xor
cld
fcompl
or
fisttps
daa
jne
sbb
aam
fbstp
incl
inc
adc
mov
sbb
or
jp
dec
clc
add
in
dec
lret
call
aaa
pop
push
pusha
or
inc
shlb
lcall
ds
shlb
inc
mov
push
push
jnp
imul
lahf
fs
add
jmp
or
dec
js
mov
lock
push
mov
cwtl
dec
add
sbb
mov
inc
fucom
or
sub
sbb
popa
add
fistpl
cmp
stc
psllw
fcomps
int3
jne
and
xor
pop
mov
enter
inc
filds
mov
xchg
cmp
test
data16
repz
push
adc
or
lock
inc
jnp
pop
xchg
lret
lcall
jp
mov
inc
add
dec
dec
mov
mov
jge
jp
cmp
add
cmpsb
and
pusha
test
xlat
fwait
mov
push
subb
dec
mov
inc
pop
jl
lock
cmp
xor
divb
adc
ljmp
in
loop
push
lea
pop
mov
es
inc
push
outsl
adc
scas
je
jmp
decl
mov
adc
addl
mov
and
addb
lcall
add
or
gs
inc
shl
fadd
and
repnz
jmp
jmp
add
push
mov
sbb
sbb
cld
sub
cmp
inc
push
add
xor
clc
dec
ret
ror
dec
push
xor
lock
aam
scas
or
out
std
bound
pop
inc
inc
xor
test
fs
xor
jno
add
inc
jb,pt
and
and
xor
mov
push
sbb
push
daa
or
fnsave
inc
jnp
test
cmp
cmp
or
cmpsb
cmp
shrl
mov
sbb
mov
sbb
sar
jmp
add
dec
and
mov
xchg
cmp
mov
xor
xchg
sbb
mov
das
adc
or
cmp
jmp
pusha
gs
loope
leave
dec
push
mov
mov
inc
push
push
jo
mov
push
inc
mov
mov
sub
andb
icebp
add
insl
lret
mov
lea
lcall
aam
xor
xchg
jno
mov
test
mov
dec
pop
stos
mov
lods
jg
xchg
loopne
mov
call
cs
nop
mov
movsb
test
test
ret
test
mov
mov
pusha
cld
sarb
add
mov
movsb
sbb
xchg
add
add
sbb
and
lds
mov
aas
pop
iret
and
xor
ret
icebp
popa
sub
xor
mov
jmp
cltd
test
inc
mov
cmpsb
incb
clc
je
add
mov
pop
adc
jle
test
je
je
gs
xchg
test
lock
inc
cltd
popf
jge
add
dec
or
cli
ja
add
ss
mov
std
add
inc
imul
call
mov
fldt
sarb
jge,pt
ret
sub
jo
les
or
jb
mov
push
inc
mov
xchg
xchg
or
test
popa
and
sub
cmpsb
sub
add
add
ss
pop
and
and
test
rcrb
rorb
or
pop
test
aam
pop
mov
stos
xchg
or
bnd
mov
xlat
xor
mov
cld
mov
push
mov
fadds
or
xchg
mov
xchg
gs
push
lds
loopne
rol
sbb
jo
loopne
mov
xchg
push
sbb
jb
mov
cmp
mov
cmp
dec
jl
inc
cmpl
stos
fildl
pop
adc
ss
fdiv
es
pushf
pop
js
and
cmp
sub
adcb
xchg
inc
hlt
xchg
sbb
inc
mov
push
orb
stos
mov
aad
mov
orb
mov
jb
and
pop
xchg
mulb
es
sub
pop
movsb
sarb
es
mov
pop
out
xor
mov
mov
andb
loop
stos
testb
sub
adc
dec
call
inc
xchg
mov
aas
mov
cs
or
inc
pop
add
jp
inc
add
or
and
xchg
add
repnz
pop
shl
mov
out
or
and
sub
movsb
pop
inc
sahf
ljmp
inc
inc
or
mov
push
addl
push
ret
mov
sub
inc
stos
cmp
mov
add
lods
push
pop
xchg
pushf
inc
pop
fsub
pusha
sti
jmp
xchg
incb
inc
mov
jge
or
xor
dec
dec
int
xlat
adc
mov
pop
sub
adc
mov
les
jmp
lock
mov
jge
mov
cld
mov
fs
mov
push
push
fbstp
push
adc
cwtl
push
jb
or
rclb
push
add
add
push
fdivrs
sbb
mov
scas
cmc
mov
inc
fsubr
xchg
fnstenv
mov
fmuls
push
push
inc
mov
stc
and
or
mov
fcom
sbb
or
pop
jne
scas
sar
push
inc
test
test
rcll
fistl
jo
scas
or
jmp
aaa
stos
sub
sbb
call
insb
lret
or
out
dec
int3
jbe
sbb
roll
cli
or
mov
and
mov
dec
inc
ret
xchg
add
mov
jle
pop
shr
lock
xchg
mov
lods
push
jp
mov
cmp
push
mov
sub
movsl
cmpsb
push
aam
jg
add
cwtl
push
jb
lea
push
cmp
and
inc
xchg
sahf
rorb
xchg
pop
pop
out
test
decl
popa
int3
notl
sbb
outsl
jo
pushf
add
mov
pop
stc
or
addb
mov
add
mov
push
pop
inc
jge
test
mov
cmp
sahf
sub
out
sub
mov
push
call
mov
adc
xchg
ja
mov
stos
sbb
les
fidivs
mov
sbb
push
lcall
sbb
loope
sbb
or
inc
inc
pop
imul
inc
fldl
adc
popf
pop
pop
pop
add
decb
mov
inc
inc
aam
dec
es
pop
mov
cmpsl
aam
add
pop
rclb
xorb
loop
mov
cld
dec
lret
mov
data16
in
inc
xchg
push
push
jp
aaa
or
outsb
xor
mov
xlat
loopne
adc
sub
repnz
cmp
mov
adc
adc
xlat
pop
cs
out
or
aam
push
out
dec
or
mov
or
lea
push
loope
sub
and
outsb
add
nop
rclb
jp
fs
push
or
fs
jl
les
mov
adc
jo
sbb
fs
ret
lods
ror
aam
aad
or
inc
xor
mov
push
movsb
and
push
cmp
add
push
test
push
lret
sbb
xor
int
xlat
outsl
push
mov
xor
or
pop
pushl
mov
lret
lods
xchg
hlt
add
shrb
test
cmp
push
aam
rorb
xchg
popf
out
outsb
sub
idivl
popa
gs
sub
mov
add
shlb
jge
lock
stos
pop
push
jo
rorb
mov
dec
ljmp
ss
ja
out
fdivrs
cmpsl
xor
enter
movb
in
test
hlt
ss
in
mov
fcomps
movsb
sbbl
inc
add
push
in
fcmovnb
movsl
decl
inc
inc
idivb
scas
mov
scas
mov
rclb
ret
ss
jge
int3
into
stos
mov
cmp
test
je
mov
call
jg
add
pop
rclb
sbb
ljmp
cmc
je
pusha
mov
je
out
sbb
lret
in
in
test
xchg
xor
adc
cmpl
test
pop
fidivl
mov
inc
sub
xchg
xor
es
testb
xchg
outsl
jmp
in
jge
lea
jle
sbb
xchg
shl
cmp
jl
loopne
jl
inc
int
jo
mov
jno
mov
shlb
inc
add
cwtl
pop
ljmp
mov
jmp
cmpb
shlb
mov
push
and
ret
add
add
cmp
js
push
cld
stc
fwait
movsl
inc
daa
mov
xchg
pop
mov
loopne
imull
push
les
mov
loope
or
pcmpgtd
sub
jb
mov
mov
test
pop
pop
cmp
jp
data16
sub
cmp
test
loopne
inc
mov
sarb
rclb
add
push
adc
dec
in
jp
test
dec
fsubrs
test
push
lock
cmc
jo
dec
adc
and
bound
xchg
addb
xor
dec
mov
jb
mov
movsb
add
mov
or
push
mov
cmp
shr
jae
test
fcoml
xchg
out
cmp
gs
lret
mov
pop
mov
or
loopne
dec
and
pop
les
jecxz
adc
xchg
into
add
aad
lea
pop
es
add
sub
test
push
add
stc
pop
push
out
xorb
inc
das
mov
xor
inc
add
push
ret
and
mov
mov
xor
and
sbb
sub
fdivs
clc
loopne
inc
lret
add
enter
in
ret
mov
lods
fs
inc
imull
add
mov
add
or
lods
dec
cltd
sbb
push
jp
xor
sub
dec
mov
mov
xchg
mov
sub
fs
dec
push
ds
je
movsb
rcrb
movb
lock
and
scas
push
je
mov
js
fidivrl
sub
bound
cmpsb
inc
sbb
cmc
rolb
add
jb
call
mov
sub
repnz
stos
mov
call
inc
mov
sub
cli
pusha
mov
push
add
aam
adc
or
hlt
popf
ss
cmp
stos
test
jmp
and
test
icebp
jge
stos
sbb
jl
jecxz
adc
icebp
cmpsb
les
inc
incl
clc
dec
aas
adc
xchg
and
decl
push
in
add
lock
mov
xor
clc
jne
and
xor
les
jge
pop
adc
movb
push
mov
add
cmp
xor
scas
push
imul
test
dec
jb
mov
fisubrl
in
out
mov
inc
fsubrs
out
es
add
movb
push
cmc
xchg
in
push
xchg
imul
test
mov
or
divb
mov
enter
sti
repnz
aas
fprem
std
fadd
mov
sub
lea
les
aas
jb
je
fstps
test
or
mov
push
mov
test
data16
add
push
clc
popw
pusha
lods
add
sbb
push
adc
dec
mov
adc
stos
adc
sub
test
mov
and
push
pop
sub
mov
fldenv
lcall
cmp
lea
addl
pusha
scas
test
clc
scas
and
xor
mov
int3
loope
ja
sbb
dec
cltd
mov
out
js,pt
loope
pop
ret
lret
jmp
sbbb
fistpl
dec
or
rcr
xor
fsubrl
mov
loopne
cli
pop
jl
jmp
jbe
push
pop
or
divb
mov
push
xchg
lea
aas
insb
inc
xor
aam
movsb
ljmp
dec
in
shlb
add
add
clc
jge
rorb
push
pop
mov
jl
mov
inc
fmulp
push
add
push
mov
cmp
flds
push
cmc
outsb
stos
push
ja
ss
lahf
jne
inc
enter
xchg
imulb
cmpsb
jmp
in
push
pushf
lods
unpckhps
inc
or
cmpsb
pushf
rcrl
mov
int3
adc
aam
add
mov
mov
mov
fbld
sbb
sbb
inc
mov
test
pushl
stos
cmp
adc
jae
xchg
ljmp
ja
test
mov
mov
js
push
stos
mov
jmp
mov
bnd
jae
scas
jo
dec
pop
in
cmp
lock
sbb
lea
or
hlt
or
mov
xchg
clc
cmpsb
add
imull
enter
fdivr
mov
divb
push
adc
cmp
jns
xchg
xor
dec
test
fs
xchg
mov
adc
movsb
jbe
xor
rorb
cltd
stos
inc
xchg
daa
xor
lret
jg
push
mov
mov
push
inc
mov
pop
add
aaa
adc
adc
sahf
out
clc
gs
jbe
je
cmpsb
loopne
add
enter
dec
push
pusha
mov
dec
add
pushf
lock
das
outsl
add
je
mov
je
or
mov
rcrl
outsb
call
ret
scas
sbb
jo
fiaddl
push
sbb
test
xor
inc
test
fs
and
mov
pushf
sbbb
cmc
je
pop
push
fs
loopne
pop
scas
rcrb
enter
aam
incb
inc
push
mov
shll
sbb
icebp
fs
xor
gs
orb
pop
mov
add
pop
push
mov
imul
dec
movsl
test
orb
mov
or
mov
jmp
and
jnp
out
dec
jno
jg
insb
add
xor
inc
je
mov
gs
rorl
and
xchg
cs
test
test
pop
adc
pop
shrb
andb
inc
jecxz
jmp
inc
test
xchg
pop
std
mov
repz
xor
cmpsb
sbb
leave
cmp
mov
jl
insb
inc
add
popf
movsb
in
roll
pop
les
jge
inc
cli
adc
push
and
add
adc
jae
mov
and
mov
inc
and
push
or
arpl
push
ret
cli
mov
add
push
mov
aam
mov
stc
sub
sarl
pop
mov
invd
mov
subb
cmp
cli
pop
jo
pusha
insl
and
push
lea
xchg
jae
adc
lock
mov
shrb
cwtl
jle
xor
mov
stc
faddp
jne
stos
nop
sub
out
cmpsb
xchg
fsubr
lock
fcomip
jb
in
push
or
pop
mov
test
shr
cmp
lock
sbb
js
orb
enter
cmp
inc
imul
cli
test
or
or
or
mov
punpckhdq
push
add
xchg
inc
test
inc
add
mov
cmp
adc
push
dec
mov
add
push
jmp
sub
repz
push
push
add
cmp
pop
test
in
jge
lea
incl
je
or
sub
test
push
and
push
imul
mov
push
loop
push
push
and
push
loopne
fsts
rcr
pop
fmull
mov
add
push
cmc
mov
sbbb
sub
mov
mov
pop
cs
mov
leave
ret
mov
ret
pop
rolb
adc
jle
mov
in
lcall
or
jb
outsb
cmp
inc
scas
aad
cs
dec
mov
add
mov
jl
dec
mov
cs
jmp
pop
fwait
rorb
jo
mov
je
mov
adc
loopne
dec
add
adc
std
les
or
sbb
cli
sub
mov
data16
cld
push
push
push
popa
jmp
xor
or
addr16
jne
and
ret
cmpb
subb
push
jmp
cmp
xchg
push
dec
cli
or
cs
sbb
arpl
jbe
or
scas
dec
mov
rclb
lahf
add
sub
cld
push
sbb
fldpi
jmp
out
xor
push
mov
cld
ss
aas
shlb
and
shl
push
and
or
mov
ljmp
data16
mov
test
lds
in
ficoms
out
jmp
dec
movsb
push
repz
les
popa
rclb
fisubl
cld
jns
insl
rorb
leave
pop
push
xor
lret
push
or
sub
xor
mov
outsb
push
aad
pop
ret
ret
sbb
in
sbbl
test
cld
dec
hlt
cmp
inc
dec
pop
or
loop
jae
mov
cmp
xlat
mov
clc
insb
inc
or
mov
mov
mov
pop
adc
adc
lock
fcompl
or
stos
loope
mov
sub
fwait
cmp
push
lret
idiv
ljmp
mov
xchg
sub
push
jno
mov
leave
nop
or
lret
inc
sbb
or
mov
jmp
and
addb
and
ret
gs
rol
xor
loop
push
push
add
or
loope
sbb
inc
lcall
add
sub
in
add
scas
and
pop
leave
xor
sahf
push
fwait
push
add
and
jno
addb
inc
xchg
mov
rolb
and
mov
dec
pop
adc
dec
or
push
push
xchg
cwtl
inc
loop
push
lods
movl
mov
repz
inc
mov
mov
lock
xor
stos
ljmp
loope
adc
not
add
add
inc
loopne
push
jle
sahf
movsb
pop
imul
cmp
inc
in
mov
sbb
in
adc
inc
pop
lcall
shll
aad
xchg
or
inc
dec
inc
jmp
inc
or
orb
mov
filds
roll
mov
push
mov
ss
fidivl
or
jb
xchg
pop
fwait
mov
and
mov
ficoml
pop
scas
leave
sbb
cmpsl
mov
data16
jmp
xor
gs
jle
sub
outsb
add
int
cwtl
insb
in
imul
pop
dec
stos
sub
sarl
dec
xor
sbb
bswap
push
mov
jmp
xor
enter
loop
in
loop
xchg
popa
inc
sub
jbe
adcb
xor
add
aam
mov
push
push
push
inc
mov
push
add
mov
jmp
add
ja
xchg
xchg
rorb
sub
inc
inc
dec
mov
inc
mov
cld
stos
pop
fadd
mov
lock
xchg
push
mov
data16
or
loopne
outsl
cmp
xchg
mov
test
jno
inc
fs
out
jae
or
sahf
xorl
or
incb
nop
lea
inc
clc
push
jne
pop
cmp
jl
xchg
aam
fs
add
sbb
mov
test
push
cld
call
adc
mov
cwtl
adc
add
lock
repnz
jmp
jecxz
pop
mov
jb
xor
ret
adc
pop
loope
push
jmp
sub
push
lods
adc
mov
inc
sahf
lds
bound
outsb
sbb
xor
xor
add
xchg
je
fadds
or
mov
push
sub
sar
js
fmuls
dec
ficompl
arpl
adc
inc
mov
sarl
push
in
or
pop
int
call
loope
mov
loopne
and
fcoms
add
push
xor
repnz
call
incl
xor
xlat
rolb
jbe
scas
enter
sbb
call
or
push
jo
push
popf
jbe
mov
je
xchg
sub
pop
or
jb
sub
movsb
pop
sbb
cmp
in
loope
loop
call
add
inc
jg
jecxz
in
dec
cmp
push
loop
inc
loop
ds
lcall
mov
adc
or
mov
jo
out
xor
and
mov
adc
sbb
notb
js
rol
pop
adc
pop
pop
pop
or
jne
sbb
test
jmp
shlb
xor
cmc
xchg
js
addl
lahf
aad
add
mov
inc
jecxz
adc
mov
jp,pt
insb
bound
add
fs
lds
and
jb,pn
int3
insb
jge
insb
call
les
loop
cli
jb
pop
pop
js
inc
add
nop
and
jle
subb
movsb
pmullw
test
mov
clts
nopl
mov
add
cs
jb
cmp
mov
pop
lret
out
divb
cli
fs
push
inc
in
ss
lock
xor
cmp
push
xlat
sbb
adc
adc
adc
les
pusha
cli
mov
clc
push
cmp
shrl
cmp
outsb
sub
cmp
cld
xor
cmp
jmp
sub
push
les
adc
stos
sbb
dec
into
inc
pop
dec
in
sub
pop
shr
mov
mov
bound
jo
pop
push
int3
add
shr
pop
mov
stos
push
xor
js
inc
jnp
cld
and
fs
rol
cltd
push
and
daa
jne
call
inc
pusha
orl
push
test
mov
mov
mov
mov
call
lods
jg
test
mov
mov
ljmp
lods
xor
mov
loope
mov
dec
arpl
in
inc
adc
mov
adcb
pop
enter
insl
movsb
pop
popf
push
in
ds
push
pop
sbbb
xchg
xlat
mov
sub
adc
and
or
add
test
testl
add
mov
jb
mov
fdivr
mov
pop
insb
inc
outsb
imul
jg
push
shrb
mov
movsl
jns
mov
aam
adc
push
add
nop
mov
je
pop
xchg
imul
inc
les
sbbb
add
gs
or
hlt
scas
fistl
inc
and
movsl
adc
ljmp
cmp
push
loope
and
and
movsb
or
pushf
add
jle
dec
out
popa
mov
fcomi
add
cmpsl
mov
push
int
pop
dec
cwtl
sbb
aas
andl
sub
lret
sub
sbb
popl
lds
xchg
ret
shrb
jbe
test
push
std
jmp
daa
mov
inc
daa
adc
sbb
xor
adc
adc
ud1
jle
mov
mov
push
mov
shlb
cmp
sbb
ret
mov
std
and
and
mov
jp
xchg
sub
inc
lock
fwait
mov
subb
sbb
shll
add
jns
jge
sahf
mov
shrl
jb
push
cld
test
push
sub
test
mov
add
or
in
mov
setp
inc
cmp
push
adc
call
adc
movnti
fldl
jmp
mov
jae
push
in
inc
push
jge
inc
cmp
push
lret
push
push
pop
lock
push
fldt
xor
inc
pop
add
mov
and
xchg
inc
fmuls
lret
fdivp
jg
scas
je
mov
add
pusha
pop
pop
add
insb
shrl
pusha
call
in
xorb
into
fs
jle
xor
outsb
jmp
cmp
out
xor
ds
in
int3
push
pop
test
cmp
jo
pop
add
fcoms
jmp
mov
int3
dec
lea
ljmp
mov
mov
mov
push
cmp
push
fs
inc
add
adc
mov
movsl
fistps
je
jo
in
inc
fadd
xor
and
int3
add
pop
inc
sub
xor
pop
aam
or
push
xor
ss
and
test
adc
imul
mov
enter
pusha
mov
add
das
and
push
adc
or
sub
pop
xor
xlat
adc
ds
je
dec
test
mov
and
inc
xor
cmp
mov
push
mov
push
cli
add
pop
adc
call
mov
push
scas
pop
and
sbb
fs
ret
adc
mov
adc
mov
and
ljmp
lret
loopne
pop
cmp
add
popa
push
mov
xor
test
xor
loopne
mov
adc
jbe
loopne
jmp
lret
pop
push
xor
imul
adc
dec
cld
cltd
xchg
lods
mov
adc
cwtl
jp
pop
pusha
or
add
scas
sbb
or
out
mov
into
inc
leave
xchg
movsb
movsb
test
int3
and
rolb
into
fsubrs
adc
int3
clc
add
inc
and
js
movsbl
js
jo
jbe
push
call
mov
sub
ret
cmpsb
mov
movsl
jle
push
add
jb
test
pop
adc
pop
xchg
js
jl
rdmsr
outsl
movsl
ds
call
into
add
mov
movsb
cld
pop
push
pop
sbb
mov
inc
mov
add
stc
rcrb
cwtl
ret
fistpl
jbe
jo
xor
inc
ret
fwait
lea
movsb
mov
sahf
push
mov
cs
and
addb
mov
jl
leavew
rolb
or
sbb
not
ret
pusha
test
lods
xchg
ret
jb
push
mov
push
in
inc
mov
rcrl
ret
add
enter
push
mov
jnp
std
pop
shll
inc
mov
adc
pop
jge
pushf
jbe
xor
call
add
add
decl
sub
inc
fdivl
sbb
adc
xor
rcl
mov
sub
gs
shlb
or
cmp
push
test
jg
mov
mov
add
mov
int
adcl
ss
mov
fcomps
shrb
ds
adc
mov
in
adc
ret
pop
ret
cmovno
rcll
sub
test
mov
out
inc
or
mov
xor
in
bound
les
dec
movsb
cmp
or
out
mov
cli
call
test
cmp
mov
and
push
adc
stos
cmp
fsubl
fidivs
mov
add
aad
push
add
mov
xor
sub
xchg
dec
mov
pop
fnstsw
add
test
inc
lcall
fisttps
in
movsl
dec
dec
sbb
dec
and
cmp
stos
lret
outsb
imul
rclb
jne
out
sub
cwtl
pop
push
mov
lods
adc
jmp
sti
cmp
sbb
mov
pushf
mov
mov
cmp
es
jg
test
push
rorb
pop
fsubr
xor
outsb
fidivl
and
shl
stc
sub
push
inc
ljmp
decl
std
sub
push
xor
rorb
cld
pop
mov
scas
cmpsl
mov
mov
aas
sar
mov
sub
aam
aas
add
ljmp
cmp
inc
lret
dec
cmpl
dec
js
adc
dec
cwtl
push
xchg
push
fcoms
mov
mov
sbb
lcall
pop
inc
push
cmc
mov
addb
sub
mov
mov
lock
mov
add
pop
xor
sahf
inc
pop
test
jnp
clc
inc
jle
or
ja
add
pop
rolb
call
push
fs
xor
xlat
cmp
mov
shll
andl
test
push
xchg
mov
das
adc
mov
test
push
and
mov
rcrb
add
inc
lods
inc
adc
into
push
adc
ss
or
sub
or
rol
sbbb
push
js
sarl
cld
adc
add
dec
das
ja
sbb
movsb
push
gs
jno
cmp
push
cmc
push
add
jo
cwtl
int3
aad
adc
int3
je
fcmovnu
inc
test
mov
cmp
aam
mov
push
lcall
push
jne
add
or
call
out
sub
pop
insl
inc
mov
or
add
xorb
cmpl
inc
nop
and
gs
sbb
mov
sarb
and
push
addl
add
pop
inc
sbb
pusha
aam
lods
add
push
out
push
inc
fwait
xchg
mov
outsb
adc
mov
and
mov
pop
rclb
or
pushf
lea
xchg
xor
cmc
loope
roll
add
mov
sbb
jmp
call
sti
inc
inc
ret
push
clc
enter
push
mov
inc
inc
fstps
pop
xchg
jp
mov
inc
jl
xor
stos
repnz
clc
fs
scas
push
jno
pop
jno
rcll
call
shl
push
test
decl
int3
push
mov
lds
js
sub
mov
cs
push
push
lea
cmp
or
je
sbb
mov
cmp
xor
aam
jl
sti
jo
mov
add
pop
adc
test
out
jb
pop
insl
ror
jae
aas
cld
bound
clc
pop
mov
inc
mov
mov
call
ss
add
int3
test
subl
mov
insb
mov
sbb
sbb
mov
outsb
mov
loopne
pop
mov
in
mov
shr
ds
mov
mov
arpl
xor
lea
in
jns
mov
mov
mov
leave
shll
lea
jl
xor
repnz
add
pushf
insb
xchg
in
sub
jbe
std
scas
pop
lods
adc
add
jle
push
imul
or
jmp
xchg
test
mov
mov
jns
lret
in
jle
jo
mov
fisubrs
mov
sub
enter
mov
cwtl
mov
mov
sbb
dec
sub
pushf
mov
inc
test
in
sbb
add
call
in
pop
inc
inc
pop
mov
int3
les
pop
call
leave
mov
enter
or
sbb
pop
sub
mov
stos
add
int
dec
aaa
jno
xchg
data16
mov
lods
clc
inc
outsb
cmp
push
fs
xchg
xor
cs
jle
mov
cmc
and
hlt
sub
pop
addl
push
test
shr
pop
test
push
ret
cmp
sub
adc
xorl
xchg
dec
mov
push
jae
add
push
mov
push
push
test
clc
and
sbb
add
std
pop
test
rcll
adc
roll
mov
add
rcr
es
and
adc
es
add
fs
mov
jmp
popa
shrb
and
sub
adc
push
jp
pop
add
inc
add
call
std
pushf
pushl
mov
and
add
stc
mov
test
mov
rolb
in
cli
scas
add
dec
cmp
je
pop
test
mov
ret
movb
mov
mov
out
out
into
add
fwait
or
lret
push
add
push
dec
cmp
pop
or
adc
lret
cld
bswap
inc
adc
jg
push
fidivrl
and
lea
jb
scas
lret
pusha
xchg
cld
es
test
movsb
incl
mov
adc
add
jae
mov
cmp
lock
add
idiv
push
jl
jg
scas
add
addb
mov
outsb
in
inc
add
insb
cld
adc
cmp
jmp
or
push
insb
enter
stos
decb
fiaddl
add
popa
lret
std
in
lret
push
or
adc
lret
cli
cmp
jle
scas
fcomps
xor
dec
mov
cmp
stos
and
icebp
call
clc
pop
rcr
push
outsl
sbb
aaa
or
rorl
push
push
and
cld
test
jp
xor
cmp
mov
add
jmp
xor
dec
call
or
dec
sti
push
getsec
sub
jbe
or
pop
lea
inc
mov
xor
lock
ret
jbe
inc
adc
cwtl
adc
or
sbb
push
pop
jne
sarl
cmpsb
pop
mov
out
mov
shlb
xchg
cld
push
cmp
mov
push
scas
mov
int
push
xor
add
inc
mov
sbb
or
mov
mov
push
testb
les
fwait
bswap
rclb
adc
xchg
sbbl
adc
mov
push
xchg
pop
js
inc
push
shrl
sbb
insb
cld
sub
pop
aas
icebp
test
adc
aam
movsb
test
fwait
shll
fsub
push
inc
inc
roll
or
jb
xchg
push
push
inc
mov
mov
xchg
mov
stos
push
cmp
lahf
jp
and
ds
test
mov
dec
xchg
add
push
cmpl
pop
imul
dec
rorb
ret
call
outsb
xor
lret
testb
test
fcomps
pusha
push
aad
adc
pop
cmp
xchg
push
push
mov
or
jp
or
inc
test
adc
mov
les
pop
or
out
notl
jl
mov
in
push
mov
gs
add
mov
jne
or
sbb
ja
inc
test
inc
daa
cmp
push
and
inc
jb
adc
mov
std
idiv
fisubs
loopne
fs
sarb
or
cmp
push
cli
bound
xlat
jge
test
jne
push
sub
inc
inc
add
push
clc
push
adc
push
sbb
dec
cmp
fisubs
fwait
mov
movsb
adc
inc
xchg
fs
movb
ret
adc
sbb
incl
sbb
xor
adc
sub
mov
pop
dec
add
or
xchg
lock
push
jb
mov
push
lods
dec
cmp
inc
push
jo
loope
aam
dec
jge
les
sub
mov
test
stos
adc
push
or
and
fbld
xchg
cmp
mov
outsb
int3
mov
jle
test
xchg
sub
in
aam
mov
call
xchg
outsl
jb
aam
fbld
outsl
loopne
push
mov
mov
sbb
cmp
add
add
sti
sub
orb
and
jb
push
jl
sub
add
push
nop
pushf
push
add
sbb
or
out
ficomps
or
xor
jg
int3
xchg
pop
mov
jne
inc
mov
inc
in
idivb
dec
sub
push
push
cmp
fs
outsl
test
ret
int
adc
mov
inc
or
or
jnp
pop
shr
jp
mov
sbb
sub
mov
fdivl
xchg
mov
ret
hlt
mov
bnd
mov
mov
sub
les
dec
cmpsb
mov
inc
ss
push
pop
cli
dec
cld
dec
out
mov
cmpsl
push
cmpsb
sbb
adc
xchg
cld
push
push
or
jmp
int3
mov
callw
loop
sub
ret
js
xor
add
jbe
shlb
call
cld
andb
andl
ret
mov
pop
out
or
outsb
inc
mov
push
adc
push
dec
call
dec
fsubs
adc
js
cmp
or
test
mov
mov
xor
inc
pusha
and
ret
mov
les
ds
dec
std
sbb
out
push
push
inc
push
pop
jo
inc
jmp
jp
jo
js
std
pop
lret
mov
loop
shr
js
pop
mov
les
push
add
ret
dec
cmp
jle
jae
or
cmp
sti
jbe
ds
cs
popa
je
mov
out
mov
push
add
mov
or
push
sub
aas
dec
fld
test
pusha
add
jbe
mov
push
push
sarl
dec
rcr
loop
pop
push
das
mov
xor
sar
push
inc
lds
imul
fcompl
mov
jp
sub
sub
pop
xor
test
push
mov
fisttpl
imul
inc
rcr
mov
fidivrs
stc
pop
int3
push
cmp
stos
rcl
dec
les
in
cld
or
xor
pop
add
xchg
pop
mov
jbe
push
lock
rorb
mov
rcr
popa
jecxz
pop
xor
bound
xor
adc
dec
test
sbb
xchg
mov
cmp
cli
shrl
sub
incl
push
lea
insb
jp
imul
or
test
inc
sbb
aam
push
cwtl
dec
pop
fimuls
loopne
add
push
inc
cmpsl
xor
inc
pop
shll
inc
push
jge
add
xchg
jp
fdiv
ds
in
sub
call
test
es
test
inc
test
ret
push
push
or
fcomps
lock
not
lea
jo
push
mov
and
ljmp
mov
loop
js
add
jg
and
push
push
ljmp
pop
add
add
pusha
or
inc
cwtl
cmp
push
fs
test
inc
push
shrb
loop
decb
hlt
jne
push
xor
mov
add
push
add
stc
test
push
sub
in
lret
xchg
cmpsb
lods
fnsave
inc
add
ret
mov
adc
jp
inc
imul
andl
or
js
mov
unpckhps
inc
idivb
nop
rclb
shlb
mulps
and
adc
rorb
pop
push
test
push
callw
mov
xchg
xor
push
sub
daa
jnp
outsb
push
adc
sahf
pop
movsl
pop
rcrb
in
rcl
add
testb
fistl
lea
shlb
call
jae
add
pop
add
or
inc
pop
mov
push
movsb
xchg
mov
xchg
inc
cli
sub
mov
lods
mov
sbb
or
call
gs
mov
rcl
loop
pop
cmpl
push
push
dec
mov
orw
adc
add
push
sbbb
add
cld
fucomip
imul
or
inc
roll
pop
or
sbb
lock
push
andl
das
mov
lcall
jns
movsl
mov
or
xor
xor
lock
mov
repz
sbb
sbb
je
movsl
inc
shrl
mov
jo
out
mov
mov
inc
loope
cmpsb
dec
mull
cmp
cmp
jmp
and
mov
inc
test
pop
sbb
add
cmc
jne
and
xor
adc
enter
mov
jno
pop
push
add
add
push
les
push
add
shrb
fcmovnb
pop
in
and
xor
fsubrl
mov
and
jmp
adc
jge
add
in
loopne
xor
lods
jmp
fmull
pop
mov
adc
mov
rorb
adc
adc
mov
dec
je
push
roll
hlt
push
jo
in
inc
cld
xchg
mov
pop
dec
enter
adc
stc
xor
mov
aas
rcll
pushf
sbb
jne
pop
adc
movsb
divb
add
push
adcb
xchg
or
scas
into
or
pop
aaa
call
push
arpl
mov
sbb
int3
sbb
and
add
xor
inc
je
ret
clc
mov
inc
sbb
ljmp
push
stos
xorl
or
push
fs
push
or
mov
outsl
nop
jecxz
pop
add
adc
add
mov
adc
mov
dec
or
add
movsb
push
in
imul
add
mov
outsb
mov
filds
push
lcall
mov
aam
mov
icebp
data16
adc
mov
add
mov
dec
cmp
rcrb
fisubs
in
imul
incl
adc
rcrl
xchg
shlb
daa
sbb
je
push
call
fs
in
call
push
add
xor
nop
in
in
cmc
xlat
ss
dec
es
scas
lret
in
mov
jge
int3
adcl
les
adc
gs
ja
ds
adc
imul
test
cmpb
sbb
jg
add
adc
test
es
in
mov
stos
sar
cs
aam
sar
push
push
add
mov
inc
push
out
xchg
dec
mov
jecxz
mov
enter
xor
xlat
xchg
mov
ret
xchg
cld
lahf
jb
adc
insl
fsubrl
sub
clc
popa
sbb
call
or
jecxz
dec
or
ljmp
movsl
hlt
sbb
add
push
push
es
ljmp
fdivr
xchg
pop
add
nop
dec
sub
cltd
call
mov
mov
mov
out
dec
add
bound
imul
dec
xchg
add
mov
ss
sub
lea
sbb
cmp
or
xor
fdivl
add
lock
inc
cmpsb
jo
andb
jecxz
data16
insl
test
repz
pop
stos
push
mov
dec
dec
int3
xor
push
sbb
mov
je
jno
mov
cmpsb
push
mov
andb
pop
dec
sbbb
ret
cs
dec
dec
inc
sub
loop
rolb
add
and
sub
test
sbb
sub
sub
sbb
and
cmp
mov
jne
call
sbb
add
push
cmpsb
xchg
jmp
mov
test
push
orb
mov
cli
fsubrl
xchg
jp
mul
inc
sub
mov
xlat
pop
xchg
push
fidivrl
loop
push
push
popf
dec
ds
pop
fidivrl
out
push
mov
lods
aaa
push
notb
enter
jp
push
fs
loope
jne
inc
fdiv
cmpsb
popa
cmp
cmp
int3
inc
clc
xor
xor
inc
dec
jns
clc
mov
or
adc
mov
jle
je
pop
add
into
dec
test
divl
xchg
insl
test
mov
sub
jbe
nop
cmp
cmp
push
pop
or
gs
repnz
mov
adc
and
movsl
pop
mov
inc
cltd
sub
sbb
or
orl
addl
or
cld
dec
shrl
add
fadds
std
fadds
lcall
jl
dec
inc
dec
pop
xor
xor
cltd
xchg
pushf
inc
or
enter
adc
icebp
pop
add
out
mov
xor
lret
je
aam
fs
or
add
xchg
push
jl
mov
sti
add
mov
sbb
in
push
popf
adc
call
mov
sub
lock
dec
add
dec
pop
int3
cwtl
add
cmpsb
in
sub
inc
loope
in
jbe
mov
rolb
test
push
xchg
mov
sub
scas
rolb
mov
push
addl
jnp
inc
fcomip
orl
sub
and
je
mov
and
push
xor
es
outsb
in
xor
inc
or
int
xchg
xlat
sarl
cmp
xor
inc
push
sbb
xor
xchg
fsubl
hlt
je
incl
adc
push
adc
ds
mov
add
mov
xorb
pusha
mov
es
and
cvtps2pd
sub
add
ret
xor
je
loopne
shll
cs
or
mov
inc
mov
lcall
inc
mov
pushf
push
mov
adc
or
pop
hlt
and
push
je
js
push
fsubr
fistl
fsubl
out
xor
addb
out
lods
mulb
mov
mov
or
lock
cs
in
insb
sbb
dec
jbe
jg
mov
ret
mov
mov
mov
sub
movsb
imul
add
push
cmp
mov
sbb
pusha
sarb
dec
push
pop
fbld
pop
push
or
movsb
dec
push
jns
stos
shlb
mov
imul
mov
loope
adc
cld
subb
jbe
pop
jl
movsl
mov
push
xorb
scas
dec
mov
test
addr16
xchg
jecxz
push
imull
call
adc
mov
mov
or
mov
mov
fsubrs
in
add
adc
sbb
sbb
mov
mov
sub
sbb
xchg
mov
push
or
sbb
test
xchg
push
test
cmp
je
adc
roll
into
js
xor
cld
dec
push
ja
frstor
mov
sbb
mov
test
dec
ret
pop
decl
mov
mov
fcompl
int3
call
loopne
daa
in
or
loopne
stc
mov
add
rolb
mov
mov
mov
fsubs
xor
rcrl
cmpsl
aas
pushf
inc
xor
in
xchg
sar
sahf
jl
push
add
push
daa
movsl
jnp
ret
jmp
negb
and
loope
mov
xchg
mov
roll
cmp
or
ljmp
rclb
inc
mov
outsb
push
mov
shlb
adc
stos
mov
pop
dec
std
mov
call
add
lret
call
add
mov
shrb
add
fldl
lock
and
xchg
adc
push
decb
xor
les
pop
mov
and
push
mov
cld
in
test
je
push
shll
lock
or
adc
xor
shrl
mov
and
jb
loopne
imul
mov
pusha
das
mov
clc
sbb
mov
and
add
push
inc
pop
lods
jno
cli
cwtl
jecxz
aas
mov
outsb
call
pinsrw
mov
add
movsb
int
in
clc
mov
push
movl
divps
dec
push
ljmp
cmp
add
repz
xorl
lret
cmp
or
cmp
dec
sbb
fs
mov
adc
push
mov
inc
push
xchg
sbb
and
jb
mov
push
add
jmp
fidivl
push
lea
out
cs
fimuls
cwtl
adc
inc
sub
adc
push
cld
mov
mov
icebp
mov
xor
xchg
mov
adcb
arpl
cmp
sbb
mov
inc
dec
xchg
add
insb
int3
xor
dec
popa
adc
xchg
cwtl
ret
mov
sbb
xchg
ljmp
mov
fadd
mov
vminps
call
dec
addr16
and
cmpsb
jle
pushf
les
ja
call
push
es
lock
pusha
das
jp
or
add
or
push
jne
sub
push
mov
stos
xor
repnz
jge
stc
adc
mov
push
ja
clc
mov
mov
inc
rcrb
sbb
sub
pop
mov
mov
aaa
lcall
add
sbb
clc
xchg
std
fidivl
call
xor
mov
push
subl
push
xor
dec
sbb
jmp
and
ljmp
add
add
push
addl
addb
ret
add
filds
mov
pop
lahf
pop
loopne
or
jge
inc
mov
push
inc
aaa
jb
inc
loop
in
clc
add
aaa
sub
aas
in
loopne
add
mov
int3
or
popa
adc
mov
sub
ror
xor
aam
cmp
push
cmp
mov
push
pop
mov
iret
and
jb
je
or
sbb
test
neg
insl
or
call
std
cmpl
jo
pop
mov
adc
mov
inc
gs
lods
incl
inc
pop
push
int3
adc
and
pushl
dec
clc
in
aaa
add
loop
outsl
lea
mov
cmp
jbe
xor
out
add
mov
je
test
int3
fsubl
push
outsb
mov
pop
xchg
sahf
in
mov
inc
test
aam
rol
fistps
aam
inc
lock
pop
jnp
inc
inc
push
mov
cmp
sbb
int3
add
orl
outsl
push
cmp
sub
js
inc
sub
cmpsb
aam
adc
mov
loop
adc
and
inc
andb
data16
hlt
call
enter
enter
insb
fisubl
mov
mov
ficoms
jl
adc
rorl
in
outsb
or
dec
je
lods
cmp
jp
push
shlb
jbe
int3
jge
cmp
and
mov
xor
std
or
jne
xchg
and
test
and
int
pusha
sbb
cmp
andl
cs
xor
mov
sub
sbb
mov
decb
push
or
xorl
push
dec
mov
cmp
mov
nop
lock
jne
inc
mov
mov
inc
xor
not
lahf
sub
lea
mov
adc
iret
inc
iret
jge
mov
or
mov
rorb
add
inc
pop
enter
lods
xchg
lret
int3
push
xchg
fmuls
leave
and
sub
adc
das
test
mov
pushf
and
push
divl
inc
ror
fsubrs
mov
pop
sahf
or
add
dec
adc
sbb
dec
in
xchg
inc
cs
dec
xor
fnsave
mov
fsubr
stc
xor
rclb
push
aas
mov
lret
mov
mov
insl
loopne
in
add
or
push
mov
loop
push
sti
adc
inc
adc
lock
xchg
in
add
push
fstps
dec
push
sbbb
sbb
sbb
rorl
dec
lret
push
mov
subl
ljmp
je
push
mov
icebp
xor
aad
pop
std
movsb
cli
data16
movsb
std
shlb
push
push
cs
or
mov
cmp
arpl
cmpsl
xchg
ljmp
mov
xor
jecxz,pt
lods
adc
hlt
or
loopne
mov
and
sub
and
lret
xor
mov
sarb
cs
popa
pop
inc
jle
and
jl
cmp
mov
aas
dec
les
sub
and
xor
dec
mov
cmpsb
jo
loopne
lea
jne
pop
xor
add
mov
add
lea
add
or
push
fildll
out
test
gs
cmc
test
push
ficompl
dec
push
sbb
jne
shlb
mov
cmp
pop
flds
pop
mov
dec
jo
js
mov
pop
pop
adc
lea
aaa
insb
or
push
aaa
sbb
clc
cld
xor
or
push
call
cmp
inc
mov
pop
jg
rcrb
ja
int
out
mov
xchg
dec
and
pop
icebp
jg
push
sub
pop
mov
dec
sub
push
lock
ud0
testl
xor
mov
and
jne
add
testb
dec
nop
subb
nop
xor
or
or
adc
sbb
nop
inc
adc
push
lcall
cmpsb
sub
jg
movsb
mov
mul
push
outsb
lahf
add
xchg
pop
or
jl
mov
jl
mov
decb
jmp
or
inc
nop
or
ljmp
fdivr
mov
test
and
fadds
addl
lods
shll
push
pop
enter
cmp
xorl
inc
or
xor
loopne
cld
ja
sbb
lea
cmpl
ret
jno
hlt
sub
pop
or
cwtl
aam
sub
mov
add
xchg
adc
test
sbb
xor
in
lcall
mov
adc
fistpll
add
push
lock
insb
inc
in
and
and
push
outsl
push
fdivl
orl
fdivs
mov
or
subb
sbbl
clc
cmp
icebp
pusha
sub
lock
lds
and
repnz
cld
add
xchg
add
xor
adc
fwait
inc
inc
cmp
addr16
sbbl
test
fdivrs
sti
push
sub
mov
jp
mov
push
imul
inc
sub
dec
loop
lods
adc
cmp
dec
push
mov
test
bound
dec
inc
and
ljmp
dec
hlt
adc
je
es
or
fisubs
push
outsl
add
cld
lea
xchg
adc
and
mov
jnp
pop
adc
push
mov
lock
imul
idivl
das
and
lcall
das
sbb
add
inc
lock
dec
add
lods
add
push
adc
gs
adc
repnz
and
xchg
mov
fildl
adc
sbb
adc
std
std
out
dec
mov
test
sar
ret
fsubs
mov
pop
pop
pop
dec
outsb
and
inc
test
and
xorb
imul
out
jg
jo
or
dec
incl
int3
cmp
in
pop
mov
repz
js
ds
call
mov
aam
rorl
mov
adc
rolb
push
and
xchg
push
cmp
push
xorb
sbb
insb
and
lods
int3
cmp
test
inc
cmp
cltd
adcb
jg
xchg
ret
cmp
clc
mov
dec
sbbb
jmp
dec
or
inc
mov
mov
lcall
mov
add
les
fisubs
xor
ds
or
stos
xor
dec
mov
add
mov
rcl
loop
incl
add
jge
mov
fcmovnbe
add
xor
mov
inc
insl
add
hlt
daa
sub
sub
adc
inc
sbb
lock
ds
sarb
mov
adc
inc
stos
mov
outsb
dec
xor
add
test
fs
inc
jb
test
cli
pop
int3
lcall
hlt
test
xor
mov
mov
adc
cwtl
insb
shlb
dec
push
je
mov
outsl
and
ret
push
pop
test
lods
daa
fmuls
imul
add
test
stos
sbb
add
pop
add
add
inc
ljmp
xor
cmpsb
lret
add
xchg
popa
jmp
pushf
in
pop
call
cld
dec
call
test
ss
ljmp
mov
sbb
jge
mov
pop
pop
dec
push
nop
call
cmpsb
fidivrs
xor
or
or
out
fiaddl
jo
scas
mov
sbb
or
arpl
adc
mov
out
cli
or
stos
cs
cmpsb
sbb
in
sub
test
mov
sub
loope
xchg
dec
and
sbb
aaa
xlat
fisttpl
adc
push
stc
ret
roll
add
fidivs
xchg
mov
test
jg
clc
inc
les
mov
mov
cmp
or
pop
push
clc
push
pushf
call
idivb
adc
cli
mov
jl
bswap
xor
mov
mov
in
and
decl
push
cmp
lea
jg
add
ljmp
ret
mov
je
inc
sbbb
mov
movsb
hlt
fcomi
test
jo
orb
shl
push
cmc
insb
roll
orb
hlt
je
cli
mov
push
mov
outsl
jo
lds
mov
mov
and
push
fcoml
mov
jno
negb
enterw
dec
xor
push
add
jl
lock
ljmp
test
ds
or
fisubs
movsl
cmpsb
jbe
inc
cld
sbb
xchg
lock
add
out
dec
cld
xchg
and
pop
mov
loopne
mov
dec
mov
mov
inc
add
stos
mov
arpl
push
and
lret
or
xor
inc
test
stos
and
nop
mov
add
mov
lret
xchg
les
inc
mov
adc
cmp
icebp
pop
xchg
and
gs
jp
mov
loop
mulb
aam
popf
aam
push
jle
add
add
or
sbb
inc
in
pop
cld
cmp
call
imul
popf
sub
jnp
inc
mov
aam
mov
pop
loop
addr16
cwtl
mov
call
lret
enter
add
sub
xchg
int3
and
cmpsl
cmpsb
out
inc
xchg
add
cmp
test
mov
mov
ret
les
addl
push
imul
sub
push
insl
cmp
jg
or
jmp
pop
roll
inc
xor
mov
sbb
add
dec
repnz
sbb
imul
loop
jp
mov
and
sub
dec
sbb
adc
dec
pop
gs
inc
cmp
push
cmp
aam
mov
adc
data16
or
mov
push
adc
lock
aas
sbb
xor
mov
call
pop
jmp
cmpsl
mov
ljmp
clc
in
stos
add
xor
inc
sub
lock
push
ds
add
stos
cli
add
sbb
jo
fdivrs
mov
addb
push
push
xor
scas
out
xor
inc
add
xor
fs
inc
mov
add
add
notb
rcrb
cmp
lods
andl
mov
pushf
mov
shll
int3
jns
lcall
daa
and
sarb
jmp
ret
pop
cld
dec
inc
addl
xor
push
incb
mov
inc
data16
adc
aam
lret
ret
pusha
mov
pop
dec
aas
clc
mov
xor
mov
inc
xchg
mov
fdivs
clc
xchg
mov
cld
push
or
pop
xor
jb
fcompl
rcll
push
mov
mov
mov
fstpt
imul
push
dec
sub
shufps
or
push
dec
or
or
and
xchg
mov
inc
in
push
call
fadds
lcall
sub
mov
push
shl
inc
int3
jmp
ret
arpl
fstpl
jle
dec
mov
cli
popa
sbb
add
push
mov
and
insb
test
inc
imul
mov
shrl
add
jae,pn
in
mov
cmc
add
test
hlt
sar
pop
ror
mov
adc
cld
mov
dec
mov
push
sbb
test
add
xchg
jns
js
push
shll
js
std
ret
stos
mov
lea
mov
add
cs
scas
cmp
iret
hlt
add
std
mov
cmp
adc
aas
jg
les
in
jle
jb
enter
sub
cmp
test
mov
test
js
shlb
hlt
mov
out
push
inc
loopne
mov
fsubr
adcl
cltd
mov
pop
adc
cld
cmp
inc
out
push
ret
faddp
xor
push
mov
aas
dec
mov
inc
dec
jge
and
jg
adc
xchg
jp
test
push
jg
rorl
loopne
add
xchg
loope
rorb
xor
cli
pushf
inc
push
and
les
test
jmp
adc
gs
testl
or
je
rorl
adcb
je
mov
xor
fsubl
test
or
jl
imul
nop
mov
ljmp
mov
lock
jno
fdiv
test
into
mov
punpckhbw
xchg
sub
shlb
pusha
add
jp
movsb
add
xchg
adcl
ja
sbb
or
pushf
push
xor
jecxz
and
pop
mov
inc
mov
mov
ret
sahf
mov
testb
jge
adc
js
push
mov
shl
cwtl
push
xchg
jb
in
push
les
notl
push
add
andb
lods
cmp
sarb
nop
jo
or
xchg
push
xchg
or
int3
mov
je
lods
pop
addb
or
lcall
and
or
cld
jne
nop
push
push
ret
rorb
or
jne
out
cli
addr16
shll
pop
pop
out
xor
cmpsb
cmpsb
inc
xor
mov
add
cld
mov
inc
lcall
add
adc
push
loopne
loop
add
repnz
leave
ss
in
add
fmull
popa
in
clc
inc
and
xchg
mov
and
outsb
adc
or
jmp
add
mov
mov
pop
mov
dec
enter
decl
adc
xchg
or
ss
dec
mov
lock
sub
sahf
pop
fistps
cmp
adc
xchg
push
lods
push
sub
lods
sub
mov
push
sub
mov
jmp
pop
mov
jp
insb
daa
lcall
mov
mov
push
aas
je
add
outsl
push
fists
push
test
inc
mov
mov
push
je
roll
fldt
ljmp
inc
ljmp
lret
cltd
loop
dec
loop
insb
xchg
jne
clc
call
pop
cmp
push
jp
cs
push
sarb
cli
and
pop
mov
adc
mov
cmc
push
das
in
loope
mov
fldcw
sub
js
lcall
lret
dec
ja
and
pop
pop
jg
pop
push
push
jbe
push
jo
jne
push
gs
or
push
outsb
push
mov
inc
das
push
aam
je
aam
test
mov
xor
mov
rorb
inc
xchg
xor
xchg
jle
lcall
lods
addb
mov
fists
add
sbb
xlat
xchg
add
in
and
add
cli
shlb
push
jg
add
push
into
cmpsb
push
adc
mov
adc
fiadds
xchg
add
push
inc
adc
push
sub
jae
loop
mov
inc
dec
jmp
jb
stc
jne
daa
inc
push
dec
dec
adc
inc
inc
jl
ljmp
pushf
xor
cli
sbb
mov
pop
pushf
pushl
sti
adc
cld
or
outsb
push
popa
cmp
jle
rolb
cmp
les
sub
mov
and
adc
int3
ret
int3
xchg
out
adc
push
outsl
call
pop
add
xchg
push
decb
pop
mov
and
jmp
push
inc
add
mov
or
std
or
mov
sbb
cli
sbb
daa
mov
push
mov
add
rol
add
ja
adc
outsl
lods
clc
mov
adc
fs
add
push
clc
inc
dec
mov
mov
lea
nop
adc
iret
sbb
push
cmp
inc
adc
mov
mov
push
mov
push
lock
nop
rclb
add
ss
cli
int3
mov
stos
xchg
or
sub
push
sbb
xchg
inc
mov
mov
xor
and
addr16
jg
sub
gs
fstps
enter
mov
dec
ret
std
jo
int
and
push
aaa
push
add
or
ret
ljmp
mov
adc
mov
lds
sbb
push
and
pop
cmp
push
out
cwtl
inc
add
adc
and
ss
mov
push
lods
or
cmp
and
rclb
adc
jmp
pop
in
lea
sub
and
out
inc
jle
pop
rcrl
mov
jp
mov
or
pop
sub
dec
fbld
mov
in
in
loop
push
push
mov
cld
add
push
or
mov
or
cwtl
cld
ljmp
ds
push
and
xchg
pop
cmpsb
add
out
cmovae
loope
jmp
and
cs
pop
into
or
lret
arpl
subb
or
in
fists
push
mov
test
pop
insb
mov
sub
mov
adc
in
adc
inc
mov
cs
mov
inc
inc
add
mov
push
inc
jbe
mov
ret
dec
test
jg
movsl
fstl
and
dec
mov
rorb
pop
mov
in
pop
push
int
add
fnstsw
popa
ret
sub
push
and
je
inc
shr
and
xchg
mov
cmp
mov
test
cmp
mov
adc
push
push
pop
inc
inc
sub
mov
cwtl
mov
sbb
xchg
jbe
in
mov
mov
push
shr
sbb
or
inc
sbb
push
stos
or
mov
or
mov
mov
mov
adc
inc
iret
mov
mov
repnz
or
sbb
mov
and
and
mov
add
jb
call
and
or
mov
lcall
or
mov
in
nop
adcb
push
mov
inc
pop
xchg
adc
xor
dec
push
pop
push
xchg
and
or
repnz
jmp
ret
fdivrp
dec
and
mov
mov
sti
pop
cmp
incl
or
orl
int3
rcrb
movsl
inc
faddp
adc
inc
mov
push
mov
jbe
adc
adc
mov
or
pop
jge
js
mov
movsl
scas
jne
mov
inc
or
aam
jg
push
out
push
jno
lahf
adc
add
mov
sbb
mov
lock
or
adc
lret
lret
push
aad
dec
ss
dec
test
cmp
mov
jbe
mov
jmp
xchg
mov
mov
adc
out
mov
push
aaa
jmp
outsl
xor
ljmp
adc
shl
lahf
cmp
cwtl
clc
xlat
test
mov
add
add
cmp
xchg
fldt
imul
cmc
sbb
mov
push
add
movsl
xor
ret
divl
add
aas
sub
adc
pusha
out
cmp
out
and
mov
fisubl
or
ret
call
int3
xorb
and
imul
push
xor
xor
decb
pop
jl
sbb
push
fisttpl
fcoml
mov
pop
jl
lret
fsubrl
lock
test
adc
sub
loopne
inc
inc
int3
les
mov
mov
mov
jo
and
std
xchg
inc
xor
inc
pop
in
mov
cmp
jg
jecxz
cmp
xor
sti
mov
adc
sbb
hlt
cmp
push
leave
and
mov
repnz
in
ljmp
sub
bound
mov
mov
ret
add
push
cmc
push
push
jne
outsb
push
shrl
call
push
dec
jge
inc
addb
push
bound
add
ss
push
std
data16
xorb
push
adc
imul
fildll
adcl
jne
call
cmp
nop
lar
mov
mulb
es
loope
es
jo
shl
or
je
add
jb
call
add
loop
in
or
inc
xchg
scas
loope
xor
icebp
mov
sub
dec
loopne
xchg
pop
lods
dec
pop
add
lcall
out
push
push
fs
mov
rolb
mov
and
enter
hlt
in
hlt
add
lock
fisubrl
add
testl
sbb
arpl
add
xchg
and
or
adc
ja
jl
ja
xor
sbb
adc
js
mov
sub
sub
cmp
je
mov
jae
roll
cmp
push
dec
or
shll
jmp
iret
sub
add
fs
pop
mov
sub
call
out
mov
incb
or
faddl
dec
inc
xor
push
sub
insb
pushaw
mov
xor
data16
insb
sub
cs
or
pop
add
sbb
and
add
out
mov
jnp
adc
vucomiss
push
std
test
stos
add
cmp
inc
sbb
call
xchg
mov
mov
or
add
js
imull
fstpt
subb
mov
fstl
cmc
cwtl
add
data16
ffreep
mov
mov
mov
clc
fwait
add
fiaddl
sub
mov
jne
jo
mov
add
sub
arpl
clc
notb
call
lcall
and
cmp
mov
jb
jle
cmpsb
add
js
add
loope
inc
loope
adc
add
mov
andl
adc
jmp
ficomps
fsubrs
or
add
loope
or
xchg
pushf
inc
ss
adc
lcall
aaa
fwait
xor
stc
clc
ljmp
ror
sub
orb
cmp
enter
std
lods
je
lods
jl
xor
loopne
outsb
add
push
shr
sub
cmp
mov
jbe
push
loop
int3
xor
hlt
sbb
pushf
ds
xor
pop
repnz
mov
mov
jne
das
ret
fmuls
cli
aam
jmp
jmp
mov
add
or
int3
call
push
hlt
adcb
lea
mov
mov
cs
inc
nop
fsubrs
pop
int3
or
push
les
lock
hlt
add
xor
add
lret
xorb
cmp
test
push
outsb
mov
mov
les
dec
dec
jl
lret
sti
sbb
fsubr
mov
or
pop
pop
arpl
jle
xor
sbb
inc
jg
cmp
stos
xor
or
aas
push
and
dec
xor
fstp
nop
dec
xchg
mov
jae
lea
sub
dec
inc
xlat
pop
outsb
lret
js
add
xacquire
jmp
inc
mov
test
inc
mov
sbb
pop
je
fstpt
aas
packsswb
pop
adc
dec
data16
cmp
jp
mov
xor
mov
test
push
mov
rolb
lods
or
mov
aam
js
fs
adc
pop
adc
rorb
push
shlb
pop
lret
pusha
sub
iret
inc
jg
xor
sbb
fs
push
lcall
mov
test
lret
cmc
adc
fcom
cmp
test
mov
xchg
hlt
add
add
je
ja
jp
je
rclb
lea
orb
add
inc
sub
cmpsb
out
xchg
insb
mov
fdivl
or
mov
xor
pushf
add
pop
jg
cmpsb
push
test
out
mov
xor
fadds
incb
cmc
pop
add
inc
int3
mov
cwtl
jmp
inc
mov
mov
cli
insb
add
mov
adc
dec
roll
add
cmp
shrb
pop
clc
mov
lods
push
lock
mov
loopne
pop
pop
orl
add
push
call
mov
mov
jb
xor
pop
test
ret
ds
add
cld
imul
scas
mov
call
xchg
movb
loope
mov
adc
push
mov
je
push
cld
pusha
pop
movsl
fcomp
repz
call
sub
adc
xchg
icebp
test
add
add
arpl
add
jmp
rorl
daa
jo
repz
inc
jbe
hlt
mov
nop
gs
fcoms
movsl
lock
incl
cmp
xor
in
rcrb
rol
shlb
inc
xchg
sub
mov
popa
cli
inc
cli
and
pop
xor
inc
cld
or
adc
mov
mov
jb
mov
add
cmpsl
dec
ret
mov
add
repz
sub
scas
cmp
push
add
movb
insb
or
rclb
loop
and
divb
add
xchg
in
iret
test
sbb
xchg
repnz
and
adc
mov
test
mov
dec
mov
jo
negb
dec
sbb
xchg
scas
test
push
cmc
loopne
rorl
add
add
les
push
pop
ljmp
test
mov
rclb
push
cmp
mov
call
imul
xchg
adcb
jle
inc
mov
push
push
jg
lret
lock
jne
cmp
int3
aam
outsl
push
sti
call
jp
das
or
cmpb
adc
imul
push
sbb
dec
lock
sahf
adc
inc
rcrb
shl
in
loop
mov
movb
cli
push
jge
add
and
jge
sub
xchg
mov
loopne
lods
dec
sub
data16
xor
sahf
mov
inc
push
inc
or
mov
pushf
lea
jmp
xchg
or
mov
push
fists
adc
inc
mov
in
adc
push
rcl
popa
orb
push
push
jo
or
test
dec
pop
fdivs
jne
jo
incb
jge
stos
pop
inc
sbb
hlt
jge
add
dec
inc
ret
push
ss
jo
leave
jecxz
js
pop
dec
adc
hlt
and
dec
jg
jle
jo
jbe
sbb
adc
sarb
adc
stos
dec
imul
push
cmp
and
nop
cmp
mov
sub
sub
mov
adc
fs
out
xchg
mov
sahf
shlb
pop
frstor
xchg
enter
into
sub
mov
mov
jmp
inc
call
add
and
pop
sbb
les
push
pop
push
sbb
xchg
bound
add
add
dec
jmp
nop
gs
inc
sbb
add
adc
fstps
adc
roll
insb
add
movb
adcl
lea
pop
inc
dec
jge
test
sti
mov
outsl
xchg
mov
ja
lcall
push
or
or
mov
xor
clc
hlt
mov
mov
push
outsl
pop
xchg
jmpw
add
adc
test
dec
shrb
push
push
cwtl
test
andl
rorb
mov
sar
outsb
outsb
addr16
das
ret
xorl
inc
and
and
add
push
and
into
mov
mov
shrb
rcl
loop
loopne
pushf
je
adc
enter
push
cld
dec
mov
push
decb
cld
sar
jo
adc
lret
inc
xor
cmp
pushl
pop
mov
inc
in
add
sbb
lods
clc
push
mov
mov
sub
add
add
int3
cld
sahf
fwait
push
out
push
xor
dec
loopne
jmp
ret
stos
test
push
pcmpeqw
cld
insb
push
inc
dec
dec
add
loop
insb
adc
lea
mov
push
pop
leave
push
leave
in
mov
stos
stos
xor
dec
push
add
sub
ljmpw
test
in
push
aas
aaa
xor
lods
leave
mov
cli
test
enter
dec
inc
mov
xor
dec
add
out
jne
rolb
stos
and
rol
mov
inc
hlt
jl
rclb
inc
sbb
push
es
push
fadds
add
and
gs
clc
push
loopne
incb
xor
mov
jp
adc
push
outsl
inc
add
movsl
shl
dec
jge
adc
adc
jb
repnz
xchg
lock
rorb
push
repz
jmp
insb
add
test
outsb
js
add
or
and
dec
mov
pop
fcmovbe
cli
movsl
sbb
push
sti
movsl
aaa
sbb
mov
pop
mov
out
sub
negb
add
push
call
pop
mov
scas
dec
mov
push
or
out
add
add
inc
or
jns
xchg
in
cli
jo
jb
fimuls
lock
inc
adc
fwait
adc
push
sub
push
pop
clc
xchg
pop
rolb
inc
pop
push
aam
xchg
inc
add
cwtl
mov
adc
mov
rcll
ucomiss
stc
mov
add
outsb
xchg
les
push
lcall
mov
dec
outsb
das
xchg
sbb
inc
or
lea
mov
pop
and
pop
mov
cmpsl
push
push
add
shrb
ret
dec
push
fisttpl
mov
cmpsb
pop
gs
add
mov
hlt
jne
ret
dec
inc
jne
adc
rclb
sbb
es
sub
mov
jge
icebp
fs
push
add
ljmp
and
add
adc
mov
jno
jmp
sbb
insb
xor
push
xor
push
push
add
and
sub
pop
pop
xor
aas
clc
mov
add
push
testb
push
shl
or
jp
fmull
test
ss
addb
rorl
add
sub
xor
mov
pop
mov
loope
push
testl
mov
dec
outsb
imul
inc
js
pop
push
and
mov
int3
test
hlt
pop
arpl
scas
lock
adc
mov
adc
sbb
notb
mov
scas
sarl
rolb
and
sbb
sbb
mov
add
call
add
les
and
jp
jne
mov
add
add
call
fsubrp
xor
mov
cli
cmpsb
cmc
xor
in
out
rclb
in
pusha
lea
xor
adc
pop
inc
mov
rol
testl
fs
xor
mov
in
sahf
jns
pop
jb
jne
icebp
jle
out
inc
add
int3
in
jne
or
and
or
movsb
xor
dec
mov
jmp
fs
test
add
push
incb
mov
fs
push
pushf
add
test
or
xchg
mov
fsts
inc
add
std
jg
or
sbb
cld
sbb
xor
mov
je
lret
outsb
shrl
mov
rorb
pop
dec
movsl
mov
inc
loopne
int3
mov
rolb
test
lret
sbb
in
mov
and
hlt
inc
adc
add
ljmp
or
movsl
dec
pusha
lcall
mov
mov
jge
jl
pop
add
and
sbb
mov
js
jmp
rorb
cmpb
pop
add
pop
dec
xor
pop
and
push
dec
xor
push
lods
mov
add
pop
push
call
adc
mov
push
mov
sti
mov
inc
ret
xor
jg
es
je
lock
pop
xor
je
decl
mov
enter
add
mov
add
mov
mov
push
loop
push
xchg
mov
adc
outsb
xor
sub
adc
push
or
das
push
pusha
xchg
fsubrl
enter
addb
movsb
xor
cmp
gs
add
cmc
loopne
add
insb
sbb
test
mov
stos
in
and
mov
aam
out
sbb
aas
xor
cmp
out
aaa
lea
sub
loop
mov
add
addl
cmp
mov
xchg
lock
dec
aad
or
mov
idivl
pop
pop
addb
jo
in
or
and
and
mov
mov
sbb
outsb
jecxz
mov
or
push
inc
sub
push
and
fsubrs
sub
pop
adc
pop
sub
call
or
js
mov
rcr
ror
int3
jae
add
rorb
sub
sbb
loop
push
or
xchg
out
dec
adc
imul
imul
lock
cmp
jnp
lea
fisttpl
push
inc
cmp
xor
xchg
or
sub
cmpl
pop
out
cmp
pminsw
push
pop
ret
mov
into
fnstenv
xlat
sbb
and
aaa
or
adcb
jnp
sub
popa
lods
jae
dec
cmp
incb
test
push
inc
subb
lock
or
adc
xorl
pop
dec
into
int3
mov
push
outsb
mov
dec
push
push
mov
pop
mov
ret
or
mov
push
lds
and
andl
mov
sub
or
push
mov
js
cmp
ljmp
push
add
jle
push
add
jmp
cmp
add
jecxz
sarl
aas
enter
popf
sbb
insb
fcmove
cmp
mov
out
add
fidivrs
sbb
dec
in
sbb
fisttps
xor
jae
push
data16
xchg
shrb
cli
push
or
lea
icebp
and
loope
lcall
dec
or
dec
lret
mov
jmp
jae
mov
fildl
out
add
stos
outsl
fs
lock
cwtl
paddq
inc
or
jmp
in
dec
fwait
xchg
fisubrl
jo
loop
test
jecxz
mov
test
clc
sahf
mov
shll
rolb
jg
xchg
fsubl
and
or
sbb
push
or
inc
shrb
dec
add
outsl
and
adc
adc
jo,pn
stc
je
lret
xor
data16
ud0
sub
mov
ss
clc
xor
fldl
bnd
and
jp
jno
les
mov
or
xor
add
push
mov
sbb
insb
test
popa
test
lea
decl
bound
add
mov
push
outsl
dec
add
sbb
mov
test
inc
leave
ret
adc
out
add
push
xlat
xor
jp
cmp
addl
add
cmp
fildll
mov
mov
adc
jb
icebp
or
cld
out
fs
outsb
jbe
push
mov
push
jb
inc
sub
cmpsb
out
in
adc
jo
fwait
sahf
adc
jbe
mov
cwtl
ss
lods
push
cld
shlb
hlt
jmp
dec
nop
mov
je
adc
and
mov
push
sub
pop
cmc
pop
scas
and
cld
push
push
rcll
test
test
fisttpl
mov
ds
or
call
gs
popa
inc
mov
dec
xor
mov
cld
push
loope
loopne
divb
or
je
xor
scas
or
ret
dec
mov
int3
cmpsl
ss
loopne
pop
mov
xchg
in
pushf
jp
sub
or
ret
cmp
xlat
je
add
dec
lea
push
cmp
mov
ret
add
test
adc
and
mov
mov
insb
dec
cld
shlb
bound
lods
mov
xor
push
arpl
or
gs
jo
inc
fsubs
pop
outsb
xor
push
dec
mov
lock
lock
pop
mov
dec
sar
dec
ret
jmp
mov
adc
xchg
cli
adc
push
loopne
push
pop
add
gs
leave
stos
adc
xor
cmp
cld
fnstcw
add
mov
lcall
fdivrs
and
loopne
sbb
xor
imul
mov
cmp
inc
insb
dec
jge
and
sub
xchg
fdivl
int3
inc
inc
adc
dec
push
push
int
fadds
loop
sti
mov
xchg
xor
adc
push
adc
cmp
jle
bound
sub
sbb
inc
push
cmp
xor
add
add
jo
inc
inc
mov
sarl
xchg
negb
mov
and
sbb
add
fsubl
adc
mov
sbb
jno
loope
add
jle
pop
pop
mov
push
call
inc
mov
in
add
das
xor
jg
push
int3
sub
inc
mov
push
adc
pop
sbb
ficoml
or
mov
xor
dec
stos
test
bound
push
sbb
push
call
sub
xor
je
ret
add
add
xchg
pusha
ss
dec
ljmp
aad
mov
inc
cld
adc
xor
shr
pop
imul
xchg
cmpl
jp
and
iret
loopne
out
adcb
stos
dec
push
pop
push
mov
inc
adc
or
js
inc
jg
xor
fmul
push
sbb
jg
mov
mov
and
cmp
call
pushf
dec
sbb
sbb
jl
or
jl
mov
out
push
jae
scas
sub
movsb
lock
int
sbb
inc
sub
js
fisubl
or
cmp
add
push
shrb
ljmp
cmp
lea
xlat
mov
cmp
ja
test
sbb
je
jl
add
pop
push
push
mov
adc
hlt
cmp
or
std
cmpsb
daa
push
cmp
cmpl
add
or
adc
es
scas
cwtl
sub
clc
sbb
jnp
fidivs
jae
lock
jmp
adc
shlb
cmp
int3
add
jge
imull
lock
fildl
inc
xchg
cmp
pop
sbb
inc
shlb
or
add
add
fists
sbb
cmp
push
andb
xchg
in
das
call
fiadds
mov
test
push
cmp
mov
dec
sbb
pop
mov
in
mov
rorb
aaa
popa
mov
nop
aaa
inc
in
add
pop
clc
and
pop
test
xor
jp
imull
pusha
mov
mov
xchg
aam
adc
xchg
nop
inc
loop
fcomip
mov
adc
push
pop
dec
xor
cmp
mov
cli
mov
incb
pop
dec
or
push
pushf
addb
subl
sarb
jle
jne
aas
add
jmp
mov
push
fdivp
xor
rsm
push
bound
push
mov
mov
mov
push
mov
rolb
inc
mov
adc
push
push
xchg
adcb
mov
cmp
lret
mov
je
mov
jmp
jbe
shr
xchg
xor
mov
pusha
xchg
decb
push
add
jmp
lea
in
or
call
fsub
sub
pop
xor
mov
arpl
mov
mov
push
mov
mov
push
inc
ret
pushf
add
pop
adc
xchg
in
or
xchg
in
rep
je
add
movsb
cmp
inc
inc
inc
mov
mov
nop
sub
les
or
push
adc
pop
pop
or
test
and
mov
ret
or
in
jmp
mov
imul
jo
mov
and
mov
mov
xchg
cmp
test
fnstsw
mov
mov
pop
clc
fimull
lcall
cs
lock
in
imul
loop
sbb
icebp
std
pop
call
add
pushl
loop
mov
sahf
and
or
in
sbb
aas
adc
xchg
rorb
adc
lea
push
loop
push
in
repnz
je
test
clc
in
cmpsb
mov
mov
inc
or
in
aas
dec
inc
fs
loopne
fistl
xor
in
shld
xchg
sbb
sti
test
mov
add
pop
adc
mov
mov
push
mov
in
push
ret
scas
mov
jmp
mov
into
lea
xchg
test
lods
add
push
xor
jnp
lock
insb
inc
or
pop
cld
lret
adc
jl
mov
pop
and
add
stos
and
aaa
adc
cmpsl
lea
cmp
sub
adc
aam
aam
jmp
int3
push
out
xor
xchg
rcrl
gs
data16
pop
and
adc
jg
sar
cld
mov
mov
sbb
pop
cld
sbb
inc
inc
movsb
addl
mov
repnz
test
mov
sbb
adc
sbb
sbb
xchg
rclb
mov
lea
xor
inc
es
add
incb
test
jmp
xor
addb
cli
cwtl
pop
lock
xchg
add
nop
add
xchg
outsl
sub
jle
fsubrs
std
mov
dec
sbb
adc
inc
xor
invd
ss
sub
jbe
jne
lahf
mov
add
mov
testb
add
je
mov
cld
out
pop
adc
mov
sub
mov
jmpw
int3
adc
or
xchg
test
ret
and
setl
sub
push
bound
ret
mov
fmuls
xchg
shll
mov
movsl
mov
inc
cmpl
movsl
xchg
or
dec
mov
lods
sub
inc
lds
testb
aam
add
ret
push
std
add
hlt
rorb
sbb
adc
mov
adc
xchg
js
sub
mov
sbb
push
push
jb
xor
sahf
inc
mov
es
jb
mov
adc
pusha
or
ret
fldcw
xchg
lahf
test
sub
ja
imul
ljmp
aam
bswap
cwtl
sbb
jge
mov
cmp
call
push
out
mov
push
fucom
mov
enter
mov
xorb
sub
into
into
sahf
push
cmp
add
mov
xlat
jecxz
adc
jge
scas
icebp
hlt
je
ficompl
mov
inc
sbbl
add
mov
xor
cltd
cli
mov
aam
dec
add
push
inc
mov
pop
incl
cld
test
jg
subb
and
cmp
mov
roll
jo
xor
or
cli
pusha
clc
add
les
pop
add
pop
inc
and
push
mov
push
adc
mov
or
jl
jbe
push
jns
dec
inc
add
fistpll
mov
pop
fdivl
mov
pop
adcb
push
cs
mov
xchg
fcmovbe
mov
pusha
dec
add
repnz
pop
shl
test
sub
adc
insb
inc
push
imul
test
pop
cli
pop
lret
xlat
lcall
push
adc
cwtl
das
mov
push
mov
movsl
ret
push
ret
pop
sbb
and
xor
mov
jae
ljmp
push
sbb
fcomp
jp
loope
xor
pop
aaa
push
orb
ud0
test
ds
pop
add
inc
insb
test
mov
cmp
adc
mov
and
xchg
test
mov
inc
push
dec
xchg
add
push
lock
mov
ret
mov
out
cwtl
cmp
dec
stos
leave
cli
or
int3
xor
cmpsb
adc
shr
cli
rolb
stos
mov
add
cld
inc
std
add
les
xchg
mov
add
sbb
rorl
mov
inc
cmp
fsubs
dec
bound
jo
call
jb
dec
cmpsl
sub
mov
mov
mov
fcmovnbe
cmpsl
aas
sub
sbb
and
fs
xchg
dec
into
mov
stc
cs
push
mov
fdivrs
add
je
popa
mov
movsb
sar
mov
in
outsb
jg
dec
std
bound
inc
jne
mov
das
call
stos
xor
cmpsl
push
add
jge
push
add
stos
add
fadds
xor
mov
std
mov
jne
pop
call
adc
decl
cltd
xor
mov
dec
testb
pop
push
push
dec
push
add
jb
mov
mov
popf
loope
inc
cmp
and
lock
and
pushf
rorb
cmp
jnp
js
adc
cmp
adc
pop
mov
push
xchg
inc
xchg
and
test
ds
mov
sbb
mov
mov
addl
out
adc
sbb
jae
inc
in
and
and
inc
loopne
data16
imul
inc
fists
sub
popf
pusha
jmp
xorb
jo
lcall
add
fwait
lcall
arpl
addr16
lods
mov
loope
jne
repz
sub
and
das
add
xchg
dec
call
aaa
movsb
repnz
pop
cmp
sti
or
pusha
sbb
and
adc
push
ss
push
pop
push
adc
mov
add
add
inc
fcompl
sub
xlat
movsl
push
add
pop
lods
add
movsl
and
mov
or
mov
sbb
cmp
insb
in
test
mov
ljmp
roll
scas
lret
invd
jl
repz
sbb
ljmp
sbb
add
inc
arpl
test
inc
sbbb
movsb
movsl
mov
add
xchg
and
mov
pop
stc
adc
xchg
or
dec
call
adc
arpl
xchg
push
ljmp
xchg
ds
inc
mov
mov
jg
mov
cld
xor
mov
cmp
and
icebp
pop
adc
xor
jge,pn
or
repnz
inc
mov
movsl
outsl
push
flds
mov
xor
rorl
inc
push
and
jmp
jbe
lea
mov
jb
sub
jno
add
outsb
sbb
loop
test
push
jbe
in
dec
push
loopne
fimull
push
pop
xchg
stos
inc
add
push
mov
jno
mov
push
rcrb
adc
sub
xlat
inc
add
stos
mov
lods
sbb
mov
jl
or
jmp
movsb
mov
ret
divb
dec
or
repz
mov
add
shl
mov
add
orl
cli
int3
aam
loope
cli
cmp
mov
sbb
jl
into
cmp
sub
mov
sbb
in
repz
call
sub
ret
inc
sar
jg
lret
xor
xchg
push
ret
pop
cmp
mov
insb
lcall
negb
lea
mov
mov
jp
cmp
cmc
mov
jmp
mov
add
push
cmp
ljmp
stos
xchg
jmp
sub
push
jae
imulb
xor
jmp
or
ret
out
jle
cli
pop
jne
mov
sub
mov
jl
cmp
inc
enter
mov
add
push
mov
push
inc
lock
mov
in
add
cmp
js
les
and
inc
add
mov
cld
inc
jmp
ret
push
cld
and
dec
or
outsl
mov
and
test
push
ds
hlt
sbb
jne
pop
and
pop
shrb
adc
add
cmp
lret
mov
decb
imul
mov
xchg
insb
fs
aas
cld
call
push
pop
movl
inc
cmp
push
or
aaa
cmp
dec
lock
add
andb
sarl
nop
test
mov
ljmp
lcall
lahf
mov
jb
xor
fdivrp
inc
mov
jne
fadds
cmpb
insl
jl
dec
sar
rol
or
test
inc
push
pop
adc
xchg
dec
mov
sub
adc
in
mov
mov
ss
test
jle
jecxz
subl
repnz
mov
lea
and
subl
inc
dec
insl
test
dec
adc
sub
cs
mov
sarl
add
enter
js
cli
inc
loopne
out
cli
je
adcb
push
add
dec
jo
adc
les
das
add
push
mov
rol
outsb
shrb
push
add
xchg
scas
add
and
rcl
jp
push
fsubs
test
into
mov
xchg
incl
and
mov
leave
pop
cld
inc
push
sub
les
popf
sbb
add
mov
mov
jg
shl
fcmovnb
or
lcall
rorb
outsl
ljmp
mov
push
insb
imul
fs
push
push
pop
dec
ret
popa
movsb
or
jp
inc
enter
pop
or
rolb
xor
dec
push
into
xchg
push
clc
and
inc
dec
pop
xor
mov
lea
jmp
mov
push
mov
lea
inc
arpl
les
cmpsb
insl
xlat
push
cld
cli
dec
sub
in
mov
push
xor
ficoms
sbb
xchg
es
daa
test
jp
push
out
and
mov
pop
pop
push
test
add
bound
jb
xor
dec
mov
rcl
push
movsb
icebp
mov
fsubrl
lods
es
lods
sub
insb
push
and
xchg
popa
aam
cs
lock
xchg
mov
daa
je
stc
mov
sbb
push
lea
add
jmp
and
dec
xor
mov
sbb
mov
lds
mov
sub
add
jge
xchg
inc
push
dec
or
outsl
push
or
and
mov
pop
jnp
and
lcall
lret
adcb
xchg
rolb
and
and
pusha
xor
add
incl
mov
jne
imul
push
adc
scas
shlb
add
and
repnz
mov
fsubs
jle
jge
xor
adc
and
icebp
in
leave
mov
and
adc
fstps
jle
pop
fisubl
pop
lcall
lods
stos
daa
xor
dec
test
outsl
andl
pop
aas
jns
push
jb
jmp
cmpsb
decb
loope
sbb
rclb
aam
push
mov
xchg
adc
add
dec
xchg
call
add
pinsrw
add
movsl
push
add
adc
push
cld
insl
add
fmul
xor
test
aad
xchg
mov
cmp
inc
shrb
enter
push
jae
mov
mov
sbb
sbb
mov
push
mov
adc
into
cmpl
aad
fxtract
jge
xor
test
jae
aam
ret
or
push
inc
inc
adc
loop
push
fs
adc
js
cmp
cmp
loop
lcall
cmp
or
mov
push
cmp
inc
push
mov
inc
jecxz
sub
mov
ret
hlt
inc
jge
cmp
mov
mov
mov
xor
adc
je
mov
sbb
inc
imul
addl
rorb
shlb
mov
cmp
in
fnstsw
mov
nop
dec
xorw
popf
cs
fs
xor
outsb
stos
dec
out
iret
dec
ja
int3
in
js
adc
hlt
call
int
push
pop
mov
outsl
jno
pop
mov
xchg
mov
add
sarb
sbb
xchg
int3
jmp
sbb
add
xchg
mov
sub
jns
ljmp
fimuls
push
mov
cmp
int3
mov
mov
add
and
add
adc
inc
inc
xorl
push
hlt
out
pop
nop
add
cmp
push
dec
sub
jo
in
push
or
movsl
push
cmp
js
stos
dec
ds
loopne
or
js
std
sub
ret
inc
aaa
inc
xor
add
or
add
and
je
test
fimuls
pop
pshufw
dec
xor
inc
pop
daa
daa
icebp
mov
xlat
xor
cs
mov
inc
pop
frstor
jmp
mov
or
sar
cmp
and
or
dec
fimuls
sub
in
push
hlt
ss
cmp
js
jmp
sub
in
add
push
mov
push
lock
mov
add
and
cmp
xchg
mov
test
jl
adc
fwait
in
mov
mov
pop
jb
push
jne
mov
ss
pop
mov
sub
mov
xchg
sbb
mov
pushf
push
incb
call
and
aas
and
xchg
aam
ret
test
push
dec
adc
jne
out
inc
lea
nop
call
mov
pop
cmp
popf
add
push
test
adc
adc
pop
and
scas
sub
cmp
aas
lahf
popf
rclb
push
add
xchg
test
cmp
fs
pop
int3
cld
out
sbb
jno
pop
ja
pop
jg
pop
cld
leave
add
std
shl
ss
pusha
jl
dec
and
pop
push
int
test
xor
cli
jo
jle
and
xor
outsb
and
push
xor
mov
inc
push
imul
pop
or
data16
dec
dec
fucomi
aas
mov
ss
push
stos
jno
les
outsl
in
out
cld
inc
adcb
fs
pop
insl
int
loopne
sub
fisubs
adcb
lds
and
push
test
xor
rcrl
add
andb
ficompl
jmp
jne
rcrb
sbb
test
mov
lcall
enter
pop
lds
lock
and
jb
xchg
push
sbb
xchg
test
jb
ljmp
dec
dec
xlat
sub
jmp
test
out
ret
shlb
jne
xchg
add
shrl
shl
xor
inc
movsl
push
mov
rol
push
and
lcall
aaa
sub
cmp
sbb
mov
jl
xchg
jo
push
push
call
lock
das
and
enter
xor
fstpl
adc
mov
sbb
sub
mov
mov
cs
inc
dec
sbb
dec
fildl
pop
cmp
add
pop
lds
jns
add
lahf
lock
or
clc
xchg
cmp
incl
sbb
adc
adc
mov
fwait
inc
sbb
hlt
rorb
out
jbe
mov
hlt
sbb
mov
pushf
int3
and
push
in
lock
mov
clc
and
xor
add
adc
add
lahf
and
cmpsl
sbb
fwait
and
cli
test
push
daa
push
in
sahf
add
xchg
and
dec
loop
pop
test
insb
rclb
lcall
add
push
push
pop
xchg
sbb
adc
lock
jne
mov
add
jl
and
mov
dec
or
xor
mov
sub
rolb
or
sub
adc
bound
and
neg
mov
push
jb
test
test
clc
popf
mov
loope
mov
add
jecxz
mov
gs
mov
cmp
pop
pop
or
out
push
pop
mov
lea
inc
mov
jl
push
push
clc
dec
mov
gs
xor
pop
jo
out
popf
xor
andl
lods
orl
mov
or
insb
jl
cmp
or
into
xchg
push
loope
xchg
ss
push
dec
aad
inc
call
mov
mov
jbe
adc
int
add
adc
sub
xor
jmp
testb
add
and
js
lods
pushl
js
hlt
das
test
adc
pusha
xchg
inc
outsb
fmull
loop
fdivl
or
adc
cwtl
int3
jg
lcall
in
je
mov
adc
call
push
add
mov
add
pop
mov
add
and
loop
xchg
lret
dec
or
jo
scas
mov
imulb
and
int3
dec
jbe
subl
jp
xchg
movsb
test
neg
aad
jmp
orl
push
andb
lcall
add
jge
mov
add
call
js
mov
or
lds
and
mov
mov
adc
mov
inc
pop
or
sbb
mov
xor
mov
rclb
les
and
fisubl
push
jb
movsl
test
popa
xor
inc
mov
add
sub
jge
pop
push
call
xchg
scas
mov
loope
in
and
insb
xor
sbb
inc
inc
loop
mov
pop
lock
xchg
add
push
roll
loop
mov
sti
mov
nop
scas
rolb
lret
je
jmp
push
inc
lock
inc
inc
push
mov
or
subb
and
call
lea
das
xor
inc
xchg
shlb
or
xor
dec
inc
jb
dec
jmp
gs
and
or
sarb
pop
push
push
push
or
pop
xchg
test
sahf
xor
xorl
repnz
gs
pop
pusha
sti
scas
add
call
adc
pushf
cmp
cld
jnp
pop
xchg
cs
repnz
inc
pop
scas
push
mov
inc
pop
mov
inc
js
dec
pop
add
push
shl
scas
decb
data16
sbb
adc
add
lods
mov
dec
add
mov
cli
inc
dec
imul
hlt
cwtl
fwait
mov
pop
aam
and
in
imul
sbb
rol
or
aaa
mov
adc
adc
or
cltd
test
xchg
xchg
jmp
mov
add
push
sub
and
push
sahf
inc
inc
adc
push
shrb
or
inc
mov
cld
adc
xorb
jo
add
and
or
test
mov
adc
aam
hlt
sub
mov
mov
mov
and
rcll
and
jae
aam
cmpsb
mov
jae
les
aad
ljmp
jp
sub
sub
pop
pop
adc
push
fiaddl
in
cmp
jmp
xor
clc
cld
mov
jmp
pop
outsl
dec
push
cmp
stos
inc
test
jmp
orb
dec
rolb
pusha
ret
fildll
data16
pop
bound
adc
xor
fcomi
mov
cmp
es
xor
stos
outsb
inc
cld
push
jne
test
mov
push
push
xchg
mov
sbbl
ja
scas
insl
sub
push
xchg
sbb
dec
ret
por
incl
sbb
lea
mov
dec
decb
mov
leave
inc
push
clc
in
test
icebp
mov
fmull
mov
hlt
mov
andl
push
dec
add
inc
adc
aaa
jb
loope
jl
mov
popf
cli
cmp
push
pop
ret
cmp
dec
add
pop
pop
jmp
mov
rolb
outsl
mov
pop
mov
mov
xchg
pusha
or
or
jmp
mov
rolb
gs
adc
rcll
add
cmp
ss
ss
adc
add
inc
mov
jmp
add
gs
dec
sbb
mov
pop
adc
and
call
jl
daa
cmc
xchg
or
mov
fdivrl
in
ljmp
jno
lods
imul
or
inc
cld
push
cli
push
sbb
int3
incb
or
andb
sub
popf
fadd
fisttpll
lret
fsubrl
pop
xor
scas
inc
ret
insl
mov
ss
adc
ljmp
aad
push
mov
add
movsb
jle
dec
add
test
stc
jge
mov
gs
pop
ljmp
les
loope
sahf
lock
mov
nop
add
push
jg
adc
subl
add
pushf
shll
ljmp
insb
lret
adc
sbb
or
or
add
cld
cmp
ljmp
mov
xor
subb
sub
jle
sbb
outsb
sub
inc
mov
push
sbb
jge
daa
mov
xor
das
sub
ds
pusha
pop
sub
xor
sub
mov
pop
xchg
dec
push
cmpl
cmp
cmpsb
je
push
xor
insb
repnz
rcl
lret
push
mov
mov
cld
js
in
clc
imulb
sbbb
pop
add
xor
cmovp
push
int
cld
add
add
rolb
pop
dec
dec
pop
xchg
clc
int
pop
bound
pop
push
cmpl
int
sbb
out
mov
js
aad
inc
push
pushf
pop
xchg
add
jo
outsl
popa
jecxz
pop
in
enter
sub
in
int3
mov
pushl
xor
xchg
ret
mov
fwait
icebp
xor
sub
mov
dec
les
fs
fcmovne
rolb
push
push
mov
in
add
ss
out
rcrb
xor
sbb
cmp
mov
adc
mov
xor
mov
mov
sub
mov
loopne
pop
sbb
mov
mov
shrb
ret
pop
add
inc
stc
les
pop
bnd
dec
dec
mov
pop
cmp
mov
mov
sub
mov
and
xorb
mov
xor
scas
std
int
lock
in
mov
test
cmp
mov
outsl
test
fistpl
xor
into
into
movsb
sub
push
jmp
xorl
orl
push
jae
sub
push
xchg
incl
imul
dec
push
mov
sub
mov
cmp
push
cwtl
adc
movsl
push
sets
lcall
mov
adc
adc
mov
sbb
and
lock
cli
cmp
and
sarl
lahf
mov
xor
test
adc
pop
test
jbe,pn
sbb
cmp
jnp
daa
jno
aas
jbe
sub
fadds
mov
shll
mov
and
lea
mov
shufps
xor
pop
lods
sbb
shlb
cmp
xlat
test
xor
sub
movb
ja
out
data16
dec
orl
mov
movl
inc
mov
cmpsb
mov
adc
shlb
mov
adc
add
sbb
mov
mov
adc
cmp
div
push
sbb
aas
sub
add
idiv
adc
add
cli
push
andb
mov
mov
call
jle
and
jmp
cs
fimuls
inc
mov
cmovl
inc
jecxz
sarl
decb
mov
test
fs
rolb
negb
push
cmp
insb
cmp
inc
push
push
mov
mov
cmp
and
aam
jno
cli
out
mov
ror
lea
jne
clc
pop
lock
sti
insl
rcll
test
adc
adc
cmp
push
aad
jmp
push
call
mov
lods
xchg
push
xchg
mov
femms
test
jno
add
and
cmc
xchg
and
xorb
mov
xor
inc
xabort
dec
std
cmpsb
mov
xor
je
in
push
rcr
dec
pusha
out
xchg
push
inc
rorb
sbb
push
ljmp
stos
push
negb
test
inc
adc
call
popf
and
or
sub
cmc
nop
cwtl
push
je
add
sbbb
xchg
push
inc
in
push
push
mov
xchg
lret
jae
dec
and
add
shl
adc
subb
cld
test
adc
inc
or
push
xlat
aam
sbb
sub
int3
pusha
mov
mov
and
mul
adc
sti
add
cmp
das
push
addb
cmovae
jl
mov
cmpb
inc
test
mov
adc
shl
call
pop
shlb
cwtl
cmp
pushf
incl
mov
clc
push
mov
mov
aad
pop
adc
inc
clc
jb
gs
data16
outsl
mov
clc
std
push
cmp
or
jecxz
call
fadd
or
testb
and
add
out
or
pop
aad
outsl
cmp
in
or
sarl
outsl
pop
cmp
mov
push
add
xor
add
outsb
out
sub
out
jb
icebp
in
test
inc
or
fiaddl
jae
push
mov
lock
addl
jo
insb
or
lret
mov
orb
push
loop
or
jle
or
out
jbe
idiv
pushl
nop
rol
sub
lds
or
cmpsb
pop
xor
or
adc
mov
test
xchg
cltd
xor
outsl
sub
sbb
ja
add
add
ss
out
sub
mov
push
mov
mov
push
psraw
jo
push
push
pop
push
test
pop
mov
mov
or
out
pop
rorl
pop
in
cmp
or
jmp
loopne
dec
mov
and
inc
inc
fstpt
cmpsb
mov
add
mov
ljmp
cs
clc
mov
mov
and
xchg
jle
inc
test
inc
gs
xor
cli
adc
shlb
xor
jecxz
js
pop
mov
cli
jg
out
inc
outsb
fldl
push
cmp
sub
rcll
mov
jp
pop
pop
pop
nop
mov
lds
xchg
dec
add
sub
clc
mov
movsb
out
es
movsl
adc
mov
shlb
add
mov
sbb
lock
sbb
and
pop
incb
xor
adc
sbb
mov
data16
mov
push
aaa
or
add
cmpb
mov
stc
inc
adc
adc
mov
iret
shll
pop
aaa
or
pop
pop
pop
shl
cmp
dec
inc
ret
pop
addl
push
clc
add
sub
adc
or
cmp
rolb
insb
cmp
pusha
xor
cs
mov
adc
je,pt
cmpb
into
push
daa
aam
cs
testl
or
outsb
jmp
pop
dec
inc
xchg
push
adc
xor
xor
push
cli
sbb
mov
xchg
pop
lcall
mov
nop
xor
aaa
xorl
push
cmp
or
mov
push
mov
sahf
shr
mov
mov
jb
cmp
adc
adc
icebp
mov
and
fs
fsubl
scas
xor
adc
andb
sub
mov
or
movsl
xchg
xor
rclb
mov
loopne
lock
insb
ficompl
dec
cmp
cmp
push
test
mov
mov
pop
pcmpgtb
jne
xchg
ret
xchg
aas
pop
sti
andb
incl
push
lock
cmpsl
or
dec
mov
add
fdiv
xchg
cmp
push
shlb
insl
jl
cs
sub
add
add
mov
add
cmc
sub
mov
dec
inc
inc
les
stos
aas
xor
xor
push
nop
jne
and
push
loop
shll
add
shr
adc
cmp
ja
mov
adc
mov
pop
mov
loope
repnz
and
repz
cmp
fdiv
adc
mov
ret
add
sti
repnz
mov
ss
out
lahf
lods
and
xor
and
mov
pop
or
adc
add
xchg
push
sbb
inc
xor
imul
mov
lock
inc
adc
xor
subl
sub
adc
push
clc
stos
call
call
pop
xor
loopne
les
dec
push
inc
add
add
jb
sub
mov
jle
sub
call
jmp
call
xor
in
orl
lock
in
jo
rcll
jne
sbb
test
fcomps
punpcklbw
mov
adc
xor
jp
add
sbb
addb
pop
push
sbb
loop
cld
push
dec
add
jmp
or
cmp
cmpsb
data16
sbb
inc
mov
sbb
test
xor
sub
or
sub
pop
and
lock
sub
xchg
mov
ret
adc
sbb
inc
lods
dec
inc
hlt
js
ds
nop
push
cmp
and
in
push
mov
add
sbbb
scas
mov
push
cmpb
jne
loope
inc
pop
repnz
nop
inc
shll
jg
and
push
xchg
cld
push
pop
and
push
xchg
push
add
push
jl
dec
dec
clc
mov
call
and
andl
add
add
dec
fs
sbb
jmp
push
out
cmp
dec
push
xchg
and
arpl
imul
jle
inc
sbb
arpl
lods
sarb
stos
mov
lret
pop
ret
icebp
ret
int3
frstor
clc
xor
aas
and
es
and
xchg
and
jg
nop
inc
mov
lret
je
ds
add
sub
ja
sub
sbb
or
mov
mov
stos
cli
push
insb
cmpsb
add
aam
and
mov
cmp
pop
sbb
js
cmovge
mov
xchg
es
adc
pop
lods
les
ret
jg
pop
push
rorl
les
lock
and
js
dec
lahf
cs
clc
xor
cld
xor
sarb
int3
or
mov
shlb
dec
cmp
loop
rorb
rclb
dec
out
ss
sub
add
push
and
int3
fsubr
std
mov
jne
adc
or
push
jnp
xchg
mov
mov
mov
mov
mov
xchg
aad
popa
push
fsubl
mov
outsl
xchg
push
push
repnz
ja
push
or
pop
xor
hlt
roll
outsl
fs
lea
or
xor
fcmovne
sub
les
jl
adc
pop
mov
sub
mov
pop
and
add
push
cld
add
sti
cltd
test
pop
pop
add
or
idiv
in
and
xchg
mov
xlat
fists
les
and
test
push
pop
inc
loopne
dec
jle
in
jmp
inc
or
outsb
pop
je
push
push
mov
or
pushf
add
fs
or
mov
std
push
mov
loop
cmp
add
jp
xor
jae
roll
mov
out
mov
insb
outsb
pop
push
sbb
imul
das
mov
aas
add
and
push
xchg
arpl
stos
or
adc
or
js
mov
movb
sbb
je
call
xorb
cmpsb
or
xchg
mov
adcb
pcmpeqd
movsl
lock
mov
es
add
mov
sbb
jl
test
sbb
jbe
inc
dec
dec
out
imul
cld
dec
or
or
pusha
aas
lock
push
add
jmp
add
adc
pushl
adc
xor
fcompl
mov
lods
lds
jl
jae
xor
or
or
inc
in
inc
xor
and
xchg
pop
mov
sub
or
ss
push
scas
sub
and
fcoml
xor
push
xchg
scas
and
nop
and
inc
in
push
sbb
jbe
fisubrs
xchg
out
add
test
dec
mov
xor
inc
ja
add
mov
fdivs
mov
into
jne
mov
loopne
adc
arpl
mov
xchg
test
cmp
xchg
cli
inc
jg
aam
testb
add
fcmove
xor
or
mov
shlb
mov
arpl
je
jb
cs
xchg
lods
sbb
stos
and
aaa
xor
call
aaa
xor
cld
mov
ret
add
jp
outsb
sub
lret
test
push
push
outsl
add
pusha
imul
xor
clc
cmpsl
mov
sbb
test
sub
out
mov
xor
jno
je
inc
adc
xchg
mov
scas
and
jb
pop
xor
test
mov
dec
xchg
or
lea
inc
rolb
into
sbb
test
cs
dec
fs
in
std
push
inc
jp
dec
inc
mov
subb
jge
or
xchg
jge
repz
orb
cmc
mulb
inc
mov
mov
xchg
ljmp
push
and
imul
and
push
sbb
pop
and
inc
dec
jmp
adc
fs
cmp
push
sub
iret
leave
je
jle
jmp
xor
cmp
jg
int
jb
sbb
pop
pop
or
and
lcall
enter
adc
pop
pushl
xor
and
call
adc
popf
add
inc
or
sbb
adc
hlt
mov
out
int
mov
subl
pop
jge
mov
xor
sbb
into
push
inc
mov
test
pop
sbb
add
add
es
pop
fmul
stc
push
out
js
cmpsl
mov
jae
xchg
shrb
iret
mov
push
and
add
les
rolb
in
jo
nop
fwait
mov
and
cmp
push
fdivrl
or
test
or
pop
out
or
sbb
cmp
fwait
mov
cmp
jae
sub
push
or
jl
mov
pop
jne
xor
jo
push
adc
cli
xor
xchg
imul
into
or
int3
xlat
mov
loopne
aam
or
add
add
sbb
xor
push
sbb
in
movsb
imul
fs
push
mov
mov
int3
mov
test
test
jne
test
sbb
js
xor
test
or
cld
add
ljmp
fcomps
ret
mov
incl
cmpsl
rcrl
gs
out
and
add
cmp
xor
cmc
xor
stc
popa
dec
mov
shlb
inc
sti
jg
dec
push
icebp
les
std
xor
push
cli
xchg
sub
xor
xor
pop
lret
shll
into
push
mov
outsl
mov
adc
dec
cmp
outsb
shl
cmp
adcb
orb
test
inc
push
aaa
and
les
rorl
xchg
sub
lock
jo
jne
mov
adc
adc
pop
es
adc
testl
dec
pop
pop
mov
mov
xchg
and
sub
sti
gs
lcall
adc
mov
cmp
add
insb
xchg
xorb
sahf
mov
test
mov
mov
xor
mov
add
xchg
pusha
cmovbe
nop
add
pop
xlat
sub
cmp
je
cmp
call
pop
or
bound
or
or
test
jb
jae
je
mov
outsb
add
cmc
add
dec
cmp
in
add
lea
std
andl
jle
or
jne
jmp
cmpsl
mov
cmp
cmpl
outsb
lds
xchg
xchg
pop
add
lcall
cld
and
jo
or
nop
incb
fs
decl
push
inc
push
inc
xor
pop
or
cmp
in
xor
cmp
call
fucomp
sbb
jo
es
add
adc
hlt
in
rolb
outsl
mov
mov
xchg
cmp
inc
jb
push
mov
rorb
fimull
mov
call
out
adc
insl
or
cmp
shlb
jae
mov
fsubrl
mov
pop
dec
fstps
outsb
push
adc
adc
bnd
jne
pusha
add
and
loopne
mov
jle
insb
mov
js
sub
mov
loop
sar
inc
fldl
inc
cmp
inc
cmp
inc
js
jp
stos
adc
push
data16
dec
addb
cmp
insb
js
push
push
paddusb
sbb
xor
xor
or
push
or
and
pop
es
cmp
dec
xor
pop
mov
mov
jge
inc
push
inc
add
add
call
aad
int3
mov
inc
adc
cmp
cli
decl
jb
pop
add
call
cld
clts
jno
mov
aam
in
and
xor
or
sbb
mov
cs
jp
fbld
mov
mov
adc
jmp
add
ret
cmpsl
jp
inc
sbb
je
test
bound
xchg
mov
mov
ficoml
push
adcl
and
mov
lret
lea
push
adc
shll
sbb
cltd
xor
test
xchg
aas
testb
in
outsb
decl
xor
mov
cld
out
cmpsl
or
mov
outsb
sub
out
gs
push
leave
cli
sarb
andl
bound
mov
clc
lret
mov
xchg
and
cld
or
outsl
or
and
outsb
jbe
sbb
pop
inc
push
ficoml
push
push
sbb
mov
callw
adc
mov
dec
insb
xor
pusha
movsl
or
sbb
loopne
lret
push
repnz
dec
sub
mov
shll
and
adc
test
sub
nop
adc
and
clc
fwait
icebp
or
inc
sbb
xor
jle
std
mov
xchg
xchg
dec
test
mov
mov
je
mov
fcmovnu
sbb
pop
lahf
popfw
loop
jne
mov
cmp
pusha
outsl
pop
inc
in
xchg
ja
fiaddl
dec
out
push
std
enter
cmpsb
lods
sub
sub
movsl
push
add
mov
fstpt
push
push
inc
stos
insl
mov
mov
or
aam
aam
sbb
mov
cli
pop
int
fdivr
mov
movl
das
sub
pusha
add
ret
or
negl
int3
push
data16
push
or
adc
xchg
lahf
jmp
adc
les
lock
aaa
xor
popa
stc
inc
sub
push
cmp
add
rcl
popa
adc
addb
andl
lret
inc
add
pop
adc
mov
add
stos
add
lods
mov
les
decl
jle
mov
pop
in
inc
sbb
inc
jbe
add
sub
sub
mov
push
cld
push
mov
sbb
and
shlb
jle
push
in
and
lea
and
pop
aaa
xor
mov
in
add
movsl
lcall
push
mov
or
mov
sarl
or
xor
rorb
add
push
mov
fcomps
pop
clc
mov
inc
xlat
ljmp
mov
enter
shll
push
push
sub
add
negb
in
xor
lret
inc
or
in
add
mov
inc
movb
jmp
cmp
add
mov
pop
mov
scas
or
in
andl
sub
adc
or
inc
inc
pushl
gs
imulb
loop
lock
inc
mov
inc
add
call
cld
leave
aaa
clc
movsl
rcrb
adc
xor
adc
test
add
aam
jmp
outsl
cmp
and
jle
sub
inc
icebp
add
ljmp
aad
jno
test
and
jbe
mov
or
mov
ja
fistpll
push
or
add
jmp
and
repz
outsb
mov
mov
lcall
call
xor
out
sub
imul
movsl
dec
xor
pop
mov
mulb
sub
push
call
adc
hlt
jne
add
and
and
into
push
pop
iret
enter
inc
sbb
outsl
sysexit
jo
and
fsubrs
jne
imul
outsb
clc
movsb
in
adc
push
and
push
xlat
mov
push
test
call
dec
mov
add
ss
jg
fdivs
push
jge
jg
add
lock
push
fsts
aaa
inc
loopne
hlt
add
adc
dec
pop
jecxz
mov
xor
adc
sbb
pop
pop
fildl
dec
es
mov
sbbl
dec
lods
add
in
je
int3
adc
mov
rclb
fcoms
xor
mov
xchg
in
jmp
jl
shll
mov
lret
push
js
sub
pcmpeqw
inc
test
dec
pop
test
hlt
mov
das
inc
test
push
test
scas
scas
add
mov
mov
out
sbb
cmp
clc
add
nop
mov
fs
add
test
pusha
es
mov
fimull
add
out
shll
orl
dec
gs
pop
mov
push
or
call
cmpsl
bound
xchg
push
sarb
in
cmp
pop
pop
pop
sbb
or
andl
scas
xchg
lret
mov
jp
pop
add
call
add
outsb
loop
ds
mov
sbb
mov
mov
and
sbb
loope
cmp
rolb
in
inc
lret
cli
add
stc
incl
in
lcall
ja
jae
sbbl
sahf
hlt
outsl
push
add
inc
push
lods
or
test
ret
jo
mov
mov
lock
add
callw
adc
mov
mov
icebp
cld
pop
out
addb
dec
pop
sbb
sbb
aad
mov
add
cmp
mov
adc
cmp
pushf
sbb
cmp
enter
adc
or
push
push
test
and
adc
ficompl
sub
lock
or
sub
test
sub
shlb
cli
sbb
les
aam
inc
mov
es
push
imul
sbb
rorl
ja
adc
xchg
dec
fistpl
daa
mov
sbb
std
add
jmp
xor
xchg
jne
push
cmp
clc
mov
or
push
push
inc
inc
scas
aaa
loopne
xor
ret
jae
cmp
pop
mov
rorb
js
test
jecxz
mov
xchg
and
mov
or
or
insl
add
dec
cwtl
pop
xor
adcb
adc
inc
push
cmp
jnp
pop
decl
cmp
roll
mov
xor
adc
mov
add
imul
lea
xor
movsl
add
xor
pop
or
enter
push
test
mov
adc
xchg
pusha
dec
mov
gs
mov
xchg
cli
fsts
jecxz
jp
xor
jbe
push
adc
lock
pusha
push
sub
cmpl
or
mov
inc
push
or
cmc
sbb
stos
mov
fidivrl
scas
inc
fst
adc
xor
dec
lods
adc
pop
rsqrtps
sbb
test
call
sbb
mov
rorl
ds
out
fisttps
push
jmp
fdivr
or
movsl
pop
je
pop
gs
stos
push
das
xor
mov
ret
ds
pusha
scas
jle
ds
xor
js
lock
xchg
mov
xor
xor
dec
push
pop
aaa
stos
enter
mov
inc
adc
push
sub
jg
mov
sub
sub
and
jmp
mov
mov
jl
mov
inc
lea
inc
sbb
jl
rorb
mov
pop
enter
ret
mov
jl
jnp
push
sbb
out
cmp
and
xor
js
call
bound
cmp
adcl
jae
adc
mov
aam
cmp
testb
rolb
lahf
add
or
jo
lds
cmpsb
sbb
loopne
rolb
ljmp
pop
test
pop
xchg
push
aam
or
test
push
dec
mov
mov
mov
je
jmp
dec
stos
stos
or
mov
or
push
jl
jmp
dec
dec
adc
mov
gs
sub
push
mov
cld
mov
xchg
and
pusha
in
mov
sub
icebp
push
sub
lcall
pop
mov
cvttps2pi
push
mov
and
in
scas
mov
stc
push
xor
and
adc
xchg
xchg
push
mov
or
push
cli
inc
call
fcompl
lock
mov
lea
std
in
in
popa
fcoml
outsl
movsb
ret
pop
jp
mov
dec
add
dec
xchg
push
insb
xchg
xchg
mov
xchg
jbe
inc
cmp
stos
lret
out
sahf
nop
lock
fs
lea
dec
lea
push
or
jle
jecxz
jae
cwtl
mov
jns
xor
cmp
xor
mov
inc
adc
test
lret
jl
movsb
push
or
mov
pusha
int3
xor
sti
or
fimull
xor
rorl
lock
in
sbb
cli
enter
dec
and
addr16
insb
loopne
fldl
pop
lret
mov
add
adc
les
outsb
fldt
adc
sub
in
testl
xchg
lret
push
gs
pop
mov
pop
scas
ljmp
data16
arpl
push
push
loop
mov
inc
mov
jge
push
subl
xchg
scas
mov
pop
clc
add
dec
sahf
jl
test
outsl
pusha
ljmp
adc
adc
ss
orb
in
pusha
int
roll
enter
enter
out
pusha
aam
jae
sbb
add
push
and
test
mov
mull
push
dec
shlb
cmp
sub
aam
aaa
push
aaa
mov
pop
add
mov
out
ja
gs
xchg
into
mov
jmp
mov
clc
aas
std
inc
mov
add
test
aaa
sbb
jle
xlat
push
mov
loope
fnsetpm(287
sub
push
dec
dec
xor
das
bound
or
mov
loopne
cwtl
sub
repnz
outsl
jg
cmp
jae
sub
or
inc
outsl
inc
pusha
cmpsl
test
sbb
push
xchg
push
push
push
rsm
adcb
not
fiadds
inc
mov
pushf
mov
add
jno
addb
xor
cmp
inc
test
insb
jle
ljmp
jge
mov
call
mov
xchg
pop
daa
add
gs
test
clc
jbe
ret
sbb
cmp
mov
test
mov
push
xor
cmp
or
and
pop
cmpsl
pop
ud2
adc
loop
inc
jp
inc
jmp
jl
pushf
js
adc
int3
scas
out
aam
dec
loopne
mov
push
icebp
dec
mov
mov
mov
in
mov
push
pusha
aaa
mov
and
out
lcall
jbe
sbb
popa
jo
loop
adc
std
inc
ret
les
push
push
push
mov
nop
shl
arpl
push
lock
stos
dec
movl
mov
aam
es
xchg
movsl
stos
mov
mov
jge
sbb
dec
pop
orl
cli
ret
or
push
sbb
inc
inc
push
leave
add
inc
mulb
pusha
xchg
cmp
push
mov
mov
xor
mov
pop
testb
lcall
mov
jge
push
imul
rorb
mov
shrl
push
popa
push
lock
adc
and
push
cmp
fiaddl
and
lsl
rolb
nop
and
adc
fldl
mov
ja
outsl
out
push
jmp
insl
xchg
insl
std
inc
dec
imul
sti
push
and
jmp
push
xor
or
and
and
cmpsl
pop
push
mov
add
lods
jp
inc
out
mov
mov
xor
in
adc
push
push
fisttpl
test
jmp
mov
test
jb
cli
rolb
jg
call
nop
push
add
xor
or
xchg
out
sar
shr
dec
fdivrs
outsb
mov
xchg
ret
mov
pop
in
ret
cbtw
mov
adc
and
test
mov
adc
mov
pushf
push
sub
pusha
add
mov
push
ljmp
lock
push
pop
sbb
fsubs
push
test
shr
pop
adc
inc
les
and
inc
inc
add
xchg
mov
cmp
jmp
rclb
cmp
jne
mov
mov
mov
sahf
jb
mov
stos
push
adc
mov
scas
call
push
and
test
pop
es
shrl
ror
stc
pop
dec
les
mov
pop
bswap
push
sbb
lret
outsb
clc
pop
and
mov
fcmovb
adc
xor
in
and
pop
add
push
push
jecxz
push
xor
arpl
ret
mov
insl
pop
cld
and
xchg
movsb
dec
inc
mov
add
popa
jp
push
pop
or
inc
sbb
mov
loopne
shlb
and
orb
cld
mov
insl
mov
nop
pop
loop
test
scas
push
fs
test
loopne
sbb
std
adc
add
mov
and
jae
cmp
inc
inc
and
lock
int3
sbb
inc
bound
jl
add
push
push
mov
xor
test
add
pop
int
xchg
negl
jne
dec
jmp
add
xor
inc
lock
imulb
cmpsb
fwait
jge
cwtl
gs
cmc
sbb
sbb
mov
add
jnp
loop
les
pop
sar
inc
pop
mov
adc
mov
inc
push
mov
jl
sbb
arpl
mov
jb
nop
loop
or
repnz
call
push
cmp
dec
pop
adc
xchg
fnstenv
shlb
mov
jno
insb
pop
movsb
pop
mov
aam
adc
and
dec
and
push
jne
aam
out
loop
scas
hlt
scas
pop
pushl
movl
mov
loopne
inc
sbb
ljmp
push
dec
dec
je
sub
xchg
and
push
inc
sbb
jge
adc
shrb
dec
push
fldl
jo
inc
pop
mov
and
loope
add
int3
icebp
jge
cld
loop
xchg
inc
fisubl
push
rcrb
sti
pop
push
cmp
xor
outsb
mov
pushw
je
movsb
cmp
sub
push
pop
mov
cmpsb
lock
clc
rorb
mov
mov
and
mov
add
dec
jl
push
mov
dec
and
and
cmp
adc
lock
dec
jle
mov
or
mov
or
or
cwtl
sbb
add
loope
add
mov
jl
lock
jo
add
cmp
mov
or
mov
decl
ljmpw
adc
cli
sub
call
andl
fidivrs
jp
mov
roll
ljmp
imulb
nop
mov
in
sub
sub
ds
and
push
sarb
insb
test
insl
dec
lea
popf
test
fsubrs
cmp
shl
sbb
xchg
pop
fdivp
push
ja
add
adc
jp
cli
or
and
and
dec
add
add
addr16
or
add
xchg
xchg
inc
xor
sahf
cwtl
pop
inc
mov
inc
or
mov
xchg
adc
pop
outsl
xor
loope
mov
adc
int3
and
adc
fst
mov
xor
aas
sahf
mov
dec
cwtl
mov
jbe
sub
fildl
lods
mov
pop
repnz
lea
pusha
rorb
fcoms
fnstcw
pop
ss
xchg
inc
fsubl
jge
dec
bound
inc
sub
dec
pop
ret
sbb
mov
jg
subl
mov
pop
rcrl
xor
test
mov
sub
pop
add
pushl
call
adc
int3
adc
ret
jge
mov
mov
fidivrl
or
clc
xor
fs
je
and
int
push
push
inc
push
pop
sub
pop
sub
jl
jge
or
add
adcb
sbb
test
pop
mov
add
cmp
fidivrl
mov
mov
mov
out
and
dec
push
in
inc
adc
mov
inc
cmp
cmp
pop
xor
mov
add
mov
inc
pusha
sbb
std
dec
test
add
aaa
insb
sub
or
adc
jle
lcall
push
mov
cld
xorl
les
mov
jl
xchg
rorl
fs
jne
adcb
sub
jl
in
ds
cmp
enter
push
sbb
add
xor
clc
cs
lods
ret
ret
pop
out
push
loopne
je
mov
sub
test
test
sahf
stos
and
and
sbb
cltd
or
add
clc
mov
shlb
xor
and
jbe
in
add
cmc
inc
xchg
stos
xor
inc
cmp
mov
daa
xor
and
fsts
test
cwtl
xor
scas
xchg
push
push
and
mov
push
dec
ret
in
sub
fdivs
mov
jmp
push
lcall
shr
test
xor
dec
pop
sarl
cs
xor
add
mov
mov
pop
invd
mov
popa
mov
xlat
mov
adc
mov
lods
andb
mov
jg
mov
xchg
cwtl
and
test
call
and
nop
push
int3
pushf
ss
xor
or
push
mov
stos
aam
or
push
xor
or
push
push
jo
adc
inc
rclb
jle
inc
je
aam
sub
add
mov
data16
lea
addb
out
aam
sub
xchg
add
push
push
xor
xchg
pushf
dec
add
inc
mov
imul
inc
std
lock
call
addb
pusha
mov
dec
dec
les
push
shrb
mov
add
xlat
push
std
fistl
add
in
stos
xor
rolb
decl
imul
aad
mov
outsl
cmpsb
xor
adc
cmpsl
push
lods
dec
fcmove
sub
and
les
dec
cmc
or
mov
cmp
addb
add
mov
cmp
or
mov
std
outsb
xchg
xor
dec
pop
inc
sub
dec
mov
daa
shll
push
and
orb
cli
mov
test
push
repnz
sbb
or
sbb
movsb
add
pop
call
push
or
add
xor
jge
mov
shlb
lods
test
mov
ret
aaa
push
push
incl
clc
mov
jnp
call
sbb
xor
call
sub
into
cmpsl
loope
idivl
icebp
xor
dec
divb
dec
lds
fs
mov
aam
add
xor
inc
sbbl
pop
xchg
jge
inc
inc
mov
test
movsb
mov
mov
aam
cmp
outsb
jb
cwtl
aas
mov
adc
inc
es
les
gs
and
adc
mov
pop
inc
lds
bound
dec
cs
push
and
mov
mov
add
xor
mov
sbb
mov
xor
test
jo
je
pusha
xchg
and
inc
test
stos
sbb
test
pop
fs
lods
cmp
xor
add
das
sbb
sti
push
inc
and
pushf
repz
mov
jb
mov
push
mov
inc
lods
push
pop
push
cmpsb
or
ljmp
jne
pop
sub
mov
outsb
add
ret
scas
xchg
pop
cld
mov
lock
hlt
in
icebp
push
cld
cltd
mov
cmp
or
into
or
rorb
adc
fidivl
in
sub
mov
mov
push
or
jb
mov
fisubl
jo
test
addb
loope
shlb
das
sub
fdivrs
loopne
mov
je
es
mov
push
andb
iret
pusha
fcomps
out
sbb
push
negl
or
fs
add
clc
inc
inc
int
es
mov
add
int3
adc
inc
and
and
pop
clc
ret
xor
dec
mov
cmpsl
xchg
cwtl
cld
mov
sbb
dec
push
inc
mov
and
xlat
jo,pt
jb
mov
loopne
loope
add
mov
test
add
push
sbb
mov
ret
movsl
incb
push
add
clc
cwtl
cmp
and
repz
icebp
xchg
hlt
cmp
mov
ljmp
push
clc
lahf
mov
inc
imull
je
repnz
adc
add
mov
adc
fmull
ret
cmp
inc
outsb
enterw
decl
loopne
es
call
int3
mov
ja
xlat
ficompl
dec
pushf
mov
sub
add
lea
add
mov
pop
mov
outsb
fisubrs
adc
or
mov
push
inc
and
cmp
out
jecxz
and
mov
dec
mov
inc
sub
push
inc
les
bound
sub
sub
xchg
mov
mov
mov
ljmp
mov
add
sbb
stos
out
ret
push
push
hlt
pushf
add
pop
adcl
inc
adc
jae
xchg
or
adc
cmp
mov
loop
repnz
xor
sbb
or
sub
cmp
push
mov
add
cmp
push
mov
shll
mov
mov
add
jne
jmp
adc
mov
push
movb
pop
icebp
mov
add
stos
inc
push
push
pop
mov
incl
xchg
xor
cmp
mov
gs
test
add
cmc
dec
pushf
push
lea
aas
ret
call
cmp
mov
sbb
es
imul
insb
inc
push
ret
rorb
pop
xor
ret
movsb
pop
xor
push
pop
cmpsb
jbe
test
add
or
jns
loop
and
jecxz
rorb
xor
call
pop
xor
mov
or
mov
lea
and
add
mov
incl
cld
mov
mov
aaa
sub
cmp
dec
push
push
cmpsb
inc
adc
add
call
fcompl
jnp
and
insb
and
or
subb
cltd
movsb
pop
cld
shrb
xchg
loop
xchg
or
mov
pop
pop
add
les
dec
inc
clc
arpl
in
int3
lods
hlt
and
cmpsb
sbbb
ja
mov
dec
aas
push
dec
mov
inc
or
mov
out
scas
sbb
push
sbb
inc
cmp
adc
loop
lret
int3
lock
shr
mov
xor
cmp
push
and
add
mov
sar
mov
lcall
inc
sbb
adc
mov
insb
out
or
or
scas
add
pushf
adc
popa
cmp
cmp
sbb
hlt
and
clc
aam
adcl
jne
push
test
out
rolb
mov
insb
mov
mov
sbb
xor
cwtl
pop
mov
or
dec
or
adc
pop
ljmp
fsubr
dec
jl
lock
fcoms
ja
add
cwtl
inc
mov
dec
outsb
lret
fistl
call
push
shll
sahf
add
dec
loop
adc
xchg
test
jbe
dec
je
addb
ret
lds
mov
bnd
bswap
mov
filds
rcl
clc
mov
jb
push
dec
pop
aas
mov
push
mov
inc
inc
sub
mov
movsb
add
in
push
jp
add
xorl
pop
xor
testl
push
dec
ret
cs
lods
inc
outsl
sbb
dec
push
push
subl
jbe
push
imul
bound
pushf
push
loopne
je
push
sub
jmp
pop
push
mov
mov
cwtl
cmpl
into
fdivrs
pop
rorb
xor
addr16
lea
add
pop
lcall
lock
mov
xchg
xor
lods
sub
jne
cmp
and
sbb
das
push
or
je
shrb
and
inc
dec
xor
sbb
push
pop
cli
mov
dec
add
xor
roll
movswl
push
addr16
lock
mov
jmp
sbb
push
or
enter
and
scas
ficomps
popf
aam
push
jmp
dec
je
cmp
push
push
movsb
jne
xchg
leave
outsl
adc
test
push
mov
in
fdivp
and
sub
loope
push
xor
xlat
sub
movsb
or
push
ja
das
xor
loopne
clc
enter
xor
in
pop
mov
dec
cld
orb
or
fs
push
pop
pusha
sub
jmp
cmpsl
je
inc
add
or
adc
pop
shrb
rol
xchg
add
dec
dec
test
lods
test
adc
ret
pop
outsl
or
enter
xor
out
adc
ljmp
adc
xor
mov
and
cmp
xor
inc
fmull
jmp
jp
pop
std
out
cmp
mov
fsts
rcl
test
jne
loope
sub
xor
push
pop
lock
xor
out
xor
dec
shr
rcll
or
jg
jo
sbb
mov
sti
enter
es
lret
mov
aad
xor
mull
adc
xor
adc
add
xchg
mov
add
cmp
test
les
adc
sbbb
add
dec
pusha
add
add
pop
or
in
aam
adc
adc
sbb
mov
xchg
sub
ljmp
incb
and
push
mov
cmp
loope
push
xor
mov
or
outsb
add
loop
int3
insb
adc
jne
cld
and
cmp
adc
or
cs
or
test
dec
mov
inc
pop
inc
jg
xchg
call
add
xor
stos
andb
mov
xchg
sbb
test
mov
ss
pop
inc
ds
scas
outsb
int3
dec
out
lret
outsl
mov
fadds
inc
jo
jg
xchg
scas
dec
mov
push
dec
idiv
std
cld
lcall
jmp
xor
inc
test
hlt
gs
mov
inc
imul
inc
sbb
ds
dec
mov
mov
mov
jb
clc
add
out
jge
test
or
add
into
push
adcb
pop
jmp
jbe
adc
fbld
notb
mov
pusha
adc
xchg
and
add
jo
jbe
lea
lock
sub
add
or
jns
xchg
js
add
jl
xor
and
sahf
push
mov
xchg
loope
mov
pop
sbb
sbb
sbb
pusha
pop
int
sub
clc
pop
enter
enter
push
jp
call
fldpi
push
sub
inc
sub
out
bound
lcall
outsl
xchg
xor
lock
test
pusha
pop
notb
push
outsl
popa
adc
add
std
pop
jo
dec
pop
add
xchg
repnz
out
sub
sahf
imul
call
mov
dec
add
dec
jo
cltd
les
jb
or
scas
dec
cmpb
adc
cmp
adc
loopne
mov
xor
or
test
stos
sbb
sahf
divb
je
xchg
fisubs
cmp
xchg
hlt
pop
mov
dec
mov
fisubrl
ficomps
cli
js
and
or
inc
mov
jmp
xchg
inc
faddl
pop
jge
test
inc
mov
jmp
lods
xor
in
outsb
or
inc
mov
cmp
or
lahf
movsb
pop
lret
mov
jl
mov
aaa
pop
shlb
or
inc
mov
inc
loop
adc
adc
shl
ljmp
sbb
ss
jge
mov
in
rcrb
push
call
add
shl
clc
adc
fisubs
or
jne
mov
repnz
shlb
lods
xchg
mov
int3
fwait
jae
mov
enter
loopne
push
jne
call
sub
loope
adc
adc
inc
push
scas
popa
mov
push
rcr
push
add
or
out
xchg
cltd
cmp
dec
lods
push
adc
jbe
shll
ljmp
push
jp
sub
lret
inc
lods
mov
push
add
lea
repz
orb
mov
mov
and
or
mov
mov
cmp
or
add
mov
jne
push
sbb
inc
push
mov
enter
xchg
pop
jp
addr16
jle
jne
adc
or
xchg
mov
fwait
push
add
shlb
ss
test
int3
loop
arpl
ja
sbb
xchg
movswl
mov
dec
mov
xchg
jno
push
jne
push
cmpsb
or
aas
push
jecxz
and
insb
jb
jb
or
sbb
push
lock
pop
cmp
xor
dec
lods
cmp
in
aam
cmpsb
xor
stc
adc
sbb
ror
fsubr
mov
aaa
jmp
dec
dec
repz
mov
inc
inc
mov
xor
add
xchg
scas
xchg
inc
xchg
cli
mov
movsl
cmpsl
mov
inc
fists
jle
addb
xor
jne
push
dec
in
scas
xorl
dec
rclb
fnstcw
fcoml
sbb
test
dec
add
mov
ret
arpl
xor
mov
add
pop
fs
push
movntps
mov
add
jp
add
test
push
jmp
adc
callw
dec
loopne
nop
xor
xchg
mov
cmp
or
shr
xor
adc
mov
loopne
mov
sbb
jae
jecxz
sub
mov
mov
sarb
out
and
or
adc
adc
outsb
push
shrb
jbe
dec
outsl
sbb
shlb
ss
adc
sbb
js
ret
fwait
aam
sbb
mov
pop
adc
jbe
inc
test
test
ds
lret
das
jecxz
sub
inc
ljmp
adc
aas
in
and
icebp
jge
pop
cli
jmp
sbb
outsb
insl
lock
adc
add
mov
std
pop
mov
pop
popf
mov
insl
add
decb
es
mov
rclb
js
and
fnstsw
cmovbe
add
cli
mov
repnz
xorl
pushf
xchg
adc
cmpsb
jle
test
adc
jo
cmp
test
in
std
loopne
and
dec
dec
pop
aam
call
ret
pop
or
jg
inc
or
repnz
or
bts
hlt
dec
test
es
lahf
or
outsl
sbb
call
jmp
dec
pop
mov
fcmovnu
test
xchg
insb
lods
out
push
xor
or
adc
jmp
ss
sbb
sbb
int3
adc
mov
lea
std
hlt
arpl
shll
scas
cmpps
add
enter
and
std
aaa
icebp
mov
lock
or
pop
popl
cs
inc
std
dec
mov
loopne
mov
pop
push
inc
push
mov
mov
jge
xchg
dec
mov
sub
xlat
jae
ret
mov
aad
movsb
xor
call
push
jp
add
gs
push
dec
pop
test
sbb
cmc
add
xchg
fsubp
sub
push
popf
into
movsb
xchg
jb
add
test
sub
enter
push
add
call
ljmp
inc
jp
mov
mov
xchg
je
ret
sbb
xor
pusha
push
add
je
sbbl
pusha
jne
nop
add
fwait
ret
shlb
test
xor
adc
fistpll
imul
add
inc
rclb
mov
mov
les
hlt
push
push
test
lock
cmc
ss
sbb
push
inc
inc
jbe
ds
mov
pop
push
in
cs
pusha
std
adc
and
shll
and
sbb
and
pop
mov
ficoml
notb
push
gs
push
data16
icebp
ljmp
test
testl
inc
cld
push
sbb
fisubrl
adc
or
mov
inc
stos
enter
into
popa
mov
dec
dec
push
cli
dec
jmp
int3
aam
inc
std
jae
xchg
cli
adc
cld
es
fcompl
mov
add
mov
jle
jnp
mov
test
es
fs
repz
xchg
rolb
shlb
les
into
clc
lock
js
lcall
test
cmp
into
in
xchg
mov
jle
sbb
bound
jl
cmc
call
or
dec
sbb
add
xchg
mov
push
mov
adc
jp
dec
popl
push
cmpsl
ljmp
xchg
movsb
xlat
test
sbb
push
cli
push
lock
sbb
psadbw
gs
sub
inc
call
mov
loop
sbb
jl
or
and
pop
dec
and
xor
sub
bound
cltd
popa
rolb
jo
test
cld
add
add
pop
lcall
les
jp
pop
mov
pop
push
daa
ljmp
imull
shr
jmp
xlat
adc
mull
int
imul
ficompl
imul
mov
mov
sub
mov
sub
mov
mov
adc
and
mov
adc
add
outsl
mov
lods
es
mov
js
or
sub
sbb
popf
popa
fucomp
inc
call
sub
jno
call
sbbl
ds
pop
push
outsl
pop
aas
sub
push
jb
mov
add
cmpxchg8b
iret
aas
mov
cs
pop
test
into
cmp
lret
fdiv
bound
xchg
loop
mov
pop
push
and
sti
push
aaa
insb
js
inc
cmp
or
cli
push
inc
insb
sar
mov
sahf
xchg
sbb
clc
test
push
and
and
nop
lock
and
cmc
mov
fwait
or
in
jnp
jb
jmp
imull
test
enter
adcb
sub
jnp
pop
popa
mov
lret
add
or
cmpsl
mov
adc
pop
add
jnp
test
sarb
push
cmpsl
syscall
jbe
jp
aam
push
ret
pop
and
clc
pop
rclb
or
mov
aam
push
xchg
and
sar
and
cmc
lret
cmp
add
paddusb
je
cli
xchg
out
mov
or
jo
push
mov
adc
mov
mov
stos
lret
loop
sub
std
mulb
ret
xchg
jle
or
inc
inc
stos
and
adcb
cli
rorb
decl
int3
xchg
xchg
dec
push
xlat
js
punpckldq
push
jecxz
cmpsb
daa
and
add
enter
jl
mov
jmp
mov
jne
movsb
lcall
mov
or
mov
scas
std
call
push
sbb
and
cmc
sbbl
dec
leave
sbbb
jmp
lret
xor
stos
add
dec
add
movsl
addb
js
mov
icebp
sub
frndint
xor
dec
fsubrs
add
cmp
add
jp
mov
jno
cwtl
xor
or
push
cmpb
out
ret
dec
cmc
test
in
scas
mov
push
aam
loopne
ss
sub
loop
fmuls
push
mov
mov
movsl
lock
mov
jno
inc
xlat
insb
sbb
push
repz
scas
pop
adc
sbb
int3
call
out
xorb
adc
dec
lcall
or
mov
fadd
cld
push
or
sub
das
xor
ds
std
lock
mov
repnz
les
shl
or
and
sbb
dec
cmp
icebp
sub
ljmp
lock
or
mov
jo
icebp
shrb
jmp
push
mov
dec
nop
inc
nop
fldl
aam
mulb
lock
out
push
mov
int
in
insb
mov
ss
outsb
std
das
cmpb
mov
lock
xor
cmp
lods
adc
mov
enter
dec
add
sbb
sti
stc
mov
mov
mov
rclb
dec
pop
scas
leave
fdivs
cmp
fisubrl
mov
mov
test
sbb
cld
or
icebp
jg
add
les
aam
in
jo
ret
mov
shrb
outsl
incl
in
cmp
mov
je
xor
ja
xchg
add
jl
push
xchg
dec
cld
es
inc
negb
mov
add
daa
call
repnz
imul
cld
and
nop
cmp
xchg
sub
pop
jmp
add
pop
jo
and
call
inc
add
push
mov
sub
push
xorb
testb
cmp
push
call
fildll
push
and
stos
outsl
cwtl
sub
xor
sahf
xlat
pop
adc
add
nop
adc
add
les
mov
add
mov
and
ret
or
or
push
jmp
or
mov
pusha
adc
andb
imul
jp
add
and
arpl
outsb
xchg
cld
or
pop
outsl
imul
ret
aaa
sbb
int3
mov
pop
push
dec
add
js
cmp
mov
movsbl
dec
mov
je
sub
inc
push
ds
inc
or
es
fstl
xchg
cmp
cli
outsb
or
lds
sub
xchg
jl
rolb
xchg
push
dec
mov
inc
lcall
inc
fs
or
cmp
xchg
rolb
and
int3
imul
lea
fs
or
shll
test
sbb
or
je
nop
push
push
jle
push
std
call
and
rolb
add
dec
pop
push
adc
xchg
push
mov
mov
lock
jecxz
xor
testb
mov
in
sarl
repnz
loope
sub
add
mov
push
or
mov
xor
fs
push
mov
mov
or
pop
rcrb
test
ljmp
mov
jecxz
or
repz
mov
cwtl
mov
push
cmc
mov
push
rorl
dec
lea
fnstcw
pop
les
xor
outsb
lea
sahf
test
fcmovne
lret
rcl
inc
inc
fsubrs
subb
test
pop
dec
add
cld
fisttpl
clc
or
mov
add
and
push
mov
js
cld
lcall
mov
inc
jg
pop
push
mov
mov
mov
pop
inc
lret
sti
cmp
jae
pop
popf
movsb
push
mov
cmp
or
stos
push
fcomps
jno
outsb
jmp
xor
or
mov
enter
mov
test
cs
add
mov
mulb
in
rcll
mov
lea
jmp
add
add
push
mov
adc
rolb
add
gs
or
insl
cs
mov
je
ljmp
jbe
add
add
pop
test
cli
enter
inc
stos
sub
cmp
adc
pop
sub
inc
fcoml
add
loop
jge
in
mov
jbe
pop
cld
rcrb
fwait
cmp
lret
inc
roll
sbb
push
inc
or
pop
xchg
or
addr16
adc
cmp
and
std
add
inc
into
adc
add
call
fcompl
and
imul
jne
inc
incl
rclb
cmp
nop
jns
ret
popa
fidivl
pop
ds
addb
gs
mov
pop
lcall
aad
icebp
xchg
xor
into
mov
sub
hlt
inc
testb
add
test
push
or
ljmp
mov
shll
push
mov
repnz
add
into
insb
adc
mov
adc
and
add
data16
xor
into
jo
or
ja
jg
pop
enter
mov
push
or
mov
lock
leave
inc
shll
and
fbld
cs
cmc
ljmp
adc
call
fs
push
and
push
and
pop
add
add
xchg
test
sub
push
pop
and
inc
mov
mov
push
insl
hlt
loopne
inc
inc
inc
inc
loope
xchg
sbb
cmp
js
push
mov
mov
dec
pop
inc
scas
rclb
sbb
leave
add
sub
aas
test
xor
aas
cwtl
les
add
add
fadd
adc
jl
int3
mov
nop
ss
mov
xor
add
ret
pop
push
out
add
bswap
mov
imul
xchg
icebp
sub
or
mov
jb
or
jp
imul
repnz
fsubrs
popa
roll
xorl
mov
pop
push
sti
add
int
sub
gs
mov
add
ds
mov
sub
mov
lods
mov
adc
xchg
rcl
add
mov
dec
ds
push
ljmp
loop
incb
das
push
xlat
inc
pop
pop
dec
add
ja
lgs
add
ret
jae
dec
popa
sbb
fistps
test
sbb
mov
test
add
mov
mov
pop
and
cld
int3
mov
inc
adc
sbb
xchg
add
fs
or
bound
rolb
lock
cmp
mov
xchg
pop
mov
mov
jo
push
gs
push
mov
mov
jb
xor
sub
push
lods
je
movsb
push
dec
test
loop
or
aam
ss
pop
mov
or
insb
and
out
dec
in
pop
icebp
test
mov
mov
dec
adc
fstl
add
xchg
xor
stc
aaa
mov
call
addl
cli
shrl
or
fadds
xor
mov
lock
inc
sbb
add
test
test
cli
mov
ljmp
sub
mov
or
aas
fmuls
inc
adc
in
mov
or
fs
in
push
xor
andps
mov
rol
inc
inc
clc
and
cli
cli
dec
loop
or
cld
adc
das
es
or
inc
push
sub
fisttpll
or
ret
and
pushf
cs
push
lods
mov
cmp
lret
inc
push
repnz
pop
out
fs
adc
pop
pop
dec
inc
into
aam
add
jne
lret
fldl
mov
inc
lret
hlt
mov
push
mov
fwait
clc
dec
jb
hlt
add
popf
lock
icebp
frstor
pop
aam
dec
test
add
xor
cmp
and
insb
mov
xor
sbb
imul
cmp
mov
mov
mov
and
add
jb
inc
clc
outsl
adc
push
add
ljmp
lcall
cmp
dec
out
rorb
or
std
add
adc
das
cli
popf
mov
ljmp
or
ret
dec
xchg
add
pop
roll
add
xchg
call
adc
pop
mov
inc
inc
pusha
and
xchg
and
imul
mov
ret
push
lret
test
push
adcl
aam
push
clc
loop
rcll
dec
add
sbb
mov
fcoml
or
mov
sbb
pop
mov
inc
mov
pop
stos
out
imulb
sbb
popf
rclb
into
push
mov
inc
int3
arpl
xor
sbb
popf
mov
cld
adc
push
and
adc
shll
push
psrlw
push
push
lods
ret
mov
dec
int3
adc
or
xchg
jmp
loopne
pop
xor
cmpb
fisubl
add
and
mov
push
cld
mov
jg
sarl
aam
je
enter
add
loopne
out
mov
lret
dec
push
inc
and
stos
inc
dec
enter
mov
in
inc
loop
add
sahf
scas
into
and
cwtl
ficomps
scas
pushf
in
xchg
popa
test
loope
shl
rcl
add
or
mov
shrb
jp
shr
test
popa
aas
fcmovnb
in
adc
push
adc
sub
jo
loop
dec
xchg
pushf
push
push
or
mov
pop
xor
out
pop
dec
arpl
outsb
dec
xor
lods
ss
fists
inc
mov
call
sbb
or
and
pop
dec
clc
popa
or
in
iret
or
sti
es
xchg
ret
adc
or
pushl
loopne
add
and
pop
sub
dec
sub
push
rolb
cltd
js
cwtl
lods
je
testb
sbb
add
sbb
es
adc
sti
fdivrs
dec
mov
xor
jb
adc
rcrb
pushf
cli
add
adc
repz
cld
inc
or
les
dec
cmpsl
sbb
in
testl
sbb
xor
js
les
paddq
aaa
inc
xchg
inc
xor
mov
pop
cltd
loope
add
xor
test
outsl
jo
inc
mov
xor
inc
je
jno
hlt
cmp
pop
add
adc
and
test
xor
aam
add
movsl
dec
stos
inc
mov
stos
ret
cmp
fisubrl
test
jle
sbb
cli
inc
jb
cmp
das
call
mov
jmp
mov
cmp
and
mov
mov
rcr
or
fistpl
push
fmuls
imul
loop
sub
mov
fiadds
sub
mov
outsl
xor
cld
test
push
sbb
data16
ret
mov
sbb
lret
pushf
movsb
dec
cmp
add
ret
jle
dec
ja
inc
add
cld
test
movsb
aaa
roll
xchg
pop
mov
adc
sahf
enter
xchg
inc
and
jmp
stos
mov
adc
xchg
xor
lock
enter
adcl
nop
xor
aam
and
icebp
adc
push
xchg
fs
bound
push
imul
cmp
insb
cmp
int3
adc
pop
push
sbb
xlat
sbb
dec
pop
xorl
faddp
mov
jno
add
adc
jge
add
jb
pushf
dec
add
jmp
inc
sub
and
lea
ss
imul
xor
test
and
push
add
rcll
dec
shrb
xor
stos
in
aaa
xchg
orl
lock
pop
add
insb
mov
repz
std
loopne
fidivs
aam
sbb
xor
adc
add
ret
xor
xor
aas
cmp
mov
inc
push
pop
and
js
addb
rcll
bound
test
push
inc
out
push
test
popf
inc
mov
call
pop
and
emms
bound
push
sarb
ret
gs
ficoml
mov
adc
ss
mov
or
add
and
lods
aam
mov
pop
rclb
xchg
leave
adc
stos
test
scas
mov
in
mov
cld
gs
pop
mov
dec
fnstsw
inc
aaa
and
lret
xor
loope
mov
aam
mov
adc
test
les
mov
push
cmp
data16
dec
in
mov
call
inc
add
push
sbb
inc
les
cmp
mov
fdivrp
push
inc
cld
mov
ret
inc
je
fsubrs
sub
push
insb
and
pop
call
test
nop
int3
dec
mov
xchg
inc
mov
dec
pushf
rcl
movb
pop
adc
ret
and
adc
pop
dec
pop
xchg
pusha
or
subl
data16
rclb
jb
mov
popa
xchg
cs
subb
sbb
ds
shr
dec
or
in
int3
les
loop
sbb
jne
or
cmc
aaa
add
xor
and
lret
clc
int
outsl
mov
push
sbb
push
rorb
test
je
orl
push
dec
fdivl
pop
xorl
popl
and
jb
mov
mov
mov
jl
push
push
jecxz
cmp
adc
std
push
add
in
adc
call
jle
jmp
inc
adc
dec
sbb
mov
mov
cmp
nop
mov
inc
inc
mov
cmp
cld
push
push
movsb
jmp
add
out
inc
loop
add
xor
loop
out
rorl
cmovo
pop
pandn
rclb
jae
lret
pop
and
sar
xorl
daa
lea
push
out
pop
pop
or
dec
mov
mov
xor
push
int
mov
adc
sub
aad
sbb
push
loopne
fsubl
pushl
movsb
jp
add
mov
enter
imull
int3
add
leave
pusha
xchg
testb
mov
data16
cmp
mov
xchg
pop
adc
ljmp
insb
mov
ret
xor
rolb
inc
lcall
int
push
xor
jge
inc
cld
jnp
cld
inc
add
dec
test
fs
nop
jp
sahf
adc
add
pop
sbb
rcrb
adc
jne
std
shl
and
mov
add
iret
cmpsb
mov
lock
jne
push
xor
mov
mov
jo
adc
adc
and
std
sub
and
adc
pop
inc
insb
das
adc
lret
inc
shrb
insb
xchg
push
and
fisttps
fidivrs
sub
xchg
inc
shrl
aaa
mov
ds
mov
and
mov
cmp
mov
lock
into
loopne
sbb
pusha
int
push
pop
xorb
es
push
cmp
push
roll
inc
out
rorl
and
pusha
and
repnz
popa
outsl
dec
notl
dec
inc
scas
orb
sbb
add
ret
fs
or
sbb
mov
push
inc
xor
fsubrp
ljmp
and
mov
cmpsb
js
add
add
hlt
add
jne
in
lcall
outsb
pop
mov
stos
notrack
inc
lcall
ljmp
add
mov
fs
xchg
mov
jb
stc
out
into
fs
mov
mov
imul
mov
das
add
loop
fcoms
sarb
mov
mov
or
or
lcall
push
int3
add
xchg
xor
cmpsb
ds
pop
adc
xor
inc
mov
cltd
cmp
jne
inc
add
ljmp
push
push
lea
lock
lcall
movsb
xchg
sub
mov
inc
or
cwtl
sub
adc
or
ret
ja
cmp
xchg
jo
adc
or
pop
or
lret
push
loope
stos
mov
pop
pop
and
add
lods
push
shll
enter
or
cld
push
sub
rcrb
pop
dec
jne
cmp
pop
inc
push
fimull
out
inc
sub
fstpt
cwtl
mov
mov
test
fldenv
cmp
add
push
sti
mov
or
add
dec
push
pop
lcall
adc
fdivl
xor
push
push
add
mov
and
std
jno
inc
mov
cld
movsl
es
xor
cld
popa
push
and
ret
cmp
push
pop
clc
mov
mulb
scas
pop
mov
xor
jg
std
adc
cmp
fs
test
adc
es
add
add
adc
popa
jge
jge
aas
jle
xor
mov
cmp
mov
xchg
jne
incb
fiaddl
inc
add
mov
and
mov
lret
sub
adcb
sub
pop
cmp
mov
je
mov
test
sarb
mov
andb
ljmp
hlt
leave
mov
popf
jp
pop
cld
out
add
adc
call
push
shlb
jb
loope
jbe
xchg
gs
mov
jmp
in
inc
adc
int3
hlt
int3
xorb
aaa
notb
mov
mov
jle
xchg
hlt
add
jne
push
inc
mov
xor
ljmp
push
pop
or
aaa
xor
arpl
cld
xor
push
push
or
orl
inc
cli
rcrb
lds
ss
movsl
pop
scas
sub
bound
push
dec
cmp
cs
sahf
push
inc
adc
idivb
mov
dec
jbe
decl
jp
pop
lret
negl
dec
fcomps
clc
and
push
inc
mov
sbb
lds
data16
imul
stos
sbb
xchg
mov
xor
dec
arpl
jmp
push
inc
psrad
pop
ret
test
lret
rcll
sbb
push
or
rorb
ljmp
and
cmp
sub
fdivrs
jno
push
call
inc
pop
sbb
and
ljmp
in
cmp
lea
test
repnz
push
adc
adc
push
cmp
push
cmpsl
test
add
mov
mov
fsubs
or
lret
repnz
dec
cmp
mov
cmpsb
push
and
inc
push
push
pop
adc
test
jnp
test
mov
pop
push
popa
test
push
pop
std
seta
xor
and
xchg
adc
fistl
xor
loopne
subb
out
ss
mov
mov
dec
inc
sub
jmp
fstpl
cmp
sub
jbe
call
js
mov
jbe
mov
jp
dec
rcl
adc
or
inc
mov
ret
loop
mov
daa
mov
rorb
rcll
call
or
mov
dec
loop
or
push
int3
andps
call
push
push
les
rol
sub
ficoml
cmp
sbb
or
cmp
ljmp
pop
sbb
adc
ret
pop
ffree
mov
loope
movsb
cmp
adc
mov
and
or
bound
or
inc
push
in
sarl
add
push
jmp
jae
cs
cmpsb
out
xchg
les
jle
push
xor
push
add
pop
leave
lcall
scas
int3
jno
sub
mov
fs
push
je
loop
inc
xchg
mov
mov
jg
rclb
jne
mov
bound
mov
imul
aam
push
pushf
rorl
fcoml
dec
test
loopne
add
inc
mov
call
pop
pusha
adc
ss
clc
push
xchg
outsb
jecxz
jmp
fldcw
es
nop
sbb
mov
mov
dec
rclb
dec
into
clc
xor
xor
leave
inc
movsl
es
popa
adc
jmp
mov
nop
lret
scas
pop
inc
mov
out
cmp
repnz
and
aaa
inc
insl
mov
push
mov
dec
mov
jb
sbb
mov
adc
sbb
es
add
dec
sbb
xor
sahf
mov
adc
adcl
mov
addr16
add
or
pop
nop
xor
test
mov
hlt
cld
mov
js
adc
in
roll
loop
scas
mov
push
es
push
dec
inc
push
sub
lahf
pop
mov
or
inc
out
xor
dec
push
mov
jb
mov
adc
pop
or
lret
rcrl
fstps
add
add
scas
push
xchg
in
shlb
iret
outsl
push
movsb
mov
xchg
pop
lods
sarb
xor
call
js
and
pushf
cmpsb
cmc
clc
push
jl
inc
inc
out
dec
sbb
in
jo
pop
xor
push
sbb
int3
cmpsb
aaa
inc
clc
xor
addr16
test
shrb
loope
lock
mov
dec
or
repz
and
adc
push
inc
xchg
js
lahf
ss
test
call
arpl
aam
and
fwait
js
mov
jne
sub
loope
mov
lcall
adc
mov
mov
jl
sbb
and
mov
sbb
mov
fdivl
pop
icebp
pop
sti
sub
fdivr
aaa
call
std
out
lcall
call
xor
inc
cmp
xor
out
loopne
mov
xorb
xor
daa
sub
sbb
ja
mov
cmp
adc
mov
pop
mov
sbb
mov
seto
mov
and
test
jmp
lea
pop
negb
cmp
clc
mov
incl
lock
gs
xor
cmpb
pop
pusha
psraw
pushl
call
cld
inc
cmp
add
mov
lcall
jmp
mov
add
or
idiv
frstor
dec
enter
mov
lock
sub
inc
add
mov
pop
rclb
jo
adc
push
clc
loopne
outsl
ljmp
jl
stos
mov
aas
pusha
enter
push
clc
jbe
fcmovne
mov
std
jg
js
arpl
pop
shrb
rorb
inc
insl
cs
lds
movsb
sbb
mov
dec
out
mov
push
mov
push
and
ret
mov
dec
test
or
test
mov
outsl
sub
mov
pusha
xchg
push
jnp
data16
stos
sub
pop
test
pushf
add
mov
add
fdivl
adc
insl
rcrb
cmp
xchg
enter
les
jbe
adc
inc
mov
or
bound
pop
mov
xchg
add
and
pop
inc
nop
pop
lea
das
cmpsl
dec
ret
andl
xor
filds
insb
adc
mov
push
xorl
inc
sti
mov
mov
adc
cmpsl
mov
dec
and
aam
mov
pusha
xor
xor
fisttpll
imul
loope
inc
adc
or
addb
je
mov
sbb
pop
pop
inc
cmpb
add
adc
or
data16
lea
mov
loope
sub
loope
push
clc
xor
push
add
pop
imul
ds
andl
movb
out
push
mov
and
leave
sbb
ja
dec
push
fiaddl
int3
rol
mov
js
cs
lcall
pop
add
mov
mov
pop
ja
mov
inc
out
mov
adc
sbb
push
popf
dec
push
push
mov
aad
mov
xchg
pop
jbe
or
out
and
mov
mov
outsb
pop
shl
gs
sub
push
or
lret
pop
mov
inc
pushf
adc
mov
cmp
mov
push
lret
adc
add
cli
jp
fbld
shrb
test
or
mov
orb
push
adc
mov
or
mov
leave
aad
sarb
fimull
push
cmp
sbb
mov
jg
ret
lcall
xorl
enter
push
rcll
cld
or
shl
fnstcw
loopne
jmp
xchg
adc
leave
addb
rcrl
mov
pop
int3
sbb
adc
shrb
lods
clc
scas
and
lret
inc
test
adc
lret
leave
fucomp
xchg
lock
cmpsb
enter
adc
jl
ss
inc
int3
sbb
les
push
adc
sub
aas
adc
repnz
or
jne
fsubl
loop
adc
push
out
lcall
rolb
add
mov
mov
dec
mov
lock
frstor
lcall
ss
fmull
adc
push
push
rorb
int3
jl
xor
sbb
sub
push
cmp
sub
mov
sbb
add
and
fs
add
and
orl
sti
push
cmp
jg
and
repz
pop
out
mov
xor
andl
jp
pop
iret
add
pop
out
aam
call
addl
add
push
std
in
jo
push
shrd
sub
jmp
xor
sub
out
ret
adc
and
sbb
test
clc
cmp
add
push
dec
repnz
cmpsb
add
aam
add
bound
cmp
gs
sub
out
ret
ret
adc
sub
lret
cltd
push
icebp
sbb
and
add
test
test
call
xchg
or
inc
loop
gs
pop
insb
inc
cmp
push
pop
insl
push
cmc
dec
dec
jl
call
cmp
adc
mov
push
clc
adc
loope
fsubrs
push
mov
movsb
adc
jo
sub
frstor
jl
outsl
inc
jp
es
add
test
pop
add
js
and
xchg
add
jg
or
cmp
sti
lea
outsl
mov
mov
test
out
xchg
lret
jmp
shll
mov
adc
inc
movsl
cs
das
loope
pop
cmp
sbb
pop
adc
jl
dec
inc
cld
mov
dec
mov
loope
lods
mov
sub
scas
and
sub
decl
and
clc
mov
lcall
fnstcw
dec
ret
loopne
add
and
add
push
jl
xchg
xchg
or
adc
inc
pusha
shlb
fbld
inc
and
lea
push
dec
loope
std
push
inc
adc
sbb
jmp
mov
out
add
es
mov
xor
imul
jo
jno
lcall
pop
loope
cmp
loopne
mov
cmc
aas
mov
jmp
lock
or
mov
cmp
insb
mov
cmc
jo
aas
mov
add
add
dec
xchg
mov
push
push
jmp
mov
lcall
call
mov
neg
sbbb
inc
push
sbb
aaa
xor
mov
xor
inc
std
data16
sub
push
sbb
add
and
or
clc
xor
adc
call
test
add
cmpb
jge
test
jae
shll
aam
mov
or
loop
fisttpll
fmuls
add
inc
rorb
sub
push
fisubrl
popa
insl
adc
mul
lret
or
jbe
nop
lea
fcoml
jle
rol
sti
into
push
pop
pushf
mov
mov
por
or
push
rorb
sub
mov
mov
shlb
inc
xchg
fildll
sbb
adc
dec
push
and
dec
and
push
and
sarb
add
test
push
testb
sub
jmp
les
push
cld
dec
dec
addr16
push
pop
mov
mov
data16
jecxz
pusha
or
test
jne
push
mov
or
dec
fdiv
xchg
add
pop
adc
aad
push
add
fsubrs
dec
call
out
pushf
and
xor
cmpsb
cmp
add
cmp
je
enter
popa
push
push
push
add
decl
or
mov
ror
lock
in
lret
push
test
cmp
push
xor
xor
xor
stos
xor
push
sbb
js
jb
ret
dec
sub
in
test
lea
mov
ja
lahf
decl
shrl
sub
mov
daa
or
std
jg
xor
cmpsb
lock
add
shlb
xchg
gs
push
push
pop
pop
loopne
jne
aad
lcall
dec
add
fdivrs
dec
push
fs
push
dec
mov
push
sbb
adc
mov
std
cmp
movsl
or
inc
mov
pop
into
pushf
fistpll
je
mov
es
movb
xor
js
inc
mov
movb
adc
mov
mov
sbb
lds
inc
sar
xor
negb
or
mov
ret
std
rcrb
add
lahf
pusha
cld
or
mov
mov
add
mov
and
scas
mov
rorb
inc
cli
inc
push
incb
sbb
xorl
or
fadds
adc
xchg
hlt
sub
ficoml
push
sarl
mov
out
sbb
les
ds
add
mov
mov
mov
add
inc
cmp
sbb
inc
ljmp
mov
sarl
or
movsl
dec
test
inc
inc
mov
jbe
arpl
xorl
mov
fs
loope
xor
insl
lods
xchg
pop
fs
daa
jo
and
mov
and
enter
pop
adc
push
sarb
jnp
shrl
test
mov
dec
sub
mov
jnp
call
or
fiaddl
gs
scas
mov
inc
and
insl
rorl
jb
cld
sti
nop
push
adc
add
add
jno
or
ljmp
add
xor
sbb
and
cmp
test
xchg
sar
xchg
fimuls
insb
sub
and
add
pop
andb
aas
call
xchg
xchg
jns
call
nop
mov
sarl
dec
insb
aam
add
in
adc
pop
xchg
push
je
dec
or
push
jp
jo
mov
cmp
dec
pushf
inc
in
imul
jae
or
push
xchg
ja
pushf
sub
pop
cld
in
lods
push
pop
push
mov
mov
dec
push
call
popf
push
xchg
bswap
push
dec
mov
push
cmp
rcrb
adc
or
pusha
push
scas
jp
pop
push
lcall
arpl
sbb
scas
loop
call
add
cli
xchg
fs
adc
sub
push
jne
xorl
out
jns
adc
add
push
jl
sbb
dec
xchg
inc
lea
add
lret
ficompl
or
dec
inc
xchg
inc
inc
mov
pop
sbb
jg
test
add
dec
aaa
or
in
add
icebp
mov
add
shll
cmp
mov
dec
ss
mov
pop
xor
jle
dec
adc
mov
mov
mov
add
lea
xlat
sti
fildl
nop
jb
je
jne
pop
or
pop
sbb
push
je
data16
pop
test
psubd
stc
filds
shl
xchg
lock
push
inc
pop
xchg
adc
push
mov
or
and
outsb
roll
mov
and
fs
and
sub
or
push
fwait
and
lret
pop
push
or
mov
ljmp
xchg
push
jae
sbbb
inc
sbb
xchg
cmp
ljmp
hlt
mov
test
inc
and
leave
popa
jo
andl
mov
add
inc
push
pop
adc
dec
and
add
adc
mov
fldl
pushl
stc
jg
add
mov
push
add
es
cld
mov
test
popa
push
cmc
or
push
int3
push
test
pop
push
rol
lock
aad
sbb
xor
je
or
xor
dec
jmp
or
inc
add
push
filds
outsl
fmuls
mov
subb
pop
mov
outsb
shrl
xor
shr
fstpt
or
test
mov
add
or
and
pusha
hlt
test
imul
dec
jmp
pushf
xor
add
mov
stos
dec
jnp
jle
dec
lea
repnz
pop
enter
sarl
mov
iret
adc
andl
out
and
out
sub
enter
add
mov
pop
jmp
add
mov
aaa
push
mov
push
ret
test
mov
pushf
stos
icebp
add
mov
sahf
test
js
jp
les
daa
mov
inc
xor
push
adc
push
adc
jne
inc
add
icebp
sbb
jbe
mov
push
jmp
and
jbe
clc
adc
push
sub
push
out
rclb
jae
add
int3
inc
pop
pop
enter
push
inc
mov
add
jne
outsb
hlt
jo
je
shlb
icebp
das
jle
fadds
pop
add
testb
mov
lds
loope
cs
aad
cld
mov
lock
or
sbb
rclb
or
jmp
je
fistps
std
adc
pop
je
jbe
xrelease
call
sbb
or
push
sbb
dec
outsb
sbb
sub
pop
fildl
xchg
mov
inc
in
js
outsb
dec
inc
int3
add
incl
push
jp
xchg
jmp
es
cmpsb
xchg
icebp
jbe
mov
bnd
mov
or
aaa
test
fwait
mov
adc
cli
mov
insl
mov
stc
and
xor
into
sub
and
mov
rol
pop
push
add
jbe
pop
ds
jo
fdivr
in
cmp
mov
add
ficoml
or
push
mov
adc
adc
pop
and
push
mov
out
mov
into
push
mov
mov
sbb
mov
shr
int3
jl
rol
ja
fdivr
aam
in
sarb
sbb
mov
pop
das
jbe
or
sub
inc
cmp
fs
adc
jecxz
mov
insb
pop
xorl
or
dec
pop
out
xor
clc
mov
lods
adc
std
call
icebp
inc
mov
outsb
push
add
rcrb
outsb
shlb
imul
enter
shl
fiadds
sbb
inc
ret
or
add
and
mov
pop
call
mov
ss
mov
mov
push
inc
inc
in
pop
mov
insb
mov
pop
loope,pn
andb
inc
adc
cld
jge
incb
ret
push
push
rolb
mov
cmc
xor
fistps
cmpb
add
jne
mov
dec
test
stos
nop
pushl
jbe
push
nop
sbb
dec
hlt
movsb
in
dec
lods
les
xor
pop
add
repz
rcrl
test
enter
cmpb
xor
sbbb
mov
stos
cmp
rolb
lock
xchg
sub
jl
pop
or
mov
aam
test
dec
or
add
out
jb
xchg
dec
mov
ja
dec
push
loopne
les
push
sbb
ret
call
inc
mov
inc
adc
xchg
cmpl
cld
sub
lods
rorb
dec
mov
push
cmc
and
mov
lea
pop
pop
enter
ja
add
inc
sub
dec
adc
addb
push
fsubr
pminub
test
xchg
cmp
fs
push
leave
inc
test
fstps
fdivrs
xchg
push
cmp
inc
cld
inc
pop
stos
aad
xor
ret
loop
adc
dec
adc
sub
add
out
mov
and
inc
mov
stos
adc
cmpsl
test
popf
add
inc
xor
scas
push
mov
add
lcall
orl
js
mull
inc
push
or
cmp
add
aaa
jp
aaa
leave
xor
mov
aad
insb
or
fldcw
ljmp
add
pop
sbb
pop
cmpl
lods
mov
outsl
jg
stos
callw
fidivrl
adc
or
sbb
or
rcll
lods
xchg
clc
cli
ret
inc
jo
rcrb
cmp
aad
jb
push
shr
cli
cmc
mov
inc
cmpb
mov
pop
sub
adc
mov
xchg
hlt
test
insb
loopne
test
inc
sbb
add
xchg
jae
pop
xor
popf
call
jge
add
pop
add
push
mov
mov
in
lret
mov
insb
gs
jecxz
cmp
out
adc
adc
add
xchg
sbb
shl
or
popa
dec
pop
and
jo
std
iret
ds
lea
shr
clc
jae
cmpsb
in
add
jo
aam
mov
adc
and
cmp
nop
pop
shlb
insb
rcl
pop
mov
loopne
cli
dec
outsl
push
mov
jne
jbe
mov
ljmp
mov
insl
or
loop
push
push
fdivs
cmp
shlb
subl
popf
ror
push
movsl
dec
mov
mov
ss
jo
adc
cltd
inc
xor
push
orb
pop
sbbl
ja
mov
loop
sub
pop
pop
pusha
jge
add
hlt
adc
inc
add
ret
cmp
orl
jmp
test
and
les
and
sub
fdivrs
cld
inc
mov
mov
pop
sbb
imul
ret
aam
incb
xor
rcl
adc
xor
and
or
xlat
pop
test
dec
jp
jo
or
adc
cmp
inc
jnp
shrb
xchg
sbb
mov
mov
push
xor
lret
mov
or
incl
outsl
and
pop
cmpsb
lea
cltd
jne
dec
push
sub
inc
pushf
dec
jo
ds
cli
clc
test
adc
rcr
push
loopne
stos
rcrb
cmp
cmpsl
inc
movsb
test
push
rcrl
lret
inc
ja
xor
mov
push
insl
dec
mov
cmp
xor
adc
idivl
mov
mov
cs
sub
cmp
cmp
and
jmp
or
xor
daa
call
add
pop
ret
xorb
into
and
rcr
pushf
dec
outsl
call
ficoml
mov
mov
xchg
insb
ljmp
dec
fbld
push
popf
adc
popa
mov
sbb
ja
mov
out
inc
rolb
sub
sub
cld
in
mov
mov
jbe
mov
mov
push
add
test
fsubs
into
jo
js
call
in
mov
sbb
add
clc
jo
xchg
cmp
dec
mov
lcall
or
sub
and
into
jbe
cli
test
je
xor
int3
push
push
sarb
in
mov
std
or
dec
push
movsl
dec
jecxz
mov
adcb
adc
and
lock
enter
and
in
aam
inc
push
mov
in
and
cs
adc
dec
xlat
icebp
xchg
addb
push
dec
fldcw
push
cmp
jbe
mov
je
imul
rcrl
mov
push
ss
es
xchg
jno
mov
insb
dec
xor
orl
push
add
jne
adc
dec
fbld
push
hlt
mov
jmp
cli
or
mov
or
int3
shll
cwtl
pop
imull
pop
jb
sar
fwait
popa
testb
sbb
test
mov
add
stos
or
jnp
aas
jle
or
mov
addl
nop
dec
stos
push
mov
jb
mov
lea
add
je
fidivrs
rolb
lods
add
inc
sti
inc
mov
mov
das
pop
inc
les
and
fiadds
shlb
int
lahf
mov
inc
or
ret
or
and
xor
icebp
xchg
mov
lea
inc
jecxz
dec
mov
outsl
add
clc
int3
xor
test
push
popf
mov
mov
inc
cmp
aam
push
xor
adc
enter
mov
repnz
pusha
or
sub
mov
jae
loopne
mov
xchg
mov
inc
xchg
dec
ss
adc
mov
pop
stos
xchg
stos
pop
call
mov
ds
movsb
xchg
rcrb
div
scas
imul
or
daa
push
mov
shlb
push
mov
inc
dec
add
adc
hlt
xor
int3
loopne
cli
jecxz
outsl
pop
test
mov
cmp
inc
adc
sbb
jne
int3
test
seto
cld
or
lret
shlb
push
pop
adc
add
mov
scas
adc
mov
inc
dec
test
pop
or
push
in
lea
inc
lea
lret
jmp
in
scas
nop
rcrb
das
pop
adc
imul
mov
clc
subl
lock
mov
pop
mov
mov
jmp
lods
cld
jl
lcall
lock
jbe
outsl
or
mov
push
test
sbb
pop
add
mov
mov
push
out
cmp
pop
fbstp
or
popa
negb
test
xchg
push
add
adc
jecxz
ret
out
mov
xor
outsb
inc
jmp
stc
incl
test
call
mov
dec
sbb
sarb
gs
mov
aam
xor
add
cmp
std
push
push
xor
adc
push
adcl
das
and
add
add
push
xor
cmp
in
add
sub
je
dec
dec
push
pop
sar
loopne
dec
mov
xor
dec
in
faddp
xor
js
repnz
cwtl
and
movb
xor
cmc
fsub
cwtl
aaa
dec
test
dec
mov
aas
pushl
mov
add
in
xchg
xchg
jl
push
popf
clc
mov
add
clc
enter
pop
stos
sbb
test
bound
test
sbb
dec
dec
cmp
arpl
push
jb
jo
dec
mov
sub
mov
jecxz
sbb
push
sub
xor
cmc
into
mov
xor
or
dec
mov
dec
or
insb
mov
filds
fdivrp
scas
xor
loopne
sahf
pusha
sub
ss
push
ret
js
dec
cld
add
lahf
xor
sbb
mov
mov
adc
sbbb
loop
add
sarb
push
out
enter
loopne
pop
cmp
inc
enter
dec
or
push
xor
repnz
out
xor
xchg
cmp
inc
stc
test
in
jo
cli
inc
jne
out
mov
lods
frstor
dec
sbb
data16
mov
inc
inc
in
sbb
push
aam
shl
in
inc
prefetchwt1
sub
clc
and
inc
push
lret
pop
mov
push
inc
inc
add
adc
test
pop
dec
xchg
outsl
roll
orb
and
lock
outsb
mov
mov
shrl
inc
or
mov
cmp
or
inc
push
bound
fwait
jne
xor
add
push
inc
loopne
clc
sarl
adc
ret
jns
ret
or
dec
enter
lods
cmpsb
mov
pushf
and
shld
dec
inc
mov
call
mov
or
ja
xchg
pop
add
fs
shl
adc
icebp
bound
pop
mov
add
gs
pop
xchg
mov
push
xor
out
add
sub
inc
xchg
jae
pop
and
mov
fs
adc
cli
nop
pushf
sbb
push
mov
xchg
push
outsl
mov
inc
mov
adc
gs
add
test
push
nop
push
sub
fisubs
movsb
lods
test
pop
out
jmp
fs
divl
test
xchg
imul
repz
imul
xor
std
int
in
or
lea
push
mov
mov
sub
sbb
mov
mov
sub
mov
insb
clc
ss
sbb
js
je
sub
fsubrs
arpl
call
clts
movsb
addb
mov
ret
aam
inc
jecxz
add
fiadds
nop
xor
push
addr16
lods
inc
inc
loopne
push
sub
hlt
repnz
pop
icebp
sbb
call
daa
mov
cmpsl
test
adc
mov
insl
je
add
stos
lock
test
cmp
aam
xchg
mov
sbb
mov
clc
xchg
in
insb
dec
leave
dec
jl
mov
test
cmpsb
xor
sti
inc
inc
lods
clc
inc
mov
or
mov
pop
xchg
mov
rorb
lea
mov
test
push
dec
and
mov
ja
out
jb
repnz
ret
jne
or
fldl
inc
jge
push
mov
pop
icebp
xor
inc
adc
jmp
and
das
jle
jmp
popf
dec
sbb
lret
ljmp
mov
repz
pop
andb
hlt
ret
shlb
mov
pop
xor
add
jle
enter
imul
insl
adc
cmp
inc
mov
sbb
mov
xor
mov
sub
adc
push
pop
inc
or
pop
call
add
pop
add
pop
push
in
lock
stos
data16
test
das
hlt
cs
popa
movl
sbb
cmp
std
adc
ret
insl
js
jecxz
dec
push
shrl
rorl
movb
lods
enter
or
add
pushf
and
test
jbe
gs
jbe
inc
insl
roll
ret
mov
push
clc
bound
push
xor
je
mov
mov
invd
ds
cli
push
adc
mov
and
shll
mov
jle
das
sarb
add
jne
add
movsb
rorb
adc
lock
add
mov
call
lods
jmp
test
sbb
aas
inc
out
inc
ljmp
add
mov
mov
add
test
dec
shlb
or
sahf
jge
cld
stos
jb
scas
je
lock
stos
push
dec
lahf
xor
xchg
xor
add
lods
adc
or
or
mov
fwait
and
fsubs
jle
test
cli
push
mov
pop
rclb
push
out
fildl
inc
xchg
and
mov
push
sbb
jmp
cld
sarb
shrl
arpl
xor
and
mov
ljmp
cmpsb
repnz
mov
push
sbb
or
push
pop
or
xor
daa
icebp
outsl
lock
rorl
pusha
lahf
std
in
push
scas
mov
push
or
dec
mov
cmp
shlb
mov
imul
or
jl
push
int3
out
test
lret
dec
stos
inc
iret
mov
push
adc
mov
fs
dec
or
push
loope
xor
cmp
stos
fbld
inc
mov
shlb
shrb
mov
test
aam
popa
xchg
pop
sub
dec
inc
pusha
push
nop
xor
push
pushf
or
clc
shrb
stos
data16
add
mov
pusha
and
cmp
loopne
lds
orl
fdivrp
mov
add
inc
inc
dec
lods
lret
xchg
push
push
pop
add
and
or
aas
test
add
lock
outsb
loope
sbb
cmp
adc
inc
dec
call
sub
or
cmp
fs
sub
mov
xor
and
test
push
push
decb
xchg
movb
mov
imul
dec
fcomps
push
insl
inc
in
imul
aas
pop
xchg
je
mov
xchg
jb
jmp
push
inc
out
fdiv
cltd
in
repnz
out
sahf
aam
nop
push
fdivrl
daa
int3
lods
add
or
dec
sub
jb
push
xchg
fmull
clc
sbb
sub
clc
push
or
jae
add
add
mov
push
pushf
push
subb
aam
je
sbb
aas
inc
scas
hlt
aas
mov
cmp
mov
mov
push
cmp
inc
inc
in
js
cmp
test
sub
mov
loope
imul
ss
sbb
inc
adc
int3
sbb
popf
add
pop
push
push
std
fnstsw
in
mov
leave
push
insb
invd
cltd
jno
nop
popa
or
and
aas
mov
xor
push
or
rorl
mov
repnz
add
or
cmp
push
in
push
mov
inc
push
jbe
add
mov
sub
shrb
cwtl
pop
pop
push
dec
nop
nop
bound
jp
mov
jae
movsb
push
aad
mov
cmp
push
inc
into
pop
xchg
stc
outsb
jbe
pop
add
ret
test
mov
xor
insl
lods
jp
out
bnd
arpl
gs
xor
sub
fisubrl
inc
add
mov
xchg
or
jae
add
mov
push
ja
sbb
in
cmp
cmp
in
xor
ss
rcr
out
mov
xchg
add
push
xor
popf
rclb
add
mov
std
lods
mov
lock
jmp
cmp
mov
dec
inc
pushf
sub
aam
cmp
push
sbb
or
movsl
mov
jg
push
test
mov
push
out
mov
incb
push
insb
sbb
cmpl
dec
pushl
loop
jb
push
push
push
mov
or
adc
out
ljmp
iret
nop
popa
dec
ds
add
incl
push
fldl
pop
loope
adc
inc
outsb
out
lds
insl
leave
pop
scas
clc
in
mov
xor
xchg
mov
and
dec
int
pop
lret
inc
call
xchg
push
hlt
fimuls
add
cmp
rcrl
aas
shrb
adc
cmp
pushf
subb
mov
or
mov
gs
fisttps
xchg
mov
sbb
ljmp
inc
loope
addb
push
in
mov
sbb
or
add
xchg
pcmpeqd
mov
mov
sub
push
adc
shlb
adc
sbb
cmp
mov
adc
pop
inc
ljmp
adc
add
mov
hlt
adc
adc
jnp
or
pop
rorl
sbb
bound
dec
lods
push
mov
in
jb
xor
stos
jae
mov
jmp
pop
movsb
mov
push
sub
or
rcl
test
inc
push
inc
push
aad
dec
add
aam
add
fisttpll
adcl
add
call
aaa
push
add
aam
and
sub
aaa
jge
mov
mov
lock
inc
add
push
jo
adc
xlat
mov
enter
push
mov
clc
std
loope
das
sbb
test
fcomi
shll
loopne
es
sbb
test
shlb
add
cmp
push
xchg
call
out
xchg
aad
mov
push
add
pusha
or
or
jp
jb
pop
adc
fsubrp
popa
xchg
addb
and
mov
sbb
mov
xchg
push
mov
inc
jne
ret
fcomp
lock
shl
mov
dec
cld
ljmp
jae
and
arpl
loopne
mov
je
cld
mov
jecxz
push
outsb
pop
inc
ret
lcall
cmp
hlt
sahf
xor
jmp
loopne
push
pop
out
rorb
mov
aaa
add
mov
cmpl
jo
ljmp
mov
mov
push
cmp
int3
call
pusha
stos
xadd
aaa
dec
add
mov
add
add
or
sbb
jb
mov
lods
mov
andb
les
mov
inc
add
std
and
xchg
dec
jb
fs
adc
mov
add
adc
roll
cmp
or
adc
or
mov
inc
xchg
mov
out
mov
jo
add
xchg
cmp
jp
mov
cmp
js
ja
mov
sbb
push
mov
mov
pusha
subw
loope
out
mov
xorl
test
push
mov
or
orps
mov
pop
lret
fcoms
cwtl
call
and
mov
adc
test
xor
bound
adc
pop
test
xor
add
pop
sbb
movsb
insb
pop
test
or
lea
mov
movsb
int3
call
sti
push
fwait
sub
push
cs
mov
cmc
pop
roll
push
push
rorb
jne
push
repnz
mov
mov
xchg
sub
addb
xchg
push
and
pop
sbb
cld
or
xchg
inc
add
shl
mov
xor
push
pushf
mov
sarb
and
pushf
cld
sbb
test
rcr
movsl
xor
dec
push
inc
pop
enter
push
adc
enter
push
mov
push
mov
add
push
rol
dec
das
xchg
loopne
clc
decl
cwtl
cwtl
sbb
pop
push
js
aaa
clc
push
ljmp
inc
cmp
jmp
xchg
int3
mov
cmp
or
mov
in
cmp
cld
push
shl
add
cld
decb
sbb
sti
jbe
xor
into
xor
jbe
imul
mov
into
jl
ss
shll
jne
ret
inc
lret
jnp
fcoml
mov
mov
mov
fdiv
fistpl
sub
mov
add
lods
mov
stc
popf
mov
adc
inc
cmp
and
or
push
jge
jno
xor
adc
inc
inc
insb
je
scas
insb
adc
mov
mov
loopne
movsb
and
sahf
nop
stc
in
push
je
sbbb
push
ret
dec
divb
push
pop
pop
pushl
test
jge
jae
call
lea
inc
jl
imul
nop
push
mov
std
dec
rcl
mov
test
sbb
sub
mov
jmp
pushl
push
test
pusha
rolb
push
cmp
std
add
xor
mov
mov
addr16
jb
lods
or
iret
int3
bound
aas
leave
cmp
movb
add
jne
pop
cmp
adc
incb
test
push
int3
or
out
outsb
je
jecxz
inc
loope
add
cli
iret
mov
inc
adc
add
push
mov
or
nop
jmp
adc
rcrb
popf
aad
pop
fsubs
add
movsb
push
sub
xchg
jbe
xchg
inc
pop
push
test
rolb
or
inc
or
or
sbb
pop
je
adc
outsl
mov
add
roll
mov
inc
mov
inc
pop
pop
cli
cmp
std
stos
push
movsb
sub
or
mov
push
les
inc
and
adc
lods
mov
mov
cmp
push
fmulp
jo
addr16
loopne
push
mov
ret
and
push
aas
cmc
jg
mov
inc
xor
xchg
push
test
adcl
pop
mov
dec
inc
mov
out
je
jo
clc
icebp
divb
sbb
dec
xchg
lods
test
push
jecxz
js
sti
inc
add
cld
dec
dec
xor
lods
scas
sbb
inc
enter
pminub
mov
fcompl
sub
cmp
rcll
out
push
push
mov
mov
mov
test
mov
fistl
insl
add
mov
jb
xchg
movsl
dec
mov
in
inc
outsb
jg
cmp
ret
or
add
stos
loopne
push
imul
int
dec
divb
push
xor
push
hlt
test
push
fdivs
icebp
mov
loopne
inc
pop
push
fcomps
lock
int3
add
mov
cs
pop
andb
clc
and
xchg
out
cwtl
outsb
inc
faddl
xchg
pop
jbe
pop
test
xchg
or
push
push
or
xor
ljmp
adc
push
push
jbe
cld
test
clc
push
mov
pop
hlt
loopne
out
mov
jb
adc
or
push
mov
push
xor
inc
iret
pop
fiaddl
xchg
or
in
insl
rorb
mov
jmp
xor
dec
cmpsb
adc
mov
outsl
cmpsb
int3
push
rclb
ret
xchg
pop
adc
aas
test
ljmp
lret
insl
shll
std
sbb
out
sarb
mov
outsl
xchg
jo
and
jecxz
outsl
or
mov
movsl
ja
xor
jo
vmulss
mov
add
ret
fisttpll
cli
outsl
sub
mov
add
iret
and
add
test
mov
adc
inc
shlb
out
mov
push
add
adc
add
sbbl
cmp
mov
pop
mov
bound
dec
or
pop
dec
fdivs
pop
in
test
lahf
add
pusha
mov
mov
les
lret
or
sub
mov
and
lret
jmp
shll
push
out
mov
or
enter
imul
cmp
dec
push
add
mov
sub
int3
adc
cld
faddl
popa
call
mov
out
gs
sub
push
xchg
sahf
fs
loopne
or
cwtl
jne
add
xchg
cmp
bound
xchg
sahf
push
xor
add
clc
add
xor
scas
or
mov
mov
gs
mov
icebp
idiv
mov
mov
adc
push
push
xchg
jp
add
sbb
je
adc
mov
adc
fisubrs
cltd
icebp
mov
inc
cltd
mov
test
ds
rorb
test
add
cmp
in
in
push
loope
mov
outsl
sbb
dec
les
mov
inc
ds
push
ljmp
push
mov
push
outsb
cmp
jo
enter
adc
and
add
xchg
dec
loop
das
ljmp
xchg
mov
dec
add
clc
pop
mov
fidivrl
mov
ljmp
push
fwait
mov
mov
pop
push
push
fmulp
add
xchg
clc
dec
pop
and
and
sub
dec
mov
or
cltd
and
lods
je
mov
or
dec
push
in
jne
jae
ja
cmp
pop
push
pcmpgtb
or
stos
add
jne
rcll
pop
xchg
loopne
rclb
stos
lret
jne
nop
mov
or
dec
xor
ret
in
xchg
int
jmp
mov
or
push
dec
add
mov
xchg
cmpl
sbb
faddp
xlat
hlt
stc
sbb
je
jmp
and
cmp
in
mov
addb
jb
sub
push
inc
enter
and
orl
fdivs
push
cld
les
pop
pushl
hlt
cmpsb
cli
or
cli
call
inc
xor
xlat
cs
mov
xor
adc
adc
out
mov
inc
dec
jbe
jae
inc
mov
jo
or
ficoms
int3
test
xor
clc
jns
subl
and
xrelease
adc
mov
sbb
call
cmp
ljmp
mov
pop
orl
call
push
sahf
cmp
dec
ljmp
dec
fsubrl
rcl
loopne
adc
clc
jmp
push
inc
dec
movsl
test
mov
pop
push
adc
insb
jmp
ss
sbb
cs
jo
adc
adc
dec
sub
inc
xorb
mov
fcoms
push
jne
push
mov
push
sub
add
xor
roll
sub
aas
in
push
inc
push
xor
jns
dec
scas
xchg
mov
push
bnd
adc
les
test
lcall
dec
and
xor
imul
inc
outsb
jne
and
sub
fiadds
pusha
add
add
bound
int3
dec
ret
jae
add
ret
shll
fs
or
enter
clc
pusha
imul
aam
mov
jl
decl
adc
pop
sbb
mov
dec
rolb
inc
jo
jl
adc
in
push
or
lods
sarl
into
sbb
pop
dec
clc
mov
js
insb
xor
sbb
mov
or
jmp
add
add
mov
add
mov
cmp
adc
inc
mov
xor
mov
xor
or
add
je
xor
loopne
sbb
mov
aas
pop
xor
addl
xor
adc
lds
loope
in
xor
inc
pop
or
testl
cs
xor
adc
inc
inc
aad
mov
push
testb
or
push
and
xor
cmp
xor
push
add
mov
or
inc
cli
mov
push
sbb
je
xor
clc
pusha
lahf
jo
jbe
xor
in
jl
cmp
in
dec
leave
les
es
push
in
mov
xor
shll
dec
iret
mov
cld
jecxz
jge
mov
shll
in
enter
incl
test
lea
fimull
push
or
not
inc
cmp
loope
lods
js
push
insb
inc
call
ret
nop
out
fidivrs
push
leave
dec
mov
xchg
and
inc
pop
sbb
sahf
adcb
addr16
or
hlt
dec
fisubrl
adc
fcompl
rorl
pop
mov
lret
jb
out
nop
add
aam
add
in
lea
sbb
les
inc
stos
roll
mov
aam
push
addb
cmp
add
ss
test
pop
or
inc
les
fldl
pop
sbb
jle
push
mov
push
jae
sbb
adc
fisubs
cld
ret
shrb
lea
out
push
mov
pop
add
mov
loope
insl
mov
divb
inc
sbb
push
fldt
add
je
or
mov
outsl
es
jmp
dec
loopne
dec
jg
in
xchg
cmp
ljmp
inc
push
ficomps
aam
push
sbb
sbbb
mov
sub
jne
push
lret
orb
test
adc
pop
inc
or
lcall
add
jl
adc
and
xor
insb
add
mov
js
clc
mov
xor
stos
repnz
rorb
movsb
push
clc
pop
xor
or
mov
add
dec
mov
push
cs
je
int3
mov
enter
push
stos
pusha
cmp
call
mov
push
mov
int
icebp
adc
xor
lahf
pop
dec
imul
dec
rcr
sbb
cwtl
lret
rcr
adc
jle
in
ss
ret
std
mov
or
out
xchg
hlt
add
out
xor
dec
sbb
cmc
inc
push
pop
inc
popf
pop
xor
inc
data16
push
push
mov
push
and
add
callw
mov
fisttpl
xchg
adc
dec
jne
jno
add
adc
pushf
fcom
gs
enter
or
push
fdivrs
adc
adc
negl
push
mov
mov
mov
sbb
dec
xorb
pop
xchg
rcrb
sub
in
and
push
fs
add
dec
mov
repnz
pop
fs
push
rorl
lods
mov
imul
dec
adc
sbb
jb
inc
sbb
pop
int3
int3
inc
adc
js
inc
mov
mov
xchg
lds
push
pop
adc
aas
or
dec
cli
stos
je
push
cmp
lcall
in
push
nop
lock
or
add
movsw
push
jl
or
in
or
adc
adcb
push
lea
mov
push
stos
add
mov
clc
ror
shll
sbb
sub
loope
xor
and
mov
cmp
fiaddl
nop
xchg
movsb
test
loope
in
dec
mov
jecxz
jg
mov
pop
jae
or
ficoml
xchg
dec
inc
dec
outsb
inc
js
cmpsb
ljmp
inc
mov
imulb
mov
dec
or
add
push
jb
xchg
je
pop
cmpl
dec
inc
or
sbb
or
xchg
pop
mov
popa
sar
xchg
test
lahf
xchg
push
movsb
jle
test
fiadds
sbb
ja
lret
push
or
push
dec
or
rolb
mov
or
push
fdivl
neg
push
jne
mov
adc
mov
and
lcall
cmp
push
call
mov
adc
mov
mov
lret
add
pop
cmp
xlat
nopl
push
push
pop
movsb
mov
stos
lods
xchg
push
push
andl
mov
push
ret
addb
adc
push
int3
inc
push
xor
mov
movsb
adc
dec
fimull
adc
pop
lahf
hlt
sbb
xor
rorb
pop
movsb
push
sub
jp
push
cmp
add
jne
ljmp
pop
insb
sarl
cli
xor
mov
xchg
jmp
sbb
mov
divb
shl
mov
fiadds
fsubrs
pop
mov
insb
adc
jl
in
xor
ficoms
in
or
ret
std
cld
movsb
es
insb
mov
push
repnz
pop
xchg
aaa
mov
lods
rolb
adc
rolb
movsl
add
push
lock
push
push
mov
ljmp
out
push
pop
jno
in
into
enter
xor
sbb
sbb
adc
xchg
cld
mov
mov
pop
mov
jg
inc
ljmp
add
jmp
mov
cmc
mov
cld
push
or
add
rcrb
dec
mov
aas
adc
aad
push
push
xor
push
push
insl
xchg
add
inc
cmp
push
xor
mov
rolb
cmp
shr
je
add
sub
push
mov
pop
nop
add
or
mov
call
popf
dec
mov
je
int3
cwtl
sbb
adc
popf
cwtl
push
ret
add
xchg
int3
decb
jecxz
inc
divl
adc
in
fsubrl
inc
pop
ss
in
push
shrb
sahf
xor
add
dec
cli
cmpsb
mov
hlt
out
adc
leave
xchg
cmpb
xchg
mov
pop
mov
pop
xor
icebp
mov
sub
xor
cmp
push
nop
mov
push
inc
dec
rorb
mov
mov
cmp
and
sub
or
int3
ret
mov
mov
scas
jmp
jb
mov
ljmp
cmp
push
xlat
jg
jecxz
and
sbb
dec
jmp
cmpsl
push
push
push
or
out
hlt
mov
mov
in
mov
cli
or
mov
cmc
or
shll
in
xchg
int3
mov
mov
lock
cmp
je
jg
insb
and
jmp
cmp
fs
test
mov
push
xchg
add
xor
js
jg
mov
push
adc
xchg
loope
jle
xchg
add
outsl
adc
pop
push
jg
popa
mov
outsb
imull
mov
mov
adc
xorl
push
outsb
ss
in
mov
mov
add
stos
hlt
xor
lea
and
mov
push
mov
mov
inc
and
xor
pop
rcrl
jl,pn
addl
inc
xchg
cmc
jg
insl
roll
mov
mov
mov
sbb
jne
push
sub
add
xchg
sbbb
ret
jle
mov
sub
negb
xor
adcl
cmp
fisttpl
mov
add
ret
pop
sub
jbe
fistl
add
movsb
in
push
cwtl
sbb
inc
jmp
mov
lcall
add
clc
test
xchg
push
lds
rolb
dec
mov
add
mov
sbb
cmp
mov
ljmp
ljmp
fiadds
dec
or
xor
cmp
mov
and
adc
jle
mov
call
and
push
ljmp
in
loope
movsl
ja
xor
or
mov
mov
pop
call
es
xchg
or
cli
pop
adc
add
sbb
mov
dec
aaa
xor
movhps
bswap
push
mov
sub
cmp
mov
fs
out
xor
stc
inc
xorb
fdivl
cmp
cmp
bound
jne
inc
xchg
and
adc
push
js
popf
lock
dec
push
cld
stos
push
xor
mov
mov
inc
cld
push
movsb
roll
adc
sbb
icebp
xor
push
jmp
xor
mov
inc
outsl
xor
or
movsb
or
xor
ds
lea
push
shll
cld
insl
inc
test
jo
xorl
xor
movsl
inc
jp
and
test
push
and
add
pop
mov
mov
sub
push
mov
mov
inc
addl
xchg
xchg
cmovne
mov
lods
insb
outsb
sub
int3
test
pop
test
inc
inc
mov
add
adc
negb
add
add
push
add
push
inc
mov
mov
xchg
dec
and
in
mov
in
movsb
scas
shlb
mov
movsl
loope
in
pop
jl
call
lcall
inc
sbb
pop
stos
test
fcmovbe
lea
call
or
push
jecxz
mov
rcr
add
xchg
sub
fmul
in
ret
aam
test
push
dec
adc
xor
lods
add
leave
xchg
add
mov
arpl
xchg
in
and
loopne
stos
adc
xor
or
cli
xchg
cmp
fdivs
fsubrs
loop
push
loopne
cmp
gs
insb
in
aad
pop
movsl
jb
inc
ret
nop
lods
and
outsl
outsl
mov
les
pop
dec
mov
add
mov
push
lret
adc
sbb
add
sbb
inc
inc
movsb
jmp
ret
lock
push
mov
into
out
mov
mov
cmp
cmpb
sahf
filds
div
aad
les
nop
ss
ljmp
xchg
aas
jg
rcrb
xchg
pusha
mov
loopne
add
pop
xchg
mov
push
ret
cmp
pop
or
hlt
add
rorb
push
testb
sub
or
pop
cwtl
dec
clc
sbb
dec
add
orb
incl
adc
fs
mov
inc
mov
pop
lock
call
add
sbb
mov
ds
subl
inc
int3
xchg
fcomps
ljmp
pop
or
adc
or
rclb
cmc
add
je,pn
sbb
push
lcall
add
aaa
jnp
xor
or
sub
or
dec
mov
add
vpshuflw
cmp
shlb
mov
movsb
loop
add
mov
in
pop
add
add
lret
or
addb
cmpsl
cmp
cmp
or
pop
jo
inc
test
mov
in
mov
cs
loope
push
xchg
sub
arpl
mov
std
mov
and
lret
data16
push
insl
push
pushf
adc
rolb
mov
in
mov
fs
adc
ja
push
fcomps
adc
dec
xchg
push
pop
hlt
leave
ds
push
or
inc
sbb
cmp
in
add
data16
stc
arpl
nop
cld
push
sbb
xchg
ss
mov
sub
adc
push
mov
and
scas
add
mov
sbb
and
and
add
jp
cli
fildl
dec
inc
stos
jne
cld
mov
inc
js
mov
sub
and
adc
jo
ljmp
hlt
push
test
sub
mov
push
pop
insb
add
mov
inc
lcall
call
negb
jbe
push
fs
addl
xadd
aad
push
pop
push
scas
lea
mov
mov
push
pop
push
inc
mov
push
popa
clc
sub
adc
push
pop
inc
mov
sbb
pop
inc
popf
cld
or
cli
cli
loopne
mov
inc
jb
or
inc
mov
test
mov
popf
out
mov
movsb
sarb
mov
pop
fdivs
xchg
testb
add
js
test
imulb
sbb
enter
ds
imul
push
xorb
push
push
aas
js
sbb
shrl
add
cli
inc
jae
incl
scas
lahf
xor
pop
push
add
out
jo
mov
sti
jae
test
aaa
mov
das
sub
pop
xorl
xor
push
jg
inc
iret
insb
mov
cmp
or
inc
push
mov
push
rcl
aaa
jmp
sar
fwait
xchg
dec
clc
rclb
xor
inc
loop
inc
jmp
adcb
aaa
or
rclb
dec
xchg
fcoms
decb
push
adc
add
hlt
sub
xlat
in
mov
mov
ljmp
shlb
nop
insl
mov
pusha
and
dec
jb
dec
jmp
push
or
shrb
test
sbb
int3
dec
imul
push
adc
push
add
fs
insl
add
loopne
fs
call
enter
sub
pop
adc
inc
mov
adcl
xchg
xchg
loop
dec
enter
cmp
mov
rclb
pop
mov
xchg
push
sbb
add
rol
in
or
jl
addr16
sub
pop
popa
sbb
mov
fs
mov
shll
push
push
jno
clc
or
inc
inc
sub
add
push
inc
push
loopne
aam
lock
push
insl
push
gs
sub
rolb
imul
add
or
dec
add
mov
dec
or
sub
or
loope
jp
mov
dec
adc
dec
mov
pop
xchg
push
and
dec
mov
imul
sub
mov
ret
inc
xor
push
cmpb
jp
jge
call
notb
inc
into
mov
sbb
inc
movsb
mov
xchg
shl
add
inc
jo
adc
ss
cmp
mov
adc
mov
divb
cmp
aam
cltd
cmp
xor
rol
push
enter
and
and
push
ret
jge
jge
cs
jge
jo
mov
rorb
shrb
les
mov
dec
addr16
testb
in
repz
lock
jl
pop
enter
fsubrs
push
dec
insb
loope
push
ds
push
jmp
gs
scas
arpl
icebp
loope
insb
pop
hlt
mov
or
in
push
sbb
and
pop
test
in
dec
pop
inc
mov
or
adc
js
cld
hlt
adc
rcrb
push
fninit
movsb
add
mov
pop
or
cli
xchg
inc
xchg
and
movsb
push
xor
aaa
jne
cmpsb
mov
sub
dec
dec
push
adc
jp
or
jns
sbb
adc
add
mov
lock
les
loop
ret
sub
mov
push
lcallw
and
data16
les
test
add
sbb
push
clc
mov
jp
mov
or
cld
mov
loopne
dec
roll
decb
add
loop
dec
xchg
mov
push
dec
lods
je
dec
lahf
subl
call
xor
orl
inc
push
jmp
inc
pop
aaa
jbe
and
lea
and
mov
test
jo
inc
cmp
icebp
lea
pushaw
push
fisttpl
fiaddl
pusha
sbb
insb
add
and
aas
notb
insb
mov
cmp
adc
add
add
call
imul
mov
jo
sub
rol
push
and
mov
clc
sub
repnz
cwtl
mov
sbb
ficompl
ja
or
push
inc
mov
mov
sbb
lock
mov
sbb
inc
pop
jmp
cmp
bound
sahf
mov
inc
push
mov
xchg
mov
push
repnz
js
orl
push
add
add
outsb
movb
pop
orb
add
cmpsb
mov
pop
push
adc
clc
imul
add
insb
call
pop
push
ds
xor
cltd
adc
mov
mov
push
inc
imul
outsb
insb
in
shll
or
cli
mov
or
mov
xchg
sbb
push
cs
stos
and
bound
pop
push
mov
test
push
aaa
lds
mov
faddl
incb
adc
cmp
push
xor
xor
and
in
nop
cmp
or
ljmp
js
cld
push
lea
test
fadd
cmp
mov
jge
lods
call
or
es
add
add
subl
fmuls
inc
add
sarl
sbb
sbb
lahf
int3
mov
pushf
jne
push
mov
lock
repz
lds
stos
jbe
jo
ret
jmp
jg
push
pop
lcall
fidivrl
push
and
pop
int3
jp
xor
adc
or
je
lcall
roll
cmp
push
jnp
sbb
mul
add
xor
adc
mov
cld
cmp
jne
fwait
mov
insb
mov
pushaw
and
int3
mov
push
xchg
push
mov
test
mov
shrb
mov
adc
jl
enter
cli
fs
jmp
xor
mov
mov
lcall
xor
or
jne
mov
testl
int3
xor
mov
inc
xor
jo
negl
daa
xchg
int3
dec
int3
mov
or
nop
adc
mov
les
fsubr
or
sbb
cmp
jg
inc
shr
sbb
cmc
in
inc
xor
push
pop
data16
cmpl
je
shrl
push
pushf
mov
out
mov
xchg
mov
cmpsl
pop
cmp
pop
mov
lret
cmpl
js
inc
in
out
xchg
push
push
sbb
dec
mov
xor
insb
and
add
jne
cmp
int3
jle
jle
outsb
adc
into
mov
incb
xchg
dec
mov
jns
test
push
call
mov
enter
jg
push
mov
test
jg
in
das
inc
insl
cld
jge
ret
sub
mov
mov
int3
xor
push
cmp
push
mov
stc
push
mov
xchg
mov
xchg
push
dec
loop
popa
je
mov
mov
je
adc
clc
mov
data16
ret
mov
jle
cmp
adcl
fdivrs
mov
jge
push
xor
mov
cmp
shrb
test
pusha
arpl
fisubs
or
cmpl
pop
arpl
push
sub
inc
add
out
xor
aaa
dec
in
xchg
inc
gs
jp
mov
std
jo
movsb
mov
inc
nop
mov
lods
call
push
sbbb
movsl
cmp
stos
and
cld
test
inc
cld
aam
fcmovnb
clc
pop
int
mov
and
cmp
dec
adc
xchg
adc
mov
fildl
test
push
sbb
mov
aas
ud0
ljmp
adc
xchg
scas
inc
jb
ret
adcl
pusha
into
iret
filds
jmp
idiv
ljmp
push
or
or
ljmpw
lea
fiaddl
or
insl
lods
stc
add
ds
and
mov
shll
adc
int3
cli
dec
push
add
cli
data16
arpl
jmp
ljmp
push
inc
push
flds
pop
je
shl
hlt
push
cltd
dec
sub
mov
sub
test
sbb
outsl
lds
mov
mov
insb
xor
jnp
push
jnp
ret
je
fwait
cmp
adc
adc
push
cmpb
outsb
push
add
jle
cltd
gs
ret
sarb
add
movsl
insb
cmp
lock
pop
fisubl
cmp
add
push
mov
inc
fstl
pop
inc
in
cs
jbe
icebp
adc
das
push
sbb
sbb
push
sub
ret
mov
adc
cltd
or
jbe
sbb
jp
and
enter
movsb
outsl
fistps
rorb
xor
daa
inc
and
pop
inc
stos
sbb
xchg
sub
or
mov
enter
adc
push
mov
shll
repz
mov
inc
and
add
cmp
stos
rcl
rorb
mov
lods
push
test
xchg
push
lret
pop
and
or
ljmp
mov
adc
inc
xor
in
add
adc
pushfw
aam
push
addb
in
xchg
add
nop
ret
cmp
mov
cld
and
add
jl,pt
pop
cmp
loop
inc
and
mov
pop
sti
sahf
js
push
stc
fidivl
stc
inc
into
je
xor
in
mov
add
loope
pop
add
movsb
mov
shlb
nop
fidivs
decb
mov
shl
ror
dec
add
shrb
push
or
mov
xchg
dec
pop
cmp
dec
mov
pop
lods
mov
and
xchg
loopne
insl
adc
add
xor
push
into
lcall
push
fwait
ja
leave
maskmovq
imull
jo
cmp
cld
fldt
push
cld
pop
lods
sbb
cmp
in
adc
pop
add
sub
push
inc
adcl
and
out
dec
cmp
cmp
sub
adc
in
push
pop
hlt
insl
jns
mov
cmpb
call
icebp
cmp
lea
lahf
in
fwait
jle
push
push
inc
bnd
or
adc
fiadds
sub
jb
xor
add
bound
clc
or
jle
test
imul
js
stos
aaa
cmc
sbb
pop
sub
or
cmp
std
xchg
jns
and
ret
dec
inc
dec
dec
push
je
mov
push
mov
adc
out
inc
stos
stos
mov
pop
push
rorb
ffreep
xor
sub
in
test
sbb
loop
pop
mov
int3
add
inc
inc
orb
insb
sbb
sub
jp
add
mov
add
or
aad
inc
xchg
fs
test
fadds
push
fiaddl
inc
adc
lea
inc
xor
call
js
push
outsl
nop
cmp
call
add
dec
or
xchg
cmc
andb
sub
mov
cmpsl
push
adc
cli
test
dec
repz
add
adc
inc
jmp
xchg
ss
fcmovnbe
jge
mov
in
ss
push
sbb
push
jns
fcmove
sub
add
mov
inc
in
inc
roll
rclb
fcoml
mov
xchg
mov
mov
mov
pop
sbb
call
add
dec
data16
jp
mov
xor
int
cmp
ljmp
sbb
mov
int3
aam
mov
and
and
push
std
aad
nop
out
inc
push
hlt
mov
jne
cmp
mov
and
cmp
ljmp
ss
repnz
shl
js
and
imul
out
mov
nop
js
push
aad
fists
hlt
test
icebp
inc
rclb
cmp
shrb
adcl
adc
incb
dec
xchg
cld
pop
imul
or
and
inc
adc
scas
dec
dec
xchg
mov
fs
mov
sub
cmp
ss
jecxz
cltd
es
push
xor
sub
and
mov
inc
jle
or
jb
outsb
push
cmc
add
bound
push
mov
xchg
sbb
jp
add
lock
roll
insb
or
mov
cld
ret
push
cmpl
in
xchg
in
xchg
ds
jmp
dec
mov
mov
mov
sbbb
mov
lods
xor
pop
add
ss
adc
dec
aas
das
cltd
nop
lds
clc
les
in
dec
xchg
cmp
mov
pushf
outsb
arpl
clc
or
push
dec
mov
lock
inc
mov
test
out
arpl
add
sub
and
jg
rorb
mov
and
jo
sbb
inc
xor
cli
xor
add
push
rcl
push
std
push
or
jo
lea
jno
jle
xor
and
and
xchg
add
cmp
dec
dec
es
int
xor
decb
imul
pop
xchg
mov
insb
mov
movsb
inc
add
shrl
add
push
loop
lea
cmp
in
sbb
ror
aas
jbe
nop
xor
sub
xorb
aas
fs
pop
lods
popf
jle
loopne
and
imul
fs
or
daa
xchg
icebp
add
les
js
adc
fdivr
push
mov
mov
sub
pop
cmp
cmp
movl
pop
std
std
inc
scas
xor
imul
fs
add
lahf
out
lret
and
loop
cmp
mov
mov
sub
rolb
xor
hlt
shlb
fidivrl
push
jne
adc
pop
add
or
mov
inc
and
mov
xorl
imul
add
inc
push
push
into
cli
add
imul
sbb
xchg
aam
inc
adc
or
movsb
add
test
out
sbbb
inc
xchg
mov
xchg
shlb
dec
in
push
int
pop
push
push
mov
pop
mov
sbb
mov
cmpsb
jo
test
rclb
out
push
pop
or
dec
lret
ss
jl
shlb
pop
fidivrl
dec
pop
jb
pop
dec
adc
pop
adc
jg
stos
mov
in
sbb
aaa
push
loop
imul
dec
pop
sub
mov
xchg
test
and
dec
int3
or
cmp
insb
dec
int3
jmp
cmp
pop
xor
arpl
dec
mov
cmp
int3
inc
dec
adc
add
fs
rolb
mov
add
pusha
outsb
pop
or
mov
leave
or
dec
mov
rorb
cltd
dec
repz
mov
fdivrl
jecxz
test
mov
xor
add
sbb
or
ds
adc
js
movsb
scas
mov
push
pop
ljmp
into
inc
aaa
adc
push
adc
mov
lea
daa
movsb
and
sbb
hlt
mov
ljmp
rol
pop
sbb
cmc
incl
pop
mov
push
mov
arpl
add
cmp
gs
adc
addb
dec
mov
or
inc
and
shll
in
adc
push
sbb
aas
in
push
or
fmull
sbb
add
xor
add
cmpsb
lock
lea
call
mov
test
inc
xchg
push
in
add
in
test
cmpsl
lea
jg
adc
rorb
notb
rcrb
rcr
js
fiaddl
jecxz
test
fsubrl
inc
fimull
ljmp
push
inc
push
jge
add
mov
sbb
mul
scas
jmp
adc
test
ret
aas
mov
push
mov
inc
pop
add
mov
cwtl
pop
pop
stos
dec
sbb
xchg
or
pusha
insb
test
mov
mov
push
mov
xor
aam
les
xor
add
and
ret
xchg
cmpsb
pop
mov
aaa
and
xor
filds
rcl
sub
push
add
or
inc
sbbb
int3
mov
push
xchg
sbb
push
loope
mov
mov
lods
sub
xor
mov
mov
mov
sub
fcom
jb
sbbl
add
and
mov
lcall
mov
pop
call
pusha
xlat
jo
pop
leave
js
and
xchg
mov
cmpsb
push
mov
and
adc
arpl
cmp
dec
fildll
dec
jp
inc
push
scas
stos
mov
movsb
add
mov
aaa
fwait
sbb
dec
dec
add
aaa
adc
jl
repz
std
das
add
inc
sbb
inc
push
mov
add
ret
and
fadds
lea
imul
xor
out
test
das
jp
pop
nop
hlt
cld
aam
test
scas
fs
jae
mov
inc
add
lea
lret
jbe
movsb
sar
ret
mov
adc
out
orb
scas
jle
fistl
mov
cmc
add
push
or
push
shlb
scas
push
je
lret
ret
inc
pop
and
sub
lods
add
push
lock
adc
les
cld
pop
cmp
loopne
cmc
sub
or
mov
pop
and
mov
add
cmp
das
inc
push
dec
popa
imul
add
push
in
sub
setl
ss
push
mov
inc
pop
in
push
in
inc
stc
and
aam
adc
mov
jl
les
arpl
fidivrs
xchg
adc
mov
enter
divb
sub
push
and
push
sbbl
mov
sub
orl
test
jb
dec
cs
mov
add
and
fcomps
jo
xchg
pop
scas
shl
test
pusha
sti
into
and
pop
jmp
ss
dec
test
enter
sbb
clc
pusha
mov
adc
dec
xchg
in
dec
adc
loopne
jl
add
inc
lfs
es
shlb
sarl
adc
fisttps
lods
pop
xorl
mov
mov
jmp
or
es
adc
in
xchg
xchg
xchg
inc
mov
mov
sbb
stos
mov
inc
adc
push
mov
filds
push
xchg
lea
int3
push
mov
insl
cmp
nop
jle
xchg
fdivr
inc
push
int3
xchg
dec
outsl
dec
invd
test
je
sub
ret
and
add
mov
sar
add
add
imul
sbb
call
add
scas
stos
or
out
aas
insb
imul
orl
sbb
and
mov
push
adc
scas
jecxz
call
and
rorl
and
jo
pop
ds
sub
mov
mov
sbb
popa
inc
call
jb
inc
nop
mov
xchg
xorb
sti
push
xor
shll
sbbl
cli
pop
mov
inc
fmuls
lea
push
lcall
sbb
out
lds
lods
push
hlt
data16
mov
mov
mov
in
adc
sub
bound
lahf
mov
ret
or
mov
mov
push
fcmovb
push
jecxz
scas
cmp
adc
cmp
data16
add
pop
push
je
cmp
out
jnp
imul
cmp
cmp
cmp
mov
push
add
fld1
sub
push
mov
inc
cli
bound
mov
sbb
and
in
sub
mov
cmpsb
mov
ret
and
jnp
outsl
mov
push
mov
cmp
jmp
jg
rcrb
sbb
mov
stos
cld
test
shl
sbb
lods
sub
sub
je
mov
std
out
test
mov
pop
mov
mov
aam
and
outsl
insb
lods
ss
pop
loopne
loop
and
dec
test
mov
leave
push
mov
fdivs
ret
and
call
mov
lds
idivb
aam
inc
scas
push
scas
mov
out
data16
xor
mov
adc
lea
ljmp
pop
mov
mov
mov
sub
add
mov
nop
jp
pop
insb
mov
mov
dec
into
xor
or
inc
pop
and
arpl
mov
sub
inc
jp
and
aaa
scas
dec
fwait
loopne
pop
nop
cwtl
call
xchg
jbe
lret
pushf
pand
inc
call
incl
shll
or
mov
push
xor
mov
into
fstps
test
fisubrs
adc
xor
push
xor
std
pusha
push
sbb
aam
decb
decb
or
inc
mov
aam
pop
popa
mov
inc
movsb
ljmp
mov
mov
ljmp
les
xor
or
pop
lea
mov
adc
ds
jg
push
jnp
enter
xor
push
sbbl
in
repnz
dec
xchg
mov
call
shlb
push
jecxz
add
jge
insl
outsb
fmull
out
sub
data16
push
mov
inc
cmp
push
push
cli
adc
push
in
jns
inc
fdiv
adc
xorl
cli
ret
mov
imul
and
lcall
ret
inc
mov
push
sahf
mov
je
stos
and
enter
xchg
ljmp
dec
jo
repnz
stos
or
xchg
imul
pushl
icebp
out
lcall
mov
xchg
push
pop
adc
add
cs
shrb
and
mull
cmp
mov
jns
ret
push
rcrb
sar
stc
hlt
loope
jmp
cs
push
into
cmp
inc
sub
adc
insb
cmp
push
and
aad
inc
ljmp
add
add
fistpl
mov
clc
add
inc
or
aam
mov
sti
xchg
pop
leave
xor
push
cmp
jae
fdivl
and
rol
mull
or
push
fsubl
mov
int
xor
inc
add
cmp
adc
clc
clc
jge
in
xchg
inc
lods
dec
mov
mov
test
outsb
jne
adc
nop
loopne
inc
inc
mov
pop
hlt
stos
fsts
and
adc
call
push
aam
out
mov
sub
add
les
nop
lock
jo
dec
xor
mov
inc
imul
stos
push
mov
xor
ds
mov
insb
pop
push
add
ss
jle
dec
cmp
xorl
test
and
mov
ret
mov
or
leave
outsl
pusha
loope
lcall
sbb
mov
aas
stos
add
enter
push
xchg
push
push
sbb
call
jae
add
push
cmp
cmp
clc
or
out
pushf
shlb
xor
jl
nop
sub
lods
nop
cmp
adcb
daa
std
addl
scas
and
sub
popa
sub
sbbl
add
xor
fidivrs
mov
xor
icebp
or
jecxz,pn
aad
outsb
mov
fists
cmc
mov
cwtl
cli
cli
add
adc
cmpb
andl
bound
mov
mov
nop
or
cmp
mov
cli
in
rcrl
ret
outsl
mov
push
cltd
cwtl
add
or
adc
incl
add
ret
mov
hlt
mov
fs
aas
xchg
adc
jae
push
fldenv
insb
push
test
jno
paddw
aam
jb
dec
jno
and
xor
sbb
mov
mov
fs
cmp
shll
push
or
or
xchg
fcomi
or
std
les
push
imul
outsl
in
mov
out
js
dec
pushl
add
jno
mov
lds
in
roll
dec
clc
incl
fnstsw
pushf
cmp
push
push
push
jne
loopne
int3
enter
test
fs
lods
ss
xchg
popa
xchg
hlt
out
jae
orb
pop
adc
jge
int
add
sub
and
scas
adc
jno
mov
cmp
adc
xchg
cmp
inc
stos
or
and
jo
fmull
mov
fistl
mov
hlt
ret
mov
cmp
add
cmp
cwtl
ds
or
pop
jmp
pushf
mov
sub
or
xchg
movsb
loopne
hlt
sbb
mov
xchg
enter
jmp
hlt
sbb
stc
add
stos
fs
and
pushl
lock
loopne
shll
mov
ljmp
js
dec
dec
mov
pop
mov
and
inc
mov
or
pop
aas
push
movsl
mov
test
les
mov
mov
sub
cld
into
je
call
inc
sarb
xchg
imul
movsb
aam
sbb
push
stos
dec
add
push
xchg
js
jl
test
jge
adc
push
adc
ret
push
push
arpl
dec
test
xor
dec
test
pushf
in
sub
aas
jo
mov
lds
nop
sbb
test
test
mov
mov
das
sub
mov
test
mov
rcrl
xor
ja
mov
add
loopne
les
movsb
mov
sub
dec
adcb
push
insl
pop
add
jo
test
out
scas
adc
imul
cli
in
push
add
dec
mov
pop
mov
xlat
inc
mov
push
shr
ljmp
insb
popa
xlat
add
push
in
pop
std
push
inc
fs
xchg
mov
mov
xor
outsb
imul
sbb
pop
mov
popf
rcrb
int
lock
mov
loope
xchg
adc
cmpsl
incl
pushf
rolb
adc
in
adc
in
mov
les
inc
cmc
push
stos
cmc
into
push
push
push
dec
cld
push
pushf
push
mov
aad
test
test
call
push
push
in
jbe
mov
imul
adc
outsb
mov
sahf
dec
sub
aad
xchg
push
mov
mov
repnz
push
or
pop
xchg
cld
jecxz
les
mov
dec
sahf
jp
test
rclb
mov
popa
data16
adcb
negb
frndint
pop
popa
js
push
mov
or
add
mov
push
jb
clc
add
daa
gs
clc
pop
adc
negb
popa
mov
or
add
xor
inc
sub
adc
xor
jo
xor
cmc
idivb
ljmp
mov
lea
fbld
aaa
pop
lea
cwtl
std
add
sbb
xor
or
push
mov
lock
lock
jl
bswap
cmp
cli
daa
push
adc
incl
inc
mov
pop
rcrl
sarb
sahf
aas
lret
std
loop
xchg
add
or
call
mov
inc
or
pop
cmp
push
cs
inc
out
dec
outsl
gs
dec
shlb
push
rcll
push
jae
or
pop
jp
test
int3
stos
jne
pusha
pop
imul
inc
mov
test
pop
dec
std
ret
pushf
sub
xor
add
test
ds
cmpsb
add
mov
andb
pop
mov
xor
pop
and
adc
add
sub
push
add
mov
sbb
push
xor
push
ds
rcrb
add
jne
add
std
inc
dec
cmp
add
cmp
xchg
insb
mov
mov
cwtl
inc
adc
lea
sbb
mov
es
add
cs
or
sbb
mov
or
incb
push
push
gs
pop
cmp
jmp
addb
aam
inc
mov
cmp
mov
je
dec
stos
frstor
push
and
adc
int3
or
push
xor
xor
test
push
push
aaa
out
cld
shrb
fwait
sbb
xor
divl
or
cld
lahf
out
rcr
hlt
adc
test
jo
mov
cmp
lea
imulb
enter
pop
shrl
and
es
push
rcrb
and
sbb
cmp
mov
inc
xchg
pop
pop
or
clc
imul
int3
int3
bound
or
loop
addr16
add
jle
stos
pop
or
in
jle
push
xchg
jb
incb
out
pop
movsl
sbb
ds
pop
out
xor
add
add
push
dec
loope
subb
mov
xor
shl
sbb
pushl
bound
inc
sub
daa
cmpl
shrl
and
and
inc
stc
sbb
dec
clc
or
adc
or
push
xor
lcall
sbb
rolb
or
jl
sub
in
sarb
shlb
inc
inc
in
iret
xchg
mov
shlb
leave
cwtl
outsl
clc
pop
lcall
mov
xor
cmp
clc
jge
xchg
push
mov
pop
add
pop
fmuls
push
fdivs
aad
sti
pop
insl
inc
add
call
jg
movsb
sti
add
repnz
adc
sbb
pop
scas
rcrl
add
inc
clc
xor
andl
jle
mov
push
icebp
adc
bound
fiaddl
mov
add
lods
jbe
pop
test
cmp
enter
pop
js
shlb
mov
inc
inc
sbbl
mov
ss
rclb
pop
orb
into
in
push
or
xor
pop
sbb
lock
mov
sub
inc
cmp
mov
lods
cs
ror
sahf
push
dec
lcall
or
lods
inc
sbb
add
adc
cs
push
fstps
inc
lret
cmpb
aas
mov
ljmp
push
dec
ret
xor
ljmp
loope
push
xchg
je
stos
jle
dec
int3
xorps
xchg
ret
leave
loope
insl
or
cmp
add
adc
rcr
and
inc
gs
cs
push
shrb
cmp
test
cld
inc
mov
in
mov
or
hlt
pop
jecxz
fcomps
mov
cmp
jbe
outsl
outsb
add
and
into
or
in
pushf
insb
pop
jl
mov
imul
outsl
scas
add
mov
jb
cld
add
push
sbb
loop
inc
rorb
or
rolb
push
fdivs
pop
adc
jb
adc
xchg
or
xchg
hlt
ret
and
mov
nop
int
adc
mov
add
xchg
adc
jp
pop
xchg
cmp
sub
xchg
clc
aaa
push
jp
punpckhdq
int3
mov
jno
adc
aaa
xor
add
push
mov
and
es
gs
push
sub
clc
sbbb
je
in
jbe
xchg
pop
subb
dec
mov
xchg
lods
dec
jb
std
add
sub
cld
push
cld
add
lock
orl
cmc
jp
mov
mov
or
cld
push
nop
je
dec
ss
adc
mov
cmc
xor
cwtl
lods
je
add
add
add
pop
das
push
fs
bound
push
add
lock
jmp
add
or
ljmp
mov
decb
adc
mov
outsl
mov
pop
sub
mov
mov
icebp
jnp
add
push
aaa
push
ds
pusha
hlt
lock
add
mov
push
sub
sub
dec
loope
out
add
mov
jle
lods
outsl
fbld
sbb
fs
in
nop
dec
outsb
pop
or
pop
or
ja
dec
sbb
xor
leave
addb
negb
push
and
adc
nop
andl
adc
ret
ret
push
add
inc
js
add
es
xor
ret
or
dec
or
aam
push
rcl
inc
clc
int3
xchg
lock
scas
or
sbbl
xor
push
inc
xchg
xor
jo
push
data16
push
jo
int3
jmp
das
adc
cmp
or
in
add
aaa
stos
jb
hlt
jmp
call
adc
insb
xchg
clc
add
shlb
call
push
sahf
add
in
sub
hlt
ret
mov
je
movb
sbb
in
cli
push
sbb
aas
sub
or
mov
imul
mov
inc
je
sub
loopne
sbbb
ljmp
rorb
dec
lock
insl
push
je
sbb
adc
lea
inc
add
pop
push
or
cmpsl
movsl
data16
jmp
jp
sbb
sub
cmp
pushf
adcb
icebp
push
xchg
mov
icebp
loopne
loop
or
gs
push
insb
pop
mov
das
mov
int3
sbb
mov
stos
cmp
mov
push
jo
lods
push
fs
jge
test
loop
or
ja
cmp
push
call
push
roll
inc
push
ret
cvtdq2ps
xchg
cmp
clc
sbb
push
rol
pop
sbb
xchg
fs
orb
jo
in
mov
push
daa
dec
push
jge
or
ficomps
and
incb
pop
sub
and
mov
jmp
add
or
or
mov
xor
cmp
adc
push
adc
cli
int
and
mov
push
inc
inc
inc
cmp
pop
cld
jb
inc
push
jo
dec
in
test
scas
pop
cmp
mov
xor
sub
sub
cmp
mov
mov
jg
ret
push
pop
pop
or
add
inc
arpl
pushf
mov
cmp
push
loop
sbb
lods
sar
pop
in
mov
dec
push
popf
cmp
push
imul
jmp
xor
push
icebp
adcb
inc
scas
orb
scas
xchg
rcrl
cwtl
mov
inc
adc
inc
xchg
cwtl
gs
js
pop
rol
pop
dec
or
insl
call
fdivrs
mov
mov
and
mov
call
adc
les
xchg
jne
or
ss
mov
adc
add
cmp
jne
lock
xlat
imul
jnp
sub
mov
call
fcomip
mov
push
inc
popf
shrb
rcrb
xchg
mov
and
xor
gs
mov
cmc
mov
xchg
leave
mov
adcb
sbb
add
mov
and
xorl
sbb
in
aaa
je
push
xchg
rol
test
mov
mov
adcb
inc
push
mov
mov
cmp
xchg
add
mov
lds
or
dec
out
fiadds
xchg
push
jecxz
mov
pop
inc
inc
jo
jne
dec
repz
bound
mov
sar
dec
shr
inc
rcl
xor
ret
cmp
rcrb
adc
or
idivb
outsb
std
in
mov
js
call
cmp
pop
les
xchg
xor
mov
repnz
shlb
rclb
mov
cmp
les
mov
mov
inc
cmp
dec
mov
inc
jae
out
int3
and
xchg
mov
repnz
mov
jns
dec
shlb
ss
xchg
mov
scas
sbb
push
or
loopne
adcb
cmpsb
jle
outsb
mov
inc
shlb
jmp
jnp
in
mov
rorb
adc
push
push
les
call
aam
or
inc
popf
cmp
test
jb
jne
pushf
clc
sub
xchg
imul
or
inc
lock
or
xchg
movsb
push
inc
call
or
xchg
shr
add
push
repnz
adc
lock
jge
sbb
mov
sub
js
and
popf
add
push
xor
lock
or
jg
push
push
clc
ret
pushf
incl
adc
jmp
cmp
ljmp
add
js
mov
orl
mov
sub
aam
gs
add
and
into
mov
or
push
xor
test
push
faddp
jmp
inc
mov
insb
add
nop
push
getsec
push
add
xchg
xchg
js
add
add
or
mov
cmp
in
xchg
sub
stos
sub
das
jp
inc
hlt
xor
mov
adc
pop
jo
cld
sub
test
cld
mov
pop
out
jg
inc
inc
movsb
add
repnz
or
js
or
inc
fsubl
jmp
sbb
lds
outsb
sub
xor
pusha
cld
hlt
adc
sub
flds
mov
neg
and
andb
mov
push
jmp
pusha
stos
xor
test
mov
ds
mov
or
les
pop
leave
fsubrl
aad
mov
popf
ficoml
mov
push
stos
push
xor
in
adc
cmc
stc
push
push
popa
fbstp
aam
adc
subb
sbb
imul
inc
or
add
and
icebp
call
xchg
cltd
adc
push
push
xor
jmp
jns
shl
pop
jecxz
rorb
imul
push
jl
add
inc
ret
cmp
mov
cld
bound
mov
cld
jge
dec
out
sub
stos
adc
insb
pop
aad
push
aaa
inc
int3
push
nop
xor
push
mov
ds
addb
pop
add
enter
aad
test
aam
data16
into
mov
in
je
mov
cmpsb
clc
sbb
push
je
add
jno
insb
enter
mov
and
inc
xchg
adc
mov
xor
cmp
pop
hlt
testb
outsb
lcall
xor
push
mov
inc
mov
inc
mov
pusha
cmp
call
mov
in
mov
out
sarb
addl
cmpl
aad
or
jmp
mov
xor
add
xor
fldt
mov
test
outsl
xchg
subb
fcompl
cld
lcall
and
dec
aam
scas
sbbl
xchg
jae
lods
scas
fsqrt
mov
push
dec
push
call
add
or
mov
xor
dec
fimuls
stos
add
test
clc
daa
inc
das
add
test
divb
xor
shrl
cmpb
sbb
testb
stos
mov
mov
adc
add
or
or
fisubrl
decl
xor
imul
icebp
lcall
push
sbb
add
inc
cmovp
mov
sbb
mov
jecxz
add
inc
or
pop
jge
pop
sbb
fisubs
fs
push
cmpsb
xor
or
push
or
and
adc
mov
aas
add
adc
or
sub
xor
nop
leave
pand
rorb
push
inc
xchg
lock
in
push
dec
or
push
lret
push
hlt
jb
loopne
clc
lcall
nop
jle
jnp
stos
test
cmp
inc
xchg
inc
mov
outsb
mov
mov
jmpw
dec
pop
pop
mov
sbb
lcall
dec
loop
push
or
outsl
aad
cmp
push
sarb
add
push
cli
lcall
adc
fldl
fs
inc
clc
mov
cld
mov
push
ss
sti
xchg
pop
pop
pop
push
inc
push
inc
movl
dec
clc
add
add
push
push
shrb
jo
les
push
ficomps
lea
adc
mov
sub
aas
js
jbe
movsl
fldl2t
pop
sbb
push
push
sub
pop
pushf
or
and
cltd
mov
mov
pop
mov
pushf
push
sbb
pushf
sub
int3
mov
and
mov
ljmp
out
inc
fs
mov
call
das
xor
rol
pop
push
inc
bound
lcall
test
push
xor
jg
sub
mov
mov
aam
pop
int
fwait
add
push
jns
rorb
mov
push
cmp
repz
push
mov
adcb
pop
jge
jge
clc
in
cld
movsl
sbbl
ss
inc
adc
inc
mov
and
jl
jle
mov
mov
or
add
jne
dec
cmp
movl
xchg
xor
cmc
inc
mov
insb
je
call
fs
movsb
sbb
xchg
fisubs
fstpt
bound
loopne
jmp
ss
ja
rol
jl
insb
pop
outsl
xor
jmp
add
aas
mov
ljmp
add
lea
mov
mov
sub
cmpsl
ja
xlat
addr16
lar
fadds
mov
outsl
pushf
mov
nop
add
sub
xlat
clc
int
or
jno
inc
and
mov
mov
push
pushf
in
call
fistps
call
push
push
test
loope
sahf
or
aam
adc
or
push
rorb
pop
and
dec
es
xor
aam
sub
test
stos
sub
shr
js
call
push
add
or
les
or
mov
xor
xchg
mov
call
fiaddl
mov
jl
or
insl
or
test
pop
dec
push
pop
fmuls
rolb
mov
mov
mov
pop
fsubl
push
pop
and
fwait
into
es
mov
adc
push
push
repnz
mov
xor
pop
dec
push
push
fsubr
jo
add
cwtl
ret
inc
rcll
ds
popa
loopne
sbb
mov
jg
mov
je
add
inc
or
mov
and
push
mov
sbb
loopne,pn
push
add
cmp
lock
jle
rolb
lock
movsb
imul
xchg
addr16
lret
mov
dec
jne
adc
dec
mov
inc
rol
xlat
loopne
sub
mov
xchg
and
aaa
add
dec
xor
scas
aad
sbb
mov
mov
jge
push
icebp
lock
aam
mov
popf
sar
adc
push
push
je
pop
les
sbb
int
test
outsb
adc
or
out
add
and
sub
sub
add
je
add
sarb
push
jbe
aas
setb
shl
jbe
inc
notrack
in
jo
int
jbe
push
mov
xor
inc
jmp
aas
push
ret
cli
push
test
inc
jb
inc
pop
push
or
nop
adc
inc
clc
mov
mov
xor
xchg
nop
jo
add
push
roll
jno
sub
pop
les
xor
lods
push
mov
dec
jb
pop
loope
mov
add
adc
xrelease
aas
les
xchg
lret
xor
or
cld
pushf
aam
and
insl
pop
push
fdivrs
or
shll
push
out
pushl
jecxz
sarb
xor
or
call
cmpl
pop
or
in
cmp
mov
adc
aas
aam
fsubrs
dec
test
sbb
pop
clc
leave
and
test
jp
out
pop
mov
gs
aaa
nop
add
and
xor
dec
cmc
fadds
inc
test
mov
imul
push
jno
loop
es
add
pop
mov
and
push
dec
pop
and
lcall
dec
dec
sbb
cmp
cmpsl
lock
insl
pop
or
or
pop
cmp
push
or
jle
mov
orl
mov
add
sbb
loope
ret
and
push
pusha
jnp
rcll
jnp
inc
add
lods
mov
ljmp
mov
mov
pop
dec
dec
divb
jae
cmpsb
push
stos
inc
push
aaa
and
jmp
test
mov
mov
push
pop
mov
incb
and
adc
xchg
adc
mov
cs
pop
and
pop
ja
inc
add
out
jg
mov
shrb
mov
aam
repnz
pop
or
mov
test
je
pop
dec
fcom
call
rcrb
push
movsl
maxps
jmp
inc
jmp
xor
add
leave
lock
mov
and
xor
mov
shl
pop
lsl
jmp
or
mov
shlb
cmp
xchg
clc
jle
lods
xor
mov
adc
aaa
test
aaa
mov
push
mov
jbe
ret
and
sub
outsb
pusha
jmp
imul
stc
loopne
rcll
testl
push
enter
call
jb
inc
push
cmp
cmp
or
rol
mov
sbb
fdiv
into
add
mov
fs
push
mov
dec
ss
sbb
lret
movl
or
push
cmpsb
jne
and
mov
mov
test
filds
mov
mov
or
inc
push
push
push
push
push
test
mov
stos
cld
outsb
push
cmp
push
cmpsb
subb
xchg
rol
cmp
add
add
mov
leave
pop
sub
and
xor
lret
fwait
push
or
or
ret
and
psubb
sbb
adc
sub
xor
jl
add
push
shrl
cmp
lds
dec
mov
repz
cmp
cld
test
int3
push
scas
inc
add
mov
jl
push
cld
push
or
inc
add
sub
jno
mov
inc
push
jmp
inc
adc
fsubr
xor
sbb
add
push
ljmp
jg
cwtl
add
add
loop
xchg
pop
mov
adc
push
xchg
xlat
das
or
mov
test
mov
or
push
sbb
sahf
mov
nop
xlat
in
js
sbb
fwait
or
ljmp
cmp
rclb
mov
stos
pop
xor
sbbb
lea
cmpsb
je
push
push
insb
mov
push
loop
mov
pop
cmpsb
sub
ja
push
stc
lods
push
out
mov
adc
push
loop
ret
test
cli
ret
insb
xor
push
pusha
sbb
inc
sbb
jle
pop
inc
out
movsb
call
pusha
mov
outsl
aaa
cli
add
mov
xchg
jo
hlt
jl
outsl
clc
in
mov
or
dec
jp
or
xchg
mov
inc
xchg
aam
sbb
xorb
call
repz
add
movb
adc
in
pusha
mov
cmp
dec
stos
cld
or
loopne
inc
scas
call
adc
sbb
xor
mulb
mov
and
or
fwait
movsb
adc
adc
push
fcmovu
fwait
or
add
jne
jp
cmc
add
or
lea
shr
sbb
aaa
push
loope
dec
or
cld
jp
in
outsb
int3
or
aad
aas
and
and
in
add
sub
sub
jmp
xchg
clc
adcb
inc
int3
inc
dec
cld
push
call
addb
in
add
inc
push
sbb
sbb
adc
inc
test
dec
repnz
mov
xchg
add
bnd
test
pop
std
sub
mov
add
fcompl
arpl
mov
inc
clc
push
or
lea
cmp
hlt
pop
nop
add
jle
aam
push
cmp
sub
and
add
adc
arpl
jbe
sbb
test
cli
mov
cltd
xchg
insl
xor
fsubrl
xor
mov
mov
add
add
pop
push
stc
sbb
bound
adc
pop
icebp
or
or
dec
imul
jne
sbb
jmp
rcrb
aam
test
pop
loop
push
sbb
int3
and
add
ljmp
cmpb
in
or
enter
cvttps2pi
adc
mov
inc
push
sub
mov
or
xchg
lods
add
mov
out
jge
xchg
sarb
fisubrl
pushf
xchg
sbb
inc
stos
ljmp
lcall
sbb
or
popw
rol
into
sbb
cld
addb
stos
insb
cmp
outsl
jbe
lods
in
loop
lea
movsb
shl
dec
and
rolb
mov
sub
stos
mov
sahf
loop
enter
faddl
sbb
sbb
test
xor
lret
sahf
out
xor
mov
mov
and
or
adc
leave
mov
das
fs
pop
sbb
out
or
inc
sti
cmp
adc
or
aas
and
add
addb
loop
add
pop
push
in
inc
mov
rcll
fimuls
fidivl
xor
cmp
xor
fbld
xor
andb
add
loope
rcrb
add
xor
mov
int3
stos
repz
pop
mov
in
bound
jmp
pop
mov
cs
mov
adc
jg
call
push
cld
rcrl
mov
mov
sub
mov
xchg
adc
clc
lods
adc
xchg
push
mov
test
mov
sub
jge
add
je
cmp
call
adc
aas
xor
pusha
loope
ret
cld
inc
push
jl
cmpsb
push
or
push
mov
mov
add
call
insb
rorl
test
xor
sbb
cmp
orb
outsb
adc
dec
and
nop
pushf
insb
mov
insl
adc
std
sub
cmpsb
int3
jne
sbb
xor
add
dec
mov
or
addr16
push
jg
and
notb
scas
mov
les
dec
and
fs
push
inc
or
mov
not
pushf
lock
jmp
mov
sbb
fmull
add
and
fdivrp
ret
mov
dec
inc
adc
or
inc
mov
jo
xor
lahf
sbb
stos
xchg
mov
cmp
push
push
frstor
mov
add
lock
sub
jge
pop
enter
and
in
add
sbb
push
push
ljmp
rcr
inc
je
dec
mov
sbb
adc
out
jbe
enter
push
sbb
fwait
ss
jp
push
dec
insb
cltd
fs
lods
cmp
mov
add
mov
sbb
leave
je
in
roll
add
test
xchg
push
mov
mov
adcl
hlt
dec
add
fcoml
cmpsb
loopne
push
dec
xor
xchg
or
adc
mov
scas
push
pusha
testb
adc
fdivl
decl
sbb
add
les
pop
rorb
icebp
scas
scas
movsl
lock
cmp
sub
push
addb
push
je
mov
add
ss
lods
or
jl
push
mov
arpl
cmp
cli
mull
sub
mov
lods
je
call
sti
aad
or
mov
fcoml
or
add
fwait
dec
cld
or
jnp
sbbb
sub
gs
test
xchg
pop
mov
cmp
xchg
dec
push
rorb
pop
jp
aam
xchg
cmp
cmpb
clc
xchg
mov
mov
push
hlt
inc
fs
push
bound
out
inc
lret
or
sahf
int3
mov
add
or
and
push
pop
dec
cli
mov
es
call
xor
lock
and
mov
popf
fs
jl
adc
je
mov
inc
dec
pop
jecxz
pop
std
mov
pop
inc
push
movsb
xor
sub
add
inc
mov
daa
pop
repnz
jp
push
push
push
push
push
xchg
sub
or
fldcw
adc
loop
inc
call
cld
ret
decl
pop
enter
jl
jmp
loope
mov
pop
pop
xor
paddsb
mov
cmp
jl
aaa
sub
imul
add
movsl
das
cli
fldl
fldcw
inc
mov
fwait
add
inc
nop
lock
jae
or
in
pop
dec
push
push
ja
orb
cs
test
cmc
nop
mov
je
scas
jnp
inc
aad
jb
adc
out
pop
push
ror
add
outsb
js
push
sbb
xor
test
scas
dec
inc
sub
and
mov
shlb
test
stc
gs
xor
push
mov
push
pop
xchg
sbb
popa
test
sahf
pop
sub
scas
int3
mov
and
outsb
mov
dec
push
das
fcoms
mov
jmp
inc
sbb
or
rclb
test
push
outsl
jg
pop
lea
cmp
inc
ljmp
adc
in
rcrb
inc
cld
push
dec
loopne
pop
jae
mov
jge
test
inc
dec
imul
outsb
shl
push
mov
jmp
xor
loopne
test
xlat
lock
xchg
fcompl
jge
decb
ja
mov
cld
dec
pop
ret
ss
mov
stc
les
test
xor
lock
test
cld
mov
mov
test
loopne
sub
ss
test
pop
cmpsb
inc
xchg
js
add
cmpsl
loopne
lea
test
lea
bound
aam
addb
scas
scas
bound
inc
sbb
daa
jo
pop
inc
loopne
mov
adc
pop
repz
into
mov
and
setnp
ret
std
cmp
push
dec
pop
shrb
mov
fistpl
dec
dec
fs
push
or
mov
xchg
xchg
mov
ljmp
int3
xor
sub
lock
pop
gs
andps
push
cmp
out
xchg
add
test
or
mov
push
test
push
inc
test
cld
add
sub
movsl
cli
lock
xchg
mov
shlb
add
or
in
sub
jnp
inc
test
or
xchg
xor
mov
pop
pop
push
push
ljmp
push
push
cmpb
outsb
push
mov
xor
ds
xchg
pop
out
lret
fmull
sub
cmc
or
call
fidivrs
cmp
cmp
in
gs
dec
jg
dec
push
push
test
mov
inc
sbb
lods
or
jmp
test
inc
mov
jl
mov
outsl
adc
test
in
mov
les
add
dec
xor
pushl
mov
cmp
loop
push
mov
fmuls
in
mov
xchg
cmp
cmpsl
data16
adc
ffreep
int
add
pushf
add
mov
dec
shrb
out
adc
pusha
cmp
icebp
sub
test
pop
test
ret
adc
xchg
cmc
jo
xor
test
jle
outsb
or
sub
pop
pand
inc
mov
dec
clc
mov
outsl
mov
repz
cltd
xchg
pushl
and
mov
jo
adc
xchg
adc
std
add
mov
pop
or
inc
or
push
aas
or
add
cli
pop
mov
test
test
dec
loopne
push
fcoms
add
aas
rol
dec
orb
mov
repnz
mov
outsl
bound
inc
and
cs
xchg
sub
pop
fimuls
out
jg
mov
and
mov
xchg
test
push
xor
mov
cmp
je
cmp
cmpl
push
lock
sub
lret
stos
xchg
xlat
push
lea
arpl
dec
or
shrb
test
incl
jne
rcll
sbb
lods
mov
sbb
pop
inc
and
mov
sbb
scas
pop
insl
js
mov
or
adc
js
in
shl
mov
ds
push
ret
cli
popa
push
lods
inc
outsb
xor
mov
sbbl
arpl
cltd
add
lahf
xchg
hlt
add
inc
mov
outsb
xor
push
xor
incl
cld
or
ss
push
mov
pop
ljmp
repnz
scas
xchg
or
xchg
pusha
push
add
pop
mov
or
sbb
push
jnp
mov
repnz
push
repnz
push
rorl
daa
push
sub
je
fildll
jge
and
int3
cld
pop
sarb
ret
add
and
popa
jne
dec
addb
aam
data16
aaa
xchg
ljmp
lea
mov
inc
pop
lcall
cmp
das
mov
xchg
jbe
jle
push
sbb
pop
das
mov
add
leave
sar
inc
testb
testl
pop
stos
call
inc
cmpsl
push
dec
arpl
cmp
and
mov
sbb
hlt
jb
lcall
int3
cltd
addr16
push
mov
xor
pop
roll
and
test
mov
pop
xor
and
mov
jo
insb
cld
je
mov
cmp
add
lock
sbb
dec
cmpsb
mov
in
lds
and
dec
ljmp
cmpsb
and
sarb
mov
or
sbb
push
add
cmp
pop
push
jmp
rorb
mov
push
xor
cmp
push
inc
in
loopne
test
mov
movsb
icebp
lcall
push
pop
enter
jmp
mov
xor
pop
call
dec
sub
outsb
cmp
es
int3
xor
xchg
dec
mov
sarb
lods
xchg
insb
jb
adc
mov
mov
adc
and
or
loopne
xchg
inc
inc
xor
dec
rcrb
ss
aam
adc
cmp
xor
add
jmp
nop
push
push
lcall
pop
push
in
iret
mov
add
dec
adc
jmp
inc
adc
clc
add
ret
hlt
add
push
sarb
mov
xor
inc
mov
pop
movb
fmull
adc
out
adc
mov
and
fsubl
rclb
fistl
cmc
jl
add
into
inc
or
int
and
pop
add
inc
jmp
test
jecxz
xor
adc
dec
data16
add
in
popa
loopne
cld
mov
mov
inc
xchg
xchg
xchg
push
mov
pop
lcall
push
mov
fistl
es
rdpmc
inc
mov
loopne
jg
inc
mov
popa
faddl
ds
fwait
clc
sbb
mov
sbb
mov
add
call
or
call
mov
jle
sbb
mov
jno
icebp
cmp
push
call
cmp
inc
push
shrb
pop
stos
inc
push
nop
sbb
jb
inc
loop
das
add
jmp
xor
sbb
pop
jl
rsm
mov
ja
rorb
dec
xchg
jg
sarb
adc
jmp
ds
gs
xchg
das
loopne
or
inc
das
test
mov
sarl
idiv
or
arpl
push
movsbl
sub
push
imul
xchg
jo
or
pop
mov
in
push
popf
rclb
les
call
sbb
add
imul
dec
sub
jb
mov
add
ljmp
mov
or
loopne
mov
xor
adc
pop
push
lds
xor
rorl
or
call
cmp
fsubrl
mov
or
mov
push
pusha
lds
shr
add
cmp
andb
xchg
mov
mov
popa
sarb
sti
adc
imul
test
mov
and
fildl
sub
shrb
mov
push
inc
bound
outsl
or
je
pop
sub
movsl
lea
adc
sbb
sbb
push
mov
and
sarl
rolb
inc
sbb
xchg
cmc
or
adc
dec
dec
adc
inc
loope
jne
mov
pop
push
dec
aam
jp
add
popa
dec
adc
loope
and
pop
pop
xor
in
js
push
movsl
testb
xor
fnstcw
ja
adc
or
rolb
jl
adc
add
mov
rolb
imulb
xchg
inc
std
shlb
adc
and
dec
pop
pop
fs
test
cs
jne
mov
js
or
in
jnp
rcrb
xor
cs
mov
cmp
adc
mov
jae
int3
stc
push
popa
adc
mov
lret
dec
mov
xchg
addb
mov
push
mov
or
in
add
push
inc
jb
pusha
or
adc
or
inc
adc
arpl
das
add
ret
movb
cmc
test
and
addb
and
les
scas
jne
push
inc
enter
jmp
rol
sbb
mov
inc
cmp
outsb
mov
loop
xor
adc
mov
xor
inc
push
adc
addl
shrb
pusha
jne
mov
dec
or
dec
cmpb
push
testb
sbb
adc
push
mov
and
xor
cmovae
pop
jg
mov
mov
xlat
std
sbb
push
lahf
and
loop
inc
jmp
xchg
mov
icebp
inc
push
add
jae
add
add
or
js
lahf
rclb
mov
outsb
add
mov
adc
push
push
outsl
enter
pop
xor
out
in
push
sbb
aad
in
and
cmp
xor
aaa
push
das
aam
ja
mov
mov
jp
or
push
imul
jo
pushf
fstl
push
rcll
test
xchg
orb
fstpl
sub
lcall
mov
sbb
push
push
xchg
leave
add
adc
ja
call
ret
jge,pn
jecxz
cwtl
mov
mov
hlt
testl
push
inc
test
rcll
sbb
pop
stos
jle
sub
popf
gs
and
dec
int
mov
xor
sbb
mov
shlb
sbb
or
sub
shl
test
xchg
and
and
shrb
cmp
test
sbbb
xor
push
mov
sub
mov
mov
lea
insl
dec
xor
lods
pcmpgtd
sub
mov
or
enter
adc
jae
enter
popl
push
xchg
jp
sub
pop
adc
out
inc
add
add
pusha
fdivrs
sub
push
jmp
mov
dec
lds
cmp
pop
add
and
mov
fstp
add
mov
ja
jae
jmp
fwait
clc
adc
jmp
add
or
add
sbb
xor
ret
nop
cmp
sub
div
jg
mov
mov
mov
and
sbb
mov
inc
lods
das
dec
mov
aam
cmp
cs
adc
xor
and
stos
jg
pop
fsubrs
mov
adc
or
mov
inc
add
mov
loop
std
shl
sbb
jg
jle
adc
movsb
cs
lahf
loop
mov
pop
mov
inc
in
out
add
add
rolb
jmp
outsb
insb
mov
and
test
movsb
pop
adc
mov
leave
lcall
xchg
insb
loopne
daa
mov
lods
leave
or
addl
dec
pop
mov
clc
mov
add
fimull
lret
xor
sub
sbb
or
pop
lcall
stos
push
and
andl
leave
fdivrs
jmp
mov
lock
es
sbb
lock
inc
jo
js
add
in
movsb
jp
movsb
sub
les
push
gs
add
mov
and
jge
xchg
movsl
jle
lret
rcr
push
add
jo
jns
ret
or
add
mov
adc
jo
psadbw
xchg
call
lock
add
push
jne
mov
clc
jmp
xchg
add
pop
into
loopne
pusha
orb
sub
lock
fimuls
inc
push
std
lcall
outsl
jp
stos
push
or
ss
fidivrs
mov
push
jecxz
pop
subb
adc
push
dec
outsb
push
test
or
pop
ss
adc
or
or
fcomp
fisubrl
or
inc
inc
pop
aas
jl
mov
mov
xorb
bsf
cmp
jmp
les
adc
and
xchg
sbbb
comiss
push
xor
decl
jne
rcrb
roll
jmp
pop
add
inc
jae
daa
stc
adc
insb
repnz
xor
xchg
sub
and
sbb
pop
add
xor
push
inc
cmp
xchg
or
aas
xor
jnp
orb
dec
mov
and
das
rcrb
stc
mov
mov
pop
jo
adc
pop
cmp
sbb
or
jne
lret
xor
xor
add
and
xchg
test
xchg
aam
xchg
inc
adc
stos
dec
sbb
lahf
inc
bound
testb
xor
js
test
adc
xor
push
inc
mov
xchg
sbb
sbb
adc
das
shlb
mov
aam
bound
ss
mov
mov
sbb
push
rolb
jo
aaa
adcl
jl
pop
jne
or
in
call
es
addr16
adc
outsl
or
call
adc
ret
ja
js
add
ret
je
movq
sub
mov
and
mov
mov
sbb
hlt
test
dec
dec
rorb
repz
xchg
push
inc
xor
je
decl
scas
mov
lock
push
mov
jb
call
cmp
push
mov
mov
inc
inc
sub
pop
xor
sub
ja
and
cmp
incb
pop
ja
fbstp
enter
shrl
mov
mov
push
rcl
mov
clc
cmp
jne
jo
test
and
xor
mov
add
or
jbe
addb
sbb
fs
or
bnd
mov
cmp
cld
and
arpl
test
cmp
out
cld
jge
icebp
cmp
roll
add
xchg
test
nop
movsb
hlt
cmp
push
xor
push
add
ficoms
cwtl
sbb
inc
sti
pop
inc
mov
imulb
int3
and
and
test
adc
fadd
cwtl
aam
mov
aaa
outsl
aaa
ret
int3
fbld
in
or
dec
ljmp
sub
and
and
lcall
ret
sarb
inc
test
mov
dec
xor
icebp
mov
dec
lock
lret
jno
cvtps2pd
sbb
or
sbb
cmpsb
adc
adc
pop
call
cs
std
popf
imul
push
push
add
inc
inc
rcl
ds
dec
arpl
add
fcoms
int3
and
or
sub
xor
push
jb
clc
addl
orl
mov
pop
pop
adc
ss
lea
dec
cmc
out
xchg
sarl
pop
call
in
adcl
fildl
and
jae
stos
ljmp
cmp
add
cli
inc
pushl
xchg
or
lret
xchg
mov
js
cmp
mov
xchg
shlb
fcoms
inc
outsb
adc
jb
or
rcrb
shrb
cvtdq2ps
pop
add
dec
lea
xor
xor
add
and
cmp
ret
mov
pushf
fdivrp
push
xlat
push
clc
jg
cmp
or
and
je
mov
xchg
mov
or
stc
push
in
lea
push
and
pop
int3
push
mov
inc
or
sub
xlat
adc
push
mov
add
push
insb
push
fimull
jne
xchg
shl
iret
je
mov
jmp
or
xchg
ljmp
outsb
jecxz
inc
xor
movsb
and
or
sub
pop
int3
rorb
pop
add
lock
ror
enter
and
xor
add
inc
lock
insb
pushf
xor
sbb
adc
mov
mov
aaa
insl
fs
outsb
in
add
xor
mov
jl
fisttpl
movsl
jne
mov
cmp
stc
inc
mov
adc
lret
js
cmp
lods
adcb
in
or
xor
mov
and
stc
inc
inc
cli
into
push
outsl
js
loope
movb
insl
clc
xchg
sub
and
adc
movsb
adc
sub
push
sbb
pop
cwtl
or
push
popf
subl
lcall
jecxz
cmpb
push
and
mov
pop
mov
out
out
mov
sahf
push
ljmp
mov
mov
sbb
push
call
dec
loop
sbbb
push
jo
mov
outsb
push
pop
and
call
xor
or
je
xor
testb
jne
xor
dec
or
sub
roll
xchg
mov
idivb
xor
dec
or
or
pop
orb
or
inc
call
pop
or
push
fcoms
addl
outsl
adc
and
adc
inc
rcr
clc
lea
and
lods
mov
popf
sub
xor
adc
rorb
repz
mov
mov
lret
or
mov
jo
push
enter
gs
lret
hlt
ficomps
jmp
cld
add
cmp
mov
mov
xchg
sbb
inc
and
or
pop
sbb
ljmp
pop
dec
loope
or
pop
adc
fimuls
jp
shr
xchg
xchg
scas
test
dec
jecxz
adc
adc
test
out
dec
or
adc
mov
rcl
dec
add
popf
adc
push
test
inc
or
xor
push
push
rclb
sbb
sbb
jae
push
xchg
lret
cmc
lods
movsb
loopne
pusha
xchg
xor
push
nop
dec
dec
mov
pop
sub
push
out
fimull
loope
dec
push
mov
jbe
push
arpl
add
loopne
aaa
or
call
rcl
push
dec
jg
ljmp
adc
add
gs
ja
jle
mov
sbb
loop
jle
or
shlb
add
or
adc
jg
jle
test
mov
push
mov
push
dec
outsl
cmp
adc
xchg
inc
loop
sbb
push
mov
movsb
fwait
movb
pop
clc
push
or
stos
pop
xchg
inc
test
pop
jg
pop
rolb
cmp
or
out
dec
enter
inc
inc
push
jle
mov
or
mov
je
pop
lods
mov
mov
fildll
push
push
arpl
insb
mov
push
test
mov
inc
jge
cli
jp
in
or
or
lret
and
rolb
mov
dec
jg
inc
push
call
inc
jmp
fcoml
ficoms
jle
data16
pop
mov
mov
cli
inc
test
sbb
cltd
mov
push
ljmp
popf
mov
sbb
xchg
pop
pop
mov
sub
clc
push
xchg
adc
dec
xchg
xor
add
pop
testb
sub
add
mov
dec
jl
aam
and
xlat
add
aam
lods
push
xchg
sbbl
cwtl
sarb
dec
xor
sub
add
cmpsb
push
insb
xorl
call
sub
adc
mov
jb
aad
js
es
lret
ljmp
lds
mov
popa
popa
and
mov
pushf
test
lock
mov
lock
pop
jle
inc
or
ss
fdivrp
in
push
push
xchg
or
mov
lahf
test
xorb
mov
mov
sub
and
xor
sbb
lods
outsb
sbb
aas
fdivrl
push
xor
addb
mov
mov
inc
aam
add
pop
jo
nop
xchg
mov
loop
in
sub
mov
dec
dec
je
adc
and
aam
sbb
jmp
test
push
jae
xor
pop
jl
sub
not
ret
xchg
out
imul
push
lock
out
jl
lock
cmovne
test
pushf
loope
call
adc
xchg
mov
fimull
test
mov
cmpsl
mov
add
les
or
or
and
or
mov
and
int3
std
daa
test
loopne
adcb
pop
and
mov
das
jbe
jns
and
je
les
dec
aam
jmp
test
orb
jno
add
mov
dec
shl
cmp
cli
xlat
test
in
lahf
push
mov
insb
add
pop
push
mov
pop
adc
push
loop
lret
lea
std
adc
mov
enter
cmp
inc
ljmp
lods
ror
xchg
bound
test
add
adc
cmp
cmp
jo
out
and
or
mov
xchg
addb
or
loopne
push
cs
ds
clc
jge
sti
lcall
mov
out
inc
xchg
push
ja
cmp
mov
jns
lock
and
lret
hlt
inc
subl
add
shll
lock
stos
xor
test
xchg
jl
fstps
mov
test
popa
pop
testb
lcall
push
mov
add
push
jl
cmp
add
and
push
lcall
test
in
aas
jecxz
mov
fs
adc
ret
lock
andl
or
add
mov
push
jo
movsl
xor
hlt
adcl
subb
test
inc
pop
fidivrs
ret
jp
inc
int3
sahf
add
adc
ret
and
and
test
incl
cld
fldl
repz
loope
nop
inc
mov
dec
sbb
mov
test
mov
insb
xchg
daa
mov
mov
scas
sub
cld
cltd
pop
arpl
mov
mulb
sbb
dec
mov
sub
xor
rclb
xlat
add
mov
in
push
dec
sbb
stos
sbb
clc
js
lods
mov
imul
rcr
mov
test
iret
sbbl
cltd
pop
pushf
call
mov
decl
call
and
stc
aam
mov
mov
ss
add
repnz
mov
mov
rcrb
sbbb
cld
test
aam
data16
aam
mov
ja
je
rcl
dec
cmp
adc
push
nop
es
mov
mov
cwtl
cs
fisttpll
out
pop
lea
cld
inc
jbe
sbbb
adc
lea
sub
or
loop
sub
cmp
aas
lods
mov
scas
int3
cmpsb
dec
gs
or
jle
pop
push
mov
inc
sbb
aam
fs
int3
fwait
mov
add
mov
mov
fcomps
lahf
jno
dec
mov
lret
jge
loope
push
fdivr
or
add
or
insb
ss
popf
cs
pop
andl
fs
imul
mov
data16
sahf
add
xchg
cmp
dec
inc
test
inc
xor
rolb
gs
call
call
lcall
mov
popf
mov
stos
ljmp
add
mov
and
in
or
fadds
mov
jle
inc
lahf
xchg
xor
mov
mov
mov
jl
cld
inc
jne
lock
and
and
mov
fsubrl
ud1
add
sub
imul
push
add
ret
adc
rorb
mov
orl
orl
inc
xor
push
aas
jne
in
mov
int3
push
inc
repz
xchg
mov
mov
in
cmp
out
adc
stos
and
scas
icebp
cmp
xlat
mov
xchg
js
scas
cmp
pop
inc
adc
pop
sahf
xor
adc
inc
std
mov
pop
sub
xor
pop
in
push
or
add
add
push
pop
std
lods
mov
sbb
mov
decb
fisubs
lea
add
clc
dec
test
and
inc
cmp
lock
bound
sub
aas
js
jecxz
jmp
lret
add
mov
mov
push
push
mov
push
xor
sub
push
in
in
repz
add
pop
ret
sbb
push
fdivs
lahf
mov
fcompl
sbbl
mov
das
and
xchg
test
mov
fldenv
mov
rolb
into
push
arpl
imul
add
hlt
clc
adcl
pushl
cmpsl
mov
ljmp
sbb
push
cmp
xchg
add
mov
add
xor
call
sbb
pop
sbb
in
mov
in
insl
jle
push
insb
scas
and
xorb
mov
mov
dec
pop
fimuls
or
psubd
mov
repz
data16
fmull
nop
dec
mov
fs
pop
inc
fisttpll
out
cs
cmp
mov
lcall
shr
add
imulb
sbbb
ljmp
xchg
in
cli
stc
push
inc
sub
or
sbb
cli
mov
aas
sbb
clc
push
pop
loopne
jo
xchg
cmp
je
popf
imul
push
aas
bound
push
bound
dec
sub
push
add
mov
scas
jo
xor
jg
cmc
dec
outsl
gs
jb
movsl
add
pop
dec
ret
or
adc
leave
fdivr
or
out
dec
push
pop
cmp
dec
mov
jp
push
jnp
int3
lods
dec
jb
fs
out
ret
mov
js
movsb
mov
lock
mov
add
xlat
pop
mov
pop
ljmp
incb
insl
clc
fwait
add
repnz
xor
aas
std
cmpsb
mov
cmp
push
mov
mov
push
shlb
mov
mov
insb
rol
aam
mov
mov
dec
xchg
and
adc
out
push
cmp
adc
std
shll
repnz
sub
shl
popa
je
cli
inc
jne
pusha
add
adc
mov
ss
pop
or
dec
jecxz
movhps
cli
xor
inc
shlb
xor
cld
mov
arpl
in
aad
push
pop
xchg
rol
jb
adc
or
movsb
data16
rolb
outsb
mov
mov
jecxz
cmp
in
push
and
ret
inc
in
adc
ret
sbb
mov
jecxz
jge
nop
cltd
xor
mov
das
mov
adc
xor
pusha
fldenv
andl
ljmp
sub
aas
pop
enter
mov
xchg
mov
jg
movsl
loopne
int3
imul
iret
cld
adc
dec
lea
mov
xchg
in
add
shrb
inc
sbb
push
inc
pusha
andb
add
lock
mov
jmp
inc
aas
lret
icebp
add
push
sub
jmp
in
repnz
xchg
jnp
or
dec
sarb
and
test
out
loop
xchg
push
ja
sub
push
add
lahf
push
stc
pop
add
push
xor
shr
push
xchg
enter
push
mov
push
mov
mov
add
inc
xchg
mov
sbb
or
adcl
mov
inc
adc
dec
jecxz
mov
push
xchg
jge
lea
stos
pushl
mov
mov
insb
or
mov
data16
adc
push
cmp
and
imul
push
ds
push
les
add
mov
jo
xchg
mov
arpl
in
push
cmp
movsb
aad
ss
ret
pop
add
stos
cli
insl
cmpsl
add
sbb
add
mov
iret
les
add
inc
mov
adc
lock
fdiv
mov
js
or
xchg
xor
rorb
stos
movb
js
lods
inc
push
mov
stos
gs
sbb
lcall
lods
jbe
adc
mov
inc
fstpt
and
lea
in
das
stos
cmp
dec
xchg
lcall
push
xor
xchg
push
std
imul
pushf
rorb
xor
subl
push
xchg
mov
int3
adc
add
test
shr
out
loopne
dec
pop
xchg
sub
and
orb
data16
aas
incl
test
dec
out
push
std
test
mov
dec
aaa
inc
inc
adc
push
test
adc
lock
fdivr
sub
sar
sbb
push
add
scas
fwait
inc
sbb
mov
pop
and
loopne
cmpsb
mov
inc
xor
lock
mov
cmpsb
test
lods
mov
inc
loopne
push
stos
mov
movb
xchg
adc
pop
add
adc
movsb
jne
xor
mov
stos
mov
mov
mov
aad
mov
pop
mov
insl
insb
mov
push
leave
cmp
xchg
push
mov
fiaddl
hlt
outsl
cld
jbe
mov
rorb
jmp
push
pop
fs
cwtl
cmp
fnsave
jns
jle
test
std
das
jmp
aas
lea
out
xchg
mov
xchg
inc
mov
cmpsl
lret
cmp
movsb
push
xor
lock
sbb
stc
xchg
push
into
inc
in
popa
jl
in
cmp
adc
adc
mov
add
mov
mov
lods
filds
pop
scas
xor
cmp
aad
lret
mov
pop
imul
shll
and
push
xchg
movsb
add
mov
dec
in
or
mov
jge
jge
sub
incb
jne
push
cld
mov
mov
daa
je
cmpb
stc
clc
je
push
cmovne
lock
js
sub
mov
aad
outsb
dec
call
je
cmpsb
lahf
nop
mov
addb
pusha
or
xor
mov
ds
lock
xchg
mov
test
pop
push
lods
loop
pop
scas
decb
mov
ljmp
inc
add
test
adc
leave
pop
cmp
mov
loopne
mov
addl
adc
rclb
ret
aas
jp
mov
or
mov
sbb
inc
cmp
cli
mov
xchg
ljmp
in
xor
and
add
popa
dec
sahf
lds
lret
adc
les
pop
loopne
int3
les
fdivrl
sti
add
jb
or
rcl
pop
inc
pop
stc
pop
aam
add
inc
ret
mov
roll
cld
xchg
repnz
das
dec
or
outsb
mov
mov
mov
dec
cmp
cmp
test
clc
mov
xchg
mov
jne
push
cmpl
sub
insb
outsb
or
clc
mov
ds
mov
push
xor
mov
xchg
loop
adc
mov
loope
andb
icebp
push
rolb
mov
repz
fstl
sahf
enter
inc
popa
pop
add
sbb
adc
cmp
sti
sub
test
push
pop
xor
sbb
testb
inc
adcb
push
push
idiv
rclb
mov
xchg
clc
sub
push
popa
sub
testb
mov
pop
sub
shll
dec
adc
or
push
pusha
xor
cmpsb
add
ljmp
push
xchg
pushf
dec
sbb
pop
mov
pop
and
std
sub
std
jg
mov
add
inc
stc
add
add
incb
lea
jo
mov
push
mov
xor
push
add
movsl
dec
or
sbb
mov
jle
mov
dec
cmpsb
mov
out
add
inc
fdivr
out
adc
cmpsb
vmread
mov
inc
sbb
adc
hlt
imul
pusha
jmp
fsubr
andb
pop
and
loopne
mov
in
jp
sub
loopne
in
xor
cmp
mov
mov
push
adc
sbb
icebp
and
add
aad
xorb
in
pop
rolb
mov
mov
pop
mov
push
dec
pop
adc
cmpsb
ret
int3
arpl
push
xchg
insb
or
dec
mov
sahf
and
hlt
jbe
lock
and
or
jg
stc
dec
ljmp
pop
add
sbb
xor
sbb
fsub
inc
push
cmp
pusha
sahf
adc
incb
test
jnp
adc
gs
adc
popf
xchg
test
mov
filds
mov
pop
dec
hlt
les
rclb
inc
pop
ret
xor
cmp
ljmp
jl
and
add
call
inc
inc
mov
stc
aam
daa
pop
mov
adc
mov
call
xor
jg
xor
push
aad
and
fs
add
cmp
or
or
aad
sbb
test
mov
adc
push
ret
dec
int3
mov
fs
xor
sub
das
sbb
sub
mov
mov
lcall
daa
mov
and
add
jg
xor
fs
or
es
cmp
test
in
add
cmp
mov
outsb
adc
mov
pop
add
jl
rdpmc
ficoml
int
cli
in
xor
cmp
and
or
ret
adc
les
or
aaa
inc
sub
gs
insl
jnp
dec
or
sbbb
sbb
hlt
pop
mov
inc
jecxz
mov
sbb
cld
xchg
add
or
ret
ret
les
lods
xor
or
mov
adc
es
mulb
mov
jg
mov
rcll
cmpsb
ss
adc
cmp
aaa
xor
ss
add
xchg
mov
push
ja
notb
jo
add
dec
mov
cltd
ret
imul
ficompl
pop
mov
aad
mov
lret
hlt
mov
je
or
cmp
inc
mov
inc
sti
popf
dec
loopne
nop
sbb
gs
into
les
xchg
mov
pop
lock
and
xor
rcrb
cld
cmc
xchg
jno
push
push
or
or
adc
pop
jmp
cmp
cli
cmc
scas
pop
shl
xlat
or
dec
inc
fs
push
adc
mov
outsl
adc
jo
fmuls
jne
sub
sti
inc
xchg
loop
in
rcrl
push
dec
xor
add
sbb
or
mov
mov
dec
fildl
call
mov
mov
cmp
pop
test
ja
xchg
jmp
sub
ds
pop
adc
sbb
sub
inc
add
aam
hlt
orb
pop
lea
jmp
loop
lods
leave
push
in
dec
call
push
push
jl
insb
in
sub
jns
loope
ljmp
and
and
push
insl
ja
push
sub
sbb
inc
or
xor
cmpb
inc
add
test
or
jno
sub
dec
call
inc
adc
std
jne
add
jle
jne
sbb
test
movsb
sbb
push
sub
or
xchg
hlt
jge
cmc
call
cmp
scas
jb
pop
push
add
add
sub
dec
ret
inc
mov
movsb
outsl
leave
cmp
lea
cli
sub
mov
test
fwait
outsl
fsubl
add
gs
or
push
pop
loopne
xchg
iret
mov
jle
in
shr
shlb
cwtl
pop
and
shlb
dec
pop
xchg
je
xor
das
jecxz
insl
stc
push
lret
inc
fwait
jbe
cmpsl
inc
push
js
or
inc
mov
mov
or
push
jo
push
insl
sti
aam
cld
rcrl
sub
xor
cmp
pop
mov
xchg
ss
das
inc
je
adc
fimull
outsb
inc
push
adc
xor
inc
add
xlat
decl
ret
mov
adc
push
loopne
test
shlb
add
adc
adc
inc
and
fidivl
xchg
mov
movsl
lds
ss
je
pop
mov
rcrl
push
sar
bound
dec
imul
enter
inc
pop
mov
xor
cmp
dec
inc
xor
outsb
adc
adc
inc
loop
dec
cmp
mov
mov
add
mov
les
imul
mov
clc
dec
sbb
fcoml
roll
insb
fisubl
mov
adc
inc
daa
notl
push
dec
and
lret
push
dec
add
push
std
push
adc
nop
lcall
lock
jp
add
enter
mov
cli
andb
cmc
inc
test
sub
cli
mov
dec
pop
xor
ja
xchg
cmp
dec
stc
jbe
xorl
push
dec
insb
outsl
xor
xchg
call
add
xchg
pusha
inc
sbb
xchg
pop
add
add
cld
cld
sbb
daa
aam
lods
aad
dec
xchg
gs
les
into
ja
adc
loopne
adc
je
insb
es
and
pusha
sbbb
jne
sub
mov
out
vmptrld
adc
imul
mov
cwtd
test
push
loopne
xchg
mov
subb
xchg
mov
xchg
lret
mov
mov
cli
adc
xor
stos
add
push
pop
icebp
pop
pusha
pop
cld
add
push
sub
sahf
adc
mov
mov
push
or
xor
add
push
xor
adc
sub
and
jl
mov
ljmp
popa
add
aas
or
cmp
pushl
movsl
add
add
mov
shlb
dec
dec
pop
jbe
cs
das
xchg
inc
pop
inc
nop
sub
sbb
ds
hlt
outsl
push
psrld
adc
pop
adc
mov
mov
lods
dec
jb
lock
and
rclb
push
or
sbb
mov
rcr
pushf
or
push
inc
mov
loopne
pusha
and
sub
mov
clc
add
push
movsb
push
and
test
lock
cs
mov
loope
es
or
daa
sub
mov
andb
insb
sbb
sbb
outsb
aaa
lret
fisubrl
nop
cmp
pop
loope
dec
in
push
in
je
popa
or
push
push
xor
push
add
sahf
rclb
and
dec
lahf
xchg
sbbl
fwait
add
test
cli
hlt
and
push
and
dec
or
mov
lea
fisttpl
mov
mov
lret
test
aam
push
mov
ret
int3
aas
inc
jmp
push
cltd
hlt
jb
fiaddl
lock
imul
adc
aam
bound
jle
test
cmp
repnz
sldt
push
mov
xor
lds
in
dec
pop
add
sub
cmp
sar
aaa
sarb
mov
lock
push
push
jmp
outsl
clc
inc
out
incl
jb
cmp
pop
enter
inc
jmp
loope
rorb
xchg
je
dec
sbb
push
fwait
in
aas
and
fbld
mov
inc
adc
cmp
gs
push
xorb
ret
jmp
mov
xlat
shll
neg
xlat
enter
inc
pop
inc
cmp
aam
add
inc
jo
mov
pop
pop
test
pop
daa
pop
add
lahf
fidivl
and
jne
add
ret
sarb
dec
into
sub
mov
pushf
into
mov
aas
sti
push
movups
push
add
or
sahf
imulb
and
addb
fimull
and
lods
cmp
add
inc
lret
pop
fcomps
jge
enter
dec
mov
adc
mov
and
imul
mov
sub
enter
lcall
add
adc
jmp
push
andl
jbe
and
jne
or
ss
pop
in
push
mov
stos
insb
insl
jae
sub
cld
test
pop
fsts
lea
and
sbb
ret
mov
es
sbb
push
scas
or
mov
xor
outsl
push
ljmp
jbe
lcall
mov
adc
jnp
movsb
dec
into
je
hlt
bound
stos
ds
pop
clc
cmp
push
mov
jbe
out
fs
add
and
lahf
movb
loopne
xchg
jne
push
das
or
out
ret
mov
mov
push
call
mov
lock
jno
dec
push
leave
inc
xchg
in
js
push
pop
insb
pop
rorb
lods
dec
mov
adc
mov
mov
loopne
push
mov
push
jecxz
adc
lret
xor
push
cmp
lret
rcrb
cld
loopne
add
xchg
test
fcomps
stos
xchg
push
add
imul
in
inc
cmpsb
mov
pushf
test
or
dec
inc
out
push
pop
cmp
dec
adc
mov
shlb
and
xchg
dec
incl
addb
cld
outsb
adc
mov
add
push
push
cmc
int
push
test
decl
rclb
repz
cs
lods
les
inc
cmp
cld
and
dec
aam
add
mov
add
fs
or
testb
adc
or
inc
ret
data16
rcll
cs
pop
sub
inc
dec
int3
pop
lods
mov
mov
call
push
mov
loop
inc
inc
pop
dec
or
xchg
jle
imul
clc
and
rclb
xor
mov
push
pop
clc
std
mov
outsb
lahf
stc
insb
jmp
inc
pop
pop
push
insb
mov
je
push
rorb
mov
pop
mov
adc
sbb
cwtl
dec
xor
dec
fwait
push
xchg
fwait
jmp
stos
lcall
rcll
lahf
pop
fidivs
mov
adc
jecxz
mov
pop
cmp
xchg
or
movsb
push
fs
shll
rorb
push
in
xchg
add
cli
dec
sub
insb
repnz
inc
dec
cmp
push
sti
sbb
inc
inc
mov
or
pop
mov
jmp
lock
mov
inc
cmp
popa
out
or
pop
cli
push
aas
mov
shll
sahf
pop
lock
test
mov
test
or
test
xchg
out
push
sbb
mov
cmp
and
insb
popf
mov
push
call
lret
or
lods
dec
sbb
mov
cmp
lock
mov
pusha
pop
add
stos
xchg
inc
loop
mov
shrl
lock
gs
sbb
adc
xchg
mov
sub
cmp
xchg
xor
mov
push
ss
or
and
bound
push
or
push
push
inc
shl
sub
mov
and
dec
jne
or
js
dec
loopne
xchg
andb
pusha
add
cli
subb
test
xor
cs
cmp
adc
xchg
dec
add
subb
mov
add
mov
jecxz
mov
sub
and
or
aam
jle
sar
inc
std
add
lock
mov
pushf
sbb
or
insb
in
loope
adc
push
into
or
data16
pop
jo
xchg
cmp
pushf
push
popf
inc
pop
sub
pop
sbb
add
imul
test
das
pop
pusha
push
mov
add
inc
jnp,pn
sub
nop
mulb
inc
daa
jo
mov
enter
mov
shl
sbb
insb
or
jb
add
cmc
push
and
add
and
and
or
ficoml
jmp
mov
or
pop
clc
jbe
test
push
sbb
icebp
lds
mov
push
and
xor
data16
inc
enter
out
div
mov
mov
inc
enter
xor
push
aam
repnz
shl
inc
shll
add
push
mov
inc
sbb
or
mov
cld
mov
or
aad
add
fsubs
fiadds
jle
fidivs
jne
cld
cltd
mov
mov
pop
mov
or
ss
js
add
add
xchg
icebp
loope
rorl
adc
aad
xchg
xor
jne
adc
or
push
ret
stos
int3
mov
push
add
test
or
pop
dec
in
stc
sub
pop
int
cvttps2pi
les
xor
xor
or
daa
movsl
jns
mov
cli
int
call
add
ja
aas
cmp
adc
subb
or
cli
add
fisubrs
sbb
xor
sub
cmpsb
es
push
jge
sub
lahf
sub
mov
sbb
sub
jge
push
dec
les
sahf
jge
sbb
inc
push
orl
fcompl
fucomip
test
decl
xchg
cmp
mov
notb
jmp
push
dec
mov
cmp
inc
in
mov
sub
and
mov
cmp
sbb
jmp
mov
jae
jmp
rol
or
add
lock
and
add
push
dec
dec
sub
js
xor
mov
xor
test
adc
cmp
cmp
clc
pop
xchg
xor
add
lock
jbe
movsb
cmp
rcrl
scas
mov
lock
sbb
lds
dec
enter
add
aad
sbb
adc
pop
outsl
dec
and
inc
adc
dec
mov
push
jbe
xor
push
daa
enter
test
sbb
dec
jl
aad
push
add
cmp
ljmp
lahf
clc
sub
aas
cmp
ja
or
pop
mov
mov
jg
pop
and
call
inc
shll
fistps
leave
fdiv
clc
adc
jp
xlat
int3
sub
pop
data16
xchg
push
or
test
loope
mov
std
or
lea
lcall
inc
or
inc
les
jmp
add
inc
and
loop
addl
cmp
add
in
cmp
ss
ret
lcall
jmp
and
and
fcomps
clc
inc
adc
pop
js
add
push
jg
cli
lea
inc
outsl
loopne
adc
call
inc
in
cmp
lods
mov
dec
mov
mov
inc
cmc
pop
lahf
mov
cmp
cmp
cwtl
adc
pop
sbb
pop
add
add
in
mov
bound
mov
movsb
mov
ljmp
push
fcmovbe
cwtl
jo
inc
nop
pop
mov
cmp
popf
gs
jnp
cmpsl
xor
mov
xor
pop
test
movsb
lahf
xor
mov
xchg
mov
out
stos
lea
push
outsb
lea
xchg
pusha
lea
push
lock
push
lahf
xor
clc
fdivr
loop
mov
scas
xorb
mov
jnp
ss
lcall
pop
push
inc
cmpsl
cmp
sub
icebp
mov
xor
daa
call
xor
cmp
or
ds
movsb
cmpsl
or
adc
mov
mov
sub
sub
sbb
jbe
xchg
pop
cmp
or
ret
dec
rclb
sub
insb
lahf
ret
orl
je
add
sbb
into
xor
sbb
clc
xchg
jbe
shlb
pop
sarl
lock
fstps
call
sarb
push
dec
lea
ljmp
fisttps
add
int3
adc
ss
sbb
out
lea
and
into
clc
sbb
ret
pop
jg
mov
xor
lcall
dec
push
rorl
pop
mov
mov
add
test
insb
adcl
leave
jmp
test
shrl
shrl
inc
mov
mov
push
ret
fdivl
hlt
xchg
cld
mov
push
pop
insl
push
ret
add
dec
push
int3
lock
test
imul
int
fildl
add
cmpsl
scas
js
sbb
in
push
enter
push
outsb
and
sarb
ljmp
popf
add
pop
pop
dec
pop
scas
jo
mov
js
stos
push
lock
mov
cmp
and
in
cmpsb
mov
pop
push
add
rclb
cmp
js
and
xor
jae
push
sub
aas
sbb
rorl
push
loop
cmp
add
in
cwtl
call
jl
cmc
adc
mov
sbb
mov
xor
add
or
sbb
adc
and
xchg
xchg
scas
and
cmp
cmp
or
mov
push
les
xor
ffreep
test
or
or
repnz
call
imul
sbbl
pop
mov
pop
mov
add
and
in
or
dec
mov
scas
jp
push
add
cmp
cmp
add
inc
xor
and
shlb
cmp
std
add
cld
pop
scas
lock
jae
sbb
dec
mov
mov
pushaw
push
jp
xor
mov
jle
inc
jg
sub
jo
xchg
add
dec
jge
adc
cmp
les
pop
mov
pushl
cwtl
jp
sarb
in
outsl
dec
mov
sbb
mov
in
inc
clc
push
add
xor
jne
inc
popa
cmp
jp
clc
lahf
cld
sub
or
xlat
scas
sub
mov
call
call
aaa
adc
adc
dec
push
cmp
xchg
jg
cld
cmpsb
orw
test
or
jg
fildl
test
jg
adc
cmp
jmp
hlt
jmp
aad
xchg
sub
inc
mov
adc
out
or
std
pop
dec
cmpsb
xor
repnz
and
mov
inc
cld
mov
add
mov
pop
push
inc
or
les
inc
rcrb
es
push
fistpl
les
push
je
cld
pop
add
push
xor
call
mov
mov
inc
jns
shlb
lods
add
arpl
pusha
and
mov
es
mov
jmp
sbb
dec
mov
pushl
outsl
push
cmc
mov
insb
mov
inc
jo
add
sbb
jne
or
mov
cmpsl
jl
sub
push
push
jbe
push
add
push
in
adc
aam
cmp
mov
mov
cs
and
dec
jl
mov
jbe
mov
icebp
movsb
call
inc
fs
enter
int3
or
das
mov
dec
in
cmp
inc
push
aaa
aaa
cmp
sbb
stc
mov
inc
or
xor
rolb
add
lock
aam
add
sub
rcr
pop
sub
out
dec
push
mov
nop
add
pushl
pusha
orl
stos
or
shlb
lret
stos
mov
lods
cmp
dec
shlb
pusha
ret
je
or
fwait
sbb
in
test
push
adc
sbb
inc
push
incl
outsb
adc
mov
jb
adc
or
int3
push
mov
scas
sti
push
xor
inc
addb
mov
mov
xchg
lret
icebp
jns
aaa
mov
clc
xchg
and
pusha
jae
rolb
popf
or
inc
das
mov
sahf
inc
mov
outsb
push
mov
mov
das
jb
rorl
cs
inc
repz
popa
fucomip
dec
fwait
add
mov
lea
movb
push
and
ret
cmp
mov
into
add
jle
and
icebp
inc
mov
xchg
mov
dec
inc
ljmp
mov
xor
out
pushf
mov
sahf
test
mov
and
jb
jmp
out
hlt
sbb
jle
jne
xchg
hlt
lock
push
inc
loopne
xlat
hlt
xchg
outsb
in
and
jg
lods
pushf
loopne
add
dec
shll
addr16
add
mov
stos
xor
call
xor
mov
test
push
outsl
push
mov
inc
push
add
out
add
stos
or
loop
mov
roll
push
inc
test
sbb
cmpsb
push
push
add
adc
xchg
mov
cmpsb
adc
dec
cmp
mov
jle,pt
mov
jbe
aam
pminub
hlt
jne
adc
mov
mov
sub
out
mov
xchg
mov
add
push
jmp
incl
sbb
and
cmc
or
pop
jo
or
popa
roll
imul
stos
fisubs
mov
out
inc
push
movsb
es
cmc
or
dec
ret
bound
in
and
enter
mov
jo
jl
pusha
test
or
enter
mov
data16
jecxz
inc
fstpt
jl
mov
add
pop
mov
add
add
int3
xor
scas
cmp
lock
mov
xor
loope
test
or
and
push
out
data16
pop
or
ljmp
adc
dec
jp
and
loop
cmp
mov
sub
outsb
mov
adc
shr
add
std
adc
adc
call
out
adc
cs
jp
test
shrl
mov
cmp
dec
sbb
pop
pop
jmp
or
je
cwtl
gs
int3
test
add
inc
dec
push
imul
push
movsb
inc
jae
enter
pop
pop
dec
push
ja
adc
push
ss
inc
dec
jb
jmp
fcmovnbe
les
push
jae
adc
inc
or
add
ret
or
addl
ret
mov
xchg
xlat
aam
dec
dec
mov
daa
aaa
push
xlat
adc
inc
call
jg
ret
test
mov
sar
fcmovb
les
push
fiaddl
pop
inc
fadd
xchg
jle
movb
pop
push
cld
test
enter
adc
jl
ss
pop
out
pop
loope
and
js
enter
push
clc
or
push
inc
inc
ljmp
xor
sub
lea
jmp
rorb
push
mov
adc
adc
rolb
enter
inc
cmp
jp
rorb
ljmp
jp
jo
outsb
sub
sub
or
aas
mov
cmpsb
xchg
or
out
adc
loopne
cli
adc
fmull
and
or
push
repz
inc
ss
punpckhwd
in
add
cmpb
xlat
adc
inc
add
jp
mov
gs
adc
pop
repnz
incl
push
ljmp
inc
loop
push
jg
inc
xchg
fwait
push
fs
sub
je
ja
out
mov
sbb
popa
jne
and
and
test
outsb
sbb
inc
xor
mov
cmp
xchg
add
mov
cmp
mov
and
add
ss
hlt
add
inc
pop
ret
pop
pop
push
nop
inc
addl
push
cmpsb
lret
call
lock
cmovae
add
dec
std
push
mov
gs
sahf
sub
lock
subb
adc
adc
xchg
push
fs
jo
das
mov
int3
push
les
jo
mov
lea
push
jge
outsb
or
adc
mov
lds
out
loopne
cli
fstpt
loope
mov
adc
sti
cmpsb
pop
and
adc
call
and
push
jnp
aam
and
lock
jo
adc
push
or
mov
push
sub
dec
xchg
cwtl
cmpsb
in
mov
sbb
mov
or
push
fadd
mov
push
adc
add
or
adc
aam
sbb
loopne
and
inc
cmp
mov
sbb
cs
aas
ds
icebp
cmp
inc
push
lret
shl
dec
aam
sbb
cmpsb
incl
mov
cmp
jno
ljmp
test
stos
loop
mov
aam
into
ss
cld
roll
mov
pop
or
adc
loop
rcrb
or
mov
jg,pt
mov
test
push
xchg
xor
movsb
pop
jmp
jo
cmp
jmp
pop
xor
sbb
xchg
pop
lea
inc
and
test
adc
loope
pop
xchg
lcall
mov
adc
sarl
mov
out
and
incb
insb
pop
sub
mov
push
pop
jg
inc
push
cmp
test
jbe
jb
mov
and
cmp
inc
icebp
lock
pop
fiadds
pushf
test
xchg
and
pusha
jbe
xchg
and
jbe
sbb
or
in
lcall
inc
or
or
movsl
stc
imul
push
jne
mov
xchg
jle
mov
ret
aaa
loopne
inc
sbb
call
inc
or
inc
push
mov
adc
outsb
int3
sbb
lea
xor
imul
popf
inc
push
hlt
in
lcall
jne
in
add
hlt
inc
sub
mov
add
icebp
aaa
cmpb
xchg
pop
and
mov
jne
inc
lea
push
adc
add
xor
push
loopne
mov
pop
mov
cmp
xchg
add
in
gs
sub
lcall
sub
lock
dec
mov
ret
inc
jo
jne
mov
and
movsb
scas
add
decl
push
imul
mov
or
cmpsb
inc
jb
pop
cwtl
movsb
xor
imul
push
inc
mov
in
cltd
or
outsl
dec
popa
pop
jmp
mov
or
ror
push
gs
loopne
movsl
sbb
sub
dec
add
mov
and
cmp
ret
jo
cs
mov
jl
lods
in
fcoms
mov
push
add
push
xlat
js
adc
inc
nop
push
int3
push
inc
pop
aaa
sbb
adc
mov
data16
scas
add
jae
rcrb
movsb
xchg
cwtl
les
es
add
daa
adc
xchg
inc
scas
int3
lret
in
incl
push
stos
mov
fs
push
ja
jp
lods
inc
call
cli
sub
es
cld
test
sbb
callw
ret
cwtl
or
hlt
adc
inc
jbe
xor
out
lea
aaa
fucomi
mov
repnz
cmp
les
les
jecxz
mov
call
lret
cmp
aaa
adc
rorb
inc
push
jecxz
mov
adc
dec
inc
bound
mov
imul
push
add
cmpl
mov
xchg
add
add
ret
jle
loope
out
adc
adc
loopne
mov
fwait
push
add
cld
adc
inc
jl
adc
fcmovb
add
mov
insl
data16
and
gs
add
pop
jp
xor
adc
fimull
je
es
push
andb
movsb
and
push
arpl
jp
mov
or
insl
mov
inc
add
push
xor
shlb
shll
sbb
imul
sbbl
cld
clc
jbe
jmp
push
and
push
movsb
sub
mov
in
pop
sbb
inc
les
out
ja
and
loopne
sbb
incl
lahf
mov
fisubs
call
test
decb
jmp
fstpt
mov
add
or
mov
mov
aam
and
orl
add
rorb
mov
out
or
add
mov
mov
adc
pusha
scas
stos
cmpsb
leave
inc
lock
xor
jb,pn
rorb
stos
jne
adc
insb
sbb
push
lock
inc
loope
mov
sub
push
pop
jae
xchg
cmpsl
dec
sbb
dec
or
outsb
xor
lea
outsb
movsb
es
mov
mov
jo
mov
aas
stos
cld
push
sbb
ja
push
push
cld
mov
outsl
jne
scas
push
sbb
mov
inc
or
call
aam
mov
pusha
xor
sahf
call
and
popa
xchg
or
hlt
cmp
cld
loope
push
cmp
movsl
inc
adc
sbb
icebp
cwtl
outsb
cmp
subb
cli
out
mov
es
dec
adc
lock
inc
push
andl
je
mov
pop
add
enter
adc
aas
xor
in
icebp
adc
les
pushf
pop
push
aaa
ss
dec
sar
cmp
lret
aam
sti
add
mov
sahf
insb
xor
pop
xor
adc
xchg
sub
jmp
jmp
add
aad
mov
loopne
pop
orb
xor
lahf
pop
xor
add
cmc
add
sarw
push
inc
mov
flds
jbe
add
sbb
sbb
dec
sahf
inc
je
sahf
sub
push
or
sti
jnp
add
fldenv
inc
ljmp
addb
pop
cli
sbb
cmpl
in
cmc
pop
and
aam
xor
sub
cmpsb
mov
repnz
rclb
or
nop
adc
sbb
add
enter
mov
roll
and
xchg
incb
mov
addr16
test
pop
ds
sub
lock
out
xor
mov
shlb
mov
lods
add
add
adc
mov
js
cmpsl
ret
pushf
pop
add
jl
mov
js
add
lea
or
mov
test
pop
inc
ljmp
nop
xor
or
or
jb
sub
insl
and
inc
arpl
outsb
pop
push
loop
and
mov
test
movsb
push
mov
cmp
mov
pop
mov
popl
nop
mov
aam
sbbl
inc
mov
mov
out
les
sbb
test
or
mov
mov
repnz
or
std
mov
dec
nop
ss
cmpsb
push
loop
popf
dec
mov
cld
outsb
pop
insb
call
mov
adc
add
xor
mov
push
loopne
push
bound
jne
add
push
pop
jmp
insb
push
jle
cmp
shl
sub
fs
mov
inc
negb
pcmpeqb
mov
lock
jmp
and
les
scas
hlt
mov
mov
push
lret
and
adc
fildl
gs
inc
pop
divb
ret
roll
js
jmp
dec
mov
es
sbbl
lret
adc
mov
data16
add
sbb
in
rsm
mov
xchg
test
adc
int3
inc
mov
push
je
mov
sbb
push
in
cld
aaa
xchg
sub
cld
pusha
aam
pop
imull
inc
popf
jo
dec
mov
xor
lea
mov
pop
push
or
add
test
pop
ljmp
dec
jge
insl
mov
fs
xlat
mov
rorb
dec
jmp
inc
sbb
cmp
adc
and
sbb
and
cmpl
push
xchg
imul
dec
jmp
mov
add
xorl
es
punpckhwd
push
or
cmp
hlt
push
test
shrl
or
outsb
push
push
in
pop
sbb
mov
add
pop
jo
je
dec
pop
lret
sbb
push
sti
inc
loopne
mov
rorl
std
and
and
sub
cmp
loope
lret
outsl
fmuls
push
movb
and
or
insl
loopne
adc
lock
push
cmp
sub
pushl
jg
mov
mov
fwait
jmp
and
xorps
push
aad
mov
or
pusha
xor
rorb
add
or
adc
mov
sub
and
cmp
dec
loopne
jmp
or
scas
sub
jae
fisttps
adc
push
jmp
call
xor
incl
adc
jb
mov
cld
rcll
adc
cmp
jl
add
xchg
test
inc
js
or
inc
jp
mov
cld
or
scas
and
adc
cli
dec
dec
ljmp
pop
push
and
jecxz
les
je
arpl
lcall
out
push
xor
addb
fadds
inc
sbb
ds
movsl
insb
in
repnz
and
sub
shrb
leave
push
lods
ja
out
xlat
dec
jne
xchg
add
mov
divl
push
hlt
rol
fwait
aas
push
aam
sbb
outsb
pop
dec
dec
pop
dec
push
inc
jl
jo
or
pop
fs
push
in
mov
jae
mov
jle
fsub
dec
repnz
inc
icebp
call
pushf
or
les
movsl
push
les
mov
pop
adc
cmp
out
mov
push
std
sub
cmp
mov
and
or
inc
stos
and
jecxz
add
loopne
xor
mov
push
inc
push
add
add
ds
adc
mov
dec
sub
aaa
mov
dec
dec
inc
mov
mov
fnstcw
push
outsl
outsl
insb
pop
xor
add
test
dec
rorb
scas
pushl
mov
cld
fsubl
jmp
xchg
pop
rcrb
imul
shrl
lea
ret
sbb
mov
add
or
jb
sub
jnp
call
jne
imul
rep
push
jg
insl
xchg
add
ret
shlb
test
popa
arpl
and
stc
loopne
imul
push
inc
in
shr
jo
cld
imulb
cmp
add
xchg
sahf
repz
clc
sbb
mov
enter
loopne
add
test
outsb
xchg
sub
fcompp
jp
or
mov
and
clc
xor
test
push
inc
mov
shrb
adc
mov
mov
sbb
adc
adc
cmp
push
bound
mul
mov
popa
or
pop
sub
mov
xchg
ret
adcb
lods
jo
push
fwait
mov
test
sbb
bnd
jle
and
adc
or
add
test
insb
ljmp
jne
fstl
pop
aas
push
or
jae
push
shll
xorl
jne
mov
lds
gs
pushf
imul
inc
xor
add
lds
rcr
in
pop
es
push
cltd
push
add
add
shrl
lock
fsubl
lock
dec
cltd
mov
xchg
mov
enter
xor
jecxz
xor
mov
cmc
dec
or
outsb
cmp
push
push
fs
loope
mov
jl
test
aaa
mov
sbb
int3
push
push
jp
inc
xchg
out
jne
inc
xchg
or
dec
int3
rclb
jp
jbe
loope
pop
andb
loopne
mov
test
pop
ret
pop
loope
dec
or
das
jl
shr
fmulp
add
push
or
sbb
ds
out
mov
movsl
es
int3
cmp
mov
mov
push
add
nop
movl
inc
or
add
pushf
roll
cmp
push
in
jne
popa
cmp
pop
cmpsb
enter
outsl
mov
add
cmp
and
lea
xchg
xor
add
mov
dec
std
jg
xchg
test
and
add
movsl
add
or
add
fbstp
or
adcb
testb
paddd
jp
adc
dec
fimuls
bound
fs
aas
mov
ss
mov
jb
jge
out
cs
mov
mov
ss
pusha
fidivs
push
ja
andl
jo
jg
jne
adc
push
pop
adcl
mov
dec
int3
adc
dec
add
lret
sub
ja
sarb
adcb
sbb
dec
imul
sarb
rcll
push
test
cs
je
or
pushf
movsl
pop
loope
inc
loopne
inc
adc
pop
int
pop
hlt
movsb
stos
loop
je
push
mov
xor
mov
and
adc
add
ds
mov
fcoml
push
out
loope
push
arpl
push
pop
loope
cmpsb
test
jp
and
mov
adc
mulb
mov
movsl
push
xor
sbb
mov
rcr
mov
push
or
out
data16
ret
scas
push
imul
arpl
imul
or
std
shlb
fildl
sub
adc
inc
test
push
jp
or
insb
test
push
mov
mov
push
jl
push
call
push
mov
mov
xchg
cld
pusha
mov
push
or
and
mov
cmpb
pop
xlat
inc
push
test
sub
or
and
pop
insb
inc
in
scas
std
adc
jb
sbb
call
scas
jb
adc
sub
add
in
push
xchg
das
push
mov
mov
mov
jne
xor
pop
aam
enter
push
xor
out
pop
mov
sbb
mov
mov
adc
adc
adc
test
dec
mov
int3
mov
or
shr
in
ret
sbb
stos
sti
test
jge
adc
loopne
test
cwtl
cmp
and
call
lcall
clc
sub
iret
pop
adc
dec
add
test
cmc
out
pusha
adc
mov
mov
adc
ret
jg
jmp
shlb
test
push
std
adc
sub
pop
loopne
std
xchg
test
pop
sbb
push
xchg
push
add
adc
pop
xor
movd
out
xchg
sub
mov
sbb
es
mov
mov
aaa
pop
out
push
faddl
add
sub
scas
frstor
sbb
decl
callw
adc
cmp
mov
mov
push
pop
fsubs
jle
je
hlt
xor
add
movsb
icebp
add
jo
add
insl
mov
loope
mov
pop
and
insb
cli
mov
adc
fwait
loop
push
inc
aad
icebp
sti
pusha
push
dec
jb
test
push
pushf
int3
inc
or
loopne
jbe
repz
enter
pop
dec
jge
std
leave
xor
mov
stos
mov
inc
fmulp
sub
test
popa
test
mov
push
shll
sti
lods
or
and
adc
fmuls
ret
jp
lock
push
insb
jmp
test
push
or
popf
inc
mov
jge
push
inc
xchg
jno
es
shlb
inc
xor
jg
mov
mov
sbb
or
or
jmp
jne
add
push
push
pop
and
push
dec
pop
sub
xchg
ss
call
xchg
orl
shl
mov
lea
adc
jl
stos
ret
mov
adc
fmull
push
imul
test
or
jb
je
adc
pop
nop
shlb
dec
mov
in
aam
xor
add
sub
sub
cmp
rol
enter
call
imul
sub
dec
addl
in
fisttps
push
outsb
add
mov
sub
or
scas
xor
mov
adc
jb
add
popa
enter
mov
xchg
pusha
sub
pop
or
add
adc
clc
daa
cmp
rcrl
ret
cltd
js
inc
iret
movl
outsl
out
add
jb
ja
insb
cmp
dec
jne
jmp
or
js
lret
add
push
cmp
push
pop
sbb
test
popf
lcall
xchg
cmc
in
xchg
lock
aam
mov
inc
inc
pop
xchg
and
jb
das
mov
mov
sub
xor
scas
push
and
sbb
push
dec
mov
stos
std
adc
xor
icebp
sbb
aad
aad
data16
jne
in
dec
in
and
faddp
cmp
lcall
gs
cli
imul
fcoms
and
mov
inc
sub
push
sbb
adc
add
add
add
rolb
xchg
fistpll
jne
jno
mov
xchg
push
xchg
mov
inc
ja
int3
cs
push
out
add
bound
shl
hlt
and
xor
movsb
inc
mov
lea
arpl
jge
cs
in
rorb
mov
sti
test
mov
inc
dec
mov
mov
and
push
gs
ljmp
bound
lea
jmp
ss
scas
fiadds
sub
xchg
inc
loopne
push
out
adc
outsb
adc
sub
sub
sarb
pop
adc
ret
inc
or
stos
aad
fs
cmp
mov
xor
fcomps
jle
mov
jp
fadd
movd
xor
movsl
cmp
clc
jg
test
add
and
out
fists
cmp
mulb
adc
mov
and
shll
shlb
add
js
clc
in
adc
fwait
mov
or
adc
js
xchg
icebp
mov
std
gs
adc
xor
test
lods
ret
jb
push
sti
cmp
mov
idivb
scas
push
mov
adc
mov
sub
add
adcl
cmp
dec
fstpt
or
jbe
rcrb
pop
add
add
mov
lret
cmpsb
add
loope
xchg
sar
cmp
rcr
jge
push
mov
xor
aam
outsb
insl
cltd
mov
sbb
rorb
pop
shlb
sub
outsb
mov
jle
jg
adc
push
idivb
inc
and
add
jo
add
ret
cmc
fstps
daa
xchg
or
cs
add
hlt
adc
xor
xor
fstl
sub
std
call
aaa
gs
push
pop
pop
mov
pop
insl
dec
lock
adc
dec
xchg
sbb
hlt
out
xchg
rcrl
in
ljmp
xor
js
bound
icebp
push
pop
mov
jle
push
jbe
or
loop
rolb
test
shl
scas
cmp
xor
pusha
out
mov
nop
add
inc
clc
dec
ret
adc
jl
push
es
adc
or
in
mov
xor
inc
insl
inc
inc
xchg
sahf
pop
ret
es
fadds
push
xchg
cmp
xor
lock
inc
mov
aaa
sbb
mov
mov
call
scas
stos
sbb
xor
ljmp
push
lock
cli
add
loopne
inc
xor
movsb
int3
cmp
fdiv
dec
or
ficompl
adc
add
lods
call
push
mov
out
int3
rol
aam
repnz
jne
xlat
pop
adc
call
add
push
es
cmpsb
clc
repnz
pushf
add
test
out
cmp
outsl
mov
pop
inc
xchg
and
incl
push
inc
xor
clc
clc
mov
sahf
scas
jbe
hlt
test
adc
mov
adc
lcall
jo
sar
fadds
adc
rorb
movsl
mov
mov
add
pop
add
adc
xchg
imul
xor
mov
clc
inc
stos
dec
cmp
rorb
orl
cwtl
clc
cli
ljmp
xor
test
cmpsb
mov
in
inc
bound
into
dec
mov
data16
les
scas
aaa
sbb
xchg
enter
rol
test
adcb
pop
mov
inc
dec
dec
mov
test
and
clc
dec
push
xor
loopne
ret
push
hlt
cmp
xor
shlb
test
adc
scas
lret
pushf
stos
push
ja
cltd
inc
icebp
daa
mov
push
movsb
bound
cmp
dec
lock
in
jne
gs
jl
pop
clc
inc
orb
xchg
pop
sbb
lods
push
inc
cmp
addb
add
andb
sbb
cld
mov
test
or
xor
int3
loopne
scas
or
test
add
jl
popl
or
push
movsl
test
cwtd
or
add
xchg
dec
inc
add
lret
mov
outsl
aaa
sbb
in
cmpsb
lock
es
sub
je
rorb
push
int3
pop
call
pusha
sbb
cmp
aad
pop
or
lmsw
add
in
add
mov
dec
ret
pop
mov
cld
rorl
call
pop
and
out
pop
mov
push
jbe
lret
push
shrl
mov
nop
pop
sbbl
cmpsb
push
inc
xchg
je
test
cld
andb
xchg
mov
insb
or
xor
pop
test
dec
inc
adc
shll
rcrb
push
push
test
mov
mov
insl
mov
jmp
or
dec
mov
lret
sub
pusha
adc
stos
stos
mov
inc
or
lcall
sti
sbb
and
add
inc
push
sub
rclb
sbb
push
adc
lock
les
enter
sbb
xor
push
mov
outsl
out
je
test
adc
inc
inc
addr16
or
cmpsl
lret
or
mov
mov
pop
and
test
faddp
stc
cmp
rorb
insb
add
pop
in
dec
pop
adc
js
scas
jo
in
cmp
je
fs
sub
jecxz
cmc
inc
jb
add
sbb
test
push
jg
rcrb
add
fsubrs
mov
mov
cmpsb
bound
nop
daa
loop
or
notb
test
outsb
arpl
add
sub
gs
push
jle
jp
add
xor
faddl
mov
cmpsb
mov
mov
or
shlb
add
test
pop
sbbl
dec
ja
sub
sub
xchg
inc
push
push
jmp
inc
test
push
mov
push
sub
aam
and
rorl
mov
aam
mov
or
and
stc
mov
pop
pop
sarb
dec
pop
icebp
adc
mov
sysenter
xchg
pcmpeqb
mov
cmc
lcall
push
add
jb
loop
push
jmp
cld
inc
push
xchg
push
cmp
mov
push
loopne
rcll
loopne
xorb
pop
sti
icebp
add
mov
js
and
movsl
fdivp
rclb
cmp
inc
mov
clc
inc
imul
shlb
jp
fstpt
int3
loopne
rcrl
jp
test
mov
jno
mov
inc
or
stos
mov
addr16
aaa
out
test
sbb
sbb
movsl
pop
adc
push
jo
xchg
fadds
push
dec
bound
inc
add
mov
adc
cmp
mov
inc
sti
mov
sub
icebp
add
cmp
pop
or
mov
mov
lea
add
add
jmp
rcrb
add
cli
into
push
xor
xor
test
add
sbb
push
sub
mov
push
push
call
add
cltd
push
xchg
int
nop
cli
or
xor
mov
cmp
fimuls
xor
lock
inc
push
sbb
sub
dec
pop
pop
test
inc
add
adc
daa
in
sub
jmp
aam
mov
punpckhwd
call
outsl
or
nop
stc
and
cs
push
push
orl
jo
mov
ljmp
push
pusha
loopne
les
or
outsl
sbb
add
loope
hlt
xor
add
mov
mov
clc
lock
push
les
adc
sub
cmp
mov
ljmp
add
loop
test
ficomps
rclb
lods
sti
dec
or
stos
add
add
pcmpeqd
js
adc
inc
subl
jp
test
pusha
dec
xorl
xchg
pop
in
addl
and
xchg
push
push
andb
adc
data16
pusha
xchg
out
jg
cmp
mov
inc
or
inc
xchg
and
and
and
push
icebp
jno
and
int3
out
test
inc
push
xchg
je
mov
test
fdivs
mov
jle
pop
movsb
insb
imul
cmpsb
pop
test
les
cmp
shlb
xor
sbb
cs
aam
pop
inc
in
dec
dec
mov
inc
and
das
ret
mulb
ret
jnp
out
fsts
dec
dec
arpl
aam
jp
pop
rolb
jae
sbb
pop
pop
rolb
dec
add
and
cld
jmp
dec
iret
push
loopne
sub
inc
scas
jecxz
xchg
mov
popa
adc
fwait
and
jge
inc
pop
mov
push
push
dec
mov
loope
or
push
push
cs
adc
push
jbe
push
loop
test
sahf
cmp
or
cmp
clc
ljmp
lods
push
sarb
mov
xchg
sub
sub
stos
mov
mov
mov
je
mov
cmp
ss
or
stos
push
push
fucomip
or
test
add
mov
rcl
fxch
xor
fwait
mov
push
xchg
mov
jmp
enter
in
add
and
pop
movsb
jl
sar
repz
data16
cli
jge
cmpsl
sbb
push
and
std
stos
and
or
push
cmpl
mov
mov
loop
xsha256
cmpsb
adc
push
mov
or
orl
loop
or
testl
jge
inc
mov
cli
mov
mov
adc
in
add
push
or
lock
mov
icebp
sbbl
clc
shl
test
outsb
push
hlt
mov
and
xchg
int3
sbb
and
dec
fs
decl
adc
andl
jne
adc
xchg
adc
sarb
shlb
out
adc
test
and
jle
mov
xchg
push
push
mov
clc
cmp
adc
cmp
or
and
aas
ds
mov
ja
xchg
pop
fimull
inc
cli
push
add
dec
push
dec
outsb
hlt
les
lock
cmp
ds
je
add
or
push
stos
jecxz
aad
adc
pop
inc
mov
sub
inc
insl
push
or
add
jge
enter
fidivrl
outsl
int
test
or
test
xor
push
inc
mov
cld
cmp
mov
and
cmp
rclb
push
andl
lret
int3
mov
xor
cs
add
cmp
cwtl
mov
call
mov
and
jo
add
and
add
dec
and
loopne
cli
mov
imul
test
adc
test
fs
mov
and
xor
inc
sub
dec
hlt
decl
adc
inc
into
or
sbb
outsb
push
js
loop
mov
inc
inc
loop
leave
mov
loopne
aam
jmp
mov
cmpsl
xchg
nop
add
inc
inc
pop
jbe
icebp
jle
mov
imul
addr16
inc
and
je
cmp
int
leave
loopne
add
xor
nop
sbb
ja
mov
leave
cmp
ja
mov
test
push
lcall
mov
pop
insb
shrl
aad
and
push
rcrb
push
insb
push
lods
jnp
sub
xor
inc
mov
dec
sbb
jmp
mov
aas
push
shlb
mov
std
add
rorb
outsl
or
or
mov
outsb
sbb
das
data16
mov
xchg
dec
mov
push
pop
loope
lods
test
and
cld
cli
xor
fldl
lods
test
mov
call
dec
sbb
sbb
pop
orb
add
or
inc
add
push
sbb
outsl
add
in
jp
repz
jmp
addr16
fdivrs
add
jbe
add
adc
add
xchg
inc
jbe
xor
pushl
adc
push
pop
add
cld
mov
addr16
and
call
rclb
adc
je,pt
push
idiv
mov
inc
xor
lea
in
icebp
pop
add
es
adc
dec
movsb
pop
sar
clc
cld
incl
mov
pusha
adc
popa
incl
pop
mov
aam
clc
ret
ds
jo
cld
out
add
lahf
sbb
inc
fsubs
popa
add
lcall
mov
gs
jbe
push
test
cld
adc
jmp
jg
bound
add
pop
clc
and
lods
insb
or
and
jo
and
push
cmp
insb
xchg
gs
pushf
pop
and
outsl
push
gs
inc
bound
clc
decb
adc
and
mov
cwtl
push
xchg
or
pusha
xchg
add
push
or
lds
test
sbb
hlt
cld
mov
pop
pop
xor
xor
sti
pop
push
cli
pop
decl
push
addr16
cltd
clc
mov
sbb
adc
shr
add
out
es
inc
jmp
mov
add
inc
push
pushf
cli
popf
adc
jge
cmp
lock
push
mov
sub
pop
add
jb
test
repnz
outsb
adc
xchg
sahf
test
mov
nop
int3
push
movsb
mov
xchg
dec
cmp
push
mov
sahf
in
mov
adcl
in
sub
add
push
push
gs
mov
adc
dec
mov
dec
fwait
dec
in
push
in
rol
hlt
cmp
push
pop
ss
test
sbb
jmp
sub
push
mov
or
jl
adc
dec
add
aaa
xor
testb
pusha
movsl
adc
mov
loop
sub
mov
cmpl
orl
imulb
add
fnstenv
pusha
cmpsl
dec
loop
mov
adcl
orb
mov
fcompl
adc
mov
sub
xor
enter
or
cmp
lods
inc
inc
cmp
or
pop
xchg
push
sbb
fs
inc
ds
and
mov
test
inc
xor
stos
sbb
mov
adc
and
mov
push
daa
add
jmp
pop
shlb
test
test
mov
jo
sub
movsb
sbb
adc
mov
push
mov
out
pop
loope
loope
xlat
xor
fistl
ljmp
and
dec
lock
mov
fiaddl
push
dec
test
nop
ret
inc
lret
ljmp
fcoms
push
test
pop
sub
push
mov
and
push
adcl
insb
xchg
mov
pop
push
stos
cld
int3
shrb
xor
insl
or
hlt
mov
add
pop
ret
xchg
inc
rorl
cld
jmp
inc
mov
cwtl
dec
fidivl
dec
popl
push
int3
mov
outsb
mov
fcoml
sbb
fisttps
or
arpl
and
xchg
mov
jp
add
or
in
adc
clc
push
outsl
jle
test
mov
mov
or
call
shrb
cmp
or
cld
add
or
das
lcall
insb
cmp
inc
lcall
push
cmpsb
fs
mov
sti
nop
imul
pushl
rcrl
push
pop
test
mov
inc
js
popa
sub
pop
pusha
or
mov
scas
jmp
shrb
leave
inc
sbb
inc
ficompl
pop
adc
or
sbb
rcrb
xor
je
outsb
mov
js,pt
data16
aam
sbb
adc
inc
pushf
scas
or
mov
ljmp
test
push
aam
push
push
ficompl
push
lahf
adc
pop
inc
adc
lret
xchg
outsl
lret
gs
sub
sbb
sarl
rorb
cmpsb
rcl
cmpl
cld
orl
or
sahf
enter
add
lcall
dec
mov
mov
push
xor
or
lea
push
das
jb
fimuls
xor
pop
jp
rcrl
and
cmp
and
add
xor
clc
sbb
fst
inc
adc
orl
sbb
dec
movsl
sub
mov
push
dec
and
pusha
sbb
xor
icebp
push
sbb
mov
ret
pop
icebp
adc
and
out
jo
imul
ret
mov
mov
xor
lock
fcoms
pop
aad
pop
ficompl
sbb
jo
popf
inc
add
dec
jmp
outsb
xor
in
aaa
push
dec
dec
inc
inc
or
pop
lret
je
adc
movsb
push
ds
mov
mov
jge
ret
inc
inc
fdivl
inc
or
dec
loopne
pop
shl
movb
fcmovu
jp
mov
ljmp
cmp
push
or
mov
add
or
les
or
jmp
cmp
mov
add
loopne
add
jo
inc
outsb
and
rorb
sbb
sub
or
das
adc
or
cmp
test
push
shr
add
adc
mov
push
cmp
psraw
jmp
cmc
loope
les
outsl
loope
jg
inc
sub
add
inc
or
push
ret
jbe
add
mov
cmpsb
mov
test
loop
orb
call
mov
mov
loope
adc
add
xchg
mov
cmp
jno
data16
rolb
fsubs
aas
sub
fs
leave
push
sahf
bound
inc
mov
lea
sub
mov
cmp
jecxz
add
add
into
mov
not
iret
je
idivb
inc
jmp
sub
and
sbb
sub
cmp
adc
scas
cwtl
and
add
adc
stos
mov
sub
jae
fcoms
ficoms
push
pusha
add
stc
hlt
xor
push
dec
in
pop
push
inc
dec
call
cmp
sub
push
pop
jne
test
mov
mov
mov
push
push
jecxz
xchg
ret
ret
aad
test
pushw
int3
or
mov
cmp
fdivs
or
xchg
les
cmp
jge
prefetch
test
cmc
jg
inc
pop
xor
push
and
jb
dec
add
lods
mov
mov
je
punpckhdq
outsb
jnp
mov
inc
daa
or
push
sbb
adc
jne
clc
popl
sti
pop
xor
rolb
icebp
sub
lret
add
and
pop
fdivr
pop
xor
test
ljmp
push
sbb
aam
test
push
jmp
jmp
fwait
lock
popa
ljmp
shrb
inc
or
stos
test
add
jno
mov
movl
sti
fisubrs
addr16
adc
daa
inc
dec
cmp
and
cmp
clc
loop
add
xchg
sbb
pusha
xchg
mov
ja
lea
push
aad
es
cmp
and
push
clc
pusha
cli
xor
sub
inc
xchg
mov
pop
xor
ljmp
mov
roll
lock
add
add
mov
ja
mov
push
fs
mov
mov
xor
or
jo
icebp
lea
or
stos
rcl
adc
xchg
add
push
add
stos
push
inc
inc
sbb
dec
inc
icebp
cmc
pop
orb
insl
pushf
sub
adc
sbb
sarb
jmp
aam
inc
push
cs
pop
outsl
jo
dec
in
xor
mov
add
jp
xor
push
in
ljmp
xchg
ret
ret
xor
incb
push
leave
mov
shrl
cld
mov
or
mov
add
lcall
inc
or
sbb
rolb
sahf
xchg
lods
dec
jno
inc
std
sub
cld
call
enter
test
aas
or
mov
mov
mov
sub
call
cmp
jmp
or
jmp
mov
rolb
jge
sti
push
test
fwait
test
adc
rclb
aas
enter
cmp
jmp
rcrb
sbb
and
cwtd
inc
push
andb
and
inc
mov
add
clc
test
in
fld
fwait
sbb
cli
pop
sub
inc
jl
xchg
push
push
cmp
xchg
negl
in
in
das
pop
sbb
data16
and
outsb
in
pop
adc
outsb
adc
xor
lock
lea
dec
xor
test
mov
bound
sbb
pop
push
lds
stc
mov
scas
aam
leave
fcom
mov
add
xor
cmp
cmpsl
rcll
cmp
dec
idivl
fimull
sub
sub
or
clc
inc
mov
mov
sbb
out
out
mov
das
ds
xor
pop
lods
xchg
sahf
es
mov
mov
add
lahf
mov
into
loop
mov
insb
test
and
scas
fistl
jo
into
ffree
cmpsb
inc
out
pop
mov
lea
mov
add
add
in
mov
push
cmc
or
out
jge
fwait
lock
pushf
out
paddw
adc
mov
jl
aam
mov
lret
inc
jecxz
movsl
add
lock
xchg
addr16
dec
test
scas
ret
aad
dec
popa
mov
lds
fbstp
movsb
loopne
adc
inc
jae
aad
sub
mov
fcoml
mov
mov
sub
xorb
mov
lock
dec
push
jp
mov
in
adc
or
hlt
adc
pop
subl
cmp
out
ljmp
jne
rorb
gs
cmp
mov
ds
push
andl
mov
or
sbb
or
mov
shlb
sbb
fucom
lea
in
mov
std
xor
rclb
dec
inc
dec
push
cmp
mov
adc
xchg
mul
or
test
test
cmpsb
cmp
pop
push
fcmovbe
add
xchg
es
lock
lcall
push
mov
adc
or
xor
inc
clc
and
incl
aam
pop
ficompl
cs
mov
fcoms
andl
and
shl
xor
mov
jmp
push
jbe
fdivr
imulb
icebp
mov
ljmp
xchg
lods
sbb
xchg
mov
stos
test
inc
cmpb
jl
xor
adc
fwait
inc
ljmp
lret
movsb
mov
adc
nop
dec
jp
incb
popf
mov
pop
lret
std
pop
inc
mov
sub
add
or
xor
xchg
test
ja
dec
es
loopne
cld
lea
outsb
insb
or
adcl
ss
int
xor
inc
rolb
outsb
and
inc
orl
sbb
inc
sbb
pop
lds
push
and
addb
popa
aas
insb
add
or
jo
outsb
pop
jmp
push
inc
pop
mov
dec
into
xchg
adcb
fsubrl
xchg
hlt
or
stc
add
mov
ficoml
push
dec
lret
and
add
dec
mulb
clc
loopne
adc
lock
mov
xor
flds
mov
add
inc
jne
xor
daa
movsl
cmpsb
xor
rclb
cli
and
cmp
xlat
ret
push
pop
add
sub
das
adc
adc
repnz
cmp
xchg
pop
and
dec
and
push
dec
clc
icebp
mov
ds
rorb
pop
loopne
add
popl
push
push
outsl
push
xor
pop
adc
call
mov
out
add
int3
addl
or
and
cmp
fldl
adc
push
pop
pavgb
xor
adc
stos
ret
push
cmp
clc
mov
aaa
lea
mov
mov
mov
inc
test
in
jl
inc
outsl
cmp
aaa
mov
mov
or
call
loop
mov
add
fldenv
lret
insb
xor
push
jmp
negb
rorb
sbbb
in
pop
lock
negl
mov
mov
out
and
and
lret
push
mov
mov
mov
mov
push
js
xor
jle
jb
nop
push
and
xchg
push
loope
imul
jbe
sub
jp
mov
xchg
sub
push
mov
mov
rclb
ror
mov
push
js
out
inc
cmpsb
mov
mov
adc
jo
dec
or
mov
nop
cli
pop
loop
xchg
movl
adc
dec
or
fmuls
cld
pop
or
data16
inc
xchg
aam
inc
sbbb
cwtl
int
add
push
add
incb
push
mov
push
push
in
lock
popa
enter
outsb
int3
leave
or
and
call
inc
mov
xor
in
test
or
add
sti
jb
incl
icebp
adcb
push
icebp
inc
repnz
out
cli
in
adc
pop
add
incl
adc
mov
jnp
in
sbb
addl
sub
incl
sub
test
inc
das
cmc
popa
shlb
adc
push
enter
lock
xchg
fdivrl
fildl
adc
or
sar
repnz
jno
rclb
fiaddl
or
mov
inc
cmp
pop
pop
out
mov
lret
dec
lret
sub
jno
roll
inc
add
orb
push
push
fdivp
add
enter
jl
int3
lret
xor
test
cmp
ds
adc
pop
jno
push
pop
adc
push
pop
incl
push
mov
mov
imul
out
pop
and
push
add
xor
and
decb
stos
sbb
mov
cmp
shr
loop
clc
add
cmp
push
push
push
mov
nop
loopne
add
and
mov
sti
sub
rdpmc
add
cmp
mov
cli
xchg
mov
jge
incl
mul
loopne
push
sub
inc
mov
int3
jmp
dec
push
mov
add
ljmp
cli
fistpl
inc
jns
xor
xor
push
mov
in
outsl
pop
push
call
fisttpll
sbb
adc
add
icebp
faddl
sti
inc
bound
mov
push
andb
sbb
pop
loope
adc
cmp
cwtl
add
ja,pt
xchg
xor
scas
incl
subl
mov
jne
add
icebp
fdivs
add
mov
xchg
sarb
dec
aam
repnz
decl
les
add
push
ret
cld
test
hlt
rol
ret
cmp
lret
pop
lret
int3
fwait
adc
shrl
cld
outsb
test
mov
incl
pusha
cwtl
push
pop
cmc
cli
filds
add
pop
fs
mov
out
aas
mov
fsubrl
push
add
dec
pop
jo
inc
sub
sti
mov
or
ds
fistpl
inc
divb
mov
dec
enter
pushf
inc
out
mov
pop
rclb
inc
fcoms
pop
push
mov
jb
mov
bound
cmpsb
xchg
pop
cli
test
sbb
sti
testb
xchg
push
push
pop
adc
rep
cmp
push
repz
popl
aam
mov
fs
mov
popa
rsm
push
call
loopne
nop
mov
sbb
pop
lret
push
out
inc
movsb
xor
inc
aad
push
sbb
mov
push
icebp
and
inc
test
inc
xchg
sub
repnz
call
repz
pop
adc
xor
pop
aad
add
dec
cld
ja
ja
imul
in
iret
loop
cli
lea
push
push
mov
mov
mov
in
jg
incb
adc
notb
push
jp
loopne
xor
xorb
into
push
arpl
or
shrb
jge
add
test
push
sub
mov
aaa
adcb
mov
mov
add
xor
xor
ret
addr16
cmc
addb
fsub
fildl
and
jl
jp
pushf
cmpsb
xor
ror
shl
es
std
inc
aaa
sub
jnp
shl
pop
popa
add
fildl
hlt
sub
gs
mov
call
insb
or
faddl
in
pop
push
adcl
aas
push
call
pusha
push
inc
inc
je
rcrl
fwait
idivb
test
xchg
cmpsb
push
sub
je
xor
test
mov
dec
in
inc
std
icebp
subb
loopne
lret
ficompl
rcrb
xchg
mov
xchg
xor
lods
testb
inc
adc
cwtl
mov
rcr
loopne
aad
int3
add
push
popa
insb
push
sbb
mov
mov
sbb
pop
dec
jb
insb
jmp
call
pop
insl
jne
jl
inc
inc
and
test
adc
or
xchg
int3
pop
and
dec
lods
dec
les
hlt
loope
aam
in
xor
mov
xor
jo
mov
add
or
and
clc
jnp
jl
cs
or
ret
sub
push
movhlps
das
mov
ret
push
xchg
xchg
movb
loop
rcll
push
clc
fcmovnb
or
mov
rclb
sahf
inc
bnd
pop
mov
sbb
cmp
sub
or
dec
fwait
js
insb
pop
int3
xor
addb
in
xor
inc
push
sub
xor
out
rcr
loop
fsubp
sbb
loope
or
rclb
add
sub
push
sub
movsb
and
adc
pop
fildll
xor
or
pop
ffree
into
cli
test
stc
lret
lock
jno
pop
and
inc
jl
mov
push
inc
xchg
fcomp
dec
cmp
push
nop
jno
inc
out
and
adc
and
xchg
js
jnp
adc
lcall
pop
loopne
daa
ja
mov
add
mov
xor
cwtl
pop
cmpsb
pop
xor
cmp
push
mov
cmp
loop
cmc
shll
stos
daa
call
loope
lock
pop
gs
subl
xor
or
dec
dec
dec
add
cs
add
dec
push
fs
lock
in
mov
push
fists
mov
mov
xchg
shlb
cli
bound
stos
cmp
les
fcomps
subb
loope
lea
xor
cld
dec
adcb
je
outsl
mov
outsl
mov
push
sub
xor
inc
inc
sbb
std
jo
pusha
ret
bound
push
mov
sbb
cmpsb
clc
xchg
mov
fnsetpm(287
fidivs
dec
jne
sub
adc
xchg
sahf
or
jg
hlt
adc
cld
fldt
mov
add
xor
adc
push
dec
dec
fimuls
rolb
pop
das
lcall
push
inc
rcrl
and
mov
jmp
xchg
or
sbb
lea
and
fcompl
jmp
xor
es
loop
mov
cmc
mov
dec
mov
add
add
xchg
jmp
pop
decl
push
shlb
inc
dec
movsb
mov
mov
or
sub
and
mov
pop
in
sbb
add
add
test
lds
in
stos
push
mov
fwait
loopne
lods
insb
pop
iret
adc
adc
cwtl
xchg
loope
mov
fcomps
xchg
and
rcrb
les
loopne
ljmp
ljmp
add
xor
sub
xor
cld
mov
and
add
add
jae
add
cld
add
js
ficomps
cmp
lock
mov
lock
mov
arpl
mov
js
lret
add
or
mov
or
movb
pop
adc
je
shlb
mov
jecxz
sub
rcl
les
push
fcoms
adcb
out
adc
sbb
dec
push
xor
imul
cld
push
jp
inc
jmp
cli
push
fistps
data16
scas
mov
sbb
jnp
xorb
add
lock
adc
add
adc
inc
pushl
mov
js
push
lea
outsb
jl
push
loope
enter
mov
jne
adc
mov
sub
in
testb
dec
decb
test
push
jle
add
movsb
loope
fdiv
or
lds
pop
out
fstp
mov
js
test
xchg
int3
jl
mov
dec
push
pop
sbb
mov
lea
jle
add
movsb
jae
data16
test
pop
cmp
cld
push
add
loope
pusha
divb
sbb
clc
std
loopne
sti
dec
push
aad
or
fmull
fcmovbe
push
pop
jl
and
push
ss
xor
int3
push
inc
add
aas
mov
xor
test
inc
das
mov
loop
and
inc
aaa
add
jp
in
and
orb
inc
adc
jp
repnz
push
xor
xor
rol
cmp
arpl
icebp
inc
loopne
add
dec
sub
xor
xchg
pop
dec
jnp
push
sbb
out
sahf
dec
hlt
mov
or
inc
mov
das
or
mov
jg
rolb
pop
scas
add
dec
fiaddl
xchg
pop
or
call
imul
mov
lods
nop
add
and
pop
add
test
pop
mov
jg
push
rorb
and
int
add
fs
test
xchg
add
push
fildl
adcl
mov
adc
push
sbbb
pop
rclb
jmp
mov
push
push
and
or
cld
sub
mov
test
mov
out
add
aad
mov
stos
jne
add
jg
jle
push
or
decl
imul
xor
inc
movsl
inc
mov
fistps
add
push
and
scas
cli
push
add
int3
pop
and
or
push
jg
xor
push
push
int3
inc
push
shl
push
xchg
sbb
add
add
ret
xor
fwait
int3
bound
cmpsl
cmp
add
inc
subl
out
daa
int3
lahf
shlb
push
ret
xchg
mov
lods
gs
in
xor
arpl
fisttpl
dec
shl
sub
push
or
outsb
in
mov
xorl
xor
lock
xor
sub
sbb
jmp
add
add
pop
dec
mov
addr16
fdivr
mov
xor
lock
dec
dec
out
jmp
test
inc
push
push
lret
in
sbb
jle
xor
mov
aaa
enter
aaa
dec
mov
pop
in
cmp
les
sbb
xor
sbbb
mov
mov
adc
add
sti
jbe
sub
mov
arpl
loopne
cwtl
or
sbb
test
popa
cld
dec
cmp
gs
sbb
das
cli
adc
xchg
or
call
ret
push
lods
into
mov
test
xor
sub
clc
pop
rcr
addl
aam
fsubs
jmp
push
lods
add
insb
call
popf
inc
idiv
inc
inc
mov
push
pusha
lea
push
rolb
popf
ror
shlb
adc
jnp
mov
les
jge
les
ffree
mov
adc
cltd
push
mov
inc
pop
xchg
outsl
les
call
add
adc
pop
scas
aam
sub
aas
adc
jo
xchg
ljmp
lret
outsl
push
fcmovu
mov
cmp
in
xchg
push
add
dec
pop
jmp
enter
testl
aam
mov
inc
adc
and
insb
push
inc
repnz
push
pop
rorl
adc
add
push
inc
xor
outsb
pusha
mov
inc
add
insb
lods
push
cmc
mov
cmp
mov
mov
inc
jae
clc
clc
cmp
gs
cmc
lahf
negb
dec
mov
lea
inc
pushf
outsb
pushl
mov
push
xchg
push
jge
pop
mov
icebp
pop
push
adc
pop
imul
bound
testb
or
shr
decb
call
pop
aam
adc
lea
sub
add
lea
ss
rcl
cmp
pusha
aaa
add
lcall
pop
in
or
adc
or
inc
push
and
sbb
hlt
sahf
stos
mov
cli
jg
cld
mov
jne
sub
inc
cld
xchg
dec
in
push
daa
mov
cmp
insb
leave
dec
cld
call
pusha
xchg
mov
or
ret
in
insb
mov
icebp
jge
adc
fbld
mov
dec
and
sbb
and
cmpsb
jge
or
faddl
push
lea
add
lcall
scas
sbb
call
xor
lea
cmp
rclb
mov
inc
jl
and
push
inc
or
sbb
mov
sub
cmpb
inc
pop
mov
jne
or
mov
add
mov
jge
cld
loope
pop
stos
add
test
jmp
inc
loope
dec
lret
mov
mov
mov
pop
rol
loopne
lock
adc
sbb
fisubs
and
and
data16
mov
adcb
or
les
shr
push
and
ss
incb
in
je
lret
add
jg
cltd
popa
aas
xchg
push
pop
adc
fimull
lea
sbb
movsl
add
pop
std
leave
cmpsl
push
mov
add
in
mov
sub
arpl
adc
cmp
mov
lea
mov
inc
jb
mov
bound
js
das
js
scas
and
mov
cld
lret
pusha
out
and
hlt
daa
mov
adc
jmp
dec
mov
pop
pop
jge
mov
xor
pop
rcrb
mov
idivl
or
xchg
dec
pusha
dec
loopne
xchg
sbb
data16
faddl
movups
jl
cltd
jle
push
out
ja
idivb
jmp
xor
js
xor
lds
jp
arpl
mov
loopne
popa
sbb
stos
mov
pop
sub
stos
cmp
or
insb
ret
mov
pop
jmp
scas
mov
mov
inc
mov
inc
add
xchg
arpl
cwtl
nop
lret
mov
sbb
sbbl
je
add
loop
inc
sbb
lahf
les
scas
add
dec
add
xor
cmp
pop
mov
add
jl
outsb
dec
xor
jle
mov
dec
cli
repnz
push
std
lods
mov
mov
sub
aam
mov
and
clc
xor
sahf
stos
aam
mov
jmp
or
inc
repnz
dec
loopne
mov
call
mov
jmp
rorb
pop
imul
dec
jg
sbb
mov
pop
and
mov
ret
or
jp
fdivp
cld
testb
rcr
mov
xor
sbb
or
cmp
xor
test
and
adc
jnp
nop
add
es
push
lods
out
xor
push
xchg
dec
loope
dec
movsb
mov
mov
xorl
aaa
push
and
jne
lods
mov
sub
adc
xor
nop
pop
push
mov
push
push
jnp
sub
mov
cmpsl
sbb
imul
out
pop
jb
or
adc
arpl
movsb
push
jmp
outsb
add
push
jmp
popf
add
mov
mov
mov
or
dec
cmp
and
test
je
mov
je
les
push
cmp
icebp
out
hlt
sub
fidivs
inc
jmp
mov
or
adc
aad
push
inc
rcrl
fcomps
addr16
xor
les
popa
fcmovnu
inc
ret
jb
int3
xor
fs
stos
xlat
push
or
push
insb
mov
mov
test
pusha
inc
push
mov
inc
mul
pop
rolb
test
inc
out
js
xor
xor
aas
pushl
ja
cmc
push
adc
ficompl
sbb
dec
movsb
mov
xor
xlat
mov
pop
mov
jmp
jae
or
or
lock
cld
roll
push
je
or
std
mov
notb
lret
std
cmp
fildll
adc
ret
mov
jne
aam
push
cmp
les
decb
push
rep
xchg
scas
jae
mov
sbb
push
orb
js
test
dec
push
mov
cmpl
cwtl
jmp
lock
inc
lea
jne
xor
mov
js
aaa
mov
lret
shl
in
mov
aad
pop
sub
jne
ljmp
and
scas
aam
clc
jg
enter
stos
and
lcall
push
push
xor
test
push
inc
sub
pusha
and
testb
and
pusha
add
js
add
jae
mov
mov
and
adc
xlat
jmp
add
jns
fs
insb
addb
fsubs
dec
dec
push
adc
and
inc
xchg
xchg
dec
adc
leave
test
sub
inc
pop
pop
out
jbe
fs
mov
sbb
add
mov
jae
inc
push
jp
mov
inc
inc
push
es
call
cld
mov
jecxz
hlt
push
jmp
cs
shl
cmp
sub
scas
rcrb
jecxz
js
mov
pop
adc
cltd
xchg
or
sbb
hlt
aaa
sbb
jne
mov
sbb
mov
inc
mov
test
mov
or
push
push
dec
fs
pop
push
inc
and
and
in
out
add
add
push
push
cmp
into
pop
mov
mov
call
add
dec
ja
sti
das
pushf
insb
std
testl
scas
push
sarl
sbb
sbb
adc
cld
adc
das
int3
xor
mov
push
std
movsb
sub
inc
lret
mov
jmp
cli
orb
inc
loope
mov
mov
sub
pop
mov
adc
pushf
lock
jge
in
push
inc
inc
movsb
sbb
jb
xchg
loopne
pop
push
push
iret
push
inc
lock
rorl
or
inc
mov
in
pop
arpl
loopne
ret
cmc
mov
jp
add
pop
imul
aas
lea
dec
aas
in
sbb
or
dec
movsb
pop
or
xchg
mov
pop
or
inc
movsb
jmp
push
imul
xor
dec
test
xchg
pop
add
aad
xchg
adc
mov
mov
push
push
jl
adc
frstpm(287
ljmp
clc
int3
rolb
lcall
sub
aam
movsb
out
imul
pop
mov
out
imul
dec
inc
push
inc
dec
mov
add
mov
jmp
add
xor
pop
incl
push
push
and
test
int3
adc
push
xchg
or
add
push
mov
cmpsl
inc
xchg
aam
inc
aaa
push
xor
push
insb
bnd
rorl
outsb
jl
aam
ret
jp
sbb
orl
scas
fmulp
lret
add
cwtl
mov
ljmp
in
inc
xor
js
or
sti
into
mov
or
shl
mov
jne
pop
dec
jne
pop
addr16
sub
jo
inc
loop
cmp
je
stos
sbb
push
test
outsl
mov
xor
dec
xor
pop
push
and
je
aad
pop
ret
mov
mov
xchg
pop
add
dec
push
insl
ds
icebp
shrl
dec
lcall
int3
fs
ja
push
je
icebp
or
movsb
xor
xchg
nop
ficomps
aam
cli
cwtl
inc
push
pop
out
out
roll
je
clc
inc
test
pop
mov
icebp
pop
mov
xchg
test
mov
movsb
cmpsb
sub
mov
jecxz
andl
mov
inc
gs
cmp
repnz
adc
mov
pushf
jae
pop
repz
aam
lea
call
mov
js
ss
jg
or
push
pop
int3
add
fidivrs
ss
lods
rcrb
xor
inc
or
sub
mov
jge
inc
xchg
inc
call
push
and
cmp
mov
xchg
jecxz
lods
pushl
mov
or
mov
loope
mov
imul
sbb
dec
ffreep
shrb
aam
sahf
adcl
inc
imulb
add
decl
xlat
and
mov
repz
jb
pusha
add
cli
add
pusha
icebp
push
mov
mov
mov
add
call
mov
push
arpl
outsl
mov
test
or
add
repnz
mov
fbld
dec
push
pop
mov
add
shl
lea
loop
clc
orl
test
pcmpeqb
addl
imul
xchg
adc
adc
movsb
pop
out
mov
cmc
pop
xchg
jbe
jb
add
add
mov
ljmp
jmp
in
js
sbb
cld
inc
subl
incl
jne
mov
mov
arpl
push
in
adc
ja
dec
fisubrs
out
call
nop
std
jmp
dec
mov
gs
daa
push
mov
cmp
xchg
mov
sarb
bound
fdivl
and
mov
rcrb
inc
push
xchg
mov
push
pop
or
test
ret
xchg
andl
mov
push
inc
push
mov
les
loop
je
mov
dec
adc
bound
and
pop
mov
flds
aam
dec
gs
clc
xor
cld
idivl
icebp
pop
push
add
adc
test
paddd
mov
mov
cmp
jg
es
xor
sub
mov
or
imul
xor
xchg
pop
orl
insb
mulb
xor
push
outsb
push
subl
icebp
clc
sub
adcl
test
lea
das
addb
pop
mov
or
enter
xor
jmp
mov
xchg
addl
push
mov
add
les
add
or
stos
and
or
cmp
lods
xor
sti
rcr
adc
icebp
add
je
inc
xchg
mov
adc
or
mov
std
leave
dec
clc
faddl
sbb
pop
push
jae
mov
push
add
icebp
ljmp
add
leave
jb
data16
inc
pop
mov
mov
clc
xor
inc
test
xor
dec
pusha
lods
or
push
mov
add
test
add
sar
sbb
mov
dec
xchg
hlt
push
pop
popf
fstps
fdivr
dec
lods
xchg
js
mov
push
add
or
mov
arpl
push
add
add
sub
mov
mov
pop
xor
xor
dec
inc
adc
xchg
and
and
dec
and
rorb
cmpsb
subb
iret
inc
sub
adcl
push
xor
int3
sahf
mov
sar
jmp
cld
or
push
call
mull
hlt
add
inc
push
cld
sub
or
pop
nop
out
mov
cld
xor
movsb
xor
push
pop
or
ret
mov
add
andb
pop
xchg
fistpl
dec
or
xor
fcmovb
rcrb
lea
pop
jo
clc
enter
pop
cmp
pop
dec
loope
sub
mov
mov
xor
and
adc
ds
xor
addb
test
xchg
addb
lods
mov
mov
dec
mov
adc
loopne
xor
aaa
pop
jnp
inc
aas
add
inc
call
mov
out
iret
or
test
sub
or
insl
cld
or
sub
pop
gs
fisubl
std
push
leave
jbe
xorb
xchg
lea
aas
stos
ret
jge
rorb
push
pusha
jmp
fcompl
idiv
add
or
push
test
mov
pop
rol
fisttpl
mov
mov
add
inc
mov
rclb
add
test
add
sub
sbbl
mov
cmpsb
adc
lock
bound
cli
test
sahf
or
icebp
dec
mov
sub
mov
push
ret
sbb
pop
pop
jle
xor
push
sbb
and
aad
stos
inc
add
in
push
sbb
mov
rolb
add
faddl
push
sbb
add
daa
sbb
movsb
aad
fmull
sahf
xchg
pop
inc
rcr
mov
xchg
add
add
jae
fmuls
mov
adc
mov
add
repz
ja
cmp
shlb
js
stos
dec
in
into
or
push
mov
push
fstl
out
cmp
cmp
mov
pop
dec
inc
jmp
jecxz
jne
mov
mov
hlt
out
out
rcl
add
xchg
jle
in
xor
idiv
inc
push
in
das
ret
leave
mov
clc
sbb
push
pop
mov
test
fcoms
add
push
pop
mov
or
cs
or
and
test
fcoms
ss
clc
push
es
call
xchg
xchg
adc
icebp
xchg
mov
dec
pop
scas
dec
int
je
orb
cltd
je
jne
mov
enter
pop
mov
pop
lods
mov
inc
push
lods
jg
cmp
inc
push
jae
mov
sub
imul
pop
in
mov
pop
ss
and
cs
shll
push
push
mov
test
std
mov
push
inc
dec
sub
add
mov
scas
lods
pushf
jecxz
xchg
shrb
js
add
out
pop
dec
popa
xor
and
adc
push
test
loopne
cmp
dec
inc
or
ret
or
dec
loopne
fimull
mov
mov
adc
sub
mov
rcl
andl
push
out
mov
imul
nop
mov
adc
pop
std
dec
imul
adc
sub
add
mov
loope
and
jb
repz
stos
mulb
lea
dec
dec
xorb
add
mov
ficompl
mov
or
ficoms
jne
mov
push
insb
inc
rcr
push
iret
or
sbbb
and
icebp
mov
or
jl
push
cli
mov
push
dec
jmp
adc
add
push
repnz
mov
xor
jmp
push
mov
jb
incl
mov
dec
in
pop
add
aas
imul
js
xor
adc
cli
scas
movsl
mov
inc
mov
insb
and
jb
dec
outsl
xchg
call
adc
xor
push
ds
mov
mov
scas
je
stos
cmc
outsb
add
xor
xor
pop
lods
adc
lea
inc
imul
clc
mov
mov
jge
jo
push
mov
dec
mov
jb
sti
lds
sbb
or
insb
mov
pop
xor
enter
cld
cmp
lret
imul
push
sub
xchg
ret
jl
xor
or
or
mov
cmpb
in
sbb
xor
add
out
mov
daa
dec
cld
mov
adc
and
xor
out
stc
fwait
gs
ret
incl
sbb
in
cmp
xchg
rorl
push
push
sub
push
xlat
int3
cmp
jmp
cmp
sub
fwait
add
icebp
jg
shr
add
mov
mov
fwait
movsb
mov
incl
sahf
pop
fdivrs
int3
lods
arpl
push
push
cmp
cmp
rcrl
adc
push
mov
cld
add
and
hlt
sbb
sbb
inc
sbb
and
cmp
sub
decl
fdivr
mov
push
push
mov
outsl
andb
inc
jl
jne
ret
int
add
dec
mov
movl
out
pop
xchg
push
and
add
rcrl
mov
mov
mov
jns
jne
loopne
or
cld
xor
pop
fcmovu
rcrl
jb
test
lret
push
mov
fbld
xchg
decl
mov
add
incl
adc
or
outsl
pop
inc
jmp
push
lock
mov
and
popa
popa
aad
mov
dec
stos
dec
inc
xor
push
xchg
mov
aam
inc
bswap
cmp
or
outsl
out
orb
ljmp
inc
sub
and
pop
pop
enter
adc
cs
loope
mov
bound
pop
lock
loop
inc
cltd
xchg
sub
mov
jo
test
icebp
fs
xor
mov
not
jb
dec
outsl
sbb
push
out
test
adc
ret
sub
or
cs
mov
xor
push
popf
add
add
in
push
lods
pop
jns
call
jp
cli
andb
cmp
and
hlt
clc
mov
inc
fsubl
xchg
pop
ja
pop
xor
hlt
xor
icebp
push
adc
inc
mov
test
pop
loope
leave
add
mov
add
sbb
movsb
movb
and
xchg
or
out
pop
jp
loopne
mov
pusha
int3
add
sarl
out
rcrb
cld
lea
sbb
fdivr
sub
call
cmp
loopne
dec
fnstsw
out
in
mov
inc
call
aaa
dec
outsl
cmp
lods
jmp
sbb
push
and
inc
mov
jmp
fcomps
jb
js
je
call
bound
ret
push
push
aas
adc
das
insb
shr
fldenv
or
pop
cmp
xor
das
mov
aam
cld
loop
cmp
in
insb
and
jo
fcoml
int3
sbb
mov
jge
inc
dec
inc
xchg
test
adc
mov
or
idiv
rcrl
js
xor
loope
add
xor
mov
fidivl
pop
testb
andb
lock
mov
push
test
push
es
mov
sub
add
sbb
cmp
mov
paddsb
clc
and
jg
inc
je
daa
lods
inc
roll
imul
mov
in
sbb
loopne
lock
lock
sub
fwait
lea
push
ljmp
push
adc
mov
fidivrl
push
cmpsb
ds
pop
dec
or
call
adc
mov
in
add
xchg
mov
dec
inc
xchg
js
mov
in
gs
sbb
mov
push
dec
ret
bound
test
mov
fdivrs
mov
unpckhps
pop
sub
mov
mov
fldt
or
inc
jl
sub
repnz
jle
sub
xchg
mov
pop
shlb
inc
les
and
lea
push
clc
or
data16
mov
icebp
mov
incl
push
outsl
push
dec
rolb
or
dec
or
fisubrs
ficoml
fsts
mov
in
xchg
loopne
cmp
dec
nop
inc
in
movsb
jo
sbb
repnz
pop
testb
cmp
sbb
lock
mov
sbb
sar
mov
cmpsb
xchg
out
push
adcb
inc
sub
negl
testb
rcrb
shrb
push
adc
cmp
movsb
mov
adc
jle
and
leave
jmp
inc
js
je
mov
jle
mov
mov
mov
adc
inc
xlat
lret
movl
adc
and
push
cmc
dec
and
aam
push
dec
stos
inc
js
aad
and
jbe
mov
adc
cmp
and
add
imul
inc
sarl
daa
adc
add
mov
ljmp
add
jbe
inc
xchg
sti
jo
and
js
pop
clc
xchg
push
ss
inc
xor
jnp
add
sub
push
xor
and
sti
leave
data16
mov
not
and
push
inc
push
dec
test
outsb
pop
add
or
mov
xchg
pop
xor
mov
jecxz
lahf
sub
pusha
mov
push
add
or
ret
xchg
ret
and
pop
shll
adc
hlt
add
push
or
cmp
loope
cmpsb
movaps
add
jne
je
shlb
mov
rorl
inc
pop
int3
js
push
insl
aaa
adc
sbb
inc
fsub
mov
incb
in
mov
js
dec
loop
or
cmpl
ret
push
inc
out
lods
sub
icebp
inc
pop
or
mov
aaa
std
das
lret
test
pop
imul
fsubl
sbb
lock
jecxz
mov
addb
je
sub
aad
mov
fisubs
xor
and
rolb
push
ret
insb
pusha
push
push
loopne
fbld
push
or
mov
fldt
sarb
cld
jg
pop
xchg
ficomps
cli
adc
adcl
ljmp
sub
test
comiss
pop
cmp
fdivl
outsl
xor
pop
cmp
push
insl
mov
loope
push
xor
pushf
cs
push
xchg
inc
roll
cmp
popf
inc
push
rcrl
mov
enter
pop
pop
sbb
mov
lods
sub
dec
pusha
ljmp
push
mov
mov
xor
cmpsb
call
sub
adc
sti
sbb
pop
jl
mov
or
hlt
clc
cs
mov
mov
loope
mov
je
daa
iret
mov
dec
loop
jo
hlt
push
clc
cmp
xor
add
push
sub
stos
pushf
int3
or
lea
mov
adc
imul
ljmp
mov
mov
xchg
mov
aas
sub
sbb
shlb
jne
cmp
dec
inc
sub
shlb
ret
cli
sbb
popf
andl
dec
and
pusha
scas
bound
aas
std
ret
inc
xor
dec
cmp
clc
or
push
std
je
ror
mov
add
xlat
iret
test
gs
sbbl
pop
outsl
mov
inc
pop
push
sarb
xabort
outsb
icebp
jg
dec
sbb
mov
jl
aaa
pop
xchg
aaa
aam
daa
push
cmp
rorl
pop
add
in
lds
in
shrb
jp
mov
loop
idivb
cmp
ror
pop
push
jmp
inc
jge
inc
jo
dec
xor
jb
das
xor
hlt
mov
cld
test
jmp
add
in
call
loope
cmp
decb
pop
xchg
mov
sbb
rorl
cld
sahf
fiaddl
pop
adc
push
adc
adc
icebp
push
push
push
cmp
and
dec
cmp
mov
jno
shlb
js
std
jg
hlt
xor
and
rolb
xchg
adc
mov
inc
aaa
add
mov
push
into
cmp
or
incb
out
inc
inc
fcmove
mov
lahf
in
ret
shrb
inc
xchg
push
and
xor
add
xchg
in
and
or
push
inc
jbe
int3
dec
push
stos
sub
daa
adc
add
sub
movsl
mov
and
cwtl
inc
fsubrl
xor
out
or
add
imul
test
jb
jno
sbb
aad
scas
in
cltd
addb
or
inc
mov
cs
add
loope
mov
mov
push
xor
insb
out
int3
pop
mov
dec
lahf
sub
arpl
pusha
inc
int3
inc
call
push
mov
lcall
cmp
push
iret
out
dec
inc
or
push
mov
mov
mov
loopne
dec
push
sahf
and
cmp
pop
rolb
cmp
rolb
pop
outsl
xor
push
or
mov
pop
mov
lret
jge
xor
add
mov
jno
lock
loop
hlt
outsb
dec
lea
sahf
push
dec
jle
dec
adcl
scas
jle
lds
sti
int3
add
push
ja
inc
jmp
sub
cltd
xor
les
push
ret
data16
loop
jb
adc
adc
loop
ljmp
push
int3
movsl
and
fbld
mov
into
enter
and
or
or
je
aam
fs
add
cmp
jle
inc
mov
push
std
pop
in
mov
sbb
in
ss
xchg
xchg
mov
or
xchg
add
adc
imul
outsb
fcoms
adc
ljmp
pop
call
inc
cmp
sbb
lea
sub
loope
push
ror
fidivl
mov
cld
aaa
dec
xor
inc
pop
test
clc
xchg
jle
out
cmp
je
jae
lods
pop
push
add
adc
loop
mov
cmpb
and
push
scas
or
gs
subl
rcll
push
js
pop
cmp
sbb
sahf
and
add
add
xorl
lds
and
rcrb
lar
rolb
inc
sub
in
jmp
das
inc
add
sti
jne
lock
jbe
mov
rcrl
stc
mov
imul
dec
and
cli
dec
mov
int
add
ror
gs
ss
adc
mov
mov
mov
in
xor
or
mov
sub
test
mov
inc
inc
inc
add
mov
push
jno
mov
subl
push
outsl
jge
stos
insb
cmp
je
icebp
iret
pop
mov
inc
mov
xchg
dec
pop
add
enter
stos
fdivrs
add
hlt
lods
rcll
nop
lock
addb
sub
jl
push
cld
movsb
mov
and
cmp
dec
outsb
js
sub
adc
and
jle
cmp
paddw
je
pop
shll
lock
adc
ja
or
add
in
ret
xor
add
or
fcomps
xchg
push
cmp
push
inc
mov
xchg
aaa
and
gs
jae
ret
inc
push
xchg
push
cmp
jae
rol
adc
out
call
push
dec
xchg
int3
push
mov
push
jp
fcmovnu
bnd
fcoml
pop
jnp
push
pop
xor
push
les
or
addr16
or
fdivs
dec
push
shl
outsl
sti
push
mov
ret
je
cmp
jecxz
mov
outsb
cs
fbld
lods
inc
xchg
push
push
add
jl
inc
mov
pop
cld
mov
sti
pop
dec
lods
jmp
lock
aaa
mov
dec
mov
rcrl
inc
test
xchg
test
pop
push
inc
shlb
sbb
shl
incl
push
imul
dec
jb
loop
hlt
xchg
mov
mov
arpl
adc
cld
adc
mov
xchg
jge
push
dec
sbb
js
mov
filds
dec
jmp
and
insl
cwtl
push
push
shll
pusha
pop
adc
sti
dec
mov
or
pop
add
addl
jo
pop
inc
add
test
and
mov
mov
mov
ret
aaa
stos
xchg
lock
in
call
pop
and
dec
je
and
jge
ret
ss
or
jmp
pop
insb
lods
lret
pop
filds
add
xchg
pop
fdivs
push
adc
push
aaa
loope
and
pop
outsb
inc
jo
fsubl
push
mov
jle
add
imul
shlb
subb
out
cli
adc
add
add
icebp
call
or
adc
and
cmc
data16
mov
push
scas
sbb
jmp
fists
data16
xor
stos
ja
test
mov
mov
loop
cli
add
sub
mov
cmp
jge
cmp
adc
in
rclb
adc
mov
pop
jp
mov
inc
lods
iret
std
cmpsb
lahf
cmp
pop
or
push
stc
mov
loopne
movl
and
movsb
pop
cmp
sbb
xor
sbb
cld
gs
xchg
mov
cli
pminsw
sub
movsl
nop
outsb
mov
and
push
in
jecxz
ljmp
add
insb
stos
lret
inc
shrb
mov
sbb
cmpsb
andl
xchg
imul
sahf
push
insl
xor
push
mov
fs
pop
sub
outsl
jecxz
add
movlps
jbe
cmc
mov
lret
call
pop
mov
mov
cmp
xor
sbb
cwtl
and
or
jecxz
fadds
popa
loopne
decb
or
loopne
push
movsb
dec
xchg
push
insl
push
jae
test
inc
pop
pop
out
or
xor
fsubl
push
push
mov
test
lcall
mov
dec
and
cmp
nop
jo
test
in
loopne
es
cmpsl
loop
or
lea
sbb
scas
and
sbb
sar
std
lock
imul
pushf
pop
test
daa
std
pop
sbbl
jl
stos
scas
incb
add
lcall
sahf
adc
fists
dec
movsl
xlat
xchg
inc
clc
mov
cld
arpl
ds
scas
rcrl
je
mov
push
inc
push
sahf
or
inc
mov
jb
mov
push
and
dec
push
jbe
and
sbb
push
mov
out
jns
push
fucom
jne
mov
loopne
loopne
sub
jae
jmp
mov
fs
push
into
rcr
inc
fisubrl
dec
es
sbb
xchg
fisubrs
xor
clc
push
cmp
push
shlb
add
nop
push
bound
and
pop
jle
dec
jmp
lea
nop
stos
dec
cld
mov
xchg
fdivr
inc
dec
push
mov
insb
or
cld
mov
or
mov
add
test
add
dec
es
xchg
pop
sub
arpl
and
mov
mov
inc
gs
jne
test
loop
mov
test
rcll
sub
cmp
clc
add
in
call
rclb
or
adc
and
mov
ljmp
mov
cld
jne
jnp
sbb
push
roll
push
and
orl
les
ficompl
or
add
push
fs
mov
int
jle
rolb
leave
arpl
cld
mov
inc
lock
push
inc
scas
cld
subb
sbb
lea
gs
push
lods
push
push
ljmp
decl
shl
mov
add
out
pop
and
pop
idivb
loopne
loopne
mov
add
push
cmpsb
gs
cld
aad
stos
jg
mov
sub
push
int3
dec
mov
rcll
into
aam
dec
and
xor
scas
adc
shlb
test
cmp
push
clc
sub
bound
inc
lcall
dec
jne
add
addl
xchg
jle
push
mul
inc
mov
push
add
or
in
or
push
inc
cli
sub
push
dec
repnz
jle
and
mov
fimull
mov
push
mov
imul
sbb
sbb
test
ss
mov
int3
aas
and
cmp
cld
mov
and
pop
iret
das
sub
fdivrs
mov
mov
pop
inc
jmp
mov
sarb
xchg
xor
js
mov
xchg
sbb
inc
jl
orb
ret
mov
pop
ficoms
fisttps
jae,pn
dec
lcall
inc
outsl
clc
popl
push
rcrb
pusha
cmovne
je
shl
mov
xor
sti
dec
lods
in
adc
mov
insb
jmp
mov
cmp
push
and
add
push
clc
pop
jl
jb
adc
es
dec
jge
jo
ret
les
sbb
xchg
sbb
add
push
push
adc
fcomi
sbb
and
psubsb
or
shll
gs
ja
push
es
push
incl
cmp
add
mov
in
les
clc
xor
xchg
mov
aas
mov
stc
adc
pop
ret
cmp
add
mov
adc
fsubr
test
cld
mov
push
or
orl
lods
mov
gs
push
push
mov
cld
mov
push
sar
push
push
insb
int3
test
cmp
fistps
mov
mov
add
push
jle
shrb
aas
rol
in
cld
out
out
push
das
outsb
adc
pop
mov
xchg
push
lock
sub
clc
add
leave
out
mov
inc
ljmp
lret
inc
adc
call
inc
jl
shlb
pop
jmp
pop
sub
pop
imul
rclb
pop
movsb
pop
sub
rorl
inc
mov
test
ss
incb
mov
mov
add
add
lcall
mov
mov
dec
loopne
faddl
pop
int3
push
mov
rclb
cs
push
push
jg
shrb
sub
push
or
push
push
je
loopne
cli
push
xor
xchg
cmc
out
mov
or
dec
dec
xor
mov
mov
push
mov
enter
inc
adc
fildll
ja
fdivs
mov
in
xor
rorb
test
into
lods
sub
push
flds
jo
pop
push
add
fcomip
test
shlb
mov
push
bound
test
hlt
shlb
iret
push
jo
pavgb
pop
sub
push
add
adc
add
orl
sahf
loopne
lcall
rorb
call
retw
icebp
pusha
arpl
je
mov
push
jne
push
xor
dec
loope
sti
mov
push
jmp
pop
mov
fisttpll
pusha
mov
es
jmp
push
stos
mov
cmpl
rcl
mov
sbb
sbb
mov
filds
xchg
cmp
xor
pop
xchg
sub
mov
andb
add
inc
dec
mov
add
cmpsb
adc
js
or
movb
and
sbb
push
shrb
out
lock
incb
or
lds
mov
pushf
lret
aas
xor
sbb
push
dec
push
pop
nop
push
rclb
mov
adc
push
call
mov
mov
mov
add
call
movups
add
pop
and
fs
or
aam
icebp
and
test
test
mov
hlt
xor
jo
popf
xchg
loope
push
push
loop
cli
adcl
push
or
add
test
adc
adc
sahf
mov
inc
lea
xchg
lret
xchg
out
mov
aad
rclb
loop
push
cs
fidivrs
cmp
ss
adc
push
rorl
xor
loopne
testb
mov
and
sbb
adc
mov
add
pusha
clc
out
data16
andl
mov
pop
pop
add
es
cmpb
test
dec
dec
rol
in
hlt
and
xchg
movsl
nop
test
dec
pusha
or
cmp
add
adc
xor
xor
fs
jmp
fwait
popa
pop
mov
add
mov
bound
outsb
dec
xor
insb
cld
pxor
and
adcl
lcall
push
cmp
or
xor
or
sub
addb
jl
movsb
mov
push
mov
jp
call
push
cmp
sub
sub
ret
mov
cmp
jb
mov
jne
imul
jb
cs
jmp
xchg
cli
fimull
inc
mov
lret
mov
subb
jbe
ret
loopne
mov
add
mov
cmp
iret
cmp
movsl
jl
mov
outsb
rol
scas
mov
jbe
pop
fdivrl
test
push
add
arpl
lea
cmpl
sbb
jge
lret
mov
xchg
push
add
shrb
xor
sub
insl
call
push
cli
testb
sbb
adc
cmp
adc
outsl
repz
push
pop
ret
cmp
jb
adc
mov
loope
mov
test
xor
repnz
push
movsl
adc
cmpsb
mov
out
sbb
movsb
xchg
add
ljmp
push
stos
clc
sbb
out
push
out
cmc
subb
ss
mov
adc
mov
fdivr
push
pop
testb
leave
inc
ret
popf
mov
lahf
je
mov
insb
push
dec
or
inc
mov
fwait
push
jae
push
inc
js
movb
or
add
adcb
inc
out
xchg
shlb
sbb
testl
out
mov
xchg
loope
stos
push
jle
push
adc
rolb
jae
xor
popf
or
pop
or
push
sub
add
dec
sbb
push
lods
scas
push
mov
int3
push
or
pushf
mov
scas
xlat
es
sub
xor
data16
jl
les
push
mov
js
add
data16
orl
xor
mov
test
xchg
nop
popa
cld
sub
mov
xor
xchg
add
hlt
mov
sbb
xchg
xchg
jge
out
push
cld
fcoms
dec
movsb
movsb
mov
push
add
push
rclb
mov
cmp
mov
jo
add
sub
inc
sarl
shl
data16
mov
je
rol
or
xchg
pop
pop
stos
or
inc
les
push
mov
je
dec
testb
call
add
add
insb
rcrl
es
mov
jg
mov
mov
jmp
aaa
les
mov
pop
adc
jp
sbb
pop
jmp
ds
in
dec
and
loope
pop
push
cmp
add
sub
es
xor
enter
inc
jl
mov
lds
orb
cld
or
movsb
inc
fmulp
pop
add
loope
jo
dec
dec
xchg
fimuls
and
sub
es
add
and
cmp
inc
fstps
shlb
adc
data16
xor
and
sub
cld
nop
jbe
outsb
and
sbb
or
mov
add
adc
scas
or
push
mov
mov
jl
and
incl
adc
xor
sbb
sbb
push
pushf
subb
push
nop
int3
xchg
jg
insl
jo
pushw
jno
add
add
ret
cmc
xor
add
push
popa
dec
sub
or
sub
mov
or
adc
add
das
cmp
xchg
es
cmp
pusha
movsl
and
push
inc
push
fadd
mov
mov
inc
and
test
movsb
or
add
out
mov
push
sbb
out
lcall
mov
inc
mov
sbb
in
sub
xorb
push
icebp
xor
hlt
insb
in
pop
push
mov
ror
jl
xchg
mov
cwtl
aas
inc
loopne
and
mov
into
iret
test
fimuls
cmp
dec
pop
mov
push
push
cmp
mov
repnz
sub
or
mov
jo
ss
or
push
push
mov
sbb
bound
add
test
aam
iret
sbb
adc
add
hlt
pop
gs
lea
stos
jo
out
fisubrs
cli
pusha
or
adc
inc
jp
sub
ret
sbb
fs
pop
pop
shrb
movsl
lret
add
icebp
scas
and
add
add
jg
and
mov
mov
mov
lahf
adc
cwtl
adc
incl
sbb
mov
mov
dec
mov
cwtl
shufps
lea
test
sbbb
jecxz,pn
jle
push
sbb
cmp
lret
rorb
sahf
mov
stos
in
cmpsb
dec
clc
adc
pushl
ret
sahf
test
add
xlat
add
dec
cmp
cmp
adc
xchg
mov
inc
scas
mov
imul
add
adc
and
xchg
mov
js
inc
ljmp
fimuls
in
aaa
pushl
or
sbb
dec
mov
movsb
push
loopne
int3
mov
rorb
pop
in
test
mov
imul
ljmp
jmp
mov
std
xchg
rorb
mov
test
push
xor
arpl
inc
xor
sub
jbe
adc
std
mov
mov
mov
inc
fimuls
loopne
fwait
cs
or
lret
cmp
mov
jb
add
adc
add
pop
inc
incb
xchg
dec
pop
cmp
test
jmp
in
xor
add
push
xchg
sub
and
je
sar
stos
fwait
jo
mov
jo
cli
push
lahf
cwtl
dec
jne
in
push
inc
add
iret
test
popf
je
mov
scas
dec
decl
and
mov
inc
push
mov
push
push
testl
push
aaa
test
add
ret
call
mov
sbb
xor
cmpsb
ret
or
cs
dec
xchg
mov
mov
mov
sub
call
sub
jmp
cmpb
ret
lods
pop
rorb
push
incb
push
cmp
add
sbb
lods
add
mov
cmp
inc
xchg
and
sub
push
push
jg
lcall
lcall
cs
fadds
arpl
inc
cmp
loopne
mov
ret
jb
lods
aad
cmp
test
mov
xchg
xorb
hlt
add
shrb
dec
xchg
pop
push
call
pop
mov
inc
fwait
test
cld
xor
orl
adc
xchg
shl
inc
cmp
test
add
sub
clc
clc
mov
stc
jo
fstl
pop
inc
pop
adc
adc
pop
sar
sti
add
lock
dec
mov
push
outsl
xor
arpl
push
inc
cmp
adc
and
push
into
popa
sub
movsb
mov
push
out
xchg
fisubl
dec
xchg
push
or
subb
pushf
xchg
mov
xchg
fcoms
sbb
mov
js
mov
dec
push
rcll
in
dec
inc
js
insb
adc
xchg
test
mov
arpl
or
call
cmp
lock
mov
mov
hlt
test
lea
mov
or
hlt
pop
push
dec
push
jmp
mov
mov
mov
cwtl
jp
mov
leave
scas
imul
add
and
push
fs
imul
ljmp
sbb
dec
je
and
and
or
scas
or
jno
loopne
or
sbb
push
test
mov
faddl
cli
clc
mov
push
dec
jle
adc
into
or
push
pop
pushf
push
sbb
fiadds
xchg
mov
mov
add
lods
sti
lret
mov
es
test
insb
mov
sbb
lea
push
and
nop
movsl
shrl
int
mov
adc
push
subl
adc
xor
cli
mov
push
repnz
lret
mov
or
fadd
jo
ds
or
cld
push
push
adc
or
aad
shlb
fiadds
fnstcw
les
jle
mov
mov
lock
lock
les
mov
add
push
inc
and
cld
aaa
or
inc
sahf
call
jne
out
add
lret
mov
stos
add
add
dec
add
outsb
lea
adc
fiadds
shrl
sarl
or
cld
jb
jne
addr16
xchg
mov
mov
jle
xor
pusha
sub
mov
sub
cmc
test
or
int3
jg
pop
jecxz
mov
inc
lahf
in
movl
iret
mov
add
in
lock
sub
cld
fcoml
cmp
or
inc
mov
mov
sub
cmpsb
mov
jb
scas
aad
or
ja
cld
mov
pusha
dec
push
xchg
push
xor
nop
sahf
dec
add
xor
imul
jo
ljmp
gs
imul
cli
sub
inc
adc
popa
aas
sub
je
cmp
rorb
pop
push
testb
insl
or
incl
xor
aaa
adc
setl
nop
adc
adc
cmp
or
sbb
jnp,pn
inc
and
sti
and
mov
mov
fs
test
rolb
push
aas
jecxz
mov
decb
flds
mov
loopne
rclb
lds
hlt
loopne
mov
mov
inc
ret
pop
shr
mov
daa
insb
push
xchg
scas
push
idiv
es
xchg
in
loopne
push
adc
aas
rorb
add
jmp
xor
call
sar
add
out
inc
fimuls
mov
dec
inc
cwtl
xor
jo
mov
mov
fs
faddl
test
xchg
movsb
cli
fs
sbb
lahf
inc
test
push
mov
add
adc
add
aam
imul
std
jae
cmp
xorl
inc
jmp
out
mov
add
or
push
insb
loopne
stc
add
and
inc
out
pop
cmp
sbb
rcl
or
sbb
add
mov
imul
sahf
rolb
cmp
inc
dec
test
scas
adc
popf
sbb
fs
cld
inc
sbb
and
subl
cmp
std
add
xchg
adc
push
pop
and
mov
mov
push
mov
test
pop
inc
mov
lods
mov
jp
clc
ja
cli
jmp
je
push
cmp
cwtl
fs
and
pop
mov
and
fisttps
jae
out
rclb
inc
jge
push
jo
push
int3
adc
or
jbe
movsl
scas
mov
out
icebp
das
sbb
in
daa
adc
ja
jo
sbb
std
adc
adc
adc
mov
sub
push
ljmp
push
push
mov
rclb
in
add
adc
and
jle
scas
dec
pop
mov
test
test
add
jo
jb
push
xor
callw
adc
jle
fwait
mov
lods
cld
sahf
mov
mov
int
pop
mov
inc
loop
and
mov
pop
fcoml
inc
push
rcll
cmp
push
sbb
shrl
test
loope
cld
push
outsb
mov
mov
xchg
mov
lock
fsub
movsb
add
push
fsubrs
xlat
mov
je
hlt
pop
mov
sahf
pushf
cmp
jb
mov
je
aaa
cmpsl
fists
inc
aam
push
adc
ljmp
loopne
add
and
inc
mov
inc
movsb
iret
ret
jg
shrb
add
add
push
jl
rcll
ss
cmpsb
mov
loop
in
push
test
inc
sbb
loop
clc
cmpl
sub
inc
adc
inc
push
ret
mov
std
sub
xchg
mov
nop
arpl
push
xor
or
pop
jb
mov
je
mov
and
lock
push
or
mov
push
push
fs
mov
adc
testl
inc
outsb
push
xchg
pop
sbb
lea
add
xor
jo
lock
fs
xchg
xchg
repnz
push
scas
sahf
test
pop
cmp
lods
es
add
hlt
fldenv
jge
mov
jo
imul
stos
jmp
out
mov
push
repnz
jo
mov
xor
mov
test
std
scas
sub
cmc
dec
add
xor
imul
jno
add
or
add
mov
loope
xor
pop
in
jl
jl
jne
shr
add
push
cwtl
inc
hlt
mov
push
pop
cmp
lcall
stc
xchg
loopne
jle
aas
loopne
rolb
dec
sub
outsl
ret
addb
shll
pusha
pop
and
cmp
jl
adc
push
stc
or
adc
or
je
stos
mov
adc
je
xchg
pusha
ss
xchg
ret
fbstp
sub
movb
mov
pushl
sbb
lret
hlt
dec
xchg
push
pop
cld
sub
test
push
xor
xor
je
xor
nop
in
lods
lea
pop
or
pushf
cmp
dec
mov
bound
inc
pop
add
ljmp
dec
idivl
mov
rorb
jb
pop
adc
mov
addb
inc
test
jae
dec
push
aas
push
test
cmp
lods
push
add
push
fistpll
in
int3
pop
mov
or
movsb
add
imul
test
push
test
or
shlb
sbb
call
mov
mov
lahf
dec
fwait
and
xor
push
dec
pop
out
outsb
call
inc
fsubrp
jge
lock
mov
enter
insb
cld
lods
rorl
jae
ss
ffree
mov
or
or
push
add
outsb
shr
mov
add
mov
mov
hlt
xchg
lock
mov
rclb
addb
mov
add
lock
or
stos
mov
cmp
add
fbstp
jb
mov
adc
pusha
insb
adcb
push
cli
and
pop
aam
inc
add
insl
adc
and
sub
sub
cmpsl
cmpsb
imul
jge
jne
lock
lret
sti
fisubrl
xchg
fs
loop
sti
rorb
jbe
jno
push
or
repnz
outsl
pop
push
cltd
cmp
sub
or
mov
addb
mov
mov
cli
sub
dec
cmp
sub
mov
sbb
mov
fimuls
push
js
push
icebp
mov
or
cld
push
test
loope
mov
movsb
and
sub
dec
mov
aas
pop
jno
mov
cld
xchg
addl
sub
xor
jp
inc
sub
or
inc
fs
xor
mov
pop
fmulp
pusha
les
sbb
int3
fsubl
mov
ds
nop
inc
xor
push
dec
mov
push
push
dec
or
stos
fisttpl
jp
gs
xchg
push
jecxz
icebp
daa
or
xchg
fs
outsb
mov
pop
sbb
out
fists
xchg
jb
imul
mov
mov
pop
jge
xchg
shrb
inc
popa
mov
sahf
or
cmp
push
dec
mov
scas
clc
push
fsubrp
lods
push
xor
sub
test
add
mov
rcll
inc
dec
pop
sbb
add
into
push
push
test
jno
xor
repz
sub
sub
jp
lods
mov
mov
jb
rcrb
jge
adc
xor
push
or
sub
ljmp
mov
add
cmp
mov
push
xor
mov
rcrb
mov
pop
jbe
outsl
imul
sbbl
add
cmpsb
mov
adc
inc
push
mov
and
cmc
add
jne
movsb
push
xchg
mov
jae
leave
xor
push
lock
mov
fisubs
mov
or
ljmp
lock
pusha
push
mov
pop
pop
add
or
add
loope
adc
mov
sub
loop
subb
mov
push
mov
testl
call
loop
xchg
orl
rolb
mov
stos
decb
pushf
mov
inc
push
mov
lea
pop
mov
test
xor
std
sub
test
adc
inc
mov
pop
mov
lods
ret
jmp
je
movsl
fidivrs
gs
push
addl
add
int3
testb
jge
or
push
cmpsb
jo
in
das
jo
pop
dec
ret
push
xchg
lcall
add
movq
out
add
xor
outsb
jmp
or
stos
push
xchg
or
cmp
jbe
movb
cli
aad
std
scas
pop
ficompl
xchg
fiadds
jne
fidivs
mov
mov
rcll
repnz
xchg
mov
test
xchg
mov
sbb
push
loop
xor
mov
cli
fs
andb
jae
xor
push
test
test
push
movsl
xchg
mov
pop
rorb
push
sbbl
rorl
inc
jge
or
sub
xor
test
push
adc
dec
push
ds
jmp
ds
xor
movsb
add
cmp
loope
or
sahf
aaa
fidivs
xchg
shl
loop
std
mov
and
xchg
mov
xor
aaa
push
rcrl
inc
lea
retw
and
insl
push
cmpsb
ds
enter
ret
push
aam
enter
sbb
cmp
sub
sbb
push
jae
fiadds
add
pop
jmp
mov
es
repz
pop
or
sbb
push
les
xchg
mov
cmc
fsubs
shl
jg
xor
testb
add
add
jmp
jle
inc
loopne
jge
or
adc
xchg
xchg
shl
call
sbb
pop
add
sbb
inc
jp
adc
lods
inc
sbb
pushl
push
mov
xor
or
negb
test
adcb
jbe
and
out
mov
add
inc
cld
repnz
mov
test
cmp
and
xchg
movsb
cmp
loop
pop
rclb
cmpsb
jb
es
ss
nop
jl
lods
testb
push
fisttps
lcall
aas
and
dec
negb
mov
fbld
out
inc
cmp
xor
fcmovne
subb
xor
in
mov
rorb
lock
pop
mov
fcmovbe
ret
xchg
sub
mov
out
clc
xor
ds
fs
or
add
add
dec
and
lock
mov
ror
add
add
xor
ror
add
jo
pop
mov
lret
inc
adc
push
adc
leave
inc
add
lock
xchg
lcall
push
or
or
xor
insb
push
inc
nop
xlat
out
and
fsubrl
or
clc
or
and
pop
push
jmp
ds
or
mov
loopne
int3
mov
jb
lret
jno
scas
call
inc
outsl
ds
dec
add
push
das
add
push
sub
mov
lcall
inc
lds
push
je
inc
xor
or
int3
push
jno
add
loopne
adc
jb
rcl
adc
inc
aad
inc
outsb
xchg
cmp
sar
js
dec
xor
rol
cwtl
xor
dec
lods
cmp
repnz
insl
sub
and
adc
and
dec
dec
stos
scas
xorl
mov
pop
mov
es
push
jge
shlb
jl
inc
mov
jmp
stos
outsb
aam
jge
and
sbb
xor
or
jmp
pop
popl
rorl
xlat
cli
dec
mov
or
cmp
pop
jne
inc
dec
or
or
sub
add
push
ret
andb
fidivrl
xchg
call
fdivrp
mov
pop
nop
or
add
adc
test
cmp
ja
lahf
cwtl
xchg
fisubrs
movsb
push
xorl
call
mov
and
cmp
push
fs
or
jb
mov
dec
les
cmp
add
and
jae
stc
mov
xchg
loopne
adc
dec
mov
or
notb
pop
mov
test
push
xor
inc
and
jmp
cli
outsl
add
int3
cmp
push
call
or
jb
mov
inc
cmp
lods
pop
add
mov
cmc
and
std
ficoml
push
pusha
aam
fisttpll
pop
cld
dec
add
neg
shll
mov
mov
xor
dec
mov
adc
in
into
adc
jmp
push
in
and
dec
mov
movb
loop
sbb
scas
dec
in
add
movsl
or
ret
jae,pt
jp
mov
xchg
lock
and
stc
cmp
add
imulb
or
xor
jbe
gs
jl
pop
push
mov
and
fstl
xchg
test
aaa
xchg
insb
mov
push
add
inc
aaa
or
jp
cmp
sub
mov
xor
rclb
and
cld
or
cmp
lds
test
or
jge
aam
ficoms
adc
lahf
push
sbb
loop
addr16
mov
out
mov
mov
dec
sarb
push
aam
cmp
push
mov
xor
jne
lea
repnz
nop
int3
insb
movsb
push
xor
pop
push
js
and
int3
or
push
add
mov
outsb
inc
emms
dec
or
data16
aad
mov
stc
adc
xchg
xor
call
push
inc
cmp
ret
or
in
pop
add
mov
fisttpl
test
sbb
bnd
call
inc
xor
pushl
arpl
fs
sbb
push
jp
les
cs
dec
cmp
xchg
lods
ljmp
adc
rorb
ret
jecxz
fimull
jmp
out
and
jge
add
outsb
inc
js
sbb
ret
jb
xor
mov
mov
push
dec
lret
jg
aas
add
add
adc
call
int3
or
push
in
sbb
sbb
lahf
or
adc
xchg
xlat
testb
adc
mov
push
in
xor
pop
es
jne
xor
aaa
mov
movl
push
je
icebp
pop
insl
mov
nop
aas
jnp
sarb
mov
dec
xor
hlt
lret
add
int
into
or
and
cmp
popa
push
imul
xor
inc
in
rolb
sbb
and
and
jmp
cmp
adc
add
adc
push
pop
lock
sub
mov
xchg
mov
push
sub
mov
rcrl
or
jp
shll
jp
cmp
mov
mov
adc
fdivs
es
fidivs
add
cmp
outsb
jmp
add
icebp
ljmp
and
push
sub
add
incl
test
jne
cmpsl
fwait
or
sahf
je
mov
std
sbb
xchg
add
and
xchg
cli
adc
jle
pop
mov
daa
or
add
call
push
shrb
push
fs
jle
sbb
cli
push
pop
aam
mov
inc
test
sbb
rol
jno
jg
ds
mov
js
repz
add
fs
lock
imul
xor
subb
aas
pop
jmp
sar
in
fcoms
shrb
sub
adc
pop
test
inc
add
adc
addl
sbb
movsb
shl
stos
push
adc
movsb
test
and
jge
push
in
lgs
xchg
mov
fsubrl
push
loope
out
sbb
xchg
dec
sar
mov
push
aam
ret
push
leave
adc
jl
lret
cld
pusha
mov
sbbb
ljmp
sub
mov
cmpsl
orb
fsubrl
jge
mov
adc
push
jmp
jb
or
and
push
cmove
mov
adc
push
xlat
out
inc
addl
push
xlat
fcomps
dec
js
loop
fisubl
mov
les
or
lcall
mov
push
or
jmp
mov
sbbl
cmp
mov
test
mov
push
or
imulb
mov
lods
mov
push
pop
add
repnz
ret
xchg
pushf
or
mov
pop
movsb
icebp
mov
jmp
dec
incl
shrl
scas
push
test
xchg
push
sub
pop
mov
popf
movsb
andb
mov
sub
mov
add
cmp
lock
je
mov
sti
ret
nop
dec
jo
insb
call
shl
subb
xor
dec
jecxz
icebp
mov
push
mov
add
jmp
push
shrb
sbb
inc
inc
jo
xor
idivb
adc
or
jae
int
jnp
jg
cli
addb
ret
pop
mov
outsl
sbb
out
inc
stc
inc
mov
jnp
mov
and
cmp
dec
mov
mov
into
xor
mov
fistl
dec
mov
js
or
cmp
clc
pusha
sub
push
scas
std
lea
mov
movsb
fs
aas
adc
cwtl
fsubs
jmp
in
lods
mov
or
in
dec
sar
cwtl
xor
testb
ret
inc
out
mov
icebp
pop
dec
jg
or
cmpw
fnstenv
xor
mov
jecxz
sbb
add
mov
call
or
mov
xor
leave
sbb
push
mov
jmp
jbe
rclb
mov
push
push
stos
push
outsb
ss
dec
js
sarb
inc
fildll
shl
or
jge
adc
ds
loop
popf
fs
push
mov
mov
lcall
mov
std
jno
pop
push
dec
fadds
push
fiadds
mov
jne
loopne
gs
mov
mov
rclb
sbb
adc
adc
mov
mov
jg
pop
insl
push
push
cmpsb
or
mov
mov
dec
mov
bound
test
shll
outsl
mov
cli
jg
outsb
sbb
addl
push
pushl
push
cmp
nop
inc
loop
add
dec
in
jg
shll
out
push
movsl
orl
xlat
push
push
mov
and
fwait
pop
hlt
shl
and
mov
dec
mov
or
rorb
pop
inc
inc
leave
or
cld
sub
or
mov
pop
mov
inc
jne
decl
movsb
and
lods
pushf
ret
pushf
pop
aas
pusha
in
inc
dec
pop
jge
ret
adc
nop
add
pop
dec
cmpsl
inc
mov
inc
ja
je
lret
enter
jge
jmp
test
inc
xlat
mov
fiaddl
stos
adc
push
cmp
cmp
xor
test
mov
xor
xchg
adc
ss
pusha
test
mov
outsl
cmpsb
add
dec
sbb
outsb
outsb
add
test
ja
mov
dec
push
pop
out
rorl
int
bound
xor
rolb
cmp
xor
in
dec
mov
outsl
push
inc
andb
int3
adc
loopne
hlt
out
test
sub
xor
mov
xchg
sbb
imul
div
mov
fsubl
test
movsl
cs
add
fnstsw
out
push
cld
lret
bound
enter
push
sub
shll
data16
in
sub
push
int3
mov
mov
popa
push
lret
push
faddl
aad
push
mov
sub
scas
mov
movsb
aas
cmpsl
mov
adc
enter
pushf
mov
ret
ret
es
push
dec
mov
test
mov
jne
aam
in
rcl
lods
ret
sbb
std
push
loope
rcrl
mov
push
shlb
push
test
sbb
xchg
stos
int3
push
data16
sub
nop
push
andb
into
loope
mov
add
stos
push
es
gs
cmp
jle
lea
xor
add
push
repnz
jecxz
jmp
add
sub
cmpl
push
enter
xor
shlb
call
xor
ljmp
dec
je
inc
jg
pop
inc
test
or
push
sbb
cmp
cmp
dec
sub
call
lods
sub
cmp
jne
inc
push
aaa
mov
mov
fcoml
inc
inc
stos
out
jmp
cli
add
inc
imulb
push
je
daa
push
cld
xchg
imul
test
int3
adc
and
pop
inc
push
mov
inc
push
outsb
xor
and
adc
cmpsb
fs
in
dec
push
out
rclb
xor
inc
je
les
adc
dec
mov
push
inc
sub
sti
add
mov
ljmp
cmp
mov
sarl
jne
andb
pop
pop
leave
mov
and
jae
aad
pop
mov
jne
and
aad
xchg
mov
push
clc
mov
lahf
cld
push
add
loop
stos
mov
imul
inc
dec
test
mov
xor
jmp
ljmp
add
sbb
inc
int3
cmp
das
mov
fs
add
push
cs
test
inc
jo
fs
pop
adc
and
or
cli
pop
rcr
aas
push
fdivs
sub
lock
aas
mov
gs
lock
mov
insb
bound
sub
xchg
pop
popa
mov
stos
add
push
sbb
push
inc
push
insl
add
dec
push
add
inc
es
call
ret
test
push
outsb
mov
add
cmp
adc
fldl
push
cli
push
cli
not
test
js
inc
add
outsb
les
jmp
inc
push
ljmp
mov
cmp
mov
rorl
add
mov
pop
sbb
dec
xor
sbb
jecxz
fidivl
xor
inc
call
sub
xchg
shlb
or
push
rorl
mov
cld
cmc
adc
repz
mov
and
xchg
test
fists
sub
shll
or
test
pop
outsb
les
push
das
sub
xor
aaa
insb
adc
push
aas
orb
repz
repnz
or
mov
and
aam
adc
xor
xchg
adc
jbe
cli
xor
adc
cld
rcll
sti
push
pop
cwtl
dec
cmpl
mov
jo
ds
adc
pop
out
add
sbb
ja
mov
hlt
fsubrl
mov
add
sub
sub
mov
sahf
inc
enter
sbbl
inc
sub
sub
mov
incl
add
jno
push
hlt
dec
lods
adc
sbb
fmull
push
mov
in
add
movsb
add
mov
mov
arpl
cs
mov
lcall
xor
jmp
sub
adc
lcall
insb
mov
orl
loopne
sub
push
es
test
test
cmp
mov
test
and
lock
fimull
cmpsl
xorb
sbb
mov
dec
das
shl
mov
enter
loopne
jecxz
pop
add
repz
insl
xchg
in
lcall
xchg
pushf
and
les
fmul
mov
loopne
inc
push
sub
sbb
js
lret
mov
test
inc
movsb
shlb
adcb
jbe
sub
jle
je
adc
mov
bound
hlt
add
paddq
cmp
jle
icebp
or
pop
mov
enter
imul
or
sub
mov
mov
dec
clc
cmpsb
push
fimull
mov
mov
dec
add
jmp
scas
mov
jns
and
and
lahf
loop
fwait
inc
in
xor
mov
addb
cli
xlat
clc
add
or
fiaddl
movsb
add
leave
adc
add
scas
aaa
insb
add
jg
ds
incl
inc
mov
outsb
push
hlt
mov
fcoms
cmp
push
sbb
xor
fdivs
cmp
mov
mov
mov
insb
and
pop
push
dec
add
in
xchg
xchg
hlt
jmp
mov
sub
push
mov
fidivrl
and
push
or
and
fcoms
inc
add
movsl
sub
jl
mov
adc
push
adcb
lods
push
adc
fistpll
push
movsb
jb
adcl
std
xchg
jp
popa
std
mov
shrl
dec
lea
add
pop
cld
repnz
int
xchg
inc
dec
dec
push
mov
and
call
mov
inc
ret
jbe
adcl
or
xchg
rclb
push
sahf
rcll
dec
lcall
lods
adcb
jns
gs
inc
xor
movsb
jle
inc
xor
jge
popf
int3
clc
add
add
xor
shlb
sub
cmp
cmpsb
lcall
or
push
jo
pop
mov
ljmp
mov
js
decl
lahf
mov
lock
inc
xor
ret
add
add
mov
outsb
mov
inc
sub
xchg
rorb
rolb
rclb
fimuls
inc
loop
clc
je
call
inc
sahf
ljmp
pop
movsb
push
fnstsw
or
jae
adc
adc
add
add
adc
out
andb
xor
int3
mov
dec
mov
ljmp
push
out
and
dec
mov
jmp
lcall
lea
test
fnstsw
sbb
js
mov
mov
and
add
mov
mov
or
cwtl
in
add
push
enter
test
and
call
jmp
push
sti
and
fbld
dec
mov
push
fs
insb
bound
lret
add
out
dec
mov
pusha
inc
mov
cs
mov
ret
jbe
push
mov
inc
xchg
push
ljmp
icebp
icebp
cwtl
jo
cmp
push
rcrl
push
ret
or
sbb
add
pop
imul
loopne
int3
in
mov
push
add
cmpl
pop
lret
xor
add
mov
or
add
call
pop
xchg
add
mov
fcoms
clc
insb
push
push
scas
loopne
sub
test
adc
xchg
inc
add
adc
adc
push
mov
inc
subb
adc
mov
fwait
mov
mov
push
mov
pop
fnstsw
sahf
or
push
xor
and
out
shrl
dec
jns
addl
add
test
gs
inc
in
mov
fadds
je
mov
test
icebp
jl
or
dec
dec
xchg
cld
rcrb
xor
call
inc
or
xor
jne
mov
loopne
add
push
data16
in
add
inc
jl
push
test
call
mov
push
inc
andl
int
pop
jo
nop
inc
stc
push
push
pop
cmp
push
or
sbb
into
stos
xor
mov
call
xchg
icebp
outsb
inc
inc
sbb
mov
cmp
mov
pop
inc
sub
mov
loop,pt
jl
cmp
and
jge
loop
push
test
out
mov
add
dec
mov
inc
mov
sti
lods
and
mov
sbb
add
lock
je
in
mov
sub
arpl
or
sbb
cmp
inc
cmp
scas
cmp
add
mov
xor
shlb
jbe
adc
jecxz
shlb
ja
sbb
push
inc
inc
popl
loope
loop
lret
test
ret
or
and
or
pushf
jmp
jbe
xor
insb
cmp
sbb
inc
jl
push
loop
sbb
es
push
aaa
lcall
sbb
push
pop
push
fimull
push
lods
outsl
push
das
clc
dec
popf
sbb
mov
sbb
xor
shlb
add
adc
insl
pusha
push
js
inc
insl
sub
mov
cli
stos
xor
push
lcall
dec
inc
loope
pop
std
mov
in
inc
sub
mov
mov
pop
xchg
xor
push
rcll
aas
mov
or
call
dec
or
jne
je
inc
inc
lock
push
loope
xorb
sbb
inc
frstor
adc
mov
nop
push
xor
or
push
inc
and
clc
dec
icebp
sbb
add
push
enter
sbb
mov
fdivrp
and
add
mov
mov
lock
jne
mov
in
icebp
xchg
jne
push
lds
enter
loop
fiaddl
xlat
sub
repnz
fucomip
rorb
adc
icebp
mov
mov
dec
inc
mov
loope
or
lock
add
popa
test
popa
std
dec
mov
lock
mov
shll
test
cmovl
add
push
and
arpl
ja
add
mov
int3
ficoms
clc
in
pop
sar
popa
ret
jp
add
inc
inc
jb
xor
push
add
mov
outsl
divb
pop
rclb
adc
inc
add
out
mov
sub
mov
ret
cmp
mov
sub
jmp
pop
aam
add
mov
jmp
ficoml
clc
adc
stos
or
dec
cmpsb
dec
ja
out
and
push
nop
jne
dec
sbbb
sub
fs
cmp
clc
mov
movsb
push
test
or
adcl
and
je
add
int3
shlb
mov
enter
adcb
mov
push
mov
lret
mov
leave
clc
push
xor
push
sbb
insb
test
into
lea
cli
adc
mov
mov
test
jmp
sbb
add
sub
fiaddl
or
ljmp
pop
lock
xchg
inc
jbe
stc
add
jb
jle
mov
ds
dec
repnz
in
subb
dec
sub
jb
push
notb
fcoml
inc
rorl
lods
xchg
mov
add
pop
in
push
sbb
enter
xchg
sbb
int3
aas
mov
adc
inc
inc
mov
push
ret
push
adc
pop
rol
sub
sbb
sarb
out
addb
jbe
or
aas
push
or
fildl
xchg
push
sbb
lcall
add
cmp
mov
cmp
add
fiaddl
mov
xor
push
add
adc
mov
jecxz
testb
push
mov
cmpsb
cld
pushf
clc
mov
push
mov
xchg
clc
push
xchg
mov
cmp
dec
test
fs
shrb
mov
add
jmp
sub
clc
and
movsb
loope
sbb
int3
jge
sbb
add
imul
pop
in
jne
in
adc
ds
add
jmp
cwtl
jmp
xchg
stc
jmp
or
adc
test
test
sbb
pop
add
fimull
incl
in
aaa
inc
adc
gs
xorb
push
mov
je
nop
int3
les
push
sub
or
lock
adc
adc
hlt
ud0
push
icebp
pop
leave
cs
cld
aaa
inc
pop
sbb
mov
test
add
out
or
push
push
rolb
add
cmp
push
ficompl
inc
loop
ljmp
ja
xorl
inc
or
jne
mov
movsl
data16
movl
mov
cmp
mov
push
hlt
adc
fs
inc
lods
stos
lods
les
mov
sub
nop
aam
mov
xlat
xor
mov
cmp
push
cmpsb
call
outsb
dec
loope
inc
cmp
mov
call
push
dec
outsb
fs
das
dec
nop
push
test
mov
pop
push
inc
mov
jmp
shll
loopne
cmp
push
icebp
incl
pop
or
lcall
stos
arpl
pop
mov
jmp
cmp
xorb
xchg
sbb
and
inc
xor
sbb
mov
xchg
add
je
pop
repz
je
mov
sub
mov
fsubrp
hlt
adc
xlat
jp
out
inc
push
adc
mov
ret
adc
in
addb
jmp
rol
ss
jo
pusha
push
fs
add
lods
or
mov
push
mov
rcrb
mov
int
outsb
jbe
imul
lea
adc
std
adc
lret
or
mov
and
shl
xchg
icebp
add
pop
mov
inc
dec
fmull
iret
xchg
inc
lea
pop
add
pop
cmp
jbe
add
inc
je
mov
les
adc
pop
loop
loopne
push
sub
pop
pushf
mov
stos
dec
inc
fbld
sarb
push
adc
movsb
popl
mov
repnz
mov
jmp
and
jo
push
mov
xor
push
jns
jmp
push
sub
adcl
dec
js
inc
dec
je
xor
and
push
pop
arpl
out
stos
ja
push
clc
outsb
adc
and
inc
gs
xor
clc
shlb
syscall
mov
add
mov
push
pop
nop
inc
outsb
shll
inc
adc
hlt
test
insb
xor
icebp
mov
lock
pushf
add
add
xchg
mov
pop
push
loopne
rorl
sbbb
adc
cmp
call
ret
jbe
xor
mov
and
push
je
movb
aaa
add
xor
sbb
add
sbb
pop
pop
xor
or
sbb
jb
loope
sti
and
cmp
repnz
imul
or
rep
inc
fadd
mov
decl
or
pushl
mov
pop
push
sbb
cmp
adc
pop
push
mov
orb
add
sub
shl
mov
testb
adc
popa
ja
mov
jbe
incl
shlb
adc
cltd
xor
fwait
out
cli
rcrl
data16
dec
xor
fisubs
sub
pusha
xchg
add
mov
mov
dec
clc
cmpsb
loopne
fdivr
jecxz
adc
add
jno
pop
xor
mov
push
mov
andl
out
mov
xor
mov
mov
test
pop
pop
add
inc
mov
inc
loopne
mov
mov
jo
in
adc
test
frstor
pop
add
notb
jne
je
inc
push
add
cmp
loope
movsb
or
lock
fadd
inc
inc
arpl
ds
dec
loopne
in
stos
loope
into
incl
lock
or
pop
punpckhdq
mov
add
add
sub
lahf
inc
movsb
add
hlt
and
sbb
mov
mov
push
cmpb
mov
rcl
test
mov
or
add
subb
inc
xchg
test
cmp
dec
ret
mov
push
filds
pop
add
push
int3
push
les
ret
pop
mov
fwait
push
jbe
shlb
push
mov
push
jge
adc
mov
je
hlt
gs
call
add
outsl
jno
testb
ds
js
dec
fcmovnu
mov
std
incb
out
into
inc
loopne
jno
push
adc
xchg
or
test
leave
in
inc
sar
sbb
push
clc
ds
test
pop
mov
cmp
ljmp
sbb
mov
test
mov
les
movsb
cmp
and
mov
imul
adc
mov
dec
lea
add
cmp
or
xor
in
les
test
outsb
jle
xor
rol
fstl
push
adc
push
cs
ljmp
ret
rclb
outsl
mov
insl
jl
ds
mov
outsb
adc
push
add
aam
bound
push
mov
add
jmp
mov
push
add
stos
mov
dec
xchg
add
into
rorl
pop
mov
mov
push
and
fisubrs
mov
aas
imul
add
leave
add
pushl
lret
test
pusha
xor
inc
push
mov
iret
js
cli
and
ficoms
pop
mov
ljmp
jg
faddl
fs
add
addb
and
fs
xchg
insl
pop
js
fsubrl
leave
cld
stc
mov
mov
les
sub
loopne
push
jo
outsl
stos
inc
jnp
lds
sub
push
and
in
mov
xchg
leave
mov
pushf
and
jge
cmp
scas
adc
mov
cmp
test
push
inc
mov
scas
cmpsb
push
adc
mov
mov
rolb
mov
movsb
dec
inc
fs
or
lea
out
movb
adc
loope
daa
loope
mov
jb
ret
mov
loopne
loop
icebp
leave
loop
add
sub
add
add
mov
inc
jae
fcomps
fisubl
sbb
inc
xchg
rolb
push
or
push
ljmp
shlb
call
pushl
incl
into
push
insl
and
mov
xor
mov
inc
xchg
mov
or
in
icebp
roll
mov
mov
adc
and
xchg
rcrb
lret
mov
or
dec
loopne
inc
mov
clc
clc
inc
jmp
cld
out
push
xor
mov
push
pop
adc
push
std
push
cmp
xor
aam
in
es
sarb
push
mov
nop
clc
push
in
data16
sub
adc
call
xor
jae
mov
xor
ja
les
or
loop
sub
sbb
cmpsl
mov
std
inc
shld
and
cld
xlat
fs
pop
push
mov
addr16
push
add
cmp
fldl2e
inc
stos
or
adc
fnsave
inc
mov
mov
mov
pusha
sbb
dec
sub
or
and
push
jo
mov
xor
int3
push
stc
js
test
sahf
xchg
pop
js
inc
push
dec
cld
sub
mov
push
dec
clc
jmp
and
fistpl
push
scas
xor
lahf
cli
xor
and
sub
inc
data16
push
test
or
in
xlat
add
push
fmuls
sub
fidivrl
xlat
and
xor
sub
pushl
jl
inc
sbb
mov
jmp
xor
fwait
imul
add
pop
vmovntpd
sarb
mov
add
sbb
pop
jne
sub
ja
das
pop
add
push
adc
jae
dec
ljmp
jo
or
stos
inc
mov
add
mov
xor
mov
ret
loop
lds
ret
adc
mov
sahf
jo
xorb
push
fisttpll
fisubrs
jmp
jmp
add
or
mov
in
pop
mov
xchg
mov
mov
pop
and
sbb
inc
jo
mov
inc
and
jo
je
xchg
shrl
add
push
rclb
push
ret
in
and
add
adc
dec
es
data16
inc
test
sub
xor
sbb
jmp
es
mov
fsubl
mov
pop
add
push
pushf
testb
cmp
or
xchg
and
ficomps
push
test
inc
dec
enter
push
sub
cmp
repnz
fs
mov
decl
outsb
dec
fs
ds
xchg
or
mov
ss
xchg
adc
ds
push
add
and
aaa
mov
pop
orb
cmp
das
or
cwtl
push
jnp
int
mov
loope
xchg
cmp
mov
les
jle
lcall
sbb
push
push
pop
and
stos
and
je
pop
cmp
das
add
mov
lcall
loop
roll
or
mov
out
lret
mov
lock
aam
pop
aaa
and
cltd
mov
pop
dec
sbb
mov
into
arpl
adc
jb
push
dec
push
xchg
dec
sbb
and
push
nop
pop
and
push
call
pop
cmp
or
jmp
jne
je
xor
dec
sahf
pop
in
cmp
mov
mov
and
adc
dec
dec
adcl
add
repnz
push
loopne
cmp
adcl
dec
xchg
outsb
cs
aam
mov
push
sub
pop
xchg
mov
mov
jmpw
mov
int3
fs
daa
jb
adc
sub
mov
je
clc
inc
jb
or
sub
test
adc
mov
outsl
pop
jbe
push
in
pusha
push
adc
push
or
mov
jns
movl
pop
add
push
jnp
mov
cmp
mov
std
push
pop
push
push
mov
rorb
ficoml
rolb
lock
cltd
aam
mov
popf
int3
inc
loop
sbb
and
and
shl
xchg
mov
adc
roll
insb
imull
loop
push
das
or
jl
mov
idivl
outsb
push
je
or
push
mov
les
or
pop
mov
pop
and
and
adc
fmul
and
movsb
mov
sub
sbb
ret
ja
sub
push
invd
roll
mov
call
push
lock
push
jae
aam
add
rolb
mov
mov
add
mov
insb
aad
mov
insb
push
xlat
bound
or
pop
mov
jle
push
imul
add
add
push
xor
and
jle
dec
in
jb
and
shrb
jp
or
lcall
adc
rcrb
add
scas
xchg
push
mov
fnstcw
adc
pop
outsb
or
pop
cmp
outsb
inc
mov
mull
ljmp
mov
test
aad
dec
mov
sbb
add
in
shrb
int3
shl
pusha
andl
adc
and
pusha
push
xorl
sub
ret
fnstenv
cmovns
stc
sbb
push
movsb
lahf
pushf
sahf
inc
out
pop
or
call
in
push
mov
ret
push
adc
ror
or
or
call
mov
ss
movb
or
ja
xor
bound
mov
adc
push
sub
inc
push
pop
sbbb
fs
fidivrl
sub
stos
dec
dec
and
or
add
adc
sbb
ds
mov
aam
mov
pop
or
andb
push
test
fucomip
xchg
nop
jo
sbb
adc
test
push
loopne
incb
jl
cmp
and
push
mov
data16
push
jp
add
les
dec
push
call
fsts
pop
push
pop
rcrl
mov
cwtl
aam
ret
push
ds
in
mov
shl
xchg
lcall
lods
movsb
ljmp
testb
mov
jne
mov
fs
cmpsl
jo
aam
pop
imul
push
dec
rolb
hlt
add
mov
mov
and
lcall
adc
mov
fcmovbe
leave
scas
into
or
push
je
mov
pop
ss
lods
mov
inc
cmpsl
mov
out
outsb
mov
xchg
xor
push
push
inc
add
sbb
es
push
aas
xor
mov
lcall
add
sbbb
aam
popa
int
call
dec
mov
dec
push
mov
shlb
sbb
lcall
and
outsb
mov
cmp
in
inc
loop
lods
sub
mov
jle
js
ret
jb
sbb
xchg
sub
adc
mov
and
aaa
add
jbe
xor
or
scas
test
push
push
xor
push
adc
add
add
lcall
ficoml
adc
cmp
or
aam
lcall
test
inc
dec
nop
mov
fxch
dec
loopne
adc
data16
test
adc
push
add
test
push
ret
add
xor
mov
jmp
add
mov
push
cld
sub
movaps
call
rclb
inc
push
ljmp
jne
jne,pt
fnsave
inc
call
in
popa
fiadds
pop
sub
int3
fs
pop
xchg
pop
orl
imul
sbb
push
ficoml
nop
movsl
je
and
popf
faddl
gs
popa
fldl
insb
add
jl
fiadds
into
add
inc
aam
inc
jg
inc
rcrb
cmpsb
adc
shr
or
jae
or
push
pop
lcall
movmskps
jge
dec
pop
or
out
pop
scas
cli
or
sub
insl
insl
mov
mov
mov
add
add
mov
or
test
mov
fs
pop
push
cmp
fcoml
arpl
rcrb
sub
add
sbb
mov
dec
repz
dec
test
adc
bound
repz
or
aam
loopne
lea
adcb
int3
push
add
pushf
sbb
sar
adc
dec
pop
call
push
test
mov
adc
test
pushf
or
pushl
pop
mov
mulb
testl
out
pop
sub
jl
cs
fsubrs
mov
dec
mov
xchg
gs
mov
sub
xor
adcb
mov
inc
insl
xchg
or
test
cmp
or
insl
ficoms
mov
incl
mov
andl
add
divl
arpl
enter
xchg
loope
xchg
mov
mov
cmp
stos
jp
jmp
int3
mov
mov
mov
inc
and
sub
xor
mov
mov
movsb
xchg
sbb
xor
rcll
sub
dec
enter
add
stos
sub
pop
fimull
loop
mov
mov
sbb
test
mov
addb
add
leave
mov
push
popa
fcoml
call
inc
pop
push
push
pusha
sti
inc
ret
hlt
in
pop
loopne
cmp
pop
lea
mov
xchg
add
push
and
jl
fs
cmp
mov
nop
push
push
inc
std
dec
push
jmp
xlat
scas
imul
pop
orb
add
push
sbb
insb
pop
mov
mov
ja
sbb
pop
mov
gs
loopne
andb
in
lock
ret
loopne
lret
push
add
sarl
push
aam
adc
jp
cltd
xor
xchg
jne
mov
jge
dec
push
idiv
push
sbb
adc
push
insb
mov
clc
xlat
lods
adc
outsl
lods
insb
dec
dec
sub
ret
dec
push
int3
or
mov
mov
add
adc
jmp
femms
mov
fdivs
in
out
mov
les
adc
fnstcw
or
xor
xor
push
dec
leave
bound
sub
mov
or
fcoms
sbb
adc
pop
ljmp
nop
mov
inc
cwtl
shl
call
adc
movsl
push
fisubrs
outsb
inc
jp
add
and
and
adc
sarb
cs
clc
ret
add
lock
adc
xchg
inc
inc
bound
mov
mov
xor
inc
ss
push
cmc
aas
adc
shll
xor
int
cmpsb
add
push
loop
les
jge
mov
cmp
rorb
int3
dec
test
sbb
xchg
fidivrl
add
lock
test
dec
sahf
push
mov
cmp
jbe
je
push
cmp
inc
sbb
cmp
or
imul
js
add
addb
outsl
push
call
test
mov
loop
and
into
lods
push
cvtps2pi
mov
add
adc
lret
popf
rclb
dec
sub
sub
into
add
imul
clc
pop
dec
loopne
push
mov
jmp
jmp
je
jb
and
push
dec
mov
subl
mov
dec
mov
and
xor
mov
stc
call
xor
cmpsb
sbbl
pop
pop
leave
decl
xor
lret
dec
mov
fildll
adc
jne
push
push
push
cwtl
fisubl
mov
int3
push
jb
inc
mov
ficoml
pop
movsb
test
and
sbb
pop
jge
xor
sbb
stos
cmp
mov
fdiv
aam
or
push
adc
fs
sub
in
sbb
in
adc
mov
inc
xchg
mov
jg
call
das
cmp
imul
pushf
faddl
int3
jge
sbb
add
cmp
pop
push
pop
outsb
lods
mov
adc
jmp
lock
mov
movsb
pop
scas
add
xchg
fimuls
pop
cld
and
orl
fld
les
xchg
icebp
push
nop
or
cmpsb
scas
roll
mov
fcompl
mov
jle
lea
lahf
add
leave
aad
mov
lea
sbbl
das
inc
loopne
roll
mov
lea
or
shr
shrb
push
cmp
dec
xchg
mov
fldcw
pop
popa
fcoml
jne
adc
xorw
sub
sbb
outsl
test
sbbl
ss
lcall
push
inc
inc
std
shlb
pop
xchg
mov
leave
rcrb
mov
bound
inc
push
adc
sub
jmp
movsb
mov
loop
jb
pop
sbb
test
call
mov
add
xor
push
adc
mov
inc
aam
or
mov
push
mov
in
adc
mov
jb
call
lcall
dec
pop
pop
pop
mov
mov
push
push
pop
dec
out
popa
outsb
mov
push
sbb
xchg
in
cmp
in
cmpsl
cmp
mov
mov
in
jge
dec
mov
inc
pop
pop
add
filds
sbb
mov
jb
movsl
cld
cld
add
xchg
sbb
push
mov
loop
sbb
loope
jge
and
jb
dec
mov
clc
adc
jmp
xchg
or
data16
adc
dec
lea
pop
in
mov
and
xor
je
sbb
push
addl
jne
test
cmc
popl
repnz
xor
pop
mov
sar
mov
lea
cli
and
cld
ffree
inc
jne
push
outsl
xchg
loope
jo
hlt
inc
dec
mov
in
or
pop
adc
inc
pop
push
mov
ret
cmp
jne
jp
sbb
je
pusha
orb
je
xorl
in
movntps
mov
out
sbb
push
js
pop
lods
rcl
scas
xor
lods
and
je
repnz
mov
call
adc
add
dec
push
sub
addr16
lock
pop
cld
loop
loop
das
dec
jo
enter
sarb
adc
aam
fistl
cld
out
xchg
ss
or
dec
loop
mov
adc
adc
bound
js
jecxz
mov
int
jl
jo
push
inc
and
xlat
aam
add
mov
or
push
inc
push
and
sbb
or
inc
push
movsl
cs
outsl
or
xchg
pop
mov
cmp
pusha
mov
mov
les
jo
popa
adc
ss
dec
test
or
fisubrs
aam
in
mov
pop
adc
faddp
or
loopne
inc
sub
mov
shl
cmp
ljmp
bound
subl
lcall
push
push
into
pop
test
mov
in
add
mov
or
inc
xchg
adc
loopne
cld
pop
mov
ss
and
nop
jno
stos
mov
rcr
cwtl
scas
cmp
mov
pop
push
inc
push
aaa
pop
xchg
push
add
pop
mov
sub
sbb
stos
je
divb
mov
fldt
dec
sbb
dec
or
test
push
lret
jle
and
out
pop
push
dec
push
clc
adc
sbb
ljmp
sub
cli
pop
lret
or
lods
stos
xchg
roll
xlat
clc
ret
test
dec
mov
jmp
movsb
flds
das
jbe
mov
xchg
inc
or
dec
ss
das
push
clc
xor
test
pop
xchg
orl
sub
dec
or
in
mov
sub
mov
push
fucomi
fisubrs
mov
cli
jne
and
std
cmpsb
push
push
xacquire
sbb
inc
shrb
jo
je
jnp
inc
movsb
mov
fisubrl
stos
push
mov
xor
pop
dec
inc
fidivl
je
jl
or
andl
aas
int
cmp
xchg
sub
inc
mov
push
pop
sahf
leave
xor
sbb
in
pop
adc
mov
add
mov
into
jmp
test
incl
andb
sub
fildl
clc
clc
into
test
popa
dec
sub
mov
fsubrl
adcb
push
push
lea
cld
dec
dec
jmp
sbbl
xor
cmp
pop
in
int3
push
sbb
jne
adc
daa
pushf
or
out
jne
mov
mov
pop
add
or
or
scas
sarb
clc
filds
scas
stc
aaa
adc
adc
outsl
pop
fcomp
bswap
or
or
pop
mov
push
out
pop
dec
add
mov
pushf
test
mov
xchg
cmpsb
in
fs
in
out
cmp
cmpl
leave
adc
push
sbb
push
cwtl
jg
psubb
cmp
call
sub
dec
jg
fnstcw
insb
mov
xor
dec
mov
lahf
je
scas
adcb
sbb
inc
ds
repnz
je
add
pusha
ja
lret
lret
mov
test
int3
add
sbb
and
ljmp
xchg
push
xor
xchg
lret
ficompl
stos
loopne
sub
xor
mov
lcall
cmp
or
xor
ss
scas
add
enter
and
mov
add
dec
les
fdivrl
cmp
adc
es
rolb
pusha
sub
mov
popa
or
insl
testl
hlt
cmp
insb
and
pop
mov
jmp
mov
add
mov
addr16
fbld
sbb
ja
lea
xchg
xor
push
cltd
add
jecxz
lock
push
mov
mov
mov
lods
mov
aam
push
imul
ficompl
push
adc
inc
jmp
lret
adc
fs
push
pop
dec
pop
mov
jl
mov
jge
sub
xorb
push
add
inc
xor
or
fimull
sbb
or
push
mov
cmp
iret
adcb
dec
and
mov
mov
sbb
or
mov
js
push
je
int3
lea
aaa
sbb
mov
mov
cld
push
loopne
or
cmp
jp
imul
sub
adcb
dec
cmpsb
lea
test
adc
sub
push
bnd
mov
hlt
inc
dec
subb
mov
lahf
testb
fsubl
push
sub
xor
loopne
and
push
sti
add
fwait
inc
dec
sti
out
and
or
push
lock
aad
ret
mov
pushf
inc
and
sahf
jl
push
jo
adcl
inc
stos
dec
mov
mov
mov
push
sbb
xor
inc
dec
mov
xchg
lcall
faddl
lds
or
cmp
subb
decb
pop
push
dec
aaa
and
pop
pop
pop
lds
mov
jmp
inc
dec
push
jbe
mov
push
push
test
sbb
sti
jle
pop
adc
dec
lret
pop
sub
xor
push
jae
std
imul
adc
mov
add
cmp
fstpl
xchg
bound
shr
mov
jmp
push
ficompl
in
mov
push
jp
rcl
shlb
dec
incb
loopne
andb
call
shll
push
jle
popa
lret
test
add
pop
iret
dec
dec
test
rorb
push
popa
jl
retw
aam
iret
mov
lret
push
aad
cmp
add
fadd
jp
jae
ljmp
sub
push
mov
js
int3
mov
imul
add
push
xor
add
or
add
inc
xor
sar
fs
xor
lret
mov
cmp
mov
gs
loop
mov
aaa
mov
icebp
mov
insl
jle
dec
imul
or
mov
pop
or
scas
mov
jge
rclb
mov
adc
pop
call
sbb
fsubrs
and
filds
loope
std
stc
sbb
xchg
push
sub
mov
leave
or
sub
add
jl
sahf
lds
sub
sub
aas
xchg
push
cli
inc
lock
hlt
pop
outsl
into
mov
mov
pop
xor
sbbb
bound
sub
xchg
xor
inc
jecxz
les
mov
cli
decl
popa
test
dec
fs
cmp
jl
pop
mov
lcall
xor
and
js
sbbb
pusha
clc
test
add
jb
cmp
hlt
insb
xchg
cs
outsl
add
add
movsb
push
push
in
cmpb
push
cmp
mov
adc
push
inc
inc
jmp
ret
dec
xor
add
dec
add
fs
flds
sarb
jge
aaa
add
scas
pop
sub
cs
mov
stos
int3
mov
cmpsl
sti
mov
call
add
pop
jg
cli
lea
push
cmp
push
out
dec
cmpb
sub
push
ret
ret
pop
loopne
lds
insl
lods
movsb
je
cmp
push
push
lds
in
lods
fst
loop
or
sbb
jg
test
test
cmp
push
lea
jle
jnp
and
adcl
mov
dec
js
mov
or
cs
js
inc
repz
lahf
dec
adc
rol
add
mov
jle
rolb
data16
xchg
sbb
xor
in
lfs
enter
mov
add
negb
jle
and
scas
cmpsb
inc
shl
push
int3
das
cmpsb
or
inc
push
add
das
cli
adc
jge
push
orl
sbb
inc
or
add
or
cmpl
sahf
popa
jge
adc
enter
test
push
jo
sbb
adc
lock
sub
and
ret
call
js
jmp
push
add
push
mov
dec
add
test
adcb
mov
mov
filds
xchg
push
dec
and
lods
les
lret
scas
xchg
add
ret
adc
call
clc
jecxz
pop
add
ror
sbb
rcll
sbb
rcrb
popa
dec
jle
je
xchg
sub
loopne
adc
jp
fs
lods
cmpsb
pushw
cmovo
mov
add
sub
leave
jo
pushf
and
sbb
pop
lcall
mov
fdivl
popf
add
mov
or
shrb
mov
sbb
pop
jne
shll
lret
jmp
pop
push
sub
adc
add
addb
xor
cmp
aam
clc
push
ljmp
ret
push
fisttpl
sbb
in
imul
cmp
je
xchg
or
fistl
sarb
ja
insb
pop
cld
xor
loopne
and
adc
lahf
shlb
mov
jmp
push
pop
js
push
movsb
xchg
fwait
adc
pusha
loopne
jno
rcrb
pop
adc
movsb
and
sbb
xorb
cmpsb
mov
lods
ja
xchg
xchg
mov
dec
push
inc
add
fcomip
mov
push
ret
inc
insb
xor
pop
lea
push
insb
xor
call
mov
aad
int
ret
inc
psrld
xchg
mov
pop
int
pop
fimull
aam
add
jp
fsubs
add
mov
push
push
call
push
mulb
fisttps
in
sarl
rdtsc
aad
mov
fdiv
stos
mov
xchg
movsb
cli
and
pusha
jns
movsb
mov
sbb
pop
jb
xor
roll
inc
cmp
mov
adcl
cmc
jb
rorb
fbld
sbbb
hlt
aas
cmp
sbb
mov
inc
outsl
mov
insb
call
mov
mov
shll
push
scas
pusha
fisubl
orl
or
push
cli
mov
lea
les
sahf
add
popf
rorb
rolb
sbb
dec
ljmp
or
inc
pop
fs
adc
xor
rorl
mov
icebp
mov
xor
cld
xor
mov
mov
mov
clc
je
add
stos
xor
sbb
sub
dec
jmp
adc
jo
pop
inc
ficoms
leave
or
or
sbb
ljmp
cld
push
jg
push
lea
aam
nop
rorb
pushl
xor
xor
cmc
xchg
clc
mov
adc
ds
and
int3
inc
push
stos
jno
add
adc
loopne
adc
adc
push
jbe
xchg
rolb
fisubl
dec
xchg
ljmp
dec
mov
ret
outsl
aad
inc
xchg
shr
mov
call
addb
mov
sbb
mov
cwtl
push
mov
mov
sti
jge
add
movsb
or
adc
dec
add
mov
dec
push
pop
adcl
jb,pt
xlat
loop
fs
mov
xor
loope
addb
lock
fadd
jns
adc
or
rorb
pusha
insl
push
sbb
test
add
cmp
mov
cmp
sub
clc
mov
mov
sar
and
dec
clc
or
lock
cwtl
mov
mov
xor
dec
sbb
dec
push
js
lock
mov
leave
mov
inc
adc
xor
jmp
ret
xor
cs
inc
add
mov
cmp
adc
jne
lcall
mov
xchg
add
sub
xchg
push
gs
fs
nop
gs
jmp
or
std
mov
out
fs
mov
or
lahf
repnz
test
or
and
add
mov
cli
push
testb
cmp
pop
add
cmp
push
jmp
mov
adc
mov
stos
push
jge
push
jb
xlat
clc
dec
mov
adc
clc
imulb
jl
inc
inc
add
pusha
mov
in
ds
push
in
jo
mov
cld
sbb
pop
or
lea
mov
movsl
cld
fmuls
push
push
data16
or
lock
sarl
jmp
sub
push
push
adc
cli
cmp
sahf
inc
push
aam
sbb
add
inc
aad
mov
ja
sbb
daa
cmp
jb
adc
push
je
in
sub
cld
pop
inc
orb
ljmp
addl
fs
jle
outsb
pop
fwait
or
xor
imul
adc
lcall
in
mov
pusha
mov
cmpb
int3
sti
imul
push
jp
or
data16
add
lods
sub
xchg
cld
call
orl
mov
sbb
nop
jl
cmp
inc
push
cmp
jb
cmp
call
dec
pop
sbb
test
pusha
popf
sub
nop
pop
popf
bound
stos
sub
xor
add
in
jne
xchg
push
mov
add
jmp
sub
add
mov
sbb
out
mov
and
push
pop
dec
rcrb
pop
jl
imul
mov
pop
pop
fisttpl
aam
add
push
add
in
mov
pop
lret
fcmovbe
mov
lock
icebp
or
inc
clc
fdivr
push
std
rorl
sbb
loope
sar
aas
sbb
jne
jno
push
or
mov
mov
lret
push
idiv
add
aam
adc
pop
mov
cs
xorl
sti
lea
or
stos
mov
or
push
sub
add
mov
and
aam
shlb
movsb
int3
rcrb
inc
les
rclb
and
pop
insl
les
scas
xor
aas
or
mov
push
lea
dec
inc
adc
test
mov
rcrb
mov
xchg
std
ja
dec
out
add
push
xchg
lods
mul
jne
adc
inc
sub
sarl
ret
mov
mov
mov
xlat
mov
rcll
insb
repz
or
mov
aam
push
sar
sbb
adc
xor
hlt
add
negb
mov
imul
add
lods
and
cmpsl
mov
loope
inc
jo
adc
shrb
mov
dec
inc
popa
mov
cmpsb
pop
inc
push
lock
cld
add
dec
jle
es
jmp
push
jecxz
pusha
adc
adc
mov
pop
cld
add
inc
sahf
cmpsl
mov
jle
mov
cmpps
or
xchg
push
cmpb
pushf
adc
push
xor
out
add
pusha
mov
and
mov
leave
push
mov
rcr
jno
xor
jnp
enter
inc
loopne
xchg
and
mov
dec
inc
xchg
clc
push
test
push
stos
xchg
mov
cli
cld
ss
sub
scas
je
mov
add
inc
lret
mov
sbb
sbb
cmp
push
adc
fisubrs
outsb
push
inc
xor
dec
sub
push
test
call
lea
fstpt
xchg
sub
mov
sti
pop
xchg
ret
hlt
fldl
adc
shlb
stc
xor
dec
rcrl
inc
dec
test
sub
pusha
mov
and
in
xchg
mov
xor
ret
test
movsl
and
inc
shrl
push
jge
cmp
loop
mov
lea
mov
es
adc
or
inc
sar
mov
push
or
or
fisttpll
fisubs
xchg
inc
mov
push
mov
sti
mov
or
ss
inc
enter
adc
or
scas
ja
lret
xor
xchg
xor
imul
mov
mov
aam
sub
nop
pop
js
jne
in
jg
stos
push
xchg
cmpsb
jmp
jge
or
mov
add
outsl
inc
ficoms
aaa
ljmp
sub
sbb
cmp
scas
mov
or
jne
fimull
jne
rcll
add
hlt
ret
cs
mov
int3
push
pusha
or
cs
pop
mov
rolb
in
bound
cmpsb
inc
jb
aam
adc
insb
dec
add
mov
push
push
xlat
sub
jne
and
popa
or
xor
loopne
push
js
subl
add
jae
add
pop
sbb
mov
and
or
scas
sbb
lock
in
int
loopne
out
add
je
lock
xor
xlat
inc
xchg
in
or
inc
add
add
pusha
std
cmpsl
pop
add
dec
jb
mov
jge
adcb
cmp
push
push
dec
add
fisubs
cli
add
les
mov
jne
add
sbb
popa
jbe
sbb
push
sbb
gs
aad
jo
cmpb
inc
fs
mov
rorb
cmp
add
hlt
movsb
dec
insl
into
cli
notl
gs
sub
cli
inc
mov
bnd
lods
clc
cmpb
or
clc
out
roll
pop
dec
jo
movsb
cmp
and
js
imul
add
outsl
cmp
adc
call
js
lock
jae
push
jbe
add
xorl
call
fcompl
or
sbb
enter
mov
shlb
xor
repnz
xchg
mov
mov
mov
fimuls
pop
mov
andl
pop
insl
jg
fldz
push
cli
shlb
decl
into
pop
inc
mov
mov
lea
push
xchg
sbb
mov
push
jecxz
push
inc
pop
loop
mov
fimuls
mov
addr16
adc
xor
enter
daa
test
mov
or
fcomps
lock
inc
adc
sub
andb
push
stos
sub
mov
movsl
sbb
test
or
push
test
adc
outsb
movsl
movl
add
push
mov
aaa
sbb
push
push
je
mov
inc
add
mov
xor
xor
inc
mov
lcall
mov
imul
xchg
outsb
addb
dec
jmp
adc
lcall
jo
sbb
or
ja
xor
add
nop
rorb
xor
xor
ss
shlb
ja
or
sub
jmp
jmp
jp
pop
xchg
repz
ds
movl
sti
popa
out
les
push
jg
xchg
clc
cmp
push
xor
cmp
mov
add
test
cld
and
repnz
clc
or
ljmp
or
imul
push
xor
nop
sub
outsl
jle
test
add
cwtl
push
imul
call
mov
xor
subb
dec
sarb
cmpl
fldcw
andb
fstpl
xchg
adc
add
and
lock
adc
xor
xor
sub
mov
xor
sahf
fs
loopne
mov
xchg
movsl
push
mov
inc
mov
jnp
dec
fsubrl
call
orb
inc
fsubr
dec
or
adc
dec
pop
pop
or
inc
test
ds
cmp
ds
sbbb
xor
pushf
cmpsb
repnz
sti
mov
mov
ljmp
fmull
sbbb
sbb
inc
rclb
push
ljmp
shlb
andps
pop
faddl
sbb
mov
jnp
inc
je
es
lock
movsl
pop
std
push
mov
out
aaa
lods
sub
clc
add
jbe
push
lea
nop
test
mov
add
mov
jne
testb
inc
ljmp
lcall
lods
add
jmp
dec
loopne
add
into
adc
aam
call
mov
mov
push
cmpps
popa
fstpl
xor
jo
cmpb
cmp
sub
or
inc
sbb
sahf
dec
add
shl
pop
call
lret
je
push
int3
or
push
inc
xor
loope
insb
sub
pusha
fisubrl
pop
fdivl
in
insb
lods
mov
bound
inc
pusha
xor
push
aad
push
mov
xor
inc
or
cld
ror
cltd
ret
xchg
das
mov
jb
insl
push
ror
das
xor
outsb
xchg
shr
xor
xchg
mov
jle
and
pop
xchg
aaa
test
xor
push
outsl
shl
sbb
mov
shlb
sbbb
dec
add
pusha
dec
test
je
enter
push
scas
dec
add
popa
dec
sbb
insb
call
or
xor
jo
nop
insl
push
push
xchg
inc
lret
sub
push
rorb
dec
mov
inc
or
add
push
push
pop
xchg
js
xlat
xchg
and
imulb
and
sbb
mov
add
push
ljmp
movsb
and
or
rolb
cmp
and
out
or
repnz
gs
push
fdivs
test
push
push
scas
mov
aas
ss
lret
or
adc
mov
cwtl
add
and
in
mov
xor
test
fs
adc
cmpsb
nop
jae
mov
push
mov
in
and
dec
adc
pop
adc
mov
in
adc
pop
xchg
cwtl
sti
bound
push
call
lock
leave
inc
adc
fcomps
xor
arpl
and
loopne
call
push
out
push
outsl
rcrb
mov
cmc
test
dec
and
sbbl
std
mov
and
xor
inc
std
xchg
adc
hlt
inc
in
push
push
push
mov
pcmpgtd
add
jne
inc
inc
loope
mov
adc
lock
mov
sub
add
call
sbb
shll
adc
mov
jmp
je
ret
mov
and
movsl
fsubrs
sub
dec
push
inc
xchg
lahf
icebp
inc
xchg
push
call
sbb
push
cwtl
lock
mov
add
adc
sub
dec
push
fwait
sub
enter
lock
ret
nop
aam
jl
inc
xchg
fsubrs
fs
pusha
fnsave
inc
adc
pop
rcrl
lcall
or
roll
jo
jae
pop
pusha
ljmp
stos
std
inc
fdiv
or
popf
xchg
cld
sbb
pop
push
test
mov
insl
cmp
clc
push
jns
je
or
push
mov
inc
clc
and
jnp
and
in
xor
inc
loop
addl
mov
and
mov
call
adc
add
push
cmp
fisubl
test
inc
xchg
mov
jne
icebp
add
dec
jo
loope
clc
in
push
leave
cs
and
test
xor
aas
xor
lea
inc
add
rcrl
data16
insb
jo
test
jge
loope
push
inc
mov
dec
loop
mov
test
nop
xor
cmp
mov
jle
cwtl
outsb
sarb
mov
mov
add
in
add
xor
push
out
mov
mov
mov
sub
daa
lods
inc
fneni(8087
cmp
or
lret
js
jo
push
mov
xlat
push
cmpsb
push
and
and
daa
jno
jo
fisubs
pop
inc
fcmovu
ret
cs
add
inc
inc
push
pop
imul
adc
addr16
ret
inc
mov
add
and
fists
call
mov
mov
adc
and
je
sbb
push
stos
mov
in
test
add
jb
add
pop
es
jl
fcoml
push
mov
push
mov
shl
push
std
push
or
xor
mov
and
clc
push
push
inc
pusha
js
jg
movsb
push
call
dec
lea
in
btrl
ss
fs
sub
add
jecxz
lret
push
pushl
add
and
inc
xchg
loopne
aas
mov
leave
sar
jne
adc
mov
inc
and
aam
sub
call
dec
ja
push
push
clc
pop
movsb
daa
inc
push
mov
push
stos
mov
xor
push
stos
sbb
rcrb
pop
sub
mov
lock
insb
adc
mov
ret
push
add
inc
stos
xchg
lock
outsl
out
inc
or
sub
xchg
push
popa
adc
shlb
inc
shr
push
dec
loop
iret
jbe
movsl
dec
cld
or
in
dec
out
bound
and
fdiv
lea
je
je
pop
xlat
fstpl
mov
mov
mov
test
ss
sbb
xchg
mov
add
mov
jl
cmp
push
adc
xor
jno
cmc
ds
idivl
sbb
pcmpgtw
in
add
adc
add
adc
es
dec
mov
or
dec
test
xchg
lret
or
movsb
adc
gs
mov
add
xchg
ret
jle
test
push
push
cltd
xchg
and
push
push
cmp
add
mov
inc
or
xorl
dec
movsl
mov
lea
nop
clc
add
test
stc
enter
adc
fs
xor
clc
es
pop
jp
jg
mov
add
inc
inc
dec
cli
or
sbb
inc
and
mov
aaa
loopne
ret
or
cld
sub
ljmp
inc
out
ret
ss
sarb
adc
adc
xor
incb
ljmp
jg
rcrb
rorb
pop
mov
inc
adc
push
icebp
xchg
cmp
es
xchg
mov
push
sub
movsl
xor
jge
jno
push
sbb
mov
andb
jmp
aaa
fs
sbb
mov
adc
test
fsubs
xor
mov
dec
or
xchg
push
sub
rcr
scas
adc
mov
mov
xchg
or
cs
addr16
jp
mov
xor
enter
pop
push
dec
mov
or
mov
push
push
add
push
lea
jp
mov
ret
lock
aam
dec
mov
js
adc
inc
add
inc
mov
or
sbb
xchg
jle
inc
push
xor
xor
out
lock
xchg
add
jl
lock
fdivrs
mov
shll
sbb
xor
mov
mov
xchg
out
int3
call
ja
je
in
add
fisttpll
cmp
addb
jl
add
jle
aas
cmp
inc
or
add
or
addr16
mov
lock
daa
or
push
mov
pop
push
in
sbb
or
and
ret
cmp
push
cmc
hlt
jge
js
mov
mov
mov
adc
test
loop
xlat
mov
stos
xor
sti
xor
mov
leave
shl
lret
push
out
push
fldl
test
jg
and
add
cmp
inc
outsb
sbb
lea
stos
ss
push
cld
rorl
push
jmp
cmp
fwait
js
mov
add
out
xchg
dec
je
add
push
sahf
test
or
bound
and
push
loopne
xlat
mov
ffreep
nop
test
adc
push
loop
test
jne
and
lock
dec
aam
inc
pop
ret
adc
or
and
push
rcrb
into
paddq
test
repnz
add
fdivl
pop
or
test
sbb
lods
icebp
shl
inc
jg
je
push
add
adc
jp
adc
jle
xchg
call
cmp
shr
push
pop
data16
test
out
sti
xor
rcl
inc
xor
push
test
shlb
inc
insb
sub
push
adc
adc
call
or
or
sahf
push
mov
shlb
daa
dec
sbb
ljmp
adc
icebp
cmp
push
inc
inc
movsb
mov
popa
data16
inc
mulb
sub
jle
test
add
fidivs
mov
add
arpl
mov
gs
mov
or
insl
call
xor
push
icebp
inc
test
sbb
fcomps
outsb
dec
sbb
mov
nop
shl
mov
cmpsl
dec
int
mov
test
cmpsb
or
mov
out
xor
clc
je
xor
scas
addb
push
clc
or
adc
enter
repnz
popl
jb
mov
inc
pop
xor
in
or
fistl
adc
mov
push
clc
enter
mov
bnd
mov
xchg
adcb
mov
sbb
or
int3
cmp
mov
push
sbb
xor
mov
pop
popf
cmp
rolb
rorl
push
fisttpl
mov
sahf
pop
outsb
jmp
push
ret
jmp
mov
pop
jne
repnz
gs
push
add
xchg
scas
pusha
subl
cs
std
lock
enter
mov
xchg
cmpsl
xor
cmp
ds
mov
cmp
cld
mov
add
shll
adc
push
cs
sbb
add
pop
iret
shl
mov
movb
es
jge
cmpl
mov
fistl
cli
loopne
cmp
lea
addl
jp
mov
add
mov
push
sub
inc
les
mov
js
mov
mov
adc
cmp
push
sbb
xchg
pop
jle
add
sbb
jp
in
pop
add
mov
or
sbb
icebp
mov
inc
mov
bound
sbb
inc
clc
inc
cmp
push
incb
rorb
push
cmpl
pop
inc
pop
shlb
or
sbb
fimull
dec
pop
and
hlt
sbb
add
loopne
lea
popa
xor
push
scas
xchg
ret
stos
cli
adc
repnz
lcall
ljmp
dec
je
andb
lds
jmp
xor
push
dec
dec
jo
test
xor
adc
hlt
mov
add
push
cwtl
dec
xor
ljmp
rolb
shll
push
pop
movsb
add
in
cwtl
and
mov
in
incl
aaa
xchg
pop
sbb
decb
std
jmp
jo
cwtl
aam
inc
bnd
es
dec
aaa
push
fs
lea
cmpsb
xchg
pusha
test
out
in
and
insb
mov
sbb
inc
xor
mov
and
cmp
cmc
loopne
add
cmc
in
test
in
aam
stos
in
push
aaa
or
pop
inc
loope
mov
mov
das
mov
push
test
aam
dec
or
fstpl
fcoml
fisubl
lock
insl
jnp
jmp
pop
stos
test
jae
sbb
mov
or
jecxz
or
add
mov
fmuls
jo
scas
decb
aas
jns
push
addr16
dec
and
xor
dec
mov
push
dec
cld
int3
inc
test
inc
dec
and
xchg
dec
mov
xor
sub
push
push
mov
xor
dec
es
add
rcrb
cli
aad
pop
inc
lea
test
ret
mov
add
js
mov
add
jmp
pushf
cmp
test
shlb
insb
lea
in
dec
inc
aas
xchg
or
mov
bound
lret
pop
push
and
ljmp
leave
push
and
push
iret
movsb
je
jmp
ret
sar
insl
mov
sti
shll
pop
sub
loope
int3
mulb
stos
push
xchg
mov
clc
movsb
xchg
add
adc
insl
mov
or
xor
movsb
addb
or
push
stos
int3
add
xor
xor
and
mov
adc
into
jnp
loop
mov
or
pusha
ljmp
dec
xchg
or
cmp
or
fisubrs
inc
dec
imul
sbb
and
loop
push
jbe
popf
sub
fs
nop
rorl
insb
cltd
outsb
hlt
mov
inc
add
dec
sub
xchg
call
add
inc
outsb
jmp
sbb
push
cld
add
sub
imul
xchg
jmp
mov
in
rorb
or
jne
xchg
pop
mov
cmpsb
out
je
aaa
mov
mov
dec
pop
dec
mov
in
mov
int3
xor
pop
mov
out
cmp
xchg
and
pop
iret
loope
push
leave
sahf
push
mov
or
mov
test
cld
daa
pop
adc
push
je
mov
repnz
jmp
mov
and
lock
daa
shrl
inc
clc
jbe
in
fisubl
add
mov
push
jmp
or
gs
xor
sub
xor
sbb
hlt
cld
jbe
cmpxchg
ja
mov
les
push
call
pushf
movsl
jne
or
mov
cmpsb
dec
clc
inc
loope
mov
ret
test
sub
out
and
jmp
push
dec
mov
mov
push
inc
or
cs
outsl
mov
dec
push
mov
inc
ret
loop
dec
int3
addr16
sbb
test
mov
xchg
mov
hlt
push
aam
sbb
loopne
pop
sub
icebp
fmul
pop
loop
lods
push
and
test
icebp
jbe
sbb
mov
and
test
push
into
dec
mov
clc
addl
dec
in
bound
pop
pop
ss
jp
push
hlt
pushl
fs
add
mov
gs
mov
int3
fbld
inc
sbb
push
add
addb
push
pop
jge
pop
push
andb
cwtl
adc
jmp
sub
rcrb
or
push
jno
shll
xchg
push
push
daa
push
jo
loope
mov
and
pusha
sbb
inc
push
ljmp
adc
inc
bound
xchg
sbb
outsl
cmp
pop
inc
shll
ja
mov
jl
xor
push
inc
or
gs
insb
fcmovnb
pop
insl
xchg
xor
divb
or
jb
call
xchg
push
jns
test
pop
jb
cwtl
outsl
xor
jbe
or
inc
je
xor
xor
enter
and
cmp
into
ret
je
repnz
sub
sbb
mov
mov
inc
lea
xlat
lds
leave
movsb
aas
inc
or
adc
sbb
fimull
mov
nop
adc
adc
cs
or
adcb
push
adc
jle
mov
jbe
xor
lods
push
in
in
aas
push
add
std
xor
outsb
nop
insb
in
loopne
loop
jmp
mov
les
mov
jne
xor
adc
push
xchg
imul
sbb
mov
loope
mov
fsubrs
add
push
sarb
add
dec
sub
lea
outsb
jnp
mov
mov
adc
pop
xor
and
and
dec
mov
cmpsl
icebp
jmp
xchg
pop
inc
mov
xor
decl
pop
scas
or
xchg
lock
addb
shr
or
rolb
pop
push
mov
adc
jnp
pop
mov
xor
and
test
shrl
sub
cmp
mov
mov
add
xor
push
je
add
jb
jle
aas
push
in
adcb
jmp
pop
dec
mov
orl
arpl
stc
mov
clc
or
decl
sbb
adc
sub
xor
push
xchg
push
roll
outsb
mov
in
mov
add
xlat
mov
loopne
inc
and
mov
cmpsl
push
jp
jne
lret
loopne
mov
jo
push
jle
lea
sahf
inc
clc
outsl
and
add
mov
and
mov
push
push
inc
mov
gs
cmp
add
cld
mov
sti
xor
push
adc
call
gs
sbb
jle
rcl
jb
add
adc
or
stc
imul
roll
out
lret
pop
push
clc
mov
jne
popf
sub
or
shl
xchg
ljmp
addl
iret
les
push
push
push
push
cmpsb
inc
push
nop
mov
dec
cmpl
sub
daa
add
jb
ret
sub
inc
pop
pop
adc
xchg
ret
mov
cmp
add
inc
shr
aad
xlat
inc
and
cmpb
jecxz
dec
loop
sbb
imul
clc
shr
lea
stc
negl
xchg
loopne
fsubrs
add
or
dec
int3
mov
jge
stos
push
clc
bound
rcll
leave
mov
rolb
jmp
jl
into
pop
mov
adc
add
les
jnp
mov
xchg
jmp
es
popf
xor
js
ret
decb
xchg
into
sahf
das
and
fwait
push
into
jecxz
mov
inc
lock
xor
clc
pop
test
or
dec
adc
xor
mov
push
pusha
push
pop
jbe
cmp
jp
mov
movaps
sub
insb
or
add
dec
cs
mov
sti
push
addl
mov
bound
rcl
sbb
scas
and
call
cmc
scas
sbb
adc
mov
pushf
imul
mov
ljmp
enter
xor
add
add
adc
mov
cld
and
aaa
pop
ror
mov
adc
pop
jl
inc
inc
mov
inc
pop
and
mov
dec
push
sub
repnz
inc
out
jb
xchg
pop
lcall
xlat
hlt
sbb
mov
and
or
push
push
adc
mov
insl
insl
pop
push
and
sbbl
fadds
js
test
xchg
xor
and
nop
add
int
xor
nop
faddl
or
sbb
jb
div
push
and
xchg
or
addl
ficoms
pop
xor
pushf
repnz
and
inc
les
inc
mov
or
call
add
sbb
jp
cmc
mov
ds
xorl
cld
mov
fisubrs
dec
push
adc
dec
add
adc
test
xor
lea
sub
push
pop
push
mov
cmp
rcrl
push
cmc
push
cmp
movsl
adc
lds
cmp
jb
adc
jmp
jmp
mov
scas
push
mov
or
testl
adcb
fidivs
movsb
mov
pop
das
lock
in
adc
mov
inc
lret
cwtl
add
xchg
sbb
into
cmpsb
ret
add
push
push
push
cmp
dec
ficompl
std
xchg
pop
adc
mov
fidivrs
jge
xor
inc
mov
or
sub
push
icebp
and
repz
jle
rol
inc
ret
notl
cltd
push
aaa
mov
mov
adc
pusha
ja
dec
mov
rorb
jle
mov
sbb
leave
cmp
das
mov
inc
out
movsb
sub
mov
mov
dec
cmpsb
sbb
lea
daa
push
insb
xor
test
pop
add
pop
push
aas
ret
sti
sub
shl
xorps
xchg
aad
cmp
push
loopne
pop
je
outsl
adcl
lcall
js
outsl
add
xchg
pusha
pop
sub
pusha
mov
cltd
jns
test
js
push
or
sbb
and
aas
xchg
sub
mov
pop
push
fimuls
dec
notb
jbe
push
test
inc
std
and
movsb
adc
push
pusha
push
shlb
mov
hlt
loopne
xchg
lahf
into
les
mov
add
jecxz
push
pop
rolb
cmp
or
mov
or
hlt
xchg
adc
xlat
daa
pop
scas
push
xor
bound
lock
cwtl
push
sbb
inc
daa
lock
mov
dec
setno
repnz
incl
jne
popa
ret
fwait
imul
aam
push
addl
es
cld
mov
test
cld
mov
xor
cwtl
dec
je
push
dec
cltd
dec
fsubl
orb
rorb
fs
pop
inc
movsb
add
pop
mov
incb
jp
mov
cmp
aaa
loopne
jg
call
fdivr
ss
sbb
jne
add
sub
ret
sahf
jns
nop
pop
rcrb
mov
mov
aas
subb
cli
pop
inc
pop
or
sub
iret
ss
fldcw
fnstcw
mov
and
sub
test
imul
and
lock
jl
or
out
test
jmp
imul
insl
shll
mov
mov
test
cmp
cmp
mov
or
test
loopne
add
jb
rcrl
push
add
cli
dec
sbb
shlb
je
popl
call
xchg
std
out
mov
mov
sub
push
pusha
add
xor
stos
push
cld
shr
rcrb
push
fs
cmp
mov
xor
js
les
and
sbbb
nop
cmp
pop
and
pop
aam
sbb
rolb
xchg
loope
mov
mov
rorl
outsl
inc
inc
jle
hlt
inc
int3
push
outsb
xchg
xor
add
movsl
int
add
mov
clc
nop
jp
add
xor
stos
adc
loopne
add
jp
sub
add
rol
rorb
adc
or
inc
es
popa
imul
or
or
xor
leave
inc
mov
push
add
mov
adc
mov
push
test
addl
add
jg
rcrb
dec
out
cld
and
sub
mov
test
clc
push
js
jg
insb
test
mov
out
orb
lea
add
push
jmp
ds
mov
ret
xchg
adc
shrl
loopne
lea
ljmp
cltd
push
lcall
hlt
mov
pop
sbb
out
xchg
sbb
inc
fs
jae
sub
push
push
mov
push
and
aad
adc
sti
aas
call
int3
sub
xlat
lods
xor
rcll
jmp
icebp
pop
cmc
inc
mov
lea
push
mov
repnz
push
hlt
mov
push
call
das
xor
in
or
test
push
adc
test
mov
test
mov
push
or
or
mov
subps
fsubl
das
push
cmp
or
in
int3
push
ret
je
sub
mov
sub
inc
stc
in
xchg
ljmp
call
je
int3
inc
fsubrs
add
jmp
mov
xchg
mov
pop
clc
mov
cmp
idivl
jo
inc
push
shrb
test
ss
test
jg
stos
mov
jns
cld
push
add
pushf
inc
loope
jne
push
sub
inc
movsl
xchg
jle
movsb
loop
inc
test
jb
dec
pop
adc
push
add
pop
rorl
into
inc
mov
mov
mov
cmp
mov
add
ss
and
cmp
test
mov
push
sbb
sub
mov
test
es
sahf
inc
jmp
hlt
je
add
into
or
mov
inc
pop
xchg
shrb
loope
xchg
or
ror
aaa
je
shrb
pop
insb
outsb
jmp
xchg
xor
add
pop
ret
jge
addb
mov
mov
mov
jae
mov
popa
push
adc
insb
in
pusha
fbld
outsb
mov
push
mov
xor
push
mov
jne
shlb
loope
stos
jle
divb
sub
push
mov
fs
icebp
sbbl
xchg
mov
scas
fcom
push
pop
js
cmp
adc
inc
sub
mov
call
popf
repnz
push
loope
cld
push
jl
lods
add
fistl
scas
or
adc
jmp
test
mov
push
mov
mov
pop
dec
insb
leave
jmp
push
sub
add
frstor
mov
push
dec
mov
fidivs
inc
xchg
jo
jp
push
test
push
ficompl
and
push
xor
or
sub
shlb
adc
push
mov
in
cmc
sahf
ret
sti
arpl
popf
jle
or
lea
gs
or
add
add
jle
sbb
repnz
or
cmp
nop
jbe
adc
add
push
int3
mov
dec
dec
lods
loopne
cwtl
adc
ret
add
adc
push
and
and
lods
push
add
cmp
push
dec
or
cmc
cli
aam
ret
or
mov
aaa
cltd
push
mov
call
lcall
fadds
cmp
into
jbe
add
xchg
xchg
inc
xchg
push
sti
mov
loopne
scas
add
pop
mov
std
xorl
fmul
leave
lods
mov
cmp
mov
pop
lret
incb
pushf
inc
subb
adc
je
jae
add
cmp
and
cmc
decl
mov
aaa
pushf
cmp
mov
adc
lret
sub
je
lods
or
cmp
mov
add
push
cli
imul
adcl
mov
shlb
mov
jecxz
cli
inc
fwait
or
test
daa
test
xor
pop
push
into
sbb
dec
pushf
adc
cmp
pop
lock
lcall
icebp
ljmp
pop
mov
mov
mov
test
xor
loope
mov
mov
xchg
negb
sbb
xor
jo
and
add
cmp
out
lods
and
push
pop
sbb
pop
or
inc
mov
inc
xchg
clc
fbstp
mov
js
push
mov
inc
in
ret
sbb
mov
adc
and
out
js
inc
call
add
push
adc
test
dec
push
in
push
xor
and
sub
in
lock
adc
movb
insl
cmp
push
aam
aam
fidivl
rorb
sbb
mov
cmp
cwtl
add
dec
lcall
inc
mov
cmovnp
movsb
cmc
aam
mov
adc
rolb
scas
les
fcomps
inc
push
adc
lret
jp
mov
loopne
std
mov
jbe
decl
inc
orb
ret
adc
add
roll
jg
addr16
sar
ja
mov
cli
add
dec
ss
mov
mov
sub
out
ffree
filds
and
call
mov
push
xor
clc
test
test
in
dec
or
inc
mov
enter
loope
shlb
push
je,pn
jb
jne
mov
inc
outsl
mov
rolb
add
push
jno
lret
dec
fwait
aam
add
in
lret
adc
out
fs
xor
cwtl
xor
or
pop
loop
adc
fstl
sbb
imul
arpl
jmp
dec
fcomps
xor
inc
pushl
jge
push
shl
xor
ret
and
adc
out
add
inc
inc
mov
sbb
mov
hlt
add
xchg
daa
mov
ja
and
dec
sub
pop
pop
lods
rcrl
fsubl
or
test
xchg
mov
sbb
pop
ljmp
push
shll
add
es
nop
xor
call
add
je
clc
rcrb
lcall
mov
cmp
dec
pop
mov
jb
aam
loop
inc
in
fstpl
sub
mov
sub
cmp
and
xchg
test
repnz
jle
ss
mov
dec
mov
das
add
and
sub
orl
les
and
push
movsb
cmpsb
fisttpl
add
sub
jmp
ficoms
into
sub
fcmovnb
int3
imul
test
loopne
mov
inc
sub
je
or
mov
inc
inc
dec
shrl
adc
push
lcall
mov
repnz
inc
pop
or
or
js
cmp
mov
or
mov
shrb
mov
dec
out
cs
sar
call
inc
sarl
out
xchg
push
je
or
push
ret
push
mov
jmp
dec
pop
xor
adc
xor
inc
jmp
pop
cld
jne
std
lods
fidivrs
lret
mov
cltd
cld
xchg
movsl
cs
cli
or
daa
and
push
aas
pop
cmp
mov
cld
mov
pop
and
jmp
gs
mov
loop,pn
adc
xor
rol
movsb
add
subb
mov
aaa
add
lea
or
movb
fimull
lock
aad
sub
push
jmp
xor
jmp
mov
and
mov
decl
push
add
popa
mulb
idivb
mov
pop
fldt
sub
aas
mov
mov
fimuls
data16
pusha
adc
outsl
in
stos
push
lods
stos
into
adc
mov
cld
pop
test
and
mov
subl
fcoms
les
lods
adc
fwait
cmp
push
pop
dec
xchg
add
in
out
shll
cmc
xchg
jo
inc
cs
inc
adc
sarl
jmp
adc
cmp
inc
mov
pop
idivb
add
add
ret
push
dec
shlb
push
rorb
ret
push
pushf
jne
add
test
cmp
aad
out
mov
add
adc
mov
lahf
inc
cmp
mov
adc
or
push
lock
clc
call
mov
sbb
xchg
mov
dec
cmp
test
lock
cmp
pop
xchg
sbb
mov
jmp
call
das
idivb
loopne
cs
inc
shlb
popa
or
nop
mov
fistps
jle
into
arpl
js
add
xchg
mov
and
inc
out
adc
fldcw
mov
push
sti
xlat
popa
mov
or
xchg
xchg
xor
stos
pop
xor
into
pop
sub
in
mov
test
icebp
dec
lods
inc
lock
mov
clc
lea
and
add
and
hlt
xor
jbe
mov
xor
add
or
jle
inc
mov
js
lods
dec
cmp
add
push
sti
cmp
inc
mov
add
outsb
xor
xor
int3
or
lock
in
mov
jl
sbb
dec
push
jl
mov
rcrl
pop
mov
push
fsubrl
and
lock
mov
dec
std
and
ljmp
inc
adc
sar
aam
notb
test
enter
adc
insl
or
mov
push
sbb
mov
mov
nop
inc
adc
data16
ror
push
jecxz
sarl
inc
push
jnp
add
or
hlt
cmp
enter
push
pop
aam
add
or
mov
je
cmp
stos
call
adc
jp
sahf
mov
cmp
decb
xlat
cmp
push
rcl
or
or
jae
cmpsb
inc
fisttpl
adc
cmp
shl
stos
mov
mov
lahf
fidivs
adc
add
inc
rorb
nop
int3
leave
outsl
lret
add
notl
imul
and
adc
xor
add
fadd
sub
adc
mov
incb
add
sbb
shll
inc
std
fwait
insb
inc
in
push
mov
push
jge
shrb
pop
mov
inc
test
jmp
xor
push
shr
ja
cld
lret
inc
je
aad
test
or
and
faddp
in
fadds
adc
xchg
or
pop
sbb
das
pop
ret
out
xor
ss
mov
push
in
cmp
jb
std
or
lret
adc
mov
insb
or
mov
lock
inc
popa
mov
adc
push
or
into
cmp
addl
mov
nop
cmc
fiaddl
push
inc
ret
add
mov
dec
mov
ljmp
pusha
inc
inc
lcall
test
fdivr
sbb
pop
pop
in
shll
adc
in
out
clc
bound
xor
jge
sub
adc
sub
les
inc
enter
lret
and
insl
dec
xchg
inc
push
sub
fistl
decb
jp
lock
cmp
xor
repnz
inc
shl
js
adc
mov
les
jg
sub
mov
cwtl
sbb
add
mov
push
mov
cld
sbb
push
mov
sbbb
aam
mov
out
insb
push
in
fcom
add
sbb
add
scas
push
mov
enter
mov
decl
std
test
xor
xor
scas
jge
lea
int3
hlt
cmp
jmp
repnz
rcrb
shrl
je
mov
dec
test
pusha
subb
fiadds
test
dec
cmp
push
sbb
pusha
adc
lea
xor
push
icebp
dec
adc
push
sbb
into
xor
and
inc
mov
subl
push
pop
add
cmpsb
mov
dec
stos
fwait
mov
push
push
sahf
mov
jl
rcrb
push
sub
inc
aas
and
jbe
fs
test
lds
gs
mov
les
dec
data16
and
cmp
call
or
pop
popf
add
adc
push
repnz
adc
test
test
scas
cmpsb
movsb
mov
int3
dec
push
adc
mov
or
mov
dec
xor
ss
ret
push
sub
dec
xor
mov
dec
rorb
je
push
jb
lock
push
push
fsubl
jne
push
int3
sarb
add
jo
roll
aad
pop
add
sub
mov
loopne
or
incb
shll
fs
or
test
outsl
mov
fs
dec
data16
push
das
ror
sbb
pop
mov
push
add
mov
push
add
cld
add
stos
dec
push
std
sub
inc
iret
inc
inc
loop
dec
jnp
mov
xchg
cld
jb
push
dec
test
inc
or
mov
xor
dec
cmp
jne
sarb
int3
mov
adc
fadd
fldenv
sub
xor
xor
fs
dec
jae
pop
xchg
pop
add
subb
sub
inc
mov
je
xchg
ljmp
shlb
nop
sub
add
mov
mov
mov
add
jb
or
addb
adc
jb
mov
fcomi
inc
popa
lea
test
push
cli
in
jmp
cmp
jno
or
es
pop
fldl
fidivs
push
call
push
notb
pop
lods
add
hlt
pop
pop
icebp
loop
mov
inc
jle
inc
sub
xchg
outsb
push
out
lea
shlb
and
lea
sub
into
adc
or
aam
insl
push
out
rclb
add
fldl
inc
ds
es
in
add
jge
mov
fidivl
inc
mov
sar
dec
fmull
inc
mov
adc
jl
in
adc
push
cmp
add
mov
add
cmp
clc
jne
bound
in
pop
in
fs
pop
leave
dec
pop
add
in
out
ror
loopne
inc
mov
js
xchg
and
pusha
aad
add
cmp
xor
push
incl
ss
push
inc
and
call
add
push
add
mov
fcmovb
sub
cli
andl
movl
shll
mov
cwtl
rorb
shll
out
inc
xchg
out
lahf
rorb
xor
cli
inc
or
inc
push
cmp
popa
push
daa
mov
push
cwtl
ss
dec
lcall
sub
pop
jne
roll
inc
insb
inc
mov
mov
push
mov
inc
cmp
je
imul
out
mov
into
and
pop
xlat
je
push
pop
dec
inc
sahf
dec
rol
cli
lock
xor
ret
icebp
add
out
jg
xor
cmp
shr
rcl
fiaddl
cld
in
add
les
or
subl
std
test
xorl
loop
call
add
cmp
xchg
jle
jmp
push
sub
enter
pop
ret
rcrb
add
scas
hlt
push
adc
sub
addl
pop
mov
jae
mov
ljmp
and
add
lods
enter
cmp
in
mov
xor
loopne
leave
nop
dec
jne
xor
sahf
dec
scas
nop
xor
pop
imul
mov
and
dec
add
sub
cs
dec
lods
pop
jbe
ret
jb
xchg
mov
sub
sub
shlb
adc
mov
cs
js
inc
out
mov
mov
cmp
imul
jo
pop
ret
sbb
jg
sbb
add
out
test
mull
das
mov
cmp
cwtl
in
fadds
test
insb
data16
or
or
outsl
pop
xor
push
lcall
and
loop
rorb
imul
inc
jl
cld
push
inc
mov
bound
decb
pop
mov
mov
or
into
loop
andl
inc
test
jb
cmpsb
cmc
adc
mov
inc
es
inc
sbb
pop
lods
sbbb
adc
inc
push
lds
fsubs
pop
inc
adc
lods
mov
xor
les
test
jle
jo
inc
repnz
add
and
stos
xchg
out
sbb
pop
rcrb
and
mov
jbe
je
push
mov
dec
std
dec
and
loop
inc
pop
push
int3
mov
pusha
xor
cmp
xor
xlat
or
sbbb
dec
fnstsw
cli
dec
scas
rorl
rcrb
pop
push
stos
push
add
xchg
and
insb
js
jg
mov
mov
adc
les
lret
inc
jne
loopne
jmpw
add
inc
fcompl
adc
cld
mov
xor
adc
mov
add
mov
pop
or
mov
lds
js
es
add
cmp
add
cs
adc
cmp
movsb
test
and
ret
add
adc
scas
out
xor
test
cld
addb
dec
ljmp
cli
jne
rcr
fcmovbe
add
pushf
stc
out
adc
sbb
mov
mov
loopne
add
inc
mov
push
dec
jl
sbb
mov
and
add
decb
arpl
mov
addb
dec
add
jae
in
rolb
dec
scas
lods
mov
push
sbb
add
mov
jp
hlt
push
fmul
mov
mov
sub
jge
inc
cmp
cld
dec
test
jnp
mov
and
loop
and
mov
mov
mov
add
test
add
pop
cmp
cmp
mov
clc
ss
pop
clc
loope
sub
mov
dec
aam
mov
pop
pop
cld
orl
in
je
inc
pop
fs
and
pop
rorl
jge
sub
test
mov
mov
and
mov
jo
test
scas
cmpsl
sub
sbb
dec
dec
sub
test
das
and
jbe
inc
or
gs
cli
outsl
leave
jge
icebp
lahf
inc
fistpl
test
test
pushf
fdivl
jmp
insl
inc
cmp
push
push
sbb
cmp
mov
fsubrl
es
aas
add
ds
incl
xor
clc
mov
pop
data16
lods
or
push
add
out
daa
scas
call
add
clc
xor
bound
lock
push
popf
pop
movsb
xor
dec
lods
outsb
out
sub
inc
es
subb
mov
fadds
push
add
add
inc
pop
std
out
xchg
inc
xchg
add
in
or
mov
mov
xchg
sub
mov
popa
test
add
negb
loope
je
jp
xor
decl
or
pop
lea
add
xchg
xorl
xchg
sub
ds
fwait
jb
xorb
imul
test
lock
and
fcmovnbe
xor
iret
repnz
in
aam
ficomps
add
std
push
insb
xor
or
push
sar
cmc
or
push
or
aam
dec
mov
dec
inc
sub
xor
jnp
cmpb
push
push
subb
ljmp
dec
cmpsb
sbb
sbb
push
int
mov
in
sub
xor
mull
and
orb
in
loopne
jmp
orl
inc
arpl
lods
decb
mov
add
jb
xor
fisttpll
add
in
xchg
inc
cmp
jle
or
adc
and
int3
outsl
xchg
lods
add
inc
mov
inc
aam
sti
mov
mov
add
push
adc
or
mov
nop
or
cwtl
push
rclb
sbb
pop
ret
and
xchg
sbb
lea
mov
xchg
cmp
mov
mov
sbb
adc
pop
or
and
adc
jge
fst
dec
push
in
inc
and
mov
dec
adc
lods
pop
or
xor
push
xor
sbb
lods
call
pop
mov
cmpsb
test
adc
jp
push
inc
andl
shll
rolb
or
inc
outsl
adc
icebp
add
push
cmp
xor
push
nop
add
push
lret
roll
into
fistps
lcall
mov
sarb
mov
int3
inc
cli
or
and
xchg
jge
and
call
add
es
or
inc
mov
adc
std
leave
sub
mov
jl
inc
xchg
or
dec
insb
icebp
pop
test
mov
jl
repz
push
add
imul
mov
clc
in
insb
adc
leave
add
or
xor
mov
ss
pop
jo
insl
jecxz
ret
mov
inc
int3
cmpsl
je
ss
inc
xor
and
sbb
into
adc
aad
push
inc
cmp
lods
inc
cmp
clc
addb
pop
cmp
add
dec
sbb
adc
outsl
das
ret
dec
add
in
and
cltd
fstl
push
bound
or
mov
loope
xor
ficompl
icebp
push
and
cmp
mov
incl
in
jge
xlat
sbb
pushf
cld
cmpsb
adc
jnp
inc
push
andl
cld
jmp
loopne
jb
dec
inc
xchg
or
in
std
fdivl
xor
imul
xor
test
mov
mov
mov
lock
mov
mov
cmp
call
inc
and
call
push
outsb
je
or
inc
aas
sbbb
int3
jb
inc
sbb
adc
std
pop
ret
test
movl
cmp
cld
inc
and
add
mov
mov
jne
jne
sub
xor
cmc
add
and
adc
sbb
add
fs
rorb
cmc
add
sbb
add
aas
lcall
mov
pusha
rcll
inc
in
dec
jne
jg
adc
aaa
adc
test
inc
data16
inc
push
inc
aam
add
mov
cmp
insb
push
adc
ret
out
push
add
mov
stc
dec
mov
je
xor
cld
call
into
mov
push
in
shlb
jns
xor
adc
add
test
push
push
repz
insb
adc
fsubrl
hlt
xchg
movsb
inc
jmp
sbb
and
pop
fs
pop
insl
inc
mov
repnz
aad
push
adc
push
cli
jl
or
jle
inc
ret
jnp
pop
dec
push
insb
idivb
rcrl
mov
sub
rolb
adc
lcall
mov
inc
push
call
xor
je
andb
inc
push
pop
mov
jnp
jg
jae
rcr
mov
cmpb
pushf
fsubl
pop
push
pop
and
add
data16
shll
add
jne
clc
and
cmc
dec
fs
dec
or
push
outsb
push
inc
pop
fnstenv
cmp
mov
fstpt
movsl
lock
insl
repnz
pop
cmp
mov
mov
dec
inc
call
jne
cmp
sub
rcr
vminsd
push
lret
push
punpcklwd
xor
mov
mov
or
xchg
leave
add
sub
arpl
cmp
inc
inc
dec
jle
lock
lahf
mov
aaa
dec
mov
pop
in
mov
incb
rcrb
ja
popf
test
add
jp
in
cmp
cs
jo
shrl
jge
push
rolb
inc
mov
pushf
mov
cmp
mov
and
in
push
fdivrl
or
pop
outsl
pop
fs
mov
dec
aas
push
aad
lahf
xor
jne
loop
loope,pn
or
pop
gs
push
fcompp
push
mov
add
sarb
aas
mov
or
cmpsb
leave
add
add
xor
pusha
jl
xor
mov
mov
mov
jne
sub
movsb
cmp
ret
mov
in
cwtl
adc
ficompl
pusha
xchg
sub
sarb
push
je
bsf
and
mov
mov
add
adc
xor
int3
xchg
leave
pop
in
inc
push
xchg
pop
iret
ficoms
mov
xchg
push
clc
pop
push
mov
rcll
test
xor
mov
pop
mov
push
add
sbb
pusha
add
call
inc
mov
jb
mov
lea
and
sti
sar
cli
lret
unpckhps
mov
sahf
add
imul
test
test
sub
orb
push
mov
adc
pop
adc
jl
test
fs
hlt
add
je
and
dec
pop
sub
sbb
ret
sub
xchg
out
pop
rorb
dec
sub
cmpsb
xor
jne
enter
mov
cmp
jp
xchg
sar
cmp
jns
cmp
pop
xchg
mov
or
sub
mov
in
int3
ret
xor
pop
popf
add
adc
aam
pop
xorb
jb
insb
xchg
lea
jmp
dec
dec
pop
push
pop
cwtl
inc
cmpsl
push
jle
mov
movsb
add
stos
inc
dec
mov
insb
cmp
fs
fstl
jl
pop
and
lsl
aaa
cld
pop
dec
addb
pop
inc
fs
sub
push
call
push
dec
mov
adc
inc
inc
orl
loope
mov
fs
sbbb
loop
xchg
adc
sbb
or
jbe
outsb
pop
enter
add
mov
cmpsb
inc
dec
loopne
mov
fcomip
lahf
xchg
lahf
pop
dec
mov
loop
push
fdivrp
mov
jle
mov
push
cmp
rorb
in
stos
es
je
mov
adc
dec
push
jnp
popa
inc
aad
or
aam
dec
mov
je
adc
sbb
inc
je
and
add
add
cld
xchg
ds
cmpl
cmp
adc
dec
mov
and
or
dec
and
andb
dec
add
add
inc
clc
jmp
sbb
sub
fbstp
inc
sub
add
sub
mov
clc
negl
mov
cmp
in
sbb
sbb
hlt
push
or
js
add
aad
adc
outsl
add
dec
inc
cmp
sbb
hlt
rcl
cltd
add
mov
and
inc
call
dec
out
ret
sub
add
inc
scas
loopne
mov
jg
outsb
add
jle
add
lods
fs
inc
xor
test
mov
mov
dec
or
fmuls
es
inc
xchg
sbb
mov
xchg
inc
mov
fidivs
jp
cld
add
aam
dec
sbb
mov
xchg
or
jae
js
clc
ss
inc
mov
push
mov
adc
fsubrs
scas
or
loopne
shlb
jnp
jb
in
inc
mov
dec
int3
xchg
push
push
push
mov
cld
dec
dec
add
or
aam
or
lcall
inc
adc
inc
dec
xor
pop
test
jne
sub
push
mov
clc
mov
scas
jo
pop
sbb
xor
test
jne
dec
xor
call
stos
test
outsb
aam
scas
adc
or
sub
lods
ror
cmp
ret
call
pushl
fldl
add
pusha
negl
inc
xor
mov
xchg
nop
sti
or
sub
jae
push
mov
xor
sbb
xor
mov
call
sbb
sbb
adc
add
mov
add
xchg
bound
lods
push
ja
sbbb
sub
cmpsb
xchg
add
inc
outsb
sbb
push
test
aas
int3
lods
mov
push
push
xchg
ficoms
pop
xor
jno
test
xorb
jb
or
mov
je
adc
lods
push
in
lock
movsb
ficomps
out
sbb
insl
push
dec
inc
and
popa
mov
xor
or
xor
and
shrb
cmp
sbbb
in
scas
stos
dec
add
cmc
out
cmp
adc
adc
in
je
cmp
cmp
and
call
mov
rorb
bound
mov
mov
add
push
leave
sub
outsl
or
fidivs
test
fs
cs
push
or
gs
jns
stos
subb
push
roll
pop
mov
xor
or
sbb
inc
mov
mov
adc
fucomip
inc
adc
or
repnz
movsb
push
pop
adc
pop
mov
mov
jle
add
cli
cmp
pop
cmp
add
bound
add
lock
sbb
cli
fisttpll
mov
ss
ss
adc
ljmp
gs
je
fstpt
ret
xor
jge
test
dec
push
mov
hlt
imul
dec
add
add
mov
pop
or
aad
clc
adc
in
add
push
inc
mov
loopne
mov
lods
loop
or
mov
mov
outsl
cli
xor
push
in
xchg
xor
dec
inc
add
mov
stc
adc
mov
inc
sti
sub
call
cmp
ds
addb
or
and
leave
xor
pop
cli
jnp
ljmp
cmp
lahf
push
dec
pop
adc
push
lahf
clc
lods
sti
push
pushl
cmp
mov
jp
lods
jo
out
cmpsl
roll
mov
or
push
iret
mov
insl
sbb
push
fldt
test
cmp
shrb
sub
fadds
push
bound
sti
xor
stos
out
call
mov
orl
imul
aaa
jecxz
test
mov
cwtl
pusha
mov
arpl
or
scas
fcmovu
pop
push
inc
les
pop
rolb
and
test
lea
xor
retw
push
push
in
cli
iret
adc
dec
cmpsb
int3
xor
arpl
cld
mov
cmp
push
je
out
insl
aaa
out
adc
mov
cld
stos
adc
push
movl
fstl
pusha
inc
inc
mov
mov
outsb
mov
add
inc
mov
sbb
mov
popf
aas
jb
iret
int3
xchg
iret
clc
subl
test
inc
and
jno
sbb
enter
xor
adc
sahf
xor
or
add
push
mov
add
mov
cmc
push
push
mov
bound
gs
jb
ds
out
cld
add
adc
int3
add
mov
aad
push
adc
xchg
ficoms
stc
add
push
mov
sbb
hlt
insb
outsl
testb
mov
jo
mov
orb
inc
xor
inc
insb
add
add
pop
mov
pop
sbb
test
sbb
push
les
out
and
sub
cs
cmpsl
and
add
inc
push
push
jne
sbbb
push
in
jmp
lea
pop
or
sar
mov
and
outsl
adc
test
or
or
inc
ret
mov
lahf
pop
rorb
dec
sub
aad
or
jge
ss
or
mov
dec
test
adc
cmp
add
adc
push
xchg
sub
mov
mov
push
mov
dec
les
rcrl
sbb
inc
cld
or
cmpsb
push
dec
es
addr16
ljmp
push
mov
mov
push
cs
les
sub
mov
dec
je
subb
and
xor
inc
sbb
and
mov
fwait
xor
loope
test
cmp
je
adcl
out
out
cmp
addl
ja
ss
mov
adc
mov
xor
sbb
cld
or
frstor
cld
cmp
push
in
xchg
aad
sbb
cmp
int3
gs
dec
add
push
inc
call
pop
jge
into
xor
dec
push
adc
or
fdivr
mov
movsl
int3
cmp
ljmp
ret
inc
pop
dec
mov
cmp
sbb
pop
mov
mov
dec
jmp
cwtl
shrb
in
add
add
pop
or
add
enter
lahf
push
fs
adc
into
fdivr
std
pop
mov
fadd
popa
xor
jns
je
adc
mov
or
cs
or
pop
mov
sbb
push
add
xchg
sub
push
mov
sub
movsb
and
lods
mov
scas
mov
in
das
jecxz
mov
nop
jo
mov
mov
leave
xor
mov
ret
push
pop
add
push
jne
leave
mov
sbb
mov
xchg
nop
cli
jp
cmp
or
xchg
ret
cmp
jmp
ret
dec
add
mulb
and
inc
cmp
es
addb
sbb
jle
dec
cld
pop
xchg
lds
daa
lea
je
pusha
cmp
inc
mov
inc
jmp
adc
adc
inc
cmp
test
adc
sbb
pop
push
mull
inc
cs
sbb
sbb
mov
jp
test
dec
push
inc
mov
es
push
aaa
movsb
jle
outsl
jp
cld
push
xor
fwait
adc
addb
add
xchg
mov
push
mov
mov
call
andb
pop
mov
sbb
mov
mov
out
lcall
mov
mov
aas
xor
jp
sarl
sub
mov
or
or
mov
adc
insb
mov
pop
push
mov
int3
orl
cmp
in
xchg
test
nop
push
andb
addr16
xchg
jbe
mov
xor
pop
imul
or
add
pop
adc
xchg
push
push
pop
ss
xor
adc
lock
xor
call
fnstsw
fs
or
ret
sub
inc
test
into
mov
add
dec
mov
jo
mov
sahf
inc
cld
scas
cli
cmc
inc
lods
adcb
jnp
aaa
test
mov
jl
xor
mov
cwtl
inc
sub
pushf
test
fs
lock
lock
sbb
insl
pop
cmc
add
icebp
pop
pop
insl
nop
aas
xchg
les
inc
loop
ret
mov
idiv
ja
mov
lock
xchg
fs
aas
fmull
cmc
jne
or
adc
and
add
iretw
sub
adc
push
push
mov
inc
mov
lock
mov
mov
ret
mov
leave
or
filds
mov
mov
add
pop
push
push
mov
pusha
pop
mov
bound
loopne
inc
push
subb
pushf
inc
fbld
fcompl
mov
faddp
or
test
mov
sahf
test
or
or
mov
ret
mov
jmp
adc
rol
pusha
loop
cld
and
or
notb
loopne
adc
jo
scas
mov
fisttps
and
push
and
add
xchg
add
pop
pushf
mov
adc
dec
subl
jmp
pop
sub
int3
cmp
and
push
test
dec
inc
notl
data16
je
or
sub
lea
adc
adc
rolb
jmp
push
aad
cli
pop
mov
mov
xlat
add
pop
scas
cmp
adc
cld
cmp
xchg
mov
cs
push
lahf
mov
call
dec
inc
jmp
pop
push
pop
lcall
jb
andb
cld
ja
in
call
sub
mov
inc
data16
inc
testb
push
push
jp
or
adc
and
dec
inc
in
stos
aas
or
in
sarb
filds
pop
push
lock
cmp
into
aam
push
inc
inc
aam
mov
sahf
jnp
mov
jp
rcrl
fidivrl
les
lea
loop
or
add
mov
sub
push
sub
add
add
and
stos
int3
psubsb
sbb
je
inc
cmp
incb
ss
shrl
or
sbb
dec
in
inc
or
movw
push
fsubrs
jle
test
and
adc
loop
cld
push
adcb
test
fistl
sub
clc
hlt
or
nop
lcall
add
lea
lock
pop
insl
js
xlat
or
sub
push
sti
sar
or
orb
loopne
push
outsb
out
sbb
inc
mov
ret
ss
pop
data16
jns
mov
push
or
fcmovu
and
pop
mov
push
cmpsb
lcall
in
jmp
sbb
pop
andl
scas
outsl
inc
leave
inc
inc
bound
ficoml
stos
lcall
daa
dec
inc
imul
jg
add
scas
mov
pop
out
add
loope
js
push
sbb
adc
or
scas
cmp
and
push
addr16
pop
push
inc
mov
shlb
cmp
adc
incb
add
fs
shr
push
pop
mov
cli
dec
cmp
xor
out
pop
add
dec
push
dec
gs
cmpsb
fbld
dec
push
inc
dec
mov
cmp
sub
jmp
insb
dec
cmpsb
or
dec
push
add
mov
mov
jl
mov
xor
or
incb
xor
sbb
add
cs
mov
outsl
and
es
push
movsl
clc
or
push
scas
dec
sbb
mov
mov
imul
and
inc
or
lret
int
xor
push
loopne
jo
ljmp
fdivs
jne
xor
sahf
mov
xchg
aad
out
and
fcomps
shrb
dec
pop
ds
loopne
test
mov
lock
ret
mov
fistl
faddl
or
lcall
and
ret
dec
pop
inc
rorl
inc
add
adc
call
test
pop
scas
push
adc
movsb
add
loop
rolb
push
stos
or
icebp
test
aas
and
mov
movsl
andb
push
jg
push
ljmp
sbb
or
push
mov
frstor
cs
inc
insb
mov
cld
pop
inc
jo,pn
dec
shlb
imul
or
clc
add
clc
daa
pop
pop
test
imul
stos
in
outsb
ret
outsl
data16
pop
pop
pop
jno
xor
scas
push
outsb
loop
ss
bound
inc
roll
jl
fsub
pop
in
les
add
jno
add
mov
push
test
lock
sarb
sbb
add
adc
xchg
pop
les
sbb
mov
pusha
insb
push
inc
sbbl
imul
xchg
out
stos
inc
sub
mov
adc
cltd
orb
dec
dec
js
dec
push
sub
dec
icebp
xchg
push
ja
or
loope
xor
insb
adc
pop
push
mov
daa
add
test
movsl
add
gs
sbb
sbb
xor
jl
push
pop
push
call
mov
out
aaa
test
mov
sbb
or
rolb
adc
mov
nop
dec
push
cs
lea
xchg
adcl
sub
cmpsb
xor
sub
movsb
js
pop
aam
aad
add
cmp
test
outsl
xchg
pop
or
in
add
jno
adc
in
decb
pop
or
fiadds
rcl
pop
nop
mov
push
movlps
add
stos
push
pop
jp
lcall
sub
fcos
push
inc
insb
movsb
bound
rol
int3
add
jne
dec
cmp
cmp
jmp
addr16
test
movsb
into
insl
mov
mov
push
sub
cli
adc
add
cmc
fbld
add
mov
push
addl
stos
jg
outsb
pop
cmpsb
sub
nop
or
repz
push
sub
ljmp
test
je
mov
aam
pop
fs
xor
pop
cmp
lcall
adc
xor
cmp
daa
lea
add
mov
inc
xchg
icebp
fwait
mov
mov
ljmp
test
sbb
xchg
ds
dec
mov
cs
or
mov
out
inc
clc
psraw
clc
rol
out
inc
jg
sbb
fdivrl
jle
loope
bound
or
adc
pop
push
mov
add
mov
jbe
rcrb
adc
rolb
push
fs
pop
or
out
adc
jne
rcrb
negb
or
cmpsb
xchg
and
inc
loop
and
stc
in
add
out
imul
rclb
inc
nop
push
jecxz
xchg
cmpsb
add
cmp
or
inc
leave
ljmp
inc
push
mov
dec
call
mov
jne
repnz
inc
pop
loopne
int
sbb
and
xlat
push
fstl
mov
jb
pop
movsb
fs
out
orl
gs
sbb
add
cmp
dec
sub
and
std
stos
hlt
test
cld
decb
push
sarl
out
mov
sub
inc
in
int3
cmc
cmp
dec
cmp
add
mov
scas
and
mov
mov
jl
mov
mov
inc
jne
push
call
push
jns
or
sbb
lea
ret
or
in
sbb
add
jnp
pop
mov
jne
call
iret
mov
mov
adcl
fildll
popf
enter
push
cwtl
shr
movsl
push
sub
jne
add
push
cmp
and
rol
mov
loopne
repz
mov
mov
inc
xchg
mov
sub
rolb
aam
ljmp
xorb
loopne
pop
enter
addl
jne
mov
insb
rclb
push
push
or
sti
int3
pop
inc
pop
std
or
pop
jmp
adc
inc
je
lods
and
jmp
cwtl
lock
push
and
imul
and
xor
push
jo
mov
adc
or
mov
cmpsb
pop
lret
orb
cmp
cmpb
shll
mov
lods
cmpsb
pop
jl
std
pop
test
icebp
rolb
pop
mov
lret
clc
fistpl
mov
ds
mov
add
sti
aas
cli
das
fiadds
ficoms
jb
sar
add
test
pop
mov
and
jmp
and
mov
jne
aam
ds
push
cld
bound
inc
rcr
movsl
pop
mov
mov
xor
push
out
or
negb
mov
inc
dec
sbb
mov
das
call
cmpsb
mov
xor
ds
mov
out
out
rorb
push
out
js
cld
adc
decl
repz
repnz
test
jp
jecxz
inc
dec
pop
or
sbb
and
push
mov
ljmp
add
xor
decl
mov
sub
mov
ljmp
out
shlb
xlat
sub
insl
mov
and
icebp
xchg
test
push
mov
or
xor
mov
mov
je
insb
movsb
xchg
call
push
jg
xchg
pop
aam
jge
xchg
and
jmp
or
push
fs
mov
incl
mov
popa
mov
test
adc
add
xchg
hlt
int3
repz
adc
xchg
cld
or
xor
mov
clc
xchg
out
xor
push
in
ja
scas
hlt
cld
xor
xlat
or
fistl
imul
outsb
jge
rolb
loop
hlt
push
push
xchg
cmpsb
sti
push
adc
mov
dec
out
push
jne
cmp
das
mov
push
push
bound
adc
es
sbb
test
or
xor
addl
xor
les
cmp
adc
or
jmp
loopne
push
pop
pusha
cmp
cld
aad
addb
or
cmp
mov
push
movsb
cmp
fdiv
jo
add
mov
ror
cmp
adc
movsb
mov
cmp
inc
repnz
int
push
xor
or
push
mov
scas
mov
mov
inc
nop
popa
fdivr
in
std
rolb
sahf
push
sub
and
loopne
mov
or
or
int3
rorl
push
aaa
lea
sub
cmc
lods
rolb
data16
dec
sti
pop
cmpl
mov
mov
incl
sti
lock
add
cmc
mov
lret
dec
push
clc
popf
mov
inc
repnz
inc
je
je
test
lcall
je
pop
or
mov
jle
jmp
cmp
mov
enter
pusha
add
sbb
out
jge
psrld
int3
sbb
pop
test
lock
push
test
iret
shrb
sub
xchg
aaa
outsb
jmp
stos
or
sbb
stc
adc
push
cmp
aaa
add
and
stos
ds
push
and
add
mov
pop
sub
fidivs
adc
in
inc
loope
xlat
inc
iret
jp
add
lock
rcl
insb
cmp
jg
loope
push
sub
insl
xor
cmpsl
scas
adc
int3
cld
mov
insb
icebp
mov
les
jmp
rcrl
xchg
cmp
mov
movl
and
movsl
cld
pop
fsubs
push
and
add
std
sbb
dec
stc
lods
or
jb
test
pop
cmp
dec
mov
movsb
aam
mov
sbb
bound
popa
cmp
ret
outsl
inc
dec
mov
push
dec
imul
int3
mov
rolb
out
and
sub
repnz
jne
push
mov
cld
mov
loopne
lods
sub
fiadds
jg
sub
jl
mov
mov
decb
movsb
jle
mov
mov
test
imul
lock
mov
or
or
add
or
cmp
gs
add
cmpsl
lea
loope
push
js
sbb
lret
xlat
insl
mov
sub
lcall
aas
and
hlt
pop
push
ret
mov
lods
je
inc
loopne
ljmp
xchg
jmp
lea
fildll
cmpsb
inc
add
sbb
pop
dec
inc
jb
adc
mov
and
movsb
rcll
inc
cmp
cmp
mov
loopne
popf
xchg
mov
mov
inc
test
popa
fistpl
repnz
xor
pop
mov
adc
and
test
or
cwtl
push
ljmp
into
mov
inc
sub
dec
movsb
mov
call
add
mov
je
xchg
andl
dec
push
push
shlb
pop
push
decb
adc
push
gs
xchg
fucomi
inc
jp
repz
pop
lahf
aas
or
dec
sahf
dec
and
add
add
push
sahf
pushl
lret
add
and
add
fidivs
gs
std
rolb
adc
cmp
ret
rclb
jle
sbbl
not
inc
cld
mov
int3
or
stos
and
sbb
out
cmp
add
mov
into
pusha
mov
test
add
sub
jecxz
ficoml
rolb
inc
push
insl
cld
inc
sbb
leave
push
pop
jle
mov
je
cmp
or
gs
jp
pushl
mov
mov
clc
sbb
imul
insb
mov
inc
lock
sbb
mov
js
sbb
mov
pop
sarb
stos
adc
lods
sbb
shl
arpl
or
add
fisubl
cmpsb
or
cmpsb
inc
pop
add
fwait
jle
add
inc
fsubr
pusha
pop
cs
xchg
fsts
fsubrs
out
add
fisttpl
test
aad
xor
mov
add
add
mov
mov
loopne
push
mov
popa
xor
pusha
cmp
aaa
icebp
cs
adc
fs
jmp
mov
add
stos
dec
in
cmp
loope
push
cmp
push
loope
rolb
adc
movsl
jl
outsb
popa
jmp
jmp
inc
cmp
outsl
scas
mov
scas
ret
push
ret
dec
repnz
or
dec
or
xchg
test
add
shlb
add
stos
inc
mov
fsubrs
inc
adc
paddw
mov
adc
xchg
std
push
imul
es
jo
iret
cmp
xchg
outsb
pop
push
aam
sti
cmp
pop
jne
and
rorb
jle
inc
and
and
adc
cmpsl
shld
div
adc
adcb
pop
xor
jo
outsb
jb
xchg
sbbb
mov
bound
fcompl
out
or
xchg
xchg
cs
out
insb
sbb
mov
inc
adc
fwait
cmp
xchg
mov
dec
cli
or
pop
add
scas
ret
les
and
push
pop
call
les
pop
push
shll
stos
jp
pop
inc
xor
icebp
jbe
pop
xchg
or
add
rcll
xor
mov
aam
mov
lods
cli
scas
aam
ret
adc
push
adc
cwtl
jl
cmc
mov
add
repnz
mov
mov
lods
and
sbb
pop
mov
or
fdivrp
adc
std
sub
mov
sub
and
add
sbb
pusha
rorl
or
dec
rcll
movsb
adc
lcall
aas
test
sub
add
pusha
orps
adc
pop
mov
xor
call
or
mov
mov
sub
mov
push
mov
movsl
cli
add
cwtl
rclb
inc
mov
fcoms
stc
rcrl
pop
fldcw
dec
mov
mov
movzbl
shll
pop
jmp
shl
inc
rclb
sarb
lock
gs
pushf
mov
js
ss
push
sbb
out
jnp
push
cmp
pop
test
int3
rclb
ja
sbb
dec
sahf
test
and
lock
adc
hlt
adc
xchg
add
mov
jbe
cmp
jmp
out
gs
pop
clc
push
and
add
in
mov
push
call
xor
mov
xor
test
rorb
push
test
movsl
lods
or
push
mov
sub
or
rcrb
ret
mov
scas
lods
and
mov
dec
jl
mov
cwtl
cs
popa
dec
call
inc
scas
xor
pop
mov
cmp
pop
cli
les
movsb
call
mov
and
int3
cld
dec
mov
scas
sub
dec
test
in
mull
fld
mov
cmp
mov
push
stos
test
lds
test
inc
fwait
adc
jle
jecxz,pn
push
adc
orb
push
cltd
xor
xorb
xor
dec
popa
nop
add
in
xlat
aam
sub
mov
jmp
scas
pop
insb
mov
push
jo
push
addb
rclb
dec
mov
mov
ret
add
ficomps
ljmp
pop
out
cmp
and
add
mov
mov
clc
add
lock
pop
mov
dec
push
adc
mov
std
mov
into
inc
xchg
push
xchg
mov
shrb
in
cmp
push
adc
aas
in
add
and
std
inc
fldcw
push
stos
pop
imul
sbb
mov
dec
add
push
push
jg
das
scas
shrd
jnp
and
in
rcrb
out
nop
jmp
psrld
xor
jl
push
into
or
xor
mov
pop
js
mov
pop
rcrl
call
orl
cld
aam
adcl
mov
push
push
outsl
loopne
dec
or
sbbl
shlb
pop
ljmp
rol
xor
stos
pop
mov
cli
mov
push
inc
shrb
add
jp
pop
cmp
jne
sub
add
sub
lahf
pop
or
movsl
cld
pop
and
adc
mov
sub
xor
cmp
les
pop
loopne
mov
push
adc
or
mov
sbb
rcrb
mov
inc
enter
sarl
pushf
mov
ljmp
cwtl
mov
insb
jb
adcl
adcb
sbb
out
aam
loopne
add
push
xchg
push
lods
cwtl
testb
cmpb
fsubrp
or
pop
jmp
pop
or
fisubrs
lods
loope
push
mov
add
inc
inc
mov
inc
filds
pop
int3
shll
push
enter
mov
clc
adc
lods
aam
cwtl
add
xor
add
jo,pt
hlt
mov
mov
and
lock
cmpsl
xchg
or
pop
push
mov
cmp
mov
sub
mov
sub
mov
cmp
aad
inc
outsb
stos
subl
std
arpl
inc
push
sbb
mov
out
mov
lock
add
imull
add
and
or
adc
pop
mov
int
mov
sub
ret
push
test
loop
adcb
and
adc
add
call
test
rcl
inc
loopne
das
clc
adc
out
mulb
sbb
adc
add
mov
enter
jo
out
mov
sub
push
inc
lds
jle
and
je
addl
inc
adc
xor
mov
add
pusha
jecxz
andl
pop
call
jno
xor
xlat
push
lcall
hlt
inc
xchg
movsb
or
fcmovu
fcmovnu
sbb
xor
int3
mov
mov
test
rclb
leave
outsl
cwtl
pop
or
int3
fs
push
dec
mov
adc
bound
add
js
sub
aaa
es
clc
cmp
idiv
les
idiv
pop
je
jne
js
movsl
ror
add
cs
aam
cmp
loope
call
out
sub
jp
mov
pop
pop
inc
or
pop
xor
add
jo
jmp
inc
cmpsl
add
pop
testb
mov
aam
cmc
add
push
push
and
out
lock
cs
mov
adc
aaa
inc
popa
mov
ret
in
and
testb
fnstsw
das
movsb
sbb
pop
adc
inc
push
rolb
mov
push
xchg
mov
adc
pop
rorl
push
or
sub
test
adc
je
mov
fsubs
nop
dec
cmp
mov
cmp
rolb
xchg
ds
mov
mov
das
nop
sub
les
xchg
loop
cld
aam
outsl
enter
lea
mov
push
in
ret
loope
push
ficoms
cmp
sub
incl
imul
loopne
outsb
je
jg
int3
pop
cmp
test
mov
and
test
jle
nop
shrb
sbb
movb
call
adc
enter
rcrb
or
cli
ret
push
mov
mov
xchg
test
mov
pushf
mov
sar
inc
add
add
clc
mov
add
jo
xchg
shrl
or
shll
xchg
mov
dec
mov
jg
scas
ret
push
fdivl
xor
test
add
cld
add
mov
jo
push
pusha
test
pop
fsubr
mov
stos
pop
mov
lcall
cmp
adc
aaa
mov
popf
inc
bound
adc
fdivs
in
inc
dec
and
jb
or
mov
or
dec
mov
xchg
xor
push
stos
cmp
add
pop
push
jmp
add
add
cmp
lret
or
pop
clc
sbb
loopne
or
int3
cs
push
pop
or
mov
les
enter
test
push
inc
add
loope
or
sahf
gs
and
addl
js
mov
sarb
push
js
subb
mov
fidivs
test
decl
gs
cmp
mov
test
or
rcrb
and
std
xor
hlt
jne
inc
insl
fs
mov
pop
frstor
pop
fwait
in
bound
pop
or
add
or
mov
lcall
xchg
jbe
sbb
inc
das
mov
inc
push
pusha
lods
pop
mov
shll
jne
dec
fwait
xchg
in
dec
call
mov
xor
ljmp
or
mov
hlt
mov
scas
ljmp
push
inc
mov
mov
pop
jg
setae
lods
or
outsb
or
push
sub
sub
and
in
inc
sbb
cmp
cwtl
popf
push
fcoms
sub
add
cs
imul
pop
mov
shll
mov
je
cld
push
stc
pop
mov
je
loopne
adc
orl
sahf
pusha
sbb
shrb
pushf
xor
push
push
andl
fcoml
insb
and
shll
fcoml
lods
nop
and
ds
add
js
out
push
subl
movsb
or
mov
jo
mov
xor
cld
inc
mov
add
orb
hlt
lar
ret
xchg
incl
test
ja
cmpsb
sub
loope
fsubs
or
aad
es
inc
xor
pop
push
lahf
mov
or
std
inc
test
or
repz
push
insb
dec
enter
negb
test
push
ja
mov
iret
push
cmp
inc
inc
push
push
shlb
xor
aaa
loope
push
jb
in
testb
fadds
add
test
in
scas
rcrb
fisttps
out
fwait
pop
addl
or
mov
add
loopne
aam
arpl
jne
ret
movsl
testl
les
cmc
sub
loope
sbb
pusha
pop
cli
mov
xor
mov
lock
or
das
mov
and
test
push
or
cli
adc
xchg
test
test
pop
test
and
sbb
inc
inc
loope
adc
mov
ja
pop
repnz
mov
pop
popf
stc
ret
out
outsb
adc
pop
mov
imul
dec
test
sub
sbb
mov
idivl
stos
repz
add
jne
inc
dec
incb
sbb
adc
mov
mov
xchg
xor
and
in
mov
pusha
cmp
sub
inc
pusha
ljmp
xor
lahf
repnz
andb
cmp
add
and
dec
lea
je
jae
in
rcll
or
adc
cmp
push
les
push
dec
js
add
dec
pop
pushf
pop
inc
mov
push
push
aam
sti
mov
inc
sbb
jl
inc
mov
iret
cmc
or
ss
or
jmp
inc
test
xor
dec
or
outsl
lcall
aas
cli
cs
fdivr
adc
fst
les
dec
push
cld
mov
call
ds
int
sbb
inc
rolb
or
sarl
mov
hlt
out
fcmovb
fsubs
pushl
xchg
jo
rol
inc
push
mov
push
clc
and
hlt
cmp
jmp
cs
loopne
push
ret
call
mov
adc
mov
push
or
xchg
jns
mov
popa
adcl
or
imul
or
jnp
cmp
or
mov
mov
pop
sbb
sbb
test
adc
outsb
je
roll
jp
pop
push
or
xor
and
lock
mov
mov
jmp
ret
cld
in
cmpb
push
add
fistl
test
add
sbb
filds
mov
mov
and
iret
cltd
rolb
movsb
and
jge
jmp
inc
jne
jmp
popf
mov
pop
xadd
aam
push
xor
adcl
rol
sub
dec
enter
inc
fnstsw
popa
dec
mov
xchg
sbbl
cli
dec
add
gs
mov
sbb
inc
test
push
push
fldenv
pop
sub
cld
cmpsl
and
jo
sbb
addb
add
aad
dec
dec
or
sbb
sbb
push
sbb
icebp
xor
mov
adc
cld
xchg
lcall
fcoms
sbbl
inc
cwtl
xchg
subb
lods
push
dec
inc
rcll
clc
inc
fbld
sub
pop
sub
add
sub
push
daa
mov
hlt
mov
roll
pop
lea
push
sbb
push
mov
sbb
add
push
mov
inc
push
pop
les
incb
test
orb
push
mov
ret
add
inc
loopne
pop
mov
dec
inc
inc
pop
xor
cld
add
sub
clc
pop
loop
inc
mov
pop
mov
out
push
movsb
pop
sahf
mov
stos
std
in
xor
add
push
aam
movsb
xchg
xchg
outsl
jle
das
push
mov
roll
push
nop
mov
sbbb
push
sub
add
lods
sti
pop
jle
jmp
cmp
pop
subl
aas
std
testb
xor
inc
out
shll
sub
hlt
jo
inc
outsb
pusha
icebp
xchg
movsb
sub
add
pop
dec
cmp
test
inc
adc
add
push
incl
and
mov
cmp
jecxz
fwait
aad
stos
gs
inc
and
mov
dec
adc
xor
adc
imul
jp
mov
dec
mov
imul
cmp
shlb
mov
mov
jge
mov
add
push
out
andnps
cli
cmp
inc
inc
and
ja
int3
data16
jg,pt
mov
shlb
or
fdiv
xor
sti
and
in
pop
cmp
add
cmpsl
jbe
cmp
les
test
pop
fadd
shlb
rcl
ja
outsb
pop
mov
lahf
push
mov
orl
push
aam
dec
or
sbb
out
mov
pop
lcall
jns
inc
pop
sbb
lahf
adc
lahf
adc
or
push
add
pop
and
jae
mov
mov
sub
jae
sub
add
mov
push
or
aaa
adc
mov
cwtl
push
fs
mov
add
xor
lock
adc
or
add
adc
xorb
sbb
cmp
fnstenv
lea
dec
gs
sub
add
push
call
mov
adc
fidivrs
lret
pop
jbe
in
mov
push
test
sahf
xor
sbb
pop
dec
jb
bound
stos
test
lods
loopne
xor
js
mov
insl
aad
xor
mov
mov
adc
jecxz
inc
inc
pusha
jge
pop
pop
cmp
loop
pusha
pop
mov
outsl
mov
inc
add
sbb
pop
xor
cmp
push
filds
push
cmp
sbb
push
sub
pushl
pop
sbb
sbb
ret
sub
or
mov
orb
push
faddl
mov
pop
daa
rorb
outsl
call
inc
pop
push
add
dec
add
loop
icebp
pop
sbb
mov
ret
js
push
or
sbb
mov
leave
shr
std
lock
push
insb
divb
pushf
push
sub
test
and
pushf
lods
jns
push
js
cmp
or
int3
mov
jne
add
int3
cmpl
push
outsl
inc
pop
xor
ljmp
inc
add
roll
jge
andb
adc
popa
push
int3
lock
or
icebp
roll
or
ret
aaa
cmp
sbb
notb
and
mov
mov
sub
aas
cmp
es
and
scas
iret
sub
mov
cld
call
lds
add
dec
mov
aam
dec
jl
sub
mov
out
fmuls
out
dec
mov
cmp
shrl
add
rolb
pop
inc
mov
mov
ds
mov
outsb
cmpsb
shl
fdivrl
add
and
pop
cmp
xchg
call
or
inc
iret
sti
lock
cmp
ljmp
adc
add
sub
inc
push
or
icebp
orb
lock
sub
dec
jmp
ds
fidivs
xchg
mov
mov
and
mov
push
sbb
cmp
xor
jge
jo
shlb
test
push
fcompl
push
dec
out
add
xorb
je
pop
insb
sbb
insb
and
jb
rclb
icebp
outsb
subb
cmc
pop
inc
cmpsl
pusha
lea
dec
cmp
adc
mov
xchg
cli
dec
jl
aas
adcl
xchg
and
inc
lock
shrd
sti
push
movsl
adc
adc
push
dec
jecxz
ret
ret
fsubrl
inc
sbb
loopne
int
test
or
dec
cmp
clc
pusha
sub
stos
add
cltd
jle
inc
ret
pop
add
dec
sar
push
ds
fisubl
mov
pop
add
xor
les
jno
sub
fsubrs
loopne
pop
push
add
outsl
cmp
jo
shlb
pop
inc
cmpb
loope
jb
test
and
adc
sbb
adc
mov
stc
inc
mov
add
fs
ds
add
ret
sbb
movsb
push
or
cs
outsb
imul
fisubrl
inc
les
fs
les
xorl
push
or
add
mov
js
mov
sbb
test
mov
push
add
pmuludq
pop
fstp
adc
push
mov
inc
psubsb
inc
into
loop
mov
mov
push
mov
add
fdivrp
adc
ret
mov
push
push
xor
sbb
adc
lds
hlt
fiadds
aas
mov
loopne
lahf
call
pop
fldl
ss
repnz
adc
test
or
add
pop
les
in
mov
push
mov
jne
nop
movsl
mov
add
js
xor
or
sbb
rolb
add
mov
orb
fiaddl
inc
aas
sbb
data16
add
or
sbb
ret
shlb
sub
data16
mov
movsb
pop
orb
lock
push
mov
push
or
inc
aam
push
in
std
jcxz
call
sub
mov
push
adc
jl
lahf
push
stos
sub
icebp
push
sbb
pop
stc
imul
xor
cmp
and
orb
rorb
ljmp
pop
iret
push
dec
jl
outsl
xchg
aad
pop
mov
pop
les
call
and
gs
jg
xor
xchg
sbb
push
sarl
loope
push
sbbb
clc
cld
jmp
ljmp
clc
inc
shr
add
sti
or
outsl
push
aaa
pusha
push
or
dec
add
add
inc
aad
push
bound
out
pop
sahf
adc
jle
xchg
or
push
mov
add
incl
cltd
pop
test
xor
push
mov
out
bswap
adc
xchg
jge
jnp
in
mov
movsb
idivb
fcoms
aas
inc
push
cli
mov
pop
and
or
rorl
xorb
fiadds
add
inc
inc
popf
out
andb
jmp
ficoms
push
push
inc
std
int3
push
decb
ds
shll
jg
mov
lock
movb
xor
nop
xchg
xor
cmp
adc
lods
je
and
test
xor
in
cmp
data16
pushl
fwait
jno
lret
cli
mov
inc
loop
xchg
in
or
mov
jmp
and
dec
push
jbe
test
push
add
scas
mov
lea
or
jbe
js
ss
sbb
rclb
adc
bound
clc
sbb
push
in
mov
in
pop
std
dec
shll
add
nop
mov
addr16
push
and
push
dec
test
cbtw
sub
ret
adc
mov
jle
lret
cmp
jb
fbld
and
test
mov
xchg
push
jb
adc
sub
adcl
loop
add
and
adc
lods
ljmp
loop
sbb
add
push
fdivrs
jmp
rolb
jl
and
leave
fs
test
dec
inc
or
daa
data16
ja
int3
jle
adc
inc
test
ss
jo
cli
aas
cli
adc
or
subl
adc
cld
test
lock
mov
sub
lock
push
cmp
add
pop
push
mov
add
jns
cmp
or
lret
cmp
ljmp
push
sub
mov
mov
dec
xor
outsl
mov
push
incl
jne
push
xchg
jo
adc
mov
dec
aas
inc
add
or
cmc
sbb
lea
or
mov
add
pop
xchg
inc
scas
jnp
sbb
cld
inc
pop
aaa
lock
mov
adc
xor
adc
add
mov
fisttpl
or
add
and
xor
aaa
ret
adc
test
adc
jno
adc
inc
cs
imul
and
cmpsb
or
popl
incl
sbb
cmpb
andb
addb
inc
ljmp
testl
fsts
repz
ljmp
add
mov
pop
outsb
int3
xor
push
jne
jns
insl
dec
cs
call
add
mov
sub
ds
pop
adc
or
jecxz
xchg
dec
mov
sbb
adc
xchg
lods
sub
inc
fsubs
out
loopne
cmp
add
in
shlb
xor
rcl
je
mov
xor
push
cmp
adc
ljmp
add
adc
faddp
sub
sub
add
roll
sarb
call
clc
loopne
sub
mov
jmp
jp
nop
xchg
ljmp
icebp
jo
shlb
loope
jp
int3
loopne
xchg
hlt
xor
pop
das
pop
mov
movl
je
xor
inc
mov
popa
jmp
ds
std
xchg
mov
add
jmp
lock
xor
lahf
xchg
add
or
data16
sub
scas
mov
push
adc
aad
jmp
sub
iret
push
inc
orb
out
out
loop
pop
test
ds
or
push
mov
xchg
push
push
pop
xchg
inc
les
mov
mov
adc
nop
ja
push
sbb
mov
add
xchg
sub
mov
push
pop
dec
lret
add
mov
and
pop
out
inc
js
sub
mov
push
jno
dec
mov
xor
stos
jbe
enter
pop
aaa
add
mov
es
lods
out
orl
pop
cmp
out
inc
sbb
adc
nop
sub
idivb
ret
enter
jno
pop
mov
adc
rcll
xchg
add
lret
into
or
insl
call
out
adc
pop
std
xchg
mov
andl
mov
test
inc
mov
jge
adc
mov
fldl
cwtl
int3
sub
std
jge
shrd
xor
pop
push
mov
or
inc
jmp
imulb
cmc
jbe
inc
mov
mov
mov
outsl
mov
sti
add
rorb
setno
fs
in
les
mov
imul
pop
mov
push
sbb
lock
mov
mov
pop
cmp
or
test
dec
inc
js
sbb
pop
or
lock
cld
out
pop
insb
sbb
out
xchg
rcrb
xor
mov
fmulp
insb
aad
sbb
push
cmpsb
test
push
push
or
adc
push
gs
pop
sbb
mov
into
rcr
or
call
mov
lea
inc
push
mov
in
imul
mov
arpl
mov
xchg
lods
adc
pop
call
stc
xor
jbe
adc
cltd
push
daa
jle
sub
orl
ret
iret
ret
fsubrl
sub
push
jl
pop
jl
xchg
xor
test
cmc
mov
insl
insl
std
jle
mov
loopne
add
adc
subb
dec
inc
rcll
mov
sahf
jne
jmp
je
dec
pop
pop
sub
cmc
faddl
loop
sbb
jb
push
je
pop
mov
or
push
mov
jmp
sub
int3
adc
je
cmp
xor
sbb
or
retw
push
cwtl
int3
dec
inc
pop
sub
xchg
nop
out
sub
adc
pop
jge
mov
and
push
pop
push
adc
mov
push
xchg
mov
push
daa
test
nop
data16
add
dec
gs
jmp
sbb
in
push
pop
add
inc
add
sub
xor
lea
inc
jmp
and
daa
test
hlt
or
nop
out
loopne
push
loopne
cmp
ret
and
inc
dec
sub
push
js
mov
ljmp
lds
sbb
and
pop
cmc
xchg
pop
jo
add
stos
xor
clc
nop
mov
jb
in
aad
aam
fistps
xor
movsb
dec
push
bound
pop
pop
xchg
sub
adc
sbb
loopne
jo
push
mov
popf
lods
mov
and
movsb
rcl
shrb
xor
call
adc
pop
push
sbb
cld
lds
adc
insl
add
out
adc
mov
aaa
pop
mov
jbe
add
or
pushf
leave
arpl
test
nop
or
subb
pusha
movsb
dec
push
cwtl
sub
mov
inc
push
pop
stos
shlb
jmp
jl
inc
loopne
les
loopne
nop
lcall
sbb
cld
adc
push
push
cld
fidivs
fs
mov
arpl
lods
xor
andl
cmp
in
imul
ljmp
fidivrl
inc
fstp
inc
adc
adc
outsb
adcb
push
test
pop
ficoml
sahf
xchg
jne
mov
mov
pusha
and
adc
jae
and
inc
aam
pop
sub
push
push
add
pop
dec
sub
cli
xor
mov
out
dec
out
mov
movsb
mov
dec
mov
xor
add
ds
notb
sub
or
xor
jmp
decb
mov
pop
mov
inc
loope
push
push
add
add
inc
push
or
push
mov
roll
xor
int3
pop
in
rorb
add
aam
xchg
aaa
pushf
push
in
dec
mov
aam
mov
adc
movl
call
add
out
scas
les
sahf
dec
mov
push
std
pop
xor
scas
movb
jge
into
adc
and
or
dec
aam
je
call
fiadds
mov
inc
and
mov
xor
jl
mov
dec
dec
push
in
xor
mov
cli
dec
rclb
int3
push
mov
punpckhbw
decb
fnstsw
lock
scas
inc
js
in
lods
push
xchg
or
xchg
test
jle
andl
inc
adc
je
mov
mov
or
inc
mov
xor
add
stos
pop
mov
sub
inc
call
mov
sbb
in
dec
cld
sbb
xor
movb
arpl
add
adc
popa
jmp
push
mov
test
add
faddl
and
jg
and
and
or
daa
mov
mov
lods
dec
adc
mov
add
movsl
pop
add
jmp
inc
jmp
push
jo
js
pop
stc
xor
pop
pop
mov
mov
mov
inc
lods
les
xor
sbb
sbb
cwtl
mov
mov
aam
mov
or
shlb
cmp
lret
dec
or
mov
sub
inc
data16
adcb
dec
mov
adc
cwtl
mov
outsb
push
mov
pop
fidivrl
pop
ret
add
fwait
testb
push
mov
add
clc
movsl
xor
orb
inc
add
lcall
repz
fdivr
loopne
and
mov
int3
inc
push
lock
add
aaa
xchg
inc
or
rcl
and
gs
out
cli
jnp
ret
push
mov
push
ret
add
cwtl
es
je
cmpsb
mov
xchg
subl
lock
es
sbb
in
push
cmp
fadd
jnp
push
hlt
lock
sbb
mov
mov
dec
or
or
sub
shrb
sbb
clc
shr
mov
inc
push
subb
or
cwtl
add
or
sub
push
xchg
mov
and
and
or
or
xchg
aas
dec
fsubrp
push
icebp
stos
mov
push
imul
pop
adc
mov
js
rcr
lock
inc
mov
daa
dec
jb
subl
push
out
xchg
loopne
mov
or
push
sbb
cld
clc
pop
adc
add
cwtl
enter
fiaddl
add
fsubr
loope
jp
sbb
fwait
cmp
ljmp
mov
scas
test
cli
fs
test
loopne
mov
xor
lret
int3
push
fucomi
or
push
cmp
fs
repnz
dec
mov
sbb
inc
pop
pop
mov
fstl
inc
inc
jmp
outsb
fdiv
js
sub
jb
daa
sbb
mov
push
aaa
pusha
pop
loope
push
sub
inc
ss
bound
mov
dec
jns
cmp
mov
iret
inc
mov
mov
shrb
rolb
sub
push
add
pusha
js
adc
pop
mov
call
shr
inc
and
mov
push
push
clc
pop
sub
push
sub
into
pushf
out
sbb
shlb
outsb
jne
fmuls
pop
add
fcmovbe
xor
push
nop
lock
jno
call
and
cmpb
push
pusha
test
std
adc
mov
dec
or
sub
fistps
decl
fstpl
insb
test
test
addl
iret
inc
mov
loopne
fs
lcall
cwtl
cld
call
pop
sub
test
or
adc
nop
fisubl
inc
xor
sub
add
push
in
enter
pop
inc
cmp
out
pop
daa
cmp
repnz
sub
cmpsb
in
pop
pop
js
push
dec
and
xor
pop
repnz
jbe
sbb
pop
rclb
loop
fwait
push
cmc
add
fmuls
jmp
mov
mov
ljmp
inc
imul
jmp
and
inc
lock
or
pop
mov
xchg
xchg
out
sub
daa
insb
xchg
add
or
mov
add
sbb
pusha
sbb
jno
mov
js
adc
out
call
mov
out
jmp
movsb
and
std
movlps
int
jb
int
adc
sbb
xor
inc
cld
fwait
ja
dec
dec
gs
movsb
inc
lock
ret
inc
push
jle
mov
ret
mov
jmp
adc
inc
test
pop
ret
addr16
shlb
pop
pop
jne
jnp
sbb
sbb
mov
or
pop
stos
test
inc
jne
fmuls
add
xlat
cli
test
add
pusha
aas
mov
dec
lock
xorb
cmp
push
sub
jne
movsb
mov
das
fsubl
lcall
or
fs
push
imul
movnti
imul
clc
mov
enter
xchg
push
push
sbb
leave
or
push
cmp
mov
insb
mov
aad
inc
orl
fs
cli
cmp
incl
jg
pop
stc
jle
push
sub
dec
ss
inc
pop
int3
clc
mov
loope
jge
add
push
fucomp
fistl
in
sub
insb
push
add
aam
leave
addb
test
sbb
movsl
jl
push
rclb
imul
fidivl
je
push
int3
int3
mov
add
push
arpl
pop
ds
test
push
sti
sub
lds
fistl
shrl
mov
in
xchg
jo
inc
mov
adc
add
mov
mov
jbe
push
and
sbb
fs
loope
dec
mov
sub
mov
inc
stc
mov
les
es
in
add
sbb
pop
adc
es
popf
or
stos
sub
incl
xor
mov
jne
ret
in
push
test
mov
and
push
push
pop
out
fidivs
jne
clc
add
dec
push
xor
sbb
decl
xor
roll
pop
add
fsubl
adc
pop
push
sti
mov
hlt
out
push
mov
mov
add
xor
enter
inc
or
inc
loopne
cmp
lahf
sub
or
popa
mov
xor
sbb
inc
and
pop
fbstp
fsubr
ret
pop
rolb
fs
or
add
ret
les
inc
call
fldcw
sub
sbb
loopne
and
es
leave
mov
lahf
mov
mov
popa
shlb
fcmovne
inc
sub
and
imul
les
insb
mov
popa
mov
add
test
in
shl
sar
adc
mov
lock
or
cli
aad
addl
hlt
sti
mull
and
mov
ret
stc
mov
shll
push
pop
mov
movsb
and
repz
xchg
ljmp
sbb
fmuls
xchg
pop
arpl
jle
pop
pop
dec
inc
lcall
push
xchg
gs
add
xor
cs
or
mov
fistl
adc
cli
shll
shll
cmpsb
add
adcl
sub
test
dec
push
mov
xchg
cmp
movsl
push
xchg
cli
orb
pop
incl
mov
sbb
add
mov
roll
xor
insl
and
outsb
gs
xor
pop
test
add
fcmovnu
ret
cs
pop
xor
pusha
ss
push
or
cs
clc
mov
insb
dec
pop
push
xchg
and
pop
daa
jno
cld
hlt
or
xchg
decl
inc
jmp
adc
push
or
xor
out
clc
div
push
pause
movsb
push
inc
add
cmp
clc
mov
cwtl
js
mov
add
dec
inc
dec
and
iret
xor
dec
test
cwtl
call
pop
cmp
fiaddl
and
std
daa
xor
gs
call
mov
xor
mov
push
push
into
icebp
fs
loope
and
push
imul
jg
ret
outsl
jp
nop
add
push
adc
sbb
mov
idivl
and
mov
mov
push
gs
mov
cwtl
hlt
cltd
add
sarb
cmpsb
mov
sbb
mov
fdiv
ret
loopne
mov
std
call
dec
orb
pop
mov
inc
loopne
cmp
xor
push
push
adc
int3
int3
cmpb
cs
inc
mov
scas
jp
aas
or
jb
sbb
sbb
mov
xchg
aam
arpl
sbb
inc
vcmpsd
pop
xor
pop
jmp
cwtl
push
add
stos
mov
jl
inc
cmp
xchg
pop
add
sarb
cwtl
cmp
inc
std
movsl
push
aam
stos
pusha
jo
enter
and
mov
xor
add
imul
inc
shll
xchg
cmc
mov
and
dec
sbbb
dec
loopne
cmp
loope
adc
sub
sbb
hlt
and
or
jb
inc
push
call
loope
and
dec
sub
inc
or
fsts
cmp
mov
fsubrl
add
sub
jo
sub
cmp
rolb
js
add
jle
scas
xchg
cmp
or
clc
cli
inc
inc
inc
dec
lock
out
cwtl
in
push
inc
mov
int3
mov
xor
cmp
movsb
sbb
in
or
mov
and
push
or
add
or
je
out
insb
movsb
pop
shlb
rcrl
insb
aam
rcll
pusha
or
xchg
pop
ds
pushl
cld
fisubrl
adc
popa
sbb
mov
imul
add
jo
push
stos
hlt
mov
je
jo
mov
out
sarl
xlat
sub
in
test
sbb
popf
sbb
dec
add
cmp
das
lods
daa
fldl
jmp
xor
or
mov
jmp
ficomps
fs
mov
xor
inc
scas
sahf
cmp
ret
dec
clc
push
std
sbb
add
andb
mov
adc
outsl
aas
xlat
xor
cld
jno
test
int3
dec
inc
pop
test
arpl
fldt
xor
pop
pushf
inc
cld
push
mov
mov
or
ljmp
mov
mov
push
mov
cld
jmp
xor
sbb
adc
inc
inc
inc
cmp
dec
les
fs
or
cli
or
dec
imul
mov
incl
add
clc
loope
push
jmp
inc
fdivrl
lock
cs
inc
inc
loop
add
dec
adc
add
rorl
sahf
out
int
insb
inc
push
add
push
sahf
int3
inc
add
or
mov
test
test
mov
rol
aas
lret
ret
in
ss
fisttpl
repz
ja
test
xor
push
loop
pop
mov
mov
and
cmpb
pop
loopne,pn
movsb
call
add
push
mov
add
mov
paddq
stos
rorb
sbb
push
push
test
xor
adc
mov
repnz
push
adc
aas
and
xor
inc
cmp
ret
pop
jne
mov
and
insb
sahf
ja
mov
outsb
movl
push
shrb
scas
incb
lahf
sub
mov
cmpb
ss
push
cwtl
add
lds
lcall
add
rolb
sbb
sub
mov
lcall
mov
gs
add
shl
pushl
push
cmp
clc
dec
jae
push
mov
add
add
lock
iret
sti
adc
lods
call
pop
push
int
inc
adc
mov
xorl
xchg
shrl
xor
mov
cmpl
outsb
dec
cmpsl
mov
sbb
lock
enter
cld
push
stos
adc
clc
out
or
push
outsb
xchg
jne
outsl
xchg
and
aam
out
inc
fidivrl
push
dec
xlat
test
mov
lock
test
or
inc
enter
out
lcall
stc
inc
or
insl
or
sub
jno
xchg
js
insb
shlb
mov
ljmp
xchg
add
into
jo
adc
inc
addr16
loopne
inc
and
push
fisubrl
mov
les
xchg
icebp
out
movsb
jne
or
psrlw
rorb
jg
shrb
sbb
scas
les
repz
mov
sbb
call
ret
xchg
jb
xor
mov
imul
adcl
scas
or
mov
call
dec
dec
loope
inc
jne
sub
loope
enter
and
mov
outsl
lea
aam
pop
shl
stc
xor
mov
cmc
adc
push
dec
sbb
push
addb
aam
push
xlat
ret
mov
hlt
negb
and
rcr
insl
outsb
lea
pop
loop
xchg
outsl
pop
add
js
add
rolb
je
and
inc
popl
scas
mov
mov
popa
popa
loopne
loop
inc
lods
mov
mov
jecxz
xor
mov
popf
and
xchg
cmp
pop
sbb
je
pop
mov
je
dec
and
add
imul
push
pushf
movsb
sbb
scas
sub
std
sahf
add
adc
je
clc
add
inc
cld
xchg
dec
jmp
cmp
es
shr
jge
sbb
mov
dec
testb
fs
ja
es
lock
pop
mov
popf
adc
adc
hlt
push
add
test
or
orl
cmp
insb
mov
pop
test
notb
dec
stos
dec
ret
icebp
add
jmp
sub
pop
inc
jp
inc
pop
in
inc
mov
je
sbb
daa
cmp
add
jbe
pop
inc
fucomi
outsb
add
insb
lods
shlb
fs
or
enter
jmp
push
lock
fidivs
xchg
adc
xor
xor
enter
gs
mov
dec
sbb
xor
das
add
jmp
sbb
fisubrl
sub
xor
mov
shrb
push
push
lock
leave
hlt
mov
nop
mov
roll
fld
xchg
jp
insl
inc
aaa
fiadds
jp
js
ss
xor
inc
and
lahf
notb
inc
mov
mov
arpl
sub
mov
dec
sub
push
sub
sbb
outsb
mov
push
push
enter
inc
outsb
add
adc
pop
shl
sub
insb
out
add
mov
cmp
push
mov
mov
jns
mov
add
sub
adc
jne
sbb
cmp
mov
adc
rolb
sbb
clc
orl
dec
mov
inc
nop
dec
xchg
in
cmp
loope
popa
or
icebp
mov
shll
cli
jmp
and
and
xor
mov
movsb
lock
push
test
or
movsb
inc
sar
imulb
and
insl
nop
or
outsb
add
jmp
movsb
pop
cld
jg
sbb
xor
pushf
or
ljmp
push
dec
and
mov
or
xor
sub
sbb
xchg
add
jge
std
adc
mov
xor
lods
test
lods
into
mov
cli
lahf
inc
inc
hlt
je
js
inc
jae
imul
push
ds
in
adc
sbb
leave
movsb
arpl
dec
cmc
mov
add
mov
call
clc
test
cli
imul
aad
loop
cmp
push
jmp
lods
mov
or
sti
add
and
jge
fs
js
popf
insl
popa
cmpb
scas
mov
pop
jo
sub
fisttpll
shlb
rol
mov
jp
cli
add
and
pop
dec
repz
and
test
jne
rol
stc
dec
push
add
dec
and
lret
sbb
adc
fiaddl
and
sub
rol
or
out
dec
mov
gs
or
xlat
aas
and
insb
sub
into
inc
dec
call
add
or
and
adc
inc
cmp
pop
mov
aas
adc
jo
mov
cmp
mov
jne
push
and
xlat
add
xor
les
pop
rorl
mov
sbb
mov
icebp
and
mov
mov
cs
pop
test
lods
adc
mov
clc
insb
fdivrs
sub
add
xchg
loop
sub
pop
lcall
scas
adc
pop
addl
cld
inc
lods
sbb
test
outsl
lea
nop
dec
cmp
sub
call
cmp
jnp
call
popf
jbe
mov
fsubl
push
and
lea
xchg
repnz
ss
xchg
dec
xorb
mov
jb
add
out
or
cwtl
mov
push
cli
xor
mulb
xor
cmp
add
dec
adc
xchg
les
divb
add
inc
cld
loope
mov
mov
sbb
pop
mov
push
adc
sub
ljmp
xchg
xor
enter
cmp
sarb
mov
pop
and
lock
push
push
sbb
add
push
and
shrb
adc
dec
jne
movsb
dec
lret
ret
mov
enter
data16
xor
das
add
enter
add
cmp
xchg
sub
pop
cmp
mov
xor
mov
sub
faddp
ja
or
xchg
cmc
jo
mov
mov
lret
inc
into
mov
orb
pop
push
mov
decl
and
loope
or
adc
or
movsb
js
test
mov
out
dec
std
gs
rorl
in
aas
add
inc
call
lock
or
rolb
jmp
mov
clc
xchg
repnz
cli
push
mov
lods
xchg
or
push
jg
xchg
enter
push
iret
mov
pop
subb
inc
add
pop
cmc
and
pop
inc
pop
ja
mov
add
pop
add
mov
jp
test
rolb
xor
test
jmp
mov
mov
adcl
fsubrl
push
inc
pcmpeqd
sub
push
push
push
mov
subb
inc
clc
insl
sbb
mov
clc
mov
jae
pop
js
or
sub
sub
mov
stc
xor
mov
jo
loope
rcrb
in
mov
lret
sarb
cwtl
jbe
cli
or
fiadds
mov
and
mov
add
sub
pop
je
mov
adc
add
je
call
js
cmp
cmpsb
pop
das
add
fcmovbe
pop
pop
push
adc
repz
push
lea
pop
push
push
push
daa
insl
pop
aam
jmp
xor
add
xor
and
push
or
xchg
push
dec
test
and
incb
aad
or
data16
fidivrs
add
pusha
sub
loopne
adc
rcrl
mov
dec
outsl
out
push
add
je
or
dec
scas
data16
pop
add
aas
and
push
cltd
lcall
daa
adc
jo
arpl
call
and
mov
dec
dec
leave
test
loop
push
repnz
push
push
imul
dec
pusha
pop
lret
mov
add
bt
cli
xlat
push
pop
aam
or
rolb
pop
mov
call
mov
xchg
lcall
cmpb
mov
ret
mov
adc
in
sub
int3
push
or
rclb
jge
ds
mov
pop
imul
ficoms
cmp
cmp
sbb
dec
cmp
in
jmp
pushf
push
in
adc
pop
sarl
sub
mov
cld
es
lret
adc
push
xor
xlat
ss
pop
and
or
addr16
push
orl
or
int3
mov
jno
adc
pop
rolb
data16
subb
xchg
pop
sarb
sbb
idivl
addb
ss
aaa
add
xor
xor
mov
mov
or
test
popa
cmpsb
movsb
add
or
ret
push
clc
shll
lods
xor
outsl
outsb
push
shlb
test
xchg
inc
mov
orb
fcoml
jle
int3
mov
xchg
push
mov
sub
jb
addl
sbb
outsl
mov
jp
int3
push
jmp
add
xchg
inc
xor
lds
aaa
xchg
lea
inc
add
mov
xchg
icebp
or
sub
outsl
push
xor
mov
pushl
sbb
mov
push
subb
cwtl
cmp
iret
mov
insb
push
and
and
add
adc
dec
sahf
lock
clc
daa
push
inc
and
push
call
lret
leave
inc
das
xlat
fdivl
mov
pop
xor
pop
ss
lods
xchg
mov
aad
pop
inc
inc
and
leave
test
adc
push
jae
adc
jae
xor
hlt
pop
cli
xchg
lea
xchg
pop
lea
loop
xchg
inc
loopne
std
push
add
jge
lea
jbe
xchg
sub
or
movsb
sti
jo
test
cmp
rorb
lea
push
mov
or
test
adc
cmp
xor
push
aad
or
test
mov
adc
jle
lcall
push
jg
add
test
lret
xor
mov
cmp
test
xor
js
lcall
pusha
or
or
cs
dec
enter
add
int3
loopne
loope
out
lahf
cs
mov
fistl
xchg
outsb
add
xor
sbb
adc
or
xor
movsl
xchg
dec
and
jbe
out
js
shlb
push
push
lock
pop
mov
add
test
dec
hlt
push
out
sahf
inc
xchg
call
add
sbb
enter
pop
inc
mov
into
mov
cmc
inc
sub
inc
xor
imul
ss
push
xor
mov
stos
add
push
sar
lea
push
imul
stos
inc
cmp
add
add
jecxz
or
mov
pop
and
mov
call
mov
sub
movsb
popf
push
cmpsl
and
rclb
incl
ljmp
stos
adc
push
xchg
rcrb
push
inc
pop
add
inc
call
rolb
loopne
loopne
cld
jb
cltd
mov
mov
shrl
or
outsb
push
jecxz
and
mov
push
inc
lret
and
add
mov
test
in
ret
fcoms
cmp
loop
mov
add
outsb
test
clc
xlat
mov
push
dec
fiaddl
movsl
dec
push
or
popa
movl
xchg
inc
inc
cmpl
int3
and
adc
shl
sarb
mov
mov
mov
jl
push
insl
mov
in
adc
fcoms
inc
in
enter
incb
stc
inc
push
mov
mov
dec
data16
cmp
xor
popl
pop
shrb
aaa
xor
cmpsb
icebp
mov
mov
inc
mov
add
inc
scas
adc
divb
das
xor
ror
stc
lea
inc
sarb
lcall
xor
lock
mov
pop
fmuls
pop
add
and
mov
sarl
lods
in
and
shlb
ss
outsb
mov
mov
rclb
insb
pop
adcl
jne
push
or
loopne
push
fisubl
and
imul
cmpsl
nop
mov
ret
mov
mov
push
and
mov
pop
adc
add
or
inc
push
enter
jo
inc
daa
or
das
sahf
je
mov
lea
dec
pop
push
hlt
test
sub
out
sbb
mov
mov
or
pop
mov
or
int
pop
clc
stc
nop
shlb
les
sub
jge
pop
sub
xchg
mov
push
call
dec
lret
push
adc
cmc
nop
mov
rol
sub
int3
cmp
sbb
push
push
je
adc
lret
sub
pusha
xor
mov
in
add
mov
ss
add
mov
mov
mov
rcll
pop
mov
into
push
xor
dec
jb
mov
repnz
std
inc
and
inc
pop
sub
mov
call
push
shrb
cmpsb
aam
loopne
add
lcall
pop
mov
dec
fs
lock
cmp
into
lcall
shl
adc
xchg
test
maxps
dec
cmp
test
mov
mov
adc
cli
push
bound
xchg
pushf
xrelease
insb
sub
int
inc
lods
mov
fiadds
inc
dec
dec
jg
mov
lea
pop
dec
outsl
xor
add
add
lods
fnsave
lods
add
sbb
mulb
push
fbld
inc
mov
push
push
push
push
inc
inc
push
inc
inc
mov
imulb
push
push
dec
dec
inc
inc
push
inc
adc
dec
push
dec
inc
push
push
inc
push
scas
mov
jle
cs
push
push
push
xchg
or
pushl
es
arpl
repnz
add
std
ljmp
xlat
stos
jbe
or
cli
pop
inc
lock
aam
scas
pushf
movsb
jb
mov
es
push
int3
xor
in
jno
xor
sbb
and
daa
mov
or
mov
mov
sub
das
test
pop
push
pop
cli
dec
mov
iret
shr
stos
sti
inc
dec
jbe
add
mov
lahf
test
mov
cmp
mov
and
repz
or
call
in
pop
xchg
inc
pop
les
sbb
orl
inc
out
mov
fneni(8087
xor
cmp
dec
push
and
ret
bound
enter
aad
test
gs
or
jmp
call
mov
mov
dec
add
push
popa
xor
sbb
lcall
xchg
fwait
push
xchg
into
push
sub
mov
inc
push
mov
mov
jmp
clc
jl
test
ja
cltd
idivb
push
repnz
fisubrs
mov
vandpd
pushl
xor
add
addr16
out
sbb
stos
stos
out
jbe
lcall
sbbb
jge
xchg
cli
cli
adc
mov
leave
sti
lock
lods
in
mov
aam
pop
mov
scas
ljmp
pushf
mov
in
jb
fwait
rol
jne
mov
loope
std
sbb
xchg
xchg
scas
dec
es
ss
ljmp
aas
aas
inc
cmc
div
cmp
int3
dec
push
movsl
movsl
hlt
shl
in
stc
push
icebp
or
jno
xchg
stos
fcomp
jae
xor
push
sub
add
xchg
mov
gs
lock
add
ret
movsb
sbb
sub
xchg
xchg
mov
es
lcall
and
adc
sbb
jmp
loop
int
jmp
dec
daa
daa
imul
jne
adc
or
sbb
sub
je
loopne
in
sbb
cs
sbb
mov
pop
out
pop
mov
push
divb
std
call
out
popa
jge
mov
push
sub
jnp
jecxz
ds
das
das
jno
test
pop
adc
mov
in
in
sub
and
jmp
pusha
jecxz
cld
pop
jns
mov
mov
pop
in
aam
push
lret
lret
inc
addr16
cmp
dec
decl
cwtl
dec
dec
aam
pop
pop
call
mov
out
out
sub
stos
in
sti
sti
push
xchg
incl
lcall
push
adc
inc
iret
jmp
add
push
jg
andl
cmp
inc
and
test
jecxz
push
push
repz
mov
inc
rolb
call
mov
icebp
cmc
cmc
add
mov
mov
scas
fcmovu
jne
and
arpl
adc
call
sbb
repz
mov
int
dec
sbb
adc
jmp
adc
xor
mov
xchg
xchg
mov
cs
pop
cmp
sub
jle
cmpb
inc
enter
mov
pushl
sbb
sub
jae
xchg
shlb
sbb
dec
shll
and
push
sub
jle
cmp
mov
out
out
sub
mov
cmp
jns
pop
pop
loop
incl
push
or
sbb
shl
xor
push
je
cmp
or
push
xchg
dec
dec
fisttpl
push
or
and
mov
ret
mov
lods
lods
out
les
cmpsb
cmp
ljmp
shl
in
bnd
mov
out
mov
enter
aaa
pop
fisubrl
ljmp
add
aad
pushf
dec
dec
rorb
test
mov
push
push
cli
repz
hlt
pop
iret
ljmp
lret
scas
hlt
jp
cmp
scas
jmp
outsl
mov
mov
and
jb,pn
sbb
and
cmpsb
cmpsb
icebp
jae
mov
xchg
mov
lret
call
add
jl
pushf
ds
pop
and
mov
pop
cli
decl
test
jo
nop
jl
ds
jno
mov
int3
data16
jmp
or
fadds
add
add
sbb
push
adc
popa
popa
mov
scas
push
jmp
imul
rcrl
sbb
fabs
loope
jmp
clc
clc
adc
cwtl
cwtl
mov
adc
xor
imul
pop
mov
cmpsl
sub
mov
lcall
push
and
jmp
into
dec
stos
push
xchg
ljmp
sub
js
jp
mov
or
lcall
pop
gs
out
test
shrb
mov
sub
lcall
sub
adc
mov
test
push
cld
insl
mov
push
cmp
add
repz
mov
push
add
cmp
out
inc
repz
repz
inc
xchg
iret
leave
or
addr16
ljmp
xchg
pop
ret
iret
repz
push
inc
iret
repz
add
hlt
xor
cmp
repz
jae
aas
or
cmp
repz
gs
sub
lgs
ss
cmp
es
iret
repz
je
sub
iret
out
sti
testb
cmp
repz
jno,pt
cmc
repz
repz
iret
repz
enter
iret
repz
aam
dec
imul
iret
repz
push
repz
push
xchg
iret
adc
cmpl
mov
iret
repz
mov
iret
dec
add
shll
iret
repz
sbb
insl
dec
repz
repz
das
loope
iret
repz
int3
cmp
addb
repz
out
xchg
mov
cwtl
sarl
jle
repz
stos
or
sarl
iret
repz
loop
jbe
repz
repz
dec
push
fisttpl
iret
repz
insb
in
outsb
out
cmpsb
cmp
repz
movsb
aaa
mov
repz
repz
pop
mov
fs
repz
shl
mov
pop
and
scas
mov
sbb
repz
xrelease
and
iret
repz
push
and
cmp
repz
faddl
iret
repz
les
cmp
add
mov
iret
repz
pop
daa
mov
repz
repz
mov
cmp
repz
js
repz
repz
adcb
xor
repz
mov
cmp
repz
cld
cmp
cmp
repz
jnp
imul
cmp
outsl
lds
add
cmp
repz
xlat
stos
jbe
repz
repz
cli
pop
iret
repz
inc
lock
aam
scas
cmp
repz
movsb
jb
mov
cmp
repz
xchg
es
iret
repz
test
cmp
repz
fdivs
adc
repz
and
sbb
add
loop
iret
repz
daa
mov
or
cmp
repz
outsb
iret
repz
pop
mov
cmp
repz
jecxz
test
cmp
repz
in
and
iret
repz
mov
push
mov
cmp
dec
pop
iret
shl
cmp
repz
stos
sti
inc
dec
iret
repz
xor
cmp
repz
cmp
test
repz
repz
iret
repz
cmp
mov
iret
repz
push
ror
repz
repz
in
pop
xchg
iret
repz
inc
pop
les
repz
pop
sbb
repz
repz
cmp
nop
mov
mov
cmp
pop
or
loopne
cmp
repz
or
iret
repz
and
ret
bound
repz
xchg
in
out
cmp
repz
aad
repz
dec
test
cmp
repz
jp
or
js
cs
iret
repz
mov
call
iret
repz
mov
cmp
repz
dec
add
repz
testb
xor
repz
rcrl
repz
cwtl
adc
iret
repz
mov
iret
repz
push
sub
mov
cmp
repz
iret
repz
inc
push
cmp
repz
push
mov
iret
repz
jnp
imul
cmp
outsl
lds
add
cmp
repz
xlat
stos
jbe
repz
repz
cli
pop
iret
repz
inc
lock
aam
scas
cmp
repz
movsb
jb
mov
cmp
repz
xchg
es
iret
repz
test
cmp
repz
fdivs
adc
repz
and
sbb
add
loop
iret
repz
daa
mov
or
cmp
repz
outsb
iret
repz
pop
mov
cmp
repz
jecxz
test
cmp
repz
in
and
iret
repz
mov
push
mov
cmp
dec
pop
iret
shl
cmp
repz
stos
sti
inc
dec
iret
repz
xor
cmp
repz
cmp
test
repz
repz
iret
repz
cmp
mov
iret
repz
push
ror
repz
repz
in
pop
xchg
iret
repz
inc
pop
les
repz
pop
sbb
repz
repz
cmp
nop
mov
mov
cmp
pop
or
loopne
cmp
repz
or
iret
repz
and
ret
bound
repz
xchg
in
out
cmp
repz
aad
repz
dec
test
cmp
repz
jp
or
js
cs
iret
repz
mov
call
iret
repz
mov
cmp
repz
dec
add
repz
testb
xor
repz
rcrl
repz
cwtl
adc
iret
repz
mov
iret
repz
push
sub
mov
cmp
repz
iret
repz
inc
push
aas
iret
repz
push
mov
call
inc
gs
sbb
movsb
ret
cmp
pop
xchg
cmp
inc
icebp
lods
cli
pop
stos
dec
jecxz
xchg
and
cli
ja
call
jbe
testb
dec
and
lds
lret
xlat
es
xorb
mov
dec
and
ljmp
ret
das
jne
orl
imul
stc
movb
pop
out
xchg
pushf
xchg
mov
push
pop
fcmovbe
mov
and
dec
loopne
sub
dec
inc
jne
mov
mov
cltd
pop
imul
jno
mov
mov
data16
cmp
sbb
adcb
jg
mov
ja
mov
andl
xchg
jo
push
sbb
clc
mov
jae
and
add
jecxz
push
push
ljmp
pop
das
mov
add
aaa
or
and
push
in
push
incl
sub
pop
repnz
imul
int
add
bound
les
decb
mov
mov
xor
in
cmp
out
stos
pop
jno
push
mov
cmc
adc
and
fldl
cmp
dec
out
inc
xchg
push
lea
add
scas
add
push
aam
pusha
lock
jmp
int3
jmp
sahf
ja
call
mov
jns
out
inc
psubsw
test
inc
and
addb
push
adc
insb
pop
jb
std
push
sti
jne
aad
ss
fldenv
cmpsb
and
ss
decl
addr16
push
out
mov
xchg
rcrb
fwait
xchg
sahf
add
dec
popa
fsubl
mov
sbb
sbb
decl
mov
in
and
inc
adc
pop
sbb
mov
lods
sub
mov
push
icebp
sbb
out
cltd
fnstsw
testl
cmc
mov
push
test
lds
jle
sub
and
fdivl
lcall
xlat
xor
lret
test
adc
adc
test
jge
mov
cmp
adc
sub
dec
fdivl
push
in
ja
jecxz
sub
mov
cli
inc
jmp
mov
mov
jge
fsubs
xor
fnstcw
call
rorl
cmpsb
cmc
or
fidivl
mov
in
js
call
fwait
push
jle
testb
call
add
cmc
lahf
pop
cmpb
call
test
enter
adc
jge
call
cmp
or
lcall
hlt
in
lcall
out
outsb
gs
jmp
jle
mov
call
pushl
into
ljmp
xor
xor
movsl
xchg
xor
dec
mov
dec
cmpsb
loopne
shlb
icebp
add
dec
inc
in
jg
push
push
pop
xchg
imulb
jbe
lea
pushl
push
in
add
sahf
shll
sbb
sub
mov
popf
pop
ljmp
pushl
jae
or
mov
sbb
push
jmp
inc
adc
mov
or
pop
clc
adc
jmp
cmp
into
test
leave
xor
jp
mov
pushf
rcr
pop
push
repnz
pushl
sbb
jns
aaa
mov
pop
std
stos
pop
fistpll
fildl
mov
inc
cmp
sub
mov
ret
jb
loop
or
cmp
out
xchg
or
add
or
mov
pushf
fs
rcll
xor
insb
insb
pop
je
mov
push
ret
sahf
out
sahf
xchg
lret
icebp
stos
xchg
push
jns
out
notb
jns
out
vpshab
add
mov
out
xchg
jmp
sub
out
inc
push
imul
pop
data16
jns
out
andb
test
jns
out
xchg
pop
sbb
mov
loop
sub
jns
out
add
jns
out
pop
sub
sahf
mov
popf
jns
out
mov
out
sahf
out
push
stc
cmp
sahf
inc
mov
outsl
jmp
sahf
out
xchg
int3
ja
mov
jns
out
fildl
leave
sahf
out
sahf
add
jns
out
push
push
daa
fs
jns
out
cmp
jns
sahf
dec
mov
sahf
out
in
sbb
sahf
out
enter
sahf
out
sahf
std
lahf
mov
sahf
out
fsubrl
lret
jns
out
and
adc
dec
repz
shrb
out
cltd
cli
and
sbb
jns
out
out
mov
sahf
ss
sub
movsb
in
iret
mov
or
call
pop
cmc
mov
cmp
mov
cmpsl
outsb
jnp
cmp
repz
add
iret
repz
fxch
aam
repz
scas
xor
shlb
iret
repz
mov
dec
div
cmp
repz
das
lea
iret
repz
sbb
repz
jae
pop
push
repz
repz
mov
iret
repz
mov
xor
iret
repz
jns
ljmp
xchg
cmp
pop
jb
mov
cmp
repz
pushf
nop
popa
jo
cmp
repz
cmpsl
movsb
iret
repz
pop
imul
cli
cmp
repz
jbe
xlat
lret
repz
repz
mov
repz
shlb
stc
pop
cmp
repz
jp
andl
cmp
repz
repz
jno
lods
lods
cmp
iret
repz
xor
scas
repz
repz
iret
repz
clc
roll
stos
sub
repz
jnp
xchg
push
sbb
repnz
repz
loop
mov
iret
repz
loope
in
out
repz
repz
adc
cmp
mov
sti
cmp
repz
inc
sahf
inc
mov
cmp
repz
out
or
push
iret
repz
add
cmp
repz
aad
fldenv
push
cs
iret
repz
xchg
lds
dec
sbb
sub
pop
or
repz
sbb
repz
pusha
es
cmp
cmp
repz
cld
icebp
faddl
and
and
xor
repz
mov
push
cmp
repz
dec
mov
repz
repz
dec
shll
or
cmp
repz
int3
inc
adc
imull
repz
adc
cmp
repz
mov
outsb
out
cmp
repz
call
repz
jl
and
cmp
rcr
cwtl
cmp
repz
not
mov
iret
repz
add
mov
push
ljmp
inc
sbb
repz
inc
popa
or
iret
repz
cmp
leave
in
fistpll
repz
into
aaa
int
repz
rep
fcomi
les
repz
inc
ret
and
iret
repz
in
test
pop
push
hlt
inc
pop
iret
repz
daa
stos
popf
cli
jecxz
cmp
repz
int3
add
sub
cmp
repz
iret
repz
das
dec
inc
rorl
xchg
insl
push
mov
repz
ret
iret
repz
mov
fistpll
repz
push
push
fs
iret
repz
repz
jnp
dec
pop
push
jmp
iret
repz
lds
sub
add
iret
jns
iret
repz
imul
cmp
repz
mov
andl
iret
repz
and
ds
repz
out
les
push
cwtl
cmp
repz
inc
fld1
mov
cmp
repz
jl
test
repz
add
cmp
repz
scas
sub
iret
repz
or
iret
repz
fwait
rcr
adc
mov
repz
repz
icebp
jne
iret
repz
jg
jb
sti
inc
cmp
repz
in
in
arpl
cmp
repz
dec
mov
iret
sub
cmp
repz
xchg
jmp
iret
repz
dec
cmp
iret
repz
aam
jp
lods
cmp
repz
pop
jle
fdiv
cmp
repz
pop
rcl
iret
repz
and
es
repz
lcall
repz
iret
repz
mov
aas
movsl
mov
cmp
nop
cmpsl
add
repz
repz
dec
out
stos
iret
repz
xchg
shrl
gs
cmp
repz
xchg
addr16
cmp
repz
xlat
mov
iret
adc
cmp
repz
adc
idiv
repz
repz
iret
repz
mov
test
iret
repz
mov
lret
xor
dec
rep
mov
xor
movsl
cmp
repz
sti
jl
jmp
cmp
xor
inc
inc
fsubrp
lret
push
jnp
xor
dec
xchg
or
ret
dec
or
ljmp
mov
mov
pop
mov
and
pop
mov
movsb
pop
int3
pop
gs
insb
jo
push
std
in
mov
push
cmpsl
lea
fsubrs
or
in
add
shrb
add
scas
mov
imul
call
fsubr
xchg
repnz
into
lock
jae
lods
je
out
xor
call
inc
push
sbb
sub
mov
bound
stos
sbb
dec
sarb
lcall
hlt
pop
outsl
clc
mov
lcall
daa
sub
pusha
out
sbb
decl
xchg
leave
pushf
out
mov
sub
mov
jmp
cmp
push
cltd
popa
pop
sub
mov
cmpsl
jmp
loope
adc
push
and
dec
cmp
mov
mov
mov
ds
sbb
subl
call
jbe,pn
orl
scas
into
xchg
push
jp
fidivs
push
inc
sbb
mov
imul
inc
push
test
xchg
jbe
outsb
mov
jbe
sahf
push
jp
movsb
push
es
sbb
mov
push
movsl
mov
pop
dec
movsb
mov
fisubs
xchg
xchg
pop
imul
scas
pop
push
movsl
pop
dec
mov
ljmp
test
push
sbb
scas
movsl
dec
sbb
outsb
sahf
mov
movsb
dec
notb
push
mov
mov
movsb
mov
outsb
mov
fimuls
mov
ljmp
imul
xchg
imul
mov
fisubs
jbe
testb
push
pop
ljmp
movsl
xchg
dec
push
ficoms
movsb
mov
cmp
into
pop
xchg
push
cmp
push
xchg
dec
sbb
cmpsb
jbe
jp
test
outsb
push
push
xchg
jle
push
test
outsb
movsl
mov
imul
jle
jp
test
push
mov
push
mov
push
cs
cmpsl
mov
push
test
ss
xchg
pop
cmp
xchg
push
dec
sbb
jbe
cmp
lods
cmpsl
testb
movsl
mov
test
sahf
sbb
inc
xchg
xchg
jp
mov
sbb
inc
cs
movsl
movsl
ss
imul
xchg
push
jle
cs
cmp
test
ljmp
test
mov
pop
test
jp
pop
push
cmpsl
sahf
jp
jle
es
cmp
lods
xchg
out
jp
lods
mov
mov
imul
test
xchg
cmp
push
scas
mov
push
push
neg
jp
test
dec
mov
test
pop
mov
xchg
push
lods
mov
out
mov
jp
mov
sbb
test
mov
cmpsb
jbe
cmp
mov
sahf
sbb
outsl
pop
pop
add
test
out
sahf
scas
add
or
sbb
sahf
daa
cmp
pop
push
dec
jns
out
inc
je
bound
jns
out
mov
out
sahf
xchg
mov
sahf
out
cmc
iret
rcr
out
sahf
out
jo
push
sahf
out
sahf
pop
inc
dec
and
xor
ds
sbb
out
sahf
out
rcr
out
out
sahf
in
icebp
cli
xchg
cwtl
test
out
mov
jns
out
std
loopne
ficompl
int3
scas
movsl
mov
mov
mov
inc
dec
push
pop
push
out
sahf
popa
jl
push
adc
jns
xor
and
out
sahf
out
xchg
jns
stos
mov
aad
ret
jns
out
enter
in
jns
out
sub
adc
pop
or
outsb
jae
sahf
out
js
inc
pop
push
out
sahf
out
cld
loope
fistpl
int
scas
movsb
mov
mov
mov
out
dec
push
pop
imul
jbe
adc
jns
out
add
cmp
out
xchg
jns
stos
mov
aam
ret
out
leave
clc
repz
in
jns
out
aaa
sub
adc
push
or
sahf
out
jns
inc
pop
push
out
sahf
out
or
sbb
sahf
out
sahf
cmp
pop
push
dec
jns
out
inc
jne
arpl
jns
out
mov
out
sahf
xchg
mov
sahf
out
hlt
fsub
jns
out
jno
addr16
sahf
out
sahf
pop
inc
dec
and
xor
sahf
out
aas
push
add
sahf
out
rcr
out
out
sahf
in
lock
xchg
cltd
test
out
mov
jns
out
or
out
sahf
cmp
and
jb
sahf
out
jg
push
inc
dec
out
sahf
out
in
out
sahf
jmp
mov
scas
mov
sahf
out
mov
lods
sahf
out
sahf
adcb
sahf
out
out
std
lock
sahf
out
data16
pop
sahf
out
sahf
push
inc
dec
add
sbb
out
adc
cmp
out
pusha
ja
pop
sahf
out
sahf
push
inc
dec
add
out
adc
cmp
es
sahf
out
mov
stos
mov
xchg
sahf
aad
iret
jns
out
ret
sti
mul
jns
out
fcmovne
shl
out
sahf
out
clc
cmc
mov
out
test
out
sahf
out
or
xor
sub
sahf
out
jns
push
inc
dec
out
sahf
out
xlat
ror
sahf
out
sahf
jecxz
stc
mov
test
sahf
out
movsl
xchg
sahf
out
pop
adc
sahf
xor
bound
jns
out
jne
pop
dec
inc
out
sahf
out
insb
jnp
push
sahf
out
sahf
pop
dec
inc
or
jns
out
push
cmp
jns
out
mov
out
sahf
mov
jns
out
into
in
loopne
cli
out
sahf
out
mov
out
sahf
mov
jns
out
enter
cld
out
sahf
out
push
jo
sahf
out
sahf
pop
dec
inc
lar
sbb
and
jns
out
add
sbb
sahf
out
sahf
xor
jle
sahf
out
jae
pop
dec
inc
out
sahf
out
rol
lret
call
in
pushl
jns
orb
out
or
sbb
out
sahf
sub
pop
jns
out
push
insb
gs
out
sahf
out
cltd
orb
mov
lret
out
ret
cld
cmc
out
out
jns
out
xor
and
sahf
out
sahf
push
or
jns
out
push
out
sahf
out
mov
out
sahf
xchg
jns
out
clc
into
aad
out
sahf
out
jg
insl
push
sahf
out
sahf
pop
inc
dec
ds
sub
sahf
out
and
out
sahf
out
out
hlt
std
ret
jns
lret
rcr
scas
cmpsl
mov
mov
sbbl
dec
inc
pop
push
imul
pop
jns
out
push
and
xor
out
sahf
out
aam
stc
sahf
out
sahf
lock
xchg
pushf
xchg
out
mov
jns
out
in
test
rcr
movsb
lods
mov
sahf
out
mov
out
sahf
out
jne
addr16
sahf
out
sahf
push
dec
inc
xor
es
out
das
adc
add
out
sahf
out
faddp
int3
repz
out
sahf
cli
loope
lahf
xchg
lea
out
test
jns
out
dec
push
pop
arpl
jno
clts
sbb
adc
and
xor
jns
out
xchg
mov
sahf
mov
movsl
rcr
sarb
jns
idiv
in
out
sahf
out
add
adc
sahf
out
sahf
daa
cmp
inc
dec
push
jns
out
pop
outsw
je
out
sahf
out
test
mov
sahf
mov
jns
out
repnz
out
sahf
out
cmp
sub
sbb
push
jns
imul
jns
pop
push
dec
inc
cmp
dec
ret
add
repz
repz
inc
sbbb
repz
ss
fsubrs
repz
pop
mov
iret
repz
xor
ficoms
cli
into
out
jo
xchg
and
testb
inc
out
adc
add
fprem
mov
inc
and
cmp
pop
add
add
hlt
push
rorb
sbb
xor
ss
outsl
ss
push
add
fimuls
jp
adc
pop
adc
xor
shrb
push
adc
daa
inc
cmpsl
in
mov
icebp
add
int3
mov
rorb
insl
addr16
inc
cmp
and
inc
lock
inc
add
push
orb
dec
cmp
jg
loopne
adcb
arpl
subl
adc
mov
rcll
xchg
adc
or
or
add
sbb
xchg
sbb
in
xlat
or
dec
add
and
push
xor
or
inc
inc
add
and
add
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
xchg
push
adc
jmp
add
dec
add
ja
adc
inc
add
add
in
push
push
mov
and
sub
jo
popa
add
add
bound
push
dec
js
pop
clc
push
add
inc
add
push
push
jnp
jnp
dec
popa
add
inc
cmp
fdivr
lahf
popa
adc
data16
adc
xor
gs
arpl
je
jns
jnp
outsb
pop
jbe
and
xorb
mov
or
and
or
add
add
inc
jb
jo
push
lock
outsl
push
add
or
cmp
and
and
sbb
fs
das
sbb
pop
aaa
stos
jae
outsl
idivl
fidivrl
push
jne
imul
jmp
out
jne
je
addr16
and
jo
sub
jle
out
push
pusha
sbb
mov
pusha
daa
fidivrs
cs
outsl
inc
out
das
popa
jmp
das
xor
pop
outsb
arpl
adc
dec
data16
mov
fwait
arpl
sbb
or
xchg
aad
andl
mov
orl
push
mov
rclw
cmpsl
push
mov
arpl
push
inc
pop
jnp
jmp
or
xor
xor
xor
xor
jbe
inc
or
jmp
insl
loope,pn
dec
repz
jge
cwtl
test
mov
jg
dec
pop
add
push
jne
addr16
outsl
insl
insl
adc
jae
inc
sahf
std
je
insb
outsb
inc
adc
jns
jo
in
cmp
inc
insb
outsl
jae
dec
popa
outsb
fs
sbb
je
imul
push
outsl
imul
push
imul
lahf
mov
sub
pop
inc
imul
dec
xor
adc
outsl
enter
imulb
insl
sbb
dec
outsl
fs
push
je
jne
insl
int3
daa
cmp
jne,pn
inc
push
outsb
mov
ja
imul
jge
push
push
fcompl
mov
inc
outsl
jb
outsb
addr16
out
adc
push
arpl
jbe
movsl
clc
fwait
in
aaa
xchg
jae
push
bound
jb
pop
or
dec
dec
outsl
sbb
roll
sbb
addb
mov
shl
fsts
dec
jno
test
js
jo
fs
sbb
insl
mov
sbb
andb
faddl
ds
sbb
pop
dec
outsb
sbb
jbe
xchg
inc
aad
outsb
in
loope
or
adc
or
ret
insl
fcomps
jge
stos
jo
nop
mov
jbe
dec
popa
insl
leave
push
jne
add
push
inc
push
inc
sbb
andl
pop
ret
lock
jecxz
jne
je
jo
jae
cmp
mov
test
outsl
rorl
push
cmp
push
fadds
mov
inc
mov
gs
outsw
mov
arpl
pop
test
sub
sbbb
mov
aaa
ret
push
hlt
inc
pop
or
mov
mov
call
fs
in
ret
xor
repnz
push
pusha
fwait
call
jae
lea
dec
push
jns
test
fsubrs
adc
sub
daa
loopne
leave
add
mov
push
in
mov
push
stos
or
in
sbb
pop
pop
cmp
stos
xchg
sub
inc
jo
inc
inc
arpl
mov
push
mov
fisubl
insl
push
jo
bound
xchg
sub
popa
mov
inc
pusha
pmaxub
sub
jb
inc
pushf
std
pusha
or
inc
inc
pusha
mov
pop
mov
pop
lds
inc
lcall
imul
jne
lods
je
dec
outsb
jo
xor
jns
mov
mov
mov
outsb
add
adc
cs
pop
xchg
xchg
jne
faddp
sub
test
mov
and
dec
pusha
cltd
fimull
arpl
fcmovnu
insb
ja
add
push
jmp
add
imul
jecxz
mov
sbb
lock
js
pop
arpl
adc
push
cmp
xlat
pop
ficomps
jo
je
je
fcmovnu
cmpsb
mov
cli
pop
push
insl
sbb
add
and
jb
call
sbb
addr16
gs
lcall
xor
sbb
adc
into
imul
out
xchg
jbe
jo
into
adc
data16
clc
je
inc
xor
sbb
mov
cmp
mov
lock
push
jbe
insl
jae
imul
negb
loopne
mov
mov
and
pop
imul
push
outsb
and
push
orl
dec
dec
pop
pop
movzbl
dec
push
out
and
imul
ljmp
sbb
cmp
xor
pop
jbe
ja
jae
push
push
outsl
je
pop
inc
dec
pushf
fmull
popa
dec
lock
imul
aad
push
push
inc
rolb
cmp
arpl
add
and
in
adc
loopne
sidtl
add
or
or
jnp
mov
push
adc
adc
add
add
pop
jbe
jnp
adc
pusha
or
cmp
popa
pop
movlps
and
loopne
cmpsb
imul
mov
dec
or
cmp
lock
and
inc
add
mov
and
popa
adc
or
test
inc
add
fnstcw
dec
jo
sub
dec
mov
jae
and
sahf
jae
push
xlat
inc
repnz
in
aaa
movsb
adc
push
push
or
add
incl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
