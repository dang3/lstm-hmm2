cwtl
add
and
and
mov
rolb
push
mov
add
push
add
loopne
scas
or
std
add
add
mov
lcall
add
push
pusha
add
addb
add
add
nop
add
or
add
inc
add
adc
or
add
or
add
jo
dec
add
inc
add
push
pusha
add
and
jmp
or
inc
add
mov
icebp
add
rolb
add
inc
add
or
add
rolb
or
lock
addb
add
add
add
sbb
push
add
nop
add
add
add
jo
inc
add
add
adc
in
add
dec
pop
pusha
add
pusha
add
add
lock
mov
add
or
mov
loopne
outsl
or
xor
mov
adc
rolb
pop
pusha
add
add
test
inc
add
add
add
or
push
add
or
add
and
push
push
pusha
add
add
xor
push
add
rolb
mov
add
loopne
into
or
add
and
or
xor
push
add
add
loopne
inc
push
loopne
sbb
pusha
add
push
adc
pusha
or
add
lock
push
mov
add
add
add
addl
mov
add
mov
add
testb
std
or
add
lock
push
rolb
pavgb
repnz
rolb
xlat
or
mov
add
or
add
add
add
loopne
jg
push
add
push
loopne
mov
addb
pshufw
add
loopne
outsl
push
adc
xchg
push
rolb
add
inc
add
add
add
add
or
mov
add
add
add
or
add
lock
add
add
pop
rolb
or
add
add
add
add
and
sbb
mov
add
pshufw
push
mov
and
add
add
pusha
add
add
add
in
movw
mov
mov
mov
movb
call
movw
movw
cmp
jne
movb
push
popl
ret
push
popl
push
andw
push
popl
push
andl
push
popl
mov
push
popl
pusha
xorb
addl
call
xorl
subw
mov
push
popl
subl
push
movl
xorl
push
popl
addl
add
xor
push
andb
addw
call
push
popl
and
cmpl
jne
addb
call
push
popl
push
popl
ret
xor
push
popl
jmp
movl
xor
xor
push
popl
mov
addw
shl
push
popl
mov
sbbl
shl
xorl
or
mov
xorw
orl
cmp
jne
push
popl
or
mov
push
popl
sub
sub
movw
call
subl
popa
movw
push
popl
pusha
orl
call
orb
xor
mov
andl
push
mov
xorl
xorl
addl
andb
push
push
popl
call
andb
sbbw
push
movw
xorl
sbbb
addl
movw
push
popl
pop
orl
push
popl
cmp
jne
push
popl
orb
ret
andl
push
popl
popa
movl
call
xorl
push
orw
xorl
xorl
add
addl
andl
push
push
popl
movb
call
subb
addb
push
push
shr
xor
mov
add
xchg
or
addl
mov
addw
push
popl
shl
xorw
and
push
xorl
xorl
xor
push
popl
addw
push
push
popl
call
addl
push
or
mov
push
popl
push
add
jmp
or
push
popl
pop
sbbw
push
popl
mov
push
popl
movw
push
movw
sbbw
push
add
push
popl
push
movb
mov
mov
push
popl
push
popl
mov
push
popl
orb
rep
push
popl
pop
subl
pop
push
ror
rol
mov
sub
xchg
push
ror
mov
add
xchg
add
xor
push
popl
push
popl
jmp
sbbw
andb
sub
push
popl
mov
or
orb
sub
addl
sub
add
mov
andl
sub
sbbw
or
jne
push
popl
push
popl
add
sbbl
push
popl
jmp
push
popl
mov
or
shr
push
popl
push
popl
shl
push
popl
mov
push
popl
subw
add
and
jmp
push
popl
push
popl
sub
subw
mov
push
popl
sub
add
andl
cmp
jne
xor
mov
push
popl
addb
add
push
popl
xorw
mov
sub
add
mov
xorb
cmp
jne
sbbb
ret
xorl
push
popl
push
movb
xor
push
popl
mov
pushl
xorb
xor
pop
andl
sbbw
lea
push
popl
or
addb
push
popl
mov
push
popl
push
popl
mov
movb
push
popl
lods
xor
mov
movw
push
popl
pop
movl
addb
ret
mov
andl
push
movl
mov
subw
andb
add
sub
push
push
popl
push
xor
push
andl
push
push
popl
subw
push
addb
subl
mov
andb
push
popl
mov
andb
add
add
addw
pushl
sbbl
push
popl
mov
addw
push
popl
add
xorl
mov
add
addb
addw
mov
push
popl
add
addw
xor
movl
lea
push
popl
movw
mov
push
popl
push
popl
add
or
mov
addl
sbbl
xor
push
popl
xorw
rol
push
popl
push
popl
xor
addb
inc
andw
mov
cmpb
jne
sbbb
xor
cmp
je
movl
inc
push
popl
cmp
jb
subw
mov
movb
add
or
movzwl
addb
mov
or
add
addl
push
popl
mov
mov
add
push
popl
push
popl
pop
or
cmp
jbe
sbbl
xorw
cmp
jae
subl
pushl
andl
push
popl
pushl
and
push
sub
xorl
push
popl
addl
push
popl
movw
pushl
mov
call
push
popl
call
movl
pop
sbbw
pop
xorb
pop
push
popl
pop
push
popl
pop
addw
leave
push
popl
push
popl
ret
push
popl
call
test
test
sahf
push
jbe
xchg
xchg
xchg
test
dec
out
popf
mov
jle
mov
push
out
or
xor
in
jbe
testb
hlt
mov
dec
cmp
rcll
or
mov
out
inc
inc
fcomps
les
pop
outsl
mov
cmp
ret
dec
in
les
por
mov
dec
mov
add
adc
or
sbb
adc
add
inc
scas
lahf
hlt
or
cmp
mov
cli
dec
mov
test
mov
push
and
jno
push
mov
inc
cvttps2pi
mov
mov
fcom
imul
jmp
lahf
out
cmc
adc
inc
push
iret
rcrl
adc
loop
and
call
inc
inc
adc
inc
std
xchg
pushf
repz
cmp
or
ljmp
dec
adc
dec
push
addr16
pop
es
mov
sub
aas
dec
mov
pop
rclb
inc
adc
es
popa
mov
sbb
fadd
mov
dec
mov
outsl
les
add
enter
addr16
mov
sbb
pop
inc
jnp
or
push
enter
jmp
xlat
fs
cmc
shrb
cmp
xor
lahf
xor
mov
cltd
dec
ret
cmp
xor
sub
and
data16
stos
sub
jmp
lds
aaa
cmpsb
ds
jg
sub
es
out
mov
cmp
incb
sbb
push
adc
leave
repz
in
sub
addr16
mov
ret
jbe,pn
icebp
pop
lahf
icebp
cltd
out
rorb
adc
mov
scas
add
pop
jge
movsb
ret
xchg
or
or
inc
outsl
mov
push
enter
or
jnp
shlb
or
inc
imull
xchg
push
cmpsb
xlat
push
rclb
push
arpl
loopne
or
push
or
xchg
lock
jo
imul
push
mov
push
jg
inc
or
inc
insl
and
mov
shr
cmp
andl
fwait
mov
jecxz
repnz
sub
movsl
jo
movsl
imul
sarl
popf
std
cmpb
mov
pop
out
hlt
in
lds
cmp
not
jns
jmp
cwtl
fbld
inc
lods
ljmp
add
cld
push
sub
sbb
cmp
pop
adc
das
xchg
mov
jnp
mov
mov
icebp
repz
push
mov
xchg
cmc
lahf
pop
addl
rclb
repz
pop
and
push
xchg
inc
sbb
xchg
mulb
test
sahf
push
jbe
sub
test
out
ret
xor
lock
orl
std
stc
adc
out
les
mov
out
dec
mov
fwait
and
jno
adc
cmp
gs
pop
test
sahf
push
jbe
xchg
xchg
xchg
lea
xchg
mov
sub
lahf
ss
cltd
sbb
sbb
sub
cmp
lock
sub
jno
sti
out
pop
pop
mov
movsb
arpl
aam
inc
lods
xchg
bswap
fwait
sub
and
aas
icebp
mov
push
mov
inc
ud0
dec
xchg
pushf
icebp
mov
imul
fnstsw
jno
adc
add
inc
mov
mov
aad
mov
scas
lock
jo
hlt
xor
in
sbb
lahf
hlt
adc
sub
mov
cld
mov
pop
mov
push
mov
push
push
mov
shrb
jns
iret
mov
dec
mov
jno
adc
push
inc
jp
jne
adc
stc
xor
std
shlb
pop
adc
pop
lret
or
xor
dec
xchg
mov
or
lds
xor
or
scas
enter
mov
inc
cmp
adc
in
dec
push
cmp
rorb
lcall
push
sbbl
pushf
mov
out
xor
lahf
aaa
mov
ja
loope
dec
pop
mov
cmpsb
mov
fsubrl
sub
iretw
xor
and
xor
sbb
cmp
into
leave
popa
cmpsb
test
ja
mov
add
push
mov
nop
bound
adc
push
ret
adc
stos
sbb
adc
or
int3
sub
mov
idivb
xchg
js
mov
sub
mov
lods
lahf
lock
aaa
int3
sub
ret
ja
popa
in
mov
jne
rcll
pop
lods
dec
stos
mov
fistps
stos
pop
push
imull
adc
rcrb
bound
push
xor
aas
inc
or
pushf
repz
or
inc
aaa
mov
lahf
adc
or
leave
shlb
rclb
mov
adc
inc
bnd
mov
dec
test
loop
pop
dec
scas
push
inc
adc
mov
lret
or
dec
cmpsl
mov
push
insl
psubusw
aad
bound
sbb
mov
sub
adc
adc
repnz
in
xor
lahf
xor
jae
add
imul
xor
lahf
and
fwait
popf
ret
mov
cmp
popf
nop
mov
iret
pushf
mov
dec
mov
ds
in
or
cmpsl
push
test
and
enter
mov
shll
or
pusha
push
popf
cmc
mov
cmpsl
call
divl
cld
push
lods
pop
sub
int3
xor
dec
mov
lods
jae
iret
loop
jg
push
movsb
mov
loopne
iret
subps
pop
jle
outsl
and
push
test
inc
in
fsubp
inc
fdivs
paddsw
movsb
cmpsb
les
mov
jl
mov
pop
ja
hlt
xor
xchg
jno
imul
and
das
mov
mov
push
pop
arpl
test
mov
push
sub
inc
jnp
cltd
fisttpll
enter
or
out
pop
cmpsl
vpcmpgtd
xchg
call
jnp
outsl
or
es
mov
push
dec
inc
and
daa
dec
mov
outsl
les
push
inc
inc
adc
outsl
lock
repnz
inc
dec
stos
adc
sub
adc
mov
sbb
push
inc
outsl
clc
popa
or
mov
adc
xchg
shll
or
and
enter
mov
fcoml
xchg
cmc
add
aad
push
jbe
dec
xchg
jge
inc
loopne
out
lret
xor
fadds
test
mov
xor
dec
fstpt
lret
sub
divl
adc
xor
fisttps
fadd
imul
rcrl
pushf
push
jne
mov
enter
out
lret
xor
fwait
cltd
outsl
and
xor
or
aad
sbb
adc
mov
aam
sub
push
mov
fcomp
inc
out
rcr
jns
stos
adc
sub
adc
jae
inc
inc
push
iret
sbb
jmp
imul
call
out
fstpl
cmp
mov
mov
lods
add
fsubl
mov
mov
push
loopne
rcrl
push
rclb
pmaxsw
push
notl
popa
jae
js
add
push
jl
inc
rcll
push
adc
cmp
cmpsl
xchg
mov
sub
repz
cld
jno
loopne
push
cwtl
push
loop
in
outsl
add
xchg
xchg
hlt
daa
or
dec
pop
outsl
fwait
lock
mov
push
rclb
sbb
adc
xor
mov
sub
leave
ljmp
adc
vandps
cld
mov
or
scas
add
or
lret
jecxz
cmpsb
addr16
xchg
inc
cmp
outsb
sbb
movsb
push
outsb
fwait
into
jo
jge
into
pushf
push
lahf
inc
mov
xchg
sbb
jbe
lods
mov
dec
inc
fcomps
or
daa
or
dec
stos
outsl
nop
push
and
sub
mov
aad
fcoms
xchg
dec
jb
xchg
sub
cmp
loopne
loop
jg
jo
lret
pop
push
jae
ljmp
addl
aam
jl
jp
fisubs
out
arpl
popa
mov
xchg
sbb
and
int
mov
mov
testl
push
loope
lcall
insb
sub
mov
mov
repz
mov
push
sbb
je
mov
push
push
xchg
lcall
cld
loope
sub
mov
cmc
sub
mov
sub
and
or
js
mov
imul
xor
mov
cmc
cltd
jb
loopne
push
pop
aad
outsb
mov
xchg
cwtl
push
or
dec
xchg
xor
cltd
fiadds
cwtl
cmpsb
or
adc
mov
mov
inc
or
pushf
idivl
sbb
fnstcw
lahf
pop
mov
cmp
ficompl
out
xchg
lahf
or
sbb
repnz
test
jmp
ret
dec
sub
cmp
or
lret
push
xor
lahf
das
jno
push
inc
sub
jnp
adc
repnz
add
add
and
aaa
lcall
xor
lods
mov
adc
lcall
addr16
add
mov
shlb
aas
pusha
mov
aas
dec
mov
inc
pop
xchg
fwait
or
push
mov
pop
cld
out
repnz
pushf
or
push
mov
jle
scas
cmpl
iret
outsb
addr16
push
pop
fldz
test
xchg
or
loopne
je
loopne
push
jmp
dec
adc
shll
inc
xlat
lods
or
push
pop
inc
jnp
lret
fdivr
enter
out
out
scas
mov
sub
jp
adc
xor
in
or
mov
sub
adcl
std
cmc
out
pop
sar
lret
cmpsl
xchg
rolb
mov
pop
test
test
leave
pushf
je
int
add
outsl
pop
hlt
xchg
pop
mov
push
xchg
lods
xlat
clc
or
enter
mov
and
scas
orl
scas
adc
rclb
xlat
jl
xchg
out
mov
inc
jecxz
cmp
cmpsb
adc
lds
xor
cs
call
and
mov
sahf
test
outsb
or
mov
fdivl
and
sarl
inc
ret
pop
lock
pushf
adc
push
mov
mov
leave
push
pop
lock
add
mov
loope
mov
pop
pushf
cmp
cmp
je
lret
aad
adc
jecxz
lahf
push
addl
jo
test
adc
ja
sub
cmpsb
sbb
push
push
inc
jp
insl
fstpl
stc
xor
mov
and
ja
decl
dec
push
test
in
add
pop
adc
in
mov
aaa
sbbb
imulb
repz
fadd
xchg
ds
xchg
lcall
pop
int3
orb
stos
arpl
into
pop
movsb
pushf
cmp
pop
imul
cmpl
or
pop
xor
dec
sbb
shll
jmp
mov
das
xlat
xchg
inc
sahf
mov
movsl
pop
inc
inc
hlt
mov
sub
mov
inc
lcall
ret
pop
xor
sti
cmp
adc
sbb
xlat
xor
xchg
out
xchg
jmp
sub
ja
pusha
jnp
inc
leave
cwtl
fdivrl
xchg
fsubs
cwtl
xchg
aad
imul
cmpsb
mov
aaa
xor
xchg
loop
jg
push
lahf
fldl
sub
add
imul
cmpb
sar
cmp
pusha
sbb
clc
mov
jbe
fldpi
vpsubusb
jge
test
stc
mov
js
add
movsb
imul
nop
jnp
out
out
cmpsb
cmp
ljmp
pop
inc
jnp
stos
enter
jo
iret
js
jle
shrl
xor
adc
or
stos
jno
pop
loop
jg
push
jp
inc
push
mov
sbb
outsb
adc
addl
xchg
stc
mov
insb
mov
pop
ficoms
addr16
mov
adc
ja
stos
adc
mov
sbb
sub
adc
cltd
lds
mov
pop
cld
sub
shrl
adc
fnsave
int
inc
mov
mov
in
mov
jae
out
cmpsl
push
mov
sub
mov
xor
fadds
iret
cs
mov
mov
lods
jae
add
mov
push
mov
sub
jo
xchg
cli
mov
outsl
mov
cmp
popf
nop
sbb
lods
lea
mov
mov
leave
sub
jb
push
or
mov
inc
inc
setl
mov
and
mov
addb
imulb
cmp
fwait
push
mov
outsl
mov
cmp
or
push
push
fxch
sbb
imul
xchg
ja
push
pop
outsl
dec
inc
adc
insl
rclb
aas
std
lret
out
je
pop
xchg
insb
xchg
jmp
lods
out
aaa
add
cmc
jo
add
cli
popf
jp
add
lds
dec
fisubrl
lock
test
enter
out
adc
test
out
and
jge
lds
cmp
mov
jecxz
jne
xchg
in
pop
mov
pop
cmp
or
adc
pop
sbb
add
sub
push
xchg
arpl
mov
std
xchg
cli
test
mov
cmp
cli
idivb
fldcw
fadd
cmp
daa
sbb
adc
push
push
sub
stos
cmp
std
repnz
sub
out
pop
dec
pop
mov
pop
cmp
xor
mov
mov
pop
fsubrp
js
mov
pop
aam
jp
imul
pop
leave
adc
cmpb
icebp
xor
out
loopne
xchg
fs
or
dec
fisttpll
enter
xchg
xor
rol
fsubrs
fdivrs
push
push
mov
int
repz
mov
sbb
lods
dec
out
xlat
lods
mov
sub
adc
into
jo
imul
jo
sbb
dec
dec
push
lods
xchg
jo
xor
mov
xor
lahf
xor
fwait
xchg
adc
call
stos
sub
add
cmc
sbb
adc
pop
shll
xchg
mov
xchg
ror
pop
pop
push
dec
jle
dec
push
movsb
xchg
jo
or
dec
fstpl
enter
es
jmp
inc
fsubrs
loopne
cli
adc
inc
in
pusha
adcl
xor
xchg
inc
int3
push
and
push
jns
adc
sbb
cmp
jbe
mov
outsl
sub
ret
mov
clc
sub
push
gs
dec
loopne
dec
nop
add
sbb
mov
mov
in
fnstcw
mov
addr16
in
lds
jecxz
add
adcl
popa
sahf
pop
fmuls
cld
or
das
xlat
int3
scas
push
mov
xor
mov
adc
mov
push
mov
push
mov
push
pop
in
movsl
outsb
aaa
shrb
push
jmp
inc
or
idivb
popf
shll
cld
imul
xchg
jp
push
pop
pop
or
test
or
mov
xor
fcoms
cmpsl
push
fwait
mov
sbb
out
xor
test
out
xchg
and
push
insl
lock
jle
into
fwait
fwait
cmp
push
lcall
cli
test
data16
enter
inc
mov
adc
pop
lret
mov
sub
outsl
lahf
adc
xlat
mov
xor
mov
mov
inc
or
xor
adc
stos
sbb
xchg
aas
push
adc
xchg
je
push
push
pop
jne
icebp
or
jo
cmp
dec
add
movntps
xor
sub
divl
xor
imul
icebp
or
scas
jne
in
cmpsb
outsl
inc
push
pop
fdivrs
dec
mov
push
sub
mov
cmpsl
aam
insl
dec
inc
into
dec
stos
sbb
sbbb
mov
inc
mov
pop
aad
adc
adc
push
in
mov
xchg
add
shrl
loope
mov
push
and
push
mov
sbb
sbb
cld
sbb
and
clc
ret
xorb
fwait
mov
hlt
fbstp
mov
aaa
push
lret
in
sub
cmp
in
sbbl
adc
int
ret
or
sub
jp
aaa
js
inc
leave
cltd
insb
mov
inc
emms
movsb
mov
dec
push
xchg
in
cmpb
pop
out
add
push
sub
rcrl
mov
sbb
lcall
mov
cmp
mov
int3
and
ret
adc
lock
lahf
lock
stos
pushf
mov
adc
mov
test
mov
mov
fs
or
push
fcompl
fisubrl
dec
pop
jne
xchg
jmp
pushf
aad
xlat
push
inc
xchg
movsb
popa
sub
daa
xchg
push
sbb
pushf
aaa
iret
cmp
mov
adc
xor
xchg
lock
or
pop
inc
sub
xor
mov
jno
jmp
fwait
rcrl
sub
andl
inc
stc
jg
sub
repz
ficomps
out
push
add
mov
lock
dec
push
cli
adc
pushf
adc
push
mov
pushf
sbb
psubusw
adc
out
pop
lahf
icebp
add
aas
xor
test
xor
mov
dec
inc
add
xor
pop
test
sahf
push
jbe
cltd
xchg
cli
push
out
out
in
mov
enter
or
test
int3
lods
add
adc
pop
lods
dec
cmp
sub
dec
insb
cld
fs
push
jno
adcl
jge
mov
mov
sub
push
call
fcomps
ss
xchg
xlat
loope
mov
jne
frstor
or
sub
xchg
int
push
inc
jno
imul
xchg
pop
xchg
aas
leave
cmp
repz
movsl
outsl
adc
xor
addr16
pop
mov
sbb
in
xchg
fistl
mov
aad
add
push
mov
int3
popa
lods
gs
adc
mov
out
loop
cmc
in
jno
dec
dec
pop
addr16
or
outsl
stos
inc
pop
adc
mov
and
ljmp
das
mov
pop
cmp
shlb
addr16
xor
popf
and
int
fisubs
int
add
sub
fistl
inc
ja
mov
inc
aas
mov
adc
mov
cs
mov
or
leave
push
mov
push
lahf
hlt
and
mov
sbb
sahf
leave
in
mov
in
test
xor
jl
add
pop
or
dec
mov
loopne
in
popa
insb
add
mov
xor
mov
dec
lods
or
add
push
pop
push
xor
out
stos
cmp
movsl
je
ret
xchg
jns
in
mov
mov
pusha
fwait
lahf
or
int3
push
push
jge
test
mov
add
leave
pushf
test
cltd
push
mov
xor
dec
lods
aas
scas
cmp
mov
sbb
cmovne
xchg
lods
and
lret
or
loope
repnz
push
fxch
clc
jp
ljmp
adc
pop
les
adc
aad
and
or
xchg
cld
fdivs
pop
idivb
out
mov
icebp
flds
push
and
movups
cmpsl
addr16
into
popa
lods
pop
push
ret
shlb
stc
movsl
cmp
mov
xor
je
aad
in
sub
or
adc
adc
cmp
outsl
lahf
jecxz
sub
jo
push
adc
pop
lds
mov
aas
sbb
insb
lahf
mov
mov
adcl
dec
cmc
adc
mov
cmp
jns
or
in
mov
lcall
mov
xchg
dec
clc
addr16
rolb
dec
fwait
lahf
or
sub
fsubs
xchg
out
mov
cmp
insl
mov
cltd
fistl
notb
or
fstpl
imul
or
pop
stos
xor
jg
and
test
inc
and
stc
mov
sti
mov
push
into
ret
cmp
push
push
mov
arpl
stos
or
push
jbe
dec
xchg
mov
cmc
jge
repz
lret
adc
clc
jnp
mov
push
add
hlt
xor
mov
dec
sbb
push
imul
int3
xor
sbb
dec
push
xor
aas
pop
adc
rclb
adc
in
mov
inc
mov
jecxz
jnp
mov
cld
mov
sub
adc
loopne
sub
adc
arpl
nop
popa
mov
sub
shll
add
movzwl
scas
fstps
push
mov
fwait
cmp
mov
rorl
das
inc
mov
jge
daa
outsb
in
mov
loopne
cmc
adc
cmp
cmpsb
popa
mov
dec
cmp
pop
dec
scas
or
push
in
lods
or
sahf
push
jbe
pusha
xchg
mov
xor
fsubrs
inc
add
aam
pushf
jle
out
cli
or
jns
inc
mov
in
sub
fcomp
out
adc
gs
icebp
fisubrl
andl
pop
cmpb
lahf
daa
in
push
movsl
leave
ljmp
cltd
xchg
lret
into
lret
add
add
or
mov
popa
ret
addb
scas
jbe
mov
jl
mov
or
cltd
fstl
pop
cmp
adc
dec
add
imul
adc
push
push
jle
inc
cmp
mov
in
mov
aaa
mov
loopne
mov
rcl
mov
test
into
popf
cmp
add
in
lds
fstps
popf
mov
call
popa
lods
das
xchg
cmp
and
aaa
test
cmp
call
sahf
repnz
fstl
enter
shrl
or
inc
fsubrs
loopne
testb
pusha
lods
push
mov
mov
push
mov
sbb
pop
out
cld
xchg
jns
push
pop
inc
out
sub
adc
rcrb
inc
nop
xchg
pushf
adc
push
outsl
lahf
add
hlt
mov
mov
or
push
cwtl
dec
inc
rol
xor
in
adc
mov
out
lret
sbb
pop
movsl
insb
push
fbstp
and
push
outsb
int
jmp
es
dec
cmp
or
popa
test
repz
mov
xor
dec
mov
jns
popa
pop
lea
push
mov
mov
mov
sub
enter
xor
leave
in
sbb
mov
cltd
stos
xor
lods
aam
cmp
and
clc
aad
scas
sub
mov
dec
pop
and
lret
sbb
lods
pop
pushf
mov
pcmpeqd
movsl
xor
or
aaa
jle
arpl
xchg
pop
addb
leave
xor
xchg
add
jg
sbbl
testb
popf
push
insl
jl
jg
mov
ljmp
cmp
mov
fcomps
leave
mov
movsb
push
jns
jb
scas
in
mov
stos
mov
shlb
stos
lcall
repnz
pop
cmp
sub
clc
mov
leave
push
pop
cmp
call
push
loop
jne
push
sub
cmpsl
dec
ljmp
mov
mov
mov
push
mov
adc
mov
jmp
lahf
repz
xchg
mov
fimull
mov
push
imul
pushf
adc
push
mov
cmp
lahf
icebp
lahf
xchg
lds
adc
mov
sbb
pop
jle
cmp
xchg
hlt
daa
or
cmp
in
or
je
push
rclb
sbb
dec
daa
fisubs
jg
sub
adc
es
mov
sbb
aas
dec
mov
in
xor
push
mov
inc
pop
push
popf
idivb
jns
adc
push
pop
outsl
loop
pop
and
mov
cld
mov
in
mov
lcall
sub
inc
jg
enter
cmp
jmp
mov
or
dec
pop
push
pop
in
out
mov
in
test
test
fadds
xchg
je
mov
mov
mov
pop
or
mov
mov
lea
js
sarl
in
sub
mov
lods
out
xor
mov
inc
aas
sub
jbe
flds
jns
fldl
test
call
sub
lret
lock
cmp
ds
imull
pusha
pop
jae
decb
or
ljmp
int
js
int
pop
cmp
sub
fmuls
sbb
or
sub
std
inc
cmp
inc
push
fsubrl
or
mov
and
lahf
sbb
aam
imulb
insb
testl
std
lahf
cmp
repz
sub
cmpsb
jp
roll
xor
and
sti
jge
leave
test
lahf
push
jp
push
test
leave
xchg
mov
loopne
push
inc
xchg
jbe
push
xchg
xchg
or
push
xor
mov
push
sub
ret
imul
dec
subps
sub
out
je
fs
out
insb
fwait
add
inc
cvtps2pi
jle
fistpl
dec
ss
les
pop
lret
ret
movsb
mov
inc
sub
xor
cmp
xchg
mov
cmc
adc
xchg
leave
adc
adc
lahf
out
xchg
dec
sti
sahf
or
xor
push
mov
inc
or
sub
adc
add
mov
cmp
lahf
icebp
adc
mov
pop
lahf
repnz
mov
in
nop
insb
cmp
cmp
addr16
mov
or
adc
stc
mov
in
stos
and
imull
or
je
xlat
mov
xor
mov
mov
mov
outsb
mov
mov
psubusw
shll
or
pop
add
or
enter
xor
insl
dec
xchg
fimull
sub
outsl
mov
cmp
mov
add
cld
mov
pop
inc
pop
or
pop
sub
jmp
sub
outsl
mov
cmp
ror
mov
and
xor
xchg
jnp
push
pop
push
dec
lahf
adc
sub
inc
adc
ret
adc
stos
adc
stos
in
fdivs
pop
push
adc
lahf
jne
ret
push
jg
fldl
push
mov
sub
sub
push
divb
adc
push
xlat
ret
sbb
js
xor
jge
out
push
xchg
or
daa
dec
outsl
mov
jno
test
imul
fsts
pop
subl
daa
push
lods
adc
or
gs
mov
in
adc
movsl
insb
dec
push
loop
jg
push
lods
sub
cmp
lods
leave
mov
jecxz
or
mov
in
adc
mov
or
fmuls
stos
and
imull
mov
ja
push
pop
scas
or
int3
adc
cmpxchg
lods
sbb
popa
call
test
mov
sub
fmuls
outsl
jge
jl
test
or
inc
dec
outsl
cmp
rclb
push
sbb
movsl
inc
xor
xchg
subb
imul
pop
and
cmovae
mov
sub
imul
adc
inc
daa
rclb
aas
jmp
pop
push
add
and
push
jno
int
int
mov
fucomip
div
nop
lcall
dec
mov
jg
es
jge
aas
int3
movsl
cmp
push
stos
xchg
addb
pop
jnp
pop
lods
push
icebp
cli
test
push
mov
inc
sahf
xor
push
adc
lods
push
mov
xor
pop
mov
lods
add
mov
cmp
enter
bound
cld
shlb
shll
sbb
inc
test
mov
sub
mov
sub
push
inc
add
jne
es
ja
fsts
stos
lret
jecxz
and
push
outsb
gs
sbb
adc
and
push
lahf
inc
inc
jecxz
push
scas
dec
fwait
and
jle
or
mov
repz
ficoms
test
aam
xchg
cs
xchg
sti
ja
add
push
jno
lds
inc
jb
sub
add
jg
jecxz
fisubrl
test
leave
xchg
pop
cmpsb
pop
aas
lock
cmp
or
inc
inc
or
adc
popf
idivl
add
push
xchg
pop
dec
lock
mov
stos
adc
aas
sub
adc
push
mov
adc
cmp
ljmp
cmp
adc
das
mov
stc
add
ds
call
ljmp
int
mov
xchg
out
int3
sub
fmuls
jp
mov
rcl
or
mov
inc
loope
popf
leave
mov
pop
cmp
sub
dec
mov
jl
inc
rol
jg
adcl
mov
mov
lds
jg
xchg
les
push
xorl
fstl
mov
adcl
popf
rcrl
ds
push
es
xchg
pushf
cmc
mov
enter
and
or
scas
inc
sarl
pop
mov
popa
mov
adc
lret
jne
pop
sbb
pop
xchg
mov
add
adcl
fsubrs
into
lcall
data16
mov
les
pop
inc
mov
arpl
pushf
ljmp
xor
in
xor
lahf
ss
test
push
cmp
adc
out
jns
fwait
callw
mov
push
pop
sub
jge
into
cltd
les
mov
movsb
data16
out
ss
xchg
jmp
mov
add
sbb
inc
inc
fcoms
inc
mov
or
pop
add
js
dec
frstor
enter
test
in
pusha
inc
ficomps
adc
pushf
insb
out
adc
js
inc
enter
mov
int3
stos
outsl
lret
adc
sub
adc
push
lret
or
push
lock
or
aam
mov
enter
notb
mov
ss
mov
jns
jg
inc
jge
outsb
iret
int
jl
pop
jl
inc
aam
imul
cmpsl
sbb
icebp
cmp
sbb
sbb
mov
sub
repz
xor
out
int
mov
mov
cmc
jecxz
sub
decl
sub
mov
add
mov
mov
sub
lahf
and
push
out
sbb
adc
mov
sbb
add
mov
in
gs
xchg
sub
fadds
rol
or
or
aas
pushf
hlt
mov
movsb
fstp
shrl
adc
mov
adc
push
add
nop
xorl
jae
mov
mov
cld
pushw
pop
fs
cmp
or
fdivs
stos
adc
push
sub
adc
xor
or
cwtl
lahf
fstl
enter
insb
stos
rorl
test
push
adc
sub
jle
outsl
pushf
mov
push
cwtl
or
aas
shll
pop
adc
in
mov
cmpsl
outsb
jb
loop
jg
push
lahf
inc
inc
add
add
imul
mov
or
insb
push
xchg
arpl
mov
or
mov
cmp
rorl
test
push
jne
mov
aam
stos
arpl
lret
lods
out
xchg
and
stos
das
inc
cmpsb
mov
cld
or
push
cmc
pop
sub
mov
pop
mov
test
das
out
scas
and
mov
add
test
mov
sub
addb
dec
out
push
outsb
or
and
fadd
or
xchg
jne
push
pop
in
imul
cmp
inc
andb
pusha
mov
or
mov
nop
test
sub
in
and
lods
sub
cmp
pop
lods
or
cmp
pushf
adc
insb
sbb
mov
enter
pop
das
repz
push
gs
movsl
mov
adc
in
mov
aas
mov
test
mov
sub
fldl
stos
sub
divl
or
jae
sbb
lock
lahf
cmc
call
loop
divl
lods
mov
clc
out
das
jns
inc
xor
pop
pop
out
popf
mov
dec
xor
aam
jno
dec
sbb
mov
inc
repnz
add
push
rcrb
lock
lods
pop
cld
shlb
cld
jecxz
inc
movsb
cmp
mov
adc
sbb
js
sti
js
mov
mov
sub
in
xor
cmpsb
xor
stos
adc
in
mov
movsl
lods
stos
and
jno
sbb
pushf
jno
mov
test
push
xchg
mov
push
cmp
aad
adc
fldcw
adc
xchg
movsb
mov
sbb
js
push
into
pop
mov
push
or
addr16
mov
sbb
rclb
shrb
data16
mov
or
cmp
and
xor
and
sbb
test
leave
cltd
mov
ja
add
enter
mov
xor
stos
xor
rcr
jnp
xlat
frstor
and
mov
icebp
lds
push
insl
adc
loope
aas
test
stc
je
push
sub
daa
into
out
mov
inc
sarb
clc
mov
dec
add
inc
cmpsl
sbb
stos
push
inc
jp
jg
adc
cmpsl
xor
mov
loopne
cli
dec
xchg
lods
xchg
pop
aam
js
sub
movsl
ja
enter
mov
lahf
lahf
psubq
and
aam
and
sbb
cmpb
sub
cmpsl
loop
xchg
mov
stos
xchg
push
push
fcmovne
subl
xchg
lods
shr
jle
leave
adc
pop
push
into
idivb
mov
lock
aaa
shll
inc
mov
mov
lcall
repnz
icebp
mov
addr16
fld
call
fnstcw
sub
mov
sbb
adc
add
add
xor
ret
out
mov
sbb
lahf
rol
push
imul
mov
mov
adc
sub
sub
outsl
mov
push
lock
jo
inc
and
or
clc
mov
stc
bound
cmp
aaa
shlb
inc
mov
repnz
inc
fisttpll
enter
clc
xor
push
rcll
out
adc
pop
loope
movntps
aad
and
addr16
add
into
jno
fdivs
stos
adc
subl
adc
adc
xor
adc
stos
and
loope
sarb
push
adc
stos
mov
push
jbe
gs
cltd
inc
jecxz
cs
jmp
adc
ds
in
mov
lcall
lods
cmp
movsl
sub
stos
sbb
aaa
scas
cld
mov
sub
aaa
out
sub
aaa
fld1
daa
push
insb
orl
shrl
xchg
lea
xchg
push
ror
jl
aad
lcall
negl
sub
inc
pop
cmp
in
push
mov
adc
lea
xchg
div
jecxz
jp
ja
mov
cmp
cld
rol
mov
mov
das
addr16
add
call
and
out
jns
pop
ja
mov
dec
add
xchg
loopne
inc
adc
sahf
adc
cld
pushw
push
jb
inc
aam
divb
pop
leave
sbb
sub
adc
pushf
sub
subl
stos
adc
cld
notl
jg
and
outsl
adc
cmp
pop
mov
mov
mov
ret
fs
push
jg
sbbl
fwait
dec
mov
fiaddl
or
cmpsl
xor
adcb
mov
mov
inc
mov
mov
pop
mov
sbb
mov
dec
dec
outsb
mov
cmp
or
and
mov
adc
mov
sub
fmuls
adc
push
adc
outsl
imul
xor
dec
pop
test
das
mov
stos
and
imull
dec
xchg
push
push
lods
xor
fdivs
rol
fsts
push
cmp
push
cmp
inc
fmul
jne
icebp
pop
sub
mov
inc
pop
dec
push
jne
mov
inc
test
scas
fcmovnb
cld
ret
out
cmp
mov
and
cld
jg
dec
sbb
pop
in
xchg
dec
out
adc
or
cmc
lahf
push
sbb
popf
js
add
xor
and
adc
add
mov
in
cli
cwtl
out
test
fmul
jo
push
mov
cld
mov
sub
mov
adc
bound
sub
push
add
out
mov
and
mov
fcompp
or
push
dec
and
add
jl
inc
sarb
pop
hlt
mov
mov
lods
test
or
aas
or
cld
cmpl
push
xor
or
and
or
fcomps
aas
andl
push
xor
lcall
inc
jmp
pop
mov
das
popa
add
mov
stos
xchg
pop
pop
fwait
xchg
negb
mov
push
fucomi
xor
sarb
mov
xor
mov
pop
fwait
inc
mov
mov
mov
imull
adc
leave
cltd
mov
pop
mov
fwait
mov
in
sbb
mov
push
lahf
xor
loopne
enter
subl
jbe
call
fbld
shll
ljmp
mov
sub
jecxz
es
addb
xor
xchg
pop
bswap
jp
out
jp
or
call
mov
sub
pop
je
mov
dec
mov
mov
adc
lea
repz
es
mov
out
sub
divl
mov
and
push
jno
and
out
mov
lods
jae
xchg
loop
jg
push
mov
inc
fmuls
repnz
xchg
pop
stos
or
into
jae
cld
sub
ljmp
pop
cli
mov
mov
lock
pop
shlb
ljmp
adc
mov
mov
data16
pushf
stc
adc
xor
test
mov
sub
inc
loop
leave
or
inc
les
adc
fcoml
adc
sub
vmwrite
dec
sti
and
fisubrl
push
aaa
cmpsl
xor
rclb
mov
mov
mov
fisubrs
sahf
ss
jns
mov
sbb
outsb
adc
loop
jg
push
jg
inc
sti
ja
pop
add
imul
mov
in
mov
stos
js
shrl
or
cld
mov
and
push
or
arpl
in
xor
lahf
cs
fmul
test
andl
and
push
imul
lahf
es
movsb
inc
or
lcall
shr
inc
mov
das
fdivs
mov
adc
daa
cmpsb
or
divb
iret
lahf
out
mov
jno
fwait
insb
dec
and
xor
pushl
jle
into
xchg
dec
outsl
sub
push
outsb
push
pop
jne
dec
das
fldcw
mov
adc
sbb
or
pusha
test
mov
jno
jb
inc
mov
lahf
lcall
out
aad
xlat
mov
in
cmpsb
outsl
pushf
dec
dec
push
mov
pop
shlb
cld
inc
sub
orl
rcrl
lock
mov
adc
outsl
les
add
mov
cmp
icebp
mov
inc
ret
inc
stos
adc
sub
fdivs
adc
or
add
lds
or
pop
push
cld
cmp
ljmp
mov
mov
mov
lods
dec
les
out
push
mov
fbld
cmp
push
mov
inc
icebp
xlat
or
imul
sbb
shrb
lret
xchg
sub
adc
pop
arpl
cwtl
scas
sbb
pop
cld
and
ljmp
std
pushl
mov
mov
adc
mov
out
mov
in
imul
inc
sbb
xchg
push
or
das
push
mov
sub
sbb
mov
sub
mov
sbb
ja
sub
std
inc
adc
or
fdivrs
or
sbb
fs
cmp
jns
lock
pop
cmp
testb
add
or
mov
in
mov
push
mov
pop
shlb
cld
cmp
ljmp
pop
les
mov
std
rclb
mov
addr16
jb
adc
xor
lahf
xor
adc
movsl
movsl
jno
lret
movsb
cld
lods
stos
les
and
lahf
add
mov
jle
mov
sbb
sbb
aam
mov
lods
outsb
push
rclb
hlt
in
mov
inc
or
sbb
bound
in
xor
lahf
xor
lods
out
pop
dec
dec
cmp
fldcw
dec
pop
in
push
rcl
adc
adc
mov
ficomps
inc
jbe
mov
popl
movsl
andl
test
or
or
mov
mov
fcmovbe
in
mov
mov
mov
add
xor
mov
sbb
mov
sub
and
and
jb
adc
mov
push
mov
fldenv
imul
cld
mov
mov
test
mov
clc
das
stos
xor
or
inc
mov
fs
lret
inc
mov
pusha
xlat
adc
call
push
daa
out
call
push
mov
lock
cmp
sub
and
stos
jns
mov
inc
fs
outsb
imul
dec
mov
push
pop
push
sub
sub
shr
lds
js
inc
xchg
popf
loopne
inc
stc
and
lea
dec
movsb
gs
push
xchg
adc
mov
das
aad
cs
or
adc
mov
cmp
bound
loope
scas
mov
push
mov
ljmp
jecxz
mov
sub
das
pop
adc
stc
movsb
cmp
pop
mov
sub
mov
leave
fidivs
mov
shlb
pop
xchg
adc
mov
push
xchg
mov
sub
mulb
or
fcom
imul
int3
xor
jmp
adcl
or
sbb
jo
push
stc
jle
lds
push
mov
jno
sbb
dec
push
push
stc
add
adc
lret
jo
adc
arpl
repnz
lahf
hlt
hlt
daa
push
pop
in
inc
mov
pop
jo
pop
lods
push
pop
into
iret
mov
mov
or
ljmp
aaa
int3
xor
ret
inc
loopne
sub
mov
lods
push
mov
ret
inc
pushf
adc
pusha
xchg
sbb
mov
jg
ja
stos
adc
mov
sbb
clc
jl
xor
inc
adc
in
mov
inc
mov
dec
xchg
je
push
pop
add
je
ds
push
insb
mov
sbb
pop
lods
dec
insb
inc
jnp
pushf
adc
push
mov
fdivrp
enter
lret
cmp
outsb
clc
fdivs
stos
adc
gs
push
xchg
inc
repz
pop
aaa
loopne
notb
xchg
scas
jae
jno
enter
xchg
and
dec
mov
sbb
pop
jge
and
mov
mov
inc
adc
les
cmp
das
flds
adc
das
xchg
sub
jl
adc
out
mov
xchg
fwait
out
lahf
or
ror
sbb
test
jl
sub
cmp
cltd
dec
mov
test
jmp
sahf
movsb
in
mov
in
mov
mov
adc
pop
lods
dec
xor
fistpl
mov
enter
sub
icebp
pusha
repnz
push
lahf
repz
dec
dec
std
or
sbb
rcr
mov
call
clc
mov
xor
ljmp
dec
and
ret
xor
sub
jae
add
and
and
repnz
adc
lock
mov
scas
sbb
notl
mov
and
lahf
add
cld
mov
xor
cld
mov
mov
subl
ljmp
je
inc
adc
inc
inc
divb
stos
cmp
icebp
cltd
cmp
inc
aas
sbb
jb
fistl
and
stos
xor
pusha
xchg
es
rcrl
sub
sub
jl
and
adc
out
ss
leave
lcall
push
rclb
nop
pop
xchg
lods
lods
sbb
jnp
ret
adc
stos
sbb
mov
cmp
sub
mov
mov
jns
inc
xor
or
subl
test
fisttpl
jmp
sub
fmuls
popa
pushf
incb
mov
mov
sub
incl
xchg
inc
jns
dec
dec
xchg
jns
and
add
mov
cltd
xchg
xor
rcrl
cmp
bound
scas
xor
test
je
decb
jns
inc
inc
xlat
lods
or
push
cmp
pop
inc
xchg
xor
jbe
mov
jns
dec
repz
fnstsw
clc
out
lea
push
xchg
shlb
stc
jecxz
or
in
adc
mov
adc
fisubl
xor
cmp
and
add
xor
lret
nop
jo
hlt
mov
xlat
test
add
push
test
cmpsb
xor
jge
sbb
adc
push
in
mov
cwtl
test
sbb
jnp
push
jge
or
adc
push
out
sub
jnp
add
push
enter
mov
out
mov
or
sub
jl
xchg
add
sub
dec
stc
mov
daa
loop
mov
fwait
xchg
lahf
add
cld
mov
scas
adc
gs
mov
stos
mov
inc
popf
mov
sub
test
sahf
push
jbe
sti
xchg
cmpsl
xor
sub
lods
push
mov
mov
cmpsb
xor
jo
pop
mov
mov
xchg
push
or
stos
pop
push
mov
repnz
inc
jge
mov
add
mov
popf
sbb
adc
cmp
mov
orl
inc
fnstcw
xchg
jo
push
xchg
jl
inc
leave
adc
int
jle
into
pushf
xchg
or
fldcw
cld
xchg
jmp
mov
popl
pop
pop
cmpsb
cmp
push
idivl
mov
icebp
xorb
repnz
lahf
icebp
and
or
mov
cs
push
jl
mov
dec
pop
xchg
adc
adc
sub
aad
adc
ja
pushf
idivl
cs
es
sahf
jno
sbb
dec
push
arpl
in
xor
lahf
cmp
ja
ljmp
cs
shlb
inc
imul
cmp
xchg
jecxz
clc
cltd
in
mov
pusha
subb
jg
adc
aas
or
mov
mov
aad
pop
lods
push
test
cmp
sub
in
cld
lds
pop
xchg
inc
out
orb
cli
mov
subl
xchg
xchg
mov
aad
adc
aad
lahf
adc
xlat
mov
xor
jl
fcompl
mov
cmp
dec
mov
mov
mov
daa
push
jge
inc
jmp
mov
jecxz
or
jge
outsb
ja
loop
jg
push
ja
inc
repz
add
imul
pop
lods
or
adc
outsb
adc
dec
sub
orl
in
into
sub
mov
aas
adc
mov
rolb
or
mov
dec
mov
jns
sbb
xorl
xlat
or
movsb
sahf
mov
add
mov
ljmp
pop
lret
aam
sub
and
aam
lock
aas
sub
iret
addr16
xchg
inc
fwait
cmc
lahf
add
inc
push
popf
bound
mov
into
popa
stos
cmp
push
mov
xchg
inc
and
lret
and
mov
add
notl
test
mov
outsl
test
xor
or
lret
push
andb
jp
adc
pushf
inc
pushf
mov
cmpsb
aaa
fidivs
scas
scas
push
aas
imul
lahf
xor
xor
dec
sub
push
mov
jge
test
push
incb
dec
insb
int3
pop
sub
pop
inc
sbb
ljmp
cmp
mov
pop
or
lods
xchg
in
ret
aas
sbb
mov
inc
or
pop
aam
rcll
outsl
dec
inc
xor
inc
and
xor
push
cli
scas
popa
and
add
test
fisubrl
cmc
fdivs
adc
jle
push
frstor
enter
cld
xor
jmp
mov
and
movsl
insb
pop
xchg
loop
jg
push
test
roll
jecxz
or
subb
sub
imul
fisubrs
and
mov
add
outsb
rcll
popa
movsb
jle
into
fwait
into
mov
inc
sub
scas
push
mov
jns
mov
mov
loopne
scas
scas
push
aas
imul
and
cmp
or
dec
repz
sub
das
fistpll
dec
sbb
lahf
or
adc
sar
test
jp
push
sub
inc
std
es
in
repz
mov
mov
push
sub
daa
jg
or
push
mov
jbe
les
in
sub
in
xor
lahf
xor
cs
lahf
pusha
ja
hlt
lret
fstps
push
das
pop
lds
jbe
fsubs
mov
pop
cmp
sub
xchg
mov
sub
xlat
shll
pop
fwait
sbb
jno
adc
fstl
cmpl
and
in
call
bound
sub
mov
hlt
cmp
call
sub
add
out
mov
das
xlat
cmc
and
pop
push
or
adc
icebp
xorl
push
push
add
in
push
aas
and
mov
movsb
lds
pop
ret
shr
stos
loop
test
cmp
fistps
add
sub
js
or
xchg
jmp
xchg
sarb
inc
or
inc
scas
popa
lods
dec
leave
repnz
or
lret
call
mov
outsb
lahf
push
mov
cld
mov
add
adc
scas
pop
xchg
jl
test
lahf
aaa
dec
rcl
cmp
pop
sub
je
decl
mov
fdivr
das
daa
lahf
daa
sbb
aas
fcoml
xchg
sbb
jne
lahf
pop
mov
popa
cmpsl
add
in
cmpsb
lods
gs
mov
cmp
xchg
xchg
or
push
inc
les
inc
stos
orl
out
ret
outsl
inc
stos
orl
lds
addl
es
cmp
mov
dec
into
xchg
sti
and
or
addr16
push
stos
jno
dec
fisubrl
out
push
pushf
leave
fistps
push
push
scas
call
push
mov
mov
pop
test
pop
repnz
mov
cld
mov
sbb
mov
bound
adc
fdivs
adc
aaa
fcmovbe
lods
pop
scas
sbb
fadd
pop
push
mulb
xchg
in
cmpsl
jo
pop
lods
xor
sub
and
cld
ljmp
xchg
nop
sbb
fisubrs
sub
pushf
inc
and
sub
mov
cmp
sub
es
or
cmp
xor
movsl
add
jae
test
sahf
push
jbe
das
xchg
lods
xchg
stc
test
ret
xor
mov
mov
lds
mov
pshufw
imul
stos
push
lods
xor
mov
dec
test
jp
pushf
adc
out
stc
aas
inc
sbb
add
cld
mov
mov
xor
mov
sub
adc
outsb
shlb
std
mov
sub
sbb
pop
inc
dec
stos
adc
aaa
mov
cld
mov
in
cmpsl
jo
xlat
subb
jg
push
mov
inc
out
dec
push
repz
in
adc
push
pop
insb
idivb
inc
sub
stos
cmp
lret
push
lcall
stos
push
mov
fisttps
jl
inc
into
icebp
outsl
mov
loop
movsb
data16
stos
test
sbb
sbb
dec
cs
dec
mov
push
lea
jb
xor
stc
mov
mov
cld
gs
pop
or
xor
dec
inc
fsubs
sub
movaps
push
mov
sbbb
lea
push
mov
mov
pop
in
andb
mov
mov
nop
and
shll
sbb
fsts
outsb
push
jle
into
fwait
idivl
sub
and
pop
xchg
mov
bound
fwait
mov
mov
aas
fwait
push
hlt
xor
cmpsb
test
adc
and
stos
and
divl
xor
inc
cmp
mov
mov
push
sub
pop
push
jl
mov
sub
push
xchg
mov
dec
mov
in
xor
lret
call
mov
sub
outsb
out
shlb
sbbb
mov
dec
into
popf
jns
inc
insl
jbe
fnstcw
bound
push
lea
pushf
stos
xchg
ss
clc
sbb
fs
enter
mov
ljmp
ljmp
mov
arpl
adc
cmp
mov
int
adc
in
mov
inc
leave
inc
stos
adc
fmul
cltd
dec
enter
rcll
xchg
fs
in
test
lods
or
lods
fucomip
xor
mov
fs
lret
fisttpl
cltd
fwait
cmpsb
lahf
adc
adc
xor
mov
adc
lret
mov
movsl
imul
jecxz,pn
jmp
lock
cmp
inc
testl
ja
dec
lods
adc
ret
jb
lfs
adc
lret
repz
push
mov
mov
inc
mov
stos
xchg
jns
push
pop
or
outsb
dec
mov
into
lds
lea
push
mov
mov
push
adc
out
aas
sub
fwait
xchg
aas
stos
dec
sbb
ss
cmpsb
loop
es
cmp
push
and
sub
lret
sub
std
sbb
mov
bound
pushf
push
sub
std
dec
sbb
fnstcw
outsl
lahf
adc
xchg
jp
push
pop
test
sub
adc
pop
test
in
push
jae
xchg
adc
in
mov
fildl
stos
and
imull
je
into
inc
aam
imulb
pushf
clc
or
adc
js,pt
jnp
sbb
mov
mov
stos
int3
insl
popf
lods
jae
adc
add
notl
mov
dec
in
hlt
lret
fstl
ficompl
and
and
pop
mov
mov
add
xor
stos
pop
fsubl
aas
int3
movsl
cmp
sbb
gs
inc
jp
test
cmc
enter
loope
out
pop
inc
shll
testb
pusha
lods
push
pop
jbe
pushf
movntps
stos
sub
divl
je
adc
xchg
enter
jns
stos
sbb
scas
sarl
icebp
mov
dec
adc
mov
mov
pop
fcos
pop
xchg
mov
dec
scas
push
dec
adc
mov
or
pop
mov
popf
stc
mov
arpl
sbbb
sar
push
add
fcomps
sbb
xchg
into
int
cmpsb
jns
iret
sbb
or
movsl
cmp
leave
lods
add
jmp
sub
mov
mov
inc
mov
iret
das
inc
mov
cmpl
jbe
sub
out
push
adc
in
mov
fcomp
imul
and
mov
dec
in
mov
loop
in
adc
leave
aad
adc
mov
lods
lahf
repz
dec
aam
jl
je
stos
adc
int3
xchg
je
mov
mov
mov
push
mov
xor
lahf
xor
mov
adc
std
out
out
push
out
xor
add
jge
add
mov
movsb
cmp
sub
repnz
or
xchg
fidivs
ficoml
stos
orl
xchg
pop
outsl
mov
cmp
add
jmp
cld
leave
pushw
pop
pop
fimuls
lahf
rcll
cld
mov
sub
sbb
pop
inc
jnp
fdivr
enter
call
mov
shrl
stc
adc
inc
loop
jg
push
popf
inc
inc
loope
push
imul
or
jl
aas
mov
stc
mov
lock
push
popf
adc
push
mov
fcmovnu
out
lret
or
je
popa
dec
pusha
push
jno
push
lahf
adc
outsb
jae
jecxz
in
sbbl
mov
cs
int
cli
xor
inc
sub
fadds
lcall
mov
fisubs
insl
mov
xchg
mov
mov
mov
mov
fidivrs
sub
test
sahf
sbb
pop
inc
rorl
cs
inc
cmp
iret
sub
lods
xor
or
popa
mov
mov
jnp
or
flds
inc
rcr
pop
inc
inc
jle
into
lahf
into
add
into
and
into
popa
stos
pop
xchg
push
test
cltd
loop
dec
xchg
jmp
cwtl
stos
sbb
fwait
pushf
sbb
pop
push
sub
xchg
dec
mov
in
mov
or
add
push
outsb
fs
idivl
popf
loop
rorb
xchg
adc
popa
subl
mov
mov
or
in
clc
and
xor
xchg
and
stos
mov
adc
sbb
pop
movsb
xchg
out
inc
loop
push
pop
xchg
aaa
test
lcall
adc
bnd
sub
pop
push
mov
mov
les
adc
adc
movsl
jg
push
cmpsb
pushf
inc
ljmp
jecxz
or
in
jae
fcmovnb
adc
in
mov
outsb
adc
xor
pop
fsubs
xor
fsubrs
push
pushf
dec
push
aam
lea
aaa
lahf
rcll
adc
rolb
stos
sbb
xchg
mov
push
call
mov
icebp
or
jnp
scas
push
pop
or
mov
lret
popa
incb
adc
outsb
lods
adc
aaa
int3
xor
pop
in
ja
cmp
mov
aas
clc
scas
inc
leave
js
sbb
lea
push
movsb
xchg
xor
push
jecxz
shrb
pcmpeqb
lahf
adc
jnp
pop
pop
adc
outsl
mov
cmp
outsl
jae
ffree
ds
and
imull
aaa
mov
cld
mov
cwtl
xchg
dec
scas
or
scas
aaa
push
mov
popa
or
adc
call
mov
mov
stos
shll
dec
and
push
jae
shlb
cmp
xor
flds
iret
mov
sub
iret
push
fcos
repz
ljmp
mov
push
cmpsb
xchg
hlt
xor
fisttps
or
jl
jmp
es
imull
insb
and
stc
xchg
ja
push
pop
push
or
mov
dec
repz
andb
mov
repnz
repz
mov
mov
scas
pop
mov
or
pop
mov
lods
push
jecxz
add
push
mov
pop
aas
and
push
fs
ret
inc
mov
fadd
xchg
mov
or
hlt
inc
dec
pop
movsb
pop
jl
arpl
in
lods
outsl
mov
push
rclb
push
push
pop
loop
fisubrl
test
out
cmp
adc
in
mov
push
dec
and
popa
jo
leave
jae
outsl
inc
fdivs
stos
pop
js
and
setno
cmp
adc
inc
rol
pop
mov
setb
ret
adc
stos
adc
add
je
stos
push
xor
pop
and
mov
push
mov
inc
or
clc
mov
out
push
in
jle
testl
and
enter
sbb
movsb
adc
cwtl
addr16
les
adc
adc
andb
xchg
popa
mov
daa
mov
pop
dec
scas
push
dec
adc
mulb
mov
mov
sbb
mov
dec
mov
jnp
std
pushf
fbld
iret
fwait
mov
sbb
ljmp
call
and
pusha
ret
nop
add
dec
push
movsb
pop
lods
push
pusha
inc
xor
adc
push
mov
out
and
sbb
mov
cmp
sbb
adc
jno
adc
inc
nopl
subb
mov
sub
nop
ds
lret
push
xlat
dec
ja
lock
lahf
imulb
adc
sub
icebp
cmpsl
push
test
sub
into
sahf
push
jbe
int3
xchg
sahf
loope
fucomip
shll
cmp
push
xchg
fwait
or
push
mov
adc
fidivs
hlt
adc
arpl
jp
sbb
imul
cmpl
lea
leave
sahf
scas
les
or
add
adc
sbb
leave
adc
lods
and
idivb
scas
lahf
out
insb
xchg
jne
push
pop
jns
dec
out
in
or
adc
sti
adc
mov
xor
xchg
xor
cmpsb
jno
mov
dec
dec
push
mov
leave
lcall
sub
xor
jecxz
mov
xor
add
les
std
jne
push
pop
in
dec
mov
adc
and
sub
fadds
adc
negl
add
fisttpll
enter
and
mov
adc
aas
mov
rorb
popa
call
test
ret
and
inc
sub
fmuls
push
hlt
pop
jge
in
iret
xchg
jecxz
or
aaa
and
cltd
loop
fsts
adc
imul
mov
fcos
repz
push
dec
mov
and
xor
and
fmuls
add
push
and
outsl
mov
cmp
ja
mov
mov
sbb
inc
mov
out
xchg
jp
push
pop
lahf
sar
iret
mov
mov
xor
dec
and
pop
in
sub
std
loope
mov
lea
sub
fadds
adc
sti
insb
inc
push
iret
inc
mov
sbb
rorb
mov
mov
sub
js
mov
jb
mov
or
xor
mov
mov
dec
push
lcall
mov
pop
jnp
test
mov
sub
outsb
cmp
in
je
shlb
adc
jbe
sti
mov
dec
mov
adc
es
popa
mov
xor
xchg
lret
dec
mov
jae
and
ljmp
ret
nop
jmp
mov
dec
pop
mov
in
ljmp
xchg
adc
inc
mov
push
jno
push
mov
pop
rorb
sahf
cld
sbb
ljmp
xlat
mov
adc
das
mov
adc
push
or
lods
xchg
pop
inc
push
sti
outsl
mov
in
xor
xchg
push
in
fdivrs
inc
aad
jg
push
negl
or
mov
xchg
sub
cs
xor
add
ss
aad
lods
mov
icebp
sbb
add
jge
outsb
fistpl
jle
daa
push
xchg
inc
rol
addl
push
aaa
js
aas
arpl
dec
sub
stos
cmp
mov
dec
inc
stos
andl
inc
ror
push
sbb
mov
test
hlt
and
les
and
leave
mov
or
xchg
push
rol
int3
adc
or
mov
shr
adc
push
sub
lahf
mov
shrl
jl
inc
sarb
int3
xchg
popf
adc
stos
pop
xchg
scas
mov
cmp
sub
push
sub
sbb
adc
mov
ficompl
push
cmp
adc
insb
hlt
xor
lret
jp
push
fnstenv
adc
cs
fwait
jo
xlat
mov
loop
lds
push
fwait
dec
or
cmp
sub
xchg
adc
or
xchg
out
xor
lahf
cmp
xchg
jmp
mov
cmpsb
mov
adc
pop
sub
xchg
shlb
shrl
cs
xor
add
push
dec
gs
inc
stc
mov
mov
xchg
lods
mov
les
mov
popa
push
mov
pop
sub
xchg
jp
push
push
push
in
cmpsb
outsl
cld
push
jnp
xchg
out
mov
inc
jecxz
out
adc
pushf
inc
jno
addb
call
jmp
int
addr16
outsl
xor
addr16
cmp
or
loope
jns
inc
leave
xchg
xchg
xchg
je
or
stos
dec
dec
adc
out
push
int
pop
pop
divb
lods
and
jge
scas
aam
lock
xor
in
iret
xor
xor
imul
enter
mov
lods
adc
pop
inc
jmp
xchg
test
mov
pop
stos
xor
dec
adc
in
mov
addr16
scas
repnz
rcrl
cmp
adc
push
sbbb
aam
sahf
add
jge
mov
sarl
sub
xor
in
push
ljmp
stos
push
cmp
mov
push
lahf
adc
aam
mov
cmp
add
mov
sbb
ss
aaa
push
pop
fadds
xchg
mov
test
mov
inc
pop
mov
sub
notl
call
bound
fwait
cs
adc
sub
cmpsl
call
sub
jl
into
popa
test
add
push
das
fcmovb
shl
in
sub
mov
dec
lods
push
mov
mov
push
mov
push
xchg
mov
and
adc
pop
cld
mov
sahf
fdivrs
stos
pop
dec
inc
lods
sub
dec
orb
xor
lret
sub
pop
daa
std
lods
stos
lods
and
stos
xor
sbb
jmp
mov
scas
cmp
gs
push
das
addr16
test
sti
bound
stos
push
lea
testl
ret
jo
adc
mov
lret
in
test
add
push
addb
aas
add
or
imul
fldcw
enter
in
xor
adc
xchg
push
iret
mov
mov
andb
push
sub
mov
inc
adc
and
mov
mov
aas
sbb
push
inc
mov
push
dec
sub
adc
xor
mov
sub
or
pop
inc
lahf
sbb
sbbb
rep
adc
adc
inc
loope
fs
out
mov
bound
pop
rcl
les
push
jb
cmpsl
pop
in
fisttps
les
adc
lahf
fisttpll
dec
sub
iret
lcall
or
aas
sbb
lods
cld
mov
stos
and
and
push
out
bnd
sbb
lret
out
mov
xor
mov
mov
jg
pop
or
push
ret
movsl
inc
mov
mov
push
aas
jns
sbb
scas
cltd
lds
nop
rcrl
add
sahf
sub
aad
adc
stos
and
divl
popf
scas
lcall
lahf
out
mov
cwtl
addr16
cmp
adc
decb
popf
movntps
ja
and
imull
adc
sbb
fisubrs
div
pop
add
f2xm1
aam
iret
jne
push
test
or
fwait
lahf
adc
mov
ret
sbb
movsb
cmp
mov
cli
iret
mov
roll
iret
push
icebp
xchg
inc
lods
mov
das
rorb
cmp
test
adc
stos
inc
sti
repz
xor
repz
stos
movsl
ja
lods
jecxz
int3
push
or
jge
inc
cld
roll
rcrl
dec
movsb
aaa
lahf
in
mov
mov
adc
and
cmpsl
iret
fcmovu
cmp
int
cmp
xor
jns
std
aas
pop
sbb
lahf
xor
inc
mov
inc
xchg
repz
cld
lahf
pop
push
push
push
cmp
es
movsb
cmp
sbb
pushf
cwtl
xchg
push
dec
imul
xor
xchg
out
mov
inc
fsubrl
std
lret
fistl
nop
es
mov
aas
add
popf
and
push
jle
into
cwtl
sbb
movsb
data16
lret
jp
sahf
aas
sarb
mov
jb
xchg
dec
dec
adc
add
xchg
jae
sub
mov
cmp
push
mov
les
fxch
jo
adc
fdivrs
aad
pushf
stc
sti
mov
in
sub
mov
xchg
xor
and
dec
fsubrs
xorb
shlb
ljmp
shlb
lock
mov
cmp
enter
pop
in
fs
sti
lahf
sbb
inc
aam
divb
add
cmpxchg
mov
cwtl
xor
sub
int
sahf
dec
je
push
arpl
ret
jmp
lahf
lock
mov
subl
cmp
xchg
cld
fsubs
hlt
and
xor
lahf
lret
andl
sahf
xchg
or
push
cs
movsl
xchg
jl
into
ret
popa
test
insl
jp
add
mov
sti
mov
push
rcrb
mov
sub
jecxz
inc
setg
lahf
xchg
mov
insl
add
jg
jbe
inc
jl
inc
shlb
sahf
push
movsb
sbb
and
pusha
or
int3
movsl
cmp
mov
adc
inc
push
pushf
and
subl
fwait
pop
inc
out
pop
mov
in
adc
lret
loop
jg
push
jp
mov
cld
dec
test
outsb
adc
setno
mov
or
inc
aaa
int
inc
mov
int3
jbe
xchg
inc
push
outsl
ja
lods
dec
icebp
push
mov
pushf
adc
push
mov
daa
jecxz
and
mov
pop
mov
adc
push
mov
data16
clc
scas
sbb
mov
sbb
push
scas
sbb
shrb
scas
push
inc
push
data16
mov
sub
aas
sbb
popf
push
lods
inc
aas
cmp
test
repz
inc
stos
sub
cmp
es
xchg
dec
loopne
push
rcrb
jae
jmp
mov
shrb
cmc
xor
adc
sbb
xlat
cs
aas
adc
mov
cld
pop
sub
addl
popa
push
jb
enter
mov
cmp
xor
push
test
mov
sub
sbb
sbb
dec
stos
adc
aaa
mov
cld
mov
mov
adc
icebp
cwtl
adc
das
jle
xchg
out
xor
lahf
xor
in
sub
movsl
outsb
arpl
jo
xchg
testl
jle
into
popf
xor
sub
jae
shlb
lcall
cli
add
mov
imul
test
call
adc
in
mov
xchg
mov
push
pop
movsl
fptan
mov
imul
or
pop
nop
adc
jns
push
test
xor
jl
add
adc
loop
popa
daa
lods
xor
outsl
adc
in
mov
inc
mov
imul
dec
or
mov
lods
adc
mov
mov
addb
roll
rorb
xor
es
jecxz
hlt
sbbl
mov
imul
aas
mov
clc
jg
repz
out
add
in
mov
push
mov
mov
jle
cmp
jb
cmp
faddl
aad
mov
into
mov
jnp
dec
loopne
push
or
movl
popa
cmpsb
and
push
dec
xlat
jecxz
sti
push
rcrb
jbe
in
mov
outsl
push
mov
sbb
int
fldt
fadds
dec
daa
and
xlat
scas
in
mov
stos
in
xor
adc
add
mov
cmp
lds
fsubr
dec
mov
pushf
movsb
cmp
xchg
add
popa
movsb
out
rcl
mov
xchg
sbb
xchg
test
adc
cld
imul
popa
add
nop
xchg
in
test
aaa
js
or
dec
push
rorb
in
loopne
jge
inc
mov
repnz
nop
inc
and
cmpl
loope
pop
rcrl
pop
sub
jmp
iret
jl
mov
aad
xor
pop
and
cs
scas
mov
pop
in
mov
paddsb
pop
or
push
add
fucomp
enter
sub
xor
rcrl
std
inc
lcall
mov
adc
add
xor
outsl
cmpsl
lcall
pop
jo
or
mov
xchg
pop
jle
add
or
xor
mov
push
rclb
sbb
dec
test
pop
push
push
xchg
dec
cmpsl
lock
mov
dec
mov
push
mov
mov
xchg
jbe
mov
sub
imul
sub
adc
or
mov
mov
loope
lret
or
sbb
shrb
enter
xchg
xchg
add
xchg
jne
push
pop
daa
les
in
icebp
or
or
pushf
idivl
cld
scas
and
test
dec
mov
inc
mov
ds
push
fldlg2
mov
pop
mov
mov
