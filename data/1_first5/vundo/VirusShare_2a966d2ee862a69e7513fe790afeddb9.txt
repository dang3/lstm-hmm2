jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
std
sti
and
mov
jne
pushf
push
out
add
pop
or
add
add
or
add
add
add
insb
add
add
add
add
addl
push
add
add
add
push
or
insb
add
call
add
insb
add
addl
add
add
add
add
insb
add
add
push
add
add
add
imul
add
add
add
add
roll
mov
add
add
add
add
add
adc
mov
add
add
add
add
add
insb
add
add
add
add
mov
add
add
add
roll
mov
add
add
add
dec
add
adc
mov
add
add
add
add
add
insb
add
add
add
add
push
add
cmp
mov
add
add
add
add
push
add
adc
aad
insb
add
add
add
add
add
add
add
add
imul
add
add
sub
popf
add
add
add
verr
add
add
add
jl
and
add
add
jl
or
add
dec
add
addl
ss
add
add
insb
add
add
adc
jl
rolb
and
add
add
add
pop
add
add
add
add
push
add
add
add
add
add
add
add
insb
add
call
add
insb
add
add
mov
add
jnp
sub
lods
add
add
add
add
add
add
add
add
and
loopne
push
add
add
lcall
add
add
push
add
add
sub
insb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
inc
add
addl
or
sbb
push
add
add
add
add
dec
add
and
sub
jle
cmp
add
add
dec
add
add
add
inc
add
add
add
add
add
add
add
aas
add
add
push
add
and
in
add
add
add
add
add
add
arpl
jno
pop
add
enter
add
addl
add
sub
enter
push
add
add
dec
add
add
add
add
cmp
jbe
jno
jl
mov
cmp
add
insb
add
lods
add
add
add
add
add
outsb
add
dec
add
add
add
add
add
push
add
outsl
add
add
add
add
adc
insb
add
add
addl
cmp
add
insb
add
add
and
xchg
add
add
add
add
imul
add
add
fiaddl
stos
add
add
add
add
add
jl
inc
add
sub
stos
add
add
lods
add
js
dec
add
add
gs
add
add
movsb
xor
dec
xor
cmc
push
xchg
pop
call
add
gs
jle
or
call
adc
mov
ljmp
fcmove
fistps
stos
sbb
mov
rolb
scas
mov
fiadds
xor
scas
mov
loop
mov
xchg
jmp
adc
mov
jo
addr16
stc
push
sub
mov
lret
outsb
pop
pop
add
push
nop
pop
ja
cmc
enter
xchg
adc
xlat
int
repz
mov
aam
movsb
pop
out
dec
pop
push
jge
hlt
vpextrw
lds
sbb
mov
jns
loopne
push
sub
or
or
cmp
mov
sbb
push
aad
movsl
les
loope
fwait
aas
adc
or
insl
push
lahf
idivb
push
repnz
sbb
ds
loop
mov
rolb
aam
mov
jnp
int3
mov
mov
call
data16
arpl
out
push
mov
sahf
cmp
frstor
aam
enter
dec
outsb
testb
fcompl
and
mov
or
mov
push
cli
push
and
scas
cld
ret
mov
cmpsl
xor
addl
je
gs
cmc
repnz
pushf
pop
icebp
lock
jne
lcall
sti
in
aas
dec
add
icebp
mov
pop
faddl
mov
cmpsl
loope
sbb
cmpsl
divb
dec
adc
mov
cbtw
in
or
jae
ss
pop
addr16
shrl
jl
xor
mov
outsb
and
mov
aaa
pop
push
sub
pop
addr16
notl
sub
enter
adc
insl
es
sbb
pop
repz
fcomps
shll
pop
out
push
je
lock
sarb
inc
or
dec
add
pop
stos
out
mov
mov
xchg
xor
xor
mov
inc
push
fnstsw
dec
into
dec
mov
enter
cmp
jle
or
pop
xor
out
cmp
outsb
and
mov
push
cmp
cmp
jmp
xor
fldt
icebp
js
addb
mov
pushf
mov
pushf
movsl
pusha
lcall
filds
int
bound
xchg
in
leave
cmp
test
add
sbb
sbb
sbb
jnp
sahf
outsl
jecxz
mov
and
in
push
mov
inc
fcompl
push
dec
dec
xchg
popa
pop
int3
out
lret
and
mov
pop
dec
inc
mov
push
clc
xchg
sti
xor
aad
mov
popa
andl
sbb
loop
pushf
insb
jg
jle
shlb
aam
or
repnz
imul
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
movsl
addr16
ja
inc
iret
push
mov
outsb
loopne
cmp
outsl
negb
outsl
aas
cmpsl
outsl
cmp
xchg
xchg
call
inc
iret
push
mov
pop
arpl
outsl
idivl
xlat
aas
aad
mov
xchg
xchg
out
imulb
pop
xlat
dec
cmpsb
ds
xchg
cwtl
or
xor
clc
sub
pop
xchg
and
imulb
xchg
mov
dec
pop
sarl
js
out
jmp
std
fisttps
pop
js
push
les
inc
call
mov
js
repz
outsl
jb
out
sbb
je
or
lods
scas
sbb
xor
dec
jge
nop
testl
add
mov
enter
decl
lcall
xchg
dec
pop
pop
or
adc
fwait
jl
pop
js
xchg
loop
mov
out
inc
setg
sbb
outsb
xchg
movsl
cmpsl
xchg
aam
adc
cwtl
out
add
lods
and
jg
movsb
inc
orb
sub
aas
push
incl
out
fistps
push
scas
daa
mov
lahf
pop
xchg
push
out
out
inc
ficoms
daa
mov
push
xchg
mov
add
loop
or
and
jp
push
decl
out
push
mov
daa
sarl
lret
xchg
outsl
xchg
sbb
pop
mov
loopne
jecxz
fnsave
and
adc
adc
aaa
lahf
pop
pop
jg
outsl
negl
dec
xlat
aas
cmpsl
das
mov
xchg
xchg
jmp
ja
inc
iret
push
mov
pop
pop
jg
outsl
negl
dec
xlat
aas
cmpsl
das
mov
xchg
xchg
jmp
fs
cmpsl
push
nop
lods
cmp
pop
addb
add
jecxz
out
jne
sahf
xchg
cwtl
mov
inc
inc
call
lret
inc
mov
push
add
arpl
cmp
push
lods
mov
dec
sub
rcl
frstor
cmp
jecxz
mov
pop
mov
incl
cs
lret
jns
inc
mov
rcl
in
dec
inc
dec
sub
loopne
jae
insb
xchg
orl
sub
push
aad
mov
lock
js
inc
cmp
and
mov
daa
sahf
sub
mov
inc
ja
jb
lds
fiadds
std
mov
sbb
shl
mov
int
xor
je
loopne
jl
or
fstpt
subl
jne
sub
push
aas
fisttpll
mov
inc
or
inc
sbb
lods
cmp
ds
repnz
sub
cli
stos
ljmp
mov
lret
insb
movsb
sbb
fwait
outsl
or
fs
adc
sbb
std
stc
cli
jp
mov
xor
jmp
cmpxchg
in
test
test
and
bound
adc
lods
das
icebp
repnz
ret
shll
cmc
sub
fxch
cmpsb
rcrl
cmpsl
shll
scas
xchg
fcmovne
add
jge
mov
jno
sbb
out
pop
hlt
xor
jmp
fldt
ret
xor
mov
mov
ffreep
fbstp
mov
cmp
inc
das
or
push
xor
mov
jnp
add
jno
pop
pusha
mov
std
cmp
pop
xor
mov
scas
mov
push
mov
int
leave
rcrb
sub
shll
inc
mov
push
sub
daa
or
repnz
fidivrs
sbb
mov
xchg
dec
sbb
inc
and
lock
stos
mov
pusha
repnz
cmp
iret
pop
push
mov
scas
jnp
rcl
lret
add
mov
adc
ficoms
and
dec
pop
pushf
outsb
or
push
mov
mov
enter
cmpsb
ja
sti
jne
mov
stos
loop
testl
or
add
pop
xchg
insl
in
in
dec
add
jae
or
dec
mov
sub
lods
js
aam
inc
outsl
rclb
shl
inc
xchg
xchg
sbb
jmp
scas
or
or
mov
jle
push
fbstp
push
adc
sahf
mov
outsl
or
dec
cmp
cmp
gs
sbb
xchg
cmp
jecxz
adc
mov
dec
and
das
cld
rorb
xchg
shrl
mov
mov
stc
pop
sbb
sbb
pop
sbb
mov
ret
loopne
sahf
std
pop
lar
xor
out
mov
push
in
mov
clc
imul
lcall
push
cmp
shrl
xchg
cmc
out
out
aam
mov
jbe
fwait
enter
add
cmc
fisttps
add
push
sahf
xchg
loopne
lods
stos
or
cmpl
jb
inc
fnstenv
jae
add
neg
scas
push
xchg
shrb
mov
sti
rorl
push
lcall
ds
mov
cmpsb
std
mov
cli
cmp
jle
lahf
sub
jp
in
jae
jg
daa
pop
je
mov
rcrl
sub
ss
pop
nop
mov
push
repnz
mov
fdivs
mov
sti
outsl
push
cli
mov
jno
ja
test
movsl
data16
repz
or
int3
or
jp
inc
leave
push
cmp
lret
in
stos
mov
rcl
adc
fstps
imul
jp
mov
ds
adc
jbe
push
mov
xor
jge
imul
inc
sub
xor
xchg
fimuls
mov
ja
das
sub
xchg
dec
and
stos
pusha
imul
mov
loope
xor
dec
xchg
movsl
sbb
push
fcomps
pop
pop
std
pop
push
sub
and
mov
subl
lods
pop
std
ljmp
xchg
or
mov
jmp
sti
cmp
insl
mov
call
jbe
lods
cwtl
jno
sub
arpl
aad
bound
cmp
ret
xchg
sbb
loop
enter
and
iret
ds
add
mov
scas
ljmp
mov
lret
gs
stc
xor
leave
das
xchg
sbb
loope
xchg
leave
push
and
in
loopne
stc
mov
cmc
in
aaa
movsb
sub
call
in
fwait
lcall
in
rclb
or
jg
jg
shl
jecxz
loopne
jmp
sti
sub
inc
sbb
xchg
dec
push
lret
cmp
outsb
enter
scas
out
mov
addb
mov
or
xchg
or
popf
popa
mov
mov
sbb
adc
aaa
xchg
leave
push
sti
ja
clc
sarl
dec
imul
and
icebp
loopne
mov
pop
xchg
pop
inc
fistpll
sbb
mov
mov
or
cmpsb
jmp
in
push
mov
jo
pop
js
mov
cld
roll
push
inc
out
mov
nop
int3
ja
sbb
fdivrs
pop
adc
xor
xchg
lret
jmp
adc
in
add
add
cmp
pop
mov
ficompl
jnp
dec
or
dec
xchg
mov
dec
mov
cltd
outsl
dec
pop
fisubl
iret
ljmp
add
mov
arpl
leave
addl
fstpl
push
cmp
aam
xchg
movsb
mov
mov
pop
popf
lods
cmp
inc
es
das
or
shll
xor
mov
sbb
sbb
call
das
xor
ret
sub
cmp
test
int3
es
jnp
jbe
sbb
adc
bound
cwtl
loop
clc
push
ds
das
lea
mov
or
fmuls
inc
cltd
int3
inc
jg
sub
aad
sub
push
push
mov
iret
push
inc
aam
dec
lea
jb
adcb
mov
xlat
scas
test
ret
cltd
mov
rcrl
fistps
shl
dec
dec
movsb
ret
push
sub
fs
icebp
fdivp
fisttps
mov
mov
cld
out
cmpsb
ss
jae
mov
adc
mov
xchg
repnz
lods
adc
jbe
cli
jno
hlt
repnz
int
mov
call
andl
dec
and
add
add
decl
out
roll
mov
or
test
cmpsl
imulb
stos
jbe
sti
or
mov
mov
mov
mov
mov
cld
mov
or
jp
pop
aas
fcompl
nop
cmc
rol
push
fs
jl
fs
negb
adc
fcomi
sbb
stos
sub
dec
ret
sahf
je
cmp
call
xchg
inc
mov
pop
sub
jb
lods
or
or
inc
jge
lods
inc
lds
xor
jp
adc
and
xor
sub
and
dec
xchg
idivl
es
lret
cmp
sbb
insl
sbb
mov
adc
fdivrs
and
add
inc
cmc
mov
loope
out
xchg
xlat
xchg
jns
sti
es
test
addr16
mov
fs
test
pop
sub
cmpsb
inc
shl
pop
fiadds
addr16
mov
outsb
arpl
int
loopne
mov
out
icebp
mov
out
pusha
out
mov
jns
xchg
insb
adc
or
flds
sbb
loopne
loop
adc
mov
fimuls
push
arpl
mov
add
adc
adc
arpl
mov
xor
mov
mov
mov
cmp
jb
mov
mov
movsl
icebp
push
mov
lods
aas
and
scas
mov
jmp
xchg
push
mov
lods
or
push
subb
add
in
mov
pop
jmp
cmp
into
mov
cs
xor
scas
lret
adc
in
or
sub
or
daa
movsb
leave
loopne
cmp
jle
jns
in
xchg
arpl
stos
pop
std
jno
mov
xchg
xchg
imul
in
les
lods
sub
mov
push
mov
mov
mov
jge
test
into
push
lret
adc
cmp
dec
lea
lahf
lret
lcall
js
mov
dec
prefetch
mulb
movsb
sbb
mov
mov
xor
in
shlb
add
lahf
jmp
mov
mov
out
js
add
inc
pop
jecxz
add
pop
dec
inc
stos
pop
es
jp
icebp
clc
sbb
pop
add
mov
lcall
mov
push
xchg
pop
test
fdivrp
mov
jbe
or
push
fsubs
cmp
imul
les
mov
sti
aad
add
push
and
or
or
mov
imul
sbb
sbb
movsb
push
lahf
xor
mov
sti
aas
push
and
rolb
sub
xchg
mov
fisubrs
cli
mov
and
test
mov
pop
jno
jg
jmp
mov
jne
xor
push
dec
push
shl
or
mov
mov
xor
mov
movb
jnp,pt
insb
pusha
stc
xchg
mov
sbb
ja
push
shrl
lcall
adc
mov
and
jmp
push
xor
in
xlat
les
jne
sub
rorl
cwtl
pop
iret
pop
js
jnp
leave
sbbb
or
add
bound
data16
sub
and
cs
push
and
inc
sub
insl
lahf
lcall
adc
daa
mov
repz
rorl
mov
sub
push
out
mov
loop
mov
pop
mov
aas
aam
ss
fwait
js
mov
xchg
sbb
nop
lcall
iret
or
insb
cmpsl
mov
cmpsl
arpl
cmp
push
jge
xchg
mov
fs
jae
mov
xchg
push
dec
mov
std
cmp
jnp
cmpsl
and
sti
jae
test
into
jecxz
in
ljmp
aaa
test
mov
shll
mov
in
pop
dec
cmp
test
xchg
xchg
fldenv
xchg
sti
repz
or
pop
mov
test
mov
sub
pusha
in
dec
addb
sub
push
fsubrs
es
clc
jne
stos
int
xchg
pop
sub
sbb
rolb
cmpsl
ret
out
lret
mov
pop
pop
mov
push
test
and
stos
ljmp
jge
std
mov
movsl
adc
and
mov
inc
adc
cli
jge
mov
insb
xchg
nop
sbb
call
pop
pop
jae
ljmp
xlat
inc
sub
add
pushf
cmp
mov
inc
jmp
andl
mov
or
mov
mov
inc
xchg
pop
popf
jl
xchg
fwait
xchg
ds
mov
into
or
and
push
int
imul
xchg
popa
push
std
push
pinsrw
sub
mov
call
int3
xchg
shll
hlt
leave
dec
sbb
movsl
loope
mov
xchg
mov
mov
je
mov
fsubrl
jp
push
int
jmp
dec
js
pop
xchg
aaa
push
test
jne
movsl
push
cs
stc
jns
dec
pop
xchg
push
xor
data16
or
pop
out
fdivr
adc
aam
mov
lock
dec
mov
mov
insl
iret
mulb
aad
xor
add
mov
dec
mov
repnz
cld
insl
shrl
or
outsl
push
clc
xor
or
push
add
stc
das
sub
dec
xor
push
sbb
or
sub
jl
jmp
test
mov
rcl
push
xchg
mov
jbe
lods
and
add
xlat
xorb
jbe
sub
imul
or
mov
mov
mov
rol
repnz
int
and
ds
xchg
ja
adc
cld
adc
loopne
sub
test
mov
adc
int
cmp
add
pop
jns
popf
and
stos
cli
inc
adc
aad
xchg
xor
mov
mov
jbe
fldt
aad
xor
jae
scas
lods
jns
pop
movsb
inc
pop
xchg
test
inc
stc
jmp
test
lds
xor
out
xchg
outsb
out
xor
mull
mov
mov
mov
loopne
inc
aas
jnp
or
jp
fsubrl
sbb
divl
add
sub
hlt
rcrl
inc
xor
inc
sahf
pushf
loop,pt
ds
adc
xchg
jbe
aad
dec
cwtl
dec
rorb
inc
sub
or
movsb
jg
popf
adc
daa
ja
daa
jae
inc
cli
int3
cmpsb
cmpsb
sub
jns
lahf
add
rorl
hlt
xor
and
cmpsl
mov
std
scas
mov
add
fwait
addr16
mov
dec
jg
push
sbb
ret
shrl
cmc
and
clc
sub
xchg
dec
cwtl
adcb
rclb
stos
stos
push
push
xchg
sbb
xor
stos
and
dec
orl
cmp
adc
mov
cmp
mov
add
je
loope
inc
xor
mov
shrl
and
lahf
mov
push
sbb
mov
mov
push
and
jge
movq
aam
int
shlb
fdivrl
sub
add
push
insl
jae
pop
lods
imull
xorl
cmp
xchg
in
cmpsb
std
mov
in
pop
lahf
loope
cmp
test
pop
rclb
jl
xor
call
add
add
enter
std
inc
aaa
stc
int
enter
add
imul
push
add
out
cli
cmp
lahf
push
lahf
sub
ret
xor
cmpb
mov
fwait
inc
jo
je
out
cmp
out
lahf
xchg
gs
xchg
mov
dec
xchg
test
xchg
insb
push
inc
cmpsl
adc
das
aaa
cmpsb
sbb
mov
xchg
pop
dec
mov
add
mov
cmpsb
sbb
mov
insb
adc
fdivrs
xor
repz
ja
sub
pop
fsubrs
gs
push
push
lret
icebp
js
push
subb
pop
enter
mov
xor
mov
lods
add
jno
or
jne
and
inc
into
push
fcomps
adc
insl
ljmp
sbb
jecxz
jmp
mov
cmpsl
int3
pusha
int
inc
pushl
or
xchg
jo
inc
add
testl
mov
or
inc
je
jae
add
andl
mov
popf
push
lds
xchg
es
es
xor
adc
hlt
addr16
push
push
adc
lret
adc
clc
test
dec
popa
fisttpll
lret
sbb
jecxz
popa
ret
push
clc
mov
xchg
arpl
push
add
stos
cli
mov
xor
jg
stc
mov
xorl
ds
sbb
pop
mov
cmc
popf
pop
jl
xor
push
xchg
ret
in
pop
int
test
xor
dec
adc
pushf
in
pop
mov
pop
bound
xchg
fs
stos
into
mov
jge
sahf
into
mov
mov
jmp
xchg
mov
inc
inc
xor
mov
lods
loopne
cmp
push
jecxz
xor
movsb
outsl
mov
inc
dec
xor
adc
push
add
js
mov
insb
cmpsl
adc
cmpsl
xchg
pop
lret
xor
mov
daa
jnp
lcall
sbb
cmp
jmp
rcr
test
add
lds
pop
sbb
cmp
and
add
hlt
pop
mov
stc
mov
jnp
out
ds
sbb
and
pop
mov
andb
jmp
jb
std
cld
or
sahf
arpl
subl
mov
adc
lods
inc
lahf
data16
jbe
sub
call
flds
mov
pop
js
fiadds
xchg
sub
dec
nop
sti
sbb
mov
and
and
cmc
xor
mov
das
lahf
adc
push
sub
ss
insb
cmp
mov
and
cltd
mov
adc
enter
inc
std
lds
inc
outsl
mov
mov
xchg
jp
or
clc
fwait
inc
adc
mov
sbb
xchg
out
scas
and
ret
xchg
mov
repz
dec
lea
push
cmp
aam
push
xor
dec
xchg
xchg
jecxz
imul
adc
or
pop
sub
xchg
fwait
imul
das
mov
xchg
push
popf
inc
imul
xor
subb
sbb
lahf
sahf
sbb
imul
imul
call
shl
lret
nop
inc
add
adc
lods
inc
sbb
test
mov
daa
xlat
popa
cmp
mov
in
xor
out
imul
aas
jmp
xchg
xchg
sub
adc
adc
push
ljmp
mov
fstpt
insl
add
mov
dec
push
and
clc
fidivrl
jae
mov
rolb
lahf
insb
jne
out
xchg
push
insl
and
sub
in
rolb
sti
loop
push
mov
sub
adc
fists
mov
cmpl
ror
jns
rcrl
add
pop
ror
ja
push
jl
sti
mov
add
out
or
cs
mov
pop
enter
bound
cmp
lock
mov
jbe
fldcw
or
or
aam
push
data16
jnp
jae
sbb
int3
pop
dec
dec
dec
fs
lea
aaa
out
push
or
es
jb
insl
ja
cltd
lods
pop
dec
mov
test
bound
lds
pop
pop
cs
mov
add
and
pop
fs
mov
cmp
xor
xor
clc
pushf
imul
mov
test
mov
push
inc
xchg
jecxz
int
xlat
cmpsb
and
pop
fbstp
or
and
cmp
sub
sbb
pop
xor
mov
jae
shlb
mov
mov
xor
mov
pop
ds
or
lret
push
insl
push
fsubrs
lods
pop
cld
cltd
cmp
mov
mov
cltd
xor
xchg
je
push
mov
sahf
cmp
insl
sub
jne
jb
aad
and
flds
or
sbb
addr16
jb
mov
mov
xor
stos
test
outsl
pop
xchg
jl
icebp
sub
mov
jg
pop
pop
sub
repnz
cmp
repnz
out
gs
out
loope
imul
int3
mov
or
loopne
fistpll
data16
push
jnp
jp
xchg
adc
test
shrl
scas
aad
mov
fisubrs
mov
mov
xlat
sbb
and
and
or
pop
cmpsl
sti
push
xlat
out
pop
into
lods
subb
jne
jo
nop
add
add
insl
je
and
sub
mov
stos
and
sbb
pop
xchg
xor
add
cwtl
daa
leave
es
loop
inc
imul
dec
ret
rcrl
push
fadds
jecxz
push
fs
lods
jl
xor
and
scas
sahf
ds
jne
or
lret
ss
mov
and
addr16
adc
jbe
sarl
or
out
mov
inc
sub
xchg
sbb
mov
push
xor
and
push
mov
mov
cld
adc
mov
testl
jae
push
jmp
lcall
flds
jge
adc
xor
jb
xor
fimuls
mov
pop
imul
jmp
out
sbb
or
sbb
push
cmp
jae
fwait
pop
sti
int
xor
stc
cmpsl
in
repz
jecxz
pusha
push
adc
or
fldt
inc
add
jle
xchg
daa
or
mov
in
sbb
or
stos
lods
loope
gs
pop
xchg
in
addb
mov
gs
rorb
lea
mov
cld
dec
loopne
pop
mov
js
xchg
mov
add
jo
add
push
add
sbb
mov
add
enter
push
leave
sub
mov
loope
test
pop
push
ret
xchg
mov
scas
sbb
dec
int
pop
xchg
subb
push
or
icebp
sbb
mov
dec
icebp
stos
add
gs
sbb
or
sbb
jns
ja
jb
mov
and
fsub
inc
hlt
pop
ds
pop
and
inc
insb
out
enter
jne
adc
iret
push
mov
pop
pop
jg
outsl
negl
dec
xlat
aas
cmpsl
das
mov
xchg
xchg
jmp
ja
inc
iret
push
mov
pop
pop
jg
outsl
negl
dec
xlat
aas
cmpsl
das
mov
xchg
xchg
jmp
ja
inc
iret
push
mov
pop
pop
jg
outsl
negl
dec
sarl
cmpsl
sub
lret
arpl
jae
inc
iret
push
mov
pop
and
pop
cmc
dec
mov
loopne
lock
fstpl
dec
mov
les
loopne,pt
sub
fimuls
cmp
or
outsb
fstpl
dec
mov
push
lea
insl
out
jae
dec
into
cmp
sahf
or
outsb
pop
pop
or
ds
mov
jne
jge
add
cmp
stc
push
jle
mov
ss
sub
sbb
mov
sti
push
shl
sub
inc
lret
in
ds
stos
mov
or
mov
stos
mov
sahf
sbb
jle
arpl
xor
dec
xor
in
mov
cmp
xchg
scas
out
sbb
mov
jbe
sbb
lock
pop
mov
mov
das
push
or
and
or
cmpsl
fnstenv
mov
and
into
in
sub
jo
sti
in
jecxz
dec
push
out
push
je
test
xchg
mov
mov
sahf
sbb
outsb
fstpl
dec
mov
push
xor
out
test
push
into
pop
mov
imul
cltd
pop
mov
inc
mov
pop
sbb
sub
or
std
inc
lret
imul
or
push
int3
inc
mov
xchg
cmp
dec
scas
push
cmp
lods
sub
sub
adc
push
jge
insl
out
pop
fimuls
cmp
sahf
or
outsb
fstpl
dec
mov
push
lea
jge
insl
out
pop
fimuls
cmp
sahf
or
push
jne
xchg
mov
dec
int3
pop
push
and
xor
pusha
testl
pop
jno
ds
pop
insb
xor
push
sub
std
inc
xchg
test
movsl
dec
adcl
mov
cmp
dec
aad
xorb
push
xchg
xor
pop
pushl
inc
push
ds
inc
inc
call
mov
push
and
popf
arpl
in
or
rcl
lods
push
aas
bound
out
push
test
test
or
xor
jle
sbb
and
mov
nop
pop
sbb
addl
cmc
out
lcall
cmp
pop
pop
subl
adc
aam
pop
dec
add
cmp
inc
frstor
mov
fildll
push
mov
ds
push
scas
or
decl
cmp
jmp
icebp
mov
cmpl
cli
inc
nop
pop
loop
daa
pushf
sbb
mov
adc
mov
push
into
pop
jg
cmp
jle
notl
mov
mov
nop
cmp
mov
xlat
or
mov
out
lahf
hlt
imull
sbb
inc
aaa
syscall
mov
sub
adc
adc
das
sub
aad
push
out
cmp
nop
aas
pop
cld
int
test
cmp
jl
insb
mov
mov
dec
add
bound
stos
aas
and
and
test
lahf
insb
in
rorb
mov
mov
jg
xchg
jecxz
hlt
xchg
push
pop
dec
ds
in
jbe
sub
lret
shll
add
mov
sub
dec
fstpt
movsl
fcom
or
push
adc
cwtl
mov
mov
je
out
xor
xchg
scas
rclb
or
mov
xchg
mov
mov
sbb
add
xchg
mov
lds
add
push
add
in
mov
imul
or
popa
insb
inc
xor
andb
adc
imul
test
ss
testl
and
popa
cmpsl
inc
ret
mov
mov
xor
adc
mulb
sub
push
rolb
add
xchg
stos
hlt
cmpsl
mov
into
push
inc
lret
jl
pop
xor
jp
sub
aas
out
loopne,pt
in
out
arpl
pop
mov
adcb
stos
repnz
or
xchg
inc
sti
lea
data16
push
adc
xlat
sti
in
jbe
adc
scas
mov
ljmp
inc
test
push
ret
fsub
mov
jge
sub
push
inc
rcr
push
inc
outsl
adc
into
pop
imul
fdivrl
pop
out
imul
jno
mov
xor
inc
add
dec
popf
cltd
mov
jns
fcoml
out
push
cld
ja
dec
lock
test
mov
popa
cmpl
mov
jle
jmp
lods
hlt
loopne
xchg
jne
ds
mov
aad
cmp
cmpsl
dec
xor
dec
sbb
add
inc
mov
fdiv
mov
inc
and
arpl
pushf
push
push
jmp
jl
int3
jo
sarb
jbe
in
sub
add
enter
out
stos
mov
jmp
or
push
pop
shlb
add
pop
addr16
rcrl
sbb
pop
scas
movsl
dec
mov
mov
cmpsl
dec
push
mov
push
rcrb
mov
dec
push
pop
and
add
lcall
cmp
ljmp
adc
jnp
movsb
push
aam
xor
stos
sbbb
rolb
out
pop
push
mov
mov
scas
sbb
push
lock
testb
mov
push
adc
xor
loope
shll
in
std
and
push
sub
es
cmp
pop
jle
pushf
pop
ja
rcrl
xchg
xchg
mov
rorb
xor
jmp
arpl
ja
push
pop
adc
mov
int3
sti
pop
sbb
xlat
bound
adc
loopne
dec
leave
call
sbb
testb
jmp
cs
ret
ja
popa
jmp
mov
jb
outsb
int
enter
cmpsb
into
mov
fdivr
lock
aam
lods
test
jmp
fisubs
add
cmpsl
outsl
inc
mov
das
lahf
pop
movsb
in
outsb
inc
jo
pop
cli
std
xlat
push
ja
rcrb
mov
or
outsl
or
hlt
ja
lahf
dec
jae
dec
add
pop
adc
cmc
sti
push
loop,pn
adc
not
pusha
inc
push
gs
jne
push
pop
jae
int3
int
lcall
cmp
loop
mov
icebp
daa
sbb
lock
pop
dec
xchg
add
and
in
mov
mov
and
insb
dec
push
cmp
jns
jp
inc
jns
repz
mov
xlat
xor
loop
pop
push
loop
mov
lea
jge
call
dec
sbb
push
pop
cmc
mov
jl
lock
and
insb
mov
jns
divl
xlat
adc
icebp
test
lock
xchg
mov
jo
lea
inc
pusha
mov
or
fwait
out
data16
mov
push
jmp
and
xchg
shll
push
leave
popa
dec
or
test
aas
in
loop
repz
loop
hlt
cmp
xorb
je
inc
sub
or
adc
data16
jg
sub
cs
movsl
mov
pop
data16
rcrb
cmp
cmp
jns
je
cli
clc
jl
sub
in
inc
mov
cmp
sub
out
push
xchg
jmp
pop
mov
or
xor
ror
ficoml
and
fildl
enter
fcmovnu
push
jae
mov
add
adc
es
push
outsl
sbb
lcall
push
mov
pop
xlat
and
scas
test
xor
dec
xor
in
in
cmpsb
xor
sub
jnp
rorl
scas
push
leave
popa
push
cmp
adc
lahf
in
mov
or
add
mov
and
jbe
lods
and
dec
aam
fcompl
add
sahf
pop
std
inc
lods
dec
pop
js
ficoml
in
mov
clc
test
ljmp
aaa
popa
xchg
orb
hlt
pushw
jle
push
lock
mov
fwait
insb
sti
cmpsb
repnz
xchg
jg
dec
adc
loope
cwtl
lcall
xchg
test
ss
cmpsl
mov
in
cli
add
cwtl
insl
xchg
pop
cmp
cmp
adc
stc
mov
jle
cld
sub
daa
add
push
adc
lods
test
mov
subb
popf
scas
addl
fsubl
jle
pop
fists
fldcw
aas
mov
fdivrs
xor
pushf
sti
mov
xlat
pop
push
jmp
inc
daa
sti
and
dec
jge
xchg
pusha
jo
enter
test
jae
pop
sbb
subb
xor
rcll
fadds
adc
inc
cmpsb
int3
jno
pop
mov
fs
dec
push
arpl
cmp
pusha
xor
jo
icebp
sbb
mov
leave
mov
test
mov
or
sbb
das
fimull
add
jmp
hlt
shlb
mov
scas
orb
jp
xor
mov
out
fisttpll
xchg
or
imul
dec
negl
fcompl
out
jle
ljmp
push
jmp
push
rorb
out
fwait
aad
sbb
sub
adc
mov
loope
cmp
sub
adc
xor
nop
cmp
xor
iret
cmp
jge
jle
aas
xor
push
push
jge
cld
sub
into
push
test
xor
cs
and
sbb
mov
mov
fmuls
ret
dec
jg
adc
cmp
test
insb
sarl
addr16
lock
dec
mov
loopne
mov
mov
xor
sbb
in
xchg
sahf
out
outsl
pop
sbb
sub
xchg
push
sar
xchg
cmp
xchg
xor
and
ds
test
es
sahf
and
inc
repnz
add
xchg
jecxz
and
repnz
filds
pushf
test
ss
and
inc
push
pop
loopne
jge
and
jmp
jge
gs
shll
enter
push
dec
mov
lcall
jno
outsb
xchg
dec
mov
mov
icebp
mov
push
addr16
negl
xchg
mov
cltd
pop
popa
jmp
xchg
inc
jmp
mov
lds
xor
push
stc
mov
lcall
add
mov
mov
mov
in
stos
add
xor
loope
or
jmp
das
cltd
ja
inc
sarb
inc
cli
lds
shl
dec
daa
cmp
pop
jb
lea
push
mov
xchg
cwtl
lret
pop
sahf
inc
or
push
out
bound
xchg
and
fcoml
aaa
ljmpw
outsl
cmpb
jecxz
and
test
shlb
inc
sub
stos
aaa
or
scas
xchg
push
pop
pop
jns
pop
out
xchg
call
mov
shrl
ja
jmp
insl
stos
test
dec
adc
popl
aad
test
push
movsl
sub
int3
and
jp
mov
pop
sub
rclb
inc
and
out
cmp
push
fdivl
scas
and
pop
xor
imul
cld
shll
test
hlt
mov
fcoms
jp
cmpsb
std
in
out
cld
cmpsl
inc
sbb
aam
inc
mov
dec
push
jle
lcall
dec
std
pop
imul
lods
in
cmp
imul
mov
inc
add
sbb
sbb
inc
fmull
stc
imul
out
scas
mov
push
adc
or
aaa
cmpsl
add
stc
mov
fcmovnb
mov
jl
dec
pop
dec
das
mov
mov
mov
xor
scas
es
ret
pop
cmp
mov
aas
pop
pusha
dec
pop
in
fcmovne
js
inc
mul
or
es
in
fldcw
out
jmp
test
iret
mov
mov
shr
sbb
lock
mov
jb
js
and
lods
scas
pusha
fcmovne
push
adc
sbb
push
repz
dec
aad
pushf
adc
fninit
es
inc
test
out
dec
xor
pop
pop
pop
fsubs
inc
jle
das
filds
sub
push
add
mov
cltd
or
sbb
jmp
push
pop
and
sub
mov
xor
nop
push
xor
std
pop
rclb
mov
lret
div
mov
xor
mov
pop
or
aad
mov
insl
addl
fcomps
hlt
add
ret
sti
xor
push
loopne
and
sub
dec
imul
clc
pop
pop
jle
aad
lret
jle
fwait
mov
or
lcall
cmpsb
outsl
cmp
and
pop
xor
xchg
cld
fistpll
dec
fstpt
frstor
sub
push
fldt
xchg
pop
lcall
shl
pop
jae
xchg
sbb
out
dec
mov
movsb
xlat
jmp
call
ret
or
int
pop
arpl
adcl
sbb
mov
lods
lods
arpl
or
out
jo
fwait
mov
je
pop
push
add
xor
xchg
movsb
cmpxchg
insb
jmp
fstpl
rcrl
sub
hlt
push
stc
loopne
dec
cmp
pop
push
movsl
loope
sbbl
xchg
jecxz
inc
ds
mov
xor
orl
inc
fisttps
lods
jmp
pop
mov
in
andb
pop
and
sbb
fwait
aad
movsl
repz
shr
xchg
cld
pop
test
dec
mov
orb
inc
call
sub
jl
icebp
inc
lahf
imul
add
cmp
dec
pop
lahf
dec
enter
mov
inc
push
mov
popa
aaa
pop
pusha
outsl
fwait
mov
fwait
cmp
add
push
pop
pop
pop
daa
jo
out
mov
scas
jmp
pushf
mov
sbb
das
adc
in
jg
gs
cli
and
sub
out
add
push
stc
cmp
mov
dec
xor
cmp
scas
pushf
cmpsl
insb
repnz
pop
xor
jae
xor
gs
arpl
call
cmp
mov
hlt
and
push
ret
jle
fidivs
mov
adc
leave
sarb
push
push
in
outsb
inc
imul
mov
pop
pop
aaa
and
jp
mov
or
pop
dec
and
loopne
fbstp
mov
xor
or
add
mov
out
stc
jne
inc
jg
leave
movsl
push
jne
push
insb
inc
cltd
pop
into
xor
pop
out
movsb
gs
cwtl
pop
push
pop
in
aad
adc
and
pop
sub
cmp
leave
in
cltd
mov
pop
data16
sub
out
loope
sahf
outsb
dec
inc
xlat
scas
cli
enter
lods
pop
sbb
inc
cmp
pop
sbb
push
ds
cwtl
sub
loop
lods
ss
cmp
dec
movsb
iret
clc
ds
pop
xor
push
jmp
popf
xor
je
int
xor
mov
sarb
sub
mov
xchg
pop
xchg
and
mov
leave
push
in
ret
xor
cmpsb
and
pop
jmp
cmpsl
jo
and
mov
data16
mov
cmp
pushl
stc
dec
sbb
pusha
insb
je
icebp
xor
outsb
sbb
push
out
call
pushf
ret
ret
cmp
lock
gs
push
out
lods
mov
in
push
pop
mov
mov
sar
dec
cvtpi2ps
mov
jno
ja
mov
shl
mov
pop
mov
outsl
mov
jae
push
cmpsb
insb
outsl
cld
xor
mov
cmp
gs
orl
lahf
mov
and
jmp
aas
cmp
mov
pop
xchg
pop
leave
sbb
and
les
xorl
mov
fs
xchg
stos
data16
shlb
jl
xor
mov
imul
out
mov
out
adc
push
fcomip
xchg
mul
jl
xchg
das
lcall
push
cs
mov
daa
out
xchg
dec
pop
mov
inc
ss
inc
ret
and
jecxz
pop
push
dec
test
or
sub
mov
in
dec
fld
bound
jo
hlt
cltd
mov
push
popf
push
iret
or
mov
push
dec
cmpsb
xor
stos
sub
movsl
repnz
push
add
call
cli
stos
out
mov
add
lcall
xchg
into
inc
jmp
dec
ja
insl
sbb
sub
out
pushf
inc
sbb
dec
out
pop
xchg
cmp
dec
push
pop
or
fistl
ja
adc
or
sub
cltd
push
pop
jmp
mov
fwait
cmpsl
sti
cmp
pushf
int
hlt
test
and
clc
roll
add
loopne
mov
ret
jmp
divl
jo
adc
xor
sub
pop
mov
insl
lea
add
mov
inc
mov
add
ja
in
cmp
shlb
pop
stos
sbb
gs
or
bound
imul
out
cmp
and
adc
int
aam
mov
pushf
sbb
aaa
cld
sub
insl
inc
popf
adc
shll
mov
dec
sub
inc
movsl
push
push
lret
lahf
dec
push
iret
frstor
jl
outsb
lea
pop
and
inc
xchg
ficoms
inc
cmp
mov
fwait
or
inc
inc
sti
push
mov
inc
call
cmp
dec
ret
test
adc
jne
dec
ror
mov
sub
sarl
push
push
int3
je
inc
jp
or
inc
mov
mov
push
shll
mov
sbb
pushf
pop
push
jecxz
fsubrs
and
sub
test
fbstp
pop
jne
pop
sti
rorb
mov
push
sub
pushf
push
xor
xchg
cmpsl
or
jo
inc
orl
mov
sub
in
shrl
cmp
add
fs
cmp
call
insb
cmpl
repnz
push
sti
cmp
sti
push
sub
testb
lret
bswap
fildll
out
push
add
js
dec
mov
or
mov
xchg
jbe
push
or
fdivr
push
add
rcrl
lock
dec
adc
inc
daa
repz
cmpsb
pop
or
mov
movsb
arpl
rol
imull
push
xor
test
jb
jae
adc
and
jne
inc
imul
sbb
inc
xor
inc
xor
push
cwtl
gs
jmp
stc
inc
pop
or
test
sub
popa
inc
mov
xchg
leave
xchg
in
ret
out
mov
lcall
out
mov
xor
aaa
je
pop
push
jns
cltd
rol
and
xchg
shrb
lds
stos
mov
cmpsb
in
lea
push
cs
fs
jae
fwait
test
jp
adc
pop
fs
mov
sbb
stos
sahf
mov
sbbb
sub
mov
lea
pop
dec
andb
lods
add
and
pop
mov
push
and
push
xchg
sbb
inc
sbb
cmp
fs
cltd
subl
push
dec
ss
cli
jnp
add
mov
cmc
push
mov
subl
push
rorb
loopne
cmp
jbe
stos
inc
xor
fists
cmpsb
dec
push
sti
push
aaa
push
into
fldt
add
push
por
int3
flds
push
inc
add
push
cmpsl
fdivl
cmp
cli
int3
dec
outsl
js
jp
dec
test
inc
sbb
std
fwait
sbb
dec
nop
lea
in
aad
leave
scas
mov
and
xchg
sbb
in
test
sbb
xchg
xor
iret
loop
pop
lods
jl
xchg
push
insb
mov
in
mov
roll
xchg
xor
jge
mov
cmp
out
add
enter
lock
lods
enter
lcall
sbb
nop
jmp
repz
cmpsl
sbb
jo
dec
int
testb
push
sub
lahf
out
dec
pop
push
sbb
cmp
shll
jg
lock
inc
sarl
insb
sub
xlat
fstl
inc
stc
ret
std
cmp
pushf
mov
xrelease
vmovss
adc
jae
xchg
into
mov
xchg
les
roll
mov
jbe
lods
int
fisttps
inc
hlt
mov
and
sahf
dec
xor
pop
push
push
pop
je
pop
xchg
lcall
mov
jo
adc
jl
insl
sar
enter
xor
out
sub
inc
lods
cwtl
lahf
mov
test
xchg
movl
iret
adc
lea
mov
push
andb
lahf
imul
jle
sub
imul
cmpsl
psubusb
jle
mov
outsb
mov
pop
pop
ja
jnp
mov
loope
mov
subb
xchg
pop
cwtl
mov
and
jle
lds
dec
mov
and
push
mov
ret
aad
outsl
mov
sti
jg
add
fwait
into
pop
xchg
fcmovbe
or
rorl
lods
gs
sub
mul
xor
fimuls
and
sarb
xchg
inc
cmp
outsb
or
push
inc
scas
dec
mov
mov
mov
aad
call
pop
pushf
rorb
test
pop
mov
jle
cld
rolb
in
sub
mov
xchg
xchg
movsl
lea
jmp
xlat
pop
push
and
xor
dec
mov
sub
daa
mov
jb
xor
jno
es
push
inc
mov
subl
movsl
mov
jne
push
cld
mov
sarb
xchg
sbb
scas
cs
es
je
lret
jnp
aam
fldcw
cmp
lock
and
idiv
cltd
movsl
orb
lcall
cs
imul
rorl
dec
jmp
or
and
mov
or
or
inc
add
test
mov
sbb
mov
mov
or
jb
push
lods
push
jns
push
push
arpl
xchg
jg
add
xor
imul
inc
pop
mov
jb
sti
imulb
leave
divb
pushf
push
aad
adc
xor
push
imul
popl
xchg
ret
add
scas
idivb
popa
lahf
inc
sbb
pushf
cmc
lret
rcl
jle
loopne
adc
lock
inc
pushf
mov
push
and
sahf
and
sbb
lods
push
cmp
outsb
test
cmpsb
lock
push
fs
add
mov
push
repnz
bound
into
jns
icebp
shll
or
mov
jecxz
adc
and
jecxz
daa
or
inc
decb
mov
sub
pcmpeqd
shrb
pop
jae
jbe
xor
inc
push
inc
add
sti
je
xor
jle
pop
pop
jno
jg
test
add
fsts
push
mov
add
xchg
adc
xor
or
aam
cs
dec
or
pop
imul
mov
dec
mov
push
lea
jge
insl
out
pop
fimuls
cmp
sahf
or
outsb
fstpl
dec
mov
push
lea
jge
insl
out
pop
fimuls
cmp
sahf
or
outsb
int
int
mov
push
mov
jns
insl
out
push
fimuls
cmp
sahf
cmp
outsb
push
pop
in
mov
push
or
inc
neg
dec
mov
loop
bnd
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
insl
sahf
in
jno
inc
int
pop
in
lea
inc
jmp
icebp
pop
rorl
mov
or
jno
inc
int
mov
add
sarl
dec
sarl
rorl
fucomp
int
mov
out
lea
jge
insl
xchg
cmp
sub
cmp
popa
in
pop
xchg
xor
add
push
lea
cld
loop
dec
push
add
xor
cmp
les
pusha
test
mov
mov
inc
clc
push
or
xchg
mov
shlb
sbb
pusha
in
je
pop
lods
jg
jb
or
cmpsl
clc
lcall
mov
addl
cmpl
push
and
mov
cli
out
insl
push
stos
mov
frstor
pop
ret
adc
push
add
lea
adc
push
dec
shrl
inc
mov
nop
repnz
add
push
dec
imul
mov
inc
dec
in
and
cltd
sub
ror
mov
or
mov
vcvtps2dq
fisttpl
aaa
pop
rorl
cmp
orl
jg
push
enter
call
mov
mov
mov
jo
jns
mov
and
add
test
cmpsl
and
icebp
pop
std
dec
loopne
cli
mov
ret
ss
inc
lods
xor
loope
icebp
pop
rorl
mov
or
jno
inc
int
mov
add
icebp
pop
rorl
mov
or
cmpsb
push
loop
jge
mov
bound
in
push
cmpsl
mov
in
push
jl
std
pop
dec
setb
std
ljmp
jo
push
das
popf
mov
mov
xchg
std
out
out
push
out
mov
loope
sub
push
mov
rsm
enter
jg
jge
cltd
push
push
int3
inc
ficompl
repnz
in
jns
pushaw
xchg
incl
xchg
push
sub
lret
add
repnz
cmpb
and
inc
inc
pop
xorl
es
sbb
mov
aaa
pop
mov
arpl
lcall
imul
addr16
notb
inc
sbb
mov
pushf
leave
xlat
pop
push
jno
rolb
pop
jb
int
mov
pusha
sti
lds
push
lods
xchg
test
fnstenv
rolb
push
outsb
addr16
test
pop
pusha
sub
les
lds
data16
cmpsb
outsb
inc
dec
xchg
scas
es
xchg
jae
stos
xchg
fcmove
pop
pop
jp
sahf
ret
mov
hlt
adc
lret
insl
sbb
int
shll
add
jecxz
mov
push
popa
rol
adc
mov
sub
jecxz
lods
es
and
rep
imul
ret
imul
jb
adc
pop
jb
stos
icebp
cmpsl
nop
ds
cld
xchg
fwait
lds
mov
mov
dec
scas
jb
cli
sub
sbb
xchg
stos
sub
xchg
test
movsl
mov
or
subl
mov
cwtl
cwtl
jae
dec
cltd
cmc
sbb
out
jmp
sbb
lcall
imul
dec
adc
mov
pop
loop
pushaw
mov
icebp
fcomps
mov
push
loope
mov
and
fstpt
mov
pop
push
idivl
das
in
stos
imul
push
inc
sbb
fldcw
cld
or
xchg
aam
stos
addl
insl
sbb
and
pop
movb
push
repnz
mov
lcall
aas
idivb
mov
sub
idivb
jge
repz
in
sub
ret
mov
xchg
mov
sub
lret
sbb
pop
or
mov
stos
test
stos
mov
dec
mov
orl
test
jge
and
fidivl
lods
scas
lret
pop
pop
test
std
aas
push
addr16
clc
jg,pn
xchg
dec
ljmp
bound
xor
sbb
cmp
inc
adc
jp
std
movsb
test
inc
cmp
push
add
lods
and
iret
adc
jbe
das
jle
cs
or
daa
lods
mov
icebp
xchg
adc
fwait
cmp
test
aam
mov
cs
add
std
or
xor
inc
lahf
or
mov
or
and
sub
clc
add
ss
xchg
inc
dec
rcrl
push
jl
jge
les
aas
xor
adc
jbe
mov
jecxz
lods
dec
and
cmpsl
imul
mov
dec
nop
mov
adc
ja
ret
leave
cmp
sub
or
xchg
cmp
aad
jne
mov
imul
scas
cmp
sbb
cli
mov
and
xlat
nop
add
adc
cwtl
pop
stc
leave
lahf
xchg
cmp
sbb
call
test
adc
mov
aaa
int3
aas
pushf
mov
iret
mov
addr16
or
fisttps
scas
mov
icebp
stc
mov
stos
ljmp
dec
aad
or
sbb
inc
sarl
and
shrl
adc
xor
push
notl
sbb
xchg
push
dec
aad
xchg
jl
add
xor
loope
push
out
lret
cli
mov
hlt
and
sub
ja
scas
dec
neg
cmc
fldcw
inc
adc
out
int3
jns
pop
ss
orl
sbb
mov
inc
fucom
and
fwait
cmovo
push
and
push
mov
cmp
int3
in
or
or
fbld
lods
jp
sub
xchg
push
mov
loope
mov
inc
pop
push
mov
sub
sub
and
bound
adc
fwait
inc
dec
cmp
sbb
call
lcall
sarb
pusha
push
sub
andl
and
adc
test
mov
test
and
pushf
cmp
mov
mov
pop
js
and
push
mov
imul
aam
mov
sti
dec
sbb
jae
cmpsl
rcr
imul
sub
sarl
mov
ja
sahf
cmp
pusha
mov
ljmp
xor
inc
mov
mov
sbb
gs
rclb
dec
xor
leave
lds
or
mov
adc
xchg
mov
mov
dec
sbb
mov
dec
jnp
adc
lret
inc
iret
mov
mov
ljmp
bound
push
movsl
rcr
icebp
xchg
sbb
rcll
test
and
xor
addr16
sub
or
adc
aaa
jae
dec
fdivrs
pop
push
cmp
xor
sbb
into
lcall
fistl
fs
fcoml
ljmp
xchg
add
es
test
ret
es
push
ret
out
and
push
push
pop
push
jp
push
notb
out
mov
inc
mov
xchg
dec
lahf
jg
iret
xchg
lcall
repz
insl
repnz
into
lock
push
mov
push
rep
sbb
nop
cmp
and
mov
cmp
cltd
cmpsl
stc
popf
pop
add
test
and
mov
or
jbe
jnp
push
mov
test
add
jns
sub
inc
outsb
loop
insl
cmp
xchg
out
mov
cltd
add
int
xlat
mov
cmp
pop
add
add
or
jmp
or
gs
lret
mov
daa
sub
test
jns
xor
xchg
mov
lods
icebp
lret
xor
push
push
repz
je
stos
jnp
mov
shl
scas
push
mov
sub
lods
sbb
jne
sti
cmc
mov
fdivs
mov
and
imul
xor
scas
xor
testl
addl
test
imul
inc
jno
mov
xchg
dec
incl
mov
arpl
and
ret
adc
inc
cmp
iret
iret
dec
mov
push
mov
dec
arpl
sub
adc
xor
clc
movsb
push
cltd
addr16
xchg
push
cwtl
mov
mov
jl
mov
aaa
xor
outsl
xor
sub
fbld
xor
mov
subb
adc
jne
ljmp
loope
jb
inc
idiv
pop
pusha
rcrl
test
daa
pop
std
dec
cld
add
inc
xchg
push
sub
jl
addr16
mov
push
cmp
push
push
mov
test
imul
dec
xlat
dec
ficoml
aas
popf
and
push
push
sbb
lcall
fs
xchg
push
xchg
add
test
shl
ja
dec
scas
push
fnstsw
loopne
mov
data16
fbld
lods
and
lods
xchg
jnp
and
mov
push
test
sub
add
aaa
stc
pop
adc
iret
or
notb
sbb
lock
lretw
adc
arpl
add
mov
popf
scas
int3
sbb
rclb
lret
sbb
push
jnp
sbb
adc
rorb
addr16
ret
xor
sub
dec
xlat
test
push
jl
lret
bound
jecxz
adc
int3
sbb
mov
jno
out
dec
xchg
pop
mov
xor
add
push
jp
mov
mov
movsl
and
daa
jnp
aas
lcall
negl
cli
jmp
scas
mov
pop
sbb
xor
leave
xchg
sub
loope
frstor
inc
je
mov
adc
ja
sub
shrb
ds
ja
pop
or
rolb
in
dec
inc
out
arpl
xor
sub
pop
mov
pop
dec
adc
mov
sub
bnd
inc
and
mov
shll
test
jne
lcall
std
repnz
jns
dec
adc
pop
sbb
sub
xor
cmp
test
mov
xchg
mov
jb
xchg
lods
lret
stos
je
adc
add
cmp
mov
mov
mov
neg
test
cmp
aad
outsb
outsl
lods
jecxz
sbbb
lock
int
movsl
shlb
sbb
aam
imulb
xchg
int
lock
sub
lods
jl
int3
or
sbb
sub
scas
or
or
push
inc
xor
inc
push
mov
adc
mov
and
nop
cmc
push
pop
icebp
stos
enter
push
sbb
ficomps
push
ja
iret
push
nop
add
iret
je
xor
lret
popf
mov
dec
sbbl
jns
fcmovnb
setb
push
mov
sbb
sub
stos
jnp
jg
popa
idivb
adc
pusha
dec
xchg
stos
ja
sbb
add
js
lret
sub
or
orl
dec
movsl
dec
addr16
xor
jg
and
jmp
cli
aaa
push
outsb
push
mov
out
clc
cmc
xchg
bound
push
jae
pmaxsw
xor
imul
xor
adc
mov
mov
data16
movsl
jb
dec
ffree
in
jg
xchg
sub
mov
mul
xor
xchg
xchg
das
push
inc
icebp
cmp
jg
jae
mov
pop
cmp
jecxz
mov
int3
std
out
loope
adc
adc
ds
xor
scas
out
test
and
ljmp
lfs
adc
adc
and
jle
shrb
add
or
inc
jg
jge
mov
jb
push
jno
mov
mov
push
mov
push
movsl
lods
pop
out
jle
enter
and
mov
fstps
cmp
stc
mov
push
outsb
push
lret
rcrl
out
dec
pop
xchg
dec
icebp
pop
xchg
push
nop
das
sub
js
fwait
cmpsl
call
fwait
lock
movsb
mov
push
imul
call
daa
mov
pop
xor
loope
mov
movsb
outsb
test
push
pusha
sub
pop
and
inc
pop
in
notl
and
imul
les
sub
in
push
into
cmp
popf
xorb
sbb
adc
hlt
mov
fcompl
addb
xchg
and
mov
gs
mov
mov
out
aaa
add
aaa
pop
cs
mov
jbe
scas
mov
rclb
inc
cmp
into
mulb
dec
aam
or
aad
mov
lock
out
xchg
andb
cltd
cmp
mov
mov
sbb
dec
mov
js
sub
push
pop
aam
test
vrcpps
mov
lods
xor
mov
sub
xrelease
clc
test
js
xor
pushf
je
mov
xchg
jno
jp
dec
popf
clc
fsubs
cmp
mov
push
scas
sub
shrb
jecxz
sbb
shll
lret
stc
pop
loope
fistps
xor
aad
call
add
std
mov
push
lods
mov
cmpsb
arpl
adcl
sub
pop
imul
fwait
dec
insl
in
inc
les
push
mov
leave
xor
pop
add
stos
ret
push
ret
ds
lcall
out
xchg
xchg
stos
mov
lret
mov
push
in
dec
sti
sbb
in
repnz
test
aas
cli
testb
xchg
or
xchg
and
scas
test
ret
aas
in
arpl
xchg
and
test
sub
mov
xlat
lods
jl
sub
push
push
mov
adc
dec
mov
icebp
mov
pop
sbb
repz
sub
adc
fcmove
and
rcl
lods
jne
pop
xchg
adc
mov
jmp
stos
and
dec
imul
ror
or
lcall
pop
stos
mov
cmpsb
pop
ficoms
stos
push
or
iret
dec
shl
adc
stos
mov
mov
and
mov
mov
aam
aad
push
sub
cltd
push
xchg
xor
rcr
add
xor
mull
test
aaa
sub
adc
dec
or
rolb
add
jle
loop
stos
adc
xchg
add
adcl
dec
jns
push
aas
call
inc
inc
aad
stos
test
lcall
movsl
sbb
sbb
mov
push
inc
call
fcomip
pop
nop
jp
stos
sub
ret
loop
adc
push
fstl
mov
cld
dec
inc
and
cmc
dec
or
popf
das
jne
mov
jl
and
fisubrl
cs
xor
rclb
add
add
movsl
test
shrb
jbe
out
out
ds
pop
lea
rol
add
outsl
pop
aas
aam
sub
mov
cmc
sbb
mov
fstpl
jns
and
jg
call
rorl
loope
jns
and
jg
fdivrs
stos
fdivr
int
dec
mov
xor
aaa
xor
call
inc
mov
nop
rcr
mov
push
out
test
cltd
pop
ja
xor
imul
adcl
divl
pop
and
insl
mov
ds
es
shlb
subl
std
mov
aam
fwait
in
scas
aaa
orl
add
pushf
lahf
sub
push
mov
popa
out
movsl
sti
mov
pop
fwait
push
mov
pop
repz
dec
add
jne
or
add
cmp
out
xor
mov
xor
test
inc
ficompl
stc
pop
imul
movsl
mov
outsl
dec
dec
jno
int
std
addr16
pusha
std
dec
lea
hlt
mov
loope
sub
dec
into
addr16
sub
popl
pop
ss
jmp
pop
jmp
stos
ds
mov
sub
dec
loope
sub
push
cmp
push
push
pop
sub
inc
cs
cmp
mov
scas
andl
jbe
les
push
das
shrb
mov
jb
test
cli
mov
ficoms
repz
mov
sbb
fisttps
add
mov
jp
pusha
aaa
pop
and
pop
repnz
mov
xchg
jmp
ret
in
call
xchg
data16
sahf
sub
cmc
sbb
sarl
insb
and
movsb
sar
rol
clc
icebp
dec
jne
cmp
outsl
or
push
in
pop
outsl
cli
ja
cmp
das
push
or
clc
cmpsb
sti
add
mov
dec
fwait
jb
rorb
shr
jnp
enter
daa
popf
ss
jle
sti
stos
mov
lahf
pop
das
pop
xor
mov
ret
int3
out
jg
data16
out
addb
ret
adc
sahf
ss
jno
fldcw
jae
mov
jmp
loop
in
jo
cwtl
dec
fdivrl
and
int3
fwait
shll
fs
repnz
int
xor
mov
mov
dec
push
adc
add
sub
mov
xorl
in
cltd
sti
andb
jbe
push
add
cwtl
lds
add
shlb
dec
inc
in
stos
mov
fidivs
xlat
jecxz
pushf
sarl
rolb
jo
ljmp
movsl
je
mov
rcr
add
xchg
mov
jbe
rorb
xor
sbb
je
sbb
xor
cmpl
adc
es
xchg
ds
or
fwait
leave
adc
pop
pushf
mov
orl
xchg
pop
xadd
push
lock
inc
push
pushf
push
pop
dec
jge
dec
sub
enter
or
loopne
stos
loop
iret
fwait
mov
dec
xlat
popa
xchg
xchg
dec
lds
int
sti
sub
xchg
pop
xor
sbb
call
sbb
lock
mov
xor
sbb
mov
es
dec
inc
ljmp
cld
mov
popa
xchg
cld
pop
push
mov
pop
lret
inc
xchg
dec
hlt
xor
bound
xchg
in
mov
mov
sahf
cwtl
test
push
or
loope
insb
jg
shrb
or
jne
ljmp
cltd
nop
pusha
jae
xchg
cli
addb
xchg
cmp
jo
das
xchg
negl
mov
popf
cmp
push
dec
mov
push
outsl
jno
rcrb
pop
das
aam
xchg
jmp
and
mov
push
cmp
inc
pop
adc
sub
int3
gs
or
adc
push
nop
sarl
loop
inc
test
mov
mov
inc
mov
push
push
push
jo
ds
cmc
div
mov
inc
cmpsb
and
lea
cmp
mov
jl
int3
mov
mov
sbb
adc
rcll
push
outsb
lds
inc
and
mov
mov
mov
ss
mov
jne
push
mov
mov
lcall
outsl
sub
loope
mov
dec
dec
jmp
adc
clc
inc
mov
fadds
sub
mov
sub
add
jp
shrb
pop
mov
push
push
sbb
pusha
mov
fstl
lcall
push
je
mov
push
cmp
lock
dec
outsl
lock
cld
cmpsl
cmp
clc
enter
mov
and
sbb
mov
pop
push
nop
lea
push
mov
cld
dec
and
test
and
movsl
dec
leave
jns
sahf
or
ficompl
mov
xchg
and
in
in
pop
xor
int
push
outsl
push
or
inc
popf
aad
mov
into
arpl
mov
add
mov
sub
ja
adc
add
in
add
popa
mov
sbb
jnp
stc
lods
dec
cmpsl
fmull
xchg
mov
insb
divl
xchg
adc
mov
jmp
hlt
mov
sub
sbb
mov
pop
fcom
cmpsb
lahf
cmp
pop
enter
sahf
imul
mov
or
push
xor
cli
fimuls
lds
push
xor
push
movsb
xor
lods
or
int3
jns
jnp
lcall
das
cltd
xor
or
mov
enter
out
xchg
add
in
mov
push
je
cmp
xor
jns
push
mov
sub
imul
ljmp
lret
imull
and
pop
inc
xchg
rorb
dec
and
cs
pop
xorb
mov
repnz
fsubrs
fsubs
test
daa
stos
loop
je
lret
popf
or
push
and
outsb
loop
sub
push
pushf
xchg
sbb
sahf
data16
pop
xchg
mov
dec
cmp
cmp
fisubl
pop
mov
fs
fsub
adc
adc
or
xor
sub
xor
movsl
pop
into
dec
sarb
and
cmp
in
jne
in
pop
rolb
xchg
xor
pushf
jb
es
decb
mov
dec
int3
and
jmp
or
and
push
xchg
icebp
flds
js
jmp
testb
mov
sbb
ds
jns
std
ss
sub
mov
mov
mov
sarb
test
movsl
jno
push
data16
adc
cmp
scas
data16
lods
dec
cmpsl
pop
push
or
mov
icebp
sbb
push
push
lock
mov
test
stc
out
push
pop
sahf
loope
ljmp
mov
mov
push
ret
pop
or
outsl
test
push
sub
sub
pop
ret
test
js
xor
xor
jle
adc
sbb
pop
icebp
mov
test
and
ljmp
dec
mov
mov
daa
shrl
std
hlt
int
shlb
xchg
add
daa
test
out
sub
test
sub
sbb
cmpsb
outsb
xchg
js
out
jecxz
movsb
loope
pop
das
lcall
pop
into
outsb
dec
pop
sbb
fwait
inc
mov
adc
sub
or
dec
pop
sbb
pushf
or
clc
adc
jnp
jge
ja
pop
adc
or
and
rcrl
lds
lcall
test
pop
lcall
lds
lds
and
mov
push
popa
dec
lock
pop
std
dec
xchg
add
sub
pop
jp
test
leave
cmp
add
dec
lea
push
and
cltd
shrb
mov
jle
inc
mov
movsl
pop
test
lods
sub
pop
pop
outsb
mov
push
mov
add
icebp
pop
rorl
mov
or
jno
inc
int
mov
add
icebp
pop
rorl
mov
or
cmp
cmp
push
mov
add
icebp
pop
rorl
mov
or
cld
popa
in
jno
inc
int
mov
orl
cmpsb
dec
sub
outsb
mov
arpl
jb
add
pop
cmp
sub
sbb
or
jnp
imul
dec
mov
inc
stos
push
fwait
arpl
adc
and
sbb
sbb
or
jnp
push
pop
mov
stos
xchg
fwait
stc
mov
fldt
lret
add
ret
or
imul
cmc
sbb
and
iret
pop
lret
xor
push
hlt
or
ljmp
add
mov
loopne
mov
or
push
inc
push
nop
fs
jbe
sti
push
jmp
daa
fsubl
int3
xchg
das
in
hlt
mov
or
sub
or
cmp
subl
xchg
push
or
mov
fdivs
je
inc
mov
mov
pop
adc
and
mov
cli
sbb
repnz
ror
xchg
cs
push
sahf
jbe
add
lret
adc
loop
iret
cmp
and
jmp
dec
xchg
mov
jg
jl
outsb
sub
popa
cltd
lahf
jmp
pushf
dec
dec
fnstcw
stos
jae
pop
mov
add
adc
and
mov
sbb
or
jnp
imul
dec
sbb
bswap
pop
sahf
cmpsb
test
push
dec
je
orb
inc
dec
nop
std
les
cld
xlat
cmp
int
fists
sahf
push
mov
add
dec
cmpsb
data16
ret
mov
push
xchg
xor
and
fdivl
stos
mov
pmaxsw
mov
and
xor
ret
sub
sbb
or
jnp
imul
inc
stos
push
fwait
arpl
adc
and
xor
ret
sub
sbb
or
jnp
imul
inc
lret
push
hlt
popf
sub
lds
pop
adc
sbb
sub
push
and
add
dec
xchg
and
nop
sub
in
pusha
mov
jae
sub
lods
ds
jb
or
xor
addr16
lret
jp
xor
cmp
movb
out
and
jne
inc
fcoml
and
stos
adc
sahf
mov
test
sbb
jbe
and
xchg
int
xlat
rolb
ljmp
xor
or
cmpsl
enter
in
int
push
call
dec
and
movsl
lods
ret
test
cmp
xchg
outsl
add
ja
or
sbb
xor
out
out
rcrl
xchg
popa
adc
sub
add
xchg
fstp
insb
std
mov
adc
dec
dec
inc
jl
je
xchg
xor
dec
sub
stos
and
sbb
add
cmpsb
loop
mov
cmpb
icebp
lret
pop
push
fs
icebp
xchg
inc
jns
jmp
cs
add
and
sbb
fisubrl
fs
jmp
cmp
jnp
mov
sbb
push
addb
imul
xor
repnz
lcall
sbb
subl
cmpsb
idiv
adc
push
jmp
popa
add
add
outsl
push
stos
push
nop
mov
cmpsb
inc
jns
and
out
sub
push
sarl
and
push
pop
fiadds
xchg
and
xor
aaa
out
outsl
sub
pushl
in
fwait
lods
push
cmpl
xchg
rcrb
cmp
push
cmp
jmp
jnp
pop
sub
shl
fs
xchg
test
cwtl
jb
and
loop
cmp
outsl
mov
mov
push
ret
inc
scas
dec
inc
aaa
in
jecxz
ljmp
cmc
adc
nop
push
mov
fildl
push
and
lods
repz
mov
jo
fisttpl
pop
andb
push
and
bound
test
pop
mov
mulb
xlat
and
xchg
xor
lea
sbb
pop
dec
dec
xor
xlat
pop
in
icebp
imul
push
movsl
pop
xchg
xchg
cmp
shrb
cs
sbb
push
out
mov
or
cwtl
xor
mov
cmp
inc
cld
xchg
jg
aas
fsubr
dec
in
jne
and
sub
push
inc
jmp
xchg
or
cmc
inc
sub
mov
jle
loope
sub
lret
push
sarl
cmp
cmp
xchg
insb
xchg
xchg
pushf
lea
in
push
clc
movsl
ror
out
or
outsb
repz
jbe
inc
mov
pop
add
cmp
mov
jp
shlb
push
add
adc
gs
push
push
or
std
pusha
ds
aad
and
test
out
xchg
int
cmp
push
add
adc
cmp
loop
leave
mov
sbb
pop
sti
pusha
xor
or
outsb
sbb
and
fcmovbe
fsts
popa
inc
mov
dec
xchg
xchg
or
je
or
pop
or
mov
setp
pushf
cmp
jb
cmp
jae
stos
ss
imul
out
jne
xchg
push
push
lcall
pop
lret
dec
lock
sahf
lea
xchg
pop
add
loope
fstpl
iret
out
gs
add
sbb
xchg
les
xchg
fwait
cmp
jnp
lock
decb
cld
jmp
dec
lcall
xor
aas
pop
in
xor
add
call
les
adc
jnp
int
sbb
lock
movsl
stc
add
test
mov
mov
scas
cmc
das
xchg
cmp
jg
repnz
mov
inc
add
sub
push
inc
adc
fbstp
ret
sub
push
cmp
shlb
dec
and
test
jl
out
stos
scas
push
fistl
xor
push
mov
bound
aas
jmp
and
rcrl
xor
cmpl
xchg
fwait
mov
out
push
stos
rcll
out
cmp
into
fisubrl
popf
lret
push
jl
outsb
and
mov
fistps
mov
jno
testb
xchg
into
dec
mov
sbb
imul
and
dec
xor
pop
pop
test
add
fldcw
shll
push
dec
movsl
inc
mov
or
leave
mov
cmp
sbb
and
pop
pusha
scas
sub
sarl
mov
adc
xchg
xchg
fnstenv
aam
or
mov
xor
pop
xor
insl
ja
jns
inc
nop
lods
sub
pop
lods
daa
cmp
jo
sbb
xchg
push
stos
mov
test
sti
dec
je
lock
dec
push
push
dec
icebp
and
outsl
push
stos
fs
jae
mov
scas
push
mov
pop
sbbl
enter
sbb
jnp
push
mov
mov
sti
add
push
fstpt
adc
fcoms
mov
fwait
and
mov
mov
lock
ret
shrl
dec
repnz
pop
dec
cld
and
into
pop
aas
outsb
jl
movsl
rcll
out
int3
lea
insb
daa
popf
out
lret
fstpl
xor
jnp
arpl
testb
jo
cmp
mov
scas
test
sbb
nop
fiaddl
pushf
hlt
adc
aam
jmp
jns
xor
jno
das
sti
insb
push
add
xor
cmp
mov
in
dec
lds
lret
and
test
cmp
push
insl
mov
scas
push
pop
inc
adc
push
fwait
jecxz
jle
inc
ss
or
movsl
lcall
dec
stos
sarl
add
or
push
fwait
add
and
aam
xchg
pop
push
popf
das
or
inc
imul
shlb
pop
lahf
or
jecxz
movsb
aad
les
inc
insb
lds
mov
mov
clc
push
mov
sub
gs
jae
jg
jl
pop
loop
aaa
out
or
cmp
mov
and
outsb
data16
popa
loopne
mov
sub
inc
xchg
test
bound
pop
mov
dec
out
leave
add
ret
aaa
push
mov
outsl
sub
ljmp
or
push
push
cmp
fisttps
shll
scas
mov
add
stos
or
sti
cmp
fwait
mov
cmpsl
xor
and
add
shll
icebp
sbb
in
pop
push
aam
arpl
stc
lahf
call
cltd
enter
cmp
pushf
push
xor
push
cmc
dec
cmp
cmc
jge
add
mov
push
and
xor
imul
sahf
xor
cmp
imul
aad
lret
mov
out
ja
dec
je,pn
dec
dec
sub
aam
xchg
inc
fs
pop
inc
testl
cmpsb
push
jmp
cmpsl
test
jmp
rorb
adc
dec
sub
cs
pop
pop
cs
lret
cmp
cli
fdivrl
je
inc
push
clc
nop
xchg
push
call
jmp
mov
movsb
sahf
jne
xchg
insl
mov
lods
mov
xchg
fcomp
dec
inc
stos
xchg
out
jmp
inc
and
lret
inc
sarl
sbb
cmp
fdivr
push
test
imul
pop
inc
mov
das
outsb
cmp
jnp
fs
iret
out
mov
jg
and
or
ret
lods
push
fisttpll
les
out
jg
jne
mov
out
test
xchg
adc
aad
or
jl
sbb
jbe
inc
inc
dec
jnp
inc
jmp
outsb
or
or
popf
lret
sbb
mov
in
add
lock
dec
fld
popa
dec
add
add
fadds
imul
test
mov
xlat
mov
cld
push
ret
jmp
xchg
xchg
call
inc
fs
in
ds
test
popf
fs
dec
or
jp
pop
jnp
insl
dec
and
aas
jb
pop
iret
mov
popf
adc
faddl
inc
stc
mov
push
xor
lret
or
scas
lea
cmp
loopne
lret
mov
xchg
mov
daa
mov
enter
aam
wrmsr
fwait
xchg
call
add
scas
imul
jg
ret
subl
out
add
sbb
int
out
or
xor
inc
insl
into
mov
je
and
xor
jmp
ret
fcompl
xor
fistpl
out
add
jae
xchg
or
arpl
cmc
in
cmp
xor
nop
lret
fstpt
cwtl
mov
sub
cmp
mov
push
push
mov
mov
push
addr16
stc
clc
cli
pop
xor
das
sub
idivb
pop
sarl
rclb
out
xchg
adc
scas
xchg
pop
inc
sbb
and
inc
mov
mov
cmpsb
dec
pop
scas
jmp
movsb
arpl
mov
js
mov
fcoml
push
leave
cmc
and
xchg
into
arpl
std
cmp
roll
inc
loop
sti
incb
xchg
jo
mov
mov
inc
jl
lahf
xor
mov
aas
push
int
dec
les
shll
jge
push
imul
push
sub
mov
push
lcall
inc
adc
adc
clc
jae
in
mov
div
cltd
inc
add
push
inc
add
sbb
cmpb
lea
jecxz
or
xor
xchg
pop
cmpb
lock
dec
call
sub
out
jbe
inc
jae
cli
movsb
xor
test
mov
rclb
mov
je
xchg
mov
pop
loope
cwtl
enter
int
push
repz
out
mov
bound
sub
jb
arpl
fidivl
inc
orl
loope
mov
nop
imul
stos
repnz
std
mov
pop
lock
add
sbb
and
cwtl
test
jnp
mov
ret
jb
sub
or
mov
mov
or
jg
enter
and
cmc
xchg
mov
push
and
stc
inc
cmpl
jb
aas
fcoml
adc
aam
mov
cltd
sti
cmp
dec
and
jnp
jp
push
xor
sbbb
addr16
test
mov
pop
aad
cmpsl
scas
jo
pop
cmpsl
jge
xor
popf
adc
mov
push
xor
ud1
popa
insl
mov
mov
add
popa
das
and
cmpsl
fwait
push
mov
aam
xor
test
jnp
mov
bound
mov
adc
pushf
mov
cld
ja
aaa
int3
stc
add
push
or
sub
mov
out
sub
pop
xchg
inc
mov
js
and
xchg
insl
ret
push
lea
dec
sahf
pop
dec
cs
jl
mov
xchg
cwtl
testb
pop
inc
scas
sti
push
outsl
popf
cld
sub
inc
out
pop
ja
outsb
ret
hlt
xchg
pop
xchg
and
inc
clc
imul
mov
shll
xchg
dec
pushf
dec
mov
arpl
in
pop
sbb
cli
cmpsb
loopne
data16
mov
xchg
sbb
dec
fidivrs
xor
inc
xchg
or
lahf
jb
inc
xchg
pop
testb
or
cmp
test
ret
mov
ss
rcrl
out
mov
loopne
aas
cli
push
xlat
xchg
movsl
je
add
mov
pop
and
ja
inc
repz
outsl
push
lret
fwait
and
mov
mov
add
and
fidivs
xchg
pop
out
inc
divl
mov
and
lock
sub
scas
sbb
iret
clc
enter
mov
data16
sub
sahf
inc
push
ds
inc
stc
movsl
psubsw
cmp
loope
push
sbb
pusha
lret
inc
xor
sbbl
shrb
enter
mov
hlt
and
jnp
mov
jbe
sahf
xchg
es
mov
lods
jb
ret
jg
inc
mov
cmpsb
mov
sbb
xchg
cmp
sub
add
push
adc
out
into
adc
adc
inc
adc
pop
mov
sti
xlat
mov
jmp
icebp
cmp
dec
je
testb
ss
push
aam
pop
je
into
insb
out
imul
and
icebp
out
adc
test
sub
call
icebp
leave
jg
sub
xor
inc
pop
add
dec
mov
movsb
xor
jmp
push
lcall
or
xor
aas
mov
and
mov
lret
jbe
outsb
cmpb
and
das
cltd
cmp
sub
xor
rcl
sub
jno
lret
and
insb
adc
aas
sub
and
jecxz
cwtl
jae
js
sub
in
ficompl
arpl
pop
sbb
jp
out
insb
sub
xor
adcl
dec
popa
jmp
lds
pop
pop
cld
addr16
push
push
fcom
dec
mov
push
jge
lock
bound
cmpsl
or
lahf
jge
and
repnz
add
fwait
rcll
jbe
mov
movsl
add
stos
movsl
movsl
mov
sub
jb
adc
adc
mov
or
mov
xlat
movsl
inc
adc
daa
mov
fisubl
mov
xchg
mov
pop
adc
lods
jle
xchg
lods
lcall
mov
outsl
fs
mov
aaa
out
inc
adc
stc
mov
in
add
arpl
pop
aad
inc
cmp
in
imul
cmpsl
call
loop
dec
mov
push
dec
test
cmc
orb
addb
imul
pop
adc
subl
sbb
mov
inc
push
dec
push
mov
xchg
push
mov
cmp
pop
ljmp
cmc
push
jp
arpl
xor
push
jbe
dec
icebp
stc
int3
nop
pop
jae
int
add
inc
stos
add
inc
or
cld
xor
adc
mov
xchg
test
push
mov
testl
inc
sbb
cmp
sub
add
sti
jbe
incb
sti
icebp
shr
xlat
and
dec
test
lcall
xor
into
pop
repnz
push
lcall
loopne
adc
sub
test
or
or
dec
out
push
mov
xor
jbe
in
mov
cmpsb
or
or
cmc
cmp
or
adc
push
int
cmpl
les
mov
imul
es
xchg
icebp
mov
adc
cmpsl
mov
pop
loop
mov
mull
mulb
das
xor
ret
xorl
or
inc
aam
adc
adc
jae
aaa
mov
pop
pop
jne
jle
icebp
mov
cmp
mov
jnp
out
mov
in
adc
lea
adc
xchg
test
adc
push
out
hlt
pop
movb
add
pop
ja
aas
add
dec
adc
ss
jge
push
aad
fs
fwait
mov
push
add
outsl
push
push
push
cmp
inc
or
push
push
fiadds
pop
mov
bound
or
inc
imul
sub
add
outsl
repz
insb
xor
jbe
dec
addr16
push
mov
outsl
aam
pop
cmovl
repz
dec
std
cwtl
jl
cld
jns
push
mov
out
sar
inc
das
shr
fimull
or
dec
int
xor
sub
push
js
push
xchg
fldenv
ret
mov
es
pmuludq
jbe
clc
fldcw
pop
loop
mov
cmp
loop
fistps
inc
loope
sub
inc
mov
adc
scas
mov
fs
loop
mov
adc
mov
jecxz
xchg
out
int3
stos
dec
mov
outsb
dec
sbb
cmp
xorl
daa
sbb
push
xor
xchg
xor
outsb
xor
std
mov
inc
jecxz
mov
orb
int3
push
mov
inc
sub
pop
fwait
cwtl
or
add
fs
mov
dec
leave
or
sub
jmp
mov
mov
xchg
mov
cmp
dec
pop
enter
sub
inc
mov
int3
outsb
lcall
push
push
sbbb
or
mov
lret
fmul
test
cmpsb
push
adc
leave
and
push
frstor
out
shll
leave
test
mov
mov
and
dec
dec
mov
pop
aam
ss
xlat
mov
into
imul
mov
inc
stc
fstpt
mov
mov
fldcw
popa
out
cli
or
pusha
dec
ret
daa
mov
in
int
loopne
outsl
sub
ret
ja
and
push
aaa
lods
or
lcall
lahf
rclb
mov
loope
xor
icebp
pop
leave
adc
shl
je
scas
adc
or
insb
pusha
mov
pop
enter
or
nop
ret
add
stos
mov
movsb
in
and
xchg
push
cwtl
adc
shrl
inc
outsb
mulb
add
outsl
not
sbb
sub
popa
mov
int3
pusha
lahf
xchg
lret
lahf
data16
mov
sahf
cmpsb
push
cmc
pop
std
repz
xchg
xchg
cmp
popa
repz
out
cld
jno
loop
xorb
mov
jbe
cs
cli
out
xchg
js
int3
inc
mov
or
mov
and
mov
test
std
hlt
push
bound
out
and
dec
fistps
insl
xor
add
jne
int
cs
popf
movl
inc
mov
ds
mul
push
xchg
adc
sub
inc
popf
jns
cmp
mov
mov
add
mov
aaa
inc
jg
ja
decb
imul
pop
stos
test
inc
adc
mov
loopne
xor
inc
push
stos
xchg
ds
sbb
adc
lret
push
sar
addr16
push
cmp
jl
xchg
mov
xchg
roll
adc
mov
jg
fsubl
mov
clc
sbb
mov
test
pop
add
mov
pushf
sbb
in
repnz
sub
test
mov
sarl
movsl
pushf
fldl
test
mov
jae
pop
cmc
rol
fstl
jp
and
xchg
sbb
movsl
push
cltd
lds
inc
add
in
out
enter
mov
testb
sbb
icebp
sbb
imul
rcr
xor
hlt
pop
aad
mov
out
jg
mov
and
push
lret
clc
rcll
fiaddl
mov
hlt
lahf
sbb
push
mov
push
dec
test
subb
out
mov
mov
mov
xor
mov
mov
jmp
sub
or
bound
ss
sub
pop
xor
stc
add
inc
jp
sbbb
js
out
xchg
and
cmc
xchg
pop
cli
test
hlt
adc
shll
clc
out
loope
xchg
mov
ss
adc
xchg
dec
enter
xor
inc
and
jb
push
adc
popa
or
hlt
dec
stos
rcrb
fiaddl
sbb
mov
or
inc
cmp
mov
add
gs
cltd
inc
das
pop
in
jmp
loop
add
popf
scas
xchg
jecxz
or
dec
push
xchg
test
mov
pop
jb
sub
or
or
imul
inc
sarl
push
test
adc
dec
adc
xchg
sbb
inc
adc
aaa
push
jno
pop
sub
pushf
js
es
pop
fidivs
adc
mov
pop
sbb
das
inc
or
pop
pop
adc
test
fsubl
roll
fwait
mov
xchg
xor
adc
lcall
jl
dec
mov
js
mov
or
dec
xchg
mov
push
sbb
ret
sbb
lods
subl
jae
fwait
inc
nop
in
jmp
clc
sbb
mov
jl
fidivrl
mov
jo
test
jmp
lea
mov
xchg
jge
mov
out
mov
add
lret
and
pop
inc
xlat
sbb
div
push
and
out
out
add
fwait
imul
mov
nop
and
arpl
and
fisubrl
leave
and
cmp
xchg
adc
movsl
xor
in
inc
mov
jl
dec
lcall
xor
mov
fildll
push
inc
jb
imul
sbb
or
into
jns
insl
nop
add
mov
lods
lock
xchg
mov
test
fcoml
inc
xchg
mov
insl
fisttpl
mov
pop
fidivl
stos
out
push
rcll
das
out
xor
or
ja
cmpsb
inc
push
movsb
mov
add
adc
and
xor
ret
sub
sbb
or
jnp
imul
inc
stos
push
fwait
arpl
adc
and
xor
ret
sub
sbb
or
jnp
imul
inc
stos
pop
fwait
jnp
ja
add
js
daa
lret
xor
ret
sbb
or
jnp
imul
cmpsl
stos
mov
xchg
adc
dec
repz
jns
jecxz
test
jecxz
mov
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
dec
sbb
insl
cmp
rorb
inc
sub
push
in
mov
popf
mov
sbb
insl
cmp
or
js
push
in
mov
popf
enter
call
insl
cmp
or
js
push
or
repnz
fcomps
cmp
adc
les
lds
fs
fcoms
cld
jae
and
sub
mov
je
pusha
xor
add
cli
clc
xor
iret
or
push
jmp
in
mov
loopne
enter
dec
out
or
cmp
sub
pop
test
cmp
popf
adc
push
jb
fstpl
mov
mov
aad
pop
sbb
ds
inc
sbbb
stc
mov
lock
cmp
pop
iret
xchg
out
dec
mov
addr16
test
daa
adc
in
cmp
or
jge
or
js
push
in
mov
popf
enter
scas
or
sub
add
adc
or
sbb
mov
mov
sti
lea
pop
cmp
cmp
jg
cmp
outsl
push
out
out
std
les
enter
pop
jl
dec
adc
sbb
push
in
mov
popf
enter
call
insl
cmp
or
js
push
in
mov
popf
enter
call
lock
repz
mov
test
push
jbe
push
into
mov
loope
dec
test
es
mov
push
out
sub
lret
adc
movsb
cmpl
shlb
sub
icebp
and
dec
cmp
sti
jo
sub
clc
popf
mov
push
mov
aas
mov
fsubs
js
stos
test
cs
dec
popa
jge
aaa
sub
xchg
in
mov
pop
aaa
add
xchg
addb
xchg
es
aad
scas
mov
clc
dec
pop
sbb
mov
gs
scas
push
scas
jo
mov
pop
call
jae
lahf
dec
mov
sarb
adc
jb
dec
jnp
xlat
testb
push
insl
ret
ret
fldenv
loopne
jecxz
shll
loopne
or
sub
xchg
jno
sub
cld
out
xchg
out
add
loope
popa
push
pop
ss
lea
loope
inc
rcll
sbb
in
mov
mov
cmpsb
call
xchg
insl
add
push
je
fcoms
pop
jmp
inc
lds
cli
pop
movb
add
xrelease
sti
stc
inc
jnp
subl
push
add
xchg
sbb
sub
cmp
inc
fwait
in
jmp
leave
repz
test
push
adc
or
mov
jae
sbb
aad
aam
repz
xchg
pop
in
scas
mov
cmpb
push
subb
xor
pop
mov
sbb
inc
dec
mov
ds
push
and
pusha
pop
mov
insl
lea
xor
sub
cmp
aas
mov
and
mov
and
pop
inc
jne
lret
jbe
shr
xchg
pop
pop
jge
jp
inc
xchg
rolb
xor
jb
inc
inc
pop
std
hlt
daa
mov
xor
sub
aam
add
cmp
xor
xchg
leave
dec
jno
and
pop
and
cmc
aam
pop
jmp
xchg
xorw
adc
cmp
add
cltd
fs
jbe
jo
push
stos
pushf
or
clc
or
dec
sub
lds
mov
lcall
mov
pop
out
std
adc
inc
lock
mov
mov
dec
pusha
pop
mov
orl
fwait
int
sbb
rcrl
pushf
adc
ud2
adc
ret
inc
popf
dec
call
mov
iret
dec
or
loop
sbb
mov
xor
ret
daa
pop
jbe
xchg
pop
outsl
imul
lds
int
rorb
jecxz
aas
and
mov
scas
mov
cs
xchg
push
cmp
mov
icebp
xchg
adc
js
fnsave
add
ljmp
ds
in
add
shrb
and
in
xchg
dec
adc
add
jno
dec
xchg
xor
fistpll
and
dec
mov
sahf
sbb
outsl
in
dec
add
cmovl
scas
lea
push
add
sbb
cmp
xchg
mov
popa
xchg
fidivrl
out
insb
mov
repz
inc
add
dec
aaa
in
or
sub
js
fsubrs
inc
xor
pop
xchg
xchg
test
push
fxch
orb
jp
jb
cltd
pop
mov
addr16
mov
cltd
jno
xor
into
loopne
idivl
xorl
dec
sti
mov
filds
hlt
mov
sahf
jp
inc
pop
in
jno
mov
dec
ret
flds
shrl
and
out
cmp
jb
jg
mov
sbbl
cmp
pop
add
ljmp
dec
cld
inc
movsl
insl
imulb
pusha
movsl
push
aam
dec
popa
mov
push
dec
mov
xchg
pop
cmpsb
jl
cmp
dec
mov
jne
adc
stos
addr16
sti
pop
xor
inc
pusha
pushf
hlt
jnp
jmp
jl
test
pop
jne
in
jmp
shr
mov
inc
adc
in
in
mov
sbb
aas
sub
pop
jno
push
sti
aaa
push
ja
cmp
adc
jo
cli
lods
push
push
push
dec
push
leave
cmpsb
push
cmpsb
push
dec
sbb
or
dec
sbb
iret
data16
push
popf
aam
jle
cmc
icebp
lock
je
sbb
dec
mov
out
lcall
cltd
scas
lea
sub
ss
mov
mov
scas
lahf
add
sbb
add
adc
mov
andb
lock
cwtl
mov
js
ret
xchg
xchg
fwait
or
jmp
cmp
mov
out
dec
hlt
cmpsl
xchg
in
jo
das
jb
mov
inc
dec
jecxz
loopne
mov
lret
or
pop
xor
xchg
inc
lods
fisubl
in
mov
sub
das
xchg
movsl
test
mov
cmpsb
mov
cs
and
in
nop
sbb
inc
xor
int3
lahf
lods
gs
jmp
mov
lods
cmpb
loop
pop
cmpsl
rol
jle
add
cli
push
outsl
mov
out
xlat
xor
jl
mov
push
jmp
push
dec
in
mov
imul
popl
adc
pop
cmp
jg
mov
mov
fwait
dec
adc
add
mov
mov
dec
cmp
mov
cmc
pop
push
js
int
jecxz
mov
std
mov
lea
jge
insl
inc
ja
push
in
movsb
lock
xchg
dec
in
pop
push
jno
and
das
leave
dec
orb
add
jmp
mov
push
mov
jne
lret
pop
add
sub
aad
sbb
test
movsb
clc
fcomps
pop
or
jns
sbb
std
mov
adc
xor
jnp
inc
sbb
add
pop
or
or
cmp
xchg
ljmp
add
es
test
or
inc
cs
ljmp
xor
push
fists
lods
mov
mov
push
sti
jae
dec
hlt
mov
enter
bound
and
adc
push
cmp
mov
jmp
jmp
std
std
xchg
pop
sti
rcr
jne
sub
lea
daa
test
jnp
xor
stc
add
loope
jmp
adc
and
orb
mov
popf
lret
cmpl
outsl
repnz
addr16
pop
or
dec
push
gs
jp
cmp
scas
push
xchg
out
aad
inc
xor
lock
lahf
clc
inc
mov
or
fcmovb
push
dec
inc
cmc
add
xchg
push
mov
adc
cmp
mov
jo
inc
xor
and
mov
repz
mov
mov
scas
sub
push
and
xchg
popl
hlt
and
add
sub
inc
nop
lcall
cmp
stc
sbb
dec
outsb
sub
cmp
or
jne
and
les
or
lret
scas
test
sub
or
and
ds
je
add
cmp
mov
push
push
sub
mov
lock
outsb
add
push
xchg
pop
enter
enter
aas
cmp
push
inc
lcall
mov
cmp
jae
jnp
outsb
dec
push
mov
daa
pop
sub
ret
out
mov
dec
fldt
jbe
lock
rcrb
ret
dec
lods
pop
out
repz
inc
sub
inc
stos
loopne
push
loop
cmp
jo
clc
mov
mov
pop
clc
push
int
arpl
daa
leave
pop
in
push
in
add
mov
cmp
sub
call
cmp
test
push
icebp
cld
fbstp
dec
stos
je
icebp
xchg
sub
mov
int
and
adc
out
jl
shlb
xor
add
adc
add
jl
cwtl
testb
add
push
and
jo
ret
fbstp
mov
repnz
mov
mov
dec
dec
add
outsb
in
lahf
xchg
sbb
and
pop
xchg
inc
clc
insl
sti
jns
out
sub
add
jp
cmc
cmp
mov
loop
cmpsl
add
dec
add
stc
or
cli
sbb
jns
jo
in
mov
das
adc
mov
mov
loop
lahf
mov
fbld
stos
xchg
aaa
push
test
mov
fcmovne
xor
pop
pushf
xor
mov
push
iret
add
pop
push
das
fdivs
inc
bound
cmp
and
lret
insl
jne
int
mov
jbe
popa
std
jno
xor
rcl
sbb
subl
mov
into
inc
mov
cmp
addr16
push
ret
aad
mov
inc
out
and
cwtl
cmp
xchg
fists
jbe
cld
mov
add
and
mov
push
imul
mov
sub
push
daa
push
enter
rolb
inc
fstpl
in
jbe
les
data16
inc
test
subl
mov
sbb
mov
into
and
xchg
insb
test
in
sahf
into
div
sub
ret
sbb
jge
inc
cld
das
mov
adc
mov
movsl
adcl
add
popf
push
pop
stos
add
movsb
icebp
lods
cmp
loop
inc
sbb
gs
mov
jmp
sub
test
xchg
insl
adc
std
cli
inc
inc
enter
mov
sub
push
pop
fcom
stos
adc
sub
sbb
xchg
mov
cld
fs
jno
loope
ds
enter
ja
orb
cmp
aas
das
nop
das
dec
mov
fs
sbb
xchg
sub
inc
cld
fdivrl
jns
es
adc
push
call
in
sub
fwait
dec
arpl
inc
or
inc
test
fistpl
pusha
sbb
mov
pop
aad
sbbl
stos
push
xor
cmp
sarb
sbb
stos
inc
lods
sbb
xor
sahf
mov
daa
shlb
and
adc
les
mov
inc
jp
insl
mov
or
mov
inc
aam
lea
cmp
lock
add
mov
mov
in
call
stos
lods
pop
neg
pop
push
jo
sub
es
push
psraw
flds
sbb
push
cmp
out
lahf
or
mov
xor
data16
les
sahf
adc
ja
and
xchg
jge
test
mov
insl
xchg
mov
faddl
pop
lds
ficoml
lret
cmp
inc
push
hlt
add
subl
push
inc
addl
icebp
inc
cwtl
test
lds
adc
mov
pop
jl
sub
mov
add
sbb
or
mov
ja
fwait
push
jp
test
mov
or
lock
and
sub
cmp
inc
in
jecxz
mov
add
loope
test
sbb
mov
stc
xor
repz
cwtl
shrl
push
ret
in
pop
daa
js
cltd
add
shll
ret
clc
xor
dec
add
cmc
cmp
mov
cmpsb
mov
fwait
hlt
roll
push
mov
mov
mov
imull
lods
push
inc
dec
loope
lock
fs
xchg
mov
adc
pop
jno
fldt
and
xchg
imul
inc
aas
inc
in
aam
mov
insl
jb
or
pusha
inc
or
mov
into
dec
dec
add
add
jo
pop
sub
cli
mov
xchg
shrl
xchg
cli
mov
jl
in
add
adc
cltd
dec
test
fildl
mov
push
dec
add
jp
or
outsl
es
mov
out
cmpsl
sub
popf
das
loopne
sti
rorb
rcl
sbb
sub
daa
sub
jns
cld
cmp
add
sbb
loope
push
mov
mov
jg
push
and
mov
cmp
loope
sub
ljmp
lea
decl
in
ficoml
dec
scas
inc
daa
cld
dec
push
sar
fnsave
fnsave
movsl
imul
in
fwait
jns
hlt
pop
pop
popa
pop
mov
mov
das
outsb
pop
stc
xchg
dec
jbe
je
and
sub
xchg
enter
in
les
or
inc
adc
xchg
fucomp
lds
daa
or
aam
inc
popf
rcrl
out
std
mov
cmp
pop
sub
jnp
mov
pop
rcrb
sub
mov
adc
imul
sti
movsb
out
mov
scas
mov
loop
nop
mov
es
lret
inc
lods
test
ret
jl
sbb
jl
loopne
jecxz
push
pop
test
out
sbb
pop
push
jl
mov
dec
daa
ss
test
rclb
adc
cmp
mov
in
out
lods
dec
shrl
mov
sub
into
and
imul
mov
ljmp
or
imul
adc
mov
xor
jge
jne
pushf
ss
test
jle
repnz
pop
aad
test
pop
sub
pminub
sub
fwait
les
rolb
test
outsl
push
imul
pushf
popf
or
int3
popa
addr16
jge
jl
cmp
out
arpl
insb
jae
cli
pop
in
cmp
xchg
pushf
jmp
je
and
fsubrs
mov
add
add
aaa
adc
push
outsl
mov
sbb
clc
jae
mov
adc
and
icebp
cs
daa
cmpsb
and
xor
mov
aam
arpl
mov
add
adcl
outsl
push
adc
fnstenv
adc
jb
dec
or
ror
jecxz
fistpll
jno
lods
jae
inc
int3
pop
mov
out
ret
rcr
xor
xchg
sarb
movsb
dec
xchg
clc
lock
arpl
loop
jge
xor
sub
push
pushf
aas
les
test
adc
movsb
sub
fwait
push
inc
divb
push
xor
push
sbb
push
nop
mov
push
push
dec
sub
mov
movsb
inc
cmp
lods
jne
movsl
adc
or
sub
xor
in
in
ret
mov
ffreep
mov
in
out
cmpsl
push
andl
inc
mov
scas
inc
sub
xor
xchg
imul
or
mov
or
adc
js
cmp
outsl
dec
sbb
adc
pop
mov
test
test
push
push
addl
cmp
and
push
pop
pop
mov
icebp
outsl
iret
outsl
loop
pusha
push
ficoml
pusha
mov
pop
bound
inc
mov
lods
mov
notb
icebp
xor
pop
out
adc
loope
lods
jmp
subl
test
pop
jb
in
popa
das
cmp
xor
lret
roll
jo
xchg
or
sbb
pop
adc
xchg
aam
sub
inc
add
adc
add
pusha
fwait
and
fwait
movsl
sub
in
arpl
das
pop
std
and
into
inc
repnz
hlt
or
repnz
lods
push
mov
push
xchg
mov
adc
lock
inc
sub
pop
imul
dec
or
or
enter
xchg
out
fstps
insl
loop
and
inc
and
xchg
sbb
in
cmpsb
rcrb
jecxz
mov
ficomps
movsb
xor
sub
nop
imull
pop
dec
or
jecxz
xor
xor
aad
push
jnp
xchg
mov
sub
mov
div
inc
push
push
fisubl
xor
div
mov
insb
and
clc
and
arpl
into
fnstcw
inc
adc
xor
xor
inc
inc
dec
xchg
sbb
in
bound
push
and
imul
mov
jmp
aaa
lahf
inc
sub
push
pop
cmp
sub
rclb
add
xchg
test
lret
jg
std
jbe
add
mov
filds
aam
aad
push
adc
ffreep
das
rclb
mov
cmpsl
rolb
fdiv
cmpsb
xchg
mov
or
repnz
and
lds
js
pop
xchg
rcrb
and
lcall
mulb
or
adc
and
dec
xchg
jmp
xor
dec
lcall
add
inc
mov
imul
xor
lcall
sub
leave
aam
xchg
xchg
iret
xchg
mov
pop
es
sbb
arpl
inc
sbb
mov
xchg
push
dec
adc
pop
fldcw
push
and
mov
sahf
shrl
mov
repz
inc
adc
movsl
mov
xor
xlat
sbb
mov
lds
popf
jno
aaa
jno
mov
lods
dec
inc
xchg
in
popl
imul
jp
sub
xlat
lret
adc
or
loopne
test
pop
sub
aas
sub
dec
push
repnz
scas
mov
cmp
sbb
add
sub
imul
mov
lret
mov
and
jb
fadd
stc
out
or
outsl
sbb
fsts
sbb
xchg
in
mov
inc
sbbb
test
pop
push
dec
xchg
push
into
lret
packsswb
stc
js
push
inc
out
inc
mov
icebp
popa
cld
shll
pop
jo
sub
or
stc
int3
fsts
sub
fsubr
cmp
mov
popf
call
shll
add
add
cmp
inc
xor
xchg
ds
in
sahf
leave
cmp
daa
pop
das
shl
ret
mov
push
lods
clc
popf
divl
and
xor
push
cmp
jns
adc
outsl
orl
and
xor
dec
adc
insl
jb
inc
pop
rclb
cwtl
mov
xchg
in
push
add
sbb
mov
scas
cmp
sbb
in
jo
aas
mov
push
adc
jecxz
andb
mov
push
lds
cld
rolb
call
andb
cli
sub
lahf
in
stc
test
test
cmpl
xor
ret
adc
inc
sub
inc
popf
outsb
testb
push
push
or
dec
jg
lock
mov
ja
cs
mov
xor
sahf
jne
mov
shrb
gs
icebp
xor
mov
inc
icebp
push
aad
lcall
sub
xchg
dec
xorps
xor
pop
rcl
pop
xchg
js
lahf
lar
xor
lahf
push
jns
pop
cmp
into
sbb
pop
jecxz
out
jl
jbe
lcall
shl
mov
in
insb
adc
or
sbb
cmpsb
ftst
xlat
jbe
inc
sub
enter
push
pop
lds
outsb
add
xchg
popa
mov
testb
call
add
lds
nop
aad
call
hlt
je
testb
into
inc
in
fnstenv
jge
sub
test
push
jl
cmp
xor
mov
and
or
pushf
push
loop
push
push
ficoms
jns
cmp
mov
inc
rorl
mov
jns
xchg
insb
cmpxchg
shrb
mov
cmc
jae
filds
mov
int3
add
sti
mov
jg
clc
pushl
xchg
popf
xchg
sti
repnz
mov
cmp
mov
bound
push
es
imul
push
aad
fs
stos
dec
pushf
cmpsb
cli
or
add
scas
mov
sub
push
in
xchg
call
insb
mov
sub
mov
sbb
out
cmc
sahf
pushf
cltd
xchg
neg
out
loope
pop
rcrb
stc
inc
add
mov
cld
xchg
test
jp
mov
call
outsl
pop
or
adc
repnz
movsl
cmp
stc
adc
push
aam
or
push
xchg
inc
jbe
pop
xchg
jo
xor
cmp
and
pop
popf
addb
xchg
sahf
aad
ret
sbb
loopne
mov
jle
cmovo
cltd
push
mov
xor
popa
adc
inc
jle
sub
jecxz
adc
ret
mov
mov
mov
inc
popf
jecxz
fldt
push
adc
mov
nop
or
jmp
and
dec
or
push
jae
fsubrl
dec
jb
rep
int3
inc
push
mov
in
add
cmp
or
add
loope
in
jno
das
popa
xchg
mov
cs
pop
sarl
insb
xchg
int
mov
dec
mov
loope
mov
mov
xchg
mov
in
nop
push
or
rcll
icebp
push
test
mull
ja
fisubl
pop
arpl
or
adc
cmp
rorl
cmp
or
js
push
in
mov
popf
enter
call
insl
cmp
or
js
push
in
mov
popf
enter
call
in
cmp
lea
dec
sub
cwtl
fisttpll
fstps
call
insl
cmp
or
clc
cmp
and
std
push
in
aaa
fldl
int
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
shr
clc
loopne
lock
call
shrb
push
js
dec
jo
add
adc
shr
clc
loopne
lock
mov
sbb
jle
add
and
and
sbb
call
call
mov
pop
shlb
sub
pop
add
push
jl
sbb
cmpsl
loopne
xchg
popa
push
ja
imulb
fisttpll
out
adc
inc
mov
dec
daa
stos
sub
fadd
cmpb
dec
mov
push
pop
add
and
dec
aas
mov
ljmp
adc
sub
jo
pop
xchg
scas
xchg
std
movsl
add
in
clc
and
xor
sub
fdivrs
xchg
mov
lret
mov
adc
mov
or
inc
adc
stos
divl
xchg
nop
or
insl
dec
adc
jg
mov
inc
xchg
xchg
das
popa
mov
cwtl
clc
cmp
fcomip
and
cmpsl
scas
mov
fstl
js
sbb
and
cmp
xor
or
leave
clc
loopne
lock
mov
js
dec
imul
or
jno
xchg
mov
idivb
inc
or
adc
add
dec
push
or
scas
call
subb
jmp
cwtl
add
xor
aaa
add
push
push
insl
push
dec
movsl
mov
cwtl
mov
mov
push
jo
add
adc
and
xor
shr
clc
loopne
lock
mov
js
dec
jo
add
adc
and
xor
shr
mov
jp
lahf
in
fs
push
addl
push
aas
sub
or
add
mov
xor
push
aas
mov
add
push
xor
or
lret
or
out
cmp
jl
mov
pop
in
pop
ljmp
arpl
mov
fnsave
mov
adc
int3
inc
adc
xchg
lahf
and
es
pop
sbb
push
inc
sbb
and
inc
data16
std
sub
les
or
out
mov
dec
aad
subb
cmp
iret
call
fistps
loop
and
push
leave
pop
mov
adc
into
andl
cmp
and
pop
mov
jmp
jecxz
xor
pop
movsb
mov
rcrb
imul
adc
mov
into
dec
das
out
mov
in
pop
repz
insl
or
lret
iret
sub
loopne
popl
hlt
jbe
cmp
mov
push
mov
in
enter
add
nop
bound
sub
adc
mov
push
stc
mov
int
imul
push
shll
stos
scas
xchg
and
add
mov
mov
xor
in
paddsb
dec
mov
xor
dec
hlt
enter
or
aam
pushf
mov
adc
aas
and
mov
lcall
sub
inc
int3
rcrl
jo
adc
shrl
cmp
les
ljmp
jl
sbb
in
inc
mov
or
lds
xor
out
xchg
mov
decb
fucomi
arpl
mov
lcall
rol
xor
mov
xchg
stc
stc
mov
jne
ficoms
xlat
rolb
sub
adc
dec
popa
adc
fldcw
and
test
loopne
push
add
lahf
sahf
adc
push
inc
pushf
popa
aad
xchg
cmp
dec
push
call
push
add
mov
jge
mov
into
push
push
bound
xor
mov
mov
fists
mov
jge
int3
mov
pop
mov
xchg
mov
lahf
aad
and
mov
pushf
icebp
dec
mov
clc
fistpl
xchg
mov
mov
mov
dec
rsm
das
mov
push
pop
addl
aam
movsb
fldcw
pop
cmp
push
movsl
aaa
pop
cld
add
or
push
mov
and
fidivrs
inc
jo
mov
xchg
stos
jge
div
pop
cmp
in
test
sub
and
das
cld
das
mov
or
dec
nop
cmpsl
sbb
mov
inc
jb,pn
jnp
je
push
test
add
xchg
dec
pusha
jno
mov
and
jmp
insl
mov
lahf
xchg
mov
xchg
mov
add
fdivp
xchg
outsb
sub
les
loopne
cmp
aaa
sub
mov
push
loope
movl
pop
dec
shrb
lds
xor
mov
jp
ffreep
cli
and
cmp
xchg
push
loop
and
out
dec
ss
inc
rorb
xchg
jp
decl
nop
xchg
jae
push
push
aad
or
sbb
stos
pushf
inc
push
mov
fsub
push
jns
push
fs
xor
lret
xchg
insb
insb
pop
iret
pop
push
fidivrs
pop
dec
pop
jp
xchg
and
push
scas
imul
jne
mov
cs
inc
xchg
jbe
cmc
sbb
leave
pop
cwtl
jnp
jbe
add
jae
negb
mov
xor
hlt
inc
arpl
adc
push
loope
mov
imul
frstor
jp
inc
jae
mov
ficoms
cmpl
push
addr16
jp
jl
fs
rcrl
add
inc
push
cmpsl
dec
push
es
rcl
outsl
and
lea
lret
cltd
jnp
lcall
addl
lds
sub
dec
cmpsb
test
jl
ffreep
lret
cli
shr
loopne
cwtl
push
push
jle
jecxz
clc
pop
cs
aam
pop
call
push
mov
dec
dec
and
fists
jg
inc
scas
test
push
movsl
cmp
add
repnz
jbe
mov
pop
mov
mov
dec
adc
fsubl
mov
cmpsb
shrb
not
sub
jo
mov
adc
insb
stc
mov
gs
sbb
andl
add
sbb
cmpb
sub
aam
fsubrs
cmc
in
in
cmp
mov
mov
scas
inc
or
push
adc
jbe
cmp
mov
push
nop
shrb
stos
in
cmpsb
cmpsb
into
sub
xor
xchg
jno
std
push
jge
sub
hlt
imul
mov
or
scas
mov
cmp
repz
sub
mov
mov
les
les
rcll
mov
cs
daa
adc
sub
mov
pop
jns
or
or
outsb
jbe
nop
pop
cs
lock
lcall
fstpl
imul
gs
insb
loope
in
nop
mov
mov
and
mov
jb
xchg
mov
popa
xchg
dec
imul
jg
adc
pusha
lods
jg
inc
xor
jns
rorl
xchg
xchg
std
pushf
mov
push
jns
cmp
sub
add
push
xchg
leave
mov
add
repnz
xchg
dec
lcall
adc
inc
cmp
out
xchg
movsl
imul
cmp
mov
dec
loopne
sub
inc
popa
rorl
push
imul
nop
cmc
cmp
and
lock
idivl
addr16
push
xchg
jbe
ret
mov
clc
mov
add
sub
das
push
mov
icebp
sub
jg
pop
jo
addr16
addr16
pop
test
js
out
xchg
xchg
mov
int
testl
mov
flds
inc
sti
xchg
fcomip
in
sub
or
jns
in
stc
or
jg
inc
int3
jno
mov
and
sarb
movsl
std
mov
push
dec
outsl
lock
stos
outsl
rcrl
es
sti
cli
jmp
nop
xchg
adc
pop
cmp
sahf
mov
mov
push
mov
inc
stos
add
add
fildll
cmp
or
dec
call
pop
push
dec
cwtl
enter
xor
mov
lcall
jp
ljmp
ffree
cmp
insl
xchg
bound
jg
rcll
lods
cmp
sub
jmp
into
jns
push
sub
es
inc
pop
andl
dec
or
popa
push
ffree
sbb
lea
pop
inc
stc
cmp
mov
shl
xchg
clc
inc
xchg
in
or
mov
loop
stos
les
jle
imul
int3
add
out
xor
inc
fidivs
or
lods
mov
dec
clc
inc
jae
ret
sub
lret
js
dec
and
push
pop
xchg
push
aas
insb
mov
xor
sub
lahf
pop
cmp
repz
or
or
pop
pop
mov
jne
xor
jle
mov
repnz
or
dec
and
sbb
add
rcr
pop
add
mov
xor
les
test
jp
push
ret
cld
add
test
and
mov
xor
cs
cs
dec
inc
jl
mov
in
push
sub
jg
mov
jo
loope
inc
sbbl
sbb
xchg
fidivrl
dec
insb
xor
cmc
sub
push
xchg
fists
shl
jp
inc
scas
lcall
sbb
push
nop
jmp
lods
nop
cli
icebp
push
loop
outsl
adc
push
jno
pop
xchg
lods
out
sub
lahf
call
mov
inc
and
xor
outsb
inc
inc
and
adc
pushf
aad
std
pop
and
and
fistps
sahf
fmuls
psadbw
rolb
mov
lods
shll
sub
pop
dec
sub
sbb
dec
pop
mov
sub
lods
mov
mov
les
lock
add
or
push
push
loopne
xor
jne
data16
pop
mov
push
roll
in
ret
clc
add
lea
rclb
mov
pop
lds
gs
mov
cmp
jne
sti
push
mov
rcl
mov
pop
jecxz
mov
cmp
cmp
cmp
sbb
mov
dec
jle
xchg
mov
mov
xchg
lds
enter
aaa
inc
insb
subb
mov
arpl
inc
xchg
popf
sub
rcl
push
hlt
add
into
push
roll
hlt
push
rcll
xorb
adc
mov
mov
pop
adc
push
jbe
loop
push
arpl
cmp
stos
pop
hlt
push
adc
cmc
dec
inc
xor
sahf
lods
inc
lods
jnp
adc
fimuls
pop
inc
pusha
decb
js
push
xchg
js
in
push
jg
lods
in
mov
adc
das
pop
ds
mov
incl
lea
sbb
fstp
pop
inc
test
xor
loopne
push
jg
std
jp
push
push
aam
in
cmp
sub
rorb
lret
scas
cltd
outsb
pushf
add
jmp
shl
inc
and
movsl
jecxz
rcl
iret
sbb
pop
fsubl
data16
pop
int3
addr16
enter
sbb
loopne
inc
push
lcall
add
jmp
mov
or
rcrl
and
movsl
ljmp
inc
xorl
and
xchg
push
and
test
adc
add
inc
add
mov
add
ljmp
daa
fidivrl
divl
test
jae
pop
pop
and
cltd
insb
es
push
stc
icebp
push
repz
in
decb
push
mov
pop
sub
sbb
xor
jnp
cwtl
int
push
pusha
and
ds
push
shld
insl
int
in
add
insl
push
add
dec
lret
push
in
add
mov
in
pusha
pop
inc
mov
add
dec
inc
std
push
andl
or
mov
or
test
pop
int3
jle
cmp
daa
lret
mov
sarb
in
repz
and
xlat
cmp
sub
cmp
lods
jle
ja
jge
mov
es
jge
xor
imul
push
jmp
insl
sub
push
inc
or
mov
ds
outsl
int3
incl
aas
negl
push
adc
fisubl
stos
mov
js
repz
enter
push
jp,pn
fwait
out
aaa
cmp
adc
push
nop
mov
or
mov
rolb
pusha
jmp
fxch
or
adc
lcall
and
add
mov
adc
out
fwait
cmp
sub
pop
add
into
insb
mov
jp
sti
inc
fdivrl
adc
push
negb
fs
hlt
icebp
ds
fsubrl
add
call
jg
imulb
jnp
lret
cmc
in
adc
cltd
xchg
in
pop
jnp
stos
jge
xchg
xchg
jecxz
xchg
nop
inc
sysenter
dec
outsl
push
xchg
pusha
pop
xchg
nop
rorl
push
add
into
inc
fidivl
mov
loop
cld
add
fbld
imul
into
mov
mov
loope
loopne
sbb
pusha
outsb
bnd
mov
jle
and
in
subl
cli
js
pop
psubusb
lret
sub
xchg
mov
xchg
xorb
mov
lods
xor
ret
and
mov
and
fsubrs
data16
mul
mov
inc
lret
pop
ss
pop
lods
addl
push
mov
aam
sbb
sub
stos
imul
cmp
jae
push
pop
mov
imul
lds
xor
mov
in
push
in
mov
jae
mov
push
arpl
stos
into
or
add
jo
or
in
jmp
sub
fisttpll
add
pop
ljmp
sbb
out
xor
pop
or
pop
xorb
stos
sbb
xchg
inc
mov
outsl
inc
inc
ss
repnz
mov
add
mov
mov
jbe
mov
fsubr
xchg
dec
ret
add
xor
scas
scas
dec
lcall
sbb
stos
cmp
loope
jmp
leave
pop
aam
out
loope
rcl
mov
movsb
cwtl
inc
mov
fbld
adc
jge
loope
testb
push
mov
sub
lock
sbb
rclb
push
cmpsl
fabs
lret
idivl
lret
loopne
mov
mov
aad
daa
cmpsb
cwtl
push
lahf
or
outsl
sbb
push
mov
inc
movsl
mov
lret
loope
outsb
test
dec
adc
arpl
push
gs
mov
in
scas
mov
and
fdivl
inc
out
mov
movsb
dec
inc
xchg
or
test
jo
pop
xor
dec
sbb
cvttps2pi
cwtl
and
call
js
jle
in
scas
test
push
adc
out
mov
inc
xchg
inc
sti
sub
test
mov
inc
movsl
xlat
in
add
cmp
add
dec
mov
adc
loopne
ficompl
ss
cmp
cld
jle
clc
push
nop
in
jl
sub
mov
cmp
jl
inc
or
in
xchg
xorb
lret
repz
ss
push
ret
pop
mov
xor
jno
pop
mov
cmp
or
xchg
rcrb
mov
xor
and
in
or
sub
mov
mov
shlb
rcl
aas
jge
lea
mov
sahf
push
loopne
inc
incb
aas
mov
xor
xor
or
fnstsw
lock
pop
fwait
stc
mov
xchg
and
push
push
mov
cmp
mov
fisttpl
test
jmp
pushf
xor
das
adc
dec
lahf
movsl
and
in
mov
jbe
pop
pop
mov
dec
push
xchg
adc
clc
or
pop
inc
int3
cli
dec
mov
mov
jge
sub
jge
loopne
jmp
mov
fwait
rcll
ds
jne
iret
jnp
adc
test
hlt
or
or
cltd
int3
jecxz
jle
test
movsb
mov
xlat
insb
xchg
and
int
cwtl
or
mov
xlat
int
mov
out
jnp
inc
jmp
sub
xor
cmp
sub
insl
lret
dec
or
jge
lret
push
addr16
lahf
pop
cs
mov
cmp
fimull
pusha
cmpsb
and
mov
and
inc
lock
mov
xchg
jmp
call
out
lea
jmp
fwait
popa
dec
into
push
je
les
leave
pop
bswap
dec
add
jle
sti
in
cmc
cld
add
fldcw
leave
push
imull
decl
repz
xchg
mov
cmp
mov
data16
dec
jecxz
ret
jns
add
sbb
add
push
mov
push
outsb
cli
ja
and
inc
arpl
cmp
std
divb
cmp
jecxz
xchg
sub
mov
test
sub
shrb
or
mov
cmp
subl
inc
je
dec
daa
mov
cmp
xor
js
xchg
shrb
push
fistpl
cmp
fs
jo
lea
in
push
xchg
push
cmpsl
or
popf
js
xchg
sbb
or
xor
sbb
dec
xchg
mov
fists
mov
dec
pop
or
push
adc
pop
mov
cwtl
fsqrt
mov
adc
mov
pop
fisubl
lea
and
pop
jmp
jbe
dec
ffree
push
pushf
add
addr16
push
mov
and
subl
sbb
pop
or
mov
push
lcall
or
add
inc
xor
add
mov
repnz
imul
fmull
rol
xchg
negl
inc
daa
pop
jl
and
aam
mov
adc
shr
add
aas
mov
sub
jns
pop
mov
mov
fiaddl
xchg
loopne
cwtl
pop
pop
adc
jle
inc
stos
cli
add
push
enter
xchg
lods
bound
inc
add
inc
popl
movsb
outsb
xchg
push
pop
dec
nop
sti
paddq
mov
out
mov
inc
dec
mov
pop
stc
inc
pop
loop
mov
ss
mov
int
push
cmp
xorb
test
scas
mov
ficompl
add
pushf
ja
shlb
inc
xchg
push
cmp
push
xchg
and
jbe,pt
mov
dec
sahf
out
xchg
cmpsb
xor
xor
dec
inc
or
xor
cmp
rorb
inc
arpl
add
cmp
imul
arpl
dec
jge
lods
enter
ficoml
insb
cmpsb
enter
test
adc
mov
ret
outsl
bound
icebp
jg
push
fisttps
ljmp
aam
sub
jb
adc
lret
push
mov
sti
add
lahf
inc
lds
cmp
mov
add
outsl
mov
xlat
ret
xchg
dec
ficoms
lds
test
stos
mov
sub
and
imul
faddp
popf
sar
jg
lea
pop
push
jl
fistl
mov
xor
shll
popa
xchg
lret
jg
mov
pop
addb
nop
lret
xor
inc
xor
ja
push
cld
sti
push
cld
lahf
rcrl
fsubl
jmp
psubsw
jbe
sub
sti
xor
and
dec
jo
adc
cmp
push
add
jl
popa
pop
fs
cltd
incb
cmpsb
and
stos
testl
in
jbe
fdivs
cmp
xchg
icebp
call
inc
jl
ja
push
mov
xor
jns
jbe
jmp
ret
das
mulb
push
dec
sub
jno
outsl
mov
dec
and
pop
scas
fisttpll
mov
mov
jp
cwtl
mov
mov
xor
ficompl
cmp
pushf
js
push
inc
cwtl
call
mov
stc
movsl
cmc
cmpsb
leave
dec
testb
das
and
xchg
lock
xchg
out
pop
scas
aaa
xor
stos
mov
int3
lret
in
daa
cmp
xor
clc
cmpsb
sub
mov
psubusb
mov
aaa
out
mulb
xlat
loop
push
sub
xor
cmpsb
mov
jb
or
rclb
shrl
pop
inc
add
mov
pop
sbb
je
roll
daa
or
sbb
pop
loopne
outsb
movsb
ret
lret
insb
cwtl
or
out
dec
shrb
ss
filds
jnp
fwait
sarl
mov
in
imul
ja
jg
ss
into
fxtract
mov
mov
sbb
cmp
mov
push
mov
pop
push
mov
sti
xchg
push
cmp
vcvtsi2ssl
cmp
daa
cmpsb
pop
mov
xor
mov
lcall
push
sub
mov
jl
push
or
jnp
fwait
or
pop
cltd
pop
add
xchg
pop
mov
sub
insb
mov
mov
std
adcl
test
aaa
pop
jg
shlb
aad
or
and
pusha
sub
push
xor
outsl
test
xchg
and
aas
mov
add
sub
mov
mov
mov
adc
cmpsl
sub
test
andl
stos
jno
jecxz
inc
jae
test
les
pop
in
pop
mov
cli
outsl
cmp
adc
lret
pusha
push
xchg
xchg
dec
sti
enter
icebp
xlat
test
pusha
xor
bound
out
xor
ja
lret
out
mov
loope
cmpb
pop
mov
lret
sbb
pusha
adc
and
ss
pop
cmp
xor
adc
jne
pop
enter
jns
shlb
bound
out
fsubl
rcrb
insb
sub
leave
stos
inc
das
aad
cmpsb
inc
pop
outsl
test
xor
mov
dec
negb
rol
and
inc
mov
nop
and
mov
sbb
cmpsl
inc
repnz
popa
out
xor
aad
mov
sbb
data16
loope
addb
insb
iret
jp
popa
push
testl
subb
mov
mov
push
sub
adc
mov
fildl
popf
dec
aaa
mov
cld
fmul
enter
test
inc
loop
test
cmpsl
adc
push
pop
lahf
out
ljmp
lods
pop
sbb
arpl
rorl
psadbw
mov
mov
push
popa
xlat
shr
add
jb
scas
shrl
and
rcr
or
jbe
mov
pop
andl
sbb
sbb
lods
ds
push
lahf
jae
fldenv
push
and
xor
add
mov
sbb
jmp
push
insl
es
rolb
lret
sub
push
inc
incb
daa
ss
pop
mov
test
cmpsl
test
push
mov
adc
pushf
addl
or
dec
add
call
xchg
mov
push
rol
cmpsl
andb
adc
fcomps
gs
pusha
clc
ljmp
mov
inc
push
jo
add
adc
and
xor
shr
clc
loopne
lock
mov
js
dec
jo
add
adc
and
xor
shr
js
dec
lock
mov
js
dec
jo
add
adc
and
xor
shr
clc
loope
lock
mov
cwtl
mov
dec
jo
ja
cwtl
fcomip
iret
out
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
clc
outsb
call
mov
std
mov
push
and
push
sub
popa
or
xchg
call
mov
cwtl
icebp
mov
js
push
and
xor
xchg
sbb
popa
clc
mov
sbb
enter
jmp
push
and
dec
das
push
daa
popaw
mov
call
sub
ds
adc
and
xor
cmp
lea
jae
push
shrb
sub
xchg
jnp
imul
aam
adc
jno
sub
outsb
arpl
adc
inc
mov
or
cmpsl
lea
movsb
cwtl
inc
mov
popa
mov
mov
xchg
mov
test
js
aad
outsb
faddp
add
sbb
or
pop
test
lock
add
mov
loopne
pushf
xchg
add
shll
cmp
int3
clc
jno
sahf
pop
sahf
shlb
mov
push
jmp
and
add
add
add
sub
mov
cmpsb
xchg
call
mov
cwtl
call
push
cmp
dec
sub
jno
add
mov
xchg
scas
std
popf
leave
mov
js
jns
fs
pop
cmp
adc
or
jmp
lods
movsb
mov
mov
sbb
bound
jl
push
or
rorb
mov
icebp
mov
js
push
and
push
sub
jno
popa
clc
xchg
call
mov
cwtl
icebp
mov
js
push
and
push
sub
jno
popa
clc
xchg
dec
push
arpl
push
dec
in
clc
pushf
sahf
sahf
mov
orl
mov
pushl
fcmovbe
pop
lcall
mov
add
jmp
fucomip
jbe
jle
xor
mov
jl
push
gs
pop
push
mov
sahf
and
sbb
imul
in
ljmp
test
movsb
scas
stos
cmp
cmp
fdivp
sbb
sub
add
mov
cmp
inc
xchg
mov
in
sbbb
mov
dec
push
jbe
cmc
sub
rorb
cmp
push
shl
loopne
jl
ljmp
pusha
adc
dec
mov
or
mov
pushf
xchg
loop
mov
test
or
cmpsl
aam
cmp
jmp
or
mov
not
es
ficoms
cmp
in
jge
sbb
aad
mov
pusha
lods
pop
cld
fistl
jg
cld
mov
in
cmc
inc
pop
dec
mov
ss
jnp
shll
pop
mov
shr
xor
movsb
xchg
push
lods
gs
call
int
cs
add
test
push
xchg
or
xor
inc
fdivrl
loopne
jno
fimull
scas
es
xchg
repnz
js
pop
dec
pop
dec
jo
mov
xchg
or
test
mov
movsb
xor
adc
call
test
push
popf
and
fisubl
in
jmp
xor
push
mov
pop
adc
xor
mov
addb
mov
add
test
sbb
outsb
push
or
adc
add
mov
outsb
hlt
jle
loope
ljmp
loop
stc
sahf
in
adc
lds
mov
sub
packssdw
ret
sbb
pop
sbb
lcall
dec
xchg
mov
push
stc
mov
aas
fcoml
cmc
into
sahf
pop
in
int3
adc
icebp
int3
xor
movsl
iret
add
xlat
pop
shrb
outsl
push
cmpsl
int3
or
mov
lods
shll
jecxz
jns
pop
cmpsb
sti
test
aam
inc
cmp
push
add
dec
or
push
loop
adc
inc
or
pop
push
ss
sub
mov
leave
stos
dec
data16
ret
xor
push
adc
movsb
lods
dec
dec
dec
loopne
jb
xlat
ret
xchg
inc
ja
xor
jp
in
dec
pop
lods
lcall
cmp
inc
fldl
mov
rorl
lret
out
fistps
imul
outsb
bound
mov
test
xor
fsubrs
fs
aaa
xchg
jmp
and
pusha
xor
stc
or
adc
inc
fldt
push
mov
add
repz
lret
fidivl
pop
sbb
cmpsl
mov
cmp
mov
std
inc
jnp
loopne
popf
cli
sbb
andl
ds
iret
in
ficompl
jmp
mov
ja
xor
mov
loopne
jle
fbstp
xor
cmpsb
sbb
adc
mov
shll
repnz
add
pop
jp
push
dec
dec
add
cltd
lret
add
mov
cmpsl
dec
data16
xchg
jno
adc
ljmp
xor
rolb
scas
movsb
sbb
pop
pushw
out
lods
icebp
xor
jb
sub
jno
cmpsl
es
lds
mov
or
xchg
pusha
fnstcw
pushf
pushf
cmp
sbb
repz
call
mov
test
lock
fildl
jl
or
cmpb
cmp
xchg
xlat
jle
xchg
rcrb
rolb
adc
daa
jbe
dec
cmp
das
icebp
and
xlat
int
movsb
jb
add
xor
xchg
leave
lcall
loopne
fs
bound
lds
shl
jmp
lret
xor
jg
push
jne
mov
pop
sti
adcb
xchg
sub
push
in
enter
add
cmpsl
inc
mov
cmp
xchg
dec
cmp
fbld
aad
lock
jnp
push
inc
je
push
jl
addb
rorb
adc
mov
ret
ja
jne
cld
pop
push
mov
sub
or
add
jns
pop
xchg
adc
inc
fwait
ja
daa
sarl
jb
mov
enter
push
pop
imull
xchg
mov
mov
sub
sub
and
lock
ja
pop
out
cwtl
cmpsl
int3
mov
idiv
mov
inc
into
xor
sub
push
add
outsl
imul
cmp
jno
inc
mov
pop
mov
xor
mov
mov
and
mov
loopne
and
into
ret
popa
and
adcb
push
cmp
lret
or
jne
jne
ss
aaa
jno
pop
cmp
push
lock
xor
lahf
push
fsubrs
jp
hlt
sub
cli
push
mov
cs
cltd
push
sbb
sub
pop
pop
mov
mov
jne
mov
addr16
lods
xchg
xor
insb
inc
idivl
into
lods
in
adc
cmp
scas
rorb
mov
divl
lret
ret
sbb
or
push
push
mov
fs
imul
repz
test
and
mov
repnz
jecxz
push
imulb
push
inc
fwait
and
fiaddl
cwtl
test
in
into
je
ss
or
syscall
mov
shlb
xchg
scas
jbe
xlat
add
nop
in
stc
pop
adc
add
xchg
popa
sbb
mov
or
mov
cmpl
inc
std
and
shl
push
add
push
mov
xchg
rclb
inc
out
push
test
mov
test
adc
inc
cmp
push
pop
mov
xchg
or
ret
pop
mov
xor
adc
jmp
sub
cli
dec
aad
out
int3
cmc
idivl
mov
ss
rorl
test
mov
pop
mov
xchg
lods
xor
dec
pop
or
and
add
and
pop
dec
pop
pop
adc
aad
sub
inc
add
addr16
addr16
jnp
sbb
lret
push
nop
addr16
leavew
and
inc
jg
arpl
ja
or
loope
es
push
sbb
gs
loope
shlb
dec
outsb
or
leave
test
xchg
loop
xor
mov
aad
leave
adcb
add
loopne
add
popl
sub
arpl
incl
insl
push
adc
outsb
dec
mov
jbe
insb
pusha
cmp
pusha
sbb
inc
xor
arpl
insl
mov
dec
rcll
shr
mov
jne
xchg
mov
sub
fistpl
loop
js
sbbb
push
dec
test
cmpsb
and
loop
mov
jno
ja
inc
mov
sarb
dec
test
cwtl
jnp
pop
inc
adc
fwait
lea
jle
pushf
and
mov
sbb
aaa
and
das
and
sarl
cld
lret
mov
rclb
test
sbb
dec
stos
loope
sub
test
in
addb
shrl
js
stos
or
ja
rcrb
push
add
xor
cwtl
mov
imul
xor
loopne
stos
add
idiv
pop
aas
arpl
fmull
mov
jge
mov
push
or
jecxz
int3
loopne
mov
dec
inc
jmp
iret
scas
sbb
dec
fs
movsb
jnp
or
arpl
fcmovb
movsl
test
inc
or
or
pop
cmp
les
push
or
into
movsl
jmp
je
pop
cmp
fwait
inc
pushf
scas
sub
dec
push
dec
jl
lock
ljmp
cmpsl
mov
repnz
jns
xchg
or
aam
aam
xlat
sbb
inc
pop
push
xchg
and
xor
sub
mov
nop
scas
cli
cld
enter
lds
testl
adc
loop
int
mov
push
adc
sub
jnp
add
mov
pop
repz
xor
mov
or
pop
mov
pop
testb
inc
stos
movsb
loopne
mov
dec
cmc
imul
lahf
jno
enter
sbb
movsl
sub
and
popfw
mov
inc
xlat
pop
dec
shl
fdivl
in
fsubrp
icebp
push
hlt
dec
fists
out
in
inc
jmp
xor
mov
add
push
cwtl
and
add
inc
pop
sub
dec
mov
ss
mov
mov
dec
cmp
imul
mov
inc
sub
mov
xor
rolb
ftst
leave
push
aaa
xchg
mov
shr
jns
dec
push
repz
or
lods
pop
aam
frstor
pop
mov
mov
mov
in
jp
out
mov
cmp
jl
mov
cli
mov
gs
rcrb
sbb
ds
mov
dec
repnz
add
xchg
repz
jo
or
push
xor
xchg
addr16
adc
cmp
ds
dec
mov
repz
pop
imul
ret
mov
sub
scas
loope
mov
mov
repz
xchg
adc
fsubr
hlt
xchg
push
mov
push
sub
int3
inc
jo
sahf
xorb
mov
xchg
add
xchg
lods
in
mov
jecxz
repnz
andb
push
ss
ljmp
add
jecxz,pn
jge
shlb
aaa
clc
jo
in
gs
cltd
ljmp
test
add
xlat
xchg
jnp
cld
jmp
pop
sbb
movsl
inc
push
jmp
call
lahf
push
adc
addr16
fcomps
xor
scas
sbb
pop
or
mov
adc
mov
jecxz
inc
mov
out
dec
pop
push
stos
into
fs
mov
push
std
repz
stos
mov
aad
or
dec
stc
ds
adc
dec
hlt
dec
push
data16
in
lock
or
dec
test
addl
fldl
in
push
je
or
roll
push
in
xchg
cmp
mov
and
js
mov
subl
mov
loope
std
sbb
adc
or
iret
push
add
hlt
andb
sub
and
das
push
xchg
add
dec
mov
imul
call
and
loope
ret
scas
iret
cmpl
push
fisubrl
and
movsb
pop
fadds
mov
dec
push
lret
sub
fcmovne
mov
push
jno
mov
sbb
mov
mov
cli
cmp
scas
mov
dec
je
ds
cli
insb
dec
add
inc
imul
or
push
add
push
into
inc
hlt
add
into
ret
ficoml
xchg
mov
ss
addr16
andl
mov
pop
jecxz
int3
and
iret
mov
call
leave
jns
test
cmc
push
mov
out
unpckhps
scas
jns
mov
or
test
mov
das
cs
cmpsl
in
push
lds
add
shll
sbb
mov
insb
pop
scas
mov
das
adc
adc
enter
xchg
xlat
cmp
lahf
es
cmp
insl
sbb
ljmp
pop
jne
mov
fcom
in
das
inc
lds
stos
not
sbb
pop
mov
add
clc
lock
lods
cmp
lods
inc
ret
or
lock
dec
into
movsl
gs
mov
add
subb
xor
xchg
mov
dec
movsl
jmp
lret
jmp
xor
jecxz
add
push
xchg
xchg
mov
loopne
xlat
xchg
lahf
inc
mov
mov
shlb
lret
mov
int
cmpsl
push
inc
lock
repz
das
adc
sbb
shlb
sarl
sub
inc
cmp
pop
jmp
out
or
or
in
sti
mov
jge
pop
sub
add
inc
pop
cs
mov
rclb
bound
shlb
cli
rcr
jb
es
nop
sub
adc
mov
jge
dec
adc
mov
aaa
fistpl
rcl
dec
lcall
scas
adc
iret
jnp
test
pop
mov
pop
push
pop
in
pop
ud0
mov
push
mov
sahf
adc
jmp
or
int
out
mov
lcall
aas
repz
sbb
inc
jbe
icebp
xchg
xchg
mov
pop
push
pop
stos
dec
sub
sub
add
pop
jp
sbb
push
xor
sti
pop
add
imul
sub
pop
xchg
mov
push
in
cli
sahf
xchg
push
xchg
sub
push
xchg
pop
dec
jnp
cld
lds
shlb
jnp
mov
xor
movsb
rolb
xchg
orl
push
mov
dec
add
inc
inc
ret
out
test
shrb
aas
mov
xor
pop
mov
pop
movsl
cmp
cmp
sub
adc
xor
pop
and
cmp
jne
scas
notl
loopne
bound
lahf
jl
shrb
xchg
dec
mov
dec
aaa
push
inc
inc
test
cmp
mov
xor
aad
add
mov
pop
and
negb
mov
push
jecxz
decl
xchg
xlat
je
sub
sbb
scas
lds
leave
cmp
lcall
mov
aaa
mov
scas
lret
hlt
out
out
xor
lods
adc
rcl
mov
push
stc
int
mov
add
addr16
fiaddl
adc
mov
imul
add
cs
lahf
sub
outsb
inc
js
arpl
test
sub
fnstcw
jmp
add
mov
cmp
jg
bound
lret
lock
or
int3
dec
sub
mov
mov
pop
dec
int
fsub
mov
mov
jnp
nop
cs
push
lret
ret
in
enter
inc
jmp
mov
repz
inc
fcompl
jl
sub
jmp
mov
sub
jl
getsec
fadd
wrmsr
add
int3
push
mov
ljmp
adc
ret
mov
or
push
lock
dec
mov
jge
lods
cld
or
in
or
icebp
push
mov
int3
jno
cmpb
cmp
aam
cmp
lahf
xor
loope
pop
fcoml
cmp
push
mov
fcoms
gs
lods
push
lds
mov
or
cmp
push
xchg
lock
jns
imul
or
add
imul
jb
xchg
imul
gs
gs
pop
push
inc
add
movsl
sbb
mov
out
pop
movsl
jmp
cmp
sub
mov
cmp
popa
aas
jecxz
inc
fists
or
sti
or
xor
xor
insb
leave
push
cmpb
cmc
mov
loopne
frstor
or
mov
pop
insb
aas
xor
mov
mov
mov
xor
xchg
dec
cmpsl
pop
test
cmp
pop
movsb
xor
pop
mov
icebp
and
mov
push
jg
xchg
pop
push
sbb
shlb
jbe
jl
jno
lock
icebp
cmp
sub
rclb
push
jns
add
ret
js
sub
jae
cmp
dec
mov
push
jbe
mov
fs
mov
mov
outsl
loope
mov
cmpsl
ss
and
ss
cli
mov
frstor
daa
fbstp
sahf
cmp
or
dec
push
test
int
loopne
mov
divb
mov
xchg
loopne
addr16
cmpsl
add
sahf
insb
fcomps
push
adc
push
loope
sub
add
push
pop
xor
sub
sarl
aad
outsl
aaa
sbb
leave
in
sub
sub
ret
add
stos
jae
xor
push
data16
dec
loope
jmp
adc
cmp
add
sub
aam
cli
addr16
div
pop
pusha
nop
lds
orl
aam
xchg
sahf
fldcw
test
stos
xchg
into
out
mov
out
daa
insl
push
test
adc
pop
push
into
movsb
lahf
dec
es
data16
iret
mov
in
stos
pop
test
mov
sbb
test
or
idiv
mov
sub
and
ret
insl
jmp
cmpsb
into
sbb
dec
stos
mov
sub
ljmp
fcomi
push
in
shrl
and
lahf
mov
pop
bound
mov
xchg
sub
ret
enter
cmp
ret
pop
adc
and
test
outsl
clc
lea
lcall
add
mov
dec
cwtl
aam
pop
js
ss
push
push
mov
jns
fdivrl
add
mov
mov
insb
push
xor
sub
movsb
pop
dec
mov
and
sbb
jecxz
je
pop
add
fsubrs
adc
rclb
out
loopne
pop
xor
dec
inc
int3
jno
inc
cmp
or
jae
ss
mov
inc
fnop
imul
lret
xor
mov
push
stos
jle
outsl
jg
mov
sbb
inc
scas
pop
bound
bound
fsts
test
mov
and
adc
inc
adc
aad
xchg
cld
mov
lret
arpl
inc
sub
shrl
add
dec
iret
mov
push
add
adc
rcll
dec
mov
cmp
stc
ret
icebp
test
mul
mov
sahf
in
mov
loop
xchg
dec
adc
icebp
adc
mov
adc
hlt
jmp
lods
jmp
fwait
xor
mov
mov
std
mov
pop
mov
fsubrs
mov
test
mov
addw
cmp
sbb
xor
and
test
xchg
jmp
xchg
pop
cmp
std
push
add
test
dec
inc
mov
pop
mov
cmpl
dec
sbb
jo
loop
or
or
insl
leave
jg
stc
imul
push
cmc
in
fldenv
adc
mov
shlb
dec
aam
push
push
dec
mov
cwtl
subl
and
cmp
sbb
pop
jnp
stos
mov
dec
in
cmp
or
mov
or
push
and
sbb
test
out
pusha
mov
xor
dec
mov
xor
xlat
push
push
js
pop
xorl
xchg
xchg
jg
jb
jg
nop
add
cs
inc
leave
pop
into
fldenv
hlt
cmpsl
stc
lahf
insb
push
cli
in
mov
jle
mov
shlb
push
dec
dec
xchg
addr16
notb
fcmovbe
or
mov
ret
mov
ret
pop
xchg
lret
pcmpgtw
push
xchg
sbb
int3
fisubrl
daa
xchg
push
inc
add
shlb
daa
mov
add
push
data16
cmp
dec
mov
ret
mov
fdivs
test
sbb
loop
jg
xor
rcrl
push
rcl
shr
jns
mov
jecxz
xchg
push
insb
jne
iret
mov
nop
imul
jg
pop
mov
push
testb
add
sub
mov
popa
pop
cmp
movsl
nop
jge
jecxz
sti
dec
push
inc
cmp
adc
sbb
ret
int3
jmp
cmpsb
inc
lds
xchg
lcall
mov
test
cmc
mov
adc
fstpt
pop
sbb
fsubrs
in
and
push
nop
inc
aad
rcr
jae
add
adc
push
inc
imul
imul
in
out
add
daa
mov
cmpb
mov
add
leave
ss
int
mov
sbbl
mov
and
clc
pop
mov
in
push
mov
lock
add
ficompl
aaa
decl
mov
in
ss
test
mov
movsb
addr16
mov
je
and
push
sbb
gs
bound
push
mov
mov
lahf
sbb
jle
test
scas
xor
mov
rcrb
mov
nop
push
les
sbb
jo
jnp
sub
jae
sahf
mov
pop
sub
gs
test
mov
xchg
cwtl
shlb
pop
jmp
push
bswap
push
mov
mov
push
js
lods
repz
enter
rep
out
pop
jg
add
mov
xchg
and
mov
ret
dec
call
enter
les
dec
stos
pusha
lods
lock
push
popa
mov
push
int3
cld
fildll
mov
hlt
jnp
cld
sbb
pushf
inc
cmp
jb
cmp
mov
dec
cmp
cmc
sub
js
jp
xchg
inc
aas
mov
jp
mov
dec
inc
mov
ja
xlat
sub
stc
mov
and
es
stc
shlb
bound
cmpsb
pop
adc
xorl
pop
iret
andb
imul
das
test
daa
mov
xchg
add
push
inc
inc
cmp
popl
mov
and
stos
mov
mov
data16
out
jmp
sbb
sbb
ret
dec
lock
mov
and
shrl
loope
adc
pop
xor
cmp
inc
sbb
popa
clc
xchg
call
mov
cwtl
icebp
mov
js
push
and
push
sub
jno
popa
clc
xchg
call
mov
cwtl
icebp
mov
js
push
and
push
sub
jo
popa
clc
xchg
call
mov
cwtl
icebp
mov
js
push
push
dec
fldenv
sahf
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
and
adc
pusha
cmpb
mov
adc
cs
loopne,pt
lock
sarb
inc
mov
sahf
insb
scas
adc
inc
out
push
fwait
mov
das
nop
mov
outsb
sarb
mov
sahf
xchg
scas
enter
adc
pop
out
push
inc
push
xchg
cmp
mov
addb
or
add
jns
fs
xor
lea
jne
lock
xchg
aam
int3
mov
mov
fdivp
push
int
fnsave
vpsrlw
pop
lods
add
ficomps
push
jns
xorl
dec
xor
mov
xchg
sub
bound
jecxz
mov
add
in
cld
call
mov
repnz
add
outsb
mov
rcrl
jle
dec
cmp
mov
inc
clc
xor
mov
xor
adc
movsl
sbb
fcompl
add
out
mov
sbbl
sbb
pop
shrl
push
shrb
jnp
data16
add
or
inc
out
idiv
pushw
sub
imulb
mov
pop
repnz
sarb
dec
mov
je
push
stos
xor
push
mov
jge
dec
xchg
cmp
sbb
push
bnd
jno
or
add
insb
orb
cltd
sub
sub
int
lret
inc
xor
jo
inc
out
push
mov
cs
loopne,pt
lock
shrb
and
adc
inc
out
push
mov
cs
loopne,pt
lock
shrb
and
sarb
cmp
leave
rol
or
xchg
bound
rsm
rorl
lds
sar
add
jbe
fildll
push
fstps
les
and
jecxz
fidivl
sub
call
jb
pop
push
push
adc
cltd
add
fwait
lahf
stos
popf
jle
mov
add
push
stc
movsb
cltd
pop
out
loop
cmc
cmpsb
push
sub
mov
int3
js
mov
pmaddwd
shl
cmp
lock
inc
jg
call
jne
push
add
and
push
pop
push
aam
push
dec
mov
or
jno
lcall
cld
sbb
mov
repnz
out
stos
sub
fldt
lcall
and
das
dec
sbb
leave
into
dec
sti
lds
gs
inc
xchg
fistps
ss
xor
lds
mov
push
mov
sbb
xor
lock
aad
adc
sbb
sti
aad
aaa
mov
test
leave
mov
xchg
gs
jg
inc
out
movsl
pusha
push
adc
pop
mov
mov
lahf
out
lret
xchg
dec
or
jge
loope
jecxz
iret
sub
jnp
testl
jl
cs
push
test
jl
enter
rolb
lret
and
fnstenv
aam
dec
pop
lods
idiv
push
mov
addb
andb
pusha
cltd
filds
bound
test
fs
mov
push
mov
cmp
xchg
push
pop
sub
pop
mov
xor
pop
bnd
push
mov
xor
inc
cmp
test
dec
push
pushf
or
dec
in
insb
in
ret
push
pop
orl
pop
fildll
mov
sbb
jge
push
insl
mov
cmp
push
mov
cmc
int3
and
hlt
jne
bound
adc
orb
test
psrad
jle
movsl
loopne
xor
xchg
cmp
ss
push
fnstcw
jg
jbe
notl
or
add
mov
cmp
fwait
mov
sbb
cmp
xchg
leave
cmp
fsubl
dec
mov
sbb
int3
fsts
dec
mov
xchg
dec
cld
lock
fnstenv
mov
cmp
and
jnp
arpl
adc
fldenv
js
jbe
pop
ds
dec
sbb
mov
add
push
sbb
mov
dec
cltd
movsb
data16
dec
dec
mov
call
mov
inc
bound
mov
fbld
out
xlat
cmp
xchg
mov
andb
aaa
loope
into
inc
inc
xor
fs
rcl
data16
clc
shr
xor
pop
push
push
lea
test
mov
jecxz
jge
scas
out
mov
xchg
jp
cmpsb
outsl
shl
cmc
es
movsl
sbb
lcall
mov
rolb
cld
enter
stos
mov
and
movsl
je
cltd
or
or
in
popf
xchg
pop
pop
xor
and
subl
xchg
mov
cs
cmp
jge
fcomps
lret
jmp
jnp
xor
xor
xor
mov
sub
pop
push
jecxz
pop
mov
mov
js
inc
dec
or
jmp
jae
xchg
test
test
test
inc
std
pop
push
dec
adc
int3
mov
cmp
out
jecxz
movsl
xchg
or
cwtl
icebp
in
xchg
fcomps
xor
push
pop
sbb
sbb
ret
ss
inc
ret
push
jg
bound
neg
insl
xor
inc
push
push
sbb
aas
push
movsb
dec
or
rcrl
movsb
push
int3
clc
fwait
lods
aam
mov
mov
or
les
das
add
ret
or
pop
pop
adc
in
test
das
in
ljmp
cmc
into
dec
lcall
js
fwait
or
movsb
jo
addr16
xor
jl
pop
inc
jne
pop
pusha
lods
pop
je
dec
mov
loope
aaa
add
mov
mov
mov
insb
std
add
mov
enter
mov
ret
push
enter
sbb
inc
js
loope
pop
scas
pop
mov
cld
jno
push
lcall
test
js
imul
or
pop
pop
mov
repnz
xchg
sub
sbb
mov
xor
ret
scas
mov
mov
icebp
push
xor
ljmp
xor
mov
cwtl
sbb
and
xchg
in
insb
jno
mov
lahf
adc
sub
movsb
mov
dec
daa
pop
inc
insb
cmp
and
jecxz
std
in
scas
cmp
mov
jecxz
sub
inc
pop
mov
pop
dec
out
jbe
mov
loopne
shlb
sbb
sbb
hlt
cmp
push
fiadds
xchg
jns
ja
in
or
icebp
insl
test
test
sbb
hlt
cmp
inc
ja
inc
cmp
sub
xchg
mov
inc
or
dec
mov
xchg
xchg
ret
movsb
xor
loope
cmp
sbb
inc
pop
stos
mov
pop
mov
test
ret
lea
xor
xchg
rorl
xchg
add
mov
mov
jl,pt
cmp
mov
loop
and
sbb
shrb
jle
inc
cmc
aam
xor
lret
xchg
sub
fucom
push
stc
xor
insl
mov
mov
stc
jno
jb
sarb
xchg
sahf
pop
sub
sub
clc
jg
insl
imul
pop
push
lahf
sub
add
jbe
shl
lea
outsl
and
push
pop
sub
test
icebp
in
push
loope
cmp
or
sub
pop
dec
jmp
out
cmp
mov
shrb
mov
call
leave
adc
push
test
into
lea
jl
je
push
ret
iret
ljmp
mov
jl
lea
ss
sbb
dec
lcall
push
pop
pushf
xlat
stos
push
xor
lods
ds
push
sbb
hlt
clc
lret
mov
outsb
insl
xchg
loopne
sub
out
ret
repnz
dec
in
ret
xor
test
and
sub
js
sub
imul
negb
lahf
jb
stos
pop
add
iret
cs
push
repz
mov
jbe
inc
cmp
jns
cmp
lea
mov
add
sahf
add
outsb
or
xchg
dec
dec
out
bound
xor
ret
jge
mov
aad
fistpl
dec
and
inc
push
adc
xchg
stc
or
imul
xlat
pop
mov
cmp
jp
add
stos
mov
test
mov
lcall
xchg
jecxz
mov
mov
les
adc
sub
mov
clc
push
dec
ja,pn
outsb
sti
adc
popa
sub
push
cmp
dec
fcomps
inc
mov
mov
movsl
dec
xchg
out
add
imul
iret
jge
or
cltd
enter
cs
scas
mov
decb
xchg
jge
out
data16
test
mov
ficoms
add
mov
and
ss
bound
pop
sub
in
sub
xchg
mov
xorb
push
jae
push
pop
push
outsl
shr
stc
in
or
ja
xchg
test
pusha
sub
dec
adc
out
cmp
iret
insb
test
das
adc
in
repnz
mov
jmp
mov
push
mov
int
fstl
adc
icebp
inc
inc
xor
sub
xchg
enter
aam
lds
dec
into
fcmovu
xor
pop
mov
into
dec
hlt
pop
cmp
call
push
lock
aaa
push
sbb
hlt
dec
fidivrl
aam
data16
imul
mov
cwtl
in
adc
push
es
sbb
xchg
sti
and
mov
ja
arpl
xor
jno
jl
cmp
sahf
xchg
test
mov
lock
pop
sbb
sbb
jl
stc
data16
dec
cwtl
dec
ret
inc
ret
push
dec
inc
mov
mov
sub
test
sbb
mov
jne
popa
or
es
cmpsl
push
ds
aaa
imul
aas
and
popa
fdiv
push
mov
push
jge
mov
enter
inc
push
stc
int
mov
pop
mov
decl
insl
jmp
sbb
cmpsl
and
jae
jl
mov
aam
shll
xor
inc
mov
stc
je
out
mov
loope
pop
js
ret
add
lock
add
inc
ror
lock
nop
xchg
imul
sahf
push
enter
xorb
icebp
mov
orl
lds
and
sbb
pop
outsl
xchg
mov
and
pusha
jmp
inc
fstl
pop
mov
mov
add
inc
xchg
cmpsl
les
adc
lret
outsl
mov
add
and
cmp
xchg
int3
sbb
sub
sbb
cltd
sahf
and
adcl
pop
fmull
add
mov
mov
in
int
mov
cmp
fstpt
jl
mov
jno
int3
add
inc
ss
pop
nop
adc
adc
jb
js
fstps
pop
js
push
cwtl
fisubl
dec
dec
popa
out
mov
je
movsb
jl
or
scas
xchg
dec
lods
or
lahf
pop
sub
ret
or
push
bound
sub
fnstcw
idivb
dec
cltd
mov
xchg
mov
mov
and
xchg
cmp
inc
notl
daa
mov
fwait
or
or
sbb
xor
testl
jmp
std
mov
lods
mov
mov
mov
jnp
pop
test
mov
xor
jp
cmp
sti
push
std
dec
movsl
mov
cli
ficompl
sbb
jno
cmp
dec
testl
lods
fadd
movsl
int3
jnp
rcrl
jg
sti
sahf
bound
scas
mov
iret
mov
inc
sbb
repz
lds
xlat
or
cmp
aas
data16
popf
std
pop
fisttpll
leave
call
adc
pop
mov
loopne
lods
add
std
fimuls
inc
fisubs
jns
sahf
jno
loopne
loop
adc
sub
mov
add
xchg
testb
pop
out
insb
sub
inc
pop
testb
daa
xor
les
test
es
in
inc
jbe
adc
sbb
gs
test
mov
cmp
lcall
xor
in
insb
jns
pop
enter
bswap
lahf
adcb
push
add
leave
cmp
push
sbb
mov
xchg
push
fisubl
test
add
aaa
sbb
xor
insl
rorb
sbb
sub
and
fcoms
cltd
mov
mov
rclb
jns
aad
out
pop
add
cli
aaa
adc
push
jae
sbb
jecxz
pushl
jl
shlb
mov
mov
test
daa
cmp
cmp
mov
inc
cmp
cmp
repnz
push
add
jnp
in
imul
and
gs
pcmpgtb
jns
adc
mov
inc
ret
sbb
int3
scas
out
jmp
lret
movsl
push
or
pop
push
cs
push
dec
mov
repnz
lret
int
sahf
lcall
jb
push
dec
dec
and
std
shrb
in
add
out
pop
adc
addl
adc
repz
les
pusha
mov
iret
js
jle
inc
outsb
sub
and
add
pushf
shll
hlt
xchg
mov
push
es
mov
bound
dec
xchg
insl
or
push
cltd
xchg
ficoml
mov
outsl
stos
mov
enter
mov
push
mov
xchg
and
mov
imul
jo
es
cmpb
bound
mov
sbb
lea
pop
inc
pop
sub
movsb
mov
enter
jne
call
arpl
xor
or
das
push
cli
push
sar
cmp
xchg
jge
jp
cmp
out
jle
std
cs
add
push
js
push
test
nop
cmp
rclb
mov
mov
ret
push
push
dec
jnp
cs
sub
sti
movsl
fwait
lods
or
pmulhw
push
inc
xchg
fiaddl
and
pop
adcb
and
int
mov
cmp
push
push
nop
and
mov
call
cmp
adc
jnp
daa
pop
shlb
idiv
insb
and
pop
roll
outsb
xchg
sti
sbb
sub
or
push
mov
mov
popa
xor
inc
fidivrs
addl
cmpsl
in
mov
mov
notb
mov
cmp
mov
aas
mov
xchg
xchg
icebp
and
out
push
iret
dec
push
pop
xor
push
jne
cli
add
mov
cmp
fwait
inc
xor
xchg
xchg
mov
push
sub
dec
sub
and
inc
in
xchg
lret
into
lds
inc
mov
into
scas
xchg
lock
cmpsl
aaa
into
ret
jns
iret
adc
mov
cmp
shufps
mov
insb
jmp
lock
jns
pop
jmp
sti
popa
int
daa
sbb
fmull
mov
fmul
por
push
loope
je
popf
std
adc
push
or
jno
aam
jnp
jg
ss
inc
xchg
cmc
loop
fdivrl
nop
call
jle
test
mov
jle
mov
dec
xchg
pop
jae
out
cmp
jecxz
lods
add
sbb
loope
cld
lahf
mov
jecxz
mov
dec
in
push
fdiv
add
sub
push
mov
mov
mov
mov
inc
cmpsl
xor
inc
jnp
cwtl
mov
rorb
adc
sbb
jecxz
sbb
mov
sub
repnz
lock
pushf
add
push
sbb
xorb
daa
mov
add
or
push
int
mov
decl
loopne
push
or
clc
lea
dec
mov
jae
push
mov
aad
clc
movsl
mov
outsb
dec
les
or
xor
cmp
mov
push
pop
pushf
das
xchg
fisubs
push
push
subb
pop
xchg
jp
rclb
push
mov
inc
inc
sub
xor
xlat
cld
sbb
mov
adc
sub
out
test
mov
inc
xchg
mov
pop
push
sti
ret
mov
call
sti
insb
xchg
mov
aaa
sbb
fstps
push
clc
mov
push
sbb
cmp
add
out
cmp
cmp
enter
enter
cmp
mov
mov
xor
jg
dec
leave
subl
xor
lods
sahf
sub
lea
cmc
mov
or
xor
push
mov
js
daa
sarl
enter
loop
fsubrl
gs
test
nop
add
mov
jmp
mov
ja
sbb
loop
mov
mov
mov
push
xchg
push
inc
mov
paddusw
pop
inc
lret
stc
fidivl
lods
jb
push
push
or
data16
cltd
inc
icebp
insb
inc
mov
mov
sub
add
pop
jp
push
lret
loop
loope
repnz
pop
sbb
sbb
mov
ja
sbbb
mov
ficoms
sbb
lret
push
fimull
lds
mov
mov
dec
cwtl
insl
sti
mov
std
cwtl
cld
pop
mov
sbb
inc
and
add
into
ss
sub
pop
int3
xchg
push
jbe
mov
jmp
xchg
mov
mov
xor
arpl
add
scas
or
push
and
or
jmp
mov
sbb
in
out
out
imul
testb
dec
adc
mov
arpl
lods
and
mov
mov
sbb
and
lcall
es
ja
xchg
stc
fbstp
ljmp
imul
mov
adc
mov
repz
pop
sahf
adc
jne
add
cmpsb
lcall
lods
imul
in
repz
rcrb
or
inc
ljmp
lret
cmpsb
mov
movsb
mov
push
push
mov
xchg
xorl
lods
xor
push
incb
std
inc
cmp
adc
jecxz
jge
xchg
cwtl
jb
test
mov
rcll
js
and
movsb
push
dec
pusha
and
out
adc
das
xor
nop
cwtl
cmp
mov
imul
jecxz
cltd
mov
rcrb
and
sbb
push
das
test
cld
push
cmpsl
in
sbb
scas
jp
imul
or
and
push
ljmp
fisttpll
cmp
cltd
add
mov
sbb
or
mov
lds
fsubr
adc
sub
lahf
xor
push
mov
hlt
int3
pop
rcrl
cmp
mov
sti
mov
imul
or
sbb
xchg
leave
lods
push
jle
imul
and
cmp
gs
inc
and
or
jl
add
lds
or
out
cmp
icebp
mov
test
and
dec
xchg
or
xlat
jo
jge
insl
sub
je
lock
fdiv
sub
cmpsb
xchg
inc
push
mov
jl
dec
pop
xor
cltd
cli
jne
or
out
cwtl
xchg
adc
xor
sub
mov
pop
dec
ds
or
xor
mov
sub
dec
dec
mov
pop
leave
lcall
ret
xor
mov
shll
cmp
sbb
cmp
movsb
inc
adc
mov
push
mov
cmp
ss
dec
fimull
cmp
mov
dec
fnop
int3
in
pop
ficoms
pop
arpl
sarb
pop
jb
negb
mov
loope
aaa
inc
rcrb
leave
inc
xor
inc
stos
ja
scas
xorb
dec
jmp
sahf
cmp
in
call
nop
fmull
das
cmp
mov
push
inc
mov
sub
in
fcoml
jnp
mov
scas
pushf
in
adc
lcall
mov
push
aas
pop
inc
inc
adc
inc
xor
int3
push
inc
cld
xlat
lahf
adc
cmp
aaa
push
fsubrs
or
xor
out
repz
enter
adc
adc
xor
add
cmp
clc
aam
mov
push
dec
jno
jge
sbb
out
inc
fstl
hlt
out
or
ljmp
add
sarb
rorl
pop
ja
jbe
adc
out
imul
outsb
ss
push
aas
inc
jecxz
and
push
mov
frstor
scas
incl
cmp
sub
subb
xlat
and
sbb
out
pop
mov
std
cmpl
sbb
jecxz
mov
xchg
push
movsb
arpl
stc
insl
in
mov
xor
test
hlt
clc
or
mov
js
mov
cltd
dec
or
push
mov
mov
cmc
ja
mov
movsb
filds
in
dec
mov
lock
sti
mov
repnz
shlb
pop
test
jg
test
add
pop
mov
insb
les
scas
fmuls
push
adc
outsl
push
fcomps
xchg
fnsave
jae
pop
aad
jp
xlat
xchg
mov
sbb
js
inc
adc
in
dec
testl
fwait
cltd
orb
xor
inc
fdivs
xor
cmp
jo
scas
test
mov
icebp
sub
jmp
es
js
jge
ljmp
push
sub
pop
jle
fbld
push
movsb
dec
inc
jo
dec
rorl
ljmp
and
outsb
insb
lahf
lods
push
mov
ficoms
sub
out
mov
sub
sarl
push
mov
int
test
sbb
pop
jge
les
sub
bound
mov
stc
push
xchg
add
pusha
inc
ret
out
mov
dec
movsb
aaa
and
out
in
mov
incb
pop
lods
gs
mov
pop
call
into
push
xchg
nop
add
jp
pop
mov
call
test
imul
dec
add
or
cld
adc
add
sub
push
mov
lret
aaa
lgs
xor
jo
xchg
xchg
sarl
jo
push
xchg
or
out
call
add
xchg
or
gs
fisttpl
pop
jbe
inc
xlat
pop
jl
push
mull
outsb
shlb
outsb
inc
aad
fwait
dec
into
js
pop
push
push
pusha
int
mov
out
inc
or
mov
sbb
sahf
mov
dec
xor
cli
xchg
dec
sbb
inc
sti
fsubrs
mov
sbb
cltd
pop
icebp
jae
adc
test
out
push
es
mov
mov
cwtl
es
jge
outsb
out
jl
xchg
daa
mov
js
shlb
push
mov
aas
adc
fistl
mov
sbb
fcmovnu
sbb
ss
adc
inc
ret
mov
xchg
pop
xor
inc
scas
adc
inc
out
push
mov
cs
loopne,pt
lock
shrb
and
adc
inc
out
push
mov
cs
loopne,pt
lock
shrb
and
adc
inc
out
nop
mov
cs
loopne,pt
loopne
shrb
xor
insb
sahf
pop
scas
xor
inc
out
sarb
mov
cs
dec
xchg
js
aas
xchg
das
or
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
