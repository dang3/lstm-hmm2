jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
inc
xchg
xchg
js
rcrb
loop
insb
iret
cs
dec
add
add
push
pop
add
add
add
sbb
test
add
add
add
or
add
add
add
add
add
add
add
xor
jge
add
loope
lcall
add
dec
add
test
pusha
add
add
or
imul
lea
push
add
mov
loope
xor
hlt
add
add
lcall
add
add
add
add
add
loope
lret
add
add
add
add
add
add
mov
add
add
add
loope
mov
clc
add
add
lcall
add
add
xchg
add
add
add
add
add
add
add
add
loope
mov
add
or
mov
add
add
add
mov
add
add
add
add
imul
mov
imul
ss
add
xor
test
add
add
add
mov
testb
add
add
add
mov
cltd
add
add
add
add
mov
add
add
add
add
add
add
fiaddl
and
out
repz
add
add
loope
and
js
push
add
add
add
fiaddl
add
push
adc
mov
sbb
sub
pop
add
dec
add
add
add
add
add
add
push
add
add
add
xor
jb
aaa
add
loope
push
add
add
add
lock
fadds
aaa
add
add
add
add
add
add
aaa
add
add
add
clc
add
inc
add
and
enter
add
jo
enter
inc
add
pop
loope
mov
and
mov
add
add
add
add
add
add
lea
sub
inc
add
add
jns
push
add
add
add
push
add
add
add
add
add
add
add
pop
add
add
movsl
add
add
add
add
add
add
jne
pop
add
add
add
add
filds
addl
jne
adc
test
mov
add
dec
add
add
clc
add
in
add
fadds
iret
add
pop
add
scas
add
iret
add
mov
add
test
outsb
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
lea
pop
add
add
add
add
add
add
add
add
add
int
movsl
add
mov
add
add
lea
or
add
add
add
add
aaa
add
loope
or
dec
add
add
add
push
adc
add
add
add
jbe
and
xchg
add
add
add
add
add
add
pop
jbe
clc
add
add
add
inc
add
or
add
pop
daa
add
add
add
pop
sbb
mov
mov
inc
inc
aad
pop
aaa
loopne
jge
jmp
roll
fistpl
dec
mov
mov
jb
hlt
ret
xchg
jecxz
add
push
jecxz
and
ljmp
push
repz
jl
mov
add
sarl
ljmp
ss
dec
and
push
and
pop
mov
mov
push
mov
es
fwait
fs
inc
fcomps
out
stc
sub
mov
scas
jne
add
xor
scas
mov
lcall
repnz
or
push
jne
dec
test
lea
popa
dec
adc
rolb
sub
xlat
pop
xchg
mov
inc
negb
jbe
data16
fidivl
push
cmp
inc
xchg
shl
es
jmp
out
outsb
das
sbb
fisubrl
mov
pop
int
and
or
jle
int3
mov
out
sbb
sub
jnp
data16
jno
vsubps
outsb
inc
lea
lret
jle
mov
jbe
push
adc
insl
fstpl
aaa
adc
xchg
inc
inc
push
movsl
aas
divb
cs
movsl
ds
rorl
sub
push
adc
aam
push
adc
jne
adc
push
mov
lcall
add
pushl
mov
mov
jae
les
rolb
jmp
sbb
in
jbe
jg
xlat
clc
aad
jl
add
nop
add
push
mov
test
stos
add
xor
pop
mov
cmp
sub
push
test
lea
test
jno
in
pusha
pop
imul
fwait
sub
outsb
lds
in
jmp
repz
scas
pop
xor
inc
adc
rorl
outsb
rorb
mov
and
faddl
int3
popa
icebp
fnsave
jb
pop
sbb
stos
adc
std
xchg
mov
lea
and
and
add
dec
pushf
cmp
neg
icebp
mov
jb
clc
leave
xchg
loop
fdivl
lock
int3
cmp
mov
mov
out
ds
loope
xchg
in
rep
adc
or
call
adc
mov
or
jnp
lret
ds
iret
mov
frstor
xor
add
mov
aam
and
cmpsl
repnz
inc
les
mov
cmc
out
and
test
mov
ja
ja
and
rclb
add
mov
stc
xorb
call
rolb
clc
loop
pushf
pusha
dec
imul
inc
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
add
shll
dec
jecxz
xchg
out
mov
inc
add
arpl
jae
add
arpl
arpl
xchg
ret
adc
jecxz
repz
jecxz
adc
jae
arpl
jae
insb
inc
adc
arpl
xchg
push
adc
dec
mov
scas
repz
jecxz
adc
add
push
sub
push
or
jecxz
cmpl
mov
sbb
mov
add
cmp
jb
pop
call
sahf
and
call
ret
loop
rolb
xchg
icebp
data16
add
scas
arpl
and
mov
rorb
js
xchg
cmp
into
push
gs
fdivr
in
and
and
ret
xchg
repz
dec
roll
jecxz
add
mov
adc
arpl
imul
mov
jbe
cmpsl
lret
rep
jecxz
jnp
jbe
arpl
adc
xor
cmp
es
xor
or
or
and
cmp
scas
imul
inc
in
jb
bound
mov
mov
xchg
repz
xor
lds
xchg
xor
cmp
inc
jmp
and
out
rcr
mov
cmpsb
cld
mov
xchg
jnp
mov
pop
pop
inc
sbb
insb
packuswb
bound
push
int3
xchg
xchg
movl
filds
outsb
add
sbb
pop
and
pop
in
lods
xchg
shlb
ret
xchg
repz
add
arpl
jae
add
jae
arpl
xchg
ret
adc
jecxz
repz
jecxz
adc
push
xor
jae
add
jae
arpl
xchg
ret
xchg
inc
icebp
fbld
push
or
test
add
adc
xchg
std
sub
dec
imul
cmp
jge
icebp
fmuls
and
ret
or
sub
inc
cltd
les
cwtl
xor
sbb
push
insl
and
iret
popa
mov
mov
xor
mov
movsl
dec
sbb
mov
cli
cs
das
add
lds
and
arpl
aaa
jo
sbb
push
jo
aam
outsb
pop
nop
into
mov
jle
aam
and
iretw
pop
sbb
push
cmpsl
lock
gs
int
jge
in
clc
jl
add
add
scas
popa
jo
dec
dec
push
jl,pt
mov
jne
repnz
jmp
adc
fbstp
jb
cltd
add
add
mov
inc
mov
outsb
or
mov
sub
mov
jne
bnd
or
cld
pop
es
xchg
push
sub
inc
lds
xor
das
pop
pushf
addr16
push
mov
or
mov
out
scas
push
fstps
push
xchg
xor
mov
insl
mov
jno
stos
jae
jecxz
movsl
add
stos
imul
sub
test
pop
int3
loopne
adc
subb
cwtl
mov
mov
ljmp
ljmp
pop
lret
mov
xchg
test
fstps
lcall
aaa
arpl
fistpl
adc
push
pop
je
jmp
xchg
xchg
push
je
sarl
and
mov
fiaddl
cmpsl
xor
push
push
and
rcll
jecxz
xchg
or
cltd
mov
add
inc
inc
in
hlt
outsl
mov
and
js
sbb
xchg
or
dec
sub
rorb
mov
call
shlb
pop
push
fxch
adc
fwait
mov
in
movsb
rorb
mov
inc
pop
out
sbb
js
imul
test
mov
hlt
xor
jmp
sbb
mov
sub
imul
push
mov
ret
xor
das
or
stos
imul
pop
cltd
jmp
movsb
xchg
das
jg
jns
and
mov
xchg
jge
dec
out
pop
push
movsb
addr16
jp
adc
jmp
xchg
add
es
imul
decb
in
into
subb
arpl
fs
lea
ret
sbb
hlt
aam
cwtl
ljmp
movsl
call
cli
push
push
or
gs
add
inc
or
mov
and
movsl
test
sahf
fldt
roll
mov
push
sub
in
inc
jb
icebp
ror
inc
xor
xor
mov
popa
sahf
jge
jmp
push
xor
inc
mov
cs
lcall
out
repnz
xchg
cmp
imul
stos
arpl
mov
adc
lret
orl
xor
push
cmpsb
leave
sbb
cmp
sbb
dec
daa
int3
sbb
cmc
mov
xor
or
icebp
lret
xchg
jmp
cmp
mov
ljmp
into
mov
push
inc
push
cltd
stos
xchg
pop
cwtl
xchg
stos
or
xchg
xor
mull
cmpsb
sub
out
cmp
xchg
push
mov
jns
mov
inc
gs
sub
xchg
dec
inc
inc
incl
xchg
lods
xchg
fbld
xlat
or
sbb
imul
fwait
sbb
es
dec
jmp
adc
imul
shld
jae
lock
call
xor
xchg
push
xchg
dec
insb
shll
xchg
sub
jbe
std
inc
test
push
loopne
pop
adc
das
add
lret
rcrl
mov
adc
fisubl
repnz
ss
push
sti
imul
sub
loopne
adc
neg
scas
in
pop
nop
shll
into
xchg
mov
sarl
test
out
cmpsb
xadd
mov
jle
es
pop
push
xor
fiaddl
mov
int
jge
sbb
outsb
xchg
xchg
jg
fs
mov
sbb
sti
jb
or
dec
fisubs
and
iret
movsl
sahf
xchg
inc
mov
add
shl
lods
mov
push
mov
pushf
mov
mov
mov
adc
lret
push
and
sub
ret
jp
inc
jecxz
repz
xchg
adc
test
mov
xor
test
add
jne
inc
fidivs
jge
mov
mov
movsl
es
dec
out
xchg
pop
nop
add
mov
int
push
xchg
xor
and
repnz
mov
ret
pop
mov
es
imul
jbe
push
lcall
shl
jo
in
adc
ja
pop
mov
dec
dec
jmp
lea
imul
pusha
lret
pop
in
scas
das
sbb
xor
sub
pop
pop
pop
stc
push
stos
jl
addl
das
dec
rcr
dec
arpl
mov
imul
std
mov
sti
jns
or
dec
popf
or
mov
fstps
mov
out
jle
and
jae
fsubrp
addr16
les
and
and
frstor
add
aad
in
or
lods
jnp
or
mov
fldenv
stos
sbb
ja
pop
stc
sti
push
ret
pop
fsts
addr16
and
mov
scas
paddsb
faddp
imul
jae
hlt
add
adc
jbe
repz
mov
sub
cmp
insl
push
jecxz
fs
mov
xchg
shll
jge
sti
lods
fwait
sbb
and
frstor
sbb
or
sar
pop
lods
imul
xchg
mov
mov
sub
push
cmpsb
xchg
out
fcomps
js
xor
subl
push
sbb
cld
inc
ret
out
sbbb
sbb
and
fninit
call
mov
or
mov
dec
mov
cld
lahf
or
mov
and
bound
ds
and
or
mov
xor
dec
and
jns
es
testb
cs
out
fwait
cmp
fisubrs
mov
or
sub
lock
into
jo
stos
push
aad
add
out
and
adc
shlb
mov
add
in
in
fwait
xchg
lahf
js
mov
xchg
cmp
in
mov
jns
repz
pop
pop
xchg
in
jge
pop
jp
mov
jle
int
daa
stos
shr
mov
pop
clc
pop
and
sbb
pop
dec
sub
popa
push
int
movsb
faddl
test
idivl
xor
popf
xchg
sarb
in
cmp
shr
gs
push
pop
loope
ficoml
cltd
aam
mov
dec
mov
lods
cmpsl
cwtl
cmp
mov
jno
push
push
fists
test
int3
jl
jno
inc
pop
rcrl
imul
and
out
adc
shlb
ficoms
jp
mov
inc
xlat
mov
dec
mov
add
int3
sub
loop
inc
push
push
mov
popa
lahf
xchg
pop
out
push
push
stos
sti
push
daa
mull
pop
mov
add
xchg
inc
sub
aad
sub
mov
aas
pop
test
push
dec
sbbl
push
mov
das
mov
adcl
fucomp
dec
outsl
cmpsb
hlt
repnz
fsubrs
add
cmp
or
jae
push
push
sbb
or
test
and
pusha
xor
shll
pushl
subl
flds
lods
fcmove
cmp
outsb
sub
mov
xor
mov
adc
jg
out
lahf
adc
pop
push
jl
loop
or
cmp
pop
mov
push
je
inc
pop
stc
pop
xor
xor
mov
or
jne
out
ret
mov
lcall
mov
stos
jmp
lock
repnz
jno
mov
in
or
mov
popa
cmp
or
clc
iret
inc
mov
jg
dec
xchg
into
or
adc
push
repnz
or
jbe
pop
or
decl
and
xor
sbbl
mov
inc
pop
fwait
mov
xor
scas
and
call
lret
pop
repz
pop
pop
jecxz
pop
mov
pop
stc
lret
cwtl
shlb
sub
mov
inc
xchg
sbb
fcomps
mov
mov
jne
bound
dec
aaa
adc
stos
push
and
adc
inc
xchg
sbbb
inc
jne
and
mov
arpl
jl
cmc
stos
and
xchg
mov
aas
push
xor
sbb
cmp
imul
adc
push
jo
lret
inc
sub
lahf
fbstp
movl
add
sbb
mov
imul
sbb
xor
lret
bound
or
push
dec
cmc
mov
adc
ljmp
outsb
ja,pt
pushf
rorl
lock
inc
aad
sbb
pop
xor
insb
addr16
pop
out
mov
xor
xchg
push
push
xchg
popa
pop
mov
xor
movsb
dec
es
fldl
push
mov
dec
xchg
dec
mov
ljmp
add
sub
pop
cld
mov
in
mov
add
in
and
imul
pop
xchg
mov
mov
mov
sbb
jmp
jle
cmp
dec
xor
sub
dec
jnp
push
and
aas
fwait
inc
sub
loop
sti
pop
inc
cmp
push
and
cltd
outsl
mov
adc
mov
jmp
lcall
mov
insl
xlat
mov
sbb
pop
cs
inc
cmc
lods
or
jbe
cmc
call
in
adc
or
mov
cmp
sbb
push
mov
das
sbb
adc
lcall
pop
and
push
adc
ror
mov
test
insl
fisttpll
std
mov
mov
pop
push
adc
xchg
sarb
lret
pop
sbb
movsb
push
loop
mov
fadds
push
sbb
mov
iret
stc
rolb
push
push
pop
fcoml
out
add
js
sbb
testl
or
push
jbe
mov
dec
lret
stos
xor
add
and
jnp
inc
cld
jecxz
sbb
cli
mov
ja
sub
mov
xchg
add
or
push
pop
fiaddl
jo
iret
xchg
sbb
jne
sbb
jae
mov
stos
lods
inc
xor
aad
clc
lods
jmp
cmp
jb
dec
xlat
push
jbe
sbb
dec
je
jae
pushf
sbb
mov
jg
mov
mov
mov
shlb
enter
daa
stos
aas
aaa
mov
jns
cmc
shll
aam
pusha
cld
add
addr16
shrl
inc
aas
cmp
adc
push
adc
std
sbb
iret
sbb
cmp
xchg
adc
and
scas
sub
lock
out
push
lret
pop
xchg
inc
dec
jns
push
out
push
adc
fcmove
mov
xor
iret
fidivrs
clc
hlt
push
and
dec
sub
cmp
or
push
mov
rorb
rcll
xor
sub
pushf
cmp
movsl
dec
inc
pop
sub
push
in
inc
jbe
jmp
stc
pop
lahf
add
mov
sub
divb
scas
lahf
pop
scas
daa
add
loop
mov
imul
dec
mov
mov
inc
in
or
enter
dec
mov
inc
xorb
mov
popf
shll
add
inc
inc
fisubrl
cwtl
lret
pop
stc
cmc
add
add
pop
xchg
jmp
push
pop
in
sbb
or
push
loopne
rorl
push
fstl
insl
inc
xlat
pop
sub
add
mov
jecxz
mov
mov
push
xor
xchg
xchg
push
jmp
stc
pop
call
ljmp
mov
popa
add
mov
adc
mov
lahf
mov
mov
hlt
jne
xchg
mov
clc
push
push
inc
jge
shlb
lcall
lcall
mov
inc
mov
dec
nop
push
lods
mov
fdivrl
push
stos
shll
mov
lea
ds
xchg
add
xchg
out
repz
mov
mov
cltd
push
lahf
lea
pusha
std
inc
cli
pop
xor
or
inc
enter
aam
jp
outsl
js
dec
mov
xor
push
popf
sub
dec
test
adc
cmp
out
fisubs
lret
pop
dec
xchg
pop
pushf
out
adc
divl
inc
out
push
mov
cwtl
ficoms
add
push
cmpsl
hlt
lret
leave
popa
mov
xor
mov
mov
int3
lret
dec
movsb
push
shlb
out
outsl
test
les
or
cmpsl
dec
aas
sbb
arpl
in
mov
and
outsb
sbb
mov
rolb
mov
sbb
jno
lcall
mov
call
push
mov
pop
dec
test
mov
xor
pop
cltd
testb
loop
stos
fwait
jge
mov
or
ss
bound
hlt
or
fcoml
push
sbb
adc
xor
testb
sti
add
pop
pop
loop
movsb
add
mov
jne
pop
rorl
test
and
leave
add
subb
pop
ficoml
cmpsl
int
cmp
pop
mov
test
xchg
inc
pop
push
inc
sub
push
mov
sbb
test
adc
and
out
jle
inc
iret
loop
iret
push
loopne
cmc
jnp
adc
nop
popf
jp
lods
sbbb
cmpsl
outsb
cmc
inc
adc
dec
test
or
movsl
mov
pop
jbe
xchg
das
push
pop
push
jae
mov
mov
int3
roll
data16
cld
xor
jmp
sub
lcall
or
and
sbb
jl
imul
lcall
cli
add
stc
pop
lds
hlt
mov
es
jmp
cltd
sbb
insl
inc
dec
cmpsb
xor
pop
ffreep
cmc
and
cli
adc
and
fldenv
and
test
lock
fimuls
dec
das
stos
xchg
push
mov
xor
in
imul
ret
shl
sub
pop
inc
or
test
into
pop
sahf
mov
inc
out
gs
inc
mov
dec
jle
sbb
les
cld
pop
call
jge
neg
pop
aaa
daa
or
push
push
ror
mov
xor
inc
dec
xor
pop
adc
xor
into
mov
sub
cltd
pusha
pop
aad
movq
cmp
push
mov
test
push
jne
ficomps
pop
and
and
jbe
ja
clc
repnz
jl
mov
mov
lods
out
aaa
inc
push
sbb
scas
sub
outsb
cwtl
shlb
imul
seto
mov
sbb
pop
lea
shlb
cli
push
test
adc
sbb
and
jp
and
dec
jae
cmpsb
shll
cli
xchg
pop
push
mov
jnp
ret
lods
mov
mov
xchg
outsl
xlat
sub
cmc
test
cs
xlat
xchg
das
insb
loop
clc
inc
cmp
lea
cs
pop
add
mov
aas
test
call
mov
mov
cld
lods
push
xor
lret
push
jle
roll
adc
and
ficoms
lods
out
jl
xchg
loope
pop
mov
and
sub
rorb
jnp
and
dec
lods
pop
int3
jbe
fistpll
push
jno
jbe
test
ds
movsl
push
in
pop
std
push
fcoms
lock
push
ret
adc
sub
addl
sbb
lret
push
stc
mov
jecxz
mov
arpl
pusha
pushf
and
out
and
or
jle
leave
mov
add
das
mov
outsb
xchg
dec
les
lods
add
outsl
loope
je
cmc
mov
inc
ret
lret
pop
and
int
dec
inc
xchg
dec
pusha
adc
and
std
and
int
jae
xchg
int3
mov
stc
xor
push
stos
sahf
and
xor
dec
mov
mov
mov
sarb
stc
and
xor
loopne
inc
xorb
nop
shrl
pushw
xor
pop
mov
push
mov
aaa
mov
cltd
fimull
cmp
or
jns
xchg
dec
jnp
lock
fld
mov
fstps
int
pop
mov
inc
out
mov
xchg
leave
mov
ds
add
lock
dec
enter
or
shlb
pop
lret
xor
aas
mov
or
push
cmp
fisubs
push
mov
out
and
adc
jg
jmp
sbb
insb
js
adc
dec
ds
into
lea
add
dec
subb
push
xor
mov
sbb
xor
inc
mov
and
fmull
arpl
pop
mov
es
aad
ja
mulb
lahf
repnz
popf
push
xor
jecxz
mov
mov
loopne
ds
mov
lahf
pop
fdivrs
psubd
or
daa
insl
mov
dec
rcrb
sbbl
adc
scas
pop
je
dec
cmp
push
lret
mov
je
dec
sub
shl
cltd
inc
jp
push
mov
sti
hlt
add
xchg
ja
mov
jb
sbb
testb
sbb
mov
mov
push
cmc
out
pop
cs
fistl
xor
movsl
add
push
pop
das
in
xor
fiadds
adc
pop
xor
mov
int
fsub
sbb
cmp
sub
lret
inc
sarl
mov
add
mov
dec
fwait
pop
or
andb
jbe
in
in
pop
stos
inc
sbb
arpl
lcall
shll
loopne
rolb
test
in
pop
jns
pop
aas
pushl
lcall
popf
repz
or
jae
out
push
inc
call
arpl
push
popf
scas
in
into
inc
adc
negl
sahf
sub
adc
in
mov
push
or
xchg
sub
loope
stos
jno
aaa
fs
dec
loop
imul
cmp
and
out
or
je
ss
in
insb
je,pn
xchg
push
or
adc
fwait
xorl
push
ret
mov
mov
mov
xor
jo
test
mov
pusha
jg
ljmp
xor
mov
scas
sub
dec
pushf
decl
lcall
in
adc
aas
jmp
repz
jae
push
inc
out
or
xchg
jo
xchg
mov
je
push
clc
loopne
push
and
add
and
pop
dec
es
scas
shrb
mov
cs
iret
ret
cmpsl
pop
iret
mov
and
call
jecxz
test
inc
cmpsb
mov
xor
push
sti
mov
outsb
gs
add
in
pusha
sub
add
js
fdivp
pop
push
mov
addl
jnp
push
jp
clc
ja
jg
xor
movl
sub
mov
bound
movsb
ficompl
xchg
add
loopne
repz
dec
in
inc
mov
jle
push
adc
sbb
mov
jl
and
lcall
inc
sahf
sarl
jno
jnp
sub
jne
jnp
mov
outsl
adc
addl
shr
std
add
mov
loop
dec
fdivs
xchg
mov
mov
cs
lds
lret
in
adc
inc
lcall
sahf
das
mov
or
mov
cmpl
push
pushf
mov
cwtl
bound
inc
xor
push
js
push
cmp
out
mov
aaa
add
es
ret
test
repnz
xlat
mov
mov
push
adc
scas
cli
mov
orl
xor
adc
lcall
gs
repz
push
lea
jmp
enter
call
clc
cs
mov
aad
push
clc
sub
push
jmp
lods
mov
stos
lods
adc
xchg
fs
adc
mov
add
andl
enter
jne
arpl
sub
pop
shll
sbb
or
and
xchg
adc
sbb
jns
sbb
sub
dec
jl
ret
jle
pop
clc
pusha
das
in
cld
pushf
in
pop
xchg
push
cmpsb
push
movsb
into
movsl
les
pop
in
iret
decl
adc
mov
cmp
pushf
jge
call
lret
ror
mov
xchg
repz
add
arpl
jae
add
jae
arpl
xchg
ret
adc
jecxz
repz
jecxz
adc
push
xor
jae
add
jae
arpl
xchg
ret
sbbl
add
repz
add
arpl
jae
add
jae
bound
xchg
ret
adc
jecxz
repnz
jecxz
adc
add
mov
in
mov
pushf
int3
enter
mov
mov
sbb
push
mov
add
jb
xor
arpl
jae
inc
loop
sbb
loopne
push
addb
ret
mov
fwait
xor
jp
imul
cmc
dec
adc
mov
push
xchg
jge
setge
xchg
or
loop
sbbb
int3
cwtl
fimull
xchg
jmp
xchg
lds
or
mov
mov
lea
leave
sub
std
pop
int
das
xchg
out
adc
ret
out
sahf
pop
faddl
ja
xor
cli
mov
bound
fstl
lods
repz
repz
xchg
xor
sub
testl
lods
es
xor
insb
xlat
mov
or
dec
mov
jmp
repz
loop
repnz
sbb
std
mov
and
inc
lcall
add
fsubrs
dec
xchg
adc
fsubrp
mov
and
xchg
cmp
ret
push
and
or
arpl
jae
pop
sti
dec
or
cmp
jb
jnp
loope
out
xlat
add
adc
das
ds
inc
dec
cld
mov
mov
xchg
pop
xorb
jae
push
cmpsb
adc
adc
add
ja
push
shlb
xchg
xor
bound
data16
cmpps
loop
adc
and
jb
xchg
and
adc
arpl
jae
inc
loop
adc
and
jb
xchg
and
jmp
lret
pop
push
sti
xor
or
insl
insb
mov
test
add
dec
mov
cs
push
andl
test
jg
mov
adc
cmpsl
idiv
pop
inc
rorl
stos
aam
popf
addr16
dec
mov
adc
or
pop
inc
xchg
repz
sahf
and
popf
sbb
rcrl
ror
leave
rorb
push
cmp
iret
push
mov
fisubs
bt
repz
push
stc
movsl
sbbl
inc
ret
aaa
and
xchg
and
aaa
fmuls
and
and
out
pop
js
in
loop
or
jmp
in
inc
lcall
xor
mov
adc
lds
popf
cs
lock
sar
jno
jge
subb
rcl
notb
jmp
jp
sbb
out
adc
adc
adcl
int3
loope
dec
xor
dec
and
xor
sbb
pop
psubsw
jg
mov
mov
out
sub
jbe
imul
cmp
test
or
loope
jecxz
inc
mov
incl
rorb
jo
adc
lret
pushl
in
pop
dec
adc
in
adc
push
sbb
mov
movsb
push
add
mov
mov
mov
jp
xor
or
dec
fs
imul
add
adc
aaa
aaa
fiadds
push
popa
les
and
in
daa
dec
sub
out
jle
dec
stos
pop
and
push
aaa
in
loop
jbe
addl
pop
addr16
xor
jne
xchg
les
pusha
jo
out
and
xchg
pop
pop
adcl
cmp
inc
add
push
sub
cmpsb
push
repz
xor
in
adc
pushf
mov
jle
xchg
pushf
lds
mov
push
add
push
popa
xlat
add
lahf
aad
andb
repnz
cmp
je
dec
loopne
push
ret
sub
lds
hlt
xor
or
iret
lods
jns
cli
mov
leave
fadds
icebp
fisubrs
in
jg
or
sub
sub
mov
sahf
jo
int3
repz
push
inc
or
fimuls
mov
cmp
adc
test
cmp
test
inc
mov
xchg
push
cmp
sbb
stc
cltd
js
rolb
outsb
mov
jle
gs
mov
test
xor
push
xchg
ret
fstps
mov
jbe
push
sub
sahf
and
dec
xor
pop
in
ja
inc
ret
ja
pop
cmpsb
sarb
and
adc
sub
and
mov
push
dec
inc
or
xor
icebp
fisubrl
push
xchg
movsl
repnz
sub
cmc
mov
mov
out
enter
pop
loopne
leave
mov
movsb
push
es
nop
fdivrp
sub
ds
dec
bound
into
dec
pop
insb
jno
jge
fcomip
mov
xchg
inc
outsb
out
jo
pop
sub
dec
mov
dec
push
add
xchg
push
jle
dec
js
jns
mov
cmp
dec
ret
sub
call
mov
cmp
int3
mov
or
das
xor
lods
push
inc
xlat
add
paddusw
mov
outsl
pop
cmp
movsb
dec
xchg
popa
ret
out
add
gs
pop
daa
out
lods
mov
aad
jbe
inc
mov
movsb
mov
add
test
xchg
pop
repz
arpl
insl
enter
in
mov
enter
mov
cmp
dec
ss
pop
clc
ffree
inc
xchg
xchg
out
in
inc
or
sbb
pop
jg
daa
push
les
pusha
gs
jo
xor
mov
cmp
aad
das
test
xchg
push
das
xchg
and
nop
push
push
fdivr
cmp
sub
mov
adc
dec
inc
cmp
or
js
lcall
sbb
xchg
jne
scas
imul
and
je
popa
cmp
push
and
or
outsb
inc
xchg
ljmp
cld
cli
dec
xor
test
nop
ja
loope
int
loope
jb
or
and
je
jge
sbb
sub
jmp
xor
lret
dec
mov
cmpsb
aam
mov
jo
adc
in
mov
or
push
cld
dec
cmpsl
lods
xor
mov
xchg
cmc
mov
add
popa
inc
pop
jno
sbb
sbb
repnz
decb
dec
lret
movsl
sbb
jecxz
testl
xor
andl
inc
inc
outsb
adc
sar
adc
aad
ds
pop
in
mov
and
push
int
iret
or
sbb
insb
inc
ret
mov
insl
stc
inc
inc
aad
jmp
push
add
add
mov
inc
icebp
in
fdivrs
fs
dec
mov
xchg
test
and
iret
sub
das
rolb
pusha
add
cmp
cmp
mov
pop
mov
add
stos
imul
adc
in
les
movsb
pop
inc
ds
jo
insb
sub
cmp
aad
aad
or
pop
movsb
rcrb
loop
cmc
mov
and
fldl
sub
fisubl
inc
mov
mov
xor
cmpl
cmc
and
movsb
push
movsb
negb
rdpmc
aaa
stc
mov
jb
sahf
mov
ss
loopne
sub
jno
rorb
push
add
lcall
adc
addr16
daa
movsb
mov
scas
lea
enter
xlat
sbb
lods
and
push
enter
pop
add
or
sbb
sahf
orl
fisubrl
mov
icebp
or
js
imul
fisttpll
inc
inc
sub
xchg
nop
cmpsb
sbb
ss
enter
enter
adc
aas
bound
rcl
dec
xchg
pop
sub
testb
pop
gs
cmp
xchg
sti
hlt
es
and
add
gs
push
insb
mov
dec
mov
sub
inc
sarb
mull
mov
jnp
pushl
pop
inc
movsb
mov
mov
leave
sub
push
xchg
jnp
cli
lret
push
cmp
push
rorb
pop
add
loopne
out
xchg
or
dec
sbb
sbb
stos
inc
pop
dec
cmc
fstp
adc
cmp
adc
mov
xor
lods
mov
cld
xlat
dec
pop
xor
mov
add
ficomps
push
cmp
sub
cmpsb
sbb
jp
insl
ja
pop
enter
lods
xchg
rcl
das
inc
repz
sub
imul
out
and
sbb
pop
and
mov
jmp
or
pop
scas
pop
or
ljmp
test
enter
jecxz
jnp
xchg
shrd
nop
fcmovnb
call
jne
push
jmp
fldl
mov
pusha
lahf
fisttps
sarl
fidivrl
or
and
or
cli
and
xchg
and
lock
ror
or
lock
jmp
xchg
daa
sub
int3
push
inc
in
test
or
rcrb
jae
inc
in
cmp
add
sub
inc
xchg
int3
fs
lret
pop
lcall
aas
and
push
adc
sub
mov
jge
pop
int3
bnd
mull
jae
sbbb
mov
xor
jecxz
pop
sub
add
mov
insb
std
or
fiaddl
mov
insl
hlt
ficoms
dec
ja
mov
cwtl
outsb
mov
xor
in
out
push
mov
std
xchg
arpl
movsb
insl
dec
mov
lea
imul
rorb
stos
mov
out
and
mov
mov
loope
add
inc
int3
pusha
xchg
dec
arpl
pop
and
push
in
mov
adc
into
out
shlb
addr16
sbb
push
pop
xchg
les
mov
and
fsubrs
jecxz
xchg
mov
mov
sbbb
inc
mov
push
insl
dec
cmp
or
adcl
mov
xchg
js
jg
stc
push
sti
repz
push
adc
stc
fwait
ret
je
es
dec
out
sub
jae
jp
shlb
xchg
scas
mov
mov
lahf
dec
lahf
addr16
stos
or
dec
adc
ja
icebp
push
push
xchg
jns
ss
shrl
lds
and
cmp
sbb
or
jo
pop
stos
xlat
fwait
rolb
mov
inc
push
fcoms
mov
test
mov
mov
push
inc
movsl
mov
xor
adc
popf
bound
xchg
ja
mov
mov
pop
cltd
xor
mov
stos
mov
lcall
adc
mov
cmp
pop
loope
bound
pop
pop
sbb
stos
push
add
outsl
fisubrs
inc
jae
jo
daa
adc
jmp
cmp
sti
mov
int3
push
pusha
rorb
sbb
mov
shlb
xor
fucom
cld
inc
lock
outsl
sub
dec
cmp
out
mov
push
sbb
gs
fidivrs
ljmp
loopne
or
adc
enter
test
in
pop
nop
xor
inc
stos
int
mov
dec
xchg
pushl
xor
and
or
cltd
loop
repnz
scas
pop
adc
and
jecxz
push
lcall
or
or
or
push
fidivrs
push
and
and
sti
iret
jge
xchg
lea
outsl
test
bound
mov
jno
mov
roll
insl
repnz
xchg
add
test
mov
scas
shlb
arpl
xlat
ret
int
je
mov
sub
scas
cs
dec
addb
push
rol
push
or
cld
cmpsw
xor
mov
or
es
adc
mov
sbb
in
ss
or
pop
inc
roll
xor
inc
in
pop
ljmp
pop
cmp
cmp
adc
outsb
push
aad
int
andb
xor
xor
out
push
call
loope
sbb
mov
cmp
std
or
pop
cwtl
mov
cmp
push
push
test
or
jae
sarl
stc
and
loop
sub
inc
cwtl
xchg
or
insb
adc
sbb
xchg
aaa
sub
sub
cmp
js
push
mov
rorb
ljmp
mov
xchg
and
jbe
icebp
xor
adc
and
pop
pop
pop
adc
clc
sub
cmpsl
mov
xor
loop
stos
pop
and
xor
gs
or
fwait
sbb
push
mov
cltd
mov
pop
int
imul
lods
cmpsl
adc
ret
ret
dec
ja
xor
addr16
fistpl
scas
das
mov
out
pop
imul
in
pop
pop
xchg
sti
shrb
push
mov
pop
push
sub
test
or
sbb
ds
stc
mov
inc
mov
adc
out
sti
ror
inc
icebp
and
test
cmpsb
dec
mov
testl
fistpll
or
adc
lahf
add
sub
adc
lock
lcall
subl
mov
inc
movsl
dec
rorl
nop
mov
cld
xchg
dec
pop
mov
icebp
outsl
ret
mov
aaa
stos
fldt
leave
stos
pop
ss
mov
jo
loop
mov
sbb
popl
hlt
sub
test
out
rcll
mov
mov
pushf
push
adc
cld
inc
ds
mov
push
pop
pop
pop
leave
xor
xchg
xor
insb
sbb
jmp
hlt
subb
daa
orb
or
je
push
lcall
pop
jle
out
pushf
sbb
jecxz
imul
mov
dec
and
stos
inc
ljmp
mov
cmp
stos
xor
push
outsl
lret
dec
lea
dec
sbb
mov
fs
sti
imul
out
sub
xchg
push
xor
or
ljmp
sbb
aad
fldt
and
out
jg
movsb
inc
pop
adc
push
sbb
in
lret
in
lcall
imul
out
jg
jg
jne,pn
dec
mulb
repz
sar
inc
or
enter
xor
cmp
xchg
adc
inc
fidivs
in
adc
jmp
aas
sub
jmp
jae
mov
fwait
ja
ret
insb
xchg
cmpb
pusha
and
aad
pop
iret
xchg
pusha
jbe
arpl
std
daa
jo
dec
sti
popf
int
insl
pushf
xor
sub
inc
hlt
out
rcpps
mov
jle
es
outsl
and
cmpsl
cmp
xor
lahf
and
std
fistps
std
std
jmp
in
outsl
dec
sarb
jae,pt
mov
call
jp
fcomip
ljmp
aaa
adc
aas
lahf
insb
rorl
inc
sub
aad
dec
push
push
dec
pop
or
int3
aaa
adc
pushf
mov
data16
adc
and
xchg
adc
mov
mov
repz
loope
push
cmpsb
daa
ret
dec
arpl
imul
hlt
mov
aas
jmp
cwtl
pushl
mov
call
sub
mov
jns
mov
subl
dec
into
shll
xchg
aam
stos
push
sbb
xchg
out
mov
nop
movsl
xchg
ds
mov
sbb
fmull
sub
sarb
sub
add
jnp
leave
mov
add
in
push
dec
push
xchg
fdiv
inc
adc
fldcw
popf
and
push
add
mov
clc
scas
mov
push
gs
rorb
lock
cs
adc
and
aam
loope
mov
sub
mov
mov
jns
xlat
mov
inc
and
add
mov
mov
push
adc
jg
jb
mov
jns
add
mov
adc
jae
adc
push
xchg
add
and
cltd
xor
gs
scas
sbb
inc
ficoms
xlat
mov
push
cmp
lahf
test
push
mov
cld
sub
cmp
xchg
mov
jl
inc
je
adc
jo
pop
sbb
or
test
ds
and
aaa
out
adc
bound
dec
in
gs
jle
loopne
or
lock
jg
repz
xchg
scas
lods
mov
pusha
mov
mov
mov
xchg
loop
add
or
inc
jae
jl
insb
js
add
not
std
lahf
stos
mov
je
sbb
push
sbb
loopne
mov
loop,pn
gs
xchg
idiv
roll
leave
and
dec
in
outsb
std
imul
add
fdiv
xchg
adc
pop
adc
repz
inc
xchg
inc
xor
cmp
sbb
pop
pop
cmp
scas
loope
pushf
das
inc
and
repz
push
and
or
mov
shrb
ret
lahf
aas
add
fs
stos
inc
pop
push
loop
dec
pop
adc
sbb
icebp
mov
or
and
push
mov
jecxz
out
stos
shrb
pop
lret
mov
mov
addr16
xor
clc
in
into
push
inc
add
sbbl
int
cmp
sar
ret
in
ret
gs
inc
mov
adc
aaa
push
inc
stc
ss
fstps
pop
out
sbb
std
imul
jp
in
imulb
jnp
lahf
fisubrs
sub
hlt
inc
lds
dec
cld
jmp
insl
lods
fbld
or
andl
iret
pop
push
aam
mov
add
jo
jle
aaa
inc
sbb
jns
inc
inc
shlb
popf
fucomip
cmc
out
repz
pusha
mov
mov
cmpsl
or
loope
adc
stc
clc
adc
enter
xchg
call
icebp
mov
mov
cmp
xor
inc
int
faddp
mov
adc
add
cwtl
push
add
jb
inc
rcl
test
cmp
sbb
push
out
insl
cli
fwait
xchg
sub
lods
fwait
pop
ss
jp
mov
dec
sbb
repnz
push
in
dec
jg
pop
dec
pusha
pop
leave
push
jo
lods
out
int
push
inc
mov
add
push
pop
jb
fildll
xchg
jb
mov
push
sbb
mov
sub
jo
aam
lret
or
mov
es
stos
jmp
inc
popf
jp
mov
xlat
insl
test
lcall
cmp
cwtl
mov
push
out
fcompl
cmc
mov
rclb
push
or
pop
addr16
mov
shll
outsl
mov
popa
and
data16
outsb
or
movsb
cmp
int3
dec
cs
mov
mov
jl
clc
and
xor
pop
cli
sub
pop
dec
sbb
cmp
cltd
inc
adc
add
mov
lret
dec
cmp
insl
fldcw
lods
fnstcw
jne
loop
sbb
dec
out
dec
adc
pop
xlat
xor
mov
jns
fiadds
sbb
nop
popf
loope
cs
jmp
jns
sub
cli
aam
mov
xchg
es
scas
pop
and
jg
xchg
and
or
into
shlb
push
xor
int
bound
xchg
je
cmc
cmpl
xchg
sub
test
jo
test
loopne
push
jns
push
inc
dec
xchg
xchg
sbb
sub
and
xor
dec
test
xor
daa
out
or
xchg
and
loop
loop
lcall
jno
dec
xchg
stos
sbb
aad
xchg
dec
mov
js
jno
mov
xor
cld
push
pushf
lods
adc
ja
js
scas
jp
idivb
loopne
repnz
mov
fdivs
mov
lcall
pop
dec
inc
dec
mul
lds
lret
mov
cwtl
sub
cwtl
sub
inc
and
aam
inc
std
mov
in
int
in
es
pop
cmp
jmp
inc
lods
or
inc
pusha
xor
xor
and
add
iret
adc
add
ja
dec
jbe
xchg
test
fisubrl
inc
shll
mov
cltd
pop
push
pop
or
subl
sbb
push
out
outsl
xor
jae
mov
inc
jp
mov
mov
and
fs
lcall
into
insl
mov
loope
aaa
jmp
pminub
insb
mov
xchg
je
xor
jbe
fcomip
mov
push
les
mov
pop
sti
and
push
sbb
fucomi
clc
cli
xchg
icebp
mov
mov
xchg
popf
mov
faddl
hlt
loop
push
xor
rorl
jp
fstpt
stos
push
pop
bound
and
leave
inc
addr16
repz
out
mov
rcll
cmp
fcoms
mov
sub
shlb
iret
inc
inc
out
cs
fldenv
sti
pop
xor
xchg
jge
insl
ret
inc
insb
cmp
mov
int
mov
fwait
rcl
cs
aad
add
fnstcw
jne
enter
out
inc
sahf
mov
fdivp
aad
pusha
pop
push
mov
loop
adc
inc
int
das
bound
pop
sub
dec
sub
sub
aas
jle
lcall
mov
clc
dec
sbb
sbb
xor
push
jecxz
dec
push
pop
fidivl
mov
stc
pusha
data16
mov
push
cmp
shlb
sub
ret
out
lea
out
jae
jae
inc
or
jmp
jae
fs
add
shlb
cmp
xchg
mov
cmc
jnp
or
push
fildll
add
and
adc
pop
push
push
out
push
push
mov
and
xchg
sub
xchg
test
push
or
sbb
out
mov
fmuls
xchg
jl
adc
inc
jnp
aam
xor
nop
fpatan
jo
pop
mov
sub
sbb
lods
adc
mov
out
push
movsb
scas
std
xchg
inc
xchg
fisttpl
dec
xchg
xchg
in
popf
lahf
push
shll
repz
sub
addb
and
add
jp
jmp
xchg
mov
mov
jmp
adc
push
jp
ljmp
pop
and
inc
sbb
xchg
in
adc
data16
jae
fistpl
fsts
cmc
shlb
aas
pop
fadds
mov
sub
pop
cwtd
dec
lods
fisttpll
push
ljmp
lock
pusha
push
out
xchg
xor
aaa
fs
nop
dec
sbb
mov
rclb
in
popa
mov
popa
or
cmpl
stc
inc
das
mov
imul
mov
das
pop
test
aaa
aas
pusha
push
mov
ret
shl
lcall
movsl
cwtl
sahf
dec
cmpl
jns
push
data16
fbld
sub
dec
mov
xchg
movl
sarb
mov
fcoml
shlb
mov
adc
popf
mov
push
dec
pusha
adc
xchg
dec
push
adc
cmp
in
push
xchg
cmp
mov
loope
out
gs
xor
in
mov
jae
inc
loop
adc
and
jb
xchg
and
adc
arpl
jae
inc
loop
adc
and
jb
xchg
and
adc
arpl
jae
inc
loop
adc
and
jb
push
shll
add
jae
inc
bound
mov
and
and
cmp
sub
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
packuswb
ja
inc
jb
or
jnp
push
daa
pop
pop
xchg
test
repnz
xchg
mov
dec
addr16
ja
inc
jb
add
adc
and
xor
out
test
lret
divb
cwtl
shlb
inc
mov
adc
pop
aaa
push
pop
lret
out
aam
mov
mov
repz
loopne
jmp
jb
es
add
xor
mov
pushf
icebp
add
sub
jns
pop
loop
cmpsl
out
or
xor
lcall
sti
rclb
in
mov
movzbl
sbb
cmpsl
add
xchg
adc
jp
sub
arpl
xorb
xchg
pop
mov
add
das
pop
and
push
pop
outsl
daa
add
test
and
jmp
repnz
or
dec
mov
dec
xchg
adc
scas
xchg
mov
add
cmpb
hlt
xchg
mov
xchg
imul
push
xlat
pop
es
imulb
movsb
jecxz
bnd
xchg
in
xchg
ja
inc
push
push
add
push
aaa
and
mov
xor
inc
idivl
in
xlat
loop
mov
xor
ss
sbb
insb
inc
addr16
xor
inc
mov
mov
cld
rcl
cmc
flds
ficoml
and
dec
jae
dec
outsb
inc
jae
lods
xchg
mov
leave
divl
xor
popa
aas
adc
adc
and
xor
ret
mul
repnz
andb
xchg
inc
addr16
ja
inc
jb
add
adc
and
xor
ret
mul
repnz
andb
xchg
inc
addr16
pop
lret
xchg
dec
push
jae
call
xorl
adc
shrl
lret
aaa
mov
pop
mov
adc
fbstp
mov
inc
sub
stos
out
mov
jg
movsl
fsubrl
add
leave
dec
mov
shll
bound
sub
cvtdq2ps
repz
mov
cli
cmp
je
jecxz
aaa
subb
mov
xchg
test
ss
ja
cmc
cld
xchg
lds
or
xor
adc
out
push
mov
inc
inc
out
inc
outsb
sbb
lret
xlat
ror
inc
data16
dec
push
sbb
pop
iret
cmpsl
aas
pop
pusha
xchg
out
push
mov
mov
add
inc
xchg
popl
inc
mov
dec
shrb
dec
fcmovb
dec
cli
pop
gs
and
xchg
repz
scas
es
push
cmp
cwtl
pop
ds
lcall
out
push
inc
fisubrs
xchg
jle
dec
or
or
mov
into
jno
add
fldl
sbbl
fsubl
in
push
and
mov
pop
inc
and
mov
xorb
mov
pop
xchg
je
test
cmp
imul
dec
outsl
sub
cmp
jno
stos
xor
sbb
adc
cmp
xchg
notl
cld
arpl
pop
adc
dec
jae
mov
pushf
test
mov
fidivrs
xor
cmpb
cli
xchg
cli
push
cs
and
lcall
mov
repz
mov
xchg
lods
and
mov
pop
lea
or
adc
sub
xor
int3
pop
imul
in
setnp
inc
dec
push
mov
cwtl
adc
fistps
pop
fldenv
xlat
scas
cwtl
std
fstpt
dec
arpl
test
push
lret
rolb
cmp
shl
xor
daa
add
and
das
jae
je
inc
cmc
test
test
xor
add
call
je
and
roll
in
pushf
bound
dec
pop
jmp
test
or
push
mov
iret
push
and
xlat
xchg
out
imul
jne
xchg
xchg
leave
add
cmp
push
arpl
jecxz
andl
fldt
adc
xor
call
stos
mov
loope
enter
filds
ds
subl
lret
xor
pop
push
lcall
jmp
jns
jbe
mov
adcl
xor
and
pop
or
pop
sbb
out
dec
inc
dec
in
mov
mov
out
mul
jb
adc
sahf
cltd
shlb
lret
inc
ficoms
sub
outsl
mulb
add
fadd
sbb
xor
lcall
and
popf
mov
cmp
mov
push
testb
push
cs
cs
push
or
or
clc
imul
xor
cli
xor
lret
hlt
pop
test
daa
sti
dec
test
xchg
pop
cmc
ja
xor
loop
lds
sub
cli
mov
and
push
sbb
test
ret
rorl
ds
push
xor
pop
jp
fs
xor
fucomi
push
mov
ljmp
jp
cmc
mov
mov
cli
aad
pop
sahf
shrb
stos
sbb
bnd
mov
repnz
push
xchg
pop
xor
or
js
adc
adc
addr16
adc
lods
iret
mov
cmp
lods
add
test
cltd
sbb
dec
push
jl
pusha
int
bswap
pop
cmc
jl,pn
int3
scas
sub
sarb
frstor
adc
adcl
sbb
mov
rorb
xchg
xchg
out
fldcw
push
cld
pushf
mov
sbb
add
sbb
fwait
and
add
xchg
pop
stos
or
test
fstp
test
push
imul
repnz
pop
add
ljmp
aaa
lock
outsb
add
mov
or
mov
add
push
rorl
mov
addps
inc
stos
testb
mov
sub
loopne
int
jp
int
int3
sub
in
mov
dec
inc
pop
popf
jno
rcl
jb
outsl
or
popa
int3
sbb
xchg
jl
pop
loop
dec
cmp
jecxz
std
fldt
fnstenv
aam
xlat
jne
or
pop
add
mov
cmc
loop
aas
call
rcl
imul
mov
fdivrl
pop
mov
cmp
pop
out
sub
cmp
push
cmp
fldcw
lcall
jae
mov
jmp
adc
inc
sbb
cmc
adc
mov
xor
jo
add
xor
ds
jmp
mov
scas
xchg
hlt
mov
xchg
mov
gs
mov
lcall
nop
xor
inc
pop
mov
add
stc
loop
dec
shlb
xor
mov
sub
mov
or
mov
mov
enter
jge
popf
outsb
xchg
sub
inc
cmc
pop
cmp
faddp
jo
stc
imul
push
imul
sub
gs
sti
mov
cmp
push
popa
mov
add
sub
xchg
lods
xchg
or
aas
loope
pushf
and
icebp
sarl
jne
mulb
clc
push
daa
call
fsub
inc
push
fidivl
in
xchg
sar
dec
imulb
xor
repz
push
push
fstpt
in
cmc
mov
push
pop
outsl
sbb
xor
or
adc
les
cli
sub
icebp
dec
ljmp
test
xor
push
mov
mov
fidivl
in
push
mov
mov
dec
rol
sarl
add
cmp
mov
push
cltd
dec
arpl
xchg
mov
stc
data16
lret
test
xor
fs
cltd
imul
push
daa
ss
pop
dec
xchg
xchg
and
xchg
or
cmovae
inc
or
outsb
outsb
pop
pop
insl
scas
push
xor
jge
mov
mov
das
jg
ss
js
ret
jg
imul
dec
insl
fdivl
dec
pop
push
iret
xchg
push
arpl
pushf
imul
xchg
pop
sbb
out
sti
popf
icebp
sub
nop
and
add
mov
xor
shlb
adc
xlat
rorl
xor
and
iret
cltd
out
je
gs
movsl
pop
std
cmpsl
xchg
leave
push
int
rcrb
xchg
cmpsl
and
in
mov
sub
mov
insb
iret
jno
inc
jl
push
xchg
adc
inc
xchg
add
add
loopne
leave
cmp
mov
pop
jbe
jge
es
jmp
arpl
mov
sub
repnz
popf
sub
imul
stos
mov
std
lea
pop
mov
movsl
mov
and
xchg
div
stos
sub
scas
mov
cmpb
jae
mov
outsl
in
xchg
js
mov
out
mov
insb
jns
aaa
sub
or
pop
lea
cmp
pop
sub
mov
dec
mov
jge
adc
pop
imul
sbb
mov
mov
fldl
aad
cmpsl
sbb
fs
dec
aam
ret
sub
ret
mov
call
stos
fnstenv
jl
mov
dec
dec
fisttpl
popf
cmpsl
add
sbb
adc
idivb
lret
cwtl
adc
inc
mov
push
mov
sbb
sahf
jmp
jmp
imul
ljmp
mov
gs
cmp
sub
jp
add
mov
repz
xor
adc
adc
stos
or
push
fldenv
inc
mov
mov
push
xchg
adc
stc
ret
rcrl
test
data16
lahf
inc
cmp
roll
add
xor
adc
ror
nop
les
pop
aaa
and
in
cli
adc
cmp
mov
cmpl
lcall
push
outsl
and
scas
cltd
and
bound
loope
jg
dec
sub
std
fsubs
or
lret
push
pop
add
std
iret
adc
lfs
xor
out
out
jo
mov
pop
cld
cld
add
inc
subb
fisttps
jp
push
sbb
ror
decb
mov
jmp
in
xor
xchg
in
pop
push
in
or
test
add
mov
aaa
mov
mov
cmp
idiv
scas
and
cmp
sbb
je
addl
push
mov
cmc
jb
push
jae
mov
je
into
mov
lahf
mov
mov
ds
popf
cmc
mov
xorb
stos
jo
faddp
mov
mov
add
adc
mov
ja
ss
cld
out
hlt
jp
jecxz
es
mov
sub
inc
xchg
aad
fwait
ja
aaa
mov
add
int
imul
fistps
cmp
test
add
pushf
sarb
xor
in
lahf
push
fdivrs
aad
lods
sbb
and
aad
dec
push
sar
inc
dec
loope
and
sti
icebp
shll
mov
xchg
lds
aad
loop
mov
push
pop
cmp
sbb
or
fwait
outsb
pop
aad
in
test
adc
fistps
stos
adc
xchg
xchg
mov
out
pusha
test
push
push
add
sub
pop
dec
cmp
sbb
mov
adc
mov
or
adc
mov
in
and
xor
pop
lods
xor
pushf
and
cmpsb
mov
jp
rolb
jnp
xor
mov
int
mov
mov
mov
int
sti
fcoms
pop
es
outsl
xchg
stos
and
mov
xor
dec
push
push
dec
mov
pusha
mov
sbb
sub
iret
adc
test
nop
into
gs
ljmp
jb
mov
jne
push
cs
lcall
out
jg
mov
pop
test
add
dec
shlb
and
dec
pop
pop
enter
loopne
std
xchg
and
push
test
sub
sbb
outsb
rclb
and
pushf
data16
negl
mov
int
push
adc
sahf
add
jg
sbb
in
into
jb
lock
int
sub
out
adc
fsubl
je
push
mov
jne
cmpsl
mov
imul
inc
xchg
push
imul
stc
stos
push
aad
cltd
sbb
ljmp
ss
loopne
std
cmp
dec
lock
aas
add
push
push
pop
call
push
jp
mov
xor
inc
lods
rorl
jmp
xor
imul
pusha
es
dec
insl
push
pop
jo
xor
sbb
mov
inc
roll
inc
add
outsl
or
fsubrs
notb
cmp
xor
dec
inc
arpl
sti
push
push
adc
insb
inc
mov
push
and
jb
jl
sub
mov
jno
adc
add
mov
sbb
xor
cli
xor
imul
es
or
mov
xchg
pushf
xor
and
mov
add
pop
mov
sbb
inc
fsubrs
push
xchg
pop
jp
in
enter
mov
sbb
pop
jb
or
sub
jno,pn
adc
dec
out
fldt
leave
test
mov
cltd
push
jnp
pop
test
jb
fstl
pop
test
ds
mov
aas
xor
dec
sbb
arpl
mov
pop
in
repz
pop
jge
int3
rolb
mov
push
cmc
fwait
lods
stc
add
push
pop
xor
xchg
rorb
add
ss
mov
push
cmp
add
cmp
pop
mov
test
inc
or
mov
shll
and
jne
lods
js
test
xor
xor
fsubr
jge
sbb
inc
adc
xor
jg
push
inc
xor
sahf
cmp
adc
lock
out
xor
pop
cwtl
mov
les
shlb
push
mov
sbb
inc
ljmp
mov
inc
mov
xchg
mov
ja
out
aas
mov
or
sub
int
pop
lods
jmp
mov
jle
hlt
adc
xor
sarl
adc
lret
adc
push
push
xchg
sub
and
imul
push
sbb
mov
and
jg
mov
sbb
inc
or
stos
adc
out
sub
insb
jns
xor
cmp
sub
sbb
jne
ja
jbe
test
push
sub
mov
xor
sbb
dec
cmp
call
dec
jg
les
inc
mov
ss
pop
idivb
shlb
push
mov
jb
push
mov
cld
addb
adc
mov
loopne
and
jae
and
mov
ljmp
sbb
cmc
sbb
and
push
cmc
je
scas
adc
pop
sub
fs
mov
rorb
pop
inc
in
mov
or
test
jo
je
add
mov
out
fcomi
decb
ds
mov
cmpsl
mov
sub
hlt
pop
jns
lret
insl
lea
or
loop
insb
xor
lret
fildll
inc
pusha
movsl
xchg
js
inc
jle
ds
dec
in
mov
dec
fidivrl
pop
leave
dec
mov
iret
add
fbstp
inc
add
pop
imul
xchg
test
and
xchg
aas
lret
lock
scas
lods
pop
scas
test
stos
sub
mov
movb
ja
loop
lods
enter
or
jne
and
jle
adc
dec
outsb
movsb
inc
out
add
movsl
scas
sub
test
push
stos
mov
fsubs
popa
mov
or
and
push
dec
and
mov
mov
fldl
and
rorb
inc
jbe
adc
push
and
sarb
and
inc
dec
les
push
sub
mov
sbb
or
xchg
repnz
inc
ret
movsl
mov
mov
adc
cmp
lock
fists
test
jo
pusha
mov
fiaddl
push
fsubrl
push
cmp
xchg
xor
lock
lret
jp
sahf
pop
pop
dec
nop
add
mov
out
push
xor
push
test
cwtl
jae
cltd
std
jo
sbb
dec
ss
jmp
cmp
aad
enter
cmpl
addr16
gs
sbb
xor
push
sbb
cltd
shlb
aaa
popf
mov
xchg
mov
jp
icebp
loope
and
add
mov
cltd
mov
and
jecxz
mov
outsb
and
shlb
test
push
les
or
add
mov
jmp
ret
lcall
and
out
cmp
shld
popa
stos
mov
stos
lock
rcrb
jmp
adc
inc
xor
jmp
jno
sbb
ja
and
hlt
inc
out
nop
mov
scas
or
mov
sub
int3
and
push
int
out
aaa
mov
ljmp
sub
lods
imul
subl
sub
or
mov
imul
jmp
ret
pop
ljmp
mov
clc
loop
data16
daa
jecxz
subb
mov
mov
jg
bound
stc
mov
xchg
cmp
ja
mov
clc
sub
push
sbb
push
les
pop
sahf
test
mov
mov
and
dec
rcl
in
push
mov
cmpb
pop
fwait
sub
adc
mov
add
call
add
sbb
jmp
jge
in
test
mov
add
push
pop
xor
push
cmpsb
xchg
pop
jecxz
adc
inc
push
xchg
orl
jne
aaa
pop
test
aad
xorl
pop
ret
jg
xor
loopne
popf
aas
outsb
pop
add
mov
or
dec
dec
repnz
ss
pusha
jne
or
subb
and
xchg
jo
stos
out
repnz
xor
hlt
mov
nop
cmp
pop
das
push
sub
cmp
sbb
fistpll
sbbb
iret
testl
inc
bnd
sbb
pop
sbb
clc
mov
ljmp
push
xor
ret
push
subb
pop
jbe
pop
int3
cmp
movsb
xchg
jo
fs
jecxz
cmpl
xchg
cmp
out
insl
mov
jmp
lahf
cmp
fildl
add
clc
xchg
xor
pop
lcall
fsubl
add
insb
out
les
dec
pop
sti
inc
stos
sub
xchg
push
ss
lods
mov
push
push
adc
jecxz
mulb
jae
mov
add
cmp
push
insl
mov
test
xlat
call
ret
xchg
scas
sti
movsb
mov
pop
adc
lods
jmp
psrlw
xchg
or
xor
mov
out
or
adc
movsb
mov
or
mov
add
add
rorl
adc
push
or
testl
out
or
imul
fisttpll
jo
fcomps
imul
add
push
int
sbb
shrb
cmpsb
fwait
mov
cmpsl
scas
les
jmp
and
test
mov
fsubrs
enter
or
mov
sbb
repnz
cmp
insl
xchg
and
dec
pop
xchg
sbb
push
out
xchg
mov
fsts
stc
or
sub
add
push
xor
xchg
inc
mov
movsl
mov
fldenv
lods
loope
lret
je
mov
or
jmp
push
stos
add
sub
and
sysret
lahf
mov
pop
mov
lds
lods
cmpb
jo
adc
fistpll
popa
or
push
roll
fs
sub
pop
and
ja
xchg
int
movsb
or
dec
dec
pushw
cwtl
xchg
cmpsl
outsb
or
imul
rcr
or
enter
mov
shl
mov
out
pop
push
pop
fs
test
cmp
das
and
std
outsl
jmp
jne
cmp
scas
cmpsb
test
pop
jns
inc
cltd
stos
out
loope
popa
add
test
xor
fs
mov
ret
out
push
xor
or
mov
inc
movsl
push
sbb
and
loopne
test
jns
xchg
inc
aam
mov
rcr
inc
dec
aad
inc
jo
push
ljmp
jp
pop
int
push
mov
leave
or
pop
movsb
mov
jo
repnz
xchg
inc
add
jbe
shl
and
cli
loope
xchg
sub
lret
leave
loop
loopne
scas
loope
add
stos
jae
add
push
sub
sarl
push
cmp
fmuls
out
mov
mov
adc
sbb
inc
add
xor
sub
gs
les
call
cmpl
pop
cmp
push
js
push
dec
pusha
bound
push
cmp
into
mov
mov
fists
pop
xchg
ficoml
mov
mov
or
cli
push
xchg
inc
outsb
scas
hlt
into
inc
pop
inc
fisttpl
pop
test
test
mov
das
clc
lods
mov
stc
out
roll
fs
lds
inc
stos
and
push
scas
push
pusha
ds
lret
ds
add
mulb
mov
pop
fcmovbe
pop
mov
mov
sahf
aas
cmpsl
test
arpl
in
pusha
inc
wrmsr
dec
push
movsb
xchg
pop
cmpsb
dec
cwtl
add
daa
xchg
stos
cmp
lcall
test
lahf
sbb
mov
aaa
mov
xor
shrl
pop
or
insb
test
in
jle
jbe
loope
cmp
or
add
out
push
sub
mov
out
adc
sub
popf
leave
cmp
in
popf
ret
add
leave
xchg
or
xchg
in
faddl
pop
repnz
cmp
idivb
test
and
mov
push
mov
arpl
cmp
sub
add
std
popf
insb
push
jo
or
pop
cs
pop
inc
mov
movsb
jae
das
int3
inc
push
lahf
popa
cmc
lock
into
xchg
int
xor
mov
insl
jnp
fwait
mov
push
xor
sub
xor
sbb
in
test
fildl
pop
repz
inc
imul
and
xchg
ljmp
test
icebp
push
or
mov
sub
fimuls
scas
push
addl
jp
adc
scas
mov
aam
add
and
mov
es
dec
or
data16
mov
mov
in
xchg
jle
pop
push
in
or
mov
subb
adc
outsb
push
add
adc
and
xor
ret
mul
repnz
andb
xchg
inc
addr16
ja
inc
jb
add
adc
and
xor
ret
mul
repnz
andb
xchg
inc
addr16
ja
inc
jb
add
push
aaa
and
xor
out
imul
not
andb
xchg
pop
addr16
ljmp
aaa
and
mov
ret
pop
dec
repnz
pop
js
push
and
lea
cmpsl
or
xchg
or
pop
aad
in
cmc
imul
fsts
gs
jne
test
xchg
or
pop
aad
in
cmc
imul
fsts
gs
jne
test
mov
leave
dec
mov
lds
mov
imul
pop
inc
mov
fimuls
outsb
cli
lea
in
pop
pop
sub
je
sbbl
mov
jns
lret
and
fwait
cmc
mov
js
adc
cmp
cmp
js
push
mov
and
sub
fld
mull
pop
test
addb
mov
xor
fchs
adc
or
adc
cmp
xchg
sbb
rorb
cmc
jne
outsl
lret
fsts
out
xor
and
enter
sub
sbb
jno
mov
cmpsl
lret
jne
shl
sbb
popf
sub
insb
jne
leave
cltd
adc
test
gs
jne
test
xchg
or
pop
aad
in
cmc
das
inc
hlt
popa
pop
dec
lcall
mov
mov
pushf
ja
test
pusha
movsl
push
int
les
or
fdivs
inc
mov
adc
sbb
pop
les
outsl
mov
les
mov
pop
pusha
leave
adc
fisttpll
mov
leave
gs
jne
test
xchg
or
pop
aad
in
cmc
imul
fsts
gs
jne
test
xchg
or
pop
aad
in
cmc
imul
sbb
add
pusha
pop
sub
fcompl
divl
xchg
test
test
xchg
xor
lock
fmull
mov
jp
push
mov
adc
sub
sahf
pop
inc
and
xor
ja
xchg
or
lahf
jns
sub
repz
jnp
adc
xor
popf
rcll
inc
dec
imul
insb
xor
sar
sbb
in
pop
lea
sub
jmp
sub
mov
xor
imul
sub
mov
cmp
pop
les
jae
lea
in
pushf
popa
idivl
jmp
xchg
jg
add
push
cmp
enter
ret
and
push
inc
pop
enter
cmp
mov
pop
xor
inc
adc
pop
cmp
bound
adc
pop
scas
mov
cwtl
shlb
pusha
mov
popa
roll
les
push
daa
fcoms
cmpb
mov
push
insl
fistpl
repz
clc
scas
popa
movsb
insl
test
jg
gs
sbb
fidivs
add
lret
outsl
ljmp
or
sub
mov
mov
xor
mov
or
clc
and
and
fwait
push
add
or
lcall
cmpsl
pusha
or
mov
fstl
ret
mov
bound
mov
add
xor
aaa
fwait
mov
jp,pt
stos
stos
scas
dec
rcl
out
jge
stos
lock
adc
sbb
data16
and
xlat
add
mov
shll
cld
out
out
mov
jmp
pop
sub
popf
arpl
adc
or
jns
cltd
shr
mov
ds
psubusw
cwtl
pusha
mov
push
lods
test
and
lret
inc
cmp
je
dec
push
shl
jle
adc
pop
and
jo
roll
cli
or
push
jmp
xchg
jp
pop
scas
adc
xor
adc
add
repnz
xchg
mov
xor
aas
inc
ss
jae
xchg
lret
xor
mov
les
ljmp
xor
fbld
in
jbe
dec
or
and
mov
pop
adc
iret
push
fs
fcoml
add
sbb
mov
cmpsb
sbb
push
adc
pusha
lcall
lea
fbstp
push
mov
cmp
lock
aam
push
jp
ficompl
sbb
xchg
mov
inc
cmp
mov
dec
jb
pop
jecxz
sbb
stos
and
test
add
clc
cltd
pop
pop
in
inc
mov
jns
std
mov
frstpm(287
das
aam
lock
mov
pop
test
push
dec
cwtl
shlb
sbbl
sbb
adc
icebp
mov
pushf
mov
mov
shlb
call
addb
xchg
inc
lea
mov
sarb
dec
mov
sbb
or
jge
push
iret
nop
cld
push
sbbb
lods
sbb
mov
aam
scas
sarb
addr16
repz
out
gs
sub
mov
fs
sti
cmp
add
fucomip
lea
call
jg
popa
sbb
mov
xlat
in
insl
insl
iret
inc
xchg
mov
test
std
adc
int3
ljmp
neg
push
out
lock
mov
ret
int
or
or
in
mov
mov
mov
enter
shll
mov
outsb
or
bound
shlb
enter
mov
cmp
push
or
push
sti
je
mov
lcall
sbb
lods
inc
or
and
add
xchg
jge
test
loop
imul
idivl
cwtl
movsl
sbb
cwtl
shl
push
es
shrl
sub
adc
popa
mov
cld
sub
mov
sbb
popa
push
fldl
std
jmp
sub
mov
and
lcall
hlt
ret
sbb
dec
shrl
xchg
dec
cwtl
sub
push
mov
inc
shr
jmp
or
ds
aam
xchg
jp
inc
push
adc
mov
aam
push
jp
repz
fistps
adc
fbstp
sbb
pop
xchg
push
imul
mov
repnz
fs
jmp
shlb
stos
mov
jp
cltd
adc
mov
pop
jns
out
adc
stos
mov
xor
icebp
pop
imul
cmp
mov
incb
test
mov
sub
xor
inc
xchg
ss
and
inc
insl
faddl
mov
xor
dec
jg
mov
int3
aad
cmp
adc
popf
arpl
std
into
push
repnz
mov
mov
aam
adc
adc
mov
jno
sub
scas
add
jecxz
std
xor
sbb
enter
pop
scas
and
add
loop
jmp
stos
fisttps
pop
stc
mov
push
int3
or
ss
fisubrs
in
arpl
rolb
jbe
in
cld
cmpsl
rcll
xor
mov
jge
popf
cmp
sbb
xchg
sbb
ret
inc
sti
mov
pushf
clc
mov
adc
jge
hlt
fisubrs
lods
outsl
mov
jae
cwtl
jo
sbb
or
push
sarb
push
imul
movsb
pop
xchg
repnz
push
insl
pop
ret
mov
add
test
ljmp
or
es
or
je
jae
test
adc
sarl
invd
fdivrl
jo
sbb
xorb
inc
insb
testb
push
les
int3
arpl
sub
rol
fisttpl
shr
pop
cmp
mov
cltd
pop
lds
std
and
jg
and
mov
push
xor
push
dec
pop
insl
ss
jle
mov
rclb
clc
lahf
stc
jb
mov
inc
js
mov
mov
enter
popf
ror
imulb
add
call
mov
pop
xor
das
mov
inc
mov
inc
push
push
packsswb
cmpsb
mov
daa
fdivrl
add
js
lahf
aaa
xor
mov
add
pop
cmp
and
xor
jb
int3
inc
lret
pop
mov
mov
pop
pop
in
dec
imul
adc
mov
pop
add
and
orb
fcoms
dec
fisttps
rcr
fsubp
inc
imulb
mov
xor
ja
fldt
mov
mov
xor
insl
pop
xchg
negb
cmp
lods
lret
adc
xchg
xor
cmpsb
push
or
cmp
movsb
fsubs
jne
xor
push
xrelease
cmp
test
dec
imul
fisubs
jecxz
lods
push
sub
jmp
mov
mov
popa
gs
sub
dec
add
or
push
aad
lods
lods
je
sub
xchg
stc
into
fidivl
push
xlat
sbb
xchg
inc
dec
test
pop
loopne
pop
ret
clc
lret
divl
push
std
adc
fmuls
loop
lods
mov
lcall
dec
iret
mov
lods
add
loopne
cltd
adc
inc
jp
pop
and
icebp
sub
iret
jns
adc
in
scas
xchg
mov
das
or
fisubrs
popa
jl
sbb
push
adc
adc
lock
fs
inc
sarb
enter
mov
cmp
ljmp
movsb
add
sub
or
cmp
sbb
mov
mov
pop
add
aaa
add
pop
jmp
aas
dec
jno
mov
out
mov
daa
clc
gs
negl
xor
cs
mov
xchg
sbb
pop
paddw
sbb
adc
sbb
lea
cmp
lret
in
iret
ljmp
mov
jle
mov
xchg
dec
cli
outsl
aas
std
arpl
mov
push
push
mov
push
in
aam
jecxz
sub
sbb
jns
jge
iret
es
int3
push
cmpsb
fildll
aad
add
fisubl
inc
sub
mov
cwtl
nop
cltd
imul
push
xchg
movsb
add
or
mov
jae
pop
fprem
and
movsb
ds
jge
orl
jecxz
in
push
push
sub
sub
dec
insl
outsl
sbb
into
xchg
inc
popl
pushf
ja
ret
pushf
mov
mov
in
push
lock
shlb
enter
or
cltd
adc
mov
inc
movsl
out
ret
lods
popl
int3
ss
aad
sti
into
sbb
insl
out
cld
jecxz
mov
push
stos
clc
inc
add
cmp
int
inc
shrb
push
shl
pop
pop
mov
mov
lret
out
sub
mov
sub
int3
push
or
push
fs
mov
test
fsubs
ret
inc
out
lret
lahf
mov
stos
out
xor
and
ss
xor
hlt
lea
mov
inc
bound
adc
pop
and
or
mov
sub
jns
lahf
mov
inc
and
sub
mov
movsl
insl
xor
xor
nop
out
push
outsl
cmc
test
and
int
dec
stc
jecxz
push
lret
add
andb
xor
dec
repnz
rcll
bound
and
and
leave
movsl
and
mov
pop
pop
and
jecxz
enter
cmp
jecxz
add
scas
mov
in
cltd
pop
lret
iret
add
stc
lods
enter
lahf
dec
dec
aam
fmull
imull
jmp
jno
mov
cli
sar
mov
jb
shrl
mov
es
sub
mov
pop
mov
jmp
push
repz
dec
xchg
mov
jo
jle
xor
mov
mov
ljmp
jge
fidivl
sub
dec
sbb
mov
pusha
cli
adc
pop
cmpsb
xchg
les
inc
clc
stc
in
cwtl
ss
mov
sbb
icebp
or
mov
dec
daa
add
jbe
leave
pop
les
xchg
or
sub
push
mov
addr16
mov
xchg
inc
arpl
jo
sub
iret
push
mov
pusha
fcmovb
jo
pop
add
xor
cs
xchg
movsb
lock
or
popa
lock
cs
inc
bound
jns
or
popf
and
push
and
sub
icebp
inc
pop
xchg
dec
out
popf
lret
adc
scas
test
mov
and
inc
pushf
push
data16
ss
adc
repz
xor
les
mov
loop
push
or
cmp
loopne
bound
jns
mov
pop
mov
addr16
add
sahf
lret
and
sti
dec
imul
xchg
xchg
in
lea
xchg
and
push
inc
and
xor
adc
dec
xor
adc
les
xchg
dec
sub
pop
andb
imul
lock
pushf
adc
shll
inc
lret
lods
clc
shll
xchg
adc
dec
nop
subps
push
xor
sahf
pop
dec
bound
pop
jg
sbb
fst
sbbl
push
mov
dec
jp
pop
add
mov
sub
frstor
mov
mov
inc
les
inc
test
pop
push
xor
ds
cli
mov
or
rolb
mov
mov
outsb
cmp
jo
lods
pop
xor
out
insl
stos
xor
mov
or
sbb
sahf
ljmp
movsb
jle
inc
cmc
movsl
mov
pusha
insb
adc
mov
pop
aam
ret
mov
pop
or
ret
push
pop
pop
sbb
add
and
dec
sub
scas
subl
sahf
jecxz
mov
pop
jle
cmp
lods
into
je
cmp
adc
jge
loope
sub
js
movsb
lds
in
test
loopne
aam
aaa
jl
cmp
mov
inc
dec
or
gs
cmp
mov
lea
lods
loope
lea
clc
insb
fdivrp
loop
inc
and
sbb
jmp
push
stos
inc
mov
imul
mov
add
mov
cmc
addl
sbb
adcl
lods
sub
fdiv
mov
mov
jns
daa
lret
addr16
daa
shll
add
push
mov
or
test
add
mov
mov
and
xor
andl
dec
cmpsl
mov
repnz
mov
loope
xchg
mov
push
pushf
adc
loop
cmp
mov
mov
pop
lcall
xor
pop
repz
add
sbb
push
sbb
ljmp
mov
sbb
pop
xor
cld
or
bound
dec
xchg
push
mov
mov
push
movsb
stos
lds
push
pop
shlb
call
test
dec
out
inc
pop
subb
xchg
or
push
jb
push
enter
and
dec
dec
jmp
push
dec
dec
fdivr
cmp
dec
mov
push
add
out
sbb
divb
and
mov
in
cltd
and
jge
ljmp
mov
xchg
or
out
or
imul
dec
sub
xchg
aam
cmp
jae
push
lds
iret
xchg
add
lods
jnp
mov
sbb
inc
daa
movsl
cld
ret
xchg
movsl
lret
mov
aas
loope
aam
cmp
mov
lret
insb
int3
cmpsb
scas
mov
jecxz
cwtl
shlb
mov
jp
mov
adc
cmpsb
lret
add
in
pop
pop
jg
and
push
mov
add
adc
mov
pop
hlt
mov
jge
mov
cwtl
dec
mov
sbb
inc
popf
shlb
dec
cmp
fldt
inc
fcoms
lret
pop
sub
jp
dec
loop
or
cmp
sar
add
je
fadds
jg
test
das
stos
mov
push
fwait
int3
pop
mov
mov
adc
in
mov
mov
inc
mov
push
push
pop
sub
lods
mov
data16
mov
dec
dec
xchg
and
sti
out
mov
rclb
int
sbb
daa
sar
cltd
jge
pop
mov
mov
inc
scas
mov
sub
in
nop
lcall
and
out
aaa
sbb
loope
ja
aad
test
arpl
mov
fistpl
mov
pop
dec
out
xor
xchg
xor
add
movsl
addr16
and
aaa
or
test
add
cld
test
push
inc
pop
xchg
daa
in
inc
ljmp
test
mov
les
imul
lcall
cmp
test
mov
prefetch
or
arpl
pop
push
arpl
insb
mov
xchg
xchg
push
int3
fists
jno
mov
or
sub
add
inc
mov
push
outsl
pop
in
les
in
inc
dec
into
mov
test
rorl
inc
cmp
push
clc
fmull
test
mov
cmpsl
and
mov
sahf
xchg
mov
xchg
popf
adc
enter
popa
push
inc
int
or
push
testb
xlat
outsl
inc
int
js
jno
out
inc
repz
xchg
roll
adc
or
fsubrs
test
out
mov
into
sbb
sbb
inc
cmpsl
xor
dec
mov
mov
imul
sub
sahf
push
xabort
loopne
fiaddl
lea
and
in
mov
mov
loope
add
ret
lods
ret
sbb
cmp
cmp
pop
and
aaa
jbe
pop
enter
sub
cmovs
sbb
mov
pop
ss
dec
aaa
push
cmp
cmp
and
mov
daa
push
or
xor
xchg
pop
ja
test
mov
xchg
push
mov
add
sub
mov
fcmovbe
and
ds
nop
sti
mov
and
cld
fs
aam
jmp
or
outsb
ret
mov
test
jmp
adc
xorb
mov
in
push
dec
lods
clc
xor
sub
in
xor
pop
mov
std
mov
aad
xor
xor
jg
test
fidivs
xchg
cmp
into
fcompp
mov
lods
ret
fiadds
mov
fistpl
sub
outsb
or
xchg
mov
mov
ret
outsl
jno
fidivrl
dec
mov
outsl
shrb
xchg
or
test
xor
cmp
roll
jecxz
insb
mov
fwait
mov
push
mov
lods
mov
sbb
xor
xchg
cld
pop
sbb
push
adc
in
rcrb
sti
cmpsb
aaa
push
add
testb
call
out
add
rorb
insb
cmc
in
fdivrs
movsb
pop
and
mov
int
int3
pop
sub
jmp
bound
xchg
clc
pop
inc
pop
or
int3
dec
pop
xchg
mov
or
adc
imul
ret
sbb
bound
cmpsb
xor
call
popf
push
jo
dec
jb
mov
out
mov
xchg
loop
jecxz
dec
inc
int
inc
cli
jecxz
sbbl
call
add
mov
imul
popa
dec
mov
shrl
push
mov
out
iret
fsts
xchg
mov
cltd
xchg
mov
hlt
push
fcomip
scas
js
xchg
jge
push
dec
cmc
mov
js
aam
daa
dec
ds
add
cld
rorl
in
hlt
andl
fiadds
push
das
faddl
je
xor
mov
out
xchg
scas
xor
push
xchg
jb
dec
mov
cmpsl
js
cli
jmp
shld
les
les
jmp
jae
push
jp
scas
push
and
or
shr
pop
ficoms
xlat
gs
sub
pop
test
imul
jl
jb
fisttpl
jae
inc
jmp
iret
mov
push
je
ret
imul
call
mov
mov
dec
xchg
jo
ret
mov
adc
mov
and
sahf
pop
insb
cmp
sbb
mov
sbbl
clc
cmp
imul
stc
sub
ss
ds
fildll
mov
ret
mov
ret
pop
faddp
and
out
dec
sti
sbb
push
inc
cmpsl
or
test
dec
ret
mov
rcrl
clc
adcl
adc
ret
push
cmp
cltd
push
nop
add
mov
das
fiadds
lcall
jno
push
lods
pop
cmp
lret
out
inc
daa
dec
cmp
xchg
dec
loope
stos
aaa
push
dec
xor
xor
loope
rcrb
les
mov
mov
ds
repz
fnsave
xchg
loopne
push
lods
fidivl
cli
jmp
js
mov
movsl
fldenv
xlat
jo
mov
outsl
imul
or
lcall
test
fisubrl
inc
loopne
jbe
out
in
push
inc
sbb
mov
stos
inc
lods
jnp
outsb
in
fwait
daa
mov
lods
cs
mov
add
xorl
adc
into
sub
sbb
ljmp
out
in
incb
fdivp
and
cmp
push
outsb
dec
xor
pop
xchg
jne
xor
adc
xor
out
aam
stos
cmp
stc
pusha
xchg
or
add
mov
mov
or
sub
sbbl
adc
loope
mov
add
mov
repz
pop
popf
pop
mov
add
push
mov
lret
and
ljmp
xchg
pusha
stos
jns
rcr
inc
cli
inc
mov
push
mov
pop
sbb
push
jo
pop
sbb
or
add
popl
int
fisttpl
stos
jno
stos
xchg
xchg
pop
out
aaa
bound
ds
fadds
orl
cli
inc
es
sbb
ja
loope
pop
inc
pop
mov
mov
in
and
movb
ljmp
dec
and
mov
lcall
mov
rcrl
je
mov
push
mov
mov
hlt
mov
bound
sahf
fmull
cmp
xchg
movsl
xchg
add
xchg
fnstenv
ds
fisttps
pop
lcall
js
sbb
xor
gs
aas
push
and
push
pop
mov
outsb
mov
jns
mov
mov
or
loope
push
pop
loope
xor
movsb
daa
es
cmp
mov
xor
leave
gs
jne
test
xchg
or
pop
aad
in
cmc
imul
fsts
gs
jne
test
xchg
or
pop
aad
in
cmc
imul
fsts
gs
cmc
jmp
movsl
cmp
dec
in
cmc
imul
fsts
gs
push
test
xchg
mov
mov
movsl
mov
xchg
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
pop
jmp
sti
jle
outsb
fistl
stos
imul
decb
pop
sahf
sub
sbb
dec
sti
jle
outsb
fistpl
stos
push
mov
fisubrs
jnp
dec
out
pop
sahf
dec
cmp
jmp
sti
jle
outsb
fistpl
stos
push
mov
fisubrs
pop
mov
mov
std
outsb
insb
sub
pop
mov
aad
movsl
sahf
push
call
jmp
dec
push
hlt
jmp
jmp
mov
push
ss
adc
inc
test
mov
dec
leave
cmp
dec
mov
sbb
sbb
out
jne
push
jno
pusha
imul
out
dec
imul
scas
xlat
pop
imul
imul
cs
inc
test
lea
fmulp
cmp
sbb
xor
loope
cs
ret
fists
pop
into
js
sub
scas
sti
bound
xchg
shll
add
adc
test
or
jle
outsb
fistpl
stos
push
mov
fisubrs
jnp
dec
out
pop
sahf
sub
pop
cmp
sub
lcall
stos
out
scas
sbb
sub
pop
iret
jl
jns
jle
xchg
xchg
sbb
call
imul
sub
or
jmp
xlat
outsb
les
stos
dec
test
scas
or
mov
fisubrs
jnp
dec
out
pop
sahf
sub
sbb
dec
sti
jle
outsb
fistpl
stos
push
mov
fisubrs
jnp
dec
out
pop
sahf
sub
sbb
das
shl
movsb
adc
pop
unpcklps
mov
outsl
hlt
loop
pop
lods
push
movsb
enter
rep
dec
lret
pop
sarb
adc
push
push
or
inc
xchg
push
sbb
jb
bnd
arpl
sbb
loope
rcpps
push
push
inc
scas
out
in
or
shrb
cmp
in
bound
pop
dec
dec
xor
push
stos
fcmove
mov
fistl
fs
mov
jmp
out
adc
je
sub
bound
xor
or
cld
lret
cwtl
xchg
inc
mov
mov
cmp
sbb
ds
dec
movsb
les
pop
test
cmp
sub
aad
sar
stos
jno
mov
sbb
and
add
hlt
int
ret
icebp
adc
adc
imul
les
push
cmp
mov
push
jno
popf
jl
and
movb
xor
rcll
test
int3
sahf
jle
jns
out
jecxz
jl
std
or
push
pop
push
pop
insb
dec
test
sub
bound
aaa
movsl
cmp
dec
and
pop
jo
repz
sahf
iret
shl
ljmp
lods
lds
out
jns
sub
and
jle
xchg
xchg
into
ss
and
ret
mov
sbb
sbb
mov
xlat
xor
aaa
pop
xchg
mov
sub
ret
push
sub
push
rcrb
jmp
mov
xchg
test
push
int3
mov
xlat
popf
cmpsb
outsb
inc
mov
inc
sub
cwtl
jnp
hlt
jmp
pop
call
ljmp
movl
push
sbb
pop
cmpsb
adc
insl
sti
dec
outsb
jb
jne
inc
cmc
jl
xchg
push
mov
inc
sub
dec
and
sbb
ss
mov
sbb
aam
repnz
enter
lcall
fistl
clc
insl
daa
decb
pop
push
das
sub
mov
lea
pop
pop
push
add
cmp
fstps
adc
inc
and
add
enter
add
cmpsl
ja
sub
inc
scas
inc
jge
fmull
lock
jns
pop
in
std
sti
or
jmp
pop
jns
negl
pushf
js
pushf
xor
sub
mov
fcomi
call
mov
outsb
add
sub
push
jo,pn
inc
movsb
loope
fsubrs
stc
leave
xor
ja
les
fistpl
inc
sbb
leave
aam
jle
mov
dec
jmp
mov
mov
loopne
in
dec
lods
sbb
jmp
aam
pop
and
mov
xor
push
loop
ds
lods
and
mov
jg
sub
push
mov
cmp
pop
outsl
adc
out
outsb
out
das
jecxz
incl
roll
push
push
mov
icebp
and
add
testb
adcl
mov
jo
cmp
in
inc
mov
or
hlt
cli
sbb
ljmp
jg
out
scas
adcb
cld
pop
jnp
jns
mov
and
xchg
in
push
sub
xchg
adc
cmp
push
push
je
dec
imul
pop
adc
mov
pop
fldt
ficomps
jne
cltd
mov
mov
mov
inc
pop
shrb
xchg
bound
repnz
cli
outsb
mov
or
pop
call
popf
or
adc
mov
negb
clc
cltd
cmpsl
jp
mov
mov
inc
sub
mov
stc
clc
dec
sbb
mul
sbb
jmp
cmp
pusha
enter
nop
fs
pop
xchg
movsb
repnz
out
hlt
cmp
mov
mov
lea
outsl
fdiv
jg
push
xchg
lret
inc
aad
adc
orb
lcall
pusha
inc
pop
cmp
add
jmp
xor
cmpsl
scas
jl
push
inc
cli
mov
xchg
mov
test
mov
out
in
repz
shrb
xchg
fldl
in
inc
push
imul
jle
add
sbb
ds
push
ds
mov
repz
pusha
cmp
xor
mov
ret
push
mov
xor
out
lds
sbb
sbb
mov
mov
in
sbb
jno
and
aas
or
dec
mov
mov
dec
xor
cmp
les
mov
int3
int3
inc
loop
cltd
adc
rclb
fwait
lcall
xor
push
lea
jno
repnz
mov
out
movsl
jb
andb
idiv
in
stos
cmp
xchg
push
repz
das
xchg
fdiv
jmp
into
pusha
pop
mov
xchg
add
fidivl
daa
dec
rol
xor
je
fidivl
fstpl
fists
lret
aas
xchg
jg
sbb
xchg
xor
movsb
push
stos
jecxz
pop
xchg
xor
and
loop
subl
and
arpl
rorb
mov
xor
or
iret
cmc
mov
mov
push
out
push
pop
pushf
cmp
scas
insl
loope
xor
sub
outsl
lret
push
mov
fcmovnu
mov
sub
pop
fstl
pop
pop
cli
push
std
je
gs
cs
mov
jns
sti
and
cmp
fiaddl
pop
fildl
lods
mov
nop
push
cmp
sbb
sbb
stos
lock
lret
nop
hlt
idivb
xor
xchg
xor
sbb
sub
mov
inc
xchg
imul
rcrb
mov
ljmp
lahf
iret
ja
cmp
imull
pop
xor
in
cld
sub
fmuls
pop
jmp
clc
inc
pusha
js
decl
das
fnstsw
xor
mov
fstp
enter
das
dec
push
push
imul
fbstp
or
push
and
jmp
jl
lret
nop
movsb
lahf
sbb
jge
out
loope
stos
repnz
push
fdiv
xlat
sbb
sbb
cmpsb
data16
and
pop
and
rorl
push
call
mov
or
jns
hlt
stos
mov
fadds
icebp
cmp
sbb
xor
sub
mov
jmp
push
insl
aam
pop
test
push
xchg
ss
inc
push
jns
mov
jne
mov
and
addl
outsb
rcrb
neg
or
sub
mov
test
xchg
aaa
jmp
ljmp
test
add
fucomip
cltd
mov
out
dec
movsb
loopne
fisttpll
arpl
jno
insl
sub
fdivs
js
mov
loopne
adc
mov
mov
jnp
aas
xchg
jl
mov
inc
xor
and
scas
int
dec
addr16
lock
mov
pop
insl
xchg
sbbb
sti
push
fcoms
addl
xrelease
fcmovnbe
imul
inc
mov
inc
or
mul
mov
cmp
ss
add
add
sub
jp
push
popa
aam
dec
sahf
sub
pop
xor
cmp
xor
retw
int
lret
mov
mov
push
pop
cmp
add
and
inc
loop
movsl
stos
aad
sahf
jg
push
cltd
pop
mov
pushf
inc
mov
cmc
outsb
jg
les
dec
xchg
xchg
jg
xchg
push
push
sub
jl
daa
and
dec
jmp
push
jb
or
mov
dec
cmc
push
pop
xchg
or
pop
cmp
or
xchg
sbb
shlb
aad
pop
mov
inc
adc
pop
mov
jmp
lret
repz
into
jbe
rorl
inc
shrb
aad
jg
mov
xor
icebp
sti
repz
in
push
add
pop
inc
sub
push
out
dec
daa
mov
pavgb
jmp
enter
adc
adcl
int3
mov
loop
lcall
mov
sub
arpl
aaa
mov
lea
ds
dec
mov
and
jns
jge
push
sbb
xor
xor
and
sbb
sti
fisubl
ljmp
pop
push
xchg
jmp
and
orb
mull
mov
sub
icebp
mov
cmp
mov
inc
jnp
fnstsw
jne
cmp
jl
stos
insl
push
sub
xchg
stc
out
xchg
nop
out
fcoms
pop
mov
push
mov
ss
mov
push
mov
loop
les
mov
fdivrl
push
cld
repnz
and
jne
xor
out
mov
inc
lods
push
icebp
mov
and
icebp
insl
ficoms
ret
adc
pop
clc
lahf
jnp
push
jl
adc
lods
sub
and
cmpsb
jbe
fs
cmpb
out
mov
aad
cmc
cmp
movb
bound
mov
jp
cmc
push
popa
into
pop
push
adc
cmpsl
pushf
cmp
pop
adc
enter
das
add
int
jle
sub
push
push
push
fsubs
or
addr16
pop
mov
sahf
mov
cmp
imul
push
pop
call
lods
pop
call
loop
lock
cmc
icebp
dec
repnz
jne
rorb
lods
cli
lds
push
push
xchg
push
xchg
decb
adc
mov
push
sub
jle
sbb
lods
pop
ficoms
icebp
pop
shll
lock
add
lahf
adc
mov
sti
mov
pop
add
inc
push
insl
xchg
xchg
lods
cwtl
xchg
and
jmp
in
cmp
aaa
dec
lock
ficoms
fwait
pop
int3
mov
xlat
mov
push
punpcklwd
mov
adc
mov
dec
mov
or
xchg
lock
das
fmull
flds
arpl
repnz
outsl
xchg
and
cld
lock
dec
mov
je
cs
ljmp
xchg
cmp
jle
lahf
movnti
std
in
and
xchg
aad
loopne
cmp
and
cmp
lcall
loop
and
sti
jne
mov
sbb
iret
mov
out
mov
rclb
cwtl
cmpsl
pop
jge
lods
fst
aad
push
or
dec
movsb
push
pop
aam
mov
pop
test
lahf
cmp
popa
subb
lods
cmc
shr
cmp
xlat
incb
into
push
dec
jl
sub
pop
ret
fistpl
push
pop
push
call
xorl
stos
lods
mov
xchg
mov
mov
pop
add
das
scas
and
aaa
mov
insb
lock
jmp
lds
adc
xadd
andb
hlt
or
jne
xchg
jle
mov
mov
clc
in
repnz
insb
jo
out
in
inc
jne
pop
and
dec
and
enter
dec
mov
aaa
std
mov
popa
adc
add
xchg
pop
pusha
test
xlat
cs
dec
in
push
ljmp
jae
mov
stos
mov
xchg
addr16
scas
or
dec
lods
icebp
fcomps
outsl
dec
scas
pop
fcomps
test
or
add
cld
xor
mov
out
push
pop
lahf
rorl
mov
mov
enter
push
pusha
ja
rorl
mov
sub
xchg
pop
push
inc
mov
dec
fwait
sbb
cmp
or
cmp
push
pusha
push
adc
or
add
mov
das
and
push
cmp
push
mov
push
inc
push
inc
and
loop
xchg
adc
and
out
inc
test
xor
push
int3
int3
mov
pop
bound
cltd
imul
mov
mov
test
call
daa
fs
mov
addr16
add
adc
push
popa
push
imul
imul
and
fcoms
inc
xchg
cs
mov
mov
out
ds
or
iret
stos
int3
add
and
enter
mov
push
mov
inc
mov
mov
mov
sbb
sub
mov
jmp
jle
push
std
arpl
aam
data16
out
leave
mov
sbb
sbb
call
dec
and
jo
cmp
xchg
jb
imul
dec
je
divb
pop
imul
orl
lahf
push
sbb
sahf
cmpsl
dec
jge
jmp
out
test
sub
jecxz
daa
fisubrl
inc
scas
imul
xor
test
add
jecxz,pn
sbb
jg
out
outsb
sbb
sbb
dec
push
dec
hlt
bound
aam
pop
mov
push
js
mov
clc
jbe
mov
mov
out
mov
les
cs
fildll
ds
fldcw
xchg
xor
or
movsb
sbb
cli
pop
adc
repz
pop
xchg
shrb
sti
mov
pop
xchg
pop
js
insb
xchg
mov
popf
add
and
aaa
push
lock
gs
fwait
js
aam
stos
sbb
sbb
imul
outsb
lods
mov
dec
stos
dec
push
lods
fwait
xchg
mov
jnp
mov
sbb
or
jb
or
shll
cmpl
mov
inc
shlb
js
cmp
mov
ret
jb
pop
scas
out
mov
sti
pop
sub
lods
ret
xor
mov
cmp
mov
mulps
leave
fadd
mov
mov
inc
push
or
iret
pushf
jae
push
pop
repz
sub
and
jb
iret
faddp
sub
ss
inc
mov
daa
xor
popf
sbb
mov
xor
orl
add
mov
bound
and
add
jae
dec
flds
arpl
repz
add
je
js
push
jne
adc
pop
imul
mov
sbb
jmp
or
mov
mov
inc
ja
je
xchg
inc
inc
pop
inc
mov
add
push
cmp
adc
aas
popa
xlat
lret
xor
or
xor
jns
mov
sbb
rclb
mov
mov
sbbl
ss
and
push
mov
cld
jae
xor
mov
add
lds
sub
fwait
inc
jge
fcomps
outsl
xchg
hlt
fs
add
jae
pop
outsl
sub
into
out
jp
stos
xor
and
orl
cwtl
jae
adc
jmp
arpl
imul
test
jne
loope
lods
iret
sahf
outsl
adc
daa
jl
cmp
sub
and
or
xchg
call
cmp
jnp
icebp
adc
out
arpl
jne
out
push
movsl
outsb
cmp
cltd
enter
lods
shll
mov
push
adc
mov
lret
enter
xor
insb
stos
mov
gs
mov
test
mov
mov
push
jne
push
inc
or
rclb
mov
out
in
inc
int
sbb
and
cs
clc
pop
adc
test
rorl
loope
int
push
xchg
xchg
loop
adc
mov
mov
adc
lods
push
mov
xor
cmp
pop
xchg
call
out
inc
add
shlb
push
leave
xor
icebp
jp
mov
divb
test
sbb
mov
or
push
aas
test
inc
pushf
xchg
out
xchg
push
or
mov
test
ficoms
andl
push
push
mov
xchg
in
adc
faddl
and
mov
scas
dec
sub
jb
shl
push
xor
jnp
pop
int3
add
add
enter
ds
clc
mov
add
mov
jg
out
cmp
jo
out
or
add
pop
stos
loop
sbb
pop
inc
ja
lret
repz
jmp
ret
mov
insl
ret
leave
push
mov
and
mov
dec
mov
xorb
cmp
push
movsl
test
push
xorb
cli
les
xlat
jmp
ds
mov
pop
jbe
mov
cmp
stos
pusha
popa
pop
stos
ja
pop
or
mov
pop
xchg
adc
push
fld
pop
out
xor
jno
push
fbld
mov
insb
lds
cld
adc
mov
in
xchg
mov
and
mov
cmpsl
pop
mov
mov
inc
fsubl
xchg
mov
je
adc
mov
js
fcompl
add
cwtl
sbb
pop
into
xorl
dec
and
mov
push
and
mov
jmp
call
push
sbb
rcl
jbe
pusha
mov
or
sbb
jl
lods
loopne
dec
push
cmpsb
jle
add
or
mov
pop
jmp
pushf
lret
movsb
inc
inc
jo
outsb
mov
ret
dec
xor
or
mov
lret
adc
lods
fidivrs
xor
aaa
into
sub
movsb
jns
inc
shlb
popf
add
js
cmp
ret
push
test
cmp
pop
pop
and
jmp
push
out
cwtl
mov
push
js
call
lds
testb
mov
pop
pop
sbb
jl
push
pop
fbld
fwait
xchg
test
add
cmp
jecxz
jp
rorb
int3
nop
popa
fwait
je
cmp
mov
and
adc
adc
jl
push
test
sbb
daa
loope
jnp
cmp
out
out
mov
jnp
dec
pop
sbb
pop
jl
and
dec
push
add
aaa
imul
jb
mov
inc
clc
shl
dec
ljmp
jbe
and
sub
adc
and
mul
adc
push
lods
out
lcall
xchg
push
cltd
bound
push
sub
std
jmp
loop
cwtl
mov
sub
jg
ficoms
iret
pop
xchg
scas
pop
sub
dec
and
mov
dec
or
add
lret
sbb
adc
adcl
das
dec
pop
pushf
lcall
repnz
in
dec
lret
mov
sbb
add
jnp
xor
sbb
mov
lcall
call
sahf
sbb
lea
pop
scas
jge
nop
xorb
sub
mov
sub
jle
sbb
adc
cwtl
and
sub
sub
ret
mov
leave
jle
es
call
loop
fcmovnu
jae
xlat
hlt
dec
inc
icebp
fcompl
inc
int3
and
sbb
dec
pop
pop
or
dec
push
pop
inc
into
pop
cmp
fwait
xchg
pop
sub
push
inc
fisttps
jno
add
xchg
push
outsl
movsb
jnp
lds
fdivl
iret
push
into
out
pop
fcompl
aas
jae
or
loope
push
xchg
cmpsb
test
xchg
xor
pop
pop
sub
push
leave
xor
sub
imul
adc
ljmp
mov
adc
push
and
pop
and
scas
or
in
jae
xchg
sbb
push
cltd
mov
lods
sbb
pusha
ror
sub
rorb
pop
outsl
mov
fimull
mov
fwait
popf
sub
repnz
push
lds
sbb
ret
or
aam
jg
lock
dec
and
fildl
xchg
mov
pop
push
outsb
xchg
inc
sbb
xor
cmp
mov
sbb
xor
sub
ficomps
pop
fdivs
adc
or
mov
test
lret
inc
movsl
ret
jecxz
in
xor
ljmp
int
fwait
mov
jno
push
mov
add
or
cmc
fwait
mulps
xchg
xchg
pushf
push
xchg
add
subb
add
ficompl
mov
fs
jp
sbb
sarl
ja
jmp
icebp
je
and
rolb
mov
xor
clc
ja
push
sbb
test
in
lods
or
fidivs
inc
addr16
jmp
fisttpll
popf
xor
push
xchg
aam
xor
push
pop
mov
movsb
out
adc
xchg
mov
rclb
mov
lods
call
shll
dec
push
xor
jae
dec
xchg
into
dec
lds
aad
push
scas
cmp
inc
in
je
ret
pop
pop
push
mov
ret
cmp
insl
cmpsl
imul
mov
push
ljmp
enter
push
xor
mov
dec
nop
xor
mov
cmpsl
sbbb
jnp
sbb
add
arpl
inc
scas
push
nop
and
cmpsb
loopne
sbb
xor
cli
jmp
ljmp
inc
dec
jl
pop
push
cmp
mov
rcrb
and
pushf
jbe
test
pusha
and
sbb
inc
outsl
cld
mov
jle
mov
popf
lret
sahf
jne
jmp
adc
sti
inc
lret
outsb
fistpl
stos
push
mov
fisubrs
jnp
dec
out
pop
sahf
sub
sbb
dec
sti
jle
outsb
fistpl
stos
push
mov
fisubrs
jnp
dec
out
pop
sahf
sub
sbb
dec
sti
jle
outsb
fistpl
stos
btc
mov
fildll
jnp
dec
out
pop
sahf
sub
sbb
dec
sti
jle
outsb
fistpl
stos
push
mov
and
rcll
sub
mov
push
in
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
adc
add
xor
and
push
adc
push
loop
ficomps
jp
pop
mov
mov
or
sbb
add
pop
lret
and
push
stos
inc
stos
jb
out
xchg
cmpb
mov
cmp
or
sbb
sar
ret
dec
mov
mov
imulb
pop
fidivl
cs
jns
je
cmpsl
dec
mov
scas
dec
mov
test
dec
je
mov
ss
dec
das
pop
xchg
rol
mov
hlt
out
jmp
jno
ret
jl
ret
je
fs
testb
dec
sahf
gs
sbb
nop
inc
clc
xor
fwait
and
nop
jp
push
mov
cmpb
mov
cmpb
ficomps
mov
add
xor
mov
jmp
xchg
mov
sub
hlt
loop
in
outsb
adc
scas
scas
imul
stc
sub
mov
add
sub
sub
pop
out
sahf
in
adc
xor
fcoml
and
lret
mov
mov
movsb
pop
add
sbb
xor
and
mov
cmp
push
imul
les
inc
lcall
sbb
jo
inc
scas
pop
mov
push
out
xchg
add
jnp
dec
mov
xchg
andb
mov
daa
cmc
xchg
aaa
test
mov
ficompl
pop
lods
cmp
jmp
sti
push
scas
jno
add
bound
mov
mov
cmp
or
sbb
jmp
sti
xor
and
push
stos
inc
mov
xchg
imul
shrb
ret
or
sbb
jmp
call
popf
and
push
sti
push
icebp
pop
or
rcll
jp
and
cmp
dec
lods
mov
sub
dec
out
push
testb
cmp
js
orl
xchg
dec
sub
out
sub
roll
std
pop
sbb
mov
and
clc
lods
loopne
xlat
jge
ret
jne
out
in
pushf
adc
cmc
sarb
add
push
popf
jo
mov
pop
or
aam
int3
insl
gs
inc
inc
repz
sub
insl
in
fiadds
roll
xlat
stos
arpl
sub
xchg
lea
fstps
mov
pop
sub
ds
sti
xor
jb
xchg
mov
or
in
shll
enter
adc
lret
bound
rcll
inc
rcl
and
and
push
or
add
xorl
adc
out
leave
mov
cmp
sbb
pop
das
fisubs
cmp
and
test
mov
sbb
jge
fistpll
jmp
gs
xor
mov
cli
into
and
arpl
push
test
jle
add
and
rolb
jp
sbb
sub
fsubrp
mov
bound
inc
jle
sbb
addr16
xchg
cwtl
adc
pop
lret
jl
fidivs
test
popl
dec
add
dec
xor
dec
sub
mov
push
fimull
push
and
mov
jmp
ds
fwait
pop
out
or
jnp
xor
hlt
mov
push
mov
pop
gs
xlat
jns
adc
fwait
mov
mov
es
enter
xor
test
mov
jno
pop
in
sub
rcrl
mov
loope
div
imul
pop
test
out
popf
and
pop
jg
cmpsb
dec
insb
fs
repz
or
xchg
xchg
add
aaa
xor
pop
pop
insl
stc
jge
ret
xor
aas
jb
aam
cmp
test
xchg
cmp
or
ljmp
bound
inc
and
ret
stc
adc
scas
into
adc
xchg
xchg
jle
cmp
cmc
or
sbb
or
inc
je
mov
push
xchg
or
loopne
adc
rclb
out
jge,pt
imul
jne
fdecstp
dec
gs
mov
cld
mov
adc
div
gs
loopne
lahf
das
sbb
pusha
shll
push
imul
fldcw
cwtl
jnp
xor
mov
add
and
cmp
pop
ljmp
inc
stos
nop
outsl
mov
jecxz
btc
mov
repnz
or
mov
push
je
mov
insb
or
and
inc
clc
jl
outsl
insb
jmp
and
arpl
pushf
jmp
jb
arpl
and
pushl
std
jb
outsb
orb
mov
lahf
pop
aas
lods
subl
inc
das
and
and
xor
div
das
loopne
add
data16
push
or
cltd
es
jl
notb
rep
imul
cld
fmull
and
stc
mov
xchg
sar
call
jnp
cmp
xlat
push
outsb
shll
dec
pop
inc
out
sbb
pop
xor
out
les
mov
or
sub
dec
lods
cmp
and
inc
ret
and
daa
cmp
xchg
push
scas
repnz
cli
xchg
push
mov
lret
inc
or
jp
cmp
xchg
enter
cmp
lcall
jp
dec
jnp
mov
dec
pop
imul
lock
xor
imul
sbb
fbld
or
lds
dec
adc
fucomip
into
jl
sbb
fisubrs
add
aas
popa
and
scas
daa
outsb
push
adc
push
jp
push
pop
cwtl
or
popa
aad
mov
sbb
adc
movsb
mov
pop
add
std
lret
out
fldt
sbb
jns
or
aaa
loope
into
iret
outsb
adc
jns
jb
jg
inc
adc
in
jne
xlat
xchg
js
ficomps
lock
mov
ljmp
mov
cmp
ficoms
shlb
xor
fisubs
test
adc
sti
jp
cld
mov
pop
rolb
jmp
mov
std
fcom
dec
add
insb
lret
mov
and
inc
cwtl
xor
nop
or
pop
pop
hlt
popa
cmpsl
cmp
sub
mov
and
lds
fiaddl
push
loop
push
repnz
jb
sub
dec
adc
ds
test
or
sub
mov
repz
mov
cmp
insb
gs
lcall
sub
hlt
addb
push
cmp
jp
add
push
outsb
inc
lds
sub
mulb
and
dec
fcmove
fsubl
cmc
fwait
jle
mov
insl
inc
imul
outsb
pop
imul
inc
in
or
xlat
inc
sti
pop
pop
into
jne
gs
add
inc
mov
mov
das
popa
dec
ret
les
lret
push
es
pop
sub
jno
and
orl
push
dec
mov
pushl
xlat
imull
mov
scas
test
adc
adc
xchg
ljmp
sub
repz
gs
fsubrl
js
lcall
aad
lods
pop
out
call
lahf
cmp
push
dec
pop
and
popf
add
loopne
pop
xlat
mov
lret
mov
lods
out
sbb
in
stos
in
xor
pop
aaa
push
dec
mov
sbb
repnz
ljmp
push
subb
pop
mov
add
dec
cmpsb
pop
sub
shr
cs
mov
push
jge
add
ds
dec
mov
cmpsb
inc
jo
push
test
int3
pop
ss
lds
les
cli
test
ss
pushf
sbb
fisttpll
adc
movsb
movsb
cltd
test
std
cmp
and
sahf
les
enter
cmpsl
stc
xor
xchg
data16
xor
stos
jnp
xor
hlt
into
xchg
shrb
push
jl
lds
and
cmp
mov
fimull
fstpl
es
pop
subb
movsl
xor
cmp
lret
popf
lcall
lock
bnd
push
iret
lahf
jp
bound
dec
imul
mov
push
imul
pop
inc
push
orb
idiv
call
mov
out
and
test
out
push
xchg
cli
scas
and
out
in
dec
inc
sub
test
cmc
das
stc
inc
out
lcall
pop
clc
add
or
pop
scas
fldcw
sub
das
rcll
jno
sbb
adc
sbb
cltd
push
inc
mov
xor
out
push
movsl
das
pop
mov
push
add
popf
ret
add
movsb
push
mov
test
cwtl
cmp
inc
add
popa
add
clc
ret
mov
popa
add
mov
dec
xchg
inc
in
and
lock
xlat
rcrl
add
pop
pop
cmp
iret
mov
fdiv
cmp
aad
in
xchg
stos
gs
insb
pop
in
or
mov
push
frstor
shlb
mov
repz
fwait
mov
lret
xlat
insl
sbb
testl
push
shl
sbbl
std
incl
and
hlt
dec
out
in
shlb
push
lea
ret
insl
mov
or
xor
out
cmp
lods
iret
imul
add
lds
xor
adc
inc
lcall
es
dec
in
cld
jmp
test
adc
dec
nop
mov
aas
insl
pop
inc
fadd
jns
pop
rcrl
cmp
gs
scas
inc
xchg
bound
popa
bound
sbb
jmp
jnp
cs
pusha
adcl
fiadds
sub
xchg
int3
mov
pop
jbe
sub
in
pop
outsl
sub
inc
adc
xchg
sub
shlb
lahf
mov
adc
jno
mov
imul
clc
cmp
jmp
aas
inc
lret
inc
xor
inc
fisubrs
sub
mov
push
xor
sbb
pusha
or
subl
je
std
aaa
out
std
ljmp
jns
jecxz
or
dec
not
into
test
lcall
clc
pop
int
add
arpl
sbb
icebp
cmp
rorl
cltd
repnz
ljmp
xchg
mov
cmp
js
mov
je
and
or
push
mov
push
in
idivb
jecxz
cmc
mov
sub
jecxz
mov
insl
mov
lock
fisttps
out
push
xchg
push
push
fs
pop
imul
icebp
adc
in
sub
mov
or
xchg
mov
xor
leave
or
imul
dec
push
ss
pop
jbe
jo
fimuls
inc
andb
xor
into
orl
lcall
test
add
push
jl
aad
xchg
cmp
sbb
xor
in
mov
push
adc
inc
adc
insb
shrb
data16
jns
shll
lcall
xchg
repz
push
xchg
and
or
jno
cwtl
xchg
shr
xchg
mov
loopne
imul
cmpsb
inc
cltd
popf
adc
pop
and
pusha
lahf
fistps
nop
mov
gs
mov
and
sbb
leave
and
sub
jns
idivb
jmp
xor
rcrb
lret
call
les
push
sbb
loope
mov
cmp
push
insl
sahf
loopne
ret
mov
mov
rol
or
insb
in
inc
and
lods
hlt
pop
lret
xchg
imul
sbb
add
inc
sub
xchg
clc
daa
jl
cmpsl
into
push
fmull
sub
xor
hlt
dec
cmc
ds
mov
mov
mov
arpl
popf
or
or
jo
push
int
aas
inc
into
subb
jmp
cmp
sbbl
sbb
filds
add
jbe
dec
ret
sub
xchg
iret
sti
jge
scas
xor
sbb
cltd
repnz
outsb
mov
inc
fmul
setle
jno
push
lcall
lcall
cmovp
cld
or
mov
ret
jo
xchg
xor
mov
mov
mov
ror
jmp
pop
aad
xchg
jo
pop
mov
adc
sbb
jmp
mov
xchg
cs
xlat
sbb
push
in
dec
or
scas
add
push
pop
repnz
dec
sub
xor
mov
dec
push
dec
inc
xchg
mov
call
jb
in
in
in
call
push
xchg
xor
lock
jae
rclb
mov
dec
mov
lret
adc
push
std
sbb
mov
das
jge
jmp
cmp
dec
sahf
mov
shlb
loope
jecxz
xor
mov
xor
push
cmp
mull
arpl
fisubrl
arpl
fbld
and
lods
out
adc
ljmp
movsb
adc
js
dec
addr16
arpl
int3
mov
and
jae
andl
pop
push
push
sbb
cli
or
push
jb
cmp
popa
mov
pop
test
rol
jno
aam
xor
or
mov
aam
inc
cmp
subl
lock
mov
sarb
in
mov
jmp
mov
cli
dec
mov
xorl
mov
xor
lahf
xchg
and
xor
sub
mov
jae
cli
cmp
insl
mov
popa
rcl
pop
xor
repnz
xchg
lahf
stc
outsb
push
or
fsubs
inc
xor
jne
dec
xor
sbb
jg
pop
jo
adc
dec
fistl
fistl
cmp
movsb
std
aas
dec
xchg
fistl
insb
ret
repz
push
xor
push
mov
push
mov
sbb
pop
mov
mov
insb
dec
xchg
test
or
cli
adc
stc
pop
ret
xor
cmp
clc
mov
outsb
cmp
loopne
ja
xchg
flds
inc
add
enter
mov
jno
push
xchg
jg
inc
leave
cld
lret
int3
adc
loop
shr
cmp
outsb
div
or
ret
inc
sbb
cltd
cmpsl
xor
lret
and
xor
inc
add
dec
sbb
mov
cmpl
dec
test
inc
jbe
das
insb
insb
clc
mov
dec
into
popa
add
jp
cmp
cltd
das
das
mov
test
add
popf
mov
imul
mov
mov
popa
stc
jmp
add
cmp
and
out
push
mov
mov
adc
inc
test
sbb
lods
add
cli
test
jle
xchg
jmp
mov
xor
int
rcrl
xor
pop
stc
xchg
push
bound
iret
mov
es
outsl
test
daa
or
pop
cltd
cmp
movsl
push
loop
inc
dec
nop
lock
mov
aam
fcomp
mov
lds
daa
ret
call
les
int3
or
sbb
outsl
add
sub
call
adc
out
mov
mov
mov
fists
inc
in
icebp
aas
jae
dec
pop
adc
mov
out
arpl
mov
shl
or
pusha
push
mov
xor
enter
stos
dec
adc
inc
mov
or
daa
xchg
loop
jge
mov
test
cmpsb
push
jle
pop
mov
add
mov
xorl
pop
ja
sbb
out
pusha
imul
lea
cwtl
xchg
or
inc
inc
mov
xchg
pop
int3
outsl
fs
push
sbb
sub
into
lds
jle
maxps
bound
or
dec
or
cmpsb
data16
pop
dec
xor
je
fidivs
sbb
dec
inc
fisubl
xlat
rolb
inc
aaa
xchg
pushf
loope
mov
negb
inc
push
and
scas
and
xchg
xchg
xor
cmpsb
mov
incb
nop
hlt
out
jg
in
xadd
dec
pop
rcrl
or
cmp
jns
fidivrl
std
shll
and
iret
inc
cmc
rol
stos
mov
adc
push
cmp
dec
cmp
call
lds
mov
in
add
in
shl
cmpsb
loop
sti
in
movsb
in
cmpsb
cld
mov
lea
hlt
mov
fs
out
jg
fs
pop
and
adc
cmpsl
pop
cmp
mov
push
js
into
icebp
push
mov
cmp
mov
sbb
js
outsb
sbb
add
dec
lock
sbb
or
sub
mov
pop
stos
nop
cmp
jbe
scas
inc
xchg
jmp
or
movsb
pop
mov
xor
lea
and
in
adc
jae
das
fcomps
lock
loope
lds
out
sahf
lcall
out
dec
pop
xchg
mov
dec
addr16
pop
ljmp
xchg
fwait
das
cmp
jbe
inc
mov
and
into
mov
enter
xchg
add
call
push
pop
popa
fmull
jns
sbb
inc
pop
pop
xchg
inc
mov
in
inc
mov
andb
insl
pop
cmpsb
daa
inc
int
inc
in
out
cld
inc
pop
mov
aad
imulb
push
or
out
cmp
sub
xchg
ss
js
xchg
lods
fdivrl
fdiv
jno
mov
aad
repnz
test
jp
rorl
sbb
cmp
iret
sbb
fnsave
mov
dec
call
mov
test
and
bound
cmc
ret
xchg
jle
les
sbb
xor
test
out
lods
sbb
mov
fs
ss
insb
xchg
scas
xor
sbb
sub
and
clc
jno
adc
inc
test
mov
dec
popa
and
insb
imul
pushf
add
or
add
mov
push
mov
fnstenv
xchg
push
rolb
xchg
push
orb
sar
test
mov
dec
push
sub
mov
fnstcw
xor
gs
pop
mov
push
loope
adc
adc
pop
push
sahf
ljmp
pop
xlat
dec
out
icebp
movsb
xchg
push
mov
test
fildl
inc
xlat
pop
cmp
loop
or
div
in
movaps
push
fidivl
adc
mov
mov
pop
mov
orb
out
mov
push
dec
in
adc
ja
fistl
jl
in
fidivl
inc
std
push
pushf
adc
dec
sub
cld
inc
pop
movnti
adc
push
lret
mov
add
pop
cmp
pop
arpl
mov
and
arpl
mov
outsl
out
in
inc
imul
inc
in
sahf
pop
fwait
push
cmp
push
cmp
cmp
subb
jnp
nop
leave
int
inc
push
and
xor
adc
movl
jg
lock
dec
push
addr16
loop
test
push
adc
xchg
xchg
das
xor
or
or
stos
ljmp
push
dec
sbb
xor
inc
dec
or
sbb
fsubr
daa
jno
sub
add
ficompl
push
pop
jp
mov
cmpsb
lds
in
arpl
ja
imul
in
mov
jbe
test
dec
popf
push
lods
loope
in
stos
mov
cmp
inc
sahf
inc
repz
in
mov
and
add
xchg
lahf
ds
mov
out
inc
clc
das
popf
adc
lds
mov
inc
pop
xchg
ss
lods
add
xlat
push
ficompl
das
arpl
sub
popf
icebp
repz
cli
cmp
mov
and
ret
cmp
aas
rolb
dec
jge
jg
ficoms
pop
hlt
fcmovnbe
mov
mov
xchg
popa
cmpsl
jmp
mov
fistpl
ds
ja
or
addr16
add
adc
arpl
and
xor
xor
sub
pop
push
jbe
test
mov
fiaddl
test
jnp
outsl
mov
dec
mull
clc
sub
test
ret
lret
jbe
or
mov
movsb
mov
mov
cmp
or
inc
loope
fists
cmpsb
call
dec
jo
mov
xor
mov
cmpsb
ds
mov
and
add
push
mov
jbe
cmp
cmp
push
sub
or
mov
cli
jbe
push
movsl
mov
sbb
loopne
push
out
dec
mov
adc
cmp
test
out
inc
inc
jae
frstor
sbb
mov
sarl
mov
sbb
dec
lds
add
jbe
jns
or
mov
add
jg
cmp
test
dec
je
std
fs
pop
mov
aad
mov
rorl
jb
in
call
mov
in
lret
ds
loopne
jns
push
fidivs
pop
xchg
jle
xlat
push
cmc
mov
fwait
fwait
and
test
arpl
jns
cmp
inc
lea
pop
mov
jge
ljmp
sub
mov
outsb
and
ret
mov
mov
aam
and
out
pop
enter
mov
std
sbb
insb
cs
pop
outsl
shll
jp
in
xchg
stos
gs
shrl
mov
or
movsb
xchg
lcall
les
fdivrs
mov
push
aaa
pop
repz
mov
and
int3
pop
cmp
call
lahf
jl
push
xor
push
nop
inc
dec
cmp
mov
and
xor
xor
stos
out
shlb
push
pop
mov
push
ret
sub
xor
push
xchg
push
leave
push
fs
pop
pop
or
nop
jg
aam
mov
aad
cmp
mov
lea
scas
in
dec
xor
mov
scas
and
clc
and
cmp
test
sub
bound
jo
mov
jl
rcll
std
nop
push
sub
mov
das
lods
add
aam
mov
outsb
or
adc
mov
fildl
mov
push
push
es
sbb
lea
inc
andl
fdivrs
scas
test
out
sub
popa
and
iret
push
in
std
push
mov
push
loop
es
push
mov
iret
mov
jb
mov
fcomps
push
pop
push
add
ret
pop
lret
and
xchg
jmp
mov
pop
into
or
mov
adc
call
sub
negl
xchg
shll
mov
adc
arpl
push
into
jbe
or
int3
sub
aaa
or
punpckldq
and
sti
mov
jnp
bound
xchg
leave
dec
cmp
or
add
shll
stc
cmpl
push
and
popf
jl
scas
mov
xor
add
or
jge
repz
aas
adc
inc
mov
mov
sahf
jecxz
mov
pop
iret
mov
jnp
je
fnstenv
sbb
in
movsl
sub
mov
add
sub
in
adc
mov
adc
push
andb
push
daa
mov
adc
mov
sti
jne
and
push
stos
inc
mov
xchg
imul
shrb
ret
or
sbb
jmp
sti
xor
and
push
stos
inc
mov
xchg
imul
shrb
ret
or
sbb
jmp
sti
push
lret
and
ret
mov
xchg
imul
shrb
sarb
repnz
pop
push
out
pop
ljmp
add
push
stos
push
mov
xchg
imul
dec
mov
inc
or
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
lds
push
in
cmc
ja
outsl
cli
js
pop
mov
xlat
gs
testl
inc
aad
in
cmc
ja
pop
xchg
pop
movsl
daa
mov
push
push
mov
out
testl
inc
int3
push
std
addr16
ja
pop
lea
mov
outsl
jbe
cmp
jp
jns
bound
in
andl
rclb
ret
pop
scas
fucomip
mov
jb
inc
adc
std
scas
add
inc
adc
xlat
popf
add
scas
test
ja
das
jl
cltd
out
jp
repnz
out
pop
sub
nop
mov
inc
mov
addr16
adc
stos
sub
clc
or
pop
xor
aam
stos
shll
push
xchg
pop
pop
test
enter
mov
cli
in
adc
cmp
loop
mov
lea
call
cmp
aaa
std
xchg
adc
cmp
add
mov
xchg
lcall
fcom
sbb
and
push
and
inc
int3
push
in
cmc
ja
pop
test
movsl
daa
lods
aaa
pop
dec
xlat
jge
insb
negl
cmpsl
xor
push
orb
push
imulb
pop
call
mov
adc
push
movsl
pop
imulb
test
jmp
push
out
push
mov
xor
add
ret
mov
setge
int
xchg
pop
movsl
daa
mov
inc
push
xlat
gs
testl
inc
aad
in
cmc
ja
pop
xchg
pop
movsl
daa
mov
inc
push
xlat
gs
testl
inc
cli
push
pop
aad
xor
lret
xchg
std
xchg
das
add
jecxz
cmp
cmpsl
adc
push
mov
push
dec
jge
inc
mov
mov
xchg
fisubrl
test
jge
mov
les
aas
add
add
xchg
loop
xchg
cmpsl
sar
je
mov
fidivrl
leave
add
sti
adc
clc
lods
jg
or
fcomip
aas
jecxz
daa
xor
dec
test
andl
hlt
inc
or
lods
and
sbb
mov
mov
lds
or
pop
std
inc
lds
or
icebp
xor
push
aam
test
test
popa
adc
ss
cmp
mov
rclb
lahf
pusha
adc
jg
int3
sub
pop
scas
sbb
daa
pushf
jge
out
repnz
ds
or
cmp
cltd
movsb
enter
aas
dec
push
out
fldl
sbb
repnz
cmp
mov
dec
shrl
mov
hlt
out
dec
es
xor
push
xchg
sbb
dec
inc
arpl
int3
mov
xchg
mov
sbb
dec
push
out
in
adc
test
pop
data16
imull
mov
add
mov
pushf
test
popf
pop
and
xchg
clc
insl
loope
nop
enter
out
adc
popa
jg
mov
sub
push
ds
lods
push
lret
xor
mov
insb
ds
xchg
fldenv
gs
and
or
cld
out
fildll
ljmpw
int
ja
mov
xchg
or
mov
nop
pop
cmp
lea
sbb
cmp
roll
jle
lock
stos
es
in
xor
nop
pop
dec
cmp
cmp
out
mov
mov
lcall
inc
sbb
shlb
cwtl
xor
xchg
divl
scas
adc
pop
pop
je
imul
cmpsb
or
sbb
pop
out
cmpl
or
loop
popa
push
xchg
sbb
pop
jmp
lods
adc
inc
mov
add
out
cmp
cmp
ds
mov
jno
jmp
pop
add
pop
insl
imul
jbe
cs
inc
xchg
les
in
jmp
and
fsubl
cmp
cmc
dec
mov
lret
fadd
js
int
xor
je
lods
jp
push
sub
rcr
seta
rcll
jne
pop
mov
push
jne
pop
jp
fiadds
es
pop
jo
sub
push
mov
insl
inc
xor
lret
adc
xor
push
rcrl
xorl
dec
imul
pop
push
lret
fistl
xchg
pop
aas
mov
pop
out
inc
lahf
pop
mov
enter
arpl
filds
idivb
fidivs
jnp
rolb
ja
xor
mov
or
int3
jbe
xchg
shl
xlat
fldt
jmp
xchg
stos
test
dec
fcomps
lret
sub
test
pop
and
push
mov
push
rcrl
push
mov
imul
icebp
and
sti
cltd
pop
mov
mov
nop
scas
and
push
ret
scas
lods
add
push
cltd
cmp
or
cmpsl
sub
and
faddp
in
add
add
insb
pop
dec
loopne
insb
cmp
scas
cmp
fnstenv
test
cmpsl
repnz
popl
or
mov
data16
repz
sarl
adc
aas
pop
cmp
cld
jb
das
cli
out
mov
or
shll
leave
push
stc
dec
mov
xchg
adc
cmp
repnz
call
cmp
add
popa
call
push
adc
sbb
cmp
daa
stos
scas
push
push
adc
jecxz
mov
jmp
fwait
add
cmpsb
push
xchg
cmpsl
fdiv
mov
jecxz
pop
or
mov
and
pusha
jno
jne
movsl
mov
js
lcall
mov
and
stos
add
inc
pop
dec
out
lods
outsb
sahf
dec
bound
cmp
add
pop
mov
add
lcall
sbb
call
add
pop
clc
loopne
pop
orl
sahf
jno
mov
lea
dec
fwait
add
xchg
jne
inc
inc
xchg
xor
and
rcl
mov
into
xchg
sti
outsb
test
aad
sub
and
loop
sahf
xor
repz
pop
mov
roll
lods
mov
sub
test
xor
pop
mov
lods
mov
insb
mov
cltd
pop
dec
xchg
adc
insb
mov
call
inc
mov
cmp
add
lret
mov
roll
pop
xchg
add
sahf
or
mov
sub
popf
in
inc
mov
les
and
sub
ss
jb
cld
roll
shlb
stc
push
loope
lcall
xchg
in
push
int
dec
xlat
mov
addr16
mov
movzbw
lcall
dec
punpcklbw
sti
insb
dec
and
filds
in
sbb
cwtl
fsubs
jge
dec
xchg
pop
jle
adc
push
push
lahf
pop
xchg
pop
lret
inc
lods
push
cltd
fidivl
pushf
push
cltd
jle
test
sbb
inc
and
and
dec
push
sti
hlt
push
adc
adc
jl
jns
fisubrs
and
in
and
xchg
jns
out
mov
lods
pusha
test
mov
pop
inc
test
sbb
mov
jecxz
add
vpaddq
add
lcall
rol
sub
push
jo
jno
jae
dec
inc
add
insl
rcll
loopne
or
push
jg
push
repnz
and
repnz
imul
iret
in
stc
cmp
lods
lret
sbb
ljmp
push
jl
scas
clc
ds
fidivrs
xchg
ret
sbb
lea
mov
push
cmpsl
mov
sahf
popa
and
not
push
adc
dec
repz
loop
shrb
cmp
dec
sub
inc
fs
push
test
add
aam
loope
orb
add
pop
or
mov
pop
jns
int3
pushf
xor
in
mov
loopne
into
sub
in
in
mov
sub
in
addr16
mov
mov
dec
mov
xor
fs
fdivl
mov
cmp
inc
push
insl
sbb
leave
jbe
jne
xchg
negl
and
pop
inc
xor
arpl
mov
in
lahf
outsl
fists
enter
cmc
aas
pushf
pop
loopne
lcall
push
jns
andl
xor
sbb
xchg
xlat
pop
dec
push
jmp
lds
loop
popa
jg
rorl
pop
cli
adc
push
mov
scas
xor
into
push
dec
js
bound
fildl
mov
imulb
ret
pop
int
cmp
fidivrl
push
and
adc
rorb
outsb
mov
stc
cmp
pop
fidivrs
pop
out
leave
ss
rolb
dec
mov
gs
cmpsb
notb
jo
adc
sub
or
repnz
inc
ljmp
leave
ret
xchg
push
imul
lods
dec
pop
mov
pop
pop
sahf
fcmovnu
jae
aam
mov
inc
mov
dec
subb
lock
test
jnp
xchg
aaa
jmp
xchg
pushf
fwait
push
in
popf
iret
pop
xor
jecxz
and
push
icebp
sbb
xor
decb
dec
sub
cld
or
push
sbb
mov
pop
mov
cltd
adc
adc
jne
out
jo
sahf
stc
inc
pusha
in
inc
cmpsl
jecxz
sbb
stc
mov
loope
imul
je
call
jne
and
daa
mov
imul
pusha
xor
cld
jecxz
jne
push
mov
ret
inc
jge
ret
pop
popa
test
scas
test
nop
rcrb
dec
xor
jno
and
cmp
sub
push
test
imul
mov
inc
dec
pop
cmp
popa
lret
mov
xor
push
orb
xchg
add
lret
leave
dec
ficompl
push
sub
mov
mov
stc
popf
ret
mov
mov
xor
es
or
rcll
xchg
lcall
pop
push
and
push
inc
jno
movsb
xchg
leave
xchg
lds
sbb
data16
enter
pop
push
lea
rcrb
ljmp
dec
push
cmpsl
pop
push
jmp
call
jns
or
out
iret
inc
lahf
sbb
mov
mov
jmp
fidivrl
mov
inc
in
mov
mov
loopne
push
or
push
aad
out
adc
cmp
cli
inc
push
insb
xchg
jbe
fidivrl
cmp
loope
jbe
es
jmp
add
out
push
sub
xchg
jge
loope
test
lods
jp
hlt
pop
fsubp
test
mov
mov
jge
push
nop
mov
push
out
add
in
int3
movsb
jbe
or
jb
addr16
lds
push
push
xchg
push
push
push
xor
mov
test
bound
in
jg
cmpsb
pop
or
jo
xchg
bound
xor
cs
addr16
jg
mov
inc
push
andl
cwtl
mov
mov
mov
pop
rclb
iret
std
mov
lock
mov
int
sbb
push
jg
jmp
sti
cmpl
fsubr
add
das
sbb
push
dec
sbb
pop
ss
jno
ret
inc
and
sbb
movsl
orl
add
fucom
mov
inc
xchg
push
pop
add
mov
ret
lock
xor
jo
nop
inc
xor
scas
mov
sub
bnd
push
mov
in
pusha
mov
inc
ss
and
div
or
ficoms
lret
aam
jo
sti
pop
xor
out
les
ret
cld
sbb
xor
cli
cltd
lds
mov
lea
pop
pop
mov
in
xchg
lahf
add
data16
popa
add
mov
cmpsb
add
aam
or
rcr
stos
adc
test
adc
sbb
addr16
insb
shlb
dec
jbe
jl
and
sarb
adc
add
roll
jl
in
xchg
xchg
gs
push
call
or
add
or
orl
sbb
ret
push
dec
jle
dec
cmp
aaa
mov
pop
xchg
aad
imul
int
iret
xchg
cwtl
test
mov
fcmovbe
or
ret
out
scas
adcb
insl
imul
inc
sub
rolb
test
mov
loope
mov
call
mov
mov
scas
sub
fs
outsb
cwtl
int3
jae
loop
out
mov
jnp
mov
out
orl
das
out
stos
mov
mov
fdivr
dec
repnz
mov
sbb
ror
and
cmpsb
clc
adc
test
std
push
and
stc
fs
push
pop
mov
inc
push
mov
jle
cmp
negb
lock
adc
cmp
sbb
lcall
adc
jns
xchg
adc
mov
mov
and
sbb
orl
fs
jle
jne
jg
mov
call
hlt
test
ficompl
inc
call
fs
test
cmp
fisubrl
repz
adc
add
lods
inc
xor
mov
cwtl
mov
push
rorl
mov
push
lea
dec
cmp
mov
pop
iret
out
push
ja
in
add
ja
jb
ljmp
mov
adc
inc
mov
cmp
sub
call
cwtl
jns
push
adc
testb
sub
mov
inc
ljmp
cmp
test
sub
pop
or
cltd
daa
cmpsb
xchg
pop
sarl
cmp
bound
jmp
js
je
addl
cltd
or
inc
cld
lahf
sub
mov
out
adc
pop
xchg
test
mov
fidivs
or
mov
stos
add
jae
dec
cs
and
xchg
nop
mov
ret
adc
rcrb
inc
sbbl
jns
fsubrl
fwait
out
stos
xchg
xchg
jns
mov
xchg
inc
leave
data16
lret
or
dec
cmp
gs
jg
inc
or
cmc
and
pop
in
imul
sub
std
jns
es
in
cmp
xor
dec
and
popf
pop
xlat
movsb
in
dec
adc
jmp
cmp
jmp
fwait
pop
pop
push
stos
into
sbb
mov
xchg
stc
cwtl
negl
dec
dec
test
push
fldenv
or
xor
add
in
mov
mov
xchg
cs
fdivr
add
push
or
cmpsb
lods
js
fdivl
daa
lock
jae
push
bound
filds
outsb
lods
fs
jae
cmp
pop
mov
cwtl
xor
add
mov
pop
mov
addr16
out
or
xor
scas
pushf
pop
jle
sub
popf
jb
push
jg
movsb
jb
lods
adc
pop
jp
adc
bound
das
sbb
pushf
inc
jae
jmp
in
add
enter
push
icebp
fcoms
xchg
shlb
negl
mov
dec
in
sbb
push
mov
dec
xchg
or
bswap
fidivrs
rolb
es
adc
push
rorb
jecxz
clc
jo
push
scas
mov
and
push
roll
movsl
push
mov
jbe
push
jp
mulb
add
jae
sbb
fistl
lea
out
xor
mov
movsl
int
xor
icebp
divl
fcoml
push
jns
inc
outsl
inc
lcall
push
icebp
xor
sub
sahf
xchg
movsl
push
out
adc
fisubrs
or
movsb
jb
push
aaa
pop
ljmp
dec
fwait
xchg
jecxz
add
loopne
fists
and
dec
ficoml
cmp
sti
in
mov
imul
xchg
adcl
cmpsb
xor
cmp
mov
ficoml
xchg
push
push
dec
pop
mov
inc
sbb
insl
bound
pop
and
cmc
or
xchg
push
mov
push
jnp
jo
sbb
dec
mov
test
cmpsb
dec
xor
pop
pop
adc
push
jmp
dec
push
dec
stc
in
incl
add
pushf
orb
inc
mov
insl
jne
push
xchg
movsb
cld
xor
arpl
jne
fcoml
imul
sub
in
sub
ret
mov
push
pop
hlt
pop
lods
push
fwait
push
ficoms
mull
sub
clc
lods
push
fs
jg
and
sub
lret
nop
adc
cmp
fidivrl
pusha
xchg
loope
or
sbb
outsl
mov
cld
nop
and
mov
fs
stc
sbb
sbbl
dec
pop
scas
test
jecxz
jns
ss
pop
cmp
fcmovb
and
xor
aad
xchg
loopne
mov
jg
jnp
aas
cmpsb
push
cmp
push
adc
pop
out
cmp
sbb
repnz
xchg
mov
xor
mov
or
inc
push
mov
mov
pop
in
push
mov
and
popf
push
sbb
jo
or
mov
test
add
push
test
in
or
mov
jo
loope
sbbl
cmp
scas
adc
into
loope
or
adc
push
mov
jb
xchg
or
ror
and
sub
into
in
and
daa
movsl
outsl
jae
bound
sub
pop
mov
das
add
cmc
mov
mov
pop
enter
cmp
xorb
fistpll
lret
jle
leave
pop
jp
aaa
ljmp
push
inc
test
xchg
mov
jnp
pop
cs
push
icebp
lea
mov
into
sbbb
iret
add
xchg
dec
std
int
add
mov
rol
mov
mov
rcll
aaa
shlb
lahf
jae
push
lods
ja
mov
in
pop
hlt
mov
xchg
out
loopne
sbb
push
add
xor
xor
pop
inc
iret
cmp
adc
mov
stos
cmp
add
xor
sbb
push
fiaddl
lods
pop
std
and
clc
jl
in
mov
pop
call
lods
data16
iret
jb
aaa
fdivs
loope
loop
mov
movsl
mov
dec
stos
mov
push
mov
mov
sub
mov
cmpsb
adc
sti
std
jl
je
add
test
jg
inc
pushf
xchg
insb
dec
scas
negb
nop
dec
int3
mov
cmp
in
dec
lcall
mov
and
insb
test
into
dec
mov
jle
cmpsl
dec
cmp
pop
lret
aaa
or
and
push
ds
pop
test
cmp
mov
fwait
int3
roll
mov
jg
hlt
push
lret
mov
pop
or
xor
xchg
repnz
mov
sarb
add
inc
imul
push
pop
and
imul
mov
aaa
xor
fisubrs
es
hlt
sbb
xorb
mov
xchg
inc
add
cwtl
xor
out
icebp
nop
leave
jbe
sub
hlt
repnz
insl
div
pusha
mov
lret
data16
leave
loope
cli
adc
int
test
ljmp
lret
or
imul
divl
mov
jno
xor
mov
icebp
push
mov
repnz
fistps
call
popa
push
and
sub
push
aaa
and
inc
outsl
aad
stos
test
push
insl
loop
xchg
icebp
ret
or
aaa
mov
ljmp
stos
jb
lds
imul
testl
ss
stos
dec
jmp
cmpsb
xor
jg
lcall
jo
mov
adc
lea
imulb
scas
adc
leave
insb
movb
clc
pop
or
inc
sahf
push
loopne
lds
sarl
test
test
cmp
inc
and
in
sar
sub
push
mov
xchg
mov
push
pop
xchg
js
or
imulb
push
movsl
pushf
sbb
adc
mov
xchg
mov
adc
and
cmpsb
in
aas
or
push
dec
je
adc
fwait
lods
pusha
add
mul
jp
pop
in
loop
xchg
sub
jbe
sahf
imul
adc
or
xchg
mov
nop
shrb
jecxz
in
add
insb
std
imul
cmp
dec
jno
mov
cld
clc
and
sub
push
push
daa
dec
mov
les
pop
daa
std
push
jns
jo
pushf
call
sub
in
mov
mov
sub
sub
jle
dec
daa
shrl
int3
mov
push
or
out
jg
sbb
mov
xor
pop
cmp
dec
push
adc
test
mov
xchg
cmp
dec
xchg
fbstp
mov
decb
repz
cmp
in
mov
dec
aaa
into
dec
sti
sbb
shrb
leave
adc
add
insl
add
and
push
sti
mov
jmp
ret
push
cmpsl
mov
pop
add
pusha
xchg
push
xchg
pushf
mov
pop
js
ror
cltd
xor
ljmp
aaa
call
popf
pushf
dec
int
pop
add
push
xor
es
vaddss
stos
dec
pop
and
movsl
dec
mov
xchg
fs
mov
sti
pop
in
mov
in
ds
in
scas
mov
add
or
dec
xor
inc
popa
outsb
sub
mov
stc
loope
jnp
add
cmc
push
lock
in
and
fcoms
aaa
ss
xchg
mov
pop
or
arpl
imul
daa
or
bound
cmpsl
ljmp
mov
push
stos
mov
enter
out
xchg
jl
shrb
into
push
xchg
jp
pop
or
jbe
and
mov
push
push
fiadds
add
or
mov
nop
in
adc
push
pop
in
pop
pop
pop
dec
test
jno
inc
push
mov
sbb
xor
nop
jmp
sbb
mov
popf
sub
ficoms
scas
add
mov
mov
mov
sbb
test
mov
gs
jl
lret
pop
sbb
movsl
ja
jbe
push
xor
pop
shl
xor
lock
mov
cmc
scas
dec
lock
pop
mov
adc
cmp
je
pop
mov
int3
cmp
out
mov
or
shl
jecxz
mov
int
faddl
addr16
out
aam
sbb
scas
pusha
bound
add
clc
xchg
jae
mov
leave
push
cmp
pop
int3
mov
fildll
fsts
pushl
cwtl
push
clc
popf
shr
aad
ret
xchg
mulb
imul
mov
outsb
add
test
out
addr16
ja
pop
xchg
pop
movsl
daa
mov
inc
push
xlat
gs
testl
inc
aad
in
cmc
ja
pop
xchg
pop
movsl
daa
mov
inc
push
xlat
gs
testl
inc
aad
in
cmc
ja
pop
xchg
xchg
movsl
daa
mov
inc
inc
push
xlat
gs
testl
inc
xlat
push
in
cmc
ja
pop
xchg
pop
and
stos
jge
out
xorb
push
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
jnp
imul
pop
aad
movsb
outsb
mov
mov
lret
push
mov
add
adc
in
hlt
pop
les
cmp
mov
scas
dec
lret
push
mov
add
adc
inc
imul
pop
dec
mov
sbb
jmp
test
in
shll
push
aad
in
xor
cmp
nop
pop
lock
cmp
xor
xor
mov
pop
lock
aaa
scas
mov
sub
mov
aas
adc
imul
dec
add
xor
pop
orl
gs
cmp
je
iret
sti
andl
and
rorb
ds
hlt
sub
mov
test
inc
arpl
sti
loope
xchg
push
mov
ret
mov
test
pop
or
cmp
adcb
push
lret
movsb
inc
movsb
ss
test
cltd
test
push
or
stos
add
jmp
inc
in
adcb
xchg
mov
xchg
fwait
call
imul
mov
aam
movsb
sub
fs
fildl
push
fwait
sbb
es
test
mov
jle
dec
sarl
loope
aaa
fisubs
pop
fbstp
jge
mov
cs
sbb
or
lcall
xor
popa
mov
xchg
unpcklps
test
mov
sbb
je
inc
lret
push
mov
add
adc
in
hlt
pop
les
cmp
xchg
sti
fs
fildl
mov
add
adc
in
mov
loope
aad
outsb
enter
pop
jo
add
imul
cmc
dec
sub
xor
popf
jl
mov
push
cmp
js
push
add
and
pushf
xor
fs
or
push
repnz
insb
push
in
shrb
and
push
daa
jg
pop
mov
sbb
xchg
jne
sti
xchg
ljmp
mov
xchg
mov
jnp
jb
cmp
or
fiaddl
fidivl
ljmp
movsb
xchg
cmp
adc
xor
idiv
or
arpl
xor
jmp
cmp
sbbl
mov
xchg
xchg
cmpsb
cmp
jae
fwait
xchg
add
cmc
out
lods
xchg
rclb
inc
mov
dec
in
div
adc
inc
mov
or
cmp
xchg
fs
sub
arpl
out
ljmp
mov
scas
fstl
jge
cs
cs
sub
push
adc
cmp
addr16
cmc
adc
cmpsl
aas
pop
inc
out
push
repnz
cwtl
xchg
inc
xchg
cltd
lret
mov
pop
sti
cmc
xor
dec
loope
xchg
push
shrl
stos
jmp
lahf
and
cmpsb
xor
pop
nop
int3
cmp
cmpsb
ret
in
mov
or
inc
test
insl
pop
mov
repz
outsb
clc
out
insb
out
mov
mov
je
std
leave
aas
mov
cmp
out
adc
cmp
jne
jp
xor
popf
lock
pop
push
cltd
xor
xchg
fucompp
or
out
imul
xchg
aam
lock
pop
mov
pop
aad
ljmp
movsb
xchg
mov
in
jl
icebp
push
ror
adc
fsubl
cmp
push
mov
movsl
sbb
xchg
mov
std
lds
push
repnz
sahf
sbb
scas
sub
std
out
mov
jmp
insl
push
cmp
dec
in
nop
mov
mov
mov
fs
xchg
mov
cmp
mov
add
xor
mov
pop
mov
cmp
dec
xchg
inc
add
rclb
sbb
sub
mov
fcompl
add
rcrb
xchg
rcl
jo
add
xchg
pop
pushf
rcrb
jne
pop
mov
sbb
xchg
or
mov
scas
add
and
mul
push
stos
mov
add
scas
je
outsb
loopne
cmp
mov
mov
fwait
adc
scas
in
inc
jns
cli
je
push
push
xchg
jbe
bound
jae
stc
cmpsb
cmp
or
iret
rcrb
fmulp
dec
sbb
jecxz
imul
mov
daa
test
xor
adc
leave
testb
ja
mov
mov
lea
fadds
mov
out
outsb
test
mov
ret
outsb
outsb
cltd
movsb
sub
mov
jp
xchg
adcb
aaa
int
push
enter
shll
fisttpl
push
aaa
divb
sub
adc
mov
out
std
ja
dec
push
std
stos
mov
mov
shrl
shlb
rorl
aas
loop
pop
mov
scas
sbb
jb
fiadds
mov
dec
sahf
jnp
int
repnz
je
xchg
xchg
movsb
addb
mov
and
shll
cld
dec
lods
pop
loop
in
and
and
dec
dec
fldl
lret
inc
push
sbb
test
rcl
xchg
xchg
adc
add
pop
mov
cld
shl
aad
jb
jge
fwait
xchg
int
add
fwait
inc
push
xor
scas
mov
gs
jb
repz
mov
cmpsb
adc
cltd
in
cltd
cmp
cld
lods
xchg
push
mov
xchg
rcrb
xchg
call
in
jge
and
loop
inc
push
jp
jnp
inc
scas
inc
jl
dec
in
stc
xor
xor
lods
in
cli
clc
cmp
cwtl
or
mov
mov
pop
push
pop
jl
mov
jp
jbe
mov
lea
sub
ret
outsb
add
jl
daa
xchg
dec
cltd
cwtl
mov
sbb
bnd
cmc
negb
aas
aaa
xchg
sub
sbb
insl
sbb
sub
fdivrs
std
lcall
jp
mov
xor
push
in
js
popf
add
xchg
adc
jno
js
cmpsl
mov
stos
cmpsb
outsb
andb
dec
jmp
jnp
pop
and
xor
mov
mov
cmp
dec
mov
push
mov
mov
movsb
mov
call
sbb
inc
jne
and
mov
inc
stos
dec
xor
out
iret
add
adc
outsl
lods
lds
push
mov
adc
repnz
mov
aas
cmp
or
daa
cwtl
inc
add
jae
mov
outsl
ret
popf
mov
sarl
stos
add
popf
sub
int3
sub
cmpsl
popf
inc
pushl
bndstx
dec
loop
jns
imull
push
ret
mov
adc
pop
std
addr16
pop
jp
mov
mov
xchg
mov
mov
jbe
push
xor
or
fcoms
in
stos
dec
cltd
mov
pop
dec
xor
sub
call
insl
pop
cmpb
mov
adc
mov
mov
dec
add
rorl
lods
sub
outsl
popl
push
loopne
aam
sub
loope
cmp
inc
or
xchg
jnp
es
jge
or
jno
test
rcrb
test
sbb
movsb
push
int3
cmp
add
loope,pn
cs
and
ljmp
sbb
pop
add
jecxz
pop
jo
xor
pop
xchg
and
add
mov
icebp
pop
or
stc
jb
xor
push
jp
es
sbb
cmp
pop
mov
fst
push
mov
lods
test
imul
cltd
insl
adc
mov
lahf
mov
pop
and
xor
fwait
mov
add
xor
jle
dec
sbb
pop
adc
ror
scas
test
mov
sbb
loopne
sbb
pop
sbb
aas
popa
xor
sub
mov
sub
xor
push
dec
or
push
les
mov
cmp
jmp
jmp
xorl
xchg
sahf
jl
dec
xor
push
or
insb
push
iret
dec
cs
and
repnz
jne
jle
xchg
pop
mov
dec
mov
repz
js
sbb
sbb
std
adc
clc
add
mov
inc
xchg
out
sbb
and
lea
repz
push
mov
cmpsb
pop
cltd
insb
jp
mov
adc
cmp
cli
fdivs
popa
pop
mov
ret
cld
xor
inc
js
push
pop
sti
fsubs
bound
or
push
and
push
jl
mov
dec
pushf
loope
shll
push
and
lds
dec
mov
cmp
aam
ficoml
add
repz
push
mov
js
idivb
sub
push
jb
mov
jo
adc
push
push
xor
add
and
rorl
inc
dec
mov
pop
call
add
arpl
dec
mov
out
mov
ret
fwait
insl
or
lods
mov
icebp
test
mov
fwait
jns
mov
sub
cwtl
lds
mov
iret
bound
movsl
jmp
or
or
jp
sub
dec
ds
test
int3
adc
mov
insl
push
xlat
adc
mov
jmp
xchg
sarb
cmpsl
lea
mov
adc
mov
out
sbb
push
sbb
test
cwtl
adc
addr16
sub
outsb
mov
nop
shlb
jno
push
aad
cld
and
mov
clc
push
pop
pop
mov
fld
push
mov
jecxz
mov
adc
mov
fstpt
cmc
sti
pop
cwtl
mov
in
push
jmp
ret
cmp
ljmp
fstpl
sarb
push
or
add
fsubl
in
xchg
or
jmp
pop
pop
fwait
cmp
adc
sub
sub
mov
sub
push
ret
jmp
inc
jbe
xchg
out
lret
outsl
sbb
inc
mov
sti
pop
test
cld
shll
inc
cmp
jmp
and
mov
ret
ds
xor
inc
or
sub
dec
add
push
pop
mov
movups
pusha
shlb
loope
xchg
sbb
mov
cmp
or
adc
jp
push
sub
imul
ja
les
push
inc
inc
adc
idivl
jle
aad
xchg
stos
push
fs
mov
cli
repnz
pop
jbe
rcll
outsl
stc
lahf
pop
xchg
sbb
in
mov
adc
shll
mov
ret
mov
fst
pop
fs
sti
lahf
bound
xchg
lcall
pushl
das
pop
int
subb
inc
mov
xchg
dec
lods
xchg
push
test
jle
sub
fcomps
loop
ljmp
mov
xchg
inc
and
or
xor
and
loope
lret
xchg
popa
or
mov
mov
or
sbb
repz
leave
fsubrs
dec
sarl
iret
ds
int
or
stos
dec
aas
imul
rol
inc
jbe
cvtps2pd
pop
pop
call
mov
mov
jns
or
cli
decb
lahf
fs
jle
test
shll
int3
mov
xor
sub
jb
mov
and
dec
fcompl
out
les
add
aad
or
ret
lret
loope
lods
cmpsb
shrb
mov
repz
les
ret
add
out
mov
or
movhps
xchg
arpl
mov
sub
xchg
and
mull
pop
xchg
add
and
movsl
mov
mov
call
sbb
push
ss
inc
je
dec
dec
add
mov
dec
enter
xchg
mov
jo
jns
mov
pop
sbb
das
pushf
mov
pop
arpl
mov
nop
fists
sub
ljmp
mov
in
cmc
sbb
out
and
pop
fbstp
popa
filds
or
mov
fcoml
mov
out
sti
inc
pusha
mov
ficoms
cltd
push
sbb
jecxz
sub
inc
test
arpl
xor
enter
arpl
jl
pop
adc
inc
mov
push
lods
xchg
push
and
outsb
or
dec
iret
xchg
push
ret
mov
mov
inc
push
add
movsb
jne
mov
and
fs
das
and
push
int
hlt
inc
shr
in
pushf
call
addr16
cmp
jno
mov
ret
dec
imul
mov
ds
cwtl
lahf
jmp
inc
lcall
popa
add
mov
xchg
xor
xchg
pushf
push
addb
daa
mov
mov
mov
fistpll
add
mov
xor
xor
dec
mov
jnp
mov
push
jbe
into
mov
nop
in
jge
bnd
cmp
repz
dec
pop
sti
jbe
test
das
add
in
orb
gs
mov
aad
mov
mov
scas
jns
xor
nop
cld
lea
xor
sti
ret
in
mov
add
mov
imul
sbb
cmp
fdivrs
mov
push
xchg
imul
dec
scas
pop
and
clc
mov
aas
sbb
es
jo
xchg
bswap
cli
pushf
les
aaa
adc
sbb
jbe
fwait
or
xchg
pop
in
stc
insl
int3
dec
fdivrs
icebp
cmpsl
mov
sbb
imul
push
mov
insb
lods
jmp
int
mov
mov
lret
repnz
mov
and
je
divl
pop
dec
shl
fwait
sbb
xor
test
xchg
test
and
lods
repnz
xchg
add
stos
movsl
lcall
adc
cwtl
stc
add
pop
and
sbb
and
in
adc
xchg
inc
pop
les
mov
arpl
push
xchg
cmpsl
call
push
add
mov
iret
addr16
popf
idivl
icebp
das
aam
mov
xor
outsb
mov
sarl
std
daa
add
aad
nop
fcomip
mov
mov
stos
out
cmp
add
movb
sbb
or
adc
lcall
jne
shr
lret
jge
fsubr
cmpsl
ja
std
xchg
fsubr
inc
das
loop
sub
insl
pop
out
mov
mov
fcoml
aas
loopnew
mov
lods
rcl
or
addr16
sbb
aam
mov
fidivrs
jmp
adc
pop
pop
pop
mov
shll
pop
out
sub
jge
cmp
mov
xor
das
ljmp
xor
jo
xchg
roll
les
sbbb
ret
jnp
dec
and
movsb
xchg
mov
adc
mov
in
movsl
or
ret
xchg
xchg
push
xchg
cmp
pop
jo
lock
fbld
push
fiadds
test
dec
or
call
inc
push
stc
fwait
mov
lahf
xor
call
fs
mov
xchg
cltd
jno
pop
hlt
adc
pushf
rorb
pushw
sbb
sbb
sbb
mov
push
test
andb
sarb
repz
push
mov
into
and
movsl
fdivl
pop
mov
cli
mov
lret
inc
pop
test
sub
cmpl
pop
inc
pop
bound
mov
mov
outsl
fimull
sbbl
mov
test
fwait
imul
mov
mov
into
mov
sbb
inc
cltd
stc
pcmpeqd
sbbl
pop
jb
sti
test
mov
popl
in
in
aas
mov
sub
pop
clc
mov
sti
int
xor
adc
jmp
cmp
jb
push
inc
push
mov
inc
pop
pop
sti
and
jb
inc
jl
repz
push
test
add
test
lds
sbb
js
iret
out
sub
lds
test
jb
push
fistps
lret
data16
push
nop
push
pop
js
in
loopne
in
mov
enter
lahf
push
dec
orl
pop
mov
movsb
cli
jge
or
cld
mov
push
ss
test
mov
mov
mov
push
inc
ss
mov
js
jnp
das
aas
paddd
aam
ss
repnz
mov
xchg
ss
sbb
xchg
cmp
pushw
jmp
pop
mov
fs
sahf
hlt
xchg
mov
cli
cmp
hlt
imul
test
add
ss
in
inc
sub
mov
mov
ljmp
jbe
out
xor
push
push
out
out
subb
lret
mov
les
push
imul
or
xchg
pushf
xor
or
sbb
pop
andl
shll
xchg
lret
icebp
jge
cmc
mov
repnz
mov
int3
repnz
pusha
jg
popf
fidivrl
push
int3
add
lahf
sub
pushf
loop
or
out
int3
cltd
sar
and
lea
add
sub
add
xor
mov
adc
lea
or
pop
xor
stc
jbe
add
out
adc
pusha
imul
enter
sub
scas
cltd
aad
cmp
popf
xchg
out
pop
jp
jns
pop
sbb
ja
push
xor
mov
push
sbb
fimuls
fmull
cmp
inc
in
add
add
std
fidivrs
clc
pop
mov
push
push
ja
mov
clc
arpl
sub
mov
sub
mov
mov
test
ja
bound
pop
pop
ljmp
sub
cli
adc
pop
mov
sbb
lds
out
ds
push
fs
rcll
cmpsl
popf
adc
push
mov
xor
and
xor
sub
push
loope
inc
outsb
lea
les
mov
inc
and
jne
mov
jb
inc
pop
jecxz
es
pop
dec
shrb
je
pop
ret
mov
mov
sub
jne
shrl
cmp
loopne
outsb
cmc
or
pop
nop
das
jno
mov
or
or
ja
scas
cmp
xor
flds
mov
cltd
and
insl
xchg
dec
in
dec
ja
xchg
enter
ret
add
ljmp
nop
pusha
lret
cmp
lea
mov
inc
inc
lret
mov
sahf
or
pop
add
shrl
rol
out
xchg
inc
in
sub
jne
jmp
cmc
mov
dec
dec
adc
aas
js
mov
sbb
jge
lds
iret
dec
or
adc
push
mov
adc
in
cmpsl
or
test
inc
xlat
std
out
out
jp
cmpsb
pop
faddl
mov
or
cmp
xlat
nop
sub
cwtl
subl
cmpsb
lds
pop
shlb
push
pushl
mov
je
inc
fcmove
add
pop
daa
and
inc
aas
bound
inc
in
jbe
test
lea
inc
fucomp
mov
cmp
mov
cmp
inc
ret
ljmp
call
xor
jns
jno
pop
cmp
bound
push
adcb
push
outsl
and
push
xchg
pop
std
imul
jle
mov
mov
adc
mov
pop
roll
aad
jnp
mov
rcrb
push
xorl
pop
or
push
je
subb
push
dec
xchg
lods
cwtl
imul
sub
pop
cmp
or
lea
hlt
sbb
popf
dec
push
and
data16
in
mov
sub
or
addr16
sub
loope
mov
dec
or
insb
jne
pop
stos
cmc
push
test
rorl
rolb
dec
pop
testl
cld
fsubrl
adc
imulb
or
loop
pop
mov
std
inc
xchg
sbb
xorb
ret
aaa
push
pop
in
fstpl
roll
mov
sub
pop
push
rcrb
push
lods
pop
sbb
repz
iret
mov
mov
shlb
sbb
mov
mov
xchg
push
and
sub
jae
and
jle
push
add
and
or
pusha
pop
cmp
test
in
orl
jae
pushl
mov
pop
cmp
mov
add
inc
add
das
decl
pop
insl
mov
dec
out
adc
out
jno
movsb
hlt
imul
data16
fisttps
out
mov
adc
cmpl
sbb
insl
pop
fbld
out
or
dec
shrl
mov
push
and
or
sub
cmc
arpl
lods
stos
sub
clc
test
and
jo
inc
into
in
andb
ja
aad
sub
cmp
outsb
cmp
lock
out
out
mov
sbb
sub
dec
jmp
push
jp
dec
push
jg
mov
cmp
popf
in
enter
adc
push
xchg
push
insb
test
ret
mov
inc
add
add
imul
push
sbbb
xor
mov
mov
adc
add
test
lahf
or
test
mov
lret
xchg
in
js
adc
mov
xlat
fcmovb
jno
add
fstp
enter
addr16
repnz
cmp
push
jmp
scas
icebp
fdivrl
pusha
pop
decb
cltd
push
sbb
pop
pushf
stos
adc
ss
adc
push
xor
cmc
cmc
sbb
mov
cltd
pop
scas
ss
xchg
imul
outsl
lret
mov
lock
xlat
pushf
scas
cli
pop
mov
jle
push
inc
test
pop
add
ss
pop
fisttps
and
pop
xchg
xor
gs
and
out
out
repz
mov
pop
xor
std
fbstp
xor
popf
add
fnstcw
mov
in
sub
js
and
test
xor
jge
pop
mov
push
mov
jecxz
inc
push
out
ja
mov
xlat
cltd
jge
jnp
push
leave
push
dec
or
fildll
xchg
sbb
pop
pusha
mov
inc
rorl
enter
jge
les
div
addr16
lret
sub
dec
in
repz
mov
mov
xchg
push
xor
aaa
sub
ud2
aad
and
cmp
pop
mov
lds
pop
popa
add
and
pop
push
xchg
cmc
push
out
lahf
sbb
add
call
pushf
adc
addr16
xor
sub
lods
adc
xchg
push
mov
shlb
mov
dec
adcl
cmp
rolb
rclb
sbb
int3
mov
lcall
pushf
pop
mov
lret
mov
pop
jp
push
pusha
aam
jo
fistpl
mov
jmp
lahf
pusha
inc
and
lea
addr16
cmpsl
dec
mov
test
hlt
and
dec
aam
movsb
sub
fs
fildl
mov
add
adc
in
hlt
pop
les
cmp
xchg
sti
fs
fildl
mov
add
adc
loopne
cli
pop
fmull
cmp
xchg
sti
gs
fildl
mov
or
imul
and
cmp
push
sti
fwait
jmp
jno
lret
and
pop
and
je
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
