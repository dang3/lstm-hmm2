and
add
add
add
inc
add
cmp
inc
add
arpl
ja
imul
jne
outsb
add
imul
cmp
dec
add
inc
add
add
add
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
jne
jb
jae
outsl
add
jae
add
push
add
push
add
and
push
add
jne
jb
arpl
add
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
jne
jb
jae
outsl
add
jae
pop
add
arpl
push
add
jae
add
add
add
push
add
data16
add
jb
add
add
arpl
jb
outsl
add
outsl
add
je
pop
add
imul
outsl
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
jne
jb
jae
outsl
add
jae
pop
add
arpl
push
add
jae
add
dec
add
outsb
add
add
add
jo
inc
add
jb
outsl
add
add
push
add
jp
add
insb
add
add
imul
dec
add
push
add
add
add
push
add
jp
add
push
add
inc
add
add
add
imul
push
imul
jb
je
arpl
mov
sub
push
push
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
movl
call
push
pushl
call
push
mov
pushl
call
mov
call
call
push
pushl
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
call
pushl
call
jmp
pushl
call
mov
push
push
call
mov
call
xor
mov
push
push
push
call
lea
push
push
push
call
add
push
push
push
push
push
pushl
call
pushl
call
push
push
push
push
push
call
pushl
pushl
pushl
call
add
jmp
lea
push
pushl
call
xor
mov
push
push
push
push
pushl
call
pushl
mov
pushl
pushl
push
push
call
push
pushl
pushl
push
call
lea
push
call
pop
push
lea
push
push
push
push
call
push
lea
push
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
pop
pop
leave
ret
push
push
push
push
mov
push
mov
mov
mov
pop
add
mov
mov
add
mov
mov
cmpb
je
cmp
jg
mov
mov
mov
movzbl
sub
inc
test
jne
jmp
mov
call
movzbl
mov
dec
sub
push
call
movzbl
sub
add
je
pushl
inc
push
call
movzbl
pop
sub
pop
push
jmp
call
mov
xor
push
push
mov
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
push
mov
push
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
movl
movl
mov
movl
call
push
push
mov
call
push
mov
call
pop
pop
ret
push
mov
sub
pushl
call
pushl
movl
movl
movl
pushl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
push
lea
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
cmpl
push
mov
je
cmp
je
lea
push
push
call
call
mov
xor
xor
call
mov
xor
call
movzwl
mov
mov
mov
movzwl
xor
movzwl
xor
lea
push
call
mov
xor
pop
xor
test
jne
mov
not
mov
pop
mov
or
mov
leave
ret
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
push
push
push
pushl
call
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
push
call
mov
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
push
call
mov
add
mov
jmp
jmp
push
pushl
call
mov
pushl
pushl
pushl
push
push
call
add
pushl
call
mov
add
cmp
jb
mov
leave
ret
add
inc
add
add
add
jb
and
fs
loopne
add
add
add
adc
pop
add
add
add
stos
add
add
add
add
mov
lcall
push
or
xor
and
out
jb
push
jb
push
jb
outsb
inc
dec
inc
add
gs
add
sub
inc
mov
lcall
jmp
fsubr
or
incl
in
add
ret
xorb
adc
push
addr16
test
cld
push
call
xor
push
jne
push
lock
in
inc
stc
or
xor
add
adc
repz
cld
enter
faddl
inc
add
add
sub
adc
xor
rolb
add
incb
dec
add
call
or
cld
xor
cld
and
adcl
inc
lock
stos
or
lcall
sar
dec
xor
jo
imul
hlt
push
push
add
xchg
push
and
je
add
add
add
in
xchg
movb
and
xor
cmp
out
xor
add
push
add
je
js
outsl
movsl
outsb
insl
je
add
inc
stc
jo
movsl
gs
jb
outsb
outsl
imul
push
or
cmc
imul
add
xor
outsl
enter
jae
jae
loopne
insb
push
insb
sub
add
add
add
add
add
call
pop
add
add
cwtl
lret
add
out
iret
addr16
aas
rorl
push
jae
jle
lahf
add
test
xlat
dec
lcall
mov
ds
mov
mov
sar
adc
js
nop
insl
mulb
rorb
aad
cmp
xchg
pusha
sub
xlat
inc
push
or
aaa
mov
sub
sbb
pop
ss
jae
shlb
iret
pop
xchg
pop
aas
dec
test
jl
scas
bound
pusha
fistps
add
push
cmp
pop
lock
out
xor
pop
adc
mov
push
jo
or
cmp
push
adc
clc
push
dec
outsl
mov
out
incl
inc
pusha
pop
ret
xor
sub
jne
and
gs
adc
cwtl
push
fsts
pop
fs
jno
fldt
shll
insb
cwtl
call
sub
mov
pop
nop
rolb
cmc
addb
sub
mov
rep
push
cmpl
xchg
lds
insb
dec
in
inc
popa
xchg
cmp
mov
test
dec
xor
xor
mov
stos
mov
jl
or
push
jecxz
push
sbbl
sti
pop
stos
push
jns
push
or
aam
mov
sbb
decb
inc
rolb
shl
out
pop
mov
enter
iret
sub
xchg
jp
sbb
fisubl
xlat
xor
ja
enter
shlb
fcoms
ja
lahf
or
xchg
cmp
jne
pushf
xchg
xchg
mov
jae
or
std
xor
cli
out
or
lret
stos
mov
cltd
loopne
xor
loop
adc
aaa
dec
xchg
add
ja
jo
cmp
sahf
stos
fwait
pop
pop
inc
out
lods
stos
std
xor
push
ja
imul
loopne
std
int
and
ss
adc
xor
in
clc
pop
mov
fiaddl
mov
loop
std
in
xchg
sarl
imul
in
xchg
mov
mov
sub
push
mov
std
sahf
mov
mov
jo
mov
inc
dec
adc
or
adcb
loope
es
or
jne
inc
lahf
push
jo
jl
push
ret
test
rorl
cld
lock
in
jb
mov
fisttpll
dec
add
ja
lods
scas
push
clc
fsts
jl
inc
sbb
add
cmp
sbb
out
mov
icebp
shrl
dec
js
iret
loopne
push
or
icebp
stos
xor
and
outsb
cbtw
pop
mov
jle
fwait
aad
xor
lcall
pop
cli
out
inc
aaa
rolb
arpl
rep
es
jns
lock
inc
add
pusha
sbb
arpl
out
and
jl
icebp
mov
nop
pop
jne
or
sbbl
mov
inc
push
sbbb
dec
sahf
push
inc
imul
cmp
or
push
adc
push
pop
out
rorb
sub
inc
jne
adc
push
faddl
cltd
lock
ret
sarl
int3
dec
mov
push
and
out
fcoms
or
and
sbb
outsb
mov
push
push
fldt
fwait
or
pop
sbb
in
cmp
and
popa
test
sbb
popf
and
enter
cmp
or
aas
hlt
cmp
sar
jle
mov
enter
cmp
inc
bound
insl
call
lods
rorl
daa
ljmp
adc
pop
and
das
stos
push
xor
lds
outsb
mov
test
jge
push
xchg
rclb
xor
mov
sti
jg
cmpsl
insl
shlb
cltd
cmp
into
mov
inc
call
mov
std
push
cltd
call
aad
mov
jmp
gs
imul
lods
gs
cld
lcall
enter
and
out
testb
cmp
mov
mov
cld
and
xchg
fmulp
mov
hlt
movsl
inc
jge
and
scas
adc
push
cwtl
ss
aaa
outsb
and
and
cmpl
push
dec
mov
pop
mov
inc
cli
call
or
repz
add
pop
in
mov
lahf
fimuls
popf
adc
dec
jle
and
bound
jge
adc
pop
lret
pop
jl
in
jne
cmp
daa
jg
arpl
frstor
adc
push
loop
fs
adc
fimuls
sbb
sub
dec
rcrb
jno
cmp
xchg
stos
lcall
and
addl
jg
js
lods
xor
xlat
dec
jmp
or
subb
pop
xor
cld
dec
test
test
mov
add
sbb
dec
xor
call
test
bound
or
fcoms
adc
inc
xchg
leave
aad
hlt
and
jbe
add
push
out
push
loop
cltd
xchg
fsubl
insl
stos
push
jmp
dec
mov
adc
pop
ljmp
lahf
sub
rorl
or
in
push
or
sbb
fisttpll
cwtl
out
mov
call
jb
xor
mov
push
or
xchg
xor
sub
shll
scas
aad
popa
mov
cwtl
pop
jne
push
js
fcoml
sarl
fwait
pushf
jns,pt
stc
sbb
popa
xorl
push
sub
fwait
in
add
and
xchg
test
mov
adc
xchg
mov
popa
js
jo
mov
imul
jg
mov
inc
insl
sub
pop
es
sti
push
sbb
cmpsb
mov
push
lea
in
outsl
fnstcw
cld
push
bound
loop
push
aaa
mov
mov
mov
mov
sub
orb
pop
add
inc
push
push
jae
in
roll
cwtl
in
mov
push
movsl
std
inc
jg
in
dec
push
cmc
xchg
mov
ss
aam
cwtl
movsl
add
test
xchg
repnz
xchg
or
xor
mov
mov
sbb
mov
sarb
cmp
fwait
insb
push
push
repnz
andb
xchg
jnp
pop
arpl
or
cld
xchg
xchg
outsb
pop
jne
imul
aam
int3
lahf
mov
mov
or
xor
iret
fwait
mov
fxam
mov
push
jp
inc
mov
and
add
aam
xchg
cmp
push
dec
jb
cmp
sbb
pop
add
sbb
push
lea
cmpsb
call
adc
orl
call
mov
pushaw
mov
pop
movsb
pop
sub
push
xchg
out
dec
repnz
data16
loopne
aas
push
dec
hlt
add
outsb
add
pop
les
movsl
mov
bound
add
js
and
push
repz
adc
sbb
mov
fisubl
xor
push
jp
daa
fucomp
pop
test
out
imul
add
insb
insl
mov
adc
mov
cmc
icebp
push
adc
jo,pt
jne
xchg
xchg
xchg
mov
push
sub
adc
xchg
inc
push
mov
call
ss
leave
fwait
mov
int3
movsl
stos
dec
cmp
rolb
or
jge
mov
filds
adc
movsb
ds
test
add
fstpt
dec
aas
dec
adcl
adc
xchg
add
scas
sbb
lahf
and
push
ljmp
adc
inc
adc
mov
and
mov
cmp
xor
cmp
mov
repnz
rorl
push
test
je
pop
out
movsl
mov
mov
loop
cmp
movsb
push
roll
daa
fld
rcl
lret
jbe
pop
cltd
dec
pop
dec
pushf
imul
xor
mov
mov
cltd
ljmp
out
jl
fidivl
and
popf
mov
or
xchg
fiaddl
mov
or
push
adc
mov
call
shll
aam
sbb
sub
push
inc
test
mov
jmp
cmp
jae
pusha
mov
push
lea
aam
mov
movsb
mov
stc
mov
pop
mov
test
clc
add
ds
jge
dec
cmpb
push
push
movsl
mov
mov
inc
mov
movb
mov
mov
daa
jg
daa
fs
adc
inc
push
cltd
leave
lret
and
ss
mov
pusha
popa
int3
push
sub
lcall
jns
movsl
add
fwait
cld
or
xchg
push
push
or
jb
arpl
lds
pop
mov
pop
push
xchg
leave
adc
mov
sub
pushf
sub
push
push
fsubl
out
je
jae
push
and
fs
notb
pop
es
push
lahf
rorb
pop
cmp
adc
jl
int
mov
jl
cmp
mov
cmpsl
addr16
inc
cli
mov
mov
pushf
outsb
pop
lret
jp
out
pop
adc
push
out
xor
pmaxsw
fsubrs
popa
mov
mov
data16
sub
sti
cmp
sbb
int3
loop
int3
mov
inc
in
test
sbb
addb
xchg
sbb
mov
and
xor
add
cli
pop
push
psubq
aad
add
fists
pop
jge
pop
ljmp
rorb
cmpsl
xchg
stc
lds
xor
call
scas
inc
jl
rcr
or
fimuls
cmpl
out
int3
fwait
pop
ss
in
mov
jecxz
fstpl
sbb
in
shl
call
mov
iret
stc
mov
fcomps
and
mov
hlt
ljmp
out
mov
and
and
or
in
or
dec
mov
adcl
xchg
sub
adc
push
adc
nop
xor
pop
cmpsl
in
ret
sub
jle
mov
cld
push
popf
ljmp
pop
cmc
int
movsl
outsl
mov
jb
lods
add
fsts
push
lret
mov
mov
pop
cmpsl
sbbl
sbb
cmpsl
rcrl
clc
idiv
add
pop
shl
lock
frstor
pop
scas
xchg
jmp
mov
adc
lds
cmc
push
scas
mov
int3
xchg
mov
xor
data16
dec
dec
sub
mov
mov
rol
das
xchg
bswap
cmp
jp
jmp
rcrb
and
adc
sbb
ficompl
insb
xor
jae
paddd
push
jge
adc
roll
mov
gs
jmp
dec
or
clc
or
jle
lock
jbe
adc
shrl
push
jno
les
sub
jno
lods
sbb
push
loop
sub
adc
lods
cmp
lret
dec
mov
shr
insb
mov
sbb
inc
jp
sbb
pop
fcoml
dec
movsl
outsb
mov
sub
or
push
push
aam
aaa
cmpb
das
rorb
sbb
jl
jno
jae
shr
lods
out
adc
outsl
jle
test
and
jne
xor
jo
pop
dec
jmp
shlb
cmp
jb
sbb
mov
adc
int3
ds
imull
enter
xor
lock
xchg
jmp
dec
aam
xor
push
add
add
xlat
dec
pop
cmp
push
jp
sub
test
jp
mov
test
stc
fistps
retw
call
faddl
addl
imul
outsb
push
aam
test
popa
jno
adc
das
in
dec
stos
in
push
js
scas
mov
pop
dec
lods
fs
ljmp
sub
cli
popa
addr16
jne
aaa
mov
sahf
bound
lods
js
sub
sbb
jl
mov
jp
push
mov
mov
push
or
mov
mov
cli
movsb
and
sub
rcll
fs
ss
push
std
add
push
jnp
out
cmp
enter
mov
mov
loope
xchg
mov
repz
xor
dec
mov
sbb
cld
iret
cmp
mov
xchg
inc
xor
jae
and
shlb
out
pusha
call
pop
mov
push
outsl
dec
fidivrs
repz
hlt
adc
or
xchg
stos
jle
or
fmull
je
adc
cwtl
sbb
inc
loop
sub
aad
pop
mov
test
jae
enter
cmp
mov
cmpsl
and
int3
scas
mov
jne
aam
popa
loope
xchg
pop
push
in
cmp
lret
sub
outsl
cmp
and
and
arpl
sub
movsb
pop
aas
adc
insl
mov
dec
enter
popa
adc
ss
cmp
enter
cmp
xorl
jb
push
mov
pop
pop
test
mov
add
lea
and
pop
xchg
movsb
jo
mov
rorl
inc
aas
mov
ja
jno,pt
mov
dec
mov
std
pushf
fidivl
fsubr
add
push
dec
cmp
jl
lods
gs
mov
sbbb
or
fcmovnb
adc
xchg
cld
test
mov
pusha
dec
xchg
mulb
push
inc
push
sub
aaa
push
fists
xor
ficomps
fs
out
js
ja
adc
xchg
cmp
xchg
mov
shrl
push
inc
mov
rcl
push
mov
pop
push
outsb
je
mov
scas
out
dec
xchg
adc
lds
aad
gs
cmp
into
mov
mov
cltd
jp
lea
into
or
fs
jl
lods
popf
jle
and
scas
dec
xchg
iret
in
and
sahf
lods
sbb
aaa
jp
lods
aam
movsb
xchg
out
aad
push
inc
scas
mov
ja
pop
imul
stc
ret
push
lds
rcl
cli
mov
dec
addr16
repnz
dec
fistl
stc
dec
pop
ss
pusha
fdiv
movsl
mov
and
hlt
push
pop
hlt
adc
addb
pop
bound
js
dec
jle
or
imul
sti
ljmp
sahf
sbb
xchg
push
push
scas
jae
lcall
mov
sahf
xor
test
adc
jnp
mov
mov
movsl
jne
cmc
jl
xor
adc
jns
bound
popf
or
fbstp
dec
jno
in
mov
cmp
pmaddwd
icebp
fwait
pushf
or
dec
mov
mov
mov
or
push
sub
mov
mov
mov
fldl
push
jno
sbb
js
data16
inc
int
mov
jmp
out
ret
jne
movsbl
mov
hlt
mov
hlt
mov
xchg
mov
das
push
addr16
aam
ss
loope
clc
mov
xchg
std
andl
ret
sub
cwtl
shlb
or
xchg
jne
or
fwait
sbb
lcall
cmpsb
push
push
sbb
test
dec
movsl
pop
outsl
mov
dec
xchg
push
insl
xchg
mov
mov
xchg
add
adc
stos
add
adc
repnz
popl
pslld
cmpsl
out
mulb
xchg
lahf
and
mov
push
loop
out
pushf
cmpsl
lcall
xor
adc
pop
and
mov
adc
jmp
lock
addr16
sub
mov
jo
out
push
cmp
cs
ret
mov
mov
icebp
cmp
aaa
sub
mov
mov
inc
pushw
cwtl
andb
cld
repnz
pop
std
sbb
fs
nop
pop
add
in
cmpsb
in
insl
xchg
loope
pop
in
test
add
add
outsb
jo
movsb
aam
int3
sbb
rolb
mov
mov
rclb
xchg
ljmp
xchg
inc
inc
jge
xlat
pop
sub
pop
mov
cmp
adc
rcrb
sbb
push
mov
mov
in
sub
pop
cmp
in
mov
and
mov
cmp
cmpsl
inc
xchg
int3
gs
aad
test
mov
aaa
fsubl
subl
into
fs
push
push
mov
push
ss
lahf
mov
fmuls
aad
inc
pop
mov
mov
repz
push
add
jno
sub
popf
repnz
push
test
lret
mov
int3
mov
mov
dec
push
idiv
out
ffree
xor
out
sub
scas
adc
bound
dec
pushf
mov
jo
outsb
out
add
xchg
jmp
lods
pop
or
add
cwtl
cmp
sbb
fs
mov
xchg
leave
nop
shlb
lods
out
mov
adc
ljmp
inc
sub
pop
xchg
and
mov
xlat
clc
add
movsb
cs
movsl
xchg
sbb
test
and
rcll
mov
push
lcall
scas
jle
pop
int3
dec
mov
sbb
jb
cmp
in
push
or
jg
lea
cld
mov
mov
in
cmp
jp
or
jmp
jo
pop
fst
jg
movsl
dec
push
imul
mov
or
mov
push
icebp
mov
fadd
cmp
inc
popf
mov
in
add
pop
sub
negl
int3
jae
lea
in
or
and
sub
dec
inc
or
loopne
or
mov
jg
mov
jle
adc
xchg
mov
test
mov
jecxz
and
insl
ret
xchg
ficomps
mov
ret
mov
xor
inc
lds
addr16
ds
add
pop
fstps
popf
das
add
insb
sbb
cs
test
int3
mov
cmp
push
sub
lret
jge
imul
std
adc
sahf
test
stos
ret
pop
and
fsub
clc
push
mov
mov
pop
lret
pop
jecxz
jecxz
jp
xor
inc
cmp
ljmp
mov
movsb
shrl
inc
xor
xchg
fwait
mov
xchg
xlat
bound
mov
aam
movsb
daa
pop
test
or
out
es
fwait
call
pop
xor
xchg
sub
outsb
adc
pop
push
inc
rorb
or
popf
clc
aam
loop
cmp
rcrb
ja
leave
ret
jp
jl
aas
loope
and
dec
shl
add
add
add
add
add
enter
add
add
add
add
add
add
add
call
pusha
sbb
add
add
imul
add
cltd
add
add
or
add
add
or
in
in
in
pop
in
inc
add
adc
add
ljmp
ja
mov
js
js
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
orb
aas
popa
je
insl
add
add
add
add
add
add
add
add
add
and
add
add
outsl
fs
inc
add
fcoml
movb
cmp
cmp
call
cli
arpl
popa
jae
push
pop
imul
and
jne
push
mov
inc
mov
add
xor
add
inc
lea
xor
mov
cmp
mov
sub
inc
test
jmp
test
inc
ret
addl
adc
mov
cmp
cmpsb
cmp
decl
lea
repz
jge
push
mov
add
add
xchg
call
adc
add
adc
adc
rolb
or
rclb
pop
movl
add
jne
test
xchg
cmp
inc
stc
cld
clc
add
sahf
add
add
inc
add
incl
adc
ret
add
adc
add
mov
fcoms
push
sahf
pusha
sub
clc
out
outsb
jb
jbe
inc
inc
outsb
outsb
push
jne
adc
gs
inc
inc
inc
push
je
imul
inc
popa
push
inc
mov
popa
lret
and
insb
push
xlat
push
gs
addr16
gs
jne
inc
std
jb
xor
push
inc
arpl
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
xlat
test
pop
jp
cltd
outsl
and
pop
fs
inc
shlb
dec
das
pop
and
adc
imul
push
xchg
arpl
and
or
dec
repz
sti
divl
add
fldt
push
pop
dec
imul
ljmp
sub
push
fs
call
push
call
fs
leave
cmpsl
int3
in
aam
push
orb
xchg
inc
rcrl
and
mov
pusha
lods
push
rclb
shlb
into
cld
int
fimuls
mov
cmp
mov
jge
cmp
push
jl
daa
mov
ljmp
fistpl
cmpsb
adc
and
cmc
pop
fwait
sub
push
std
push
lea
add
xchg
and
lret
jl
jbe
inc
xchg
and
xlat
add
or
cmp
aas
push
in
add
dec
dec
jle
hlt
pushf
mov
jb
orb
lea
push
push
jmp
gs
fldenv
mov
sub
fucom
in
iret
andb
sub
xor
sahf
in
sub
cli
mov
aam
addr16
sbb
mov
dec
cmp
xor
mov
hlt
movsb
popf
test
scas
sub
frstor
pop
sahf
xchg
push
stos
movsb
or
cmpsb
dec
fcmovb
idiv
pop
adcb
push
lret
pusha
sti
std
rcl
mov
or
fdivrl
icebp
push
cmp
xchg
lret
jb
xlat
out
in
mov
adc
jno
sahf
and
jnp
mov
xor
out
dec
mov
pop
sbbl
push
mov
repnz
pop
jge
pop
nop
addr16
xchg
adc
loopne
lds
xor
sti
ret
aaa
xorps
cmpsb
and
inc
test
into
aad
xor
xor
imul
imul
in
fucomi
movsb
sbb
mov
inc
sbb
xor
loop
test
cld
scas
popa
pop
mov
add
dec
testb
xchg
repz
shll
ds
mov
insl
sub
rorb
mov
fistl
ror
pusha
cmp
enter
xchg
xchg
sahf
mov
notb
jl
das
test
xchg
xchg
daa
mov
mov
les
cltd
jg
cli
pop
test
data16
cmp
and
aam
jae
mov
xchg
inc
std
add
sub
add
gs
mov
inc
jg
bound
cmc
adc
nop
or
adc
shrl
jno
ret
sub
ret
arpl
repz
movsb
jbe
sbb
jns
sbb
jmp
jns
and
inc
mov
scas
test
xor
or
int
or
bound
loopne
jns
xor
outsb
fs
push
call
lods
and
mov
cmp
mov
push
push
xchg
cmp
jecxz
movsl
outsl
js
mov
ds
dec
cmc
sahf
pusha
lret
or
mov
dec
and
sub
outsl
out
stos
mov
mov
in
popf
std
mov
jge
aam
jle
scas
pop
in
jge
leave
aas
mov
jle
sub
pop
int
inc
lcall
shl
cmpsb
or
xchg
jb
sti
adc
into
mov
mov
mov
xchg
push
pop
mov
or
xchg
sbb
add
inc
xor
imul
dec
pop
lcall
inc
fsub
mov
push
inc
lcall
sub
xor
sti
pop
jg
push
test
adc
mov
and
or
scas
testb
sahf
jae
adc
xlat
test
daa
fwait
jmp
push
jbe
pop
add
andb
cmpsl
loop
pop
and
popa
icebp
clc
xor
rcr
jnp
adc
sti
ret
leave
pop
lcall
fidivrl
dec
call
dec
inc
dec
and
xchg
out
mov
cmp
mov
je
push
in
lock
add
shrb
xchg
lcall
arpl
lret
stc
icebp
or
xchg
jns
xlat
add
cltd
cmpsb
xor
out
idiv
jo
and
jp
pop
jle
in
sbb
out
out
sub
sbb
or
repz
je
insb
pusha
adc
mov
loop
mov
idivl
jo
je
jmp
adc
and
dec
in
adc
aam
xchg
aas
sbb
and
test
xor
out
mov
add
stc
sbb
dec
lods
cli
cltd
adc
pop
pop
push
jb
xor
mov
push
mov
out
push
jbe
repz
fidivrl
xchg
ja
popa
jne
jmp
int
xor
mov
mov
sub
jnp
lods
popl
lcall
mov
std
jb
mov
push
ficompl
inc
lret
aam
jp
gs
xor
in
xchg
cmc
loop
jmp
jno
jp
sahf
dec
lea
inc
or
into
add
mov
into
divb
mov
push
mov
lcall
pop
orl
xchg
cli
lods
push
ficoms
sbb
mov
xchg
push
pushf
pop
pop
pop
icebp
xlat
cmp
aas
mov
jp
ss
jmp
daa
cld
lret
arpl
cmp
mov
dec
add
push
outsl
pop
nop
popf
jl
pop
loop,pn
xchg
and
stos
and
adc
mov
jmp
fwait
outsb
add
in
mov
rcr
sub
inc
fdivl
xchg
pop
sbb
cmpsb
std
dec
push
adc
dec
add
xchg
roll
and
repnz
hlt
ret
ret
mov
sbb
ljmp
adc
push
lcall
fsubrl
lea
xchg
imul
sub
dec
das
test
xlat
loop
mov
jg
lahf
add
faddp
orb
rcrb
mov
scas
xlat
mov
ret
dec
xor
lods
push
mov
jae
inc
sbb
cs
adcb
leave
pop
sti
pop
shr
cwtl
movsb
scas
movsb
dec
mov
push
fbstp
mov
das
xchg
int3
adc
add
push
sbb
inc
mov
push
test
in
lcall
loopne
xchg
shl
or
xchg
in
xor
sbb
pop
daa
add
data16
insb
xchg
push
xchg
or
stc
into
test
inc
or
cmpsb
jp
mov
cmp
or
mov
and
jp
pop
aad
stc
bound
inc
hlt
aaa
sbb
mov
push
cmc
fistl
outsl
shr
int
les
jae
out
mov
sub
fldt
test
push
dec
and
sbb
jbe
adc
jle
pop
clc
shlb
leave
imul
inc
dec
testl
inc
push
int3
icebp
jge
mov
movsb
mov
dec
push
daa
sub
mov
decb
je
mov
mov
mov
mov
xchg
push
sbb
dec
loope
mov
popf
lds
jecxz
hlt
xchg
push
andb
add
scas
fisubrs
inc
dec
sbb
add
add
push
test
xchg
sbb
dec
popf
dec
lahf
orl
dec
and
cmp
mov
push
aad
mov
sbb
sub
mov
psrad
rcrl
fwait
push
sbb
xchg
test
pop
les
rcr
or
andl
mov
enter
xchg
fld
leave
jae
neg
ja
sub
es
sub
fbstp
mov
and
repnz
xor
out
icebp
sbb
push
es
add
jecxz
sbb
cli
inc
cmpsl
inc
pusha
mov
lods
mov
jo
sbb
out
test
or
clc
lahf
inc
ss
popl
or
mov
adcb
ja
pop
rol
inc
or
push
sub
jne
mov
sahf
sub
mov
pop
fdivrs
sbb
pushf
inc
mul
enter
xor
bnd
sbb
out
jbe
inc
loop
stos
lds
fistpll
adc
frstor
xchg
rcll
cmp
cmp
mov
dec
repz
pusha
aas
jp
repnz
dec
mov
in
ja
les
hlt
inc
frstor
sbb
sub
or
lcall
idivl
xchg
jo
push
bound
mov
push
mov
in
sti
push
imul
sub
and
pop
mov
or
push
les
cmp
push
fmul
gs
sbb
push
lcall
out
push
fdivrs
mov
out
mov
cmc
adc
sbb
mov
popf
push
cmp
mov
bound
aaa
sbb
movsl
xor
in
int3
push
bswap
adc
mov
or
xor
xor
sahf
jbe
xor
or
xor
add
mov
sahf
rclb
shll
ja
fsts
clc
and
ds
cld
cmp
xchg
or
ss
testl
sub
pop
cmp
adc
pop
ds
jle
fmuls
mov
sarb
pop
and
arpl
dec
push
data16
xchg
jl
or
mov
rolb
movb
lock
mov
push
imul
shll
sbb
push
jge
pop
adc
gs
and
dec
or
mov
mov
adc
push
xor
testl
subl
adc
mov
fs
in
jnp
xchg
inc
test
fsub
push
mov
push
push
in
je
cltd
rcr
add
push
xchg
xor
repz
inc
fisttpll
rclb
pop
or
cmpsl
cmp
cmp
xchg
mov
add
inc
data16
mov
inc
pop
rcrb
xor
nop
mov
jge
daa
mov
test
mov
dec
out
xchg
fs
test
sbbl
insl
xor
jns
call
xchg
dec
gs
icebp
stos
sub
and
negl
jne
cmp
or
push
push
and
pmaxsw
hlt
jns
into
sub
call
fildl
cmpsl
lods
mov
ja
ljmp
ficoms
mov
mov
pop
sahf
leave
mov
test
scas
mov
icebp
sti
stos
ja
inc
ds
jbe
int
mov
or
jg
test
jecxz
push
pop
cmp
add
flds
jmp
xor
adc
in
cmp
pop
pop
andl
push
mov
test
aad
jge
adc
pop
adc
stos
add
push
jbe
leave
pop
cmp
mov
addb
push
bound
jne
cli
adc
iret
dec
jmp
adc
and
lcall
pop
ds
pop
inc
or
in
fadds
add
imul
and
add
stos
sbb
mov
inc
or
les
add
dec
pushf
jle
sbb
mov
adcl
push
mov
adc
dec
xchg
std
xchg
pop
fbstp
mov
jmp
push
test
loopne
fcomip
xchg
loop
das
xchg
scas
add
std
sub
in
add
mov
jbe
lds
dec
pop
sbb
ds
adc
stos
imul
push
push
mov
or
adc
fnstenv
ret
lods
ja
or
mov
push
inc
outsb
icebp
add
pop
cs
loop
sub
ja
push
add
outsb
imul
inc
test
jmp
or
adc
mov
jne
inc
jl
enter
insb
mov
push
movsl
xchg
sti
add
add
into
xchg
aam
mov
fbld
sub
dec
mov
and
mov
mov
pusha
roll
adcb
aam
mov
or
sahf
ret
sub
ss
lahf
mov
js
mov
loopne
push
cmpsb
jno
sub
loop
xor
ret
adc
scas
cmp
test
jmp
and
adc
gs
and
xchg
test
and
aad
repz
xor
orb
inc
mov
mul
rclb
mov
fldenv
int
test
jle
mov
rep
cmp
test
mov
cmp
sub
add
mov
jmp
dec
jbe
jmp
in
pop
lahf
cmp
jg
sbb
gs
and
jecxz
add
repnz
cmpsb
out
leave
jno
lcall
add
push
push
sbb
lods
outsl
ret
cmp
incl
mull
ftst
lahf
lret
inc
xor
in
xchg
jp
xlat
cmp
push
inc
pop
adc
roll
scas
xor
inc
jl,pt
pop
sbb
adc
mov
adc
push
lods
movsb
dec
gs
lret
xchg
xchg
ja
fisttpll
or
rcl
lock
jge
and
jl
or
lds
insl
scas
jnp
xchg
push
fsubrp
mov
xchg
aad
jmp
call
aaa
dec
sbb
and
mov
stc
scas
or
jbe
cs
into
xchg
mov
test
or
cld
adc
shrb
iret
xor
clc
rcrb
or
mov
xchg
lock
aas
push
xlat
out
lock
adc
loop
pop
aaa
add
pop
ret
leave
subb
push
push
fstpl
test
jno
adc
xor
inc
push
dec
mov
ja
lds
out
inc
mov
ds
and
xor
dec
xor
xor
adc
xlat
aaa
mov
fiaddl
leavew
into
sti
fs
mov
jp
sahf
jno
imul
xchg
jge
mov
rolb
mov
adc
mov
xlat
popf
inc
inc
xor
pop
pop
les
icebp
cwtl
and
mov
and
push
aad
cmpsl
adc
dec
push
mov
mov
jecxz
mov
add
outsl
pop
dec
arpl
ja
out
stos
sub
out
fs
or
mov
clc
sbb
or
mov
call
pop
xor
adc
in
clc
mov
pop
jbe
outsl
sbb
dec
push
arpl
mov
or
jmp
lret
xchg
xor
rol
out
mov
or
shrl
jmp
pop
test
mov
je
jns
ljmp
incb
sub
and
inc
insl
mov
mov
imul
adc
pop
jmp
pop
das
stos
dec
jecxz
push
adc
and
out
insl
adc
test
inc
fidivrl
ret
adc
jl
dec
mov
divb
pop
mov
sarb
stos
movsl
call
cs
inc
inc
xor
lods
xchg
cmpsl
int3
repz
shll
dec
imul
and
dec
dec
popa
cltd
cmp
mov
mov
mov
pop
scas
dec
or
sub
cli
mov
pushf
mov
lret
push
sarl
lcall
in
xlat
and
mov
faddl
loope
cmc
pusha
jecxz
xlat
cmpl
loope
out
cmpsb
cs
pop
adc
rep
mov
std
inc
xchg
movsbl
stos
push
fmul
lahf
xchg
mov
push
adc
rcrb
outsl
fdivp
test
cs
pop
sbb
jo
jnp
les
xchg
cld
add
jns
jmp
xlat
aas
or
lds
sub
test
xchg
filds
mov
cmpsl
add
int3
push
push
cmp
insl
or
adc
cmc
pop
mov
ret
fcom
daa
lcall
push
fdivs
mov
jne
or
je
jle
mov
add
add
inc
mov
mov
cli
mov
aam
popl
addb
add
push
push
mov
pusha
call
xchg
int3
testl
aas
inc
fistpll
mov
aaa
xchg
sbb
cli
jbe
pop
and
fiadds
adc
aad
shlb
push
rcl
das
xor
xchg
and
out
out
out
filds
xor
sbb
ljmp
aas
test
rorl
cmpsl
jecxz
nop
fs
cmp
pushf
sub
mov
shrb
ret
test
mov
in
test
rorl
add
gs
and
pop
inc
into
sub
mov
pop
lock
sbb
imul
test
clc
adc
xor
mov
and
loopne
in
add
mov
xchg
pop
cmp
mov
xchg
popa
sbb
sbb
sub
adc
dec
movsb
xor
xchg
push
test
repz
fmulp
pop
xchg
repz
push
add
ret
and
xchg
push
les
adc
mov
repnz
xchg
fmull
pop
test
jecxz
xor
mov
mov
dec
adc
dec
jl
xchg
and
loope
inc
cmpsl
and
lcall
mov
ja
insl
cmp
pusha
out
sub
jns
cmc
lret
js
pop
movsb
in
mov
leave
inc
push
sarb
scas
test
setne
cmc
fdivrs
cld
lcall
jle
hlt
mov
lcall
mov
sbb
fcomps
pop
and
adcb
sti
int3
mov
mov
out
dec
pop
lock
adc
and
repnz
rcr
cmc
jae
jp
inc
lret
mov
lret
mov
lahf
in
fwait
shl
aad
cmpsl
je
mov
xorb
in
fisubl
aam
dec
cltd
pop
jg
xor
pop
cltd
sub
xchg
mov
gs
add
call
fwait
push
iret
adc
jne
fisttpll
inc
mov
xor
lods
cltd
sub
fisttpll
push
stos
mov
jo
xor
push
fwait
test
adc
cmp
ds
ljmp
jb
int3
inc
xchg
push
ljmp
imulb
add
pop
adc
dec
jb
sbb
cmpb
sti
xchg
pop
adc
cmpb
imul
push
mov
shrb
inc
mov
pop
add
pop
sar
dec
xorl
fdivr
mov
loopne
adcl
icebp
cmc
fcomps
xor
and
jne
ret
mov
xchg
arpl
pushf
and
pop
cld
dec
add
sbb
add
add
add
add
add
xchg
xchg
add
add
add
add
out
add
add
add
add
add
add
adc
add
add
add
add
add
add
or
add
add
iret
add
xor
sbb
sub
mov
sub
add
add
addb
ljmp
ja
mov
decl
dec
int3
int3
int3
int3
int3
int3
int3
int3
pop
add
add
add
pop
dec
jae
and
outsl
add
add
mov
and
add
inc
add
add
insb
pop
add
add
add
add
add
add
add
sbb
add
add
insb
add
add
add
sbb
sbb
add
sbb
pop
add
add
and
popa
das
push
dec
push
mov
jae
dec
dec
push
cld
add
sti
jecxz
jne
leave
in
js
sbb
adc
mov
pop
sub
lea
movl
leave
or
je
call
push
leave
in
jl
push
lea
add
dec
or
adcb
sbb
push
pop
arpl
adc
mov
loopne
mov
mov
add
xor
push
loopne
add
add
je
push
pop
in
je
push
mov
mov
and
decl
add
stos
push
add
lea
and
loopne
add
mov
or
inc
push
adc
push
clc
add
loopne
add
add
pop
add
add
add
cld
sbb
sbb
sbb
xchg
add
add
add
add
add
add
add
fs
imul
add
jb
outsb
je
inc
fs
dec
add
jmp
je
adc
inc
add
jns
outsl
jne
outsb
jae
mov
inc
xor
jb
leave
js
add
add
pop
add
pop
add
add
add
sub
add
add
add
add
mov
add
add
add
jl
add
add
push
das
je
out
mov
jmp
jge
dec
jns
pusha
mov
xchg
arpl
or
loop
cmp
int3
aad
scas
cld
mov
xchg
jp
mov
data16
cmc
xorb
sbb
cltd
daa
cmp
pop
inc
inc
push
cmc
cmc
xor
and
mov
cmpsl
std
aas
mov
nop
fadds
lods
bound
inc
xor
les
cmpsl
test
jle
sub
mov
pop
cmpsl
nop
xor
fildll
push
repz
mov
outsb
adc
test
cmp
adc
xchg
ret
cmpl
push
inc
loope
xchg
xor
sbb
push
frstor
dec
out
push
cwtl
cmpsb
clc
lcall
or
sub
inc
mov
mov
cmp
fiadds
fldenv
sbb
lret
mov
xor
outsb
push
shll
sub
fcomip
in
aam
xchg
imul
negl
jmp
adc
adc
mov
dec
push
xchg
icebp
sahf
lods
mov
pop
mov
ret
or
dec
subb
in
in
xchg
aas
outsb
mov
or
jge
andb
and
dec
dec
xor
xor
inc
adc
sbb
jge
out
xor
xchg
mov
adc
bound
addr16
add
cmpsb
ficomps
mov
ss
push
jl
imul
mov
pop
rorb
mov
call
cmpsb
loope
sub
int3
pop
jp
jno
test
fs
pop
mov
dec
adc
jecxz
aam
xchg
push
leave
cs
loopne
insb
jle
or
sub
pusha
dec
insl
lret
popf
push
popl
fisubrs
and
loop
lock
inc
mov
xor
popa
cmp
pusha
pop
inc
push
adc
mov
and
pop
outsb
sub
xor
test
cltd
or
das
or
mov
mov
loope
push
jo
push
push
mov
xor
pop
js
adcb
das
bswap
add
jecxz
push
cmpsl
flds
push
lret
xor
push
lods
push
andb
pop
add
cmp
push
sbb
push
mov
stos
cmp
ljmp
mov
mov
mov
mov
aas
fs
ljmp
xchg
mov
cmpsl
lds
mov
mov
push
push
aad
add
mov
or
xchg
push
rolb
mov
pop
cmp
fistl
rclb
mov
clc
lahf
push
enter
sbb
das
les
lcall
xchg
pop
inc
test
daa
cmp
sub
je
xchg
cmp
push
in
mov
mov
addr16
add
mov
inc
cmp
jnp
xchg
shll
push
adc
test
adc
xor
pop
lock
je
sub
pop
sbb
pop
mov
push
push
out
sahf
std
lock
cmpsb
leave
leave
mov
xchg
sbb
pop
iret
dec
andb
lock
out
test
clc
out
pushf
mov
sub
or
inc
insb
push
repz
cmpsl
outsl
jne
repnz
test
mov
cmc
sbb
cmp
shlb
test
add
mov
js
dec
dec
adc
sub
cmp
popf
sbb
data16
inc
lret
ss
es
sti
notl
sbb
jmp
pop
outsl
mov
scas
sbb
dec
dec
es
mov
sbb
mov
dec
add
mov
dec
cmpl
lods
dec
outsb
and
mov
cmpsb
sahf
leave
fsts
jp
xchg
xchg
cli
outsb
add
lahf
mov
or
insl
sbb
fidivrl
int3
idivb
rorl
fbstp
cs
adc
das
or
lret
xor
or
jmp
mov
lahf
ret
test
int
outsb
xchg
std
je
fwait
insb
jle
and
jmp
hlt
adc
add
cmpsb
push
xchg
inc
bound
mov
shr
or
fwait
in
mov
mov
leave
mov
aaa
sbb
call
push
enter
outsb
push
sub
push
jno
test
lock
or
popa
lock
call
adc
ja
adc
sub
mov
pop
test
cmc
cwtl
pushf
dec
test
jle
sbb
mov
iret
dec
and
jns
dec
mov
push
xchg
add
inc
mov
sub
inc
into
pop
inc
cs
sub
push
fwait
insl
mov
and
or
adcb
pop
shlb
fcmove
call
mov
pop
sub
cmp
movsl
fisttpll
int3
lret
sub
enter
das
addr16
imul
subl
cs
aas
or
jp
stc
notb
mov
ja
insl
cld
ljmp
jge
data16
scas
jae
pop
inc
data16
sbb
fwait
dec
into
leave
jno
or
nop
in
sar
push
in
cmp
shl
mov
xor
popa
rcrl
out
repz
xor
adc
push
adc
testb
repz
mov
mov
push
pop
pop
test
pop
inc
jecxz
inc
lret
dec
imul
jae
jle
int3
loop
or
sbb
jb
cmpsl
pop
out
mov
shlb
sub
cwtl
pop
push
push
insb
repz
sti
and
icebp
or
je
xor
cmp
lock
lret
ljmp
xchg
dec
add
iret
or
sbb
mov
pop
dec
jl
cmpb
loop
insb
mov
lcall
push
mov
mov
mov
sub
xchg
loope
cmp
push
xor
loop
stos
or
loopne
add
sbbb
jl
cld
jb
dec
mov
in
fxch
rclb
cmp
mov
dec
addb
push
insb
or
push
push
jmp
mov
mov
mov
movsb
pop
adc
sub
and
insl
loopne
loopne
aad
pop
xchg
sahf
cmp
das
mov
jbe
jp
xchg
mov
xchg
imul
sbb
xchg
lret
test
jns
push
cmp
jo
jnp
ljmp
loope
and
lahf
adc
add
bound
push
fdivp
lret
ret
sbb
ljmp
pushf
sbb
mov
adc
scas
xor
push
ss
daa
leave
imul
sub
xorb
push
mov
ret
fwait
icebp
in
mov
mov
imul
sbb
test
daa
cld
into
sbb
pusha
cld
dec
mov
sti
cltd
push
std
fidivl
fisubl
in
push
pop
xchg
cmp
pop
xchg
es
insl
jl
insb
jmp
and
repz
loope
xor
push
sete
test
xchg
imul
xor
into
cmp
push
or
xchg
shl
push
sahf
cltd
and
add
and
negb
cmc
xorl
daa
or
fnstsw
rorb
js
sub
in
jae
jne
sbb
jle
fbstp
outsl
cmc
xor
in
sub
lods
sub
push
mov
std
mov
sahf
mov
ja
rorb
fucomp
in
mov
into
sub
les
sahf
pop
dec
icebp
jl
add
mov
stos
adc
rcl
lods
aas
enter
in
sub
push
int
lahf
inc
and
int3
daa
dec
ljmpw
outsb
dec
subl
pop
mov
mov
stos
jbe
dec
or
add
cwtl
add
push
sahf
das
dec
add
jae
lret
lock
pop
aaa
mov
push
sub
aas
outsl
loopne
inc
out
jns
fldl
testb
add
aaa
mov
outsb
shlb
and
adc
ds
scas
mov
ds
daa
jl
fimull
fwait
ljmp
test
add
arpl
mov
sub
sbb
inc
js
pop
push
xor
enter
mov
mov
push
cmc
nop
mov
add
sahf
insl
inc
pop
xor
popf
push
into
ret
mov
sub
xchg
sbb
xchg
js
mov
cmp
and
insb
pop
xchg
pop
mov
aad
test
add
sbb
idiv
inc
repnz
inc
std
repz
mov
and
rolb
cwtl
fistl
lret
and
inc
or
xchg
adcl
xor
cmp
adcl
ror
pop
and
gs
pop
lods
push
dec
out
adc
mov
sqrtps
sub
sub
mov
jbe
dec
loope
incb
pusha
sub
mov
les
out
xchg
adc
sbb
insl
fldcw
pop
push
jecxz
mov
ljmp
aaa
pop
rcll
cli
into
mov
xor
fildll
cmp
jmp
xor
lret
popa
clc
dec
jecxz
lret
mov
xchg
push
popa
ljmp
bound
in
pop
add
jnp
and
test
fadds
pushf
mov
or
push
out
pop
fdivp
fnop
decb
cltd
and
push
fcmovnb
xchg
mov
div
cmp
clc
xor
sbb
aas
lock
xor
pop
inc
leave
dec
negb
fsts
rcll
adcl
add
popa
pop
jbe
push
xchg
ret
lods
mov
loope
repnz
adc
lcall
into
or
xchg
lret
and
lods
mov
push
push
push
xor
dec
bound
clc
pop
add
insb
sub
xchg
jmp
sub
aad
div
inc
les
jns
mov
and
xor
pushw
xor
cmp
lahf
inc
subb
push
mov
push
shrl
movsl
add
aam
fmulp
and
jnp
std
rorb
int
cmc
cmc
push
inc
dec
rorl
sub
or
add
sbb
push
dec
scas
mov
jge
xor
adc
dec
in
out
adc
add
pop
xor
cmpsl
fistpll
cmp
sbb
mov
js
imul
dec
xchg
pop
mov
scas
cmp
arpl
mov
sbb
js
out
paddq
ret
cmp
adc
adc
bound
imulb
and
cwtl
push
mov
push
push
mov
int3
add
push
fs
fwait
loopne
lock
repnz
fildl
mov
jae
int
cmp
inc
ds
sbb
or
test
mull
jle
and
mov
pop
lods
fwait
mov
xchg
fstps
shlb
sub
xchg
sbb
pop
or
ret
call
cmc
ljmp
in
sti
lods
loopne
addr16
lods
push
xchg
inc
nop
insb
insb
pop
mov
lock
int
pop
movsl
out
filds
jmp
add
mov
es
scas
xchg
or
push
mov
pop
rolb
rcrl
dec
sbb
in
test
hlt
rorb
cmpsl
mov
sbb
cmc
xor
fmul
jbe
mov
jle
push
ror
and
fldl
xchg
cmp
push
fisubl
mov
pusha
adc
mov
icebp
out
shr
inc
ficoml
mov
adc
push
jo
cmpsl
ljmp
out
sub
test
mov
hlt
sahf
aaa
test
in
faddl
cmpl
and
ljmp
adcb
cltd
ror
je
rcrl
divl
ljmp
xchg
xor
dec
int
cmp
notl
movsl
mov
std
shlb
or
jbe
jle
sbb
nop
cmp
addr16
test
or
lret
cmp
ret
sbb
add
cmp
xchg
cwtl
int3
inc
fsubrs
cmp
pop
xorl
mov
fists
test
jmp
lahf
xor
lret
mov
ret
mov
ds
and
mov
mov
mov
or
daa
ss
cmpsb
xor
add
pop
inc
cmpsl
sub
adc
xor
out
mov
jns
iret
movsb
fnstenv
ljmp
add
xor
psubb
push
addl
rep
loope
xrelease
das
add
pop
jno
xor
push
xchg
cmp
lcall
sub
jae
pop
mov
push
pop
xchg
mov
mov
sbb
stc
loop
pop
adc
jg
nop
rep
scas
push
cmp
mov
dec
push
xor
and
dec
ss
lcall
dec
pop
mov
jmp
mov
popa
loopne
fldenv
pop
or
fbstp
fmul
iret
mov
jmp
sub
push
popa
sbb
dec
adc
and
nop
stc
insb
ljmp
or
xchg
out
inc
jnp
xchg
xchg
cmp
xor
pushf
mov
xor
mov
inc
cmp
sub
mov
sbb
inc
fxch
jecxz
scas
ret
arpl
pop
gs
inc
stos
sbb
lahf
sbb
inc
clc
and
imul
jae
mov
inc
push
out
jle
mov
hlt
jl
incl
add
and
push
add
xchg
mov
in
sahf
les
mov
scas
pop
loopne
pushf
xor
mov
in
enter
lock
inc
clc
cmc
outsl
mov
add
add
push
sub
push
pop
dec
pop
xchg
testb
inc
mov
sub
cmc
pop
stos
mov
xchg
adc
in
cli
push
jp
or
and
xchg
xor
idivb
in
or
inc
adc
rolb
xchg
or
dec
jl
dec
test
test
stc
out
xor
and
sbb
out
sub
adc
mov
and
std
cmpsb
sub
insl
jne
mov
arpl
cmp
jae
loope
xor
insb
inc
dec
push
mov
xor
aam
mov
add
adc
andl
cmp
cmp
jb
sahf
insl
pop
fistps
pop
mov
add
mov
cmp
icebp
pop
sbb
inc
test
pop
ret
repz
pop
pop
test
push
scas
xchg
add
pop
out
xchg
mov
popa
pop
cwtl
ljmp
cld
popa
lods
mov
and
outsl
adc
jl
xchg
fcomps
dec
mov
dec
cmp
push
dec
cli
pop
add
adc
dec
dec
nop
popl
sahf
ljmp
out
in
xchg
jbe
xchg
loop
sahf
inc
pusha
cmp
imul
mov
in
jecxz
xchg
sub
xchg
repz
push
in
popf
bsf
fimull
or
push
daa
frndint
mov
out
push
imul
out
cld
cmp
and
insb
push
popf
test
cmp
scas
popl
sub
je
hlt
mov
sub
cmp
outsb
jle
push
insl
in
jle
pop
mov
rcrl
cwtl
ret
pushf
mov
imul
rcr
mov
pop
sub
mov
inc
sub
or
dec
and
fadd
sub
test
mov
mov
jnp
nop
int
sub
mov
arpl
adc
andb
mov
lret
mov
fcoms
cmc
xor
cwtl
jg
fisubrs
les
pop
add
cmpsb
cmp
ret
push
ret
fs
stos
pop
adc
lock
ljmp
shrl
sub
lds
sbb
repz
mov
lods
sub
inc
clc
and
push
push
cwtl
dec
cld
test
test
inc
outsl
test
fsubrl
scas
outsb
repz
mov
shll
call
pop
xor
mov
aad
nop
mov
sub
ja
test
dec
lods
popa
xor
aas
jle
imul
mov
scas
xchg
push
mov
mov
lea
out
mov
xor
in
movsl
jge
call
mov
setno
cmc
ret
cmpsl
jge
es
push
jp
xorl
fwait
or
popf
adc
jmp
jns
ja
rolb
aaa
in
imul
call
jle
out
and
or
fsubrl
bound
mov
lds
push
scas
pop
cvttps2pi
mov
mov
les
cld
repz
mov
sbb
ja
cmp
test
sub
loop
jb
testl
lods
psraw
mov
dec
das
lahf
mov
ret
and
jae
fdivrl
cmp
push
rcll
into
pop
icebp
data16
outsl
jb
adc
or
mov
les
js
outsb
inc
test
mov
adc
add
lret
repz
cmp
mov
inc
outsb
or
sub
loop
add
int3
jno
sub
lret
cmp
xchg
push
pop
jmp
nop
mov
adc
iret
lods
add
xlat
daa
push
jecxz
arpl
fstps
xchg
add
fisttps
cmpsl
loope
sbbb
clc
stos
xchg
daa
cli
inc
mov
fwait
bound
dec
cmp
repz
cmpsb
xchg
add
notb
cmp
and
mov
add
leave
repnz
push
out
adc
in
sub
loope
lods
adc
sub
inc
fiaddl
out
pop
imul
adc
sarb
insl
cmp
mov
push
mov
mov
out
cmpsl
inc
pop
dec
inc
sbb
test
sub
mov
dec
sub
lea
sbb
loopne
ds
out
mov
in
sbb
test
xor
scas
pop
mov
push
push
mov
cmp
stos
lret
hlt
stc
and
mov
popf
hlt
xchg
vmread
rclb
int3
dec
cmp
jg
ret
shlb
cmp
mov
or
scas
test
ja
scas
arpl
mov
repnz
add
pop
ret
lahf
xlat
in
lret
mov
pop
sub
xor
aaa
in
mov
xchg
les
js
mov
les
subl
out
jg
jecxz
cmp
testb
iret
cmpsl
push
mov
push
inc
jb
scas
pop
icebp
ljmp
repz
mov
pop
das
popf
outsb
test
mov
add
add
cmp
add
add
add
add
lods
add
add
add
pop
add
pop
add
add
add
sub
add
add
add
add
mov
add
add
add
xor
xor
cmp
add
add
add
addb
in
incl
ljmp
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
jae
jb
jo
dec
or
jne
or
add
add
add
mov
add
add
and
add
add
add
add
xchg
add
add
add
add
fwait
add
add
add
add
add
add
and
gs
push
jae
inc
imul
add
shufps
jmp
mov
enter
or
pop
push
lea
mov
cmp
inc
leave
in
or
inc
decl
incl
clc
add
cld
or
or
dec
push
rolb
push
add
lret
adc
dec
insb
push
insb
rorb
mov
add
mov
add
daa
add
add
adc
add
adc
add
xor
call
add
decb
cld
test
std
std
mov
and
cld
decl
add
enter
add
push
cmp
clc
xchg
cmp
pushl
lret
mov
lock
adc
lock
in
push
hlt
adc
add
add
add
add
add
add
add
add
add
add
insl
inc
roll
inc
inc
outsl
outsl
push
test
insb
gs
insl
inc
jns
sbb
jbe
je
arpl
inc
push
gs
cs
outsl
inc
or
insb
jge
add
outsl
imul
je
je
je
insb
add
add
add
add
jmp
add
add
add
add
pop
inc
lret
xor
popa
adc
sar
repnz
push
push
lahf
jle
sbb
sbb
xchg
sub
bound
imul
subl
mov
xchg
sbb
sarl
int3
fwait
or
and
fisttpll
movsl
faddl
negl
push
jno
rclb
sbb
lcall
mov
fwait
popl
movsb
cmp
adc
pop
cmpsl
gs
mov
or
xchg
cmp
cld
setne
pop
popf
clc
jb
pop
xor
mov
out
push
jge
aaa
xchg
lods
imul
nop
jmp
push
orl
sti
aam
lods
addb
lods
inc
jle
adc
jle
mov
in
lods
lcall
push
dec
push
pop
sbb
mov
movsl
push
mov
and
push
loopne
aaa
adc
jle
jmp
add
fmuls
mov
xchg
data16
mov
adc
mov
in
sbb
divb
sar
inc
pop
popf
cmp
jno
mov
xchg
jo
xor
and
and
lds
lea
scas
sub
sbbb
xor
mov
sub
cld
out
and
je
and
push
jl
sub
or
mulb
xchg
jg
jnp
shrb
mov
xor
dec
adc
roll
fisttpll
cli
pusha
pusha
icebp
pop
mov
sbb
fmuls
negl
sub
sbb
cli
lahf
cmc
sub
push
xlat
pcmpgtw
gs
fcmovnu
cmc
stos
test
cmpsb
or
cld
or
inc
or
mov
ja
fs
ss
out
lods
pop
ja
push
pop
int3
fildll
lahf
xchg
mov
fsubs
jne
adc
rol
rcrb
dec
js
scas
jb
lea
xor
push
cmp
adc
xor
or
jl
clc
aad
icebp
mov
into
in
mov
cmc
xor
aas
fistpll
and
dec
mov
rcl
test
shlb
push
jg
rol
adc
andb
lods
xchg
fs
sbb
adc
cmp
pop
pop
je
xchg
inc
rorl
push
into
and
pushf
ds
mov
cli
mov
repnz
sub
stos
divl
test
mov
pop
sub
test
add
outsb
aam
push
dec
pop
mov
xchg
or
fimuls
inc
dec
sub
add
or
scas
push
cltd
arpl
nop
sbb
pop
hlt
cli
dec
and
jbe
mov
push
mov
and
mov
mov
fsubrl
cmp
xor
popa
mov
fwait
scas
subl
and
in
or
xor
dec
lods
push
push
out
cli
adc
cmp
popa
or
popf
in
mov
xor
int
lcall
aam
cwtl
adc
mov
dec
jb
ret
xor
lret
out
and
jnp
ss
xchg
sahf
shrl
int3
sub
rcrl
icebp
int3
mov
push
in
xchg
jo
cmpsl
aas
push
mov
jb
test
data16
push
test
jo
or
lds
leave
sarl
in
rcll
loope
mov
loopne
leave
xlat
cmpsb
or
push
shl
push
sub
adc
mov
mov
imul
mov
lds
lods
les
xor
mov
call
jbe
cwtl
add
jbe
xor
jmp
pop
cmp
jmp
out
mov
es
jne
add
jae
ja
sbb
loope
cli
daa
or
xchg
add
xchg
mov
insl
mov
jecxz
sub
xor
or
jg
icebp
out
jg
jno
pop
cwtl
xchg
xchg
adc
lock
mov
xchg
dec
mov
mov
pop
enter
out
xor
adc
mov
xchg
cwtl
mov
hlt
sbb
jmp
mov
mov
pushf
fidivl
mov
addr16
pop
pop
cld
and
add
xchg
push
repz
cs
in
in
xor
mov
mov
jecxz
dec
imul
sahf
shlb
outsl
shll
dec
xor
mov
add
mov
mov
mov
int3
ljmp
inc
mov
xchg
cmc
or
and
jmp
adc
insl
mov
popf
repz
sub
cmpsl
add
stos
xor
xlat
sbb
test
pop
jg
test
push
mov
cli
jmp
jno
dec
pop
cltd
test
inc
push
adcb
jb
and
cs
addr16
dec
mov
out
shll
cltd
stos
adc
movsl
ret
cld
mov
push
sahf
mov
jmp
or
repz
inc
cmpsb
and
jne
inc
or
mov
pop
stos
xchg
fisubl
and
shl
xlat
scas
jae
inc
dec
mov
les
shlb
pop
push
jo
jbe
and
pop
inc
and
ret
adcb
sti
incl
sti
mov
stc
sti
cmpsl
aas
push
cltd
push
push
sub
fwait
sub
ja
dec
scas
rorb
outsl
fwait
shl
insl
inc
hlt
cmp
mov
aas
mov
pop
xchg
dec
xchg
mov
sbb
test
pop
movsl
inc
in
xchg
jl
xchg
call
cmc
lret
stos
aad
out
js
ret
jg
push
and
lret
pusha
call
out
insl
or
in
cwtl
push
inc
pop
fdivrp
mov
aam
enter
aas
das
xor
in
mov
push
jg
mov
fwait
outsl
cmp
mov
pop
xchg
pop
outsl
xchg
cmp
jg
cmc
or
enter
faddl
jb
lahf
mov
addr16
sub
xchg
inc
xor
rcll
cs
mov
and
mov
cs
cwtl
lcall
pop
xchg
aaa
adc
pop
das
jmp
out
push
adc
fcmovne
inc
test
pop
je
in
push
sbb
sub
add
cmp
mov
popa
and
cmp
int3
xor
lock
outsl
and
sbb
xor
add
dec
sub
push
mov
jl
push
dec
or
pop
imul
arpl
inc
mov
rcll
aas
movsl
lock
jg
jg
mov
and
push
pop
fsts
add
fmull
xlat
mov
jnp
push
rolb
nop
int3
cmc
aaa
push
mov
xchg
test
mov
lods
jbe
shll
and
add
xchg
cli
add
inc
jecxz
jns
jmp
shll
incb
adc
mov
in
lods
int
call
mov
or
roll
test
fsubs
push
sub
xchg
ret
inc
jae
out
in
pop
push
jae
cmp
push
mov
xor
sbb
add
xchg
mov
push
je
lret
mov
popf
fucomp
arpl
and
jg
dec
push
jmp
test
xchg
inc
loopne
cld
inc
hlt
cmp
push
mov
push
pusha
push
sub
es
add
nop
sti
fisubl
adc
rclb
aad
inc
mov
test
mov
or
mov
mov
ret
dec
std
mov
lret
cmp
jno
test
shll
xor
js
and
pop
ret
idiv
mov
enter
ljmp
out
dec
jae
sti
enter
jb
mov
mov
cmp
and
and
pop
push
xchg
ljmp
and
imul
cwtl
cmp
sbb
int
mov
xor
pop
idiv
cmp
stc
xchg
cmp
out
loop
clc
add
add
shll
sti
in
push
push
imul
push
imul
sbb
mov
pop
fistpll
mov
pop
jg
cmp
pop
dec
jbe
std
or
inc
mov
mov
or
sbb
sarl
out
loop
data16
sbb
add
push
add
icebp
push
adc
pop
add
jns
sbb
or
xchg
adc
cmp
or
inc
push
pop
jmp
imul
sbb
or
lods
lcall
or
or
mov
jo
imul
sbb
jbe
add
adc
stos
test
cmp
in
stc
lcall
mov
jp
sub
ret
jle
mov
iretw
outsb
jns
loopne
lds
cmp
xor
es
ret
adc
shll
pop
std
mov
mov
pop
and
sub
in
jno
adc
push
test
std
out
push
mov
adc
push
std
xor
push
and
fldt
das
arpl
sbb
xchg
pop
out
mov
arpl
pushf
push
and
ret
mov
dec
loopew
dec
mov
xor
cmpsl
mov
mov
loope
inc
adc
pop
lock
adc
pop
dec
xchg
jo
addb
lret
jle
sti
mov
idiv
or
sbb
ss
dec
repz
sub
sbb
xlat
cmpsl
push
ja
pop
mov
pop
xchg
cmc
add
das
and
jbe
stc
inc
mov
dec
test
dec
mov
mov
jo
xchg
inc
cli
neg
cwtl
sti
push
test
shr
mov
xchg
jne
cltd
daa
and
lret
imul
popf
lea
xlat
mov
add
cmpsl
ficoms
cmpb
rorb
jmp
inc
mov
jge
push
pop
in
push
es
sub
sub
in
mov
sar
jge
push
xchg
out
sbb
cmc
pusha
adc
adc
jl
inc
outsb
aaa
scas
push
fidivrs
and
xor
sbb
lods
xchg
lods
fidivl
cmp
cli
pop
mov
out
es
or
mov
fistpl
sub
rcrb
icebp
pop
adc
jle
int
cmp
insb
push
cmp
adc
dec
lahf
fstps
dec
mov
popa
pop
leave
fistpll
addb
push
ret
mov
pop
jg
mov
js
or
in
cmp
mov
and
fsubp
stos
push
push
push
icebp
aaa
jnp
insb
in
je
in
rcrl
sub
imul
ret
aam
pusha
or
dec
cld
in
sbb
and
les
sub
out
ret
daa
pop
sub
jbe
sbbl
jecxz
int3
jmp
fdivrs
xor
lods
inc
rol
lret
or
lea
and
mov
xlat
ss
stos
ljmp
jns
je
push
mov
mov
mov
pop
rcrb
lret
jbe
mov
pop
imul
test
jne
pusha
add
lcall
xor
dec
push
pushf
aaa
aad
lea
int
das
psrlq
push
sub
inc
or
imul
imul
jbe
std
movsb
test
mov
rcl
sub
mov
test
jb
or
jne
xchg
jns
inc
sbb
ret
and
jns
adc
inc
in
cmc
inc
imul
hlt
push
add
sub
std
fwait
test
xor
mov
or
subb
mov
scas
rorl
or
sbb
shlb
cli
mov
jo
imul
loope
hlt
lahf
dec
cmpl
sbb
jmp
push
stc
jb
or
ret
adc
out
adc
adc
jp
into
and
pop
out
hlt
or
dec
mov
cmpsl
and
mov
popf
int
sub
sub
rcrb
add
jle
cmpsb
mov
xor
adc
sub
lods
xchg
push
inc
aam
fnstcw
fistpll
and
xor
fstl
jge
sarl
and
push
inc
test
lods
shl
lock
cltd
push
mov
sar
incl
movsb
ljmp
cli
mov
xor
push
sbb
adc
adc
sbb
mov
lret
xor
popa
sbb
xchg
scas
idiv
push
ljmp
mov
hlt
sbb
add
lcall
aaa
push
lahf
mov
loope
int3
mov
mov
scas
jo
lret
stc
pcmpgtw
mov
stos
ds
out
insl
imulb
mov
inc
inc
push
or
xchg
or
addl
xchg
test
add
orl
out
mov
and
movsl
sbb
mov
and
dec
movsl
rcrb
cmpsb
pusha
icebp
stc
call
jecxz
and
cld
jnp
mov
inc
mov
pop
loope
cld
cmc
push
mov
clc
jecxz
scas
fmuls
push
push
push
jge
push
mov
test
and
addr16
mov
mov
icebp
mov
add
in
ja
mov
jecxz
enter
sbb
bound
test
stos
repnz
adc
add
xchg
fcoml
icebp
test
jle
or
jns
cld
or
lock
stos
loop
dec
out
push
ret
popf
jno
mov
adc
loope
cvtdq2ps
xchg
rolb
fpatan
push
or
dec
jge
mov
push
or
nop
loopne
mov
sbb
dec
push
cmp
push
imul
cmp
jno
pop
sbb
ljmp
sub
push
or
add
lret
rcll
in
lods
push
decl
mov
iret
mov
in
roll
cs
subb
sub
dec
dec
adc
test
xchg
xor
jecxz
mov
test
cmpb
enter
movsl
adc
sub
mov
mov
rcr
sbb
or
in
push
cwtl
stc
sbb
or
sbb
fcomp
sbbl
test
push
negl
fiadds
call
arpl
in
ret
sub
add
shr
mov
in
loop
test
leave
jne
sbb
cmp
add
leave
sti
pop
pusha
in
shrl
call
xor
jbe
cwtl
xlat
mov
mov
test
xor
lds
jae
and
ficoml
jbe
stos
addl
data16
sbb
push
insb
lret
mov
int3
sbb
or
push
cmp
out
jae
inc
mov
push
shlb
adc
loopne
mov
inc
xor
mov
cwtl
loop
xchg
mov
cmpsb
mov
aad
imul
pop
sbb
push
mov
mov
jne
mov
dec
sub
test
mov
testl
cmp
in
push
adc
ss
and
mov
mov
xor
jp
pop
out
mov
sbb
repnz
pop
sbb
cmp
push
push
mov
fwait
loop
dec
sbb
mov
inc
push
or
jp
lock
js
icebp
dec
push
shl
sub
scas
ficompl
inc
test
pop
inc
pop
lret
stc
add
pop
addr16
adc
sub
movsl
jae
clc
adc
cmpsb
shrl
add
cmp
rcrl
pop
or
dec
add
cld
outsl
rcrb
leave
mov
rcll
nop
dec
xchg
pusha
insb
pop
push
jne
pop
or
inc
push
add
jl
sbbl
pop
dec
fcomps
fmull
xor
xchg
cltd
add
decl
out
mov
or
sbb
lea
xchg
xchg
test
cltd
pop
out
fnsave
loop
mov
lds
test
xchg
aas
cwtl
mov
or
aas
inc
mov
pop
cmp
int3
push
cmpsl
jae
sub
lret
and
imul
sbb
mov
jbe
nop
outsb
xchg
out
xchg
cmp
test
dec
push
popa
popa
leave
ret
cmp
xchg
ds
cmp
leave
and
sbb
lods
jo
ret
addl
dec
stc
mov
rorl
aas
adc
dec
ret
in
outsl
xor
rcll
cmp
adc
push
sub
aam
sbb
xchg
subb
xor
ja
xchg
sbb
mov
push
mov
mov
scas
push
mov
ret
sbb
xor
pusha
iret
repz
subl
cmp
add
pop
je
mov
js
jns
fstps
xor
loopne
movsl
mov
dec
out
pop
stc
cmp
mov
mov
jecxz
jnp
sub
popf
adc
idivb
inc
xlat
cwtl
inc
sbb
mov
inc
enter
imul
cmpsl
mov
jmp
jnp
pop
fbstp
movsb
and
cmp
shrl
mov
mov
aas
into
cmpsb
cmp
mov
test
add
mov
jl
sub
cwtl
mov
cmp
jae
adc
lcall
mov
testl
shr
dec
and
sahf
jmp
mov
mov
sti
inc
fists
and
arpl
std
cmpsb
aad
inc
sub
sbb
insl
mov
mov
mov
sbb
mov
lock
sarl
jo
jl
mov
xchg
sbbl
imul
fwait
icebp
dec
test
xchg
jb
or
shlb
adc
add
fildll
movnti
cmp
in
push
xor
mov
mov
ret
pop
xlat
sbbl
pop
rorl
jne
sbb
inc
lahf
cmp
push
cli
scas
arpl
imul
xchg
inc
mov
out
sub
je
shl
xlat
repnz
jle
lods
js
hlt
jo
ljmp
lods
pushf
inc
xchg
xor
lea
repz
mov
mov
ds
xor
xchg
outsl
aas
bound
mov
cltd
mov
dec
add
mov
rolb
fidivl
dec
adc
adc
jge
daa
inc
negb
ss
or
push
call
mov
push
jmp
mov
sub
cmp
int
dec
mov
rcll
add
add
add
add
add
hlt
jnp
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
pop
add
add
add
add
inc
add
add
add
add
lret
add
add
add
add
xor
add
add
add
cmp
addb
pop
stos
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
test
jb
outsb
dec
or
add
add
add
cmc
add
adc
add
ret
add
inc
add
add
add
push
add
add
shlb
add
aad
add
add
add
add
add
add
add
add
movsl
jecxz
cmp
jae
inc
outsl
outsb
jne
outsb
add
push
imul
insb
mov
or
iret
mov
rcll
inc
das
push
cld
add
dec
pop
mov
mov
cld
decl
std
mov
addb
sbb
lea
decl
xchg
pop
jne
mov
add
push
rolb
rolb
incb
add
push
add
push
add
daa
and
decl
subl
push
inc
incl
cmp
loope
call
pop
and
cld
adcl
call
inc
jge
push
imul
push
add
std
ud0
movb
lret
ret
jb
cmp
lea
lock
adc
lea
faddl
pop
add
add
add
add
sbb
stos
add
add
add
add
add
cmc
pop
add
add
je
imul
jb
and
add
sub
push
js
add
push
arpl
xchg
insl
gs
add
insb
add
js
push
insb
sarb
add
add
outsl
insb
insb
jne
gs
xor
jne
out
add
test
add
add
add
add
adc
add
mov
add
add
add
in
add
add
add
add
and
adc
cmp
imul
ja
xor
dec
sahf
dec
cmpsl
mov
fxch
mov
push
pop
fsubrp
popa
bound
repnz
imul
push
and
scas
mov
popf
leave
xchg
aam
cld
lea
ja
push
cmp
das
int3
pushw
out
mov
lret
imul
test
dec
ret
mov
push
das
loopne
sbb
push
xchg
xchg
sbb
fnstsw
ret
fs
dec
divl
fstpl
sbb
mov
pop
notl
cmp
or
pop
shll
fidivl
rcrb
es
push
lret
push
push
scas
pusha
daa
or
loope
sub
pop
or
in
adc
insb
sub
js,pt
push
adc
test
mov
dec
cmp
imul
movsb
cmp
adc
fcomp
push
dec
test
mov
inc
lea
jnp
sub
mov
into
mov
mov
packuswb
mov
imul
int
xor
push
sbb
inc
les
orl
jbe
pop
insb
lock
lds
cmc
push
xor
dec
loope
cs
movsl
call
push
sti
dec
fisttps
imul
out
push
inc
lahf
decl
push
dec
scas
loopne
push
lods
imull
stos
dec
pusha
push
dec
outsl
rcrl
cmc
loop
adc
sbb
mov
mov
lret
mov
adc
out
pop
sarb
es
pop
fnsave
adc
cmp
lret
push
or
pop
mov
xchg
jmp
fmuls
add
sbb
add
xlat
jg
mov
jecxz
fwait
push
das
mov
sub
dec
pushf
pop
rcl
xchg
jae
cltd
and
jb
stos
insl
jno
mov
movsl
mov
mov
lock
mov
inc
ret
push
pop
or
pop
mov
add
pop
mov
mov
inc
push
push
cmp
movsb
cld
lcall
cmp
pop
push
sub
insl
out
push
and
dec
jbe
mov
cmp
repnz
xchg
cmpsb
stos
jmp
clc
mov
imul
cmp
add
test
xchg
inc
arpl
xchg
xlat
movsb
mov
xchg
and
popf
jl
imul
rolb
lcall
rcll
movsl
popf
and
xchg
lods
dec
jnp
push
sub
and
push
jnp
lcall
daa
testb
xchg
sub
push
mov
aad
xchg
sbb
mov
xor
mov
test
jge
pusha
cwtl
dec
mov
fimuls
and
fnstsw
add
insl
xorl
pop
movsl
jmp
xchg
outsl
in
push
cs
lret
pop
xor
xor
fstps
lcall
dec
sub
xlat
pop
lock
xlat
hlt
fucomp
and
xchg
fstpl
rcl
mov
xor
push
stos
insl
aad
xchg
stos
add
imul
lock
fisubs
cmpsl
mov
mov
push
mov
fbld
mov
cmpsl
sbb
mov
add
xchg
insl
jecxz
pop
mov
out
pop
jae
adc
sti
lahf
unpcklps
mov
stos
daa
dec
sarl
adc
jo
test
jp
rcr
sub
cmp
sub
jmp
jo
ficomps
or
xchg
xchg
xor
add
out
rcll
sub
add
and
mov
loop
adc
imul
pop
into
test
mov
repz
push
mov
mov
add
xor
or
fwait
loopne
mov
mov
push
mov
mov
and
leave
loope
dec
xchg
std
movsb
rol
jge
shll
xor
filds
adc
sbb
jp
je,pt
jecxz
mov
or
xor
daa
hlt
mov
nop
jae
aad
mov
push
or
mov
add
sub
fisttpll
mov
push
lea
aaa
test
cmpsw
cmp
lcall
adc
ret
sub
dec
lcall
mov
cmp
cli
cmp
push
addb
mov
cmc
shll
adc
ret
sub
inc
jmp
ja
mov
shrl
push
pusha
or
fiadds
mov
jecxz
dec
jnp
xor
cmpsb
std
add
ja
int3
js
push
mov
adc
pop
jns
cmp
xchg
mov
enter
add
pushf
nop
adc
pop
les
or
sub
xor
add
cmp
cli
call
insl
mov
hlt
data16
mov
sbb
mov
push
int
pop
xchg
adc
rclb
jl
movsl
jecxz
add
adc
sbb
mov
or
inc
lods
stc
iret
jo
ja
lods
cmp
loope
stos
enter
xchg
xlat
inc
test
push
pop
sbb
adc
xchg
pop
inc
subl
bound
repnz
push
sub
repz
add
xchg
jmp
xlat
andb
pop
mov
xorl
dec
pop
mov
sahf
xor
add
mov
mov
cmp
fwait
bound
and
ja
jbe
add
cmp
pusha
pop
sahf
adc
loope
xchg
fs
sahf
mov
sub
shr
mov
mov
inc
ljmp
nop
in
push
arpl
cmpsl
mov
jnp
int3
das
sahf
xchg
dec
jne
push
sti
rcll
ret
dec
pop
xchg
push
mov
sti
pop
jge
mov
scas
ret
ss
insl
fisttpll
xor
ds
fs
andb
sub
add
or
lea
or
or
icebp
lret
xorb
mov
fiaddl
lock
or
stos
xor
and
pop
ds
pop
pop
fwait
je
in
loop
lods
test
sub
arpl
in
pop
iret
outsb
addb
outsl
jecxz
dec
inc
add
popa
fmul
les
cmpsl
mov
gs
add
nop
push
es
cmp
mov
push
mov
xchg
test
or
cmp
repnz
cltd
outsb
in
cmp
cmp
mov
es
rclb
xor
mov
pop
push
test
inc
mov
adc
andnps
rorb
sbb
int3
add
ja
xor
stc
mov
lea
imul
loop
das
push
scas
xchg
push
lcall
adc
testl
cmp
mov
add
dec
push
pop
cmp
fildl
inc
mov
idivb
jg
fisttps
daa
adcl
pop
movsb
sub
popf
rcrb
dec
aad
mov
fsts
jge
and
or
loopne
lahf
add
in
push
popf
daa
fadds
xchg
push
jb
and
or
mov
pop
add
mov
xor
fdivr
mov
sbb
sub
imul
push
test
out
push
aaa
inc
inc
mov
das
in
mov
inc
cs
cmp
lods
mov
sub
xchg
fwait
mov
mov
lods
je
sahf
inc
or
arpl
mov
pop
sub
test
inc
into
into
xchg
out
mov
jae
sub
divl
enter
scas
add
cmpsl
call
fs
sub
dec
stos
dec
push
out
and
shll
xchg
fsubr
xchg
sub
rcrb
outsl
push
leave
mov
mov
mov
pop
jne
or
mov
jno
sub
xor
adc
xchg
mov
jbe
xor
mov
inc
std
mov
pop
mov
and
pop
das
xchg
dec
fiaddl
mov
or
xchg
dec
mov
setp
pop
or
cld
mov
inc
sbb
fcoml
repz
pop
cld
int3
cmp
push
pop
test
mov
cmpsl
sbb
das
push
push
cmp
mov
jnp,pt
jne
mov
sub
imul
fstps
fsubs
add
mov
xor
lock
jae
cmpsl
iret
fcompl
cmp
into
inc
push
aaa
cmpsl
je
mov
jg
movb
jae
loop
ret
cmp
pop
clc
mov
and
xchg
and
mov
call
pushf
test
mov
mov
leave
mov
mov
fildl
pop
xor
enter
and
out
inc
int3
out
dec
dec
outsl
adc
cwtl
lret
scas
inc
push
push
fldenv
sahf
pushf
scas
mov
popf
or
loope
in
in
jmp
mov
or
jns
out
mov
fcoml
pushf
sbb
andb
dec
mov
enter
in
pop
push
mov
cwtl
pop
xlat
add
gs
stos
push
pop
push
pop
js
sub
sarl
mov
nop
cmp
or
enter
ja
dec
loope
sub
lret
lahf
jo
and
inc
xor
jb
inc
inc
dec
jb
lods
or
ds
xchg
test
inc
cs
mov
dec
sub
test
out
movmskps
icebp
enter
insl
cltd
fisubrl
inc
movb
sbb
rolb
xchg
arpl
aas
add
mov
in
pop
addr16
sbb
inc
push
dec
push
xor
xchg
xchg
test
popf
test
inc
shl
sahf
jbe
jmp
stc
adc
sbb
cs
jp
loop
movsl
sbb
lock
jp
lds
and
or
jp
sbb
sbb
test
gs
insb
out
es
mov
aaa
adc
lods
in
pop
adc
push
and
jbe
imul
ret
jge
mov
xor
dec
rcl
and
in
sbb
pop
sub
xchg
jge
mov
mov
sbbb
lods
and
push
pop
pop
fisttpll
loopne
push
es
call
add
mov
icebp
rorl
cmp
lret
dec
jge
sbb
cli
mov
popf
enter
fisubs
mov
mov
test
out
pushf
inc
cwtl
lea
mov
fwait
and
jmp
js
mov
push
inc
stos
prefetch
jmp
mov
addr16
popf
sub
daa
adc
dec
in
and
aas
sbb
push
lcall
dec
leave
imul
or
dec
fiadds
aam
out
fwait
psubusb
push
and
shl
push
int3
fistps
loop
xchg
xorl
or
inc
jge
mov
add
jno
inc
insb
icebp
leave
cmp
jl
loop
lods
imul
imul
jo
sub
mov
lods
mov
lods
and
aas
rcl
inc
cmp
mov
rcr
cmpsl
adc
es
hlt
insb
jmp
lahf
cmpsb
mov
mov
pop
imul
lahf
add
aad
sub
sbb
jp
loopne
enter
ret
iret
repz
imul
ret
cltd
scas
cmpsb
mov
dec
test
sbb
xor
outsl
ds
add
sbb
test
pusha
pop
clc
movsb
in
adc
cmp
push
cs
fists
push
lret
fwait
push
addr16
push
out
and
sbb
cmp
outsb
push
mov
jp
and
xor
inc
data16
mov
sub
jmp
cltd
cwtl
mov
leave
stos
lahf
xchg
push
cli
mov
xchg
jge
jl
insb
pop
popf
xchg
andb
sbb
mov
shlb
orb
flds
fcompl
addr16
mov
add
shl
ret
std
push
inc
xlat
bound
xchg
cmp
jge
test
pop
popf
add
fs
jne
mov
mov
mov
scas
insl
cmpsl
das
sbbl
movsl
sbb
add
popw
pop
ret
sbb
jl
popf
call
xchg
ss
mov
adc
mov
pop
fdivrs
sub
sub
repz
rcrb
adc
in
mov
dec
xor
pop
test
or
aaa
adc
sbb
lcall
jnp
out
jbe
xor
cltd
inc
pop
sbb
loopne
jno
roll
in
dec
dec
loope
jne
insl
outsl
jmp
sbb
xor
int3
notl
jge
pop
adc
inc
insl
or
mov
dec
or
or
mov
jnp
pop
in
das
inc
in
cmp
inc
lods
or
and
mov
mov
sahf
cmp
sub
enter
test
gs
cmc
push
mov
dec
loop
test
aas
lds
pop
pop
cli
pop
mov
fistps
adc
xchg
stc
add
jge
test
xchg
sub
xor
fisubl
add
jecxz
ljmp
xchg
movsb
jecxz
fs
xor
jmp
add
xchg
pop
aaa
das
and
cltd
push
fnsave
mov
or
dec
mov
and
leave
mov
lret
jmp
add
or
fidivs
mov
xchg
ret
pusha
fdivs
pop
xor
xorl
push
jle
hlt
cltd
out
mov
jl
lds
inc
int3
sbb
xlat
icebp
mov
fisubrl
pop
cmp
cmpsb
inc
cwtl
ret
pop
in
shl
push
sub
xchg
lds
xor
mov
push
jp
daa
ja
cmp
sbb
sbb
cmp
adc
das
add
inc
or
test
jne
dec
scas
fimull
mov
ret
jne
sbb
out
xor
xor
push
xchg
mov
pop
jno
add
dec
xlat
lods
mov
and
xchg
adc
aaa
dec
shlb
jg
xchg
scas
mov
or
sbb
jg
int3
cmpsl
mov
push
jbe
jae
sbb
xor
imul
adc
movsb
and
adc
adc
cs
mov
clc
mov
mov
or
inc
add
or
test
dec
jns
jecxz
sbbb
sub
cmpb
movsb
sbb
pop
rolb
mov
mov
jle
xchg
cmpsl
je
sub
sbb
test
fsubrl
inc
cli
int3
out
push
out
inc
push
xchg
adc
and
jmp
mov
std
scas
repz
mov
or
or
aam
rorb
dec
dec
cmc
repz
ret
cmpsb
xchg
cwtl
inc
push
xchg
jmp
iret
add
ficoms
or
sbb
out
movb
int3
pop
data16
and
lock
and
cmc
ljmp
mov
pop
shrl
dec
adc
dec
enter
imul
sub
lcall
inc
outsb
pop
imul
aaa
pop
jp
push
ds
mov
ficoml
je
es
hlt
mov
in
dec
inc
sub
and
movsb
push
push
inc
xor
push
fildll
int
sub
jae
xor
add
push
jp
add
or
cmp
pop
loope
loop
addr16
xor
out
out
in
test
or
cmp
in
scas
je
mov
test
add
or
sub
dec
push
add
das
xchg
mov
inc
jno
dec
daa
pop
mov
or
repnz
mov
cmp
xchg
adc
push
scas
pusha
jmp
gs
cmpsl
inc
or
cmp
xor
fistps
sbbl
push
mov
adc
fs
test
aaa
mov
movsb
bound
sbb
movl
in
adc
scas
dec
pop
pop
mov
jae
rclb
jmp
mov
mov
mov
lods
pop
test
add
or
pop
xchg
ja
mov
pop
jp
syscall
push
inc
jp
aam
stos
ret
push
xchg
xchg
xorl
sub
cld
sahf
stc
data16
ret
mov
scas
stos
mov
ret
sbb
addr16
cmp
and
jae
loope
je
in
push
pop
aas
xor
pop
subb
adc
aad
and
jle
jb
ja
int3
sub
mov
arpl
xchg
mov
inc
cmpsb
repnz
je
add
pusha
sbb
jns
icebp
in
sub
test
andps
adc
stc
stos
loopne
push
push
rcl
and
insb
sbb
push
inc
pop
loopne
sbb
fcomi
pop
xor
movsb
inc
mov
jbe
ja
jns
fstpl
test
pop
jmp
mov
xor
jae
jg
stc
mov
in
rcll
and
scas
cmp
lods
add
and
jb
jmp
rorl
int
push
insl
jle
divl
dec
js
fiadds
ficoml
vzeroupper
rcl
loope
rcrl
out
gs
pop
lahf
cmp
xchg
jge
es
ficomps
popf
push
fcmovu
stc
pop
lock
lods
inc
adc
in
pop
xchg
or
ja
add
outsl
mov
jae
dec
inc
and
cli
sbb
insl
and
mov
add
xchg
aas
fidivs
hlt
mov
mov
jbe
aas
and
mov
push
xlat
aas
sbb
push
sbb
mov
fdivrl
mov
aam
cmpsl
mov
mov
dec
inc
pop
jo
jne
mov
mov
cli
dec
cmp
stc
and
mov
sub
adc
dec
dec
or
in
sub
jne
arpl
jg
scas
cmp
into
dec
out
repz
push
lcall
push
repnz
lret
sub
es
outsl
out
cmp
dec
lock
loop
xor
adc
icebp
adc
dec
aam
add
and
shr
or
aaa
cmc
fistl
std
sub
cmp
inc
imul
gs
cs
std
or
je
and
jo
jb
dec
pop
divb
and
movsl
push
das
jge
out
fwait
shl
repnz
add
sbb
outsl
mov
sbb
sub
pop
arpl
push
cmp
xor
lahf
mov
cltd
repnz
mov
mov
outsb
adc
mov
repz
mov
rclb
dec
bound
sbb
inc
mov
das
popf
stc
dec
adc
stc
jb
and
push
or
xor
adc
cmc
shl
hlt
or
shlb
cmp
sub
mov
movsl
lea
sub
mov
pop
popa
inc
out
sahf
xor
jnp
inc
xchg
jp
data16
sub
cltd
mov
popa
stc
jmp
enter
pop
pushf
stos
mov
and
xor
mov
out
xor
and
pop
cmp
rcrl
inc
xchg
faddl
or
ss
add
xor
daa
pop
push
test
ret
or
add
add
jae
add
add
addl
test
add
add
add
add
add
add
addb
add
add
mov
add
add
add
in
add
add
add
add
jne
add
add
add
stos
stos
add
ja
mov
mov
jo
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
add
loop
add
add
outsb
add
mov
add
add
add
adc
rolb
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
icebp
gs
arpl
pop
and
ja
dec
add
push
push
mov
xor
cvtdq2ps
cld
mov
push
repnz
jne
inc
lea
adc
mov
lcall
std
adc
pop
fdivrs
add
verr
add
mov
mov
xor
add
mov
orl
adc
add
add
adc
incw
call
ret
or
std
sar
inc
call
out
add
add
push
incl
adc
pop
add
mov
enter
mov
jb
add
jne
pushl
push
add
add
pop
add
loop
add
add
add
add
add
add
add
add
add
add
add
add
inc
je
inc
jns
inc
dec
addl
je
gs
jo
sbb
fs
inc
dec
inc
insl
jb
gs
insb
arpl
dec
arpl
fs
push
js
push
gs
jb
addr16
dec
gs
push
ja
push
jbe
cs
arpl
js
xor
add
add
addb
add
add
add
lock
add
add
add
repnz
add
add
add
pusha
bound
add
add
add
add
add
add
add
jae
or
pop
adc
lock
pop
les
mov
cli
stos
sub
bt
mov
arpl
cmp
sbb
xchg
dec
orl
adc
in
mov
adc
and
sub
inc
clc
call
adcl
loope
in
sbb
cld
lahf
sub
adc
mov
pop
push
fistpl
movsl
adc
inc
loopne
lahf
push
jnp
les
fnstenv
pop
inc
sub
xor
movsb
mov
fsubrl
xor
dec
cmpsl
xor
or
sbb
cmpsl
mov
ss
mov
mov
jge
icebp
push
int3
into
mov
jne
lcall
cli
out
out
ss
jb
cli
pop
out
jmp
hlt
ds
and
pop
movsl
and
pushl
sub
sub
mov
cmpsb
nop
add
dec
xchg
jmp
icebp
leave
adc
rorl
dec
sbbb
ja
mov
sbb
add
sbb
loop
movsb
imul
stc
jno
and
out
movsb
xor
notb
mov
popa
xchg
and
es
pusha
and
ret
cmp
xor
lods
repz
xor
lea
pop
aam
push
push
fildl
mov
or
iret
sbb
jae
scas
add
rolb
mov
loop
lods
stc
and
outsl
daa
rorb
adc
pop
jns
inc
arpl
pop
inc
cmp
pop
cld
xchg
std
lcall
cmpl
sahf
jg
aad
jmp
mov
xor
cmp
sub
mov
outsb
call
pop
lock
and
lods
bound
adc
rclb
adc
fcmovbe
fcomps
dec
test
xchg
arpl
movsb
mov
xor
push
mov
dec
mov
sbb
stos
add
or
xchg
or
sbb
adc
fidivrs
jge
repz
jmp
mov
add
cmp
cld
inc
adc
repz
mov
in
mov
mov
cmp
pop
in
lahf
lds
ror
pop
cmp
push
jl
and
movsl
push
sub
aad
insl
call
daa
xchg
add
push
imul
push
inc
aam
ljmp
cmpsb
shlb
mov
stos
jl
push
inc
xchg
mov
lret
inc
test
sbb
pop
jne
int3
xor
mov
or
ficomps
lds
popf
jno
push
jb
fisubl
xchg
hlt
sti
mov
cmc
jbe
nop
pusha
mov
sub
ret
xchg
cs
xchg
push
dec
sub
dec
inc
das
xchg
imul
popf
aam
xor
frstor
xchg
cmc
ret
push
dec
adc
int
lds
iret
out
enter
rcl
call
or
xor
adc
pusha
dec
xor
or
aaa
movsb
and
or
add
in
dec
sub
lret
pop
icebp
add
push
movsl
ret
test
test
adc
jl
pop
xlat
or
mov
mov
test
cwtl
inc
iret
jmp
mov
daa
inc
mov
jo
inc
rclb
std
aam
mov
add
rolb
dec
movsb
lcall
popa
ret
insb
sbb
mov
aas
test
add
imull
loop
rorl
mov
or
mov
js
add
outsl
jge
fstpt
and
push
add
sarb
test
xorps
add
int3
shl
push
jae
icebp
je
inc
rclb
nop
inc
cwtl
push
add
add
sbb
xchg
push
insb
pop
lret
outsb
add
push
test
ljmp
test
add
repnz
xchg
in
sbb
cmp
pop
sub
popf
je
and
add
pop
pushl
in
outsl
divb
bound
dec
clc
out
or
in
addr16
idivb
je
inc
xor
push
fdivrs
lods
push
insl
loop
bound
sbb
push
sub
sahf
rcll
lds
stos
les
lahf
xchg
inc
arpl
xor
fbld
pushf
in
test
jb
loope
in
push
push
xor
jge
ret
iret
add
gs
sub
ret
cwtl
int
xchg
je
mov
push
jne
ficompl
ret
fcompl
dec
or
popa
dec
das
dec
fcmovbe
insb
pop
pop
loop
push
jl
xor
cmc
rolb
js
jno
dec
rcrb
lds
cmp
sbbb
mov
movl
add
fdivs
cli
arpl
sbb
into
xor
inc
jo
cmc
jg
xchg
rol
loopne
xor
jnp
mov
lods
aam
fwait
jmp
int3
adc
jbe
jmp
rcrb
jge
cmp
test
rcrb
bound
jl
mov
mov
mov
xchg
cmp
and
mov
loop
pop
jnp
adc
push
or
cmp
mov
in
cmp
sbb
jbe
cmc
xchg
push
outsl
cmp
sbb
jecxz
aam
cmpsb
pop
lock
jmp
xor
jns
leave
inc
js
sbbb
out
inc
inc
sbb
dec
sub
add
mov
pop
pop
stc
push
push
mov
out
fxch
push
mov
shlb
arpl
pop
ds
jmp
arpl
out
das
sub
mov
mov
sbb
ret
mov
lret
addr16
test
shr
push
in
mull
in
mov
in
popf
push
jl
adcl
in
cmp
hlt
decb
pusha
mov
jnp
add
jle
ljmp
out
aad
out
rcll
add
fdivp
mov
sbb
mov
data16
mov
sbbb
adc
cli
sub
add
cmp
mov
rorl
or
aam
xor
cmp
mov
jbe
cld
out
xor
xor
dec
mov
mov
inc
mov
xor
mov
inc
popf
pop
mov
imul
pusha
push
pop
bound
dec
xchg
fstps
repnz
out
cmp
dec
sbb
sti
push
mov
or
xor
cmp
mov
or
mov
adc
out
jb
push
inc
inc
inc
dec
push
ljmp
push
jge
xchg
addb
scas
loop
mov
cmp
repz
test
xor
xchg
adc
mov
aas
pop
je
sub
in
inc
push
dec
jns
lods
jg
mov
es
insb
xchg
xor
inc
jno
mov
sti
repnz
mov
fdivrl
sbb
shlb
xchg
add
dec
and
ficompl
int3
or
icebp
xlat
mov
scas
inc
test
xor
repz
and
lods
bound
andl
enter
in
div
pop
cmpsl
fwait
push
adc
add
out
stc
das
mov
sbbl
js
loope
inc
pop
mov
test
leave
shlb
int
cmp
add
push
pop
aam
mov
lods
mov
sub
sbb
pop
mov
lret
or
xor
adc
rclb
rolb
pop
push
and
int3
jge
inc
mov
cmpsb
jne
lds
lock
lea
outsb
cmp
ja
xchg
push
inc
outsl
fisttps
adc
aam
push
mov
dec
lods
ja
int3
sahf
in
out
pop
mov
inc
pop
adc
pop
jle
dec
ss
xlat
ds
sarl
push
int
cltd
pop
dec
mov
add
mov
rcrb
mov
push
push
lcall
dec
mov
cmp
xchg
into
mov
das
push
push
std
imul
fldl
outsb
xor
push
jg
mov
arpl
repz
mov
xor
in
shrb
jl
mov
mov
pop
lret
jbe
lret
ss
jmp
push
lret
mov
mov
fnstsw
push
les
inc
pop
mov
pop
xchg
repz
add
mov
pop
adc
xchg
cmp
dec
in
adc
mov
jne
adc
sahf
pop
ror
push
jmp
lods
xchg
mov
inc
push
in
add
fwait
cmp
xchg
pop
dec
cmp
xchg
lea
aaa
push
xor
mov
lret
aam
lcall
dec
sub
shr
cmpsb
xchg
outsb
fwait
mov
hlt
std
fidivs
lcall
add
jae
xchg
icebp
xor
iret
ds
adcb
mov
inc
cmpsb
ljmp
sub
sahf
inc
das
fbld
cmp
add
mulps
loop
jp
push
mov
sarb
inc
out
push
cmp
scas
xchg
cmp
adcb
sbb
adc
and
and
mulb
int3
cli
das
test
pop
and
gs
insl
xlat
xor
adcl
sub
mov
jge
addr16
in
inc
push
subl
js
sbb
iret
lods
cld
dec
or
jl
pop
push
pop
imul
pop
pop
push
jecxz
or
jmp
cmp
or
scas
or
pop
mov
jb
push
test
cltd
inc
imul
sub
mov
push
ret
daa
insb
das
arpl
add
sbb
call
stc
or
sbb
inc
xlat
pushl
movsl
stos
gs
xchg
test
test
push
pop
inc
test
xor
mov
sbb
or
jbe
std
fwait
ret
xchg
sbb
adc
push
mov
gs
jle
inc
out
jae
xchg
pop
das
ret
add
cmpsl
push
gs
adc
xchg
sti
and
sub
jle
sub
insl
cmpsb
repnz
xor
jne
xchg
sahf
cmp
mov
jnp
xor
lea
dec
lds
movsl
push
clc
jp
xlat
js
mov
out
and
clc
cli
jne
sbb
xchg
dec
pop
and
jbe
nop
sti
push
mov
adc
mov
jo
and
pushf
cmpsl
xlat
sahf
mov
sbb
iret
leave
jge
xlat
cmp
sbb
int
test
push
daa
aad
shlb
negb
xchg
repnz
cmp
lods
or
and
mov
enter
add
jl
cld
out
adcl
out
popl
cmc
test
xor
xor
or
lahf
cmp
push
dec
int
jbe
std
mov
mov
ds
adc
shlb
sbb
add
xchg
fcmovu
popf
or
pushf
cmp
mov
sbb
repz
loop
sub
enter
in
aaa
pop
sbbb
jae
mov
test
jle
sbb
les
pop
bound
rcl
xor
jl
inc
mov
dec
shl
cmp
add
leave
mov
dec
shr
jge
outsb
xor
jbe
enter
inc
enter
mov
js
test
inc
into
cmp
mov
mov
cmp
xchg
push
enter
or
add
pop
mov
lret
lods
pop
icebp
dec
movsb
jge
cltd
xor
adc
push
and
ret
je
sub
aam
xchg
push
aam
inc
jmp
dec
xchg
lods
ror
add
lret
in
push
xchg
daa
inc
cwtl
dec
shr
rcrl
push
sbb
mov
inc
rcrl
std
push
jne
loopne
push
sahf
fs
add
xchg
mov
jbe
pusha
iret
mov
jo
adc
gs
and
daa
dec
and
mov
in
mov
dec
xchg
clc
adc
sub
xchg
sub
les
lahf
push
or
inc
filds
pop
pop
xor
mov
and
xlat
or
push
mov
cmp
repz
xchg
xor
mov
push
aas
dec
sbb
jae
fadd
mov
mov
lcall
push
daa
dec
hlt
push
les
xchg
sti
add
loope
ja
fisubrs
jp
rcr
jns
dec
xchg
and
jp
cld
jmp
loope
cmpsb
movsb
stos
std
xor
arpl
adc
push
sti
cmc
mov
mov
mull
mov
test
push
mov
jb
sub
xor
sahf
fsts
imul
jne
jmp
mov
aad
loop
xchg
scas
iret
mov
sbb
sbb
mov
or
xor
pop
xor
movsl
or
loopne
dec
fstpl
push
bt
scas
push
adc
xchg
addr16
imul
push
cmpsl
aam
stos
mov
adc
sbb
outsb
mov
icebp
rcrb
push
addr16
aas
lock
clc
lock
adcb
push
out
movsl
sahf
xor
cmp
mov
sub
jo
in
loopne
fnstenv
mov
aad
jp
imul
in
xor
push
test
repnz
inc
cmp
and
dec
lds
mov
aaa
push
sbb
fwait
jmp
mov
jle
adc
pop
pop
aad
lret
xlat
rorl
call
cmp
stos
adc
addb
test
mov
dec
into
adc
mov
negb
mov
jp
std
adc
filds
push
lods
shl
pop
xchg
fs
dec
enter
xchg
sub
xor
out
inc
lock
rorb
adc
push
addr16
aam
xor
dec
js
pusha
int3
push
dec
popf
pop
aad
jo
sub
fisttpl
xchg
xchg
or
pop
mov
inc
lods
add
gs
dec
push
loopne
mov
cmp
push
lds
sbb
icebp
push
mulb
xchg
stos
xor
add
jg
push
xchg
inc
mov
loop
jl
xchg
cmp
and
mov
cmp
out
imul
repnz
stos
ret
inc
fnstenv
cmpsb
mov
mov
or
xchg
inc
dec
mov
dec
mov
je
pop
call
jns
adc
sbb
xor
mov
or
enter
sarl
xchg
and
lahf
mov
inc
xchg
xor
addr16
aad
cmp
xchg
push
or
lret
push
out
fs
std
sbb
mov
stc
xchg
add
push
add
push
popa
sub
dec
and
or
lods
lods
fprem1
ret
clc
xchg
adc
mov
test
movsb
jmp
dec
xor
sbb
jg
insb
mov
clc
inc
scas
aas
cli
mov
add
ljmp
xchg
in
icebp
stos
je
lods
add
inc
mov
pop
dec
aam
lret
out
mov
cmp
jle
ds
repz
mov
lret
sbb
cmp
add
inc
adc
outsl
dec
add
fwait
cs
les
dec
sub
push
out
movsb
popa
enter
out
pusha
jns
sahf
push
sub
nop
mov
imul
sub
or
dec
mov
pop
mov
mov
scas
je
mov
daa
dec
xor
fists
push
lret
inc
addr16
add
fidivs
xchg
pop
loope
mov
add
cmp
test
add
or
fcom
imul
ds
mov
add
cmp
mov
jo
pop
pop
and
aaa
xor
popa
testb
or
testl
sub
sub
push
adc
in
jnp
jbe
jmp
adc
inc
ret
fadd
movsb
repz
push
push
mov
sub
or
mov
ud2
dec
pop
jl
jge
repz
xlat
out
cmp
mov
outsl
lock
xor
repz
lods
in
add
add
inc
add
xor
dec
cmpsb
inc
scas
pop
fistpl
sub
inc
in
mov
mov
in
mov
out
cmp
jle
inc
call
gs
test
xor
lea
jl
or
cmpsl
dec
adcl
sbb
or
cmpsb
or
pop
shl
xchg
or
mov
imul
mov
mov
lds
mov
data16
pushl
stos
shll
ret
mov
ds
jecxz
mov
outsl
out
filds
inc
mov
xor
sub
and
inc
test
jl
mov
mov
xchg
ljmp
or
jg
shll
lret
psubb
test
jecxz
fisubrl
and
jo
sbb
push
jp
fs
adcl
jnp
cmp
lea
or
push
insl
jp
mov
imul
mov
ljmp
adc
jno
add
pop
scas
cmp
xchg
repz
aas
movsl
mov
cmp
mov
xor
pop
repz
cmp
cmpsl
cmc
movsl
mov
arpl
and
jmp
fadds
xchg
and
fbld
mov
leave
jno
rorb
sti
push
jl
shlb
enter
popa
mov
sbb
fisttpl
movsb
imulb
or
xchg
cmp
xor
fdivs
cmp
ss
or
imul
mov
ret
xchg
mov
leave
dec
nop
jno
bswap
add
sbb
mov
fadds
xchg
icebp
pop
out
inc
das
xchg
ret
xchg
scas
push
push
lods
loop
mov
push
or
dec
or
cmp
je
xor
iret
test
push
daa
jecxz
in
jb
sub
mov
pop
xor
sub
cmpl
cmp
push
jno
sbb
dec
fistpll
mov
fsubl
fistl
mov
arpl
cld
jno
fs
mov
jmp
sub
push
ret
daa
outsl
pop
push
push
test
dec
dec
push
sbbb
fcoms
mov
les
jb
mov
ljmp
and
ret
mov
popa
sub
sbb
xchg
or
xlat
and
out
lods
push
ja
lahf
jmp
iret
fwait
push
pushf
inc
adc
or
add
or
push
dec
xchg
lds
and
xor
scas
clc
and
clc
das
flds
sahf
xor
lret
mov
or
jae
sub
add
xor
lahf
sbb
aam
cmpsb
inc
jne
je
aam
xor
imul
and
inc
xor
mov
repnz
sbb
sarb
or
stos
bswap
adc
mov
xchg
mov
mov
fimuls
clc
add
add
add
mov
add
add
nop
adc
addb
add
add
add
lock
add
add
add
repnz
add
add
add
pusha
bound
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
inc
add
or
add
add
add
add
add
add
cmpsl
add
add
add
and
add
add
pusha
add
push
add
add
add
add
add
add
xchg
add
add
add
add
js
add
outsl
outsl
pop
jb
add
outsl
pop
add
push
push
movl
add
sahf
push
or
movl
ret
incl
sub
xchg
xchg
add
lea
adc
add
push
out
cld
adc
testl
mov
in
push
std
fdivrs
rorb
add
add
leave
pop
and
incl
add
ljmp
insb
xor
push
decl
loopne
decl
negb
adc
cmc
cld
push
add
lock
add
call
data16
stc
pushl
repz
lea
test
push
add
push
movl
add
add
add
pop
add
add
add
add
aaa
sbb
sbb
sbb
lods
add
add
add
imul
imul
add
gs
je
jg
inc
add
jae
add
outsl
add
outsl
add
insb
dec
add
push
add
gs
popa
inc
outsl
add
imul
push
adc
push
insb
push
add
add
add
add
in
add
add
add
add
add
add
add
add
lds
add
jae
pop
int3
bound
loop
cmpsb
adc
andl
rcrl
cmp
outsb
mov
cs
addl
pop
inc
lods
bound
ret
sub
sbb
push
fisttpl
jp
jo
mov
movsl
outsl
add
repz
ja
arpl
inc
repz
push
ret
sub
or
jbe
and
jbe
addb
imulb
out
inc
movsb
leave
mov
roll
inc
inc
cwtl
mov
cmp
getsec
mov
aam
mov
pop
in
jle
fldenv
sub
pop
xor
out
gs
inc
ss
or
pop
iret
fldenv
push
test
outsl
ret
mov
nop
xchg
jo
mov
shlb
pop
aas
push
add
xor
cwtl
out
xor
cmpsl
and
add
add
mov
sub
clc
gs
adc
push
mov
fsubr
lea
cmc
outsb
pop
adc
lea
cmp
inc
mov
inc
cs
cli
pusha
adc
mov
push
orb
fidivrl
mov
fdivrs
mov
std
testb
sti
push
imul
sbb
hlt
mov
xor
data16
inc
sub
xor
test
and
cmp
jne
cmp
inc
mov
mov
mov
rolb
scas
jae
pop
and
adc
imul
sub
jbe
mov
pusha
inc
cmp
addb
sti
or
ljmp
into
stos
out
jbe
gs
jnp
pop
andb
inc
enter
add
pop
ret
sbb
popa
push
or
into
fs
clc
movsl
stc
fisubrl
push
jb
xchg
dec
or
mov
rcl
xchg
lret
lea
mov
adc
loope
repnz
inc
adc
ja
shlb
dec
cmp
xchg
cmp
mov
dec
mov
mov
mov
repnz
xchg
fdivrs
lcall
mov
pushf
push
in
sbbl
mov
inc
push
xor
cs
lock
dec
inc
fimuls
jno
cmp
lret
xchg
ffreep
mov
push
xchg
pop
pop
lods
out
dec
pusha
push
iret
push
dec
pushf
hlt
inc
sbb
je
jb
ja
jle
inc
inc
mov
fisubs
insb
pop
mov
mov
and
mov
or
je
pop
jp
test
lock
repnz
xchg
inc
add
and
iret
js
jne
push
scas
js
xlat
push
adc
pop
mov
cmc
pop
mov
imul
pop
or
push
arpl
add
mov
jecxz
call
fistpl
in
popf
sbb
in
mov
addb
lock
add
and
inc
inc
mov
cmc
jl
dec
add
xchg
mov
push
and
mov
mov
nop
fs
pop
pop
xchg
cwtl
scas
adc
add
inc
pushf
push
pushf
cmpsb
jns
sbb
xchg
or
mov
ljmp
in
insl
rcrb
testb
sub
pop
sbb
das
mov
pop
cmp
sbb
lcall
stos
dec
popf
inc
out
call
and
add
stc
into
and
mov
cltd
rorl
test
sbb
lret
test
cmp
push
xchg
inc
fwait
adc
jnp
push
outsb
mov
or
in
dec
or
out
adc
into
fcom
jnp,pn
dec
and
push
arpl
test
repnz
adc
enter
jne
mov
sub
xor
sub
rcrb
in
add
or
or
cmpsl
push
adc
or
mov
dec
or
jl
add
rorl
jb
loop
pop
mov
xchg
sub
or
dec
push
adc
sbb
and
adc
sbb
scas
mov
loop
adc
xchg
movl
cltd
in
sub
lods
mov
sbb
jecxz
pop
push
inc
lsl
mov
mov
cmpsb
adc
hlt
fbld
sbb
icebp
mov
cmc
mov
test
out
daa
push
sbb
fists
orb
fucom
and
sub
mov
cmp
cmp
mov
dec
mov
cmp
out
aaa
jnp
jno
push
out
fldl
pop
push
hlt
jmp
test
into
stc
js
gs
inc
add
and
pushf
lcall
xlat
mov
jge
les
sub
and
stos
cmpsl
je
push
push
sub
test
and
inc
test
dec
ficoml
pop
xchg
xchg
jmp
lods
push
bound
cltd
fwait
rol
leave
push
xchg
pop
jns
gs
lods
cmpsl
popa
jae
and
icebp
test
xchg
cs
cmc
and
adc
stos
out
fs
jecxz
scas
in
adc
dec
test
inc
mov
push
xor
rcrl
insb
popf
mov
popf
popf
jmp
dec
mov
in
jns
shl
aas
lahf
mov
aaa
xchg
pop
jl
xor
mov
pop
push
inc
sahf
divl
scas
outsb
out
les
and
mov
jl
cmp
push
mov
sbb
mov
lods
outsl
sub
xor
sti
jb
gs
bound
gs
cmp
fisttps
js
cmc
inc
hlt
mov
in
jg
or
pop
sub
jl
test
stc
dec
xchg
lret
sbb
movsl
in
push
in
pop
nop
ja
or
push
popf
add
cmp
fidivrs
sti
aad
pop
iret
in
pop
inc
cmc
sbb
jb
ret
movsb
cmp
xchg
xor
lock
pop
sub
insl
mov
movsl
cltd
add
fs
cmp
ss
mov
test
pop
pop
mov
fcompl
jecxz
fsubrs
adc
test
lods
mov
mov
std
fisttpl
xor
cmp
outsl
and
push
pop
add
xchg
xor
jno
jae
aam
cltd
add
push
div
sbb
outsl
lea
inc
imul
jp
stos
and
jp
out
push
push
cmp
sbb
loope
inc
pusha
lods
int
notb
push
add
add
inc
mov
mov
push
ret
lcall
lret
je
jb
cltd
out
cld
out
std
bound
aaa
or
sub
in
mov
rcr
push
cld
lds
addr16
adc
add
jno
cli
rorb
xor
add
fs
dec
sbb
aaa
dec
jno
jo
sbb
or
mov
cmp
and
clc
adc
sbbl
fistpll
lds
fdivl
jo
jge
sbb
dec
xchg
or
pop
repz
dec
mov
mov
and
sbb
sub
sarb
in
xchg
lock
mov
mov
pushf
sub
xor
lds
xor
scas
mov
iret
rorl
xchg
pop
inc
cpuid
pushf
pusha
cmp
fstpl
add
cmp
pushf
stc
pop
lret
das
mov
jae
and
inc
mov
or
andb
mov
xor
jnp
mov
pop
cli
fstp
sub
stos
test
dec
xor
or
push
cwtl
xor
in
xor
inc
in
pop
mov
cmc
test
sti
lcall
xchg
cltd
add
shll
sar
push
add
sbb
pop
mov
pop
mov
movsl
mov
xchg
sub
cmp
cmp
out
and
push
cmpsl
jmp
fwait
lcall
sti
imul
xchg
aas
pop
dec
pop
aam
xor
jge
add
push
mov
sub
loope
jo
test
push
call
dec
rcll
pop
lahf
xor
xchg
mov
xor
or
ret
mov
in
cmp
sbb
xchg
xchg
stos
popa
mov
xor
pop
aas
shr
mov
adc
clc
mov
xchg
or
push
outsb
inc
xchg
movsl
push
push
flds
push
in
pop
jg
sub
aaa
roll
inc
cmpsl
pop
push
push
mov
adcl
add
adcb
pop
daa
cmpsl
lds
daa
fxch
sbb
lcall
sbb
pop
jno
and
out
xor
cwtl
loop
mov
pop
sarl
mov
rclb
add
pop
scas
in
push
sti
adc
enter
xlat
xchg
adc
and
pusha
xchg
cld
inc
jb
gs
call
jae
loope
in
inc
mov
cmpsl
xor
cs
test
xor
xchg
fcoml
and
add
fdivrl
push
pop
push
jp
bound
xchg
dec
ss
add
in
es
xchg
cltd
mov
scas
xor
lret
popa
ss
xorl
ficompl
lds
cmpsl
pushfw
cltd
outsl
dec
dec
std
in
xchg
aad
aas
mov
jae
jp
movl
and
fldt
out
xchg
adc
xchg
sub
lcall
xchg
lods
jmp
jle
jp
adc
jmp
push
mov
jle
jne
dec
mov
sub
mov
push
pushf
imul
lods
dec
aad
lock
fnstsw
adcb
sar
insl
jae
pop
jae
mov
mov
jo
mov
add
jecxz
mov
adc
xchg
ror
rcr
sbb
insb
add
add
pop
sahf
in
xor
and
pop
cmp
enter
ret
cmpsb
sbb
mov
jae
sub
mov
jp
mov
rolb
jno
pop
into
mov
cmp
imul
mov
sti
cmp
dec
or
stos
fwait
cmpb
cli
out
test
adc
daa
dec
aas
mov
cmc
add
or
mov
loopne
mov
jl
and
sub
fbstp
faddl
mov
push
cmp
pop
lock
ds
fdivr
xchg
and
lock
cmpsl
adc
or
rcrb
dec
dec
mov
iret
addr16
add
mov
add
xor
lea
cmp
sti
fsts
mov
lret
cltd
mov
xlat
test
rorb
jmp
popa
int3
out
mov
clc
mov
jl,pn
add
sub
in
xchg
or
stc
mov
xchg
and
aaa
es
rolb
outsb
loopne
rol
xchg
pop
sbb
sbb
push
xlat
loope
outsl
lock
sbb
or
cmc
cmpsb
push
fidivs
push
loopne
sbb
xchg
lret
or
popf
testl
xchg
mull
cmp
pop
jmp
push
insl
lea
test
mov
push
xor
xchg
jl
sarw
idivb
mov
cmp
pop
inc
push
jne
dec
cmc
mov
pop
xchg
mov
icebp
imul
stos
sarb
add
repnz
dec
repz
push
and
insb
ret
push
ret
lret
lret
pop
mov
shl
in
lods
jmp
das
and
mov
mov
mov
push
les
and
xor
insb
add
pop
mov
imul
in
hlt
sub
aaa
dec
scas
sti
icebp
jns
xchg
scas
rcl
xlat
cmc
mov
rol
sbb
inc
aas
aad
or
mov
ror
idivl
pushf
mov
fmuls
cmp
and
std
lret
fwait
cld
ja
mov
inc
mov
out
es
jp
int
loope
fisubs
jmp
aam
fisttpll
hlt
push
dec
sbb
fdivs
sahf
pop
stos
and
adc
ret
jns
push
out
movsb
dec
test
mov
cmp
jnp
mov
fadd
or
lahf
mov
adc
pop
lret
sbb
fimull
adc
mov
ljmp
jne
popf
imul
mov
push
mov
cmc
mov
mov
cltd
out
pop
cmovle
xor
addr16
mov
fcomps
jae
fstps
jo
imul
jmp
push
lock
aam
sbb
test
scas
adc
xchg
das
or
fcmovnb
leave
xlat
xchg
mov
pop
icebp
xor
and
and
sbb
mov
arpl
pop
repnz
repnz
xor
jmp
jno
xchg
sbbl
sub
and
jbe
inc
or
pop
add
sub
adc
push
inc
fidivrs
divl
adc
jae
into
icebp
rcl
and
in
bound
in
movsb
push
stc
imul
call
nop
out
stos
test
popa
xchg
dec
daa
out
xorb
sbb
movb
shl
in
pop
dec
sbb
cmp
in
or
fwait
jecxz
cltd
stos
les
aaa
icebp
insl
arpl
xor
ja
jns
add
lds
inc
jb
cld
xor
test
push
sbb
or
inc
enter
push
lahf
mov
lock
xchg
mov
aaa
mov
inc
mov
cmp
popa
iret
cli
adc
gs
lods
pop
add
sbb
es
push
adc
mov
cmp
cwtl
movsl
sbb
push
rorl
adc
insl
jle
lret
mov
cmp
call
les
add
in
enter
jns
repz
cmpsb
scas
dec
mov
pop
lret
or
sbb
mov
push
out
fmuls
fcomps
repz
mov
decb
cmc
jg
and
insl
xchg
push
bnd
arpl
stos
shrl
add
jnp
daa
sbb
mov
stos
xor
lret
fimuls
sti
jb
jle
dec
push
push
incb
inc
dec
enter
fsubrs
mov
movsl
adc
xor
pop
lcall
adc
sbb
mov
sbb
jnp
mov
mov
pop
dec
fldl
lock
ja
shlb
subb
aad
mov
mov
adc
dec
pop
cmpb
scas
sbb
ja
fwait
cwtl
bound
cmc
ret
mov
mov
xor
ss
hlt
ret
jbe
hlt
jg
or
inc
in
push
cwtl
pop
nop
cmp
mov
scas
loop
int
dec
push
jp
pop
mov
idivb
mov
fsubl
dec
or
adc
jmp
shlb
jle
add
sahf
test
cmp
and
add
dec
or
out
das
lock
loope
fcmovne
out
in
jns
push
int
sub
aaa
xchg
aas
push
and
stos
inc
es
sbb
adcw
cmp
stos
pop
jl
repz
aad
and
aaa
and
mov
adc
xlat
sub
inc
pop
mov
mov
iret
int
rclb
push
ror
push
ret
or
mov
repz
std
xabort
gs
mov
lcall
lcall
aas
jge
push
push
sbb
clc
jnp
and
mov
ss
loopne
icebp
mov
stos
testb
mov
mov
rcll
jbe
jno
fs
es
or
adc
lahf
mov
jno
mov
idiv
adc
pusha
inc
sub
outsb
cli
sub
sbb
xchg
jae
outsl
invd
fsubl
cmp
sub
imul
out
clc
dec
pop
or
and
sbb
jmp
pop
jae
inc
cwtl
leave
mov
leave
jecxz
ja
stos
rorb
repz
into
xchg
mov
faddl
or
mov
cmp
xor
mov
cmp
outsl
inc
push
outsl
mov
sbb
cmp
fadd
ret
add
push
nop
popf
movsb
mov
pop
negl
shr
adc
mov
imul
mov
adc
jae
testb
add
push
pop
icebp
and
leave
shrb
xchg
and
jmp
jl
mov
ljmp
in
rolb
push
fnstenv
mov
fcmovnbe
inc
lret
push
adc
or
jno
or
outsb
jg
in
push
fisubs
fs
mov
push
mov
loopne
sbb
and
adc
out
and
mov
stos
and
dec
mov
in
push
out
mov
xor
lock
fstl
insb
cltd
aaa
fcompl
jmp
adc
inc
mov
stos
int
pop
fisubl
jg
sbbl
add
add
mov
xchg
mov
dec
lods
dec
pop
lahf
aaa
xor
mov
ds
out
repnz
cmpsl
or
out
mov
enter
xchg
pop
mov
pusha
test
xchg
pop
sub
das
mov
jae
fldl
jle
rcrl
lcall
mov
sub
inc
cwtl
ror
adcl
add
mov
hlt
jo
inc
loope
test
add
stos
faddl
xchg
out
inc
pop
test
mov
mov
xchg
shl
mov
jle
test
fwait
and
push
sub
scas
ss
daa
mov
dec
xor
add
push
popa
sbbl
dec
je
sbb
cmpl
insb
xor
sub
imul
mov
mov
cld
dec
sub
xlat
scas
clc
orl
fucomi
mov
pop
lret
dec
add
pop
aam
fisttps
mov
out
xor
add
sbb
push
sub
nop
fmuls
add
xchg
ud1
mov
jno
xor
mov
outsl
dec
out
cmp
mov
mov
cwtl
in
test
scas
cmc
rcll
add
outsb
dec
or
out
sbb
dec
cli
mov
mov
das
mov
cmc
inc
mov
xchg
aad
adc
mov
and
add
sub
xchg
js
push
mov
mov
cmp
push
lahf
ja
adc
jns
jle
imul
stos
imul
xchg
mov
es
xchg
xchg
cmp
sub
div
dec
daa
push
jne
mov
cmp
and
add
mov
jns
stos
sti
mov
jge
int3
inc
xlat
push
cmp
sbb
add
sub
hlt
into
movsb
add
mov
jl
js
add
push
xor
jnp
or
add
add
add
add
add
add
ja
add
add
add
add
add
add
add
in
add
add
add
adcb
add
add
addb
add
add
lds
add
add
add
add
add
add
aaa
add
add
add
lea
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
inc
add
add
mov
add
xor
rclb
add
add
and
add
add
add
or
add
add
jb
add
add
add
insb
add
add
add
add
add
add
add
add
add
jae
jne,pn
dec
arpl
outsl
dec
dec
add
xor
inc
enter
jecxz
out
and
fimull
add
mov
adc
mov
int3
mov
or
repz
idiv
idiv
decb
test
jmp
sti
add
clc
clc
pushf
mov
xor
pop
pop
mov
sub
out
pop
add
push
ljmp
incl
movsl
mov
inc
pop
add
jbe
adcl
je
test
adc
es
cmp
test
test
cmp
or
or
push
adc
add
loopne
adc
je
clc
loopne
clc
mov
movsl
incl
mov
push
inc
cmp
add
add
push
adc
add
add
add
add
add
add
rcrb
add
add
add
imul
add
gs
inc
pusha
inc
outsl
add
arpl
gs
inc
outsl
push
insb
add
imul
insb
dec
add
gs
addb
add
push
add
nop
je
add
xor
inc
add
add
add
add
loopne
add
add
add
add
jo
add
add
add
add
add
add
rolb
add
add
movsl
add
add
add
movsl
adc
mov
imul
mov
icebp
insl
or
jge
pop
mov
xor
push
aaa
or
mov
cmp
or
jmp
add
dec
fidivl
loopne
fst
into
rol
inc
into
lds
cltd
jae
js
sub
mov
fwait
int
sub
xor
push
into
xchg
or
cmp
cmpsl
jge
push
mov
dec
sahf
xchg
push
or
imul
lret
out
xchg
xor
andl
testb
xchg
out
jecxz
jo
cmp
rolb
fidivs
lret
xchg
movswl
mov
push
lretw
xchg
clc
push
adc
sbb
adc
pusha
or
or
jns
movsb
or
sub
test
mov
mov
lea
push
call
lret
std
stos
loop
pop
or
popa
xchg
dec
push
pop
jnp
adc
cmp
jnp
jge
mov
in
cmp
lahf
mov
add
bnd
sub
jp
sub
adc
cmp
push
fcompl
fcomps
jle
mov
add
jle
shll
add
dec
xorl
or
aaa
or
mov
or
rorl
fsub
lea
sub
faddl
inc
sar
adc
mov
and
or
jp
aas
scas
sbb
data16
mov
mov
mov
mov
or
xchg
fs
inc
bound
movl
movsb
in
xchg
jno
jno
mov
jo
rolb
jmp
add
xchg
push
sarb
and
mov
jmp
mov
adc
rorb
loop
mov
xchg
or
xlat
fxch
fadds
flds
push
loopne
xchg
mov
jmp
insb
mov
orl
movsb
cmc
xor
sar
test
jmp
imul
or
movsb
sbb
sbb
dec
pop
jl
jmp
fldt
sub
out
dec
push
xchg
in
inc
in
imul
negl
movsb
jno
fwait
ja
add
dec
add
cmp
xor
test
push
jb
mov
stos
xchg
lods
inc
or
fwait
arpl
aad
adc
mov
fwait
lods
cmpsb
pop
popf
xchg
int
push
xchg
aam
lds
mov
xor
std
jnp
into
imul
inc
push
aam
cmp
jecxz,pn
xor
adc
inc
pop
cld
mov
das
scas
lret
cs
repz
mov
mov
mov
call
mov
or
lret
pop
iret
leave
movsl
mov
in
pop
cmpsl
clc
filds
push
rorl
cli
and
insb
mov
aam
add
mov
pop
in
add
xor
faddl
data16
mov
pushf
and
push
jno
push
mov
mov
or
mull
neg
adc
push
mov
mov
imul
popa
lods
sbb
ja
daa
ret
mov
push
insl
inc
sbb
outsb
leave
sub
xchg
cwtl
jle
mov
add
mov
or
and
loope
scas
aaa
mov
ja
sub
lret
sbb
dec
sub
aad
mov
rorb
cmp
lcall
mov
mov
or
sbb
and
or
xor
notb
sbb
cmp
pop
fnsetpm(287
lods
xor
xchg
cli
pushl
ljmp
idiv
cmp
dec
lock
adc
cmpsl
ficoml
jae
add
in
lahf
ljmp
mov
pop
mov
jns
pop
cmp
mov
or
nop
movsl
stc
jmp
cli
sub
subb
sub
xlat
push
jmp
adc
jge
inc
bound
cld
ljmp
shrl
stos
add
sub
push
aas
das
inc
repnz
sub
inc
add
mov
lds
adc
pusha
inc
xchg
jae
loop
sub
loopne
or
push
lret
lcall
gs
mov
mov
dec
and
shl
jno
or
fists
sysret
cmpsb
push
cmp
fnstcw
inc
add
push
fnstcw
adc
mov
pusha
adc
mov
sbb
daa
inc
jg
inc
out
cli
mov
cmpsl
dec
fiaddl
xchg
out
les
ljmp
cli
es
mov
sbb
lock
and
jae
sub
enter
nop
loope
ror
insb
xor
ja
stos
bound
xchg
into
adc
loopne
ret
pop
popf
cmpsl
cs
fs
pusha
and
aas
and
icebp
cmpsb
xchg
mov
cmp
cmp
sub
pop
push
push
imul
fwait
aas
dec
insl
outsl
xchg
dec
dec
lock
jge
inc
add
gs
testb
lock
or
or
mov
push
leave
adc
pop
les
jg
ljmp
stos
xchg
xchg
scas
mov
cmpsb
inc
testl
jl
sbb
xlat
cmpsl
dec
inc
in
gs
dec
mov
aam
test
jle
mov
movsl
jb
aaa
adc
into
jb
mov
psubw
adc
jl
std
aas
lret
std
scas
push
jle
into
sub
cli
out
push
scas
xlat
and
addr16
ret
icebp
push
sub
push
orl
mov
fidivs
mov
adc
jge
data16
mov
scas
aaa
jmp
nop
dec
fdivr
cli
cmp
pop
lret
mov
ret
pop
add
push
imul
xchg
fmuls
sbb
cltd
out
push
or
ffreep
js
fimull
das
in
and
push
or
xchg
dec
cmp
outsw
push
mov
lret
jmp
negb
out
cwtl
push
add
stos
mov
push
les
cwtl
mov
jnp
mov
jge
ret
std
shr
pop
loopne
icebp
sub
icebp
popf
pop
jle
data16
mov
les
lahf
cs
xchg
add
fcoml
test
dec
movsl
ja
lods
or
aam
testb
cli
sbb
adc
inc
mov
jbe
aam
mov
pop
incl
mov
inc
and
je
mov
sub
xor
pop
adc
push
mov
xor
in
xchg
jno
int
push
mov
and
xchg
in
gs
jae
pusha
pop
in
jecxz
incl
sti
lahf
insl
cmp
cmp
pop
test
and
hlt
push
push
dec
dec
mov
jno
adc
popa
test
sub
stc
outsb
xor
sub
pop
adc
les
outsl
cmp
or
cmp
sub
push
scas
into
lds
lahf
icebp
mov
add
movsl
add
mov
aad
pop
mov
fwait
xor
cmp
mov
out
mov
or
pop
and
cltd
adc
dec
push
and
int3
mov
notl
fbstp
push
jp
lcall
jbe
dec
xchg
ret
pop
js
out
xor
sbb
mov
test
pop
data16
sub
je
test
imul
pop
int
xlat
loope
sub
sbb
mov
jnp
cli
out
or
and
pushf
insl
mov
pop
fldenv
outsl
mov
addr16
mov
xchg
nop
xor
lcall
sbb
mov
push
inc
in
fnstcw
or
and
in
jo
mov
in
scas
pushf
xchg
out
sub
ret
mov
cli
pop
mov
and
inc
pop
cmp
cmp
jno
fcomps
cld
ja
mov
sub
xor
pavgw
scas
jg
dec
add
imul
xchg
cmp
sub
adc
or
dec
rol
fdiv
sub
mov
and
iret
insl
jne
pop
stc
jge
push
mov
push
movsl
stos
insl
cmc
pop
or
inc
pop
mov
fwait
testb
mov
jmp
iret
mov
pop
stos
pop
aaa
xchg
js
adcb
mov
push
adc
cmp
leave
or
outsb
dec
mov
cmc
fldcw
fadd
gs
adc
insb
mull
sub
lods
into
cli
lret
xchg
push
dec
es
stc
push
gs
xor
movsb
scas
rcll
iret
idivl
jnp
adc
cmp
mov
mov
adcl
fcmovnbe
inc
stos
sarl
sub
jne
test
lcall
or
stos
jbe
inc
nop
fidivs
int3
mov
pandn
sbb
sbb
xor
add
pop
sub
addr16
push
roll
and
daa
in
fwait
out
movsl
stos
mov
in
sub
jmp
inc
xchg
js
sub
mov
jecxz
lods
push
or
ret
scas
pop
mov
mov
mov
pop
pop
jl
lahf
sbb
push
sbb
rorb
or
cmp
sub
out
sub
repz
test
xchg
pop
mov
pop
or
lcall
xchg
and
insl
insl
cwtl
push
in
ret
mov
xor
cli
out
and
inc
xor
movsb
jbe
mov
cmp
sub
mov
ljmp
jnp
bound
ret
pop
pop
sub
mov
fnstcw
inc
jecxz
cmp
sar
aad
jae
cmp
dec
lods
in
dec
jne
pandn
lcall
imul
mov
fildl
aaa
mov
inc
xor
mov
xchg
movsl
cmp
jo
jo
pushf
out
push
arpl
popf
xor
jge
inc
adc
push
dec
adc
inc
cmc
xor
mov
sub
in
int3
lods
in
fmull
xchg
stos
divl
test
jmp
or
lret
add
pop
and
push
or
test
mov
inc
mov
scas
lret
bound
add
mov
or
clc
mov
or
sub
or
popf
pop
mov
mov
xchg
not
fisttpll
lret
pop
jnp
add
imul
push
aaa
mov
icebp
inc
addr16
xor
addr16
ret
dec
dec
add
out
xor
outsl
or
mov
subb
mov
cs
push
sub
nop
xchg
mov
mov
loopne
jmp
ret
sar
push
fnstenv
push
movsl
testl
cmpsl
xor
imul
push
push
cmp
dec
test
test
fsubr
and
xchg
repz
lods
xchg
sbb
cmp
iret
pusha
ljmp
xchg
das
mov
ljmp
scas
dec
std
repz
sub
dec
add
sub
add
ret
sahf
xchg
mov
popa
rolb
out
cmc
test
dec
stos
xor
ljmp
cmpsb
pop
inc
xor
dec
test
shl
aas
xchg
les
mov
push
aad
ret
mov
add
push
mov
mov
mov
or
pop
push
mov
and
dec
mov
push
mov
dec
stos
incl
shll
punpckldq
fptan
mov
pop
xor
ljmp
inc
loope
add
and
sar
in
ss
adc
lock
aam
test
out
adc
and
ds
sahf
inc
mov
loope
push
mov
push
data16
test
jecxz
movsb
xchg
adc
repz
mov
xchg
movsb
ja
mov
je
adc
rclb
stc
mov
jbe
call
jge
in
std
out
mov
aas
out
adcl
xchg
lds
inc
or
cli
stos
bound
test
mov
mov
mov
mov
push
mov
jne
stos
or
test
sub
pop
add
test
mov
mov
icebp
adc
mov
mov
pushf
jno
iret
adc
xorb
fwait
sahf
leave
push
cmpsl
loop,pn
cmp
xorb
push
xor
pop
sub
xorb
push
jne
cwtl
adc
mov
test
movsl
jge
das
sti
cmp
xchg
lds
outsl
lock
xor
push
outsl
adc
xor
dec
int
and
mov
push
lahf
and
pop
aas
test
hlt
cmp
and
cmc
mov
mov
mov
xor
shrl
dec
mov
cmp
mov
pushf
ficompl
add
push
shrb
addl
jl
sbb
inc
mov
or
lock
aad
mov
fdivs
adc
pop
sub
mov
ret
mov
cli
fcompl
sbb
rcrl
out
mov
push
loopnew
fwait
lods
add
addl
ds
mov
mov
sub
xchg
mov
sarb
popa
pushf
inc
cmp
mov
in
cmp
cmp
out
or
imul
add
xor
fisubrl
mov
out
pushl
push
mov
mov
lcall
leave
xchg
inc
int
sub
xor
es
js
orb
sbb
mov
push
dec
xor
das
dec
inc
into
frstor
jne
repnz
adc
xor
xchg
out
int3
das
sbb
outsb
outsb
dec
xor
fucomi
ljmp
sbb
push
and
adc
mov
dec
fiadds
add
push
cld
nop
ljmp
pusha
cmp
cs
ss
and
push
aad
bound
test
mov
lds
mov
repnz
cmpsl
mov
pushf
or
mov
imul
std
les
aam
idivl
imulb
xchg
call
inc
cmc
sbb
mov
and
int
lds
cwtl
imul
cmp
in
add
clc
out
bound
std
sub
out
scas
push
pop
or
out
fwait
mov
xor
push
mov
addl
jmp
push
stos
add
cmp
cmc
rorb
jmp
jle
test
xor
mov
lret
or
ss
push
xchg
push
xchg
xorb
xor
jecxz
fs
cmp
mov
dec
sub
add
in
xor
test
rorb
int3
jecxz
scas
bound
sahf
sub
dec
xchg
aaa
pop
rcrb
mov
leave
jge
sahf
scas
clc
out
or
arpl
jnp
or
lret
addr16
inc
repnz
xor
mov
cmpsb
call
mov
je
inc
cmp
mov
push
adc
adc
push
addr16
out
inc
push
fdivrs
dec
sub
aad
test
pop
push
pop
leave
sub
scas
fwait
std
pushl
adc
mov
lock
loopne
popf
adc
pop
or
stc
xchg
xor
push
add
dec
rorb
cwtl
push
jmp
push
rorb
push
lret
vunpcklpd
popa
or
stc
mov
cwtl
mov
icebp
mov
shlb
jo
ljmp
jg
sahf
lret
pop
movsl
les
pop
mov
les
mov
jns
mov
jge
fisttpll
adc
mov
scas
cmp
stc
sbb
mov
jg
cmp
je
sbb
gs
xchg
clc
fistpl
jg
movsb
pop
stc
popf
loopne
arpl
cmpsb
adc
add
popf
enter
aas
sti
movsl
leave
cmc
cltd
push
mov
movsl
add
pop
xchg
jp
xchg
mov
decb
mull
xchg
cmc
fisubs
dec
lret
divb
je
dec
lcall
ficoms
pop
scas
hlt
pusha
dec
adc
xchg
and
inc
mov
pop
sbb
mov
or
cmpsb
sub
xchg
out
enter
dec
ss
aas
mov
lret
jb
jmp
shll
mov
xor
decl
adc
pop
sbb
jp
adc
pop
cmp
shr
mov
addr16
repnz
mov
aaa
dec
icebp
push
stos
repnz
dec
fistps
push
mov
es
test
xchg
ret
adcb
cli
js
inc
sub
scas
dec
test
jnp
xor
lcall
nop
js
push
addr16
gs
adc
dec
pusha
out
cmp
call
add
lcall
out
nop
sbb
dec
outsl
mov
shll
ds
or
push
cmp
imulb
mov
andb
xchg
inc
pop
adc
inc
push
popa
cmp
cmpsl
adc
loope
push
adc
sbb
scas
dec
sub
or
xchg
lock
sbb
lret
test
mov
sub
mov
mov
or
imul
sbb
xor
push
cltd
dec
ret
mov
repnz
popf
bound
mov
and
mov
std
cmp
movsb
or
mov
xchg
call
ljmp
pop
arpl
mov
mov
mov
cmp
std
push
push
bound
je
fiaddl
push
jbe
subl
std
xlat
fwait
lahf
pop
out
xchg
jns
inc
in
cmpb
repz
sahf
and
pop
pop
sbb
jg
lret
fs
aam
mov
inc
mov
xchg
mov
dec
stos
or
jno
xor
adc
mov
cli
cmpsb
rcll
test
mov
jns
inc
sahf
adc
sbb
std
pop
or
push
rolb
cmp
jp
loop
cwtl
ds
test
pusha
addr16
pop
sub
sub
jo
iret
popf
fwait
in
movsl
mov
jo
ret
push
stos
mov
cld
adc
dec
insl
jecxz
lret
mov
in
int3
xchg
xor
lcall
adc
sub
je
leave
outsb
adc
fs
dec
or
jmp
int
iret
mov
repz
sbb
inc
call
xor
pop
inc
mov
cwtl
mov
pop
and
add
add
add
push
fs
ds
bound
pop
push
mov
lret
fs
adc
jbe
mov
inc
scas
xor
cmc
xchg
cmpsb
into
and
dec
repz
lret
sub
enter
gs
pop
push
jo
aam
dec
in
adc
mov
daa
push
push
mov
cmp
ret
addb
test
gs
add
mov
cmc
sub
mov
inc
jo
lret
jg
push
je
loope
push
cmpsl
jno
mov
xor
sub
push
mov
imul
leave
mov
and
push
jne
hlt
add
pop
xor
insb
add
add
in
add
add
push
add
loopne
add
add
add
add
jo
add
add
add
add
add
add
rolb
add
add
movsl
add
add
add
add
add
add
add
add
adc
add
xlat
mov
cli
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
add
or
add
xor
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
leave
add
pushf
leave
add
xchg
leave
add
mov
add
test
add
jl
add
je
add
insb
leave
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
ror
add
fmul
add
lock
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
lret
mov
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
lret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
lret
add
push
lret
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
int3
add
lock
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
outsl
int
add
add
add
add
add
add
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
nop
int
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sub
add
dec
into
add
jo
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
into
add
int3
into
add
aam
add
fmul
add
in
add
in
into
add
hlt
into
add
pop
iret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
add
sub
add
cmp
add
dec
iret
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
