jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
sub
in
jge
mov
xor
add
add
add
add
add
push
add
add
mov
push
add
pop
add
add
add
mov
add
add
add
add
add
add
jns
mov
mov
scas
add
add
add
add
add
add
add
add
jle
push
jns
mov
add
pop
add
add
xchg
scas
add
add
add
add
xchg
add
add
add
mov
aad
xor
dec
add
add
add
add
add
add
xchg
add
add
add
mov
mov
add
add
add
add
add
add
mov
aad
cmp
add
xchg
add
add
add
add
xchg
add
xchg
lea
push
add
add
jle
sub
add
add
add
add
add
add
add
add
add
into
add
add
add
add
mov
add
add
add
add
add
add
add
call
add
xchg
add
add
add
add
add
add
add
add
add
add
adc
add
add
xor
data16
add
add
add
icebp
add
aaa
add
popf
add
add
add
add
add
add
mov
pop
add
add
add
add
add
sti
add
add
add
testl
mov
lea
mov
add
adc
scas
add
add
add
add
add
fwait
add
add
add
add
add
add
inc
add
add
add
add
adc
roll
add
adc
lea
pop
add
mov
call
add
dec
add
add
add
pop
add
add
add
add
inc
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
jns
mov
add
add
add
add
add
add
add
add
add
test
push
add
add
add
add
add
add
add
add
add
add
add
add
popf
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
mov
jns
push
add
add
add
stc
add
add
jle
add
ret
add
add
add
jns
adc
mov
cmp
add
add
add
add
add
mov
mov
movl
xor
add
add
add
add
jns
mov
add
pusha
add
mov
add
add
add
add
add
add
stos
add
mov
pop
add
add
add
add
add
cmp
adc
add
inc
add
add
add
add
add
add
sti
add
add
add
add
add
add
push
fcmovnbe
add
xchg
jg
faddl
cltd
lcall
pop
jns
jg
insl
cmpsl
sahf
mov
negb
lods
cmp
sbb
mov
leave
jg
mov
cmp
push
push
sbb
sbb
lahf
xchg
and
jb
lret
scas
jns
stos
call
sub
icebp
pop
jle
js
dec
mov
mov
jnp
repz
testl
xchg
ds
pushf
pop
aam
adc
jae
subl
cmp
xor
pop
mov
testl
insl
fisubrl
jno
je
mov
adc
out
test
and
aam
jge
int
popf
outsl
lcall
inc
inc
push
sbb
imul
and
push
fwait
push
push
cmpsl
pop
mov
icebp
sbb
cmp
xchg
jno
popf
and
xchg
ss
mov
push
inc
cmpsl
rcl
std
fnstenv
cmp
test
pushf
je
daa
pop
lods
adc
imul
jns
out
ret
sbb
in
cwtl
mov
pop
mov
add
repz
sub
jae
je
addb
dec
scas
pop
int3
xchg
lret
out
inc
in
adc
push
push
bound
xchg
inc
hlt
or
sub
mov
dec
icebp
pop
sbb
mov
cmp
leave
pop
add
push
imul
out
inc
nop
pop
sbb
into
mov
int3
mov
fs
add
fcoml
and
scas
sbb
adc
iret
daa
scas
loop
push
js
out
xor
fiaddl
inc
mov
inc
push
cmc
movsl
or
xchg
sar
dec
loope
sub
sbb
xchg
jmp
int3
mov
mov
jne
addr16
lods
jno
dec
cmp
xchg
sbb
movl
js
das
es
adc
inc
mov
jnp
sbb
das
ljmp
dec
clc
clc
sub
leave
jb
and
jl
test
loope
add
test
aam
dec
clc
jmp
xor
and
xchg
mov
mov
into
xlat
jecxz
cmp
inc
loopne
out
mov
sahf
popf
adc
xchg
inc
aas
subl
pushf
and
addl
and
mov
or
shrb
test
cmp
dec
jns
pop
and
push
ret
hlt
mov
lods
or
repz
and
ja
leavew
aaa
les
rcll
iret
clc
jecxz
sub
pop
jge
mov
push
aaa
adc
lret
lock
and
xchg
daa
fdivl
int
ds
ret
jmp
xor
mov
pop
sti
ret
test
lahf
inc
push
sti
scas
push
insb
std
dec
or
fimuls
mov
cld
sub
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
pop
test
movsb
insb
mov
mov
dec
les
hlt
fisttps
adc
and
xor
inc
mov
lods
je
test
movsb
insb
mov
les
cmp
sub
faddl
adc
and
xor
sub
je
test
movsb
insb
mov
les
cmp
sub
faddl
aaa
mov
push
pushf
adc
add
or
pop
sub
sub
mov
in
rcl
outsl
cmpsl
jg
out
popa
imul
jmp
adc
pop
inc
push
out
jmp
mov
mov
cmp
xor
or
shr
pusha
jo
jmp
xor
push
lret
inc
mov
mov
into
and
push
notb
jae
bound
cltd
in
jge
fs
push
pop
push
aas
loope
int3
pop
shrl
mov
je
repz
mov
sub
inc
jmp
mov
mov
leave
stc
hlt
xchg
cmp
dec
sub
rorb
pop
jno
addr16
pop
or
inc
lods
mov
mov
inc
mov
hlt
aaa
lds
mov
adc
xchg
js
filds
jnp
scas
popa
lahf
test
movsb
insb
mov
les
cmp
sub
faddl
adc
and
xor
inc
mov
lods
sbb
cmp
mov
lods
jge
adc
sbb
int
fstps
cmp
pop
shrl
jns
imul
imul
push
aad
sbb
rorb
or
pop
ljmp
faddl
adc
and
xor
inc
mov
lods
je
test
movsb
insb
mov
les
cmp
sub
faddl
adc
and
xor
inc
mov
lods
je
test
jbe
mov
cmpsl
and
cltd
enter
shrb
xor
out
icebp
mov
test
pop
aam
xor
cwtl
test
jns
jns
fimuls
xor
repz
movsb
lret
jle
push
push
sbb
fdivs
repnz
lea
add
mov
jne
lods
inc
mov
xorb
inc
mov
adc
adc
sbb
in
aam
arpl
dec
not
lcall
insl
or
mov
add
adc
pop
enter
cmp
je
dec
mov
shr
add
ret
bound
cli
xchg
jmp
pop
jecxz
mov
jmp
and
mov
lods
pop
and
fnstenv
xlat
adc
fstpt
test
mov
shl
mov
add
test
xchg
mov
popa
leave
out
sbb
daa
pop
cmp
sub
sub
and
sbb
in
inc
dec
xor
ja
mov
pop
nop
cmovle
and
into
push
mov
fcmovnbe
orb
jecxz
dec
pop
pusha
out
mov
out
lcall
rcl
mov
ljmp
xchg
sub
and
sub
pop
addl
lahf
inc
lahf
test
adcl
pop
xchg
jns
and
ret
adc
inc
push
shll
les
dec
jp
pop
mov
push
loope
sti
dec
adc
aaa
insb
test
jae
mov
fcomp
subb
lcall
cmp
ror
sub
mov
inc
rcl
addr16
roll
lods
push
jne
jnp
dec
ret
add
lods
adc
js
xchg
sbb
pop
lret
or
cmc
ss
ljmp
xchg
fcompl
icebp
fadds
push
lods
ss
push
loopne
shll
sahf
push
mov
xor
inc
and
addb
cltd
xchg
mov
xchg
es
test
jge
push
ds
jp
jnp
dec
or
pop
repz
das
aad
jecxz
fwait
sub
cmp
outsl
mov
out
loope
jl
call
jne
inc
dec
fsub
ja
mov
les
mov
data16
iret
int3
out
inc
cltd
in
dec
lock
and
jle
push
push
arpl
jl
pop
mov
mov
push
outsl
sub
int3
dec
out
arpl
in
aam
inc
push
mov
jge
or
ret
cld
arpl
mov
into
dec
icebp
xchg
or
out
mov
clc
adc
mov
in
pushf
pop
push
inc
mov
mov
data16
aas
popw
jp
cmp
cmpsb
dec
or
call
adc
repnz
std
xor
jle
mov
mov
inc
mov
dec
sbb
adc
mov
mov
push
and
sub
imul
enter
xor
and
jmp
out
mov
lcall
lret
movsb
jae
jo
in
in
outsb
out
adc
mov
or
cmp
in
adc
imul
addb
es
fwait
imul
push
jg
addr16
jp
cwtl
aad
mov
clc
jo
push
cmp
jg
mov
out
add
add
leave
lds
xchg
testl
mov
je
mov
gs
mov
mov
int3
sbbb
push
cmpb
xchg
push
enter
arpl
shrb
add
mov
mov
out
lahf
push
mov
pop
cmp
movsb
fiadds
pop
aam
stc
jns
sub
iret
xlat
pop
lret
lahf
cmp
pop
cmp
outsb
loope
divl
loop
daa
adc
fdivrs
sub
fisubrl
or
xor
das
pop
andl
xor
jecxz
jle
pop
testl
xchg
sub
and
test
imull
inc
dec
out
repnz
out
sar
adc
or
loope
out
jecxz
sub
cmp
and
sub
gs
xor
out
clc
mov
mov
jbe
out
sbb
out
push
mov
cld
aaa
pop
adc
fs
lock
push
xchg
insl
and
or
mov
jns
ret
aam
mov
cltd
mov
xor
xlat
mov
mov
inc
cmp
pop
out
add
cltd
scas
inc
push
dec
mov
push
out
addr16
jle
cmp
inc
xchg
ljmp
fucomip
fdiv
add
inc
push
lahf
jae
mov
ds
pop
cmp
imul
aas
leave
jg
ret
add
out
dec
cmpsb
loope
sbb
or
mov
pop
incb
fists
pop
xor
mov
les
mov
testl
push
pop
jb
push
xor
aaa
mov
cmp
mov
pushf
insb
cwtl
cmp
xlat
mov
push
sub
sub
pop
dec
mov
shr
push
mov
mov
sbb
mov
push
add
jl
stc
sahf
shlb
aas
xor
ret
jbe
xchg
test
jge
lahf
arpl
mov
int
das
mov
add
ret
stc
sbb
int
cmp
cltd
push
int
dec
insb
popf
cmpsl
and
imul
mov
ret
push
sub
movsb
or
test
or
call
decb
test
push
mov
cmp
into
pop
xchg
dec
cmpsl
mov
fwait
dec
sub
adc
faddl
add
outsl
cmp
and
stos
adc
cltd
icebp
sbb
outsb
scas
jno
loopne
cwtl
push
lcall
cmpsl
mov
or
mov
xchg
filds
xlat
out
pusha
test
jns
dec
adc
jno
movsb
hlt
mov
fdivrp
popa
adc
or
inc
repz
jmp
loopne
inc
push
mov
js
pop
outsb
jp
pushf
loop
add
movl
into
dec
jns
pop
ja
inc
inc
clc
add
imul
pushf
enter
mov
xor
dec
imul
mov
mov
call
sbb
filds
iret
fadd
push
adc
jmp
cli
cli
fisubs
mov
shll
or
popa
arpl
jle
mov
pop
push
out
into
dec
cmp
dec
dec
mov
adcb
cmpsb
lahf
jmp
pop
les
or
jno
sti
adc
addb
push
pop
or
test
leave
inc
out
int
or
push
clc
add
mov
movsl
bound
mov
adc
and
fcmovnb
mov
jle
mov
aas
mov
loope
jge
sbb
cmp
js
mov
rcrl
push
jno
and
call
push
lea
and
mov
adc
mov
in
iret
mov
jl
sbb
pop
stos
call
lahf
insb
inc
xchg
out
aad
mov
aaa
inc
bound
add
sub
fnsave
test
sbb
jge
lahf
sub
sti
dec
cmp
pop
cmpsl
pop
stos
cwtl
aam
jae
jno
pop
or
jp
cmp
mov
or
add
sbb
inc
inc
jle
gs
mov
stos
push
out
in
in
jo
mov
dec
pushf
inc
sbb
adc
xor
add
jb
pop
loop
movl
test
xchg
in
or
pop
rorl
mov
inc
xchg
shl
rol
sbb
jbe
std
cmp
stos
pop
cmp
sub
fs
adc
push
stos
je
repz
dec
fadds
lret
mov
fiaddl
sbb
and
in
pop
push
fptan
cwtl
mov
or
ljmp
jl
xchg
mov
into
mov
xor
daa
mov
jb
sbb
adc
push
jp
dec
mov
daa
sarb
leave
inc
push
push
mov
flds
push
mov
push
mov
out
aas
push
push
jo
inc
je
inc
jp
jo
fs
or
inc
cmp
push
or
ficomps
push
cmc
or
mov
push
cli
sub
xchg
or
loopne
pop
jnp
lods
adc
and
pop
jnp
lods
imul
imul
and
cmp
pusha
adc
sbb
xchg
jns
inc
das
stos
add
inc
imul
testb
inc
mov
shll
ja
dec
push
pop
jmp
bound
lret
into
pop
and
sbb
adc
lahf
inc
and
sub
jl
dec
ljmp
sub
inc
push
dec
pop
dec
or
movsl
cmp
scas
insb
cmp
jo
dec
xor
cltd
or
dec
add
xlat
pop
fdivrs
shrb
and
sbb
mov
mov
push
push
inc
pcmpgtb
cwtl
lret
insb
add
in
mov
jb
mov
push
jle
iret
fwait
add
mov
inc
call
jmp
cmp
push
insb
cmp
or
push
es
das
lds
add
in
pop
lock
negl
mov
sub
je
push
mov
sarl
aam
jecxz
aaa
cmc
mov
lods
ret
lods
out
add
cli
push
in
rorl
sets
loopne
adc
xor
aad
ljmp
sbb
pop
mov
adc
adc
xchg
lock
andb
roll
cmp
cmp
mov
inc
ret
or
lock
adc
iret
sub
outsl
cwtl
sub
aam
add
sbb
mov
mov
mov
push
ret
mov
jo
push
inc
xor
push
out
xchg
aaa
int3
jmp
jb
das
jno
scas
imul
rcrl
xor
es
ds
pop
jg
dec
cmp
fcomps
stos
ljmp
scas
pop
or
ss
in
mov
xchg
mov
mov
or
in
dec
push
ja
jb
mov
xlat
call
bound
and
dec
pop
mov
lret
jne
push
inc
cld
loope
rep
or
pop
push
jmp
rolb
xor
mov
ljmp
test
inc
xlat
popf
fisubrl
loopne
xchg
and
jg
sbb
fidivl
jge
add
insb
xchg
adc
pop
dec
lock
push
in
and
mov
gs
push
add
imul
lea
fldenv
dec
test
das
incl
call
jb
test
jmp
dec
cmp
adc
mov
inc
repnz
sbb
mov
inc
xchg
mov
cmpb
out
jl
push
xchg
sub
xchg
stos
cmpsb
and
test
xorl
repnz
loope
mov
add
inc
xchg
fdivrs
xchg
cmc
add
mov
mov
sti
pop
jnp
adcb
mov
adc
adc
imulb
scas
inc
mov
call
add
sbb
mov
inc
dec
fistps
add
pop
adc
test
mov
inc
lods
int
add
mov
and
mov
push
push
movsl
out
mov
cmp
mov
scas
and
scas
in
aaa
pop
mov
cwtl
inc
jns
mov
lret
add
xchg
mov
sub
into
shl
fists
js
lahf
sbb
pusha
add
rcl
pop
cmp
call
sahf
sbb
aad
push
inc
cld
gs
jmp
mov
pop
es
xchg
out
push
adc
add
je
jne
dec
in
mov
sti
popf
xchg
xlat
push
lock
and
pop
mov
push
js
notb
arpl
pop
inc
inc
lahf
test
xlat
and
cmpsb
mov
popa
mov
push
xlat
std
mov
imul
loope
in
aaa
call
pop
add
das
vpmacssdqh
jb
je
out
cli
add
std
sub
dec
push
mov
push
mov
loop
in
mov
dec
or
push
aaa
jg
sbb
push
jne
lods
and
arpl
mov
push
mov
mov
jl
leave
popa
mov
xor
jg
popf
or
ret
daa
jmp
leave
ljmp
shll
enter
mov
jl
jge
cmc
pop
into
dec
pop
sahf
fildll
mov
inc
add
jb
xor
mov
stos
lea
out
mov
xchg
outsb
pop
cmp
cmp
arpl
aam
xchg
xchg
dec
aam
mov
ret
orb
xchg
popf
cmp
jle
sub
daa
adc
in
test
mov
ds
xchg
mov
ret
aas
sub
mov
and
pop
adc
ret
push
aas
ret
mov
aas
lds
icebp
stos
mov
fldcw
loope
adc
push
xchg
loope
test
push
or
data16
push
cltd
push
push
repz
sub
in
adc
mov
cmp
lods
dec
pop
lods
sub
aad
test
test
pop
ret
dec
cmp
test
adc
lds
scas
mov
jl
jo
xchg
jb,pt
cmp
int
jecxz
shlb
mov
sbb
je
repz
outsb
leave
movsl
mov
jb
mov
and
pop
inc
out
cmp
in
mov
stc
mov
sub
add
sub
loop
push
adc
push
inc
cmp
test
cltd
mov
jmp
dec
jmp
ds
fwait
nop
fwait
out
inc
test
add
shlb
xor
jl
out
in
iret
and
mov
pop
call
pushf
test
mov
arpl
and
sub
in
outsb
lcall
pop
mov
inc
sub
or
push
pop
out
push
sbb
int
push
scas
jg
adc
cmp
les
stc
fwait
jmp
mov
jno
cmpl
es
sbb
mov
pop
arpl
xchg
into
dec
jmp
adc
imul
dec
pop
lret
rcrl
mov
pop
out
pushf
xchg
rclb
lret
adc
xchg
pop
jp
int3
add
mov
pop
jmp
jle
sbb
cmp
jne
mov
mov
outsb
mov
cwtl
push
push
popf
add
xchg
je
mov
in
cmp
jmp
jmp
rorl
std
enter
sbb
movsb
cli
fisubl
pop
stos
ret
push
das
mov
das
jl
add
insb
in
inc
or
ffree
das
popl
mov
rcrb
xchg
or
pop
fisttpl
and
cmp
lock
adc
push
inc
sub
sbb
mov
ds
add
cltd
lret
stos
cmp
lods
pop
xchg
and
push
pop
jmp
clc
and
pop
lret
shll
sar
mov
je
jb
cmp
mov
scas
mov
xor
xor
std
testl
negb
jl
push
in
or
inc
jne
and
fidivrs
mov
or
cmp
xchg
push
ret
test
daa
inc
int3
jp
sub
mov
into
push
dec
hlt
fwait
sbb
sub
test
lds
or
sahf
inc
xor
iret
inc
cmp
mov
mov
pop
dec
jne
adc
xchg
cmp
cmp
xchg
popa
stc
mov
xor
lcall
push
icebp
sarb
mov
push
dec
loop
mov
lea
push
out
jnp
orl
imul
cmp
jb
mov
out
clc
mov
das
test
and
pop
cmpsb
out
lea
push
xchg
push
out
repz
fimuls
in
int3
in
xor
sub
mov
repz
pushl
fs
clc
pop
cmp
jo
pusha
push
mov
jae
dec
mov
adc
lahf
orb
aas
shl
or
dec
adc
add
hlt
or
fstps
mov
mov
inc
std
inc
inc
adc
out
lcall
insl
int3
and
stc
or
or
dec
mov
ret
cmp
cmp
mov
je
mov
scas
fcmovbe
ljmp
ds
fstl
iret
daa
mov
andb
packuswb
sbb
xor
mov
push
ljmp
popf
roll
dec
mov
adc
pop
cld
xchg
push
es
cmp
push
in
inc
jns
or
and
or
icebp
fildl
xchg
and
jle
hlt
and
sub
mov
dec
sub
jg
xor
mov
push
int
mov
ljmp
pop
sbb
rcrl
aaa
lods
out
push
xchg
fadd
xchg
xor
ret
pop
mov
test
cmp
aam
leave
push
push
inc
xchg
nop
and
sbb
jmp
notl
mov
movsb
mov
push
fiadds
mov
mov
mov
and
cmc
lret
adc
movsl
in
xor
into
mov
imul
pushf
xor
fstl
push
shl
xchg
cmp
mov
mov
aam
xorl
and
lcall
call
add
les
or
or
inc
pavgw
inc
cltd
sbb
aas
xor
shr
mov
outsb
out
sub
mov
fcomip
addr16
stos
popa
aad
jo
dec
jp
lods
cld
inc
or
cltd
xchg
int3
fadds
mov
xchg
mov
mov
punpcklwd
xchg
sub
mov
data16
enter
insb
lea
call
xchg
mov
sti
les
cmp
repz
outsl
or
leave
lods
xchg
add
mov
lods
push
sti
sbb
and
out
lahf
mov
iret
cwtl
jnp
mov
xlat
insb
sbb
out
sub
xchg
dec
loopne
fdiv
adc
push
movsl
lea
sbb
bound
adc
push
jno
push
fstpl
cld
cmpsl
sbb
ret
hlt
mov
add
dec
jle
dec
test
push
xchg
clc
lahf
out
push
lock
sub
pop
insl
test
pop
add
mov
mov
xor
mov
sbbl
mov
repz
lea
xchg
lea
loop
mov
mov
out
in
pop
adc
ss
aas
mov
and
add
test
pop
add
jmp
dec
lds
adc
mov
jge
or
jle
mov
fstl
fwait
jp
and
and
or
cmp
cmp
out
and
push
ljmp
subl
iret
ds
aaa
into
cmp
clc
mov
pop
nop
hlt
dec
dec
inc
xchg
and
mov
lret
xor
push
ret
neg
xor
pop
loope
xor
cs
pop
inc
pop
fsubrs
sahf
cmp
movsb
fistps
xchg
mov
xor
clc
movsl
or
jne
adc
xchg
test
aaa
xchg
ret
lds
and
pop
sbb
and
cmp
pop
iret
and
push
fwait
sti
lcall
mov
mov
mov
mov
fwait
pop
dec
lds
xor
mov
and
or
pusha
jno
sti
insb
shlb
aam
insb
push
call
cmpsb
aaa
pop
mov
jns
pop
xchg
push
call
adc
lods
dec
mov
cmp
mov
and
popa
xor
dec
push
jbe
in
and
mov
adc
daa
or
mov
push
jle
pop
cltd
hlt
loope
inc
test
inc
jb
xor
xchg
dec
push
sbb
push
pop
test
dec
aaa
test
idivl
dec
dec
out
cltd
test
mov
int3
and
mov
mov
imul
push
dec
jecxz
lret
xor
lahf
sbb
divb
add
sub
push
jo
or
jb
outsb
es
inc
sbb
or
jae
inc
lock
or
sub
cmp
movsb
outsb
es
push
arpl
lahf
dec
push
mov
out
sbb
fsts
mov
dec
int3
stc
mov
repnz
mov
lods
sub
repnz
int
xor
dec
in
pusha
mov
ljmp
jno
mov
inc
ret
inc
xchg
popa
sahf
insb
xchg
lock
into
cmp
and
loop
incb
pop
test
dec
inc
lldt
ret
leave
cmpsb
mull
rcrb
mov
call
lods
jle
shlb
orl
mov
mov
mov
mov
xchg
inc
div
bswap
push
cmc
test
xchg
dec
xlat
repz
pop
or
test
push
mov
adc
add
mov
fcmovnb
push
sbb
jl
out
cmc
inc
add
fcmovne
mov
shrl
es
fmuls
mov
pop
push
mov
enter
mov
dec
test
push
push
imull
xchg
xor
and
shl
cmp
jge
js
sub
add
movsb
cmc
stos
cli
fwait
pop
mov
xchg
mov
sbb
sbb
sub
push
xchg
add
mov
sti
dec
inc
cmpl
jmp
inc
movsb
insb
mov
les
cmp
sub
faddl
adc
and
xor
inc
mov
lods
je
test
movsb
insb
mov
les
cmp
sub
faddl
adc
and
xor
inc
mov
lods
je
test
movsb
insb
mov
les
hlt
fldl
adc
and
xor
inc
mov
lods
je
test
movsb
insb
mov
les
mov
add
mov
jmp
add
inc
fwait
push
mov
cmp
or
jnp
dec
dec
pop
add
mov
pop
sti
or
jnp
imul
cmp
or
jp
push
pop
jmp
adc
jmp
ljmp
xchg
sub
jp
push
pop
cld
dec
sbb
pop
in
mov
add
testl
test
pop
adc
cmp
push
repnz
das
jae
lahf
jae
fs
fwait
cmp
cmp
push
out
shlb
rcl
hlt
push
les
lahf
out
sbb
xchg
out
push
sub
int
aaa
lret
xor
stos
imul
rcll
push
dec
mov
aas
pop
mov
jnp
push
push
jmp
das
inc
arpl
pop
ja
fsubrp
sbb
cmp
je
loop
filds
mov
or
adc
mov
icebp
test
xchg
sub
mov
movsb
add
inc
loope
rol
ret
in
hlt
scas
out
sub
jmp
mov
pop
cmp
or
jp
push
pop
repnz
add
xor
jnp
jb
call
pop
iret
dec
mov
aas
xchg
outsl
lret
dec
leave
inc
cli
aaa
mov
lods
push
test
scas
fwait
push
mov
push
test
das
xchg
or
or
jle
pop
fdivrs
lahf
cmp
imul
jg
jb
dec
lret
push
pop
jmp
sbb
sub
jnp
imul
cmp
or
jp
push
pop
jmp
sbb
sub
jnp
imul
cmp
loop
ret
int
pop
lds
out
cmc
xor
jne
rclb
jno
jne
fwait
or
outsb
push
mov
je
sbb
or
mov
movsl
add
xlat
pop
jae
xchg
ret
and
mov
jmp
cmp
xor
dec
xor
daa
jge
fstl
lods
xor
popf
rolb
fnsave
or
out
outsl
int3
mov
push
js
dec
push
xorl
mov
scas
ss
fs
sbb
pop
fcmovu
ss
shlb
ja
jge
ret
sahf
into
push
xchg
jnp
mov
jecxz
inc
pushf
cmpl
or
push
xchg
push
fwait
adc
imulb
and
call
ljmp
fidivl
cld
cmp
dec
add
stc
dec
pop
and
mov
mov
jecxz
jl
and
imul
pop
xor
rcrl
repz
adc
and
lcall
xchg
call
mov
ret
push
lds
dec
xor
add
cli
and
mov
xchg
pop
push
idivb
aad
mov
insl
xor
popf
pop
adc
aaa
mov
aaa
js
js
sbb
mov
fstpl
imul
nop
xor
cmp
movsb
sub
xchg
adc
xor
pop
push
adc
push
movsb
xchg
sub
int
or
daa
repnz
or
stos
stos
mov
movsl
mov
jne
loope
popa
inc
mov
movsl
mov
repnz
ret
int3
mov
cmp
adc
insb
jp
xlat
jecxz
arpl
ljmp
enter
jle
std
sbb
push
pop
cmpsl
pop
fmulp
sub
mov
ror
mov
cmpsl
addr16
loope
stos
loopne
cli
sub
lret
jae
mov
or
enter
sar
fstl
xorb
leave
cmpl
sbb
outsl
mov
out
cld
jne
repz
shll
shrb
or
sbb
jg
cmp
sbb
sbb
push
xchg
or
lcall
fists
sbb
lods
sub
out
xchg
push
cld
jg
flds
movsb
cli
pusha
lgs
push
pop
notl
or
jae
mov
in
xor
jg
xchg
jne
jno
sbb
mov
jmp
rsqrtps
repz
call
xchg
xor
ja
popf
out
cmc
gs
lock
pop
adc
ret
lret
adc
pushf
pop
add
xchg
stc
fisttpl
leave
imul
fidivs
push
mov
stos
push
fcoml
scas
ret
fdivrp
negb
test
mov
aas
inc
dec
jecxz
into
push
rcrl
lahf
jae
adc
dec
sbb
and
mov
movsb
pop
jno
lea
lret
mov
and
clc
pop
jbe
jge
pop
jnp
lea
xlat
push
iret
cmpsl
into
int3
fabs
inc
in
cld
dec
cld
inc
mov
lods
jbe
test
das
add
divb
add
dec
mov
movsl
aas
ret
stc
fwait
mov
sub
jge
xor
daa
jb
push
xor
fimuls
push
ja
xchg
out
sbb
lahf
je
fisttps
or
mov
fwait
dec
or
inc
add
sahf
sbb
imul
push
sbb
stc
fldz
xchg
mov
popf
aas
or
lods
pop
cmpl
cmp
mov
mov
cld
pop
dec
jge
sub
shrd
inc
lcall
or
lods
unpcklps
daa
popf
fs
pop
stc
mov
jge
inc
adc
imul
lds
push
test
push
aas
data16
aam
xchg
ljmp
cli
ja
adc
jp
fsubr
loope
ret
cmp
and
insl
pop
jle
mov
mov
ds
xchg
lahf
sti
mov
pop
mov
out
lahf
cmp
sub
cs
sar
insb
aad
pop
push
out
les
sti
sbb
mov
enter
ret
inc
mov
add
inc
and
inc
data16
iret
decl
ss
jecxz
fwait
subb
repnz
in
les
iret
and
movsb
jmp
adc
dec
test
push
ljmp
cmp
push
ret
mov
popf
push
aaa
mov
into
or
insb
push
aad
add
cmp
gs
fs
pop
sbb
push
pop
out
ss
icebp
ds
outsb
cmpl
pushf
ja
imul
push
mov
mov
or
sub
mov
std
mov
add
popl
push
test
sbb
push
repz
pop
jo
mov
push
movsb
jmp
jb
pop
pop
push
pop
daa
dec
sub
dec
lret
out
xchg
pusha
dec
and
lret
pop
inc
sub
push
cmc
ret
add
pusha
lea
adc
mov
mov
pusha
in
jge
add
mov
push
and
mov
jbe
fldcw
dec
jbe
icebp
pop
insl
sarl
lds
inc
cmpsb
pushf
icebp
aas
into
mov
shrb
adc
mov
mov
mov
jmp
divb
stos
pusha
int3
and
jbe
aaa
jo
fldl
jno
test
adc
out
in
inc
lds
sbb
jae
and
pop
xchg
scas
push
aas
cmp
jg
xchg
popf
sub
adc
daa
sub
mov
dec
mov
bound
in
push
mov
push
orl
adc
pop
sbb
push
mov
jb
repnz
arpl
lcall
jne
cli
jne
mov
add
movsl
aam
dec
dec
dec
out
pop
dec
mov
cmp
outsb
enter
rcll
insl
push
add
sub
cmp
mov
push
dec
push
adc
cli
mov
jl
call
subb
inc
mov
mov
and
into
xor
cli
pop
loop
faddl
mov
popa
jnp
shll
xor
xor
inc
cld
enter
outsl
push
js
push
mov
pusha
adc
fistpll
or
loopne
clc
lret
dec
sub
rclb
incb
cmc
dec
popa
call
fmuls
adc
jle
out
sbb
xchg
lret
nop
push
mov
out
ucomiss
pop
adc
pop
xor
cmc
or
das
fistpl
pop
mov
cmc
inc
aam
xor
gs
out
mov
leave
mov
outsb
test
xchg
push
ss
xchg
dec
fcoml
sub
test
enter
inc
movsb
add
or
add
push
insl
lea
into
pop
mov
cmp
mov
addb
dec
push
in
mov
mov
data16
xchg
sub
jbe
push
and
lea
mov
bound
addb
stc
ds
fisubs
xor
adc
inc
or
js
clc
pop
inc
push
mov
push
mov
or
insb
adc
push
xchg
sti
imul
rcrb
or
popa
popa
aaa
add
add
jg
sbb
jbe
stc
je
arpl
cltd
mov
xchg
rcr
sub
popa
out
mov
fstps
add
nop
sub
mov
push
jmp
or
es
mov
movsb
roll
xchg
js
nop
push
sub
outsb
jecxz
in
sarl
jg
in
std
mov
test
xor
mov
enter
mov
xor
shll
inc
arpl
out
in
fwait
bound
scas
repz
mov
sub
enter
mov
jbe,pn
xor
mov
jbe
std
cmp
stc
jb
in
enter
xchg
xchg
inc
dec
mov
xor
sbb
std
dec
and
fistps
jo
icebp
out
jl
mov
gs
xchg
xchg
mov
rorb
pop
adc
push
sbb
aas
rcrb
popf
push
mov
fldcw
push
push
xchg
popa
fstl
clc
pop
or
sbb
cwtl
hlt
scas
xchg
les
aad
xor
sahf
pushf
lock
loope
aad
popa
leave
cld
xchg
mulb
mov
and
call
push
into
stc
sub
sub
mov
dec
insb
xor
lods
add
dec
xor
rcl
add
and
call
adc
mov
pushf
and
mov
lahf
nop
lahf
enter
and
repz
bnd
in
test
dec
dec
dec
add
fmull
push
push
xchg
cli
enter
inc
adc
dec
daa
pop
inc
cltd
lret
pop
enter
ljmp
inc
aad
ss
cmc
shlb
mov
dec
rcl
inc
xorl
mov
add
push
out
ja
imul
pop
push
mov
scas
pop
mov
push
shrl
jecxz
scas
or
adc
adc
sbbb
xchg
and
shr
call
pop
sbb
mov
sbb
mov
xchg
xchg
adc
lahf
sub
cwtl
repnz
shrl
rorb
jle
movsb
daa
add
leave
fiadds
or
out
xchg
sbb
arpl
mov
insb
popa
jno
or
inc
in
imul
adc
les
push
or
and
dec
cmp
cmp
mov
and
and
cmp
or
push
mov
push
repnz
mov
pop
jmp
push
out
xchg
push
sar
push
adc
inc
lods
or
in
mov
outsl
cmpsb
cmp
out
xorb
repnz
loopne
jb
inc
add
mov
popa
mov
mov
fnstenv
cmp
scas
jns
in
add
call
pop
xchg
lock
test
pop
and
arpl
xor
je
pusha
in
dec
cmp
mov
fldl
add
mov
push
adc
rolb
pop
ljmp
dec
mov
into
mov
clc
mov
scas
cltd
inc
cmp
dec
cmpsl
sbb
mov
and
mov
inc
call
inc
mov
sbb
or
shr
adc
vrsqrtps
inc
add
sub
sub
inc
ss
inc
jecxz
mov
ret
lds
test
jmp
scas
pop
fwait
cli
stc
pop
dec
repz
push
in
adc
jns
xlat
bound
jle
or
add
sub
fcoml
xlat
fnstenv
mov
shlb
filds
dec
into
sub
or
ss
repnz
repnz
popf
test
fnstenv
push
sub
cmp
xor
roll
lea
add
outsl
lods
inc
cmpl
iret
testb
pop
call
xchg
fmull
out
clc
sbb
cwtl
xchg
add
cltd
adc
push
inc
and
rol
leave
icebp
dec
or
imul
or
push
adc
mov
jo
sbbb
nop
pop
push
sub
jg
xchg
ljmp
fdivl
shrl
fisttpl
or
lds
push
inc
add
sar
iret
jnp
js
jae
sub
in
adc
repz
stc
je
lea
insb
addr16
rorb
cs
nop
or
sub
lea
xchg
add
pop
jae
push
sub
dec
insl
popf
xor
sub
addl
push
xor
sbb
imul
sbb
cmp
dec
or
or
sub
xchg
mov
test
insl
addr16
sub
push
cld
or
je
mov
repnz
imul
dec
pop
fcomps
cmc
inc
or
xchg
mov
dec
imul
ljmp
add
mov
push
stos
jmp
push
lods
popf
inc
rcr
pushf
lods
lret
sbb
xchg
inc
push
cmp
pop
dec
int
push
mov
push
push
inc
int
adc
popf
xorl
and
addb
in
leave
ja
push
xchg
mov
stos
sarb
pop
adc
pop
into
insl
scas
sbb
test
pop
cld
adc
push
xor
out
or
test
cld
mov
cmpsl
in
out
mov
dec
xchg
into
dec
dec
dec
pushl
xchg
int
sub
push
test
out
movsl
jne
test
push
mov
dec
into
aaa
dec
popa
sti
shrl
and
divb
fsubs
add
pop
decb
sub
add
in
shlb
cmp
out
jp
imul
nop
push
cmpsb
sarb
inc
hlt
cs
scas
xchg
pop
out
rcrb
in
sub
fisttps
in
push
orl
mov
mov
jo
pushf
test
out
cmp
or
add
cld
adc
add
je
mov
lret
movsb
pop
outsb
daa
stos
dec
lods
pop
sub
xchg
add
aam
cs
roll
lret
cmc
xchg
into
aam
mov
cmp
xchg
fildll
pop
clc
or
jo
sarb
sub
pop
xchg
call
push
mov
inc
imul
sub
mov
adc
mov
cwtl
mov
ss
mov
mov
ljmp
out
mov
insb
mov
jg
call
jp
pusha
dec
ja
icebp
inc
shl
ficoml
push
int3
mov
adc
int
test
int3
sbb
jbe
out
inc
mov
push
jecxz
nop
push
insb
inc
and
push
fsts
push
mov
jo
ds
sub
xchg
push
mov
mov
sbb
push
mov
fistps
ds
mov
adc
or
test
sub
push
int
push
cmc
inc
mov
mov
jnp
xor
add
mov
ljmp
mov
xchg
loope
sub
pop
inc
push
leave
call
xlat
jecxz
push
call
pop
xlat
iret
out
pop
shr
and
js
add
loop
and
inc
inc
push
ljmp
outsl
cs
add
add
es
adc
ja
or
movnti
inc
mov
lock
sub
sti
dec
fcmovnu
test
add
mov
int
xor
mov
push
out
mov
fldcw
pop
jp
and
dec
loopne
aam
mov
scas
mov
arpl
mov
xor
adc
mov
mov
test
mov
jp
sarw
mov
daa
mov
push
movsl
sub
loop
cmp
rcr
dec
mov
bound
pop
insl
mov
xor
sti
rorb
mov
or
imull
push
loope
mov
notb
and
xchg
orb
mov
fwait
sbb
or
ret
mov
sti
fwait
xchg
push
sub
movsl
mov
ret
mov
gs
mov
push
dec
lods
sub
ja
rol
pusha
in
leave
sub
int3
cmpsl
adc
push
cmp
jecxz
mov
sbb
sub
ja
dec
cmp
les
dec
ja
lea
arpl
mov
xchg
dec
adc
dec
test
nop
mov
shrb
out
push
push
int3
call
shrl
jno
sbb
adc
mov
xchg
mov
pop
jle
inc
iret
mov
and
mov
cltd
in
jns
unpckhps
xchg
jle
test
push
cmp
loope
cmp
roll
je
mov
outsl
aas
shrl
lahf
add
addl
xor
and
iret
and
xlat
mov
movsb
test
bnd
mov
push
outsb
div
loopne
pop
mov
or
xchg
cmpsl
iret
push
call
mov
cmpl
into
insl
cmc
inc
ret
adc
bound
sbb
aam
xchg
adc
in
leave
enter
out
fstpl
cmp
aas
xor
mov
ds
test
jne
in
call
sub
dec
sub
mov
or
les
sub
rcrl
scas
mov
mov
push
and
inc
call
jno
in
add
jnp
cmpsl
pop
mov
orb
jns
mov
pop
cld
dec
ret
xchg
aad
rclb
dec
inc
jl
add
sahf
pop
pushf
push
stos
push
xor
decl
mov
test
adc
xchg
aaa
call
cltd
push
cli
pop
pop
scas
jae
and
sub
test
xor
insb
icebp
xor
movb
sub
aaa
and
xchg
mov
fs
jp
mov
push
orb
ret
inc
fdiv
fadds
movsl
fsubs
lock
push
std
mov
pop
xchg
lahf
dec
xor
cs
jge
push
test
sbb
fcomps
jae
mov
faddl
icebp
aad
adc
jmp
mov
gs
inc
hlt
cli
and
xor
jp
loopne
cmp
adc
mov
gs
and
fs
xor
pop
insb
inc
mov
fcmovb
push
inc
adc
xlat
scas
imul
pop
adc
jb
and
push
jecxz
cmpsb
mov
mov
movsb
das
jb
and
push
fwait
sbbl
sbb
or
out
or
mov
sub
xchg
jg
xor
popa
fildl
dec
cmp
push
daa
fimull
shl
scas
lcall
adc
mov
mov
cmc
inc
mov
mov
xor
je
call
loopne
cs
gs
outsb
and
push
and
jns
pop
add
xor
pop
fs
stos
add
push
jnp
jnp
loope
sub
pop
cltd
repz
and
push
movsl
out
cmpsl
ds
test
push
ret
xchg
lea
in
pusha
or
or
cli
jecxz
out
jb
dec
loopne
dec
xchg
inc
push
out
sti
mov
les
dec
hlt
popf
jo
dec
adc
decb
and
ds
jnp
and
cmpsl
clc
xchg
mov
rorb
pushf
adcl
in
scas
xchg
xlat
sbb
dec
icebp
inc
popa
stc
dec
sbb
jns
rcrb
mov
jns
in
stc
pop
orl
push
jl
movsb
adc
jb
pop
cmp
dec
or
imul
dec
ss
dec
stos
loope
mov
push
push
scas
or
push
sbb
cmove
emms
lock
pop
pop
inc
and
push
hlt
iret
ljmp
push
mov
sbb
mov
and
jb
mov
js
ds
sub
enter
adc
lock
cli
in
mov
ret
jbe
aaa
shrb
push
scas
sub
jo
dec
shlb
and
lret
fs
xchg
out
pop
fcmovnb
dec
or
fldl
fsubs
outsb
stos
mov
push
scas
loopne
push
inc
lods
fisttpl
add
mov
xchg
add
stos
xchg
push
pop
sub
popa
adc
ror
add
movsl
jge
outsb
mov
in
lahf
dec
inc
mov
cli
pop
xor
adc
in
xchg
imul
push
adcl
push
push
enter
xchg
adc
fildll
mov
lret
push
dec
stos
fwait
cmp
xchg
outsl
xor
pop
cmp
xchg
xchg
push
and
in
dec
jecxz
ljmp
std
ljmp
xor
js
insl
push
xchg
push
adc
fildl
mov
adc
insb
popa
sbb
outsl
popa
into
add
aad
bound
imul
std
mull
sub
iret
shl
cmp
mov
fdivrs
out
jmp
out
sub
pop
sbb
add
insl
cmpsb
das
adc
sub
xor
push
inc
int3
icebp
std
aaa
lret
mov
pop
test
jo
inc
adc
xchg
addr16
out
push
je
inc
mov
jnp
lahf
jo
mov
jl
pop
xor
ret
ficomps
stos
push
add
mov
fcomip
jno
inc
out
sti
fwait
shrl
mov
int3
cmp
mov
push
dec
dec
imul
js
ds
jge
xchg
icebp
pop
outsl
shl
jg
scas
lret
out
mov
enter
in
xchg
mov
shll
out
in
rorb
adc
std
inc
mov
inc
in
xchg
pushf
sub
sub
dec
push
daa
lahf
mov
jae
insl
inc
lret
in
decl
xor
mov
lret
in
sbb
bound
and
mov
pop
jge
push
add
cs
xchg
pop
jne
and
mov
adc
push
cmc
jne
inc
out
cltd
jmp
in
dec
add
lret
jno
xor
loope
test
xchg
dec
loope
or
roll
fnstenv
mov
add
shl
out
sub
jp
push
pop
jmp
sbb
sub
jnp
imul
cmp
or
jp
push
pop
jmp
sbb
sub
jnp
imul
cmp
or
jp
push
pop
jmp
sbb
sub
jnp
pop
lret
mov
or
jp
push
pop
imul
lcall
test
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
inc
mov
addr16
mov
dec
enter
int3
adc
sbb
cmp
push
push
cwtl
addr16
mov
daa
call
xlat
sbb
and
cmp
xchg
pop
cmpsl
push
push
pop
xor
pop
clc
pop
nop
daa
loop
lret
hlt
cmp
sbb
rcrb
fstps
int3
xor
addr16
sbb
into
pushf
and
iret
cmp
push
rol
nop
rclb
mov
jnp
mov
fstl
push
fsts
lret
notl
sbb
or
pop
xchg
pop
lock
xor
pusha
icebp
add
and
and
orl
sub
xlat
mov
mov
inc
mov
or
faddl
call
dec
lea
sbb
popf
cmp
xlat
aad
xchg
addb
mov
xchg
inc
pop
sti
pop
fldenv
orl
and
idivl
mov
mov
push
stos
cwtl
aaa
stc
nop
pop
daa
dec
sbb
fists
and
sbb
mov
mov
pop
enter
call
xlat
mov
sub
add
je
mov
jo
dec
push
mov
testl
insl
gs
popf
xor
push
xchg
xchg
aaa
les
adc
into
xor
add
sbb
pop
lcall
mov
jp
or
or
push
js
les
aam
test
fsubs
call
xlat
sbb
sub
cmp
push
push
cwtl
addr16
mov
daa
call
xlat
sbb
sub
cmp
push
jb
cli
aad
push
stc
scas
mov
jns
sbb
out
jne
les
enter
mov
ljmp
jge
jno
mov
pop
repnz
mov
mov
in
mov
dec
xchg
xchg
inc
pop
inc
mov
js
sti
inc
clc
adc
dec
mov
jno
sahf
xor
adc
mov
inc
lock
aaa
sbb
xlat
adc
inc
in
stc
mov
ret
mov
jmp
push
add
jl
cltd
cli
jmp
jns
xorl
outsb
mov
lock
cmpsl
popa
pop
leave
stc
addr16
stc
or
mov
rolb
iret
loopne
fmull
cltd
jns
pushf
xchg
loope
pop
sahf
push
xchg
sub
outsb
pop
xchg
xchg
js
add
insb
loop
add
bound
push
iret
inc
dec
loopne
cwtl
jge
out
in
or
hlt
ret
cwtl
dec
inc
jns
inc
mov
or
add
lods
ret
clc
cld
std
dec
pusha
xorb
sbb
sbb
pop
push
inc
adc
mov
sub
rol
mov
push
cld
jp
inc
fdivrl
fnsave
cmpsl
or
test
cmc
sti
push
xor
movsb
push
call
out
xchg
pop
jbe
popf
xor
lods
mov
loop
xor
dec
dec
cltd
nop
cmpsb
sbb
xchg
in
out
shrb
enter
jns
mov
pop
sti
sub
scas
lods
cmp
aam
sub
jb
mov
sub
std
inc
in
mov
nop
fwait
and
mov
push
inc
mov
jae
loop
inc
ss
ret
push
es
scas
jmp
mov
mov
jnp
outsl
xchg
xchg
add
pop
sbb
sbb
loope
adc
push
and
sub
xor
mov
mov
jb
cs
pop
adc
xlat
mov
cmpsb
mov
test
cmp
fldt
pusha
test
add
scas
sbb
mov
mov
aad
call
cmp
xor
or
and
popf
pop
jecxz
lahf
mov
dec
scas
ljmp
add
mov
fs
mov
jns
popf
mov
aad
ds
int3
add
fdivp
cmp
popa
jnp
pop
ret
mov
push
jb
mov
jno
jge
das
mov
jp
imul
loope
fstpt
xor
sbb
loop
pop
inc
jmp
and
fcomps
and
jg
andl
sub
mov
xchg
lods
xchg
mov
fistpll
jae
hlt
les
aas
popf
fcmovnbe
test
mov
stos
mov
popa
fisttps
cltd
pop
mov
ja
xor
jg
js
rcll
shl
xlat
lds
mov
mov
cmp
mov
into
ret
and
in
push
sahf
cmpsb
jno
pop
mov
jp
cli
stc
aas
mov
mov
mov
jmp
pop
jb
pop
cmp
inc
test
push
sysret
stos
mov
inc
mov
fisubrs
es
mov
push
into
xor
daa
leave
lods
out
lods
clc
rolb
mov
adc
cmp
mov
mov
fbld
or
scas
repnz
pushf
jg
icebp
mov
dec
je
sbb
test
and
jle
in
cmp
out
jle
out
lahf
add
cmc
xor
or
push
push
jecxz
loopne
mov
sub
rorb
out
adc
push
aam
sub
jecxz
imul
mov
inc
add
push
push
fstpt
xor
icebp
dec
out
push
inc
pop
pop
push
and
aam
cmpsl
pop
lcall
leave
insb
setp
pop
xor
push
push
mov
mov
cmp
or
mov
mov
cmc
rorl
jle
out
rcll
les
les
sbb
xchg
imul
pop
shrl
xchg
test
fsubr
sbb
adc
xor
popf
mov
fidivs
push
cmpsl
dec
in
sarb
dec
xchg
xchg
mov
push
inc
push
dec
enter
inc
add
mov
cmp
mov
push
cmc
push
ret
push
fcoms
pop
out
add
cs
outsb
aad
sbb
add
mov
sbb
decl
fildll
sub
adc
xor
outsl
sarl
mov
inc
push
inc
pop
add
sbb
lea
or
inc
ds
cmp
mov
jge
xor
jmp
sti
in
mov
movsb
mov
mov
loopne
dec
rcr
scas
hlt
shrl
test
test
xor
push
or
aas
popa
mov
test
vpmuludq
xlat
xor
lret
je
push
lea
sbb
jge
pop
rcll
adc
mov
imul
and
mov
xchg
cwtl
fistpl
cltd
mov
jns
mov
mov
ret
out
and
insb
pop
lods
or
aam
test
mov
adc
xchg
push
es
jb
daa
shl
add
in
mov
mov
sub
leave
fwait
sub
aaa
mov
lcall
mov
dec
fildll
jl
sbb
ficompl
ja
xorl
push
vcvtps2dq
not
dec
rorl
xor
rorb
mulb
push
pop
rcrl
adcl
je
or
jge
bound
push
adc
bound
xchg
jmp
add
push
mov
addr16
bnd
jecxz,pn
mov
cli
pop
ds
js
int3
call
jae
inc
test
mov
out
lds
cmp
xchg
fwait
sbb
xchg
daa
cmpsl
test
mov
inc
xor
in
mov
shrl
in
mov
adc
loopne
cmp
pop
jg
aas
enter
outsb
xchg
inc
data16
iret
sarl
sbb
mov
hlt
pop
andb
pop
jecxz
sub
push
jae
test
mov
pop
jg
aaa
es
inc
andl
mov
and
xor
adc
stc
lea
xchg
mov
xchg
nop
push
add
stos
arpl
sbb
jmp
popf
cmp
xor
frstor
add
xchg
fcmovu
out
xchg
mov
loope
xor
ret
addr16
ss
mov
out
cmp
mov
test
pop
mov
fwait
mov
in
int3
mov
or
into
movl
adc
inc
pusha
cmpb
mov
insb
and
arpl
adc
pushf
addr16
in
and
packuswb
inc
scas
pop
sbb
rep
mov
cwtl
xchg
sahf
adc
lcall
out
aaa
adcb
stc
push
outsb
mov
adc
stos
stc
push
popf
in
hlt
incl
sahf
pusha
and
inc
std
dec
pop
push
sbb
jmp
lods
in
xor
std
cmp
jl
pop
mov
dec
xor
cmpsb
ret
mov
out
sbb
pop
push
notl
xorb
dec
adc
push
jecxz
iret
nop
mov
xor
push
mov
sbb
pop
movsb
adc
pop
iret
adc
sub
cmpl
mov
rcrl
test
gs
testl
push
das
push
insb
inc
mov
add
jg
dec
mov
xor
sub
rclb
inc
ret
nop
mov
inc
ss
outsb
dec
fisttps
mov
lcall
mov
mov
inc
cmpsl
sub
loopne
ds
outsl
and
xchg
int3
push
out
jb
ja
fwait
xchg
xor
ss
push
xor
push
sbb
scas
and
scas
and
movsb
ss
and
ds
push
mov
sub
push
and
and
inc
adc
fmull
loopne
fsubl
cmp
mov
dec
inc
aas
mull
loop
and
mov
xchg
mov
fnstcw
imul
sbb
sbb
ja
addr16
push
scas
push
xlat
jle
push
cmp
lods
mov
sbb
mov
ret
mov
bound
leave
mov
dec
jmp
jo
push
xor
inc
push
call
repz
adc
lods
lret
lea
arpl
lock
mov
fisubrs
mov
sub
sub
jl
xchg
hlt
outsb
lds
jecxz
inc
cmp
outsl
pop
repnz
adc
ret
jno
test
dec
rorl
push
and
push
cmp
cmp
pop
lcall
mov
pop
mov
clc
push
hlt
fsub
iret
clc
insb
lods
dec
pop
lcall
rol
and
scas
cmp
pop
xor
add
imul
mov
pusha
icebp
lock
lcall
mov
dec
sbb
cmp
cmp
mov
pushf
and
rorl
dec
ficoms
rorb
cmp
repnz
test
in
sbb
enter
es
lahf
pcmpgtb
fimull
cmc
adc
xor
lds
clc
jae
add
mov
and
push
loopne
xor
add
sub
fstps
data16
les
and
outsl
pop
sub
sahf
jno
sbb
cmp
mov
and
xchg
mov
aam
push
jg
sbb
out
sbb
jle
add
jmp
sbb
xchg
cmp
mov
jnp
lret
aad
std
xchg
push
mov
mov
sub
shlb
jbe
add
mov
enter
invd
ret
repz
pop
aam
sahf
sbb
clc
shl
dec
mov
jns
inc
add
enter
push
cmp
sub
faddl
out
xor
sub
sub
or
fdiv
add
imul
ror
inc
fsubrs
aad
test
mov
pushf
scas
test
and
add
cmp
lcall
in
into
push
ret
cltd
mov
pop
jns
fcomip
imul
inc
addr16
xchg
prefetch
push
mov
pusha
in
mov
push
mov
fs
aas
mov
mov
enter
out
cmp
sahf
loopne
inc
out
stos
cs
adc
mov
jmp
outsb
aas
fwait
jp
xchg
cmpsb
add
sub
mov
mov
popa
add
xor
in
pop
test
mov
in
cmp
and
dec
fstpl
add
sahf
aaa
test
xchg
or
test
cld
push
pop
cmp
pop
inc
cmpsb
or
xchg
jns
loop
out
sahf
xchg
cwtl
mov
adc
xchg
jo
or
jns
insb
call
dec
mov
mov
sahf
insl
fisubs
and
sbb
add
outsl
into
jp
jp
dec
inc
out
ret
sbb
add
add
in
ja
stc
idivb
movsb
daa
inc
mov
add
jp
out
imul
pop
gs
loopne
in
or
push
and
adc
mov
idivl
jno
or
mov
mov
stos
or
rorb
xor
cmp
jo
adc
push
mov
test
imul
out
test
push
push
rcll
inc
jb
jle
sbb
mov
xlat
dec
xchg
jle
lea
fdivrl
cmc
xchg
xchg
dec
jle
outsb
cmp
ficoml
mov
or
js
popf
lahf
sbbb
int
mov
dec
bound
xchg
cld
test
push
cwtl
push
shl
enter
and
push
clc
push
sbb
rorb
out
aaa
stos
popa
or
loopne
sbb
mov
push
cmpsl
aaa
adcb
movsb
inc
cmc
loopne
xchg
sti
xchg
shrb
sarb
rcrl
xor
out
ret
lahf
jg
int
pop
ljmp
and
das
js
pop
xchg
or
int
test
popf
jmp
aas
inc
hlt
push
inc
add
sbb
sub
mov
cmp
jo
mov
jb
inc
dec
hlt
aaa
push
mov
fimuls
jmp
fnstcw
xchg
fstpt
lahf
clc
mov
ret
or
adc
cltd
pushf
and
fwait
mov
mov
iret
ljmp
ret
jmp
aaa
mov
or
cmc
aam
aaa
mov
push
or
cmp
int3
lret
int3
out
rorl
int
push
xchg
lcall
out
out
cmpb
sarb
mov
inc
ficoml
lea
aas
add
fisttpl
fisubrl
sbb
lods
push
in
inc
mov
pop
sbb
loopne
lret
sti
daa
pop
sub
int3
int
mov
cmc
lods
mov
pop
insb
gs
xor
cmp
xchg
sub
fdivrl
in
mov
push
cmp
xchg
push
sub
sub
adc
in
std
add
mov
imulb
ret
xlat
notl
pop
sbb
scas
or
mov
out
inc
push
and
xlat
pop
pop
lea
sbb
nop
rcll
sbb
or
mov
or
popa
jl
push
es
lret
pop
pusha
sbb
in
out
into
jnp
push
jge
lea
sti
les
lods
testb
ret
jle
outsl
repnz
xor
aas
stos
or
dec
pop
shrl
fbstp
inc
xchg
pop
int
push
pop
mov
xor
clc
jmp
fcomps
pop
or
inc
stos
dec
xchg
ret
push
push
xor
push
rorb
mov
xor
lcallw
in
or
sbb
mov
mov
jbe
add
pop
add
aam
das
out
sti
js
nop
pushf
mov
push
rcr
jne
or
lea
sub
jle
fs
mov
inc
cmpsl
fdiv
push
jb
cltd
insl
or
ret
hlt
ljmp
mov
and
call
inc
pusha
insl
stc
mov
and
mov
std
sbb
mov
mov
lret
lahf
mov
dec
test
inc
push
push
cmp
mov
scas
xor
xor
or
pop
outsl
add
test
rclb
cli
pop
mov
into
sub
mov
or
fdivp
lods
test
aaa
lahf
adc
popa
stos
jns
clc
xchg
jl
inc
jne
repnz
pop
loopne
sub
fsubr
or
adc
shlb
push
jle
adcl
outsb
cs
and
inc
pop
dec
je
and
inc
dec
dec
filds
xchg
inc
mov
rdpmc
xchg
mov
mov
or
sub
mov
add
jo
sub
xchg
hlt
mov
adc
movsb
or
fistpl
pop
rcrb
sbb
jae
ja
add
push
or
fidivrs
or
xor
cltd
jbe
cld
in
inc
jbe
xor
push
int3
push
mov
add
cmp
xlat
data16
jbe
cmp
out
pop
or
xchg
jae
inc
add
push
sbb
jmp
je
cld
pop
xchg
mov
xor
fldcw
fs
enter
mov
lds
xor
test
sbb
loop
xlat
enter
ds
cmp
mov
shl
inc
movsb
ljmp
dec
lea
mov
push
push
mov
jge
aad
testb
push
and
ja
test
fists
ljmp
test
shrb
xchg
cli
dec
push
ficoms
add
adc
mov
sbb
mov
sub
fwait
popf
pop
iret
mov
idiv
ja
xlat
fimull
and
jl
jne
add
adc
out
jbe
fwait
das
sbb
fmul
xchg
cltd
fmuls
jl
lcall
movsl
pop
pop
aam
and
cmpsl
dec
lock
sbb
pop
std
mov
std
pop
push
aad
mov
subb
mov
sub
cltd
xchg
mov
xor
lret
pop
adc
push
out
jp
aam
ret
dec
jmp
or
out
rolb
pop
shll
xor
push
les
xor
mov
mov
lret
jae
cli
mov
cmpsl
jecxz
cli
xchg
shll
push
add
mov
movsb
loop
out
and
pop
outsl
sarl
xor
mov
push
pusha
inc
push
gs
adc
jg
aaa
cs
in
mov
fstps
dec
dec
cmp
ficoml
in
cmpsb
stos
inc
jmp
subl
std
test
cmpsb
pop
jmp
sar
andl
dec
mov
test
adc
mov
adc
movsb
popf
pop
pop
mov
cli
out
jbe
mov
cmpsb
inc
loop
imulb
repnz
dec
das
divb
mov
cld
pop
les
jge
adc
outsb
mov
mov
adc
test
sub
mov
imul
mov
inc
add
xchg
or
js
fnstsw
lods
mov
lret
cmpsb
aas
adc
xchg
jae
inc
pop
xchg
jge
fcomps
sub
cmp
xor
into
jle
mov
push
je
inc
pop
jns
sub
xlat
cmpsl
mov
pop
mov
int3
add
in
mov
mov
push
mov
or
xchg
xchg
ljmp
xchg
xchg
mov
jg
fnstenv
lret
push
add
in
add
sub
and
mov
movsb
and
or
xor
jne
adc
xor
pop
xor
sarb
push
lret
pop
into
int3
push
inc
cmp
ret
sbb
jmp
push
movsl
cmp
cmp
addl
js
cmc
movsb
add
popf
inc
insl
xor
fwait
enterw
sbb
sti
cmp
fwait
and
mov
iret
and
xor
inc
adc
fwait
imul
jg
xor
aas
xchg
addr16
jge
add
adc
icebp
cli
dec
xchg
adc
test
push
adc
push
xor
xlat
sbb
je
dec
fnstenv
pop
xchg
idivb
push
je
rcl
mov
xor
sbb
enter
adc
pop
cmp
bound
jge
fstp
mov
mov
mov
arpl
sub
xchg
lret
lds
subb
das
clc
or
jl
sub
sbb
sbb
lret
mov
inc
jp
ret
stos
adc
fsubrl
mov
cli
div
or
dec
enter
lods
mov
sub
in
pusha
pop
nop
xchg
mov
mov
lret
out
inc
xchg
mov
jg
imul
pop
mov
sti
or
mov
call
adc
mov
cmp
js
mov
test
push
push
jnp
inc
xor
sbb
and
mov
and
mov
mov
xchg
cmp
shr
cmp
out
fimuls
sub
into
stos
push
roll
sbb
ljmp
ljmp
stc
rcrb
fcoms
pop
mov
cld
ja
fisttpl
iret
ds
sub
sbb
jg
mov
xchg
dec
or
loopne
out
lock
ss
aad
outsl
lcall
test
inc
dec
int3
jno
insl
sub
pop
pop
and
mov
ja
les
mov
mov
xchg
loope
and
je
pusha
inc
sub
insb
mov
mov
pop
ss
jge
push
repz
ret
test
push
sub
shlb
mov
mov
in
pushf
add
sarb
rol
movsl
gs
push
or
fbld
sti
mov
aaa
ret
xchg
push
out
xor
sbb
dec
out
mov
jmp
scas
imul
adc
inc
and
cmpsb
fwait
pushf
mov
int3
mov
push
popa
roll
mov
testb
cwtl
mov
mov
jg
into
inc
add
pop
sbb
lcall
int3
cld
out
repnz
js
sub
mov
pushf
inc
in
push
xchg
aam
mov
shrb
mov
fildl
xchg
dec
adc
shll
pop
into
mov
adc
fistps
sub
inc
iret
add
mov
xor
adc
imul
jmp
std
cmp
test
push
in
push
outsb
and
dec
pop
out
loopne
ljmp
sbb
roll
adc
mov
arpl
cmpsl
fnstenv
cmp
xor
adc
pop
pop
int
daa
add
nop
into
ret
sbb
mov
mov
mov
pusha
fs
jg
fxch
stc
and
out
arpl
adc
dec
je
dec
fisubs
iret
and
out
imul
push
xchg
arpl
popa
jmp
mov
loope
dec
xor
fsts
call
add
sbb
lcall
cwtl
push
or
xorps
test
sbb
push
add
add
dec
repnz
push
pop
repnz
cli
imul
jno
imul
cmp
xchg
adc
ja
pop
enter
call
xlat
sbb
sub
cmp
push
push
cwtl
addr16
mov
daa
call
xlat
sbb
sub
cmp
push
xlat
xchg
out
ja
xchg
pop
mov
in
mov
or
sbb
sub
xor
popa
mov
inc
insb
push
jl
dec
ja
pop
enter
push
xlat
mov
sub
dec
divl
out
xlat
adc
add
test
outsb
sbb
bound
xor
cld
sti
mov
out
jmp
scas
fdivrl
or
sbb
insb
push
jl
dec
cs
dec
cld
ret
mov
cld
cwtl
pushf
int3
scas
fdivrl
mov
data16
xor
pusha
movsb
and
into
sar
ljmp
ljmp
sbb
dec
or
out
cmp
dec
int
rcrl
ljmp
mov
and
aam
addr16
cs
sub
rcr
shrl
inc
and
ja
imul
push
inc
jl
sub
or
pushf
and
test
arpl
into
inc
fidivs
bound
adc
jno
aas
scas
cmp
adc
xchg
dec
sub
dec
pop
pop
mov
pushf
adc
popa
mov
sbb
push
and
repz
fmull
xchg
into
ljmp
es
insb
xor
and
lahf
inc
pop
mov
mov
cmp
repz
mov
mov
push
cmpsb
inc
mov
adc
mov
dec
or
jo
insb
push
cmp
dec
cs
pop
into
cs
push
testl
mov
dec
or
add
jg
inc
cmp
ljmp
mov
daa
mov
dec
sbb
sbb
or
mov
lock
lahf
cltd
sahf
mov
dec
divps
cmp
cmp
pop
lods
into
mov
in
mov
sahf
int3
scas
fdivrl
or
sbb
insb
push
jl
dec
cs
lods
into
mov
in
mov
sahf
int3
scas
fdivrl
movsb
jmp
sbb
sti
pusha
cmpsl
pop
xor
in
sbb
scas
push
mov
inc
jl
sbb
push
subb
aam
pop
dec
ret
jmp
mov
mov
mov
dec
mov
jg
jns
repnz
inc
mov
mov
xchg
pop
xor
add
decl
shlb
sub
mov
or
rcll
pusha
jmp
call
repnz
daa
push
icebp
mov
loop
stos
outsl
fsubrl
jnp
loop
bound
pop
fwait
pop
add
jbe
icebp
insb
pop
stc
outsb
call
adc
push
enter
and
dec
lds
imul
xchg
xlat
setae
xor
dec
test
ret
paddw
lea
pop
jae
rcr
pop
into
and
pop
fcomi
adc
dec
fistps
lahf
je
enter
call
fs
rclb
jl
mov
mov
hlt
or
pop
mov
jo
fnstenv
sub
shll
mov
pop
repz
leave
int3
pop
out
into
push
and
iret
testl
insb
lahf
add
or
mov
stos
or
xchg
mov
sub
fldenv
push
or
imul
lea
inc
imull
xor
mov
jge
xchg
mov
cmp
cmp
push
pop
sbb
fdivrl
lods
stc
out
ret
mov
scas
dec
jg
inc
popa
addb
outsb
inc
inc
fistl
lods
test
cld
lret
inc
xor
int
cmp
loope
pushl
lret
mov
mov
cld
pop
addr16
ja
push
das
or
mov
jns
jl
jno
fstpl
mov
sub
sbb
pmuludq
es
in
sub
std
mulb
inc
fmull
lea
mov
cmp
repz
lret
mov
nop
push
jns
adc
cld
scas
mov
andb
xchg
xchg
cmpsb
arpl
inc
jge
push
mov
xchg
push
add
fdivrl
out
in
mov
adc
mov
cmpsb
int3
xor
and
mov
xor
loop
jl
je
add
lea
out
jle
xor
stc
jae
add
and
and
mov
cmc
mov
inc
cmp
imul
inc
bound
dec
stc
mov
jl
push
cmc
pop
movsb
sti
cmpsl
ja
movsl
clc
push
push
int3
ret
cltd
push
inc
cmp
mov
shrl
cmp
mov
cmp
movsb
fdiv
pop
push
mov
cmc
mov
jns
xchg
sbb
pop
mov
cwtl
notb
scas
sbb
data16
and
mov
dec
loopne
lea
jne
cld
mov
fs
lret
mov
mov
mov
loope
add
adc
leave
js
popw
jbe
mov
in
ret
push
das
stos
add
or
cmp
fcmovb
loope
add
scas
comiss
inc
sbb
pusha
arpl
mov
push
sti
dec
sub
adc
adc
jecxz
mov
pop
gs
mov
call
pushf
jo
jge
lret
fcomp
mov
lret
out
rcrb
aad
xchg
ret
xlat
xchg
push
cmp
ja
mov
fcompl
into
xor
popa
mov
sub
inc
inc
pop
mov
xchg
sbb
idivl
push
inc
cs
mov
mov
clc
lea
ljmp
adc
hlt
repz
leave
rclb
js
jnp
in
jbe
in
mov
test
mov
shlb
mov
fdivl
add
sbb
pop
and
aad
sub
pop
sbb
sbb
sbb
sti
popf
jmp
mov
xchg
test
jmp
push
subb
leave
aam
cmp
fsubrl
add
fwait
add
push
mov
js
xchg
xchg
mov
mov
test
ds
adc
je
lock
cmpsb
pop
fwait
aam
sahf
xor
dec
mov
pop
mov
sti
ja
pop
sub
adc
aaa
cmpsl
sub
xchg
mov
mov
push
idivb
sub
add
clc
jge
sarl
repnz
jmp
mov
icebp
cmp
mov
popf
inc
sub
xor
insb
lret
sar
in
inc
jge
or
movb
mov
rcrl
cmp
test
sub
push
cmp
lcall
jg
mov
pop
cmp
mov
sub
dec
xchg
stc
lock
push
push
faddl
dec
adc
imul
pop
mov
push
fsubs
or
out
or
inc
out
roll
sub
jmp
sahf
pusha
dec
ja
jb
fucomi
jg
inc
push
add
sahf
xor
and
jecxz
jb
sub
push
mov
inc
stos
movsb
sbb
sarl
sub
test
xchg
scas
adc
in
sahf
leave
push
filds
ss
das
push
int3
push
inc
inc
addr16
rorl
testl
out
pop
xor
xchg
incl
adcl
xor
movsb
scas
or
mov
push
mov
inc
dec
push
pop
or
adc
push
testb
rorb
nop
xor
pop
lret
fisubl
pop
icebp
xchg
ret
jge
add
adc
fnstcw
sub
or
icebp
fcoml
dec
cmp
popf
pop
jbe
mov
test
leave
sarb
sbb
mov
popf
pusha
mov
jns
pop
mov
ja
xlat
adc
jg
cmp
pop
hlt
sbb
cmpsl
in
cwtl
mov
popa
adc
out
rol
xor
loopne
das
jmp
stos
mov
test
rorl
xchg
xchg
jecxz
cmp
ljmp
daa
mov
mov
rcll
arpl
sbb
fwait
jnp
test
mov
notb
iret
mov
popa
iret
pop
nop
sub
xchg
std
pop
adc
pop
xchg
mov
fsub
lods
xor
inc
pop
push
sahf
dec
dec
movsl
mov
add
imul
mov
pop
call
cmc
out
dec
aam
dec
jl
lds
aam
fimull
in
fwait
fs
mov
adc
mov
test
cmp
mov
or
mov
xor
mov
push
sbb
shlb
out
adc
movl
dec
xor
cmp
mov
out
dec
daa
popa
sbb
mov
adc
sbb
xor
inc
mov
lds
pushf
lds
jae
inc
rorl
inc
add
cli
xchg
insb
cmp
dec
dec
out
pop
sbb
cmp
fnstsw
mov
nop
adc
xlat
or
gs
mov
and
push
arpl
mov
jp
inc
push
xchg
xchg
jb
fldcw
push
das
xor
ja
and
add
jb
jl
or
dec
out
inc
or
or
jle
push
cmpsl
pop
outsb
pop
dec
xlat
outsl
push
rcl
xor
enter
mov
push
lret
pop
fcmovne
sbb
pushw
jo
xchg
jl
in
cmp
repnz
lahf
addr16
rclb
pop
push
inc
mov
out
les
clc
pop
mov
inc
stos
lods
adc
into
adc
cmp
imul
mov
jg
lods
idiv
addr16
fs
stc
jp
xchg
or
outsb
fidivrs
fwait
into
pop
addr16
add
scas
in
mov
sbb
sub
arpl
aaa
mov
cmp
dec
ds
add
addl
pop
sub
roll
and
test
mov
cmp
mov
or
sbb
lcall
and
shlb
call
pop
dec
jne
add
pop
cwtl
inc
cmp
adc
aad
lods
mov
arpl
daa
push
jl
xlat
mov
cmp
xchg
fcmovnu
adc
push
lret
in
jne
inc
mov
aas
xchg
sub
mov
lret
add
cld
movsb
push
xchg
xchg
adc
dec
sbbb
cli
leave
addb
and
xchg
sub
push
les
sub
jg
lock
stc
jae
insl
pop
inc
and
das
sti
or
je
mov
push
in
jne
xchg
subl
cwtl
daa
in
dec
cld
pop
int
xchg
jmp
cli
mov
aas
cltd
rcll
aad
mov
mov
aam
cmpl
add
inc
cmpsb
xchg
xchg
dec
out
aam
push
lcall
in
sti
lret
scas
hlt
sarb
rol
or
mov
in
js,pn
lcall
clc
inc
xor
loop
pop
movsb
fprem
lds
cli
nop
lahf
mov
in
aam
scas
jecxz
pshufw
test
pop
xchg
jmp
outsl
add
orl
mov
add
outsl
lds
jo
push
jb
cmp
hlt
bound
cli
jns
cmp
push
inc
mov
and
fst
jne
outsb
sbb
lahf
adc
ds
xor
sub
inc
push
sti
in
mov
pop
jbe
inc
out
or
mov
add
enter
arpl
pop
les
xchg
outsb
ret
ja
pop
sbb
imul
add
push
leave
push
rclb
insl
pop
xor
lahf
add
lret
nop
cmp
arpl
or
fsubl
and
dec
pushf
inc
test
or
push
pop
scas
bound
cmpsb
sbb
adc
xchg
sub
mov
cmc
mov
sahf
or
cli
jo
lret
je
andl
pop
dec
cmp
scas
pusha
movsl
jnp
repnz
xor
fwait
aad
sbb
mov
xor
add
movsb
xchg
sarl
popf
out
popa
ljmp
pop
xor
xchg
or
jo
shl
mov
inc
mov
push
insb
and
pop
sbb
jp
xchg
adcb
mov
cwtl
subb
iret
xor
cs
xchg
leave
xor
bound
cmp
repz
mov
loope
loope
dec
enter
sbbb
and
movsl
pop
movsb
lcall
out
test
xlat
pop
iret
mov
test
sahf
into
cmc
stc
frndint
inc
push
sti
push
mov
call
xor
in
or
sahf
mov
xchg
add
test
xchg
push
pop
scas
mov
decl
jg
push
movsb
xor
push
mov
scas
lods
jl
arpl
push
jge
dec
cli
adc
fsubr
repz
insb
and
mov
ret
movsb
cmp
loop
mov
dec
sub
aaa
sti
xchg
rcrb
in
mov
lods
imul
sub
dec
mov
movsb
idivl
mov
leave
cmpsl
es
cmpl
stos
xlat
and
sarb
xchg
lds
stc
or
decb
push
ljmp
fsubrs
mov
movsl
leave
add
test
jnp
cmp
mov
je
mov
in
cwtl
stos
xor
pusha
mov
jecxz
add
sub
or
mov
or
test
cmp
es
scas
jns
into
pusha
dec
int3
ds
and
aad
movsl
aaa
jae
jne
ss
pop
stos
leave
pop
adc
mov
inc
xor
je
ret
adc
xor
sub
std
nop
lods
das
mov
mov
dec
loope
push
jmp
adc
dec
shll
addb
aaa
mov
std
stos
and
ret
aaa
and
adc
lea
pop
aam
imul
pop
sub
dec
mov
jbe
cmp
loopne
repz
add
jge
add
adc
adc
fnstcw
mov
jecxz
mov
dec
jns
sbb
cli
add
inc
xor
std
cs
mov
daa
inc
push
xor
fisubrs
data16
mov
add
scas
mov
test
cmc
jp
iret
push
fidivrs
mov
inc
movsb
push
gs
cmp
adc
icebp
or
test
mov
ror
aaa
test
je
cmpsl
mov
sbb
xor
inc
sub
lret
gs
mov
add
rcrb
ret
fxch
icebp
adc
jmp
sub
fcompl
imul
mov
push
push
and
adc
push
mov
gs
pop
xchg
sub
inc
push
sub
mov
arpl
addr16
xchg
xchg
jle
mov
mov
les
popa
pop
pop
clc
jo
imul
pop
xor
daa
lret
xchg
and
pop
sti
mov
dec
je
les
fwait
ds
sbb
test
lret
pop
into
lock
mov
mov
fldt
jg
addb
std
mov
and
cmp
jg,pt
std
pop
mov
cld
hlt
add
sbb
fwait
dec
add
rolb
jmp
sub
sarl
cmp
cmp
shrl
outsb
inc
and
add
push
fadd
sahf
jp
stos
div
cmp
sub
mov
sbb
es
xchg
fimuls
and
scas
jo
in
jae
and
cmpsb
std
inc
mov
or
fcmovnb
xchg
testb
cmp
insb
mov
sbb
mov
adc
mov
jmp
adc
jno
fdivrp
and
xchg
dec
inc
aaa
insb
rolb
outsb
jle
pop
leave
inc
iret
jle
hlt
mov
arpl
inc
or
adc
pop
mov
mov
icebp
outsl
loope
cmpsb
cs
cmp
aad
mov
movsb
lcall
mov
push
pusha
imul
je
push
mov
xchg
mov
push
mov
fldt
lcall
in
test
rorl
cs
cmpsb
add
adc
mov
orb
inc
dec
loop
xchg
pop
fidivrl
shl
add
push
test
cmp
push
nop
push
cli
sub
add
shrb
push
ljmp
outsb
loope
xor
int
popa
mov
dec
les
jns
push
test
mov
iret
pushf
imul
mov
mov
stos
xor
mov
cltd
sbb
xchg
mov
or
sbb
push
fmuls
repz
movsb
pusha
gs
popa
xchg
insl
in
cmpsl
jge
xchg
pop
outsl
or
mov
arpl
and
pop
jl
pushf
imulb
push
pop
or
xchg
in
scas
in
in
pop
jbe
test
mov
mov
mov
push
pop
pop
or
inc
sbbb
popa
jp
cmp
loope
stos
repnz
adc
enter
jg
cmp
jl
bswap
popf
pop
lahf
xor
daa
sub
lcall
pop
ja
xchg
ja
movl
dec
insb
je
scas
push
pop
add
mov
leave
push
iret
inc
test
or
xor
imul
jae
out
in
push
divb
xchg
xchg
stos
lahf
push
sbb
push
cmpb
push
movsb
clc
sbb
inc
test
pop
pop
mov
jbe
test
test
jle
mov
popa
pop
push
push
bnd
or
daa
in
mov
xor
jle
mov
cmp
out
jae
mov
mov
pop
idivb
fisubrl
mov
cmp
fstpl
sub
stos
pop
in
test
xor
fisubrl
clc
scas
mov
aas
jns
pop
idivl
or
push
btr
push
test
nop
in
adc
jns
call
push
in
xor
imul
mov
lds
les
push
in
int3
icebp
fnsave
fdivrs
or
mov
push
cltd
xchg
clc
sub
xchg
stos
push
mov
sbb
push
dec
xchg
mov
mov
js
push
into
in
sbb
fistpl
popf
pop
lret
test
or
and
std
dec
shrb
test
call
sbb
stc
scas
mov
fimuls
lock
fcmovb
shlb
outsb
xchg
dec
stos
adc
fbstp
cmp
push
mov
dec
popl
lret
mov
add
clc
mov
lods
sbb
aad
pop
sub
inc
test
xchg
push
cmp
icebp
leave
mov
mov
lds
cmpsl
adc
dec
sti
xor
sahf
sbb
cld
sbb
jl
sbb
pop
mov
xchg
mov
mov
or
pusha
fldl
sub
mov
dec
xor
cld
test
jbe
pop
outsb
jecxz
les
sbb
test
ss
xchg
je
out
in
sub
cld
in
cmp
mov
orl
out
mov
sub
xchg
sar
leave
sbb
dec
fistpll
daa
add
jb
sbb
xor
mov
jb
mov
xchg
jle
sbb
div
movsb
stos
and
cmc
pop
outsl
jo
in
jnp
movd
or
mov
push
std
js
xor
dec
and
sbb
adc
mov
xchg
fbstp
lret
xchg
pop
push
xchg
jp
inc
mov
int3
add
movsb
mov
pusha
iret
enter
xlat
and
outsb
rclb
popa
or
cmp
loope
jno
out
or
pop
lahf
add
or
out
clc
push
inc
fistl
and
cmp
lcall
fisubrl
fwait
cld
dec
mov
in
and
add
pop
fisttpll
inc
mov
shrl
sub
pop
mov
adc
cwtl
lcall
inc
sub
cmpsb
sub
jecxz
cmpsb
jmp
test
aam
sbb
scas
sbb
push
jae
sbb
xor
out
mov
repz
mov
cmpsl
sbb
jg
mov
xor
lods
xor
and
jno
nop
sub
ds
sub
mov
aas
sbb
call
test
fwait
ud1
add
mov
dec
xchg
cmpsl
mov
push
sbb
loop
pop
sbb
cli
lds
mov
jl
test
cmpsl
add
pop
mov
test
ss
mov
es
out
ret
jno
sub
or
bound
jnp
cld
mov
ss
or
fwait
adc
adc
mov
pop
rorl
lret
mov
clc
std
stos
adc
test
mov
negb
adc
test
imul
lods
mov
xchg
adc
pop
addr16
stc
mov
dec
adc
xchg
dec
mov
cmp
mov
jbe
add
shlb
mov
sbb
mov
lds
mov
jmp
add
dec
inc
jae
ss
movsb
jo
mov
inc
das
cmp
lock
and
push
or
out
push
cltd
adc
rcr
fdivr
fwait
dec
or
or
aad
aaa
jno
fdivrs
push
cmp
jl
or
ror
adc
ret
or
xor
cwtl
mov
stos
icebp
xor
movsl
sbb
mov
movsb
cwtl
enter
and
jbe
cmp
std
inc
and
mov
pop
pop
es
mov
gs
and
xchg
push
and
mov
or
leave
and
pushf
mov
int
add
lcall
jge
cmp
test
lods
ljmp
inc
lcall
arpl
jp
lods
mov
xor
neg
popa
jo
mov
outsl
pop
mov
cmp
dec
push
bound
icebp
jg
stc
jp
inc
imul
out
sarl
ret
inc
popa
jle
out
sbb
jae
cmpsb
or
je
pop
fwait
push
or
insb
lock
dec
ret
mov
ucomiss
dec
pop
int3
adc
xchg
ret
pop
in
in
dec
neg
and
sub
cmova
loope
clc
ret
lret
roll
out
xchg
jmp
loope
js
dec
incb
xchg
testb
sti
popa
mov
push
pop
jge
stc
or
jle
cmc
and
fists
out
imul
in
add
xor
outsb
inc
lahf
dec
rol
leave
fisubrs
stc
pop
xchg
bound
sub
cmp
cwtl
stos
stos
imul
inc
mov
das
mov
daa
xor
in
adc
cmp
push
cmp
inc
sbb
push
xchg
mov
popa
insl
sbb
scas
lcall
test
iret
push
ljmp
jl
loop
lds
xlat
test
sub
test
push
loop
fimuls
push
push
and
cmp
or
cmp
add
or
out
rorb
or
mov
das
shl
das
jae
ret
mov
lods
xor
inc
push
jb
mov
popf
repnz
mov
mov
push
jle
test
bound
mov
mov
sub
in
iret
jbe
adc
mov
nop
enter
inc
push
fstpl
scas
pop
out
pop
test
or
add
pop
fstl
cmp
jmp
lock
sub
outsb
add
push
jl
dec
cs
lods
into
mov
in
mov
sahf
int3
scas
fdivrl
or
sbb
insb
push
jl
dec
cs
lods
into
mov
in
mov
sahf
int3
scas
fdivrl
sbb
sbb
insl
push
js
dec
cs
ds
mov
cli
in
mov
sahf
enter
xor
adc
push
jle
push
insb
push
dec
cs
lods
into
inc
je
out
pushf
mov
shll
rcll
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
jg
inc
iret
icebp
adc
loop
mov
dec
jno
popa
adc
inc
pop
xor
and
sar
ror
scas
xchg
mov
mov
jno,pn
popa
das
adc
add
xor
and
sar
ror
scas
xchg
mov
mov
add
popa
dec
inc
push
gs
push
jo
lahf
sar
mov
xchg
or
je
lods
inc
out
dec
jl
inc
jno
and
stos
fstps
xchg
call
mov
imul
and
jno
pusha
rcl
rorb
pop
rolb
lea
mov
and
das
mov
xchg
adc
xor
inc
out
lock
scas
nop
xchg
xchg
outsl
pop
lahf
icebp
jg
mov
sahf
iret
inc
insb
push
pop
iret
adc
cmp
inc
xchg
mov
dec
lahf
testl
lea
jl
push
inc
mov
loopne
pop
push
cmp
pop
xchg
dec
pop
ja
ja
pop
and
scas
test
popa
pop
out
aas
cmc
push
and
and
icebp
scas
xchg
mov
mov
dec
jno
popa
das
adc
add
xor
addr16
mov
xchg
cmpsl
in
fcmovb
enter
pop
cmp
cmp
pop
jl
js
mov
inc
mov
mov
mov
hlt
fldt
cmp
daa
cmp
pop
inc
add
adc
xchg
out
std
mov
mov
dec
jno
popa
das
adc
add
xor
and
sar
ror
scas
xchg
mov
mov
dec
jno
popa
das
adc
add
xor
and
sar
aam
add
dec
imul
pusha
aad
sub
mov
sub
out
out
lods
adc
jo,pn
adc
imul
push
mov
sub
jg
mov
xchg
pop
pop
add
mov
mov
fldenv
pop
xor
pop
xchg
dec
cmp
push
adc
das
dec
test
arpl
lret
aas
xorb
adc
and
les
pop
mov
inc
dec
into
jecxz
xchg
inc
lea
xchg
add
push
jne
inc
outsb
rcrb
jnp
dec
cmc
lods
mov
imul
xchg
add
rolb
or
mov
push
lock
stos
cmc
arpl
jecxz
lcall
dec
mulb
pop
mov
seta
in
pop
mov
push
mov
xchg
les
sbb
mov
xor
cmpsb
scas
sbb
xchg
add
mov
cmp
or
jg
xor
adc
add
jg
mov
dec
add
pop
or
sub
dec
and
popa
mov
mov
sub
lahf
rclb
pop
pop
int
movsb
push
dec
inc
aad
sub
xchg
add
mov
hlt
jne
aad
pop
test
adc
push
xor
mov
popf
xor
jmp
stc
into
cwtl
sti
leave
mov
jecxz
xchg
stos
push
in
dec
cmp
gs
dec
int
repz
mov
or
lds
lock
enter
sbb
xchg
or
mov
mov
jle
push
loope
pop
sub
inc
jle
and
inc
push
inc
insb
jb
test
push
xchg
dec
inc
mov
push
ficomps
sbb
ljmp
mov
jp
jle
cli
test
mov
mov
mov
iret
jnp
sub
mov
mov
mov
bound
add
xchg
push
fnstsw
cmp
sbb
ds
daa
push
sbb
pop
xchg
sub
add
addr16
or
add
and
cs
call
repnz
push
out
aaa
ret
jle
int3
stos
into
mov
mov
jns
hlt
cmc
push
pcmpgtd
out
xor
pop
aaa
hlt
dec
add
pop
mov
cli
sub
mov
repz
icebp
decl
mov
push
sbb
or
mov
les
shll
inc
xor
sbb
sti
jp
ljmp
push
and
add
testb
aad
push
mov
movl
movl
les
das
mov
sbb
adc
test
sti
push
sub
test
rolb
jns
inc
sarb
hlt
dec
insb
mov
insl
hlt
fisttps
mov
out
lret
pop
add
adc
in
add
mov
dec
in
div
jge
loopne
xor
hlt
inc
into
mov
adc
stos
mov
mov
add
in
push
repz
imul
popf
lcall
push
int
ss
xchg
das
je
das
sub
push
addr16
add
xchg
xchg
or
int3
push
jmp
fsubrl
and
cli
movsb
idivb
test
icebp
cld
aaa
jg
cwtl
mov
in
push
rorl
lret
dec
adc
add
fs
mov
adc
push
push
addr16
sbb
cmpsl
adc
and
mov
pusha
daa
adc
pusha
xchg
sbb
inc
cmpsb
loope
test
pop
cmpsl
xor
stc
fdivl
out
adc
lock
mov
flds
test
in
pop
or
xor
xchg
and
adc
push
repnz
jbe
adc
incb
inc
aaa
ret
sysret
fcom
fwait
insb
repz
pop
or
inc
mov
adc
push
cmc
inc
lahf
mov
mov
mov
test
add
lea
insb
leave
adc
adc
call
pop
in
outsb
add
popa
dec
jae
xchg
daa
inc
push
imull
adc
inc
jb
xor
dec
jl
cs
dec
mov
push
mov
xor
and
jb
mov
cltd
mov
pop
push
pop
jb
aam
or
inc
xchg
jle
xchg
pop
int3
mov
gs
mov
sub
mov
stc
push
pop
push
xchg
mov
fisubrs
std
inc
inc
clc
jg
or
sub
scas
push
push
jl
mov
daa
leave
repnz
jo
jnp
clc
push
test
push
icebp
mov
out
xor
push
xchg
cld
add
movsb
arpl
fmulp
in
pusha
test
inc
flds
push
sbb
movsl
repnz
inc
fcoml
cli
es
cltd
imul
data16
xor
aam
mov
or
adcl
sub
push
pand
sbb
add
cmp
sbb
adc
jmp
pop
inc
rcrb
fcompl
ret
jl
jno
pop
aaa
dec
bound
jns
sbb
xchg
and
sbb
cmc
rcrl
cmp
sub
sub
leave
or
pushf
mov
sub
push
push
mov
sbb
xor
inc
add
push
rorl
push
sahf
xor
loop
icebp
pop
enter
jp
jns
push
test
mov
bound
mov
inc
or
or
add
push
test
push
inc
dec
cmpsl
xor
sbb
filds
or
push
stos
outsb
movsl
jae
sub
negl
sub
scas
fs
mov
pop
movsb
push
stos
movsl
jb
sbb
bnd
mov
or
lret
je
pop
fidivs
test
mov
fists
fidivrl
popf
mov
push
jecxz
jns
inc
push
pushf
hlt
fldenv
cmc
rclb
push
ljmp
icebp
inc
mov
jp
mov
mov
jle
sub
icebp
mov
or
lock
outsl
mov
int
mov
pop
mov
cmp
cld
xlat
xor
mov
mov
int
fiaddl
aam
inc
jmp
push
dec
int3
aas
lods
sub
mov
pop
loope
push
jle
movsb
loop
aam
pushf
test
xor
pop
lock
adc
test
sub
ret
xchg
hlt
mov
gs
mov
xchg
sti
mov
mov
movsb
test
mov
xlat
cmp
xchg
bound
clc
pop
inc
imulb
cmp
or
jo
scas
aas
mov
cmc
sbb
pop
cmp
lds
test
cmp
sub
pop
shl
ds
xor
mov
cmp
rolb
inc
lods
inc
sub
loope,pt
dec
dec
xor
fimull
sub
and
rolb
sub
aas
ficoml
xchg
mov
lret
clc
rcr
xchg
push
insb
mov
lahf
add
jmp
push
jmp
inc
lret
or
cmp
push
jae
ja
cs
js
push
roll
cmp
mov
fmul
aam
sbb
andl
int3
or
push
xchg
dec
addr16
jecxz
dec
cmp
stos
jg
inc
sub
sbb
add
ljmp
test
aad
push
es
gs
cmpsl
test
fimuls
int3
pop
mov
sbb
rcr
cmpb
fcmovnb
push
mov
mov
ret
add
pusha
insb
stc
pop
sahf
dec
xchg
mov
pushf
call
test
cmc
rcrb
ja
into
mov
aad
xor
add
mov
dec
jmp
lret
je
push
aam
negl
fwait
repnz
scas
lret
fiadds
call
add
adc
mov
sub
pop
fs
or
in
jbe
inc
and
fcomps
mov
scas
ret
mov
lcall
and
sbb
js
outsl
and
test
mov
push
aas
popa
lret
push
rcr
int3
sbb
lds
sarb
sbb
mov
es
cmp
cltd
cmp
stc
jne
repz
sub
pop
mov
or
loope
push
out
outsb
pop
aaa
or
fcompl
add
push
ret
cltd
mov
push
lahf
pop
arpl
lods
sbbl
cmp
mov
sbb
pop
push
lahf
adc
orl
cs
sbb
push
cmp
mov
clc
rcll
lock
mov
or
pop
cltd
add
imul
sarl
mov
cmpsb
cmp
jl
repnz
push
rorl
lods
cmc
inc
xchg
inc
mov
mov
add
pushf
fcmovnb
leave
imul
test
sbb
sti
orb
call
xchg
insl
jns
adcb
xor
mov
push
cmpsb
push
xchg
filds
outsl
inc
inc
inc
adc
loopne
mov
cwtl
add
xor
in
ljmp
mov
mov
insb
mov
xorb
mov
cmpsl
jecxz
push
scas
test
pushf
clc
mov
cmp
sbb
arpl
xor
push
lret
scas
dec
cmc
dec
mov
push
stc
push
ja
insl
cmp
icebp
xor
or
xchg
clc
xor
cmpsl
cmp
and
xor
adcb
cmp
push
mov
sahf
insb
iret
mov
jno
mov
mov
add
xor
cld
mov
test
or
repnz
mov
sub
into
sbb
outsl
jmp
and
dec
push
sarl
sti
adcl
cmc
stc
fcompl
xor
inc
lcall
stos
jp,pn
mov
xchg
xchg
and
adc
jp
jbe
imul
or
divl
or
xor
or
mov
fldt
jns
loop
popf
in
dec
test
mov
adc
sbb
push
pop
mov
sub
fdiv
lret
jle
int3
push
fwait
out
ds
jmp
aam
popa
mov
inc
cmpsl
and
movl
xor
mov
cmp
or
dec
inc
jecxz
and
jp
cmp
xlat
lret
out
aam
es
xchg
mov
nop
add
adc
or
sbb
pop
cmpsb
mov
xor
cmp
xchg
inc
cmc
test
mull
push
arpl
stos
push
je
cmpsl
pop
dec
and
jmp
sarl
mov
inc
pop
add
hlt
add
repnz
sbb
jmp
sub
cmpl
imulb
lock
xor
inc
mov
jns
sbbb
jbe
es
scas
jo
push
nop
pop
xchg
sbb
imul
js
push
in
push
jb
inc
dec
out
jno
mov
mov
lahf
gs
dec
xchg
push
xchg
inc
push
sbb
repz
inc
fnstcw
in
int
push
aam
push
std
pop
ss
push
cmp
jmp
jmp
inc
stos
gs
stos
dec
pop
jle
push
lods
cli
adc
invd
jnp
cmpsb
adc
fstps
repz
push
nop
fldt
xchg
sbb
repnz
enter
hlt
adc
adc
mov
push
lret
jp
xor
sbbb
xor
daa
notb
sarl
jle
cmp
cmp
test
out
pop
popa
pop
add
in
push
dec
cmp
mov
lcall
add
cs
outsb
sub
das
inc
ret
xor
in
outsb
lret
add
jle
mov
mov
rclb
movsl
pop
mov
cmp
pusha
inc
dec
push
sbb
push
push
rorb
cmp
xlat
in
ret
test
js,pt
hlt
stos
dec
add
lock
mull
notb
jecxz
stc
mov
xor
add
loopne
out
les
test
stos
sub
xchg
stos
repz
cld
movsl
into
sbb
imul
push
mov
in
js
int
cli
popf
dec
jmp
push
pop
imul
pop
popa
push
in
xor
dec
inc
cmpsb
add
pop
js
aaa
pop
in
xor
mov
shlb
pop
ret
repnz
mov
jb
mov
sbb
jb
stc
notl
cmpsl
xor
sub
pop
faddp
cli
pop
mov
cld
aad
loop
ss
pop
test
loopne
aad
fistpll
adcb
pop
push
adc
jecxz
lods
pop
xchg
aaa
xchg
adc
cli
hlt
das
sbb
icebp
xchg
xchg
stc
subb
stos
rcll
popa
xor
inc
adc
js
jno
inc
dec
out
xor
fldenv
add
dec
dec
movsl
testl
cld
or
or
mul
jecxz
std
or
adc
hlt
fs
pop
mov
fs
test
pop
sahf
mov
es
fsubrl
pop
aam
sub
rorl
push
push
inc
and
cmp
mov
std
push
das
adc
xor
je
sbb
data16
bswap
and
sbb
fiadds
jmp
sbb
xor
ds
cmpsl
mov
dec
mov
mov
add
nop
movsb
mov
adc
lock
xor
push
xor
xor
test
int3
adc
in
iret
mov
scas
lods
pop
inc
mull
lds
jno
mov
lds
push
enter
lock
scas
outsb
lods
loope
mov
lcall
insb
push
push
jg
cmp
stos
jbe
repz
push
pusha
sbb
adcb
push
sbb
test
add
pop
in
mov
mov
push
add
cmc
sub
xchg
lret
js
mov
fimull
data16
sti
lock
and
mov
dec
mov
lcall
cs
inc
xor
pop
xor
inc
jbe
or
leave
mov
test
test
mov
xchg
fsts
mov
jbe
stc
xchg
push
pushf
std
shll
fcomps
pop
dec
push
inc
lea
inc
pop
jo
insl
mov
iret
loopne
jb
push
inc
or
adc
out
or
fnclex
pop
inc
mov
fnstsw
jle
into
push
push
hlt
cmp
dec
fstpl
pop
push
sub
shlb
jbe
or
mov
jecxz
shrb
mov
aam
sub
movsb
mov
jmp
mov
aaa
repz
ret
pop
hlt
sbbl
data16
je
adc
dec
punpcklbw
jmp
cld
icebp
inc
in
popa
cmp
mov
mov
pop
xchg
adc
xor
mov
adc
or
push
or
cmpsb
add
or
les
es
ret
mov
aad
pop
cmp
sbb
and
sub
add
dec
add
mov
fwait
sub
popa
xlat
mov
stos
insl
and
adc
inc
insb
mov
mov
mov
pop
hlt
stos
jb
xchg
xor
lds
mov
jge
and
pop
push
aam
sbb
out
js
lock
enter
roll
ret
fwait
add
out
pop
dec
adcl
cmp
push
loop
lods
push
inc
into
imul
enter
or
loopne
test
mov
imul
xchg
imul
fs
push
mov
xchg
int
push
xchg
push
inc
push
or
bound
xchg
dec
mov
rcll
jecxz
mov
mov
dec
jp
cltd
sbb
jo
adc
scas
js
mov
adc
enter
mov
movsb
loopne
sbb
mov
jecxz
addr16
dec
rcr
loop
cld
jns
mov
rclb
mov
add
xor
fcompl
scas
fidivrs
out
pop
mov
xchg
mov
lods
mov
jno
fisubs
ret
pop
jl
pop
or
outsl
inc
mov
push
xor
ds
int3
ftst
test
jge
xchg
mov
cmp
inc
push
add
mov
pop
sub
fcom
push
mov
in
xchg
jmp
push
pushf
insl
aam
xor
movsb
or
fdivrl
jne
arpl
imul
pop
ja
ss
adc
mov
pop
lds
inc
jecxz
es
adc
add
inc
sub
xor
sbb
call
mov
jbe
cld
fnstsw
cwtl
es
lret
outsb
inc
inc
mov
pop
adc
imul
inc
pop
push
xchg
adc
inc
divl
and
and
cltd
xchg
sub
dec
mov
cltd
push
mov
insl
loopne
in
cmp
cmp
mov
xorl
sub
push
call
into
pop
sti
jmp
daa
add
add
cltd
scas
lret
jo
fildll
sbb
push
cmp
push
movsb
imul
push
fldcw
scas
mov
daa
andb
dec
cmp
or
inc
push
add
push
int
pop
cmp
mov
fildll
les
xor
jmp
inc
gs
cmp
xchg
adc
stos
mov
jge
add
sub
arpl
dec
popf
vfmaddpd
pop
rcrl
pop
rcrb
jecxz
inc
repz
cmp
mov
mov
iret
int
ljmp
js
lahf
vucomiss
popa
in
xlat
leave
dec
repnz
subb
sbb
xchg
add
xor
jbe
aad
push
jnp
push
mov
mov
push
jno
push
xchg
mov
mov
mov
pushf
push
xor
test
xchg
pop
lods
movsb
sub
jae
out
push
out
lret
aam
out
ss
inc
cld
xlat
pusha
ror
push
in
das
and
dec
gs
fwait
movsl
mov
fcoml
xor
and
sbb
xor
std
cmp
push
lock
jo
outsl
repnz
fidivl
int3
loopne
inc
adc
mov
das
cmpl
cld
mov
mov
sub
leave
aas
fiaddl
rorb
and
rorb
outsl
sub
sarb
inc
push
lret
or
clc
sbb
daa
pop
sub
imul
arpl
cmpsl
loopne
in
inc
xor
sbb
pop
insl
in
mov
pop
mov
sbb
mov
add
or
pop
into
stos
out
arpl
xlat
movb
mov
xor
aad
mov
nop
ficompl
and
insb
pop
mov
sbb
adc
ret
mov
mov
push
mov
rcr
mov
pop
bound
movsl
push
cmc
xchg
adc
and
hlt
scas
sbb
push
gs
jl
shll
cmp
mov
imul
mov
stc
xlat
jb
bound
sub
leave
xchg
jp
mov
push
pop
xor
sub
jl
pop
popf
or
cmpsl
out
and
adc
inc
mulb
hlt
fiadds
cmp
loopew
xor
push
std
jae
push
mov
xor
insb
ss
mov
push
dec
mov
jno
fldt
fdivl
jne
std
cs
lock
pop
imul
imul
aam
inc
roll
int
xorb
sbb
pop
sub
mov
jbe
push
jg
mov
pushl
mov
out
inc
mov
push
lret
fs
cli
je
dec
arpl
mov
test
mov
imul
sub
ljmp
fadds
xchg
and
jb
mov
mov
outsl
out
data16
xchg
aam
test
xchg
push
test
add
push
shr
jae
fs
and
xor
shl
clc
sub
xchg
mov
jns
mov
cmp
xlat
xchg
cmp
lahf
mov
pop
push
inc
and
ds
test
inc
sbb
dec
dec
int
pop
and
pop
cld
movsl
out
mov
loope
cmp
test
adc
xchg
dec
mov
shl
inc
push
ljmp
xchg
cmp
push
jle
imul
pop
adc
mov
fwait
sti
jnp
lods
jnp
xchg
inc
imul
sub
mov
imul
stc
cmp
jp
or
push
leave
inc
movsb
std
mov
mov
xor
in
outsl
sub
lea
inc
or
les
mov
scas
sarl
mov
aam
mov
sub
lcall
or
push
pushf
outsb
js
jmp
insl
sbb
fisubl
jle
mov
lret
push
call
push
xor
ds
dec
outsl
mov
xorl
pop
popa
incl
imul
es
cltd
stc
sub
outsb
push
mov
sbb
xchg
push
imul
movsb
cltd
rolb
sub
jmp
cs
push
stos
add
stos
ljmp
xor
jb
jo
xor
lret
xchg
scas
mov
sbb
adc
xchg
daa
gs
lds
jg
jne
arpl
xlat
xchg
xchg
xor
insb
jmp
inc
fadd
jge
pop
xor
fisttpl
sahf
outsl
pusha
hlt
lods
push
mov
out
mov
dec
fildll
lods
movsl
add
adc
push
insb
insb
ds
pop
mov
xchg
sub
mov
jge
pop
push
flds
jo
xchg
push
mov
dec
sbb
jg
movhpd
cmp
push
jp
xor
lods
inc
sahf
dec
dec
rcl
scas
xchg
mov
mov
dec
jno
popa
das
adc
add
xor
and
sar
ror
scas
xchg
mov
mov
dec
jno
popa
das
adc
add
xor
and
aad
ror
fnstsw
scas
xchg
mov
mov
dec
jno
popa
das
adc
add
xor
and
sar
ror
scas
xchg
mov
pop
outsl
scas
jg
in
pop
push
pop
cltd
mov
lock
loopne
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
mov
les
fisubrl
fs
js
push
orps
insl
xor
adc
adc
in
hlt
lahf
les
mov
test
xchg
das
data16
je
add
pop
in
add
adc
std
mov
xchg
xchg
int
mov
iret
mov
xchg
inc
xor
jg
add
push
sbb
in
popf
lahf
mov
pop
lods
dec
out
insl
push
sbb
push
mov
inc
push
add
outsb
or
mov
xor
aad
out
dec
pop
push
pop
sbb
in
pushf
jecxz
icebp
push
das
mov
mov
inc
sbb
insb
fwait
leave
mov
repnz
shlb
xor
xor
cli
dec
adc
mov
hlt
push
les
je
fmul
imul
stos
xorb
aam
dec
jle
fsubl
adc
add
xchg
aas
jmp
call
outsl
mov
push
jmp
adc
les
add
sbb
mov
inc
cmp
inc
pop
sti
dec
add
in
jecxz
aam
into
call
popf
lea
jl
insb
pop
pop
push
dec
addr16
and
dec
jo
or
aad
repnz
xchg
call
inc
or
adc
jg
or
add
jns
pushf
into
hlt
lock
rcll
loopne
clc
jl
dec
adc
jg
add
sub
jno
movsl
ret
xchg
rep
out
mov
out
mov
test
xchg
aas
fs
je
inc
andps
outsl
xor
add
adc
in
hlt
lahf
les
mov
test
xchg
aas
fs
je
inc
andps
outsl
xor
add
adc
in
jae
in
xchg
cltd
jmp
cld
lea
jmp
int3
push
lock
fsubrs
adc
rorb
insb
enter
xchg
jns
nop
pop
cli
xchg
push
xchg
and
sbb
out
sbb
xchg
loop
shl
lret
test
mov
mov
add
adc
aam
ret
and
out
xor
jp
dec
adcb
mov
cmp
in
and
xchg
inc
add
addb
push
push
subl
movsl
cmpsl
into
js
jl
inc
outsl
jp
mov
jg
movsb
or
sbb
lcall
int3
daa
cmp
mov
push
dec
shll
push
ja
lcall
sub
mov
push
lret
test
push
push
test
icebp
and
sub
pushf
push
jle
imul
inc
or
xlat
jge
pop
and
and
loop
inc
xor
sbb
pop
maskmovq
daa
dec
out
andb
lock
stc
dec
xchg
and
dec
pop
out
sub
inc
mov
dec
mov
mov
add
stos
addl
mov
ret
lods
push
pop
lret
jecxz
mov
sarl
xchg
stos
xor
dec
mov
ss
xchg
sahf
jge
imul
push
movsb
jecxz
daa
push
adc
add
int
dec
mov
sbb
mov
fldcw
mov
mov
jns
jae
shll
mov
imul
cmp
cltd
mov
iret
dec
fsubrs
xchg
or
ret
or
pop
movsl
mov
pop
push
push
sahf
ret
xor
sbb
inc
dec
clc
pop
mov
or
mov
jb
fwait
add
dec
repz
ss
movsl
mov
xorb
sbb
aam
jle
popa
addr16
enter
and
sahf
jge
bound
push
aam
mov
inc
or
jge
fisttpl
push
lds
inc
imul
ljmp
mov
cmpsl
rclb
sub
das
mov
sbb
and
mov
cmp
sbb
mov
pop
stc
movsb
mov
and
pop
or
add
ljmp
out
adc
lea
xorb
in
shl
fmull
or
xchg
sbb
adc
sbbl
add
cmp
sub
lret
mov
sbb
mov
dec
lock
mov
inc
add
ja
xchg
clc
ds
leave
mov
xchg
mov
push
lret
mov
jbe
dec
xor
popf
pushf
out
pop
es
sub
jle
jmp
mov
dec
or
mov
testl
sub
adc
out
lret
jae
je
out
cmp
mov
xor
jmp
inc
hlt
ds
jmp
aad
cmp
decb
jb
lret
sbb
push
jbe
jg
and
add
fdivr
in
sarb
testb
xor
add
loopne
iret
ror
mov
or
sbb
sub
aad
addr16
mov
test
or
shrl
sub
add
ja
adc
push
movsl
jbe
add
test
mov
pop
mov
stos
cmp
jnp
repnz
jge
pop
leave
das
shl
ret
lahf
fildl
xchg
adcl
je
and
repnz
jle
loope
mov
sarl
sarl
ljmp
mull
or
outsb
rorl
test
test
lock
fsubrs
pop
adc
mov
sub
inc
pushl
xor
add
popa
and
int
and
and
xchg
push
negb
out
cmp
pop
jge
add
push
adc
adc
push
pop
stos
aam
lcall
sub
mov
imul
test
push
jp
dec
repz
das
sbb
mov
ljmp
or
inc
inc
mov
cmp
cltd
jae
lods
push
jne
outsl
les
sub
jmp
and
xor
jbe
adc
vmovupd
ds
push
pop
dec
ret
xchg
je
jge,pn
cmp
and
in
cld
std
bound
add
sbb
jns
dec
mov
lods
negb
idivb
loopne
xchg
pop
dec
xlat
inc
cmpsb
pusha
sti
pop
cmp
adc
mov
jbe
xchg
mov
daa
sbb
rcll
mov
fisubl
pushl
mov
test
ficoms
out
stos
cmp
repz
outsl
pop
es
xchg
xchg
push
mov
out
out
jl
xor
inc
push
cmc
push
daa
addr16
mov
inc
xorb
stos
mov
loopne
fnstcw
sti
test
jns
insb
pop
pop
jns
or
int
dec
inc
mov
cmp
ja
jns
mov
xor
adc
mov
pop
jb
xor
imul
pop
xchg
cmpsb
addr16
outsl
test
adc
neg
jge
jne
testl
je
ljmp
sbbb
and
test
orb
imul
and
shrb
jle
mov
incl
packsswb
dec
mov
jb
jmp
jp
aaa
mov
aas
adc
jb
mov
sahf
aad
rorb
ret
repnz
dec
and
mov
jl
mov
add
cmpsb
call
sbb
mov
mov
clc
mov
lahf
pop
mov
shl
fwait
mov
xlat
daa
or
ss
sti
gs
sahf
xor
cmpsl
or
outsb
cmpsl
pusha
xor
ja
or
aam
and
mov
push
push
sub
cmp
add
fneni(8087
mov
mov
push
add
repz
das
outsl
push
loope
ret
test
outsl
ret
adc
pop
leave
pop
xchg
in
cmpsl
es
sub
push
scas
xchg
dec
mov
mov
gs
leave
movsl
mov
pop
aaa
fiaddl
cmp
aas
and
bnd
cwtl
fidivs
iret
push
bound
add
mov
mov
movsb
adc
rol
pop
jle
jne
sub
mov
and
adc
out
in
icebp
xchg
out
push
or
push
icebp
cmc
fs
jne
aad
scas
ss
mov
cmp
jl
sbb
push
mov
jb
jb
adcb
push
jp
icebp
rcrb
cli
jne
inc
xor
loope
icebp
or
inc
xchg
les
mov
adc
in
push
and
lret
outsb
lret
idiv
add
jne
stos
pop
popf
jno
sbb
cli
sub
push
or
xchg
out
or
ja
loop
loopne
pop
jl
inc
xchg
sub
andb
repnz
jb
fildll
popa
lahf
push
fisttps
popf
mov
cli
loopne
pop
mov
or
inc
cmp
mov
lods
jmp
fwait
adc
and
cli
ds
xlat
clc
sub
cmpb
aaa
in
mov
pop
insl
xchg
pop
loop
rolb
xchg
jl
popf
imul
push
mov
cli
lods
ja
or
pop
call
mov
cmpsl
mov
and
xchg
xor
lret
push
mov
cltd
vsubss
or
inc
scas
pusha
in
push
add
jnp
lods
outsl
add
in
das
pop
jge
mov
cmp
push
cmc
out
xchg
mov
sarb
mov
aaa
mov
pop
mov
gs
test
push
lea
roll
shll
enter
push
cwtl
mov
stos
sbb
pop
push
add
shlb
inc
clc
add
xchg
mov
sub
push
fs
push
repnz
jb
push
or
stc
push
dec
scas
mov
jnp
scas
ret
popf
imul
int
cmp
icebp
cmc
enter
js
sub
cmp
push
mov
cltd
enter
sub
imul
shr
mov
sahf
sahf
sub
sbb
xor
pop
pop
cwtl
ss
loopne
fisubl
mov
loope
jge
loopne
xor
pop
mov
idivb
fwait
jecxz
and
andl
pop
pop
dec
cmc
mov
stc
push
repnz
mov
inc
or
jge
jnp
sbbb
subb
xor
xor
push
mov
push
sbb
jmp
fldt
or
sahf
int3
jns
push
addr16
pop
sub
sbb
pop
lcall
push
test
inc
cmp
lret
sbb
sub
ss
out
cmpsb
outsb
sti
popa
orb
mov
jae
leave
in
sti
lock
cwtl
fcoml
test
lock
lods
mov
loop
loop
add
add
xor
ret
fldenv
pop
sub
xor
push
xlat
push
push
orl
outsb
pop
sbb
cwtl
or
sbb
xor
movsl
xchg
aam
or
flds
outsl
or
cmp
repnz
mov
push
mov
xchg
int3
fisubs
and
shlb
repnz
pop
and
gs
cmp
pushf
into
adc
pop
inc
rclb
mov
into
out
es
sqrtps
cld
lock
push
ret
pop
push
sub
je
pop
scas
cmp
sbb
movsl
negl
push
push
lods
lock
testl
in
mov
stc
add
imul
pop
popa
dec
or
dec
int
jp
gs
stc
stc
jnp
fsub
adc
movb
stos
fcmovb
lds
loopne
cs
das
or
pop
cmpb
fdivl
lcall
aad
inc
jns
push
push
dec
mov
pop
dec
je
scas
sbb
lret
and
inc
mov
bnd
adc
std
mov
fcomp
es
mov
call
aad
sub
push
pop
je
shlb
and
sti
cs
jl
push
jge
or
or
pop
cmp
call
add
outsb
ljmp
fldcw
aad
test
push
push
sub
test
adc
cmp
mov
in
mov
mov
aam
fnstcw
stc
fs
jo
mov
outsb
lea
push
xor
xor
sbb
js
push
add
add
or
out
fcomps
mov
je
and
std
jecxz
fldt
push
icebp
es
mov
cmp
iret
pop
and
and
addl
xor
outsb
sti
lahf
mov
dec
or
xlat
push
add
bound
inc
pop
and
lcall
pushf
loop
xlat
stos
cmpsl
cwtl
mov
aam
xor
push
inc
sbb
jg
scas
es
out
add
mov
popa
mov
ds
rcrb
loopne
cmp
sbb
lcall
mov
icebp
adc
lcall
dec
xor
inc
fcmovbe
ficoml
movsl
xchg
iret
pop
aad
stos
jecxz
sbb
leave
pop
jnp
mov
stos
rol
xor
adc
mov
insb
mov
jns
jae
fcmovb
adc
pop
cmp
pop
jmp
inc
lahf
inc
add
sbb
adc
push
mov
testl
cwtl
repnz
xor
mov
mov
add
cmp
and
push
jno
es
mov
dec
add
js
cmp
and
or
sub
sbb
cmp
push
gs
lret
fstl
outsb
daa
push
cwtl
sahf
call
sbb
insb
sbb
bound
lock
mov
xchg
jmp
cmp
test
ret
jns
mov
lahf
pop
aaa
int
dec
xchg
push
inc
push
xor
cmp
mov
lcall
lret
adc
sarb
test
imul
mov
push
loope
mov
xchg
push
fsub
pop
push
repz
or
lahf
jmp
jecxz
outsl
sbb
fstp
addr16
or
or
pop
push
jp
repz
inc
ljmp
std
lahf
jno
int3
movsb
add
fidivrl
jae
push
push
loope
pop
in
cmp
adc
outsl
cmp
std
mov
or
mov
lds
mov
mov
mov
movsl
dec
push
stos
and
shl
popa
rcrb
adc
xor
pop
cld
int
sarb
lea
movsb
pushf
stos
sbb
inc
mov
dec
callw
mov
cmpsb
push
test
mov
inc
cs
arpl
fwait
jmp
sbb
jg
ljmp
sar
jg
subl
adc
js
push
vscalefsd
push
sahf
aad
push
stc
mov
stos
shrl
icebp
sub
jp
adc
inc
sarb
adc
iret
sub
addr16
aam
lods
mov
add
cmp
shll
jno
sti
shr
lret
dec
push
out
in
imul
lds
aaa
xorb
test
pop
mov
push
mov
outsb
or
insl
add
adc
fwait
mov
notl
mov
push
cmp
push
fldl
fdivl
pop
and
insl
adc
call
push
push
jecxz
lea
lcall
mov
mov
push
push
outsb
xlat
aas
mov
jnp
dec
aas
xor
decb
add
clc
call
add
push
xor
xor
adc
shlb
rcrb
je
dec
aam
dec
sub
stos
or
es
jns
or
movsl
mov
mov
fxam
lahf
push
add
mov
mov
out
insl
ret
sbb
notrack
shrl
scas
mov
loop
cmp
mov
clc
dec
fidivrs
jecxz
jne
insl
cli
mov
pop
xchg
xchg
out
pop
fs
xchg
ss
adc
test
and
pop
lea
mov
and
inc
inc
xor
jge
and
xor
push
leave
cmp
int3
out
and
into
add
sbb
mov
mov
cli
mov
or
aad
loopne
imul
es
movsb
xor
xlat
sbb
cwtl
add
insl
and
aas
add
and
xlat
xchg
sarl
test
lahf
and
pop
push
js
mov
popf
outsb
cmp
cmc
inc
mov
or
pop
dec
pop
test
mov
lock
outsb
rcrb
fbstp
mov
aaa
mov
xchg
aaa
push
mov
xlat
adc
ret
push
sub
push
cmp
mov
mov
mov
sahf
mov
pusha
mov
xchg
aas
cwtl
push
shlb
stc
lea
loop
fs
inc
stc
xchg
aad
add
push
pop
cmpsb
cmp
fistpl
aad
mov
mov
test
mov
pop
hlt
push
std
dec
dec
movsb
and
push
outsb
cmp
jecxz
jg
sti
jle
shl
cmpsb
lock
mov
pop
cwtl
rolb
push
and
and
mov
out
mov
or
push
nop
or
dec
stos
lods
icebp
jnp
loopne
test
pop
int3
andb
incl
lds
xor
andl
lret
jns
add
js
cmp
fstps
inc
mov
inc
aam
inc
insb
xor
push
inc
pop
xrelease
out
fsts
icebp
andl
mov
inc
scas
sbb
jecxz
daa
xchg
adc
lods
push
sub
stos
aam
in
add
scas
sub
push
mov
push
bound
jg
xor
mov
aam
std
push
fnstenv
push
arpl
lea
out
mov
pop
xchg
dec
fimuls
loop
cmp
mov
add
sbb
ret
cmp
sbbl
push
stos
test
in
int3
fwait
popf
mov
je
andl
xor
imul
adc
push
mov
xchg
cmpsl
push
jge
fcom
sbb
sar
mov
mov
ret
addr16
cmp
stos
cmpsl
leave
add
and
push
jp
fcmove
shll
xor
in
mov
or
ja
push
xchg
inc
lods
cmc
imul
xor
addr16
xchg
sbb
cmp
jg
nop
pop
push
mov
sub
xchg
push
scas
je
orl
rcll
imul
pop
pop
mov
mov
ret
dec
mov
in
mov
sub
bound
dec
cvtpi2ps
outsl
pop
test
sub
fidivrl
stos
sub
fwait
inc
fsub
out
cli
push
xchg
push
dec
loop
test
faddp
test
pop
lahf
push
roll
mov
inc
popw
adc
and
push
clc
dec
outsl
into
sbb
mov
jns
mov
jb
sub
or
mov
push
add
in
adc
lret
lds
cs
or
pop
repz
jecxz
stos
add
bound
or
and
add
cmpsb
xchg
push
push
aaa
dec
cmpsl
or
call
int
stos
dec
insb
aas
shll
movsb
mov
jno
jl
mov
xchg
cmovb
mov
iret
push
repz
or
fstpl
mov
lret
jp
xchg
loope
loop
sar
popf
jne
aam
idivl
push
sub
clc
loopne
repnz
pop
movsl
insb
out
iret
mov
ficompl
or
sub
dec
pop
test
movsb
push
je
jl
add
lods
mov
xor
cld
xor
shlb
mov
xchg
push
aaa
sub
gs
jnp
mov
dec
inc
data16
lock
testl
xchg
out
add
adc
gs
int
add
in
into
and
push
adc
hlt
mov
dec
out
and
inc
nop
dec
inc
out
xchg
fisubrl
mov
mov
cmp
dec
cmp
je
shll
outsb
fisubrl
xor
ljmp
test
sub
cmc
int
sar
xchg
gs
sbb
sbb
mov
ja
cmp
daa
mov
xchg
loop
aaa
fadds
and
fwait
xor
mov
movsb
push
fadds
hlt
fnstenv
sbb
call
mov
out
push
mov
cld
out
dec
in
pop
data16
addr16
add
lcall
in
xor
mov
test
pop
mov
mov
mov
mov
arpl
scas
xor
cwtl
fs
aam
xor
inc
in
or
sbb
and
rcrb
aaa
jg
test
imul
mov
and
push
in
shlb
into
sub
dec
inc
sub
lock
pop
mov
adc
pop
test
insb
call
push
pop
mov
jge
out
popf
aam
scas
pop
aam
aas
xchg
pop
imul
dec
dec
das
cltd
mov
test
loope
lahf
xor
jmp
bound
mov
sub
push
and
pop
mov
xor
or
dec
pop
int
xchg
inc
je
push
ja
cmp
mov
stc
outsb
sahf
add
or
shll
aaa
js
int3
in
in
cwtl
mov
das
sub
fldenv
mov
and
test
jae
dec
dec
mov
dec
or
sbb
sub
xchg
add
fistpl
mov
loop
dec
cltd
inc
sub
mov
loopne
lods
cwtl
lahf
inc
jecxz
loop
inc
mov
dec
sbb
pop
or
std
pop
cmp
push
add
in
ret
xor
fwait
sbb
out
jge
push
mov
rol
adc
fs
mov
or
jb
pop
mov
aad
bound
pop
cmpb
lock
adc
xor
mov
push
aaa
loopne
cli
cmp
adc
js
test
jb
mov
xchg
mov
add
addr16
out
aad
test
aam
enter
xlat
cwtl
jge
xchg
aam
adc
dec
nop
pop
xchg
lahf
inc
daa
pop
lcall
fsts
outsb
shrl
lcall
mov
and
and
icebp
mov
mov
mov
sbb
movsb
mov
data16
int3
call
out
and
loope
dec
outsl
mov
rcr
outsb
inc
push
stos
iret
dec
push
mov
jo
aaa
mov
cli
or
aas
test
arpl
mov
insb
cmc
jbe
inc
mov
cmp
int3
std
adc
loopne
adc
inc
mov
push
push
in
adc
arpl
xchg
adc
mov
jmp
pop
or
ljmp
cmp
cwtl
push
pop
push
xor
push
dec
das
jae
fisubs
adc
lret
fnsave
in
faddl
ds
aas
fmull
xchg
pushf
fldcw
stos
cmp
mov
or
adc
stc
movb
outsb
jmp
xchg
mov
sub
mov
test
xchg
aas
fs
je
inc
andps
outsl
xor
add
adc
in
hlt
lahf
les
mov
test
xchg
aas
fs
je
inc
andps
outsl
xor
add
adc
in
hlt
lahf
les
mov
test
xchg
aas
fs
je
inc
andnps
outsb
xor
add
lods
hlt
sahf
les
mov
test
shlb
inc
mov
lods
out
mov
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
mov
pop
mov
push
sahf
inc
cld
aas
loop
jo
int3
out
sbb
or
jl
insb
sub
fdivrs
outsl
lock
mov
aas
in
das
fcompl
int3
ljmp
jge
or
cmp
insb
scas
pop
fisttpll
jg
outsl
push
pop
push
dec
loop
mov
ret
addps
out
je
imul
or
adc
pushf
xor
push
clc
clc
in
int3
push
jnp
pop
out
mov
and
xchg
dec
dec
push
sub
sbb
or
push
sbb
lret
adc
lret
pop
iret
mov
inc
daa
jmp
and
pop
jmp
push
sub
or
or
insb
mov
jo
pusha
push
in
jns
pusha
dec
add
in
das
and
sub
cwtl
and
lahf
adc
push
pop
pusha
dec
add
mov
mov
ds
inc
mov
scas
mov
cmp
inc
add
xor
add
mov
jp
clc
into
icebp
stos
aas
push
out
cli
outsl
pushf
pop
mov
aas
xchg
das
fcompl
push
cli
pushl
iret
xor
scas
outsb
lahf
dec
out
adc
outsl
call
push
subb
push
int3
pop
cmp
jg
jns
imul
icebp
jg
insl
out
pop
in
cmp
sub
cvtdq2ps
je
add
cli
or
cmp
aaa
fildll
scas
aas
in
das
fcompl
int3
ljmp
sbb
or
jl
insb
scas
pop
lahf
dec
mov
pop
mov
aas
in
das
fcompl
int3
ljmp
sbb
or
jl
insb
scas
pop
lahf
dec
mov
in
dec
or
repz
xchg
pop
std
mov
add
lahf
mov
jmp
pop
mov
jg
arpl
mov
sbb
cmp
pushf
cli
sub
outsb
fwait
jle
jle
xor
dec
pop
sub
mov
xchg
loopne
jnp
mov
push
lock
sub
movl
adc
sbb
notl
add
sbb
mov
ds
sub
fisubrl
gs
mov
icebp
repnz
pop
add
testb
orl
outsl
mov
mov
es
or
bound
mov
xchg
rolb
xchg
sbb
es
xchg
pop
gs
inc
jo
sub
adc
jae
jae
into
push
pop
hlt
divl
cltd
lcall
lahf
int3
xlat
call
xor
sbb
xchg
dec
push
pop
sub
stos
addr16
sbb
lds
in
aam
popf
push
call
cmp
dec
lret
jnp
and
leave
mov
jle
in
outsl
mov
out
add
data16
push
sub
dec
xor
adc
xor
dec
jb
out
adc
dec
pop
pop
xchg
jmp
sbb
in
and
cmp
mov
loop
lods
roll
ljmp
push
sbb
cs
stos
negb
dec
adcb
aaa
cmpsl
push
sbb
cld
lock
stc
add
lods
stos
jecxz
inc
cmp
fsubs
int3
int3
outsl
cmp
cmp
sbb
lea
outsl
adc
mov
jmp
xchg
insl
lret
imul
subl
push
fdivrl
loope
lea
add
sub
sub
xor
shrb
loope
add
push
add
insl
push
add
sub
in
mov
jbe
icebp
add
es
xchg
lcall
cmp
dec
imul
popf
mov
fcomps
pop
adc
int
ljmp
pop
outsl
lret
in
cli
call
flds
dec
ret
sbb
hlt
xchg
cmp
cltd
mov
push
mov
scas
xlat
cmc
cs
mov
or
lcall
repz
sbb
shll
adc
in
mov
pop
fcomi
adc
clc
mov
fdivs
inc
mov
insl
scas
mov
inc
fs
fdivrl
ret
xchg
and
sbbl
cmp
fnstenv
cmp
pop
mov
add
add
or
xchg
jbe
iret
mov
mov
shr
inc
and
mov
sbbb
ficomps
mov
imul
xor
sti
and
mov
push
aaa
xor
jp
and
leave
or
loope
cli
push
xor
in
into
xor
inc
lock
or
pop
mov
sbb
sti
cmpsl
jbe
jge
int3
addr16
pop
add
inc
adc
aad
les
push
fadd
push
insb
xor
test
and
cmpb
mov
mov
and
movsb
jns
adcb
sub
cmpsb
mov
dec
ret
mov
sub
xchg
lcall
sub
xor
cmp
call
movsb
pop
sub
add
and
or
out
mov
jl
xor
sub
cwtl
inc
mov
push
orb
cltd
dec
inc
mov
push
inc
push
inc
push
xor
sbb
add
jp
call
pop
js,pt
mov
popf
iret
or
subl
xchg
and
int
cmp
pop
or
push
nop
daa
fisubrl
nop
cli
sub
repz
fs
gs
adc
sub
mov
imul
jecxz
adc
and
pushf
dec
sbb
dec
arpl
and
lcall
aad
mov
hlt
in
mov
mov
enter
enter
movsb
xlat
sub
les
adc
arpl
jmp
adc
dec
scas
int
pushf
pop
fwait
sahf
in
mov
cmp
dec
pop
inc
mov
sbb
shlb
pop
jmp
out
mov
popa
movsl
repz
stos
or
ret
mov
and
cmp
xchg
sub
cs
add
out
mov
subl
out
cld
negl
lods
mov
jno
je
or
xchg
testl
cld
loopne
aas
loope
or
into
jae
sahf
insb
add
push
sti
jo
push
mov
in
and
sbb
call
das
nop
jle
push
cmp
adc
in
pop
mov
pop
sub
popa
out
sub
out
fs
inc
sbb
sub
xchg
jns
sub
pusha
xor
repnz
cld
add
stos
bound
shlb
movsb
out
clc
mov
test
repz
fwait
or
push
sahf
inc
push
jae
pop
lahf
dec
cmp
fists
outsl
rcrb
add
mov
jae
in
sarb
inc
mov
push
repz
jne
in
test
mov
jne
jp
pop
addr16
in
inc
mov
mov
pop
cmp
mov
sti
subb
ja
imul
pop
arpl
sub
in
lea
jbe
addl
sbb
xlat
leave
mov
sti
mov
sbb
add
cwtl
fidivs
ljmp
adcb
fcmovb
jle
test
cmp
inc
mov
xor
movsl
addb
push
mov
inc
xor
mov
add
aad
and
scas
imul
pop
popa
push
ss
sbb
add
inc
in
inc
xchg
insb
adc
into
and
and
mov
enter
push
push
mov
hlt
xchg
lret
out
leave
push
xor
jl
fnsave
mov
lret
fsubrl
pop
ficoml
fisubs
movsl
pop
out
mov
mov
outsl
dec
push
push
cli
insb
sub
mov
push
lods
mov
mov
mov
cli
xor
sub
mov
pop
mul
popa
inc
cs
or
push
int3
mov
push
or
aad
inc
test
sahf
mov
sbb
call
or
scas
fs
fstps
cmpsb
cld
movsl
stc
idivl
xchg
jnp
jle
je
adc
and
fdiv
lods
js
pop
pusha
arpl
movsl
insb
adc
lahf
mov
pop
lea
dec
jecxz
in
inc
cmp
cmpsl
imul
mulb
out
and
xchg
out
add
daa
jae
pop
sbb
cltd
movl
mov
cli
dec
mov
fst
into
inc
or
jno
xchg
adcb
pop
mov
push
push
call
mov
es
jmp
jp
lods
fiaddl
sbb
mov
mov
pop
pushf
dec
stos
notb
sti
orl
push
cwtl
fdivl
fnstcw
into
jnp
inc
xor
xchg
movsl
test
push
push
dec
push
push
js
xor
cmp
icebp
cwtl
jl
mov
mov
xchg
jle
mov
fsubl
fisubl
js
sbb
imul
mov
mov
mov
jb
int
cwtl
push
pop
mov
jns
sbb
pop
jbe
sub
sahf
add
loope
lds
jno
sarl
repnz
inc
popf
stos
fsubs
insb
inc
jmp
out
jo
and
mov
stos
and
fwait
mov
adc
fmul
mov
lods
les
sub
pop
or
mov
xchg
xchg
mov
test
cmpsb
push
and
mov
fisttpl
and
fidivl
lock
enter
cmpl
js
mov
mov
push
arpl
test
mov
dec
repz
loopne
leave
fwait
iret
pop
and
cmpsb
xchg
out
pop
xchg
and
and
sub
inc
xorl
mov
sub
mov
push
mov
ja
inc
in
pop
or
xor
jns
mov
push
mov
mov
adc
xchg
mov
movsl
mov
mov
xchg
push
add
arpl
mov
xor
push
xor
loope
sbb
mov
mov
or
push
dec
jb
fcoms
in
mov
jae
inc
in
or
jae
imul
stc
sbb
jmp
mov
inc
test
mov
add
orl
fmul
dec
sarb
xor
cmp
lods
sub
xlat
xchg
fwait
sbbl
or
mov
mov
notb
pop
jge
jmp
stos
jg
punpckldq
sub
fsubl
push
insb
dec
stos
mov
sub
es
addr16
popa
xorl
pushf
cmpl
stos
arpl
cmp
push
push
adc
out
iret
dec
jns
adc
mov
pushf
out
xchg
or
out
lds
sub
roll
push
lods
sub
push
lret
add
int
adc
push
and
ja
or
add
cltd
stos
aas
fnsave
in
dec
gs
in
movsb
sub
shlb
mov
icebp
jne
mov
mov
mov
mov
mov
loop
into
lahf
xor
inc
mov
into
adc
mov
test
ret
scas
out
out
ret
sbb
icebp
pop
pop
or
cmp
sbb
outsl
mov
shl
fcmovnb
in
fisttpl
in
mov
xor
imul
jp
xor
pushf
enter
aam
test
movb
lods
lcall
lret
adc
dec
and
push
or
pusha
or
mov
enter
flds
lret
inc
cmpsl
pop
xchg
fadd
push
mov
lea
lods
xchg
enter
ja
jge
sub
je
out
xchg
sbb
xor
or
pop
and
ret
mov
scas
jno
data16
mov
inc
in
and
pop
sub
cmp
mov
into
out
icebp
xchg
cmc
mov
push
mov
push
adc
pushf
jb
aas
lret
or
test
pop
and
dec
or
sbb
cwtl
sub
ret
pushf
repnz
push
sbb
lret
xor
arpl
jge
push
and
cmp
lock
test
mov
pusha
in
and
sbb
ja
mov
or
pop
or
push
sbb
push
lods
cmp
push
cmp
cmp
push
les
xor
in
addr16
rolb
les
mov
add
out
dec
test
inc
arpl
hlt
inc
mov
add
mov
test
sub
dec
sub
mov
pop
sub
mov
mov
push
xor
adcb
dec
cmpsl
outsl
add
or
xor
in
clc
cmpb
insb
hlt
popf
add
mov
lods
push
pop
jge
cmc
pop
out
iret
test
jnp
mov
sub
sarl
xlat
test
mov
mov
xor
mov
inc
daa
loop
pop
bnd
dec
jp
cmp
fstpt
xchg
aam
mov
mov
sbb
stos
lds
pop
or
into
loopne
in
dec
dec
mov
in
jecxz
notl
mov
xchg
push
and
mov
dec
push
and
add
fwait
test
jbe
mov
pop
shlb
imull
fcmovnbe
loop
insb
fwait
dec
sahf
je
testl
dec
sbb
popf
mov
pop
icebp
gs
fnstcw
aam
push
add
pop
cmpsl
pop
call
push
xlat
push
call
add
shl
jnp
dec
dec
adc
rolb
aam
sbb
mov
sbbb
inc
dec
dec
cmp
aad
sub
pop
xor
das
add
loopne
inc
pop
xchg
dec
sub
mov
and
outsb
stos
and
cmpsl
pushf
cli
cmpsb
pusha
mov
outsl
dec
xchg
pop
inc
push
cli
mov
bound
lea
xchg
add
lahf
pshufw
add
lea
add
lods
pop
sub
ud2
mov
pop
jg
imul
adc
lods
stos
or
xor
in
test
push
into
fdiv
sbb
sbb
popa
mov
rcrb
lds
aam
sbb
popf
dec
adc
jno
and
jbe
lret
popf
inc
movsb
dec
out
and
cmp
add
insb
test
rcl
dec
jbe
sub
jmp
push
stc
cmp
add
subb
movsb
xchg
add
fwait
bound
xor
dec
shl
sub
and
das
mov
sub
int
or
push
push
subl
out
cltd
and
push
and
orb
imul
adc
add
outsb
ja
fadd
shl
cmp
xchg
jl
dec
scas
pop
sti
jecxz
jl
sub
xchg
xor
cmp
push
scas
mov
in
dec
movsl
rcl
hlt
jo
je
cmpsb
mov
pushf
push
popf
sub
push
bound
jmp
cltd
inc
push
xlat
in
xchg
cmp
ljmp
out
push
leave
sbb
andl
mov
lods
add
xchg
mov
pusha
jl
jmp
add
pop
push
arpl
push
mov
dec
lret
ret
dec
cmp
dec
aaa
lods
xor
xchg
xchg
in
dec
jae
jns
sbb
dec
mov
leave
jb
cwtl
hlt
mov
loop
das
in
pop
aaa
sbb
pslld
ret
bound
dec
inc
loop
pop
inc
push
push
daa
xchg
out
mov
mov
mov
jg
xor
cmpsb
mov
pop
xor
cli
cmp
imul
mov
je
mov
cmp
lret
adc
mov
mov
xor
xor
dec
lea
outsb
and
xlat
dec
adc
cld
lds
mov
loope
lret
arpl
push
sub
loopne
lcall
lcall
inc
sub
in
dec
inc
mov
loopne
ss
push
xchg
mov
and
into
inc
loope
nop
mov
jb
pop
shlb
es
popf
dec
jge
jge
into
jb
or
mov
std
scas
pop
mov
pop
dec
mov
xchg
push
adc
cmp
cs
add
adc
in
jae
mov
shrb
xchg
jno
in
inc
xor
push
loopne
mov
int
ss
jmp
movsb
push
cmp
jl
lret
sub
shll
sahf
ja
cmp
stos
adc
hlt
jae
xchg
mov
cmp
je
xor
movsb
sub
lods
mov
inc
xchg
sbb
pusha
daa
inc
in
inc
aas
dec
xchg
inc
and
nop
pushf
pop
push
pop
mov
and
call
jg
in
mov
inc
and
jne
jno
sub
cmp
push
fimuls
dec
jnp
fwait
mov
clc
cld
sbb
movsl
cmp
sub
push
sbb
cmp
or
testb
push
pop
cmpsb
pushf
dec
jo
mov
mov
dec
or
popf
adc
loop
rcll
into
lret
sbb
adc
dec
sbb
xchg
push
or
imul
mov
push
xchg
jl
cmpsb
add
mov
out
stos
orb
sbb
mov
push
cli
hlt
mulb
cmpsl
lds
mov
pop
sbb
mov
sahf
aad
dec
dec
push
xor
dec
and
mov
pop
je
xchg
out
jmp
cld
mov
cltd
push
jb
dec
mov
aad
aas
repnz
sbb
dec
xchg
pop
inc
das
add
cmp
sbb
in
add
jl
fsubp
stos
and
imul
loopne
pushf
pop
loopne
mov
fistl
mov
fstps
xor
pop
mov
daa
pop
cmpl
adc
cli
lds
test
sub
bound
adc
inc
sbb
test
hlt
les
subb
or
push
push
ja
lock
adc
jb
movsb
jno
cs
in
in
ljmp
mov
cwtl
mov
push
lock
arpl
cltd
dec
fistl
inc
sub
mov
or
inc
out
dec
bound
inc
adc
push
push
repnz
jle
cld
ss
mov
out
xchg
add
pop
jg
mov
shll
in
js
jbe
xor
push
out
inc
dec
pop
mull
xor
stos
shrl
scas
mov
mov
mov
in
insl
xchg
dec
push
cmc
push
popf
sbb
imul
pop
in
jo
push
pop
lcall
mov
mov
jno
loopne
jmp
and
test
jecxz
jo
js
out
dec
or
jg
xor
outsb
lahf
icebp
push
sti
mull
pushf
addl
fildll
scas
push
ss
push
cmc
xchg
movsb
lret
add
pop
sbb
cmp
xchg
mov
inc
sahf
sar
dec
xchg
ds
mulb
cld
push
pop
aad
int
and
subl
mov
push
dec
out
cmpsb
mov
es
adc
mov
je
cltd
out
faddl
cmp
rorl
mov
lret
repz
cltd
inc
loop
push
iret
mov
pushf
mov
or
fdivs
mov
sub
xchg
mov
mov
xor
adc
pop
testl
imul
pavgw
int3
xor
outsb
push
cmp
push
cmc
push
mov
scas
mov
pop
jne
add
cmc
mov
sbb
push
sub
repz
and
mov
loopne
in
push
xchg
ficoml
fwait
dec
stos
xor
out
fildll
clc
popl
jnp
fwait
cmp
or
ljmp
std
cld
pop
scas
fdivrl
lods
std
test
inc
das
loopne
pusha
add
cmp
loope
pop
test
cmp
sarl
popa
mov
cwtl
aaa
ss
xchg
cmp
daa
mov
xchg
lock
sub
call
mov
stc
sarb
cmp
pushf
add
push
pop
scas
jne
jl
enter
addr16
sti
dec
cmpsl
jnp
push
loop
test
mov
data16
clc
sub
rcrl
out
or
mov
pop
out
mov
mov
sub
sub
sbb
add
xchg
fstpt
test
leave
cmp
mov
inc
pop
mov
fucomip
out
mov
insl
or
and
repnz
push
ds
cmp
and
mov
sub
imul
jmp
pop
xchg
xchg
std
and
pop
andb
sahf
std
ds
pop
nop
dec
sub
fidivrl
adc
cmp
push
aaa
inc
je
push
pop
imul
cmpsb
aaa
push
outsb
stc
into
and
stos
inc
dec
mov
mov
sbb
jecxz
nop
ror
or
jb
pop
out
adc
pop
mov
repz
fcmovnbe
fwait
and
fnstsw
ret
je
xchg
mov
fsub
mov
inc
mov
add
pop
sbb
in
inc
rorb
cmpsl
fwait
adc
ljmp
repz
dec
rorl
cmc
loope
nop
ffreep
mov
lods
xor
xor
cwtl
xor
mov
js
xorb
mull
cmp
push
aad
sbb
adc
dec
adc
popa
mov
leave
stc
jnp
bound
outsl
mov
xchg
int
lret
je
mov
in
loopne
lock
jnp
cmp
fistpl
lds
mov
jmp
int
and
mov
sub
sbb
inc
push
sub
xor
ja
and
jnp
sub
adc
xchg
popf
cltd
sbb
dec
stc
sbb
outsb
jbe
pop
or
add
xchg
shl
sbb
cld
stos
sub
push
fucom
cmpb
ret
daa
xchg
lcall
test
bound
mov
cs
dec
daa
ror
mov
mov
add
cmp
push
shrb
lds
adc
fldl
stc
add
mov
mov
lret
sbb
cwtl
xchg
jb
add
xchg
aam
insb
cltd
int
pop
fxch
sbb
xchg
pushw
pop
xlat
lahf
inc
or
sbb
mov
and
mov
aam
cltd
out
adc
cmc
pusha
fdivrs
aam
sbb
daa
adc
mov
in
pop
ficompl
pop
scas
and
mov
andl
sbb
rolb
pushf
fxtract
sub
xchg
lret
ss
add
fstl
mov
mov
dec
mov
push
icebp
mov
aas
lds
and
push
std
xchg
stos
cltd
xchg
data16
movsl
pop
les
std
sub
push
movsb
lcall
shlb
je
cmp
std
bound
cli
adc
out
testb
fistpl
dec
cld
aas
in
das
fcompl
int3
ljmp
sbb
or
jl
insb
scas
pop
lahf
dec
mov
pop
mov
aas
in
das
fcompl
int3
ljmp
sbb
or
jl
insb
scas
pop
lahf
dec
mov
fisttps
fcompl
or
cmp
sub
in
fisttps
jl
jl
pop
lahf
movsb
outsl
pop
lods
dec
cld
aas
cld
das
fcompl
dec
call
inc
mov
or
or
in
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
jle
outsb
or
cmp
lods
xor
imul
mov
mov
scas
into
sahf
cld
mov
jle
outsb
or
cmp
sub
pop
rcrb
push
sbb
pushf
out
lods
stos
mov
scas
int3
sahf
mov
outsb
or
xchg
dec
cs
jo,pn
xchg
push
je
inc
out
out
lods
jecxz
mov
movsl
rorb
outsb
bound
imul
xchg
pusha
cmc
mov
lahf
xor
push
jle
in
xor
mov
rcrb
adc
stos
mov
cmp
or
dec
mov
lahf
std
jo
xchg
movb
je
out
adc
push
cld
daa
int3
sti
cmp
cld
cmp
outsl
sbb
sub
xchg
ds
ds
xchg
arpl
fcoml
call
xor
or
in
outsl
jbe
test
or
je
insb
out
iret
adc
lods
int
in
fwait
adc
sub
out
iret
loope
test
es
mov
cld
out
and
cld
pop
mov
cs
push
cmpsb
push
in
sbb
dec
fisubrs
xor
cld
mov
cmp
add
and
dec
or
enter
mov
mov
jge
sbb
push
pop
sub
js
inc
jg
adc
add
sub
mov
aaa
insb
dec
dec
cmp
dec
push
jl
insb
pushf
out
mov
mov
scas
int3
sahf
cld
mov
jle
outsb
or
cmp
sub
pop
cs
push
jl
insb
pushf
out
mov
mov
scas
int3
sahf
cld
mov
jle
lret
frstpm(287
lahf
push
in
rcrb
mov
adc
mov
pop
popa
scas
repnz
das
cmp
and
mov
push
lret
add
mov
loopne
pop
mov
mov
inc
or
xchg
jecxz
cwtl
lds
mov
cmp
jmp
xor
cld
mov
cmp
lock
xor
pop
push
mov
jbe
push
xchg
popf
dec
pop
mov
test
push
mov
lods
cld
shll
mov
cld
lock
fcompl
out
push
push
insb
scas
xor
sub
jg
jl
xchg
add
push
into
pusha
pop
xor
or
xor
and
enter
jae
bound
or
mov
loope
jl
xor
mov
mov
testl
push
and
add
and
scas
cld
rcll
adc
xor
adc
jae
dec
xchg
out
into
ror
cltd
loop
les
cs
adc
adc
out
xor
dec
mov
rcrb
clc
pop
xchg
mov
mov
dec
aam
lock
mov
dec
mov
sbb
mov
jns
mov
and
push
inc
mov
filds
lock
pop
sub
cltd
cs
inc
pop
cwtl
xor
lds
in
sar
push
mov
cmp
add
lods
js
add
outsb
inc
jp
push
gs
cmp
sub
or
sbb
sbb
into
pop
add
adcl
outsb
dec
repz
fstpt
push
push
int3
or
mov
push
dec
js
icebp
mov
fcomps
outsb
mov
add
mov
bound
mov
int
cmp
dec
notb
aas
insl
out
or
lea
add
jle
aam
add
fcoml
push
add
dec
cmpsb
cmc
fnsave
ds
mov
shrb
cmp
and
push
dec
mov
clc
dec
cwtl
mov
pop
pop
xor
and
pusha
in
dec
dec
ss
push
fldenv
pop
hlt
mov
mov
pop
repnz
pop
cmpsl
popa
ljmp
lods
hlt
inc
push
dec
sbbl
mov
fs
in
daa
scas
sub
fisttpll
in
sub
inc
and
pop
jno
mov
jno
arpl
mov
rol
in
stos
pop
sbb
xor
shlb
fstp
jne
mov
inc
nop
cmpl
mov
popa
test
ret
pushf
roll
daa
mov
fwait
jle
adc
pop
pop
shlb
fwait
dec
fcoms
cli
in
add
shr
out
insl
jno
rcl
sub
es
aam
cmp
mov
inc
mov
adc
mov
cmp
outsl
pushf
notb
out
idivl
push
imul
fisttpll
stos
out
js
xchg
pop
xorb
test
sub
sub
test
mov
fsubr
xlat
mulb
rorb
jbe
icebp
es
popa
jecxz
test
aad
push
xor
cmp
add
mov
mov
or
rclb
repz
popf
mov
sub
xor
ss
pop
jb
and
mov
hlt
adc
inc
mov
cmpl
lods
mov
inc
iret
sbb
icebp
and
mov
inc
mov
mov
jne
fldcw
jnp
fiadds
push
insb
cmc
orb
dec
shll
cmp
mov
push
mov
xor
pop
adc
jae
icebp
call
and
jbe
cmp
aaa
pusha
andl
push
sahf
bound
pop
outsl
rorl
cmp
int
or
imul
lret
mov
shrb
je
sub
xor
add
movsl
mov
inc
scas
rol
and
jg,pt
xchg
mov
std
scas
jae
inc
push
cmp
mov
das
add
sbb
and
xor
das
das
shll
pop
arpl
push
sbb
lds
ret
mov
mov
jg
ss
cwtl
fsubrs
xchg
jno
divps
fidivrl
imul
popa
pop
adc
pop
cld
jne
daa
test
pop
and
bound
ret
popf
jb
or
stc
adc
scas
stos
inc
fldt
test
xlat
jg
int
lods
pop
mov
sub
fists
mov
sahf
sub
pop
sbb
ror
sub
jns
xor
sub
cmpsl
mov
pop
jl
jecxz
mov
andb
lret
test
add
sti
mov
loope
and
sbb
lahf
dec
sbb
ljmp
pop
cmp
mov
pop
popf
fnsave
adc
mov
into
jl
xchg
jnp
std
inc
or
lods
stos
and
pop
pop
xor
movsb
xchg
in
adc
aaa
outsb
lret
popa
cmp
popf
mov
jb
popf
imul
movsb
mov
xor
cmpsl
aas
jo
cmc
add
sbb
das
pop
cmp
pop
sbb
sbbl
jle
mov
lcall
jne
jge
shlb
popa
nop
mov
pop
shlb
cmc
dec
push
inc
push
xor
rolb
movsl
xchg
popa
addb
push
xchg
jo
push
rcl
push
jmp
and
cwtl
push
idiv
mov
addr16
das
push
shl
jp
sbb
mov
iret
push
insl
ret
aam
into
xchg
hlt
lcall
mov
lods
inc
clc
jae
lcall
mov
or
inc
nop
cmpsl
outsb
jne
push
gs
jg
sarl
cmp
xchg
fmull
fcmovb
out
jbe
loop
sub
sub
or
ds
out
adc
insb
rcl
popf
mov
call
subl
imul
insl
test
mov
lret
out
mov
pop
sub
test
ffreep
inc
dec
out
rclb
sarl
jle,pn
mov
cmp
jns
mov
and
scas
and
mov
adc
push
shll
das
adc
add
rcr
jb
xchg
je
faddl
leave
or
notb
aaa
clc
addr16
jae
sbb
cmpsb
jmp
jle
pop
testb
subl
icebp
scas
pop
sbbl
adc
outsl
mov
arpl
pushf
cwtl
and
sub
mov
insl
mov
xchg
add
inc
out
sub
cld
scas
cmp
les
mov
xchg
mov
ljmp
imul
jl
rorl
xchg
lods
mov
sub
push
shrl
lock
in
and
out
adc
xlat
int3
inc
pop
push
pop
std
jns
sub
push
cmp
push
test
outsl
shlb
nop
mov
repnz
mov
push
roll
jmp
insl
cmp
repnz
lret
popf
fcomp
iret
test
push
aam
cmp
dec
std
xor
mov
inc
cmp
ficompl
mov
ss
mov
in
and
mov
mov
sbb
mov
inc
push
outsb
nop
sub
mov
andb
orl
das
adc
addr16
pusha
ret
stos
sbb
mov
stos
sub
inc
dec
cmpsb
dec
rcrl
jne
cmp
push
mov
sub
push
adc
cmp
mov
frstor
not
sub
icebp
pushf
sub
xlat
loopne
sub
dec
in
jle
pop
lods
or
cmp
add
dec
or
pop
dec
jo
les
jle
fidivl
cmp
andb
jmp
xor
mov
int3
add
push
scas
cmp
mov
mov
cmc
mov
xlat
std
jbe
nop
clc
fnstsw
mov
popl
pop
out
aas
fildl
xor
repnz
ret
scas
sarb
lods
in
aas
imul
xor
add
daa
sbb
loop
push
mov
popf
xor
xor
ss
sub
adc
inc
in
fmuls
rorl
sbb
repz
xor
jle
fldt
cmp
ljmp
jne
sub
sbbb
adc
xor
outsl
push
nop
popa
out
lods
lcall
sarl
inc
add
pop
ljmp
stos
or
and
mov
cmp
lea
sub
stos
arpl
dec
mov
cmp
xchg
inc
pop
dec
sarl
pop
fisubrs
fdivs
sbb
sarb
sarl
pusha
fidivrl
xchg
mov
sbb
adc
sub
mov
mov
adc
icebp
jb
sbb
push
and
xchg
sub
xor
mov
fistpll
mov
pop
les
sarl
ds
jle
ror
arpl
movsl
xor
lea
mov
inc
jmp
push
pop
mov
mov
cltd
fs
lret
push
jle
lret
cltd
pop
outsl
int3
jno
adc
lahf
xchg
out
mov
hlt
push
adc
lret
push
out
and
iret
xchg
mov
cmp
in
inc
les
cld
movsl
dec
cs
arpl
xor
cmp
das
push
sub
stos
xchg
dec
mov
dec
pop
sbb
inc
inc
or
loopne
jmp
dec
incl
clc
fimull
nop
mov
lds
popf
jae
cwtl
xchg
jbe
or
stc
sub
sahf
cmpsb
scas
adc
xchg
mov
lea
pop
dec
outsb
movsl
add
adc
cmp
ss
mov
outsl
push
in
stc
pop
int
outsl
call
xchg
arpl
push
inc
movsb
scas
push
test
cmp
sub
xlat
rcrb
jne
sub
addr16
andl
cmp
cwtl
lret
insb
outsl
mov
rorl
mov
adc
cmc
mov
xor
xchg
in
scas
aam
inc
mov
lock
je
lcall
sbb
lock
clc
adc
or
adc
imul
pop
in
fucomip
jno
mov
roll
xlat
in
jecxz
add
ds
cwtl
js
fisubrl
mov
jo
mov
movsl
pop
jmp
mov
or
js
mov
scas
rcl
jno
push
lret
cmp
sbb
dec
push
ds
loop
hlt
outsb
sbb
or
adc
in
xchg
mov
stc
mov
ret
movb
push
fs
and
lahf
xor
xchg
mov
dec
or
int3
cwtl
jae
xlat
lahf
dec
add
pushf
test
inc
std
jge
cmp
push
aaa
iret
out
loope
add
xchg
xor
test
popf
jmp
sbb
mov
add
faddp
in
test
push
orb
mov
shll
pop
cwtl
push
fsubl
leave
xor
sbb
mov
xlat
test
icebp
testl
push
or
add
push
dec
sub
pop
add
js
lret
out
xorb
jnp
jge
xchg
stos
jl
xchg
add
pop
in
sbb
fs
inc
mov
in
push
mov
adc
jl
inc
sbb
stos
xor
inc
outsl
in
outsb
mov
clc
push
loop
or
shll
inc
cmpsl
or
or
fisubs
sub
into
pop
push
xor
sbb
push
loope
jp
and
out
push
pop
pop
shl
jo
das
sbb
sbb
pop
data16
fcomip
add
std
jae
mov
aam
out
push
xchg
inc
imul
pushl
pop
fistps
hlt
push
outsb
push
imul
dec
fwait
pop
test
and
push
sbb
dec
mov
ret
jmp
outsl
sub
mov
into
mov
lock
das
xlat
inc
sub
lock
fwait
pop
sub
rclb
push
in
mov
setno
repnz
jmp
sbb
lea
pop
mov
dec
fdiv
dec
jbe
out
push
loop
out
mov
xchg
lods
mov
lods
jmp
sub
aas
lret
and
or
push
idiv
dec
mov
pop
jmp
mov
data16
lods
mov
add
int3
loopne
rclb
int3
insl
enter
ficompl
jb
xchg
sbb
push
lret
or
mov
icebp
cmp
insb
popf
cld
xor
int
rcll
cltd
loope
lds
sti
rcrb
add
les
repz
push
sti
push
sbb
add
jo
push
dec
cmpl
inc
jae
mov
add
je
subl
ss
andl
fbld
popf
iret
dec
stos
stos
xor
or
pop
jne
adc
out
xor
bound
push
shrl
es
xchg
inc
dec
push
adc
adc
push
sub
dec
enter
xchg
in
fwait
xlat
repz
add
mov
or
pop
lcall
out
call
pop
hlt
sbb
push
jmp
xor
mov
xchg
loope
rcll
dec
cld
mov
iret
mov
int3
shr
jle
add
data16
dec
add
or
inc
shll
pop
rcl
pushl
xchg
inc
lahf
sub
lds
rclb
leave
arpl
stos
movsl
fstpl
lret
fxch
dec
mov
or
pop
jns
sub
xor
repnz
mov
xor
mov
in
sub
in
adc
jmp
lret
adc
outsl
push
mov
xchg
scas
push
jl
loop
dec
sub
gs
leave
and
or
in
sub
push
cwtl
jmp
xor
lret
aad
fstps
out
push
xor
ja
hlt
jae
aaa
sub
or
inc
xor
pop
dec
mov
push
and
push
ds
dec
je
and
loop
sub
mov
push
dec
lret
cmp
mov
inc
jo
into
dec
xchg
std
mov
sub
aaa
add
sub
xor
sub
or
pop
inc
xchg
cmp
fcomi
bound
hlt
jge
xor
sbb
xchg
push
cmp
adc
xchg
mov
and
dec
or
mov
out
lds
subl
out
imul
and
aam
jns
lret
adcl
dec
jns
in
jmp
movsl
jo
shlb
test
pop
xchg
inc
lea
push
shrl
in
and
adc
sub
xor
mov
pop
roll
pop
cmp
sbb
sti
daa
setb
ja
add
and
cli
jg
sbbl
std
in
movsb
lahf
xor
mov
lods
jmp
and
cmp
jle
cld
xlat
js
test
call
jae
and
add
cmp
sbb
jle
dec
xchg
and
jns
pop
ret
and
int3
xchg
lods
sbb
add
repnz
mov
cwtl
adc
sbb
hlt
scas
mov
adc
imul
pushf
pavgb
adc
pop
lods
xchg
add
mov
dec
mov
outsb
pop
pop
repz
ss
dec
sub
pop
add
imul
pop
ds
outsb
mov
jmp
popf
xor
sbb
daa
xchg
push
int3
mov
add
jo
cmp
inc
sub
stos
mov
fcomp
movsb
scas
insl
xor
and
mov
ds
pop
int3
mov
xorl
lea
push
sub
and
pop
cltd
pop
jae
xchg
jnp
push
or
iret
inc
cltd
jge
loopne
inc
jne
cmpsb
outsb
mov
jmp
data16
jnp
lret
sbb
mov
pop
sbb
add
jo
push
push
rolb
pop
sub
push
call
pop
or
jo
loopne
and
push
xchg
xor
and
mov
mov
sti
movsl
sarl
mov
jns
and
aas
pop
orb
icebp
lret
sub
fidivl
mov
pop
repnz
add
jbe
lea
ja
in
aaa
jns
mov
jo
mov
mov
push
hlt
lea
hlt
jno
jns,pn
daa
sub
xor
fcmovnb
cmp
rcrl
or
adc
cmp
loopne
mov
shrb
xor
add
lods
and
data16
or
sbb
iret
mov
push
pop
mov
sbb
popa
es
pop
hlt
rcll
ljmp
pop
arpl
loopne
cli
sub
outsb
fdivrl
outsb
jns
xchg
sbb
scas
push
aas
in
and
int3
cs
stos
fsubl
repz
jge
mov
mov
stos
push
mov
roll
rorl
xrelease
jp
call
cmpsb
ret
jle
leave
xor
and
testl
sbb
aas
pushf
orl
shrl
fisubs
lods
and
xchg
xchg
add
mov
pop
mov
jl
and
pop
lret
sub
fisubl
or
in
test
jecxz
shrl
daa
je
into
cmpsb
add
in
loopne
testl
out
inc
and
int
icebp
scas
fwait
in
sbb
xor
mov
jne
in
ss
stos
fisttps
pop
xlat
sub
not
stos
jge
pushl
movsl
or
xchg
sbb
cmp
pop
mov
mov
push
dec
push
push
add
mov
out
jmpw
mov
aas
inc
insl
popa
push
popf
add
fdivl
jmp
shll
fiaddl
rcrl
xchg
jne
repz
cmp
inc
mov
adc
ljmp
sbb
add
iret
or
xor
dec
mov
add
es
cmp
push
or
mov
outsb
shll
xor
jp
xor
mov
mov
nop
es
dec
stc
dec
add
nop
sbb
jbe
xchg
movsl
jp
shlb
fcmovu
mov
push
lret
mov
mov
sub
dec
mov
hlt
int3
lret
out
mov
jmp
and
dec
leave
pop
cmc
xor
pop
test
sub
lods
es
in
xchg
push
push
int
das
test
shll
jno
push
in
pop
das
push
jmp
push
jl
std
cmp
push
add
mov
push
pop
sbb
mov
cmp
jbe
sbb
and
xor
push
mov
pushf
mov
fs
cld
rdpmc
dec
ss
xorb
pop
ss
shlb
push
ja
mov
in
es
cli
movsb
stos
insb
inc
lods
and
stos
outsl
adc
sarl
lea
sub
int3
jp
arpl
dec
lret
les
mov
xorps
inc
int3
fsts
jno
mov
dec
mov
ret
inc
sub
push
dec
xchg
sti
adc
idivb
pop
cmpsl
aam
fists
mov
scas
aam
pushf
mov
cmp
xchg
xchg
mov
push
inc
in
in
ret
mov
sbb
jo
out
hlt
jo
push
shll
ret
daa
sbb
xor
insl
negl
add
pop
lahf
das
and
pusha
add
frstor
inc
imul
dec
shl
add
jp
stos
dec
enter
out
pop
cmp
and
dec
scas
test
cmp
mov
mov
stc
push
dec
arpl
inc
call
cmp
push
ret
lret
push
stos
mov
fldl
mov
pop
pop
in
mov
mov
xor
sbb
loope
push
mov
es
inc
adc
add
mov
xchg
aaa
sbb
js
jle
xchg
inc
dec
insl
mov
cmpb
fucomip
ss
mov
iret
cwtl
sti
lock
mov
or
gs
jb
cmp
iret
lahf
fdiv
clc
mov
mov
lret
push
leave
stos
or
cmp
mov
adc
popfw
sub
xchg
stos
and
jp
and
add
jge
into
mov
icebp
push
fs
outsb
lret
call
out
dec
daa
insb
push
pop
test
jo
es
outsb
iret
ret
hlt
lret
dec
nop
adc
add
inc
ds
es
imul
cwtl
inc
cmpsl
mov
sahf
mov
xorl
adc
dec
xor
push
jl
cmp
bound
into
push
filds
inc
cmpsb
daa
lds
fistpl
xchg
xorl
pushf
sbb
xor
test
es
sbb
enter
push
dec
jmp
inc
repz
cmp
dec
lods
mov
scas
pop
je
mov
out
xchg
dec
sti
loop
mov
mov
in
add
stos
pushf
mov
xor
lret
into
cmp
nop
add
jmp
mov
rol
cltd
mov
add
jl
dec
xor
and
shll
mov
call
std
mov
jmp
aas
movsb
dec
data16
jae
scas
mov
in
mov
pop
xchg
xchg
arpl
loopne
cli
cmp
stos
mov
adc
push
dec
sub
pop
cs
push
jl
insb
pushf
out
mov
mov
scas
int3
sahf
cld
mov
jle
outsb
or
cmp
sub
pop
cs
push
jl
insb
pushf
out
mov
mov
scas
int3
sahf
cld
mov
jle
outsb
inc
pop
inc
dec
sub
pop
cs
jl
insb
incb
fidivrs
int3
sahf
fmull
or
cmp
sub
push
cld
push
insb
arpl
es
into
fcmovne
push
xor
jno
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
