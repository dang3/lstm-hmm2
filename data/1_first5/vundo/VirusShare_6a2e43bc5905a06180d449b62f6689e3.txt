sbb
add
outsl
clc
inc
pop
pushl
xor
mov
lret
add
ljmp
dec
mov
stos
cmc
xchg
dec
dec
jo
push
test
ljmp
into
lret
push
or
add
push
lock
imul
test
stos
pop
fdivrp
cmpsl
jl
clc
sbb
lret
pop
and
xchg
loope
lcall
pop
or
aas
push
test
mov
icebp
inc
inc
movsl
sbb
cld
scas
ds
xchg
push
or
push
cmc
popa
repz
mov
xor
es
stos
cltd
push
sbb
mov
cltd
sti
jmp
or
xchg
push
cmc
or
push
icebp
jmp
pushw
test
pop
stos
add
cmp
adc
lea
popa
jp
sbb
pop
ds
jne
pushf
xor
stos
mov
bound
fnstsw
add
cmpsb
dec
popa
ret
push
mov
movsl
in
jb
imul
cmpl
shl
xchg
xchg
in
mov
push
addr16
add
cli
fldcw
or
mov
pop
mov
push
jae
out
pop
push
enter
push
ja
or
inc
loope
cmp
lods
ret
xor
cmp
xchg
pop
dec
inc
mov
insb
cmp
repz
and
dec
dec
insb
add
mov
dec
movsl
push
mov
popa
stos
adc
jmp
ds
adc
rol
test
icebp
sub
fdiv
adc
packssdw
push
cld
jo
sahf
or
enter
je
inc
add
ss
cmpsl
cmp
jnp
inc
xchg
xor
clc
into
jno
outsl
stos
sub
xchg
sbb
jge
nop
js
leave
pop
xchg
or
sar
sub
imul
jge
out
mov
testl
inc
sahf
mov
inc
ljmp
mov
mov
lret
mov
loope
rcrl
adc
cltd
bound
mov
jmp
out
dec
js
enter
or
clc
cltd
insb
shr
out
xor
int3
cmpsb
dec
sahf
int3
sbb
outsb
lea
in
push
leave
es
inc
jp
sbb
js
mov
or
xor
out
ficoml
mov
and
fcoms
jbe
ret
push
and
leave
shll
imul
insl
sub
hlt
stos
pusha
sub
ficompl
out
mov
ja
push
mov
into
cld
dec
or
outsb
icebp
bound
pop
mov
pop
cmp
mov
cmp
inc
xchg
ja
dec
add
stos
mov
pop
push
mov
and
in
inc
add
mov
stos
stos
adc
adc
addb
ret
lahf
sbb
push
cli
aas
int
dec
mov
in
movsbl
inc
dec
dec
scas
xchg
mov
daa
lds
test
xor
leave
inc
cmp
push
jo
lret
mov
jmp
movsb
fiadds
test
sub
or
mov
mov
fistpll
sbb
sarb
push
dec
sbb
sub
adc
adc
dec
and
mov
mov
jno
daa
dec
mov
fbld
adc
and
cmp
xchg
xor
pop
stc
int
xchg
test
inc
mov
call
stos
add
insl
popf
jmp
sub
cmp
push
push
movsb
les
push
mov
out
out
add
push
ss
mov
jne
cwtl
jnp
mov
insb
popf
push
mov
inc
test
lret
lcall
or
scas
xchg
lock
jle
mov
mov
mov
pop
mov
mov
ljmp
xchg
or
xchg
pop
xchg
addr16
je
jns
mov
dec
cli
mov
dec
fs
push
daa
jmp
jae
fildl
dec
ss
mov
xorb
movsb
and
mov
cmp
adc
jnp
daa
ret
gs
add
inc
xchg
fistps
pop
dec
or
mov
mov
out
dec
int
fcmovnb
lods
je
push
imul
mov
hlt
test
jmp
cld
bound
adc
xchg
jp
test
adc
fcomps
dec
dec
xor
xor
aad
add
dec
pop
inc
push
jp
push
cmp
mov
subl
jb
xor
xchg
inc
call
addr16
pop
xorl
in
sub
sbb
xor
stos
test
push
add
jns
pop
pop
call
cwtl
cwtl
inc
dec
movl
pushf
outsl
sub
ss
aad
test
lods
jnp
inc
scas
xchg
stos
cmp
and
jecxz
or
push
stos
ret
repnz
movsl
out
in
cmp
mov
ja
dec
lcall
dec
movsl
or
insertq
pop
outsb
lock
subb
push
cmp
sbb
add
imul
mov
sbb
mov
cs
outsl
dec
std
pop
je
fcmovu
test
leave
movsl
push
xchg
loope
scas
push
jae
xor
lahf
lods
xchg
data16
inc
stc
push
push
sbb
cmpl
lds
arpl
sbb
in
mov
loope
jg
mov
mov
faddl
sbb
cltd
imul
imul
and
sbb
and
mov
xor
popf
cmp
fsubs
jg
gs
mov
push
and
jl
rcrb
jecxz
sbb
add
popf
aad
mov
pop
or
push
xchg
xor
add
mov
add
sbb
jno
iret
cmp
hlt
leave
jns
ret
pop
inc
jecxz
mov
loopne
xor
popf
add
jnp
shlb
push
dec
and
sub
stos
in
pop
mov
xor
test
xchg
and
data16
push
xchg
sub
fisubl
addl
mov
inc
es
sbbl
movsl
jl
mov
lret
lea
xor
add
jno
add
or
cmc
cmp
in
lds
push
popf
testl
nop
mul
bound
and
sub
push
shl
xchg
in
xor
les
mov
mov
lea
or
pop
mov
pop
sub
push
pop
push
xlat
add
ror
xchg
out
aam
xchg
shrl
rorb
push
jl
and
ficoms
mov
loopne
mov
pop
jae
mov
mov
std
les
adc
push
push
mov
dec
jg
outsb
push
pushf
mov
test
add
ds
jecxz
test
scas
das
ss
daa
jbe
aaa
clc
adc
add
in
and
add
xor
inc
test
and
jge
fnstcw
subb
add
stc
push
pop
scas
shl
pop
inc
int
xor
or
fdivs
out
and
lock
iret
inc
out
stos
lods
lret
pop
cmpsb
stc
push
cmpb
dec
out
jnp
mov
lea
gs
je
aas
lcall
mov
jo
outsb
ret
xchg
shr
xchg
mov
sbb
sbb
sub
pop
sbb
iret
sub
orl
add
in
push
cli
test
push
mov
add
fstpl
dec
cmpsl
mov
jge
ss
faddl
sbb
dec
lods
add
jbe
cmp
cs
aad
sub
fistl
sbb
sub
addr16
xor
jno
add
dec
add
in
mov
lds
xchg
cmp
frstor
sub
iret
inc
outsl
cli
sahf
xchg
or
jmp
clc
jle
pop
enter
cmp
cmp
repnz
in
ret
js
add
stos
stos
sbb
out
add
pop
add
pop
inc
scas
push
pop
dec
inc
sbb
fstpl
lcall
xlat
mov
ljmp
dec
xchg
inc
loope
lret
lea
xchg
mov
jecxz
ret
jns
xor
ljmp
out
int3
push
sbb
jp
push
jle
jmp
add
jmp
push
pop
inc
or
mov
adc
mov
fcmovnbe
test
leave
sub
aam
dec
rdtsc
push
mov
jge
mov
fs
sbb
repz
push
rol
movsb
push
and
xchg
cwtl
sbb
arpl
and
sub
adc
imul
jl
enter
out
lods
faddp
mov
mov
out
dec
cmc
fwait
mov
xchg
aad
lcall
dec
jl
imul
sub
outsb
cmc
mov
mov
std
or
mov
xchg
and
shlb
inc
test
cld
mov
dec
cli
std
bound
fildl
or
bound
xchg
and
shll
push
sub
dec
cmp
cmp
jl
inc
or
sbb
dec
xor
insb
mov
inc
roll
dec
push
xchg
mov
in
daa
and
push
mov
in
adc
xchg
sti
in
sub
push
ds
pusha
lock
and
dec
aam
pusha
dec
mov
filds
sbb
pop
pop
aas
cmp
jp
data16
add
nop
mov
jp
jle
sar
jp
or
lods
dec
pop
jns
cmpsl
icebp
test
pop
insl
and
xchg
fsts
xchg
dec
or
fcmovu
outsb
jns
stos
or
mov
sti
add
sub
lods
sub
or
loopne
test
dec
movsl
das
adc
js
or
iret
push
lods
lods
lods
fldenv
outsl
jno
mov
mov
call
adc
sbb
in
sbb
insl
aam
outsl
cltd
or
xchg
call
leave
sub
adc
in
or
xchg
movsl
xchg
xlat
pushf
ljmp
int3
sbbb
jmp
popf
lods
pop
push
or
jmp
add
je
push
out
inc
adc
out
andl
pop
and
jbe
push
or
sub
xor
lea
lea
hlt
pop
cmpsb
xchg
inc
hlt
cmpb
xlat
xor
add
lods
lcall
daa
cmpsb
xchg
mov
cmp
lahf
pop
push
les
or
out
add
mov
aas
mov
mov
jno
pop
cmpsl
jb
test
rcrl
shl
add
jno
or
sbb
std
xor
mov
xchg
ja
call
jo
cmp
cs
lods
popf
lock
dec
out
xchg
add
jbe
jne
cmp
xlat
arpl
ret
adc
test
add
sbb
imul
out
cltd
lcall
loop,pt
adc
js
sbb
and
sbb
dec
movsb
ss
std
adc
in
xchg
enter
and
shll
dec
scas
cwtl
out
shrb
xchg
std
iret
push
dec
ss
mov
sbb
cli
aam
jl
movsb
shlb
lahf
test
pop
repnz
jb
lods
and
mov
adc
pop
ss
pop
and
xor
push
push
inc
mov
cli
es
lcall
dec
movsl
dec
stos
xor
xchg
cmpsl
jl
cld
enter
out
into
pop
aas
shrl
cmp
sti
xor
daa
pop
std
cwtl
jge
movsl
xchg
push
push
nop
mov
repnz
fimuls
bound
cli
sbb
inc
das
enter
adc
call
xchg
mull
stos
inc
arpl
sbb
iret
imul
adc
mov
mov
lods
in
aad
jmp
xor
nop
in
pop
out
and
inc
je
loopne
push
cmp
lods
shr
cmp
dec
mov
jmp
aam
mov
jbe
fdivr
iret
mov
insb
add
ja
je
and
or
mov
and
dec
loopne
sahf
jnp
xchg
xor
aaa
js
push
movsl
loopne
pop
jmp
jb
dec
sbb
pop
xor
push
push
or
ss
mov
sbb
sub
sti
sub
push
outsl
inc
out
lahf
lret
ret
mov
mov
inc
outsl
mov
mov
inc
sub
push
sbb
ja
pushf
push
cmp
xor
adc
call
fcoms
std
icebp
ret
das
jg
and
repz
inc
jns
scas
mov
das
or
add
scas
in
inc
adc
mov
aam
lods
popa
push
je,pn
inc
mull
ret
xor
xchg
test
aad
sbb
xchg
aad
in
inc
and
lahf
push
xchg
or
in
push
mov
rcrb
push
shl
cmp
stos
rcll
mov
mov
loope
inc
sbb
stc
jno
mov
add
iret
sub
popa
out
imul
mov
xor
dec
push
adc
mov
lret
xchg
pop
mov
push
fs
fistpl
imul
lret
test
push
das
pop
inc
shrb
and
sar
add
add
out
mov
push
mov
loopne
outsl
push
push
fnstcw
call
cmc
xchg
cmp
leave
cld
call
xor
repz
sbb
jmp
sbb
jle
push
flds
sub
xchg
popf
int
std
test
ljmp
and
insl
sahf
adcl
movl
aas
xchg
and
insl
sbb
nop
pop
sarb
jp
ljmp
mov
enter
push
aaa
jl
rcll
insl
jne
outsb
imul
mov
or
cli
cmpxchg
jo
jne
lea
fldt
cmp
cs
and
arpl
pop
loop
outsb
pop
inc
sub
xchg
push
shlb
mull
cmpsl
aad
ljmp
and
push
leave
movsb
imul
push
repnz
or
sti
aad
adc
xor
jecxz
sub
scas
mov
pop
pushf
in
loop
enter
dec
pop
jmp
push
int
in
mov
fstp
sub
add
pop
cli
daa
jg
icebp
push
or
jns
adc
inc
into
sub
scas
hlt
xor
divl
sbb
pop
pop
fs
outsl
mov
aad
inc
cld
sbb
jo
xlat
dec
add
mov
jle
aas
xchg
dec
sub
imul
and
sub
pop
sbb
sub
cmp
incb
or
adc
ficompl
stos
adc
jnp
and
jno
mov
adc
and
aas
addr16
aas
and
or
mov
mov
ret
imul
jg
xor
stos
bound
push
insl
insl
jne
pop
mov
in
add
cmp
inc
popa
call
dec
out
fwait
xor
scas
mov
stc
xchg
mov
cmpsb
dec
jbe
fdivrs
mov
mov
push
nop
cmc
dec
add
inc
push
mov
sub
xchg
jecxz
add
dec
mov
inc
xor
jmp
js
stos
mov
scas
inc
or
dec
inc
pop
mov
mov
mov
sahf
dec
fcomi
sbb
push
sti
nop
add
push
mov
mov
sbb
lea
push
cmpb
dec
dec
dec
icebp
inc
idiv
mov
mov
stc
dec
and
push
inc
test
mov
mov
xorl
mov
adc
or
ds
cmp
adc
lahf
pop
movsb
xchg
adc
mov
les
stos
inc
repz
iret
xor
ljmp
test
xchg
cmpsb
lahf
aam
xchg
insl
push
sbb
pop
pushf
daa
dec
sub
cmp
and
pop
mov
leave
cld
insl
and
xchg
loope
icebp
mov
adc
sub
jl
mov
fldt
lods
or
stc
les
inc
sub
xor
imul
pop
adc
fldenv
cmp
mov
xchg
sub
jne
mov
sub
push
repz
rorl
cmp
mov
cs
push
add
mov
adcl
inc
sub
int3
mov
jge
aam
in
add
xchg
cs
and
or
push
in
dec
jecxz
jge
mov
fs
add
mov
roll
and
jno
int
inc
mov
mov
push
mov
bound
outsb
or
scas
iret
out
jne
lahf
mov
inc
add
idivb
icebp
and
mov
out
xor
adcb
loope
andb
mov
cmp
sahf
mov
jmp
dec
lret
pop
pop
jbe
add
enter
cmp
rcrb
add
or
or
dec
subb
sub
repz
fisubs
jmp
cmp
sub
sub
sti
fbld
les
les
push
stos
in
mov
popa
jge
jecxz
pop
or
or
lds
jb
jns
imul
mov
popa
adc
js
imul
mov
hlt
sub
insl
fwait
jno
mov
dec
inc
out
rcl
movsl
aam
nop
xor
mov
add
inc
fs
jle
add
repnz
inc
repz
ljmp
xchg
sbb
lods
or
cmp
sub
add
sub
sub
in
add
pop
mov
in
jp
xor
push
into
clc
mov
cli
pop
add
mov
out
mov
adc
sub
out
mov
icebp
test
orb
cwtl
push
repz
xor
outsl
ret
sub
jg
out
insb
dec
fists
mov
and
mov
xchg
dec
inc
ljmp
jmp
aad
mov
hlt
je
mov
dec
adc
and
fdivl
jno
xor
int3
dec
cmovle
jle
push
mov
rcrb
sub
xchg
adc
cs
mov
and
imul
mov
xor
cmp
pusha
leave
and
jno
inc
or
shl
xor
xchg
outsb
ficoml
in
sbb
or
or
andb
jo
push
pop
mov
jle
xchg
adc
das
mov
mov
lds
cmp
les
or
stos
mov
dec
int3
xchg
inc
sahf
rcrl
jle
inc
mov
sub
push
into
add
stc
xchg
push
lahf
mov
pusha
scas
out
mov
jne
mov
leave
leave
sbb
mov
pop
add
or
dec
sub
fmuls
subl
ret
loope
outsb
cmc
adc
jmp
dec
xchg
shr
lcall
ret
xor
aam
fmuls
iret
pop
or
push
cmp
mov
out
mov
clc
or
cld
data16
adc
roll
pop
jle
mov
imul
jnp
adc
xchg
lahf
sub
or
cmp
push
push
pop
hlt
jns
pop
nop
es
jb
mov
out
mov
rolb
push
ret
out
push
pop
push
sub
mov
iret
sti
cmpsb
lahf
into
pop
and
lods
pop
stos
rorl
iret
cs
lods
pop
js
mov
mov
cs
cltd
aaa
es
rorl
cs
movsb
fldenv
sbbb
stc
jge
rcll
ljmp
or
scas
fwait
dec
inc
dec
jmp
idivl
ficompl
dec
push
into
jge
jmp
mov
push
rcl
dec
ret
jb
imul
pop
lcall
push
push
into
push
pushf
adc
and
xchg
jl
bound
out
jle
fisttps
pop
or
icebp
negb
cmp
mov
add
out
outsb
mov
stc
xor
sti
rolb
and
inc
mov
popf
adc
pop
aad
mov
jnp
mov
imul
mov
xor
test
and
jb
push
xor
mov
out
out
sbb
jb
lahf
popa
les
in
mov
lds
lods
xchg
movsb
dec
dec
inc
mov
aas
pushf
jns
imul
sbb
ret
scas
loop
mov
mov
addl
dec
aam
aaa
xor
sub
loope
sahf
jecxz
test
fnstcw
loop
shr
adc
and
push
mov
dec
mov
fisubrl
cmp
movsb
xchg
stc
sub
rorl
fildll
divl
jl
enter
imul
outsb
jge
fnstsw
rcrb
push
push
add
filds
push
pop
sub
ja
push
push
fs
cmp
mov
gs
movsb
xchg
sbb
loopne
adc
stos
addb
lods
ret
and
inc
push
fwait
dec
lcall
push
mov
mov
outsb
sub
dec
scas
xchg
cmpsb
mov
cmc
mov
outsb
cmc
aad
lea
movsl
ja
mov
adc
xchg
outsb
in
and
xor
push
mov
scas
inc
xchg
mov
mov
dec
sub
call
addr16
mov
sbb
sti
xchg
fs
and
into
mov
xchg
inc
jecxz
mov
popa
or
sub
loopne
in
ficoml
popa
sub
les
mov
cmc
pop
add
mov
sbb
push
pop
push
sub
inc
je
pop
xchg
sahf
lods
jns
mull
dec
cwtl
mov
pop
cld
adc
jecxz
hlt
dec
pop
jne
stos
add
xor
xor
and
icebp
adc
test
fcompl
in
sbb
xchg
push
pop
lret
js
or
inc
addb
sarl
mov
mov
push
cmp
mov
movsl
cld
fstl
pop
pop
aaa
cmp
inc
pop
bound
out
das
adc
mov
add
call
in
cmp
adc
jne
sub
and
push
adc
icebp
out
cmc
inc
push
loopne
dec
add
imul
test
inc
sbb
daa
xchg
or
push
jae
jle
popf
aam
and
daa
mov
cmp
je
lea
and
cmpsb
sarb
cld
rcl
ret
xor
mov
incl
in
pop
fwait
and
daa
push
mov
mov
sbb
sbb
rcrb
scas
mov
mov
pop
lret
jle
pusha
insb
fisubl
lods
sub
hlt
int3
push
cmp
stos
popl
in
arpl
insb
lret
lret
ljmp
pop
sahf
ror
pop
daa
loope
lcall
inc
push
cmp
adc
clc
fbstp
test
call
rcrl
lock
inc
out
adc
add
out
jg
push
bound
fsub
pushf
inc
mov
inc
mov
mov
mov
sbb
adc
ss
or
in
or
mov
dec
sbb
aam
shll
xorl
sarb
adc
ret
loope
rcrl
cs
mov
mov
gs
mov
mov
mov
xor
mov
adc
mov
pop
pushf
cmpsl
dec
lds
int
lea
add
sub
mov
and
sub
shr
pop
sti
nop
add
lock
test
xchg
mov
addl
out
pusha
mov
leave
cltd
jns
fimull
hlt
int
lcall
dec
jp
pop
adc
sub
sub
mov
sbb
cmp
or
fistps
cmc
shl
outsl
jns
inc
mov
dec
jp
mov
inc
mov
jnp
sub
ss
or
jle
dec
clc
cmp
sbb
pop
nop
rorl
data16
movsl
rcrb
adc
mov
filds
rclb
pop
push
daa
sbbl
lahf
push
ljmp
xchg
dec
in
xorl
sbb
addr16
sub
fisubrs
add
adc
push
hlt
cli
imul
out
xchg
jnp
dec
out
ljmp
rcrl
jge
test
pop
cmp
fsubs
out
dec
icebp
inc
adc
xchg
push
clc
dec
outsb
xor
fisubl
outsb
sbb
jb
lret
lock
shlb
fldcw
push
pop
pop
sahf
or
popa
xchg
aaa
add
mov
push
xchg
cltd
lds
in
mov
in
or
leave
push
orl
filds
dec
test
and
push
adc
test
fidivs
xor
dec
repz
dec
cld
or
gs
lret
ja
popf
mov
into
int3
push
ror
adc
cwtl
adc
mov
sub
push
jp
cmpsb
pop
push
jns
popa
jne
mov
mov
push
lds
xor
lcall
or
cmp
hlt
imul
xchg
mov
jmp
out
sbb
psadbw
les
hlt
xchg
aaa
lret
mov
out
jns
jl
xor
mov
lcall
dec
push
arpl
inc
jae
mov
jno
in
insb
insl
inc
scas
push
repz
pop
xlat
inc
adc
push
int3
in
int
in
push
movsb
dec
lock
mov
xchg
inc
jl
icebp
jmp
push
ds
jnp
cmp
mov
pop
pusha
out
xchg
cmc
cmp
es
out
and
pop
sub
andl
and
push
pop
arpl
add
xchg
sub
xchg
icebp
add
push
cmpsl
fcompl
xchg
aad
mov
push
inc
mov
iret
lea
aam
out
pop
aad
aad
xchg
mov
inc
and
mov
or
pop
push
insb
cmc
xor
jbe
jle
mov
mov
mov
out
push
subl
fwait
inc
add
lods
lahf
jecxz
in
outsb
loopne
jecxz
xchg
pop
dec
stos
bnd
push
lret
jnp
fldz
sub
inc
mov
mov
pop
sbb
push
lahf
insl
rcrb
or
mov
xlat
xor
ss
mov
inc
pop
js
les
addb
addb
xor
push
scas
mov
in
xchg
and
cmp
xchg
adc
cmp
push
mov
outsl
in
mov
mov
and
push
xchg
push
sahf
lret
clc
data16
sub
xorl
pop
jo
imul
jecxz
and
inc
mov
cli
les
addr16
lods
jns
clc
pop
rol
xchg
fcmovb
xchg
lods
popf
sub
je
lods
inc
sbb
jp
in
imul
test
adc
pop
mov
and
ret
cmpsb
push
jg
mov
adc
cld
jae
mov
cmpb
push
cmp
loope
lods
xchg
stc
cmp
fcomps
aas
add
dec
xchg
xor
sti
cwtl
sbb
imul
std
cltd
and
notl
dec
in
sub
jns
mov
je
xor
inc
xchg
or
sbb
loopne
sub
and
subb
and
push
sub
jecxz
sbb
stc
mov
mov
aaa
js
int
jmp
clc
mov
cmp
mov
dec
in
jecxz
std
sti
jle
mov
xchg
mov
sub
add
xchg
jle
or
and
adc
int3
sub
fdivl
fnstenv
iret
sub
scas
dec
adc
in
pop
dec
jo
fdivrl
sub
orl
pop
jmp
or
addr16
ret
add
bound
shll
push
add
xchg
xchg
add
rol
cmp
sub
adc
xchg
cmc
inc
cwtl
and
jmp
fs
lcall
xor
mov
ror
sub
test
lcall
aam
pop
cmpsb
cltd
push
fcmovne
insl
into
push
inc
pop
push
xor
enter
out
repz
sub
js
in
rclb
dec
iret
lea
sbb
call
push
je
movsb
js
inc
les
or
fmul
hlt
popf
int
sub
or
out
mov
lcall
mov
std
jnp
repnz
out
test
jb
mov
lds
push
fnstcw
or
xchg
in
sub
cld
adc
add
pushl
pushf
sbb
mov
cmp
pop
pushf
push
lcall
sbb
xchg
lahf
mov
orb
adc
scas
mov
inc
mov
sbb
mov
add
ja
mov
xor
btc
adc
js
inc
das
dec
adc
push
pop
mov
fmulp
push
inc
movzbl
jae
and
lock
je
adcb
ss
xchg
fildl
gs
xor
or
pop
daa
mov
xchg
cmp
dec
stos
mov
pushl
mov
dec
sub
push
stos
jmp
mov
mov
insl
pop
loop
mov
dec
hlt
sbb
int
xor
pop
xor
cltd
xchg
mov
test
sbb
cmp
dec
mov
add
push
dec
in
mov
push
aaa
adc
xchg
push
imul
sbb
je
jno
enter
testb
ljmp
fisubrl
xchg
mov
les
jo
fwait
and
decb
xor
aas
xchg
loope
fisttpl
filds
xor
inc
loopne
dec
jmp
in
add
inc
jecxz
sbb
rolb
icebp
fwait
jecxz
popa
out
rcrb
test
add
pop
xchg
jmp
lea
xchg
std
das
dec
loope
mov
lea
mov
jl
jno
push
adc
js
lods
shll
test
xor
push
adc
push
je
clc
sub
mov
or
aam
sub
scas
jo
cs
test
sbb
and
out
mov
jge
dec
lret
mov
cld
andb
xor
sbb
rclb
and
std
scas
jae
fdivrs
sbb
clc
xor
hlt
sbb
cltd
mov
xchg
sub
out
lods
dec
xchg
pop
mov
xchg
pusha
jae
mov
lea
and
adc
imul
cld
call
loopne
inc
mov
pop
fisttps
sbbb
aad
popf
insl
sbb
inc
adc
xor
in
inc
ss
shrl
fiadds
in
jle
mov
add
adc
fnstsw
xchg
inc
cmpsl
mov
or
cmp
fs
mov
sbb
into
adc
sahf
inc
stos
shrl
dec
lcall
aad
mov
das
movsb
hlt
mov
or
cmp
repnz
cli
and
aaa
or
das
incb
xlat
sbb
cs
das
jecxz
aad
xchg
subb
popl
jnp
push
cmp
shlb
mov
dec
ljmp
cmp
or
dec
or
lahf
push
sub
std
fisubrl
adc
sub
pop
orl
cmpsb
lret
jo
pop
pusha
cmp
jb
bound
lock
mov
repz
add
fidivrl
adc
enter
cmp
dec
outsl
adc
enter
rcll
dec
push
cmp
movsb
shll
cmp
adc
mov
mov
push
inc
ljmp
lret
adc
pop
sahf
jns
push
clc
int3
push
xor
in
cmp
push
and
imul
daa
adc
jmp
enter
mov
cld
pop
sub
mov
xchg
jns
pushf
pop
fmul
sarb
je
ja
adc
add
mov
pop
push
data16
mov
jge
mov
jb
mov
mov
aaa
mov
call
les
xchg
pushf
xchg
loope
adc
lock
or
or
loop
mov
in
adc
push
jmp
inc
in
sahf
mov
std
cli
jmp
jmp
add
xorl
mov
push
fildl
daa
fdivl
call
push
cs
mov
gs
js
inc
inc
lea
add
pop
jmp
fldcw
mov
incb
jp
into
mov
jl
dec
push
xchg
outsl
sub
push
pop
out
and
ret
and
mov
call
sbb
push
arpl
pop
lret
xchg
mov
cmc
inc
adc
aam
push
sbb
data16
jbe
dec
movsl
stos
and
sbb
fcmovne
sbb
ficompl
mov
pop
and
pop
loopne
aaa
adc
and
pop
and
in
orl
js
popa
push
dec
mov
ror
jle
xor
mulb
fwait
repz
jle
hlt
jg
mov
xchg
push
cld
fildll
aad
setp
fcoml
icebp
mov
in
cmp
aaa
mov
sub
js
je
dec
scas
fldenv
sbb
call
and
mov
cltd
sbb
leave
adc
sbb
inc
push
push
loopne
jmp
out
mov
ss
cli
jp
enter
mov
les
xchg
add
rolb
hlt
dec
dec
into
push
faddp
scas
cmpb
adc
sbb
xor
aam
rorb
pop
xor
or
pop
mov
or
mov
sbbl
dec
out
add
cmp
mov
cmpsb
cwtl
inc
inc
xor
inc
or
daa
push
out
inc
test
outsb
mov
cmc
iret
mov
cwtl
add
stos
shll
fcompl
jb
mov
das
sahf
pop
mov
imul
insb
aam
xchg
push
imul
mov
movsl
xor
dec
jmp
sbb
insl
test
inc
mov
jecxz
jmp
cmp
dec
cld
jnp
mov
repz
sbb
dec
daa
sbb
sbb
pop
dec
shlb
mov
xor
nop
scas
pop
in
out
dec
inc
mov
pop
imul
clc
lea
mov
in
movsb
xchg
sub
ja
leave
jne
aad
iret
cmp
xor
test
jns
mov
loop
aam
loop
jle
cwtl
lods
sarb
gs
inc
cmp
adc
pop
aam
out
mov
ret
inc
imul
sub
inc
add
mov
ret
sbb
jae
into
lds
add
and
xor
mov
in
push
push
jmp
and
ror
fbstp
mov
mov
and
and
dec
iret
out
jo
push
push
jmp
jo
sbbl
xchg
xor
xor
dec
es
incb
cld
in
push
sahf
loope
dec
sbb
pop
es
mov
jecxz
lret
fisubs
push
leave
and
or
pop
push
mov
out
je
loop
mov
orb
movsl
out
mov
jns
fcoms
mov
daa
mov
add
add
call
jecxz
repnz
lds
movsb
jno
xor
lock
fidivrs
xor
push
sahf
xchg
pop
incl
push
ljmp
dec
or
xchg
outsb
sub
imul
mov
fsubr
test
push
inc
pop
sbb
aaa
and
xlat
enter
mov
jg
lods
xchg
push
and
test
repz
clc
test
mov
jae
loopne
dec
dec
mov
repnz
out
push
cmpsb
mov
or
sbb
ret
sub
movsl
arpl
jb
ficoms
cmpsb
mov
inc
cmpsb
mov
aaa
les
mov
mov
push
mov
orb
push
out
jne
pushf
adc
or
jecxz
jmp
icebp
fisubl
xchg
dec
aaa
outsb
xor
jae
movsb
imul
push
mov
stc
mov
pop
pushf
lods
and
gs
lods
out
sbb
loop
dec
inc
xchg
fs
sbb
fcompl
cltd
or
pop
pop
mov
in
inc
in
in
inc
dec
lea
pop
test
sub
dec
arpl
inc
add
inc
pop
repnz
dec
out
cltd
rorb
adc
mov
jg
movsb
pop
jge
and
ret
xchg
dec
ret
aad
xor
cmpsb
dec
fistpll
rorl
icebp
fidivl
out
mov
loopne
xchg
cmp
mov
mov
inc
stos
pushl
inc
adc
out
mov
sahf
mov
push
adc
loope
push
xor
hlt
cmpsl
imul
sub
sbb
adc
xchg
std
sub
inc
xchg
add
mov
ss
jge
adc
and
mov
jnp
mov
inc
mov
test
mov
fsubrl
sbbb
loope
jp
jnp
mov
shll
jp
pop
add
xor
movsb
repnz
mov
call
jp
jl
clc
add
add
pop
push
sar
adc
mov
es
xchg
sbb
jp
xchg
out
pushf
and
das
jae
xor
and
data16
negl
inc
aaa
ret
fstp
scas
mov
in
dec
push
push
divb
mov
dec
xchg
mov
sub
clc
cmp
mov
pusha
mov
shr
pop
sahf
lcall
daa
loope
stc
inc
inc
js
mov
mov
push
std
outsb
icebp
scas
jmp
mov
popa
and
lret
pushf
int
cmp
test
in
inc
js
mov
les
pop
popa
adc
fmull
fsubrl
xchg
ljmp
pop
imul
pusha
outsb
jns
shlb
bound
or
hlt
je
das
popl
push
lds
insl
inc
adc
mov
xor
pop
sub
push
outsl
sbb
cmpb
aam
adc
xchg
repnz
clc
insl
push
mov
nop
arpl
pop
pop
jns
mov
into
bnd
push
or
fdiv
jecxz
dec
in
adc
xchg
cmpsb
les
xor
std
inc
jbe
mov
enter
mov
jne
mov
lret
mov
popa
lea
aas
fadds
adc
sarb
push
pop
adc
jbe
xchg
and
jnp
int3
xchg
scas
out
iret
outsl
mov
cltd
fs
dec
jle
inc
roll
cld
sahf
xchg
pop
mov
jecxz
ret
mov
mov
mov
push
xchg
fiaddl
mov
jns
jbe
xor
imul
lret
rorl
out
out
jecxz
xor
inc
not
fdivs
sar
test
and
xchg
neg
push
dec
mov
mov
cmpl
mov
pop
sbbl
pop
xor
gs
leave
mov
adc
subb
inc
and
lahf
push
push
andl
pop
inc
jg
loope
pop
leave
xchg
mov
push
add
shll
mov
push
pop
xor
adc
movsl
repz
imul
and
fstps
and
pop
cmp
mov
or
sub
xchg
sbb
add
inc
or
cmp
loop
dec
mov
fs
push
icebp
push
dec
gs
mov
test
sahf
test
stc
mov
insl
rcll
das
into
popf
mov
xchg
cld
xchg
pop
dec
xchg
sti
push
mov
mov
lea
mov
lahf
mov
nop
or
mov
mov
sbb
es
arpl
mov
jmp
xchg
xchg
jmp
jmp
fcomps
or
or
cmp
xor
push
aaa
cli
jl
pop
cmp
add
loope
pop
sahf
lock
lahf
adc
or
daa
jg
xor
mov
xor
out
das
xchg
xchg
in
jl
in
repz
cmp
mov
fistps
out
cmp
aaa
mov
inc
cmc
xchg
insl
fs
pop
ret
push
cltd
jns
mov
aad
jb
push
sub
repz
and
lods
cmpsb
ds
mov
pop
movsb
mov
adc
mov
out
cmp
pop
loope
dec
das
adc
fisubl
insl
rolb
push
fistl
dec
mov
xor
or
dec
cmc
cmp
add
inc
mov
or
mov
lods
inc
push
sbb
adc
xor
out
std
adc
out
dec
xlat
xchg
mov
mov
sti
cli
pop
adc
inc
xchg
xchg
add
rolb
push
outsl
or
xlat
clc
popa
into
les
xor
and
inc
and
shll
icebp
loop
dec
mov
and
sbb
ficompl
and
and
sbb
inc
cmp
dec
cmpsb
inc
add
cs
outsl
add
pop
jg
rorl
ds
xor
pop
jo
cmp
mov
xchg
arpl
mov
clc
std
inc
xor
shl
mul
das
sub
test
xchg
cli
pop
icebp
pop
hlt
cltd
inc
insb
adc
add
lret
mov
or
fldenv
xor
sub
in
leave
das
fmull
dec
gs
mov
stos
mov
in
test
test
push
xor
aad
push
mov
int
std
dec
ds
fimull
cmpsl
push
mov
pop
pop
mov
jo
lods
lds
clc
fdivr
data16
mov
sti
add
xchg
out
dec
mov
mov
xchg
pop
jae
mov
xchg
mov
int
push
ds
xor
fcmovb
repnz
inc
push
rcll
scas
xchg
push
jbe
xor
testb
popf
xchg
aaa
test
jbe
icebp
push
fisubl
insl
mov
dec
mov
imul
ror
test
fstl
hlt
mov
inc
cli
repz
xchg
jmp
insb
jp
mov
adcl
out
movsl
push
xor
mov
add
pop
add
cmpsb
pop
push
cmp
punpckhbw
inc
add
rolb
cmp
mov
shrb
stos
mov
in
xor
mov
cli
mov
sbb
addb
movb
or
jmp
dec
mov
hlt
stc
in
mov
rcrl
js
je
cmp
test
cld
jae
addl
pop
loopne
in
test
push
inc
insl
inc
mov
aam
push
ret
popa
pop
fimull
adc
jb
push
dec
push
add
jle
jmp
xor
cli
insl
inc
aas
stos
jo
outsb
xlat
xchg
scas
repz
notb
or
jne
and
movl
popf
inc
mov
xchg
pusha
adc
dec
es
repnz
push
les
shrb
fwait
xchg
xor
test
mov
jnp
mov
mov
cli
jecxz
popf
push
pop
xor
inc
loop
xor
mov
lret
add
and
adc
pop
mov
rolb
or
xchg
mov
sub
adc
nop
mov
vpmadcsswd
aaa
sbb
repnz
xchg
cmp
testb
orl
in
int
mov
clc
add
pop
jb
lods
cltd
jle
cmpsb
adc
or
jae
dec
lret
adc
shlb
jecxz
and
push
jge
addr16
dec
push
aad
scas
icebp
jecxz
fistpll
cmpsb
test
mov
int
sti
loope
test
hlt
outsb
fnstenv
test
bound
sbb
mov
bound
jbe
movsl
movsb
stc
push
xchg
pop
lods
cmp
mov
xchg
or
test
push
pop
stc
imulb
clc
cwtl
daa
fs
add
mov
loope
xor
or
sbb
cs
xor
jo
or
jmp
movl
inc
jb
pop
sub
ljmp
ljmp
and
mov
rolb
jmp
adc
decb
adc
pop
jne
in
in
xor
lret
out
xchg
fprem
movsl
fs
xchg
icebp
pushf
cli
mov
push
push
in
ljmp
fdivs
loope
aad
jp
sar
in
addb
push
scas
cli
jl
pop
test
push
dec
scas
nop
inc
icebp
cwtl
or
stos
outsb
stos
ljmp
push
mov
cld
pop
pop
in
pop
push
je
pop
popa
cmp
xchg
or
pop
shrb
ret
ja
and
pop
adc
xchg
push
jbe
adc
stos
lds
or
enter
mov
dec
inc
ljmp
js
call
add
push
pop
pop
aad
jne
xor
arpl
shrl
nop
add
nop
push
push
mov
dec
push
popf
sub
movsb
xor
movsl
shlb
dec
aaa
stos
call
adc
jae
mov
shr
jle
mov
in
sarb
push
mov
push
pushf
lret
ja
sub
ss
cmp
push
mov
push
jbe
out
pop
sub
xor
je
mov
orb
inc
xchg
mov
mov
jns,pt
addr16
fisttpll
jecxz
orl
add
sub
cmp
scas
adc
insl
or
into
insb
ss
or
cmpsb
jecxz
mov
arpl
mov
fildl
clc
int
gs
jno
jo
insb
sti
pop
jo
into
and
stc
insl
adc
shlb
cmc
add
in
jmp
xchg
pop
fnstenv
inc
push
cltd
into
icebp
add
subl
ret
add
jo
adc
jbe
cmp
add
push
jmp
js
or
fimull
loope
mov
sub
pop
in
add
dec
or
lods
add
fmul
fdivrs
ja
mov
mov
xchg
rcr
repnz
jge
mov
cmp
mov
test
in
xchg
out
lods
mov
add
pop
loop
int3
pop
push
inc
cs
dec
mov
mov
outsl
out
or
inc
ret
inc
jb
sub
mov
mov
dec
std
jne
dec
in
loope
add
orl
and
adc
pop
arpl
sti
in
clc
je
sbb
dec
jno
pop
fmuls
push
and
mov
into
in
aam
xlat
ljmp
arpl
or
fcmovnbe
pop
lea
out
mov
out
adc
nop
cmp
sub
jne
jl
cmp
or
cltd
push
cmp
out
test
jl
push
movsl
xchg
inc
out
mov
sub
fisubrs
dec
adc
xor
add
jmp
mov
jns
sub
sbb
or
fidivs
call
dec
pop
lret
pop
cld
fistpll
scas
xchg
mov
sbb
add
fcomps
pop
subl
xchg
push
inc
insl
jmp
sbb
in
mov
pop
dec
add
push
pop
jae
mov
js
fldt
mov
data16
hlt
and
xlat
sub
or
cmpsb
test
scas
jge
pop
jb
mov
shll
push
mov
inc
sbb
fstpt
pop
fisttpll
dec
mov
sbb
pop
xchg
cmp
add
sub
jecxz
xchg
leave
faddl
movsb
sub
mov
mov
xchg
aaa
dec
shl
addl
stc
mov
push
flds
push
mov
push
hlt
clc
lahf
test
aaa
sub
bound
mov
and
fists
sti
cld
js
xchg
mov
popf
adc
fbld
and
and
sti
mov
sub
cmp
add
pop
cmpl
sbb
lods
and
lea
or
lds
mov
pusha
cmp
dec
scas
jae
fsts
cs
les
or
rcl
out
shlb
pop
stc
cmpb
inc
cld
loopne
gs
sub
int
add
jbe
mov
mul
sub
in
pop
or
sti
sqrtps
leave
pop
jnp
sub
mov
and
mov
pop
push
rcrb
lahf
mov
jge
into
addr16
int
rcr
mov
jb
dec
mov
sbb
dec
xlat
cmp
ss
inc
jp
and
xchg
aas
jg
jo
mov
or
push
addl
mov
testb
imul
call
adc
lods
fwait
fwait
daa
out
sbb
lcall
outsb
dec
out
clc
outsl
pop
fadd
and
ret
xchg
push
jle
inc
insl
adc
push
enter
scas
cmp
add
jp
xor
pop
mov
jmp
xchg
mov
xchg
pop
xchg
imul
or
mov
jne
mov
and
mov
in
js
mov
jbe
andb
movsl
push
mov
mov
or
ret
pop
sbb
ss
cmc
mov
aad
sbb
mov
icebp
clc
int3
xchg
shrb
out
rcll
sbb
cmp
outsl
int3
andl
add
jecxz
fldt
je
out
stos
loope
adc
xor
cs
lds
cmp
jmp
xchg
push
das
das
mov
mov
daa
sti
arpl
pop
jl
inc
push
scas
aam
mov
fucomip
xchg
fs
sub
and
pop
leave
xchg
adc
and
cmpsb
mov
mov
test
mov
scas
xorb
cmp
std
cmp
and
jbe
sub
xchg
push
mov
or
stos
iret
lds
add
adcb
cmp
add
jb
jl
enter
add
sti
loop
mov
mov
lret
xor
push
shrb
cmpsl
add
cwtl
add
pop
loope
mov
lret
test
pop
popf
das
jae
jnp
mov
xor
push
pop
mov
mov
subb
push
pop
mov
add
xchg
cmp
lcall
outsb
or
insb
cmp
jne
js
or
pop
je
insb
clc
pop
or
stc
movsb
push
push
out
jne
cwtl
mov
lret
sti
mov
lea
lods
pushf
push
adc
xchg
push
loope
jge
sti
pop
sbb
pushf
ljmp
popa
dec
pop
sub
call
jae
jne
je
pop
lahf
scas
adc
shll
xor
clc
imul
dec
rorb
insb
push
inc
rolb
mov
dec
hlt
cmpsl
in
xor
push
add
push
pop
imull
adc
xchg
scas
loope
rclb
in
and
ret
dec
ret
adc
mov
mov
inc
ret
push
mov
dec
jnp
fstl
sets
xchg
sti
add
inc
inc
movl
and
mov
scas
pop
pop
or
sbb
jo
push
and
fisubs
movsb
in
mov
in
mov
outsl
into
adc
and
pushf
test
test
mov
cmp
test
sbb
scas
test
stos
pop
std
dec
mov
xchg
es
sub
pusha
cs
cmp
cmp
xorb
dec
inc
mov
push
dec
push
push
or
pop
sbb
cmp
test
out
loope
mov
ljmp
test
pop
call
iret
pop
lds
stc
lods
xchg
and
stc
jnp
jno
dec
call
sub
pop
paddsw
sahf
gs
nop
aaa
icebp
mov
pop
xchg
xor
adc
xchg
jae
jmp
xchg
pop
leave
out
mov
or
fimull
push
xor
lret
adc
inc
loop
cmpsb
arpl
dec
xlat
nop
addl
jnp
iret
loope
int
push
jno
push
add
and
mov
push
int3
sbb
aas
es
sbb
jno
add
movsl
dec
ds
cmp
mov
or
inc
push
rorl
repz
push
insl
sub
nop
pop
jnp
dec
jnp
xchg
add
and
sarb
dec
xlat
fsubrs
pop
pushf
cmpsb
jnp
mov
das
adc
ljmp
inc
loopew
xchg
sub
jne
fwait
inc
push
inc
hlt
data16
jp
loopne
hlt
push
sub
and
pop
or
lahf
jno
rcrb
xchg
push
js
push
out
dec
mov
cmpsb
fists
out
add
pop
cmpsl
pop
or
mov
cmpsl
dec
into
push
mov
xchg
sbb
pop
mov
lahf
in
jbe
rclb
inc
adc
test
inc
xchg
in
out
cli
sti
mov
inc
out
push
inc
notl
gs
fsubs
fdivr
inc
push
cwtl
mov
movsl
fbld
adc
movsl
adcb
ret
pushf
repz
stos
cmp
mov
pop
pop
lahf
mov
mov
mov
pop
or
sbb
and
sahf
lret
pop
mov
dec
or
adc
inc
pop
std
mov
test
jbe
sti
and
jnp
lret
in
add
and
sub
dec
adc
cs
decl
mov
sub
lods
cltd
or
iret
adc
subl
jbe
cmp
push
leave
adc
jg
mov
ror
dec
inc
insb
test
fstpl
fisubrl
les
xchg
jbe
and
or
leave
mov
cli
hlt
dec
ss
rorl
and
push
mov
das
pop
cld
test
mov
sbb
xor
shll
cmp
popf
pop
lock
mov
mov
movsb
jno
add
jecxz
mov
sahf
jo
shll
pop
lds
xchg
mov
mov
pop
and
and
push
cs
push
and
jns
or
loopne
pop
into
jl
hlt
xor
inc
aaa
jae
push
push
sbb
sbb
mov
out
mov
stc
xchg
dec
sbb
xor
xchg
out
cltd
jmp
add
and
repz
push
push
movsb
dec
jecxz
aad
push
sbb
mov
lds
pop
pop
jge
xor
xchg
leave
mov
js
insl
cmp
pop
int
or
imull
insb
sub
mov
lret
or
test
lcall
adc
sub
sub
imul
mov
cmp
adc
loope
jecxz
outsb
cmp
out
rclb
out
fdivp
push
adc
mov
mov
out
stos
aaa
sti
pop
xchg
nop
mov
push
fnstcw
mov
sub
pop
cmp
cwtl
add
add
cmp
jae
sti
pop
out
or
sub
cmpsl
rclb
lods
and
xchg
inc
test
pusha
adc
mov
fimull
adc
aas
addl
jg
adc
adc
adc
xor
scas
mov
mov
and
cmc
test
icebp
xor
scas
mov
pop
jmp
push
jle
push
sahf
enter
in
jl
loop
xchg
sbb
ja
cltd
imul
or
adc
add
movsl
dec
mov
mov
mov
or
ret
stc
outsl
and
sub
outsl
sbb
jg
pop
adc
dec
sbb
and
aaa
push
ret
mov
pop
scas
dec
insb
int3
int3
dec
imulb
iret
out
xor
mov
imul
cmc
lret
mov
xor
jge
idivl
fsubs
cmp
ljmp
les
xlat
push
aaa
pop
repz
jns
inc
xor
fsubs
xchg
sbbl
in
lock
cmp
scas
add
dec
jl
arpl
lods
repz
insb
cmp
push
dec
dec
stc
std
pushf
repnz
xchg
sub
scas
and
loope
jmp
insb
imul
sti
push
adc
xchg
lret
push
xchg
gs
jecxz
cltd
xchg
ss
daa
lcall
int
or
jae
adc
leave
lret
ja
or
cld
pop
jl
push
mov
sub
inc
pop
jle
pop
dec
inc
xchg
notb
xchg
stc
ret
shlb
test
pop
mov
jb
sti
add
sbb
pop
les
std
in
js
imul
xchg
push
mov
mov
data16
in
int3
fadds
enter
sub
arpl
pop
ds
jb
cmp
fbld
call
mov
xchg
mov
loopne
imul
add
push
scas
xor
aam
jmp
and
repz
sub
sbb
data16
or
jb,pt
mov
and
mov
ja
std
add
xor
jo
jbe
shrl
sbb
ret
cld
int
lds
pusha
pop
leave
dec
faddl
add
add
fisubl
int
cmp
xchg
lret
je
pop
or
push
dec
sahf
jp
jno
jnp
dec
unpckhps
sti
idivb
jge
sub
xlat
add
imul
iret
repz
sti
iret
cmpsl
imul
sbb
mov
fnstcw
frstor
push
add
sahf
inc
adc
lret
and
inc
or
and
xchg
sar
or
xchg
arpl
into
mov
fiadds
lahf
sub
arpl
aad
pop
or
jge
clc
test
pusha
mov
mov
jge
je
int3
cmpsl
jle
fstps
sbb
addr16
xchg
mov
jmp
je
movsl
cli
cs
add
loopne
out
loop
and
fmulp
pop
aad
imul
aam
mov
adc
fnstenv
jp
mov
pop
cmpl
ljmp
in
dec
inc
daa
lock
sub
sub
sti
subb
dec
andl
mov
xor
mov
mov
imul
addb
cmp
dec
scas
inc
lcall
bound
inc
cmp
inc
jl
out
add
cltd
jb
add
ljmp
gs
xor
cmp
jecxz
in
outsb
sub
inc
xchg
jo
lret
sbb
mov
cmp
and
popa
mov
lock
dec
mov
xlat
cmp
rorl
lret
mov
mov
outsb
add
push
femms
pop
push
mov
mov
inc
aam
xlat
clc
mov
mov
ret
sub
or
imul
cwtl
mov
push
cli
push
test
pop
mov
xor
mov
icebp
dec
add
sub
mov
xchg
out
add
js
andl
cmp
repnz
sbb
gs
xchg
jnp
inc
mov
inc
pop
mov
mov
push
xchg
pop
lcall
int
mov
push
add
inc
aam
cs
xchg
test
mov
push
in
dec
xchg
pop
pop
mov
in
mov
movsb
adc
add
imul
pusha
outsl
jb
leave
xchg
mov
arpl
adc
imul
jg
pop
cmp
add
mov
xchg
aaa
jo
push
mov
movsl
fiadds
lcall
decb
dec
test
jnp
stos
jnp
mov
push
cmp
lds
inc
xor
push
arpl
or
sbb
sbb
push
js
inc
push
fs
jbe
mov
inc
in
das
loop
out
cs
or
push
lock
negb
sahf
jo
add
xchg
mov
mov
mov
pushf
pop
mov
outsl
repz
test
mov
loopne
pop
push
xchg
lahf
lcall
je
mov
mov
jne
inc
dec
adc
xchg
jl
lcall
insb
xchg
xchg
popa
dec
mov
or
lret
jb
testb
adc
inc
ss
ud0
pop
sub
call
adc
mov
or
cmc
jp
cmp
sbb
stos
rcr
rorl
add
sbb
enter
jg
aad
mov
sbb
std
shll
jecxz
mov
hlt
out
dec
subl
inc
pop
cwtl
cmp
push
je
mov
mov
mov
push
cld
dec
lock
fwait
and
pop
lcall
mov
adc
mov
test
push
add
enter
ds
jns
mov
ret
inc
mov
ret
sub
lds
repnz
push
mov
or
rorl
pushf
shlb
xor
js
cmp
sbb
dec
loopne
data16
sbb
mov
adc
cmp
mov
xchg
std
dec
mov
iret
sub
sub
ret
loope
sub
fstl
dec
mov
std
rcrl
in
hlt
fwait
dec
es
cwtl
js
dec
jp
pop
push
ret
lea
sub
outsb
test
add
lea
pop
outsl
sahf
inc
jne
xchg
pusha
mov
add
pop
mov
into
jno
jmp
add
bound
inc
add
xchg
faddp
std
out
outsb
aas
ljmp
negl
mov
jmp
loop
lret
scas
inc
in
push
adc
leave
in
ss
rcll
int3
or
imul
adc
jns
fildl
mov
jae
mov
adc
shrl
lea
clc
sbb
push
mov
mov
jle
rcrb
xchg
outsb
in
jle
pop
or
push
and
dec
cli
jae
clc
popf
mov
jo
push
imul
frstor
cmp
jge
mov
pop
movsb
cli
adc
std
fs
inc
leave
ljmp
enter
pop
pop
adc
xchg
sbb
and
nop
mov
insl
xchg
dec
lods
mov
mov
push
add
cwtl
sub
pushf
add
xor
sti
dec
pop
popa
push
adc
push
mov
divl
popa
and
js
aad
jno
stos
jmp
out
nop
mov
in
sub
pushf
stc
and
pusha
sub
fnstsw
cs
jnp
mov
jmp
arpl
fwait
xchg
xchg
cld
out
xor
test
ljmp
scas
xor
stc
inc
in
xor
jl
leave
ss
cs
and
js
adc
aaa
adc
jp
sbb
or
jmp
push
movsb
xor
leave
mov
sub
cmpsb
mov
test
sub
adc
shrl
or
leave
add
pop
xchg
mov
aad
arpl
push
push
popf
and
scas
xchg
adc
pop
adc
add
test
mov
and
mov
xor
repnz
repnz
dec
and
mov
xor
add
inc
cs
std
or
pop
int
cmp
je
and
aas
or
notb
stos
out
or
or
xchg
mov
in
sub
inc
jg
xchg
movsb
pushf
insl
fbld
shlb
idivl
push
loope
push
orb
push
mov
or
insl
es
outsl
mov
lods
and
ds
jns
mov
icebp
or
outsb
push
and
push
push
fbstp
les
add
sti
pop
in
and
sub
in
dec
dec
sbb
dec
data16
mov
jbe
pop
idivl
add
jecxz
test
or
adc
xchg
jbe
jmp
pushf
movl
mov
int3
jl
sbb
scas
inc
inc
dec
mov
xor
cltd
fadds
push
jg
pop
rcll
jmp
or
popf
pop
lock
mov
cltd
call
jmp
xchg
outsl
add
fdivrl
xlat
pop
int
mov
mov
hlt
xlat
movsl
addb
enter
mov
sahf
push
sbbb
mov
jae
sahf
mov
fstps
lods
xor
pop
ja
pop
jecxz
cltd
inc
or
inc
aaa
add
mov
jb
daa
sbb
jbe
xchg
mov
repnz
movsl
pop
mov
inc
jo
cmp
ss
shrb
jl
or
push
pop
adc
je
sti
sub
or
ss
mov
bound
dec
lds
sub
fwait
push
cltd
xchg
rclb
cmp
inc
lds
popf
cmp
mov
xchg
and
loop
mov
xchg
inc
sbb
bound
xor
xchg
pop
lret
jnp
ret
das
fs
sub
std
adc
ret
test
sub
aad
das
xor
fnstcw
jo
fisttpl
mov
adc
sub
and
shl
popf
sub
pop
loop
fidivl
icebp
movsl
push
ljmp
fdivl
mov
arpl
cmc
jmp
mov
lahf
xchg
cmp
mov
sub
iret
mov
xor
arpl
fsubl
fadds
and
mov
sti
test
dec
dec
push
mov
notl
push
pop
lods
jecxz
enter
dec
mov
scas
and
dec
mov
lock
xchg
out
imul
rcll
push
cmp
sbb
mulb
xchg
push
jg
lret
fldln2
daa
cmpsb
popf
sub
rolb
mov
push
fdivr
sub
push
jmp
mov
or
addl
push
add
inc
and
cltd
xor
cmp
in
mov
push
xchg
mov
sbb
cmp
lret
aas
sti
sub
adc
and
in
adc
daa
xor
aad
shrb
movsl
or
or
mov
stos
subb
call
cld
negb
fldl
mov
xchg
jle
mov
clc
imul
pop
arpl
loop
imul
and
jmp
shlb
test
enter
fists
lock
cmp
push
js
xor
push
es
adc
add
add
pop
push
push
add
test
into
pop
xchg
or
mov
add
ret
fcmovnu
sti
add
inc
cmpl
das
in
xchg
or
xchg
ja
jae
cmp
add
cmp
mov
sbb
or
loope
pop
int
dec
cld
in
loop
and
mov
push
jne
push
cwtl
dec
ljmp
or
add
jecxz
shl
and
loop
mov
mov
das
push
dec
je
inc
mov
pop
movsl
sbb
cwtl
jae
xchg
jle
movsb
sub
jg
dec
dec
in
and
mov
add
xor
mov
push
imul
xchg
addr16
jl
sar
int
fnstsw
addr16
mov
inc
push
xor
ret
cmp
stc
add
sub
bound
cld
mov
stos
fstpt
lock
clc
xor
mov
and
inc
out
add
xchg
xchg
dec
jns
push
clc
mov
icebp
cmc
cmp
xchg
mov
sbb
lcall
popa
add
dec
out
cli
cwtl
mov
adc
pop
jb
fcmovbe
add
lods
mov
mov
push
sub
ja
in
mov
es
pushf
sbb
inc
push
dec
sub
aas
stos
int
mov
loop
aad
sbb
and
jmp
clc
xor
jno
adc
insb
subl
jle
mov
test
repz
fs
ljmp
cmp
nop
shrl
push
pop
jl
ds
push
sbb
ds
movsl
inc
xor
push
or
es
loope
dec
xchg
mov
and
cmp
jl
dec
mull
fadds
sahf
xchg
mov
mov
outsb
push
fdivr
xchg
insb
bound
in
jge
mov
pop
inc
adc
testl
cmp
xchg
out
sub
clc
sbb
xchg
adc
and
pop
lock
jecxz
pushf
push
mov
jne
mul
lahf
jmp
xor
xchg
sbb
pushf
out
lods
outsb
mov
cld
ja
mov
mov
or
mov
ljmp
sbbl
push
mov
addr16
repnz
jno
add
movsl
jmp
fdivrs
xchg
mov
insl
stos
jge
inc
lahf
jb
push
repz
adc
mov
mov
adc
out
fstps
dec
mov
sub
je
outsb
mov
fnstsw
cmpsb
dec
jb
ret
shll
xchg
push
shl
sbb
ljmp
pusha
cmp
and
mov
inc
dec
hlt
dec
mov
mov
push
dec
dec
cmp
dec
out
in
jl
test
lret
xchg
mov
sbb
adc
xchg
jno
test
add
std
icebp
jno
mov
shll
rcl
sahf
push
dec
inc
push
icebp
mov
pop
stc
push
lods
sbb
or
pop
push
int
ljmp
jmp
adc
mov
xchg
fsubl
aad
in
lds
jle
pushf
push
fwait
cmc
inc
aaa
ds
mov
mov
xchg
add
jge
jnp
leave
in
or
xchg
shl
cmp
sbb
mov
jmp
pop
aaa
sub
mov
lods
mov
dec
les
adc
mov
xlat
lret
pop
int
push
frstor
push
clc
lcall
inc
mov
int
adc
xor
iret
pop
cld
mov
mov
inc
sti
pop
mov
int3
test
push
mov
clc
xchg
sub
in
sbb
push
std
mov
mov
ljmp
addr16
repnz
mov
mov
cwtl
lret
shrb
test
adc
adc
mov
test
xor
das
push
pop
sub
out
push
dec
inc
add
sbb
aad
leave
mov
mov
adc
scas
fstp
cmp
imul
pop
adc
ror
pop
fisubs
imul
mov
fcoml
cmpsl
xchg
sbb
dec
mov
adc
mov
sbb
push
stos
mov
and
pop
cmpsl
xchg
mov
jb
sub
fcoms
int3
jmp
aas
add
cmp
cwtl
mov
mov
lea
scas
mov
hlt
into
inc
jbe
nop
aad
sub
stc
push
loope
aam
or
mov
add
sub
xorl
sub
push
xchg
sbb
xchg
enter
pop
shll
cmpsb
test
jecxz
pop
insl
lret
pusha
scas
lahf
inc
nop
adc
inc
sub
push
sbb
and
lock
clc
bswap
add
mov
sub
inc
scas
js
cmp
outsw
addr16
cmp
dec
or
insb
and
fisubl
sbb
nop
xor
adc
dec
or
xchg
sub
idivb
stc
jbe
imul
pusha
pop
mov
out
xchg
pop
aam
andb
xor
adc
stos
enter
pop
push
mov
lahf
jmp
std
jno
sub
mov
stc
mov
jg
sbbl
adc
adc
das
lods
pop
xor
push
xlat
and
insb
jle
cs
sub
and
sar
cmp
pop
push
jnp
js
loope
rclb
movsb
inc
or
cld
out
add
mov
repnz
xor
pop
xchg
aaa
jns
bound
xlat
mov
mov
jmp
out
test
pop
test
xor
imul
sub
iret
cmp
sbb
sub
inc
pop
mov
cld
aad
mov
sbb
jae
fsubs
scas
mov
lods
and
mov
pushl
mov
and
pop
jo
divl
adc
pop
movsb
xchg
mov
loopne
pop
test
xor
push
jae
dec
sbb
and
out
pop
mov
push
fucomip
mov
add
sub
xor
mulb
in
hlt
fcmovne
outsb
insl
test
xchg
sahf
pop
or
push
loopne
xor
adc
xor
fcmovb
test
adc
rorl
adc
call
push
insb
cmpsl
xor
lods
das
dec
push
shl
shll
xchg
out
inc
dec
ret
daa
pop
push
push
imul
jl
mov
scas
repnz
stos
adcb
jl
orl
lret
ret
push
test
mov
adc
xchg
repnz
stos
mov
cmpsb
and
je
mov
cli
das
cs
adc
std
xchg
sti
in
inc
notl
xchg
shll
cld
outsl
lock
or
data16
pusha
ljmp
leave
aad
popf
cmpsl
and
xchg
es
rcrl
mov
mov
decb
testl
stos
addr16
xchg
hlt
adc
outsb
push
xor
sahf
std
daa
push
sahf
ret
repz
lcall
jmp
dec
add
into
cmp
mov
test
push
sbb
jge
dec
fimuls
push
outsb
cmp
loope
inc
cld
mov
scas
into
xlat
mov
out
sub
mov
sbb
inc
stc
fwait
stos
test
jg
cmp
pop
xor
ljmp
jge
push
arpl
adc
sub
or
icebp
ss
dec
das
nop
fadd
inc
jl
subb
repnz
sbb
loop
arpl
hlt
sub
addb
mov
cmp
call
fcom
out
dec
add
jge
xchg
movsb
adc
shll
andl
cmp
jp
sub
jns
ret
jg,pn
je
mov
test
lock
icebp
test
add
aad
mov
fidivs
ds
ret
fstp
bound
lods
fisttps
jo
xchg
ds
dec
gs
test
in
push
popaw
push
in
dec
pop
int
dec
arpl
out
xchg
mov
insb
lods
lret
pop
std
and
cmpsl
scas
inc
xchg
ret
push
sarl
sbb
xchg
lahf
sbb
movsb
lea
xchg
adc
mov
and
cltd
stos
into
jmp
test
bnd
jo
mov
pop
xchg
xchg
sub
mov
inc
pusha
push
jl
jle
cmp
scas
jo
mov
sub
lds
enter
mov
std
or
mov
inc
shll
sub
insb
or
sub
and
mov
subl
adc
add
outsl
inc
fwait
js
cltd
mov
je
xor
dec
fists
mov
fxam
shll
push
cs
mov
repz
scas
scas
mov
adc
xor
adc
sahf
test
mov
jns
push
jmp
imul
movsl
inc
clc
test
popf
push
hlt
or
sub
fcmovbe
mov
mov
pop
push
rolb
out
mov
adc
or
cmc
push
mov
sahf
xor
add
fs
push
push
adc
in
dec
pop
jae
inc
adcl
into
sbb
dec
je
ret
push
pop
cltd
dec
test
adc
push
daa
jbe
iret
test
lret
lret
sbb
out
das
and
dec
jp
mov
and
imul
adc
divl
mov
aam
daa
stc
jno
lcall
data16
cmpsb
cwtl
pop
pusha
loope
les
push
jg
dec
or
xchg
fcomp
ss
movsl
mov
push
mov
and
lock
mov
pop
mov
jmp
xor
test
cld
mov
jmp
add
ja,pt
xlat
fiaddl
in
or
cmpsb
push
sbb
xchg
jle
mov
enter
mov
int
cmp
lret
in
mov
jae
xchg
daa
cmp
incl
mov
mov
cmc
loop
in
push
sbb
pushl
inc
push
sahf
pop
clc
ficoml
inc
in
adc
xor
aam
int3
gs
xor
loopne
in
iret
stos
xorb
aad
xchg
or
lods
xchg
cwtl
push
cli
jae
add
sub
and
push
fsubp
cmc
rclb
ljmp
cmc
jg
or
mov
pminub
mov
cmp
jg
or
cmc
sarb
xor
xchg
xchg
push
lods
pop
add
cmp
or
shl
pushf
xchg
and
scas
dec
push
scas
adc
mov
pop
test
mov
imul
outsb
arpl
push
mov
fsubrs
cmp
fldcw
rcrl
mov
mov
adc
inc
mov
pop
and
into
pop
dec
ja
lret
icebp
movsb
xchg
fsubl
int
mov
dec
cmpsb
add
cld
test
imul
jne
or
mov
lcall
insl
cmp
test
insl
or
sub
cmp
out
inc
fs
ficomps
pop
imul
pop
daa
shlb
xrelease
and
cmp
inc
dec
dec
mov
loope
push
adc
xor
clc
pop
push
and
lods
sarl
mov
leave
mov
cmpsl
int
call
mov
imul
test
cmp
outsl
mov
pop
mov
push
mov
stc
add
loop
mov
or
imul
outsl
cmp
scas
daa
inc
push
shll
pop
imul
roll
push
xchg
shlb
and
xor
scas
leave
inc
addl
mov
repz
sub
push
mov
mov
mov
mov
in
pop
icebp
pop
test
jnp
imul
sub
dec
sbbl
jne
or
lods
adc
or
icebp
dec
and
enter
cltd
lods
sbb
cli
pusha
icebp
test
and
ja
and
push
lea
lea
scas
inc
mov
push
jl
jo
sub
das
dec
and
mov
subb
jecxz
cld
push
and
mov
fs
mov
push
hlt
sub
sbb
sbb
or
lock
dec
mov
stos
movsb
ss
mov
fld
and
push
jo
inc
jle
jmp
jns
and
inc
xchg
lds
mov
push
sahf
ja
lds
xorb
pop
aaa
scas
mov
aas
sub
shlb
sub
push
sub
sbb
in
fcoms
ljmp
aaa
pusha
div
push
and
sbb
fs
lret
xchg
pop
sub
lods
jae
cmpl
inc
sub
lds
fbld
add
sbb
add
adc
xchg
fstl
mov
or
sub
je
hlt
insl
jb
stc
sub
decl
daa
push
int
call
add
in
push
inc
outsl
jne
fnstsw
mov
fadds
jle
mov
or
sbb
xchg
jle
cmp
dec
mov
pop
or
loope
lahf
xchg
stc
mov
jle
mov
and
push
mov
ds
mov
orl
aas
xor
mov
cmp
or
cli
push
or
test
dec
mov
mov
insb
je
int
push
adc
ds
push
cmpsl
push
cld
rcrb
add
addl
out
and
jno
inc
loop
cmc
push
xor
int3
push
mov
rol
lock
sbb
mov
push
pusha
imul
scas
pop
add
cmp
jae
in
sub
push
dec
add
pop
jbe,pt
inc
sub
push
push
outsb
inc
jmp
ret
nop
pop
adc
mov
pop
fwait
push
jmp
es
shll
dec
and
sub
pusha
arpl
popf
and
call
adc
pop
test
inc
xchg
add
es
pop
xchg
xor
xor
in
adc
in
mov
dec
adc
mov
repz
sbb
test
imul
loop
mov
dec
cli
in
fs
push
sbb
jb
xor
movsl
scas
pop
add
arpl
das
inc
add
mov
pushf
mov
imul
push
adc
scas
push
inc
dec
cltd
inc
loopne
jns
add
fdivs
cmp
mov
sbb
cld
fbld
push
ret
xchg
in
mov
test
mov
clc
inc
cmpsl
cmp
test
jecxz
int
testb
or
aam
pop
or
incb
mov
push
or
add
mov
or
jb
or
notl
aaa
je
sbb
popa
lret
xchg
out
std
or
mov
mov
ja
scas
sbb
push
mov
mov
iret
xor
jp
mov
and
mov
push
hlt
sbb
cmc
xchg
add
mov
pop
sbb
cmp
push
outsl
sub
xchg
es
add
mov
hlt
insb
in
ficomps
mov
cmpsb
ret
cmp
mov
lock
jge
ret
mov
repz
and
pop
xchg
xchg
dec
aaa
cmp
test
pop
adc
xor
fsubrs
mov
sbb
hlt
ret
lock
adc
outsb
pop
dec
lods
out
sbb
dec
inc
pushf
push
movsl
xor
mov
xor
mov
lds
dec
sub
test
popf
lahf
mov
inc
cwtl
clc
xchg
stos
pop
dec
mov
iret
loop
cmp
stos
rolb
mov
mov
push
pop
sar
jle
push
and
aad
lret
mov
mov
pop
clc
pop
mov
and
test
cmc
mov
enter
cli
iret
movsl
sbb
int3
jo
icebp
mov
stos
jns
xlat
in
sbb
aad
js
xor
lcall
test
jns
push
cmp
xchg
repz
dec
nop
xchg
clc
aam
mov
call
add
imul
rclb
call
ret
divl
xchg
push
in
mov
insl
leave
movsb
inc
mov
xor
add
xchg
nop
dec
push
out
dec
fstps
cwtl
mov
jne
orl
pusha
inc
jle
push
xchg
cmpsl
push
sub
int
movsl
or
mov
jecxz
loopne
ret
mov
mov
xor
add
loope
mov
iret
push
mov
dec
cmpsl
loope
pop
mov
sti
mov
pop
pop
xchg
mov
psubq
lret
aam
test
mov
push
ret
mov
gs
push
mov
or
fistpll
into
aas
cmc
mov
sbb
lds
or
cmp
loopne
paddd
test
cmc
stos
cmpb
adc
jmp
lret
and
mov
out
int3
in
mov
and
mov
ffree
mov
cmpsl
push
aas
loopne
mov
and
jb
cwtl
add
fwait
pop
pop
mov
into
sbb
jg
or
int
or
shll
inc
sahf
loopne
mov
sbb
add
jecxz
pop
add
push
popa
jp
frstor
push
xchg
and
cmpsb
ds
jmp
out
addl
mov
mov
mov
pop
sub
or
lea
xchg
rcrb
push
xchg
or
xchg
clc
inc
sbb
xchg
or
imul
lret
subl
sar
shr
mov
fiaddl
sbbb
aad
div
push
xor
cmp
cmp
repnz
push
js
rclb
and
cmp
mov
call
loopne
pop
jno
adc
test
cmpsl
rol
das
inc
stos
push
ljmp
in
out
fisubl
jge
mov
fdivrp
stos
push
jp
jg
scas
cwtl
and
sbb
push
or
adc
leave
leave
xchg
movsb
inc
mov
popa
add
inc
sub
inc
aas
sti
outsl
adc
mov
mov
outsb
and
mov
fnstcw
sbb
les
jl
xlat
es
mov
cmpsb
mov
mov
pop
dec
jmp
xchg
jbe
cmpsb
dec
shlb
mov
ret
pop
enter
ret
imul
repz
push
push
mov
add
scas
jnp
dec
aas
adc
enter
pop
data16
mov
jbe
mov
push
repz
dec
fs
cmp
sub
add
mov
jmp
insl
into
cmp
test
lahf
cmp
mov
mov
lret
fnstsw
clc
mov
test
dec
xchg
pusha
in
lcall
imulb
js
push
imul
shl
push
lods
es
push
les
mov
daa
mov
int3
mov
cmovle
sbb
ss
mov
scas
sbb
je
pop
push
adc
pushf
outsb
and
inc
or
adc
push
xchg
jle
gs
movsl
inc
lods
dec
mov
push
sub
mov
arpl
cwtl
std
cmp
fwait
roll
xorl
push
push
inc
push
in
sub
push
dec
rcrl
xchg
or
ret
mov
daa
stos
lret
fldcw
shll
sbb
sbb
int
mov
pop
mov
lds
into
addb
gs
insb
pop
ds
pop
andb
out
inc
push
inc
lds
pop
mov
add
inc
mov
sub
inc
jbe
inc
or
fimuls
mov
loop
test
xchg
xchg
mov
push
imul
adc
sub
fldln2
add
ds
push
adc
out
mov
push
mov
adc
shrl
xchg
mov
push
jb
pop
in
pop
or
mov
std
jg
pop
push
int
lock
push
rcll
xchg
mov
movsb
fs
inc
inc
or
mov
mov
imul
jns
jg
jmp
cs
jbe
cli
lods
and
mov
mov
mov
dec
mov
mov
sbbl
fsubl
pop
cmp
sub
out
sub
cld
dec
mov
dec
cmp
scas
jne
jl
or
mov
xor
jbe
enter
pop
xchg
xchg
pop
xor
cwtl
cld
dec
dec
jbe
scas
inc
and
push
mov
out
test
or
outsl
or
add
adc
in
loopne
rol
jmp
sar
xchg
jmp
shr
fidivs
out
pop
adc
aas
in
aaa
loope
in
jo
add
jle
ds
js
xor
sub
jb
pop
push
rol
clc
test
not
jne
mov
mov
insl
cltd
loop
hlt
xor
cltd
mov
jmp
fists
ljmp
cmpsb
push
jno
mov
adc
fwait
add
in
cmp
outsb
lods
test
cltd
dec
xchg
pop
xor
mov
sub
mov
jle
pop
sub
sub
pop
insb
jecxz
and
cmp
lret
push
push
mov
xchg
pop
dec
xchg
in
dec
and
mov
sub
std
sbb
aas
test
and
insb
mov
xchg
pop
adc
xor
jno
cmpsl
dec
dec
cli
das
dec
pushf
pop
enter
vpsrldq
sbb
push
mov
popa
mov
iret
push
scas
bnd
cmp
out
sub
enter
movsl
jp
mov
loop
push
and
or
pop
shlb
fidivrs
sub
test
xor
aam
test
mov
lock
pop
cld
repz
push
add
jno
clc
jno
repz
adc
inc
adc
jae
je
test
les
xchg
inc
cmc
imul
aas
out
pop
in
push
xor
outsl
pushf
dec
push
out
negb
pusha
or
inc
popa
incl
xchg
mov
and
outsl
lcall
mov
dec
sub
jge,pn
lods
jne
jnp
and
sub
aad
leave
ja
xor
aas
and
lods
lods
lahf
push
add
dec
mov
mov
movsb
adc
or
insl
into
sbb
es
mov
xchg
lahf
mov
test
sar
cmp
adc
cltd
dec
mov
fs
jp
or
sbb
mov
iret
mov
jnp
fwait
cltd
js
push
jb
shll
in
pop
dec
xchg
mov
or
addr16
xchg
mov
or
jmp
std
jg
mov
rep
adc
aad
cmp
fwait
out
mov
xchg
jbe,pt
jl
ja
xorb
sbbb
adc
sbb
push
sub
loopne
or
pusha
sub
mov
rcrl
adc
test
and
ficoms
jmp
shlb
cmc
lahf
and
out
xchg
int3
das
mov
dec
ror
jg
pop
sahf
ljmp
ror
loopne
out
pop
inc
mov
pusha
xor
cwtl
sbb
aaa
sbb
rcl
leave
lret
mov
iret
sub
imul
loopne
jnp
mov
push
adc
ljmp
inc
int3
enter
vpaddusb
push
mov
jno
mov
pop
fcmove
and
idivl
arpl
mov
dec
mov
cmp
ficompl
ljmp
mov
inc
mov
jb
fldl
sbb
lock
aaa
stos
mov
arpl
push
loop
aam
jns
aad
insb
inc
pop
mov
mov
xchg
lret
add
add
sti
test
pop
push
mov
dec
ror
xchg
test
jp
mov
sub
push
fisubrl
dec
imul
std
fidivrl
cmp
loopne
imul
sub
out
call
add
cmp
mov
pop
aad
cmp
outsb
add
mov
cmp
or
mov
jecxz
inc
lds
out
mov
mov
sub
push
xchg
sbb
dec
jp
push
mov
ja
rorb
ret
je
js
or
outsb
inc
inc
dec
dec
push
icebp
fcom
fdivrl
jge
mov
stos
sbb
into
xlat
cwtl
fisubl
mov
insl
jne
cmp
clc
enter
pushf
fucomp
jmp
push
add
sbb
sbb
adc
mov
rep
cli
hlt
insb
lods
popf
push
pop
icebp
popa
aam
mov
out
pop
lods
jg
sbb
in
add
es
and
nop
sbb
hlt
xor
jecxz
cltd
adc
or
loopne
inc
addb
fldcw
cwtl
loopne
mov
mov
ficoms
fdivs
sub
xchg
add
add
pop
mov
or
icebp
lock
je
adc
in
movsb
lcall
sti
jge
test
aam
loope
xchg
jmp
pop
sbb
enter
daa
inc
add
jne
sbb
mov
movsl
pop
push
dec
outsb
jge
add
mov
dec
popa
cwtl
cmp
sti
and
push
pop
xchg
mov
mov
push
orl
push
leave
movsb
xlat
sahf
cltd
inc
dec
repz
push
pop
add
arpl
adc
push
push
mov
dec
mov
imul
shll
xchg
test
lods
imul
pop
push
pop
jge
xchg
hlt
ds
mov
jnp
fcoml
cltd
mov
or
mov
cmp
mov
cmp
jo
cmp
xchg
add
jl
shr
popf
push
outsl
xchg
das
pop
inc
or
stos
mov
addr16
cmc
xchg
rolb
adc
inc
pushf
movsb
cwtl
pusha
pop
shll
push
inc
cmp
adc
aam
or
jl
push
jne
addb
or
out
cwtl
lretw
add
les
loop
in
push
cmp
sbb
lds
movsl
cmp
js
mov
mov
insl
push
imull
mov
scas
mov
mov
inc
mov
cmp
mov
dec
xor
test
add
fwait
cmp
and
fidivs
nop
and
pop
adc
aam
push
imul
lock
out
xchg
out
mov
and
push
jbe
cmpsl
imul
imul
leave
cmpsl
fdivrs
dec
mov
repnz
mov
push
push
cmpb
int
sahf
pop
js
pop
cld
push
lea
push
mov
loopne
mov
mov
rclb
daa
shlb
and
js
xchg
pop
dec
mov
xor
add
add
push
adc
push
ret
and
test
test
in
sub
subl
fldcw
fadd
and
push
jge
mov
jbe
and
fdivs
fistl
jmp
ljmp
dec
repz
pop
push
and
or
pop
add
mov
std
sti
fwait
inc
sub
lods
mov
sub
xchg
jno
pop
cli
jp
push
test
adcb
loop
or
daa
add
mov
enter
in
xor
sub
rolb
push
cld
adc
pop
sti
ret
popa
pop
push
fidivs
aaa
sarb
or
setge
and
cltd
sbb
dec
aad
xor
loop
rcll
stc
push
fsubrs
or
popf
sub
inc
cmp
lock
fiaddl
loop
inc
es
jmp
and
mov
fldcw
sub
int
and
sbb
scas
dec
mov
lahf
fldl
jnp
int3
inc
loop
cmp
jne
ja
stos
leave
les
xor
pop
mov
rclb
stc
push
push
xor
inc
imul
cmp
and
out
xor
and
outsb
loope
pop
jns
sarl
jne
mov
test
jp
xchg
jg
push
and
fs
adc
mov
mov
cmpsl
add
xchg
mov
aas
into
xchg
xor
into
xor
dec
mov
jns
sbbl
aad
dec
xchg
sbb
cmp
fdivrl
push
loopne
add
push
lods
out
call
loope
jo
in
xchg
lods
test
adcl
test
add
adc
dec
pop
adc
repnz
stc
lret
repnz
hlt
mov
les
mov
outsb
dec
nop
aam
das
imul
cli
int
sub
popa
popf
shrb
hlt
test
addb
mov
int3
ror
and
aad
cli
mov
mov
sti
jmp
mov
mov
jae
rcrb
mov
les
mov
outsb
cmp
clc
xor
popf
push
cmp
outsl
rcl
decb
aaa
ds
lahf
xor
adc
push
outsl
movb
sub
cmp
das
and
loop
mov
mov
js
push
add
pop
and
or
mov
aas
iret
scas
pop
out
pop
or
sahf
push
popa
rep
add
jl
out
jo
rcrl
inc
pop
fstpl
or
cmp
pop
push
mov
xor
jno
sub
mov
jle
pop
add
sbb
mov
lret
or
pop
lds
aas
sub
mov
xchg
sahf
in
cltd
inc
into
scas
mov
xchg
add
mov
iret
sahf
jl
sbb
ljmp
dec
imul
out
xor
xchg
ret
jbe
xchg
inc
out
jnp
imul
sbb
loopnew
out
jp
inc
jne
jmp
xor
setne
and
mov
dec
rcll
or
mov
cs
jb
loopne
mov
dec
aam
imulb
cmc
addr16
push
outsb
cmpsb
sbb
jb
lods
add
xor
xor
adc
jl
jl
jnp
cs
rcrl
add
test
cmp
jne
mov
in
pop
fisubrl
pop
xchg
or
in
mov
bound
jl
ret
outsb
mov
cmp
popl
ret
or
aaa
fdivr
cli
and
cmp
push
test
jne
es
dec
in
xchg
fldenv
sbbb
sar
out
daa
hlt
pop
sbb
sub
in
mov
dec
sbb
dec
ret
sub
repnz
arpl
push
repz
ret
mov
ret
icebp
mov
lcall
pop
scas
mov
das
sbb
shlb
xlat
mov
inc
mov
mov
sub
ja
xchg
outsb
out
stos
mov
add
dec
add
jne
xchg
jp
ja
repnz
arpl
jo
stc
stc
bound
add
daa
push
fldt
dec
pop
pop
fcom
je
shl
loop
adc
lock
adc
mov
fnstenv
testl
cltd
testl
popf
icebp
arpl
insb
ljmp
add
adc
sti
ficoml
push
mov
xchg
adc
adc
iret
sbb
xor
enter
jecxz
pop
add
mov
xor
cltd
adc
inc
cltd
push
pop
or
es
mov
sbb
ret
jp
lods
jne
xchg
or
int
jnp
mov
enter
bound
ficompl
sarb
imul
xchg
arpl
sti
pusha
lahf
xlat
ret
push
push
mov
test
xchg
pop
enter
loop
xchg
sti
mov
xchg
addr16
aaa
mov
push
sub
xor
aam
and
sti
mov
fs
iret
pop
or
int3
sbb
cld
inc
lods
outsl
ds
push
cld
jo
out
mov
mov
jmp
push
pop
jb
pop
cld
vmovd
pop
lods
popaw
inc
adc
fildll
dec
and
adc
xchg
mov
jl
add
fmuls
jno
push
outsb
xor
stos
loopne
inc
dec
adc
push
inc
xor
jns
cli
xor
aam
inc
fiaddl
dec
add
mov
pop
dec
push
and
xor
movsb
pusha
mov
mov
mov
jg
call
insb
inc
mov
std
add
iret
push
pop
sub
pop
ret
xor
push
push
jcxz
std
in
pop
pop
mov
sub
fnsave
shrl
pop
ret
sub
or
repnz
jp
dec
stos
ja
gs
sbb
cmpsb
mov
iret
jl
mov
fistl
sub
sbb
lcall
adc
out
icebp
add
add
lds
arpl
dec
mov
pop
xor
adcl
mov
out
test
xor
bound
fadd
scas
xchg
sahf
movsb
sahf
adc
dec
daa
inc
clc
xchg
mov
lock
or
scas
cld
clc
adc
inc
adc
mov
in
inc
data16
xor
push
pop
inc
cmpsb
fnstcw
enter
pop
lcall
dec
mov
jo
adc
popf
add
fidivrl
sbb
fs
inc
addr16
jge
rcll
test
pop
lret
xchg
cmpsl
inc
fsubs
cmp
std
xchg
mov
rcrb
push
mov
inc
into
std
cmp
or
jmp
cmc
and
insb
inc
iret
ret
lahf
out
lods
xchg
or
lret
pushf
sbbb
sub
xor
hlt
xchg
push
pop
mov
jo
in
repnz
cmp
push
inc
cltd
aas
lock
mov
sbb
and
sarb
mov
arpl
icebp
jae
mov
ficomps
shrl
pop
xchg
lea
aam
adc
or
mov
ficompl
insl
adc
sarb
mov
xor
cld
mov
arpl
fists
or
xor
push
mov
insb
push
mov
jl
jecxz
cmp
xchg
daa
insb
sbb
lock
mov
int3
adc
in
lea
lea
dec
clc
lea
or
iret
daa
xchg
dec
dec
sti
lods
jmp
iret
and
shll
mov
add
sar
pop
iret
out
pusha
pushf
sbb
inc
enter
xlat
filds
push
jns
loope
daa
push
cmp
xchg
xchg
mov
mov
out
push
arpl
jo
or
scas
aad
jnp
jg
push
insb
in
sbb
pop
insb
pop
mov
dec
loop
xchg
cmp
cld
jecxz
js
test
daa
dec
jmp
and
jne
jp
bound
jmp
mov
dec
repnz
lret
xlat
mov
jb
loop
enter
cmp
mov
movsb
bnd
cmp
inc
jno
cmc
fildl
jns
andb
imul
or
add
push
es
outsl
xor
pop
mov
add
aad
aaa
repnz
test
ja
add
xor
mov
xchg
push
xor
sbb
or
sub
pop
lret
pop
aas
int3
xlat
xor
stos
mov
jge
jmp
div
xor
fisubrs
cltd
mov
and
shrd
cld
loope
outsl
fdivs
loop
sbb
xchg
mov
adc
call
push
pop
add
inc
out
adc
aam
sarl
out
stos
pminsw
pop
mov
mov
or
push
mov
jmp
xor
shlb
ror
imul
add
xchg
repz
dec
nop
in
xor
jb
mov
ljmp
ret
or
jae
mov
stc
stos
jp
sbb
xchg
sbb
dec
and
in
mov
sub
call
dec
or
clc
cs
adc
fiaddl
cltd
jle
pop
ds
xchg
mov
repnz
xor
sub
inc
aas
fnstsw
mov
pop
cmpsl
jo
mov
dec
xorl
rcrl
pop
outsb
jmp
imul
loop
enter
mov
imul
fcompl
ds
dec
mov
push
loope
xchg
sub
jp
pushf
fcoml
xchg
lret
fsub
pop
inc
bound
adc
dec
cmp
arpl
xor
cwtl
movl
push
lock
jbe
rolb
es
cmpsl
repz
out
pusha
and
add
imul
add
sbb
es
dec
cmp
fst
adc
mov
fildll
mov
push
pop
adc
jb
push
std
xor
jmp
xchg
shlb
inc
movsl
push
rcrl
mov
loope
jg
xor
xlat
xlat
in
sbb
aas
mov
sbb
mov
lret
aam
and
add
or
sbb
pop
dec
aas
pop
lret
and
add
ret
pop
push
cs
mov
test
rol
insl
inc
ljmp
inc
jecxz
aam
jp
fadd
cmpsl
pop
jmp
push
loopne
pop
adc
xchg
movsl
sbb
scas
aas
and
or
xchg
jl
xor
stos
jb
gs
fnstcw
ss
xor
jbe
mov
xor
mov
repnz
push
cltd
pop
dec
imul
rcll
pop
sub
xchg
ljmp
adc
aam
jne
icebp
fcoms
jl
adc
cmp
mov
xor
mov
jne
sbb
clc
lcall
dec
cmp
xchg
fildll
mov
js
mov
mov
gs
lock
mov
mull
sbb
dec
sub
xchg
xchg
cmpsb
or
out
push
cmp
xchg
frstor
mov
cld
movsb
je
mov
fs
dec
mov
cmpsb
pop
cs
add
aaa
xchg
xor
sbbb
loope
ja
and
and
mov
icebp
mov
or
xchg
or
push
xor
push
mov
xchg
mov
or
inc
push
or
lods
insl
adc
and
sub
pop
test
lret
outsl
xchg
sti
loop
mov
fstpt
add
imul
add
mov
jne
dec
lea
int3
sar
pop
in
subl
ljmp
pushf
xor
add
fucomip
mov
inc
js
outsl
sub
outsl
cmp
xor
das
test
test
mov
cltd
inc
mov
cmp
mov
cmp
inc
mov
mov
fdivs
sub
mov
roll
xchg
xchg
lock
int
pop
data16
push
pop
test
mov
dec
inc
imul
or
data16
cmp
mov
push
out
inc
fidivrs
jle
sbb
mov
xorl
xor
enter
lods
xchg
sub
inc
pop
xorl
fwait
push
lret
fisubs
xor
inc
pushf
ss
xlat
jne
cwtl
lods
mov
add
popf
sbb
shlb
loopne
jb
cwtl
sub
ficompl
mov
seto
in
mov
das
pop
push
addr16
js
fdivrl
sub
mov
mov
negl
outsl
sbb
movsl
pushf
daa
xor
outsb
orl
clc
mov
sti
dec
sub
stos
or
jno
imul
rclb
adc
shlb
mov
jmp
dec
jle
inc
and
mov
es
loope
lret
jbe
add
es
dec
lds
pop
gs
cmp
or
pop
xor
xor
xor
and
dec
cwtl
sub
or
sub
cmp
movsl
call
mov
mov
lods
stos
dec
cmp
jl
or
sub
aad
sub
pushf
adc
aad
jns
leave
dec
mov
mov
pop
daa
xchg
mov
add
push
and
mov
test
shrl
inc
stc
adc
lock
loop
ss
lahf
mov
xchg
ds
jns
mov
inc
in
sub
xor
nop
add
sub
out
je
pop
insl
xor
jne
cld
mov
adc
add
push
pop
fimull
bound
aaa
pushf
xlat
test
jno
repnz
inc
lock
in
call
jmp
inc
or
outsb
int
xchg
sbb
push
clc
add
add
xchg
dec
loopne
adc
lret
es
add
or
or
jno
sub
dec
mov
test
mov
lock
shl
xchg
sub
fs
xor
and
pop
imul
repz
xor
ja
stc
lds
push
pop
shlb
cli
ljmp
hlt
iret
inc
outsl
stos
adc
xor
cmpsl
xlat
cmpsb
push
mov
dec
cmp
cmpsl
ja
mov
mov
adc
pushf
daa
pop
sti
fwait
es
pop
lods
push
cmp
divb
cmp
movsb
cmp
fwait
shrl
sarb
push
or
jne
push
adc
movsl
loopne
jecxz
ja
idiv
fwait
xchg
repz
pop
stos
sub
xchg
mov
sub
pushf
sbb
adc
gs
add
sbb
inc
ljmp
mov
cli
pop
dec
mov
mov
inc
loop
push
jl
xchg
xchg
cld
outsl
mov
lret
mov
push
jmp
pop
xor
cltd
xchg
cltd
xchg
jae
repnz
jbe
sahf
notl
dec
movsl
jg
pop
sti
or
movsl
int
add
das
xchg
scas
lods
aad
inc
sub
or
and
xor
mov
scas
inc
dec
repnz
mov
ffreep
push
leave
call
movsl
loop
push
push
inc
ret
and
in
adc
jmp
mov
leave
lcall
sbb
sarl
clc
scas
dec
mov
shrb
jecxz
out
clc
dec
aas
sbb
jno
sub
dec
xchg
out
imul
rorb
sti
lret
xor
pop
or
mov
push
idivb
stos
push
jo
stos
xchg
lds
paddsb
push
stos
mov
sub
or
pop
std
xor
inc
and
jb
xor
rorl
test
jne
push
jbe
out
push
jne
test
mov
cs
pusha
mov
add
mov
out
ret
movsl
jge
in
add
adc
jg
and
fdivl
push
shrl
movsl
sub
shl
aas
ds
inc
outsb
lods
and
and
push
ja
mov
dec
push
pushl
xchg
idivl
cli
sub
cli
sbb
xchg
dec
popa
aas
imul
adc
ret
dec
imul
pop
sbb
mov
dec
mov
cmp
sub
fnstsw
push
test
scas
test
das
push
xchg
push
lea
dec
fisubrl
sub
stos
dec
mov
in
adc
adc
insb
sub
dec
loopne
mov
sbb
sub
ror
lods
and
xor
pop
out
clc
in
movsl
movsb
out
mov
pushf
loope
das
sbb
test
cmp
add
js
push
lds
decl
pop
insl
sarl
test
xchg
out
dec
testb
imul
lds
xor
cmpb
mov
xor
test
and
or
and
push
pop
loop
mov
cmp
fmull
add
les
mov
shrl
mov
jl
push
sbbb
dec
mov
mov
out
ds
mov
aad
sbb
jecxz
sbb
cli
lock
daa
fs
les
jo
mov
sbbl
shll
sub
xor
subb
mov
movsb
inc
testl
push
xor
mov
lods
subb
jo
test
enter
push
mov
pop
lahf
dec
roll
movsb
out
cs
push
out
add
jns
mov
push
fnsave
stos
dec
or
mov
ja
enter
adc
and
and
pop
xorl
sbb
cmpsl
or
mov
fs
mov
mov
imul
or
mov
dec
jno
dec
imul
lock
movsl
fisttpl
insb
mov
push
add
sbb
out
dec
in
pop
pop
inc
pop
lock
outsb
xor
mov
lret
dec
pop
lcall
jecxz
dec
cmp
adc
push
pop
rolb
sub
sub
fildl
pop
sbb
sub
push
dec
jge
jb
and
inc
jl
jns
cmp
insl
ret
adc
and
lahf
xor
in
adc
or
dec
loope
jle
mov
shr
xlat
pop
std
inc
in
add
gs
repz
cmpsl
dec
sbb
mov
out
cwtl
call
in
fstl
imul
lock
imul
sarl
aam
push
inc
dec
test
dec
movsb
adc
inc
les
mov
or
or
push
sbb
scas
scas
lock
repnz
cmp
cmp
sub
sub
repnz
in
inc
jg
out
push
inc
pop
mov
push
fcomps
jl
adc
sti
in
pop
sbb
xchg
mov
mov
pop
ljmp
out
inc
xor
sub
xor
aad
mov
add
call
scas
test
sbb
std
out
fimuls
rcl
jo
test
pushf
in
jl
pop
push
jns
inc
mov
imul
nop
mov
mov
fnstenv
cmpsl
int3
xor
xchg
fwait
jle
dec
outsl
fldl
jbe
xchg
loop
out
xor
or
push
mov
jle
and
inc
mov
imul
es
loope
mov
add
sbb
subb
pop
mov
aaa
mov
xchg
jns
std
mov
mov
or
xor
push
stos
sarb
aaa
inc
xor
out
sbb
fadd
lods
dec
cwtl
and
ja
jmp
adc
jns
pop
lcall
cmc
jae
inc
lret
push
or
addr16
fldl2t
sbb
jo
jg
loope
lock
mov
into
adc
js
push
faddp
and
pop
in
jnp
loop
loopne
push
mov
iret
and
push
add
aad
push
rcrb
sub
adc
adc
sub
mov
xchg
adc
xor
aad
add
les
jbe
jne
pushf
fnstsw
mov
sub
lea
mov
cltd
sub
dec
mov
subb
inc
lea
cmpsl
fsts
jnp
inc
stos
cmp
imul
pop
jno
mul
mov
mov
imul
or
jge
test
out
pop
ret
call
fldenv
andb
pop
mov
ficoms
cmp
stos
pop
xchg
or
mull
or
sbb
xchg
pop
sbb
adc
aas
mov
push
mov
sub
add
in
ficoml
cmc
pop
or
xor
jmp
push
int
pop
pusha
and
and
lods
mov
add
scas
iret
lahf
movb
jno
les
inc
jnp
inc
xor
es
enter
push
das
pop
jecxz
test
xchg
cwtl
lret
lret
sub
jns
push
cltd
xor
rorl
push
loope
xor
mov
xor
or
out
push
loope
push
popf
sbb
ret
ja
and
out
sub
sbb
push
pop
dec
repnz
inc
leave
aas
rcrb
sub
sbb
xchg
jbe
sbb
out
add
push
lock
ret
lds
je
cmpsl
stos
xor
orb
std
repz
stos
int
pop
mov
out
aad
fistps
in
lock
sbb
xor
aad
aad
adc
shl
mov
lods
je
sbb
lock
push
fcomps
push
andl
jl
cmpsb
repnz
ror
push
inc
ret
imul
and
sub
jae
dec
dec
inc
andl
jne
or
push
inc
cmpsb
jns
mov
dec
decl
ss
cmc
adc
mov
push
stc
insb
jmp
pop
jl
mov
dec
inc
jns
pop
mov
lock
push
and
fs
xor
xlat
sbb
sahf
int3
hlt
push
sbb
pop
iret
lods
pop
sub
je
and
mov
sahf
popf
je
in
mov
popa
popa
test
lret
fwait
pop
mov
fsubl
cltd
icebp
push
xorb
cmp
mov
mov
sub
test
or
std
fbld
stos
pop
repz
dec
push
jl
enter
mov
adc
fdivs
mov
icebp
jge
sub
sbb
cmp
dec
int
pop
outsl
lahf
push
and
mov
fucomip
cmovs
push
lods
in
jae
cmp
repnz
xor
inc
stos
jne
stos
inc
and
xor
iret
test
cmp
clc
gs
pop
dec
jp
ret
sbb
and
push
mov
sahf
clc
inc
ja
shufps
add
cmc
call
pop
pop
sub
jo
popa
mov
cli
cmp
sub
sbb
andb
adc
cmp
sti
in
rorb
sti
insl
sbb
jmp
adc
cmp
aas
fcomp
mov
mov
xchg
pop
push
sub
out
xor
mov
xchg
add
xor
xor
lods
sti
pop
in
jge
rclb
imul
in
jp
pusha
adc
jnp
dec
pop
jp
lds
into
mov
mov
cltd
add
loop
xchg
dec
push
xlat
mov
in
cmp
frstor
leave
jp,pn
fs
shlb
jae
stos
pop
mov
jnp
dec
and
push
jo
ds
dec
mov
popa
lahf
int3
in
in
fbstp
dec
mov
cli
jno
cwtl
out
pop
inc
pop
pusha
jns
sub
gs
mov
cwtl
xchg
and
dec
and
adc
addr16
mov
sub
in
xor
into
and
add
mov
aas
dec
test
movsb
sbb
fsts
and
sub
bnd
push
and
xchg
adc
pop
cmp
dec
movsl
push
cmp
mov
lock
icebp
jecxz
sub
repz
xlat
sbb
into
rclb
repnz
mov
xchg
mov
push
loop
mov
lret
xchg
out
push
xor
in
and
cmpsl
icebp
cmpsl
fs
adc
or
cmp
jno
out
in
cmp
ret
ds
mov
ljmp
lret
cmp
and
push
cli
mov
popf
cld
mov
jg
dec
xchg
xor
mov
pop
shl
cmp
loopne
out
mov
jae
xchg
adc
xchg
or
loopne
lret
sbb
add
push
bound
mov
les
mov
daa
stos
jle
push
mov
sub
ret
outsl
int
xor
rcrb
mov
mov
jmp
cmp
fnsave
mov
pop
mov
in
pop
sub
cmpl
sub
stos
and
jno
ja
xchg
pop
lret
mov
dec
and
dec
lods
pop
xor
imul
cmc
pop
sbb
outsb
repnz
add
pop
mov
dec
movsb
adc
adc
add
insb
xchg
push
out
sub
push
out
inc
mov
cld
stos
mov
dec
popf
sub
inc
iret
shrb
filds
sbb
and
dec
clc
and
cld
jne
sbb
add
mov
xchg
into
int
add
mov
cwtl
dec
fisubrl
sahf
and
popa
push
into
mov
mov
gs
pop
xor
out
dec
xchg
dec
adc
popa
mov
sub
mov
repz
xchg
cwtl
add
ds
push
xchg
cwtl
add
cmpsl
adcb
xor
gs
cld
fwait
out
pop
iret
mov
push
scas
bound
add
add
push
in
jne
bound
cld
loop
aad
xor
jmp
fildll
push
cmp
enter
lods
scas
sbb
repnz
jle
mov
fsts
xchg
cmpsb
pusha
hlt
dec
and
lahf
movl
and
popa
push
sub
and
sub
or
xor
arpl
push
test
mov
in
sub
cmp
arpl
sub
pop
pushf
ret
lahf
fldcw
xchg
hlt
lcall
sub
inc
in
fucom
pop
pushf
xor
je
movl
movsl
pop
mov
adc
into
lcall
popf
sub
inc
daa
dec
scas
pop
fdiv
std
dec
sbb
mov
les
dec
fucomi
shrl
jmp
sub
scas
inc
and
aam
adc
js
xchg
inc
fimull
xlat
mov
fisttps
add
out
loope
sbb
cmp
inc
fbstp
fs
into
addb
outsl
xor
mov
jg
jl
in
jnp
add
arpl
jle
add
mov
xchg
mov
aaa
pushf
adc
loop
lcall
ja
jecxz
adc
xor
push
xor
lock
orb
adc
or
and
push
adc
pusha
lods
daa
xor
addb
addb
in
add
xor
inc
leave
mov
dec
int
imul
jae
mov
pop
mov
clc
fmull
dec
mov
insb
fimull
aas
inc
les
insl
add
arpl
and
ficoml
aam
loop
lahf
or
add
xchg
adc
sarb
mov
pop
roll
adc
popa
insb
aam
movsb
sub
test
dec
inc
sub
test
mov
sub
or
lcall
repnz
insb
dec
xchg
test
popf
outsb
test
out
in
and
inc
push
dec
add
inc
add
xchg
std
pop
sub
xchg
dec
cmp
mov
jmp
pop
mov
mov
jne
push
cmp
jg
pop
out
mov
dec
jge
cmp
xor
adc
push
pop
test
in
pop
icebp
cs
cmp
cwtl
mov
sbb
mov
test
test
pop
imul
sbb
fwait
dec
mov
stos
stos
mov
jp
stc
adc
push
xor
into
xchg
sub
add
add
sub
ss
jg
xchg
call
test
inc
scas
jge
sub
push
mov
or
inc
daa
repz
imul
repz
push
test
in
mov
lahf
xor
imul
push
in
fbld
xchg
ret
cmpsb
in
loope
jae
xchg
aad
jo
aam
inc
add
adc
jae
push
insl
test
lret
int3
cmp
aas
inc
cwtl
xchg
pop
mov
das
mov
shl
mov
xor
push
mov
insb
or
fld1
cmc
pop
lods
jne
and
test
iret
ljmp
in
push
testl
xchg
cmpl
into
nop
sub
adc
mov
add
repnz
pop
jne
push
stc
outsb
push
ss
sar
sbb
or
stos
and
hlt
lahf
das
or
std
imul
ret
push
cli
mov
add
std
inc
jmp
jnp
inc
inc
pop
xchg
icebp
xor
lds
das
lock
mov
lret
cmp
jg
push
inc
mov
jne
sub
mov
daa
mov
in
push
mov
testb
test
pop
mov
sub
stos
jne
stos
repnz
cmp
movsl
jg
mov
xor
std
loope
xor
cmp
xchg
add
pop
jl
addr16
out
mov
stos
popf
gs
push
pop
add
int
int3
jecxz
cmp
add
dec
cli
inc
xor
push
cmp
adc
pop
cmp
int3
and
sbb
cltd
call
xchg
test
nop
fwait
jg
rorb
decl
mov
or
mov
sub
mov
lods
pop
fstpl
test
adc
test
ljmpw
jg
mov
xor
push
andb
mov
adc
mov
in
mov
adc
repz
jge
ret
adc
jo
loopne
adcb
xchg
pusha
adc
in
jae
pop
loopne
je
je
and
dec
inc
stos
int
out
test
push
loopne
rcrl
sbbl
ljmp
cld
into
sarl
mov
fcoml
push
xchg
testl
mov
mov
add
dec
or
sub
aas
in
cmp
mov
sub
sarl
push
or
ja
mov
add
bound
idivl
and
in
lods
stc
cmp
dec
pushf
out
lds
pop
add
inc
imul
stos
ljmp
xor
iret
jl
lcall
fcmovu
std
idivb
push
add
or
cmp
jmp
pop
mov
test
xchg
jno
or
adc
les
repnz
shlb
rcl
dec
cmpsb
repz
popa
push
inc
push
cmpsb
int
imul
xor
lods
sub
dec
imul
push
jmp
sbb
jmp
cmp
push
adc
es
fimull
mov
insb
lds
hlt
in
pop
iret
in
roll
lret
imul
inc
loop
mov
mov
ret
pushf
mov
movsl
mov
repnz
dec
pop
mov
pop
cmc
gs
push
js
fnstcw
stos
daa
fsubrp
clc
in
in
inc
and
xchg
es
pop
xlat
xor
add
or
pmulhw
andl
stos
cmp
adc
jp
scas
cmp
das
lds
mov
dec
int
add
xchg
loop
xchg
mov
stc
fbld
int3
andb
or
mov
pop
or
jmp
outsb
mov
cld
add
icebp
daa
push
xor
cld
pop
or
stos
imul
mov
xchg
mov
dec
lcall
jecxz
aaa
mov
fdivrs
adc
mov
cmp
into
mov
mov
inc
sarb
adc
inc
xchg
in
jno
mov
call
iret
lret
pop
mov
inc
cmp
jle
push
mov
and
out
rorl
addr16
xlat
push
dec
add
dec
sub
jl
sbb
and
mov
and
fs
mov
mov
pop
rcr
dec
es
or
dec
fidivl
xchg
jp
push
xor
push
mov
sub
mov
add
pushl
dec
leave
cmc
push
inc
pop
xor
sub
int3
in
test
out
gs
inc
addb
stos
bnd
loope
in
cmp
mov
insl
cmp
jae
xor
call
add
jo
out
mov
or
sbb
jns
mov
int3
je
outsb
ror
cs
mov
cmp
daa
fs
inc
sub
pop
fldenv
mov
mov
push
sub
loopne
inc
add
mov
push
ljmp
mov
iret
and
inc
jo
pop
push
rcrl
test
sub
jl
inc
xor
pop
int
mov
add
push
out
cli
test
les
push
adc
ret
mov
cli
mov
mov
subb
mov
js
xchg
loope
test
movsb
pop
mov
mov
imul
jne
sbb
enter
sub
ja
push
and
mov
mov
fadds
div
inc
scas
jg
test
xlat
gs
fs
push
cmpb
sbb
cli
push
or
roll
and
and
test
jp
inc
pop
andl
cld
jb
jbe
pop
adc
xor
aas
pop
hlt
sub
outsl
and
dec
sbb
shrl
stos
cmp
cwtl
and
xor
repz
pop
xchg
jl
loopne
daa
mov
push
mov
jmp
mov
cs
cmp
mov
dec
pop
lcall
int3
xchg
out
punpcklwd
xchg
cmpsl
psubusb
loope
aas
ret
loop
popa
call
inc
test
adc
pop
or
mov
cwtl
push
jecxz
dec
ror
ja
mov
rorb
xchg
push
adc
lret
movswl
cmpsl
inc
adc
lods
sbb
mov
xchg
pop
cli
cmp
test
fwait
cltd
push
mov
addr16
cmp
inc
sub
add
pop
lret
std
enter
cmp
mov
or
mov
pop
out
sub
pop
push
loope
cmp
je
pop
outsl
sbb
sarb
dec
outsb
sub
mov
or
pushf
test
adc
pop
pop
xchg
divl
cmp
hlt
int3
sbb
xchg
pop
fstpl
cmp
or
sub
xor
mov
dec
xor
repz
clc
or
sbb
inc
out
mov
int
adc
lock
push
sub
lods
or
loop
xor
and
outsb
ret
sbb
lock
incl
mov
xor
mov
incl
pop
jmp
push
mov
jl
jp
andl
xchg
mov
cmp
ret
fcomps
and
pop
sbb
leave
push
inc
test
and
or
sahf
add
mov
add
jp
and
test
lret
and
out
adc
push
aad
sbb
fidivl
xchg
mov
imul
mov
xchg
test
adcb
jmp
xchg
mov
lcall
mov
loop
jae
pop
xor
inc
popa
xchg
xchg
pop
ret
loope
in
cwtl
sbb
sub
add
data16
popa
or
inc
or
sbb
imul
jl
lock
inc
jnp
mov
dec
sub
sbb
inc
repnz
inc
insb
adc
jecxz
fs
mov
cwtl
ror
orb
sbb
notl
jns
cmc
lods
rcrl
pop
pushf
xchg
pop
lcall
rclb
add
push
lods
inc
jae
dec
imul
xchg
std
shlb
or
jns
xchg
pop
pop
pop
fldenv
add
nop
insb
push
and
mov
mov
mov
shll
inc
imul
loopne
into
loope
mov
loop
mov
stos
mov
or
and
inc
adc
fwait
jmp
add
stos
ljmp
push
and
sbb
loop
stc
inc
dec
pop
imul
pop
fistl
pop
cmc
xor
jp
pop
std
push
mov
cmpsb
jbe
inc
pop
jne
nopl
sbb
xorb
aas
iret
es
js
jecxz
lret
jnp
inc
jg
and
dec
dec
je
adc
pop
ror
mov
jns
xchg
fcoml
xchg
scas
mov
imul
jg
pop
enter
xor
pop
mov
aad
insl
sbb
xor
xchg
or
push
lret
sbb
sub
dec
pop
enter
dec
xorb
fistpl
push
clc
pop
xchg
xlat
or
push
addr16
push
cmp
jns
stos
cmp
xor
xchg
insl
out
and
icebp
sub
arpl
adc
xor
fbld
ret
filds
test
cmp
sub
out
in
adc
adc
or
les
lret
mov
mov
mov
jns
xchg
push
je
push
add
aad
inc
outsb
stc
scas
cld
jl
mov
push
flds
xchg
adc
leave
sbb
mov
clc
jbe
imul
dec
mov
add
xchg
fs
rolb
xchg
mov
mov
add
push
movsl
lods
cmp
aad
push
nop
lahf
inc
popf
sbb
mov
fistpl
mov
cld
cmp
jnp
sbb
sub
int
adc
jnp
stc
es
sub
mov
jno
xchg
jno
jns
and
std
mov
jne
sub
and
inc
loopne
sub
mov
add
dec
xchg
mov
mov
inc
push
sub
es
dec
pop
cmp
enter
enter
mov
dec
sub
loop
test
add
add
xchg
ljmp
push
cmp
jae
icebp
pop
daa
sti
jge
inc
std
dec
push
jmp
adc
pop
inc
sub
mov
cmc
jmp
push
cs
or
movsb
mov
aas
test
cwtl
dec
cmp
xor
push
aad
shlb
out
sub
jl
aad
call
dec
or
fwait
adc
pop
fidivrs
cmpsl
fidivrs
mov
movl
xchg
lds
mov
aam
std
mov
inc
push
popf
inc
ds
and
cltd
mov
notl
xor
lea
mov
iret
rcrl
xchg
jno
sub
xor
idivb
ret
outsl
fidivrl
sbb
sub
clc
jmp
adc
clc
out
adc
cs
ror
pop
push
sub
nop
jno
clc
fwait
inc
jecxz
out
loop
push
jecxz
sbb
jo
mov
jp
mov
mov
or
cmc
cmp
xor
add
int3
mov
push
xchg
mov
rcll
leave
pusha
cmp
push
pop
sbb
push
pop
fwait
pop
test
pop
out
lcall
aaa
jb
jo
neg
jne
mov
js
cmp
pop
inc
adc
lret
aam
jne
in
fmulp
sbb
scas
jg
addb
in
jne
imul
ja
sub
jmp
mov
or
push
jns
sti
push
pop
repz
jbe
stos
in
mov
sub
pop
dec
push
adc
adc
and
sub
cmp
mov
clc
leave
jge
inc
lods
pop
add
jl
mov
mov
mov
and
nop
pushf
stos
call
mov
or
mov
stos
inc
loope
fbstp
icebp
xor
lret
pop
dec
xchg
lahf
aaa
cltd
inc
jle
sti
bound
xchg
test
cmp
ret
dec
inc
fidivrl
sub
sarl
mov
xor
repnz
mov
adc
cmp
pop
cli
or
push
mov
pop
pop
cltd
adc
in
not
jmp
inc
cld
cmpsb
cmp
push
data16
jmp
notb
pop
jmp
jle
or
push
inc
or
mov
mov
dec
sbbb
testb
sahf
xchg
xor
inc
pushf
cmp
or
aad
ret
adc
or
cmp
nop
inc
and
or
or
push
pushf
mov
xor
push
mov
pop
xchg
dec
pop
push
ss
loope
pop
ret
popa
adc
cmc
cmpsb
stc
mov
call
mov
insl
and
nop
jge
inc
mov
and
cmp
pop
inc
pusha
adc
cmpsb
push
cmp
decb
or
pop
pop
mov
xchg
notl
mov
test
mov
sbb
pop
push
mov
faddl
xchg
xchg
dec
addr16
fcmovu
push
addb
pop
shlb
mov
mov
je
xor
mov
and
and
mov
pop
addl
add
jne
cmp
inc
pop
xchg
rcrb
int3
xchg
imul
fcom
fimull
daa
shr
mov
adc
insl
rcl
scas
lahf
xchg
pushf
and
inc
jo
aam
sub
icebp
sub
add
pop
cli
xchg
and
xchg
mov
inc
lahf
add
push
cmp
and
cli
sub
rcrb
call
cli
sub
scas
out
pop
cli
mov
jae
ret
and
in
rcrl
movsb
or
cmpsb
jo
and
cmp
cmp
sub
pop
fnstsw
fdivr
mov
stos
pop
dec
fdivl
int
ja
pop
cmp
cmpsl
xchg
add
cld
bound
dec
out
dec
pop
lods
jecxz
jle
mov
lcall
xor
dec
add
addr16
lods
jo,pt
fnop
in
sbb
jnp
and
sbb
popa
cld
arpl
out
addr16
sahf
ja
mov
cmp
ja
imul
scas
mov
lods
push
push
adc
jae
push
xchg
mov
pop
mov
add
xor
dec
jbe
adc
fs
sbb
xchg
out
test
int
in
sbb
jae
mov
mov
je
out
popa
outsl
jg
xchg
js
xor
jbe
fimuls
out
test
stc
es
ret
jne
divb
xor
je
ret
stos
jbe
testb
lods
dec
jne
mov
loope
enter
pop
sbb
jbe
xchg
push
test
scas
jecxz
outsb
sub
repz
jg
std
leave
jns
fidivrs
out
call
shr
inc
mov
add
xor
dec
sbb
shlb
int3
out
or
std
mov
iret
push
jmp
fidivs
sub
mov
cld
cmc
pop
lds
xchg
pusha
cmp
push
add
cmc
pop
push
dec
iret
push
popa
pop
js
xchg
icebp
out
inc
aam
mov
test
test
mov
sub
sub
add
ret
ss
mov
das
shlb
fnstcw
stos
jl
cmpl
xchg
sub
or
cmp
jle
dec
int3
outsb
mov
pop
push
test
in
add
ja
mov
adc
pop
jbe
pop
sub
aas
enter
xchg
xlat
mov
mov
cmpsb
loop
mov
sub
outsl
mov
movsl
orb
adc
dec
push
inc
and
mov
xor
or
int
dec
imul
sbb
jge
jle
and
fdivrs
inc
add
lea
sub
push
dec
shlb
mov
fmulp
nop
lods
adc
adc
movl
pop
mov
es
jno
jg
loop
and
rcrl
outsl
xchg
cmp
xchg
xor
mov
and
add
popf
adc
ds
call
lods
int
scas
loope
cltd
icebp
mov
iret
dec
inc
je
out
adc
cmc
lods
rol
jo
and
and
pop
imul
loope
and
inc
out
dec
sbbl
push
lahf
cmp
in
and
cmp
test
sbb
dec
push
jno
push
sub
sbbb
pop
pop
lods
cld
aaa
or
mov
push
shrl
or
push
cmp
mov
xor
mov
movsb
mov
pushl
push
jno
or
aam
jbe
push
push
imul
jle
shlb
mov
mov
popf
mov
ljmp
lds
push
mov
mov
xor
nop
jb
scas
flds
sub
push
jle
loope
push
add
bound
imul
add
sbb
jg
adc
repz
repnz
cmc
test
ret
xor
push
cmp
mov
push
lcall
push
pop
js
push
mov
pop
cmp
sub
std
loop
hlt
push
sub
push
cltd
insb
sti
enter
adc
pop
jl
movsl
retw
pushf
jo
fldenv
add
add
pop
cmp
into
lods
cs
out
aam
nop
out
xchg
inc
cli
xlat
cli
out
in
int3
add
adc
cltd
inc
pop
stos
inc
lret
es
xchg
movsl
adc
stos
jne
in
loope
inc
dec
stos
in
loop
enter
add
out
sbb
stc
inc
mov
sbb
ljmp
fcmovbe
xor
cmpsl
mov
fs
call
rol
arpl
xchg
cld
cmpsb
jge
push
mov
outsb
shrb
int
in
pop
lods
push
neg
xor
jb
lds
cmpsl
xor
sbb
out
test
and
push
imul
lea
shl
prefetchwt1
dec
shr
add
pop
into
icebp
movsl
push
mov
leave
xchg
jge
sbb
xchg
es
xchg
fisubl
call
push
in
push
push
pop
xchg
cmpsb
dec
mov
aad
std
push
ret
push
ja
mov
cltd
cmp
jmp
jg
movsb
pop
call
outsb
mov
inc
push
add
cmp
imul
int3
pop
and
dec
mov
pop
bound
outsb
ja
push
dec
scas
sbb
ja
push
mov
fsubs
pop
je
daa
pcmpeqw
pop
jno
cmp
pop
adc
ret
cmp
or
imul
ds
insb
fwait
adc
sbbb
das
out
mov
sahf
dec
das
mov
push
pusha
stc
ret
sahf
test
int3
xchg
pop
cli
loop
push
psraw
push
inc
rol
mov
insl
sub
rcl
scas
adc
inc
fsubrl
ljmp
dec
or
add
dec
fisubs
cmpsb
xchg
mov
sti
adc
mov
push
push
inc
sar
mov
ret
mov
ret
and
jnp
mov
mov
loop
pop
jne
lret
xlat
cltd
sbb
stos
enter
pop
and
push
andb
mov
mov
lods
stc
pop
popa
adc
mov
daa
inc
push
aaa
sub
ds
in
dec
pop
push
lcall
shll
sarb
outsl
in
pushf
pop
mov
xlat
mov
hlt
cmp
mov
dec
cmc
cmp
cmp
nop
out
out
inc
fisubs
clc
orl
mov
adcl
inc
call
in
repnz
or
lods
ds
pop
add
push
movsb
fs
lahf
fistpl
push
outsl
xchg
sub
mov
pop
pop
sub
mov
sub
repnz
cmp
inc
xor
in
shl
adc
or
pop
jae
adc
fs
in
mov
push
shl
mov
in
ror
add
lods
test
jb
repnz
in
mov
mov
addb
insl
adc
sbb
in
orl
ds
stos
and
addl
aad
mov
fwait
int
mov
ja
fdivs
lcall
jmp
movsb
pop
xor
fwait
rcl
jnp
je
stc
scas
fcompl
and
and
into
cwtl
dec
and
fst
cmp
fndisi(8087
dec
mov
jne
andl
and
push
and
inc
push
mov
call
push
cmp
scas
sbb
movsl
lret
lods
mov
leave
int3
xor
or
addl
cmp
mov
fs
outsb
and
jae
jg
sub
stos
movsl
loopne
and
mov
shrl
mov
dec
xchg
or
ret
icebp
je
push
xor
mov
js
lock
pop
scas
divb
cmp
mov
rol
and
and
bound
mov
jne
mov
or
jmp
mov
frstor
cli
jno
leave
xchg
outsl
jns
lock
sub
out
daa
mov
hlt
mov
push
sbb
orl
pop
int
add
dec
loope
mov
jb
es
pop
push
pop
insb
mov
fildll
and
shll
cltd
push
repz
hlt
pushf
scas
out
fwait
loopne
ret
lods
sbb
jmp
test
cmp
xchg
imul
aaa
shl
mov
sbb
add
add
shlb
fistpll
fwait
add
sarl
cltd
out
jg
xor
mov
enter
insl
leave
sbb
leave
stos
inc
cmp
inc
cs
cmp
pop
jmp
jecxz
addr16
pop
push
sbb
pusha
sar
lea
push
sub
xchg
out
js
mov
and
repz
sub
jnp
inc
jmp
cmc
cmp
movsl
lcall
ret
mov
mov
jge
xchg
sbb
jno
setnp
mov
cltd
or
add
xchg
add
or
jp
outsb
jge
pop
mov
cmp
mov
and
fcmovnu
cmp
jbe
xchg
jno
cmpsl
pop
outsl
repnz
mov
insb
fwait
incb
push
movsb
sub
out
push
jmp
inc
mov
in
jle
aad
mov
xchg
shrb
ja
popa
ds
aad
pop
mov
xchg
test
dec
push
and
mov
bound
sbb
or
shrb
or
or
mov
clc
mov
sbb
and
xor
addl
repz
cmp
lret
bound
dec
movsl
stos
push
out
ja
cmp
rclb
loopne
testl
sbb
fbstp
xchg
gs
and
push
xor
mov
ljmp
test
fsubrl
mov
popa
repnz
lret
in
inc
jb
repz
push
insb
and
adc
xor
setl
arpl
adc
mov
inc
sahf
pop
xor
jnp
pop
or
xor
mov
mov
ds
lret
adc
rorb
decb
test
pop
das
push
ds
pop
mov
mov
sar
push
mov
mov
in
andb
cmpsb
leave
idivl
shll
add
mov
mov
push
or
pop
or
aaa
aaa
fldl
dec
lcall
insl
mov
shrl
lods
leavew
xor
push
adcl
jl
lods
outsb
xchg
push
popa
xor
outsb
mov
jmp
loop
cli
out
cmp
insb
add
jbe
cmp
lcall
pop
xchg
xchg
leave
cld
lea
sar
pushf
cmp
jmp
push
xor
mov
pop
pop
insl
and
sbb
adc
push
ss
fisttps
mov
dec
mov
pop
pop
aaa
es
cmp
jne
jge
cltd
stos
cmp
imul
outsb
mov
dec
xor
pop
push
jns
ret
cmp
adcb
out
shll
std
sahf
inc
jg
enter
popf
call
repz
mov
mov
mov
sbb
fwait
pushf
outsl
push
mov
mov
test
push
push
fstps
inc
mov
icebp
xchg
add
jnp
push
mov
test
clc
aam
imul
loop
jb
out
das
mov
sub
adc
dec
test
inc
lcall
mov
mov
sti
addr16
enter
mov
test
idivb
sub
xchg
lahf
jp
mov
lcall
mov
movsl
lcall
pop
test
xchg
outsb
or
call
ret
and
xchg
dec
jne
or
xor
inc
mov
push
mov
push
dec
dec
push
fs
mov
shr
dec
xchg
dec
loopne
andl
fsubl
ret
test
lret
scas
fildl
xchg
mov
clc
mov
dec
jne
enter
pushf
mov
clc
xchg
cmp
stos
jg
in
ds
lret
jb
mov
lahf
sarb
fildl
leave
sbb
test
es
outsl
repnz
xchg
sti
ds
int3
das
out
mov
add
hlt
insb
ljmp
loopne
pusha
dec
out
push
enter
movsb
adcb
rorb
pop
and
dec
cwtl
sbb
aas
jmp
or
in
ret
push
dec
cvtps2pd
lahf
nop
mov
popa
shlb
and
ds
movb
mov
xor
xchg
in
add
jmp
dec
in
test
ret
je
test
dec
jl
sahf
fdivrl
loop
mov
sbb
mov
repz
rolb
decb
dec
push
and
and
mov
push
dec
mov
mov
fwait
lock
test
lahf
std
push
sbb
mov
ret
ljmp
push
outsb
cltd
xor
xchg
mov
ljmp
xorb
jo
divps
sbb
push
pop
int3
or
xchg
pop
lret
or
insl
cwtl
push
mov
mov
stos
xchg
inc
stc
movsl
push
js
dec
sbb
pushf
lea
test
push
test
adc
sbb
mov
mov
cs
imulb
xor
mov
cli
popf
mov
push
cmp
movsb
in
cld
adc
aas
mov
mov
mov
out
push
mov
push
mov
jle
xchg
lret
dec
mov
rcr
shrb
adcl
and
push
mov
adc
lock
and
out
jnp
fs
mov
add
xchg
xchg
mov
jns
sub
dec
out
inc
inc
adc
inc
imul
adcl
mov
cld
mov
push
sarl
mov
je
mov
mov
call
pushf
pop
jno
xor
cmp
leave
aas
mov
lds
dec
lods
and
mov
or
fstp
jns
sarb
mov
xor
notb
sahf
xchg
rorl
sbb
lcall
in
inc
pop
jl
jmp
xchg
or
or
mov
cmp
call
xor
jecxz
pop
mov
daa
sub
cld
mov
outsb
pushf
cld
jge
lret
outsb
incb
je
imul
movsl
cld
jg
test
out
adc
mov
jo
cwtl
pushf
sbb
or
stos
jns
mov
mov
sarb
jnp
dec
movsb
jnp
mov
ror
dec
adc
add
xor
dec
pop
sub
subl
cmpsb
jle
xlat
jno
pop
dec
outsb
aas
incl
mov
ret
xchg
xchg
ss
xor
mov
outsb
push
andl
xchg
test
scas
outsb
ljmp
lods
lret
xor
orb
mov
mov
sbb
out
adc
out
hlt
rolb
xor
mov
push
lods
mov
cmp
inc
push
adc
fsubrs
in
jp
mov
fst
cmp
pop
je
cmp
test
outsb
add
imul
int3
fimuls
fiaddl
cmp
push
inc
nop
inc
call
out
lret
add
out
mov
arpl
xor
jg
in
ficomps
lcall
js
fildl
push
mov
pusha
insb
test
xchg
std
lret
or
lods
test
out
xchg
mov
lret
mov
loop
adc
push
mov
decl
repnz
jg
imull
mov
pop
dec
fstpl
jecxz
aam
add
movsb
pop
jae
cltd
pop
dec
dec
push
out
dec
sbb
dec
push
lock
sub
frstor
jns
mov
shrl
mov
shlb
dec
in
test
test
sarl
xchg
clc
add
mov
adc
stos
es
add
mov
outsl
xchg
xlat
jnp
sahf
cli
lods
pop
mov
inc
and
push
dec
cltd
adc
and
mov
out
xchg
rol
mov
mov
ss
lds
xchg
aam
int
push
inc
cmp
ficompl
sub
popf
mov
in
js
adc
mov
cld
mov
test
dec
addr16
pop
je
stc
test
hlt
or
inc
add
imull
test
lock
cmp
cld
cli
cmp
xor
inc
into
out
scas
inc
test
repz
xor
xchg
subl
nop
ror
aad
enter
xor
outsl
add
loope
jle
rorb
jp
outsl
sub
and
je
and
jae
mov
jg
inc
js
test
loopne
sbb
mov
add
inc
mov
scas
mov
dec
push
mov
sub
inc
lcall
nop
hlt
sbb
mov
ds
cmpsl
test
fs
filds
test
scas
jle
mov
pop
pop
sub
gs
push
jno
pusha
sub
sbb
fmull
cmp
ss
scas
out
pop
lea
push
inc
and
push
int3
int3
pop
sub
ja
sbb
lret
xor
or
fldt
jge
cli
or
pusha
and
cmpsb
add
out
push
adc
mov
adc
movsb
lods
cmp
rcrb
dec
xor
sbb
xchg
xor
icebp
shlb
lret
xchg
adc
fidivrl
push
or
fadds
mov
sbb
dec
xchg
fimull
or
mov
adc
cmp
lods
std
push
in
or
xchg
cmp
sarb
pop
lds
and
mov
hlt
cs
and
add
nop
mov
subl
mov
repz
dec
ja
mov
dec
in
xchg
jne
xor
mov
xchg
xchg
dec
mov
test
pushf
push
out
mov
mov
in
mov
fdivr
negb
xchg
xor
sub
xor
inc
dec
imul
pop
add
pop
movsl
push
xor
jo
adc
loopne
es
push
jne
cmp
adc
xor
lret
dec
mov
jecxz
or
push
xchg
sbb
imul
imul
test
mov
and
fnstenv
arpl
shll
outsl
cltd
in
les
iret
dec
xor
dec
in
cmpsl
sahf
mov
xor
dec
movsb
test
movsb
data16
imul
les
lea
jno
mul
in
nop
movb
push
sbb
xor
mov
mov
jo
dec
mov
cli
icebp
std
in
push
xchg
jne
negl
insb
les
adc
sub
out
pop
lods
cld
imul
ja
jno
nop
rcll
add
insb
ds
shl
psubw
out
mov
pop
int
mov
insl
sti
sub
cmp
fcomi
pop
xchg
in
pop
dec
aad
or
or
mov
loope
aad
popf
nop
es
pop
pushf
imul
or
call
je
hlt
scas
xor
xchg
mov
hlt
mov
int3
daa
lcall
mov
test
lds
cmp
out
ss
jae
pop
mov
insl
das
and
add
dec
in
into
or
outsl
leave
rcr
pop
sub
sbb
sbb
loope
mov
jg
fbld
xchg
leave
or
mov
add
inc
scas
xchg
inc
mov
push
in
pop
jmp
int3
test
gs
mov
imul
scas
jo
sarl
sub
cmp
fcoms
xor
jmp
jb
into
cmpsl
scas
sub
test
aas
xchg
ret
xchg
lret
jl
rorl
or
daa
in
std
adc
mov
imul
mov
and
loop
arpl
test
insl
ffree
xlat
adc
sub
movsl
mov
mov
dec
movsl
cld
outsb
shrl
pop
sub
sahf
pop
das
xchg
mov
dec
das
stos
aaa
js
incb
or
mulb
dec
arpl
or
dec
mov
lret
mov
mov
clc
popf
mov
adc
push
mov
andl
nop
inc
xor
daa
fildll
add
cmp
lahf
mov
pop
jae
cs
mov
das
notl
in
xchg
inc
mov
sbb
add
mov
cmp
shlb
test
jg
push
ret
and
push
adc
and
dec
add
xlat
push
xchg
sub
xor
lcall
das
fcomip
inc
mov
call
lret
sbb
and
cli
iret
or
dec
dec
xor
fwait
repz
test
arpl
xchg
jp
aaa
push
in
add
mov
push
inc
sbb
loop
sbb
test
mov
and
les
sub
es
mov
es
jnp
int
push
jb
jns
jl
mov
sbb
add
xchg
xor
rorb
test
xorb
pop
jbe
fnstcw
and
insb
shll
insb
sbb
lods
dec
stos
sbb
jnp
xchg
push
sbb
out
jne
xor
xchg
cltd
and
inc
insb
or
je
lahf
jne
adc
sub
mov
fnsave
sub
shrl
sbb
pop
mov
shl
mov
mov
ret
mov
push
icebp
xor
stos
sarb
dec
or
notl
stos
adc
jg
mov
jns
int3
mov
sub
sbb
sbb
out
int
cli
out
xlat
ljmp
cmp
xchg
lret
mov
add
sbb
hlt
dec
dec
or
jle
jmp
cmpsl
out
jbe
gs
jb
ret
rclb
cmp
leave
iret
jae
cmpsl
call
lahf
push
test
adc
add
icebp
xlat
pop
arpl
xchg
out
lea
xor
jae
popf
add
stos
xor
xlat
cmp
push
aas
mov
add
fs
loope
or
iret
or
sub
loop
sbb
adc
clc
mov
or
sti
dec
cmp
fsubrs
iret
daa
rorl
dec
mov
add
xchg
sbb
jl
add
jmp
out
lcall
pop
push
add
hlt
cmp
in
push
das
push
jge
sub
dec
test
xchg
fsubr
jmp
lock
ljmp
notb
int
sahf
jo
pop
subl
fidivrl
in
sbb
bound
out
out
fldenv
and
je
push
and
cwtl
outsl
xchg
cmp
outsb
or
testl
xchg
aaa
cli
and
jmp
aaa
adc
jmp
shrl
popf
loop
push
addl
add
in
push
fistpl
push
leave
sbb
pushf
mov
cmp
out
mov
dec
imul
stos
push
mov
addr16
outsb
cli
mov
repnz
lret
lock
sarl
add
inc
jb
fmull
pop
gs
or
add
adc
scas
jl
mov
push
out
sbb
into
cltd
imul
fcompl
roll
sbb
fisttpl
or
rol
mov
lock
sbb
popa
test
push
shrb
out
mov
jecxz
or
fstpl
or
inc
add
xor
loopne
notl
lret
mov
xchg
adc
addr16
popa
into
pop
pop
mov
xor
cmp
mov
test
rcrb
shll
ljmp
pop
mov
cmp
dec
inc
out
lods
in
cmp
add
mov
ret
fs
sbb
mov
loope
pop
xchg
fdivl
mov
mov
dec
sub
mov
das
loope
jo
inc
xor
test
iret
out
lods
mov
push
ror
jae,pn
or
jne
sub
push
xor
popa
cmp
ret
test
jo
int
ja
shlb
adc
nop
aaa
and
nop
arpl
das
sub
bound
cmc
xchg
sbb
cli
add
cvtps2pi
cmp
popf
adc
sub
cmc
mov
pop
imul
les
faddl
push
push
pop
outsb
icebp
push
inc
or
push
add
jg
and
fisubrs
dec
stc
cmp
ds
cmpsb
sbb
loope
lds
pop
sbb
mov
jae
dec
les
cs
or
icebp
push
dec
xchg
out
push
xchg
jne
shlb
pop
jbe
jl
fs
mov
out
cmp
int
inc
js
xchg
inc
push
fistpl
jg
std
pop
or
mov
mov
sub
adc
mov
dec
sub
aas
jae
aaa
stos
jmp
xor
push
lods
pushf
xor
je
stos
sbb
loop
cld
push
aaa
shlb
outsb
jb
pop
in
cmp
out
fistl
data16
cmp
ficomps
js
sbb
xor
lret
std
push
aaa
xchg
mov
sub
dec
mov
jnp
mov
jne
outsl
adc
inc
popa
popf
cmp
loopne
push
clc
jge
jg
sub
mov
imul
je
in
repz
cwtl
xor
inc
aas
add
and
mov
mov
adc
ljmp
xchg
pop
leave
push
aas
pushf
mov
dec
gs
cmpsb
and
pop
es
addr16
ficomps
pushf
jecxz
push
ljmp
dec
shrb
push
jecxz
cmp
test
scas
fsub
sahf
adc
push
xor
and
leave
ret
dec
cmpsb
es
jno
jl
fld
mov
icebp
imul
pop
xchg
stos
inc
repnz
dec
xchg
leave
roll
repnz
cmp
shl
mov
ss
dec
mov
jbe
movb
xchg
pop
into
mov
pushf
jbe
xorb
xlat
dec
arpl
dec
into
dec
cmpsl
adc
push
cli
stos
and
loopne
in
ret
jnp
orl
cmc
lods
test
xchg
addl
movsb
lea
jns
inc
dec
shlb
scas
daa
or
and
push
scas
xchg
cmpsl
mov
push
movsl
mov
xor
daa
push
pop
shrl
jg
push
and
add
mov
lret
xchg
push
and
and
in
jp
les
add
cltd
outsb
xor
or
outsb
inc
es
lret
out
repnz
sub
dec
jmp
cmp
arpl
inc
es
add
fcomps
nop
xchg
mov
cmpsl
call
test
inc
xchg
imul
add
cmp
icebp
into
jecxz
int3
or
dec
push
popf
repz
sub
sub
int
inc
sbb
out
mov
shl
cld
push
fdiv
aad
add
inc
sbb
jo
sahf
mov
pop
adcb
mov
mov
push
jmp
mov
data16
adc
or
jmp
scas
rcll
test
lods
test
push
test
and
push
push
jl
insb
aas
ss
test
mov
idivl
or
sub
xor
test
popa
mov
stc
dec
sub
std
es
and
subb
popa
in
jl
cmpsb
fcompl
jmp
inc
test
dec
movsl
or
js
or
add
rcl
push
je
stos
pop
addr16
dec
xor
outsb
scas
mov
mov
ss
push
cmp
xchg
push
sarb
add
xor
pop
jae
sbb
aad
xor
je
and
xchg
xchg
mov
test
shrl
sbb
fs
jae
arpl
sbb
mov
or
movb
add
cmc
in
in
cmpsb
dec
addl
mov
loopne
pop
subl
aaa
loope
jg
inc
pop
and
and
outsl
rolb
push
cmp
xchg
mov
xlat
pop
int
std
cmp
dec
imul
dec
inc
int3
int3
fistpll
cmp
shrb
sbbl
ret
pusha
fwait
xor
xchg
popf
fsubr
test
imul
and
scas
mov
ja
cwtl
dec
fldenv
dec
or
decb
jns
push
xlat
and
inc
lock
sbbb
jnp
mov
lret
cmp
ret
inc
push
and
mov
add
cmp
mov
pop
dec
pushf
dec
or
jns
mulb
das
mov
pop
push
rcrb
or
push
cmp
mov
jb
outsl
pusha
xchg
adc
ret
mov
sub
push
add
pop
add
mov
cmc
test
pop
scas
add
inc
decl
notl
ss
mov
addl
mov
and
push
sarl
jmp
jnp
pop
fimull
pop
ljmp
cmpsl
stc
adc
dec
pop
add
push
xchg
ljmp
imul
enter
push
ror
movsb
pop
negb
jmp
add
fidivl
pop
int
rorl
inc
jns
xchg
stc
movsb
int
xchg
cmc
shr
mov
push
lea
lds
cmp
pop
fstp
mov
cmpsb
insb
xchg
outsl
push
jo
inc
cli
aad
fistps
es
jmp
push
push
add
cmp
negl
lods
repz
add
mov
les
ljmp
adc
out
out
es
and
push
lods
test
test
lods
aam
jge
sbb
push
sub
int
cli
lahf
push
lcall
into
sti
adc
icebp
xor
inc
pop
adc
out
std
mov
jno
jl
fisubl
xchg
testb
aad
fs
or
mov
mov
pop
sub
aam
xchg
movsb
mov
jo
fldenv
lods
push
cmp
fistpll
pushf
mov
inc
adc
dec
mov
cmc
scas
dec
pop
jmp
push
push
lret
xchg
cmp
inc
jns
hlt
or
les
inc
in
fbstp
xchg
cmp
aaa
fsubrl
sbb
sbb
sub
rcl
mov
scas
and
push
mov
pushf
adc
push
jno
push
add
and
cmp
push
jne
hlt
jbe
cltd
je
push
shl
aam
imul
jnp
mov
int
jns
in
test
test
out
inc
inc
cmp
mov
push
aam
jmp
sub
outsl
lahf
sub
arpl
push
push
mov
js
mov
lcall
push
lods
aas
push
imul
push
pop
addb
dec
mov
mov
cwtl
xchg
test
adc
cmp
cs
pop
imul
testb
int
jg
scas
scas
leave
test
push
xchg
and
stos
or
mov
pop
dec
test
sub
pop
mov
push
imul
or
cmp
addr16
and
xchg
jmp
xor
and
andl
or
sarl
imul
cmp
dec
adc
das
test
mov
js
cmp
push
and
in
fsts
cmp
pop
jg
add
mov
std
or
push
shrl
daa
out
and
mov
sbb
jnp
popa
cmc
dec
sar
pop
arpl
jl
andl
jnp
mov
outsl
push
mov
inc
pop
inc
sahf
scas
pop
mov
or
out
cmp
sub
cmp
mov
add
sub
call
ja
clc
mov
xchg
scas
cmp
and
insb
jnp
lret
or
mov
iret
adc
cmp
aad
cmp
repz
mov
fidivl
dec
cmc
mov
js
ret
inc
jmp
sti
xor
sbb
jb,pt
pop
fdivs
pop
cmp
ljmp
xor
cmp
cmp
shrl
push
imul
mov
sub
push
shlb
lcall
stos
fs
in
xor
scas
pop
jae
jb
cmp
pop
popf
hlt
push
sbb
out
arpl
daa
push
mov
fs
roll
rcrl
mov
subl
imul
ficomps
je
inc
mov
jp
in
xchg
sbb
incb
pushf
jmp
into
cmc
inc
aam
adc
sub
rcr
popa
sbb
pop
loopne
fisubs
inc
lcall
dec
fldcw
outsl
idiv
jmp
push
mov
cmc
cmp
mov
sub
xor
jp
in
inc
adc
dec
lahf
stos
push
adc
stos
push
sub
fsub
out
pop
loope
and
jae
cmpsl
adc
pop
rol
insb
adc
sbb
cwtl
mov
fistl
mov
xchg
es
pop
jl
push
mov
aad
mov
aad
jns
pop
push
dec
arpl
std
je
iret
add
xlat
mov
push
adc
movsl
xchg
cld
in
divb
das
lods
jno
pop
lods
ffree
pop
or
mov
cmp
test
popa
shr
icebp
call
dec
rorl
xor
sbb
daa
rorl
and
clc
jp
add
out
decl
mov
cwtl
mov
shlb
dec
xlat
mov
sti
cmc
or
scas
cmp
ficomps
scas
leave
lahf
ret
xchg
mov
sbb
mov
mov
ret
fldl
aam
addb
lea
cltd
ret
stos
je
das
add
pop
call
cmpsl
stc
data16
mov
xchg
lcall
dec
mov
xor
xchg
mov
jae
xor
cmp
outsl
sahf
dec
fmul
adc
cmpsb
dec
popf
fnstsw
or
mov
jo
pop
fidivl
aad
fldenv
inc
sbb
mov
cwtl
fnstsw
js
add
or
pop
adc
clc
sub
imul
inc
es
mov
pop
mov
xchg
stos
jbe
pop
pop
jl
inc
mov
mov
xchg
sbb
out
jnp
inc
lds
into
shr
in
out
sbb
jnp
lock
paddb
push
imul
sub
repz
hlt
insl
inc
inc
pop
lods
cltd
jecxz
ss
add
xor
call
lds
sti
call
insb
stos
add
xchg
frstor
test
int3
test
push
add
int3
js
xchg
aam
adc
call
inc
jmp
pop
or
dec
dec
and
cmpsl
push
stos
add
aad
push
lret
push
pop
cmp
daa
adc
in
cmpsb
inc
repnz
xchg
jbe
jp
add
mov
imul
popa
dec
js
aas
pop
mov
in
cli
dec
mov
cmpl
xor
pushf
jo
pop
xchg
or
repnz
mov
fcmovu
adc
add
testb
cmp
sti
lock
jle
hlt
std
sbb
das
nop
int3
dec
cmpsb
mov
cs
jmp
dec
push
mov
xchg
cwtl
inc
movsl
fsubrl
jecxz
cmpsb
dec
mov
shll
xchg
pop
dec
add
loope
dec
int
ffree
adc
ja
popa
adc
aad
pushl
loop
stos
mov
imul
sbb
enter
sbb
push
jb
out
shlb
mov
loopne
lahf
mov
out
pop
daa
sbb
imul
mov
call
or
adcb
sbb
mov
lahf
pmaxub
xchg
and
loop
or
call
popf
insb
cmp
movsb
dec
jl
insl
into
fsubrl
jbe
out
mov
add
push
fisttpll
dec
xchg
push
or
fiaddl
push
jbe
jne
int
jb
fs
inc
push
nop
dec
push
cmp
mov
push
pop
mov
jnp
or
sub
lret
fcmove
shrl
or
jae
jnp
aad
das
pop
mull
pop
mov
inc
jb
inc
std
js
enter
gs
arpl
sbb
push
sahf
mov
sbb
popa
pushf
add
adc
mov
icebp
loope
add
push
inc
shll
leave
jb
inc
xlat
dec
in
pop
lods
inc
fwait
ss
mov
ss
and
cmp
fisttpl
adc
mov
mov
insl
dec
cli
xchg
test
jno
mov
cs
arpl
fs
movsb
sub
test
sbb
pushf
ja
mov
out
stos
push
in
repnz
mov
jg
mov
les
ret
cmc
xor
inc
push
pop
xchg
js
shll
mov
addr16
add
cmpsl
lcall
pushf
xor
mov
xchg
mov
bound
mov
fcomp
fdivp
push
lock
ret
xchg
loope
add
inc
jmp
mov
push
push
cltd
dec
cmp
add
jno
xlat
sub
mov
das
xchg
or
div
push
push
fmuls
out
pop
stc
or
add
jns
push
stos
std
idivl
leave
adc
adc
test
mov
int
pop
xchg
jns
inc
imulb
fstpl
mov
adc
jno
cld
mov
int
xchg
dec
fwait
mov
adc
fistps
fwait
inc
fwait
jecxz
adc
or
cltd
and
fistl
sub
fs
xchg
add
xorl
xor
hlt
test
inc
push
stc
xchg
stos
jne
mov
add
mov
push
daa
into
push
rol
insl
mov
xchg
popa
mov
mov
xor
inc
pushf
adc
outsb
adc
xchg
bound
sbb
fidivrs
sbb
into
mov
push
mov
jge
cmpsb
adc
outsl
push
xor
mov
sub
pop
jne
lret
pop
fiaddl
mov
into
stc
out
inc
fists
push
cmc
stc
and
roll
stos
dec
adc
cld
icebp
movsl
insl
and
leave
xor
jmp
testl
call
notl
int3
daa
sbb
subb
pop
xor
addr16
or
sahf
scas
shrl
ja
mov
push
sbb
ljmp
rep
pop
je
test
rep
ss
dec
jb
in
mov
pop
js
inc
repz
inc
lahf
inc
add
sarb
push
mov
jp
movsb
mov
int3
mov
pop
xor
add
fistl
sub
push
jns
sbb
fimuls
out
sbb
mov
stc
enter
and
ljmp
test
rol
aad
dec
cltd
out
xlat
xchg
xchg
out
es
xorl
dec
hlt
mov
jl
insl
adc
mov
imul
shrb
mov
fidivl
popa
fbstp
test
ret
pop
cs
add
pop
pusha
clc
int
jnp
lea
push
mov
addr16
jl
pop
jecxz
fisubrl
lret
lcall
push
test
aaa
mov
add
je
fistpl
stc
cld
pop
push
mov
cmp
push
ja
xlat
sbb
jp
jnp
data16
mov
add
mov
or
xchg
shll
add
lock
fnstsw
jge
cld
shlb
fwait
insb
mov
lea
adc
xchg
ds
adc
inc
movsl
sbb
inc
ljmp
jg
push
jg
lods
pop
imul
jno
aas
clc
shrb
insb
nop
enter
in
lods
xchg
jmp
mul
pop
push
pushf
and
lret
lods
rcrl
jp
mov
dec
xor
lret
dec
mov
pop
jae
out
cmpb
cmp
movsb
dec
pop
gs
lea
sub
fimuls
jp
adc
pop
daa
idivb
popf
mov
in
subb
mov
dec
lds
adc
cli
sub
shlb
jge
mov
pop
and
add
out
and
stos
dec
adc
in
lret
and
mov
popa
cmp
shlb
sbb
lea
ss
jmp
xchg
inc
into
xchg
scas
push
nop
mov
out
and
xor
add
test
rolb
mov
je
push
popf
enter
stc
jns
mov
mov
lods
lock
sti
dec
pop
and
jecxz
jp
test
std
sti
ret
cmc
stc
pop
repnz
jle
mov
push
pop
jne
das
sub
sbb
jmp
jge
inc
push
mov
cmp
mov
rorl
pop
sbb
xchg
push
inc
fstp
arpl
ljmp
int3
andl
push
sbb
stc
adc
das
push
xor
dec
adc
or
mov
lahf
les
addr16
or
in
cs
lods
push
inc
inc
shrb
rcll
jle
fadds
or
jl
xchg
mov
ret
inc
mov
or
sub
inc
push
in
loope
dec
mov
clc
xlat
pushf
fnsave
lret
sub
inc
pushf
hlt
mov
icebp
jg
xchg
jle
jmp
into
adcb
repnz
jp
movsl
vcvtdq2ps
aas
std
cli
xor
and
loopne
jae
dec
pop
jne
rorb
mov
pusha
and
or
xlat
mov
xchg
shrl
pop
or
or
mov
mov
jbe
lock
jns
fstps
scas
pop
cwtl
negb
xchg
mov
push
inc
rcll
lods
imul
xchg
add
dec
and
mov
jecxz
lret
jl,pn
cld
xor
dec
sub
daa
lret
add
lds
test
sub
inc
pop
nop
push
xchg
xchg
pusha
mov
or
push
lods
xor
mov
sub
inc
jg
inc
ds
mov
sarl
shlb
sbb
movsl
or
inc
adc
ftst
in
mov
scas
and
jo
push
xor
mov
jecxz
ja
call
jbe
notl
mov
or
ret
or
mov
lcall
repnz
test
cmp
push
ds
daa
cltd
negl
sbb
out
out
pop
aam
imulb
out
shl
pusha
cmp
sbb
mov
ljmp
popa
push
pop
sub
mov
mulb
cmp
scas
pop
out
inc
pop
inc
fldt
mov
xor
cmc
cmp
mov
lret
and
dec
push
pop
cmp
mov
neg
mov
xchg
ficoml
mov
imul
push
jg
or
loopne
cmp
ja
xlat
adc
push
pop
nop
or
lcall
clc
icebp
jns
pop
or
mov
outsb
bound
out
cli
outsb
jl
js
popa
imul
stos
jg
and
jecxz
out
repz
lock
push
fadd
push
in
inc
dec
repz
dec
clc
xchg
mov
adc
cmp
gs
inc
adc
scas
mov
sub
inc
out
dec
lcall
rcrb
cmp
pop
negb
mov
cmpsb
sbb
out
add
arpl
mov
dec
adc
leave
mov
and
mov
in
sub
and
mov
outsl
repnz
imul
mov
cmp
rclb
cmpsl
shll
add
pop
test
mov
iret
rclb
push
rcrb
dec
fs
mov
mov
mov
pusha
popa
xchg
push
sub
cmpsl
sbb
test
pop
fsubs
sbb
clc
sbb
in
mov
push
sbb
lahf
repz
sbb
sarb
mov
loope
bound
jl
mov
inc
into
pushf
fstps
fwait
push
pusha
push
lods
jmp
xchg
cmp
jns
fisubrl
loopne
push
and
push
pusha
pop
and
jns
fidivs
jp
mov
sbbb
mov
mov
add
in
lret
int
dec
aam
sbb
adc
sub
sti
xchg
and
ja
adc
mov
negb
push
push
push
push
test
jae
jno
inc
pushf
clc
stos
mov
push
fsubp
jecxz
icebp
xor
aam
adc
imull
sub
and
das
inc
lahf
hlt
scas
ja
adc
mov
sbb
xor
movl
arpl
ss
inc
addr16
and
or
es
int3
fnstenv
repz
xor
fildl
mov
jl
push
xchg
adc
aaa
xchg
mov
xchg
push
and
int
cli
xchg
cmp
xchg
mov
xchg
mov
mov
dec
movsb
xor
in
shlb
mov
test
sarl
les
mov
push
adc
and
jge
mov
adc
jmp
sub
jae
mov
mov
mov
sub
js
ret
shll
jae
test
jno
add
sbbb
es
push
and
add
mov
pop
mov
jbe
push
ret
add
cmpb
inc
inc
fst
xlat
push
add
leave
jo
outsb
in
movsl
mov
xlat
mov
out
pop
inc
pop
in
xchg
xchg
add
sarb
stos
xor
add
adc
rep
add
cltd
push
sub
cmpsb
pavgb
or
push
cs
enter
mov
sub
sub
scas
cmp
pop
cmc
dec
fucomp
xor
xor
lods
push
out
loopne
xor
jg
imul
cs
pop
inc
jno
es
mov
ljmp
dec
jnp
push
rcrb
pop
ja
in
adc
clc
jno
mov
pop
scas
insl
mov
pop
adc
mov
dec
xchg
arpl
fs
xchg
pop
iret
jp
xor
push
int
mov
rcrb
out
adc
add
cltd
xor
adc
int3
lret
adc
xor
pop
out
out
and
pop
nop
inc
mov
out
or
push
mov
je
fwait
aaa
fcomip
mov
jecxz
rcr
xchg
mov
int
fadd
pop
add
sub
sub
stos
fnstcw
in
cwtl
jo
popa
lcall
and
test
and
fisubrl
data16
pusha
pusha
inc
sbb
arpl
add
push
lock
mov
inc
jnp
lgs
jp
stc
popf
stc
mov
mov
push
movsl
cwtl
fmull
das
mov
inc
add
adc
aam
adc
jnp
in
repz
sbbb
lret
xchg
rolb
leave
or
cmpsl
and
push
addr16
divl
hlt
push
push
int3
adc
push
adc
push
dec
add
orl
ret
fiadds
fs
out
das
movsb
cld
in
dec
dec
xchg
xchg
mov
mov
clc
sbb
out
fwait
xor
jmp
fwait
sub
sbb
add
mov
mov
int3
ret
pop
pop
push
mov
pusha
mov
rcl
subl
aam
inc
test
outsb
shll
cli
lcall
mov
or
popa
testl
shrb
mov
daa
lods
xchg
rcrl
and
imul
jg
mov
int3
in
and
shlb
xor
fucompp
mov
sub
outsb
push
sub
mov
popa
mov
fstpt
cmp
andb
push
mov
ja
jmp
sub
inc
lea
jmp
or
in
sub
mov
cmp
popf
push
mov
mov
rcll
push
aam
fisubrl
repz
int3
lea
pop
out
sub
fs
push
jmp
jmp
push
bound
test
inc
xor
sub
popa
cmp
test
lods
jne
scas
jg
cwtl
movsl
inc
pop
mov
cmpsl
icebp
and
hlt
int
mov
or
jl
push
xlat
and
sub
mov
jl
movsb
movsl
ret
ljmp
mulb
and
sahf
mov
loopne
push
arpl
pop
in
mov
daa
add
dec
pushw
enter
lds
xor
rcr
ret
andl
enter
cmpsl
stos
mov
iret
ss
or
loopne
in
lods
or
push
mov
rorl
arpl
push
xchg
mov
into
shr
xor
mov
inc
mov
fimull
arpl
stos
std
repz
mov
xchg
mov
leave
push
dec
dec
mov
pop
push
pushf
add
rclb
push
mov
pop
insb
cltd
or
lret
sub
xlat
push
mov
mov
cmpsb
lahf
inc
jle
dec
xchg
mov
jmp
repz
arpl
hlt
push
xor
lcall
inc
clc
xor
out
imul
sbbb
pop
fistps
xchg
mov
mov
icebp
pop
mov
mov
ja
jbe
pop
lret
in
les
xlat
mull
pop
cltd
sub
int3
imull
sub
fisubrs
loope
sub
fs
sbb
cli
in
movsb
adc
push
cwtd
xchg
mov
dec
sarb
scas
dec
lods
mov
ficoml
lods
add
pop
and
push
aas
inc
or
fs
ss
mov
mov
rolb
pop
push
ret
sub
xlat
xor
fsubr
fsubrs
jb
jge
mov
repnz
jns
inc
add
bound
or
mov
cmp
cs
scas
cmpb
lret
mov
adc
add
mov
dec
iret
and
decb
mov
aaa
lahf
push
push
aaa
pop
loop
mov
xor
nop
ljmp
mov
dec
lds
xchg
roll
inc
loope
out
add
xchg
sub
data16
jo
xchg
add
test
add
cmp
push
ret
pop
lds
aaa
or
icebp
cld
inc
daa
hlt
arpl
push
jae
insl
arpl
sbb
pop
add
adc
jp
jbe
idivb
jo
push
sbb
inc
sub
mov
ja
mov
jl
pop
out
test
das
push
cmc
add
push
shlb
pop
xor
adc
shlb
dec
jp
jl
add
out
test
pop
mov
sbb
inc
stc
mov
jmp
repz
repnz
iret
in
scas
xchg
push
hlt
sub
dec
sub
sub
hlt
in
enter
dec
jmp
push
fbstp
jecxz
sbb
adc
pop
pop
out
pop
ss
mov
lretw
ficompl
inc
test
pushl
xchg
push
xor
leave
mov
les
and
cmp
inc
cli
sbb
cmc
cmp
jbe
jbe
mov
xor
lods
lds
or
pushf
push
divb
and
std
inc
pop
push
mov
rcl
sbb
fsubs
inc
jmp
jecxz
mov
mov
outsl
fucomi
adc
dec
cmc
lcall
imul
fnsave
pop
sbb
rcrb
mov
jl
dec
icebp
jb
fiadds
xor
sbb
into
push
test
jp
js
mov
sub
imul
push
push
stos
in
lock
jbe
inc
lea
movsb
xor
into
push
in
cmp
js
mov
push
pusha
cs
movsb
or
jne
or
fimuls
xor
jl
sbb
dec
inc
popf
adc
leave
ljmp
popf
inc
mov
sub
cld
fdiv
cmp
jns
inc
daa
xchg
push
mov
push
cmp
ret
aam
cmp
sbb
xchg
sbb
imul
out
iret
aad
cmp
fs
hlt
movsl
jl
xchg
or
dec
xchg
jge
and
rorl
rcrb
stc
inc
sub
cmp
xor
js
in
leave
mov
cmp
sub
popf
iret
andl
call
rcr
adc
xchg
mov
aas
fldl2t
aaa
imul
insl
jae
sub
popa
cmpsl
mov
nop
add
lret
das
xchg
add
pop
xlat
lock
jns
push
jne
inc
xor
mov
xor
pop
dec
out
inc
push
lret
and
jmp
adc
sub
mov
and
aad
adcl
bnd
mov
push
or
sub
pop
push
out
stc
dec
movntps
xchg
sub
nop
es
push
std
dec
lret
pop
aad
xor
fidivrl
xor
jne
cmpsl
xchg
mov
sub
xchg
sahf
and
aam
adc
xchg
out
nop
in
mov
fimull
dec
add
and
pop
cmovl
sahf
cmp
roll
fiadds
jne
mov
je
xlat
clc
cmp
in
out
mov
dec
scas
rcl
gs
jp
loop
icebp
fistpll
pop
ja
hlt
sub
cmp
mov
mov
in
mov
xor
push
xchg
mov
mov
insl
mov
nop
mov
mov
es
pop
mov
jne
int
adc
inc
ljmp
ja
cmp
dec
incb
mov
jo
enter
inc
jbe
push
fcoml
and
jno
imul
lds
push
pop
xchg
mov
inc
xchg
insl
push
sub
push
pop
mov
lahf
stos
sub
xrelease
adc
mov
jno
cmpsb
pop
fwait
cmp
clc
mov
int
test
in
pushf
xchg
int3
cmp
push
rolb
rcrb
les
scas
scas
in
lea
or
xchg
test
mov
mov
xor
or
in
mov
push
xlat
shlb
pop
xchg
adc
cs
nop
lret
es
and
mov
nop
xlat
xlat
dec
jg
popf
testl
cs
mov
mov
sahf
loop
iret
push
mov
inc
pop
incl
std
std
and
lods
mov
lcall
dec
shll
jnp
mov
movsl
icebp
lds
xor
push
in
pop
dec
mov
or
das
sbb
cld
xor
loopne
fmull
mov
popf
lahf
cmp
pop
repnz
xlat
mov
inc
lret
inc
xor
test
test
sub
fnstenv
subb
pop
push
sub
out
scas
cmp
mov
fwait
mov
cmp
frstor
cld
jns
jmp
push
ficomps
adc
and
pop
filds
daa
adc
push
aad
jo
lods
hlt
pushf
faddp
fsubl
jmp
dec
pop
jp
adc
xchg
xor
mov
jmp
lods
mov
pusha
gs
push
iret
or
mov
jp
adc
mov
xchg
data16
fs
mov
xor
into
cmp
mov
sbb
loope
sub
stos
jecxz
fwait
pop
or
mov
fiaddl
cmc
xchg
jno
das
jb
mov
mov
jno
push
xchg
adc
ss
js
out
out
cltd
push
fisttps
dec
daa
inc
rep
mov
dec
les
aad
mov
jbe
int
sarl
lods
jge
sbb
rclb
push
test
dec
sbb
pop
mov
mov
pop
xor
fwait
dec
cmp
jnp
cltd
das
xor
imul
mov
hlt
or
cmp
enter
gs
je
imul
mov
mov
loopne
pop
or
sub
xor
add
test
or
ss
nop
bound
loope
push
add
push
pop
pop
add
aaa
adc
test
lret
out
outsl
mov
inc
fdivr
sub
mov
add
push
fdivrs
xor
cmp
je
inc
sbb
in
jno
pop
adc
inc
or
inc
loope
push
xor
stos
test
sbb
lret
das
mov
pop
ljmp
mov
int
sti
jp
out
nop
mov
or
mov
sub
cld
or
loope
inc
inc
les
cmpsb
mov
iret
out
push
push
or
test
stos
les
pop
adc
fwait
pop
sbb
in
clc
pop
push
or
pop
inc
call
or
rolb
push
adc
and
xchg
call
mov
into
mov
sarb
cmp
je
push
add
insb
mov
fs
mov
test
or
push
inc
inc
js
ret
xchg
int3
mov
and
cld
cmp
scas
data16
xlat
xlat
mov
subl
jmp
repnz
rcr
test
add
push
cwtl
daa
and
or
push
sahf
pop
cmp
mov
adc
jnp
push
call
push
inc
mov
xor
in
inc
icebp
sub
push
cmp
shlb
xor
mov
and
jo
lret
les
jo
loopne
cmp
imul
push
pop
push
subl
icebp
adc
je
or
test
fistpll
and
mov
mov
jle
pop
jne
punpckhbw
add
xchg
pop
sub
addr16
cld
mov
out
rcll
je
xchg
jb
xchg
mov
add
push
dec
mov
push
ret
xchg
test
pop
stos
push
sarl
mov
add
adc
je
xchg
enter
pop
sbb
jmp
loope
mov
and
and
or
mov
sub
cmpsb
mov
adc
aaa
or
mov
lret
sub
mov
mov
ss
push
and
dec
loopne
lock
cld
cmpsb
sub
and
push
mov
mov
xor
negb
push
jnp
fnstsw
in
fistpll
inc
test
clc
lret
shlb
dec
cmp
mov
and
sbb
iret
pop
xchg
mov
sarb
pop
push
int3
push
and
or
push
out
jnp
fcoml
or
iret
jl
xchg
mov
inc
out
rol
mov
icebp
jg
outsb
ds
arpl
mov
maskmovq
negl
mov
lods
andl
mov
pop
inc
dec
mov
cmp
push
minps
sbb
fcomps
cltd
adc
mov
add
in
dec
cmp
pop
into
mov
bound
push
gs
cmp
pop
pushf
lcall
test
push
int3
adc
jne
ret
pushf
add
cmp
lcall
shrb
inc
push
int3
data16
sub
loopne
aas
data16
sub
and
es
mov
push
and
xlat
ret
loope
xchg
fwait
cmpsl
imul
hlt
and
inc
aam
out
mov
inc
sti
mov
mov
ret
adc
fisubrs
test
pushf
xlat
pop
in
movsb
aaa
dec
cmpsb
cmp
gs
sub
mov
sbb
stos
call
lock
mov
mov
lea
mov
sbb
add
rolb
inc
cmp
loop
mov
push
cmp
sub
pop
insl
dec
je
scas
mov
jbe
clc
cli
xor
xchg
orb
xor
sbb
jnp
fldt
incb
sbb
roll
cmpl
imul
xlat
ds
push
int
jecxz
movsb
dec
popa
mov
ret
call
movsl
fwait
clc
sub
loop
pop
jg
fidivrs
test
jns
xor
push
mov
out
in
jmp
ss
int
push
jmp
push
out
push
pop
push
mov
jl
pop
out
mov
andb
ret
mov
icebp
outsb
ljmp
mov
push
mov
inc
mov
lret
push
inc
cs
inc
adc
xchg
or
ja
add
mov
repz
arpl
push
add
push
cli
add
mov
inc
push
dec
insl
jo
test
jge
pop
int
leave
cmp
leave
pop
push
push
sbb
jb
ret
nop
mov
ret
fucom
or
mov
arpl
pslld
jecxz
or
addr16
cld
std
out
mov
mov
and
pop
mov
and
sub
aad
data16
faddl
sbb
and
cld
cli
ss
xchg
popa
fiaddl
add
xchg
mov
pop
push
outsl
push
push
ss
xchg
pop
lods
cli
push
mov
repz
cmp
xor
push
imul
enter
mov
mov
mov
push
inc
cmp
test
out
aad
clc
push
cmpb
popf
lods
cmc
cvtpi2ps
pop
dec
daa
xor
sub
pop
orb
push
xchg
repnz
mov
outsb
xchg
or
and
popa
mov
popa
lds
dec
in
inc
in
addr16
aas
mov
mov
pushf
mov
cmp
repz
sub
cmc
iret
mov
jns
xchg
inc
fwait
adc
hlt
fs
ja
xor
repz
ret
or
push
xor
push
idiv
adcl
daa
stc
mov
lahf
ljmp
stos
aas
inc
mov
outsb
bound
mov
dec
jns
es
aad
mov
popf
mov
idiv
lods
lock
lods
push
cmp
add
clc
cmp
mov
jne
fstpl
cmp
mov
add
jl
adc
and
js
cmpsb
fistpl
pop
sbb
pop
jp
dec
outsl
inc
mov
pop
and
and
xchg
cwtl
es
ljmp
aas
je
dec
rolb
ss
out
inc
stos
mov
lahf
fnstenv
xor
jns
xchg
push
mov
mov
mov
sub
lahf
sub
test
ret
iret
ja
fistl
or
push
sarl
stos
cltd
sbb
daa
repz
sub
mov
jle
dec
adc
loopne
jne
or
dec
lock
test
nop
ds
adc
mov
and
imul
aad
lds
sub
rcll
xchg
xchg
push
out
aad
xor
mov
lds
pop
sbb
std
call
and
ret
pop
imul
mov
pop
mov
dec
push
push
or
adc
jno
lret
adc
inc
faddp
shll
inc
mov
jp
xchg
xchg
js
repnz
data16
adc
mov
jp
adc
inc
xchg
clc
pop
sti
or
pop
or
cmp
mov
mov
test
out
loope
jb
mov
xor
mov
loope
mov
pushf
or
in
pop
sub
popf
outsl
inc
jmp
aad
xlat
mov
loopne
arpl
cwtl
cmp
sbb
les
lahf
lock
cwtl
pusha
inc
lret
lds
sti
mov
push
pop
push
ret
pop
bnd
fcmovbe
add
out
push
push
in
push
icebp
scas
iret
add
pop
popf
outsb
mov
lahf
out
cli
sti
sbb
aad
dec
andl
movsl
xchg
inc
adc
xor
fcompl
jns
pop
das
fdivrs
add
gs
mov
cs
adcl
fstl
pop
dec
shlb
add
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
