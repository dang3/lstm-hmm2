add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
inc
cmp
out
cmpsb
data16
rolb
push
add
add
add
pop
push
add
popa
add
add
pop
add
add
mov
add
add
stos
add
nop
add
add
add
add
add
test
mov
add
add
add
add
add
add
add
add
add
or
mov
add
add
nop
add
xor
add
add
add
cmp
mov
add
dec
add
add
add
add
into
add
jae
mov
add
add
add
add
sub
add
add
add
add
push
add
add
add
repnz
mov
add
add
dec
add
repnz
add
dec
add
add
dec
add
add
add
add
aas
add
mov
add
jmp
add
add
add
add
add
add
add
add
mov
inc
add
ret
add
lret
add
mov
add
add
add
add
ja
addl
add
add
push
add
add
add
dec
add
aas
add
add
add
add
add
add
add
movl
mov
add
add
add
adc
stos
add
add
xlat
add
sub
dec
add
add
stos
add
dec
add
add
jbe
js
add
cmp
add
or
jge
push
add
add
add
xor
mov
fiaddl
nop
add
add
add
add
add
xchg
insb
add
pop
add
or
dec
add
mov
add
dec
add
imul
add
mov
dec
add
mov
pop
add
dec
add
cmpsl
add
pop
add
add
mov
add
add
cltd
add
add
add
adc
mov
add
dec
add
push
add
add
push
add
add
add
add
add
out
aad
aaa
add
pop
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
cwtl
add
mov
add
add
dec
add
add
add
add
add
add
add
push
add
xchg
dec
add
push
add
add
add
add
add
push
add
add
mov
dec
add
add
add
add
imul
add
dec
add
mov
dec
add
ret
add
add
inc
add
add
add
dec
add
add
add
add
add
add
xor
cmp
add
dec
add
add
mov
dec
add
lods
add
add
js
int
sahf
add
add
add
add
test
iret
add
add
add
add
add
nop
add
add
movsl
adcb
pusha
xchg
iret
incl
cs
lret
in
insl
pop
std
popf
iret
and
jae
mov
cmp
call
loope
sbb
add
xor
jle
mov
es
dec
cmpb
int
idiv
jp
xchg
jnp
pop
aam
jge
cmp
into
adc
or
pop
inc
dec
xchg
loopne
in
and
shlb
dec
sahf
fwait
shlb
jge
js
fstps
mov
adc
addr16
jb
cwtl
jb
into
adc
into
cld
das
xlat
cmpsl
js
int
inc
add
loop
sti
popf
push
mov
stos
pop
push
lahf
jmp
or
mov
ficompl
cltd
push
in
jmp
std
sbb
mov
xor
bts
dec
ljmp
inc
mov
xor
scas
inc
jecxz
sub
push
mov
repz
pop
and
int
pop
aaa
push
scas
movsl
popf
sbb
dec
sbb
xor
lock
orb
leave
push
mov
fwait
mov
andb
stc
out
int3
add
into
idivl
xchg
add
shll
repnz
enter
jecxz
fadds
dec
xchg
mov
shrb
jb
sti
hlt
mov
add
scas
loope
imul
addb
add
stos
ret
clc
lock
lods
push
dec
pop
mov
bsr
sub
fstps
inc
sbb
push
fwait
sub
es
test
jge
mov
push
xor
lea
dec
and
jl
mov
mov
and
push
mov
pusha
inc
movsl
or
sub
popf
aas
fstl
add
jge
into
cmp
xchg
cs
mov
or
repnz
cmp
pop
int
cmp
jno
fwait
push
aam
hlt
stos
and
dec
jle
call
mov
loopne
insl
mov
xchg
adc
stc
xor
rcll
sub
dec
lds
add
jmp
les
pop
sub
es
inc
aam
imul
test
xor
ror
mov
js
mov
je
loopne
imul
mov
repnz
push
and
mov
pop
in
xchg
in
push
lods
mov
call
fucomi
in
jmp
test
pop
push
adc
mov
cmpsb
repz
sbb
inc
sub
jnp
xor
cmpsb
mov
loop
inc
add
push
mov
test
imul
push
dec
add
fdivp
jl
pop
mov
arpl
fsubrl
inc
test
push
push
loop,pt
rcll
push
mov
dec
out
inc
cs
cmc
push
dec
incl
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
mov
push
neg
iret
mov
fucomi
out
loop
das
push
outsl
ja
push
dec
inc
cmp
das
mov
mul
out
neg
iret
mov
xchg
jbe
inc
dec
push
aas
push
dec
xor
push
movhps
fimuls
into
scas
mov
ja
jg
add
aas
and
imul
mov
mov
ljmp
mov
les
fisubrs
pop
stc
outsl
repz
jl
iret
inc
xchg
push
inc
mov
or
cltd
xchg
mov
inc
mov
out
scas
jp
popf
fcomip
dec
mov
sub
mov
aas
xchg
jbe
sub
test
in
push
push
push
mov
cmp
cmpsb
sahf
repnz
push
cmp
dec
mov
sub
push
jp
adc
and
cpuid
inc
data16
fisttpl
aas
mov
and
es
push
jp
jp
out
andb
push
xor
adc
xchg
xchg
xchg
sbb
mov
das
pop
add
adc
icebp
out
out
fbld
mov
xchg
lea
outsb
xchg
dec
pop
xor
pop
sbb
pop
out
test
movsb
fcmovbe
mov
out
repz
or
jbe
inc
xor
inc
xor
imul
cwtl
mov
mov
repz
movsb
inc
adc
adc
and
push
dec
push
dec
ss
dec
bound
mov
scas
mov
xchg
jbe
inc
dec
push
aas
es
ss
push
movlhps
out
neg
iret
mov
xchg
jbe
inc
dec
push
aas
es
ss
push
movlhps
out
in
inc
nop
aam
sub
adc
aam
jl
insb
cmp
arpl
hlt
cli
enter
pushf
stos
jmp
cmp
gs
pop
jbe
inc
pop
pushf
push
xchg
and
hlt
leave
js
xchg
xchg
iret
stos
push
lea
sub
mov
dec
pop
lcall
movsb
sahf
pop
bound
jo
aas
ret
xor
aam
jae
jp
pop
add
inc
fs
push
lods
pop
into
xlat
sub
and
imul
ret
or
jo
sbb
inc
or
dec
jno
adc
mov
scas
repnz
cmp
cwtl
mov
dec
xchg
faddp
jge
mov
mov
cs
outsl
dec
dec
push
pop
es
inc
cmp
pop
adc
cmp
sbb
jl
or
inc
incl
loope
cmp
lcall
mov
mov
push
syscall
mov
sahf
dec
cmpb
sub
fisttps
sub
rol
dec
lds
fmulp
fisubrs
sbb
aad
push
sarb
sub
mov
mov
fstl
dec
imul
jp
ret
loope
nop
cltd
jl
into
push
sub
mov
repnz
ja
fcompl
test
add
sbb
mov
mov
push
test
fdivr
call
add
stos
int3
repnz
aas
ret
pop
clc
enter
popa
sbb
adc
in
pop
sahf
lahf
sti
jp
call
lods
lahf
mov
sar
ljmp
rcrl
inc
test
dec
adcl
or
and
out
call
xchg
lods
je
arpl
push
sbb
inc
test
cmp
sbb
mov
out
mov
adc
shl
out
rorl
inc
xchg
cmp
js
mov
jmp
lahf
pop
call
in
push
cltd
lea
jnp
test
pop
push
mov
pop
hlt
sbb
shl
shrb
es
jo
adc
mov
les
cs
fwait
sbb
pusha
sub
mov
mov
mov
cmp
int3
imul
rolb
push
xor
loope
cmp
mov
std
sbb
mov
fcomps
out
repz
roll
mov
mov
bound
fstl
sarl
inc
flds
popa
jnp
xchg
in
and
sbb
push
jno
nop
xor
es
addr16
psllw
jg
push
xlat
sbb
pop
cmpsb
mov
xchg
addr16
cmp
shr
ja
xor
std
dec
repnz
fs
insl
negl
insl
es
out
xorl
add
fnsave
lds
inc
add
mov
pop
push
push
sbb
dec
push
mov
repz
aaa
loope
daa
sub
test
xor
mov
pop
insb
mov
inc
cmpb
cmp
into
pop
mov
and
mov
inc
movsl
mov
test
pop
jnp
pop
movsb
inc
movsb
outsb
ss
out
cltd
fistpll
stc
jo
outsl
cmp
cmp
adc
fsubrl
and
inc
sarb
inc
xchg
lods
repnz
repnz
lods
cmp
arpl
xchg
and
mov
cmp
fldcw
in
pop
arpl
stos
xchg
sti
sbb
stos
or
test
out
les
inc
adc
pushf
scas
sub
mov
and
lods
pop
imul
insb
xchg
in
jo
fcmovnb
jmp
lcall
sbb
cmp
mov
and
jae
push
imul
mov
xorb
fdivr
popa
push
mov
mov
or
lahf
sahf
das
out
movsl
push
ja
mov
add
inc
mov
test
cmp
pop
nop
test
and
xchg
clc
jecxz
xor
outsb
mov
je
lods
lock
push
mov
and
jne
rcr
mov
inc
add
jmp
pop
jmp
out
pop
lret
lods
gs
daa
mov
jl
adc
outsl
cmp
dec
into
movsb
add
inc
ficomps
sub
dec
jo
xor
push
add
cmp
xchg
push
adc
cmpsl
push
push
jns
in
je
pushfw
push
int3
ss
fcmovne
mov
jmp
and
and
ss
push
mov
xlat
jbe
arpl
test
sub
xor
lret
mov
orb
pop
lret
sbb
imul
movsb
mov
jge
mov
mov
cltd
push
lods
mov
lcall
ret
sahf
add
mov
fldenv
xor
rcll
mov
jg
push
pop
mov
sub
inc
sti
push
and
das
movl
rcrl
sahf
stc
insl
fildl
aam
cs
mov
mov
adc
adc
lea
insb
or
out
mov
movsl
lock
aas
sarb
addr16
mov
imul
shrl
out
out
pop
in
jae
rorl
dec
nop
jnp
ja
fidivrs
out
xchg
test
sbb
add
xchg
mov
negb
adcb
stc
dec
sarb
jb
lcall
pop
inc
je
add
cmp
xchg
cmp
and
scas
push
out
dec
inc
shll
xor
test
mov
scas
and
stc
in
inc
adc
cmpsl
pop
out
xchg
pop
mov
inc
ficoml
cmp
adc
add
ljmp
or
push
stos
jmp
mov
ret
pop
int3
mov
sbb
adc
imul
ljmp
call
shlb
lret
mov
jmp
test
and
and
mov
cmp
repz
stos
in
or
shlb
and
data16
imul
fwait
jge
enter
push
pop
and
mov
cmp
movsb
jb
jg
aam
sbb
pop
mov
push
data16
das
insl
dec
neg
xchg
icebp
add
jmp
test
mov
mov
lea
test
ja
scas
sub
insl
pop
adc
pop
jecxz
sbb
pop
pop
repz
popa
xorl
mov
ror
cld
enter
adc
lahf
ljmp
lahf
in
dec
cmp
xchg
lds
aad
test
pushf
movsl
xchg
mov
and
das
adcb
push
pop
popa
lods
xchg
test
stos
xor
mov
imul
lahf
dec
xchg
xor
imul
adcl
out
dec
icebp
pop
cmp
adc
cmp
jle
lds
adc
insl
mov
jo
out
xchg
inc
insb
xor
mov
mov
dec
pop
cmpsl
push
std
mov
pushf
xor
push
or
sbb
stos
mov
add
das
dec
aad
xor
jl
xchg
mov
inc
js
xchg
pop
mov
dec
xor
xor
cltd
scas
call
and
sahf
hlt
test
xchg
mov
sbb
pop
and
and
add
xchg
fnstenv
mov
adc
xchg
sbb
or
pop
movsb
and
lods
mov
test
mul
jl
cli
into
xchg
addr16
insb
mov
xchg
aam
push
aad
sarb
xchg
das
js
and
add
std
int
xchg
pop
mov
dec
sbb
sti
and
mov
push
incl
sub
int3
pop
xor
dec
xor
pop
bound
push
inc
add
dec
dec
das
pushf
mov
push
mov
sbb
lret
adc
push
inc
pop
das
ret
add
test
sti
mov
insb
clc
adc
insb
outsb
push
inc
pop
pop
and
or
xor
inc
faddl
loopne
mov
jne
ss
mov
adc
fucomip
mov
ja
divl
mov
mov
and
xchg
clc
rclb
cmpsb
fwait
mull
mov
fnstsw
inc
push
subb
idivl
fistpll
int
nop
test
int3
nop
mov
clc
jl
xchg
lahf
cmp
data16
and
xor
xlat
adc
in
call
pop
xor
rclb
add
jno
jge
sbb
mov
inc
cli
ret
insb
cli
aad
inc
sbb
adc
orb
xlat
in
ss
test
lock
and
outsb
aam
cwtl
xchg
cmpsl
test
xchg
and
imul
mov
xchg
adc
icebp
fsubrs
aas
sbb
and
inc
mov
int3
or
add
or
or
loope
or
lods
cmp
push
cmp
call
xor
inc
push
xor
xchg
rorl
xor
cltd
push
pop
mov
icebp
jmp
mov
inc
addr16
subl
pusha
pop
data16
iret
adcb
xor
addl
stos
and
sub
pushf
aaa
xor
int3
pop
in
arpl
sbb
repnz
sub
or
adc
push
push
gs
sarl
jle
sub
in
add
hlt
jb
and
fisttpl
mov
xchg
push
pop
fstpl
push
xchg
sbb
out
cmp
push
aam
in
scas
mov
dec
jle
mov
pop
call
fs
loopne
push
gs
jo
pop
lahf
pop
call
mov
sub
push
xchg
jg
and
mov
xchg
cmpl
out
out
lcall
pop
pusha
sbb
xchg
pop
dec
cs
je
mov
cpuid
aam
sbb
popa
es
ja
fsubl
mov
fs
pop
xchg
xchg
push
or
aas
iret
fstl
sbb
in
mov
mov
movsl
pop
lret
outsb
or
repnz
and
stc
add
dec
pop
push
cmp
daa
clc
inc
adcl
nop
dec
jbe
enter
loop
ret
stos
adc
pop
xchg
pop
cwtl
sti
loope
mov
mov
push
cmp
fldenv
nop
daa
adc
or
test
add
xchg
xchg
arpl
cmpsb
sub
push
fnsave
inc
les
xchg
dec
cmc
push
es
cmc
dec
dec
mov
mov
cmp
adc
adc
inc
dec
cmp
xchg
sbb
fbstp
in
dec
scas
shl
test
jp
in
mov
sbb
mov
mov
into
fsts
mov
or
icebp
nop
xchg
insl
dec
or
cs
adc
shlb
jg
dec
fisttpll
fiadds
cmpsb
add
bound
out
sub
stos
xor
fiaddl
rcrb
xchg
cld
mov
xchg
arpl
rclw
inc
bound
les
mov
fildll
inc
jmp
lods
testl
bound
rclb
shl
shr
mov
stos
repz
lock
xor
fwait
inc
sub
xchg
xchg
inc
xor
add
dec
pop
pop
ljmp
test
jb
mov
out
lock
or
push
arpl
pop
daa
arpl
jae
jge
int3
push
mov
out
xchg
sti
lret
cmc
add
scas
cmp
test
or
dec
sahf
jle
gs
push
xchg
ds
dec
fistpl
xchg
add
fmuls
mov
cmp
sub
jae
mov
cmp
ret
fstp
lds
enter
call
xchg
stos
pop
or
mov
aaa
xor
cmp
test
push
xchg
rolb
mov
xchg
cmovae
xor
jo
adc
imul
addr16
sub
dec
jno
jno
addb
jne
fsubp
mov
mov
push
inc
xlat
cltd
loopne
xchg
push
dec
gs
repz
imul
push
fisttpl
push
movsb
jmp
aam
mov
popf
ljmp
mov
arpl
fnstsw
xchg
std
xor
dec
xchg
mov
inc
pop
adc
mov
cmp
push
cmpsl
or
push
mov
lret
pop
mov
dec
push
repz
mov
push
jnp
mov
clc
enter
fistps
sub
push
add
int
int3
adc
xor
shll
xchg
dec
pop
mov
pop
out
aas
inc
adc
vpaddw
outsl
or
or
xorl
mov
lock
les
jns
adc
push
or
pop
sbb
popf
inc
out
mov
das
int
and
fsubs
arpl
pop
imul
and
jg
adc
inc
jb
cld
leave
fdivl
testb
add
rol
jb
xlat
mov
xchg
cwtl
test
pushf
jbe
je
xchg
pop
sub
hlt
js
fimull
clc
mov
testb
mov
ljmp
leave
pop
into
popf
mov
imul
inc
sti
dec
add
es
pop
scas
or
mov
or
dec
or
cmpsb
inc
xchg
xchg
leave
add
xor
outsb
repz
incb
jl
mov
orb
or
ret
dec
xor
fsubrl
xchg
arpl
mov
dec
inc
mov
lea
cmp
jl
push
lret
test
mov
shlw
sub
push
push
mov
xchg
scas
hlt
scas
cmp
mov
rcrl
push
mov
xchg
push
mov
mov
fldenv
arpl
xor
mov
fwait
mov
jp
or
cmp
and
int3
shll
push
js
pusha
cmpsl
cmp
cmp
lea
jne
insb
or
inc
iret
jecxz
stos
or
add
mov
jmp
mov
stos
or
and
jl
xchg
pop
test
jb
mov
jecxz
and
enter
xchg
push
orb
out
xchg
dec
stos
pop
gs
cmp
je
dec
inc
sbb
mov
lods
sub
jbe
mov
pop
cmp
jl
leave
push
and
out
fsubl
xor
ja
cmp
mov
icebp
mov
icebp
outsb
sub
push
hlt
out
fs
inc
xor
loop
cmp
imul
cmp
adc
push
out
pushf
add
daa
loope
jbe
sbb
pop
jl
andl
inc
mov
mov
into
and
nop
jo
xor
xchg
push
out
cmpsb
push
out
es
xor
sub
repnz
movsl
push
pop
or
mov
mov
repz
add
or
inc
cmp
pusha
sub
mov
out
aaa
cmp
add
mov
xchg
dec
cmp
sub
xor
sbb
fsts
movsbl
or
xor
stos
xchg
xchg
popa
ljmp
cmp
adc
in
sahf
pop
outsl
pusha
add
scas
xor
dec
jge
lcall
sbb
inc
or
mov
xchg
adc
xchg
fwait
popa
mov
xchg
sbbb
fisubs
dec
mov
outsb
sbb
jb
cmpsb
int
ret
cltd
cs
or
es
jne
xchg
jo
lea
ficoms
pop
enter
sti
xchg
sub
pop
out
or
dec
jnp
repz
les
push
stos
push
fwait
mov
xchg
jne
imul
sbb
add
dec
mov
pop
in
std
xor
adc
sub
xchg
mov
mov
ror
or
int3
std
mov
adc
fsubp
loope
jne
test
lahf
mov
xor
jae
imul
jecxz
sub
cmpsl
xor
cmp
aad
mov
ja
pop
mov
fwait
popf
loopne
lret
add
xor
cltd
dec
stc
dec
mov
mov
adc
sbb
push
ret
or
ret
lea
adc
xchg
test
add
xor
add
addr16
push
pushf
lea
cmp
mov
imul
inc
jecxz
arpl
mov
sbb
cs
add
jnp
cs
pop
mov
inc
xor
inc
mov
mov
mov
movsb
fistpl
or
lds
xchg
shlb
outsb
gs
add
dec
dec
jge
loop
jnp
fucomip
push
dec
push
stc
fadd
fnsave
cmc
add
push
add
and
ljmp
push
pushf
int
in
mov
mov
or
in
addr16
lcall
push
xchg
rcr
cmp
pop
add
mov
mov
fcomps
popa
imul
addr16
in
push
popf
es
sub
imulb
pop
stos
dec
sbb
mov
cwtl
repz
dec
xor
push
test
std
pop
stos
push
hlt
xor
adc
mov
ss
imul
jmp
fwait
mov
pop
mov
add
fdivl
add
int3
aad
out
add
int
nop
nop
or
fistpl
aaa
in
jb
in
inc
jmp
and
aam
shrb
xchg
xchg
mov
or
clc
mov
lock
ret
or
sub
pop
push
lcall
cmp
sbb
sbb
jnp
addr16
add
incb
pop
outsb
inc
jmp
push
out
mov
ficompl
cli
xlat
push
push
push
movsl
orb
loopne
add
lahf
xchg
sbb
push
dec
daa
mov
stos
xor
cmp
mov
dec
into
jnp
mov
icebp
popa
mov
inc
sbb
das
and
lock
xor
lcall
xchg
fcoms
mov
add
ficoms
fucomip
mov
sub
outsl
cltd
cmp
sub
mov
fwait
mov
pusha
lds
cmpsb
dec
fistpll
push
push
mov
mov
mov
inc
daa
cmp
in
pop
imul
inc
mov
or
push
fwait
xor
rcr
sbb
in
fidivrl
lcall
imul
jns
xor
and
outsb
into
sbb
imull
dec
xchg
fnstcw
dec
push
and
fldt
jp
xchg
cmp
sub
clc
pop
push
pop
xchg
rcrl
sbb
push
push
rcrl
mov
ss
add
loop
ja
ss
dec
out
aam
ret
or
outsb
mov
xor
mov
fmul
cmp
pop
xlat
push
pop
mov
jne
shll
call
dec
or
rcrl
orl
jp
ljmp
dec
data16
ss
pop
movsl
or
and
pop
loope
mov
or
outsl
mov
js
stc
or
push
dec
push
add
cvtps2pi
fisubrl
pop
push
lcall
push
push
and
sbb
and
inc
inc
out
mov
dec
lock
add
and
fimuls
xchg
adc
mov
push
ljmp
es
in
xchg
and
fwait
jno
push
loop
dec
insl
jmp
stos
push
push
ret
sub
stos
aam
xlat
push
out
and
jne
sti
pop
mov
call
adc
adc
jg
push
adc
add
push
sbb
xchg
sub
or
outsb
sub
lea
cmp
loopne
fnsave
mov
xchg
lods
and
pop
mov
or
xchg
shlb
adc
inc
mov
setne
mov
pslld
xor
mov
inc
into
in
sbb
mov
inc
out
jns
or
pop
xor
stos
sub
ret
call
xchg
data16
add
pop
repz
jns
stos
inc
out
adc
outsb
shl
mov
jmp
scas
cmp
or
inc
in
push
repnz
dec
jg
or
push
not
decl
mov
fld1
pop
hlt
lret
vpsubsb
mull
push
sub
das
jnp
adc
and
pop
xchg
sbb
add
adc
pop
fadds
imul
mov
lret
rorb
xchg
push
shll
push
push
and
pop
int
mov
add
fiaddl
js
push
pop
inc
jo
imul
jmp
sbb
dec
aas
lock
or
shll
loop
sub
gs
pushl
jns
sub
push
sub
nop
xchg
ret
push
inc
insb
mov
rcrl
dec
out
jb
imul
insb
fdivl
or
jns,pn
add
add
sti
xchg
xchg
xchg
jmp
cmc
fs
loopne
dec
outsl
int3
pop
cmp
sub
int
arpl
lock
mov
jl
cmpsb
lcall
fldl
sbb
mov
cmp
adc
xchg
imul
jecxz
dec
inc
mov
cmp
mov
xchg
jbe
inc
dec
push
aas
es
ss
push
movlhps
out
neg
iret
mov
xchg
jbe
inc
dec
push
aas
es
ss
push
movlhps
out
test
iret
mov
xchg
jbe
inc
dec
push
aas
es
aas
adc
loop
repnz
ret
mov
xchg
push
jg
nop
fdiv
inc
dec
and
cmpsl
dec
loopne
lock
dec
icebp
pop
xor
sub
popa
cli
jno
add
xor
loope
icebp
pop
subl
mov
push
ljmp
add
lcall
jmp
jb
add
fnstcw
stos
or
jge
data16
test
mov
aas
shlb
jbe
popa
stos
add
or
mov
jne
roll
cs
stos
aas
xchg
mov
cmc
and
les
add
and
into
xlat
add
stos
inc
adc
inc
push
jmp
ljmp
in
inc
and
pop
shrb
sub
pop
jle
nop
or
mov
lret
sbb
mov
xor
xchg
mov
adc
in
lret
inc
out
leave
xchg
lods
pusha
sub
scas
fcompp
and
sub
push
mov
xchg
leave
push
jp
sbb
sbb
mov
ret
and
lock
enter
icebp
pop
xchg
sub
mov
dec
push
jns
push
push
cmp
mov
test
test
repnz
notl
jg
pop
inc
test
adc
aad
pop
repz
sub
cmp
cmp
push
add
xor
add
jp
push
out
push
jmp
lea
cltd
ss
xchg
cmp
ljmp
add
xor
loope
icebp
pop
subl
mov
inc
ljmp
add
xor
pop
aaa
xorb
mov
pop
icebp
arpl
das
ret
bound
cmc
jae
mov
loopne
cmp
mov
loope
sub
popa
push
pop
or
push
fucomp
fwait
ljmp
mov
or
sbb
or
lret
faddl
jbe
push
ja
mov
pop
mov
scas
leave
inc
xchg
test
mov
dec
dec
pushf
mov
push
lret
mov
adc
test
lods
dec
mov
sbb
stos
add
pop
pop
outsb
rcrb
and
mov
push
push
lods
push
xchg
bound
cld
cmpsl
int
dec
xchg
and
mov
pop
pavgb
or
leave
rcl
sbb
sub
dec
jo
xchg
cltd
sbb
stc
data16
fcompl
js
push
mov
lret
mov
movsb
jmp
lea
dec
aad
mov
xchg
dec
dec
adcl
dec
mov
lcall
push
inc
mov
jmp
xchg
dec
jl
add
mov
in
mov
cli
pushf
xchg
subb
jbe
mov
fists
stc
pusha
dec
jge,pt
mov
insl
inc
or
mov
dec
cmp
dec
inc
mov
fists
int3
xchg
lock
inc
push
xchg
sbb
pop
arpl
repnz
clc
jg,pt
lods
aam
outsb
or
notb
repz
mov
jbe
push
push
cli
add
adc
fiadds
adcl
dec
cmpb
rolb
inc
mov
shll
es
jne
test
cmp
fimuls
push
and
enter
mov
fcomp
leave
jb
mov
decb
loope
xlat
cmpsl
subl
lahf
sub
sub
add
stos
gs
in
test
fistps
dec
jl
arpl
mov
inc
xor
decb
stos
cmp
sub
orb
mov
outsl
xor
adc
xlat
pushf
jecxz
popf
cmp
mov
cmp
lods
dec
aaa
ja
ror
fdivl
xor
clc
insb
pop
fistpl
push
dec
mov
xchg
lock
push
cwtl
insb
gs
xchg
pusha
lret
repz
ret
jno
mov
xchg
cmc
mov
loopne
pop
dec
cltd
imul
rolb
call
bnd
jle
mov
mov
jns
dec
cmpsl
and
jl
std
loop
lds
out
test
inc
cs
bound
sbb
sar
aaa
movsl
mov
and
jnp
daa
mov
sbb
dec
adc
lret
mov
sub
adc
stos
subl
xchg
fstps
pop
aas
enter
mov
ja
je
jnp
shl
push
int3
insl
dec
cmp
je
cmp
adc
sbb
inc
jae
rcll
add
imul
pop
cwtl
sbb
cmp
adc
imull
negb
jns
xchg
sarb
out
les
roll
dec
inc
xchg
sahf
or
out
iret
push
fimuls
cmpsl
mov
ficoms
dec
dec
addr16
sbbl
rolb
xor
or
loop
jmp
add
call
in
das
lea
jns
jle
sbb
into
sahf
xor
dec
fimuls
ror
out
hlt
repz
sub
imul
lea
dec
movsb
call
imul
test
fisubs
inc
push
imul
push
adc
xor
sub
les
scas
call
lods
inc
int
and
clc
mov
inc
bound
mov
stos
pop
nop
mov
sub
add
ss
fadd
jp
cltd
sbb
mov
lret
repz
push
testb
in
jo
mov
andl
std
mov
mov
xor
mov
mov
pusha
fwait
lods
or
pop
fwait
xchg
jecxz
xchg
aas
push
mov
pop
pop
or
mov
imul
rorl
fcompl
mulb
ror
js
pop
xor
ds
pop
xchg
clc
sub
xchg
cmp
insl
addr16
mov
cmp
aas
jne
and
mov
cltd
sbb
call
push
mov
mov
icebp
popf
cs
and
insb
js
sub
imulb
nop
and
sbbb
add
fadds
pop
pop
push
dec
sbb
mov
mov
jle
jecxz
ficompl
repnz
movsb
mov
mov
cld
jecxz
mov
outsb
in
adc
and
ja
ret
push
jge
push
mov
sub
dec
inc
and
loope
in
jge
mov
and
sbb
add
movsb
pusha
pop
gs
dec
push
dec
xor
mov
into
push
xor
test
loopne
push
das
das
jb
jg
rcrl
cltd
shr
jmp
add
loopne
stos
mov
clc
add
push
nop
addb
sbb
xchg
roll
test
jo
mull
adc
pop
clc
jo
sub
mov
cmpsl
cs
inc
in
pushf
jg
xor
fcmovbe
hlt
sub
sbb
lock
pop
push
enter
in
mov
push
sbb
xchg
or
ret
stos
mov
pop
roll
sub
push
aas
out
push
loopne
inc
jo
push
mov
or
pushf
mov
dec
dec
cmp
lock
pop
sar
out
in
mov
sbb
dec
scas
dec
jle
loop
push
sti
pop
xchg
fmul
jmp
mov
gs
xchg
jp
xor
lret
jae
stc
shl
pop
jnp
or
mov
enter
jmp
cmpsl
cmp
cmp
bound
add
add
ja
sbb
in
repnz
push
jae
add
mov
cli
aaa
push
iret
in
jb
jb
mov
lock
pop
stos
mov
add
daa
mov
bound
mov
insl
sbb
or
inc
dec
cwtl
cmp
add
pop
out
mov
cmpsb
leave
push
fisttpll
mov
xchg
clc
das
inc
sbb
pushf
hlt
xchg
inc
pop
loope
fdivs
outsb
push
and
push
jbe
mov
lret
das
push
faddl
push
inc
fistpll
add
and
dec
jae
lods
cvtdq2ps
jmp
mov
dec
jnp
out
adc
pop
cltd
and
es
jmp
jge
les
sub
or
mov
js
mov
pop
lods
mov
mov
push
mov
dec
roll
cmc
pushf
lods
out
fwait
pop
cmp
js
jg
jmp
mov
cwtl
fbld
add
xchg
ss
repz
sub
out
pop
jge
mov
mov
push
popf
bound
xchg
popf
fisttpll
inc
dec
mov
jbe
les
jp
cmp
mov
pop
js
mov
mov
ret
cmp
sub
dec
xchg
fidivrs
pop
popa
or
fadds
push
lock
faddl
or
push
das
rcrl
and
pop
inc
jp
inc
jno
push
mov
adc
add
mov
fs
pop
and
push
lcall
es
popf
scas
xor
dec
xchg
dec
or
adc
inc
test
inc
xchg
adcb
jb
shlb
in
cli
xchg
sub
or
xor
xchg
sbb
fwait
pusha
push
jbe
dec
lahf
fisubrs
ss
test
vcvtsi2ssl
test
mov
or
stos
shlb
aam
call
cltd
sub
add
jmp
js
mov
test
inc
mov
loop
add
in
mov
aam
test
std
sahf
std
sahf
fstl
and
jb
in
out
cmp
sub
cmp
jnp
mov
jb
adc
push
jle
xor
sbb
sbb
clc
and
cmpsl
jp
jg
xor
arpl
lods
dec
pop
mov
shrb
out
cmp
mov
stos
mov
add
test
fadds
xor
jne
ret
xor
dec
mov
out
xchg
or
jae
ja
jp
adc
push
mov
xor
repz
les
arpl
pop
adc
adc
rol
push
in
imul
rclb
cwtl
adc
frndint
push
cmpb
inc
loopne
push
dec
sub
push
fucomi
pop
and
xchg
mov
xor
out
xchg
out
ja
gs
lds
ds
pop
cmpsb
push
lods
out
movsl
int3
jle
adc
sub
lret
in
into
out
fiaddl
xchg
mov
dec
jmp
pop
cmp
rorl
dec
or
mov
out
xchg
fwait
inc
in
xor
rcrb
outsl
sbb
cvtpi2ps
test
sub
adc
in
outsb
subl
in
movsl
xor
xor
pop
data16
outsb
lds
lahf
out
mov
or
xchg
icebp
fisubrl
call
fisttpl
scas
sub
pop
jnp
into
iret
mov
sub
popa
addl
mov
aam
repz
cmp
add
hlt
push
ret
test
gs
cltd
xor
sbb
lahf
movsl
sub
aad
adc
or
dec
addb
xor
rol
mov
int3
push
fnstenv
pop
xchg
fdivr
mov
inc
stc
fs
int
cmp
or
push
xor
in
jbe
and
repnz
add
lahf
popa
sbb
and
or
sbb
jae
out
inc
jno
mov
sub
test
push
insb
mul
jno
adc
iret
repnz
mov
pop
and
insb
xor
xrelease
mov
dec
psubsb
push
stc
push
or
xchg
sub
xor
scas
adc
cmpsl
int
loop
mov
inc
sbb
in
mov
push
loopne
test
xchg
sbb
dec
stc
sbb
stos
jne
ret
xor
std
lock
jb
adc
xchg
or
mov
subb
push
arpl
ja
movsl
mov
cwtl
nop
andb
lock
and
push
in
testb
inc
or
cmp
xchg
repz
clc
mov
jge,pt
ljmp
movsb
mov
mov
test
jl
filds
movsb
mov
arpl
sub
jp
hlt
and
stos
jmp
or
jns
leave
sbb
push
add
mov
iret
sub
cld
test
or
inc
popfw
push
xor
in
dec
lods
fs
pop
test
dec
cmpsb
or
and
cmp
inc
fiaddl
setns
loopne
pop
sbb
ljmp
pop
outsl
lods
scas
lea
mov
pop
int
xchg
inc
xor
loope
aaa
fmuls
popa
insb
cltd
mov
loope
xchg
repz
cmp
adc
fdivr
dec
xchg
imulb
push
rcrl
rolb
outsl
add
or
fistpl
scas
out
add
mov
jl
and
frstor
jle
mov
gs
test
xor
push
xchg
into
push
add
rcl
xchg
loope
pop
sub
xor
fbstp
and
adc
jo
clc
sub
out
lahf
mov
xlat
push
pop
mov
pop
add
adc
xor
and
cwtl
fcmovu
gs
add
cltd
mov
cmc
rcrb
dec
out
lods
insb
xchg
orb
mov
xor
bound
dec
mov
and
inc
add
inc
xor
xchg
sbb
mov
mov
ss
xor
cmp
stc
adc
xchg
mov
cmp
adc
lcall
into
add
clc
hlt
loope
shlb
fimuls
sbb
movsl
mov
xor
pop
es
and
or
jmp
das
adcb
or
inc
xor
mov
add
sahf
jl
and
loop
xchg
mov
add
mov
jmp
xor
lcall
mov
inc
cmpsb
jbe
inc
sahf
lds
fisubrl
mov
inc
sbb
fdivl
and
mov
lret
jnp
loopne
pop
test
push
inc
mov
dec
int3
xchg
jmp
cld
push
ret
mov
mov
jae
inc
repnz
ljmp
sbb
jmp
loope,pn
lock
cmp
sub
and
clc
filds
dec
insl
inc
or
push
in
imul
push
loopne
lcall
cmc
lret
xchg
push
fcompl
sahf
jmp
pusha
inc
xor
xchg
rcrl
in
movsl
lock
pushf
ficoms
mov
jae
subl
ret
fs
mov
adc
ja
pop
mov
daa
lods
ror
lods
cmp
inc
es
jae
push
imul
movsb
mov
adc
fistps
adcl
fsubr
sbb
dec
sub
fnstcw
add
movsl
cwtl
addr16
jg
bswap
adc
or
push
mov
xor
cltd
enter
jb
imul
sbb
out
lret
dec
xor
fcmovbe
push
mov
je
inc
cmp
jne
and
push
push
xchg
inc
nop
or
push
scas
loop
jmp
loope
xor
jecxz
pop
xchg
xchg
call
pop
jns
mov
push
mov
and
aaa
aam
mov
xchg
sub
xor
mov
mull
or
cmpsb
push
ss
insl
scas
or
mov
dec
xor
or
jle
addr16
mov
js
xchg
adc
push
inc
add
cmpl
sub
cmp
pop
psrlw
out
or
sub
enter
dec
mov
mov
cmp
cmp
sbb
stos
in
stos
outsb
cmp
aad
mov
aad
mov
dec
jne
mov
es
daa
adc
and
jae
rcr
adcb
ljmp
in
bound
pop
mov
mov
fs
fimuls
inc
movhps
sbb
adc
jo
mov
jg
dec
clc
mov
push
inc
and
ret
std
call
sbb
imul
xchg
cwtl
mov
lret
jecxz
and
ficomps
mov
jnp
ret
cmpsb
cmpsb
leave
icebp
add
jbe
ss
xchg
jl
popf
sbb
xchg
push
sbb
stc
insl
cmp
xchg
lret
push
fmul
xor
jae
fcomps
or
pop
rsqrtps
dec
jo
aas
nop
lret
sub
cli
cwtl
jle
aam
insb
in
cmp
stos
into
loop
push
rolb
popa
ja
andl
fiaddl
test
mov
xorb
push
in
test
or
int3
xor
jp
xor
sahf
jle
in
fbstp
xlat
adc
mov
mov
push
sub
xor
sbb
mov
cmpsb
and
adc
popa
rcrl
loop
jnp
das
jp
data16
lods
push
pop
repnz
pusha
push
scas
ret
inc
pop
fimull
sub
dec
daa
jb
mov
loope
sbb
pop
hlt
ret
shl
cwtl
and
push
push
into
roll
ffree
out
arpl
in
xor
push
cmp
cs
xchg
fbstp
decl
push
fnstcw
fwait
pop
push
iret
push
lods
sub
mov
cmc
add
fiadds
add
in
cmp
loope
shll
sbb
jo
ret
or
addr16
popa
mov
mov
insb
mov
cmpsb
xor
call
test
out
push
and
mov
xor
stos
lahf
push
mov
cmpb
pop
out
ljmp
aaa
sbb
sarl
ds
std
mov
xchg
xchg
ljmp
hlt
push
inc
sbb
or
xor
je
rorl
sub
xchg
sub
jnp
push
add
sbb
or
shll
pop
addl
or
aaa
jmp
add
neg
cmpsl
dec
insb
push
repnz
clc
mov
sub
mov
test
mov
inc
push
bound
and
adc
dec
movsl
and
das
xchg
push
orb
test
pop
fs
inc
xor
mov
cmpsl
std
sub
adc
xor
nop
sub
in
cmp
push
sub
xor
or
test
cmp
and
aaa
vpsrlq
rcrb
stos
jecxz
lods
in
sbb
dec
inc
loope
fs
lcall
mov
sub
lds
dec
jno
fistl
or
mov
arpl
dec
lret
in
pop
rcrb
jo
icebp
rorb
imul
jae
cli
fs
fidivl
in
xchg
cmpl
test
std
out
pop
out
in
push
push
jmp
push
cmpsb
hlt
xchg
xchg
icebp
call
push
mov
out
cmc
aad
mov
mov
les
dec
mov
push
sarb
clc
mov
mov
movsl
mov
out
popl
push
outsl
shll
int
shll
bound
inc
cmp
or
lahf
push
sub
fwait
js
mov
xor
xor
clc
int3
xchg
inc
mov
adc
out
adc
leave
add
adc
insb
es
add
inc
jno
push
enter
outsl
dec
jno
jae
fwait
push
mov
pop
aam
add
lahf
fcomps
fcomps
push
push
mov
xchg
scas
lahf
xchg
xchg
jo,pn
push
nop
subb
adc
add
sub
pusha
mov
rorb
push
scas
mov
pop
jbe
cwtl
sub
sub
push
insb
add
stos
add
or
mov
sbb
jbe
or
inc
in
mov
and
inc
test
rcll
mov
jg
mov
adc
cmp
and
xchg
in
xchg
sbb
jge
push
inc
call
loop
mov
call
pop
and
cmp
sub
xor
add
xchg
adc
sbb
mov
fimull
or
inc
enter
xor
bound
push
push
jp
pop
cmp
into
pushf
jmp
sub
adc
add
mov
inc
jae
mov
add
negb
sbb
out
fistps
push
les
push
mov
fstl
dec
or
xchg
push
cmp
ror
popa
adc
arpl
jae
xchg
cmpb
sahf
fsts
add
xor
jecxz
int3
mov
add
add
stos
int
fwait
push
push
cmp
out
fisttpll
xor
out
lods
popa
jle
out
nop
inc
repnz
fiaddl
pusha
insl
jmp
fwait
jecxz
pop
mov
push
mov
in
fcomi
xchg
jnp
movsb
push
jge
shrl
add
pop
fstps
cwtl
mov
fdivs
test
and
insl
fucomip
fldenv
and
pop
mov
fs
adc
test
xchg
daa
cs
nop
mov
lock
mov
or
lds
adc
inc
into
adc
cmpsl
mov
lret
push
add
cmp
pop
sub
ret
aad
xchg
arpl
cmp
jb
jno
jb
mov
jns
daa
push
inc
or
mov
call
dec
pop
pop
pop
out
pop
imul
and
cwtl
int
addb
xor
loopne
ds
cmpsb
test
inc
jmp
rclb
lret
sbb
mov
dec
sub
or
sbb
aam
stos
icebp
jbe
sbb
xchg
sbbl
sub
loope
shlb
das
xor
lods
hlt
int
negb
adc
stos
imul
and
fmull
imul
aam
movsb
shll
pop
xor
lahf
dec
aam
jns
mov
test
push
js
mov
jo
popa
mov
bound
imul
pop
and
cmpsb
in
mov
fisubl
pop
add
cltd
mov
mov
sub
shr
pop
pop
mov
mov
xor
sub
inc
mov
dec
push
cltd
cs
outsb
and
cmp
int3
xchg
outsb
loopne
daa
push
leave
fcoml
shlb
jno
iret
out
sbb
fs
cmc
pushf
and
ret
push
mov
dec
out
lds
pop
pop
inc
add
shrb
xchg
fidivl
mov
mov
and
test
jae
pop
mov
pop
outsl
outsb
jmp
inc
aam
sub
out
xchg
jb
sbb
mov
lods
je
shrl
out
jmp
mov
shll
mov
cli
jo
leave
mov
xor
adc
pop
dec
inc
test
xchg
mov
fnstsw
and
or
les
push
or
enter
rcll
pusha
push
call
ds
js
test
pop
lcall
shl
sub
test
adc
jp
dec
icebp
pop
subl
mov
inc
ljmp
add
xor
loope
icebp
pop
subl
mov
inc
ljmp
add
xor
loope
icebp
pop
subl
mov
inc
jmp
popa
lret
add
xor
mov
sahf
loopne
icebp
sbb
mov
fidivrl
lret
jbe
cltd
ret
into
loop
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
subl
mov
popa
mov
sbb
and
xor
inc
lods
push
mov
in
nop
jge
dec
mov
shrb
gs
adc
inc
int
fldl
rcll
lea
cmp
jge
dec
push
cmp
fs
xor
dec
mov
and
xor
sub
out
push
fdivl
and
sarb
cmp
and
add
push
je
insb
ds
cmc
and
xor
mov
negb
int3
mov
pusha
lea
jo
daa
cmpsb
pop
or
ret
dec
push
mov
xor
test
dec
and
inc
gs
or
mov
cmp
lock
adc
add
push
inc
popa
xchg
jg
popf
sub
cmp
pop
mov
addr16
and
xchg
mov
xor
add
lea
call
dec
sbb
pop
add
adc
test
lods
add
pusha
lea
fldt
jge
dec
mov
and
test
loopne
push
sbb
push
int
fisttpll
lods
pop
mov
jmp
dec
enter
mov
dec
add
test
or
adc
sbb
sub
pop
test
movsl
jns
cmpsb
inc
test
sahf
dec
mov
or
xor
in
sub
xor
xchg
add
cmp
add
adc
and
xor
inc
lods
push
mov
subb
mov
sub
lock
and
xor
inc
lods
push
mov
subb
bound
scas
mov
pop
or
out
scas
mov
mov
lret
fwait
nop
in
mov
jae
jle
hlt
jne
fwait
loopne
call
cmp
cmp
cmp
lret
xchg
dec
push
jmp
call
xchg
call
popa
push
and
dec
sarb
lahf
sub
pop
push
roll
mov
int
push
int3
into
imull
sbb
movsb
jp
pushf
xor
xor
pop
mov
fcmovnu
andl
rcrl
pop
sbb
in
ret
popa
ss
insb
mov
outsl
cltd
cmpsl
dec
sub
test
adc
imul
repz
pcmpgtd
test
push
lahf
sub
xchg
xchg
stos
movsl
dec
lods
mov
divl
repnz
stc
mov
sahf
cld
or
xor
rclb
out
jno
hlt
mov
popa
push
sub
cld
mov
cwtl
push
jp
mulps
inc
or
out
and
lcall
sti
es
int3
lock
cmp
push
or
faddl
nop
imul
inc
lock
loopne
sahf
xabort
pop
pop
push
shrb
add
adc
mov
sbb
les
cmp
add
sbb
sbb
mov
and
pop
sub
add
mov
mov
cmp
mov
mov
adcb
lock
icebp
xor
std
imul
adc
lods
outsb
adc
jbe
or
mov
ds
test
mov
xor
dec
and
pop
movsb
or
cmpsl
fsts
mov
mov
mov
mov
incb
push
xchg
add
cmc
xor
mov
sbb
es
rcr
enter
pop
rclb
fldl
mov
mov
jno
pop
pusha
cmc
or
cmp
mov
aad
cltd
mov
lret
testl
cmp
stos
add
aas
pop
cmpsl
divl
add
lcall
fistpll
add
movsb
hlt
cs
sbb
or
test
stos
cmp
bound
push
jne
adc
push
lahf
mov
loop
ja
jbe
jle
xchg
aam
cmp
into
pop
fucomi
xchg
std
data16
nop
mov
push
divl
cmp
push
mov
dec
adc
and
xchg
je
clc
pop
test
cmp
enter
loop
sti
dec
ficoms
mov
out
dec
cltd
out
lahf
fisttpll
bound
pop
sbb
subl
sarl
rcrb
arpl
test
ret
movsl
mov
fiaddl
push
sbb
out
movsl
fidivrs
loope
dec
ret
insl
inc
iret
es
push
inc
aaa
jmp
mov
mov
sbb
push
jg
dec
xor
or
or
outsl
inc
js
inc
pop
ja
add
or
mov
addr16
cmpsl
mov
mov
jecxz
xchg
lahf
xor
rcl
jae
sub
inc
add
aad
add
pop
test
mov
xor
enter
fdivr
xchg
adc
sub
fwait
pop
in
je
in
gs
cltd
shl
fdivrl
and
out
xchg
xchg
arpl
les
je
dec
fwait
cmc
mov
mov
js
xlat
in
into
adc
ret
nop
mov
in
push
xor
add
cmpsl
adc
sbb
pushf
out
mov
xchg
push
aam
and
int3
scas
add
scas
fsubrl
and
shl
adc
push
loopne
or
lahf
inc
sahf
and
push
xchg
lcall
cs
inc
push
scas
lret
bound
jns
mov
xchg
stc
push
inc
ror
les
arpl
mov
hlt
roll
push
push
jb
sub
add
add
pop
mov
mov
lods
je
jnp
notb
jg
mov
push
hlt
mov
xchg
in
rolb
xchg
cmpsl
cmp
pop
ds
pop
out
sbb
cmpb
xor
inc
xor
xor
mov
cld
mov
mov
int3
pop
in
sub
jl
mov
test
mov
mov
call
push
dec
and
outsl
ja
add
xlat
lahf
sub
mov
clc
pop
pop
ljmp
sub
ja
test
mov
mov
push
pop
in
or
push
jo
sbb
pusha
sbb
mov
int3
push
add
xchg
push
jecxz
inc
aas
dec
cld
mov
cmp
loope
xchg
or
nop
mov
mov
call
cmp
push
and
sbb
popa
sbb
stos
repz
xchg
popa
adc
popf
scas
cmpsl
insl
jne
and
add
mov
repz
mov
jns
add
pop
aad
int3
cli
les
les
push
or
jne
in
pop
add
cwtl
aaa
mov
aaa
int
sbb
sub
bound
xor
lret
pusha
dec
flds
xlat
dec
adc
push
lods
mov
es
stos
movsl
fcomps
mov
sub
addr16
out
outsb
xlat
cltd
inc
ljmp
fwait
out
bound
test
mov
xor
push
dec
testb
incl
xor
je
lods
add
push
test
add
call
inc
fdiv
adc
call
jl
dec
sbb
fnstenv
cwtl
mov
fldcw
adcb
jno
call
pop
aas
testl
ds
inc
lods
jg
xchg
movsb
lcall
xchg
lds
pop
cwtl
aam
inc
adc
cmp
inc
push
and
divb
in
add
leave
jae
pop
mov
fisubrl
out
mov
dec
jb
stos
movsb
mov
cmp
gs
add
aad
jno
pushf
add
and
loope
mov
pushf
test
test
add
aad
imulb
out
mov
push
dec
notl
fcmovnu
mov
sbb
cmpsb
ss
fisubs
push
fsub
scas
rcll
setnp
pusha
popa
xor
stos
mov
popa
adc
inc
cmp
popf
mov
push
loopne
ret
and
clc
call
aad
mov
nop
mov
push
sub
adc
xor
xor
push
and
sub
push
xor
mov
jae
pop
dec
mov
sahf
aaa
call
leave
cmp
in
subl
arpl
mov
pop
cmpsl
mov
inc
pop
add
cmp
rol
mov
cmpsl
test
xchg
inc
inc
inc
ret
cmp
rcrl
dec
stc
sbb
lcall
pusha
clc
jg
sti
insb
sbb
lods
jmp
aaa
pop
orl
bound
loop
mov
xor
jbe
sarl
jmp
popf
lret
sub
test
out
shll
inc
test
pop
mov
das
out
jb
push
xchg
cmp
inc
cs
cltd
scas
lcall
lcall
rorb
scas
mov
repnz
fidivrl
push
mov
sbb
xchg
aad
mov
loop
mov
xchg
jmp
jne
das
jp
mov
mov
or
loop
roll
sbb
out
cli
pop
mov
mov
xchg
mov
pop
dec
ss
das
sub
jns
clc
cmc
mov
xor
jmp
or
mov
fdivl
mov
xor
or
mov
mov
aad
xor
adc
jg
ror
push
inc
jg
mov
inc
xor
xor
inc
add
cmpb
aas
pop
test
push
push
inc
jns
cmc
push
cli
les
xorl
or
mov
sahf
xor
repz
jns
cmp
push
xchg
lds
push
push
popf
ss
ljmp
sbb
push
jo
mov
inc
cmpsl
out
xchg
stos
fcoml
fmuls
hlt
xorb
xor
loope
faddl
test
test
pop
add
hlt
data16
popf
adc
pop
or
movsl
mov
push
les
sbb
mov
mov
cmpsl
or
mov
push
push
ficomps
mov
xchg
sbb
idivl
mov
cmp
xor
aam
adc
sub
sbb
ret
bound
sbb
sub
dec
xchg
outsl
test
pop
aaa
jle
mov
pop
daa
out
imul
jns
int
out
jbe
mov
mov
pop
js
cld
int
hlt
mov
data16
or
and
cmp
icebp
aad
imul
daa
pusha
imul
shrl
sub
jl
int
cmp
pop
ds
clc
xor
scas
push
cld
mov
and
xor
cmp
push
inc
mov
cmp
out
inc
mov
mov
or
dec
cwtl
fwait
lock
sbb
out
ljmp
mov
cmpsb
xchg
cmp
dec
push
mov
dec
in
lret
in
popf
inc
mov
sahf
aas
mov
data16
sar
pop
push
sti
adcb
popf
lret
in
mov
sti
push
loopne
int
pop
imul
insb
in
popf
mov
fidivrs
stos
gs
or
repz
lret
addb
cmp
jmp
jmp
js
sahf
adc
pop
mov
shr
and
mov
sarl
divb
nop
enter
sbb
mov
sub
test
sub
mov
inc
stos
lahf
loope
cmp
lahf
dec
sbb
cld
jno
push
icebp
rcr
adc
jno
call
mov
fwait
js
mov
mov
repz
jbe
inc
sub
jae
test
dec
xor
jbe
aam
jb
enter
int3
xor
scas
sub
xor
out
cmp
lea
xchg
jns
pop
jo
ror
icebp
push
or
std
push
sub
lret
mov
test
rol
enter
cmpsb
mov
call
or
and
mov
and
mov
dec
xchg
fstl
adc
into
mov
shlb
pop
inc
test
imul
std
sahf
outsb
inc
jne
insl
in
push
pop
mov
and
mov
adc
inc
imul
in
cmc
je
push
lds
mov
mov
daa
push
mov
daa
sub
mov
mov
sbb
lods
cmp
and
or
loope
popa
xchg
inc
stos
lahf
mov
in
les
xchg
pop
outsl
mov
nop
mov
stc
sbb
insb
sub
dec
sub
testl
add
jl
loope
lds
sbb
mov
cltd
imul
into
cld
push
push
sti
test
std
repz
sbb
orb
ss
mov
add
push
out
lds
mov
mov
sbb
xchg
mov
xor
jmp
std
sahf
push
imul
test
push
ret
xchg
mov
aaa
sub
jp
adc
xor
sbb
lret
addr16
inc
icebp
faddl
pop
mov
test
ljmp
pushf
enter
fwait
jp
popa
or
xor
xchg
out
test
in
fcomps
in
insl
mov
mov
cmp
ja
mov
sahf
jb
inc
pop
loop
insl
imul
mov
pushf
ss
ljmp
cmp
out
and
in
sahf
pop
insb
sti
xchg
mov
arpl
lcall
mov
push
dec
out
cld
jbe
xor
pop
mov
mov
dec
orl
popa
cmc
lcall
daa
fistps
into
stos
rorb
aam
adc
mov
int3
and
mov
sti
mul
das
sarl
inc
frstor
jg
cld
leave
cmp
ljmp
xor
cmp
fs
cmp
int3
jl
scas
sar
js
neg
dec
add
sbb
insl
lods
xor
pop
mov
movb
xchg
roll
or
jge
pop
stc
movsl
sub
lock
loope
fldcw
dec
stos
xor
dec
mov
sub
pop
sbbl
fcompp
nop
jecxz
inc
sbb
out
push
mov
scas
jp
in
iret
cmc
out
popa
and
or
inc
add
lcall
cwtl
xor
in
lahf
lods
imul
sbb
leave
inc
fisttpl
inc
pop
fiaddl
ss
out
inc
push
fidivl
imul
imul
repnz
pop
cmp
and
cmovl
mov
arpl
and
mov
adc
sbb
icebp
fiaddl
xchg
dec
aas
pop
adc
inc
cmpb
xor
sbb
ss
popf
mov
or
xchg
call
inc
imulb
mov
les
jl
icebp
into
subb
cltd
iret
cwtl
xchg
sbb
fldl
fsubr
sub
inc
sub
push
rolb
jno
sub
xor
std
adc
dec
mov
out
dec
pop
xor
and
push
or
loop
jge
arpl
es
mov
mov
cmp
popf
sub
sbb
ret
mov
out
pop
push
cmp
sbb
add
insb
mov
add
or
lret
cmp
push
ljmp
xchg
cmp
lods
xor
pop
adc
dec
sub
insb
add
pop
mov
jo
fsubrs
call
cmp
or
iret
dec
mov
xor
xor
pop
mov
ret
pushf
in
lds
adc
mov
and
pop
lret
scas
add
dec
sbb
cmp
xchg
pop
ljmp
pusha
stos
cmp
adc
and
mov
loop
mov
int
adc
loopne
aam
inc
or
mov
ficompl
xor
lds
loopne
mov
and
jne
lea
arpl
mov
push
cmp
jl
push
mov
in
add
nop
rcrb
inc
lcall
ret
mov
xchg
jecxz
loop
xchg
out
jbe
test
pop
loopne,pt
mov
xor
pusha
mov
add
and
loopne
imul
adc
inc
testb
enter
cmpsl
sub
add
movsl
ds
jp
bound
fldlg2
fsts
push
sar
dec
mov
fsubrl
ja
sarl
xor
ror
adc
add
add
test
loopne
pop
mov
add
mov
push
mov
xor
pushf
fistpl
aas
dec
in
inc
cmp
add
jb
call
cmp
pop
cwtl
cmp
cli
sahf
das
frstor
mov
movsb
jg
cld
loop
out
pop
dec
mov
pop
add
jmp
xchg
je
pusha
ret
test
rorl
dec
cmp
push
xchg
fdivs
movsb
cmc
lret
and
int3
sub
xchg
stos
popa
adc
sub
sub
or
sub
adc
test
daa
ds
mov
rcrl
sbb
inc
xchg
popf
cs
and
cmc
jecxz
std
xor
push
in
jmp
idivb
aas
out
xlat
testb
adc
lock
icebp
xchg
sub
mov
push
mov
xchg
mov
dec
test
and
aaa
and
jns,pt
jno
and
cmp
mov
cmpl
sbb
xchg
stc
pop
push
mov
jle
aaa
mov
enter
dec
lds
inc
rolb
pushf
orps
adc
sbb
sbb
xor
adc
fmulp
push
mov
arpl
sub
add
add
rcll
xor
push
jae
xchg
in
jo
jb
xchg
push
fwait
scas
adc
pop
mov
mov
mov
movsl
je
sbb
insl
cmp
mov
xchg
push
iret
rcrl
call
sbb
fs
jo
adc
leave
jp
scas
test
loope
add
add
fcoml
rcll
push
bound
cmpsl
or
mov
inc
shll
nop
jns
out
cmp
bound
sbb
ss
inc
or
or
add
mov
loopne
xor
jb
adc
fsubr
aam
adc
lock
enter
test
mov
pop
pop
jno
add
sbb
jno
adc
pop
stos
dec
lods
sub
stos
lea
test
adc
fistpll
imul
fmuls
cmp
jno
sbb
pop
rorl
icebp
xchg
dec
stc
nop
and
push
or
xor
insl
test
cmp
aas
inc
into
loope
ret
mov
cmp
adc
jle
ja
sub
scas
mov
ljmp
aaa
mov
dec
cld
push
sub
rorb
mov
push
mov
or
xchg
and
add
push
mov
rorb
test
out
push
stos
add
nop
dec
fbstp
shr
std
pop
outsl
mov
ret
jbe
sti
xor
loope
stc
addb
pop
std
ja
mov
ljmp
xchg
in
clc
sarb
mov
fcmovnbe
sti
jo
fs
fistps
adc
lds
lods
pop
push
repz
bound
mov
test
repnz
push
and
push
xchg
and
ss
aas
fbstp
inc
mov
push
push
test
cmp
mov
jp
pop
xchg
sbb
and
inc
mov
dec
adcb
cmp
sbb
lock
inc
and
mov
dec
xlat
mov
add
shrb
jns
jbe
jne
sahf
mov
lcall
dec
scas
push
cmpsl
jns
or
js
inc
data16
fstps
js
push
stos
adc
cs
fcmovnu
loope
arpl
xor
out
sub
push
insl
dec
mov
adc
push
sub
fimuls
sbb
lea
mov
rcr
imul
mov
imull
cmp
cld
addb
sub
pop
insb
mov
jno
xchg
pop
xor
xchg
inc
adc
sub
loopne
jb
in
add
mov
sub
cmp
sub
jp
imul
pop
aad
arpl
lret
ljmp
shr
mov
pop
cli
push
fadds
push
push
mov
mov
push
mov
testb
fildl
inc
inc
popf
sar
ret
jmp
scas
je
xchg
fstpl
lds
ja
jno
ja
mov
lcall
rclb
lods
sarb
pop
xchg
push
xor
sahf
popf
push
lret
xchg
cld
adc
pushf
sar
inc
cwtl
fdivr
mov
mov
punpckhdq
inc
push
mov
lds
push
addb
push
cmp
jbe
mov
mov
mov
cmp
jo
daa
outsb
insb
bound
bound
cmp
xchg
inc
mov
mov
jg
adc
clc
inc
out
cmp
fldl
ja
jg
sahf
das
push
pop
pushf
xor
mov
je
add
aaa
aas
scas
xor
test
insl
and
shlb
cmp
mov
addr16
cmpsb
pop
push
mov
push
in
ds
jns
mov
jmp
sub
jnp
or
jecxz
enter
ret
test
cmpsb
mov
out
stos
mov
test
mov
mov
mov
jp
in
bnd
sub
sub
cli
fstpt
jno
js
mov
lods
and
incl
cli
repz
adc
adc
das
rcl
and
or
push
fnstsw
pop
xor
decl
or
pop
push
and
addr16
int
push
xchg
cmpsl
dec
cli
push
lods
hlt
addr16
or
out
sbb
sahf
sub
cli
cmp
or
in
clc
pushf
mov
jp
and
popa
jno
pusha
add
icebp
pop
mov
aam
jb
push
ljmp
mov
dec
imull
popf
fdivl
ja
in
test
gs
push
inc
test
push
movb
jns
dec
sbb
xchg
pop
repz
fcompl
aas
jnp
cltd
lcall
and
lret
push
add
out
mov
in
pop
sahf
mov
push
adc
pop
pushf
pop
stos
jbe
inc
push
lods
inc
pusha
addr16
out
mov
aas
mov
cmp
fs
out
out
push
inc
lret
mov
jmp
and
mov
lcall
add
ds
movsb
and
rclb
setg
dec
jle
mov
add
repz
dec
lret
push
iret
pop
test
std
cmp
mov
pop
ss
sbb
mov
fucomi
or
pop
xchg
push
hlt
dec
out
jno
sbb
outsb
inc
lock
ret
sub
insl
mov
jg
ja
mov
and
jmp
aaa
sbb
shl
lods
pop
mov
or
mov
dec
outsl
idivl
sbb
sub
fxch
mov
loopne
loope
cmp
pusha
cmc
mov
mov
or
push
jo
or
dec
mov
shrb
sbb
and
xor
inc
lods
push
mov
subb
mov
sub
lock
and
xor
inc
lods
push
mov
subb
rorb
push
sub
xor
ror
xor
inc
lods
inc
mov
xchg
insl
int3
jge
dec
nop
pop
shrb
sbb
mov
xor
lahf
jb
bound
cmc
nop
in
roll
and
inc
add
gs
adc
push
and
xor
in
xchg
lock
mov
movsl
and
inc
je
adc
adc
push
and
xor
in
xchg
lock
mov
movsl
and
sbb
ds
popa
push
push
ds
repz
loop
mov
mov
inc
loop
ljmp
adc
int
adc
sub
or
jne
sbb
jp
mov
push
and
lahf
aad
mov
scas
fstps
cmp
dec
add
mov
mov
and
xchg
pop
mov
rclb
and
sub
icebp
loopne
loopne
ds
mov
push
lea
sbb
lret
push
add
dec
les
ljmp
jp
dec
shl
xor
int3
inc
adc
jb
mov
push
mov
sbb
xchg
jle
and
pop
push
clc
jno
gs
ljmp
aad
lds
xchg
lock
mov
movsl
and
inc
add
gs
adc
push
arpl
mov
cmc
mov
movsl
rclb
sub
sbb
js
jl
mov
inc
mov
cmc
cmc
mov
lock
stos
rcr
movsl
inc
adc
sub
push
or
inc
push
dec
leave
test
mov
adcl
movsl
and
inc
add
gs
adc
push
and
xor
in
xchg
lock
mov
movsl
and
inc
add
gs
adc
push
and
cmp
mov
cmp
jnp
fcomi
and
lock
dec
xor
cmp
mov
inc
insb
mov
jge
sbb
decl
or
dec
or
push
sub
sub
mov
pop
pop
rcll
lret
imul
or
and
pop
sahf
push
popa
fisttpll
mov
push
test
xor
repnz
cmpsl
dec
lods
push
jp
imul
adc
jno
adc
or
frstor
mov
xchg
cmp
sub
lds
xchg
mov
maxps
mov
xor
cmp
ss
into
mov
iret
mov
mov
pop
lahf
sub
into
inc
inc
insb
jecxz
movsb
dec
out
in
mov
sub
les
mov
xchg
in
xchg
inc
cwtl
dec
mov
jg
mov
sti
shlb
adc
push
out
pop
jp
mov
outsl
ret
pop
push
js
fmull
jb
fistpll
push
fcoms
or
std
push
push
cli
or
dec
jmp
push
in
mov
pop
fsubrl
pop
inc
in
or
dec
test
negb
push
cs
jno
icebp
movsb
xchg
ret
or
mov
xchg
jno
imul
push
inc
cmc
pop
popa
xchg
jg
cmp
xor
lea
sub
push
dec
int
sbb
outsl
mov
scas
hlt
xchg
js
pop
fisttpl
pop
outsl
sbb
push
push
sub
cmp
lahf
push
xor
faddl
jns
cmpsl
popa
mov
mov
shll
add
mov
add
jg
adc
dec
je
sub
fnstsw
insb
jmp
adc
push
sbb
divb
sbb
xor
sarl
sbb
cmpsl
mov
push
mov
loopne
push
dec
mov
jb
push
sub
cmp
repz
cmpsb
insb
add
sub
fadd
insb
xor
or
cs
fisttps
test
cs
imul
pop
je
es
dec
pop
mul
inc
or
xchg
mov
adc
loopne
pop
push
mov
dec
sub
add
cmpsb
sbb
add
ret
xchg
lods
pop
mov
sub
push
in
push
stc
mov
xchg
aad
xchg
ficompl
dec
ror
nop
push
cmp
add
push
mov
xchg
sbb
aam
push
push
shl
ljmp
xchg
jmp
inc
outsl
jne
or
jge
mov
lea
ficompl
in
imul
loope
icebp
jnp
sbb
pushf
sahf
push
lods
lods
inc
movsl
add
shlb
outsl
fsubs
inc
pushf
aas
iret
sub
adc
cmp
and
mov
sbb
movups
stc
cmpsb
mov
popa
pop
push
or
push
into
loopne
call
ljmp
aas
or
lea
ja
mov
sub
std
mov
or
jne
jnp
or
pushl
ret
xor
or
mov
loopne
mov
mov
and
out
in
aaa
push
xor
xchg
sbb
sbb
inc
jg
sti
movsb
dec
ret
sahf
aad
cs
add
mov
mov
pop
fs
inc
inc
add
pop
aas
lahf
mov
sub
cmp
adc
divl
rol
rclb
and
jnp
fs
shl
push
std
shll
sbb
adcb
mov
clc
and
jp
pop
jl
xor
test
in
adc
xor
mov
cmp
icebp
sbb
sub
and
iret
xor
test
fsubs
mull
stc
sub
clc
testl
adc
aam
mov
insb
ret
add
cmp
adc
jmp
jns
cld
and
add
mov
push
jle
jecxz
pop
insl
lods
mov
mov
ror
outsl
stc
aad
shr
mov
and
nop
xchg
or
cmp
fiaddl
jle
and
xlat
mov
int3
or
and
inc
push
sbb
adc
lea
cs
add
push
mov
out
jecxz
movsb
stos
mov
mov
xchg
lret
leave
xor
cmpsb
mov
jmp
mov
les
mov
cs
cmp
sbb
ja
sub
jmp
data16
pop
addl
cwtl
cmp
xchg
or
add
ja
xchg
pusha
sub
lret
add
inc
cli
in
jnp
pop
outsl
jno
rcll
mov
adc
mov
dec
pop
outsb
aas
fidivrs
and
push
cltd
mov
mov
cmpsb
jno
mov
movsb
movsl
ss
jmp
jge
cmp
stos
and
cmc
push
mov
rcr
cltd
popa
pop
lret
push
fildl
mov
inc
addr16
push
pop
jne
das
jb
int
jae
cmpsb
dec
mov
test
aaa
xchg
repz
inc
add
pop
add
lret
addr16
and
dec
sbbl
scas
dec
mov
adc
xorb
push
movsl
ficoms
loope
mov
roll
xchg
sbb
test
int3
mov
jbe
int3
or
sahf
pop
xor
mov
mov
inc
push
pop
movntq
cwtl
cmp
jae
sub
mov
pop
aaa
dec
and
fldcw
xor
inc
repnz
loop
cmp
push
stos
xor
adcb
lods
mov
lret
cmp
push
mov
mov
push
adc
jl
push
std
clc
dec
aad
in
repz
xchg
mov
lods
les
push
pop
outsl
lds
stos
inc
jnp
xchg
dec
lods
sbb
pop
mov
jmp
cwtl
hlt
outsl
ds
ljmp
sub
daa
sbb
dec
cmp
outsl
mov
jb
xor
jns
mov
dec
sti
scas
loopne
pop
xchg
rorb
sti
fs
mov
pop
push
ja
ljmp
addr16
test
adc
inc
adc
push
xchg
test
jg
out
rcr
inc
int3
test
mov
mov
popf
add
lcall
mov
cwtl
iret
enter
cmp
push
mov
fists
callw
jmp
jo
push
lds
jp
pop
fs
es
out
jae
mov
fimull
sub
jno
and
mov
clc
lcall
adc
fwait
addr16
imul
ds
sbb
inc
adc
mov
shl
jmp
das
dec
pop
jle
mov
jo
arpl
imul
jns
inc
xchg
pop
sub
in
push
repnz
push
dec
cli
cld
xchg
je
add
add
push
test
aas
stc
daa
outsl
jne
push
lcall
mov
and
sub
jb
arpl
cld
sti
pop
fmuls
push
imul
jns
repz
scas
dec
cwtl
sub
pop
mov
mov
add
or
adc
imul
mov
sbb
push
jns
add
pop
mov
loopne
sbb
mov
mov
mov
movsb
cmpb
add
xor
pop
das
cmp
outsl
jb
adc
cli
lret
dec
dec
sub
scas
adc
out
test
nop
inc
inc
or
inc
aam
xchg
in
mov
ret
xchg
lret
int
pop
mov
lcall
jne
mov
shr
mov
xchg
stos
loope
push
shll
mov
fidivl
sub
jmp
and
sbb
aad
andl
enter
das
in
jnp
shlb
or
mov
jecxz
mov
test
fwait
enter
and
data16
rorb
xor
data16
cmpsb
or
pop
insl
in
lods
mov
xchg
pop
sbb
lea
mov
mov
mov
push
and
mov
popf
fsub
xchg
sub
jle
mov
stc
pop
cmp
aas
push
xor
inc
lret
mov
jmp
das
push
fidivrs
stc
ret
pop
fcomi
in
daa
hlt
mov
sub
jle
cmc
test
inc
movsl
lret
or
sti
push
ret
xor
sbb
inc
jle
in
sub
loope
mov
adc
xchg
pop
test
xchg
or
ret
in
mov
in
or
cltd
cmpsl
adc
loope
or
adc
fnstsw
sbb
out
jge
lret
jb
jae
pop
sub
repz
leave
inc
inc
ret
or
repz
and
or
xchg
push
cmp
outsl
add
jae
pushf
xchg
mov
lahf
addr16
insl
stc
fisttps
fidivs
pop
lret
cmp
insl
enter
or
push
jbe
adc
add
jae
xor
imull
loopne
cltd
pop
jb
dec
ja
mov
dec
mov
xchg
scas
pop
ds
dec
sub
pop
popa
mov
cmp
push
ret
push
aaa
pop
pop
clc
add
aam
mov
sbb
rcl
add
lods
mov
or
ljmp
pusha
and
lret
lock
insb
add
shl
test
lret
sbb
add
sub
pop
orb
mov
and
inc
sbb
dec
xor
push
mov
mov
cmp
scas
sub
jo
insb
clc
adc
fstl
cltd
adc
xchg
and
testl
sbb
pop
or
insl
outsb
leave
jbe
lcall
add
rorl
or
mov
movsb
mov
push
sub
inc
mov
rorl
dec
push
mov
in
or
adc
mov
fs
jo
inc
mov
adc
jp
out
test
xchg
sub
mov
push
xchg
and
mov
sarb
fdivrl
and
mov
xchg
adc
ficompl
test
mov
xor
fsubrl
testl
insb
popa
jp
dec
pop
inc
jle
outsb
mov
sbb
incl
test
sbb
stos
shlb
dec
or
sub
inc
out
push
roll
dec
inc
sub
aaa
into
mov
inc
or
call
cwtl
iret
sahf
push
call
lret
lods
fadds
fcmovu
jge
push
inc
shll
or
pushf
fldenv
and
xchg
js
fstl
shlb
pop
cmp
aad
or
into
push
pop
cli
dec
in
out
push
inc
pop
cmp
addr16
or
dec
aaa
xchg
cli
outsb
adc
push
in
pop
push
mov
push
push
stc
lret
lods
pushf
fdivrs
cwtl
fsubrs
enter
fs
pop
repz
adc
shlb
jl
xchg
insl
xlat
adc
bound
xor
add
or
stc
adc
out
lods
pop
je
fldenv
xor
enter
or
fwait
cmp
xchg
inc
pushf
lods
sub
pop
xchg
sbb
push
add
int
fcomps
pushf
jge
fwait
movl
mov
in
xor
ror
insb
out
sbbb
lahf
and
xchg
shll
mov
mov
push
xchg
lret
je
xchg
daa
pop
inc
psraw
shlb
in
and
inc
stos
mov
iret
aas
btc
xchg
nop
mov
je
loope
adc
dec
stos
xchg
xor
xchg
js
sbbl
cmp
jns
push
or
adc
mov
mov
lock
jo
test
sbb
js
inc
aas
fnsave
fs
test
mov
dec
jle
shlb
add
loope
pop
cmpsb
add
mov
js
jl
fbstp
stos
dec
push
call
jp
sbb
lds
jecxz
lods
insl
mov
jae
fsubrs
jnp
test
ja
ja
xchg
pop
sub
mov
or
push
lds
icebp
in
in
gs
scas
jno
add
and
repz
pop
pop
mov
push
lods
scas
pop
push
jnp
cmpsb
adc
out
push
stos
push
jne
mov
add
bound
push
pusha
dec
dec
lea
xor
sub
push
imul
fsubrl
sti
gs
or
cltd
mov
dec
mov
dec
sub
mov
dec
inc
cmp
bound
out
push
sub
push
jmp
incb
xchg
xor
shlb
mov
test
hlt
pop
push
clc
popa
mulb
add
scas
add
hlt
jo
sub
xchg
cli
add
loop
ror
stos
test
imul
xorl
enter
mov
cmp
pop
dec
and
cmp
add
xchg
inc
sbb
dec
cmc
xchg
adc
mov
push
adc
xor
decl
insb
sbb
cmp
cmpsl
xlat
jecxz
push
inc
inc
insl
mov
inc
lahf
inc
ficomps
fldl
sub
mov
ljmp
xchg
or
mov
addb
daa
das
cmc
pop
mov
or
mov
dec
fisubrs
add
xchg
push
test
adc
add
iret
jge
dec
pop
xchg
adc
cmp
movsl
pop
push
xchg
fcoml
jl
out
shll
push
push
iret
or
push
jmp
int3
mov
mov
test
sub
add
int3
jmp
xchg
test
ja
fsubrl
cltd
out
lret
test
cmp
inc
mov
dec
hlt
mov
rcrb
or
out
add
lret
arpl
add
mov
cmpsb
push
pop
sahf
mov
arpl
stos
xor
imul
inc
ja
mov
test
mov
adc
dec
mov
inc
sbb
pusha
sub
test
sarl
rorl
out
sbb
je
and
xlat
or
iret
call
std
and
out
psubsw
sub
repz
divl
loope
sub
ja
lahf
call
xchg
aaa
daa
add
inc
lcall
inc
inc
cwtl
mov
ja
push
xchg
mov
mov
cltd
mov
inc
mov
pushf
mov
daa
das
mov
imul
adc
mov
call
lods
or
ret
test
inc
mov
add
mov
jno
pushf
push
and
insl
xor
sbb
jmp
jg
out
daa
jl
enter
jne
push
mov
or
adc
imul
mov
arpl
xchg
outsb
and
add
sub
jge
test
cmp
test
and
cwtl
jle
jmp
push
mov
jecxz
imul
xchg
add
pop
lret
push
mov
es
ds
gs
pop
jle
in
pop
ljmp
btr
popa
frstor
or
add
mov
mov
fwait
mov
insl
loop
sbb
nop
in
dec
mov
dec
loop
mov
mov
pop
or
lea
stos
pusha
popf
inc
mov
jo
aad
mov
rcrb
les
push
andl
push
jmp
inc
stos
cld
sarb
mov
cwtl
pusha
out
xlat
data16
lods
iret
into
nop
mov
shrb
xchg
mov
or
add
test
rcll
sti
lahf
mov
std
aad
xor
jp
pop
mov
xadd
imul
push
lea
pop
shlb
jecxz
clc
push
push
xchg
adc
sub
adc
test
pop
js
jl
ss
pusha
mov
xor
jne
rep
das
lods
xchg
mov
mov
sub
daa
test
fldt
mov
dec
and
data16
sbb
lahf
and
lret
insl
cmpsl
inc
push
lret
cld
scas
loope
push
adc
aaa
mov
cmpsl
push
shll
nop
jmp
jns
popf
mul
adc
inc
pop
lock
fcoms
leave
subl
ss
sti
or
mov
inc
or
mov
out
shl
movsb
lahf
insb
mov
lds
inc
cmp
les
add
xchg
in
fidivs
aad
sub
add
adc
sbb
and
rcll
and
in
pop
add
sbb
sbb
into
mov
mov
std
into
jo
pop
fwait
xchg
cltd
jbe
xchg
mov
cmpsb
fildl
dec
push
dec
sub
mov
mov
int
cmpsl
lods
pop
xor
ds
stos
and
fbstp
adcb
push
pop
or
test
ret
std
insl
xchg
push
dec
mov
sub
popf
fnstcw
das
stos
adc
inc
clc
insb
lahf
addr16
add
repnz
sbb
xchg
daa
cmp
pusha
sub
jp
jmp
and
lret
or
push
fcomp
daa
sub
xchg
inc
and
jno
xchg
loop
push
xchg
scas
mov
shrb
loop
into
and
pop
push
pop
and
stos
cmp
btr
icebp
popf
stc
repnz
jmp
mov
rclb
add
std
imul
mulb
jae
jno
inc
and
decb
gs
cmp
sub
in
xor
cmp
push
imul
jge,pt
mov
out
in
lds
mov
dec
aas
ljmp
jg
inc
mov
and
neg
xchg
aaa
sub
xchg
xchg
cmpsb
cld
test
xor
jbe
sbb
fwait
sahf
inc
js
push
mov
les
xchg
and
loop
cli
cmp
sbb
cltd
or
in
push
and
sti
outsb
cmp
fmulp
fwait
adc
add
scas
ja
jne
xor
sub
clc
push
sahf
jb
mov
testb
std
push
les
jle
xlat
out
cmp
adc
addl
int
in
sbb
xchg
fdecstp
lds
mov
fwait
push
dec
dec
and
pushf
fsubp
mov
inc
rcr
sbb
xchg
xchg
xor
aas
xchg
adc
push
adc
xchg
mov
dec
jecxz
mov
inc
or
das
fidivrs
jl
jmp
push
or
jne
pop
daa
lret
or
cli
xacquire
int3
out
push
popa
inc
ljmp
mov
ret
rolb
negl
mov
out
mov
adc
fcom
call
hlt
sbb
inc
cwtl
sub
push
cmpsb
jge
ss
mov
mov
ret
loopne
or
rdpmc
and
ret
sbb
xor
cmp
or
cld
fisttps
dec
dec
in
add
mov
mov
int
mov
cmp
pushf
cmpsb
in
add
out
sbb
add
mov
mov
inc
in
sbb
sub
dec
sbb
sub
push
test
adc
insb
test
pop
in
imul
iret
sbb
adc
or
or
mov
repz
pushf
add
jbe
jg
push
cmc
mov
mov
mov
stos
ds
or
cmp
out
repnz
fbstp
pop
mov
add
std
aas
adc
mov
gs
jo
mov
incl
rorl
stos
cmc
imul
mov
leave
xchg
push
nop
pushf
xor
insb
lret
inc
xchg
or
cmc
mov
cmp
mov
add
test
pushf
fdivrs
getsec
insw
jbe
cli
fstpl
adc
imul
inc
adc
jno
addr16
xor
cmc
jge
stos
in
lret
jb
sbb
add
leave
cmp
jb
add
es
mov
jp
nop
mov
mov
mov
pop
into
add
fcoml
shll
sub
ret
push
mov
sbb
or
mov
mov
jl
cmp
mov
mov
xchg
dec
idivl
fmuls
jnp
cmp
push
gs
push
xor
outsl
scas
xchg
push
lea
jg
mov
dec
popa
mov
leave
insl
add
iret
add
mov
mov
out
cmpsb
jne
cmpsb
jb
loop
sub
sub
int
add
daa
mov
stc
hlt
mov
lcall
adc
fstps
out
dec
mov
out
vmovdqa32
rorl
pop
jno
cmpsl
cmp
inc
push
inc
push
mov
pop
sbb
dec
jnp
lret
xor
in
iret
cs
jno
cmp
cmp
inc
das
iret
nop
push
loope
add
mov
push
outsb
or
je
mov
cmpsl
addr16
mov
jne
clc
jne
sub
dec
lds
mov
inc
xchg
testb
sub
mov
test
nop
in
xchg
lock
mov
movsl
and
inc
add
gs
adc
push
and
xor
in
xchg
lock
mov
movsl
and
inc
add
gs
adc
push
and
xor
in
xchg
lock
mov
movsl
and
inc
add
gs
adc
add
mov
cmc
nop
loope
xchg
lock
and
adc
pop
popf
clc
cli
mov
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
ror
ret
out
loop
pop
out
lock
inc
pop
jb
arpl
lar
ror
ret
out
loop
xchg
popl
mov
jb
bound
lar
xor
aas
ror
ret
out
loop
xchg
popl
mov
push
or
adc
jo
pop
dec
aas
iret
cmpsb
xor
mov
mov
rorl
cli
push
enter
daa
es
lcall
add
andb
pop
ljmp
outsb
popf
repnz
jp
repz
outsb
adcb
xchg
sbb
testl
mov
mov
inc
push
jg
push
shlb
mov
fcmovb
pop
cwtl
and
pushl
and
xor
inc
loopne
rclb
mov
das
and
adc
add
mov
cmp
mov
or
nop
pop
mov
shlb
mov
pop
cmp
push
push
cli
jo
aas
fisubl
pop
lea
jle
sbb
ds
iret
ret
out
loop
xchg
popl
mov
jb
bound
lar
xor
and
mov
mov
loope
out
push
sub
sub
sbb
adc
insb
push
sub
cmpsl
fstl
mov
mov
jo
bound
adc
pop
dec
push
outsl
mov
ret
xchg
lahf
mov
mov
pop
jb
bound
lar
xor
and
ror
ret
out
loop
xchg
popl
mov
jb
bound
lar
xor
and
ror
out
outsl
pop
int
insb
inc
lock
add
push
push
pop
scas
loope
xchg
sbb
fidivl
dec
mov
jo
pop
xor
sbb
jge
jge
sub
and
lods
adc
mov
dec
or
test
xchg
or
or
clc
loop
or
fidivrl
jbe
orb
mov
pop
mov
mov
cwtl
pop
push
or
das
jne
repz
inc
cwtl
mov
pop
xor
cmc
add
mov
mov
jge
xor
lock
pop
ret
loope
shll
in
mov
dec
test
fs
xchg
add
jns
rcrb
push
xor
mov
push
cmp
adc
add
push
inc
jno
xlat
xor
or
and
and
loope
push
movsl
cmp
in
add
stos
cmp
mov
loope
daa
out
fldcw
lods
imul
push
mov
mov
adc
xor
mov
dec
leave
cmp
loop
mov
mov
mov
enter
in
setb
adc
inc
jmp
sub
push
bound
pop
pop
imul
push
dec
les
xchg
cld
cmp
sbbb
dec
jmp
dec
or
das
jmp
xchg
bound
cli
hlt
mov
popl
jecxz
adc
je
arpl
cmp
ss
xchg
pop
inc
test
aaa
hlt
lcall
add
push
xchg
lahf
mov
and
sub
push
aad
pusha
sbb
push
pop
mov
mov
imul
fabs
dec
popf
ucomiss
mov
xor
ss
mov
xor
dec
dec
nop
cmp
xor
fidivrl
mov
inc
gs
push
adc
xor
mov
sbb
and
xor
xchg
jl
xor
mov
xorl
and
adc
xchg
fisttps
lahf
imull
inc
mov
mov
cld
outsb
xorb
test
push
stc
stos
xchg
sub
in
sahf
fcom
mov
mov
out
and
in
imul
imulw
sbb
mov
sti
pop
push
imul
lods
mov
and
lea
cmc
rorb
imul
jl
cwtl
cli
add
fcoml
js
cld
and
fstpl
inc
push
ret
clc
jne
cld
sbb
ljmp
mov
cmp
bound
push
inc
popa
jnp
adc
sub
call
fcompl
xchg
adc
and
push
clc
divb
xchg
dec
pop
cmp
push
pop
out
dec
inc
fimuls
aaa
addl
sbb
jno
cmc
mov
xor
stc
testb
push
and
aaa
xchg
aaa
fsubrl
cwtl
push
lret
sahf
dec
sbb
repnz
stos
jnp
or
jge
imul
jecxz
testb
je
lods
adc
rclb
xchg
ret
mov
sub
shrl
inc
lcall
insb
or
push
dec
sub
lret
add
pop
xchg
incb
jns
mov
and
add
repz
mov
test
mov
xor
ficomps
adc
pop
es
lock
fcomps
jle
cltd
and
fsts
or
adc
and
das
jle
in
jbe
jno
out
push
aas
subl
insl
in
std
push
add
leave
cmp
jb
sbb
cmpsl
add
jge
push
xchg
nop
xchg
and
fisttpll
cmp
outsb
pop
xor
mov
push
imul
sbb
enter
fisubrl
pxor
arpl
movsl
idivl
mov
mov
and
imul
cmp
cmp
jmp
jnp
cmp
test
sbb
adc
mov
loopne
ds
inc
push
xchg
and
pop
mov
xchg
shrb
fs
test
and
aad
xor
nop
stos
iret
sub
fdivrl
pushf
sbb
xor
mov
cmpsb
addr16
sbb
fnstenv
push
xor
pop
in
je
int3
shll
adc
xor
adc
mov
jae
jae
fimull
insl
repnz
sub
xor
out
addr16
out
popf
dec
fsubrs
mov
mov
pop
out
stos
sti
dec
mov
xor
dec
push
dec
fidivrs
je
fiadds
cmpsl
adc
cmpsb
nop
mov
add
cmp
roll
add
fistps
inc
jl
insb
lock
dec
nop
hlt
cmp
jnp
jae
cmp
or
out
sbb
jp
xchg
fistl
add
jne
pop
sub
mov
jnp
xchg
push
sbb
pop
adc
jnp
pop
loope
aas
push
lahf
inc
out
sbb
pop
das
jno
shlb
sub
rclb
xor
fimull
mov
in
dec
ljmp
mov
stos
ljmp
stos
xor
icebp
xor
sbbb
mov
jge
sbb
cwtl
aad
or
mov
lods
mov
scas
enter
int3
cmp
das
jge
inc
dec
int3
pop
jo
mov
mov
es
pop
push
adc
jmp
test
mov
mov
fcmove
imul
mov
ja
test
and
mov
mov
lock
sbbb
fcmovnb
sahf
xor
iret
lea
pop
lods
dec
shr
push
push
and
fistpll
pop
lea
add
or
add
sbb
test
aam
mov
jmp
adc
pushl
jmp
shrl
pusha
sub
sub
jmp
pushf
decl
cmc
mov
xor
jge
jecxz
mov
sbb
mov
jbe
mov
fs
xchg
sarb
lea
add
out
fidivs
fwait
lahf
mov
push
in
lods
call
mov
jno
sbb
shlb
cmp
xor
jbe
and
call
and
movsl
sbb
xchg
enter
loopne
lods
lret
or
stc
insl
arpl
adc
lods
cli
inc
out
push
cmp
dec
cmp
jb
pop
and
repz
fistl
enter
cmp
sub
cmp
sub
or
mov
cli
dec
xchg
rclb
sbb
in
lret
cmp
mov
in
adcb
mov
fisubrs
incl
loopne
inc
jg
pushf
and
into
fwait
xchg
enter
hlt
adc
imul
and
mov
orl
lcall
nop
jle
cli
in
sbb
dec
sub
popa
adc
and
push
push
imul
fcmovnb
inc
es
jnp
push
cli
stc
jo
cmpsl
data16
cwtl
mov
divl
add
add
dec
cs
inc
dec
cmpsb
inc
js
sub
pop
in
ds
or
xor
cmp
pop
and
mov
test
add
loop
inc
add
dec
add
sub
cmpsb
jg
lds
repz
ret
ljmp
jno
fyl2xp1
mov
push
in
jno
dec
scas
push
xor
dec
and
fildll
push
xchg
out
std
pop
rclb
loop
lea
stos
fstps
lret
cmp
popa
test
inc
xchg
repnz
sub
fcmovbe
and
and
gs
test
in
scas
jl
cwtl
fs
pushf
sub
sub
insb
inc
test
jnp
popf
xchg
data16
rorb
andb
xor
mov
in
mov
jl
inc
or
mov
pushf
sar
out
mov
daa
gs
mov
sub
push
cmpsl
mov
clc
in
imul
imul
push
mov
pop
mov
mov
pop
pop
xchg
jl
mov
sub
popa
test
jae
xchg
hlt
xor
or
pop
jbe,pn
aam
jbe
test
inc
andl
lock
clc
jb
pop
ret
jbe
les
ja
and
ret
movsb
outsb
test
mov
sub
xchg
adc
gs
xchg
adc
pop
jns
dec
in
fdivrl
sub
sub
andl
mov
push
push
push
in
mov
ret
in
inc
jb
filds
rorb
popf
dec
and
inc
lock
stc
rolb
sub
pop
lods
pusha
cmc
test
iret
dec
xchg
or
mov
push
push
push
ror
js
stc
cmp
leave
mov
lea
int3
sub
fs
push
es
fstl
pop
add
dec
and
mov
rsm
lret
and
fnsave
cmpsb
mov
mov
daa
mov
cmp
jmp
sub
push
mov
insb
int
cmpsl
inc
mov
push
shr
pop
int3
jo
mov
mov
ret
out
add
add
mov
arpl
addl
sahf
out
icebp
stc
dec
sub
pop
sbb
push
add
adc
dec
repnz
dec
xlat
out
sbb
pop
mov
dec
xor
xchg
mov
mov
mov
stos
pop
sub
push
lret
loop
lret
xchg
xchg
lret
js
and
push
data16
pop
call
cli
jle
jo
inc
xor
mov
int3
andl
je,pn
push
mov
fsub
push
jbe
ja
jmp
jno
leave
sbb
stc
inc
adc
addr16
mov
mov
sub
imul
mov
scas
or
gs
sti
adc
repnz
jle
and
sti
cmp
cmp
loopne
je
mov
daa
xchg
test
adc
push
or
push
in
sbb
lahf
lods
dec
vaddsubpd
loopne
jmp
inc
pop
enter
adc
xor
repnz
arpl
dec
rorl
cmpsl
cs
cmpsb
lret
adc
lock
or
cmpsl
xor
jg
imul
lahf
jno
bound
dec
mov
in
mov
xor
rorl
ja
cld
mov
data16
insb
mov
xlat
loopne
iret
mull
pop
fldl
cld
cwtl
loope
jb
cltd
mov
dec
shrb
cmpb
jle
mov
mov
outsl
sub
js
mov
daa
dec
mov
call
sub
addr16
jle
or
xchg
adcb
inc
je
loop
pop
pop
in
fists
or
or
loope
aas
sbb
notl
lea
movsl
mov
mov
loop
insl
sub
leave
lcall
shl
add
lea
and
das
mov
jl
push
loopne
add
std
push
mov
pop
and
or
cmp
cwtl
xor
je
pop
data16
and
jne
mov
into
sbb
mov
push
incl
popa
sar
pop
xchg
inc
jle
or
cltd
hlt
jno
pop
call
jecxz
mov
push
adc
lds
fs
test
add
add
mov
adc
aas
xchg
xchg
jo
mov
movsl
int3
lret
jge
dec
xchg
cmp
mov
and
cmpsb
aas
push
sub
dec
cmp
or
add
mov
ror
popa
rcr
es
or
or
lret
into
mov
frstor
aaa
pop
dec
call
dec
sub
xchg
das
add
mov
rcrl
ss
dec
ja
and
decl
dec
mov
mov
pop
pop
sub
sub
test
pop
jno
orl
add
sbb
cmpsb
hlt
inc
cs
movsb
leave
sub
jmp
cmp
cs
jno
push
cs
out
shl
repnz
aam
imul
test
jmp
sbb
lods
dec
adc
pop
xchg
inc
lret
js
test
rorb
cmp
sbb
push
xor
pop
dec
test
or
mov
mov
sbb
or
mov
shl
es
mov
mov
pop
mov
cmp
xchg
int
dec
je
push
nop
sub
and
pextrw
sub
pop
addr16
hlt
pop
cmp
and
mov
in
out
lds
lods
nop
jae
sbb
push
xchg
iret
xor
int3
scas
subl
insl
pop
mov
ja
test
aaa
jno
jle
pop
adc
sahf
and
and
pop
mov
sub
jmp
xor
test
fistpll
cmpsb
sbb
sbb
jg
inc
mov
cmpsb
sbb
mov
xor
cmp
mov
cmp
dec
jae
cmovle
js
cmpsb
negl
test
push
stos
nop
hlt
push
and
mov
in
jns
pop
in
xor
arpl
push
cmpsl
mov
mov
stos
push
inc
in
inc
stc
inc
mov
or
dec
cmp
push
cli
fs
and
js
js
sbb
push
push
push
jg
sub
hlt
cmpsl
pop
je
nop
popa
or
das
push
das
add
push
xor
xchg
or
push
aas
orl
bound
bound
adc
mov
sub
jp
pop
and
stc
lock
xchg
jns
push
mov
dec
cmpsb
mov
sub
xchg
aas
and
mov
cmpsl
aaa
mov
sbbl
or
sbb
icebp
or
pop
arpl
insb
int3
dec
sbb
mov
lods
das
jp,pt
sub
jne
in
push
sbb
mov
mov
stc
dec
push
das
add
or
mov
les
daa
jl
push
push
int3
pop
xchg
push
sar
pop
dec
test
or
xor
ds
popa
cs
insl
inc
dec
dec
xchg
aas
dec
jae
and
out
mov
aaa
addr16
sbb
add
loope
cmp
or
test
inc
jns
shlb
dec
mov
xchg
or
lcall
mov
cwtl
inc
or
jmp
push
jno
mov
pusha
xchg
adc
mov
scas
adc
cmpsb
inc
filds
or
cli
test
cmp
cli
jl
xchg
pop
outsb
loope
icebp
adc
push
stc
cmp
cmpsl
xor
out
xchg
mov
std
xchg
adc
mov
adcl
pop
adc
rcll
popa
mov
inc
dec
push
sbb
inc
leave
push
add
xchg
push
add
imul
jg
shrl
mov
sbb
mov
stos
mov
scas
add
notl
test
imul
mov
popa
inc
jno
cmc
cmpsl
or
lea
mov
xor
sub
leave
xor
clc
xchg
inc
insl
mov
add
pushf
pop
adc
aam
inc
adc
xor
add
adc
add
jae
fdivrs
and
pushf
lret
es
lcall
loopne
cmp
arpl
fmull
jb
jmp
iret
xor
pusha
inc
repnz
sub
or
dec
enter
push
mov
mov
xor
je
dec
stos
pusha
sbb
shll
or
aas
push
sbb
push
xchg
dec
ljmp
jo
or
mov
pop
mov
orl
push
in
lret
pop
cmpb
push
push
pop
sbb
adc
movsb
xchg
hlt
cltd
iret
lock
pop
pushl
lahf
push
push
add
dec
iret
js
mov
cld
popf
scas
sub
pop
fs
movsl
ficomps
fldl
rolb
test
cmp
jnp
ljmp
push
jge
nop
pop
add
mov
mov
inc
jno
sbb
mov
mov
pusha
cmpb
fs
test
icebp
and
mov
push
pop
std
mov
loopne
xor
lds
push
loope
and
cltd
lahf
jae
and
lds
xchg
test
add
xchg
lahf
push
push
imul
xor
bnd
idiv
clc
push
mov
lret
and
mov
into
jne
sti
fs
rorb
inc
cmp
mov
stc
popf
lods
inc
repz
sbb
and
xor
xor
mov
lock
and
loop
fidivs
xchg
notb
jmp
mov
xchg
xchg
jo
das
push
in
or
sub
shll
cmp
cld
fsubs
je
pop
das
stos
sbb
mov
add
xor
test
pop
hlt
pop
aam
aaa
xchg
dec
test
ss
fldenv
inc
xchg
les
xor
mov
pop
fnsave
jno
sbb
or
or
pop
shrl
fnsave
das
adc
jne
hlt
movsb
and
cmp
xchg
lahf
mov
jp
ret
push
and
mov
mov
orb
out
test
fucomp
jmp
inc
pop
mov
sbb
push
mov
inc
push
rep
fbld
mov
scas
subl
sub
insb
jnp
das
incb
push
popf
fimuls
xor
jmp
jl
cmp
cmp
stc
inc
mov
xchg
test
jl
or
jg
ljmp
add
push
aas
xchg
xchg
cmpsb
out
addb
push
scas
pop
sub
or
mulb
or
mov
ss
icebp
xchg
add
popa
stc
and
jo
mov
add
in
std
mov
das
mov
inc
add
ljmp
push
subl
cs
xchg
test
sub
sbb
mov
loopne
push
leave
cmp
and
enter
cmp
fbld
mov
push
xchg
mov
or
es
imul
push
cmp
xchg
nop
das
and
fcom
popa
test
adc
mov
sbb
fnstenv
fmul
adc
loope
push
call
jge
out
int3
pop
add
jo
repnz
jne
mov
cmp
add
mov
mov
push
and
sahf
fsubl
push
mov
dec
adc
cld
fldl
sub
lea
pop
imul
lcall
lea
enter
mov
mov
cmp
insl
pop
add
inc
fnstcw
loop
loope
shr
into
lret
insb
adc
ja
mov
roll
aam
dec
mov
pop
push
xor
aad
xchg
lea
fnstcw
xchg
cmp
sbb
pop
shl
jns
and
cmp
pop
sub
xor
imul
pop
push
scas
arpl
imul
inc
push
rcl
cmp
loope
test
xchg
sub
fptan
inc
dec
cmc
scas
loope
cmp
inc
push
mov
inc
xchg
cmc
jno
movsl
lds
aad
lock
repz
xchg
ljmp
mov
test
jg
fwait
jno
push
es
dec
sub
loopne
xor
adc
mov
xchg
je
or
inc
add
incl
movsb
pop
jbe
out
and
mov
xchg
xor
dec
push
xor
clc
into
dec
loop
dec
subb
push
jmp
xchg
add
cmp
push
out
fidivrs
add
nop
adc
insb
std
stos
out
shl
mov
bound
xchg
xchg
scas
add
lock
or
cmpb
jmp
fnstenv
or
ror
movsb
xor
leave
xor
fists
bound
inc
mov
inc
rolb
cs
xchg
daa
es
add
inc
ret
lahf
adc
shll
sub
scas
or
mov
scas
inc
dec
mov
xchg
out
push
cmp
add
lock
cmp
pop
jnp
pop
add
xchg
xchg
nop
adc
mov
rcll
or
add
push
fucom
sub
out
fnstcw
cmp
dec
push
push
test
jp
test
cmc
aam
repnz
stos
fiaddl
inc
xor
sti
sub
stos
and
das
push
sub
sub
stos
repnz
icebp
js
inc
imul
insl
das
add
sub
mov
popf
push
mov
fisubl
nop
out
loope
sbb
adc
fwait
bound
fidivrl
cmc
fucomi
in
or
adcb
jmp
les
jl
in
pop
ror
and
mov
pop
pop
fwait
lret
dec
xchg
das
push
xlat
jmp
ret
enter
or
sub
xchg
pop
inc
ds
mov
lea
push
sbb
loopne
ss
ss
cmc
jns
push
add
nop
sbbl
into
test
incl
andb
mov
sub
call
or
and
pop
push
push
sar
jne
lret
push
pop
rcr
pop
aad
add
mov
scas
cltd
xchg
aad
shll
clc
sbb
dec
push
sti
mov
outsb
cmp
adc
mov
cmp
adc
xor
popl
mov
arpl
push
aad
pop
sub
mov
jnp
push
movsb
xor
add
or
nop
negb
ljmp
test
inc
in
fdiv
lahf
call
or
mov
push
sub
add
xor
addb
subl
fmuls
lods
jle
add
mov
mov
cwtl
mov
or
cmp
les
mov
loop
xchg
popl
mov
jb
bound
lar
xor
and
ror
ret
out
loop
xchg
popl
mov
jb
bound
lar
xor
and
ror
inc
pop
jb
loop
adc
and
jb
bound
lar
xor
and
ror
ret
out
loop
xchg
popl
mov
fsubrs
or
jb
inc
rclb
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
stos
lahf
sub
inc
or
add
cmp
adc
rorb
mov
nop
lret
nop
cmp
jo
inc
or
and
pop
add
mov
loopne
sar
ret
jmp
fildl
sub
pop
or
cmp
pop
sbb
mov
mov
rcrb
movsb
nop
dec
pusha
sub
push
xor
fcomi
iret
dec
jmp
cmp
jnp
fiaddl
mov
outsb
cmp
dec
lods
jp
fs
rorl
push
sbb
rolb
rolb
and
xor
mov
pop
push
jg
loope
shlb
mov
jl
push
inc
mov
mov
jle
nop
cld
xor
jo
inc
out
jnp
inc
lock
mov
setp
arpl
sbb
mov
cli
pop
aam
dec
mov
arpl
pop
push
dec
adc
insl
fdivp
lret
test
cmp
ret
outsl
sub
fwait
sbb
popf
inc
loope
in
aad
rorb
lret
pusha
sub
push
or
and
pop
sbb
mov
cmpsl
fildl
outsl
jo
inc
inc
push
cmp
pop
sbb
jge,pn
mov
mov
xchg
out
mov
mov
mov
jo
xor
push
push
lar
xor
xchg
jecxz
out
xchg
mov
cwtl
fisttps
and
and
pop
add
mov
rorb
fildl
sub
inc
or
and
pop
add
mov
rorb
fildl
notl
sbb
pushf
pop
pop
pop
cld
jnp
push
xchg
mov
cmpsl
fcomps
notb
adc
in
push
stos
jecxz
mov
cmp
in
addr16
loop
mov
dec
cmp
in
sub
adc
xchg
mov
mov
rorl
testl
popf
lcall
jb
loopne
add
or
adc
scas
mov
pop
push
sbb
filds
rcrb
pop
mov
dec
inc
dec
mov
fwait
aam
pop
dec
sub
ljmp
outsb
mov
rcl
and
cmp
cltd
sbb
mov
inc
and
test
scas
insb
push
orb
cmc
and
inc
mov
cs
pop
pop
test
mov
inc
mov
mov
xchg
sbb
push
mov
icebp
pusha
xchg
incl
pop
mov
xor
mov
adc
add
test
mov
test
sbb
adc
sub
out
push
and
lds
call
push
popl
imul
add
or
data16
fnstcw
pop
push
icebp
dec
ds
fsubl
out
inc
mov
jb
push
dec
sbb
lods
jge
cs
sub
and
inc
sbb
aas
lret
es
push
rcll
pop
cld
or
inc
dec
outsb
mov
mov
adc
bound
stos
mov
aaa
xor
js
lret
push
out
sub
lock
bound
test
adc
nop
and
fildl
test
scas
push
push
adc
stos
shrl
push
scas
icebp
xchg
stos
les
std
push
jb
repz
addr16
movsb
push
xchg
and
xor
arpl
negb
cli
lods
xchg
jecxz
jge
js
popf
push
mov
mov
ffree
jae
mov
and
mov
gs
out
sbb
or
loop
pop
iret
test
mov
enter
and
cld
xchg
jmp
test
pop
sbb
icebp
lret
inc
into
sub
out
aad
cs
inc
fcmovnb
xchg
shl
cmp
xchg
and
ds
das
cmp
adc
xchg
outsl
jge
push
adc
pop
sbb
add
nop
push
lret
and
xchg
into
cmp
ret
lcall
pusha
stos
ficoml
xchg
dec
addl
je
insl
cli
mov
enter
divb
cmp
aas
dec
push
sbbl
inc
mov
daa
loop
and
xor
jne
test
cli
movsb
movsb
mov
mov
mov
pusha
mov
inc
mov
lea
mov
pop
pop
push
xchg
or
fcmovb
bound
insb
je
mov
jne
lock
push
cmp
cli
por
or
mov
pop
loop
sbb
pop
pop
add
shlb
xor
sub
pop
dec
xchg
cmp
inc
push
mov
mov
jecxz
std
fstpl
jo
fidivrl
fsub
repz
fildll
xor
adc
jg
jo
pop
cli
dec
sub
sub
xchg
dec
sbb
lds
out
mov
add
mov
mov
adc
push
stos
sbb
loop
daa
daa
stos
pop
cmc
and
xchg
loope
popf
sub
adc
mov
ret
nop
enter
mov
leave
dec
inc
mov
jns
jp
xor
add
leave
inc
sbb
xor
fxch
xor
int3
fidivrs
arpl
shrl
test
insl
fidivs
adc
inc
mov
cli
dec
mov
movsb
mov
mov
mov
test
ja
imul
mov
leave
inc
bound
or
push
sub
shlb
xchg
and
cmpsb
cmp
into
fldt
ds
data16
jbe
mov
inc
loopne
push
sub
push
cli
or
xor
sbb
in
outsl
sbb
lods
mov
in
jle
adc
push
das
out
inc
push
sti
fldt
or
bnd
mov
or
stos
shl
push
pop
int3
jmp
es
add
pushf
pop
dec
outsb
mov
pop
sbb
push
mov
repz
mov
mov
fiaddl
outsb
xor
xorb
mov
sbb
jp
xlat
stc
mov
add
mov
mov
addr16
mov
in
mov
sub
imul
and
sbb
cmpsl
rorb
call
cmp
mov
fisttpl
xor
mov
fs
xchg
scas
into
icebp
xlat
fcoms
sub
xchg
andb
aam
sbb
push
fdivrl
movsl
push
and
rcr
ds
out
mov
daa
mov
notb
xchg
in
sub
ret
rclb
adc
clc
out
leave
outsl
das
divl
add
hlt
jle
shrb
cs
ja
lea
or
xor
imul
test
mov
mull
mul
cmc
jge
and
dec
or
inc
stos
dec
les
fistpll
ja
push
pop
lcall
aas
cmp
fs
imul
or
and
and
jb
push
ret
or
aaa
mov
loopne
cld
and
into
aas
lret
push
icebp
inc
hlt
adc
repnz
xchg
push
mov
gs
mov
fsubr
cs
into
xor
sub
mov
je
ss
inc
inc
or
ret
sahf
les
xchg
xchg
cmpsb
repnz
xrelease
lods
jecxz
pop
fdivl
jo
imul
adc
jne
mov
xchg
jmp
insb
jne
jb
add
xor
jmp
into
sub
sub
lods
aam
loop
int3
jae
sub
out
sbb
xchg
dec
stc
sbb
popf
add
mov
ficomps
add
int
sub
addr16
xor
mov
stos
data16
mov
jnp
cmp
sbb
sbb
pop
inc
ss
mov
pop
mov
int
stos
or
xor
ret
enter
sarl
lahf
ret
lods
out
push
add
mov
pop
push
xchg
andb
sahf
enter
xlat
adc
xchg
mov
loopne
addl
inc
push
in
and
sbb
cmp
cld
outsl
imull
pop
cli
inc
xchg
mov
add
scas
call
and
push
cmp
jecxz
push
daa
pop
sub
jns
arpl
dec
push
xor
mov
inc
xchg
cmc
lahf
cs
add
push
addb
mov
pop
xor
push
mov
jle
sahf
addl
pop
dec
cmpsl
frstor
mov
mov
xchg
jb
shll
mov
pop
test
or
out
or
shlb
aad
jnp
mov
xlat
icebp
mov
jmp
xor
adcb
inc
lret
dec
ja
jae
test
sbb
dec
test
push
aad
repz
bound
lcall
jle
fistps
jmp
fcoms
mov
loope
jle
and
push
mov
jb
cmc
pop
pop
dec
push
push
push
cmpsb
or
outsb
jnp
push
sbb
pop
pop
in
inc
mov
xor
cmp
rcrl
mov
movsl
sub
mov
mov
into
hlt
jle
daa
mov
mov
rcll
add
push
tzmsk
jne
xor
jae
cmp
push
inc
addr16
xchg
and
loopne
adc
popa
mov
xlat
testb
lods
test
dec
cwtl
push
ret
push
cmpsb
fcom
dec
not
pop
xchg
cmp
jne
sub
cmp
jno
dec
sub
pop
mov
test
jg
dec
mov
jo
mov
mov
or
mov
lods
mov
data16
adc
push
or
aaa
insl
xchg
cmpsb
sub
imul
add
and
xor
jnp
out
mov
jns
mov
push
or
adc
jae
and
mov
lea
sub
sub
imul
adc
sub
rcrb
sahf
cwtl
xor
mov
dec
adc
mov
mov
lods
pop
outsl
jnp
mov
ja
shrl
dec
idivl
mov
xchg
loopne
jno
dec
fcoml
inc
adc
into
cmp
jbe
push
in
inc
xlat
shll
pop
xor
in
sbb
cs
rcrl
mov
mov
push
xchg
xor
pop
sbb
pusha
mov
movsl
rcrb
xor
andl
push
imul
andl
and
sub
xor
inc
inc
adc
cmp
hlt
mov
imul
cmp
dec
popa
cmp
sbb
push
mov
cmp
test
in
mov
data16
fdiv
insl
push
adc
push
and
insl
movsl
jb
jae
sub
sbb
or
add
cmp
cld
sbb
cld
cmp
inc
inc
xchg
in
insl
xor
xchg
adc
xchg
cmpsb
sub
xor
mov
mov
outsb
sbb
push
sub
xchg
xor
xor
mov
call
add
int3
or
xchg
sbb
push
push
dec
ss
inc
sbb
push
out
add
fnstsw
movsl
xor
dec
push
mov
mov
outsl
sbb
xor
cwtl
mov
pop
inc
int
ljmp
ret
cmpl
bound
mov
popa
add
ds
out
adc
or
adc
push
mov
lcall
xor
push
sub
enter
jns
scas
fstpt
ret
vmwrite
push
pop
mov
ljmp
jp
std
inc
xchg
pop
jbe
mov
mov
jmp
mov
movsl
pop
stos
loope
icebp
add
mov
fiadds
dec
sbb
sahf
or
add
gs
leave
cli
dec
jge
lret
addr16
and
xchg
xlat
mov
mov
rcrl
pop
loop
cmp
insl
int3
jg
sti
iret
or
stc
mov
push
cmp
es
cmp
mov
das
xchg
imul
repz
pop
repz
sbb
repz
sbb
add
mov
cltd
pop
add
jno
and
pop
cmp
push
sti
mov
fcompl
iret
bound
jecxz
sahf
xchg
xchg
nop
shl
add
scas
inc
sbb
in
lret
lds
mov
in
pop
or
xchg
cld
fwait
push
fimull
lods
adc
outsb
leave
js
ret
and
dec
fbld
pusha
int
mov
jnp
add
bound
push
int3
frstor
sub
testl
mov
push
lret
lds
addr16
stc
pop
dec
nop
push
xchg
dec
cmp
loopne
add
imul
sub
jne
cmp
sub
xchg
pop
pop
push
int
mov
enter
enter
push
pop
ficompl
xchg
cmpsl
ja
pop
lods
jg
sub
hlt
add
das
shrb
and
fildl
inc
loop
push
mov
pop
mov
jno
mov
aam
les
jb
inc
pop
xor
xchg
test
daa
or
das
xchg
mov
mov
mov
gs
stos
out
loopne
or
mov
jge
int
lea
jg
add
push
pusha
shr
out
mov
add
icebp
cmpsl
cli
lret
sbb
ffree
push
daa
nop
popf
loop
pop
cmp
mov
ja
sbb
pushf
in
aad
fsubl
or
call
cs
pusha
xlat
push
push
cmp
fcoml
scas
and
add
push
mov
pushf
mov
pop
add
dec
int
je
fwait
lods
sub
inc
les
clc
stos
lock
es
mov
push
je
adc
mov
mov
insl
fnstsw
movsl
add
push
inc
cmc
icebp
and
jno
inc
and
add
aad
pop
sar
scas
jge
ret
jne
pusha
jge
popa
mov
mov
ret
jg
sub
in
push
je
adc
mov
push
je
test
mov
movsb
sbb
aad
outsl
cmp
loop
jns
js
ljmp
out
or
in
mov
xor
add
in
xor
insb
ret
loopne
xchg
and
jns
xlat
fiadds
aas
cmp
adc
push
xor
jmp
add
inc
mov
pop
mov
sbb
push
pop
adc
dec
or
outsl
fistl
add
cs
shlb
sub
loopne
adc
push
inc
movl
std
cmpsb
pop
arpl
shlb
aad
and
and
pop
and
mov
mov
pop
leave
movsb
arpl
add
je
data16
cmp
lret
dec
adc
mov
out
lods
sub
outsl
dec
mov
mov
lods
xchg
out
sub
cmpsl
scas
add
lds
sub
add
shlb
dec
hlt
subb
daa
imul
or
jl
pop
push
mov
sbb
out
mov
bound
adc
jne
cmpb
push
fbstp
cmpb
pop
jp
mov
inc
dec
pop
repnz
push
lods
stos
ret
movsb
mov
outsl
test
loopne
cpuid
stos
popa
in
cld
test
push
inc
jnp
fucom
shl
fidivs
adcl
scas
push
add
jb
mov
int
jge
mov
call
shll
data16
push
ss
cmpsl
mov
pop
mov
mov
cmp
jno
xchg
pop
cmp
or
ljmp
dec
testb
rorl
enter
push
outsb
xchg
sbb
sbb
and
sub
fdiv
out
dec
pop
outsb
mov
cmp
inc
out
sbbl
bound
mov
sbb
mov
mov
lret
bound
in
jne
or
adc
inc
fidivl
xor
inc
cmp
pop
jne
fisubrs
xchg
lods
xchg
inc
cs
or
fbld
push
jno
mov
pop
stc
int
icebp
xlat
cmp
ljmp
mov
std
and
cs
sarl
push
inc
inc
dec
cmp
mov
mov
ret
sub
les
sahf
gs
scas
cmp
jle
mov
pop
dec
test
jne
jg
add
sbb
push
pushf
xchg
fwait
dec
insb
dec
hlt
sub
shrb
pushl
shrl
push
in
xchg
pop
cmp
dec
and
push
hlt
pop
push
mov
push
les
push
popf
idivb
or
sti
push
inc
push
xchg
ja
out
ud2
add
ret
xchg
fmuls
adc
shll
jg
ds
adc
mov
sub
pop
popf
adc
cwtl
adc
jmp
push
je
cmp
mov
sti
int3
and
jle
movsl
sti
rorb
dec
in
mov
clc
addl
xchg
jno
orl
shrl
inc
inc
push
pop
movsb
mov
cmc
lock
xchg
jne
outsb
sti
push
sub
mov
jp
add
xchg
mov
std
enter
imul
sarb
adc
clc
loopne
je
mov
jl
nop
mov
pop
clc
cld
aam
jmp
adc
or
in
pop
or
mov
idiv
ret
and
aam
sbb
xchg
cmovo
add
pop
sub
xchg
daa
mov
cmp
cmp
dec
jo
imul
add
inc
jp
sbb
std
sbb
sbb
mov
add
cmp
adc
ret
int3
jo
xchg
add
xchg
cmp
mov
mov
inc
les
mov
adc
add
das
mov
pop
and
pop
out
jnp
call
jp
inc
mov
lock
inc
push
dec
daa
pop
out
sbb
aam
xor
cmpsb
jg
cwtl
fsts
je
cli
data16
frstor
and
cli
in
sti
nop
cmpsb
cwtl
inc
and
fs
cmpsl
cld
xchg
jb
jg
out
pop
sub
pop
shrb
xor
push
adc
ret
sub
cld
jle
insl
scas
push
out
adc
out
lahf
mov
and
ret
mov
mov
subb
pushf
int
add
das
mov
and
in
ret
ret
fiaddl
popa
jmp
daa
in
fildl
or
push
rcr
mov
das
xlat
lret
rcrb
jbe
cld
adc
jnp
push
xor
into
push
dec
xor
mov
sbb
dec
cmpsb
loope
mov
adc
push
nop
sbb
mov
in
mov
push
push
jns
mov
test
shlb
lahf
lret
xor
jmp
stos
fdivrl
cmp
mov
mov
mov
aad
or
test
lcall
add
hlt
addb
fidivl
adc
and
or
ror
mov
jp
mov
bound
push
mov
jo
lret
stos
sub
sbb
and
int3
imul
hlt
cmp
and
aad
adc
pusha
sub
jne
les
ljmp
sbb
out
push
shl
jg
xchg
rcrb
mov
int3
in
fs
jp
xor
lods
addr16
xor
dec
or
dec
fisubl
cltd
sub
adc
mov
sbb
sub
and
mov
cmpsl
and
sbbl
and
popa
push
fwait
push
cmpsb
xlat
mov
cmp
mov
adc
cmp
mov
faddp
and
ffreep
push
enter
add
repz
enter
addl
adc
pop
mov
cmp
and
add
cmp
inc
imul
ss
fs
push
pushf
out
mov
fcmove
test
cmp
fs
stc
mov
or
cmpsb
cmp
sbb
loop
pop
cmp
pop
xchg
mov
loopne
xchg
pop
dec
js
out
push
test
jns
jo
shrl
stos
jns
and
jno
ja
mov
ja
movsb
and
dec
lea
push
lock
ret
xchg
stos
jbe
jmp
test
leave
lret
cmpsl
imul
mov
cs
sbb
sub
inc
inc
ficoms
push
mov
lock
push
mov
sub
pop
nop
inc
cmp
ret
xchg
inc
push
dec
shlb
mov
int3
shl
sbb
pushf
mov
sbb
call
fimull
pop
adc
jmp
mov
or
pop
cmp
mov
sbb
out
sbb
dec
lods
and
dec
adc
mov
jbe
and
in
daa
outsl
test
test
cld
or
repnz
lret
or
and
test
xchg
ja
dec
ret
jmp
enter
cmp
mov
iret
lea
xor
cwtl
insb
jbe
or
mov
fcoml
jne
inc
sub
fcom
loope
jge
cmp
jecxz
ja
push
repz
push
fsubl
push
xchg
jb
sub
leave
hlt
ss
inc
xchg
or
push
mov
ja
ret
cmpsb
mov
cli
ljmp
pop
addr16
jns
aad
xchg
cmp
xor
notb
sub
incb
pop
xchg
push
mov
repnz
aad
movsb
cld
icebp
mov
cs
test
xchg
and
in
lahf
push
xchg
aas
test
jno
bound
shl
mov
sti
and
pop
mov
jb
push
les
lock
les
xchg
mov
pop
lods
pop
aaa
stc
cmp
cltd
push
popf
sbb
adc
nop
in
pop
push
cmp
inc
bound
mov
cs
or
xor
adc
outsb
xchg
lods
mov
push
mov
cwtl
adc
out
dec
sub
mov
jge
sub
inc
add
iret
inc
push
in
outsb
inc
daa
in
xchg
xor
int
daa
xchg
sub
xor
sbb
stos
mov
out
xchg
mov
cmp
out
in
and
vpxor
in
cmovl
xor
mov
mov
mov
sarb
out
jnp
push
cmpsb
scas
hlt
mov
pushf
roll
outsl
jae
into
and
xchg
sub
pushf
mulb
fs
mov
jg
sbb
xlat
mov
add
mov
and
adc
jo
inc
popf
call
cmp
dec
les
lret
mov
add
push
mov
sarb
adc
dec
push
jae
pop
movsb
pusha
push
xchg
inc
mov
inc
inc
filds
push
lods
mov
mov
test
je
or
imul
ret
icebp
pop
mov
enter
mov
rorb
mov
decb
xchg
incl
cmp
xor
insl
das
cmp
add
movsb
fcmovnu
mov
push
sub
mov
push
sub
sub
imul
add
mov
rorb
fildl
sub
inc
or
and
pop
add
mov
rorb
fildl
sub
inc
or
and
pop
add
mov
rorb
fildl
sub
inc
or
and
pop
add
mov
rorb
and
xor
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
or
sbb
sub
cmp
push
cmp
mov
mov
int3
jmp
sti
out
or
sbb
sub
cmp
dec
pop
pop
ret
jnp
mov
mov
into
jmp
sti
out
or
sub
bound
imul
in
fndisi(8087
lret
mov
out
jg
jp
sub
jnp
imul
mov
and
add
in
aam
xchg
dec
pop
pop
mov
ds
sub
mov
inc
mov
mov
pop
jno
inc
and
add
or
and
xor
xor
and
push
into
push
fidivrs
call
pop
movsb
xor
push
fimuls
inc
push
xor
push
jo
pop
or
stos
mov
jnp
xchg
jbe
outsb
mov
xchg
sahf
es
scas
fwait
lea
adc
sti
adc
fsubp
mov
das
les
sbb
int
imul
inc
shll
sub
stc
push
push
sbb
sub
pop
dec
imul
stos
scas
mov
ss
sti
subb
push
insl
jge
add
sub
add
decl
sti
fdivr
lret
fmul
inc
dec
mov
mov
jge
outsl
dec
dec
pop
jp
xor
jge
adc
add
sti
cld
fcom
fstpt
addb
sbb
outsb
pop
dec
push
cmp
imul
mov
mov
into
jmp
sti
out
or
sbb
sub
cmp
dec
pop
pop
dec
imul
mov
mov
into
jmp
sti
out
or
jp
mov
inc
add
or
mov
daa
push
int
loope
lret
mov
dec
imul
aas
cmpsb
adc
and
inc
rcll
xor
xor
ja
inc
xchg
fldt
fnsave
nop
shlb
mov
jp
scas
push
mov
inc
jge
add
out
incb
outsb
xor
lahf
and
mov
jmp
sub
pop
cmp
lcall
dec
in
add
xchg
adc
mov
dec
les
dec
and
out
out
mov
mov
movl
sbb
adc
popf
mov
icebp
mov
into
xchg
jbe
sub
xor
add
push
sbb
and
adc
pop
mov
out
xor
sub
in
inc
push
int
inc
cmp
mov
das
dec
sbb
adc
sbb
pop
add
add
insb
cwtl
or
fndisi(8087
ficomps
ret
cld
insb
push
movsb
daa
cmp
inc
mov
dec
adc
xchg
icebp
lock
addr16
pop
add
or
and
sti
and
bound
stos
pushf
addb
cmp
lcall
push
cmc
push
xchg
add
pop
fwait
adc
mov
and
cmp
jge
dec
inc
test
sbb
cld
lods
rolb
sbb
les
daa
cmpsl
jl
add
pop
daa
mov
aaa
mov
dec
mov
mov
jnp
mov
and
xor
daa
or
mov
ss
test
mov
lret
jne
clc
gs
cmc
push
test
orb
xor
xlat
cli
lock
mov
push
in
sub
sub
ja
ret
and
lret
into
test
jmp
and
dec
cmp
jecxz
lea
addl
push
mov
xchg
pop
xor
out
mov
mov
daa
sahf
mov
or
das
sub
inc
xchg
sbb
rcl
push
push
je
stc
push
fiadds
push
push
sub
mov
lcall
jl
or
int3
sub
mov
mov
pop
sbb
gs
cwtl
adc
hlt
iret
jno,pt
aam
jb
mull
pop
mov
test
cmp
xchg
scas
xorl
gs
ss
xchg
push
test
and
aas
cwtl
or
scas
mov
hlt
test
mov
dec
push
mov
test
clc
loope
jmp
ror
int
std
cmp
xor
fimuls
mov
lods
and
jl
orl
rcrl
mov
movsl
push
cmc
lea
fsubs
stos
andl
out
adc
mov
outsl
aam
lock
sub
mov
in
jns
or
sub
cmp
mov
inc
shrb
jle
xchg
outsl
movsl
cwtl
sbb
add
shr
movsl
xchg
fiaddl
inc
loopne
inc
push
lret
and
cmpsb
cmp
in
stos
pop
xor
fiadds
dec
jecxz
shl
mov
jb
and
in
push
mov
enter
cmpsl
push
mov
out
call
bound
imul
jg
test
jmp
jecxz
inc
mov
xchg
jbe
add
sub
xor
mov
adc
mov
and
pushf
sub
jecxz
or
or
xor
pop
jbe
lcall
fstpt
adc
cmp
out
mov
icebp
push
lods
insl
mov
add
lea
popa
cli
ret
or
xchg
imul
push
iret
xchg
ret
mov
jg
ss
push
inc
lret
jl
mov
mov
xchg
inc
cwtl
jge
fsubl
rclb
icebp
push
pushf
jns
jno
ljmp
in
daa
loopne
sarl
popa
fsin
ja
pop
push
adc
push
pop
jno
inc
xchg
adc
dec
pop
fists
pop
cmp
mov
push
ret
fwait
mov
iret
leave
es
or
jb
daa
inc
adc
cmpsb
movsb
and
ret
jp
das
dec
roll
push
adc
push
or
push
jns
jae
ret
mov
call
inc
cli
clc
inc
lahf
jo
jmp
cmp
hlt
mov
sti
pop
and
and
in
aam
xchg
mov
in
inc
fidivrl
cmc
pop
xchg
cmp
push
xchg
je
scas
mov
mov
sub
sub
mov
out
lods
pop
add
mov
inc
add
push
pop
push
xor
add
mov
xchg
mov
cmp
mov
or
mov
inc
and
pop
enter
movsb
js
lret
cmp
dec
mov
fsts
push
add
mov
pop
ret
jp
outsb
dec
mov
ja
stc
test
xchg
inc
xchg
pop
cltd
sti
xor
push
jb
leave
test
je
sbb
or
mov
rcrl
and
pop
lret
neg
jle
rolb
xchg
orl
cmp
pop
mov
ja
jl
adc
js
fcoml
dec
inc
lds
fldl
popf
add
mov
pop
sbb
pushf
inc
inc
sti
enter
push
gs
cmp
loop
cmpb
mov
mov
jne
cmp
mov
and
or
out
outsl
shlb
les
test
or
movsl
adc
into
pop
aaa
repnz
aas
push
mov
pop
lahf
adc
ja
lret
loopne
adc
repz
sub
jmp
movl
fisttpl
ds
add
jns
mov
pop
mov
dec
xchg
add
aas
adc
jecxz
xchg
mov
lock
fwait
ret
data16
push
xchg
cld
outsb
inc
sub
push
mov
leave
jb
sarl
in
std
orl
shlb
mov
stos
jno
stc
scas
aam
jne
mov
fidivl
mov
push
fildl
pop
and
arpl
ret
andl
xchg
add
push
lcall
and
push
lcall
xor
jb
idivl
inc
and
push
in
sahf
aaa
arpl
ljmp
std
loope
and
popf
imulb
jmp
jp
mov
movsl
pop
and
std
cmpb
and
jmp
mov
cltd
stc
cmp
movsl
insl
push
mov
adc
push
and
fldcw
cmp
mov
call
mov
mov
xor
pop
sub
mov
fiaddl
test
jge,pn
mov
xor
mov
repz
or
pushf
fnstsw
icebp
dec
stos
bnd
xlat
push
add
ds
pop
lahf
sbbl
sub
pop
adc
jl
cmp
lahf
into
or
cmc
mov
out
xlat
cmp
arpl
insl
rol
inc
dec
mov
fisubrs
xchg
mov
pop
add
int3
loope
mov
and
fcomps
loop
jmp
or
loopne
ja
xor
mov
ror
mov
xchg
gs
inc
test
rcll
xchg
in
pop
or
dec
fdivrp
rol
add
stos
lods
jl
sbb
inc
insb
mov
jp
pushf
xchg
pop
inc
xchg
cmpb
xor
cwtl
sub
jo
sub
scas
and
jp
inc
cmp
and
and
lods
sub
adc
aaa
inc
add
and
inc
or
sti
mov
addr16
fistps
testl
test
stc
dec
cmpsl
fisubrs
or
pop
cmpsl
arpl
rcll
sbb
cwtl
jge
pop
shl
push
inc
cmpsb
fisubs
aas
pusha
xor
mov
lods
lods
mov
js
clc
cmp
lods
mov
cmpsb
inc
lods
xchg
or
fsubrs
xor
sahf
test
or
andl
push
and
add
shll
xor
cmpsl
and
inc
mov
lea
dec
jl
rorl
adc
movsb
mov
nop
js
sub
xchg
sahf
out
cmp
and
je
adc
push
inc
mov
mov
push
push
adc
jo
or
push
ret
xchg
xchg
pop
cmp
ret
leave
repnz
je
mov
pop
sahf
ret
clc
subb
popa
pop
and
pop
loope
addr16
xor
cmp
cmp
imul
fcomps
cld
ret
gs
imul
data16
call
jo
ja
xchg
or
imul
hlt
shlb
mov
mov
mov
rorl
movsb
inc
clc
push
pop
inc
inc
or
push
and
add
xchg
mov
pop
lods
je
and
xchg
insl
cmpsb
sub
xor
je
lret
push
xorl
sbb
jle
in
pusha
jae
repz
mov
jnp
inc
loope
call
or
sti
scas
fadd
mov
flds
mov
push
and
push
movsl
hlt
pop
das
stos
enter
jecxz
pop
xor
sub
adc
notl
mov
mov
and
aam
sub
aas
aam
mov
xchg
in
or
push
fwait
xor
pop
sbb
or
mov
inc
imul
mov
loopne
sub
sti
enter
fdivl
xchg
sahf
jae
sub
adc
hlt
mov
pop
pop
daa
inc
pusha
out
out
dec
mov
sbb
rcll
xchg
xchg
mov
ret
out
jg
mov
xor
jmp
out
ss
sarl
js
mov
xchg
pop
je,pt
or
fstp
sub
inc
ss
xchg
repnz
inc
pop
xor
lret
imul
negl
out
nop
adc
mov
mov
ds
aaa
and
adc
dec
xchg
lret
sbb
popa
call
mov
dec
dec
jg
ss
xor
movsl
test
fcmovu
pop
addl
dec
mov
pop
jno
fdivrs
mov
push
stos
ds
outsl
add
loopne
inc
lahf
xor
jne
adc
not
mov
lods
loop
addb
adc
daa
push
jmp
push
leave
dec
add
jno
sub
gs
jle
pop
inc
imul
pop
addr16
bound
xchg
add
mov
add
cld
dec
cld
jnp
xor
cmp
xchg
std
adc
and
mull
cmc
stc
in
add
pop
outsb
imul
ljmp
aaa
pusha
xor
popa
pop
mov
xor
add
data16
fwait
push
fsubs
xchg
clc
mov
jae
add
aaa
push
sub
mov
fsts
inc
shrb
push
mov
push
incb
sub
lea
mov
mov
notl
stc
push
scas
ffreep
fadd
add
loopne
pop
ror
push
adc
lcall
mov
cmp
addr16
pop
cmp
dec
push
push
mov
push
cld
or
std
pop
mov
scas
pop
or
in
mov
jle
lret
xorb
cmc
stos
shl
lea
fcoml
xchg
dec
push
or
ror
jno
mov
enter
cmpsb
push
stc
fcoms
inc
pusha
cmp
adc
xchg
test
jo
cmpsl
cmpsb
inc
add
clc
push
ds
mov
fwait
mov
and
aas
inc
rolb
push
inc
insl
jae
inc
xchg
mov
sbb
sub
into
les
jae
int3
lea
lock
adcb
or
subl
mov
or
xchg
mov
pop
xlat
pop
out
mov
mov
add
push
rcl
enter
and
mov
mov
xchg
push
test
add
popf
das
push
push
stos
sub
inc
in
pop
leave
add
pop
xchg
pop
pop
test
adcb
add
or
cld
repnz
dec
fisubrs
icebp
icebp
xor
fistpll
cmp
test
pop
rorb
push
nop
fwait
into
xor
or
sub
das
and
jge
xchg
xor
arpl
xchg
mov
scas
pop
mov
enter
mov
lret
repz
cmp
mov
sti
stos
xor
dec
pusha
dec
clc
sahf
pop
adc
add
sub
mov
leave
xchg
lret
lcall
xchg
cmc
mov
movsl
or
jmp
lds
xchg
adc
call
ds
add
stos
mov
mov
loopne
and
mov
and
cli
push
imul
jp
or
ret
pop
jns
dec
cmp
adc
sub
lahf
shr
add
daa
aad
push
sbb
adc
subl
xchg
pusha
cltd
insl
aas
mov
jge
orb
push
scas
stos
pop
or
mov
fildll
jnp
sub
add
test
ds
ljmp
adc
ret
mov
or
out
add
sahf
sbb
imul
xchg
sbb
iret
sub
lcall
xor
test
cmp
test
cli
push
push
aam
test
dec
pop
and
and
ss
or
cmpsb
testb
add
push
ja
daa
insl
sbb
loopne
ror
aaa
test
or
adc
in
cmp
insl
fbstp
andl
mov
xor
mov
jge
jmp
icebp
ljmp
hlt
cmp
cmp
scas
mov
fsincos
fistl
fld
js
xor
shll
sub
mov
insl
lods
call
sub
testl
icebp
cmp
nop
mov
mov
mov
outsb
jb
decb
idiv
negb
sub
push
xchg
cmp
les
fildll
lods
adc
mov
lret
insb
xchg
pop
fstps
icebp
cmp
std
out
add
push
push
mov
sarb
jns
sbb
scas
inc
mov
inc
out
xchg
insb
test
inc
test
mov
pushf
xchg
int3
cmc
into
jp
negl
push
sbb
nop
xchg
arpl
enter
mov
xchg
imul
lds
inc
test
jecxz
mov
inc
movaps
jne
dec
or
cltd
mov
ja
mov
or
lods
lods
xchg
sub
cmp
shrl
pop
mov
mov
xchg
xchg
lods
xor
fidivrs
je
mov
imul
adc
mov
enter
jmp
leave
push
cmpsb
jg
ret
push
jb
addr16
sub
jae
mov
dec
push
push
ret
push
jecxz
jnp
arpl
dec
cld
fdivr
push
mov
cmpsl
rcrb
xchg
push
jp
iret
mov
xor
mov
imul
int3
mov
and
dec
ficoms
test
and
jge
push
jle
fs
fmul
pop
cmp
sahf
cmc
ret
ljmp
and
out
or
lds
inc
sarl
jle
ret
aam
fstps
mov
inc
hlt
mov
adc
jnp
jbe
mov
dec
aas
jmp
out
mov
leave
mov
out
pop
ret
iret
mov
inc
mov
sub
addr16
mov
sub
hlt
out
mov
faddl
ja
aam
jo
mov
xorb
and
je
or
push
adc
es
cltd
ss
dec
cmp
mov
push
pop
bound
cvttps2pi
mov
scas
xchg
mulb
sbb
mov
mov
xor
mov
pop
inc
inc
shlb
lea
movsl
cltd
xchg
les
add
fwait
push
jae
push
iret
icebp
lock
popf
xchg
and
mov
fincstp
jg
dec
mov
lahf
outsb
shrb
roll
in
aas
sbb
push
shl
test
jecxz
add
bound
rcr
adc
jae
outsl
jg
sub
imul
lahf
fs
sbb
scas
push
outsb
push
and
xor
mov
fwait
popf
or
aam
rcrb
inc
out
or
sbb
add
mov
add
mov
cmp
fnstsw
pop
inc
or
push
ret
jecxz
fnstsw
adcl
mov
cmp
jb
push
scas
out
jg
sti
mov
adc
jae
xor
adc
ret
cmpb
cli
xlat
jl
les
xchg
call
dec
and
shrl
sub
addr16
arpl
test
mov
mov
sub
dec
xor
lret
in
je
jmp
lods
jne
mov
ret
fsts
mov
jg
cmp
out
add
mov
icebp
sub
adc
pop
or
mov
xchg
and
mov
mulb
lods
mov
dec
xorl
sbb
and
jmp
xchg
mov
stc
jge
and
std
popa
mov
pop
or
mov
or
pop
pop
rclb
pop
jp
xchg
cmp
into
mov
mov
xor
cli
xchg
lret
adc
xchg
pop
adc
je
xchg
adc
test
xor
sub
mov
test
lcall
mov
sub
std
sbb
adc
mov
call
add
mov
xor
add
pusha
mov
loope
popl
xchg
aam
lahf
fldt
lcall
cmp
lods
mov
daa
xlat
adc
or
addb
jns
iret
clc
imul
lahf
addb
sbb
test
mov
jmp
aas
adcb
sub
rcrb
xor
rcrb
xor
add
sub
mov
movsl
sbb
gs
int
ficomps
jmp
adc
int3
jnp
xor
lea
xchg
sbb
push
sbb
leave
fisubl
push
imul
sarb
mov
push
popf
cmp
mov
mov
sbb
inc
scas
out
push
jge
jp
dec
das
adc
lods
int3
rcrb
loop
test
lock
adc
repz
ret
jg
nop
shlb
andl
jge
loope
jg
jge
push
pop
dec
or
lods
sbb
int3
push
in
scas
aam
mov
push
in
fwait
les
dec
push
and
mov
mov
imul
jne
jmp
js
sbb
ljmp
dec
push
add
dec
call
rorb
xlat
mov
cmp
lret
adc
and
loop
fs
push
push
xchg
add
movsl
aaa
mov
push
fstl
js
scas
sub
pusha
lret
cmp
or
add
mov
sbb
or
sahf
or
out
cmp
and
aaa
dec
mov
int3
sbb
xchg
cmpsb
mov
mov
jmp
ja
cmp
sub
add
hlt
ljmp
add
sbb
add
insl
adc
cmc
mov
arpl
add
pop
jo
addr16
and
aas
sahf
lods
mov
cmp
scas
and
fwait
pop
cmp
iret
cwtl
sbb
or
mov
pop
cmp
or
jae
cmc
out
in
and
shll
or
xchg
test
jecxz
sub
sbb
cmp
cltd
fsts
add
outsb
push
jbe
pop
mov
mov
lret
push
sub
pop
jmp
jg
ds
xchg
inc
sub
push
outsb
mov
cld
push
push
add
jne
addr16
add
fistps
sub
loope
sbb
inc
outsb
aaa
scas
icebp
gs
loop
xchg
mov
mov
in
iret
daa
xchg
inc
jg
aam
cmpsl
subb
outsl
jbe
lock
stos
inc
cwtl
das
jg
dec
xor
jmp
add
lods
lods
mov
mov
jmp
jnp
cmp
arpl
ret
xchg
out
hlt
andb
repnz
push
pop
shrb
jecxz
adc
xor
shlb
lods
out
mov
rcl
test
aas
stos
sahf
mov
fbld
push
dec
cwtl
cmp
inc
cld
daa
dec
and
mov
neg
jge
insb
add
test
jp
dec
loopne
cli
mov
xor
jne
pop
jp
data16
mov
out
in
fdivs
bound
mov
out
test
movsb
in
inc
add
sbb
inc
push
cmpsb
push
or
lea
mov
jp
sbb
out
pop
pop
lahf
xchg
mov
bound
std
push
imul
adc
dec
and
cltd
dec
shl
sarb
nop
or
scas
and
cli
pop
mov
jl
sub
push
mov
movsl
scas
insl
cwtl
lcall
leave
push
add
mov
and
cltd
mov
sub
and
fnsave
push
div
aas
pop
push
push
jge
pop
call
cmp
dec
pop
pop
dec
imul
mov
mov
into
jmp
sti
out
or
sbb
sub
cmp
dec
pop
pop
dec
imul
mov
mov
into
jmp
sti
out
or
sbb
inc
cmp
dec
pop
pop
out
jle
outsb
mov
mov
into
ljmp
push
sub
cmp
dec
pop
pop
dec
jmp
sti
outsb
je
fs
mov
push
xor
add
adc
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
fwait
lods
sarl
in
loop
andl
push
sbb
insl
push
jge
pop
xor
sarl
in
xchg
cld
mov
sub
cmp
or
adc
xor
enter
jmp
cld
mov
sub
pop
or
sub
sub
mov
ror
lods
fistps
adc
scas
test
push
jne
in
or
mov
cwtl
shrl
inc
cld
outsb
jno
inc
js
mov
ret
sahf
repz
mov
hlt
mov
jl
pop
xor
mov
test
cmp
xchg
push
inc
mov
notb
add
test
dec
les
ret
popa
lret
test
popa
cmp
pop
and
mov
addr16
adc
shrl
sbb
aas
adc
leave
mov
scas
xor
mov
lcall
jns
jecxz
jge
sub
dec
xor
loope
out
xchg
in
mov
mov
sub
cmp
or
sbb
insb
or
sub
mov
mov
test
xchg
fucom
stos
cld
mov
pop
push
and
insl
sbb
inc
ds
cmp
rcl
test
repz
scas
mov
inc
dec
push
dec
and
add
or
push
sub
or
jmp
xchg
cld
mov
sub
cmp
or
sbb
insb
adc
xor
sarl
in
xchg
cld
mov
sub
cmp
or
sbb
insb
adc
xor
adc
sbb
addr16
adcb
jecxz
dec
ret
test
or
pop
pop
andb
repnz
cmp
pop
and
sbb
jbe
push
fsubs
mov
xor
sbb
push
cmp
sbbb
cmp
mov
cld
mov
shlb
test
mov
cli
decl
and
ret
cmp
push
imul
mov
mov
lcall
daa
or
and
jmp
rorl
pop
pop
sbb
popf
mov
jmp
pusha
daa
xor
xor
cmp
cmpl
lds
int
add
fdivs
int3
mov
fwait
or
pop
xchg
dec
pop
xlat
mov
pop
mov
aaa
jle
mov
xchg
jno
mov
adcb
pop
inc
xchg
xor
push
enter
aaa
sarb
in
nop
sbb
lds
adc
push
add
je
nop
aad
xchg
scas
js
push
push
add
mov
ljmp
ss
imulb
jmp
pop
cmp
aad
daa
mov
fidivl
inc
dec
mov
jle
pusha
xor
scas
sub
test
vpmuludq
cmp
fwait
stc
or
mov
or
ss
push
fnstenv
cmpb
testb
xor
das
sub
icebp
in
xchg
sbb
ss
je
xchg
mov
mov
cmp
pushf
loope
pop
dec
into
and
inc
out
mov
idiv
pushf
mov
aam
fdivs
fisubs
iret
sbb
lcall
scas
and
sbb
sub
mov
dec
outsl
xchg
rol
fisttpl
stc
push
cmp
xor
lret
cwtl
jle
mov
iret
jbe
ljmp
dec
push
movsb
pusha
and
add
lcall
add
loopne
std
leave
dec
pop
lock
dec
out
int3
addr16
ret
insl
xlat
inc
icebp
sahf
sbb
inc
pushw
fldt
or
addb
cmp
es
jae
pop
jmp
mov
sub
mov
adc
popa
test
mov
xchg
in
push
rcrl
aad
sub
mov
je
fisubl
clc
cmp
movsb
loopne
lock
outsb
test
xor
dec
xchg
push
pop
cmp
in
cwtl
lds
testl
jg
imul
dec
imul
inc
add
in
cltd
sbb
dec
inc
cmp
mov
cmp
jmp
mov
mul
into
jmp
cvtdq2ps
dec
dec
cli
xchg
rorl
loop
jl
and
notl
jo
jae
mov
mov
or
loop
fmuls
sub
dec
popa
loopne
mov
fidivrl
adc
xor
repz
aam
daa
pusha
ljmp
sar
ret
inc
movsl
jb
mov
xchg
fsub
push
jo
je
out
jl
shrl
pop
jnp
sub
mov
sub
test
int
pop
fdivrs
cwtl
sub
movsl
shlb
sbb
adc
cmc
and
mov
xchg
lea
mov
add
test
lea
jno
daa
rcrb
push
cmp
aam
cmp
pop
rcrl
sbb
mov
divb
outsb
inc
adc
es
add
xchg
test
mov
inc
aas
mov
dec
push
ret
paddusw
pop
pop
mov
sbb
pop
jp
in
xchg
shrl
add
aas
mov
push
shrl
fsts
das
adc
xor
push
pop
dec
xchg
insl
cmp
and
std
jg
dec
inc
and
lahf
pop
lret
push
lret
and
add
dec
cmp
and
sub
xor
insl
dec
dec
mov
push
mov
cli
xor
pop
repz
stc
sub
outsb
jle
fistpl
inc
or
mov
xchg
and
stc
mov
imul
or
pushf
gs
fiaddl
leave
loopne
pusha
int3
mov
mov
out
push
movsl
jmp
daa
jmp
std
rdrand
xor
lock
test
cmp
out
inc
xchg
cmc
sbb
inc
sbb
or
or
fwait
sub
xlat
into
inc
scas
pop
pop
icebp
push
lock
xchg
rcll
add
xchg
scas
stc
mov
ljmp
movsl
outsb
testb
sahf
mov
push
add
push
push
jne
push
push
cld
mov
ss
xchg
hlt
inc
and
jmp
test
adc
notl
dec
call
sbb
repz
xchg
shlb
or
jnp
pop
iret
addl
fwait
lret
lock
in
jns
shll
cmp
dec
pushf
push
gs
leave
inc
jae,pt
push
ds
cmpb
mov
pop
cmpsl
imul
push
inc
inc
rcll
cmp
dec
jns,pn
fldt
inc
lds
lods
push
inc
loopne
orb
testl
xor
xchg
push
nop
mov
fldcw
and
jae
test
jle
dec
inc
cwtl
ret
out
mov
cmp
xchg
sbb
xchg
pushf
mov
mov
into
sbb
mov
jbe
jbe
icebp
mov
pop
lahf
stc
sub
push
cltd
cmpb
inc
or
pop
and
out
sub
fucomi
mov
pusha
and
mov
mov
mov
dec
xchg
jns
push
add
fmul
and
mov
adc
imul
pop
xchg
stos
xor
jns
mov
fisubrs
mov
mov
inc
cmpl
cmp
mov
push
dec
dec
test
js
fwait
daa
mov
pop
lcall
jno
push
mov
into
aad
fcmovnu
hlt
cmp
test
jmp
jnp
jmp
mov
lret
stc
sbb
inc
mov
pop
xor
jno
sbb
pop
lret
pop
out
cwtl
das
jns
neg
cmpsb
inc
and
aad
jmp
test
cmp
pop
lahf
into
sbb
jmp
sbb
inc
call
or
lds
data16
sbb
ljmp
and
push
fcmovnb
ljmp
inc
insb
gs
loope
sbb
in
mov
dec
test
lock
pop
ds
les
stc
jo
pop
jecxz
cmc
pop
adc
or
xchg
mov
cltd
push
rcll
jg
addr16
xor
or
push
or
cmp
adcb
push
and
movsb
dec
xchg
je
inc
jne
sar
pop
out
push
jns
loopne
mov
inc
lods
scas
outsl
mov
mov
repz
sti
addl
inc
sub
not
cltd
xchg
mov
out
add
movsb
push
rcrl
js
adc
push
cmp
arpl
mov
imul
sbb
xor
std
cli
xchg
jo
mov
dec
mov
xor
enter
aaa
adc
lahf
xchg
sbb
pop
mov
dec
sti
cld
rorl
and
and
imul
and
adc
out
dec
inc
je
add
pushf
leave
and
dec
test
mov
mov
dec
xchg
fisttpll
adc
shrb
mov
pop
and
cmp
push
sbb
adc
push
mov
lret
repnz
adc
pop
push
and
movsl
jge
fildl
pop
in
adc
push
lea
mov
jge
int3
ret
inc
jmp
cld
jle
or
lcall
lods
adcb
pop
add
mov
jl
aas
jge
idiv
shl
xor
sub
pushf
pop
in
pop
jecxz
gs
fistpl
jns
fisubl
rcll
lods
mov
subl
mov
sub
dec
dec
and
mov
out
int
fcom
out
leave
push
adc
jbe
jno
mov
and
int
in
shll
es
and
mov
adc
dec
jg
ds
data16
in
leave
loop
mov
pop
aas
bound
and
push
push
inc
imull
lea
adc
je
sub
data16
jle
dec
inc
clc
idiv
fsubl
cmpl
fcomps
scas
fnstcw
mov
ljmp
ret
push
lcall
enter
ja
sbb
xchg
jb
xor
int
call
leave
fdiv
adcl
in
and
scas
mov
inc
fidivl
stos
lods
pop
mov
xor
push
jp
pop
je
or
loop
sbb
adc
loopne
jo
bound
out
in
sbb
dec
ss
inc
sbb
add
push
cld
movl
out
into
dec
into
mov
imulb
jp
mov
fld
ret
out
mov
xchg
das
mov
dec
mov
std
bound
adc
mov
bound
ffreep
adc
xor
cld
mov
sub
push
mov
outsb
fisubl
roll
sbb
insb
and
and
roll
and
jb
xchg
loopne
cmc
add
push
out
ljmp
sbb
add
arpl
fwait
fwait
jge
mulb
test
mov
cmp
sub
call
cmpsl
outsl
in
call
ljmp
pop
fyl2x
subl
imul
jbe
dec
xchg
mov
sub
cmp
cmp
testl
xorl
insb
js
popa
push
stos
inc
into
flds
fisubrl
adc
jp
sbb
outsb
and
outsb
push
jg
adc
mov
push
sub
aas
das
arpl
jmp
stos
mov
xor
push
xchg
add
aam
idivl
fwait
inc
cmp
nop
shrl
int
adc
mov
stos
lock
fisttpll
xor
cld
insl
cs
dec
ret
pop
aaa
mov
push
mov
int
fimull
cs
sarb
push
bound
xchg
and
mov
in
cmp
jmp
xchg
out
push
subl
xor
ret
add
mov
pop
pop
push
push
lods
adc
pop
orl
mov
cmpl
adc
subb
mov
jns
fucomi
lahf
scas
mov
jne
and
ljmp
ljmp
push
xor
lods
repnz
loop
jle
jecxz
arpl
in
mov
lret
jg
daa
dec
shll
rolb
mov
in
xchg
pop
test
sub
jge
repz
adc
clc
pop
data16
inc
xor
cmp
cs
pop
jp
fidivrl
out
and
scas
mov
xchg
xchg
jmp
dec
bnd
sub
enter
push
sub
xchg
fs
mov
add
stos
mov
xor
cltd
mov
sahf
test
vmwrite
add
lock
imul
dec
aas
inc
fildll
mov
jnp
mov
inc
mov
les
notb
xor
inc
test
jne
mov
xchg
push
outsb
fwait
loop
xchg
jp
add
and
fdivrs
xchg
fsubl
lret
push
incl
inc
add
pop
pop
dec
mov
mov
test
push
ja
loopne
inc
mov
testb
cltd
sbb
xor
and
push
pusha
xor
icebp
ja
push
loopne
iret
out
ror
cmp
std
inc
xchg
sub
out
lods
fsubp
ficomps
sbbl
hlt
mov
orb
push
fcmovu
or
pop
pusha
sbb
stos
ret
pop
push
inc
sbb
or
cmp
fs
stc
sub
add
mov
out
adc
fwait
jns
mov
cmpsb
in
dec
fldl
add
adc
jo
fisubs
cmc
pop
push
dec
mov
inc
fs
pop
repnz
add
mov
dec
lcall
test
cwtl
and
xchg
pop
push
xor
pop
jns
rcrb
fs
mov
dec
jae
ja
pop
and
mov
and
mov
ljmp
add
xchg
push
mov
popa
std
and
into
and
or
fistl
sbb
xchg
cld
mov
bound
mov
mov
scas
fdivrl
mov
cld
xchg
iret
push
shr
in
loopne
push
fstl
repz
and
lcall
loopne
push
dec
mov
ret
outsl
lods
imul
jne
jne
js
dec
std
push
xchg
xchg
stos
jbe
mov
bound
adc
jns
adc
push
ret
add
icebp
imul
mov
cmp
or
push
loope
lea
lods
xlat
leave
std
test
dec
xchg
sbb
or
leave
jecxz
dec
mov
xor
sbb
icebp
xor
ret
mov
subl
xor
dec
xor
mov
clc
jb
cmp
or
and
sti
enter
fstpt
sub
push
inc
rolb
dec
sub
pop
in
sti
dec
dec
mov
pop
shrb
in
and
rcll
mov
lahf
int3
cwtl
jo
lret
mov
dec
push
jg
xor
fisttpl
jns
std
je
aaa
and
jmp
dec
xor
and
add
adc
js
mov
adc
xchg
int
inc
pusha
insl
and
inc
ds
xor
aaa
mov
fcomi
insb
push
cmp
or
cs
test
ljmp
mov
pop
mov
test
cmp
jae
lods
push
icebp
cmpb
lea
pop
pop
xor
cld
out
pop
jp
cmp
xchg
mov
lcall
fwait
ret
xchg
sub
push
cmp
jp
pop
sbb
loop
jge
dec
je
sub
imul
sub
cwtl
fsubrs
das
loop
outsb
imul
push
push
and
xchg
adc
jbe
adc
inc
scas
xchg
out
stos
or
mov
leave
fs
fldcw
out
inc
add
idivl
ret
sub
cmpsb
and
cmp
das
xor
dec
push
scas
and
mov
add
and
stos
xor
inc
jo
xchg
jb
cmc
xor
ss
fidivl
shl
int3
cwtl
inc
jecxz,pt
shll
adcb
adc
mov
in
mov
dec
push
shrl
popa
out
xchg
xlat
mov
cmp
roll
inc
fldt
loopne
ret
sub
xchg
jbe
inc
mov
mov
cld
xlat
pop
ja
shrl
popf
mov
pop
scas
ljmp
dec
add
sub
arpl
cmp
shll
adc
nop
jnp
addr16
mov
or
cld
movsb
push
dec
aas
bsf
imul
rcrl
adc
push
and
jecxz
adc
xlat
mov
loop
fistl
test
jecxz
int3
push
mov
xchg
andl
cmc
sbbb
call
stc
fucomi
dec
loop
jmp
iret
push
repz
aam
bound
lods
push
inc
outsb
lret
fsts
loope
and
fiaddl
xchg
jl
push
das
pop
roll
sbb
jge
mov
ss
call
xchg
into
push
push
js
lahf
mov
fistps
jne
dec
fsubs
cmp
lds
psubsb
scas
lods
in
ljmp
out
shrl
push
xchg
sbb
inc
shl
xor
add
lret
cmp
mov
filds
fcoms
cmp
mov
add
icebp
jecxz
fistpl
fistps
lods
or
pop
neg
subl
jne
inc
sub
fdivs
stos
mov
xchg
nop
out
das
fisubs
add
sub
jbe
and
xchg
or
or
js
lds
jl
jbe
dec
push
fs
fldt
int
aas
clc
mov
mov
fwait
rcll
fs
or
addb
aad
pushf
mov
js
add
test
cmp
cwtl
shll
ljmp
adc
sbb
lahf
jns
es
xor
mov
jecxz
lret
movsl
insb
or
ficoms
mov
das
addr16
test
xor
outsb
or
push
test
mov
mov
js
add
in
gs
loope
dec
cwtl
adc
cmp
jb
sbbl
xchg
xor
int3
dec
das
in
adc
rclb
pop
push
xorl
das
enter
in
rcll
fldl
push
in
pop
push
adcl
filds
sub
ret
les
subl
jns
xchg
loopne
mov
lock
mov
aam
mov
mov
lret
out
jecxz
not
push
iret
outsb
pop
fmuls
repz
push
mov
sbb
loop
dec
or
inc
imul
mov
leave
hlt
hlt
daa
jb,pn
fstpl
mov
iret
int
or
shrl
popf
popa
push
sbb
cld
push
sub
inc
sbb
das
mov
in
add
pusha
or
push
pop
inc
jp
test
into
test
or
fstps
or
ret
divb
int3
test
mov
pop
out
scas
mov
and
lea
stos
cmpsb
push
loop
or
call
add
cmpb
push
movl
andb
loopne
std
sbb
jno
dec
jo
and
icebp
pop
pop
push
mov
repz
neg
cmpl
sub
lret
loope
mov
test
scas
outsl
imul
sub
in
cmp
orb
jno
ljmp
movsl
andl
xchg
in
xchg
lds
ljmp
push
shl
sub
cmpsb
pop
imul
test
xor
push
fbstp
xor
sub
mov
push
jmp
xor
daa
xor
ret
cli
test
jecxz
mov
jne
push
and
sub
mov
stos
ss
aad
mov
xchg
imul
test
mov
xchg
mov
rcr
mov
xor
add
jl
cmpl
pop
ljmp
sahf
gs
out
jmp
sub
faddp
mov
nop
mov
dec
push
push
adc
push
pop
mov
inc
fldln2
daa
jmp
mov
popa
cmp
mov
sub
push
cmpl
jecxz
sarb
xchg
repnz
and
outsl
adc
or
and
fdivl
pop
lret
xchg
mov
test
sbb
xor
jg
aad
scas
shll
push
sub
mov
xor
inc
xchg
test
jmp
pop
mov
jae
and
xchg
and
pusha
dec
xchg
xor
cs
xor
imul
xlat
mov
push
loopne
mov
call
mov
ljmp
mov
mov
xor
sbb
or
sbbl
clc
dec
aam
test
das
mov
sub
or
pop
sub
adc
push
inc
ja
and
add
sub
xchg
outsb
lahf
and
filds
inc
mov
xor
jmp
inc
pop
mov
shlb
pop
mov
fstp
iret
cmpb
xor
out
pop
scas
sbb
sahf
mov
dec
sub
xor
cmp
sub
in
dec
cmp
fdivrs
add
int
lret
xor
fbld
and
mov
sub
mov
ljmp
lock
jae
sbb
or
xchg
fldenv
into
ljmp
addr16
jb
xchg
mov
push
outsl
adc
mov
push
mov
insb
jle
jbe
pusha
and
es
dec
in
mov
cli
jne
mov
pop
mov
pop
sub
cmp
lret
xchg
and
insl
bound
fwait
jo
mull
pop
adc
lahf
mov
mov
or
arpl
aam
push
shrl
cmp
jo
loope
jne
ret
sub
lds
iret
loopne
inc
popa
out
aaa
adc
out
cmp
out
cs
pop
lea
add
dec
data16
pop
fldt
inc
sbb
into
insl
add
lcall
push
aas
dec
or
cmpb
mov
test
sahf
xchg
ja
add
stos
adc
scas
fwait
sti
sub
rcrb
jl
loope
jge
roll
mov
call
imull
xor
mov
and
jp
or
cs
push
and
ljmp
imul
cs
sbb
loopne
jbe
pop
idivb
pop
sub
push
testl
push
push
jge
lock
pop
pushf
test
add
fs
push
nop
into
mov
jae
push
xor
push
dec
icebp
sbb
dec
fsubrs
push
pop
push
mov
stos
lahf
xchg
fisubs
mov
sub
mov
inc
sub
cmp
or
sbb
insb
adc
xor
sarl
in
xchg
cld
mov
sub
cmp
or
sbb
insb
adc
xor
sarl
in
xchg
cld
mov
sub
cmp
or
sbb
insb
adc
pop
cmc
lods
in
xlat
mov
pushf
sub
xor
sub
xchg
lret
or
imul
sbb
into
mov
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
