mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
lock
add
inc
not
pop
push
push
clc
ret
aad
jmp
mov
call
mov
push
add
jp
cmp
popf
fsubs
xchg
sub
mov
popa
sti
mov
clc
enter
pop
and
push
cmpsb
pusha
push
push
push
push
insl
jae
ficoms
sub
inc
dec
add
shl
jo
not
ror
mov
sub
lcall
add
repz
jbe
aaa
push
inc
inc
loopne
rclb
ret
fistps
mov
out
fld
push
pusha
or
add
sub
sbb
out
push
push
adc
sbb
push
sub
dec
xor
not
sbb
clc
lea
out
cmp
lcall
andb
cmpsl
stos
out
ds
cmpb
xchg
push
inc
ret
bound
repz
mov
mov
adcb
push
push
cmp
adc
sbb
call
sbb
dec
mov
das
cmp
int3
pop
inc
mov
push
pop
mov
or
add
lea
rolb
not
pop
push
add
das
jnp
bound
inc
leave
leave
faddl
or
call
cmp
xchg
push
push
push
lea
sbb
push
hlt
je
jp
test
add
hlt
add
add
les
lea
addb
inc
cmpsl
add
outsl
in
out
and
dec
adc
loopne
inc
inc
or
aam
in
push
and
lock
faddl
push
add
push
dec
lahf
mov
sub
lea
mov
popf
mov
ret
xchg
mov
xor
xor
out
mov
addr16
mov
pop
pop
pop
push
pop
pop
pop
inc
push
fwait
test
or
loope
mov
add
dec
dec
in
and
fisttpl
adc
mov
imul
sub
iret
add
rcrb
pop
shrb
pushf
push
adc
push
mov
movb
ror
sarb
inc
mov
sbbl
stos
sti
mov
or
jmp
add
mov
lods
sti
add
mov
or
jg
add
cmp
movsb
sbb
rcrl
clc
sbb
add
subl
dec
xchg
adc
add
adc
pushf
pop
xchg
mov
clc
pop
and
jmp
xchg
cld
inc
sbb
pop
cmp
jne
mov
and
ljmp
add
pop
mov
xlat
push
test
or
mov
test
in
adc
mov
adc
push
lea
ja
or
ret
or
cmpsb
pop
mov
xor
sub
call
inc
addr16
push
jmp
push
sarb
sub
xchg
and
adcb
sbb
or
adc
pop
cmp
and
and
push
add
adc
dec
mov
cld
pop
aam
dec
dec
roll
andb
fwait
ss
pop
sub
dec
inc
mov
adc
leave
pop
push
and
pop
adc
dec
lea
mov
mov
test
loopne
mov
pop
int3
push
push
or
push
inc
add
push
push
push
nop
iret
call
and
or
add
sub
sarl
stos
add
bound
mov
xor
mov
cmp
lock
pop
rclb
incb
push
daa
sub
pop
nop
pop
push
icebp
call
sub
aad
or
pop
iret
jecxz
lds
nop
add
icebp
xor
movsl
les
bound
loopne
add
clc
dec
xor
mov
add
push
push
lea
dec
lods
mov
mov
lock
push
mov
out
mov
dec
pop
xlat
test
and
mov
dec
mov
test
cmp
lds
lea
adc
dec
push
xor
or
loopne
ljmp
mov
lret
cmp
or
rcll
dec
adc
shr
repnz
fnstenv
push
outsl
nop
ja
cld
and
out
mov
push
fcmovb
jmp
pusha
ret
imul
pop
pop
push
push
jb
xchg
push
xor
int3
shll
fldcw
dec
push
xor
clc
cwtl
pop
lret
xor
push
lcall
inc
xor
jg
sbb
mov
aam
jecxz
push
add
push
push
test
ud2
mov
out
or
imul
shl
cltd
lret
cmp
sbb
push
into
sahf
add
fsubrl
pop
nop
lret
push
mov
or
add
popa
movsb
into
inc
shrl
dec
sub
cmp
jb
dec
adc
mov
dec
or
in
push
xor
push
sub
lea
mov
mov
adc
jl
pusha
pop
pop
sbb
sub
mov
pop
imul
push
push
lea
shlb
stos
std
or
test
adc
sbb
jecxz
das
bound
sub
leave
pop
repnz
lcall
nop
lock
pushf
sub
add
or
adc
adc
push
adc
push
adc
add
pop
adc
push
cli
mov
pusha
mov
xor
add
loopne
pop
inc
mov
rcrl
inc
enter
inc
shl
repz
xchg
rcrb
push
push
push
out
movsb
mov
idivl
out
je
fwait
xor
mov
adc
mov
or
add
shr
mov
mov
mov
popf
add
add
push
outsl
push
adc
xor
out
or
sbb
dec
inc
push
sub
test
dec
not
inc
roll
icebp
dec
xchg
pop
pop
rolb
not
lea
cmp
aas
push
sub
dec
icebp
lea
jbe
jle
sbb
jne
jg
pop
push
or
xor
push
jns
adc
cwtl
stos
mov
movl
cld
test
push
sub
mov
fimull
orb
iret
pop
jno
add
dec
fisttps
adcl
dec
loopne
ljmp
pop
cmp
or
ja
ds
sbb
adc
push
out
pop
jp
fneni(8087
add
lret
jns
popf
shll
mov
cwtl
hlt
pop
imul
push
out
or
xchg
push
ret
cmp
or
mov
push
shrb
lds
shlb
daa
xchg
jge
jno
addl
mov
enter
and
adc
pusha
enter
jl
add
cmpsl
xor
ror
neg
sub
iret
or
xorb
inc
enter
out
pusha
clc
add
xor
jno
adc
insl
filds
rolb
add
into
mov
cmc
bound
stc
xor
push
push
icebp
pop
sbb
sub
add
cmc
lahf
push
xchg
push
lea
jnp
or
cmp
dec
movsb
sub
dec
xor
scas
cli
jecxz
mov
jb
and
add
rorb
adc
leave
lret
mov
mov
psrad
or
in
or
loope
out
loop
pop
aam
mov
add
add
push
mov
push
sbb
add
jle
test
data16
sub
mov
loop
push
int
pop
push
adc
jnp
xorl
cld
mov
add
push
mov
dec
sub
shrl
push
or
mov
dec
add
jo
xor
add
xor
je
jmp
mov
mov
push
ds
rorl
je
sub
mov
push
push
test
add
sbb
xchg
sarb
mov
sub
test
mov
repz
fcompl
push
push
inc
cmp
rcl
and
pop
lods
pusha
ret
mov
cld
mov
js
jbe
pushf
mov
dec
pop
pop
push
pop
sbb
mov
dec
xor
pop
es
add
test
sbb
pusha
popa
push
or
rcl
daa
xlat
or
pop
xchg
lea
pusha
push
cmpsb
sbb
xchg
out
xchg
out
dec
les
inc
push
push
xor
adc
xor
push
sbb
cld
sarl
xor
cmp
jbe
shl
imull
adc
test
xlat
fldl
nop
pop
and
add
push
pop
addb
sar
int
xchg
cmp
cmp
sbb
xchg
call
jns
jl
pop
mulb
and
cmp
mov
sahf
hlt
ret
jl
xchg
mov
jmp
aas
cld
cs
adc
add
xchg
pop
in
sbb
jbe
popf
clc
and
push
and
adc
xor
push
lea
push
pop
mov
mov
test
sbb
dec
inc
sti
lods
add
push
xor
dec
loop
add
or
inc
xor
into
fstl
cmpsb
xchg
add
xor
add
lea
out
rep
pop
lds
pop
or
push
sub
loop
shrl
stc
jo
sbb
and
decb
cmc
test
scas
rcl
xchg
je
or
sahf
or
push
aad
add
sub
cmp
inc
jmp
mov
fnstsw
rclb
or
add
jmp
mov
test
fisttpl
pop
push
lcall
ljmp
push
adc
adc
add
out
fcoml
sub
xor
aam
xchg
cmp
and
pop
in
push
nop
fidivrs
adc
jmp
cwtl
ljmp
or
mov
push
jmp
jecxz,pt
iret
nop
mov
icebp
jge
mov
dec
jg
xchg
cmc
add
bnd
push
clc
push
push
sbb
inc
out
adc
push
test
outsb
aad
and
push
les
add
std
shlb
stos
add
loope
push
xchg
pop
sbb
xchg
insb
lahf
mov
sub
adcb
and
leave
or
push
lret
repnz
push
mov
lea
mov
js
loope
int
mov
mov
call
mov
les
or
and
sub
xchg
xor
add
lods
out
dec
xorb
cmp
daa
xchg
call
mov
jne
sub
mov
add
icebp
mov
dec
mov
push
mov
push
popa
rolb
sarb
add
loopne
fistl
or
or
or
push
push
and
dec
xchg
and
iret
and
bound
movsb
aad
xor
and
push
cmp
addl
cs
in
shr
lea
pmulhw
shrl
movsb
and
jg
test
sub
jmp
inc
mov
xchg
lea
nop
test
cs
or
outsl
sbb
push
push
shlb
cmp
add
inc
les
jnp
sbbb
bound
sti
aas
lea
sub
adc
jle
xor
jg
test
push
jge
cmp
aad
or
push
rclb
add
add
xor
loopne
inc
outsl
sahf
add
push
jns
in
mov
neg
mov
aad
add
mov
push
push
xor
pop
mov
and
push
add
iret
push
das
mov
test
dec
cli
sahf
out
xchg
or
or
sub
xchg
or
pop
inc
xor
jecxz
in
fs
and
imul
leave
sub
pop
cmp
add
cmp
dec
ror
idivl
rolb
pop
push
sbb
sub
or
bound
stc
add
jne
push
shr
ret
adc
cmp
pop
cli
inc
rcr
cmp
rcr
mov
cmp
add
arpl
ja
push
mov
cwtl
inc
loop
mov
nop
testb
push
add
inc
push
scas
aas
fwait
xor
dec
icebp
dec
pop
or
adc
mov
sub
ljmp
test
push
aas
jp
or
iret
mov
sbb
js
and
ret
cmp
outsl
push
gs
bound
je
xchg
ret
test
xlat
inc
ret
cmc
push
add
mov
push
push
push
push
aad
and
xchg
cltd
jae
test
push
lea
in
push
mov
mov
lret
mov
fnstsw
ljmp
aaa
push
push
inc
mov
jbe
push
sub
mov
sahf
jnp
in
add
push
lea
orl
adc
je
popf
enter
movsl
cmpsl
push
movsl
dec
sysret
sub
shl
xor
dec
dec
pop
push
push
add
xor
aam
jl
mov
loopne
push
or
dec
je
mov
jb
and
push
inc
addr16
dec
lret
aas
add
and
sti
add
fcmovnb
jecxz
dec
mov
jp
xor
not
mov
lret
shrb
or
loopne
rorl
inc
je
ljmp
xor
lea
sub
add
out
loopne
xor
in
or
cmp
jae
js
jne
lea
pop
std
fnstcw
xor
sub
push
std
cmp
pushl
cmp
loop
add
or
xor
mov
sbb
pop
mov
test
sub
popa
not
xor
popf
jl
inc
notb
and
push
adc
add
pop
sub
mov
mov
mov
daa
mov
mov
movb
adc
push
shlb
into
or
adc
lock
cld
mov
cmp
scas
lret
inc
ljmp
add
dec
fcoml
jmp
leave
push
mov
hlt
push
sub
es
sub
xchg
inc
dec
out
inc
mov
sub
pop
je
cmpsl
mov
lods
mov
mov
jo
pusha
add
incl
inc
mov
ret
xor
nopl
inc
sbb
loop,pn
push
ljmp
ret
jno
mov
mov
add
int3
pop
clc
push
lea
pop
aaa
addb
std
push
imul
jb
xor
ret
push
or
or
xlat
pop
add
data16
jno
cmp
push
lock
lret
mov
and
pop
or
test
jo
insb
in
cs
inc
and
mov
and
cwtl
movsb
fwait
dec
lds
repnz
inc
add
dec
mov
mov
cltd
mov
xchg
dec
nop
push
sub
lea
roll
and
inc
or
test
hlt
out
jg
out
jnp
punpckhdq
cmp
xchg
add
out
out
xor
sub
cwtl
std
jae
mov
pop
inc
outsl
add
repz
jo
xchg
or
jmp
ja
inc
push
call
inc
test
mov
rcll
inc
enter
sub
inc
mov
pop
nop
daa
mov
push
mov
aas
jecxz
dec
pop
jbe
fisubrs
mov
shl
sub
sub
subb
mov
arpl
roll
loopne
les
push
push
push
in
test
xor
pop
pushf
mov
adc
sub
push
cs
rolb
mov
sbbb
add
inc
dec
mov
notb
int3
sub
push
add
shr
cmpsb
and
or
cmc
outsl
adc
mov
mov
and
mov
add
inc
ret
sbb
pusha
rorl
mov
dec
jb
pop
mov
mov
xor
out
jp
movsb
pop
xchg
or
shr
push
add
mov
pushl
mov
xchg
mov
fisubl
daa
xor
sbb
in
add
cmc
push
cltd
pusha
push
push
sbb
add
lock
add
cmp
out
mov
pop
mov
push
inc
pop
mov
pop
leave
loopne
js
adc
sbb
or
pop
mov
clc
push
or
pop
push
dec
mov
xlat
fisttps
inc
add
mov
ror
lea
mov
lods
sub
inc
aam
xchg
push
push
iret
pushf
push
les
push
or
jecxz
and
sub
mov
stc
push
lea
ja
in
stos
inc
and
ficomps
and
cld
xchg
shlb
adc
mov
add
or
add
inc
sub
rol
adc
dec
lea
mov
pop
inc
bound
add
cs
daa
pusha
pop
jo
cmc
adcl
ss
sbb
mulb
pop
push
subl
jo
cwtl
cmp
lcall
shrb
stc
xchg
push
push
cmpb
not
mov
add
mov
shlb
loopne
inc
lea
pop
pop
add
and
insb
in
loopne
push
dec
adc
dec
mov
inc
xor
lea
ror
sub
sub
into
xchg
lds
mov
jns
and
add
push
push
xor
repnz
sub
push
mov
push
fdivp
xor
and
and
sbb
add
jge
mov
xor
mov
pop
repnz
xor
nop
push
cmp
add
pop
mov
and
push
sbb
daa
jno
push
push
rcpps
stc
andb
stos
rorb
xor
add
fdivrs
das
je
mov
dec
cmpsl
add
sbbb
push
fwait
ljmp
mov
insl
mov
push
jnp
decb
dec
sub
pop
out
jo
rcrb
cld
les
inc
sbbl
test
lret
sbb
fnstenv
mov
or
out
mov
push
rolb
lret
add
outsb
addr16
sub
leave
lds
jecxz
out
jge
inc
add
mov
mov
nop
push
push
or
xor
mov
hlt
lock
dec
sub
pop
sub
mov
hlt
lea
add
adc
dec
add
push
call
jp
inc
sbb
add
push
push
dec
push
nop
mov
add
mov
cs
inc
pop
shl
lea
jb
je
mov
inc
out
scas
dec
adc
test
call
mov
les
lea
mov
es
sub
and
mov
insb
sub
push
push
mov
sbb
divb
sbb
into
add
pop
call
and
out
cld
push
lret
push
pop
in
mov
adcb
sub
or
cmc
sub
ror
jno
jmp
rorb
rcpps
in
cmpsb
or
jae
test
addr16
jmp
dec
lret
mov
adc
push
push
adc
repz
cmp
daa
dec
popa
in
daa
mov
push
push
inc
imul
insb
jbe
daa
out
fst
cmp
sbb
and
xchg
insb
add
imul
movsl
inc
repz
dec
inc
mov
jmp
mov
test
frstor
mov
enter
pop
lea
cmp
imul
fnstcw
inc
call
pop
repnz
not
add
mov
add
pop
dec
push
jg
xchg
add
ljmp
cmp
iret
push
in
lea
jae
add
aad
jns
leave
shlb
mov
or
dec
add
mov
push
mov
pop
inc
mov
sub
jp
std
orb
mov
mov
pop
pusha
mov
lea
xchg
in
sub
push
dec
xor
pop
pop
lret
loopne
aam
add
xor
or
add
sbb
inc
sub
xchg
xchg
push
mov
add
cwtl
mov
outsb
add
xchg
arpl
mov
lods
push
in
and
fldl
fadd
cmpsb
sbb
sti
or
imul
add
xchg
jns
sbb
bound
mov
jmp
sub
mov
sub
add
int
mov
mov
dec
inc
inc
cmpsl
push
push
inc
sub
scas
xor
arpl
add
jecxz
fldt
rcrb
push
jl
jmp
cs
mov
xchg
sbb
mov
add
stc
lea
pop
jl
add
pop
cmp
loopne
int3
das
add
cmc
mov
jae
add
sub
inc
xor
push
scas
jg
in
adc
xor
or
sbb
or
mov
push
popf
inc
and
fisubrs
push
lret
dec
rcr
mov
aas
jp
pop
push
sarb
lea
sbb
cs
pop
push
js
and
add
adc
sbb
push
sub
push
xor
clc
mov
pusha
push
xorb
pop
call
in
mov
mov
and
stos
ja
cmp
push
add
lea
rclb
cmp
pop
das
mov
sub
pop
dec
fistpl
ret
subb
push
lods
sub
adc
aaa
subb
pop
nop
insl
xor
adc
mov
jns
sbb
adc
fmuls
push
call
dec
das
sbb
push
sub
shlb
divps
inc
pop
scas
or
mov
jp
xchg
inc
repz
or
xor
pop
aad
ljmp
jnp
in
clc
push
jge
addr16
xchg
outsb
mov
sbb
shl
xor
pop
add
jnp
push
ret
aam
mov
sub
or
and
push
add
into
mov
xorl
cmp
sbb
leave
lret
inc
mov
push
andl
and
fwait
popa
inc
es
sub
xor
repz
add
shl
sub
idiv
mov
inc
sub
dec
dec
inc
push
push
fmull
adc
mov
ror
cld
and
mov
mov
mov
mov
in
loope
push
inc
mov
adc
stos
push
data16
dec
add
faddl
decb
or
pop
dec
add
dec
xchg
mov
sub
add
pop
add
and
and
cmpsl
sub
xor
mov
fdiv
pop
adc
sti
xlat
testl
clc
cld
das
push
jb
daa
jo
lock
pusha
push
xor
cwtl
fmull
call
sbb
sahf
pop
pop
nop
cmpb
inc
add
cmpsl
push
rolb
out
frndint
mov
mov
sbb
mov
test
std
shrb
sbb
shlb
push
mov
subl
push
mov
les
mov
cmc
push
add
xlat
mov
push
incb
or
mov
es
int
test
jl
or
adc
adcl
in
lret
add
sbb
xor
repz
daa
mov
push
and
adcb
push
inc
inc
push
clc
ret
and
push
add
mov
xor
into
push
stc
inc
cmp
cli
sub
and
mov
call
xchg
add
aad
in
push
in
rcll
icebp
in
mov
and
test
sti
inc
sti
push
mov
in
push
lock
sub
jge
addr16
adc
mov
test
add
lea
ret
rep
ja
ja
sub
aad
jmp
fsubrs
adc
xchg
ljmp
or
lret
push
jbe
add
jg
push
call
das
sbb
mov
sub
jbe
dec
not
mov
mov
push
push
inc
xadd
dec
mov
and
push
push
jbe
sbb
pop
ss
cltd
push
loope
fwait
call
fisttpll
push
mov
inc
jbe
punpckhbw
push
addb
sbb
call
mov
lods
push
push
adc
shll
pop
push
cmp
inc
stos
rolb
mov
mov
sub
ret
lcall
jl
dec
add
cwtl
sbb
cmp
inc
daa
push
int3
xor
push
inc
pop
xchg
mov
xlat
dec
ljmp
xchg
js
cmp
int
call
sub
add
xor
fidivrs
jbe
out
adc
loope
outsl
push
pushf
ret
push
jecxz
arpl
push
lret
add
out
xor
inc
adc
cmp
xor
aam
iret
mov
cmpsl
pop
dec
push
sub
jae
jmp
fs
push
sub
push
push
dec
add
cmpsl
cltd
fsub
push
shlb
add
daa
fst
jp
push
lea
push
push
std
test
jo
mov
push
rol
subl
sti
sub
adcb
fmul
or
add
not
fs
and
mov
clc
push
lcall
xchg
push
insb
inc
xor
dec
std
mov
pusha
push
mov
mov
lea
xor
add
dec
push
and
push
outsl
mov
dec
in
lods
roll
jg
pop
xor
dec
sub
in
ljmp
push
cmp
subl
fcompl
call
imul
repz
scas
cmp
jmp
push
les
popa
add
and
push
fstpl
popf
fs
add
popa
mov
dec
sbb
insl
push
jns
sub
mov
sub
adc
inc
push
and
ja
or
add
mov
daa
dec
cmpsb
pop
inc
and
jmp
sub
lcall
jno
adc
dec
push
repnz
sub
inc
push
push
inc
ds
jmp
adc
lret
sbb
sbb
fwait
sbb
lahf
or
add
lds
leave
pop
add
xor
or
jno
push
add
leave
xor
pusha
js
xchg
add
lock
xor
sbb
repz
jge
jmp
scas
pop
inc
mov
xor
cmpsb
mov
pop
hlt
fildl
cmp
pop
mov
xchg
mov
cli
sub
inc
inc
push
pop
aas
and
insl
add
dec
shr
pop
hlt
std
rsqrtps
rolb
loop
pop
inc
roll
dec
shlb
shlb
add
push
jg
mov
jno
add
int
leave
stc
adc
dec
sub
ror
sbb
inc
inc
mov
mov
sti
mov
repz
lret
bound
in
cmp
fsts
mov
aam
pusha
lea
cmpsb
push
add
ret
sbb
inc
das
mov
inc
sub
mov
sub
sbb
je
notb
jno
jno
jnp
mov
cltd
or
ret
lcall
stos
mov
xor
fiadds
mov
or
mov
add
dec
push
or
adc
rclb
inc
add
into
xchg
subb
sbb
mov
pop
loopne
les
or
shrl
in
and
js
and
mov
shr
out
sbb
xchg
or
adc
pop
faddl
shrl
adc
notl
dec
in
mov
adc
or
xchg
add
sahf
cmpb
sti
pop
push
push
dec
xor
or
and
imul
cmp
movsb
mov
mov
les
repz
cmp
sub
inc
or
or
xor
inc
sbb
in
fidivrs
cwtl
jp
call
rep
popa
ret
inc
hlt
shl
inc
add
mov
inc
sbb
add
sbb
pop
pop
test
sbb
aaa
jge
add
shr
inc
test
dec
inc
fwait
enter
in
add
push
push
leave
add
sub
shr
xchg
pusha
mov
add
out
sbb
inc
push
stc
and
pop
push
in
push
inc
mov
inc
or
mov
lods
pop
xchg
push
dec
pushf
lds
shlb
lret
mov
cmc
jp
add
jg
lcall
jecxz
mov
in
test
xor
push
add
xchg
clts
push
call
dec
je
add
clc
jg
fcmovnb
push
and
mov
jae
ss
add
and
jae
call
jae
mov
add
sarl
xor
adc
shl
out
dec
je
dec
push
mov
xchg
xor
push
sbb
dec
push
cmp
out
ljmp
lds
cmp
dec
fadd
je
pop
push
inc
cmp
mov
das
sbb
push
and
or
cwtl
xor
add
mov
popf
mov
rol
xchg
cmpsl
push
pop
fidivrl
cmp
xchg
iretw
or
cmp
add
adc
and
or
push
and
rorb
inc
filds
lret
pop
pop
mov
push
inc
int3
out
pop
jno
xchg
dec
sbb
or
rcrb
pop
ficomps
push
in
call
mov
jb
clc
sti
ret
shr
lahf
inc
push
mov
vpaddsw
add
pusha
mov
lcall
inc
add
dec
xor
ret
hlt
jle
dec
inc
add
das
repz
bound
xor
cmp
mov
push
pop
ret
mov
mov
test
and
or
mov
or
push
xchg
les
and
push
jge
orl
sub
add
mov
push
call
cs
xchg
push
xchg
incl
clc
jne
mov
dec
jg
adc
xchg
and
loop
adc
fdivs
cld
iret
inc
and
xchg
enter
jno
xchg
sbbl
jo
in
int3
pop
movswl
push
leave
lret
test
rol
mov
sbb
add
cmp
xor
enter
pop
loope
sub
mov
lea
lret
or
xchg
rcll
outsl
das
in
ljmp
ftst
add
stc
sub
popa
or
xchg
push
and
and
mov
adc
push
push
jg
stos
xor
call
add
testb
or
pop
xchg
sub
xor
add
jp
pop
loopne
jne
lret
adc
mov
push
push
stos
cmpl
mov
shlb
cmc
stc
pop
dec
sub
add
jnp
test
cmp
or
call
notb
adc
bound
add
mov
cmp
push
je
xchg
push
add
mov
adc
add
lret
jle
sub
inc
xor
push
clc
das
adc
in
dec
add
mov
aas
push
aam
xor
addb
loopne
jb
mov
pop
enter
add
jle
sbb
mov
jg
dec
push
jg
in
xchg
add
mov
mov
movsl
clc
lahf
rcl
addr16
mov
notl
mov
ret
fcompl
mov
addb
pop
jp
xor
add
add
jae
mov
lds
bound
mov
add
mov
pusha
mov
scas
pop
add
add
mov
cwtl
xor
sahf
popa
or
std
in
xchg
ljmp
jbe
mov
cmp
cmp
addl
repz
xchg
lret
mov
fs
sti
pop
aaa
or
jecxz
or
jl
add
lea
imul
mov
inc
insl
push
test
in
int
inc
add
adcb
icebp
pushf
push
push
int
push
or
xlat
dec
pop
mov
jmp
push
addl
sbb
imulb
adc
in
sbb
jg
adc
aaa
or
pop
arpl
mov
ret
xor
mov
pop
and
into
subb
lods
sbb
enter
loope
push
std
pop
jns
ljmp
mov
pushf
jbe
jmp
mov
test
sahf
push
mov
sbb
inc
push
out
test
stos
hlt
sarb
leave
cli
and
xchg
add
iret
jns
jl
scas
and
jmp
int
shlb
clc
rcll
add
fdiv
inc
lea
jae
push
sub
add
outsb
pop
arpl
cmp
frstor
jle
int
push
insb
fs
inc
add
test
rclb
adc
sbbl
lds
cmpl
xor
sbb
or
xlat
loopne
test
in
inc
jl
pop
push
bound
xor
dec
ja
push
ss
loope
mov
xchg
in
sub
ljmp
xor
gs
jnp
sub
mov
adc
mov
scas
dec
testl
rol
lret
xchg
ja
aad
cmp
add
pop
es
sub
adc
outsb
popa
ret
sub
pusha
mov
xchg
lahf
jg
lea
mov
pop
out
push
jae
pop
sub
push
lret
mov
sarb
fucomi
mov
inc
ret
xlat
mov
push
shr
cmp
xor
loope
jg
fs
js
sbb
jae
leave
std
mov
mov
out
dec
std
mov
mov
mov
clc
push
repnz
mov
xchg
adc
addb
hlt
ror
out
daa
testl
cmp
push
pop
je
pop
jmp
loopne
adc
js
mov
jnp
mov
add
mov
or
popf
dec
in
xor
loopne
into
push
push
loopne
pop
pop
adc
outsl
sbb
push
adc
test
mov
push
rolb
data16
sti
dec
cld
adcl
xchg
inc
adc
stos
add
and
hlt
mov
fnstcw
js
enter
sub
adc
mov
inc
pop
je
mov
or
dec
jae
sub
xor
dec
add
lahf
mov
sbb
push
cmpsb
nop
mov
jae
adc
mov
in
inc
push
add
push
push
dec
mov
add
invd
add
push
lea
pop
cmp
cwtl
and
lods
mov
scas
xchg
ficomps
dec
daa
jo
shr
inc
mov
sub
scas
lds
sbb
dec
sbb
outsl
dec
jge
pusha
push
push
pop
pop
call
push
push
push
cli
cvttps2pi
fucomp
add
mov
out
push
mov
fsubs
cmpsl
pusha
rclb
and
xor
xchg
xor
pushf
mov
sbb
add
es
sub
test
scas
xchg
lods
and
push
push
xchg
xchg
push
rcrb
jp
mov
mov
jnp
aad
or
pop
pop
addb
lea
xchg
call
jge
fdivs
rorb
mov
mov
into
ljmp
xchg
pop
clc
add
pushf
fsubs
sarb
imul
fcompl
mov
sbb
add
or
inc
adc
mov
mov
and
mov
inc
push
mov
shrl
push
jp
add
dec
add
pushw
dec
pop
call
push
push
lea
fdivrs
call
icebp
mov
push
push
sbbl
or
clc
clc
mov
jmp
push
push
push
mov
fisttpll
mov
das
or
out
jecxz
or
dec
sub
mov
add
add
dec
sub
flds
xor
pop
sub
push
lahf
enter
jne
or
inc
adc
pop
jne
add
dec
dec
add
ret
jae
in
push
jl
adc
push
push
in
add
lods
mov
mov
movsl
loop
ret
push
imul
out
je
push
xorb
push
mov
lea
test
mov
mov
loop
jecxz
inc
mov
inc
add
jmp
xchg
testl
sub
prefetchnta
mov
sub
lcall
arpl
xchg
mov
jmp
pop
call
mov
xchg
fstpt
les
adc
inc
sub
cld
xchg
sbb
ret
sbb
mov
xchg
dec
jmp
ret
inc
outsl
cmp
xlat
lea
in
rorl
dec
pop
mov
mov
inc
add
pop
sbbl
mov
enter
jo
nop
jns
push
add
add
faddp
mov
add
mov
mov
push
mov
jl
test
push
lea
mov
cwtl
pop
stc
jecxz
addl
imul
pop
out
add
pop
aas
in
or
or
lea
dec
and
cli
pop
add
popf
clc
ja
aad
rorb
ret
negl
popfw
inc
es
jmp
mov
shll
daa
mov
dec
repz
test
add
ja
ret
xor
rol
add
mov
dec
js
loopne
pop
nop
inc
add
test
nop
adc
cmp
jle
push
stos
call
iret
pop
cld
movsl
xchg
inc
push
pop
adc
inc
fs
add
inc
stos
xor
fmull
and
push
cmpsl
mov
adc
leave
pop
add
add
push
push
enter
mov
movsb
fcomp
decb
push
out
push
jmp
in
jge
and
dec
add
lods
add
lea
nop
stos
push
or
pusha
cmp
push
adc
test
add
xor
and
xlat
mov
and
shr
jge
addb
shlb
adc
jmp
sbb
add
test
sti
call
jmp
push
xor
pop
popa
pop
addr16
add
mov
aam
orl
idivl
pop
arpl
rol
cwtl
int3
sub
enter
mov
popf
pusha
loope
push
mov
into
rolb
leave
ret
jg
and
cmp
fdivs
lea
shll
cmp
into
fwait
mov
loopne
mov
idivb
push
push
mov
push
xchg
push
cmpb
cltd
pop
jecxz
cmp
cmp
sub
lea
jo
xchg
pop
sub
push
dec
mov
pop
mov
inc
daa
xor
idivb
addr16
out
or
repnz
lea
adc
or
add
fcmovu
pop
jmp
inc
xor
or
movsb
xor
push
call
sub
or
loope
cli
imul
pushf
cmp
jns
push
xor
push
push
xor
cs
loope
call
std
cs
int3
and
fidivs
rorl
std
add
or
push
clc
int3
or
jmp
pop
add
inc
cli
iret
addr16
jne
std
inc
sub
jg
lods
insl
cmp
out
sub
xchg
pop
dec
push
mov
sub
lret
mov
jg
daa
push
push
push
add
mov
lahf
in
push
sub
rclb
in
es
push
cmp
adc
mov
icebp
shr
xor
pushf
enter
ret
inc
lock
add
add
and
push
inc
push
add
or
mov
scas
lock
sub
mov
add
pop
pop
adc
push
mov
add
cwtl
pop
or
adc
xlat
pop
xchg
je
mov
testl
push
add
jp
bound
andl
sbb
mov
pop
push
fldl
mov
pop
jnp
aad
rolb
xor
or
add
xor
add
pop
out
sbb
es
push
mov
in
cld
int3
daa
out
sar
bound
decl
xor
adc
cli
xor
xchg
mov
subb
jnp,pt
nop
jp
pop
push
cwtl
cmp
leave
mov
out
pop
aam
sub
mov
mov
inc
cld
push
inc
hlt
pop
jbe
sub
sbb
adc
aam
cli
push
mov
orl
and
pop
jg
stos
inc
dec
push
cmpb
adc
icebp
add
push
orb
cmp
push
cmp
leave
sub
shr
jne
cmp
push
out
push
dec
mov
sbb
mov
push
sbb
mov
cmp
rorl
hlt
jg
scas
add
lock
popf
jecxz
enter
add
sti
xor
lea
adc
push
sarl
jnp
testl
les
loopne
mov
test
movsl
dec
lock
popf
enter
sbb
ret
cmp
inc
add
pop
fnstenv
push
into
imul
in
sub
ret
pop
inc
push
push
std
fdivrl
inc
nop
aas
add
insl
into
add
xchg
add
jge
aam
xorps
gs
and
cld
sbb
inc
inc
mov
sub
xchg
leave
jno
js
add
adcb
jge
push
push
outsl
sub
imul
shr
int3
and
jno
add
push
cmp
mov
ret
push
jmp
dec
inc
popf
in
xchg
and
dec
mov
notb
pusha
cld
push
imul
stos
jbe
les
push
jbe
or
sub
xorb
iret
pop
das
pusha
mov
mov
cmp
sub
push
jmp
or
sub
push
or
pusha
mov
sbb
and
lret
or
lret
ret
out
daa
dec
pop
xchg
xor
add
pop
ret
add
push
dec
cli
mov
notb
pop
pop
pop
mov
pusha
xchg
jg
out
repz
inc
pop
inc
testb
outsl
lea
popf
iret
jbe
cmpsl
add
pop
lock
cmp
movsb
adc
ljmp
mov
xchg
clc
xchg
push
std
shl
mov
xchg
in
or
jnp
lds
sbbb
add
fwait
loopne
mov
push
push
jge
dec
add
ud2
das
test
add
mov
push
les
sub
cmp
lea
xor
add
out
push
mov
add
inc
mov
lods
aaa
xchg
rep
repnz
test
push
clc
and
jae
gs
mov
jle
test
add
ret
cltd
inc
mov
sub
mov
xchg
or
or
jno
xchg
xchg
jns
push
dec
je
sub
rol
push
xor
or
movb
mov
daa
push
mov
adc
add
sub
repnz
sub
add
jg
sarb
xlat
inc
mov
iret
arpl
xorl
dec
mov
mov
outsb
fsubr
jp
ror
jg
scas
or
add
push
std
in
sub
add
lea
pop
pop
jo
cmp
out
jne
pop
ja
filds
std
xchg
lea
push
int3
push
push
or
sbbb
cmp
inc
outsb
push
popf
push
jo
mov
lahf
insl
data16
xchg
mov
adc
xlat
jns
or
push
xor
dec
aas
mov
xchg
push
popf
in
pop
mov
adc
xchg
aas
mov
mov
jno
or
pop
cmc
dec
repnz
add
pop
int3
leave
shl
jmp
xchg
divb
mov
sbb
push
jp
icebp
xlat
das
jbe
pop
push
push
add
cmp
xor
push
inc
pcmpeqd
pop
pop
movsb
adc
cmp
jp
jge
iret
mull
or
lret
push
mov
cmp
sbb
sub
inc
jecxz
andb
inc
fucomip
jl
lods
pop
push
loop
ljmp
pop
rolb
xor
xchg
cmpsb
mov
or
rorb
cld
sbb
cltd
fsubr
jg
xchg
mov
imul
pop
clc
test
cmc
mov
fldt
rol
cmp
jnp
cmp
addl
dec
mov
and
repnz
stos
mov
sub
dec
loop
les
mov
in
imul
fs
pusha
sub
pop
mov
dec
pop
push
andb
das
add
xchg
fidivrl
and
outsl
cmc
in
gs
lods
enter
mov
pop
pop
and
ljmp
fwait
or
push
daa
inc
fmull
add
adc
stc
xchg
incl
xlat
add
xor
shr
mov
icebp
cmp
outsl
repnz
adc
daa
push
dec
adc
cs
rcrb
flds
jno
pop
pushl
push
cmpsb
add
inc
xor
shl
dec
dec
sub
cmp
pop
push
jp
in
mov
not
lea
xor
shlb
push
inc
sarl
jae
jb
mov
in
sbb
orb
jecxz
jnp
jns
sbbb
mov
push
mov
xchg
mov
dec
mov
mov
mov
cmpsl
jb
mov
lahf
mov
pop
or
add
push
lret
dec
pop
loop
push
pusha
ds
popa
mov
pusha
insb
push
inc
cmp
gs
clc
loop
or
cli
push
jb
cs
xchg
insl
cltd
xchg
inc
cs
push
lock
add
cmc
xchg
push
shrl
push
lahf
inc
cmpb
cmpsl
mov
mov
pop
loope
in
fstl
shr
leave
decl
icebp
ret
pop
push
jl
add
push
aas
cs
ret
sarb
dec
bound
add
cld
lcall
pop
push
lock
mov
psrad
add
mov
or
enter
push
sub
cmp
dec
push
inc
scas
subb
inc
ja
add
mov
push
push
push
mov
jmp
jmp
xor
repz
add
mov
xlat
mov
loope
xchg
mov
in
push
imul
ljmp
rorb
inc
sti
push
dec
scas
sbb
jecxz
shl
push
pop
sub
mov
pusha
mov
imul
out
add
dec
inc
pop
add
sti
push
dec
mov
add
mov
push
pop
cltd
push
js
inc
jecxz,pt
xchg
push
sbb
push
add
jne
mov
sbb
loope
in
mov
test
jae
add
ficoml
push
lds
mov
dec
push
mov
xor
pushf
jne
not
add
inc
add
xchg
mov
andb
mov
daa
xor
jbe
add
pop
les
and
outsb
mov
js
cmp
cmp
push
es
lret
adc
lcall
add
lcall
xchg
daa
pop
addr16
gs
jg
push
lods
das
jmp
add
stos
shlb
xchg
adc
sarl
fiadds
push
add
lea
cmp
jg
imul
xchg
mov
std
test
sti
push
ljmp
inc
hlt
adc
jnp
push
lahf
jns
jge
test
and
cli
leave
jno
sub
ficomps
cmp
loopne
rcrb
out
xorb
repnz
jg
test
adc
leave
imul
daa
or
lea
cld
push
push
fiaddl
sti
in
mov
out
and
adc
xchg
clc
cmp
stc
arpl
push
jle
push
or
adc
push
addl
daa
ficomps
push
push
sub
clc
add
enter
mov
rorb
sarl
add
popf
and
xor
add
shrl
add
push
cwtl
or
cmp
stos
jns
imul
jne
dec
pusha
into
inc
lea
ss
pop
mov
mov
pop
add
dec
jno
push
in
jnp
mov
iret
pop
out
add
sub
scas
int
or
mov
rclb
sbb
push
push
inc
lods
loop
daa
lret
inc
nop
fists
sbb
pop
leave
test
or
pop
pusha
nop
jecxz
add
adc
push
push
mov
rorb
push
scas
add
scas
inc
dec
cvtpi2ps
push
popa
psllq
scas
jl
inc
jnp
pop
lds
adc
das
arpl
mov
and
into
rol
pop
xchg
and
in
jae
sub
add
mov
je
popf
or
lret
add
push
dec
sbb
lea
push
cltd
adc
nop
cmp
js
dec
jp
leave
push
loope
pop
inc
rol
xor
addl
jae
xchg
pop
pop
cmpsl
xor
in
and
ret
lock
call
push
jg
js
cmc
rcll
push
jnp
add
std
std
fsubr
leave
add
cld
enter
pop
imul
mov
in
dec
mov
or
jecxz
inc
add
or
dec
or
xchg
dec
es
lea
mov
ds
imul
je
cltd
xor
imul
ja
jle
pop
sbbl
subl
iret
pop
jae
push
andl
mov
aam
sub
clc
xchg
test
xor
jmp
sarl
lret
or
std
add
js
cmp
or
pop
and
xor
xchg
jo
movsb
lahf
insl
in
jl,pn
jge
pop
test
jecxz
je
sbb
test
std
mov
and
out
or
lret
pop
stos
adc
addr16
push
jge
sarb
push
daa
dec
mov
jbe
cltd
sbb
adc
je
add
push
push
push
or
sub
pusha
cs
xor
aam
jb
mov
call
mov
cmp
push
push
pop
push
cld
inc
adc
add
ss
decl
xchg
cmp
add
mov
fdivr
or
lret
pop
pop
lahf
jo
xchg
inc
or
enter
outsb
adc
dec
lea
pop
dec
pop
inc
subl
test
dec
nop
jp
or
push
mov
xchg
imul
sarb
icebp
sub
leave
scas
xchg
sbb
addr16
sbb
call
push
add
add
pop
out
add
pop
jp
loope
rcll
mov
push
jnp
mov
jge
sbbb
out
cmp
je
mov
inc
fdivs
or
popf
jnp
in
add
sbb
push
fs
into
sbbb
mov
mov
xchg
mov
mov
add
fwait
call
into
add
push
inc
sub
xor
aam
lahf
add
js
ds
sbb
add
xor
rolb
or
pop
outsb
aas
aad
clc
sub
or
jbe
inc
in
add
xor
out
enter
aad
or
add
fidivrs
pop
imul
push
xor
in
add
or
mov
add
push
inc
mov
xchg
dec
lods
jnp
cmpsb
mov
push
pushf
or
js
jp
push
or
int3
in
rcrb
aad
and
sahf
fbstp
call
dec
add
or
cmp
inc
mov
unpckhps
stc
add
add
pop
lahf
enter
add
bound
xor
add
jp
test
int3
xchg
imul
pop
and
cmp
test
add
cltd
mov
xlat
test
mulb
add
inc
dec
inc
int3
pusha
je
clc
into
shld
cltd
subb
mov
leave
xor
rolb
push
push
add
dec
addb
dec
mov
lcall
add
push
mov
clc
push
rcrb
add
imul
sub
push
sbb
mov
lret
std
in
fldt
fdivl
mov
loope
mov
fsubrl
roll
int
pusha
xchg
push
call
jo
mov
add
mov
jecxz
or
leave
add
mov
push
orl
push
clc
pop
psubusb
mov
repnz
aam
add
jle
xlat
adc
push
pop
add
sbb
jge
loopne
paddusw
movsb
add
out
pop
adc
mov
jp
add
add
shld
mov
push
jo
add
call
cmp
inc
push
and
sub
ret
push
sub
dec
mov
popa
shrb
mov
cmp
push
inc
mov
test
push
xor
mov
inc
cmc
mov
mov
popf
add
mov
sbb
mov
dec
arpl
add
adc
addr16
xchg
pop
dec
cmp
xor
lcall
inc
in
in
scas
inc
add
cmp
pop
mov
push
sub
add
inc
lahf
iret
add
js
pop
fistps
shlb
jmp
add
int
mov
or
invlpg
icebp
pop
in
sub
loopne
add
cmp
call
sbb
or
dec
sbb
mov
shll
dec
mov
fsts
add
lret
out
hlt
mov
push
call
mov
lahf
mov
add
pop
jmp
pop
add
pop
cs
dec
add
outsb
imul
filds
test
cli
mull
cmp
add
add
fimull
pop
or
add
push
mov
daa
scas
movsb
add
cmc
cs
jl
cmp
pop
aam
xor
add
js
ficomps
call
scas
xlat
mov
push
dec
in
push
mov
xor
arpl
clc
add
adc
mov
sbb
push
xchg
outsl
std
andb
add
dec
out
sub
mov
push
add
pusha
mov
int3
or
fnstsw
pop
aad
xchg
stos
emms
or
out
jne
push
push
sbb
sbb
sti
dec
and
sbb
dec
jnp
dec
pop
mov
fistl
or
xchg
popf
cmp
lea
loop
or
jge
shl
add
inc
sub
cmpsl
lock
fucomip
dec
add
ja
jne
cltd
les
outsb
inc
inc
popa
xchg
sbb
mov
push
pusha
pavgb
jle
add
pop
xchg
cmp
sbb
push
inc
dec
push
add
outsb
and
pop
out
xlat
add
mov
add
or
add
inc
and
inc
pop
shrb
gs
out
call
mov
movsb
add
ss
mov
adc
sub
dec
icebp
je
sub
cmp
add
int
xor
js
mov
add
push
leave
cmp
push
sbb
pop
inc
enter
add
cmp
add
cwtl
cli
or
dec
pop
cmp
add
aaa
into
lahf
faddp
pop
add
mov
lods
jp
add
inc
les
lds
mov
out
addl
lods
mov
mov
sti
push
pop
dec
fwait
cmp
sub
cmp
cmp
bound
shll
push
dec
icebp
and
jb
add
enter
inc
rolb
in
mov
sbb
push
leave
push
add
push
xchg
lds
sbb
adc
pop
cltd
add
hlt
add
mov
imul
mov
scas
inc
xchg
jbe
jl
add
xchg
inc
pop
imul
add
insb
adc
jo
and
push
xchg
data16
cmp
sbb
aam
mov
outsl
and
jo
jg
enter
out
cld
outsb
sbb
mov
add
xchg
dec
ljmp
lcall
push
stc
fdivl
dec
in
pop
cs
lahf
mov
inc
inc
mov
and
sub
dec
adc
dec
je
jnp
loop
jns
xor
add
sbbb
cld
adc
jne
daa
mov
dec
call
ss
cmp
cmp
sbb
loope
pop
jge
sub
jns
add
xor
xchg
xchg
and
popf
in
adc
fidivs
push
scas
dec
cwtl
fdivl
sbb
jnp
fisttpl
pop
jne
arpl
iret
orb
fldl
out
lea
pop
ja
xchg
je
cs
jno
das
int3
mov
add
adc
add
fcmovu
ret
inc
cmp
fisttpll
gs
add
movsb
jge
clc
rolb
imul
fldenv
add
xchg
add
xor
lock
pushf
push
sti
inc
jl
add
dec
xchg
adc
mov
cwtl
adc
pushf
insl
push
roll
es
divl
add
aam
mov
add
pop
dec
je
pushf
cmpb
xchg
movsl
sbb
pop
jo
ljmp
testl
dec
cmp
sbb
adc
lock
sbb
inc
flds
push
add
loop
pop
xor
es
cli
pop
inc
inc
add
pop
movsl
fndisi(8087
jmp
and
dec
mov
mov
sub
cs
or
hlt
ja
adc
enter
xor
push
jge
dec
bound
cld
jle
pop
mov
loopne
ror
and
push
bound
daa
test
imul
mov
jmp
pop
pop
fisubrl
xlat
jg
addl
leave
add
lods
mov
lods
callw
cs
pop
scas
jg
xchg
add
pop
mov
mov
mov
push
sub
xchg
add
fdivr
inc
test
add
push
adc
dec
add
pusha
pop
mov
xor
add
cli
icebp
dec
dec
test
pop
aas
or
jnp
inc
roll
push
mov
movb
pop
out
fimull
aaa
inc
adc
int
cmc
sti
pop
add
ror
adc
jmp
push
sub
out
inc
pop
fmul
xor
and
and
push
inc
add
push
mov
cld
arpl
adcl
push
into
int3
scas
daa
jns
xchg
cmpsb
inc
jmp
pop
pop
mov
add
movsl
cmp
add
sbb
pop
jge
push
hlt
push
pop
pop
xor
mov
lret
lds
cli
cltd
faddp
push
dec
add
filds
push
mov
ljmp
sar
stos
out
in
aad
adc
add
add
xor
cld
adc
push
ljmp
data16
out
cmc
add
repnz
jp
xchg
ljmp
push
int3
add
loop
daa
cmp
jnp
add
pop
add
popl
cs
sub
add
out
add
aad
rclb
mov
mov
or
lods
jp
sbbl
jae,pt
mov
jmp
or
or
or
and
or
cli
push
add
cltd
sbbb
jecxz
jmp
add
cmp
pop
enter
or
lret
cmp
addr16
and
mov
or
test
dec
rorb
mov
bound
jo
daa
add
and
add
les
shlb
mov
fwait
shl
cmp
aam
mov
jg
dec
sahf
mov
fmull
add
and
add
jmp
test
out
sub
popa
xor
push
jbe
flds
cli
push
je
iret
scas
lret
cmp
inc
sbb
cmp
outsl
lods
movsl
dec
mov
add
sbb
and
or
lods
dec
add
in
mov
pop
cmc
push
pop
xor
lods
dec
movsl
add
adc
scas
neg
fmulp
add
fs
bound
jmp
xor
dec
cmpsl
sub
push
add
frstor
ljmp
mov
lahf
icebp
and
push
add
sub
dec
fsubp
mov
jg
xchg
sbb
movsb
mov
out
jnp
jl
pop
outsb
loopne
in
xor
jno
add
mov
push
or
arpl
and
add
cmpsl
xor
add
pop
das
jo
adc
jmp
inc
mov
add
add
lahf
movsb
sbbb
xor
add
jg
mov
pop
inc
roll
or
cmpb
out
ja
mov
icebp
aas
push
cmpxchg
pop
loopne
loopne
clc
aaa
add
push
lods
jmp
adc
cmp
sub
dec
pop
rclb
repnz
pusha
in
repz
mov
lret
dec
push
sub
pop
lahf
test
adc
mov
les
mov
add
mov
jns
sbb
push
xchg
push
ss
mov
add
test
repnz
add
pop
jno
push
addb
enter
mov
cmp
inc
andl
cmpsl
in
test
and
enter
jno
add
mov
fwait
arpl
enter
add
or
sub
clc
add
int
fucom
add
icebp
sbb
pusha
lock
rclb
xor
loopne
push
pusha
or
ret
sub
add
pop
jecxz
pop
mov
mov
lahf
pop
fcoms
cmc
stc
mov
jae
cmpsl
jmp
ja
aam
fildl
cmp
cltd
push
lods
mov
push
addr16
sub
add
shlb
add
ret
xchg
incl
loope
mov
or
dec
es
ja
add
in
pushf
sbb
outsb
push
sbb
in
push
add
rorb
or
cmp
add
mov
adc
rcl
test
mov
cli
jecxz
xchg
aam
push
das
inc
ss
xor
dec
pop
add
mov
mov
add
or
aam
sbb
and
subb
mov
ds
adc
sub
pop
jl
dec
ds
loop
int
ret
dec
pusha
rcr
sahf
aad
mov
add
mov
sub
jns
pop
add
push
xor
xlat
iret
add
cwtl
cmp
push
inc
test
inc
pop
mov
mov
idivb
movsl
repz
je
mov
ret
add
push
int
pusha
fsubp
sbb
inc
lret
xor
adc
scas
imul
fs
push
xor
mov
pop
imul
pop
pusha
add
jg
in
fstpt
add
insl
lds
and
incb
jg
inc
adc
cmp
adc
stc
and
push
jmp
aad
push
dec
xchg
iret
add
roll
je
lea
sub
add
or
lcall
sub
add
mov
sbb
add
add
clc
std
pop
add
jp
pop
add
push
add
mov
add
mov
mov
shrl
pushf
movsb
dec
fadds
add
nop
ret
add
mov
dec
daa
xor
dec
and
lahf
add
lods
and
push
cmp
test
push
daa
pop
add
or
add
scas
sbb
jg
adc
push
jne
add
setle
jp
pop
pcmpgtw
cmpsl
pop
addb
cmpl
cmp
xor
mov
ljmp
inc
add
rcrb
cmc
dec
and
push
or
rolb
cmpsl
leave
pop
out
push
out
ret
sahf
or
xor
aaa
fiadds
adc
inc
mov
cmp
cltd
jg
and
or
jno
dec
shrb
mov
jl
xorb
sbb
add
push
call
sub
mov
add
cwtl
aas
es
push
lods
sbb
pusha
pop
xchg
notl
aam
out
add
mov
dec
aam
fs
and
repnz
xchg
gs
testl
in
sarb
in
jo
adc
arpl
add
sub
inc
xchg
and
fadds
mov
bound
jns
pop
sahf
pop
std
rclb
add
or
mov
stos
jo
test
pop
add
inc
inc
push
pop
ret
add
or
adc
ret
mov
add
mov
cmpsb
or
gs
lahf
pop
and
add
clc
jns
stos
add
cs
jg
add
pop
pop
jl
or
jg
dec
xchg
mov
jae
inc
add
pop
pop
or
inc
movsb
jge
out
xchg
je
stos
lods
inc
add
pop
imul
in
sbb
sbb
enter
cwtl
in
loopne
jo
add
aaa
sahf
popf
aas
add
orb
ret
dec
jg
mov
js
fnstsw
lods
movsb
and
or
addr16
repnz
add
loope
mov
hlt
jnp
bound
clc
xor
mov
adc
mov
loopne
arpl
jmp
or
sbb
xchg
add
out
pop
dec
push
enter
jnp
lds
pop
fstpl
leave
inc
add
sbb
cwtl
push
popa
or
xchg
ds
pop
add
jo
add
in
push
imul
push
iret
jecxz
add
push
mov
enter
add
cmp
jmp
add
add
addb
ret
sbbb
add
or
cmp
adc
ret
add
ficoml
enter
ss
xchg
cmp
aam
std
push
xchg
rolb
stc
hlt
adc
add
scas
and
xchg
add
push
mov
adc
test
in
pop
roll
jo
cmp
add
pushf
sub
cwtl
add
test
add
push
xor
loopne
xor
cmpsb
mulb
mov
lcall
add
dec
or
mov
ret
mov
push
sub
xchg
out
add
notb
ljmp
cs
and
ss
mov
sbbl
cmp
ret
mov
pop
addb
pop
test
xor
xchg
add
or
adc
jl
pop
add
inc
push
mov
push
aaa
add
ret
arpl
je
cmp
movsb
rcl
gs
pop
ret
pop
inc
add
push
bound
add
mov
and
inc
push
add
shrb
pop
sub
out
imul
dec
add
add
arpl
mov
xchg
sub
mov
gs
ret
sbb
fwait
jecxz
int
repz
pop
sbb
lret
hlt
add
in
sbb
sbb
add
roll
aaa
cmpb
rcrb
mov
rorb
push
ljmp
aaa
jnp
xchg
push
pusha
lahf
std
push
out
add
sbb
push
outsl
add
in
cmp
mov
mov
inc
add
dec
pop
fstpt
add
movl
pop
push
pop
fbld
rcl
mov
cwtl
sti
pop
cmp
or
xchg
add
add
pop
add
or
lea
ja
lds
cs
rcrb
iret
add
add
mov
add
ret
bound
add
xchg
adc
rcrb
add
popa
rcrb
andl
jno
jns
pop
push
pop
cmpsb
loopne
inc
into
clc
insl
inc
leave
add
ljmp
push
out
mov
fmul
add
push
mov
xor
js
jmp
in
addb
pop
add
int
cmc
cld
jg
hlt
add
pop
dec
jnp
adc
fcmovnu
gs
out
icebp
add
fsts
xchg
add
inc
push
inc
sub
js
xlat
add
rorl
pop
push
scas
and
lods
push
aas
lds
cli
mov
mov
mov
lea
pop
push
mov
lds
test
add
push
add
loopne
push
out
cmp
mov
add
daa
add
cmp
testl
dec
push
jl
clc
and
fimull
sbb
or
testl
push
adc
rcll
xor
add
pop
add
stc
mov
movsl
popa
cmpsl
notb
pop
add
sbb
or
mov
lea
scas
add
cmp
jmp
shll
jne
cmpb
xchg
mov
fldenv
pop
jo
jl
sbb
dec
mov
push
cli
cmp
jo
jae
add
popaw
imul
je
cmp
add
mov
fldenv
push
inc
mov
ror
sbb
xchg
inc
in
adc
loope
aas
aaa
out
add
sbb
push
ror
add
add
lcall
add
cmp
pop
push
popa
push
sub
fsub
or
shrd
sbb
insb
pop
jne
popa
pop
clc
xchg
rolb
mov
pop
jae
lods
pop
push
or
test
sbb
out
inc
iret
push
cltd
adc
pop
or
loop
popl
sub
pushf
cmp
inc
cmc
mov
xchg
push
or
pop
and
jecxz
pop
fbstp
cld
sbb
out
sub
cmp
mov
inc
sahf
add
pop
aas
add
xor
insb
js
add
in
adc
push
add
push
jb
out
fprem
std
popf
mov
jge
jae
loope
pushf
xchg
les
mov
mov
pop
mov
cmpl
add
cmp
ja
xchg
je
js
test
add
sbb
pushf
cld
mov
jb
dec
cmp
pop
fmull
cltd
sbb
mov
jne
and
or
add
addr16
mov
cmp
inc
stos
add
jnp
sbb
and
dec
fdiv
pop
rolb
sahf
pop
mov
add
pop
inc
dec
mov
push
inc
rclb
je
fistpll
sub
stos
ret
dec
add
or
stc
add
sbb
and
xlat
scas
cmp
popl
fwait
or
mov
int
push
lret
or
cmp
adcb
add
xchg
pop
loopne
test
mull
or
inc
out
mov
add
cmp
cmp
aas
add
xor
mov
push
xchg
mov
nop
jmp
add
sbb
cltd
fdivs
xor
cmpsl
push
and
add
mov
repz
stos
pop
aaa
add
pop
mov
add
inc
mov
adc
or
mov
cmp
add
pop
sub
mov
inc
cld
out
orl
mov
and
push
orl
leave
add
push
jp
pusha
mov
mov
cmp
lock
cltd
add
sbb
lret
push
add
into
les
daa
add
add
jo
leave
loopne
int3
jno
add
and
xchg
sbb
dec
jp
add
xchg
jb
lock
push
add
xor
les
sbb
xor
add
fdivl
rorb
test
loopne
inc
add
and
cmp
add
sub
fiaddl
repnz
icebp
lds
jecxz
mov
out
add
mov
pop
pop
add
jp
inc
inc
scas
jne
mov
gs
cmp
xor
clc
add
pop
sbb
pop
xchg
pusha
xor
scas
fstl
fsubrs
cmp
jns
filds
sbb
adc
je
add
push
lret
xchg
stos
cmpsl
mov
jns
add
loop
addr16
lock
cltd
call
cmpsb
mov
pop
push
aas
mov
cmp
dec
cmp
push
in
add
xchg
pushf
out
fwait
inc
test
les
js
mov
test
mov
rcr
rcll
xor
cmp
or
sbb
pop
add
mov
out
adc
mov
push
adc
iret
enter
xchg
push
dec
pop
movsl
rcrb
pop
pusha
cmpl
xchg
sbb
or
add
loope
push
add
inc
fiaddl
add
insl
ret
nop
mov
clc
shrl
mov
icebp
cli
sbb
xchg
in
xchg
stos
out
sub
push
stc
or
adc
sbb
scas
push
cmp
mov
int
add
clc
std
mov
je
add
jb
pop
sbb
jp
aaa
aam
inc
jne
pop
mov
fistpll
xor
sti
push
mov
out
mov
add
jmp
mov
mov
cmp
jae
mov
xchg
jmp
or
test
pop
add
dec
sub
into
shr
add
mov
orl
jno
fsubr
lds
icebp
inc
fstl
pop
outsb
das
add
sbb
repnz
add
sub
mov
mov
push
outsb
arpl
jecxz
mov
les
pop
shlb
jno
cmp
add
and
in
or
cmp
cmp
add
and
lret
fiaddl
loopne
popf
cmpsl
or
in
in
add
enter
aaa
cltd
cmp
pushf
ret
mov
push
pop
mov
add
iret
sub
push
into
sbb
xor
lock
add
push
mov
clc
cmp
cli
inc
add
in
or
jle
clc
std
push
popa
testl
cwtl
mov
fisttpll
jp
add
sub
movsb
js
or
add
sti
xor
cmpl
cmp
in
xchg
xchg
lret
adc
outsb
xor
xor
add
cmp
push
test
push
sbb
fs
xchg
mov
pop
in
xor
ret
cmove
lock
roll
mov
jle
sbb
sbb
xor
jb
sarb
hlt
add
popf
and
lahf
push
or
dec
addb
xlat
add
lret
mov
cmp
pop
xchg
scas
or
adc
jg
mov
jmp
addr16
add
test
movsb
in
adc
sub
add
aas
in
aam
andl
rclb
loopne
jmp
or
jg
pusha
test
or
fs
and
mov
push
add
jo
fidivs
sbb
sahf
fwait
add
and
arpl
jge
inc
xor
xchg
cmp
ds
cs
fwait
add
into
ja
in
dec
xor
ljmp
and
sbb
inc
lret
aaa
adc
sub
xorl
xor
test
scas
shrb
add
rol
cmp
idivl
mov
add
imul
int3
add
sub
ds
enter
test
in
sbbl
insb
inc
add
fldt
inc
add
aad
jp
lcall
jl
sub
and
xchg
lods
add
pmulhw
faddl
insl
xor
adc
and
ds
mov
mov
mov
lcall
fwait
mov
and
movsl
jns
setl
popf
sbb
je
adc
fildl
pop
ja
jle
pop
dec
mov
fs
rcrb
sbb
xchg
into
out
stos
inc
clc
fwait
adc
cmpb
in
push
negl
add
push
repz
add
xchg
mov
fisubrl
jg
ret
fwait
adc
jnp
daa
jmp
cli
loopne
in
push
jmp
aad
fstps
mov
add
cmp
sti
jg
add
mov
push
jb
jnp
dec
sbbb
push
pop
sbb
pop
adc
adc
test
jb
mov
push
or
sbb
stos
je
sub
negb
cmp
aam
add
adc
cli
cmp
jb
add
fmull
or
fistpll
mov
scas
add
adcb
and
jae
adc
mov
pop
xchg
jnp
xor
and
jp
add
das
adc
and
fwait
add
outsl
xor
ja
test
sub
push
std
mov
popf
push
and
call
cmpsb
cmp
dec
ret
or
call
sbb
cmp
popl
inc
lcall
mov
pushf
lods
add
mov
inc
mov
mov
imul
pop
adc
mov
call
mov
add
push
jb
dec
sbb
sbb
mov
lock
xchg
inc
sbb
pop
sahf
inc
xor
and
loop
add
xchg
mov
add
pop
pop
std
call
push
fisubrs
cmp
das
fdivrl
out
cmpsb
add
and
inc
pusha
lcall
sub
jg
in
pop
mov
ret
add
push
pushf
cli
dec
and
sub
out
or
mov
mov
lret
popa
xchg
add
rorl
stc
add
sbb
add
jl
xchg
inc
add
lods
sahf
jmp
or
and
cwtl
cli
sti
xchg
jo
aaa
and
pop
and
pop
mov
mov
hlt
and
cld
sbb
addb
jl
out
pop
add
cli
aam
pusha
add
pop
aad
add
inc
cld
pusha
add
out
outsl
inc
adc
dec
add
into
xchg
out
loop
pop
add
mov
mov
cmp
roll
fwait
test
scas
cmp
insb
mov
lret
loop
nop
outsb
or
in
sub
jb
cmp
push
mov
push
push
xor
ljmpw
push
test
mov
inc
sbb
iret
idiv
jb
add
push
mov
xchg
stos
jl
sbb
inc
fdivl
jns
aad
cmc
mov
lcall
loop
add
jle
jmp
add
fildl
push
imul
pop
rcrl
jecxz
pop
pop
dec
lock
inc
loopne
scas
test
rcll
add
stos
jnp
pop
daa
repnz
mov
lcall
pop
adc
aaa
cmp
mov
shl
mov
lock
push
push
cmp
stc
mov
sub
jecxz
sub
push
ficoml
ljmp
add
adc
mov
add
shl
stos
lahf
mov
xlat
add
push
dec
into
dec
jmp
mov
mov
loopne
bound
pop
push
dec
sbb
xchg
mov
and
lret
inc
adc
aam
inc
sbb
sbb
inc
sti
push
cld
push
insl
add
pusha
fs
mov
mov
cwtl
add
pop
xchg
into
or
or
push
push
pop
mov
sti
imul
aaa
sbb
stc
add
jmp
sbb
pop
xor
dec
ret
in
fiadds
adc
adc
sbb
bound
dec
and
int
sbb
inc
mov
mov
add
clc
std
outsl
pop
xchg
jge
add
cmp
jne
pop
mov
jp
jb
pop
inc
repnz
add
das
add
or
xchg
jns
mov
push
aaa
out
add
add
add
ret
arpl
push
je
fisttpll
add
lret
pop
clc
fadds
and
push
xchg
push
mov
add
cmpb
and
add
dec
sub
sbb
jecxz
inc
scas
or
out
cmpsb
pusha
jne
inc
movaps
push
fwait
aad
mov
adc
mov
adc
ret
add
std
cmp
pop
jmp
rolb
je
sbbb
cmp
xchg
dec
lcall
fadds
mov
icebp
and
aas
add
pop
jl
add
sbb
push
dec
xlat
bound
out
xor
mov
xchg
xor
les
xchg
test
dec
sbb
mov
leave
add
out
xchg
dec
add
mov
or
push
or
sub
cmpl
add
enter
out
and
fwait
xchg
push
pop
call
pop
jo
inc
xlat
lret
xchg
add
jp
sbb
lock
xchg
xor
loopne
adc
add
cmp
push
ss
data16
fdivs
adc
cld
mov
dec
loop
inc
sbb
xchg
add
aas
push
xchg
lods
and
sbb
mov
add
iret
cmp
js
call
scas
icebp
add
mov
sbb
push
arpl
dec
in
mov
shlb
scas
sub
adc
and
add
cmp
xor
mov
nop
roll
mov
call
add
inc
dec
loopne
inc
mov
xor
out
sbb
dec
jbe
fsub
fiadds
mov
mov
lods
inc
pop
add
sarb
nop
movsl
out
inc
mov
add
inc
in
shlb
cmc
call
inc
mov
push
or
pop
negb
inc
jno
les
movsl
add
xor
jg
leave
push
hlt
inc
ret
sbb
repnz
lods
mov
mov
test
pop
and
xor
inc
pop
inc
cli
addr16
add
cmpsb
sub
pop
popf
add
gs
mov
ficomps
cmpsl
inc
pop
and
jmp
mov
sbb
cmp
xlat
jo
popw
or
sbb
enter
add
lcall
add
ds
xchg
add
and
sbb
xlat
sub
stos
out
loopne
add
std
addr16
add
mov
cltd
cli
dec
out
shlb
or
aam
jecxz
xchg
cmp
pop
xchg
ja
inc
mov
add
sbb
pop
push
or
xadd
shll
int
push
das
call
je
mov
or
test
push
mov
shl
or
jg
pop
add
leave
xor
jae
jnp
dec
stc
push
push
rcrb
add
ret
xorl
fisubl
mov
fmuls
test
sbb
nop
and
add
movb
cltd
ret
pop
add
jl
and
mov
cmp
and
add
jno
mov
ljmp
int
iret
ret
mov
imul
daa
add
jne
inc
cli
movsl
add
inc
and
cmc
push
sbb
arpl
push
xchg
push
sub
add
cmp
sub
cmp
cmpsb
cltd
loop
pop
adc
sbb
mov
mov
jae
add
mov
adc
sbb
stos
sahf
or
mov
add
sti
fsubrp
into
add
pusha
sbb
mov
xor
stos
cmpsb
pop
sub
mov
sub
test
enter
ss
call
pop
pop
lcall
mov
addl
shlb
or
adc
popa
data16
add
pusha
repnz
test
adc
jge
add
testl
sub
mov
adc
int3
push
or
push
es
add
pop
aaa
fs
jo
add
sub
loopne
xchg
xchg
add
in
xor
add
mov
lods
push
cld
add
std
filds
cmp
mov
add
test
xchg
lret
add
add
fwait
jnp
mov
cmp
sub
popf
std
subl
mov
lcall
hlt
xor
pop
lods
call
insl
jge
loop
outsb
clc
inc
hlt
add
add
cmc
and
add
or
xchg
or
mov
add
imul
inc
mov
dec
or
add
imul
add
add
or
add
cmpsb
inc
stos
bnd
rolb
pop
mov
inc
jge
cs
push
xchg
ss
pusha
xchg
mov
push
jbe
mov
sub
jo
scas
add
inc
lea
jmp
mulb
movsb
les
jmp
loopne
addl
fs
pop
xchg
dec
popf
xorb
adc
and
sahf
xor
and
mov
out
stos
cmc
arpl
sti
add
inc
cmp
xor
pop
test
out
mov
test
dec
mov
jl
in
ss
cltd
pop
clc
pop
sbb
add
mov
lahf
add
cltd
lods
add
lds
mov
sub
cmpsl
hlt
xor
push
mov
jecxz
shrl
in
push
add
dec
call
xchg
sbb
imul
jmp
add
add
and
iret
sbb
xor
jle
mov
add
mov
add
mov
jae
mov
push
pop
pop
or
xor
mov
sbb
les
orl
clc
jg
push
add
mov
in
xor
or
inc
and
cmpsb
lock
jecxz
cld
loope
xchg
repz
sub
add
ret
jge
pop
lock
mov
fidivrl
mov
xchg
push
mov
push
push
xchg
arpl
je
push
ja
std
sahf
pop
add
rcrb
add
out
pop
add
cmp
inc
mov
sub
adc
fsubs
mov
enter
orb
pop
adc
cmp
call
in
jo
imul
mov
adc
clc
movb
clc
jae
or
shll
fildll
mov
add
addb
lea
add
dec
pop
jb
cmp
imul
dec
rclb
xchg
sub
inc
sbb
loop
add
and
push
jg
add
popf
push
add
sbb
add
shll
in
mov
clc
sti
repnz
add
js
test
cmpsb
inc
fiadds
ret
add
lret
pop
jp
repnz
rol
add
cmpsl
sbb
scas
aaa
cmp
mov
xchg
jmp
inc
daa
fwait
sbb
js
xor
cld
popf
rorb
les
inc
jo
cmp
jmp
xchg
pop
in
in
push
jg
mov
push
hlt
push
xor
push
pop
lret
cmp
xchg
mov
add
xchg
js
call
lods
sbbb
and
cmpsb
mov
push
xorl
dec
push
sbb
or
repnz
ljmp
add
ret
jle
fadds
cmp
js
arpl
sub
and
es
pop
sbb
or
cs
int
movsl
add
or
adcb
jne
mov
les
add
push
jns
cmp
mov
das
test
and
cmpsb
xchg
mov
xor
sbb
mov
inc
cmpsl
fidivrs
xor
sbb
movsl
inc
pop
fpatan
dec
clc
xchg
jg
add
ret
repnz
inc
pop
imul
xor
mov
in
mov
enter
add
mov
xchg
jns
jns
add
aaa
ja
pop
push
rolb
sahf
aas
mov
int3
inc
popw
xchg
jg
push
shlb
jl
inc
add
cmp
sbb
xchg
jne
add
pop
divps
je
add
imul
xchg
xchg
test
mov
mov
insb
add
popa
xchg
hlt
xchg
in
push
add
sub
lock
push
mov
push
add
jb
hlt
mov
xchg
in
add
push
stos
stc
add
rol
add
es
mov
inc
dec
int
pop
add
or
xor
test
orb
lods
lret
js
add
test
loope
fwait
adc
mov
add
mov
add
lcall
xor
mov
add
xor
add
mov
cmc
mov
add
push
cli
in
pop
sbb
mov
sbb
and
aaa
mov
add
add
call
lret
idiv
fistpl
outsb
cmp
aas
cmp
mov
scas
push
dec
add
fisttps
in
xor
add
mov
mov
mov
push
or
hlt
dec
loopne
dec
orl
andb
pop
data16
popa
add
mov
out
add
add
pop
adcl
mov
sub
push
add
xchg
scas
outsb
subb
ds
inc
repnz
imul
mov
stos
add
lea
ficoml
pop
out
sti
cs
push
mov
jle
mov
pop
lret
sub
inc
xchg
mov
es
add
mov
ret
das
dec
cmp
xchg
inc
mov
stos
add
lcall
dec
outsl
mov
stc
add
daa
inc
jge
cmp
hlt
push
jno
mov
inc
shrl
js
cs
call
push
rcrl
pop
pusha
popf
push
mov
and
in
push
add
and
mov
sbb
xor
xchg
mov
sbb
je
fcoml
in
mov
add
xchg
sti
fcomp
lods
add
dec
loop
add
and
mov
xchg
xchg
sti
adc
dec
ds
cld
rolb
lock
fnsave
loop
add
pop
lcall
and
leave
hlt
add
mov
and
sbb
adc
sub
sbb
fildll
mov
jecxz
enter
cmp
xchg
inc
ss
fsubs
into
xor
js
inc
pop
pop
jns
inc
lahf
clc
imulb
in
sbb
ror
rorb
mov
add
cmp
mov
mov
test
and
xor
les
popf
xchg
push
adc
sbb
inc
xchg
push
mov
gs
push
mov
pop
lods
mov
sbb
hlt
add
leave
jl
add
fstpl
pop
sub
in
or
inc
iret
add
outsl
xchg
flds
test
fnsave
leave
and
rolb
dec
imul
out
decb
push
or
add
xchg
adc
xlat
roll
daa
fnstsw
or
add
fistpll
pop
xchg
add
jae
std
xchg
in
sbb
sub
sbb
mov
rclb
add
insb
popa
fildl
cli
int
and
lock
add
loopne
dec
sti
jo
push
xor
pop
jp
add
and
in
xor
rorb
lret
daa
cmp
sub
loopne
in
sub
pop
add
jge
xlat
inc
into
push
cmp
subb
xor
adc
dec
call
add
sbb
insl
push
cmp
pop
and
das
leave
or
idivl
sbb
sbbb
xlat
out
cmpsb
jno
loopne
add
outsb
mov
mov
dec
add
mov
add
imul
gs
mov
add
les
add
cs
lret
mov
adc
jge
and
ret
sbb
fistpll
dec
int3
movsb
testb
mov
add
or
int3
cmc
xor
push
outsl
pop
jecxz
out
add
pushf
repnz
fs
lods
add
or
loop
dec
notl
leave
je
xchg
add
pop
push
iret
rcl
enter
add
dec
jb
add
mov
inc
xor
sub
movsb
mov
jg
lea
pop
sbb
jecxz
jae
cmp
sbbb
dec
add
sbb
jb
popa
add
push
das
popf
jecxz
cmpb
ret
icebp
and
movsl
fldl
leave
lret
stc
cmp
pushf
dec
xchg
and
xor
dec
add
inc
arpl
dec
mov
and
add
and
js
push
sahf
push
xor
dec
mov
mov
add
insl
icebp
aaa
loopne
and
or
cmp
lahf
pop
fisttpl
test
mov
mov
sbb
out
sbb
push
jecxz
mov
adc
dec
add
xor
popf
lds
cmc
movsl
out
xlat
scas
rcl
pop
loopne
add
rcll
adc
add
mov
jo
add
aas
in
mov
dec
inc
cmp
jns
push
fildl
std
mov
sbb
sbb
sbb
inc
cmp
xchg
or
adc
and
into
outsb
dec
pmulhw
mov
loopne
add
pop
xchg
add
mov
cmc
jb
ret
xor
lret
xchg
push
mov
pushf
xor
mov
jns
pop
popa
test
nop
sub
sbb
movsb
push
shll
mov
es
test
mov
loope
cmp
setbe
xor
aad
lds
mov
sbb
push
rorb
aaa
das
dec
mov
lret
cmp
cmp
insb
jmp
ds
cld
rcrl
xor
das
cmp
test
es
cmp
aaa
add
mov
jns
mov
push
sbb
lock
outsw
adcb
add
adc
add
mov
incl
add
sbb
ficoml
test
jg
add
pop
xchg
cmp
add
iret
mov
xchg
add
notl
add
test
cmp
out
dec
dec
addw
cmp
xchg
pushf
sbb
aaa
jmp
les
nop
add
popf
icebp
ja
ret
jo
subl
dec
xchg
add
push
icebp
lds
inc
xor
or
dec
sahf
xor
test
cmp
cmp
adc
and
add
adc
clc
into
daa
add
rorl
leave
sub
jg
mov
imul
push
inc
hlt
fwait
shlb
ds
cmp
add
push
or
data16
pusha
mov
std
test
cwtl
inc
lahf
outsb
or
lods
je
add
enter
add
add
popf
adc
sbb
jle
or
mov
call
js
add
minps
popa
andb
sbbl
push
adc
jmp
in
inc
inc
vmwrite
pusha
xchg
sub
aas
repz
in
in
add
pop
mov
add
out
sub
gs
shr
daa
faddl
movsl
mov
add
stos
loope
cmpb
roll
mov
push
dec
decb
sbb
stc
sahf
xlat
clc
je
ds
dec
cmp
or
add
addr16
call
sahf
iret
inc
mov
mov
sbb
stos
mov
adc
add
and
inc
loopne
add
xlat
call
roll
int
dec
fldl
lock
pusha
imul
insl
orl
faddl
out
cmp
addr16
jnp
pop
add
pop
stos
adc
shlb
imul
imul
mov
jbe
fwait
pop
xchg
add
das
push
insb
add
pop
jle
int3
push
mov
sub
pop
shl
push
rcrl
enter
add
dec
fsubr
enter
inc
add
cs
outsb
jae
add
dec
xor
subb
out
in
fwait
xor
push
pop
sub
add
cmp
ficoms
aad
mov
int
add
mov
ds
lret
mov
clc
or
pop
add
lock
cltd
insl
test
inc
add
sbb
jb
sbb
and
scas
mov
sti
cmp
inc
pop
icebp
je
ret
and
imul
aas
dec
add
add
add
pushl
add
xchg
sbb
add
cmpb
icebp
mov
and
adc
mov
mov
jne
jecxz
imul
jl
in
ret
andb
sub
mov
push
mov
dec
add
hlt
mov
add
inc
jl
outsb
rorl
cmp
add
loopne
aaa
cmpsb
loope
aad
lock
add
fidivrs
add
lock
and
mov
aaa
inc
or
push
loope
ret
in
or
push
movsb
mov
and
xchg
xor
stos
adcb
add
and
ljmp
imul
jp
add
inc
mov
cmp
lods
dec
cmp
add
outsb
iret
jne
cmp
push
lahf
andl
ret
repz
fadds
push
fcoms
add
fistl
adc
mov
dec
fwait
mov
mov
jne
jle
daa
push
or
inc
ficoml
adc
popf
int
add
adc
push
orb
xor
add
pushf
icebp
fcmovne
cwtl
lods
aad
pop
aas
popf
dec
and
cld
add
mov
add
xor
lahf
pop
xchg
jo
add
outsl
popa
mov
ss
cmp
add
xchg
js
or
ja
push
ds
sub
cwtl
cmpsb
mov
pop
cli
jle
lahf
sbbb
iret
add
jb
dec
push
jns
pop
cltd
orb
adcb
or
add
sub
movsl
xchg
add
mov
lods
or
fcmovu
subb
push
add
out
lret
add
push
aam
icebp
sub
out
push
add
pop
shl
roll
lcall
add
or
pop
aam
add
mov
adc
mov
insb
fldl
stos
int
sarl
pop
push
dec
push
push
inc
iret
orb
xchg
dec
pop
or
mov
jp
xor
add
inc
jb
xchg
xchg
mov
fldl
pop
je
clc
mov
in
mov
daa
xor
movsl
es
xchg
adc
inc
repz
or
and
scas
xchg
mov
call
icebp
adcb
in
ret
in
lahf
shrl
inc
mov
repz
jp
inc
add
subb
pop
xor
sbb
cmc
push
test
idivb
fs
xor
in
lret
rol
fisttpl
cmpsb
sbb
push
cmp
pop
addl
out
testl
cltd
add
rcll
adc
and
push
sub
pop
cltd
dec
inc
push
ret
movsb
inc
stos
pop
lods
rcr
push
shlb
jbe
mov
push
sahf
dec
fidivs
sub
jo
fimuls
outsl
mov
xchg
loope
push
jle
add
mov
push
sbb
add
sbb
sub
orb
or
outsb
mov
aas
add
mov
fistpll
call
int
inc
xor
or
or
mov
in
push
mov
ljmp
sbb
cli
jmp
or
add
inc
aas
push
add
in
or
push
mov
add
nop
cmp
fisubl
cmp
push
popf
xor
mov
add
daa
cli
or
rorb
lea
icebp
mov
add
mov
add
sub
sbb
negl
mov
add
lret
dec
rolb
fmull
xor
out
inc
insl
add
mov
xor
push
push
fdivl
add
and
flds
or
out
pop
cwtl
mov
je
pop
xor
iret
mov
push
movsb
push
jbe
into
mov
pop
xchg
movsl
inc
add
push
punpckldq
lret
cmp
add
mov
push
adc
ss
sahf
jge
xchg
add
pop
fildl
cmp
sbb
loope
filds
pop
cld
jl
jae
push
mov
cmpb
ljmp
daa
cmp
rclb
aas
cld
add
test
push
movl
inc
imul
xlat
cmp
jnp
int
popf
and
lods
das
add
xchg
sbb
into
scas
inc
add
pusha
or
jle
xor
loopne
cmp
sbb
or
pop
mov
cmp
out
add
add
pushf
adc
sbb
add
out
add
lds
jg
ljmp
push
fnstenv
in
cli
test
push
outsl
stos
xor
movsl
js
ja
movaps
xchg
sub
add
fidivl
add
sub
sub
fdivrl
ret
ret
or
cmp
add
int3
mov
movsb
sbb
ljmp
and
int
and
fcom
cmp
jge
ss
aam
jl
les
outsb
and
mov
and
xor
sbb
sti
nop
xchg
filds
push
jl
add
cmc
add
into
jo
add
ds
icebp
jle
popa
mov
ret
movsb
jp
add
bound
pop
in
add
dec
fcom
sub
shlb
pop
stos
mov
dec
xorb
xchg
dec
cmp
add
cmp
insl
fsubrl
sub
and
dec
cmp
addl
jecxz
xchg
fists
cmp
mov
test
mov
dec
dec
cli
push
add
lock
cmpsl
inc
fadds
adc
out
pop
and
sub
xchg
add
mov
add
sbb
lahf
jbe
add
or
fs
mov
imul
cmp
rorb
lahf
test
or
in
cltd
out
fdivrs
scas
xor
xorl
mov
ss
fwait
push
inc
rolb
test
cs
les
sbb
xchg
test
inc
xchg
shl
jo
cmp
cli
cwtl
mov
add
xor
mov
mov
mov
cmp
flds
std
or
pushf
rolb
stc
add
fs
repnz
jg
jecxz
add
popf
and
in
fisubrl
sarb
jb
mov
add
out
dec
out
fiaddl
cs
pop
pop
push
add
mov
pop
adc
ficoms
ss
inc
pop
cmp
aas
jo
popf
imul
lret
mov
push
jle
add
ja
frstor
popf
sbb
arpl
ret
das
cmp
add
inc
jg
bound
pop
sub
jne
inc
cmp
cli
add
xchg
push
js
imul
add
test
add
bound
cmp
xorl
mov
lods
sbb
mov
out
jg
in
add
and
iret
add
ret
cmp
in
add
jecxz
insb
in
mov
adc
add
lret
enter
sahf
xor
rcrl
or
aad
push
add
sbb
fidivl
andb
and
sbb
dec
dec
inc
add
clc
mov
in
mov
mov
mov
cmc
xor
or
fs
xchg
push
sub
jbe
shrb
inc
imul
loop
pop
daa
cmp
add
xlat
push
test
aaa
fs
add
sbb
stc
xchg
roll
fwait
incl
ja
jmp
add
loope
lods
mov
sbb
aaa
subb
add
pop
mov
pop
in
mov
xchg
adc
outsl
jne
pop
divb
jl
add
fcomps
push
mov
sbb
inc
push
push
xchg
ror
cmp
jecxz
mov
int
mov
fcmovnu
inc
mov
mov
pop
arpl
pop
in
lods
in
and
add
mov
mov
outsl
enter
pusha
in
adc
aad
add
xchg
add
mov
pop
mov
inc
scas
rorb
sub
testl
cmpsb
xor
cli
ret
dec
or
xchg
push
mov
add
push
in
filds
sahf
lock
cmp
mov
add
jge
sub
repnz
out
dec
out
add
add
xchg
out
inc
test
pop
add
roll
rep
rcll
nop
leave
enter
or
push
add
jno
push
cmp
jmp
pop
in
add
pop
xor
fcmovbe
out
roll
cmc
pushf
fidivs
cmpsb
add
int3
mov
fwait
inc
add
in
lock
lods
push
jno
fsubs
test
xchg
inc
push
mov
test
xorb
push
push
add
sbb
rcl
sbbb
xchg
xchg
scas
in
add
push
add
shll
pop
mov
or
aad
pop
popa
jo
lahf
mov
lea
loop
add
dec
jae
cld
arpl
add
shrl
sbb
test
outsb
push
push
push
jns
and
add
ret
cmp
mov
jnp
dec
cmp
cld
outsl
fiaddl
sbb
rolb
inc
stc
push
out
repnz
pusha
mov
xchg
ja
and
fnstenv
rolb
mov
sbb
xlat
adc
jmp
xor
sbb
outsb
mov
add
outsl
sbb
loop
leave
out
dec
xchg
ljmp
jge
push
aad
adc
xor
sti
aam
add
lcall
xchg
or
scas
bound
cmpsl
add
push
or
cmp
not
add
xchg
int
push
popf
add
shlb
movsl
dec
mov
pop
add
jmp
gs
adc
test
mov
stos
or
add
jge
insb
inc
imul
outsb
xchg
adc
shll
push
add
bound
xor
fs
shlb
mov
ror
add
jmp
add
nop
mov
repz
xchg
fcoms
sbb
lea
ja
xchg
add
pusha
push
add
cwtl
mov
leave
or
shlb
icebp
fdivrl
mov
mov
mov
dec
jns
mov
or
add
sub
add
push
aam
sub
sarb
hlt
add
iret
jae
lahf
sub
cld
ret
in
xor
movl
sbb
add
push
cmpsl
xor
push
jg
lock
adc
std
and
sbb
jecxz
ret
ja
or
into
push
sbbb
sub
add
pusha
xchg
es
enter
or
dec
jecxz
pop
add
sbb
shlb
jmp
addl
bound
sub
sahf
pop
cmp
xchg
outsl
cmp
jl
bound
aam
and
pop
dec
push
out
ror
mov
add
xor
sbb
dec
mov
sub
int3
add
mov
scas
xchg
adc
mov
sbb
pop
lcallw
pushf
loope
lret
out
add
cmp
add
push
dec
or
vmovaps
pop
aaa
fdivl
ja
jae
add
cld
imul
sub
add
repz
loope
scas
insb
aas
mov
mov
cmc
jg
add
inc
adcl
divl
in
jae
adc
sub
int3
sub
xor
rclb
cs
popf
add
fwait
std
pop
cmp
orl
push
andb
in
inc
xorl
jp
adc
ud1
push
cmp
fdivr
je
add
xor
sbbb
inc
loop
sti
fmuls
pop
js
jg
out
fcomi
pop
loopne
das
pusha
mov
hlt
and
imul
dec
push
add
jae
xor
sub
jmp
test
xchg
push
mov
and
add
cmp
mov
and
sub
lret
pushf
mov
cwtl
addb
pop
add
shll
push
add
pop
xor
add
lret
or
adc
scas
sbb
xor
mov
aas
inc
mov
int
bound
imul
in
xchg
add
add
sub
sub
dec
pop
mov
lock
mov
push
out
add
sti
add
mov
imul
cli
pusha
shrb
cmp
lea
leave
add
xor
mov
dec
je
add
pop
or
sbbl
and
add
xchg
push
cmp
je
or
imul
add
call
push
mov
xchg
pop
or
bound
push
push
stc
pop
adc
inc
in
sahf
cwtl
add
addl
lods
addr16
enter
rcr
dec
add
jb
pushf
add
push
and
aas
in
inc
or
shlb
test
in
sub
pop
adc
pop
pop
push
or
adc
js
movsl
add
lods
pop
dec
pop
xchg
fldl
cmp
sbb
insb
iret
jo
push
adcb
cmp
jno
popa
popl
nop
jmp
adc
inc
in
jp
add
dec
lea
insb
add
xchg
push
and
fdivrp
icebp
jae
add
jne
int3
add
dec
adc
add
jge
xor
and
cmp
in
fwait
and
mov
jg
aad
enter
fs
cmpsl
decb
pop
sbb
mov
sbb
jge
push
mov
lds
bound
rolb
jb
pop
and
stos
lock
inc
adc
sahf
dec
push
mov
mov
adc
jge
je
jb
add
mov
imul
add
inc
sub
add
pop
ljmp
lldt
insl
aaa
and
mov
shll
dec
adc
popa
pusha
xlat
test
in
dec
into
xchg
daa
repnz
xor
fldl
leave
mov
add
imul
cmp
pop
aas
add
repz
jecxz
cli
add
pop
daa
sub
sub
ret
repnz
sbb
add
mov
inc
insb
sub
push
ror
scas
cs
aas
xlat
cld
lods
jno
add
sub
jnp
add
out
jbe
int
mov
jg
shrl
inc
adc
xor
dec
push
inc
les
in
add
xchg
mov
sbb
outsl
jp
xor
inc
push
in
mov
add
push
fldenv
testl
pusha
or
and
sub
pushf
add
aaa
stos
jge
jne
notl
pop
shrb
dec
pop
push
cmp
xchg
cmp
repnz
jecxz
sti
daa
cwtl
mov
push
repz
pop
aam
sub
add
ss
fs
pop
test
add
repz
add
adc
test
ss
add
es
sbb
les
add
test
fwait
loopne
in
push
sub
jae
lds
add
pop
fistpll
pop
push
loopne
cmp
fildl
or
popf
leave
ja
adc
mov
test
sbbl
test
jnp
insb
cltd
add
lcall
pop
add
mov
insb
clc
add
bound
lcall
cmp
jmp
add
out
sub
stos
xchg
call
cmpsl
dec
add
andb
cs
verw
frstor
mov
sbb
inc
jnp
add
sbb
iret
sub
enter
add
push
bound
add
xor
nop
mov
addr16
lea
ds
add
ror
jle
pop
das
faddl
idiv
pop
les
sub
lret
cmpb
sti
push
add
mov
or
mov
add
add
aam
mov
or
cld
fldl
jmp
int
mov
imul
jg
fwait
push
fs
mov
loope
fstpt
adc
and
outsb
cmp
adc
ljmp
js
das
add
push
subb
popf
push
jnp
add
je
jmp
cmp
add
jbe
mov
pop
in
lods
add
call
cld
pop
sub
fbld
add
arpl
mov
pop
jnp
outsb
jle
push
add
sub
inc
lldt
push
add
pop
daa
or
xor
addr16
jbe
or
fdivrl
sub
pop
mov
add
fisubrs
xor
xchg
mov
dec
popa
push
sbb
xor
daa
push
mov
pop
hlt
mov
and
xchg
mov
stc
in
jns
pop
add
pop
jnp
pop
daa
in
inc
int
movsb
add
repnz
jp
add
rorb
or
sbb
into
inc
inc
adc
or
add
xbegin
mov
xor
nop
test
add
jns
cmp
mov
cmp
ss
divb
add
stos
lahf
lret
push
lock
fmuls
lret
pop
inc
js
insl
xchg
fdivrs
adc
inc
ss
jmp
jecxz
push
dec
mov
add
outsl
insb
scas
add
enter
mov
clc
and
pop
outsl
and
bnd
aam
or
jns
popf
dec
loop
mov
iret
sub
xchg
xchg
xor
add
jae
add
pop
int3
sub
mov
cmp
mov
pop
cmp
addb
or
mov
xchg
add
pop
dec
popa
hlt
sub
jl
inc
xchg
inc
cmp
test
mov
pop
sbb
dec
mov
mov
in
xchg
ret
pop
xor
aas
push
mov
daa
jl
ljmp
add
and
jne
cmp
push
bound
jp
cld
dec
mov
fists
add
jb
fcomps
popa
mov
push
test
pop
xchg
in
add
inc
fs
outsl
bound
jne
add
sub
sti
dec
add
cmc
cmp
out
add
xchg
test
imul
add
lea
xor
fisttpll
add
lahf
adc
jmp
xor
fimuls
int
cwtl
add
push
leave
mov
mov
sub
sbb
lods
loop
popl
xchg
xlat
and
les
scas
add
outsl
push
pop
sub
sub
stc
pop
add
faddp
shl
sub
add
out
pop
push
popa
pop
out
add
loop
add
and
and
das
sub
add
add
cmc
adc
movsl
jecxz
add
dec
cmp
loope
add
call
xchg
mov
mov
or
jbe
orb
fldl
ss
jge
scas
lock
cmc
add
xchg
fs
mov
out
dec
out
or
aad
jp
jge
or
movsb
and
enter
cmp
imul
mov
outsb
add
pop
sahf
enter
stos
add
cmp
sub
jg
add
aad
inc
out
add
ss
cwtl
cmp
pop
pop
cmc
jecxz
or
sbb
fiadds
and
out
mov
xorb
repnz
and
or
mov
test
out
add
push
filds
push
sub
mov
fiadds
je
pop
jecxz
add
pop
inc
leave
adc
in
dec
pop
js
lea
rcrb
mov
jne
int3
cmpsl
shlb
fcmovnb
add
jg
bound
pop
aad
loop
cmp
lret
lahf
jecxz
pop
int3
cmpsb
add
aam
adc
pop
addb
inc
mov
movb
in
lods
mov
add
test
cmp
fistpl
pop
fwait
pop
add
dec
adc
out
insl
std
cmp
or
inc
mov
out
inc
add
xchg
push
ds
jae
add
mov
push
arpl
add
movsl
dec
or
testb
inc
fdivrp
ret
add
push
mov
sbb
bound
pop
mov
push
jne
add
leave
in
push
loop
cmc
dec
mov
add
jp
dec
fnsave
data16
mov
fadds
dec
pop
mov
movsb
add
fisubrl
loopne
sbb
jbe
push
rcll
cli
jp
add
fisttps
out
movsb
jne
add
jp
popw
inc
mov
shrb
inc
jb
add
and
xchg
out
mov
jecxz
movsl
jp
imul
test
dec
add
push
cmp
mov
jecxz
adc
dec
subb
cmp
sub
add
cwtl
negb
imul
pop
shrb
jne
add
fwait
push
sbb
jbe
and
sbb
lock
out
std
dec
jp
pusha
or
add
testb
incb
push
push
mov
inc
cwtl
sbb
aas
add
add
out
mov
pop
and
jo
sbb
and
pushf
or
les
pop
cld
lods
and
push
rclb
in
movsb
jp
add
xchg
push
fcoml
adc
out
cwtl
mov
xchg
std
xor
insb
add
scas
and
mov
push
loopne
ret
lods
jne
or
add
xchg
testb
notl
sarb
add
cli
add
pop
push
add
mov
into
outsl
ds
dec
mov
push
inc
xorb
cmc
loopne
shrl
add
jns
insb
add
lods
dec
cmp
cmc
js
cmp
xchg
cmp
repz
add
pop
pop
and
out
sub
push
inc
mov
lcall
push
dec
test
inc
es
bound
xor
fsubs
add
repnz
jp
xchg
cld
cmp
sbb
sub
imul
jb
fidivrs
add
mov
in
das
add
jnp
xor
mov
decl
add
es
gs
mov
or
and
add
inc
in
mov
jmp
arpl
and
fadds
add
push
pushf
aas
orb
cmc
int3
mov
mov
popa
sub
sub
dec
mov
push
push
mov
in
ds
sti
lock
sarl
fbld
xor
rol
sbb
add
inc
sbb
test
push
push
and
shll
pop
repnz
xor
push
ljmp
sbb
out
outsl
push
add
addb
add
pop
das
pop
cltd
lret
sbb
mov
sub
xchg
add
cmc
out
filds
scas
mov
lock
add
pop
mov
xchg
std
add
jmp
add
add
pop
add
repnz
inc
fcmovu
add
jnp
mov
add
imul
ja
dec
push
xor
xchg
sub
mov
jb
cli
xor
push
pop
add
lods
mov
outsl
insb
fdivrs
sarb
push
dec
out
add
mov
hlt
pushf
add
sbb
sbb
es
jecxz
lods
cwtl
cmpb
pop
int
into
mov
inc
add
jp
ds
and
out
add
add
jno
cmp
add
sbbl
add
lods
and
add
add
movsb
shlb
pop
pusha
xlat
push
adcl
mov
in
add
push
or
mov
pop
test
xor
in
xor
add
popa
roll
push
push
shrl
in
xor
subb
std
pop
add
push
inc
mov
faddl
clc
or
mov
mov
aad
jp
cmp
jno
add
mov
jns
pop
xchg
xchg
ja
or
add
xchg
int3
push
cltd
add
insb
xchg
sbb
adc
add
jle
les
repnz
leave
cmp
dec
push
out
icebp
jb
push
jl
dec
jg
xor
dec
lahf
cmp
push
sub
adc
popf
adc
inc
daa
mov
mov
pop
cmp
sbb
aaa
add
pop
mov
ss
in
fwait
jbe
mov
xchg
inc
mov
fwait
or
int3
stos
jb
add
add
jl
add
inc
sub
pop
lret
arpl
jp
adc
add
loop
in
test
add
imul
mov
lea
jge
add
imul
aad
sub
cmp
loopne
mov
inc
hlt
inc
add
test
inc
nop
jbe
xor
sbb
jecxz
repz
mov
jae
add
loope
adc
dec
in
and
lcall
andb
clc
add
mov
add
fs
sub
jle
push
loopne
add
mov
shrb
push
aad
mov
sbb
test
out
hlt
jmp
mov
add
mov
mov
pop
pop
mov
inc
sbb
ss
dec
xlat
sarl
add
push
push
xchg
inc
push
sbb
add
dec
mov
flds
outsl
add
mov
and
jmp
mov
add
pop
ja
xchg
loope
add
xor
xor
sbb
add
mov
add
ljmp
add
adcl
mov
jmp
or
cmp
mov
xor
push
dec
push
cmc
mov
sbb
inc
fsubrp
sbb
arpl
in
aam
insb
add
insl
mov
sbb
xchg
setl
gs
clc
and
pop
cmp
shr
into
rclb
mov
cs
mov
add
movsl
lret
ds
lock
cwtl
cmpsl
add
repnz
sbb
sub
popa
fmull
cld
inc
arpl
shll
mov
jae
xor
movsl
mov
sti
lcall
jl
or
xor
cmp
dec
flds
imul
leave
lock
in
mov
aas
movl
lret
jl
xor
pop
jp
add
repz
in
fisubs
scas
dec
mov
xchg
mov
adc
shlb
jecxz
in
sbb
add
hlt
pusha
push
mov
xchg
iret
cs
fld
dec
add
jns
daa
add
xchg
and
mov
ret
jno
mov
jnp
sbb
add
cmp
pop
fadds
pop
in
out
movsb
cmp
addl
jns
bound
daa
adcb
cmp
xchg
cmp
add
orb
es
xchg
out
roll
dec
jg
andl
iret
add
idivl
pop
fildll
or
dec
jp
pop
sti
sub
add
daa
ret
cmp
stos
add
iret
push
in
cmp
inc
ret
cmc
test
loope
dec
cmpl
jns
addr16
movl
inc
aas
inc
add
ss
mov
mov
inc
jnp
push
add
xchg
mov
add
inc
push
xchg
pop
cwtl
mov
jle
lea
cmp
cmp
es
jb
and
mov
xorb
fidivrl
loopne
add
push
mov
push
pop
inc
mov
stos
jae
mov
dec
pop
pop
lods
lcall
pop
test
shl
dec
aaa
testl
jnp
lock
push
repz
mov
sbb
icebp
stos
lahf
pop
xorb
stos
fldl
mov
inc
mov
push
adcb
outsl
iret
xchg
add
arpl
loop
pop
movsl
cmp
push
aam
push
mov
fmul
and
fisubs
push
jnp
add
cmpb
jae
rorl
andl
push
jg
push
and
rorb
sti
aas
mov
and
push
shlb
icebp
adc
lret
xchg
add
add
pop
sbb
lods
out
or
add
fbstp
mov
inc
enter
inc
xchg
outsb
add
iret
mov
mov
hlt
lea
cmc
add
ficoml
fadds
sub
fcomi
sub
mov
mov
sbb
inc
mov
push
popf
adcb
xchg
shl
clc
push
cld
cmpsb
shlb
add
out
jecxz
dec
sub
stos
lods
out
mov
mov
orb
sbb
add
hlt
stos
push
and
cmp
dec
scas
push
xchg
add
cli
clc
sti
repnz
mov
push
jmp
mov
add
mov
adc
mov
fstl
pushf
in
pop
jbe
pop
lock
insb
orb
add
adc
xchg
add
call
jns
incl
sbb
pop
in
movsl
and
add
add
faddl
lock
add
mov
add
scas
sub
mov
stos
sbb
stc
push
and
mov
dec
sub
cwtl
out
inc
and
inc
lock
jg
mov
pop
mov
xlat
clc
add
mov
rclb
adc
pop
add
mov
mov
popf
jno
loop
inc
int3
scas
xor
dec
filds
adc
sbb
adc
cli
insl
aaa
lcall
lret
rclb
add
iret
sarl
add
mov
cli
or
inc
mov
movsb
jmp
add
push
push
push
scas
and
jg
pop
bound
jo
out
add
sar
dec
sbb
popf
lea
lods
outsl
loopne
and
in
add
loop
xchg
fstl
clc
cmp
out
mov
cmpsl
jp
add
add
adc
aad
push
dec
test
les
add
mov
mov
add
mov
pop
xor
and
or
xchg
call
icebp
add
adc
mov
pop
scas
pop
fnstsw
adc
push
xor
fcoml
test
das
in
out
sysexit
insl
inc
jno
mull
adc
into
and
ljmp
fstps
xor
jle
adc
push
xor
push
inc
pop
js
mov
faddl
rcl
push
in
add
mov
shl
push
clc
insb
je
xchg
pop
pop
sbb
test
jb
pop
or
mov
mov
sbb
push
int
mov
outsb
in
cmp
loopne
mov
mov
es
mov
jb
pop
pop
fldt
rol
cmp
test
loopne
insb
mov
jecxz
je
psubw
push
add
pop
lret
in
js
cmp
ss
or
cmp
push
mov
push
jbe
pop
imul
pop
inc
pop
sub
insb
les
adc
adcb
inc
xchg
cmp
pop
cmp
sub
add
sbb
mov
and
ret
dec
cmp
rcrb
xadd
out
add
int3
cmp
add
inc
fcoml
into
dec
sbbb
or
stc
cmp
push
push
stos
sbb
fs
arpl
sub
push
xchg
xor
inc
movsl
jb
mov
pop
fmull
inc
das
adc
cmp
test
mov
fnstcw
dec
loop
sbb
pop
mov
sahf
push
add
xor
push
mov
rcr
mov
add
or
jl
push
mov
pop
add
lock
stos
or
mov
pop
add
movsb
or
popa
mov
cmp
xchg
sub
add
mov
test
fstpl
into
xor
int3
aas
inc
and
mov
jbe
jmp
mov
std
orb
loopne
cmp
jae
lret
pop
nop
xchg
xchg
pop
add
aas
ja
iret
xor
movsl
pop
cltd
mov
ds
adcl
js
je
ret
push
pop
inc
jle
add
lcall
in
test
das
inc
add
inc
xchg
shrl
std
mov
add
test
xor
jmp
pushf
loopne
or
mov
cmp
cmp
add
mov
add
pusha
xchg
add
into
push
dec
jg
and
mov
mov
and
ret
dec
dec
xchg
lock
fiaddl
je
xor
nop
into
mov
mov
inc
fisttpll
ljmp
lods
sbbl
int3
das
rolb
cli
js
add
scas
mov
xor
add
adc
cld
inc
sub
pop
mov
sub
inc
out
dec
push
add
sub
add
in
sbb
and
movsl
sarl
testb
add
adc
sarb
and
mov
jmp
lock
dec
fwait
test
cli
inc
ret
push
loope
xlat
aad
pop
nop
and
push
ds
lods
ficompl
lret
add
aas
and
int3
cmp
mov
sar
inc
mov
add
fbstp
in
loopne
add
xchg
push
push
in
jae
movsl
add
push
add
adc
lret
in
add
daa
inc
mov
push
pop
add
add
bound
inc
jp
add
mov
and
test
inc
adc
push
call
faddl
xchg
out
push
add
aad
lret
leave
rcr
or
shl
sbb
or
xchg
jecxz
dec
pop
jns
cli
add
call
je
pop
push
out
sub
pop
fistps
or
lds
mov
dec
mov
fstl
mov
pop
clc
imul
cmpb
fiadds
push
xchg
inc
lret
sti
ljmp
loope
mov
xchg
jl
clc
addb
xor
pop
nop
push
jb
or
mov
int3
push
pop
xchg
jno
js
rol
movsl
jbe
add
jnp
adcl
scas
mov
inc
add
stc
lcall
test
jae
add
pop
and
cltd
aas
cmpsb
mov
loopne
add
sub
push
dec
das
push
xor
inc
pop
lret
movsl
sub
pushf
ja
xor
push
in
add
pop
add
jno
jnp
fwait
jmp
cmc
push
add
or
insl
loop
movsb
mov
aas
inc
jle
enter
ret
out
and
mov
stos
repz
stos
or
mov
inc
test
add
jmp
aam
lret
sbb
and
cltd
ret
cwtl
mov
jmp
add
out
dec
shr
push
jne
jecxz
ret
mov
sbb
and
cmc
out
call
add
outsl
cld
sub
jl
add
ja
mov
lock
jge
inc
cmp
jne
iret
lret
pop
pop
fmull
mov
shlb
push
add
scas
ja
sarl
shr
aas
pop
rolb
mov
sahf
add
add
add
jl
fwait
lods
scas
pop
fucomip
outsl
ja
rclb
pop
arpl
xchg
cs
rolb
sub
out
mov
mov
popa
pop
test
xchg
jb
nop
mov
or
xchg
test
cs
push
inc
icebp
adc
add
data16
loope
xor
inc
test
sub
mov
flds
pushf
xlat
jle
jnp
jns
int3
jo
push
add
test
add
shll
jg
pop
aam
pop
dec
xchg
sbb
ja
mov
lret
fcomi
or
cmp
loopne
add
jae
add
test
or
rolb
icebp
int
mov
add
pop
pop
jp
test
add
jg
and
inc
push
inc
lea
xchg
or
scas
jg
or
aad
jbe
cmp
pop
add
test
dec
icebp
push
cwtl
xchg
enter
repnz
notl
mov
test
add
add
aaa
inc
add
push
in
ret
insl
sub
mov
pop
lods
adc
arpl
dec
jno
mov
idiv
cmp
lods
push
movsl
gs
sti
cli
fsubs
scas
add
fisubrl
call
or
insl
jne
adc
lea
ja
xor
push
cmp
sbb
popf
cmp
cmpsl
cwtl
cmp
xor
push
push
sbb
add
jl
dec
mov
fnstenv
test
add
stc
fs
xor
in
orb
test
loope
enter
cld
icebp
add
or
inc
add
loopne
mov
mov
jg
xchg
pop
xor
add
xchg
cmpsl
outsb
sub
negb
add
stc
lods
insb
cwtl
aas
sbb
outsl
jmp
adc
add
adc
sbb
js
mov
and
and
sahf
xchg
popa
ja
add
cmp
jecxz
gs
add
into
pop
pop
out
mov
or
mov
push
xchg
xchg
add
test
sub
add
loopne
mov
scas
shlb
add
fsubrp
dec
cmp
xchg
aaa
aad
int
pop
lret
daa
arpl
push
call
mov
inc
mov
add
inc
clc
cmp
mov
cmpsb
les
outsb
sbb
int
dec
add
jl
mov
in
imul
add
jne
mov
test
out
sbb
cltd
sbb
jmp
stos
mov
and
ret
outsb
adc
sbb
add
mov
jle
jmp
call
pushf
cld
ss
sbb
add
mov
out
aam
add
daa
imul
scas
sahf
dec
inc
pop
lds
push
ss
push
jle
xor
sar
sub
push
addr16
sti
jg
add
fs
test
push
rcrb
rclb
loop
add
dec
in
shlb
insl
push
sbb
nop
push
ds
xchg
outsl
xor
pop
xchg
mov
pop
pop
cmp
js
pop
and
cli
push
imul
fs
add
stos
add
add
mov
mull
loopne
ljmp
fstpt
sti
jmp
push
pop
hlt
push
lcall
in
imul
add
ret
cmp
sub
cmpb
test
xchg
jns
pop
shlb
add
and
std
lcall
add
test
mov
out
popf
dec
in
loop
imul
add
push
pushf
adc
mov
jbe
lock
ljmp
push
int
add
clc
cmc
ret
fsubl
push
jo
sbb
sbb
and
pop
mov
sub
add
xor
cld
sbb
add
lret
pop
sti
xor
sbb
sbb
roll
add
les
and
cmpsb
mov
popf
or
mov
js
add
clc
adc
out
sti
mov
in
push
add
xor
out
pop
test
repz
imul
add
ja
pop
out
jp
hlt
incb
roll
mov
test
outsb
mov
nopl
addb
or
lods
fs
out
or
mov
jae
sbb
pop
mov
dec
hlt
mov
mov
fs
mov
or
ljmp
hlt
pop
fsts
mov
jecxz
popa
leave
call
sbb
pop
roll
lock
dec
cli
cwtl
add
movsb
mov
adc
call
shrb
in
add
out
addr16
bound
sbb
ret
sbb
mov
push
dec
dec
dec
mov
pop
and
cmpb
add
hlt
push
sub
out
cmp
inc
jbe
sbbb
jg
cmp
adc
rcll
fdivrl
add
mov
jge
and
sub
mul
add
pop
pop
push
enter
xor
push
jo
xchg
pop
aam
and
negl
ljmp
mov
nop
dec
or
sub
mov
sub
add
lahf
lds
mov
nop
xchg
cmp
stc
dec
mov
aaa
stos
sub
sbb
movl
call
mov
test
xlat
cmp
rolb
inc
dec
pmaddwd
outsl
or
or
add
ljmp
lea
xor
push
es
add
sarl
mov
loope
cmc
in
sub
xor
xchg
in
dec
push
add
lea
jp
or
in
pop
out
dec
hlt
jl
mov
iret
adc
jg
add
shlb
inc
stos
xchg
adc
std
cs
popf
sbb
and
inc
aad
call
add
daa
fcomps
cmp
adc
xchg
cs
cltd
lds
and
popa
inc
push
xlat
add
sub
sahf
sbb
add
lea
push
inc
out
out
add
int3
leave
out
lret
clc
and
xor
vphaddwd
pop
cli
xchg
sbb
add
dec
push
test
add
mov
and
xchg
add
cmpsb
mov
sbb
add
fisubrl
dec
stc
xor
push
add
pop
divb
pop
jl
cmp
sub
xor
shlb
roll
pop
sub
push
sbb
pushf
add
in
std
inc
jns
add
mov
inc
loopne
or
pop
pop
sub
xor
aaa
mov
adc
fadd
sub
mov
sbb
shlb
not
gs
incl
jnp
cmc
outsl
xchg
push
popf
cmp
jecxz
shrl
pop
jo
add
adc
pop
sbb
adc
lret
inc
add
je
pusha
nop
mov
imul
sub
test
push
inc
add
dec
ret
imul
lock
add
or
jnp
fidivrl
loopne
add
inc
sub
push
es
nop
in
cmpb
add
rcrl
push
jle
sub
popa
sbb
call
add
ja
cli
adc
fiaddl
add
and
xchg
cs
loope
jge,pn
stos
add
adcb
add
inc
cmp
xor
sub
cmp
cld
add
dec
add
jb
cltd
add
roll
add
shr
pusha
push
pinsrw
inc
leave
int3
testb
cmp
mov
and
xchg
add
sahf
add
data16
orb
stc
mov
dec
cmpsl
rolb
xor
int3
jnp
pop
mov
insb
mov
aad
mov
dec
adc
fiadds
je
movsl
test
scas
sub
test
mov
cmp
scas
mov
mov
pop
add
andl
cmc
ud1
les
xchg
rolb
outsb
lret
out
addr16
push
into
cltd
jg
or
xchg
in
lods
mov
mov
jo
leave
jmp
fldenv
cmp
fdivr
mov
adc
mov
roll
shlb
ljmp
scas
adcb
add
ja
addb
movsl
aaa
add
or
sti
es
jnp
xchg
mov
sbb
pusha
ret
sub
pop
cmp
repz
push
add
mov
ljmp
iret
mov
lods
aam
in
inc
bound
lcall
jge
mov
out
sub
in
ds
cmp
mov
mov
dec
filds
inc
movsb
in
cwtl
fsubrs
dec
add
mov
les
nop
jno
mov
sahf
jns
push
rol
idivb
add
push
stos
in
int
faddl
add
add
rcrb
adcl
sbb
testb
loope
in
add
mov
fwait
repz
jbe
sbb
setp
pusha
lahf
fistl
mov
add
sub
out
inc
dec
sub
aaa
cs
mov
repz
sub
mov
imul
xor
lock
xchg
add
push
push
or
xchg
mov
add
jge
add
es
adc
cmp
into
loope
popa
scas
adc
hlt
arpl
fsubrl
repz
push
loopne
subb
xor
mov
fists
xchg
pop
sub
adc
sbb
add
jbe
and
mov
loopne
rorb
pop
add
rcll
cmpsb
cld
in
int3
xchg
inc
jne
out
add
adc
cltd
sbb
in
push
leave
call
out
test
mov
xor
and
push
add
out
pushl
add
push
repnz
pop
syscall
add
nop
lret
mov
add
call
push
sub
mov
lea
add
shll
mov
divl
inc
adc
fs
xchg
or
xor
xor
outsb
hlt
cld
shll
push
sbb
leave
push
mov
sub
xchg
data16
add
xchg
mov
add
stc
fisttpll
add
jb
mov
inc
jmp
jns
stc
cmc
dec
rcll
int3
push
add
sbb
adc
lods
add
sbb
mov
lret
ret
mov
adc
aas
jb
addl
pushf
dec
xchg
add
push
sbb
fwait
jnp
jle
out
imul
xor
xchg
sbb
or
pop
stos
fdivrs
push
add
out
cs
loope
clc
add
mov
mov
dec
out
or
push
add
in
out
shl
or
inc
mov
sbb
add
mov
mov
sub
xor
out
imul
lock
mov
mov
jne
popf
test
push
enter
icebp
pop
add
mov
dec
das
popa
jns
add
roll
nop
jae
add
push
inc
aam
sbb
add
xchg
out
add
add
add
stos
rolb
lret
mov
mov
in
and
or
in
bound
add
lock
adc
fs
mov
adc
enter
iret
inc
cmp
pop
ja
pop
add
mov
outsl
call
pop
and
clc
adc
mov
cmp
cwtl
sub
loopne
in
ljmp
test
stos
add
les
mov
inc
and
sub
aad
add
jmp
sub
fiaddl
sahf
sbb
cmp
inc
adc
in
insb
xchg
scas
push
iret
pop
and
pop
icebp
int3
leave
dec
cmovo
and
mov
gs
add
clc
scas
nop
push
adc
pop
aaa
jmp
jns
push
mov
pop
rol
sbb
orl
stc
out
sbb
add
test
mov
adc
je
add
imul
xchg
mov
shlb
xchg
push
clc
add
push
int
xchg
cli
inc
add
sbb
rcll
jge
add
adc
add
sbb
adc
adc
pop
andb
push
dec
add
iret
rolb
mov
ss
loopne
add
cmp
invd
pop
sub
xchg
push
dec
rol
aam
rorl
cmp
mov
sub
or
das
pusha
cmc
dec
pusha
inc
popa
add
mov
hlt
stc
pop
in
jnp
add
pop
pop
push
out
cmc
jmp
jle
std
jmp
lods
add
data16
mov
or
pop
and
sub
add
pushf
and
cld
sbb
jns
insl
lcall
call
sbb
sbb
jns
add
mov
mov
das
cmp
popa
loope
fucomp
ret
or
repnz
lods
loop
int3
add
push
ror
add
add
mov
stos
rolb
es
cmp
inc
mov
pop
dec
xor
sbb
add
mov
std
arpl
add
sti
jo
jmp
sub
addl
add
adc
ret
add
test
pop
add
cli
xchg
out
jmp
and
cmp
incb
sbbb
xchg
cltd
or
push
fmuls
push
jl
dec
notl
add
add
sub
cmp
bound
mov
push
cwtl
aas
push
sub
fbstp
loope
inc
or
cld
inc
adc
les
add
xchg
inc
push
mov
push
fldl
addl
mov
scas
aaa
push
adc
je
add
xchg
mov
sbb
sbb
pop
cmp
jae
pop
mov
push
testb
scas
jbe
imul
sub
xor
add
and
push
jno
dec
out
jmp
pop
add
push
sub
stos
orb
imul
cmp
sub
les
add
pusha
pop
faddl
mov
cmp
add
rolb
push
dec
cmpb
pop
ret
in
nop
adc
xchg
test
orb
inc
jg
int
mov
cli
add
outsb
xchg
cmc
cmpsb
jl
imul
dec
inc
mov
jg
outsb
jae
fs
sbbb
xchg
popf
dec
pop
push
add
mov
icebp
outsl
pusha
and
aam
das
jno
add
jmp
lods
push
stos
adc
add
sub
scas
add
sbb
mov
ficoml
mov
add
cmpl
add
dec
pop
adc
psubusb
push
lods
in
mov
and
sbb
inc
sbb
or
mov
iret
and
es
pop
add
out
insb
sbb
add
ret
ss
rolb
or
inc
jge
jne
add
jb
lea
dec
repnz
xor
xchg
mov
in
insb
add
mov
rol
out
popa
pushf
je
pusha
test
cmp
xchg
int3
jnp
loop
sahf
dec
add
mov
imul
cmp
mov
adc
mov
mov
mov
cs
nop
js
pusha
sarb
sarl
mov
repz
cmp
add
sub
pushf
or
mov
out
nop
jp
or
sbb
inc
add
push
add
repnz
inc
add
je
sbb
cmp
lods
or
imul
sub
rorl
mov
mov
loopne
push
lods
cmc
push
add
loop
dec
adc
ljmp
add
xchg
mov
add
rcr
dec
xor
add
cmp
add
dec
sbb
or
subb
push
add
mov
inc
scas
dec
popf
sbbl
add
fisttps
mov
stos
js
dec
sub
mov
xchg
mov
sub
imul
and
add
in
pop
xor
inc
pop
mov
pop
dec
mov
hlt
add
cltd
shl
negl
out
adc
inc
lcall
rolb
sub
xlat
test
fadds
cmp
bound
loopne
add
rcrl
add
pop
inc
xchg
sub
push
mov
pushf
add
cs
pop
add
and
std
sbb
pop
lret
roll
pop
hlt
and
cmp
mov
test
cmp
xor
in
sbb
fdivrl
movsl
mov
ljmp
mov
imul
add
in
cmp
std
sub
sbb
dec
in
xorb
add
xlat
out
or
lret
add
test
movsl
add
cmp
jecxz
lock
pop
mov
sub
mov
inc
xchg
dec
add
cs
roll
inc
paddsw
je
adc
add
cs
jae
push
loop
xor
imul
fidivrl
pop
loop
repnz
mov
into
jno
add
aas
and
data16
mov
xchg
xchg
mov
mov
cmpsl
loope
cmp
mov
add
pop
adc
in
jmp
add
push
pushf
in
mov
mov
push
and
clc
dec
hlt
xchg
enter
test
mov
subb
lods
aaa
loopne
fcoms
add
sbbl
push
out
push
pop
pop
mov
push
or
shrl
pop
xchg
fadd
xchg
lcall
add
add
jecxz
inc
pop
sub
lods
add
mov
push
imul
cmp
pushf
add
ss
cs
add
subl
rcl
sbbb
mov
mov
jns
mov
call
add
xchg
mov
loope
cmc
inc
add
mov
dec
jae
stos
sahf
in
add
insb
loopne
bound
add
mov
jno
mov
iret
sub
aad
cli
jbe
add
insb
pop
inc
pop
add
adc
and
mov
fistpl
dec
pusha
add
xchg
rcl
add
dec
inc
outsb
aaa
xor
cmp
add
push
cmp
add
dec
mov
and
aam
sbb
add
sub
dec
test
xchg
mov
pop
add
cli
add
and
dec
mov
add
adcb
inc
cmpsl
add
mov
lret
inc
pop
xor
imul
into
pop
rcl
dec
repz
mov
das
cmp
add
sbb
adc
test
add
sbb
inc
aaa
add
inc
adc
or
jl
lret
ds
inc
xlat
jp
and
jno
je
add
xchg
fs
aad
lods
or
sub
adc
add
ja
in
mov
shll
hlt
add
mov
test
loop
adc
xor
xor
add
or
int
and
fildl
lea
hlt
das
mov
sub
push
cmp
popl
cmpsb
stc
push
push
shl
jne
adc
dec
scas
push
fildl
sbb
jg
add
mov
icebp
insb
add
stos
in
push
or
gs
mov
add
roll
xor
lock
aad
xor
sarb
mov
mov
mov
add
xorb
xchg
ljmp
push
inc
aas
shll
xlat
jl
sbb
ret
ja
jmp
jae
ror
ljmpw
enter
cs
xchg
xchg
ds
and
jmp
fs
add
or
loopne
add
jno
add
enter
sti
stos
faddl
cmp
in
pop
rcr
add
int
xor
imul
shll
jge
adcb
into
insl
add
cmp
icebp
in
mov
xchg
push
add
push
or
add
pop
xlat
repz
loopne
add
push
add
out
notb
push
xchg
jb
add
and
fwait
add
ud0
and
cmp
add
pop
gs
jg
fwait
into
push
push
xor
sub
insl
ljmp
mov
dec
and
stos
mov
dec
call
sub
push
jno
pop
inc
ljmp
and
jmp
in
or
cmc
aad
dec
or
and
mov
andl
add
dec
cltd
jle
mov
pop
add
loopne
aad
mov
xor
sub
push
daa
mov
scas
shlb
push
hlt
xor
in
mov
rcrl
out
into
inc
lea
pop
cli
sub
pop
add
inc
inc
pusha
jg
jnp
sbb
sub
adc
add
push
popf
testb
dec
and
pop
mov
mov
pop
test
nop
sub
xchg
add
mov
subb
stc
popf
pop
cld
mov
push
mov
into
mov
xchg
dec
pop
cmc
add
rclb
push
adc
outsl
lock
jae
mov
lea
jb
imul
jno
jns
add
gs
call
mov
mov
adc
in
pop
sbb
xchg
mov
xchg
jno
out
movb
jp
mov
fs
add
insl
jle
ret
xor
jns
movsl
imul
lods
mov
scas
adc
add
xor
push
out
insl
aaa
sbbb
adc
mov
lock
fstpl
cwtl
push
cmp
cmp
pop
or
lods
fisttpl
xorl
dec
mov
mov
test
nop
shll
add
xor
mov
xor
add
cmp
cmp
cwtl
add
dec
in
sbb
and
mov
fstps
test
add
xlat
cwtl
cmp
aaa
mov
lock
fcomp
scas
add
insl
cmp
jl
cmp
add
inc
mov
fwait
out
push
sbb
lret
inc
outsl
cmpb
std
into
add
aad
cmp
dec
add
pop
divl
movsb
and
test
mov
add
movl
outsl
cmp
in
add
push
lock
mov
pop
fwait
add
xor
mov
cmpsl
ja
rcrw
add
inc
and
add
scas
lds
popf
add
sti
mov
jno
mov
sbb
stos
pop
sbb
dec
mov
push
nop
adc
movsb
mov
ret
fisubl
lea
add
add
jne
ja
sahf
and
inc
jbe
fucomi
push
pop
push
xorl
in
jne
pop
jg
adc
out
mov
ss
adc
ljmp
enter
mov
aaa
stc
sbbb
andb
in
add
lods
divl
rol
clc
jns
xorb
pop
arpl
sbb
jns
cwtl
jne
insl
add
mov
or
pop
lock
out
pop
pop
imul
arpl
idiv
cmp
imul
in
inc
repz
pop
cmpsl
mov
mov
adc
xor
or
lea
insl
loope
icebp
and
out
sbb
in
cld
clc
nop
fdivr
xchg
or
add
mov
je
scas
add
popf
mov
jno
add
frstor
add
out
scas
push
jg
cltd
outsb
cmp
cs
mov
imul
mov
std
sbb
jg,pt
pop
daa
add
scas
add
mov
mov
jne
mov
xchg
arpl
push
or
je
add
xchg
jg
shll
xchg
fistps
push
divl
xchg
mov
or
add
shl
addb
sub
incb
shlb
xor
nop
cmp
insb
add
sbb
std
push
into
jo
or
mov
jle
add
mov
xor
popa
enter
push
cmp
inc
xchg
jbe
shrb
pop
mov
dec
and
sbb
sahf
fists
scas
cwtl
js
ret
mov
mov
xchg
std
xorl
mov
orl
add
lahf
push
pop
lds
xor
pop
cmp
xchg
scas
adc
out
add
sbb
jge
jmp
mov
cs
cmc
pop
xchg
add
fdivrl
cvtsd2ss
shr
ficoml
adc
pop
mov
xchg
lret
xchg
push
loope
add
shr
adc
in
xchg
add
sub
fmul
out
add
push
movsl
aad
or
mov
loopne
add
lods
outsl
cmp
xchg
add
pusha
add
jmp
idiv
cmp
shll
add
sbb
sbb
mov
add
add
ljmp
mov
sub
cli
cmp
or
xor
call
jbe
add
lcall
repz
inc
std
add
out
andl
pop
xor
sahf
pop
pusha
or
aas
call
in
shlb
add
pop
sarb
xorb
add
inc
loopne
mov
pop
aas
hlt
mov
popa
jge
cmp
xchg
cmpsb
push
sbb
mov
push
push
pop
test
sahf
ficoms
sbbb
negb
mov
inc
pop
xor
add
aas
push
rol
daa
mov
fst
addr16
jae
pop
pusha
lods
push
add
push
add
cmp
push
jne
mov
test
pop
or
dec
and
inc
int3
pop
push
inc
rcr
push
stos
add
sti
mov
dec
fiaddl
loop
pop
out
roll
and
push
sbb
es
dec
xchg
pop
shlb
fistl
and
cmp
pop
orb
mov
ror
sub
pop
adc
add
lahf
mov
inc
lea
pop
push
faddl
cmp
sub
mov
ret
add
out
lret
cs
inc
add
int
jmp
add
sub
mov
dec
jle
insl
or
popf
pop
sub
sub
add
cmp
mov
ja
xchg
mov
jbe
ds
mov
dec
lock
adc
dec
icebp
jne
lods
mov
rorb
pop
adc
add
sub
mov
lock
xchg
add
adc
xchg
lds
mov
inc
jo
cmp
dec
add
stos
lret
pop
push
loope
cwtl
pusha
call
xor
push
xchg
adc
ljmp
pop
loop
xchg
loopne
add
test
push
pop
cs
out
xchg
or
add
ret
and
scas
in
sub
jge
cmp
add
jp
lret
in
dec
jns
jnp
outsb
ret
pop
mov
lcall
sub
popa
and
shr
pop
dec
pop
fwait
test
sbbb
inc
cmp
push
xor
xchg
es
mov
daa
addr16
jecxz
add
into
cmpsl
lock
sub
lahf
pop
mov
dec
hlt
push
test
roll
cmpsb
xchg
pop
loop
sti
xorl
jmp
push
icebp
mov
es
into
int
loopne
scas
xchg
nop
ret
je,pn
add
cmc
xchg
add
xor
add
enter
pop
add
dec
insb
out
in
and
xchg
sarl
pop
clc
and
out
pushf
js
add
and
daa
push
xlat
inc
push
push
rcl
xchg
pusha
test
cmp
jo
add
mov
arpl
dec
add
loopne
insl
adc
rol
fdivrs
mov
lret
adc
sub
and
lods
xor
ja
jno
es
int3
add
mov
insb
xchg
mov
jge
dec
ljmp
je
or
roll
mov
js
aam
inc
data16
xchg
pop
xchg
ret
ss
mov
jmp
enter
add
mov
mov
fdivs
pop
cmp
aas
dec
mov
mov
cmc
mov
pop
stc
add
int
dec
add
dec
adc
in
mov
mov
aas
mov
rolb
add
aad
xchg
mov
outsb
cmp
adcl
xor
sbb
push
add
and
push
pop
fildl
sbb
addr16
ret
ljmp
xlat
mov
sahf
sub
or
adc
pop
mov
movsb
stos
aam
out
push
cs
or
dec
loopne
xchg
movsl
mov
push
addl
imul
ja
gs
int
sarb
push
ss
mov
cmc
mov
adc
add
pushl
or
xor
pop
in
mov
mov
xchg
mov
stos
jne
fildl
inc
xor
add
testb
ja
add
and
sbb
loope
xchg
sub
push
rolb
add
mov
sub
outsb
add
movsb
mov
add
out
stc
arpl
mov
or
cmpsl
add
test
cmc
fsubp
andl
jno
je
rcll
jnp
xchg
lock
inc
inc
pop
add
jne
push
int
nop
jp
repnz
cmp
inc
add
push
aaa
mov
jae
test
fmul
push
out
inc
push
inc
adc
shll
sub
icebp
add
cmp
mov
dec
lods
mov
add
xor
inc
outsl
xchg
fldl
push
aam
xor
add
or
rol
inc
hlt
add
push
push
movsb
add
inc
out
je
rcrb
ss
add
push
lods
xor
in
lahf
ucomiss
add
xchg
test
inc
outsb
cmp
add
mov
mov
or
fsub
sub
sti
shrb
les
inc
out
cli
mov
das
add
inc
jae
mov
dec
add
in
leave
dec
testb
cwtl
test
outsl
stos
rclb
push
add
rcrl
pushf
push
call
sahf
push
xor
jae
push
add
lcall
mov
add
sbb
cwtl
pop
nop
mov
js
mov
in
dec
add
mov
fisubrl
pusha
cld
push
movsb
sti
ret
ljmp
add
push
pop
iret
out
call
in
jg
lret
xor
add
insl
stos
out
daa
aad
add
test
pop
add
pusha
xor
mov
jg
add
mov
divl
mov
dec
xchg
nop
add
pop
jecxz
add
mov
push
fstpt
sub
mov
repz
cmp
frstor
jo
push
test
ljmp
lahf
add
add
jns
fsubrl
pushf
sbb
add
or
push
pop
cvtps2pd
jne
loopne
out
xor
fiadds
faddl
sbb
push
sbb
add
jae
mov
mov
push
mov
lods
in
clc
mov
and
movsl
sub
add
inc
push
jne
cmp
add
scas
into
ss
lods
dec
jge
cmp
dec
add
notb
in
add
bound
mov
dec
out
dec
cmc
ljmp
pushf
jl
add
mov
out
cld
or
roll
orl
test
and
dec
jmp
pop
ja
adc
xchg
shl
or
adc
add
push
xor
daa
mov
add
out
in
add
arpl
pop
nop
push
stos
cmc
add
rorb
add
dec
pusha
aad
out
jp
add
and
sbb
cmc
add
jns
mov
repz
adc
cmp
cwtl
insb
sarb
jb
xor
jns
mov
fcmovbe
mov
btc
mov
sub
loop
jle
lock
add
fwait
mov
js
pop
jae
inc
mov
xlat
add
cmp
cmp
lret
push
frstor
add
adc
loope
test
imul
aam
inc
pop
pop
dec
sub
cltd
cmp
add
adc
scas
idivb
ret
test
mov
inc
inc
pop
scas
xchg
dec
rcrb
mov
loop
push
sbb
add
pop
xchg
dec
dec
out
jo
xchg
shrb
enter
nop
add
xchg
imul
add
insl
pop
add
and
or
popa
jbe
stos
jge
add
xor
outsb
add
inc
jbe
ret
sbb
dec
mov
sub
inc
movsl
mov
adcb
cld
out
dec
jns
pushf
shrl
xchg
insb
mov
add
std
fsub
scas
add
mov
mov
push
cmc
jg
mov
jno
popf
pusha
cmp
and
pushf
ret
je
sbb
mov
enter
xor
mov
hlt
pop
add
xor
mov
add
std
pop
inc
adc
mov
jle
fcomip
jg
fcoms
rolb
sub
loop
movsb
jae
jb
jno
add
xor
fdivp
add
inc
mulb
int3
jge
push
iret
ss
push
ja
jle
std
sti
push
repnz
into
cli
add
mov
dec
push
mov
jo
into
xor
pushf
add
cltd
lods
push
sbb
mov
mov
mov
lods
andl
aas
pop
push
loope
ljmp
add
push
add
lods
mov
add
cld
sbb
jb
shlb
xorb
test
aaa
inc
cld
cmp
pop
push
movsb
or
cmc
orl
lea
xor
aad
movsl
mov
mov
cwtl
and
xor
sbb
xchg
and
pushf
jg
jno
test
cmp
adc
test
inc
clc
pop
sub
push
pop
mov
add
jae
jmp
mov
and
mov
add
adc
arpl
fs
inc
lret
add
dec
xchg
loop
add
jp
xchg
cmp
mov
fwait
stos
pop
pop
push
lret
outsb
stc
xor
jo
add
mov
ds
stos
movsb
ret
aaa
add
loopne
insb
out
in
sub
sbb
dec
lea
mov
nop
nop
aad
add
int
jmp
mov
jbe
jmp
xchg
inc
and
pop
aad
xchg
ljmp
mov
xchg
sbb
add
sbb
jg
dec
jmp
mov
fwait
jae
add
imul
fisubrl
ds
mov
mov
adc
add
ss
lea
push
add
imul
insb
add
in
add
movsl
sbb
pushf
mov
jne
loopne
adc
mov
push
or
sbb
jmp
push
xchg
jnp
mov
pushf
addb
inc
push
pusha
call
repz
pop
cmp
rol
nop
aas
ret
or
mov
shlb
pusha
add
cmp
hlt
orb
add
outsb
fistl
add
cltd
dec
pop
adc
cli
add
jl
arpl
out
inc
xor
imull
movsl
cld
cmpb
adc
outsl
scas
sbb
xor
dec
jne
out
add
or
mov
jbe
popa
pop
xchg
cli
int
cmp
fcom
adc
std
xchg
fistpl
lea
scas
add
jg
add
pop
mov
imul
dec
cli
add
cwtl
rcrl
add
pop
mov
dec
in
pop
pop
add
test
inc
add
xor
cmp
add
adc
mov
mov
mov
rcrb
aam
stc
push
bound
add
ret
lahf
jb
mov
xlat
ja
add
fs
adc
xor
arpl
rep
and
mov
cmp
lcall
cmp
es
mov
ret
sbb
push
add
or
xchg
push
in
add
int3
mov
dec
hlt
xor
add
push
push
test
imul
pop
addr16
in
jl
push
in
not
mov
or
test
cmp
jle
aam
lock
or
lret
mov
xor
fsubrp
ja
push
mov
xor
pop
inc
add
jl
test
mov
add
or
enter
sti
jg
inc
fstpl
orb
rorl
bound
les
inc
das
adc
adc
add
inc
dec
xlat
daa
mov
add
sub
or
mov
mov
test
std
ret
out
inc
lahf
add
xchg
cli
les
data16
invd
push
xchg
int3
lret
add
mov
add
inc
push
negl
mov
ficomps
in
mov
pop
and
and
add
cmp
jbe
sub
loop
adc
jmp
jne
pop
and
pop
cli
cmp
rolb
icebp
mov
test
mov
pop
in
mov
stos
or
add
insl
cmp
mov
push
hlt
sub
add
jle
xchg
fwait
test
cwtl
mov
clc
leave
push
call
or
pop
in
outsl
push
fwait
mov
mov
js
push
sub
xor
out
loope
mov
push
mov
mov
mov
sbb
outsb
add
push
cltd
inc
das
xchg
and
add
dec
xchg
jno
add
gs
pop
jmp
sub
jl
add
test
outsl
push
movsb
lret
pop
fwait
sbbb
vmread
int3
shr
add
repz
jbe
cmpsb
outsb
mov
jle,pn
data16
add
mov
std
outsb
add
jg
and
bnd
jmp
clc
in
mov
sbb
inc
stos
mov
das
cld
adc
dec
add
pop
test
xlat
imul
cltd
add
lods
leave
xchg
aaa
stos
add
adc
adc
adc
jbe
add
mov
clc
mov
add
and
ljmp
add
std
rorb
rclb
dec
xor
lahf
cmp
xchg
mov
pushl
xchg
sbb
pop
sti
sub
enter
pop
aas
push
rorb
ljmp
je
mov
mov
adc
mov
sub
xchg
push
aaa
fs
jo
xor
mov
mov
shll
push
das
add
lcall
add
pop
std
push
sub
out
popf
add
setle
add
jle
aam
mov
fwait
cmpl
add
call
pop
mov
mov
lds
jp
out
out
out
dec
inc
cmp
dec
push
pop
je
iret
add
push
ljmp
out
and
clc
pusha
xchg
lods
add
add
add
lea
add
add
sar
rcll
push
jnp
mov
and
mov
and
add
fdivl
movsl
shll
mov
pop
jno
sti
sub
loope
mov
cmpsl
and
movsl
xchg
xchg
pop
mov
mov
in
aaa
cmp
push
add
xchg
sahf
cmc
popf
push
jge
add
inc
jo
mov
std
and
jbe
add
xchg
xchg
ror
cmp
mov
test
lods
jl
cmp
xchg
pop
xchg
cld
mov
add
shlb
jp
dec
in
add
jae
in
lods
xchg
rolb
xchg
mov
imul
pop
jg
xor
shll
setle
mov
jecxz
insb
sbb
jge
ret
push
pop
xchg
sub
pop
jbe
test
loopne
pushf
sahf
mov
cmp
movsb
rolb
mov
mov
in
fdivrs
insb
sbb
lea
add
mov
mov
hlt
bound
jbe
nop
cmpsl
mov
add
pop
inc
xorl
mov
orb
scas
jle
fcomps
sub
hlt
stc
cmp
push
fsubl
ret
shll
xorl
add
push
jl
out
sbb
or
pop
cwtl
mov
mov
fildll
mov
sbb
cmp
ds
add
out
fldenv
inc
sahf
ds
mov
es
add
add
imul
jns
mov
push
rolb
call
mov
repz
rcrl
push
in
add
mov
cmc
aam
lcall
push
std
roll
jo
inc
pop
pop
mov
lret
add
push
push
in
rclb
inc
insb
xchg
mov
sub
je
push
add
test
jne
lcall
dec
add
add
mov
jo
adc
test
dec
aaa
leave
mov
add
rcrb
je,pn
pusha
test
push
mov
adc
add
rorl
push
push
adc
cwtl
movl
mov
pop
mov
mull
sub
scas
cmp
jg
mov
hlt
divl
ss
add
mov
xchg
fisttps
pushf
add
mov
flds
int3
push
pop
movsl
sbbb
lock
inc
push
jnp
out
or
jmp
stos
ret
mov
lcall
out
pop
add
test
ljmp
jb
sbb
dec
test
addr16
push
je
cli
add
rol
push
push
dec
dec
jmp
add
adcl
pop
xor
push
addr16
and
jne
call
xor
mov
add
lea
mov
outsb
pop
nop
and
mov
add
cmp
bound
pop
je
stos
pop
pop
int
pop
mov
lcall
adc
xor
movsl
cld
shll
xchg
and
sbb
push
add
xchg
pop
mov
jp
sbb
cltd
into
out
cmp
mov
sub
adc
cmp
mov
int
jmp
sti
nop
add
call
xchg
mov
incl
rol
ljmp
out
daa
xchg
rcll
dec
add
scas
add
add
mov
fdivrp
orb
mov
or
and
fcoms
add
jmp
imul
and
icebp
xor
clc
mov
movsb
ja
repnz
inc
lret
cmp
add
lcall
outsl
add
call
push
cwtl
das
add
adc
out
push
add
clc
or
dec
shl
test
cltd
inc
lods
adc
ljmp
jae
pop
or
cmp
pusha
inc
xorl
pop
mov
sub
rcrb
cli
cld
sub
inc
movsb
dec
xlat
adc
icebp
add
sbb
mov
xchg
fstpt
fldl
cmp
out
mov
mov
in
hlt
test
add
ret
lods
lcall
in
aad
dec
push
js
outsl
mov
mov
jmp
pusha
and
or
sub
inc
xlat
rcll
cmpb
enter
das
rorb
jmp
cmc
push
xor
and
or
mov
jg
pop
jns
inc
cld
mov
je
adc
add
out
cmp
fadd
inc
add
cli
mov
push
push
and
fildll
inc
mov
cwtl
cli
test
scas
aas
push
jg
rolb
std
int
xor
dec
add
sub
and
adcl
sbb
mov
icebp
add
cmpsb
int3
xchg
fisttpl
stos
add
aas
mov
clc
cmp
cmp
push
and
add
xchg
add
sbb
popf
in
mov
add
add
aas
pop
into
sbb
add
daa
fcomps
je
inc
add
xor
or
xor
sbb
ret
or
rolb
sub
mov
jle
movsl
cmp
adc
incl
mov
mov
sbb
fucomp
adc
sub
push
add
xor
xchg
jnp
jb
mov
sbb
and
scas
jne
jno
add
jnp
fldt
inc
loopne
sub
jl
outsb
or
add
jnp
push
fildll
mov
inc
sub
add
fcmovnu
stos
add
mov
mov
lret
pop
adcl
add
xchg
out
out
incl
add
rolb
mov
sub
and
mov
mov
cmp
test
and
add
and
sub
lods
mov
leave
pop
xor
popa
jno
ljmp
add
insb
pusha
testb
icebp
jecxz
shrb
stc
adc
fadds
cld
inc
dec
fidivrs
or
bound
ret
add
or
add
scas
mov
loope
jb
mov
cmp
add
and
jmp
xlat
int
call
inc
fs
mov
lret
test
inc
rorb
addb
aam
mov
lea
fdivrs
and
orl
mov
aas
aad
ret
inc
cmp
push
xor
inc
xor
mov
mov
popl
out
push
xchg
lods
les
mov
outsb
pop
inc
xchg
dec
mov
fwait
cmp
sbb
shlb
les
clc
in
imul
sub
std
rolb
sbb
or
cs
and
add
push
mov
outsl
add
out
decb
icebp
nop
mov
mov
outsb
mov
ja
mov
pusha
scas
inc
add
push
test
popa
inc
repnz
cmpsl
fstl
or
nop
int
add
mov
add
jo
jmp
push
jg
je
add
ret
mov
cmpsl
fcom
sarb
add
inc
mov
xchg
push
cmp
test
mov
and
xor
add
call
add
out
sbb
ljmp
mov
adc
sub
mov
or
lds
gs
xchg
add
lret
mov
dec
add
in
mov
jae
out
je
and
mov
lret
loop
arpl
bound
and
sbbl
add
adc
pop
repnz
rcll
mov
movsb
add
ret
mov
push
dec
jne
add
jp
rolb
stc
mov
fwait
nop
cmp
test
pop
cmp
push
adcl
scas
sti
jmp
roll
push
mov
pminsw
pusha
jle
dec
fidivrs
jbe
in
xor
imul
inc
cltd
shlb
fnstcw
push
add
jbe
mov
int3
repnz
orl
fs
ds
xor
cwtl
and
cmp
cltd
scas
rcl
js
stos
add
push
mov
cs
fsqrt
cld
bound
jae
add
test
andps
and
popf
imul
dec
enter
add
ss
into
jg
bnd
add
xchg
add
xor
ror
in
jnp
dec
mov
popw
and
roll
gs
push
xchg
and
add
xchg
jo
pop
sbb
orl
aas
add
mov
mov
stc
sbb
imul
jo
xlat
add
adc
fcmovu
icebp
cmp
add
xor
loop
sub
pop
cwtl
pop
fsub
dec
add
push
mov
sbb
insl
xlat
or
js
hlt
sbb
push
cwtl
adcb
inc
icebp
mov
inc
rclb
dec
mov
int3
ret
add
or
push
or
inc
gs
mov
orb
pop
mov
and
pop
clc
mov
fmull
pop
insb
lods
and
lcall
and
bndstx
rsqrtps
cltd
add
je
sahf
add
xchg
stc
cmp
xor
add
xor
dec
add
lahf
scas
test
cmc
pop
push
cmp
mov
movsl
jbe
movsb
loope
mov
out
jg
js
add
mov
int
pop
mov
in
pusha
xchg
xor
lods
and
les
imul
lret
lods
pop
cltd
test
inc
xor
dec
inc
adc
cmp
testl
mov
mov
and
enter
inc
push
out
cltd
add
enterw
shlb
in
cli
jge
cs
add
xchg
lods
addr16
mov
into
pop
movsb
pop
push
and
loop
mov
mov
sahf
in
test
aad
cs
jecxz
and
pop
fcoms
dec
inc
add
fcomi
mov
mov
inc
daa
and
ret
cmpsl
out
fcomps
add
pop
mov
lock
and
jo
in
push
jecxz
lods
pop
movsl
rol
jmp
dec
outsb
int
inc
je
pop
test
xor
push
fwait
orb
push
jp
ja
jecxz
dec
xor
push
cmp
and
scas
es
mov
pop
std
dec
jg
aad
mull
aaa
mov
lock
out
fcomps
je
adc
add
nop
sti
pop
xchg
pop
lret
into
mov
dec
push
mov
mov
nop
in
add
dec
scas
adc
or
cmpsb
or
add
arpl
jle
aas
out
fldenv
mov
dec
mov
push
nop
mov
jnp
aam
add
jae
pop
ds
add
lcall
and
fcoml
add
testb
addr16
mov
cmp
jo
test
add
mov
int3
lds
mov
push
lea
pusha
addb
call
mov
xor
inc
cwtl
cltd
mov
lock
jb
add
pop
jne
cli
adc
add
adcl
xor
add
xor
sbb
cmp
je
sbb
xchg
int3
lea
push
xor
cli
and
neg
mov
push
xchg
lahf
adc
pop
inc
add
ret
adc
mov
rorl
adc
add
sti
iret
push
cwtl
gs
sahf
fwait
add
adc
sbb
add
testl
or
adc
rcr
add
inc
fsubrl
int
jne
sbb
cs
add
sub
add
xchg
add
out
and
add
jns
jb
stos
add
insb
in
roll
dec
mov
repnz
inc
sbbb
push
push
add
cmc
push
mov
lods
in
add
aaa
lea
add
pop
mov
add
pop
mov
hlt
cld
cmp
cmp
add
add
or
and
dec
xor
cli
divps
jmp
fs
push
aad
rorl
mov
dec
mov
sti
ror
pushf
add
cmp
or
pop
jo
sbbb
add
into
pause
push
cmpsb
add
add
add
sub
sbb
cs
out
mov
jle
ds
add
dec
inc
outsb
jbe,pn
dec
inc
add
movsb
ljmp
mov
push
ret
inc
push
pop
cmp
icebp
inc
jno
dec
inc
pop
add
jp
add
daa
loopne
pop
add
or
cmp
push
push
push
lods
aad
imul
in
bound
or
lret
inc
cli
push
and
inc
jmp
inc
ret
xchg
pop
xchg
ja
or
enter
repz
call
add
aas
data16
cmp
mov
dec
push
jmp
mov
pop
xchg
push
nop
mov
sahf
add
xor
scas
add
fistps
jg
add
andb
add
push
ss
inc
and
mov
xorl
sub
xchg
add
fimuls
add
jnp
inc
xchg
jno
clc
sbb
ja
shrb
xor
dec
or
mov
leave
push
jnp
xor
bound
inc
pop
sbbb
fcom
ja
add
stc
into
outsb
dec
jecxz
and
pop
add
dec
lcall
jg
jmp
lea
add
subb
jns
push
xor
les
mov
sti
mov
adc
cwtl
aam
mov
sbb
and
movsb
push
imul
xor
pop
push
les
dec
fdivrl
adc
push
in
push
sbb
pop
add
mov
divb
jnp
add
sbbb
add
cmp
push
shlb
cld
pop
imul
mov
icebp
fadds
mov
adc
loopne
hlt
cld
inc
add
stc
mov
jge
xchg
ljmp
add
jg
addr16
stc
mov
xchg
dec
push
inc
mov
int
xchg
out
sbb
imul
ficoml
mov
rcl
std
mov
gs
cli
clc
cvtdq2ps
cwtl
repz
les
imul
fiaddl
xor
int3
bndstx
sub
cmp
insl
jecxz,pt
fildl
icebp
mov
and
inc
int
in
push
loop
add
rorb
fisttps
imul
or
add
xor
ficomps
outsl
cld
es
add
lock
jle
cmp
push
push
ficompl
mov
faddl
sahf
mov
imul
dec
xor
nop
clc
loope
lods
add
ret
aam
add
outsl
mov
xor
ret
call
mov
cmp
adc
dec
cli
mov
inc
out
add
outsb
adc
cmp
add
xor
and
add
cld
test
sbb
loop
or
call
int
jo
aam
add
inc
test
jge
add
test
cmp
lret
test
aad
mov
int3
inc
stc
sbb
and
jecxz
add
cmp
or
das
add
mov
push
jae
jle
cmp
add
xchg
add
jg
lret
jnp
prefetch
lds
xchg
addr16
ss
les
jle
add
incb
dec
ror
push
hlt
mov
adc
jl
add
inc
mov
loope
outsb
and
jge
bound
scas
imul
mov
push
pop
adc
adc
addr16
lods
cmp
jp
cwtl
or
testb
sbb
pusha
btc
jo
inc
xchg
daa
mov
pop
loope
cmp
mov
mov
imul
lods
add
xchg
mov
xchg
nopl
add
js
xor
rolb
test
jle
pop
push
push
pusha
and
nop
push
sahf
test
mov
mov
fcmovne
test
jnp
xorl
jmp
push
fsubrs
in
jp
les
push
and
and
xlat
roll
add
lret
lcall
push
add
jne
stos
loopne
fwait
inc
adc
sbb
roll
and
pop
lea
bound
jle
or
ret
cld
lret
xchg
lods
add
xor
mov
fs
push
mov
xor
add
mov
cmp
jp
xor
add
add
adc
dec
add
pop
add
addr16
add
jne
aas
inc
xchg
push
icebp
scas
sub
cmp
loop
imul
outsb
add
clc
ss
and
push
stos
fs
cmp
inc
add
adc
lcall
sbb
add
xchg
dec
or
out
mov
jnp
mov
cmp
ja
jl
je
orb
stos
push
adc
sub
and
loop
mov
fs
mov
dec
xor
xor
pop
adc
push
xchg
cmp
or
popa
add
and
jecxz
movsb
add
pop
pop
call
or
hlt
je
js
imul
mov
outsb
insl
insb
jne
pushf
lods
ja
cmc
imul
ss
and
cmp
dec
xorb
mov
cld
or
sbb
push
pusha
mov
jecxz
add
jnp
sub
xor
mov
xlat
add
test
jbe
aad
lock
jne
jo
nop
call
add
cmpsl
add
mov
dec
aas
cmovnp
pop
inc
mov
add
push
sti
shlb
cmp
lahf
and
sbb
mov
ljmp
fnsave
add
mov
mov
pop
adc
cmp
sbb
add
ficompl
adc
sbb
or
cmc
and
fsubrl
aas
lock
xchg
mov
sub
add
aaa
cmpb
mov
aam
and
imul
les
inc
xchg
inc
jno
push
add
leave
jne
in
fcomps
jg
rcrb
mov
cmp
mov
or
gs
jo
sbb
lods
inc
subb
pop
dec
mov
adc
subl
in
jle
lahf
add
out
lea
jl
add
scas
xchg
jg
inc
testl
dec
jb
int3
add
repnz
clc
lock
cmpb
mov
dec
mov
push
xchg
ret
add
xchg
adc
mov
dec
out
add
add
xchg
pop
cs
shrb
jbe
cmp
mov
addl
enter
mov
inc
jecxz
inc
cld
pop
cld
inc
push
add
nop
cltd
scas
jb
add
add
push
push
arpl
ret
cmpsl
add
rorl
dec
shrb
aaa
cltd
add
cmp
or
sub
adc
add
icebp
inc
and
or
adc
mov
cmpsl
inc
shrb
gs
mov
or
lock
pop
mov
imul
mov
int3
popf
ret
mov
dec
cmc
mov
add
jno
shrl
imul
jg
fldl
sbb
xor
data16
pop
icebp
sub
push
movl
jns
cmp
add
xor
sbb
repz
mov
cmc
jg
leave
add
push
cmpsb
sbb
lods
ficoms
inc
adc
adc
xor
cmpsb
scas
ljmp
std
add
jmp
in
aad
popf
push
xchg
inc
add
xor
iret
clc
and
add
cmp
add
repnz
lret
mov
cmp
and
loope
gs
push
enter
pop
lret
pushf
xor
add
and
lds
mov
push
lcall
repz
popa
outsb
add
push
fadds
mov
ficoml
insl
call
popa
test
inc
push
int3
xchg
sbb
cmp
dec
and
add
popf
shrb
sub
adc
jle
outsb
dec
cmp
mov
clc
pop
in
add
cmpsb
lret
push
je
xlat
sub
add
js
int
jecxz
imul
sahf
pop
fcompp
aaa
mov
add
dec
mov
movsb
cld
pop
ss
cmp
and
and
and
jl
xchg
lock
shrb
sbb
inc
add
les
mov
jg
xor
jae
jle
inc
and
popa
and
fsubp
sahf
int3
ljmp
xchg
xor
xchg
add
jecxz
inc
loopne
cli
ss
inc
pusha
mov
or
add
pop
insl
jecxz
sub
cmp
add
fists
xor
add
pop
xchg
in
inc
lret
enter
push
push
push
imul
out
pop
fdivs
xor
or
ficomps
out
out
fwait
jle
fisubl
mov
add
sub
mov
mov
pop
ret
or
pop
jo
jmp
cs
and
cmp
add
cmc
jmp
inc
insl
fildl
mov
roll
in
add
fwait
aad
lock
aas
push
in
andl
in
xor
jg
fildl
fbstp
mov
jno
fstpl
aaa
rol
add
test
int
jo
adc
in
pop
hlt
add
out
testl
ljmp
in
push
add
xchg
add
push
jns
mov
out
adc
mov
and
sbb
jmp
call
daa
and
add
sub
inc
mov
add
xchg
pop
adc
inc
xlat
jge
pop
arpl
or
movb
pop
sahf
in
lock
add
sub
rcrb
mov
push
lock
mov
lahf
andb
mov
xor
push
icebp
add
divb
sbb
shrb
add
mov
adc
mov
jnp
fsubrs
scas
in
or
xlat
push
mov
add
sbb
cmp
ds
popa
add
jns
add
rolb
xor
sub
shrb
push
and
adc
sub
daa
nop
lcall
jge
push
popa
popf
add
mov
adcb
je
or
add
int3
xlat
test
xchg
and
push
mov
fwait
jnp
fldl
cmp
pop
andl
lea
std
inc
adc
cmp
or
add
dec
out
lret
aaa
adc
movsb
iret
pop
cltd
inc
andb
ljmp
xorb
xchg
pusha
and
mov
xchg
add
push
shll
lret
ja
sbb
push
sbb
in
dec
fstl
jbe
and
bound
icebp
test
rolb
lock
mov
push
add
push
cmpsb
pop
addl
inc
int3
mov
lock
inc
jne
xchg
jecxz
add
sbb
mov
daa
jl
jo
sub
and
je
add
dec
xchg
in
fdivl
pushf
push
add
lods
shll
mov
cmc
add
push
lods
or
call
push
pop
rolb
mov
jo
mov
cltd
add
adc
dec
ljmp
push
sub
subb
dec
les
cmp
lahf
repz
int
sti
mov
sub
xor
jo
ret
mov
mov
mov
scas
sbb
inc
pop
fcomi
jo
imul
stos
add
out
scas
push
add
fcoml
clc
add
pop
dec
nop
cmp
pop
cs
jbe
pop
cli
stos
or
sahf
xor
xchg
adc
lds
cwtl
shll
test
les
jns
dec
cmpsl
addr16
sbb
mov
sbb
test
jl
fildl
add
mov
cmp
and
ss
pop
adc
lods
stos
add
leave
sar
call
repnz
cmp
rolb
xchg
sub
bound
fidivl
xchg
jne
addl
shlb
xlat
pusha
adc
mov
jl
add
mov
jle
add
ret
hlt
push
addl
mov
xchg
push
and
pop
add
sub
or
out
loop
xor
jl
lret
jp
xchg
mov
lods
out
shll
arpl
in
and
rcrb
int3
cmp
sti
add
mov
mov
and
fsubrl
sbb
and
mov
mov
pop
lcall
adcl
test
mov
cmp
nop
cmpb
pop
add
inc
and
fsubs
dec
add
lods
scas
xor
ret
add
xchg
in
fcoml
aam
adc
add
adc
out
lret
add
jmp
insb
xchg
pop
int3
and
fldcw
test
aas
test
shrl
push
jbe
add
je
mov
xor
enter
add
adc
sbb
lret
xchg
add
mov
data16
fidivrs
add
inc
add
mov
sbb
leave
add
mov
add
sti
xor
out
je
cwtl
in
jg
push
sahf
outsb
addr16
add
push
sbb
roll
lods
repnz
ja
cli
lldt
pop
push
add
int3
mov
add
push
or
gs
mov
cmpsl
ljmp
out
pop
sbb
pop
xor
push
scas
mov
psrld
add
fstl
push
mov
add
mov
add
jae
jecxz
stc
sub
jge
add
xchg
addr16
xor
dec
add
mov
cmp
lea
adc
pusha
daa
push
test
add
repz
insb
jne
add
les
lds
push
add
jg
sub
add
aas
and
sub
push
xchg
dec
jl
jno
xchg
movsb
add
mov
xchg
sbb
inc
dec
add
cmp
mov
insl
stos
push
adc
add
fnstsw
add
fistpl
sbb
or
inc
adc
jns
cmp
add
mov
mov
maxps
adc
es
add
and
pop
mov
inc
add
sub
test
jmp
mov
outsl
outsb
clc
jbe
stos
add
jl
fisttpll
and
jg
add
mov
pop
cs
push
andl
dec
loope
xor
cmp
or
xorb
mov
fnsave
add
push
jns
fs
or
adc
mov
add
jbe
and
sbb
test
push
mov
cmp
ficomps
popa
ds
enter
add
mov
jg
inc
jns
movsb
xchg
push
mov
cmc
inc
mov
sbb
ds
cld
pop
pop
imul
fwait
xor
and
daa
pop
lahf
insb
fcomps
std
lods
jns
adc
cmc
pop
adc
cmp
stos
xor
fisubrl
or
imul
fldenv
mov
add
cmp
roll
enter
add
mulb
sub
sub
pop
pusha
mov
iret
add
sbb
cmp
jb
or
sbb
test
add
sub
xor
aam
jmp
enter
mov
mov
add
jnp
outsb
xchg
jl
add
mov
sub
push
aaa
add
shrl
rol
ljmp
jno
aas
out
fcoms
mov
movsb
add
arpl
jo
cmp
movhps
js
sti
jmp
add
and
movsb
and
enter
ds
rcr
inc
and
xor
add
inc
mov
add
sbb
add
xor
push
lods
jecxz
jle
leave
mov
int
jge
add
sub
sbb
sarb
or
add
test
and
imul
sbbb
cmc
fildll
and
enter
add
and
add
push
hlt
enter
add
mov
es
lret
std
add
outsb
inc
movsl
mov
add
jns
pushf
jnp
mov
adc
cli
add
mov
push
add
xor
or
cmp
push
mov
lcall
dec
loop
clc
or
add
xchg
adcb
pusha
xchg
scas
lock
add
jge
xchg
rcrb
outsb
mov
pop
aaa
cmp
and
rorb
shrb
ds
fsub
sahf
psubusw
int
cmp
iret
xlat
xor
add
push
pop
or
add
pushl
or
mov
addr16
xchg
sbb
fsubs
movsl
add
mov
add
pop
lock
nop
sbb
in
rcrl
shl
jmp
pop
cld
clc
xchg
cmp
xchg
jbe
aas
add
rolb
add
jns
dec
push
xor
fisttpll
pop
jbe
popa
inc
dec
jb
imul
or
loope
mov
or
je
ds
out
push
popf
and
aad
mov
scas
adc
mull
pop
cmpsb
daa
mov
xor
ret
adc
in
mov
fdivs
xlat
out
add
sbb
ds
je
pop
mov
adc
shlb
xchg
pop
outsb
add
xchg
dec
or
mov
push
push
insb
add
inc
fldl
loop
and
clc
mov
outsl
daa
xchg
jo
push
cltd
add
clc
jmp
roll
test
frstpm(287
lods
add
jns
mov
add
frstor
daa
add
insl
fcomps
add
int3
adc
sbb
or
ja
push
or
inc
push
adc
vpxor
cmpsb
pop
cs
or
fcmovu
pop
ret
add
fnstsw
test
loop
add
sti
xor
cmp
add
shrl
sbb
jne
add
jb
lret
cld
rcll
into
and
in
add
cmc
xchg
jl
mov
push
and
xlat
aaa
add
mov
dec
inc
xchg
loopne
pop
xchg
or
imul
popa
add
cmpsl
sub
cld
inc
add
daa
ds
add
lret
inc
das
loopne
cmp
cmp
movsl
add
sbb
faddl
sarl
dec
ljmp
sbb
cmpsb
outsl
in
mov
mov
rolb
adc
cwtl
jnp,pt
add
jle
outsl
mov
or
or
in
push
cmp
ljmp
out
and
mov
xchg
add
xchg
flds
add
jmp
jb
pop
add
xchg
dec
xchg
mov
icebp
outsb
ljmp
out
cmp
test
movsl
filds
jno
mov
data16
add
pop
jbe
clc
fcompl
sub
fcoml
push
loope
iret
adc
pop
daa
sbb
imul
jp
add
fucomp
pop
mov
xor
inc
sti
sub
sub
adc
xor
aas
andb
mov
push
mov
fs
lods
xchg
ja
fildll
add
jo
std
mov
lret
cmpsl
enter
call
sub
mov
cmp
mov
scas
push
loop
push
ds
dec
sub
sbb
xorb
mov
mov
popa
mov
test
sub
lea
fnstsw
imul
in
out
add
xchg
hlt
add
fiaddl
roll
add
test
mov
aaa
stos
jnp
loop
or
hlt
leave
or
mov
sub
stc
out
mov
out
sbb
ret
xchg
xorl
daa
mov
xlat
and
inc
mov
fmuls
add
fdivrp
std
sahf
cwtl
fdivrs
add
icebp
jl
call
scas
pop
jbe
lcall
mov
fs
scas
mov
ret
js
cmp
outsb
add
cwtl
mul
aas
push
out
sbbb
xchg
inc
sub
pop
cmp
addb
jae
lea
push
ljmp
pop
inc
jmp
xlat
stc
rcl
xor
in
inc
pop
adc
or
sarb
pushf
mov
rol
sbb
mov
mov
aas
ja
add
out
adc
xor
or
cmp
add
inc
inc
cmp
add
cwtl
sbb
jns
inc
add
inc
out
jmp
mov
aas
iret
jg
sbb
xlat
pop
adc
jb
add
outsb
push
leave
add
je
jg
add
sahf
call
pop
out
scas
idivl
push
mov
sbb
xchg
call
out
xchg
cmp
aaa
xlat
xor
add
add
or
sbbl
jbe
mov
jl
add
aad
cmp
loop
mov
stos
mov
int3
pop
sub
das
ds
sub
jl
push
nop
xchg
add
cmp
cmp
popw
in
ret
sbb
and
inc
push
push
testb
xchg
cmp
jg
sbb
xchg
pop
mov
xchg
rclb
adc
cmpsl
add
jne
fmul
aad
dec
jg
imul
sub
js
cmovae
fidivl
sub
pop
adc
lods
sub
jo
mov
out
pop
pop
lcall
cli
test
mov
inc
in
inc
or
adc
xchg
shrl
or
add
lock
mov
sub
out
cmp
or
add
jmp
add
bound
cmpsb
fbstp
negl
jb
pop
add
sarb
xchg
test
pop
dec
insb
daa
addb
jl
fadds
add
sbb
xor
mov
test
add
mov
call
clc
xchg
add
inc
lcall
sbb
add
sub
sub
add
mov
dec
jo
and
lcall
inc
adc
dec
adc
lret
jns
sarb
movsb
add
sbb
xlat
cmp
inc
push
loopne
add
shll
dec
pop
addr16
push
je
in
lds
je
add
movb
mov
shll
dec
int3
add
std
sbb
add
fdivp
cmc
push
jp
jle
push
aaa
fstl
add
enter
andl
and
push
jns
adc
sub
mov
jo
mov
add
scas
and
add
mov
add
pop
jp
and
lods
add
cmp
mov
sbb
fdiv
fwait
or
lock
xlat
add
addr16
add
jl
mov
fimull
leave
sarb
ja
push
add
lea
mov
int
add
lods
sti
lret
and
stos
cmpsb
add
shrl
adc
sub
push
add
cmp
jo
add
fidivs
lret
push
aas
push
negb
lods
adcb
subb
adc
add
pusha
je
xchg
aas
jnp
add
mov
lcall
dec
xchg
loop
sub
test
fnstenv
adc
sub
jbe
xchg
lahf
scas
jnp
subl
lods
dec
and
pop
mov
in
fisttpl
cld
add
cmp
divb
call
fcmovnu
std
cmp
add
aad
lcall
ja
out
jo
test
xchg
bound
add
add
add
loop
shlb
pop
pop
testl
sub
push
in
shll
in
add
or
mov
decb
adc
rcr
cmp
add
cld
push
mov
mov
sbb
mov
or
aam
test
hlt
sub
add
push
aad
insb
pop
out
add
faddp
adc
xchg
push
stos
test
cmp
jne
add
js
pop
sbb
dec
pop
jno
cmp
xchg
add
sbb
xchg
popa
ja
repnz
push
add
daa
pusha
or
or
mov
inc
pusha
push
jle
sbb
stc
negl
and
pusha
scas
pop
shll
mov
sbb
push
mov
pusha
enter
mov
and
stos
pusha
lds
pop
xchg
cs
call
sahf
ljmp
leave
add
stos
fdivs
addb
lods
jge
shl
adc
push
pusha
pop
aad
in
je
push
mov
in
inc
mov
jp
fisubs
add
push
xor
test
ret
xchg
add
jmp
inc
or
mov
ret
lods
adc
xor
fists
inc
in
mov
sbb
inc
cmpb
jno
mov
fnstsw
xchg
mov
cmp
loop
ds
push
mov
push
dec
fsubrl
inc
in
push
jge
add
sbb
adc
in
mov
sub
push
mov
int3
pop
and
orb
sub
insb
and
loop
add
pop
fistpll
gs
push
xchg
inc
shrl
dec
hlt
add
adc
jge
and
add
cld
adc
dec
out
cmp
mov
cltd
data16
and
push
outsl
sarb
sbb
sbb
call
jb
pop
mov
mov
xchg
das
add
jecxz
sbb
enter
xchg
das
jge
add
out
mov
pop
loop
add
cmp
add
ljmp
inc
rep
add
lret
cmp
xor
jp
aas
dec
sub
mov
mov
sub
inc
out
dec
fstp
loopne
aaa
lea
jmp
and
daa
sbb
mov
cld
add
pop
mov
push
sbb
pop
icebp
and
jl
outsb
add
nop
adcb
push
popl
ret
mov
dec
or
jmp
pop
pop
adc
add
subb
lock
std
add
arpl
mov
shrb
imul
test
pop
lock
ret
scas
subb
or
mov
imul
iret
cmp
jne
sub
adc
cmp
lret
add
mov
inc
loope
push
xor
call
mov
cmp
jne
or
popf
mov
mov
enter
in
dec
pop
inc
mov
add
xor
dec
lods
sbb
push
add
push
add
aam
movsb
add
sbb
push
fimuls
jle
add
pop
add
jns
icebp
add
fadds
insl
fwait
ja
sti
test
add
enter
cmpb
insl
add
stos
jmp
push
sti
movsl
addl
or
jnp
jno
mov
lret
mov
or
inc
mov
int3
xchg
fiadds
mov
sub
jb,pt
xor
pushf
cltd
in
push
add
shr
loope
mov
sti
pop
push
pop
mov
out
clc
and
fwait
pushf
es
sbb
jmp
jmp
xchg
pop
decb
punpcklbw
daa
jmp
sub
ja
ja
ja
add
mov
call
fstl
leave
popf
add
or
and
ret
pop
mov
lahf
push
test
shr
popf
adc
cmp
in
sbb
subl
and
pop
dec
cmp
adc
pop
in
test
in
shld
ror
in
mov
in
addb
add
push
ds
repnz
xor
daa
sarb
sbb
lcall
jge
sti
je
ret
xchg
cmp
or
stc
pop
testl
mov
imul
ss
add
pop
pop
or
stos
add
xchg
loopne
movl
jmp
mov
mov
adc
lods
adc
mov
outsl
hlt
inc
sbb
fldl
or
cltd
jge
sub
jns
jl
add
addr16
xlat
movsl
mov
xchg
add
xchg
inc
aam
outsl
push
mov
add
hlt
aad
adc
mov
add
popa
loope
adcb
sub
ret
ficomps
nop
pop
xchg
add
jo
mov
push
out
es
andl
mov
pop
mov
mov
in
push
jae
mov
jb
mov
popf
mov
add
push
jl
call
xor
inc
nop
dec
aam
rclb
xchg
add
lods
mov
push
in
sti
pop
add
ss
fistps
fdivl
je
xorl
sbb
add
adc
fs
outsl
shl
cwtl
push
lock
pushf
lret
xchg
and
icebp
push
popa
push
cltd
test
jl
push
loopne
mov
jns
adc
mov
pusha
enter
and
repz
dec
aas
sbb
stos
xchg
inc
imul
movsb
cmp
jnp
inc
adc
sub
xlat
jns
ljmp
fwait
dec
mov
add
ficomps
mov
pop
in
shl
cltd
inc
fwait
or
add
jnp
ret
add
jns
add
or
xor
xchg
add
push
insl
jp
lods
or
pop
sbb
sbbl
icebp
mov
scas
out
mov
pop
push
cltd
mov
adcb
sbb
inc
add
repnz
cmp
or
sbb
inc
sbbl
xchg
add
fwait
mov
and
mov
xor
and
mov
jl
push
in
or
add
xchg
adc
inc
mov
ss
add
lcall
inc
push
test
or
cmp
sarb
add
hlt
mov
inc
in
add
lods
push
arpl
add
movl
cs
shld
test
mov
xor
add
mov
fucomp
xor
push
jnp
in
insb
fsts
lahf
ljmp
jecxz
mov
mov
jle
adc
mov
add
add
daa
je
pop
pop
sbb
jmp
stos
add
jbe
filds
add
sahf
pushf
flds
adc
scas
mov
fwait
pop
add
sti
iret
cmp
aam
push
inc
repnz
add
jl
in
xor
imul
mov
mov
add
cld
pop
sbbb
fdivp
add
sub
dec
adcl
or
lcall
pop
sbb
movsb
orl
shl
adc
add
testl
pop
out
les
add
imul
cmp
dec
jge
or
call
add
jbe
and
out
test
jmp
int3
xor
lret
xlat
adc
ret
or
inc
aas
add
mov
jbe
add
mov
lods
cmpb
flds
fwait
cs
push
aam
enter
sbb
mov
mov
xor
int
addb
lcall
cmpsl
push
and
xchg
outsb
add
rorl
add
bound
push
les
dec
xor
test
mov
cmp
insb
xchg
mov
iret
aam
jg
inc
data16
pop
jb
and
jl
adc
or
push
xchg
fsubrl
rorb
outsb
cmpsl
adc
adc
dec
je
leave
rorl
lods
cmp
and
loopne
pop
or
out
outsl
mov
incl
mov
and
add
cs
in
bound
add
out
push
fistl
lret
add
mov
lock
repz
hlt
cmp
popa
add
aas
outsl
testl
out
stos
lds
xor
icebp
loopne
add
leave
push
xor
or
sbb
pop
imul
clc
adc
add
fdiv
cwtl
add
fs
mov
add
loopne
pop
lods
loope
sbb
or
xchg
add
jl
repnz
mov
in
bound
add
cld
mov
das
orb
sti
sahf
sub
pop
fs
add
push
adc
mov
loop
outsl
psubb
sbbb
sub
pop
cmpsl
sbb
sbb
sub
xchg
sbb
popf
arpl
fnsave
lcall
add
sub
cmp
int
mov
movsb
pushf
shll
push
pop
dec
jmp
jae
add
bound
and
and
mov
cmc
adc
stc
jmp
jnp
imulb
sbb
and
imul
mov
dec
push
pop
mov
jecxz
and
jp
stos
scas
push
add
aad
push
or
in
shrb
pcmpeqw
cmp
lret
mov
mov
add
imul
xor
jo
xchg
xchg
loop
out
push
mov
lock
loope
test
add
push
or
call
outsb
pop
sub
addl
sub
add
dec
das
push
lret
ds
or
push
mov
imul
andl
xor
add
dec
nop
or
sub
bound
add
mov
shlb
lea
fxch
jnp
add
pop
or
imul
dec
add
out
xchg
repz
add
gs
divps
add
and
leave
push
outsb
xlat
inc
js
add
ja
data16
mov
pop
jecxz
push
cmp
dec
mov
sbb
addl
pop
add
movl
mov
dec
xchg
in
sub
pop
ret
std
jg
xchg
fcompl
mov
js
and
fsubrs
inc
subb
enter
add
iret
add
lea
insl
cmp
fcoml
jg
movups
mov
lods
add
dec
mov
add
sub
cwtl
sub
cmpb
and
lret
mov
inc
hlt
out
inc
lds
rolb
pop
xchg
mov
add
dec
aad
push
inc
pop
add
mov
sub
add
and
sub
mov
ficoml
cwtl
scas
add
dec
adc
sub
lcall
andl
add
sbb
bound
mov
mov
sahf
pop
and
js
add
hlt
jp
pop
sub
add
sbb
cmp
push
cld
jle
or
jnp
add
jns
in
daa
mov
inc
cmp
push
int3
movsb
add
test
nopl
cmpsb
add
jge
or
enter
xchg
mov
cld
out
push
jle
ffreep
cmp
add
jmp
add
add
sti
mov
sbb
adc
hlt
nop
mov
and
xchg
cmc
adc
add
scas
js
pop
bswap
and
jle
inc
in
out
je
outsl
sub
jecxz
jg
dec
leave
inc
add
sub
out
add
add
mov
in
sarl
idiv
push
mov
pop
xchg
pop
xchg
add
sub
popf
inc
icebp
mov
add
jae
test
int3
add
or
outsb
ljmp
xchg
test
add
cmpsb
cmp
jg
add
cwtl
sub
sub
cltd
push
movsb
rclb
add
cmpsb
aas
ficoms
bound
dec
loop
add
mov
add
mov
inc
stos
add
aad
sbb
stos
fucomp
pop
repz
sub
call
repnz
shll
pop
mov
mov
das
outsb
subb
add
repz
dec
push
imul
jecxz
imul
movups
jns
sti
pop
jne
xchg
dec
push
add
pop
enter
add
mov
rolb
dec
std
and
cli
adc
dec
orb
movsl
add
inc
mov
xchg
leave
xchg
jns
pop
daa
in
cmp
aam
mov
add
push
ja
add
or
jns
mov
inc
mov
scas
sbb
ss
ret
es
in
lcall
shlb
add
mov
sub
les
stos
xlat
dec
sub
jbe
out
mov
push
xor
repz
adc
in
pop
je
and
add
mov
lret
cltd
mov
and
adc
push
and
adc
xchg
or
sbb
outsl
test
xor
lock
hlt
popl
mov
pop
jge
cltd
ror
sbb
jp
js
fidivrl
ret
cltd
cmp
leave
movsb
add
jb
and
dec
add
pop
ja
xor
nop
push
sti
adc
iret
ljmp
inc
mov
pop
in
filds
fs
test
pop
xor
sete
mov
stc
out
dec
fs
cmp
mov
dec
ficompl
inc
add
add
cmp
mov
sub
aaa
fsubrs
popa
add
sbb
dec
mov
pusha
mov
clc
add
mov
push
cltd
shlb
sbb
add
jae
lds
push
jle
fs
mov
xor
je
and
scas
cmpsb
movb
loopne
xchg
inc
adc
cmp
add
pop
clc
mov
sbb
fs
or
dec
daa
pop
add
std
enter
hlt
push
pop
pop
out
add
push
cld
jo
mov
nop
aaa
and
inc
cmp
gs
push
test
cwtl
std
es
call
add
addr16
mov
or
icebp
push
xchg
pushf
into
lds
shl
arpl
push
xchg
shr
xchg
fiaddl
add
push
sub
repnz
mov
adc
jae
and
mov
sbb
loopne
cwtl
js
lret
pop
icebp
orl
jl
xor
and
flds
jb
jnp
cmc
and
stos
iret
add
xchg
jne
ss
mov
lods
sub
rcrb
fmuls
fs
out
push
pop
sbb
or
inc
frstor
or
mov
out
and
add
icebp
push
and
mov
adc
inc
add
sub
inc
sbb
scas
lock
lret
cmc
push
xor
rcrb
mov
jne
add
push
mov
add
lods
mov
jbe
push
into
pop
pop
push
or
add
add
pop
adc
sub
arpl
nop
xor
jo
and
push
shl
das
jae
or
add
push
test
xchg
cmp
add
mov
mov
xchg
sarl
int3
mov
sub
leave
hlt
push
xor
ss
in
mov
pop
cmpb
adc
pop
faddl
call
mov
ret
iret
push
popa
aas
cmp
call
mov
into
inc
enter
add
out
inc
movsb
mov
cmp
sahf
sti
out
out
rol
sub
notl
test
jge
sub
and
jle
sub
push
xchg
int
xchg
push
outsl
pop
cltd
rolb
hlt
sahf
inc
add
xor
shlb
xlat
xor
or
cld
or
fidivs
mov
pop
je
xchg
adc
or
popa
add
iret
inc
adc
inc
pushf
aad
hlt
xor
shlb
cmp
aam
divb
or
add
mov
add
inc
les
mov
push
shrl
mov
rolb
add
int3
sub
sbb
cmpsb
jb
add
adc
jecxz
or
dec
in
sub
hlt
cld
jo,pn
add
arpl
imul
sub
add
mov
pop
add
pop
mov
sahf
add
ret
inc
clc
inc
insb
add
mov
and
ja
leave
jmp
pushf
pop
jl
sbb
sti
popf
int3
or
loope
sub
jg
pop
xchg
jno
or
in
dec
nop
dec
add
adc
leave
mov
cmovo
xor
out
xor
scas
ljmp
cmp
add
popf
xchg
pop
add
or
fisubs
aaa
add
jnp
fldlg2
jge
sbb
mov
pop
pop
fdivrs
inc
push
sbbb
sbb
in
jbe
out
sarb
pop
bound
mov
push
dec
ret
add
add
push
xor
dec
mov
aad
stc
enter
cmp
push
addr16
pop
jnp
cmp
mov
sub
adc
sbb
cmpb
jle
test
outsb
test
jae
setg
scas
pusha
fnsave
and
lea
cld
ds
dec
add
ss
mov
sar
pop
data16
sub
cmp
and
imul
out
dec
fadd
add
mov
rolb
jbe
mov
sbb
adc
add
jle
adc
push
out
aad
in
js
jb
xchg
andb
daa
fsts
mov
push
cmp
pop
fwait
xchg
iret
fistpl
test
in
add
orl
sub
mov
ds
clc
mov
rorl
fcompl
and
sbb
adc
mov
add
test
xor
and
pop
adc
mov
orl
add
fwait
adc
insb
decb
xor
imul
mov
cwtl
and
add
pushl
jg
out
ja
ljmp
push
popf
es
out
aad
lea
sub
push
cli
in
jnp
js
add
cltd
outsb
scas
insl
fwait
jb
push
in
or
add
call
testl
lcall
movsl
jns
jo
adc
add
ret
int
sbb
fists
add
int3
or
jbe
add
add
pop
and
dec
push
add
inc
add
sahf
clc
cs
mov
add
outsb
mov
in
cmpsb
mov
test
repz
sbb
out
popa
push
lret
hlt
push
sbb
adc
add
add
xchg
xlat
inc
mov
push
jno
add
add
jge
pop
jmp
in
or
cli
xchg
cmp
ljmp
flds
push
jmp
and
push
cmp
je
cs
pop
pusha
dec
int3
cmp
sbb
ret
icebp
add
xlat
jne
pop
mov
inc
lret
iret
neg
sub
fs
cs
push
dec
pushf
movsl
nop
aad
mov
push
je
add
pmaxub
test
pop
pop
fisubl
icebp
test
jecxz
lods
xchg
int3
or
fdivrl
mov
add
popf
mov
cmpsl
sti
mov
sub
mov
rcr
jge
decb
push
add
add
cmp
pop
in
add
and
and
ja
jl
loop
in
inc
enter
js
add
mov
imul
fwait
jo
enter
into
xchg
sub
xor
mov
adc
add
ficomps
inc
jl
iret
add
and
add
insb
inc
adc
movsl
add
popf
inc
dec
or
push
in
push
aam
sbb
dec
sub
mov
sub
scas
pop
add
cmp
add
aad
lahf
xchg
repnz
xchg
add
sub
aaa
out
aas
jecxz
sbb
jns
lcall
pusha
fldt
push
xchg
add
push
sub
mov
sbb
icebp
cmpsl
incb
ds
cmpsb
rcr
add
sbb
call
scas
add
or
in
stos
push
push
cmp
add
push
jecxz
jge
popl
pop
sbb
movsb
bnd
pop
cmp
pop
jo
lods
mov
adc
jbe
adc
pop
jo
add
mov
cli
or
inc
cltd
fdivrl
sub
in
add
or
ret
sbb
pusha
sbb
dec
into
fcomps
and
jne
jnp
mov
in
std
cmp
jge
pop
add
test
push
in
int3
cwtl
sub
adc
in
mov
in
sbb
mov
sbb
pop
stc
lods
in
sti
mov
stos
add
dec
and
jmp
mov
cmp
inc
aaa
add
cmp
add
testl
add
mov
and
or
add
pop
lods
cmp
ret
add
in
xchg
sbb
lret
sarb
out
push
repz
ds
xor
jl
adcl
mov
loop
pop
dec
xor
pop
jo
pop
iret
push
popa
sbbl
xor
jae
xchg
addl
mov
jl
out
pause
loope
pop
add
xor
lret
push
in
cmp
mov
pop
jnp
dec
mov
aam
mov
cld
rorb
fimull
les
pop
daa
jp
add
jl
mov
aam
es
mov
xchg
addb
loope
jmp
push
cmp
les
jo
stos
cmpb
add
and
jne
icebp
adc
or
out
jl
lret
mov
xchg
mov
mov
add
pop
mov
sbb
cmc
mov
ret
xchg
repnz
dec
adc
lock
and
sub
data16
inc
add
aas
mov
hlt
sarb
ljmp
fs
jl
pop
gs
roll
test
and
jle
add
cmp
push
add
test
and
add
or
daa
cs
in
psadbw
mov
outsl
lds
out
addr16
lea
lods
mov
xchg
outsb
mov
cld
addr16
xor
sbbb
pop
ljmp
pop
mov
add
and
mov
call
test
incb
pop
cmc
sbb
inc
and
fsubl
andb
xor
pop
bnd
pop
icebp
enter
add
test
sub
stc
mov
inc
pop
adc
loop
cmp
cmp
and
inc
add
mov
testl
dec
sar
pop
xchg
imul
jb
fcoml
jns
lods
mov
add
movsb
outsb
ds
in
add
sbb
loope
jbe
add
mov
into
add
jecxz
daa
or
inc
ds
aam
add
lods
jnp
pop
shr
shl
push
sub
aaa
or
iret
loope
clc
lahf
cli
mov
pop
jge
test
loopne
add
mov
jo
adc
js
lret
incl
shlb
or
ret
lea
inc
mov
push
add
cmp
push
push
mov
dec
scas
inc
outsb
mov
orb
stc
and
mov
out
and
cli
add
mov
add
push
mov
add
cli
xchg
inc
adc
cmc
dec
lcall
mov
out
adc
iret
lahf
fadd
sbb
into
insb
add
mov
jle
sbb
sub
hlt
jnp
add
mov
jns
je
scas
sub
lret
jl,pn
add
mov
daa
inc
aas
sub
sub
sub
or
xor
cmc
hlt
jp
pop
mov
jmp
jg
add
sarb
xor
adc
pop
lock
std
divb
add
add
outsb
add
aas
add
out
adc
cltd
in
inc
cmc
fisubl
mov
mov
ret
imul
jno
mov
mov
adc
pusha
fsubs
cmpb
jmp
lea
call
mov
add
cltd
or
mov
inc
pusha
rolb
repnz
adc
test
push
pop
mov
pop
je
inc
jne
incb
and
push
inc
sub
in
add
sub
inc
ret
test
cwtl
jnp
push
jns
and
jo
out
inc
add
mov
or
sarb
lahf
add
popf
mov
test
fadd
inc
sub
xchg
lds
mov
pop
bound
clc
pop
cli
xchg
add
dec
ret
out
adc
hlt
cmp
cmpsb
mov
fucompp
and
into
sbb
inc
lret
mov
das
push
xor
ret
fwait
es
inc
imul
mov
push
add
loop
lock
imul
aad
imul
mov
sub
subb
mov
pop
sbb
cmp
sbb
sahf
add
aam
xchg
jno,pn
xor
jmp
test
pop
pushf
mov
negb
and
push
xchg
bound
popf
jecxz
inc
dec
mov
cmp
jno
scas
mov
shr
sub
into
push
sbb
adc
out
insb
pop
movsb
ja
inc
and
add
jle
je
or
dec
add
pushf
cwtl
or
add
jmp
pop
adc
pop
add
sub
call
dec
push
les
lds
fldcw
xor
cltd
arpl
inc
xchg
lcall
fisubrl
and
pop
fwait
add
cld
into
push
fidivs
add
xor
andb
cmpsb
verw
cld
in
lcall
fnstenv
add
or
dec
cld
push
mov
xchg
pop
cmpb
mov
inc
mov
loopne
push
les
mov
sbb
outsl
or
push
lods
or
add
dec
out
mov
nop
je
pop
adc
pop
pop
cmp
add
loop
push
cmp
ss
je
mov
add
cmp
roll
add
push
mov
xchg
lret
in
rorl
jns
push
and
aam
sbb
or
inc
xchg
sarb
ja
inc
xchg
jmp
push
stos
insl
gs
leave
add
sub
mov
rcr
xorl
mov
jge
testl
into
jge
dec
xchg
jbe
or
add
xorb
lret
xorb
add
mov
data16
inc
into
in
sub
sbb
and
add
and
aad
fsubrs
add
std
xchg
orl
imul
mov
loopne
add
sbb
inc
hlt
fldcw
movsl
jo
btc
and
stos
ret
add
push
adc
jg
add
mov
cmc
int3
popf
add
stc
xchg
cmp
inc
fs
push
mov
xchg
rolb
mov
into
add
mov
scas
dec
add
push
int
xorl
xchg
arpl
or
cmp
inc
push
mov
sbb
mov
and
mov
mov
inc
pop
loope
sti
jmp
push
gs
xor
push
push
icebp
push
add
and
mov
scas
pop
mov
jp
stc
leave
cltd
add
jmp
shr
inc
jle
pop
repnz
pop
andb
js
lods
cmpb
ja
sbb
faddl
lea
xorb
rolb
loopne
add
clc
movsl
notb
gs
sar
out
cltd
add
cmp
mov
aad
xchg
arpl
pusha
or
push
jle
pop
add
sub
insb
sbb
and
mov
push
and
jp
add
mov
test
out
inc
adc
test
or
gs
or
add
inc
das
mov
add
dec
je
cmp
or
mov
pop
sub
or
dec
jp
scas
mov
lahf
inc
xchg
push
shlb
fsubr
lock
arpl
es
inc
pusha
mov
pop
dec
jecxz
dec
lcall
out
add
icebp
mov
subl
pushf
add
jb
addr16
mov
repz
lret
dec
insb
jp
add
fldenv
pop
push
add
mov
xchg
cli
mov
sub
adcb
js
add
inc
mov
push
add
xor
adc
pop
mov
mov
ffreep
out
add
pop
insb
lods
cmp
int3
add
mov
or
fiadds
xchg
fsubrl
sbb
fdivl
das
mov
and
loop
int
mov
add
mov
out
add
shr
push
pop
dec
pop
pop
aad
pop
inc
xor
loopne
and
cmpl
sub
mov
push
dec
lods
pop
add
mov
psrld
inc
mull
inc
add
or
push
sbb
daa
in
push
dec
cmp
add
imul
stc
mov
jg
mov
add
mov
pop
add
xlat
nop
pop
repnz
pop
rcr
clc
and
xor
ret
xor
sahf
je
dec
and
pop
cmp
mov
rolb
imul
js
add
pop
iret
xchg
add
fwait
cmc
dec
dec
add
out
mov
leave
mov
add
repz
add
xor
sbb
push
xlat
jmp
jle
sbb
loopne
or
push
rclb
inc
adcl
rorb
popf
add
push
and
mov
je
out
add
xchg
cli
jo
mov
push
imul
ret
add
fs
add
cmp
jb
xchg
push
push
mov
data16
cmpsl
pop
xchg
pop
rolb
test
adc
xchg
sub
adc
add
in
aad
aas
call
xchg
call
inc
mov
ror
inc
test
xor
nop
lcall
add
loop
jbe
dec
aaa
ss
mov
jl
add
jo
addl
je
jo
lds
incb
in
rcrl
pop
aad
mov
std
repz
and
jno
add
mov
sbb
loop
lret
pop
sub
iret
cmpsb
or
nop
jle
test
add
xor
cld
adc
lret
ds
push
add
adc
add
aas
inc
xchg
xchg
fwait
or
fcomps
xor
pop
add
popa
enter
mov
add
adc
adc
imul
movsl
and
jnp
xor
aas
sbb
pop
popf
push
in
push
call
idivl
fnstsw
jle
fs
cmp
shr
push
in
aam
adcl
push
mov
fisubs
add
loopne
inc
add
cmc
lea
xlat
and
push
cmp
sahf
out
dec
jp
in
jecxz
push
dec
bound
fsubrl
lea
add
js
mov
in
fwait
ljmp
neg
sbb
shlb
add
mov
aad
jp
sbb
push
sahf
rcrb
cmp
inc
orb
xorb
imul
jle
add
inc
jle
movsb
ja
sbb
popf
xchg
add
in
popa
repz
les
sub
jns
loopne
dec
add
mov
leave
pop
add
pusha
into
mov
movsl
fsubrs
out
leave
stc
pop
or
pop
imul
nop
mov
sub
les
add
je
inc
sbb
addl
jae
lcall
xor
mov
dec
pop
jmp
jne
fiadds
pop
dec
pmuludq
jno
mov
add
xor
inc
push
sti
cld
push
add
jmp
mov
add
inc
xorb
add
xor
inc
hlt
xor
rcrb
xchg
sti
push
nop
repnz
lds
or
inc
pop
lret
mov
jecxz
mov
add
dec
in
xor
pop
sbb
sub
push
scas
out
mov
sub
pop
arpl
sbb
cltd
xchg
dec
insb
loopne
sub
add
ss
add
dec
dec
pop
fadds
ljmp
movsb
mov
push
pop
mov
inc
xlat
mov
das
xor
add
and
clc
lret
and
test
mov
push
repz
lret
lds
sub
inc
iret
dec
jl
nop
ret
aad
aam
into
insl
or
inc
sub
add
enter
push
bnd
add
sti
das
mov
outsb
lods
push
add
lret
fnstcw
cld
push
fs
adc
sbb
in
enter
aas
loope
add
pop
adc
mov
outsl
jnp
add
mov
sub
add
sahf
fs
clc
pop
in
mov
push
sbb
lock
addr16
mov
adc
pop
push
aaa
mov
xchg
xchg
add
xor
lcall
xchg
iret
mov
jge
inc
daa
add
and
lcall
testl
out
dec
cmp
imul
lock
dec
sub
fidivl
mov
pop
jno
push
dec
xchg
fistl
out
mov
iret
and
shrb
fsubrl
or
jno
scas
loope
and
pushf
pop
add
iret
jecxz
inc
clc
bound
add
int
xchg
dec
cmp
add
lods
loop
fchs
add
pop
loopne
inc
push
add
add
lds
int3
das
and
mov
outsl
push
or
fiaddl
jb
fcomps
push
or
std
loopne
hlt
pop
add
mov
lret
push
out
bound
dec
xlat
add
and
shll
sub
jmp
jecxz
inc
pop
adc
dec
add
xor
pop
push
ljmp
dec
add
add
jo
popa
mov
neg
aaa
xchg
xchg
pop
arpl
add
mov
pop
add
hlt
loope
add
orb
add
insb
fsubs
pcmpgtw
jecxz
movl
cmpsb
aaa
inc
sub
fisubrs
add
mov
lcall
sub
mov
push
lahf
mov
lcall
fwait
add
jno
push
shll
add
mov
mov
sbb
xchg
add
mov
pop
loope
aas
addb
mov
xchg
xchg
add
arpl
out
and
loopne
add
mov
pop
jo
jo
sub
sbb
inc
push
cltd
ret
add
addr16
pop
sbb
bnd
cli
lock
fucomp
addps
pop
and
mov
cmpl
inc
push
or
or
sub
jae
mov
pop
add
add
fisubrs
jnp
hlt
std
inc
pushf
pop
loopne
mov
jle
pop
cld
das
fiaddl
adc
push
or
inc
xchg
sahf
xor
or
add
jnp
push
shll
push
nop
xor
or
notl
inc
add
adc
lock
jne
xlat
test
and
xchg
mov
xor
lock
int
xor
mov
jg
dec
or
and
xchg
jg
mov
xor
pop
fsts
movsl
cld
outsb
mov
lret
add
jbe
inc
xchg
stos
add
test
mov
xor
lock
call
ret
jnp
sub
mov
add
outsb
jl
clc
jp
xchg
aad
add
jecxz
push
add
mov
xlat
add
xor
add
cmp
pop
subb
pop
add
das
push
call
push
mov
and
pop
cmp
sahf
mov
cli
gs
mov
pop
inc
cld
int3
or
push
sub
arpl
sbb
or
imul
cmp
inc
enter
jbe
sbb
mov
xchg
incb
mov
sub
or
test
xor
mov
push
cmp
push
sbbl
pop
int3
cmpsb
add
pop
jmp
pop
hlt
cmp
jo
fsubrs
pusha
jbe
hlt
push
int
es
insb
lea
js
call
out
xor
imul
addb
bound
add
out
scas
lods
mov
pop
push
jns
fsubl
ret
aas
shr
pop
ret
or
mov
jo
into
addr16
xchg
add
cltd
jnp
idivb
add
jp
inc
clc
sbb
repz
or
cmpsl
xchg
sbb
es
inc
ftst
add
addb
jns
out
test
in
xchg
push
add
mov
xchg
inc
mov
jge
cwtl
out
out
add
dec
mov
add
or
sub
and
idivb
add
shll
pusha
jno
cs
add
jg
xchg
filds
mov
in
dec
jo
pop
daa
cmp
lret
cmp
inc
pop
inc
scas
aas
add
push
adc
jmp
add
sahf
testl
repnz
pop
data16
int
add
loopne
add
iret
sti
jp
jnp
push
pop
ret
add
mov
push
sbbb
push
int3
xchg
rolb
cltd
lahf
and
mov
or
adc
inc
sbbl
in
shl
mov
stc
pop
add
pop
mov
add
out
sub
jl
mov
or
sbbb
ljmp
into
inc
adc
inc
add
cmp
dec
outsb
aaa
je
out
test
pop
call
mov
cmovnp
ja
shlb
xor
mov
jge
inc
nop
ljmp
ret
jle
push
cwtl
sbb
les
lock
xchg
hlt
mulb
add
mov
imul
inc
add
lea
inc
pop
fs
pop
idiv
rolb
sbb
ja
add
push
adc
scas
and
adc
sub
mov
xchg
addb
add
mov
stc
add
pop
outsl
pop
adc
or
cmpsl
pop
adcb
push
movaps
ss
xor
je
mov
and
adc
aas
mov
in
cmp
shlb
gs
ret
xor
jno
add
cmpsl
fidivl
sub
and
cmpb
pop
sbb
mov
adc
add
pop
fisubrs
scas
shlb
cltd
das
out
pop
add
cmpsb
mov
add
and
imul
mov
cs
cmc
xor
jno
pusha
push
test
bound
rolb
adcb
push
lret
and
add
ret
mov
add
fwait
add
dec
pushf
fnsave
or
mov
imul
jb
sbb
fsubl
pushf
xchg
add
mov
xchg
pop
xchg
add
push
mov
add
lret
test
popf
dec
add
push
adc
add
push
adc
mov
sub
movsl
add
fbld
in
xchg
xor
setns
jg
add
xchg
clc
outsl
jnp
push
inc
repz
in
cmp
mov
mov
inc
pop
ds
pop
add
cmpsl
cs
loopne
adc
or
enter
shlb
lret
add
sahf
xchg
add
pusha
outsb
mov
fsubp
fldl
push
stos
str
lret
jno
lods
xchg
fadds
push
fwait
mov
jp
pop
ds
add
and
add
test
out
push
rolb
bound
adc
mov
jbe
dec
sarb
cmp
add
ret
shrb
cmp
js
call
push
push
les
add
es
cwtl
fnsave
js
add
out
or
or
je
add
push
insb
loop
mov
or
rcr
dec
push
mov
or
dec
addl
inc
xor
stos
mov
mov
icebp
das
jb
cmp
in
lods
call
loopne
add
xchg
pop
hlt
xchg
xchg
jnp
add
inc
jl
push
push
xor
negl
and
push
mov
add
cmp
add
or
daa
scas
sbb
stos
dec
repz
clc
insb
xchg
int
jnp
adcl
iret
jmp
out
or
jae
inc
jl
loop
outsb
adc
pop
fildl
lods
adc
add
repz
add
fdivs
jnp
xchg
jo
popa
mov
jp
inc
xorb
add
cmp
roll
add
add
mov
cli
jb
add
lahf
lock
into
add
popw
stos
sahf
sarb
pushf
loope
stos
mov
nop
sbb
pop
add
inc
lret
dec
nopl
add
pop
shl
scas
test
stos
sub
pop
lock
sahf
add
out
pop
sbb
lret
fimull
bound
sahf
push
xor
add
jp
push
add
xchg
mov
mov
add
sbb
jb
ret
insb
push
nop
ljmp
xchg
dec
in
out
add
js
lret
add
out
imul
add
pminsw
cld
and
popa
outsb
add
mov
scas
hlt
in
mov
lahf
out
cmp
sbb
rcl
cli
das
add
pop
lcall
push
in
leave
inc
xchg
sbb
out
inc
cmp
hlt
xor
je
add
pop
and
push
cltd
fidivrl
dec
mov
cmp
xlat
rorb
les
fmull
in
mov
lret
mov
nop
clc
fsub
ja
out
out
stos
lahf
xor
cli
addl
xchg
jecxz
push
fsubl
add
nop
aad
sbb
in
arpl
pop
lea
push
out
cmpsb
dec
push
fst
je
sbb
addb
xlat
xchg
xor
cmp
add
imul
fnstcw
push
push
xchg
jb
rol
test
mov
out
mov
sbb
lcall
mov
add
cli
idivb
call
cmpb
jbe
add
dec
xor
mov
dec
icebp
gs
in
inc
add
test
orb
push
push
jecxz
in
mov
aam
les
mov
add
stc
arpl
add
ss
jmp
dec
hlt
push
in
and
add
push
rolb
sti
divl
out
pop
push
add
out
dec
test
push
mov
pminsw
loop
rolb
add
sti
pop
pusha
jmp
pop
mov
push
ds
xchg
mov
sub
popa
mov
fdivl
mov
in
jno
fimull
orb
jnp
jb
cmp
sub
cmp
pop
dec
imul
enter
push
sbb
loop
bound
lods
pop
test
sbb
cmp
lods
pop
imul
push
xchg
jecxz
add
sub
mov
sbbl
add
incb
add
test
es
xchg
sbb
pop
lea
sarl
mov
pop
aam
add
pushf
add
push
xor
pop
mov
sbb
lahf
mov
jle
lret
cmp
add
mov
sldt
out
movsb
sub
and
je
mov
repz
xchg
out
nop
das
cmp
in
bound
xor
xchg
loop
add
xchg
cmp
add
xor
pop
inc
or
sbb
pop
pusha
addr16
jae
pop
hlt
out
or
popa
dec
loop
in
mov
rclb
pop
and
fdivr
out
pop
push
out
pushf
adc
popa
xchg
mov
dec
mov
mov
sub
add
roll
cmp
jns
pop
cld
or
inc
xchg
jno
pop
inc
add
js
cmp
xor
add
cmp
inc
lock
xor
cli
popa
pop
mov
xor
lock
in
fdivl
aad
jae
mov
add
ret
or
push
jge
imul
notb
iret
in
add
enter
xchg
xchg
dec
add
dec
inc
push
add
mov
iret
dec
push
mov
jmp
jp
insb
jo
add
into
pop
pop
mov
mov
mov
ficomps
mov
pop
stos
sarl
inc
testl
jecxz
sbb
lods
lds
xchg
push
add
js
cmpsl
xor
adc
add
cld
adcb
ret
sbb
sbb
in
sbb
add
das
mov
push
cli
or
testb
mov
xor
pop
jno
mov
and
std
jge
pop
mov
push
inc
subl
ds
add
clc
add
in
fildll
loop
xchg
into
jno
adc
pop
aas
dec
jne
mov
in
adc
push
xor
push
xchg
ss
aam
sahf
or
insl
add
test
enter
cli
sahf
pushf
add
xor
ds
pop
push
pop
adc
sbb
outsl
popa
mov
jne
lcall
dec
dec
sub
push
lods
add
stc
fcomi
arpl
das
fmull
lds
dec
pop
mov
call
jp
push
push
movsl
add
mov
cmp
add
and
add
sbb
mov
loopne
push
add
dec
jge
add
jmp
rolb
push
shl
mov
mov
jecxz
pop
int
mov
add
fsubl
jge
orb
sbbl
add
jge
mov
adc
orl
stos
add
mov
push
call
xlat
fxch
xchg
out
add
ljmp
dec
mov
sub
sbb
jb
cmp
ret
loope
stc
hlt
push
add
push
pop
pop
pop
inc
into
add
cs
sub
pcmpeqd
pop
rol
sarl
push
or
add
arpl
mov
movsb
xor
std
mov
dec
dec
add
rolb
push
popf
in
cld
sti
out
dec
out
lahf
add
xor
pop
push
cmp
jle
sbb
rcr
adc
cli
addl
daa
xchg
push
movsb
scas
movsl
push
add
add
xor
mov
outsb
add
dec
lds
mov
push
pushf
aad
fimuls
jns
mov
add
cwtl
lret
popf
dec
ror
popa
add
loopne
jl
sub
add
xlat
js
jle
push
add
imul
loope
add
xchg
push
mov
mov
add
outsl
rcll
push
in
add
imull
add
lods
movsb
imul
push
fmulp
pop
hlt
in
and
inc
inc
pop
and
add
out
addb
pop
out
jle
rcl
add
movsb
mov
sub
lahf
cld
xchg
add
daa
add
call
pop
xchg
fists
push
pop
sub
ret
mov
ss
add
xchg
adc
push
in
ja
pop
sub
adcb
scas
pop
adc
xchg
sbb
cltd
jp
add
sbb
out
and
cld
test
mov
mov
pusha
mov
add
cmpsb
ret
lds
dec
insb
inc
add
add
xchg
dec
into
adc
and
int
bound
add
test
or
xor
jnp
inc
sbb
sbb
xchg
xor
les
jae
or
fistpl
dec
or
mov
jecxz
xchg
jmp
adc
fs
sti
pop
es
test
add
sbb
inc
and
fisttps
icebp
adc
lock
gs
loope
add
add
dec
inc
movsb
test
neg
jp
aas
imul
popf
add
or
adc
cmp
jo
add
fiaddl
and
not
in
xchg
outsb
add
sub
jecxz
jmp
inc
push
add
inc
or
sbb
orb
and
lock
pop
adc
rcrb
mov
jmp
sub
add
movsb
fptan
and
je
push
or
jmp
addr16
cmp
add
mov
aaa
and
call
xor
sbb
cmp
out
add
cmp
jl
jns
or
add
mov
xchg
add
std
gs
por
pop
fstpl
sbb
sbb
cld
and
jns
add
adcb
es
jo
pusha
xor
repnz
fs
roll
cli
std
imul
movsl
jmp
add
jl
add
loope
xchg
mov
cmp
fmull
ja
in
shrb
push
xchg
add
xor
lods
pop
icebp
mov
fiaddl
xchg
aad
subl
in
fisubs
mov
scas
es
add
cmpsl
mov
in
push
hlt
js
shrb
push
ss
clc
gs
or
test
ja
or
ljmp
inc
sub
xchg
push
mov
fisubl
sbb
in
dec
pushf
xor
push
add
mov
outsb
add
insb
cs
call
ret
pop
data16
dec
add
imul
fwait
insb
add
pop
sub
cmp
pop
loop
insb
or
push
std
add
mov
or
add
cmp
or
das
push
ljmp
pop
mov
or
add
jecxz
test
add
dec
pop
xlat
cli
ret
jno
add
sbb
pop
add
inc
stos
fdivrl
lods
jno
popa
dec
addr16
loopne
mov
shll
verw
inc
add
lcall
xchg
js
mov
cli
add
rcrl
fildl
in
sbbb
add
loopne
popa
bound
add
dec
lock
xor
bound
cmp
sbb
repz
hlt
push
mov
out
add
mov
in
pop
int
fcompl
inc
add
into
pusha
dec
out
cld
imul
jl
xchg
jnp
push
aas
mov
sbb
nop
mov
ret
repz
adc
sub
pusha
jne
aas
mov
add
xor
scas
xchg
addr16
push
pop
mov
loopne
jb
movsb
add
sti
in
int
add
dec
lret
pop
push
es
add
adcl
pop
test
push
and
insl
add
xor
fwait
adc
add
lods
cmp
cwtl
lock
add
dec
push
mov
ret
add
lret
mov
add
in
in
push
jne
push
dec
mov
pushf
push
xchg
adc
pop
sbb
ljmp
out
inc
xor
add
inc
mov
dec
pop
sbb
mov
cmp
fdivrs
jns
pop
int
cmp
and
or
out
adc
sub
leave
xor
out
sbb
sbb
iret
test
js
sbb
cwtl
add
cmc
pop
ljmpw
xchg
mov
and
sbb
xor
dec
stos
mov
mov
lds
sti
mov
ret
mov
mov
popl
xchg
cwtl
add
mov
xchg
adc
and
add
mov
and
adc
inc
add
inc
mov
push
sub
or
cld
iret
add
call
outsl
push
sbb
scas
jb
jne
stos
mov
add
jmp
sbb
dec
rorl
add
filds
sub
dec
sbb
fidivrs
rorl
pop
rcrb
add
faddl
pop
dec
movsb
popf
jo
jo
hlt
repnz
add
and
add
dec
push
jno
in
movsb
add
mov
scas
add
fcmove
leave
xchg
mov
push
imul
cli
sbb
test
xchg
mov
add
pop
mov
fs
sub
jge
cmp
js
iret
sub
cmp
lcall
insl
fstpt
fisubs
xor
dec
ja
jle
cwtl
aas
daa
scas
imul
push
sub
inc
insb
sub
ja
mov
xchg
out
add
mov
rolb
fldenv
out
mov
in
fisubrs
mov
adc
add
inc
imul
add
fsubs
addr16
clc
pop
jecxz
add
mov
lret
cli
cmp
sbb
xchg
add
push
bound
sub
iret
add
jbe
stc
push
popf
testl
mov
int
push
in
cmp
add
pop
sub
sbb
pop
sbb
rcll
add
in
fndisi(8087
adc
inc
sub
clc
inc
lahf
xor
add
or
add
movb
dec
call
mov
dec
mov
cmp
and
add
push
push
jmp
inc
cmp
mov
loopne
jg
add
ret
mov
popa
out
roll
adc
push
ljmp
push
inc
gs
ljmp
loop
scas
flds
jg
add
add
mov
add
cmpsl
das
or
cltd
cmp
loope
and
add
inc
je
pop
sahf
popf
push
and
push
test
pop
sti
inc
mov
push
shrb
jmp
dec
insl
aaa
daa
int
in
jg
add
push
andb
mov
or
cmc
fcomps
add
ret
stc
icebp
xor
xor
mull
pop
push
xchg
daa
inc
xor
mov
mov
testb
push
mov
add
cmpsl
cmp
push
add
cmp
sbb
and
ret
mov
push
sub
inc
cmp
call
add
dec
lds
push
jle
add
add
jl
or
loopne
push
movsl
add
jmp
adc
sub
inc
inc
add
add
out
add
lods
mov
xchg
int3
int3
pusha
add
lahf
lds
stos
or
push
filds
xor
mov
mov
das
and
add
xchg
mov
inc
rorl
or
pushf
cs
rolb
dec
lods
inc
pop
push
cmp
inc
inc
mov
lret
jb
add
xchg
inc
in
iret
ret
dec
cwtl
lds
xor
lret
incb
aad
pop
addb
and
repz
mov
mov
stc
mov
fdivrs
add
sub
jecxz
idivl
and
outsl
fcoml
out
jmp
add
mov
jle
ret
hlt
inc
addr16
fsubp
popf
dec
andb
push
push
mov
popa
rolb
push
adc
xchg
cld
or
hlt
repnz
mov
sbb
insb
jnp
push
mov
jae
movsl
ja
imul
xchg
add
testl
lahf
in
cmp
adc
sar
cmp
addr16
stc
sub
aad
dec
dec
cltd
test
fwait
xor
dec
out
jb
add
cltd
pop
or
popf
scas
pop
mov
jo
add
inc
scas
loopne
popf
add
cmpl
imull
xor
push
jge
jp
arpl
mov
pop
sub
fmuls
roll
dec
jg
push
cmp
imul
cmc
pop
jno
adcb
scas
dec
mov
jnp
addr16
ja
add
loop
add
sbb
add
insl
sbb
rolb
pop
mov
lods
nop
pop
adc
inc
mov
pop
mov
lock
jp
int
or
xchg
iret
orb
es
enter
add
mov
add
test
std
es
cmp
xor
add
xchg
add
pop
cmpsl
mov
inc
bound
adc
int3
sar
fdivrs
pop
flds
loopne
int
dec
add
das
inc
and
add
lea
pop
addb
add
aad
loopne
ret
pop
sbb
sbb
xchg
shl
jg
pop
add
cld
ds
jno
mov
inc
popa
dec
shrl
hlt
imul
xor
mov
test
enter
cmp
int3
push
pop
push
cmpsb
sbb
and
add
inc
mov
shr
or
out
stos
jg
fisttpl
lock
imull
add
sbb
xchg
adc
mov
flds
mov
and
cmc
leave
pop
xchg
jno
add
mov
adc
cmp
xchg
push
sbb
add
cmp
or
ja
jp
add
mov
int
adc
jl
push
add
lret
jecxz
cmp
pop
int3
movsl
fstps
das
arpl
outsl
inc
add
mov
jae
add
popl
sub
aas
lds
nop
xchg
sub
outsb
sub
add
xchg
xchg
or
scas
lds
inc
mov
cmpb
push
shlb
loope
dec
or
cmp
rorl
add
mov
mov
shlb
in
dec
xchg
data16
and
repnz
sub
xor
add
pop
addb
outsb
cmp
cmp
jne
imul
sbb
sub
loope
mov
cli
and
add
leave
in
arpl
sbbb
sbb
push
jg
insl
cltd
pusha
dec
inc
or
in
outsl
psllw
pop
ja
lods
movsb
sbb
dec
or
add
cltd
mov
cmpsb
and
mov
loop
jb
scas
ljmp
sahf
lea
add
jl
xchg
or
pop
roll
jbe
mov
add
movb
mov
jo,pn
add
and
sub
jge
clc
adc
ja
push
jno
mov
outsl
js
jns
cmp
xchg
sub
mov
add
test
out
mov
int3
addl
aaa
mov
scas
jo
add
cld
pop
lahf
dec
int3
rolb
and
bound
ror
cs
add
dec
enter
std
inc
dec
add
mov
sub
add
push
rclb
sbb
push
add
into
fdiv
and
cmpl
inc
jae
in
add
adc
fs
clc
push
add
ret
cmpsb
pushf
enter
leave
aam
dec
xchg
jns
pop
xor
lea
push
mov
pop
add
icebp
xchg
mov
mov
sbb
andl
and
ret
loopne
dec
xor
mov
or
jecxz
dec
cld
push
add
outsl
jae
ds
rcrb
jge
jo
mov
jo
or
in
lret
push
fildl
push
movl
inc
mov
xchg
icebp
add
in
lcall
mov
add
pop
push
pop
mov
testb
sbb
mov
adc
int
imulb
mov
test
lds
jmp
sahf
test
add
aaa
mov
stos
sbb
mov
add
pop
cmc
push
in
dec
test
add
jecxz
out
fcomps
jbe
cmp
add
orl
pusha
mov
loope
jle
mov
add
movsl
or
pop
outsl
push
fiadds
int3
into
enter
lea
insb
cmp
mov
xchg
dec
ljmp
std
cmp
xchg
inc
scas
lret
jecxz
pop
gs
xor
out
inc
cmp
cmp
xor
or
movswl
sbb
imul
inc
xor
icebp
or
shlb
aaa
mov
push
jle
push
xor
push
cmp
push
jb
fldcw
sub
sete
jae
mov
add
fdivrl
lahf
add
into
jmp
stc
ds
cmp
add
or
dec
jo
add
aam
xchg
idivl
push
or
cltd
lods
in
sbb
cli
rolb
mov
jge
test
xor
pushf
rcr
sub
jno
add
lock
out
mov
popa
xchg
lds
arpl
and
add
cmp
cmc
dec
lods
dec
add
cmp
adc
int3
out
add
ljmp
dec
add
fs
xor
loope
lods
or
inc
popf
clc
pushf
cmpsb
ds
pop
cmp
mov
ja
add
stos
pop
adc
aas
adc
mov
in
cs
or
pop
mov
out
xchg
sbb
jno
dec
movsb
scas
add
daa
push
add
les
lret
shrb
mov
aaa
arpl
xchg
enter
out
xchg
fildl
ficoml
cmp
xor
cmp
je
sarl
xor
pop
add
jl
sub
add
mov
movsb
or
lock
jl
mov
pop
push
data16
xor
add
out
mov
das
aam
jbe
rclb
sub
jl
add
xchg
pop
jno
popa
push
and
or
ss
inc
cmovns
pusha
xchg
xlat
inc
xchg
dec
fldl
jno
adc
and
dec
in
dec
add
or
or
je
mov
test
lods
dec
jle
mov
sahf
jecxz
mov
or
sub
cmp
inc
adc
ljmp
nopl
shrl
out
pusha
lahf
push
add
flds
in
add
cmp
mov
sub
arpl
add
cwtl
scas
nop
and
sahf
add
lea
loopne
sbb
add
loope
in
sbb
xor
push
dec
sub
pop
nop
xchg
sbb
mov
xor
dec
clc
data16
adc
push
add
ljmp
mov
pop
out
mov
mov
sbb
aas
mov
sbb
mov
adc
mov
add
jb
stos
jno
aas
fisttpl
xor
cmp
pop
add
inc
jo
or
xchg
lock
fisubrs
dec
pop
add
dec
sub
cmp
lcall
xchg
add
xchg
test
add
adc
sarb
pop
stos
icebp
in
push
movsl
pop
or
push
rol
add
out
fwait
cmpsl
cmp
add
enter
dec
movsl
ja
pop
dec
test
sbb
add
adc
shr
add
and
sub
jae
or
cs
inc
pxor
adcl
loope
aam
add
mov
scas
call
addb
fcomip
fildl
clc
js
out
cli
fdivrs
cmpb
adc
cmp
mov
out
fistl
jp
add
add
pusha
lret
mov
sarb
in
lds
pop
add
sbb
dec
shrl
arpl
icebp
push
imul
into
or
and
fs
insb
jl
dec
inc
es
xchg
test
add
jne
arpl
mov
cmp
add
sub
in
in
daa
shrb
bound
lock
js
jb
addl
je
nop
shlb
ud0
mov
mov
inc
out
rep
lock
cmc
and
xlat
dec
jmp
add
adc
add
mulb
iret
add
movsl
outsl
lret
ja
cmp
pop
add
out
add
fisttps
cmp
push
add
jle
data16
cmp
in
int3
add
jae
lds
popl
adc
mov
les
add
jl
jmp
rcr
jle
add
imul
orb
mov
movsl
fwait
icebp
fidivrs
notl
push
jb
je
mov
inc
add
aad
sub
adc
push
mov
sarl
xor
lcall
jo
jmp
jno
add
push
xchg
dec
bound
push
aas
xor
stc
ss
add
aad
pop
add
scas
rorb
add
stc
mov
test
sti
sbb
and
pop
std
sub
push
rcrl
xchg
push
repz
mov
xchg
lahf
mov
lock
add
and
das
jg
xlat
jns
xchg
jmp
cmp
adc
sbb
jnp
sbb
cmc
cmp
add
xchg
pop
jns
stc
pushf
add
pop
aaa
int3
or
lret
sbb
inc
cmp
or
enter
jnp
or
mov
dec
leave
inc
or
fs
xchg
sub
pop
in
xchg
loope
hlt
clc
mov
or
popa
fwait
adc
add
mov
mov
adc
popl
aad
mov
lock
push
add
jbe
mov
std
roll
in
adc
sti
inc
dec
xor
stos
sahf
xor
ror
std
enter
sbb
add
pushf
leave
popf
pop
push
jbe
add
lahf
lds
dec
sbb
shl
add
cmc
test
or
lods
fnstsw
xor
jo
data16
jno
add
hlt
movsb
incl
lret
add
dec
orb
add
mulb
push
adc
outsb
repnz
adcb
cmp
and
inc
add
dec
mov
cmc
addb
sahf
pop
mov
shlb
pop
xchg
jl
fdivr
dec
add
jo
rclb
sbb
mov
xchg
mov
or
push
xchg
test
push
jne
add
xchg
arpl
sbb
jbe
cld
imul
repnz
jg
or
rorb
add
dec
imul
jae
test
loop
shl
jnp
push
pop
andb
out
je
add
push
mov
mov
inc
arpl
add
lcall
inc
pop
mov
inc
add
mov
and
insl
mov
add
push
pop
dec
cs
push
xchg
sbb
jbe
aaa
push
cmp
cmc
sub
adc
loopne
mov
movsb
pop
adc
add
fldt
add
xlat
stc
imull
cmp
stos
cwtl
xchg
add
sub
add
rolb
addb
scas
in
mov
xor
add
sub
xchg
add
pop
xor
lea
cwtl
xor
fwait
add
call
mov
scas
xchg
pop
push
rolb
je
jp
add
imul
xor
cld
in
rorb
and
jg
pop
cmp
push
xchg
std
cmp
loopne
add
in
xchg
xchg
lret
arpl
pop
out
jae
inc
sbb
add
mov
icebp
mov
or
sbb
adc
in
test
mov
pop
ret
sbb
mov
int3
jb
add
xchg
mov
sti
mov
add
push
cltd
jp
sahf
pop
pop
dec
add
adc
in
add
out
cld
mov
jmp
push
incl
movsb
push
inc
add
pop
mov
pop
inc
in
in
xchg
dec
out
add
jge
pop
push
xor
sarb
xor
sbb
push
pop
mov
icebp
std
adc
or
add
push
fistpl
lahf
add
daa
lcall
rclb
jne
and
pop
xchg
pop
addr16
xchg
xchg
fidivrs
add
notb
pushf
bound
vmovaps
inc
outsl
pop
push
loopne
fdivrp
ret
add
and
sahf
push
pop
add
ret
xchg
inc
or
add
jne
mov
add
popf
hlt
or
jne
add
xorb
sbb
add
inc
jb
pop
mov
and
es
inc
push
fstl
add
arpl
incb
mov
or
or
sub
or
mov
rolb
jo
cmp
js
pop
sub
jle
pop
xor
out
pop
rolb
dec
sahf
pop
insl
add
mov
int
dec
in
addr16
aaa
pop
add
imull
insl
xchg
lods
add
or
test
adc
rcr
cmpsl
add
jns
and
mov
pop
out
hlt
outsb
andb
or
andb
loope
jae
mov
jne
lret
jg
add
sarb
popa
lahf
add
repnz
das
add
push
lock
push
jle
out
loop
movzbl
jns
pusha
int3
xchg
hlt
addb
pop
inc
sub
test
add
inc
adc
adc
in
push
testb
call
xchg
xor
dec
test
push
mov
fs
ljmp
xor
sahf
sarb
cmp
flds
insl
lea
push
in
adc
inc
pop
scas
add
lds
sbb
loope
cs
and
add
loopne
in
aas
aaa
add
jp
push
pusha
mov
jg
add
mov
stos
loop
inc
das
or
cmpsb
sub
iret
fnsave
pop
dec
stc
sub
les
test
inc
mov
xor
jbe
cmp
push
cmc
pop
pop
inc
jp
btc
aaa
and
orl
jb
out
xchg
add
push
dec
jb
jno
pop
jbe
xchg
push
add
jns
movl
rorb
mov
fcmovbe
inc
xchg
je
add
mov
mov
add
adc
lcall
jno
add
inc
jmp
aaa
mov
jg
add
xor
adc
add
mov
stc
jge
adc
aas
add
inc
or
fisttpll
shll
gs
push
aaa
jg
jmp
cmp
xor
into
jae
sbb
negb
jmp
mov
xlat
pop
test
faddp
jne
scas
inc
mov
xor
cvtps2pd
mov
mov
mov
ret
pop
mov
add
adc
push
pminsw
xchg
orl
sub
pop
iret
inc
and
jne
in
test
mov
push
add
add
jo
or
rorb
add
push
mov
cwtl
repz
pop
fistpl
repnz
cld
jb
add
sbb
dec
add
mov
leave
testw
and
clc
outsl
mov
add
xor
mov
xchg
mov
cld
push
cltd
add
les
inc
mov
call
mov
xchg
add
negb
jns
add
scas
imul
pop
sub
in
mov
cld
mov
idivb
push
hlt
add
adc
xor
xchg
and
cmc
mov
sbb
add
jb
cwtl
movsb
add
and
pop
test
hlt
pop
add
push
adc
out
je
add
mov
xchg
lods
add
mov
add
mov
lcall
add
arpl
pop
dec
mov
pop
outsb
sbb
ret
cmp
add
in
add
cmpsb
pop
and
sub
jne
add
insb
dec
jae
push
or
inc
or
add
mov
and
dec
xchg
adc
ficomps
outsl
andnps
loopne
or
int3
add
pop
add
cmp
push
adcb
negl
mov
je
ljmp
push
rol
dec
add
push
or
xor
pusha
mov
ljmp
enter
add
mov
add
sub
leave
aad
xchg
fcmovne
daa
and
clc
or
out
add
imul
push
bound
in
xchg
subl
xor
lock
xor
or
jno
leave
add
mov
mov
stos
dec
mov
inc
imul
or
mov
pop
mov
les
jp
add
aam
clc
std
cmp
add
sbb
add
lds
add
cmpsb
sbb
imul
loope
leave
push
insb
mov
mov
jo
push
cmc
or
ret
add
sub
add
imul
or
jb
add
pop
call
test
mov
iret
sub
push
mov
clc
testl
mov
xchg
roll
movsl
jp
cld
pop
cli
lea
mov
into
cmpsb
mov
sub
imul
arpl
add
push
add
mov
push
rorb
add
stc
dec
aad
inc
or
and
add
cmp
repnz
jne
into
out
cmp
xor
xchg
lock
fucomip
push
pop
mov
dec
add
pop
test
cli
cmp
stc
clc
lcall
lret
jp
jge
insb
in
pop
jmp
shrl
hlt
mov
inc
movsb
jno
cltd
jle
add
aad
mov
rep
cmp
add
pop
stos
push
mov
cmp
mov
clc
add
and
insb
iret
mov
add
jns
inc
addr16
sbb
sbb
sbb
pop
mov
jbe
adc
rorb
pop
xchg
push
mov
scas
pusha
inc
mov
pushf
add
mov
pop
or
shr
das
sbbb
and
xchg
pushf
add
lahf
sbb
shl
adc
fsubs
mov
fwait
inc
icebp
in
mov
jno
aas
ret
jo
xchg
pop
testl
adc
outsl
add
addr16
or
jbe
pop
add
stos
add
and
loop
test
push
add
jo
and
pop
mov
cli
ret
insl
mov
inc
test
jl
clc
mov
add
xor
add
fmull
add
add
sahf
add
xor
or
and
popf
popa
outsb
arpl
lea
xchg
into
dec
mov
adc
xor
insb
mov
fsubs
sar
add
int
es
pop
xchg
dec
icebp
inc
repnz
fistps
or
mov
mov
popa
pusha
mov
arpl
mov
mov
outsb
add
cmp
cs
xchg
pop
sti
and
jge
hlt
add
cmp
push
shl
add
ljmp
cmp
cs
fmuls
add
imul
in
add
pop
rcrl
xor
inc
fwait
mov
mov
shl
and
jp
add
mov
pop
pushf
xchg
repnz
mov
sbb
add
ja
loop
gs
xor
pop
inc
idivb
mov
mov
jmp
aam
jns
inc
scas
inc
xchg
mov
push
dec
add
clc
cmp
lock
add
cmpsl
pop
data16
inc
sar
iret
pop
xchg
lods
int
movsb
nop
mov
add
and
lret
lods
push
push
fsubs
enter
fildl
or
mov
lcall
sti
lods
xchg
jmp
out
int
push
comiss
outsb
incb
add
lret
jns
push
mov
push
jg
sbb
xor
aad
jmp
cmpsb
negb
or
loop
push
pop
push
mov
cmp
out
insb
fdivrl
aam
outsl
and
pop
and
jge
rorb
xor
mov
pop
out
or
orl
cmp
js
add
xchg
mov
pop
mov
ljmp
xor
les
and
add
repz
test
add
fldt
into
add
xchg
sahf
jne
xor
add
mov
add
mov
inc
out
sbb
xchg
cld
lcall
inc
loop
inc
cmp
in
add
out
rcrb
fnsave
dec
fs
add
jmp
cld
out
imul
in
mov
add
cmp
or
add
aam
push
lahf
xchg
adc
mov
dec
adc
mov
addb
rolb
stos
ret
xchg
idivl
or
cltd
push
roll
mov
aas
mov
cmp
pop
nop
je
dec
xor
outsb
or
mov
add
sbb
and
out
cmc
add
mov
gs
xchg
pop
cmp
jecxz
add
push
or
int
lret
dec
jge
aad
jne
xorl
sbb
outsl
fcoml
push
cmp
cmp
sbbb
add
add
mov
ljmp
int
pop
pop
cmp
cmpsb
jae
loopne
push
lea
les
scas
and
cmp
push
in
leave
sub
arpl
sub
jg
cli
add
xchg
test
flds
sub
push
xor
mov
add
fsubr
scas
add
add
dec
add
ja
pop
mov
stos
jmp
lds
xor
cmp
sbb
jl
out
in
mov
xor
and
cltd
pushf
int3
or
sti
xor
popa
cli
test
xorb
daa
xor
imul
pop
sub
mov
shr
mov
ret
adcb
mov
into
decw
mov
cmpsl
add
dec
push
faddl
std
push
sahf
add
sbb
push
cld
mov
mov
cmp
mov
pop
pop
sarb
add
cmp
cmp
test
xor
add
popa
sbb
mov
aad
push
add
xor
fwait
xchg
jle
or
sbb
add
testl
daa
aas
sub
push
xor
add
jmp
xchg
sub
in
rolb
add
pop
and
push
roll
add
push
add
rdpmc
mov
mov
push
pop
movsl
enter
loopne
pop
add
mov
add
or
pop
roll
divl
jg
sti
aam
add
or
mov
xor
sarl
ss
enter
push
mov
or
mov
out
push
add
loope
pop
mov
pop
unpckhps
dec
inc
pushl
enter
add
mov
lret
mov
cmp
mov
sub
mov
cmp
repz
jle
sbb
mov
mov
cmpsb
rolb
int
ret
dec
pop
push
std
outsl
adc
mov
push
inc
in
xor
add
and
cmc
add
or
fwait
lret
mov
popa
andb
mov
adc
stc
jp
cld
gs
or
addb
test
leave
xor
or
cmp
icebp
add
popa
push
sub
add
scas
xor
inc
jae
xlat
lret
les
and
push
out
dec
aaa
sbb
and
pop
cmc
mov
leave
cs
fsubrl
push
pmullw
ret
mov
xchg
inc
in
mov
addb
pop
ja
icebp
mov
lret
mov
mov
mov
jmp
jge
jp
hlt
xchg
dec
pop
outsb
sbb
rolb
mov
imul
adc
cmp
cld
cmpsl
ja
add
push
xchg
bound
add
out
mov
jae
push
add
lret
repnz
outsb
arpl
shlb
stos
mov
jecxz
push
mov
cld
cmpsb
hlt
mov
add
adc
mov
cmp
cmp
repz
mov
add
out
es
dec
push
jno
sub
cmp
les
xor
stos
out
jle,pn
lret
addl
push
arpl
push
test
pop
les
popa
cs
mov
cmp
push
jae
fsub
inc
add
cmp
xor
jns
push
loopne
sub
mov
pop
sub
pusha
sbb
int
push
jo
and
add
mov
xchg
add
test
mov
mov
pusha
or
mov
ss
add
out
jns
in
sbb
inc
mov
xchg
push
hlt
in
sub
xor
fs
sbb
jmp
hlt
call
shrl
mov
fnsave
mov
arpl
or
add
push
dec
sbb
jb
cmp
std
jg
mov
rol
mov
pop
add
test
aam
push
lea
sahf
icebp
insb
arpl
ret
cmp
bound
mov
pop
dec
nop
stos
and
mov
xor
ret
add
mov
add
pusha
adc
imul
mov
add
or
mov
mov
shrb
nop
mov
mov
data16
loopne
repz
aaa
ljmp
ffreep
push
nop
into
repnz
add
push
in
xlat
mov
or
mov
notb
cmp
jnp
inc
add
jae
push
inc
aam
cmp
xlat
loope
xchg
dec
data16
cmp
xor
xor
lret
xor
dec
add
jg
mov
xchg
scas
movsb
and
js
sub
adc
pop
daa
jmp
mov
jge
out
loop
sbb
push
in
movsb
mov
cltd
scas
in
dec
sub
fidivs
fcomi
out
jecxz
les
sbbb
stc
ljmp
sub
nop
mov
in
loopne
mov
sbb
lcall
aam
sbb
add
cmp
imul
mov
dec
push
add
add
mov
sub
pop
cmp
or
cltd
icebp
nop
inc
std
loop
add
xchg
sbbb
xor
pop
pop
fidivrs
cmpb
test
lds
mov
xor
subb
pop
jmp
shrl
aad
testl
mov
movsl
xchg
inc
sub
subl
sub
dec
jno
out
xchg
mov
int3
negl
out
or
testb
sbb
ret
roll
enter
lds
push
add
mov
sub
sbb
bound
int
aad
lahf
pop
addl
rcl
adc
xchg
add
data16
rclb
inc
push
jbe
and
xor
pop
mov
add
ja
stos
dec
jl
xor
sti
cmpsl
loop
test
out
out
sub
dec
incb
rcll
sti
push
test
add
stos
sarl
jl
test
outsb
jp
add
faddl
push
mov
mov
push
mov
movsl
add
fs
xlat
mov
cs
bound
jno
jne
ljmp
str
sbb
aaa
add
ss
adc
add
push
sbb
and
add
mov
cwtl
lods
xor
add
js
lds
push
mov
add
add
dec
out
pop
pop
mov
inc
divl
jge,pt
push
or
sar
dec
inc
jmp
cmp
pushf
stos
inc
into
add
scas
leave
push
add
lock
repz
and
test
pop
or
ret
xor
fsts
mov
or
add
lods
cmp
setg
test
lret
sub
repnz
mov
rorb
mov
jl
lock
ds
pop
ljmp
inc
add
push
pusha
dec
jg
clc
add
fisubrl
pop
cbtw
scas
push
fadds
pop
jecxz
mov
in
outsl
add
js
xor
aas
add
mov
inc
notb
mov
add
ret
jle
lret
push
xor
push
jmp
outsb
pop
pop
dec
dec
shrl
xor
adc
sbb
jb
add
pop
scas
repz
add
xchg
ret
ret
mov
inc
es
add
shl
xchg
into
push
inc
push
rolb
mov
or
and
inc
mov
xor
dec
push
das
add
shr
bnd
add
lret
push
sbb
sbb
lock
hlt
in
add
mul
mov
xchg
jb
shlb
sub
jbe
sub
lds
fs
sub
mov
add
or
xor
add
pop
std
popf
mov
add
pushf
add
fnstsw
outsb
add
mov
clc
push
shrb
cmp
cmp
roll
rcrb
pop
jb
jp
add
and
pop
push
sub
sbb
or
mov
add
popf
aas
adc
sub
fiadds
mov
rclb
inc
aam
cmpsl
scas
sub
add
push
loopne
mov
ret
enter
pushf
lock
pop
loop
inc
pop
clc
inc
sub
cmpsl
shrd
test
pop
add
loopne
fwait
cwtl
sub
mov
mov
je
out
cld
mov
xchg
jg
or
pop
xchg
add
insb
or
shll
nop
xchg
lods
adc
and
add
imul
test
pushf
sbb
lods
aad
gs
in
mov
inc
fxch
xor
mov
pop
mov
sbb
inc
cmp
iret
mov
mov
jl
cmp
and
mov
pusha
jns
sub
shll
cmp
out
mov
add
dec
rol
pop
lret
mov
int3
mov
mov
xchg
cmpsb
cmp
jnp
shrb
mov
add
xchg
ja
repz
lret
or
add
xchg
and
inc
rolb
aas
insb
in
ret
aaa
jo
inc
add
sti
popf
and
and
hlt
or
orb
inc
adc
add
cmpsb
test
cmp
js
add
mov
add
sti
andb
lret
scas
add
sub
test
call
mov
mov
fcompl
inc
push
pop
data16
sar
into
add
out
daa
cli
add
or
cmp
jb
add
lret
add
loopne
mov
adc
jp
pop
out
add
push
add
ljmp
lods
in
add
dec
bound
les
push
into
insl
xor
aas
ja
pop
mov
sahf
add
mov
mov
pop
add
inc
das
in
ret
movsb
jbe
add
push
dec
sbb
inc
aad
stos
inc
jns
mov
cmc
mov
lret
push
dec
add
and
add
inc
aad
ds
js
add
cmp
or
add
sbb
jmp
lods
in
pop
add
ret
add
pop
xorl
xchg
pop
pop
mov
cmpsl
inc
stos
pusha
mov
sub
ret
mov
jmp
lret
xchg
pop
hlt
inc
xchg
enter
sub
fistps
cmp
es
or
jmp
mov
pmulhw
mov
lods
adc
paddsw
mov
cmpsl
ljmp
xchg
or
push
mov
loopne
jb
add
pop
fsub
mov
stos
arpl
outsb
jge
mov
jae
jno
jmp
xor
test
insl
add
pop
cmpsl
add
cmp
lock
je
push
fcoml
daa
stc
clc
xorb
dec
clc
ja
ret
in
aas
movsl
push
nop
add
call
in
fs
pop
data16
andl
fcmovne
fdivs
cwtl
lods
dec
cmp
add
sub
or
fsubl
bound
ret
js
xchg
inc
loope
fbstp
sarl
dec
aas
add
lahf
and
dec
std
scas
sub
mov
xor
sbb
dec
xor
jecxz
addl
fidivrl
lods
test
mov
add
inc
enter
imulb
pop
sti
adc
bound
xor
mov
mov
iret
ret
sti
pop
dec
daa
mov
adc
in
add
jne
lcall
xchg
pop
add
push
cli
inc
mov
lods
loopne
jbe
repz
add
xchg
loop
repnz
adc
add
push
stc
sub
sbb
sbb
or
add
aaa
lods
or
push
xchg
dec
jp
sub
scas
mov
cmp
jo
lret
adc
ljmp
pop
repnz
push
sbb
movsl
int
mov
add
test
daa
add
push
in
ret
dec
outsb
inc
add
js
cmp
icebp
stos
loope
roll
cmpb
sbb
add
fldcw
fwait
mull
lahf
out
loopne
sarl
test
jl
mov
adc
pmaddwd
push
enter
sbb
and
inc
jae
pop
jo
bound
int3
inc
or
movsb
aam
cmp
loopw
ss
add
push
push
push
or
xor
jbe
or
fidivrl
lea
mov
movsl
pop
push
popa
movl
gs
das
fsubs
mov
or
sub
mov
mov
sbb
mov
add
mov
jne
add
ficompl
pop
in
push
lcall
xor
mov
das
js
cmp
pop
add
pop
cld
pop
test
pop
inc
call
pop
dec
out
fmuls
adc
lret
jmp
add
mov
sbbl
or
inc
pushf
test
cmp
xor
out
shl
pop
inc
dec
mov
mov
andl
add
lcall
enter
add
xchg
add
jae,pn
bound
testb
mov
dec
add
push
aaa
add
stos
add
pop
jg
pusha
push
inc
mov
popa
inc
rcl
ds
push
fcoms
dec
pop
xor
adc
jb
jl
ljmp
repnz
add
mov
popa
je
xchg
daa
add
out
aaa
add
add
sub
pop
mov
xchg
mov
stos
sbb
popa
push
filds
mov
jmp
hlt
adc
cmp
addb
test
nop
mov
mov
fadds
jae
pop
test
jp
inc
push
push
lods
loopne
fs
ja
sbb
push
pop
mov
repnz
mov
in
xchg
inc
push
loope
lods
jmp
pop
inc
mov
cwtl
shll
cmp
incb
jnp
xor
pop
outsb
pop
cwtl
jo
mov
movsl
add
shr
test
add
addr16
push
into
xchg
dec
testl
inc
mov
cli
stc
loope
stos
ss
pxor
fstps
ret
add
out
mov
inc
outsb
and
mov
mov
fbstp
and
xchg
add
int
cmpsb
or
rolb
arpl
orb
cmp
es
dec
nop
lock
out
inc
add
mov
lahf
sahf
cmp
outsl
cmp
mov
cmp
cwtl
adc
pop
loopne
pop
mov
and
pop
outsl
jmp
or
mov
nop
pop
out
and
lea
popf
call
jne
push
sbb
lods
pusha
std
popa
sbb
daa
testl
fisubs
xchg
mov
lock
adc
mov
das
mov
movsl
dec
add
int
stc
sarl
xchg
pop
add
and
jg
ficomps
add
add
push
or
add
ds
add
jo
rorb
jecxz
inc
cmp
pop
jg
add
xor
stos
add
sbbb
shll
jae
push
inc
dec
xchg
scas
nop
in
in
insl
add
fs
pop
pop
aaa
add
movsl
loop
daa
rol
repnz
je
add
mov
adc
and
pushf
adc
mov
popf
lock
jp
add
jge
fcompl
roll
cltd
cmpsl
std
jo
vmwrite
dec
fwait
out
mov
cmc
push
out
xchg
dec
cltd
add
les
sbb
jo
sbbb
ss
cmp
pop
mov
in
dec
lds
jmp
test
add
adc
mov
add
sbb
addb
add
push
add
push
out
push
push
mov
pusha
fdivrl
movsb
call
xchg
jns
scas
cmp
cld
add
inc
inc
add
sbb
add
shl
mov
mov
jge
or
xor
lahf
inc
fidivrl
stos
insb
or
aaa
fs
imul
mov
call
add
sarb
out
pop
into
jbe
mov
in
call
adc
add
loop
mov
incb
stc
incb
add
sub
pop
je
ja
pop
and
lds
push
cmp
jns
xor
mov
into
lahf
push
addl
xchg
xor
add
rcr
add
in
lock
test
bound
inc
out
pop
mov
add
ret
mov
nop
mov
pop
add
inc
xchg
addr16
bnd
addr16
inc
shrb
jnp
add
cwtl
cmp
stc
dec
add
or
insl
sti
xchg
sub
jle
cs
shll
clc
add
leave
jmp
add
sbb
inc
add
jmp
popa
add
es
addr16
and
sbb
nop
shlb
or
mov
add
sub
mov
add
and
pop
dec
add
popf
mov
cmpb
cmp
jne
push
pop
adc
aam
scas
sub
pop
repnz
xor
xchg
cmp
mov
subb
jnp
dec
js
add
push
cmp
cltd
movl
jnp
jmp
add
flds
sub
add
std
jbe
xor
lea
sbb
psubusw
inc
lods
icebp
sbb
add
cmp
iret
push
aad
add
cmp
add
subl
andb
stc
jnp
pop
or
push
jl
mov
iret
rolb
xor
movsb
ljmp
stos
pop
repz
sbb
mov
pmulhuw
mov
pushf
ljmp
adc
mov
add
and
push
adc
or
add
xor
and
xchg
cld
enter
pop
mov
psrlw
and
cmpb
test
dec
dec
ficoms
sub
movl
imul
mov
mov
add
add
pop
pop
movsb
cmp
ja
push
xchg
pop
xlat
insl
jge
push
push
jle
fcmovne
test
sub
scas
add
mov
dec
mov
and
and
sbb
cmp
add
arpl
ds
mov
add
push
inc
in
fnsave
and
je
and
mov
and
aam
pop
outsl
jnp
stc
fst
mov
addb
or
lret
xor
loope
aaa
inc
xorb
imul
repnz
aaa
push
add
sbb
out
sbb
push
shl
sti
jno
add
xchg
enter
movl
fstpt
pop
pop
cmp
mov
add
leave
xchg
arpl
push
or
sub
add
push
jecxz
xor
cmp
add
mov
adc
add
cmc
outsb
leave
add
add
js
push
in
orl
clc
sub
mull
inc
mov
pop
cli
pop
add
insb
cmp
je
std
ret
xchg
mov
xchg
cmp
xorl
cmp
sbb
gs
push
movsl
or
jnp
mov
sbb
lods
jge
add
shrb
xchg
add
xchg
add
pop
jg
add
mov
inc
pop
or
iret
jo
push
fs
cmpsb
jno
mov
sbb
mov
pop
dec
jb
sub
out
mov
xchg
sbb
cs
fdivrl
add
cmp
movsl
jecxz
repz
lds
les
and
pop
jbe
filds
pop
pop
loopne
xor
jno
add
xchg
push
dec
test
add
imul
shlb
pop
clc
pop
pushf
push
into
inc
outsl
mov
cltd
cmpsb
push
adc
roll
add
mov
mov
sbb
lret
push
das
lock
ljmp
ficompl
sbb
cmpb
data16
add
sbb
sub
or
jg
add
or
jb
fisubs
loop
adc
rorl
jo
mov
jp
push
ja
cmpsb
stos
add
push
mov
pop
inc
sarb
mov
dec
add
push
test
jl
cmp
test
xor
push
or
add
sub
test
xor
add
mov
call
decl
jb
test
cmpsb
fadd
sub
mov
adc
not
int3
jae
push
incl
ds
inc
add
cmp
sub
insb
mov
inc
cmpsb
pop
dec
push
add
mov
jne
std
jb
lahf
leave
andb
cmp
pusha
push
clc
adc
mov
mov
and
icebp
and
sbb
into
ret
rol
jbe
xor
and
jo
add
shl
xchg
pop
cmp
ret
add
adc
push
jmp
ss
dec
push
lea
es
outsb
xchg
loopne
pusha
add
inc
repnz
add
les
mov
xchg
mov
psrad
fstps
mov
dec
fwait
add
mov
jmp
jmp
add
outsb
dec
lods
out
add
fmull
sets
aaa
pop
add
test
pusha
mov
push
and
sbb
dec
ret
lea
pop
mov
adc
loop
test
xor
bound
incb
cmpsb
lea
jb
pop
test
ret
and
imul
pop
push
mov
shl
sub
jbe
add
inc
xchg
hlt
and
gs
push
push
push
je
pop
add
movups
jnp
lahf
popf
sahf
add
pop
and
xchg
in
rcll
lods
sahf
mov
xchg
pop
add
dec
pop
inc
fimull
cld
repz
add
lret
cmpsb
int
push
add
test
add
dec
loopne
mov
mov
in
cmpsl
pop
jge
popa
sbb
popf
add
shll
push
ljmp
sbb
or
imul
jnp
fsub
pop
mov
ror
imul
mov
jbe
fisubrl
jl
inc
aas
inc
and
roll
sbb
loop
ja
bound
pusha
inc
xchg
in
add
fstl
scas
in
ss
idivb
or
add
bound
int3
jbe
int3
mov
add
push
lahf
loope
inc
pop
sub
adc
add
jnp
dec
jo
sbb
add
sub
jne
sub
adc
sti
mov
call
xor
int
hlt
lods
ret
mov
sbb
test
stc
sbb
mov
pop
jno
inc
mov
push
cmp
adcb
mov
aas
scas
in
pop
and
rolb
pop
in
or
ds
jg
mov
fwait
push
jne
add
hlt
push
cmc
push
shrb
arpl
xchg
adc
mov
aam
jbe
idivb
cli
test
clc
jbe
lods
cwtl
jge
add
inc
nop
addb
xchg
fxch
or
mov
add
sub
out
sub
xor
addl
les
mov
std
shlb
add
loope
aaa
adc
loopne
adc
add
jg
lret
repz
pop
adc
mov
inc
shll
xchg
dec
jmp
push
add
or
mov
jle
adcb
fildll
add
test
add
mov
inc
in
dec
lcall
mov
add
js
nop
mov
jp
fs
or
cmp
xchg
and
mov
aam
jecxz
and
lcall
cmpl
inc
inc
inc
adc
cmp
pop
xlat
aam
dec
push
push
cmp
and
outsb
inc
fbstp
fmul
xor
std
and
mov
jae
cmpsl
add
mov
mov
pop
insl
push
add
dec
test
adc
xor
mov
adc
add
dec
outsb
xor
aam
xchg
adc
pop
sbb
cmpb
pop
xor
imul
dec
push
jns
jb
in
mov
sbb
mov
pop
cmp
adcb
out
ljmp
adc
fwait
cmp
out
pusha
fidivrl
jbe
push
pop
dec
xchg
pop
adc
and
sub
sbb
addl
sub
inc
popa
jge
xrelease
jb
ret
dec
and
ret
fnstsw
or
and
dec
jl
or
mov
mov
fucomip
add
sub
dec
cmp
pop
loopne
push
inc
test
iret
fwait
push
mov
or
add
mov
and
inc
cs
icebp
sub
and
roll
inc
jno
inc
add
ss
test
andb
mov
adc
add
les
xor
out
and
jo
ss
fldcw
loopne
cld
add
and
fcoms
pop
rcrb
pop
int
mov
inc
test
pop
sti
clc
ret
cli
cltd
inc
bound
adc
inc
or
mov
insl
xorb
push
dec
sbb
mov
nop
jo
std
adc
aaa
out
add
sub
dec
loopne
add
dec
sar
xchg
fiadds
popf
cmp
add
lds
xchg
je
jbe
sbbl
sbb
and
int3
cmp
repz
xchg
wbinvd
popf
mov
and
add
xor
adcb
add
add
sub
fimull
and
xor
xchg
sarb
jp
pop
dec
sub
add
lods
jb
iret
in
fbstp
lret
roll
pop
add
pop
inc
or
sub
lods
lcall
mov
ret
xor
xchg
sti
aaa
sub
imul
movsl
cmpsb
lret
mov
aam
inc
jae
sbb
add
shrb
cmp
nop
add
insb
cli
clc
pushf
cmp
test
je
push
or
ja
pop
fmull
ss
popa
xlat
push
sbb
mov
add
into
or
push
sti
iret
mov
push
xor
add
leave
bound
repz
mov
push
clc
out
flds
inc
repz
xchg
outsb
es
xchg
add
pop
add
xlat
or
cmp
mov
subb
cmp
and
inc
push
mov
pushf
mov
push
outsb
fildl
outsl
int3
stos
lods
out
sahf
std
pop
pop
xlat
jecxz
and
sub
inc
scas
imul
xor
stc
arpl
movsb
test
jle
ljmp
lea
into
scas
add
imul
test
out
push
mov
inc
cld
stos
dec
xchg
sbb
mov
add
addr16
cmp
push
cmpsb
je
lea
and
mov
sub
jp
jecxz
sub
mov
inc
in
jg
or
add
roll
sbb
decb
gs
add
xor
inc
cmp
cmp
loopne
clc
xor
neg
and
int3
push
lahf
es
mov
add
icebp
movsl
xchg
mov
add
orb
cmp
stc
adcl
jl
sbb
mov
jno
add
adc
mov
inc
insl
dec
outsb
int3
adc
cmp
into
movsl
or
xor
ret
push
pop
add
pop
or
rdseed
std
jne
fmull
cmp
lea
cmp
dec
inc
sub
les
jbe
repnz
mov
scas
lahf
dec
mov
add
or
mov
ret
fcmovnb
mov
cmp
aad
mov
pop
jp
cs
pusha
jae
push
sbb
das
xchg
or
test
and
push
sbb
loopne
push
sub
dec
add
pop
or
add
inc
lea
pop
sahf
inc
test
add
js
scas
fiaddl
cld
test
jbe
test
ret
fwait
cmp
jecxz
add
in
cmp
add
test
nop
sub
lret
add
cltd
and
andl
and
scas
push
add
das
or
adc
js
aas
addr16
add
inc
es
add
sub
addl
xchg
sbb
jae
loop
xchg
cmp
cli
stc
cwtl
or
add
ds
xchg
push
push
gs
cmp
xor
outsb
add
dec
add
inc
dec
hlt
add
ficoml
roll
sbb
in
mov
sbb
lret
mov
mov
rolb
pop
or
dec
fbld
mov
add
mov
popf
ret
or
bnd
mov
add
or
or
out
add
sbb
data16
push
push
mov
out
stos
mov
add
subb
out
js
testl
mov
lds
and
add
in
jne
lds
or
sbb
outsl
out
mov
ror
out
cld
scas
add
nop
cwtl
sbb
sub
jmp
test
inc
push
shlb
leave
ja
cs
pop
jbe
lret
mov
fstl
adc
mov
movsb
xor
repnz
xor
add
inc
or
rcrl
out
adc
lds
add
imul
fwait
cmp
ss
pop
outsl
jp
add
es
sar
test
xor
insl
add
lret
add
mov
jne
cmp
push
sub
pop
sbb
jae
inc
shlb
in
xchg
faddl
scas
pop
ret
mov
or
dec
add
push
mov
sti
jmp
insb
add
jle
cvtps2pi
add
push
mov
ret
mov
filds
addr16
out
cmp
add
xor
adc
and
sbb
mov
mov
adc
inc
dec
cmp
bound
mov
add
adc
and
sub
xchg
mov
mov
inc
fcompl
shlb
add
loopne
add
je
push
fs
add
incb
push
pusha
inc
and
add
cld
outsb
imul
out
jmp
add
push
push
popa
out
jne
ror
jnp
push
jb
jo
outsb
ss
dec
inc
push
dec
pusha
dec
xor
cs
fists
ss
scas
lcall
mov
jg
fldenv
mov
sbb
sbb
inc
arpl
enter
bnd
add
cmc
addr16
cld
js
int3
push
imul
jae
out
cld
sbb
data16
cli
addr16
outsl
es
test
fmuls
arpl
fs
adc
pop
inc
push
cltd
test
and
jbe
aam
pop
dec
sbb
mov
xor
cwtl
dec
jne
dec
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
push
add
dec
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmpsb
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
addb
add
add
add
xor
cmp
xor
xor
bound
xor
add
cmp
adc
add
inc
add
insl
add
add
je
jae
add
add
add
add
add
popa
add
add
add
add
jne
imul
add
pusha
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
insl
add
insb
add
and
push
add
data16
add
jb
add
add
outsl
add
add
add
outsb
add
sub
and
dec
add
arpl
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
add
inc
add
and
xor
add
add
outsl
add
and
push
add
outsb
add
add
jae
and
add
add
add
add
popa
add
add
add
add
add
add
popa
add
add
add
add
jbe
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
and
xor
sub
and
xor
add
add
bound
and
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
pop
add
add
add
add
add
add
xor
and
outsb
add
je
imul
and
data16
jb
and
push
add
outsb
add
add
jae
add
add
inc
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
adc
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
pop
add
add
and
add
inc
add
sub
and
add
inc
add
insl
add
add
add
cmp
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
add
add
add
add
add
add
add
add
jb
imul
je
add
jne
imul
add
dec
add
add
add
dec
add
add
outsl
add
add
je
dec
add
insl
add
add
add
add
inc
add
and
xor
add
add
outsl
add
and
push
add
outsb
add
add
jae
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
and
xor
sub
and
xor
add
add
add
add
add
jo
add
imul
inc
add
imul
add
dec
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
fcoml
aam
add
rclb
add
add
in
add
out
add
pusha
adc
add
add
imul
je
add
test
add
push
add
add
add
les
add
add
add
push
add
add
add
lock
add
add
add
jmp
add
push
add
add
add
add
add
mov
push
add
or
add
add
add
fcoml
add
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
gs
xor
fs
insb
add
add
dec
gs
popa
addr16
outsl
js
outsb
imul
add
popa
fs
jo
xor
cs
insb
add
add
add
push
gs
jo
outsb
dec
gs
js
add
push
pop
mov
push
pop
push
lea
ret
add
into
je
pop
push
push
add
dec
add
dec
add
mov
cmp
cld
mov
xor
movsb
or
add
insl
sub
leave
push
or
shl
test
ss
mov
icebp
dec
sbb
rol
jne
stos
jmp
aam
dec
sbb
inc
inc
jmp
sub
leave
enter
pop
shl
mov
cmpl
or
cmp
outsb
ja
and
jne
add
sub
rep
pop
jmp
add
shlb
mov
inc
adc
ret
shr
call
xchg
jb
ret
sub
popa
xor
or
push
addb
mov
push
add
shlb
add
hlt
rorl
adc
add
pop
bound
add
push
and
xor
ror
xchg
push
xor
rcrb
cmpsb
clc
loopne
or
lret
cwtl
call
arpl
fadds
jo
dec
pop
jo
mov
rcrl
or
push
push
push
push
push
call
in
dec
adc
mov
or
add
sbb
lahf
push
or
lea
lods
stos
dec
add
add
jae
inc
test
push
mov
mov
test
repnz
sbb
add
xchg
outsl
add
push
or
push
call
cmpsb
add
mov
mov
inc
push
nop
or
aaa
and
push
call
jb
inc
sbb
mov
shrl
inc
mov
dec
xor
test
je
or
cmp
pusha
outsb
je
mov
lea
mov
mov
sub
xorb
dec
loope
add
lea
push
aas
pop
adc
mov
sbb
enter
lahf
aas
shlb
inc
xchg
or
stos
adc
int
xor
or
sub
aaa
dec
fisubs
or
dec
inc
loopne
add
movb
jmp
lcall
cmp
add
adc
push
and
cmpsb
cmp
or
pop
pop
pop
pop
ret
jnp
or
add
daa
mov
sub
loopne
push
add
lret
push
call
inc
mov
jle
cmp
sub
push
cmp
add
out
mov
jne
inc
xor
stos
pop
orl
add
in
lods
push
xor
scas
leave
jo
test
jge
addr16
sbbb
ret
je
cli
ja
cmp
rsqrtps
repz
sub
mov
clc
lods
jbe
and
aas
repnz
or
pop
inc
in
movw
fldcw
adc
add
add
in
push
test
mov
addl
outsl
or
insb
js
mov
add
dec
xchg
shr
mov
jbe
jae
shll
pop
push
pop
add
adcb
or
nop
add
cld
xchg
call
push
push
ds
and
pop
cmp
je
or
xor
pop
scas
mov
movzwl
test
jge
or
mov
stos
movl
idiv
cmp
jge
repnz
push
inc
imul
call
dec
mov
jne
sbb
cmp
mov
dec
pop
or
rclb
xchg
push
fwait
push
inc
cmp
add
out
or
enter
push
xchg
pop
push
mov
sub
add
jbe
push
push
call
pop
mov
sarl
xor
in
inc
pop
jg
cli
daa
fwait
push
xchg
fmulp
sub
mov
or
dec
loopne
cwtl
push
bound
dec
or
clc
rol
add
movsl
sub
inc
jnp
or
jno
mov
or
cmp
xor
ret
add
pop
mov
pushf
sbbb
push
push
push
and
push
mov
in
xor
adc
js
push
ss
pop
gs
and
add
xor
dec
mov
hlt
push
daa
dec
or
dec
enter
das
push
push
std
popf
push
in
xchg
rolb
adc
je
sub
inc
sub
adc
push
in
jmp
lret
mov
cli
cmp
jne
push
stc
jmp
fidivl
jl
pop
add
fsub
fildll
jne
cs
cmp
xchg
ficoml
in
sub
push
xchg
nop
add
mov
or
cmpb
pop
sbb
and
jae
call
dec
or
into
push
jle
test
and
add
push
push
call
xor
dec
xchg
mov
adc
lds
bound
inc
sbb
or
adc
ror
adc
mov
inc
sbb
shlb
sub
pop
test
mov
jmp
arpl
jmp
or
adc
push
adc
test
add
repnz
push
outsb
daa
mov
fdivrs
jg
test
pushf
and
dec
rcl
je
data16
inc
jecxz
dec
enter
push
dec
mov
push
and
pushf
aad
test
adc
add
xor
icebp
mov
adc
dec
or
inc
jmp
cmp
xchg
sbb
sbb
inc
mov
dec
adc
jl
sbb
iret
shr
pusha
loope
push
lea
jbe
push
out
or
push
orb
je
js
push
pop
sbb
sub
sub
or
in
xor
and
movsb
ja
inc
jo
insb
imul
outsb
and
cmp
cmp
and
jne
fsubrl
pop
push
push
arpl
pushl
xor
outsb
iret
je
bound
sti
imul
sbb
andb
frstor
jmp
dec
push
int
arpl
sub
push
jae
xor
jbe
icebp
in
testb
js
push
ja
pop
js
data16
imul
fsubrs
js
imul
pusha
shrb
outsb
fs
sti
orl
inc
stc
je
ljmp
orps
je
mov
arpl
lcall
stos
mov
cltd
cmp
or
adc
cmp
dec
xor
jno
sbb
movsl
sbb
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
push
add
nop
push
add
xchg
add
add
pop
add
clc
push
add
cld
push
add
add
add
lock
add
hlt
push
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
