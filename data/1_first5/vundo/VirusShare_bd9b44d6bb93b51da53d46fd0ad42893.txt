jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
gs
icebp
int3
cmp
mov
in
push
pop
or
add
or
add
add
pop
add
cltd
add
add
stos
add
push
push
add
mov
add
add
pop
add
add
sub
inc
add
pop
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
adc
pop
add
sub
movsl
add
add
add
add
sub
adc
add
add
add
add
add
add
add
add
add
faddl
enter
sub
pop
add
add
repnz
pop
add
sub
push
add
add
sbb
dec
add
adc
flds
pushf
add
add
sub
adc
js
cltd
add
lret
add
add
add
add
add
add
faddl
add
add
add
add
adc
loop
verw
add
add
stos
add
pop
add
add
xor
test
add
mov
outsl
add
add
add
pop
add
add
add
push
pop
add
add
push
add
inc
add
add
testl
and
or
add
jl
mov
add
mov
add
add
add
je
sub
outsl
add
add
add
add
add
add
add
xor
filds
outsl
add
roll
add
add
pop
add
add
add
sub
popl
or
inc
add
add
dec
add
add
add
add
add
add
add
add
pop
add
adc
call
push
push
add
add
add
pop
add
clc
add
push
add
add
add
add
sub
add
sbb
add
add
adc
pop
add
adc
push
add
scas
add
adc
pop
add
add
add
push
push
add
pop
add
add
add
add
add
add
add
add
aam
sbb
add
add
add
outsb
add
add
addr16
add
pop
add
add
filds
aam
stos
add
adc
add
inc
add
or
sub
push
add
add
dec
add
add
jmp
movsb
add
add
add
add
push
add
add
bound
jl
mov
loop
lods
add
add
add
inc
add
add
or
ljmp
add
add
add
test
in
add
add
add
add
add
pop
js
sub
cmpsb
add
add
add
popf
add
add
add
add
add
testb
add
xchg
push
add
add
pop
ljmp
add
add
sub
adc
cmpsb
add
add
add
pop
push
add
add
ljmp
add
je
pop
add
add
add
add
add
add
add
js
pop
add
pop
push
add
inc
add
add
add
push
add
inc
add
inc
add
add
add
pop
add
xor
push
add
add
add
aam
inc
add
inc
add
add
inc
add
add
push
add
add
inc
add
add
dec
add
add
push
add
add
data16
repnz
jbe
pop
add
dec
add
add
or
xor
rolb
add
outsb
add
popl
add
add
add
add
add
add
add
add
inc
add
add
add
repnz
add
xor
pop
dec
rol
mov
add
push
sub
gs
ljmp
cmpsb
clc
int3
and
mov
xchg
sbb
dec
sbb
jbe
data16
js
xchg
mov
int
gs
hlt
imul
add
inc
pop
daa
xor
lds
inc
in
mov
and
negb
daa
into
pop
addr16
jmp
jle
pop
dec
cmp
insl
xchg
vphaddbd
lcall
lret
ljmp
sub
push
movsl
jp
shll
dec
push
xchg
xchg
mov
ror
bound
imul
and
fisubl
sub
loope
add
and
fcoml
dec
and
clc
sahf
sub
cltd
xor
or
and
mov
sbb
ja
loopne
xor
std
test
das
jae
inc
adc
xlat
out
sub
dec
pop
stos
sub
jge
mov
cmp
cmp
add
daa
movsl
inc
adc
ljmp
test
out
insl
in
sbb
inc
lret
push
mov
sbb
jnp
and
fists
and
insl
scas
test
jns
fwait
xor
or
sti
fucomi
push
out
xor
orb
adc
adcl
xor
add
or
stos
inc
xchg
bound
inc
jl
xchg
push
scas
jne
sti
lods
imul
movsl
xchg
pop
cs
dec
dec
mov
nop
call
mov
sbb
sbb
cli
add
push
aas
test
jb
cs
and
or
imull
push
mov
push
push
arpl
gs
dec
push
addr16
outsl
or
xor
mov
dec
inc
out
and
cld
addb
pop
push
xchg
shll
jae
lcall
push
cmpsb
test
jo
scas
cmp
fldcw
adc
mov
mov
in
sub
jno
int
cs
jp
xchg
sbb
xlat
bound
push
cmp
loop
in
or
push
cmp
insl
stos
xorl
lds
push
pop
dec
mov
repz
xor
pusha
sbb
cmpsb
in
cmp
adc
inc
jae
arpl
xchg
in
push
cmp
add
jle
pop
lods
pop
pop
ret
or
sub
cltd
inc
repz
scas
xchg
adcb
sub
rolb
push
lods
pop
repz
pop
test
mov
sub
mov
jae
add
fcomip
pop
or
or
rcrl
loopne
push
lahf
inc
mov
mov
and
cmp
in
outsl
out
jo
into
adc
adc
jmp
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
sub
cmp
or
sbb
pusha
ds
sti
cmp
push
mov
jae
push
mov
jmpw
cltd
leave
fnstenv
sub
cmp
or
sbb
imul
mov
jbe
je
adc
fnstenv
sub
cmp
or
sbb
imul
lcall
dec
mov
push
mov
pop
mov
or
cs
mov
pushf
xchg
sbb
jb
and
sahf
dec
vshufps
cmpsb
imul
mov
adc
mov
mov
pop
push
mov
cmp
stos
mov
pop
inc
lods
push
cltd
or
mov
mov
fnstenv
cwtl
push
sub
sbb
movsl
add
pop
xor
xor
push
cmp
xchg
xor
push
es
mov
adcb
rcr
test
mov
add
adc
mov
jne
mov
cmp
mov
inc
or
xor
cmpsl
dec
out
cs
cmp
cltd
xrelease
and
xor
sarl
or
sbb
imul
mov
outsl
jmp
cmp
aaa
dec
pop
movsb
dec
sbbl
test
mull
lret
fldcw
fcoml
fcoml
outsl
arpl
pop
pop
scas
dec
mov
or
xor
or
sbb
fidivs
hlt
add
push
mov
cmp
dec
cmpb
jns
dec
cmpsb
pop
mov
inc
mov
jbe
push
stc
push
leave
fnstenv
sub
cmp
or
sbb
imul
mov
jbe
push
stc
push
leave
fnstenv
sub
pop
lds
js
push
and
jae
das
mov
mov
daa
mov
popf
cmpsl
in
xchg
cs
pusha
xchg
xchg
popa
xchg
sub
fs
push
add
mov
mov
jmp
pop
mov
mov
adc
pop
les
scas
sbb
xor
mov
repnz
sbb
xor
negl
icebp
mov
mov
add
stos
cmp
jb
jb
stos
enter
mov
sbb
lcall
mov
add
ljmp
xor
addr16
inc
inc
sahf
push
mov
or
mov
dec
outsb
cmc
fildl
outsb
aam
inc
sub
ds
test
daa
ljmp
pop
repnz
inc
sub
and
outsl
roll
sbb
std
enter
mov
out
mov
sub
xor
test
dec
mov
je
sub
dec
jl
xchg
mov
dec
jae
enter
inc
orb
and
movsl
xor
adc
nop
clc
or
jge
popa
jb
subl
addr16
mov
mov
jecxz
stos
pop
ljmp
call
cli
mov
test
imul
xor
movsb
sub
jmp
inc
repnz
mov
add
pop
pop
add
push
or
faddl
xor
jmp
push
cltd
sub
in
cmp
rolb
mov
xchg
sub
jmp
and
lods
sub
fstl
mov
jno
or
dec
mov
jle
dec
movsb
sahf
mul
dec
iret
test
ret
mov
adc
imulb
pop
mulb
mov
cmp
stos
outsl
dec
imul
cmp
xchg
or
stos
cld
js
cmp
lret
imul
dec
mov
adc
cmp
mov
xchg
inc
fdivrs
out
pop
outsl
insl
inc
ss
jecxz
sub
in
add
pop
pop
mov
add
out
pop
pop
push
push
sahf
adc
cmc
ret
mov
pop
inc
jne
and
mov
xchg
pop
or
xchg
dec
ret
fisubl
mov
sbb
int3
lock
fcmovnbe
rcl
add
mov
jne
pop
adcl
push
jp
daa
xor
jns
cwtl
or
in
cld
fiadds
xor
and
mov
loope
push
mov
sti
xchg
pop
dec
sarb
iret
jno
xorl
fmuls
mov
sbb
bound
aaa
sbb
repnz
push
ficoms
in
cmp
movsl
cmp
mov
pusha
outsl
jge
add
xlat
insl
out
jecxz
push
mov
loopne
or
sub
icebp
cwtl
insb
and
scas
mov
push
push
imul
inc
ljmp
jp
sub
shrl
fcomps
push
lahf
and
push
ret
pop
incb
mov
pop
cmp
push
jle
jne
cmp
ds
sbb
dec
icebp
lahf
jo
scas
dec
mov
cmp
dec
or
in
and
adc
fisubrs
cltd
scas
faddp
lods
mov
cli
out
lods
into
ljmp
int
xchg
in
enter
mov
jns
push
jmp
jo
fcomps
adc
imul
addr16
mov
jnp
bound
cmp
outsb
rorl
jg
sbb
jp
sbb
add
and
adc
js
xorl
add
enter
dec
and
adc
jl
sbb
xchg
xor
filds
push
loopne
push
iret
mov
mov
rolb
mov
mov
pop
bound
or
add
mov
scas
cltd
mov
xor
in
in
or
mov
enter
push
adc
xchg
loope
or
sahf
fisubl
mov
clc
inc
xor
ret
rclb
jecxz
cs
adc
lea
js
add
popf
mov
or
mov
adc
pop
mov
pand
jle
out
cli
lcall
cmp
xchg
add
jo
dec
sub
je
iret
xchg
xchg
jae
out
mov
enter
add
xchg
je
jl
inc
popa
fcoml
inc
jno
loope
and
jecxz
xorb
call
rcrb
pop
pop
enter
rolb
push
test
pop
pop
jne
pushf
lock
and
and
jmp
insb
mov
inc
inc
sbb
repnz
pop
add
xchg
aas
mov
sub
cmp
je
mov
leave
xchg
push
push
and
mov
sbb
and
pop
insb
jne
inc
mov
jne
sbb
mov
shll
subw
arpl
mov
sbb
mov
sbbl
xchg
inc
lea
mov
fbld
rclb
aad
ret
jnp
cmp
fildl
pop
idivl
mov
mov
mov
lret
pop
jl
push
pop
xor
addr16
mov
inc
pop
or
cmp
test
cmp
enter
int
mov
mov
call
popa
js
das
push
push
cltd
pop
pop
outsb
xchg
fisttps
outsb
mov
cli
sbb
fistpl
mov
insl
rorb
dec
aad
mov
mov
and
xor
add
mov
jne
or
arpl
mov
stos
mov
jl
mov
mov
and
in
push
scas
mov
jl
cmc
xchg
movsl
imul
repz
xchg
clc
mov
int
icebp
dec
test
pop
ret
leave
mov
mov
insb
mov
ss
adc
push
and
sub
xchg
mov
and
cmp
insl
xlat
pop
cwtd
cs
or
cmp
xchg
jg
lock
clc
int
lds
mov
jle
insb
les
sbb
jge
imul
lds
sbb
sub
rcrl
sahf
out
or
xlat
push
push
mov
out
mov
pop
movsb
jmp
adc
mov
dec
mov
mov
inc
push
inc
fwait
inc
std
mov
cs
dec
xor
xchg
rorl
pop
shrb
adc
in
and
mov
fisubrl
fisubl
fmuls
xchg
jmp
test
push
or
adc
pop
sbb
in
in
sbb
jmp
in
aam
xchg
test
sbb
mov
repnz
cmp
push
push
pop
xor
sub
inc
xchg
cld
adc
nop
mull
cmpsl
sub
jge
xchg
aaa
push
push
xchg
fwait
or
cmp
dec
test
pop
mov
mov
jb
inc
loopne
fwait
add
movsl
inc
adc
xchg
popf
jle
int
cmp
notl
or
pop
filds
filds
fisubrl
pop
mov
and
rcll
int3
int3
cli
pop
jns
ljmp
mov
sub
mov
dec
sbb
fstps
sti
and
push
imul
cwtl
test
sub
sbb
dec
faddl
outsl
dec
aam
push
sub
mov
js
mov
repnz
jnp
mov
loop
sbb
lods
cld
mov
fisubrl
lds
dec
push
and
cmp
and
outsb
aaa
es
sahf
fcompl
adc
push
cs
mov
sbb
jno
setbe
and
stos
mov
pop
imul
dec
xor
and
shrb
xor
hlt
mov
imul
outsb
loopne
lret
jge
popf
sbb
js
cli
xchg
and
sbb
sbb
xor
jle
mov
or
and
loop
shrl
adc
out
out
mov
cltd
cmp
sbb
fidivl
mov
dec
jle
fildl
nop
push
testl
jnp
sbb
pop
xchg
andb
push
pop
fsubl
cmp
call
xor
mov
inc
outsb
pop
and
in
push
pop
fsubl
insb
dec
jo
lods
jg
push
test
sti
movsb
adc
cs
xchg
into
push
popa
pop
pop
push
ss
stos
push
fistps
push
sub
popa
push
xchg
andb
mov
mov
daa
inc
nop
enter
cmp
scas
mov
data16
push
leave
ja
sub
or
pop
sub
adc
sbb
xchg
pop
push
sub
stos
insl
push
mov
adc
mov
lret
jge
sbb
sbbl
xor
adc
mov
fcompl
mov
and
mov
sbb
and
out
sbb
sub
and
mov
adc
fwait
hlt
insl
fdivl
cld
into
push
cmp
mov
cmp
sbb
adc
inc
js
xchg
dec
out
pop
dec
xchg
movsb
mov
push
stos
sub
out
xchg
sti
xor
dec
ret
jae
fs
ss
dec
sbb
bound
gs
mov
jbe
pop
mov
sbb
inc
lock
adc
arpl
inc
lods
cli
orps
icebp
jb
xor
cmp
faddp
scas
jmp
mov
icebp
cmp
mov
mov
pop
push
mov
icebp
jns
jge
test
push
or
insb
data16
xor
add
rolb
xchg
and
lcall
mov
or
out
mov
mov
inc
ds
adc
cmpb
out
mov
nop
mov
addr16
shll
inc
lds
ret
adc
xchg
cmp
jle
loop
iret
xor
push
ret
lcall
mov
sub
lods
daa
inc
in
cmp
xchg
push
ja
push
xchg
ret
add
in
mov
sub
fists
rorl
pop
push
movb
mov
sub
inc
sti
stos
push
loopne
push
addl
clc
or
stos
daa
in
cmp
fs
sti
clc
or
int
outsb
add
jp
xor
mov
and
outsb
cld
dec
testb
inc
mov
loope
nop
push
jge
data16
jmp
pop
mov
lret
jae
cmp
aad
adc
pushf
pusha
movsb
test
add
mov
sub
cmpsb
sahf
pop
idivb
mov
mov
xchg
lea
pop
pop
cli
xchg
push
out
pop
jl
xor
andb
push
mov
and
or
or
lret
ja
push
or
mov
movsb
fcmove
mov
sub
outsb
add
lret
insl
in
aaa
add
push
call
sbb
xor
pop
daa
shl
dec
mov
cwtl
lea
dec
sbb
add
fists
outsb
aas
xchg
clc
in
rdpmc
inc
mov
add
mov
stc
push
cmp
out
outsl
iret
fwait
outsl
dec
cwtl
imul
mov
mov
push
out
dec
mov
icebp
and
cld
jl
dec
rcll
push
inc
mov
xor
negb
andl
xchg
loop
lods
mov
cltd
ret
sbb
add
imulb
js
sub
test
xchg
push
mov
daa
outsl
inc
sbb
je
push
inc
cmp
xor
jbe
enter
inc
shlb
daa
int
in
fdivr
cmp
and
or
cmp
xor
sar
sub
lock
mov
mov
and
mov
xchg
dec
aad
cmp
outsb
dec
lods
sub
mov
adcb
std
and
data16
je
dec
rorb
jmp
je
lods
mov
mov
aad
repnz
scas
arpl
mov
push
pop
stos
or
push
inc
pop
in
cmp
inc
push
movq
pop
jae
cmpsb
adc
outsl
pushl
dec
loopne
jecxz
xchg
das
les
mov
fists
cwtl
xchg
cs
push
mov
jno
mov
xchg
mov
aas
push
sbbl
arpl
dec
inc
xchg
add
imul
js
icebp
push
mov
stos
sbb
pop
jbe
sbb
outsb
fdivrl
dec
sbb
test
xchg
jbe
xchg
mov
test
in
add
out
dec
adc
and
xor
xchg
out
subl
xchg
adc
cwtl
cs
cmp
push
mov
xor
int
das
push
sahf
inc
and
pop
imul
add
mov
dec
dec
shrb
mov
pop
xor
movsl
mov
and
sub
pop
fbld
adc
pusha
nop
ljmp
stos
fbld
and
inc
xchg
fiadds
cs
in
jo
rcrb
sarl
mov
pusha
jno
jne
adcl
fldt
in
outsb
or
lret
jo
cmp
stos
mov
dec
outsl
jp
mov
dec
cmc
cmp
lds
cmc
ret
sbb
jge
jno
push
fnstsw
or
popf
push
stc
jnp
pop
jmp
pop
shlb
shrl
add
scas
lret
ss
lock
pusha
xor
insl
pushw
pop
adc
repz
lock
ds
jne
jb
fcomps
cltd
out
in
iret
or
and
frstor
cltd
dec
std
insb
xchg
fwait
jge
inc
push
add
hlt
loope
clc
scas
mov
push
frstor
sub
sahf
addr16
leave
mov
pusha
inc
sbb
sub
cmp
in
aam
mov
test
repnz
or
in
push
cmp
sahf
jae
sahf
fs
inc
fimull
lcall
push
lea
mov
or
fidivrl
cltd
push
cmp
push
cmp
or
xchg
mov
popf
cmp
cltd
sbb
sbb
pushf
int3
mov
pop
dec
aad
xchg
jbe
pop
movsl
repz
jmp
xor
inc
addb
lods
mov
push
iret
mov
pop
leave
push
pop
mov
fnstsw
cmp
js
mov
pusha
fcoms
inc
data16
andl
pop
gs
cmc
or
lock
in
pop
mov
inc
xchg
pop
cmp
subl
mov
inc
mov
pusha
iret
mov
lret
or
out
push
adc
dec
aam
mov
and
add
outsb
jecxz
dec
xor
cmp
mov
adc
mov
inc
lahf
inc
mov
jp
dec
scas
add
fucom
or
call
mov
ret
mov
outsb
ss
ret
sub
repnz
les
pop
add
imul
lcall
add
cmp
clc
mov
push
fsubp
pop
fsubrp
xor
pop
inc
cltd
int3
xor
daa
lahf
movsb
ficomps
test
lcall
out
sub
or
prefetchwt1
sub
jl
imul
in
mov
sbb
push
cmp
in
js
and
xchg
imul
cmpsl
mov
test
push
and
cs
test
pop
fisubl
mov
sti
out
inc
xchg
outsb
test
sub
mov
xchg
hlt
in
imul
sbb
jb
aad
push
pop
orl
mov
cli
imul
mov
and
pop
mov
pop
jo
fadds
ja
test
push
test
cld
push
mov
mov
and
xor
dec
push
jle
dec
sbbb
rorl
popa
ret
sub
pop
ljmp
notb
int
xchg
adc
dec
mov
or
adc
daa
aas
or
jmp
movl
es
dec
fsubrl
scas
dec
mov
push
test
xor
jmp
inc
inc
adcb
clc
pop
add
call
bound
cmp
pushf
sbb
in
push
fidivs
outsl
or
loop
fs
push
stos
cmp
mov
mov
int
ds
movlhps
jnp
adc
repz
dec
iret
xor
xchg
gs
popa
sub
aam
ficompl
in
and
ds
orb
aad
andb
cltd
pop
mov
sub
lea
das
xchg
shl
lea
xchg
mov
and
mov
leave
xchg
add
jle
aaa
and
sbb
mov
jge
mov
dec
push
lods
daa
cmp
lods
stc
adc
mov
push
xor
push
shr
jp
xchg
pop
mov
jne
sbb
jp
cmp
dec
sub
lods
fmuls
and
jl
gs
scas
arpl
fsubs
jbe
mov
dec
ljmp
and
adc
out
jecxz,pt
sub
popf
cwtl
jmp
add
int
push
push
mov
lcall
or
addb
inc
imul
pop
jp
sahf
lock
lret
frstor
js
imulb
xchg
std
aad
cmc
dec
pop
inc
pop
stos
sbb
fisubl
subb
mov
jg
out
test
push
inc
leave
jne
scas
fdivr
or
pop
mov
loop
adc
push
and
cmpsl
shl
movhps
or
add
bnd
outsb
int
test
test
mov
loopne
loope
push
add
movsb
jle
or
sbb
xchg
xchg
lods
and
mov
dec
cmpsl
cwtl
mov
xchg
out
js
mov
sub
mov
lahf
add
lock
jbe
out
mov
adc
pop
mov
daa
rorl
in
jnp
jg
ja
int3
push
jp
arpl
cmp
insb
xchg
out
xor
in
dec
mov
movsl
push
sbb
frstor
mov
cmp
clc
mov
xor
or
jmp
mov
push
daa
xchg
xor
scas
xchg
xor
mov
mov
pop
aas
jno
cmp
pop
pop
xor
xchg
sbb
mov
lahf
sti
bound
stc
sub
imul
notl
sbb
lods
jb
inc
notb
mov
rcl
in
pop
fcomps
in
bnd
cmp
jne
xchg
adc
dec
push
pop
ds
sub
xchg
mov
sahf
push
mov
mov
xor
rorl
xor
adc
mov
test
subl
sbb
mov
fisubrs
lock
ss
fldcw
icebp
aas
add
clc
fidivs
add
stc
pop
mov
sub
hlt
out
push
aad
test
push
mov
jae
test
sti
and
mov
cwtl
ret
mov
jno
xchg
sbb
jl
addr16
xchg
movsl
jno
inc
popl
flds
lcall
dec
ja
and
ja
push
leave
inc
cmpsb
imul
push
out
cmpsb
stos
pop
gs
in
addl
lods
or
inc
lods
in
xchg
in
adc
out
lods
mov
add
cmp
xor
loopne
sub
adc
pop
js
add
inc
sub
xor
sti
cltd
mov
add
jbe
cmpsb
nop
cld
add
add
sarl
push
dec
add
mov
cmp
or
or
jg
cmpsb
mov
sbb
jecxz
mov
xchg
xorl
and
mov
sub
cmp
fsubs
imul
and
xchg
mov
cmp
xchg
frstor
fisubrl
int3
xor
dec
mov
roll
gs
push
int3
and
loopne
or
popa
and
aam
das
test
fiaddl
push
sub
inc
iret
clc
xchg
ret
lahf
push
xor
mov
outsb
push
xchg
ss
jg
xchg
pop
pusha
int3
jmp
sub
adc
js
imul
inc
xchg
dec
xchg
push
shll
or
idivl
je
xchg
les
nop
data16
or
std
mov
mov
out
cmpsl
ja
jmp
sub
cmp
push
push
js
or
xor
mov
or
fucom
mov
iret
lods
sbb
sbb
shlb
sub
xchg
xor
jns
mov
lcall
cmpl
lods
icebp
or
ficomps
jmp
lods
mov
xor
fiaddl
xchg
cmp
and
in
mov
hlt
dec
cmp
pushf
jns
into
xchg
cltd
mov
pop
outsl
inc
or
je
inc
inc
in
push
mov
popa
out
cmp
xchg
std
sbb
sbb
mov
push
pop
mov
jne
cmpsl
jmp
clc
hlt
test
lret
pop
sub
sub
jmp
or
lods
adc
in
push
fidivs
or
adc
call
mov
scas
es
xor
jb
or
in
rcll
cmp
push
xchg
cmpsl
mov
jle
cltd
dec
jge
and
das
xor
icebp
or
aaa
bound
push
lock
fcom
jmp
out
inc
inc
aas
fdivr
inc
stc
sbb
enter
dec
aad
sub
pop
or
sub
ret
mov
pop
sarl
mov
push
and
sarb
test
jl
insl
repnz
xchg
leave
xor
ret
add
out
imulb
jns
dec
cmpsb
pop
mov
inc
mov
jbe
push
stc
push
leave
fnstenv
sub
cmp
or
sbb
imul
mov
jbe
push
stc
push
leave
fnstenv
sub
cmp
or
sbb
imul
mov
jb
push
stc
push
enter
sub
cmp
or
sbb
imul
inc
cld
and
add
pop
and
mov
cmpsb
dec
xchg
pop
xchg
testl
ljmp
push
stos
ja
mov
inc
push
jp
dec
xchg
pop
xchg
idivb
out
sbb
lret
push
push
mov
inc
push
jp
dec
xchg
pop
xchg
idivb
out
sbb
ljmp
push
pushl
hlt
xor
lds
jecxz
dec
mov
add
loop
mov
sbb
call
fldt
icebp
mov
cld
movsl
or
out
imul
out
pop
es
xor
mov
out
pop
pop
cmp
das
inc
mov
or
scas
daa
lret
stc
cli
mov
pop
out
fistpl
mov
sbbl
imull
out
ficomps
es
xor
mov
push
data16
xchg
and
pop
stos
imul
movb
lods
xor
cmpsl
push
stc
and
fwait
cmpsb
xchg
out
test
call
pop
sbb
or
xor
addr16
ss
push
sbb
dec
xchg
pop
xchg
idivb
out
sbb
ljmp
push
stos
jbe
data16
add
mov
fbld
xlat
xor
sub
sbb
lret
jbe
add
and
ficompl
lret
ss
mov
mov
push
stos
push
enter
stos
adc
lock
out
adc
idivl
and
les
out
sbb
ljmp
push
stos
jbe
data16
inc
push
jp
dec
xchg
pop
xchg
idivb
out
sbb
ljmp
push
stos
jbe
data16
inc
push
pop
mov
stc
jne
aam
lahf
dec
push
ljmp
jae
pop
stc
jmp
stc
pop
sub
fsub
outsl
hlt
xor
mov
xchg
jo
add
mull
je
push
iret
mov
ret
push
stos
jmp
repz
jle
data16
inc
in
call
jle
stc
mov
int
inc
jmp
dec
sub
push
loope
adc
adc
and
sar
xor
mov
cld
into
sbb
inc
stos
sbb
jne
cmp
dec
enter
sub
fwait
pop
xchg
pop
jne
inc
sbb
movsl
mov
sub
xchg
aad
test
loopne
add
ja
lock
insb
out
sti
pop
adc
jmp
adc
jns
jl
mov
shrd
mov
pop
xlat
fs
push
sbb
ss
pushf
or
cs
mov
lret
cmp
sti
sbb
or
rcll
outsb
cmp
mov
add
sbb
pop
sti
push
out
ds
xchg
sbb
lret
push
cmp
insb
dec
push
pusha
sbb
pop
cmp
out
jne
jp
mov
out
fistl
mov
sbb
in
arpl
xlat
sub
adc
pop
inc
mov
xor
inc
xchg
push
pop
xlat
std
sbb
gs
outsb
push
daa
loopne
lods
mov
dec
sbb
iret
jbe
sub
lahf
jmp
sbb
mov
mov
ja
cld
xchg
cld
push
jecxz
jns
xorl
add
jecxz
and
jns
arpl
or
sti
jmp
iret
popf
imul
push
sbb
int
rcr
cmpsb
pop
jg
icebp
add
pushl
sbb
pop
sbb
dec
scas
mov
sbbb
fidivl
pop
arpl
test
popf
je
mov
sub
dec
mov
cld
or
dec
andl
or
add
mov
sbb
dec
shrl
cmc
xchg
mov
dec
or
in
movups
int3
movsl
adc
test
in
mov
or
mov
movsl
jbe
shll
jae
push
aaa
jo
scas
sub
hlt
push
or
leave
ret
stc
jb
sbb
inc
add
fiadds
ret
or
xchg
or
or
adc
push
rcrb
mov
sti
out
and
push
mov
xchg
jp
dec
movsb
mov
xlat
pop
repz
mov
mov
xchg
lcall
outsl
jns
repz
leave
in
sub
mov
pop
mov
push
lods
imul
and
push
dec
stc
insb
sbb
or
pop
push
mov
lret
daa
or
outsb
outsb
rcl
xor
inc
sbb
cltd
in
add
jb
outsb
inc
rcll
ds
icebp
xor
out
sbb
out
dec
testb
mov
jb
mov
jl
imul
das
add
xor
std
fisubl
fistl
mov
out
xchg
loope
push
sbb
mov
orl
fisubs
ss
push
ret
sahf
adc
inc
stos
movsb
jle
imul
std
es
sub
call
mov
adc
inc
mov
mov
test
xlat
push
mov
ret
sbb
sub
popa
imul
stc
push
mov
sti
jg
je
xor
or
xchg
or
xor
aaa
loopne
out
in
cmpsb
clc
repnz
imul
adc
mov
ss
ja
lock
mov
add
loop
sbb
mov
mulb
mov
movsl
mov
jecxz
sub
iret
rcrb
sub
push
in
sub
lret
mov
lods
leave
hlt
push
pushf
negb
outsl
or
push
fcompl
rcrb
insb
popf
sub
pusha
gs
imul
cmp
negb
push
push
sub
add
push
leave
add
or
pop
adc
mov
js
ljmp
jmp
lret
and
sbb
mov
bswap
sbb
jo
fstpl
outsl
lock
pop
sahf
test
mov
pop
lods
pop
xor
ret
adc
adcb
push
lahf
lock
call
ds
xchg
inc
sahf
bound
and
loope
dec
sahf
and
pop
ljmp
dec
jmp
cmpsl
fwait
cmp
das
int
dec
mov
push
rcl
pop
in
mov
cmp
sbb
adc
out
mov
fs
in
rcll
lret
push
popa
mov
dec
mov
adc
fdivl
dec
adc
fucomi
fsubrs
cmp
gs
and
out
xchg
xor
add
ficoms
stos
xor
sbb
pop
idivb
and
lcall
gs
sub
lock
cld
xchg
bound
fwait
and
jg
insb
pop
adc
push
sbb
rcrl
xlat
fidivrs
fcmovu
mov
int3
dec
stos
insl
and
jo
lahf
ficomps
icebp
les
xchg
mov
fadds
iret
out
stc
push
or
sahf
out
jne
loopne
xchg
jns
iret
push
inc
xchg
push
inc
push
lods
and
add
xor
aaa
mov
mov
aas
popf
in
enter
push
jns
and
xor
mov
xchg
orb
shrl
jb
push
aam
mov
aad
inc
cmp
mov
dec
add
stos
sub
daa
inc
popa
sub
pop
mov
push
sub
add
jmp
mov
push
lods
jp
inc
outsb
icebp
jo
add
push
mov
sbb
inc
push
adc
xchg
xor
xchg
push
clc
test
mov
cli
repnz
xchg
xor
mov
lods
jbe
adc
fs
dec
cld
es
jg
lcall
xorb
pop
sbb
and
jo
cmp
popa
aam
fdiv
fdivrs
outsb
cmp
mov
nop
jp
lcall
in
add
xchg
push
sub
test
sub
iret
insl
fcompl
test
mov
movsb
fs
lods
int
jne
and
and
dec
lahf
sub
mov
xchg
sahf
push
mov
lods
jecxz
cld
adc
jne
pop
cmp
mov
cmc
push
jns
jmp
cld
or
jmp
jmp
jnp
cwtl
mov
dec
dec
adc
sbb
xor
sbb
xor
mov
cmp
adcb
push
sbb
icebp
in
adc
ds
xor
cmp
in
cmp
mov
add
add
div
mov
pop
aas
push
test
stos
or
fs
js
cltd
push
xchg
xor
add
jno
outsb
pusha
xor
insl
or
scas
insl
mov
movsb
push
lds
or
or
ss
pop
jb
sbb
stos
sub
mov
cmp
aad
sbb
cmp
xor
jne
push
andl
cmp
iret
cwtl
add
cs
mov
gs
xchg
aam
outsl
or
rol
jne
cmp
pop
push
imul
inc
push
es
aaa
ror
jp
test
push
imul
xor
cmpsl
mov
or
jo
enter
jle
inc
xorl
mov
stos
xchg
xor
inc
jne
push
mov
pop
movsl
sbb
fs
ror
popa
pop
mov
sbb
fidivrl
push
xor
mov
lret
int3
lds
outsb
push
in
pop
inc
fists
fwait
sbb
repz
mulb
sub
fbstp
sbb
push
lods
push
mov
adc
dec
clc
iret
inc
cld
fwait
jo
mov
sub
ret
adc
daa
adc
or
jecxz
fldt
or
in
adc
icebp
push
stc
jb
sbbb
aaa
pushf
outsl
xlat
fstl
fsubl
mov
pop
pop
loop
or
xchg
ds
sbb
mulb
xorb
dec
adc
mov
dec
xor
push
addl
xor
push
shrb
xchg
outsl
enter
data16
leave
shl
sub
std
clc
push
push
adc
popa
in
xchg
mov
rorl
fisubrl
call
imul
psrad
jno
leave
xchg
sub
dec
adc
sahf
sbb
ss
bound
insl
sbb
mov
mov
adc
insb
call
xchg
xchg
jnp
ret
and
push
sbb
jnp
sbb
sub
jb
out
cmp
fadds
jo
dec
stos
cld
loope
popa
fsin
fdivrs
daa
leave
cld
popf
add
and
xor
sbb
mov
jecxz
pop
shll
mov
repz
xchg
sbb
sbb
and
push
pop
pop
jb
xchg
adc
sahf
and
outsl
fimuls
aas
mov
cmp
cli
addr16
inc
inc
sbb
and
fsts
or
into
mov
test
jecxz
adc
mov
aad
dec
mov
inc
lock
push
outsl
xchg
lret
shl
jne
jp
icebp
mov
add
mul
lock
out
mov
inc
shl
mov
jmp
jmp
dec
mov
shlb
and
out
rcll
adc
shrl
dec
pop
and
pop
dec
ud1
cltd
push
movsb
and
mov
xchg
repnz
or
out
mov
nop
adc
jg
ljmp
or
push
arpl
cmp
ret
lock
mov
ja
out
aam
sbb
fimuls
insb
sub
les
fsubl
enterw
test
imul
push
mov
adc
leave
scas
xchg
mov
sbb
mov
testl
les
movsl
mov
mov
mov
fsubl
sbb
scas
xor
psrld
ret
or
daa
xchg
addr16
cmpsl
cmp
jbe
jno
jecxz
add
arpl
sub
jne
popf
cmc
aas
lcall
or
dec
lds
sbb
add
fadd
pop
lods
dec
lret
xchg
cld
jmp
xchg
mov
adc
arpl
xchg
rorl
add
or
int
sub
mov
add
jbe
loop
in
xchg
ficoms
lcall
in
test
inc
xchg
cld
jno
clc
loopne
mov
je
or
cmp
or
xchg
fnsave
in
pushf
cmpsl
adc
fistl
sbb
mov
xor
je
cmp
test
mov
inc
lods
lds
cmp
fnstcw
adc
push
sub
test
scas
and
and
mov
aaa
adc
lock
fldenv
test
or
in
xchg
xor
and
shll
jbe
fildl
jle
push
daa
in
pop
and
inc
xchg
imul
jecxz
jle
inc
adc
imul
movsb
int3
js
sub
jg
pop
mov
andl
arpl
popa
rclb
mov
mov
mov
and
iret
mov
sub
xor
shll
sub
in
ret
sbb
test
jns
dec
mov
push
addr16
das
sub
pop
jo
add
aad
rol
adc
jmp
roll
popf
add
inc
jae
dec
sbb
add
adc
in
push
fistpll
pop
std
test
jg
dec
pop
and
push
mov
mov
push
sbb
into
xchg
or
loope
in
inc
ficoms
test
icebp
in
pop
stos
mov
adc
popf
int
pop
or
jbe
pop
cli
fmulp
lea
mov
outsb
jne
mov
cmp
leave
mov
inc
jb
gs
push
sbb
inc
mov
in
inc
mov
inc
shll
mov
jo
test
jecxz
mov
scas
and
pop
fsubs
or
test
addl
daa
icebp
push
ljmp
cmp
dec
cmpsb
dec
shrl
jge
lock
dec
pop
rclb
fcoml
adc
jp
out
push
and
scas
pop
stos
xchg
mov
nop
shll
lds
dec
cmpsb
pop
jns
lods
dec
mov
gs
ficomps
leave
ljmp
imul
mov
aam
call
fisubrl
mov
clc
adc
cmp
bound
mov
inc
stc
pop
stos
add
jbe
mov
and
jnp
push
sbb
jmp
sti
sub
lahf
pusha
lcall
dec
lods
push
dec
dec
pop
dec
cmp
std
mov
scas
sbb
out
aas
inc
inc
jl
jb
xchg
cmp
xchg
sbb
aad
js
and
jno
add
push
mov
or
fstl
push
adc
lahf
lods
imulb
jne
lods
ja
mov
lods
je
icebp
adc
mov
and
xchg
pop
icebp
xchg
or
cmp
lret
mov
push
cmp
jmp
punpcklwd
fs
mov
addl
ret
sti
sub
sbb
mov
sbbb
ja
cmp
jns
pop
inc
add
pop
cmp
inc
mov
sarb
push
adc
shlb
adc
fiadds
push
fs
lret
lahf
int3
jp
out
hlt
or
inc
loop
adc
shrb
pusha
daa
or
hlt
add
int
outsb
out
sbb
sub
lcall
jnp
jg
pop
sti
dec
dec
fcoms
mov
push
cmc
jmp
push
mov
or
fdivrs
dec
mov
jle
mov
test
shll
or
testb
push
xchg
or
sub
mov
sahf
pop
or
or
jnp
mov
cltd
inc
jae
cld
mov
stos
pushf
push
inc
rol
cmpl
rsqrtps
decb
out
xchg
int3
aad
scas
and
mov
or
lcall
rcrl
sub
dec
add
pop
out
inc
cmp
pop
fsubs
inc
xor
pop
xlat
ds
jle
insb
cmp
out
lea
sbb
add
pop
add
fninit
adc
in
out
adc
jo
shll
push
mov
mov
dec
icebp
inc
clc
daa
rolb
jo
outsl
gs
roll
mov
idivb
fidivl
push
and
shll
xchg
or
outsb
xor
dec
xchg
mov
mov
fsubs
jo
stos
or
dec
enter
shrd
pop
sub
xchg
out
rolb
test
and
inc
aaa
mov
in
push
adc
fidivrl
test
mov
orl
pop
pusha
clc
mov
lods
or
dec
xorb
cmp
or
test
sbb
fbstp
push
xchg
jl
insb
mov
das
or
jb
dec
lods
pop
cmp
mov
push
jp
cmpsb
adc
stos
mov
dec
test
cli
adc
aaa
xchg
popa
push
or
add
mov
incl
pop
in
orl
xchg
aaa
sub
cmp
std
js
jl
cmp
fistpll
rclb
pop
mov
scas
out
sub
fiadds
daa
mov
push
sub
cld
ljmp
cmp
aam
test
xchg
das
mov
scas
fcmovnu
pop
outsl
or
fwait
nop
scas
and
nop
popa
mov
rcrb
and
xchg
dec
pop
fistpl
je
fsubp
test
xchg
bts
jmp
mov
xchg
or
cs
mov
scas
in
lret
adc
lea
jge
add
inc
sub
inc
mov
and
imul
ss
sbb
jne
jno
jo
pop
daa
dec
xchg
and
jne
pop
sbb
or
popf
inc
cwtl
pop
test
xchg
mov
scas
shlb
loopne
push
xchg
adc
jecxz
scas
sub
mov
mov
stos
in
sti
inc
aad
jae
das
stos
add
loopne
xchg
cmc
jmp
xor
jb
movsl
dec
movsb
and
and
lods
mov
shrb
and
fldt
or
sbbb
out
mov
aad
icebp
add
push
arpl
mov
mov
enter
dec
jp
out
push
inc
or
bound
cmp
push
aad
push
icebp
adcb
sub
mov
inc
sbb
out
jae
adc
clc
xchg
mov
xchg
and
inc
imull
sbb
sub
mov
dec
movsb
addr16
test
pop
push
es
pop
mov
decb
pop
cli
sub
fidivrl
pop
adc
push
sbbb
push
imul
mov
jbe
mov
out
xchg
push
fcoms
mov
sbb
fnstcw
push
lods
mov
ljmp
sbb
ljmp
mov
fwait
sahf
movsl
mull
bound
sub
ffreep
mov
psrlq
and
pusha
push
outsl
sub
test
test
scas
ss
sar
ss
dec
mov
loope
test
mov
mov
jecxz,pt
sar
inc
sub
gs
or
inc
jecxz
xchg
or
mov
lock
or
into
mov
dec
cs
xchg
mov
sahf
push
sub
es
push
pop
mov
sbb
push
inc
sub
inc
imul
adc
pushf
out
and
inc
xchg
sbb
gs
inc
lods
cmc
bound
push
sbb
dec
pop
ja
cltd
and
scas
rolb
pop
sti
in
adc
lea
lods
mov
rcrl
mov
insb
mov
jg
outsl
test
fmul
loope
xchg
lock
das
aam
pop
mov
rclb
pop
cmc
ficomps
fnstsw
jl
fdivl
lcall
jno
scas
sub
sub
pushf
push
jb
jbe
mov
cmp
jg
adc
adc
mov
or
mov
adc
in
adc
pusha
popf
cmp
neg
js
or
adc
mov
inc
addr16
inc
stc
pusha
xor
push
mov
jl
enter
jmp
scas
icebp
fwait
ds
loope,pn
pop
stos
repnz
mov
je
xchg
and
fcoms
test
push
pop
test
mov
ret
dec
shrb
mov
jecxz
and
aam
cmpsl
inc
lcall
add
scas
fisubs
add
cmp
or
inc
cmp
push
inc
lret
psubb
scas
out
sti
push
adc
std
add
fs
or
clc
test
xorl
jge
dec
sbb
jg
out
cmp
stc
imul
xchg
pop
sbb
sahf
and
mov
pop
gs
lock
dec
pusha
sbb
mov
mov
xor
cmp
scas
xor
adc
incb
xor
mov
call
xchg
pop
std
mov
or
std
jmp
icebp
mov
mov
jge
xchg
jbe
sbb
ljmp
daa
inc
testb
cs
fiadds
dec
add
iret
dec
adc
dec
pushf
sub
push
add
arpl
aad
or
iret
stos
pop
lods
data16
sub
or
mov
mov
and
dec
pop
sbb
sub
icebp
stos
fcomps
adcl
mov
into
fildll
std
adc
xchg
pop
xchg
lds
mov
xchg
push
std
insl
inc
leave
jno
push
loopne
jo
xor
lahf
adc
sbb
mov
add
mov
mov
scas
jb
mov
adc
mov
ljmp
sub
mov
mov
lods
std
jb
mov
push
into
xor
sbb
cld
imul
jmp
movsb
inc
sbb
sbb
sub
mov
cmpsl
mov
inc
mov
aas
jbe
fs
ret
pop
mov
xchg
mov
mov
cmc
hlt
aas
aad
jnp
inc
cmpsb
rolb
icebp
jnp
jl
add
push
mov
push
dec
mov
sti
pop
arpl
movsl
push
lods
fstps
or
test
push
adc
ja
pop
xchg
imul
mov
mov
jbe
or
jo
xchg
add
sahf
adc
mov
xchg
cli
leave
repz
and
jne
push
xor
repnz
mov
sbb
arpl
pop
cmp
mov
mov
add
xlat
fiadds
mov
sub
in
lods
jl
cs
repz
mov
pop
cmp
aaa
xchg
insb
add
push
mov
pop
sbb
pushf
lea
ss
pop
xor
test
andb
or
jbe
sbb
aad
std
xchg
push
mov
mov
and
sub
sti
sbb
fimull
cmpsb
dec
xchg
pop
xchg
idivb
out
sbb
ljmp
push
stos
jbe
data16
inc
push
jp
dec
xchg
pop
xchg
idivb
out
sbb
ljmp
push
stos
jbe
data16
inc
push
cli
cmpsb
lret
xchg
lcall
push
fiaddl
stos
jbe
data16
inc
push
jp
dec
xchg
pop
xchg
idivb
out
sbb
ljmp
jno
dec
cltd
cli
test
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
sub
push
popa
sub
pop
outsl
jno
js
mov
cmc
int
loope
jecxz
xchg
mov
test
jne
inc
jno
popa
and
xor
shr
aad
movsl
repnz
mov
mov
ret
imul
cmp
xor
loope
shr
out
repnz
mov
add
jo
add
testb
pop
mov
jp
mov
imul
popf
jne
lret
mov
or
cmp
loope,pt
adc
aam
mov
in
xor
cs
lods
inc
inc
add
sub
add
dec
sub
cmp
and
or
push
and
lret
imul
ds
sub
sub
mov
nop
cmp
loopne
mov
fidivl
mov
inc
popa
pop
and
mov
loope
stc
mov
aad
loopne
loopne
jne
mov
sub
loopne
or
lods
sbb
in
icebp
and
mov
rorb
push
push
jne
inc
popa
cmp
adc
add
leave
fstps
call
stos
xchg
test
add
jo
pusha
dec
inc
inc
outsl
push
pop
je
test
mov
int3
cld
fcmovnbe
icebp
mov
int3
gs
inc
add
sahf
fs
bound
push
dec
mov
out
lock
les
adc
xor
jge
add
shl
rol
aad
movsl
xchg
mov
test
jne
inc
jno
popa
and
xor
rol
aad
movsl
xchg
mov
test
mov
in
push
or
sub
mov
cmp
sub
inc
push
insl
fisubrl
mov
aam
sti
pop
and
fs
adc
int3
movsb
addr16
inc
shll
mov
rcll
xor
dec
pop
nop
add
or
hlt
out
xor
ds
mov
filds
cmp
jp
and
push
add
inc
imul
xchg
lahf
shlb
adc
xor
outsl
mov
dec
mov
or
movsb
push
jp
cmc
add
mov
mulb
xchg
jl
test
pop
push
adc
dec
add
out
daa
std
je
xor
stc
pop
mov
sub
lods
popa
inc
mov
mov
outsl
lahf
lods
xchg
in
std
cmc
cmp
les
test
sbb
rcrl
sbb
push
in
orb
cmp
mov
xchg
test
pop
xchg
sbb
and
in
add
mov
cli
pusha
xchg
mov
notl
cmc
or
inc
outsl
inc
pop
icebp
sbbb
test
push
inc
cltd
fdivs
push
mov
in
nop
pop
push
sub
pop
jae
add
push
les
rclb
cmp
xchg
jge
gs
pop
cltd
fdiv
insb
sarb
adc
cmpsl
mov
lea
push
hlt
xlat
cmpsl
xchg
pop
xchg
mov
push
fadds
cmp
repnz
pushf
ret
sbb
and
fmull
lea
loope
and
imul
fucomi
mov
or
cmp
cmp
bound
or
dec
insl
fdivl
dec
bound
clc
fnsave
and
cwtl
xor
jbe
jb
sbb
inc
movsl
push
popa
test
fildl
ret
xchg
call
jp
test
ja
dec
dec
cld
dec
xchg
xor
push
shl
mov
add
or
cmp
pop
pop
jns
mov
xchg
gs
pop
pop
mov
addr16
push
mov
dec
hlt
sbb
sbb
mov
mov
insl
xor
aas
lds
push
jo
mov
andl
je
xor
lods
out
call
jcxz
xlat
push
xchg
incl
add
mov
xchg
pminsw
dec
mov
jbe
jo
pushf
sub
dec
and
rcrl
shrl
pop
lock
pusha
lods
cmp
mov
and
inc
pop
in
movsl
jle
lret
lods
movsl
mov
outsb
sbb
insb
push
add
mov
ljmp
call
jns
jb
insl
cmc
adcb
inc
pusha
inc
mov
mov
test
sarl
add
test
xor
dec
cmp
jmp
mov
dec
dec
add
mov
cmp
jmp
pop
das
test
shrb
add
aas
int
inc
fnstcw
add
icebp
dec
stc
add
mov
movl
or
or
jle
xor
pop
push
imul
testb
es
and
mov
xor
pushf
aad
sub
hlt
dec
mov
leave
xor
push
icebp
jae
pop
pop
sub
cli
rdmsr
add
sub
jg
pop
outsb
jle
dec
into
lock
fwait
xchg
js
mov
sbb
ret
cmp
push
pop
inc
push
mov
push
cmp
loope
pop
dec
aad
dec
ret
imul
xorb
ret
mov
clc
lea
xor
aad
test
dec
or
imul
xchg
testl
subl
mov
inc
xor
orb
jo
imul
jae
jo
or
xchg
rorb
push
stc
push
scas
or
in
insb
into
xchg
jecxz
push
addr16
jbe
rcr
mov
cwtl
dec
push
ret
cmc
loope
pop
cmp
jae
push
mov
dec
dec
jnp
cmp
dec
mov
adc
adc
sbb
dec
mov
jae
xor
cmp
push
xor
testb
or
test
addr16
push
subl
aad
dec
xchg
je
sbb
aad
lea
add
xor
popa
fsub
and
and
arpl
push
dec
jns
and
push
jge
jp
pop
addr16
cmp
xchg
sbb
es
sbb
fsubs
inc
mov
mov
add
sbb
push
test
mov
mov
mov
ret
imul
loope
mov
push
bound
sbb
xchg
cmpb
icebp
xchg
ficomps
pushf
mov
dec
xor
repnz
mov
sbb
ja
lahf
loop
fwait
xor
je
cmp
xor
pop
and
aam
lcall
push
clc
lret
mov
mov
into
adc
sub
jg
into
pop
adc
ret
jmp
je
dec
filds
sub
jbe
mov
or
cmp
and
and
xor
pop
lret
sbb
adc
orl
sub
mov
add
dec
jle
add
sub
in
mov
lcall
in
dec
sub
mov
cmp
mov
enter
les
fwait
sub
or
adcb
mov
push
sbb
cltd
or
cmc
sbb
mov
inc
mov
push
mov
outsb
out
stos
fs
mov
fistps
frstor
and
add
rcll
push
sub
leave
add
movsl
fidivrl
rolb
inc
imul
push
aam
jmp
in
push
outsl
lods
push
lcall
cmp
and
push
jnp
cmc
xor
sbb
mov
dec
mov
pop
sub
lods
inc
cli
loop
inc
mull
int3
ficompl
pop
push
clc
mov
sbb
insb
lock
lcall
add
pop
cmc
dec
sub
xorb
lods
xchg
psraw
push
inc
cmpsl
movsb
clc
pop
dec
les
std
push
jb
ror
test
pushf
stc
call
add
xchg
bound
repz
xchg
mov
loop
push
enter
lods
rorb
add
clc
inc
xor
adc
aam
insl
cmpsb
es
mov
sub
inc
stc
cmp
addl
insl
add
andl
sbb
roll
js
push
gs
es
in
repnz
mov
mov
dec
mov
cmp
mov
sub
out
pusha
fcomi
cld
jp
cld
outsb
jbe
sbb
out
lea
aam
shl
imul
or
push
jecxz
cwtl
sahf
out
xor
cmp
rclb
lret
sarl
sbb
inc
pop
push
in
mov
jae
imul
xchg
mov
bound
xchg
add
mov
repnz
cmp
xor
mov
xorl
mov
add
lret
push
in
std
lret
push
stos
data16
jge
pop
lahf
ss
pop
or
or
push
mov
sbb
shrb
mov
mov
arpl
adc
lret
icebp
movsb
ss
popl
arpl
or
adc
mov
dec
int3
fnsave
mov
orb
dec
cltd
es
std
inc
pop
xor
push
sbb
imul
mov
ja
sub
flds
pop
inc
jge
jle
mov
mov
dec
ret
into
js
push
sub
in
dec
inc
and
sbb
push
dec
shl
movsb
out
stc
lds
in
movsb
xchg
pop
sti
jmp
jae
push
add
mov
xlat
sbb
stc
add
dec
dec
xlat
adc
push
mov
xor
movsb
jb
clc
mov
dec
pop
fcoml
cmpsb
fiadds
jae
dec
xchg
jl
lea
pushf
push
and
addl
push
insb
ljmp
cmp
jg
dec
aam
jnp
cltd
push
int3
xor
es
pop
rcl
aam
ds
jmp
mov
js
outsl
sbb
cmp
mov
pop
fwait
in
sbbl
mov
in
jecxz
movsb
int3
mov
insl
test
inc
push
stos
test
push
mov
cmpsl
inc
mov
popa
int3
dec
inc
cmc
sub
dec
aad
int3
inc
or
insl
rol
pop
je
or
gs
popf
cmc
inc
inc
xchg
add
andl
cmpsl
das
adc
dec
in
sub
sbb
xor
test
mov
push
fsubrs
dec
das
ss
mov
push
scas
jmp
sub
xchg
lcall
or
jl
jne
aaa
cmpsl
xor
pushf
mov
and
sbb
sbb
mov
xchg
sub
xchg
mov
rorl
cmp
adc
dec
aaa
sbb
lcall
rol
sub
push
rorl
js
fcoml
pop
outsb
inc
movsb
aad
inc
inc
mov
ja
push
mov
dec
enter
rolb
inc
adc
imul
jno
mov
std
into
pop
push
clc
pop
hlt
cmp
imul
dec
stos
xchg
cmp
inc
jp
outsb
adc
and
jno
and
jle
addl
data16
push
faddp
cmp
or
mov
jae
mov
and
icebp
inc
fistpl
sub
lret
jmp
pusha
es
rcpps
sbb
aaa
jns
ret
int
popa
cwtl
add
sarl
jp
push
fisttpl
or
rcll
loopne
mov
jl
sbb
mov
insb
and
fwait
nop
jge
fdivrs
mov
subl
movsb
mov
cmpsl
dec
xchg
adc
flds
mov
popf
xchg
dec
std
mov
and
mov
ds
jnp
imul
ret
mov
sahf
mov
xchg
pop
mov
sbb
test
xor
roll
pop
jnp
jae
jbe
cmpsb
push
es
ficompl
imul
xor
add
pop
push
or
and
scas
sub
push
or
fistpl
lods
mov
sti
mov
and
fwait
icebp
call
jecxz
mov
push
jo
xor
push
insl
scas
jmp
sbb
imul
adcl
inc
inc
dec
fldl
mov
and
jb
sti
bound
int
loope
inc
mov
dec
mov
add
cmp
cmp
dec
fidivrs
dec
sbb
ret
adc
stos
jnp
cs
mov
ret
cmp
popf
cmpsl
iret
test
jg
testb
rorl
clc
xchg
pusha
pop
push
cmp
inc
mov
mov
sub
xchg
shr
cs
lret
sahf
inc
fidivl
into
jno
mov
xor
lds
and
mov
jne
arpl
pop
xor
jns
sbb
mov
mov
cmc
inc
pop
adc
push
sub
mov
ljmp
mov
and
daa
stc
loope
and
push
adc
movsb
adc
jno
mov
mov
jp
repz
mov
sub
inc
xchg
nop
pop
cmp
in
inc
inc
lea
sbb
inc
in
stos
shl
push
sub
fidivrs
enter
dec
das
popf
test
fucomip
shr
xor
sbb
xchg
dec
lret
lods
scas
andb
xor
mov
push
xchg
push
cwtl
popl
cmpsl
fildll
push
cmp
out
loop
adc
xchg
jno
mov
sub
and
xor
js
mov
xchg
outsb
ret
aas
mov
push
stos
mov
int
jl
push
ficoml
ja
sahf
or
cmp
jne
pop
leave
push
cmp
ja
adc
mov
inc
jne
adcl
mov
xlat
shrb
mov
aaa
aas
push
in
imul
fsubrl
push
sti
push
jae
xchg
call
fs
hlt
xchg
xlat
mov
lret
das
dec
xor
loopne
or
push
pop
inc
shll
add
frstor
push
add
mov
xor
xchg
push
leave
popf
pop
lods
sub
dec
movsb
gs
cmpsb
pusha
mov
sbb
sbb
rcrl
dec
sub
jg
xor
cmp
daa
push
cmc
fiaddl
movsb
pop
inc
popf
adc
pop
roll
adc
imulb
sbb
sub
and
insb
cmp
xor
pop
mov
push
jb
dec
or
popa
cltd
dec
lahf
out
pop
gs
mul
cmp
enter
stos
insl
ret
or
sub
or
jns
dec
scas
insl
jp
test
daa
push
out
push
out
jmp
stos
add
mov
cmp
inc
cwtl
in
pop
rorl
das
les
mov
lret
push
jle
imul
and
lcall
inc
enter
or
inc
mov
test
pop
fs
lcall
stos
les
call
movsb
loope
pop
sbb
mov
add
inc
xchg
jo
push
inc
cmpsb
sbb
sbb
pop
xchg
lds
dec
jnp
jp
test
push
daa
cmc
mov
cltd
mov
jg
xchg
nop
arpl
sub
lret
leave
xchg
movsb
xchg
mov
cmp
fidivs
xchg
sbbl
les
cmp
les
notl
in
or
push
jb
pop
ror
ja
sub
add
push
movsl
pushf
stc
or
pusha
push
or
movsb
aaa
jnp
icebp
cmp
fists
push
adc
jb
fninit
mov
cs
xchg
sti
mov
push
cld
lret
or
scas
out
xor
ss
jmp
andl
clc
adcl
decl
outsl
jne
pop
mov
mov
xchg
cmp
je
in
sub
aam
inc
inc
mov
and
or
cwtl
negb
xor
push
push
movsl
or
inc
add
sbb
aas
out
int
fsubrs
inc
std
cwtl
sbb
push
cmp
lods
xchg
das
mov
xchg
add
cmp
popf
cmp
xchg
mov
xor
sub
stc
mov
or
jae
push
sub
rcrb
std
fdivs
outsl
gs
jne
popf
jnp
xchg
leave
push
fsts
lret
pop
subl
in
cmpsb
popf
idivb
add
xchg
ljmp
sahf
enter
push
cmp
adcb
push
stos
cmp
jb
lock
adc
pop
push
out
int
scas
adc
sbb
das
push
xchg
imul
jns
sbb
test
cli
arpl
pop
insb
sbb
jmp
jp
sbb
mov
dec
in
jg
mov
imul
push
jge
mov
clc
cmp
xchg
push
adc
aaa
loopne
test
pop
icebp
adc
sbb
cmp
xchg
pop
dec
mov
into
test
pusha
pushl
fs
push
or
jl
mov
mov
xorb
mov
or
lret
adc
lds
les
xor
insb
and
inc
mov
sub
popa
imul
jno
int
test
cltd
mov
or
out
movsb
std
pop
mov
outsb
adc
sbb
sbb
sarb
sub
cld
adc
outsb
dec
cmc
test
jne
mov
std
pusha
leave
push
push
mov
sub
in
and
pop
sahf
into
cwtl
jmp
xor
lahf
jl
xor
lods
jns
jmp
fidivs
adc
push
out
pop
cmp
popa
push
out
pop
mov
mov
push
mov
ja
lds
jle
lods
ss
roll
lods
mov
mov
les
fwait
xchg
xchg
mov
adc
aaa
loopne
sub
xchg
mov
pusha
rolb
sbb
mov
add
pusha
pop
scas
jne
fiadds
sub
and
pop
mov
lock
fwait
arpl
adc
orb
nop
call
movsb
and
sbb
lds
addl
ss
mov
out
or
int3
stc
dec
test
sbb
xor
pop
in
out
mov
pop
jecxz
mov
aam
enter
inc
xlat
xor
jb
out
inc
pop
repnz
ret
push
push
push
outsl
mov
cs
cmpsb
mov
dec
and
clc
roll
fdivrl
es
mov
lret
adc
in
cmpsb
lds
inc
lea
in
ficoml
into
adc
add
dec
sarb
cli
lret
cltd
mov
fstl
clc
stos
popf
dec
aaa
xlat
add
add
dec
clc
pop
push
negl
clc
mov
or
push
push
mov
je
jno
jbe
or
jno
gs
ljmp
xchg
pop
cmpl
leave
scas
loop
clc
arpl
push
adcb
pushf
mov
dec
lret
sub
sti
pop
imul
sub
inc
push
pushf
mov
les
int
mov
repnz
negl
cmpsb
pop
and
jl
bound
subb
sbb
ljmp
cli
sbb
aam
jg
and
adc
xorb
or
pushf
mov
mov
push
scas
inc
adc
cmp
fistps
and
xlat
mov
cwtl
xor
xchg
mov
or
jo
jo
lods
and
out
xor
mov
pop
std
inc
arpl
push
mov
fmul
jb
roll
movsl
test
lds
sub
out
push
std
xchg
inc
inc
adc
xchg
xchg
rorl
push
stos
xor
jl
jge
loopne
mov
xor
mov
bound
sub
in
in
mov
daa
mov
sbb
in
pop
add
mov
inc
xlat
loope
adc
adc
xchg
mov
or
rorl
je
lret
mov
dec
inc
stos
pop
js
push
decb
ds
fimull
jp
cmpsb
pusha
push
mov
jmp
mov
jl
pop
inc
outsl
int3
push
loope
sbb
sub
pushf
mov
add
mov
add
cwtl
ficompl
dec
lret
out
and
sbb
and
jp
test
xchg
rcl
mov
fs
xchg
ficomps
in
fcoml
inc
fwait
jecxz
xlat
cld
mov
jp
jecxz
ds
aas
out
dec
lea
push
loopne
xchg
push
dec
je
mov
mov
push
jmp
jb
cs
dec
dec
fbld
ret
adc
out
outsb
addb
daa
xchg
cmpsl
shl
ljmp
shll
data16
mov
dec
xchg
repz
mov
fbstp
call
adc
leave
and
jnp
dec
leave
xor
mov
jae
push
test
cmpsb
jo
push
std
adcb
sub
insl
sub
leave
in
pop
sub
je
in
cmc
cmp
enter
mov
dec
xlat
cmp
jmp
aam
add
mov
mov
xlat
xor
test
pop
daa
cmp
aas
push
mov
or
sbb
fisttps
daa
cmp
cmp
xor
iret
scas
jl
rcrl
push
jae
lods
and
lret
jl
ljmp
bswap
int
movsl
push
mov
cmp
adc
jbe
sarl
push
loop
imul
cmpsl
add
mov
xchg
dec
das
xlat
leave
sbb
mov
pop
outsl
dec
sarl
adc
pushf
cmpsl
push
dec
aam
in
sbb
das
iret
aam
faddl
sub
push
push
daa
int
pop
fistl
ljmp
xor
es
mov
loopne
out
shlb
pop
ficompl
xor
sti
in
std
mov
scas
not
dec
xor
mov
xor
jne
push
jno
jne
push
adc
xor
or
sbbl
jo
dec
push
cwtl
xor
xor
dec
sbb
dec
sbb
adc
xor
mov
aas
adc
mov
or
or
adc
in
lcall
roll
insb
mov
cmpsl
jnp
pop
movsb
push
leave
xor
mov
nop
pop
repnz
jae
push
cld
jmp
inc
push
inc
lods
into
les
ret
fidivrs
jo
pop
cmp
das
add
fcmove
movsb
int3
and
pop
or
test
das
and
addb
sbb
and
sbb
xchg
icebp
add
pop
shlb
data16
mov
pushf
mov
mov
lock
data16
leave
lret
add
and
pop
inc
fists
inc
into
sahf
incb
sub
ss
clc
add
sub
jecxz
aas
lcall
aad
movsl
lret
stc
jno
ljmp
mov
insl
pop
bound
nop
sarl
mov
cmp
roll
lahf
adc
sahf
dec
popa
and
xor
rol
aad
movsl
xchg
mov
test
jne
inc
jno
popa
and
xor
rol
aad
movsl
xchg
mov
test
jbe
push
jno
popa
and
xor
add
shl
ror
shl
movsl
xchg
lods
addl
jno
popa
and
xor
imul
xchg
rcrb
cmp
pop
cmpsb
inc
mov
xchg
cltd
mov
ss
push
pop
push
pcmpgtd
insl
push
pop
push
dec
cmpsb
mov
xchg
out
mulb
mov
push
pop
sbb
data16
inc
pop
push
dec
mov
aaa
mov
fidivs
xlat
aas
loopne
dec
pop
inc
outsb
jl
sub
push
sbb
add
mov
loopne
mov
mulb
adc
mov
fisttpll
outsb
xorl
sbb
daa
xor
mov
int3
notb
inc
lahf
inc
lea
ja
pop
ss
lods
inc
pop
test
stos
jne
shlb
dec
jns
inc
jno
leave
stos
ds
fwait
andb
outsl
inc
lahf
push
pop
cmpsl
jg
mov
sbb
testl
xor
jmp
nop
int
push
sbb
stos
cmp
int3
jbe
sbb
out
stos
mov
es
es
lock
pop
fsub
setle
outsb
mov
jg
adc
mov
sbb
fidivs
fnstcw
mov
pop
and
nop
inc
pop
push
lret
outsl
mov
xchg
test
jmp
out
movb
jmp
jle
outsb
xchg
pop
pop
push
and
in
shrl
xchg
mov
stos
es
push
imul
adc
sbb
cmp
leave
cli
xlat
out
jmp
nop
neg
mov
mov
push
jp
push
xor
xor
jmp
in
scas
fwait
imul
iret
es
ss
push
pop
push
pcmpgtd
outsl
inc
pop
push
dec
cmpsb
mov
xchg
out
imul
iret
es
ss
push
pop
push
pcmpgtd
outsl
inc
pop
push
dec
cmpsb
mov
in
mov
cld
in
or
cmpsb
jle
ret
ja
or
push
sub
add
and
data16
pop
lcall
xchg
scas
imul
inc
dec
cmpsb
mov
push
xor
xchg
stc
mov
ljmp
scas
inc
mov
cmc
sahf
aaa
stc
outsb
aas
pop
mov
cmc
es
sbb
pop
mov
shrb
pop
mov
xchg
push
cmp
mov
arpl
push
mov
loope
scas
xchg
ret
sahf
bnd
insl
popa
push
inc
dec
ds
add
jge
push
int
add
ret
add
clc
fcoml
inc
xchg
dec
pushf
and
push
cmp
cwtl
push
insb
xchg
les
into
aad
movsl
mov
and
les
cmp
fwait
sub
dec
enter
jb
mov
xor
repz
xlat
adc
mov
cmp
lods
jl
out
dec
push
pop
add
xor
fcompl
xchg
xchg
sbb
cmp
add
add
sbb
xchg
mov
xor
inc
pop
pop
call
xlat
jbe
cmp
push
push
or
cltd
push
xchg
fsts
jl
jbe
js
out
cld
jge
pop
cs
mov
mov
jg
cmpsl
scas
outsb
mov
cli
lret
nop
mov
testl
vpcmov
pop
test
and
lret
popf
inc
nop
sub
add
mov
and
mov
test
xchg
lods
pop
mov
pop
jl
cmp
scas
sbb
arpl
les
adc
out
lock
test
xchg
cld
mov
repnz
mov
das
or
push
adc
push
adc
xchg
out
mov
sarl
jno
xor
in
xor
cmp
mov
jbe
rcr
adc
test
in
int3
lea
lods
sbb
cmp
push
loop
repnz
push
addr16
and
loopne
mov
decb
ljmp
aad
mov
icebp
pop
mov
push
in
popa
pop
dec
mov
xlat
push
mov
scas
cmp
outsb
je
xlat
cmp
into
mov
dec
sti
aad
loope
loope
and
repz
fwait
cmpsb
sbb
negl
sbb
sub
inc
sbb
pop
shlb
lods
push
out
or
push
jb
test
xor
cmp
or
xchg
mov
jae
popf
xor
mov
jle
push
xchg
out
fstps
jnp
mov
cmpsb
push
mov
xchg
mov
and
xchg
je
mov
std
push
jl
adc
test
inc
and
lret
inc
int3
js
lcall
out
cwtl
cmp
xchg
test
mov
sub
cwtl
loopne
es
data16
inc
dec
add
sbb
dec
out
lods
xor
ret
pop
pop
dec
xchg
or
mov
push
jl
pop
inc
outsl
out
xchg
mov
jo
ss
aaa
pop
ss
pop
lods
cmp
test
jae
ss
push
dec
mov
daa
scas
and
push
dec
mov
jno
mov
xor
movzbl
gs
sub
sub
mov
pop
lods
push
ds
sub
and
jo
mov
jecxz
and
sub
or
pop
xchg
popf
mov
mov
jns
push
mov
out
imul
or
sub
repnz
cmp
xorb
pusha
jo
dec
jl
ljmp
adc
frstor
fidivrs
xchg
lods
dec
pop
repnz
inc
addb
fimull
mov
mov
xor
and
mov
in
in
jae
std
hlt
cmp
in
ljmp
xchg
stc
dec
cli
inc
aam
movsl
test
adc
in
addr16
mov
sub
xor
and
sub
adc
pop
into
xorb
fwait
stos
imul
sbb
pop
lret
sbb
push
cli
dec
push
push
sub
push
jmp
adc
xor
pop
cmp
mov
data16
pop
movsb
push
shlb
imulb
leave
jo
out
xchg
adc
ficoml
inc
sbb
loop
gs
fmul
je
jns
aas
or
sub
insl
fstpl
cmpsb
shr
mov
inc
add
std
popf
push
xor
sbb
pop
insb
xchg
test
dec
or
sub
inc
cwtl
xchg
test
mov
test
fnstsw
xor
or
fucomip
shrl
mov
push
jle
inc
push
pop
pop
cmpsl
js
mov
pop
xchg
daa
fucomi
xor
sbbl
mov
and
mov
aam
cmp
flds
or
jb
jne
movsb
jecxz
inc
mov
data16
jl
pop
inc
aam
pop
das
bound
pop
cmp
jne
test
push
outsb
inc
leave
inc
out
adc
out
jns
and
fldl2t
stos
mov
and
and
in
xor
pop
in
shl
mov
or
pusha
divb
mov
cs
call
and
les
insb
cmp
xor
jns
push
inc
pop
jbe
mov
jg
sbb
mov
insl
mov
sub
or
loopne
sub
dec
push
clc
iret
push
add
and
imul
push
adc
jne
mov
ret
lods
cmp
xchg
lock
push
lods
in
ret
mov
sahf
cltd
test
push
fs
adc
je
lods
test
inc
cmp
adc
push
jno
insl
jge
adc
cmp
inc
mov
cmc
mov
std
xchg
stos
jg
jle
mov
pop
sbb
xor
das
scas
inc
lcall
adc
loopne
push
lret
and
xor
aaa
leave
shrl
push
inc
push
ret
scas
push
mov
repnz
icebp
xchg
inc
outsb
or
push
xor
jbe
fidivl
mov
leave
push
push
jg
adc
pop
sbbl
pop
push
shlb
mov
in
imul
jmp
out
add
addr16
sub
fidivs
xchg
lods
mov
mov
les
testb
icebp
faddp
dec
push
sub
loop
add
sbb
test
lcall
addr16
jecxz
sbb
jmp
adc
xor
int3
xchg
lods
stc
fstpl
dec
stos
ret
or
repnz
xchg
xlat
dec
arpl
adc
and
push
out
or
push
mov
fstl
cld
push
pop
rolb
mov
mull
mov
mov
dec
test
cmp
fcmovnu
push
clc
fwait
pop
ss
dec
lcall
data16
bound
mov
or
jecxz
scas
sub
jp
jne
xor
cmc
adc
push
aad
rcr
and
mov
mov
fsts
jae
ret
and
lock
in
aas
cmp
sbb
scas
add
xor
psrad
das
add
add
stos
mov
fsubrl
addr16
out
ljmp
popf
cmc
pop
es
cmp
mov
mov
sbb
mov
dec
ret
xor
pop
sbb
leave
push
adc
push
movsl
dec
negl
or
sahf
mull
and
icebp
xorl
mov
mov
mov
pop
xchg
push
out
fisttpll
pop
jmp
shll
in
jne
xchg
push
sub
dec
scas
xchg
subb
pop
jns
ret
xchg
mov
xchg
sbb
test
je
push
push
test
sbb
push
std
sbb
repz
std
into
xchg
jo
fdivr
push
sub
outsl
mov
push
sub
cmp
enter
test
lods
jl
mov
ret
cmpsl
insb
popf
pop
xchg
adcb
xorb
repnz
bound
mov
jb
push
insl
imull
jno
movsb
cmp
cmp
dec
movsb
inc
out
popf
shlb
out
adc
jae
lcall
push
jg
sbb
xchg
pop
jl
jmp
nop
dec
dec
jne
pop
outsl
imul
popa
push
fwait
xchg
test
mov
daa
jmp
les
xchg
dec
test
fiaddl
cmpxchg
add
pop
add
pop
sbb
xchg
sahf
push
stos
gs
in
mov
sar
cmpsb
jno
retw
ret
jno
xor
cmpsl
testb
popf
fldt
ret
test
xor
stos
fildll
sbb
outsb
jg
pop
cli
dec
div
mov
xchg
adc
iret
mov
int3
xchg
mov
jmp
lret
add
push
push
cmp
gs
pop
sub
mov
add
dec
ss
lods
pop
addr16
fadds
mov
fiaddl
insb
push
fisttpll
sarb
aam
pop
jg
shrb
int3
pop
pusha
jb
xor
mov
or
or
dec
dec
dec
movsl
lds
scas
imul
inc
inc
pop
mov
outsl
int
cs
test
or
stc
mov
dec
sbb
jg
cmp
mov
clc
push
push
cmp
push
jle
adc
mov
std
inc
xchg
inc
push
push
ds
sbb
adc
scas
pop
dec
adc
add
out
sbb
mov
out
push
pushf
pop
jo
pop
insl
jae
insb
add
push
sub
jne
cmp
pushl
mov
pop
add
sub
lea
inc
addb
mov
sub
das
addb
cmp
sub
enter
mov
mov
push
int
mov
mov
adc
inc
mov
stos
sub
in
mov
ljmp
dec
outsl
ja
add
scas
jecxz
and
js
sub
sub
frstor
add
repz
movsb
imul
sub
lcall
dec
addr16
clc
scas
xor
idivl
pop
mov
outsl
push
jbe
in
adc
rorl
cmp
mov
sub
add
or
ret
cmpl
imul
pushf
mov
dec
sub
andb
nop
stc
jbe
test
shlb
and
inc
mov
push
jg
mov
mov
fld
pop
fcmovnb
mov
or
xor
stc
aaa
cmp
and
imul
addr16
mov
xlat
push
push
xchg
pushf
ljmp
dec
and
ljmp
shl
insl
rol
cmp
mov
sbb
or
ret
mov
out
imul
fstpl
push
xor
inc
leave
and
or
mov
mov
mov
ja
or
mov
push
movsb
pushf
jbe
andb
enter
sub
mov
mov
inc
ret
add
loope
out
mov
push
mov
jmp
mov
and
inc
lcall
inc
inc
mov
roll
mov
repnz
pop
dec
pop
sub
daa
pop
shrl
loopne
fbstp
inc
cmp
or
sti
stos
notl
dec
repz
cmp
repz
data16
pop
ljmp
sbb
cmp
inc
add
sahf
vmovddup
inc
cmp
ljmp
sub
cltd
xchg
mov
mov
xchg
push
mov
lret
add
repnz
push
std
and
bound
sub
loope
inc
adc
out
decl
pop
out
cmp
lock
xchg
add
cli
mov
push
scas
or
jae
mov
mov
fwait
unpcklps
xor
mov
cmc
cmp
dec
int
or
leave
xor
mov
fucomp
cmp
cmpsl
cli
into
incl
or
jb
fnstsw
sbb
mov
xchg
aaa
popa
mov
insb
loope
ja
sti
sub
loope
mov
dec
pop
push
int
dec
fldt
scas
mov
pop
mov
sti
xor
scas
lods
mov
fisubs
sbb
sbb
adc
pop
push
pop
cwtl
mov
xchg
and
jo
rcll
ds
insb
repz
ret
sti
jmp
fs
xchg
cwtl
push
cwtl
repnz
adc
dec
push
fwait
ret
test
loope
shlb
cmp
in
jo
push
mov
mov
xor
push
ljmp
imul
popa
push
xor
xor
mov
out
lret
addr16
add
push
and
sbb
jg
mov
jmp
xchg
mov
scas
pop
mov
pop
xchg
xchg
scas
out
jbe
sub
pop
dec
adc
mov
les
mov
push
sub
adc
pop
jecxz
into
nop
pop
movsl
pop
ficompl
sub
or
mov
mov
fsub
dec
push
movl
testb
mov
movsb
dec
or
pop
inc
mov
mov
js
xor
jb
dec
loope
loope
mov
out
outsb
mov
adc
jbe
add
fistl
test
jmp
stos
aam
xchg
out
lret
dec
jmp
xbegin
icebp
lret
sbb
pop
and
mov
fs
fs
cmpsl
cli
xor
adc
pop
cmp
test
mov
sub
pop
pop
dec
mov
pop
mov
int3
xchg
push
bound
mov
mov
xor
mov
sub
pop
add
push
int3
adc
inc
popa
test
push
outsb
sarl
lret
add
outsl
jecxz
jle
repnz
ja
push
xchg
adc
cld
mov
cmpl
xchg
mov
xchg
add
shrb
inc
push
sbb
cmp
out
xor
cltd
pop
jp
mov
mov
cmp
or
fwait
add
sub
jmp
mov
fs
cmp
and
mov
call
jo,pn
scas
lds
test
mov
les
ss
clc
fs
out
cwtl
aad
sar
ret
jge
push
in
and
scas
and
aam
ss
cltd
lods
stos
push
mov
push
mov
fcomp
and
xor
nop
fimull
sti
adc
lcall
jl
scas
jne
out
call
and
mov
imul
fwait
sub
pop
dec
sahf
out
xchg
in
sbb
outsl
out
sbb
xchg
push
cs
test
icebp
call
mov
add
rcr
inc
and
xlat
shrl
inc
jmp
fmuls
mov
mov
call
fcmovu
push
unpckhps
aas
into
mov
adc
ror
sub
out
mov
cmp
pop
cli
pop
sti
leave
cmpsb
scas
mov
mov
aad
fs
fwait
mov
xchg
jne
stos
xor
insb
repnz
xchg
dec
in
push
mov
repz
mov
xchg
in
loop
sub
add
fs
stos
jae
mov
mov
fldl
outsb
cmc
sbb
inc
fimull
scas
inc
jnp
scas
mov
pop
ret
jbe
je
bound
stc
movsb
push
cmp
pop
inc
push
mov
test
enter
insb
int
sub
or
push
add
xchg
push
jnp
aad
push
ds
or
dec
cmpsl
push
push
add
mov
sbb
jl
fprem1
pop
xchg
scas
out
movsl
les
push
mov
jb
aas
jp
call
or
in
xor
mov
out
xor
scas
inc
pop
inc
dec
fidivs
sbb
cld
bnd
rcr
test
jmp
loop
mov
daa
mov
mov
pop
dec
filds
jnp
cli
adc
pop
dec
sbb
std
rorl
test
cmc
cmpsb
jmpw
mov
addl
cmp
jb
inc
mov
cmpsb
add
jae
iret
mov
bound
mov
push
lret
add
xchg
mov
sbb
dec
xor
int3
pop
imul
cs
add
pop
ret
fsubl
ja
mov
hlt
adc
xor
jecxz
xchg
lret
mov
sbb
fidivrl
push
push
mov
mov
stos
lahf
jns
sbb
mov
hlt
fiadds
mov
scas
mov
aam
popf
add
ljmp
cmp
mov
cmp
stos
push
jnp
sti
les
or
mov
xchg
outsl
sbb
lcall
sbb
jbe
mov
xchg
mov
imul
mov
dec
jp
inc
jb
jno
push
repnz
aad
push
mov
in
shr
sbb
xchg
sbb
sbb
scas
xorl
lret
inc
xor
daa
mov
fcomip
outsb
xchg
or
pop
outsb
mov
xchg
mov
or
sub
pop
arpl
data16
jmp
jl
pop
mov
or
loope
jg
jle
push
sbb
push
hlt
aas
out
popa
xchg
push
xor
jnp
push
or
mov
cmpsl
shrb
mov
cli
inc
jge
push
cltd
mov
inc
xchg
pop
fmul
mov
sbb
shl
cmp
lds
jp
or
les
mov
decb
mov
les
fwait
adc
xchg
std
pop
sub
ja
lret
mov
shrb
roll
imul
js
into
rorl
cltd
insb
into
push
cltd
push
aam
push
neg
jmp
lcall
cli
fs
fidivl
dec
fists
cmp
ror
lock
repnz
mov
dec
stos
js
sbbl
es
ret
stc
sti
popf
les
push
mov
cmpsl
xchg
cmp
add
fdivrl
lds
jnp
test
and
mov
push
sahf
jp
lods
jno
adc
arpl
adc
sti
and
xor
and
sbb
scas
or
fsts
lods
int
mov
iret
aad
clc
mov
es
lret
xchg
sti
and
push
mov
jno
shrl
scas
mov
out
arpl
jno
mov
pop
in
cltd
mov
add
xchg
fldt
insl
enter
lea
sub
push
repz
inc
stos
xor
jg
dec
adc
jmp
std
sbb
sbb
insl
fiadds
mov
cli
xchg
ljmp
pop
clc
push
sbb
out
cmp
das
xor
jbe
lea
das
sub
das
xchg
xor
repz
xchg
ret
mov
aad
jnp
les
sub
mov
in
jmp
lea
dec
fldcw
lds
lods
in
orl
jle
shll
inc
sbb
xchg
lods
cwtl
data16
cmpsb
repnz
sti
pushf
xlat
cmpsl
cld
xchg
push
int
and
shr
pop
push
lock
cmp
lcall
mov
or
xchg
out
pop
xchg
adc
rclb
loope
xor
icebp
push
jp
cmpsb
cli
sub
outsl
mov
xchg
insl
and
test
icebp
adc
lea
jbe
test
mov
popa
aas
or
sbb
mov
mov
fwait
adc
aaa
push
addl
pop
or
int3
mov
scas
enter
hlt
xchg
int
fwait
out
je
test
das
add
lock
lret
xlat
in
dec
inc
push
xchg
fildll
mov
dec
mov
mov
imul
mov
pop
sbb
xchg
xchg
aad
shrl
out
cmp
sub
aam
testb
mov
mov
xchg
pop
xchg
jg
incl
fcoml
std
cld
aam
push
push
mov
lods
add
xor
out
xorl
imul
mov
mov
pop
and
inc
sub
pop
pop
mov
jae
test
jecxz
je
mov
addr16
cld
loop
ret
cmpsb
and
lret
iret
sar
dec
mov
xor
outsb
loope
xchg
xchg
out
xor
dec
mov
jo
pop
pop
adc
add
ja
jmp
arpl
aam
sbb
js
pop
ja
sbb
sbb
xor
xchg
cli
xchg
jecxz
push
adc
imul
xchg
addb
pop
mov
or
js
sahf
aam
add
jecxz
pushf
push
xchg
mov
ret
xchg
or
inc
in
push
push
leave
imul
repz
clc
add
sbb
sti
gs
cmp
out
je
mov
fimuls
lcall
bound
std
cmp
popa
mov
daa
int3
leave
jge
lea
orl
scas
xlat
pop
rdpmc
lret
out
add
xor
add
adc
rcll
insb
pop
push
pop
or
xor
lock
push
jno
scas
and
adc
xchg
aam
dec
shl
and
push
pop
mov
lret
lods
pop
fwait
dec
rclb
in
aad
jle
dec
iret
roll
xor
shll
out
imul
iret
es
ss
push
pop
push
pcmpgtd
outsl
inc
pop
push
dec
cmpsb
mov
xchg
out
imul
iret
es
ss
push
pop
push
pcmpgtd
outsl
inc
pop
push
dec
cmpsb
mov
xchg
out
testb
iret
es
das
push
pop
push
pcmpgtd
outsl
inc
jg
dec
cmpsb
mov
xchg
mov
push
out
inc
pop
push
iret
fld
leave
test
nop
mov
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
cmp
dec
push
pop
jle
sbb
jle
pusha
sbb
call
mov
test
clc
fimuls
js,pn
dec
push
pop
jle
outsb
cmp
dec
sbb
enter
test
mov
xchg
js
dec
pop
pusha
sub
cmp
dec
sbb
lea
cli
pushf
fmull
push
addr16
out
outsb
stc
test
gs
stc
hlt
popf
lods
ror
mov
add
push
shlb
cmp
shr
roll
adc
ficompl
add
xor
mov
sarb
imul
mov
cltd
call
int
sbb
test
mov
ja
cltd
loop
inc
jns
dec
loop
subl
dec
dec
mov
ss
add
out
call
shl
test
sahf
xchg
movsl
subb
aad
lds
lods
sub
jmp
pusha
out
std
es
enter
sbbb
lock
mov
pop
stos
jmp
jae
mov
cwtl
gs
push
pop
lcall
sbb
xor
call
test
mov
push
add
jbe
adc
jns
insl
dec
push
sti
cmpsb
jmp
mov
add
or
xor
movhps
push
stos
sbb
fldcw
divb
std
notb
inc
or
cmp
sub
inc
outsb
cmp
dec
sbb
enter
test
mov
ds
push
pop
jle
outsb
cmp
dec
sbb
enter
test
mov
ds
into
mov
xchg
fstp
and
mov
push
rorl
xchg
adc
adc
aaa
mov
pusha
insb
add
cmp
test
repz
pop
fbstp
dec
cmp
imul
jno
aam
scas
out
cs
outsb
in
mov
pop
xor
mov
shll
les
hlt
popa
mov
mov
out
call
pop
jecxz
lret
push
pop
jle
testb
mov
mov
aam
mov
fbstp
in
cld
outsb
push
pop
lods
xchg
test
sub
out
out
jle
dec
inc
jb
fwait
inc
xchg
imul
sbb
dec
and
js
and
mov
sbb
das
inc
das
jp
aas
pop
mov
pop
sub
int3
loope
stos
xchg
push
adc
scas
jge
add
adc
fucomp
push
insb
cmp
ljmp
cld
jb
dec
mov
xchg
mov
add
add
mov
rolb
push
rclb
dec
dec
fdivl
out
mov
and
clc
inc
add
cmovp
out
fwait
idivl
clc
or
xchg
xor
sbb
mov
xor
mov
repnz
dec
xchg
daa
jge
mov
xchg
cwtl
xchg
lds
dec
xorb
add
mov
adcl
je
xchg
mov
and
ss
cmpsl
add
int3
daa
xchg
inc
rolb
sbb
mov
lock
out
in
mov
sub
popa
daa
inc
insl
inc
cmpsb
popa
mov
inc
inc
pop
or
mov
lock
mov
flds
dec
xor
sub
xchg
lret
inc
out
pop
cli
mov
sub
mov
jns
lods
in
push
fcoml
leave
pushf
mov
mov
ljmp
adc
jb
lods
jae
pop
and
decb
fnsave
sbb
xor
or
inc
int3
mov
push
xor
aam
shlb
out
rolb
add
add
fmull
mov
cltd
xchg
and
pusha
loope
cli
adc
mov
gs
sub
cwtl
and
and
jle
mov
push
jb
insl
lahf
in
add
cmp
mov
pushf
jl
mov
ret
inc
pop
add
xchg
jecxz
notb
xchg
stos
aam
ret
pop
jg
out
adc
fimuls
inc
cld
bound
dec
rol
jbe
xchg
ret
clc
outsl
insb
les
pop
bound
dec
popa
sub
cmpsl
mov
and
xorb
aas
xchg
ret
pop
jecxz
or
je
jle
int3
xor
scas
push
lods
add
xor
xchg
arpl
mov
sbb
fwait
int
sub
cmpsl
mov
push
lcall
inc
js
out
jecxz
mov
das
jb
not
jae
movsb
lds
xchg
cmp
aaa
pop
cmpsl
cs
leave
push
mov
lea
in
sub
test
test
push
mov
sub
lods
dec
test
adc
and
mov
orb
fwait
pop
fs
sbb
cmp
stc
orb
incb
cmpsl
mov
out
rcll
mov
loope
out
loop
mov
dec
add
std
add
cs
ss
movsb
mov
push
enter
cli
icebp
mov
repz
cmp
mov
jb
hlt
popf
aas
andb
mov
jo
lcall
mov
in
dec
pop
adc
in
inc
outsl
scas
xor
sub
shrb
and
rcrb
jae
mov
in
cmp
enter
push
lods
jg
loopne
push
insl
loop
ljmp
sbb
sbb
out
inc
lods
sbb
lcall
loop
mov
shlb
clc
pop
xchg
mov
jns
call
faddl
daa
fwait
push
mov
adc
ret
push
jmp
inc
cmpsl
out
ja
dec
repz
dec
lea
fcompl
adc
xor
faddl
aad
je
xchg
std
xchg
sbb
push
pop
repz
xchg
xchg
xorl
push
push
stos
icebp
outsl
enter
fsubl
in
out
mov
push
lahf
and
dec
repnz
xchg
addr16
and
loop
jp
xlat
sub
or
xchg
iret
adc
jnp
cmp
pop
adcl
pushf
adc
loope
push
adc
cmpsb
pop
jle
aam
addr16
mov
scas
xor
mov
and
cmp
and
xchg
stos
mov
push
jle
inc
aas
shll
jp
int
jno
imul
jnp
cld
nop
push
and
xor
je
pop
jmp
jae
inc
in
inc
sub
movsl
or
popf
dec
jb
dec
aad
pop
add
rcrl
sub
movsb
fdivrs
out
xor
xchg
std
push
nop
mov
pop
adc
test
aas
pop
jnp
add
imul
mov
scas
leave
clc
je
lds
movsb
data16
mov
sti
ret
cli
sbb
inc
arpl
in
adc
inc
jno
mov
xchg
mov
and
push
inc
mov
das
dec
loope
or
jmp
jne
je
or
add
int
inc
inc
daa
leave
fisubrs
xor
fidivl
fisubs
push
push
mov
jg
insb
cmp
mov
or
push
popf
in
ror
and
mov
adc
cmp
jp
insb
enter
pop
ret
pop
gs
test
dec
jg
insl
test
adc
adc
in
mov
pushf
pop
scas
iret
xchg
jo
insb
loop
in
push
iret
sbb
mov
es
pop
or
jbe
fwait
shll
and
mov
push
cmp
sub
and
cli
xchg
sub
mov
es
add
pop
cltd
mov
fidivrl
sbb
mov
or
in
push
mov
push
sbb
sub
stos
jg
fnstcw
inc
xchg
jae
pcmpeqw
jp
add
leave
push
in
sbb
loop
mov
fdiv
iret
fdivl
push
ret
mov
gs
js
lret
fsubrs
pop
fimull
pop
in
hlt
aaa
cmp
push
cmp
sti
push
sahf
in
mov
mov
ret
or
or
adc
ret
movsl
add
push
jg
pop
mov
xchg
push
lret
das
cmp
jle
pop
and
test
or
fs
sbb
mov
jae
adc
aad
imul
push
dec
mov
xchg
push
jecxz
ficomps
xor
test
jecxz
sahf
js
in
cmp
and
mov
repz
cvtdq2ps
fcomi
je
es
or
or
adc
mov
jbe
jno
inc
xchg
xor
fwait
icebp
add
xchg
sub
pusha
push
jae
icebp
rol
arpl
fcmovnu
loop
rolb
out
cmovge
add
xor
or
push
pushf
cltd
aaa
xor
and
and
jecxz
lock
push
jbe
iret
xor
aas
lds
pop
stc
push
jo
daa
pop
jge
fldl
adc
cmc
lods
or
cmp
rclb
rclb
insl
lcall
xchg
lea
mov
lret
jecxz
dec
lds
sub
mov
lret
mov
fdivr
mov
fidivrl
sub
and
out
mov
or
cltd
and
push
lret
sub
inc
pushl
neg
lcall
std
sbb
scas
mov
call
sbbb
call
out
jae
xor
shll
cmc
mov
jl
imul
int3
rorl
sbb
or
clc
flds
mov
dec
clc
sub
push
clc
xchg
addb
test
fimull
dec
test
dec
dec
or
pusha
xorb
out
fcomp
sbb
repz
repz
int3
ret
xchg
daa
data16
push
pop
hlt
in
xchg
loopne
xlat
jge
jo
ja
testl
js
call
inc
frstor
push
popa
xor
mov
enter
scas
pushf
cli
cmp
pop
push
int
stc
add
out
mov
push
xchg
sbb
stos
out
popf
fwait
punpckhdq
jno
std
aad
xchg
popf
pop
rcr
dec
lahf
add
pop
push
xor
insl
lret
and
sub
xchg
jmp
insl
xchg
push
add
stos
mov
jmp
out
fstp
mov
inc
lods
idivl
cmpsb
pop
dec
and
insl
int
pop
cli
pop
push
dec
pop
mov
mov
pop
push
enter
loope
pop
xchg
mulb
cmpb
mov
ja
and
push
fwait
add
shrb
add
prefetcht2
push
mov
mov
outsb
test
out
inc
out
jo
ss
cltd
dec
inc
inc
orb
mov
sbb
enter
fwait
int
xchg
cmp
mov
or
aam
mov
ja
pushf
into
shll
ret
out
push
cs
hlt
insb
outsb
mov
lock
add
inc
pusha
and
popl
stc
aam
cmp
xor
subb
mov
ds
lock
mov
inc
lods
lock
jno
pop
es
fisttpll
les
andl
sti
xor
es
adcb
mov
aad
pop
pop
je
inc
and
pop
and
mov
adc
fdivrl
push
rcrl
mov
sahf
pop
and
sbb
mov
sub
mov
std
mov
push
sarl
dec
repnz
xchg
mov
rcr
dec
cmp
pop
jge
fs
push
cmp
dec
lea
or
and
inc
mov
sub
jnp
pop
jp
lret
gs
fstpt
pop
out
iret
bound
jg
ret
add
mov
xor
lret
xor
xor
daa
imul
add
lret
scas
sarb
nop
xor
add
addr16
mov
xchg
enter
mov
push
sub
gs
scas
mov
mov
iret
push
pop
sti
jmp
ret
repz
mov
ja
pop
xor
pusha
pop
mov
rclb
daa
nop
out
pop
test
cmp
inc
push
xor
insl
mov
xchg
daa
sbb
mov
addl
test
lahf
xor
loopne
cmpsb
fistpl
adc
inc
out
lds
fwait
cltd
iret
add
and
mov
les
repnz
daa
in
shr
adc
dec
cli
mov
xor
fwait
lea
clc
bound
pop
loopne
sbb
add
fs
popf
add
pop
cs
stos
xchg
bound
inc
push
shlb
dec
fidivs
int
shll
xchg
sub
or
lret
and
cli
popa
shll
mov
movsb
stos
xchg
das
jne
imul
inc
push
xchg
add
ja
in
mov
sbb
clc
sbb
or
adcb
in
sbb
inc
pop
lcall
insb
mov
leave
loopne
xchg
orl
ja
scas
std
mov
adc
out
push
mov
xor
in
clc
push
jo
sbb
push
fsubrs
jno
aam
insl
out
mov
cmp
pop
xor
xor
mov
cmpsb
scas
mov
dec
ret
repz
jge
inc
cwtl
imul
out
cmp
jnp
addr16
jae
mov
test
std
pop
or
aad
jnp
and
mov
sub
int3
sbb
lea
pop
add
or
jae
std
xor
cld
int
cmc
pop
lock
js
push
cmp
add
fcomps
rorl
push
add
scas
mov
stos
xchg
enter
mov
cmp
lea
cmp
cmp
jg
lcall
add
leave
cmp
mov
jae
mov
xchg
enter
sub
xor
daa
jbe
dec
mov
lock
imul
adc
outsb
outsl
cmp
mov
hlt
fwait
cmpsl
cmp
jecxz
inc
jne
and
jmp
mov
rcrb
add
push
xor
sbb
ret
xlat
dec
sti
inc
movsb
es
mov
sbb
movl
adc
int3
pop
or
or
pop
push
mov
mov
xlat
jp
iret
xchg
pushw
jns
and
ss
inc
sub
in
mov
inc
rolb
icebp
insl
and
fidivs
cli
data16
mov
out
fistps
xchg
loopne
lret
fnsave
sbb
jg
adc
roll
addb
in
cmp
add
jl
aaa
cmpsl
stos
mov
xor
daa
jae
addr16
sub
loop
popa
fidivrs
mov
pop
mov
lret
push
ds
mov
mov
popa
cmpsb
out
scas
das
cmp
sahf
jno
out
xchg
inc
shl
mov
cmp
cmp
adc
out
imulb
stos
leave
xor
test
sub
and
test
push
inc
inc
jg
and
xchg
cmp
test
pusha
les
pop
inc
int
add
push
mov
fcomps
and
mov
fadds
into
inc
stc
cmpsl
jae
inc
mov
fwait
loop
sub
xlat
and
dec
xchg
movsb
and
xchg
mov
aam
in
and
cmc
outsl
scas
loop
imul
out
scas
ds
inc
fldt
mov
or
add
push
in
xchg
mov
add
es
pop
hlt
dec
cmp
jnp
xchg
xor
cmp
dec
daa
test
cmc
sarb
mov
adc
mov
mov
out
xchg
mov
dec
repz
out
push
push
mov
or
mov
inc
lods
and
xor
sbb
scas
sbbb
outsl
in
roll
outsb
into
inc
sbb
mov
loopnew
jbe,pn
testb
and
sub
lds
lahf
xchg
xchg
in
mov
out
push
sub
jmp
push
enter
jp
hlt
out
jge
faddl
xchg
and
cmp
jne
shr
mov
popa
outsb
xchg
das
sbb
fs
mov
adc
test
xor
xchg
in
mov
fnstcw
std
negl
pop
adc
flds
nop
div
inc
dec
arpl
cltd
les
sub
fsubl
xchg
add
push
push
lods
adcb
pop
xor
cs
test
mov
adc
adc
pushf
inc
je
xchg
fldt
icebp
and
imul
dec
pop
add
inc
es
mov
mov
pop
jne
xor
cld
cmp
loop
imul
cwtl
imul
repnz
outsb
sbb
scas
push
out
and
fs
sub
int
pop
icebp
out
cmp
mov
mov
addr16
jbe
mov
inc
lcall
and
push
orb
outsb
lds
mov
jb
stos
inc
xchg
mov
add
and
iret
popa
and
mov
xor
arpl
outsb
xor
icebp
pushf
pop
mov
lods
es
js
insl
mov
sub
xchg
push
xchg
pop
les
mov
jns
bound
xchg
lret
push
dec
mov
leave
jnp
push
test
mov
and
sti
adc
sbb
push
sahf
dec
aas
insb
ficoml
clc
mov
loopne
and
lahf
sbb
jg
rcrl
add
jp
fists
jo
cld
fwait
xchg
adc
add
cmp
ficomps
ret
insl
stc
mov
push
cmp
mov
js
test
fldenv
hlt
dec
pop
loope
icebp
iret
clc
mov
les
lods
popa
dec
pop
jb
push
cld
xchg
mov
inc
outsl
bound
test
inc
inc
lret
cmp
add
push
inc
outsb
pop
fdivrl
add
mov
ret
sbb
xor
sbb
jp
es
xchg
int
stc
dec
lods
sub
inc
add
test
fsubrl
iret
jg
loope
dec
out
pop
cmp
out
scas
popa
std
jmp
add
notl
xchg
mov
add
loop
repz
test
loop
xchg
push
lods
jo
decl
rolb
push
xor
add
loope
cmpsb
mov
cmp
frstor
xchg
test
sbb
mov
leave
jne
inc
aam
arpl
dec
and
movq
mov
and
xchg
jl
aam
rcll
lea
mov
sbb
jns
lods
and
and
test
adc
mov
sub
mov
jge
inc
aad
ss
test
lahf
xor
aad
push
sbb
lods
mov
orl
and
ret
popf
js
je
inc
mov
xor
sahf
mov
stos
movsb
loop
push
jns
rep
xchg
stos
roll
sbb
cli
ja
jge
inc
dec
in
pop
scas
movb
add
out
outsl
filds
test
xchg
adc
mov
repnz
jns
add
adc
mov
daa
xor
sub
js
mov
push
in
pop
shll
sar
aad
xchg
push
jmp
hlt
fdivl
outsl
and
inc
dec
std
sahf
xor
in
jecxz
dec
inc
loope
out
mov
jae
jo
xchg
movb
xor
cwtl
xchg
jne
inc
pop
outsl
cmpsl
sub
negl
sbb
dec
mov
cwtl
mov
push
jne
adcb
xchg
sub
jge
in
ret
lret
push
cmp
dec
aam
aaa
negb
mov
mov
cmp
sub
imul
fnstenv
movsl
movsl
push
push
xchg
push
dec
and
push
in
jl
out
sub
fs
mov
mov
dec
xchg
repz
in
pop
xchg
xchg
lods
test
test
pop
imul
mov
sarl
dec
mov
in
rclb
fmuls
push
repz
adc
dec
clc
cs
jae
pop
cmc
mov
jp
adc
sti
in
clc
and
xor
jge
or
sahf
mov
mov
inc
imul
jno
mov
sub
out
movsb
aam
loop
std
xchg
mov
notb
cmp
push
jp
and
sub
xlat
pushf
nop
xchg
push
movsb
je
cmp
movsb
mov
sarb
xor
ss
mov
pop
cmp
xchg
adc
pop
imul
xor
adc
dec
and
pop
cmc
and
jecxz
ss
fcomp
xchg
mov
push
sub
sar
lret
jnp
sbb
jp
lods
xchg
jp
aam
or
ret
sub
add
aas
adc
pop
xchg
sub
and
and
mov
or
stos
imul
xor
mov
mov
testl
lahf
mov
loope
jne
or
mull
out
mov
movsb
loop
sbb
lods
bound
pop
inc
std
jecxz
roll
sbb
insb
mov
sbb
jno
popf
stc
xchg
mov
test
add
push
sub
addr16
xor
pop
sbb
ss
loop
and
push
repz
rolb
das
pop
mov
push
js
add
sub
inc
ljmp
xchg
ja
inc
fscale
sub
out
into
dec
sbb
out
insb
loopne
mov
jge
cmpsl
mov
sub
lcall
jge
das
js
pop
mov
rclb
test
inc
xchg
cmc
cltd
mov
jmp
push
js
cvtdq2ps
stos
xchg
movsl
imul
test
or
inc
insb
cmc
or
cltd
psubw
loop
pop
xor
xor
lods
xor
jb
push
test
lcall
push
ficoms
into
popa
outsb
movsl
fs
adc
pop
jnp
add
push
mov
mov
or
or
ret
imul
pusha
call
aaa
pop
arpl
jle
xor
in
jb
lock
xrelease
and
mov
test
pusha
gs
call
mov
and
jl
lret
adc
mov
pop
sbb
cmp
inc
adc
bound
cmp
add
rolb
fcoms
sbb
mov
scas
ret
shrl
adc
sub
or
xchg
inc
out
rcrb
xorl
rcll
out
mov
cmp
popa
jl
nop
xchg
or
and
push
hlt
fistpll
pop
andl
int
pop
push
xchg
inc
or
jecxz
mov
mov
lods
jecxz
scas
adc
jne
movsb
add
roll
shll
push
jle
cld
mov
mov
insl
out
je
js
dec
push
pop
jle
outsb
cmp
dec
sbb
enter
test
mov
ds
push
pop
jle
outsb
cmp
dec
sbb
enter
test
mov
ds
push
js
dec
push
pop
out
sub
pop
or
stc
outsb
enter
test
es
sub
js
dec
cs
jle
jle
pop
mov
out
pop
push
push
xor
mov
and
addr16
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
cmp
jno
inc
lret
push
fstpt
ret
inc
aam
stos
jle
movsb
imul
ret
dec
icebp
pop
mov
or
sti
jno
push
stos
xor
jmp
icebp
sbb
sub
sbb
push
fstpt
stos
sub
loope
cli
jnp
das
movsl
pop
mov
push
bnd
sbb
jmp
movsb
or
insb
int
xor
lahf
sbb
or
push
cmp
mov
add
jnp
lods
inc
and
sub
inc
icebp
fcomp
sub
sbb
pop
sbb
in
mov
jmp
outsl
xor
lret
or
xchg
push
test
sub
sti
sub
push
xchg
mov
popa
js
pop
fcmovu
add
and
jmp
mov
pop
shll
shl
xchg
orl
and
scas
adc
push
sub
mov
fwait
or
mov
or
imul
pushf
fidivrs
jnp
push
push
jnp
pop
rcrb
mov
sbb
lret
inc
stos
sub
clc
imul
pop
mov
or
sti
and
xor
mov
xchg
push
icebp
btr
mov
dec
in
hlt
pop
popa
jmp
stc
and
push
test
insl
cld
push
fwait
jecxz
icebp
push
test
movsb
xor
dec
ret
outsb
xchg
dec
or
push
mov
add
icebp
jnp
dec
rcrl
sub
sbb
jno
inc
lret
push
stos
xor
loope
icebp
jnp
dec
rcrl
sub
sbb
mov
sbb
pushf
push
cmpsb
push
movb
scas
sahf
dec
jge
pop
or
add
push
loope
or
pop
sub
sbb
cli
sub
jnp
loope
sbb
pop
test
mov
sbb
repnz
sub
mov
jns
filds
xor
cmpsl
jle
out
jecxz
loop
mov
adc
pop
xlat
cmp
cld
es
imul
sahf
push
scas
sahf
std
cmpsl
add
sub
add
ret
aaa
add
mov
jecxz
iret
out
test
cmpsl
pop
jp
mov
test
xor
out
push
fs
cmc
pop
loopne
enter
imul
xchg
jl
dec
add
enter
add
in
xor
adc
aam
cmc
add
scas
push
leave
jb
xor
lea
sarb
mov
or
dec
daa
adc
adc
cwtl
rcll
mov
mov
je
inc
mov
fcoms
cwtl
test
mov
mov
loope
adc
lret
fstpl
movsb
js
pushf
daa
add
push
test
scas
mov
dec
aam
roll
pusha
sub
or
gs
stos
into
ret
inc
pop
lcall
xchg
xor
in
mov
pop
mov
inc
nop
add
cmp
sbb
xchg
jbe
popa
mov
scas
push
ret
xchg
push
clc
leave
insl
icebp
inc
lret
test
add
mov
bound
shr
jo
pushf
jb
out
lock
and
imul
xchg
lahf
cmp
xchg
into
xor
adc
loopne
sub
into
sub
das
inc
push
lret
xor
pop
xchg
inc
pusha
icebp
into
push
xchg
push
cmp
jg
lret
pop
cmp
adc
inc
adc
or
jg
jle
aas
jns
hlt
scas
lret
inc
push
sahf
pop
cmovle
push
movsb
or
aad
or
je
sub
in
pop
repz
or
cs
sub
cwtl
inc
xor
arpl
add
and
loope
and
xchg
cmp
popa
outsl
xchg
call
push
jbe
pusha
and
cmc
or
jae
cld
mov
stc
insb
ljmp
xorb
call
cmpsb
es
mov
clc
dec
mov
dec
nop
repz
xor
aaa
xor
fstps
mov
pushl
stos
lahf
lret
and
adc
mov
sahf
fwait
pop
sbb
iret
lds
test
pop
fwait
jmp
dec
jo
xchg
mov
inc
mov
pop
cmc
mov
and
sbb
ret
in
adc
xchg
leave
push
mov
scas
xchg
into
add
push
xchg
push
push
dec
dec
jb
pop
pushf
xchg
mov
aas
xlat
push
stc
xchg
data16
pop
je
mov
aam
add
mov
lds
lods
inc
cmc
jnp
outsl
stc
outsb
sub
mov
cmp
jno
insb
pusha
push
push
cmp
mull
xor
mov
add
push
pop
imul
int3
dec
hlt
out
dec
in
mov
iret
dec
pop
and
cmp
test
fimull
and
push
test
or
aaa
cwtl
aaa
lods
or
push
mov
ror
loop
or
or
fisubrs
adc
fs
fcomps
pop
js
and
dec
fsub
call
popl
cmp
lret
hlt
cmp
arpl
cmp
fildll
in
mov
arpl
xlat
cmp
and
fstpt
adc
xor
ret
int3
push
cmp
mov
icebp
cltd
js
add
cmp
pushf
ror
dec
mov
outsb
pop
mov
push
outsb
pop
js
inc
dec
sbb
lcall
stc
jl
ret
push
mov
scas
sbb
insl
jne
cmpsl
adc
inc
call
loop
das
mov
mov
mov
sbb
push
int
adc
mov
test
and
mov
cmp
enter
fdiv
dec
cmpl
jg
cmp
ja
and
adcl
gs
movsl
sbb
cwtl
adcl
dec
daa
sbb
push
int3
inc
xor
sub
and
jle
or
or
or
jp
in
push
mov
sbb
cwtl
cmpb
mov
ljmp
lods
int3
data16
in
mov
sbb
xor
cmpsl
jo
adc
push
roll
xor
dec
push
push
aas
enter
xor
cmc
stos
push
mov
mov
int3
xchg
addl
adc
cltd
mov
stos
rorl
inc
stos
sahf
inc
sbb
fsubrl
cmp
jge
aas
arpl
imul
jbe
enter
pushf
clc
loop
mov
scas
and
pop
insb
xor
lock
jmp
out
pop
loop
xchg
daa
inc
rclb
setp
sub
add
add
loope
mov
xlat
jns
out
daa
xor
jne
loop
cmpsb
cwtl
das
pop
and
in
adc
push
xor
fimuls
cltd
into
mov
push
inc
pop
xchg
sbb
cwtl
repnz
xchg
dec
jns
pop
ljmp
and
add
jl
jno
mov
sbb
rorl
ja
cmc
test
xchg
ret
jnp
imul
outsl
sub
push
daa
in
mov
js
add
test
subb
push
insl
jg
iret
clc
cmp
add
and
and
out
test
cmp
enter
sub
xlat
rcll
mov
and
lret
idivb
lret
cmp
sub
push
sub
jae
push
jecxz
add
lds
or
pop
dec
sbb
aaa
enter
orb
or
in
xchg
gs
mov
mov
jge
fildll
jnp
les
mov
daa
mov
jg
xchg
nop
ss
pop
push
cmp
jns
addr16
fcmovnbe
gs
xorb
xchg
cmp
roll
xchg
xchg
call
mov
sub
into
pop
cltd
and
cld
fistpll
xacquire
ja
in
mov
mov
pop
loope
xor
xor
movsb
andb
pop
out
shrb
pop
adc
jns
mov
mov
adc
or
mov
subb
cltd
shl
xchg
test
dec
cmp
xor
sahf
loope
jmp
fcomps
fisubrs
dec
and
cmpb
xchg
mov
adc
out
das
sbb
insl
mov
sbbb
push
ss
lcall
out
gs
cwtl
in
aam
lret
xor
cld
fcmovnb
lds
aad
pop
fwait
mov
pop
dec
xor
and
cld
scas
aas
ret
sbb
jno
negb
in
cli
aad
scas
mov
mov
push
adc
sarl
cmp
sbb
loop
mov
rorl
jmp
pop
inc
pop
lea
dec
popf
push
movsl
pop
mov
punpcklwd
mov
sbb
lret
pop
jg
adc
push
ret
cld
jp
ret
into
aam
inc
fcomps
lock
jbe
lret
xchg
lret
mov
pop
push
xchg
xchg
and
dec
push
mov
pop
mov
rcl
and
test
jle
pop
sbb
xchg
jnp
dec
and
jecxz
ljmp
add
pop
sbb
mov
xor
cmpsl
pop
xor
adc
testl
and
cmpsb
mov
aas
in
cli
stos
lea
or
or
iret
mov
push
int3
jo
hlt
aam
xor
mov
std
stos
pop
cmp
sbb
or
pop
test
jp
and
loopne
loop
dec
into
sub
mov
pop
dec
outsb
call
and
and
add
pusha
jnp
stc
daa
stos
outsb
leave
lret
in
and
fiaddl
insl
loope
jmp
xchg
adcl
xchg
stos
cmpsb
mov
mov
aaa
xchg
xlat
outsb
test
shll
pop
add
stos
addr16
std
testb
push
sbb
fld
or
iret
xor
popa
xchg
xchg
dec
pop
lcall
jp
hlt
daa
popf
ds
cmp
adc
jge
xchg
cmp
test
xor
dec
divl
aaa
add
outsb
cmpsb
add
test
push
adcb
in
xchg
pop
cs
sbb
test
fcoml
mov
jnp
loope
push
adc
or
pop
adc
xchg
inc
lret
push
mov
adc
pop
std
jge
xor
sbb
xchg
dec
pop
push
jp
mov
inc
dec
ds
in
mov
jmp
std
push
test
mov
and
sahf
out
mov
cltd
cmpsb
call
or
jne
and
mov
inc
leave
and
push
jbe
inc
pop
sbb
push
test
mov
lret
push
jl
adcb
xlat
and
pop
sub
pop
mov
xor
pusha
xchg
pop
in
mov
lods
arpl
dec
jp
mov
mov
andb
leave
mov
sub
ljmp
push
dec
pop
pop
mov
mov
test
sub
jne
and
lret
bound
clc
jo
mov
add
test
les
test
push
shll
mov
mov
pop
scas
inc
inc
arpl
cmp
rorl
sti
leave
imul
jbe
in
sbb
fwait
cmpsl
cwtl
lahf
out
lock
sbb
dec
xchg
cmp
dec
jl
mov
add
ljmp
inc
pop
xor
cmpsl
inc
stos
xlat
notl
repz
xor
and
in
mov
dec
xchg
and
mov
push
imul
mov
jmp
nop
in
arpl
xlat
jb
cmp
or
xchg
ret
ljmp
sbb
sbb
push
mov
inc
and
adc
xor
call
into
stc
jbe
cmp
adc
loopne
or
inc
mov
jnp
out
jg
pop
movsb
mov
sub
lahf
je
push
inc
push
fldcw
cwtl
mov
popf
adc
out
and
sbb
test
push
lds
jecxz
call
sbb
test
push
dec
shll
mov
sarb
repnz
pop
xor
dec
inc
jo
jb
mov
movsb
sub
pop
inc
fwait
jo
mov
xchg
mov
push
add
aam
scas
cmp
jge
sbb
icebp
cld
out
pop
lock
sbb
cmpsl
in
imulb
cmp
mov
aas
and
pushf
mov
icebp
sbb
mov
xchg
sub
pusha
sub
jne
or
mov
jmp
dec
mov
jle
jge
jmp
adc
popa
pop
in
mov
test
lods
call
mov
mov
inc
pusha
lret
shll
mov
sbb
aaa
mov
int
lcall
aas
xor
adc
stos
insb
xchg
xor
out
cs
dec
into
xor
xchg
cmp
jo
out
cmp
add
fsubrl
inc
notl
adcl
lods
cmp
inc
push
pop
and
inc
pop
loop
in
stos
sbb
xlat
jmp
and
inc
mov
mov
inc
aam
mov
cmp
jnp
pop
xchg
orl
insl
sub
sbb
mov
dec
push
jo
test
cwtl
dec
popf
insl
jmp
mov
popa
sahf
sub
in
inc
push
imul
xor
add
repz
pushf
mov
xor
lock
xchg
and
cmp
mov
mov
xchg
jecxz
or
ret
mov
cmp
rcl
sub
pop
xchg
les
push
call
xchg
push
adc
mov
pop
sub
cwtl
pop
adc
sub
xchg
push
lock
push
inc
xor
xchg
cmpsb
bts
pop
sbb
pop
push
jno
mov
jecxz
mov
add
jp
mov
pop
inc
clc
cmc
pop
cltd
xchg
ljmp
inc
sahf
in
lods
shrb
fwait
out
dec
shlb
dec
mov
xor
xor
cwtl
and
aas
lea
mov
push
and
jno
sub
xchg
bound
xor
jbe
shll
loope
test
xchg
aam
sub
adc
mov
inc
adc
scas
add
fadd
pshufw
lret
in
cld
push
pop
loop
jecxz
orl
and
adc
pop
mov
xor
sbb
xor
add
lcall
cmpsb
clc
std
aad
or
popf
cmp
arpl
int
ret
jne
dec
out
cmp
imul
ret
and
nop
loop
adc
xor
movsb
jecxz
mov
mov
insl
pop
sub
shlb
int3
mov
xchg
mov
sub
mov
sti
pop
cvttps2pi
rcll
dec
xor
movsl
add
sub
cmpsl
jne
nop
jo
nop
js
mov
mov
shl
iret
hlt
pop
aas
mov
mov
sub
mov
sub
shll
cmpsl
jae
lds
add
mov
dec
sbb
xchg
inc
out
fsub
sub
push
enter
outsl
leave
hlt
add
cmpsb
cli
mov
bound
push
inc
sarb
pushf
fldl
jp
xlat
enter
and
sbb
jge
jmp
call
mov
shll
insl
jl
push
xor
scas
inc
or
push
jo
jo
movsb
add
or
add
fdivs
adc
sahf
cmp
lds
aad
and
out
pop
xor
push
inc
lods
enter
add
adc
jge
adc
mov
mov
or
mov
test
rorb
cld
scas
jle
mov
stos
pop
jecxz
lret
and
sbbb
sahf
xchg
cmp
popa
adc
mov
aas
xor
sahf
incl
stos
and
push
aad
xor
repz
sbb
mov
add
movsb
jp
or
xor
cmp
call
lea
jbe
jnp
jecxz
xor
stc
push
jo
shr
mov
hlt
fsubrs
adc
sbb
jnp
xor
cmp
add
sub
push
cmc
out
ret
shrb
mov
scas
inc
adc
outsl
mov
dec
mov
clc
outsl
xor
inc
and
and
call
sbb
pop
push
cmp
ret
aas
orl
nop
data16
in
aas
insb
mov
fwait
sbb
lea
add
mov
sub
sbb
xchg
imul
je
xchg
bound
inc
nop
sbb
jmp
and
push
jl
push
mov
int
inc
mov
arpl
jo
pop
call
dec
mov
cmpsl
inc
in
inc
sbb
push
stos
leave
stc
xchg
sar
mov
sbb
cld
lahf
sub
dec
sbb
fstpl
sub
loopne
mov
std
mov
xchg
test
leave
mov
jne
cmp
rcr
xchg
inc
rorb
mov
lret
mov
pop
cmovg
pushf
add
and
pushf
fadds
ja
dec
sbbl
sub
sbb
enter
std
pop
in
or
in
es
pop
int
std
out
imul
mov
pop
inc
adc
insl
cltd
arpl
mov
mov
and
stc
adc
jo
cmpsl
popa
inc
test
add
pusha
shrl
in
or
imul
push
dec
in
fs
sti
sbb
push
les
push
push
gs
jmp
insl
inc
dec
jmp
or
insl
adc
pop
jnp
clc
les
outsb
addb
xor
mov
mov
push
push
inc
cmp
and
sub
arpl
scas
xchg
push
push
sahf
out
ljmp
iret
cmp
dec
push
sbb
pop
inc
ror
imul
mov
xchg
nop
cltd
inc
jae
imulb
inc
addr16
out
and
push
in
imul
rcrl
std
mov
mov
pop
fs
cmpsb
jbe
cmp
call
dec
imull
movsl
fs
xor
das
jecxz
into
dec
setb
lret
push
out
ret
sub
out
dec
and
mov
imul
je
in
ja
into
lcall
pop
pop
sbb
decl
into
mov
aam
inc
dec
in
xor
notb
addr16
mov
shll
fmuls
int3
hlt
jno
mov
push
mov
xchg
les
fidivrs
popa
fwait
mov
mov
push
int
out
or
mov
xor
fadds
jge
in
insb
aaa
cld
adc
jecxz
mov
bound
les
mov
aaa
mov
push
add
lock
mov
xor
fldcw
adc
sbb
push
pop
adc
adc
cmp
cmp
popf
in
jae
sarl
or
cmpsb
mov
mov
rcll
ret
jae
sub
into
testb
repnz
cs
jp
js
jl
and
cmpsb
movsl
mov
mov
sbb
xchg
adc
or
jae
icebp
and
in
ror
orl
popf
mov
push
repnz
aas
and
nop
xor
sahf
mov
or
xor
jl
sub
adc
and
pop
sbb
xor
arpl
dec
lods
test
mov
push
jmp
loopne
cmpsl
rcr
aad
and
mov
or
xchg
push
sbb
jae
cmovns
ljmp
jg
jne
sbb
test
pop
es
movsb
daa
popa
mov
outsl
repnz
add
and
push
fnstsw
ljmp
add
or
mov
inc
cmp
iret
mov
sub
dec
in
ds
push
adcl
outsb
call
fmull
jge
lds
pop
mov
inc
lret
jnp
push
dec
add
xchg
in
cmp
mov
inc
pop
mov
sbb
stos
lods
push
sbb
cmp
or
jmp
push
push
cli
daa
add
mov
mov
sbb
push
add
pop
mov
test
xchg
mov
negl
into
xor
arpl
aas
shrb
loopne
mov
pop
cld
loope
jge
jmp
fcoml
pushf
je
gs
xor
sub
shlb
sub
dec
out
mov
out
out
movsb
add
daa
daa
out
adc
loop
dec
lret
mov
pop
xchg
pop
leave
cmpsb
shrb
rolb
or
adc
mov
out
cs
shll
ret
lock
stos
les
mov
insb
out
inc
inc
movsb
idivl
push
lret
adc
jbe
int3
ja
and
insb
mov
xchg
cwtl
rcr
add
scas
xor
rep
mov
adcb
js
mov
xor
dec
cwtl
mov
pop
lcall
mov
sbb
xchg
loopne
pushf
sub
jns
lods
sahf
imul
roll
inc
repz
fcomps
test
aaa
xchg
scas
xchg
pop
mov
dec
mov
fs
mov
cs
cmp
fidivs
push
dec
pop
testl
ret
jmp
rol
cmp
mov
mov
and
in
push
decl
call
jb
sbb
loop
cmp
dec
inc
sbb
and
xchg
arpl
into
ljmp
loope
pop
mov
stos
daa
or
in
test
dec
xlat
nop
xchg
pop
mov
or
mov
clc
in
rol
test
ljmp
nop
cmc
mov
mov
mov
insl
mov
mov
cs
push
jb
rclb
fmuls
mov
lahf
jmp
cli
neg
in
cs
jno
adc
lods
mov
add
mov
jg
pop
fidivrl
inc
pop
loop
sub
dec
call
adcl
adc
sbb
push
and
stc
rcrl
cld
mov
fmuls
movsl
push
lret
inc
pop
gs
mov
mov
roll
or
scas
fwait
push
jecxz
cltd
pusha
dec
test
and
pop
xchg
cmp
sbb
push
jnp
fisubrs
rcl
push
mov
orb
sub
aad
cmc
cmp
ja
dec
stos
dec
dec
push
jo
pushf
xlat
xor
cmpsb
pop
mov
push
pop
out
dec
jb
lods
loop
jmp
mov
add
pop
push
xchg
jae
mov
jecxz
arpl
mov
pop
push
ds
mov
xchg
fistpll
daa
out
push
fnstsw
cld
pop
cwtl
fs
popa
movsl
and
out
dec
xor
push
mov
test
mov
pop
mov
fmul
stos
adc
lret
mov
adc
xchg
ds
sbb
push
stos
xor
loope
icebp
jnp
dec
rcrl
sub
sbb
jno
inc
lret
push
stos
xor
loope
icebp
jnp
dec
rcrl
sub
sbb
jno
inc
dec
push
stos
xor
add
icebp
jnp
dec
rcrl
sub
sbb
inc
sti
ja
push
stos
xor
push
imul
imul
mov
outsb
in
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
arpl
jo
add
adc
inc
adcl
pusha
out
jae
arpl
xor
and
repz
xor
add
adc
inc
cmpl
arpl
xor
and
adc
add
repz
not
lcall
xchg
dec
andl
arpl
push
mov
xchg
xor
jecxz
lahf
push
xchg
jne
outsl
orl
sub
pop
ret
aas
cmp
fwait
cmpsb
and
cmpsb
je
out
mov
lods
sti
sbb
pushf
dec
or
ror
fsubrl
jbe
loop
fcompl
loopne
mov
mov
mov
or
xor
lea
jecxz
nop
adc
pop
xor
jecxz
repz
adc
addb
push
jg
xchg
shl
jo
add
or
std
out
pop
push
stos
jno
addl
pusha
pusha
mov
xchg
xchg
cld
pop
or
jecxz
pop
jne
rclb
subl
push
mov
mov
es
into
cli
inc
mov
mov
sub
mov
shll
mov
mov
ret
arpl
push
addb
fsubl
push
adc
add
xchg
cmpsl
pop
mov
aam
out
sbb
rol
cmp
daa
repz
cmpsl
outsl
lahf
jle
ja
lods
data16
jl
xor
and
rorl
sub
mov
inc
movsl
sbb
test
shlb
sub
jo
inc
adcl
arpl
xor
and
adc
add
repz
xor
add
adc
inc
adcl
arpl
xor
and
adc
add
repz
pop
jge
inc
pop
xor
leave
cwtl
loop
test
in
loop
jb
repz
stos
lods
ja
rolb
ss
mov
es
xchg
test
xchg
inc
int3
es
cli
and
mov
and
pop
addr16
shll
pop
cmp
mov
dec
adc
mov
mov
xchg
dec
mov
lds
and
push
insb
push
sbb
mov
and
push
imul
adc
and
leave
pusha
shll
jae
sub
add
lcall
jle
mov
scas
xor
in
jae
cmp
shrb
pop
jg
iret
jne
es
push
enter
push
sbb
lock
stc
in
loope
xchg
mov
mov
pop
idivb
sub
sbb
outsl
inc
adcb
jg
decb
cmpsb
ss
lcall
pusha
mov
dec
mov
arpl
stos
lret
xor
add
nop
scas
pop
leave
sub
inc
cmp
enter
pop
andb
sub
cli
test
xor
sub
dec
mov
xor
dec
sti
fsubrs
mov
cli
call
sbb
xchg
lret
lahf
and
or
mov
jns
leave
stos
ljmp
aad
push
imul
mov
xlat
mov
popa
daa
ljmp
mov
es
add
cs
add
xor
sbbb
je
aas
js
jmp
or
mov
aaa
jae
pop
pop
push
adc
gs
xchg
jb
mov
std
push
mov
test
pop
mov
jg
or
cmp
das
insl
js
jge
sbb
or
fisttpl
xor
sti
fstpt
cltd
cwtl
call
inc
ljmp
cmpsl
iret
inc
repnz
sub
divb
jecxz
dec
test
data16
adc
sub
push
jmp
dec
pop
xchg
jnp
pop
jl
or
rclb
cmpsl
bound
push
mov
push
iret
std
mov
movsl
frstor
repnz
mov
and
adc
inc
cmpsb
push
je
add
pop
aas
lock
ljmp
sbb
cmp
into
sbb
sbb
mov
dec
push
aaa
add
repnz
ficoml
pop
adc
aaa
push
fsubs
mov
xor
mov
ss
out
inc
int3
mov
scas
cwtl
adcl
mov
in
push
xchg
dec
inc
push
js
ljmp
jl
cli
xchg
leave
scas
aas
adc
fucomi
lahf
ret
mov
xor
data16
push
mov
xchg
push
mov
cmpsl
and
add
push
sub
insl
xor
adc
sbb
or
mov
pop
add
inc
lahf
ss
fmuls
fs
stc
cmc
mov
adc
cmp
sahf
fnsave
jns
jns
push
cld
pushf
pushf
mov
mov
pop
mov
popa
pop
mov
shlb
inc
xor
enter
pop
in
pop
int3
std
mov
xchg
mov
popa
jno
into
mov
jle
inc
mov
js
fs
jo
mov
xor
xchg
mov
or
ret
push
repz
xchg
fiaddl
xor
bound
out
lods
xlat
pop
movsl
jnp
jo
adc
in
sbb
sbb
sbb
lret
roll
mov
loop
cmp
leave
pop
and
sbb
iret
mov
sbb
out
jge
xor
add
jle
inc
inc
movsb
push
mov
cs
dec
add
adc
cmp
imul
rorb
lret
sub
or
pop
cltd
sub
scas
addr16
cli
xlat
adc
fstpl
incl
cmp
aad
stos
aam
inc
fidivl
sti
push
repz
adc
lret
mov
dec
imul
mov
je
xor
repnz
mulb
call
push
xlat
jnp
sbb
rorb
cmp
sbb
inc
movsl
data16
dec
lret
adc
pushf
jle
int
aas
pushf
push
pop
inc
mov
push
mov
fs
insb
dec
inc
and
or
add
mov
cmpsl
icebp
js
mov
gs
imul
lcall
inc
xchg
or
ret
loop
movsl
lahf
cmc
std
pop
rcrl
push
fcoms
pop
pop
out
in
in
sub
push
ficompl
sbb
bound
mov
mov
adc
mov
out
and
insl
add
adc
popa
push
ds
cmp
mov
jb
mov
icebp
xchg
inc
outsl
fiaddl
mov
pop
add
or
test
iret
sahf
dec
movsb
mov
xchg
add
and
movsl
rcll
rol
and
pusha
in
xor
daa
call
inc
cmpl
psrld
movsl
add
outsb
cmc
shll
dec
aam
mov
cmpsl
jle
repnz
mov
es
and
xor
sahf
cmp
mov
imul
dec
cmp
and
dec
push
add
pop
test
mov
push
push
add
dec
movsb
inc
jmp
into
adc
adcl
adc
sbb
or
push
pop
or
outsb
or
adc
cmc
mov
aam
mov
lock
mov
push
stos
ljmp
cmp
cwtl
lcall
mov
jle
mov
lds
aam
ret
push
shrl
aaa
cmpsb
jae
ss
inc
inc
into
xlat
cld
sub
cltd
dec
scas
pop
xchg
sub
test
outsb
and
loopne
in
cmp
lods
mov
pop
push
in
nop
aas
dec
adc
or
cli
out
sub
sub
fidivrl
je
ds
add
or
mov
jbe
mov
and
in
sub
lret
cmp
movsb
jg
xchg
sbb
imull
aas
daa
fbstp
dec
call
mov
imul
cmp
adc
imul
fldl2e
or
aad
and
js
pop
stos
lcall
lea
add
out
mov
or
inc
dec
jp
jle
push
lahf
adc
mov
dec
jg
push
enter
mov
mov
jns
jle
xlat
iret
fisubrl
mov
xchg
sub
inc
mov
lods
pop
sbb
adc
jg
dec
cmc
sbb
inc
xor
mov
mov
sbb
jle
pop
mov
inc
insl
push
cmpsb
mov
sub
xchg
or
mov
mov
out
fxch
or
push
fnstenv
pusha
call
and
mov
mov
xor
stc
push
mov
xchg
imul
inc
inc
test
arpl
cltd
stos
pop
add
add
mov
into
sbb
pop
mov
mov
inc
mov
xchg
jle
andb
xor
test
jo
mov
ljmp
lock
push
xor
dec
mov
xchg
xor
jo
adc
lods
pusha
mov
push
icebp
mov
sbb
push
sub
push
sbb
adc
test
test
stos
ja
pop
outsb
dec
mov
mov
fnstcw
nop
repnz
cmpsl
pop
faddl
and
insl
mov
xchg
pop
lods
cwtl
stos
xchg
inc
lret
dec
ss
or
in
adc
in
fsubrl
fdivrs
inc
mov
aad
push
push
jbe
scas
adc
aad
cwtl
pop
adc
cmp
mov
xchg
pusha
push
loope
movsb
test
adc
jle
xchg
fldcw
orl
test
shr
lods
sub
not
jbe
jae
pop
pusha
pop
mov
xchg
fmull
add
repz
cmp
popa
or
jp
out
jb
faddl
sbb
arpl
sub
lret
faddl
lock
sbb
call
push
or
fcoml
mov
mov
movsl
inc
xchg
daa
shll
adcb
jns
insl
mov
xor
scas
dec
cmp
push
adc
test
dec
ret
test
mov
arpl
loop
out
into
sbb
push
mov
xchg
xor
xor
push
jp
pop
icebp
adc
jo
popa
mov
cwtl
add
cmpsb
mov
mov
inc
lods
xchg
pusha
lahf
jno
jp
add
or
call
cs
push
jp
jp
mov
nop
fwait
xchg
jns
xor
lods
mov
and
or
fidivs
mov
mov
push
mov
fcmovnb
or
lds
lcall
push
fimuls
mov
addr16
imul
popa
pusha
push
mov
mov
add
stc
sbb
mov
xchg
ret
cmc
clc
pop
fsts
push
cmp
fcoms
jnp
inc
sub
out
xor
mov
dec
xor
jbe
scas
dec
xchg
aaa
and
cmp
pushf
fdivs
lods
pushf
cmpsb
add
dec
loope
pop
hlt
mov
cmp
ret
test
add
popf
fnstcw
mov
decb
movsl
pop
dec
sahf
pop
pop
lods
lahf
mov
pop
and
mov
pop
adc
mov
or
inc
lds
loop
jb
ret
xchg
xor
ret
fsubl
aad
adc
sbb
lahf
xchg
adc
inc
mov
lret
cmp
sbb
pop
xor
pushf
arpl
sub
sbb
out
in
add
cmc
inc
and
shrd
iret
jl
sbb
dec
fwait
adc
aas
push
fisubrl
jbe
out
loope
std
xor
cmp
inc
data16
xchg
fcmove
push
push
mov
pushf
push
mov
jecxz
xchg
ds
mov
pop
fisubrl
ror
nop
mov
pop
inc
lods
std
push
test
out
push
xchg
cmp
and
jmp
test
mov
js
xchg
call
push
mov
mov
cmp
or
adcl
jne
adc
shlb
pop
or
pop
fdivs
mov
out
stc
or
pusha
dec
loop
cmp
adc
xchg
addb
mov
push
xor
scas
test
or
mov
movsl
push
pusha
mov
jl
ret
jnp
ljmp
popa
cmpsl
inc
pop
or
popa
adc
nopl
mov
mov
pop
addr16
lds
cmc
daa
sbb
fcoml
lahf
loop
aam
out
mov
frstor
rol
lret
js
sbb
arpl
rcrb
ret
xchg
push
roll
inc
fists
outsl
popa
loop
outsl
jae
clc
stos
xor
xchg
lods
lahf
int
pushf
fdiv
pop
push
ficompl
dec
mov
pop
lret
xchg
lahf
mov
cmpsb
rcr
mov
xor
push
push
pop
push
shrb
add
hlt
mov
mov
popa
mov
test
sbb
sbb
mov
adc
imul
int3
into
cmp
pop
xor
xor
je
jbe
jo
lds
fwait
mov
imul
or
or
movb
inc
in
sbb
insb
test
sbb
outsl
leave
add
ljmp
mov
adc
and
inc
dec
daa
cmp
rep
addr16
inc
jle
cmp
pop
and
dec
push
frstor
ja
arpl
sub
adc
sub
cltd
imul
mov
pop
xchg
mov
aad
out
sub
pop
stos
popf
int3
pop
jle
pop
lcall
into
std
inc
aad
mov
cmc
in
mov
cmp
dec
or
mov
mov
in
rclb
mov
or
add
jg
rorb
pop
ljmp
dec
mov
out
nop
push
inc
push
int
sub
int3
mov
mov
jl
cmp
pushf
xchg
mov
out
out
mov
dec
cli
std
mov
mov
dec
push
mov
loop
push
push
pop
test
lods
movsl
pop
rcrl
or
in
iret
aas
mov
sbb
xor
test
in
std
jp
inc
repz
stc
in
fcoml
lret
hlt
xlat
gs
dec
loope
xchg
xchg
push
ss
out
xchg
inc
mov
repnz
inc
loopne
flds
outsl
cld
jo
mov
aam
cmp
mov
mov
shll
js
pop
dec
orl
lret
ljmp
ret
lock
ret
sub
jecxz
cmpsb
xlat
js
out
nop
sub
call
cmc
mov
cmp
mov
test
sbbl
fsts
out
pop
dec
jne
xorl
fisttpl
stc
insb
aad
mov
test
pop
inc
or
sbb
cwtl
sbb
hlt
mov
nop
inc
xorl
shrb
mov
je
insl
adc
les
sub
jnp
and
xor
fs
xchg
mov
inc
test
rcrb
mov
jb
out
push
cs
fcoml
jb
mov
mov
dec
xor
fbstp
sub
or
rcll
adc
push
inc
lcall
xchg
fs
xchg
fildl
fcmovnu
add
ss
pushf
jbe
push
cmp
xor
pop
pop
cmpl
mov
fwait
loopne
sti
or
icebp
push
pushf
stos
adc
xchg
fisubl
mov
lret
mov
aam
fwait
in
add
hlt
ret
push
loop
push
das
push
push
xchg
sbb
nop
sub
mov
xchg
jnp
sbb
in
push
sahf
dec
insl
and
es
pop
fidivrs
fnstsw
add
xchg
popa
das
iret
xchg
std
daa
pushf
sarb
mov
xchg
mov
jnp
mov
cmp
out
lret
xor
push
or
xchg
jo
inc
loopne
xor
mov
push
jae
xchg
bound
mov
push
xor
int3
sahf
xchg
mov
aad
mov
fisttpll
pop
cs
mov
lret
xchg
ds
lods
aam
pop
in
loopne
inc
jo
lods
cmpsl
inc
sub
push
stos
int
movsl
mov
fistpl
dec
cmp
fwait
add
dec
or
mov
lret
push
jnp
push
jl
mov
adc
lods
sub
inc
sub
out
xchg
push
mov
add
pop
dec
or
cmp
xchg
test
xchg
mov
shlb
jnp
mov
imul
mov
out
dec
or
or
and
xor
out
aad
in
shrl
mov
mov
out
cmp
in
mov
sub
lods
fstpt
out
dec
pop
jns
xor
in
xchg
ret
in
mov
shrb
pop
sahf
add
dec
push
inc
or
add
mov
dec
xchg
adc
shrb
push
out
push
sarl
movsl
lds
add
mov
aas
sub
sarl
cmpsl
rclb
pop
xlat
push
jae
daa
inc
out
int3
mov
into
dec
lcall
les
daa
cwtl
rcrl
xchg
inc
test
mov
inc
add
mov
scas
mov
and
inc
out
ret
sub
jle
shll
lock
in
mov
cmp
dec
test
xor
jae
inc
inc
add
pop
sub
jmp
fstpl
loope
push
and
inc
mov
rcll
in
pop
cmp
jae
rcrl
sub
add
push
mov
xor
jl
add
or
nop
jbe
jmp
add
jge
push
jbe
mov
cmp
rcrl
fistpl
addr16
xchg
pop
pop
in
cmp
dec
inc
mov
xchg
or
xchg
jl
mov
aam
mov
cmc
shll
xchg
decl
outsb
fnsave
cs
sbb
and
out
xchg
adc
loopne
cwtl
jmp
inc
inc
mov
and
orl
xchg
mov
cmpsl
mov
int3
rcrb
push
mov
inc
dec
jle
cmp
inc
shll
or
mov
test
push
sub
jnp
cmp
push
hlt
dec
std
mov
jp
loop
cwtl
out
inc
cltd
ds
xor
inc
stos
mov
add
aam
sbb
inc
cltd
sub
or
lret
addr16
fimuls
sahf
cli
xchg
mov
sbb
addl
das
cmpl
rcll
pusha
or
jne
imul
xchg
popf
out
test
imul
add
xchg
inc
rol
mov
push
cmp
enter
leave
mulb
mov
outsl
mov
fcomp
jae
and
pushf
aaa
xorl
and
lahf
rcll
lea
mov
pop
cmp
mov
sbb
mov
xchg
jmp
loop
subb
adc
out
pop
repz
test
add
push
ror
dec
outsb
adc
scas
push
mov
mov
popf
lods
sbb
loope
sub
jno
outsl
sub
mov
test
aas
mov
outsl
rcrb
popf
clc
pop
push
push
sbb
xchg
xchg
ficoml
push
in
or
add
orl
push
mov
mov
dec
jg
mov
push
repnz
int3
lcall
das
das
test
and
mov
mov
mov
arpl
and
jno
jo
daa
jg
fldcw
call
pop
push
lahf
jo
fnstcw
mov
xchg
jp
adc
cmc
call
sbb
dec
lcall
xchg
push
cmpsb
xchg
mov
insl
mov
jne
jns
fstpl
pop
inc
js
xchg
push
daa
cmc
cli
int3
dec
cld
popl
dec
stc
out
push
mov
push
mov
arpl
mov
mov
inc
pop
inc
or
adc
fcmovnb
cmp
xchg
inc
fiadds
cmp
cmp
aad
add
mov
adc
int
neg
or
arpl
push
imul
mov
mov
mov
lret
popl
lret
lods
stos
lea
mov
imul
sbb
jp
les
cwtl
repnz
das
dec
jbe
cmpsb
pop
imul
adc
adc
adc
daa
xor
mov
dec
popa
shl
test
pop
mov
xor
mov
or
or
sbb
test
mov
and
loopne
jno
movsl
xchg
cmpsl
loop
les
mov
push
push
sti
sbb
in
out
jge
dec
in
jb
add
xchg
jne
mov
mov
ds
adc
mov
in
sub
and
dec
mov
dec
cmpsl
aaa
orb
pop
xorb
push
and
aad
rclb
push
push
jnp
inc
pushf
mov
dec
rcr
pop
loope
push
aas
cmp
outsl
push
mov
cmpsb
movsl
lcall
sub
cmp
out
sub
cmc
xor
jno
push
bound
pop
fcomp
pop
out
jb
stos
xchg
mov
fwait
adc
fwait
or
mov
aaa
mov
mov
ds
push
stos
rclb
addr16
jle
adc
pop
push
clc
add
mov
cmc
dec
rcl
dec
stos
xchg
arpl
call
das
loopne
pop
mov
cmp
sub
sar
call
mov
inc
mov
adc
mov
adc
inc
fsubr
rcrl
je
push
fldt
jb
lret
and
out
pop
and
sbb
lret
mov
andl
dec
xchg
xchg
or
popf
stos
jmp
dec
dec
pop
popf
jnp
mov
and
std
cld
mov
lcall
fs
mov
mov
jmpw
cltd
add
aad
jae
imul
mov
or
cmpsb
lahf
mov
call
les
daa
jp
cmp
call
push
push
pop
addr16
in
jmp
clc
add
movsl
mov
inc
out
movsl
mov
xchg
pop
std
sub
sti
popa
jb
sbb
jnp
jo
xor
aad
jle
adc
pop
fdivl
movsb
pop
pop
dec
cltd
popa
sbb
jp
jb
int3
rclb
leave
adc
rcrb
and
ds
sbb
hlt
inc
sarl
mov
in
ljmp
into
les
jmp
enter
inc
mov
mov
cmp
mov
inc
jnp
mov
mov
mov
adc
fistps
test
cmp
loope
pop
jecxz
mov
add
jnp
sub
push
sub
dec
xor
and
stc
ljmp
pop
jl
sbb
cmp
popf
dec
add
push
push
mov
add
sbb
pop
xchg
inc
andb
mov
cmp
rorl
xchg
fisubl
fwait
add
mov
push
jae
arpl
xor
and
adc
add
repz
xor
add
adc
inc
adcl
arpl
xor
and
adc
add
repz
rcrl
ret
adc
pusha
mov
push
jae
arpl
in
lock
add
in
push
mov
mov
nop
jae
arpl
stc
addb
cwtl
stos
mov
mov
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
iret
fistps
addl
pop
pop
outsl
das
jg
cmovg
pop
das
outsl
aas
jg
fistps
iret
lahf
fildll
maxps
sbb
jg
mov
pop
das
outsl
aas
jg
fistps
iret
lahf
fildll
maxps
pop
push
pop
sbb
popa
add
xchg
pushf
lea
and
inc
je
in
test
out
inc
test
cmovg
fsubl
sbb
jb
movsl
iret
sbb
out
cmc
mov
cmp
pop
lock
or
aaa
push
xchg
daa
lds
rol
mov
sbb
stos
dec
pop
xor
outsl
scas
pop
xchg
pop
dec
ljmp
cltd
xchg
insb
ficoms
xlat
add
dec
loopne
stos
pop
fcomip
dec
ja
das
gs
iret
test
xor
xchg
push
scas
test
push
jg
idivb
sbbb
xor
out
test
pop
pushl
pop
pop
push
out
mov
xchg
xlat
cmp
xor
or
outsl
push
push
fistps
iret
lahf
fildll
maxps
outsl
das
jg
cmovg
pop
das
outsl
aas
push
mov
lcall
test
pop
push
or
adc
or
cmp
imul
ljmp
leave
mov
mov
data16
pop
push
dec
pop
pop
cmp
adc
fimull
out
mov
pop
outsl
das
jg
cmovg
pop
das
outsl
aas
jg
fistps
iret
lahf
fildll
maxps
outsl
das
jg
cmovg
pop
das
outsl
aas
jg
jp
push
inc
fstpt
mov
stos
ret
test
xchg
mov
push
cmp
in
int
and
xor
leave
mov
pushl
cmpsl
adc
fucom
lret
xor
ljmp
mov
lret
nop
test
cmp
iret
cs
inc
inc
out
or
cmp
push
lods
cmpsb
sub
lods
xchg
clc
sbb
adc
aaa
int
inc
sub
push
insb
mov
mov
dec
jmp
sub
xchg
inc
xchg
xchg
jle
data16
stos
or
push
pop
mov
push
int3
cmp
mov
cmp
clc
or
xchg
jb
sti
les
scas
or
movsl
lds
xchg
fisubs
sub
icebp
xchg
rclb
gs
push
sub
add
stos
addb
in
cmpsl
fiadds
fstps
inc
mov
and
loopne
jae
mov
adc
lret
push
inc
push
mov
cld
pop
push
adc
push
inc
jecxz
ja
imulb
fiaddl
and
cli
and
mov
pop
fstpl
movsl
sub
js
in
idiv
rolb
inc
popf
aaa
in
mov
push
adc
stc
sbb
sbb
mov
pop
test
and
pop
inc
push
push
in
fisubs
add
or
ss
mov
das
jge
pop
movsl
call
push
sahf
rorb
jg
mov
pop
push
xchg
pop
and
fstpt
pop
xor
lcall
mov
jb
sti
and
js
pop
adc
mov
and
mov
pushf
aad
pop
aas
dec
fs
roll
imul
pop
lock
js
xchg
test
dec
and
lcall
sbbl
adc
jbe
cmc
inc
int3
pop
xchg
fdivrs
sbb
sub
lret
in
mov
xchg
sbb
sti
xlat
or
ds
jbe
or
mov
pop
insb
adc
mov
sub
cmp
add
add
or
icebp
ljmp
popf
mov
sub
sub
test
adc
jo
add
out
inc
and
mov
mov
aas
in
mov
jl
fcoml
clc
mov
loop
xlat
jmp
cmpsb
in
movsl
push
ja
cmp
jecxz
add
dec
lods
pop
jp
movsl
xchg
mov
dec
movsl
orl
pop
pusha
and
outsb
int3
push
sbb
test
mov
xor
fstl
ret
inc
or
sahf
vpcmpgtq
xchg
mov
lods
jmp
and
aam
movsl
icebp
scas
cmpb
jle
std
arpl
sbb
pop
in
push
dec
pop
cwtl
jne
push
mov
and
imul
mov
repnz
xor
cmpsb
sbb
outsl
pop
int3
mov
cli
mov
sbb
adc
xchg
cmp
mov
aaa
dec
test
sub
in
mov
sub
or
pop
inc
and
in
scas
xchg
jmp
jmp
mov
jecxz
add
fildll
stos
add
mov
inc
loopne
mov
dec
test
inc
loope
mov
push
xor
pop
incl
inc
andb
xor
fcompl
out
mov
out
mov
popf
out
mov
loop
test
push
ret
std
push
dec
dec
push
cmpsb
loop
sub
or
push
cmp
ja
push
push
pop
lock
mov
pusha
cltd
out
into
adc
into
mov
ret
sti
push
lcall
test
cli
mov
sub
leave
outsl
xlat
pop
pop
idiv
fstpl
sti
leave
cmpsl
push
mov
jge
insl
fdecstp
das
imul
in
aas
mov
push
lret
arpl
adc
push
jne
rol
cmp
mov
sbb
inc
push
test
push
testl
mov
cmp
scas
ds
sbb
rcll
inc
mov
and
lea
insb
mov
push
cmpsb
nop
or
in
or
mov
jno
sub
outsl
ret
aas
pop
arpl
pop
fsub
arpl
mov
or
inc
popf
cli
pop
int
test
pop
insb
lret
push
int
imul
pop
cmpsl
and
push
push
sbb
out
mov
sbb
int3
dec
iret
stos
imull
xor
nop
aas
hlt
sbb
movsl
adc
sub
cli
mov
push
icebp
add
mov
jp
loope
xchg
outsb
pop
ret
sbb
cmp
cmp
cmp
dec
mov
xor
test
push
cmp
push
or
mov
cmp
adc
mov
or
or
mov
inc
jmp
jle
cmp
ret
xchg
fnstenv
mov
push
xchg
mov
fsubs
pop
notl
sub
jo
sahf
pop
mov
sahf
inc
sbb
gs
enter
fistpl
outsl
sbb
mov
aad
mov
push
jle
sbb
js
imul
stos
inc
and
push
fdivs
mov
or
sbb
loope
sbb
divb
in
mov
pop
int
push
stos
in
mov
lea
jg
imul
sbb
xor
mov
aam
sub
xor
sub
das
fisubrs
cmp
ja
cli
addr16
ljmp
in
adc
xchg
outsb
insb
fsubl
and
push
out
push
jp
out
testb
xor
jle,pn
icebp
aas
mov
and
push
outsb
lahf
stos
adc
xor
dec
out
arpl
jae
out
jo
lea
xlat
ja
mov
test
xchg
ds
shl
pop
and
xchg
jne
push
jb
pop
cld
cmpsl
cmp
dec
mov
psrad
scas
aad
les
int3
mov
mov
das
sbb
xor
adc
loope
or
repnz
jp
or
std
mov
mov
push
push
jns
xchg
dec
mov
mov
cmp
sbb
ret
pop
mov
lods
add
notl
push
mov
inc
jecxz
xchg
data16
fnstsw
xor
pop
dec
jo
sub
push
aad
sbb
enter
test
shl
jo
jge
mov
jle
out
in
std
sub
and
ret
jge
xchg
pushf
hlt
xchg
aaa
in
adc
jns
or
sbb
dec
int3
std
cltd
test
out
pusha
pushf
push
shrl
sbb
mov
jns
outsb
cmp
aaa
repz
sub
add
mov
popa
jno
in
ds
sbb
push
shll
stc
ja
xor
cltd
test
mov
or
aad
mov
push
adc
cmp
loop
inc
mov
or
jno
test
and
lds
push
add
xor
push
dec
dec
push
dec
and
rcll
add
mov
sarb
int
add
mov
mov
ds
call
insb
mov
mov
and
lcall
mov
xchg
insl
ja
popf
nop
nop
mov
in
xor
sbb
jnp
pop
push
pop
pop
inc
call
int3
push
pop
xchg
data16
mov
jle
imul
mov
sub
mov
nop
insl
lods
xor
add
mov
or
rcrl
shlb
pop
xchg
sbb
mov
mov
aam
aaa
add
sti
shr
les
inc
mov
rcl
lahf
loopne
fistpll
xchg
pusha
popa
nop
in
dec
cmpsl
pop
inc
add
adc
mov
jl
dec
mov
pop
xor
push
syscall
ror
ljmp
movsb
fstps
add
and
push
push
scas
or
mov
dec
mov
iret
pop
hlt
mov
cltd
jns
push
mov
test
js
cmpb
cmp
cli
into
mov
mov
lahf
ss
sti
cmp
push
or
int
pop
jecxz
dec
push
mov
enter
repnz
aaa
scas
push
pop
mov
add
insb
jne
mov
sbb
mov
adcl
push
dec
fisubrs
in
popa
or
and
ret
add
cs
in
ret
push
cmp
gs
jmp
push
fldcw
popa
push
cmc
fdivl
push
negb
mov
ret
leave
cmp
push
and
xor
sub
mov
jnp
jo
dec
rclb
push
xchg
mov
shl
outsb
std
fadds
add
stos
lret
mov
icebp
mov
mov
addr16
stos
lea
jb
cmp
shlb
push
les
nop
lds
jo
add
cmp
cwtl
jns
icebp
jle
jmp
sbb
jb
jb
icebp
sub
in
push
jle
sub
add
inc
mov
sub
inc
xlat
test
in
mov
xchg
orb
mov
or
mov
clc
xchg
clc
pop
stos
cmp
adc
cwtl
test
cmpsb
repz
and
mov
mov
jns
mov
mov
xchg
aad
ss
pop
cld
or
std
sub
ret
mov
add
ja
xchg
push
xor
mov
inc
shlb
loopne
stos
mov
and
clc
fimull
mov
inc
cmc
aaa
push
jecxz
mov
sbb
mov
out
rorb
cmp
jne
test
popa
cmp
fwait
adc
pop
filds
adc
nop
dec
or
in
nop
push
jo
or
push
shrb
inc
stos
sub
pushf
and
fcomps
into
xchg
dec
inc
adc
mov
or
dec
push
loope
jo
popa
adc
and
xor
add
sbb
pop
hlt
inc
mov
or
pop
in
xchg
das
mov
inc
ja
icebp
add
inc
imull
mov
mov
push
loop
rcl
dec
adc
sub
shlb
imul
xor
mov
pop
roll
rorb
daa
sub
sahf
std
aas
imul
mov
or
mov
sahf
push
dec
xor
or
and
pop
mov
xchg
jge
xchg
ss
lods
jne
add
push
mov
jmp
mov
inc
adc
jecxz
cmp
out
call
je
or
inc
add
cmp
mov
fnstsw
icebp
pusha
push
xor
lods
mov
jecxz
mov
bound
mov
add
movsl
lods
and
ja
dec
js
jno
mov
mov
jae
insl
fdivs
mov
inc
push
add
aaa
ljmp
mov
orl
pop
lds
ja
mov
xchg
in
cmp
cmp
mov
scas
dec
shl
imul
test
sti
scas
add
jb
jmp
adc
sbb
rcl
mov
in
push
add
and
xchg
loop
fnstenv
pop
xor
and
cltd
scas
push
sbb
into
jmp
test
fs
jl
pop
enter
daa
dec
into
mov
sbb
test
inc
push
inc
xor
mov
mov
mov
call
and
jnp
xchg
inc
and
mov
inc
bnd
or
push
jno
ficoml
pop
inc
jb
xchg
mov
cld
outsl
cs
jae
addr16
xchg
mov
inc
xchg
xchg
jb
out
inc
sti
loopne
cmp
add
mov
fistps
lea
push
lods
pop
es
cli
sub
and
pop
aad
dec
mov
mov
or
das
push
popf
pushf
or
push
inc
fwait
out
xor
jecxz
idiv
addr16
pop
outsb
dec
mov
out
test
push
lock
cli
jge
sub
stc
pop
mov
pop
ret
jne
adc
addl
pop
sbb
jno
xchg
pop
push
iret
mov
aaa
nop
mov
pop
pop
dec
out
push
mov
pop
jmp
pop
pop
lret
or
xor
daa
in
sub
cmp
into
inc
xchg
fldcw
outsl
or
insb
sub
test
sub
inc
das
cmp
jno,pn
pop
adc
xchg
pop
int3
pop
cmp
xchg
and
outsb
in
pop
and
fsubl
mov
lcall
jne
push
pop
cmp
aas
pop
pop
push
gs
cmp
dec
out
pop
mov
cs
fwait
lret
pop
mov
adc
test
pusha
xchg
sbb
add
add
nop
ret
out
in
xchg
pop
mov
cwtl
icebp
xchg
pinsrw
enter
jge
jle
ficompl
std
or
cli
mov
lock
cmc
inc
shlb
jp
les
imul
add
xchg
incl
cld
inc
or
cmp
mov
mov
test
adc
fnstenv
orl
mov
test
nop
dec
es
shlb
pop
lcall
xchg
inc
mov
jl
aam
jne
or
stos
ljmp
add
adc
repz
xchg
fnstcw
arpl
jp
int
mov
inc
insb
dec
mov
xchg
addr16
mov
pop
fdivrl
pop
fisttps
inc
jge
ret
mov
mov
jg
ret
mov
lea
mov
dec
cmp
mov
in
pop
aad
pop
mov
aad
dec
mov
sub
jo
jecxz
mov
xor
adc
push
mov
pop
jg
cli
pop
ja
xor
sbb
cmp
mov
mov
push
call
xchg
test
inc
and
and
xchg
ja
xchg
and
dec
fisubs
xchg
fucomp
int
mov
lret
dec
je
or
mov
arpl
xchg
sbb
mov
mov
cmpsb
mov
or
adc
cmpsb
std
jnp
mov
leave
sahf
push
mov
mov
mov
lock
testb
sbb
xchg
push
mov
or
jmp
sbb
dec
xchg
mov
clc
ljmp
pop
fidivrs
lock
jns
call
add
mov
popa
and
inc
data16
jmp
pop
lods
out
push
dec
xchg
test
jecxz
and
insl
das
push
shr
subl
outsb
stc
inc
adc
int
loope
insb
pop
mov
and
out
push
call
mov
mov
mov
jecxz
dec
in
sbbb
or
pop
mov
xor
xchg
mulb
sub
dec
xchg
xor
mov
lret
cmp
sub
mov
inc
sbb
pop
pop
insl
mov
push
mov
cmp
mov
pop
dec
and
lds
shll
and
push
and
rep
loop
sub
leave
in
add
sub
repnz
cwtl
movsl
scas
or
repnz
dec
sbb
pop
aam
loop
pop
and
mov
cmp
stos
push
push
jnp
aaa
iret
outsb
pop
aad
mov
or
xchg
scas
leave
and
enter
sub
adc
mov
mov
mov
or
data16
ljmp
flds
repz
xor
xchg
loopne
in
hlt
mov
sub
shlb
jo
lea
rcrl
jle
cs
sbb
enter
xor
fdivs
jge
dec
sub
loope
jb
flds
iret
in
fnstsw
and
jl
out
out
std
out
dec
and
gs
jae
or
fs
pop
repz
dec
xchg
hlt
jmp
lahf
pop
mov
add
jbe
jne
fisubrs
pop
jmp
adc
pop
flds
scas
jb
dec
fucom
or
jb
out
ljmp
cltd
mov
gs
add
mov
in
in
cwtl
pushf
sub
imul
jmp
popa
cmp
movsb
pop
push
push
or
mov
lahf
ficoms
cmp
push
xchg
or
inc
push
daa
sbb
pop
clc
cmp
aad
fmull
ljmp
add
scas
ror
xchg
loope
cmp
add
ja
aas
pop
cmp
sbb
push
sub
mov
decb
sub
test
xchg
loopne
rol
and
pavgb
test
mov
daa
mov
incb
and
push
dec
mov
push
cli
jns
mov
xor
popf
rorb
andb
orl
xchg
push
cld
mov
adc
xor
lds
dec
mov
sbb
lea
cld
sub
adc
rcrl
pslld
jp
adc
add
cmp
and
pop
shrb
mov
in
sbb
mov
dec
imul
dec
lret
push
jnp
scas
mov
lods
cmp
test
xor
imull
or
insl
sbb
test
mov
shlb
test
flds
ss
mov
cmp
rcrl
or
push
xchg
ja
adc
loop
flds
shll
or
jbe
cld
mov
push
mov
dec
inc
dec
or
sub
adc
add
dec
xlat
push
dec
pop
or
inc
adc
ret
push
push
jle
mov
pop
lret
decl
push
popa
test
leave
mov
js
xchg
push
cwtl
xchg
fnsave
int3
push
sub
inc
xchg
test
scas
out
outsl
xor
cmp
test
and
cld
imul
pusha
loop
repz
ficompl
jle
ret
mov
push
les
rol
adc
adc
int
jns
lds
sbb
outsl
das
sbb
subb
idivl
xchg
add
cmp
ret
shlw
fs
inc
sbb
sahf
in
shl
lock
je
inc
leave
sub
dec
cmp
mov
add
fincstp
repz
mov
sbb
out
sub
cmpsb
scas
fs
jmp
arpl
fisubs
adc
xchg
mov
pop
int3
and
insb
sahf
xchg
add
shrb
iret
jne
adc
fs
inc
lods
dec
sbb
inc
pop
mov
xor
and
das
and
test
jne
das
rcl
fdivrs
flds
int
aad
cmp
and
xchg
xlat
and
les
push
pop
pusha
call
cmp
pop
fldl
adc
adc
andl
aad
pop
or
jno
push
mov
into
movsb
xor
arpl
mov
mov
push
repz
mov
sub
fldenv
je
mov
daa
stos
subb
lock
notl
push
mov
fiadds
arpl
xor
push
outsb
jp
outsl
in
cmovle
lds
addb
xchg
pop
lods
xchg
xor
xor
or
and
ret
mov
out
in
enter
cmp
or
lock
orb
cmp
dec
shl
dec
and
pushf
jns
xchg
mov
xor
in
push
int
or
femms
data16
add
out
sbb
mov
mov
out
fst
inc
mov
push
icebp
roll
icebp
and
mov
mov
mov
mov
sti
pop
out
add
adc
dec
xor
lret
sub
daa
out
jae
jno
xor
outsb
std
orb
cld
cmp
shlb
sti
ret
add
push
scas
out
mov
mov
dec
es
out
lods
fists
hlt
mov
lea
arpl
or
sti
push
ja
and
xchg
mov
and
sahf
xchg
jno
sub
adc
push
shll
cmp
insb
idivl
pop
sarl
sub
rorl
and
loope
out
fadd
mov
movsl
inc
mov
scas
jge
fistps
push
inc
fistpl
mov
pop
sbb
cmpsl
jecxz
sbb
and
addr16
sbb
les
stos
sub
fstpt
mov
pop
sub
xchg
push
pop
stos
adc
filds
inc
lcall
cmp
dec
dec
mov
popf
push
iret
push
pop
dec
lcall
pop
push
sbb
repnz
and
jne
cltd
fcomps
pop
jl
pusha
adc
in
push
xor
fildl
jmp
sub
test
sbb
dec
jno
in
adc
or
jecxz
mov
sahf
mov
adc
xor
fsub
push
mov
and
cld
push
mov
lea
orb
ljmp
push
fsubl
jae
dec
xchg
jmp
xchg
mov
pop
mov
sahf
lods
jp
pop
mov
out
lea
cwtl
mov
in
out
mov
xor
and
cmp
mov
jp
push
shrb
pushf
cmp
adc
lahf
fildll
maxps
outsl
das
jg
cmovg
pop
das
outsl
aas
jg
fistps
iret
lahf
fildll
maxps
outsl
das
jg
cmovg
pop
das
outsl
aas
jg
fistps
iret
lahf
fildll
maxps
outsl
das
jg
cmovg
pop
das
outsl
aas
jg
fistps
iret
lahf
fildll
maxps
js
xchg
mov
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
