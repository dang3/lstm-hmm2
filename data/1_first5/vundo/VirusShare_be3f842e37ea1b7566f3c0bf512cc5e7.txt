jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
and
and
add
and
and
add
add
add
mov
and
leave
ret
push
mov
add
and
adc
sub
leave
ret
push
mov
add
push
push
pushl
call
or
inc
movl
xor
notl
sbb
add
sbbl
sbb
leave
ret
push
mov
add
lea
push
call
push
lea
push
push
call
subl
xorl
mov
sbbl
negl
subl
notl
orl
addl
sbbl
xorl
sub
xorl
xorl
andl
decl
lea
push
lea
push
call
leave
ret
push
mov
add
leave
ret
push
mov
add
inc
add
subl
adcl
add
xorl
adc
or
notl
adc
leave
ret
push
mov
add
adc
sbb
or
orl
mov
xor
add
negl
orl
leave
ret
push
mov
add
and
pushl
pushl
push
lea
push
call
leave
ret
push
mov
add
call
pushl
call
push
push
call
leave
ret
push
mov
add
negl
andl
orl
incl
movl
and
subl
negl
adcl
add
leave
ret
push
mov
add
push
call
jmp
add
adc
and
add
add
add
add
push
mov
add
sbb
negl
notl
sbb
movl
mov
neg
adc
xor
add
andl
negl
subl
subl
sbb
sub
orl
sbbl
sub
notl
add
orl
decl
or
xor
notl
add
adc
xorl
and
adc
add
xor
leave
ret
push
mov
add
mov
push
pushl
call
leave
ret
push
mov
add
not
add
and
sbb
and
movl
incl
mov
adcl
and
and
incl
movl
mov
adc
sbb
addl
add
notl
orl
leave
ret
push
mov
add
or
neg
leave
ret
push
mov
add
addl
xor
mov
movl
incl
sub
negl
subl
adc
orl
xor
add
orl
decl
subl
mov
adc
decl
orl
or
jmp
add
and
add
add
add
add
sbb
sub
leave
ret
push
mov
add
add
addl
mov
subl
leave
ret
push
mov
add
leave
ret
push
mov
add
or
add
xor
incl
and
add
and
xorl
adcl
orl
leave
ret
push
mov
add
orl
incl
mov
sbb
incl
not
add
leave
ret
push
mov
add
lea
push
call
incl
subl
mov
add
sbbl
adcl
incl
and
xor
xor
adc
mov
orl
notl
sub
adcl
movl
incl
or
xor
mov
mov
xorl
negl
sbbl
negl
leave
ret
push
mov
add
notl
or
negl
notl
xor
xor
lea
push
call
call
leave
ret
push
mov
add
add
pushl
lea
push
lea
push
pushl
pushl
call
jmp
add
and
add
add
and
add
add
adc
push
call
push
call
or
je
leave
ret
pushl
lea
push
push
push
push
call
adc
push
push
call
push
call
push
pushl
lea
push
pushl
lea
push
call
dec
lea
push
call
pushl
lea
push
push
call
adc
lea
push
lea
push
push
pushl
pushl
call
sub
push
push
call
neg
push
push
call
push
call
push
push
pushl
push
call
push
pushl
lea
push
push
call
push
push
push
pushl
push
push
pushl
lea
push
pushl
push
push
lea
push
call
not
push
push
call
push
push
lea
push
lea
push
push
push
call
call
and
push
call
mov
leave
and
jmp
call
cmp
cmp
lret
cmp
pop
cmp
pop
cmp
pop
lret
pop
cmp
cmp
pop
cmp
cmp
sarb
pop
lret
cmp
fstps
fnstenv
jns
fcmovu
cmp
sarb
cmp
ror
cmp
sarb
pop
cmp
cmp
cmp
fstps
fnstcw
cmp
cmp
pop
cmp
lret
sarb
sbb
lock
push
add
ret
sbb
pusha
fcmovu
pop
adc
inc
fcmovu
cmp
cmp
pop
fstps
cmp
rcl
pop
cmp
lret
fstps
ror
pop
cmp
rcrb
pop
cmp
pop
cmp
cmp
ror
popa
cmp
loop
pop
loop
mov
adc
fcmovu
cmp
pop
lret
rcr
cmp
lret
pop
pop
fnstcw
fnstcw
pop
cmp
cmp
sarb
cmp
lret
cmp
cmp
cmp
cmp
fsts
int3
pop
fidivl
mov
fidivrl
lret
fnstcw
fstps
lret
sarb
lret
cmp
fxch
cmp
pop
pop
sarb
lret
fnstcw
cmp
cmp
fxch
flds
pop
fcmovu
cmp
fnstcw
lret
cmp
cmp
cmp
fstps
cmp
pop
fnstcw
lret
rcl
fnstcw
lret
cmp
lret
pop
rcr
lret
xchg
adc
rcr
lret
cmp
lret
cmp
pop
fnstcw
lret
pop
cmp
cmp
pop
pop
fnstcw
cmp
cmp
pop
pop
cmp
pop
sarb
rcr
flds
cs
adc
fidivrl
cmp
cmp
cmp
rcrb
cmp
fnstcw
lret
cmp
rcl
fnstcw
fxch
cmp
lret
cmp
pop
cmp
cmp
ror
pop
cmp
lret
rclb
imul
fcmove
dec
popa
xor
or
or
fcmove
cmp
pop
lret
pop
pop
cmp
cmp
lret
pop
cmp
cmp
fstps
pop
fnstcw
fstps
cmp
pop
fstps
cmp
cmp
cmp
pop
rcr
shlb
pop
pop
jne
mov
out
mov
fcmove
cmp
pop
sarb
cmp
pop
cmp
cmp
fstps
rcrb
cmp
pop
pop
lret
lret
lret
pop
pop
cmp
sarb
rcl
shl
inc
stc
sbb
cmp
inc
cwtl
loop
stc
adc
fcmovu
lret
pop
pop
cmp
fxch
ror
cmp
rcr
pop
cmp
lret
rcr
lret
ror
ror
pop
sarb
cmp
pop
pop
cmp
lret
xchg
adc
pop
fcmovu
pop
cmp
cmp
cmp
fstps
lret
lret
lret
cmp
cmp
fxch
cmp
pop
cmp
pop
lret
pop
cmp
pop
sbb
pop
adc
sbb
adc
sbb
lret
sarb
pop
pop
pop
lret
lret
fnstcw
rcl
fnstcw
cmp
lret
lret
lret
cmp
rcl
cmp
fxch
rcr
pop
sbb
cmp
fcmovu
lret
pop
lret
lret
sarb
pop
rcrb
rcrb
rcl
pop
cmp
pop
rcrb
pop
cmp
pop
lret
fstps
fnstcw
lret
cmp
aam
cs
nop
fisubl
push
mov
mov
adc
fcmovu
pop
pop
sarb
fnstcw
cmp
cmp
cmp
pop
sarb
pop
lret
rcrb
rcl
ror
ror
cmp
rcr
lret
sarb
cmp
cmp
cmp
lret
cmp
inc
mov
mov
sbb
aaa
fistl
jl
fcmovu
pop
cmp
lret
pop
ror
fnstcw
rcr
cmp
cmp
cmp
lret
lret
cmp
fxch
lret
cmp
fnstcw
lret
lret
add
add
adc
fstps
lret
pop
lret
rcr
lret
lret
cmp
cmp
lret
sarb
cmp
cmp
cmp
cmp
cmp
lret
pop
rcrb
popa
xchg
cltd
fcmovu
xchg
push
push
fnstcw
lret
pop
lret
cmp
cmp
fxch
lret
cmp
cmp
sarb
cmp
sarb
pop
lret
lret
lret
cmp
cmp
pop
cmp
adc
fcmovu
adc
lret
rcl
lret
sarb
cmp
lret
lret
fnstcw
cmp
fnstcw
lret
rcl
rcr
cmp
rcrb
pop
fnstcw
cmp
les
fsubl
fcmovu
lock
in
lret
adc
fcmovu
cmp
fstps
cmp
lret
pop
rcl
pop
cmp
lret
cmp
pop
cmp
pop
pop
fnstcw
pop
fstps
fnstcw
ror
lret
pop
lret
fsts
cwtl
rcr
fidivl
fsubl
dec
fcmovu
cmp
cmp
lret
lret
lret
cmp
fnstcw
lret
cmp
sarb
cmp
pop
cmp
cmp
cmp
lret
rolb
jb
fcmovu
fstps
cmp
cmp
lret
fnstcw
rcl
cmp
ror
ror
lret
rcr
pop
lret
cmp
pop
pop
sarb
cmp
lret
cmp
popa
movsb
sbb
fcmovu
ficoml
ljmp
cmp
fstps
cmp
lret
cmp
cmp
lret
pop
lret
pop
pop
pop
lret
cmp
sarb
cmp
cmp
cmp
cmp
rcrb
lahf
cwtl
fcmovu
push
test
cwtl
or
ficoml
sub
cmp
lret
cmp
pop
cmp
fxch
cmp
lret
cmp
sarb
lret
cmp
pop
lret
lret
cmp
fxch
cmp
cmp
lret
stc
fcmovu
pop
ror
pop
pop
pop
sarb
cmp
rcrb
sarb
cmp
cmp
cmp
pop
cmp
sarb
rcr
cmp
cmp
lret
lret
lret
cmp
adc
push
fcmovu
lret
fnstcw
sarb
lret
cmp
lret
lret
rcr
pop
cmp
cmp
cmp
pop
sarb
rcr
fxch
cmp
lret
adc
adc
sbb
pop
sbb
pop
add
rcr
cmp
sarb
fnstcw
pop
lret
lret
lret
lret
pop
cmp
cmp
lret
cmp
fstps
lret
fxch
cmp
rcl
inc
scas
adc
jo
fcmove
pop
cmp
rcrb
pop
pop
cmp
fstps
pop
cmp
cmp
cmp
cmp
lret
lret
pop
fnstcw
cmp
cmp
pop
lret
jns
mov
jp
stos
test
cmp
pop
lret
cmp
pop
sarb
cmp
lret
cmp
lret
cmp
cmp
cmp
fxch
cmp
cmp
cmp
fnstcw
int3
sbb
mov
jp
push
test
fidivrl
fnstcw
lret
pop
lret
sarb
pop
cmp
lret
cmp
lret
lret
cmp
cmp
lret
fnstcw
rcl
pop
fxch
pop
adc
adc
cltd
xchg
fcmovu
popa
sub
adc
push
fcmovu
sarb
sarb
rcr
fnstcw
lret
lret
cmp
rcrb
cmp
lret
lret
cmp
fnstcw
lret
cmp
cmp
pop
les
mov
aam
sub
or
leave
rcr
fcmove
lret
sarb
cmp
cmp
lret
rcr
cmp
cmp
pop
lret
ror
rcrb
cmp
lret
pop
lret
aaa
loop
loop
idivl
xchg
ficompl
pop
cmp
pop
pop
lret
cmp
cmp
sarb
sarb
pop
fnstcw
pop
lret
lret
pop
rcrb
cmp
fnstcw
fstps
sarb
popa
std
mov
fcmovb
lcall
ficoml
jne
fcmovu
lret
lret
cmp
pop
cmp
pop
cmp
rcr
cmp
fnstcw
cmp
ror
sarb
pop
cmp
cmp
pop
pop
fnstcw
lret
cmp
sarb
pop
push
loop
loop
gs
cmp
rcr
fcmovu
adc
rcr
cmp
fnstcw
cmp
sarb
cmp
pop
fxch
lret
rcr
pop
cmp
pop
sarb
lret
cmp
fstps
cmp
cmp
pop
lret
cmp
cmp
pop
sbb
fcmovu
adc
cmp
fcmovbe
cmp
cmp
lret
ror
ror
lret
rcr
pop
sarb
pop
sarb
cmp
rcr
lret
fstps
pop
cmp
cmp
rcrb
cmp
fadd
fcmovu
xchg
adc
ror
cmp
pop
lret
pop
cmp
cmp
cmp
rcrb
pop
cmp
fnstcw
fnstcw
cmp
pop
cmp
pop
pop
pop
cmp
int3
cmp
mov
jp
inc
jo
fcmovu
fnstcw
pop
cmp
cmp
cmp
pop
cmp
fnstcw
sarb
lret
rcl
rcrb
cmp
cmp
pop
pop
cmp
cmp
fldenv
addr16
fcmovu
lock
aas
inc
fcmovu
xchg
adc
ror
ror
rcl
pop
lret
sarb
pop
ror
cmp
lret
rcr
rcr
sarb
fnstcw
cmp
rcr
cmp
pop
pop
pop
pop
cmp
lret
or
dec
int3
adc
xchg
loop
cmp
fnstcw
cmp
pop
pop
sarb
cmp
fnstcw
pop
pop
rcl
pop
pop
rcl
pop
cmp
cmp
lret
cmp
fxch
pop
cmp
cmp
into
sahf
fcmovu
popa
sub
lock
add
cmp
pop
cmp
lret
fstps
cmp
rcl
cmp
cmp
cmp
lret
pop
cmp
fxch
sarb
pop
cmp
cmp
fxch
popa
into
jg
fcmovu
add
fcomp
fcmovu
mov
fcmovu
cmp
cmp
fxch
rcl
cmp
pop
cmp
lret
cmp
rcl
pop
lret
ror
fxch
lret
sarb
cmp
cmp
cmp
cmp
cmp
cmp
pop
rolb
push
cmp
lret
cmp
rcr
fstps
fnstcw
sarb
rcrb
pop
pop
ror
lret
pop
lret
cmp
lret
sarb
lret
sarb
rcl
push
adc
test
pop
lret
cmp
cmp
cmp
cmp
cmp
rcl
lret
cmp
cmp
cmp
fnstcw
fnstcw
fnstcw
pop
cmp
pop
pop
cmp
cmp
clc
jne
fcmovu
add
fcmovu
fnstcw
cmp
cmp
cmp
cmp
cmp
pop
rcrb
cmp
pop
rcr
rcl
cmp
rcr
rcr
cmp
cmp
sarb
rcl
cmp
pop
gs
cli
push
rorb
xchg
fcmovu
lret
pop
pop
rcl
rcr
cmp
sarb
cmp
sarb
lret
pop
cmp
pop
rcrb
lret
cmp
lret
rcrb
lret
adc
fcmovu
lock
ficoml
cmpsl
pop
fcmovu
pop
cmp
cmp
pop
cmp
cmp
lret
cmp
cmp
cmp
sarb
lret
cmp
lret
lret
fnstcw
cmp
cmp
fnstcw
rcl
lret
cmp
pop
adc
ficompl
pop
sarb
lret
rcrb
cmp
sarb
ror
lret
cmp
cmp
cmp
cmp
rcr
fnstcw
lret
pop
lret
pop
push
sbb
cmp
cmp
rcr
rcl
pop
cmp
cmp
cmp
pop
rcl
lret
cmp
cmp
lret
cmp
cmp
lret
cmp
pop
sarb
pop
pop
rcr
nop
fisubl
pop
cmp
fidivl
adc
rcrb
cmp
cmp
rcrb
pop
sarb
lret
pop
rcr
cmp
cmp
fxch
pop
pop
cmp
lret
lret
sarb
fxch
lret
fstps
cmp
gs
fcmovu
fcmovb
cmp
xchg
jp
fcmovu
cmp
lret
pop
lret
cmp
fxch
cmp
rcr
lret
cmp
sarb
pop
fxch
cmp
cmp
sarb
rcr
fnstcw
fxch
fxch
rcr
lret
sarb
cmp
add
fiaddl
adc
fcmovu
cmp
cmp
fnstcw
cmp
cmp
fxch
pop
cmp
fstps
cmp
pop
lret
cmp
lret
cmp
cmp
lret
sarb
cmp
les
fwait
adc
pop
fcmovu
lret
pop
cmp
lret
cmp
sarb
rcrb
rcrb
cmp
cmp
fxch
cmp
pop
lret
cmp
rcl
cmp
fnstcw
pop
sarb
loop
add
das
mov
loop
cmp
cmp
cmp
rcl
cmp
lret
ror
rcrb
rcrb
pop
fxch
cmp
rcl
fxch
cmp
lret
rcrb
push
lret
out
fistl
inc
lcall
cmp
lret
lret
cmp
pop
sarb
fxch
lret
cmp
pop
lret
pop
pop
sarb
lret
cmp
cmp
cmp
sarb
lret
jmp
fcmovu
add
pusha
fcmovu
cmp
sarb
pop
cmp
cmp
cmp
cmp
cmp
fnstcw
cmp
lret
pop
rcl
pop
lret
fnstcw
lret
pop
cmp
cmp
add
fcmovu
adc
fcmovu
lret
lret
pop
cmp
ror
cmp
lret
pop
cmp
lret
cmp
cmp
cmp
pop
pop
pop
cmp
lret
lret
pop
cmp
adc
fisubl
outsb
rcr
add
pop
fnstcw
cmp
cmp
cmp
cmp
pop
pop
pop
pop
pop
pop
lret
rcr
cmp
cmp
cmp
cmp
lret
sarb
lret
fnstcw
sarb
sbb
jmp
sti
loop
fistl
mov
loop
lret
fnstcw
fnstcw
cmp
cmp
lret
cmp
pop
lret
cmp
lret
fstps
cmp
sarb
lret
cmp
lret
cmp
lock
adc
and
fcmovu
lret
cmp
lret
fnstcw
lret
cmp
fnstcw
cmp
pop
pop
rcl
cmp
lret
sarb
cmp
cmp
cmp
cmp
rcrb
cmp
add
sbb
sbb
fidivl
xchg
fcmovu
sarb
lret
cmp
cmp
cmp
cmp
cmp
cmp
pop
fnstcw
rcr
fnstcw
cmp
fstps
pop
cmp
cmp
rcl
lret
lret
add
mov
aaa
lcall
cmp
pop
ror
cmp
rcrb
fnstcw
cmp
sarb
rcl
pop
lret
lret
sarb
pop
sarb
fnstcw
cmp
lret
cmp
cmp
fnstcw
add
pop
aam
cmp
ficoml
arpl
fcmovu
rcr
pop
lret
cmp
sarb
cmp
lret
cmp
fnstcw
cmp
cmp
pop
ror
rcr
pop
fxch
fnstcw
pop
ror
ror
pop
pop
cmp
lret
cmp
mov
loop
mov
loop
ja
add
xchg
fcmovu
pop
cmp
lret
fnstcw
cmp
cmp
rcrb
rcl
lret
pop
cmp
cmp
cmp
sarb
rcrb
cmp
lret
fnstcw
fstps
pop
pop
lret
cmp
or
xor
fcmovu
pop
lret
sarb
lret
fstps
rcr
cmp
pop
cmp
cmp
cmp
fstps
cmp
cmp
pop
cmp
lret
rcl
pop
cmp
cmp
cmp
xchg
int3
pop
ficoml
pop
pop
loop
cmp
pop
lret
cmp
cmp
pop
pop
cmp
rcr
pop
cmp
fnstcw
cmp
cmp
pop
rcrb
rcr
ror
cmp
cmp
pop
loop
mov
loop
js
ficoml
pop
js
ficompl
cmp
pop
cmp
cmp
cmp
fxch
pop
pop
sarb
lret
pop
fnstcw
rcrb
pop
cmp
rcrb
fstps
cmp
cmp
fsubl
dec
rclb
aad
loop
cmp
cmp
cmp
fstps
lret
cmp
pop
pop
cmp
lret
lret
cmp
lret
lret
lret
pop
jne
cld
mov
cwtl
rcr
fidivl
fsubl
cli
loop
cmp
cmp
lret
cmp
pop
cmp
pop
rcrb
cmp
ror
cmp
fnstcw
lret
cmp
cmp
sarb
lret
pop
pop
cmp
add
fcoms
sti
mov
cmp
pop
cmp
cmp
lret
lret
cmp
cmp
cmp
lret
cmp
lret
pop
cmp
cmp
fxch
ror
lret
lret
add
sbb
adc
fcmovu
pop
cmp
lret
fnstcw
pop
pop
pop
cmp
ror
pop
pop
cmp
pop
cmp
pop
pop
pop
lret
ror
fstps
cmp
rcr
rcl
fnstcw
fstps
aaa
mov
adc
fnstcw
lret
cmp
pop
cmp
fnstcw
lret
cmp
cmp
lret
pop
cmp
pop
sarb
cmp
pop
cmp
pop
cmp
cmp
ror
cs
and
popa
cs
jns
jmp
cmp
cmp
rcr
cmp
pop
cmp
cmp
pop
cmp
rcl
pop
rcl
pop
ror
cmp
lret
pop
cmp
fnstcw
sarb
pop
add
mov
fs
fcmovu
cmp
rcrb
cmp
cmp
cmp
lret
rcrb
sarb
cmp
fxch
cmp
lret
cmp
cmp
pop
cmp
pop
cmp
lret
pop
pop
pop
adc
loop
lock
fcmovu
popa
sub
lock
fcmovu
popa
es
ficoml
mov
fnstcw
cmp
cmp
rcl
lret
cmp
fnstcw
sarb
cmp
cmp
fnstcw
cmp
lret
fstps
fstps
cmp
fxch
sarb
cmp
lret
dec
icebp
fcmovu
loop
adc
stos
jns
fcmovu
ror
lret
lret
pop
pop
ror
lret
cmp
rcr
pop
ror
cmp
rcrb
sarb
lret
cmp
cmp
pop
pop
pop
cmp
cmp
sarb
cmp
inc
lret
pop
sbb
loop
fcoml
push
cmp
ficompl
lret
pop
cmp
sarb
cmp
lret
pop
lret
cmp
lret
cmp
lret
sarb
cmp
cmp
cmp
sarb
cmp
fnstcw
adc
popa
fcmovu
mov
fimull
cs
mov
adc
inc
loop
cmp
rcl
rcr
fnstcw
fxch
rcl
rcl
pop
pop
cmp
fnstcw
rcl
rcl
lret
lret
rcrb
pop
lret
pop
rcrb
pop
cmp
add
cmpsb
fcmovu
popa
sub
lock
cmpsb
fcmovu
popa
mov
into
push
loop
lret
cmp
lret
cmp
fnstcw
cmp
pop
fnstcw
cmp
rcrb
cmp
fnstcw
cmp
cmp
pop
cmp
pop
pop
jne
fstp
fcmovu
add
adc
fcmovu
lret
cmp
lret
pop
ror
pop
pop
fxch
rcl
cmp
lret
ror
sarb
lret
rcr
fstps
fnstcw
lret
cmp
lret
fld
adc
loop
adc
cmp
sarb
cmp
rcr
cmp
sarb
lret
ror
lret
ror
fnstcw
pop
lret
sarb
fnstcw
lret
cmp
add
sbb
sbb
rcr
cmp
fstps
rcl
cmp
pop
pop
fxch
cmp
pop
fstps
lret
fnstcw
cmp
pop
lret
cmp
fxch
fxch
cmp
rcr
rol
mov
jns
fcmovu
fnstcw
cmp
sarb
lret
cmp
pop
cmp
cmp
cmp
cmp
lret
lret
fxch
lret
lret
lret
lret
cmp
cmp
cmp
movb
mov
xchg
sub
fcmovu
pop
fnstcw
lret
cmp
rcl
cmp
cmp
cmp
pop
cmp
sarb
fstps
fnstcw
rcrb
fnstcw
ror
cmp
ror
rcl
pop
rcl
fstps
inc
jp
loop
loop
mov
fcmovu
cmp
fnstcw
pop
pop
lret
pop
lret
lret
cmp
cmp
fnstcw
cmp
rcl
cmp
cmp
pop
cmp
lret
cmp
lret
inc
scas
adc
loop
fstps
cmp
rcrb
lret
fstps
rcrb
cmp
cmp
sarb
lret
cmp
pop
sarb
cmp
cmp
cmp
cmp
lret
fstps
cmp
pop
loop
cli
sbb
cmp
fcmovu
ret
adc
fcmovu
cmp
lret
cmp
pop
pop
pop
cmp
pop
fnstcw
lret
cmp
fnstcw
lret
cmp
rcl
pop
ror
fxch
ror
rcr
add
popa
xor
adc
mov
loop
pop
cmp
pop
lret
fstps
lret
cmp
pop
pop
fstps
pop
sarb
fxch
cmp
cmp
cmp
cmp
fxch
cmp
cmp
lret
fstps
sbb
adc
fcmovu
cmp
fnstcw
lret
cmp
cmp
fstps
pop
sarb
pop
cmp
sarb
pop
fxch
fxch
cmp
cmp
fnstcw
pop
cmp
pop
cmp
cmp
sarb
cmp
aaa
pop
adc
sbb
fcmovu
lret
cmp
fnstcw
rcr
cmp
sarb
cmp
cmp
rcrb
fnstcw
cmp
cmp
rcrb
cmp
cmp
lret
fstps
fxch
pop
aam
popa
aam
popa
popa
movsb
sbb
data16
fcmovu
cmp
pop
cmp
pop
cmp
cmp
fstps
lret
pop
fnstcw
cmp
cmp
ror
cmp
pop
cmp
sarb
cmp
pop
rorb
fidivl
mov
pop
adc
fcmovu
lret
rcl
fnstcw
cmp
cmp
cmp
sarb
cmp
fstps
cmp
cmp
lret
fstps
cmp
rcl
pop
fnstcw
ror
inc
sbb
mov
fisubl
fcmovu
popa
cmp
adc
loop
rcrb
lret
cmp
cmp
pop
cmp
fnstcw
rcrb
fxch
fxch
sarb
lret
lret
rcr
lret
pop
cmp
lret
out
xchg
int3
sbb
adc
cmp
pop
cmp
cmp
pop
lret
lret
lret
pop
cmp
cmp
rcr
fnstcw
lret
cmp
fstps
cmp
cmp
rcr
sarb
fnstcw
pop
lret
pop
ret
int3
ret
adc
fcmovu
pop
lret
fnstcw
fnstcw
pop
cmp
rcrb
cmp
cmp
lret
cmp
pop
cmp
cmp
fxch
cmp
cmp
rcrb
cmp
lret
scas
fcmovu
jb
sbbb
ja
popa
xor
adc
mov
loop
cmp
cmp
pop
sarb
cmp
lret
lret
rcr
lret
cmp
sarb
rcr
cmp
cmp
lret
fld
cmp
inc
scas
cmpsl
adc
inc
loop
rcr
sarb
cmp
cmp
lret
fxch
cmp
cmp
pop
cmp
lret
fxch
cmp
lret
rcl
cmp
cmp
pop
cmp
popa
repnz
loop
xor
or
xor
in
add
ficoml
push
cmp
fcmovu
cmp
fnstcw
cmp
rcrb
cmp
cmp
ror
pop
cmp
cmp
pop
pop
cmp
fnstcw
cmp
cmp
lret
push
push
lret
rcr
fidivrl
cmp
fnstcw
rcr
pop
fxch
lret
fxch
cmp
fstps
cmp
cmp
cmp
ror
sarb
cmp
cmp
pop
pop
lret
cmp
cmp
xchg
lret
add
sbb
dec
jp
loop
pop
pop
pop
lret
cmp
cmp
fnstcw
cmp
pop
sarb
sarb
ror
cmp
lret
fxch
rcr
cmp
cmp
pop
ror
xchg
mov
pop
add
popa
xor
adc
pop
cmp
lret
rcrb
fnstcw
cmp
cmp
sarb
cmp
pop
pop
cmp
lret
cmp
pop
cmp
pop
pop
pop
cmp
cmp
flds
pushf
fcmovu
ficoml
xor
lret
cmp
fstps
cmp
lret
cmp
cmp
pop
fstps
lret
cmp
cmp
lret
lret
ror
lret
les
loop
jp
or
fcmovu
pop
lret
lret
lret
rcr
cmp
cmp
sarb
fstps
lret
cmp
cmp
cmp
cmp
pop
rcrb
cmp
cmp
fnstcw
cmp
jne
jns
push
fidivl
sbb
mov
pop
cmp
cmp
lret
cmp
cmp
ror
cmp
lret
rcrb
cmp
pop
fxch
cmp
pop
cmp
cmp
pop
fnstcw
fstps
pop
cmp
pop
aam
sbb
inc
fcmovu
rcr
fnstcw
lret
fxch
fnstcw
cmp
ror
cmp
sarb
fnstcw
cmp
cmp
lret
lret
cmp
fnstcw
lret
rcrb
cmp
lret
les
dec
jns
dec
adc
addps
mov
fcmovu
cmp
rcr
cmp
cmp
fnstcw
fstps
fstps
cmp
fnstcw
cmp
lret
pop
rcr
cmp
rcl
fstps
cmp
sarb
cmp
pop
cmp
push
sbb
in
cmp
ficompl
test
out
test
add
fidivrl
pop
cmp
cmp
pop
sarb
cmp
lret
rcrb
cmp
lret
rcr
fstps
pop
lret
fxch
lret
cmp
cmp
cmp
ret
shlb
adc
add
adc
fcmovu
pop
fxch
pop
lret
rcl
cmp
lret
cmp
cmp
fnstcw
rcl
cmp
cmp
sarb
rcr
cmp
rcr
lret
lret
cmp
pop
add
loop
fcoml
cltd
cmp
fcmovu
lret
cmp
fxch
pop
cmp
cmp
pop
lret
lret
lret
cmp
cmp
cmp
lret
fnstcw
pop
cmp
lret
lret
lret
outsl
dec
loop
lock
add
loop
or
fcmovu
cmp
rcr
cmp
fstps
pop
sarb
pop
pop
rcl
lret
sarb
lret
cmp
pop
lret
fxch
pop
pop
cmp
ror
cmp
cmp
sarb
push
sbb
push
rcr
push
aam
fwait
push
adc
loop
cmp
lret
lret
cmp
cmp
ror
lret
lret
pop
cmp
lret
pop
pop
lret
cmp
cmp
pop
lret
pop
rcl
pop
cmp
add
fcmovu
ret
movb
cli
loop
adc
loop
fnstcw
fnstcw
lret
pop
lret
pop
cmp
sarb
lret
fnstcw
cmp
lret
lret
fxch
ror
cmp
cmp
fnstcw
pop
fstps
pop
sbb
pop
adc
icebp
fcmovu
rcrb
pop
lret
cmp
pop
lret
cmp
cmp
cmp
sarb
lret
lret
cmp
rcl
ror
lret
pop
fxch
cmp
cmp
cmp
dec
fiadds
cmp
lods
popa
fcmovu
cmp
pop
cmp
rcrb
sarb
cmp
cmp
rcr
cmp
lret
sarb
pop
cmp
cmp
cmp
pop
cmp
fxch
pop
fxch
cmp
pop
cmp
popf
adc
jg
fcmovu
popa
jne
fcmovu
adc
rcrb
fnstcw
pop
ror
lret
pop
lret
lret
cmp
pop
ror
lret
rcrb
ror
rcrb
lret
sarb
lret
loop
sbb
sbb
fcmovu
fnstcw
lret
lret
lret
fxch
cmp
fxch
cmp
lret
pop
cmp
pop
cmp
fnstcw
cmp
fnstcw
lret
ror
pop
ror
lret
pop
add
popa
xor
sbb
loop
fcmovu
jl
dec
test
pop
cmp
lret
pop
fnstcw
fstps
pop
rcl
cmp
cmp
rcrb
rcrb
rcrb
lret
cmp
fxch
call
dec
loop
mov
adc
cmp
lret
lret
fnstcw
cmp
cmp
pop
lret
cmp
pop
pop
ror
cmp
cmp
fstps
cmp
cmp
lret
sbb
push
or
loop
adc
or
loop
cmp
pop
cmp
lret
ror
cmp
cmp
rcl
pop
cmp
cmp
lret
lret
pop
cmp
cmp
rcrb
cmp
ret
xchg
ret
daa
leave
fcmovu
pop
cmp
cmp
lret
pop
cmp
rcr
cmp
lret
rcr
lret
cmp
sarb
pop
sarb
sarb
lret
rcrb
cmp
lret
pop
rcrb
cmp
mov
sub
lock
sahf
fcmovu
adc
sarb
cmp
lret
fstps
cmp
lret
cmp
cmp
cmp
fxch
pop
cmp
lret
fnstcw
cmp
cmp
cmp
fxch
cmp
pushf
mov
ret
ficoml
mov
loop
cmp
rcl
lret
lret
cmp
pop
rcl
cmp
cmp
cmp
rcl
cmp
pop
cmp
lret
lret
rcl
lret
fnstcw
cmp
pop
add
lcall
ficoml
or
cmp
sarb
pop
rcrb
cmp
pop
lret
cmp
lret
lret
sarb
sarb
sarb
lret
rcl
cmp
shlb
ficompl
fxch
pop
fnstcw
lret
rcrb
cmp
pop
lret
pop
cmp
lret
pop
fstps
cmp
lret
rcr
lret
lret
add
sbb
adc
loop
lret
cmp
lret
cmp
pop
rcl
pop
fnstcw
cmp
cmp
rcl
lret
cmp
cmp
cmp
pop
pop
sarb
cmp
cmp
rcl
cmp
cmp
jo
loop
xchg
les
xor
loop
pop
lret
cmp
lret
pop
cmp
cmp
pop
pop
fstps
cmp
lret
lret
lret
ror
lret
rcl
sarb
fnstenv
cli
jne
cli
pop
adc
cmp
fcmovu
cmp
lret
ror
fstps
fnstcw
pop
lret
cmp
rcr
lret
cmp
pop
sarb
cmp
cmp
lret
ror
lret
lret
fnstcw
loop
cmp
adc
loop
mov
fcmovu
adc
loop
fstps
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
pop
cmp
lret
rcrb
sarb
rcl
cmp
cmp
fstps
cmp
out
loop
add
ret
adc
fcmovu
rcrb
lret
cmp
cmp
lret
cmp
fnstcw
cmp
ror
cmp
lret
cmp
rcrb
lret
cmp
fstps
lret
fstps
cmp
mov
jp
cmp
xchg
fstps
fnstcw
cmp
cmp
pop
cmp
fnstcw
lret
cmp
ror
cmp
sarb
rcr
lret
ror
cmp
rcl
fsts
adc
mov
ficompl
sarb
fnstcw
cmp
cmp
fnstcw
cmp
cmp
sarb
lret
pop
cmp
cmp
fxch
cmp
cmp
sarb
pop
pop
cmp
cmp
lret
scas
cmpsl
add
adc
loop
fnstcw
lret
cmp
lret
cmp
sarb
rcr
cmp
cmp
rcr
lret
cmp
cmp
lret
cmp
rcr
pop
cmp
dec
adc
ret
loop
aam
and
loop
lret
rcl
cmp
cmp
rcrb
cmp
lret
fstps
sarb
lret
rcr
cmp
fnstcw
cmp
fnstcw
pop
cmp
cmp
cmp
shlb
pop
and
inc
adc
mov
cmpsl
mov
leave
fcmovu
lret
rcrb
cmp
cmp
pop
cmp
pop
cmp
fnstcw
cmp
pop
sarb
cmp
cmp
rcrb
cmp
rcl
pop
cmp
cmp
flds
adc
dec
fcmovu
cmp
lret
cmp
pop
rcr
lret
cmp
rcr
cmp
pop
cmp
cmp
cmp
pop
lret
pop
cmp
cmp
fnstcw
lret
fxch
fldenv
pop
sub
les
jge
loop
push
adc
cmp
fcmovbe
cmp
ror
cmp
cmp
cmp
pop
cmp
rcr
sarb
pop
cmp
rcl
cmp
cmp
fnstcw
cmp
lret
lret
ds
fcmovu
cmp
add
clc
adc
dec
fcmovu
pop
cmp
rcl
fnstcw
fnstcw
cmp
pop
rcr
fstps
cmp
pop
pop
cmp
lret
lret
ror
fnstcw
sarb
cmp
pop
lret
pop
jne
cmp
dec
adc
pop
pop
cmp
lret
pop
cmp
pop
lret
cmp
fnstcw
rcr
pop
cmp
lret
pop
fxch
lret
cmp
pop
cmp
sarb
sarb
fxch
cmp
cmp
cli
push
jns
fcmovu
adc
loop
cmp
rcl
cmp
lret
rcl
cmp
sarb
fxch
sarb
cmp
cmp
pop
lret
cmp
fxch
sarb
lret
cmp
lret
pop
pop
cmp
loop
sbb
sub
fcmovu
adc
mov
cmp
cmp
cmp
rcr
sarb
cmp
pop
cmp
sarb
sarb
cmp
cmp
cmp
lret
rcl
lret
cmp
cmp
cmp
add
stc
rcr
fcmovbe
cmp
cmp
rcrb
pop
lret
cmp
fstps
cmp
cmp
cmp
lret
pop
sarb
fnstcw
lret
cmp
pop
lret
sbb
fisubl
sbb
leave
test
fisubl
cmp
leave
sub
fidivrl
lret
rcr
cmp
cmp
cmp
cmp
fnstcw
pop
pop
cmp
fnstcw
pop
cmp
pop
pop
lret
lret
rcr
cmp
pop
cmp
add
loop
adc
fcmovu
cmp
ror
rcrb
lret
cmp
pop
rcl
lret
cmp
rcl
cmp
fstps
lret
pop
pop
cmp
cmp
lret
push
loop
xchg
mov
pop
adc
cmp
fnstcw
pop
cmp
sarb
cmp
cmp
pop
lret
lret
cmp
cmp
rcr
lret
lret
cmp
rcrb
cmp
rol
adc
add
popa
xor
lcall
sarb
cmp
rcl
ror
fxch
rcrb
pop
lret
pop
pop
sarb
cmp
cmp
lret
cmp
cmp
lret
cmp
cmp
cmp
xor
out
xchg
ds
loop
sarb
pop
cmp
cmp
pop
cmp
rcrb
pop
cmp
fnstcw
sarb
lret
lret
pop
lret
cmp
cmp
ror
cmp
pop
mov
jne
jns
jne
sbb
dec
ljmp
rcrb
fstps
ror
ror
rcrb
pop
pop
lret
pop
lret
cmp
cmp
cmp
cmp
fxch
sarb
sarb
rcrb
cmp
add
ret
cmp
fcmovu
pop
lret
sarb
cmp
cmp
rcrb
pop
pop
pop
cmp
rcl
pop
cmp
cmp
pop
cmp
fstps
ror
pop
fnstcw
rcr
pop
rcrb
shlb
mov
fcmovu
loop
fistl
decl
loop
rcr
fstps
pop
pop
rcl
lret
lret
cmp
cmp
cmp
fnstcw
fnstcw
rcrb
pop
lret
sarb
lret
cmp
rcrb
fnstcw
rcr
lret
adc
fistl
fidivrl
fcmovb
adc
cmp
cmp
lret
cmp
cmp
pop
fxch
rcl
pop
cmp
ror
cmp
cmp
cmp
lret
cmp
cmp
rcr
fnstcw
rcl
rcrb
fsub
mov
loop
fistl
cmp
ror
fnstcw
pop
cmp
rcr
ror
cmp
lret
lret
lret
rcr
sarb
pop
cmp
cmp
pop
cmp
lret
pop
rcl
fstps
sarb
pop
cmp
out
adc
xchg
lret
loop
sarb
cmp
fnstcw
pop
cmp
pop
cmp
fstps
cmp
lret
cmp
pop
pop
pop
cmp
lret
lret
cmp
sarb
fnstcw
pop
cmp
lcall
aaa
mov
fisubl
pop
adc
repnz
lret
pop
lret
cmp
ror
rcl
cmp
ror
fnstcw
pop
cmp
cmp
lret
cmp
fxch
pop
rcl
rcrb
fxch
cmp
cmp
pop
lret
sarb
fildl
push
cmp
lret
lret
cmp
cmp
pop
fnstcw
lret
lret
lret
pop
lret
lret
cmp
ror
cmp
cmp
ror
push
add
fcoml
xor
loop
adc
cmp
cmp
cmp
cmp
cmp
rcl
lret
pop
pop
fnstcw
pop
cmp
sarb
cmp
rcl
lret
pop
cmp
fnstcw
loop
cmp
inc
sbb
mov
dec
loop
lret
rcrb
sarb
lret
fstps
cmp
pop
cmp
cmp
cmp
pop
rcr
pop
cmp
cmp
sarb
cmp
pop
cmp
add
popa
xor
adc
sub
fidivrl
pop
cmp
cmp
pop
pop
sarb
fnstcw
pop
cmp
pop
ror
pop
cmp
pop
cmp
pop
cmp
fnstcw
lret
rcr
pop
sarb
ror
pop
cmp
fnstcw
cmp
int3
xchg
popa
movsb
jns
add
icebp
fcmovu
fnstcw
lret
cmp
cmp
cmp
cmp
cmp
pop
fstps
cmp
ror
lret
cmp
sarb
sarb
sarb
lret
pop
fnstcw
pop
push
sbb
js
fcmovu
push
test
mov
fcmovbe
pop
sarb
pop
lret
lret
sarb
lret
sarb
sarb
rcr
rcl
cmp
rcr
cmp
ror
pop
sarb
cmp
lret
sarb
inc
or
adc
sbb
adc
fcmovu
lret
pop
pop
sarb
sarb
cmp
pop
lret
lret
lret
lret
cmp
cmp
fnstcw
pop
lret
fstps
lret
adc
loop
adc
jmp
pop
cmp
cmp
ror
lret
cmp
rcr
cmp
fnstcw
cmp
fstps
lret
ror
fnstcw
lret
fxch
lret
cmp
popa
xor
xchg
les
jg
fcmovu
cmp
pop
fstps
pop
pop
lret
pop
cmp
fxch
cmp
cmp
pop
pop
lret
ror
cmp
lret
cmp
pop
rcl
lret
pop
rcl
add
loop
fiaddl
inc
adc
loop
pop
adc
fcmovbe
rcr
sarb
rcl
sarb
pop
pop
pop
sarb
cmp
cmp
cmp
lret
rcr
rcr
lret
cmp
cmp
rcrb
cmp
sarb
cmp
fstps
fnstcw
push
ficompl
lock
fcmovu
adc
cli
loop
cmp
lret
lret
lret
cmp
pop
fnstcw
fxch
cmp
cmp
fxch
lret
lret
pop
fnstcw
cmp
cmp
rcl
fnstcw
add
lret
adc
lret
add
out
lret
fxch
fnstcw
cmp
cmp
rcrb
cmp
fnstcw
ror
fxch
fxch
cmp
cmp
cmp
lret
lret
pop
cmp
cmp
das
mov
fisubl
ret
loop
adc
stos
jecxz
loop
rcl
sarb
pop
cmp
pop
pop
fstps
cmp
lret
lret
pop
fnstcw
lret
cmp
cmp
lret
cmp
pop
rcrb
cmp
ror
rcr
pop
cmp
adc
fcmovu
fisubs
mov
loop
mov
fcmovu
ficoms
repz
loop
cmp
ror
lret
cmp
cmp
pop
cmp
cmp
sarb
rcl
fnstcw
lret
cmp
pop
cmp
ror
cmp
cmp
rcrb
or
jbe
aaa
jp
aaa
cli
fidivrl
fcmovu
popa
cmp
ds
fcmovu
ficoml
push
sbb
loop
pop
pop
cmp
cmp
rcrb
lret
cmp
pop
cmp
cmp
sarb
cmp
rcr
cmp
pop
pop
cmp
cmp
lret
lret
mov
out
adc
loop
cmp
fstps
cmp
lret
cmp
rcrb
lret
lret
pop
fxch
cmp
cmp
pop
lret
fxch
rcl
cmp
rcrb
cmp
popa
movb
les
pop
ret
loop
adc
loop
pop
pop
cmp
lret
sarb
pop
lret
pop
pop
lret
fstps
pop
cmp
cmp
pop
fxch
pop
cmp
pop
cmp
pop
rcr
loop
loop
sbb
sbb
and
ficompl
cmp
lret
lret
cmp
lret
fxch
cmp
cmp
sarb
pop
lret
lret
rcr
cmp
lret
pop
add
aam
aaa
jnp
neg
adc
loop
fnstcw
ror
fnstcw
cmp
cmp
pop
cmp
lret
rcr
lret
pop
lret
lret
cmp
pop
rcr
cmp
rcrb
fstps
pop
rcl
lret
fcoms
aaa
jns
idivb
adc
fcmovu
lret
lret
lret
rcr
lret
pop
cmp
rcrb
cmp
fstps
pop
pop
rcl
fnstcw
cmp
cmp
cmp
lret
fnstcw
add
pop
push
sbb
push
mov
loop
cmp
lret
sarb
pop
cmp
cmp
cmp
pop
cmp
pop
fstps
cmp
lret
pop
cmp
cmp
fxch
lret
lret
addb
mov
adc
xor
fnstcw
lret
lret
cmp
cmp
rcr
cmp
pop
sarb
cmp
lret
fstps
pop
fnstcw
cmp
pop
sbb
sub
pop
jne
mov
loop
lret
rcrb
rcr
ror
cmp
cmp
fxch
cmp
lret
fnstcw
rcl
lret
cmp
cmp
cmp
cmp
fxch
rcrb
cmp
fdivr
loop,pn
test
adc
stos
loop
sarb
pop
sarb
cmp
rcl
pop
sarb
pop
lret
pop
pop
sarb
cmp
cmp
pop
lret
rcrb
sarb
lret
lret
pop
adc
sbb
mov
int3
and
lret
cmp
ror
cmp
cmp
fnstcw
lret
pop
lret
lret
cmp
cmp
lret
rcl
pop
cmp
pop
cmp
cmp
rcrb
pop
xorb
popa
xor
adc
loop
sarb
lret
cmp
cmp
cmp
cmp
sarb
cmp
sarb
cmp
cmp
pop
rcl
rcrb
lret
fnstcw
fstps
sarb
cmp
lret
inc
lret
mov
mov
loop
cmp
lret
rcr
cmp
cmp
cmp
pop
sarb
sarb
cmp
cmp
lret
cmp
sarb
cmp
cmp
lret
push
sbb
bound
ficompl
ret
add
sub
loop
cmp
cmp
cmp
cmp
fxch
lret
pop
lret
cmp
lret
cmp
lret
lret
sarb
fstps
ror
cmp
mov
sbb
fcmovu
add
clc
adc
fxch
cmp
cmp
cmp
cmp
rcl
fxch
cmp
cmp
cmp
pop
pop
lret
cmp
cmp
cmp
cmp
pop
pop
cmp
pop
pop
lret
xchg
int3
jns
mov
inc
inc
loop
cmp
lret
sarb
cmp
pop
lret
rcr
cmp
rcl
cmp
lret
cmp
cmp
cmp
cmp
fstps
lret
negl
adc
sbb
loop
sarb
popa
fcmovu
pop
rcl
pop
pop
pop
pop
pop
pop
rcrb
cmp
fnstcw
fnstcw
lret
pop
lret
lret
lret
cmp
cmp
sarb
cmp
pop
ror
popa
and
loop
jns
ficoml
jl
loop
adc
adc
loop
cmp
lret
pop
cmp
rcr
rcr
pop
lret
cmp
pop
rcr
cmp
pop
cmp
fnstcw
fnstcw
cmp
lret
rcl
gs
fdivl
cld
mov
fwait
loop
pop
cmp
cmp
rcr
cmp
lret
cmp
cmp
pop
rcr
cmp
cmp
cmp
lret
pop
pop
rcrb
cmp
cmp
cmp
pop
cmp
int3
jns
mov
jp
mov
adc
lret
cmp
rcl
rcl
lret
fstps
fstps
cmp
cmp
cmp
fstps
pop
cmp
lret
lret
lret
cmp
pop
cmp
lret
sbb
fcmovu
lock
fcmovu
popa
mov
cli
xor
add
cmp
cmp
lret
cmp
cmp
sarb
rcl
cmp
cmp
pop
sarb
cmp
cmp
fstps
fnstcw
lret
cmp
fnstcw
cmp
dec
dec
les
or
cmp
cmp
cmp
pop
cmp
lret
pop
cmp
pop
cmp
pop
cmp
fnstcw
cmp
fstps
cmp
pop
cmp
pop
pop
cmp
cmp
cmp
fxch
sbb
mov
fstpt
add
ficoml
sti
adc
ror
lret
pop
cmp
rcrb
lret
cmp
rcrb
pop
rcl
pop
cmp
fnstcw
rcr
cmp
sarb
cmp
lret
fcomps
ret
aaa
pop
loop
sbb
inc
xchg
loop
sarb
fnstcw
fstps
lret
lret
fnstcw
fstps
cmp
pop
rcrb
cmp
fstps
cmp
fxch
lret
cmp
fnstcw
lret
sbb
add
fcmovu
ror
lret
cmp
pop
cmp
pop
cmp
cmp
pop
ror
cmp
cmp
fxch
fstps
sarb
rcrb
fstps
lret
cmp
cmp
les
push
sub
loop
add
lret
cmp
cmp
pop
rcrb
cmp
lret
cmp
sarb
sarb
rcrb
cmp
lret
cmp
cmp
cmp
pop
cmp
fxch
sarb
lret
fxch
pop
fnstcw
popa
xor
add
fdivrs
adc
adc
loop
pop
cmp
sarb
cmp
cmp
sarb
lret
cmp
lret
cmp
lret
lret
cmp
pop
cmp
cmp
sarb
fnstcw
cmp
mov
jp
adc
cmp
lret
cmp
fnstcw
ror
lret
fstps
cmp
fnstcw
lret
fstps
pop
cmp
rcr
cmp
fstps
rcl
pop
fstps
pop
push
out
cmp
rcr
ficoml
fimull
cmp
cmp
pop
cmp
sarb
lret
ror
cmp
rcr
fxch
pop
fnstcw
fstps
cmp
cmp
pop
rcr
lret
lret
fstps
rcrb
fstps
sbb
mov
fcmovu
push
out
cmp
loop
pop
sarb
pop
sarb
cmp
pop
cmp
fnstcw
lret
pop
cmp
cmp
sarb
cmp
rcr
sarb
cmp
lret
rcrb
cmp
cmp
cmp
lret
fcmovu
fcmovu
adc
jg
fcoml
addl
lret
pop
pop
cmp
pop
sarb
cmp
fnstcw
fstps
cmp
pop
lret
pop
sarb
lret
fnstcw
ror
lret
lret
mov
cmp
fcmovbe
xchg
dec
cmp
fisubl
lock
fiaddl
xchg
loop
pop
cmp
cmp
pop
cmp
fnstcw
cmp
cmp
rcl
fxch
sarb
cmp
ror
rcrb
pop
lret
fxch
cmp
pop
fnstcw
pop
sarb
cmp
cmp
rcl
sub
stos
jno
xor
adc
sbb
loop
pop
cmp
cmp
rcrb
sarb
cmp
rcrb
lret
lret
cmp
lret
rcrb
lret
cmp
cmp
lret
mov
jp
cmp
adc
pop
loop
rcl
pop
cmp
lret
sarb
fxch
lret
pop
cmp
pop
pop
pop
cmp
fnstcw
pop
rcr
pop
fnstcw
rcr
cmp
cmp
rcl
xchg
sub
adc
loop
pop
pop
cmp
ror
cmp
cmp
cmp
pop
pop
lret
rcr
pop
pop
cmp
lret
lret
fnstcw
ror
cmp
fstps
rolb
adc
ficoml
js
loop
adc
adc
fidivrl
rcr
fxch
sarb
rcl
rcrb
lret
ror
cmp
pop
lret
cmp
lret
fnstcw
rcr
cmp
ror
pop
pop
cmp
cmp
cmp
rcrb
lock
and
popa
movb
loop
adc
adc
lret
cmp
rcrb
lret
fxch
fnstcw
cmp
rcr
pop
cmp
sarb
cmp
lret
cmp
cmp
cmp
rol
aaa
mov
ja
adc
pop
fnstcw
pop
sarb
pop
cmp
cmp
cmp
lret
sarb
cmp
lret
cmp
cmp
pop
rcr
cmp
cmp
pop
sarb
cmp
lret
cmp
add
sbb
cwtl
repz
sarb
fnstcw
cmp
pop
pop
cmp
fxch
pop
lret
fxch
cmp
lret
cmp
cmp
cmp
cmp
cmp
pop
lret
fstps
lret
fnstcw
rolb
fcmovu
cmp
cmp
lret
lret
cmp
sarb
pop
fnstcw
cmp
cmp
cmp
cmp
cmp
pop
fxch
lret
lret
push
js
jne
mov
ficoml
loopne
loop
fstps
lret
cmp
lret
sarb
lret
pop
cmp
lret
lret
cmp
cmp
lret
pop
cmp
pop
pop
pop
fstps
pop
lret
push
or
lret
fcoml
push
repz
pop
rcr
pop
cmp
pop
cmp
pop
rcr
fnstcw
pop
pop
ror
lret
pop
pop
lret
fnstcw
cmp
fnstcw
rcl
pop
ror
fxch
rolb
dec
cli
loop
inc
adc
loop
lret
rcrb
sarb
rcrb
cmp
pop
rcr
cmp
cmp
lret
rcrb
lret
fnstcw
cmp
pop
pop
fxch
lret
rcrb
ror
push
sbb
inc
sbb
fiaddl
adc
adc
pop
lret
cmp
ror
rcl
rcr
pop
cmp
pop
fxch
lret
pop
fnstcw
cmp
rcl
lret
rcl
cmp
lret
cmp
adc
mov
dec
loop
pop
pop
fstps
lret
lret
pop
cmp
cmp
rcr
cmp
cmp
cmp
cmp
fnstcw
cmp
pop
cmp
sarb
pop
lret
les
aam
loop
adc
or
loop
sarb
rcr
cmp
pop
pop
lret
cmp
lret
ror
rcl
pop
lret
pop
cmp
pop
lret
rcr
pop
lret
pop
lret
aaa
sbb
fdivr
adc
mov
loop
cmp
pop
pop
cmp
cmp
pop
pop
lret
lret
lret
cmp
rcr
cmp
pop
rcr
pop
pop
lret
cmp
pop
ror
lret
lret
les
jb
loop
lret
cmp
rcr
pop
lret
cmp
pop
cmp
lret
cmp
lret
cmp
cmp
lret
sarb
cmp
inc
stc
sbb
xchg
loop
loop
cwtl
adc
lret
lret
pop
lret
pop
fnstcw
lret
fnstcw
lret
cmp
cmp
lret
fnstcw
cmp
cmp
lret
cmp
cmp
pop
ror
pop
flds
sti
adc
loop
lret
ror
cmp
pop
ror
cmp
cmp
pop
lret
pop
sarb
cmp
lret
sarb
ror
rcl
pop
sarb
cmp
cmp
rcl
lret
jp
cmpsl
add
sti
loop
cmp
lret
ror
cmp
cmp
lret
lret
cmp
cmp
sarb
rcr
pop
pop
cmp
lret
pop
fstps
lret
pop
fxch
pop
lret
shlb
add
fiaddl
jns
mov
loop
sarb
cmp
pop
rcr
fnstcw
cmp
cmp
fnstcw
cmp
cmp
sarb
pop
lret
cmp
cmp
cmp
ror
cmp
lret
sarb
add
xor
add
push
loop
fxch
lret
cmp
rcrb
cmp
pop
cmp
cmp
rcl
lret
pop
fnstcw
rcrb
lret
rcrb
fnstcw
cmp
cmp
cmp
lret
lret
add
jmp
loop
rcl
cmp
pop
ror
fxch
cmp
lret
cmp
lret
fxch
pop
cmp
cmp
lret
cmp
cmp
fnstcw
fdivp
pop
fisubl
inc
xor
ficoml
lods
fnclex
loop
cmp
cmp
lret
sarb
cmp
fnstcw
pop
rcrb
rcrb
sarb
cmp
lret
pop
lret
pop
cmp
pop
cmp
cmp
add
xchg
mov
cmp
pop
pop
cmp
cmp
rcr
sarb
rcr
lret
lret
lret
pop
cmp
lret
cmp
cmp
lret
cmp
sbb
loop
adc
lcall
loop
sarb
lret
cmp
sarb
ror
cmp
fstps
sarb
pop
lret
ror
pop
cmp
cmp
cmp
sarb
lret
fnstcw
shl
mov
jne
lcall
lret
pop
fnstcw
fnstcw
cmp
pop
cmp
cmp
pop
cmp
lret
lret
cmp
cmp
sarb
fnstcw
pop
pop
cmp
sbb
sbb
ficompl
inc
push
add
das
mov
loop
pop
adc
loop
cmp
cmp
cmp
cmp
pop
cmp
fnstcw
pop
cmp
lret
lret
cmp
pop
cmp
cmp
lret
fxch
pop
cmp
fxch
lret
fnstcw
rcrb
cld
jns
inc
pop
adc
loop
rcr
sarb
rcr
cmp
pop
pop
sarb
fxch
pop
cmp
cmp
fnstcw
cmp
cmp
fnstcw
lret
fxch
lret
pop
ror
cmp
pop
pop
sarb
or
mov
loop
cmp
lret
pop
lret
pop
pop
cmp
fxch
lret
sarb
sarb
cmp
cmp
cmp
cmp
lret
cmp
pop
sarb
cmp
lret
ficompl
fiaddl
and
fxch
pop
rcrb
fstps
cmp
cmp
pop
cmp
rcr
cmp
rcl
lret
cmp
pop
fnstcw
pop
sbb
mov
sbb
loop
lret
sarb
rcrb
fnstcw
fxch
cmp
rcr
fnstcw
cmp
cmp
pop
fnstcw
cmp
pop
rcrb
cmp
cmp
fnstcw
cmp
sarb
cmp
idivb
loop
ficoml
leave
mov
loop
pop
lret
lret
sarb
cmp
ror
rcr
lret
fnstcw
sarb
cmp
cmp
lret
cmp
lret
fstps
cmp
lret
popa
jmp
adc
push
ret
loop
lret
lret
lret
pop
fnstcw
cmp
fnstcw
cmp
cmp
sarb
lret
sarb
sarb
cmp
ror
pop
cmp
rcr
fxch
rcr
loop
mov
jbe
loop
adc
or
loop
cmp
fxch
cmp
lret
pop
pop
fnstcw
cmp
lret
rcrb
pop
cmp
fnstcw
pop
cmp
sarb
lret
inc
scas
adc
loop
pop
fnstcw
fstps
ror
cmp
cmp
cmp
lret
lret
lret
cmp
ror
pop
rcr
fstps
cmp
cmp
pop
fnstcw
cmp
pop
push
ficompl
sbb
pop
sub
ficompl
lods
loop
inc
adc
sarb
lret
ror
sarb
lret
rcr
fnstcw
cmp
pop
fstps
lret
pop
cmp
pop
lret
pop
cmp
cmp
cmp
pop
rolb
fcomps
loop
lret
sarb
fnstcw
cmp
cmp
cmp
rcr
cmp
cmp
cmp
lret
rcl
lret
fxch
cmp
fnstcw
shl
jmp
sub
adc
mov
loop
cmp
cmp
fnstcw
rcl
lret
lret
cmp
sarb
pop
lret
fnstcw
cmp
sarb
lret
cmp
cmp
cmp
cmp
cmp
pop
cmp
shlb
lcall
pop
cmp
lret
cmp
lret
cmp
rcr
pop
pop
pop
pop
fnstcw
lret
cmp
cmp
pop
pop
rcr
cmp
cmp
into
loopne
loop
out
xchg
lahf
xor
fidivrl
pop
cmp
cmp
fstps
lret
lret
fnstcw
cmp
fstps
lret
lret
cmp
cmp
fnstcw
cmp
cmp
fxch
push
sbb
sub
fcmovu
adc
mov
loop
cmp
cmp
cmp
pop
rcl
cmp
lret
cmp
cmp
pop
lret
sarb
pop
pop
cmp
cmp
cmp
cmp
cmp
cmp
pop
lock
jb
loop
xchg
adc
push
loop
cmp
sarb
rcrb
pop
lret
sarb
fstps
fnstcw
cmp
cmp
sarb
pop
pop
cmp
cmp
sarb
cmp
sarb
lret
fnstenv
lret
mov
sbb
loop
add
and
loop
cmp
cmp
ror
pop
cmp
cmp
lret
cmp
cmp
pop
lret
lret
sarb
sarb
cmp
cmp
lret
cmp
sarb
cmp
add
popa
xor
adc
or
fidivrl
sarb
fnstcw
cmp
cmp
cmp
lret
cmp
cmp
cmp
cmp
pop
lret
lret
sarb
fnstcw
lret
cmp
cmp
sarb
lret
popa
xor
add
movsb
mov
loop
lret
rcr
fnstcw
cmp
cmp
cmp
lret
cmp
rcrb
cmp
cmp
pop
cmp
ror
sarb
cmp
pop
pop
mov
xchg
loop
cmp
loop
lret
pop
cmp
rcl
lret
cmp
lret
sarb
rcrb
fnstcw
pop
cmp
cmp
lret
ror
cmp
cmp
lret
cmp
cmp
xor
fcmovu
les
cmp
adc
jnp
loop
pop
fstps
pop
rcr
cmp
rcr
cmp
pop
pop
fnstcw
cmp
lret
cmp
fxch
cmp
cmp
fnstcw
lret
lret
sbb
ret
push
cs
lret
bound
loop
pop
cmp
rcrb
cmp
cmp
rcr
cmp
lret
fnstcw
rcrb
lret
cmp
pop
pop
pop
cmp
lret
lret
movsb
mov
dec
cmp
fidivrl
stos
loop
cmp
pop
fnstcw
cmp
cmp
fnstcw
fnstcw
pop
lret
lret
pop
cmp
rcrb
cmp
cmp
lret
fstps
lret
cmp
ror
adc
add
cwtl
lods
fcmovu
fcoml
pusha
inc
loop
pop
fnstcw
ror
pop
pop
rcrb
fxch
cmp
cmp
cmp
lret
pop
lret
rcr
ror
pop
cmp
cmp
cmp
rcr
pop
cmp
lret
sbb
cmp
loop
adc
pop
lret
pop
rcr
cmp
cmp
pop
lret
cmp
pop
pop
rcl
fxch
rcr
rcl
lret
cmp
lret
lret
mov
adc
add
loop
sarb
pop
lret
cmp
cmp
lret
lret
cmp
cmp
cmp
cmp
cmp
cmp
rcr
lret
pop
cmp
fxch
cmp
pop
pop
les
jae
loop
lock
scas
fcmovu
adc
jae
loop
pop
cmp
cmp
cmp
cmp
cmp
lret
pop
pop
cmp
lret
cmp
ror
cmp
cmp
cmp
cmp
lret
lret
sbb
dec
xchg
jne
cld
mov
mov
loop
cmp
sarb
cmp
rcl
cmp
rcr
cmp
fxch
rcrb
fxch
fnstcw
cmp
rcr
rcl
cmp
fxch
rcl
rcrb
rcl
lret
rcrb
cmp
mov
pop
loop
mov
loop
aaa
cli
pop
fcmovu
ficoml
pusha
and
loop
lret
fxch
lret
lret
fstps
pop
pop
sarb
cmp
cmp
fstps
lret
rcl
lret
lret
rcr
ror
pop
lret
adc
pop
loop
lock
jae
loop
mov
add
loop
cmp
lret
rcrb
cmp
pop
lret
pop
fnstcw
pop
pop
lret
cmp
rcr
pop
cmp
cmp
cmp
pop
sarb
lret
lret
sub
lock
xchg
fcmovu
popa
push
fcmovu
xchg
adc
cmp
rcrb
cmp
rcr
cmp
fnstcw
cmp
ror
cmp
pop
fxch
lret
fxch
pop
cmp
lret
cmp
lret
pop
cmp
lret
pop
cmp
lret
cmp
imul
loop
aaa
cli
adc
lcall
lret
lret
cmp
cmp
fstps
pop
fxch
cmp
pop
pop
lret
sarb
cmp
cmp
cmp
cmp
rcr
pop
sarb
cmp
pop
sarb
rcr
cmp
add
loop
xorb
cmp
ret
adc
cmp
lret
sarb
cmp
cmp
sarb
cmp
cmp
lret
lret
pop
cmp
pop
lret
cmp
lret
ja
add
lret
rcrb
lret
sarb
cmp
sarb
lret
cmp
pop
cmp
lret
cmp
cmp
pop
cmp
pop
pop
rcrb
cmp
cmp
pop
pop
push
fcmovu
fcmovu
jne
jns
jne
sbb
gs
fidivrl
pop
fstps
fnstcw
lret
pop
pop
sarb
fstps
rcrb
cmp
lret
cmp
cmp
fnstcw
cmp
cmp
pop
lret
pop
cmp
cmp
cmp
lret
fsts
int3
sbb
mov
jp
add
loop
sarb
lret
cmp
cmp
pop
pop
pop
ror
lret
lret
pop
cmp
fxch
pop
pop
sarb
cmp
fxch
lret
pop
cmp
rcrb
pop
cmp
rcrb
loop
pop
pop
push
adc
cmp
cmp
cmp
pop
rcr
cmp
pop
pop
cmp
lret
cmp
cmp
cmp
cmp
lret
cmp
cmp
sarb
rol
fdivr
loop,pn
or
fsubrs
adc
loop
pop
fnstcw
fxch
lret
pop
cmp
cmp
pop
fnstcw
cmp
lret
sarb
cmp
pop
lret
fnstcw
cmp
sarb
pop
lret
cmp
fcmovu
fiaddl
clc
adc
loop
cmp
cmp
cmp
sarb
rcl
lret
ror
lret
cmp
lret
lret
pop
rcl
lret
ror
pop
flds
mov
adc
mov
cmp
rcl
cmp
pop
pop
fxch
fnstcw
pop
sarb
fstps
fstps
rcrb
fxch
cmp
cmp
fstps
cmp
popa
sub
lock
xchg
fcmovu
popa
push
mov
loop
adc
mov
loop
fnstcw
cmp
pop
fnstcw
lret
pop
lret
cmp
fxch
cmp
pop
rcl
pop
sarb
pop
cmp
sarb
cmp
lret
pop
cmp
rcr
cmp
cmp
loop
cwtl
gs
sti
adc
inc
loop
pop
lret
cmp
lret
rcrb
lret
rcl
lret
cmp
rcr
fxch
cmp
rcr
lret
fstps
cmp
pop
pop
cmp
lret
int3
cmp
mov
jp
test
fnstcw
lret
lret
cmp
lret
pop
pop
pop
cmp
cmp
cmp
pop
cmp
ror
pop
rcrb
rcrb
rcrb
ds
ficompl
fcmovu
fcmovu
xchg
or
fcmovu
adc
stos
loop
cmp
pop
cmp
ror
cmp
sarb
fstps
fnstcw
lret
rcr
fnstcw
fstps
pop
rcrb
sarb
pop
cmp
fxch
fsts
push
aaa
pop
mov
loop
mov
sbb
dec
shrl
loop
cmp
cmp
pop
cmp
fstps
pop
fxch
cmp
cmp
cmp
cmp
pop
rcrb
rcr
fstps
cmp
pop
cmp
ror
rcl
cmp
ror
add
int3
jns
adc
rcr
fidivrl
cmp
lret
cmp
cmp
lret
fxch
cmp
sarb
cmp
fstps
sarb
lret
lret
pop
pop
cmp
cmp
pop
fld
dec
add
cli
adc
push
loop
rcl
pop
rcrb
cmp
cmp
ror
cmp
cmp
pop
pop
lret
cmp
cmp
cmp
rcrb
cmp
cmp
lret
cmp
sub
lcall
cmp
pop
fnstcw
lret
cmp
cmp
cmp
lret
lret
cmp
cmp
fnstcw
fxch
rcl
cmp
cmp
fnstcw
lret
pop
cmp
cmp
adc
fcmovu
add
popa
xor
adc
sbb
loop
fnstcw
cmp
fnstcw
ror
fxch
lret
fstps
pop
pop
pop
cmp
cmp
lret
pop
cmp
pop
pop
cmp
pop
lret
pop
rcl
cmp
mov
popa
xor
ret
mov
pop
sarb
rcr
cmp
ror
ror
rcrb
pop
fnstcw
cmp
pop
pop
fxch
cmp
lret
lret
fnstcw
lret
pop
pop
mov
jp
inc
fcoml
stos
push
loop
cmp
cmp
pop
cmp
lret
cmp
rcr
ror
fstps
ror
cmp
pop
lret
ror
rcl
sarb
sarb
pop
fnstcw
cmp
lret
lret
cli
fcmove
fcmovu
popa
cmp
sbb
fcmovu
ficoml
and
mov
fcmovu
ficoml
cmp
loop
lret
fxch
cmp
fxch
lret
rcrb
cmp
sarb
sarb
lret
cmp
pop
lret
ror
rcr
cmp
ror
lret
pop
loop
jnp
mov
adc
loop
ror
pop
lret
lret
pop
fnstcw
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
lret
cmp
sarb
sarb
rcl
cmp
sarb
cmp
loop
sbb
lea
push
ret
out
fsub
loop
pop
lret
lret
pop
cmp
fnstcw
pop
cmp
cmp
cmp
fnstcw
cmp
sarb
cmp
lret
cmp
pop
lret
sarb
pop
lret
pop
adc
loopne
loop
lret
fnstcw
cmp
cmp
fxch
pop
rcl
cmp
cmp
lret
lret
fxch
rcl
pop
lret
cmp
lret
pop
pop
pop
inc
fcompl
adc
loop
popa
xchg
xchg
loop
adc
loop
cmp
cmp
cmp
cmp
fnstcw
cmp
pop
lret
pop
pop
pop
rcrb
ror
cmp
lret
pop
lret
pop
pop
cmp
rcrb
push
loop
inc
adc
and
loop
adc
mov
cmp
pop
fnstcw
lret
pop
rcrb
lret
pop
cmp
sarb
lret
ror
cmp
sarb
cmp
lret
fstps
cmp
fstps
pop
pop
cmp
lret
add
cmp
cmp
lret
pop
fstps
fnstcw
cmp
lret
cmp
rcrb
lret
cmp
cmp
pop
lret
cmp
lret
ret
test
lods
jp
loop
fcoml
gs
loop
lret
lret
pop
cmp
cmp
cmp
cmp
pop
rcl
pop
pop
lret
cmp
cmp
pop
cmp
pop
fstps
mov
gs
cltd
loop
pop
gs
stc
adc
loop
cmp
fxch
cmp
pop
fxch
fstps
rcl
rcl
cmp
cmp
fxch
lret
pop
lret
cmp
cmp
cmp
pop
sarb
fxch
pop
popa
lods
notl
or
loop
idivb
adc
xor
loop
pop
cmp
cmp
cmp
cmp
pop
cmp
cmp
sarb
cmp
pop
pop
cmp
pop
pop
cmp
pop
sarb
lret
cmp
cmp
int3
cmp
mov
jp
fcomps
ficompl
ficoml
mov
loop
lret
cmp
cmp
fxch
rcl
fxch
pop
rcr
pop
rcl
sarb
pop
cmp
lret
cmp
pop
lret
ror
cmp
fnstcw
cmp
sarb
pop
fnstcw
popa
adc
jp
adc
rcr
cmp
pop
pop
cmp
lret
pop
lret
cmp
cmp
cmp
ror
cmp
pop
cmp
cmp
lret
lret
pop
shl
insb
xchg
fcmovu
popa
sub
lock
xchg
fcmovu
popa
jp
loop
xchg
jecxz
loop
fnstcw
cmp
cmp
sarb
cmp
cmp
cmp
cmp
lret
fstps
lret
fstps
fstps
rcl
pop
sarb
sarb
pop
rcr
rcr
pop
fld
adc
loop
lock
xchg
fcmovu
adc
loop
cmp
cmp
lret
rcl
pop
lret
lret
lret
fnstcw
lret
lret
fstps
pop
pop
cmp
fnstcw
fstps
cmp
loop
add
loop
fistl
xchg
loop
cmp
pop
pop
cmp
cmp
pop
fnstcw
lret
rcrb
cmp
rcl
cmp
sarb
sarb
pop
lret
fnstcw
cmp
cmp
fxch
cmp
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
adc
add
add
add
and
and
adc
add
add
add
adc
add
add
adc
add
add
mov
leave
ret
push
mov
add
sbb
and
jmp
and
and
adc
add
adc
and
add
add
add
and
and
add
and
and
add
and
adc
call
leave
ret
push
mov
add
jmp
add
add
add
and
adc
and
add
add
and
add
add
and
adc
and
add
add
add
add
add
adc
add
mov
mov
xor
ror
rol
not
sub
neg
jmp
add
adc
adc
and
add
and
adc
add
and
adc
add
add
add
add
add
add
and
add
add
add
add
ret
push
mov
add
adcl
or
notl
jmp
add
add
and
adc
add
and
add
and
and
and
add
add
and
and
add
add
adc
sbb
subl
and
subl
mov
notl
orl
subl
jmp
add
add
add
and
add
add
and
and
add
and
add
add
add
add
add
and
add
add
add
add
add
add
add
and
xorl
adcl
jmp
and
add
add
adc
add
and
add
add
add
add
adc
add
and
add
and
add
push
push
pushl
push
call
notl
orl
xorl
jmp
adc
add
add
adc
add
add
add
add
add
add
adc
add
add
and
add
add
add
add
dec
ret
push
mov
add
not
jmp
add
and
add
add
add
and
adc
adc
add
and
add
add
add
and
add
adc
and
add
add
mov
add
push
pushl
call
leave
jmp
adc
and
add
and
adc
add
add
adc
add
adc
and
add
and
add
add
adc
adc
sbbl
movl
sbb
adc
sub
neg
leave
jmp
adc
add
add
add
adc
add
and
add
add
add
add
adc
add
adc
and
add
and
add
inc
mov
dec
jns
sub
sbbl
orl
and
addl
jmp
add
adc
add
and
and
and
and
and
add
add
and
add
add
and
adc
add
and
and
add
and
or
sub
orl
leave
ret
jmp
add
add
add
and
add
and
and
add
add
and
and
and
and
and
and
and
add
adc
add
push
mov
add
sbb
xorl
movl
sbbl
adc
jmp
add
add
add
and
and
add
adc
add
add
and
add
adc
add
adc
add
adc
add
and
and
and
add
incl
lea
push
pushl
pushl
push
call
leave
jmp
add
add
add
add
add
and
add
and
add
and
and
adc
add
adc
adc
and
and
or
push
push
call
leave
ret
push
mov
add
jmp
add
add
adc
add
adc
and
adc
adc
add
and
adc
and
add
add
add
and
xlat
sbb
add
inc
push
jo
add
sub
sbb
jmp
and
adc
add
and
add
add
add
add
add
adc
add
adc
adc
add
add
and
add
add
or
push
mov
add
jmp
add
add
and
and
and
add
add
add
and
add
adc
add
and
and
add
and
and
orl
leave
ret
push
mov
add
add
inc
jmp
add
and
and
and
and
add
adc
add
add
adc
adc
and
add
add
add
and
add
inc
add
adc
dec
subl
decl
addl
sbbl
and
jmp
add
add
adc
and
add
and
and
add
add
add
adc
add
add
adc
adc
and
call
orl
adcl
addl
sub
jmp
add
add
add
and
add
add
adc
adc
and
add
add
and
and
add
adc
and
leave
ret
push
mov
add
jmp
and
add
and
add
adc
add
add
add
adc
and
adc
adc
add
add
adc
adc
add
add
call
push
push
call
push
pushl
lea
push
push
call
jmp
adc
add
add
add
adc
and
add
add
add
and
and
add
and
and
adc
add
and
add
and
sub
addl
subl
incl
mov
jmp
adc
add
add
add
adc
add
add
and
and
and
add
add
add
and
adc
and
add
and
add
lea
jmp
inc
cwtl
xorl
adcl
mov
movl
add
adcl
jmp
adc
add
adc
add
add
add
add
and
and
add
add
add
adc
add
add
adc
adc
notl
orl
addl
sbbl
leave
ret
push
jmp
and
adc
and
and
add
adc
adc
add
and
and
adc
add
add
add
adc
add
adc
add
jne
movb
fadds
popa
add
add
add
add
and
adc
adc
add
and
and
and
add
add
add
add
add
adc
and
and
add
incl
jmp
add
adc
adc
add
add
and
adc
add
add
adc
and
add
add
and
add
add
call
push
pushl
lea
push
call
jmp
add
add
and
adc
and
adc
and
add
adc
and
add
and
and
add
add
and
add
lea
incl
pushl
lea
push
pushl
lea
push
call
jmp
add
add
add
add
and
and
add
and
add
adc
and
and
adc
adc
add
and
andl
movl
movl
sbb
xor
incl
sub
jmp
adc
add
and
and
add
add
add
adc
add
add
and
and
add
add
add
and
add
adc
pop
idiv
ljmp
push
call
movzwl
cmp
je
ret
push
jmp
and
adc
and
add
add
adc
add
and
and
and
and
add
add
and
and
adc
add
add
ret
push
mov
add
jmp
add
add
add
and
adc
add
and
add
add
adc
and
add
adc
adc
adc
adc
and
adc
add
add
and
dec
mov
mov
sub
sub
not
cmp
jne
jmp
and
add
add
add
add
adc
and
add
adc
add
add
add
add
and
adc
add
add
ret
push
mov
add
leave
ret
push
mov
add
jmp
add
and
add
add
and
add
add
add
and
and
and
add
add
and
and
add
or
sub
or
adcl
decl
jmp
and
add
add
add
add
adc
add
and
and
adc
add
and
add
and
and
add
and
add
leave
ret
push
mov
jmp
and
adc
adc
and
and
add
add
and
add
add
and
add
add
add
add
and
and
add
xchg
js
incl
push
jb
push
test
insl
test
adc
sbbl
and
jmp
add
add
add
and
and
add
add
and
adc
and
add
adc
and
and
add
add
add
add
add
adc
add
add
add
inc
sub
inc
neg
jmp
and
add
add
add
add
adc
add
and
add
add
adc
and
add
add
add
and
add
and
add
cmp
mov
xor
negl
notl
notl
jmp
add
add
add
add
add
add
and
add
add
add
adc
add
add
add
add
add
add
adc
and
and
add
pushl
push
lea
push
call
orl
movl
xorl
mov
jmp
add
add
and
and
adc
add
adc
and
add
add
add
add
add
and
add
adc
and
adc
and
add
negl
andl
call
leave
ret
push
mov
jmp
and
adc
add
add
and
adc
and
add
add
add
add
add
add
and
add
and
and
adc
adc
jmp
gs
inc
aam
jne
fs
insb
add
inc
movsb
leave
ret
push
jmp
add
adc
add
add
add
add
add
and
and
and
add
add
add
and
and
add
add
push
push
pushl
push
call
call
jmp
add
add
and
and
add
add
add
adc
and
adc
and
add
adc
and
and
add
add
add
add
add
and
add
add
lea
push
push
pushl
call
push
push
jmp
adc
add
adc
add
and
adc
and
add
and
add
add
add
and
add
and
and
push
push
call
pushl
pushl
call
lea
push
push
jmp
add
add
add
and
and
add
and
and
add
add
and
add
add
add
and
add
adc
add
add
add
ret
push
mov
add
call
xor
lea
push
jmp
and
and
add
adc
add
add
add
and
add
add
and
adc
add
adc
add
adc
adc
and
push
push
lea
push
call
call
push
push
call
pushl
jmp
add
add
add
adc
add
and
add
and
add
add
add
and
add
adc
add
add
and
adc
adc
add
push
rolb
add
inc
xorb
add
ret
jmp
and
and
and
adc
and
and
add
add
add
adc
add
adc
and
and
add
add
and
add
add
add
adc
push
push
push
push
jmp
and
add
add
add
add
add
add
and
and
and
and
add
add
and
adc
adc
and
and
and
pop
nop
xor
inc
call
incl
pop
xchg
mov
andl
add
jmp
adc
add
adc
add
add
and
and
and
add
adc
and
adc
adc
add
and
add
add
and
sub
leave
ret
push
mov
add
adc
decl
leave
jmp
add
adc
add
add
and
and
add
add
add
and
and
add
and
add
add
add
add
add
and
notl
xor
add
adc
adc
jmp
add
add
add
and
and
adc
add
add
and
and
add
add
add
add
add
add
and
add
into
add
add
add
and
and
adc
add
and
adc
adc
and
add
and
and
and
and
add
adc
add
adc
and
lea
push
pushl
push
call
call
push
pushl
lea
push
lea
push
jmp
and
adc
adc
adc
add
add
add
adc
and
and
add
add
add
and
add
add
and
ret
call
lea
push
push
call
pushl
jmp
and
add
add
and
add
add
add
and
add
and
and
and
add
adc
adc
add
and
push
mov
add
andl
mov
xorl
jmp
add
add
and
adc
add
and
adc
add
and
and
and
and
add
adc
and
and
and
and
and
mov
adcl
sbb
adc
jmp
adc
add
and
add
adc
add
and
add
and
adc
add
and
and
adc
add
add
add
add
add
inc
and
call
pushl
lea
push
call
jmp
and
add
add
and
adc
and
and
adc
add
add
add
add
add
adc
and
add
leave
ret
push
mov
add
leave
jmp
and
and
add
adc
add
and
add
add
and
and
adc
and
adc
and
and
and
and
and
add
and
ret
push
mov
add
adc
sub
sbb
add
adc
jmp
adc
and
add
adc
and
adc
and
adc
add
and
add
add
adc
add
adc
and
add
mov
sbbl
mov
mov
addl
and
jmp
add
and
add
add
and
adc
and
and
add
add
and
add
add
adc
and
add
and
add
lea
push
push
call
lea
push
push
call
push
jmp
and
and
adc
and
add
and
add
add
add
and
add
add
and
adc
add
add
and
add
and
and
call
leave
ret
push
mov
add
jmp
adc
add
adc
adc
add
adc
add
add
add
and
and
adc
and
add
add
add
add
add
add
add
sub
mov
adc
adc
xor
and
adc
mov
jmp
and
add
and
add
and
and
add
and
adc
and
add
add
and
add
add
adc
add
in
add
addl
and
jmp
adc
and
and
add
add
add
and
add
and
add
add
add
adc
add
and
and
and
add
add
push
mov
leave
ret
push
mov
add
leave
ret
jmp
add
and
add
and
add
and
and
add
and
adc
add
and
and
adc
and
and
adc
adc
and
add
lea
lea
mov
sub
sbb
mov
mov
jmp
and
add
add
add
add
adc
and
adc
add
and
add
add
and
add
add
and
add
call
push
push
call
jmp
add
and
add
adc
add
add
adc
add
add
add
add
adc
add
add
add
adc
push
mov
add
incl
andl
mov
and
pushl
pushl
jmp
adc
and
add
add
and
add
add
add
and
add
and
and
and
add
adc
add
and
adc
xchg
sbbl
leave
ret
jmp
add
and
add
and
adc
and
and
add
add
add
add
add
adc
add
and
and
and
