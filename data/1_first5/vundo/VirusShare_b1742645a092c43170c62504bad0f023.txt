add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
js
je
jb
popa
add
add
add
add
sub
add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
add
add
sub
dec
add
and
push
add
jb
imul
add
inc
add
outsb
add
add
insb
add
add
popa
add
add
add
add
imul
add
jo
pop
add
imul
outsl
add
dec
add
je
jb
imul
add
push
add
add
add
add
arpl
outsl
add
and
push
add
jp
add
add
push
add
add
insl
add
insb
add
add
arpl
outsl
add
and
push
add
jp
add
add
add
jne
inc
add
jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sub
sbb
push
je
out
pop
adc
ljmp
jle
mov
sahf
data16
sbb
dec
out
pop
shrb
es
outsb
fidivrl
sub
pop
cwtl
xor
enter
xchg
push
in
int3
into
push
cltd
cmp
sbbl
jbe
or
jae
outsb
sarl
insl
jno
in
test
aad
xchg
cli
push
into
xchg
fidivs
mov
lahf
inc
inc
push
adc
add
loop
shll
adc
in
xor
out
jg
or
mov
push
imul
cli
mov
out
testb
mov
mov
pop
jae
mov
aas
adc
xchg
fiaddl
aad
aaa
arpl
push
xchg
std
repnz
das
roll
mov
scas
and
dec
xor
cmpsl
popa
or
in
xchg
adcl
dec
add
outsb
push
addr16
adc
add
ficompl
mov
dec
out
cld
insb
insb
push
and
mov
jbe
dec
inc
mov
jle
mov
fwait
pop
mov
out
mov
pop
cwtl
or
addr16
fnstsw
add
int
outsl
call
push
xchg
add
or
imul
sarb
cmpb
out
pop
stos
push
mov
ds
jle
mov
sahf
or
jp
dec
out
pop
stos
push
mov
ds
jle
mov
movsl
test
leave
xchg
xor
jmp
xchg
cmp
scas
lds
rorb
adc
lret
jmp
and
mov
aam
cmp
call
push
dec
ljmp
mov
push
jl
mov
adc
push
and
xor
mov
mov
ret
xchg
out
add
cmpsb
shl
addl
dec
stos
xchg
and
push
lods
sub
repz
jnp
xor
bound
enter
out
test
insl
cmp
lods
pop
pop
push
sarl
and
movsb
mov
mov
jno
push
int
cwtl
iret
cmpl
out
adc
data16
sbb
es
jbe
push
pushf
lock
fmuls
push
sub
pop
stos
mov
pushf
inc
mov
mov
rcr
xor
loop
jecxz
subl
jne
lret
sub
lahf
das
andl
stos
pop
les
pusha
js
adc
ja
push
or
lock
stos
and
mov
and
mov
cmp
mov
inc
add
push
add
mov
daa
cmp
mov
mov
filds
and
jns
adc
in
loopne
or
pop
cmp
inc
or
aas
decb
sub
sbbb
iret
mov
push
mov
add
pop
cmp
sbb
sarl
xor
mov
add
or
decl
lods
daa
xchg
sbb
xchg
dec
and
lock
inc
mov
ja
xchg
xorl
sarb
dec
or
es
xor
sbb
fwait
fwait
addr16
push
lods
dec
enter
ret
sbb
out
mov
dec
push
enter
shrb
cs
ja
mov
adc
pop
lret
pop
adc
repz
insl
inc
pop
mov
lcall
ja
adcl
filds
jno
jg
push
decb
cwtl
aad
dec
mov
enter
sub
iret
es
xor
lcall
mov
mov
test
mov
insb
pop
push
push
imul
xor
adc
pop
lahf
pop
or
add
xchg
inc
into
test
pop
mov
xchg
xor
aaa
mov
outsb
or
mov
dec
movsl
pop
jmp
dec
jg
add
cld
sub
popf
push
push
and
pusha
fcmovnbe
xchg
xor
push
push
xor
cmp
imul
xlat
lea
pop
not
xor
and
in
xor
repnz
popa
lods
cmp
mov
daa
mov
pusha
aam
push
inc
mov
jl
and
in
inc
or
or
xor
dec
loope
or
out
daa
lea
int
es
in
aam
add
jg
hlt
out
outsb
pop
mov
and
sti
and
int3
mov
cmpsb
mov
dec
mov
outsb
pop
mov
aam
jmp
adc
inc
adc
lcall
xchg
sub
cmp
test
and
lret
movsb
lock
mov
leave
adc
mov
mov
sub
xchg
cld
inc
les
sub
or
dec
test
xor
leave
data16
push
mov
sub
add
cmp
mov
sub
scas
iret
mov
mov
push
mov
jecxz
sub
mov
out
mov
adcb
jbe
lods
pop
andb
fstps
outsb
or
pop
push
sub
clc
pusha
sbb
mov
into
pop
sahf
out
stos
fstpt
pop
cmp
sub
test
mov
inc
outsl
outsb
les
out
xchg
dec
push
push
sbb
fstps
sub
ret
sete
mov
loopne
lcall
push
xor
sbb
inc
mov
xchg
daa
ret
jb
jae
outsl
insl
popf
cmc
data16
ret
sub
fwait
push
adc
stos
sub
mov
inc
cmc
fmuls
or
les
pop
pusha
movsl
mov
fists
sbb
sbb
in
mov
outsb
enter
jo
jl
sbb
pop
cmpsb
pop
loopne
xchg
out
inc
sti
mov
in
push
and
in
bound
inc
sbb
outsb
repz
adc
imul
mov
push
test
sub
imul
popa
iret
and
addl
xor
test
into
aas
rorb
sbbb
add
mov
xlat
syscall
rorl
lret
pop
jb
addl
test
and
jge
cli
pushf
cmp
nop
daa
sub
inc
iret
mov
or
fdivl
jge
sub
repnz
lea
dec
add
sub
pop
pop
cmp
cs
sbb
int
push
jno
dec
push
daa
mov
inc
rcr
ficoml
loop
scas
mov
inc
xchg
insb
and
je
sub
clc
ret
sysexit
mull
in
test
mov
dec
xchg
inc
pushf
loope
pop
add
adc
push
jecxz
aad
pop
mov
rcll
in
add
les
aas
pop
push
pop
mov
add
test
ror
filds
loop
sbb
addr16
sbb
or
dec
mul
mov
push
mov
sub
into
mov
int
subl
call
in
js
negb
xchg
pop
fisttps
imull
test
dec
push
cld
inc
push
out
int
out
jge
cwtl
icebp
mov
cmc
popf
ret
outsl
dec
mov
pop
movsb
mov
popf
mov
popf
imulb
pop
mov
or
ljmp
roll
cmp
jl
bnd
mov
dec
jmp
cltd
popf
fstpt
push
xchg
fistpl
stc
xchg
enter
rorl
lods
test
mov
push
push
push
mov
sbb
push
pop
mov
add
cmpsb
push
sbbl
mov
orl
push
pusha
pop
xchg
pop
push
jno
mov
ljmp
test
arpl
cld
in
sti
and
out
popa
test
cmp
stos
ds
pop
mov
lahf
or
cmp
ja
pop
xor
sahf
jbe
xchg
mov
or
hlt
or
pop
mov
or
inc
pop
fdiv
inc
insb
inc
or
insb
in
xorl
mov
and
sbb
enter
mov
pop
and
pushf
xor
cmp
and
and
xchg
iret
xlat
jmp
lahf
xor
movsl
and
rolb
mov
lret
inc
inc
fs
lea
popf
xor
insb
pop
xchg
shrl
shrl
mov
jge
sbb
filds
in
lea
js
insl
mov
pop
outsb
add
in
xor
jle
jmp
test
clc
or
fs
lahf
jle
fstl
dec
add
mov
cmc
xor
cltd
or
rolb
push
cmpl
inc
push
in
inc
add
out
sbb
push
lods
vpsravq
mov
ret
sbb
jmp
mov
pop
mov
jb
jle
mov
push
jg
cmpsb
imul
rcl
dec
pop
out
sub
popf
pop
mov
loop
and
cs
mov
sbb
jle
lahf
xor
shrl
test
jae
mov
movsl
cmp
das
rclb
addr16
mov
xor
or
dec
ret
mov
pop
popa
push
sbb
push
sub
or
add
sar
xchg
movsb
aaa
push
dec
vmwrite
pop
cmp
mov
mov
mov
sbb
jecxz
shufps
loopne
imul
data16
fldt
jnp
scas
adc
jo
jge
ja
push
add
test
cmpsb
ljmp
and
mov
lods
es
add
adc
or
push
adc
lock
movsl
sub
xor
fcmovbe
scas
cmp
adcb
test
sbb
aam
insb
add
xlat
rolb
js
movl
push
loope
jmp
pop
shrl
and
ljmp
mov
mov
test
cltd
std
mov
inc
jl
les
mov
sbb
xchg
in
pop
push
test
inc
inc
cmc
xlat
and
scas
or
mov
push
jo
mov
les
cli
ljmp
rorb
and
adc
mov
nop
cmp
sub
jae
cmpsl
mov
sub
and
movsb
fisttpl
mov
lods
pusha
repz
stc
test
inc
mov
sti
fs
popa
sbb
push
dec
aam
mov
les
rclb
int3
and
pop
mov
jbe
add
repz
das
pop
test
xor
outsl
and
ss
xchg
lea
add
fimuls
enter
imul
xchg
lea
lahf
mov
mov
mov
mov
sub
fdivs
inc
xor
pop
jl
scas
dec
pop
inc
jmp
fwait
mov
xor
int
xorb
insb
jp
pop
sti
fldenv
mov
cmpl
dec
xlat
repz
outsb
gs
fimull
xchg
adc
mov
mov
and
sbb
pop
sub
sub
jb
xor
call
xchg
orb
and
or
xchg
xchg
sbb
nop
push
dec
pop
leave
add
sbb
repz
xchg
inc
push
cmp
jns
mov
pop
xchg
insb
jl
int
xchg
push
mov
jg
xchg
mov
xchg
sub
ja
xchg
test
xor
sarb
push
add
test
pop
ja
mov
cwtl
int
add
into
test
into
xchg
add
rolb
fstp
rclb
gs
mov
add
cwtl
lret
dec
loop
add
or
enter
cmp
fsubrs
les
mov
mov
popa
xchg
ficompl
cmpsl
sbb
mov
adc
pop
mov
sahf
and
add
xor
in
push
sub
sub
cmp
cwtl
push
and
adc
shll
sub
mov
xor
dec
mov
cmpsb
pop
mov
loopne
sbb
jae
xchg
or
xchg
rcrl
push
push
filds
or
out
pop
push
mov
mov
loopne
pop
out
jo
adcb
ja
or
mov
dec
adc
movl
filds
xor
adcl
pop
js
shlb
jg
int3
mov
xchg
xchg
jmp
mov
dec
sub
pop
push
push
ljmp
das
ljmp
jb
add
push
push
dec
lret
shlb
mov
fs
les
popa
dec
mov
ljmp
sbbb
jne
mov
in
js
int3
pop
pop
push
fs
data16
pop
inc
popf
into
mov
push
scas
shr
hlt
xchg
fs
mov
or
repnz
shlb
es
and
jb
push
loop
dec
dec
and
jle
jnp
cmp
roll
and
dec
shrl
out
jbe
lret
xchg
fsubl
lods
ss
test
pusha
test
or
xchg
lods
xchg
ljmp
cmc
test
loopne
int3
mov
aas
data16
frstor
sbb
call
test
stc
and
daa
mov
pop
sbb
adc
je
sahf
mov
cmp
popf
sbb
jnp
adc
mov
pop
lahf
mov
cmp
jle
inc
xorb
xorl
jmp
in
sbb
inc
mov
sbb
sbb
sti
pop
cmpl
fbld
fwait
or
out
lahf
mov
push
insl
mov
mov
cmp
insb
pusha
pop
std
jp
inc
aad
cmpl
jle
mov
mull
orl
lret
addr16
push
mov
xor
icebp
sbb
repz
push
xchg
xchg
add
ret
shl
jmp
pushf
mov
mov
loopne
inc
mov
pop
add
or
mov
dec
xchg
andl
mov
into
xchg
mov
fstp
cmp
push
sub
jge
jno
add
and
cmp
sahf
adc
and
in
imul
mov
push
xor
and
sahf
inc
cmpsb
xor
xor
in
fstps
popf
jle
dec
iret
mov
push
push
pop
lret
push
ds
add
cmp
das
pop
and
sub
dec
fs
sub
std
adc
mov
or
ret
xchg
ss
scas
mov
inc
scas
in
lea
add
into
ret
out
ja
lods
sub
xor
leave
sbb
leave
or
and
sbb
add
fnsave
popf
adc
xchg
and
scas
hlt
movsl
es
xor
sbb
jnp
xor
adc
movsl
push
std
jno
aaa
popa
jle
dec
repz
jecxz
pmulhw
scas
xor
sbb
movsb
fsubs
xchg
mov
mov
je
or
adc
fdecstp
xor
test
lret
ret
xchg
and
or
add
add
pop
lret
shrb
and
out
dec
loopne
sbb
fisttpll
push
mov
fimuls
jmp
push
jecxz
sub
push
loop
push
lahf
popf
xchg
jns
push
movsl
or
sub
ljmp
fxch
inc
lock
sub
dec
mov
lods
dec
lea
aam
pop
ror
jo
adc
outsb
rorl
or
or
mov
leave
pop
sbb
movb
stos
addr16
ja
stos
inc
cld
in
add
pop
adc
mov
pop
stos
imul
jns
fildll
pusha
fstpl
arpl
mov
pop
push
test
mov
xor
jbe
icebp
pop
dec
jge
cs
dec
ret
cmp
cmp
out
xchg
shll
outsl
jmp
sbb
mov
xor
sarl
bound
fists
adc
mov
fiaddl
or
into
mov
rol
lock
das
mov
jo
dec
out
pop
or
ret
sub
jo
push
or
pop
arpl
notb
jle
pop
push
lahf
jg
mov
xlat
daa
or
pop
and
xor
pop
pop
hlt
mov
mov
out
jp
insb
or
cli
xchg
sar
icebp
ret
pop
test
dec
es
mov
aam
vsqrtsd
popa
fidivrl
fmull
jb
push
mov
cmp
cmp
enter
jbe
movswl
xchg
enter
and
xchg
aam
repz
pop
arpl
ficompl
inc
add
mov
and
loopne
mov
adc
add
test
rcrb
inc
jnp
jno
push
add
cli
std
add
sahf
aam
fwait
leave
and
mov
push
sub
and
nop
jg
add
mov
fbld
int3
adc
xchg
loop
push
movsb
xchg
lods
js
mov
mov
jmp
imul
lret
cmpsb
mov
mov
jno
mov
mov
js
jns
imul
call
mov
aam
sub
scas
xor
sub
into
lods
int3
aas
fadd
mov
test
push
mov
cmp
iret
mov
stos
inc
jl
jns
loopne
aad
sub
test
push
add
sbb
mov
xchg
lods
push
test
leave
movsl
cmpsb
xchg
stos
xor
mov
lock
xchg
xchg
shl
add
and
mov
sbb
xor
push
jnp
xchg
pop
dec
push
jl
ds
lea
pusha
xchg
inc
add
and
lahf
in
stos
sbb
pop
movsl
xchg
fisubs
jp
loope
cwtl
sub
sbb
add
jbe
stos
movsb
jns
cli
or
jg
arpl
repnz
and
jl
cwtl
sarb
dec
lock
imul
roll
ja
push
and
mov
or
push
and
fwait
push
push
cltd
mov
add
cmp
shll
int
jnp
and
jae
hlt
icebp
popf
sub
push
xor
fcomps
pause
bound
fmuls
dec
insb
sbb
in
sub
mov
push
fdivrl
popa
test
adc
mov
mov
push
and
cmp
and
stos
ret
push
cmpb
in
cmp
xchg
sub
lar
les
leave
xchg
or
bound
mov
mov
imul
xchg
push
adc
call
hlt
lods
fcmovb
cmp
xor
jecxz
cmp
push
mov
lods
xor
sbb
hlt
cmp
jb
in
leave
mov
or
adc
enter
ja
iret
mov
mov
sbb
jle
ret
mov
sbb
and
push
xchg
xchg
int3
push
inc
mov
inc
sbb
scas
mov
jp
lret
xchg
xchg
and
jle
pusha
test
push
pop
fildll
jbe
push
lds
push
or
xchg
mov
adc
aad
rcll
and
jae
mov
aaa
loope
inc
pop
xor
setne
pop
fildll
sti
idivl
insl
push
jp
repz
mov
jno
aam
cmp
xchg
and
jns
push
repnz
dec
mov
push
xchg
push
clc
xlat
inc
mov
push
call
adc
int3
pop
fsubrl
cs
pop
push
cltd
mov
and
aam
ljmp
ja
mov
int
inc
push
daa
in
dec
js
fdivrp
mull
cwtl
nop
and
ds
ja
sub
sbb
inc
dec
popf
mov
bound
push
xchg
add
sub
gs
shlb
mov
jne
lahf
jns
or
sub
sti
aas
pushl
out
sbb
mov
lret
cmc
mov
ja
adc
push
pop
les
or
fiaddl
cli
decl
pushf
fisubs
je
nop
test
addr16
xchg
outsl
fldenv
xor
xor
add
pop
add
or
in
dec
mov
jo
stos
insb
mov
cli
aam
lret
or
jge
xor
mov
pop
cmp
push
div
inc
xlat
mov
mov
in
sbb
sub
xlat
or
mov
jnp
add
mov
push
sub
add
rolb
and
daa
divl
jbe
hlt
adc
pop
inc
ret
jno
jmp
test
push
jmp
aam
outsl
lods
fisubrs
dec
or
faddl
mov
lock
loop
mov
xchg
loopne
fsubs
xchg
jge
cmp
scas
shrl
xchg
fs
and
xchg
jmp
dec
and
imul
xor
mov
stos
push
mov
outsb
icebp
add
dec
cmp
pop
mov
fistpl
leave
mov
adc
dec
and
cltd
dec
xlat
js
jo
call
out
test
out
lret
stos
inc
out
pop
sahf
mov
roll
jo
xchg
cmp
je
cs
shl
mov
mov
sti
mov
mov
fs
inc
fcomi
cmp
fdivs
arpl
and
push
jle
fwait
sbb
push
gs
sub
aaa
mov
in
xchg
movswl
add
negb
cli
ret
mov
jecxz
or
in
not
jge
pop
or
inc
jle
out
push
pop
test
repz
je
fcomp
or
pop
and
scas
fnstenv
cmp
ret
aam
jg
movsl
xor
arpl
cld
pop
sbb
cld
jmp
out
nop
sub
push
cmp
addr16
mov
add
fucom
adc
addr16
mov
lret
mov
jb
shrl
dec
lret
xor
mov
pop
lret
sbb
xor
xchg
or
loopne
in
sahf
es
pop
cmp
mov
movb
jb
adc
push
push
or
sub
cltd
jg
pop
lahf
testl
pop
and
jl
or
leave
andl
ret
cmc
inc
popf
mov
adc
in
ja
rcrb
ret
and
add
cmp
lahf
cmc
dec
or
es
or
inc
adc
addr16
inc
shll
lds
xchg
jnp
xchg
nop
aas
mov
ja
test
jp
iret
dec
xchg
mov
sbb
int
pop
adc
test
xchg
popf
test
pushf
lods
cs
sbb
inc
sbb
add
lcall
in
and
jecxz
push
fsubr
jno
push
push
push
xlat
mov
cmpsl
fmuls
aad
xchg
popf
mov
notl
outsl
lahf
xlat
adc
jmp
pop
lds
rclb
xchg
sub
roll
sarb
fisubrs
cs
decl
cmp
ljmp
sahf
dec
stos
sbb
dec
out
pop
stos
push
mov
ds
jle
mov
sahf
or
jp
dec
out
pop
stos
push
mov
ds
jle
mov
nop
push
sbb
dec
ljmp
jp
lcall
xor
data16
dec
cmp
push
push
dec
outsb
fidivrl
stos
icebp
inc
mov
cs
push
and
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
addb
pushl
divb
add
xor
mov
outsl
in
hlt
or
mov
inc
fists
pushl
lahf
adc
and
dec
pop
les
inc
in
hlt
psubsb
das
movsb
aas
mov
inc
pop
push
imul
andl
dec
les
testl
rolb
pop
lret
mov
lcall
add
ficoml
stos
scas
mov
mov
aam
pop
test
push
jmp
pop
mov
xlat
cmp
filds
xchg
test
ds
mov
sub
test
in
inc
iret
pop
out
push
jg
pop
or
xchg
fcmovnbe
xchg
xchg
mov
movsb
lock
xchg
xchg
fsubl
pusha
or
add
and
dec
mov
sub
adcb
sbb
mov
xor
add
xor
stc
jo
sbb
jmp
notl
cmp
cwtl
nop
sbb
xlat
pop
xchg
jg
dec
dec
dec
rcr
adc
add
inc
jno
aad
xchg
jg
mov
mov
out
fs
je
add
adc
and
xor
int
mov
popa
hlt
outsl
test
xchg
das
movsb
pop
fnstsw
fs
je
popa
ljmp
mov
push
andb
icebp
pop
fnstsw
iret
and
test
xor
out
pop
ret
dec
int3
push
ja
push
lods
or
jp
pop
bnd
mov
push
mov
adc
and
xor
les
outsl
in
hlt
je
aas
mov
inc
fists
pushl
lahf
adc
and
xor
les
outsl
in
hlt
je
aas
mov
inc
sbb
mov
addr16
cmpsb
or
rcrb
leave
enter
enter
xchg
sub
stc
enter
sbbl
scas
push
sbb
sub
xchg
cli
xchg
adc
dec
iret
leave
nop
fucomip
imul
stos
pop
ja
pop
mov
and
and
insb
or
adc
or
cmpsl
sub
pop
sub
mov
xor
ljmp
mov
sti
hlt
adc
dec
enter
loopne
mov
les
nop
mov
lahf
inc
stos
cmp
iret
push
enter
pop
xchg
push
push
or
push
jg
sbb
test
daa
ds
pop
cwtl
push
in
aas
xchg
mov
sub
outsl
sysexit
pop
adc
jbe
mov
jmp
push
mov
push
push
cmpsb
sub
shrl
jo
xchg
mov
xor
xlat
ret
add
cli
xchg
in
pop
ficomps
and
shll
fnstenv
inc
lret
enter
push
dec
and
movsl
lret
lea
add
lods
ret
pop
insb
repnz
cmpb
aas
mov
xor
stos
xchg
adc
fldcw
dec
push
xchg
insl
or
push
add
insl
ja
cld
ljmp
jmp
jge
cmp
or
add
push
cs
sbb
aaa
mov
fisttps
sahf
jmp
push
jl
aaa
and
shll
xchg
and
push
mov
xchg
imul
out
mov
dec
add
cmp
mov
js
cs
aad
sarb
fstps
aad
mov
inc
cmp
lds
popa
cmp
imul
push
sbb
bnd
leave
sbb
cmp
mov
pop
sub
gs
xchg
aas
and
out
xchg
push
aas
mov
push
enter
outsb
push
jnp
iret
sbb
fisttpl
jns
jmp
cwtl
das
dec
hlt
jp
mov
icebp
jle
mov
xchg
repz
std
fcoms
inc
sub
scas
xchg
jl
insb
and
test
cmp
sbb
xchg
mov
divl
stos
sahf
and
jbe
lock
xchg
adc
cmp
pusha
inc
mov
dec
ss
cmpsw
push
stos
in
mov
sahf
pop
int3
mov
mov
sub
bound
cmp
jns
and
fcmovu
loope
movsb
cld
jg
mov
mov
mov
add
stc
ret
cmp
cmp
dec
jmp
int
test
cs
mov
mov
lret
cli
mov
xchg
shrl
lret
pop
add
jo
pushf
ficoms
jbe
cmp
and
clc
es
cld
inc
popw
sbb
mov
je
xchg
aam
mov
sahf
push
add
mov
leave
fwait
xor
pop
xlat
fnstsw
inc
jns
push
mov
sbb
stos
dec
pop
mov
stc
dec
sub
test
jl
je
xchg
jmp
cmp
aaa
cmc
cmp
flds
out
and
imul
out
jne
adc
xchg
mov
push
mov
sbbl
ja
jmp
aas
sub
out
sub
jbe
leave
stc
ja
pushf
inc
iret
lret
inc
pop
call
or
xor
rcrl
and
jb
dec
cmpsl
push
inc
stos
push
cmp
ds
push
jle
inc
out
cmc
mov
testb
movsl
pop
shll
push
lods
lea
enter
lods
shlb
sub
pop
dec
or
fmull
xchg
fdivr
add
clc
mov
inc
movsbl
mov
popf
fs
js
xchg
outsb
stos
sub
insb
pop
pop
decb
cmpl
ja
sbb
lock
clc
ja
pop
in
rol
cmovne
cs
xchg
sbb
adc
aaa
mov
arpl
out
aad
dec
clc
add
lds
loope
pop
loopne
ds
loope
daa
imul
or
fwait
and
enter
mov
adc
dec
sbb
int3
inc
testl
jns
idivb
divl
in
test
dec
cs
dec
and
lea
mov
add
mov
aaa
insb
mov
adcl
and
and
mov
and
testl
int3
mov
dec
xor
mov
les
in
dec
nop
xchg
addb
xlat
and
ret
fstpt
cmpsb
fsts
mov
test
inc
jb
push
pusha
push
sub
sbb
mov
sub
pop
or
cmp
pop
xchg
or
dec
and
xchg
mov
loop
inc
das
stos
rcll
cmp
xor
in
out
xor
call
cmp
jnp
and
movsl
push
fsubrs
jno
rcrl
pop
int3
xorb
push
pop
mov
divb
int
mov
mov
cmc
or
dec
jle
ss
fists
add
jge
lret
stc
adc
jmp
push
fincstp
scas
or
pusha
inc
cli
iret
mov
ror
jno
pavgw
cwtl
inc
dec
js
popa
paddw
mov
xchg
in
cmp
js
jnp
cmp
dec
xchg
fwait
rcrl
imul
add
in
or
mov
sbb
push
aas
jbe
sar
sub
pop
dec
pushf
cli
rclb
fs
jo
mov
xor
adc
jnp
mov
adc
test
and
push
stos
sbb
pop
ds
cmc
push
push
push
or
pop
hlt
mov
in
in
pop
push
das
cltd
je
ficoms
loopne
pop
inc
jnp
dec
movsb
test
std
lret
push
xor
scas
aas
sub
out
dec
pop
jae
jbe
scas
mov
inc
mov
loop
sbb
scas
pop
mov
movsw
dec
mov
mov
in
or
cmp
jmp
pop
inc
aaa
repnz
add
mov
cmpsl
inc
sarl
mov
insb
pop
js
repz
ja
xor
fs
test
cmp
ljmp
clc
insl
jmp
test
mov
dec
pop
inc
add
in
inc
ss
xchg
fnstenv
sti
pop
add
add
fmull
imul
mov
cmpsb
pop
xchg
femms
cmp
sub
cmpsl
mov
aam
xor
mov
push
adc
sub
test
out
pop
xchg
ror
rcl
or
add
cmp
pop
and
outsl
int3
fstpl
bound
int
sub
insb
sbb
and
inc
mov
addr16
mov
adc
daa
call
test
jae
mov
and
push
pop
in
or
gs
pop
sbb
xor
and
push
lret
out
adc
cmp
adc
jmp
pop
test
add
cmp
jg
sub
xchg
add
fdivrs
push
dec
loop
fisubl
ljmp
cltd
stos
mov
pop
xor
cmp
arpl
pop
dec
imul
idivl
push
push
fwait
out
sub
leave
dec
ja
mov
shrb
stos
mov
int3
repnz
fidivl
adc
fldt
cmp
aas
sbb
stos
add
scas
push
xor
lock
adc
adc
mov
scas
jno
mov
ud2
push
mov
cmp
outsl
rcrb
das
fildll
xchg
leave
fadds
mov
stc
jmp
ret
add
shlb
push
int3
sbb
dec
xchg
mov
add
mov
outsb
sarb
or
pop
and
scas
and
jle
or
push
jbe
aas
call
xor
or
jns
lock
ds
pop
mov
in
xchg
jae
mov
mov
nop
push
mov
add
scas
push
push
push
sbb
in
test
push
jmp
loope
adc
mov
sub
or
scas
add
dec
push
outsb
dec
sub
xchg
fdivrs
inc
imul
sub
pop
icebp
cmp
loopne
inc
or
test
cmp
or
jge
lcall
sub
sahf
and
call
insl
add
out
sbb
insb
jb
mov
adc
das
mov
or
in
push
fistpll
add
call
std
and
lock
cmp
mov
sbbl
sub
xchg
mov
aaa
int
push
scas
call
push
mov
add
lods
rclb
push
or
test
ljmp
cmpsl
sahf
cmp
fdivrl
xchg
adc
xchg
std
lahf
fisubs
hlt
icebp
cmp
sbb
mov
mov
lock
fcomps
cmp
imul
das
and
cmp
rol
pop
ret
jae
mov
test
jl
sbb
jecxz
loop
xor
and
fisttpl
into
mov
jge
mov
mov
mov
and
push
add
nop
out
inc
mov
cmp
iret
push
cmp
mov
xchg
test
pop
ljmp
cli
jp
mov
xor
jo
inc
sbb
lret
xchg
filds
push
aam
out
inc
js
frstor
cmp
sarb
lahf
adc
mov
scas
sbb
clc
sbb
inc
test
push
in
je
mov
add
dec
fildll
jo
xor
lods
arpl
mov
mov
adc
cmp
aas
fisttps
inc
inc
inc
sbb
call
insb
adc
adc
rolb
imull
mov
mov
std
in
jb
cmp
xor
push
aaa
xlat
mov
mov
mov
sub
or
jbe
jb
mov
xchg
enter
xor
sbb
mov
dec
lea
loopne
loop
push
add
repz
push
rcr
push
cmp
push
xchg
test
mov
inc
pusha
jmp
push
pop
cmp
inc
sub
or
mov
ret
mov
mov
jne
inc
out
xor
push
adc
jae
cmp
pop
mov
fldl
and
pop
nop
sbb
imul
add
inc
scas
lods
mov
cld
ret
inc
scas
imul
jo
arpl
test
cmp
add
jo
mov
shlb
filds
jp
shrl
add
cs
xlat
mov
outsb
mov
push
repnz
stos
push
dec
mov
inc
pop
repnz
fcompl
fs
mov
sub
sub
lods
add
loopne
mov
stos
jmp
int
push
sub
dec
mov
jle
xchg
pop
js
adc
testl
pusha
lea
dec
add
push
enter
repnz
leave
js
xchg
fucom
cmpsl
test
mov
shr
ret
add
or
cli
pusha
mov
sub
add
in
mov
addr16
cmp
pop
dec
push
enter
and
lahf
mov
cmpsb
unpckhps
push
call
pop
jno
jne
mov
xlat
mov
sbb
lcall
lds
out
jno
fs
and
aas
fs
push
sarb
cs
push
repnz
xor
rorb
xor
movb
cmp
loopne
cmp
push
adc
ret
mov
or
repnz
jge
mov
cld
jo
xchg
data16
cmp
xchg
xchg
popa
mov
dec
push
inc
adcb
cmp
cmp
mov
shrl
icebp
fstl
inc
cmp
sub
out
fstl
cmp
cld
jno
bound
xchg
pop
xor
enter
aad
cmp
out
xchg
outsb
mov
daa
in
and
pop
cmp
ret
xorl
jmp
jae
and
adc
out
mov
inc
pop
orb
inc
add
pusha
ficoms
nop
xchg
lock
out
inc
insl
xchg
xchg
inc
push
push
bound
sub
fdivrp
test
push
add
icebp
lret
call
loop
cwtl
xchg
or
or
and
ja
mov
lcall
xchg
inc
imulb
int3
dec
or
dec
sub
inc
and
lods
mov
pop
imul
xor
push
test
inc
lds
mov
lods
adc
mov
scas
out
mov
in
dec
repz
adc
in
jle
xchg
and
add
inc
inc
addb
mov
pop
enter
stos
test
sbb
cmp
push
cmpsl
mov
scas
orb
xchg
adc
pop
mov
leave
subl
mov
xchg
jae
fimuls
adc
sbb
adc
mov
sar
mov
aas
insl
shrb
add
test
xchg
fstpt
sbb
pop
jbe
inc
xor
push
addl
inc
mov
add
ficoml
cmp
out
data16
test
enter
fsubrs
popl
into
adc
sub
mov
mov
dec
stc
aad
push
loop
or
inc
mov
fst
cwtl
inc
inc
int3
mov
mov
dec
sub
pop
fldl
in
lods
cld
jne
or
and
fstps
xchg
dec
mov
lea
lret
xor
neg
inc
inc
rclb
sar
jbe
pop
inc
adc
pop
inc
mov
imul
lds
aas
int3
dec
mov
inc
aas
lret
mov
jb
jle
mov
test
cmpsb
into
testl
pop
cs
and
nop
push
adc
adc
fiaddl
cmpsb
pop
add
jp
and
adc
xchg
andl
test
inc
arpl
pop
cmp
testl
test
dec
notb
mov
call
add
fisttps
xor
sbb
fwait
imul
aas
int3
ja
out
push
sbbb
shrb
movsb
fdivrs
xchg
xor
lcall
das
push
out
mov
ret
cwtl
adc
lcall
leave
xchg
in
mov
or
mov
and
inc
fsub
push
adc
cld
jle
adc
and
das
cmpsl
mov
loop
out
cmpsb
inc
inc
addr16
mov
push
sbb
cmpsb
movsb
or
data16
outsl
pop
popf
jae
or
pop
cs
mov
jnp
jg
mov
popf
pusha
in
cmp
xchg
roll
xchg
addr16
test
mov
sbb
jmpw
mov
insl
js
jmp
inc
mov
test
sub
pop
ljmp
push
push
mov
arpl
dec
orb
xchg
jmp
or
popa
das
add
xchg
sub
cwtl
adc
loope
pop
movsb
adc
xchg
repnz
ss
adc
jge
icebp
pushf
outsb
ljmp
push
dec
movsl
jne
movsb
les
jmp
jmp
cld
out
loopne
sahf
lods
out
pop
sub
loop
cmp
cmc
mov
in
push
int
inc
frstor
adc
out
adc
out
mov
or
mov
mov
push
cmp
popa
inc
fildl
adc
in
inc
das
cltd
popa
push
inc
mov
js
push
subb
pop
xor
or
sbb
xchg
in
mov
push
neg
sub
das
inc
out
xor
sub
rorl
sbb
mov
ror
sub
push
xor
xchg
cmp
add
lcall
jl
cmp
movsb
mov
cmpsb
jne
scas
mov
js
jg
xchg
adc
lock
stc
or
test
xchg
mov
imul
call
into
dec
aad
add
sahf
xchg
jg
xchg
add
jge
pop
lock
popf
into
or
out
cmp
gs
movsl
or
xchg
push
and
hlt
mov
xchg
test
loopne
mov
cmp
into
inc
xchg
xchg
sub
in
xchg
or
int3
push
mov
xor
loop
and
push
out
or
cli
or
popa
loope
jecxz
in
jecxz
and
push
push
mov
or
incl
aaa
shr
pop
cmp
push
imul
stc
pusha
pop
rcl
xchg
addr16
pop
out
jecxz
jnp
pop
mov
aas
popf
popl
mov
add
mov
in
cmp
adc
mov
popa
mov
jbe
mov
in
cmp
test
aas
push
inc
sbb
rcl
imul
jmp
mov
andb
idivl
int3
mov
mov
bswap
cmp
gs
pop
scas
or
enter
je
inc
and
dec
push
movsl
aam
ss
mov
mov
jns
popf
lret
xor
mov
inc
idivl
sbb
jbe
in
or
sbb
nop
xchg
leave
add
iret
out
enter
cs
repnz
and
imul
sub
xchg
mov
xchg
cltd
inc
roll
in
nop
daa
mov
cmp
lock
and
imul
sbb
push
int
in
xchg
mov
cmp
sbb
push
sub
jl
sub
into
xchg
mov
insl
nop
cmc
mov
scas
out
jno
push
pop
mulb
sub
adc
subl
add
pop
push
pop
inc
mov
sti
xchg
xchg
mov
jno
outsl
or
sbb
cmp
xchg
dec
test
mov
fs
xlat
push
cwtl
inc
popa
lret
mov
inc
xlat
xchg
loop
outsl
sub
xor
gs
rep
nop
or
aas
sbb
adc
push
orb
mov
je
sub
mov
stc
or
inc
das
out
iret
movsb
pop
push
fsubrs
icebp
xor
and
dec
add
xor
mov
pop
inc
or
jmp
or
push
xchg
pop
xchg
cmpsl
push
pop
negb
fidivs
sub
divl
pop
ret
repnz
loope
add
inc
insl
dec
int
xor
or
fnstcw
nop
gs
sbb
roll
lds
add
mov
cld
insl
pop
xchg
bound
push
ret
das
or
cmp
add
jp
sbb
lock
add
cmp
push
insb
jo
mov
xchg
cs
xor
or
cwtl
lods
aas
hlt
add
iret
mov
sarb
mov
jg
mov
adc
push
rcrb
test
int
push
ja
mov
push
inc
pop
notl
fs
mov
cmp
lret
aas
shlb
ffree
mov
imul
push
or
pusha
sub
lcall
sub
call
pop
or
pop
ret
sahf
adc
jae
add
inc
adc
and
ss
sub
lea
fistps
jle
mov
stos
mov
jp
je
mov
cli
xor
cld
push
cmp
mov
sbbl
fucomi
aad
mov
push
jle
xchg
jle
ljmp
cmpsl
lea
insb
jb
lahf
and
mov
clc
jnp
shrl
shl
dec
es
sbb
add
cmp
icebp
mov
xchg
sbbb
push
adc
leave
or
mov
sbbl
push
xchg
sbb
je
std
jmp
add
fwait
aam
ljmp
bound
xorb
or
movsb
lods
add
xor
lahf
sbb
cmpb
lret
out
xlat
pop
in
ret
movsb
pop
bound
lcall
das
jo
dec
xchg
and
inc
jne
xchg
jbe
jle
cs
and
cmp
cmc
aad
insb
mov
movsb
js
adc
jbe
cmp
jno
loope
jno
push
cmpsl
add
frstor
je
and
aas
daa
jnp
je
dec
movsb
mov
mov
push
add
repnz
mov
jp
cli
in
movsb
mov
cmpsl
add
jle
cmpsl
out
std
inc
jge
sbb
fs
cmp
popa
mov
std
mov
dec
or
inc
in
adc
lret
cmp
jecxz
sahf
and
sbb
cs
scas
fdivrs
aad
adc
cltd
imul
mov
pop
inc
inc
xlat
ret
lcall
cmc
inc
sub
cmp
mov
nop
mov
xchg
sub
dec
repz
stos
push
in
mov
out
pop
je
mov
mov
mov
sbb
cltd
pusha
pop
and
subb
lock
dec
cmp
jne
dec
push
lods
es
sub
sub
lods
loopne
sub
mov
xchg
lock
insl
pushf
stos
stos
shll
xor
pop
push
or
ret
jl
fisubs
xor
push
mov
pop
adcl
clc
mov
sub
jns
insl
pop
add
orl
idivb
movl
adc
lcall
push
jp
cmp
jo
loope,pn
mov
sub
lods
shr
mov
ds
cwtl
inc
dec
pop
jp
lret
sub
cmpl
out
adc
in
jl
outsl
mov
and
popl
adc
and
xor
les
outsl
in
hlt
je
aas
mov
inc
fists
pushl
lahf
adc
and
xor
les
outsl
in
hlt
je
aas
mov
inc
fcoml
pushl
fwait
adc
and
xor
les
data16
hlt
je
xlat
inc
repz
xlat
je
add
adc
and
xor
les
cmpl
imul
rorb
in
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
cli
out
neg
lret
cmpsl
lds
jnp
push
pop
inc
dec
push
cmp
sub
or
or
cli
out
neg
lret
cmpsb
stos
mov
xchg
jbe
inc
inc
push
cmp
sbb
or
jecxz
repz
rcl
mov
xchg
push
add
pusha
inc
push
arpl
xchg
stos
test
jmp
test
cld
in
mov
sbb
sub
stc
cmp
jnp
adc
pop
nop
mov
cmp
push
pop
sbb
jbe
mov
cmp
mov
push
sub
adc
js,pn
pop
dec
push
sub
inc
test
sbb
cli
jecxz
shr
addb
mov
mov
mov
mov
lds
sub
xchg
jae
push
stos
or
sub
inc
sub
jp
jp
lods
arpl
mov
es
sbb
adc
xor
cmp
test
jb
xor
test
sbb
or
xor
repz
lret
cmpsb
mov
xchg
arpl
jbe
inc
push
push
and
xor
add
or
out
mov
loope
ret
mov
jp
push
outsl
sub
dec
jno
je
jae
mov
mov
in
repz
add
and
add
inc
inc
mov
lahf
cmpsl
xchg
repnz
stos
mov
xchg
jbe
inc
dec
push
cmp
sub
sbb
or
cli
out
neg
lret
cmpsb
stos
mov
xchg
jbe
inc
dec
push
cmp
sub
sbb
or
cli
out
fisubs
mov
sbb
out
adc
dec
inc
cwtl
sbb
mov
bound
cmp
stc
int3
fcomps
out
in
test
mov
xor
sbb
js
aaa
xlat
inc
in
leave
mov
mov
mov
cmpsl
sti
jl
push
cmp
xor
jno
pop
insb
push
xor
cld
add
mov
dec
jnp
icebp
push
ljmp
or
mov
loopne
fstpl
jo
je
or
outsb
sub
jmp
ret
pop
iret
out
pop
mov
push
sub
out
sti
and
or
push
push
sbb
cltd
icebp
pop
jge
push
addr16
inc
sti
fnstcw
fwait
out
hlt
mov
mov
in
xlat
cmova
ja
popa
addr16
push
pop
jnp
push
push
xlat
test
sbb
rorb
add
sub
ds
adc
xor
repnz
cmp
inc
or
sub
mov
dec
aas
cltd
nop
mov
popa
in
pop
push
addr16
jg
dec
inc
mull
mov
arpl
add
adc
mov
fwait
xor
loop
pushf
fwait
test
fstl
loop
xchg
fwait
xchg
pushf
xor
lret
jo
mov
mov
xchg
push
mov
loope
stos
and
inc
js
cmpsl
shr
mov
sbb
cmc
test
jge
mov
aam
scas
mov
mov
loope
sarb
mov
test
add
xchg
mov
jo
les
clc
shl
inc
and
rorl
insl
out
ds
push
dec
ss
mov
imull
cmc
mov
into
or
sarb
xor
call
pushf
xlat
movsb
test
cmp
adc
xlat
iret
test
jae
ds
push
adc
jl
test
cmp
cmpsl
std
hlt
out
jmp
bound
add
push
pushf
push
test
mov
adc
dec
movsb
mov
popa
jg
imul
xchg
mov
out
xor
mov
pop
inc
adc
sub
call
arpl
rorb
data16
fcomps
or
adc
adc
mov
inc
pop
mov
cli
fptan
leave
lds
jae
imul
cmp
gs
cmpsl
pop
insl
es
ja
xor
xchg
mov
lcall
shlb
aam
mov
add
jnp
inc
cmp
add
add
xchg
pop
divb
vmwrite
push
xor
push
add
mov
pop
popw
repnz
sub
inc
mov
push
xchg
movsb
fdivl
mov
xor
cmp
and
cs
mov
cltd
sbb
lock
sbb
insl
popa
jb
push
mov
divl
mov
je
dec
or
mov
adc
mov
mov
aaa
es
mov
outsl
adc
mov
scas
fwait
aam
jbe
dec
xchg
jmp
les
in
push
aaa
cltd
mov
icebp
test
mov
scas
sahf
or
loopne
inc
adc
push
mov
sub
inc
ret
cwtl
aad
adc
fucomi
and
repnz
jp
pop
mov
jl
cmp
mov
in
popf
fimuls
or
lods
out
jge
inc
repnz
out
pop
pop
inc
in
pusha
sti
dec
mov
push
neg
pop
cwtl
in
sbb
ret
cmpsb
lcall
out
add
stos
mov
aaa
sub
dec
les
cmpsb
ret
hlt
pop
add
popa
pop
ds
jb,pn
mov
jnp,pn
rcrl
pop
inc
push
in
or
jb
jbe
pop
js
rep
mov
in
pop
cwtl
inc
pop
int3
test
add
adc
jae
in
pop
jne
push
fiadds
shll
stos
mov
sub
sti
dec
ljmp
xchg
lods
mov
push
and
adc
mov
dec
push
iret
mov
add
rcll
out
inc
es
cmp
ficompl
add
pushf
and
pop
dec
popl
daa
cmp
lret
rorl
call
xor
sar
cmpb
mov
enter
daa
inc
lock
hlt
jecxz
aaa
cmp
fwait
add
in
enter
push
cltd
mov
dec
xchg
and
and
fistl
das
mov
jnp
sbb
xor
pop
ret
scas
fld1
or
inc
not
sub
dec
loop
mov
mov
jne
daa
scas
or
aaa
mov
push
mov
orb
repnz
out
stos
xor
sub
add
dec
mov
stc
cmp
aas
sbb
je,pt
test
adc
inc
daa
movsb
mov
int3
or
fiadds
push
jl
xchg
rcll
stos
enter
sub
in
jle
ror
pop
add
dec
adc
ds
xchg
rcr
call
or
adc
aad
cmp
and
aaa
cmp
test
jnp
pop
aad
or
mov
mov
xchg
add
jecxz
mov
inc
jo
add
dec
dec
and
mov
mov
inc
dec
inc
cmp
xchg
and
int
cmc
xor
mov
andl
in
or
lcall
fisubrs
xor
sub
shlb
loope
test
gs
hlt
test
into
or
cmc
xchg
rolb
jo
repnz
xchg
into
mov
dec
movsl
sbb
sub
mov
mov
xor
fxch
and
mov
outsb
mov
xor
sahf
dec
mov
in
or
aad
add
mov
add
or
into
inc
outsl
sub
dec
xorl
cs
mov
xlat
daa
xchg
xlat
sahf
lea
sbb
enter
add
push
sbb
push
mov
movsl
push
in
lret
lcall
lret
push
in
and
cwtl
imul
mov
popa
sbbl
push
mov
fstpl
push
push
int
cs
mov
hlt
mov
fwait
adc
imul
pop
xor
jnp
fistl
cmp
sbb
adc
pop
out
stos
cmp
mov
repnz
push
nop
xchg
mov
mull
pusha
mov
xor
out
popa
cmpsl
jmp
mov
ds
popa
mov
sbb
adcb
and
imul
call
sub
inc
push
fwait
xchg
adc
jne
jg
jnp
xor
jne
inc
mov
xor
jno
sub
imul
popf
ret
mov
daa
lods
dec
icebp
and
ffree
mov
jmp
stos
pop
jl
or
or
and
xchg
out
pop
ss
out
and
pop
pop
iret
lock
jno
dec
sbbl
shlb
das
out
iret
leave
jmp
loop
je
test
add
clc
and
lret
xchg
sub
inc
xlat
inc
xchg
pop
scas
pop
fmul
sbb
xchg
and
jne
ret
imul
push
jl
psrlq
add
dec
mov
faddl
and
stc
cmpsb
aad
adc
es
xchg
add
inc
jg
ljmp
push
jge
mov
andl
mov
repnz
cmpsb
clc
push
shll
ficompl
addb
cmpsb
xchg
out
fidivrs
sbb
inc
aas
pusha
mov
sbb
sub
inc
mov
cmp
in
mov
and
cmp
icebp
dec
or
inc
idiv
inc
pop
call
shr
xor
dec
xchg
fists
loope
shlb
add
int3
pop
mov
dec
push
jb
xlat
pop
sub
pop
orb
psrad
sbb
loope
loope
lods
xor
cmp
sbb
test
std
jne
push
out
dec
imull
add
lods
popf
xchg
ljmp
into
cmp
es
test
adc
lods
fldcw
aad
jmp
push
test
xor
scas
cmpb
lahf
pop
push
insl
into
or
jbe
rorb
push
inc
xor
xchg
test
xchg
frstor
sub
mov
push
mov
mov
mov
je
or
xchg
out
sub
xlat
jb
dec
push
lods
dec
push
insl
lods
hlt
fisttpl
sbb
sbb
jge
insb
push
jecxz
lret
push
adc
mov
inc
sub
aaa
sbbl
lret
xchg
cmp
movsl
ret
or
mov
ljmp
and
sbb
rcrl
mov
and
or
and
iret
rolb
fcomip
jl
insl
sar
pushf
lods
xor
cld
inc
mov
dec
jb
cmp
xchg
inc
pop
lea
add
mov
sub
dec
and
test
aas
inc
sbb
mov
in
inc
adc
lds
jg
pop
mov
sti
mov
ss
es
andb
lret
scas
mov
xor
ds
sbb
cmp
enter
cmp
mov
rorb
rolb
test
pushl
imul
add
mov
arpl
fldcw
mov
push
and
mov
mov
mov
loope
push
out
movsl
push
push
movsl
push
add
mov
rclb
pop
jnp
mov
mov
insl
daa
negl
push
enter
mov
and
enter
bound
mov
test
shlb
inc
dec
sub
ret
faddp
cs
push
fwait
jmp
neg
xor
xchg
and
and
lock
iret
mov
gs
ret
add
rol
and
push
sub
loopne
outsb
ljmp
cs
mov
je
sub
mov
or
addr16
mov
or
lret
and
pop
or
adc
fnsave
js
out
mov
rolb
xchg
sub
gs
pop
gs
ljmp
outsl
out
adc
pop
pop
xorl
pop
push
sub
mov
jmp
sub
push
push
fwait
mov
in
stc
out
xchg
push
cmpxchg
sbb
shll
add
mov
xchg
jp
js
mov
jbe
add
sarl
shlb
test
cmp
outsb
or
lods
and
sbb
mov
xor
push
cltd
pop
lret
aam
xchg
sarl
or
xor
jb
and
pop
faddl
out
mov
xchg
pop
and
mov
mov
or
push
mull
out
daa
rcrb
test
jnp
pusha
out
daa
cld
stos
fnsave
dec
xor
lcall
mov
cli
and
sti
push
icebp
xor
jmp
test
popf
cmp
push
div
and
andb
das
jmp
aam
std
icebp
in
and
xchg
dec
xor
and
sub
sbb
xor
jmp
add
pop
lcall
cmp
rcrl
jnp
pushf
push
lcall
inc
push
rolb
jp
and
lods
popf
ja
orl
xchg
lcall
mov
push
arpl
pop
mov
jl
lea
jl
cmp
cmp
jo
fsubp
lcall
pop
jnp
mov
jp
dec
mov
shr
outsb
popf
popf
std
loop
dec
std
cmc
ljmp
lock
inc
mov
stos
aad
imul
adc
pop
jae
and
mov
mov
mov
inc
dec
cmpsb
test
mov
lds
nop
ja
faddp
out
pop
or
int3
scas
xchg
pop
pop
push
lret
mov
rorl
in
addb
lods
xchg
jbe
mov
push
insb
inc
push
pusha
push
cmp
enter
mov
negb
sbb
mov
cmp
lret
addr16
pop
cmp
push
movsl
dec
inc
stos
jl
mov
imul
out
dec
and
add
popa
sahf
inc
jns
inc
cmp
data16
test
imul
ds
rcl
inc
push
pushf
push
push
repz
mov
popa
and
xchg
lahf
xor
adc
sbb
das
push
in
cld
clc
icebp
mov
pop
pop
or
subl
mov
adc
push
aam
sub
outsb
fimull
mov
incb
and
add
movb
push
jge
aad
call
push
jns
stos
iret
leave
xchg
rcr
jmp
ljmp
nop/reserved
jae
neg
xor
pushf
ret
fxch
pop
popa
cmpsb
cmp
stos
pushf
inc
mov
int
push
std
push
sti
imul
testb
ja
inc
cmp
nop
xlat
lahf
or
inc
sub
xlat
mov
shrb
sbb
andl
loopne
jg
add
outsl
out
inc
dec
mov
xor
cltd
push
pop
dec
data16
outsb
push
xor
cmpsb
orl
pusha
pop
inc
pop
and
cmp
scas
daa
adc
adc
repz
mov
xor
arpl
out
mov
repz
sub
popa
jns
and
xor
and
pop
popa
sbb
stc
loopne
pop
es
inc
or
push
repz
dec
repz
xchg
lcall
leave
xor
sbb
mov
push
sarl
jp
dec
popa
xchg
stos
test
jnp
repnz
inc
cld
pushf
das
xchg
mov
cmc
or
pop
lcall
loop
jb
and
inc
mov
mov
clc
scas
sbb
rolb
addr16
orb
sbb
dec
fldcw
lods
and
cli
out
or
xorl
leave
loop
adcb
daa
cmp
xchg
and
jno
call
cmp
ffreep
ret
andl
cmpl
jno
inc
scas
hlt
shlb
mov
jl
pop
int3
clc
sbb
outsb
jmp
mov
cmpl
cld
inc
pop
in
fdivrl
je
sbb
ss
enter
outsb
cld
inc
insb
dec
and
loopne
cmc
rol
imul
or
jne
mov
mov
push
cmp
sahf
push
shll
mov
sbb
or
mov
ret
ljmp
nop
js
lock
jmp
roll
push
xchg
pusha
mov
jb
xor
add
xor
mov
dec
repnz
lahf
mov
sbb
mov
dec
dec
adc
out
mov
push
pop
cmp
movsb
lahf
inc
pop
out
fs
sti
lea
mov
xchg
data16
cmp
pop
mov
jle
mov
push
leave
sahf
rorl
mov
fwait
ret
mul
imul
mov
inc
out
mov
es
jno
lcall
cmpsl
imul
pop
popf
sbb
aam
cmp
push
or
push
lret
cmp
xchg
push
iret
bound
sub
outsl
gs
stc
jp
adc
jmp
mov
jns
incb
scas
mov
pop
xchg
sub
out
sbb
and
stc
mov
loope
fcmovbe
ljmp
divl
mov
jg
push
nop
pop
cmp
movsb
adc
icebp
cmpsb
lods
add
aam
ret
outsb
mov
pop
mov
jle,pt
xlat
push
mov
int
fsubr
call
test
mov
testl
xchg
es
fldcw
loopne
inc
xchg
test
lahf
bound
cmp
mov
push
pop
popa
mov
lods
aam
mov
lods
enter
mov
out
sub
and
sbb
pop
leave
scas
mov
cmc
mov
hlt
out
andb
pop
in
push
mov
xor
jg
mov
and
pop
push
jecxz
mov
cmp
enter
inc
mov
lds
pop
iret
mull
mov
sbb
repnz
test
mov
adc
xchg
sbbl
dec
cld
sahf
repz
jp
aas
dec
scas
jnp
fiadds
push
stc
xor
dec
lods
mov
xor
mov
dec
mov
cmpsl
bswap
popf
shll
sbb
push
movsl
adc
ss
sti
sub
inc
lahf
fiadds
xlat
xor
out
stos
sbb
int3
and
mov
adc
lret
xor
xor
push
lret
pushf
mov
xchg
dec
inc
out
dec
sti
mov
data16
mov
mov
add
ficoml
cmp
sbb
jo
clc
fisubrl
add
sub
ss
mov
daa
and
or
fwait
clc
jmp
cmp
dec
dec
loop
insl
xchg
xchg
jmp
lods
mov
les
push
repz
cmpl
sarb
sbb
jge
out
hlt
lock
adc
jl
fildl
jge
je
pop
repz
es
mov
push
dec
aaa
int3
add
xchg
clc
ja
pop
lret
call
cltd
cmpsl
fildl
push
dec
sub
js
mov
mov
mov
fidivrs
lds
mov
lods
adc
iret
sbb
sub
dec
push
pop
lods
push
sub
jge
cmp
clc
jbe
jo
adc
mov
pop
mov
push
inc
mov
lcall
rol
inc
pop
shll
fxtract
pusha
loopne
data16
out
mov
dec
inc
outsl
dec
sub
add
pop
adc
pop
das
leave
pop
sti
mov
stc
or
pop
pop
inc
test
jbe
mov
lret
jge
mov
mov
xlat
cmp
ljmp
inc
mov
repnz
arpl
mov
or
dec
fwait
jg
rorb
imul
hlt
cmp
xor
sahf
test
mov
push
pop
mov
mov
push
xor
fisubrs
fdivrs
mov
xchg
add
sti
mov
and
pop
sub
push
mov
xor
cmp
push
dec
lahf
jge
jg
inc
sub
or
inc
lret
mov
and
inc
outsb
mov
or
push
sarl
sbb
dec
loope
cmpsl
sbb
test
push
push
mov
jmp
pusha
bound
fwait
push
movsb
xor
adcl
adc
aam
repnz
cmc
pusha
cli
mov
test
sub
add
adc
pop
and
les
push
mul
mov
cld
es
sub
leave
out
lcall
repz
pop
shr
mov
push
push
jl
imul
fdivrp
pop
pop
cmpl
jge
push
jnp
jmp
jb
arpl
add
pushfw
fadds
adc
scas
pop
dec
lock
adc
cmp
and
sub
push
mov
ret
mov
cmp
push
cwtl
push
fstpl
lret
pop
shll
push
enter
rcll
sbb
imul
popa
js
das
jmp
sbb
popa
jge
and
repz
sbb
cwtl
ret
cmp
push
imul
push
jbe
je
xlat
cmp
imul
fwait
jl
sbb
lock
jge
mov
mov
lret
inc
test
dec
loop
mov
xor
popa
out
or
lods
fadds
inc
xor
jg
fs
or
pop
sub
cmpl
lahf
mov
xchg
gs
push
xchg
in
movb
test
xchg
push
flds
lock
pop
pop
sbb
pop
cmp
adc
out
leave
cmp
fwait
dec
cmp
inc
pushf
ret
push
cmpsb
lret
or
and
adc
mov
pop
jge
lds
fucomp
setne
das
ss
push
sbb
mov
dec
movsb
outsl
xchg
hlt
xchg
je
bound
mov
xchg
test
std
mov
iret
fwait
xchg
loopne
jbe
int
inc
pop
xor
outsb
sti
xor
rclb
jp
sbb
stos
test
xchg
dec
adc
mov
sahf
xor
jp
enter
test
andb
cmp
pop
aaa
pusha
ret
in
xor
sar
jecxz
loopne
test
cmc
test
inc
jle
loope
lods
sbb
and
and
insb
jns
das
and
stos
mov
and
mov
leave
mov
adc
cmpsb
lods
mov
fidivrl
test
xor
xchg
sbb
js
xor
fsubp
dec
jne
adc
call
mov
and
fsubl
stos
das
insb
cli
sti
lret
sarb
test
sub
sarb
inc
xorb
rol
jo
inc
cmp
sbb
jmp
or
mov
xor
pushf
cmpsl
cmc
fnstcw
adc
stos
sti
push
sub
inc
fidivrs
aaa
cltd
into
xchg
xchg
cmp
or
or
push
ret
fnstsw
popa
inc
dec
dec
ret
sub
fsts
pop
movsb
pushf
xchg
xchg
and
inc
inc
jo
mov
das
enter
jmp
cmpsl
int
pop
adc
cld
pop
cmpb
inc
lods
add
sub
ftst
and
fbld
dec
out
mov
pop
dec
cmp
js
mov
sar
xchg
jo
gs
in
outsb
mov
aad
popf
aad
add
rol
lret
cmpsb
stos
mov
xchg
jbe
inc
dec
push
cmp
sub
sbb
or
cli
out
neg
lret
cmpsb
stos
mov
xchg
jbe
inc
dec
push
cmp
sub
sbb
or
cli
out
neg
lret
cmpsb
stos
mov
xchg
jbe
inc
dec
push
cmp
sub
sbb
or
cli
out
neg
lret
cmpsb
stos
mov
xchg
push
test
fdiv
inc
dec
and
mov
jmp
int3
jecxz
jae
dec
fcomi
stc
out
mov
inc
jle
dec
arpl
add
or
sbb
in
ret
cld
ror
jecxz
rep
cmpl
inc
jl
dec
arpl
insb
cmp
xor
push
cld
ror
dec
fdiv
lods
mov
pushf
stos
insb
pushf
pop
xor
cmp
sub
dec
jp
push
jne
cwtl
ret
popf
mov
mov
mov
push
jmp
mov
pop
insl
add
ret
and
cmpb
data16
add
add
pop
and
adc
xchg
cmpsb
stc
xchg
shrb
inc
add
imul
sub
jecxz
and
add
ret
psllq
dec
les
pushf
dec
pushf
mov
mov
in
hlt
lret
xchg
pusha
mov
mov
jbe
cmpsl
pushf
jo
pop
mov
adc
movsb
xlat
jae
push
mov
int3
rolb
add
div
and
xchg
aaa
adc
jecxz
dec
sub
cmp
outsl
in
lret
and
mov
ret
cld
and
addr16
lods
cmpl
lds
jae
cmp
cmp
or
sbb
mov
lcall
lret
sbb
sbb
aas
pop
sbb
stos
insb
jge
imul
xchg
scas
sbbb
leave
int
fistps
sbb
fistl
pop
gs
jbe
mov
mov
xchg
mov
jl
dec
arpl
add
or
sbb
in
ret
cld
ror
jecxz
rep
cmpl
inc
jl
dec
arpl
add
or
sbb
in
ret
popf
add
inc
mov
adcb
dec
ds
dec
rorl
push
or
or
idivb
or
push
inc
and
push
or
add
fcomps
rcrl
mov
in
mov
cmc
xor
rcrb
shlb
sub
outsb
mov
and
pop
cli
mov
push
xchg
mov
dec
ret
mov
jmp
aad
pop
dec
repz
xor
sub
pop
xchg
sbb
mov
movsb
out
std
sbb
cld
testb
sbb
jge
jbe
int3
or
mov
cmp
cltd
jbe
add
or
jne
jnp
sub
cltd
decb
push
inc
mov
push
dec
lret
pop
sti
adc
insb
or
loope
test
dec
adc
mov
into
scas
xor
xchg
mov
mov
shll
pop
or
dec
sbbl
cmc
cmp
data16
or
negb
loop
int
pop
and
jp
push
fistps
sub
fisttpll
leave
outsb
add
mov
jae
xchg
ds
adc
sbb
loopne
jmp
mov
imul
icebp
and
mov
adc
ja
jnp
lds
mov
dec
push
popa
inc
dec
mov
dec
jbe
push
lcall
outsl
test
mov
cs
fldcw
movsb
and
and
in
fs
jle
sbb
push
adc
cmc
push
or
outsl
sti
cwtl
lods
sbb
mov
rclb
incl
inc
lds
and
stos
sub
sbb
fmul
xor
adc
or
mov
jg
ljmp
inc
addr16
push
jmp
jle
pop
mov
push
nop
adc
xchg
xchg
jno
jle
xchg
sbb
cmpsb
jmp
adc
lret
mov
aaa
mov
lods
push
test
pop
les
andb
inc
loop
push
in
or
sub
insb
sbb
jecxz
test
call
jno
or
in
test
sub
pop
int
enter
push
mov
outsl
push
inc
in
adc
stc
and
xlat
mov
cwtl
mov
jmp
xor
jb
stos
orb
jbe
sbb
mov
pop
push
and
fistl
into
loopne
jno
in
pushf
push
sub
movsb
scas
jle
into
lock
insb
or
sarl
inc
dec
push
test
popf
dec
lahf
gs
mov
cmp
dec
call
dec
clc
jo
adcl
fiadds
in
popf
jecxz
sbb
call
iret
xchg
xchg
push
or
push
push
pop
rcrl
push
mov
cmp
lock
lret
ret
jae
lret
std
add
testb
in
mov
std
pop
icebp
cmp
popl
jecxz
or
and
xchg
xor
dec
mov
enter
add
inc
cmp
adc
insl
fdivs
pop
hlt
mov
xor
inc
clc
sbb
rcrl
lret
jmp
adc
add
add
push
jmp
sarl
mov
lds
jle
movsl
sbb
test
jecxz
out
push
nop
ds
out
sbb
lcall
scas
jmp
leave
dec
jae
jno
cmc
sub
sbb
mov
lds
rorb
daa
pop
mov
shll
add
mov
push
mov
jmp
mov
shlb
movsl
lret
push
iret
test
push
sbb
imul
mov
clc
and
jmp
push
lock
xor
inc
lock
inc
or
lret
inc
cmp
pop
and
or
push
and
sbb
sbb
xor
rorb
outsb
faddl
bnd
xchg
in
cmpsb
aad
cltd
pop
xor
adc
cwtl
cmp
jbe
into
xlat
mov
roll
pushf
pop
lret
mov
add
cmp
insl
mov
mov
ja
mov
mov
jnp
imul
xor
or
mov
in
push
xor
insb
testb
lods
and
add
insl
mov
mov
jo
cli
loopnew
push
popa
nop
insl
insb
cs
mov
dec
bound
dec
push
popa
mov
test
repz
loop
sub
lcall
negb
js
cmp
push
push
xchg
out
cmp
std
in
push
cmpsb
lret
mov
int
lcall
aaa
dec
arpl
out
xchg
std
mov
pusha
pop
not
sbb
cmc
sbb
imul
jp
lock
xchg
cli
mov
shlb
mov
pop
sarl
pop
pop
inc
stos
sahf
pusha
lds
cld
stos
data16
mov
mov
mov
fs
call
outsb
mov
insl
mov
pop
sub
aad
daa
lds
cmpsl
dec
popf
push
sub
fwait
xchg
bound
sub
fisttpll
xchg
lods
add
int
mov
movsb
mov
enter
jg
mov
xor
cltd
test
shrl
xchg
cli
and
xchg
jge
inc
test
xor
jb
jp
jmp
jl
fimuls
cmp
dec
mov
inc
and
enter
sbb
or
adc
outsb
movsb
mov
pop
sbb
push
dec
or
gs
popa
arpl
mov
sub
shrb
adc
cli
test
loope
ret
jge
inc
inc
pop
test
inc
js
sbb
imul
sub
push
scas
fidivs
fwait
lods
repnz
dec
repnz
ljmp
jb
cld
mov
push
outsl
xor
sbbb
repz
jns
xor
cmp
dec
xchg
mov
inc
lahf
fmuls
sarb
adc
nop
dec
negl
inc
aam
div
xchg
jp
outsb
lods
enter
js
mov
jmp
mov
lea
cld
jbe
cmp
xor
push
xchg
jbe
inc
dec
inc
rcr
in
cld
inc
in
sub
rcll
lock
les
in
or
jbe
cmc
dec
rolb
hlt
sub
lods
mov
fbstp
pop
xchg
test
cwtl
mov
test
sbb
popa
movsl
nop
lahf
add
cmp
mov
lds
pop
add
aad
adc
push
stos
xor
mov
pop
jg
dec
adc
int
jae
cmp
aad
or
aad
jo
fisttps
adc
inc
and
xchg
push
fnsave
sbb
in
fst
leave
xchg
pop
pop
jg
mov
add
mov
push
xor
inc
sti
out
xchg
ja
xor
ljmp
fdiv
mov
mov
pushf
sub
daa
in
xor
sub
jno
or
mov
pop
cltd
push
xchg
lods
inc
aam
pop
xchg
mov
scas
mov
sub
and
call
add
xor
outsb
fsubp
insl
pop
pop
push
push
add
push
jae
ficomps
or
fcoml
add
cmp
push
sbb
addl
mov
aad
je
push
xchg
adc
pushf
push
idivl
lea
ret
sbb
mov
sub
lods
sbb
pop
mov
syscall
add
lcall
sub
xchg
dec
add
adc
fcompl
add
sbb
ret
cli
jns
xchg
mov
dec
mov
sub
addl
decb
jo
out
imul
jecxz
xor
shrl
xchg
mov
int
fmuls
add
push
xor
mov
mov
mov
or
test
std
adc
ret
sub
icebp
cmpsl
aam
out
int3
jno
xlat
iret
inc
dec
mov
loop
hlt
xchg
rorb
lret
pop
fldl
icebp
ljmp
jnp
fildll
js
repnz
pop
pop
pavgw
adc
repz
push
sbb
mov
adc
andb
jmp
xor
les
outsl
add
adc
scas
sbb
jae
lods
bound
mov
inc
pusha
mov
adc
pop
mov
cmpsl
icebp
addl
sti
and
jo
jo
ja
pop
out
ja
dec
mov
out
cmp
and
inc
mov
xor
xor
stos
in
test
jg
dec
mov
jae
loope
cmpl
in
test
test
cmp
cmpsb
cld
add
stos
and
push
sti
repnz
jle
cmp
sub
pop
xchg
test
xor
pusha
popf
shrl
lret
xlat
add
cmp
rorl
repz
inc
push
xchg
in
insl
pushf
cmp
lods
das
dec
imull
arpl
adc
dec
adc
inc
dec
xchg
pusha
sti
dec
sub
stc
std
xor
aad
mov
shll
aam
sub
push
test
jnp
arpl
ret
std
bound
adc
subb
lret
mov
xor
sub
and
mov
in
hlt
pop
bound
push
push
daa
enter
inc
add
sub
mov
mov
sti
int3
cmp
jg
mov
movsb
sub
mov
adc
inc
cmp
or
je,pn
inc
sbb
lea
std
outsb
jo
inc
add
shlb
mulb
adc
call
or
insb
mov
adc
adcb
out
clc
fsts
les
por
mov
cmpsb
xchg
insl
xor
pop
and
lcall
int
fildll
sahf
push
dec
sbb
mov
adc
aam
cmp
pop
dec
mov
sahf
adc
xor
movsl
xchg
scas
mov
mov
outsl
mov
adc
aam
or
out
testb
out
sbb
sti
fiadds
mov
jp
dec
pop
cmp
lds
scas
test
sbb
mov
mov
jne
lret
imul
mov
dec
daa
xchg
xchg
xor
dec
mov
mov
xchg
dec
cltd
cltd
push
add
jg
inc
in
scas
rolb
xor
mov
fcoml
mov
pop
shrl
lret
addr16
cmpsl
sub
pop
shrb
xor
sub
mov
fwait
xchg
or
loop
scas
loopne
jle
cmp
fiaddl
test
xor
stos
cs
nop
ret
pop
gs
scas
lahf
fildll
cmc
and
out
cmpsl
out
xor
adc
test
xchg
fiaddl
sub
popa
mov
sbb
repz
incl
stc
jle
xchg
pusha
aad
push
outsb
sub
mov
hlt
sbb
popf
test
inc
inc
mov
pop
sbb
lods
out
mov
dec
cli
cmp
mov
pusha
call
jno
fcoms
inc
adc
cmp
and
shlb
lahf
mov
popf
and
test
roll
iret
mov
rcll
or
mov
or
es
jge
stc
cli
fdivs
xor
adc
add
sti
ds
in
aaa
or
adcb
stos
out
arpl
pop
pop
or
jl
dec
call
in
mov
cmpsl
and
mov
mov
xlat
inc
dec
adc
lret
daa
iret
xor
sub
out
or
sbb
jmp
aad
jno
mov
xor
push
rorb
jb
mov
mov
jmp
push
loopne
mov
pop
or
push
jecxz
repz
mov
sbb
enter
ficompl
add
jne
lahf
xor
and
jnp
sti
and
push
insb
ret
mov
cli
in
insl
roll
cmp
dec
insl
cmc
dec
push
lret
xor
cld
or
test
mov
cmp
pop
and
xor
imul
rcr
call
or
into
mov
jne
sbbb
testb
dec
nop
cmp
dec
push
je
movsb
sub
jmp
insl
nop
or
xor
or
pop
out
add
sahf
inc
call
scas
mov
inc
lret
lods
xor
adc
push
xor
gs
lea
xchg
add
mov
inc
test
shl
push
add
mov
xor
cmc
test
mov
push
or
cmp
cmpsb
adc
pop
mov
add
cwtl
mov
mov
jl
das
jno
or
lret
outsl
mov
mov
add
xchg
and
jnp
rcr
imul
mov
cmp
fs
mov
in
bound
dec
inc
js
shlb
push
fadds
insl
jle
ret
lea
rorl
pop
sbb
jo
scas
sub
pushf
xchg
cmp
int
adc
jae
loopne
mov
mov
roll
hlt
mov
pop
sti
mov
or
imul
call
mov
fldt
cmp
test
lods
jge
cmp
fistl
dec
pop
cwtl
clc
or
ds
das
stos
pop
mov
lods
pop
jp
into
idivl
mov
repnz
inc
dec
rcr
mov
mov
lods
int3
lret
imul
icebp
jno
and
std
mov
orl
or
jne
jne
movsl
mov
sub
pushf
push
fdiv
pop
adc
iret
popf
xchg
sub
in
pop
lods
insl
fdivs
sti
pop
mov
clc
jno
iret
mov
enter
inc
mov
cli
adc
adc
and
sub
js
aad
xchg
mov
inc
jp
call
inc
sarb
and
hlt
sbb
jg
imul
sbb
sbb
in
add
or
mov
xchg
and
jp
dec
insb
addr16
in
subb
dec
add
stc
aas
aam
comiss
fsubl
mov
orl
and
nop
mov
lods
pop
mov
jmp
adc
xchg
cmp
shll
lea
or
cs
clc
gs
sub
jno
cmpsb
addr16
xor
xchg
sub
pusha
inc
cmc
add
test
jecxz
sahf
shrl
scas
mov
je
inc
sub
mov
add
les
or
icebp
mov
push
xchg
out
mov
cli
cmp
inc
mov
adc
mov
fbld
insl
cld
xchg
test
lods
xor
push
nop
pop
mov
jle
and
es
cmp
push
lock
xchg
and
push
push
mov
test
fs
sbb
in
mov
inc
jl
xor
pushf
imull
pop
lcall
sub
pop
movsl
stos
xor
adc
pop
repnz
and
std
ss
dec
cmp
inc
in
mov
clc
pusha
test
pop
jae
test
in
jecxz
enter
mov
mov
xchg
sub
out
xchg
jge
and
push
sahf
lret
out
adc
add
daa
cli
cwtl
les
scas
and
cmp
or
jbe
push
mov
pop
loop
test
add
xor
cmp
sahf
cld
imul
xchg
rorb
in
cmpsl
test
ds
xchg
pop
or
mov
fcmovu
adcb
mov
push
ljmp
push
clc
movsl
push
loop
ret
sbb
mov
dec
dec
or
call
scas
jecxz
lret
or
fwait
add
xchg
push
fimull
mov
mov
mov
cmp
push
gs
sbb
sbb
mull
subb
shrb
lea
mov
out
sbbl
test
push
repz
mov
sub
push
sbb
and
es
nop
mov
xchg
loope
xor
and
pop
inc
mov
fnstsw
lods
insl
sub
leave
out
loope
movsl
dec
push
push
xchg
jp
inc
lret
cltd
adc
mov
push
mov
cmpsl
outsl
xchg
in
imul
lods
inc
lret
xor
push
jo
decl
and
popa
lret
pop
xor
faddl
stos
sbb
pop
sar
fidivrs
lahf
and
les
call
pop
int3
arpl
mov
push
es
push
pop
std
push
jno
sbb
fninit
int
clc
push
pop
ljmp
and
popf
pop
jmp
mov
je
mov
mov
mov
push
inc
out
dec
xor
push
xchg
and
in
iret
jle
mov
lret
lods
push
xor
mov
ljmp
mov
popa
push
ror
imul
aaa
push
xchg
test
je
push
in
mov
sub
aas
xchg
ss
shrl
adc
leave
push
movsl
inc
loope
mov
addl
fmuls
jae
jbe
cmpsl
sti
dec
lods
push
xor
jne
jb
xor
push
lods
mov
push
push
jae
inc
add
inc
roll
nop/reserved
mov
cld
inc
rorb
icebp
and
mov
mov
movsb
ret
xchg
mov
int
into
int
lock
inc
cmpsl
scas
xor
mov
cmp
lods
fwait
outsb
out
int3
push
daa
mov
or
inc
pushf
notb
xchg
jmp
push
negl
mov
xchg
dec
test
imull
sbb
shlb
dec
dec
inc
xchg
push
inc
loopne
cmp
ds
pusha
repz
push
mov
pop
push
rol
mov
cltd
arpl
gs
lock
or
jno
and
xchg
int
adc
adc
jle
cltd
jnp
popf
cmp
cmpsb
fdivrl
push
out
push
adc
inc
sub
mov
mov
or
sbb
imul
das
mov
push
mov
test
popl
mov
add
roll
addr16
or
lods
je
in
and
movsl
pop
push
loope,pt
adc
xor
aaa
add
pop
mov
arpl
out
cmp
rolb
sbb
push
pusha
mov
addr16
and
les
cmp
sbbb
stc
add
lahf
aad
jnp
mov
lods
push
add
mov
xor
int3
mov
inc
mov
in
popf
fadd
imul
mov
fs
ljmp
mov
ljmp
clc
scas
js
cld
inc
sub
xchg
pop
mov
popa
inc
mov
fwait
cmp
xor
pop
mov
add
movsb
cmp
cli
inc
fs
sbb
xchg
int
jo
aaa
into
dec
mov
sbb
mov
jmp
in
sbb
mov
les
stc
dec
lcall
gs
pop
pop
lds
popl
aas
pusha
dec
outsb
xor
fs
jae
and
imul
jmp
mov
fildll
adc
mov
stos
xchg
push
std
pop
fcomps
or
sbb
ja
popa
js
pusha
cmpsb
dec
and
cmp
jbe
mov
xorl
insb
rcrl
lahf
test
or
addl
mov
push
xor
mov
fs
movsb
add
fistps
out
lret
pop
negl
jl
aad
fwait
or
test
scas
and
xchg
inc
test
add
add
xchg
aas
sub
push
cwtl
adc
mov
jge
sub
pop
hlt
cltd
or
pop
adc
pop
mov
std
and
cmc
loop
adc
inc
cmpsb
xchg
jae
call
into
inc
add
sub
hlt
cmp
mov
add
sbb
lock
mov
push
add
inc
jecxz
pop
stc
int
iret
jb
sbb
stos
lea
dec
pop
rclb
popa
xchg
cwtd
push
xchg
mov
jge
sub
jo
dec
incb
push
push
cmp
popa
xchg
mov
xor
push
filds
mov
push
dec
lcall
hlt
xor
dec
ss
into
in
mov
pop
cmp
ljmp
addr16
adc
movsl
popf
outsb
lods
mov
adc
nop
int3
xor
out
test
mov
mov
jo
loopne
aaa
outsb
stos
sub
inc
test
and
ja
flds
dec
mov
pusha
mov
pusha
inc
daa
mov
jo
or
mov
lahf
xchg
sub
aas
cmp
xchg
lcall
and
outsb
push
int3
in
pop
xchg
popa
dec
sub
popf
adc
mov
iret
inc
rcrl
add
mov
fiaddl
shll
int3
test
sti
mov
xchg
daa
loopne
je
or
popf
mov
sub
and
mov
mov
pop
inc
jge
jne
nop
icebp
or
andb
popf
es
ret
ficomps
cs
jne
cmp
xchg
and
call
jecxz
xchg
enter
repz
fdiv
lods
cmpl
inc
jl
dec
arpl
add
or
sbb
in
ret
cld
ror
jecxz
rep
cmpl
inc
jl
dec
arpl
add
or
sbb
in
ret
cld
fwait
int3
fdiv
lods
cmpl
insl
fwait
jl
dec
arpl
sub
cmp
or
ret
cld
ror
jecxz
repnz
cmpl
mov
pop
add
mov
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
sub
lcall
mov
movsb
scas
sti
cmp
sub
sbb
or
jnp
imul
dec
jnp
mov
mov
lret
or
sbb
or
jp
push
pop
imul
xchg
stos
fwait
lcall
ret
lret
call
outsl
cmp
or
xor
lret
repnz
xor
lret
jne
cmp
das
pop
insl
jbe
addr16
daa
and
inc
sti
inc
in
push
popa
mov
repz
cmp
push
push
imul
xchg
hlt
jmp
popf
pusha
fistl
mov
fisttpl
mov
fsts
stos
fwait
mov
jmp
sbb
mov
add
pop
in
in
lret
loop
lcall
adc
push
jp
push
lahf
pop
adc
loop
fidivrl
pop
sbb
or
sub
add
fildll
test
stos
jnp
stos
pshufw
and
and
or
lds
cld
movq
xchg
push
sbb
pop
xchg
dec
imul
stos
mov
lret
ljmp
adc
add
xor
and
push
pop
imul
out
out
fwait
imulb
mov
xchg
arpl
outsb
push
push
es
imul
in
jmp
mov
fimull
inc
jp
pop
outsl
js
cmp
xor
pop
push
push
int3
lret
stc
lret
mov
jmp
sti
cmp
sub
sbb
or
jp
push
pop
imul
mov
mov
lret
or
sbb
sub
cmp
push
pop
imul
mov
test
test
loop,pt
test
add
sbb
pop
push
xchg
sub
ljmp
push
inc
scas
adc
xor
mov
jnp
clc
fdivl
adc
pop
lret
pop
or
push
sarb
nop
adc
mov
mov
hlt
enter
sti
and
aam
fs
sti
jns
xlat
shll
sub
sub
leave
movsb
cmp
jne
idivb
lds
repz
stos
les
inc
nop
roll
and
test
cmovl
es
adc
in
incl
sbb
neg
cmp
test
fisttpl
sti
insl
dec
insl
pop
xchg
xorb
jo
adc
mov
cmp
mov
or
xor
adc
pop
xchg
push
cmp
pop
std
add
mov
push
ljmp
mov
cli
push
jnp
inc
pop
lds
out
cmp
push
jge
aaa
test
insb
aaa
inc
xchg
adc
add
dec
in
das
push
sbb
push
push
or
loopne
aad
add
jne
in
sub
inc
das
push
jae
nop
mov
adc
add
data16
dec
test
movsb
xor
dec
dec
psubd
jmp
mov
gs
lcall
mov
inc
jb
gs
into
out
and
mov
sub
dec
cwtl
mov
fiaddl
jecxz
xor
lret
dec
ret
xorl
adc
rcrl
bound
sub
push
in
in
or
int
dec
adc
jp
mov
test
pop
addr16
push
cs
mov
pop
adc
loope
das
pop
inc
dec
movsl
fnsetpm(287
lret
adc
cld
pushf
lods
mov
and
dec
fmull
add
xchg
pop
mov
in
jle
mov
sub
sbb
lret
les
dec
test
adc
stos
out
dec
xchg
inc
pop
mov
inc
loopne
insl
xchg
push
lret
sub
cmpsb
mov
inc
mov
inc
or
dec
mov
cs
packuswb
in
xchg
popf
lds
sbb
xorl
jns
call
loop
jmp
and
into
outsb
adcl
divb
mov
xor
push
in
or
roll
pop
sub
or
mov
leave
shll
xlat
adc
cmp
aam
test
aas
push
mov
add
jno
adc
ret
orb
repz
andl
lahf
push
pop
and
jg
mov
and
daa
push
sub
rcrb
js
pop
sub
mulb
lcall
mov
pop
push
push
mov
pop
repnz
push
out
cmpb
adcl
aad
ds
pop
xchg
jo
add
and
cmp
cli
cwtl
lock
adc
xor
faddp
mov
imul
pop
dec
ficompl
repnz
mov
insb
sbb
cmp
xchg
rolb
mov
cmp
scas
dec
iret
mov
sub
dec
int
dec
inc
pop
popf
mov
andl
sti
dec
outsw
jecxz
loopne
fistpll
xchg
insb
or
and
call
sub
jmp
adc
cvtps2pd
adc
ret
or
pop
jb
sbb
mov
in
repnz
repz
pop
fsubrs
ja
add
fwait
insl
repnz
xchg
pop
stc
jecxz
jbe
jg
subb
enter
sbb
xor
mov
cwtl
lahf
push
fnstsw
xchg
sbb
in
je
data16
push
jae
pop
mov
fisttps
mov
push
or
mov
fs
int3
jb
adc
sahf
jae
icebp
pop
sbb
or
mov
repnz
sbb
fwait
sub
push
addl
inc
popf
adc
dec
out
test
bnd
arpl
cmpsb
add
sbb
test
notb
push
out
int3
std
in
rcll
leave
out
jo
dec
cli
xchg
rclb
rorl
mov
xorl
cmc
out
rcll
jnp
and
dec
out
jge
sub
rol
les
loop
xchg
shr
push
cmp
or
pop
cld
mov
sar
popl
cs
adc
mov
jl
dec
jg
cltd
repz
lahf
push
sbb
cmpsb
mov
mov
cmc
stos
xchg
movl
and
adc
mov
push
push
and
cs
mov
mov
cmpsl
mov
sti
cwtl
push
bound
fistpll
and
jecxz
popa
cwtl
bound
xor
xchg
pop
inc
das
mov
xor
in
cmp
push
cmpsb
jl
lods
test
sub
insb
jge
xor
repnz
adc
dec
sarl
cmp
mov
mov
mov
xchg
mov
repz
test
nop
clc
jle
lea
loope
jne
xor
dec
adc
xchg
sbb
out
mov
sub
adc
and
jge
pusha
stos
inc
popa
outsl
xor
and
and
insl
fsts
pop
sbb
sbb
mov
cmp
sbb
jp
jmp
in
cltd
xor
sbb
stos
mov
insb
sub
xchg
jns
shlb
je
sbb
data16
adcl
lahf
lock
mov
fstps
std
pop
dec
icebp
out
shlb
movsb
ja
rcll
xchg
or
xlat
inc
movsb
ds
cmp
add
jge
or
xchg
lret
outsl
mov
inc
sub
test
adc
xor
mov
cwtl
js
ss
dec
pop
test
in
pop
fbstp
test
jecxz
cltd
sub
int
cmp
imul
mul
or
xchg
out
ja
mov
popa
jo
lret
push
inc
fmul
fidivl
sub
mov
jge
out
dec
mov
sub
cltd
or
inc
icebp
push
gs
xchg
jecxz
dec
push
xchg
aam
mov
gs
or
push
call
inc
xchg
imul
shrl
filds
mov
jecxz
xchg
xchg
or
pushf
mov
or
push
jbe
xor
inc
cmp
xlat
imul
das
mov
mov
add
repnz
or
push
push
xchg
sbb
dec
dec
jbe
hlt
daa
shlb
loopne
mov
jb
or
sbb
in
std
scas
sbb
pusha
cli
stos
icebp
xchg
sub
test
cltd
ret
sbb
nop
mov
negb
int3
add
test
push
dec
repnz
fidivrs
dec
stos
xor
mov
pmulhuw
and
lret
imul
sub
xchg
in
popf
adc
adc
sbb
lea
adcl
add
and
inc
mov
adc
outsb
in
ds
xchg
stos
das
jb
and
ret
mov
xor
sub
lahf
stc
fisttpl
dec
ja
pop
xchg
js
outsb
xchg
mov
mov
push
lea
push
ret
jbe
pop
lahf
mov
jo
dec
fldlg2
mov
xchg
inc
mov
dec
push
mov
mov
leave
or
jns
adc
lea
add
adc
shll
es
rclb
jl
lock
int3
xchg
insb
orb
jb
loopne
into
lcall
fsubp
into
shlb
adc
inc
arpl
xor
cmp
jg
sbb
push
xchg
and
cmp
add
std
stos
pop
repz
mov
sahf
push
imul
lcall
arpl
xor
lahf
push
fs
cmp
inc
mov
leave
and
dec
repz
lret
lods
negl
movsb
inc
dec
mov
mov
adc
push
jnp
jle
jmp
add
fwait
add
mov
les
scas
cwtl
aas
xchg
popl
repz
jle
lock
lret
pop
cli
sbb
loop
xlat
icebp
jg
movsl
cs
nop
add
mov
call
fadd
xchg
cmpb
sbbl
rcrl
adc
stos
xchg
mov
ljmp
pop
stos
lds
xchg
sbbl
sbb
movsb
push
cmp
inc
push
testl
popf
push
rcrb
outsb
mov
sbb
out
adc
xor
sub
lock
and
pop
xor
int3
loop
inc
into
pop
cmpsl
dec
dec
inc
add
out
je
insl
or
ds
push
mov
push
int3
dec
add
pop
pop
repz
inc
jbe
rclb
cmp
ja
movsl
cmp
js
outsl
mov
imul
inc
pop
dec
mov
pusha
fcompl
ret
mov
je
cmp
and
xchg
je
mov
mov
xor
out
add
inc
jnp
jmp
push
dec
loop
dec
jmp
mov
ja
xor
jmp
inc
jmp
sti
dec
insb
sbb
push
cmpsl
cli
pusha
stos
sbb
out
or
rcrb
or
push
in
push
pop
mov
testb
adc
in
sub
push
mov
aaa
add
xchg
pop
je
mov
add
aad
cmp
jge
xchg
outsl
and
in
mov
push
jmp
ss
fsubrp
jne
sti
push
cmp
stc
negb
pop
fistl
push
gs
sub
jae
adc
cmc
loopne
xchg
rol
int3
andb
decl
lods
push
repnz
orl
push
push
inc
mov
jae
adc
popf
mov
jb
fidivrs
call
or
rcr
adc
cs
inc
movsb
cmpsb
xor
popa
jg
jp
stos
mov
aaa
sbb
jbe
aaa
gs
and
jo
into
out
mov
inc
xchg
lahf
mov
and
adcb
mov
cwtl
xor
adc
xchg
in
jns
lahf
adc
ret
fistl
out
dec
lret
cwtl
xchg
aam
mov
mov
jae
xor
rorl
and
gs
scas
push
mov
scas
call
enter
dec
movq
test
cs
pop
in
mov
and
das
fnstenv
cmpsb
jg
ret
pushf
xlat
movsl
push
shrb
pop
loope
dec
push
xchg
out
pusha
lds
push
movsl
xor
mov
push
add
push
add
js,pt
lret
push
mov
out
or
mov
cli
lahf
nop
add
fstpt
stos
out
std
aas
dec
aam
stos
lock
imul
mov
jne
in
cs
movsl
push
popa
and
icebp
or
subb
rcl
fcomps
mov
and
add
mov
push
and
cmp
repz
xchg
pop
arpl
adc
lods
jmp
jecxz
fmuls
ret
aam
push
das
push
insl
call
mov
push
das
mov
xchg
cmc
or
in
and
dec
mov
in
mov
sbb
imul
aaa
shll
out
pop
push
ljmp
xchg
add
pop
adc
stos
ja
jno
lods
adcl
lea
push
arpl
repnz
mov
jne
out
fsubrl
jecxz
addr16
movsb
xchg
or
mov
gs
call
xor
add
jmp
clc
lea
stc
shl
lcall
call
inc
push
stc
mov
sbbb
ficomps
jo
scas
test
outsb
and
loop
inc
mov
mov
or
sbb
sarb
cmp
sub
jecxz
mov
jl
cltd
cs
mov
mov
loop
cmpsb
shrb
mov
aad
sbb
add
shr
jmp
sbb
dec
sarl
rcr
sahf
lcall
lahf
mov
repnz
arpl
icebp
cmpsl
push
add
lods
sub
mov
adc
mov
add
add
test
jecxz
in
mov
lcall
mov
insb
push
push
shlb
and
loopew
push
xlat
adcb
pop
scas
fdivrp
rcrb
or
pushf
sub
cmpsl
in
into
fdivr
mov
cmp
mov
addr16
dec
pop
mov
aam
sbb
pop
sti
push
fwait
nop
or
ja
push
pop
repz
push
cmp
jecxz
stos
push
test
jne
adc
movsb
or
or
jg
mov
shl
xor
xchg
dec
out
into
mov
gs
cli
cwtl
ror
push
pop
repnz
jae
pusha
test
call
dec
nop
xchg
les
scas
jne
or
jns
jecxz
jnp
loopne
lahf
dec
insl
mov
mov
sbb
or
aad
inc
cmpsb
adc
negb
adc
xchg
xor
in
sbb
xor
sub
call
pop
mov
jne
xchg
leave
in
mov
cmp
ret
in
xchg
mov
leave
sub
jae
jge
inc
jnp
mov
or
cmp
pop
test
out
cmp
inc
cmp
cmp
jg
sbb
mov
imul
jno
ret
xor
sub
int
xor
aaa
adc
mov
mov
sub
push
gs
lods
pop
in
pop
outsb
fidivl
inc
hlt
mov
pushw
cld
push
cmp
xchg
lods
rclb
out
rcr
int3
je
gs
adc
pop
mov
jle
pop
and
jno
pop
sbb
jle
es
xlat
xlat
sbb
mov
jnp
or
sbb
ljmp
inc
adc
rcl
pop
sbb
dec
scas
mov
imul
mov
mov
ljmp
jg
xor
jle
mov
fdivl
adc
mov
je
add
sub
sbb
push
push
dec
jl
aas
push
sub
das
into
sub
fstps
lahf
lds
jge
scas
nop
je
push
pusha
iret
int
jne
push
addb
sub
and
push
inc
cli
fldl
stc
mov
movsb
dec
popa
add
mov
fxtract
mov
movsl
mov
pop
loop
cmp
mov
sarb
lea
pop
mov
cmpsl
xchg
mov
and
jp
dec
ficompl
and
test
popa
mov
jl
lods
pop
lods
xchg
and
mov
or
cmp
movsb
mov
lea
dec
adc
mov
cltd
leave
xor
sbb
jo
and
add
aam
cmpsb
fcompl
int
je
in
subb
sbb
inc
popf
and
aas
sbb
push
lahf
push
xchg
dec
mov
outsl
fistpl
or
fstpl
hlt
pusha
out
lods
scas
and
jno
jbe
pop
scas
in
sahf
sbb
inc
xchg
jl
out
inc
repnz
xor
pushf
scas
sub
jns
je
fwait
mov
repz
mov
cmp
cltd
test
sahf
inc
xchg
push
add
lahf
push
and
jge
add
xchg
sar
popa
test
mov
mov
std
push
mov
rolb
inc
jp
hlt
stos
hlt
xor
add
out
xor
aad
or
cmp
ds
add
arpl
repnz
xchg
fimuls
mov
mov
and
inc
ret
jae
fidivrs
and
or
adc
sub
lods
rcrl
sbb
out
cmc
xlat
dec
jg
pop
mov
int3
or
inc
and
insl
pusha
lahf
xor
mov
sub
fistps
or
xor
push
lea
jnp
bound
mov
inc
adc
loope
mov
enter
imulb
sbb
push
das
inc
test
imul
mov
jmp
shlb
in
and
das
or
iret
pop
cwtl
into
out
adc
xchg
negl
iret
mov
imul
je
pushf
fldt
mov
hlt
gs
ret
mov
aaa
jge
sub
js
flds
cs
xchg
cld
jno
popa
roll
xor
adc
inc
add
and
scas
gs
add
stc
leave
shr
jns
loop
lret
inc
push
sbb
daa
gs
cld
inc
xor
cli
sub
push
cmp
sub
add
xchg
data16
dec
shrl
mov
xchg
inc
add
stos
mov
dec
inc
js
jb
xor
dec
sub
adc
repnz
loop
in
add
into
icebp
push
js
xchg
mov
pop
inc
cmc
cmpl
sub
rcrb
fstpl
addr16
subb
int
aam
in
push
shll
shr
mov
rcrl
push
jmp
jo
ficompl
rorb
pop
and
sub
mov
sbb
fistps
cli
in
sub
loopne
sbb
add
int3
in
push
xor
or
scas
mov
jmp
xorb
daa
add
clc
test
movsb
xchg
push
jns
fcoml
imul
mov
xor
rcr
lods
sahf
loopne,pt
mov
pop
sahf
push
dec
rcrl
ljmp
aaa
cmpsb
popa
xlat
dec
sub
sbb
cmp
fs
js
fcmovnbe
pusha
and
repnz
shrl
mov
ret
in
mov
cmp
push
out
imul
into
xchg
lret
inc
scas
jl
xchg
jo
mov
test
andb
stc
mov
push
or
shll
or
xchg
fcomps
inc
les
sbb
mov
loopne
stc
mov
sub
xor
jae
icebp
cmp
or
inc
cltd
xor
mov
sbbl
popa
fildl
inc
sub
insb
mov
test
imul
sbb
xorb
int
pop
aas
adc
shll
jbe
or
stos
in
in
aad
push
or
in
and
addr16
lock
nop
adc
es
mov
loope
jge
mov
xor
mov
mov
adc
pushf
dec
xor
into
push
mov
mov
ror
mov
hlt
addr16
test
pop
add
int3
push
inc
sbb
popf
jg
test
xchg
inc
cmc
mov
or
out
mov
mov
mov
and
stos
mov
pushw
xchg
mov
imul
data16
test
cmp
adc
jp
mov
sarb
push
mov
test
xor
shll
pop
dec
mov
lods
jnp
cmp
insb
xor
fucomip
stos
push
jns
nop
xchg
or
mull
dec
inc
jecxz
add
xor
stos
lret
push
aad
push
ljmp
sub
sbb
jo
cmp
ja
adc
lea
in
mov
cwtl
fcoml
stc
mov
jmp
outsb
adc
ret
shrb
sbb
bound
cltd
or
pop
lds
out
aas
notl
gs
xlat
mov
scas
inc
cmpsb
xor
add
cmp
lret
mov
xchg
inc
mov
in
and
xor
pushf
jno
sub
lret
repz
outsb
mov
stos
decb
sti
jo
aas
ds
mov
outsl
sbb
pop
outsl
sub
jb
cmpsl
push
test
mov
testl
mov
inc
or
mov
jns
movsb
test
filds
in
sbb
mov
fs
in
dec
pop
xchg
in
popf
sub
in
repz
xchg
pop
stc
mov
fistpl
cmp
push
sub
xor
pop
outsl
loope
lods
loope
rcrl
pop
insl
daa
sub
fwait
std
cmp
fwait
lods
test
iret
dec
dec
mov
out
mov
sbb
xchg
jb
push
and
mov
xchg
scas
or
cmp
notl
es
outsl
lret
add
es
stos
lock
mov
jnp
out
jmp
sbb
bound
stos
add
pop
ljmp
or
inc
fisttpl
push
sub
mov
xor
lock
lods
lea
packssdw
sub
clc
lock
inc
out
rolb
call
jnp
fldenv
pop
pop
jecxz
dec
and
jg
insb
inc
push
add
push
mov
xor
cli
movsb
sbb
sbb
arpl
fwait
test
outsb
inc
push
sub
stos
repnz
ss
fimull
lcall
push
adc
movsl
icebp
add
and
xchg
cmp
scas
in
sti
ljmp
and
mov
or
mov
inc
imul
mov
hlt
lods
xor
mov
lods
and
mov
testb
inc
mov
idivb
dec
xchg
into
rolb
sbb
cmp
jmp
dec
cld
mov
or
sub
mov
xor
cmpsb
cmc
movsb
test
ja
mov
jb
ret
addr16
pop
add
pop
sub
ljmp
cmp
dec
bound
jns
inc
add
cmp
lock
std
and
les
push
ja
in
or
xor
clc
inc
loopne
ret
sub
in
push
aaa
mov
pusha
fsubrl
pop
fcompl
jb
lds
out
subb
mov
ja
into
shrl
aad
cli
sbb
mov
movsb
xchg
pop
lret
frstor
stos
cmp
cmp
movsb
lahf
mov
test
cli
pushf
fwait
jae
mov
lret
or
sbb
sub
cmp
push
pop
imul
mov
mov
lret
or
sbb
sub
cmp
push
pop
imul
mov
mov
lret
or
sbb
sub
cmp
push
pop
push
jnp
mov
mov
lret
or
mov
sub
dec
or
xchg
mov
and
imul
push
add
cmp
or
fsts
sub
cltd
rorb
add
dec
bound
jb
inc
sbb
mov
fsts
test
and
imul
cmp
inc
sbb
mov
mov
xchg
mov
mov
ss
pusha
sbb
jb
leave
ret
test
loope
mov
dec
imul
dec
test
aas
lahf
mov
mov
movsb
dec
push
adc
sbb
leave
sub
fisubl
mov
and
aas
pop
mov
push
jge
clc
xor
mov
adc
insb
xor
je
xchg
dec
bound
bound
mov
and
cltd
sbb
lcall
cltd
inc
xchg
push
cmp
inc
or
mov
sbb
outsl
test
movl
dec
mov
mov
mov
jmp
fisubrs
mov
imul
cmp
inc
sbb
mov
fsts
test
fs
pop
imul
cmp
daa
push
adc
pushf
mov
loope
decb
xchg
inc
imul
cmp
push
dec
inc
outsb
push
or
xorl
ret
rcr
dec
xor
imul
sub
cmp
inc
sbb
mov
fsts
test
and
imul
cmp
inc
sbb
mov
fsts
test
and
and
cmc
mov
aaa
xchg
inc
sti
inc
scas
sub
inc
sti
sbb
test
dec
mov
repnz
ret
ja
aas
xor
std
jns
shlb
add
sub
out
cmpsb
data16
ret
push
xor
shll
lds
dec
sbb
out
cltd
push
jecxz
ret
inc
push
fistpll
pop
outsl
push
in
jns
dec
push
mov
adc
dec
cltd
dec
dec
or
cmp
std
leave
dec
mov
cmpsl
test
mov
dec
xchg
aad
xor
popf
loop
scas
in
cmpsl
xchg
add
sbb
test
ljmp
test
push
enter
test
add
mov
dec
aaa
pop
and
mov
outsb
pop
mov
fcompl
fidivl
arpl
jne
mov
xchg
test
lds
inc
push
mov
shlb
out
add
push
outsb
xlat
sbb
pop
or
mov
push
pop
mov
xor
jo
int
jo
sbb
sub
cmp
sarb
add
les
icebp
ficoml
xchg
and
je
mov
int3
xchg
xchg
or
rcrl
jecxz
mov
jmp
lahf
popf
fcompl
insb
nop
test
xchg
dec
idivl
adc
sti
push
pop
fs
pop
and
cld
and
or
rcrb
xlat
jg
jns
inc
loopne
ret
xor
dec
out
insl
fldcw
xor
pop
je
sbb
fs
imul
insb
lret
shrl
push
inc
cli
push
in
mov
adc
test
addr16
xchg
pop
add
mov
je
xchg
aaa
dec
idiv
and
inc
pushf
sarl
xchg
daa
push
xchg
in
mov
xor
lahf
inc
movsb
xor
push
mov
inc
adc
push
and
jb
jns
ja
mov
mov
scas
jo
negb
push
imul
lret
and
add
cmp
sub
sub
lock
cmp
rcll
adc
int3
out
push
outsl
daa
pusha
add
mov
adc
add
enter
int3
and
dec
xchg
hlt
jmp
mov
inc
repnz
std
outsb
ja
lahf
imul
adc
and
adc
xor
inc
push
dec
mov
cld
jns
sbb
out
pop
xlat
push
movsb
sub
inc
data16
lret
data16
mov
xor
into
sbb
sub
in
scas
shll
sbb
mov
mov
fidivrs
mov
cwtl
ret
sbb
adc
xchg
and
pushf
fpatan
cli
popl
inc
ljmp
lods
adc
push
popf
adc
mov
lods
in
stc
add
jo
mov
or
movsb
addr16
cmpl
mov
ja
mov
or
jp
push
dec
xchg
adc
dec
pushl
call
push
push
mov
adc
loope
and
cmpsl
xchg
push
jmp
fsubrs
ret
cwtl
rorb
sahf
insb
jmp
lcall
sbbb
enter
shr
into
in
ret
pop
call
lret
imul
sti
add
pop
push
sub
mov
push
cmc
test
iret
das
adc
adc
jo
in
xlat
xchg
rcl
pushl
xchg
in
pop
insl
fstpl
mov
andb
xchg
mov
mov
test
ret
mov
jmp
dec
leave
je
adc
mov
cmp
sub
lcall
rolb
mov
loop
mov
pop
test
cmp
jecxz
icebp
test
cmp
test
fisubl
dec
mov
or
cltd
xchg
out
mov
out
xor
loopne
std
sarl
out
lds
sar
fcomip
push
mov
aad
mov
add
fdivl
xchg
bound
sbb
fcmove
imul
outsl
loop
xchg
pushf
mov
cli
shr
jg
jno
adc
mov
xchg
push
push
repnz
sbb
imul
ds
sti
xorl
and
sub
dec
pop
adcl
sti
out
popa
pop
repnz
roll
sbbb
pop
sub
aad
test
cmp
aam
xor
or
push
cltd
out
or
je
mov
push
lods
push
dec
movsb
xchg
or
fs
pop
mov
cmc
cmpsl
pop
sarb
push
mov
adcl
lock
ret
pop
jp
jmp
sub
call
addr16
cmp
jge
loop
fcmovnu
lds
dec
lcall
cmp
mov
mov
adc
xor
call
rclb
mov
add
add
push
xchg
lods
inc
fs
inc
push
and
pop
jg
mov
dec
in
jmp
mov
fadds
push
or
pop
gs
sub
jnp
aaa
aaa
adc
dec
and
cmpsb
out
jmp
xchg
pushf
inc
imul
cmp
add
cmp
push
popa
xchg
int
adcb
in
nop
movsb
andl
xor
jb
pushf
push
mov
mov
fidivrs
xor
ror
xchg
xor
insl
inc
es
sub
xchg
xor
jbe
jecxz
sub
mov
scas
mov
repnz
loopne
in
out
or
aas
andb
sahf
aad
jo
jmp
jns
es
xchg
aaa
addr16
int
adc
je
in
fadds
shl
mov
stos
test
orl
mov
xor
aam
leave
rorl
push
mov
aad
inc
dec
adc
pop
cmp
divb
loop
xor
pop
testl
loop,pn
mov
mov
mov
mov
das
adc
ja
sbb
pop
test
push
addb
lods
xchg
mov
pushf
cwtl
and
pop
push
stc
repz
sub
dec
popa
rolb
enter
js
xchg
cmp
xchg
mov
xchg
sub
aam
movsb
mov
xchg
mov
les
lret
sbb
xor
or
cltd
mov
movsl
push
fdivl
cmpsl
xchg
inc
aam
add
adc
iret
sbb
sub
mov
jnp
repnz
fisttpll
test
adc
pop
mov
sbb
pop
int3
loopne
jo
cmp
jle
adc
adc
pop
addr16
std
xor
sub
mov
lock
pop
arpl
sub
sbb
sub
js
add
inc
mov
pop
push
jo
cmp
ret
xor
push
pop
divl
hlt
cmp
cmp
push
data16
inc
stos
imul
sarb
add
repnz
adc
cmp
jns
pop
dec
loope
sub
pop
ja
xchg
mov
push
jns
sub
hlt
mov
cmp
hlt
popf
sbb
lea
push
mov
out
jge
push
sbb
push
xor
loop
cs
inc
call
jbe
inc
xchg
cmp
insl
aaa
jno
stc
clc
cld
xlat
in
jge
cmpsb
or
mov
subb
outsl
aad
jp
xor
nop
xor
je
push
xchg
fscale
xchg
test
jno
cmc
idivb
push
mov
cmp
out
lock
lcall
nop
jb
nop
addr16
test
push
jnp
es
jnp
jp
icebp
hlt
jne
das
cmp
or
shlb
and
pop
xor
mov
pop
xchg
push
push
movsb
mov
jns
test
sub
mov
mov
nop
cmp
push
or
cli
stos
aas
sub
cs
out
xchg
sub
mov
dec
fcomps
xchg
sbbb
jne
lea
test
insl
cwtl
insb
or
mov
push
inc
gs
inc
movsl
pop
pop
cltd
push
testl
add
and
mov
sbb
mov
adc
or
sub
mov
and
and
aam
or
stos
shrb
out
insb
or
outsl
insb
dec
sbbl
mov
ret
or
sti
jge
adc
pop
jb
shrb
addl
lret
cmp
mov
test
mov
inc
push
lea
mov
jge
push
mov
aad
adc
adc
xchg
and
imul
cmp
adc
nop
mov
enter
sbb
enter
mov
daa
cmp
and
xchg
mov
rcrl
sti
fbstp
dec
xchg
mov
jbe
xchg
mov
add
push
pop
jbe
fldenv
cmp
es
inc
sbb
imul
sbb
shl
xlat
add
cli
sbb
mov
mov
fidivl
cli
cmp
scas
sbb
lcall
pop
and
push
adc
inc
clc
movsb
push
push
aas
xor
lret
push
movl
inc
scas
lret
jns
push
add
xchg
sahf
loop
in
sarl
mov
pop
inc
sub
clc
lretw
jnp
sbb
test
ret
rcl
ss
push
scas
xchg
cmp
dec
inc
lahf
pop
call
sbb
pop
xchg
fcmovnb
jl
inc
loopne
jmp
les
ret
jns
sbb
and
mov
add
js
aas
inc
data16
fwait
xor
cmp
arpl
hlt
icebp
popf
mov
movl
cwtl
push
xchg
jge
inc
dec
sub
cmp
mov
stos
pop
cmp
inc
pop
addr16
nop
cmp
nop
xchg
lock
xor
orl
adc
fwait
xor
jl
dec
lock
arpl
cmpsb
jo
sub
push
jp
addr16
xchg
std
lods
cmc
xchg
mov
loope
pop
mov
dec
lock
js
or
bound
sbb
adc
loope
cli
ss
and
cmp
adc
or
xchg
iret
adc
push
fstp
jge
mov
jg
add
mov
stos
rcrl
and
cmp
scas
inc
or
loop
aas
push
dec
lret
or
mov
sti
lock
and
or
xor
insb
cli
andb
pop
leave
sbbb
cli
pop
sub
daa
cmp
sahf
mov
ja
loope
fiadds
mov
push
push
mov
insl
pop
adc
or
ds
lds
sub
insl
faddl
or
div
mov
ja
pop
aam
mov
aaa
nop
testl
lret
aaa
add
in
cmpb
mov
jge
cmpsb
outsb
into
lock
out
mov
adc
mov
sarl
or
cmp
and
adc
adc
arpl
addr16
jne
test
mov
lea
and
jbe
nop
movsb
test
mov
mov
clc
sbb
add
cltd
jl
nop
mov
cmc
cwtl
xor
mov
into
rcrb
xchg
add
pop
xchg
push
fwait
sahf
and
inc
fxch
xor
mov
jl
or
in
push
mov
jno
push
mov
lret
repnz
xchg
xchg
mov
inc
ljmp
cmpsb
insl
enter
insl
daa
sbb
iret
sub
inc
out
mov
jns
imul
add
mov
inc
out
push
fbstp
out
and
cmp
jnp
jbe
test
adc
jae
mov
iret
jge
in
mov
rsm
repnz
xchg
jp
sbb
dec
sbb
scas
andl
mov
psllq
pop
xchg
pop
movsl
shl
inc
adc
adc
iret
sub
addr16
out
in
fsubl
das
sub
mov
sub
je
add
pushf
sarb
movsb
push
cmp
and
leave
pusha
cli
and
pop
int3
pushf
sub
or
jl
xchg
in
xchg
pop
cmc
scas
in
pop
mov
das
mov
test
fwait
or
cmp
sbb
sub
lods
enter
cmp
movsl
or
or
mov
mov
fwait
pushf
jno
add
dec
ficomps
xchg
sub
movsl
imul
imul
mov
dec
imul
lcall
xor
lahf
pop
xchg
jb
das
inc
andl
adc
aad
add
add
mov
dec
mov
mov
dec
xchg
jmp
lods
push
add
nop
jl
mov
adc
out
pop
cs
add
or
daa
jo
push
xchg
lcall
mov
xchg
xlat
ja
mov
push
shll
sub
outsl
loop
xlat
mov
test
ret
xchg
cmpsl
sub
xor
inc
adc
jne
je
dec
popa
ret
stos
pop
aad
mov
sbb
jl
movsl
inc
lcall
inc
push
and
mov
sbb
out
les
repnz
mul
icebp
add
xor
insb
cltd
pop
cmp
sbb
mov
pop
push
icebp
rclb
xchg
or
stos
lods
aaa
add
lods
jl
dec
push
clc
test
fcomps
stos
or
cli
les
and
movsl
lret
gs
mov
aad
sbb
lret
or
stc
aas
test
cmp
cltd
fadd
ljmp
or
sbb
dec
adc
cmp
push
jae
stos
dec
adc
adc
and
mov
mov
push
stc
repz
test
popa
cld
popa
push
stos
bound
add
xorb
insl
iret
xor
sbb
out
add
mov
in
inc
add
sbb
jb
lods
add
mov
sbb
dec
imul
add
or
rcll
les
out
jae
or
loope
lret
or
test
int3
insl
call
pop
and
jp
in
popf
mov
dec
mov
mov
dec
mov
and
sbb
xor
fadds
enter
repz
fisttpll
lahf
bound
outsl
mov
test
sbb
mov
xor
cld
push
ret
dec
lea
test
mov
frstor
push
pop
das
outsl
into
mov
push
add
pop
cmp
fisttps
inc
rclb
js
sbb
mov
out
sub
andb
lods
push
ret
pop
out
pushf
and
xor
xchg
outsl
outsb
movsb
and
cli
bound
and
sarl
lcall
mov
push
adcl
jo
dec
ret
sbb
xchg
pop
mov
sub
aam
sbb
push
mov
and
mov
or
pop
jmp
and
push
cmp
sti
imul
mov
movsb
fistl
movsb
xor
ljmp
movsb
jb
pop
pop
mov
jmp
fmuls
add
pop
mov
add
rorl
es
push
push
aas
adc
inc
push
mov
push
aam
ret
mov
imul
ret
jbe
scas
mov
adc
in
ficomps
lods
xchg
pusha
cmp
pop
jle
fwait
cs
xchg
sub
dec
imul
popf
xchg
fwait
jecxz
or
pop
xchg
sub
testl
xchg
cli
shll
mov
adc
add
push
jg
pop
inc
xchg
xchg
cs
push
test
jecxz
imul
mov
mov
rcrb
sbb
xchg
enter
or
pop
pushf
popa
mov
mov
push
aam
fldt
stos
stos
enter
push
outsb
fdivrl
adc
xor
popf
push
adc
mov
clc
adc
mov
icebp
ja
fwait
or
sub
mov
les
sub
xchg
int3
mov
fnstenv
enter
cld
lret
mov
add
and
xchg
xchg
dec
and
adc
cli
mov
in
mull
test
insl
cmp
dec
nop
jl
or
cmp
dec
and
das
cmp
out
sti
outsb
lahf
cmpsl
cs
imul
stc
adc
mov
adc
inc
test
push
outsl
pop
push
scas
daa
mov
mov
test
cs
mov
xchg
mov
or
push
int3
lods
pop
mov
push
movsl
fdivs
jns
test
scas
stos
push
insl
int
sub
negb
test
jnp
rcrl
dec
test
pop
fs
pop
sbb
out
mov
inc
mov
mov
jp
inc
fcoms
lods
test
cmp
jns
stc
xchg
fstl
inc
mov
icebp
repnz
add
cmp
shrb
mov
repnz
movsl
movsb
push
lods
jp
loop,pt
jge
jecxz
sub
pop
sub
bswap
insb
jno
push
jb
outsb
dec
dec
js
xlat
sbb
pop
and
rorb
or
pop
sub
mov
fidivl
pushl
outsb
repnz
pop
xor
add
add
jl
xchg
and
xchg
test
in
mov
shll
add
jg
mov
loopne
inc
mov
or
mov
nop
call
inc
and
fcomip
pushf
xchg
inc
inc
sti
arpl
xchg
outsl
mov
hlt
pop
sub
outsl
fcomps
dec
mov
iret
fisubl
out
daa
les
push
mov
lea
rorl
hlt
shrl
adc
rcrl
push
add
ja
cld
mov
out
mov
add
cmc
dec
lea
out
push
cmp
adc
adc
cmp
arpl
lret
mov
add
arpl
mov
push
gs
xorb
out
mov
arpl
imul
dec
lcall
insl
shll
test
cmp
push
popf
and
sbb
jmp
pushf
push
mov
loopne
push
mov
hlt
notl
xor
push
lret
dec
and
push
negl
into
out
hlt
jl
xchg
aas
jne
ja
rol
decb
or
pop
mov
mov
or
and
stos
rcr
pop
std
push
ljmp
movb
fwait
push
sar
sbb
lock
jb
daa
jno
mov
loop
xor
fstl
mov
lret
xor
mov
xchg
jge
sbb
xor
shll
cwtl
out
js
push
repnz
cmp
dec
push
in
idivl
lret
pop
cwtl
test
mov
faddl
mov
js
pop
push
mov
mov
repz
out
int
sbb
je
pop
gs
mull
mov
mov
dec
push
inc
ror
sub
inc
sbb
add
fdivrl
sub
aaa
cwtl
out
pop
mov
adc
or
outsl
adc
mov
sub
inc
outsb
xchg
and
xchg
ljmp
enter
push
mov
mov
outsl
movsl
sbb
pop
test
xor
pop
adc
jo
inc
mov
cmp
jne
out
scas
aam
call
mov
and
xor
inc
je
lahf
sahf
negl
dec
xor
cmc
or
mov
cwtl
outsl
lock
mov
decb
lret
and
mov
push
xchg
cli
jle
aas
and
adc
and
or
sub
dec
loop
aaa
xor
fildll
mov
xchg
cmp
outsl
pop
or
cmp
pop
sub
push
adc
push
rol
lock
daa
jnp
inc
or
adc
pop
arpl
rolb
xor
xchg
mov
add
out
stos
add
fnstsw
fildll
jne
shlb
dec
addr16
jo
push
ret
sti
cwtl
pop
arpl
in
inc
or
addr16
repnz
fidivrl
xchg
cmp
adc
pop
arpl
pop
rolb
sub
mov
lock
repz
xchg
dec
rcr
das
and
test
add
sub
adc
es
pop
cmp
int3
outsb
pop
pop
stos
icebp
mov
xchg
dec
int3
leave
jl
fwait
ljmp
xchg
xchg
cld
mov
mov
popa
insb
enter
outsl
incl
addr16
mov
cli
jmp
stc
inc
pushf
cwtl
xchg
incl
push
and
push
or
mov
mov
sub
aam
lcall
bound
mov
xchg
dec
sbb
mov
sahf
adc
mov
pop
inc
in
jno
dec
mov
shrb
std
pop
and
sti
nop
cmpsl
test
jo
dec
jle
leave
and
mov
dec
mov
jae
and
cmp
fmuls
call
test
mov
hlt
xor
stos
outsb
popa
scas
xor
fstp
jl
dec
xchg
mov
cmp
xor
jecxz
sub
loop
xchg
jg
pop
add
inc
mov
push
mov
out
lods
gs
xor
movsb
fisttpll
adc
iret
es
imulb
dec
pop
nop
ljmp
adc
pop
mov
pusha
push
loop
jle
pop
loop
mov
pop
mov
out
out
cmpsb
out
jns
cmp
inc
mov
nop
xor
std
add
scas
rol
or
cmp
inc
movsb
movsb
jle
bound
outsl
movsl
pop
stos
test
jg
xchg
ljmp
dec
bound
jb
inc
sbb
mov
fsts
test
and
imul
cmp
inc
sbb
mov
fsts
test
and
jmp
bound
jb
inc
sbb
mov
fsts
test
and
imul
cmp
inc
sbb
mov
fsts
push
cmp
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
dec
outsb
pop
jle
dec
jl
sarl
inc
pop
ss
int3
out
in
into
std
fimuls
mov
jle
dec
jl
or
sbb
sub
cmp
int3
out
fdivr
in
into
cld
fimuls
mov
dec
outsb
pop
jle
dec
jl
or
sbb
sub
cmp
int3
sar
mov
mov
repz
jmp
sahf
adc
or
mov
call
std
lods
repnz
enter
std
add
xlat
xor
mov
rolb
rcll
push
pop
sahf
adc
add
jae
popf
xor
sbb
push
test
mov
imul
in
lret
cmp
fsubrl
mov
jg
dec
jl
sub
or
test
fstpl
adc
xchg
and
fsubr
das
jo
mov
mov
sbb
scas
icebp
jns
and
mov
imul
arpl
cld
mov
xchg
in
cmp
fwait
adc
adc
aam
fcoml
dec
jmp
outsb
pop
jle
dec
jl
or
sbb
sub
cmp
int3
out
fdivr
in
into
cld
fimuls
mov
lods
add
inc
outsb
jg
imul
int3
cmpb
ret
pushf
iret
or
sti
sub
cmp
dec
adc
or
pop
adc
push
test
cwtl
cld
mov
shl
sar
lock
pop
or
cmp
sub
sbb
sub
cmp
int3
out
fdivr
in
into
cld
fimuls
mov
jle
dec
jl
or
sbb
sub
cmp
int3
out
fdivr
in
into
cld
fimuls
mov
imul
push
bnd
cmc
jb
adc
mov
jle
push
xor
pop
outsb
jne
cmp
sub
push
rolb
shlb
std
push
call
sbb
clc
jp
sti
jmp
sahf
ss
xchg
sub
aad
aam
mov
mull
mov
xchg
push
lods
cmp
sarb
jne
shll
mov
cmpl
xor
cmp
mov
daa
test
jge
cmpsb
fiaddl
sub
xlat
int
mov
cwtl
mov
sub
jecxz
sahf
cmpsb
sbb
inc
loop
std
mov
rolb
pmullw
test
sbb
push
pushf
shlb
push
lahf
std
in
push
iret
cmp
repnz
fildll
loop
outsb
xor
lahf
test
test
rorl
idivb
leave
sub
sub
aas
pop
or
pop
sbb
ret
test
sti
lods
cmpb
iret
hlt
mov
insl
mov
stos
jecxz
ficoml
xor
jb
in
add
ja
test
pop
loop
mull
scas
or
sbb
in
push
cmpl
fnstenv
das
aam
xchg
iret
mov
inc
push
and
push
cmpsl
pop
bnd
mov
mov
test
and
fsts
sub
jns
push
or
and
or
and
inc
pop
je
add
and
push
movb
or
pop
loope
sahf
enter
loop
mov
push
arpl
jb
sti
mov
cs
repnz
popl
mov
insl
sbb
push
clc
lea
xor
xchg
jle
push
shl
lcall
add
push
jnp
cmp
fcmovnbe
push
adc
sub
leave
or
sar
lock
pop
xchg
lods
das
dec
leave
lret
fildl
std
shr
iret
mov
repz
sbbb
add
jbe
insb
outsl
xor
movsl
addl
xlat
mov
outsw
insl
sarl
out
shrb
mov
mov
cmp
sbb
into
inc
jne
xchg
cmp
fisttps
dec
stc
inc
shlb
xlat
dec
sbb
pop
inc
jo
leave
arpl
test
mov
xchg
push
cltd
sbb
xor
lret
xchg
mov
fldt
cmp
add
mulb
cmc
xchg
jb
pop
mov
push
scas
clc
cmpl
push
mov
stos
push
pop
inc
jne
fwait
outsl
mov
push
push
mov
test
dec
mov
dec
orl
inc
sub
andb
nop
sbb
lcall
sbb
enter
fcoml
icebp
ss
and
pop
and
inc
push
ja
xor
and
mov
inc
sub
or
lret
lds
fs
pop
dec
pop
pop
test
loope
sub
mov
shll
rcrl
cld
cli
sbb
adc
jp
and
cmpsl
ds
xchg
lods
repnz
cmp
sub
xchg
addr16
dec
out
inc
inc
mov
jle
imul
cmp
pop
and
pop
sub
inc
lret
insb
aad
pop
jl
dec
pop
xchg
mov
jge
repz
mov
adc
inc
xchg
or
outsl
mov
adc
stc
cmp
xor
add
mov
pop
push
insl
ljmp
loopne
jno
adcb
xor
fisubrl
negb
loopne
pop
push
mov
inc
lcall
jo
clc
cmpsb
inc
lods
fisubs
cmpsl
or
fstl
es
outsl
mov
ja
jecxz
sbb
adc
xor
mov
add
adc
or
pop
in
adc
xchg
mov
adc
jmp
lahf
cmp
push
iret
and
rorl
and
jae
loopne
gs
pop
mov
insb
or
push
xchg
iret
je
scas
push
add
cmp
js
push
dec
push
pop
xor
lahf
inc
push
test
in
or
jg
test
cmp
adc
mov
dec
jmp
daa
shlb
mov
push
cmc
jno
bound
scas
daa
lock
xor
mov
mov
cmp
xrstor
nop
add
inc
add
mov
inc
stc
jg
push
xor
jmp
stc
orb
aam
jle
decl
jg
aam
pop
ljmp
sbb
ljmp
fisubl
sbb
pavgw
xchg
lods
mov
mov
frstor
mov
adc
dec
dec
sbb
int3
insl
and
lods
add
mov
sbb
pop
sti
pop
stc
mov
imul
orl
into
xor
ja
cmpsl
in
adc
xchg
mov
mov
lock
repz
subb
push
clc
xlat
rorl
lds
add
hlt
cmp
push
sbb
insl
clc
xor
testb
lds
xorb
push
arpl
sbb
loopne
lret
not
and
ds
xor
mov
mov
inc
push
imul
mov
mov
push
out
add
iret
negl
test
jle
lcall
add
mov
subb
dec
jge
xor
xlat
push
loope
cli
jns
jg
jae
xor
adc
push
push
cs
pop
leave
mov
sahf
sub
inc
stos
pop
pop
out
jne
jmp
inc
mov
out
psrad
out
daa
sbb
sub
fnstenv
sbbl
ja
imul
lahf
inc
jmp
xlat
shll
cmpsl
and
cwtl
xchg
lahf
out
rcrb
push
addr16
mov
in
push
pusha
ror
std
stos
dec
or
call
xchg
jnp
sub
inc
repnz
icebp
mov
push
jnp
in
loopne
pop
outsb
stos
hlt
add
inc
sub
dec
inc
icebp
mov
add
push
jecxz
xchg
clc
mov
int
in
aam
lret
push
cld
jne
in
sbb
and
aam
imul
xchg
nop
aaa
pushl
add
stc
stos
mov
int3
push
ret
outsl
lret
clc
dec
add
insb
xchg
mov
add
push
in
pushf
jae
lods
jmp
mov
push
sub
pop
mov
stos
int
cmc
cmp
adc
pop
inc
xchg
cmpxchg
fadds
lret
jns
or
adc
movsb
mov
outsl
push
stos
jne
cmp
nop
mov
pop
lret
lcall
jecxz
ret
inc
inc
or
push
filds
push
jo
or
popa
repz
dec
fadd
scas
cld
mov
push
fsubr
hlt
fs
ljmp
fdivr
mov
out
xor
pop
jno
out
add
add
mov
adcb
lea
mov
push
sbb
stos
ret
sti
or
mov
pop
push
lret
int3
mov
rcrl
sbb
mov
jle
ja
adc
arpl
or
dec
pop
push
jnp
loopne
jle
xchg
adc
inc
lods
sbb
sub
and
out
sti
divb
jge
dec
xchg
jg
test
xor
lds
sbb
push
xorl
das
rcrb
fcom
pop
repz
shrb
lcall
in
std
add
std
scas
and
test
pop
xchg
clc
lea
call
repz
pop
out
and
cmp
das
mov
push
push
nop
dec
shlb
arpl
mov
mov
jmp
scas
pushf
adc
inc
gs
and
insb
js
inc
push
popa
movsl
xchg
mov
outsl
mov
xor
add
stc
mov
add
and
mov
add
mov
inc
xchg
sub
test
xchg
fs
xchg
rcrl
add
pop
dec
js
sbb
pop
mov
add
insb
les
aad
lods
ret
adcl
fists
fwait
and
mov
cmc
push
inc
pop
xchg
sub
adc
mov
and
push
jp
dec
popa
or
or
cli
enter
int
jmp
insb
shl
stc
add
ret
xlat
aas
imul
es
jge
fwait
insl
cmpsb
xor
dec
adc
lcall
data16
sbb
xor
fnstcw
push
idiv
or
xor
jnp
jnp
imull
mov
jle
dec
xlat
aaa
jns
dec
xchg
in
xor
jl
popa
push
in
data16
xchg
sbb
dec
fs
jl
rcr
pop
mov
int3
ds
js
loopne
mov
jb
inc
lea
xor
ret
jp
xor
pushf
out
add
adc
subl
jnp
lock
dec
add
movsb
jp
mov
ja
hlt
dec
jl
inc
in
adc
xchg
jl
push
pop
inc
cmp
lret
xchg
lahf
out
jae
in
push
and
rclb
jmp
jae
ljmp
or
adc
pop
rclb
mov
mov
adc
push
sti
inc
rcrb
and
jmp
push
int
add
mov
loop
aaa
fistpl
push
cmp
push
fimuls
adc
test
push
mov
pop
pop
das
daa
push
cmpsb
pusha
dec
inc
rorl
and
call
fisttps
iret
leave
mov
stos
mov
enter
rclb
andb
testl
push
repz
lret
mov
pop
mov
xor
mov
js
mov
sahf
sbb
and
xchg
push
cmp
rclb
inc
adc
cli
and
outsl
cmp
arpl
dec
fcmovu
mov
mov
fidivs
bound
pop
jle
pop
or
scas
cmpl
and
or
mov
repnz
cmpsl
push
push
xchg
xchg
dec
sub
jo
lret
aaa
and
pop
in
push
sub
cli
addr16
inc
divl
ljmp
test
mov
negb
mov
pop
xchg
rcr
loopne
jmp
stc
adc
loope
push
xchg
call
cld
popf
inc
cmp
push
mov
dec
test
sub
into
or
sub
pop
cmc
test
sub
cmpsb
adc
adc
fcoml
pop
adc
inc
imul
faddl
or
push
dec
mov
stc
sbb
fistl
and
and
xor
add
and
cli
add
fsubs
bound
sub
xchg
add
xchg
rcr
cmp
mov
test
scas
dec
pop
movsb
mov
pushf
fstp
icebp
cmp
js
popa
loope
aad
testb
les
loopne
test
add
xchg
adc
lock
sub
lea
jmp
dec
dec
sti
movsb
jecxz
sbb
aas
xor
xor
xchg
inc
pop
xor
int3
xorl
stos
aam
fs
dec
push
cwtl
jecxz
dec
nop
addr16
ds
cmp
xlat
es
adc
imul
adc
in
in
decb
adc
ficoms
mov
mov
cld
std
inc
lock
in
add
jae
pop
mov
inc
mov
aam
mov
roll
lea
lret
sti
and
stos
or
icebp
loop
fcmovnu
inc
pop
imul
xor
sbb
or
call
jg
cs
adc
inc
adc
sbb
pop
out
mov
push
adc
fcmovnbe
hlt
rcrb
mov
popf
push
lods
add
fsubrp
cmc
mov
xchg
pop
aad
inc
cli
push
lcall
stc
cmp
in
or
inc
or
sub
inc
sub
aaa
es
xchg
pusha
cmp
push
jns
rorl
ljmp
inc
aad
jns
mov
test
int
aad
out
sbb
scas
stos
sahf
adc
jl
das
sub
sbb
bound
lcall
lds
pop
jmp
push
scas
inc
xchg
and
jp
xchg
sub
adc
gs
imull
mov
rep
enter
and
lock
sub
jbe
pop
jb
mov
int3
cmpsb
xchg
cld
add
xor
mov
and
mov
xor
xchg
add
ftst
mov
jg
rorl
push
jbe
lea
xor
js
cmp
iret
mov
lds
cmp
imul
inc
loope
jns
dec
stc
mov
jo
test
and
es
dec
and
aaa
adc
lahf
and
fistpll
pop
pop
jp
data16
push
cmc
mov
lea
leave
dec
add
jg
test
pop
shlb
sbb
jnp
or
push
jo
ret
clc
push
dec
mov
aas
jae
xchg
test
outsb
push
push
out
adc
sti
roll
sbb
ja
xor
ja
xchg
jae
pop
dec
lds
jnp
sub
xor
push
xchg
push
rclb
lret
cmp
xor
sub
movsb
mov
test
addr16
ret
xor
ja
repnz
loopne
mov
cltd
repz
int
or
push
cmpsb
pop
lods
cmp
cmp
fmul
clc
dec
loopne
clc
fdiv
pop
fs
stos
dec
int3
inc
push
push
data16
add
xchg
push
idivl
inc
add
shrl
aas
int3
dec
mov
fwait
mov
imul
or
push
movb
or
dec
mov
push
and
or
bound
sub
jle
pop
out
ss
data16
test
icebp
cwtl
mov
and
or
xor
and
and
addr16
lock
mov
push
mov
icebp
mov
jb
into
adc
pop
pop
les
sbb
std
cld
xlat
xor
jp
out
fdivl
jno
mov
push
mov
popa
clc
dec
imul
add
mov
es
dec
mov
inc
fwait
dec
pop
rcrl
add
inc
sbb
inc
inc
aas
pop
out
rclb
push
mov
cld
and
jb
sti
xor
iret
pop
sub
xchg
icebp
scas
into
xchg
sbbb
ss
ret
loop
xor
sbb
mov
mov
mov
movsb
popf
ret
adc
mov
sub
inc
adc
cmp
out
add
imul
mov
lret
dec
dec
xor
insb
jle
add
rep
jmp
stc
mov
addr16
test
subb
loopne
inc
leave
push
or
xchg
in
arpl
sbb
push
cwtl
cltd
mov
jmp
push
jle
xor
mov
loope
push
and
jae
xorl
mov
shlb
adc
push
daa
mov
das
dec
inc
mov
add
push
not
adcl
jno
shll
xchg
nop
cs
inc
sbb
sub
stc
sarl
or
iret
sbb
leave
pusha
pop
imull
pop
es
cmpsb
sar
stc
sbb
repnz
cmp
jmp
push
push
aas
lahf
les
dec
mov
loope
loop
pop
push
or
shrb
test
test
inc
xchg
adc
leave
push
pushf
int
js
jmp
xchg
add
inc
call
stos
mov
and
adc
arpl
popf
pop
popf
pop
sbb
idivl
call
movb
cmp
xchg
pop
jno
sub
jbe
push
xchg
xor
add
aam
test
fistpll
nop
xor
adc
cmc
es
stos
std
clc
dec
push
dec
and
and
fs
pushf
xchg
and
inc
test
loop
mov
inc
lods
in
cltd
mov
jae
jle
in
ret
ret
nop
insl
pandn
lret
jno
outsl
dec
sbb
lock
jno
adc
adc
call
xchg
pop
adc
fsubrl
jnp
lretw
test
jno
sbb
jle
sti
lret
cmp
imul
bound
mov
repz
je
dec
unpcklps
jae
sar
icebp
mov
shlb
rcrb
sub
pslld
sti
mov
sbb
in
pop
push
pop
adc
fstl
dec
mov
xor
mov
test
sub
cmpsb
bswap
inc
fdivl
mov
dec
idivl
rcrl
mov
cmp
push
mov
outsl
add
repnz
call
cmp
loope
mov
mov
scas
mov
inc
add
add
add
pop
push
jp
testl
push
pop
sarl
and
pop
sub
push
lcall
inc
loop
and
xchg
cmpb
test
and
int3
adc
nop
fcom
adc
xchg
jge
mov
out
dec
test
add
mov
movsb
fadds
push
or
mov
mov
mov
cwtl
jns
loopne
ficompl
pop
mov
loop
in
les
inc
imul
test
xor
and
negl
rcrl
into
clc
add
addb
dec
xchg
cld
sub
inc
jg
push
clc
icebp
das
add
and
mov
mov
repz
test
imul
xor
in
push
inc
dec
es
sbb
push
pop
mov
jns
xor
dec
das
mov
sti
sbb
sub
jb
daa
cli
ja
in
pop
inc
out
mov
xchg
lcall
and
repz
cmp
dec
jmp
mov
add
lods
fbld
test
hlt
or
ret
jmp
test
stc
out
mov
xchg
cmpl
leave
cmovge
pop
in
mov
pop
in
sbb
mov
mov
mov
cwtl
fldl
shrl
add
test
mov
mov
loop
out
imul
pop
jle
cmp
shrl
cmp
mov
bnd
xor
gs
jmp
mov
jb
and
bound
test
into
cmp
pop
int
in
or
mov
sub
enter
pushf
xorb
cmc
dec
xor
lods
out
xchg
lds
rcrl
mov
cmp
xchg
mov
rcrb
lods
sbb
ret
repnz
cmpsb
aad
out
adc
insb
mov
icebp
push
sub
in
stos
sub
and
and
ss
cmp
push
mov
add
push
test
mov
fisttpll
pushf
es
pop
pop
mov
addr16
xlat
insb
cmp
adc
loope
sub
or
sub
lret
mov
cwtl
jge
insl
xchg
es
push
je
insb
imul
or
mov
out
push
jb
packsswb
push
cmp
cltd
or
dec
push
mov
leave
cwtl
es
mov
flds
cmp
mov
cs
rcrl
fucomp
aas
cs
scas
or
lcall
jmp
insl
in
inc
xchg
add
pushf
int3
jnp
lea
jl
adc
jns
nop
mov
in
test
repz
test
daa
add
nop
stos
mov
add
test
aam
push
add
cltd
and
jae
loope
lods
pop
mov
insl
jmp
xchg
int
imul
shll
cmp
js
int3
mov
ljmp
jns
arpl
pop
sbb
mov
dec
push
and
int
lret
fisttps
and
adc
and
pop
les
sbb
and
fisubs
mov
in
mov
xchg
sub
add
popf
inc
fstl
dec
xor
add
dec
bound
push
fld
mov
xchg
int
dec
pop
rolb
push
sbb
and
and
or
sub
xor
js
sub
dec
shrb
mov
adc
arpl
xchg
mov
cli
daa
popf
jnp
ds
jmp
lods
ret
pop
xchg
dec
cmc
and
andb
mov
pusha
sub
and
inc
in
xor
rcrb
neg
xchg
add
aad
jns
sub
popf
arpl
in
into
or
or
pop
shlb
sub
jl
mov
enter
aas
cmp
and
add
out
lahf
mov
mov
push
jl
add
call
pop
repnz
test
xor
hlt
mov
xchg
repnz
pushf
xrelease
jecxz
pop
jg
repnz
pop
mov
mov
adc
jb
cli
ret
xlat
hlt
mulb
sbb
push
adc
fildl
rorb
mov
add
inc
bound
leave
in
pop
gs
xor
xor
lea
xchg
cmp
in
test
push
std
mov
and
dec
ds
and
push
pop
xor
out
xor
repnz
push
jp
outsb
test
jp
push
mov
cmpps
jle
dec
jl
or
sbb
sub
cmp
int3
out
fdivr
in
into
cld
fimuls
mov
jle
dec
jl
or
sbb
sub
cmp
int3
out
fdivr
in
into
cld
fimuls
mov
jle
dec
jl
mov
sbb
sub
mov
in
into
cld
fimuls
mov
jle
dec
jl
or
sbb
sub
cmp
int3
adc
push
inc
into
cld
test
fdivl
popa
mov
aad
lds
cld
sti
test
inc
je
inc
inc
je
and
je
add
adc
repz
hlt
in
aad
lds
xchg
icebp
outsb
jns
and
inc
and
xor
add
fmul
int3
fnstsw
lea
inc
sub
xor
jp
push
ja
jge
xchg
mov
mov
fs
insl
push
scas
mov
lea
inc
push
int
scas
or
sbb
jns
fadd
xchg
arpl
dec
push
je
pop
jp
mov
mov
call
imul
lcall
mov
data16
gs
stos
mov
scas
adc
in
and
pop
xchg
xorl
sbb
inc
stos
or
mov
ljmp
popf
sub
rclb
mov
mov
xor
addb
xchg
mov
aas
add
aad
sbb
push
mov
in
adc
and
hlt
cmc
int3
ret
lds
lea
dec
dec
pop
cmp
sub
add
or
xchg
mov
mov
les
sbb
push
cmp
dec
push
push
daa
popa
jp
imul
cmpsb
stos
shlb
shll
add
and
inc
inc
and
cmc
in
mov
sbb
mov
test
je
inc
push
push
inc
and
xor
add
adc
in
hlt
in
aad
lds
xchg
test
gs
push
push
inc
and
xor
add
adc
in
aaa
negb
and
adc
mov
es
mov
dec
sub
sbb
sti
test
addr16
jo
bound
aaa
fisubrs
insl
mov
jne
sub
cltd
cmp
aas
in
lock
dec
pop
jo
testb
mov
lcall
cld
jae
xlat
fs
sbb
jo
insl
les
jno
fwait
mov
fwait
cli
repnz
jnp
pop
imul
ret
xchg
cmp
mov
fdivl
shlb
inc
mov
mov
push
pop
jnp
cs
arpl
dec
mov
inc
add
and
xor
outsl
jecxz
jns
out
pop
shl
lahf
cmpsl
xchg
mov
mov
in
pop
jle
scas
fs
add
lock
pushf
xchg
insb
sbb
push
in
jmp
test
ljmp
dec
mov
adc
push
sbb
int
std
xchg
inc
lsl
in
fnsave
repz
or
vphadddq
xor
scas
ds
aas
rorb
push
push
push
mov
into
xchg
movsb
pop
jmp
push
outsb
mov
add
sub
gs
xor
mov
movsb
mov
xchg
inc
clc
mov
es
cmp
push
mov
out
and
pop
adc
dec
adc
inc
xlat
std
repnz
fiadds
mov
inc
into
arpl
mov
jae
xchg
rol
mov
gs
in
mov
pop
add
in
sbb
in
mov
movsb
sub
mov
xchg
pop
xor
shll
mov
mov
ret
ret
and
ret
jmp
iret
mov
inc
add
test
scas
jno
clc
repz
xor
add
stos
ljmp
push
or
mov
push
and
dec
inc
je
mov
sarb
inc
mov
xor
int3
push
divb
out
fcmovne
daa
push
pop
xor
inc
testb
mov
inc
imul
mov
pcmpeqb
mov
aad
jecxz
nop
pushf
movsb
dec
fiadds
push
aam
or
sub
dec
ds
scas
jo
daa
xchg
dec
mov
clc
sbb
mov
and
jae
ror
inc
dec
nop
ds
daa
xchg
movsb
or
aad
jl
je
fcoml
push
xchg
sarl
push
insb
aam
rcll
cmp
dec
lock
adc
xchg
inc
fwait
jbe
or
inc
inc
cmpsl
dec
xchg
inc
cmc
inc
out
push
fisttpll
mov
scas
roll
popa
lahf
cmp
lods
testb
and
xlat
lea
call
out
or
das
adcb
lcall
nop
fsubs
mov
jnp
mov
or
cld
mov
and
push
fwait
shl
xlat
mov
and
ja
cmp
adc
push
inc
call
sub
inc
fmulp
xor
mov
movsl
mov
inc
test
adc
jne
xor
leave
movsl
push
loope
adc
inc
jb
movb
jno,pn
xor
popa
gs
mov
ja
sahf
dec
jl
cld
mov
add
lahf
hlt
xchg
adc
fisubrs
mov
dec
inc
fmull
jbe
lret
jae
xchg
jae
sbb
xor
cwtl
mov
fidivrs
inc
enter
xor
mov
aad
push
xor
pop
push
iret
inc
stos
fildll
leave
jmp
test
push
idivb
pop
jo
and
lahf
add
test
or
mov
cmp
cmp
jmp
enter
cmc
jno
inc
jp
orl
cmp
js
ja
rorl
or
ficompl
mov
and
je
mov
pop
mov
mov
shll
call
dec
out
inc
inc
sbb
push
lret
mov
add
xchg
sbb
mov
or
decl
call
xor
hlt
xchg
test
imul
xchg
cmp
mov
push
adc
jecxz
mov
addr16
add
push
dec
inc
pop
ret
push
ret
mov
mov
and
xchg
push
and
bound
cmp
mov
mov
jecxz
pop
sbb
sub
std
nop
je
stos
adc
outsb
ret
roll
sub
adc
out
inc
cmp
pop
in
fadds
sub
lods
cwtl
xor
mull
stc
ljmp
nop
mov
sahf
dec
mov
pop
inc
pop
ret
aas
jmp
mov
push
dec
dec
pusha
lret
es
clc
insl
loope
ficoms
mov
push
inc
xor
loopne
ret
movsb
test
loopne
in
cltd
stos
jl
ss
gs
push
cmp
shr
ss
mov
or
mov
and
jl
sbb
and
add
xor
xor
push
fldl
jge
and
mov
out
or
sahf
pop
push
sti
lret
lret
pop
xchg
loop
imul
xchg
jno
pop
jb
push
movsl
mov
mov
inc
inc
mov
movsb
lods
and
cmp
push
xchg
adc
insb
pop
cmp
sbb
xchg
imul
lods
outsl
push
stos
imul
adc
repz
adc
sub
repnz
mov
and
xor
fsub
shlb
jnp
xchg
cmp
stc
mov
hlt
divb
xchg
adc
jecxz
lock
xor
and
out
popa
inc
or
dec
in
jae
fcmovnu
stos
or
push
sbb
lods
xchg
cmp
scas
and
outsb
loopne
sub
int
pop
push
cmpl
inc
lods
mov
xchg
js
xchg
sub
cmp
in
rcr
ret
idivl
arpl
movsl
loope
inc
pop
icebp
or
stos
sub
cli
push
and
addr16
push
movsb
cmp
pop
jae
fists
dec
pusha
stos
popa
xlat
and
jae
push
cmpsb
adc
dec
mov
sbb
mov
cmp
lds
test
xor
sbb
ja
pop
repnz
sbb
call
jl
dec
stc
iret
and
cmc
sub
sbb
bswap
inc
add
jg
psubusb
add
sahf
dec
mov
push
sti
sbb
movsb
xchg
popa
jecxz
jg
add
cmp
xchg
adc
pop
daa
std
adc
test
or
fs
imul
jne
sbb
dec
adc
test
fwait
out
jecxz
jle
dec
je
shrb
push
in
mov
mov
das
cs
jne
sbb
lcall
mov
int3
scas
mov
cmpsl
fistpl
int
js
jb
sahf
test
sahf
lret
lcall
leave
pop
mov
jbe
pusha
cmpsl
inc
pop
in
aaa
stos
lcall
jge
loop
sub
and
mov
sub
stc
bound
cwtl
jmp
test
mov
mov
test
inc
lods
pop
push
test
outsl
mov
add
add
clc
data16
cmp
mov
lahf
or
scas
imul
and
imul
idiv
push
fs
stos
jl
mov
cmp
push
pop
int3
inc
add
cmpsl
sbb
or
xchg
add
pop
std
mov
mov
mov
pop
sub
fcom
in
or
sub
inc
inc
lahf
scas
je
test
mov
sbb
clc
daa
ret
imul
mov
push
adc
mov
pop
dec
outsl
push
les
cmp
or
or
cmp
sub
popa
inc
xchg
movsl
test
jno
stc
xchg
dec
cmp
cs
testl
iret
mov
adc
dec
test
jp
out
stos
cmp
fs
push
fisubrl
push
dec
xor
sarb
popa
ljmp
out
sbb
mov
cmp
add
mov
pop
das
lret
mov
xor
aas
enter
bound
sub
sub
or
add
out
jnp
cmp
push
and
dec
pop
andl
push
int3
mov
dec
ret
cltd
leave
inc
mov
fists
sub
repnz
dec
mov
in
push
add
jmp
sti
xlat
stc
push
dec
ja
lds
dec
sahf
jle
mov
lcall
jne
or
adc
xlat
inc
lock
arpl
push
cmp
scas
pop
fcoms
stos
in
mov
das
pop
cmp
lcall
fbstp
mov
adc
cmpsl
shl
xor
fistpl
sbb
mov
pusha
xor
pop
adc
sub
or
mov
es
sub
push
test
xor
cmovge
mov
adc
sbb
lds
mov
xor
dec
fisubl
push
adc
lret
out
clc
push
dec
cmp
push
push
inc
add
pop
cmp
jb
xchg
push
mov
rcrl
lds
test
lcall
sub
jecxz
sbb
and
adc
sub
mov
xchg
inc
pop
or
mov
inc
outsb
out
nop
push
js
ja
sub
sbb
jecxz
xchg
inc
push
mov
pop
cld
out
std
mov
daa
mov
decl
icebp
or
rcll
pop
mov
xchg
jno
test
cmp
ljmp
cmc
cmp
cmp
jno
fstl
mov
arpl
lods
mov
cmpl
test
iret
dec
pop
push
int3
mov
in
dec
call
fmull
test
cld
imul
mov
cmp
in
xchg
mov
sub
dec
loopne
test
data16
mov
ss
in
cmp
jnp
insl
mov
iret
je
jae
pushf
dec
pop
inc
fcompl
fimull
jmp
cmc
fcomps
in
add
andb
inc
btc
mov
jg
xchg
mov
das
push
icebp
subl
out
hlt
mov
cltd
jae
mov
ss
test
xchg
sbb
mov
lods
fidivl
xchg
fcmovnb
sbb
inc
iret
inc
rcrb
pop
test
pusha
pop
call
cmc
mov
mov
mov
inc
outsl
xor
push
push
mov
movsb
imul
loopne
mov
lret
mov
push
push
xlat
mov
mov
mov
mov
inc
adc
sub
xor
ret
pop
jae
idivl
mov
ret
data16
imul
mov
fcompl
clc
into
mov
add
mov
cmc
addr16
daa
fsubrl
mov
fstpl
mov
or
dec
pushf
icebp
cltd
adc
adc
lcall
nop
sbb
mov
mov
add
push
xchg
sbb
cli
outsl
or
lcall
dec
xchg
repnz
push
addr16
ljmp
imull
popf
inc
ret
cltd
loopne
movsl
outsb
mov
cmp
movsl
xor
and
inc
fisttpl
enter
stc
mov
popf
imul
scas
arpl
or
and
addr16
xchg
sbb
or
fisubs
xor
addr16
movsl
popa
mov
xchg
mov
ss
inc
ja
arpl
and
push
mov
jecxz
sub
int3
pop
cmp
pop
xchg
xchg
cmovno
jns
in
das
mov
sub
jbe
stos
push
jp
lret
jg
je
fscale
js
rorb
stos
lock
add
data16
jbe
mov
insl
inc
leave
jns
shrl
jmp
std
cltd
ret
rcrb
pop
aam
inc
mov
inc
cltd
out
sub
test
mov
adc
aad
cmp
clc
mov
inc
cltd
rorb
xor
and
ljmp
mov
rorb
aam
sbb
es
xchg
sbb
pop
sub
push
cmpsb
or
dec
mov
push
push
scas
mov
sbb
jp
push
xlat
ret
in
nop
sbb
dec
loope
mov
lods
ds
xor
sbb
jns
imul
cld
rcrb
inc
test
xchg
adc
out
std
mov
pop
popa
push
jno
mov
nop
xchg
data16
ds
push
cmp
xchg
push
repnz
sti
loop
pop
push
xchg
dec
rcr
in
dec
fmull
sbb
movsb
push
icebp
jmp
lahf
test
jg
fwait
imull
inc
or
and
divl
fsubl
mov
fucomp
es
sbbb
dec
scas
inc
sub
loope
aam
loopne
addb
clc
les
js
inc
clc
movsl
lods
imul
adc
in
sub
push
stos
sub
add
mov
push
or
ret
fildll
fdivs
pusha
hlt
cmp
xchg
add
push
jnp
dec
jmp
push
sub
imul
xchg
test
ds
sub
sbb
mov
xor
movsl
int
repnz
xor
sub
and
sar
fdivs
sbb
pop
sub
pop
stos
in
cmc
and
inc
push
push
ds
sub
mov
pusha
roll
adc
pop
imul
pop
repz
aad
inc
add
icebp
mov
outsl
mov
mov
sub
and
adc
jmp
into
mov
xchg
nop
cmp
cwtl
aam
dec
sub
fistpl
pop
adc
xor
push
sub
or
mov
mov
repz
xor
xor
sarb
test
fistl
imul
addr16
inc
add
mov
push
fsts
dec
sub
cmovs
add
popa
push
stos
push
idiv
jne
sbb
xchg
xor
xlat
mov
add
push
pop
adc
fwait
sub
jmp
cmpsb
mov
xlat
add
xchg
shll
pop
lds
push
fiaddl
add
push
push
ret
cmp
mov
dec
movsl
jns
cmp
or
cmp
inc
push
nop
fstpt
sti
mov
mov
cmpsl
jo
mov
pop
cld
and
sub
loope
stos
outsb
pop
stos
out
and
les
xor
jo
in
dec
aaa
cmpb
mov
test
pop
test
aad
mov
daa
js
sub
ss
out
repnz
adc
jo
stc
inc
mov
and
add
adc
or
fstpt
xchg
cs
daa
nop
mov
or
pop
pushf
movb
lds
or
popf
xor
dec
movsb
xchg
out
cltd
jns
jnp
xor
xor
jbe
inc
out
cmc
sti
inc
jge
jecxz
test
les
mov
int
rorl
push
icebp
dec
mov
test
mov
lods
mov
inc
xor
and
ret
lock
lret
sahf
cmp
or
orl
lods
std
mov
leave
add
mov
jmp
mov
mov
mov
xchg
or
fimuls
in
mov
movsb
adc
jl
adc
xchg
jo
ss
pop
sub
sbb
into
lods
sbb
mov
lret
or
fists
mov
adc
jecxz
mov
mov
nop
sti
and
mov
add
xor
dec
jmp
fdivrs
sbb
sbb
cmpsl
xchg
and
dec
sbb
gs
push
aad
test
mov
adc
gs
mov
pop
shrb
movsb
fsincos
in
lahf
imul
pop
dec
add
pop
jns
sub
aad
or
jne
cwtl
mov
sbb
or
xor
xchg
pop
loop
cli
popf
mov
mov
pop
and
dec
cmp
inc
ret
jecxz
sbb
sbb
scas
push
pop
mov
stc
sbb
int3
sbb
outsl
scas
adc
pusha
ret
stos
mov
in
lret
ret
js
imul
sarl
aad
in
sbb
repnz
mov
and
adc
mov
or
clc
adc
out
xor
add
pop
jo
arpl
fidivl
scas
cli
fbstp
iret
daa
cmp
fisubrl
mov
arpl
sub
jo
push
rcrb
ds
adc
mov
imul
dec
aad
cld
loop
les
push
lahf
mov
xor
or
mov
testb
loope
bound
mov
push
fsub
push
mov
lea
pop
andl
in
mov
fisubrl
cwtl
xor
in
dec
xor
fwait
sbbb
andl
aam
mov
xchg
pop
xlat
fwait
aaa
stc
xlat
xchg
cmp
mov
sub
inc
outsl
mov
mov
xor
inc
mov
jne
and
jmp
sarl
ja
adc
pop
stos
xchg
pop
xor
fidivrl
insb
lods
bnd
jnp
outsl
sbb
out
mov
xchg
in
dec
lret
inc
jae
insl
and
pop
or
roll
sbb
pop
fistpll
lods
bound
loopne
in
fcomi
pop
jmp
jmp
pop
repnz
stc
mov
inc
testl
in
shlb
arpl
bnd
xchg
add
pop
cmpsb
add
cmp
push
pop
xor
mov
das
enter
sub
ljmp
add
push
call
lret
and
jge
hlt
int
in
clc
pop
sbb
inc
xor
mov
and
sti
xchg
mov
rolb
push
mov
clc
jne
fwait
pushf
pop
sub
push
xorb
add
insl
mov
ds
lret
jb
and
add
dec
sbb
xor
les
mov
inc
and
insb
out
inc
mov
addl
test
filds
adc
adc
mov
bound
cmp
nopl
sbb
xor
jmp
arpl
jp
stos
rolb
ret
lds
shrl
jno
test
adc
rcrb
mov
xchg
ss
jbe
filds
subb
inc
std
add
xor
adc
sub
sbb
out
stos
or
aam
cli
xchg
xorl
push
xorl
mov
pop
in
popa
divl
adc
div
jae
dec
cmpb
jno
xchg
dec
lock
xchg
jae
mov
sbb
mov
test
iret
lcall
mov
add
mov
sbb
jge
mov
push
inc
jle
pop
add
aad
rclb
loope
pop
push
inc
insl
insl
div
mov
insl
aaa
loope
adc
insl
push
add
rcr
incb
adc
pop
mov
icebp
push
repz
jo
cmp
pop
sub
out
push
popf
jnp,pt
mov
mov
clc
adc
popf
inc
add
or
jo
shlb
jg
fsubrl
xor
adc
rorl
cld
pop
std
js
pop
out
mov
insl
into
add
jmp
adc
sub
daa
out
das
dec
stos
add
xlat
xchg
dec
aaa
popa
pop
lods
stos
icebp
add
pop
push
lldt
push
adc
jmp
ja
movsb
addl
mov
inc
movsb
adc
pop
mov
dec
jmp
loope
and
inc
jecxz
fimull
jmp
push
fsubl
iret
xchg
jnp
sarb
sbb
les
adc
sub
jb
mov
lock
mov
jle
fwait
mov
and
push
fs
mov
xor
mov
sbb
jo
xchg
inc
insb
insb
push
test
je
insl
dec
pop
stos
out
test
out
popa
rorl
and
sti
adc
cmc
mov
mov
insl
sbb
repnz
jne
jo
mov
rcll
negb
cmc
repnz
mov
in
outsb
test
fstpl
js
sbb
into
xchg
pop
je
test
jp
test
out
dec
and
jae
out
sub
enter
int
jo
ljmp
or
inc
push
xchg
add
xchg
mov
inc
sbb
pushl
sbb
mov
mov
push
frstor
pop
cmp
jnp
mov
call
rcrl
js
mov
adc
shll
mov
mov
lret
sbb
lahf
lret
cli
lret
std
mov
mov
repz
cmp
cmp
xchg
pop
mov
push
sti
das
xchg
jns
nop
pop
lahf
jae
sub
clc
mov
sbb
and
sub
jmp
sarb
pop
pop
push
and
adc
outsb
xor
mov
dec
or
hlt
sbb
mov
push
cmp
jne
adc
or
fnsave
cltd
out
fs
mov
sub
call
imull
pop
aam
lcall
or
cmp
std
movsb
aad
mov
mov
add
aaa
fiadds
test
mov
js
in
aad
lds
xchg
test
gs
push
push
inc
and
xor
add
adc
in
hlt
in
aad
lds
xchg
test
gs
push
push
inc
and
xor
add
adc
in
hlt
in
aad
lds
xchg
test
gs
push
push
inc
and
xor
shl
shl
rcl
lds
adc
fwait
jne
iret
out
push
push
xor
mov
jp
mov
sub
movl
movl
movl
movl
call
mov
cmpl
jne
push
push
push
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
iret
in
and
ljmp
xchg
add
add
pop
add
add
add
pop
push
fwait
add
add
add
cli
add
sub
aad
inc
add
add
js
push
add
add
add
add
add
mov
insb
add
add
add
add
add
jns
popa
add
add
add
mov
mov
add
add
add
add
add
insl
add
push
add
add
add
add
add
add
daa
add
pop
add
cltd
add
add
mov
add
add
jae
out
add
add
rolb
mov
add
add
add
add
add
add
push
add
inc
add
fldl
js
aad
dec
add
add
stc
add
add
add
or
mov
add
add
cmp
dec
add
mov
add
add
add
add
sub
add
mov
xchg
add
add
add
add
add
add
add
sbb
dec
add
add
add
js
xor
bound
js
sub
inc
add
add
add
add
add
inc
add
sub
push
add
add
jae
xor
pop
add
add
add
or
add
pop
add
pop
add
stc
add
add
sbb
cltd
add
push
add
add
add
add
aaa
add
add
add
add
add
add
add
or
add
add
add
js
pushf
add
add
aaa
add
add
push
add
add
add
add
js
mov
icebp
add
add
add
add
jge
and
push
add
add
js
js
xor
dec
add
add
js
xchg
or
add
js
enter
test
daa
add
add
pop
add
add
add
fwait
add
add
js
sbb
incb
push
add
pop
add
add
add
adc
int3
add
add
add
add
add
add
jg
bound
push
add
icebp
add
pop
add
pop
enter
push
add
add
aas
add
add
add
add
pop
add
jo
sub
rolb
mov
add
add
add
scas
add
add
add
sbb
imul
rolb
mov
add
add
add
push
sti
add
add
pop
add
add
add
add
push
add
add
add
add
add
add
js
inc
add
add
add
fwait
add
pop
add
enter
aad
aaa
add
add
jns
mov
add
add
add
cmp
daa
add
add
add
add
add
add
add
add
add
add
add
add
stos
add
mov
add
sub
xor
js
nop
add
add
add
add
js
cltd
add
add
and
daa
add
add
pop
add
add
add
add
add
lods
add
sahf
or
iret
testb
pop
pandn
xor
div
inc
test
es
adc
ret
fdivrl
daa
nop
sub
inc
fstpl
sbb
je
in
xlat
or
pop
sub
mov
jecxz
jl
inc
int3
lea
jecxz
sub
call
and
mov
sbb
out
mov
adc
cmc
aad
mov
outsl
xchg
test
inc
jo
add
lahf
imul
mov
pop
or
popa
cmc
mov
sbb
jnp
dec
jle
in
inc
out
fidivs
imul
ficomps
adc
add
adc
add
rcll
leave
push
mov
push
push
sti
pushf
into
imul
mov
push
lods
jnp
inc
xor
int
push
add
fs
jns
jmp
inc
ljmp
lods
xchg
rorl
cmp
jecxz
lret
xlat
cmpsl
adc
shrl
xchg
xchg
inc
xor
mov
pusha
into
inc
pop
cld
daa
in
xchg
fs
fmull
out
fwait
call
movsb
jae
bound
mov
outsb
xchg
mov
in
push
call
notl
mov
lcall
push
call
inc
inc
push
lret
cmpsl
xor
out
clc
sub
out
jb
dec
leave
pop
cltd
orl
inc
mov
push
mov
xor
mov
jge
or
adc
int
aaa
mov
and
pop
pop
aas
mov
jge
inc
pop
je
leave
cmp
out
mov
sub
sbb
ja
mov
xchg
adc
sti
mov
mov
fdivl
test
xchg
push
add
mov
and
ljmp
inc
cli
insb
dec
mov
cmp
mov
and
stos
xchg
xchg
inc
sub
mov
mov
cmp
pop
jl
lcall
inc
push
add
icebp
sbb
das
mov
or
roll
or
bound
inc
xchg
fwait
test
lods
outsl
lock
jmp
lcall
pop
jmp
repnz
cmpsb
mov
arpl
add
fcmovne
ds
dec
stos
push
das
mov
mulb
std
mov
mov
enter
xchg
jnp
cmp
movl
jne
adc
cmp
adcb
stos
leave
pop
dec
or
and
out
sbb
or
pop
imul
pop
sub
sbb
lret
inc
sub
std
dec
jno
mov
or
fistl
in
cli
iret
add
add
add
add
rolb
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
repnz
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
repnz
fdiv
add
aam
add
int3
repnz
repnz
mov
repnz
lods
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
insb
hlt
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
mov
hlt
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
testb
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
testb
mov
testb
lods
testb
movsb
testb
pushf
testb
xchg
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
testb
cld
testb
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
shl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
clc
add
dec
clc
add
push
clc
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
clc
add
lods
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
