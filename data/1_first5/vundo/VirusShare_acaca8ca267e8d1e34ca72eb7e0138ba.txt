pop
add
add
lock
push
add
add
adc
rorl
nop
add
or
add
pop
adc
sbb
and
std
push
push
add
mov
cs
loopne
je
pusha
add
or
add
or
add
or
add
add
nop
add
addb
or
add
add
mov
add
add
aam
nop
add
push
mov
mov
or
add
push
mov
add
or
add
rolb
add
add
adc
inc
or
add
or
add
add
sbb
rolb
or
rolb
add
and
lock
add
add
or
add
add
or
add
add
add
mov
cmp
lock
jo
add
and
mov
or
incl
rolb
lcall
add
nop
add
add
addb
cmovo
arpl
jo
push
or
add
add
add
adc
cs
add
and
outsb
or
add
or
add
or
add
push
lock
add
add
add
add
or
imul
add
sub
add
push
add
add
rolb
add
add
add
xchg
addl
dec
arpl
add
mov
add
add
add
or
add
or
add
or
lock
and
jl
push
add
add
add
or
add
nop
add
addb
or
pusha
add
pusha
add
add
pusha
add
or
add
wrmsr
add
or
add
and
das
or
add
or
add
or
add
add
add
rolb
or
in
or
add
push
add
rolb
and
addb
add
add
nop
add
or
pusha
add
add
push
add
add
add
add
or
add
or
xor
rolb
jo
lret
add
add
add
add
add
in
andl
pushl
popl
push
popl
xor
pushl
popl
call
push
mov
add
popl
mov
pushl
popl
test
jne
movb
push
popl
ret
sbbl
push
sbbl
push
pushl
popl
pushl
popl
mov
xorw
push
and
add
popl
mov
pusha
push
popl
call
orw
movb
mov
addl
pushl
popl
push
push
sub
mov
popl
mov
movl
nop
push
popl
movl
andl
push
add
xor
popl
mov
nop
pushl
popl
addl
push
popl
andl
push
push
sub
and
popl
mov
call
orl
pushl
popl
cmpl
je
orl
push
popl
cmpl
je
push
popl
cmpl
je
addb
cmpl
jne
pushl
popl
xorl
call
pushl
popl
push
popl
ret
orl
addl
jmp
subb
pushl
popl
xor
push
popl
push
mov
add
popl
mov
mov
push
popl
shl
sbbb
addb
mov
push
popl
push
popl
cmp
jne
push
popl
call
pushl
popl
popa
subl
call
sbbw
push
push
popl
movl
nop
orb
subw
movl
orl
push
popl
nop
push
popl
push
xor
xor
popl
mov
addl
push
popl
addl
push
push
popl
xorl
call
sbbl
xorw
push
push
add
lea
sub
mov
xor
xchg
push
mov
and
popl
mov
addb
mov
push
popl
xorb
shl
subb
push
pushl
popl
addl
xor
push
popl
push
add
sub
popl
mov
push
addl
sbbb
call
sbbl
push
popl
push
xorl
pushl
popl
mov
addl
subb
push
push
sub
sub
popl
mov
jmp
sbbw
push
popl
pop
andl
mov
xorl
push
push
popl
push
pushl
popl
push
and
sub
popl
mov
push
orw
subb
mov
subl
mov
push
popl
orw
rep
sbbb
pop
addw
pop
push
not
shr
mov
xor
xchg
push
dec
mov
sub
xchg
addl
push
popl
xor
andl
push
popl
jmp
andb
addb
sub
push
popl
andl
mov
andl
sub
sbbl
push
mov
add
popl
mov
sub
pushl
popl
andb
mov
andw
push
add
add
popl
mov
sub
pushl
popl
or
jne
push
popl
add
movl
jmp
andl
mov
movw
push
popl
shr
push
popl
xorb
shl
pushl
popl
mov
push
add
sub
popl
mov
jmp
addl
sub
push
popl
mov
addw
push
popl
cmp
jne
movl
mov
subw
add
pushl
popl
push
add
sub
popl
mov
cmpw
jne
push
popl
ret
sbbb
xorw
push
xorl
xor
xorl
and
andl
push
popl
mov
xorl
and
xorb
mov
sbbw
and
addl
mov
pushl
popl
and
push
popl
lods
movl
push
popl
and
pushl
popl
push
popl
mov
push
and
sub
popl
mov
pop
push
popl
push
and
xor
popl
mov
ret
sbbw
xorw
push
pushl
popl
mov
push
popl
add
push
popl
push
push
and
and
popl
mov
addl
push
addw
push
movl
push
sbbl
push
add
mov
popl
mov
push
push
popl
pushl
popl
mov
subl
push
popl
mov
push
popl
sbbb
add
subw
pushl
push
xor
or
popl
mov
mov
pushl
popl
add
pushl
popl
add
movl
mov
pushl
popl
orl
add
push
popl
xor
movl
push
popl
lea
pushl
popl
mov
push
popl
add
andl
mov
subl
push
popl
xor
movl
sbbl
rol
subl
xorb
xor
movl
orl
inc
push
popl
cmpb
jne
push
popl
andb
cmp
je
push
popl
inc
push
popl
push
sub
add
popl
mov
cmp
jb
push
popl
mov
pushl
popl
add
push
mov
or
popl
mov
push
and
or
popl
mov
movzwl
pushl
popl
mov
addl
orb
add
push
popl
movb
mov
push
popl
add
orb
pushl
popl
pop
orw
cmp
jbe
push
popl
cmp
jae
addl
sbbw
pushl
movb
pushl
push
or
sub
popl
mov
push
popl
push
orw
subb
nop
andw
push
add
sub
popl
mov
movl
push
popl
pushl
popl
nop
sbbw
pushl
popl
addl
orl
push
popl
pushl
sbbw
call
pushl
popl
pushl
popl
call
orl
pop
push
popl
push
popl
pop
andl
pop
subl
orb
pop
addl
pop
sbbl
leave
push
popl
andw
ret
push
popl
pushl
popl
call
popa
adc
mov
mov
pop
fistpl
popa
adc
leave
aas
xchg
mov
mov
hlt
inc
in
mov
inc
bound
div
mov
movsb
push
mov
cmpsl
pop
sub
ficoml
push
pop
dec
pushf
cmp
daa
mov
mov
and
and
in
xchg
rolb
sub
xchg
add
cmpsl
es
out
shrb
jne
xlat
rcl
daa
adc
mov
into
push
adc
push
imull
into
das
xor
std
pop
push
pushf
push
mov
inc
vcvttps2dq
xor
cmp
out
inc
mov
in
scas
sub
int3
push
shlb
js
daa
lea
mov
dec
popf
dec
or
push
jnp
lock
test
out
movsl
scas
test
xlat
sbb
jmp
fwait
hlt
push
stos
inc
mov
fldl2t
outsl
ficoml
push
ja
shll
pop
mov
pushf
fiadds
sbb
xor
and
aaa
inc
outsl
iret
dec
mov
inc
rcr
sub
xchg
adc
into
sub
inc
stos
adc
mov
jns
ja
out
push
stc
pop
jne
ret
lods
test
enter
call
sub
push
addr16
xorb
push
mov
movsl
movsl
lods
call
pop
or
mov
ja
fwait
or
in
pop
dec
xchg
push
fcoml
cs
add
xchg
lss
mov
cltd
int
and
insl
imul
js
xor
sub
jl
pop
pop
jno
jp
lds
dec
jle
mov
int3
jae
dec
addr16
mov
addr16
rcl
mov
xor
pop
movsb
inc
mov
dec
mov
mov
testb
and
data16
push
push
add
aam
push
mov
inc
mov
subb
xor
jnp
pop
xor
scas
shrb
fldenv
call
sub
testl
in
jnp
push
in
mov
movsl
push
ficompl
stos
pop
jbe
aam
xchg
mov
mov
aad
sbb
jle
mov
insl
fdivrs
sbb
sbb
adc
sbb
rorl
xor
and
std
jmp
shlb
sarl
dec
or
push
int3
ja
popf
sti
jecxz
addr16
jns
ja
lock
outsl
xchg
mov
xchg
cmc
mov
xor
xchg
lock
mov
mov
xor
cmp
test
mov
je
jbe
adc
ss
out
mov
and
adc
popa
cmp
and
pusha
aas
mov
xor
mov
sbb
pop
idivl
sti
mov
daa
cmp
xchg
jle
mov
sub
das
cmp
mov
or
and
xor
jno
and
xchg
es
stc
je
ss
pop
daa
inc
test
jne
sti
push
and
sbb
xor
adc
sub
rcr
sbb
push
cmp
es
sub
mov
imul
in
mov
addr16
stos
aas
jl
push
xor
ret
int3
mov
gs
ss
loopne
test
add
daa
mov
jle
xchg
test
orb
lds
sub
das
fisubs
adc
jl
cmp
sbb
ror
cmp
iret
lret
ficoms
in
jb
add
mov
and
xor
cmp
mov
mov
inc
sub
pop
mov
paddd
out
aas
sbbb
pop
pushf
test
int
lret
shrl
loop
fs
pop
adc
lods
out
fiaddl
jnp
je
jp
lds
je
ss
in
dec
push
adc
mov
jb
into
pop
adc
sub
inc
pop
xchg
into
iret
es
push
xchg
imul
inc
rorl
test
pop
push
xchg
jg
push
and
test
inc
mov
xor
nop
pop
aas
jne
fcoml
xorl
rcll
or
mov
mov
push
jl
lret
aaa
push
test
aam
sub
sti
das
lahf
jae
sub
sub
jae
mov
jle
cmpsl
or
sbb
sub
out
add
das
ss
cwtl
stc
push
ss
jecxz
aad
mov
mov
mov
std
push
adc
pop
mov
xchg
dec
out
cmp
pop
sub
mov
and
hlt
aas
push
xchg
insb
jg
test
jb
sub
xor
sbb
push
sub
vcvttsd2si
adc
js
xor
inc
inc
xchg
pop
adc
scas
jb
daa
sub
sti
test
or
push
lret
ljmp
inc
mov
dec
pop
ja
add
mov
xor
push
mov
mov
sub
push
gs
mov
jge
sub
adc
pop
push
cmp
xchg
loopne
daa
push
into
xor
add
int3
pop
test
mov
jmp
xchg
xor
int
cltd
mov
sbb
dec
mov
dec
addr16
out
stos
pop
xor
sbb
mov
adcl
pop
cmovle
bound
shll
push
inc
repnz
jle
int3
orl
lods
gs
jp
les
in
imul
inc
bound
out
testb
jecxz
lds
sub
das
xor
mov
dec
pusha
mov
pop
inc
mov
loope
or
xchg
jo
outsb
inc
scas
pop
dec
dec
jb
jp
lds
ljmp
jo
pop
lea
in
and
mov
jle
pop
pop
mov
icebp
sbbl
sub
pop
sahf
add
push
ret
mov
inc
xor
test
push
loopne
pop
inc
mov
and
in
mov
adc
adc
pop
pop
sbbb
popa
ret
sbb
or
sub
aaa
push
es
xor
pop
nop
and
mov
outsl
scas
cmp
in
add
and
jae
push
mov
mov
mov
arpl
or
lods
lret
movsl
sub
int3
repnz
inc
mov
mov
sub
mov
push
xchg
rol
or
and
addl
pop
lea
pop
or
imul
mov
sub
das
sub
xor
fs
mov
bound
adc
aad
mov
and
jae
mov
push
je
bound
into
shr
mov
and
and
dec
mov
sub
lahf
mov
adc
adc
sarb
mov
int3
pop
sahf
je
mov
cmp
add
xchg
leave
sub
push
pop
mov
aas
paddusb
jl
cmpsb
mov
test
daa
clc
test
cli
and
inc
mov
add
push
mov
push
inc
scas
inc
insb
xchg
or
shl
add
cmp
xchg
add
iret
sti
pop
pop
mov
mov
inc
cmp
adc
push
push
add
stos
pop
insb
sahf
dec
movsb
iret
pop
je
push
sub
pushf
sub
out
scas
aam
sub
and
out
popf
xchg
push
jns
shll
jb
adc
cs
pop
push
push
mov
push
cmp
dec
sub
sti
push
jle
out
addr16
mov
cld
loop
bound
addr16
add
scas
push
inc
repz
ss
loope
inc
push
pushf
mov
das
cltd
push
pushf
mov
in
test
push
xor
arpl
jne
ss
cmpsb
jo
jmp
leave
divl
jb
jne
cmc
enter
sti
mov
inc
cmp
sub
das
xor
pop
xchg
mov
aaa
stos
stos
pusha
xchg
jg
push
pop
xor
mov
test
fwait
loop,pn
mov
add
test
pop
push
xor
ret
arpl
mov
jne
pusha
mov
leavew
pop
jge
add
movsl
pop
bound
push
loope
inc
pop
jo
arpl
pop
xor
rcr
add
rorb
cmp
add
mov
imul
ret
or
mov
out
cmp
xchg
and
lock
push
popa
cmp
adc
mov
int3
pop
push
cli
adc
dec
mov
cmp
lret
push
mov
insb
inc
xchg
and
jp
addb
mov
imulb
rorl
and
mov
adc
cmpsb
xchg
add
mov
mov
aaa
aas
cmp
cmp
mov
out
sub
add
mov
mov
hlt
adc
inc
mov
xor
aas
inc
loope
mov
out
inc
mov
int3
fs
mov
cmpsl
jmp
movsb
jl
lods
or
lods
shl
push
outsl
in
iret
mov
mov
movb
jl
mov
xor
scas
pop
movsl
sub
shll
stos
jae
jp
xor
in
cli
sub
xchg
mov
mov
mov
mov
jle
into
sub
mov
sbb
cmp
pop
add
push
das
mov
dec
adc
adc
jmp
fiaddl
jae
sbb
enter
mov
loopne
push
mov
jmp
ljmp
adc
pop
push
movsb
stc
mov
out
cmp
out
xor
or
sub
dec
pop
bound
push
int
xor
into
mov
push
sub
mov
xchg
jge
ja
mul
mov
ss
or
scas
shlb
cmp
fs
mov
or
das
add
leave
pop
inc
mov
cmp
jl
outsb
sub
fadds
mov
add
cmp
dec
push
shl
push
outsb
pop
bound
xchg
dec
mov
scas
pop
movsl
sub
enter
lahf
push
cmp
lret
mov
cmp
pop
test
pusha
aam
or
popa
push
mov
cltd
xor
fldl
test
sub
imul
test
out
roll
popf
stos
pop
leave
inc
mov
cmpsl
popf
xor
mov
pop
jle
mov
loop
aad
jge
cmpsb
pop
sub
addb
testb
test
jmp
ss
inc
push
sub
mov
mov
or
out
sbb
insl
lahf
mov
fs
xchg
ss
jl
imul
int
fst
jno
push
loopne
mov
in
icebp
movsb
imul
ss
jp
or
or
jle
push
xchg
sub
xchg
sub
or
cmp
jbe
in
pop
mov
lcall
mov
out
and
insb
push
mov
xor
pusha
mov
jb
popf
dec
clc
pop
je
daa
mov
mov
xchg
loop
fmuls
daa
jl
xchg
inc
mov
and
js
je
fs
mov
pop
fs
jbe
int
sub
idivb
push
inc
mov
xor
sarl
idiv
push
push
aaa
inc
lods
mov
xchg
pop
push
mov
xor
lret
mov
pop
push
sub
scas
mov
fs
dec
stc
mov
cmpsl
jae
jp
xor
adc
ret
lret
pop
sbb
lds
mov
push
movsl
mov
test
enter
imul
xchg
jle
sarb
cmpsl
jae
jp
ss
and
and
ds
adc
mov
jle
pop
pop
psubd
jg
addr16
inc
pop
fldt
mov
push
or
mov
inc
sahf
in
stc
xor
aas
mov
repnz
dec
jnp
xchg
sbb
inc
fs
add
sub
xchg
pop
loope
cmpl
xlat
dec
imul
dec
jne
xor
inc
addb
movsl
pop
cmp
fistl
xchg
orb
sub
adc
icebp
test
sub
mov
outsb
ss
cmp
lods
xchg
imul
pusha
rcll
adc
and
pop
or
js
or
cld
aad
and
adc
call
lcall
push
mov
out
mov
push
les
popa
push
pop
mov
aam
stos
daa
flds
shrb
pop
or
jno
nop
xchg
stc
arpl
push
xor
inc
jg
in
xchg
and
ja
test
mov
sub
dec
pop
loope
ss
dec
mulb
rorb
mov
shl
mov
sahf
or
or
dec
inc
xor
pop
sbb
xchg
and
mov
int3
int3
jg
int
fnstsw
push
dec
mov
mov
sub
stos
iret
and
mov
lds
or
popf
jns
inc
or
jg
das
mov
cmp
es
sbb
cmpsl
xchg
insb
mov
pusha
bound
sbb
push
push
add
movsb
fucomi
mov
xor
dec
pop
bound
xor
loope
inc
and
mov
pop
cli
out
mov
jae
nop
cmp
int3
pop
lods
fcom
and
lcall
push
mov
lock
ljmp
clc
jge
xchg
pop
jle
push
fnstcw
cmp
jge
pop
lock
adc
xor
ds
pop
out
or
dec
into
push
adc
in
fbld
jmp
je
dec
jo
cli
push
or
add
out
xor
mov
jl
fbld
sub
fnstsw
or
loopne
lahf
hlt
in
fwait
addr16
cmpsb
xchg
pop
xchg
negl
out
push
push
add
ss
mov
bound
cmp
in
xchg
and
xchg
adc
dec
mov
or
mov
int3
in
stos
xor
stos
xchg
ret
data16
dec
mov
ljmp
mov
sub
cli
in
mov
lea
das
icebp
xor
std
imul
out
mov
dec
aad
xchg
movsb
addr16
jg
mov
loope
inc
mov
cwtl
mov
sti
nop
adc
mov
jle
fscale
lahf
sbb
adc
ja
hlt
xchg
jo
jno
add
cmp
or
mov
sub
and
xchg
insb
and
pop
int3
jge
mov
mov
das
mov
adc
mov
mov
jnp
jmp
gs
jmp
loopne
sbb
add
ss
xchg
popa
push
inc
mov
push
push
sub
push
xchg
push
mov
sub
mov
test
scas
daa
or
inc
cs
or
hlt
sub
std
sbb
insb
inc
mov
cmp
into
in
loope
push
mov
xchg
push
lock
loopnew
repz
sbb
xlat
sti
lcall
mov
cmpsb
jmp
jno
loopne
sbb
das
cmp
mov
es
xchg
into
fbld
or
aaa
stos
sahf
or
dec
jg
push
jg
inc
icebp
inc
aad
adc
loope
or
mov
or
adc
add
or
js
push
inc
mov
or
es
std
sbb
icebp
sub
sti
dec
vmread
loopne
fs
sbb
push
je
outsl
shl
loop
out
pushf
dec
xlat
sbb
sub
jb
stos
xor
int3
cltd
and
nop
repnz
mov
lock
ja
int3
jno
jp
lds
es
adc
jae
adcb
nop
mov
into
xchg
stos
xchg
sbb
jge
lcall
mov
and
xor
shrb
mov
ss
pop
fwait
mov
inc
int
dec
ret
in
or
fs
pop
or
sbb
push
inc
repz
sub
sub
mov
jle
mov
or
pop
inc
sbb
adc
not
xchg
mov
cwtl
lret
cli
sub
stos
push
je
bound
popf
hlt
les
mov
mov
loope
loope
lcall
add
mov
ret
jp
cmp
adc
pop
cmpsb
sub
and
fs
adc
add
inc
fwait
fimull
push
stos
popf
push
or
push
sub
int3
cbtw
mov
jns
int3
out
inc
loope
subb
adc
mov
inc
icebp
push
or
dec
bound
add
add
movsb
fcomps
mov
xchg
mov
mov
mov
stc
dec
or
loopne
icebp
test
sub
loope
sub
mov
mov
mul
and
dec
in
cmp
jb
push
sub
push
mov
sbb
or
movsl
mov
data16
xchg
and
mov
ror
jge
insb
loopne
sbb
jns
pop
out
xchg
and
fidivl
adc
testl
and
sub
cmp
mov
sbb
adcb
stos
addr16
out
sti
int
dec
mov
push
stos
mov
ds
ja
stos
bound
ljmp
mov
repnz
add
inc
mov
push
clc
dec
mov
js
push
or
aam
stos
adcb
aas
cmp
outsl
daa
jb
xchg
cmp
cmpl
pop
mov
movl
popa
jnp
cli
or
clc
xor
outsb
into
cli
and
rcrl
jl
fldt
mov
sub
jle
sub
add
inc
pop
push
outsl
rcll
sbb
jle
repz
jecxz
test
into
ror
lods
rorl
pop
sub
sbb
push
pop
into
out
cmpl
xchg
dec
inc
cmpsl
adc
mov
or
gs
cmp
enter
pop
pop
sbb
sub
pop
cld
rorl
imul
lcall
ljmp
ss
mov
jno
or
xor
int3
movsl
mul
lret
jge
xor
dec
cmp
push
mov
mov
fldcw
or
pop
inc
mov
hlt
mov
test
sub
dec
mul
and
mov
or
cmp
add
push
inc
mov
sub
push
out
mov
push
cmpsb
out
mov
daa
decl
inc
lret
add
sbb
in
mov
and
nop
mov
mul
in
adc
add
dec
in
cmp
mov
popl
inc
pop
bound
xchg
enter
loope
inc
mov
cld
or
cmc
lods
sub
mov
fildl
out
sub
leave
ds
add
popf
aaa
mov
cli
aas
lods
cmpsb
fisttpl
xchg
sbb
ss
addr16
dec
insl
push
jecxz
iret
jge
or
sub
cmp
les
cmp
cmp
sub
push
das
faddl
hlt
inc
aad
adc
aam
sub
or
jae
leave
fstpt
mov
jge
pop
orl
and
daa
ss
ja
repz
xchg
jbe
imul
lock
adc
xor
dec
inc
mov
cli
inc
popa
bound
push
jg
push
loope
inc
push
mov
js
push
repz
mov
adc
packuswb
xor
pop
lock
imul
or
push
mov
lock
je
aam
push
inc
push
fwait
adc
mov
jg
outsb
cmp
imul
out
idiv
mov
bound
inc
mov
dec
pop
imul
popl
xchg
clc
dec
test
sbb
test
fs
ja
shlb
addb
sbb
mov
cmp
out
inc
mov
int3
outsb
cltd
mov
aam
xchg
imul
cmpsl
mov
aas
jle
and
xchg
cli
cmp
icebp
sub
testl
cmpsl
das
push
shll
jp
lds
jns
test
ret
mov
mov
jle
mov
push
mov
enter
lock
in
mov
jae
cltd
add
iret
dec
incb
in
fsts
fadds
movsl
push
add
and
ja
xor
adc
mov
cwtl
sub
lods
dec
mov
mov
lahf
popa
sahf
pop
leave
jb
sub
mov
ret
ficoml
sub
andb
rorb
and
push
or
sub
pop
jo
xchg
outsl
dec
nop
out
lret
loopne
pop
xchg
dec
adc
xor
xchg
addr16
rclb
mov
nop
cltd
fcompl
or
mov
popa
or
mov
add
xor
loope
inc
jp
pop
add
clc
scas
sub
jnp
lcall
mov
dec
out
cmp
add
cmp
or
int3
push
mov
loop
fcoms
ret
arpl
mov
mov
and
test
pop
imul
fists
je
ss
fwait
stc
ja
and
movsl
addr16
dec
pusha
mov
loope
push
mov
out
jns
cld
mov
gs
cmp
pop
sahf
daa
jae
lds
imul
xor
cmpsl
adc
hlt
enter
or
mov
iret
pop
jo
inc
arpl
enter
les
or
out
xchg
xchg
xor
loope
inc
cli
sbb
das
mov
adc
adc
fs
cmpb
movsb
pop
sub
xor
cltd
cmpsb
arpl
stos
std
jl
xchg
jg
push
push
addb
inc
int
adc
mov
xor
xchg
fstl
xor
test
inc
mov
pop
inc
inc
mov
fisttpl
loope
xchg
and
mov
or
leave
lea
xchg
xchg
sti
in
adc
mov
insb
jno
add
sbb
add
pop
lods
cmpsl
clc
test
enter
fwait
lea
fidivs
sbb
aad
rcrl
cmpsb
popa
inc
nop
clc
aaa
xorb
out
jb
loopne
jae
jp
les
scas
jnp
outsl
mov
je
sub
mov
mov
lcall
lahf
hlt
jg
enter
cmp
mov
cmp
iret
sub
cmpsl
mov
add
stc
outsl
adc
and
push
push
or
outsb
mov
inc
repnz
jle
sub
addb
pop
fisubs
das
cmp
jae
jo
push
jmp
mov
lcallw
jb
xor
xchg
shll
lret
scas
jae
pop
cmp
jae
lcall
push
pop
int3
pop
push
test
or
lcall
and
sti
out
mov
je
pop
dec
mov
xchg
stos
or
scas
stos
mov
loope
cmp
pop
jb
pop
mov
mov
movb
fs
mov
xor
mov
imul
add
loope
rcrl
pop
inc
mov
sub
imul
mov
mov
cmp
xlat
jge
leave
mov
push
or
sub
sub
or
pop
lds
jne
xor
xor
rclb
test
into
push
adc
call
xchg
aad
cmp
mov
inc
mov
bound
sub
daa
xor
loope
inc
bound
inc
hlt
push
mov
sbb
ss
daa
mov
imul
add
fwait
clc
dec
dec
mov
aas
xchg
sbb
push
mov
lock
push
insl
lds
jns
xlat
sbb
sub
fldl
lods
jg
mov
ljmp
adc
lea
aad
stos
lahf
push
pusha
jns
into
pusha
mov
lods
dec
push
jmp
push
push
mov
ds
dec
out
mov
cmpsl
pop
sub
xor
aad
in
sub
outsb
loope
lds
das
xor
xor
or
mov
dec
pop
cmp
jp
inc
mov
dec
mov
sarl
clc
dec
xchg
mov
sbb
cli
in
jmp
or
mov
popf
pop
pushf
leave
xor
lock
stc
roll
fs
pop
pop
dec
arpl
cmpsl
dec
mov
pushf
into
adc
stos
or
or
or
push
cmpsb
sub
push
fs
aas
mov
vunpckhps
rorl
and
cmc
mov
cmpsb
fldenv
roll
push
std
pusha
popa
mov
mov
and
call
icebp
sbb
push
aaa
leave
movsl
xchg
es
inc
out
mov
cld
xor
and
addb
loopne
jmp
inc
mov
lds
clc
jb
jno
inc
sahf
mov
arpl
jecxz
test
jle
into
pop
cmc
inc
rcl
test
enter
repz
fnstcw
xor
aam
cmpsb
or
xchg
icebp
mov
enter
dec
int3
add
push
icebp
fiaddl
movsl
nop
and
mov
push
int3
test
imul
jo
repz
xchg
cmc
cltd
adc
out
ret
mov
push
cmc
pop
ss
int
xor
icebp
enter
push
xor
ret
mov
lods
sub
dec
orps
out
in
or
or
jg
fucomi
mov
cmc
in
lds
sub
in
xchg
add
stos
xchg
cs
jp
repnz
mov
jae
enter
pop
imul
mov
adc
pop
fmuls
lret
imul
push
es
lods
dec
or
cmp
shll
inc
mov
int3
data16
mov
adc
pop
sub
sbb
adc
pop
loope
push
or
push
ficoms
pop
adc
mov
cmpsb
pop
sub
loopne
sahf
push
mov
ds
inc
mov
hlt
in
inc
mov
cmp
je
adc
mov
push
dec
adc
clc
xor
test
jb
inc
mov
mov
or
popf
sub
and
mov
adc
jno
das
mov
out
cmp
lea
xchg
adc
mov
out
sbb
js
sti
pop
jbe
fnsave
movsl
clc
cmp
or
push
xor
test
inc
movsl
sub
or
push
insl
fnstcw
mov
mov
jne
lea
mov
xor
lods
add
loopne
icebp
mov
push
mov
daa
add
or
mov
je
pop
or
or
sub
negl
push
cmp
adc
xchg
pop
bound
stos
iret
cs
imul
stc
or
push
push
cmp
xor
imul
add
jbe
mul
gs
pushf
mov
lods
xchg
testl
mov
push
in
mov
pop
push
pop
xor
gs
les
mov
lahf
sub
mov
xor
push
outsb
sbb
mov
mov
jbe
lea
mov
xor
scas
lret
out
cmp
sbb
dec
mov
bound
insb
pop
jmp
adc
push
inc
mov
hlt
scas
sub
sti
pop
fbld
mov
aas
sbbl
pop
bound
sub
xor
loope
inc
push
jg
js
int3
data16
mov
aaa
xchg
jge
sbb
or
mov
xchg
push
or
lret
stc
into
adc
mov
das
fucomp
inc
and
add
ficompl
push
ds
arpl
xor
loope
inc
insb
lods
lds
fcmovu
clc
push
push
sub
push
inc
pop
rcll
cltd
cmpsb
shl
js
orb
fisttpl
lea
bnd
sub
les
divl
fs
pop
mov
sbb
jb
mov
push
or
lret
in
hlt
pop
push
loope
hlt
lods
pop
jl
push
and
pop
les
ret
jle
push
divl
ret
bnd
ret
rcrl
push
jl
dec
incl
xchg
mov
or
js
push
enter
lret
push
imul
movsb
fdivs
jbe
jl
inc
push
shlb
into
and
jae
ret
and
mov
mov
inc
inc
jg
sbb
lret
repz
sbb
inc
mov
fnsave
call
or
push
iret
pop
mov
pop
imul
pop
scas
imul
mov
popf
test
leave
mov
mov
repz
fs
or
sbb
cmp
ja
mull
add
mulb
dec
add
call
push
scas
pop
adc
movsb
xor
shr
insl
and
leave
and
jp
shll
sub
in
je
mov
ret
js
icebp
fstps
or
push
jb
test
and
inc
mov
sbb
negb
jle
mov
mov
xchg
movsb
add
mov
xor
mov
jno
or
jb
es
adc
ja
aam
sub
inc
add
mov
fmull
or
pusha
popf
push
or
push
sub
insb
push
sub
stc
out
mov
ret
popa
or
push
scas
add
or
lods
pop
out
mov
or
fists
pop
fwait
sahf
adc
sub
cmp
xor
fs
pop
cmp
sbb
inc
mov
in
cwtl
and
daa
movsb
hlt
fs
sar
adc
arpl
xor
imul
les
mov
or
inc
xchg
stc
fistpll
lds
mov
or
sbb
mov
mov
xlat
sar
mov
test
sub
in
inc
push
std
cmp
sbb
inc
mov
push
mov
repnz
push
test
stos
aad
adc
js
or
aam
es
mov
or
cs
and
mov
or
leave
testb
sbb
std
das
arpl
jns
xor
xor
movl
cld
pop
cmp
out
rcrb
test
enter
or
mov
mov
xor
ss
push
shll
mov
mov
or
inc
dec
loopne
movsl
mul
xchg
ret
or
js
pop
cmp
cmp
and
loopne
cmp
xor
cmpb
in
pop
jbe
mov
push
jp
addr16
in
jb
dec
js
mov
lds
shl
lods
adc
cs
sbb
sub
scas
in
ja
xchg
vmovaps
dec
push
shrb
fldenv
sbb
and
shll
cmp
fsubl
pop
mov
fs
jbe
mul
lcall
cmp
xchg
and
sbb
mov
int3
insb
lcall
inc
les
mov
iret
xor
cmp
les
rclb
jbe
or
movsl
jae
jp
ss
or
jle
push
dec
mov
lahf
movsl
mov
push
ja
dec
pop
test
imul
xchg
pop
arpl
and
adc
lock
mov
push
adc
mov
xchg
aas
push
inc
mov
jne
mov
or
out
xchg
jl
sbb
inc
inc
js
sar
cmpsl
pop
sub
fcomps
inc
mov
add
ss
fucomp
cmpsl
mov
or
repnz
xchg
ret
data16
mov
bound
inc
mov
pop
pop
inc
mov
jmp
sub
ja
pop
bound
inc
aas
cmpsl
ds
and
mov
xchg
sbb
mov
bound
xor
inc
lock
sub
mov
push
mul
and
in
fmull
les
imull
xor
movsl
add
dec
jne
inc
dec
sti
out
mov
jge
pop
inc
mov
jmp
add
insl
sarb
jo
dec
mov
mov
nop
push
lea
data16
lret
sbb
stos
lret
sub
jae
jp
lds
fmul
or
mov
outsl
push
jg
inc
lret
sbb
das
jge
pop
imul
nop
mov
cmc
and
mov
je
sub
iret
fwait
fidivrl
push
or
push
stos
mov
inc
push
cli
out
mov
mov
push
dec
mov
pop
dec
xor
clc
sub
add
cltd
rclb
out
pop
cmc
rolb
sub
push
mov
movsb
jl
inc
pop
dec
jecxz
pop
adc
xlat
lret
mov
daa
adc
push
jae
and
pop
xchg
xchg
jmp
mov
mov
arpl
inc
mov
adc
mov
xchg
lds
cmpsb
imul
cmp
jmp
cltd
jecxz
pop
mov
push
dec
cwtl
cmp
int3
out
inc
pusha
mov
sub
xchg
pop
jle
sbb
push
push
add
xor
xor
cmpsl
imul
push
inc
push
or
scas
lods
notl
sub
mov
lock
stos
lock
ss
cs
mov
mov
inc
call
pop
ds
sub
mov
mov
scas
into
fwait
out
and
movsb
add
dec
mov
or
xchg
faddp
push
jns
test
mov
out
add
mov
cmpsb
popf
dec
or
push
push
popa
lock
mov
cmpsb
add
or
int3
pop
js,pt
jge
mul
ss
and
imul
jns
adc
ss
push
jb
nop
mov
int
mov
out
lock
mov
mov
and
cmc
enter
dec
fcmovb
insb
xor
inc
call
or
inc
stc
pop
or
icebp
arpl
push
adc
ja
cmpsl
bound
cmpsl
ror
dec
cmp
or
or
mov
xchg
cli
cmpsl
push
jae
out
mov
mov
int3
push
pop
jmp
int
xchg
ror
sub
or
leave
mov
out
subl
popf
inc
cli
outsb
stos
inc
popa
and
push
mov
xchg
pop
mov
das
mov
jge
aas
mov
mov
pushf
in
mov
jno
adc
inc
jl
xchg
mov
call
pop
xchg
fstl
adc
xchg
adc
or
xchg
test
enter
dec
int3
ljmp
outsb
push
mov
dec
cmpsl
or
mov
or
in
icebp
pusha
and
aaa
div
scas
sub
fisubs
les
mov
and
in
jmp
rcrl
pop
inc
mov
cmp
inc
lock
std
and
add
dec
outsb
sub
jno
dec
out
cmp
add
xchg
inc
adc
sbb
mov
loope
pop
mov
sbb
sub
xor
daa
hlt
cli
sahf
mov
push
fcmovnb
xor
mov
cmp
into
push
cmp
hlt
and
add
mov
xchg
into
iret
and
test
ret
sbb
sbb
lods
pushl
xchg
jg
push
sbb
inc
inc
adc
cmc
fisttps
mov
shrl
mov
push
mov
int3
pop
out
aad
inc
add
sub
les
mov
and
pop
adc
popa
sahf
push
inc
int
and
xchg
xor
andb
mov
mov
pop
xchg
inc
pop
xchg
push
pop
das
push
cwtl
int3
addr16
xorb
es
or
push
or
or
jmp
cmp
push
aaa
pop
je
sub
stos
cmp
jmp
add
rorl
gs
push
add
faddl
in
insb
popf
push
or
push
fiadds
imulb
decl
out
in
ds
test
int
add
add
lahf
popa
sahf
and
jb
sub
scas
push
les
jecxz
fs
popa
pop
dec
pushf
xor
cmp
cltd
andl
push
inc
mov
mov
mov
jmp
mul
shlb
adc
add
adc
mov
in
xor
mov
stc
xchg
or
pushf
js
or
inc
xor
repz
std
js
cld
test
inc
icebp
in
push
jns
loope
ret
xchg
shll
mov
xchg
adc
lret
fs
idivb
xchg
xchg
dec
inc
push
leave
pop
mov
jle
sub
adc
add
add
testl
mov
push
mov
add
push
pop
xor
sub
aad
mov
and
outsl
roll
dec
lds
dec
sub
ss
jmp
sbb
or
loope
mov
mov
pop
and
mov
adc
sti
pop
xchg
mov
imul
mov
in
popf
push
or
push
pavgw
or
out
mov
push
mov
dec
and
xchg
cmpsb
test
shlb
or
inc
mov
mov
or
pop
cmp
fildll
arpl
mov
mov
lea
cmp
or
icebp
enter
lock
pop
inc
jge
mov
jge
shlb
das
std
inc
in
test
pop
and
jecxz
push
loope
imul
cmp
push
xor
test
pop
inc
mov
int3
arpl
mov
inc
cmp
dec
xor
or
xchg
adc
add
shlb
xor
mov
fwait
mov
sahf
fisttps
jb
sub
mov
ret
movsb
pushf
loopne
andb
rclb
or
xor
addb
jmp
jno
jp
lds
stos
fucom
je
ss
in
jg
jle
pushl
inc
outsb
sbb
cli
insb
push
jmp
or
adc
xor
aaa
popa
sub
das
xor
sti
mov
popa
insb
inc
xchg
and
mov
inc
int3
jnp
mov
stos
xor
icebp
sub
test
je
xor
mov
nop
into
sub
lods
les
push
inc
jbe
jb
ret
mov
repnz
xor
ficoml
hlt
in
jg
mov
mov
jno
nop
faddl
insl
cmc
pop
aam
push
xor
mov
ss
popa
nop
pop
dec
jp
cs
subl
dec
into
xchg
into
push
adc
or
faddp
jle
es
push
test
push
cwtl
add
fcomps
push
lret
add
pop
or
mov
add
daa
bound
cmp
dec
add
fstps
imul
xchg
mov
mov
js
lea
data16
sub
dec
or
xchg
and
jns
loopne
dec
mov
das
hlt
sub
cli
pusha
movsb
xchg
mul
mov
fildll
sub
negb
lret
or
cmp
scas
push
cmc
scas
mov
xor
mov
push
or
leave
test
xor
add
ja
dec
sbb
adc
les
fxch
mov
jle
imul
shll
test
enter
sub
add
xchg
mov
mov
or
xchg
js
or
aam
push
fisubrl
fimuls
mov
popa
insb
inc
cwtl
clc
ret
pusha
mov
test
cmp
add
int3
or
iret
std
mov
icebp
outsb
imul
popf
pop
cmp
or
popa
sub
leave
into
pushf
addr16
and
test
repnz
les
mov
mov
into
dec
mov
jge
pop
dec
sti
icebp
xor
dec
rorl
xchg
lds
sahf
mov
push
or
cmp
lret
aas
stos
lret
out
adc
mov
outsl
js
or
aad
push
outsl
mov
jns
decl
xchg
xchg
clc
test
xchg
lock
dec
rcl
or
loopne
in
sbb
add
inc
jne
and
lods
test
dec
mov
shll
pop
or
sbb
xchg
je
adc
cli
cmp
add
nop
or
stos
xchg
pop
lea
push
push
add
sbb
xor
cmpsl
imul
dec
pop
xor
loopne
sahf
mov
and
in
int
push
dec
lds
dec
sub
add
push
push
add
lods
adc
inc
fldcw
mov
or
fucomi
shlb
push
jle
imul
int3
jo
testl
sbb
fldt
sarl
pop
add
clc
mov
leave
add
mov
divb
mov
cltd
add
aas
and
call
hlt
out
inc
mov
int3
imul
and
mov
out
add
pop
mov
loope
inc
mov
or
sub
stc
push
cmc
adc
jecxz
and
ja
testl
into
push
adc
test
and
in
jae
test
push
push
pop
es
hlt
das
nop
rclb
cld
mov
sbb
sub
adc
rorl
cltd
ja
repz
jne
test
enter
adc
and
mov
pop
jge
test
popa
insb
inc
cwtl
and
push
mov
mov
stos
std
mov
adc
popa
inc
push
mov
inc
stos
xchg
negb
rcll
xchg
push
inc
push
fwait
shlb
sub
rcl
xor
jb
mov
leave
mov
sbb
xchg
mov
cmp
mov
repz
lret
jle
mov
sub
or
adc
aaa
movsb
aas
mov
das
dec
or
fistps
pop
movsl
sbb
ja
mov
pushf
ds
sbb
vaddpd
xchg
and
pusha
icebp
or
cmp
dec
or
jg
popl
mov
shlb
jecxz
andl
test
sub
jp
sub
mov
push
adc
out
mov
fs
mov
scas
loopne
inc
cld
push
push
add
loop
and
ja
cld
bound
test
mov
scas
cltd
add
sahf
std
adc
or
add
xor
lods
jo
or
int
into
out
loope
xor
xchg
push
sub
pop
adc
into
add
mov
mov
jle
inc
jae
sarl
out
pop
jecxz
lods
call
cltd
out
rol
stos
scas
add
xlat
lret
sub
and
js
out
andl
push
sub
sti
sub
in
daa
mov
mov
lahf
xor
inc
sub
sbb
mov
xchg
int
xchg
repz
enter
sahf
int3
movsb
pop
mov
cmp
mov
or
jbe
lret
mov
dec
mov
lret
pmaxub
push
ret
test
loop
mov
arpl
lcall
adc
xor
test
out
cwtl
scas
inc
and
jle
push
int3
sub
call
loop
jae
xchg
sub
sub
jne
sub
sub
daa
popa
adc
jle
cmp
enter
add
scas
fcoms
xor
or
imul
ljmp
xor
cmp
push
adc
cwtl
jb
movsl
sub
xchg
icebp
sub
jbe
movsb
mov
or
hlt
movsl
mov
mov
and
mov
or
stos
push
push
adc
lret
push
lret
jae
lahf
out
cmpsl
or
lds
loopne
negl
inc
sbbl
jl
push
mov
popa
push
sahf
sub
in
jle
xlat
dec
mov
nop
cltd
xchg
imul
dec
adc
les
sbb
mov
push
lds
sub
jae
dec
adcl
movsb
xchg
and
scas
push
sub
adc
add
xchg
xchg
sbb
xorl
mov
punpckhdq
test
xchg
inc
mov
in
scas
lods
adc
mov
pop
popa
xchg
and
and
mov
dec
mov
lret
int3
pop
daa
push
neg
decl
cld
mov
and
cli
push
cmc
or
mov
fdivr
clc
mov
mov
or
inc
xchg
daa
lock
test
in
jmp
xchg
mul
lret
jo
pop
mov
aas
loopne
fmull
pop
xchg
push
inc
mov
push
xchg
leave
mov
lea
rcr
sub
cli
insl
and
xchg
mov
outsl
jae
push
xor
xchg
push
ficoms
mov
js
into
clc
cltd
imul
repz
fdivl
cmp
sub
bound
sub
iret
sbb
addr16
pushf
test
mov
adc
arpl
sub
mov
shll
nop
add
pop
adc
mov
out
fstl
xor
or
xlat
roll
adc
mov
jg
testl
daa
cs
inc
insl
lock
ret
and
jge
mov
mov
leave
add
or
push
or
fsubs
mov
je
inc
imul
lret
sub
inc
sbb
cmp
or
cwtl
mov
shlb
sub
mov
pusha
mov
mov
stos
je
ret
or
es
mov
xor
cmp
or
aas
sub
and
in
inc
mov
cmp
mov
jecxz
inc
cmp
add
or
scas
xchg
clc
pop
or
or
fs
or
jbe
push
push
dec
and
inc
inc
jle
and
imul
xor
aas
xchg
mov
mov
daa
xorl
test
cltd
inc
pusha
stc
std
div
mov
test
aaa
xchg
jnp
mul
aas
jp
add
test
out
or
pushf
xor
cmp
hlt
jmp
inc
mov
cmpl
lock
movsl
imul
insb
sbb
int3
movsb
sbb
push
stos
dec
out
cmp
inc
lds
cmp
push
xor
sbb
push
push
add
cmp
or
mov
mov
adc
hlt
dec
jnp
cmp
daa
jg
cmp
lock
movsl
mul
adc
movsb
pop
sub
cmp
xchg
mov
ja
or
je
and
xor
and
xchg
xchg
xor
sub
movsl
arpl
fsubrs
add
mov
mov
push
notb
int3
insb
lahf
mov
test
adc
int3
pop
cmp
mov
mov
imul
push
shlb
stos
jno
jp
xor
out
xor
aas
push
shrb
imul
pushf
ss
push
xor
repz
cmp
cmp
cs
or
mov
push
mov
popf
inc
decl
mov
adc
mov
adc
or
test
sbb
push
push
add
fcoml
cmpsl
imul
xchg
enter
movsl
imul
cmp
stc
sub
dec
or
mov
ss
xchg
mov
sbb
pop
jns
dec
adc
adc
int3
jl
mov
sahf
mov
mov
or
dec
push
mov
loopne
or
push
popa
mov
fldcw
scas
sbbb
mov
adc
or
out
mov
mov
cmc
fcoms
mov
data16
mov
push
xchg
test
enter
jbe
shlb
pop
jo
jmp
push
mov
fnstenv
push
or
push
into
aam
mov
add
insb
mov
ret
arpl
mov
cmp
fs
inc
mov
sbb
loope
ret
addl
clc
and
push
mov
fcoml
sub
cwtl
and
daa
mov
mov
and
xchg
mov
mov
fwait
pop
pop
mov
or
mov
mov
data16
or
in
aad
ret
test
xchg
or
xchg
inc
mov
loope
xchg
and
pop
lcall
mov
sbbb
sbb
adc
mov
movsl
lret
shl
aaa
fwait
and
mov
xchg
repnz
enter
mov
jl
add
cmpsl
aas
push
adc
int3
or
addr16
in
mov
scas
mov
push
ss
mov
ret
bound
mov
repz
sti
hlt
or
scas
aas
push
or
sub
push
in
mov
dec
dec
fidivl
and
inc
inc
testl
dec
sbb
pusha
aas
sbbl
inc
xrelease
jae
mov
cwtl
sbb
ss
inc
pop
jbe
das
and
mov
lock
cmp
jns
mov
xchg
adc
lret
sbb
sub
cmp
pusha
dec
cmpsl
lea
pop
sti
bound
pop
push
mov
out
fstps
cwtl
mov
push
lret
das
fs
outsl
sub
stc
mov
mov
xlat
imul
sub
cmp
sbb
mov
idivl
movsl
jnp
push
adc
in
push
xchg
and
add
pop
jae
inc
mov
int3
push
mov
hlt
push
loop
and
mov
adc
cs
mov
gs
repnz
ss
jg
fwait
testb
sti
int
pop
adc
in
fdivrs
in
inc
jmp
mov
data16
cmpsl
rcrl
pop
inc
mov
sub
mov
pop
mov
imul
and
sbb
xlat
cmp
loopne
fwait
clc
push
fimuls
adcl
dec
xchg
mov
or
cmp
fdivl
mov
insb
ja
outsb
pop
cmp
adc
jne
enter
mov
stos
or
adc
lcall
cmp
aad
jmp
mov
or
cmp
scas
cld
fadd
push
je
adc
adc
inc
mov
pusha
negb
jge
mov
aaa
adc
jp
xchg
dec
into
push
adc
mov
out
xchg
inc
das
xchg
mov
fmulp
inc
dec
jmp
arpl
pushf
adc
and
das
mov
cltd
cli
pop
jle
loopne
aad
aam
push
or
push
cltd
cmp
inc
ss
cmp
ja
cmp
int3
pop
and
pop
and
mov
inc
mov
int3
test
scas
pop
lcall
imul
inc
repz
movsb
incl
movsb
in
sti
pop
sbb
push
repz
or
pop
test
enter
cmp
iret
es
addr16
or
mov
add
inc
cmpsl
out
mov
std
into
pop
imul
adc
popa
pop
inc
cmp
aaa
xchg
cs
ret
mov
nop
jb
das
xchg
cmpl
pusha
inc
aaa
pop
bound
jmp
xor
inc
push
mov
cmp
sbb
or
scas
lock
call
stos
xchg
icebp
test
sub
inc
push
stc
out
mov
fwait
fs
imul
pop
push
mov
mov
mov
icebp
out
subl
lods
mov
test
insl
jle
aas
fxch
adc
sub
in
sbb
sub
xchg
add
sbb
mov
aas
sbb
xor
scas
sbb
sub
mov
cmp
mov
popa
popf
push
or
push
fs
mull
add
sub
les
shr
aas
inc
cs
mov
imul
hlt
push
jo
cmc
mov
mov
mov
cmp
mov
xor
pop
movsl
sub
xor
in
clc
ret
mov
fst
enter
lcall
push
icebp
outsb
imul
lds
cmp
push
xor
lcall
sub
mov
int3
fmull
pop
fs
pop
inc
inc
xchg
push
pop
inc
pop
inc
or
jbe
mov
or
sub
or
adc
aaa
stos
push
loop
inc
jg
push
pop
push
xchg
inc
aad
adc
mov
push
rclb
xchg
js
or
sub
mov
cwtl
stc
lea
inc
popa
bound
xchg
pop
push
adc
push
inc
hlt
inc
cmp
stos
int3
gs
mov
inc
pop
cmpsb
pop
sub
loopne
sahf
aam
or
lret
adc
adc
daa
inc
stos
push
and
cmp
inc
movsb
push
mov
mov
out
loope
pop
pushf
and
pop
ss
xor
pop
cmp
test
jo
sub
mov
rcll
scas
xor
lea
adc
mov
or
sbb
fnclex
xor
mov
ficomps
xorb
sub
or
stos
xchg
pop
xchg
bound
push
push
add
dec
repnz
cmp
test
leave
cmpsl
and
xor
add
cmpb
call
push
pop
lds
into
rorb
xchg
xchg
lret
inc
testl
cld
jg
dec
or
rolb
sub
loope
add
ret
inc
push
in
xor
jle
into
sub
inc
xlat
test
enter
or
mov
rcl
push
imul
or
mov
loope
inc
mov
iret
es
adc
ja
aad
cmp
aam
dec
cmp
mov
movsl
test
popf
push
or
push
xchg
jmp
aas
inc
dec
dec
add
mov
or
loopne
lahf
and
mov
mov
lock
repz
jb
pop
lret
out
sbb
loopne
pop
mov
in
adc
mov
xchg
dec
hlt
xchg
jg
jp
cld
sbb
mov
andl
bound
xchg
adc
or
pop
sub
das
sub
push
xchg
movsl
stos
cltd
in
nop
or
int3
or
or
in
mov
roll
in
stos
sbb
gs
mov
mov
push
fs
mov
loop
fsubp
cmp
repnz
or
pop
mov
xor
add
repnz
dec
rol
dec
sub
into
shl
movsl
roll
xor
sti
xor
adc
mov
jg
mov
arpl
idiv
mov
test
jle
and
mov
mov
hlt
enter
xor
ficomps
loopne
shrl
and
into
mov
pop
shld
mov
lock
stc
roll
jne
iret
jnp
push
and
mov
sbb
mov
aam
sub
and
sbb
ds
stos
mov
cmp
stos
push
stos
xchg
pop
repnz
sbb
push
push
add
sbb
jmp
test
mov
mov
mov
lock
jecxz
test
push
sub
insl
and
push
jp
loopne
sub
add
cs
ja
pop
push
lea
inc
push
sbb
lcall
testb
bound
cmp
sbb
push
mov
jmp
pop
clc
mov
out
fmuls
fstpl
mov
sbb
mov
mov
out
sar
pop
fdivl
ss
inc
and
in
mov
into
jbe
sub
push
pop
arpl
ret
sub
test
and
mov
or
leave
pop
mov
loopne
rcrl
pop
cmp
movntps
test
adc
add
xchg
xchg
mov
and
lcall
int3
jge
mov
xchg
xchg
inc
add
push
mov
into
mov
inc
rcrb
mov
push
shll
mulb
sarb
push
cmpl
shrl
aad
jo
xor
daa
and
imull
test
enter
fistl
out
xorl
xchg
xchg
popa
adc
jne
nop
lret
outsl
imul
xchg
test
enter
push
int3
fisubrl
jmp
lret
cltd
movsb
push
arpl
and
loope
inc
sbb
popa
cmc
cwtl
mov
adc
push
imul
push
push
adc
adc
leave
mov
and
or
sub
or
aas
push
sub
insb
jne
and
das
outsl
cmpsl
decl
lds
mov
js
icebp
xchg
pop
mov
in
jae
xchg
xor
paddq
mov
dec
shlb
iret
sub
ja
sbb
or
dec
hlt
rcrb
jecxz
xchg
sbb
out
xor
mov
add
jno
aas
sbbb
pop
bound
inc
mov
int
pop
mov
call
pusha
adc
shrl
xorl
movsb
xchg
xchg
bound
sbb
aam
test
sub
ds
mov
fstl
out
adc
cmp
pop
int
out
movsl
clc
or
xchg
jg
push
xor
test
push
mov
or
pop
test
out
and
ja
call
inc
and
scas
cltd
aam
loopne
popa
or
or
fnstsw
ja
out
sbbl
inc
or
push
push
sub
pop
ret
aas
sarb
xor
jle
mov
jp
rcr
out
leave
mov
out
loop
adc
imul
testl
aaa
sbbl
jmp
sub
sub
pop
push
idiv
mov
xorb
icebp
inc
jno
xor
in
mov
xchg
stos
lods
cmpsl
xor
enter
xchg
imul
imul
pop
int3
xor
loope
stc
mov
or
out
mov
cmp
paddusb
push
negl
sti
jne
cmp
cmpsl
insl
mov
mov
xor
mov
test
add
sub
jg
mov
loop
jle
push
ret
lret
pop
xor
push
aaa
jp
test
inc
test
aaa
push
push
jle
mov
xorl
jle
mov
pop
ja
sbb
push
dec
jbe
mov
jnp
mov
pop
lcall
int
add
push
int
call
pop
inc
sbb
push
xchg
and
mov
or
ret
jnp
push
sbb
fadds
mov
and
xor
mov
pop
or
leave
out
insl
out
movsb
nop
lret
fwait
mov
lret
ss
addr16
pop
and
add
dec
push
int3
fs
mov
adc
fadds
or
mov
clc
pop
je
and
mov
adc
mov
xor
mov
loope
roll
sub
push
test
aas
sbbl
ja
ficoms
mov
fmuls
ss
cltd
jns
and
dec
add
adc
add
jp
cmp
stc
or
data16
sub
or
push
inc
push
or
aaa
jle
cvtdq2ps
imul
testl
sbb
sub
cs
ret
lock
movsl
les
mov
ret
je
push
cli
push
adc
shl
pop
ss
ja
cltd
lret
psubd
adc
adc
mov
lock
jb
pop
ffreep
jns
jl
push
mov
inc
push
mov
xor
lret
mov
into
and
mov
xor
pop
imul
jbe
sbb
enter
into
stc
push
xchg
sub
or
add
in
mov
sub
lock
pushw
mov
jns
add
test
xor
sti
call
fstl
sbb
xchg
inc
mov
cmp
jg
push
xor
xchg
adc
pop
xor
aas
or
hlt
in
inc
mov
int3
pop
inc
push
scas
ljmp
cmp
add
aaa
fwait
sub
shll
add
push
add
and
aas
loopne
cli
sbb
daa
sahf
inc
inc
inc
mov
lock
es
sbbb
ja
ret
repz
sub
mov
xor
popa
xchg
vmovaps
rcrl
mov
rdmsr
aas
xor
cmpsb
jns
out
inc
mov
cmc
lods
sub
fs
inc
mov
lret
fisubl
push
lock
loope
inc
cwtl
call
cwtl
inc
mov
loope
repz
out
aam
sub
xchg
cwtd
insb
mov
imul
or
xchg
jle
into
sub
lods
lock
add
sbb
sub
out
or
push
sahf
inc
xchg
les
aad
insb
lret
xor
xorl
cmp
das
push
outsl
sub
xchg
adc
ljmp
sbb
iret
stos
inc
cmp
xchg
or
ret
pop
push
cmp
adcb
aas
push
mov
xchg
icebp
inc
mov
cmp
stos
sbb
push
push
add
vpcmov
movsb
data16
pop
mov
icebp
stos
roll
mov
aam
cmp
push
cli
das
jno
sahf
pop
es
cs
sub
lds
mov
inc
jno
mov
add
fwait
pushf
jb
xor
push
jb
adc
jecxz
and
gs
push
push
test
dec
cltd
fs
xlat
das
sub
insb
adc
jbe
pop
dec
mov
adc
adc
and
jnp
mov
add
mov
fs
mov
inc
into
shl
aas
inc
dec
mov
sub
xor
cmp
xchg
mov
and
testb
push
push
lds
aam
sbb
cmc
cmp
push
mov
out
loope
push
bound
and
adc
mov
jg
shll
pusha
fs
je
xor
inc
ja
hlt
cwtl
cmp
gs
pop
push
shr
inc
fstpt
push
leave
mov
cmc
jmp
mov
addr16
stos
xchg
pop
int
sbb
push
push
add
ss
dec
jns
mov
inc
push
add
or
or
dec
ss
mov
or
pop
inc
aaa
pop
adc
mov
lock
stc
sub
xchg
nop
loopne
jnp
push
in
mov
mov
mov
jmp
adc
cs
mov
fnsave
adc
push
mov
sarb
repz
sub
jns
outsb
fsubrp
movsb
mul
jg
cmc
push
push
into
into
out
inc
jbe
mov
data16
lods
jae
jp
ss
mov
push
mov
jg
xchg
lods
cs
in
in
xor
push
mov
mov
adcb
pop
lcall
cmp
repnz
jne
test
pop
loopne
filds
nop
add
xor
pop
aad
mov
and
lret
addl
push
mov
fbstp
aas
mov
push
mov
inc
sbb
and
dec
popl
jbe
in
loop
je
ss
and
lcall
mov
jle
jns
push
into
push
adc
pop
aam
push
inc
imul
pop
cmp
cmpsb
push
scas
nop
and
mov
dec
mov
pop
into
movsb
inc
adcb
and
inc
dec
dec
mov
xor
lds
hlt
sub
stos
cmpsl
xchg
pop
aad
sbb
push
push
add
ss
mov
mov
rcrl
lret
int
jge
xchg
popf
dec
sbb
andb
fwait
or
and
sub
mov
push
outsb
mov
ret
push
sub
pop
ja
adc
jecxz
sar
dec
pop
mov
and
add
sub
xor
push
dec
repz
xchg
adc
jp
push
jle
xchg
cmp
sbb
test
stc
outsl
in
sub
push
mov
int
ss
insl
dec
popa
xor
ss
imul
inc
outsb
leave
data16
jg
dec
or
push
dec
push
adc
and
or
test
cmp
int3
popfw
mov
jns
jg
sub
data16
dec
push
push
incb
adc
mov
push
mov
mov
xchg
pop
outsb
loop
aam
mov
adc
push
xchg
jle
into
sub
mov
adc
dec
sbb
sub
dec
mov
sub
das
xor
xorl
in
inc
fiadds
inc
rcll
push
lret
repnz
into
repz
data16
adcl
mov
aas
push
inc
das
sbb
pop
push
pop
and
in
xchg
ja
lock
das
sbb
mov
mov
mov
jp
or
rorb
iret
jg
add
mov
sbb
bound
inc
push
push
xor
mulb
sbb
mov
data16
outsl
nop
mov
cmpsl
pop
sub
sbb
xchg
xor
mov
lds
lds
aam
jmp
cwtl
dec
orl
mov
xor
je
jecxz
stos
jnp
push
lahf
aam
jne
sub
test
jno
jmp
pop
adc
mov
cmp
aas
cmp
xchg
stos
iret
and
inc
ret
negb
mov
push
ss
cmp
adc
inc
mov
in
mov
mov
int3
push
in
ljmp
cmp
inc
icebp
push
insl
ds
mov
mov
jne
leave
scas
inc
pop
mov
xor
lods
lds
cmp
or
push
int3
arpl
push
mov
shll
mov
sbb
xlat
fcmovb
pop
bound
jl
inc
pop
jg
push
cmp
sbb
ret
jmp
xchg
test
jnp
in
lret
pusha
mov
gs
sub
lahf
add
popf
push
sbb
or
sbb
add
cmc
js
sti
pop
inc
aaa
int
xchg
and
push
scas
sbb
mov
data16
sbb
adc
inc
inc
out
cmp
adc
pop
mov
dec
pop
and
mov
inc
mov
adc
pop
ret
push
std
mov
bound
sub
sahf
aaa
subl
mov
or
imul
sub
xchg
jecxz
and
out
inc
fs
inc
pop
clc
adc
inc
pop
jecxz
sub
ret
into
push
adc
daa
ja
xor
decb
stc
fwait
divl
stos
insb
sbb
sub
testl
cmp
sbb
mov
sub
les
ja
ret
repz
xchg
push
movsl
mov
fiadds
sbb
repz
dec
add
aas
psrlq
outsb
mov
sbbl
mov
jne
rcrl
mov
cmp
aaa
adcl
pop
cmp
and
ljmp
fiaddl
push
aaa
std
scas
mov
cs
add
sub
lea
sub
lea
cmp
lock
add
aam
push
in
mov
sub
arpl
test
push
shl
aas
dec
sbb
bound
scas
cmp
mov
fcoml
sbb
push
inc
xacquire
outsb
dec
xlat
pop
push
xor
loop
adc
adc
sub
jno
xlat
aaa
mov
lock
xchg
ja
icebp
mov
les
frstor
and
lret
fwait
leave
cmp
lods
sub
mov
mov
hlt
dec
push
inc
mov
loope
inc
push
mov
jno
jp
les
negb
arpl
add
sub
sbb
mov
cs
test
mov
test
cmpsl
adc
xor
push
test
sbb
loope
stos
movsl
push
ss
add
cmp
mov
jo
mov
mul
scas
jg
add
movsb
aas
xlat
movsl
imul
cmp
fs
sbb
lret
and
mov
lret
aas
and
mov
jp
and
out
popa
js
repnz
int
pop
add
insb
mov
in
or
xorl
jbe
push
mov
out
mov
xchg
xchg
mul
adc
mov
data16
mov
dec
or
ds
cld
cmp
hlt
in
inc
mov
int3
push
das
dec
mov
mul
or
push
lds
testb
sub
push
mov
mov
inc
mov
repz
imul
mov
xchg
es
xchg
repnz
enter
push
inc
int
mov
outsb
gs
ss
ds
or
fisttps
ret
mov
or
aad
sub
and
pop
and
lods
repz
movsb
dec
dec
pop
lea
cwtl
mull
sbb
icebp
lret
mov
push
sahf
xchg
push
xchg
and
mov
hlt
int3
jb
jecxz
fdivrs
push
lret
lds
jl
inc
push
movsl
add
mov
mov
iret
push
int
test
ret
sbb
out
mov
mov
add
nop
cld
xor
xor
mov
dec
inc
mov
shld
push
pop
inc
mov
ret
cmp
ja
or
sbb
inc
loop
dec
dec
add
mov
xchg
pusha
aad
sbb
push
push
add
mov
xor
loopne
sub
int
mov
aad
popf
push
or
push
sub
push
ss
mov
out
cmp
or
mov
sub
fists
push
or
push
xor
imull
test
add
xor
pop
cmp
adc
or
sub
testl
bnd
push
add
shr
les
and
inc
lds
mov
test
adc
xchg
inc
into
push
adc
inc
gs
jae
popf
fs
rolb
pop
add
cmp
add
loope
lea
lcall
int
das
ret
mov
fs
pop
inc
enter
and
jecxz
outsb
int
les
sub
adc
ret
lock
mov
imul
mov
jns
mov
dec
lret
ffreep
and
imul
cmp
in
mov
les
or
inc
xor
xchg
dec
or
push
mov
out
fidivrs
int3
xchg
sbb
fmul
pop
jbe
mov
pop
faddp
repnz
sub
pop
mov
mov
jle
stos
jnp
inc
mov
leave
ds
mov
xor
daa
ds
xchg
jg
sub
adc
imul
rorb
imul
dec
or
test
cltd
rcrb
test
pop
inc
mov
push
jecxz
mov
fcmovnu
add
pop
popf
into
iret
out
dec
or
and
adc
in
inc
testl
pop
dec
cmp
sbb
add
inc
adc
movb
pop
xor
rcrl
mov
aad
xor
mov
dec
call
ds
or
xchg
out
inc
add
call
pop
idivb
pusha
cmp
aad
adc
ss
iret
out
add
xchg
xor
cmp
in
and
les
mov
scas
outsl
cmpsl
pop
dec
inc
push
repz
mov
or
pop
sub
in
inc
clc
test
sub
mov
fidivs
or
nop
cs
fs
mov
add
mov
add
fpatan
mov
in
lds
push
mov
pop
xor
mov
and
pop
popa
mov
pop
or
rcrl
inc
mov
cmp
push
int
mov
and
mov
adc
ret
mov
cmp
ror
lock
movsb
add
aad
shrl
sbb
push
push
add
ss
cmp
cli
mov
or
dec
sub
movsl
sahf
les
mov
or
repnz
gs
adc
adc
addr16
mov
pop
pop
cmp
ret
jg
adcl
repnz
pop
popf
lcall
adc
xor
cmp
hlt
in
inc
mov
int3
pop
push
sbb
mov
mov
push
mov
bound
pop
incl
inc
mov
push
sbb
sub
popa
mov
ret
data16
dec
xchg
adc
mov
and
fs
mov
cmc
movsl
push
inc
mov
imul
scas
psubd
cmp
mov
xchg
mov
test
mov
pusha
xchg
adc
outsb
jle
into
and
inc
in
pop
jle
btrl
ljmp
cmp
js
ficoml
imul
or
daa
mov
out
aas
imul
xor
jb
jp
lds
cltd
and
mov
repz
xorl
into
dec
adc
push
mov
inc
popf
mov
mov
push
jb
sub
test
dec
out
pop
jecxz
fs
pop
les
adc
push
outsb
adc
mov
mov
movb
fs
push
xor
scas
inc
bound
inc
repnz
mov
mov
or
xchg
jno
lock
rorl
cmp
in
inc
jmp
shll
out
or
or
fcomi
xchg
in
mov
xchg
in
mov
lahf
les
stos
outsl
iret
test
add
sub
cmp
jmp
dec
icebp
loop,pt
lea
push
inc
hlt
test
sub
dec
pop
mov
fadds
movsl
out
mov
scas
data16
cmpsb
fists
mov
loope
inc
loope
mov
adc
push
dec
and
dec
or
test
enter
jg
push
sub
xchg
inc
mov
xor
ds
out
inc
mov
int3
addr16
mov
mov
enter
mov
aas
test
dec
mov
push
inc
mov
cmc
dec
or
xchg
xor
stos
rorb
ja
mov
out
cmpl
incl
jno
mov
into
jbe
or
inc
jle
cwtl
and
cld
mov
mov
mov
out
sarl
mov
daa
negl
mov
fiaddl
mov
jns
or
fisttps
add
dec
or
cwtl
cwtl
mov
jmp
lahf
dec
push
stos
fadds
movsl
out
mov
or
mov
outsl
push
push
add
mov
adc
ja
out
cs
js
dec
sbb
movsl
aad
loopne
xor
test
sub
jmp
mov
inc
testl
mov
imul
cmp
loope
xchg
and
mov
or
leave
jnp
xor
and
mov
lcall
and
in
das
and
jp
push
dec
add
mov
jge
cwtl
mov
adc
xor
cmp
sub
ss
jecxz
and
adc
xchg
pop
jae
add
xchg
out
lea
mov
xor
mov
insb
add
inc
xchg
hlt
mov
enter
push
out
addr16
call
addr16
lea
fiadds
push
jmp
push
pop
mov
adc
or
out
mov
incb
sti
cmp
xor
subb
out
js
jl
push
sbb
xchg
mov
lock
pop
sub
daa
outsb
test
push
pop
sbb
les
push
cmp
sbb
add
jbe
dec
xchg
cld
add
ss
xor
pop
mov
mov
dec
xchg
sub
psrlq
jl
jb
ljmp
mov
adc
emms
pop
mov
lret
mov
stc
loopne
mov
push
dec
les
add
inc
mov
add
adc
ja
push
jo,pt
in
dec
sbb
movsl
stos
pop
xor
mov
and
and
push
inc
lds
aaa
movsb
mov
and
mov
fs
subl
push
jb
jp
lds
jmp
loope
test
jne
inc
cmova
inc
dec
outsb
sub
out
dec
xor
repnz
scas
xchg
scas
loope
daa
popa
xchg
xchg
jg
dec
push
test
bound
aas
dec
mov
push
inc
mov
cmp
enter
jg
fadds
mov
loope
fwait
aam
sbb
dec
adc
xchg
int3
sub
or
xor
movsb
xor
push
mov
adc
inc
mov
jbe
sahf
or
and
sub
sub
or
mov
lcall
out
lods
pop
fs
cmp
cs
in
nop
data16
xchg
dec
xor
inc
bound
mov
pusha
push
ja
nop
and
inc
dec
cltd
pop
jl
faddl
xchg
and
mov
popl
test
xor
aaa
cmpl
lcall
mov
imul
xor
xor
dec
add
cwtl
adc
mov
and
xchg
xchg
mov
pop
inc
dec
xchg
or
and
dec
clc
test
je
fisubl
cmp
inc
call
push
jecxz
mov
fpatan
cli
push
jo
and
sub
out
xchg
sub
insl
mov
mov
in
jge
mov
inc
in
and
movsb
pop
ftst
cmp
mov
int3
push
mov
adc
inc
fwait
pop
cli
xchg
mul
or
aas
mov
xor
sbb
sbbl
or
repnz
jp
lds
enter
or
lds
loope
fiaddl
out
daa
lods
test
cmp
pop
or
mov
insb
push
mov
imul
fnstcw
push
or
push
rolb
loop
push
sti
out
mov
or
into
call
imul
test
clc
pop
fidivs
andl
dec
loopne
ret
sbb
out
xor
icebp
jns
adc
mov
loope
ja
icebp
xchg
sbb
sub
xor
out
inc
jle
ficoms
sbb
push
inc
es
data16
cmpsl
imul
ss
cmp
rcl
sub
fnstenv
push
push
sbbb
das
xor
dec
cmpsl
xchg
fisubrl
pop
add
in
nop
stos
cmovge
enter
pop
fstpl
or
ja
bound
push
in
lea
dec
cmp
xor
addr16
lods
rcrl
pop
inc
mov
mov
jno
sbb
adc
mov
mov
inc
pop
sbb
ffreep
stos
push
xor
push
mov
imul
mov
loopne
ljmp
aam
push
je
push
subl
jl
push
mov
jg
inc
mov
jne
xor
xchg
loope
mov
stos
ucomiss
ljmp
mov
in
add
pop
nop
mov
cmpsl
push
popf
push
or
push
mov
roll
int3
insl
sahf
mov
push
imul
xor
sub
notl
mov
aad
mov
push
mov
jno
dec
xchg
inc
mov
or
out
sub
jl
inc
pop
hlt
test
mov
cmp
push
jne
inc
mov
sbb
sub
in
loop
adc
sub
mov
push
aad
pushf
aam
or
or
pop
jle
in
mov
push
xchg
xchg
inc
div
mov
movsl
inc
cmp
xchg
fs
mov
jns
lret
mov
push
and
in
leave
pop
inc
mov
ds
sub
addr16
arpl
mov
inc
pop
adc
aad
mov
loope
xchg
and
mov
cld
cmp
mov
and
or
lock
mov
mov
dec
gs
push
fadds
cmpsl
out
mov
leave
mov
mov
fs
dec
mov
adc
or
movsl
imul
rolb
ret
jnp
push
sbb
jne
pop
sub
push
sbb
add
mov
insl
dec
inc
adc
loope
or
pop
cmp
aaa
movsb
push
xor
adc
xor
lahf
mov
sbb
sub
movsl
inc
push
insl
dec
and
test
movsb
aad
jle
push
imul
jne
push
rolb
fadds
insb
push
push
fwait
sub
push
dec
mov
jp
cmp
je
add
pop
push
cmp
sub
aam
pop
cmp
sub
in
pop
pop
mov
mov
adc
insb
cwtl
pop
repz
sub
sbb
les
int3
pop
push
pop
jle
aas
adc
out
mov
or
scas
inc
bound
aaa
xorl
pop
pop
clc
and
push
call
pop
daa
sbb
mov
out
iret
ret
fucomip
in
in
jne
push
sub
testb
xchg
push
mov
xchg
mov
shrl
adc
dec
or
leave
mov
inc
cmp
push
push
das
arpl
mov
cltd
mov
addb
sub
loopne
pop
into
es
cmpb
enter
xor
jo
inc
repnz
ds
mov
icebp
cmp
pop
imul
add
loope
ret
addl
xchg
xor
mov
push
cltd
das
push
sub
ss
es
jle
into
es
mov
lea
mov
es
fwait
movsl
fimuls
sbb
lcallw
out
pop
lock
addb
or
js
or
lret
push
les
jns
incl
sub
push
pop
stos
mov
test
mov
mov
or
mov
mov
mov
call
mul
push
fiaddl
iret
dec
out
cmp
pop
movsl
sub
xchg
ror
sub
testl
daa
das
insb
adc
mov
jg
lea
lds
mov
and
jae
xchg
jb
pusha
add
enter
shll
add
xchg
cld
mov
movsb
in
push
daa
lea
int
jo
dec
or
push
mov
packuswb
xor
jg
mov
data16
dec
hlt
xchg
gs
mov
clc
add
nop
shrb
xor
pop
cwtl
pop
jle
into
sub
fsts
ret
push
dec
outsl
test
mov
repz
pop
and
les
leave
mov
sbb
push
loop
int3
xor
loope
inc
inc
mov
pop
addr16
push
jns
xchg
mul
xor
lds
sub
inc
sub
fcmovnb
loop
hlt
sub
or
repz
cmpsb
or
lock
andl
or
mov
nop
sub
ss
aam
sbb
cmp
dec
adc
sbb
sahf
cmp
jp
lds
and
mov
pop
push
and
and
push
out
fidivrs
into
pop
loopne
dec
imul
xor
push
mov
sbb
or
mov
