jmp
pop
pop
pop
jmp
pop
pop
push
push
pop
pop
pusha
pop
push
pop
push
pusha
pop
push
push
pop
pop
push
pop
push
push
pop
pop
pop
push
push
pop
pop
push
push
pop
push
push
push
push
pop
pop
push
push
pop
push
push
pop
push
push
push
push
pop
push
pop
push
push
pusha
pop
push
pop
jmp
push
pop
pop
pop
push
pop
pusha
pop
pop
push
pop
pop
push
pusha
pusha
pop
push
jmp
pop
pop
pop
jmp
push
pop
pop
pusha
push
pop
pop
push
pop
push
push
pop
push
push
push
push
push
push
pusha
pop
push
push
push
pop
pop
pop
push
pop
pop
push
push
push
pop
pop
push
pop
push
push
pop
push
push
pop
pop
pop
push
push
pop
push
pop
pop
push
push
push
push
pusha
jmp
push
push
pop
push
push
pop
pop
pop
push
push
push
push
pop
push
push
pusha
push
pop
push
pop
pop
mov
push
mov
jmp
push
push
pusha
jmp
pop
push
push
pusha
push
pop
pop
pop
pop
push
push
pop
push
push
pop
push
pop
push
pop
pop
pop
pusha
pop
pop
pop
pop
pop
pop
pop
push
push
pop
push
push
push
pop
pop
push
push
push
push
pop
push
pop
pop
push
pop
pop
pop
push
pop
pop
push
push
jmp
push
push
jmp
push
pop
push
push
push
pop
pusha
push
pusha
pop
pusha
pop
pop
jmp
pop
pop
pop
push
pusha
pop
push
pop
push
pop
pop
push
pop
pop
push
push
push
pop
push
push
push
pop
push
pop
pop
push
pusha
push
pop
pop
pusha
push
pop
push
pusha
pop
push
push
push
pop
push
push
push
pop
pop
pop
jmp
pop
push
push
jmp
pusha
pop
pop
pop
push
push
pop
pop
pusha
pop
pop
push
push
pop
push
push
pusha
push
push
pop
pop
pop
pop
push
push
push
pop
push
push
pop
pop
push
push
pop
push
push
push
push
pop
push
push
pop
push
pusha
pusha
push
push
pop
push
pop
push
pop
jmp
push
pop
pusha
pop
push
push
jmp
pusha
pop
push
pusha
push
pop
jmp
push
pop
push
jmp
pop
push
push
pusha
pop
push
pop
push
pop
pop
push
pop
push
pop
pop
pop
push
push
push
pop
pop
pop
push
pop
push
push
pusha
pop
pop
pusha
pop
pop
pusha
pop
pop
push
pop
push
push
pop
pop
push
push
pop
push
pop
push
push
jmp
push
pop
push
pop
pop
pop
pop
pop
pop
pop
push
pop
push
pusha
push
jmp
push
push
push
jmp
push
push
push
push
push
pop
push
pop
push
pop
pop
pop
pop
pop
pusha
pop
pop
push
pop
push
pusha
pop
pop
push
pop
push
pop
push
push
pop
push
pop
pop
pop
push
push
pop
pop
pop
pop
pop
pop
push
push
pop
pop
pop
pop
pop
push
pop
push
pop
push
pop
jmp
pop
pop
push
push
pop
pop
pop
push
pop
pop
push
pop
pop
pusha
pop
push
push
pop
xor
jmp
push
pop
pop
jmp
pop
pop
push
pop
pop
push
pop
pop
pop
pop
pop
pop
pop
push
pop
push
pop
push
pop
push
push
push
push
pop
pop
pop
push
pusha
pop
push
pop
pop
pop
push
push
pop
pop
pop
push
push
pop
pop
pop
pop
pop
pop
push
pop
push
pop
pop
pop
pusha
pop
pop
pop
pop
push
push
jmp
push
pop
push
push
pop
push
pop
pop
pop
pop
push
push
push
push
pop
pop
push
push
pop
pop
pop
mov
jmp
push
push
push
push
push
push
jmp
push
push
push
pop
push
pop
push
pop
push
push
pop
push
push
push
push
pop
pop
pop
pusha
push
push
push
pop
push
push
push
pusha
pop
pop
push
pop
push
push
pop
pop
push
push
pop
push
push
push
pop
push
push
pop
push
push
pop
push
push
pop
pop
push
pop
pop
jmp
pop
pop
jmp
push
pop
pop
pop
push
push
pop
push
pop
pusha
pop
pop
push
pop
pop
pop
push
jmp
pop
push
push
pop
pop
pop
pop
push
push
pop
push
push
pop
push
push
push
pusha
pop
pop
push
pop
cmp
je
jmp
push
pop
pop
jmp
pop
pop
pop
pop
pop
push
push
pop
push
push
pop
push
pop
pop
push
push
pop
push
push
push
pop
pop
pop
push
pop
pop
push
push
pop
push
pop
pop
push
push
push
push
pop
pop
push
push
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
pop
push
pop
pop
jmp
jmp
pop
pop
pop
pop
push
pop
pusha
push
pop
push
pop
pop
pop
pusha
push
pop
pusha
pop
jmp
pop
pop
pop
pop
push
push
pop
jmp
push
pop
push
pop
pop
pop
push
pop
pop
push
push
pusha
pop
push
push
push
push
pop
pop
pop
push
push
pop
pop
push
pop
pop
pusha
jmp
push
push
pop
pop
push
push
push
push
pop
pop
push
pop
push
pop
pop
pusha
pop
pop
push
push
pop
pop
push
pop
push
pop
push
pop
push
mov
jmp
pop
pop
pop
jmp
push
pop
push
push
push
push
push
pusha
push
push
push
pop
pop
push
pusha
push
push
pop
pop
push
push
push
pop
pop
push
push
push
pop
push
push
pop
push
push
push
push
push
pop
push
push
pusha
push
pop
pop
push
push
push
pop
push
push
pusha
push
pop
pop
push
push
pop
pop
push
pop
jmp
jmp
push
pop
push
pop
pop
pop
push
push
pop
pop
pop
push
pop
push
pop
push
pop
pop
pop
pop
push
jmp
push
push
pop
pop
jmp
pop
push
pop
push
push
push
pop
push
push
pop
push
push
push
push
push
pop
push
push
push
push
pop
push
push
push
push
pop
pop
push
pusha
pop
pop
jmp
push
push
pop
push
pop
pop
push
pop
pop
push
pop
pop
pop
pop
pop
push
push
pop
pop
pop
push
push
push
push
pop
push
push
mov
jmp
jp
mov
inc
das
mov
pop
jmp
pop
orb
stc
inc
sub
dec
dec
sbb
and
pop
jmp
push
pop
pop
jmp
pop
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
push
pop
push
pop
pop
push
push
pop
pop
push
pop
push
pop
pop
pop
push
pop
pusha
pop
pop
pop
pop
push
pop
push
pop
push
push
push
pop
pop
push
push
push
pop
pop
pusha
pop
pusha
push
push
push
push
pop
pusha
jmp
push
push
pop
push
pop
pop
jmp
push
pop
push
pop
pusha
push
pop
push
push
push
pop
push
push
jmp
push
pop
push
pop
pop
pop
pop
pop
push
push
pusha
push
pop
push
pop
push
pop
pop
push
pusha
pop
pop
jmp
push
push
pop
jmp
push
pop
pop
push
pop
pop
push
pop
pop
push
pop
push
push
pop
pop
push
pusha
pop
pop
push
pop
push
push
pop
push
pop
push
push
push
push
push
pop
pop
pusha
push
pop
push
pop
push
push
push
pusha
push
pop
push
push
pop
push
push
push
pusha
pop
pop
pop
push
pop
push
jmp
pop
pop
pop
push
pop
push
pop
pop
push
push
push
pop
push
push
pop
pop
pop
push
push
push
push
jmp
or
hlt
out
scas
ds
push
xor
add
add
mov
repnz
xchg
add
xor
pop
jmp
push
push
pop
jmp
pop
pop
push
pop
push
pop
push
pop
pop
push
pop
pop
push
pop
push
pop
push
pop
pop
pop
push
push
pop
pop
push
pusha
push
pop
push
push
push
push
pop
push
push
pop
pusha
push
push
pusha
push
push
pop
push
push
push
pop
pop
pusha
pop
pop
pop
push
pop
pop
push
pop
pop
jmp
push
pop
push
push
pusha
pop
jmp
pusha
pop
push
push
pop
push
push
pop
push
push
push
pop
jmp
pop
push
pusha
push
push
pop
push
push
push
pop
push
pop
push
pop
push
push
pop
push
pop
pop
push
push
pop
push
pop
pop
push
push
push
pop
push
push
pop
push
pop
pop
pop
pop
push
push
push
pop
pop
pop
push
pop
jmp
pop
push
pop
jmp
push
push
push
pop
pop
pop
pop
pop
pop
push
push
pop
pop
push
pop
push
pop
push
pop
push
push
push
pop
push
push
push
pop
pop
pop
push
pop
push
push
push
push
push
pusha
pop
push
pop
pop
pop
pop
push
push
pop
pop
pop
pop
push
push
pusha
push
pop
push
pop
pop
pop
pop
jmp
push
pop
push
pop
pop
pop
jmp
push
pop
push
pop
pop
push
pop
pop
push
push
push
pop
pop
jmp
push
pop
pop
pop
push
push
push
push
push
push
pusha
pop
pop
pusha
push
push
push
push
push
pop
push
push
pop
push
pop
pop
pop
push
pop
push
pop
push
pop
push
pop
push
push
push
push
pusha
push
pop
pop
pusha
pop
jmp
jmp
pop
pop
push
jmp
push
pop
pusha
pop
push
pop
pop
pop
pop
push
push
push
push
push
pop
pop
push
push
push
pop
jmp
push
pop
pop
push
push
jmp
pop
push
push
push
pop
push
pop
pop
pop
push
pusha
push
push
push
pop
push
pop
pop
pop
push
pusha
push
push
push
pop
push
pop
push
pop
push
jmp
push
pop
pop
jmp
pop
push
pop
pop
push
push
push
pop
pop
pop
pop
push
push
pop
push
pop
push
push
pop
pop
push
pusha
push
pop
jmp
pop
push
pop
pop
push
push
push
pop
pop
pop
pop
push
push
push
push
pop
pop
push
pop
pop
pop
pop
push
push
pop
pop
pusha
pop
push
pop
pop
push
pop
push
push
push
push
cmp
jne
jmp
pop
push
pop
push
pop
pop
pop
pop
push
pop
pop
push
pop
push
push
push
push
pop
push
pop
push
push
push
push
pop
push
pop
jmp
push
pop
pop
pop
push
pop
push
pop
pop
push
push
pop
push
push
pop
pop
pop
push
pop
pop
push
pop
push
pusha
push
push
push
push
pop
pop
pop
jmp
push
push
pop
push
push
pop
pop
push
pop
push
pop
pusha
pop
push
push
pop
pop
push
push
push
push
pop
push
push
pop
pop
pop
push
pop
mov
jmp
pusha
pop
pop
jmp
pop
pop
pusha
push
pop
push
push
pop
pop
push
pop
pop
push
pop
pusha
push
pop
pop
push
pop
pop
push
push
push
pop
push
push
pop
pop
push
pop
pop
push
push
push
pop
push
pop
pop
push
push
pop
push
pop
pop
pop
push
push
pusha
pop
pusha
push
push
pop
jmp
pusha
push
push
pop
pop
pop
pop
push
pop
pop
pop
pop
push
pop
pusha
push
pop
push
xchg
jmp
push
push
push
pop
push
pop
pop
pop
push
pop
push
pop
pop
push
pop
pop
push
push
pop
pop
pop
pusha
pop
pop
pop
pop
push
push
pop
pop
push
push
push
pop
pop
push
push
push
pop
pop
push
push
pop
push
push
pusha
push
push
pop
pusha
pusha
jmp
push
push
pop
push
pop
pop
pop
push
pop
pop
jmp
push
push
push
pop
pop
push
push
push
push
pop
pop
push
push
push
push
jmp
pop
push
push
pusha
pop
push
push
pop
push
pop
pop
pop
jmp
pop
pop
push
pop
pop
push
pop
pop
push
pop
push
pop
push
push
push
pop
pop
pop
pop
pop
pop
push
push
push
pop
push
push
push
push
push
pop
push
pusha
pop
pusha
pop
push
push
push
pusha
push
pusha
push
push
pop
sub
jmp
push
pusha
pop
jmp
pop
push
push
push
pop
pop
pop
pop
pop
push
pop
pop
push
pop
pop
push
pop
pop
pop
pop
push
push
push
pop
push
pop
pop
push
push
pop
pop
pusha
pop
pop
push
push
push
push
pusha
pop
push
pop
pop
jmp
pop
push
pop
pusha
pop
pop
push
push
push
push
pop
pop
pop
push
pop
pop
push
push
xchg
jmp
pop
pop
push
push
pop
push
pop
pop
pop
pop
pop
jmp
pusha
pop
pop
push
pop
pop
push
pop
pop
push
push
pop
push
push
push
push
pop
pop
pop
pop
pop
pop
push
pop
pusha
push
push
push
pop
pop
push
push
pop
push
pop
pop
pop
pop
pusha
pop
pop
pop
pusha
push
pop
push
push
jmp
push
push
jmp
push
pop
pop
push
pop
push
pop
push
pop
push
pop
jmp
pop
push
pop
pop
pop
push
jmp
pop
push
push
pop
pusha
pop
push
pusha
push
pop
push
pop
push
push
pop
pop
pop
push
push
push
push
push
push
pop
push
push
push
push
push
pop
pop
push
pop
push
push
pop
pop
jmp
pop
pop
push
pop
pop
push
push
pop
push
pop
pop
push
push
push
pop
push
push
push
pop
push
pop
add
jmp
pop
push
push
jmp
pusha
pop
push
push
pop
push
push
push
push
pop
push
pusha
pop
push
pop
push
pop
pop
pop
pop
pusha
pop
pop
push
pop
pop
pop
pop
push
pop
push
pop
pop
push
push
pop
push
pop
push
push
pusha
push
push
push
push
pop
pop
pop
push
push
push
pop
jmp
push
push
push
pop
push
push
pusha
push
pop
push
push
pop
push
pop
pop
pop
pop
push
add
jmp
pop
pop
push
jmp
pop
push
pop
pop
pop
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
pop
pop
push
pop
pop
pop
push
pop
pop
pop
pop
push
pop
push
push
push
pop
push
pop
push
push
pop
push
pop
push
push
pop
pop
push
pop
push
pop
push
pop
pop
push
push
pop
jmp
push
push
pop
pop
pop
pusha
pop
push
jmp
pop
push
pop
pop
pop
push
pop
pop
pop
pop
push
push
push
jmp
pop
push
push
push
pop
pop
pusha
push
pop
push
push
pop
pop
pop
pop
pop
push
push
push
pop
push
pop
pop
pop
pop
push
push
pusha
push
pop
pop
pusha
push
pop
push
push
push
pop
pop
pop
pop
push
push
pop
pop
dec
jne
jmp
pusha
push
pop
jmp
pop
push
pop
pop
push
pop
push
pop
push
push
pop
pop
push
pusha
push
pop
pusha
push
push
pop
push
push
pop
pop
pop
pop
push
push
pop
push
push
push
pop
push
pusha
pop
pop
push
pop
push
push
pop
push
pop
push
pop
pop
pop
pop
push
push
pop
jmp
push
pop
push
push
pop
push
pop
push
push
pop
pop
push
pop
pop
pop
pop
push
pop
ret
jmp
pop
push
push
jmp
push
pop
pop
pop
pop
pusha
pop
push
pop
push
pop
pop
pusha
pop
push
pop
pusha
push
push
push
push
pop
pop
push
pusha
pusha
push
pop
pop
push
pop
push
push
push
pop
push
pop
pop
push
push
push
pop
push
pop
pop
pop
pop
pop
push
pop
push
pusha
push
jmp
jmp
pop
push
pop
pop
push
pop
pop
pop
pop
pusha
pop
pop
pop
pop
push
jmp
pop
push
pop
push
pop
push
pusha
push
push
pop
pop
pop
pop
pop
push
push
push
push
pop
pop
pop
pop
push
push
pop
pop
pop
pop
push
add
jmp
pop
pop
pop
jmp
push
pop
pop
push
push
pop
push
push
push
push
push
pop
push
push
pop
pop
push
pop
push
push
push
pop
jmp
push
push
jmp
pop
pop
pop
push
pop
push
push
pop
push
push
pop
pusha
push
pop
pop
pop
push
pusha
push
pop
pop
pop
pop
pop
pop
pop
pop
push
push
pop
push
push
jmp
push
pop
push
push
pusha
pusha
push
push
push
push
push
push
pop
push
pop
push
push
push
pop
push
push
push
push
push
pop
push
pop
jmp
push
push
pop
jmp
push
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
push
pop
pop
push
push
pop
push
push
pop
push
pusha
pop
push
push
push
pop
push
push
pop
pop
push
push
push
pusha
pop
pop
pop
pop
push
push
push
push
pop
push
pop
push
pop
jmp
push
pop
jmp
pop
pop
push
push
push
pop
push
push
push
push
push
pop
pop
pop
push
pop
push
jmp
pop
push
push
push
pop
push
pop
pop
pop
push
pop
push
push
pop
push
push
push
pusha
push
pop
push
push
push
push
pop
push
push
pusha
pop
push
push
pusha
pop
push
pop
pop
pop
pop
push
mov
jmp
pusha
push
push
jmp
push
pop
push
push
push
pop
pop
pop
push
push
push
push
push
push
pop
push
push
pusha
push
push
push
pop
pop
push
pop
push
pop
push
push
push
pop
pusha
push
push
pop
push
pop
push
pop
push
pop
push
push
push
push
pop
pop
push
push
pop
push
pusha
push
pop
push
push
pop
push
jmp
push
pop
push
push
pop
pop
pop
jmp
push
push
pop
push
push
push
pop
pop
push
push
pop
pop
jmp
pop
push
pop
push
pop
push
push
push
pop
pop
push
pop
pop
pop
pop
pop
pop
pop
pop
push
pop
push
pop
pusha
push
push
pop
pop
pop
ret
jmp
pop
push
pop
push
push
push
pop
pusha
pop
push
pop
push
pop
pop
push
pop
push
push
push
pop
push
push
push
pusha
pusha
pop
push
pop
push
pusha
pop
pop
pop
pop
pop
jmp
push
push
push
pop
push
pop
push
pop
pop
pop
pop
push
pop
push
push
push
pop
pop
pop
push
pop
push
pop
push
pop
pop
pop
jmp
push
pop
pop
pop
push
pop
jmp
push
push
push
pusha
push
pop
push
pop
pop
pop
jmp
pop
push
push
pop
pop
pop
push
push
push
pop
push
push
push
push
push
push
pop
push
push
push
push
push
push
push
pop
push
push
push
push
pop
push
pusha
push
push
pusha
pop
push
pop
pop
jmp
push
pop
push
push
jmp
pop
pop
pop
pop
push
pop
push
pop
push
pop
push
push
pop
push
push
push
pop
pusha
push
push
push
pop
push
push
pop
pop
pop
pop
pop
pop
pop
pusha
push
push
pop
push
push
push
push
push
pop
push
push
pop
pop
pop
push
push
pop
push
pusha
push
pop
push
mov
sub
sub
jmp
loopne
lock
and
xor
mov
mov
mov
or
xor
rol
and
xor
or
add
or
or
and
xor
sub
add
or
and
dec
jne
mov
mov
pop
mov
jmp
xchg
jp
popf
out
and
jmp
cmp
cld
or
adc
or
jmp
fmull
or
fidivrs
pop
dec
jp
mov
les
add
xor
leave
ret
push
mov
sub
push
push
jmp
in
adc
add
or
xor
mov
mov
mov
or
or
sub
and
xor
ror
add
dec
jne
mov
mov
mov
jmp
xor
lea
or
add
and
or
notb
cmc
enter
push
fldl
inc
loopne
ret
push
mov
sub
push
push
xor
mov
mov
mov
or
or
sub
add
sub
sub
and
push
jmp
dec
fxam
hlt
xchg
dec
sbb
test
movsb
push
jmp
dec
imul
jg
sbb
push
sbbb
add
add
and
or
add
add
push
sub
inc
jecxz
add
sub
and
dec
jne
mov
mov
pop
push
jmp
mov
xor
adc
add
fisubl
pop
cmpsl
mov
mov
add
add
pop
icebp
add
add
add
dec
cld
leave
ret
push
mov
sub
push
push
jmp
push
add
or
xor
mov
mov
mov
or
or
rol
and
add
and
sub
or
add
lea
or
dec
jne
mov
mov
pop
mov
jmp
loop
nop
mov
or
jmp
inc
inc
pop
push
aaa
sbb
jb
test
clc
leave
ret
call
out
adc
mov
push
dec
jl
pop
test
push
cs
pop
dec
add
pop
cmpl
rclb
test
jb
fwait
xchg
sbb
pop
mov
sub
lea
movsl
sub
sub
add
mov
add
sub
jno
ret
add
sub
jno
xor
js
scas
aam
aaa
sbb
mov
popa
dec
sahf
mov
lock
mov
hlt
adc
arpl
cs
arpl
popf
and
mov
and
mov
ljmp
add
pop
mov
imul
cmp
pop
cs
push
out
cmp
adc
sub
cli
std
sub
xchg
repz
sbb
mov
push
ss
sub
mov
dec
pop
lods
push
mov
inc
xchg
inc
sti
dec
cmp
or
sub
mov
mov
sub
inc
mov
mov
fstpl
xor
cmpsb
rclb
jo
cmp
loop
int3
jle
inc
add
in
pop
mov
push
cld
test
or
xor
sub
notl
enter
ss
xor
cli
sbb
cmp
imulb
mov
jae
divl
jbe
adc
pop
sbb
mov
test
cmp
push
push
xor
sbb
sub
repz
or
xor
xorb
sbb
sbb
sub
sub
pop
push
subb
and
leave
out
icebp
sub
das
lcall
jle
repz
fidivl
sub
mov
sbb
jge
in
nop
mov
xor
mul
lods
jne
clc
push
cmc
mov
shl
rcrl
xchg
fadds
mov
inc
xchg
push
mov
sub
ss
cmp
ret
xor
pop
xor
xor
mov
aad
sub
jbe
pop
call
pop
push
xor
dec
inc
cmp
fsubrl
adc
ljmp
pop
insb
inc
sub
les
cmp
call
ror
lret
pop
lock
js
sbb
inc
cs
shll
jne
punpckhbw
ljmp
xchg
mov
push
enter
cmp
out
mov
aas
ss
pop
in
jg
icebp
rcll
sub
xchg
test
adc
add
xor
int
pusha
out
aam
mov
sub
inc
movsl
mov
jge
dec
mov
mov
pop
xor
cmp
sub
insb
pop
loop
sub
xor
jmp
sbb
add
sub
mov
push
sbb
sbb
xchg
loopne
sub
mov
push
xor
mov
xchg
fildll
incb
and
pop
rcr
sub
pop
cwtl
pop
pop
sbb
fists
or
push
push
lcall
xchg
mov
xor
clc
je
sub
in
mov
jns
in
sub
xor
in
in
aas
scas
sbb
int3
in
sub
mov
imul
gs
mov
sub
repz
aaa
test
icebp
pop
xchg
std
sub
pop
inc
fidivrs
scas
in
repz
push
repz
pushf
jg
aam
movsb
stos
xor
push
xor
sub
in
add
fstl
sub
add
mov
jl
repz
shlb
mov
fmuls
arpl
sub
ljmp
sub
fucomi
xchg
shll
sub
lcall
or
cmp
aaa
addr16
fldenv
lods
inc
and
sub
dec
push
test
push
data16
sub
cwtl
in
inc
jae
mov
aam
sarb
xor
adc
jg
mov
into
cmp
push
hlt
push
in
add
out
push
mov
push
push
xchg
push
push
mov
pop
test
clc
push
mov
outsl
sti
cmovb
adc
int3
sub
or
mov
pop
push
int3
sub
mov
out
xor
xor
imul
push
mov
lds
outsb
outsl
cmpl
mov
fwait
dec
mov
sbb
push
sub
jo
or
cmp
jle
push
repz
cmp
sub
insl
out
push
outsb
cmp
mov
mov
mov
ss
jnp
in
lods
cmp
inc
push
sahf
xor
rcrb
sbb
sub
mov
aam
adc
and
cmp
sarb
loopne
mov
mov
jae
sub
cmpsb
fists
out
jecxz
mov
and
xchg
scas
xchg
cmp
sub
sub
ljmp
lods
mov
shrl
insl
fldt
mov
gs
jle
adc
push
fwait
sbb
aad
scas
in
mov
xor
ss
lahf
add
lcall
jbe
out
cmp
fdivp
gs
xchg
cmp
sub
jg
sub
mov
xor
cmp
loopne
jg
mov
cmpsl
das
out
cmpsl
xor
in
mov
mov
and
fs
push
xor
mov
sub
inc
or
dec
stc
mov
and
cli
sbb
dec
sub
cmp
xor
push
movsl
pop
jg
mov
cmp
shrb
mov
mov
push
pusha
testl
mov
ja
mov
jp
xlat
dec
sbb
mov
mov
out
pop
mov
ret
sub
or
mov
mov
cmpsl
aas
cli
sbb
ss
les
push
ss
out
movsl
mov
and
notb
call
icebp
fisttpll
jb
jl
xor
les
mov
jecxz
xor
lods
mov
shrl
dec
sbb
int
test
mov
mov
cmp
decb
aad
or
aaa
mov
mov
push
scas
aaa
lret
sub
aas
push
pop
dec
mov
lret
scas
sub
sub
out
xchg
xor
lret
lods
sub
sub
lods
mov
cmp
aaa
or
cmp
mov
test
dec
adc
cmp
enter
mov
cmp
out
or
jp
cmp
xchg
ds
cmpsl
mov
add
add
sbbl
dec
test
add
movsl
mov
cmpb
pusha
sub
mov
cmpsb
add
ss
sub
push
cwtl
subl
sbb
push
pop
mov
mov
jle
mov
sub
mov
jl
or
aad
add
xor
xchg
test
cmp
movsb
sub
pop
push
xor
bound
sub
dec
ret
add
imul
test
mov
mov
lcall
cmp
daa
sub
sub
pop
cmp
mov
shlb
out
dec
inc
or
pop
xchg
sub
aam
in
sub
pop
sbb
sub
shlb
sub
jmp
repz
sub
and
movsl
jg
imul
mov
and
mov
ss
cltd
sub
sub
sub
mov
out
adc
push
and
loop
ss
sub
jecxz
pop
pop
fsubrl
pop
imull
lcall
xor
sub
jne
sub
sbb
daa
das
cmp
mov
sub
dec
xorb
mov
pushf
xor
cmpl
cmp
pop
sbb
loop
mov
xchg
mov
xor
test
push
cmp
fsts
xchg
sub
adc
adc
push
push
fwait
xchg
sub
sti
cmpsb
cmp
push
xor
sub
dec
bound
sub
pop
lret
sbb
lock
sbb
xchg
jg
inc
xchg
push
mov
xchg
mov
jp
sbb
cmp
push
add
pushf
imul
add
sbb
out
rcrb
test
rcrb
cmpsb
push
dec
lds
lcall
das
mov
stos
push
push
in
cmp
xor
adc
mov
inc
mov
sub
push
push
mov
in
sub
shrb
std
mov
cltd
addb
jne
sub
shlb
sbb
cmc
rcrb
shrb
mov
shlb
jb
xor
ret
mov
inc
sar
fprem
xchg
sarb
mov
or
inc
ror
lahf
pop
jns
stos
cwtl
push
cmp
xchg
jmp
pop
test
xchg
out
inc
insb
jle
sbb
mov
push
aad
in
xor
adc
jle
and
cmc
or
ficoms
aad
filds
xchg
push
pop
xlat
jg
push
mov
jnp
push
cmp
stc
mov
subb
outsl
sahf
mov
iret
pop
cwtl
stc
xchg
mov
cmpsb
xor
inc
xchg
push
mov
add
pop
jl
jecxz
hlt
xchg
repz
scas
mov
movsb
xor
push
sbb
sbb
pop
or
sbb
lret
nop
jg
sub
add
arpl
sbb
mov
xor
int
dec
je
push
xor
into
pusha
repnz
inc
outsb
test
adcl
adc
push
jo
jg
cmp
ja
nop
mov
mov
ret
and
mov
aas
lcall
imul
adc
jp
xchg
dec
mov
push
aad
test
sahf
and
and
xor
or
js
jae
and
xor
xchg
iret
in
movsl
movsb
xchg
sbb
aam
mov
cmp
out
jle
cmp
and
push
sbb
mov
xor
mov
mov
aas
jp
cmp
pop
test
test
cmp
pop
and
repz
jle
push
lds
fucom
test
sub
pop
xchg
xchg
pushf
jae
sub
add
scas
mov
pop
xor
mov
push
ror
test
roll
mov
pop
jno
insl
cmp
stos
push
lret
mov
xlat
mov
clc
jge
or
sbb
popf
movsl
jg
loop
push
inc
scas
cmp
dec
cs
pop
xor
cmp
push
xor
les
xor
xor
mov
sub
or
push
dec
insl
sub
xor
mov
dec
mov
mov
jle
les
sub
adc
sub
out
or
xchg
loope
mov
das
mov
jg
sbb
dec
xchg
xlat
out
jnp
cmpsl
pushf
or
scas
daa
or
inc
ficoml
xchg
jge
jno
insb
test
mov
push
movsl
inc
bound
xchg
scas
imul
mov
or
cwtl
pop
cltd
divb
test
ss
mov
sub
in
sub
sub
cmp
test
sbb
push
jge
jg
or
mov
fwait
xchg
imul
rolb
jns
push
xor
push
adc
cltd
imul
jmp
sub
data16
mov
sub
xchg
lret
xorb
xorb
dec
cmpsb
mov
and
xor
sub
subl
xor
jmp
lret
xor
dec
jg
mov
dec
mov
xor
sub
lret
out
scas
aaa
sub
in
jg
dec
clc
xchg
imul
mov
scas
scas
pop
add
adc
xor
and
imul
sti
lods
arpl
jns
lock
pop
sub
push
mov
mov
fstl
push
sarl
cli
pop
mov
or
dec
jno
xor
ss
cmp
xor
push
push
pop
sub
ret
and
cmp
mov
inc
call
and
push
sub
aaa
test
fisttpll
idivl
lock
xor
sub
fwait
xchg
push
repnz
adc
sub
xor
pop
mov
das
arpl
jle
and
dec
adc
sub
push
pop
push
sub
cmp
popa
sub
sub
inc
notl
jle
push
sub
mov
push
sub
mov
mov
push
bound
sub
mov
push
sub
push
dec
dec
sub
sub
and
inc
sub
lods
movsl
leave
add
push
shll
sub
fisttps
addb
push
jno
sub
sub
dec
sub
jge
pop
mov
sub
and
outsl
add
fnstenv
push
add
sub
pop
movsl
jge
adc
sbb
or
push
or
sbb
ss
xor
mov
jl
rcl
sbb
mov
into
shll
out
stos
pushf
out
clc
shrl
xchg
movsb
push
xor
adc
test
jmp
or
xor
push
rcll
sub
scas
push
cmovb
movsl
mov
rorl
cmp
push
lret
adc
mov
jge
lods
fbld
test
cmp
sub
fwait
mov
aad
push
xchg
inc
sub
push
outsb
inc
imul
sbb
and
in
nop
push
pop
inc
sub
test
loopne
je
inc
movsb
adc
cmp
testl
in
dec
cmp
cmp
push
sub
xor
mov
mov
je
or
mov
dec
push
lret
or
mov
mov
inc
jge
cli
cmc
out
ljmp
sub
or
sub
inc
dec
scas
cmp
cmp
loope
mov
and
xor
cwtl
push
xor
dec
into
cmp
mov
jle
sbb
dec
mov
mov
nop
jae
mov
imul
cmp
cmp
mov
mov
sbb
jge
lret
mov
xor
mov
mov
aas
fistpll
xor
jo
mov
pop
cmp
shl
sub
mov
inc
loopne
xchg
cmp
subb
push
neg
xor
cmp
popf
adc
sbb
int3
mov
fs
sub
mov
mov
enterw
adc
xchg
sbb
fiadds
cmpsb
push
xor
dec
enter
gs
dec
std
cmp
aaa
jns
sbb
daa
shlb
inc
hlt
mov
das
int3
sbb
cmpb
mov
outsl
sub
push
nop
in
decb
and
sub
iret
add
mov
push
xor
insl
jge,pn
pop
mov
jmp
sub
test
mov
mov
adcl
mov
stc
out
inc
push
sub
push
inc
dec
cmp
scas
lret
pushf
das
pop
ret
and
mov
pop
sub
sub
stc
dec
xchg
mov
cmp
cwtl
imul
mov
pop
jne
xchg
sub
aaa
pop
jns
out
out
hlt
test
pop
in
xchg
dec
imul
push
in
insl
cmp
dec
ljmp
xor
cmp
pop
mov
xor
mov
sub
fnstcw
es
les
clc
cmpsb
subb
popf
jg
adc
sbb
mov
jne
out
shrb
sub
cmp
add
push
xor
es
pusha
cmpsl
xor
out
in
xor
and
cmp
cli
lods
addr16
xor
cmp
xchg
xor
jae
aas
xchg
cmc
push
cwtl
push
inc
and
cmp
xchg
lret
and
inc
lahf
mov
mov
mov
int3
push
scas
pop
lds
xor
and
jle
xorps
call
xor
add
out
pop
dec
add
inc
sbb
xor
cmp
fcomp
xor
jg
jmp
test
xchg
xor
pop
pop
cmp
push
int
mov
ret
das
sbbl
mov
sub
test
add
mov
sub
xchg
mov
cwtl
sub
sub
fiaddl
jbe
pop
je
stc
jbe
push
rorl
or
cli
adc
jle
mov
mov
mov
test
adc
mov
insl
adc
inc
push
shrl
subl
scas
iret
or
sbb
xor
sub
add
hlt
cmp
xchg
xor
and
aam
and
sub
sti
loopne
sbb
mov
jp
mov
adc
imul
adc
cmc
or
sub
dec
cmp
ficoms
xchg
push
and
push
daa
adc
insb
and
or
gs
scas
pop
leave
and
jg
add
lods
cmp
pop
sub
jno
add
out
in
aam
and
push
jge
arpl
scas
push
or
sub
or
leave
cmpsb
inc
lahf
xchg
or
popf
add
roll
push
and
and
push
dec
push
xor
cmpb
les
add
push
gs
mov
sbb
and
or
aaa
push
or
pusha
mov
dec
mov
mov
sub
js
outsb
jecxz
dec
mov
sub
into
dec
sub
xor
add
lcall
test
xchg
pop
fldz
out
cmp
sub
mov
imul
movsl
xor
dec
cmp
ljmp
js
sub
adc
in
cmp
fwait
xchg
bswap
sbb
mov
lret
cmp
inc
lds
sub
fldl
push
divl
insb
loop
adc
mov
sub
in
mov
pop
cmp
les
out
cmp
and
dec
sbb
jle
cmp
mov
jp
in
repz
mov
rclb
std
sub
jmp
and
adc
movsl
out
sbb
mov
mov
loopne
cmp
out
mov
popa
rorb
mov
jb
push
cmpsb
lcall
push
sar
sub
js
sub
jp
test
fdivl
jmp
mov
pop
and
adc
mov
cmpsb
push
inc
subb
mov
cmp
ret
xor
push
popa
ljmp
fcoml
and
cmp
test
push
or
mov
inc
cmp
cmc
sub
cmpb
leave
pop
hlt
sub
enter
lock
mov
mov
sbb
adc
notb
jmp
xchg
loopne
cmp
push
fldl
or
movl
dec
adc
mov
scas
pop
in
repnz
mov
jbe
sub
sbb
dec
fcompl
mov
sbb
mov
cmp
fists
pop
js
push
pop
scas
out
mov
in
dec
out
mov
cmp
loopne
mov
sbb
xlat
shrb
shr
out
jp
mov
insb
scas
testb
daa
and
mov
in
sub
and
adc
cmp
test
ja
scas
mov
push
sub
xor
out
mov
out
push
sbb
mov
jno
jb
into
pop
cmp
pop
loop
mov
outsb
mov
cs
sub
dec
repz
gs
mov
in
sub
sub
mov
lea
popa
push
cmp
leave
imull
js
popa
psrlw
sub
sbb
add
stos
xor
inc
jecxz
out
out
mov
lods
cmp
divb
out
mov
shl
test
sub
sub
mov
sbb
ss
push
mov
aaa
stos
rorb
jmp
sub
xchg
lds
inc
push
hlt
sub
cmp
bound
insb
dec
pop
xor
sub
push
sub
arpl
xor
fs
in
es
or
mov
cmp
leave
xor
jg
insb
clc
or
stos
iret
jecxz
icebp
xor
insl
and
jns
sub
push
xor
out
ljmp
and
mov
dec
lret
sub
jo
mov
das
adc
dec
mov
lods
in
mov
sub
sub
jo
mov
aad
sub
ss
adc
jnp
xchg
pop
xor
std
cmp
insl
int3
pop
mov
sub
mov
ds
jecxz
int3
push
dec
pop
xor
pop
icebp
xor
int
out
dec
flds
push
fldcw
ficoml
cmp
inc
cmp
sub
mov
clc
rcrl
xlat
sub
or
mov
sub
adc
stc
mov
loop
xchg
and
fidivrl
sbb
cmp
mov
lods
pusha
inc
sbb
aam
xor
fistl
xchg
dec
xor
icebp
xor
shrl
adc
cmpl
add
loopne
sub
ja
cmp
pop
or
imul
dec
and
mov
test
sub
sub
pop
stos
jae
stos
sub
sbb
mov
adc
movsl
adc
push
ds
stc
test
sub
mov
sub
iret
jmp
pop
mov
xchg
push
sub
mov
sub
idivl
and
adc
ljmp
push
sbb
fwait
insb
repnz
int
mov
jb
scas
stc
iret
sub
add
sbb
sbb
jl
nop
or
das
add
push
sub
jecxz
test
and
sub
add
leave
ret
add
pop
stc
mov
or
pop
pop
lret
add
jp
ret
sbb
add
sbb
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
sub
mov
inc
xlat
push
jae
nop
inc
lods
dec
std
ljmp
outsb
sbb
cmp
xchg
data16
push
roll
sahf
xor
add
mov
es
xor
out
jb
pop
or
mov
sub
jl
out
mov
fcompl
xor
bound
adc
sbb
test
subl
pop
int3
dec
mov
or
push
xchg
movb
jmp
xchg
ljmp
mov
out
addr16
fs
jl
xchg
pop
leave
mov
ds
cmp
jmp
pop
xchg
insl
jp
mov
mov
dec
mov
aad
hlt
or
jge
sbb
pop
mov
push
pop
outsb
daa
call
call
sti
dec
int3
push
mov
int3
popf
push
sub
or
addr16
and
aas
shlb
in
pop
cmpsl
aas
shlb
in
pop
pop
xchg
sar
cwtl
jno
cmp
gs
push
repnz
fistps
repnz
jmp
pop
jmp
xor
cwtl
push
add
mov
adc
int
fdivs
dec
mov
mov
dec
mov
mov
or
fdivs
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
loope
push
xchg
mov
mov
dec
mov
mov
dec
mov
sub
stos
test
in
adc
or
iret
push
mov
mov
mov
dec
mov
lds
cmp
pop
sub
adc
mov
mov
xchg
iret
push
mov
out
xor
mov
dec
mov
repnz
jmp
jl
shrb
lods
mov
stos
push
sbb
lods
out
mov
mov
dec
mov
pop
jb
rcr
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
pop
xlat
push
adc
xor
mov
sub
fwait
mov
sbb
gs
arpl
cmpsl
and
xchg
ret
adc
xor
lret
sbb
mov
pop
xchg
sbb
dec
pop
cmp
iret
arpl
ja
push
cmp
jp
ds
ds
ret
cmp
xlat
les
or
sub
pop
ljmp
sbb
testl
sahf
xchg
cmp
test
loopne
cmp
js
test
jbe
enter
into
jg
mov
inc
xor
sub
jno
mov
test
aaa
fisttpl
push
or
in
jmp
add
and
sti
dec
ljmp
mov
out
sbb
dec
fs
mov
int
or
mov
test
pop
mov
push
cmp
lret
inc
push
mov
sub
mov
into
inc
jae
jle
inc
jge
mov
push
inc
inc
jns
les
xchg
notl
jmp
pop
fwait
insl
scas
dec
xchg
jae
lea
fildll
jl
jp
test
scas
jge
or
jmp
movb
dec
lret
mov
js
clc
pop
ljmp
movsl
loopne
repz
test
lahf
jo
mov
dec
inc
dec
jb
test
jmp
imul
cmp
jns
cmpsl
mulb
xor
lret
dec
insb
orl
mov
push
mov
adc
popa
dec
mov
fistpl
cmp
test
jmp
mov
mov
pop
clc
lods
dec
sbb
nop
fldt
mov
mov
jne
xchg
push
pop
sub
outsb
stos
mov
push
leave
pushf
mov
push
mov
jmp
js
call
cli
add
inc
mov
mov
arpl
cmp
dec
xchg
xchg
lods
lahf
test
aam
mov
aad
mov
stos
lods
test
and
fsubr
xor
push
test
push
inc
dec
fnstcw
jne
pop
jnp
popa
jecxz
xchg
inc
lret
xor
js
dec
xchg
or
jmp
xor
std
test
aas
add
xchg
xor
push
sub
shlb
inc
rorb
inc
xor
sub
dec
xchg
push
add
leave
dec
xchg
dec
int
loope
pop
loope
sti
or
inc
xorb
ds
cli
les
mov
or
aad
adc
setg
mov
dec
idivl
dec
dec
mov
or
in
add
pop
stos
push
cmp
lds
rcrl
dec
leave
lcall
aad
jle
cli
add
sub
mov
adc
sub
jg
loope
shr
cltd
ja
mov
push
adc
repnz
movsl
outsl
mov
xchg
push
ds
std
push
pop
pop
inc
mov
lahf
jno
les
sub
aas
cmp
js
or
int
fcomip
dec
add
bound
jg
mov
dec
or
imul
popf
cmp
outsl
sbb
xchg
xchg
pop
cwtl
fcmovnu
out
inc
mov
or
in
iret
sub
xchg
and
notl
cmp
fisttps
push
test
fbstp
outsl
jb
out
jne
std
mov
imul
sbb
lods
pop
js
cmpsb
add
cld
adc
mov
enter
call
dec
add
arpl
inc
ret
icebp
jo
mov
into
cmpsb
lea
sub
addr16
aas
ret
fdivrl
lds
cli
mov
inc
lcall
aaa
lods
jbe
sbb
cmp
testl
add
cmp
or
loope
lock
int3
xor
inc
sbb
leave
fwait
pop
pop
loop
ljmp
mov
dec
cli
jns
dec
xchg
mov
push
mov
adc
and
shlb
testl
test
inc
addr16
xchg
jne
lcall
mov
xchg
adc
add
imul
mov
in
ffreep
xchg
leave
pop
push
jle
jg
push
xor
jl
adcb
fucomip
enter
dec
out
push
xor
sub
push
sub
rclb
sub
test
test
cwtl
aas
push
loopne
out
mov
jb
xchg
xchg
push
cli
push
inc
xlat
jl
inc
dec
into
icebp
mov
ja
fcmovbe
jle,pn
lret
pop
sbb
loopne
jne
mov
xchg
sub
pop
pop
mov
add
jo
lahf
jl
pop
and
scas
pop
mov
mov
pop
fwait
push
addr16
cmp
enter
adc
nop
mov
sub
int3
mov
and
dec
sbb
push
es
add
ficoml
lret
aad
xchg
popa
and
hlt
push
inc
hlt
es
ret
loope
xor
dec
shrl
mov
pop
xchg
jg
gs
add
clc
das
notl
arpl
jns
add
adc
sbb
or
sbb
enter
lods
lock
ffreep
jb
loop
sub
add
filds
pop
xchg
dec
jns
imul
push
cmp
clc
mov
insl
push
lcall
mov
repnz
in
rcll
sub
lds
out
mov
mov
fwait
xchg
xchg
mov
scas
mov
enter
dec
outsb
stc
sti
push
outsl
lods
mov
push
xchg
fdivs
movsl
mov
stc
pop
xlat
loope
ss
jno
outsl
inc
pop
xlat
add
loop
loop
xchg
bound
fsubr
pop
nop
int
and
push
add
or
pop
sbb
jae
mov
pop
cld
sti
aam
and
add
orl
popa
fisttpll
mov
jns
sbb
push
jbe
push
bound
mov
movsl
jle
inc
popf
pop
jp
cmp
sub
out
das
imul
add
gs
and
xchg
dec
jl
loopne
int3
mov
mov
ret
push
ja
xchg
and
dec
shrl
jmp
or
movsb
sub
dec
pop
cmp
adc
mov
pop
or
fsubrs
js
push
inc
xor
ja
call
shl
movsl
push
sub
sar
rcll
aad
xchg
insl
add
aaa
lcall
adc
fwait
xchg
xor
add
lret
cs
or
movsb
xchg
in
imul
mov
and
js
pop
push
push
cmp
mov
jb
cmp
inc
xchg
sar
push
movsl
and
enter
clc
ljmp
ljmp
or
mov
callw
inc
fnstsw
addr16
fstp
insb
cmp
xchg
sbb
movsl
fsubl
leave
loope
insl
or
inc
fldenv
pop
or
sbb
subb
movsl
jae
iret
ud0
sbb
imul
xor
sub
fs
in
inc
test
mov
rcrb
dec
aaa
sbb
jnp,pt
xchg
inc
negb
pop
jle
dec
jns
jmp
xor
dec
xorl
sub
jae
repnz
add
cmp
inc
jns
xchg
roll
mov
cmp
test
mov
lahf
jmp
je,pn
jno
lret
jg
push
lods
cmpsb
lock
mov
pop
es
fwait
mov
lods
shlb
xchg
mov
insl
mov
push
jp
or
nop
mov
ss
mov
xor
iret
push
mov
xor
loopne
imul
mov
ja
push
dec
cmp
imul
and
or
cmp
ljmp
sub
push
cmp
mov
sub
sub
shrb
sub
lods
cmp
inc
ds
push
mov
stc
dec
movsl
add
shlb
jb
pop
dec
inc
sahf
fcoml
hlt
push
xchg
popl
sbb
mov
xor
cmpsl
out
jbe
pushf
push
mov
xor
lods
sahf
loope
js
stc
out
push
nop
push
or
loope
fsubrp
fsts
jbe
push
lcall
mov
sarb
sub
icebp
mov
fsubl
out
add
mov
sub
and
jnp
mov
xor
scas
jecxz
repz
mul
popa
mov
sbb
xor
clc
or
and
lret
imul
fmuls
add
sub
adc
cmpsb
cld
lock
fisttpl
shrb
mov
pop
dec
cmp
mov
imul
adc
int
cltd
pop
stos
inc
decb
icebp
jmp
mov
out
pushf
adc
or
mov
pop
mov
or
cltd
mov
stos
dec
call
mov
repz
jbe
into
cmp
rol
add
pop
cld
mov
sbb
or
pop
sbb
test
adc
dec
mov
clc
pop
sub
pushf
ss
cmpsl
mov
xchg
cwtl
gs
fs
xchg
jnp
loop
out
dec
lods
xor
mov
leave
hlt
jo
lods
dec
add
icebp
inc
mov
aas
add
adc
mov
sahf
daa
xor
jecxz
xchg
lods
sub
popf
out
xchg
mov
pusha
lret
je
pop
arpl
dec
jo
sbb
cld
push
imul
fisubrs
test
mov
clc
insb
jle
addl
sbb
shrl
cmc
repnz
or
ds
dec
mov
int3
mov
stos
jns
pusha
mov
aas
mov
cmpsl
addr16
sub
push
adc
insl
loope
imul
jmp
and
pop
js
fldl
xor
sub
sub
jns
xchg
xor
sbb
xchg
sbb
jecxz
lds
dec
add
lcall
fcoml
fidivs
and
daa
mov
sbb
test
loop
fldlg2
sub
push
mov
fisttpll
xchg
shll
test
aad
inc
inc
movsb
adc
ret
jne
jo
dec
aad
outsl
cli
lahf
and
jns
add
lret
dec
jmp
bound
push
xor
fisttps
bound
dec
cwtl
rcll
jmp
loop
push
cmp
mov
pop
cmp
imul
jns
lods
clc
shr
aam
repnz
mov
scas
sahf
jl
out
xchg
rcl
inc
ljmp
ret
pushf
icebp
sarb
in
dec
lock
in
lds
daa
or
cmp
add
jl
push
leave
mov
lcall
ja
push
xchg
inc
push
loope
in
subb
xchg
mov
push
mov
enter
loope
add
xchg
sbb
add
scas
cmp
mov
jae
cli
movsl
test
xor
add
sub
xchg
fisttps
std
pop
insl
lock
fsubs
jb
xor
mov
jo
sub
into
in
outsb
lds
push
test
enter
shrb
xchg
mov
xor
cmp
nop
sub
icebp
dec
xor
mov
and
xchg
rorl
rclb
push
shlb
or
icebp
cmp
lods
inc
xchg
pop
sahf
fidivs
popa
push
add
push
cld
inc
xor
push
jbe
inc
das
xor
cmp
out
cmp
fistpl
dec
lock
ss
jo
lods
outsl
push
shll
adc
hlt
sub
test
xchg
in
pusha
repz
inc
imul
mov
jo
out
outsb
shlb
ret
cmc
push
xchg
or
add
pusha
sar
xchg
sbbb
lea
xchg
mov
cmp
push
scas
sub
jnp
data16
lahf
movl
pop
push
dec
push
outsb
xchg
imulb
or
pop
int3
fcomps
stos
test
mov
and
scas
add
addr16
ss
mov
das
call
and
int3
mov
popa
and
fwait
insl
das
dec
pop
scas
stos
xlat
jmp
mov
out
xor
mov
lods
push
pop
mov
xchg
or
jecxz
xchg
push
add
dec
mov
push
icebp
pop
addr16
adcb
pop
sbb
lods
mov
mov
stos
cmpsb
cmp
mov
push
repz
movsl
pop
into
icebp
mov
sbb
dec
std
push
push
mov
cwtl
mov
cmp
shl
clc
jl
sub
rorb
xchg
cmp
loope
dec
xchg
mov
cli
xor
mov
test
test
leave
add
lods
in
repnz
addb
add
add
test
xchg
lret
in
ss
fstpt
cs
push
sbb
push
das
or
push
out
sbbb
outsl
push
es
xor
sub
and
pop
xchg
stos
inc
mov
adc
jg
mov
dec
mov
mov
sbb
mov
subl
out
pop
and
mov
test
pop
adc
xchg
adc
xor
mov
es
add
mov
dec
push
in
testb
idivb
int
jp
arpl
xchg
jnp
popa
push
fldcw
xor
cmc
sahf
fisttpll
mov
or
sub
idivb
dec
mov
inc
out
jo
nop
mov
jo
jae
push
imul
jo
dec
cmp
mov
mov
stc
loopne
insb
inc
pop
bound
ret
mov
les
sub
fwait
dec
cld
adc
clc
cwtl
dec
jge
imul
dec
cwtl
pop
xchg
lea
mov
adc
add
loopne
jne
sub
push
pop
add
push
fsubrl
mov
cmpsl
call
add
in
dec
push
das
aas
jge
pop
and
hlt
cld
lret
shrb
inc
mull
subb
push
sub
mov
ret
push
sti
hlt
idivl
mov
lcall
orb
adc
insl
fdivs
in
sarb
push
mov
jmp
das
pop
sbb
arpl
aas
push
jae
negl
fiadds
inc
xchg
cmp
add
jl
mov
xchg
or
in
ja
arpl
pop
push
xchg
jecxz
jnp
sbb
add
inc
ljmp
xor
movsb
lret
dec
je
add
dec
out
mov
pop
stos
pop
fistpll
call
adc
xchg
xchg
xchg
inc
and
dec
addr16
lahf
pop
lds
inc
incb
int
out
in
jecxz
pop
test
push
gs
cmpsb
jo
mov
popf
cmpsb
jo
xchg
aam
push
inc
int
sub
and
xor
daa
shrb
aas
pop
or
cmp
adc
fcoml
js
mov
das
lret
or
jno
and
movsb
aam
into
lea
lods
add
jae
pop
mov
and
aas
out
lds
sahf
ret
and
jbe
mov
mov
or
rclb
jg
sub
in
sbb
adc
fcmove
xchg
jl
cld
sahf
xor
pop
dec
aas
sarl
hlt
sub
push
xchg
jg
fs
cmp
mov
sbb
add
je
imul
xchg
xchg
dec
add
mov
out
dec
sbb
ljmp
sbb
rcrl
xor
pushf
jns
mov
pop
mov
lods
mov
push
cli
sub
rcl
repnz
pop
mov
sbbl
xchg
fwait
into
insb
cwtl
xor
sbb
jnp
inc
fwait
xchg
inc
mov
or
cmc
ljmp
mov
pop
lds
xor
into
fmuls
sahf
bound
jno
sub
cmpsb
add
nop
jbe
cs
cmp
lret
jmp
push
jmp
mov
jae
fmul
mov
popf
xchg
ret
shrb
lcall
mov
mov
and
cli
sti
js
js
sahf
mov
mov
cmp
and
lods
xchg
repz
jns
xchg
xor
fdivr
adc
and
and
xchg
fistps
xchg
mov
cmp
aam
mov
and
adc
inc
ret
dec
leave
xor
call
adc
xlat
into
mov
test
jo
out
cwtl
orl
lods
loopne
test
mov
bound
roll
xchg
or
cmp
dec
cmp
mov
inc
inc
jp
shr
sub
lret
sub
imul
repnz
stc
stc
cld
xchg
jecxz
xchg
int
inc
fwait
push
insl
fucomip
cmp
adc
xchg
les
pop
push
pushf
xor
inc
add
std
mov
jg
aaa
nop
add
pop
lcall
out
clc
icebp
cmpb
dec
pop
pop
cmp
inc
stos
cmp
dec
rcl
jecxz
inc
out
loop
pop
jo
mov
sbb
adc
jbe
cmp
cmp
cmpsl
inc
jb
fisttpll
movsb
imull
mov
xlat
mov
xchg
sbb
lcall
pusha
pop
cwtl
lret
dec
adc
ja
stos
pusha
jl,pn
or
pop
out
fs
test
fwait
mov
ljmp
cwtl
push
jno
and
mov
cmc
cmpsb
mov
pop
push
cmp
and
dec
jmp
into
and
orl
popf
and
mov
or
fnstcw
pop
xor
loop
xchg
pop
push
ret
pop
pop
pop
inc
xchg
ret
jge
or
cmpsb
icebp
rol
ss
pop
cmp
in
mov
mov
cmp
jbe
addl
dec
imul
mov
cmp
mov
mov
mov
dec
mov
loope
mov
out
xchg
scas
sub
mov
sbb
adc
cwtl
icebp
pop
mov
outsb
jae
mov
push
or
movsb
mov
adc
in
orl
dec
mov
call
mov
pop
lea
orb
jns
xor
push
sarb
btc
mov
ja
push
lods
push
jbe
ret
lods
inc
stos
or
inc
aaa
jo
inc
jno
arpl
jns
push
jbe
stos
loop
loop
andb
sbb
cmp
mov
pusha
push
xor
lahf
sub
arpl
fs
out
pop
bound
das
pop
je
sarb
mov
daa
inc
and
push
jecxz
mov
insl
sti
mov
jle
xchg
mov
ss
es
jmp
and
or
xchg
les
cmc
iret
mov
es
sub
and
xor
insb
hlt
inc
arpl
in
sbb
popf
pop
out
mov
aas
repz
fldl
js
jo
stc
aam
arpl
cmp
imul
dec
jne
jg
jnp
push
daa
in
jb
mov
jno
mov
fimuls
mov
bound
adc
or
sbbl
sub
lds
ljmp
jo
jmp
pop
pop
daa
lods
testl
sti
es
out
sbbl
inc
or
inc
call
pop
lcall
daa
and
sbb
jno
daa
test
mov
and
adc
rcl
fimull
leave
leave
loope
add
dec
out
or
int3
out
dec
popa
xorl
push
lods
scas
xor
movsb
sub
cmp
enter
mov
mov
arpl
fldenv
scas
sub
mov
stos
lcall
clc
out
out
xlat
loop
mov
sbb
sub
nop
sbb
and
mov
mov
jo
jae
xchg
loopne
cltd
inc
inc
inc
imul
xor
push
fmuls
mov
lahf
enter
inc
lea
cli
xchg
sbb
mov
ret
dec
sbbl
ret
int3
stos
in
icebp
bound
sub
out
bound
mov
or
mov
mov
sti
pop
jae
ret
fcmovnu
jmp
push
push
jno
jb
sar
scas
cmc
xor
jae
jb
pop
dec
orb
out
movaps
cmpb
cmp
mov
mov
or
mov
sub
int3
scas
push
lods
dec
inc
mov
cmp
jle
xor
outsb
test
sub
stc
adc
and
dec
shrb
inc
insb
cmp
std
shl
pushf
inc
loope
test
icebp
jbe
testl
push
or
mov
xchg
xor
cmp
adc
sub
in
fldcw
mov
xor
cmp
arpl
lods
in
iret
roll
dec
stc
aad
inc
and
push
mov
bswap
je
dec
adc
lahf
mov
mov
pop
in
mov
popa
inc
push
inc
aam
pop
mov
ret
mov
dec
arpl
ja
and
mov
subl
test
sbb
jg
out
adc
inc
lock
xchg
sar
dec
paddusb
sub
call
dec
daa
sbb
mov
dec
push
push
add
xlat
movsl
ja
sbb
shll
pop
rolb
or
sbb
pop
fsts
jp
cmc
dec
jle
sbb
dec
push
mov
mov
movsb
cmp
aas
jae
sbb
testb
les
lret
adc
inc
cmp
stos
sub
cmpsl
add
hlt
popa
or
test
dec
aaa
int3
js
iret
sbb
mov
call
push
dec
repnz
out
jb
xchg
sbb
jl
jno
and
and
movsb
cmp
adc
es
add
mov
cwtl
aad
enter
adc
xor
ret
enter
adcl
loop
nop
push
in
dec
mov
dec
mov
push
xor
ret
mov
into
sbb
push
inc
popa
mov
push
mov
push
dec
sub
test
sti
push
or
arpl
ret
in
add
mov
ds
mov
cld
andl
addl
repnz
mov
mov
cmp
loope
shr
pop
push
sbb
test
aaa
call
jg
sub
call
push
sbb
ja
test
inc
push
push
out
pop
rcrb
icebp
xchg
icebp
int
movsb
push
jno
mov
ret
test
addl
push
sub
aam
ret
cmpsl
xchg
add
iret
shr
in
push
pop
or
fwait
jnp
out
vzeroupper
and
mov
cmc
add
sarb
cmpsl
pminub
jp
cwtl
xor
or
in
test
fnsave
ja
jns
sub
xchg
dec
in
test
or
lret
adc
add
int
je
sub
dec
ljmp
imulb
sub
sub
pop
aad
xchg
fadds
inc
loope
loope
fcmovnb
aas
lock
roll
push
pop
push
add
pop
sti
xor
ds
xor
fldenv
inc
imul
cmc
and
mov
or
dec
cmp
push
popf
cmp
das
fs
fildll
push
stos
loope
pop
mov
and
test
bound
xor
cmp
jns
pop
in
test
popf
mov
cmpsb
out
pop
sbb
inc
sub
out
out
xor
hlt
mov
jo
sub
ljmp
mov
out
arpl
gs
bound
mov
fmul
cpuid
loop
xor
dec
jno
arpl
cmp
dec
insb
lret
jle
cmp
cmp
jbe
cmpsl
push
ret
in
cmp
cmp
jge
ficoml
or
jb
push
sbb
repz
adc
mov
mov
mov
dec
lret
insb
inc
inc
lret
mulb
inc
or
aaa
add
insl
jo
nop
clc
iret
add
in
sbb
sbb
dec
rolb
and
fwait
jp
sahf
mov
dec
pop
xchg
mov
sbb
cmp
into
xchg
test
cwtl
cmp
sbb
ffree
mov
lock
mov
jmp
movsb
cmp
lea
cwtl
adc
mov
ffree
and
fnstsw
lahf
je
jl
popf
add
mov
out
sub
jmp
call
ret
ljmp
jae
xor
mov
xchg
je
clc
aad
stos
test
sbb
nop
or
repnz
sbb
sbb
adc
shlb
sbb
pop
fistl
notb
xchg
xchg
data16
xor
add
jle
mov
xchg
push
dec
in
aaa
bound
and
push
inc
imul
jnp
test
xor
adc
xor
push
ljmp
aam
inc
in
add
sbb
mov
push
into
add
and
inc
push
adc
hlt
fiadds
pop
fcomi
sbb
bound
adc
mov
test
enter
or
cmpsl
mov
cltd
sub
jno
mov
movsb
fs
divb
movsl
jo
mov
mov
mov
push
loopne
and
daa
lcall
mov
popa
pop
cli
or
insl
jno
jmp
rorl
lods
sub
roll
jmp
lea
xchg
sbb
ja
fwait
xchg
mov
jae
xor
test
mov
js
mov
mov
mov
xchg
cmpsb
fsts
and
mov
jns
jb
shrb
jb
jge
sbb
add
mov
popf
cmp
xchg
mov
aas
cwtl
repz
xor
or
cs
cmpb
push
jge
js
lcall
mov
inc
mov
lret
xchg
adc
inc
loop
loop
sub
addr16
negb
mov
jbe
add
push
lahf
mov
jno
stos
add
jns
push
cltd
cmpsl
inc
inc
fstpt
lret
mov
jl
std
mov
adc
lret
out
ret
dec
sub
and
pop
enter
xorb
cld
roll
cld
frstor
daa
fildll
jae
dec
test
loopne
sub
xchg
inc
sbb
mov
inc
scas
cmpsl
repz
loop
mov
mov
xchg
jmp
push
filds
cmpb
mov
lods
inc
xlat
pop
rorl
shlb
cmc
and
sub
pop
xor
xchg
sbb
inc
push
enter
lcall
pop
imul
adc
jle
test
cli
inc
roll
les
push
in
scas
hlt
or
aad
mov
mov
rcll
jae
xchg
insb
cld
jno
into
orb
xor
test
dec
jle
mov
jnp
jl
pusha
sti
into
adc
xor
jnp
call
decb
pop
repz
insl
cmc
or
imul
cmp
add
jp
out
sbb
pop
and
push
mov
popl
mov
mov
je
push
insl
cmp
leave
shlb
mov
das
movb
test
push
and
and
xchg
jl
nop
jp
mov
adc
aaa
pop
xchg
and
mov
adc
pop
hlt
imul
das
aas
mov
clc
jecxz
jmp
testb
mov
into
je
jp
inc
lock
sub
stos
in
es
lcall
and
fwait
xor
mov
xchg
js
bound
xor
pop
fldenv
outsb
jmp
fldz
insb
rorl
repz
xlat
lcall
or
and
mov
add
fldenv
and
inc
rcrl
cld
filds
aaa
movb
cwtl
xor
adc
sbb
scas
mov
and
lea
insl
mov
divl
sub
mov
cli
call
rcll
sbb
add
dec
and
movsl
hlt
push
and
lock
in
xchg
adc
pop
sub
loop
dec
pop
add
sub
mov
pop
sbb
cmp
mov
xchg
data16
adc
in
rcl
pop
push
dec
fsts
dec
mov
xchg
cmp
cmpb
mov
or
mov
rol
jo
pop
cld
rcll
imul
roll
rcl
jmp
movsb
scas
shll
mov
movd
int
jbe
mov
xchg
loopne
pushf
sbb
add
jmp
mov
movsb
sub
jl
and
into
popf
outsb
xchg
mov
add
add
lock
out
cmp
scas
sub
into
movsb
sbb
add
jno
dec
xor
nop
xchg
dec
adc
xchg
xchg
mov
mov
and
pop
lds
or
pop
cmp
lahf
pop
jb
ret
cmc
rcr
outsl
pop
int
test
imul
xchg
push
cltd
xor
xchg
aas
subb
push
adc
std
mov
cmp
sarb
movsb
cmpb
sbb
xorl
mov
xchg
push
add
pop
test
mov
sbb
scas
sub
mov
adc
jmp
iret
lock
inc
icebp
nop
leave
xchg
xlat
mov
ficomps
scas
xchg
dec
push
push
aam
mov
orl
das
shll
inc
mov
in
add
ja
cltd
dec
and
add
cwtl
sub
or
scas
sarl
add
fcompl
adcb
call
test
push
fsubs
push
icebp
mov
lock
push
fwait
in
push
adc
inc
xchg
adc
cmp
adc
push
pop
inc
mov
sahf
mov
lret
jns
popf
jb
fnsave
cmp
mov
push
jno
pop
xlat
iret
add
movsl
jno
and
out
test
add
cmp
mov
inc
int
cmp
and
loope
add
mov
or
mov
aam
loope
je
test
lds
cmp
pushf
push
pop
push
jg
emms
dec
test
sbbb
adc
insl
inc
test
inc
enter
cmp
in
or
xchg
lcall
outsb
addr16
iret
or
inc
dec
imul
dec
jmp
movsb
in
hlt
pop
sub
in
jmp
and
jg
in
mov
lods
movsb
push
test
add
shlb
xadd
xor
imul
mov
mov
xor
out
mov
enter
sub
cmp
shlb
cmp
loopne
pop
mov
cmp
ja
jge
or
lods
mov
out
daa
push
mov
or
mov
or
pop
dec
jecxz
popf
popa
pop
dec
xchg
cmp
sub
sbb
btr
imul
cmp
mov
or
mov
jge
imul
xor
fcoml
jl
fwait
das
js
mov
rol
push
addr16
addb
sbb
int
xchg
bound
xor
gs
adc
xchg
xor
imul
out
fidivs
in
and
push
dec
push
jmp
sahf
mov
push
sbbb
mov
xchg
or
jmp
xor
pusha
repz
lock
lds
dec
mov
cmc
in
push
xchg
out
mov
cmpsb
aad
dec
aas
cltd
insl
shrl
push
in
xchg
lds
xchg
push
rorl
xchg
push
pop
clc
xor
stc
add
sbb
out
call
or
and
and
dec
lcall
sub
and
push
scas
and
and
push
and
inc
mov
xor
xchg
cmpsb
sub
popf
mov
push
sub
mov
jg
movsl
jo
cmpsl
xchg
fisttps
or
loope
jg
loop
daa
dec
adc
aam
sub
add
inc
mov
inc
int3
mov
xchg
into
fildll
js
sbb
fiadds
fldenv
cmpsl
push
lcall
roll
sbb
jp
add
mov
hlt
je
andb
popf
inc
jb
popa
add
inc
sub
jp
cmp
inc
jbe
out
mov
pop
jns
ret
pop
fdivrs
mov
aaa
dec
rcl
lock
rcrb
sti
ret
das
pop
and
outsl
cltd
stc
scas
data16
pop
sahf
ds
sub
out
sbb
mov
push
outsb
inc
jne
push
and
pop
jno
or
in
sub
out
xor
mov
outsl
xchg
mov
in
les
rcr
sti
loopne
xchg
mov
leave
outsl
push
or
hlt
inc
add
divb
push
pop
mov
cmp
test
scas
xor
mov
bound
pop
stos
or
popf
in
sub
sub
push
xchg
pop
sub
out
fsubl
inc
mov
sbb
in
dec
inc
lcall
loop
mov
add
repnz
insb
push
shrb
jno
sbb
bswap
lcall
mov
push
jo
stos
insb
and
data16
adcb
push
pop
in
cmpsb
jo
push
in
push
and
fcmovu
dec
adc
pop
lods
push
push
push
icebp
sbb
xor
and
ret
xor
imulb
xchg
notl
push
mov
ret
arpl
xlat
cmc
data16
testl
add
xor
lea
dec
sub
mov
loopne
dec
jnp
sbb
mov
mov
mov
popa
ror
mov
mov
mov
adc
bound
lret
rol
cmp
mov
mov
lahf
loop
dec
ficoml
xchg
das
mov
jae
push
lea
jmp
xor
adc
xchg
loope
lret
dec
test
add
lret
mov
push
shlb
dec
xor
jg
ret
sti
sti
outsb
je
mov
vgetmantsd
xor
test
in
in
jl
mov
sti
dec
jbe
jbe
xchg
jnp
pop
push
leave
dec
sahf
in
sahf
test
repz
xlat
xchg
daa
movsl
xlat
cmpsl
sub
mov
stc
inc
stos
sti
sub
dec
aas
nop
mov
inc
addr16
ret
orl
pop
push
sbb
dec
icebp
int3
xlat
pop
dec
sti
cmp
push
pop
push
sbb
dec
les
addb
jp
movsl
loop
enter
push
loope
lahf
mov
shlb
repz
ja
lock
or
adc
je
icebp
idivb
loope
jnp
mov
mov
jmp
or
ret
repz
lahf
jne
mov
imul
subl
lret
xchg
add
popa
lea
mov
mov
orl
pop
sub
or
clc
pop
pop
jo
adc
cltd
jb
cmp
mov
in
xorl
cmpsl
jo
test
sbb
adc
jne
xchg
mov
jle
and
or
cmc
lcall
cltd
jl
dec
repz
or
shl
and
dec
and
daa
dec
mov
enter
fs
stos
sub
pop
ss
loopne
adc
sub
add
mov
jg
outsl
test
imul
test
mov
lcall
and
shl
jo
int3
cltd
mov
mov
mov
adc
imul
into
sbb
cmc
pop
inc
mov
sbb
outsl
aaa
andb
cmp
dec
imull
orl
out
adc
add
aas
inc
and
cld
mov
mov
and
repnz
inc
dec
xor
arpl
lret
clc
mov
adc
insb
add
fcomps
mov
test
pop
jecxz
ds
fisttpll
inc
mov
mov
sbb
repz
nop
lods
jecxz
mov
push
filds
xchg
aas
cs
mov
xchg
xchg
stos
sbb
lea
std
cmp
add
and
arpl
sti
and
flds
stos
pop
ja
and
cli
mov
in
fwait
lret
int3
mov
stc
sub
cmpsl
xchg
inc
int
or
loop
ljmp
inc
xchg
testb
xor
mov
bswap
mov
xor
and
mov
jg
cmp
mov
dec
cld
mov
xchg
in
push
pop
mov
add
leave
jmp
imul
jnp
push
inc
sahf
or
rcrb
cmp
fmuls
aad
movsb
push
jl
jp
cmpsb
sbb
sbb
hlt
mov
in
and
add
in
sahf
lods
pinsrw
or
cmp
incl
lret
outsb
mov
xchg
or
sub
xchg
push
rol
sub
scas
shll
insb
enter
icebp
notb
mov
icebp
pop
inc
lds
scas
and
imul
aas
or
inc
xor
pop
insb
cmp
and
je
mov
cmp
adc
pop
push
add
xor
outsl
popf
xchg
nop
in
stos
jmp
outsb
jmp
jle
mov
push
into
jo
fidivl
inc
jecxz
mov
stc
mov
cs
inc
inc
mov
xor
outsl
ss
xor
lret
jle
ss
lret
shr
sub
rolb
cs
xchg
pushf
xor
imul
jg
or
je
adc
scas
push
daa
arpl
jbe
xchg
dec
pop
sbb
leave
pop
push
push
or
scas
insl
ss
fwait
jo
adc
mov
out
cmc
out
les
xor
imul
jmp
mov
xchg
sbb
imul
mov
or
mov
loope
jp
sub
pop
pop
hlt
into
into
data16
adc
xor
icebp
call
add
jecxz
hlt
stos
lret
fcmovu
movsbl
repz
xor
jns
xchg
in
lds
shlb
xor
sbb
repz
mov
xchg
xchg
jg
xchg
mov
jmp
mov
mov
pop
bound
pop
insl
and
adc
lret
std
sub
sub
push
sbb
sub
popf
xchg
xchg
jnp
pop
dec
or
repnz
stos
fwait
mov
add
test
int3
in
mov
dec
aad
sbb
aam
out
sub
push
jecxz
mov
adc
and
pop
adc
sub
clc
adc
sbb
addr16
ds
mov
and
les
jo
imul
aaa
mov
aaa
call
xchg
add
adc
push
aaa
repz
shlb
scas
aad
xchg
push
xorb
lret
into
rcr
xchg
in
lods
push
pop
imul
pop
shrl
jp
iret
std
push
adc
sahf
ficoms
cmp
sub
ja
outsl
adc
lods
sub
enter
sti
and
in
push
pusha
scas
jmp
and
inc
xchg
orb
mov
adc
scas
cmp
dec
pop
inc
lods
lret
cmp
leave
fldenv
mov
pop
and
mov
sub
push
mov
or
test
inc
lock
insl
mov
adc
arpl
sbb
lods
fstpl
jno
jno
push
int3
clc
inc
in
cwtl
push
inc
testl
in
das
std
in
pusha
ljmp
lds
int
sub
inc
imul
cwtl
xor
sub
aad
pop
xchg
and
or
pushf
cmp
out
rcr
orl
xor
and
jg
subl
dec
sarl
adc
mov
sub
cltd
test
push
xchg
sbb
or
xchg
inc
lret
sub
fidivl
mov
shll
cmpsw
push
adc
push
popf
inc
and
idivl
pop
sarb
leave
scas
aam
fistps
scas
ss
push
clc
jl
dec
das
add
andb
movsl
cmp
mov
hlt
mov
mov
mov
mov
adc
gs
pop
or
fstp
popf
mov
xor
pop
addr16
mov
mov
cmpsl
add
xchg
jmp
imulb
pmullw
mov
pop
inc
arpl
push
sbb
je
out
insl
push
fcmovnbe
sbbl
sti
out
jne
int3
mov
test
pmaddwd
pusha
push
mov
mov
ret
cmp
jmp
adc
in
adc
inc
mov
jne
int
xor
addr16
paddusb
das
pop
cs
pop
cmp
aas
outsb
dec
daa
push
ja
cmp
sbb
aaa
pop
mov
mov
cli
mov
insl
mov
aas
add
push
mov
outsl
movsb
jmp
addr16
dec
call
cld
clc
pop
xchg
shll
dec
xor
fs
dec
cld
and
sbb
push
mov
mov
aas
out
lret
mov
sub
or
cs
cmc
movb
rcl
fnstenv
adc
shr
jl
adc
rol
dec
pop
xlat
sub
mov
int
push
ret
or
mov
push
mull
and
cmp
outsb
mov
in
mov
dec
inc
add
mov
jno
addb
mov
dec
adc
and
add
dec
jns
mov
sbbl
out
ljmp
push
cwtl
lds
pop
mov
push
pop
dec
fcomps
jle
cmc
mov
mov
mov
and
jl
mov
inc
inc
push
inc
or
jmp
cmp
sbb
dec
lds
std
roll
aad
add
nop
loope
clc
sbb
fwait
pop
shlb
je
xor
jmp
pop
mov
aaa
adc
ja
pop
xchg
dec
xor
lds
aaa
out
mov
or
adc
mov
xor
and
mov
in
mov
sbb
lret
out
loopne
inc
and
push
sbb
sbb
js
jnp
pusha
cld
fdivl
insl
pusha
pmaxub
mov
pusha
ljmp
scas
scas
mov
pop
lds
jae
mov
fsub
mov
add
sbb
or
aas
cmpsb
insl
daa
push
pop
jo
mov
cmp
sahf
data16
mov
fidivs
push
jbe
dec
rorb
or
mov
cmpsl
nop
mov
push
xlat
test
aad
cmp
fwait
add
pusha
mov
xor
inc
ljmp
push
mov
arpl
sub
jl
pusha
cmpsl
xchg
aad
or
sub
repnz
arpl
hlt
ss
fstps
sbb
inc
sbb
mov
jg
call
or
addr16
push
stc
push
lcall
add
lods
inc
sbb
jae
aaa
cwtl
dec
or
arpl
repnz
ret
fsubrl
cmpsl
push
mov
lahf
fstp
mov
cmpl
in
mov
bound
jge
add
push
add
orl
xchg
shll
imul
mov
lcall
pop
lcall
jp
inc
push
mov
jmp
nop
ror
push
push
test
iret
add
mov
data16
jg
mov
push
popa
lea
std
div
sbb
jp
mov
test
mov
aam
minps
inc
mov
lret
mov
push
xchg
test
fcomi
ss
or
sbb
lods
push
xchg
jb
jbe
cmc
mov
pop
mov
dec
ss
push
sub
mov
roll
in
dec
mov
xor
push
outsl
gs
in
mov
icebp
insb
xchg
out
mov
jp
notb
repnz
fcoml
add
pop
iret
not
add
inc
lods
jns
xor
sahf
or
xchg
insl
xor
inc
popf
les
xchg
out
out
fstps
or
xor
in
fbstp
pop
lahf
pop
add
test
cmp
add
in
popf
mov
in
fistpll
or
inc
fldt
popa
jno
adc
shl
sbb
push
jb
add
cmp
xchg
dec
jne
fisttpl
sbb
cmp
clc
inc
and
push
xchg
test
sbb
sub
adc
cmp
mov
sub
mov
xlat
test
jmp
mov
lret
pop
sbb
shlb
insl
in
mov
push
repnz
mov
dec
push
sahf
roll
ja
mov
out
jo
push
test
sbb
fdivrl
fsubrl
dec
adc
pusha
jl
sub
pop
call
mov
mov
jae
jl
loopne
and
mov
mov
add
cmpsl
lret
popl
xor
cmp
xor
clc
pop
mov
pop
jmp
enter
jg
mov
sarl
fidivrs
cmp
mov
mov
xchg
test
iret
rol
filds
aad
shlb
pop
sub
xor
pop
rcrb
pop
mov
jns
push
push
lret
mov
fildl
clc
dec
xchg
sbb
hlt
ljmp
adc
push
cli
push
int
xor
fcoms
jb
pop
fwait
lods
adc
out
lock
pop
pop
repz
sub
or
mov
aas
imul
and
ds
mov
inc
arpl
popa
outsl
sti
hlt
and
pop
mov
loop
mov
pop
leave
mov
imul
daa
or
xor
in
pop
xchg
roll
mov
pop
mov
dec
cmp
push
pop
push
sbb
or
and
js
lret
mov
sub
iret
or
cmpb
jb
push
mov
cmp
pop
mov
ds
dec
lock
or
adc
push
leave
cld
int3
cli
adc
insl
loope
sbb
fstpl
movsb
sbb
fsubl
sahf
pop
push
lods
xchg
lods
sub
int
push
stos
cmp
jp
jg
in
mov
popf
filds
jns
adc
push
mov
jge
jno
push
mov
inc
and
in
mov
loope
or
imul
xchg
rclb
lcall
sahf
loope
imul
add
xchg
jge
cmp
shl
sbb
dec
lea
dec
jmp
cmp
fnstenv
repz
cmp
lcall
xchg
dec
mov
mov
inc
xorl
inc
dec
adc
loop
lret
jno
repnz
in
mov
iret
mov
jl
push
mov
fnstsw
jae
insb
ds
mov
push
jns
adc
sbb
outsl
push
mov
sbbb
popa
xchg
mov
cmp
cmp
enter
in
mov
iret
outsl
jp
xor
mov
or
icebp
xor
clc
lret
dec
mov
cmp
iret
or
dec
fmuls
stos
and
push
pop
clc
mov
jmp
jle
rorl
mov
inc
mov
addr16
jno
xor
sbb
popa
mov
mov
sti
xchg
or
dec
mov
cmp
adcb
push
es
mov
mov
jb
mov
out
mov
and
mov
and
addb
fstpl
xor
out
int3
sti
mov
xchg
mov
fs
inc
cmpsb
out
js
int
mov
mov
xchg
jbe
push
out
mov
mov
ja
and
lods
sub
sbb
push
and
cmp
fsubp
outsb
data16
shrb
sbb
push
inc
aaa
xor
inc
dec
xorl
sub
xchg
out
inc
sbb
cmp
std
jno
or
loopne
and
loop
xchg
into
gs
jg
inc
test
into
mov
mov
ds
lods
popa
out
mov
dec
and
pushf
popa
sahf
cmpsb
outsb
iret
jle
test
jge
test
jbe
std
adc
jmp
int3
sbb
fwait
ds
negl
int3
fistpl
nop
push
pushf
lods
push
lock
call
jbe
lahf
jle
cltd
push
mov
lahf
adc
scas
nop
fmull
stos
data16
and
bnd
mov
xchg
imul
vphadduwd
jg
inc
sub
sub
xchg
push
mov
sahf
data16
lea
mov
rcrl
mov
gs
push
jbe
xor
add
cmpsl
test
mov
into
fimuls
add
or
mov
or
mov
inc
je
aad
inc
fdivrl
mov
aad
rcrb
in
add
jp
out
orl
aam
movsl
adc
fdivrl
adc
sub
dec
add
lods
fsubrl
xchg
adc
adc
cmc
sbb
ds
jl
jmp
push
lret
arpl
mov
sahf
sahf
mov
rcrb
xor
setge
push
jmp
fsubrs
repz
repnz
lahf
adc
mov
popa
and
aad
push
rcl
sub
jl
neg
jg
adcl
mov
pop
sbb
addl
pop
bound
pop
lret
xlat
popa
jnp
or
jnp
jle
outsb
jg
mov
and
mov
inc
aam
call
mov
shlb
xchg
ljmp
xchg
add
movsb
loop
inc
pop
repz
fsubrl
test
mov
dec
adc
iret
int3
sbb
aas
cmpl
fs
inc
scas
pop
push
mov
cltd
mov
outsl
xlat
xchg
cmp
sub
movsl
or
sub
movsl
xorb
inc
enter
stos
shll
pop
lods
fwait
sbb
lcall
mov
and
mov
push
fcoms
scas
adc
xor
cmp
xchg
inc
or
xchg
pop
fidivs
outsl
mov
xchg
movsb
push
ja
mov
and
mov
shl
aam
push
mov
xchg
mov
dec
in
xor
loop
xchg
out
cld
mov
pop
mov
icebp
xchg
ss
loopne
push
inc
jl
adc
sbb
lds
insb
sub
pop
pop
cld
xor
add
mov
loop
push
pop
movsb
add
nop
adc
nop
jbe
xchg
adc
scas
mov
xor
gs
out
inc
test
jmp
stc
pop
repnz
pop
pop
js
jp
sbb
pop
jl
cmp
adc
mov
cmp
push
sub
popa
int
stc
sbb
lock
push
push
outsl
push
inc
js
or
jnp
xchg
or
pop
lds
sub
in
mov
mov
lcall
mov
add
mov
jle
xor
std
nop
mov
cmc
imulb
adc
fwait
hlt
pushf
push
dec
in
dec
les
inc
or
pop
adc
jns
pop
push
js
xchg
lock
popa
inc
das
mov
sbb
fnsave
test
sbb
mov
cltd
repz
test
adc
xor
cmp
stc
cmpb
fadd
mov
or
popa
adc
aas
inc
sbb
out
dec
xchg
ficomps
and
out
repnz
fsts
lahf
mov
adc
pop
ret
sub
pop
lret
bound
ja
adc
pop
rclb
cld
push
daa
addr16
lret
std
sarl
gs
pop
mov
mov
shll
call
cli
repnz
ss
scas
add
hlt
mov
icebp
lock
adc
lahf
push
in
sar
in
fwait
das
sub
or
sbb
add
js
adc
das
push
loopne
scas
mov
cli
or
aad
testl
dec
lcall
clc
pop
movsb
dec
cmp
mov
daa
adcl
lods
pop
fiaddl
outsl
es
pop
mov
pop
xor
cmp
sbb
and
pop
and
aam
mov
dec
lock
jmp
jl
jb
mov
fidivrs
jo
popa
outsb
cmp
inc
mov
jp
adc
jno
test
sbb
lahf
and
or
sbb
sbb
test
rol
in
dec
outsb
xchg
std
pop
xor
jns
lods
pop
or
lods
sbb
mul
mov
cmpsl
add
jecxz
jb
push
add
sub
mov
jne
lret
or
out
cs
xchg
cmp
popa
lock
jp
out
push
repnz
inc
mov
insb
mov
sub
or
frstor
outsl
mov
sub
mov
push
sbb
inc
adc
popf
push
or
andb
ficoml
clc
sahf
out
pop
popf
jg
ja
je
pop
adc
movsl
nop
xchg
icebp
inc
std
jge
push
push
and
xchg
mov
sub
rcr
and
mov
xlat
add
mov
push
imul
push
dec
into
cld
lods
cmp
xchg
fisttps
adc
pop
or
xor
xor
popa
decb
jge
sti
xor
xchg
cmp
ss
shrl
stc
mov
mov
mov
mov
and
pop
enter
out
pop
rorb
pop
jbe
and
dec
add
cmpsl
jle
pop
testl
xchg
out
shlb
xor
adc
jb
mov
js
dec
outsb
mov
mov
outsl
mov
inc
fistpll
movsb
sbb
sbb
ja
xchg
adc
mov
sub
or
inc
mov
mov
leave
ficoml
sbb
scas
imul
mov
jg
mov
cmp
ljmp
jg
or
and
int
scas
fwait
add
push
inc
xchg
pop
or
in
cmpsb
mov
mov
icebp
jecxz
iret
cs
lds
jne
sbb
sub
inc
cmpsl
call
xor
pop
shrb
out
cmp
stos
mov
jmp
mov
lret
in
push
jbe
xchg
mov
outsl
mov
jns
dec
test
in
add
lret
push
div
fwait
push
jo
mov
pushl
add
inc
lds
or
sbb
or
dec
or
scas
push
adcb
mov
ja
ljmp
flds
xchg
fnstenv
imul
sbb
jl
mov
pop
je
sbb
or
add
mov
ror
sbb
fwait
fs
sub
push
imul
das
addr16
pop
jmp
scas
jo
jb
sbb
pop
mov
pop
push
jo
and
jne
xchg
inc
aaa
mov
sub
cmp
pop
mul
aad
mov
hlt
cmp
leave
lods
cmp
push
cltd
add
in
jl
imul
add
adc
xchg
xchg
adc
sbb
dec
hlt
push
jmp
jge
adc
add
mov
scas
lods
jecxz
jg
in
shrl
dec
pop
jne
das
in
dec
inc
das
scas
repnz
clc
sub
cmp
scas
enter
lods
pop
sub
mov
aad
in
pushf
jg
das
shlb
push
inc
es
inc
sbb
scas
sbb
adc
adc
sub
test
outsl
xchg
cmpsl
sarb
or
and
mov
sub
adc
ret
push
sahf
push
push
cmc
insb
je
sub
dec
repnz
pop
mov
sub
push
mov
pop
pop
mov
shlb
dec
push
sub
fisttpll
jns
mov
inc
ljmp
jp
addr16
jmp
jae
push
incl
iret
fnstcw
cmp
jb
in
mov
mov
cmp
sbb
fs
arpl
in
mov
sahf
popw
sbbw
sbb
mov
sbb
cs
adc
cmp
sub
sub
daa
mov
mov
stos
and
cmp
mov
dec
nop
popf
jne
dec
insb
subb
sbb
cmp
adc
jp
jl
jbe
xchg
or
shl
sbb
repnz
loopne
vphaddubd
add
push
sahf
cmp
sbb
pop
int
or
inc
fistl
mov
popf
fwait
je
rcll
push
mov
loope
sub
out
popa
aam
mov
jns
inc
mov
inc
mov
xchg
or
or
insl
push
jle
mov
sub
and
aas
scas
xchg
jo
sbb
dec
data16
test
inc
adc
mov
pop
and
sahf
jle
inc
inc
insb
xor
xchg
fucomi
pop
mov
pop
and
addr16
in
cmp
cli
inc
sti
fs
and
push
loop
push
popw
mov
iret
out
cli
insl
subl
imul
push
cwtl
aam
pop
mov
jnp
push
xor
lock
mov
popa
cmp
fwait
inc
jmp
icebp
out
scas
rclb
out
mov
in
dec
ret
movsl
fs
xlat
pop
rolb
shrb
cmp
fnstsw
ljmp
jns
sbb
sbb
ja
push
cmp
mov
and
ds
clc
je
int3
mov
out
inc
push
inc
mov
and
imul
jl
and
popa
cwtl
adc
sub
inc
cmpsl
data16
sub
shll
rcrb
fwait
add
lods
dec
pop
lcall
pop
popa
sbb
je
jae
inc
adc
and
pop
outsb
out
lret
popf
mov
lcall
in
dec
cmp
ljmp
dec
lods
cwtl
std
mov
adc
mov
jecxz
lahf
insb
mov
bound
xchg
cmpsl
jo
xchg
dec
ret
push
cmp
inc
lea
ret
ds
sbb
imul
dec
insl
icebp
xor
pusha
ret
sub
es
lret
mov
stos
push
push
daa
push
cmpl
dec
jecxz
xor
inc
outsb
cmp
stos
dec
sub
mov
push
lret
jae
inc
inc
repnz
ficompl
pusha
insb
add
mov
out
fists
ss
xchg
rcrb
or
std
fwait
das
cli
and
and
jb
test
stos
add
sbb
daa
shrl
add
test
or
repnz
imul
pop
fimuls
das
push
cmp
ret
jnp
outsb
mov
cmp
or
xor
jns
cmp
adc
xchg
imul
iret
dec
pop
or
in
hlt
pop
push
ss
mov
stos
mov
mov
loope
outsl
enter
fsubs
pop
sub
popf
push
pop
cmp
sbb
ret
addr16
fimull
push
xchg
xchg
in
lods
out
sub
pop
adc
and
pop
jmp
xchg
call
mov
jmp
mov
es
sbbb
mov
cmc
jo
sti
gs
mov
add
pop
mov
out
jb
cmp
cmp
in
push
popa
xor
adc
sbb
push
sbb
sbb
dec
push
push
aas
fsubrs
pop
dec
dec
xor
ds
cmc
mov
clc
imul
add
sub
xchg
jecxz
push
jmp
xchg
insb
inc
dec
xor
bound
dec
mov
push
in
test
push
cwtl
fsubl
js
sub
out
mov
aas
pop
xchg
pop
or
jg
and
mov
cmp
cld
mov
in
bound
mov
out
inc
xlat
orl
cmpsb
fs
pusha
sbb
stc
inc
push
pop
xor
xor
mov
imul
push
sbb
mov
jg
hlt
stc
dec
ljmp
add
dec
xor
lcall
push
inc
bound
xor
bound
lcall
and
repnz
xor
xor
xchg
mov
sub
push
pop
inc
rolb
jle
xchg
scas
in
fists
xchg
clc
xor
pop
pop
lods
pop
jbe
mov
dec
imul
sahf
push
xchg
and
or
test
daa
stc
fwait
mov
movsb
loope
dec
dec
xor
ret
mov
mov
mov
ficoml
or
mov
daa
inc
movsb
cmp
jle
inc
loop
movl
call
hlt
xchg
xchg
xor
aad
and
cwtl
or
lods
test
sub
pop
mov
dec
inc
and
xchg
mov
icebp
and
fcmovu
mov
xor
sarb
imul
cmc
add
out
cmc
mov
pop
inc
push
sbb
lods
outsb
inc
push
cwtl
xor
xchg
sub
imul
pop
add
pop
xchg
shll
stos
mov
and
loop
mov
pop
and
cmp
pop
mov
imul
shll
and
inc
inc
outsb
mov
mov
loopne
repz
cmp
in
aad
mov
sub
push
pop
and
jns
add
push
call
ss
aad
pop
add
test
fldt
xchg
in
fcomip
sbb
leave
lret
shll
mov
pop
jns
aaa
orb
dec
jne
push
xchg
ljmp
imul
pop
or
sbb
out
xchg
fmul
cmp
xchg
fwait
jns
cld
dec
mov
sub
fldcw
mov
les
cld
cmp
stos
aad
push
insb
inc
loop
push
adc
insl
cmp
test
add
sub
cmp
ret
sbb
ja
in
pop
push
xor
xor
jo
mov
orl
jp
pop
jae
jo
ret
int
clc
xor
setl
in
or
sti
inc
fs
stc
xchg
aad
adc
jle
aam
sbb
shlb
repz
and
sbb
out
enter
dec
stos
or
add
out
sti
sbb
in
in
mov
pop
mov
scas
into
pop
lods
mov
shlb
adc
xchg
addr16
stos
hlt
fistl
push
xchg
out
popa
cmp
and
sbb
pop
xchg
jnp
aam
jg
sahf
and
xor
cwtl
call
mov
es
out
mov
out
std
xor
fcompl
arpl
xchg
lcall
lock
inc
xchg
roll
and
fstpl
sti
mov
sarl
dec
push
push
in
iret
mov
mov
and
test
mov
pop
hlt
xchg
mov
out
es
hlt
push
xor
test
repz
cmp
ret
xchg
lcall
xor
js
sbb
pop
cmp
push
int
add
and
jbe
cmc
dec
mov
ds
lods
rcll
enter
jnp
sbb
das
movb
push
mov
add
mov
push
fcom
out
arpl
jae
les
cmp
insl
sbb
test
dec
pushf
pop
add
enter
push
and
mov
lea
xchg
jb
dec
or
rol
out
ja
push
xor
dec
jmp
scas
pop
jecxz
mov
jnp
ds
xor
iret
movsl
mov
cmp
dec
roll
insl
fsubs
in
sarl
outsl
sbb
sti
dec
and
dec
dec
inc
push
lret
sbb
jecxz
xchg
shrb
push
pop
xor
fmuls
sub
sub
add
inc
xchg
or
jle
mov
jne
lcall
sub
popf
dec
ss
cmp
das
lds
xor
in
xlat
ret
scas
cmp
iret
adc
mov
or
jmp
psllw
adc
in
pusha
movsl
insl
es
es
inc
jmp
cld
mov
dec
daa
sahf
xchg
orb
lods
mov
push
push
mov
add
xchg
adc
mov
mov
jmp
xor
mov
cld
sub
push
mov
dec
lods
in
ja
lock
pop
imul
ljmp
enter
jg
dec
xor
pop
out
mov
xorb
sub
sub
loope
imul
pop
jmp
clc
gs
push
and
pop
and
mov
push
cld
mov
mov
cmp
icebp
push
push
popa
mov
outsl
mov
loope
subl
icebp
sbb
lret
ja
lret
mov
sub
popf
lods
cmp
fs
pop
jg
cltd
push
mov
jbe
sbb
xorb
mov
mov
je
jns
loopne
push
push
mov
pop
lret
loopne
mov
inc
pushf
xlat
into
fiaddl
pop
lods
lock
push
stos
mov
ljmp
jbe
dec
pop
scas
add
nop
cltd
inc
dec
cld
in
in
cli
icebp
xor
mov
int3
cmp
mov
add
outsl
cli
aad
imul
dec
in
xor
or
jne
je
clc
mov
jge
gs
fs
push
or
orb
mov
mov
shlb
hlt
popf
adcb
scas
xchg
xchg
push
dec
nop
dec
push
stos
push
mov
cmp
sbb
popa
js
adc
fs
inc
lahf
xchg
sbb
mov
mov
jp
fsubl
xor
loope
mov
in
jae
movl
cwtl
mov
xor
or
inc
sub
lret
mov
aas
stc
jl
negb
adc
in
sbb
sub
jne
fstpl
add
push
dec
jg
inc
xchg
sbb
mov
mov
std
stc
dec
popa
xchg
ret
adc
scas
or
and
sbb
inc
adc
scas
fwait
scas
and
out
cmp
or
icebp
out
sarb
jecxz
inc
scas
rorb
adc
and
das
clc
scas
push
shl
jp
insl
add
addr16
andl
fs
jmp
aaa
push
or
dec
inc
push
cltd
in
lret
jle
cld
inc
mov
sub
fbstp
insb
mov
add
jnp
movsb
out
test
rorb
mov
mov
cmp
sub
mov
mov
xor
clc
loop
stc
xchg
xor
pop
aad
dec
and
gs
xchg
loop
pop
clc
adc
sbb
inc
insl
mov
das
out
sbb
decl
hlt
xchg
in
sub
sbb
in
in
mov
mov
or
dec
out
rcrb
nop
mov
out
sub
or
mov
stos
dec
xchg
sub
xor
xchg
pop
ss
out
movsb
addr16
test
jne
cs
mov
dec
scas
imul
repz
shrl
cmp
test
das
push
daa
pop
sbb
xor
scas
scas
aad
test
in
or
xchg
jecxz
je
xchg
fcoml
es
mov
lret
xchg
loope
lahf
cmp
inc
pop
or
xchg
sub
cmp
cmp
xor
into
mov
jge
out
cmp
mov
pop
mov
xchg
insb
sub
dec
mov
add
cmp
sub
scas
jg
xchg
pop
rorb
mov
or
jb
add
shlb
mov
clc
mov
push
fs
adc
sbb
lods
bound
ret
push
xchg
stos
in
push
andl
mov
test
jb
mov
in
fwait
xchg
cld
cwtl
call
mov
jmp
std
xchg
push
sub
sub
mov
mov
mov
jp
lcall
mov
bound
pop
stc
aas
ja
mov
pop
ds
sbbl
sub
xchg
lods
mov
push
call
loope
lods
jno
icebp
xor
ret
outsb
bound
outsl
or
or
pop
push
xor
pushf
test
dec
pop
push
mov
xor
fwait
test
push
dec
cmpl
add
adc
rclb
pop
sbb
lret
mov
push
mov
push
cmc
pop
jl
jb
into
mov
leave
ja
sbb
push
xorb
and
xchg
mov
call
imul
xor
cmp
inc
insl
jecxz
xchg
cmpxchg
das
push
pop
sbb
aam
xor
out
push
push
mov
test
pop
xchg
pop
das
xchg
lahf
xchg
popf
jle
pop
and
pop
fimuls
out
movsb
add
nop
inc
clc
fildll
imul
jae
adc
repz
ficoms
xor
dec
mov
leave
mov
fs
jle
ds
stos
cmc
mov
cwtl
lahf
inc
dec
jmp
shll
sbb
xor
test
lret
test
insl
in
pop
daa
mov
mov
aas
adc
pop
imulb
mov
pop
inc
pop
add
adc
mov
xor
mov
mov
xchg
inc
xchg
jg
rep
fdivl
inc
loop
mov
sbb
push
mov
push
push
ds
push
mov
adc
outsb
sub
rcr
sbb
mov
loopne
jb
popa
fdivs
and
aaa
ja
inc
clc
lret
pushf
xchg
cmpsb
sahf
fbld
insb
lock
repnz
mov
jne
push
jb
xchg
sbb
sti
ud2
inc
movsl
lahf
rol
ljmp
test
outsl
fldcw
and
cmp
andl
inc
sbb
cltd
outsl
mov
cmc
mov
call
out
mov
sub
rcrb
int
inc
out
push
shll
outsb
xor
outsb
adc
call
and
dec
es
adc
int
fisubs
fldt
fldt
pop
lret
xor
addl
fidivrl
inc
sbb
lahf
insb
push
outsl
das
or
enter
mov
mov
mov
fisttpll
std
push
mov
cli
daa
mov
push
loopne
jmp
rorb
test
sbb
mov
aaa
cwtl
mov
aad
cmc
inc
sbb
enter
sub
in
add
es
push
pop
test
pop
push
sub
aaa
popa
lahf
cs
inc
dec
mov
stos
xchg
enter
icebp
out
fwait
jb
dec
sub
and
sti
push
xchg
rorl
nopl
push
test
ret
insb
sbb
sbb
or
mov
es
jo
test
lods
xchg
stos
das
fwait
xchg
jecxz
cmp
stc
ror
popf
imul
fnstenv
inc
fcompl
inc
fstps
xlat
mov
lds
lods
cwtl
add
inc
lcall
push
pop
push
jns
jg
imull
aaa
bound
xchg
fsubrl
ja
adc
mov
popa
and
call
jl
cmp
cmp
mov
imul
jle
xchg
xor
xor
dec
in
cmp
pop
fimull
out
cmc
ljmp
leave
pop
or
mov
mov
mov
lods
mov
jl
sub
mov
aad
sub
add
and
mov
mov
jmp
lret
push
cmp
add
mov
push
scas
imul
sub
jbe
dec
add
and
pop
inc
xchg
xchg
xor
adc
leave
aam
cmc
dec
fstpl
outsb
inc
repz
inc
cmp
es
push
mov
daa
pusha
push
pop
addr16
fadd
test
xchg
out
or
into
scas
cmpsl
adc
inc
imul
mov
test
call
subl
aam
std
pop
out
decb
jp
mov
sub
bound
iret
cmpsl
push
dec
test
mov
sahf
push
mov
xor
mov
cmp
ljmp
mov
or
push
fwait
mov
int3
in
jbe
repnz
pop
lds
repnz
mov
fldl2e
adc
shlb
lret
in
testl
in
ret
ss
sub
fildll
or
mov
push
pop
cmc
fldcw
bound
jl
cmpsl
xor
test
mov
or
sub
inc
adc
mov
lahf
sbb
inc
shll
dec
fcom
dec
test
add
out
cmp
addr16
mov
xchg
dec
arpl
xchg
push
aas
inc
dec
rcrl
dec
data16
and
fwait
rcrb
outsb
xchg
jbe
mov
aad
hlt
pop
jmp
test
lea
sub
filds
ljmp
jae
or
xchg
nop
std
clc
and
lods
movsb
and
cltd
push
mov
or
dec
sti
adc
sbb
sbb
jne
xor
and
pop
in
bound
add
lcall
sbb
or
jnp
cmpl
enter
jbe
repnz
and
sbbl
push
pop
aaa
add
inc
adc
nop
iret
cmpsb
enter
sub
popa
cmp
mov
inc
out
movsl
mov
in
repnz
sbb
sbb
sarl
sub
in
mov
orl
aam
out
outsl
movsb
in
psrad
dec
and
in
mov
mov
loop
mov
mov
dec
inc
push
std
cmpsl
stos
scas
xchg
lret
jns
in
sbb
jge
or
adc
xor
xor
jge
xchg
das
jbe
and
in
and
jno
cmpsl
dec
xor
je
pop
and
fs
mov
push
sbb
mov
xchg
cltd
popa
xchg
push
sti
nop
or
ja
pop
in
and
add
std
scas
xor
mov
lret
bound
xlat
dec
hlt
outsb
loope
insb
pop
outsb
mov
cs
jg
push
xchg
adc
lock
dec
jge
push
sub
and
and
dec
xor
push
or
push
call
out
xchg
xchg
cmc
add
insb
jle
cmp
jns
icebp
out
ja
insb
cmpsl
cmp
shlb
dec
and
sub
sbb
push
les
lcall
fnstenv
cmpsl
sub
fcoml
jmp
dec
sbb
lcall
jae
push
xchg
dec
xchg
ror
iret
push
scas
idivb
sbb
fmull
imul
xchg
sbb
add
add
cmpsb
add
inc
fmulp
cli
mov
sub
das
xchg
or
rcr
outsb
imul
int
adcb
adc
mov
xor
lock
mov
fmull
cmc
icebp
pop
xchg
adc
jl
push
gs
shr
xchg
or
adc
push
or
xor
push
popl
into
pusha
mov
arpl
add
mov
rclb
cmp
shlb
xor
jo
sbb
movsl
jae
mov
mov
ret
in
xchg
clc
adc
scas
cld
sbb
add
insb
mov
gs
adc
popf
xor
outsl
sub
jbe
outsb
in
enter
push
cmp
cwtl
push
aas
mov
decl
inc
fisubrs
dec
pushf
lock
movsl
fdivl
stc
push
add
pop
adc
inc
fldenv
stos
jecxz
dec
imul
pop
loopne
xor
jb
jl
lock
sbb
mov
ss
dec
cmpsl
aaa
inc
mov
leave
add
add
push
les
stos
shrb
int3
jnp
mov
mov
mov
lcall
scas
mov
xor
or
inc
xor
mov
cwtl
mov
xchg
ss
push
push
in
xor
mov
aas
sbb
adc
sbb
and
sbb
stc
xchg
scas
aaa
adc
imul
pop
mov
stos
xchg
aad
or
cltd
cmp
lret
loope
insb
push
lock
gs
mov
scas
adc
test
fs
shlb
lea
out
fldl
scas
and
cmp
mov
stos
and
dec
lods
fldcw
push
add
ja
test
cmp
sub
insl
mov
jg
inc
cs
mov
in
push
adc
lret
dec
movsl
bound
das
xor
loop
call
loope
adc
push
sbb
fdivrs
shrl
sub
outsb
gs
add
js
sahf
es
sbb
adc
mov
ljmp
outsl
dec
push
cmpsb
fucomip
popf
mov
xchg
ja
adc
and
nop
sbb
push
lret
and
cmp
jp
out
jbe
ja
adc
aas
mov
or
xor
push
sub
test
int
insl
add
inc
iret
insl
outsl
cmp
inc
inc
mov
cmp
xchg
sub
bnd
sbb
sbb
aam
inc
imul
adcb
xorl
or
xchg
xor
mov
mov
pop
jno
adc
call
inc
icebp
xchg
popa
sbb
sub
mov
leave
test
lret
add
ret
pop
jecxz
xchg
lds
mov
loop
fsts
push
cli
xchg
cmpsl
das
out
xchg
push
ret
cli
enter
not
mov
lods
cli
push
xchg
mov
and
es
cmp
rclb
daa
sahf
mov
imul
jno
mov
jbe
inc
jg
mov
jns
mov
notl
mov
push
out
inc
add
push
lret
shlb
aam
scas
popa
mov
cltd
xor
aam
adc
sbb
sub
mov
fucom
out
sti
and
bound
cmp
inc
jae
cmp
je
add
pop
push
dec
cmp
mov
ljmp
cmc
sub
loope
or
or
sbb
or
xchg
mov
gs
or
repz
push
push
negb
jns
lock
jno
pop
cmpsb
add
cmpsl
sub
jo
inc
iret
mov
ret
aas
inc
xor
mov
cmp
jg
stos
mov
popa
jnp
lea
jp
mov
pop
lods
scas
fidivrs
xor
jp
pop
pop
cmp
mov
insl
andb
fs
fs
sbb
inc
aaa
das
fnstsw
daa
jge
outsl
lods
ds
xlat
call
pop
sbb
ret
mov
inc
lret
movsb
dec
pop
outsl
les
negb
xchg
mov
jecxz
xor
xorl
or
pusha
and
xchg
pop
fidivl
mov
repz
daa
add
test
movsl
loope
or
aam
dec
jns
dec
out
outsl
mov
mov
fwait
add
and
scas
stc
dec
push
negb
cmpsb
sub
push
dec
add
daa
test
out
ss
cmpsb
and
sub
sahf
xlat
jb
jbe
mov
sub
leave
mov
testb
les
add
je
jg
in
pop
xor
xchg
xchg
rcl
or
xchg
cltd
and
insl
add
lea
sub
cmp
mov
dec
inc
add
stos
jmp
and
outsl
aam
jns
push
movsl
enter
mov
gs
push
outsl
into
xchg
ja
sbb
leave
and
xchg
mov
insl
cmp
fidivs
loopw
test
movsb
xor
popa
rol
pop
mov
mov
mov
inc
stos
fs
neg
mov
repz
adc
in
ret
sub
mov
cmc
and
sbb
movzwl
push
add
in
push
enter
sarb
jmp
mov
arpl
jp
adc
dec
std
inc
jb
in
in
add
es
push
pusha
xchg
mov
arpl
cli
mov
das
aas
ret
stos
xchg
and
insb
rcl
pop
sub
sub
std
fcmovbe
cmpsl
xor
loopne
sbb
adc
xchg
jbe
inc
cmp
jmp
rcrl
pop
std
lret
popf
lahf
in
add
out
arpl
je
leave
cwtl
pop
xchg
mov
add
fcompl
add
fsubrl
arpl
mov
jb
das
imul
jg
es
lds
inc
test
pop
jmp
dec
mov
xlat
imul
imul
xor
mov
fildl
or
scas
nop
aad
out
ret
cmp
in
int3
call
lahf
push
push
aad
pop
out
mov
mov
lret
outsl
jle
loop
pop
add
mov
or
adc
cld
les
stc
in
out
jp
mov
out
cltd
imul
and
lea
arpl
jnp
mov
lods
mov
push
pop
xchg
pop
adc
jno
adc
push
clc
push
sbbb
repz
repnz
loopne
pop
xor
scas
add
jmp
mov
in
in
pusha
add
out
aaa
mov
mull
xlat
mov
minps
ficompl
pop
fs
scas
popf
xchg
in
js
push
sbb
fsubrs
test
mov
in
mov
out
enter
and
call
add
pop
jno
and
call
dec
sahf
ja
cmp
and
jb
cmpsl
mov
cmp
repz
inc
sti
enter
clc
in
mov
dec
push
cli
test
mov
dec
lock
dec
movsl
or
add
cmc
xlat
rolb
or
jg
out
ficompl
lods
inc
data16
sub
mov
mov
int3
and
lods
mov
popf
jmp
repz
cmp
mov
stc
and
xchg
cmp
test
mov
jmp
adc
dec
xchg
cmc
mov
je
aas
lcall
xchg
stos
mov
xchg
test
mov
jbe
push
loop
adc
subb
pop
xchg
dec
cltd
sbbb
mov
pop
pop
push
sub
inc
fisubrl
mov
pop
jge
clc
add
fadd
dec
adc
call
out
xchg
or
xor
daa
jmp
arpl
or
xorl
scas
push
inc
mov
out
inc
jl
lret
adc
imul
add
add
cmp
push
rol
pop
xchg
sub
mov
pop
out
inc
aad
push
or
pop
or
mov
idivl
and
mov
mov
insl
add
inc
push
in
push
hlt
hlt
dec
mov
orb
stc
fadds
int3
aaa
fcomps
addr16
jle
test
xchg
call
pop
xchg
pop
fiadds
enter
aas
pop
lods
push
bnd
add
cltd
lods
or
sub
jecxz
mov
add
fstl
xchg
les
cwtl
loop
das
outsl
scas
rcl
call
cmp
inc
mov
or
xchg
out
xlat
push
sbb
jbe
pop
pop
or
sti
inc
pop
jo
aam
pop
mov
ds
or
ud2
push
mov
mov
cld
xchg
dec
jbe
notb
outsl
int
add
sbb
mov
add
sbb
pop
icebp
mov
mov
xor
cmp
inc
pop
or
push
push
ret
lcall
pop
ret
jae
jecxz
leave
mov
movnti
mov
in
sbb
mov
test
cs
out
inc
into
push
dec
and
inc
pop
sub
in
and
sub
push
adcl
inc
aad
data16
cmp
xchg
pop
or
stos
mov
sub
outsl
mov
pop
cmpsl
iret
decb
fwait
dec
out
xlat
cltd
loop
ficompl
cli
jo
push
popl
or
movb
icebp
pop
add
mov
cmp
imul
lods
or
inc
push
lods
hlt
or
repnz
call
and
jl
adc
sub
adc
addb
fisubs
out
push
mov
mov
in
and
xchg
daa
in
pop
js
std
outsl
outsl
pop
dec
mov
inc
or
in
and
nop
std
lods
jle
imul
push
pop
push
mov
insb
lods
add
mov
popa
bound
dec
adc
aas
or
out
andl
and
xor
test
int3
jnp
int
cltd
loope
cli
pop
insl
add
dec
xchg
stos
mov
aam
stos
adc
mov
xor
icebp
fwait
pop
lods
scas
shlb
int
cld
sub
jg
pop
mov
outsb
push
mov
cmp
arpl
test
stos
lret
int
rcrb
jle
sarl
enter
es
ja
ss
add
cmpl
stos
cli
sbb
dec
push
std
or
xchg
adcl
push
pop
or
out
jecxz
sub
in
inc
stos
repz
hlt
push
dec
mov
test
shrb
cmp
mov
sub
imul
or
shrb
mov
loop
add
add
in
leave
sahf
test
mov
mov
adc
jmp
mov
cmp
lret
add
cmpsb
hlt
or
adc
sarl
js
js
add
outsl
sub
inc
test
ret
sub
dec
push
scas
jns
dec
inc
fldenv
mov
mov
test
daa
bound
jl
and
fs
lahf
add
iret
out
loop
mov
imul
fidivrs
jmp
lret
bound
adc
xchg
or
add
inc
sub
xor
test
les
testb
cmpsb
fwait
insb
xchg
insb
or
fsubr
jmp
push
dec
mov
xlat
clc
daa
scas
jae
and
and
sti
test
jge
fiadds
nop
int3
xchg
call
mov
test
jp
push
outsb
cmpsb
leave
dec
inc
in
mov
stc
cmp
jmp
int3
dec
pop
ja
dec
add
cmp
das
jle
fwait
nop
inc
imull
adc
notl
cmp
cmp
or
pop
mov
stos
fs
push
lock
add
leave
inc
mov
int
popa
pop
inc
jp
movb
jecxz
outsb
pop
clc
and
cli
jo
aaa
lret
outsl
sahf
lods
popa
pop
es
xchg
idivl
pop
int3
pop
cltd
std
enter
js
popf
cltd
arpl
pcmpeqw
cmc
push
dec
or
movsl
pop
lahf
jecxz
je
xchg
dec
add
out
or
mov
cmc
out
not
mov
fidivrl
inc
cmpsl
add
lods
in
repnz
mov
adc
adc
cmp
add
xchg
fcoms
jge
xchg
dec
cmp
inc
jecxz
push
es
clc
xor
cld
xor
xor
popf
sbb
test
shrl
mov
jno
cmp
mov
arpl
arpl
fdivrs
push
inc
pop
mov
mov
add
jno
ljmp
cs
test
sub
add
test
sub
ljmp
div
mov
ffree
idivb
or
repnz
sub
lahf
push
test
test
cmp
std
cmp
int3
xlat
out
jns
decl
popa
cmpsl
adc
sbb
cmp
fists
lods
call
push
jl
jle
pop
jecxz
cmp
cmp
shrl
jbe
fists
ja
js
or
scas
push
jbe
repz
not
pop
mov
ss
jno
lds
dec
les
out
scas
add
and
sbb
pop
lret
hlt
sub
stos
fsub
pushf
arpl
idivl
inc
aas
stos
mov
pop
shrb
inc
pop
pop
inc
push
jmp
pop
je
fs
jl
push
inc
sub
dec
xor
adc
test
insb
in
scas
loop
fwait
cmp
sbb
mov
add
pop
xchg
add
inc
sub
inc
ljmp
mov
xchg
dec
xor
mov
aas
cmpsb
dec
ds
and
xor
incl
in
mov
adc
adc
cmp
and
cmp
cli
sub
test
jae
push
jmp
mov
add
sbb
pop
mov
vmread
dec
fisubl
ljmp
rolb
pop
inc
mov
addr16
xchg
cld
sbb
mov
call
out
in
das
lahf
push
je
mov
add
mov
pop
and
lret
push
repz
cmp
sbb
mov
jbe
adc
fistpl
fstpl
mov
jae
call
xor
je
cmp
fnstcw
or
jne
das
int3
pushf
mov
cmpsl
pmulhw
mov
aad
mov
js
cli
add
aam
insb
lock
pushf
add
cmc
stos
enter
dec
fcomps
icebp
adc
scas
jo
mov
push
mov
repnz
adc
aaa
lahf
sbb
sub
add
pop
lds
arpl
xor
fdivl
insb
mov
inc
data16
pop
add
js
cmp
xor
cmpsl
push
inc
push
lret
imul
push
sub
rclb
xor
loopne
arpl
outsb
lea
movsl
add
jge
dec
outsl
cmpsb
shr
out
push
movsb
scas
in
arpl
mov
mov
push
mov
and
mov
shl
push
shl
fdivs
add
std
std
nop
mov
mov
test
insb
mov
or
and
das
mov
dec
dec
xchg
lock
sbb
dec
cmpsb
lods
xor
add
sbb
test
imul
addr16
adc
fs
ret
loop
mov
jae
mov
insl
cmp
ret
xor
adc
and
cmp
outsb
mulb
jne
scas
sbbl
jne
notl
mov
push
stos
xlat
stos
lret
push
inc
jg
jp
inc
les
clc
lahf
cltd
cli
cmpsl
push
xchg
insl
sub
divl
outsl
and
rcr
inc
stc
insl
xlat
repnz
lock
mov
imul
jle
ret
and
add
sub
jnp
pop
repz
dec
pop
int3
sbb
test
sbb
xchg
xor
enter
inc
je
jge
hlt
es
test
js
dec
dec
lret
js
test
xchg
sub
iret
push
testb
adc
mov
mov
mov
jns
and
iret
bound
lret
push
push
push
pop
imul
xchg
xlat
sahf
push
xchg
enter
fcmovnbe
stos
and
faddl
jbe
mov
je
fst
jl
xchg
fimull
in
rorl
lcall
jp
ret
out
jb
inc
jnp
in
dec
lods
xor
push
fsubp
nop
inc
aad
push
popf
insb
xchg
mov
js
push
mov
in
mov
fimuls
sub
out
je
sub
and
dec
push
cmp
mov
sub
push
lods
and
lret
cmp
dec
cmp
and
icebp
push
pop
mov
sub
dec
ljmp
mov
xor
sbb
sub
loop
subl
enter
inc
lock
in
popa
aas
pop
mov
adc
inc
inc
test
inc
nop
cmp
pop
ret
push
mov
xchg
sbb
in
mov
jb
jne
mov
sbb
stc
insb
mov
xchg
adc
fs
jb
xchg
jl
idiv
push
rolb
sbb
mov
test
jmp
mov
fistpl
ret
push
aaa
jbe
push
mov
pop
xchg
decb
aas
inc
add
js
mov
test
faddl
popa
enter
int3
inc
mov
xchg
ss
push
data16
mov
push
jg,pn
cmp
sub
or
loope
mov
cltd
add
and
jb
idivb
jno
pop
xor
mov
mov
flds
inc
fmull
xchg
js
ss
mov
jp
push
pushf
cli
test
push
push
and
dec
sub
mov
lea
pop
pop
inc
ret
loopne
jecxz
inc
inc
outsl
pop
shr
add
out
push
lea
pop
xchg
pop
jmp
push
mov
xor
push
push
loop
test
push
push
repz
out
add
push
filds
push
jns
mov
cmp
hlt
imul
fidivrs
cmp
fsub
pop
xchg
out
imul
mov
out
orl
mov
ds
dec
or
ljmp
sub
ljmp
cmp
xchg
add
xchg
ja
ret
arpl
test
adc
mov
clc
inc
sbb
sub
mov
fists
inc
mov
mov
jl
stos
xor
int
pusha
loopne
mov
andl
js
or
xchg
mov
testl
xchg
sbb
imul
popa
jne
dec
test
loopne
pop
lods
js
rclb
xlat
es
mov
mov
into
mov
clc
fldcw
cmp
and
roll
jecxz
bound
sahf
push
pop
add
iret
sub
loopne
jge
out
and
pop
and
mov
mov
mov
jp
es
cltd
adc
aam
jb
and
mov
outsb
sahf
xor
xchg
xchg
out
dec
iret
sub
dec
cmp
mov
pop
cmp
xor
or
xchg
jg
outsl
daa
aad
js
nop
lahf
push
scas
push
mov
xor
cmp
adc
lcall
inc
insb
jp
cltd
fwait
cwtl
int
or
sbb
nop
fisubrl
mov
jb
add
lods
lcall
fstpl
mov
insb
movsb
sar
nop
jae
or
pop
jmp
imul
mul
ljmp
scas
push
rolb
cld
repnz
mov
test
dec
jb
xor
jne
cwtl
fistpl
inc
notl
addr16
leave
div
jmp
rcrl
cmpsb
hlt
push
dec
jne
push
sub
jbe
mov
dec
fstl
push
movsb
jno
std
pop
rol
pop
push
dec
pop
fcmove
xchg
mov
inc
push
jns
cmp
clc
mov
aam
cmp
push
aas
sub
lret
inc
push
hlt
push
cltd
push
push
jae
pop
out
mov
push
sbb
sub
stos
aad
lcall
lahf
ret
gs
out
push
mov
frstpm(287
adc
cld
xchg
pop
repnz
mov
lds
inc
dec
pop
sbb
mov
adc
repz
mov
pushf
xchg
adc
cmpsb
jle,pn
jo
mov
jno
jnp
mov
mov
pop
cld
mov
mov
cmp
cmpsl
sbb
push
xchg
mov
leave
loope
icebp
xchg
dec
out
sub
ror
or
adc
hlt
cmp
pop
pop
mov
cld
adc
cmp
jl
and
or
out
out
insl
pop
ret
pop
adc
leave
push
std
mov
sarl
loope
push
push
jmp
adc
fs
and
pusha
loope
popf
std
add
in
add
mov
push
insb
add
jecxz
aaa
arpl
out
cmp
andb
rcr
fsubs
and
xor
pop
jb
idivb
mov
imul
ljmp
insb
fdivr
xor
and
mov
push
mov
iret
pop
lock
arpl
mov
inc
and
dec
jae
les
enter
popf
ret
pop
cmp
sarl
cs
sahf
jne
ljmp
enter
xchg
mov
cmc
repz
and
cwtl
lret
sbb
mov
sbb
fisubrs
pop
cs
cld
jl
pop
push
jb
ja
add
out
mov
sbb
and
cmp
lods
in
dec
outsl
add
jbe
cmp
xchg
fdivs
mov
push
or
fnstsw
fcoml
xchg
inc
jnp
movsl
mov
popa
js
in
push
dec
daa
gs
jmp
out
pop
test
mov
outsl
mov
xchg
imul
out
loopne
leave
sbb
sahf
dec
mov
pop
inc
pop
arpl
dec
lock
sbb
fwait
sub
cmp
aas
or
jecxz
push
aad
hlt
cmpsl
in
daa
movsb
aad
or
jne
jnp
ljmp
hlt
inc
cmp
ret
pop
fcompl
jo
add
mov
outsb
stos
cltd
sbb
jl
add
mov
loop
push
push
push
push
test
movsl
scas
xchg
insb
jl
sub
dec
sbb
and
test
mov
ret
mov
jnp
call
arpl
adc
push
xchg
jbe
mov
outsb
in
jns
xchg
adc
movsb
fisttps
adc
rcrb
jns
js
bnd
scas
fisttpll
mov
insb
jl
jecxz
adc
push
in
sbb
fs
push
push
sub
iret
idiv
jmp
dec
sti
xchg
loopne
into
repz
or
jnp
push
loop
fadd
pop
icebp
mov
push
sti
or
imul
out
cwtl
and
push
out
and
daa
pop
or
dec
leave
sbb
dec
imul
icebp
inc
sbb
and
loopne
loope
xchg
cs
loopne
mov
gs
pushf
and
xor
sarl
shrb
insl
icebp
mov
loop
aaa
xor
frstor
cmpsb
jae
push
test
sub
xor
lods
stos
decl
orl
addr16
cmp
mov
cmp
in
xorl
cmp
out
inc
dec
xor
mov
xchg
stos
xor
xchg
and
inc
pop
push
cli
mov
out
iret
clc
movsl
cmp
add
lods
addr16
mov
lret
icebp
aaa
jb
xchg
les
popf
inc
outsb
sub
xchg
loop
pop
mov
das
mov
mov
mov
adc
andb
or
jne
jg
sub
and
cltd
andl
sub
not
pop
xor
fwait
inc
jbe
mov
mov
fwait
mov
shrb
divb
addl
js
add
leave
shl
inc
negl
subb
mov
outsl
int3
adc
xchg
mov
adc
outsl
xchg
adc
cmp
mov
xorl
dec
push
sahf
lea
mov
add
out
xchg
mov
ljmp
push
scas
dec
cmp
dec
cld
inc
sbb
test
mov
test
pop
ds
and
jge
out
ficoms
fstl
lret
into
inc
daa
in
xchg
xor
mov
movsb
adcb
mov
call
mov
dec
pop
lahf
adc
popf
xchg
arpl
cmp
sbb
xchg
arpl
or
pop
push
push
shlb
cmpsl
push
gs
add
cmpsb
pop
mov
call
fistpl
or
lahf
fadd
test
scas
repnz
decl
fisubrl
and
js
sbb
scas
xchg
fnstsw
nop
xor
mov
in
out
adc
stos
stc
xlat
jno
sbb
fiadds
rol
and
mov
pop
add
mov
aaa
push
lret
xchg
ficoml
pop
shrl
add
add
cld
pop
rol
mov
xchg
loope
scas
clc
adc
sbb
outsb
push
inc
les
mov
sahf
inc
loopne
jns,pt
xchg
or
outsb
outsb
ret
mov
push
fs
mov
movsb
push
sub
fwait
pop
mov
mov
mov
dec
lret
mov
jmp
cwtl
repz
bound
mov
pop
inc
test
mov
mov
je
mov
mov
jae
imul
mov
push
pop
popf
and
ret
adc
jg
dec
repz
fdivl
cmp
sbb
inc
fstps
sub
imul
fmul
jns
in
test
pop
lock
sub
stos
adc
xchg
pushf
cmp
inc
xor
fs
mov
cltd
insl
fadd
movsl
ja
mov
ljmp
sbb
and
inc
cli
inc
push
negl
imul
push
cli
add
inc
nop
sub
or
jg
or
dec
mov
mov
mov
pop
icebp
mov
cmp
jns
ds
inc
pop
mov
or
and
sbb
repz
inc
xchg
int3
cmp
fdivrs
stos
fildll
adc
out
outsl
scas
mov
cmp
add
lret
mov
int3
bound
js
xor
clc
aam
ss
jno
mov
xchg
sbb
jle
pushf
pop
xor
mov
pcmpgtb
sub
cwtl
push
mov
pop
adc
iret
nop
loope
sbb
add
mov
push
jg
rorl
movsl
or
int
dec
in
popf
sbb
aas
aas
cwtl
in
mov
mov
mov
scas
jnp
in
jmp
jbe
and
fwait
add
call
popa
ficoms
stos
out
cmc
fldt
aam
add
ret
inc
lods
nop
push
push
pop
mov
xchg
incb
sub
pop
repz
cmp
loop
lcall
data16
mov
xor
subb
inc
aam
or
nop
xor
popf
mov
insl
pcmpeqb
mov
scas
cwtl
sub
sbb
pusha
gs
sbb
bound
or
mov
sahf
test
pop
push
gs
loopne
call
inc
ds
aad
ja
ffreep
push
mov
cmp
sbb
xchg
mov
and
aad
pusha
or
fldl
mov
push
fnstsw
les
or
sub
arpl
sub
fsub
jge
add
xchg
mov
out
and
bound
pop
push
enter
push
fisubl
and
jns
add
mov
out
movsb
inc
je
mov
pop
adc
repz
in
cli
push
mov
shll
pop
cmp
sbb
jne
lret
mov
call
scas
jo
cs
icebp
add
insb
push
and
mov
inc
push
mov
pop
addr16
dec
add
xlat
icebp
ja
or
mov
lods
in
sub
sbb
ds
lahf
adc
dec
inc
mov
mov
jmp
sbb
mov
in
mov
push
sbb
popf
subb
repnz
gs
scas
pop
bound
mov
icebp
push
stc
cmc
idivb
in
fisubl
mov
sbb
scas
xor
aam
sub
and
or
jnp
pop
popa
mov
mov
xchg
jae
insb
sub
sahf
jg
and
mov
pop
mov
in
pop
mov
fs
pushf
sub
je
pop
mov
inc
cli
das
mov
dec
push
pop
jge
sub
inc
mov
push
lock
jno
cmc
cld
or
xchg
mov
lods
cmpsb
gs
je
adc
test
sub
insb
pop
xorl
mov
xchg
in
cmp
loope
test
popf
dec
dec
pop
int
pop
xchg
das
jl
imul
repz
inc
dec
cmc
mov
push
out
adc
call
pop
sti
push
mov
jae
pop
loope
lods
hlt
mov
xchg
mov
adc
inc
push
cmp
inc
call
mov
nop
and
mov
dec
popa
out
cltd
cmp
add
bound
in
das
aaa
movsb
pop
cmc
push
ss
mov
xlat
xor
mov
mov
pop
pop
or
push
insb
out
rcl
fsubrp
roll
cmc
mov
cmc
repnz
cmp
test
stc
xchg
mov
lret
pop
mov
sub
or
push
xor
and
inc
loop
lcall
mov
xor
sar
nop
mov
or
mov
loope
mov
and
inc
xchg
push
jae
subl
arpl
cmpl
int3
sub
xor
jp
out
push
pop
pop
cs
dec
mov
dec
or
or
jbe
pushaw
xor
loop
aaa
jl
movb
cmp
or
pop
jge
mov
mov
movsl
xlat
in
fimull
add
mov
jp
sahf
adc
or
dec
gs
outsb
sbbl
popf
inc
cmp
je
arpl
xor
and
or
int
daa
dec
mov
xchg
xchg
mov
insl
jae
jns
adc
dec
int
sbb
aam
gs
and
call
jg
pop
fistl
xor
xchg
imul
loop
mov
push
or
rorb
and
or
jno
sbb
push
xchg
jg
dec
sub
sub
xchg
aas
subl
stos
pushf
sbb
cs
inc
mov
pop
outsb
hlt
sub
inc
jmp
push
aam
mov
fs
ret
lock
push
mov
ret
sti
dec
fwait
adc
js
js
mov
imul
or
adcl
fld
inc
enter
sub
or
pop
mov
das
sarl
int3
pop
jne
sbb
jmp
mov
mov
add
rorl
or
mov
fsubrs
repz
mov
jae
push
mov
sbb
in
mov
pop
fwait
sub
enter
cmpl
testb
out
loopne
inc
or
push
mov
int3
jns
cmc
clc
out
xchg
xchg
xchg
dec
mov
lret
mov
sub
push
nop
out
scas
pop
and
and
cwtl
xchg
mov
cmp
fnsave
inc
inc
adc
adc
ja
jg
sbbl
shrb
int
movsl
mov
add
gs
jb
shlb
mov
mov
dec
inc
sahf
fldl
out
dec
add
push
mov
jns
mov
jae
ret
imul
jmp
push
clc
xlat
sub
mov
rol
adc
pop
cwtl
out
in
inc
and
les
aaa
push
cmp
and
stc
adc
push
lock
iret
test
adc
push
stos
jle
mov
mov
xor
cmp
aam
dec
popl
xchg
nop
jle
mov
fidivrs
push
push
cli
lods
jecxz
imul
mov
jbe
sub
in
mov
mov
inc
add
fwait
sub
orl
jge
mov
dec
out
and
add
outsl
out
cli
div
cmpsb
add
out
cwtl
inc
sbb
call
or
dec
lret
sti
sbbb
out
jle
fisttps
xor
mov
sub
adc
mov
cmp
je
jne
push
daa
fs
cs
sbb
les
pop
fwait
std
mov
sub
cltd
cmp
push
cmpl
andl
jb
add
push
cs
push
push
push
cli
out
push
sbb
ss
mov
xor
cmp
ds
mov
adc
sti
movsl
or
cmc
dec
icebp
es
adc
mov
xchg
and
jmp
in
mov
dec
inc
add
ds
mov
stos
push
or
in
lock
dec
mov
adc
push
lea
mov
push
cmc
and
adc
mov
jae
test
sbb
xor
push
cmc
pop
sbb
rcrl
fsubs
and
popa
or
xlat
loop
sbb
into
and
push
loopne
iret
sub
cli
mov
sbb
and
xchg
inc
es
pop
imul
and
js
ret
movsl
into
bswap
pop
adc
std
pop
mov
loop
pop
jg
inc
std
shrb
imulb
dec
dec
movsb
aad
fisubl
stos
xchg
jno
mov
aaa
or
jmp
divl
add
loope
addr16
jmp
inc
nop
jp
ret
ljmp
loopne
fists
pop
mov
sub
icebp
cld
sub
dec
add
pop
push
ficompl
daa
adc
aam
and
xchg
int
call
mov
stos
enter
mov
sub
nop
out
cli
sub
inc
cwtl
scas
and
mov
es
mov
in
fs
push
fiaddl
aaa
pop
call
and
mov
stos
sbb
or
imul
sub
mov
incb
rorb
insb
sbb
aaa
clc
mov
inc
fisttps
fbld
push
add
sub
loopne
test
rcr
push
mov
xchg
xchg
shrb
enter
pop
fptan
mov
xor
pop
int3
out
int
test
push
divl
sbb
sbb
lcall
pushf
inc
sbb
jns
and
mov
imul
sub
xchg
ret
mov
jp
sbb
cmpb
cmpl
mov
adc
ljmp
sub
xchg
leave
sbb
jb
inc
lcall
mov
ss
pusha
loope
lret
leave
push
out
adc
pop
pushl
adc
out
frstor
stos
addr16
lret
push
sbb
adc
jmp
sbb
jo
ljmp
pop
cwtl
and
loop
xchg
andl
sub
push
inc
xor
lock
xchg
cmp
inc
in
xchg
in
divb
shrb
and
dec
enter
jo
rorb
adc
movsl
cli
fisubrs
jbe
adc
dec
adc
jg
mov
jmp
ja
inc
jle
es
popa
ror
dec
incl
cmpb
loope
nop
pop
pop
mov
xor
les
cld
sub
xchg
ss
stos
mulb
movsb
int3
add
repz
aam
mov
adc
and
aam
and
cwtl
testl
jmp
cli
lea
and
scas
hlt
adc
xor
adc
or
imul
inc
dec
pusha
hlt
pusha
push
or
adc
cltd
aam
add
cmp
in
outsl
test
mov
xor
test
in
xor
jns
adc
and
lds
fisttpll
or
and
fcomps
bound
sbb
and
xor
inc
xor
loopne
add
or
or
idiv
loop
test
pop
mov
nop
mov
daa
cmc
xor
leave
or
lock
aaa
addr16
movsl
dec
jge
sub
mov
push
cmpsb
ja
jp
push
mov
mov
and
lret
rolb
pop
adc
inc
shll
cmp
out
jle
sub
cmp
cmc
adc
je
cmp
cmp
negb
sbb
mov
lcall
jns
call
mov
rcrb
icebp
mov
hlt
sub
lock
daa
jo
pop
loope
pushf
cmpsl
popa
pop
dec
mov
xor
arpl
inc
dec
sbb
jecxz
cmpb
pushf
mov
aaa
add
test
push
test
mov
inc
test
in
push
cmp
movsl
addl
insl
sub
adcb
lods
push
lahf
cmp
xchg
mov
mov
scas
pop
add
shrb
push
push
jo
inc
std
sub
cwtl
data16
pop
or
imul
xor
mov
jb
or
hlt
subb
rolb
sub
out
jno
mov
xchg
and
fmul
and
mov
test
cwtl
dec
jmp
fsubrl
pop
clc
test
fbstp
stc
loope
cmpsl
push
pop
fstps
cmp
or
nop
mov
mov
loop
sub
dec
je
inc
mov
cli
gs
adc
mov
ljmp
and
add
and
pop
scas
and
add
divl
dec
jb
mov
jae
push
lock
jne
loopne
adc
jg
bound
pop
gs
sbb
jg
mov
adc
enter
out
icebp
push
out
mov
mov
inc
push
pop
add
aas
test
ret
jl
pop
sbb
push
push
push
jg
adc
es
push
in
adc
outsl
xrelease
sub
fstpt
lret
out
mov
mov
dec
and
or
or
xlat
mov
pop
or
aad
cmp
mov
adc
fldenv
or
sbb
in
dec
gs
xchg
test
mov
cld
cmp
adcb
aaa
lret
fdivrl
xor
cltd
je
pusha
ja
cmpsl
sub
sub
rcll
jae
mov
ljmp
cmpl
xchg
icebp
xor
in
inc
mov
rorl
and
movsl
loopne
rolb
dec
xor
add
xchg
inc
push
jp
add
adc
imul
mov
xor
fcmovb
test
jmp
in
and
pop
movsl
imulb
loopne
out
pop
xchg
jl
rcr
cmp
mov
adc
in
cli
insb
mov
mov
lock
xchg
imul
sub
and
push
mov
in
mov
jp
inc
and
test
shll
sbb
add
iret
mov
addb
sbb
iret
xchg
push
mov
mov
sbb
scas
call
add
mov
sbb
ret
sbb
and
push
push
dec
scas
pop
push
imul
insl
adc
enter
inc
jge
jmp
or
push
aam
adc
inc
adc
inc
movmskps
inc
insl
add
xor
outsb
cld
fbstp
fs
cmp
inc
xor
adc
lock
xchg
negb
xchg
dec
dec
repnz
aam
imul
cmp
add
and
jmp
out
call
adc
orb
cmp
xchg
cmp
cli
mov
inc
pop
mov
in
dec
xor
mov
lods
dec
jns
call
lret
stos
shlb
arpl
jmp
adcl
ljmp
test
xchg
pusha
imul
test
repz
dec
loope
cmc
nop
aam
push
push
mov
xchg
shl
jl
subl
test
test
lock
aad
xchg
and
jno
stos
lds
ja
xchg
jg
stc
mov
xor
je
mov
scas
pop
pop
insl
movl
bnd
sbb
xchg
loop
int3
or
and
addr16
jbe
pop
mov
inc
mov
xor
leave
cli
in
dec
pop
and
movsb
dec
xchg
push
cli
pop
stos
cwtl
and
enter
test
stos
add
mov
imul
scas
rcr
test
jnp
out
orl
cld
cmpl
or
std
sbb
push
pop
xor
pop
inc
fs
roll
jge
add
push
adc
imul
imul
clc
enter
xchg
xchg
arpl
je
stc
mov
test
lahf
inc
loopne
lock
aad
inc
and
mov
push
xor
stos
fimuls
das
neg
jb
or
mov
cltd
outsb
outsl
jmp
call
inc
push
mov
mov
pop
data16
xchg
jb
sbbb
mov
mov
cmc
fidivl
imul
xchg
pop
mov
xorl
lock
iret
jmp
fcoms
gs
imul
sub
clc
mov
sbb
repz
push
insb
iret
pop
xor
dec
lods
movsb
sbb
jo
add
push
sub
push
cmp
pop
out
xlat
int3
icebp
pushf
sbb
pop
inc
jo
xchg
pop
xchg
jmp
dec
mov
dec
sub
jbe
fnstenv
xchg
loop
mov
jge
mov
imul
dec
imulb
loopne
xchg
push
pop
add
mov
xchg
sahf
cmp
pop
lret
adc
imul
out
scas
push
or
push
test
add
sbb
mov
arpl
ds
pop
push
adc
jne
mov
mov
loop
pop
xchg
ret
jbe
push
dec
jbe
fidivrs
pop
mov
je
out
mov
out
pop
xchg
cld
js
call
and
shll
mov
clc
jno
cmp
fsubrs
aad
out
shl
shl
int3
sbb
aam
xor
cmp
add
lods
hlt
inc
imulb
rorl
movsb
xchg
sahf
pop
lcall
mov
les
mov
arpl
xchg
fldenv
outsb
mov
mov
sbb
jge
sub
and
aad
test
push
hlt
insb
cmc
rorl
jl
mov
mov
lock
and
mov
sahf
lea
jno
les
and
stos
adc
pushf
mov
jae
mov
mov
pop
andb
rcll
mov
fstl
dec
jno
mov
jmp
shrb
cli
pop
test
sbbb
test
shl
icebp
push
cmpb
xchg
out
cli
cmc
xor
jo
stc
ja
test
or
fidivl
jmp
jb
cmp
call
fistl
outsl
xchg
mov
sahf
lahf
xchg
arpl
rsm
daa
mov
stc
cwtl
dec
out
fistpll
gs
fiaddl
std
mov
outsl
jmp
pusha
test
faddp
xor
mov
and
addr16
rorl
mov
add
adc
push
inc
xchg
xor
dec
sub
and
pop
jg
inc
inc
inc
cmc
mov
jle
cmpsl
pusha
cmp
push
xchg
bound
dec
mov
outsl
dec
cmpsl
jmp
loopne
sub
and
scas
push
lcall
bound
jbe
dec
repz
orb
test
test
sub
enter
shll
out
push
sub
pop
lds
jg
jns
adc
cmpsl
push
hlt
mov
sbbb
adc
scas
insb
orb
mov
and
sub
in
and
xchg
pop
jno
mov
xchg
mov
in
cmpsb
aaa
lods
call
stc
cmc
mov
stos
mov
jbe
es
imul
xchg
xor
xchg
lret
pop
inc
test
xorl
imul
or
scas
push
cmp
clc
loopne
fistpl
add
lret
daa
and
call
loopne
add
fwait
pusha
stos
shrb
fs
dec
dec
mov
in
or
dec
test
mov
das
dec
xor
adc
dec
outsl
mov
dec
je,pn
sbb
cli
push
data16
push
push
lock
vmovlpd
stc
nop
xor
lea
dec
xchg
cli
sarl
lret
mov
push
in
or
push
out
sar
dec
cld
ret
lret
in
insl
orl
fdivrl
insb
das
push
sub
or
cmp
dec
inc
rclb
bound
jle
aas
daa
and
dec
xchg
lahf
xchg
ljmp
daa
scas
add
sub
test
dec
lcall
fisttps
and
push
xor
iret
dec
imul
push
push
nop
lock
arpl
or
xchg
mov
into
out
xlat
mov
sbbb
pop
mov
pop
movsb
jno
aaa
rclb
mov
lods
pop
jg
jne
pop
sub
mov
xchg
push
push
mov
fmul
xchg
cld
mov
xlat
mov
daa
cmp
add
push
jno
hlt
pop
mov
mov
sbb
jmp
pop
push
inc
ret
jae
or
clc
iret
call
int3
mov
lcall
aaa
push
mov
je
pop
enter
mov
fdivrl
mov
les
adc
loop
xchg
clc
bound
or
rorb
xchg
scas
rcrb
lahf
arpl
sub
xchg
or
jp
cmp
jo
jge
pop
shr
icebp
or
movsb
xor
sub
test
out
push
sar
push
mov
cld
movsb
in
lahf
leave
jl
lods
lret
sub
pop
mov
xchg
repz
cmp
fstpt
fwait
enter
fs
sti
mov
mov
mov
adc
pop
xor
xchg
cmc
lds
dec
out
inc
mov
ret
push
push
clc
mov
test
mov
in
bnd
or
std
shl
push
lods
mov
es
aaa
xor
imul
jl
sbb
bound
lods
mov
enter
int3
dec
push
and
out
xchg
xchg
test
jae
xchg
push
sti
and
jle
out
repnz
mov
imul
call
push
sub
iret
ja
in
lcall
fisubl
xor
pop
lods
xchg
mov
ds
push
sub
sub
xor
mov
jp
pop
mov
fdivrs
xchg
pop
adc
xchg
rcrl
mov
add
scas
push
and
fcoms
mov
shll
add
inc
cmp
xor
lock
or
popf
add
jb
mov
dec
fiaddl
jb
sub
scas
sbb
mov
test
repnz
cld
sahf
or
sbb
add
xchg
xchg
fstps
xor
xchg
mov
mov
sub
js
std
xor
xchg
in
pop
insb
cwtl
add
push
pop
mov
xchg
jb
rolb
cmpsb
push
add
cmp
push
fstl
leave
cs
push
xor
cmpsb
in
imul
push
mov
inc
outsb
jno
outsl
hlt
outsb
sub
xchg
outsl
add
mov
ss
inc
fsubrl
inc
xchg
mov
nop
push
stos
inc
fildl
adc
shr
mov
iret
rolb
dec
pop
adc
fidivrl
aas
repz
hlt
mov
lcall
enter
mov
sahf
mov
sub
mov
add
jge
lods
inc
xor
fwait
orl
fsubrl
push
lahf
insb
add
xor
arpl
ds
mov
cmpsb
push
aad
and
pop
jmp
jmp
add
add
lret
or
int3
fbstp
popf
sub
cmpsl
push
dec
mov
mov
out
sbb
dec
scas
and
lret
lds
mov
or
aaa
test
test
mov
sub
loop
mov
xchg
xchg
and
or
mov
sti
dec
mov
fwait
aaa
push
inc
jae
scas
push
adc
test
push
pop
xchg
push
aam
pop
arpl
imul
sub
lret
pusha
jecxz
jge
jmp
adcl
test
push
fisubrl
push
push
push
fiaddl
xor
addr16
fsubl
loopne
and
mov
inc
in
in
dec
lds
scas
inc
sbb
std
or
rclb
add
cli
sub
fcomps
filds
aad
push
jge
idiv
in
jb
outsl
mov
test
sub
mov
es
lea
and
adc
jl
mov
mov
xchg
xor
stc
fstps
les
adc
sub
icebp
inc
mov
cmpsl
jecxz
mov
shlb
fnsave
or
aam
movsl
jp
lock
inc
test
xor
aas
popf
icebp
lods
jp
rcrb
scas
ret
shr
add
shlb
test
sahf
psubsw
adc
out
push
fnsave
fmulp
divb
sti
mov
loop
ret
pop
add
add
dec
imul
jge
imul
dec
jnp
xor
arpl
inc
push
sub
cs
sub
cli
addb
jno
mov
or
into
fisttpl
or
movsl
fisttps
pop
loopne
cmc
cmp
dec
push
mov
fildll
or
fadds
pop
and
pop
cld
pop
call
inc
aaa
int
mov
xor
jmp
notl
out
mov
pusha
mov
mov
push
mov
jg
cmp
jp
jmp
rol
test
inc
test
mov
test
push
out
inc
xchg
outsl
lcall
or
push
lds
inc
sbb
iret
jae
out
mov
ss
pop
jmp
scas
out
cld
clc
pop
fnstsw
out
ljmp
dec
mov
jo
cmc
out
push
push
test
shrl
jmp
pop
add
and
xchg
jae
mov
imul
cmp
fisubs
cmp
dec
mov
sbb
push
jbe
adc
pop
push
popa
dec
inc
es
push
mov
repnz
sti
mov
cmp
lret
std
sub
sub
adc
fsubr
adc
mov
int
lods
call
ret
dec
dec
fldcw
sarb
js
dec
mov
inc
xchg
pusha
scas
push
pop
cld
inc
mov
adc
jecxz
arpl
pop
cmp
mov
jp
daa
fcoms
imul
arpl
mov
les
xchg
push
test
pop
jp
mov
cwtl
mov
push
pop
adc
xor
xchg
sub
dec
imul
nop
jbe
push
pushf
inc
lock
cmc
or
and
stos
cmp
lods
lret
test
mov
fdivs
out
fadds
jbe
sub
jne
jg
push
leave
cmpl
or
cmp
insb
std
stc
xor
push
add
pushf
loop
push
cld
adcb
or
mov
fdivrs
mov
addb
push
leave
mov
test
sub
xchg
push
cmpsb
je
or
dec
lods
nop
xor
pop
or
xchg
add
stos
gs
mov
xchg
sub
mov
inc
or
mov
xor
xor
push
mov
inc
xor
aas
cli
lods
pushw
inc
add
lret
push
mov
cmp
in
jb
fs
jbe
pop
sar
sbb
jl
mov
cmpsb
dec
cmp
cmp
jg
imul
push
negl
xchg
mov
ret
es
jmp
testl
or
les
std
mov
pop
stos
push
fisubs
mov
cmc
dec
outsb
cmc
jne
push
jnp
iret
lahf
pop
and
add
push
mov
gs
inc
mov
mov
aad
aam
pushf
mov
shlb
dec
lahf
mov
test
lret
xor
incb
push
aam
push
jbe
in
cld
in
dec
dec
xchg
fiadds
pop
xchg
negb
jbe
xchg
vrcpps
push
mov
add
push
fadds
xor
sarb
divl
sti
stos
xlat
cmp
bound
add
fwait
clc
sahf
dec
std
movsb
cs
and
cmp
adc
pop
push
jbe
jns
inc
push
adc
aaa
sbb
loopne
cmp
sbb
cmp
xchg
fldt
mov
cmp
ja
loopne
mov
jns
add
ret
loop
call
sub
repnz
cmc
and
inc
dec
sub
int3
sbb
xor
sbb
lret
loop
push
pop
mov
xchg
fmull
int3
mov
mov
cmp
sbb
icebp
je
and
mov
xchg
popf
sbb
xlat
mov
scas
sbb
adc
popa
pop
mov
loopne
emms
pop
jecxz
es
das
sub
jl
adc
inc
xchg
stos
sti
dec
inc
ret
test
xchg
jge
lret
sbb
mov
fidivs
icebp
sarl
mov
insb
loop
inc
or
mov
movsb
jge
mov
daa
push
mov
subl
push
mov
and
roll
mov
je
clc
cmc
pop
in
ljmp
aas
sarl
cmp
test
rorb
icebp
cmp
xchg
xchg
scas
jecxz
mov
movsb
lds
sbb
shll
dec
popa
cmp
add
stos
rcrb
sub
dec
mov
push
mov
mov
dec
movsl
fmull
cmpxchg
loope
xlat
and
cmpsl
sahf
nop
in
sub
adc
das
jle
fistpll
jge
jae
movsl
mov
sub
gs
aam
andb
int3
lds
adc
sub
int3
jg
inc
aad
inc
xchg
jle
sub
add
or
andl
push
cmp
orl
in
dec
movsl
cmp
jle
dec
and
lea
xchg
adc
and
mov
mov
icebp
push
je
sbb
stos
push
mov
pop
sub
jmp
sbb
movsb
pop
jne
sub
inc
mov
enter
stos
outsb
mov
push
es
xchg
lea
push
jb
sbb
jo
xchg
outsb
pop
jbe
loop
loop
nop
outsb
jns
push
jns
scas
pop
sbb
dec
imul
inc
xor
lds
movsl
in
push
into
mov
fbld
push
mov
mov
outsl
test
or
call
mov
inc
dec
pop
scas
jbe
and
rcll
mov
mov
xor
fisttpll
or
lock
fisubrl
clc
imul
inc
lret
add
fstp
jno
rclb
ss
jecxz
nop
xchg
pop
or
repz
jl
xor
xor
mov
out
daa
mov
ret
fldt
aas
in
mov
loope
and
xchg
xchg
mov
aas
mov
cmpsl
ljmp
push
ficoms
data16
cltd
aas
lods
sub
pop
sub
cwtl
orb
adc
lahf
pop
outsl
lret
adc
jb
add
push
xchg
loopne
std
ja
adc
sub
push
cmp
mov
lret
dec
int
pop
push
pop
inc
lahf
mov
push
push
adc
in
int
jge
movsl
dec
bound
dec
insl
jo
outsl
jmp
sbb
subl
mov
leave
and
and
ficoml
cmp
adc
cmpsb
sub
imul
fs
push
jle
in
shrb
test
sahf
aaa
and
mov
into
add
shll
add
loope
mov
push
les
cmpl
sbb
xor
loop
lcall
icebp
leave
adc
idivl
inc
dec
in
jns
sub
testb
adc
sbb
pop
mov
jg
cli
mov
push
sub
push
les
mov
lods
jl
fiadds
loope
into
leave
jp
or
addr16
scas
adcl
addr16
push
cmp
sub
test
icebp
sarb
jne
cs
stc
shll
outsb
leave
fists
adc
mov
enter
fcmovbe
aas
inc
cmp
adc
push
push
mov
into
cmc
mov
into
mov
hlt
insl
mov
push
arpl
mov
mov
frstor
cli
add
rol
mov
repz
cmp
outsl
cltd
dec
cltd
dec
loop
adc
pop
jnp
xorb
cmp
in
rcrb
cmc
pop
ds
sbb
or
mov
xchg
fidivrl
mov
or
aas
xor
lods
cmp
cld
stos
cmp
out
xorl
adc
sub
sub
popa
aam
sahf
into
add
mov
pop
fwait
inc
outsb
jnp
adc
out
fwait
adc
sbb
mov
out
fnstcw
roll
sbb
sub
shrl
cmpsl
or
mov
roll
mov
xchg
imul
enter
push
or
mov
insl
jno
out
jne
aam
aam
stc
pop
push
adcl
data16
into
out
sbb
sub
inc
pop
cmp
sbb
les
fidivs
lods
push
push
pop
shll
arpl
pop
enter
inc
sbb
pop
xchg
mov
jge
cmp
pop
or
add
sub
cmp
adc
mov
inc
or
jns
inc
dec
push
fwait
arpl
loope
dec
testb
mov
sti
and
ds
leave
jo
xchg
lahf
bnd
popa
adc
jp
gs
je
outsb
push
or
inc
pop
divb
mov
stc
mov
adc
mov
xor
mov
jge
sub
jg
or
iret
and
sbb
push
mov
lea
popa
movsl
jbe
adc
lock
repz
adc
mov
jbe
int
in
adc
sub
mov
test
hlt
mov
sbb
hlt
adc
xchg
mov
in
jecxz
in
cmp
shr
mov
das
mov
sti
xor
and
inc
cmpsb
push
xor
xchg
sub
and
stc
mov
inc
mov
dec
dec
or
jge
fwait
ret
rorb
mov
push
aas
xchg
push
cmp
xchg
test
fnstenv
sbb
cli
dec
cltd
ss
rcll
sub
and
fisubrl
and
sti
push
pusha
push
push
int
divb
sbb
sbb
test
imul
jle
in
mov
mov
test
mov
mov
cmp
lea
hlt
inc
daa
mov
std
adc
cmp
push
hlt
jp
test
xor
sub
xor
rcrb
jns
jge
mov
dec
push
fdiv
fdiv
inc
push
pop
arpl
mov
scas
test
ror
subps
fsub
add
mov
ja
jp
aam
enter
add
leave
jp
outsb
bound
daa
mov
mulb
mov
sbb
movb
aam
aad
out
add
push
ret
inc
sbb
pop
push
cmp
mov
inc
jmp
pop
cmp
and
and
lret
mov
xor
mov
sti
sbb
sub
out
mov
clc
lcall
xchg
push
icebp
pop
xchg
and
push
das
enter
pop
hlt
mov
jo
es
ficomps
and
cmpsb
add
mov
inc
cmc
movsb
xchg
shlb
cmp
orl
adc
movsl
int3
sub
pop
scas
mov
and
pop
dec
inc
call
je
inc
movsl
mov
jb
adc
mov
outsb
add
ja
adc
and
push
jb
add
inc
pop
push
loope
jg
movsl
stc
fiadds
test
in
adc
push
js
jle
lcall
sub
je
out
inc
mov
fnstsw
dec
movups
inc
mov
imul
cmpsl
rolb
dec
rorb
aam
sub
std
daa
jl
dec
sbbb
mov
sbb
pusha
jne
mov
jno
cwtl
add
cmpsl
dec
push
pop
adc
inc
sub
jge
popa
lret
sub
add
push
mov
fnsave
xor
add
test
mov
lds
xchg
jbe
xchg
inc
pusha
fsubs
mov
jp
and
sbbl
pop
or
push
mov
push
pop
push
popl
xchg
jnp
mov
adc
xchg
pop
push
jae
xchg
jno
jl
jmp
or
cmp
outsl
flds
jp
imul
js
sarl
scas
mov
dec
jns
rcll
push
pop
push
jmp
inc
outsb
push
in
scas
mov
push
leave
mov
push
adc
pop
adc
jmp
mov
push
pop
mov
mov
arpl
nop
maskmovq
notl
inc
push
addr16
cli
cmp
sbb
mov
xchg
dec
ds
cld
push
and
out
push
les
xor
mov
jecxz
mov
push
cld
mov
sbb
popf
mov
sub
sbb
push
inc
fcomp
ret
cmp
ds
int
sub
rcrl
mov
and
sarl
jns
cmpb
loope
pusha
adcl
fisttpl
mov
mov
adc
fwait
adc
hlt
sub
test
push
mov
jo
loopne
dec
push
sub
divb
stos
push
sub
xchg
repnz
jae
push
rolb
in
sahf
jne
mov
xor
ss
sub
inc
imul
shll
jl
xor
hlt
mov
aaa
jae
cmc
je
subl
xchg
push
cmpl
and
sub
inc
mov
iret
das
add
sbb
pop
stos
out
add
push
out
push
mov
jp
or
cld
out
lods
jae
sub
sbbb
imul
rcrl
data16
lret
jp
jecxz
jnp
pop
inc
data16
sub
repz
vpmullw
ret
jo
push
jo
mov
in
scas
xor
cs
scas
pop
cmp
xor
push
lret
pop
rorb
cmp
leave
fwait
cli
fadds
adc
mov
repz
out
sbb
mov
add
xchg
sub
fsubrp
fistpl
xor
mov
jmp
les
insb
inc
inc
stc
stos
xchg
xor
and
jno
lret
pop
out
dec
xor
fnsave
pusha
rclb
stos
in
jmp
test
cmp
mov
dec
add
or
test
outsb
dec
or
mov
lahf
cmove
subb
mov
sub
sbb
and
push
fidivs
or
mov
js
les
aas
sbb
ja
scas
sarb
es
jp
push
mov
jecxz
jg
iret
stos
jg
jno
and
xor
icebp
xchg
lahf
out
test
xchg
cmc
sahf
lahf
mov
inc
xor
inc
mov
dec
mov
das
mov
or
sbb
aam
jnp
test
loop
adc
push
push
test
jge
test
xor
sahf
xor
cltd
les
pop
outsb
sbb
xor
inc
mov
dec
ret
cmp
sub
cmpb
xchg
pop
and
enter
jle
jnp
int3
push
adc
mov
lret
mov
stos
sahf
xchg
jg
shrl
ficoms
fidivs
jl
test
arpl
aam
ljmp
adc
out
aas
pushl
jp
in
cmp
xlat
stc
xor
aam
out
xchg
mov
or
int3
mov
pop
nop
push
aad
mov
xor
outsl
pop
add
mov
cmpsl
fwait
sub
inc
sub
in
vpcmpeqw
xor
cltd
gs
dec
jp
out
xchg
hlt
aad
mov
fbld
sarl
stc
cmp
pop
and
xchg
daa
lcall
xor
inc
and
faddl
call
enter
test
mov
mov
into
inc
jae
lret
mov
xchg
insb
lds
xchg
push
pusha
add
test
mov
sbb
cmp
lea
add
rcr
jnp
mov
xchg
xchg
aaa
sarl
add
das
pop
xchg
mov
out
jle
mov
lods
test
imul
mov
xor
cmpsl
pop
inc
xor
or
dec
repz
cmp
int3
pop
mov
mov
mov
mov
lret
stos
loope
or
sub
jge
addr16
ret
dec
mov
lcall
clc
lahf
mov
pop
test
ret
outsb
pop
adc
daa
fstps
add
lds
arpl
pop
mov
aam
jmp
imul
push
lahf
mov
push
dec
sub
sub
sub
mov
les
cmpl
mov
cmpsl
xchg
pop
pop
inc
xchg
jnp
popa
in
or
or
es
mov
aaa
cmp
fcompl
pop
fidivl
mov
imul
inc
pop
dec
filds
jae
daa
pop
test
ljmp
ss
test
popa
in
jge
adcl
mov
rcll
adc
cmpsb
fwait
aas
sti
mov
lds
xor
xor
mov
leave
fisttpl
daa
rcr
pop
sub
cltd
test
inc
xchg
std
in
loope
enter
in
jl
mov
stos
dec
xchg
int3
in
jg
dec
xor
push
vpextrb
test
icebp
les
es
push
or
sbb
shrl
lcall
dec
xor
adc
outsb
push
pop
push
add
mov
imul
aam
push
sbb
into
cmp
clc
xchg
mov
xor
push
fbstp
xchg
push
xor
lea
sbb
rolb
or
jp
test
push
jmp
lock
xor
es
pop
push
outsb
ja
ret
or
imul
xor
into
test
and
arpl
rolb
in
sbb
jge
sub
xor
pop
dec
push
adc
cwtl
and
leave
push
dec
ja
adc
loop
es
push
xor
add
sub
ljmp
mov
pop
mov
jge
dec
ret
mov
pop
mov
cmp
daa
iret
jns
push
mov
into
clc
mov
jmp
loope
inc
xor
mov
adc
cs
xchg
and
mov
out
sbb
xchg
cmp
push
mov
xchg
mov
mov
ds
repnz
or
mov
and
outsb
sti
shlb
ret
pop
outsl
adc
rclb
andb
rcl
xchg
pop
mov
in
lds
out
aad
jl
push
pop
in
bound
mov
pop
lds
push
push
std
fidivrs
loopne
sbb
pop
cmp
insb
fisubrs
fisubs
push
call
sub
pop
xchg
cmp
mov
cltd
scas
jb
jns
or
xchg
movsl
pusha
jmp
mov
mov
mov
stc
xchg
imul
adc
sti
mov
push
jp
lret
lcall
aas
test
mov
mov
pop
mov
arpl
xor
mov
xchg
and
adc
stos
int
mov
test
jge
dec
movsl
out
sti
lret
add
jbe
jnp
add
ljmp
push
sub
das
and
pop
in
mov
cmp
mov
sub
sbb
je
ret
hlt
pop
pop
jl
call
loopne
xchg
test
and
in
call
lods
jmp
xchg
in
fwait
addr16
leave
mov
xor
lcall
xor
fwait
addb
xchg
in
aad
xchg
pop
inc
xor
ficomps
insl
jmp
stos
mov
and
pop
cmp
sarl
mov
fdiv
xor
jle
sub
arpl
fcomi
aam
ret
out
sbb
push
xor
js
xchg
ds
or
loope
shrb
push
lret
xor
aad
hlt
cmc
bnd
in
inc
leave
fsubl
or
and
fdiv
cltd
inc
pusha
jmp
shll
loop
pop
ret
fbstp
pop
xchg
es
enter
pop
shl
cs
test
xor
mov
pushf
dec
shrl
cmp
sbb
daa
add
xor
stc
xor
mov
mov
sub
sub
xchg
sbb
jl
repnz
insb
inc
insl
xchg
fstpl
pop
lret
jmp
push
or
int3
insb
jg
mov
dec
mov
jno
dec
outsb
arpl
xor
jecxz
outsl
jmp
arpl
mov
in
fnsave
outsb
and
sub
imul
or
inc
sub
xchg
sbb
inc
jle
imul
call
xor
xchg
test
cmp
fxch
push
jl
shrl
xchg
mov
insb
jge
cmpb
sbb
push
lods
vprotq
jns,pt
fcmovu
fwait
mov
out
xor
gs
movsb
fistl
add
mov
jbe
adc
or
int
lods
jg
rcr
jno
stc
cmpb
jo
xchg
sub
mov
inc
sar
repz
xlat
adc
xor
push
xor
mov
nop
adc
or
jb
or
in
push
inc
adc
xchg
and
sbb
jns
test
cmp
mov
loopne
xchg
mov
test
nop
in
mov
adcl
mov
jl
push
sbb
imul
fidivs
cmp
rclb
in
movsb
cmp
cmc
pop
test
push
popa
clc
pop
divb
lret
add
movsb
mov
out
mov
int3
mov
or
dec
mov
loopne
lret
xchg
insl
add
mov
cwtl
or
pop
cltd
add
add
movsl
push
fldt
cmp
jno
js
cmpsb
rcll
push
push
aad
test
jle
sub
shlb
fcomps
mov
push
fdivrs
into
popa
lret
fidivrs
push
in
loopne
sti
aam
inc
push
fisubrs
sub
out
push
popa
xchg
mov
sti
inc
popf
cs
jge
xor
mov
cmp
mov
cli
mov
or
je
jns
imul
xor
inc
or
andb
gs
test
push
pop
mov
lock
lock
cmp
scas
cmpsl
pusha
and
addr16
mov
mov
push
loop
mov
dec
and
dec
jecxz
es
imul
outsl
cltd
jmp
repnz
sub
cld
sahf
mov
iret
mov
or
push
clc
add
mov
jne
out
data16
dec
fdivs
fsubl
push
and
dec
popf
and
in
push
sub
sbbl
cmp
adc
lods
mov
or
in
adc
mov
xor
ret
xchg
iret
pop
sahf
out
and
inc
push
adc
test
and
sbb
mov
mov
push
stos
sub
mov
cmp
pop
push
repz
in
jae
inc
or
in
bsr
inc
rclb
inc
test
in
je
insl
and
dec
insl
sbb
xchg
mov
dec
cmp
scas
xor
movb
cwtl
shlb
cltd
cld
add
pushf
test
addr16
decb
cli
mov
cmp
jb
outsb
fsts
cmp
outsl
ficoml
mov
jecxz
dec
mov
dec
dec
push
inc
in
mov
cmp
add
out
dec
in
sub
mov
mov
gs
fcoms
ret
mov
jl
jle
mov
cmc
sti
and
popf
movsb
lret
je
addr16
mov
xor
cli
push
push
sbb
mov
das
outsl
cmp
sbb
fists
pusha
int
inc
cmpsl
dec
fildl
jbe
stc
gs
iret
mov
mov
jl
es
hlt
mov
pop
xor
mov
std
fs
outsl
cmc
or
cmp
mov
push
iret
pop
push
xchg
push
cltd
push
dec
dec
or
mov
mov
cwtl
pop
stc
xchg
lods
push
xchg
sub
les
push
jmp
lcall
in
test
shrb
inc
cmp
xor
jae
mov
xor
pop
mov
and
test
dec
in
add
inc
cltd
imulb
mov
inc
loop
mov
mov
sub
shll
mov
jo
repz
mov
hlt
push
int3
push
and
add
pop
mov
aas
mov
or
mov
add
ljmp
mov
sub
in
out
lahf
test
xchg
and
les
imul
cmp
repz
adc
and
shll
pop
int
mov
adc
pop
pop
or
xchg
push
xor
inc
push
insl
adc
imul
gs
in
repnz
outsl
xchg
push
jle
adc
pop
mov
ljmp
pop
mov
call
sub
add
bnd
xchg
inc
cmp
rorb
push
repnz
inc
cld
rcrb
lods
cmp
je
adc
repnz
jle
sahf
sub
push
and
inc
aas
roll
push
jle
xor
out
cmpsl
jbe
cmp
mov
dec
cmp
mov
cs
and
xchg
jne
push
das
scas
cmp
lods
lret
outsb
aad
lods
jnp
fldcw
or
cltd
hlt
sub
sarl
add
nop
lods
js
rorb
gs
mov
rcl
cmp
repz
xchg
popa
mov
enter
scas
inc
jae
cltd
cmp
jbe
add
jecxz
mov
scas
lret
dec
mov
fwait
int3
je
mov
sahf
mov
sbb
jl
lods
add
jmp
mov
leave
lock
dec
jns
mov
ret
in
jo
sbb
lods
fwait
sub
sbb
mov
jb
jo
xor
aaa
xchg
dec
rorb
adc
adc
inc
mov
lahf
test
inc
sbb
out
scas
add
push
mov
mov
and
jle
inc
out
out
sub
xlat
lods
sub
pop
cmp
jmp
lcall
cmp
jno
outsb
insl
xlat
cmp
loope
pusha
les
sahf
dec
loope
jae
loope
stos
sub
push
adc
xlat
frstor
subb
dec
push
mov
punpckhbw
scas
push
into
les
xchg
jae
adc
xorb
pop
and
adc
cmc
lods
pushf
cmp
movd
movsl
loop
divl
xor
repnz
loopne
add
fists
fs
mov
xchg
das
inc
into
ffree
push
imul
dec
hlt
pop
sub
out
mov
sbb
inc
addr16
outsb
pusha
jp
mov
mov
notb
push
or
xor
cmp
pushf
stos
pop
out
sub
or
sbb
in
jle
pop
jb
test
cmp
xchg
jge
add
mov
into
jmp
push
inc
jl
jle
out
aaa
ljmp
pusha
and
xchg
and
shll
sbb
adc
and
mov
out
ss
es
les
mov
leave
stos
push
and
insl
and
or
push
mov
mull
add
insl
or
dec
test
arpl
jae
mov
test
loope
test
mov
mov
scas
aas
ret
inc
xchg
dec
pop
je
mov
adc
lock
push
pop
dec
push
mov
pop
out
addl
fadds
movzbl
mov
jbe,pt
scas
rorl
out
mov
out
fnstsw
jecxz
dec
mov
rclb
ja
rorl
and
xor
pusha
iret
inc
or
imul
xor
outsb
loop
adc
adc
add
loop
push
flds
daa
fldt
mov
and
lods
fdivs
fistpll
out
fcomp
scas
pop
dec
stc
incl
leave
insb
imul
cmpsl
movsb
xor
cs
gs
enter
aaa
daa
mov
gs
jne
inc
lret
xchg
pusha
andb
stos
pop
push
ret
lahf
ret
sub
addr16
dec
mov
jge
xchg
inc
adc
sbb
ret
fwait
fs
or
add
mov
mov
iret
mov
in
ret
pop
and
clc
out
adc
mov
inc
push
arpl
mov
xor
testl
bound
pop
mov
inc
mov
sub
cltd
sub
stos
int
call
mov
iret
and
sub
xor
or
pop
xor
lahf
inc
jecxz,pn
xchg
mov
sub
add
hlt
xchg
call
pop
xchg
cmp
jmp
scas
movsl
xor
rol
and
xorb
jmp
fiaddl
cmpsb
arpl
mov
arpl
xchg
fdivs
add
jmp
cmp
cmp
ljmp
aas
xlat
mov
ret
xor
into
mov
sbb
std
aas
adc
repnz
xchg
sub
cwtl
pop
or
sub
mov
push
sub
ljmp
jle
xchg
repnz
jge
jp
aad
std
pop
jbe
add
js
mov
jae
sbb
push
in
insl
sub
inc
insl
es
mov
dec
xor
repnz
rcrl
sbb
sbb
sti
inc
shl
mov
fs
repz
or
mov
or
addr16
dec
aaa
jge
fwait
pusha
clc
shrb
out
dec
inc
mov
lret
pop
or
int3
jae
aam
jne
mov
inc
in
sbb
jno
orb
in
adc
inc
sub
scas
test
jecxz
andb
sbb
mov
aaa
gs
add
inc
sub
stos
mov
inc
push
movsb
fists
nop
ja
outsb
gs
leave
out
mov
fcomps
mov
stos
subl
push
iret
jge
mov
and
movsb
clc
sahf
popf
push
or
mov
dec
hlt
loopne
popa
pop
adc
dec
dec
lock
int3
xchg
pop
xchg
mov
ja
push
xchg
in
pop
test
das
mov
xor
outsl
ja
enter
lahf
ficoms
add
or
ret
adc
push
lods
xlat
arpl
fnstenv
adc
lods
mov
mov
mov
data16
push
dec
mov
jbe
fcomps
jns
cmp
pop
scas
ficoms
cld
or
aam
daa
adc
xorl
cmp
dec
fmul
jnp
daa
xchg
in
fnstcw
sub
cli
sbb
out
cmp
data16
scas
clc
ret
enter
xchg
xor
sahf
push
leave
sbb
int3
and
push
fucomp
xchg
imul
repz
add
jno
scas
sub
or
pop
fcoms
sbb
mov
cs
leave
mov
mov
adc
lcall
test
mov
lods
rcl
adc
push
sub
xchg
pop
dec
jns
or
cmp
notl
outsb
clc
cmc
repz
inc
push
cmp
cltd
out
arpl
push
jo
push
test
pop
cmpsb
into
cmp
mov
stos
pop
sub
je
out
jg
mov
dec
adc
movb
loop
pop
push
mov
lds
loop
mov
out
jno
fs
push
mov
sub
iret
cmp
or
sti
pop
xchg
inc
or
into
jae
inc
idivb
fwait
movsl
mov
cltd
inc
ret
pusha
in
or
clc
xor
mov
loopne
jno
pop
cmp
insb
mov
or
shlb
test
pop
jns
ret
out
xchg
push
in
mov
notb
cmc
loopne
sbb
dec
mov
xchg
orl
adc
aad
mov
xor
pushf
fwait
insb
adc
aad
mov
test
sbb
or
pop
jle
cmp
pusha
in
in
mov
inc
or
les
in
mov
xchg
pop
mov
shll
mov
add
add
cli
int3
insl
call
fs
sub
push
ljmp
xchg
cmp
jge
mov
and
popa
call
or
loopne
stos
cmpl
int
push
jmp
sub
cmp
stos
jge
movsl
lods
in
mov
outsb
in
jnp
repz
jo
cmpb
out
add
movsl
xchg
mov
sub
cmp
mov
lods
je
cmpl
in
pop
loop
dec
movb
push
sbb
pop
adc
dec
lock
mov
int3
rclb
add
out
jl
and
push
adc
xor
xchg
sub
fs
sub
rorl
or
dec
hlt
outsl
mov
jecxz
inc
mov
or
and
sbb
frstor
test
into
push
mov
mull
jp
push
les
and
bound
in
int3
pop
test
nop
and
les
mov
mov
and
imul
out
inc
dec
insb
mov
add
xor
cmpsl
roll
inc
outsb
dec
xor
ret
cmpsb
int3
or
cmp
push
sbb
fwait
lods
lea
jge
jo
lret
imul
sbbb
mov
xor
cltd
inc
outsl
out
mov
cmp
dec
add
mov
les
inc
jmp
sub
sbb
push
out
aam
dec
mov
push
xchg
xlat
incl
adc
les
daa
pop
stos
mov
pop
push
in
shl
and
add
scas
mov
sbb
lret
clc
adc
add
mov
sub
push
sbb
pop
add
lret
mov
inc
dec
inc
test
and
adc
movl
mov
xor
hlt
jge
rorl
pushf
gs
out
call
add
mov
lcall
lahf
or
mov
das
hlt
lahf
in
add
scas
mov
into
pop
cmpb
shrb
xchg
sbb
imul
sbb
fdivrl
mov
fsubrl
popf
jge
ljmp
scas
out
pop
push
dec
push
dec
inc
add
lcall
xor
cli
inc
inc
pop
andb
loop
movb
or
mov
insl
pushf
test
mov
je
push
and
or
cs
int
dec
xchg
test
je
ficompl
cmp
ja
add
out
mov
mov
repz
mov
notb
xchg
dec
adc
and
imul
std
nop
out
mov
add
outsb
xor
out
inc
add
adc
add
xor
movsb
das
je
test
sub
fstpt
push
sub
adc
pop
sub
loop
addb
call
insb
mov
push
call
popa
shr
adc
xor
leave
inc
sub
std
addr16
jl
or
sbb
in
daa
lods
mov
in
xlat
pop
aas
mov
rcrl
jge
mov
push
pop
add
jns
push
inc
and
mov
stos
negb
jb
xor
xchg
mov
ljmp
and
push
lahf
lret
xor
aaa
cli
mov
jo
enter
inc
or
fbstp
push
jbe
jecxz
jae
add
and
pop
pop
dec
adc
jl
repnz
dec
xor
imul
jge
cmc
das
call
in
repnz
add
xor
xor
shll
mov
push
movsb
rolb
jne
mov
ret
fsubr
xor
jnp
fists
jl
cld
mov
fwait
nop
jmp
sub
inc
lahf
inc
pop
in
sub
mov
xchg
xchg
outsb
push
test
insl
push
frstor
shr
pop
xor
popl
inc
out
stos
pop
jb
cmp
mov
sub
push
mov
jp
cld
push
aad
push
in
ja
fcmovbe
aad
shl
popf
pop
cltd
pusha
xor
jmp
push
sbb
inc
into
sub
addr16
fnstenv
push
cmpsb
data16
repnz
mov
neg
xchg
hlt
aas
in
cmc
xor
add
dec
into
cmc
lods
out
sti
popf
pop
nop
lds
sub
icebp
movsl
fsts
xorb
fwait
mov
inc
cmpsl
sub
in
cmp
mov
mov
mov
cmp
aaa
jne
orl
mov
mov
repnz
xorb
mov
inc
push
mov
lods
jns
jl
shll
and
sbb
push
sbb
clc
adcl
inc
sub
mov
cmp
andb
xor
inc
sub
xchg
inc
sbb
push
subb
jbe
xchg
lods
dec
sbb
movd
add
xor
jb
lods
and
test
pusha
int3
shl
pop
mov
test
pop
xchg
cmp
pop
cmp
add
mov
mov
mov
ja
jmp
je
lea
inc
test
lret
mov
lock
and
jne
add
hlt
repz
fwait
lds
pop
and
mov
js
sub
scas
cmp
mov
sub
fstpt
or
xchg
test
and
inc
outsl
mov
gs
pop
subb
addb
mov
loop
out
call
iret
pop
jne
lahf
in
popf
enter
repz
ret
cltd
ljmp
cmpsb
fisubrl
mov
mov
xchg
rorb
mov
out
adc
ret
fnsave
jp
orl
daa
out
nop
inc
jb
xchg
pop
adc
pop
xchg
sbb
add
fdivrl
jb
fiadds
jge
cmp
or
lcall
mov
imul
adc
je
sarb
fcompl
jbe
dec
and
repnz
cltd
in
fiaddl
jl
xor
lahf
adc
and
xchg
aas
adc
ret
sbb
add
subb
mov
rcrl
mov
pop
filds
adc
in
sub
cmpsl
inc
aad
test
cmp
addr16
test
jl
inc
fisubs
mov
or
loopne
mov
divl
inc
push
cmp
push
sbb
push
adc
int3
adc
js
mov
lock
ljmp
out
xor
xor
jo
adc
popa
mov
mov
lcall
into
jp
nop
inc
mov
stos
icebp
lods
inc
jae
into
test
jbe
ret
push
int
dec
enter
xor
mov
cld
cmpsb
adc
cltd
cmc
and
fimuls
ja
mov
cli
test
fs
sub
push
outsl
pop
inc
jno
mov
lods
add
stos
test
or
jecxz
in
xor
int
jbe
out
lcall
push
rorl
add
inc
mov
pusha
xchg
call
sarl
roll
lea
out
out
pop
adcl
adc
imulb
jno
faddl
and
pop
mov
cs
add
arpl
push
add
sti
pop
sbb
jno
xor
adc
popa
sub
lcall
fidivl
lds
cmp
jle
pop
int3
push
std
sub
or
insl
sbb
or
pop
adc
daa
sub
test
add
subb
js
add
sbb
cmp
lcall
dec
outsl
or
jmp
jle
popf
push
add
jo
sub
out
dec
ds
push
sahf
mov
adc
leave
xor
sub
sbb
in
jns
daa
ljmp
dec
cwtl
jae
lods
scas
pushf
into
adc
push
movsl
push
mov
mov
inc
sbb
fwait
ss
test
test
xchg
mov
jbe
sbb
insl
test
iret
sub
xchg
pop
dec
stos
push
or
xchg
xchg
nop
lahf
js
jmp
test
sub
lock
nop
sbb
pop
stc
pop
bnd
mov
out
int
xor
inc
daa
aad
test
testb
repz
jno
jne
xchg
push
mov
jb
lcall
jge
loope
push
or
rol
arpl
aaa
jo
fldl
pop
es
sub
jo
xchg
fstl
adc
mov
inc
sbb
xchg
fdiv
jno
jge
imul
andb
scas
ss
dec
lods
fstpt
or
jb
jbe
or
mov
or
mov
mov
int3
mov
rorb
pop
xlat
sbb
xchg
pop
dec
shr
push
mov
fdivrl
mov
int
pop
cmp
std
mov
xor
cwtl
jp
sub
in
xor
data16
pusha
mov
jbe
mov
xor
out
cmp
das
loope
cmp
and
scas
pop
out
nop
mov
fldl
pop
bound
shlb
movl
cwtl
in
rcr
stos
push
out
mov
push
or
jae
dec
daa
cmp
rcll
xor
imul
dec
rolb
imul
mov
xchg
ja
cmp
int3
jb
nop
pop
imul
les
jmp
sbb
in
mov
lds
fwait
sbb
and
neg
and
xorb
or
xor
pop
dec
xchg
aad
sbb
popf
dec
int3
add
adc
jns
jmp
lcall
sahf
call
xor
inc
mov
popf
xchg
mov
pop
pop
pop
xchg
mov
lret
lret
lcall
jmp
xchg
mov
push
icebp
jp
fsub
inc
mov
loope
jp
scas
cmpsb
pop
pop
fcomp
das
dec
xchg
dec
sub
mov
adc
dec
and
and
call
pop
push
into
inc
adc
cmp
lods
dec
repnz
mov
lcall
lds
push
inc
call
ljmp
enter
movsb
mov
imul
mov
push
jno
loopne
test
stc
es
xchg
pop
and
mov
push
bound
jne
add
ret
mov
xor
sub
test
lds
sbb
repz
inc
mov
push
dec
and
jecxz
mov
pushf
xchg
or
adc
xchg
push
xor
roll
jmp
xchg
pop
sbb
xor
sbb
or
dec
sbb
mov
insl
pusha
loop
sbb
push
sti
inc
mov
push
xor
pop
call
dec
push
dec
jae
imul
insb
call
sbb
push
jmp
inc
and
lea
nop
movl
stos
mov
lea
and
mov
push
push
inc
and
xchg
cmc
push
and
test
sbb
sbb
or
shll
testb
pop
aad
dec
adc
add
in
mov
mov
jb
xchg
mov
mov
inc
mov
movsb
daa
movsb
std
repz
fcoms
aad
push
lock
leave
xchg
movaps
jno
aad
or
lods
shll
pop
or
cmpsb
call
mov
mov
mov
adc
mov
adc
lods
sbb
jo
jbe
cmpsb
sub
and
stc
jae
xor
ljmp
aaa
ja
es
sbb
sbb
or
ret
adc
mov
test
rcr
iret
cwtl
mov
movsb
xchg
insl
daa
jmp
out
cmp
dec
mov
mov
push
cmp
loop
push
or
aam
mov
mov
push
mov
jns
push
aad
push
mov
push
mov
mov
cmp
push
outsl
mov
jg
inc
cli
aad
mov
nop
pop
out
nop
cwtl
dec
xchg
cli
adc
fs
cmpsb
lods
mov
mov
inc
test
dec
filds
pop
cmp
pop
enter
jl
cmpsl
shr
dec
pop
adc
gs
outsb
lret
sub
les
push
pop
ja
lock
inc
dec
data16
mov
lods
and
xchg
mov
dec
sbb
xchg
mov
adc
test
push
xchg
jge
pop
xor
adc
aas
jbe
and
mov
jae
mov
sub
int
pop
es
mov
pusha
push
xchg
and
lret
iret
shr
movsl
xor
decl
fs
mov
add
dec
icebp
or
cwtl
and
sti
jo
mov
jo
xchg
lock
imul
aaa
dec
out
adc
repz
inc
xchg
mov
test
icebp
imul
movsl
push
shr
and
out
jp
movsb
push
sbb
cltd
pop
in
xlat
arpl
push
out
or
xor
mov
adc
shrb
mov
push
push
fbld
mov
in
push
aas
outsl
out
mov
jbe
pusha
repz
sti
pop
xor
xchg
lret
mov
sarl
in
movsl
jae
jl
aad
insb
in
jg
call
or
aam
sub
ljmp
popa
ja
outsb
fstl
subb
push
sahf
push
sub
mov
cwtl
je
imul
out
pop
repz
mov
pusha
jno
in
jno
testl
lret
xchg
mov
inc
mov
add
cmpsl
mov
js
sbb
push
sahf
int
je
pushf
repnz
xchg
fisttpl
adcl
mov
sub
fs
out
mov
xrelease
mov
mov
xchg
add
xor
cmp
test
repz
in
in
xlat
adc
mov
adc
or
daa
iret
rcl
rolb
fadd
pop
mov
enter
or
jns
jp
dec
and
int
pushf
subb
inc
leave
or
xor
mov
cli
or
mov
int3
int3
bndldx
adc
jns
lahf
aad
scas
push
aaa
cmpsb
xorb
cld
sar
lcall
mov
scas
popa
test
mov
sahf
adc
xchg
test
mov
out
iret
inc
out
std
in
adc
aam
popf
int3
xor
jnp
pop
imul
dec
cwtl
mov
int
pop
shll
bound
jmp
or
add
imul
out
pop
pop
iret
call
das
stos
add
and
not
popa
cwtl
push
repnz
test
stos
in
push
lods
outsb
inc
popf
dec
jns
mov
pop
sarl
insb
cwtl
lahf
ljmp
outsb
xor
enter
es
into
push
inc
mov
cltd
test
aad
mov
arpl
nop
sub
imul
fldt
lods
bnd
add
insl
xor
add
add
pop
mov
popa
push
mov
je
dec
pop
clc
inc
aaa
jmp
ljmp
add
inc
dec
xchg
pop
mov
aam
cwtl
inc
loop
xorb
faddl
jge
mov
out
mov
mov
jae
sbb
rorl
and
cmpsb
dec
lahf
push
xor
ljmp
push
fnsave
cmp
ret
lret
repz
inc
adc
xchg
inc
imul
mov
or
ljmp
sub
pop
inc
push
add
mov
fucom
fidivs
lods
iret
mov
push
sub
xlat
adc
lods
in
xchg
lea
loop
clc
mov
loope
inc
inc
sbb
pop
cmp
push
xor
loopne
add
add
negl
in
cmp
add
xor
add
hlt
notb
int
pusha
lea
out
ss
pusha
loop
or
cmpsb
cmpsl
emms
jnp
fbstp
psubsw
bound
pusha
das
xchg
shll
pushl
aad
jge
xor
push
daa
sti
out
sbbl
add
pusha
shlb
pop
jmp
leave
imul
inc
xorb
idiv
enter
cmpsl
jmp
sbb
addb
mov
add
xor
outsb
mov
mov
call
sbb
inc
outsl
xor
loop
inc
xchg
cmp
mov
dec
icebp
lret
jl
pop
rcll
mov
fwait
push
out
leave
repz
mov
call
pop
mov
roll
inc
sbb
dec
ds
xor
cs
xor
or
add
mov
push
or
jl
icebp
xchg
sbb
imul
or
repnz
push
inc
add
dec
push
mov
sub
and
arpl
mov
inc
push
addb
rclb
loopne
and
xchg
jge
inc
in
fdivrs
mov
push
jbe
aaa
enter
cmc
sub
aam
dec
loope
in
inc
push
je
adc
jge
loopne
fstpt
pop
sub
xor
popf
fcomps
jg
loop
sbb
neg
ficompl
stos
mov
and
xor
insb
cmp
rcrl
hlt
push
loope
rcr
jae
pop
dec
pop
setb
dec
adc
jo
xor
mov
mov
in
pop
mov
sbb
fs
jecxz
sub
fnstcw
call
mov
test
hlt
dec
and
daa
cmp
mov
aam
pop
stos
sbb
aam
mov
push
dec
xchg
idiv
in
mov
pop
bound
push
cmpsl
sub
and
call
out
mov
ss
sbb
les
jle
data16
xchg
jns
jl
jbe
ss
shll
pusha
inc
das
fidivs
jns
cmpsb
insl
repnz
dec
xchg
jns
insb
ror
dec
mov
xchg
jne
sub
adc
int
sub
pop
jle
mov
aas
jne
xchg
mov
mov
or
add
jp
adc
mov
mov
es
outsb
sbb
xchg
out
pop
lea
xchg
mov
and
stc
int3
adc
fmul
sti
sub
cmp
push
sahf
adc
jo
sub
push
call
shl
sti
out
std
push
xlat
sub
xchg
inc
jecxz
jecxz
insb
mov
adc
loope
sub
lahf
xchg
push
aam
push
adc
adc
cmp
imul
sarb
push
dec
mov
stos
lods
rorb
inc
addl
mov
jmp
fildl
cwtl
push
ret
inc
inc
repnz
lret
jl
popa
cmpsb
xor
ss
and
pushf
cmp
outsb
dec
jle
dec
out
mov
jbe
jno
cmp
dec
int3
xor
pop
adc
mov
pop
nop
lods
push
xor
out
xchg
push
in
dec
push
gs
push
push
lea
pop
jecxz
gs
ljmp
out
arpl
and
fcoms
xlat
ficoml
mov
mov
in
inc
adc
test
ljmp
and
cld
mov
mov
dec
lods
or
sub
push
ja
das
mov
test
out
icebp
xor
fisttps
decb
jb
jno
iret
mov
push
cmc
mov
es
dec
mov
mov
sbb
dec
std
dec
sahf
push
mov
movsl
mov
push
shrb
into
push
add
and
mov
popl
clc
out
shll
andb
outsl
rdmsr
adcl
mov
enter
lahf
orl
dec
xchg
repnz
pusha
xchg
add
js
sbb
dec
scas
imul
xor
fwait
mov
mov
in
and
cli
cmp
arpl
fbld
iret
stos
out
out
jg
xchg
into
cmp
test
and
add
test
mov
dec
aam
aaa
push
cli
call
jae
not
mov
arpl
pop
jmp
and
pop
pop
add
fistpll
cmpsb
push
imul
sbb
push
iret
push
insl
sub
icebp
adc
cmpsl
push
adc
scas
jmp
sbb
and
mov
sahf
pop
xchg
aaa
mov
push
add
mov
adcb
cmp
das
and
add
dec
stos
push
and
sub
shll
icebp
lods
inc
je
add
adcb
testb
pusha
mov
push
addl
add
inc
mov
test
repz
jbe
ja
fsubs
push
inc
push
test
push
adc
int
add
xchg
int
fwait
cltd
pop
outsl
cmpsb
out
pop
sbb
xchg
sbb
mov
jp
sbb
popa
sub
ljmp
fstpl
clc
mov
stc
push
and
pop
xchg
cmp
dec
je
jo
int
fldt
jno
mov
jmp
lods
gs
out
inc
or
das
xor
xchg
imul
stos
pushf
fdivrs
pop
and
cmpl
xor
xor
inc
ret
mov
cmp
pop
cld
cmpsb
xor
and
icebp
rcrl
fnstenv
jns
sbb
std
stos
or
sbb
mov
les
xor
icebp
xchg
ja
xchg
rcrl
add
xchg
add
xchg
gs
mov
push
mov
cld
push
mov
pop
adc
cmp
popa
stc
les
and
out
mov
mov
in
movsb
jmp
adc
sti
sub
sbb
add
loopne
out
data16
or
hlt
add
sub
lret
cmpsl
ja
loope
xchg
jmp
dec
push
jge
sti
lds
outsb
mov
lods
mov
js
in
mov
in
xor
sti
addl
sbb
xor
in
les
push
push
jp
cmpsb
and
sub
lea
stos
fs
mov
inc
repz
loope
outsb
int3
dec
jbe
cmp
je
lahf
lds
arpl
hlt
inc
scas
adc
mov
pop
pop
inc
and
jmp
cs
sbb
scas
mov
jo
in
jnp
jae
stos
lcall
out
adcl
pop
dec
gs
xchg
pop
popf
movsb
sti
push
add
adc
out
dec
push
mov
push
orb
mov
ret
jmp
clc
aaa
push
or
cmp
dec
pop
adc
xor
imul
xor
inc
inc
ret
pop
xchg
mov
mov
in
push
popf
les
mov
bndldx
or
mov
test
mov
aam
es
jns
jbe
pop
es
loope
dec
lcall
dec
jae
dec
rcrb
jne
fs
jle
rcr
xchg
mov
dec
mov
lods
bound
lock
mov
jmp
or
in
push
push
lods
lock
aaa
loopne
pop
popf
mov
jnp
cltd
mov
scas
dec
fcmovne
mov
fistpll
cli
ret
mov
ja
sub
mov
inc
sbbl
pop
pop
cld
fmull
mov
icebp
repz
jg
xchg
dec
mov
es
rcrl
lods
sbbb
repz
imul
xchg
mov
mov
adc
out
call
in
nop
mov
insb
mov
stos
outsb
hlt
daa
dec
mov
mov
aad
int
xor
sahf
aas
jns
dec
imul
loop
pop
sahf
cli
adc
out
sub
mov
jns
out
add
add
andl
pop
xchg
iret
imul
xorb
dec
cltd
mulb
into
mov
xor
xor
test
cltd
or
xchg
fiadds
shlb
pop
fnsave
sbb
call
imul
fs
adc
aas
insl
cmp
mov
fsubrs
sub
divb
or
adc
adc
push
mov
push
imul
sbb
pop
sub
out
xchg
dec
mov
aam
jp
xor
inc
pop
jge
jno
push
and
inc
inc
dec
fdivs
cmp
hlt
ss
not
outsl
xor
int
cmp
cs
test
mov
or
adc
push
nop
je
push
dec
nop
adc
fistpll
std
mov
jne
je
ljmp
dec
adc
xchg
push
add
push
ret
loop
push
push
adc
test
out
mov
fwait
xchg
cmp
insl
stos
ret
lcall
or
mov
stos
leave
flds
js
test
or
sbb
jae
jmp
daa
repnz
pop
into
inc
mov
mov
and
popf
xor
sbb
aas
stos
stos
xchg
mov
test
std
xchg
add
rorl
addr16
xor
pushf
cmpsb
hlt
in
mov
arpl
lret
jge
icebp
pop
stc
and
xor
mov
xor
in
js
push
sarl
js
push
sbb
outsb
xchg
outsb
insl
scas
or
sarl
rorl
mull
push
xor
xor
fadd
or
mov
fists
or
les
idivl
rcl
es
mov
sub
imul
sub
sub
xor
fistpl
fcmovnu
test
jo
jno
insl
jecxz
test
ja
xchg
fidivl
or
cmp
xchg
insb
fdivrs
cmp
sbb
cltd
int3
adc
sub
ret
loop
push
imul
ss
cli
sahf
insl
inc
fisttpll
xor
nop
in
mov
pop
stc
and
or
cltd
or
push
movsb
icebp
add
push
inc
cwtl
ret
pop
inc
mov
scas
pusha
dec
mov
cmp
lea
popf
lahf
ret
into
fildll
adc
mov
or
insl
mov
mov
or
cmp
cmp
shrl
cld
jmp
aad
sbb
fsts
ret
push
mov
add
js
and
rcll
or
add
lds
push
shrb
cmp
sbb
and
pop
mov
push
push
enter
push
pop
test
aas
jno
pusha
sar
into
xor
and
jo
xorl
or
mov
aad
jb
repnz
sbb
inc
jmp
pop
das
adcb
pop
movsb
push
mov
xchg
imulb
push
pop
test
ja
pop
rorl
inc
rolb
mov
adc
or
pop
pop
sbb
das
cmp
add
xchg
testl
push
pop
scas
add
cmp
mov
es
push
neg
push
ret
jbe
insb
add
aas
xchg
adc
inc
sbb
push
cli
dec
mov
or
dec
imul
sbb
jno
inc
enter
mov
js
hlt
fstps
insl
cltd
mov
mov
xor
lock
sub
mov
out
and
out
lcall
shlb
jns
std
leave
jno
cmpsb
sub
jno
sub
in
fadd
in
imul
loop
cmp
enter
shrb
push
test
ljmp
push
mov
ss
pop
jmp
adc
addr16
dec
cwtl
test
imul
test
pop
in
inc
addr16
mov
push
cmp
xchg
cld
cs
mov
lods
inc
mov
adc
xchg
cmc
lret
mov
movsb
sub
cltd
into
pusha
sahf
jns
lret
mov
pop
pushf
aam
sub
push
pop
and
outsl
fs
dec
ss
mov
cmp
loop
xchg
test
rorb
fildll
pop
mov
ret
push
mov
mov
xchg
daa
inc
jmp
movsb
cmp
fiaddl
loop
push
es
inc
lock
xchg
xor
pop
mov
fs
mov
jno
inc
mov
and
inc
mov
cmp
call
bound
mul
test
sti
mov
fdivrs
pusha
jae
repnz
pushf
sub
dec
or
mov
les
test
xchg
test
inc
pop
jle
mov
loopne
xor
xchg
and
pop
inc
inc
xchg
movsl
pop
xchg
or
cld
daa
test
out
test
pusha
mov
inc
insb
rdmsr
fwait
addr16
cmpsb
or
out
aaa
sub
outsl
test
mov
inc
lret
dec
dec
mov
cmp
jg
ljmp
fdivrp
call
cmpsb
dec
sbb
adc
push
clc
adc
movsb
movsb
into
fwait
or
mov
or
or
inc
xchg
es
mov
sbb
jg
loope
je
scas
mov
sarl
negl
sub
cltd
push
add
movsl
orb
jg
sub
in
movl
and
repnz
xchg
pop
aas
xchg
mov
xor
mov
jno
jns
cmc
xchg
call
popw
xor
jl
xlat
push
xchg
jns
inc
shrl
inc
add
int
xchg
fstpl
xlat
test
ret
loope
loopne
lcall
jmp
call
andl
push
push
sbb
adc
xchg
adc
shl
push
xor
rcrb
enter
fucomp
lock
pop
jp
inc
fsubrs
or
frstor
xor
add
lods
dec
xor
or
or
adc
or
cmp
and
and
sub
lret
mov
jo
cwtl
cmpsb
aam
pop
mov
push
mov
je
daa
aam
cwtl
sbb
xchg
add
sbb
dec
xor
adc
ret
fildl
sub
push
adc
lds
inc
and
push
insb
loope
leave
xchg
into
push
lcall
inc
adc
mov
mov
lds
push
insl
mov
push
repz
jecxz
stc
and
xor
mov
jl
xor
inc
xchg
cmpsb
ret
cmovno
dec
les
sub
cwtl
rorl
test
ss
sbb
loop
or
pop
push
arpl
inc
dec
mov
data16
inc
sub
inc
fldl
lods
lods
adc
ja
and
aas
dec
or
add
cmp
shr
push
xchg
test
cwtl
mov
jge
lcall
lahf
in
sbb
or
dec
mov
shll
rcll
imul
and
jb
pop
out
dec
cmp
add
adc
cmp
enter
dec
sti
cmp
test
loop
fstps
add
jp
pop
and
cmpsb
push
popf
push
and
xor
add
jb
vhaddpd
call
sbb
daa
push
enter
or
mov
lds
push
and
clc
mov
nop
test
sub
sahf
pop
pushf
lods
scas
out
add
push
mov
imul
or
dec
xor
mov
jge
or
decl
push
xchg
pop
and
loopne
lcall
dec
out
add
imul
int
xor
pop
xchg
mov
ljmp
jbe
xchg
pop
jo
sbb
inc
gs
push
adc
cwtl
mov
inc
pop
jge
enter
test
rclb
xor
mov
arpl
ljmp
xchg
andb
cmpsb
pusha
sub
pop
jae
and
sbb
sbb
push
cmp
adc
loop
push
shlb
and
fisttps
fnsave
or
mov
cmpsl
js
fldenv
test
cli
dec
and
adc
in
icebp
dec
subl
sahf
or
ja
cmp
mov
rcll
fcompl
mov
add
xchg
push
or
gs
add
pusha
lods
mov
add
adc
jmp
fsubrl
shll
mov
sahf
cmpl
jmp
in
xor
sbb
insl
pop
xchg
push
jne
int
dec
mov
pop
movsb
xchg
lahf
adc
notl
mov
sub
mov
inc
scas
jb
pop
nop
add
sbb
push
push
or
pusha
stos
sarl
xor
ja
lods
fs
sub
test
inc
lock
pop
push
push
xlat
divl
stos
cmp
andl
adc
sbb
jle
repz
add
shrb
into
push
jb
jg
pop
aas
mov
test
iret
dec
lds
mov
pop
sub
push
flds
jg
lds
lret
ret
fisubl
hlt
xor
sbbl
imul
cmpsl
shll
inc
outsl
xor
enter
aad
daa
lret
mov
les
pop
loop
push
mov
cmp
adc
cwtl
loopne
int3
subl
inc
sub
rolb
add
mov
lret
in
es
mov
test
popa
std
ss
sub
jmp
aas
in
sbb
push
out
mov
arpl
cs
push
xchg
test
daa
add
push
ret
xor
sbb
xchg
pop
jo
sti
lods
and
add
inc
push
leave
and
inc
push
bt
aas
or
mov
iret
idiv
fs
stc
xlat
mov
push
xor
xchg
xor
xchg
ss
mov
lods
es
sbb
and
xorb
pop
nop
testb
inc
enter
push
dec
or
shlb
push
dec
jno
sub
add
shl
leave
sub
xchg
pushf
mov
std
sarl
jmp
cmc
push
mov
add
sbb
inc
lahf
mov
daa
adc
je
aam
icebp
icebp
dec
xor
in
mov
cld
jecxz
mov
int3
call
sbb
jae,pn
jge
imul
dec
rorl
mov
mov
sbb
or
setp
push
lcall
push
add
dec
push
inc
cmp
cmp
sbbb
jae
nop
ljmp
mov
xor
push
inc
mov
in
int
fcomps
addb
push
repnz
popa
aad
mov
imul
ffree
sub
fsubrp
or
lods
in
gs
in
sahf
jecxz
xor
jecxz
fisubl
fistl
xor
loope
roll
dec
std
in
fwait
pop
add
sub
int
lods
dec
dec
scas
mov
jge
idivb
add
inc
xchg
test
dec
pop
dec
jne
subb
sub
loope
push
in
mov
outsb
xchg
gs
pop
aaa
in
nop
scas
out
dec
test
cmc
add
or
fcoml
repz
imul
test
scas
rolb
data16
or
add
xchg
ret
pusha
cmp
hlt
jecxz
fdivrp
fistps
test
and
pop
add
lcall
loope
adc
popa
push
lea
ljmp
or
loop
adc
sub
jl
lcall
and
sub
shr
pop
mov
dec
xchg
adc
mov
dec
outsl
int3
jo
aas
and
push
cmc
cmc
rcpps
subl
mov
ljmp
mov
shlb
jl
xchg
aam
pop
pop
cltd
lahf
pop
cwtl
data16
mov
lds
adc
inc
notl
dec
or
mov
fstl
jnp
mov
negl
sbb
mov
mov
in
les
adc
mov
fnstsw
int
ljmp
sub
mov
add
sub
or
fbstp
mov
pop
popa
sbb
nop
ss
fistl
pop
xor
mov
sub
lods
ljmp
or
jmp
movsb
fiaddl
push
cmp
cmpsl
xor
cmp
pushf
stc
sarl
or
fnstenv
dec
imul
hlt
jle
adc
pushf
mov
xchg
cmp
push
je
aam
out
mov
push
mov
je,pn
jns
popf
add
sbb
jbe
and
cmp
lcall
push
sbbl
enter
or
sub
sub
ret
inc
xorb
mov
mov
push
xor
aam
sbb
cmpsl
icebp
or
pop
xlat
adcl
iret
bound
mov
fwait
icebp
pushl
inc
xor
out
push
mov
add
hlt
inc
imul
fbld
sub
lds
adc
es
pop
sahf
les
mov
xchg
mov
pop
pop
aam
push
fistps
mov
iret
stos
js
xchg
repz
adc
add
enter
jle
jp
imul
adc
mov
fstpl
jne
lret
mov
add
icebp
insl
cmc
dec
test
shr
pop
insb
mov
jo
push
js,pt
iretw
add
sbb
and
fiadds
mov
lods
out
call
movd
pop
pop
imul
or
xor
enter
push
fsubrl
in
jl
rcr
mov
xlat
xor
loopne
pop
mov
or
jp
pop
sub
into
jge
daa
push
bound
repz
adc
inc
jns
scas
sub
pop
fidivrl
mov
addr16
and
xchg
jnp
or
les
cmpb
pop
adc
mov
add
mov
sbb
ret
in
or
dec
push
push
sbb
pop
movb
out
in
and
lock
mov
fidivs
and
fs
inc
call
fistps
test
icebp
cli
sti
fwait
xor
lds
mov
inc
adc
cld
cmp
push
shlb
icebp
sub
xor
add
subl
jge
mov
out
in
jmp
cmp
xor
add
pop
inc
mov
popf
cli
mov
int3
jge
idivl
or
shlb
test
cli
pop
mov
into
mov
sub
adc
xlat
or
mov
jmp
fwait
jns
sbb
lods
sub
das
cltd
pop
dec
add
jle
ror
and
add
rcrb
shr
call
clc
inc
and
in
orb
xor
push
dec
and
dec
enter
adc
jle
push
jae
es
add
mov
fwait
outsb
js
pop
mov
lock
hlt
add
push
imul
sub
mov
aas
fcoml
mov
and
mov
outsl
sub
movl
icebp
and
std
lods
scas
mov
jecxz
mov
aad
pop
gs
ret
push
jne
scas
adc
pop
je
clc
mov
pop
cmp
pop
cmp
mov
orl
pop
shl
adc
or
inc
dec
xorl
jmp
clc
aas
movsl
fcoms
sub
push
inc
aad
sub
adc
popf
hlt
sub
ss
fcmovnb
hlt
fwait
cmp
loopne
fldcw
subl
idivl
dec
mov
mov
dec
mov
sbb
dec
fldcw
fcmovnbe
or
fildl
inc
xchg
int
stc
adc
repz
lds
mov
push
aad
fnsave
mov
or
add
mov
test
icebp
lret
mov
mov
arpl
je
fsts
xor
outsb
outsb
arpl
pop
and
lea
js
pop
cld
mov
lods
adc
cmp
shlb
bound
dec
inc
jbe
mov
sbb
jne
push
pop
sahf
js
or
mov
loop
test
lret
repnz
enter
scas
bound
dec
pushl
mov
je
mov
test
pusha
fistl
or
into
jns
call
add
adc
push
mov
ja
push
lock
adc
pop
xchg
jecxz
mov
jne
je
push
stos
mov
icebp
mov
mov
int
inc
sbb
sub
test
push
and
mov
mov
scas
aam
icebp
test
push
and
mov
inc
lret
inc
movsb
shr
aaa
cmp
jbe
mov
dec
inc
mov
xor
insb
mov
movsl
nop
push
aas
sti
mov
or
push
or
mov
adcb
std
popf
jle
je
dec
xchg
pop
mov
or
dec
gs
sbb
xchg
add
inc
adc
and
fildll
push
movsb
ljmp
imul
mov
mov
fs
call
dec
call
insb
clc
sti
fnsave
and
frstor
push
fcomps
je
adc
dec
lock
call
cwtl
cmp
inc
aas
xor
ja
mov
pop
cmp
push
data16
cs
pop
aaa
iret
add
insb
cmp
fadd
pop
divl
lahf
leave
jo
mov
mov
imul
inc
sub
lahf
inc
shrb
push
xchg
cmp
loope
outsb
ljmp
mov
inc
insl
adc
mov
inc
mov
mov
fcoms
xor
push
adc
jbe
mov
cld
loop
test
enter
and
sahf
xor
test
test
pop
adc
insl
sub
stos
cmp
mov
xchg
mull
add
or
jns
sbb
pushf
gs
cmc
jmp
stmxcsr
adc
cmp
mov
mov
imul
notb
dec
xchg
jl
fildl
insb
and
aas
push
aam
or
adc
cmc
jno
inc
mov
push
outsb
in
cmc
stos
arpl
push
mov
popf
roll
jne
enter
xchg
cltd
scas
ljmp
inc
mov
or
xchg
jl
cltd
and
subl
xchg
or
sbb
mov
mov
sarb
rorl
call
clc
add
lahf
xor
fstl
insl
and
pushf
loopne
and
cwtl
and
push
dec
stc
je
sbb
popf
cmpb
push
xor
pop
notl
mov
outsl
sbb
add
mov
jns
lcall
in
lcall
push
cs
jae
and
xchg
cmp
jnp
in
mov
daa
roll
pop
sbb
ljmp
mov
sub
adc
sub
push
ret
pop
scas
and
xor
xlat
inc
cmp
cld
dec
xchg
test
test
shrb
pop
adc
push
outsb
add
cmc
movsb
fs
add
jg
or
insl
fs
dec
popa
data16
mov
in
gs
push
pop
enter
cmpb
or
sub
xchg
aaa
inc
shll
rorl
or
jb
movsl
mov
fwait
xchg
sub
jnp
mov
add
aad
out
pop
mov
jno
pop
out
daa
mov
aam
dec
test
call
call
and
jnp
xor
inc
aaa
xchg
aas
mov
testb
jnp
ret
push
xor
mov
in
push
imul
mov
enter
lcall
add
add
cmp
pop
jae
mov
xchg
inc
adc
fisttpl
lcall
or
aad
dec
shlb
popa
call
aam
in
jl
pushf
sub
outsl
or
out
xchg
jns
hlt
pop
ds
mov
in
sub
in
mov
outsb
bound
sub
iret
cmp
and
push
popa
js
mov
or
in
dec
pop
push
cmp
or
shll
xorl
mov
in
cli
dec
push
mov
mov
pusha
mov
addl
ss
mov
stos
mov
in
mov
add
jo
rorl
enter
iret
mov
inc
out
rclb
pop
adc
std
popa
pop
push
cmp
in
inc
jl
fstl
icebp
cmp
enter
xchg
fstpt
pop
cmp
mov
add
insb
lcall
out
ror
fcoml
stos
jbe
add
pushf
xchg
and
jecxz
fs
iret
dec
es
pop
push
fiadds
loope
into
aam
mov
js
inc
or
mov
xor
jns
xchg
push
es
mov
mov
mov
addr16
cmp
xchg
xor
jbe
test
inc
xlat
ret
leave
cli
or
aam
or
xchg
jne
ds
mov
jns
arpl
pop
and
cmp
pop
mov
mov
pop
outsb
sbb
dec
verw
dec
ret
aaa
lods
inc
outsl
dec
xchg
jle
test
fsubs
or
subb
pop
sbb
add
adcb
jl
xor
sbb
into
js
sbb
mov
push
aaa
xor
mov
rcr
adc
sub
jbe
xlat
orb
mov
pop
pop
lahf
pop
call
testl
jne
sbb
test
jae
inc
jb
adc
mov
mov
rolb
shlb
or
lea
fwait
icebp
fdivp
cld
std
andb
fwait
lahf
scas
xchg
sub
bound
mov
xchg
jecxz
ljmp
jnp
jno
sahf
cwtl
test
jmp
cmp
dec
push
mov
ss
jmp
iret
ja
sub
jbe
sub
stc
stos
mov
sbb
mov
xchg
mov
repz
loop
ret
pop
dec
imul
xchg
xchg
inc
pop
sub
lods
cwtl
into
adc
push
js
sub
ret
insl
jns
inc
daa
in
je
bound
xchg
call
dec
mov
push
pushf
mov
cmp
mov
xchg
je
xchg
push
xchg
pop
pop
faddp
lret
jns
das
fisubrl
ret
cmpsl
shl
cmp
fstl
sarb
ret
and
pop
mov
lcall
sbb
imul
mov
out
mov
lods
cmp
aas
in
dec
xor
push
out
or
cmp
add
notl
push
xchg
and
xor
or
push
mov
cmp
add
push
ftst
cs
sti
adc
xchg
das
xor
sbbb
ret
sub
push
jmp
lret
std
shll
or
xor
inc
fmull
dec
adc
sub
jmp
in
cli
cmp
adc
pop
inc
test
mov
pop
cmp
or
daa
dec
idivb
sbb
lock
xor
fnsave
adc
out
outsb
test
aam
push
lahf
subl
xchg
fimuls
negb
outsb
sarb
mov
sbb
pop
mov
mov
ret
ja
or
fisubs
insb
lahf
divb
adcl
outsl
aaa
adc
aad
sub
add
jle
loop
es
push
xor
sub
js
jno
pop
pop
lret
cmp
inc
in
in
push
jae
repnz
out
mov
popf
lret
mov
rorb
inc
dec
mov
movsb
pop
sti
nop
mov
push
cmp
stos
add
xor
in
push
shl
les
jns
divb
out
hlt
xchg
popl
outsl
out
fadds
mov
and
insb
jmp
imul
inc
xchg
call
sbb
popa
or
jecxz
ficoms
test
aad
dec
fdivrs
clc
test
mov
mov
popf
sub
push
lcall
xor
mov
pop
jns
call
mov
test
inc
xor
dec
cmpsb
jmp
test
adc
in
ljmp
into
movl
push
cmc
xor
add
or
xchg
xor
sbb
dec
xchg
cmp
inc
mov
inc
mov
push
push
fdivs
jbe
adc
push
icebp
jecxz
call
insl
xrelease
pop
in
xor
push
cs
imul
inc
jno
pop
sub
pop
add
jb
pop
int
pop
sub
push
aam
cld
jecxz
ret
inc
or
rolb
stos
pop
cwtl
inc
out
sub
daa
xchg
jge
jp
pop
or
cmc
or
aas
cmpsl
xlat
and
rcll
enter
push
bound
pop
js
cli
out
dec
lret
es
sarb
mov
adcb
pop
mov
add
mov
sbb
mov
jg
push
cmp
pop
xor
lds
adc
adcb
and
or
or
testl
xor
adc
inc
lods
js
addr16
adc
sahf
sub
into
push
std
or
cltd
mov
push
fsubrs
scas
imul
xchg
repnz
pop
and
xor
xchg
sub
scas
daa
cwtl
out
fmuls
icebp
jo
pop
ds
in
daa
pop
adc
or
andl
dec
sbb
mov
stc
pushf
xchg
pop
dec
std
cld
mov
lret
and
cs
mov
add
jb
out
pop
stos
mov
movsl
fbstp
lods
out
test
jno
fidivl
inc
mov
inc
or
in
sub
mov
sbb
arpl
pusha
test
inc
insl
test
lock
cmp
movsb
inc
mov
xor
inc
dec
in
cmp
or
shlb
loop
fistpl
xor
cmp
enter
add
xchg
jno
mov
push
sub
loopne
or
fsubs
mov
and
test
jb
xorb
pcmpeqb
mov
cltd
mov
sbb
add
jnp
scas
outsb
xchg
push
xchg
dec
leave
fistps
test
out
cmp
ret
addr16
in
dec
dec
clc
stos
push
adc
jae
outsb
insb
mov
sahf
mov
test
sub
inc
dec
or
push
jnp
and
xor
call
or
xor
and
cmpb
nop
mov
pop
mov
or
arpl
add
add
ljmp
dec
pop
test
jae
push
mov
sub
repz
mov
mov
adc
stos
stos
adc
rclb
mov
pop
stos
push
das
sub
sub
lock
sbb
xchg
pop
pop
cmp
and
xchg
dec
pop
les
xchg
dec
pop
int
cmp
sub
imul
enter
out
mov
negl
inc
testl
pop
jmp
outsl
mov
lret
adc
fs
pop
mov
hlt
into
mov
daa
and
lods
pop
test
pop
lods
sti
push
jp
cld
test
ret
push
mov
push
test
outsl
push
lret
gs
push
aad
add
fistpll
decb
dec
cmc
cmp
out
and
mov
nop
fistps
lret
stos
xchg
push
pop
js
mov
or
out
push
lret
fucomip
cli
add
xorl
dec
shrb
jge
repz
mov
frstor
or
xor
jle
cmp
jne
fcmovnb
jno
xchg
xorb
push
jb
push
nop
inc
inc
cltd
mov
jp
pushf
or
insb
push
out
das
enter
test
test
repnz
or
add
and
jl
sub
imul
loop
das
inc
xor
xchg
mov
xor
outsl
cmpsl
dec
outsb
lret
shlb
dec
lahf
or
mov
mov
cmp
lret
ss
inc
jle
les
and
dec
sbb
sahf
cmc
je
mov
dec
dec
test
dec
mov
popa
push
or
ret
call
jle
jg
das
arpl
pop
in
insl
jl
add
je
xchg
and
fs
andb
jp
sahf
rcll
dec
sbb
hlt
daa
sbb
stc
cld
stos
das
test
jno
push
adc
xchg
mov
bnd
popf
insl
dec
bound
or
imul
movb
dec
out
jae
stos
cmp
gs
fimuls
aad
and
mov
pop
or
or
lds
jbe
adcl
pop
push
push
cmp
adcb
ret
dec
std
xor
mov
addr16
out
adc
push
test
cmp
mov
stc
mov
outsl
cmp
mov
leave
inc
pop
loopne
jp
cmpsl
pop
int
int3
shlb
popa
out
mov
jl
fdivrs
bound
repnz
pop
lea
fs
cmpsl
jno
inc
mov
je
out
leave
les
popa
stc
lods
negb
push
xor
sahf
xlat
jne
ss
jno
pusha
push
pop
das
inc
notl
xchg
or
pop
sbb
xor
fsubrs
xor
aas
xchg
mov
or
pop
adc
and
das
inc
movsl
fwait
repz
data16
push
mov
inc
int
stc
pop
sub
test
sarl
mov
leave
or
xor
ljmp
arpl
inc
xor
cmp
movsb
inc
aas
pusha
cs
test
sbb
out
xlat
jne
aas
mov
arpl
mov
inc
inc
in
cmpb
mov
dec
xor
add
sub
inc
jne
clc
mov
jp
fadds
iret
pop
adc
mov
xor
es
stos
xorl
inc
pusha
das
push
testl
add
outsb
xor
jmp
jo
mov
sub
cmpsl
out
add
dec
xor
fs
ds
mov
ret
lods
xchg
mov
iret
loope
mov
mov
xchg
ljmp
pop
inc
mov
testl
xchg
jnp,pn
or
loope
cmp
xor
hlt
ret
push
pop
jo
cmpsl
dec
push
cmp
jb
sahf
jo
dec
lahf
mov
stos
loopne
and
adc
inc
xor
xchg
subb
out
gs
sub
push
ror
movb
jl
push
out
xchg
neg
or
das
shlb
xor
cmp
jge
iret
mov
loopne
xchg
test
je
sub
pop
push
dec
or
mov
movsl
loop
ficoms
push
dec
sub
divb
cmp
dec
test
adc
out
test
cmp
xor
jo
xor
pop
dec
and
je
mov
hlt
out
or
fs
data16
roll
xor
inc
add
sar
sub
lods
ret
lods
push
call
sahf
jno
test
scas
inc
mov
ds
mov
mov
int3
mov
push
push
add
ror
fcompl
loop
je
and
out
mov
or
adc
sbb
xor
aad
pop
in
mov
in
sbb
int3
push
in
out
dec
scas
push
dec
jns
sbb
std
cmp
fstps
lock
add
dec
dec
imul
pop
xchg
mov
out
inc
cmp
dec
xor
dec
jmp
mov
mov
stos
imul
push
mov
add
inc
out
iret
mov
mov
in
mov
xlat
aam
shl
pop
xlat
arpl
and
movsl
fwait
je
je
fstl
cld
push
lret
andb
cltd
xor
cmpb
repnz
dec
pop
pop
into
pop
push
andb
setne
ja
into
lds
js
jmp
test
sub
lds
arpl
jne
jg
adc
inc
fwait
leave
adc
jl
je
aam
sahf
daa
add
test
inc
jnp
addr16
scas
xchg
loope
xor
pushf
inc
cmp
xlat
add
int3
push
pop
xor
mov
aam
faddl
xlat
adc
or
inc
lods
xorb
dec
adc
inc
clc
xor
lahf
push
std
icebp
pop
test
lahf
push
xchg
ds
lock
iret
mov
xorl
xor
out
inc
jae
jne
xchg
mov
fmuls
xchg
pop
xchg
popf
xor
sarl
into
push
repz
lods
mov
cltd
mov
pop
fcom
mov
xor
aad
hlt
or
cld
mov
or
fs
and
out
fiaddl
pop
push
outsl
xchg
addr16
and
add
lds
out
xchg
in
outsl
enter
cmp
xchg
cmp
pop
in
cltd
dec
sbb
fsubs
adc
aaa
loopne
in
in
jp
daa
jp
imul
cwtl
or
outsl
cs
jle
lahf
aam
cmp
fwait
or
inc
jl
sbb
or
repnz
outsb
fcompl
aas
add
xor
adc
mov
fsubr
mov
adc
jp
mov
cli
sub
mov
bound
mov
jecxz
xlat
insb
xchg
ss
push
and
pop
xchg
inc
mov
outsl
mov
pop
add
fnstcw
dec
mov
lods
xchg
out
dec
add
xor
sub
cmp
xor
into
test
push
sbb
add
leave
aad
sbb
jg
ftst
xlat
ret
xchg
xchg
int3
icebp
mov
push
lods
out
aad
mov
xorps
mov
pop
mov
iret
stc
push
mov
in
cmpsl
mov
bswap
pop
ret
je
nop
inc
or
dec
cmp
mov
fcoms
mov
and
mov
faddp
push
inc
mov
or
mov
sbb
or
aam
add
jns
mov
push
dec
pop
jb
and
and
or
pop
pop
ljmp
push
mov
mov
cmp
mov
loopne
les
jbe
push
jmp
divb
sub
in
out
test
movsl
inc
mov
adc
movsb
leave
pop
lcall
jae
je
pop
lahf
lock
xchg
and
push
lds
inc
scas
pop
or
shlb
cli
pop
xor
fcomps
mov
shll
and
movsb
inc
pop
or
mov
mov
fstpt
cltd
and
mov
int3
cmpsb
jo
xchg
xor
mov
adc
flds
mov
adc
icebp
dec
sub
mov
sarl
dec
cmp
xchg
mov
rcll
cli
mov
or
in
pop
loopne
pop
shl
mov
pop
in
jl
push
imul
or
adc
inc
or
xor
jp
cwtl
pop
int3
addl
dec
in
fcompp
inc
push
call
movsl
push
inc
push
int
sbb
repz
mov
roll
sub
fst
sbb
ss
out
dec
mov
jp
cmp
sub
add
dec
fcoml
sbb
mov
pop
adc
mov
mov
fsubrs
sbb
mov
cld
je
sbb
fbld
sub
dec
push
sahf
adc
mov
inc
mov
cmp
sub
rcrl
in
lahf
std
idiv
aas
mov
mov
push
xchg
pop
mov
push
adc
inc
pop
mov
int3
or
push
ljmp
test
stos
cmpsl
xchg
out
scas
add
dec
cmp
data16
data16
inc
cmp
xor
hlt
test
and
dec
sbb
xor
mov
out
xchg
subl
sbb
out
dec
push
rclb
xchg
sub
fnsave
xor
pop
fildl
mov
add
cltd
jnp
rcrl
pop
stc
push
and
cmp
or
dec
mov
lods
adc
inc
xchg
add
xchg
sti
mov
ja
xchg
sub
lret
test
not
call
outsl
rcrl
push
push
daa
push
or
push
adc
je
call
lock
mov
mov
orb
imul
loope
repnz
push
xor
jecxz
dec
sarl
pusha
push
adc
imul
pushf
sti
inc
push
inc
and
jnp
xchg
pop
mov
loope
mov
mov
ss
movb
push
into
sub
out
int
xchg
std
movsl
sbb
inc
add
ss
ljmp
or
inc
aad
ret
stos
fidivl
xchg
jge
imul
jns
sbbl
lock
xor
mov
sub
adc
adc
push
add
loope
clc
out
sar
push
in
cmpsb
call
fistl
outsl
aam
add
push
nop
fwait
dec
loop
sbb
iret
mov
mov
adc
xor
repnz
cmpl
mov
lcall
out
pop
push
outsb
movsb
pushf
lock
cmp
lods
adcl
sub
pop
mov
mov
lds
mov
outsb
scas
out
and
gs
and
popa
fsubs
pop
adc
sbb
sub
sbb
push
cld
cmpsb
mov
mov
scas
js
ljmp
pop
pop
push
fs
ret
test
inc
add
out
push
addl
inc
jnp
mov
and
cmp
push
je
and
dec
mov
mov
lahf
xchg
mov
movsl
roll
imul
jg
mov
dec
jmp
ss
push
sbb
mov
pop
push
inc
mov
cmp
mov
fiaddl
pop
leave
popf
movsl
and
inc
and
jp
cmp
test
aad
sub
lea
sub
popf
fildll
arpl
jno
call
out
mov
ljmp
jb
mov
fs
sbb
mov
xor
mov
xor
insl
out
je,pn
add
and
inc
inc
stos
ljmp
xor
inc
and
fsubrs
pop
fdivs
cmpsl
cmp
mov
rcrl
and
data16
jo
ret
mov
xlat
add
xor
adc
mov
xchg
and
cmc
push
pop
mov
out
shlb
mov
or
sbb
ds
mov
pop
cmp
mov
pop
mov
xchg
push
push
pop
repnz
push
pop
scas
ljmp
out
add
lock
cmp
mov
sbb
jb
sbb
sub
daa
clc
ret
test
fisttpl
cmc
push
test
pop
jbe
mov
shr
imul
jmp
scas
add
pop
and
jecxz
outsl
mov
daa
pause
adcb
push
or
xchg
add
popf
jg
sbb
stos
fmuls
xchg
mov
push
in
push
test
cs
cmp
pop
sbb
movsb
jmp
out
ret
pop
inc
xor
add
stos
sahf
into
mov
mov
mull
imul
pop
jnp
testl
loop
push
gs
push
push
xor
in
fdivrl
or
mov
jbe
cmp
add
inc
aam
movsl
out
out
lods
clc
sub
aas
push
or
out
int3
fdivrs
test
ja
xchg
std
call
pushf
adc
sbb
out
fwait
mov
mov
repz
fld
inc
mov
pop
push
jo
add
fs
leave
inc
in
sahf
bound
mov
andb
fiaddl
push
cmp
repnz
mov
orb
imul
pop
adc
adc
jbe
test
int
pop
in
scas
lret
pop
iret
xchg
sub
cmpsl
shlb
in
mov
into
outsb
cmp
lea
mov
ret
and
test
fistl
sub
in
xchg
cmp
or
pop
or
int3
fstpl
lods
jnp
pop
clc
or
lret
hlt
cmp
dec
fistpl
add
imul
and
nop
stos
lea
sbb
aaa
push
and
fdivrp
push
lret
insb
push
add
cmp
pop
aaa
movb
mov
adc
or
xchg
add
add
lods
mov
cwtl
mov
or
or
mov
into
xchg
add
leave
mov
out
aad
mov
ds
lock
call
in
and
mov
dec
xchg
and
loope
xchg
sub
push
das
mov
jbe
jbe
adc
loope
jae
aam
ja
pop
or
and
adc
testl
add
add
xchg
mov
ss
je
xor
pop
iret
iret
arpl
sub
enter
jne
or
pop
push
cmp
cmp
hlt
stos
scas
cmpsl
mov
push
movsl
push
fsubrs
nop
push
adc
pusha
cmp
loop
insb
stos
adc
mov
loopne
cwtl
add
ss
sbb
or
mov
out
cli
fcmovnbe
xchg
out
inc
mov
gs
or
mulb
lea
scas
into
ds
or
jae
gs
out
test
lods
lods
js
fnsave
jp
stos
in
mov
call
jecxz
cmc
xchg
mov
and
icebp
sbb
mov
push
ds
or
xchg
jae
mov
or
outsb
jbe
sub
and
out
pop
xlat
decl
sti
in
cmp
pop
mov
cmp
popf
xor
push
loop
pop
scas
jl
pop
push
mov
sbb
jno
pop
add
int
dec
in
pop
lds
clc
or
ret
cwtl
xchg
and
cwtl
lods
xchg
adc
push
adc
in
push
stos
sub
stos
cmpb
or
pop
adc
add
pop
lods
push
int
mov
aaa
push
jp
lock
inc
dec
inc
aas
ja
mov
test
cmp
je
cld
pop
sub
cmpl
lods
adc
push
or
test
push
and
cltd
fidivrl
gs
aas
jg
xor
clc
mov
jecxz
mov
aaa
inc
cld
and
lods
xor
adc
xor
sbb
dec
lds
mov
je
jnp
xor
js
pop
lret
add
mov
std
pop
pop
aam
xlat
insb
mov
dec
loopne
lock
inc
out
insb
push
pop
imul
gs
test
movsl
rolb
pusha
loopne
fs
outsb
or
add
repz
and
mov
mov
xor
pushf
int
push
nop
cmp
sbb
mov
nop
lock
mov
adc
les
out
call
dec
orps
cmp
dec
mov
mov
add
sub
sub
loope
stos
shl
fsubs
aam
pop
mov
lods
nop
mov
psrlq
popaw
call
clc
xchg
pushf
arpl
sbb
jbe
mov
pop
cmp
adc
jae
push
aaa
out
jne
or
xorb
add
jns
bound
popw
jbe
fwait
pop
lock
cwtl
jbe
pop
fcoms
sub
lret
ljmp
lea
jae
mov
dec
jg
mov
lods
or
in
push
test
inc
mov
cmp
leave
or
push
test
sbb
lret
sbb
fisttps
sub
push
aad
mov
in
adc
adc
mov
sub
xchg
inc
cmpsl
fdivs
hlt
push
adc
push
add
sbbl
fsubrl
in
xchg
jns
aas
mov
sub
push
rcr
dec
les
iret
test
push
clc
outsb
mov
dec
outsb
jnp
mov
add
fucomp
sub
loope
add
adc
in
dec
sub
and
outsl
call
pop
outsb
call
inc
fisubrs
daa
cld
jbe
pop
imul
mov
sub
ret
push
arpl
sbb
jno
addb
jp
negb
ret
push
or
xor
call
cs
mov
dec
push
mov
cld
outsb
into
std
xor
jge
jnp
and
stc
or
jl
movsb
mov
xchg
adc
or
push
ds
adc
cmp
pop
stc
jns
out
xchg
mov
scas
cmp
mov
int3
outsb
cmpb
and
int
xor
inc
frstor
sbbl
insl
nop
mov
lea
push
js
pushf
imul
into
pop
xor
push
js
push
lcall
sub
push
sbb
jne
out
es
fimuls
aas
mov
inc
push
sub
push
push
sti
adc
pop
pushf
test
mov
mov
jmp
leave
lret
inc
popaw
and
fwait
lahf
cmp
ret
mov
push
jmp
ljmp
push
pusha
arpl
xchg
outsl
xchg
data16
or
lods
add
es
push
inc
aaa
inc
inc
lahf
jno
aaa
dec
push
xor
xor
push
mov
stc
sbb
pop
out
cmpxchg
xor
and
push
xor
dec
cmp
push
enter
push
mov
rorl
shll
aam
je
or
pop
sbb
inc
stos
sub
sti
iret
cmpsl
mov
lret
mov
dec
jmp
movsl
hlt
pushf
addr16
inc
pop
in
xchg
mov
fimuls
lahf
je
or
and
js
stos
mov
mov
aad
sbb
jae
inc
std
sub
enter
movsb
jecxz
pop
push
or
mov
aam
pop
aam
inc
adc
push
adc
je
sbbb
add
popf
je
incb
lahf
inc
sti
adc
and
or
stos
std
dec
dec
lods
jmp
neg
cmp
out
pushf
sub
inc
out
lea
ret
and
ret
sub
clc
sbb
jl
jo
loope
inc
cltd
inc
movsb
inc
cmpsb
loope
jl
ret
ljmp
les
sar
sti
fwait
lret
add
shlb
out
adc
out
sub
xchg
xor
aam
cmp
mov
push
outsl
arpl
or
lds
je
insb
or
sbb
cmpsl
les
ret
mov
pop
mov
in
push
lds
xchg
jo
mov
jmp
int3
mov
push
xchg
mov
mov
pop
or
fdivl
cmc
stc
sub
xchg
in
push
xor
push
mov
lock
shlb
daa
sub
push
js
test
or
mov
subl
mov
fisubl
mov
jb
xor
or
ror
incl
enter
je
mov
pop
mov
insl
outsb
dec
sub
mov
mov
dec
cmp
mov
int3
ret
jae
mov
adc
adc
push
cmp
dec
dec
sub
jnp
stos
mov
fistpl
insl
in
clc
add
mov
adc
out
enter
cs
outsl
int3
popa
pop
and
sub
push
cmp
mov
das
inc
xor
aam
pop
push
cmp
xchg
dec
clc
mov
std
repnz
fisubl
cmp
jmp
cmp
bound
xchg
adc
ljmp
sub
ljmp
xlat
push
negl
mov
xor
lret
mov
fisttpll
daa
dec
sbb
in
aaa
sbb
adc
mov
xor
andb
in
sub
aam
int3
adc
test
out
or
lret
cmp
in
push
and
andl
lahf
in
shrl
mov
es
iret
xchg
ljmp
rclb
test
ror
std
dec
es
sub
decb
xor
add
push
cmc
pop
inc
test
add
in
das
mov
mov
dec
dec
imul
cmp
in
inc
fisubs
movsl
xlat
add
sub
lret
aam
xlat
pop
dec
fs
ss
mov
or
out
bound
loope
rclb
jnp
lret
push
cmp
movsb
cli
rcrl
mov
lahf
mov
fists
jmp
mov
lcall
dec
or
shll
or
ljmp
jle
cmp
jns
sti
out
or
adc
and
jno
mov
mov
xor
stos
repz
mov
dec
hlt
or
pop
enter
cwtl
call
test
xchg
mov
imul
lods
xchg
out
outsb
iret
pop
mov
mov
in
in
pop
in
push
jecxz
out
lret
in
or
mov
das
mov
out
jne
inc
and
ds
lods
xor
xchg
push
out
cmc
clc
outsl
dec
stc
push
jmp
and
cwtl
frstor
sub
mov
add
shll
and
add
push
sbb
xchg
pop
imul
and
mov
cmpsl
xchg
mov
or
pop
rorb
inc
inc
cmp
arpl
sbb
xor
cmp
data16
ljmp
gs
mov
pop
lods
js
jnp
xor
repz
notb
xchg
cs
pop
mov
mov
inc
or
jno
and
jo
fisttpl
pop
imul
and
dec
xor
daa
fsubl
sbb
push
jae
pop
hlt
fdivrs
out
test
subl
push
movsb
test
dec
sbb
sub
cmpsl
mov
lods
xchg
mov
or
sarb
testl
adc
mov
xchg
or
xorb
out
int3
out
push
in
mov
add
xor
adc
or
mov
jnp
mov
arpl
xor
leave
leave
inc
dec
ljmp
push
dec
jbe
pop
jmp
movsb
adc
mov
xor
into
mov
test
lock
or
arpl
mov
add
jns
cmp
fdivrs
add
aas
and
aaa
mov
int
and
pop
imul
or
cmp
sbb
ja
ljmp
scas
pop
cmpsb
mov
fidivs
mov
jbe
xlat
scas
push
loopne
mov
stc
je
in
pop
xchg
js
cld
lods
lahf
aas
subl
adc
rclb
clc
leave
call
mov
xchg
into
sbb
addl
mov
pop
push
std
test
fistpll
loop
cmpsl
cmpl
int
mov
iret
or
bnd
jb
dec
xor
xchg
add
fwait
inc
mov
fs
jecxz
sti
or
out
lret
add
js
jo
sub
jns
ss
cmp
pusha
mov
lods
les
xor
nop
jbe
rorb
dec
ja
popf
testl
icebp
mov
mov
inc
out
sbb
mov
scas
loop
xchg
and
mov
cmpsb
out
jae
inc
test
gs
in
dec
clc
and
xchg
cmp
mov
cmovo
and
fs
ret
in
push
pop
jnp
ret
push
sti
inc
aaa
insb
enter
leave
push
pop
adc
jge
aad
insb
push
mov
inc
imul
into
jmp
cmp
shlb
jnp
dec
jno
xchg
mov
jl
pop
cmp
mov
aam
push
sub
pop
aad
test
in
outsb
add
sbb
pushf
and
cmp
and
aam
jle
stc
pop
add
dec
in
out
bound
mov
cmp
cmpsl
cmp
xor
aam
mov
js
push
sbb
mov
xor
imul
nop
jno
xchg
filds
dec
xorb
loopne
sub
push
je
cld
push
or
rolb
outsb
lret
xchg
out
jmp
xor
mov
imul
add
or
pop
clc
lret
mov
or
mov
ror
adc
fwait
arpl
pop
push
loope
xchg
xor
loop
xchg
int
or
lcall
les
mov
lahf
push
call
lds
jno
sub
pushf
cmp
sub
es
pusha
cmp
outsl
xchg
or
pop
loop
sarl
fistl
outsb
stos
neg
aad
mov
fwait
rcrb
pushf
aas
mov
xchg
test
xchg
popf
stos
cmpsb
test
call
xchg
or
dec
mov
and
xor
sbb
inc
out
enter
inc
pop
inc
xor
inc
shlb
lds
mov
je
jmp
andl
adc
fcompl
lahf
pusha
xor
inc
pop
mov
inc
jo
sti
and
test
mov
enter
cmp
jmp
test
sub
test
mul
pop
daa
int3
in
les
imul
jo
mov
outsl
cmp
jecxz
nop
mov
push
je
cmc
mov
fldenv
call
sub
mov
loopne
pushf
inc
vcvtss2sd
sub
jmp
dec
mov
pusha
inc
imul
push
mov
loope
mov
ret
lock
adc
shll
aam
pop
jmp
or
cmp
or
fidivl
test
push
jecxz
andb
mov
dec
stos
xlat
test
mov
cltd
pusha
xchg
mov
push
arpl
std
xchg
and
and
pop
into
rclb
fs
sahf
sub
into
scas
in
je
sub
mov
lahf
sahf
inc
aas
js
jo
xor
xor
pop
push
dec
popf
push
out
int3
adc
je
sub
cmp
mov
or
jle
rcl
mov
sub
mov
pop
popf
and
pop
xor
or
mov
dec
or
inc
sbb
inc
and
xor
movb
pop
cld
leave
int
xor
flds
mov
cmp
js
push
xor
jl
je
dec
adc
rolb
imul
and
js
adc
cmpsl
add
repz
add
pushf
sub
push
mov
cmp
jne
loopne
or
lcall
stos
or
lds
cltd
push
mov
adc
je
ficoml
call
pop
inc
dec
mov
sub
std
jmp
pop
cmp
dec
pop
out
xchg
and
ret
add
loope
adc
nop
icebp
mov
sub
mov
test
add
mov
dec
movsb
int3
push
or
dec
mov
icebp
clc
cli
inc
dec
jo
mov
out
mov
movsb
push
pop
hlt
xchg
push
inc
sub
ret
push
add
fadd
add
sahf
stos
ret
mov
loope
cmp
inc
mov
dec
mov
and
jae
cs
mov
rcll
push
in
sbb
aad
lret
and
cmp
push
addr16
mov
cs
xchg
mov
shl
xlat
xor
fnsave
sbb
xorb
notl
scas
mov
xchg
scas
push
xchg
jne
sbb
addl
xchg
mov
adc
pop
push
addb
adc
sbb
push
adc
xchg
cmp
inc
lds
pusha
cltd
lahf
and
cmpsl
ja
jb
pop
scas
ftst
or
adc
or
or
push
and
cmp
mov
popa
adc
push
repz
clc
jns
movb
jl
clc
xlat
jl
test
mov
sub
mov
loope
loope
inc
out
andl
rolb
add
mov
xor
adc
rorl
cmp
inc
lods
imul
mov
into
and
mov
stc
cmp
and
mov
test
fnsave
mov
sahf
mov
xchg
mov
bound
sarb
xor
inc
test
sub
jbe
lahf
movsb
pop
sub
pop
xorb
adc
xlat
dec
mov
pop
inc
mov
lock
add
mov
nop
push
mov
dec
lods
xor
sbb
ja
dec
inc
icebp
pop
roll
push
mov
mov
pop
fs
xchg
mov
ret
test
inc
cmp
cmp
jnp
scas
out
inc
pop
sbb
xorl
ss
outsb
ljmp
mov
jle
xchg
inc
cli
fadd
mov
sbb
fdecstp
scas
and
mov
mov
insb
xlat
hlt
push
call
xor
stos
les
int3
xlat
cwtl
mov
cmp
in
pop
fiaddl
jne
push
push
std
stos
xchg
sbb
cmp
rolb
pop
push
mov
lock
xlat
lea
ja
mov
dec
inc
fisubrl
fsts
xchg
mov
xchg
push
stos
stos
sub
icebp
jb
into
fs
daa
inc
add
aam
push
insb
mov
mov
mov
push
sbb
mov
in
adc
mov
leave
cwtl
xchg
inc
mov
lea
mov
push
xlat
jg
fsubp
scas
jae
push
cld
push
push
roll
out
push
pop
push
mov
jg
xor
add
xchg
or
mov
pusha
es
cli
lret
repnz
or
sub
add
nop
push
insl
popf
mov
hlt
mov
mov
mov
decl
lods
add
mov
dec
mov
sub
xchg
pop
push
ljmp
mov
loop
mov
cmp
dec
xlat
jge
dec
in
scas
out
andb
mov
sub
lods
mov
or
xor
dec
pop
cmpb
and
repnz
popa
or
pop
add
push
insl
dec
mov
jne
dec
pop
scas
mov
jmp
mov
int
mov
inc
or
sbb
shlb
mov
pop
iret
loop
xchg
sub
ss
pushf
test
scas
leave
jecxz
out
push
cmpsb
pop
jge
mov
jo
ret
add
addb
test
inc
push
cmp
mov
xchg
mov
in
and
ror
and
outsb
fistps
mov
push
mov
daa
test
sahf
cmp
movsb
daa
jge
rorl
popa
jmp
call
repz
in
dec
and
push
nop
mov
sbb
out
jmp
repz
fsubr
rorl
pop
enter
stc
ljmp
inc
andb
sub
xchg
push
xchg
out
dec
les
or
in
jno
hlt
mov
jae
jbe
add
xlat
cmp
mov
shlb
rorb
cli
cmp
jle
icebp
jle
shlb
pop
inc
push
mov
aas
ss
leave
andl
or
mov
jmp
mov
mov
ss
lds
push
mov
lock
scas
mov
pop
xchg
mov
or
mov
clc
cwtl
cmp
js
cli
inc
adc
or
js
sub
xchg
pop
ja
lcall
les
push
sub
cmp
or
xchg
mov
mov
mov
cmp
jbe
inc
imul
pop
xchg
mov
xchg
lret
cmp
cmp
insb
cmpsb
xchg
rcrb
add
dec
dec
cli
outsl
pop
mov
jmp
pop
mov
aam
xchg
adcb
stc
xchg
cmp
push
and
xchg
mov
arpl
fiaddl
pop
cli
xor
mov
shlb
test
jnp
loopne
dec
movsl
jno
fdivs
mov
sbb
push
cmp
pop
idivb
jnp
sbb
mov
xchg
and
orl
mov
xlat
test
jo
mov
pusha
lahf
xchg
or
xchg
xchg
lret
test
jbe
test
dec
pop
jae
inc
jae
shl
stc
icebp
xor
add
lods
cmpsb
mov
fwait
dec
xorb
loop
mov
adc
pop
addr16
mov
xor
mov
repz
jmp
movsl
sub
xchg
cmp
lods
jnp
or
repnz
lea
mov
jge
out
push
sub
lock
cs
xchg
and
repnz
push
add
dec
stc
push
push
out
int
jae
or
test
xchg
outsb
dec
nop
xor
sbb
pop
push
popa
and
mov
leave
adc
push
inc
std
dec
stos
int
cmpsl
sub
mov
sti
and
and
mov
mov
sbbb
gs
testl
jmp
push
mov
icebp
pop
adc
repz
mov
ljmp
sub
sub
or
jmp
or
and
imul
out
mov
dec
mov
dec
xor
lea
cmp
xchg
inc
xchg
or
movsb
jae
call
psadbw
into
mov
into
mov
dec
jle
fcmovnbe
jnp
pop
popa
push
outsb
push
cmp
pop
and
mov
inc
scas
jecxz
xchg
mov
push
lds
xor
dec
bound
cmpsl
ljmp
lcall
or
ja
jp
xor
repnz
repz
in
inc
pop
in
pushf
jno
pop
shll
in
cmp
add
and
push
mov
mov
out
je
aaa
push
pop
push
pop
icebp
aam
push
add
add
lods
pop
add
mov
cmc
arpl
jbe
dec
and
mov
jae
bound
sub
pop
mov
ljmp
mov
adc
popf
int
sub
dec
lds
popf
mov
mov
test
sub
mov
inc
mov
and
out
adc
mov
pop
push
decl
mov
xchg
lock
jg
setae
xchg
scas
movl
arpl
test
adc
sbb
cs
cmp
clc
xchg
pushf
cmp
sbb
or
test
outsb
pop
inc
stos
js,pn
jge
xchg
sbb
sub
lds
dec
jae
push
mov
pop
ds
cltd
int
pop
sub
shl
mov
mov
rcr
int3
ja
pop
clc
pop
push
jmp
and
sbb
test
mov
push
test
hlt
insb
in
sub
ret
nop
jnp
xchg
imul
xlat
xchg
and
jb
jmp
sbb
cmc
adcl
mov
ror
xchg
popa
cltd
adc
loop
dec
movsb
insb
jo
push
sahf
cmp
out
inc
mov
ret
or
inc
xor
lods
ror
xchg
fwait
and
adc
imulb
sbb
sbb
movsb
mov
in
int
hlt
dec
out
repnz
decb
in
cmp
fidivs
sub
or
stc
call
arpl
jmp
inc
adc
lock
mov
pop
and
int
jl
testl
imul
mov
fmul
packuswb
lock
mov
sbb
outsl
iret
stos
push
xchg
cmpsl
jae
or
push
popa
arpl
dec
and
mov
dec
outsl
decl
mov
xchg
clc
test
mov
xchg
repnz
jecxz
repnz
push
das
stos
pop
push
out
pmulhw
jns
sub
add
jnp
xchg
xchg
lea
out
in
cli
fidivl
sarl
test
aas
push
jne
popa
xor
leave
fisubs
inc
adc
ss
lret
cmp
xor
pop
add
leave
sahf
mov
enter
scas
adc
addb
mov
notl
rcll
sbb
loopne
xor
in
or
mov
add
xor
fsubs
scas
adc
loop
fcmovnu
out
jb
jmp
push
loop
sbb
or
or
pop
jae
pop
int3
rorl
negb
mov
nop
xchg
dec
or
jmp
xor
push
jp
out
push
imul
add
imul
scas
das
add
repnz
push
fcoml
movsl
xchg
out
pop
in
adc
mov
pop
rcr
gs
mov
mov
mov
mov
lcall
sub
dec
ficomps
push
add
xchg
popf
cmp
mov
xchg
jno
mull
and
mov
fldcw
out
repnz
xchg
insl
ret
mov
mov
pop
int
xor
push
xor
imul
testl
jns
inc
mov
lahf
sbb
fcompl
sbb
call
aas
shl
mov
adc
sysenter
cmp
xor
adc
out
lcall
adc
mov
aas
lods
mov
addr16
sbb
mov
xchg
int
test
or
add
add
stos
jb
jb
sbb
add
add
xchg
dec
andb
add
mov
cmpb
sahf
pop
mov
xorl
int
dec
cmpsl
sbb
jle
mov
pop
adc
iret
test
pop
push
jmp
xor
push
mov
dec
addl
scas
shlb
dec
or
sti
xchg
enter
add
test
lods
scas
push
mov
mov
out
into
adc
sarb
arpl
shll
xchg
xlat
fs
in
jno
xchg
sub
inc
xor
std
ds
shlb
into
repz
xchg
shll
cld
shr
dec
dec
mov
insl
adc
jecxz
mov
pushf
push
aas
xor
sub
lahf
push
sub
in
jnp
cmc
jmp
dec
mov
mov
xchg
fwait
lret
imul
mov
xor
sub
mov
and
dec
dec
jbe
add
addr16
mov
push
fsubs
xor
dec
jmp
notl
sub
ds
ret
and
data16
arpl
cmp
arpl
fadd
insl
iret
mov
fsubs
icebp
ficomps
dec
lods
jecxz
enter
fwait
outsb
push
and
sahf
out
repz
cmp
ja
out
lds
stc
in
ret
mov
jmp
ja
ret
test
in
icebp
xor
xchg
fldenv
test
loope
push
ss
xchg
push
jge
sub
shll
in
das
nop
xchg
jl
je
test
adc
and
adc
sarl
mov
or
inc
mov
test
cltd
repz
xor
add
or
fdivrl
popf
jno
insb
dec
push
pop
mov
in
fstl
inc
add
ficompl
test
call
push
adc
rcll
into
pop
test
loope
sub
test
cltd
andl
cmp
sub
gs
js
push
test
or
pop
sub
mov
test
push
stc
xor
fmull
xchg
daa
cmp
push
jo
jp
push
cli
sti
dec
out
pop
pop
arpl
push
cmp
jns
pop
sbb
mov
cmp
ficoms
jmp
aaa
out
adc
jb
cmpsl
jl
mov
rol
sbb
push
js
mov
sti
ret
lcall
jl
js
repnz
mov
xchg
xchg
shlb
in
dec
stc
xchg
push
je
mov
and
negb
sbb
dec
jg
int3
adc
std
add
mov
inc
hlt
and
pop
sbb
add
call
jge
arpl
and
inc
dec
xor
popa
add
dec
ss
adc
test
mov
cltd
fistl
mov
pop
pop
dec
movsb
jnp
push
sbb
sub
inc
mov
and
and
orb
cmpsl
test
push
mov
mov
xor
std
sub
rcrl
xchg
xor
or
jae
js
xchg
or
add
pop
inc
test
pop
and
jecxz
or
and
jp
push
jmp
inc
aam
inc
cmpsb
loope
dec
jnp
pop
adc
sti
push
scas
push
adc
xchg
jnp
xchg
pop
pop
pop
inc
popf
je
ret
pop
repz
fwait
cmpsl
hlt
push
add
ljmp
dec
sbbb
dec
lahf
ret
aas
mov
pop
lock
loopne
or
inc
mov
push
jle
pushf
insb
mov
sbb
add
pop
roll
cli
sub
mov
dec
sub
out
movsl
aaa
pushf
sahf
lock
sub
mov
test
mov
cltd
nop
test
adc
pop
pop
inc
push
push
inc
xlat
in
sbb
fcmovnb
iret
jg
enter
xor
mov
das
ret
es
pop
mov
es
sub
push
iret
sti
ljmp
js
cmp
add
hlt
test
loopne
sub
sbb
sbb
pop
xchg
adc
dec
insl
push
cmpb
orb
pop
adc
inc
sahf
rorl
dec
push
arpl
test
pop
fdivrl
jb
ljmp
jecxz
mov
cld
adc
into
mov
push
xor
jge
cmpsb
xor
push
sub
gs
loope
movb
icebp
and
jne
jle
cltd
lret
nop
repnz
outsb
adc
nop
mov
hlt
push
xlat
and
lret
shl
mov
daa
pop
jns
call
xchg
sbb
inc
pop
lock
sub
fs
aaa
enter
mov
mov
inc
xchg
cmp
aam
sbb
mov
cmp
enter
loopne
cmp
lahf
cltd
cmpsb
pop
dec
ds
dec
inc
notb
pusha
arpl
inc
xchg
mov
pop
cmp
pusha
movb
xchg
fisttpll
jbe
scas
pop
aaa
add
call
sub
jns
incb
pushl
test
rcrb
pusha
xchg
cmpsl
jg
ja
rcrb
xchg
fdivl
xchg
scas
fcompl
jb
mov
cltd
fmull
xchg
jmp
sbb
xor
insb
adc
mov
sahf
cltd
js
push
aas
inc
pusha
call
pop
push
add
icebp
and
pushf
imull
outsl
pop
movsl
sub
sub
mov
out
adc
mov
jl
and
sti
in
cmp
mov
adc
push
sbb
dec
dec
in
iret
test
adc
ljmp
mov
push
mov
push
xor
test
fidivs
sub
mov
xor
sub
dec
dec
leave
sbb
sbb
fdivrs
aad
xlat
icebp
push
push
inc
jae
ret
lahf
gs
or
enter
inc
das
ds
jns
xchg
pusha
mov
add
addr16
cmpsb
aas
popf
test
in
push
sub
sbb
add
nop
nop
adc
mov
and
movsb
push
mov
in
inc
mov
pushf
mov
adc
insl
ljmp
jne
mov
repnz
pushf
aaa
cli
inc
push
ror
adc
or
int3
jb
add
mov
mov
ja
pushf
pop
add
imul
aaa
sbb
punpckhbw
lods
jnp
std
cs
ljmp
stos
sbb
orb
pushf
arpl
mov
or
mov
fcmovne
test
inc
fdivrs
xchg
lahf
mov
sub
lock
xor
push
xor
repnz
pushf
xor
xchg
aaa
sub
xchg
pop
add
mov
cli
xchg
push
pop
stos
test
cli
paddw
test
or
xchg
push
inc
sti
es
testl
andl
pop
lods
in
and
imul
and
inc
pop
in
or
loope
mov
or
arpl
inc
push
xchg
outsl
adc
dec
outsb
inc
aam
xchg
jb
fidivs
test
popf
ja
lea
je
mov
imull
mov
dec
mov
sbb
movsl
xor
mov
repnz
sbb
sub
push
mov
push
popf
xchg
xor
lcall
lock
test
inc
jnp
fs
stc
popf
ljmp
mov
adc
insl
cmpsb
out
js
sbb
cmp
xchg
mov
jbe
mov
cmpsl
pop
inc
mov
movsb
push
xor
test
addb
lods
xchg
add
dec
popa
jl
add
and
stc
adc
pop
xchg
jae
imul
lcall
mov
xchg
xchg
loop
dec
out
je
mov
pop
dec
cmp
out
sbb
mov
mov
scas
add
inc
notl
or
inc
xchg
rcrl
je
das
hlt
imul
inc
sbb
shr
lret
jnp
xchg
jbe
nop
inc
lcall
int3
jl
stos
adc
inc
test
gs
stc
xor
shll
jmp
ds
dec
xchg
ret
sbb
out
jnp
test
push
jo
cmp
cmc
push
test
rorl
loope
out
sub
mov
orl
and
mov
repz
lds
insb
adc
sub
cmp
pop
cli
jecxz
add
fisubrl
shrb
sbb
aas
shr
mov
test
mov
adc
sub
dec
int3
repz
mov
mov
and
sbb
test
xor
aad
sahf
cmp
jne
sub
xor
dec
repnz
test
bound
cmpsb
jae
xchg
mov
mov
sbb
pop
fs
lods
rol
cmp
pop
jmp
inc
cmpb
insl
mov
jecxz
fs
push
jns
mov
aas
mov
int
xchg
and
jnp
fldt
push
out
pop
scas
arpl
xchg
push
test
xchg
jne,pt
jnp
lods
shlb
push
into
rcrl
rcrl
jg
mov
jp
mov
sbb
ss
ja
fcomps
lcall
mov
mov
iret
xchg
inc
xchg
lcall
xor
push
dec
stos
adc
lret
jmp
scas
out
stos
adc
dec
cmp
in
call
rolb
or
rorb
repz
mov
or
pop
cmpb
fidivl
jns
pop
cmpsl
ret
jl
push
popa
mov
je
and
loop
rorb
jae
xchg
je
mov
pop
mov
dec
ljmp
cld
or
push
pop
xor
iret
fidivs
push
int
push
enter
int
cmp
lea
repnz
cmp
jmp
mov
std
lahf
out
into
out
pop
stos
jge
pop
add
clc
pop
mov
sbbb
fisttps
jl
sbb
popf
cmpsl
xchg
adc
jnp
shr
jmp
push
repz
dec
xchg
jp
je
sbb
lods
test
sbb
push
cmpl
mov
pop
or
loop
dec
cmp
xorb
movsl
das
lods
shr
jl
sbb
ja
lcall
xchg
xchg
mov
mov
push
add
loope
fdivrs
or
mov
movsb
dec
jne
push
fnstcw
pop
movb
jb
imul
xor
repz
mov
out
repnz
jmp
std
ficomps
mov
sub
out
inc
adc
mov
xchg
loop
shrl
push
repz
inc
sbb
sub
cmp
movsb
movsl
ret
enter
xchg
xchg
in
out
cmp
cmp
decb
push
addr16
jp
dec
loope
cli
and
xor
push
xchg
push
dec
in
push
movsl
incl
xchg
mov
fmul
test
mov
sub
loopne
jg
ret
pop
xor
loop
in
outsb
movsl
dec
out
adc
jle
and
inc
hlt
sub
loopne
cld
enter
pushf
mov
cmp
or
ret
lahf
sbb
out
pop
pop
xchg
dec
int3
jmp
cmpsb
cltd
push
push
fs
rclb
pop
pop
ds
push
ds
sub
loopne
shl
jbe
sub
sub
sbb
ret
ljmp
or
cli
dec
pop
add
mov
xlat
jb
imul
sti
or
mov
add
xor
mov
mov
rcrl
jl
xchg
subl
scas
sbb
cs
fwait
xor
xchg
outsb
push
cmp
sarl
xchg
mov
cs
lods
cmpb
push
or
jge
mov
out
fnstcw
xchg
and
pop
cmpsb
jmp
fisttps
in
pop
outsb
pusha
add
adc
repz
js
leave
inc
cmp
mov
mov
cmpsb
cmp
nop
mov
arpl
mov
or
dec
xchg
pop
movsb
into
out
adc
aaa
mov
cld
subb
dec
enter
mov
add
repz
adc
xchg
push
pop
sub
and
jmp
aaa
pop
adc
cmp
nop
hlt
mov
jns
xlat
lret
add
ret
cld
xchg
xchg
mov
lock
popa
xor
insl
xchg
sub
lods
lret
add
xlat
out
mov
xchg
dec
addr16
dec
jecxz
xor
sahf
iret
stos
sbb
repnz
add
jb
lcall
in
iret
mov
mov
dec
add
ljmp
popa
andl
xchg
pusha
push
push
imul
hlt
or
pop
push
mov
or
mov
inc
xor
mov
repz
movsl
adc
adc
add
add
es
and
mov
arpl
outsb
xor
xchg
inc
cltd
mov
gs
or
cmp
popa
popl
push
lret
sub
pop
aam
scas
rcr
pop
into
mov
inc
cmp
push
in
das
xchg
mov
in
mov
jecxz
je
lock
cmp
add
mov
mov
sub
or
cwtl
cs
movsb
sub
stc
push
mov
gs
notl
inc
mov
std
lcall
cmpsl
push
leave
xchg
jo
rep
push
lahf
jnp
or
shr
and
mov
cmp
insl
mov
pop
xor
dec
mov
in
xlat
xchg
push
and
es
xchg
push
insl
and
jmp
dec
lods
test
int3
fimuls
jge
pop
inc
das
icebp
popf
cmp
jmp
gs
push
fiadds
xchg
imul
sarb
add
negl
fstl
add
mov
and
push
mov
cmp
cld
or
mov
outsl
inc
dec
stos
outsl
xor
out
rorb
lret
mov
xlat
jae
mov
stos
dec
cmpsl
add
pushf
fistps
jmp
jb
lahf
mov
enter
inc
lods
out
pop
xchg
pop
mov
or
pop
xor
or
and
test
fwait
push
test
xor
iret
pop
arpl
mov
dec
sub
jge
mov
fimuls
inc
cltd
fnstenv
or
xchg
jecxz
movsl
cmp
jle
or
jae
lret
xchg
out
aas
pop
orb
pop
fnstenv
sarl
iret
fcomps
pop
adc
ret
pop
cmp
inc
mov
sbb
nop
or
adc
imul
lea
and
push
ret
cmpb
or
fstpl
push
scas
lock
mov
outsl
rorb
in
dec
jno
push
pop
jg
mov
imul
roll
cmpsb
mov
xor
xor
fs
sbb
sahf
shrl
pushf
mov
xchg
jns
mov
cmc
lods
mov
and
inc
gs
pusha
xchg
mov
xchg
lret
xchg
ss
adc
outsw
jle
idivb
jns
inc
shrb
xchg
test
dec
jne
mov
pop
into
dec
ss
xor
mov
and
jo
pop
sti
mov
mov
add
pop
aaa
push
xor
stc
icebp
mov
jp
pop
std
rcl
jbe
and
aam
inc
in
in
imul
rcll
jo
xchg
sbb
ss
aas
imul
fsubs
add
add
filds
test
cmp
cs
pusha
push
test
and
xchg
or
lcall
fiaddl
cmp
push
add
push
pop
insb
pop
call
iret
stc
cmp
push
cmp
sub
adc
pop
dec
outsl
and
inc
call
mov
pop
xchg
and
jne
jp
push
xor
test
cld
test
mov
jecxz
jle
push
cmp
push
jnp
push
mov
loop
push
lret
fisttpl
test
stc
rcll
push
dec
mov
test
adc
fwait
sbb
pusha
les
sub
test
jmp
testl
pushf
jecxz
mov
cmp
inc
inc
push
aad
pop
std
adc
popa
loope
popf
cltd
xor
test
subb
cs
loop
sub
mov
iret
les
loopne
sbb
mov
pusha
outsl
fcoml
jb
push
xchg
out
out
aaa
idivb
outsl
mov
jb
ja
add
jl
mov
jb
movsb
std
jno
insb
loop
xor
sahf
lret
fnsave
stos
mov
push
fcmovu
inc
sbb
mov
or
mov
xchg
jb
leave
loope
cld
and
subl
scas
jecxz
mov
xlat
push
dec
add
mov
ret
loop
shrl
xchg
mov
addr16
push
lret
ljmp
fildll
push
mov
clc
out
pop
lds
pop
lcall
adc
ficompl
cmp
call
dec
dec
ljmp
push
test
loopne
xor
stc
inc
mov
scas
test
jae
test
mov
repnz
cmp
ds
mov
out
cmp
cmp
or
xor
aas
outsb
int
sub
mov
dec
mov
xorl
jle
mov
sub
aaa
sbb
pushl
mov
lcall
mov
clc
outsb
lret
enter
stos
inc
icebp
imul
mov
xor
mov
pop
inc
add
clc
jo
adc
shlb
xchg
rcrb
and
sbb
fidivrl
call
leave
jp
sub
jo
lea
xor
int3
in
and
mov
mov
sub
inc
push
in
cmpsl
sarb
cmp
fs
stos
arpl
xor
inc
cld
fnstcw
xchg
cmp
inc
pop
daa
test
fadds
aaa
add
out
adc
xchg
mov
push
xchg
test
jmp
inc
push
aad
fwait
push
shlb
cmovo
lods
hlt
push
test
or
push
lret
jp
iret
aam
sub
out
andps
fs
enter
inc
jp
adc
nop
or
ds
pop
push
pop
pop
sti
in
dec
lods
push
jge
push
inc
or
push
fistl
pop
in
xchg
cmp
shrl
xor
lea
jae
adc
sub
push
adc
adc
popa
push
in
sub
jle
cmp
and
jl
addr16
je
out
addr16
fmulp
roll
repnz
outsl
xchg
rolb
inc
cmp
repz
test
jle
insl
bound
adc
xchg
inc
dec
aas
cltd
jno
das
add
xchg
xchg
or
sbb
in
jb
mov
stos
shlb
push
mov
jne
cmp
ror
mov
in
jecxz
aam
mov
shr
cmp
jb
popf
mov
int
loopne
push
add
jmp
sti
inc
adc
call
ffreep
jb
in
push
in
pop
sbb
mov
in
pop
imul
jmp
inc
push
les
ret
or
jns
outsb
sbbb
or
push
and
lock
sbb
add
mov
jns
leave
shlb
aad
xchg
xchg
dec
inc
rcrb
in
push
mov
jle
fwait
push
xchg
cmpsl
es
push
inc
call
fwait
and
sbb
repnz
lret
in
sub
push
sub
fisttps
mov
loop
test
push
push
ja
cmpsb
aam
adc
repz
add
inc
sti
gs
jno
loope
mov
lahf
cmp
inc
shrb
shl
les
push
adc
jb
je
cltd
gs
add
xchg
aas
lahf
mov
fwait
or
mov
rcl
pop
fidivrl
add
dec
inc
inc
xchg
mov
repz
out
mov
clc
mov
mov
push
lret
push
dec
ljmp
dec
xlat
mov
mov
lcall
mov
loop
cmp
cmp
push
or
je
rcl
ror
xor
loopne
jg
ds
jbe
sbb
pop
jl
or
xchg
fwait
lahf
push
mov
push
push
sub
add
jns
sub
cmp
jae
push
add
js
xor
push
mov
repz
sbb
fbld
js
push
lcall
movsb
pop
inc
shlb
cmpsb
xlat
or
enter
ja
or
and
cmp
lds
lods
aam
xchg
stc
lret
sbb
int3
xor
not
arpl
stc
inc
pushw
xchg
push
fiadds
xchg
idiv
sub
pop
in
ret
fwait
sub
mov
cmpsl
das
loop,pn
xchg
inc
movsb
pop
sarl
pop
inc
insb
cld
jle
jecxz
lock
popa
in
xchg
pop
test
std
or
and
mov
mov
aaa
adc
and
xchg
mov
inc
cs
jle
push
lret
test
fsubrs
stos
mov
ficompl
sti
mov
jo
mov
cmpl
fcmovbe
push
sbb
js
pop
dec
lods
sub
dec
lods
sbb
inc
std
in
and
pop
movsb
shrb
jmp
adc
push
aam
ja
add
mov
inc
push
popf
sbb
jbe
dec
sbb
loope
rcl
jg
ds
inc
jno
cmp
cmp
test
or
lods
scas
xor
adc
sub
mov
inc
fsubl
pop
ficoms
cmp
dec
sub
jp
adc
push
sbb
loop
mov
xchg
jl
mov
jmp
dec
cmpb
test
orb
and
ds
pop
push
mov
adc
pop
lret
or
cld
adc
xor
cltd
jmp
dec
or
sbb
mov
popf
cmp
repnz
cmp
hlt
out
jle
jge
pushf
xchg
mulb
jnp
sub
and
pop
fdivp
ljmp
push
ret
das
fdivrl
inc
xchg
leave
push
sub
jae
push
cli
rcrb
into
movsb
sbb
cmpsl
and
dec
ret
cmp
cmpsl
idivl
jg
adc
pop
and
add
sbb
xlat
cli
ret
sub
jnp
push
xchg
cmc
sbb
mov
xchg
sbb
xchg
ss
jl
pop
sub
shll
mov
sbb
pushf
filds
adcb
pop
cmc
inc
sbb
imul
sub
test
cmp
xor
in
std
xlat
jne
mov
sbb
mov
push
pop
icebp
loopne
cmp
das
sbb
xor
adc
testb
pop
mov
daa
jae
push
in
sub
lock
aas
push
pop
fistl
cltd
fcoms
dec
scas
jg
outsb
dec
cwtl
ret
fwait
or
lods
add
jo
jo
pop
mov
inc
roll
pop
gs
jmp
in
addr16
addl
push
movsb
jg
jecxz
stos
loope
push
mov
sti
push
call
mov
enter
aad
cwtl
orb
lods
and
jno
jg
push
inc
or
xor
push
pusha
popf
xlat
in
popl
xchg
dec
int
leave
ds
test
xor
add
xchg
sub
cld
dec
int
stc
int
push
sbb
dec
xchg
sbb
push
out
pop
fdiv
ror
mov
enter
stc
adc
jnp
lods
pusha
nop
lret
and
jge
or
jp
in
test
adc
out
jbe
mov
and
popf
sbb
int
add
cmp
jae
pop
push
jno
jmp
push
jge
fnstcw
and
pop
adc
mov
xor
mov
and
iret
iret
cmp
push
jge
rcll
jmp
jge
mov
popf
fnstsw
push
push
adc
push
push
in
xor
and
mov
pop
xor
adc
xorl
cmp
nop
shrb
pop
in
xchg
mov
push
mov
xchg
xor
jecxz
in
lods
sbb
mov
mov
mov
in
dec
xchg
push
pop
pop
mov
ljmp
arpl
mov
pop
cmp
inc
cwtl
mov
adc
cmp
cmp
xchg
mov
mov
jae
ljmp
xchg
inc
jp
nop
std
imul
or
mov
pushf
inc
loop
sub
inc
addl
mov
and
sbb
add
pusha
xor
and
mov
scas
fiaddl
fisttpll
push
cmp
lret
stos
push
int3
xchg
into
lret
ret
enter
mov
adc
test
push
mov
scas
sti
pop
das
scas
out
imul
fdivl
pusha
icebp
testl
out
aad
or
loopne
mov
stos
push
inc
mov
fistpl
adc
dec
cmpsb
mov
xorl
negl
pusha
pop
js
testb
clc
mov
xchg
mull
dec
popa
dec
mov
mov
std
push
jle
xor
ficoms
jp
int3
sbb
sti
cld
fnstsw
loop
int3
imul
jno
jmp
pop
ror
pusha
loop
mov
push
mov
cmp
hlt
mov
mov
out
or
orb
iret
inc
xchg
inc
dec
pop
cmpsb
sub
lds
mov
and
lock
out
adc
movb
pusha
cmp
jbe
cmp
mov
cmp
and
lcall
push
cltd
sub
or
ret
xchg
pop
push
mov
je
mov
das
cmpsb
jp
sbb
aad
push
xor
sub
cmp
int3
insl
push
mov
mov
dec
xchg
aad
leave
jno
cmp
mov
shll
insl
sbb
mov
mov
jecxz
lcall
add
rcr
je,pn
dec
fwait
pop
arpl
scas
stos
and
mov
je
pop
popa
js
adc
cmp
sbb
movsl
mulb
repz
mov
fsubl
or
insb
shll
jne
jle
jo
adc
shr
lds
or
sbb
fstpl
mov
movsb
inc
repnz
push
add
lcall
es
xchg
push
sarl
sbb
mov
sub
dec
idivl
int3
gs
mov
fstpl
pop
mov
adc
stos
inc
xchg
inc
mov
add
adc
sbb
xor
push
xchg
mov
push
cmp
sbb
lds
xchg
and
sbb
mov
repnz
add
or
push
out
mov
xchg
scas
mov
stos
insb
std
or
xor
cmc
xor
sbb
rorl
add
mov
mov
lahf
test
mov
mov
loope
jo
inc
sub
sbb
lods
test
mov
pusha
mov
movsb
jecxz
nop
ret
cs
clc
lods
pusha
xchg
jge
mov
cmp
stc
sub
mov
sub
decb
cld
dec
pop
sti
aas
jae
and
test
jnp
dec
jne
dec
inc
test
popf
push
cmpsb
dec
sbb
inc
xchg
pop
movsb
pop
mov
or
jmp
imul
subb
jg
ret
push
ret
in
outsb
or
xlat
mov
pop
hlt
pushf
adc
adc
mov
mov
jmp
fsubl
fldl
push
imul
lret
sub
scas
push
sbb
dec
or
pop
aad
fsubrl
add
jnp
inc
mov
sub
jnp
sbb
xchg
mov
aam
cltd
or
inc
xor
loopne
cli
mov
sbb
pop
mov
or
cmp
std
pop
test
mov
stos
add
mov
or
dec
xor
je
lahf
sbb
dec
fisubrl
test
jmp
loopne
inc
cltd
mov
rcrb
mov
xchg
sub
lcall
cld
lods
jecxz
sarb
adc
cmovnp
aas
pop
xchg
mov
jp
je
fcoml
test
sub
into
cs
mov
push
xor
cwtl
dec
sub
icebp
mov
jl
inc
xchg
and
pop
mov
lock
mov
adc
sub
xor
pop
jmp
jo
in
cmp
jmp
stc
sbb
inc
pushf
stos
and
xor
jnp
je
pop
inc
es
pop
aas
sub
mov
cmp
add
aas
in
ljmp
repz
movsb
cltd
or
mov
dec
inc
sub
jnp
ds
aaa
pop
push
and
push
and
fsub
out
mov
mov
insb
add
ss
cmpsl
flds
and
push
ror
mov
adc
sub
std
enter
mov
sub
or
xor
jge
test
scas
out
daa
lret
movsl
orl
and
sarl
jg
leave
fwait
std
imul
stc
mov
addr16
mov
sti
pop
mov
lods
push
imul
xor
jecxz
jecxz
dec
lcall
mov
dec
inc
jp
jge
push
mov
pop
cmp
mov
cwtl
int
and
lret
and
xchg
hlt
cmpb
xchg
add
pop
pop
lea
jp
jge
dec
ret
test
jp
and
adc
cmc
mov
aaa
xchg
fcoms
lds
inc
add
xor
sub
xor
daa
push
xor
sahf
repnz
mov
mov
cmp
insl
mov
mov
sub
movsb
mov
shl
je
sti
xor
lahf
cmc
fistl
pop
push
sub
dec
in
es
add
sub
add
rcrl
shlb
lret
and
push
cmp
dec
push
stos
or
nop
mov
xor
dec
call
push
lock
insb
jl
cmp
adc
cltd
inc
or
out
or
inc
jno
dec
clc
sub
add
js
mov
movsb
jns
fdivs
stos
jg
test
aad
pushf
cmc
xchg
in
mov
call
inc
mov
and
inc
out
adc
xchg
jns
jl
cli
pushf
ss
dec
in
push
fidivrs
outsb
mov
int3
sub
mov
lds
jo
loop
adc
loop
mov
sbbl
aaa
stc
pop
cmc
lcall
cmpsl
jo
leave
dec
adc
xor
mov
push
inc
inc
int
mov
cmp
pop
arpl
neg
jle
pop
jns
pop
rcr
pop
xchg
shll
mov
push
xchg
cmpsb
lcall
mov
xchg
ret
jle
pop
jecxz
mov
jb
loope
push
bound
addb
icebp
xlat
push
jb
repz
js
xor
adc
sbb
in
xchg
xor
data16
lcall
or
pop
mov
pusha
in
js
lods
inc
jo
out
sub
jbe
mov
sti
aas
ja
test
pop
sub
push
rclb
int
xchg
shrb
add
dec
jns
stc
test
or
mull
fldcw
mov
sbb
adc
in
jge
stos
push
sub
fwait
cld
dec
scas
or
adc
push
pop
pop
dec
xor
test
push
dec
and
push
nop
mov
xor
pusha
pop
pop
mov
fcmovbe
sbb
pop
add
mov
out
mov
stos
jmp
pop
mov
and
xchg
xor
jnp
andb
jmp
loopne
orb
fmull
or
or
mov
mov
sbb
out
mov
xor
jns
jp
movsl
aas
shlb
mov
cwtl
loopne
or
inc
add
dec
sub
push
das
dec
mov
nop
sub
mov
fs
xchg
mov
add
gs
les
jmp
sahf
mov
mov
mov
sub
xchg
inc
push
lahf
push
lahf
mov
fs
fwait
lret
les
push
sahf
sbbl
xchg
loopne
mov
sub
adc
arpl
jno
xchg
ja
ror
jae
xchg
int3
adc
out
pop
aaa
lahf
inc
daa
mov
test
xor
sbb
mov
mov
fcoml
outsb
pop
sub
and
inc
add
loope
test
pop
inc
adc
jge
push
jb
sbbb
int
orb
fstl
mov
das
in
xchg
push
movsb
pop
dec
sti
add
sbb
int3
fsub
scas
bound
jge
sti
testb
push
decl
fists
inc
sub
mov
imul
test
jl
adc
pop
sub
push
cli
es
sahf
sub
lods
add
mov
and
stc
mov
jne
inc
jmp
fldlg2
sub
sub
pop
mov
mov
icebp
jbe
push
lods
ret
cld
jno
cmp
push
adc
inc
dec
loopne
jnp
pop
jge
mov
fcmovnb
jo
outsl
lds
add
xchg
les
lret
scas
jmp
mov
inc
push
lahf
lock
jae
in
mov
loope
dec
dec
mov
mov
dec
adc
outsl
lahf
xor
or
mov
insl
fs
pop
jle
xor
cwtl
and
cmp
out
jns
jbe
xlat
scas
dec
push
aam
and
sbb
sti
in
jmp
adc
xor
ds
in
mov
scas
or
jb
or
push
insl
lods
mov
jp
push
jnp
jo
push
test
jae
dec
inc
jae
adc
ret
push
sbb
jb
push
hlt
and
inc
std
sbb
xlat
pop
push
sub
pushf
repnz
cld
aas
mov
push
cmp
int3
insb
imul
insl
arpl
push
into
jp
xor
insl
aaa
mov
je
jne
jmp
pop
stos
lea
fisubrl
mov
imul
inc
jne
loope
pushl
call
xchg
pop
out
cmp
or
stc
and
cmp
and
arpl
inc
pushl
adc
and
cld
out
add
sti
lods
sub
ret
mov
jns
fnstsw
add
sub
sahf
bound
sti
fistpll
rclb
stos
out
jns
mov
out
jb
subb
test
data16
cmp
xchg
cs
jne
popf
xchg
sahf
cli
outsl
out
dec
out
frstor
mov
mov
xlat
fmuls
adc
cmpsb
loopne
pop
out
pop
shlb
icebp
imul
cmp
push
lods
mov
fstps
repz
inc
dec
xlat
aam
push
jbe
jno
repnz
mov
pop
testl
imul
add
push
ja
repnz
out
outsl
add
xchg
rolb
cld
cmpsb
and
mov
adc
or
in
xchg
mov
lahf
ror
inc
imul
dec
dec
jmp
cmp
int3
sub
xchg
dec
cmpsl
out
and
in
test
or
xor
push
in
lds
pop
data16
jno
test
mov
jmp
cmp
repz
adc
xchg
push
or
cmpsl
cmp
iret
int
ljmp
sub
mov
mov
pushf
push
push
sbb
call
jecxz
and
sub
sahf
int3
insb
jo
pop
inc
mov
movsl
sub
repnz
push
in
ret
or
add
orb
xchg
jns
outsb
jb
push
sar
jnp
mov
jecxz
xor
test
fs
sbb
mov
xor
jb
imul
or
divb
or
xor
pop
cmp
cmp
ror
jecxz
pusha
mul
dec
xor
mov
cmp
scas
jo
mov
mov
xchg
movsb
ljmp
lds
push
pop
or
inc
int3
fnstcw
adc
lods
repnz
push
icebp
rorb
xchg
xor
push
roll
cmpsb
hlt
xchg
mov
xchg
cmp
xor
sub
loope
lds
mov
movsb
sbb
jle
xor
fs
std
cld
xor
add
xchg
fisttpl
inc
push
in
jbe
sub
cld
daa
imul
jns
pushf
xchg
xor
outsl
imulb
sbb
add
and
imul
imul
push
inc
aam
mov
sbb
enter
mov
and
daa
add
stc
mov
xlat
adc
dec
mov
jecxz
pop
xchg
test
jae
orl
ljmp
sbb
jns
fiadds
mov
cmp
in
inc
cmp
dec
lahf
jecxz
mov
and
fsubs
push
push
stc
add
or
xchg
enter
mov
and
les
out
call
icebp
cmc
iret
rcrb
leave
adc
sti
and
imul
xor
scas
push
movsl
mov
shlb
mov
pop
dec
loopne
sub
std
dec
mov
cmp
ret
xor
aam
mov
mov
lahf
outsb
mov
inc
add
jbe
inc
sbb
mov
inc
jb
in
fs
cmpsb
int3
pop
loop
hlt
mov
pop
jnp
jb
test
adc
xchg
arpl
nop
adc
filds
and
inc
clc
cmpb
scas
mov
int3
mov
cltd
outsl
icebp
imul
push
mov
out
in
cmc
adc
arpl
int
mov
js
pop
ds
and
and
int3
pop
lea
fstps
sub
sub
dec
pusha
push
and
fisubrl
addb
or
cmp
mov
or
mov
bound
xchg
push
mov
std
and
or
dec
mov
add
outsb
xor
pop
lods
lods
pop
inc
inc
imulb
inc
outsb
xor
mov
sub
test
xchg
sbb
ja
es
popl
cmc
xlat
cmc
jecxz
pop
scas
int
out
inc
ret
push
int
sub
ret
adc
sbb
xchg
dec
jmp
jns
sahf
mov
nop
cwtl
add
frstor
ss
dec
push
call
xchg
js
shl
jle
pop
inc
and
stos
data16
dec
inc
insb
mov
lret
jbe
mov
xor
mov
lahf
adc
cmp
inc
mov
sbb
jmp
js
cli
pop
xorl
je
in
insl
iret
add
shl
jmp
mov
dec
enter
aaa
or
pop
pop
dec
imul
ret
popa
or
lcall
hlt
sub
push
pop
dec
and
out
jmp
xchg
push
out
add
mov
arpl
push
xor
mov
mov
xchg
adc
fidivrs
js
es
jmp
mov
mov
mov
mov
jmp
div
lea
xlat
or
repz
push
adc
sub
movb
jecxz
test
sbb
pushw
sub
pop
dec
and
rol
nop
adc
sar
repz
addr16
fidivrl
pop
mov
in
push
out
dec
fadds
jecxz
and
jge
mov
int
loopne
call
rdmsr
add
jl
sarb
sbb
xchg
dec
and
popf
xor
adc
cmp
daa
fnstcw
rcl
fadds
inc
sbb
mov
dec
xlat
mov
imul
mov
sbb
mov
sbb
mov
xchg
pop
push
mov
lret
seta
adc
add
bound
xor
test
call
inc
inc
dec
jbe
jmp
mov
cltd
mov
lret
lret
push
and
lcall
lods
push
repz
mov
push
push
out
cmp
lock
mov
mov
push
mov
movsl
push
pop
or
cli
mov
lods
xchg
sub
cmp
jb
mov
fstpt
rcrb
aas
bound
push
jbe
mov
mov
mov
cmp
lcall
and
push
stos
mov
out
xor
cmpb
dec
sbbb
lds
ss
pop
int3
hlt
push
dec
arpl
outsl
mov
push
lret
adc
test
insb
mov
xchg
fnstsw
push
sbb
rclb
lods
sbb
pop
pop
cmp
sbb
lock
out
jg
cmpb
pop
mov
cmp
jo
pop
or
pop
jne
test
inc
push
mov
pop
out
cmp
mov
push
test
rol
push
xor
ss
mov
js
scas
popl
xor
pop
adc
xchg
mov
nop
cmpl
fnstsw
or
in
bound
in
add
sub
es
push
shlb
mov
cmpsb
mov
xchg
and
adc
data16
mov
imul
push
or
mov
rcll
in
push
hlt
mov
push
mov
inc
mov
fcoms
xor
jnp
mov
adc
int
mov
sahf
test
cwtl
js
clc
sbb
or
cmc
fs
lds
testb
pop
add
lods
mov
mov
or
lcall
xchg
mov
shlb
sti
js
mov
sub
out
dec
shrb
jo
mov
adc
jns
in
push
popa
sbb
mov
sub
negl
aam
xchg
dec
inc
or
jg
into
dec
xchg
or
pusha
xor
jnp
mov
and
or
mov
xlat
xchg
lret
clc
fstps
imul
icebp
xchg
inc
call
sbb
in
ret
and
ja
inc
dec
or
in
adc
mov
push
inc
loope
or
fs
ret
xchg
cmp
push
popf
mov
loopne
call
inc
dec
inc
pop
cmp
in
iret
push
or
mov
and
hlt
mov
movsb
mov
fwait
shrl
sub
jne
lods
bnd
mov
ret
or
adc
pusha
dec
cmpsl
subl
mov
sub
scas
aaa
pop
cs
mov
arpl
lahf
jl
pop
mov
or
lcallw
dec
icebp
push
add
fwait
addr16
add
mov
inc
mov
gs
rcrb
mov
push
pushf
movl
out
inc
cmpsb
push
mov
orb
sub
sbb
fnstsw
push
test
jns
inc
lods
into
or
popa
dec
pop
mov
lret
push
dec
outsl
stc
icebp
rcr
movsb
and
xor
fs
cmpsb
outsb
sub
jp
pop
adc
out
or
pop
sub
lds
fisubl
jns
sbb
inc
out
and
xchg
inc
mov
mov
jge
ficoms
mov
adcb
test
push
sahf
or
or
mov
mov
rol
fldl
cli
sbb
jle
dec
loopne
and
jns
movsb
gs
inc
mov
pop
mov
inc
in
neg
dec
and
insl
jbe
dec
clc
cld
fadds
lea
nop
in
lret
sahf
lahf
sbb
cli
insb
xor
fcoms
push
out
je
divb
repnz
cli
lret
push
stos
push
jne
push
dec
cmc
stos
fistps
das
mov
fildl
mov
mov
test
jecxz
out
ret
aad
cwtl
dec
push
pop
mov
mov
xchg
dec
sbb
push
dec
add
pop
push
sbb
jns
mov
push
lret
and
cwtl
xchg
jbe
push
adc
lods
mov
int3
sbb
sub
xor
adc
mov
test
push
hlt
inc
mov
or
jnp
out
sbb
xchg
and
lods
sub
push
ret
or
repnz
mov
add
sub
fcompl
jg
pop
jmp
lods
adcb
in
dec
or
out
sysret
inc
inc
stos
push
mov
and
in
jmp
push
add
ficompl
das
lock
movsb
bound
pushf
xchg
jo
sbb
sbb
inc
sbbb
jbe
scas
fidivs
bound
gs
jbe
and
inc
cs
and
mov
mov
pop
push
cmp
inc
xor
mov
pop
imul
dec
xor
lea
cs
lods
test
jp
push
sub
mov
dec
jno
add
lret
insb
jns
int3
orb
dec
dec
mov
mov
add
imul
adc
ds
aam
xchg
add
outsl
es
dec
pop
cmc
sbb
ss
pop
pop
stos
mov
push
and
xor
xchg
jbe
mov
loop
fbstp
jno
mov
mov
pop
lds
je
loope
mov
jne
shll
nop
mov
xchg
sbb
cld
int
cmpsl
js
repnz
divl
and
mov
and
jle
in
mov
push
sub
and
and
adc
jnp
lahf
pop
das
or
fldenv
div
std
test
xor
mov
popa
sub
mov
mov
pop
stos
das
outsl
lods
push
jp
sbb
rcrb
repnz
pop
add
cmp
cmpsl
and
loope
aad
xor
stos
add
in
ljmp
leave
adc
or
add
push
fwait
mov
sub
lock
push
decb
xor
mov
mov
mov
and
das
push
iret
xchg
lods
cmp
lret
shll
fisubl
hlt
test
mov
out
sbb
mov
mov
inc
arpl
inc
sbb
ret
push
les
cmp
push
xor
push
xchg
aas
outsb
stos
sub
sub
testl
mov
jae
dec
pop
aaa
sti
out
das
aad
dec
or
sbb
sbb
std
add
mov
or
movl
lret
push
inc
test
inc
dec
lret
mov
ret
int3
into
add
bound
cmpsb
dec
mov
mov
movups
cld
cmpsb
in
add
std
jp
out
xchg
scas
xchg
out
sbb
xor
push
aas
sbb
xchg
sahf
xor
fidivrs
push
pop
xchg
sub
mov
jmp
aas
mov
and
stc
scas
fs
push
pop
pop
inc
inc
adc
ds
iret
add
push
fisubrl
inc
adc
sbb
fmull
sbb
jle
sahf
les
sbb
mov
adc
jmp
dec
jb
mov
pop
mov
je
lahf
sub
out
dec
out
test
push
sbb
inc
clc
pusha
scas
rclb
mov
and
icebp
ds
xchg
jno
sbb
mov
fisubrl
cmp
or
jo
jae
test
sbbl
or
cmpl
lods
iret
mov
call
insl
sbb
mov
popa
sbb
cmovne
add
adc
call
aaa
sbb
push
jnp
sub
fimuls
xchg
ffree
out
dec
cmc
fidivrs
fcmovbe
out
out
mov
ficoml
loop
xor
sbb
push
mov
stos
stos
test
insb
mov
sbb
rorl
movlps
punpckhdq
aas
sub
mov
pop
push
ret
push
mov
in
add
lock
popf
xchg
xchg
int
pop
jle
bnd
clc
xchg
or
push
mov
cmp
jg
out
pop
and
cwtl
mov
test
arpl
jl
out
add
dec
fimuls
mov
cmc
dec
sbb
and
xlat
or
jecxz
repnz
jmp
sbb
dec
xor
xor
push
mov
fdivrs
lea
mov
sub
sub
repnz
fsubs
cmp
mov
inc
js
dec
sub
rcrb
in
jl
jae,pt
ret
add
pop
pop
in
orb
sub
cmp
fnstsw
jb
lret
or
sahf
test
push
lock
stos
es
push
sbb
aad
xchg
bound
cmp
pop
adc
sbb
fcomps
push
adc
sahf
xchg
push
orl
sub
je
and
mov
lock
push
fadd
mov
push
or
dec
jl
neg
in
test
dec
lret
or
pop
pop
clc
rcll
cmp
or
pop
shrl
movsb
je
ds
movsl
and
or
and
sub
xchg
mov
scas
out
hlt
jmp
push
and
pop
mov
mov
push
add
sbb
popa
and
std
cmp
enter
imul
in
addr16
lret
and
xor
movsl
scas
shr
mov
mov
into
mov
sti
mov
xor
fsub
or
call
sbb
loope
push
or
sbb
pop
mov
dec
fimull
movsb
xchg
stos
or
je
jmp
stos
push
or
ret
lods
aaa
lcall
dec
cmc
and
fwait
std
rclb
add
es
jge
adc
push
hlt
and
shlb
or
inc
add
ficoml
push
sbb
sahf
out
fnstsw
pop
test
rcll
adcb
loopne
fcoms
push
cld
fsts
test
pop
mov
and
adc
sub
mov
inc
mov
rcll
and
sahf
shl
icebp
sub
jo
aam
imulb
pop
fs
add
jns
lds
pop
daa
in
mov
cmovle
add
into
addr16
cmp
call
enter
pop
sahf
rep
dec
ret
sub
sbb
mov
pushf
xchg
mov
sub
fidivrs
xor
mov
fcmove
movsl
lahf
and
int
cld
enter
inc
js
aas
xchg
inc
mov
or
or
ja
mov
repz
lods
push
ss
jg
adc
mov
sub
or
shll
dec
stos
std
xor
sarl
lret
xchg
daa
pop
daa
addb
outsb
mov
sbb
sti
jge
dec
int3
jp
mov
ret
sti
push
sbb
in
cmpl
xchg
xchg
dec
jmp
arpl
sbb
xor
cmp
mov
mov
lahf
sbbb
mov
xchg
outsb
shrl
repnz
adc
dec
testl
in
or
xlat
aas
sbb
stos
push
imul
aas
add
xchg
xchg
xlat
es
add
or
push
adc
push
outsb
sti
insb
push
pushf
inc
jl
mov
cmpb
dec
sub
dec
jge
insl
pop
scas
cld
or
cmpsb
or
mov
dec
fsubrs
fcmovnbe
jne
pusha
sbbl
shl
gs
shrb
jmp
arpl
sbb
mov
push
cwtl
aad
jmp
mov
adc
sbb
scas
sbb
sbb
xchg
imul
add
mov
in
test
aam
adcl
pop
dec
or
inc
push
mov
pop
insb
mov
and
fisttpl
sub
mov
popf
inc
sbb
jno
fists
pop
pop
xor
sub
aas
cmp
push
push
sub
fmuls
and
cmpsb
movsb
mov
push
inc
jecxz
xor
mov
mov
jge
ss
dec
jl
and
mov
add
xor
stos
ret
arpl
sub
cmpsl
jo
popa
repnz
rcrl
lret
fidivl
fs
dec
mov
mov
jecxz
roll
mov
cmp
and
cltd
ss
fnstenv
aad
or
xlat
inc
addr16
sub
inc
xchg
dec
mov
subb
cmp
cmp
mov
xor
add
scas
mov
fwait
cmp
push
adc
sahf
push
mov
in
or
imul
inc
push
mov
clc
arpl
dec
push
frstor
mov
loop
aad
jl
mov
push
add
dec
filds
cmp
jnp
push
xchg
cmp
mov
adc
sbb
das
xlat
add
int
sbb
repnz
lret
jbe
or
mov
call
push
sbb
in
sahf
and
sub
js
jge
insl
loop
mov
movsb
jbe
xchg
jne
or
fs
inc
repz
idiv
mov
mov
mov
rorb
lcall
dec
mov
cmp
push
pop
dec
sbb
add
push
and
mov
add
lahf
shll
or
xchg
push
out
fsts
rclb
sbb
and
add
lods
push
mov
popa
daa
loop
stos
rcr
pushf
std
push
fstl
fiaddl
cmpl
fbld
dec
cmp
dec
dec
pushf
inc
pop
pop
ds
sbb
cmp
dec
mov
ret
lahf
cmp
cmp
mov
sahf
or
movsb
mov
push
pop
push
out
leave
sbb
sub
push
je
fldl
push
push
and
not
dec
mov
loopne
mov
mov
jb
dec
pop
int3
jecxz
mov
fistpll
js
jb
faddl
push
mov
das
loop
stc
push
pusha
sub
add
lods
mov
roll
dec
xor
test
jecxz
pop
sub
or
xor
mov
daa
or
dec
outsl
call
jg
insb
sbb
outsl
aam
ret
shll
hlt
movsb
mov
cmc
movsb
call
out
test
dec
fs
das
jmp
aaa
and
call
pop
imul
xlat
out
sbb
cmp
and
push
fimull
jge
cli
xor
stc
dec
mov
xor
out
sub
out
out
mov
aaa
repnz
aad
pop
sbb
dec
sbb
call
cwtl
push
into
into
fwait
xor
and
mov
imul
xor
cmp
or
insl
movsb
mov
xor
adc
cmpsl
cmp
and
sti
xchg
and
jnp
das
pop
cmpl
xchg
call
aaa
sbbl
cli
mov
and
sub
fs
add
std
mov
xchg
in
addr16
jle
nop
xchg
das
out
pop
and
lock
notb
shlb
std
mov
std
xor
push
mov
fisttps
mov
icebp
fs
adc
mov
fs
test
add
cmp
ja
jmp
pop
fdivs
addr16
sbb
push
add
fisubs
out
pop
repz
pop
xor
in
addl
push
div
mov
or
push
aas
push
scas
pop
cmpb
inc
shr
ret
pushf
dec
jl
aas
xor
pop
add
inc
push
cmpsl
es
rorb
push
popf
jnp
fdivrl
push
sbb
daa
mov
repnz
movsb
mov
sub
jl
dec
sub
or
xor
iret
shll
ss
sub
jl
jecxz
pop
lock
mov
mov
and
lea
cli
push
imul
sbb
inc
inc
xor
xchg
imul
mov
inc
insb
xorl
jbe
sbb
push
insl
rcr
stos
pop
lahf
jl
and
loope
cmp
mov
imull
push
xor
mov
and
mov
loop
fs
fimuls
test
cmpsb
mov
jg
mov
js
add
and
push
jp
adc
jae
out
mov
es
popa
or
pop
fisubrs
outsl
pushf
xor
leave
mov
adc
cltd
mov
jge
jo
xchg
xor
pushf
jnp
pop
andb
pop
add
push
js
mov
cwtl
push
outsl
lret
psrld
shl
insb
rcr
mov
jecxz
mov
inc
pushf
inc
mov
loopne
test
js
xchg
xor
in
push
xchg
cwtl
jle
mov
jbe
push
xor
lahf
dec
rcrl
cmp
lock
mov
fcoml
daa
mov
mov
rcl
leave
mov
call
int
lods
testl
mov
and
xchg
xchg
into
mov
fs
jae
fcomp
dec
test
out
pop
jl
fildl
lahf
or
xor
aaa
test
push
daa
jne
imul
cld
ljmp
cmp
cmp
fldcw
and
jmp
add
push
jge
sbbb
add
push
sbb
test
add
pop
mov
mov
insl
xchg
dec
ret
sbb
in
lret
cmp
mov
arpl
stc
nop
inc
adc
cmp
and
or
cwtl
fisubs
dec
sbb
in
mov
push
lea
jb
sub
jmp
pop
pop
inc
add
mov
rolb
aad
ffreep
xchg
sti
xchg
shlb
imul
sbb
cmp
aas
and
jmp
cmc
mov
fimull
mov
mov
mov
mov
pop
popf
jmp
mov
lea
test
sbb
mov
sbb
mov
clc
xchg
flds
xor
imulb
mov
add
or
fwait
adc
pop
rorl
sbb
inc
cmc
jg
int3
lcall
andb
rcll
mov
fistpl
xor
mov
out
cmp
std
test
pop
int3
popa
sub
mov
xchg
jle
ret
cs
shrl
fs
xor
xchg
outsl
subl
pop
xlat
enter
pop
rolb
add
mov
xchg
pop
sub
xchg
dec
adc
push
push
dec
dec
ljmp
dec
rolb
jo
fldt
repnz
lds
push
stos
mov
mov
shlb
pop
outsl
push
xchg
mov
inc
aaa
xchg
movsb
dec
inc
clc
in
add
xchg
cmp
pop
jg
dec
adc
mov
pop
bound
mov
inc
outsb
jmp
adc
out
push
mov
mov
mov
pop
sbb
inc
add
sub
loopne
push
xor
lret
pop
mov
pop
inc
loop
repnz
pushf
jg
inc
enter
add
inc
cs
inc
sbb
rcrb
sbbl
stc
subl
loop
mov
imul
jns
enter
fidivs
test
cs
xchg
repz
rep
repz
push
pop
mov
mov
xchg
lock
repnz
cltd
neg
mov
pop
es
or
repnz
jecxz
add
in
jmp
jae
cld
aad
test
or
pushf
aam
scas
in
or
xor
enter
popa
insl
push
ret
pop
fisttpll
pushf
pop
cs
insl
dec
pop
in
xchg
scas
fadd
inc
xlat
xor
or
test
out
dec
inc
nop
dec
hlt
mov
xchg
add
jno
xchg
testb
pop
adc
pop
adc
push
cs
dec
fcompp
mov
cld
pusha
jne
cmp
sub
cwtl
push
or
push
ljmp
out
add
cmp
dec
imul
hlt
daa
cmp
mov
pop
repnz
mov
rcrl
jno
xchg
mov
dec
jge
int
dec
data16
pushl
sub
mov
shrb
mov
inc
mov
adc
mov
xchg
lock
iret
pop
test
cmp
sbb
push
and
jl
jno
inc
les
push
jecxz
in
push
dec
add
jle
scas
mov
mov
fisubrl
aad
fiaddl
xor
in
jecxz
lahf
insb
xchg
pop
jne
stos
arpl
std
sub
out
add
xchg
sbb
xlat
insl
test
jmp
xor
stos
pop
js
mov
out
xchg
int3
data16
js
pop
lods
sub
mov
rorb
pop
sub
loope
xchg
mov
push
in
clc
push
fcmovnu
pop
aad
lds
mov
aas
ljmp
pushf
es
pop
subb
daa
call
and
xor
mov
movsl
mov
ror
je
mov
incb
mov
mov
mov
cmp
xor
or
inc
movsb
inc
jmp
jb
out
pop
nop
stos
sub
mov
mov
fwait
push
push
adc
dec
cltd
jo
xor
fidivs
repnz
in
xor
mov
dec
jae
inc
mov
or
js
out
enter
cwtl
mov
fcoms
mov
std
sbb
or
ja
dec
mov
inc
popf
push
sbb
sahf
aaa
sub
in
es
imul
fwait
stos
or
xchg
mov
je
lods
mov
mov
int3
sub
in
adc
fcom
outsl
repnz
insb
test
paddusw
cmp
jmp
push
add
jecxz
arpl
ficoms
mov
mov
cmp
inc
sbb
imull
aam
cmpl
push
cmc
fwait
mov
add
mov
dec
test
or
mov
push
lds
icebp
push
in
sub
scas
sbb
sbb
ret
cld
mov
adc
aam
dec
xchg
inc
xor
pushf
fcompl
addr16
mov
pop
stc
mov
out
lock
je
popf
jl
xchg
lock
inc
cmpsl
scas
fwait
xchg
cmp
xlat
jl
jno
inc
or
iret
arpl
aam
test
pop
pop
and
lock
sub
jb
sti
stc
jne
and
mov
ja
push
and
cmp
sub
jmp
mov
jns
neg
nop
iret
inc
sarl
ds
or
cmc
jo
xchg
inc
mov
inc
loop
clc
ljmp
repnz
jmp
push
pop
cmp
push
repnz
fdivrs
popa
das
xor
jl
test
and
mov
pop
mov
sub
mov
cmp
lock
sub
fildl
push
aaa
or
repz
aad
pop
jmp
and
sub
ljmp
and
sbb
int3
clc
mov
clts
repz
test
sub
into
mov
idiv
xor
loop
jmp
adc
push
dec
push
mov
sub
test
data16
push
outsb
fcmovnb
and
jle
nop
movsb
repz
adcl
mov
pop
bnd
and
cmp
push
inc
add
or
dec
mov
testb
cmp
loop
mov
xchg
insb
int3
js
xchg
mov
and
hlt
jecxz
jnp
stc
bnd
scas
xchg
sbbb
inc
fildl
cmp
jle
je
pushf
fcmovnbe
lods
mov
outsb
adc
sbb
xorb
jae
push
out
push
xchg
lahf
daa
loop
xorb
fs
adc
in
sub
or
pop
ja
xchg
cmp
mov
sbb
subb
xchg
jnp
rclb
scas
adc
rcrb
sbb
jne
sub
mov
pusha
fidivs
sti
push
xchg
dec
ss
cwtl
call
or
inc
lahf
loope
in
and
leave
xchg
adc
pop
mov
sahf
jp
mov
jmp
mov
jl
sub
jecxz
dec
inc
ret
nop
loopne
insl
mov
das
cmp
mov
push
cwtl
jne
xor
cmpsl
es
xchg
sub
dec
adc
and
sbb
jge
push
cltd
dec
pop
int3
sti
loop
bound
sub
xchg
popa
inc
or
xchg
in
cmp
cmp
dec
clc
roll
mov
add
outsb
xchg
movsl
mov
clc
xchg
loope
idiv
jp
ret
sbb
movsl
popa
xchg
inc
mov
aad
pusha
xchg
add
andl
add
push
jecxz
enter
sub
sbb
push
push
test
jne
mov
push
insl
lret
jns,pt
xchg
imul
les
xlat
mov
mov
arpl
test
pop
arpl
sahf
scas
adc
bound
leave
cmpsb
into
vmovdqa
sub
fistpll
cmp
dec
mov
mov
lret
dec
jno
sub
adc
jne
test
xchg
jnp
pushf
adc
les
lcall
scas
out
cmpsl
ds
push
inc
ret
sbb
in
inc
les
stos
xor
cmp
fwait
iret
stos
cmp
inc
add
inc
jb
dec
add
in
adc
pop
lret
pushf
xchg
and
outsb
insl
sbb
xor
rclb
inc
cmp
adc
xlat
push
mulb
dec
arpl
dec
sbb
sbb
stos
frstor
fisubrl
loope
bound
jae
mov
xchg
or
lret
shl
push
pop
lods
mov
fiaddl
or
lds
rol
mov
inc
fs
sub
sub
cmp
inc
ret
pop
mov
push
fmul
in
movsw
psraw
stos
mov
int3
imul
movsb
iret
or
fadds
mov
jle
adc
fbstp
fwait
or
lcall
push
mov
sbb
or
mov
adc
stc
xlat
stos
push
loopne
inc
aad
cmp
xchg
lods
mov
cwtl
push
cmpsl
mov
mov
mov
and
outsl
imul
aas
rorb
mov
fstps
int3
js
les
push
mov
mov
je
clc
cmp
push
div
lret
fldt
mov
xchg
loopne
jne
and
xor
mov
subb
cmp
and
or
movsb
mov
xor
adc
and
out
cmp
sub
jae
in
push
cmpb
stos
push
nop
cld
addr16
add
js
push
jnp
pop
arpl
sbb
scas
cmp
test
mov
mov
sub
pop
mov
mov
pop
or
outsb
mov
call
adc
hlt
movzbl
jg
lods
stos
sub
and
int
xchg
sbb
leave
push
call
orb
lods
outsb
mov
mov
in
popf
mov
enter
and
jae
sbbb
inc
call
inc
dec
mov
mov
sub
fwait
adc
and
cmp
std
sbb
pusha
repz
ffreep
pop
out
icebp
pop
xchg
xchg
roll
dec
or
jnp
cmpsl
mov
imul
cmp
sub
imull
repz
add
pusha
stc
mov
jno
mov
cmp
sbb
movsl
pop
mov
cmp
call
or
mov
pop
hlt
adc
push
push
mov
movsb
jl
dec
popa
inc
xorl
and
icebp
popf
sbb
mov
sti
cmp
xchg
loopne
loopne
jne
daa
test
or
pop
testb
jbe
mov
ret
addl
je
sti
mov
or
lcall
fstpt
cmp
rolb
pop
mov
xor
pop
jae
aam
mov
or
sarb
push
cmp
adc
cmp
push
fldcw
dec
sub
roll
push
in
fldt
into
cmp
dec
hlt
sub
lock
loope
mov
mov
mov
loopne
popf
mov
adc
insb
jne
pop
ret
inc
popf
shll
pop
test
add
fstps
sti
and
pusha
out
cmc
jmp
jo
mov
aam
or
cmp
stc
lock
rcl
scas
ss
test
pop
mov
push
movsl
iret
push
pop
stos
clc
pop
or
xor
rcrl
pop
push
bound
inc
movsb
stc
test
mov
sti
mov
xor
push
cwtl
sahf
xchg
and
aas
adc
aad
shlb
pop
divl
sub
lds
pop
into
pop
or
sub
scas
std
and
fisubs
xor
jmp
ror
dec
cmp
shlb
mov
cmpsl
dec
cwtl
jns
nop
inc
pop
dec
push
fstl
movsl
arpl
imul
into
and
mov
inc
fwait
xchg
je
addl
mov
inc
push
lret
lret
adc
and
sub
lods
shll
in
std
pushf
xchg
adc
and
xchg
insb
outsb
dec
lea
mov
dec
sub
push
ss
orb
dec
push
pop
ljmp
push
adc
mov
frstor
rcll
xchg
mov
mov
jae
add
xlat
push
daa
mov
xor
sub
add
add
sbb
pop
adc
lods
lret
stc
and
xchg
push
pop
pop
mov
jo
mov
cwtl
xor
xchg
in
xor
inc
in
aad
ret
or
imul
sub
lock
push
mov
cmp
cmp
push
pop
pop
je
push
aas
adcb
and
loopne
fstpt
dec
jg
ja
andb
cmp
testl
fists
pop
mov
test
cld
fmuls
shl
adc
lea
fisubl
push
movsl
jo
xchg
out
sub
mov
cmp
fadd
repnz
pushf
jg
and
inc
scas
xor
insb
dec
out
shr
add
xor
adc
xchg
lret
cmpsb
inc
ss
dec
mov
into
ja
das
mov
dec
arpl
jle
inc
lock
dec
sub
popa
enter
rolb
adc
push
hlt
pop
sub
fidivrl
fadds
dec
mov
loop
enter
enter
sub
out
ss
mov
and
nop
mov
leave
jae
lret
aas
xchg
aaa
andb
fdivrs
mov
mov
jle
dec
fwait
inc
add
pusha
pushl
push
sub
push
scas
popl
mov
xor
aam
xor
lds
and
jge
mov
cmp
sub
push
add
ss
jge
movsl
add
sub
sub
inc
cmpl
jbe
jno
push
adc
fs
mov
pusha
outsl
pusha
aas
or
push
adc
ret
inc
lea
inc
xchg
adc
lret
or
ja
lret
enter
mov
jg
testb
xor
mov
push
mov
enter
cmpsb
cmp
pop
or
into
sti
movsb
mov
pop
out
xor
xchg
es
mov
int
scas
ret
jbe
inc
sahf
pop
mov
js
lds
dec
cmc
cld
out
inc
lahf
jno
pop
out
jnp
sarb
pop
arpl
jno
mov
sbb
xchg
fdivrl
rorb
sbb
fsubl
lock
sbb
cwtl
stos
aad
mov
in
insl
aas
adc
lock
jbe
push
pop
test
or
cmp
mov
lds
mov
xchg
mul
gs
aas
sub
fidivs
push
lods
cs
popf
repnz
mov
mov
xchg
add
pop
push
mov
adc
icebp
ds
mov
inc
add
pushf
mov
std
jmp
xchg
pop
xlat
out
ljmp
mov
out
push
dec
test
fwait
lahf
lret
fldcw
xchg
fs
ja
inc
in
push
popa
jge
cmp
pop
call
dec
cmpsb
fldl
lret
sbb
stos
mov
xchg
cld
sub
cmpsb
aas
sahf
imul
repz
and
std
add
loop
or
or
xchg
stos
ja
sbb
lret
into
push
test
mov
and
and
inc
mov
out
aam
shrb
rclb
insb
aam
mov
adc
andl
jbe
cmp
sub
into
in
in
push
inc
xchg
test
call
cmpsb
push
out
or
lret
pop
sub
mov
xchg
inc
pop
lea
enter
fistpll
inc
nop
es
test
in
icebp
jno,pt
sarl
lret
cmpsb
and
pop
dec
push
pop
xchg
mov
aad
fmull
in
addr16
inc
fisubs
das
fdivr
je
das
mov
sub
pop
mov
loop
fisttpll
cmp
sti
push
or
lret
pop
cltd
mov
adc
pop
push
pop
jl
in
ficompl
fisubrl
outsb
cwtl
jle
xchg
dec
stos
sbbl
cld
dec
in
mov
cmp
sbbb
into
add
dec
leave
je
push
pop
sub
mov
jge
xchg
pop
pop
dec
repnz
fisubrl
scas
fwait
popa
cmp
loope
arpl
xor
cmp
lock
xchg
mov
xchg
and
ljmp
push
aas
jb
stc
sub
xor
ret
out
cmp
out
jecxz
ror
enter
lods
arpl
fisubs
inc
sbb
sar
jmp
push
or
jne
enter
rolb
imul
push
jl
fadd
adc
sub
rorb
wrmsr
js
dec
lahf
jle
sbb
insl
xchg
incb
iret
sarb
jnp
insb
xor
push
xchg
or
pop
call
mov
aam
mov
fcmovnb
in
int
cmp
xchg
or
inc
xchg
lea
xor
cmpsb
in
and
xor
pop
pop
fisttps
fs
leave
sti
xchg
popf
aam
xchg
loope
dec
in
jle
mov
pop
lock
push
popa
mov
inc
or
insl
insb
lods
or
adc
jnp
neg
cmp
sbb
mov
out
mov
das
loope
jns
das
add
pop
dec
loopne
push
xchg
sbb
rolb
xor
cmpsb
push
fwait
ja
neg
add
cmp
fmulp
adcb
sub
xchg
jle
addr16
push
incb
mov
cs
test
mov
dec
jnp
cmp
cs
loopne
xchg
pop
fstl
rorl
push
and
jg
push
popf
xchg
repnz
adcb
adc
pop
nop
sub
in
cmp
adc
test
dec
inc
hlt
mov
pop
xchg
mov
outsb
in
dec
pop
and
popf
test
insb
add
pop
call
dec
jg
in
inc
fimull
bound
iret
loop
sub
inc
in
mov
out
rcr
push
scas
pop
xchg
dec
xor
gs
xchg
add
adc
sub
out
mov
jns
cld
cmp
cmp
xchg
sbb
fs
pop
jns
or
xchg
mov
push
out
jnp
daa
adc
and
rcl
jbe
sarl
inc
mov
orb
inc
or
js
scas
cmc
sub
fndisi(8087
pop
jecxz
mov
rclb
mov
push
pop
shlb
mov
sarb
adc
cmp
sub
xchg
pusha
mov
sub
rorl
add
fnstsw
mov
inc
or
jl
cmpsl
leave
test
loopne
sbb
out
setns
inc
jg
mov
add
out
add
xor
add
es
lcall
jp
jbe
pop
and
push
xlat
test
ja
es
xor
cli
ja
mov
add
inc
or
out
xor
popa
and
jecxz
imul
ljmp
mov
outsl
adc
sub
inc
jl
pop
inc
xchg
ds
enter
inc
sub
out
cwtl
loope
lahf
rclb
mov
lahf
int
add
lods
and
rorl
push
add
lods
mov
stc
mov
scas
mov
and
out
and
les
mov
leave
xchg
imul
shl
mov
in
xchg
jp
xchg
push
mov
xchg
hlt
cmp
adc
in
xor
push
push
out
mov
cmc
push
leave
xor
sub
aaa
jne
test
xchg
xlat
inc
mov
sub
scas
mull
testb
sahf
leave
ret
mov
push
sbb
dec
xchg
rcl
xchg
in
mov
xchg
lret
bnd
sbb
daa
aam
in
sub
shll
mov
flds
in
in
mov
or
add
loopne
lcall
push
inc
es
cmc
pusha
xchg
push
imul
jge
mov
push
sbb
adc
mov
lea
clc
add
mov
fcompl
dec
arpl
aas
repnz
mov
fildl
aas
roll
out
adc
in
aas
faddl
dec
aas
fwait
je
out
push
push
pusha
inc
mov
mov
pop
push
sub
jmp
pop
pop
lea
cmp
inc
jmp
jge
mov
xchg
leave
filds
in
mov
add
pop
es
mov
xchg
or
adc
adc
loopne
es
xchg
and
push
fwait
push
into
bound
cmpb
loope
dec
gs
fisubrl
test
jle
or
es
adc
pop
mov
ja
mov
cmp
cmp
xchg
push
dec
cld
jp
mov
pop
xorb
mov
fisttpll
das
xchg
sbbb
cmp
js
repnz
int
mov
ret
sbb
mov
sbb
jmp
mov
repz
ja
bound
pop
mov
test
ja
pop
sahf
subl
xor
mov
sbb
add
stos
inc
roll
jle
sbb
pop
pushf
mov
push
cmpsb
sbb
mov
sahf
in
fimuls
sbb
and
xchg
mov
cmpsl
cmpsb
iret
push
sbb
xor
or
sbb
dec
sbb
jl
pop
mov
xchg
mov
cmc
sub
insl
ret
inc
out
adc
jg
sbb
mov
inc
jnp
mov
jnp
outsb
sub
sub
pop
stc
test
imul
xchg
pop
inc
shll
cli
lods
adc
sarb
sub
push
mov
mov
adc
loopne
sub
push
dec
xchg
add
std
or
jg
xchg
mov
out
or
mov
or
stos
adc
jno
cwtl
icebp
roll
fcmovnb
mov
orl
pusha
insb
xor
pusha
sti
jg
outsb
scas
jo
aas
inc
xchg
jne
jne
push
mov
rcrl
mov
ljmp
cwtl
and
add
je
mov
jb
push
mov
movsl
add
sub
and
cltd
xchg
js
push
sbb
cmp
out
or
stc
xchg
push
loopne
test
cmp
pop
sub
push
add
and
sub
repz
stc
repnz
cmp
arpl
punpcklwd
cmp
ljmp
test
push
negl
push
call
sbb
jne
sti
ljmp
out
pushf
nop
fisubl
push
and
fwait
pop
jp
dec
sbb
jb
lret
ss
in
clc
push
push
addb
xchg
adc
imul
adc
in
mov
inc
aam
clc
xchg
sbb
fsubl
mov
jg
add
iret
ret
int3
or
pop
adc
pop
rcll
sbb
lock
aam
pusha
fmull
mov
pushl
lods
mov
add
in
insb
mov
mov
or
dec
xchg
es
jle
imul
or
inc
push
dec
inc
pop
scas
call
leave
mov
ljmp
leave
push
roll
mov
int3
mov
outsl
out
mov
fs
and
xlat
scas
in
mov
xchg
or
sahf
ficomps
jb
sub
sub
jns
out
xchg
iret
fimuls
movsl
push
stos
scas
outsl
or
xor
push
rorb
pop
dec
inc
adc
and
add
push
roll
orl
push
or
lret
or
out
dec
pop
sub
test
hlt
lea
xor
call
pop
adc
or
mov
inc
sbb
bound
xlat
stc
loopne
dec
pusha
dec
jb
mov
ficomps
jnp
inc
xchg
sub
xchg
negl
shl
movsl
lahf
jmp
popf
dec
jbe
pushf
push
sbb
cmp
lock
jns
sbbb
lret
push
or
mov
mov
dec
mov
pop
sbb
movsl
clc
mov
ss
cmp
popf
and
or
lret
cmp
test
movsb
xchg
jno
sbb
pop
mov
out
cltd
pushf
testl
inc
mov
mov
sbb
roll
fst
shl
shll
mov
mov
fs
ljmp
sub
xor
pop
out
mov
mov
ja
mov
jae
aaa
iret
in
cmp
in
mov
lahf
stc
cli
shlb
pop
or
mov
inc
jno
inc
fimull
mov
jle
add
or
inc
addr16
cli
mov
inc
outsl
insl
inc
xchg
adc
cmp
mov
shll
dec
out
sbb
testb
rcr
sub
push
shlb
push
mov
push
movsl
cmp
hlt
cwtl
rorb
mov
or
pop
sbb
daa
rclb
outsl
push
call
daa
dec
xlat
cld
cmc
scas
xchg
inc
mov
stos
adc
and
leave
scas
mov
jno
mov
mov
cwtl
mov
jp
mull
addl
repnz
push
adc
sahf
add
jns
ret
int3
jge
mov
addb
stos
je
push
xchg
pop
outsb
adc
sti
insl
mov
orl
pop
pop
je
or
inc
mov
ret
outsb
insb
mov
push
push
in
mov
icebp
pusha
insb
lods
rorb
jge
cmp
aas
cmp
dec
push
inc
add
adc
stos
rorl
mov
xor
or
xor
xlat
vpsubusw
loop
sahf
scas
jbe
cld
stc
aaa
sahf
xchg
ret
inc
xor
add
shll
mov
inc
cmp
loop
ja
jbe
loop
data16
mov
jne
outsb
or
dec
clc
cmc
sub
adc
aam
or
imul
xchg
mov
cmp
imul
or
ds
cli
jmp
hlt
testb
and
inc
cmp
xor
jno
mov
and
cmp
aaa
mov
push
int
ds
ljmp
pop
add
jae
mov
jno
int3
fstl
test
mov
fcoml
movsl
lods
scas
sbb
jle
or
out
sarb
mov
pop
icebp
mov
add
or
add
jbe
mov
fbstp
mov
push
sbb
divl
andb
fldt
stc
pusha
mov
jbe
sbb
dec
mov
fistl
sbb
mov
out
adc
push
in
pop
add
dec
enter
pop
inc
add
cmp
jo
jne
fdivrs
movsb
lret
xor
add
inc
or
or
pushf
push
sahf
je
mov
insb
push
loopne
inc
lds
mov
add
popa
test
xor
push
lock
pop
hlt
lcall
test
cmp
jmp
cmpsl
jnp
inc
imul
sub
ljmp
dec
push
adc
leave
cmp
das
sbb
push
inc
push
ja
jle
in
or
aam
mov
lret
sbb
xor
and
xlat
lahf
je
sub
jp
jg
push
dec
or
mov
arpl
adc
pusha
addr16
stc
popl
mov
push
je
data16
or
scas
fnstenv
add
inc
cmp
cwtl
pushf
adc
xor
pop
les
or
fnsave
ret
call
xor
add
test
or
adc
pop
leave
sbb
sub
and
xor
iret
imulb
ret
jl
adc
insb
jecxz
xchg
sbb
cltd
mov
xchg
scas
fdivs
add
sti
mov
and
andb
shll
sub
xchg
inc
outsb
cmc
aas
lods
jno
insl
mov
or
fs
add
dec
jl
ret
dec
ret
cmp
jo
rcr
mov
js
mov
lret
and
out
enter
sbb
push
jo
xchg
imul
xchg
jne
adc
addr16
fbld
lahf
sbb
mov
aas
test
pop
outsl
adc
les
add
imul
or
lcall
dec
fnsave
or
cltd
mov
and
mov
push
or
xlat
ret
xchg
add
mov
in
ljmp
mov
sahf
stc
mov
inc
rcl
stos
push
aaa
negb
sbb
out
mov
sbb
cmc
pop
xor
or
cmp
mov
xchg
enter
lods
dec
xlat
sti
iret
enter
inc
clc
lret
lret
push
mov
repnz
aad
ljmp
xchg
cmpsb
test
xchg
jns
mov
mov
int3
es
xchg
and
mov
je
mov
add
in
push
mov
mov
sbb
cmc
addr16
pop
mov
in
inc
addb
jle
out
mov
dec
or
push
in
sub
ror
or
rcrb
aad
lcall
aam
sarb
leave
cmpsl
fnstenv
xchg
lcall
sub
adc
nop
dec
or
adcb
aam
movsb
push
js
jbe
insl
std
adc
push
out
jge
repz
data16
pushf
or
add
jae
jbe
adc
sarl
aad
out
mov
sbb
mov
sbb
movsb
imul
int
adc
pop
loopne
imull
mov
stos
mov
push
xorb
sahf
scas
dec
xor
fiaddl
add
dec
shrb
ret
add
stc
mov
cmpsl
addl
and
lret
push
mov
cmp
ds
inc
pop
mov
lret
and
fucomi
add
mov
mov
pushf
loopne
hlt
and
mov
push
lds
pushf
jmp
addr16
lods
cmpsl
and
scas
sub
in
das
push
and
shr
js
in
pusha
pop
adc
push
popf
dec
and
push
dec
jo
das
ss
std
pop
mov
mov
out
mov
adc
into
hlt
pop
sbb
and
cmpsl
xchg
gs
inc
outsb
pop
out
popa
mov
push
imul
mov
mov
cld
loop
inc
cwtl
sbb
or
ljmp
sbb
out
jo
mov
mov
lds
movsl
iret
lcall
imul
mov
loope
or
stos
fildll
arpl
shll
xor
cli
hlt
xchg
xor
sti
ljmp
mov
push
or
mov
inc
push
dec
sub
ret
mov
lret
dec
pop
and
negl
cltd
lods
or
dec
pop
add
adc
call
mov
leave
sub
fists
repnz
aam
xor
add
jmp
sub
or
out
notl
aas
fs
pop
pop
push
imul
xchg
test
dec
sub
adc
scas
mov
in
xchg
sarb
arpl
jge
push
pop
shrb
jbe
push
fcmovb
xchg
mov
xchg
add
mov
push
in
insb
jg
mov
jno
lods
idivl
sub
dec
cmpsl
xlat
and
sbb
sbb
dec
or
imul
adc
dec
test
fdivrl
sahf
ret
jno
daa
jae
xlat
in
in
ds
ja
lret
xor
les
cmp
or
rcll
push
into
nopl
cmp
jl
rclb
push
cwtl
lahf
cwtl
add
mov
xchg
mov
xchg
xchg
mov
scas
xor
shlb
imul
push
cmc
sub
adcb
stos
push
shrl
pop
addr16
ljmp
add
pop
push
cmpsb
or
dec
mov
lds
jmp
cmpsl
and
jnp
mov
sbb
xor
sahf
dec
icebp
sbb
mov
mov
and
cmp
aaa
jae
fnsave
mov
jp
mov
jbe
insb
sub
fwait
icebp
jg
fwait
in
lds
xchg
cmpsl
cmp
rcrb
sub
cmc
fcoml
jl
mov
mov
test
mov
sub
out
cwtl
sbb
in
test
imulb
pop
insl
jle
js
jb
push
sahf
mov
jmp
fmuls
mov
stos
push
adc
dec
inc
jl
or
sbb
xchg
fdivl
lahf
and
addr16
mov
dec
mov
out
xchg
inc
in
outsl
mov
outsb
xchg
dec
sub
push
test
insl
push
repz
xor
divl
mov
fidivrl
pop
fdivrl
ds
sbb
stos
push
xor
rcl
ljmp
cmpsl
or
and
mov
insb
mov
ljmp
lock
jnp
sbb
push
dec
lcall
mov
test
sbb
lahf
xchg
fwait
and
jb
mov
mov
push
xor
sarb
pushf
int
mov
mov
and
inc
rol
repz
fs
testl
sbb
mull
and
inc
jno
mov
and
iret
shl
movb
cli
dec
pop
mov
adc
icebp
bound
or
add
loop
sahf
cmp
add
je
pop
lret
test
mov
repnz
fscale
ja
inc
inc
xchg
inc
add
popa
mov
xchg
fmuls
shr
pop
mov
je
adc
inc
enter
sahf
cmc
push
xchg
out
sbb
mov
adc
leave
add
loopne
push
lret
sub
in
mov
rcll
rcrb
jb
and
push
jns
lds
mov
aam
mov
fdivs
daa
cmp
sub
adc
loopne
scas
jae
mov
jecxz
xchg
bound
hlt
cmp
or
sets
sub
jbe
dec
aam
add
stc
inc
fsubrl
inc
push
fwait
cli
or
jns
mov
in
sahf
pop
es
add
inc
js
inc
pop
pop
xchg
mov
dec
mov
fstpl
int3
pop
jbe
aas
cs
and
push
aas
fmuls
push
shll
das
mov
push
sbb
in
adc
lahf
loope
sub
add
xor
mov
repnz
dec
fprem1
dec
lods
ja
or
or
insb
push
scas
cmpsb
ljmp
jne
pop
cmp
or
add
stos
add
and
vphaddubd
aad
insb
sub
jle
xchg
les
int3
les
pop
loop
roll
mov
push
pop
mov
sbb
push
mov
and
push
fsin
lret
mov
adc
cli
inc
movsl
subb
sub
int3
xchg
cmp
in
and
fnstsw
sbb
cmc
iret
or
mov
pop
adc
jge
jae
data16
mov
scas
lea
gs
ds
mov
loope
es
addr16
shlb
dec
clc
aas
rcrb
sbb
cmp
cltd
xchg
cmp
dec
out
int
ds
jecxz
pop
push
fst
test
push
adc
push
cmp
mov
pop
hlt
iret
jb
xor
push
popf
push
dec
lret
dec
negb
hlt
mov
test
out
mov
insl
filds
inc
filds
cmp
cmpsl
adc
call
pop
inc
nop
mov
mov
xchg
add
push
xchg
pop
int3
repz
mov
fs
mov
xchg
inc
adc
lahf
out
sarl
fstpt
jb
mov
js
cmp
loopne
or
sbb
jmp
sbb
xorl
mov
lods
pop
stos
adc
mov
jno
sbb
test
fisubrl
mov
jae
mov
mov
cltd
or
fmull
gs
imul
mov
ljmp
mov
ja
mov
add
in
cld
cmp
aaa
lahf
cmp
mov
nop
inc
out
jo
xchg
in
add
sub
idivb
pusha
addr16
add
sbb
fnsave
jmp
aas
fimuls
in
and
in
sub
sbb
cmp
dec
aaa
pushf
jbe
push
pop
or
push
pusha
mov
add
pop
test
sub
cmp
sbb
add
and
inc
pushf
enter
inc
mov
lods
daa
sbb
sbb
inc
fnstcw
in
ljmp
gs
repnz
test
scas
aaa
mov
movsl
cmp
cmp
mov
out
cld
dec
xchg
dec
popa
les
stc
lea
jle
or
into
imul
pushf
push
jns
ret
pop
mov
push
add
scas
and
jb
adc
push
imul
sbb
jbe
inc
xchg
jae
shll
ret
pop
xchg
mov
cmpsb
cli
lods
xor
jmp
cwtl
rcr
cmp
sub
mov
mov
xchg
aad
adc
outsl
popa
cs
xor
dec
inc
int
adc
cmp
dec
cmpb
mov
xchg
movsb
pop
mov
test
jae
sub
mov
xchg
adc
fisubl
insb
loope
xor
in
inc
push
sub
int
lds
nop
pusha
jne
pusha
mov
mov
mov
xchg
xor
lahf
cmpsl
out
into
inc
les
push
push
int
sub
pop
lock
mov
jge
push
jae
and
insl
inc
pop
xchg
mov
xchg
es
bound
icebp
repnz
lcall
or
test
in
imull
cmpsl
jle
sub
sub
out
and
stos
shl
and
inc
je
jge
fiadds
inc
stos
shll
lret
jno
int3
adc
inc
jmp
cmp
hlt
int
jmp
ss
lods
scas
xorb
sbb
repz
push
das
xchg
mov
loope
ja
push
and
loope
mov
arpl
sub
psrad
dec
push
pusha
mov
iret
sub
adc
push
in
and
hlt
ljmp
mov
adc
jo
xchg
push
jb
mov
lods
and
out
xchg
push
push
or
xor
ja
cmp
cmpsl
mov
divb
xchg
in
cmp
push
sti
clc
imul
test
call
or
lahf
cltd
je
fdivrs
test
mov
mov
dec
dec
or
adc
cmpsl
mov
xchg
cmpsb
or
loop
sbb
mov
pop
mov
iret
in
mov
jecxz
cmp
jns
aad
clc
sbb
mov
mov
adc
push
andb
fimuls
shl
mov
push
fdivrp
into
jae
imul
xchg
js
testl
push
jecxz
xor
sub
mov
in
cs
int
imul
inc
inc
sbb
and
or
fimuls
jl
and
out
add
xor
mov
fadds
icebp
inc
jge
movsl
cs
mov
cmp
mov
jle
pop
sub
adc
jne
jmp
cltd
xchg
into
jge
pusha
lods
inc
in
inc
js
sti
fldt
mov
jae
movsl
hlt
cmpsl
mov
sbb
dec
ret
dec
sub
mov
mov
xchg
mov
mov
pop
mov
sub
cld
fisubrs
fwait
push
out
push
ss
cmpsb
outsb
cmp
lods
xor
scas
push
xor
sub
jb
outsb
pusha
adc
inc
test
dec
push
call
cmpsb
imul
insb
fistps
jp
jg
ljmp
xchg
fsubs
inc
aaa
adc
and
inc
add
push
sub
cli
cwtl
sub
and
adc
gs
cli
add
xor
movsl
mov
movsl
push
mov
mov
jno
pop
sub
in
mov
mov
xor
push
dec
cld
mov
loop
inc
push
into
lock
cmp
sbb
aas
out
sbb
les
movsb
push
xchg
lcall
lcall
and
sbb
add
push
sti
or
mov
pop
clc
sarl
es
add
dec
icebp
gs
mov
cmp
insl
mov
mov
cmp
pop
jnp
out
dec
xchg
push
inc
call
cmp
xor
mov
mov
mov
jle
sbb
lods
sub
insl
mov
xor
dec
aad
pop
inc
sub
or
mov
sbb
sbb
fmuls
loope
nop
pop
fimull
xchg
scas
adc
mov
icebp
mov
mov
clc
or
je
mov
jne
sub
jecxz
mov
mov
mov
cmpsl
popf
or
pop
adc
mov
shrl
push
loope
lcall
add
ss
cmp
mov
dec
dec
mov
nop
pushl
bound
dec
lcall
sbb
pop
push
aad
jae
pop
test
aad
pusha
and
fs
jp
into
lret
dec
rcr
repz
scas
nop
push
add
pop
test
cmpsb
or
xorb
jg
xchg
sbb
jl
xorl
and
or
lcall
das
xchg
inc
out
aam
xor
popf
xchg
push
push
data16
mov
out
jmp
leave
sub
xchg
std
sahf
pushf
xchg
js
test
add
cmpsl
xor
fcmovu
imul
das
jmp
push
mov
xor
insb
repz
test
jg
xor
outsl
jae
subb
push
jb
push
mov
jno
cld
popf
inc
je
cs
and
dec
inc
lcall
jno
inc
repnz
push
icebp
loop
pop
sub
and
or
ret
mov
fbld
push
mov
fdivrl
test
sbb
push
imul
pop
inc
scas
jl
cmp
bound
mov
enter
faddl
cli
and
test
shl
jo
or
repnz
mov
lock
in
dec
sub
mov
ret
cltd
ret
mov
fsub
imull
jmp
roll
xchg
lret
xor
jp
adc
into
repz
push
pop
and
push
xchg
out
jns
insl
jo
xchg
jae
jne
shll
outsb
outsl
in
rcrb
mov
dec
test
out
xchg
mov
std
fimull
out
idivb
sti
or
and
push
lods
mov
add
push
fwait
call
push
das
fcmovu
call
sub
or
push
jnp
pop
cmp
stc
fcmove
xchg
std
or
movsb
fsubrs
push
shll
fcoml
dec
push
jne
xor
or
hlt
jo
mov
sbb
inc
ja
sahf
leave
jecxz
adc
pop
mov
mov
xor
sti
mov
pop
push
jnp
popf
nop
inc
or
orb
inc
jbe
push
mov
xor
mov
outsb
pop
je
xchg
cli
add
fwait
aad
or
shll
cmp
xchg
ret
fimuls
inc
rcll
es
xor
andb
push
push
add
inc
hlt
xor
sti
pop
daa
cwtl
mov
push
push
mov
adc
out
stc
ret
pop
xor
sbb
push
mov
movsb
xor
xor
mov
out
cs
add
push
sbb
mov
sub
inc
add
xor
in
mov
rcrl
sbb
cltd
inc
inc
mov
scas
orl
inc
mov
outsb
add
or
mov
ret
add
imul
in
popa
add
lret
movsl
dec
push
scas
xchg
cmp
test
mov
cld
mov
in
sub
push
jle
push
adc
mov
inc
pop
sarb
shll
mov
pop
xchg
dec
sub
popf
dec
sub
mov
jno
push
outsl
pushf
or
dec
sub
loop
iret
inc
and
cmp
icebp
rcr
ss
push
ficoml
jge
movsb
mov
cmpsb
add
repz
pop
sub
punpckldq
inc
leave
les
aas
jmp
xchg
lcall
leave
push
jecxz
ror
sub
adc
aam
xor
test
pop
shlb
setge
push
loopne
add
jge
adcb
push
mov
xor
outsl
scas
and
mov
jno
or
sahf
data16
mov
sbb
or
ja
xchg
outsl
andl
sarb
inc
shlb
sbb
cld
sbb
sbb
mov
mov
inc
jnp
jbe
cltd
aas
or
frstor
fdivl
and
fst
and
and
cli
bound
jecxz
adc
inc
adc
mov
lret
dec
stc
fildl
inc
jecxz
sub
mov
xchg
fbstp
lcall
xchg
bound
add
sti
pop
mov
add
ss
sub
xchg
inc
xchg
xchg
push
sbb
jb
dec
jge
push
xor
sarb
ret
cmp
mov
and
add
cmp
mov
aaa
js
adc
xchg
in
in
jg
enter
es
in
cmpsl
mov
xchg
adc
lods
das
outsl
pop
and
aas
notl
or
add
cltd
out
shll
lock
mov
lds
sub
push
mov
jno
mov
ret
aad
imul
dec
das
fxam
jnp
mov
sbb
loope
je
jo
fld
in
and
cs
shr
popf
or
and
test
jo
jle
sub
jne
or
fidivrs
inc
and
mov
ss
and
and
mov
sahf
jo
scas
mov
sbb
adc
cmp
mov
insl
shlb
push
js
sbb
sti
mov
hlt
and
pop
push
pop
out
scas
adc
sbb
sbb
and
sbb
cmp
fwait
and
mov
orl
insl
dec
push
pushf
pop
and
rorl
ret
cmpsb
mov
popf
and
movsl
xchg
cmc
push
mov
fldenv
xor
movsb
imul
cmp
insl
lock
jmp
sti
repz
xchg
outsb
push
imul
repnz
jmp
lea
lret
mov
fcmovnbe
popl
dec
mov
xor
icebp
ja
mov
cld
xor
aad
popf
roll
add
icebp
es
xchg
cli
pop
and
add
pushf
xor
inc
pop
lret
xchg
iret
rorb
and
jns
mov
adc
insl
test
pop
sbb
push
inc
mov
mov
cmpl
push
pop
or
iret
add
ret
xchg
jmp
xchg
mov
dec
stos
sbb
adc
pusha
mov
stc
and
imul
scas
sbb
cmp
adc
lds
iret
insl
add
mov
das
jne
std
and
mov
mov
adc
cli
sbb
cs
enter
sub
sbb
aam
lock
sbb
xor
inc
dec
inc
outsl
rcrb
idiv
pop
lods
clc
mov
dec
aaa
jo
pop
and
jns
enter
ret
pop
inc
cvtpi2ps
pop
pushf
add
dec
mov
shlb
out
popf
fisubl
in
es
test
jae
incb
lds
es
mov
out
pop
add
sbb
std
xorb
out
orl
add
jl
add
xchg
movsb
jo
in
xor
mov
mov
out
or
inc
pop
and
std
xor
xchg
lahf
aaa
add
roll
or
loop
in
mov
push
push
push
cmp
hlt
fdiv
dec
mov
je
adc
and
xchg
or
jae
shll
or
inc
mov
nop
in
mov
and
imul
fimull
jns
mov
xchg
mov
stos
enter
push
int
lret
out
mov
jno
sub
mov
or
xchg
and
mov
push
or
jbe
jne
xor
jb
test
faddl
popf
fwait
mov
pop
repnz
fwait
add
push
mov
pop
mov
arpl
insl
icebp
push
push
rolb
add
leave
dec
adc
mov
sbb
adc
sbb
or
inc
or
cmpsl
std
adc
or
mov
rorl
aad
jecxz
mov
imul
adc
adc
jecxz
jmp
xor
or
in
jle
insl
loope
out
cwtl
ds
mov
out
adc
mov
fisttps
ds
pop
lcall
mov
imul
inc
adc
adcb
cltd
lods
jle
dec
aas
ret
lods
inc
jae
xor
test
push
inc
mov
add
mov
sbb
sub
or
xchg
sub
insb
shrb
add
xorb
pop
and
out
into
inc
lods
jno
ucomiss
out
and
lods
lcall
sbb
cmp
pop
xchg
push
in
inc
xchg
scas
or
stos
push
sbb
icebp
sub
aas
mov
lcall
les
outsb
xor
mov
lock
dec
mov
sbb
cwtl
out
outsb
xor
icebp
out
jns
pop
cmp
ss
mov
and
lds
ds
add
icebp
dec
out
call
je
mov
push
push
push
fsub
sub
xor
jmp
mov
xchg
aad
out
pop
sub
rcrl
test
sub
lods
jge
or
mov
pusha
adc
mov
jecxz
adc
mov
mov
ret
dec
test
xchg
cmpsl
or
sbb
cmp
add
in
xchg
lods
dec
rcrb
loop
popl
in
cmc
xor
jl
cmp
inc
push
push
or
call
pop
xchg
inc
aad
stc
mov
scas
jecxz
jge
push
xchg
arpl
jp
outsl
and
adc
mov
cltd
cmp
add
les
lock
icebp
pop
imulb
hlt
into
ret
es
fisubl
dec
pusha
repnz
dec
out
push
mov
pop
jno
test
push
idivb
js
cmp
push
add
and
adc
ficomps
sbb
sub
push
mov
sbb
jge
or
jg
addb
lock
in
int3
rorl
fistl
jnp
cmp
mov
pop
xor
xlat
lret
and
push
movsl
jg
decl
ljmp
repz
pop
sbb
cmp
dec
dec
push
stos
cmpsb
xor
mov
jns
xchg
pushf
mov
mov
icebp
or
mov
mov
sbbb
popf
mov
fcoms
sbb
leave
dec
testb
and
test
jecxz
mov
repnz
push
aam
xchg
int
xor
daa
cs
idivb
leave
push
sub
sbb
in
sbb
jb
out
imul
mov
addl
in
sbb
xchg
sub
enter
nop
mov
ret
jbe
les
add
sti
mov
loope
xchg
lock
jmp
sub
lret
sub
stos
sahf
mov
es
lods
jae
adc
fisubrs
xorl
aaa
mov
mov
or
cmc
pop
sub
sub
sbb
push
pusha
add
bound
roll
clc
pusha
jb
sub
imul
loope
lea
lods
bound
inc
push
push
mov
sub
out
out
pop
out
imul
push
ljmp
jp
das
icebp
adc
mov
out
mov
imul
xchg
add
movsl
addr16
idiv
inc
jg
scas
sbb
shlb
js
jle
xor
mov
jmp
stos
sbb
dec
pop
inc
cmp
iret
adcl
sub
hlt
imul
movsl
rcrb
pop
pop
jne
adc
jecxz
test
sbb
mov
cmp
xchg
xor
nop
pop
lret
js
outsl
mov
sub
dec
push
cmp
sub
popf
cmp
push
cmp
jb
or
test
ret
out
mov
push
sbb
cmp
xchg
loopne
jge
xorl
call
faddl
push
pushw
dec
andl
data16
cmp
mov
movsb
jl
cmp
and
lret
std
add
sahf
cmpsl
rolb
cwtl
stos
repz
inc
je
sbb
cmp
and
and
aas
sub
cmp
je
aam
xchg
imul
adc
iret
ror
adcb
das
addl
or
add
fistl
test
jecxz
jae
into
fcoms
mov
pop
xrelease
cli
push
aad
jnp
pop
enter
fsubrl
mov
pop
jmp
cli
add
test
cmp
xor
xor
fs
mov
jo
fs
push
mov
es
fmuls
pusha
sti
mov
ret
and
test
pop
or
lahf
ds
nop
mov
push
in
cmp
jnp
sub
pop
in
test
mov
mov
fs
addb
inc
sub
pop
mov
test
stos
jmp
and
inc
fwait
cmp
lea
aam
data16
aam
pop
jmp
repz
push
xchg
sub
fldcw
lods
push
jno
add
ja
sbb
inc
mov
jne
loop
dec
xor
adc
ds
stc
adc
pmuludq
lea
mov
xchg
add
xor
xchg
scas
xchg
es
fidivrs
arpl
xchg
xorl
idivl
jge
xor
sbb
sub
mov
notb
xchg
xchg
mov
lret
push
hlt
lea
mov
out
iret
mov
jnp
and
adc
sub
adc
pop
inc
aaa
rcrl
sbb
jecxz
pop
scas
dec
and
dec
mov
mov
push
xor
or
inc
testb
adc
add
and
test
shl
push
adc
mov
mov
add
jne
cmp
add
pop
hlt
insl
xor
xchg
jmp
sub
sub
xlat
xchg
push
pop
ds
iret
push
ljmp
sub
inc
add
mov
pop
fs
mov
dec
scas
dec
and
rorb
jbe
iret
push
xchg
push
test
lret
mov
or
add
ret
enter
call
pop
xor
aaa
sbbb
into
gs
shl
fdivs
pop
mov
addr16
std
pop
and
pcmpgtd
cmp
push
and
jmp
push
call
scas
push
push
notl
dec
xor
add
xchg
outsl
test
les
xchg
dec
and
and
jbe
and
inc
sub
shrl
sti
mov
inc
js
mov
pop
and
jl
mov
inc
andl
call
imul
add
xor
stos
data16
and
cmpsl
inc
fisubs
repz
cmp
xchg
rcrb
jg
mov
rclb
idiv
jl
bound
bound
dec
mov
pop
lret
push
xor
or
mov
mov
push
jg
daa
and
pslld
push
loopne
add
popf
clc
cmp
test
ret
mov
popa
cmpsl
push
xchg
ljmp
mov
mov
fisttpl
dec
lahf
test
stos
out
and
inc
movsb
xor
adc
ficoml
xor
jp
iret
clc
cmpsl
fs
aas
mov
je
scas
mov
in
bound
aaa
or
mov
push
mov
inc
insl
jge
cmp
cltd
push
sbb
fnstenv
nop
xchg
icebp
mov
andb
scas
mov
sub
sbb
je
xchg
lds
iret
push
dec
sub
dec
imul
mov
inc
dec
jns
cmc
ja
adc
xchg
fdivrp
fbstp
or
iret
dec
adc
into
pusha
shll
cs
adc
mov
test
sbb
and
mov
in
test
cmp
xchg
sar
cmp
cli
pop
cmpb
cli
fwait
inc
push
nop
or
imul
imul
sub
sub
xor
stos
mov
add
dec
pop
xchg
in
lcall
test
xchg
pusha
cmp
mov
jno
cwtl
mov
pop
iret
cmpsb
add
pushf
test
inc
stc
js
sub
mov
adc
push
add
popa
add
jno
push
jg
imul
cmc
sub
scas
test
mov
loop
dec
arpl
sub
cmpsb
mov
aaa
push
add
in
hlt
in
sbb
push
cltd
sub
add
dec
jnp
or
aad
jge
dec
notl
test
sahf
das
dec
fcmovb
pop
push
fisubrl
xchg
xchg
push
jne
inc
out
adc
js
cmc
in
xchg
mov
test
mov
stc
hlt
xlat
ds
xor
xchg
jns
pushf
jle
dec
adc
mov
dec
sbb
in
cmpsb
mov
ret
ret
fcoml
adcl
jno
cwtl
mov
lock
mov
popf
lahf
stc
mov
das
cmp
leave
xor
aas
loopne
lret
mov
dec
cmp
lds
sub
push
lahf
fdivrs
outsb
and
dec
sub
jge
daa
mov
dec
adc
shll
pop
lods
les
mov
das
xchg
in
xor
pop
inc
repz
xor
mov
es
or
jmp
and
mov
sub
push
testl
lock
mov
icebp
std
xchg
jnp
jno
sub
mov
pusha
lahf
in
sbb
sub
mov
jge
or
les
pop
inc
mov
dec
movsl
mov
arpl
dec
daa
or
pop
jns
rcr
xor
push
cmc
test
add
ss
fnstsw
icebp
jmp
sti
imul
mov
in
test
mov
in
push
ret
sbb
jl
jbe
xor
or
addr16
data16
sbb
mov
pushf
jae
fnstsw
loop
insb
push
fwait
loope
pop
aad
pop
lods
sbb
into
add
sub
or
push
xchg
aaa
jae
xchg
adc
inc
and
push
adc
sub
mov
push
add
sahf
je
or
inc
add
adc
lcall
lock
jp
imul
outsl
mov
or
push
push
out
push
ja
test
dec
cmc
pushf
xor
test
test
pop
in
cmp
sbb
mov
movsb
icebp
cmp
lods
adc
fisubs
sub
pop
sbb
popf
inc
les
ljmp
insb
mov
in
lahf
jecxz
fcmovbe
push
fisubrs
push
out
ss
dec
cld
stos
pop
lods
sbb
fdivrl
pusha
mov
sbb
jno
pop
mov
fs
cmp
xor
lahf
movsl
and
movsb
inc
aam
iret
ret
fsubrl
sbb
pushf
xchg
and
pop
jo
pop
fnstcw
test
mov
icebp
pop
out
cmp
push
je
inc
xchg
xchg
dec
xchg
adc
cltd
mov
cwtl
bound
dec
aam
jle
push
xlat
lds
jae
push
stc
mov
adc
lock
push
jl
dec
push
push
test
xchg
jp
sbb
xor
ret
into
inc
dec
movsb
lret
xlat
or
sbb
sub
int3
jp
xchg
arpl
insb
pop
adc
pop
cs
fbstp
mov
pusha
cmp
mov
sahf
test
and
shl
inc
icebp
jns
sub
push
mov
dec
in
andb
sub
xor
mov
jecxz
pushw
ret
in
push
cmp
ss
pusha
les
fists
dec
aad
or
add
jp
push
clc
cmp
bound
sti
and
nop
lahf
test
leave
jg
stos
rcl
cmpl
jb
dec
pop
fisttpl
mov
shll
or
and
sub
fs
xor
call
pusha
pop
jmp
mov
jp
push
ret
cwtl
pop
fbstp
and
inc
lret
sarb
xchg
in
ljmp
call
cmpl
shll
sbb
lahf
mov
pop
sti
enter
stos
lods
or
mov
mov
rcr
cmp
subb
lret
cmp
mov
test
mov
add
outsl
pop
add
xor
mov
lock
loop
adc
pop
clc
lea
ret
insl
mov
xchg
pop
jg
xchg
repz
xchg
int3
int3
repz
pop
ljmp
aad
jmp
xchg
bnd
push
push
aaa
orl
sbb
sub
pop
xchg
cltd
clc
incb
fstps
push
cmpsb
sbb
repz
pop
mov
mov
repz
shlb
andl
mov
mov
mov
out
jmp
dec
push
mov
pop
jne
mov
mov
jecxz
enter
or
push
dec
push
xor
xchg
mov
inc
outsl
pop
outsl
bound
je
or
incb
movsl
ds
jmp
pop
xor
test
push
fnstenv
loope
mov
roll
call
imul
ljmp
popa
loopne
push
xchg
rcrb
sahf
int
idiv
lcall
push
mov
push
icebp
jmp
out
xchg
les
test
into
dec
cwtl
call
fs
mov
loope
scas
ss
push
xchg
insl
cmp
jge
sbb
loop
lret
mov
movsl
jnp
or
inc
push
movsl
sbb
subb
push
in
sbb
cmp
test
into
fildll
push
add
addl
lods
ds
adc
and
dec
rclb
andb
stc
jo
inc
inc
stc
loop
sub
mov
push
jle
cmp
into
lcall
inc
enter
jnp
arpl
sub
shl
sub
stc
and
adc
cmpsb
jle
xlat
out
repnz
and
loop
loopne
andb
sbb
pop
cmp
sub
push
imul
test
insb
test
insb
dec
sbb
cmpsb
jg
dec
insl
daa
sahf
sub
xchg
scas
fcoml
dec
cmp
or
stos
add
aaa
mov
dec
lahf
jns
push
sub
push
cmpsb
sbb
and
ds
mov
xor
dec
and
xor
push
push
fs
or
cmp
lods
divb
sbb
ficoms
push
jbe
mov
mov
mov
and
push
jmp
xchg
sarb
adc
add
lahf
fistl
add
fsubrs
hlt
or
sbb
or
ror
dec
setle
and
add
inc
iret
and
lock
ret
je
test
or
pusha
jecxz
cmpsl
xor
arpl
sub
mov
cmpsl
mov
filds
daa
add
imulb
push
psadbw
mov
outsb
bound
je
xchg
loop
jae
daa
scas
inc
jbe
lret
push
repnz
push
inc
bound
cmpps
shlb
lahf
mov
mov
dec
cmp
lea
mov
outsl
add
frstor
test
subb
lret
imul
cmpsl
clc
mov
or
notl
xor
scas
jge
imul
add
mov
add
push
mov
clc
iret
btsl
add
sahf
xorl
xchg
jl
mov
mov
mov
mov
or
das
fdivrs
cld
inc
bound
insb
pop
pusha
popa
in
enter
xchg
mov
sbb
sarl
loope
mov
std
out
mov
loope
jnp
pop
inc
dec
xor
mov
je
inc
mov
jb
sbb
cmpsb
outsb
jl
jp
sub
jne
pop
popa
mov
dec
mov
adc
test
fs
cmc
popf
jg
mov
pop
and
inc
cmp
inc
sti
jecxz
jl
sub
dec
or
sbb
add
xchg
xchg
push
or
add
sbb
sub
jae
stc
mov
pushf
imulb
xchg
pop
dec
mov
mov
sub
sbb
mov
addb
sbb
mov
int3
push
imul
fs
stos
pop
mov
and
xchg
sbb
or
in
cmp
xchg
je
inc
dec
jp
mov
lods
dec
sbb
cmp
jecxz
mov
pop
call
data16
negl
pop
imul
cmp
push
xchg
loope
movsl
dec
stos
mov
out
dec
popa
rorb
or
inc
stos
mov
mov
jbe
jl
add
notb
adc
in
fwait
inc
mov
in
int
xchg
scas
es
pushf
fucomip
mov
lcall
dec
pop
inc
jecxz
jecxz
jo
fwait
daa
std
mov
xor
cmp
ret
scas
nop
ret
xchg
insl
mov
into
and
stos
outsb
push
cld
mov
or
dec
in
fnstsw
add
lahf
cmpsl
fisubs
cmpsb
mov
jg
adc
and
dec
lret
loopne
das
cmp
repz
js
cs
popa
loopne
das
or
sub
stos
xchg
adc
js
dec
pop
cmpsl
dec
xchg
stos
ss
or
loop
mov
xchg
fdivrl
fildll
dec
mov
inc
aam
and
cwtl
push
jno
out
out
es
sbb
jle
sbb
sarl
negb
flds
push
pop
int3
popa
mov
bound
dec
ja
fmuls
jbe
pop
xchg
scas
xchg
adc
iret
push
jae
mov
pop
mov
and
addl
int
pop
iret
mov
fwait
push
pop
mov
push
popa
mov
mov
rclw
xchg
popa
push
stc
dec
push
sub
fmull
inc
les
scas
pop
add
pushf
sub
dec
and
ljmp
test
and
mov
xchg
sbb
push
lcall
push
cmp
frstor
inc
inc
stos
xor
cs
into
lahf
enter
pop
imul
outsb
mov
inc
mov
sahf
ss
ja
mov
jle
jnp
mov
jle
mov
lcall
fistpll
mov
sbb
or
mov
mov
cmpsl
ss
pushf
aaa
in
inc
add
adc
sub
movsb
xor
sub
movsb
stos
cmp
add
sti
cmp
dec
lret
ljmp
vandps
jmp
sbb
add
cmp
pop
mov
js
lret
andb
sbb
adc
ficoml
inc
push
xchg
cwtl
pop
in
idiv
or
cld
outsl
std
into
int3
cmpl
repnz
inc
mov
push
cld
test
loope
arpl
lret
ficompl
sbb
mov
or
sbb
mov
subl
pop
pop
and
xor
fidivrl
mov
add
scas
push
push
xor
fadds
add
mov
in
and
aas
pop
fndisi(8087
in
mov
pop
movl
push
dec
adc
push
mov
lods
adcl
jle
int
dec
dec
mov
je
sub
adc
push
inc
sbb
xor
xchg
fs
outsb
outsl
adc
sub
arpl
mov
lods
lahf
cmp
cwtl
cmp
cld
mov
adc
push
cltd
push
cmp
xchg
movsl
jne
add
add
test
mov
das
pop
add
push
sub
inc
xor
shrb
popa
jg
dec
subb
ja
adc
add
stos
xor
js
mov
jecxz
cmp
insl
cltd
test
je
int
mov
mov
jge
cltd
and
and
inc
jmp
out
inc
fdiv
test
push
xchg
adc
adc
jb
in
cmp
sbb
inc
mov
inc
cmc
scas
sbb
xchg
mov
inc
loope
dec
shl
js
jae
xchg
pop
bound
xor
gs
add
ret
or
orl
adc
push
jbe
je
adc
adc
subb
test
cltd
movl
js
sbb
cmp
push
push
pop
jge
test
popf
outsb
ljmp
in
cld
jl
jg
imul
pop
int3
mov
insl
jo
adc
pusha
pop
mov
pushf
std
mov
pop
sbb
iret
jae
inc
mov
jo
sub
push
mov
fdivr
add
push
xchg
adc
pop
stc
mov
mov
mov
mov
or
adcl
push
int
sbb
xchg
sub
jae
inc
or
or
mov
das
push
dec
pop
and
sarb
test
or
ss
cltd
sbb
mov
cmpsl
fidivl
cmp
lods
inc
inc
cs
fmuls
jo
jbe
std
fldcw
pop
add
out
cld
inc
mov
lea
adc
les
aas
xchg
ret
mov
sub
cmc
cmp
jbe
test
bound
pop
jo
shlb
mov
cld
inc
nop
lds
sahf
leave
fs
loop
mov
lods
cwtl
lcall
push
mov
mov
enter
in
loopne
jl
adc
test
lods
stc
mov
mov
addb
les
inc
enter
push
ret
mov
pop
fisttpl
add
inc
out
dec
cmp
mov
jp
pop
mov
fidivrl
push
inc
leave
shll
call
mov
dec
stos
push
imul
fisubs
das
arpl
add
xor
push
je
jae
mov
inc
jecxz
and
scas
aas
jnp
xchg
adc
jne
mov
in
jne
pop
jmp
cmc
or
call
pop
xchg
mov
addr16
hlt
loope
bound
adc
mov
call
aas
pop
dec
and
and
jno
push
or
dec
jl
inc
call
dec
jecxz
mov
call
sub
orl
imul
push
fwait
and
shll
xchg
hlt
cmp
cli
sbb
sbb
shrb
mov
outsb
loop
jbe
fnsave
mov
jge
loope
lock
push
pop
cli
inc
inc
adc
mov
addr16
aam
mov
xchg
dec
mov
dec
sahf
jle
test
test
jnp
arpl
xor
mov
add
out
jge
pop
data16
add
adc
mov
insb
test
pop
outsl
adc
add
jno
or
mov
xor
lret
enter
faddl
data16
lcall
and
xor
insb
ds
xchg
push
adc
jo
inc
inc
push
into
mov
stc
les
js
addr16
pop
inc
fisubl
movsb
shrb
pop
xchg
lods
pop
or
imul
shl
xchg
xor
mov
or
scas
jg
shlb
ss
jp
push
dec
aaa
mov
dec
pop
pop
xor
aaa
pop
xchg
inc
adc
or
sbb
push
movsl
push
or
stos
jg
cmp
icebp
in
adc
xor
xor
lds
add
frstor
dec
clc
inc
out
jg
adc
mov
push
in
jo
add
push
push
jmp
push
bound
lret
mov
test
repnz
mov
addr16
lea
dec
fucomip
mov
test
xorb
push
shll
add
inc
jbe
cmc
scas
loope
push
xor
adc
ss
cmc
mov
inc
mov
xchg
dec
loope
popf
aad
mov
jge
sub
add
xchg
cmc
fldt
cwtl
iret
add
add
xor
hlt
sahf
sbb
pop
into
adc
mov
pop
jg
pop
movl
push
add
jae
lahf
loop
in
push
add
test
inc
mov
das
cmp
insb
mov
hlt
mov
shll
jns
js
xchg
and
les
xchg
push
jne
ja
ja
popf
or
mov
mov
incl
push
daa
push
dec
fsubrs
or
mov
sbb
rcrb
mov
sub
lahf
adc
test
sbb
mov
xor
scas
cmpsl
add
push
or
mov
jg
sti
orb
pop
in
or
outsl
imul
adc
andl
lret
xchg
out
add
inc
outsl
fnstenv
cmovns
aad
push
mov
push
mov
movb
add
mov
inc
das
sbb
nop
std
mov
in
pusha
dec
adc
or
push
in
jbe
jnp
inc
data16
adc
enter
imul
add
and
shlb
xor
mov
mov
sub
test
xor
adc
cmp
mov
pop
pushf
mov
imul
aam
inc
xchg
sub
inc
cwtl
sbb
adc
insl
bound
inc
or
push
jo
cmc
sub
cmp
clc
push
jmp
in
pusha
or
arpl
sarl
xchg
pop
adc
or
ds
lcall
sbbb
addr16
into
push
pop
pop
lret
mov
push
imul
fstpt
rdtsc
cmp
mov
rclb
push
je
xchg
repnz
mov
int
pop
mov
xor
imul
sarl
jmp
aas
sbb
adc
pop
xchg
and
rclb
xchg
jnp
lea
xchg
jg
xlat
pop
dec
cmp
bound
jmp
mov
leave
stc
inc
adc
mov
dec
cs
sub
push
orb
sub
stos
mov
mov
pop
fsubr
stos
mov
data16
data16
xchg
mov
scas
stos
dec
out
loope
cmpsb
in
out
or
cmp
jnp
or
lock
test
adc
or
jno
jbe
push
mov
dec
test
sbb
scas
insb
fnstcw
push
andl
lods
arpl
pop
dec
subl
xchg
ret
sbb
mov
inc
aaa
nop
inc
out
cmp
inc
xchg
sbb
jno
jb
and
int
cwtl
dec
int
cs
arpl
xor
lret
fadds
out
push
xchg
adc
out
inc
mov
clc
add
fs
lahf
pop
inc
fsubrs
lock
scas
fwait
imul
je
xor
jp
inc
mov
sbb
imul
mov
inc
add
mov
xor
nop
decb
sub
sub
xchg
pop
sub
inc
xor
push
sbb
pop
fistpl
dec
les
pop
les
xor
sbb
adc
jb
arpl
jns
sbb
or
xchg
rcrl
jmp
loope
xchg
dec
fildl
xlat
push
lcall
es
xor
repz
out
lods
movsl
out
dec
fisttpl
adc
lahf
sti
sbb
jge
stos
fcompl
nop
inc
mov
jecxz
insl
xchg
lds
push
cmp
mov
cs
ret
add
fs
les
xchg
cwtl
repz
dec
outsl
jp
bound
pop
decb
scas
int
in
pop
in
or
lods
mov
jns
pushf
mov
pop
ficoms
lds
jb
stc
pop
jb
cltd
jmp
xlat
sahf
xlat
out
fmull
ret
in
movsb
or
arpl
fsubs
pop
and
push
add
adc
loop
sbb
mov
rorl
mov
push
mov
or
jg
mov
adc
out
xchg
daa
and
out
and
xor
add
dec
xchg
sti
add
or
mov
jmp
xchg
loop
scas
bound
aas
jg
popf
mov
xchg
pop
pop
add
mov
sarb
out
mov
loopne
mov
push
popf
dec
stc
dec
fs
fucomip
int
scas
pusha
xchg
cmc
push
movsb
sub
int3
cli
in
decb
push
jae
mov
stos
lock
push
mov
mov
add
pusha
int3
dec
data16
popa
gs
loopne
mov
push
daa
popa
sub
shl
leave
and
dec
sub
fcompl
loop
jmp
mov
jne
bound
insl
pusha
xchg
fcomip
push
outsl
xor
shll
das
dec
andl
sbb
inc
push
mov
loopne
pop
jne
fstps
push
jg
fistpl
es
inc
pop
adc
repnz
cmp
fcoms
mov
mov
push
shll
mov
lahf
mov
cmp
arpl
fidivrl
in
and
adc
in
dec
xchg
push
std
inc
arpl
sbb
mov
loopne
ja
out
lods
pand
out
pop
dec
popf
xchg
or
jecxz
cld
cmp
hlt
dec
cmp
mov
add
xor
xchg
sub
movsl
xchg
or
add
insb
out
in
sub
dec
jl
stos
pop
nop
mov
cwtl
jp
xlat
stc
and
xchg
jno
fbstp
and
fistpll
jl
pop
movsl
popf
adc
ljmp
sub
push
in
movsl
scas
and
shr
mov
test
fwait
lods
jl
movsl
and
xor
out
xor
cmp
pop
movsb
lahf
rol
in
data16
dec
adc
cmp
sti
test
mov
icebp
adc
sbb
iret
mov
test
jle
xchg
incl
fwait
and
fwait
out
lea
cmp
aam
scas
adc
pushf
clc
pop
leave
cmp
cwtl
ret
cmp
add
enter
jle
cltd
cmp
adc
mov
ss
hlt
adc
xchg
push
pop
add
jnp
lods
cmp
shrl
push
cmp
loope
outsl
repnz
inc
push
ljmp
stos
cmp
and
out
or
rcll
sti
ds
fstps
aas
mov
lahf
adc
dec
or
pop
jb
cmp
adc
aad
sahf
lds
cmpl
cmpsb
shrl
fs
cmp
add
push
inc
aam
mov
mov
push
rclb
leave
cwtl
cmpsl
xchg
jns
and
jmp
rcrb
mov
xor
aad
int3
push
sub
pop
push
ss
add
bnd
cs
push
cmovge
dec
push
testb
mov
cmpsl
jns
cmp
jo
inc
cwtl
ret
in
das
fmull
jle
fisttpl
imul
imul
fdivr
sub
pop
scas
test
and
and
jp
sub
lock
int
adc
or
push
or
jnp
fwait
andb
xlat
adc
sbb
pop
cs
mov
int
test
subl
aam
xchg
dec
cmpsb
sub
pop
jns
int
imul
mov
cs
mov
mov
hlt
dec
stos
ljmp
add
mov
mov
sub
fcmovb
push
jle
mov
insb
xchg
mov
outsb
mov
cmc
mov
cmp
dec
mov
cmp
fwait
adc
push
cmp
sub
cltd
mov
sbb
shrl
test
insb
jle
cld
inc
lcall
dec
fnstenv
out
xchg
sbb
neg
lds
nop
insl
sbb
mov
jns
pusha
and
dec
icebp
ffreep
cmpsl
lods
adc
mov
pop
sbb
or
mov
inc
out
repz
dec
rcr
sbbl
ret
subl
and
cmpsb
sbb
pop
push
das
mov
push
movsb
addr16
lock
insb
xchg
outsb
jbe
fidivrs
jecxz
pop
jne
out
es
sbb
insb
inc
cmp
xchg
je
xchg
ret
gs
adc
mov
pop
and
jb
movsb
rorb
ja
xor
xchg
test
js
stos
inc
je
and
cmpsb
ss
loopne
aas
dec
loope
inc
jg
decl
mov
inc
movsl
and
insl
adc
jg
mov
int3
mov
dec
xchg
in
and
inc
push
lret
add
je
sub
mov
sti
mull
in
xor
inc
push
dec
cwtl
and
out
inc
cmpsl
mov
sbb
xor
sub
popa
inc
add
jmp
popl
adc
jno
sbb
pop
lods
outsl
or
xor
push
fiaddl
ror
pop
cmp
xor
cmp
int3
jecxz
jmp
sub
adc
ficompl
adc
jp
or
faddl
adc
push
notl
out
inc
out
iret
rcll
call
and
test
or
rcll
insb
push
adc
adc
xchg
jecxz
lret
jbe
push
cltd
pop
sbb
loope
mov
cli
aam
std
ja
or
fidivs
pusha
sub
lcall
in
addr16
inc
jns
or
cli
mov
add
enter
add
pop
jo
pop
xchg
jno
inc
ret
mov
mov
insb
leave
bound
mov
push
repz
insl
cmpsb
leave
aam
mov
cs
or
or
fmull
push
testb
mov
or
pop
xor
push
or
jg
test
popf
sbb
push
push
leave
and
fucomi
subb
and
cmp
ficompl
clc
rcl
dec
dec
nop
test
ljmp
xchg
lcall
sub
stc
adc
cmpsl
ja
add
testl
mov
rcrb
mov
dec
pop
popa
xor
mov
xchg
test
ret
jp
lock
int
loopne
mov
or
jp
repz
cli
out
mov
fnstenv
xchg
out
in
push
paddq
cmpb
sbb
cwtl
add
sbb
enter
outsb
jge
fisubrs
mov
push
jne
test
fidivrs
lahf
push
jp
sub
and
xchg
nop
mov
cli
fidivs
or
ljmp
jb
jge
or
ret
test
dec
ds
xlat
dec
iret
push
xor
stos
jbe
jp
rcrb
sub
daa
sahf
jno
cmp
mov
xchg
push
fs
pop
lret
sub
push
push
push
sub
sbb
jno
popf
mov
xor
fwait
push
in
imul
in
outsl
adc
or
mov
fisubrl
aad
sub
sbbb
repz
dec
push
stc
mov
je
ror
imul
gs
paddusw
dec
mov
push
icebp
insl
dec
and
orl
clc
and
je
xor
fstl
imulb
fimull
inc
jns
sbb
lods
movsl
popa
cltd
mov
adc
dec
cmp
mov
push
cmp
mov
cwtl
sti
mov
adc
dec
xchg
ret
jns,pn
clc
push
and
jle
cmp
call
popa
cmp
and
jno
pop
std
test
loopne
xchg
mov
or
daa
shlb
and
add
or
loop
xchg
mov
lret
test
shrb
loop
add
cmp
shrl
jns
add
fdivs
ds
jl
add
pop
sahf
fildll
fincstp
inc
sub
loop
mov
sbb
sub
and
lret
push
std
in
loopne
imul
imul
mov
movl
sbbl
cltd
stos
mov
pop
aam
xor
jne
dec
clc
stos
scas
sub
ljmp
out
jmp
mov
lret
push
push
jae
push
xor
js
dec
mov
jmp
sub
std
jge
jp
int
push
std
add
xor
movsl
xor
mov
sub
xacquire
inc
or
mov
cld
mov
and
mov
repz
inc
mov
add
and
jbe
dec
fs
xchg
push
mov
dec
mov
aas
hlt
xor
and
and
jg
mov
fsubrs
lret
subl
cmpsl
imul
negl
fiaddl
cmc
fbld
cmp
mov
jp
mov
jns
shll
aad
mov
sar
mov
addr16
jns
cwtl
movsb
add
fcmovnb
or
mov
mov
xor
inc
pop
sub
mov
ja
mov
xchg
pop
idivb
outsl
aas
pop
sub
aad
imul
push
scas
add
hlt
fucomi
imul
aad
mov
cld
dec
pop
jno
sbb
jecxz
popf
sti
or
mov
lcall
add
jb
cmp
loope
fistl
lds
push
and
insb
stos
mov
scas
mov
adc
xchg
jmp
data16
orb
lods
push
fldt
sub
pop
sbbb
out
push
sbb
mov
clc
leave
adc
hlt
movsb
ljmp
dec
jns
mov
out
lahf
insb
xor
mov
mov
inc
cmp
mov
mov
push
adc
cmp
sti
arpl
jle
jge
sub
dec
add
xor
push
inc
mov
push
lahf
leave
lea
push
adc
lahf
fisttpll
xor
inc
ficomps
jb
daa
xor
push
jmp
jecxz
mov
jne
loope
pop
jmp
notl
sbb
add
jmp
subb
repnz
and
dec
lret
out
outsl
shl
cmc
lds
push
icebp
inc
xchg
insb
je
jbe
sbb
inc
pop
dec
sbb
add
mov
mov
or
add
mov
lods
pop
cmpsl
xchg
test
aaa
jmp
dec
jl
jecxz
mov
dec
gs
imul
jmp
mov
pop
ret
stos
ss
adc
xchg
in
mov
andb
aad
fucomip
les
stos
inc
push
jbe
push
fildll
xor
cmp
das
add
mov
test
popf
fs
mov
sub
mov
xchg
mov
stos
cwtl
jge
cmp
cmp
iret
in
not
stos
and
inc
out
int
mov
xchg
call
add
das
repz
sub
mov
shrl
cmp
movsb
imul
jo
loopne
sbb
icebp
nop
popf
cmp
stc
rcll
lret
mov
arpl
fistpll
mov
pusha
es
sub
into
js
std
dec
add
aaa
pop
lea
popa
dec
les
loop
cmp
aam
daa
lods
out
insb
iret
pusha
adc
push
dec
insl
mov
push
mov
push
push
jns
xor
ljmp
fsubrs
adc
subb
push
push
sbb
adc
gs
outsl
mov
mov
xchg
mov
fcmovbe
jge
xchg
push
inc
mov
repz
dec
xchg
jl
xor
jg
inc
adc
dec
mov
jl
popl
ss
cmc
cmp
xchg
stc
mov
int
sbb
and
ljmp
adc
jecxz
mov
jnp
sbb
clc
sub
scas
ret
xlat
jb
inc
outsl
adc
push
adcb
addr16
add
ss
out
sub
pop
test
add
mov
pop
cmc
jle
sub
insl
cmp
xchg
fmul
xchg
sahf
xchg
mov
mov
pusha
mov
test
add
test
repnz
test
popf
lock
dec
dec
gs
ljmp
push
into
cmpl
test
mov
stc
adc
lcall
sti
jl
arpl
fsubrl
and
popf
add
fwait
or
test
jo
jb
add
mov
push
push
aas
addr16
fimull
push
pusha
mov
push
xlat
rolb
or
leave
mov
fldl
rolb
shr
fiaddl
cmp
inc
hlt
mov
adc
adc
jecxz
into
xchg
sbb
fwait
dec
or
xchg
sbb
iret
cwtl
sbb
jno
dec
fiadds
icebp
fwait
inc
ret
jge
dec
jmp
dec
xchg
xchg
inc
xchg
dec
dec
xor
rorl
mov
mov
gs
hlt
outsl
push
into
sub
push
negb
sahf
rorl
push
jnp
sub
in
in
nop
jmp
aaa
cwtl
arpl
push
mov
sbbb
pop
dec
pop
pop
repz
add
data16
and
pop
adc
adc
es
sbb
xor
push
lds
shrb
and
ret
in
dec
inc
dec
sbb
cs
sbb
jne
ss
inc
int
fsubl
cmp
andb
inc
adc
inc
sub
mov
jae
sub
mov
cwtl
cmp
pop
xchg
insl
in
inc
adc
jns
lret
mov
hlt
cmp
mov
and
loope
mov
sbb
mov
add
jo
in
mov
hlt
or
shll
xor
sub
pop
imul
jmp
add
sbb
data16
or
ljmp
add
push
aaa
mov
roll
lret
jbe
nop
pop
stc
jo
shll
mov
and
in
les
xor
ror
xchg
leave
insl
fcompl
testb
dec
dec
cs
popa
out
jge
mov
aam
inc
add
pop
pop
add
sbb
stos
sub
jo
push
inc
xor
out
pushf
loopne
imull
ret
mov
ret
test
sbb
into
sub
outsb
sbb
fidivs
out
pop
push
dec
cmp
in
mov
pop
notb
xor
add
in
aam
bound
jge
jb
out
stos
lcall
mov
mov
xchg
pop
or
inc
inc
sahf
movsb
sbb
add
lret
sub
imul
push
sub
scas
xchg
push
lea
rclb
add
push
cmp
repz
add
shll
inc
es
insl
jp
ss
xor
push
pop
pop
jp
outsb
mov
inc
adc
mov
mov
ret
out
out
mov
mov
cmp
outsl
movsb
shlb
add
xor
push
mov
dec
dec
call
outsl
push
mov
jmp
ljmp
sbb
or
mov
lret
jle
inc
mov
rclb
xchg
mov
sbb
or
popf
pop
or
add
outsb
dec
mov
or
mov
std
adc
leave
rol
cs
lods
std
dec
in
mov
mov
int3
movsl
mov
xchg
addb
ja
dec
sbb
and
pop
add
xor
sti
mov
clc
xor
pop
push
sbb
xchg
loopne
mov
inc
adc
test
andb
mov
out
xchg
rcrb
popa
into
sbb
dec
test
dec
sbb
pop
push
jnp
test
stos
sbb
cmp
dec
inc
popa
sarl
in
fs
movsl
fwait
leavew
dec
cld
pop
xor
test
mov
mov
orb
pop
shrb
fbld
jmp
sub
inc
push
jnp
or
pop
loop
sbb
pop
loopne
mulb
lds
lcall
cmp
xor
mov
sub
int
jns
mov
mov
lret
add
push
dec
pop
xchg
into
cmpsb
inc
mov
xor
cmpsb
movsl
orl
xchg
pushf
push
sti
xchg
nop
enter
out
scas
lods
popa
sbb
cmp
sub
mov
push
pusha
inc
in
roll
imul
cwtl
pop
push
loop
jno
pop
fisubrs
into
xchg
pop
push
das
jp
pushf
fsts
movsl
aas
and
mov
mov
mov
imul
sbb
bound
stc
pusha
aam
lret
xchg
sarb
xor
or
mov
add
popf
cli
out
push
xchg
in
shlb
pop
mov
xchg
mov
insl
xor
push
and
pusha
mov
subb
out
jae
push
xchg
push
fdivl
pop
mov
inc
push
mov
repnz
mov
outsb
test
imul
xchg
inc
dec
mov
xor
insl
lock
hlt
sbb
fstpt
out
adc
mov
or
cmp
and
cli
call
cmp
cltd
sbb
lods
fwait
xchg
hlt
xor
mov
cwtl
fsts
adc
ret
leave
pop
fcmove
sub
hlt
or
rorl
shll
jne
or
loope
sbb
aas
fstpt
popa
sub
adc
xchg
inc
popf
inc
push
xlat
negl
lods
stc
or
dec
or
and
jnp
outsb
push
adc
sbb
jecxz
sub
mov
push
sub
js
push
pop
in
and
jbe
and
xchg
in
loop
xchg
rcrl
push
in
imul
lcallw
xor
bound
and
imul
shll
and
movsb
ljmp
pop
xlat
pop
mov
pop
dec
in
adc
stos
cmp
jae
rolb
lods
add
addr16
cmp
test
ja
and
pop
mov
cwtl
push
mov
outsl
fsubp
adc
out
and
mov
mov
dec
fbstp
dec
ret
xchg
xchg
test
out
imul
dec
jnp
fisubl
popa
je
cmc
inc
push
dec
sbb
mov
fistpl
movsl
lds
aas
test
shrb
xor
dec
lcall
xor
imul
imul
xchg
sti
aad
push
mov
rcll
jae
shl
mov
or
clc
in
in
mov
jecxz
pop
idivl
orl
pusha
in
int
pop
cmp
cltd
xor
add
and
jnp
dec
bswap
lods
or
addr16
aaa
push
lds
inc
cmp
jecxz
movsb
push
mov
ljmp
data16
call
lcall
xor
jge
mov
push
cmpsl
pop
call
repnz
or
push
sbb
mov
std
sbb
and
lret
cld
out
imul
test
mov
dec
xchg
jae
adc
ds
das
sub
call
cltd
cmpsl
inc
xor
clc
adc
loope
push
mov
outsb
enter
dec
push
repz
inc
fbld
arpl
in
inc
push
jmp
lea
arpl
xchg
rcll
adc
bound
dec
inc
pushf
xchg
mov
loope
lcall
fsin
and
mov
mov
push
out
outsb
in
cli
imul
movsl
push
sahf
dec
add
vmovaps
lods
pop
jb
xchg
xchg
push
push
in
dec
cmc
or
pop
mov
ret
sti
arpl
xor
les
lret
fdivr
int3
sub
jo
outsl
adc
cmc
push
enter
gs
pop
push
lods
xor
mov
loopw
testl
or
pop
ret
add
mov
bound
cmp
lahf
je
xchg
mov
shlb
aas
add
mov
mov
clc
dec
xchg
jnp
popa
xchg
pop
cmp
jns
fcoms
paddb
ja
mov
aam
jne
mov
add
inc
push
and
mov
jp
pop
push
shlb
cltd
and
sub
and
xchg
pop
jp
icebp
in
out
les
hlt
pushf
fnsave
mov
mov
mov
add
and
inc
in
loop
or
xor
inc
xchg
fadds
into
stos
mov
movsb
mov
jno
push
nop
jns
data16
shrl
pop
popf
icebp
sahf
sbb
rcr
fnstenv
shlb
nop
stc
lea
sarb
fsubl
sub
lret
sub
pop
push
xchg
pop
in
jnp
xor
jae
adc
pop
mov
pop
pop
stos
adc
push
sbb
jmp
xlat
mov
add
les
xlat
cld
inc
ss
loope
mov
sbb
inc
insl
pop
in
adc
popf
and
mov
mov
cwtl
mov
sub
inc
insl
mov
rclb
jg
or
stos
daa
xor
push
movsl
dec
sbb
lock
mov
mov
inc
scas
cmp
loopne
fsubrl
add
sub
push
pop
fstpt
or
dec
cs
fdiv
outsl
testb
in
sahf
std
movsl
jle
push
jb
mov
push
fnstsw
push
add
sbb
add
outsl
dec
mov
es
xchg
dec
rorb
inc
test
test
jp
xlat
sub
inc
sti
fmuls
add
sub
in
jmp
adc
mov
jp
ds
sbb
sbb
outsl
push
pop
dec
stos
mov
adc
hlt
jne
scas
insb
and
out
leave
fwait
roll
xchg
enter
arpl
lock
mov
and
js
leave
lahf
jae
ror
into
lods
jl
mov
xchg
mov
cmp
dec
dec
cmpps
lcall
or
pop
dec
and
or
xchg
enter
jp
mov
mov
mov
roll
sbb
arpl
sub
mull
mov
jmp
dec
cli
rol
mov
idivl
inc
adcl
scas
or
call
loop
push
mov
adc
out
jmp
jl
out
das
cmp
je
and
test
pop
or
sub
in
xor
pushf
xchg
jp
ret
and
mov
jp
add
fs
je
adc
push
out
je
sub
pop
adc
xchg
cld
popf
dec
jp
dec
mov
outsb
inc
pop
pop
cld
lds
push
fnsave
dec
lea
std
jp
mov
add
aas
dec
leave
dec
shrb
push
shrb
div
mov
add
xor
push
pop
sbb
incl
imul
aad
sbb
pushf
xchg
int
pusha
daa
int3
xor
add
push
xchg
cmc
and
fcoms
test
xor
ficoms
leave
inc
adc
inc
lea
sub
scas
les
clc
xor
pop
push
mov
cmpl
dec
filds
ss
push
push
push
fdivrl
push
mov
xor
mov
int3
rcrb
cmove
add
jl
shll
jo
in
das
or
ss
psrlq
mov
movsl
jecxz
mov
sub
add
cmpsl
test
push
ds
repz
push
subl
xchg
gs
lods
mov
adc
xchg
xor
pop
popf
push
cli
call
xor
adc
fildll
movsb
or
into
movsb
pop
lods
xchg
jne
jnp
pop
cmp
jnp
adcb
add
scas
jecxz
or
cmp
ljmp
fwait
test
jp
shrl
jns
arpl
fcmove
jle
out
pop
lods
sub
cmp
movsl
push
adc
cs
cmp
xor
test
stos
push
dec
jbe
xchg
cmpsb
xor
sub
mov
mov
or
int
jge
inc
mov
insb
mov
sbb
sti
cmp
push
push
xor
sarb
pop
je
in
cmp
roll
fistpl
fisttpl
insb
inc
repz
fwait
out
push
jae
loope
xor
xchg
insb
popf
mov
shll
mov
sub
pop
roll
and
leave
dec
mov
jg
mov
lea
and
sbb
lds
push
int
cmpsl
jmp
pop
jle
loopne
hlt
lahf
mov
fstpl
mov
push
jbe
mov
out
gs
xchg
std
mov
aas
in
cmpsl
xor
idivb
rorl
stos
mov
das
arpl
mov
mov
std
jns
arpl
jbe,pn
push
add
mov
rcrb
iret
mov
loopne
xor
test
pop
sbb
cltd
int
cmp
add
das
ljmp
hlt
std
and
pusha
repz
test
aaa
xor
adcl
and
dec
mov
mov
jge
into
mov
and
into
or
mov
push
xor
mov
jne
mov
mov
pop
in
fbld
adc
outsl
inc
jno
icebp
xchg
jl
jns
out
mov
or
jmp
dec
addr16
insb
jle
out
xor
dec
jge
loopne
outsb
es
add
inc
imul
ficomps
icebp
pusha
sbb
and
push
shll
divb
fsubrl
add
stos
out
mov
jle
je
inc
mov
test
jo
pushf
adc
out
inc
sbb
cwtl
dec
mov
mov
popa
xorl
movsl
test
repnz
mov
stos
pop
xchg
rcll
mov
adc
mov
test
out
xchg
xchg
out
dec
mov
faddl
dec
das
lret
popa
mov
fisttpl
jne
adc
aaa
inc
mov
xchg
test
xchg
xchg
scas
sbb
push
push
insl
mul
add
ret
int
mov
out
and
ficomps
dec
or
in
xchg
mov
bound
jmp
pushf
test
mov
outsl
xchg
test
bound
dec
ja
sub
loopne
lods
mov
and
add
imul
jecxz
sbb
cld
and
xor
sbb
or
cmpsb
daa
push
leave
into
and
arpl
xchg
jg
pusha
inc
inc
dec
xor
push
pop
gs
add
xchg
inc
mov
mov
jle
mov
mov
inc
adc
xor
xchg
orl
lods
popf
lock
iret
jge
enter
repz
sub
push
or
jge
cmp
dec
arpl
lock
sar
in
movsl
sub
lret
insl
aas
pushf
xor
mov
or
pop
mov
xor
jl
jno
sbb
cmpsl
push
mov
movb
lea
jg
mov
in
jno
test
mov
mov
outsl
fcomps
lods
jge
jge
sarl
pop
in
xchg
loop
ret
out
mov
push
div
cmp
mov
cmp
loopne
push
cwtl
les
test
xchg
test
enter
xchg
xor
cmp
mov
add
ds
sti
pop
ret
jmp
mov
mov
test
pusha
xchg
ret
mov
jmp
push
fdivrs
and
adc
xchg
lret
pop
mov
mov
pop
rolb
fucomp
push
push
add
and
inc
xchg
xchg
ret
test
jp
enter
fcoms
sub
out
xchg
inc
mov
push
adc
adc
in
sbb
pop
sahf
fs
adc
jecxz
hlt
xor
jg
jbe
popf
sbb
adc
inc
inc
sub
mov
pop
jp
sahf
push
jne
pop
mov
dec
push
xchg
pushf
clc
dec
jle
pop
push
mov
jne
in
mov
stos
add
jg
out
or
and
cmp
daa
cltd
mov
mov
xchg
dec
mov
stos
ljmp
mov
add
jne
mov
ja
leave
pop
ret
jno
push
jg
sub
movups
aaa
sar
jae
mov
decl
sub
push
sub
jle
je
insb
add
dec
dec
xchg
add
xor
cmc
mov
loopne
std
jb
cmc
cld
cwtl
pop
mov
cli
rcrb
mov
mov
movsl
mov
mov
out
arpl
or
hlt
stc
mov
dec
jp
repnz
hlt
push
stc
xchg
in
scas
cmpsl
add
mov
icebp
sbb
and
and
mov
inc
xchg
add
fldcw
lock
xchg
mov
call
imul
out
rolb
mov
dec
xchg
push
sarl
push
imul
xchg
scas
xchg
pusha
fnsave
cmpb
jge
xchg
mov
cmp
std
rorl
test
lcall
lret
test
pop
into
clc
loopne
xor
sti
mov
sbb
rol
mov
shll
jns
fistpl
push
popf
push
popf
dec
int3
mov
jae
pop
leave
adc
mov
stos
cli
popa
insb
xchg
add
mov
jecxz
cmpl
jns
xchg
insb
sub
clc
sub
add
adc
aad
adc
repz
dec
sti
or
int3
enter
xor
push
cli
sub
sub
and
aad
or
sti
or
popf
dec
pop
stos
mov
loopne
pop
xchg
inc
mov
xor
fdivrs
sub
shrl
mov
in
add
insb
jae
add
out
js
sub
push
fimull
mov
sarb
pop
adcl
adcb
test
push
lock
push
pop
mov
loopne
push
nop
xor
out
das
add
pop
sbb
add
bound
movsb
push
pop
pop
jmp
daa
pop
push
dec
insl
add
stos
in
mov
and
mov
call
enter
aas
cmp
enter
inc
cmp
cmp
cmp
stc
push
push
imul
in
inc
faddl
xchg
cmpsl
jmp
dec
mov
dec
dec
sarl
loopne
adc
jge
into
xor
push
scas
and
cmpsb
popf
add
push
mov
xchg
dec
mov
dec
or
out
mov
add
call
ss
mov
gs
jge
fnstcw
xorl
cmp
push
mov
retw
loopne
lret
repnz
int
adc
call
add
cld
pop
jb
jo
lock
xor
pusha
testl
popf
or
pushf
inc
xor
xchg
mov
in
clc
cmp
sbb
cmp
inc
aad
mov
sbb
pop
pop
test
push
out
aam
mov
ret
out
aaa
bound
fcompl
mov
push
stc
jp
ret
jecxz
dec
scas
push
ret
jle
fdivl
jmp
lods
js
adc
pushf
and
push
push
mov
jbe
pop
adc
adc
sub
shrb
fldln2
rol
in
fmuls
mul
dec
mov
test
jbe
mov
scas
or
in
nop
and
mov
push
xchg
addl
push
into
hlt
in
sub
mov
pushf
jns
mulb
test
lcall
jg
cmpsb
icebp
adc
sahf
xchg
aaa
jae
test
or
stos
mov
mov
aam
das
icebp
xchg
lret
adc
orb
cmp
dec
xchg
mov
stos
xchg
shlb
mov
int3
dec
mov
push
loopne
cs
jmp
sbb
movsb
push
push
cmpl
add
xor
and
inc
scas
and
xchg
push
out
js
or
push
mov
mov
inc
bnd
xchg
inc
test
push
inc
push
movsb
shrl
cmp
scas
shrl
or
gs
or
adcb
dec
out
xchg
mov
ja
adc
sub
xor
int3
mov
aam
les
pop
xchg
js
shl
insl
add
xor
fbld
sahf
ret
or
dec
into
add
or
sub
cmp
mov
cmpsl
push
lock
test
push
push
xlat
cmp
jmp
paddb
repnz
sub
data16
sub
push
mov
hlt
add
hlt
add
xor
mov
jne
das
adc
lds
sub
fsubp
pop
inc
push
mov
mov
adc
mov
pop
imul
mov
daa
jbe
xchg
jbe
ret
pop
jmp
dec
popf
lret
ficomps
in
lods
jne
push
push
ds
pushf
inc
xor
and
sub
movb
in
in
aaa
sbb
paddb
add
adc
fnsave
mov
int
inc
push
push
xor
fldl2t
dec
stc
shll
cltd
jmp
in
popf
dec
imul
push
mov
aas
sub
xor
mov
sbb
cmp
mov
fdivrs
addr16
push
data16
fistpll
mov
cwtl
lret
jecxz
sbb
push
cmp
xchg
nop
in
adc
int
in
fldcw
shlb
push
scas
mov
sbb
addr16
jp
ret
fnsave
fistl
mov
inc
mov
ret
in
imul
push
jl
sbb
lret
test
cmp
mov
jl
dec
shll
sbb
inc
insb
cmp
iret
add
push
ret
inc
mov
insb
jmp
jge
mov
vmread
sbb
pop
add
lahf
mov
adc
out
das
pop
xchg
icebp
dec
pop
push
fimull
pop
mov
addl
inc
sti
push
mov
test
stos
fwait
pop
cli
in
mov
add
in
in
sti
fistl
scas
fs
inc
int
dec
xchg
cmp
inc
xor
insl
mov
ds
sbb
jp
loopne
sub
adc
loop
out
inc
in
jle
cmp
sub
mov
dec
push
mov
adc
stos
lret
jb
in
ja
jl
inc
shlb
popa
xchg
push
jl
stos
mov
sbb
frstor
mov
xchg
sahf
movsb
jg
fnstcw
testb
lahf
scas
ret
ficompl
push
push
pop
cltd
jnp
das
es
orb
push
popf
imul
mov
shlb
ret
sti
scas
mov
in
inc
xchg
hlt
mov
add
in
pop
mov
mov
call
push
sub
dec
mov
clc
lock
or
pop
xchg
and
sbb
mov
movl
sbb
aam
into
or
ret
imul
mov
fmull
sbbl
jbe
mov
and
in
sbb
jecxz
loope
in
inc
adc
or
cmpxchg
es
jno
push
jae
mov
add
dec
fisubrs
movsb
lods
mov
xchg
sbb
or
fcomip
or
icebp
outsl
ficoml
jns
add
sub
pop
shll
or
and
fildll
xor
leave
out
xor
je
pop
jb
pusha
xor
or
sbb
inc
adc
sub
sub
sub
pop
subb
inc
inc
fisubl
inc
xchg
out
xorb
xchg
aas
aam
jg
adc
inc
loop
jne
pop
cmp
sub
sbb
popf
cvttps2pi
outsb
or
cmpsl
or
or
fadd
mov
repz
jae
mov
mov
out
dec
shl
ja
es
cli
out
pusha
xor
xor
stos
fiadds
adc
lods
jae
mov
jae
ljmp
insl
movsb
sbb
mov
inc
pusha
inc
and
subl
pushf
and
xor
adc
pop
stc
inc
idivb
outsl
icebp
mov
and
mov
mov
sbb
lahf
int
orb
sti
jns
mov
mov
ds
and
add
xor
push
lods
cmpsb
mov
daa
add
sub
cli
sub
push
cs
mov
lahf
jle
inc
fdivs
fimuls
orb
cmp
jb
mov
xchg
fidivrs
loop
fnclex
cmpsb
xor
jne
push
mov
xchg
xor
repnz
or
add
les
mov
cmp
cmp
jb
sarl
addb
push
xchg
das
aaa
dec
mov
adc
dec
das
add
sbb
cmp
sahf
pop
shll
and
dec
imul
push
les
mov
cs
aaa
xchg
incb
mov
test
xor
hlt
in
std
xor
add
cltd
xor
in
into
faddl
mov
daa
cli
xor
lea
xchg
xor
lret
pop
push
je
jle
jg
arpl
mov
mov
xchg
lahf
mov
mov
popa
ficompl
push
sbb
pop
iret
add
mov
cs
push
lods
jbe
pop
jge
ret
lods
fstps
xchg
mov
push
xchg
cld
sti
pushf
sub
int
mov
call
cltd
clc
inc
je
lods
and
in
xor
imulb
ud2
je
scas
sub
lea
repz
insb
jg
xorl
rclb
sub
push
int
cmp
mov
mov
mov
dec
or
ss
test
scas
loopne
mov
lret
js
je
cmp
in
adc
mov
rorb
rclb
or
mov
add
arpl
dec
repnz
insl
mov
mov
push
js
xor
mov
ret
mov
dec
push
jnp
jno
or
pop
shr
icebp
ds
scas
inc
pusha
test
mov
adc
in
scas
sub
pop
mov
and
imul
in
mov
cld
pop
stos
pop
cmp
dec
jnp
loopne
xor
jmp
lret
icebp
shrl
repz
popa
mov
sbb
cltd
mov
loope
xchg
sbb
ja
clc
and
mov
sbb
mov
and
push
test
std
arpl
negb
mov
aas
orl
sbb
imul
out
outsl
into
mov
sub
mov
loope
xor
jg
stos
flds
enter
subl
imul
stos
mov
leave
pop
and
pop
ss
push
dec
js
es
mov
xor
dec
inc
mov
jmp
es
mov
movsl
stc
mov
fisubrl
lea
mov
insl
mov
mov
cmpsb
fldenv
ret
mov
inc
mov
scas
pop
dec
jae
mov
or
loopne
scas
push
lret
mov
pop
mov
or
mov
mov
cli
and
outsl
mov
in
mov
dec
ret
aas
lcall
jecxz
and
inc
pop
leave
sub
adc
ret
add
stos
sbb
push
dec
bound
mov
movsb
add
xchg
lret
xor
sbb
stos
dec
jp
sub
in
fstpt
mov
xchg
or
push
cld
jae
cld
out
mov
into
jge
dec
gs
repnz
or
sub
add
imul
scas
in
cwtl
insl
adc
and
push
cmc
cli
sub
leave
pop
lret
cmp
arpl
jno
scas
dec
jg
dec
sbb
das
dec
int
mov
pop
addl
out
mov
add
aaa
pop
and
dec
das
mov
fdivr
sub
push
push
push
jnp
hlt
imul
push
lret
sub
jl
jle
xorl
in
lahf
sahf
and
jl
icebp
out
gs
sub
cmpsl
push
push
add
jp
into
sub
aaa
pusha
lcall
int
xor
sbb
dec
loope
sub
stos
fcoml
sbb
in
shrb
jns
inc
in
movsb
xor
xchg
hlt
mov
mov
clc
add
cmp
pop
xor
add
add
jmp
inc
les
cmp
inc
nop
sbb
lea
outsl
sbb
data16
mov
xor
daa
arpl
loopne
adc
popa
mov
inc
addr16
xchg
inc
xchg
cmpsb
leave
mov
dec
ja
rorb
add
icebp
stos
sbb
dec
inc
rcl
call
jo
divb
sub
adc
jp
in
and
adc
sbb
xchg
movsb
dec
mov
push
clc
fcompl
outsl
test
sub
dec
mov
arpl
mov
mov
sub
inc
es
fistps
and
sti
fst
jle
jg
loop
sbb
push
jne
add
or
sbb
pop
aaa
xor
cmp
test
push
std
in
adc
and
jno
add
xor
and
int
ds
adc
xor
pop
add
ret
lock
fcoms
or
and
repz
jg
int
mov
lahf
mov
inc
adc
icebp
std
or
jmp
ret
imul
pop
imul
pop
loop
xchg
into
repnz
test
movsb
ret
out
pop
xor
adc
jp
fdivl
cmp
xor
dec
xchg
dec
mov
mov
das
and
jb
mov
inc
fsubrl
xchg
push
out
roll
inc
mov
sbb
sub
mov
dec
daa
mov
clc
pop
sub
xor
filds
rcl
and
daa
pop
or
pop
jb
test
test
stc
xor
sub
push
in
xchg
cmp
jne
mov
push
push
dec
mov
jae
sbb
mov
cmp
dec
jmp
imul
ja
and
lret
sbb
scas
or
xor
pop
outsl
out
outsl
add
fucomi
push
jne
jl
ret
adc
test
or
push
pop
or
and
dec
aam
mov
push
fcmovne
xor
int3
push
ret
xchg
add
shlb
jg
aaa
sub
mov
ffreep
insb
push
add
repz
lahf
jnp,pn
ret
loope
cmp
xchg
push
out
mov
arpl
inc
das
into
mov
inc
push
mov
lods
push
pop
sti
lods
mov
fcmovbe
inc
dec
mov
cs
pop
mov
filds
adc
and
inc
and
mov
push
insl
jnp
mov
cltd
push
out
rolb
pop
pop
out
adcb
rcr
aam
sti
fidivrl
mov
xor
xor
movsl
rorl
jae
xor
mov
ljmp
hlt
repnz
movsl
mov
sbb
les
or
push
mov
test
scas
jbe
fs
cmpl
inc
int3
lods
cmpb
pop
xor
push
mov
jmp
addr16
pop
fcmovb
xor
ficompl
testb
shrb
or
rolb
cmc
inc
mov
ds
pop
scas
add
xor
or
lret
adc
push
daa
xchg
mov
dec
int3
xor
sbb
mulb
mov
xchg
push
lock
xor
adc
adc
sub
or
les
inc
jp
das
jecxz
daa
pop
mov
cmp
inc
in
or
mov
test
inc
jmp
pop
xor
xchg
into
cmp
aad
stos
inc
cld
sbb
mov
addr16
test
mov
sub
cmp
sub
call
loopne
sbb
pop
sbb
arpl
stos
jmp
out
push
shlb
nop
pop
inc
push
push
mov
sti
insl
adc
out
std
adc
sti
loop
sub
outsl
pop
loop,pt
fwait
int3
out
jnp
sub
icebp
pop
jl
rorl
adc
push
mov
shl
aaa
jmp
sbb
outsb
and
adc
ss
int3
js
add
cmp
inc
dec
mov
xor
jge
int3
xlat
insl
daa
iret
popa
mov
or
or
jmp
pop
repnz
std
decl
out
jp
sar
pushf
push
out
das
xchg
push
cwtl
mov
aas
in
mov
or
mov
jl
test
pop
shlb
fs
jae
mov
push
inc
repnz
andl
mov
leave
push
mov
sbb
rolb
jge
push
add
mov
addr16
negl
mov
pop
dec
loope
add
jmp
sbb
jnp
bound
fdivs
es
test
jmp
scas
add
fisubrl
mov
stos
mov
jbe
ss
xchg
xor
pop
insb
mulb
xor
aad
inc
cmp
and
and
add
and
push
add
jb
gs
sub
dec
in
or
dec
sub
push
jp
test
rcrl
mov
pusha
inc
in
scas
mov
repz
scas
out
jg
ja
out
and
flds
inc
jns
pop
xchg
mov
sub
inc
jo
jp
mov
insl
jecxz
mov
fisubs
scas
mov
leave
mov
xchg
insb
movsb
pop
ret
dec
and
mov
xchg
fmuls
addl
ss
xor
out
in
sbb
stc
andb
nop
aam
int
movsb
dec
push
mov
imul
mov
jl
aad
or
push
add
push
xchg
and
jp
sbb
mov
sub
fcmovnu
sub
push
cmpsb
pusha
pushf
add
fwait
dec
into
cli
xor
notl
lock
addl
outsb
cmpsb
adc
sbb
inc
hlt
popa
cmpsb
mov
push
insl
sarb
push
xlat
inc
popf
xlat
or
shlb
push
or
leave
loope
inc
not
inc
imul
jl
push
mov
je
or
cmp
xchg
sub
stos
test
lret
mov
icebp
ficoml
es
mov
pusha
add
jp
xchg
cli
inc
fbld
pop
pop
test
dec
ss
mov
jnp
sbb
inc
mov
add
jb
mov
test
xchg
cmp
cltd
subl
push
push
js
inc
pop
mov
dec
mov
bound
rorb
aam
out
sti
sbb
xor
mov
lahf
imul
xchg
sarl
dec
push
push
push
fldenv
sbb
test
push
push
lahf
and
gs
pop
mov
incb
mov
adc
sbb
icebp
stos
repnz
jns
not
cmp
das
movsl
jmp
pop
cmp
or
pop
sbbb
mov
dec
fmul
es
lods
push
sbb
xor
and
pop
dec
mov
call
daa
adc
mov
mov
insb
lea
or
inc
movsb
in
mov
sub
lds
int3
insl
pusha
inc
js
jns
add
fdiv
fcmovb
cmp
in
mov
or
adc
xchg
aaa
xchg
push
popa
adc
sub
push
sbbb
and
sbb
pop
movsl
mov
sbb
xor
jne
xchg
dec
sub
cmpsl
mov
mov
push
mov
sbb
repnz
jnp
aaa
lret
sbb
cmp
dec
xor
push
stc
sbb
sbb
lcall
add
loopne
dec
sbb
test
rclb
and
push
push
push
xor
pop
xchg
cmp
loop
jl
nop
add
out
jne
sbb
sub
fadds
add
dec
add
test
or
inc
hlt
mov
inc
xchg
mov
test
mov
test
xor
ss
call
shr
testl
inc
cmp
aad
xor
js
sbbw
scas
repnz
sub
or
push
pusha
dec
stos
scas
out
xor
pop
jge
cltd
sbb
lds
scas
sub
xor
les
int3
fldt
jne
nop
ja
mov
lock
add
pop
fwait
xorb
add
jo
inc
mov
push
add
and
sub
add
sbb
inc
jge
rcrb
or
xor
mov
movsl
fucomi
stos
icebp
sti
bound
test
stos
adc
shrl
mov
push
testl
adc
jg
cmpl
xchg
fbld
lret
dec
jne
rclb
mov
or
ljmp
rorl
add
stc
hlt
jae
dec
xchg
in
adc
adc
xor
dec
push
shlb
xchg
fdivr
inc
fwait
nop
shlb
push
sub
sub
sub
push
push
dec
jnp
or
cwtl
jo
or
bound
jmp
or
adc
pop
sbb
arpl
sahf
push
insl
mov
adc
and
pop
jp
icebp
xchg
and
sub
push
iret
xchg
out
aaa
xchg
mov
pop
adc
xor
add
dec
repz
ret
add
flds
jnp
adcl
loop
or
fists
xchg
movsl
cli
or
jl
jns
loopne
pop
pop
xchg
repz
loopne
iret
sbb
movsl
mov
sub
push
rorb
movsl
ret
mov
cmp
loopne
fistpll
out
sbbl
xor
rolb
cs
sbb
xchg
into
sbb
adc
fadds
xor
lahf
xor
je
les
aam
arpl
pushf
imul
add
and
mov
pop
in
sbbb
pop
mov
add
inc
jb
jl
dec
inc
stc
or
dec
int3
fnsave
inc
cmp
jl
xor
jb,pt
mov
xor
icebp
push
out
or
popf
mov
stos
xchg
add
jge
call
sub
xchg
outsb
add
cmpsl
aad
dec
lahf
and
adc
repz
push
lods
ljmp
dec
ret
aad
addr16
mov
jbe
in
fsubs
jno
jecxz
xchg
or
jno
call
cmpsb
inc
push
mov
into
mov
mov
movsb
push
jg
lds
mov
sub
shll
mov
xchg
xchg
xor
pushf
mov
xchg
xchg
mov
pop
test
jl
loopne
out
outsb
arpl
dec
das
shrl
insb
jle,pt
adc
xor
scas
push
fdivrs
addr16
push
fnstenv
cltd
loope
popa
ror
js
and
test
rcr
gs
and
movsb
ficompl
cmpsb
inc
cmp
mov
popa
add
iret
add
pop
sub
shll
insb
popf
xorb
test
test
out
js
push
std
sub
test
les
mov
rcrl
mov
cltd
popf
or
mov
nop
xor
jno
sub
pop
int
call
aaa
les
addl
dec
add
popa
push
aas
jno
in
dec
stos
gs
dec
fwait
enter
add
push
cmp
push
rorl
loopne
sarl
into
cmp
jmp
sahf
adc
xor
pop
out
lods
jp
into
adc
test
imulb
push
sar
inc
gs
jno
mov
xor
sti
inc
lret
dec
adc
jnp
xor
bnd
sub
pop
pop
ljmp
push
test
popa
pop
or
bound
lahf
popf
shlb
mov
adc
mov
mov
rorb
mov
inc
push
mov
out
dec
cltd
nop
and
mov
leave
or
mov
xor
repnz
mov
repnz
notl
mov
lea
insb
sub
jmp
cmp
cmpsl
frstor
mov
pushf
aam
mov
mov
fs
xchg
push
inc
mov
add
lods
stos
shlb
xchg
daa
andw
xchg
pop
aaa
andb
cmp
scas
sar
outsl
ret
cmp
sub
into
cmp
or
and
cmp
xchg
jmp
dec
mov
sbb
inc
je
mov
mov
and
pusha
sub
and
cmp
cmp
ficoml
or
gs
lods
mov
shrl
push
sub
inc
stos
jmp
dec
sub
pop
mov
inc
popa
pop
or
imul
mov
cmp
outsl
aaa
cmp
xor
mov
mov
pushf
pop
cmp
lret
mov
int3
lret
clc
loope
bound
pusha
cwtl
ss
xor
sub
sub
add
jp
sahf
pop
inc
jns
xor
mov
loopne
hlt
inc
mov
fucomi
test
and
popf
and
and
outsb
fcompl
aad
iret
push
fwait
dec
lods
imul
adc
inc
les
xchg
inc
dec
popa
xlat
sbb
inc
js
pop
aaa
mov
movsb
aam
sub
push
fmul
fs
nop
and
fcoms
icebp
js
arpl
fstl
mov
ds
cmp
and
and
ss
xor
movsb
jg
inc
into
cmp
lret
push
in
dec
inc
lods
sub
repz
xchg
dec
push
lret
ss
inc
jp
add
xchg
in
into
lret
lea
int3
cmpsb
sbb
and
xchg
mov
xor
xchg
xor
xor
mov
aad
sbb
repnz
or
cmpsl
divb
cmp
lret
dec
and
out
push
mov
das
sbb
jno
ss
lods
pushf
mov
xchg
adcl
dec
mov
sub
and
sbb
rclb
xchg
mov
scas
inc
push
sbb
xchg
jns
mov
pop
fsubl
xchg
rorl
lret
fwait
mov
out
test
pop
dec
lahf
in
mov
popf
or
push
arpl
xchg
push
loope
adc
fwait
or
in
adc
adc
xor
iret
mull
cmp
dec
imull
rcll
add
cmpsb
shlb
or
push
cwtl
aas
push
sub
adc
ds
and
sbb
xor
cmpsb
in
pop
mov
or
adc
imul
add
dec
or
jecxz
std
sub
cmc
dec
nop
aas
fcmove
pop
push
dec
test
lcall
sub
fsin
adc
es
adc
stos
sbb
lcall
out
adc
lcall
cmc
loopne
sbb
lods
adc
sbb
mov
nop
pop
pop
data16
and
movb
lahf
xchg
sti
rcrl
xor
jecxz
fists
fs
dec
jns
bnd
dec
movsl
test
xorl
xchg
mov
push
add
int
cltd
scas
pop
xchg
dec
push
dec
push
or
and
test
clc
rorb
cld
lock
inc
outsl
out
adc
ds
movsl
in
inc
mov
aad
rorl
mov
mov
das
add
mov
pop
sarl
repnz
dec
data16
imull
add
mov
mov
or
cld
dec
sbb
cs
iret
xlat
inc
xor
pop
sarb
ret
cli
dec
out
loope
push
cltd
push
xchg
jle
jbe
or
cli
pusha
in
pop
fdivs
lret
sbb
pop
repz
inc
mov
in
xor
dec
lret
jno
push
aaa
inc
cli
add
xlat
repz
int3
stos
shl
pop
arpl
mov
stc
icebp
or
icebp
mov
and
and
push
aas
int
dec
stos
std
sbb
fimuls
ficompl
xchg
sbb
fnsave
jo
mov
adcb
inc
insb
repnz
fcomip
xchg
imul
mov
xchg
mov
lea
outsb
ret
inc
in
shrb
nop
mov
lods
inc
sti
pop
aad
jl
shlb
pushf
hlt
gs
rolb
pop
xchg
xlat
mov
xchg
inc
test
add
add
mov
icebp
inc
ljmp
mov
or
xchg
mov
movsb
add
shrl
sbb
leave
xor
xor
adc
imul
fidivl
cmpsb
fdivrs
inc
dec
push
sub
cwtl
add
fisttpll
faddp
cwtl
push
movsb
orb
sbb
ret
adcb
sub
adc
jb
js
push
stos
cmc
pop
mov
dec
pop
xchg
clc
mov
add
test
jns
jmp
mov
cmp
fnsave
pop
adc
add
push
icebp
clc
add
mov
cmp
pushf
ss
sub
push
xor
push
jno
test
lods
sub
dec
shll
xor
cmpsb
push
jg
js
push
cmp
push
sbb
insb
mov
xor
out
out
push
mov
lock
jmp
loopne
pop
hlt
lods
fstl
rolb
sub
cmp
loope
subl
mov
mov
cmp
je
sahf
sub
loope
mov
jmp
dec
in
pusha
xor
jo
int3
dec
sbb
pop
leave
push
repz
sbb
cmp
xor
lds
sbb
rcrl
and
ja
mov
jmp
out
gs
das
mov
or
fdivp
adc
xor
in
test
add
mov
push
popa
js
orl
test
add
in
add
mov
lods
jne
cmp
popf
jae
cmc
mov
cli
lahf
outsb
icebp
or
dec
inc
ja
mov
addr16
scas
sbb
fildll
sahf
sbb
fidivs
aad
inc
movsb
xchg
cmp
xor
xlat
jns
push
and
mov
pop
lcall
mov
cmc
mov
push
test
aam
push
sbb
xchg
ds
pop
cmpsb
inc
pop
xchg
mov
scas
jb
jnp
pop
insl
inc
or
in
aas
cmpl
xchg
xchg
xor
push
cwtl
mov
inc
push
rorl
and
clc
xchg
inc
ds
aad
popf
ss
mov
pop
cmc
pop
in
rcll
jmp
pushf
xchg
test
jbe
cmpsb
int
inc
cmpsb
add
xchg
xchg
out
jnp
lret
pop
and
jp
jecxz
loopne,pt
rolb
mov
pop
addr16
sub
mov
adc
cltd
andb
or
cld
leave
mov
test
dec
insl
popa
hlt
push
jp
pop
jbe
mov
movsb
cmpsl
mov
pop
cmp
pop
out
cmp
push
adc
xor
imul
fidivrl
mov
insb
test
fs
push
inc
adc
cld
je
fcmovnu
dec
sbb
dec
cltd
test
cmp
call
sahf
or
inc
in
fwait
test
inc
dec
les
mov
lret
mov
jp
sbb
lahf
sbb
push
mov
xor
xchg
out
repz
testb
popa
mov
sub
mov
and
pop
and
mov
jo
jl
sub
call
ja
cmp
xor
orb
loope
or
repz
jnp
adc
cld
and
cmp
ds
cmc
xorb
js
rclb
pop
or
movsl
aad
jmp
xor
leave
mov
mov
pop
mov
sbb
xchg
cmc
js
andl
fcmovnb
pop
cwtl
xchg
add
ret
xchg
add
adc
out
mov
and
or
fsubrp
mov
sti
lock
ljmp
add
jo
jmp
inc
pop
subb
or
sbb
cmp
mov
or
fnstcw
mov
jmp
push
js
xchg
add
mov
test
sbb
cwtl
or
mov
pop
adc
mov
xchg
gs
dec
pop
cld
xor
dec
cmpl
xor
pop
fs
xor
popa
xor
ret
fsubs
cmp
bound
lods
in
aad
popl
cmpl
movsb
cs
mov
or
jns
jbe
cmp
test
repz
in
jg
pusha
pushf
push
push
hlt
jmp
push
lods
xor
mov
mov
mov
push
add
jmp
push
into
xchg
popa
test
cs
lret
mov
sub
cwtl
xor
mov
nop
add
add
dec
jo
fs
int
imul
fwait
push
sbb
jns
into
jg
xchg
mov
mov
xchg
inc
loop
das
movsbl
xchg
or
xchg
mov
dec
ret
cmp
lds
add
sub
jnp
popf
push
imul
dec
dec
icebp
sbb
shll
shlb
inc
jmp
mov
mov
sub
rcrb
das
or
les
rcr
ret
dec
cmpb
mov
inc
nop
test
aam
mov
dec
xor
sbb
or
imul
shll
iret
lret
aad
test
ljmp
xchg
insl
mov
in
addl
adc
jge
test
sbb
or
xor
bound
mov
xchg
outsb
cltd
test
cltd
inc
sbb
mov
iret
adcl
sahf
xchg
loope
pushf
fstpt
sub
jno
sub
inc
mov
pop
mov
lock
outsl
insl
ficompl
inc
lock
push
call
or
jnp
movsb
push
inc
sub
cltd
mov
popf
fs
js
xorl
lcall
adc
inc
adc
test
popf
int3
out
jae
and
and
in
dec
mov
jecxz
roll
addr16
push
dec
xor
mov
in
mov
mov
es
inc
pop
sarb
jne
mov
into
insb
je
pop
jmp
inc
test
in
push
inc
lcall
jmp
or
cmc
mov
orl
or
test
xor
sbb
pop
xor
call
std
and
and
pop
dec
and
inc
jl
push
jg
jmp
pop
push
mov
mov
out
jge
js
out
sbbl
xchg
negl
pop
ret
jmp
pop
mov
cmp
cmp
je
repnz
and
and
ret
add
adc
adc
dec
cmpl
or
push
fimuls
data16
mov
std
test
mul
insb
sub
inc
imul
xchg
insb
mov
les
arpl
xor
mov
ret
push
sbbl
pushf
sub
into
das
push
push
xor
ds
mov
mov
test
and
stc
push
arpl
movsl
adc
enter
outsl
push
int3
inc
das
push
adc
das
sbb
xchg
lcall
mov
dec
sbb
stc
dec
sbbl
or
push
pop
sarb
push
cmpsb
fldenv
and
add
rcrl
mov
shr
inc
stos
push
aas
cmp
xor
pop
xchg
and
mov
jg
cmpsb
add
jmp
xchg
outsl
leave
mov
outsb
jge
jbe,pt
pop
insb
cwtl
sahf
std
xchg
dec
dec
pop
pop
mov
out
mov
repnz
outsl
mov
push
cmp
aas
inc
mov
fs
loope
ret
adc
call
stos
or
push
outsb
popa
sbb
or
test
aaa
js
dec
fcom
sbb
js
jmp
cmp
xchg
pop
cmp
fdivrp
mov
inc
je
ljmp
stos
out
cmpsb
adc
cmp
sbb
fisubrs
mov
inc
inc
pusha
lods
mov
clc
fwait
mov
sub
cmp
jecxz
rorb
js
lret
inc
ja
and
mov
and
out
or
std
mov
lock
test
cltd
pop
movsl
arpl
bound
cwtl
jb
cmp
jno
cs
or
sbb
add
out
sbb
sbb
rcr
shlb
add
push
inc
pop
xor
repz
push
mov
xchg
xchg
int3
lods
out
push
out
pop
sbb
push
xchg
adc
xor
xorb
fcmovnb
subb
sbb
xchg
xchg
nop
loope
push
dec
shrb
add
xchg
dec
aaa
mov
mov
jg
data16
insb
nop
lea
mov
adc
xor
xchg
movsl
loopne
lret
push
clc
into
es
sarl
mov
mov
int3
test
ja
add
xchg
mov
cmp
and
cmpsb
mov
push
fisttpll
or
rcrb
xchg
adc
aas
sbb
test
cmp
add
push
mov
scas
pop
in
outsl
mov
out
and
test
cwtl
pop
popa
and
xlat
int3
mov
add
add
jecxz
les
movsb
and
call
mov
sahf
jne
push
push
loopne
sub
sbb
insb
mov
mov
sub
pop
mov
insb
aam
adc
mov
mov
jb
push
inc
mov
pop
mov
sti
xchg
cs
jecxz
icebp
jo
sub
push
jmp
adcb
pushf
popf
decb
pop
mov
imul
aam
testb
and
es
inc
inc
cmc
pop
shll
cmp
mov
popf
insb
das
out
pushf
call
sbb
dec
jl
mov
fdivl
xchg
call
push
mov
sarb
fadd
or
mov
push
xchg
movswl
xor
loopne
ret
inc
addb
adc
dec
jg
sbb
pushf
fwait
xor
inc
test
jg
das
mov
scas
insb
mov
fisttps
out
cmp
pop
pop
pop
jecxz
inc
leave
push
popf
dec
fcomip
repnz
jmp
mov
mov
push
sbb
jge
les
sbb
dec
in
inc
sbb
and
icebp
out
les
push
dec
push
adc
pop
cmp
insb
out
rclb
xchg
iret
wbinvd
lret
mov
pop
fcomps
std
or
push
es
jo
rclb
jno
or
jbe
jge
dec
stc
leave
fsubrl
push
jge
lods
cli
or
outsl
jne
pop
rorl
cmp
pop
cmpsl
push
ret
dec
jl
pop
icebp
cmpsb
mov
xlat
sarl
inc
pop
cmpsl
add
jecxz
sti
stc
js
movsl
sahf
test
aad
push
jp
mov
jne
ljmp
push
xchg
stc
add
cwtl
andl
inc
sbb
cld
enter
test
fidivl
sbbb
inc
sbb
lret
leavew
pop
sub
sti
sub
aad
cwtl
mov
mov
dec
ss
and
jns
in
dec
xchg
push
jmp
mov
lcall
mov
sub
movsl
jl
lret
andl
in
inc
movsl
pusha
xor
pop
push
mov
popf
into
push
movl
sub
aas
cwtl
hlt
mov
insb
lret
in
or
cmp
jnp
mov
scas
pop
push
jmp
in
adc
gs
add
add
xor
sub
mov
mov
mov
add
mov
sbb
and
inc
dec
sbb
test
out
mov
arpl
mov
jle
cmp
and
stc
cmp
ret
cmpsl
hlt
shrl
add
mov
and
fwait
popf
lods
inc
dec
pop
adc
adc
rorl
pop
mov
adc
mov
inc
xor
in
and
iret
jbe
and
xchg
pop
inc
mov
lret
add
les
dec
aaa
xor
ret
popa
mov
cltd
adc
xor
int
pop
adc
neg
add
or
cmp
mov
xchg
or
sbb
mov
rcl
xchg
mov
add
xchg
addr16
add
rcl
nop
popf
jae
mov
pop
shlb
jns
dec
jne
repnz
add
loop
push
inc
add
mov
add
sub
xor
lods
cmp
jb
ljmp
shll
dec
int3
lds
push
jnp
xchg
jo
repz
ja
jne
movsb
and
shll
and
xor
popf
mov
sbb
jg
mov
inc
push
mov
popf
mov
xor
and
push
jl
mov
cmpsl
jmp
jnp
scas
jmp
mov
sahf
lods
mov
xchg
out
in
orb
pop
mov
add
xchg
cmp
jb
mov
sbb
pop
out
mov
test
mov
shr
xor
movsb
je
jne
push
aad
mov
fcmovne
xchg
loope
jp
mov
push
fwait
mov
in
pushf
data16
jns
enter
loop
pop
into
push
enter
xchg
data16
jg
pop
aam
in
add
add
roll
stos
pop
pop
mov
and
dec
push
mov
sub
push
push
xchg
gs
xorl
mov
dec
bswap
sub
aam
lret
mov
xchg
and
jbe
xchg
movsl
mov
inc
cmpl
mov
xor
jbe
inc
sub
inc
ret
outsl
imul
adc
ja
lret
loop
cltd
cmp
js
mov
mov
cmc
in
xchg
cwtl
adcl
popa
adc
das
pop
cmp
lods
add
enter
add
sbb
in
imul
and
mov
xor
cmp
cmp
cmc
push
pop
test
aas
push
add
xchg
adc
mov
pop
test
shll
adc
pop
testb
pop
xor
cmpsb
movsb
pop
lods
pushf
or
sbb
and
sti
cmp
arpl
dec
popf
pop
cmpsb
lahf
mov
nop
int3
fists
icebp
sbb
pop
scas
jae
adcb
pop
jb
mov
jge
pop
xchg
sbbb
sub
jno
lahf
xor
jne
jl
pop
add
jmp
ficompl
out
adc
dec
into
or
int3
inc
push
xchg
push
into
push
and
lods
push
xchg
cmp
inc
sbbb
sahf
mov
imul
inc
dec
push
push
aad
add
dec
mov
dec
stos
lret
dec
mov
ret
jecxz
cs
cmc
stc
movsl
cmc
mov
dec
mov
adc
xor
add
stos
cmp
mov
in
std
pop
dec
and
sbb
push
in
pop
rcll
pop
mov
dec
jae
fwait
and
xchg
stos
nop
sub
jbe
mov
icebp
arpl
lods
out
shll
mov
xchg
ss
and
int3
adc
jne
in
mov
adc
lret
add
jne
pop
mov
test
gs
sbb
fbstp
stos
fbstp
jno
cmpl
add
cmp
test
daa
push
mov
inc
dec
jecxz
pop
dec
shrl
lahf
adc
mov
loopne
into
mov
xchg
cmp
test
mov
xor
icebp
dec
int3
push
inc
mov
or
ret
inc
jb
jnp
sub
xchg
hlt
xor
inc
in
or
icebp
gs
lods
mov
lock
xor
xor
mov
cmp
or
sub
xor
push
in
out
movsb
loopne
insl
stos
bound
xchg
push
test
adc
dec
jp
out
popf
adc
sahf
jb
push
inc
arpl
in
cmp
icebp
sub
mov
inc
lcall
imul
lock
ds
cmpsb
ljmp
add
pop
adc
lahf
into
xchg
cmpsl
or
lds
fisttpl
push
idivb
jmp
ret
jg
cmp
adc
add
scas
je
or
andl
test
mov
jo
cmp
or
addr16
or
mov
dec
adc
ljmp
in
dec
mov
hlt
sbb
jecxz
ss
lods
test
sahf
dec
mov
stos
mov
cmpsb
ja
popf
sub
call
inc
push
loope
pusha
sub
shll
or
ss
inc
push
or
sbb
cmp
ret
or
sbb
push
or
add
cltd
xlat
enter
jle
pop
add
mov
mov
xor
pusha
jmp
out
dec
pop
mov
adc
xor
notb
jg
inc
mov
bound
sub
sub
mov
dec
jmp
lock
lods
decb
cmpsl
add
roll
push
mov
jo
inc
loope
xchg
mov
cli
mov
inc
add
xor
pop
sbb
or
adc
pop
mov
mov
cmp
popa
stos
mov
add
sub
jmp
sbb
xchg
mov
xor
jp
addl
lods
pop
dec
mov
testl
jb
mov
nop
out
lcall
dec
insb
cmp
xchg
pop
fwait
insb
push
ja
aam
lcall
mov
inc
jp
sar
sbb
popa
and
pusha
pushf
out
and
les
mov
into
mov
test
cltd
push
push
jmp
mov
add
ljmp
mov
addr16
push
outsl
in
test
adc
test
dec
daa
fsubrl
bound
cld
adc
inc
add
xlat
or
insb
aam
shll
aaa
jl
jnp
add
push
adc
js
rcrb
pushf
lds
mov
aas
bound
mov
sub
icebp
in
mov
dec
push
sbb
idiv
imul
dec
lahf
test
mov
lods
pusha
ret
fmull
in
sbb
cmpsb
imul
movsl
aaa
cmpsl
lcall
pop
cs
fs
popa
add
inc
jno
cmp
movsl
mov
imul
aam
bound
xchg
cmp
cwtl
fsubl
and
jne
ljmp
pop
jnp
test
imul
jmp
xor
or
fcmovnb
push
pop
insl
mov
inc
das
call
repnz
enter
loope
ret
mov
rorl
xchg
insl
in
mov
call
loop
dec
jo
addr16
sahf
nop
cmc
and
mov
clc
sub
mov
push
mov
xor
mov
popa
jp
mov
lret
loope
stos
into
leave
cmp
std
mov
inc
add
aam
adc
flds
mov
dec
das
fs
jo
hlt
mov
out
in
ja
push
fnstsw
roll
inc
jae
inc
push
pop
cmc
pop
in
xlat
sbb
jb
add
scas
cmp
jp
or
ret
mov
mov
push
popl
movsb
fadds
insl
pop
jg
ljmp
ja
lods
sbb
dec
pop
xchg
xchg
push
mov
and
xor
and
dec
loopne
xor
xor
testb
pushf
adc
mov
pop
negb
test
ss
mov
xor
arpl
add
push
push
fucom
sti
outsb
push
sbb
mov
push
cmp
xor
dec
mov
jnp
xchg
jp
mov
pop
sub
in
push
pop
loopne
insl
add
mov
js
jmp
rcll
scas
icebp
insl
jbe
add
mov
ljmp
or
mov
or
or
jmp
push
insl
push
cld
jecxz
lea
in
hlt
imul
sbb
hlt
fdivl
popf
jnp
adc
scas
mov
leave
cwtl
cmp
fnsave
sub
adc
jbe
add
mov
or
sbb
loope
add
in
xchg
pop
mov
xor
jl
lcall
add
dec
lret
jae
loop
adc
xor
pop
sar
out
andl
jne
popf
fcomps
and
imul
add
pop
jmp
inc
lods
inc
stc
adc
scas
mov
mov
or
xchg
jo
push
scas
inc
inc
rcl
lret
arpl
fidivrs
lret
cwtl
in
pushf
dec
sbb
hlt
mov
dec
mov
jg
sub
sarb
cli
push
outsl
mov
out
adc
out
imul
iret
mov
mov
mov
dec
adc
cltd
lea
popf
pushf
xor
jecxz
xor
jg
or
fisttps
xor
lcall
in
jl
dec
data16
test
push
dec
cmp
sub
lcall
lret
push
sbb
jmp
add
scas
negl
scas
test
sti
sub
pop
imul
mov
push
sub
cli
xor
fcoml
pushf
mov
mov
ds
or
jns
adc
push
or
dec
pop
xchg
jne
or
das
xchg
fstps
sub
mov
xchg
mov
sti
jecxz
nop
gs
push
dec
sbb
lds
icebp
jbe
xchg
out
jmp
dec
loopne
loopne
nop
imul
shll
xor
mov
xor
mov
movsl
jnp
push
pop
sbb
mov
insb
sub
adc
es
or
push
inc
cmp
add
mov
pop
pushw
inc
and
sar
sbb
or
sbb
scas
das
jmp
shlb
popa
mov
jecxz
push
or
push
out
add
aam
pop
js
test
test
jbe
xchg
sahf
in
mov
mov
out
gs
or
xor
mov
jge
mov
popf
or
dec
inc
adcl
outsl
or
mov
bound
push
sbb
fisubrl
pushf
int
or
xor
mov
rcll
cmp
in
leave
sahf
sbb
clc
scas
sub
dec
push
in
push
cmc
pop
or
mov
pusha
add
xor
arpl
scas
fsubs
sub
imul
push
outsb
cld
aaa
cmp
outsl
mov
mov
mov
pop
jle
mov
inc
mov
xchg
int
popa
lahf
call
rol
cmpl
jle
mov
leave
cmp
xor
sub
sub
mov
inc
jg
jbe
sbb
daa
and
adc
shlb
push
jge
and
aad
mov
push
mov
jge
aam
jbe
jno
divb
xchg
je
xor
in
std
dec
out
push
mov
outsl
icebp
cld
xor
xchg
xchg
sub
je
pop
imul
mov
push
dec
jmp
popa
imul
jae
dec
xchg
scas
jb
repnz
cmp
loop
mov
push
int
or
scas
ljmp
fwait
mov
push
jbe
in
fwait
out
mov
jle
mov
repnz
adc
cmc
sbb
arpl
pop
xor
mov
inc
add
pop
into
sbb
xchg
fimuls
lea
rol
mov
inc
cmp
stc
testb
andl
cmp
sub
inc
adc
jb
test
lea
xchg
push
push
int
cs
jnp
gs
adc
jne
jmp
xlat
fbld
lock
sub
into
shll
push
fsubp
fwait
popf
das
lods
dec
or
fndisi(8087
jmp
popf
aas
jp
jp
push
out
stos
roll
push
xlat
test
mov
dec
adc
fcomps
pop
movsb
inc
je
mov
inc
vfnmadd213ss
mov
add
aad
or
je
pop
aam
push
scas
stc
push
xor
sub
aaa
mov
rolb
dec
loope
pusha
pushf
cmp
les
popaw
call
lret
aaa
lds
push
pop
dec
adc
je
hlt
inc
outsb
xorb
int3
sahf
iret
sbb
lahf
jnp
clc
js
fwait
xchg
fmull
jl
rclb
clc
pop
cs
lock
xor
fwait
in
dec
mov
jle
dec
or
sbb
aam
addb
inc
mov
lds
push
jae
nop
into
js
inc
loope
xchg
adc
mov
ljmp
in
sbb
pop
repnz
cwtl
dec
pop
in
fdivl
fst
stc
mov
jo
push
loopne
rcll
dec
stc
or
add
inc
jbe
pop
fwait
sarl
fld
lods
or
mov
insl
adc
out
fdivrs
out
dec
xchg
out
sub
testb
cmp
jbe
test
mov
xorb
xchg
and
jbe
xchg
pop
push
pop
xor
sub
adc
movsl
imul
aad
jns
xor
push
mov
idivb
and
shrl
insb
and
stos
sbb
xchg
bound
aam
jo
or
roll
mov
out
ror
into
int
jb
push
push
in
in
sub
int
mov
xchg
lret
jmp
and
cmpsl
mov
cmp
dec
jb
fdivr
jl
sarl
mov
mov
enter
outsb
push
loope
and
or
push
or
xor
movsb
mov
mov
hlt
in
xor
int3
pushf
jb
inc
sub
jmp
js
jne
adc
sub
popf
sbb
leave
bound
push
imul
or
cld
fidivl
push
xchg
fcoml
in
jbe
nop
xor
repz
or
push
lret
lahf
jnp
xor
sbb
stos
mov
sbb
sub
xchg
std
lret
mov
xor
and
stos
sbb
faddl
xchg
xchg
std
shlb
daa
lret
xchg
pop
push
jbe
iret
loopne
aas
pusha
adc
jge
mov
mov
pop
lret
xchg
ds
sbb
inc
inc
xchg
aaa
mov
ds
adc
xchg
js
inc
xchg
sub
pushf
shl
sub
mov
sub
std
gs
stos
stos
pop
dec
addl
inc
push
stos
out
ja
jno
push
hlt
add
jne
dec
xor
std
clc
jmp
mov
mov
cmp
int
inc
mov
sub
sub
jp
lcall
sarl
jo
les
mov
lret
repz
mov
pop
mov
out
outsl
imul
sub
fsubs
inc
add
testl
jno
mov
sti
stc
setge
movntps
dec
fmuls
ds
jmp
dec
cmp
push
push
mov
std
jge
mov
pushf
inc
mov
jo
shrl
jne
test
ja
jg
xor
into
test
sti
scas
dec
push
mov
mov
sbbl
pushf
imul
loope
push
rol
and
enter
jle
mov
mov
outsl
mov
popf
xchg
and
sbb
cmp
pop
js
pop
out
fsts
outsl
inc
or
and
enter
cmp
fcoml
cmpb
push
fistl
fimuls
and
mov
and
sbb
shl
adc
sarb
jo
inc
test
sbb
jecxz
cmpsl
daa
jae
data16
push
dec
push
add
jae
arpl
mov
in
dec
mov
mov
jb
dec
aaa
stos
rclb
fnsave
lret
push
pop
push
dec
dec
cli
xchg
adc
dec
jl
push
jno
repz
out
xlat
aaa
aad
adc
jns
sbb
pusha
mov
and
enter
sbb
push
movsb
iret
xor
xor
push
cmp
mov
and
pop
leave
js
mov
hlt
lds
mov
pop
cmpsl
add
sbb
pop
inc
out
mov
hlt
pop
xchg
movsl
mov
mov
pop
dec
cmp
cmc
xchg
inc
and
sbb
add
xchg
dec
adc
fldenv
mov
aaa
stos
lret
dec
jb
add
fld
sub
dec
hlt
int
outsl
xchg
inc
into
mov
jae
leave
pop
xlat
ja
mov
outsl
jb
sbbb
aad
aad
lahf
lods
and
push
jle
mov
loop
jo
inc
mov
sbbb
xchg
dec
cmp
mov
fstps
mov
push
xchg
lods
es
mov
xlat
sbb
adcl
lcall
rorl
or
inc
sub
scas
inc
cmp
mov
pop
mov
inc
fnstsw
jge
dec
jle
loop
or
add
cmp
mov
add
push
subb
aad
xor
pushf
xchg
lret
stc
sub
out
loop
push
xchg
out
cmp
loop
mov
ss
jge
iret
outsb
push
xchg
sti
ret
push
xchg
and
sbb
add
in
cmc
xor
and
cmp
and
pop
push
xor
daa
rcr
mov
inc
mov
addr16
pop
cld
popf
stos
xchg
or
jns
rcrb
cmp
and
lcall
rcrl
popa
add
xchg
pop
mov
inc
jle
mov
pop
pop
lea
scas
and
sub
push
imul
add
lods
dec
fbld
ljmp
xlat
in
pop
div
movsb
pusha
stos
adcb
mov
cmpsb
jmp
xor
cmc
pop
sar
lods
dec
leave
dec
stc
mov
filds
and
lods
pop
pop
stc
and
movsl
jno
data16
adc
add
mov
fwait
inc
pop
mov
sbb
dec
adc
xchg
pop
aas
ret
xchg
jo
push
fisttpl
into
mov
dec
xor
rcl
clc
jle
ret
popf
and
popa
adc
movsl
gs
sub
cmp
hlt
and
cmp
test
mov
push
dec
cmp
push
xchg
mov
repnz
adc
and
adc
pop
mov
pop
cmp
mov
ljmp
sahf
and
xor
pop
notl
inc
mov
xlat
jge
cmpsb
aas
lea
imul
sub
pop
xchg
xor
sub
out
push
mov
add
and
xor
cltd
xchg
cmp
dec
add
fld
lock
dec
cmp
nop
jmp
lret
push
cltd
xor
add
cltd
out
xchg
jp
test
loop
xchg
mov
push
aaa
imul
add
sbb
sahf
xorb
repnz
mov
loopne
cmp
adc
mov
pushf
and
xor
sbb
movsl
dec
dec
add
inc
adc
and
xor
fs
sbb
repz
popf
test
or
jl
das
or
or
and
cmp
fnstsw
imul
sbbb
inc
mov
int3
cmc
rorb
sti
mov
mov
xor
ret
lret
mov
rcrl
adc
xchg
jge
lret
dec
mov
jmp
xor
adc
sbb
xchg
jge
loop
fistl
push
shll
mov
cmp
pop
rorb
in
mov
push
pop
stos
cmp
jbe
adc
leave
icebp
sub
iret
test
inc
jb
pop
cmp
push
inc
gs
cmp
and
sti
pop
int
fsub
insb
loop
mov
mov
pop
adc
or
push
mov
lret
mov
mov
cmp
or
aas
icebp
push
loopne
add
adcb
pop
sbb
jb
ret
arpl
in
fmuls
mov
adc
into
push
xchg
pop
fcoml
push
stc
rorl
push
rclb
inc
outsb
test
adc
dec
pop
mov
sbb
lds
cmp
mov
movsl
inc
ret
fldcw
cmpsb
out
sbb
dec
add
adc
in
in
xor
adc
mov
push
xor
stos
push
xor
adc
sub
adc
dec
sbb
xchg
fisubs
lods
movsb
loope
das
fisttps
pop
inc
test
imul
and
sarl
popa
addb
push
xchg
ja
not
andb
dec
mov
popl
icebp
es
out
push
rcll
pop
les
xlat
into
sarl
adc
push
pop
add
mov
fsub
inc
cmp
sub
dec
leave
hlt
add
xchg
cmpsl
and
xchg
cmp
and
mov
xchg
mov
jp
xlat
sbb
fs
mov
sarb
push
pop
test
jecxz
cltd
test
jle
or
in
or
and
push
jp
mov
lock
cmc
stos
test
cmpsl
sbb
loope
mov
dec
mov
ds
fbld
sub
int3
mov
mov
pop
testb
xchg
adc
das
stos
inc
xchg
cmc
pushf
nop
repnz
les
arpl
inc
mov
or
fld
sub
xchg
call
push
repnz
xor
add
inc
jp
into
outsl
mov
mov
mov
dec
mov
fldt
sub
xor
int
inc
cmp
push
ret
out
shlb
jmp
arpl
cmc
xor
mov
push
xchg
fdivl
sbb
out
dec
xchg
jl
dec
push
pop
ret
lods
sub
shlb
movsb
sbb
dec
lods
notl
or
jne
dec
and
pushf
sbb
imul
xor
inc
lret
and
ljmp
inc
sub
rorl
bound
fldlg2
xchg
jg
push
jae
psrlq
fiadds
stos
push
roll
pop
cmc
inc
dec
jnp
dec
xchg
lcall
xor
cmpb
dec
and
dec
test
jg
xor
sub
sub
lahf
mov
out
stc
sub
pop
jns
dec
lea
pop
lret
sub
sub
pop
pop
in
data16
or
and
push
fs
cwtl
outsl
in
jg
add
mov
ucomiss
add
es
push
push
cmp
sarl
pop
dec
jp
iret
jge
cmp
pushf
or
mov
dec
popa
lods
jg
pusha
sub
out
pop
jmp
ljmp
push
mov
aad
movsb
pushf
push
push
adc
movsb
imul
lods
xchg
in
ret
stc
inc
es
cmpb
out
and
cmp
lods
enter
test
int3
cmp
sarl
enter
gs
iret
in
inc
dec
sub
in
fistpl
mov
fistl
test
mov
insl
mov
xor
mov
mov
divb
lods
mov
jle
dec
push
scas
lahf
loope
js
xor
int3
jo
mov
cld
cmp
xchg
loope
and
lock
sti
or
cmp
shrl
xchg
int
test
ss
mov
sub
xor
arpl
decb
fwait
jne
inc
aaa
out
and
popf
mov
test
fistpll
cmp
ljmp
mov
pop
xchg
out
xchg
mov
mov
orb
add
mov
ret
inc
aam
inc
add
in
in
mov
push
cmp
mov
add
loopne
push
pusha
inc
push
jp
mov
test
jp
insl
sbb
dec
inc
mov
sahf
lods
mov
cmpsl
repnz
push
scas
xchg
mov
adc
pop
pop
dec
div
and
lds
xor
dec
inc
stos
push
and
mov
cmp
mov
and
sti
fsubrp
inc
repz
push
xor
mov
dec
xchg
or
loopne
leave
into
jl
push
cmc
inc
xchg
mov
and
movsb
mov
dec
das
fists
xor
cs
inc
fstps
and
pop
and
and
xchg
xor
sbb
imul
daa
xchg
scas
fcompl
cmc
lods
stc
pop
out
and
das
int3
sbb
xor
cmp
jnp
cltd
lods
lock
imul
mov
xchg
gs
movsl
inc
scas
je
or
dec
iret
sub
loope
lock
sub
and
pusha
les
xchg
jno
xchg
test
in
add
add
pop
cmp
push
test
mov
les
mov
dec
popf
push
mov
sbb
out
stos
and
xor
inc
sysexit
clc
cmp
fisttpll
dec
jecxz
sub
add
sbb
loope
aaa
pop
jnp
nop
cmp
mov
insl
sahf
sahf
outsl
mov
xor
cmpsb
les
jbe
sti
push
inc
jg
jnp
jne
adcb
or
mov
or
jno
mov
mov
lock
xor
in
loope
xlat
pop
cmpb
xchg
ret
inc
jb
sbb
mov
mov
out
sbb
fnstcw
inc
outsb
pop
lcall
xor
mov
jmp
ljmp
push
adc
in
cmp
test
mov
iret
ret
dec
push
sub
inc
add
push
mov
inc
test
inc
mov
aaa
loop
ds
into
insb
jmp
insl
jns
daa
pop
sub
shrl
jp
mov
testb
pop
push
sbb
cli
out
fcomp
push
push
sbb
sub
lahf
sub
icebp
sahf
push
push
cmp
dec
insb
cmp
aaa
xchg
jb
popf
push
repnz
popf
int
rolb
ret
test
or
fistpl
inc
xchg
jp
stos
jno
xchg
sub
je
xchg
xchg
fbld
stos
dec
jb
inc
neg
mov
mov
xchg
das
sbb
fistps
ret
mov
mov
mov
repz
push
push
call
cmpsb
addl
inc
stc
dec
sahf
stos
pop
dec
pop
jb
or
jne
sub
mov
sub
test
push
int3
xor
mov
fs
rclb
mov
or
mov
rcrb
enter
es
sub
jmp
js
je
movsl
frstor
call
mov
jne
rolb
orb
add
sarl
and
sub
aaa
jmp
xchg
arpl
cmp
cld
pop
inc
dec
push
adc
leave
jle
push
cmp
lods
test
or
mov
mov
pusha
mov
lahf
xchg
fimuls
fwait
jno
xor
lods
adc
shr
inc
fstpl
adc
xchg
and
insb
or
inc
js
sbb
xchg
adc
daa
stc
cmp
xchg
lock
xchg
pop
jno
xchg
mov
hlt
idivl
fs
gs
lea
add
jbe
cli
popf
xchg
push
mov
subb
push
loope
xchg
sbb
mov
jns
mov
movsb
bound
in
sbb
sub
aam
add
lods
dec
cmpsb
add
dec
lods
inc
and
jb
call
icebp
out
jno
dec
and
jbe
lret
fistpl
fptan
xchg
test
stc
pop
in
les
mov
mov
cmp
pop
dec
mov
push
hlt
mov
sbb
push
pop
sub
push
jns
rorb
sbb
inc
lcall
fidivrl
cmc
mov
or
and
cld
or
cmpsb
aas
aam
out
dec
aaa
inc
push
mov
pop
sub
scas
pop
and
push
repz
and
fcompl
or
mov
cmp
fldl
enter
into
jno
add
or
and
scas
dec
push
or
pop
pop
push
sarb
adc
lods
testb
mov
lock
ret
xchg
dec
mov
lods
jmp
add
dec
lahf
dec
mov
pop
xlat
ss
push
push
lock
pop
test
add
rclb
into
mov
push
and
mov
push
sti
sub
ret
lahf
iret
aas
je
rorb
cmp
rcll
mov
and
lods
xor
loop,pn
pop
cmp
mov
loop
in
dec
or
hlt
mov
pop
or
mov
dec
lods
mov
subl
sub
fsubs
mov
es
cld
out
cmpb
loope
sub
xor
mov
mov
sarb
xchg
shll
and
gs
arpl
mov
ds
leave
and
jo
stos
sahf
mov
pop
ret
pop
mov
fdivrs
out
push
xor
outsl
pop
and
mulb
jge
std
add
mov
jae
pushl
mov
jmp
xchg
and
sbb
testb
ja
repz
sub
xchg
cli
dec
or
lock
roll
dec
test
add
xchg
xchg
mov
sahf
push
popa
add
xor
add
inc
popa
add
add
add
fsubs
add
add
lret
add
pusha
add
out
add
add
add
mov
add
add
add
test
add
mov
pusha
add
nop
pusha
add
es
add
adc
add
add
add
add
add
add
pusha
add
push
popa
add
xor
add
inc
popa
add
add
add
fsubs
add
add
lret
add
pusha
add
out
add
add
add
mov
add
add
add
filds
dec
gs
popa
addr16
outsl
js
add
inc
push
xor
cs
insb
add
xor
inc
insb
outsl
jae
dec
popa
outsb
fs
add
je
jb
arpl
jae
jg
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
je
jns
je
insl
push
imul
insb
gs
imul
dec
inc
dec
xor
cs
insb
add
lret
add
addr16
insb
outsl
jae
dec
gs
in
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
jne
jb
push
popa
insb
jne
inc
add
inc
inc
push
inc
push
dec
xor
cs
insb
