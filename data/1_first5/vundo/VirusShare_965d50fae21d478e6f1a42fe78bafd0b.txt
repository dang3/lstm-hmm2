jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
outsl
adc
cld
ret
pop
xor
xor
sahf
fldt
jb
add
push
pop
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
int
iret
add
mov
add
add
pop
add
add
add
add
add
add
add
or
inc
add
add
add
out
add
mov
gs
add
add
add
xchg
add
out
popa
add
mov
inc
add
add
add
add
add
add
add
jne
pusha
add
popa
add
add
add
inc
add
popa
add
add
push
add
add
push
add
add
mov
add
dec
add
add
add
popa
add
add
add
add
imul
add
add
add
inc
add
popa
add
add
add
push
add
add
push
add
push
add
iret
add
add
lods
add
add
add
inc
add
add
add
add
add
jmp
sti
add
imul
add
add
dec
add
add
add
ljmp
add
push
add
or
mov
add
add
add
add
push
add
dec
add
add
mov
add
and
add
call
add
add
pop
add
add
and
fldl
push
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
ja
insl
add
add
add
push
add
add
or
and
dec
add
jmp
je
push
add
ljmp
add
add
add
add
ljmp
add
mov
faddl
add
gs
add
add
add
add
cmp
and
add
add
add
out
add
add
add
mov
jb
push
add
add
add
add
add
push
add
or
jp
jmp
fwait
add
and
sbb
imul
jmp
popa
add
pop
add
add
add
add
add
push
add
add
add
add
add
xchg
add
add
outsl
add
add
add
inc
add
add
add
add
add
add
add
insl
add
add
add
add
add
add
or
add
mov
add
add
add
add
add
add
fwait
add
popa
add
and
add
add
adc
add
add
add
push
add
insb
add
add
insb
add
imul
add
add
loope
and
mov
out
and
push
add
add
add
add
add
add
add
push
add
add
inc
add
push
add
jl
out
add
push
add
add
add
out
popa
add
and
xchg
add
add
add
push
add
add
add
push
add
fadds
push
add
add
add
add
mov
add
add
add
add
or
sbb
pop
add
outsb
add
les
hlt
add
add
add
add
and
roll
ljmp
add
add
test
add
sahf
mov
dec
aaa
test
pop
push
cmpsb
cmp
outsl
push
loopne
loop
adc
aad
shlb
jecxz
pop
cmc
xor
jg
mov
sete
xchg
mov
xor
stc
out
arpl
mov
inc
rol
stos
popa
inc
jbe
sub
xchg
jo
xor
inc
psubb
pop
andb
mov
xchg
and
or
jge
cli
cmp
jne
push
popl
cmpsl
sbb
loop
jns
test
inc
sub
push
sbb
test
mov
inc
xchg
fstpt
mov
mov
jle
nop
stos
arpl
jmp
inc
into
fwait
arpl
jecxz
aaa
inc
jl
pop
or
jmp
and
sub
cmp
sahf
mov
jecxz
or
outsb
daa
sbb
mov
inc
cli
vpacksswb
out
lock
dec
divb
cwtl
sbb
stos
mov
mov
das
xchg
sbb
fildll
xchg
adc
pop
pop
icebp
or
aas
aaa
mov
arpl
hlt
jl
int3
shl
cmpsb
pop
sbb
push
dec
push
push
jl
sub
push
xchg
fnstcw
mov
loopne
mov
aas
inc
dec
lds
lret
xor
in
add
xchg
cmpsb
jb
jecxz
mov
in
test
insb
or
fwait
mov
dec
outsl
arpl
fcmovne
cld
add
jmp
out
pop
mov
lea
mov
xlat
andb
sbb
scas
mov
into
fwait
mov
jbe
insb
aam
add
sub
pop
push
cwtl
mov
xlat
jmp
xor
add
cmp
xchg
push
cmovne
mov
jmp
push
fsub
sub
add
enter
mov
addr16
sub
insl
mov
sahf
or
scas
adc
das
push
pop
sub
mov
jmp
test
lods
aas
aaa
mov
rclb
push
sub
hlt
dec
jae
xchg
mov
addl
pop
bound
xchg
out
add
ss
dec
push
mov
inc
mov
mov
jge,pt
push
iret
add
cmpsl
jb
call
std
sbb
adc
jp
pop
fs
pop
lahf
xchg
add
mov
push
add
arpl
add
popa
mov
popl
fidivl
sbb
inc
ret
popa
lods
popf
pop
xchg
sbb
xchg
cmp
fistl
mov
dec
jb
lcall
xor
xor
mov
inc
push
mov
mov
cmp
xor
xchg
frstor
repnz
lea
pop
clc
add
or
aaa
cmpsl
mov
dec
icebp
xor
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
and
mov
and
push
jecxz
nop
jb
mov
jo
pusha
stos
adc
and
jg
dec
lock
loopne
nop
aas
orb
pop
fdivrs
jo
pusha
scas
jl
add
sar
ror
cltd
loopne
nop
ja
and
xchg
arpl
inc
jecxz
clc
pop
in
push
mov
sub
movsb
mov
test
cmp
fdivl
push
sbb
adc
mov
sub
lods
gs
rolb
and
mov
sub
cs
push
xor
jno
shrb
dec
lcall
jnp
daa
cmc
scas
push
add
xor
and
push
add
rcrb
fmuls
mov
xor
orl
scas
lods
mov
and
mov
and
movsb
adcb
sbb
das
scas
scas
or
fsubl
mov
fsubrp
push
jg
mov
cli
mov
mov
pop
adc
mov
jne
adc
xor
dec
lock
das
nop
jnp
cmpxchg
inc
pop
jo
pusha
iret
adc
dec
sbb
lock
inc
cmc
dec
jmp
mov
mov
adc
push
shll
dec
fsubrs
mov
movsl
or
pop
int3
arpl
insb
xlat
sbb
add
cli
data16
xchg
dec
mov
sbbb
push
aas
orb
pop
mov
iret
jo
pusha
scas
adc
and
jg
dec
lock
loopne
nop
aas
orb
pop
mov
iret
jo
pusha
scas
adc
and
mov
and
pop
repz
sbb
mov
pusha
xchg
test
pop
push
mov
ss
inc
in
lods
in
jo
mov
leave
jge
pop
cmp
push
in
pop
jle
dec
or
arpl
add
test
push
mov
pop
jbe
mov
inc
and
inc
push
in
and
cmp
out
push
js
pop
aaa
rclb
mov
or
dec
pop
jl
aad
ds
sub
inc
stos
xchg
inc
loop
or
xorl
pop
fcmove
mov
call
sub
fucomip
dec
inc
cmp
adc
outsl
in
in
cvtdq2ps
cwtl
mov
xchg
push
insb
adc
lea
std
stos
data16
fiaddl
jno
pop
inc
inc
or
sub
push
cmovne
in
or
movsb
nop
test
sbb
and
cmp
ds
and
cltd
mov
sub
mov
out
shl
stos
xor
mov
mov
mov
fistps
shrb
loopne
sbb
or
inc
cmc
sahf
ret
cmp
aaa
mov
insl
pop
sub
jbe
aas
cltd
cmp
jl
xor
test
test
and
arpl
test
jo
into
cli
movsb
lahf
loop
ja
int3
nop
movsl
dec
into
popf
data16
pop
in
fcmovnbe
add
push
sbb
dec
hlt
fwait
mov
adc
cmp
arpl
lods
jnp
test
flds
loop
fs
mov
lcall
mov
xchg
loope
cmpsb
fcompl
movsl
sub
mov
sbb
fildl
inc
cmp
adc
xor
sbb
gs
scas
mov
in
sbbl
repnz
or
lods
lcall
lods
notb
imul
sub
lret
outsb
adc
sbb
pushl
cld
loopne
xor
clc
ds
int
add
rcrb
out
push
xor
adc
popa
mov
ss
mov
adc
adc
mov
loope
sub
or
jg
cwtl
jb
pushf
push
jb
dec
std
push
cmp
jbe
adc
xchg
mov
pusha
mov
int
or
mov
xchg
loop
decb
mov
cmp
mov
xchg
mov
adc
inc
iret
aaa
movsl
inc
mov
jnp
nop
fwait
and
xchg
push
adc
sbb
adc
push
xchg
and
pop
inc
scas
rcll
dec
mov
loopne
test
mov
or
adcl
push
pop
lret
std
inc
dec
jbe
imul
lret
mov
dec
cmp
dec
fmull
mov
dec
test
xor
and
adc
shl
mov
rcll
in
mov
mov
xchg
rol
mov
fldcw
or
push
adc
push
xchg
or
out
out
nop
test
mov
xor
and
lahf
mov
mov
mov
je
sub
or
test
fsubs
fmul
sub
xchg
lods
in
or
hlt
fs
cltd
sbb
iret
xor
jbe
sti
dec
movsb
xor
std
mov
sbb
dec
das
jecxz
dec
in
nop
ljmp
fldlg2
xchg
cli
stos
fsts
shll
das
xchg
dec
or
cmp
popa
cmp
inc
arpl
pop
mov
rorl
lcall
jbe
mov
bound
inc
outsl
push
test
pop
xor
div
adc
inc
xor
lcall
sbb
sub
add
xchg
fidivrl
lret
out
js
xor
jae
pusha
in
pop
ret
xor
fimuls
dec
and
data16
cmpsl
or
add
dec
subb
cmp
inc
adc
test
cmpsl
mov
sbb
pop
cmc
dec
movsb
push
lds
inc
lods
sahf
dec
push
inc
es
pusha
xor
cmc
mov
lret
push
cltd
mov
sahf
xor
push
inc
or
mov
jnp
stos
inc
out
push
adc
ret
sub
push
mov
adc
jmp
sbb
js
mov
hlt
fiaddl
adc
in
sbb
mov
jae
sbb
shlb
test
aaa
xchg
hlt
pop
out
in
fdivrl
push
out
repnz
pop
sub
jp
sub
jns
cmp
push
mov
aaa
xor
push
cmp
mov
mov
inc
xchg
cli
or
shll
mov
pop
jno
adc
adc
fwait
add
cmc
xchg
repz
aas
and
fistps
push
imul
mov
pop
outsb
add
inc
adc
push
out
cld
loope
sbb
test
xlat
rcrl
js
pusha
dec
pop
jg
sub
fiadds
add
ja
mov
fdiv
mov
xchg
mov
inc
xor
fsub
cmc
and
adc
add
sahf
enter
int
loop
icebp
inc
out
outsl
or
or
clc
cmp
call
mov
mov
mov
pop
test
jo
roll
lret
or
dec
aas
sub
mov
sub
hlt
push
xchg
inc
out
add
movsb
mov
xorps
pusha
test
pop
pop
in
in
imul
jnp
sbb
testb
outsb
pop
xchg
sahf
jle
divl
pop
xchg
movsl
cmp
mov
dec
xchg
mov
pushf
mov
test
mov
ficoms
jo
add
push
mov
xchg
stos
cmp
ja
popa
mov
push
pusha
xchg
dec
xchg
mov
imul
rclb
add
mov
leave
jge
mov
stos
dec
xchg
pushl
inc
sbb
fwait
xor
mov
stos
inc
movsl
mov
sbb
mov
inc
cmp
xchg
pop
sub
lods
outsb
test
xor
adc
fdivl
dec
sbb
mov
aas
mov
lock
add
xor
adc
fmull
push
adc
sbb
adc
jb
dec
add
nop
nop
imulb
push
push
enter
xchg
inc
bound
std
push
jecxz
orl
xchg
cs
pop
popf
sub
xchg
pusha
cli
inc
push
ret
fwait
shl
xchg
and
inc
fsubr
rorl
movsl
iret
std
sub
vshufps
cmpsl
adc
pop
mov
and
sub
pop
rcr
push
stos
sub
lea
mov
sbb
clc
pop
out
in
js
rol
popf
lock
cli
roll
aas
mov
insb
sub
xchg
sub
fistl
test
jno
push
cmp
subb
pop
xlat
adc
mov
jp
jp
dec
sbb
nop
mov
aaa
cmp
cmc
mov
sbb
jecxz
add
cmp
mov
pop
mov
and
dec
fdivrs
cltd
add
and
ss
fucomip
push
iret
aam
and
or
push
cwtl
pop
pop
xor
and
mov
addl
popf
les
pop
cld
mov
in
js
subb
push
xchg
or
inc
jns
or
xchg
fmuls
leave
inc
imul
loope
jmp
pop
pop
fisubrs
shr
mov
out
aaa
aas
aad
les
lcall
and
lret
lret
ds
xor
rorb
fimull
cwtl
leave
in
cmpl
push
adc
adc
sub
pusha
out
jge
adc
test
jle
popf
mov
movsl
pop
adc
popa
mov
sbb
adc
push
push
lods
sbb
ret
das
push
pop
xchg
lahf
iret
call
in
fisubrs
jl
push
sub
inc
mov
pop
cs
or
cmp
mov
xchg
push
jmp
or
sub
dec
or
cmpsl
cmpl
dec
pop
les
or
mov
dec
or
xchg
lods
popa
scas
jge
xchg
out
add
jp
lcall
repnz
fisttps
or
addb
xor
scas
push
ficompl
push
sub
fldt
call
or
out
mov
mov
mov
and
mov
ret
push
cmp
dec
fs
xlat
scas
fs
pop
test
nop
addr16
xchg
jb
mov
jle
lahf
xchg
mov
jnp
js
stos
je
sub
mov
inc
xchg
lds
enter
mov
bswap
mov
and
pop
jo
mov
lahf
sub
negb
sbb
pop
scas
stc
adc
mov
dec
push
push
cs
and
mov
jnp
lahf
scas
int
in
ja
sbb
xor
inc
aam
xchg
mov
push
adc
or
repz
pop
shr
cmpsb
mov
xor
inc
push
xorb
sub
xor
sti
cli
cmc
jl
or
push
loope
sbb
ss
jnp
inc
pop
loopne
mov
data16
test
cmp
lret
xchg
push
testl
jb
cli
mov
and
ret
cwtl
and
jmp
arpl
in
mov
pop
sarl
fimull
leave
ja
mov
xlat
pop
lods
dec
test
inc
and
sti
gs
lret
popw
mov
outsl
push
stos
push
cmpsl
addr16
pushf
in
push
inc
lods
sbb
inc
rcl
lahf
jmp
into
mov
sbb
insl
xchg
jmp
fwait
pop
add
arpl
sub
jae
jo
sahf
stos
lods
pop
rcrb
pop
and
jbe
fwait
xor
add
dec
shrb
xchg
dec
xchg
sbb
dec
push
fisttpll
fldenv
rcrl
scas
push
hlt
bound
repz
mov
xlat
pusha
sub
pop
mov
push
dec
es
lods
mov
mov
jp
add
out
or
xor
cwtl
jg
lods
mov
scas
or
xchg
es
negl
push
das
out
adc
lods
repz
or
int
jmp
pop
xor
arpl
add
negl
jecxz
sarb
push
cli
scas
mov
sbb
push
outsl
out
call
jns
sub
pop
sbb
jns
mov
je
sbb
push
sahf
div
leave
cmpsb
jl
and
xor
or
fidivrl
flds
pop
test
cmp
jno
enter
insl
mov
xchg
cmp
xor
adc
not
mov
into
lods
arpl
popa
or
out
mov
inc
mov
arpl
cmpsb
xor
es
in
mov
subl
xor
jp
push
jmp
cmc
data16
lods
push
je
dec
sbb
sti
cmp
pop
xor
mov
xchg
jno
cs
jae
call
mov
mov
jp
and
test
scas
add
xor
push
mov
int3
adc
shll
adc
arpl
daa
cwtl
inc
cld
aad
push
movsb
shl
sqrtps
pop
cmp
jns
or
push
rcrb
push
or
sahf
push
push
add
pop
or
out
shl
mov
test
roll
out
jg
push
pusha
mov
leave
mov
add
push
loop
adc
push
lds
pushw
xchg
inc
std
xor
shrb
ret
mov
jle
jne
loope
mov
mov
mov
pop
cli
xchg
lea
inc
inc
pop
std
xchg
leave
arpl
movsb
setb
loopne
imul
stos
popa
ss
fdivrs
xlat
jl
cs
mov
call
xlat
mov
lret
fsubl
or
or
adc
mov
hlt
and
popf
repz
pop
pop
in
xlat
pusha
insb
xchg
into
pop
cmp
outsb
jne
adc
fwait
xchg
add
inc
loope
inc
enter
mov
loope
mov
call
shrb
rcrl
test
stos
data16
test
jno
outsb
leave
jo
pop
jge
test
jp
stos
rorl
test
xchg
pop
imul
mov
xchg
pop
fwait
inc
and
test
iret
sub
mov
mov
out
std
mov
mov
mov
sub
in
add
adc
dec
mov
jg
leave
stos
mov
jae
mov
adc
mov
xor
adc
cmp
pop
jo
xchg
in
pop
adc
data16
add
dec
ljmp
jbe
mov
mov
call
add
xchg
mov
test
test
rcrl
xchg
js
mov
jmp
js
xchg
aam
decl
sub
pusha
inc
das
cmp
data16
sbb
push
in
xchg
leave
inc
cmp
stos
inc
and
mov
leave
xchg
mov
push
in
push
dec
xor
add
dec
sbb
mov
movsb
fwait
mov
cltd
pop
fsts
inc
jecxz
cmp
or
insl
cmpsb
out
test
mov
sti
imul
int
push
or
mov
pop
lret
fisubrl
cmp
jp
sbb
int3
push
mov
mov
pop
jbe
fstl
dec
int3
ret
pop
inc
sub
push
adc
cs
int
aam
jmp
movsb
jge
stos
lods
inc
fisttpll
jecxz
sbb
push
fimull
cltd
ret
lcall
sahf
cmp
jmp
and
inc
push
adc
in
int3
je
add
inc
push
loope
push
xchg
les
add
mov
inc
dec
sub
test
int3
and
adc
movsl
in
in
xchg
lahf
pop
popa
sub
in
and
lret
jb
pushf
sbb
adc
dec
cs
stc
push
dec
mov
mov
imul
jnp
inc
imul
popf
push
loope
lods
xchg
add
test
in
ret
mov
shll
push
push
aas
xchg
xor
outsb
pop
inc
mov
push
push
clc
js
icebp
sub
scas
aad
or
lret
leave
int
ret
sbbb
ret
xor
cs
cmp
sub
jmp
int
mov
loopne
lds
xchg
mov
push
sbb
mov
jno
stc
insb
movb
sub
jmp
inc
mov
lds
cmpsb
es
push
and
iret
sbb
jnp
mov
sub
mov
cltd
aas
pop
and
sbb
inc
lods
fwait
adc
push
jnp
push
scas
mov
jo
sahf
pop
sahf
sbb
faddl
arpl
inc
push
add
jno
pushf
adc
loopne
rcrb
test
xchg
test
mov
mov
xor
in
mov
mov
adc
enter
int
mov
mov
test
out
divb
data16
and
or
cmp
nop
ja
jg
fidivl
jl
cmp
repnz
mov
lods
inc
scas
xchg
mov
popl
dec
sti
sub
adc
xchg
imul
loope
sub
into
jno
dec
jl
xchg
icebp
xchg
mov
sub
mov
aam
test
mov
xor
mov
outsl
pop
push
nop
xchg
inc
cmp
mov
repnz
int
cmp
nop
es
inc
xor
cmpsl
dec
ja
scas
rep
push
div
in
mov
jns
nop
sub
popa
push
scas
in
inc
popf
adcb
dec
sahf
mov
cltd
xchg
stos
inc
mov
es
mov
dec
nop
cltd
cmp
jae
sbb
sub
sub
mov
nop
jecxz
pop
sbb
mov
inc
and
aas
or
push
cld
insb
cmp
orl
iret
js
mov
fs
mov
add
inc
inc
outsl
push
call
jmp
mov
add
add
das
adc
or
mov
addr16
shlb
pop
xchg
mov
inc
cwtl
enter
and
push
and
push
ret
xor
jo
mov
adc
sub
popa
push
gs
scas
mov
mov
outsb
pop
jns
lock
cmp
dec
testl
and
mov
sub
dec
mov
pushf
nop
test
cmc
pop
pop
rcrl
mov
mov
out
push
sahf
mov
leave
cwtl
mov
rclb
sarl
add
jle
ljmp
pusha
adc
in
aas
push
mov
mov
push
dec
push
outsb
lret
dec
push
sbb
push
xor
push
lcall
ret
lea
pop
dec
jecxz
dec
cmp
arpl
lret
sub
loop
lret
mov
js
xlat
sub
xor
inc
out
push
icebp
movsb
mov
adc
add
test
push
dec
dec
aas
or
loopne
pop
xor
in
ds
andb
test
cmp
fs
ret
or
decb
adc
push
leave
cltd
adc
pop
or
iret
ret
ja
lret
inc
ret
hlt
fucom
mov
push
pushf
lods
and
divb
mov
fmull
mov
mov
push
cmpsb
repz
scas
sti
mov
push
stos
sub
xor
ret
cmpsl
cmpsl
or
lret
stc
xlat
xchg
daa
cmpsl
adc
xchg
loop
cmp
sbb
dec
divl
jmp
xchg
adc
push
add
and
std
inc
cmpsb
cmp
mov
loope
xlat
inc
lock
pop
mov
dec
lea
xor
fs
sbbb
pop
sahf
movl
hlt
inc
push
xlat
push
fwait
jno
inc
hlt
negb
mov
fmull
or
cs
pop
out
mov
or
nop/reserved
lods
inc
fucom
mov
jae
jb
lods
pop
cmp
mov
mov
push
mov
mov
push
xchg
lahf
insb
fsubrs
jle
lods
insb
btrl
mov
mov
xchg
push
inc
fidivrs
or
dec
inc
rolb
lock
insb
mov
jbe
inc
mov
out
jge
jp
shlb
imul
add
fnstenv
adc
sub
or
repz
mov
or
or
test
int
outsl
outsb
pop
divl
cltd
xchg
push
dec
fstpt
enter
or
cmpsb
and
add
stc
ficoms
sbbb
fcomps
mov
cmp
scas
cmp
movsl
andl
xchg
and
mov
dec
cmp
or
out
or
mov
je
and
mov
add
faddl
scas
vpcmpeqw
inc
popa
xchg
xchg
cmp
mov
cmp
mull
adc
push
je
push
mov
loope
cmp
dec
shll
testl
jmp
mov
sysret
dec
shll
imul
or
andb
push
pop
inc
hlt
popa
push
addl
iret
stc
test
icebp
leave
shll
and
fiadds
and
lock
cs
sub
jne
jl
outsl
fsts
movsl
xchg
sub
jl
add
hlt
adc
sbb
cli
xchg
cmp
ds
movsl
pop
jb
and
push
fisttps
mov
mul
frstor
int
xchg
pushf
ds
cmp
push
aaa
cld
scas
test
jecxz
js
sbb
fsubrl
repnz
inc
mov
repnz
std
cmpsl
cmpsl
je
scas
pop
imul
imul
sahf
sbb
dec
mov
jnp
pop
movsl
adc
dec
pushw
ficomps
cltd
jmp
cmp
popf
inc
test
jecxz
lods
jnp
jno
mov
pop
or
into
dec
inc
rorb
mov
xchg
xchg
jecxz
in
pop
dec
and
xchg
sahf
fisubs
pop
dec
xchg
mov
inc
imul
sahf
out
jns
or
dec
cmp
ss
pop
sbb
sbb
add
rolb
cmc
jmp
push
or
std
pop
stos
imul
mulb
add
dec
push
fcompl
xchg
fisubrl
daa
ret
mov
sub
pop
push
xchg
pop
popa
and
enter
cld
ret
mov
dec
pop
ja
fildl
dec
inc
testl
inc
sbbl
scas
jno
aad
sbb
push
xor
loope,pn
mov
out
lock
popa
sbb
adc
add
mov
out
std
inc
add
leave
cs
insb
push
out
xchg
jecxz
stos
insl
jbe
in
adc
cmpl
arpl
sub
pop
mov
inc
inc
out
sarb
pop
dec
xor
and
out
jne
dec
xchg
sti
xor
pushw
std
push
pop
sahf
xor
int
ficoml
cltd
cmp
cmpsl
mov
inc
rclb
push
fidivl
scas
adc
popa
pop
in
pop
add
push
jp
pop
aaa
and
int3
sti
sub
int
test
std
jmp
imul
imul
mov
int3
scas
je
jg
add
push
sbb
fisubl
dec
dec
fisttps
mov
repnz
ljmp
dec
mov
add
sub
mov
mov
rcrb
das
nop
aas
orb
pop
mov
iret
jo
pusha
scas
adc
and
jg
dec
lock
loopne
nop
aas
orb
pop
mov
iret
jo
pusha
scas
adc
and
jl
pop
lock
loopne
nop
cmp
jmp
incl
jo
pusha
scas
adc
and
push
rol
ja
das
nop
das
orb
lahf
mov
gs
pop
fcomps
pusha
fists
pop
add
out
sub
xchg
cmpb
push
mov
jbe
push
loop
adc
and
jb
andb
mov
lods
push
rolb
loop
or
cmp
push
int3
mov
mov
push
shlb
lods
sbb
cmpsb
insl
fbstp
repnz
sbb
mov
movsl
pop
adc
jns
cmp
cli
inc
fimull
rorl
dec
push
sahf
push
insl
inc
or
dec
negl
cmpsb
stos
fimuls
pop
push
and
and
inc
sbb
xor
fldenv
mov
idiv
mov
cmp
mov
das
xchg
shlb
jbe
mov
adc
lods
movb
sahf
arpl
sbb
leave
xchg
pop
jmp
jns
loop
inc
sahf
push
mov
pop
or
xchg
xchg
xlat
xchg
stos
inc
ss
push
push
sub
ret
inc
repnz
jne
fstpl
faddl
cmp
mov
adc
push
xchg
xor
loop
and
fistpll
mov
lcall
jle
popa
call
ret
addr16
xchg
and
bound
rcll
rorb
cmpsl
and
jge
arpl
ds
inc
les
xor
mov
jecxz
rclb
sbb
outsb
rcrl
dec
jecxz
mov
jb
xchg
xorb
push
mov
jbe
inc
loop
adc
and
jb
xchg
xorb
push
mov
jbe
inc
loop
adc
push
test
fildl
push
iret
mov
mov
jmp
ret
sub
inc
data16
dec
rcrb
fsub
add
aam
sub
lea
repnz
and
js
ljmp
jl
inc
mov
mov
mov
data16
sbb
outsb
add
outsl
pop
xchg
push
pop
sub
out
inc
into
sbb
cs
jmp
jp
das
ret
or
and
push
fbstp
push
and
sub
or
push
pop
les
xchg
imull
xchg
xchg
push
shlb
cmpsb
and
imul
mov
cwtl
das
sub
testl
jecxz
cwtl
daa
pop
incl
in
push
cwtl
movsb
xor
aad
and
pop
xchg
pop
hlt
int3
adc
cld
mov
mov
jmp
lods
movsb
test
cmp
ds
sbbb
daa
mov
pop
sbb
mov
add
push
loop
repz
mov
fs
pop
ja
cltd
cmp
fmuls
xchg
sub
bound
lea
lea
mov
push
push
mov
adc
mov
cs
sub
arpl
jmp
inc
push
mov
lea
xor
inc
push
aas
out
dec
aad
mov
or
xor
rcll
or
out
mov
xor
and
in
clc
jmp
inc
mulb
aas
cmp
xlat
xor
rol
inc
jl
fwait
and
fsubrp
sahf
dec
popf
lock
nop
int3
mov
mov
test
cmp
jns
enter
aas
jae
cmpsb
scas
xchg
sarb
mov
rorb
sub
pop
and
mov
in
mov
pusha
sbb
mov
jnp
cmp
inc
mov
mov
stos
jecxz
dec
xor
subl
lahf
mov
and
lock
and
and
push
pop
div
or
arpl
lds
xchg
or
or
std
in
dec
sub
in
ret
sub
or
inc
push
les
lret
or
jns
test
inc
xor
and
shlb
push
lods
fiadds
xchg
test
outsl
mov
cltd
dec
push
sub
push
dec
push
test
aaa
outsl
push
clc
fidivrs
cmp
push
sbb
mov
jnp
scas
ja
xor
fnstcw
push
test
xorb
imul
ljmp
mov
fdivr
add
jno
or
or
xchg
in
mov
test
add
xor
xlat
stos
mov
xchg
aaa
psrlw
xchg
cmpsb
xchg
pop
fbstp
and
mov
stos
add
jbe
out
inc
repz
pop
orb
daa
jl
mov
mov
sbbb
pushf
lcall
push
xchg
mov
shrb
aad
dec
sbb
cmc
push
xchg
mov
adc
fsubr
loop
addr16
hlt
in
addr16
outsl
fsubrs
inc
std
inc
insl
pop
push
sbb
stos
out
cmp
pop
cltd
repnz
lret
cli
ljmp
add
lcall
mov
adc
ja
pop
mov
cld
sbb
into
outsl
les
inc
xor
divps
mov
cli
push
cmp
mov
sbb
cwtl
jnp
loopne
clc
daa
stos
dec
sbb
sub
or
arpl
movsb
xchg
loop
xor
xchg
mov
adc
and
test
jo
fdivr
into
rcrb
push
mov
dec
cli
add
inc
mov
mov
push
and
or
sbb
mov
mov
popa
xchg
mov
adc
in
rcrb
int3
add
fcoms
push
xor
push
fisubrs
jg
ret
adc
pop
sbb
inc
xchg
mov
mov
xor
and
sbbl
sub
insl
add
addb
rcr
fiadds
lcall
jnp
in
push
pushf
pop
rdtsc
push
sub
leave
mov
sub
mov
test
rcr
outsl
jge
inc
fisttps
inc
xchg
sbb
sbb
jb
and
mov
and
jmp
inc
adc
popf
sbb
add
mov
nop
test
divl
adc
ja
subb
popf
mov
aam
push
dec
les
jg
in
cli
in
sub
xor
pop
dec
test
stc
push
movsl
push
push
or
cmpsb
call
jecxz
jecxz
sbb
mov
jae
jmp
nop
arpl
xchg
bound
sbb
cmp
outsl
in
out
dec
mov
xchg
clc
jle
sub
xchg
ret
inc
mov
aas
rcl
jecxz
inc
cmc
test
jne
mov
in
sub
sub
scas
mov
in
xchg
sub
stos
movsl
arpl
stc
les
movl
pop
xchg
es
sbb
enter
fnstsw
andl
cmpb
xor
sti
adc
out
loope
lcall
jge
in
push
push
pcmpgtw
call
inc
les
inc
sbb
or
pop
ja
mov
stos
and
stc
cmp
adc
es
rorb
sbb
jg
cs
or
test
std
sub
hlt
in
push
sub
call
pop
clc
push
push
pop
ss
push
ret
ret
cmp
pop
push
jo
repnz
or
lods
stos
pop
mov
shrl
adc
std
push
sub
mov
stc
scas
sbb
lcall
pushf
movsb
mov
jbe
inc
loopne
pop
sbb
shrl
out
pop
cmp
adc
dec
in
aaa
jne
and
filds
mov
cmp
icebp
iret
add
cmp
stc
ds
aad
test
jb,pt
testb
cs
cli
testl
in
hlt
push
pop
pop
sahf
push
inc
and
xchg
sub
inc
rorl
insb
inc
mov
jno
push
sbb
popf
pop
jl
aaa
dec
or
cmp
xchg
arpl
mov
or
jnp
repz
jb
mov
mov
sbb
mov
jb
mov
fcmovnu
jp
idivl
ds
inc
dec
in
mov
add
inc
and
test
inc
jmp
or
fincstp
out
scas
mov
dec
sub
add
cmpsb
insb
mov
jg
aad
sahf
mov
sbb
push
fnstcw
or
data16
jbe
repz
dec
push
std
push
out
push
push
add
andl
test
push
adc
pop
inc
jmp
test
xor
inc
dec
adc
cmp
mov
inc
mov
adc
mov
movsb
cmpsb
iret
cs
scas
repnz
xchg
pop
ljmp
repnz
sbb
push
ljmp
mov
jns
jbe
mov
stos
add
cmp
cmp
test
cld
push
aas
sahf
sub
xlat
mov
jmp
pop
inc
push
mov
lock
fsubl
mov
insb
rcrb
pop
daa
cs
test
push
daa
dec
wrmsr
icebp
stc
add
imul
and
sbb
imul
das
ret
inc
mov
lcall
outsl
ds
and
add
int
mov
cmp
sbb
aaa
xor
sbb
sti
xchg
mov
sub
sub
int
mov
es
jmp
mov
sbb
mov
sub
in
addr16
push
mov
xor
xchg
insl
add
add
adc
xor
add
pop
addb
xor
jg
push
mov
aas
test
rcll
xchg
sbb
movsb
adc
mov
xchg
in
adc
fs
sub
aaa
jle
out
adc
dec
movsb
stos
push
fxch
mov
inc
dec
xchg
lcall
test
mov
mov
xchg
stos
insb
xchg
xor
sahf
fwait
imul
push
mov
stc
mov
xor
out
push
movsb
push
cmp
xchg
test
push
pop
mov
xchg
mov
mov
fdivr
or
xchg
cmpsl
add
push
sub
test
inc
cmpsl
and
xchg
into
les
dec
aas
mov
inc
lds
data16
add
insb
cs
xchg
mov
push
xor
jle
stos
call
adc
and
into
adc
stos
jae
les
repnz
mov
icebp
shlb
aaa
mov
mov
cmp
push
add
adc
push
repz
sub
sbb
data16
cmpsb
xlat
insl
and
sub
jmp
lods
loopne
jnp
lds
push
or
sbb
cltd
pop
pusha
int
xchg
dec
mov
imul
movsb
dec
int
rol
enter
xchg
mov
pop
cmp
idivl
sbb
into
js
bound
mov
leave
fisubs
adc
jbe
jno
and
cmp
sbb
subb
sbb
icebp
fisubl
lods
aas
out
popa
add
xor
jb
fsub
pop
aam
mov
dec
sub
dec
inc
clc
insb
add
nop
pop
mov
dec
mov
and
adc
mov
aaa
sbb
stos
sub
movsl
test
cli
jnp
fbld
arpl
sub
jo
xor
jle
and
and
shlb
outsb
int
jmp
stc
push
leave
rol
xor
pop
mov
push
and
in
add
iret
sbbb
shrl
iret
enter
arpl
repnz
jg
inc
lods
mov
mov
cld
xchg
cmpsl
xor
push
pop
mov
out
fiaddl
add
push
jg
pop
jns
jecxz
mov
pushf
mov
xchg
out
push
add
inc
dec
repz
out
sbb
jg
es
or
jle
lea
and
sbb
lret
rcll
push
cld
rorb
iret
js
in
aaa
and
sbb
fnsave
jb
cmc
cmc
sti
mov
cmp
sub
sbb
arpl
sbb
and
push
mov
xchg
movsb
pop
ljmp
xorb
arpl
or
pop
aam
jp
dec
lahf
std
lods
cmp
in
out
inc
outsb
fidivs
jae
mov
pusha
lahf
out
pop
mov
dec
test
add
into
cmp
dec
lock
leave
sub
inc
pop
fdivrs
xor
xor
hlt
inc
xchg
dec
jmp
outsl
aad
cli
rorl
dec
mov
fidivrl
sbb
movsl
mov
mov
push
mov
mov
cmp
jp
jb
adc
or
or
pop
lds
push
mov
fimuls
pushf
popl
xchg
shll
sub
or
repnz
call
test
shrb
push
hlt
in
call
lods
popa
cmp
ljmp
mov
xor
cltd
sub
in
sbb
test
mov
mov
mov
mov
cmp
fs
in
xchg
sub
sbb
mov
shll
or
push
nop
pop
gs
gs
adc
pop
mov
fcmovnb
sbb
aam
push
dec
rorl
xor
cli
or
sbb
and
jl
pop
xlat
pop
cmp
pop
pop
pop
sti
icebp
sbb
mov
insl
mov
dec
lcall
cli
cmp
push
adc
jno
push
rolb
arpl
stos
stc
out
sarb
adc
adc
insl
gs
dec
jnp
loope
adc
sbb
scas
lock
jg
inc
mov
xchg
fwait
dec
cli
mov
in
inc
sbb
dec
lret
and
fdivrl
outsl
add
test
add
inc
pop
dec
mov
lret
mov
mov
push
mov
jmp
xchg
fcoms
test
sahf
aaa
rcl
or
inc
sbb
iret
sub
xchg
mov
mov
cmp
in
mov
jp
shlb
xor
in
ret
mov
repz
push
fs
lret
push
xor
xor
aam
lods
sahf
outsb
mov
push
icebp
hlt
or
sbb
add
mov
inc
incb
push
xchg
lds
jge
int3
out
sub
fs
cwtl
mov
cmpsb
add
sub
mov
mov
gs
pushf
jge
repz
or
mov
adc
xor
xor
lret
lock
cli
pop
adcl
daa
aam
pop
filds
ret
sbb
fbld
hlt
jmp
inc
sbb
cmc
shl
sub
xor
sbb
push
xchg
xchg
sbb
in
ja
jnp
scas
inc
int
mov
add
aad
fstpt
insb
xor
xor
xchg
sub
or
push
add
pop
push
pop
mov
add
divl
js
dec
push
fmulp
mov
jp
sbb
push
and
int
fadds
insw
hlt
push
cltd
in
inc
mov
into
imul
cmp
xchg
push
jae
xor
inc
cld
daa
cmp
sbb
imul
push
cmpsb
test
dec
xor
fcoms
push
jnp
mov
lret
outsl
loop
xor
push
adc
lods
dec
adc
pop
loop
jbe
sbb
and
mov
xlat
or
clc
call
dec
jp
sarb
idiv
cld
daa
mov
xor
push
and
in
mov
dec
stos
rcr
mulb
mov
in
rclb
inc
nop
sbb
in
xor
jo
iret
stos
sub
xchg
outsb
mov
or
push
inc
imul
pop
arpl
divl
pop
pop
xchg
and
adc
fisubl
hlt
mov
inc
sbb
push
lcall
fsubrs
mov
mov
xlat
icebp
movsb
mov
pop
int
lods
in
pop
jns
jb
jg
loope
es
cld
pop
lea
test
cmc
lret
scas
jno
xor
jle
mov
negl
lds
lcall
outsb
or
fimuls
or
jne
sti
lds
iret
add
push
insl
dec
adc
stos
add
push
data16
mov
imulb
xorb
or
pushf
incb
xor
test
ja
imul
mov
enter
xchg
xchg
mov
sbb
jl
aam
sbb
addr16
and
dec
xchg
push
stos
push
sbb
data16
jp
adc
mov
or
inc
movsl
adc
mov
and
icebp
popf
mov
pop
inc
cmpl
fists
push
push
xor
or
outsl
cmp
push
xor
sbb
lret
adc
bound
pop
or
out
xchg
in
pusha
sbb
cmp
imul
cmp
and
add
and
xchg
mov
clc
jb
mov
sub
mov
mov
cltd
fdivrs
cwtl
push
arpl
sbb
shrb
test
outsb
mov
imul
cmp
cmp
cs
sbb
cwtl
add
fisubrs
fstpl
sti
xchg
mov
and
inc
cmpl
sub
loopne
mov
cmpsl
push
insb
pop
stc
sbb
sarb
xchg
and
jno
sbb
mov
jbe
mov
sarl
mov
rcrb
out
mov
sbb
and
arpl
sub
adc
mov
xor
arpl
fnstcw
adc
addb
push
push
mov
insl
test
mov
push
adc
mov
rcl
jae
rclb
rcr
or
xor
fdivrp
xlat
out
lods
addr16
cmpsb
inc
push
push
dec
fsubrl
jg
test
lahf
dec
fucomp
fldenv
pop
in
lret
repnz
xchg
fdivrl
hlt
stc
loope
and
jne
jle
push
or
and
inc
xchg
sub
xchg
xchg
sub
dec
mov
pop
cmp
adc
pop
fst
add
or
lods
fldcw
popf
mov
push
clc
aas
scas
popf
arpl
adc
push
xchg
pushf
push
je
sub
cltd
ljmp
insl
pop
sbb
jo
jb
cmp
jmp
pop
fimull
paddusw
jo
and
andl
pushf
dec
sub
mov
inc
rolb
dec
dec
pop
ret
stc
je
and
scas
ds
out
stos
clc
iret
add
mov
inc
dec
rcrl
test
xchg
and
cmpl
xchg
ja
fadd
jb
inc
mov
shl
in
lret
cmc
inc
pop
lods
push
in
lahf
mov
pop
push
jae
push
insl
sahf
and
fdivrl
lods
cmp
cmpsl
cmp
popa
jne
push
xor
movsb
hlt
mov
push
les
and
fadds
sbb
out
add
sbb
inc
rcll
mov
sub
mov
mov
repnz
cmp
out
pop
stos
inc
enter
lods
sbb
adc
enter
jle
stos
pop
pusha
sub
movsb
scas
fldt
shll
pushl
test
jno
test
arpl
add
pop
outsl
push
sub
cmpsb
scas
mov
outsl
xchg
test
test
push
inc
imul
jbe
inc
sahf
sub
mov
out
stos
idivl
test
sbb
mov
movsl
mov
sbb
sub
adc
stos
je
test
cwtl
sbb
fisubs
movsb
xor
sbb
int3
adc
mov
push
add
adc
mov
test
cmp
clc
pop
mov
inc
xchg
mov
ds
sahf
jo
mov
add
adc
sbb
pop
insb
add
data16
jl
and
lcall
jle
aaa
pusha
hlt
add
out
or
or
lods
mov
cltd
xor
mov
pusha
in
enter
test
leave
es
xchg
xor
sbb
xor
jno
cmp
xor
and
or
mov
mov
in
jno
cmp
adc
adc
mov
push
dec
sbb
mov
into
into
or
rorb
aam
mov
pop
xchg
xchg
sbb
iret
movsb
adc
adc
bnd
push
push
jo
mov
pop
sti
add
mov
pushl
push
std
stos
push
sbb
push
scas
xchg
leave
cld
inc
or
in
cmp
mov
and
jns
mov
sub
notb
jl
xchg
jge
negl
bound
pop
mov
inc
jmp
into
or
adc
ja
iret
cmc
lock
inc
cld
nopl
iret
inc
popa
mov
and
push
mov
adc
xchg
in
in
clc
scas
aaa
inc
and
popa
adc
jae
fists
test
and
mov
fwait
mov
cltd
mov
stos
push
or
fistpl
pop
push
daa
outsl
push
mov
mov
into
in
adc
jns
inc
sbb
or
scas
mov
cli
insl
test
add
push
and
sarl
lods
sbb
in
mov
jnp
scas
jns
clc
loopne
xlat
je
sbb
stc
add
pop
jbe
jae
test
shlb
jge
arpl
leave
enter
add
fs
je
push
sbb
cmp
or
push
jo
dec
stos
xlat
mov
cmp
cmp
loop
daa
push
cltd
and
or
data16
cmp
ljmp
and
ret
shrl
push
xlat
add
test
xchg
cmpsb
push
xchg
sbb
sbb
sti
jae
xchg
or
into
imul
mov
scas
mov
xor
ja
pop
pop
adc
mov
iret
add
loopne
or
lahf
fistps
lret
cmp
stos
cmp
xor
mov
test
xchg
rol
sbb
daa
test
sub
cs
pushf
aas
xchg
arpl
fisubrs
cmp
nop
jns
shrl
ret
shrl
push
pop
negl
jns
push
add
mov
cli
cs
sub
sub
jae
fwait
or
shl
cmp
jae
and
jg
pop
lods
xor
sbb
adc
push
lret
sbb
xor
mov
push
cltd
shll
push
jl
and
push
mov
and
loope
ret
dec
stos
aas
in
icebp
add
test
jbe
xchg
bnd
shlb
sbb
data16
mov
lret
je
arpl
mov
xchg
sbb
fwait
andb
fwait
repnz
sahf
push
jne
and
pop
adc
push
scas
or
je
fldcw
inc
testl
lahf
sub
or
enter
rorl
es
std
popf
pop
das
icebp
insl
in
pop
pop
lods
add
ret
xor
loop
test
jb
sub
roll
mov
cwtl
ror
dec
in
scas
add
fiadds
mov
fistpl
fcmovnb
loopne
inc
dec
jno
sub
mov
imul
divb
xchg
xorb
push
mov
jbe
inc
loop
adc
and
jb
xchg
xorb
push
mov
jbe
inc
loop
adc
and
jb
xchg
xorb
push
mov
jbe
inc
loopne
adc
and
repnz
loop
insl
es
sbb
mov
mov
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
or
cmp
push
jb
mov
cltd
push
test
mov
shr
data16
jbe
xchg
xchg
sub
pop
push
push
cwtl
jbe
es
push
call
xchg
xchg
sub
pop
push
scas
mov
ss
popf
adc
jbe
xchg
leave
push
out
add
xor
jmp
jae
mov
sbbl
push
je
dec
mov
pop
sub
out
sbb
mov
mov
ficoms
test
push
dec
fcmovb
dec
sub
sbb
out
lret
cwtl
inc
movsl
xchg
lea
sbb
outsl
dec
in
imul
push
data16
sub
test
mull
imul
pop
ret
jmp
cmp
inc
sub
push
daa
stos
mov
adc
imul
mov
pop
in
js
fbstp
push
push
ss
aaa
cwtl
push
push
xchg
lods
jb
ja
xchg
xchg
sub
pop
push
push
cwtl
push
test
mov
push
call
jmp
push
fisttps
sub
or
jp
mov
bound
daa
fsubs
insl
xchg
dec
cmpsb
push
les
sbb
imul
jle
arpl
and
lea
insl
iret
sbb
inc
into
push
roll
pop
push
push
cwtl
push
test
mov
push
call
xchg
xchg
sub
pop
push
push
cwtl
push
test
mov
push
call
xchg
icebp
mov
std
cmp
push
push
ret
cmp
mov
outsb
add
scas
lret
sbb
push
inc
mov
adc
js
stos
xchg
or
or
dec
mov
add
mov
pop
jge
adc
add
push
test
inc
sub
pop
seto
movsl
pop
cld
push
inc
or
idivl
push
cmp
pop
inc
in
inc
stos
or
icebp
xchg
cli
mov
push
adc
mov
dec
push
mov
cmpl
popa
inc
popa
jbe
fstpl
enter
loopne
fnstsw
xor
add
pop
mov
insl
fwait
cmpsb
mov
es
or
mov
or
pushf
xchg
cmp
xchg
or
test
or
daa
mov
pop
inc
pop
sarl
mov
in
loop
jb
cltd
jl
push
lea
imul
mov
test
dec
adc
and
inc
jecxz
repz
inc
je
mov
mov
lods
sbb
mov
pop
in
lods
int3
leave
sub
sbb
jns
jle
mov
pop
push
xchg
stos
jne
sbb
pop
jbe
sbb
jns
mov
xchg
mov
flds
jmp
inc
push
out
cld
repnz
jl
stos
and
shlb
int3
out
sbb
popl
les
push
mov
test
sub
mov
or
mov
ss
int
jnp
mov
add
lcall
aam
sti
jecxz
sub
cmp
mov
dec
mov
test
das
or
das
pop
or
stos
out
mov
test
pop
inc
pushf
iret
loope
imul
adc
rorb
cmpsl
mov
fucom
xchg
adc
sub
iret
dec
lds
jmp
cli
scas
imul
mov
mov
arpl
cmpsl
sub
jne
pop
int
in
sbb
adc
jg
data16
pushf
pushw
cmpsb
pop
ja
fs
jo
inc
es
add
push
cs
mov
dec
outsl
jne
sbb
jno
mov
push
leave
scas
push
daa
hlt
mov
call
std
shll
mov
pop
clc
dec
hlt
sbb
lock
cmpb
jle
xchg
xchg
xor
leave
scas
or
loope
into
lods
clc
pushf
sar
jmp
gs
sbb
rolb
aam
dec
les
leave
add
sbb
ja
adc
fnsave
cmc
or
pop
es
clc
paddw
vcvtss2sd
jb
ja
cwtl
loop
mov
repnz
mov
inc
testl
rcrb
icebp
leave
pop
sub
stos
leave
subl
loop
push
lds
es
jmp
jecxz
mov
cli
and
insl
movsb
mov
popf
cmpsl
shrl
js
pop
leave
mov
insb
jbe
adc
fisubrl
sbb
pop
roll
mov
orb
cmp
push
lret
cmp
add
mov
stos
ss
jb
sbb
ret
shlb
sub
lahf
out
mov
adc
insl
push
mov
cmpsb
pop
ficoms
mov
xorl
dec
mov
cmp
adc
sbbl
scas
xor
ss
lret
jecxz
aad
mov
jge
jno
cmp
jb
inc
aad
rorb
pushf
or
sbb
push
mov
ds
fs
data16
lea
jb
xor
xor
add
sbb
push
nop
cmp
pop
xor
cld
cmp
cmpl
mov
das
test
xor
ss
mov
out
orb
push
je
jne
or
sub
or
leave
xchg
add
and
in
cmc
mov
cmp
jbe
pop
ret
hlt
inc
test
aas
test
or
fisubrs
rolb
fstp
ljmp
ljmp
das
das
mov
clc
sbbl
rcrl
and
mov
sub
or
in
cmpsl
dec
mov
int3
dec
lock
clc
sub
pushf
jb
cli
push
int3
scas
pop
dec
pushf
fisubl
sbb
dec
mov
into
adc
mov
jle
hlt
pushf
mov
lret
lock
decb
out
xlat
sub
adc
mov
add
mov
mov
imul
outsl
test
mov
in
sub
pop
cli
aam
out
xchg
mov
into
je
ret
test
pushf
pop
test
xor
pop
sbb
sbb
insb
sub
aad
loop
jb
aad
icebp
fwait
divb
out
sbb
mov
shrb
xlat
mov
vdivsd
and
mov
out
in
ret
jbe
or
inc
or
repnz
aad
jge
stos
xchg
mov
je
push
fstp
mov
dec
insb
and
hlt
pop
mov
sbb
pop
test
clc
fisubrs
bnd
jle
fs
adc
int
fstps
xchg
sti
lahf
sub
int3
mov
adc
mov
negl
leave
gs
scas
and
out
test
in
cmp
ds
stc
sub
ss
arpl
sbb
or
aas
pop
ds
add
dec
sbb
mov
push
jno
add
sbb
mov
pop
dec
push
jle
cmp
stos
xchg
std
xlat
adc
jae
mov
out
fs
xchg
add
pop
push
jno
aad
pushf
jmp
push
mov
sahf
xor
xchg
cmpsl
or
mov
xor
fmulp
cli
lret
mov
and
shll
sbb
push
xchg
add
push
insl
leave
mov
mov
enter
fcoms
ret
insl
and
mov
pop
lret
in
popa
mov
jl
ficoms
add
lret
add
push
xor
gs
mov
popf
loopne
fdivl
aaa
xor
repnz
fistl
cmp
movsb
shr
movsl
in
xchg
daa
push
jge
shrl
fistl
dec
repnz
out
mov
pop
js
push
rcll
xchg
mov
xchg
push
pop
jp
jge
sub
mov
test
push
bound
adc
sbb
stc
rcll
adc
xchg
sbbl
jg
enter
add
mov
into
jbe
notb
repnz
push
fists
insb
pop
add
xchg
add
ljmp
lods
dec
jns
sbb
das
sbbb
push
mov
sub
rcrl
mov
and
out
inc
insl
or
test
mov
jne
xchg
sbb
insl
jmp
xchg
incl
xor
sahf
mov
loope
inc
push
push
imul
fldt
aad
sbb
nop
movsb
jg
or
cmpsb
das
jnp
cli
rcl
out
xchg
mov
jnp
pop
cmp
sub
push
fdivl
nop
pop
xchg
popf
pop
pushf
adc
out
js
call
cmp
and
cmp
mov
sub
cltd
mov
fmulp
lods
pop
ret
in
call
bound
mov
fwait
test
mov
jge
mov
cmp
sbbb
mov
cld
sbb
sbbb
mov
arpl
mov
fcompl
jle
adc
add
lret
pop
aaa
dec
bound
scas
enter
add
jbe
mov
lock
and
mov
cmp
pop
mov
add
mov
xchg
pop
push
dec
xchg
inc
orb
push
jle
sbb
aam
ljmp
cld
inc
push
stos
lds
mov
pop
xor
scas
adc
jnp
or
call
pusha
mov
jbe
mov
lods
sbb
and
orb
xor
inc
test
mov
cmp
pop
movsb
and
mov
xlat
pop
push
dec
std
cltd
inc
sbb
lret
aad
jnp
mov
lods
mov
lret
and
icebp
mov
push
push
cmp
scas
ficompl
sbb
inc
push
cmp
out
jo
pop
lret
mov
test
add
rorl
iret
out
je
jg
dec
jg
dec
in
imul
jae
mov
scas
push
pop
dec
sar
arpl
and
inc
in
and
add
lcall
out
dec
repz
cwtl
push
ficomps
ret
pop
inc
lds
movsb
mov
add
lahf
cmp
int3
and
divl
loope
sub
bound
cmp
adcb
mov
xor
decb
into
ficoms
xor
aas
jo
dec
leave
mov
mov
aas
mov
cmp
outsl
pop
into
mov
out
movsl
pop
mov
xor
xorl
loop
loop
loop
call
es
mov
fucom
mov
mov
xchg
lcall
cmp
mov
insl
add
mov
pop
cmc
addl
push
xchg
lret
push
into
cs
out
sub
dec
and
cltd
stc
add
subb
sbb
sbb
lods
hlt
fbld
faddl
movsb
sub
sub
fnsave
add
inc
repz
adc
pusha
inc
cmpsl
dec
fdivr
cmpl
daa
mov
sub
xor
jns
add
pushf
sbb
push
add
loopne
adc
stos
cltd
shrl
and
xor
rorl
or
add
sbb
in
pusha
add
daa
aad
hlt
scas
dec
dec
push
or
push
inc
dec
or
out
repnz
out
lods
ja
fadds
push
mov
lods
popa
lahf
xor
aaa
and
pop
cmpsl
aaa
mov
mov
xor
lods
jmp
push
ja
cmp
mov
imul
add
cli
ret
sbb
push
jno
sbbl
xor
push
sbbb
mov
sub
test
inc
dec
into
jnp
cmp
scas
out
add
and
lea
cmpsb
pop
lcall
sbb
mov
mov
jge
out
and
int3
cmp
into
lret
aam
out
mov
lea
mov
or
fistps
dec
nop
popa
popa
mov
lods
call
aam
mov
lret
icebp
rcrl
cmp
xlat
imul
sti
sbb
ds
sub
xor
in
or
inc
ja
lds
clc
add
sbb
push
fcoml
pop
fisttps
lea
fdivs
inc
cld
shrb
sbb
add
and
jnp
push
xor
cmp
out
and
jbe
loopne
jo
sbbl
cmc
dec
xor
mov
or
fucomip
jo
pop
xor
add
jno
mov
push
xchg
or
aaa
in
in
push
mov
scas
int
addr16
dec
xchg
clc
insb
inc
inc
xor
jge
jno
aas
movsb
push
sub
gs
push
idivl
or
fidivl
jmp
adc
mov
int
mov
sub
jbe
jle
push
sub
or
cmp
cmc
stc
xor
push
shll
or
sbb
or
cli
inc
into
and
leave
cwtl
icebp
in
in
dec
and
jg
push
adc
add
fidivl
mov
dec
jge
mov
mov
inc
pop
dec
fcompl
pop
mov
jo
push
adc
mov
xor
idivl
test
push
cld
ljmp
popa
mov
mov
mov
std
insb
out
jns
mov
repnz
xchg
push
dec
or
dec
scas
rcrl
adc
je
cwtl
jb
inc
fdivr
or
xchg
loopne
mov
jmp
fstps
shrb
xchg
outsl
push
pop
mov
jnp
pop
xor
xchg
and
fs
outsb
and
mov
push
adc
push
push
je
pop
jle
loop
ret
cmp
insl
xchg
je
daa
aam
int3
push
pop
and
add
addr16
xchg
add
xor
scas
inc
fnstcw
into
testb
dec
xchg
or
ljmp
aad
mov
mov
push
inc
cltd
push
ret
roll
mov
jbe
frstor
pushf
mov
clc
pop
and
jno
and
inc
ljmp
mov
adcb
dec
mov
rdpmc
ja
xchg
outsl
inc
push
test
in
insb
aaa
sub
cld
fcmove
adc
mov
jno
jmp
es
jl
jae
adc
adc
adc
mov
popf
push
mov
jp
mov
stc
les
and
xor
sub
jmp
outsb
negb
scas
test
xlat
pop
jno
lret
jge
in
cmp
inc
mov
push
pusha
jo
ret
loop
or
shl
jg
sbb
and
insb
mov
xchg
jnp
aam
push
stos
push
sub
mov
xor
pop
inc
test
dec
mov
adc
imul
clc
jb
and
jp
inc
bound
push
hlt
dec
cmp
push
and
sub
sbb
mov
sbb
popf
xchg
shl
push
movsl
dec
xor
xor
aad
ds
aas
stos
xchg
push
out
mulb
ds
rclb
fnstsw
loopne
popa
mov
sbb
adc
sub
push
std
cmp
loopne
xor
pop
stc
push
push
jge
into
inc
or
jmp
outsb
iret
rcrl
lds
repnz
mov
ds
pop
xlat
push
sub
fisubrs
sbb
popf
push
fisubrl
push
aas
mov
jge
out
fstps
or
jg
lret
jbe
mov
and
sub
jno
sbb
rcrl
lock
stos
inc
xchg
repz
sub
sub
mov
xchg
cmp
sbb
negl
xchg
cmpsl
jb
nop
loopne
jne
rcll
sti
test
or
shrl
hlt
sbb
in
imul
ja
imul
mov
pop
aad
xchg
jnp
jl
rol
arpl
fucomip
cmpl
das
loopne
aad
xor
popf
or
fcoml
rcll
cmp
iret
sub
jecxz
fbstp
pop
mov
rorb
sub
and
sub
ja
movsb
sub
sub
xchg
gs
xchg
pushf
aaa
idiv
out
xor
leave
mov
jbe
mov
push
adc
iret
jno
push
jns
in
iret
sub
adc
ljmp
scas
jno
push
pop
cmp
cld
dec
lods
not
mov
popf
mov
pop
mov
and
addl
add
cmpsb
cli
les
cpuid
movsl
or
daa
out
ja
gs
dec
or
push
mov
inc
jp
jno
out
cwtl
sbbb
or
pop
push
add
or
loop
xchg
push
jnp
push
fs
pop
xchg
cltd
aaa
jne
inc
pop
ljmp
in
pop
inc
inc
sbb
aaa
adc
xchg
inc
jg
mov
dec
xlat
gs
cld
lea
fwait
mov
and
mov
call
mov
dec
leave
pop
add
cmc
mov
sub
mov
cli
fisubs
pop
push
mov
daa
or
xor
mov
jle
scas
push
mov
pusha
add
pop
fwait
xor
in
adc
insb
test
mov
cmp
xlat
inc
lcall
xor
ret
shrb
push
mov
mov
dec
mov
pop
cmp
mov
or
les
cmpsb
mov
dec
or
pushf
sbb
jmp
xlat
fildl
pusha
test
push
mov
pop
insb
iret
cmp
inc
push
mov
sub
decl
push
xchg
add
inc
or
pop
xchg
sub
cmpsl
ds
mov
pop
lds
mov
mov
or
push
add
dec
pop
cld
pop
call
mov
pop
lods
outsl
and
insb
and
dec
dec
jae
std
adc
inc
fisttpl
lahf
loop
imul
xchg
testb
inc
lock
cmpsb
fstl
jns
and
jae
add
scas
scas
aad
cmpsb
sahf
dec
fnsave
cltd
mov
dec
mov
jmp
xor
pop
imul
nop
out
mov
xor
xchg
imul
sti
ret
mov
mov
outsl
loope
sbb
xchg
adcw
movsl
jle
fwait
xchg
pop
das
fldt
pop
inc
xlat
mov
lret
mov
out
dec
xchg
mov
in
sbb
cwtl
and
shlb
dec
insb
or
pop
mov
pop
and
fistpll
cmp
push
pop
pop
sub
push
and
jp
cmp
loope
add
sub
jmp
push
cltd
xchg
ja
leave
xchg
pop
dec
dec
popl
dec
nop
sbb
fsubp
and
pop
xchg
js
lds
inc
outsb
mov
iret
lret
in
xchg
je,pt
xchg
cmp
xchg
mov
incb
mov
mov
jp
shl
cmpsb
cmp
test
cmp
loope
in
sub
sbb
or
add
push
test
stos
fistps
mov
mov
test
pop
popf
leave
orb
dec
or
popf
aam
ja
inc
mov
mov
mov
in
aas
aaa
dec
and
xchg
adcb
pusha
out
dec
dec
xchg
popa
aam
int3
aas
xor
xor
jno
fnstenv
adc
add
xchg
fimuls
mov
push
jmp
seta
xchg
push
sub
mov
inc
cld
jmp
test
and
out
lcall
inc
lret
aad
jmp
icebp
or
sbb
push
adc
cmp
push
cltd
lret
sbb
ds
pop
push
xchg
ret
dec
cmpsl
pop
leave
pop
and
ret
xchg
sbb
or
pop
fcompl
jp
pushf
or
mov
ret
repz
repz
out
add
fistps
mov
repnz
imul
lret
mov
cmp
pop
push
push
in
popa
rcll
stc
test
or
frstor
daa
dec
cmp
push
mov
xchg
mov
int
jle
dec
inc
inc
orb
ljmp
jbe
add
stos
lods
inc
mov
ds
cmp
mov
adc
and
adc
push
inc
mov
fdivr
jnp
ret
fwait
adcb
movl
sbb
sbb
stos
cmp
inc
jmp
mov
insl
in
pop
je
mov
je
xor
rclb
cmp
mov
ss
xor
fcmovnb
adc
pop
and
mov
shll
xchg
jns
mov
andl
xchg
ret
shl
inc
jecxz
xchg
adc
insl
xchg
mov
scas
mov
pop
andb
stos
pop
jne
inc
js
loope
in
pop
add
mov
outsb
push
cmpsl
xor
icebp
mov
push
int
das
mov
ret
gs
push
test
push
fwait
sbb
repz
push
or
int
ret
pushf
adc
sti
test
xchg
pop
xor
lret
inc
push
add
push
lahf
push
scas
push
sub
shll
pop
aad
stos
sbb
lods
adc
pusha
push
mull
xchg
dec
aas
and
xor
mov
fdivs
mov
cmp
outsl
pushf
fmull
dec
in
jle
dec
adc
dec
les
xchg
adc
nop
rclb
dec
adc
cmpsl
outsb
xor
sub
xchg
pusha
jae
add
and
gs
fidivl
pop
add
jae
push
bound
cmp
shr
cwtl
in
jmp
or
cmp
mov
adc
lret
push
rorb
xchg
in
jbe
loope
nop
xor
lret
imul
dec
add
xor
popf
sub
mov
inc
rcr
mov
sub
cmp
push
push
pop
lods
or
cwtl
xor
and
hlt
pop
sub
mov
cs
daa
sti
popa
movsl
xchg
jne
pop
enter
inc
fidivrs
stc
iret
mov
jp
pop
out
mov
jae
enter
shl
or
xor
cmc
push
test
cltd
fdivrs
lock
nop
push
sub
outsl
push
popf
jns
jmp
fdivs
rcrb
movsl
xchg
cmpsl
shrb
pop
int
inc
ss
add
sbb
pop
sub
and
inc
mov
inc
int3
pop
jnp
out
sub
loop
int
mov
add
dec
popa
and
lods
les
dec
jnp
jo
or
andl
mov
xchg
xchg
ret
cmpb
push
push
in
xorb
les
lret
xchg
daa
jbe
ss
cmp
rcr
push
lock
movsl
push
mov
pop
test
pop
scas
mov
nop
movsl
mov
dec
add
xor
fisttpll
loop,pt
aas
xchg
je
xlat
pop
aaa
pop
xchg
inc
or
cmp
cmp
scas
dec
mov
hlt
sbb
pusha
pop
ret
insl
out
sahf
je
fdivl
mov
pop
rorb
cwtl
adc
xchg
sub
pop
push
push
cwtl
push
test
mov
push
call
xchg
xchg
sub
pop
push
push
cwtl
push
test
mov
push
call
xchg
mov
pop
push
push
xchg
ss
call
xchg
xchg
sub
pop
push
push
cwtl
mov
mov
cltd
mov
out
mull
lcall
addr16
and
push
pop
inc
daa
fs
mov
mov
movsb
xchg
xchg
les
adc
add
xor
pop
inc
daa
je
fs
and
movsb
cltd
aam
les
adc
daa
sqrtps
dec
insb
adc
jae
imul
fcomps
roll
pushf
loope
xchg
fs
cmp
outsl
inc
fstl
xor
mov
mov
fidivs
test
jl
outsb
mov
and
loop
mov
clc
inc
dec
pop
daa
int3
enter
xchg
inc
xchg
data16
dec
cltd
or
adc
add
pop
stos
push
js
stc
or
add
xchg
les
mov
inc
call
mov
add
cmp
dec
push
jnp
pop
sub
aam
addr16
xor
pop
pop
push
fistps
test
int
xchg
out
or
jle
insl
je
push
add
inc
sbb
inc
inc
adc
je
fwait
pushf
xchg
addl
hlt
adc
adcl
inc
adc
xchg
movsl
std
xchg
cmc
in
xchg
stc
mov
xchg
mov
inc
fs
add
push
jne
jns
dec
push
push
add
cld
xchg
out
xchg
repnz
add
jbe
xor
dec
adc
stos
aad
xlat
xchg
movsb
out
les
adc
add
xor
and
push
pop
inc
daa
je
fs
xchg
xlat
test
mov
movsb
xchg
xchg
les
adc
add
xor
and
push
pop
inc
daa
je
fs
xchg
jno
and
and
imul
and
fstps
dec
fldt
fistpl
xor
rcl
scas
push
and
mov
jae
jge
jmp
fsubrs
fldt
fsubl
add
imul
mov
lahf
je
mov
dec
andl
push
jns
subb
out
fs
mov
faddl
push
pop
imul
out
cmp
mov
out
les
les
jns
mov
cmp
dec
mov
sub
mov
fadds
stos
mov
xor
aad
xchg
repz
push
inc
js
sbb
push
inc
xchg
faddl
push
inc
mov
mov
push
add
xor
inc
or
mov
popa
fiaddl
fs
dec
dec
gs
sub
pop
dec
dec
shlb
sbb
pop
frstor
jecxz,pn
dec
push
das
sti
test
repnz
insl
cwtl
int
mov
ja
mov
add
nop
call
test
add
notl
bound
insl
into
mov
int3
hlt
lock
or
xor
test
std
out
sahf
cli
mov
fists
xlat
sahf
cmpsb
mov
into
in
mov
or
jns
mov
cmp
jb
gs
xlat
mov
loop
mov
lods
lds
push
outsb
cmp
sbb
xchg
sbb
imul
out
insb
leave
xor
mov
xor
push
sbb
jo
mov
pop
ret
test
nop
or
inc
fldenv
and
mov
sti
mov
pusha
lods
aam
push
sub
or
int
aas
mov
ret
repz
adc
xchg
cwtl
xchg
out
filds
dec
test
movsb
pop
icebp
sub
sub
push
dec
shl
inc
jbe
and
lcall
mov
push
cmp
lock
fildl
das
jae
ds
sti
jo
dec
xchg
mov
mov
repz
jnp
dec
pop
mov
outsb
es
xlat
pop
nop
in
fistpl
loope
dec
inc
iret
xchg
outsb
dec
js
out
adc
iret
xchg
lret
push
pop
mov
andl
cwtl
in
mov
mov
xchg
xchg
shr
shr
in
mov
mov
sub
and
pusha
in
shl
xor
insb
mov
nop
mov
jns
add
imul
cltd
jno
movsl
add
lcall
mov
mov
lods
shll
fidivl
stc
sub
ret
sub
mov
in
jp
mov
adc
inc
les
and
test
pop
test
mov
and
loop
arpl
das
popa
mov
xchg
mov
sahf
xchg
das
mov
sub
nop
cmp
xchg
sahf
mov
in
lods
xchg
enter
aam
cmp
int
test
cmc
inc
cltd
and
pop
sbb
lret
movnti
aas
pop
xbegin
inc
pop
cltd
popa
mov
in
inc
movsb
js
in
jge
insl
pushf
mov
rep
movsb
sahf
outsb
pop
sub
push
xchg
xor
jne
inc
in
xor
mov
pusha
xchg
fadd
and
jb
test
inc
push
jmp
or
or
outsl
and
loopne
int3
lods
imul
lds
mov
cmpsb
loop
jg
mov
in
incb
cli
xchg
dec
and
icebp
mulb
movsl
mov
jnp
into
fdiv
scas
sahf
pop
mulb
and
out
xor
cmp
mov
mov
addr16
idiv
int3
fcoml
sub
iret
pop
scas
mov
inc
insl
sbb
dec
test
cmc
idiv
int
outsl
int3
sti
enter
inc
jae
xchg
lock
jo
out
or
stos
mov
jne
mov
lods
mov
das
dec
repnz
cmp
cltd
dec
lods
mov
adc
or
into
js
int
mov
inc
fcmovnbe
and
inc
scas
inc
jmp
push
xchg
jmp
push
popa
lock
add
in
fs
mov
mov
call
xor
add
sub
out
and
jno
subb
sub
jle
cmp
mov
cmp
test
mov
outsl
sbb
out
inc
dec
in
fwait
xor
cmp
pusha
and
mov
sbb
sbb
shl
mov
insl
inc
push
jmp
mov
out
dec
inc
fdivl
mov
add
inc
mov
rorl
pop
les
adc
pop
testl
jno
shr
lock
int
mov
xchg
arpl
jbe
jl
je
in
add
mov
fxtract
xchg
aam
jbe
or
int3
cmp
addr16
scas
bound
mov
xor
inc
shll
add
mov
movnti
insl
sbb
xor
pop
sbb
icebp
ds
fcompl
cmp
fidivrl
in
jns
rorl
insb
and
insb
add
push
xchg
mov
and
dec
cmpsl
mov
aad
pop
enter
mov
fidivs
hlt
test
pop
je
jne
mov
stc
or
xor
lods
or
and
out
xor
jnp
in
hlt
xchg
lahf
call
out
sub
fisubrs
fildll
iret
jns
mov
mov
cmp
inc
pop
xlat
pop
mov
mov
es
mov
jl
cmp
mov
and
push
jle
stos
push
and
hlt
mull
scas
not
and
fisttps
data16
pop
sbb
adc
or
inc
das
or
sub
mov
loopne
hlt
popf
lret
mul
and
ficoms
mov
pop
push
mov
stc
cmc
in
inc
gs
lods
inc
mov
jae
fcomip
push
dec
iret
pushf
add
mov
inc
add
aad
imul
cmp
push
je
out
dec
push
push
push
lahf
dec
add
sbb
into
and
ret
mov
fcomp
and
and
push
jb
and
push
or
and
out
clc
imul
data16
fisubrs
or
jl
add
xchg
and
pop
pop
popa
ret
xchg
arpl
dec
push
popf
mulb
pop
loope
lock
or
add
into
adcb
rcrl
sub
sub
add
and
and
mov
mov
movsb
dec
jnp
xchg
inc
cmpsb
and
xchg
iret
mov
loopne
andb
sub
lret
stc
inc
aaa
sbb
jecxz
and
addb
shll
adc
or
cmpsb
ret
cmpsb
sahf
push
mov
es
ss
sub
fwait
adc
adc
xor
jns
imul
mov
test
add
int
aam
aam
jno
or
push
out
jbe
mov
xchg
lds
test
fsts
pop
mov
cmp
cld
inc
mov
mov
scas
icebp
xlat
pusha
fcomps
outsb
insb
push
jne
or
sbb
inc
mov
push
mov
push
notl
and
icebp
adc
clc
or
pusha
jmp
imul
pop
inc
test
or
cltd
lahf
popf
out
sbb
pop
push
adcl
cmpl
xchg
mov
inc
mov
cltd
xchg
pop
loopne
push
orb
and
cmp
icebp
add
adc
mov
sbb
test
pop
insl
outsl
sti
stos
add
xchg
cmp
and
mov
pusha
in
fprem
gs
add
fwait
cmp
mov
inc
fwait
aad
sub
lea
loope
in
arpl
cmp
or
mov
fimuls
das
cmp
pop
jae
mov
push
loop
push
mov
enter
scas
loop
aad
fstl
mov
jbe
cmp
mov
lock
cmp
jp
movb
mov
xor
and
push
in
adc
jb
test
mov
pop
xchg
jo
mov
adc
cli
cmp
inc
je
inc
jecxz
mov
iret
std
xchg
es
mov
cltd
mov
aad
sbb
xchg
cmpsb
mov
fwait
repz
popa
inc
and
aas
sub
iret
loope
pop
std
push
enter
mov
cmp
fsubs
in
sub
test
dec
cmc
pop
rcll
test
stos
inc
rolb
add
or
pop
das
and
dec
mov
push
test
out
jmp
inc
jmp
ds
in
addr16
incl
and
dec
clc
mov
dec
iret
cld
pusha
cmp
outsl
cmp
sbb
dec
xchg
imul
clc
insl
in
or
mov
lea
pushf
xchg
cmpsl
rolb
sub
jg
or
inc
sub
sbb
addl
repz
jge
mov
cmpsb
data16
pop
mov
addr16
lret
adc
add
push
and
xchg
jnp
adc
in
fcoml
push
or
imul
pop
or
fisubrs
jns
insl
loope
lahf
cmp
aas
and
cmpb
nop
jmp
into
push
in
cli
stos
sti
in
xor
mov
call
lahf
shrl
out
mov
and
and
lahf
pop
or
jecxz
inc
sbb
ja
fdivr
fwait
add
rol
mov
ja
cs
add
int3
push
or
lcall
test
jno
cld
push
int3
shlw
mov
cmp
jge
inc
add
mov
pop
and
jb
add
cmpsl
xlat
or
jnp
mov
mov
push
adc
inc
out
es
andl
mov
ret
sahf
ficompl
in
cltd
cli
test
push
out
shll
xlat
int
cmp
dec
xchg
outsb
jnp
push
cmp
repz
cmp
nop
adc
les
imull
inc
cs
into
ficomps
xor
push
xor
arpl
js
sahf
xor
mov
icebp
ja
mov
mov
jb
test
in
push
call
decb
leave
aaa
outsb
or
mov
and
out
xor
mov
mov
les
loope
negl
dec
adc
lcall
fisttpll
mov
lea
xor
xchg
hlt
pop
orb
imul
addr16
lds
mov
aas
jne
aas
pop
jnp
xchg
mov
add
lods
addr16
sbb
mov
or
pop
cmpsb
int3
dec
pusha
shll
pushf
das
sub
jae
cmp
sbb
neg
cs
push
das
dec
inc
lods
insb
test
or
add
es
filds
sbb
push
sbb
adc
adc
lock
mov
data16
and
cmpsl
daa
pop
movsb
or
mulb
lods
lret
test
inc
movsb
bound
imul
or
sbb
push
pop
xor
lcall
adc
push
je
push
mov
or
aas
jb
xchg
mov
cmp
lcall
pop
aam
lahf
lret
jbe
push
jmp
push
jb
mov
repnz
es
mov
loope
push
jb
pop
and
inc
lahf
fucomp
xor
push
mov
hlt
push
dec
fisubs
inc
ror
push
push
arpl
and
mov
loopne
andl
sub
jo
adc
or
push
mov
sarb
aas
into
xchg
test
outsl
pop
and
lahf
lds
loope
push
sti
test
sub
insl
jp
mov
xchg
inc
aaa
ffree
int3
and
arpl
or
sbb
mov
and
xchg
push
mov
out
sbb
cmpsl
mov
lea
mov
dec
popf
jbe
lret
in
shrd
push
push
and
and
faddl
pop
mov
jae
aad
repz
pop
sbb
les
call
fnstsw
mov
fdivl
sbb
lods
and
xorl
pushl
fisubs
add
and
loopne
subb
std
add
mov
in
jge
sbb
in
inc
mov
inc
lcall
adc
test
lahf
mov
jle
or
xor
sti
shlb
shl
clc
hlt
or
lods
jp
jne
popl
repz
insb
pop
mov
xchg
insl
loope
pusha
pop
fldl
mov
mov
pop
rol
test
mov
jno
mov
mov
inc
mov
enter
lods
sub
push
popf
jmp
xrelease
scas
arpl
sub
addb
addb
jne
lea
xchg
loope
movsl
stos
lret
xor
add
in
fstpl
jle
mov
clc
sub
pop
jae
dec
int3
dec
mov
imul
cmp
dec
int
inc
icebp
or
inc
jle
outsb
inc
dec
ja
std
movsb
sbb
dec
xchg
outsb
adc
int3
and
stos
mov
add
add
xchg
arpl
cmp
add
push
js
adc
mov
cmp
pop
mov
mul
dec
lds
or
out
and
mov
sbb
fisttps
pop
leave
mov
test
shl
lahf
mov
aaa
sahf
stc
mov
add
out
dec
pushf
mov
jns
imul
not
push
inc
jo
sarl
sbb
and
lret
mov
mov
movsb
xlat
sub
mov
das
push
bound
push
fwait
pop
inc
dec
push
mov
repz
shr
sub
jp
pop
shlb
outsb
jae
adc
mov
imul
dec
pop
lods
sbb
push
mov
dec
lds
out
xor
cmc
mov
into
inc
and
flds
popa
iret
cmpsb
dec
enter
repnz
push
sub
or
aaa
dec
mov
shrb
das
add
sar
in
jp
mov
xor
mov
stos
out
jnp
jo
mov
sub
push
cmp
inc
dec
cs
outsb
enter
mov
mov
mov
sbb
mov
leave
adc
add
dec
mov
gs
xor
outsb
adc
fisubs
push
sub
lock
fdivrs
gs
push
jnp
insb
push
int3
lea
nop
pop
test
lret
mov
mov
dec
inc
mov
lahf
cmc
bound
cmp
or
test
repnz
scas
lds
out
mov
ja
leave
push
sub
imul
vmovsldup
jp
mov
push
add
or
and
imul
cmpb
xor
and
nop
aad
loop
xor
fisttps
pop
mov
pop
rol
aas
mov
sbb
pop
sti
sbb
adc
fimull
xchg
movsl
in
out
xchg
rclb
xchg
pushf
sbb
sbb
mov
push
bound
ja
insl
add
add
test
in
pop
hlt
adc
dec
decl
pop
out
fdivr
xor
pop
sti
test
push
jns
sub
and
push
lock
inc
inc
jo
or
leave
sbb
ret
jmp
test
xor
inc
or
xor
ljmp
or
cmp
lret
add
xor
push
inc
xor
jb
les
popa
les
cmp
mov
stos
lahf
adc
js
or
fldcw
or
jno
sbb
jnp
stos
jbe
mov
rcll
mov
push
je
cmp
nop
lea
fsubrl
jp
sub
cmc
das
out
fcomps
sahf
push
popa
in
imul
cwtl
es
scas
xchg
jnp
fldcw
icebp
mov
xchg
and
hlt
jle
insl
dec
and
sbb
idivl
mov
mov
and
xchg
push
inc
xor
xor
rcrl
gs
mov
int3
push
sahf
jp
inc
sbb
mov
gs
incb
test
pop
repz
js
cmp
and
inc
orb
pop
lret
or
sbb
cld
inc
push
xchg
inc
stos
inc
adc
mov
in
imul
and
dec
jne
lds
or
out
subl
imull
xlat
ds
push
out
push
icebp
cmc
or
add
sbb
dec
loop
or
mov
ffree
mov
cmp
mov
aad
shlb
inc
mov
mov
mov
test
cmpsb
jb
adc
cmp
push
pop
dec
shrl
xor
pop
loop
rcll
xlat
andl
insl
xorb
xchg
mov
out
mov
jne
nop
stc
push
lock
jmp
pop
adc
xor
std
std
lret
ffreep
ret
int3
mov
aaa
es
dec
out
and
cmp
loop
and
mov
xchg
fstcw
and
fscale
push
popf
mov
scas
cltd
inc
mov
out
mov
in
jg
dec
bound
inc
sub
inc
sub
xchg
mov
in
mov
jne
sbbb
jnp
jnp
mov
push
add
pop
dec
xchg
pop
mov
fnsave
cmp
mov
sub
sbb
push
jnp
imul
movsl
inc
inc
mov
inc
rorl
loope
mov
adcl
pop
sbbl
jg
cmp
jp
ja
scas
es
stos
add
jmp
push
push
add
test
mov
jae
aam
shrl
in
int3
pop
pop
sub
xchg
jmp
mov
js
std
pop
shrb
cwtl
imul
rorl
cmp
setnp
jne
in
inc
push
hlt
incl
inc
adc
sbb
aaa
push
loop
push
sub
jl
sar
inc
mov
or
int3
loope
out
mov
xchg
loop
pushf
out
nop
and
outsb
pop
jp
mov
push
xor
es
ss
mov
mov
fimull
fidivl
cmp
sbb
push
nop
add
lock
cs
jne
clc
ret
adc
rol
out
mov
scas
pop
ret
push
insl
jo
jns
pop
adc
sti
pop
rolb
mov
cmpb
push
daa
sub
push
lea
gs
mov
adc
jnp
mov
cmpsl
pop
mov
inc
aam
in
insl
decb
pop
mov
sub
adc
sub
ror
xor
sti
mov
leave
fcoms
pop
jmp
mov
cmp
jo
cmp
push
test
movsb
cltd
sahf
imul
mov
xchg
add
mov
lods
test
inc
push
add
cmpsl
jno
aas
mov
dec
test
cwtl
mov
push
rclb
dec
cmc
or
jle
popa
lock
push
or
dec
push
outsb
mov
and
adcb
pop
mov
sub
in
add
or
and
ljmp
pop
fwait
and
ljmp
add
sbb
add
bound
insl
iret
outsl
stc
fadds
les
fldcw
js
jecxz
pushf
jae
inc
pop
ret
cmc
jo
mov
test
iret
cli
insb
aam
mov
or
lods
jne
adc
mov
mov
ss
loopne
pop
sub
es
mov
ja
dec
aas
fcoms
jnp
mov
dec
lcall
push
sbb
ss
mov
push
add
clc
xor
in
jae
daa
out
dec
jo
pop
mov
xchg
add
jbe
sub
xchg
inc
movsl
je
cmp
pop
pmulhuw
rorb
addb
daa
dec
pop
inc
mov
int
mov
les
xor
cmpsb
out
lret
sbb
xchg
insl
cmp
mov
or
sub
mov
loope
test
js
cld
call
sbb
mov
jg
mov
sub
mov
xchg
ficompl
jp
add
jg
xchg
xchg
ljmp
enter
adc
ret
push
shlb
mov
jno
pop
repz
jmp
fwait
jmp
fdivr
mov
mov
pop
cltd
aaa
pop
pop
getsec
packssdw
mov
push
add
ja
int3
and
subb
add
pop
fistps
sbb
inc
loop
mov
ret
pop
xchg
cld
add
fdivl
cmpsb
shrl
add
xchg
loope
test
push
sub
jb
sbb
pop
test
jp
jl
mov
lock
fsubrs
cmpsl
lcall
inc
add
aad
in
or
sbb
in
push
xor
mov
adcl
mov
pushf
es
dec
out
pushf
fists
mov
dec
sub
inc
cmp
ss
fbld
call
aaa
int3
pop
and
xchg
lcall
xchg
lock
test
inc
push
mov
or
pusha
xchg
inc
cltd
es
xor
jbe
or
fxch
sbb
in
pop
xchg
cli
mov
repnz
shl
pop
mov
cwtl
cmp
mov
sbb
aam
les
adc
add
xor
and
push
pop
inc
daa
je
fs
xchg
xlat
test
mov
movsb
xchg
xchg
les
adc
add
xor
and
push
pop
inc
daa
je
fs
xchg
out
xchg
les
adc
add
xor
and
push
pop
inc
daa
je
rcll
movsb
xchg
xchg
cmpsl
hlt
aaa
and
adc
scas
int
ja
jo
lahf
mov
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
xlat
es
push
testl
ljmp
movsb
inc
xchg
arpl
mov
aaa
daa
xlat
es
push
testl
xchg
push
mov
shll
ja
mulb
add
ss
ficoms
out
push
pushl
data16
push
scas
inc
mov
out
jecxz
negb
jae
inc
scas
dec
inc
fwait
inc
mov
xchg
outsl
cmpb
inc
mov
lea
fs
insl
mov
enter
xlat
sti
mov
out
je
dec
scas
pop
or
jns
mov
xchg
dec
dec
lods
jl
dec
mov
pushf
test
cli
or
inc
xchg
insl
mov
mov
cmp
or
mov
xchg
cltd
xchg
movnti
inc
mov
mov
cmpsb
sub
subb
dec
aaa
gs
mov
xchg
mov
repnz
mov
scas
mov
cmpsb
adc
mov
sub
stc
insl
pop
sbb
push
div
aas
jecxz
data16
cwtl
adc
mov
adc
xlat
push
out
push
out
xchg
xchg
inc
mov
xchg
outsb
xchg
pop
sub
inc
mov
xchg
inc
adcb
or
cmp
ret
cmp
inc
in
ret
add
cmpsl
add
inc
mov
inc
mov
xchg
sub
xchg
les
shll
adc
pop
mov
xlat
es
push
xchg
arpl
push
mov
cmpsl
mov
cmpsb
inc
xchg
ja
notb
out
aaa
daa
xlat
es
push
testl
xchg
inc
cmpsl
mov
cmpsb
inc
xchg
ja
notb
out
aaa
daa
xlat
inc
aam
jo
in
sbb
push
xor
bound
dec
mov
fwait
ss
iret
in
sbb
test
lods
inc
insb
sub
add
mulb
dec
jmp
jmp
mov
fsubp
dec
pusha
sub
jne
dec
pushf
test
fwait
pmullw
fdivs
cmp
cmpsl
jo
cld
rcl
dec
inc
mov
inc
sbb
outsl
test
pop
dec
jbe
negl
and
andb
add
aad
inc
push
and
aas
inc
stc
fucomi
jmp
push
xor
inc
shll
test
cmp
out
add
out
inc
mov
rclb
xorb
pop
movsl
cmp
pop
int
push
jg
leave
insl
and
xor
add
addw
inc
cmp
fldt
lea
repz
stc
test
pushf
mov
cmc
loope
negl
loopne
mov
fldcw
mov
mov
jmp
mov
mov
adc
int3
test
cmp
xchg
addr16
popf
pop
jb
ret
arpl
and
call
mov
jo
fidivrs
lods
nop
lods
sub
and
aaa
popa
nop
jg
mov
fsubrs
xor
xlat
dec
lock
outsb
cmp
outsl
in
add
cmpl
fwait
std
outsl
mov
push
cmpsl
sbb
insl
xor
mov
and
int3
fcomps
imul
mov
pop
sahf
cmpsb
and
mov
mov
xor
shlb
lods
lret
data16
jecxz
xchg
and
fildll
mov
xchg
adc
in
push
add
dec
adc
jno
jbe
int
pop
jnp
decl
cmp
hlt
testl
adc
hlt
aam
mov
push
xlat
lock
aaa
push
hlt
imul
loopne
pop
or
xor
push
push
dec
mov
xor
lock
clc
scas
loopne
pop
in
push
scas
or
dec
dec
ret
push
mov
xchg
dec
inc
inc
in
push
cltd
out
add
xor
mov
xchg
ljmp
push
and
jne
stos
and
pushf
imull
xlat
arpl
stos
cmp
ss
inc
jl
and
and
xlat
jl
dec
or
ja
push
sub
mov
sub
int
icebp
push
push
xor
jns
pop
ds
mov
and
addr16
rcr
test
inc
xchg
pop
mov
int3
cs
lcall
test
adc
add
jg
fwait
loopne
cs
jmp
add
jb
sub
adc
sbb
gs
xlat
in
scas
jno
outsb
mov
and
adc
out
outsb
loope
cmp
add
insb
fnstcw
sbb
inc
aas
mov
or
in
add
icebp
inc
adc
or
jno
jmp
hlt
mov
stc
test
lret
jae
imul
js
pop
ret
leave
push
ja
adc
cmp
das
frstor
dec
rcll
xchg
inc
rcrl
adc
xor
icebp
mov
cmp
insb
outsb
push
scas
dec
int3
mov
mov
in
fldt
push
push
loopne
sbb
jmp
loope
inc
adc
cmp
xor
scas
xlat
imul
clc
push
sarl
test
add
jmp
jne
pop
out
in
pop
movsb
outsl
or
imul
sbb
push
cltd
dec
test
out
jg
pusha
rol
sbb
fmull
daa
mov
adc
loopne
in
pushf
pop
add
arpl
leave
jl
mov
xorl
mov
test
pop
dec
xor
pop
push
shl
or
push
cs
subl
lcall
dec
inc
adc
loopne
pop
inc
or
imul
lahf
jmp
shll
jae
aaa
jg
fs
cmpsb
sahf
push
jae
and
aas
sbb
cli
push
dec
insb
xchg
xchg
dec
arpl
dec
push
mov
xor
add
jno
mov
fisttps
and
pop
cmp
cmp
inc
popf
shr
or
pop
xor
sub
dec
repnz
and
rcrb
mov
ds
loop
xchg
jecxz
mov
imul
push
inc
jle
fwait
sbbb
or
sub
cwtl
icebp
addl
dec
in
out
fidivrl
into
mov
mov
in
mov
sub
in
sbbb
aam
adc
stos
xor
dec
repz
scas
imul
loope
add
push
add
mov
pop
in
sbb
ss
iret
add
lea
je
repnz
mov
iret
or
lds
adc
inc
clc
jmp
repz
lods
cmc
push
cwtl
js
jp
or
pushf
sahf
mov
jmp
sub
pop
mov
cmp
test
icebp
mov
in
or
cld
inc
into
jecxz
inc
pop
push
sbb
inc
lahf
pop
mov
mull
inc
idivl
xor
mov
mov
inc
mov
push
push
je
in
cld
dec
and
das
stos
sbb
jecxz
lret
cmp
and
repz
icebp
sub
cld
dec
fmul
or
ss
mov
dec
pop
jbe
cmc
out
test
xchg
repz
sub
jno
jno
rcrb
adc
jg
cmpsl
jmp
cmc
mov
std
xorl
adc
adc
repnz
mov
subl
or
das
movsl
jb
dec
shlb
lods
xor
xchg
jge
scas
push
in
mov
push
sbb
xor
sub
aad
lea
push
push
mov
xchg
mov
insl
imul
inc
jne
ret
fstpt
iretw
int
dec
mov
int3
repnz
jp
xchg
xor
sub
pop
adc
mov
lret
popa
add
lds
inc
pop
push
mov
out
mov
inc
pop
lods
pop
out
inc
push
xorb
test
jmp
xor
movsl
stc
add
mov
jnp
in
shl
mov
movsl
out
adc
imul
int3
mov
in
fcomps
inc
fmull
mov
das
mov
mov
adc
mov
imul
sbbl
push
pop
jmp
fs
fldl
mov
dec
sub
cld
movsl
mov
aas
lods
dec
lahf
call
mov
mov
and
mov
cmp
test
ret
jecxz
bound
in
jge
mov
cld
cmc
mov
test
and
aas
push
test
js
xor
push
insb
inc
cmc
mov
iret
pop
mov
add
int3
std
mov
mov
xor
je
add
jp
shll
dec
xchg
enter
pop
sub
popa
iret
fstpl
push
cmp
add
addb
mul
adc
push
gs
and
cmp
aad
ja
push
and
cli
aad
xor
test
adc
mov
out
mov
pushf
into
fs
mov
arpl
mov
add
pop
cmp
add
stos
xor
aaa
add
arpl
test
inc
sub
mov
cmpsl
and
cmpl
inc
jnp
mov
adc
jnp
xchg
jnp
dec
not
xor
fwait
idivl
sbb
xor
mov
mov
jl
adc
xchg
jae
fisttps
add
and
push
dec
mov
fcompl
xor
cmpsl
insb
aad
cmc
in
and
hlt
dec
cmpsl
push
mov
cltd
mov
in
fsubrl
add
bound
icebp
inc
push
push
push
ret
cmp
iret
inc
xor
imul
dec
push
repz
ficompl
pusha
les
or
add
or
or
jmp
xchg
insb
clc
andl
push
mov
icebp
imul
jl
pop
inc
add
add
push
inc
lcall
push
xchg
iret
mov
shll
dec
sub
pop
out
out
and
adc
lret
dec
aam
and
lret
aas
xchg
shll
sub
sbb
lret
xorb
out
ret
mov
cld
fxtract
and
fwait
sti
in
mov
pop
nop
mov
cmpsb
pushl
xchg
test
sbb
test
popf
inc
dec
lea
xor
lcall
shlb
mov
ret
and
cmp
add
std
xchg
cld
mov
add
xchg
filds
stos
fimull
xchg
jns
adc
loopne
push
jg
cmp
xor
imul
aad
pop
push
jbe
ljmp
dec
ja
cmp
ds
jb
in
jnp
nop
push
das
mov
xchg
ja
stc
arpl
lret
push
mov
add
sar
es
sub
pop
pop
std
xor
outsb
lret
or
mov
cmp
daa
rcll
negb
inc
cmp
pop
jo
xor
popf
inc
loopne
and
shlb
je
lock
pusha
cmc
add
jg
jle
cmpsl
negl
mov
sub
loope
out
cmp
arpl
ja
jne
cmp
xchg
inc
inc
push
dec
cmp
sahf
enter
loopne
mov
icebp
jmp
in
rolb
add
inc
sbb
mov
movsb
pop
sub
loop
push
and
loop
cmp
jl
loopne
lahf
bound
repz
mov
jle
jnp
lds
les
imul
outsl
jno
les
pop
cld
pop
dec
sub
jl
jo
push
cli
sysret
push
mov
add
jle
je
jnp
pop
inc
mov
jge
dec
sub
popa
fnstenv
cld
repnz
xchg
adc
mov
shll
movsl
or
pop
pop
mov
mov
and
lret
xor
xor
js
adc
ja
stos
lahf
mov
fninit
mov
xchg
push
mov
push
jo
mov
xor
add
inc
jnp
mov
mov
xchg
bound
setp
cmp
mov
sti
adc
int3
arpl
dec
push
dec
movsl
ljmp
sub
imul
xchg
mov
push
pop
pop
bound
xchg
mov
gs
jne
outsb
mov
popa
or
aas
jp
add
dec
jmp
scas
popf
and
test
lods
sbb
outsb
mov
scas
scas
adc
dec
aam
inc
pop
add
ss
cmc
subl
pop
xchg
dec
pop
loop
mov
fdivs
mov
fisubs
push
inc
push
jg
add
jo
mov
adc
jnp
push
fcoml
sbb
xchg
dec
xchg
sub
and
fnstsw
jno
mov
push
xchg
cs
pop
push
lret
and
adc
clc
jmp
addr16
jno
mov
add
pop
push
nop
adc
mov
out
stos
dec
and
jecxz
xchg
rorb
divl
sti
or
ljmp
mov
and
cli
ret
or
mov
pop
pop
and
movsl
cmpsb
in
mov
sub
cli
cmpsl
test
cli
lcall
mov
xor
out
jg
or
xor
lea
iret
sbb
sub
fistpll
jo
fimull
pop
adc
cmp
pop
fsubs
inc
stos
pop
mov
mov
pop
mov
ficoms
repnz
insl
js
repz
js
pop
xlat
push
mov
es
sub
scas
pop
xchg
mov
push
shlb
test
push
cmp
push
insb
enter
les
mov
ds
or
add
nop
and
adc
inc
xor
dec
in
repnz
lcall
mov
loopne
inc
lods
inc
mov
adc
pop
mov
pop
pusha
mov
adc
xchg
stos
jg
jb
jb
or
mov
repnz
ret
xchg
sub
out
push
cmpsb
and
jae
xchg
enter
sbb
dec
les
mov
imul
sbb
lret
jmp
xchg
cmp
inc
sub
inc
mov
aam
mov
popf
lea
and
loopne
xchg
sbb
sub
movsl
cmp
iret
pop
call
rorl
xor
in
push
jno
jnp
rcrl
fnsave
ret
pop
xchg
mov
inc
pop
mov
push
lds
outsl
dec
insl
jae
shrb
mov
sbb
xchg
pop
jmp
lcall
fmull
loope
sti
fidivrs
nop
sub
insl
shll
insb
jg
stos
mov
pop
loope
aas
pushf
frstor
enter
mov
xchg
jg
xor
test
jecxz
inc
pop
jns
outsl
dec
cwtl
fisttpll
jbe
push
sarl
es
js
mov
and
add
scas
scas
int
loope
lods
bound
push
jnp
xchg
ljmp
aas
es
push
sbb
or
enter
or
enter
fsubrs
lret
xrelease
cld
mov
pop
in
push
popa
sub
lcall
jl
mov
xor
pop
loop
dec
out
jno
add
push
dec
dec
popf
loopne
aad
mov
push
mov
outsb
xor
inc
sbb
ret
cli
in
mov
adc
pop
fstpt
hlt
mov
mov
filds
ret
adc
or
rol
leave
pop
mov
sub
jecxz
adc
pop
pop
adcb
jb
ja
test
cmpsb
aaa
jbe
mov
js
shlb
sub
mov
jne
fimuls
or
andb
out
push
mov
scas
cmp
bnd
fdivl
lods
and
pop
jg
shlb
add
sbb
incl
inc
push
mov
and
stc
dec
mov
insb
sub
lea
lods
jno
jnp
cmp
sbb
hlt
mov
jmp
data16
aaa
loop
push
or
outsb
pusha
mov
divb
adc
xor
adc
je
push
repz
and
mov
jp
int3
cmp
rcll
adc
cs
push
mov
loop
mov
shrl
sahf
movsl
mov
mov
inc
and
adcl
and
mov
add
or
gs
inc
or
push
sahf
ljmp
mov
fisubrs
adc
outsl
cmp
xchg
ds
aaa
lret
pop
mov
dec
push
xor
fwait
int3
jmp
ret
jb
mov
and
lds
aaa
jo
imul
rcl
fsts
ret
loop
ss
xor
xchg
push
pop
jo
adc
in
lret
jecxz
cltd
push
inc
adc
mov
fisttpll
shll
inc
cltd
dec
mov
in
fwait
or
cs
cmp
lahf
adc
mov
push
sbbb
sub
fsubrp
pop
push
xor
stc
out
add
arpl
ds
fcoml
jno
pop
push
xchg
push
mov
nop
inc
int
aad
fdivp
aam
push
jge
or
stos
mov
les
aas
cltd
out
cli
cwtl
clc
xor
adc
insl
add
in
push
subb
sub
ss
out
add
push
aaa
and
mov
outsb
popf
add
jmp
cmp
sub
adc
dec
jge
pop
es
xchg
ret
xchg
stos
fildl
push
int
pop
inc
inc
lock
insl
cwtl
rcll
movsl
or
push
sbb
dec
push
push
or
and
subb
push
inc
adc
jge
push
mov
fidivs
test
loopne
xchg
ret
fsubr
dec
pop
faddl
adcb
push
shl
mov
les
mov
mov
pushf
test
pop
stos
inc
add
andl
ficomps
negb
xchg
outsb
jno
cmp
mov
aas
adc
gs
lock
xchg
cmpsl
mov
fidivs
jmp
adc
jnp
jge
cmpsb
adc
or
jecxz
mov
xor
mov
loope
sbb
jge
adc
inc
lahf
cmc
stos
xor
pop
push
std
and
aad
xor
adc
inc
xchg
lods
dec
mov
adc
pop
xchg
or
inc
fnstcw
mov
sub
negb
ret
push
sti
repnz
add
dec
cwtl
dec
xchg
cmpsl
mov
call
sbb
in
mov
or
jle
enter
stos
movl
cld
test
inc
kxorw
mov
dec
adc
shl
lea
mov
pop
shl
add
cmp
sub
cli
cmp
xor
aam
fstpl
je
cli
adc
xor
mov
mov
fildl
jb
inc
jae
addb
imul
out
sbb
je
jg
repz
rorb
fucomi
into
add
pushf
insb
mov
mov
movsl
rorl
add
inc
cmpsl
js
adc
cmpsl
xchg
and
mov
jno
test
add
mov
sbb
ret
mov
push
mov
dec
or
or
lds
xchg
stc
pop
pop
inc
das
mov
cwtl
addr16
and
sub
daa
mov
fmull
lahf
sub
sarl
fnstsw
pop
sbb
sub
ja
inc
adc
and
sub
add
sbb
inc
xor
ficoml
ss
xchg
arpl
push
mov
or
sub
lcall
cmp
pop
addr16
lods
push
jae
movsl
cmpl
pop
scas
lcall
cltd
into
rorb
adc
jo
xchg
ss
xor
daa
cmp
mov
cmp
test
xchg
aad
fstps
std
or
lret
and
enter
jmp
dec
ret
pop
push
mov
jg
mov
mov
stc
sbb
dec
lret
cmc
lret
add
adc
or
iret
loopne
xor
adc
add
inc
mov
mov
rclb
push
sahf
stos
gs
mov
jnp
mov
fs
push
pop
push
iret
mov
xchg
aad
and
jbe
in
pop
andl
fdiv
lahf
inc
lods
xchg
pop
lahf
clc
cld
mov
and
lea
sti
fwait
sti
repz
push
addl
mov
insb
jns
cmp
and
jnp
xchg
repz
sbb
outsb
jb
jbe
jo
iret
inc
push
in
cmp
nop
out
push
pop
inc
xor
leave
in
jecxz
or
inc
es
jl
sar
mov
push
test
ret
xchg
dec
sub
cltd
sbb
jg
sarb
add
les
mov
push
fwait
mov
jp
popa
pop
pop
jl
sub
ds
push
das
mov
test
aam
pop
mulb
int3
scas
jecxz
rorb
nop
jne
fsts
cs
inc
and
iret
inc
adc
adc
cmp
jecxz
ss
xchg
addl
aas
call
repnz
es
fdivrs
push
test
std
das
test
or
sub
inc
fimull
cs
out
pop
cwtl
sub
adc
fidivrs
xor
xchg
dec
push
clc
xor
bnd
sbb
mov
add
scas
xor
pop
out
outsl
mov
fiaddl
sahf
cmc
sbb
out
sub
sbb
xchg
inc
addr16
inc
add
pop
inc
jg
mov
incl
imul
clc
jbe
rep
jp
rcrb
clc
inc
in
add
jl
ja
lods
ret
jmp
shll
addr16
pop
adc
pop
movsb
xlat
popa
pop
hlt
adc
mov
in
add
mov
lds
or
lret
cmpb
ret
add
xor
dec
ret
in
in
notb
xor
call
inc
iret
xchg
adc
fwait
cpuid
xchg
js
or
mov
add
stos
in
mov
lods
mov
insl
add
xchg
push
pop
lret
cmpsl
add
sbb
fsubrp
fistps
int3
lods
cmc
cwtl
sub
clc
fisttps
pop
pop
pop
mov
cwtl
inc
push
out
adc
cmp
add
cmc
rcll
jno
xchg
push
mov
cmc
lds
mov
xchg
icebp
or
call
sub
test
nop
mov
data16
pop
das
pop
adc
fcompl
ror
pop
xor
and
push
out
xchg
xchg
inc
cmpsl
mov
cmpsb
inc
xchg
ja
notb
out
aaa
daa
xlat
es
push
testl
xchg
inc
cmpsl
mov
cmpsb
inc
xchg
ja
notb
out
aaa
daa
xlat
es
push
testl
xchg
inc
cmpsl
mov
cmpsb
inc
xchg
ja
arpl
pop
out
xlat
xor
and
shll
ret
push
repz
out
xchg
xchg
mov
addr16
push
pop
in
cmp
xchg
sbbl
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
fistpll
outsl
pop
jg
mov
aas
inc
dec
dec
pop
or
cld
fucomip
out
fdivr
int3
mov
mov
pop
insb
outsb
pop
jg
pop
sub
sbb
or
cld
fucomip
mov
dec
mov
mov
insb
outsl
pop
jg
pop
sub
sbb
or
ret
mov
enter
mov
jl
sbb
cmp
mov
aam
or
dec
loopne
mov
cmpl
inc
sbb
sbb
mov
les
shll
inc
and
jl
daa
cmpsl
pushf
inc
jo
imul
or
cmpsl
movsb
sbb
iret
cmp
adc
mov
cli
lea
pop
xchg
pop
xor
cmc
aas
pop
sbb
out
and
xor
int3
cld
mov
loope
nop
cmp
push
out
pop
shrl
jecxz
pop
cmpsl
mov
fdivl
sub
pop
xchg
in
cli
cmp
not
das
xlat
xlat
stc
mov
add
std
lcall
pop
scas
mov
insb
outsl
pop
jg
pop
sub
sbb
or
cld
fucomip
out
fdivr
int3
mov
mov
mov
dec
push
jp
push
nop
insl
test
rcl
aad
push
lret
jmp
sbb
push
jnp
das
jae
or
mov
lcall
jmp
jno
or
pop
cmp
pop
sub
sbb
or
cld
fucomip
out
fdivr
int3
mov
mov
insb
outsl
pop
jg
pop
sub
sbb
or
cld
fucomip
out
fdivr
int3
mov
mov
jns
scas
sub
out
test
int
cmp
adc
lds
into
inc
dec
add
add
jp
cmp
xlat
sub
and
mov
dec
or
jns
lock
cmp
xchg
into
mov
je
dec
js
aad
cmc
inc
inc
mov
sub
jl
dec
mov
pop
mov
jge
cmp
aas
xchg
cmpsb
jnp
je
xor
cli
fnstcw
int3
and
movsl
aaa
and
adc
cmpsl
add
sub
rorb
and
pop
rorl
std
inc
jae
push
cmp
adc
test
ja
push
ss
jecxz
xor
push
cmc
or
outsl
jb
adc
jp
cltd
mov
les
daa
xchg
lea
repz
in
or
andl
sarl
push
popa
xchg
rcr
icebp
add
jmp
sub
pop
jmp
insl
loopne
test
lret
xor
jge
pop
sti
or
test
adc
dec
in
pop
in
sbb
clc
cld
cmp
sti
jbe
out
lock
pop
pop
movsl
sbb
sbb
rcl
mov
xor
cs
out
mov
scas
movsl
or
inc
xorl
pop
lods
push
test
stos
clc
inc
jecxz,pt
out
mov
stos
sahf
int
or
xchg
nop
sbb
in
sbb
std
or
cmpsl
cli
fwait
iret
fisubs
iret
movsl
outsb
push
lahf
cmp
movsl
mov
lods
setno
daa
mov
mov
pop
inc
shr
ret
fiaddl
pop
push
pushf
mov
or
outsl
das
xlat
sbb
mov
jp
sub
mov
add
jbe
pop
push
push
dec
int
or
lods
fdiv
fbstp
rorl
sub
fidivrs
adc
pushl
xchg
inc
pop
cwtl
add
push
or
icebp
xor
insl
cltd
imul
mov
mov
mov
mov
add
jg
push
xor
push
add
daa
fildll
mov
mov
adc
inc
flds
xor
dec
movsl
adc
imul
rolb
mov
inc
add
hlt
shr
push
push
lds
pop
or
sbb
mov
lcall
out
sbbl
or
in
mov
xor
inc
sarb
cmp
test
jle
fs
out
daa
shl
fldt
mov
xor
movsb
lds
add
inc
pop
mov
test
xorb
cmp
fistl
push
mov
and
fdivp
cmp
mov
sub
cmp
sub
fnstenv
add
insl
lahf
scas
or
pop
je
popa
enter
aad
cmp
add
pop
mov
icebp
sub
or
out
psllq
mov
pop
bound
xor
sbb
outsl
pop
pop
fsubrs
fcoml
push
nop
call
add
fstpt
xor
jns
push
in
mov
push
data16
xchg
imul
fwait
inc
mov
lcall
mov
sbb
sahf
aas
or
aas
pop
les
icebp
xchg
lahf
cmc
gs
xchg
in
or
adc
das
sbb
sbb
add
leave
repnz
out
out
aad
xchg
in
lds
int3
mov
shrl
lods
adc
inc
push
pop
dec
push
int3
lahf
and
sbb
call
and
and
aas
rorl
in
js
xor
ficompl
mov
js
aam
and
lea
jp
in
jbe
sub
mov
or
icebp
icebp
outsl
cld
pop
movsb
add
adc
cmp
pop
add
mov
add
test
pop
imul
stos
shrl
sbb
and
sub
jp
add
inc
or
cmp
pop
xor
mov
lcall
inc
mov
daa
cmp
dec
js
shlb
je
xchg
jg
mov
jg
adc
adc
roll
mov
fs
or
mov
mov
cs
test
mov
push
sbb
jge
add
mov
jo
leave
test
icebp
lret
push
in
jge
outsl
push
inc
mov
xlat
xor
inc
in
imul
cmpsl
test
xor
data16
movsl
mov
push
xorb
mov
or
ftst
test
jb
lea
repnz
dec
mov
push
jo
adc
pop
lcall
dec
lret
mov
stc
cli
lcall
and
cltd
test
fnstenv
jp
xor
in
cmp
sub
insl
mov
cli
push
shrl
rorl
sbb
jp
xchg
mov
mov
faddl
mov
xchg
jmp
mov
xchg
ret
xchg
movsl
clc
lahf
cmc
test
mov
fsubrs
xchg
or
lods
mov
je
dec
lock
cmp
or
push
aad
int
mov
and
mulb
mov
aam
and
and
loopne
or
add
jle
shufps
mov
cltd
xchg
fstpl
inc
int
jnp
movsb
dec
or
andl
pop
lods
mov
inc
mov
rorb
aaa
mov
xchg
movl
mov
xchg
test
jge
popa
mov
fisttps
push
sub
adc
in
dec
mov
rorl
clc
mov
lds
adc
jns
stc
lret
shr
sub
jge
push
adc
rcll
sbb
push
rcl
sub
scas
add
in
sbb
jecxz
xchg
nop
lcall
das
dec
test
jne
lods
scas
test
stc
loopne
xchg
sub
dec
and
or
jle
cmc
add
sarl
push
scas
sub
mov
mov
xor
adc
imul
loop
lahf
in
mov
pop
mov
push
insl
or
jnp
pop
ret
cmp
das
jle
pop
mov
aam
and
adcl
arpl
add
inc
sbb
push
arpl
fs
add
repnz
cltd
enter
push
fsubl
jo
push
outsl
les
stc
mov
aam
push
xor
cmpsb
push
dec
repnz
and
and
fyl2xp1
sub
idivl
addl
inc
dec
fidivrs
out
jb,pn
repz
xlat
inc
inc
add
inc
fdivrl
dec
mov
adc
mov
cmpsl
insl
push
in
aas
lret
pusha
jl
xchg
or
cmc
icebp
loope
add
cmp
jmp
dec
sub
add
sub
add
ljmp
dec
ja
xchg
int
jmp
cmp
das
stc
cmp
pushf
pop
push
sbb
push
xlat
push
jne
enter
repnz
mov
inc
lcall
cwtl
or
mov
sbb
mov
aaa
mov
lret
push
cld
mov
push
push
cltd
addr16
mov
mov
addb
test
mov
inc
or
or
imul
mov
mov
stos
pop
scas
outsb
test
adc
push
inc
push
xchg
adc
icebp
jno
inc
loop
test
jl
scas
jnp
sbb
stos
push
dec
sub
in
sub
inc
dec
jne
pop
shlb
pop
into
mov
popf
mov
push
sub
das
cwtl
pop
popa
pushf
dec
jecxz
repz
in
xchg
push
mov
xchg
push
pop
arpl
push
lods
push
adc
sub
pop
in
icebp
pushf
aaa
dec
movsl
incl
inc
clc
icebp
adc
stc
adc
sbb
insl
push
mulb
ljmp
out
pop
and
mov
sbb
js
push
repz
daa
insl
xchg
aad
mov
sbb
jb
clc
mov
lret
jge
in
push
popa
inc
inc
dec
inc
mulb
add
rorl
push
mov
adc
push
push
jae
adc
pop
mov
cld
dec
and
pusha
pop
adc
cvtdq2ps
or
xor
daa
inc
lods
or
sub
mov
cmp
lods
sub
testb
test
xchg
dec
mov
cmc
sbbb
sbb
test
hlt
fdivrs
lret
cmpsl
ret
fwait
dec
adc
rcl
push
and
xchg
std
cmpb
push
jnp
addl
test
cmpsl
pop
stos
mov
inc
jae
loopne
lds
jns
scas
sub
xchg
fcoml
sub
jle
lahf
mov
scas
fnstcw
inc
jae
inc
in
std
sbb
out
pop
loopne
std
push
cli
clc
cmpsl
cmp
lea
mov
shll
fisubrs
imulb
imul
out
mov
scas
aaa
jmp
dec
data16
loopne
decb
loope
dec
test
arpl
and
push
test
test
shrb
jmp
add
xlat
jb
out
pop
pop
sahf
pop
or
sub
sbb
inc
aas
xchg
sub
aaa
cmpb
daa
mov
cltd
lods
cmp
sub
jp
sub
loop
sub
daa
or
mov
shlb
lea
fnstsw
push
dec
in
mov
test
add
jl
enter
std
jmp
jo
rorb
push
dec
bound
gs
push
inc
popf
mov
xchg
call
pop
lock
xchg
shrb
xor
arpl
jl
ljmp
pop
mov
cmp
shrb
mov
int3
add
jnp
fldenv
call
pop
add
ret
xchg
jcxz
lds
pmullw
xor
pop
call
jb
mov
into
sbb
xor
mov
push
scas
clc
and
out
into
mov
push
lcall
imulb
cmp
sti
dec
jno
xchg
mov
push
push
in
decb
js
pop
inc
shlb
es
dec
ficoms
mov
loope
out
adc
xor
es
popa
test
mov
aas
in
jo
push
pop
rcrl
xor
xchg
stos
movq
hlt
adc
and
or
stc
stos
pop
cmp
push
push
jnp
jp
lea
sub
push
xlat
inc
sarb
rcll
xchg
push
fidivrs
mov
pop
popa
sti
outsb
inc
mov
pop
xchg
test
inc
pop
push
repnz
pop
jp
jp
xchg
shlb
sahf
sbb
pop
and
hlt
mov
mov
bound
fsub
insl
aas
rolb
pop
push
mov
test
lock
call
rorl
imul
lret
movsb
cmp
inc
sub
fwait
pop
inc
cmp
inc
or
xchg
inc
mov
mov
sub
mov
adc
or
imul
pop
mov
repz
movsl
jecxz
mov
ret
push
xchg
popf
gs
mov
xchg
out
xchg
adc
dec
push
mov
cvtpi2ps
mov
insb
mov
ljmp
inc
aam
pop
or
ljmp
clc
sbb
cmp
mov
sub
lea
inc
pop
sbb
push
mov
insb
xor
or
stos
sahf
sub
push
int3
mov
inc
add
stos
mov
jns
cmc
mov
jae
clc
filds
xlat
mov
mov
inc
in
add
cmp
sub
rcrb
cli
in
dec
out
in
cmp
adc
adc
mov
dec
stos
nop
and
mov
jl
and
call
dec
push
loope
xor
jae
xchg
lret
out
push
add
xchg
xchg
xchg
arpl
xchg
pop
sbb
fldcw
jp
jne
and
outsl
ljmp
mov
rcr
out
pop
lods
inc
stos
jg
inc
xchg
aam
sub
insl
push
push
ficompl
test
and
bound
aas
cwtl
sub
xchg
jne
cmc
ljmp
push
mov
xor
add
into
pop
sbb
push
fstps
imul
push
sar
cmp
popf
lods
out
lock
stc
add
fwait
or
scas
dec
xor
adc
xchg
insb
mov
mov
pop
stos
and
mov
inc
and
inc
jnp
lret
sbb
xchg
xor
imul
mov
sbb
movsb
out
sub
or
or
pusha
in
mov
push
push
rcr
mov
push
sub
cli
pushf
pmuludq
or
mov
mov
and
enter
mov
mov
fidivl
or
lock
les
shl
imul
inc
arpl
rcl
cmp
xlat
adc
sti
sub
lods
push
sub
dec
lds
daa
xor
int
in
das
hlt
pop
sub
xorb
std
pop
inc
js
cwtl
jne
dec
lcall
push
jns
mov
cwtl
push
pop
mov
xor
mov
adc
repnz
mov
adc
jne
rorl
xchg
cli
or
jmp
jns
mov
xchg
rcrb
mov
repnz
dec
push
jge
adc
cs
out
xchg
lcall
add
aam
scas
dec
pop
pop
sub
out
fsubrl
mov
fdivl
mov
pusha
jb
inc
mov
test
scas
adc
test
jbe
pop
jnp
fisubs
fistl
andb
cmp
gs
shrb
sub
sbb
cmc
arpl
fstpt
mov
inc
insl
rclb
push
int3
fadds
incl
xchg
sub
push
inc
lret
sub
cwtl
movsb
sarl
and
cmp
dec
js
and
retw
movsb
shrb
insl
int
sbb
mov
mov
cmc
repz
xchg
lahf
loopne
dec
xor
out
and
or
xchg
movsl
imul
mov
test
cwtl
xchg
and
bound
call
xchg
lret
shlb
rolb
sahf
cmp
push
push
sub
daa
add
xchg
sub
mov
repnz
scas
and
stc
fdiv
inc
mov
add
in
pop
cmpsl
xor
lock
lods
cmp
leave
js
mov
mov
mov
xor
loopne
lods
and
cmp
jg
mov
lock
mov
xchg
pushf
jp
mov
pop
cltd
push
xchg
std
inc
pushf
outsb
inc
sub
stc
mov
adcb
mov
test
mov
pop
movsl
adc
fmull
mov
pop
imulb
jo
and
xor
das
sti
jg
test
test
fs
sbb
adc
mov
sbb
mov
rorb
test
pop
loope
test
add
addr16
stos
call
push
aas
cmc
lret
imul
add
into
inc
or
mov
push
push
out
adc
pop
xchg
aaa
cld
addl
sbb
jae
pop
lods
aam
mov
push
jb
sbb
pop
xor
mov
mov
inc
int
insb
push
or
xchg
mov
lods
push
fstpt
subb
jp
rcll
jo
sub
jl
pop
fistl
push
inc
sbb
in
jo
jle
cmp
inc
jnp
cmp
lds
adc
lcall
pop
in
ret
clc
push
inc
cs
pop
push
adc
cmp
xor
jge
cmpb
fdivrl
mov
xchg
lret
dec
pop
orl
cltd
push
sub
xor
xchg
inc
testb
insb
setne
pop
push
sbb
dec
ficoms
add
jns
sbb
pop
mov
inc
lds
lds
gs
jp
cld
and
sub
and
xchg
mov
addr16
cmp
cmpsb
pop
scas
outsb
sub
int3
lret
pop
ret
lods
inc
adc
xchg
jnp
imul
inc
test
movsb
andb
popa
xchg
ret
dec
push
xchg
sbb
mov
mov
hlt
or
sub
and
hlt
cmp
mov
add
cmp
add
xchg
xchg
pop
nop
jg
fsubr
nop
aam
mov
push
sub
ds
lret
mov
sub
stc
imul
jae
sub
push
xor
pop
mov
mov
cmp
enter
add
mov
mov
mov
inc
outsb
fidivs
cmpsb
lods
mov
xchg
addb
xor
movsl
lahf
fbstp
lea
and
test
fwait
or
pusha
fldenv
mov
getsec
fisttpll
add
or
mov
icebp
dec
stos
fbld
jp
and
inc
xchg
popa
adc
jbe
cmpsl
mov
scas
xor
pushf
and
int
sbb
mov
xchg
clc
or
sub
aas
pop
adc
jne
fnstsw
jp
adc
push
enter
jno
stc
xchg
pop
jnp
and
popa
xor
loope
pop
insl
insb
jle
mov
in
les
mov
cmp
or
int
adc
fldt
cmpsb
mov
dec
jg
ljmp
xchg
test
mov
rcll
rorb
int
hlt
sarb
xchg
mov
arpl
aam
push
inc
popa
push
mov
xchg
xor
int
test
push
adc
push
push
inc
int
ds
dec
xor
scas
jmp
je
sub
jne
jo
das
xchg
jmp
xor
stc
mov
add
cmp
fdivp
leave
mov
dec
pop
cmp
or
leave
dec
jl
pop
sbb
mov
dec
ja
lods
mov
lcall
je
mov
add
add
mov
test
fstpl
xchg
sbb
sbb
sbb
stos
fcompl
pop
les
mov
cmpsl
movb
xor
notb
cmp
and
cltd
xchg
jo
pop
dec
inc
adc
enter
adc
js
xchg
or
mov
arpl
sub
sub
add
rorl
outsl
test
jns
push
test
sbb
jns
jb
hlt
cmp
fsub
je
or
push
cli
fmull
pusha
pop
cwtl
out
mov
mov
lods
out
adc
out
ss
inc
push
adc
lret
xchg
adc
xor
cmp
out
adc
mov
popa
fucomp
cmp
xchg
add
sub
and
int3
in
jbe
xor
ja
out
inc
jnp
andb
cmpsl
lock
iret
sbb
mov
mov
xchg
pop
jecxz
dec
or
clc
aas
repnz
jge
sbb
add
inc
frstor
std
jno
and
aam
pop
cmp
rol
negb
mov
js
nop
and
sub
cld
je
cmp
cli
adc
inc
lret
ret
fsts
mov
mov
test
sbb
fstpt
dec
mov
jo
xor
cmpsb
dec
jge
das
adcl
psllw
and
or
mov
cmp
cmp
and
ret
pop
std
popa
imul
lahf
add
ja
pop
cs
jne
xchg
dec
cmc
test
mov
mov
mov
ss
imul
xor
or
add
mov
hlt
mov
and
cmp
popf
mov
sub
imul
push
and
mov
mov
push
dec
mov
inc
stos
xchg
cmc
or
jns
mov
inc
and
addr16
mov
popl
cmp
mov
mov
jno
aam
stos
das
mov
in
in
cmp
test
mov
call
push
out
shll
cmpsb
push
jbe
dec
jp
aaa
sub
sahf
pop
pop
push
or
and
test
mov
mov
pop
lock
pusha
rcrb
jbe
popf
push
dec
ficompl
adc
add
mov
pushf
add
dec
pop
push
out
pop
in
cmpsb
mov
movsl
pop
push
adc
sub
lret
mov
popa
mov
or
mov
rcll
jmp
dec
scas
add
push
aad
sbb
push
push
adc
xchg
scas
push
loop
mov
xchg
add
pop
andl
movsl
mov
adc
xorb
jl
decb
aaa
in
clc
daa
mov
pop
lahf
dec
cmpsl
nop
inc
lods
adc
movsb
cmp
adc
inc
mov
and
aam
iret
cs
or
inc
jmp
loope
pop
iret
lock
imul
notb
sti
and
dec
shlb
into
lods
adc
jg
sbb
pop
in
dec
test
xor
jns
xchg
cmp
push
or
insl
inc
cs
and
pop
out
adc
adc
lcall
sub
jmp
loope
inc
adcl
adc
push
leave
jmp
rol
mov
jl
sub
popa
push
mov
rcr
out
and
dec
pop
sub
sbb
or
cld
fucomip
out
fdivr
int3
mov
mov
insb
outsl
pop
jg
pop
sub
sbb
or
cld
fucomip
out
fdivr
int3
mov
mov
insb
outsl
pop
jg
pop
sub
sbb
fucomip
out
fdivr
int3
mov
mov
insb
outsb
pop
jg
pop
lods
das
pushf
aas
repz
add
inc
inc
fdivr
mov
push
arpl
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
lcall
iret
shlb
inc
ljmp
ret
aas
mov
setb
out
jb
inc
iret
push
mov
add
shrb
ret
aas
int
mov
ret
push
out
jb
ljmp
lahf
in
outsl
xchg
sub
popa
mov
push
mulb
mov
out
sbb
aaa
mov
mov
mov
add
mov
aas
aas
xchg
dec
int3
je
push
arpl
sbb
xchg
and
into
xchg
inc
jns
mov
inc
mov
shlb
pop
pop
arpl
pop
inc
jl
jno
or
movsb
popa
cltd
jg
add
pop
lahf
andb
mov
push
dec
ljmp
out
jg
jg
shl
imul
pop
push
roll
fwait
lcall
movsb
ja
or
loop
add
sub
insl
add
das
push
pusha
inc
add
das
loop
lcall
cs
pop
andb
out
sbb
iret
pop
mov
fmuls
xor
rorb
aas
mov
dec
pop
orb
mov
add
pop
cli
imul
movsb
imul
int
pop
ret
pop
repz
daa
popf
xor
dec
ret
add
xchg
push
cmpsl
or
insl
jecxz
stc
xchg
xor
xor
mov
add
repnz
ret
aas
mov
setb
out
jb
inc
iret
push
mov
add
repnz
ret
aas
mov
setb
bound
fs
jle
mov
fwait
outsb
cltd
hlt
push
test
in
push
mov
stc
inc
fsts
shlb
addr16
aaa
adc
adc
or
sar
dec
adc
dec
and
mov
scas
gs
and
adcl
dec
into
std
sbb
xchg
arpl
inc
negb
jns
enter
or
sbb
push
rorb
cli
push
inc
or
pop
daa
xor
inc
sub
je
cmp
and
jbe
hlt
js
add
nop
mov
mov
or
bound
sqrtps
incl
movsl
outsb
mov
ss
popf
js
push
mov
bound
mov
cltd
in
dec
call
push
idivb
in
leave
xchg
fxch
mov
into
aam
test
lods
gs
in
inc
add
pop
dec
xchg
mov
jae
cltd
je
out
lret
sbb
xchg
ljmp
sbb
jecxz
imul
mov
popf
outsb
lcall
into
push
shll
les
and
jnp
cli
aam
fstpl
scas
and
fwait
sub
stos
inc
les
mov
dec
cmpsl
test
inc
mov
repnz
lret
pop
jns
sbb
dec
test
jb
sbbb
sub
dec
lcall
ja
xchg
popa
mov
std
sbb
and
mov
mov
pop
jns
add
pop
sub
jae
sub
lcall
mov
xchg
stos
xchg
cwtl
and
push
cli
xchg
lods
cltd
sbb
inc
fsts
repz
push
adc
mov
mov
aam
push
xor
pop
insb
mov
mov
js
add
mov
add
lcall
shl
pop
ja
psllq
mov
inc
aam
scas
divb
and
flds
adc
mov
mov
mov
sub
cmp
mov
add
out
add
xchg
inc
sahf
sub
mov
jb
lcall
xchg
js
push
pop
cli
repnz
mov
jo
leave
fidivs
inc
sbb
lock
jge
xchg
adc
or
cld
dec
shll
inc
push
popf
les
rcll
mov
hlt
rorl
xchg
mov
pop
jns
mov
scas
pop
jg
add
sbb
push
insb
xchg
jmp
ret
inc
fisttps
into
and
adc
and
lea
mov
jp
out
mov
mov
mov
lret
js
rolb
jl
lea
jmp
cli
dec
movsb
imul
pop
xchg
push
fcmovbe
mov
pop
icebp
int3
jle
sbb
dec
mov
mov
push
or
bound
cli
push
xor
iret
sahf
and
stos
sbb
icebp
adc
sub
and
lcall
mov
iret
mov
add
jae
popf
push
fldl2t
lret
jmp
adc
call
mul
xchg
mov
jns
jae
orb
add
in
lods
repnz
cmp
mov
pop
inc
roll
jge
call
sbb
mov
aas
lahf
movsl
dec
ret
sbb
xchg
jae
rorl
leave
in
subl
xchg
sti
sub
pop
insl
lds
add
and
enter
adc
dec
sub
mov
jg
mov
adc
es
int
add
insb
mov
mov
stos
jns
fwait
jg
scas
cld
add
and
out
push
cltd
xchg
ror
dec
adc
incl
mov
mov
or
mov
push
inc
test
sbb
pop
adc
push
sbb
dec
cltd
stc
or
sahf
out
inc
mov
pop
jae
jae
push
sub
out
mov
xchg
mov
mov
pop
dec
mov
clc
iret
xor
fsubrs
and
cmpsl
adc
cmc
mov
dec
sar
dec
mov
push
clc
sti
inc
dec
sub
mov
vorps
xor
hlt
xor
imul
sbb
pop
and
push
cmp
pushl
mov
pushl
mov
aam
orl
sbb
rorl
aam
leave
pop
stos
mov
out
out
sub
aad
mov
notb
dec
mov
push
dec
andl
hlt
jmp
pop
jmp
cmp
loope
jecxz
jb
sbb
pop
and
addr16
sbb
rclb
fsubrp
les
dec
xor
jnp
mov
adc
repnz
fwait
push
ret
pusha
aam
movsb
push
or
daa
int
scas
out
mov
mov
insb
add
bound
cmp
test
aad
jnp
fildll
jmp
je
inc
inc
or
mul
or
inc
pop
sub
inc
xchg
adc
fdivs
push
inc
xchg
nop
xchg
jge
ja
pushf
into
ds
cld
outsl
ficompl
sbb
sub
pop
out
mov
cmp
movsl
ret
outsl
cli
dec
dec
mov
sub
add
mov
rclb
adc
pushf
jecxz
mov
mov
jne
xchg
xchg
js
adc
xor
leave
dec
in
cmp
inc
adc
aam
cmp
iret
sbb
cld
push
push
pop
test
xor
imul
loope
mov
les
mov
push
xlat
cld
sub
push
lahf
push
sbb
mov
mov
xor
out
inc
imul
push
and
push
inc
out
dec
and
lock
lock
or
mov
push
pop
dec
lods
dec
sub
cmpsb
sbb
dec
repnz
adc
aam
sub
sbb
sarb
dec
jge
fsubrs
sub
cmp
ret
out
lods
ds
dec
mov
lods
jecxz
or
xchg
inc
sbb
inc
sti
outsb
mov
mov
iret
scas
rep
and
push
push
lret
jp
cmp
out
sbb
cld
daa
sub
in
push
fbstp
pop
cmp
in
jns
fisttpl
xor
aas
adc
outsl
pop
addb
xorb
cs
aad
jno
insl
int3
jmp
sub
sahf
xchg
add
pop
in
pop
sub
cs
jle
scas
push
dec
and
js
push
xchg
and
stos
in
dec
mov
mov
mov
ret
or
movl
cmp
jmp
and
data16
add
xchg
lcall
adcb
in
fs
mov
out
mov
pop
call
stos
in
fcoml
pusha
xchg
inc
mov
das
cmp
lea
pop
mov
xor
fildll
repz
sbb
cmp
movsl
out
daa
mov
sarl
jl
call
cs
xor
stc
pop
je
xor
out
scas
lea
or
xchg
dec
dec
frstor
push
js
icebp
aam
sbbb
mov
in
loopne
xchg
mov
rol
addb
mov
stc
xchg
add
fdivp
sahf
push
or
xor
and
lret
push
dec
scas
pushf
and
dec
mov
cs
ret
test
sub
or
sbb
add
sub
jl
and
int3
inc
mov
mov
jbe
int3
jp
cmp
lea
xlat
stos
ss
inc
pop
out
jbe
push
stos
sar
imul
jo
pop
arpl
add
fmuls
lcall
pop
cmp
sub
enter
pop
pop
sarl
mov
movsl
pop
xchg
test
mov
je
das
test
cmp
shll
cmp
dec
cmp
hlt
mov
xchg
out
cmc
sbb
xlat
int
test
repz
ds
les
fmul
cli
out
cmc
int
xor
js
mov
xor
jno
jle
movsb
rclb
mov
cvttps2pi
cmp
ja
add
push
lock
ret
in
cmp
movsl
das
push
mov
pop
mov
mov
out
add
dec
les
inc
sbb
mov
das
xchg
cmpsb
push
pop
ljmp
add
or
pop
sub
popf
cmpsb
mov
push
inc
sbb
jne
xor
lcall
loopne
decl
push
jg
scas
std
xor
in
std
or
fwait
bt
pop
movsb
push
aaa
aas
mov
scas
imul
mov
lret
lods
cs
stc
push
in
leave
test
addr16
jmp
xor
sub
movsb
imul
test
dec
add
lods
fwait
js
mov
cmpl
lods
jbe
push
inc
mov
push
push
outsb
mov
push
dec
inc
or
in
push
pop
xchg
clc
iret
or
jge
xchg
fstps
mov
dec
filds
and
jg
repz
sahf
into
and
push
push
dec
sbb
fiaddl
hlt
inc
or
ficoml
int
mov
push
idiv
enter
aam
fsubs
into
pushf
fcoml
loope
scas
or
mov
negb
cs
out
mov
adc
stos
sbb
loopne
xchg
cltd
ror
mov
orb
mov
dec
and
sbbb
rorb
dec
mov
int3
addr16
adc
cli
mov
test
and
adc
in
mov
int3
lcall
mov
cwtl
push
mov
loop
and
popa
ds
add
cld
ljmp
bound
into
iret
in
push
cmpsb
iret
pop
push
adc
movl
pop
int3
xchg
outsl
add
pop
in
mov
jg
fildll
pusha
mov
sti
icebp
mov
test
pop
fpatan
mov
lods
push
pushf
std
std
inc
push
xchg
push
js
scas
pop
pop
cmp
sbb
sbb
imul
jns
imulb
ret
adcl
mov
add
nop
jg
jl
les
aam
jmp
popa
arpl
xlat
out
xchg
loop
pop
jmp
out
cs
lods
stos
cmp
shlb
int3
jno
or
std
fmul
xor
inc
push
mov
mov
pop
mov
inc
fiaddl
lock
sbb
jge
lds
mov
dec
movsl
push
xchg
mov
andl
out
sub
cmp
movb
pop
sub
insl
xorb
push
mov
enter
mov
pop
mov
testb
movsb
lds
cmp
stos
fstps
jno
jge
mov
and
stos
testl
xchg
mov
mov
jmp
push
scas
jl
jg
loop
lock
sub
fs
les
or
lahf
jle
inc
mov
mov
and
pop
movsb
in
push
leave
xchg
call
and
lock
jmp
stc
cmp
xchg
sub
pop
dec
and
dec
lock
push
pop
push
mov
cmp
xchg
dec
cwtl
mov
aam
ficoml
imul
mov
in
es
lcall
add
jl
scas
jp
repz
xor
loop
addr16
push
mov
sbb
clc
fwait
push
or
out
xchg
in
jnp
cwtl
outsl
cmc
dec
flds
jg
out
inc
andl
push
test
add
pusha
mov
lret
cmp
jge
cltd
test
inc
ja
hlt
sub
stos
fldcw
stc
data16
gs
cld
les
popa
rep
dec
jmp
xchg
or
mov
shr
stos
push
orl
fidivs
jmp
daa
jmp
les
lock
dec
jg
mov
cmpsb
mov
or
pusha
call
cmpsl
mov
or
clc
pop
cmp
jne
shr
stos
push
cmp
lret
gs
cli
aam
xchg
movsl
std
cmp
jg
pop
test
dec
dec
dec
push
mov
mov
ss
sub
mov
daa
mov
mov
in
mov
jb
push
dec
and
das
or
dec
stos
mov
stc
adc
or
ficoms
dec
pmaxsw
dec
aad
mov
inc
dec
adc
pop
clc
or
sbb
rcrl
ja
ss
mov
pop
xchg
dec
mov
fcoms
pop
sbb
popf
inc
cltd
ljmp
and
pop
sbb
notl
test
enter
sub
pop
lahf
test
mov
push
sbb
cltd
int3
jbe
fmulp
xlat
loopne
lock
repz
xchg
pop
xor
leave
push
mov
mov
inc
cli
lods
xchg
and
mov
pop
mov
fnstcw
out
aam
pop
js
fwait
dec
push
sbb
and
adc
movsb
cmc
mov
dec
ret
add
out
adc
aam
cmp
fsubs
fsubr
jnp
mov
leave
jg
aam
int
pop
leave
push
add
out
and
push
xchg
mov
roll
out
test
add
add
fistpl
sbb
pop
sub
cmpsb
imul
mov
jae
or
testb
xchg
mov
xchg
lret
fnstsw
jb
mov
dec
jmp
mov
sbb
shll
cmpsb
call
aas
pushf
insb
or
push
push
out
shl
fdiv
jno
mov
sub
mov
sahf
mov
cmc
sahf
mov
pop
ret
mov
test
push
cmp
mov
push
mov
lock
lcall
jae
push
daa
adc
xchg
push
xchg
insb
cmp
fdivrl
jmp
inc
or
outsl
inc
scas
xor
dec
mov
stos
sbb
or
mov
xchg
and
jge
xor
cmp
xchg
pop
inc
sub
adc
insb
push
cmpsl
push
daa
mov
adc
mov
push
sub
xor
int3
leave
cld
mov
lahf
mov
xor
pop
insl
mov
shll
jmp
stos
lret
fwait
push
std
rorb
or
xchg
nop
nop
sub
cmp
aaa
jb
or
push
setae
mov
pop
in
add
incl
imul
lock
push
xor
jge
jmp
das
cmpsl
push
lret
mov
in
insl
sarb
fldenv
sub
sbb
out
loopne
lock
mov
and
fwait
cmp
mov
mov
fcom
pop
xchg
imull
aam
pop
mov
jns
shrb
ljmp
mov
or
jmp
xor
dec
ja
in
mov
adc
dec
fs
cmp
in
es
push
push
cmpsl
sbb
xchg
test
outsb
lcall
pop
sbb
movsb
lcall
pushl
sub
xchg
dec
bound
neg
movsl
or
xor
mov
mov
push
jnp
xor
jns
scas
scas
mov
cmc
jnp
stos
arpl
jmp
xchg
in
sbb
sub
and
popa
xchg
push
pop
pop
lods
lds
leave
fnstenv
jge
or
jle
dec
xchg
popf
cmpl
or
mov
xor
jle
ficomps
aam
clc
lods
loope
pop
xchg
xlat
dec
or
in
out
stos
inc
int
fdivl
push
xchg
cli
sub
fsubs
test
sub
arpl
lods
jge
pop
mov
pop
dec
mov
fcmovb
or
push
stos
cli
cmp
ljmp
int
mov
out
in
pop
repnz
loop
fists
jmp
das
ret
add
rcrl
ret
xchg
insb
xor
popa
xlat
pushf
imul
std
mov
and
sbb
subb
mov
mov
cmpb
insl
gs
xchg
xchg
outsl
out
popf
mov
inc
lcall
xchg
loopne
sbb
fnstsw
mov
mov
fcomps
push
adc
out
cmp
inc
add
push
test
sub
shl
out
or
dec
cmc
jbe
mov
push
and
mov
loope
or
jns
or
and
dec
cli
shr
push
adc
pop
sbb
pop
adcb
mov
rcll
and
repz
stos
test
in
stos
cwtl
fcmovnu
ret
jno
lods
mov
aas
cld
mov
mov
xchg
cmp
loopne
inc
add
or
jno
pop
rcl
dec
fldt
jecxz
push
in
movsl
das
subl
adc
push
ret
sahf
xor
mov
fldt
outsl
jge
sub
test
movsl
repnz
cmpsb
outsl
cli
psllw
mov
mov
data16
add
std
pop
xchg
xchg
jne
sbb
jbe
or
ds
je
into
or
or
push
lds
or
or
or
int3
roll
into
pop
pop
scas
lds
add
stos
mov
dec
cmp
adc
mov
in
into
sub
notb
adcb
mov
std
jg
ljmp
mov
ds
jnp
sub
ds
aad
ja
ret
pop
ret
lcall
or
scas
xchg
or
scas
icebp
iret
and
in
sbb
cmpsb
mov
add
mov
outsb
std
mov
imul
fdivl
ljmp
cmpsl
stos
xor
sub
push
adc
dec
call
or
stos
xchg
add
jp
add
cmpsb
lods
push
int
ljmp
movsl
xor
mov
dec
mov
pop
rolb
shl
lds
jo
xchg
cmc
push
adc
push
lahf
movl
jmp
inc
incb
mov
xchg
data16
fdivrl
aad
mov
jle
ret
jns
sbb
xor
shr
sub
push
fdivr
mov
fldl
push
jno
pop
xor
stos
sbb
shlb
ds
adc
test
ja
push
fists
std
mov
and
jae
jp
mov
std
push
dec
nop
jge
cltd
pop
lret
mov
insb
add
test
stos
mov
out
inc
or
ret
dec
adc
mov
mov
or
cmp
in
fs
dec
sbb
and
fdivl
mov
pop
mov
out
xor
jecxz
mov
scas
sahf
imul
or
rol
xor
loope
add
push
rolb
cmp
jne
movsb
mov
fnstcw
rcrb
subb
mov
adc
clc
mov
xchg
repz
test
adc
scas
in
shll
xor
push
outsb
mov
dec
mov
repz
mov
call
hlt
clc
icebp
movsb
or
sbb
and
mov
add
jbe
xor
cmpsl
in
stos
adc
out
xchg
clc
iret
xchg
insb
int3
cmp
jge
jge
leave
out
mov
mov
inc
add
lcall
mov
shlb
loope
adc
xor
mov
out
dec
popa
add
mov
ss
adc
xor
leave
adc
mov
adc
add
ljmp
jnp
jmp
push
inc
gs
pop
insb
pop
adc
and
mov
clc
loopne
xchg
lods
mov
sbb
arpl
or
jbe
ret
cli
mov
dec
xor
cmc
pop
mov
das
loopne
call
das
push
fistl
lods
es
mov
add
clc
dec
add
outsl
cmpsb
loope
cmp
add
mov
enter
fcoml
push
add
jnp
cmpsb
lret
sahf
pop
cmpsb
aaa
xchg
lods
mov
mov
pop
leave
mov
jnp
cmp
repz
test
cmp
sub
or
outsb
into
ret
daa
mov
shll
sahf
sar
xchg
ffree
pop
leave
mov
in
xchg
and
push
les
jle
lock
into
jle
pop
ss
shlb
scas
jl
cmpsl
mov
cmp
push
mov
push
popf
in
ficomps
lahf
lret
in
or
fsub
adcb
dec
test
xchg
insb
sbb
jle
inc
or
pop
xchg
pop
imul
roll
inc
iret
push
pop
lret
xchg
daa
mov
add
leave
repnz
mov
std
adc
insl
adc
xor
push
mov
lea
scas
jo
fwait
mov
mov
jmp
xlat
dec
add
lcall
sub
cmp
jnp
test
pop
push
sub
subl
adcb
dec
aad
mov
inc
xor
out
sub
inc
sbb
cmp
lret
repz
enter
cmp
lods
xchg
divl
ja
xchg
cmp
aas
mov
ret
lea
xor
pop
push
lret
sti
xor
popa
lret
stc
add
add
mov
xor
pop
mov
mov
mov
xchg
in
xor
mov
das
xorb
gs
test
jp
jns
in
or
stos
or
shrb
or
inc
and
hlt
cmp
cs
push
mov
add
repnz
ret
aas
mov
setb
out
jb
inc
iret
push
mov
add
repnz
ret
aas
mov
setb
out
cmp
cmp
push
mov
add
repnz
ret
aas
mov
setb
out
jb
inc
iret
push
mov
orb
cmc
ret
dec
sub
insl
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
dec
aas
add
or
or
or
jg
mov
aad
test
cmc
frstpm(287
lret
add
add
or
inc
imul
gs
mov
addr16
aad
jmp
frstpm(287
lret
or
sbb
sub
dec
pop
and
jb
xchg
mov
sar
cli
test
lea
jg
push
dec
dec
outsb
pop
je
xchg
inc
fcomps
jl
dec
pusha
mov
and
adcb
xor
loopne
movsb
lods
mov
inc
jp
dec
fs
imul
push
jb
inc
out
sbb
jge
xchg
mov
pop
jne
or
or
cmp
or
push
pop
popf
fwait
gs
mov
fs
mov
xchg
data16
or
cmc
in
cli
insb
out
hlt
add
lcall
mov
xchg
js
sbb
aam
outsb
test
call
sub
push
jp
dec
dec
movsb
loope
xchg
aad
adc
mov
or
jnp
imul
mov
add
cmp
push
ja
addr16
sub
ja
or
clc
test
ds
call
nop
scas
andb
push
sub
sbb
and
fiaddl
mov
test
aaa
lret
push
ja
addr16
pop
gs
xchg
mov
movsl
mov
sti
frstpm(287
lret
adc
sbb
imul
dec
xchg
mov
movsl
mov
sti
frstpm(287
lret
adc
dec
in
sbb
call
jnp
stos
fucomi
pop
or
negb
add
call
mov
pop
mulb
mov
cmp
mov
out
ret
sbb
hlt
cld
xchg
xchg
sub
sub
dec
mov
aam
push
leave
push
lret
jg
xor
enter
dec
adc
sbb
mov
jae
ja
shl
aad
push
push
inc
add
shrb
movsl
dec
lea
add
jp
pop
out
push
and
lret
hlt
add
jp
or
mov
mov
mov
mov
sub
hlt
cmp
inc
jge
jnp
xchg
mov
adc
xor
inc
jle
fnsave
fsubl
mov
mov
sbb
and
or
in
mov
mov
pop
inc
ljmp
pop
push
cmp
in
std
adc
and
addb
push
test
dec
iret
outsb
imul
ja
out
in
gs
sarb
mov
cmp
test
add
orb
cld
test
out
xor
in
int3
or
mov
cltd
sti
pushf
aas
icebp
fistpl
jge
push
or
cwtl
cmp
inc
lds
lea
add
hlt
popf
addr16
pop
inc
lret
mov
jns
xchg
aaa
sub
sbb
xchg
int
or
aam
bound
and
lock
adc
sbb
add
bound
ret
data16
adc
sarb
cltd
lea
mov
pushf
mov
jecxz
sub
mov
dec
sub
cmp
shr
cli
ss
mov
rcll
shlb
scas
xor
bound
pop
dec
insl
jmp
cmp
sub
dec
inc
cli
nop
mov
sbb
ret
sbb
pop
pop
arpl
es
add
repnz
arpl
cwtl
jmp
dec
mov
pop
push
decl
sti
jmp
xlat
xor
or
insl
mulb
aaa
fmuls
lock
lret
fdiv
add
incl
push
mov
mov
jg
xor
and
mov
cwtl
jne
add
add
add
xorb
mov
aad
pop
icebp
stc
mov
push
pop
push
mov
divb
adc
mov
lcall
lahf
daa
fistpl
inc
add
into
in
es
stc
rcll
cmp
jnp
jns
sub
or
fisttpl
cltd
xlat
push
lock
outsb
mov
mov
sbb
adc
jb
clc
push
sub
js
jbe
push
mov
xchg
test
call
push
jg
lcall
and
loop
add
adc
mov
mov
push
push
rol
xchg
jae
cmp
sub
pop
fidivs
dec
and
insl
xchg
adc
in
sbb
addr16
dec
pushf
mov
icebp
pop
pushf
jl
rcrb
sbbl
cmc
push
pop
arpl
insl
js
lcall
hlt
jnp
push
ds
or
roll
or
pushf
sbb
adc
pop
mov
jp
add
adc
and
inc
popf
mov
mov
cmp
dec
sbbb
mov
insb
mov
ds
lahf
cmc
lret
mov
scas
or
sub
sub
std
es
loopne
cmp
out
xchg
jnp
leave
arpl
mov
inc
cwtl
add
mov
pop
cli
sahf
and
adc
test
loop
stos
fidivl
dec
popf
orl
cltd
cmp
jbe
jne
test
test
rclb
imul
lcall
imul
scas
add
gs
imul
jmp
mov
into
xchg
mov
push
mov
gs
sbb
dec
ffreep
bound
jnp
js
sub
frstor
mov
loop
test
add
iret
gs
notb
mov
xor
repz
inc
cmc
xor
push
notb
sub
xchg
scas
inc
jl
fldt
jl
xchg
aas
bnd
div
sub
sub
mov
leave
subl
dec
add
jno
cmpsl
fdivl
jecxz
jmp
cld
lea
xor
pushf
ror
lret
push
leave
push
jb
cmp
xchg
pushf
push
pop
mov
mov
cld
cmp
pop
sub
rolb
jle
push
mov
xchg
daa
repnz
data16
jne
mov
inc
sub
ds
push
subl
into
push
andb
in
outsl
push
in
sbb
cmp
add
adc
add
aad
inc
mov
or
addr16
cwtl
iret
xor
dec
sub
lock
push
sbb
stos
test
jg
or
sub
xor
pushf
imul
negl
pushf
inc
test
push
push
mull
mov
mov
pop
and
dec
rorb
inc
cmp
movsb
das
or
sub
jno
pop
sti
ret
outsl
adc
mov
rcl
adc
ret
mov
andb
stos
lcall
pop
mov
ja
mov
lea
jl
pop
sub
iret
xor
ret
shll
xchg
mov
add
or
pusha
xchg
lret
mov
dec
push
sbb
imull
lods
xor
imul
loopne
cmpsl
negl
cmp
add
sbb
xchg
cmp
jne
mov
pop
sub
cltd
inc
test
sti
js
push
pushf
roll
inc
mov
mov
repz
xor
mov
or
mov
inc
cmpsl
push
lcall
dec
shl
jb
dec
inc
cmp
xchg
sar
jge
insb
dec
addr16
xchg
leave
rcrb
adc
mov
outsb
dec
inc
mov
mov
xchg
cmp
mov
test
mov
cmpsl
push
negl
push
push
sub
or
xor
xchg
gs
add
push
lahf
aam
insl
subl
push
pop
test
pop
repnz
movsb
cwtl
push
jne
inc
repnz
in
daa
xor
cmp
lret
xor
mov
pop
inc
in
sets
sub
cmp
add
jmp
sub
out
and
cmpsb
or
xchg
adc
dec
popl
arpl
adc
shrb
push
jae
xchg
movsb
test
sub
mov
xlat
jbe
lods
arpl
mov
mov
mov
mov
pop
popa
repnz
daa
mov
lret
jecxz
mov
cmc
jle
and
mov
test
ret
cmpsl
test
sbb
stc
shlb
or
je
adc
movb
inc
lcall
stc
imul
fsts
sbb
jns
sbb
add
add
mov
adc
subb
jge
rclb
or
push
pop
shlb
mov
outsl
rcll
xchg
popa
mov
xchg
jae
in
jae
push
push
aas
pop
mov
cmpb
jle
fldl
out
or
mov
jb
or
cmp
fsubr
imul
nop
nop
pop
mov
mov
inc
push
repnz
imul
jmp
jl
addr16
and
jmp
xor
cwtl
stc
cmp
hlt
fisubs
fninit
add
fildl
les
sub
int
icebp
adc
sarl
push
mov
aad
sub
lret
xchg
sbb
fsubrl
and
hlt
sbb
or
outsb
dec
and
pop
inc
fadds
xlat
out
and
pop
inc
icebp
sarb
test
xor
cmp
mov
mov
mov
cmp
enter
ljmp
or
jp
js
jb
outsb
xorl
mov
pop
or
pop
adc
out
icebp
pushf
addr16
mov
ljmp
nop
idivl
das
dec
adc
shlb
mov
xchg
xor
pop
xor
gs
and
mov
inc
addb
mov
mov
xor
mov
in
div
jne
xor
cltd
or
mov
scas
insl
xchg
cmp
xchg
cs
outsb
pop
mov
dec
sti
jp
fstpl
mov
jne
mov
into
add
les
mov
xor
arpl
std
test
pop
lret
lret
out
xor
xchg
cli
dec
dec
daa
sarl
inc
ds
mov
out
sub
inc
lret
xchg
push
imulb
cmp
fnstsw
pop
xor
aad
xchg
lock
insb
hlt
repnz
sbb
add
pop
push
scas
popf
jbe
sub
scas
cltd
and
push
bound
ret
mov
dec
push
add
repz
popf
xchg
imul
xor
dec
mov
mov
push
nop
mov
sub
add
xchg
xchg
jg
das
mov
fadds
sub
push
mov
jecxz
pop
pop
out
fwait
hlt
pop
inc
jl
jno
add
data16
test
mov
cltd
push
cmpsb
add
int3
aam
xor
ficomps
jl
dec
add
mov
sarb
in
mov
mov
inc
cld
jo
mov
add
dec
adc
or
insl
arpl
sbb
sbbb
pop
cmp
in
jge
out
sahf
dec
pushf
adc
xlat
jle
bound
mov
mov
push
orb
lds
lret
mov
xchg
cmp
pushf
dec
insl
and
pop
sbb
into
mov
inc
adc
dec
inc
popf
cld
ss
or
mov
std
cmp
mov
les
outsl
mov
mov
sti
jmp
sub
cmpsl
call
mov
in
lret
popf
std
movsb
mov
xor
mov
xchg
enter
jb
lods
loop
jmp
adc
sbb
and
mov
gs
lcall
pop
shl
std
mov
mov
cmp
rcrl
ljmp
ret
cmpsb
jge
lock
mov
or
pop
xchg
sub
sub
jge
insl
xchg
dec
aas
cs
mov
add
cld
dec
in
sti
cli
fnstenv
int
jo
ffreep
xchg
mov
jbe
dec
xor
int
pushl
dec
aad
sbb
fwait
pop
dec
idivb
inc
test
cli
mov
jb
test
mov
aad
pop
sub
or
add
cmpsl
inc
rolb
mov
ja
dec
pop
ret
adc
aas
sbbl
mov
pop
in
cmp
outsb
fdivrp
fcomi
mov
mov
mov
out
lret
xchg
insl
pop
and
sbb
xor
icebp
popf
jmp
and
xor
xchg
adc
sub
inc
pop
aam
dec
jecxz
push
in
imul
pop
cmp
add
jb
gs
lods
es
mov
mov
sub
sub
enter
fisttpll
sarb
sti
out
jl
out
cltd
xchg
jns
xchg
and
inc
test
fdivrs
jo
pop
add
mov
push
cs
xor
push
rol
cmpsl
hlt
test
adc
xor
sbb
sbb
dec
or
xchg
stc
push
sbb
addr16
inc
ja
ljmp
dec
lret
inc
jnp
fbstp
cmc
mov
cltd
je
adc
pop
or
out
mov
dec
lahf
shrl
pop
fldt
pop
test
loop
outsl
push
push
sbb
fidivrs
add
jbe
push
rclb
ret
int
imul
jp
or
mov
test
or
xchg
pushf
cmp
outsb
cwtl
mov
push
fsts
repnz
pop
jle
mov
fbstp
popa
aas
pop
cwtl
stc
pop
dec
loopne
rorb
push
xchg
iret
xchg
or
and
aaa
out
add
adc
gs
jecxz
mov
cli
loope
mov
add
sarl
sub
cmpsl
sub
jge
sbb
cmp
fisubrs
fstl
addr16
insl
stos
cmp
jns
hlt
addr16
push
lock
clc
cmp
arpl
repz
dec
cs
insb
jecxz
es
sbb
imulb
push
jmp
cli
xor
insl
jg
mov
adc
inc
ret
fwait
aaa
cmovne
test
scas
and
movsb
imul
adc
jl
jo
scas
ss
push
push
clc
in
pop
movsl
jmp
jno
test
sbbb
cmp
xchg
shrl
cmpl
mov
fcoml
and
fwait
inc
lods
js
sbb
and
divb
push
inc
jg
xchg
in
and
sub
test
imul
mov
lds
push
lcall
out
je
popf
xor
ret
or
or
dec
dec
rcrb
xchg
popa
repnz
dec
orb
add
dec
lahf
hlt
shl
sahf
sbb
fisubl
dec
mov
adc
in
mov
xor
xchg
jmp
outsl
scas
adc
push
cmp
shlb
jb
outsl
imul
push
mov
jne
and
push
lods
pusha
imul
loop
add
jne
sbb
je
ficoms
push
add
inc
mov
into
bound
rcll
shl
sub
cli
jge
gs
neg
movsl
rcrl
and
sub
out
fldlg2
mov
mov
daa
dec
ficoml
pop
imul
insb
mov
cmp
pop
xor
sub
jmp
sub
jge
inc
dec
mov
scas
pop
lahf
cmp
xor
xlat
push
add
push
movups
in
mov
xor
inc
inc
xchg
xor
push
lods
push
and
mov
xchg
push
nop
repz
pop
stc
mov
push
xor
and
mov
test
jnp
icebp
adc
xor
or
cld
daa
add
add
inc
arpl
cmp
addr16
pop
aad
stc
pop
sub
add
ss
lods
jl
mov
xchg
or
fdivrp
sub
jnp
ja
lds
rcr
out
adc
or
pop
test
adc
adc
lock
pop
xlat
pop
cmp
and
jno
in
sub
xchg
in
hlt
rolb
pushf
mov
lods
arpl
cmp
pushf
pop
xor
add
lods
in
aaa
aad
or
jns
movsl
or
fldl
cmpb
test
loop
sbb
imul
fs
movsl
mov
in
mov
and
shr
inc
gs
outsb
enter
int
mov
mov
and
sbb
out
fsubs
addl
arpl
pop
mov
dec
push
add
dec
cmc
mov
sbb
bound
enter
in
shll
push
adc
inc
shrb
xchg
push
cmp
test
cmpsb
loope
adc
ss
lret
push
inc
adc
call
cltd
lods
sbb
or
add
dec
stos
imul
pop
shlb
in
sbb
xchg
push
pop
pop
call
aaa
sahf
pop
aaa
mov
mov
loop
sbb
aas
mov
xor
cmpsb
mov
outsb
adc
inc
in
add
into
pop
inc
shll
mov
shrl
mov
lea
mov
jb
in
mov
inc
lret
xor
popa
pop
es
sbb
jno
pop
mov
mov
pop
mov
shlb
mov
stos
push
xchg
inc
cmc
shl
and
fdivp
addps
pop
or
fstpl
push
lods
xchg
jne
xchg
inc
aam
jp
push
inc
shrl
mov
mov
or
aaa
pop
mov
test
repnz
out
jge
push
incb
je
loopne
ljmp
sbb
pop
mov
cmp
and
sbb
adc
lods
sub
cmp
mov
fnstcw
push
mov
mov
movb
sbb
daa
loopne
cmp
dec
outsl
into
push
es
shr
ljmp
lret
lea
or
ljmp
fstpt
mov
arpl
inc
sbb
dec
mov
arpl
in
adc
movsl
mov
mov
shlb
add
ret
mov
push
js
xor
xor
jne
popf
mov
cmp
mov
xchg
in
dec
leave
mov
adc
stos
scas
pop
test
fstps
cmpsb
cmp
mov
sub
and
adc
mov
gs
push
fsubrs
add
push
cmc
ss
jle
ret
cmp
dec
jge
rcrb
adc
arpl
cmp
lods
std
out
popa
jl
es
mov
movsl
and
mov
pop
idivb
lock
lea
mov
or
inc
push
push
pop
out
adc
test
sub
cmp
mov
xor
addl
shlb
adc
lods
jne
lock
xlat
xchg
sbb
push
lcall
and
dec
mov
fstl
and
mov
mov
adc
inc
xchg
or
add
cmp
sub
sub
cmpsb
repz
scas
push
push
incl
and
jno
mov
push
pop
dec
jg
shrl
mov
dec
andb
mov
cmpsl
rorb
pop
sub
jl
lods
jnp
and
mov
mov
mov
and
adc
cmp
cmp
xchg
dec
sub
pop
mov
insl
stos
cmp
pop
jg
fwait
cmpsl
mov
push
stos
xchg
iret
bound
shrb
aas
das
loope
cmp
cld
int
jb
ret
sbb
ret
jbe
dec
cwtl
fs
push
sbb
sbbb
cmp
sbb
push
dec
int3
sub
lcall
mov
sub
jmp
sahf
xchg
fstpt
rolb
in
mov
leave
loope
scas
arpl
stc
or
mov
and
mov
push
fadd
sbb
pop
jmp
insb
in
leave
call
in
mov
pop
mov
in
aas
mov
dec
arpl
rcr
adcl
pusha
loope
sbb
sti
test
push
mov
push
mov
rcrl
es
mov
push
pushf
mov
xchg
pop
and
pop
mov
divb
fistpll
sbb
lds
gs
sbb
je
adc
test
mov
push
pop
mov
adc
mov
pushf
cld
stc
mov
adc
pop
rolb
into
mov
sub
pop
push
xlat
mov
ja
jl
mov
sbb
push
sbb
int
jb
shlb
adc
stos
inc
fcmovb
pushf
jg
test
sbb
popf
ret
pop
adc
mov
inc
scas
inc
outsl
inc
push
mov
stc
push
push
in
fadd
shl
adc
out
sub
mov
ja
xor
push
or
xchg
mov
in
lods
inc
mov
adc
pop
inc
outsb
aam
outsb
adc
pop
bnd
rcr
sbb
or
in
dec
cmp
jg
jecxz
cmp
popa
sahf
pop
xchg
mov
push
repnz
stc
dec
jecxz
cmp
aam
and
sub
loopne
or
inc
or
bound
cmp
popf
pop
dec
dec
imul
lahf
sti
add
int
cmp
movsb
shlb
movsl
lcall
xchg
mov
mov
int
xor
pmuludq
pop
scas
or
jae
mov
loop
sub
push
adc
dec
mov
add
sub
inc
xchg
add
fldenv
pushl
sti
jne
jae
push
inc
dec
lcall
or
lods
pop
and
aas
xchg
push
push
fmulp
das
cs
sub
dec
insl
pop
inc
jmp
fwait
mov
xchg
mov
stos
sub
push
push
fwait
cmp
sub
pop
push
jno
popf
xchg
aaa
xchg
fmull
orb
in
xor
jl
icebp
pushf
test
aas
mov
fldenv
jl
pop
ja
bound
add
or
loopne
daa
notb
enter
loopne
mov
or
out
cmpsb
sub
xor
loope
scas
in
popf
mov
sahf
repz
loopne
out
xor
shll
repnz
xorl
mov
test
cwtl
lret
cli
and
xchg
fs
fs
lods
loopne
or
loopne
out
xor
shlb
jmp
popf
xchg
outsl
and
mov
in
sbb
cmp
repnz
push
pop
clc
outsb
sbb
sarb
rcll
call
mov
mov
jns
push
push
or
out
outsb
push
sahf
push
pop
dec
mov
in
pop
shlb
push
cmp
loop
daa
scas
test
pusha
push
sub
mov
loop
mov
xchg
cmp
lret
pop
enter
movsb
pop
cltd
fldt
push
adc
xor
inc
jns
mov
sub
cwtl
mov
incb
ja
add
push
fldcw
xor
jnp
imul
dec
xchg
mov
movsl
mov
sti
frstpm(287
lret
adc
sbb
imul
dec
xchg
mov
movsl
mov
sti
frstpm(287
lret
adc
add
add
gs
xchg
mov
movsl
adc
shr
rcl
das
and
xor
add
and
imul
in
push
jp
pop
fwait
movsl
cld
mov
mov
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
