mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
lldt
in
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
push
call
mov
mov
movzbl
sub
je
incl
call
call
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
int3
jb
inc
in
push
cld
out
lea
insb
ret
loop
repz
ret
jl
or
xchg
cmp
int3
jb
inc
in
push
cld
and
dec
repnz
ret
jl
imul
faddl
push
cld
and
mov
scas
or
adc
dec
cld
dec
cmp
mov
mov
mov
dec
aaa
adc
out
imull
rcll
int3
push
xchg
adc
and
ss
pop
ja
cmp
sbb
inc
aad
pop
insl
xor
jp
inc
ds
cmp
ja
jg
dec
cmpsb
pop
ret
xor
iret
and
mov
jb
sub
push
stos
add
movsb
adc
ja
cmp
mov
cld
add
cmp
or
and
pop
xor
std
push
mov
inc
xchg
scas
jl
pop
dec
or
inc
xchg
fcompl
push
fxtract
loopne
rclb
adc
cmp
sbb
adc
scas
int3
jb
inc
in
push
cld
and
mov
ret
jl
or
sbb
sub
jp
int3
push
movsl
sub
inc
call
loop
xchg
inc
ret
or
js
pop
loope
aam
pop
mov
ds
and
ja
jp
inc
xchg
xchg
mov
mov
dec
out
pop
lea
sub
mov
adc
insb
sarb
mov
subb
int3
jb
inc
in
push
cld
and
mov
ret
jl
or
sbb
sub
cmp
int3
push
hlt
filds
xchg
xor
dec
mov
cmp
mov
psubd
inc
push
stos
imul
lods
xlat
pop
shlb
imul
fistpl
outsb
mov
or
ja
out
movsl
sbb
and
sbb
xchg
add
lret
movd
test
pop
aam
mov
jl
bound
scas
test
rcl
or
fcmovbe
dec
stos
and
adc
jnp
jbe
gs
bound
test
sahf
loopne
aad
push
sbb
outsl
add
js
fdivs
clc
pop
stos
xchg
sub
movsb
in
ss
outsl
add
lock
xor
int
cmp
jo
dec
int3
int3
fimull
push
add
cmpps
xchg
stos
mov
icebp
xor
cmc
pop
ja
dec
notb
mov
xor
data16
in
dec
jg
stos
sub
in
orl
push
rolb
in
testl
jb
inc
aad
sbb
inc
testl
inc
fnstcw
daa
jmp
add
push
das
js
adc
jno
aad
lret
sbb
push
mov
pop
and
sahf
pop
inc
pushf
xor
sar
aad
ficoml
test
leave
and
xchg
scas
add
cmp
and
out
into
sub
mov
nop
imul
enter
push
mov
loopne
cmpl
pop
and
sub
jmp
xor
test
adc
fdivrl
inc
lret
mov
mov
mov
mov
or
call
jo
out
movsb
push
pop
add
lahf
xchg
dec
pushf
xchg
aad
push
and
mov
jle
subb
icebp
and
mov
mov
aas
xorl
pop
and
xchg
lcall
rcrb
loop
pop
mov
inc
test
add
add
bound
fcompl
fs
in
mov
aam
mov
cltd
sub
test
or
lret
lcall
push
popa
mov
fsubrl
cld
aaa
lods
jns
ss
mov
out
xor
jo
sbb
jmp
je
sbb
dec
xor
mov
mov
xor
mov
shrb
sub
pop
cmp
out
adc
stc
aam
sbb
mov
jl
out
lds
pusha
sarl
xchg
pop
mov
add
cmp
jg
in
jg
sub
jg
pop
repz
xor
repnz
fdivrs
lds
mov
push
mov
loopne
insb
cmp
in
inc
rorb
jae
xchg
test
jb
int3
scas
mov
xlat
cmp
cmp
jae
or
or
fstpl
xchg
lahf
add
cmc
mov
int
leave
fcmovbe
sbb
jecxz
jecxz
sbb
movsb
xchg
sahf
lcall
xor
rcrl
sarb
iret
clc
xchg
jbe
mov
bound
stc
jb
cs
jmp
repz
lcall
loop
inc
cmp
in
sbb
in
cs
push
out
jmp
adcl
fisubrs
mov
lcall
call
rcrb
inc
faddl
and
add
loope
ljmp
test
fwait
inc
ret
sarl
adc
fstp
daa
loope
jnp
les
pop
push
dec
pop
daa
iret
inc
xchg
lock
das
dec
into
jne
or
mov
cmpsb
shrl
movsl
sbb
adcl
xchg
mov
mov
movsb
mov
stc
dec
std
add
in
jecxz
dec
xchg
sub
ja
out
cmc
push
jecxz
push
mov
gs
out
jbe
xlat
repz
call
decb
bound
adc
xor
sub
cmp
rclb
lahf
sub
mov
sar
dec
out
lea
xchg
js
int
mov
rolb
adc
mov
loopne
jp
cmpsb
ljmp
mov
ficoml
in
cwtl
pusha
lahf
adc
mov
inc
cmp
dec
shlb
mov
stos
inc
aaa
cli
mov
sbb
cmp
jo
enter
mov
call
jl
cmp
arpl
roll
cmp
mov
out
cmp
pusha
push
sub
push
push
jge
nop
lahf
push
adc
mov
fwait
pop
out
popf
cmp
add
es
fsubrs
xchg
js
iret
jae
jnp
sub
popa
jae
xchg
jge
iret
fisttps
loope
aam
jg
js
xchg
or
dec
in
xchg
push
out
addl
mov
inc
mov
xchg
dec
jge
aam
sub
mov
ss
cmp
dec
jae
in
or
in
mov
fcmovnb
fs
daa
decl
pop
int3
push
sbb
jmp
xor
movsb
and
mov
dec
pop
je
jmp
sbb
push
loop
push
xchg
mov
jmp
insl
into
adc
adc
mov
ja
xor
adc
imul
test
scas
push
int
clc
lcall
sbb
mul
pop
rorl
lret
js
jns
mov
xor
hlt
xchg
inc
out
jl
outsb
dec
mov
sbb
mov
jge
in
push
ja
xchg
outsb
add
push
lret
ljmp
shrb
push
fmul
addb
pop
bound
adc
imulb
dec
mov
cs
jecxz
dec
jo
xchg
cmp
cmc
mov
xor
sub
notl
loope
jp
xor
jnp
xchg
repz
lods
jl
mov
push
xchg
int
inc
int
cmp
push
lcall
sti
and
orb
ja
clc
es
outsl
sub
inc
aas
fdivs
shl
mov
fwait
mov
ret
adc
pop
ss
lods
popa
std
cmpsb
jns
sbb
jo
dec
jb
inc
adc
jb
out
mov
sbb
out
rcrl
insl
add
in
lock
fs
mov
test
ds
scas
pop
mov
jne
adc
sbb
test
and
add
aaa
aas
add
jmp
mov
jne
cmc
rclb
sub
push
mov
add
loopne
xchg
jae
and
lds
add
lds
cmpsl
out
divl
popa
mov
add
clc
and
mov
out
dec
dec
fsts
adc
mov
and
jg
divl
and
xchg
xchg
ja
sbb
push
ds
popf
cmp
jo
out
cmp
test
fs
cmp
adc
xor
notl
add
bound
and
stos
int
popa
add
cli
mov
mov
or
mov
or
stc
mov
mov
xchg
or
cmpsb
movsb
fiaddl
cmp
adc
adc
push
dec
aad
mov
xchg
arpl
into
cmp
movsb
mov
jmp
add
bound
test
pop
xchg
push
push
je
sub
dec
add
pop
mov
loop
adc
inc
scas
in
or
fwait
ds
dec
or
mov
out
or
imull
aad
jecxz
xchg
mov
adc
mov
sub
dec
dec
fsubl
fistpll
popl
add
je
or
es
xor
lea
add
cmp
jg
mov
sbb
add
insb
sbbl
outsl
add
js
outsl
insl
sub
insb
sti
fwait
nop
cs
js
sahf
sub
enter
inc
clc
sbb
sbb
mov
pop
fucomip
xor
mov
adc
dec
jle
add
pop
dec
xchg
mulps
sbb
add
jmp
out
lret
xchg
icebp
pop
sub
pop
cmp
sbb
add
nop
lcall
call
mov
mov
movb
ret
adc
mov
xchg
out
imul
mov
scas
cli
inc
jno
jb
out
mov
cmp
idivb
dec
rclb
hlt
loop
mov
push
adc
in
inc
stos
or
mov
cltd
push
mov
rcrl
push
es
mov
add
jo
leave
shrl
mov
mov
inc
xchg
outsl
xchg
fucompp
test
addr16
cmp
in
or
addr16
std
push
je
xchg
test
push
push
pusha
mov
adc
jns
pushf
aam
mov
add
nop
xor
test
xchg
fs
int3
cmp
pop
rolb
cmp
push
xchg
incl
xchg
iret
data16
loope
flds
out
inc
rcll
mov
and
mov
fwait
dec
lret
ficomps
jmp
loope
cltd
lods
loope
lahf
sbb
mov
movsb
in
sahf
jecxz
cwtl
xchg
mov
outsb
add
loopne
add
je
mov
pand
fcompl
xor
mov
into
sbb
movsb
aam
sub
adc
fsubl
jbe
xlat
movntps
mov
push
dec
mov
rolb
inc
mov
cwtl
mov
jae
jno,pn
js
outsb
das
mov
mov
dec
mov
dec
inc
ss
into
mov
shrb
inc
out
cltd
shl
out
fisttps
test
dec
divw
scas
mov
sub
mov
and
fdiv
test
mov
add
push
in
loop
or
jp
cmpsb
shlb
daa
dec
pop
xor
mov
xlat
std
out
lods
shrl
pop
out
cmp
pusha
iret
cltd
jmp
faddl
insb
fisubrl
in
faddp
or
jo
push
jbe
pop
adc
mov
inc
xor
xchg
mov
jge
je
jmp
aas
xor
fmull
adc
xchg
mov
fldl
nop
push
cmp
jecxz
mov
sbb
cs
lods
sub
test
sbb
lret
xchg
xchg
and
popf
loope
imul
adc
sub
sbb
lods
add
pop
mov
push
jmp
pop
mov
add
icebp
mov
mov
loop
iret
adc
imul
lahf
pop
dec
mov
sub
ret
insb
cmp
cmp
sti
and
jmp
mov
cmc
xor
popa
mov
mov
xchg
mov
mov
hlt
mov
lods
or
push
call
inc
jp
aam
rolb
pop
and
xchg
pop
mov
fnstsw
es
js
or
popa
cld
mov
es
in
pop
sbb
push
push
cmp
mov
or
movsb
mov
xchg
out
es
jbe
jg
scas
cld
push
das
push
je
lods
add
lds
and
je
xchg
std
xchg
sbb
dec
out
insl
subb
movsb
fldcw
je
mov
mov
dec
int3
rorl
mov
xor
lea
mov
push
inc
roll
jl
mov
mov
jmp
mov
xchg
loopne
push
in
arpl
je
mov
sti
jle
mov
adc
clc
add
xor
sbb
xchg
or
cmp
xchg
xchg
mov
cwtl
div
mov
lcall
subb
mov
sbb
xchg
aam
add
mov
test
aad
outsb
dec
jp
enter
pushf
adc
into
cmc
push
pop
clc
dec
dec
mov
cmp
mov
fsubr
movl
ds
mov
mov
test
dec
xor
shrb
jl
stos
lcall
fnstsw
push
cmp
adc
std
shrl
into
sub
adc
xor
xchg
inc
cs
push
int3
adc
in
lahf
adc
test
aam
in
enter
imul
pop
or
jae
pop
or
dec
ret
nop
cltd
fisubl
dec
inc
loopne
fidivrl
cmpl
mov
cld
push
xchg
push
pop
xchg
and
lcall
stos
stos
jae
mov
bound
or
inc
cmp
adc
loopne
jmp
jp
adc
cltd
cwtl
mov
aas
pop
xchg
in
fistpl
mov
push
and
je
push
push
sub
pop
pushf
xor
or
mov
sbb
movsl
hlt
iret
cwtl
mov
arpl
fwait
push
jmp
jg
add
cmpsb
movb
shll
mov
lgs
std
jg
je
int3
push
inc
push
cmp
je
dec
addl
jae
pop
sub
push
lretw
test
and
les
add
sbb
xchg
mov
lret
test
mov
rorb
dec
xchg
repz
mov
adc
push
inc
jae
popa
mov
sub
rcrb
cmpb
jno
stos
rcrb
insl
push
xor
inc
jne
leave
data16
sbb
pop
or
sub
lea
xor
repz
nop
mov
loop
js
in
mov
jne
push
dec
lahf
xchg
jno
adc
xchg
bound
fs
pop
das
stos
pop
push
aas
mov
es
sarl
call
dec
stc
xchg
push
cli
mov
add
sbb
scas
loopne
jl
cmpsl
jp
lret
pusha
jne
leave
dec
inc
push
insl
lock
das
xchg
xchg
push
in
lret
lods
xor
decb
call
mov
add
hlt
xchg
ja
xor
lcall
mov
mov
test
sub
inc
test
stc
movsb
sahf
push
imul
fmul
hlt
mov
bound
daa
mov
aad
lods
scas
loopne
lds
sbb
dec
add
mov
push
dec
loope
sarl
and
or
mov
cmpsl
imul
cltd
or
sbb
adc
sub
push
push
pop
mov
data16
or
scas
jae
test
sbb
loopne
stos
mov
outsb
jmp
mov
sbb
adc
test
jge
cmp
es
sub
push
pop
into
dec
mov
ljmp
ds
mov
pop
stc
or
inc
and
dec
dec
mov
icebp
pop
addw
jbe
out
mov
stos
xor
mov
frstor
mov
sub
repz
jno
mov
add
or
data16
sub
fcoml
and
inc
pop
ljmp
lcall
gs
cmp
push
pop
cmc
jbe
xchg
dec
mov
xor
jl
mov
push
ds
adc
or
adc
mov
jne
pop
mov
es
out
dec
loopne
push
sub
jg
inc
xchg
jl
bound
mov
add
inc
pop
test
imul
mov
outsb
fldcw
pop
or
ljmp
lods
rcll
fwait
out
test
pushf
mov
roll
xchg
in
add
jle
or
pop
jge
das
imul
dec
das
je
fstp
pop
xchg
mov
fsts
jge
mov
or
pop
lds
add
mov
adc
inc
adc
sti
lea
out
lret
add
popa
insb
lret
push
gs
fbstp
pop
out
das
aad
jnp
test
fisubl
insb
push
sub
js
adc
push
pop
loop
cmpsl
addr16
or
stos
aaa
cwtl
inc
and
pusha
fldl
movsl
test
jmp
loopne
clc
nop
xor
mov
jb
mov
shll
mov
mul
sbb
int3
inc
fmulp
push
lahf
ficoms
jmp
xor
testb
dec
jle
out
notb
xor
xchg
and
clc
fnstsw
mov
adc
dec
mov
mov
push
cwtl
sub
xorb
ficomps
in
pop
js
xchg
dec
jmp
or
iret
mov
and
fstps
jecxz
lock
cltd
fsts
ljmp
cmp
add
mov
mov
jae
out
arpl
es
adc
fldt
cmp
jmp
push
add
jp
fisubrs
sub
pop
add
cmp
mov
aad
mov
sbb
pop
in
jmp
mov
lods
or
sbbb
or
xchg
mov
stc
insl
xor
inc
aad
mov
aam
jge
and
mov
push
outsl
jb
cwtl
test
in
adc
pusha
loopw
les
push
orb
aas
push
jns
cmp
adc
ja
ds
sti
sbb
add
addb
es
hlt
imul
xchg
or
adc
ds
jmp
lock
ret
adc
shll
mov
add
scas
ret
push
cmp
mov
iret
push
je
loopne
sub
cli
test
inc
jno
pop
test
repnz
jae
jno
xor
fabs
ljmp
repz
in
mov
lahf
dec
in
jmp
test
ljmp
fiadds
jmp
sub
jb
lret
pop
in
outsb
fucomi
pop
mov
adc
inc
testl
lret
pop
jne
cld
rclb
adc
push
push
push
dec
lahf
xchg
stos
ret
repnz
mov
jl
imul
loop
ds
and
rcll
push
xchg
xor
cmp
mov
jo
mov
mov
pushf
nop
push
xchg
jge
push
sbb
cmpsl
add
and
push
mov
pop
cmp
or
mov
mov
push
imul
xlat
insb
push
xchg
cmp
or
stos
fsubrs
and
xor
and
dec
arpl
gs
fiadds
and
insb
orb
and
sub
xchg
jno
dec
rcll
js
lods
pop
sub
nop
shll
cmp
mov
mov
pop
pop
jle
jmp
mov
ja
lcall
push
lret
stc
aad
and
pushf
adcb
ret
adc
sbb
out
outsl
pop
push
cs
xchg
or
inc
nop
fcoms
mov
aas
mov
push
dec
ret
loop
jno
cmp
fnstcw
inc
in
iret
mov
lods
jae
jmp
push
cmpsb
cli
cwtl
sub
push
loop
push
mov
out
pop
jmp
add
cmc
cmp
sbb
int3
and
mov
mov
jecxz
adc
lea
mov
jbe
jecxz
imul
mov
add
cld
xor
mov
xchg
stos
inc
adc
or
mov
pusha
jae
lods
dec
cmpb
dec
sarl
mov
sbb
aaa
sti
or
jmp
jb
xchg
fisttpll
pusha
dec
or
imul
mov
sub
enter
pop
das
push
push
nop
mov
movsl
xchg
add
mov
mov
or
adc
mov
mov
inc
xor
jl
pop
nop
test
cmp
pop
dec
adcl
mov
movsl
fwait
loop
mov
aam
testl
push
jecxz
je
mov
fisubrl
mov
push
fisubl
movsl
mov
cld
pop
in
mov
je
xchg
pusha
shrl
inc
call
or
pop
xchg
cmpsl
out
aaa
pusha
mov
jnp
movsl
jno
dec
sub
mov
jne
repz
pop
mov
test
pop
and
into
mov
pop
mov
aas
pop
xor
pop
outsb
jbe
sahf
lahf
push
jnp
ja
lcall
shlb
fcoml
mov
outsl
int3
call
mov
sub
inc
mov
push
movsl
rcll
mov
sub
popa
and
aas
xor
fdivl
imul
push
mov
mov
mov
xchg
movsb
xchg
pop
sahf
mov
xchg
loope
or
es
jns
movsb
sub
lcall
jb
mov
and
sarl
popa
mov
jb
mov
cld
pop
mov
dec
lahf
cmp
insb
test
pusha
cmpsb
dec
cmp
dec
movsl
dec
xor
mov
test
fcoml
lcall
cs
pushf
loope
push
outsb
test
lds
sub
subb
pop
sbb
call
gs
pop
xchg
dec
icebp
add
sbb
dec
icebp
dec
popa
arpl
fwait
lock
pop
nop
std
scas
xor
ret
dec
push
andb
sbb
fistl
push
in
in
fsubr
pop
outsl
cmp
and
jno
and
test
mov
imul
je
dec
and
push
mov
mov
sub
inc
into
es
call
rcrb
inc
push
sbb
mov
jb
sti
jl
loop
mov
xor
pushf
out
cmp
js
push
out
stos
fimuls
add
or
enter
pop
sarb
cmp
arpl
lds
and
cmc
push
lds
lcall
or
mov
enter
bound
shlb
mov
mov
adc
mov
scas
xchg
shll
push
lea
scas
jns
outsb
dec
das
outsl
fsubrs
mul
popf
cli
lcall
xchg
mov
jecxz
push
into
popf
dec
sbb
inc
es
popf
daa
inc
bound
int
and
dec
jecxz
jmp
in
xor
hlt
add
fnsetpm(287
mov
lea
push
push
ds
sahf
cmp
mov
xchg
mov
pop
cmp
xor
in
mov
add
testl
sbb
movsb
int
repnz
xchg
popf
xchg
fwait
orb
jno
test
cmpsl
cmp
jp
icebp
push
inc
push
cmp
inc
xchg
testl
sub
mov
inc
pop
mov
cmp
popa
xor
sbb
clc
push
sbb
or
std
aam
adc
mov
jbe
idivl
imul
xor
imul
out
pop
or
xor
or
aam
ss
and
dec
dec
out
jne
fsubs
nop
fs
push
mov
stos
or
popa
add
push
xlat
dec
incl
stos
pop
rcrb
xor
lret
push
lods
outsb
cmp
aas
xchg
pop
or
mov
lret
cmc
jnp
or
test
inc
out
das
mov
out
adc
xor
ret
or
sub
stos
bound
xchg
inc
sub
add
cmp
int3
addr16
daa
xchg
adc
pop
nop
orb
in
push
xor
mov
addr16
scas
les
lds
or
push
jne
dec
js
aad
jp
loopne
loop
fstps
stos
and
test
pop
mov
pop
pop
inc
jle
mov
mov
jecxz
and
je
adc
cmp
leave
faddl
push
cld
and
mov
ret
jl
or
sbb
sub
cmp
int3
jb
inc
in
push
cld
and
mov
ret
jl
or
sbb
sub
cmp
int3
repnz
in
push
cld
mov
lods
xchg
mov
ret
jl
or
sbb
sub
cmp
int3
jb
inc
in
push
cld
and
jl
dec
repnz
rorb
rolb
ret
int3
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
popa
fs
inc
inc
push
push
xchg
pushf
pop
pop
jae
sbb
loopne
icebp
cmc
rcl
les
test
je
inc
push
push
and
and
add
pusha
icebp
call
mov
test
insl
pop
pop
dec
dec
cmp
adc
clc
in
xlat
sahf
mov
faddp
sti
or
push
add
and
xor
xor
shl
sti
or
mov
test
jnp
in
loopne
mov
cmp
add
push
xor
test
test
fs
or
les
insb
sahf
clc
lea
mov
pop
or
scas
mov
mov
rorl
in
hlt
stc
scas
pop
sub
test
mov
and
and
jo
xchg
push
lock
cmp
pop
pop
cwtl
mov
or
test
loope
mov
mov
sub
or
jl
sbb
or
cmp
insl
pop
cmpsb
mov
jle
adcl
push
mov
xor
push
mov
cmp
push
addl
push
push
ss
xor
add
or
enter
test
xchg
or
and
push
dec
push
popf
hlt
mov
mov
mov
jmp
clc
push
or
and
dec
and
jp
jo
mov
mov
fidivl
fs
adc
xor
add
adc
in
hlt
rol
aam
movsb
mov
addl
push
and
xor
add
adc
in
hlt
rol
aam
movsb
mov
addl
push
dec
scas
xor
rcl
lea
jmp
movmskps
mov
scas
lahf
popf
inc
xchg
lods
loop
bound
insl
mov
pop
imul
ret
loope
and
push
sub
mov
xor
popf
imul
lret
lods
and
test
lcall
dec
lods
dec
xor
imul
arpl
cmp
testb
lret
leave
shll
insl
mov
push
int3
adc
push
mov
xchg
mov
fisubs
cwtl
inc
sbb
xor
ds
cmp
pop
jae
mov
add
test
xchg
dec
xor
dec
cmpsl
jo
incb
push
mov
sbb
popa
xor
insl
or
sbb
cmp
stos
sbb
and
lcall
in
fs
mov
cmpsl
sahf
xor
aad
add
sub
loope
into
mov
mov
sbb
clc
shrl
pusha
xor
mov
push
testb
push
sbb
fdivp
inc
add
lea
lcall
lret
out
xchg
xchg
pusha
mov
fs
test
dec
sbb
xor
out
mov
out
dec
push
push
push
out
sbb
xchg
mov
mov
sbb
xor
nop
fcomps
or
cli
xlat
dec
js
xor
and
sub
xchg
pop
sub
out
dec
fnstenv
lret
xchg
movsb
inc
push
mov
shrb
int3
sub
cmp
jmp
push
lret
jge
notl
mov
xchg
dec
outsb
xchg
popl
cmp
mov
push
mov
dec
outsl
lds
lcall
cs
sub
and
ss
mov
mov
add
dec
adc
or
push
arpl
dec
lahf
xor
rol
cmpsl
shrl
hlt
hlt
cmpsl
add
aas
cltd
clc
jne
decb
and
jl
adc
hlt
sub
out
or
les
lock
bound
pop
push
or
aaa
or
dec
cltd
imul
iret
shll
add
cmpsb
pop
arpl
loope
xor
jmp
andl
aas
outsb
lret
mov
nop
std
xchg
mov
int3
scas
stc
fmuls
and
sub
xchg
lods
ror
adc
ss
add
mov
pop
test
popf
pop
adc
int
lahf
xchg
adc
in
repz
lret
out
xchg
xor
pop
cli
jb
aam
lods
and
and
jnp
inc
in
and
nop
stos
xchg
jp
xor
push
xor
dec
imul
aam
xchg
add
jmp
daa
cmp
movsl
mov
push
inc
inc
jo
das
xlat
iret
xchg
jl
stos
repz
pop
jb
cmp
test
push
int
push
jg
aad
dec
int3
notb
jb
sbb
fildll
cmp
bnd
mov
bnd
pop
pusha
mov
cli
icebp
add
pop
fiadds
fimuls
pushf
in
pop
fmull
or
stos
sahf
jg
pusha
xchg
or
cmp
dec
ss
or
sbb
push
pop
int3
mov
out
mov
lods
mov
mov
cmp
or
mov
sub
mov
inc
adc
int
mov
std
jo,pn
jb
cmpsl
cmpsb
inc
fdivrs
pop
and
out
jae
adc
add
mov
mov
push
lret
adc
cmc
sbb
and
jnp
add
jmp
bound
lds
sub
xchg
dec
dec
fildll
repz
lock
mov
adc
add
mov
push
cmpsl
dec
xchg
mov
lods
xor
jae
repnz
fldcw
push
addr16
imul
pop
xor
iret
sbb
test
ljmp
pop
test
lret
ror
pop
pop
and
cmp
out
and
jmp
imul
das
jl
arpl
mov
sub
cmc
jae
cmpsl
jmp
jecxz
pop
in
and
jns
mov
adc
das
mov
ss
cmpl
or
sub
or
xchg
xorl
mov
or
imul
push
arpl
jns
mov
or
mov
sbb
adc
test
ljmp
mov
icebp
pop
mov
pop
cmp
pop
fs
sbb
xchg
ret
sbb
gs
lret
leave
lahf
xchg
cmp
jl
clc
mov
mov
push
popf
or
pop
out
insb
inc
jb
and
sub
ljmp
std
test
leave
add
jecxz
lcall
push
lock
or
cmp
lea
arpl
adc
leave
rcrl
je
stos
out
cld
push
loop
adc
in
mov
adc
cmp
xlat
jne
mov
divl
cmp
call
add
es
inc
lret
cld
idiv
inc
mov
cmp
arpl
cmp
mov
sahf
pop
scas
clc
pusha
jae
ljmp
pop
and
or
inc
xor
sub
xor
or
jnp
push
jb
and
aas
sbb
inc
sahf
jle
mov
nop
mov
shlb
xor
mov
test
popf
sbb
adc
and
push
push
out
xchg
cltd
push
pop
jns
loop
adc
dec
test
pop
jnp
adcb
mov
in
movsb
jb
lock
mov
xorl
push
push
mov
scas
lods
imul
dec
aad
lea
shll
sbb
sbb
sub
imul
cmc
add
cmp
mov
inc
loop
rcrl
xor
push
jp
xchg
lahf
or
xchg
shl
scas
enter
test
dec
cmp
mov
mov
push
xor
sub
adc
jo
jb
or
mov
out
push
icebp
mov
shrl
pop
xor
ja
pop
jns
push
in
sbb
pop
fisubl
pop
std
bound
jmp
push
ret
pop
sbb
mov
add
mov
in
fcomps
xchg
push
xchg
shr
jnp
int
and
pop
enter
xor
cli
je
xor
push
or
cmp
and
jmp
inc
stos
or
repz
mov
leave
movsb
push
cli
cmp
hlt
dec
imul
cmpsl
aas
inc
shlb
test
jl
jno
iret
and
call
outsl
sarl
jbe
out
outsb
push
cmp
jne
pushf
divl
xlat
adc
push
adc
xchg
out
jo
in
dec
mov
pop
add
sub
int3
push
mov
cs
fs
adc
pop
cwtl
out
movsl
out
mov
nop
cmp
fs
mov
icebp
cmp
mov
xchg
inc
cmp
cmp
push
call
int3
imul
movsl
xor
notl
insb
mov
or
cmpsl
pop
insl
gs
in
adc
shll
mov
jge
and
sbb
out
push
imul
outsb
mov
mov
pop
xor
notl
mov
jo
insl
or
mov
aas
add
push
lcall
xchg
mov
lret
cltd
ja
sbbl
cmp
sbb
ret
inc
mov
cli
cli
mov
pushf
je
xchg
fsts
xchg
sbb
and
adc
lds
cltd
lock
fstpt
sub
addr16
ljmp
pop
clc
test
sbb
sbb
loop
or
mov
dec
mov
sub
inc
fisubrs
repnz
scas
lock
movl
mov
je
fs
sbb
mov
cmpsl
pusha
les
imul
in
test
fucomp
jecxz
mov
cmp
lock
inc
push
cmp
add
mov
scas
test
das
outsl
lea
mov
aas
aam
xchg
cwtl
int3
sbb
outsl
xlat
das
jge
inc
jge
out
mov
pusha
push
jae
pop
add
and
fs
outsl
jne
jns
mov
dec
and
les
dec
xor
rcr
loop
fidivrl
pop
mov
enter
cmpsl
push
lret
es
cmp
xchg
data16
lods
mov
and
and
adc
pop
push
jmp
movsb
imul
dec
popf
in
sub
xchg
sub
insl
fisttps
cmp
sbbl
rclb
jnp
cmp
push
sti
pop
in
jecxz
ret
jmp
jle
daa
cmp
jno
ret
jns
sbb
mov
sbb
push
ds
ret
pop
pop
push
dec
pop
fs
sub
dec
out
das
dec
shl
dec
or
rolb
sub
mov
lds
movsb
push
movsb
js
fimull
add
mov
adc
decl
xor
inc
fistpl
imul
pop
jno
mov
sti
sti
adc
int
dec
jo
negl
aam
loop
add
pop
repnz
scas
sbb
in
jbe
or
fidivrl
testb
xor
mov
sarb
outsb
test
and
xchg
loopne
sub
dec
lock
iret
std
or
push
pop
jmp
mov
rolb
cmp
imul
xchg
pop
data16
pop
pop
fucom
je
inc
lock
ret
or
aaa
ret
lock
incl
cmp
add
or
pop
int3
pop
add
mov
loop
push
mov
adc
call
or
mov
xchg
mov
inc
icebp
pop
xor
popa
icebp
xor
lds
adc
ret
sahf
sbb
aas
and
repz
push
xor
data16
rorl
dec
les
dec
std
pop
add
leave
in
loop
sub
inc
cmpsl
aam
push
cmp
dec
inc
adc
push
bound
outsl
popa
xchg
daa
mov
push
je
aam
pop
incl
push
flds
aam
aaa
jo
adc
adc
dec
outsb
out
insl
ja
lcall
into
out
xor
dec
lds
inc
addr16
outsb
test
es
loopne
into
or
jne
loopne
outsb
popa
sbb
cmp
pushf
and
mov
fisubrl
push
push
in
jo
add
in
mov
lret
pop
inc
jmp
push
adc
aam
popl
adc
mov
pop
jnp
addr16
ja
rclb
pop
xor
push
xor
jo
out
outsl
les
inc
js
ja
dec
test
mov
adc
les
shlb
push
sub
dec
leave
sahf
mov
pop
mov
vmread
cmp
addl
in
enter
or
andb
and
jp
in
test
ljmp
and
ljmp
lcall
mov
push
pop
sub
push
adc
sub
inc
cmpsb
in
pop
cmpsl
jbe
rcr
pushf
sbb
rclb
or
adc
mov
and
jg
pusha
addr16
out
push
rolb
clc
inc
test
insb
push
stos
mov
fildl
mov
popf
movsb
mov
or
popa
mov
ret
lret
scas
jae
sub
adc
jo
mov
jb
and
cmp
pop
mov
ret
add
loopne
lea
sub
pop
cmp
popf
scas
push
mov
add
adc
lret
push
mov
lret
sbb
insb
jno
or
pop
aad
sahf
sbb
into
je
test
mov
cmp
scas
or
daa
scas
cmp
sub
cmp
sub
sahf
cmp
push
int
stos
mov
movsl
dec
ret
in
adc
iret
pop
loope
imul
movsl
add
push
or
popf
adc
xchg
adc
or
popa
je
xor
dec
lea
scas
lahf
stos
test
pop
jg
mov
repz
std
arpl
mov
add
and
call
paddd
push
loop
test
push
mulb
mov
sbb
add
and
add
inc
addr16
in
stc
aad
add
stc
rclb
xchg
lret
adc
lahf
xchg
mov
cmp
in
sbb
push
add
adc
out
je
icebp
bound
cmp
and
jg
xchg
inc
lock
pop
pop
into
mov
into
gs
mov
xchg
cli
lret
das
lds
ficoml
sbb
bound
cmp
fsubs
push
pop
jne
inc
out
inc
mov
test
mov
mov
shlb
push
mov
dec
sub
xchg
pop
bound
int3
sbb
xchg
rcrb
dec
iret
xchg
ret
pop
ljmp
test
jo
je
inc
cmpsl
or
insl
out
fnstcw
inc
gs
mov
pop
rcrl
xchg
lds
adc
lcall
cmp
out
and
testb
jg
inc
add
mov
inc
aaa
or
fidivrs
xchg
cmp
cld
repz
mov
dec
mov
xchg
xchg
dec
adc
outsl
stos
xor
jecxz
scas
arpl
or
sub
push
xchg
xchg
mov
lahf
jge
outsb
inc
xchg
mov
inc
inc
scas
inc
mov
jmp
mov
sbb
inc
and
ja
inc
xlat
shll
je
add
xor
push
push
xor
scas
jno
sbb
adc
inc
int
sub
push
cmp
icebp
pop
dec
pop
fwait
or
and
and
inc
mov
pop
call
cmp
jb
mov
inc
xchg
out
fcompl
and
ds
int3
ljmp
xor
jle
adc
xor
mov
hlt
aam
sbbl
inc
arpl
out
or
popa
lcall
ja
test
clc
add
lea
mov
stc
push
jl
push
push
xchg
in
cld
dec
adc
and
cmpsl
xorb
je
cmp
push
lods
or
in
shrb
rclb
popf
div
jmp
or
push
lahf
loope
cli
mov
pushf
sbb
xchg
fcompl
or
jp
fsubp
xchg
scas
jb
ja
arpl
adc
popf
js
or
or
inc
outsb
shlb
xor
pop
dec
mov
push
sbb
pushf
shll
fwait
push
jo
cmpsl
addb
aam
call
cmc
push
mov
mov
lds
dec
movsb
xor
pop
xchg
loop
xchg
mov
pushf
call
aaa
or
mov
mulb
xchg
xor
mov
aaa
repz
and
xor
iret
mov
int
fcoms
mov
iret
pop
push
and
ss
xor
add
or
pusha
out
cmp
mov
repnz
push
jo
mov
rol
fxtract
inc
in
pop
adc
in
xchg
cmp
jg
and
adcl
sbb
mov
cmpsl
add
dec
adc
and
push
dec
mov
movsl
adc
sbb
sub
in
lret
push
arpl
jne
pusha
stos
in
lcall
cmp
je
out
aaa
push
sub
in
pop
lods
out
pushf
mov
or
sub
mov
fistpl
rcrl
test
int
sbb
into
sub
movsl
xor
push
adc
repz
and
pop
fidivrs
test
sbb
mov
and
mov
cmp
mov
jbe
les
sti
pusha
xor
jno
lahf
lods
and
jns
xchg
stos
ret
andb
push
lods
lods
aam
lret
pop
test
mov
push
xchg
or
ja
xchg
xchg
sti
lret
ss
mov
dec
or
add
push
jg
push
arpl
xchg
ret
loopne
jns
mov
addb
cmp
fcoms
lods
dec
add
lods
pop
out
mov
xchg
es
das
xor
fisubl
mov
imul
out
jns
repz
stos
or
push
push
mov
movsw
mov
test
cli
and
sbb
mov
pop
xchg
push
inc
scas
in
xor
adc
push
mov
std
cltd
loopne
or
loopne
aad
data16
scas
nop
negl
adc
cld
add
pop
mov
dec
fldl
dec
popf
xchg
inc
adc
pop
inc
mov
xor
cmovle
xchg
cmp
pop
pop
cmp
das
cwtl
xlat
aas
push
adc
pop
add
mov
or
arpl
inc
inc
outsl
stc
pop
aas
jle
dec
out
loope
adc
andb
dec
push
inc
into
pop
sahf
push
aad
scas
in
or
rorb
out
mov
ficoml
mov
repz
cli
mov
mov
lret
outsl
sub
sub
jbe
or
adc
xchg
idivb
fcomps
sbb
test
lret
sbb
imul
inc
jb
jns
les
or
mov
popf
pop
gs
aas
mov
jo
clc
dec
mov
pop
jge
jecxz
or
mov
push
cmc
into
dec
cmp
sub
aas
or
fs
js
cmpsl
dec
xchg
adc
and
dec
cld
movl
mov
jp
lods
push
sub
mov
stc
inc
xchg
push
lret
and
inc
inc
pop
int3
cmp
jb
ror
rcrl
pop
roll
mov
lret
xor
insl
jg
push
lcall
test
cmp
push
xchg
ds
addr16
adc
out
mov
mov
dec
push
pop
jae
mov
ja
mov
mov
dec
frstor
mov
and
jmp
xchg
cmpsb
insb
jne
mov
ja
adc
into
fadd
fldcw
jb
adc
push
xor
pushf
add
ljmp
ds
pusha
inc
pushf
mov
aaa
add
xchg
rcr
fnstcw
and
int
std
push
and
insl
sbb
xor
lds
in
cs
pop
lcall
outsb
pop
ja
lods
sahf
fistps
xchg
outsb
xchg
mov
jp
push
lock
jecxz
repnz
das
cmp
adc
fwait
ja
push
inc
lret
cmp
subb
movsb
and
ret
jbe
aam
sub
arpl
jae
mov
hlt
xor
repz
mov
cltd
push
lret
mov
mov
and
push
scas
imul
insb
sbb
xor
jns
lahf
sub
xchg
push
sbb
sbb
jo
aad
cwtl
mov
pop
jle
pop
or
sbb
xor
popa
sbb
inc
pop
or
shr
scas
fistl
aas
mov
push
out
andb
push
adc
or
fiadds
xlat
test
sub
sbb
leave
idivl
lds
rorb
popa
mov
cmp
xchg
les
push
pusha
mov
and
cmpsb
ror
rcrl
aad
push
push
cltd
sbb
adc
xchg
xor
add
mov
adc
jnp
mov
in
xor
sbb
jp
imul
sbb
push
cmpsb
enter
sub
jmp
fsubs
out
jge
mov
sub
pop
mov
inc
pop
add
cltd
push
jp
cld
cmpb
mov
inc
adc
ret
hlt
insl
clc
push
ret
loopne
fsubrs
push
pop
xor
xlat
jbe
mov
les
xor
int3
stos
add
add
mov
xor
in
in
cmc
pop
mov
scas
inc
cmpb
push
xchg
lock
sti
ja
xor
mov
xchg
xchg
dec
cmp
ficoms
jo
mov
cmp
pop
jecxz
or
ds
clc
push
sti
lods
iret
jmp
loopne
cmp
int3
jmp
push
push
fldenv
add
jbe
and
aas
and
lock
std
adc
pop
or
sub
sub
inc
jp
and
and
adc
neg
das
roll
pop
adc
or
xor
gs
cmc
rolb
xchg
aam
movb
dec
pop
mov
aaa
dec
pop
ret
ja
add
cmp
clc
add
xor
leave
in
mov
pop
add
jecxz
mov
mov
inc
push
xchg
and
popa
insl
pop
nop
mov
out
sbb
aaa
add
and
jnp
sbb
adc
cltd
inc
cmc
in
dec
push
subb
push
out
ss
sub
gs
fsts
jns
or
pusha
and
fisubs
cltd
push
repz
jo
sub
sub
aam
xchg
jecxz
cmc
leave
mov
dec
adc
ljmp
mov
mov
and
push
dec
test
sbb
out
dec
or
enter
add
adc
xchg
repnz
stos
push
imul
aad
and
scas
jg
dec
jns,pn
pop
iret
arpl
outsl
ret
repnz
inc
add
cld
iret
packsswb
jl
test
inc
mov
jne
push
inc
divb
sub
pop
in
xor
into
stos
pop
or
popa
arpl
scas
leave
imul
add
sbb
jl
lret
sub
inc
shll
outsb
loopne
movswl
call
jbe
or
lahf
sub
int
cmp
cli
imul
sub
pop
inc
mov
ret
push
inc
cmc
push
mov
fiadds
ss
xchg
inc
inc
jb
sub
adc
hlt
push
sti
ror
pop
clc
addr16
imul
ja
add
sub
hlt
adc
mov
arpl
jb
mov
cli
jae
inc
pop
das
sbb
sub
mov
mov
sbb
xlat
adc
dec
in
add
xchg
loopne
jae
sub
add
arpl
enter
jnp
mov
cmp
and
std
inc
jl
and
mov
scas
pop
bound
test
inc
push
cmp
test
repnz
pop
or
sub
insl
lahf
cwtl
ljmp
cmp
ror
fisttps
jb
es
jns
mov
jo
imul
push
or
add
sbb
imul
sub
mov
pop
out
rorl
dec
mov
cmpl
jb
xor
fs
xor
aad
lds
add
dec
cmp
mov
orl
push
pusha
sbb
das
das
sub
sub
pushf
test
subl
clc
xchg
or
add
adc
lea
int3
out
xlat
mov
and
je
xchg
shlb
sbb
xchg
pop
loope
stos
mov
sbb
lret
pop
cltd
push
icebp
out
and
add
jle
mov
pop
lret
or
shlb
add
sbb
std
or
mov
push
clc
dec
js
cmp
loope
test
aaa
sbb
icebp
nop
xor
adc
stos
loope
cmpsb
pop
and
rcll
jp
sahf
xor
push
fs
inc
push
push
and
xor
add
adc
in
hlt
rol
aam
movsb
mov
addl
push
and
xor
add
adc
in
hlt
rol
aam
movsb
mov
addl
push
and
xor
add
adc
in
hlt
rol
shlb
adcb
inc
inc
push
push
and
xor
add
aam
in
pop
imul
mov
jle
outsb
jmp
int3
int3
int3
int3
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
fcomps
mov
push
mov
sub
xchg
adc
and
adc
inc
pushf
adc
pop
xchg
dec
xchg
jl
insb
ret
or
cmp
push
or
adc
inc
cld
loopne
inc
lock
mov
jb
fwait
pop
mov
stos
insb
fistpl
or
cmp
sub
fcompl
out
dec
mov
insl
enter
rcrb
fcomip
das
xchg
add
lret
or
mov
cmpsl
stc
aas
ljmp
fldcw
repz
les
sbb
mov
xor
es
test
xor
jmp
add
std
subps
push
adc
mov
iret
ljmp
movsl
int
mov
cmp
push
out
or
and
and
or
pushf
add
mov
lods
bound
insl
sbb
sub
loope
xchg
adc
or
in
xorb
xor
call
mov
xchg
shr
aas
sub
sbb
fldcw
int
lahf
fldl
stc
sbbb
inc
pop
xchg
dec
mov
sbb
or
cmp
sub
fmull
int3
cmp
sub
pop
pushf
dec
mov
imul
pop
testl
loopne
lahf
js
movsl
adc
push
cltd
pop
cwtl
fbstp
jmp
cmpb
sub
sbb
inc
mov
dec
add
inc
mov
repnz
jmp
mov
or
cmp
sub
fcoml
int3
and
xor
inc
pushf
push
mov
jb
sbbb
jl
insb
ret
or
cmp
sub
fcoml
int3
and
xor
inc
pushf
push
mov
jb
sbbb
xchg
fisubrl
and
mov
jbe
imul
sbb
mov
test
jmp
adc
inc
mov
cld
dec
adc
inc
xchg
sbb
loop
mov
and
cwtl
movsb
stos
cmp
ret
das
pop
frstor
cs
cmp
aas
mov
pop
lcall
mov
outsl
mov
in
arpl
push
shrb
and
pop
lods
and
mov
sub
sub
scas
adcb
and
ds
dec
and
cmpsl
mov
data16
xchg
pop
movsl
movsb
sub
mov
loop
popf
fwait
inc
repz
pop
int
lret
std
stos
sub
andb
out
adc
mov
pop
std
sub
roll
xchg
out
cmp
fwait
loopne
xor
jb
xchg
sahf
sub
insb
mov
jbe
sbb
xor
add
mov
push
out
out
inc
and
iret
jge
mov
sub
dec
dec
hlt
jne
cmc
pop
lea
xchg
mov
imul
jl
push
lods
pushf
outsb
mov
or
push
push
mov
xor
cmp
mov
mov
jae
in
pop
add
test
push
jnp
into
cwtl
dec
aam
pop
ret
popa
or
mov
push
xchg
xlat
dec
mov
mov
mov
or
in
mov
inc
addr16
mov
and
loope
cwtl
sbb
adc
lods
jg
adc
pop
dec
xor
xor
sbb
dec
dec
jl
mov
and
flds
jno
fdivrl
inc
ds
and
xor
imul
mov
icebp
jge
lcall
clc
jecxz
adc
pop
int3
ja
nop
pop
int
xchg
or
inc
mov
ret
pop
jno
sub
inc
ret
push
cld
sub
xchg
imul
scas
jae
aaa
push
cmp
xor
dec
sbb
xchg
je
jb
or
bound
adc
xchg
sub
fidivrs
xchg
sar
sbb
xlat
fisttpl
push
mov
or
sub
inc
push
aas
xor
and
add
inc
subl
mov
repz
sar
out
xchg
enter
mov
pop
testb
pop
mov
into
scas
or
push
mov
into
stos
icebp
sbb
jb
sbb
mov
mov
addr16
aam
mov
roll
adc
xor
call
pop
and
imul
imul
mov
cmpsl
cld
fiadds
mov
xchg
or
inc
lea
add
inc
xchg
ljmp
mov
mov
aaa
adc
cmp
cmp
push
rcr
mov
outsl
fwait
arpl
js
stos
jne
jg
or
dec
xorb
fsubrs
ret
aas
xor
jnp
pop
les
cmp
ficoms
std
shrb
ret
jp
shll
mov
xchg
or
pop
xchg
repz
mov
xchg
push
lcall
sub
sti
repz
ss
push
sub
inc
ficoms
mov
jae
mov
iret
out
loop
dec
sti
ljmp
out
sbb
xchg
clc
movsl
adc
xchg
std
cmc
into
xor
dec
pop
inc
or
cmpsl
orl
jno
stos
sti
cmp
test
sbb
popf
dec
loopne
mov
or
xchg
and
jl
xlat
pop
and
ss
push
cmp
les
dec
in
mov
data16
out
mov
xlat
fwait
test
cmp
push
mov
test
fs
inc
xchg
rcrb
cmp
rcr
loop
mov
push
pusha
sbb
out
test
dec
add
mov
cmp
inc
push
mov
and
pop
dec
stc
jbe
add
repnz
daa
popa
sub
stos
pop
xchg
out
call
dec
jae
into
mov
and
in
dec
leave
inc
jmp
jmp
adc
lds
or
ljmp
dec
sub
push
cmp
pop
sbb
sub
mov
iret
clc
mov
enter
pop
xchg
in
jnp
test
xchg
sbb
mov
and
ljmp
xlat
and
test
hlt
jecxz
rcl
jns
mov
cmpsl
and
adc
mov
lret
das
nop
dec
out
in
xchg
xor
andb
pop
mov
imul
inc
call
insl
push
push
negb
lret
hlt
aad
jmp
dec
fld
out
push
sbb
jle
and
pusha
jns
arpl
ja
jno
iret
leave
mov
mov
les
xor
repz
jnp
pop
cmp
cmc
pop
scas
popf
leave
or
xor
imul
test
ret
or
aad
mov
sbb
jg
pop
shrl
subb
sbb
xor
adc
mov
mov
mov
or
aas
push
xor
xorb
test
and
leave
rclb
sti
push
sbb
fisubl
aas
cmp
inc
push
popf
push
popf
xchg
cmc
xchg
insl
cld
stos
sub
repnz
mov
or
ret
mov
and
lahf
icebp
sub
jno
cmpsl
inc
sahf
dec
push
xor
lods
mov
dec
sarl
jno
movsl
mov
push
sub
lods
jp
sbb
int
test
push
and
mov
fwait
mov
nop
and
loope
sbb
or
inc
add
neg
je
or
mov
xchg
xchg
adc
or
jne
pusha
or
js
ret
or
das
jb
leave
or
rcrb
sbb
in
out
loopne
xlat
faddp
xor
xor
add
push
or
shlb
hlt
call
shrb
repz
sahf
cmpsb
loopne
inc
or
add
and
iret
aad
into
popf
jno
ret
mov
ficoml
adc
adc
cmpb
mov
out
sub
mov
pop
out
in
or
cmpsl
xchg
popa
in
adc
pop
movsl
inc
cmpb
xchg
fnsave
shlb
outsb
shrb
shll
add
mov
aad
ljmp
or
cwtl
sbb
loop
pop
ficompl
dec
dec
popa
fdivrl
push
in
stc
pop
pop
sti
jmp
insl
mov
inc
pushf
adc
iret
pop
divl
and
mov
shr
mov
sub
cwtl
les
xchg
setge
cs
incb
gs
dec
mov
inc
outsl
scas
jae
in
and
sbbb
ja
out
xor
adc
xor
pop
pop
lahf
add
and
scas
xchg
inc
pop
lock
pop
and
or
addr16
cs
cmpsl
mov
sub
ds
cli
push
push
stos
and
jmp
aad
xchg
lods
inc
mov
jnp
xor
mov
outsb
lret
ficoml
pop
lcall
mov
dec
ror
add
sub
icebp
xchg
cmp
mov
adc
popa
add
rcl
movsl
pop
inc
pop
ret
inc
and
leave
lods
arpl
fs
in
scas
mov
jbe
pop
push
repnz
xchg
dec
sbb
or
xchg
gs
rcrb
pop
cwtl
ret
jg
or
in
mov
dec
pop
add
int
arpl
je
mov
daa
sub
push
ret
popf
xchg
inc
aam
lds
icebp
popa
pop
xchg
jle
jl
inc
test
add
cmpsb
out
bound
xchg
lea
adc
hlt
and
in
add
sbb
cmp
pop
mov
movsl
push
ja
mov
sbb
pop
sarl
cmpsb
out
and
and
and
fcompl
sub
jmp
jg
push
iret
push
dec
sub
xchg
loop
dec
xchg
adc
rorl
pop
xchg
mov
iret
mov
mov
dec
ficompl
xor
xchg
int3
adc
scas
jl
lret
imul
mov
pusha
orl
scas
cmp
icebp
js
sahf
lret
adc
pop
inc
add
lea
sbb
in
pop
int3
sbb
dec
out
jle
push
ror
cltd
xor
mov
mov
push
xchg
dec
test
icebp
gs
mov
mov
std
or
or
imul
inc
or
inc
mov
cmpsl
jmp
adc
lcall
pop
ljmp
and
xchg
in
fimuls
add
scas
jns
loop
orb
dec
push
in
jo
inc
mov
shll
cmpsl
dec
adc
and
or
roll
adc
lahf
mov
push
testb
fs
cmp
test
xchg
aas
loopne
xchg
cwtl
and
mov
mov
ret
push
push
sahf
adc
sub
or
mov
push
fs
adc
adc
jg
mov
mov
cmp
mov
or
inc
push
xor
add
scas
push
or
lds
js
outsl
xor
roll
movsb
jg
hlt
xor
add
xchg
out
or
and
mov
xlat
sarb
or
mov
inc
inc
add
hlt
das
add
sub
ss
dec
cmp
add
stos
mov
xor
iret
bound
xchg
aam
iret
sbb
outsb
adc
xchg
dec
dec
subl
push
cmp
mov
or
loope
sub
mov
fistl
or
lds
fistps
cmp
pop
outsb
jo
sub
push
movsb
and
repnz
mov
dec
jbe
stos
in
xor
dec
sbb
sub
sbb
lahf
xchg
inc
std
push
sub
push
sahf
jmp
push
orb
jno
mov
inc
int3
cmpl
sti
push
mov
test
sub
add
imul
daa
psrad
pop
or
gs
cwtl
dec
fdivl
jp
xor
es
ds
movb
pop
adc
and
adc
inc
addr16
lock
cmp
cwtl
pop
pop
imul
fbstp
jmp
adc
addb
cmp
sub
int3
sub
lret
popa
scas
rcll
fsubs
jle
pusha
das
sahf
xchg
push
jge
and
bswap
pop
jo
push
mov
cmp
sbb
push
adc
push
adc
jp
and
push
in
repz
adc
aad
lock
stos
out
dec
aam
mov
pushf
and
test
mov
sbbl
outsl
jo
nop
or
adcb
loope
inc
and
xor
orb
mov
movsl
daa
jmp
xchg
cmp
int3
pop
aas
push
cmp
sbb
pop
sub
test
pop
popa
lcall
ficomps
add
or
xor
sbb
in
icebp
mov
adc
scas
adc
mov
loopne
xchg
cs
mov
fldt
dec
mov
cmp
addb
add
cmpsb
sbb
popa
inc
iret
or
cmp
daa
add
iret
ljmp
rolb
sub
add
xor
xchg
notb
sarb
out
sub
ja
enter
leave
orl
push
arpl
outsb
push
xor
mov
out
fcmove
int3
repz
push
popa
test
div
pop
loope
loopne
imul
sarl
lods
enter
add
jno
xchg
jge
sbb
stos
push
mov
addr16
sarl
mov
rep
iret
stos
fwait
cmpsb
push
mov
mov
arpl
mov
push
int
ljmp
sub
hlt
andl
mov
ret
ret
sub
sarl
sub
or
cmpsb
jmp
xlat
test
or
dec
pop
popa
sub
stc
pop
add
out
cltd
hlt
pop
sbbw
enter
sub
popa
pop
mov
fmuls
fcomi
inc
sub
sbbb
movsl
fstl
fwait
or
jns
push
iret
push
clc
xchg
push
jge
pop
mov
and
aaa
rolb
sub
ljmp
arpl
adc
sub
mov
adc
lods
xor
xor
popf
les
fisttps
scas
mov
cmp
mov
outsl
push
icebp
loop
insl
mov
jge
movsb
adc
xchg
mov
aad
xlat
js
fnsave
cmp
fnstcw
xchg
test
loopne
adc
shll
xor
loopne
addb
jecxz
daa
aas
inc
clc
scas
inc
mov
sti
dec
cmc
loopne
es
add
push
test
mov
mov
sbb
fs
movsb
sahf
repnz
popa
insb
inc
fdivr
or
dec
sub
call
dec
inc
fsts
jmp
mov
fwait
icebp
bound
fmuls
repz
mov
add
fldenv
add
pop
in
mov
or
fwait
sub
fcoml
rclb
pop
aam
imul
mov
mov
dec
daa
jne
sbb
jbe
gs
mov
scas
cld
out
sbb
cld
add
mov
enter
in
push
icebp
cmpsl
or
iret
mov
cmpsb
push
fdivrp
lods
add
out
xchg
xor
fldt
pushf
gs
mov
addr16
or
sahf
aaa
pusha
jmp
ret
enter
stos
jno
aad
add
shrl
jp
cmp
pop
idivb
out
xchg
push
dec
cltd
ljmp
inc
shrl
je
pop
jg
mov
jmp
sub
and
pop
adc
and
fisubrl
pop
push
out
mov
dec
jns
add
lods
loop
xchg
int3
jg
pop
data16
xchg
clc
sub
inc
jge
pop
stc
pop
bnd
daa
mov
leave
xchg
cmp
das
inc
rcrb
xchg
dec
adc
scas
adc
xchg
lahf
dec
xor
in
jecxz
mov
mov
les
fnsave
sub
jg,pt
jne
or
lahf
cwtl
jl
adc
ds
ror
pop
sbb
inc
adc
jne
mov
push
jl
jge
dec
data16
insl
push
cmc
in
fbstp
xor
int
lahf
fiaddl
cwtl
sbb
jg
aas
or
mov
fistpl
roll
clc
bound
jbe
sbbb
dec
shll
mov
mov
std
cmp
adc
cld
cmpsb
stos
jle
aaa
xor
adc
mov
jno
popa
xchg
jle
push
xchg
xchg
cmp
mov
sbb
lods
push
mov
idivl
leave
ja
xlat
inc
lea
fs
aaa
or
or
cmp
xor
mov
leave
jno
and
ss
insb
xor
sbb
mov
adc
lahf
cmp
repz
shl
sub
les
cmc
cmp
mov
stos
cmp
pop
fcoml
xor
mov
pop
and
sbb
mul
mov
mov
jbe
repz
roll
push
dec
and
fmulp
movsb
icebp
int
mov
pop
jne
mov
xchg
daa
pop
lret
ficomps
aas
outsl
cs
insb
add
gs
imul
les
jmp
push
imul
push
faddl
mov
sbb
push
push
dec
jo
adc
add
ret
mov
cmp
leave
push
fs
jmp
inc
mov
push
sti
mov
sar
jge
and
cmp
sub
aas
test
mov
inc
sub
or
mov
mov
rorb
mov
sbb
inc
outsb
out
popa
out
jae
aaa
push
addb
das
jg
mov
dec
mov
jns
adcl
cli
loope
cs
inc
das
sub
jae
repz
xlat
fs
test
xor
cli
jbe
pop
outsb
stos
or
ret
or
insb
aaa
jns,pn
or
adc
stc
aam
pop
cmp
push
and
xor
aad
jb
sub
sbb
jp
sub
add
lahf
push
jb
add
inc
or
cmc
add
and
xor
shlb
negl
jns
popa
adc
leave
in
test
pusha
out
dec
pop
fcomps
fnstsw
clc
shl
nop
filds
popa
or
xchg
mov
sbb
shlb
dec
mov
imul
popf
push
pop
in
hlt
mov
cmpsl
clc
fistl
shlb
sub
jge
jle
cmp
fsubrs
int
rcl
dec
mov
adc
jg
jg
mov
push
add
mov
mov
fstl
pop
rorb
dec
scas
les
fistps
ja
mov
decb
daa
xor
lret
jge
mov
sub
add
insl
sub
inc
xchg
push
sbb
mov
xor
mov
xchg
mov
inc
nop
imul
fwait
popf
int
add
and
dec
pop
mov
call
cmpsl
add
inc
iret
sbb
and
iret
pop
js
jmp
bound
push
add
repnz
inc
push
mov
mov
push
nop
nop
sub
or
xor
mov
ret
in
and
mov
and
pop
inc
mov
pop
jb
mov
js
lds
jmp
pop
hlt
add
outsb
mov
inc
cmp
push
or
mov
cmp
pop
ficomps
cmp
pop
pop
xor
test
dec
lahf
xor
stos
ret
ret
push
inc
push
sbb
jge
sarl
dec
cwtl
das
mov
add
or
enter
mov
push
add
jl
or
adc
or
mov
xchg
sti
aaa
cmp
xchg
stc
add
pop
in
or
loop
push
cmp
loope
fnstsw
lret
in
mov
xchg
lret
xor
xor
cltd
cmp
leave
cmp
fisttpll
stos
and
or
hlt
or
sbb
enter
jne
xor
xchg
jne
xor
or
cmp
mov
push
mov
push
pop
jne
push
jg
cmpsb
jmp
rorb
pop
and
pop
add
ffree
arpl
cmp
in
lret
lods
jge
test
pop
jmp
incb
and
faddl
sbb
dec
aam
out
mov
jbe
mov
inc
mov
xchg
incb
xchg
mov
push
or
mov
test
das
test
in
daa
add
sub
sub
cli
pop
lods
xchg
clc
jge
std
sbb
push
into
lahf
cmp
fcomi
aas
push
gs
xchg
test
and
mov
out
adc
dec
xor
mov
mov
pop
xchg
add
shlb
addb
jne
enter
fistpll
outsl
sbb
insl
or
lahf
ret
cmpsl
jmp
mov
iret
cmc
jbe
lock
mov
inc
repnz
inc
xchg
mov
dec
bound
mov
mov
dec
mov
lods
sbb
xor
jmp
xor
shl
cmp
sarb
mov
std
dec
sub
xor
cmp
pop
mov
movsl
pop
rorb
cmp
or
jae
xor
arpl
and
add
outsb
in
and
test
inc
push
shr
lret
pop
loopne
stc
sub
lret
lret
rclb
loop
test
frstor
fnstsw
jecxz
inc
add
push
cmp
pop
shlb
mov
dec
pop
adc
gs
fcmovnb
xor
fbstp
ffree
mov
hlt
sbb
pop
mov
mov
push
sub
pop
scas
sbb
mov
adc
movsl
jbe
stc
movsl
cmp
fldt
cwtl
jnp
fwait
pop
xchg
mov
xor
push
jne
rcrb
sti
jnp
pushl
mov
sub
mov
fstps
jnp
push
loop
std
push
pop
call
out
aam
in
rorl
fs
in
imul
mov
adc
dec
bound
mov
xor
loope
pop
cmp
sti
jp
jae
sub
mov
cmp
xchg
dec
repz
pop
add
mov
lock
dec
xor
push
es
dec
mov
pop
sub
fildll
jno
test
or
les
fmull
cmp
or
sbb
mov
aad
shl
ret
inc
js,pn
enter
inc
icebp
loopne
jmp
add
add
fistpl
icebp
dec
push
outsb
cmp
daa
add
lret
jne
es
lahf
mov
in
inc
xchg
in
pop
rcrl
mov
fnsave
xchg
inc
insb
gs
dec
ds
adc
push
test
push
imul
cmp
sti
jns
roll
jmp
jmp
push
gs
rorb
cmp
cmpsl
push
and
and
aad
pop
ret
pop
lahf
into
cmp
pop
add
in
out
mov
push
in
jae
push
dec
adc
xor
data16
adc
mov
iret
cli
mov
sbb
aas
cmp
ficoms
inc
test
scas
ja
xchg
insb
push
sbb
jg
data16
call
push
cmp
ret
popa
adc
rclb
cmc
out
arpl
jno
push
nop
loop,pn
push
nop
pop
cmp
pop
adc
adc
mov
jne
imul
sahf
sbb
sub
and
xor
insl
xchg
mov
subb
cld
mov
fdivrs
xchg
inc
pusha
pop
inc
outsl
test
inc
push
and
imul
imul
jg
lret
out
shlb
inc
ja
scas
adc
adc
adc
inc
fnstcw
mov
mov
dec
push
enter
out
aaa
dec
or
cmp
notl
fs
xor
xor
mov
aam
call
test
mov
cmp
sub
inc
mov
mov
mov
fwait
dec
sti
xchg
mov
mov
pop
aad
add
lods
xchg
or
fnsave
leave
xor
jecxz
mov
and
test
inc
xor
push
mov
sub
pop
in
decb
jnp
mov
mov
std
push
adc
fbstp
adc
sbb
cld
dec
sbb
int
ds
sbb
mov
mov
outsb
rorl
mov
sbb
imul
arpl
pop
xchg
jo
cmp
insb
mov
imulb
insb
ret
or
cmp
sub
fcoml
int3
and
xor
inc
pushf
push
mov
jb
sbbb
jl
insb
ret
or
cmp
sub
fcoml
int3
and
xor
inc
pushf
push
mov
jb
sbbb
jl
insb
ret
or
cmp
sub
fcoml
int3
es
xor
inc
pushf
push
mov
inc
lods
mov
cmpsb
dec
xchg
jl
insb
ret
or
cmp
sub
fsubr
data16
xor
popf
inc
lea
int3
int3
int3
int3
add
adc
and
xor
dec
cmp
adc
push
jns
xchg
mov
in
aam
in
hlt
fldl
xor
inc
insl
push
jge
dec
je
test
mov
in
aad
in
hlt
fldl
xor
inc
insl
push
jge
dec
je
test
rcrl
cmpsl
test
fnsave
jne
and
pop
icebp
dec
stos
add
mov
call
dec
ljmp
call
sbb
loop
xchg
push
sbbb
sbb
pop
lea
xchg
sub
movsl
and
cmp
dec
cli
jge
adc
xchg
scas
dec
sub
cmp
inc
mov
xor
in
pop
into
addr16
faddl
xor
or
or
stos
insl
cmp
sahf
sbb
xchg
mov
jg
push
mov
shll
je
cwtl
mov
or
jno
scas
xchg
and
hlt
lea
test
lds
or
push
rolb
lods
push
mov
popf
and
xchg
and
neg
sub
xor
inc
insl
push
jge
dec
je
test
mov
in
aam
in
hlt
fwait
popa
inc
ja
bound
pop
and
cmp
sub
sub
xlat
jecxz
repz
adcb
jb
pusha
ja
or
pop
push
and
xor
call
mov
xor
sahf
mov
jge
dec
bound
imul
dec
je
test
mov
in
aam
in
hlt
fldl
xor
inc
insl
push
jge
dec
je
test
mov
in
aam
in
hlt
fldl
dec
int3
xchg
test
mov
aam
pushf
scas
push
hlt
jp
insb
in
sub
das
mov
mov
jle
cmc
mov
or
xchg
fwait
pop
sahf
cmpsl
call
jge
adc
xor
icebp
cli
and
mov
pushl
and
mov
lods
jns
pop
sbb
scas
in
mov
cmp
xchg
jns
push
xor
push
movsl
jo
shll
xchg
mov
lcall
adc
imul
mov
or
pop
call
sahf
cltd
jge
ret
cmpsl
inc
rcrb
push
test
rorb
movsb
add
mov
pop
sbb
stos
stc
inc
add
outsb
test
or
loope
inc
sbb
outsb
mull
ud1
subb
inc
dec
clc
pop
std
pop
les
cmc
and
mov
into
lea
xchg
loope
fsts
pop
out
aas
mov
int3
sbbb
into
dec
lock
int
mov
push
jae,pt
loopne
pop
scas
orb
mov
jle
jmp
mov
scas
push
jmp
xchg
and
test
mov
xchg
xchg
xor
out
add
mov
test
bound
test
dec
add
call
hlt
sti
xor
xchg
xor
dec
out
fnstsw
sub
in
rcl
cmp
xchg
pop
loopne
push
ret
adc
filds
insb
das
pop
out
lock
out
or
and
fisubs
mov
data16
mov
fildll
lods
popa
sub
fcoml
mov
loope
sub
or
leave
aad
lcall
popf
popa
ss
xchg
in
cld
or
or
xchg
cli
dec
iret
repz
iret
leave
xchg
enter
xor
movsl
xor
pushf
mov
lds
or
addb
into
lahf
mov
inc
dec
push
mov
jg
daa
dec
pop
jo
fdivl
stos
movsl
mov
add
sbb
lods
cmp
out
mov
push
push
cmp
inc
out
push
mov
pushf
adcb
shr
sbb
mov
mov
aad
push
cmp
std
pop
pop
mov
loope
testl
inc
movb
cmp
push
adc
and
add
shr
les
sub
mov
push
cmp
push
inc
inc
or
lds
jecxz
shrl
add
mov
insl
cmp
adcl
inc
lods
aam
xor
sti
in
dec
test
ja
or
fadds
push
and
jnp
testl
insl
mov
loopne
bound
mov
das
shl
stos
jae
or
mov
lds
mov
inc
das
push
ss
sbb
je
sub
outsl
aas
insb
in
jb
cmp
sbb
xor
scas
pop
sbb
ljmp
in
cmp
outsl
stc
inc
mov
add
stos
cmp
jg
rclb
rol
lods
or
cmc
loopne
daa
dec
rcrl
ja
repz
push
pushw
xor
push
jle
mov
dec
iret
je
std
lock
hlt
xor
adc
push
lret
pushf
in
push
jo
hlt
push
jo
leave
shlb
aas
mov
sti
sbb
or
jbe
xchg
xor
out
mov
adc
dec
dec
arpl
push
adc
and
pop
xor
ja
push
setns
iret
jo
adc
neg
sbb
mov
push
xorl
pop
test
call
testb
lahf
xchg
cwtl
in
mov
pop
orb
and
push
lods
push
mov
xchg
lds
add
mov
aaa
fstl
or
jle
mov
jmp
inc
cmpl
mov
gs
call
div
imul
and
push
es
std
loopne
cmc
fcmove
xor
aas
stos
sti
stc
push
add
jno
sbb
dec
int3
dec
adc
adc
call
mov
daa
into
aam
pop
push
mov
cmp
ja
jle
aad
vmwrite
add
test
and
cmp
pusha
leave
xor
fcmove
mov
cmpb
cld
sbb
ljmp
clc
mov
xchg
fdiv
jns
dec
insl
imul
cmp
ret
dec
add
pushf
test
insb
test
gs
push
jno
inc
cmp
add
cwtl
mov
dec
pop
fsubs
xor
clc
stos
jge
roll
push
out
and
dec
add
imul
gs
data16
cli
cltd
test
stos
inc
pop
jns
pusha
dec
inc
lret
sub
xchg
dec
ficoms
inc
mulb
ror
repnz
sahf
daa
or
jb
popf
mov
adc
cmp
mov
jbe
pushf
push
cmp
arpl
int
stc
or
mov
jmp
pop
test
pop
out
shlb
ret
outsl
rcl
add
cli
notl
imul
cmp
mov
mov
inc
das
add
pop
push
xchg
adc
ret
sub
call
mov
insl
sbb
jb
adc
stos
jne
add
xor
call
jecxz
hlt
mov
mov
sbb
adc
add
stos
push
sub
lock
jl
mov
sbb
loop
add
sahf
pop
jmp
cmp
cld
data16
inc
mov
xor
xchg
repz
adc
mov
orb
into
ljmp
push
pop
stos
jb
rolb
xchg
dec
aad
jecxz
ss
leave
xor
or
roll
mov
xlat
adc
aam
in
xchg
cmpsl
imul
mov
nop
js
mov
lods
mov
cmc
call
insb
scas
jg
jo
cwtl
jb
add
dec
xchg
inc
sbb
notl
pop
and
push
in
jp
dec
sbb
add
loopne
inc
dec
pop
inc
je
adc
pop
les
in
jae
or
sub
jo
fldl
push
gs
pop
xchg
daa
and
adc
xor
sbb
sbb
mov
out
sub
xchg
xor
cltd
mov
mov
imul
dec
add
xchg
xchg
jl
push
push
jno
jne
sbb
pop
xlat
pusha
cmc
fidivrs
sbb
and
lds
in
add
sub
jo
add
in
movsl
arpl
cltd
xor
int
add
shll
ja
mov
clc
outsl
lds
adc
adc
sbb
lahf
test
push
sub
inc
int
sbb
cmpsb
movsb
fbstp
int3
pop
push
xor
rcrb
push
testb
lahf
loop
repnz
daa
cmp
add
dec
xchg
and
and
daa
nop
rcll
in
loopne
xor
mov
popa
pop
mov
jae
mov
sbb
or
jp
in
mov
adc
arpl
insl
sbb
ret
out
push
out
adc
xchg
pushf
loop
mov
std
mov
and
xchg
loope
xchg
push
xor
xchg
mov
js
mov
pop
sub
xchg
insb
iret
mov
imul
mov
sahf
xchg
addr16
or
dec
mov
stc
xorb
rcl
sar
inc
arpl
jmp
stos
pop
mov
out
jl
aam
into
insb
popa
xlat
sarl
in
pop
out
pop
dec
sub
pusha
mov
and
sub
leave
xchg
xchg
aaa
mov
clc
cld
cmpsl
and
xor
or
movsl
dec
and
push
lcall
mov
std
arpl
cld
subl
jne
jmp
cmc
cmp
into
mov
sbb
jp
in
xlat
mov
movsl
inc
dec
pop
xchg
lahf
jae
arpl
pop
mov
xor
dec
stos
mov
and
jmp
pusha
out
pop
in
add
call
cmpb
adc
cli
xchg
imul
bound
test
mov
push
fsts
inc
cmpsl
adc
imul
sub
or
or
add
pop
xchg
aad
sub
and
add
shll
cld
dec
push
shlb
mov
adc
in
ljmp
int
jo
test
out
sbb
mov
mov
inc
mov
adc
lahf
repnz
sub
adc
sub
pop
pushl
and
ja
sti
xor
or
pop
stos
jb
std
and
and
mov
and
push
jge
fwait
pushf
sub
add
xchg
push
pop
mov
out
push
data16
xor
out
popa
xor
fucomip
xor
loopne
sub
jns
iret
cmp
sahf
outsb
cmp
inc
in
cld
cs
or
loop
and
dec
inc
test
xor
ret
sar
lock
jg
xorb
xor
mov
clc
rcr
cli
scas
inc
jbe
mov
mov
ficoms
xchg
inc
mov
aas
jg
mov
jl
inc
in
ja
sti
xlat
leave
or
test
fst
sub
mov
adc
dec
enter
les
lret
add
push
cmpsl
outsw
pop
add
xor
lock
ret
add
cmp
fisubrl
inc
mov
mov
mov
xlat
das
or
mov
fwait
dec
js
loopne
lcall
mov
sub
push
inc
mov
push
mov
inc
test
mov
lds
inc
clc
cli
mov
xchg
sahf
pusha
cmp
mov
cmp
and
pop
cmpsl
es
in
mov
into
push
add
sbb
cli
nop
js
ret
ja
pop
or
or
lds
mov
test
gs
cwtl
cmp
fldln2
or
mov
in
push
jp
ficompl
rcrl
nop
xchg
sbb
movl
cmp
adc
fdivl
inc
out
and
lock
xchg
pop
sbb
inc
jg
into
sub
aad
jge
dec
stc
dec
xchg
test
jmp
mov
into
add
pusha
or
jmp
ret
sbb
sbb
neg
fildl
outsb
lret
movsb
pushf
mov
bound
imul
lods
loopne
ss
push
imul
inc
xor
cld
sbb
sbb
xchg
and
and
in
sbb
xchg
gs
insb
cs
inc
xchg
dec
mov
push
in
cli
in
test
int
xor
add
adc
sti
in
inc
fmull
fadds
add
adc
adc
mov
jae
mov
push
sub
xlat
jns
mov
push
je
add
dec
jno
outsl
push
out
sahf
ja
mov
push
push
lods
outsl
scas
leave
lock
fwait
aas
pop
dec
mov
leave
call
lcall
js
add
push
push
push
out
jae
dec
inc
cmp
jmp
xor
lock
cmpsl
fldl
jge
adc
out
xchg
mov
into
mov
mov
xor
xor
lcall
pusha
out
nop
out
mov
popa
dec
mov
mov
test
cmpl
mov
add
adc
loop
mov
dec
mov
sub
andb
mov
mov
mov
movsb
ret
mov
cmpb
ljmp
test
xchg
popa
rorb
out
xchg
push
dec
adc
in
lds
enter
lods
xchg
sbb
decl
or
es
xor
push
loopne
por
repz
fcmovu
test
in
add
loopne
dec
mov
dec
dec
out
fsubp
jecxz
fld
adc
mov
sbb
iret
lahf
sub
add
mov
xchg
mov
add
dec
jnp
cmpsl
into
aam
imul
gs
fiaddl
push
cmpsl
push
or
ret
out
mov
mov
sbb
pop
int3
sti
mov
aaa
stos
insb
jp
cmc
imul
scas
ds
test
lahf
movsl
sahf
push
sub
addb
xor
es
push
pop
imul
sbbb
pop
and
jmp
loop
add
ss
add
dec
cltd
out
mov
push
addr16
sbb
rclb
jecxz
pop
lods
movsl
xchg
sub
repz
test
lods
jg
clc
ret
pop
pop
mov
imul
mov
sbb
adc
les
mov
jmp
cmpsl
ds
adc
es
or
xchg
or
sti
mov
outsl
int3
out
cmp
out
pop
push
pop
test
ja
call
or
data16
and
icebp
dec
xlat
aam
dec
das
mov
mov
xchg
je
fdiv
in
ljmp
mov
lods
sbb
mov
out
sahf
mov
jle
in
aaa
mov
xchg
xchg
arpl
mov
gs
add
imul
jmp
scas
sub
mov
outsl
pop
in
dec
mov
cmp
mov
xchg
push
das
xchg
ljmp
pop
test
sti
mov
cmpsl
lahf
add
mov
sub
dec
mov
dec
push
sub
adc
pop
xorb
loopne
push
test
repnz
pop
dec
and
xor
rcll
call
mov
inc
xchg
jno
out
cmp
dec
lahf
or
dec
in
push
mov
push
aam
jecxz
rorl
lahf
xchg
je
and
nop
packsswb
jecxz
fs
adc
pop
push
test
fcomp
dec
out
push
mov
mov
addr16
sbb
mov
aaa
pop
push
test
cmp
xchg
adc
repnz
nop
dec
cmpl
push
mov
shll
cmp
sbb
xor
fidivs
pop
lret
das
sbb
inc
lcall
xchg
mov
mov
stos
lahf
mov
cmp
std
push
ficoml
xchg
and
mov
into
lea
cmpsl
ds
and
pusha
mov
cmp
insl
inc
in
fldl
test
push
jmp
add
mov
jno
sarl
xchg
jmp
xchg
aad
insl
jg
pop
in
jg
aas
inc
loope
testl
rcr
sub
cmpsb
jmp
jge
fcmovne
orl
jo
lods
sbb
into
xchg
mov
mov
xchg
ds
vmovd
xchg
in
ja
push
mov
jbe
addr16
in
and
pop
add
sub
mov
sub
xchg
cs
in
xor
sub
sbb
lahf
push
pushf
rcll
repz
je
adc
xchg
popa
xchg
outsl
cmpsl
xor
jne
cmpsb
ficomps
das
insb
xchg
movsl
jmp
imul
or
clc
mov
sbb
sbb
fldl
loope
cmp
xor
mov
ficoms
xor
sbb
mov
lret
cmpl
scas
xor
cmpsl
jns
js
mov
cwtl
test
mov
hlt
lahf
sti
mov
jmp
inc
enter
pop
adc
stos
repnz
movsb
daa
xor
lcall
call
clc
repnz
leave
mov
mov
inc
dec
call
mov
or
sahf
inc
add
mov
stc
cmp
cmp
push
or
push
loopne
lods
add
loop
sarb
out
push
lods
pop
push
xor
lods
pop
dec
sbb
icebp
sbb
jmp
inc
adc
and
xor
clc
sub
ljmp
ss
xlat
insl
push
adc
cmp
mov
add
inc
inc
jle
add
in
stos
insb
std
je
scas
inc
or
mov
jge
imul
int
xlat
or
mov
fcompl
mov
xchg
inc
mov
or
ret
fsubl
out
jg
lahf
repnz
outsb
inc
jo,pn
and
int3
not
lds
aas
das
push
cmpl
sbb
inc
jbe
sub
ret
jge
out
std
in
mov
cmp
call
imul
gs
pop
jl
xchg
sbbl
pusha
scas
idivl
sarl
xchg
in
xchg
jno
pop
cmpsb
xor
pcmpgtb
shll
addr16
pop
xchg
insb
cmp
push
lahf
call
nop
lcall
cmp
mov
popa
dec
mov
push
rolb
push
cmpsb
push
and
mov
mov
jnp
mov
data16
pop
into
stos
or
inc
mov
add
ljmp
out
or
fidivl
mov
enter
push
and
in
sub
jge
lock
lret
xor
out
inc
and
aad
dec
jp,pt
ss
pop
mov
pop
sub
test
stos
shlb
mov
mov
rcll
xor
fwait
mov
mov
cwtl
mov
and
int
negb
enter
cmpsl
or
jg
mov
mov
int3
adc
ja
icebp
jne
xor
fcmovb
push
popa
and
mov
fsubrl
sbb
cli
test
cmpsl
push
in
inc
push
sub
stos
dec
cmpsb
push
ss
pop
xchg
ja
push
mov
dec
pop
in
add
or
imulb
mov
lcall
fwait
fs
dec
test
stos
scas
ret
sub
cmp
dec
loopne
imul
mov
pop
lods
mov
scas
shlb
inc
dec
ja
jp
ja
mov
cltd
in
daa
and
sub
lret
fisubl
dec
ljmp
pop
andl
push
push
fisubrl
in
cld
test
jl
add
ljmp
shlb
adc
push
mov
loop
jbe
sub
pop
in
and
stc
ds
shrb
add
mov
xchg
sti
xor
and
adc
das
push
mov
inc
adc
and
notb
daa
sub
addr16
pushw
sbb
icebp
repnz
hlt
sahf
mov
neg
jecxz
imul
jg
shrb
out
movsb
jae
sub
ja
add
xor
xor
hlt
lahf
lea
insl
in
fs
cltd
adc
adc
scas
dec
jns
jmp
xchg
loop
jne
xchg
fildl
outsb
outsl
jo
and
pop
test
mov
mov
sbb
outsb
jp
jnp
mov
sub
jbe
sbb
add
mov
ja
push
rcl
mov
outsb
popl
out
test
cs
movsl
cltd
sbb
push
mov
jmp
cmpsl
shrl
ror
imul
pusha
sbb
lret
test
inc
arpl
outsl
ret
sahf
ja
and
in
inc
rclb
sbb
cmp
pop
aam
and
pop
lea
ss
ret
cli
jg
sti
dec
cmpl
xchg
popf
gs
jnp
dec
popf
aaa
pop
jae
cmp
jg
movsl
ret
xchg
mov
subb
push
push
inc
jge
push
outsl
das
or
lds
and
push
sub
xorl
xchg
adc
push
dec
loop
sub
lcall
add
arpl
ret
jmp
push
xchg
sub
in
fiadds
cmp
and
pop
add
bound
sbb
jmp
outsl
cmp
ds
jg
xor
cli
repnz
mov
into
mov
mov
scas
or
mov
clc
cmp
xchg
test
scas
lcall
cmp
jg
sub
loop
lea
in
dec
cmp
xor
xchg
mov
inc
in
cmp
repz
cs
xchg
negl
mov
mov
sti
inc
or
aaa
cs
test
mov
fistpl
insb
xchg
popf
subl
clc
sbb
add
dec
push
aam
pop
pop
inc
mov
sub
jne
jge
jmp
mov
or
add
mov
mov
inc
cli
xor
test
jb
add
rcrl
sbb
xchg
inc
xchg
mov
mov
push
lock
jecxz
lcall
jo
push
shrl
scas
or
mov
ljmp
jge
xor
inc
pop
jb
jno
lahf
or
lahf
mov
pusha
mov
sti
aam
mov
pop
outsb
bound
test
loope
fstl
ret
pop
xchg
push
jg
sub
jno
out
pusha
xor
dec
xor
and
xchg
xor
sbb
lock
push
cmp
mov
out
sbb
mov
push
mov
sbb
push
out
popa
pop
movsb
push
rclb
subb
xor
je
pop
jle
fnstenv
sub
mov
push
mov
fstl
xchg
dec
push
jnp
orl
les
sub
jmp
xor
and
xchg
mov
push
outsl
adc
dec
orl
daa
add
push
scas
mov
add
pop
pop
dec
loop
ficompl
pop
jp
dec
sub
sbbl
mov
pop
sub
dec
jecxz
ret
movsl
test
sub
scas
jl
xchg
mov
fsubrp
pop
jno
lcall
hlt
jno
push
sbb
mov
mov
lcall
in
dec
mov
inc
aad
inc
pop
in
popf
pop
out
xchg
or
mov
lds
mov
repz
das
jae
out
xlat
push
add
mov
adc
dec
lret
pushf
iret
push
mov
xor
push
test
cmpsb
cmp
in
dec
cwtl
dec
enter
dec
cmp
sbb
xchg
jo
in
testb
mov
clc
mov
sub
and
cwtl
jns
mov
jno
adc
cmpsl
sbb
into
rorb
inc
sbb
hlt
mov
fdivl
xor
sbb
pop
fwait
loope
cmp
cmpsb
add
ja
sbb
mov
xchg
xchg
sbb
negl
leave
movsl
pop
sub
nop
pop
out
mov
mov
insb
iret
mov
sub
lret
lods
jmp
push
leave
idivb
adc
out
loopw
mov
inc
xchg
xchg
fwait
mov
pop
mov
push
call
add
xchg
mov
test
adc
cli
pop
sbb
nop
das
sub
cmp
sbb
pop
jnp
std
and
mov
cmp
outsl
cltd
std
xchg
hlt
sub
stos
aad
mov
les
aad
xor
stc
je
mov
adcl
jge
xchg
and
pop
xor
pop
dec
pop
sub
xchg
inc
popf
mov
in
mov
dec
clc
hlt
ret
in
jnp
sbb
sbb
fs
je
test
mov
in
aam
in
hlt
fldl
xor
inc
insl
push
jge
dec
je
test
mov
in
aam
in
hlt
fldl
adc
and
xor
inc
insl
push
jge
dec
je
test
mov
in
aam
in
hlt
fldl
xor
inc
insl
push
std
in
hlt
mov
push
lea
sbb
or
int3
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
es
push
bound
push
jecxz
divb
mov
xchg
out
testb
xor
and
shlb
ret
push
loop
xchg
jbe
inc
mov
cmpsb
push
mov
bnd
out
testb
jb
and
inc
ss
push
loopne
scas
jbe
inc
pop
push
mov
cmc
sub
xchg
imul
lods
jne
fs
movsl
jbe
int
lods
jp
push
insb
clc
dec
mov
and
out
dec
ja
jl
pop
mov
repz
pop
dec
xchg
bnd
repnz
adc
sbb
jb
adc
rol
sub
into
call
addr16
cmpsb
jns
cld
out
inc
xor
mov
adc
shlb
xchg
pop
xchg
ljmpw
cmpsb
lods
cmpsb
adc
inc
mov
sbb
sahf
std
fcmovbe
jno
movl
fnsave
push
mov
xchg
mov
bound
hlt
add
and
fstp
adc
jg
jecxz
fcomps
repnz
push
fsubrl
jle
sarl
adc
std
xor
xor
jbe
call
inc
push
mov
xchg
sub
ds
xor
dec
pusha
sbbb
mov
int3
or
aas
in
and
pop
out
mov
in
cli
or
jae
inc
and
xchg
jae
and
sbb
ret
aaa
mov
pop
roll
mov
dec
dec
test
outsl
mov
jbe
inc
mov
mov
xchg
out
testb
xor
and
shlb
ret
push
loop
xchg
jbe
inc
mov
mov
xchg
out
testb
xor
and
rclb
into
mov
inc
inc
fiadds
sub
clc
xorb
insl
pushf
inc
dec
lock
pop
jbe
fstl
adc
inc
inc
div
mov
mov
shll
jne
jmp
cmpsb
ret
mov
mov
push
fdiv
pop
push
mov
mov
xchg
mov
push
es
imul
pop
push
ljmp
mov
push
call
andb
movsl
popa
sub
push
mov
jae
test
add
mov
popf
cld
adcl
pop
movsb
add
dec
add
aam
xchg
pop
jno
sbb
mov
popf
addl
mov
movb
inc
sahf
sbb
xchg
inc
into
xchg
fadds
out
fnstcw
adc
cmp
mov
insb
sub
cmp
lock
fmuls
jmp
cmp
addl
into
dec
jecxz
push
loope
pop
jl,pn
or
outsl
add
adc
mov
call
je
into
test
pop
adc
xor
int3
add
test
clc
xlat
cltd
and
xchg
jmp
mov
jle
roll
mov
mov
and
mov
cli
clc
into
dec
xor
add
int
push
leave
jne
add
sti
mov
xor
adcl
fcmove
cmpsb
shll
push
nop
call
cmp
adc
pusha
jno
mov
mov
cmpb
test
faddl
sbb
mov
push
mov
pop
inc
adc
xchg
bnd
jbe
add
adc
loope
test
pusha
xor
fistl
or
push
mov
push
dec
lret
pop
lods
push
mov
push
sub
jne
jmp
add
int
pop
sbb
mov
cs
xor
ljmp
sbb
xor
push
sbb
stc
shlb
pushf
mov
aaa
mov
and
pop
or
out
gs
mov
or
pushf
adc
add
mov
cli
sub
dec
es
xchg
mov
mov
lret
lea
sbb
xor
push
add
into
rolb
mov
jle
in
hlt
sub
rcl
jbe
inc
in
xchg
cmp
sbb
sub
fninit
int3
inc
or
jno
lods
mov
leave
mov
push
xchg
add
sahf
lods
mov
out
sub
insb
dec
rcll
sahf
and
sbbl
js
lods
icebp
decl
xor
sub
sub
adc
jns
xor
dec
loop
adc
mov
outsb
xor
stos
pop
dec
push
xchg
ljmp
inc
push
leave
jne
cmp
addl
mov
ja
mov
push
xchg
adc
jmp
push
hlt
sbb
std
add
mov
or
aam
sub
pop
lds
out
dec
iret
mov
jmp
cld
pop
dec
fsub
push
sbb
aaa
pop
int
inc
jle
mov
cmpsl
out
or
cltd
cmc
cmc
neg
xchg
ljmp
jecxz
ror
xor
pop
ficompl
mov
push
loope
shlb
stc
lret
popa
cmpsb
cwtl
mov
sub
aam
inc
in
cld
xor
ss
stos
out
add
rclb
test
sbb
mov
dec
testl
xchg
sbb
inc
and
pop
lret
mov
mov
xchg
cltd
dec
xchg
xor
adc
repnz
jne
enter
mov
adc
inc
cmp
mov
or
sbb
sar
lret
scas
notb
movsb
faddp
cmpsl
pop
in
jbe
sti
es
sti
dec
adc
call
idivl
fsubl
sbb
aam
jg
fstps
push
jge
and
push
inc
cwtl
loop
addr16
push
fldt
inc
or
cmp
jecxz
mov
sub
es
aas
test
mov
pop
cmp
ja
mov
and
xchg
test
xor
jge
les
jl
mov
pusha
pop
pop
adc
adc
cs
ja
scas
pop
outsb
push
shll
in
insl
dec
movsl
push
mov
xchg
addr16
ret
jbe
mov
stos
dec
jne
icebp
lret
fidivrs
lods
push
cmpsb
xor
mov
push
jne
cld
icebp
pusha
xchg
mov
mov
fadd
je
test
xchg
mov
arpl
cld
fnstcw
jb
xchg
je
cmp
xchg
imulb
xorb
xchg
fidivrl
jl
mov
icebp
stc
and
dec
and
or
xlat
mov
dec
push
and
in
ficoml
mov
pop
sub
inc
jmp
nop
adc
sub
push
repnz
jecxz
mov
sub
ret
sarb
jbe
sbb
inc
xor
js
dec
pop
dec
dec
adc
mov
daa
sub
or
pop
inc
mov
test
repnz
jl
rorb
fcmovu
cmp
mov
sbb
pop
push
scas
insb
jp
testl
xchg
mov
out
cmp
outsl
andl
pop
test
mov
mov
adc
adc
cwtl
cmp
ficomps
ja
pcmpeqd
mov
out
leave
mov
cmp
and
gs
jnp
inc
cmp
jns
xchg
mov
pop
shll
and
fcoms
push
mov
rorb
mov
jno
ror
cmp
idivb
outsl
inc
scas
popa
jecxz
dec
es
jle
popa
xchg
call
pop
lock
hlt
inc
push
jnp
insb
xchg
jecxz
or
popa
mov
enter
les
push
mov
sarb
fwait
inc
xor
sbb
std
push
fdivrs
aaa
sub
mov
mov
cmp
out
shlb
idivb
and
mov
out
rcl
jns
jp
stos
dec
mov
pop
dec
add
dec
xor
insb
mov
sub
pop
rcll
in
xchg
fstpt
mov
or
inc
sahf
lock
inc
and
or
aam
cmp
adc
mov
pop
adc
stos
int3
roll
add
sub
jnp
or
pusha
sbb
and
divl
or
addl
fildll
sub
pop
leave
rcrl
in
jle
mov
xchg
sub
or
cmp
iret
add
aaa
dec
push
ja
xor
push
repnz
add
add
pop
inc
adc
outsb
popl
popf
lods
mov
cltd
cmpsb
rcll
sti
pop
pushf
xchg
rcl
pop
pop
ja
andb
sub
cmpsl
outsb
data16
or
test
int3
push
int
push
or
pop
mov
inc
jge
push
jbe
pop
cmp
fldcw
in
leave
sbb
cmp
popa
pop
dec
inc
repz
or
jne
popl
xor
cltd
and
cltd
addr16
outsl
push
push
gs
leave
jmp
sbb
pop
cmc
push
iret
push
mov
sbb
testb
push
iret
push
in
into
cmp
sbb
in
xorb
test
imul
pop
outsl
test
repz
push
pop
pusha
or
divb
and
inc
aad
loopne
cli
and
lret
mov
xlat
lea
roll
xchg
scas
call
das
insb
outsb
cs
cld
loopne
dec
or
cli
shrl
nop
cmp
jl
or
jecxz
sbb
sbb
scas
sub
sub
lods
and
addr16
xchg
xchg
ds
adc
cmc
dec
popf
inc
rolb
push
push
ja
pop
out
jge
pop
push
in
fnstsw
push
sub
jnp
jmp
jne
aam
mov
inc
jns
shrl
int
push
inc
mov
dec
xchg
mov
jae
lcall
movb
jl
in
jecxz
push
sbb
add
mov
sbb
mov
lods
mov
or
inc
loop
cwtl
xor
mov
arpl
dec
xchg
jb
das
xchg
pandn
out
inc
sahf
out
cld
pop
insb
push
adc
jns
and
leave
out
leave
cmp
push
in
movsl
test
mov
dec
pop
cmp
test
cmp
cmpsl
shll
icebp
loope
js
adc
add
sbb
sub
xchg
movsb
mov
or
fcompl
outsl
add
shl
js
mov
push
outsl
jmp
icebp
or
jo
dec
sbb
or
sub
aas
jmp
lods
lods
outsb
imul
mov
aad
andb
fstl
loope
fimuls
int
daa
cmp
dec
ja
inc
mov
fiaddl
and
repz
shl
jl
push
xor
loop
mov
mov
pop
fdivl
inc
dec
sub
jno
cld
mov
pushf
dec
mov
rcrl
pop
dec
call
cltd
mov
xor
mov
mov
xchg
jmp
test
stc
jmp
int3
mov
lahf
aad
aas
sbb
and
inc
cmp
mov
cmp
in
fmul
add
jnp
mov
sti
enter
sub
jg
int3
sbbb
jl
lods
addr16
ljmp
mov
sub
addr16
jae
das
addb
push
aam
push
sub
gs
lcall
push
lahf
dec
push
pop
aam
leave
sub
dec
std
mov
jle
dec
popl
lds
aad
sbb
sbb
adc
mov
add
jmp
repnz
mov
int
stc
data16
shlb
push
js
pop
cmp
mov
popf
adc
fninit
popa
inc
push
xor
inc
or
sarb
in
and
add
sub
jne
sub
loope
push
jge
and
lock
cld
shl
jle
or
bound
pop
jge
and
test
es
pusha
mov
mov
fstpl
fstps
xor
push
push
sarb
inc
jle
cmp
push
cli
gs
inc
xchg
dec
pop
mov
addl
sub
inc
test
loop
leave
and
cli
sub
cmpsl
ljmp
test
in
sub
loope
push
insl
xchg
cmp
xchg
addr16
pop
in
pop
pop
cmp
lcall
push
fisttpll
iret
dec
lahf
bound
mov
sub
dec
xor
add
mov
xchg
jg
xchg
stos
and
xchg
divb
lea
insl
xchg
push
out
sub
xchg
push
dec
fnsave
add
enter
xchg
aas
sub
cs
and
jns
lret
cmp
aaa
loop
mov
mov
dec
lods
xor
ljmp
cli
adc
cli
xor
mov
xchg
jg
xchg
adc
dec
adc
repz
daa
std
mov
pop
int
pop
jno
pop
loope
addr16
mov
lods
pop
mov
int
rolb
outsb
mov
adc
cli
inc
rcrl
subb
cwtl
pop
adc
cmp
icebp
jns
clc
dec
push
jbe
push
fldl2e
add
add
cmp
addr16
add
or
into
dec
aas
out
pop
sub
mov
push
shll
lods
adc
jg
call
ret
pop
sub
mov
pushf
and
jno
out
push
jmp
or
arpl
in
and
hlt
leave
inc
cmp
sbb
mov
lock
std
xlat
shrb
test
cld
pmaxub
lcall
stos
lret
pop
icebp
shll
mov
add
insl
arpl
adc
mov
rcrl
jb
cmp
fwait
in
repz
xchg
xchg
xor
dec
daa
sbb
sbb
in
cltd
enter
cmp
fistps
data16
mov
js
outsb
out
out
or
dec
int
cli
push
sbb
aad
jb
push
repz
pop
es
dec
mov
inc
xchg
stos
cmp
fcmove
add
dec
insb
out
push
pop
or
sbb
mov
cmp
jle
jns
jl
mov
ret
dec
adc
dec
test
clc
pusha
inc
or
pop
scas
jecxz
and
insb
insl
std
hlt
jb
dec
js
scas
shlb
jg
mov
mov
stc
arpl
mov
ror
mov
dec
push
fwait
and
jg
adc
mov
and
inc
rclb
xor
xchg
push
xchg
mov
mov
int
ljmp
lods
scas
test
lock
mov
xchg
ja
xchg
jno
sub
adc
inc
jnp
or
cld
arpl
jg
adc
das
mov
pop
cmp
push
push
xchg
dec
xor
push
and
xchg
ret
scas
std
call
enter
xlat
dec
jno
test
in
pop
mov
cmpsl
mov
mov
dec
pop
jno
sbb
mov
jmp
inc
push
push
sbb
and
int
mov
ficoms
ret
js
adc
xchg
xchg
xor
sbb
dec
ljmp
lods
lret
mov
push
xchg
mov
fisttps
adc
mov
lret
xchg
scas
movsl
mov
mov
mov
xor
test
xchg
cs
push
xor
test
adc
inc
adc
aam
sub
push
push
mov
mov
inc
jae
sbb
sbb
xchg
sbb
fldcw
test
in
mov
fmuls
add
pop
sbb
inc
cld
xchg
mov
ret
int
xchg
and
div
jno
bound
xorb
adc
pusha
hlt
testl
push
jmp
rol
sbb
mov
ret
mov
sarl
loopne
shlb
or
nop
popa
pop
aad
pop
arpl
andb
loopne
mov
jbe
adc
and
mov
sub
jg
das
in
int
push
jmp
add
sbb
sub
push
das
xlat
dec
mov
push
stc
fucom
popf
test
mov
pop
fstl
or
lock
popa
mov
call
sub
push
fadds
rcl
xor
or
fmuls
cmp
bound
outsl
sub
lret
icebp
mov
xchg
inc
je
pop
fstpl
das
adc
mov
push
cmp
cltd
out
sti
sub
mov
jmp
mov
in
jnp
insb
hlt
std
mov
es
daa
sbb
dec
out
aaa
dec
jmp
cmp
jnp
xchg
add
xchg
mov
cs
idivb
outsb
or
mov
das
add
jmp
and
out
jne
in
arpl
cmp
mov
in
fisttpll
js
sbb
mov
rorl
movsb
cmp
mov
mov
push
and
cmp
pop
mov
push
aaa
sub
repnz
cli
cmp
add
and
mov
lahf
jo
mov
sub
push
out
or
xchg
popf
call
sub
sub
or
test
dec
aad
mov
cmpsl
jmp
insb
adc
mov
scas
test
insb
mov
sub
movsl
loope
push
stos
leave
push
dec
cld
mov
pop
mov
ficomps
mov
push
xchg
push
and
call
mov
pop
leave
incb
rcrb
sar
insb
das
in
lret
jmp
fcmovne
push
movsl
addr16
sub
push
test
daa
xchg
dec
dec
je
loop
iret
fcomp
dec
lods
repnz
loopne
cmp
jecxz
or
jp
aam
xchg
outsl
test
test
jae
push
and
pusha
mov
gs
mov
push
imul
mov
xor
test
cmp
call
mov
popa
push
push
adc
xlat
aad
add
insl
test
add
push
dec
dec
fucomp
xorb
cmp
cwtl
into
cmp
cmpsb
adc
lds
shll
orl
mov
rcr
sub
test
lods
dec
cmp
rorb
cmp
jle
out
fsubrp
dec
pop
mov
lds
xchg
je
dec
or
popa
mov
mov
imul
mov
call
cld
imul
mov
fwait
popa
cmp
ficoml
iret
dec
pop
out
ja
xorps
cmpsb
repz
pop
cli
jno
sbb
mov
dec
test
sub
icebp
in
sbb
inc
stc
loope
xor
mov
and
leave
mov
imul
mov
mov
mov
repz
nop
dec
dec
jg
push
lods
shrb
xor
mov
rcrb
ds
ret
mov
idivl
nop
push
movsb
push
dec
dec
lods
jnp
outsl
cmp
mov
xchg
sub
shr
shlb
push
xlat
dec
std
dec
jg
pop
cmc
mov
stos
xchg
dec
lret
movsl
push
dec
ret
xlat
add
xchg
mov
inc
icebp
sbb
mov
jns
or
pusha
lock
daa
cmp
imul
pushf
cmc
inc
push
sahf
pop
int
cmp
lea
mov
fdivr
mov
xchg
andb
jg
sub
jg
sbbl
pushf
repnz
movsl
lret
in
add
addr16
les
pushf
mov
popf
lods
mov
sub
stos
pop
cmp
dec
pop
call
movsb
jp
fisttpll
sahf
jbe
movq
mov
and
jp
pop
insl
fiadds
xlat
scas
mov
lods
aad
adc
xor
pop
inc
repz
adc
outsb
inc
push
jbe
mov
dec
rcl
xchg
fildl
jp
jns
test
sub
dec
cld
and
icebp
cmp
mov
pop
add
push
xor
adc
lahf
jb
out
jmp
test
sbb
xlat
cmp
pop
mov
cmp
add
add
addb
std
movsb
inc
mov
fnstsw
hlt
mov
dec
pop
xor
or
and
adc
in
push
add
mov
outsl
jbe
fcomi
dec
xor
cltd
xor
ja
jno
out
rcrb
outsb
lret
sbb
mov
pop
sahf
dec
dec
dec
pusha
xchg
icebp
into
lret
mov
call
adc
call
add
ds
mov
mov
insl
sub
sbb
fsubs
ljmp
rcrb
cmp
loop
subl
push
adc
fimull
inc
ljmp
pop
mov
mov
push
xlat
fwait
pop
mov
jmp
xorb
and
cli
je
in
adc
leave
or
cmp
jae
lock
mull
out
jl
ret
push
sub
movsb
sti
data16
pop
push
add
sub
or
sbb
in
sub
stos
mov
push
pop
xorb
sbb
jp
inc
cmp
sarb
in
outsb
inc
repz
pusha
clc
pop
or
sub
out
mov
cli
les
clc
push
xchg
and
and
loopne
je
pushf
cwtl
xchg
popf
in
aad
loopne
mov
loop
mov
push
adc
or
shrl
xor
ljmp
and
sub
mov
add
clc
add
ret
push
repnz
popa
pop
lcall
mov
xor
scas
mov
aad
sahf
addl
loop
mov
call
jmp
icebp
int
into
jle
int3
scas
xor
jg
dec
pop
cmp
or
inc
cli
jno
shl
faddl
lahf
mov
cmp
sbbl
loope
hlt
jl
cltd
cltd
push
pop
sub
je
aas
scas
sti
enter
pop
pop
fcoms
insl
lock
and
pop
xor
mov
mov
xorb
mov
sub
outsl
in
lods
in
cli
push
ret
outsb
mov
xor
add
inc
out
add
js
and
inc
dec
ljmp
addb
cmpsl
sub
sbbl
test
in
and
rcrl
xchg
leave
fisubrs
outsl
sbb
xor
jae
push
subb
test
mov
loopne
out
cmp
cmp
imul
adc
shlb
mov
shll
cmp
mov
or
js
adc
pop
test
pop
pusha
mov
push
jae
inc
mov
inc
jmp
out
add
clc
mov
andl
pop
pusha
mov
push
cli
in
fs
fcoml
and
inc
jo
repnz
repnz
scas
mov
mov
or
dec
outsl
ljmp
lds
push
xor
mov
mov
or
mov
mov
inc
adc
inc
sbb
mov
decb
rcrl
gs
add
mov
fisubl
add
stos
sub
ja
sbb
fsubrs
pop
fstl
loope
mov
iret
fdivs
loopne
xchg
dec
jge
push
repz
or
inc
jo
insb
dec
jmp
out
fs
fs
add
mov
cmpsl
out
lods
and
in
push
push
sub
sub
push
or
neg
mov
cmp
ret
pop
xchg
sub
ss
fldcw
fildll
je
cmc
setp
mov
mov
cld
shll
and
mov
sub
jl
inc
outsl
ret
bound
inc
in
cltd
mov
ljmp
in
fucomip
lods
sbb
mov
xchg
cmp
wbinvd
ljmp
lds
fisttpll
cmp
cmp
add
lds
fucomi
add
sub
fisubs
mov
mov
push
mov
mov
popa
in
cmp
sub
mov
jp
decl
imul
xor
lret
pop
leave
jnp
in
sub
and
or
mov
ror
mov
idivl
dec
rcrb
arpl
sbb
fwait
aaa
jae
lds
pop
jae
sbb
addl
scas
mov
sbb
loope
pop
mov
decb
push
or
mov
add
or
push
and
addl
xchg
mov
adcl
adc
rorl
addr16
sbb
stc
push
mov
jns
out
lock
mov
aaa
xor
mov
mov
xchg
lods
xchg
out
lds
mov
mov
loopne
xor
inc
cli
es
jns
lret
lahf
test
stos
mov
push
dec
orb
xor
popa
pop
and
sub
jbe
inc
mov
mov
xchg
out
testb
xor
and
shlb
ret
push
loop
xchg
jbe
inc
mov
mov
xchg
out
testb
xor
and
shlb
mov
mov
loop
xchg
jbe
inc
mov
mov
xchg
out
testb
adc
and
shlb
ret
push
jecxz
xchg
jbe
inc
xor
cmpsb
lods
mov
sub
xchg
adc
cmp
sub
int3
int3
int3
int3
int3
insb
in
jl
dec
int
mov
sub
sbb
in
cld
pop
int3
dec
fdivrl
mov
jl
dec
int
mov
or
sbb
in
insl
pushf
cmp
dec
fdivrl
sub
pushf
inc
insb
pop
jl
dec
adc
cmp
or
sbb
inc
dec
cld
xor
jmp
push
pushf
xchg
insb
mov
or
inc
cmpsb
sbb
jb
hlt
add
sub
pop
adc
adc
pop
sub
xchg
scas
sub
pop
mov
add
int
push
ret
push
sbb
xor
outsb
test
je
in
in
xchg
dec
mov
add
dec
and
jae
adc
cmp
lods
cmp
orl
fnstenv
mov
ret
inc
sbb
or
cmp
push
mov
push
sbb
lahf
pop
adc
stos
pop
xor
sbb
mov
add
add
jo
fsubrl
xor
bound
cld
dec
cltd
imul
mov
jle
sbb
insb
mov
pop
pop
sub
cmp
or
sbb
in
idiv
sub
jge
jne
daa
mov
xchg
add
xor
jmp
mov
mov
movsb
sub
je
push
jle
dec
lods
cs
enter
fcomps
xchg
aas
mov
xor
xlat
je
dec
int3
xchg
and
sahf
cmp
sub
cmp
or
sbb
in
insl
cld
pop
int3
dec
fdivrl
mov
jl
dec
int
mov
or
sbb
in
insl
cld
pop
int3
dec
fdivrl
mov
xor
jb
rcl
sbbb
jecxz
ds
neg
lods
insb
mov
in
jmp
lock
nopl
pop
pop
xchg
test
insb
ret
aam
addl
ds
inc
insb
bound
repz
call
out
xchg
mov
hlt
rclb
push
data16
pusha
sbb
in
movsb
pop
fs
in
mov
adc
jl
push
dec
mov
inc
mov
rep
xchg
lahf
adc
dec
js
mov
or
das
jecxz
cmpsb
xchg
in
ss
aam
inc
rorl
or
push
jle
dec
cmp
or
scas
mov
mov
cmpsb
adc
orl
sub
or
pop
xchg
push
incl
popf
jae
and
or
sub
repz
mov
pusha
push
push
mov
lcall
add
call
movsl
fwait
xchg
aam
test
jne
addr16
mov
cmp
ss
rclb
outsb
mov
mov
outsl
or
mov
negb
dec
out
and
cmpsl
dec
fwait
jne
dec
mov
mull
clc
jnp
mov
js
xorb
inc
xchg
in
sub
mov
mov
xor
scas
inc
pushf
cs
push
sahf
mov
popf
mov
xor
aam
adc
int3
jle
mov
sbb
xchg
add
and
mov
push
inc
call
xor
lret
lea
push
jne
jge
mov
shrb
ss
add
dec
sbb
pop
leave
into
mov
cld
add
out
xchg
xchg
iret
cmp
inc
aas
sbb
jno
lret
jne
aas
dec
inc
mov
push
cmp
add
xor
pusha
fadds
push
lods
call
push
sbb
push
sub
sub
dec
inc
xchg
imul
and
or
fstps
mov
aaa
mov
sub
stc
push
and
mov
jo
xor
loopne
repnz
xchg
cmp
adc
ret
push
mov
xor
dec
dec
inc
xor
mov
cmc
shl
js
cli
popa
pop
ds
pop
scas
inc
or
or
pop
mov
outsl
push
das
inc
jge
testb
lds
negl
xlat
ror
xor
clc
xorb
mov
pop
rclb
jo
dec
dec
cmp
mov
stos
sub
add
sbb
inc
adc
sbb
cld
call
mov
dec
xor
vprotw
int
cltd
mov
push
pop
test
fwait
push
inc
xchg
movlps
hlt
push
cmc
mov
les
fsts
sbb
gs
mov
movsb
mov
outsb
or
mov
negb
lea
test
js
add
inc
dec
popw
mov
cmp
mov
push
push
add
mov
sub
inc
mov
hlt
sub
xchg
and
enter
jmp
mov
std
leave
push
std
sbb
or
fimull
std
test
and
push
cmp
push
jo
dec
or
pop
out
mov
mov
mov
mull
add
in
cmpsl
push
xor
stos
and
sar
sub
sbb
je,pn
sbb
add
notb
add
adc
scas
jp
pop
test
add
xor
xor
mov
xchg
das
cmp
out
lds
xchg
pop
push
cmpsl
ljmp
add
outsb
mov
cmp
pop
push
inc
fstpl
adc
cwtl
movsl
cmpsb
addl
inc
add
in
mov
test
cs
shll
in
adc
mov
sbb
inc
lock
mov
addb
push
pop
pop
arpl
mov
clc
xchg
mov
jnp
jb
loop
sub
cvtps2pi
pop
repnz
ret
xchg
mov
add
jne
test
outsl
lods
mov
mov
push
cmp
mov
in
popf
mov
pusha
sbb
shlb
hlt
ret
jmp
xor
popa
or
addl
mov
in
push
lahf
inc
adc
sarb
mov
add
dec
cmc
push
out
adcl
inc
enter
popa
mov
divb
aam
popl
pop
testl
les
xchg
mov
test
and
testb
xor
mov
sub
and
lcall
xor
ss
xchg
ret
clc
add
js
ss
mov
ljmp
xchg
gs
jae
jmp
pop
inc
lcall
test
popf
insb
clc
aad
jp
push
std
aas
mov
stos
outsl
fs
mov
sti
push
imul
es
divl
xchg
xchg
push
dec
ljmp
lods
lea
aad
lcall
cmp
dec
push
pop
aad
adc
mov
repnz
arpl
xor
scas
inc
lret
ja
cmp
gs
and
in
pop
jecxz
sub
xchg
pop
jmp
mov
outsl
scas
adc
pop
stos
push
jnp
lea
test
sub
shl
lahf
or
mov
push
or
cmp
fsts
sbb
dec
jb
xor
pop
int3
lock
lods
push
dec
push
adc
paddw
js
fistpll
ds
dec
cld
test
loopne
aam
ret
test
jg
or
jge
add
insb
in
push
cld
inc
scas
insb
dec
je
jns
jg
pop
xor
lods
add
nop
dec
adc
or
cld
fisttps
push
mov
incb
fnstenv
std
pop
adcb
inc
pop
dec
out
daa
lods
jbe
sub
scas
mov
dec
inc
xchg
in
xchg
pop
xlat
dec
ja
cmc
aam
in
and
xchg
xor
or
and
push
cmp
loopne
xor
or
xchg
ret
fsts
outsb
push
and
mov
dec
dec
js
or
stc
xor
ret
push
xchg
jae
xlat
and
enter
add
leave
mov
or
scas
pop
mov
int3
decb
cmp
int
hlt
aad
lahf
xchg
mov
push
sbb
adc
or
int3
jbe
dec
fisubl
push
fwait
pushf
mov
pop
fwait
in
push
fistl
add
scas
imul
ret
push
sti
mov
outsl
out
hlt
mov
imul
inc
inc
xchg
dec
lret
pusha
test
push
mov
push
data16
push
clc
lock
or
sbbb
xchg
loope
test
mov
repnz
jg
out
dec
popa
and
pop
xor
pop
jno
je
aad
rcrb
leave
out
lds
mov
push
sub
js
inc
jp
fisttpl
sub
push
lock
fistl
iret
clc
mov
xchg
xchg
movsl
xorl
ficoml
mov
sbb
ss
cld
inc
pushf
push
int
ror
mov
aas
push
sbb
pop
mov
xchg
mov
daa
mov
or
mov
and
jmp
sahf
shll
adc
fucom
and
xchg
int3
lods
xor
in
es
add
adc
cwtl
pop
mov
pop
pop
mov
in
stc
pop
or
jns
es
ret
addl
clc
xchg
pop
fwait
ret
mov
sbb
mov
or
dec
inc
sub
fidivs
xchg
ss
xchg
in
cmp
shlb
or
imul
dec
bound
push
loope
lret
inc
mov
and
loopne
sub
xor
mov
icebp
adc
xor
ds
push
fdivrl
insb
mov
and
into
aad
out
xlat
add
inc
ror
cmpsl
and
mov
jb
outsb
dec
leave
push
lods
inc
sub
dec
mov
scas
arpl
push
xor
stc
cmp
dec
int
dec
inc
loopne,pn
jg
jne
push
dec
mov
loope
pop
jmp
mov
aaa
push
mov
mov
rcrb
lds
stc
xchg
pop
jnp
dec
test
pop
dec
outsb
sub
lcall
scas
lea
hlt
enter
test
sbb
push
stos
rclb
xor
inc
push
sub
sub
addl
adc
test
in
add
lods
test
das
pop
or
jecxz
mov
pop
push
xchg
mov
and
sahf
clc
xchg
mov
mov
cs
pop
pop
pop
jb
sub
pextrw
pop
mov
inc
jo
out
jge
cmp
dec
out
or
xor
jbe
adc
pusha
sub
sub
mov
mov
andb
sbb
or
rclb
das
ds
cmp
sti
outsb
sbb
mov
sbb
lahf
mov
push
ljmp
push
popa
mov
insl
sub
add
sbb
push
outsb
sbb
inc
xchg
test
pop
popa
int3
dec
mov
repnz
jmp
out
rolb
push
xor
stos
adc
fisubrs
push
cmpsl
mov
enter
rcrl
fs
inc
incl
jp
pusha
ja
adc
rol
jne
popf
dec
jl
dec
addb
xchg
adc
mov
fistpll
jge
mov
jmp
test
jmp
lock
push
cmp
lret
js
mov
sbb
imul
sbb
mov
jg
and
jmp
or
adc
aam
cmp
je
adc
inc
mov
inc
out
in
rorl
aad
scas
adc
rcrb
push
mov
mov
or
push
div
leave
xor
mov
je
sbb
xchg
movsl
rcl
int3
cltd
add
loopne
dec
pusha
pusha
lods
out
adc
and
jmp
popf
dec
scas
pop
in
mov
inc
ja
adc
loop
mov
into
xor
xor
sbb
repnz
ljmp
in
jmp
sbb
jo
into
call
pop
mov
xor
xor
not
adc
lods
mov
fcmove
jge
leave
iret
inc
pop
ss
adc
pop
sbb
jmp
inc
push
out
cmc
fisubrl
imul
movsb
xor
mov
or
lahf
pop
or
inc
sbbl
or
mov
aas
inc
xor
scas
frstor
xchg
mov
andl
cmpl
sub
mov
stc
xchg
adc
insb
jge
cmc
call
pop
lahf
jnp
test
shlb
push
adc
shll
push
dec
mov
fs
dec
mov
mov
mov
cmp
adc
sbb
mov
pop
lret
lods
loopne
or
pusha
into
dec
scas
mov
mov
mov
sub
outsb
pushf
lds
and
xchg
test
sub
outsl
scas
mull
ret
filds
sub
cmp
cmp
adc
pop
jnp
stos
das
mov
lret
popf
fnstsw
in
lea
and
xchg
jnp
sbb
push
and
pop
sbb
popf
xlat
mov
ds
int
jp
xchg
les
xchg
jb
addr16
mov
mov
cmpsb
loop
mov
scas
jg
and
lds
in
push
hlt
fwait
inc
add
aaa
cld
cwtl
adc
push
add
jns
in
pop
jmp
shll
cmp
sbb
imul
push
mov
mov
pop
or
cmp
outsl
fistl
pop
mov
lea
js
ficoml
sbb
xchg
jb
xor
fsub
ja
out
adc
mov
push
fsubrl
ja
mov
and
mov
outsl
or
mov
fldenv
xchg
fs
sub
pop
inc
cmp
add
sbbb
or
xor
and
repz
pop
ja
push
jno
dec
or
ljmp
inc
cli
pop
leave
jmp
dec
jns
sub
dec
scas
jecxz
hlt
ret
mov
gs
scas
movsb
jno
movsl
test
paddq
xor
in
test
mov
std
jle
pop
xchg
into
jecxz
xchg
in
or
neg
fidivrs
les
xchg
int3
ds
and
push
mov
adc
popa
inc
sub
adcb
adc
int
and
roll
xchg
ds
arpl
cwtl
pop
xor
or
jle
test
cmp
loope
and
mov
jnp
add
sahf
xchg
je
lahf
bound
aas
mov
mov
mov
mov
mov
data16
cmp
inc
inc
adc
mov
mov
ret
out
cld
shll
add
lock
jns
mov
mov
fstps
js
int
lods
adc
push
jp
es
pusha
jecxz
xorl
das
call
sub
int
sub
dec
inc
pop
and
call
rclb
aam
pop
cmp
jge
dec
sbb
add
scas
pop
ja
add
fdiv
into
adc
divl
add
adc
mov
adc
int
cmpl
lods
test
xchg
sbb
jmp
incl
mov
leave
cltd
mov
jmp
add
popf
pop
lods
jecxz
popf
jbe
arpl
hlt
je
xchg
push
fisttpl
dec
mov
xchg
sbb
popa
jecxz
fs
aas
not
stos
and
jge
sti
mov
mov
adcl
sbb
js
fimuls
xor
pop
repz
dec
mov
mov
fists
push
xor
leave
jmp
xlat
mov
jmp
cmp
sub
jp
dec
mov
lds
fbld
push
enter
repz
add
in
and
enter
inc
xor
sub
xchg
or
pop
push
inc
sub
mov
insl
mov
xor
inc
js
and
in
pop
jge
nop
pop
or
push
scas
scas
xchg
cli
aaa
pusha
pop
cmp
xchg
push
adc
cmp
repz
cmp
mov
out
pop
xchg
pop
jae
insb
push
push
inc
dec
xchg
and
push
and
daa
mov
out
pop
or
outsb
pusha
out
cmp
lret
loopne
push
xchg
dec
xchg
jne
fbstp
sti
insl
mov
mov
ud1
push
aaa
lcall
jns
dec
xchg
int
cmp
jmp
sbb
enter
aaa
sbb
cs
fildl
stc
shrl
add
push
lods
jns
jb
pop
data16
cmp
and
mov
popa
sub
les
inc
pushf
repnz
cld
and
arpl
mov
jno
mov
lods
fstp
push
jle
ficomps
push
mov
js
sub
loop
jae
mov
push
mov
push
push
test
adc
hlt
pushf
pop
in
xor
push
gs
cmpsb
inc
nop
dec
mov
ret
or
pop
or
push
pop
stos
cmpsl
jle
popf
dec
jle
test
adc
inc
shlb
das
mov
in
ficomps
movsl
pusha
mov
ror
cmc
inc
mov
inc
movl
sti
sbb
hlt
sub
sbb
sub
xor
data16
sub
sub
arpl
lds
lock
push
fwait
xchg
cltd
sub
or
mov
push
cltd
adcb
xchg
mov
mov
mov
xor
mov
jl
push
iret
dec
daa
pop
test
arpl
push
les
popa
dec
or
dec
outsb
xchg
imul
inc
adc
xchg
or
xor
pop
jge
pop
adc
and
xchg
jle
cmp
mov
mov
test
add
adc
in
cmp
push
sbb
pusha
sub
dec
dec
test
and
adc
in
mov
mov
imul
not
pop
ret
xchg
das
xor
ret
out
push
fisubl
xchg
or
stos
inc
or
popl
or
rclb
mov
mov
insl
int3
aam
ficoms
fsubrl
mov
leave
push
fbld
push
daa
add
out
dec
movsl
hlt
test
xor
inc
pop
xor
push
out
cltd
out
pop
out
jg
inc
subl
mov
sbb
cld
idivl
lods
or
sbb
sbb
sub
popl
adc
in
adc
sbb
call
jnp
test
add
cmpsb
cmpsb
movl
jl
xor
jg
fwait
testl
add
inc
mov
pop
mov
or
push
mov
out
inc
popa
pop
pop
push
and
mov
cltd
xor
or
ljmp
ret
pop
icebp
stos
ret
xchg
and
aad
movsl
js
sbb
nop
movsb
pop
loopne
jge
lahf
cli
push
fcmove
push
dec
aaa
mov
out
lcall
and
iret
arpl
adc
push
cmp
xor
push
mov
cmp
mov
nop
inc
jbe
jo
jno
loopne
pushf
out
sub
pop
adc
add
sub
fcomps
pop
jp
in
scas
outsb
roll
outsl
jecxz
js
cld
lret
sub
jno
movsl
pop
add
and
adc
cli
les
fidivl
bound
xchg
into
pop
icebp
out
xchg
fdiv
test
jmp
ds
out
xor
mov
add
in
push
rcrl
pop
fxch
push
aaa
xlat
mov
jl
push
or
out
int
ds
dec
cmc
sbb
fnstsw
int3
and
out
addl
sbb
pushf
hlt
aad
lea
je
push
mov
xor
xchg
or
jle
fs
ss
int
dec
lcall
fcmovnbe
mov
and
cmpsb
jae
pop
imulb
cmp
pop
cmp
fst
lock
pop
add
jle
pop
or
inc
xchg
mov
mov
jo
ljmp
pop
mov
lcall
les
or
out
test
mov
sub
xchg
sbb
mov
stos
adc
add
arpl
xchg
push
lods
pushf
xorl
xor
shrb
test
push
movsb
pop
stos
fwait
stos
adc
into
push
cmc
out
xchg
fsub
sub
lret
lret
arpl
mov
mov
adc
lret
popf
aad
test
jl
fdivr
sahf
fdivr
mov
xchg
cmc
filds
dec
cmp
push
adc
popa
call
cld
in
cli
jae
sbb
les
cmp
jnp
test
sub
fdivl
sarl
inc
orl
push
lds
push
aas
stos
pop
xor
iret
cmpsb
sub
mul
pushf
cmp
pop
add
dec
dec
scas
in
mov
or
cmp
popa
and
xchg
pop
movsb
mov
aad
loope
pop
in
push
les
inc
rcll
cmp
fchs
dec
sub
sbb
pop
mov
loope
fidivl
cltd
mov
repnz
pusha
xor
hlt
and
mov
add
stos
insl
sarb
mov
inc
sarl
popf
call
mov
fidivrs
mov
pusha
and
jae
push
dec
cltd
cmp
add
repz
push
cwtl
jg
add
push
data16
je
mov
mov
sti
outsb
push
xlat
repz
mov
out
xlat
pop
js
dec
insl
fucomp
xchg
xchg
cmp
in
sbb
add
mov
xlat
mov
lds
jno
sbb
repz
push
in
fwait
xor
ja
fwait
and
fwait
rcrb
dec
push
shll
lods
jge
rcl
mov
add
sarl
jne
mov
shrl
mov
fwait
cmp
scas
mov
pop
jp
xor
mov
aaa
pushf
sub
stos
inc
into
aaa
loop
push
fistpll
ja
stos
fldl
sub
arpl
out
cltd
scas
sub
jno
cmpsl
insl
push
popf
or
xchg
push
call
push
push
imulb
shll
popa
jns
hlt
add
test
clc
mov
movsb
scas
adc
fsubrs
outsb
repz
mov
imul
cmp
adcb
mov
popf
push
aaa
or
jbe
outsl
mov
inc
adc
in
sbb
movhps
mov
lret
xchg
jo
shl
jbe
sarb
enter
push
xorl
and
mov
or
iret
mov
scas
mov
mov
or
mov
pop
lcall
daa
add
and
orl
arpl
pop
jae
test
sub
out
sub
enter
mov
add
mov
out
enter
mov
orl
pusha
adc
scas
movsl
aaa
insl
xchg
dec
addl
stos
test
ljmp
and
adc
inc
hlt
jae
rcl
hlt
insl
lahf
xchg
sahf
ror
fists
pop
fdivs
cmp
or
fwait
ljmp
dec
xchg
hlt
fdivrl
add
cmpsl
orb
mov
inc
fadds
shrl
daa
insl
xor
jg
and
jmp
cmpsl
scas
bound
push
xorl
cmp
fldcw
aad
rcl
push
sub
pop
ret
push
dec
sbb
adc
mov
lcall
mov
push
cmp
jmp
ret
pop
mov
into
push
jmp
xor
or
arpl
sar
pushf
adc
mov
stos
aas
repnz
iret
mov
dec
mov
int3
xor
mov
pop
ss
test
xchg
ror
outsl
sbb
jno
and
les
dec
rcll
stos
fdivrl
or
imul
lcall
out
bound
into
sbb
call
inc
outsb
sbb
ja
cmpsb
add
xor
add
inc
into
lcall
andb
je
pop
push
imul
mov
dec
pop
jnp
mov
xor
inc
das
jmp
notb
fidivrs
xchg
cmp
pop
rolb
stc
xor
sub
in
pusha
jmp
add
pop
repz
mov
cltd
add
stc
jns
daa
mov
push
mov
xor
jle
shrb
loope
add
pop
jge
and
or
jecxz
push
sbb
repnz
or
lret
mov
mov
dec
pop
pop
out
dec
mov
add
popa
aam
pop
incl
repz
inc
js
leave
xchg
push
jp
test
pop
sbb
mov
loopne
adc
jp
jecxz
push
mov
fdivs
inc
sar
push
sub
sbb
ljmp
fisubrl
frndint
out
std
sub
jl
dec
int
mov
or
sbb
in
insl
cld
pop
int3
dec
fdivrl
mov
jl
dec
int
mov
or
sbb
in
insl
cld
pop
int3
dec
fdivrl
mov
cld
mov
sub
mov
jge
insl
cld
lods
int3
dec
fdivrl
mov
pushf
jmp
dec
in
pop
mov
or
sbb
in
xchg
push
test
movsl
inc
loop
repnz
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
dec
outsb
scas
andl
lock
adc
xchg
or
ret
inc
out
mull
xchg
pop
andl
rcll
addr16
ja
xlat
adc
and
xor
popa
fisttpll
icebp
mov
dec
jmp
sti
cmp
inc
and
adc
popa
inc
xchg
aaa
call
int3
adc
arpl
and
cmp
sbb
xchg
jge
cmp
int3
inc
rcrb
mov
aas
dec
jnp
imul
and
aam
adc
jno
sub
outsb
pop
push
daa
out
mov
iret
xchg
rcll
dec
or
pop
lea
cmp
inc
adc
test
inc
shrl
mov
xchg
inc
icebp
test
test
xchg
inc
mov
dec
fimuls
aad
repnz
or
subb
inc
mov
mov
movl
xor
xlat
int3
mov
sbbb
mov
push
jmp
and
lret
mov
outsl
adc
inc
add
xor
mov
jno
xchg
pop
xchg
daa
mov
adc
addr16
add
cmp
jno
add
arpl
and
out
jns
fs
dec
scas
cmp
adc
jmp
cld
movsb
mov
add
mov
inc
and
add
shlb
push
shlb
add
ja
xchg
xchg
add
push
xlat
inc
out
mull
xchg
pop
andl
rcll
addr16
ja
xchg
xchg
add
push
xlat
inc
out
mull
xchg
roll
nop
push
dec
lods
clc
outsb
sahf
dec
mov
lret
das
pop
int
jl
ret
and
pop
fiadds
in
les
sub
outsl
push
inc
shll
sub
push
xchg
cmpsl
out
lahf
adc
xor
jle
adc
lcall
add
imul
das
mov
adc
xchg
xlat
pop
or
fcoml
add
xchg
push
mov
cmp
rorl
daa
sbb
cmp
dec
sub
and
or
mov
xchg
adcl
jo
add
fsubr
lret
or
aas
into
push
lea
sarl
cmpsb
dec
mov
push
sub
jg
sub
jmp
lods
adc
aad
push
dec
in
inc
fisubl
lcall
mov
shll
sahf
fwait
ja
aaa
cli
cmp
adc
pop
pushf
loop
hlt
or
lret
jo
adc
ja
fistl
popf
mov
je
sahf
pusha
or
mov
jns
xchg
and
shlb
xchg
loopne
jge
gs
rolb
push
imull
adc
mov
sub
inc
out
cs
ret
jge
sbb
leave
xor
pushf
push
mov
sbb
scas
jno
dec
orb
cmp
push
insb
xchg
cmp
sarb
sbb
xchg
jmp
xchg
dec
insl
push
inc
dec
mov
jmp
sbb
sbb
pop
pop
add
or
js
hlt
fcoms
xor
lret
fsubr
and
stos
out
cmpsl
xor
out
enter
dec
je
stc
mov
mov
pop
mov
cltd
repz
in
mov
lds
sub
jle
dec
mov
dec
and
mov
das
sub
lea
fisubrl
push
or
arpl
mov
xchg
fisubs
push
fnstenv
pop
out
std
push
fwait
push
mov
xchg
sahf
in
scas
pusha
in
and
les
fldt
mov
ss
incl
dec
dec
stos
ljmp
repnz
lret
dec
stos
sbb
cmp
loope
mov
push
lret
mov
enter
cld
pusha
jg
adc
loop
in
jmp
in
daa
xor
rcll
std
sbb
imul
call
push
loope
xchg
sbb
test
sub
sbb
cmpsb
mov
xor
notl
ss
mov
sub
rorl
sahf
jno
faddl
cmp
out
xchg
mov
add
jg
shrl
das
or
mov
leave
cmp
and
insl
stos
fnstcw
stos
fucom
in
ret
cltd
fistpl
dec
pop
outsl
cmp
and
xchg
adc
pop
das
jbe
lcall
xor
outsb
rolb
jae
enter
lcall
pop
addb
pop
sahf
push
fidivrs
push
imull
dec
movsl
call
sub
inc
cli
mov
lahf
add
or
clc
es
cli
iret
mov
xor
jle
push
in
xchg
leave
xchg
dec
dec
push
popf
shlb
mov
add
dec
fsts
push
daa
add
push
push
and
push
aaa
push
inc
jb
fbld
shll
fsts
xchg
shrl
cmp
adc
mov
pop
and
jbe
test
jno
cli
test
lods
js
xchg
das
insb
jp
stc
xorl
pop
mov
push
mov
enter
jge
add
jge
sarl
das
jno
xchg
lods
lea
xchg
sub
int3
jb
leave
js
imul
cli
popf
loope
mov
xor
pop
cmp
mov
dec
mov
mov
jg
jo
roll
sub
xor
pop
fldenv
cmp
cld
fidivrs
addr16
pushw
lahf
jecxz
mov
aam
sahf
or
inc
xchg
xchg
cmp
push
loope
insl
pop
fildll
and
ds
int
ds
loop
scas
test
fstp
or
enter
std
adc
int
or
dec
push
rcrb
dec
add
jae
mov
ror
test
in
inc
xor
pushf
imul
lcall
dec
sbb
mov
xor
das
jp
and
add
insb
scas
into
mov
lea
pop
test
or
ljmp
js
mov
adc
adc
push
rcrl
xchg
pop
lahf
xor
push
daa
and
xchg
jg
dec
sub
dec
push
push
es
das
call
mov
testb
mov
ss
arpl
xor
sbb
lahf
out
test
rolb
jmp
xor
push
xor
dec
mov
int3
dec
roll
adc
xor
test
mov
rorl
daa
movsb
cli
add
popa
push
fdivr
dec
scas
data16
jae
adc
test
dec
nop
int3
sub
add
pop
icebp
jp
xchg
inc
arpl
xchg
and
xor
push
mov
add
stos
popa
dec
shr
lods
push
call
push
pop
stos
dec
jns
enter
inc
decl
pop
ret
mov
push
inc
dec
adc
and
arpl
aad
or
js
lret
and
xchg
xor
jb
cmp
xchg
rcr
arpl
mov
lds
cmc
mov
jae
jno
sub
imul
test
pop
adc
movsb
loop
cld
mov
pop
xchg
inc
lods
pop
pop
and
push
andl
xor
cli
fcompl
incl
mov
mov
and
lock
mov
pop
sbb
push
jb
fwait
sub
sbb
add
subl
add
daa
int3
mov
push
pop
sbb
cld
sbb
inc
imull
ljmp
cmp
mov
es
insb
xchg
lea
movsl
ds
xor
lods
mov
and
jecxz
lahf
stos
call
fcmove
rorl
or
leave
dec
xor
xor
jge
arpl
pop
lea
xlat
out
ss
mov
clc
insb
sbbl
fsubl
jle
push
movsb
js
dec
mov
add
data16
push
and
and
or
jp
push
xchg
mov
pop
adc
outsl
outsb
les
pushf
lcall
push
addr16
ss
fxtract
sbb
add
das
push
lea
movsb
pop
push
adc
into
pop
ljmp
mov
sbb
dec
cmpb
shl
adc
inc
adc
je
push
imul
lcall
repz
mov
adc
mov
push
ds
jns
scas
ficoml
mov
jno
roll
xchg
shrl
add
adc
inc
lods
aam
add
js
jmp
add
in
insb
sahf
pushf
mov
add
pop
adc
daa
inc
inc
pop
rorl
mov
push
stos
cmp
inc
inc
std
pop
add
pop
xor
hlt
int3
lret
add
ljmp
or
xorb
mov
or
outsb
or
mov
out
out
lret
test
dec
inc
cmp
jns
fadds
mov
sar
fnstenv
lea
int
outsb
xorb
lods
bound
fwait
inc
cmpsl
cmpsb
repnz
ss
sub
mov
mov
ret
add
push
cld
pop
aad
rep
push
call
aam
pop
movsl
into
ja
loopne
or
mov
dec
dec
and
incl
lret
inc
movsb
add
mov
movsl
pop
mov
jbe
push
ja
sub
push
cmc
pop
jmp
sbb
dec
xor
mov
inc
mov
fstp
add
scas
inc
cmpsl
lahf
lcall
add
sub
add
pop
xor
out
or
jp
mov
out
test
jne
or
adc
lret
mov
out
loope
mov
xchg
mov
mov
adc
jno
int3
mov
inc
daa
xor
lret
pop
out
orl
adc
mov
orb
sub
jne
xorb
test
mov
stos
icebp
inc
jg
call
inc
xor
mov
jmp
mov
aad
fdiv
mov
shrb
ss
loope
mov
or
sbb
sbb
in
sub
mov
stc
or
mov
or
mov
inc
pop
std
aaa
xor
pop
es
dec
mov
push
push
inc
pop
and
pop
bound
sar
sub
cltd
dec
adc
cmp
sbb
pop
pop
add
divb
push
and
inc
ret
push
cltd
xchg
push
out
mov
imul
js
lahf
nop
hlt
movsb
int
lcall
pop
and
push
fmull
sub
jg
call
fistpll
sbb
outsb
adc
orl
fstl
cwtl
dec
inc
fidivs
cmpb
imul
add
cld
mov
xor
popw
into
popf
das
and
in
jmp
jle
repnz
testl
mov
ror
lock
aas
mov
insl
push
in
aas
mov
aaa
xchg
loop
addr16
add
adc
ret
push
aam
dec
outsl
push
xlat
mov
push
jns
out
cmovbe
xchg
mov
enter
jno
cmp
jecxz
hlt
mov
lods
mov
loope
mov
js
loop
and
mov
xchg
leave
pop
mov
sub
leave
and
sub
xchg
adc
mov
int3
dec
rolb
adc
in
inc
xchg
xorb
mov
subl
inc
mov
inc
cwtl
movsl
ficomps
adc
mov
popf
mov
test
xor
sbb
mov
and
mov
cmp
or
in
sahf
push
pop
loopne
in
jg
dec
ret
xor
ror
pop
clc
std
and
enter
or
adc
lock
jle
add
push
int3
fwait
stc
and
outsl
std
mov
push
jecxz
xor
dec
mov
mov
in
cmp
mov
js
cmpsl
aas
insl
nop
mov
fcmovnu
in
xor
loope
xlat
popf
pop
or
mov
push
push
jbe
dec
pushf
rcll
in
pop
enter
loope
loop
aam
int3
rorl
or
and
call
test
jbe
test
shrb
push
adc
xchg
adc
std
inc
mov
cmpsl
lock
cmc
push
inc
cld
aas
inc
lea
push
mov
icebp
and
xor
rol
push
call
xor
scas
push
out
rol
mov
jp
cmp
in
in
sbb
data16
push
fwait
xchg
adc
out
lret
call
adc
arpl
dec
ror
pop
xchg
and
inc
insb
aad
sbbb
add
test
jecxz
cmp
mov
push
add
lcall
pop
push
ja
push
andb
pop
insb
jnp
js
fwait
in
icebp
addr16
mov
arpl
loope
mov
inc
dec
cmp
cmp
mov
add
repz
mov
es
clc
es
aad
jns
andl
jbe
dec
xchg
popa
movsl
ds
in
in
movsl
fisubl
add
in
movsl
add
cli
outsb
out
add
test
dec
shlb
leave
dec
stos
gs
add
push
mov
into
mov
jo
pop
jno
test
mov
pop
vmovups
int3
repz
push
xchg
inc
data16
mov
mov
pop
pop
mov
idiv
bound
cmpsl
mov
mov
mov
aad
push
sbb
sub
add
in
adc
popa
pop
outsb
sub
push
xchg
mov
mov
andl
ljmp
leave
mov
push
adc
jae
fnstenv
mov
pop
adc
repnz
xchg
cmp
imul
and
lds
sbb
aaa
mov
xor
adc
mov
jbe
mov
xor
sti
add
rorl
jge
mov
push
dec
sbb
mov
push
dec
jno
lods
mov
jne
rcrl
pop
out
cmp
insb
repnz
inc
push
dec
mov
std
std
cli
popf
mov
mov
outsl
bswap
mov
sub
data16
sbb
sub
imul
iret
add
push
lcall
mov
dec
push
jno
mov
js
xchg
pop
subl
push
xor
leave
es
add
int
jno
into
je
js
movsb
inc
xchg
jg
xlat
or
lret
or
or
mov
notb
mov
sti
xorl
inc
aad
push
pop
das
mov
sahf
das
lock
in
sysexit
mov
inc
pop
scas
mov
cmpsl
sub
call
xchg
push
push
das
je
sub
pop
adc
imul
cli
cld
cmp
xor
ficoms
popf
addb
inc
stos
ljmp
in
ficompl
outsl
push
and
add
mov
sbb
pop
ficompl
mov
rorb
jmp
jl
push
push
cmp
pop
push
std
jmp
imul
aam
daa
popf
loop
in
adc
dec
lds
or
fsubrp
mov
push
or
mov
xor
and
out
add
xchg
call
xchg
lahf
sub
aam
leave
xchg
pop
mov
add
frstor
loopne
inc
mov
pop
into
aam
cmp
pop
mov
idivb
sub
mov
es
orb
push
iret
adc
test
fmull
mov
pop
outsl
and
cld
or
and
fwait
out
call
jp
cmpsb
xchg
fcmovne
adc
cmpsl
ret
push
in
adc
jae
sub
in
inc
mov
lea
dec
mov
mul
cmp
mov
xor
sbb
cmp
jnp
fisubs
es
or
subb
mov
sbb
cmc
daa
dec
xorl
nop
nop
rorl
cmp
data16
xchg
bound
sbb
sub
mov
movsb
add
xor
mov
adc
lods
pop
or
inc
lds
hlt
and
test
pop
or
xchg
sbb
loop
sti
push
jmp
dec
rcr
and
test
inc
popf
or
ds
addl
shll
sub
dec
pop
rorb
fisubrs
sub
cmpsl
jle
mov
pop
mov
loop
aaa
sbb
dec
lock
dec
add
je
push
pop
je
lods
aad
mov
test
hlt
fwait
pop
pusha
ficompl
les
lock
dec
and
and
loopne
mov
sub
xchg
xchg
cmp
movsb
cmpsl
ror
inc
add
jge
shll
pop
jns
push
rcll
mov
inc
xor
outsb
jne
cmpl
adc
and
push
ret
and
ficomps
and
xchg
dec
in
call
xor
loopne
insl
xchg
inc
xor
sti
add
fisubs
jne
cmpsb
pushf
mov
mov
cmp
push
xchg
rcl
roll
popf
mov
cmp
add
inc
and
cmp
pusha
aas
jnp
pop
inc
fidivrs
mov
fildl
divb
aam
iret
fs
sbb
mov
fbstp
add
sub
cmp
sbb
sbb
cmp
push
cwtl
mov
pop
mov
and
pop
cmc
stc
data16
xor
jecxz
lret
xchg
sbb
cmp
js
pop
test
jb
in
dec
xchg
or
scas
or
adc
cmp
and
rolb
rcrl
pop
call
aad
stos
js
inc
mov
push
sbb
popf
addr16
sub
inc
xchg
sub
imul
inc
adc
insb
dec
jae
or
cmp
lret
mov
mov
xor
mov
or
or
sub
cmp
lods
mov
mov
inc
jecxz
push
mov
adc
jl
xor
lods
notb
pushf
mov
mov
rorb
ret
ret
jo
xchg
jle
adc
nop
inc
jne
pop
bound
add
cmp
enter
rclb
stc
mov
xor
dec
loope
adc
mov
in
pop
cmp
and
and
mov
mov
or
mov
lods
out
hlt
or
mov
mov
cld
push
mov
shrb
xchg
pop
pop
mov
adc
lods
pusha
jp
pop
or
lea
faddl
mov
rclb
inc
out
or
scas
push
xlat
lret
add
in
adc
ret
push
pop
sbb
push
and
and
and
ret
push
test
ljmp
iret
inc
and
sti
stc
or
adcb
push
cmp
sub
scas
aad
pop
sahf
or
push
ds
cmp
mov
cmp
stos
repz
mov
cld
pop
cmpsb
pop
shrb
adc
xlat
mulb
push
repz
clc
outsb
mov
lock
mov
notb
or
daa
or
insb
fsub
icebp
jg
mov
aas
scas
push
pop
xchg
into
arpl
push
cmp
fidivs
push
inc
jb
inc
mov
fsubp
pushl
adc
pusha
adc
sub
rep
jb
jno
adc
bound
out
scas
mov
es
jb
jp
cltd
pop
mov
icebp
loopne
test
cmpsl
aaa
movl
sub
sbb
sub
or
mov
andb
xor
inc
sti
jge
shl
test
xchg
jno
jl
ds
jl
mov
hlt
clc
ja
dec
and
pop
in
sbb
mov
cmp
pop
mov
hlt
adc
scas
dec
dec
xor
sti
scas
aad
mov
jnp
mov
jge
rorl
jns
mov
push
out
or
not
loop
pop
xlat
out
loope
adc
mov
push
mov
add
pop
fisttpll
jl
add
xchg
iret
add
out
aaa
in
scas
dec
inc
pop
std
sub
mov
xor
mov
jecxz
push
pop
jg
sbb
pop
xor
sub
pop
ret
and
hlt
flds
fcmovu
jle
push
ja
and
jne
adcb
push
jge
mov
xor
stos
iret
popa
loope
and
adc
xor
jae
inc
loope
pop
xchg
jecxz
ja
sub
add
push
dec
fidivs
sub
ret
rorb
jo
xor
jb
dec
arpl
lcall
pop
fistpll
push
pushf
out
popf
fisubs
or
cs
mov
push
popf
and
aad
mov
or
or
idivl
insb
mov
sbb
gs
and
ja
lret
lock
xchg
enter
jecxz
xor
sbbb
sbb
add
jae
xor
in
rsqrtps
lcall
xor
mov
mov
mov
frstor
jae
inc
push
in
push
stc
lret
lods
jmp
popl
in
mov
rol
pop
sarl
roll
nop
pop
add
or
cmp
xchg
mov
lock
xor
scas
bswap
andb
sbb
push
fxch
mov
and
xchg
dec
add
xchg
das
xlat
movsb
shrb
push
xchg
jp
jl
mov
xor
xlat
loop
jl
jnp
xor
aas
and
jmp
je
mov
imul
cmp
pop
les
jle
jo
jp
sbb
popf
data16
cli
sbb
inc
sbb
sub
data16
push
lock
fidivrs
push
notl
repnz
movsb
ret
mov
imul
cli
rorl
icebp
push
or
hlt
aaa
int3
jns
dec
cs
out
jb
fs
or
add
scas
push
xchg
mov
dec
sub
jnp
ljmp
push
out
sti
and
in
cltd
and
jae
or
pop
xor
lea
pop
xchg
adc
sub
sub
fcoml
xlat
out
xlat
xor
xchg
pop
pop
lcall
je
jae
iret
jb
adc
push
fcmovnb
cmc
jmp
xchg
dec
mov
push
xchg
loope
sub
inc
into
mov
jecxz
fidivl
movsb
adc
loop
fidivrl
sub
jle
aam
es
jle
movsb
mov
loop
ljmp
jno
out
lret
push
jb
hlt
jge
push
dec
mov
rorb
or
stc
xor
sbb
sub
call
repnz
cmp
daa
sub
adc
sub
daa
cmp
popf
and
sbb
ss
sub
push
loope
fistps
sti
aam
leave
pop
xchg
ds
ss
imul
jne
adc
xchg
xchg
loope
pop
mov
popf
mov
or
ret
out
cmp
dec
subb
mov
ljmp
mov
inc
arpl
mov
cs
rcll
push
lcall
xchg
fistpll
hlt
xor
out
daa
jns
sub
and
cmp
mov
mov
add
or
jo
xor
lods
nop
xchg
shll
aad
xchg
out
dec
and
out
outsl
push
cmc
xchg
mov
adc
movsb
xchg
mov
cmp
fistpl
push
dec
sub
mov
sbb
test
jne
pop
cld
addl
mov
pop
xor
int
mov
inc
xor
rclb
add
inc
aas
sub
pushf
sti
sbb
and
adc
jae
out
add
pop
cmp
out
out
push
lahf
xlat
pop
cmp
jo
repnz
loopne
sbb
cltd
pop
imul
icebp
or
outsb
jecxz
and
push
and
cmpsl
add
xor
insl
data16
mov
add
cmp
xor
insb
fisubrs
fcmovnu
xor
mov
add
fadds
in
ficomps
fadds
jmp
inc
fsubl
loop
lahf
fistpl
and
fwait
xor
mov
outsl
popa
cmpsl
std
mov
stc
lret
fwait
repz
dec
loope
sbb
cmp
daa
sbb
jecxz
das
pusha
jge
pop
popa
xor
mov
push
push
ret
repnz
push
sbb
push
addb
mov
mov
ljmp
shrl
cmp
pop
cld
jg
dec
mov
xchg
or
lret
clc
mov
outsl
xor
daa
mov
mov
addr16
ja
xchg
xchg
add
push
xlat
inc
out
mull
xchg
pop
andl
rcll
addr16
ja
xchg
xchg
add
push
xlat
inc
out
mull
xchg
adc
aaa
mov
mov
addr16
jbe
adcl
add
push
into
inc
jecxz
popa
pop
xchg
cmp
inc
roll
addr16
mul
xchg
push
push
mov
pop
mov
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
jp
cli
mov
ret
adc
mov
cmpsb
jp
dec
jb
push
sub
cmp
sbb
sbb
ljmp
shrb
sbbb
sub
push
sub
xor
add
adc
inc
cli
xor
pop
fisubl
mov
push
sub
aas
and
push
push
sub
jbe
cmpsb
cli
mov
xchg
mov
jno
test
lea
or
pop
std
xchg
pop
mov
mov
sub
add
insl
pop
popf
test
xlat
aaa
lds
mov
pop
outsl
mov
stos
lds
xor
jb
leave
push
sub
inc
movsl
lods
xchg
sar
into
mov
pop
aad
loop
repnz
subb
pop
jp
mov
push
lret
mov
pop
xor
setns
iret
sub
mov
outsb
add
and
jns
push
daa
push
in
adc
pop
add
jb
jb
pop
xchg
xchg
xor
pop
dec
cmp
out
sbb
outsb
cli
ror
mov
shrb
sbbb
dec
inc
pop
outsb
sub
cmp
or
sbb
sahf
loop
popf
cmpsb
scas
xchg
mov
int
call
add
enter
xor
jbe
addr16
jnp
movsb
mov
mov
mov
loop
cmp
pop
pop
xor
aas
bound
dec
xor
add
adc
out
mov
xchg
push
jp
dec
inc
pop
push
sub
cmp
or
sbb
ljmp
shrb
sbbb
dec
inc
pop
push
sub
cmp
or
sbb
ljmp
cmp
lds
rcrb
dec
in
loopne
es
mov
rcl
inc
mov
and
sub
jge
mov
mov
fadds
sbb
out
mov
pop
sbb
inc
mov
or
cmp
movsb
push
loop
mov
xor
sbb
sub
jae
pop
inc
add
scas
xlat
stos
arpl
jae
push
push
pop
cmp
or
sub
cmp
insl
insl
loopne,pt
sti
shlb
adc
add
mov
fwait
stos
mov
dec
clc
inc
push
bound
xor
ljmp
hlt
int3
jns
mov
mov
cmc
push
xchg
add
iret
hlt
jmp
ja
pop
aaa
imul
in
shrl
imul
inc
sub
mov
sub
lea
arpl
outsl
add
cmpsl
push
jmp
inc
add
xor
mov
push
mov
xchg
inc
add
adc
push
mov
jmp
movl
fucomi
mov
lock
je
arpl
faddl
les
data16
mov
xor
mov
gs
mov
stos
jae
mov
dec
test
adc
jecxz
mov
insl
lock
mov
inc
pop
mov
push
jo
cli
xchg
out
cmpsl
mov
dec
sub
mov
in
push
ret
cli
cli
pop
imul
sub
ljmp
pmullw
bound
jo
pop
loop
jecxz
test
popa
dec
adc
and
stc
or
sub
imul
jg
mov
sahf
in
ljmp
in
daa
push
sbbl
push
mov
xor
arpl
out
stos
inc
mov
bound
pop
mov
sub
fisubrl
mov
mov
aas
mov
scas
nop
push
fcom
loopne
mov
addl
xchg
mov
xchg
lods
or
or
outsl
or
lds
mov
incb
sub
cmp
in
cmp
mov
add
jae
imul
add
cltd
xlat
jb
jmp
les
push
or
xor
int3
sub
test
outsl
xchg
js
shr
xlat
cmp
pop
jl
div
cli
mov
jno
in
jbe
ficomps
inc
sub
sub
test
push
mov
xchg
addb
mov
sbb
bnd
inc
pop
rorb
aad
jmp
rcll
ljmp
xchg
je
shrl
cltd
jno
mov
mov
shl
dec
shr
cmp
dec
test
in
es
loope
clc
sub
and
push
lea
js
cs
aam
push
jle
pop
pushf
or
sub
sub
jnp
cmp
adc
jecxz
out
push
imul
add
scas
add
inc
sbb
sub
cmp
int3
jo
dec
lret
cmpsb
mov
jne
test
or
dec
mov
mov
inc
adc
and
jnp
or
dec
fnstcw
in
aaa
subb
addl
mov
dec
jp
lock
mov
xor
and
pop
jne
lret
sbb
pop
dec
fstpt
or
aas
ss
es
loope
xchg
xchg
roll
sbb
dec
inc
xor
and
enter
mov
cmp
sub
ret
int3
pop
rcl
xlat
inc
pushf
add
mov
out
lods
and
adc
pop
pusha
xchg
stc
pop
stos
sahf
cmp
mov
dec
dec
inc
cmp
ret
adc
push
or
ret
clc
sub
test
cmp
push
mov
std
cmp
int3
es
and
out
dec
or
shlb
cmp
jne
in
pop
jl
loope
pop
and
cli
mov
in
bound
push
mov
sub
stc
push
jg
popa
mov
mov
and
lds
cmp
clc
jbe
push
into
mov
push
xor
in
jle
xchg
and
in
sbb
mov
mov
mov
push
ss
gs
push
cmpsb
cmp
inc
sti
vdivsd
adc
scas
sub
adc
stos
mov
es
cmp
sarl
sub
lahf
pop
adc
and
shlb
pop
mov
sub
push
adc
push
cmp
popf
call
out
stos
ret
dec
pop
in
mov
adc
lahf
or
xchg
inc
outsl
fimuls
jmp
inc
xor
add
jg
pop
es
mov
ss
cmp
push
lea
mov
jecxz
inc
loop
or
shl
push
or
jbe
push
sar
ret
mov
movsb
inc
fidivrl
xlat
rcr
or
test
insb
mov
lcall
dec
cmp
es
sub
movsl
and
loopne
pop
out
dec
push
nop
pop
xchg
push
inc
and
loop
mov
or
inc
cwtl
popa
mov
push
sub
mov
scas
enter
fistpl
repz
sbb
mov
jg
add
xchg
out
mov
mov
jg
or
xchg
je
loop
sbb
sti
sub
add
nop
sti
jno
sub
push
jge
jmp
pop
xchg
jb
sbb
jl
dec
add
adc
push
mov
push
xor
adc
lret
nop
xor
ret
sti
xor
fwait
mov
lds
lahf
and
shll
lods
in
cmp
pop
into
mov
loope
and
inc
icebp
lret
pop
inc
aad
lock
mov
shl
dec
loope
idivl
sub
das
addl
fstps
lcall
cmc
repnz
aaa
movsl
cld
imulb
test
push
mov
cli
sub
dec
xor
pop
fimuls
xchg
aaa
pop
mov
mov
je
hlt
push
sub
cvtps2pd
push
aad
fdivrl
dec
pop
sbb
inc
mov
xor
mov
dec
call
scas
xor
mov
in
mov
xchg
outsl
adc
mov
fdivrp
popf
loope
mov
mov
lret
xor
xor
and
jecxz
push
jmp
mov
test
push
lds
dec
cmp
in
sahf
push
and
leave
mov
xor
jp
sbb
int
and
mov
mov
and
imul
jge
pop
push
pop
dec
xchg
inc
lock
dec
sarl
ss
xchg
mov
mov
mov
lcall
mov
adc
inc
scas
andb
push
rol
ss
xchg
pop
lock
fildl
movsl
xchg
push
scas
sub
repz
mov
jge
add
mov
les
fsts
in
mov
fisubs
inc
loope
icebp
add
sbb
sbbb
cmp
pop
imull
add
leave
sbb
pop
mov
clc
sub
sbb
cltd
pusha
add
es
pop
mov
in
icebp
jb
int
mov
jne
out
and
out
adc
push
out
movsb
cmp
insl
dec
cmp
js
sbb
mov
mov
inc
mov
out
sub
push
jbe
mov
mov
faddl
mov
mov
andb
daa
dec
addr16
xor
stos
sbb
mov
xchg
sub
rcrb
mov
fs
sbb
mov
insb
inc
dec
fdiv
mov
sbb
daa
xlat
push
mov
jno
xchg
popf
mov
add
jno
aam
divl
jge
sbb
jl
jae
xchg
loopne
jg
push
pop
mov
es
mov
movsl
js
mov
mov
push
add
xchg
push
adc
mov
jecxz
in
push
stc
ds
sbb
add
xchg
addr16
stos
sbb
add
cld
dec
adc
push
pop
lea
dec
icebp
mov
addr16
out
scas
mov
int
mov
notl
jns
pop
arpl
int
cmpsb
cwtl
xchg
add
bound
pop
sbb
xchg
popf
out
cs
repz
or
pop
or
stos
and
rcrb
sbb
jl
js
addl
in
adc
sub
and
mov
mov
insl
jo
sahf
enter
loopne
jmp
pop
out
cmp
or
sbb
roll
scas
in
cmp
push
xor
lea
fnsave
jae
sub
mov
xchg
push
stc
sub
fs
or
cmp
pushf
inc
ficomps
xor
jnp
iret
icebp
sbb
and
adc
inc
repnz
ret
inc
jmp
or
fnstsw
test
testl
lods
out
mov
adc
or
sbb
repz
cmp
fmull
adc
fs
fisubl
sub
cmc
push
pop
or
fwait
int
sub
pushf
ss
nop
mov
fs
or
mov
or
mov
mov
icebp
mov
out
call
in
jmp
fdivrp
gs
xchg
push
ror
pop
push
and
xor
push
push
add
jno
mov
cmc
xchg
xchg
jo
mov
fstl
cmpsb
jg
or
shrl
sbb
mov
fst
ss
insb
xchg
or
pop
jmp
jge
mov
adc
ja
mov
rol
pop
and
out
fidivl
into
dec
xchg
out
sbb
out
xlat
pop
add
xchg
int
add
adc
mov
push
sti
dec
ret
xchg
or
scas
adc
adc
out
das
jnp
stc
lret
js
and
pop
push
mov
jge
loope
xchg
aad
movsl
lock
adcb
mov
sub
into
iret
je
mov
push
hlt
into
faddl
pop
inc
ror
rcrb
xchg
jecxz
xchg
mov
cmp
pop
or
push
nop
and
in
add
jle
icebp
enter
mov
fs
jg
jnp
or
jo
fdivrs
sbb
test
mov
imul
dec
cmpsl
nop
out
lret
clc
mov
mov
hlt
int
addb
jbe
pop
insl
cmpsb
fs
call
ss
xchg
jo
add
lea
dec
imul
pop
pop
lea
add
jne
andnps
cmpsb
or
push
jle
fildl
mov
and
inc
xor
loopne
jl
daa
lahf
pop
outsb
dec
inc
add
mov
daa
sub
ljmp
pop
ja
fldt
cmp
mov
jl
sbb
mov
ficoms
imul
inc
je
or
xor
ror
mov
mov
adc
xchg
cmp
cmp
cmp
sbb
xchg
push
into
jb
push
stc
and
mov
xchg
xor
stos
mov
dec
das
sub
jle
push
mov
mov
cmpsl
mov
int
and
jns
ja
jne
fcompl
addr16
lods
mov
mov
inc
test
insb
js
cwtl
mov
fnstcw
insl
push
fs
push
andb
into
add
popf
mov
mov
sbb
dec
ljmp
sub
jbe
aam
push
rolb
je
rclb
add
negl
insb
bound
mov
popa
jae
js
icebp
test
ret
lds
mov
and
adc
inc
xor
or
cmp
push
es
push
outsl
push
sti
inc
mov
ror
sahf
jnp
sub
xchg
ljmp
xchg
pushf
xchg
push
sahf
and
inc
leave
cltd
stos
jl
inc
mov
sbb
lods
or
sbbl
mov
jp
mov
add
out
pop
cmp
in
xlat
sub
adc
pop
mov
jnp
cmc
sub
pop
jbe
xor
sbb
mov
adc
mov
sti
cmp
arpl
sbb
enter
mov
mov
jge
push
scas
or
je
loopne
int3
and
xchg
pop
push
clc
xchg
sub
mov
rcll
jne
push
push
push
ret
bound
inc
test
push
dec
movsb
xchg
jmp
mov
js
add
js
sbb
sub
add
repz
jb
mov
mov
cmp
loop
jle
mov
inc
arpl
mov
pop
into
dec
les
cmpsl
and
into
out
fbstp
mov
or
rol
sbb
pop
cmp
mov
test
mov
je
ret
in
cwtl
aam
xor
hlt
shlb
mov
lods
test
fildll
lahf
into
js
jnp
dec
and
mov
sub
dec
or
jno
bound
or
mov
or
lret
clc
push
pop
out
fcomps
out
jmp
jmp
pop
sub
cld
scas
test
sub
out
add
outsb
das
repnz
addl
sbb
mov
xchg
int3
hlt
pop
mov
sbb
push
sbb
std
dec
cwtl
mov
ds
dec
testb
imul
out
xorl
mov
arpl
sbb
stos
loopne
or
loope
xchg
loopne
hlt
data16
cmp
outsb
in
repnz
push
lret
cmpsl
xchg
sub
adc
sbb
enter
cmp
cmp
add
mov
das
mov
xor
loopne
inc
lods
xor
sbb
xor
xchg
into
mov
lret
lods
inc
and
adc
or
adc
cmp
inc
mov
mov
xlat
add
pop
mov
mov
lcall
dec
cmp
call
jge
iret
out
jbe
adc
and
inc
dec
cmp
mov
ljmp
mov
stc
and
sarl
jle
jp
cwtl
pop
imul
out
mov
xchg
js
leave
jo
daa
lock
pop
mov
dec
or
addr16
in
shll
mov
outsb
adcb
cmp
xchg
subl
pop
rcrb
xchg
push
aam
push
jecxz
adcl
stos
repz
int3
dec
push
ss
sbb
data16
inc
mov
icebp
test
shll
mov
mov
xor
pusha
cmp
call
mov
lret
xchg
mov
orl
sbbl
inc
mov
cltd
hlt
imull
test
enter
xchg
mov
testl
test
sti
out
jmp
mov
inc
sub
int
xacquire
xor
pop
jbe
fnstenv
mov
fdivs
enter
jns
xlat
fsubrp
popf
mov
xchg
imul
icebp
or
push
in
mov
dec
cmpsl
and
dec
fs
mov
xchg
test
pop
pop
ja
push
hlt
es
pop
ret
sysenter
cmpsb
sar
mov
mov
or
pop
rolb
sub
xor
enter
push
xor
dec
jae
fcomip
dec
pop
xor
jge,pn
fbld
pop
xchg
mov
and
rcrb
mov
lret
push
pop
fmull
pop
dec
data16
pusha
xchg
aaa
imul
mov
mov
xlat
and
inc
pop
jmp
sub
add
push
stc
inc
cmp
pop
cmpsl
cwtl
dec
ret
dec
xchg
adc
testb
shl
leave
nop
pop
xchg
mov
in
packsswb
imul
add
cmp
imul
ficoml
fcmovnb
jmp
cmpsb
adc
lahf
cmpsl
xchg
std
xor
fimuls
mov
aam
jbe
cmp
fstpl
dec
lret
push
mov
mov
repz
scas
jle
sbb
pop
ret
mov
xor
push
add
das
bound
data16
inc
test
cld
or
push
shlb
into
test
xchg
sbb
insb
inc
stc
dec
jle
pop
mov
insb
pop
ss
arpl
repz
push
mov
or
xor
int
cld
jo
test
fmuls
jnp
sbb
pushf
mov
mov
out
loope
lods
out
jne
insb
cpuid
mov
push
push
xchg
inc
sahf
cmpsb
or
cmpsl
lret
hlt
pop
js
fs
int
and
pop
sbb
aad
sub
cmc
push
fwait
xor
dec
ja
enter
push
ret
cmp
mov
add
std
aam
movsb
scas
sub
fs
call
out
andb
mov
test
movsb
mov
mulb
sbb
cmp
push
adc
lods
pop
aas
mov
mov
int3
dec
lds
mov
ss
mov
data16
out
out
add
bound
jecxz
loop
dec
or
adc
fistps
jge
inc
push
sbb
jmp
in
pop
shrl
jb
nop
aaa
sub
jne
mov
lods
lods
cmpsb
sub
sub
loop
lret
adc
mov
mov
cmc
jle
jo
mov
adcl
lret
xchg
cwtl
sub
and
mov
push
fwait
adc
inc
mov
push
sbb
or
repz
inc
mov
dec
rclb
dec
and
rep
or
and
add
inc
lret
ja
xor
mov
std
repz
call
aaa
xor
push
lret
and
lds
push
cmp
fadd
push
cmc
inc
pop
movsb
mov
or
dec
mov
cmpsl
int3
push
stc
jb
xchg
in
mov
in
inc
mov
cmp
pop
mov
xchg
pop
lds
dec
xchg
mov
cmpsl
dec
sub
lret
inc
pop
shll
pop
or
aas
cmc
ds
inc
repnz
ret
scas
adc
fs
push
xchg
addr16
push
lods
push
mulb
xor
stc
ret
stos
mov
outsb
dec
ds
mov
fxch
stos
int
daa
sub
mov
and
push
pop
push
je
jbe
ror
cwtl
shlb
clc
mov
and
mov
sub
push
sbb
out
pop
mov
rcrb
xlat
outsb
ja
add
lcall
shlb
aas
dec
jno
xor
lcall
adc
xchg
lds
sbb
int3
incb
incl
daa
aad
adc
xlat
add
movsl
or
mov
cmp
dec
in
cld
mov
jno
stos
xchg
add
jnp
mov
jno
popa
and
mov
gs
xor
mov
in
in
push
mov
push
aad
mov
xor
orl
pop
ret
into
dec
hlt
pop
test
xor
cwtl
popf
sbb
jg
aam
inc
lea
add
repz
jne
mov
pop
nop
sbb
adc
jns
repz
dec
dec
das
mov
adc
mov
repnz
add
lods
add
push
mov
insl
in
pop
push
lock
xor
mov
iret
fdivs
bound
inc
dec
test
out
mov
jne
stos
jg
inc
mov
clc
iret
fsubr
and
lret
leave
mov
sub
ja
sub
add
cmpl
cmpsl
pop
push
xchg
std
call
mov
pop
xor
sub
xchg
jle
cmp
xchg
push
xor
dec
imulb
sahf
dec
stos
xchg
jge
or
in
fstpl
mov
test
icebp
xchg
adc
data16
out
daa
push
dec
pop
cmpl
adc
dec
mov
es
lret
lods
dec
sbb
stos
aam
push
add
pop
pop
mov
jns
rcl
out
and
pop
outsb
xor
call
lcall
ds
cmp
add
leave
ret
dec
hlt
jp
inc
into
mov
pop
stos
aas
or
leave
daa
mov
push
lods
in
push
sub
leave
ljmp
push
int3
or
ret
ja
ljmp
loop
xor
enter
and
mov
xchg
imul
imul
cmp
loopne
icebp
inc
jo
lods
lods
jge
xchg
xchg
jmp
cmp
shll
clc
fs
scas
mov
jle
loope
insl
aad
push
add
stos
mov
xorb
test
nop
je
cmp
mov
jae
popa
out
or
xchg
and
lods
sbb
mov
aam
sub
sub
cwtl
adc
cmp
lock
sbb
push
aas
xchg
loope
jo
cmp
daa
fisttpl
cmpsb
jbe
test
lock
lods
fs
mov
out
into
out
adc
adc
call
dec
out
out
enter
cmpsb
mov
xchg
and
mov
stc
cli
push
insl
or
adc
pop
jo
ljmp
push
mov
pop
das
push
cmp
int
shlb
inc
std
push
cli
bound
int
mov
xchg
xor
movsb
pushf
shrb
jae
mov
call
push
sarb
inc
stc
fldt
mov
jbe
mov
push
push
gs
push
mov
cwtl
jecxz
and
out
cli
mov
pusha
test
jmp
jmp
xchg
cmpsb
fmuls
repnz
xchg
mov
or
nop
sahf
out
xchg
or
sub
mov
or
imul
xchg
ds
insl
out
clc
cmpsl
lea
adc
jbe
adc
fidivl
dec
fsubl
xchg
aam
js
inc
jmp
arpl
push
sbb
ja
inc
shrb
xchg
push
cli
scas
jl
push
addr16
mov
outsb
sahf
aas
xor
xchg
mov
or
in
jo
xor
lea
adc
mov
pop
lock
xor
jle
jg
pop
ret
push
rolb
or
inc
stc
push
mov
test
call
push
jge
mov
mov
xor
pop
das
scas
push
add
mov
mov
mov
js
sbb
lds
lods
dec
adc
inc
sahf
xor
inc
ss
bound
cwtl
fldl
stos
adc
dec
or
cwtl
jge
flds
xor
adc
inc
cmp
push
inc
fwait
mov
dec
cli
lods
insb
cmp
outsl
insb
or
leave
mov
faddp
adc
push
jge
xchg
add
fcmovu
inc
aam
or
iret
inc
paddw
or
mov
jl
out
in
jg
in
and
pop
xor
push
mov
adc
inc
jns
into
or
cmp
adc
xor
push
jns
inc
inc
out
jnp
adc
mov
inc
mov
xchg
in
in
xchg
cwtl
cmpsl
mov
js
cmp
bound
sti
xchg
ss
pop
movsb
stos
shl
fstps
sbb
adc
in
fwait
lcall
dec
adc
push
cli
adc
mov
call
shrb
sbbb
dec
inc
pop
push
sub
cmp
or
sbb
ljmp
shrb
sbbb
dec
inc
pop
push
sub
cmp
or
sbb
ljmp
stos
mov
lcall
inc
pop
pop
sub
cmp
or
sbb
jmp
sti
push
lret
ficoml
mov
lcall
inc
pop
and
cmc
jp
push
int3
int3
int3
int3
pop
sub
stc
add
insl
push
ficomps
add
or
add
add
add
xor
adc
add
add
add
add
add
jmp
add
dec
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
movsl
add
xor
bound
push
add
add
add
add
add
add
or
fiadds
dec
add
adc
or
rolb
fildl
sub
add
push
add
add
inc
add
jns
sub
add
sbb
cmp
push
add
add
add
sbb
addl
in
add
add
sub
add
add
test
ret
add
add
jmp
add
add
add
add
add
lret
add
add
add
bound
aas
add
test
daa
add
add
add
add
add
add
add
add
mov
push
add
pop
add
add
add
add
add
add
cmp
mov
sbb
icebp
add
add
call
add
add
add
xchg
mov
add
add
inc
add
add
add
add
add
movsl
add
cmp
add
jbe
sub
add
jle
rolb
add
add
add
add
push
add
add
add
add
add
sbb
jbe
pop
add
addl
and
imul
add
add
add
add
add
adc
jno
faddl
or
push
add
and
xchg
add
add
cmp
arpl
fildl
pop
add
add
xor
add
add
jno
fiadds
jo
faddl
fildl
cmp
push
add
pop
add
pop
add
in
add
add
add
add
pop
add
inc
add
add
adc
dec
add
add
add
gs
add
add
add
rolb
add
add
addb
add
xor
add
add
add
add
add
adc
adc
mov
add
add
add
dec
add
jmp
add
add
add
sbb
repnz
pop
add
add
add
add
add
add
dec
add
add
out
add
add
add
add
add
add
fiadds
push
add
add
add
add
add
add
add
ja
lock
add
pop
add
add
add
add
add
add
add
bound
dec
add
sub
pop
add
add
mov
loop
bound
sub
add
inc
add
adc
call
add
movsl
add
repz
add
add
add
add
add
add
add
faddl
ljmp
add
jle
add
faddl
add
addl
add
lock
add
add
add
imul
xor
xor
cmp
add
add
dec
add
ja
sbb
add
add
add
add
add
add
adc
data16
add
xor
inc
add
add
push
add
inc
add
add
push
add
jno
ret
add
add
push
movsl
adc
lcall
lds
fadds
inc
data16
gs
fdivs
iret
inc
xor
dec
add
andl
pop
aaa
mov
lret
test
notb
pop
xor
lods
leave
cld
insl
pop
add
and
mov
fs
mov
adc
rcll
dec
push
sbb
sbb
adc
adc
jns
push
adc
or
sub
pop
ja
push
sbb
cltd
cmpsb
sub
ljmp
loop
lock
mov
pop
jp
ja
enter
jno
mov
dec
rol
lds
push
sbb
adc
clc
aad
lcall
cltd
sbb
out
push
test
jnp
mov
push
xorl
icebp
imul
push
leave
xchg
int3
jmp
push
js
jbe
repnz
inc
jl
in
rol
xchg
jg
scas
push
mov
movsl
cwtl
insl
add
mov
call
jno
data16
js
jmp
xchg
movb
jo
sub
aam
dec
xor
mov
and
fnstenv
pop
inc
ret
mov
dec
cmpsl
imul
xchg
mov
jmp
lods
into
add
cmp
test
in
or
pushf
add
add
popa
inc
repnz
xchg
adc
push
dec
sbb
sub
and
movsl
int3
mov
pop
sub
loopne
mov
xchg
cwtl
jb
mov
add
dec
or
xchg
idivl
es
jno
cmp
mov
shl
je
jmp
adc
in
lcall
adc
outsb
rcl
push
dec
mov
mov
mov
insl
packssdw
pop
test
mov
cwtl
jle
adc
mov
cmp
out
in
or
loop
js
sbb
sbb
jno
hlt
mov
lea
sub
ja
arpl
and
ret
dec
mov
dec
mov
lret
xor
cmp
mov
xchg
dec
out
clc
sub
and
sbb
in
scas
insb
lods
mov
mov
mov
popf
add
or
out
jns
mov
insl
lahf
icebp
aam
movsl
push
push
xlat
std
pop
scas
xorb
rcll
jl
icebp
jmp
jb
out
xlat
mov
jle
loop
rol
je,pt
mov
outsl
add
cmp
cwtl
pop
inc
jmp
xchg
dec
shrb
adc
test
mov
ret
mov
xor
jae
or
xchg
add
pop
andl
call
or
les
inc
add
out
pop
add
add
add
add
loop
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
add
add
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
add
add
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fadds
add
clc
add
add
add
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
add
pushf
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
rolb
add
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
daa
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
daa
add
fsubl
add
aam
add
int3
daa
add
les
add
mov
daa
add
lods
daa
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
sub
add
add
add
add
add
add
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
sub
add
sub
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
