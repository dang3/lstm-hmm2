pusha
call
loop
xor
cmpsb
int
aam
and
cwtl
mov
add
popa
jmp
fcom
jmp
testl
cmp
xor
xchg
add
jns
mov
jnp
mov
xlat
fs
inc
repz
jmp
lcall
jmp
jecxz
pop
mov
xchg
dec
pop
cwtl
xchg
xchg
mov
dec
jmp
mov
scas
pop
jmp
add
inc
cmpsl
hlt
mov
push
lahf
mov
cmp
jno
xchg
and
add
mov
loope
xchg
popf
mov
inc
sbb
in
push
or
pop
push
push
ja
or
aaa
pop
push
jmp
outsl
sbb
mov
roll
mov
adc
dec
xor
mov
in
ret
imul
inc
adc
jb
add
ds
lods
adc
jmp
push
aaa
inc
int
push
xor
das
faddl
mov
add
cmp
sahf
pop
jmp
or
sub
movsb
lods
xorb
sub
cmp
fisubrl
aam
xor
rcrb
fcom
testl
cmp
std
xchg
add
jmp
jns
mov
jnp
mov
xlat
fs
jmp
inc
repz
jmp
lcall
jecxz
pop
mov
pop
cwtl
xchg
xchg
mov
dec
mov
scas
pop
add
inc
xor
push
ror
jmp
push
ret
loopne
dec
cmp
lahf
mov
cmp
jno
xchg
and
add
mov
loope
xchg
mov
in
push
or
pop
push
push
ja
or
outsl
sbb
mov
jmp
addr16
adc
dec
xor
mov
push
add
pop
jmp
shrb
dec
jl
sbb
inc
jmp
mov
jb
add
ds
lods
adc
push
aaa
inc
int
push
xor
das
faddl
daa
je
rolb
mov
sub
jbe
movsb
lods
xorb
sub
cmp
fisubrl
aam
xor
rcrb
aad
fcom
testl
cmp
xor
xchg
add
jns
mov
jnp
mov
xlat
fs
inc
repz
jmp
lcall
xchg
jecxz
pop
mov
pop
cwtl
xchg
xchg
mov
pop
jne
jmp
outsb
scas
pop
jmp
add
inc
cmpsl
hlt
mov
push
lahf
mov
cmp
jno
xchg
and
add
mov
loope
xchg
mov
in
push
or
pop
push
push
ja
jmp
or
jo
outsl
sbb
mov
addr16
mov
adc
dec
xor
mov
in
ret
imul
inc
adc
jb
add
ds
lods
ret
push
mov
sub
sub
rorb
mov
push
xor
mov
mov
mov
sub
xor
add
shl
or
xor
and
and
add
add
add
push
rolb
add
mov
add
sub
add
sub
xor
or
dec
jne
mov
mov
mov
jmp
sub
cmpsb
xchg
mov
jmp
sbb
in
push
or
add
push
movl
pop
jmp
push
push
ja
or
xor
jmp
outsl
sbb
mov
add
inc
cld
leave
ret
push
mov
sub
push
push
xor
mov
mov
mov
or
or
sub
and
add
or
or
dec
and
shr
xor
add
or
rol
add
ror
xor
dec
jne
mov
mov
push
addl
pop
jmp
inc
add
jmp
cmpsl
hlt
mov
add
add
pop
sub
leave
ret
push
mov
sub
sub
subb
mov
sub
sub
mov
xor
mov
mov
mov
and
shr
sub
sub
sub
dec
jne
mov
mov
mov
jmp
push
jmp
add
lcall
mov
jmp
imul
add
jmp
xchg
add
add
leave
ret
push
mov
sub
push
jmp
addr16
adc
and
push
xor
mov
mov
mov
sub
shr
add
ror
add
or
dec
jne
mov
mov
mov
or
add
addl
mov
pop
xor
leave
ret
call
inc
lds
in
cmp
mov
and
pop
fsub
mov
cltd
xchg
gs
shlb
jo
and
push
loope
mov
fnstsw
loopne
or
cs
push
in
and
hlt
je
jo
or
pop
shlb
or
cmp
pop
jno
xchg
hlt
pextrw
cmp
out
jge
mov
js
mov
xchg
push
jle
pushw
stos
jl
dec
or
ljmp
dec
fidivl
dec
mov
les
dec
vsubsd
ss
push
push
and
rorb
rcl
jle
mov
daa
in
vphaddwq
fdivr
cmp
jg
mov
scas
mov
dec
inc
rcrb
lahf
cwtl
jb
cmp
icebp
mov
stos
fdiv
inc
std
sbb
xchg
add
sbb
xchg
jae
sahf
xchg
jle
fsubl
xchg
mov
pop
add
push
jnp
adc
push
lds
dec
pop
orl
inc
sbb
push
sahf
jge
xor
mov
in
leave
rolb
cs
dec
nop
les
cld
or
in
imul
cs
rorb
fwait
jne
jmp
enter
mov
lret
and
xchg
xchg
lea
and
inc
push
xor
gs
or
loope
inc
jle
sti
hlt
out
les
dec
mov
movsb
shlb
pop
lods
pop
fadd
adc
mov
fisttpl
cmc
js
mov
nop
out
mov
adc
into
inc
mov
pop
int3
out
out
sti
inc
mov
les
push
mov
addr16
lock
sbb
dec
scas
incb
aas
add
das
iret
cli
cmp
test
mov
inc
push
outsb
sub
sub
inc
or
dec
mov
sbb
mov
sub
xor
mov
and
nop
mov
xor
mov
xchg
sub
xchg
movsb
pop
inc
call
add
jo
cld
in
add
rolb
sbb
cmpl
dec
dec
nop
cwtl
pop
add
xchg
inc
in
dec
int
or
and
mov
add
in
out
icebp
into
dec
xlat
outsl
cmp
xor
sbb
pop
test
sub
inc
push
daa
faddl
mov
pop
jge
decb
push
fisubrl
xchg
retw
ljmp
lds
mov
push
add
inc
testl
cmpsl
mov
xorb
sbb
add
xlat
mov
add
test
sbb
mov
add
cmpsl
mov
mov
push
sub
push
bound
das
loope
daa
adc
mov
cmp
jns
sbb
xchg
push
xor
cs
shll
pop
add
outsb
mov
inc
mov
mov
pop
repz
push
inc
adc
test
sbb
push
ja
pop
jno
push
stc
xchg
jp
adc
cmp
mov
and
or
repz
and
xchg
jbe
cmpsl
inc
mov
xor
test
and
xchg
mov
andb
and
ret
mov
mov
ficoml
lret
jle
mov
mov
mov
gs
adc
push
ror
adc
out
adc
push
repz
adc
sub
shrl
jle
mov
xchg
repz
cli
sbbb
push
xchg
pusha
int3
xchg
fwait
mov
mov
push
lods
xchg
push
inc
pop
xor
shl
mov
xor
pop
xchg
popf
lock
bnd
dec
dec
ja
iret
cmp
sarl
sub
pusha
das
push
into
push
js
mov
dec
popa
js
dec
ss
sbb
enter
fiaddl
in
call
push
xor
inc
push
lcall
xor
les
lea
push
inc
push
incb
cmpsb
sbb
rorl
inc
cmp
mov
es
daa
lods
mov
filds
push
call
orb
inc
push
cld
iret
outsb
jbe
sarb
cmp
or
mov
push
adc
pop
xchg
push
in
repnz
ret
dec
les
cltd
xchg
mov
leave
mov
sub
sbb
add
push
sub
mov
mov
in
and
shll
mov
pop
dec
adc
push
mov
dec
xchg
adc
push
inc
jmp
ss
sub
and
mov
mov
inc
data16
lea
xchg
shll
jo
pushf
dec
adc
push
js
lcall
push
jge
leave
loope
lods
lret
lock
xchg
sub
fcmovb
cmp
inc
jg
xor
fildll
daa
fstl
lret
int
add
dec
test
add
mov
inc
push
cltd
and
lret
pusha
cmc
cmp
ficompl
jae
out
push
bswap
push
sub
imul
xchg
insb
adc
xchg
aaa
movb
mull
xchg
cmp
call
mov
dec
xor
add
arpl
loop
xor
push
enter
lret
adc
inc
movsb
cmp
flds
pop
pop
mov
mov
mov
sub
fisttps
les
insl
stos
jnp
clc
push
rorl
add
pop
pusha
orb
xchg
jmp
xchg
jg
push
ss
cs
jb
clc
clc
mov
or
fisubrl
cmp
pushf
xor
dec
dec
inc
pop
cmp
sbb
fildll
nop
cmp
push
cwtl
shrl
cmp
jge
jmp
movsl
mov
xchg
mov
roll
xchg
lret
pop
fists
mov
mov
mov
dec
xorb
test
sbb
adc
sub
push
leave
imull
inc
std
sbb
sub
mov
push
lods
xor
setg
adc
mov
aaa
out
jle
ljmp
and
repnz
xor
outsl
push
mov
cmc
adcb
xchg
mov
jp
leave
idivl
mov
subb
outsb
mov
scas
dec
lret
sub
rcl
scas
outsl
dec
dec
loopne
jne
and
sub
jmp
repz
outsb
rorl
faddl
jmp
int
jae
sub
push
jno
fists
movb
inc
pop
lcall
sbb
test
push
push
ds
sub
stc
inc
pusha
lret
jbe
shrl
lock
fiadds
subb
mov
stos
mov
jae
fcoml
sub
cmp
xlat
xchg
sbb
out
lcall
int
enter
cmp
mov
jnp
mov
lea
sbb
dec
cmp
into
bound
push
pop
sti
inc
pop
fucomp
sub
ret
push
pop
adc
add
ljmp
data16
dec
hlt
xchg
stos
jge
xor
cwtl
or
into
int3
jae
mov
sub
push
data16
sahf
xchg
xchg
repz
mov
inc
jns
dec
bnd
xchg
fists
xor
dec
jnp
icebp
cmp
leave
mov
lcall
stos
adc
jecxz
adc
xor
repz
xchg
pop
xor
sub
imul
imul
aad
mov
imul
aad
mov
sbb
inc
xor
dec
adc
mov
push
and
movl
bound
ds
xchg
pop
mov
and
sub
push
push
movsb
sti
xchg
jns
aam
lea
lea
mov
out
aaa
push
sbb
lds
fisubrl
cmp
mov
cmp
mov
movb
leave
cmp
hlt
lret
icebp
jle
fwait
pop
aas
dec
mov
adc
dec
fadd
shll
add
inc
sbb
ja
cmc
js
int
addr16
nop
out
jge
jno
out
popa
mov
lret
mov
pop
pop
adc
loopne
mov
sti
xor
les
push
cwtl
sbb
testb
pop
mov
add
shlb
jo
mov
push
ljmp
in
add
push
push
jl
and
inc
pop
aas
xor
repz
lahf
push
fisubs
fdiv
aaa
scas
jp
mov
pop
or
lea
loop
int
fwait
pop
inc
cmp
divl
loopne
xchg
or
mov
lods
xchg
and
imul
sub
add
xor
sbb
lahf
fistps
cmp
lock
mov
in
mov
scas
mov
inc
stc
imul
add
jle
stos
add
das
aas
call
jae
xchg
or
xchg
add
mov
push
mov
outsb
dec
jnp
jae
incb
mov
jnp
mov
adc
sbb
sub
int3
adc
add
push
mov
pop
dec
sbb
rol
leave
fistpll
dec
aas
mov
inc
inc
add
ss
cmpl
lds
inc
adc
adc
jecxz
int3
sub
cld
lea
mov
xchg
in
cs
enter
clc
cwtl
mov
mov
dec
jp
loopne
js
sti
inc
sbb
es
shrl
mov
icebp
mov
jecxz
mov
in
inc
add
lea
jge
jle
dec
lock
or
jns
pop
jge
retw
mov
pushf
jl
icebp
test
xchg
in
dec
bound
push
push
and
shll
xchg
sbb
outsl
pop
cs
das
nop
lock
cmp
push
push
ret
test
gs
imul
scas
xor
push
fcoms
aas
dec
lahf
jo
jno
jo
mov
mov
out
outsl
lret
push
add
popf
cmp
sbb
int3
sbb
popf
je
test
pop
inc
stos
and
push
scas
xor
je
and
xchg
mov
and
sbb
pop
mov
pop
aad
divl
lods
push
inc
cwtl
notl
mov
jg
adc
cltd
aaa
jle
mov
jne
popa
call
outsb
push
and
cmp
outsl
sbb
push
shrl
mov
or
mov
out
add
daa
bound
jmp
pop
mov
out
mov
enter
sbb
mov
add
add
data16
aaa
or
lock
adc
adc
pop
inc
mov
mov
mov
jne
xorb
stos
ljmp
int3
in
mov
mov
push
jmp
sbb
and
push
xor
and
ds
pop
pop
inc
es
sbb
xor
jecxz
testl
push
jnp
add
sbb
mov
cmp
cwtl
sbb
js
pop
inc
mov
lret
je
add
sub
sbb
adc
jmp
lock
out
xchg
add
jge
popf
in
jecxz
and
mov
scas
jae
inc
shr
sbb
add
or
repnz
dec
jns
addr16
or
dec
call
add
mov
push
lcall
sub
jmp
mov
les
sbb
mov
cmp
icebp
jmp
sub
std
sbb
xchg
sub
lcall
mov
loop
out
ds
mov
mov
sahf
test
pop
stc
stos
lds
push
jge
int3
lahf
and
fdivr
jge
xor
aad
mov
in
leave
stos
pop
jle
loope
cmp
pop
mov
outsl
addr16
adc
sbb
rorb
fwait
jne
jmp
enter
mov
xchg
and
insl
das
stos
add
outsl
xor
lret
out
pop
orb
dec
fisttps
adc
stos
mull
jb
fistps
hlt
icebp
lds
loope
sub
mov
lods
loope
adc
push
hlt
cmpb
or
push
or
cltd
push
inc
jecxz
pop
push
xchg
cs
mov
jg
movups
out
das
or
mov
sbb
cmpsl
dec
sub
mov
inc
sub
shrl
in
mov
out
in
push
push
sti
aaa
imull
fwait
inc
fistpll
pop
or
scas
loopne
bound
pop
nop
jecxz
div
lea
mov
or
repnz
scas
scas
cltd
push
ficompl
and
loopne
test
add
sbb
xchg
jle
fsubl
dec
mov
ret
pushf
mov
pop
and
lds
add
test
adc
mov
inc
xor
mov
mov
popa
mov
cmpsb
rol
cmp
aad
outsl
mov
mov
movsb
xchg
inc
repz
dec
ret
and
jne
pop
lahf
cmp
mov
sbb
cld
inc
insl
das
mov
in
sub
fnstenv
pushf
enterw
cmp
loop
jge
mov
arpl
adc
jns
dec
dec
push
jp
pop
push
inc
filds
loop
push
push
aam
or
cmp
or
aam
stos
push
lea
call
sbb
mov
ljmp
das
jg
cmp
pop
pop
dec
call
mov
push
fsubrl
jno
xchg
nop
xchg
jecxz
push
adcl
dec
add
sbb
das
icebp
cmp
ss
cmp
lods
outsb
mov
call
andb
pop
adc
lcall
adc
mov
imul
or
outsl
std
loopne
clc
outsl
loope
or
shlb
xor
es
pop
dec
mov
insl
es
lahf
ds
fcmovnbe
decl
repnz
sbb
cwtl
cwtl
adcl
into
fcmovb
mov
mov
addr16
push
sbb
jno
mov
jg
cli
jg
cld
in
int3
pop
nop
loop
mov
outsl
pop
cli
andl
pop
stc
aaa
cs
mov
or
cld
cmp
xor
popf
mov
xor
inc
mov
adc
jl
pop
stos
mov
out
jae
xor
addl
jno
stc
lods
adc
jne
pop
pop
or
sbb
jg
push
dec
mov
hlt
push
jge
xor
push
sub
adc
cmp
int
sbb
insb
inc
decb
mov
imul
mov
add
bound
vandpd
cmpsl
loop
loope
out
lcall
in
cmp
icebp
cli
pusha
jecxz
mov
and
mov
and
fisttpll
int3
insb
cmp
adc
stos
iret
push
bound
das
loope
loopne
push
xlat
mov
data16
shlb
movsl
mov
jl
xchg
shll
lea
ja
popf
mov
rcl
in
pusha
mov
ljmp
loope
sub
les
mov
mov
sti
adc
xor
xor
call
addr16
ja
add
cmc
test
mov
push
and
cmp
test
sub
xor
fs
in
movb
ja
inc
mov
rol
lods
cmp
push
sub
outsl
fimuls
mov
adc
sub
cltd
adc
call
dec
enter
push
xor
or
dec
dec
sarb
xchg
cld
mov
mov
mov
imull
insb
movsb
inc
mov
and
test
adc
sub
aaa
cld
js
cmp
mov
push
cwtl
pop
sbb
and
cli
xor
jl
and
sub
cwtl
pop
inc
cld
mov
cwtl
fcmovnu
push
jmp
addr16
or
and
cmp
test
and
jb
jmp
shrb
xchg
hlt
int
ss
int
incb
dec
aam
ficompl
fadd
jne
dec
out
gs
repz
push
or
aas
add
push
and
inc
out
pushf
out
notb
mov
stos
bound
shrb
mov
jnp
sahf
icebp
in
cld
imul
jmp
rolb
jp
adc
mov
cmpsb
in
imul
or
and
mov
add
in
or
into
call
pop
and
mov
pop
dec
pop
cli
neg
mov
sub
mov
fcomip
daa
jns
dec
sub
jp
pop
or
ret
lea
scas
shlb
popf
shlb
dec
and
cmc
testl
cmpsb
push
xlat
cwtl
int3
lea
push
mov
add
out
inc
xchg
sub
mov
jg
cmpsb
adc
cmc
jno
pop
dec
xchg
push
out
mov
fstl
mov
inc
jns
lods
bnd
dec
jb
fistps
xor
aad
aas
mov
or
mov
hlt
fld
fcomps
out
xchg
push
mov
push
loope
jg
pop
insb
mov
cmpsb
cmpsb
cmpsb
pop
xlat
arpl
adc
fistpll
inc
out
jecxz
dec
sub
sbbb
add
repnz
les
cltd
xchg
mov
leave
mov
sub
sbb
add
push
sub
shlb
roll
inc
fsubrl
or
lret
leave
popf
and
fisubrs
mov
and
dec
out
daa
dec
ds
fisttpll
inc
adc
push
cmp
hlt
dec
xchg
outsb
adc
adcl
orb
nop
cmp
fdivs
sbb
pop
ror
cli
lods
and
clc
js
mov
test
mov
lea
dec
sub
add
push
adc
mov
cmc
sbb
jl
dec
test
xchg
push
dec
test
mov
mov
iret
sub
in
call
ja
ja
adc
mov
shll
outsb
mov
call
andb
pop
adc
lcall
adc
mov
imul
cmp
mov
pop
dec
add
cltd
jb
sub
cmpb
mov
pop
mov
pop
mov
add
sbb
icebp
aas
push
fisubl
xor
sub
outsl
cmpl
jl
fldcw
adc
jns
sub
and
jle
fwait
mov
mov
or
cmpsl
leave
push
scas
jno
push
pop
sub
test
fsts
sti
cwtl
mov
ss
call
and
mov
xchg
in
lds
insl
lods
pop
sahf
lret
cld
fdivs
in
xor
jp
imull
sub
nop
addr16
sub
and
imull
inc
std
sbb
jle
sub
into
cmp
push
divb
inc
mov
push
rclb
add
fs
adc
cmp
repnz
and
ficoms
cmpb
and
mov
or
repz
inc
enter
gs
push
lcall
cmpsb
xor
insl
in
mov
sbbb
scas
dec
cmp
and
push
inc
xchg
jns
mov
sub
jmp
mov
jnp
shl
xchg
jp
mov
and
dec
sub
mov
sub
imul
xor
lea
pop
mov
clc
ret
dec
imul
dec
ljmp
mulb
fsubrp
stos
mov
and
xchg
sbb
mov
jecxz
stos
cmpsb
arpl
test
in
mov
cs
mov
push
outsl
dec
mov
lods
cmpsl
lahf
or
xchg
cmpl
aas
or
push
push
sub
mov
notl
lret
subb
pop
xchg
and
aas
stos
ret
dec
mov
in
mov
hlt
popf
stos
or
insb
jae
jg
bswap
inc
sub
imul
or
jbe
insl
sbbb
push
aas
inc
jecxz
scas
push
xchg
cs
mov
mov
out
das
or
call
xchg
out
cmpsl
js
repz
outsb
xor
fists
push
or
aaa
test
in
movl
push
mov
adc
and
sbb
test
push
mov
add
inc
daa
xchg
dec
mov
ds
jg
mov
inc
ret
out
out
pop
jmp
pop
cmpl
adc
or
movsl
dec
mov
mov
leave
jo
jns
sbb
rorb
mov
loope
dec
xchg
pop
cwtl
pop
cwtl
notl
int
push
adc
ss
xor
add
popa
cltd
dec
push
push
les
popa
pop
inc
fnstenv
adc
adc
xchg
jae
inc
push
cmp
or
shll
fs
les
dec
xor
movl
mov
add
addb
cld
cmp
lcall
adc
dec
add
mov
cmp
dec
mov
aam
sub
outsl
pop
push
shrl
push
shlb
push
enter
cli
xchg
es
mov
clc
loope
sbb
int3
into
fisttpll
jb
in
mov
xor
mov
jns
sbb
xchg
bound
pop
nop
jecxz
and
dec
cmp
lret
inc
test
xor
mov
pop
cmp
mov
add
lret
mov
jno
mov
mov
aaa
leave
pop
call
and
cmpb
cmp
pop
int
iret
xor
sbb
imul
lock
dec
cmp
adc
xor
pop
out
stos
sub
nop
jecxz
sub
sar
jbe
dec
mov
sbb
jmp
rep
les
dec
dec
sbb
adc
mov
cmpsl
cli
popf
jo
aaa
push
cli
cmp
sub
sub
mov
mov
lock
clc
pop
mov
pop
nop
aad
xlat
ret
pop
bound
mov
and
cmc
aaa
cs
out
mov
fidivs
in
or
call
test
ret
adc
js
jb
aaa
push
jle
jnp
cli
and
mov
insl
mov
movsl
sbbb
aam
fsts
or
in
sbb
cmp
fisubs
jns
sbb
jecxz
pop
nop
lea
mov
gs
lret
lret
and
push
outsl
mov
and
imul
out
add
lret
inc
add
aas
cs
dec
jmp
xor
clc
sbb
decl
decl
adc
jno
aaa
js
sbb
dec
stos
lcall
pop
jge
mov
pop
iret
shr
rcr
cmp
or
arpl
cmp
inc
push
jge
hlt
cmpsb
adc
sbb
gs
in
sub
loop
cmp
pop
in
cmp
nop
jecxz
pop
xchg
in
xchg
jb
stos
push
int3
mov
cmp
lock
lsl
fs
jecxz
sbb
jb
inc
lcall
cltd
pop
sbb
movsb
add
and
jno
hlt
mov
lret
cmp
stc
push
xor
into
lcall
and
adc
xor
data16
outsl
jb
mov
repz
or
cli
movb
add
cmp
sbb
in
cmpsl
mov
xchg
add
lcall
push
cmp
jge
inc
out
sbb
loope
ds
adc
jecxz
sbb
lahf
loope
inc
sahf
and
xchg
mov
pop
mov
sbb
or
dec
xor
mov
jp
shl
mov
push
adc
shll
iret
inc
lods
lds
mov
sbb
push
shl
dec
push
cmp
cld
psubq
dec
jb
jbe
xorb
xchg
mov
mov
stos
in
mov
sbb
je
sub
lods
dec
xor
add
arpl
stos
and
pcmpgtw
lret
sbb
or
pop
mov
daa
scas
int
and
mov
lock
cmp
out
lods
jecxz
out
ret
push
loope
clc
js
jl
jo
push
daa
jno
dec
shlb
in
addl
std
lock
cli
mov
sar
cmpsl
out
sub
inc
int
add
loope
jo
test
lahf
fistps
pop
xor
movsl
mov
lret
fstps
addl
pop
push
xchg
add
sub
in
out
scas
insl
bound
lcall
fcoml
and
shlb
fwait
sbb
fcmovu
or
lret
leave
push
and
push
out
mov
xor
push
cli
or
pusha
out
ja
out
adc
gs
and
and
sbb
pop
and
lods
mov
xor
sub
mov
fs
fdivrp
addr16
pop
imul
pop
and
sub
add
jg
jl
lcall
lock
fstpl
jb
cmp
jg
cmp
das
clc
jmp
xor
cmpl
cli
movb
fwait
sar
inc
adc
add
xlat
loopne
xor
inc
mov
sbb
or
imul
push
cmp
mov
repz
out
cmp
enter
gs
sub
sbb
inc
push
in
add
subb
jne
and
out
jmp
aaa
stos
pushf
imul
xor
repnz
mov
testl
insl
test
inc
xor
dec
dec
mov
sbb
shlb
mov
xchg
add
pop
gs
imul
nop
jg
shrl
sub
movsl
and
push
push
xlat
sbbb
bnd
or
sti
jmp
imul
nop
mov
movsl
shlb
adc
loop
movb
or
sbb
mov
cmp
inc
push
mov
repz
leave
xchg
andb
or
cli
aas
and
mov
and
hlt
sub
pop
inc
pop
dec
mov
mov
pop
mov
enter
pop
sub
xchg
mov
inc
dec
xchg
int3
movsl
sbb
fcompp
xor
sbb
cs
imul
or
fcomps
lds
lea
jno
movsb
jnp
lds
push
aam
or
cmp
in
dec
insl
cmpb
or
xor
cmpsb
mov
push
mov
pop
ljmp
das
jg
cmp
pop
pop
dec
call
mov
push
fsubrl
jno
xchg
nop
xor
push
jne
lods
fdivs
inc
push
fists
rorl
outsl
movsl
aam
insl
push
aam
orb
fcoms
cmp
adc
das
rolb
mov
adc
nop
sub
sub
adc
jecxz
adc
jge
repz
xchg
jae
out
sub
outsl
sbb
stos
pushf
pop
xchg
int3
xchg
aad
mov
jle
loopne
inc
sbb
stc
orb
adc
jg
and
shlb
mov
data16
outsl
sbb
js
insl
jmp
rcrl
or
push
js
cmp
sub
ja
xchg
mov
stos
mov
dec
mov
push
ss
push
test
add
leave
aam
or
pop
cltd
in
ljmp
sti
lock
push
mull
rorl
jae
shll
out
or
mov
ret
in
push
hlt
cmpb
or
push
add
outsb
mov
fwait
and
mov
ljmp
test
in
xchg
cmp
push
dec
xchg
jno
nop
ja
out
xlat
imul
sub
shrl
decb
push
mov
aaa
out
add
pop
mov
aas
scas
adc
cmp
rorl
push
sub
test
mov
fisubl
and
inc
cld
sub
ja
add
and
loop
aaa
mov
out
int3
adc
lock
jo
out
call
dec
mov
dec
data16
out
insb
repnz
inc
sub
or
mov
adc
stos
pushw
scas
mov
jae
movsl
add
aaa
and
xor
mov
cmp
cld
jno
add
stos
test
sub
cmpsl
cwtl
mov
inc
out
adc
pop
and
lcall
pop
and
outsl
mov
fildl
sbbl
nop
stos
sub
adc
shrl
adc
xchg
add
jg
jl
lcall
cltd
cmp
inc
mov
out
cmp
jle
jae
cltd
and
shrl
mov
jns
mov
xor
aaa
jae
pop
in
lods
aas
lret
adc
cmp
outsb
orps
fcomps
xor
call
pop
inc
daa
ljmp
sbb
mov
test
inc
xchg
test
scas
outsl
add
fst
sbbb
mov
jp
dec
fsubr
lret
add
mov
and
mov
lock
lahf
ficompl
mov
inc
cmp
test
pushf
negl
inc
inc
jns
mov
orl
clc
push
and
rolb
out
sbb
inc
int
push
mov
test
xchg
or
sbb
stc
mov
in
mov
lret
sbb
test
or
loop
outsl
test
mov
addr16
jae
fcoml
sbb
xor
mov
push
out
dec
ss
pop
push
sub
mov
outsb
out
dec
rolb
cmp
dec
pushf
or
adc
sub
push
leave
imull
inc
std
sbb
sub
mov
push
lods
xor
xchg
adc
iret
lcall
ljmp
dec
mov
xchg
rcl
ja
mov
scas
pmulhuw
jns
mov
loop
cltd
sub
incl
and
mov
scas
out
stos
mov
in
xchg
adc
sbb
loope
or
shrl
je
lods
push
int3
jne
sub
aaa
pushf
decb
shlb
clc
mov
rclb
movsb
sub
out
add
pop
rcrb
or
jns
push
adc
sub
mov
cwtl
test
lret
sbb
sub
lahf
daa
push
mov
inc
or
jno
mov
and
fwait
rol
ror
add
xor
and
stos
insb
inc
adcb
test
dec
jno
sbb
dec
push
or
xor
dec
jae
and
call
test
movsl
in
add
sub
and
call
or
lahf
push
push
dec
popf
in
add
xor
mov
leave
lret
cmp
dec
icebp
insb
inc
push
mov
cmp
mov
les
frstpm(287
inc
jmp
xor
pop
loope
js
jno
rclb
jnp
stc
jmp
fcmove
aas
pop
pop
jbe,pt
mov
adcl
out
stos
mov
bound
imulb
mov
loopne
jp
arpl
or
jns
lods
xchg
data16
pushf
orl
xchg
push
and
or
lods
lods
or
adc
or
xor
jg
push
cmp
or
xchg
cmp
mov
cwtl
fwait
xor
pop
mov
pop
in
je
add
mov
gs
jecxz
cltd
pop
sbb
jge
inc
mov
sub
push
lods
das
inc
in
cmp
cltd
push
push
imul
stc
stc
loopne
in
ror
cld
repnz
sub
pop
sarl
arpl
hlt
cmp
dec
aaa
fsubr
adc
repnz
mov
cmp
mov
adc
gs
and
and
xchg
in
xchg
push
cmpsl
and
insb
cmp
in
adc
or
test
cld
jbe
outsl
popf
dec
js
fdivs
and
loop
popa
popf
cld
scas
pop
mov
in
loopne
push
add
mov
mov
xchg
in
aaa
xor
loop
rcll
pop
out
pushf
adc
inc
sub
rcrb
or
xchg
std
dec
packssdw
jl
ficompl
mov
push
cmp
push
push
add
arpl
jecxz
pusha
inc
mov
hlt
inc
daa
nop
xor
cmp
popf
cmp
sbb
int3
sbb
popf
je
test
pop
inc
stos
lds
test
jge
adc
add
pusha
iret
movsl
dec
rolb
xchg
mov
add
cmp
pop
mov
mov
mov
or
xchg
scas
or
cmp
inc
push
xor
ficoms
push
leave
lock
sub
dec
daa
ss
sub
repz
out
xchg
push
out
cmp
aam
jge
into
aaa
arpl
xor
jge
fists
dec
sub
leave
lds
pop
pop
push
outsb
xlat
pop
lcall
jg
sbb
jae
jb
dec
jo
or
jmp
pop
mov
adc
data16
push
xchg
xchg
pop
sub
int
lahf
out
iret
push
lahf
jmp
scas
mov
inc
negl
jecxz
jecxz
mov
nop
int
xchg
aas
cmpl
and
push
adc
push
sbb
int
insl
add
stos
pop
jne
clc
cmp
or
mov
rcll
movl
xchg
insl
pop
dec
das
sbb
or
std
call
xchg
bnd
subl
mov
pop
sub
enter
clc
fwait
xchg
pop
push
jge
mov
lods
add
cs
xchg
sbb
and
icebp
add
movsl
dec
mov
ss
push
rol
or
mov
cld
fstps
pop
imul
xor
jmp
out
push
in
or
and
insl
das
stos
add
pop
in
mov
insl
jge
movsb
add
add
pop
imul
mov
and
jg
jge
mov
aaa
jb
fisttps
inc
lcall
loope
adc
push
hlt
cmpb
or
push
add
outsb
mov
fwait
and
mov
ljmp
add
mov
int3
cltd
dec
xchg
jno
lds
js
adc
sub
rorl
fcmove
mov
repz
inc
enter
gs
push
lcall
cmpsb
xor
insl
in
mov
sbbb
scas
dec
jnp
mov
pop
imul
pop
xchg
mov
cmp
popf
pop
mov
jne
mov
or
fildll
cmp
mov
ficoml
orl
inc
sbb
mov
call
sbb
fnsave
pop
jge
lock
fstl
jmp
push
mov
adc
icebp
into
call
pop
and
fidivrs
mov
mov
inc
cs
imul
fcomps
movsb
push
mov
jae
shll
pop
mov
loop
xor
sub
xchg
xchg
stos
jmp
fidivl
mul
jmp
loope
cmp
mov
sub
dec
test
sbb
pop
cmpsl
xchg
ret
push
sbb
add
fs
push
xchg
mov
xchg
inc
sub
mov
xchg
sbb
std
lret
lods
dec
lcall
daa
popa
dec
jo
sbb
loope
fdivl
push
int3
repz
cltd
mov
arpl
cmpb
cld
mov
out
cmp
outsb
cmp
test
mov
push
lcall
cwtl
xchg
lea
aad
xchg
push
nop
mov
jno
inc
aad
dec
jl
xchg
lds
lret
aaa
or
sbb
lods
cmpsl
cmpsb
in
frstor
mov
inc
jno
mov
sub
aaa
cmp
jge
je
and
pop
inc
fsubrl
jp
dec
sti
sbb
inc
popf
and
shlb
sub
jnp
sub
jae
lcall
sbbl
pushf
js
leave
test
mov
pop
out
dec
ss
je
cltd
cmp
leave
dec
mov
mulb
ljmp
int3
in
ss
out
dec
lret
ss
adcb
cmpsl
dec
mov
or
pop
test
scas
movsl
and
add
and
xor
fstl
les
push
fcoml
xchg
iret
jge
cwtl
dec
clc
shr
imul
and
dec
gs
xchg
mov
test
cmp
aas
pop
xchg
jbe,pt
pop
imul
ret
pushl
and
cs
bound
rorb
mov
fwait
in
test
push
or
testl
out
pushf
andl
xchg
push
out
daa
or
stos
bound
shrb
int
jl
cmpsb
arpl
jmp
or
fadds
into
lock
mov
cmp
mov
icebp
int3
push
insl
lods
adc
mov
rcrl
xchg
aaa
div
stc
test
into
scas
iret
pop
fcmovb
mov
push
xchg
mov
lds
jp
and
sub
xor
pop
sub
push
jg
push
inc
insb
movsb
inc
mov
and
test
adc
sub
aaa
cld
js
cmp
mov
push
cwtl
pop
sbb
and
xor
mov
mov
mov
xor
testb
lret
add
pop
fwait
repnz
leave
jo
aam
inc
mov
std
xor
test
jbe
inc
out
jne
cwtl
mov
fadd
mov
or
andb
fucom
test
addr16
mov
xchg
jae
sahf
xchg
jle
fcoml
shll
adc
or
out
divps
aad
jmp
pop
orl
orl
inc
sbb
inc
xchg
mov
rol
or
mov
or
sbb
cmp
mov
jae
fcoml
sub
cmp
cld
inc
sub
popf
lcall
mov
outsb
dec
jnp
jae
dec
jmp
mov
pop
jmp
jle
aam
jecxz
pop
inc
loopne
into
scas
dec
es
mov
fucomp
sub
ret
push
pop
xor
push
dec
jae
cmp
call
aam
mov
inc
mov
enter
out
dec
ret
mov
fcompl
or
movsl
sbb
push
cmpsl
dec
lea
stos
inc
in
lods
shr
movb
in
cwtl
fistpll
test
outsl
jb
or
mov
and
imul
adcb
out
das
or
sbb
imul
aad
fsubrl
jno
xchg
push
xchg
jecxz
mov
lods
push
sub
repz
mov
cmp
gs
aaa
push
ret
xchg
lcall
stos
adc
jecxz
adc
jge
repz
xchg
jg
psllw
icebp
aaa
lods
pop
out
loop
xlat
clc
repnz
jg
sbbb
cld
lea
aad
sub
imul
add
call
call
mov
or
jp
mov
xchg
sbb
cmp
movb
sahf
aaa
in
xorb
push
stc
fs
inc
push
cld
inc
pop
sti
push
adc
sbb
fistpll
jecxz
in
lahf
dec
pop
cld
lea
sbb
bound
adc
movb
loopne
std
aaa
mov
jecxz
jb
loopne
mov
je
cmp
out
push
jne
cld
fninit
inc
dec
sub
sbbb
add
and
bound
inc
incb
xchg
jns
dec
push
mov
mov
fistpl
jb
repnz
fisttps
mov
push
xchg
mov
jbe
clc
dec
dec
jns
gs
cmp
push
enter
out
cmp
pop
fimull
enter
outsl
nop
addr16
dec
push
xor
dec
lea
in
push
rcrl
xorb
or
gs
inc
xor
pmulhw
cld
pop
xchg
testb
xchg
orl
adc
mov
add
and
mov
stos
inc
addr16
push
aas
ret
in
ror
jno
adc
mov
cwtl
mov
cltd
jno
cmp
pusha
add
fstl
ja
out
fmull
sub
adc
testl
xchg
rcl
ja
mov
dec
pmulhuw
jb
mov
xor
dec
mov
stc
mov
jl
adc
popa
dec
mov
sbb
loope
fsubrl
mov
pop
aam
sub
and
fistpll
adc
loopne
dec
pusha
pusha
out
imul
movsl
jne
outsb
mov
test
or
push
lcall
cwtl
xchg
rcll
aad
mov
nop
mov
sbb
data16
scas
mov
mov
imul
adc
or
dec
dec
push
or
adc
jg
push
jno
sub
cmpsl
data16
pop
loop
inc
cli
in
or
inc
ret
sbb
jmp
ficompl
or
adc
or
loopne
xor
push
in
xor
les
push
sahf
sti
lcall
pop
daa
and
not
sbb
aas
loop
sbb
popf
mov
loop
mov
pop
mov
sbb
shlb
xor
and
outsb
mov
cwtl
mov
data16
frstor
mov
cltd
and
cmp
sub
pop
aam
push
and
jb
jmp
shrb
lcall
add
and
aam
pop
bound
test
jp
out
mov
loopne
jp
arpl
lods
xchg
and
imul
hlt
adc
mov
sbb
scas
cmpsb
mov
push
addr16
xchg
mov
cmp
or
int
and
mov
pop
rcr
or
add
add
or
arpl
jge
mov
fcmovu
or
lret
leave
push
and
push
out
mov
xor
das
inc
leave
sbb
call
xor
mov
or
enter
out
mov
mov
jae
xlat
dec
lods
xchg
mov
lds
cs
inc
jb
lea
sbb
cmp
push
sbb
test
mov
es
fistl
and
aad
or
and
or
loop
inc
mov
inc
out
mov
clc
sbb
sub
pop
inc
xlat
shr
cmp
and
add
push
int
enter
in
in
pop
cmp
imul
daa
pop
movsb
ficoms
or
sbb
aaa
sbb
pop
cmp
aam
xchg
mov
push
jmp
outsb
add
and
out
mov
ja
sbb
add
shll
and
cmpsb
xor
xor
stos
fs
aam
inc
xchg
out
add
push
add
sbb
mov
lret
jnp
in
dec
inc
sbb
lods
xor
mov
add
fs
jecxz
stos
fdivr
inc
std
sbb
repz
sbb
xchg
jp
sbb
shrb
fidivrl
jg
ret
jne
loopne
jl
dec
test
jmp
add
cmpb
pop
jg
repnz
movl
mov
dec
push
adc
xchg
test
cmc
jns
punpckhdq
cli
cmp
push
or
out
mov
cwtl
mulb
or
jmp
adc
movsb
pop
cltd
shlb
pop
push
and
mov
pop
pop
stc
loopne
xor
xchg
sub
sarl
arpl
jns
inc
div
aaa
adc
adc
pop
inc
mov
mov
mov
mov
movsb
inc
jge
and
adc
nop
adc
sub
aaa
mov
cmp
in
sbb
pop
sbb
ss
and
fisttpll
int3
insb
cmp
bound
inc
lock
faddl
xchg
pop
insb
cmp
loop
rorl
icebp
and
and
pop
outsl
jb
and
insl
loope
sub
and
hlt
enter
clc
ficompl
inc
fistpl
pop
call
aaa
stc
xor
jp
dec
cltd
js
fldl
in
aas
mov
pop
pop
shlb
mov
fwait
dec
les
jae
sbb
test
lock
aas
incl
mov
loopne
xchg
and
mov
mov
inc
sahf
or
sbb
sbb
daa
xchg
mov
add
subb
fs
mov
jmp
sub
sub
imul
aam
lea
mul
add
cmovne
imul
dec
call
sbb
jns
mov
pop
jge
imul
xor
jmp
push
add
rcll
mov
call
pop
gs
push
in
xchg
pop
xchg
stos
inc
add
add
insb
imul
test
test
push
xchg
push
xchg
movsb
cmpsl
push
aad
jno
dec
int
jl
adc
push
in
adc
xor
jp
jecxz
inc
imul
mov
rcrl
mov
cmpsb
and
sbb
sub
sbbl
les
push
cwtl
sbb
testb
pop
mov
lret
cli
add
push
rorl
mov
pop
sub
xor
enter
xchg
cld
popa
mov
mov
jnp
xchg
pop
xor
pop
jae
out
add
pop
mov
aas
scas
adc
cmp
xchg
mov
pop
pop
mov
xlat
movsl
ljmp
mov
inc
subl
xchg
inc
xchg
jl
jle
xchg
or
push
mov
mov
xchg
jle
adcl
movsl
shlb
mov
sarb
adc
xor
nop
or
push
adc
sub
jo
xchg
mov
inc
fistpll
mov
adc
lea
cmp
push
xchg
outsl
cmp
ja
add
jg
addb
jge
andb
mov
f2xm1
aaa
imul
sbb
cmpsb
mov
pop
mov
aad
repnz
mov
mov
fstp
ret
dec
pop
push
adc
jbe
jb
mov
fnstcw
fildll
mov
out
lcall
stos
inc
push
notl
lods
int
sub
mov
mov
mov
inc
mov
jb
push
ficoml
push
push
xor
iret
pop
push
fidivs
pop
stc
add
xchg
into
xchg
ret
jb
and
push
or
out
lods
jp
or
pusha
pop
cld
fldcw
sub
jns
out
push
sbb
mov
jbe
sub
dec
fistps
xor
aad
aas
mov
or
mov
in
or
push
xor
jo
sbb
sub
cmp
xor
xor
cmpsb
cmpsb
and
movb
adc
xchg
cld
cmpsl
lahf
adc
dec
enter
mov
dec
push
cld
out
mov
mov
cwtl
sub
or
mov
adc
sub
cltd
adc
call
out
movsl
add
adc
ror
cld
repnz
arpl
scas
pop
inc
cmp
cld
adc
lcall
cwtl
mov
ss
adc
gs
and
and
xchg
in
xchg
push
cmpsl
and
insb
cmp
in
adc
or
test
jnp
xchg
mov
imul
in
add
push
lret
mov
inc
dec
hlt
jns
mov
jno
stos
or
cmp
jg
ret
leave
mov
call
mov
sbb
xor
addb
test
repnz
stos
mov
xor
stc
lret
and
cmpsb
xor
dec
cwtl
loopne
dec
and
lods
push
xchg
out
sbb
movsl
mov
les
jne
mov
das
pop
push
test
lods
add
mov
cltd
pop
aam
inc
daa
sbb
lds
mov
lods
bound
cli
stos
dec
sub
mov
jns
cwtl
fwait
in
out
pop
mov
mov
pop
test
jp
jle
add
sti
jns
fs
sub
pop
mov
jno
jb
test
mov
gs
mov
ds
sub
jmp
or
sbb
stc
xorb
and
addr16
and
mov
sbbb
cmp
xchg
dec
rcrb
popf
and
loope
cmp
adc
loope
testl
leave
push
and
push
out
mov
xor
push
cli
or
pusha
out
ja
out
adc
gs
and
test
jb
pop
xchg
or
lods
mov
fcmovnu
notl
inc
imul
faddp
pop
ljmp
cmpsb
cld
and
push
cmp
mov
mov
jge
int
inc
mov
jb
movl
fsubl
pop
inc
xlat
and
daa
or
in
in
pop
add
stc
and
outsb
lahf
repnz
jno
dec
shrb
scas
and
and
push
cld
stos
push
jge
inc
out
adc
not
ljmp
btsl
decb
push
movb
out
xchg
lcall
stos
adc
jecxz
adc
xor
repz
xchg
pop
xor
sub
imul
push
je
sarb
adc
sbb
cs
xchg
jmp
ret
subb
enter
xor
and
or
aad
inc
add
dec
xor
call
cmp
sbb
rcll
pop
mov
lcall
dec
xchg
movsl
xchg
out
xlat
cmpsl
lret
xchg
and
sbb
inc
dec
sti
dec
call
jg
loopne
ss
in
inc
xor
pop
push
loop
mov
mov
mov
mov
or
and
adc
adc
pop
add
mov
mov
pop
mov
aaa
fisubrl
mul
and
in
inc
inc
fildll
xchg
stos
out
nop
out
jge
adc
lret
mov
mov
mov
aaa
popf
cmpsb
pop
ror
or
outsl
pop
mov
ds
or
insl
sbb
out
add
fwait
dec
pop
pop
scas
dec
hlt
jl
gs
and
mov
or
rolb
mov
jp
mov
lret
add
je
popa
adc
or
enter
jns
cmp
ret
sbb
clc
dec
testl
xor
mov
mov
test
xchg
bound
jp
mov
pop
and
imul
mov
cwtl
mov
fisubs
mov
cltd
inc
cs
xchg
jmp
sahf
push
jnp
pop
cs
inc
test
jl
or
cmp
test
pop
cld
inc
scas
mov
cmpsl
sub
fstps
mov
pop
inc
inc
mov
in
jle
rorl
fwait
sbb
inc
fsubrl
jp
dec
sti
sbb
inc
popf
and
shl
addb
inc
sbb
sub
jl
jge
das
inc
pushf
js
leave
test
xchg
orl
push
outsb
or
mov
stos
rorl
jae
push
movsb
lret
adc
sub
push
leave
mov
sub
ret
ds
fdiv
push
pusha
mov
inc
add
lcall
xlat
jmp
out
adc
xor
loopne
repnz
xchg
mov
sbb
mov
dec
push
jg
lret
xchg
ss
outsl
pop
adc
das
mov
mov
clc
dec
mov
loope
sub
fsubs
dec
pushl
sbbb
scas
mov
dec
sub
inc
fsubrp
mov
inc
test
and
push
jnp
bound
in
dec
stos
data16
fcomps
inc
mov
orb
sti
pop
mov
in
pop
gs
call
adc
push
push
sbb
jb
scas
lcall
mov
sub
outsb
xor
fists
push
or
lcall
cli
push
sbb
inc
xor
mov
sbb
je
pop
mov
inc
test
xchg
sbb
mov
cwtl
mov
pusha
fisubs
fs
out
or
shrb
xorw
enter
les
mov
push
lret
jo
push
jns
nop
push
push
push
jb
inc
lock
enter
icebp
inc
clc
fistpll
mov
adc
orl
fdiv
jno
mov
cmp
xchg
bnd
inc
lea
mov
inc
mov
xchg
sti
loopne
cltd
ljmp
cmp
jp
test
lock
mov
negl
jge
sbb
xchg
add
pop
gs
imul
clc
mov
outsb
cmc
mov
xchg
mov
cmp
adc
jg
push
jno
sub
cmpsl
es
fisttpll
call
adc
cmp
aad
lret
inc
jno
aaa
cs
inc
out
add
jae
sbb
mov
xchg
scas
push
jns
or
adc
jecxz
mov
jecxz
das
or
stos
or
mov
adc
jno
aad
cli
mov
xchg
movsl
mov
pop
xor
enter
clc
sbb
mov
cld
lea
andb
inc
add
mov
stc
cmpsb
cld
and
push
cmp
mov
divb
ret
lret
shlb
add
or
sbb
dec
scas
pop
aas
add
das
iret
cli
push
cmpsl
adc
ret
sbb
aaa
test
gs
pusha
ret
xor
push
fcoms
aas
dec
lahf
jo
test
lcall
scas
pop
insb
test
or
push
add
or
repz
push
and
sub
cltd
cmpsl
jb
rep
push
scas
push
icebp
xchg
cmp
imul
cmp
sbb
pop
mov
iret
stos
adc
subl
clc
sbb
fs
pop
xor
popf
push
jbe
jno
sub
push
in
cmp
pop
in
decb
cmpl
nop
mov
pop
dec
mov
jg
inc
adc
enter
in
inc
outsb
sbb
pop
push
arpl
shrl
mov
push
and
adc
mov
push
pop
pop
pop
jge
push
cmpsl
mov
or
push
lcall
sbb
add
jecxz
popa
jecxz
outsl
pushf
test
dec
xchg
mov
sub
clc
or
mov
stos
ror
jno
fs
sub
mov
outsb
mov
das
sahf
inc
fwait
and
popa
mov
rcll
cmp
mov
test
and
aas
sub
mov
pop
mov
jo
cmc
jae
bound
test
pop
out
lods
xor
jl
stos
jbe
or
inc
push
aaa
add
sbb
and
adc
cmpsl
add
hlt
pop
popa
sub
cmp
adc
mov
std
lcall
sub
lea
pop
loopne
dec
pop
adc
mov
add
adc
lock
addr16
cmc
test
cmp
xor
push
and
mov
xchg
xchg
test
sub
lods
jae
es
fs
inc
lret
cmc
decl
mov
xor
pop
jne
lret
xor
inc
inc
sub
or
mov
adc
loopne
clc
fsubrl
push
adc
or
and
mov
inc
scas
jns
shl
xchg
js
add
ds
cmpb
and
loopne
clc
sbb
in
pop
ja
nop
jecxz
jae
pop
jb
jmp
icebp
lea
adc
sub
xlat
cmp
incl
stos
cmp
movl
outsb
enter
mov
test
test
bound
jb
cmpsl
sti
ficoml
push
push
xor
push
iret
pop
lcall
mov
lcall
jb
scas
lea
les
sub
xor
or
jns
pop
jge
and
stc
jns
mov
je
cmp
sub
cmp
cld
scas
inc
scas
mov
daa
dec
inc
shrb
icebp
inc
rcr
lods
xor
orl
jg
aam
lea
and
jnp
divl
lret
fsubs
inc
xor
add
jl
xchg
inc
push
pop
pop
push
add
ds
ficompl
cmpsb
sbb
jae
call
push
adc
icebp
add
movsl
dec
mov
ss
push
rol
or
mov
mov
mov
jecxz
mov
xor
jmp
out
push
in
or
adc
and
hlt
int
in
shlb
adc
adc
xchg
jae
sbb
inc
in
je
push
sbb
imul
push
sti
pop
push
lea
pop
shlb
popf
loop
gs
aam
dec
and
cmc
testl
push
xlat
cwtl
mov
mov
inc
mov
pop
out
jae
movsb
adcb
cmc
cmp
pop
jno
call
mov
ljmp
or
xchg
jecxz
mov
lods
and
add
adcb
cmpsb
xchg
sub
adc
lea
mov
testl
fcoms
xchg
jae
sahf
xchg
jle
fsubl
xchg
mov
pop
add
push
mov
sbb
xor
cmp
jns
lock
inc
sbb
cltd
or
ss
cmpsb
rol
or
mov
mov
movsb
xchg
inc
or
ret
and
mov
pushl
dec
xlat
xchg
cld
inc
movsl
das
jae
or
sbb
xor
inc
adc
aas
dec
jnp
jae
dec
jmp
mov
pop
jmp
jle
aam
jecxz
pop
inc
cmp
adc
inc
sbb
and
into
cli
dec
and
clc
js
mov
test
jmp
orl
call
add
adc
pop
mov
adc
xchg
lods
in
mov
pushf
jl
dec
test
xchg
rclb
bound
mov
push
iret
sub
mov
xchg
sbb
std
lret
push
call
and
aaa
cmp
push
pop
xor
sbb
data16
xor
sub
movsl
xchg
nop
out
jp
inc
cmpsb
jns
mov
add
scas
cmc
cwtl
jb
jo
aad
loop
mov
dec
push
jle
xchg
adcl
into
mov
hlt
int
in
pop
shlb
fwait
jge
xor
shlb
leave
stos
and
faddl
xchg
add
dec
ds
stos
sbbl
rorb
int3
in
sahf
jg
shlb
or
dec
imul
adc
pushf
xchg
adc
in
push
sbb
jge
stos
imul
lcall
push
jle
fistps
stos
imul
or
and
sti
cmp
cmp
test
mov
fcoml
sbb
jge
and
clc
rcr
pop
outsb
push
cltd
jmp
sbb
inc
adc
add
mov
rcrb
cltd
or
xchg
ljmp
cmp
mov
mov
mov
mov
add
mov
push
or
pop
jp
aas
add
mov
rclb
movsb
repnz
sub
into
cld
movb
xchg
xchg
push
push
push
ljmp
je
cmc
rep
dec
push
into
lock
cwtl
imulb
sbb
aad
xor
xchg
adc
inc
jne
adc
insl
clc
gs
dec
enter
push
ror
add
lret
add
repnz
pop
rcrl
mov
mov
aas
mov
aaa
lds
jns
xor
out
add
lret
sub
or
or
dec
popa
pop
int3
mov
fwait
and
cli
aad
es
fidivrs
mov
jb
iret
xor
jb
lahf
push
push
bound
and
mov
lret
cmp
dec
icebp
insb
hlt
mov
mull
popa
mov
dec
sub
ucomiss
mov
xchg
lahf
jmp
scas
mov
inc
and
inc
push
ret
rorl
push
cmp
lods
outsb
cld
sub
testl
mov
gs
mov
in
sub
pop
in
gs
arpl
lods
fstpt
and
xor
jl
mov
mov
mov
aaa
jnp
add
add
call
sbb
cli
test
jo
out
jg
adc
add
pop
jb
mov
dec
stos
jo
fs
loop
xlat
shr
cld
in
cmp
insb
xor
adc
push
rcll
and
push
sarb
jp
xchg
lods
lea
sbb
cmpsl
notl
jne
jl
mov
add
imul
cmp
int
jnp
mov
data16
adc
cli
dec
iret
test
std
out
andl
stos
sub
rorb
mov
jmp
pop
ucomiss
xchg
in
and
aaa
xorb
inc
mov
cs
add
push
cmp
je
mov
call
in
and
std
int
aam
loopne
xchg
test
clc
cmp
fcoml
mov
div
out
cwtl
iret
clc
stos
jle
cmpsl
in
repnz
mov
mov
imul
fisubrl
mov
out
inc
mov
das
jle
cmovp
imull
test
push
push
mov
push
adcl
lds
pushf
push
inc
mov
ss
pop
push
sub
dec
ret
mov
cmp
outsl
mov
dec
rolb
outsl
mov
imul
sub
dec
cld
fcomip
pop
lcall
pop
sub
mov
cmp
lahf
es
push
mov
out
out
jle
ljmp
jae
push
int3
inc
insl
sbb
sub
mov
sub
lock
test
idivl
xchg
movsl
enter
enter
adc
mov
xor
iret
dec
ss
stos
lcall
cmp
dec
cs
cmpsb
bound
ljmp
jo
movsl
test
sahf
stos
out
imul
fwait
data16
or
mov
xor
pop
jne
lods
cmp
mov
icebp
int3
push
insl
lods
adc
mov
rcrl
xchg
aaa
div
stc
test
into
scas
iret
pop
fcmovb
push
mov
int
push
inc
mov
mov
ret
push
int3
sbb
test
jae
mov
sahf
add
sub
pusha
int
jecxz
outsb
fs
mov
cmp
in
dec
xor
test
add
dec
fsub
pushw
cltd
jl
dec
iret
sahf
ds
das
ljmp
mov
orb
push
xor
repnz
rcll
aam
sarl
pop
jbe
sti
orl
mov
mov
sbb
ja
mov
adc
aaa
pop
shlb
aas
insl
xor
idivl
xchg
lds
je
das
add
adc
sub
enter
or
and
loop
aaa
mov
jmp
mov
push
lahf
sbb
mov
stos
out
add
rep
repnz
mov
mov
jno
adc
cmp
adc
fbstp
fwait
jge
sbb
pop
into
cld
ds
xchg
dec
mov
and
loope
push
push
frstor
cs
and
in
lods
hlt
in
jo
push
mov
xlat
pushf
fcomps
pop
jmp
mov
xchg
sbb
push
bsr
push
pusha
int
jecxz
outsb
cmpsb
stc
mov
cmp
loop
ss
dec
pop
fldl
cmp
aas
mov
stos
xchg
mov
loopne
inc
repnz
test
cmp
or
mov
inc
mov
out
cmp
jle
jae
cltd
and
shrl
mov
pop
mov
sub
jl
cld
xor
sub
pop
mov
mov
and
sbb
add
mov
dec
pushf
or
dec
xchg
ret
push
mov
mov
popa
repz
ret
push
popa
scas
jbe
pop
iret
jl
jne
xchg
or
adc
or
cmp
or
jno
cmp
clc
xchg
dec
sti
leave
xchg
lea
adc
lret
stc
add
or
andb
lods
and
add
call
stc
imul
fdivl
or
fs
loop
xlat
shr
cld
in
cmp
insb
xor
adc
push
rcll
and
push
sarb
jp
rcl
jae
testl
mov
mov
ds
sti
rolb
arpl
test
adcl
fcoml
adc
cli
dec
iret
test
std
out
andl
stos
sub
rclb
pop
fwait
repnz
jb
jmp
pop
ucomiss
xchg
in
and
movsb
cmp
flds
push
shrb
sub
movl
pop
roll
xchg
adc
mov
add
sub
pop
insl
inc
mov
xlat
push
inc
sbb
pop
stos
les
push
icebp
xlat
cmp
lods
out
jo
pop
mov
andb
and
ret
mov
loope
cmp
pop
mov
outsl
addr16
adc
sbb
rorb
fwait
jne
jmp
xor
add
popa
cltd
dec
das
test
pop
push
inc
mov
fcoml
inc
pop
sbb
adc
popa
mov
jne
in
push
pop
es
xor
shl
mov
aam
dec
mov
int
jnp
pusha
jl
cltd
dec
in
mov
rolb
xor
movsb
adcb
jno
adc
cs
mov
ljmp
or
xchg
jecxz
mov
lods
and
add
mov
inc
je
add
jno
or
cli
pop
sbb
inc
unpckhps
insl
stos
pop
movl
std
imul
lahf
jns
cwtl
insl
sbb
imul
adc
imul
testl
ret
and
nop
shll
or
sub
fsubl
cmp
and
jp
lret
jle
lods
mov
cmp
inc
push
xor
ficoms
fs
mov
push
stc
push
aas
pop
xchg
fsubs
push
mov
out
xchg
push
out
cmp
aam
ds
add
cltd
testl
cltd
push
and
cli
aad
es
cmp
mov
stos
or
jne,pn
repnz
lahf
push
bound
notl
add
and
xchg
cmp
pop
cltd
add
insb
fcoml
lret
and
loopne
add
mov
push
fmul
pop
mov
mov
jnp
mov
push
scas
int
dec
inc
adc
lock
or
sbb
sbb
mov
mov
xchg
and
mov
fmuls
adc
pusha
inc
xor
je
movsl
inc
mov
mov
inc
enter
js
in
sub
js
inc
aam
mov
mov
inc
sbb
movsl
mov
mov
mov
insb
cmp
xor
repz
or
pop
dec
int
or
and
mov
add
in
out
icebp
into
call
push
and
mov
orb
dec
fistpll
cmc
push
div
das
daa
cld
es
pop
mov
add
mov
pop
push
inc
filds
ret
inc
sbb
divb
dec
insl
cmpb
push
aas
jecxz
scas
xchg
cs
fwait
adc
cmp
mov
or
jno
jle
or
and
loop
stos
scas
scas
xchg
dec
faddl
inc
ljmp
push
cmp
mov
repz
out
cmp
enter
lds
xor
add
pop
sub
xor
mov
sbb
je
pop
into
loope
dec
cmp
into
sbb
movsl
xchg
nop
push
mov
push
sub
fisubs
mov
cltd
inc
cs
xchg
jmp
sahf
push
jnp
pop
cs
jp
cli
mov
rcrb
pop
inc
add
dec
xor
call
cmp
sbb
rcll
pop
mov
or
fidivs
rolb
mov
mov
sub
int3
les
lods
les
xorb
mov
adc
or
or
xchg
js
cmp
jno
xchg
lret
or
fwait
cmp
jo
sbb
lea
js
test
insb
lods
and
daa
push
sub
sahf
bound
das
ljmp
das
ficompl
cmpsb
and
fidivs
xor
and
dec
out
and
mov
cs
daa
out
push
cs
test
sbb
mov
test
cmpl
sbbl
pop
cmp
in
jo
and
mov
pop
mov
mov
push
add
inc
cmp
add
sub
repz
and
xchg
out
sbb
js
inc
or
push
dec
icebp
mov
fisubrs
pop
nop
adc
cltd
mov
or
int3
or
loop
lea
pusha
imul
dec
jle
cmp
sub
adc
xlat
pop
cltd
add
mov
ss
cmp
mov
inc
pop
ss
filds
sahf
dec
add
and
call
test
sbb
add
aam
dec
inc
cmp
int
jnp
pusha
shrd
loopne
cli
dec
iret
test
std
out
andl
dec
sbb
jecxz
scas
push
sbb
loopne
les
push
cmp
push
shl
or
cli
and
add
push
rorl
mov
pop
sub
xor
int3
push
push
jl
and
inc
pop
aas
dec
mov
cmp
xchg
fstpt
into
adc
cld
jne
nop
jbe
dec
stos
in
scas
sbb
and
dec
pop
insb
mov
jle
lcall
inc
adc
xchg
pusha
pusha
cmc
jns
punpckhdq
cli
cmp
push
mov
xor
pop
jne
lods
cmp
mov
icebp
int3
push
insl
lods
adc
mov
rcrl
lods
inc
dec
enter
adc
and
push
repnz
call
insb
mov
and
hlt
cmp
dec
aaa
adc
adc
pop
add
mov
mov
pop
mov
aaa
fisubrl
mul
mov
cli
stos
test
fimull
adc
or
test
cld
jbe
outsl
popf
dec
js
fdivs
mov
adc
test
fdivr
inc
mov
test
cmp
dec
and
cmp
xor
lahf
push
xchg
add
sbb
jge
dec
push
xchg
jecxz
mulb
or
xchg
std
dec
packssdw
sub
pop
mov
pop
rcr
mov
mov
xor
mov
or
repz
push
or
aas
add
push
and
mov
cli
jne
adc
test
cld
stos
mov
stos
mov
dec
adc
mov
sbb
sbb
sub
mov
xchg
stc
jo
fstl
loop
psrlw
imul
hlt
fdivp
movsb
jnp
mov
or
add
das
aas
call
jae
xchg
or
xchg
add
mov
test
enter
xlat
std
ret
mov
push
lock
dec
jae
and
xchg
fsts
mov
or
xchg
adc
pusha
icebp
int
loopne
pusha
jg
aad
cmpb
pop
cmp
out
addr16
jb
ret
shrb
inc
insb
push
gs
loop
jle
fwait
inc
aaa
push
gs
jp
popf
test
in
pop
mov
movsl
xor
mov
scas
dec
add
imul
out
sub
pop
mov
mov
and
xor
adc
lds
aad
pop
sbb
sub
xor
sub
ret
divb
in
xchg
mov
jl
jne
xchg
or
adc
or
cmp
or
jno
rep
ret
jno
add
or
and
jmp
cmpsl
jno
mov
stos
icebp
out
pop
shrl
arpl
add
mov
lret
xorl
or
cwtl
add
dec
fwait
es
fs
out
out
es
shlb
adc
jmp
xor
aad
es
fidivrs
mov
jb
iret
xor
jb
lahf
push
push
bound
decb
add
insb
lds
push
or
add
sbbb
pop
jmp
stos
push
pop
mov
mov
into
mov
int
jecxz
sbbb
mov
cwtl
cmp
xchg
in
enter
js
jg
rorb
cs
mov
out
loope
pop
adc
jle
mov
ss
xlat
movsl
aas
and
sub
lret
subb
mov
lods
pop
cmpb
or
aaa
push
enter
mov
dec
or
rcrl
jo
jg
jmp
roll
stos
sti
dec
xor
int3
sbb
or
adc
addb
nop
jecxz
cltd
clc
std
pop
xchg
push
inc
xor
dec
sbb
fbld
test
sahf
arpl
xchg
icebp
pop
mov
pop
aad
inc
jmp
in
js
pop
jmp
cmpsb
mov
movsb
add
repz
jb
lcall
mov
sub
or
sub
xor
pmaxsw
inc
jns
out
ss
add
jecxz
stos
ljmp
jno
bnd
cmp
sbb
faddl
cmp
aam
add
fwait
rcrb
jecxz
stc
pusha
stos
pop
sbb
fdiv
jno
mov
adc
rcrl
or
and
orl
test
jne
mov
inc
in
cmp
stc
das
xor
jecxz
sbb
jnp
sbb
and
daa
aam
add
ja
in
int
dec
dec
call
sbb
and
add
iret
or
jno
aaa
vmwrite
mov
cmp
and
pop
add
bound
jecxz
in
sub
sbb
sti
pop
push
jl
shll
cmp
fistpll
and
ja
adc
push
outsl
sbb
add
cmp
and
push
mov
xor
pusha
fmul
call
pop
nop
jecxz
repz
mov
outsl
arpl
mov
push
jp
movl
jecxz
outsl
or
jecxz
jb
mov
add
cmp
fcoml
adc
sbb
mov
adc
jle
xchg
ds
xor
cli
iret
pop
aas
push
jg
sbb
sarb
loopne
outsl
sbb
push
jns
hlt
lea
lods
cmp
cmp
sbb
adc
sbbb
mov
leave
ret
daa
ret
inc
fwait
ljmp
cmpsb
adc
mov
jp
jne
js
add
jle
pushf
gs
aam
imul
fucomp
imul
fucomp
imul
fucomp
pop
jb
mov
mov
data16
or
push
test
sbb
call
aam
sbb
test
call
pop
sbb
std
fwait
jmp
jge
fdiv
mov
outsb
ficomps
push
fidivs
or
rcl
mov
push
shrb
cmp
negb
mov
movsb
test
shlb
pop
mov
add
lock
ss
scas
icebp
jl
add
ljmp
shrl
mov
jo
fucomp
imul
fucomp
imul
fucomp
paddd
pop
jecxz
cld
aad
fdivrl
ficomps
aam
xchg
std
xlat
aam
fisttpl
hlt
lahf
pop
loop
add
pop
jb
arpl
das
outsl
mov
push
into
mov
adc
adc
outsl
data16
inc
mov
cmc
pop
xchg
mov
push
or
sbb
push
or
lds
imul
fucomp
push
je
aad
clc
and
xchg
sub
stos
lahf
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
aam
inc
push
mov
mov
inc
xor
mov
pusha
insl
movsl
out
jnp
movsb
test
jo
fucomp
mov
push
mov
adc
subl
mov
jge
cwtl
cli
push
push
imul
fucomp
test
sbb
jp
inc
pushf
leave
daa
ret
jns
mov
and
outsb
popf
out
lods
inc
loopne
imul
fucomp
jbe
repz
dec
lds
leave
mov
jo
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
imul
fucomp
dec
jmp
loope
sahf
loopne
std
xor
mov
xor
mov
in
out
fdivs
clc
daa
add
mov
into
cwtl
imul
push
in
ds
jns
out
fs
in
in
leave
sub
pop
cmp
push
xchg
insl
or
jle
ror
and
shll
js
xchg
test
pop
mov
xchg
arpl
sub
loope
jecxz
cmp
cmpsl
mov
mov
xchg
inc
add
xchg
test
inc
arpl
movsb
fbstp
adc
dec
cmp
add
cmpsl
mov
and
xor
subl
out
pop
aam
adc
arpl
inc
push
test
sub
fiadds
or
mov
add
pop
lret
dec
out
sub
mov
sbbl
clc
repz
sbb
mov
mov
pop
xchg
mov
xchg
sbb
rcrl
lock
les
or
mov
das
out
pop
js
inc
iret
or
or
leave
outsb
dec
xchg
ljmp
shl
aam
call
insl
scas
enter
outsl
cmpsl
stos
es
xor
aad
cmp
faddl
sub
mov
pop
ss
jmp
mov
push
jecxz
mov
paddusb
sub
repz
cs
bt
cmp
rorb
cmp
and
push
xchg
jbe
gs
adc
mov
ret
call
clc
nop
std
js
pop
orl
jae
mov
and
push
icebp
loopne
push
lock
add
out
mov
push
and
mov
mov
push
fdivs
es
sbb
stc
jae
sbb
lods
pop
adc
shlb
push
sarb
add
int3
sbb
cmpsl
xchg
pop
arpl
test
and
mov
mov
fbld
repz
lahf
addr16
jp
mov
bound
repnz
popf
cmp
add
sar
outsl
and
das
xchg
push
aaa
push
xchg
xchg
cltd
outsl
jmp
push
sbb
rolb
mov
jmp
lret
mov
andl
mov
mov
jnp
push
xchg
inc
jp
push
js
arpl
cmp
mov
mov
dec
sub
xor
lcall
fisubs
inc
jnp
jb
mov
inc
pop
adc
push
insb
jne
cltd
mov
repnz
in
mov
push
lcall
cmp
jg
adc
sarl
and
xchg
fadd
xchg
mov
mov
add
ret
mov
jecxz
mov
or
imul
mov
jp
lock
sbb
add
enter
addb
lea
popa
mov
pop
adc
dec
pop
outsl
jbe
xchg
es
test
add
adc
mov
adc
pop
lret
cli
jae
jmp
xor
jp
sbb
out
mov
fwait
stc
rcl
sbb
test
pusha
out
pop
cwtl
and
ja
pop
jo
negb
fcompl
outsl
shll
cmp
adc
mov
jb
pop
sbb
inc
or
shll
mov
mov
xchg
outsb
cmp
or
xchg
or
daa
push
xchg
out
cmp
lea
cltd
xchg
pop
outsl
xor
pop
ja
push
bound
popf
ror
aad
rcrl
sub
xchg
repnz
cmc
lods
nop
ss
ja
sarb
data16
sub
xchg
xor
call
test
ljmp
icebp
mov
jb
fsubrs
movsb
fimuls
cld
cmc
dec
pop
adc
nop
pop
fisubs
sti
adc
sbb
scas
ror
mov
cmc
rorl
fistpll
cwtl
ret
jbe
jmp
pop
sbb
jbe
inc
inc
stos
xchg
ficoms
nop
pop
push
or
xchg
dec
out
jmp
aaa
int
cmpsl
pushf
mov
mov
mov
ret
test
push
push
mov
sub
xchg
push
stc
leave
shll
xor
mov
icebp
scas
and
sbb
mov
xor
sbb
enter
xchg
rol
sub
mov
jmp
sti
loope
testl
xchg
test
jo
xchg
int
fsub
jmp
stc
lods
mov
mov
mov
inc
sub
dec
xchg
rorl
or
out
mov
push
and
mov
dec
adc
and
cmc
add
test
hlt
out
add
fildl
loopne
lahf
push
mov
notrack
bound
mov
subl
mov
fistps
jmp
movsl
add
mov
repz
sub
xchg
in
in
or
dec
out
inc
loop
sbb
rclb
lcall
iret
pop
jg
inc
sbb
add
jmp
xchg
divl
fnstsw
pushf
xor
xchg
mov
orl
dec
mov
xchg
or
jne
sub
dec
sub
xor
outsb
ds
jo
lock
mov
ret
sahf
sbb
daa
lods
popa
jnp
dec
adc
pop
popf
push
sbb
push
int3
pusha
stc
push
fisubrs
cld
stos
jmp
test
dec
bound
cmp
cmp
adc
icebp
mov
jge
int
inc
push
mov
jge
sbb
shrb
fistpll
xchg
jle
mov
fdivrp
mov
mov
fidivrs
cmp
push
jno
push
or
mov
shll
and
jae
sub
push
rorb
mov
sbb
xchg
out
xchg
xchg
in
inc
lret
cmp
inc
lcall
lret
lock
scas
and
ret
call
dec
jnp
les
mov
stos
int3
or
sub
xor
cmp
cmpsb
je
push
test
dec
sub
ljmp
jmp
iret
or
in
popf
movsb
movsl
insl
push
mov
push
in
xchg
aaa
xor
std
push
aaa
xchg
adc
es
mov
and
or
inc
in
inc
mov
xlat
ret
mov
or
in
jp
or
dec
addr16
sbb
cmp
adc
scas
test
xchg
adc
leave
ljmp
cmp
xchg
sbb
sbb
leavew
out
scas
mul
adc
sub
dec
rdtsc
or
or
inc
gs
ret
push
jno
sarl
stos
sub
xor
and
inc
push
xchg
ljmp
gs
and
pop
rol
mov
loopne
scas
fsubs
insb
and
divb
into
mov
xlat
insl
sti
pop
aas
imul
mov
dec
xor
incb
fwait
sub
mov
cmp
jp
jmp
outsl
aaa
sub
das
repnz
fcompl
or
dec
pop
nop
jmp
jbe
xor
das
pop
ds
leave
xchg
xchg
inc
and
fwait
sbbb
add
xor
mov
dec
call
lea
or
xchg
xchg
les
dec
fdivrp
mov
mov
sbb
scas
lret
cmp
dec
adc
mov
fstpt
or
fcomps
adc
popf
jg
pop
test
cmpsb
lds
mov
adc
mov
rcl
jne
pop
addr16
shl
addr16
pop
pop
mov
scas
shrb
add
xor
shrb
add
ds
shrb
or
and
mov
dec
inc
loopne
test
mov
sbb
jo
clc
adc
mov
retw
test
push
idivl
cli
push
in
lahf
mov
rorb
test
cmpsb
ret
bound
xchg
pop
orl
jl
adc
out
pusha
or
xchg
lds
fisttpll
jmp
mov
lea
jae
push
adc
test
fnstenv
insb
push
arpl
mov
cmpsb
mov
adcl
ss
scas
mov
jmp
and
inc
xchg
test
movsl
sbbb
pop
nop
sbb
je
out
inc
rcl
lods
cld
faddl
mov
push
arpl
stos
push
adc
dec
push
pop
hlt
stos
mov
sbb
mov
jbe
das
mov
add
adc
stos
call
mov
inc
adcb
outsl
push
mov
imul
jge
popf
or
xor
xchg
shll
mov
sbb
loop
mov
mov
xor
dec
dec
dec
jo
inc
sbb
test
aaa
xchg
jbe
test
outsl
dec
cmp
das
ret
add
hlt
stos
rorl
mov
mov
repz
inc
mov
jnp
mov
shrl
add
and
popa
sub
push
mov
push
loop
ret
sbb
xor
mov
push
xor
push
dec
pavgw
ret
sub
push
push
mov
test
sbb
in
or
lods
sti
sub
fucomip
mov
das
insb
mov
sarb
pop
mov
outsb
pusha
dec
lret
sub
pop
mov
cmp
rolb
insb
pop
ret
scas
shll
leave
push
movlps
dec
hlt
ljmp
push
mov
pop
mov
mov
loope
mov
push
mov
xchg
xchg
push
gs
fadds
xlat
call
out
fiadds
xor
cmpsl
in
inc
mov
pusha
dec
das
cmpb
mov
mov
clc
sub
jp
fldl
mov
gs
inc
jne
xlat
sbb
sub
sub
nop
xchg
bound
fsubs
jbe
lods
int
loopne
sub
xor
fdivrl
outsl
sub
aas
dec
jg
or
jae
adc
mov
je
leave
adc
inc
push
stc
pop
mov
fs
test
fwait
lods
sbb
rcrw
or
daa
sarb
fnstsw
xor
aas
ds
dec
adc
lret
int
pop
jge
hlt
xchg
data16
dec
mov
fidivrs
jg
sub
cld
lahf
jg
mov
adc
pusha
push
movsl
mov
mov
cmp
loop
lea
lea
pop
jl
lret
insb
mov
orb
xchg
insb
mov
rcrb
or
add
cmc
fstpl
push
pop
and
xchg
mov
xor
lahf
push
mov
cmp
fsubrl
xor
xchg
jp
mov
test
sahf
test
push
bound
sahf
in
jl
test
pusha
loop
jae
imul
inc
push
mov
stc
cmovbe
or
jo
xor
jmp
popa
inc
xchg
fnstenv
cmpsb
pop
xchg
movsb
push
insl
je
xor
or
cmc
stc
negb
sahf
hlt
lret
sbb
and
nop
daa
mov
jecxz
cmpsb
sbb
pushf
cmp
sbb
cwtl
imul
jnp
xchg
test
push
stos
mov
and
cmp
movsl
aas
push
xor
jl
and
pop
outsb
xlat
mov
fstpl
test
loopne
jl
pop
out
lds
int
push
mov
xchg
addr16
test
mov
cmpsl
movsl
rolb
mov
dec
inc
scas
hlt
rcl
mov
cwtl
repz
sbb
inc
leave
cmp
inc
icebp
jle
dec
mov
jle
xchg
hlt
test
clc
pop
ljmp
cmp
testb
adc
out
adc
lcall
mulb
cmpsb
test
xlat
sbbl
mov
lock
shr
push
mov
scas
mov
sub
jae
in
xchg
rorl
mov
aad
movsb
les
pusha
mov
xor
lret
jo
adc
jmp
sar
mov
jns
call
lret
sbbl
inc
cmpsl
cs
mov
rclb
or
jb
mov
jne
fldcw
add
outsb
mov
lods
fwait
adc
subl
dec
pushf
mov
push
sub
mov
mov
xchg
nop
mov
shll
enter
jbe
dec
scas
lods
sub
popa
movsl
push
pop
int
test
pushf
dec
sbb
rcll
jo
inc
sub
xchg
mov
push
and
pop
imul
xchg
push
xchg
jg
add
push
call
fistps
jge
rolb
fsubrl
fimull
cltd
ljmp
mov
add
daa
cmp
cs
cli
cmc
fs
jne
sbb
sub
in
jl
popl
sbb
loope
push
loopne
dec
sbb
ja
mov
test
sbb
mov
or
sbb
scas
xchg
push
cld
add
ret
mov
lods
push
push
mov
lock
xor
jno
lds
xor
std
dec
call
push
js
mov
push
xor
notb
lret
js
xchg
insl
fcomps
inc
sbb
mov
subl
mov
push
sbb
imul
jne
sbb
sbb
inc
jnp
and
lret
out
push
insb
js
ret
mov
dec
xchg
in
sub
sti
scas
sbb
xchg
mov
cmpsl
sahf
lock
add
and
xor
jbe
jno
fidivrs
cmc
mov
jne
sub
insl
shrb
insl
in
cltd
nop
sub
or
gs
idivb
jno
and
arpl
notb
mov
cmp
sbb
jnp
pop
pushf
mov
and
sub
xchg
xchg
outsb
mov
sbb
jae
int3
xor
and
imul
into
into
xchg
mov
cltd
sub
adc
inc
hlt
pop
push
sbb
pop
int3
xchg
inc
fldcw
xorl
push
inc
adc
in
cmpsl
jecxz
outsl
inc
jecxz
bound
leave
pop
push
rcll
or
push
mov
jp
sti
cmp
sub
or
lods
xor
dec
xor
jo
or
insl
add
mov
out
daa
mov
shrb
scas
xor
scas
dec
mov
jl
cmpsb
ja
cmp
cmc
aam
mov
mov
cmpsl
cmp
cmpl
iret
mov
xor
cs
pusha
jbe
jle
ljmp
pop
jbe
arpl
mov
mov
and
insl
inc
adc
es
aad
xchg
lahf
shll
cmp
sub
xchg
pusha
inc
inc
inc
lea
cltd
mov
cld
and
mov
mov
fs
xor
mov
inc
jmp
std
fldln2
mov
cmp
jmp
cs
bound
ficompl
add
xchg
xor
and
movsb
iret
lods
out
mov
or
push
sbb
jb
popa
inc
addl
push
enter
or
and
sub
icebp
fwait
mov
push
sub
adc
adc
lock
jnp
adc
aas
sub
xor
pop
and
cmc
or
cmp
ficoms
loope
out
xchg
mov
dec
xchg
lock
ret
add
and
in
cmpsl
mov
dec
push
popa
adc
or
subb
inc
and
clc
adc
mov
adc
mov
jmp
jmp
push
mull
jbe
or
cli
pop
in
out
sub
fwait
mov
orb
pop
adc
out
inc
js
imul
and
jge
inc
mov
jecxz
cmp
int3
fldenv
and
sbb
xchg
mov
jp
xchg
outsl
push
xchg
mov
and
nop
xor
xchg
sbb
test
mov
jbe
dec
sbb
scas
test
and
imul
std
cmp
or
cmp
ficoms
out
sti
sbb
mov
std
loop
inc
je
mov
loopne
sbb
or
int
mov
aas
push
mov
inc
cwtl
popa
push
insl
push
xchg
nop
sarl
and
dec
lock
and
loop
push
adc
cs
mov
add
movsb
cmp
jecxz
sti
mulb
lds
bts
test
jns
movsb
jnp
and
aas
aad
xchg
mov
mov
lock
jbe
sbb
xchg
push
enter
xor
ds
jg
mov
mov
or
add
mov
xchg
dec
dec
aaa
inc
lcall
insl
rcrl
ds
lret
or
push
je
sub
in
xlat
fistps
out
adc
in
and
lcall
add
fbstp
enter
fisubrs
movsb
lret
pusha
mov
stc
shrl
ret
jo
add
pop
movsl
or
adc
push
dec
cltd
xor
push
insl
scas
pushf
cltd
and
into
xor
jl
jae
mov
adc
xchg
jns
pop
lods
into
stos
loopne
push
pop
jecxz
dec
xor
adc
loopne
cltd
fimull
test
jb
jge
or
push
mov
mov
outsb
arpl
addr16
adc
scas
out
in
mov
in
mull
lret
cmpsl
inc
mov
jnp
sub
mov
lcall
into
xchg
cld
inc
sub
stc
sbbl
pop
dec
call
inc
imul
mov
inc
out
les
jmp
stos
mov
push
repnz
mov
jp
sub
cmp
dec
add
jbe
iret
leave
adc
jnp
sbbb
push
outsl
lea
xlat
cltd
repnz
inc
mov
mov
adc
pushf
mov
orl
adc
inc
jb
in
jle
mov
pop
cli
and
push
gs
ficoms
xchg
and
int
clc
rol
jb
jl
test
jg
jl
lret
xor
inc
sub
mov
adcb
or
push
test
mov
pushf
mov
std
roll
in
sti
add
fisubrs
or
insb
ja
jge
ret
push
ja
icebp
jne
add
mov
mov
pushf
insb
sbb
pop
outsl
outsl
ret
xchg
and
mov
aad
sbb
xor
test
stos
mov
enter
jb
jp
pop
pop
or
aas
stos
sub
mov
mov
outsb
pop
xchg
xchg
out
inc
lea
daa
and
js
fwait
dec
and
xchg
stc
add
stos
push
jns
push
adc
pushf
cmc
adc
leave
pop
cmp
inc
add
adc
push
adc
aaa
out
lret
mull
sub
std
pushf
enter
jne
imul
nop
in
ret
and
test
pop
xchg
inc
pushfw
ds
sub
call
insl
in
bound
xchg
mov
js
inc
mov
or
xlat
test
pop
mov
addr16
dec
push
push
cmp
sbb
cld
jns
sbb
dec
jo
xor
push
mov
pop
pop
pop
xchg
or
movsl
in
in
cs
daa
cmpsb
mov
shlb
cli
xorb
popf
lret
aaa
mov
jmp
add
mov
mov
dec
test
fwait
sbb
dec
nop
stos
repz
and
add
dec
jns
or
push
out
out
lods
in
bound
or
xchg
add
jbe
xchg
cmp
std
sub
mov
arpl
lea
adcl
mov
in
push
or
mov
mov
xchg
add
xorb
jecxz
cld
sub
lea
negl
int3
push
out
and
lods
mov
cs
popa
test
ds
cli
pop
and
ret
pop
clc
ja
jmp
test
cmpsl
sbb
cmp
scas
fwait
insb
or
les
or
sub
stos
addb
dec
pop
inc
rcrb
pop
inc
lret
xor
cli
push
test
leave
hlt
jle
mov
mov
push
mov
out
hlt
pushf
inc
shl
lods
cmp
lock
push
push
push
popf
inc
cmpb
dec
add
sub
hlt
dec
fcomps
jne
cmp
inc
jmp
mov
outsb
mov
mov
stc
inc
mov
jmp
cmpsb
cmp
loope
cmp
pop
jnp
je
out
push
mov
cs
scas
or
fisubs
pmulhw
dec
xor
in
sahf
jmp
sub
sub
test
mov
sbbl
rclb
test
xchg
mov
jge
jae,pn
push
js
and
cwtl
fs
xchg
adc
mov
decb
push
mov
sbb
or
push
pop
mov
dec
lock
ficoml
pop
cmp
sub
notl
mov
add
pop
movsb
or
sub
data16
int3
push
inc
movsl
or
push
andl
dec
push
imull
and
xchg
hlt
mov
or
mov
sub
and
nop
loop
rcr
cwtl
andl
in
sub
inc
daa
adc
out
sbb
adc
in
push
test
mov
insb
push
dec
mov
pop
mov
lar
sbb
dec
mov
rcrb
mov
inc
insb
jnp
pop
imul
lock
ret
add
cmpsb
xchg
daa
stos
mov
pop
or
cmp
adc
les
mov
inc
into
fldenv
cmp
daa
das
bound
cmp
cmp
ret
movsl
cs
movsl
in
cmp
xchg
and
fidivl
jno
jb
pop
dec
outsl
test
cmp
pop
shll
clc
icebp
cs
or
in
sub
lahf
push
or
dec
push
bound
dec
idivl
mov
into
icebp
dec
outsb
and
xchg
jnp
out
jl
mov
mov
js
movl
jno
mov
fs
mov
addr16
ss
mov
cmp
sbb
sbb
push
jnp
inc
mov
test
or
cmp
push
mov
xor
test
sub
je
sar
xor
cmp
stos
imul
es
jle
sahf
daa
pop
xchg
shrl
dec
dec
fdivs
idiv
stos
popl
adc
daa
loopne
leave
pop
pushf
and
mov
fwait
xchg
sbb
jae
test
jmp
mov
ret
jae
sub
inc
movsl
adc
jp
flds
sahf
mov
stos
inc
das
idiv
movsb
mov
adc
push
je
mov
xor
pop
and
fcoms
xor
or
aaa
sub
push
ljmp
ja
daa
gs
repnz
repz
ljmp
and
jns
cmp
pop
jnp
lock
xor
dec
pop
mov
orl
fbld
mov
jns
mov
sbb
es
pop
inc
jmp
cmp
frstor
cmpsl
sbbb
xchg
mov
leave
jo
xchg
movl
sar
pop
and
mov
in
pop
mov
push
lcall
lods
ss
mov
inc
mov
mov
fs
std
sahf
outsl
test
xchg
sub
rcrl
sbb
test
adc
ret
es
pop
dec
jg
add
adc
dec
or
cmp
loop
xor
push
cmp
rcll
inc
add
jo
iret
pop
push
dec
das
out
outsl
dec
jno
aam
loopne
sub
into
out
cmp
ret
shl
push
jns
cmc
or
pop
mov
pop
lcall
jne
aam
enter
mov
sti
xor
insb
es
fadd
insl
in
inc
in
ja
cmc
sbb
daa
rcr
mov
mov
repnz
xor
subb
icebp
adc
dec
push
and
push
call
lret
add
or
pop
lahf
pop
movsl
push
sahf
lea
mov
stos
jg
fs
inc
push
add
and
pop
add
xor
cmp
imul
mov
movsl
mov
or
pop
inc
mov
adc
and
fcmovnbe
mov
inc
adc
rclb
iret
xchg
cld
adc
mov
jno
push
push
inc
sub
fisubs
aas
stos
sbb
mov
adc
add
or
dec
inc
push
cmp
or
out
and
rolb
push
xor
loope
sarb
jno
and
mov
pop
and
pop
xchg
pop
xchg
in
movsl
rcrb
push
xlat
lock
dec
mov
push
popa
mov
cmpl
stc
jb
pop
and
in
dec
lea
fistps
negb
push
jmp
jg
js
addb
pushf
or
mov
jmp
repnz
add
repnz
dec
and
push
sub
sbb
lea
sbb
mov
and
lea
mov
xlat
inc
stos
sarb
test
roll
jl
dec
mov
lcall
dec
inc
adc
inc
sbb
cmc
imul
push
mov
pop
sarl
lret
xchg
stc
les
lahf
ficompl
pusha
sub
cmp
pop
and
xlat
pushf
cli
inc
cmp
push
mov
mov
jo
call
cmp
shrb
jge
inc
clc
add
leave
test
pop
std
ja
xlat
or
pop
stos
dec
mov
and
pop
lods
add
mov
ss
lods
iret
fsubrs
das
dec
push
inc
jnp
push
push
clc
jmp
inc
inc
fstl
leave
dec
jnp
mov
sbb
xlat
into
add
pop
push
push
addr16
mov
mov
jmp
pushf
pop
ja
orb
sbb
push
mov
mov
pop
out
mov
mov
mov
inc
test
jl
jmp
iret
sbb
lahf
mov
sub
cmp
jmp
mov
popf
push
xchg
or
xor
xchg
adc
in
aas
pop
mov
jno
repnz
outsb
dec
inc
lods
sbb
add
or
pop
push
push
loopne
mov
mov
dec
daa
jl
stos
fld
pop
sbb
jo
push
and
inc
adc
mov
stc
or
sub
xor
xchg
jae
rcl
mov
sub
jo
cltd
adc
js
mov
pop
jo
pop
lret
mov
bound
xor
pop
fidivrs
into
xor
pop
jne
mov
or
dec
push
shlb
or
xchg
clc
push
xor
fldcw
dec
sbb
int
ret
je
sbb
pop
ja
inc
lahf
pop
jae
push
scas
or
rorb
jo
cmp
jne
push
push
je
jno
ss
mov
sti
outsb
rcrw
fnstenv
cs
xchg
out
cltd
dec
push
jb,pn
stos
ret
lcall
ljmp
aad
aaa
dec
jae
fdivrs
dec
jnp
pop
call
fdecstp
cmpb
add
test
ds
push
call
popf
mov
lret
jge
aad
subb
mov
add
jmp
cmp
aaa
repnz
cmc
dec
fwait
pushf
xor
and
dec
loopne
jmp
mov
call
pop
mov
sbb
in
jmp
lcall
mov
dec
sub
xchg
jecxz
jmp
scas
lods
add
pop
arpl
xlat
nop
or
fwait
mov
in
and
ficomps
jo
pop
add
int
xchg
mov
dec
stos
out
jnp
cltd
or
push
mov
mov
xor
inc
ret
sti
mov
cltd
mov
jle
fisttpll
mov
adc
mov
and
cld
and
imul
out
jns
inc
ficompl
ret
shll
and
jp
mov
std
inc
sbb
adc
shll
imul
ss
push
and
sbb
fwait
xor
imul
repnz
call
cmpsl
pop
adc
cmp
pushf
out
insl
sub
mov
sahf
dec
jnp
in
xchg
mov
insb
pop
adc
lea
ss
test
dec
test
data16
mov
lahf
arpl
inc
aam
push
nop
push
icebp
mov
int
fsubp
ds
das
cmpsb
shrl
pop
xchg
inc
pop
fistpll
adc
inc
rcrl
mov
stos
cld
aad
mov
sub
cmp
add
sbb
inc
mov
xor
call
jmp
movsl
dec
push
push
dec
imul
xchg
sar
mov
arpl
lret
cmp
dec
push
inc
mov
dec
das
pop
lcall
add
add
and
pop
add
clc
push
xchg
xchg
xor
and
mov
testb
mov
lock
sbb
scas
in
xor
dec
mov
lcall
imul
shrb
pop
fs
xor
les
cmpsl
pop
out
cmpb
les
sbb
lret
js
or
mov
sub
or
sbb
inc
loop
and
mov
pusha
mov
repnz
push
sub
stos
inc
push
int3
outsl
jb
xchg
mov
cmpsb
sub
pop
and
aaa
stc
add
jge
pop
add
xlat
cld
pop
fld
mov
mov
int3
mov
push
add
cmp
sbb
test
inc
pushf
in
mov
aas
out
arpl
pop
int3
cli
pop
push
fcoml
out
xor
dec
adc
lahf
jne
dec
mov
jns
fsts
ret
scas
push
mov
lock
sarb
xchg
es
inc
cmp
jne
popa
out
test
cmp
lahf
cs
mov
jmp
add
addr16
adc
stos
and
sub
mov
das
adc
fsts
cs
stc
gs
or
leave
adc
mov
mov
fdivrs
or
adc
xchg
sub
insb
mov
stos
xorl
or
stc
inc
add
ds
lods
loope
jo
insb
pop
es
inc
xchg
dec
insl
in
and
mov
mov
repnz
stc
adc
cmp
mov
sti
xchg
cltd
daa
cmp
xchg
cltd
data16
stos
enter
dec
stos
push
dec
sub
xchg
cmp
mov
imul
addr16
pusha
mov
cmp
sbb
pushl
cmpsb
mov
pop
jp
outsl
xchg
test
pushf
jb
xchg
dec
and
insl
adc
add
rclb
add
lods
inc
jne
stos
jo
pop
xor
push
insl
mov
test
sbb
dec
xor
cmp
lods
mov
aaa
push
dec
movsb
xchg
xchg
jbe
shll
mov
movsl
xor
pop
lock
pop
adc
jb
push
pushf
ljmp
hlt
inc
adc
jnp
and
cwtl
fmull
lds
inc
out
daa
test
jbe
jle
adc
add
pusha
adc
lock
into
cltd
scas
jo
cmp
push
sub
pushl
push
jle
sbb
pop
adc
mov
cmp
adc
shlb
lods
push
push
iret
inc
cmpsb
lds
or
lret
pop
and
int3
mov
xorl
insl
das
cmc
sub
fidivrl
xor
adc
scas
in
ljmp
jo
lds
jbe
shlb
repnz
notb
adc
dec
stos
or
mov
pop
scas
daa
xor
daa
out
xor
test
pop
sahf
cmp
aas
divb
push
lcall
jmp
fdivr
mov
stos
test
out
arpl
mov
in
dec
xor
mov
hlt
sbb
jecxz
cmp
inc
or
push
mov
pop
fisubrs
call
imul
cmpsl
bound
mov
into
ja
xor
cmpb
rcrl
ret
cmc
and
sub
cwtl
or
mov
bound
ja
dec
and
out
negl
mov
into
nop
cmp
mov
dec
xor
or
pop
xor
dec
cmp
lea
std
add
pop
das
dec
sub
les
rcll
mov
scas
ret
xor
ficomps
mov
out
in
aad
sub
insb
adc
leave
popf
test
sub
lock
lcall
arpl
imul
int3
push
cmp
xchg
ljmp
sub
into
lds
dec
lock
ljmp
xchg
dec
loopne
mov
out
fwait
aas
in
daa
jo
dec
inc
gs
push
xchg
and
aas
inc
outsl
xchg
iret
inc
aas
into
cwtl
xor
and
xchg
mov
push
aam
mov
sbb
push
sbb
popa
ss
divb
mov
lds
lret
fwait
jb
int3
xchg
push
fldcw
sbb
in
mov
js
and
rorb
mov
imul
or
mov
mov
ficompl
push
lret
inc
push
dec
adcb
pop
or
mov
and
mov
mov
push
shll
or
frstor
adc
jns
or
scas
push
mov
push
cmp
cltd
sbb
dec
and
bound
dec
jmp
sbb
and
in
jne
je
cwtl
lea
stos
pop
mov
outsl
popa
pushf
ret
cld
and
mov
mov
ret
xor
jp
lods
ja
dec
pop
dec
push
xchg
shrb
lret
inc
sbb
adc
sahf
jbe
xor
push
inc
jae
xorb
xchg
and
ljmp
lret
roll
sahf
fwait
cmc
inc
js
dec
and
mov
xchg
cmp
mov
push
mov
lahf
mov
adc
fistpll
fisttps
pop
and
adc
push
fcoml
dec
or
cmpsb
jecxz
scas
push
xchg
mov
jo
ljmp
jle
sub
cmp
adc
xchg
sbb
popa
mov
arpl
mov
cli
aas
enter
push
mov
jo
out
push
imul
ss
xchg
xchg
lds
mov
dec
subb
push
leave
sbb
aaa
dec
jns
in
mov
mov
sub
insb
in
repnz
je
outsl
push
push
out
mov
adc
out
xor
sbb
cmp
xchg
in
mov
jno
jp
cwtl
sub
mov
mov
jmp
inc
aas
fistps
inc
dec
cli
test
in
xchg
testb
xchg
inc
add
dec
fstp
imulb
jne
lret
test
out
mov
jle
mov
scas
xchg
mov
push
mov
mov
add
dec
shll
mov
addl
and
mov
cmp
adc
mov
pop
adc
les
lds
sub
lahf
ss
xor
add
lret
and
ja
ss
out
mov
addr16
sarb
pop
out
pushf
add
cltd
mov
shlb
push
imul
mov
fisubrl
xchg
out
lcall
setp
cmp
and
fdiv
adc
push
adc
cmp
sub
test
xor
test
jns
in
out
js
pop
add
lods
imul
cmp
repnz
xchg
or
dec
cmp
add
jbe
cmpsl
adc
mov
das
int
inc
lcall
sbb
enter
sbb
pop
movsb
inc
mov
pop
orl
pop
or
cmpsb
mov
jne
dec
cld
jl
and
leave
cmpsl
aad
add
cmpb
or
mov
xor
cmp
xchg
xor
adc
adc
mov
insb
mov
das
pop
add
xor
je
jmp
xchg
incb
hlt
shll
jmp
mov
aas
test
push
repnz
add
push
inc
dec
add
sub
pop
sbb
jp
xchg
mov
push
and
test
sbb
xor
fcoms
and
and
hlt
fistps
out
sbb
orb
into
jne
es
int3
les
xchg
int3
pop
adc
stos
repz
loope
loop
fs
sbb
es
xchg
mov
push
cmp
mov
pop
mov
cmp
jmp
push
add
cmp
mov
and
test
nop
test
inc
loope
dec
mov
repz
xchg
adc
pop
negl
and
cli
insb
shll
sub
cmp
nop
xchg
sarl
sub
mov
pop
push
stc
jne
push
lret
imul
add
push
inc
inc
lods
xor
push
lods
xchg
cld
test
jecxz
popa
test
mov
mov
sub
mov
sub
inc
push
das
xor
int3
xchg
enter
xchg
or
pop
lcall
cmpsb
push
add
sbb
inc
mov
sbb
rclb
insb
sub
add
or
pop
out
or
mov
inc
gs
mov
adc
int
dec
adc
out
adc
mov
inc
ss
sub
mov
cld
enter
pop
orl
dec
inc
fildl
xor
inc
sub
and
mov
aam
enter
out
and
cmc
mov
ss
ret
push
jle
push
mov
repz
and
xchg
add
cltd
mov
notb
scas
sbb
push
leave
mov
xlat
fwait
shrb
aad
subl
xchg
cmp
sub
mov
lds
dec
jbe
nop
inc
in
or
out
imul
loopne
push
sub
and
push
pop
mov
mov
dec
cli
push
shll
xchg
js
inc
imul
shlb
test
jmp
repz
fdivl
jge
lds
jo
fwait
cmp
fstpt
int
xor
nop
mov
das
xor
adc
adcl
add
lret
cmpsl
add
sub
pop
mov
add
xchg
stos
mov
pop
cs
sbb
js
scas
je
mov
fisttpll
rcl
and
inc
aaa
arpl
xorb
mov
das
or
out
sub
call
lds
sbbl
dec
test
pop
add
aaa
mov
je
mov
mov
push
add
loop
out
add
shll
fcmovnu
mov
mov
sti
inc
cmc
lret
push
in
leave
ja
fs
sub
hlt
adc
fisttpl
popa
or
and
dec
jle
aaa
xchg
out
pop
shr
mov
outsl
dec
fwait
cli
mov
xor
shll
xorb
or
jo
fwait
and
subb
or
sub
cmpsb
roll
sarb
add
mov
push
mov
movsb
ret
pop
inc
les
mov
mov
dec
inc
dec
icebp
sub
repz
sub
jge
push
adc
nop
cmp
daa
orb
fwait
sub
mov
lods
icebp
fcmovnu
fmuls
xchg
push
nop
jmp
mov
mov
int3
and
jge
movsl
pop
insl
mov
in
jp
adc
mov
out
sub
andb
mov
stc
add
je
leave
pusha
push
loope
sbb
mov
push
cmp
mov
out
sub
xor
and
mov
ljmp
test
mov
out
test
fldenv
out
fbld
jo
jnp
data16
pop
push
sbb
xchg
jl
dec
pop
test
fnsave
xchg
push
add
ds
repz
cmc
jmp
outsl
add
cli
fstpt
fisttpll
enter
sete
test
push
adc
xchg
cmc
sarl
pop
add
shll
incb
add
cmpsl
pop
test
push
repz
mov
add
mov
shll
pop
inc
js
mov
sub
dec
cmp
ret
movl
ja
das
and
lods
jp
mov
aam
pop
jo
pop
mov
add
shll
jecxz
mov
xchg
movb
or
and
xchg
xor
jle
xlat
pop
fisubs
mov
movsb
imul
pop
push
sbb
mov
gs
mov
sbb
sbbl
push
outsb
std
lea
mov
lods
pop
fnstenv
dec
mov
cmp
dec
daa
sahf
or
mov
adc
dec
jmp
out
aam
negb
or
int
in
js
mov
mov
and
cmp
hlt
mov
inc
pop
imul
ret
repz
or
sbb
pop
xchg
xchg
ds
lcall
adcb
dec
outsb
fidivl
nop
enter
dec
cmpsl
xor
cmc
int
sbb
jno
xor
adc
dec
cmp
test
push
pusha
movsb
into
pop
adc
inc
in
or
add
les
mov
rclb
outsb
sti
jl
cmp
insl
lret
imul
sub
mov
jb
ja
das
cmp
mov
shl
pop
mov
sbb
add
pop
ret
dec
je
imul
pop
inc
xchg
lods
dec
dec
imul
andb
iret
ds
out
mov
rolb
ss
in
popf
psrlq
cmpsb
dec
jmp
inc
sub
mov
fcom
push
adc
out
lret
xor
jp
or
shlb
mov
jno
in
es
divb
jns
add
scas
add
push
ljmp
sti
nop
stos
lods
pushf
pop
icebp
adc
nop
inc
or
pop
xor
adc
icebp
pusha
dec
cli
mov
in
mov
adc
addr16
cmc
repnz
push
pop
adc
ds
fcoms
bound
std
or
cmpsl
adc
mov
daa
loope
cli
inc
sub
jne
sbb
ktestb
fnstenv
mov
in
in
int
into
call
inc
pop
xchg
lds
xchg
ret
mov
daa
xchg
dec
xchg
push
test
lods
fdivrl
and
decb
inc
sbb
pop
es
lahf
out
mov
pop
xchg
sub
outsl
dec
enter
sub
test
mov
divb
pop
arpl
lock
inc
cmp
popf
xchg
ret
add
fwait
sub
mov
out
or
or
or
xor
jns
ret
or
inc
mov
out
aad
mov
push
dec
lds
sub
in
push
std
xor
jmp
ds
and
jbe
xor
not
sub
mov
jnp
das
mov
dec
sbbb
cltd
mov
pop
xor
jns
sbb
repz
mov
fistps
ss
clc
popf
cmp
rcrb
mov
andb
xchg
lahf
mov
xchg
cmpb
pop
push
add
out
xchg
pop
aas
and
xchg
xchg
inc
xchg
ja
aad
and
inc
stc
in
and
jmp
adc
loopne
pushf
push
inc
xorl
pop
jns
cmp
xlat
hlt
cs
mov
sub
cmp
adc
lahf
push
ljmp
inc
int
call
icebp
negb
mov
lods
pop
mov
sti
xchg
sahf
imul
ret
or
jnp
mov
lahf
push
pop
or
and
mov
xor
jle
sbb
jmp
xchg
mov
pop
clc
sbb
and
lcall
jl
jecxz
push
pushf
in
pop
jecxz
sti
mov
add
ss
loop
push
and
or
addl
mov
in
sub
jae
lods
das
push
jo
add
xchg
push
ror
or
xchg
or
mov
cltd
push
rorl
addr16
pop
xchg
fisttpl
cld
push
push
pushf
or
fwait
scas
shlb
scas
jle
adc
mov
dec
and
sub
int
xchg
pop
dec
roll
or
jg
cli
mov
icebp
push
push
mov
inc
jb
pop
movsl
inc
push
in
testb
jp
cmpsl
jecxz
or
fdivs
adc
pushf
ror
je
shr
test
das
mov
inc
xor
push
push
mov
jl
dec
sbb
subb
gs
mov
mov
mov
pop
out
pop
sbb
xor
xadd
cs
fucom
push
mov
inc
icebp
std
pushf
or
pushf
jge
fsts
pop
sbb
xchg
sub
mov
push
negl
aam
fsubrp
xchg
call
aam
movsb
cmp
daa
or
int
sbb
testb
inc
outsl
filds
call
out
outsb
test
pop
mov
arpl
xor
aad
test
leave
mov
mov
loopne
pop
jbe
les
je
stos
out
shrl
scas
xor
sbbb
mov
mov
mov
pusha
lods
lock
out
test
dec
hlt
mov
dec
push
lds
mov
mov
out
xor
push
and
in
and
ret
sbb
adc
mov
fcmove
imul
addr16
sti
mov
mov
mov
or
in
jl
lods
mov
mov
mov
out
add
adc
mov
or
jo
aaa
jo
push
inc
fldt
push
sub
cmp
mov
stc
test
sub
mov
clc
add
mov
jmp
pop
push
mov
lods
lds
fwait
nop
dec
cmp
pop
clc
scas
insb
add
repnz
push
cltd
loope
iret
jl
sar
aad
cltd
gs
call
push
mov
repnz
in
bound
jmp
jne
ror
leave
dec
add
das
pop
cmp
cmc
sahf
inc
imul
push
lcall
loope
adc
imul
add
xor
popf
mov
sbb
ret
jg
gs
xor
and
cmc
imul
out
lods
mov
add
sbb
hlt
mov
xor
mov
or
adc
pop
or
mov
lcall
xchg
cld
add
int
push
add
lcall
icebp
stos
int
cmp
mov
inc
imul
or
mov
aad
push
adc
insl
add
divb
mov
out
loopne
and
ret
je
cmpsl
je
mov
push
jbe
es
popl
cmp
push
add
adc
sbb
fidivs
popf
adc
jmp
fdiv
in
loope
sbb
insl
jmp
fists
loop
mov
pusha
or
or
test
xchg
lcall
int
stos
fucomip
lret
fistl
insb
shrl
repz
loop
lods
sahf
xor
addb
adc
pop
sahf
dec
push
sbb
push
stc
lret
push
pop
cmp
fwait
loopne
in
and
pop
adc
dec
jnp
popa
call
adc
jp
imulb
inc
pop
sbb
xor
sub
shlb
xor
pushf
mov
pop
mov
adc
es
out
xchg
pop
rclb
ljmp
outsb
and
shrb
sub
data16
fwait
mov
sbb
mov
mov
jge
out
push
mov
js
lcall
cmp
arpl
xor
xchg
xor
xchg
shl
outsb
sub
out
and
inc
or
ret
xchg
es
xchg
mov
ja
incb
cmp
jp
dec
jb
pop
mov
xor
pop
cmp
popa
pop
adc
adc
mov
inc
in
popa
mov
imul
xchg
pop
jecxz
push
jbe
stos
pop
loop
mov
push
mov
dec
out
cmpsb
and
cmp
ja
pop
xchg
pop
mov
lods
dec
sbb
repz
push
in
inc
lcall
pop
xchg
inc
jo
addr16
test
lret
add
cmpsl
mov
sbb
and
aad
sahf
pop
mov
jmp
lods
test
jecxz
arpl
popf
pop
jl
orl
mov
imul
mov
scas
mov
fwait
outsl
in
outsl
adc
int3
mov
in
test
mov
imul
jmp
push
cmp
dec
mov
adc
push
and
mov
loope
push
sub
scas
ss
push
mov
jbe
push
neg
mov
into
int
push
mov
xor
outsb
out
inc
jne
jg
cltd
movsl
lret
test
dec
je
push
jno
or
sbb
in
pop
mov
mov
idivl
ret
bound
pop
ret
mov
pop
rclb
cmpsb
lea
test
adc
cmp
pushf
push
shlb
shl
je
xchg
scas
or
jmp
xchg
sbb
xlat
mov
scas
sbb
or
mov
mov
adc
jle
loop
rcll
lock
mov
mov
lds
dec
out
imul
adc
and
inc
xchg
push
dec
inc
fcoms
insb
add
sahf
cmp
mov
cmp
divb
arpl
ds
dec
xchg
sub
jp
pop
arpl
sbb
dec
movntq
hlt
lock
mov
xor
pop
enter
push
add
mov
adc
jmp
jp
or
mov
sub
insb
jbe
arpl
fadd
xchg
inc
enter
int
inc
mov
xchg
jge
insb
jmp
sbb
rolb
test
jns
cwtl
movsb
push
test
or
sbb
iret
test
push
movsb
lea
mov
xchg
loopne
mov
mov
sub
push
xor
loope
dec
mov
push
in
int
push
jno
lds
call
aam
data16
inc
mov
xchg
xchg
loopne
incl
add
dec
outsb
add
mov
xchg
xor
int3
dec
sbb
dec
jne,pt
xchg
negb
cmp
and
loop
lea
stc
mov
jp
cmc
out
loopne
mov
xor
inc
jmp
or
mov
dec
test
cmp
mov
movsb
dec
int
int3
jo
lret
push
arpl
lea
popa
jo,pt
ss
adc
mov
xor
shlb
ficomps
pusha
inc
mov
scas
iret
cmpsl
fs
sarb
and
ret
fdivrs
movsl
notl
sahf
ss
div
push
cld
roll
dec
stos
lahf
mov
enter
cmp
icebp
mov
data16
push
dec
and
test
mov
movsb
and
test
dec
arpl
inc
xchg
imul
stc
adc
jne
jo
jbe
iret
mov
movl
rcrl
fcmovnb
jg
sbb
cltd
push
add
adc
fs
popa
mov
adc
xchg
jmp
cmp
mov
sub
lea
add
daa
push
jl
gs
in
lcall
lret
pop
push
cs
cmp
enter
fdivp
out
xchg
rcrl
ds
call
ret
cmpxchg
pop
outsl
jl
mov
lahf
add
stos
push
sbb
js
lea
xlat
addr16
out
push
jae
pop
pop
or
js
mov
push
jmpw
xor
ss
xchg
leave
cmp
mov
xor
ja
fcmove
repnz
cmp
nop
enter
mov
jl
gs
lcall
stos
or
xchg
sti
imul
sbb
repz
inc
mov
jle
loope
js
aas
lea
popa
aam
push
add
jg
jnp
mov
sar
fcomip
add
pop
lods
jg
inc
cld
fsubrl
in
sub
je
jnp
push
scas
adc
pop
push
xchg
popa
add
pop
push
cmp
ret
nop
adc
or
mov
sub
adc
clc
adc
filds
adc
data16
es
jge
mov
repnz
xchg
pop
xchg
pop
cli
pop
xchg
adc
push
cmp
mov
mov
fcomi
aad
dec
les
es
sub
mov
xorl
and
inc
xchg
js
sbb
xor
xor
popa
cli
jle
mov
cmp
sub
inc
mov
in
push
pop
pop
mov
adc
and
jne
stos
sub
mov
and
fmuls
rolb
cld
jnp
lcall
ficoml
std
inc
jmp
xlat
roll
pop
adc
and
sbb
imul
mov
neg
ljmp
or
xchg
fidivl
fistl
lds
ja
dec
sti
movsb
insb
arpl
push
cs
jnp
out
out
dec
dec
test
sub
pusha
xchg
push
imul
xorb
pop
mov
inc
out
movsb
mov
dec
push
pop
cmp
scas
sub
mov
push
mov
sub
mov
sub
hlt
dec
dec
mov
inc
push
mov
addr16
out
out
sub
int
es
outsb
iret
fdivs
jecxz
pop
subb
sbb
lods
clc
ja
daa
and
jb
std
lahf
xlat
retw
push
stos
mov
mov
bound
mov
push
imul
scas
jae
cmc
test
push
push
dec
dec
es
xor
idivb
cmpsb
sbb
pop
mov
sub
out
pop
push
mov
push
sub
cmpsb
mov
mov
push
sar
or
mov
pop
and
shrl
inc
lds
mov
pop
clc
lock
and
out
loop
addl
sbb
jge
pop
mov
fisubs
cmp
inc
mov
adc
mov
lock
push
ja
xchg
push
sbb
cld
jl
adc
iret
js
push
mov
rclb
rcll
cmp
cmp
or
mov
sub
ds
stos
jle
icebp
add
dec
and
jbe
das
xor
loope
push
mov
and
cmp
es
pushf
xor
xor
pusha
jl
aas
jae
lock
cmp
cwtl
push
mov
lea
notl
push
repnz
stos
shll
cli
cwtl
cmp
cmpsb
xchg
add
pushf
das
or
mov
xor
fstpl
and
push
stos
sub
fists
xor
pop
sbb
push
ret
cmc
popa
push
imul
pusha
push
xchg
push
add
and
lret
pusha
mov
std
push
xor
inc
jo
push
sub
lcall
nop
or
or
aam
add
sbb
fisubrl
lret
xchg
out
add
or
lea
and
popa
lods
incl
test
daa
scas
idivb
pop
add
jae
gs
mov
xor
ja
lods
pushf
mov
dec
adc
push
and
lods
ror
pusha
pop
jmp
rolb
xchg
xbegin
pop
out
xor
addr16
push
xchg
adc
divb
je
rcrl
sarl
push
cmpsl
xchg
pop
and
in
add
push
xor
and
lods
and
mov
pusha
fsts
ret
cmp
aaa
mov
std
pop
stos
or
ljmp
clc
fisttpl
dec
adc
jle
stos
mov
jb
fistl
in
in
xor
xor
push
icebp
test
pushl
dec
jecxz
jno
orb
add
std
sub
imul
adc
jp
js
sbb
xor
inc
or
out
push
ret
xchg
mov
mov
leave
or
pusha
and
sbb
js
xor
mov
popa
fs
mov
or
xchg
push
mov
ficomps
xor
cmp
in
and
sti
mov
pop
mov
pop
ds
pop
mul
fsts
das
das
mov
in
cwtl
out
imul
push
cmp
jns
add
das
xchg
loopne
fwait
push
and
or
ds
lcall
arpl
iret
jo
mov
int3
xchg
cmp
mull
sbb
push
dec
xchg
aas
sbb
cli
jae
xor
inc
or
sbb
or
or
jge
dec
mov
pop
push
xchg
adc
int3
add
xor
sahf
mov
xor
in
das
sub
cmp
sbb
scas
xor
outsb
dec
into
ljmp
and
dec
aaa
inc
pop
dec
bound
sub
fwait
and
popf
add
insl
mov
cmp
xchg
lret
and
lods
movsl
imul
mov
push
mov
lahf
call
add
nop
xchg
fstps
arpl
xor
xchg
and
and
inc
mov
test
loope
push
xchg
leave
jnp
sbb
cmp
loope
sbb
fs
decl
fs
in
dec
inc
sbb
out
push
popa
fsts
cmp
pop
push
dec
hlt
jg
rclb
cmp
cltd
es
bound
mov
loope
cmp
fs
fnstsw
jp
mov
sti
and
xor
bound
in
pop
jnp
cs
mov
dec
xchg
cltd
rorb
and
adc
fmuls
gs
cs
mov
push
mov
aas
mov
popl
cmp
imul
cld
rcl
cmpsl
sbbl
outsl
testb
mov
rolb
adc
mov
sti
popf
dec
addr16
stc
pop
cmp
clc
jl
mov
loop
in
ds
mov
dec
mov
sub
call
mov
movb
clc
repz
or
mov
les
add
inc
je,pt
mov
and
sbbb
lea
lret
test
fdivp
rorb
cwtl
cmpsb
repz
es
jae
add
bound
andl
jg
sbb
es
daa
mov
jp
inc
enter
push
arpl
ret
xchg
call
nop
sub
mov
test
pop
push
pop
cmp
mov
out
mov
dec
add
mov
iret
cmp
push
mov
movsl
and
sub
ret
sbb
mov
ret
xchg
xor
pop
adc
sbb
popf
sub
dec
shr
mov
fwait
out
rcll
sbb
ret
es
jbe
out
scas
or
rorl
mov
std
pop
mov
pop
dec
aas
daa
push
jo
cltd
mov
aaa
ret
bound
stos
out
mov
idivl
fwait
out
jg
push
mov
sti
mov
loopne
nop
inc
in
sub
repz
in
stc
adcb
cmpsb
popf
cmp
lea
mov
lcall
inc
imul
jecxz
in
jbe
jne
inc
fwait
mov
inc
ds
loopne
test
shrl
cld
xchg
pop
jns
cltd
movsb
scas
xlat
push
pushf
rcl
imul
xchg
xchg
pushl
enter
inc
xchg
inc
shll
data16
add
lods
add
call
outsl
repnz
mov
not
rcr
and
jecxz
out
notrack
bnd
cltd
orb
outsl
pop
lret
sub
out
orl
repz
in
mov
inc
xchg
push
lret
pushf
xorb
test
dec
add
sbb
and
sti
out
jnp
or
push
add
and
test
inc
sbb
add
push
int3
push
jmp
pop
test
jmp
xchg
pop
fdivs
cld
cmp
das
push
mov
stos
mov
test
pop
cltd
cmp
test
xchg
sub
lock
mov
imul
fwait
call
xor
push
sbb
setno
stc
mov
jecxz
add
xor
push
inc
dec
add
cmpsl
aas
mov
daa
mov
stos
imul
mov
fcompl
inc
das
mov
sahf
mov
adc
sub
sarb
sbb
ljmp
out
push
sub
stc
sub
mov
xor
push
mov
loop
sub
in
out
mov
push
xchg
or
jns
movsb
cmp
scas
cmpsb
mov
int3
adc
fdivl
js
out
out
push
ret
fsts
push
or
mov
xor
out
and
cld
call
and
xchg
jl
dec
mov
xchg
jp
jmp
lcall
bound
mov
mov
cmpsl
push
ljmp
gs
lret
test
sbb
ss
jno
adc
negb
lock
movsl
or
jnp
int
hlt
idivl
mov
movsl
int3
xor
mov
xor
andl
jl
mov
ret
bound
mov
ss
and
bound
mov
jbe
std
inc
push
jnp
adc
cmpsl
rcrb
push
or
push
arpl
fcoms
enter
insb
inc
leave
fisttps
std
mov
notb
xchg
daa
aad
cltd
mov
test
mov
jg
mov
push
push
mov
mov
sbb
fistps
rorl
mov
mov
sub
mov
popa
aas
getsec
xchg
push
sbb
fbstp
inc
fsub
ja
std
mov
or
pusha
xchg
inc
push
mov
xor
sub
ljmp
lods
ret
cmp
sbb
inc
jg
scas
pop
pop
push
inc
mov
int3
jg
lods
xchg
pop
xchg
sar
mov
loopne
dec
sbb
icebp
int
add
aam
inc
dec
mulb
mov
and
testl
lock
aad
scas
shll
cmpsb
out
dec
push
mov
cmp
div
cmc
and
pop
daa
add
fstl
jl
loopne
enter
and
imul
pop
xchg
cmp
xchg
and
jmp
add
fbstp
mov
dec
loope
dec
cmp
sub
div
pop
jmp
xchg
mov
cmp
sarl
mov
mov
push
fsubrl
clc
mov
xor
iret
mov
scas
dec
mov
xchg
mov
fwait
das
fs
imul
mov
negl
cwtl
cmp
in
cmp
mov
daa
mov
ss
mov
cmc
add
mov
dec
or
unpcklps
push
push
pusha
mov
lcall
lcall
aad
or
jle
cmp
out
xlat
aas
add
push
and
jae
jle
push
shl
cmpsb
mov
mov
xchg
jge
test
adc
popl
sub
or
pop
mov
pop
jle
in
mov
xchg
out
sti
loope
mov
cmp
and
mov
xchg
pop
sub
add
fs
inc
cmp
cld
pop
mov
pop
xchg
insl
jp
rorb
lcall
push
mov
lahf
mov
jbe
mov
xchg
test
cltd
adc
lea
inc
out
aas
jp
or
int
push
add
add
cli
mov
dec
popf
mov
jo
ljmp
aaa
movnti
hlt
jo
sub
imul
pop
push
or
popa
adc
divb
cmpb
pusha
sar
dec
out
cmpsl
sbbb
sbbb
test
dec
aas
sti
cmp
fadd
dec
pop
or
mov
mov
ret
xor
sbb
in
inc
sub
sti
pop
mov
push
jl
test
mov
shlb
dec
loopne
incb
jmp
and
jl
push
lds
mov
loope
cmovg
in
aas
mov
pop
pushf
mov
push
mov
add
cmp
jbe
push
pushf
push
push
daa
xor
fbld
pop
notl
aad
subb
sbb
mov
push
sar
inc
mov
shlb
outsl
ficoml
xor
and
mov
out
xor
adc
cld
hlt
pop
stc
inc
mov
dec
fs
lock
mov
jle
fisttps
push
jp
mov
lods
orl
outsb
xchg
cmp
dec
lock
xchg
inc
rcr
dec
cmc
xchg
add
push
mov
fstpt
push
push
stc
dec
cmc
xchg
push
xchg
jne
and
or
sar
inc
hlt
int
pushf
cmp
mov
xor
stos
adc
mov
ffreep
mov
fucomip
daa
mov
gs
add
or
and
das
daa
and
add
sbb
iret
call
push
mov
inc
addl
push
stc
dec
sti
mov
gs
jmp
push
popa
inc
nop
push
lods
shlb
lret
push
add
test
les
in
iret
adc
mov
jb
mov
mov
movsb
add
jge
nop
fwait
outsl
dec
and
push
inc
push
call
fmuls
scas
mov
and
in
subb
push
adc
mov
lock
mov
cwtl
sub
and
sti
dec
inc
subl
inc
sahf
dec
mov
push
sub
aad
sub
push
and
outsb
or
lods
rorl
lret
repnz
xor
test
pop
das
dec
sti
stos
dec
mov
es
add
sub
lds
and
pop
dec
mov
inc
jno
pop
mov
je
out
mov
cmp
sub
enter
int3
lret
cmp
add
scas
jl
cmp
fdivp
js
movsb
pop
jno
adc
test
test
js
push
hlt
in
cltd
test
sti
dec
test
int3
mov
xchg
outsl
fisttps
sbbb
and
mov
pop
aad
pop
daa
and
popa
arpl
or
divl
or
mov
dec
adc
mov
adc
scas
sbb
shlb
dec
push
mov
sti
and
inc
dec
cmp
push
dec
jnp
mov
mov
add
jmp
pop
in
mov
xorl
add
or
shlb
mov
les
cltd
ds
dec
push
push
and
nop
mov
pop
sbb
shrl
or
mov
mov
popa
sub
daa
cmp
xor
vmovaps
xchg
in
out
stc
sbb
mov
into
mov
les
push
lahf
mov
and
rol
ror
jae
insl
mov
sub
addr16
jae
xchg
mov
lea
mov
or
aas
stos
enter
inc
xchg
cmpl
xchg
loopne
xchg
lahf
test
push
bound
shlb
xchg
mov
je
dec
repz
push
cmp
xchg
sub
or
mov
fisubl
lahf
xchg
dec
addb
call
in
or
jp
cmc
add
into
out
popa
aaa
mov
jmp
cmpsb
sbb
cltd
pop
lcall
cmovo
lret
and
sub
pop
sub
push
outsb
mov
push
jb
mov
outsl
cmp
mov
cli
paddq
fidivrl
mov
adc
icebp
pop
and
xor
jle
lods
fwait
push
sub
add
dec
push
scas
pop
xor
sub
xchg
sub
pop
mov
pop
insl
fnsave
mov
lret
adc
inc
pop
add
loop
push
jle
fildl
loope
lahf
cmpl
mov
das
bound
xlat
add
add
cli
sbb
ficoml
jg
lret
insl
out
jns
ja
popa
jae
jb
mov
int3
jecxz
loope
mov
leave
pop
xor
imul
test
mov
adc
lea
cwtl
pusha
jl
mov
ret
xchg
inc
test
or
shl
cmp
sbb
gs
mov
mov
mov
subl
jmp
sbb
sbb
sbb
lahf
xorl
repz
push
shlb
loop
idivl
jno
mov
mov
sbb
pop
dec
mov
ljmp
pop
and
sbb
jo
in
xor
movsb
sub
addr16
mov
mov
jnp
lret
addr16
inc
cmp
pop
cwtl
xor
rorl
xchg
insb
shl
out
mov
insl
add
hlt
push
mov
sbb
pop
iret
loop
popa
mov
adc
popa
push
fistps
pop
stos
jbe
test
add
inc
or
mov
sub
scas
les
stc
stos
xor
lret
cmpsl
jge
pop
adc
cmp
or
mov
mov
sub
jl
sub
adcb
jge
jmp
fcmovu
mov
add
add
outsl
dec
push
imull
out
and
sar
pop
inc
mov
xchg
in
sub
adc
add
xchg
mov
cmp
in
mov
stos
pop
mov
mov
jns
clc
mov
cwtl
xor
pop
dec
xlat
pop
lea
pop
push
jl
cwtl
lods
mov
adc
call
jge
mov
lcall
sbb
xchg
pop
inc
jb
sub
adc
call
lock
daa
ss
ret
cmp
xor
stc
data16
mov
xchg
mov
rorb
cmp
call
das
xchg
nop
test
sbb
dec
mov
lea
ljmp
mov
dec
mov
pop
push
ret
pop
in
outsl
cltd
mov
lea
in
push
jp
push
xor
stos
sbb
xchg
aaa
mov
adc
fildl
jo
adc
add
ror
xchg
ds
mov
sub
out
imul
xor
jecxz
pop
mov
cwtl
dec
lea
repz
dec
leave
jg
add
shrl
adc
pop
or
daa
test
ljmp
ds
ljmp
mov
clc
pop
push
lret
jbe
loop
jnp
and
mov
inc
ja
inc
mov
int
ret
pop
sub
jae
mov
scas
stos
out
and
mov
jecxz
and
ja
jns
mov
or
ljmp
pop
push
cmp
out
mov
mov
out
jae
lahf
inc
mov
stos
mov
dec
add
outsb
pop
xor
pushf
xorl
cmp
pop
push
lods
and
xchg
popf
cmpsb
fildll
outsb
xchg
sbb
jl
cld
fwait
inc
iret
xor
decl
loope
pop
jb
cmpsl
and
pop
mov
stc
xchg
fstps
int3
sub
or
movsb
decl
das
enter
sbb
push
pop
mov
inc
add
dec
and
sub
sbb
je
call
mov
mov
xor
insl
std
jnp
sub
mov
int
jb
out
xor
sub
mov
jno
jl
insb
in
inc
dec
out
mov
jno
pop
or
mov
adc
xchg
je
push
push
jo
pusha
out
add
pop
imul
loop
mov
mov
jae
sbb
pop
dec
pop
es
imul
test
hlt
inc
subb
add
shll
pop
jp
sbb
sbb
mov
scas
push
jnp,pt
inc
les
dec
mov
frstor
jp
lock
pop
cmp
pop
push
nop
pop
int
test
shlb
sti
mov
enter
inc
call
loopne
hlt
std
out
sub
lret
mov
fwait
aad
sarb
sbb
test
push
xchg
jns
in
xlat
pop
je
pop
cli
push
idiv
scas
daa
cmp
das
xchg
test
sbbb
popa
mov
mov
mov
mov
sbb
out
ljmp
loope
push
mov
adc
scas
xor
mov
test
rolb
mov
mov
adc
jne
das
mov
iret
loopne
outsb
bound
cld
lcall
addr16
jnp
mov
subb
mov
sbb
pop
out
and
adc
insb
in
daa
outsl
mov
cmc
push
xor
and
xor
call
mov
arpl
fimull
cmp
in
das
sub
xchg
adc
jmp
iret
sbb
fisubrs
adc
mov
adc
sbb
push
je
bound
sahf
cmp
hlt
lea
test
jno
lock
adc
xchg
outsl
mov
rorl
cmc
adc
test
nop
movsb
mov
inc
loop
dec
outsl
out
fcomps
cmp
add
popa
push
movb
sarb
rcll
add
xchg
jecxz
push
sub
xchg
cmpsb
shrl
xchg
mov
test
enter
sub
pop
push
mov
mov
jle
cmp
int
int
test
mov
orl
mov
adc
sbb
jne
mov
imull
or
sbb
in
iret
jmp
pop
rcrl
cmpsl
jle
scas
add
pop
in
add
test
ret
adcl
addr16
fsubl
push
xorb
ret
sbb
mov
bound
cmp
out
cltd
mov
pop
xchg
and
pushf
cmp
hlt
jb
leave
fcompl
jne
pop
loope
mov
icebp
inc
movsb
in
and
bound
or
mov
jecxz
jne
jns
dec
cmp
push
lcall
sahf
adc
push
adc
gs
xor
xor
out
push
xchg
inc
jno
jle
addr16
push
xor
mov
arpl
fwait
or
lcall
cwtl
fmull
aas
nop
sub
jae
push
jl
scas
adc
dec
cmp
add
mov
popa
pushf
lock
mov
jecxz
insl
fisubs
leave
iret
mov
je
scas
ds
jg
dec
divl
bound
pop
movsl
push
pop
ljmp
xchg
jbe
mov
xchg
mov
mov
popf
enter
mov
bswap
enter
fwait
xlat
mov
lds
movsl
jp
and
cwtl
rcr
jne
dec
and
and
nop
insb
mov
stos
xor
clc
jecxz
push
je
les
jle
mov
cmpsb
mov
or
cwtl
arpl
test
out
mov
pop
jp
clc
jno
cli
out
outsl
dec
out
and
lods
mov
fnstcw
sub
add
cwtl
xor
jg
nop
adc
adc
xchg
ss
add
cmp
mov
or
pop
aam
and
mov
xchg
and
arpl
movsb
jge
fcomip
or
inc
pop
es
les
cmpsl
sub
lds
jg
push
or
jbe
sti
in
or
incl
daa
fimuls
loop
jge
mov
sahf
int
or
push
inc
or
sbb
jne
sti
imull
add
mov
lret
popa
scas
mov
cli
mov
xor
jp
sbb
jp
or
mov
mov
add
mov
lcall
and
inc
test
stc
js
xchg
cli
test
and
daa
rorb
popa
out
xchg
jb
cmpsl
test
cmp
aad
jns
fiadds
fsubrl
xchg
mov
dec
push
jb
aaa
into
adc
or
jle
and
das
sahf
ljmp
cmp
loopne
adc
jmp
aaa
jg
cmp
or
aad
sbb
cmc
sub
sarb
ds
xor
push
scas
in
je
add
cld
push
xchg
test
add
aas
or
out
sbb
popa
lret
in
je
fcom
adc
push
mov
pop
push
cmpsb
div
outsb
inc
rcll
lods
dec
faddl
mov
ss
jnp
or
rorl
add
outsb
pop
shlb
and
shlb
or
gs
mov
clc
adc
jmp
add
fisttpl
mov
test
and
push
dec
dec
fnstenv
in
xor
cmp
and
jle
pop
lds
aad
sarb
mov
lret
adc
mov
idivl
mov
inc
and
inc
cmp
dec
lahf
cmpsl
jo
sahf
add
test
pop
and
and
call
sub
dec
mov
icebp
scas
jno
lods
out
pop
jmp
insl
stos
pop
lods
icebp
ret
repz
das
enter
dec
cs
mov
ftst
push
pushf
push
dec
cwtl
fadds
xlat
mov
mov
mov
filds
ret
les
cmovbe
and
xchg
imul
sub
pop
jl
hlt
adc
xor
ja
adc
or
or
cmp
mov
or
sub
and
pop
mov
fwait
rcl
mov
adc
orl
aad
rcll
jnp
mov
fistpll
lods
fst
dec
in
inc
push
mov
pop
cmpsb
mov
test
adc
lods
push
push
in
or
popa
inc
lock
out
movsl
fistpl
cmp
imul
insl
clc
cli
leave
addb
mov
sbb
orb
dec
mov
and
aaa
pop
subb
addr16
push
les
loope
bnd
bound
pop
push
cmpsl
cmp
adc
idivl
mov
push
iret
in
test
mov
ficompl
xchg
and
dec
cld
sahf
jns
ret
lret
sti
int
adc
fsub
xchg
add
sbb
cli
add
lods
fdivrs
imul
push
jns
je
cltd
fwait
pop
cli
loope
mov
test
arpl
adc
push
sbb
aas
or
pop
addr16
push
clc
dec
out
ja,pn
sbb
mov
fsubrs
mov
mov
sub
imul
out
jge
ret
pusha
adc
das
mov
iret
push
adc
lods
pop
loop
cmpsb
js
cmp
cmp
fisttpl
enter
cs
jg
push
adc
or
sti
fld1
clc
ret
jae
push
lahf
sbb
sub
jmp
sub
dec
xchg
mov
or
inc
mov
loopne
pop
pop
inc
mov
das
or
jl
enter
mov
push
jno
and
xor
pop
adc
add
ror
lret
xchg
cltd
pop
cmpsl
xchg
imul
mov
push
xlat
mov
das
aas
test
add
cmpl
divl
pop
fsts
test
mov
add
push
adc
and
push
iret
pop
faddl
push
add
repz
shl
cmpsb
sub
adc
nop
pushf
ja
mov
jae
pop
jecxz
ss
sub
dec
stos
cmp
dec
ja
in
inc
cmp
dec
les
das
adc
shl
sub
pop
cmp
pop
add
inc
movb
cmp
popa
push
jns
inc
sti
cmp
stos
in
mov
jp
dec
push
roll
xor
cmc
lcall
mov
arpl
sub
ss
fcomp
sbb
sti
pop
rclb
insl
hlt
ret
pop
leave
icebp
xor
test
aas
test
sarb
or
rcrl
ret
sahf
pop
mov
aas
jecxz
mov
xchg
pop
aam
inc
jp
fisttps
push
pop
loope
orl
in
add
and
fldenv
xor
cmp
fwait
add
leave
leave
dec
scas
sbb
jo
nop
enter
cmpsb
xchg
int
orl
sub
divl
cmp
outsb
inc
setge
rcll
mov
fwait
xorl
xchg
insl
sub
bound
movsb
cmpsl
pop
mov
cmpsb
aas
sbb
hlt
mov
cmpsb
jp
frstor
inc
xchg
mov
in
dec
repnz
jae
jl
mov
das
add
aas
ljmp
xchg
push
imul
std
jb
out
outsb
pushf
sbb
xorl
mov
add
push
rclb
cmpsb
inc
add
es
roll
pop
xchg
pop
inc
insl
jns
or
sarl
cwtl
dec
arpl
int3
lods
and
rorb
xchg
pop
je
jbe
xor
adc
fnstcw
adc
mov
cld
cmp
and
pop
vpunpcklbw
push
idiv
mov
push
fldt
cmp
into
push
or
mov
incl
pop
cmpsb
leave
sub
daa
stc
in
ja
mov
xor
xchg
push
lret
imull
ret
rcll
mov
adc
addr16
jge
cmp
mov
jecxz
mov
popf
cmpsl
mov
fcoms
stos
lock
mov
aas
mov
mov
mov
in
push
and
mov
mov
ffreep
push
lods
mov
in
aaa
add
and
fstpt
jge
cmp
or
sahf
add
pop
into
mov
fiadds
xlat
jp
insl
xchg
mov
es
andps
xchg
or
nop
das
stos
mov
xchg
push
fnstsw
adc
push
dec
push
pop
add
shrb
aaa
inc
icebp
sbb
add
mov
cs
mov
out
adc
lret
xchg
in
fisubrl
sbb
cwtl
mov
lcall
jl
sbb
mov
enter
pop
in
xor
dec
push
or
and
lahf
add
test
jg
inc
leave
push
add
enter
stc
icebp
mov
dec
cmp
andb
inc
popa
shrb
icebp
lock
clc
jl
mov
data16
dec
daa
outsb
popa
jne
std
ljmp
mov
in
shrl
data16
jp
gs
jle
mov
test
mov
push
sub
xchg
push
add
repnz
cmp
or
xlat
test
mov
test
mov
jne
or
ss
xchg
je
inc
pop
and
adc
dec
outsb
inc
lock
jge
shrb
fwait
mov
lcall
jecxz,pn
lock
out
mov
add
mov
cld
dec
jnp
andw
push
adc
pop
sbb
and
stos
mov
pop
dec
jns
lea
jecxz
jg
sub
ds
and
aam
in
push
sub
cmpsl
jne
fnstcw
outsl
ljmp
sub
mov
or
cbtw
mov
fldenv
or
insl
aaa
cmp
movsl
jae
sarb
pushf
ljmp
pop
add
sub
in
iret
leave
push
stos
icebp
ljmp
sahf
and
mov
pop
mov
sub
ss
jno
xor
or
and
inc
or
cld
icebp
call
lock
sti
mov
psubd
out
out
cmp
in
mov
xor
xor
push
lods
and
scas
push
xor
and
lods
aas
and
push
add
das
imul
add
out
sbb
jge
and
aad
pop
cmp
mov
lea
movb
aad
mov
dec
imul
sub
lods
fidivl
pop
dec
lods
cmp
mov
sbb
adc
and
shrb
out
jl
repnz
xor
sbb
or
aaa
adc
jnp
inc
fistps
cmp
xchg
sbb
push
jle
cs
sbb
das
int3
add
in
pusha
filds
adc
scas
orl
aad
gs
mov
repnz
cmp
rep
jae
mov
shrl
pop
xor
pop
test
push
sub
mov
dec
daa
sbb
ja
insl
xlat
shlb
idivl
jmp
js
push
aas
xchg
and
out
fidivrl
pop
cmpl
jno
inc
outsl
nop
pop
xchg
inc
xchg
cmp
jne
in
add
mov
enter
dec
pop
sbb
repnz
push
ja
fsubs
xchg
shl
cs
pop
push
lods
push
adc
jp
push
scas
or
push
mov
les
cli
int
inc
ss
fstpl
arpl
mov
fwait
arpl
xor
pop
ja
jns
pop
sbb
shr
xor
andl
mov
imul
push
mov
mov
iret
loopne
xchg
cmp
call
sbb
mov
mov
inc
outsb
mov
push
sub
mov
dec
repz
repz
cmp
and
test
out
cmp
mov
mov
loopne
fadds
sbbb
movsl
sbb
inc
mov
adc
xchg
jmp
int
clc
sub
out
fistps
test
dec
aam
cmp
mov
push
in
jnp,pn
movsl
repz
cwtl
mov
and
mov
fs
int3
ret
mov
mov
xchg
and
addr16
lahf
mov
sub
gs
popa
xor
mov
cs
es
dec
movsl
adc
mov
mov
cmp
push
cmpsl
aad
cmp
xchg
nop
lods
adc
movsl
fbld
add
pop
mov
imul
insl
shlb
out
cmpsl
andl
ja
adc
clc
imul
mov
in
test
ljmp
lods
cmp
out
inc
sbb
push
daa
push
xchg
in
cmp
dec
adc
push
in
push
in
pavgw
aas
jns
pushf
push
mov
push
in
out
icebp
outsb
inc
lcall
pop
enter
aad
add
cmc
sub
imul
dec
pop
out
cld
pop
sub
gs
jb
aaa
lret
dec
xor
or
xor
cmpsb
cli
imul
in
loopne
stc
cmpsl
and
lds
add
dec
push
inc
loope
in
xchg
or
ljmp
cmp
cmp
mov
addb
add
lret
mov
adc
fdivrp
sbb
or
push
fstpt
je
xor
push
in
popa
pop
mov
loop
add
out
imul
sbb
dec
pop
addr16
inc
adc
pop
mov
imul
lea
inc
pop
shrl
jmp
cld
dec
test
inc
mov
xor
roll
mov
jmp
fs
lock
push
mov
mov
lds
xchg
or
in
cmp
mov
int
mov
movsl
jno
loop
imul
lds
xchg
jns
sub
les
shrl
or
ds
inc
or
adc
mov
push
push
shlb
mov
jno
xor
xchg
sbb
inc
xchg
addl
stc
scas
or
loopne
outsb
ljmp
inc
mov
inc
nop
xor
insb
sbb
popa
mov
aas
add
jecxz
jns
lcall
and
es
es
inc
jb
ja
inc
jae
sbb
dec
or
xchg
popa
dec
xlat
cwtl
ret
xlat
cmp
jg
xlat
adc
dec
out
fists
insb
cli
sub
imul
ja
add
xchg
jp
mov
jns
cmp
add
add
movsb
mov
fcoml
addb
sbb
jmp
lcall
lahf
daa
dec
dec
sub
pushl
push
sahf
mov
cwtl
adc
clc
push
cmp
xor
or
gs
std
add
stos
sub
mov
data16
sbb
push
xor
add
int3
pop
push
fmuls
mov
pop
xor
push
stos
jne
in
mov
outsb
insb
lock
xor
pop
dec
xchg
add
jle
outsb
jge
clc
outsb
or
adc
push
lock
push
arpl
bound
int
sarl
lods
sarb
arpl
inc
cs
gs
cwtl
push
call
fwait
mov
sub
push
insb
cmpsl
xchg
mov
inc
jne
outsb
pop
call
add
nop
movsb
jnp
mov
test
movsb
adc
lods
jno
iret
dec
jne
adc
daa
in
lock
jmp
fdivrs
mov
lea
xchg
jg
push
out
mov
cmp
test
call
ret
mov
or
cmp
rcll
das
sbbl
lock
xchg
bndldx
xor
movsl
cmp
sbb
inc
pop
push
divb
xor
sti
pop
in
mov
das
mov
sarb
ficoml
fs
sub
inc
mov
shrl
cmp
add
divl
cmp
imul
and
int3
pop
lret
stos
or
or
fistpll
dec
insl
sub
sbb
mov
and
cmp
int3
push
call
icebp
jmp
cmpsl
push
cmp
test
popf
jmp
cmpsl
add
xchg
inc
lea
test
mov
inc
push
frstor
mov
jno
cmpl
xchg
pop
aaa
xlat
fs
xchg
adc
test
test
pop
jmp
popf
push
lret
mov
add
xchg
push
push
push
xorl
fcompl
xchg
test
rcl
fadds
movsl
pop
fldt
ss
mov
dec
into
sbb
sbb
or
inc
test
and
fucomp
or
scas
mov
lret
dec
out
jnp
and
out
js
pop
loopne
test
push
jae
mov
mov
jl
xchg
mov
cs
xor
lcall
push
loopne
push
pop
cmp
inc
mov
mov
mov
mov
out
cmp
inc
lods
lahf
pop
sub
add
into
cmp
movb
xor
arpl
fisttpll
imul
jg
jge
cmp
mov
or
les
xchg
mov
mov
rol
push
les
rorl
lcall
mov
jo
xchg
sub
adc
fdiv
jae
imul
inc
sub
push
push
repz
mov
jge
xchg
fiadds
popf
stos
loop
repz
cmpb
push
xor
insl
imul
jne
jmp
fstl
enter
lods
ds
insl
dec
cld
xor
ljmp
movsl
enter
mov
outsl
dec
mov
xchg
stos
enter
push
mov
cmp
sbb
dec
loope
xchg
scas
sbb
es
sub
inc
xchg
leave
jl
adc
stos
lahf
push
lods
popf
ret
je
scas
push
sub
dec
push
sar
add
cmp
insb
and
push
imul
jge
ss
out
stos
push
pop
aas
and
addr16
add
xchg
sbb
aas
fnstsw
out
jb
mov
push
or
mov
in
jbe
loope
pop
stc
and
and
insb
mov
aas
and
js
mov
lods
adc
mov
fsubp
push
fmuls
ret
lds
inc
scas
in
jg
outsl
mov
lcall
and
add
adc
out
shll
loopne
push
jecxz
in
and
std
add
sahf
push
jmp
hlt
loop
push
adc
nop
or
add
mov
cmc
cmc
or
les
sub
xor
js
es
gs
mov
mov
fdivrp
stc
int3
lret
mov
cmp
cmp
pop
jae
inc
int
lock
test
cmpsb
mov
mov
jecxz
lret
pushf
mov
xchg
pop
scas
push
jne
das
dec
daa
into
push
xchg
jbe
mov
pusha
lret
orl
ljmp
inc
cli
loopne
mov
sbb
add
or
add
xor
rcrb
pusha
fsub
aaa
das
dec
sub
xchg
mov
data16
push
add
test
jecxz
les
inc
mov
mov
pop
fmulp
sub
iret
mov
lds
fsubl
cmpl
shrl
stos
or
inc
push
add
push
pop
push
or
aas
pop
jae
mov
xor
daa
push
pop
xchg
int
into
fidivrl
jecxz
mov
in
in
lods
bound
pushf
mov
incb
inc
lahf
ljmp
out
or
rclb
mov
sub
sub
bndstx
push
orb
mov
lea
add
repz
pop
js
pop
pop
mov
jmp
imul
dec
test
xchg
pusha
icebp
push
mov
xor
stos
and
test
jne
scas
push
test
or
sbb
mov
les
filds
shlb
mov
push
fildl
lret
out
jl
push
add
mov
mov
stos
mov
dec
fpatan
xor
jmp
insb
icebp
movsb
mov
pop
sbb
jg
addr16
add
clc
push
loopne
sub
pop
dec
xchg
popl
xorl
jns
les
icebp
push
test
hlt
jl
mov
mov
pop
cld
sub
cmc
sti
mov
stos
test
push
or
add
xchg
je
and
lcall
push
inc
add
mov
mov
and
inc
sub
sbb
jo
rclb
mov
addr16
sti
inc
mov
int
mov
js
imul
or
cmp
hlt
arpl
sub
cs
addr16
dec
in
and
outsb
dec
in
and
imul
and
cli
jl
notl
cmp
lcall
test
push
fdivr
xor
out
pop
jecxz
jl
or
xchg
loop
pop
test
push
repnz
shrb
les
mulb
jge
add
das
mov
mov
out
pop
fstpt
bound
lods
cmp
jbe
pop
jl
div
fisubl
mov
mov
cwtl
sbb
ret
cmpl
call
fisttpl
add
ss
dec
loope
sbb
push
idiv
insl
mov
xchg
subb
mov
and
popf
cmp
lods
push
imul
sub
jge
mov
mov
and
loop
movsb
sbb
lahf
inc
pop
push
loope
xor
std
jb
lret
xchg
adc
xchg
je
mov
mov
xchg
adc
mov
ficompl
lahf
adc
push
mov
mov
ljmp
bound
scas
and
xorb
mov
push
lret
in
xlat
pop
addr16
cmc
push
out
push
cmpl
xor
add
insl
inc
divl
add
outsl
std
sti
adc
add
hlt
cmpsl
push
or
or
test
xor
xchg
imul
jnp
cwtl
into
cli
inc
subl
arpl
push
push
push
push
push
inc
dec
iret
adc
fwait
pop
das
movsb
mov
push
xor
dec
sbb
divb
insl
dec
push
popf
ja
inc
mov
mov
cmc
mov
mov
out
outsb
insl
mov
pop
inc
adc
sbb
mov
push
popa
mov
test
daa
test
popa
add
in
sub
jb
xchg
jbe
ja
sub
push
enter
dec
repz
mov
inc
fsubp
or
les
sub
mov
andb
test
jle
add
lds
inc
js
js
mov
leave
sub
and
cmp
xor
out
mov
inc
popf
ud2
repz
data16
and
xor
repz
or
call
ss
jne
sub
or
mov
push
je
pop
sub
rcl
sub
pop
jmp
in
xchg
push
cs
adc
xchg
sarl
movsb
jp
jae
jne
cltd
int
pusha
leave
cwtl
ret
out
daa
je
pop
push
jno
dec
and
inc
adc
iret
xor
dec
pop
inc
xor
je
cmpsb
stc
adc
std
scas
inc
imul
jg
jp
dec
call
stos
mov
or
push
dec
nop
int
out
sub
subl
mov
jge
mov
out
push
pop
into
popf
xchg
mov
lret
or
pop
hlt
clc
push
adc
rol
scas
fidivl
int
sbb
add
insb
push
lods
lods
push
jp
xchg
pop
add
cltd
mov
push
mov
pop
add
data16
mov
pushf
add
xor
cmp
outsl
dec
xchg
nop
aaa
dec
cs
movsl
sub
add
or
dec
ljmp
jne
mov
or
in
data16
repnz
xchg
mov
inc
fcompl
adc
ficoml
cmpsl
stc
jne
or
pusha
aas
repz
ror
xchg
loopne
xchg
push
jecxz
fcoml
out
adc
ljmp
lret
sub
cltd
xchg
int
call
int3
movsl
mov
int
push
jnp
lret
mov
test
aas
xor
pop
imul
xchg
ret
mov
sbb
xchg
push
insb
and
cli
and
jp
daa
pushf
and
stos
mov
xchg
push
scas
inc
push
mov
lcall
enter
xchg
xchg
mov
sti
imul
and
es
or
inc
sahf
xchg
or
pusha
pop
fcompl
shl
or
sbb
pop
fdivr
xchg
jle
xlat
fs
xchg
and
sbb
mov
cmc
cmp
jbe
cvttps2pi
sub
lea
mov
ljmp
inc
mov
mov
lock
jecxz
adc
fwait
shll
cmp
adc
cmp
mov
fs
mov
fimull
imul
fbld
out
push
push
cmp
xlat
and
aam
push
mov
bound
test
inc
mov
cmc
jl
sarl
clc
scas
xchg
jnp
test
mov
push
pop
xchg
cmp
popf
mov
mov
daa
xchg
jbe
fiaddl
out
int3
dec
es
mov
push
push
cmc
fdivs
ja
mov
or
xor
ljmp
pop
adc
sbb
insl
rcr
pusha
push
pushf
rcl
xchg
insl
xchg
enter
lds
cmp
jecxz
jnp
mov
fldcw
sbb
add
adc
data16
mov
mov
lea
fsubr
push
push
fisubl
shl
pop
and
arpl
xchg
aaa
pop
jmp
sbb
add
mov
sub
dec
cmp
iret
jecxz
xchg
idiv
les
add
jle
dec
mov
fiaddl
xchg
in
xor
cwtl
ror
das
adc
push
sub
pushf
lock
adc
ret
out
ret
ljmp
sti
cmp
into
fidivrs
int3
cltd
mov
mov
and
outsl
inc
pop
or
pusha
inc
push
cmpsb
pop
push
push
insl
inc
jbe
movsl
repnz
mov
xchg
repnz
pushf
dec
int3
mov
xor
xchg
int3
loop
cmp
in
in
sub
stos
stos
mov
inc
decl
cmp
dec
sti
nop
inc
xor
adc
and
jecxz
iret
cmp
aaa
jne
cmovp
cmp
fcmovne
xor
daa
outsb
push
lcall
sti
cmp
push
sbb
sarl
pop
lea
jo
pop
fwait
movl
jno
hlt
adc
inc
xchg
mov
push
pop
push
push
mov
ret
adc
jl
sbb
shll
push
sahf
insl
cmc
data16
ss
pop
pusha
shlb
lods
js
sbb
negb
xchg
clc
cmpsb
sub
mov
lcall
mov
xchg
mov
icebp
cmp
dec
mov
cmc
mov
mov
jnp
jb
imul
addb
call
test
cmc
icebp
test
adc
out
shrl
js
out
aam
mov
inc
xchg
pusha
cltd
jp
mov
test
jg
jge
or
out
mov
cmp
cltd
add
lahf
jle
inc
push
ljmp
xchg
repz
js
or
jae
icebp
and
sub
pop
rolb
mov
xor
jb
jle
pusha
pop
jle
ficompl
pop
sub
fs
ror
out
lret
addl
mov
addl
mov
mov
sub
mov
push
xor
sub
into
mov
jae
imul
dec
loop
mov
inc
jbe
popa
int
mov
mov
iret
adc
xlat
dec
out
repz
loope
sbb
scas
jbe
lret
or
shl
test
push
arpl
pop
lret
clc
rcrl
aas
mov
dec
cmp
or
push
pop
cli
gs
sub
xor
in
rorl
sti
mov
or
push
arpl
cmp
cmp
push
les
les
or
jl
clc
das
xchg
cmp
jge
jo
arpl
inc
cmp
or
mov
and
push
add
data16
pop
rolb
leave
jae
jmp
mov
sarb
xchg
sti
or
jg
dec
call
mov
add
mov
xor
lcall
fldenv
ljmp
cmpsb
add
xchg
xchg
push
inc
and
sbb
mov
dec
cltd
push
scas
das
cmpl
jns
sub
inc
enter
inc
fsub
xchg
movsb
subb
dec
xorl
sbb
inc
insl
inc
jmp
add
cmp
mov
inc
jns
lods
mov
pop
icebp
adc
stos
dec
repnz
xchg
hlt
push
clc
push
jbe
mov
popf
into
inc
dec
cmp
dec
jb
adc
mov
xchg
dec
imul
in
adc
pop
js
cmp
dec
rcl
test
push
add
xor
sbb
idiv
mov
mov
cmp
or
mov
and
pop
fdivrs
enter
lods
and
outsb
cmpsl
sbb
and
cli
cmp
es
fcmovu
insb
inc
jbe
andl
out
add
dec
in
inc
dec
and
pop
mov
push
scas
xor
testl
fs
and
sub
repz
es
addb
imul
jmp
mov
xchg
adc
sar
mov
inc
and
movsb
jns
lods
out
shlb
sub
sarl
loope
aas
aam
sub
mov
je
in
cmpsl
nop
ljmp
sub
cli
cmp
jg
shlb
test
inc
pop
xchg
or
test
test
cld
push
cs
pop
hlt
lods
call
dec
sub
out
cltd
shl
lcall
in
adc
arpl
mov
cld
shlb
push
fldz
clc
cmpsb
punpckldq
test
cmovo
mov
mov
dec
push
imul
daa
in
addr16
adc
or
iret
mov
sahf
pop
fidivl
outsl
push
jl
shl
sti
popa
adc
and
adc
cmp
sub
lcall
daa
inc
loop
jecxz
lods
mov
inc
nop
leave
jno
outsb
cmp
ror
decb
pop
negb
inc
mov
stos
out
cmpsb
sbb
sbb
in
in
mov
add
arpl
outsl
pusha
pop
aad
jg
js
mov
out
iret
push
jge
loop
adc
pop
mov
das
stc
stos
pop
jge
jge
stc
add
mov
or
inc
sub
mov
dec
aaa
cmp
sub
iret
gs
pop
out
adc
sbb
jne
push
sarl
inc
iret
push
js
or
xor
xor
shll
adcl
push
mov
sub
mov
stos
cmp
jl
or
ror
fsincos
pop
es
mov
cmp
xor
rol
cwtl
ss
test
data16
or
inc
je
int3
in
shll
adc
jbe
cmc
cmp
enter
lods
test
lods
mov
mov
les
std
xor
fcoml
mov
ret
push
ficoml
and
dec
sti
sbbb
lret
call
push
mov
icebp
dec
cli
jo
stos
add
xchg
jmp
sbb
ret
sub
push
test
pop
ficoml
adc
and
insl
inc
call
nop
notl
xor
hlt
push
subl
rorl
lock
add
xchg
add
inc
sub
cmp
xchg
pop
xor
ss
lea
add
jns
xor
push
std
sub
or
enter
in
hlt
test
mov
inc
sbb
cmp
stos
xor
sarb
aas
addr16
fsubrs
test
push
int3
fldl
jge
addr16
mov
sbb
push
add
addr16
push
das
jne
cmp
inc
enter
add
aaa
clc
mov
sub
pop
lret
outsl
sarb
addr16
jnp
mov
nop
mov
out
inc
int3
pushf
lcall
out
push
ja
pop
push
or
mov
cmpb
add
cmp
xor
repnz
mov
cmpb
je
mov
xchg
mov
rorl
cmp
cmp
xchg
mov
push
aam
sub
push
xchg
pop
jp
or
sbb
cmp
jo
jno
and
cltd
pushl
loopne
or
add
fiaddl
jle
icebp
in
sub
test
mov
dec
pop
dec
loopne
fs
sbb
jb
loop
sub
addr16
arpl
icebp
cmp
scas
test
cmpb
sahf
push
icebp
or
sub
call
pop
pop
xor
mov
insl
and
hlt
in
hlt
pxor
sub
movsb
dec
bound
cwtl
mov
push
push
lahf
lods
mov
mov
aas
subb
lahf
sarl
fld
shl
movsl
das
sub
and
stos
cld
lret
pop
lds
mov
shl
jno
gs
neg
js
or
shll
jb
cld
rol
push
add
out
mov
popf
mov
sub
add
pop
sbb
mov
add
lods
fstpl
lret
ds
test
mov
imul
pop
inc
xor
jle
leave
cmp
pop
sub
adc
pop
out
sub
and
add
std
test
shlb
fbstp
stos
rolb
insl
mov
popa
popa
repz
jae
inc
sub
inc
pop
aaa
sub
jmp
mov
dec
sbb
imul
sbb
arpl
lahf
out
jo
and
cmp
sahf
ja
in
dec
xor
