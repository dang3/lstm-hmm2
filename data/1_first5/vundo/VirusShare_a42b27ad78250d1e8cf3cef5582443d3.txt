jl
add
fcoms
add
imul
add
lds
add
jl
add
add
add
aaa
lcall
js
add
bound
add
add
pop
lcall
jno
add
sbb
add
sub
add
add
add
add
add
outsb
add
xchg
add
das
add
jl
add
lret
cltd
add
jl
add
jl
add
jl
add
cs
gs
jne
je
add
add
add
js
add
bound
add
add
push
sub
add
add
sbb
pushf
add
jl
add
jl
add
jl
add
inc
outsl
add
jl
add
xchg
lahf
add
xchg
add
lahf
add
jl
add
adc
add
mov
sub
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
add
imul
add
jo
add
inc
add
jb
jae
outsl
add
inc
add
add
imul
add
je
add
add
add
add
and
dec
add
ja
and
push
add
insl
add
outsb
add
add
add
outsl
add
popa
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
inc
add
imul
add
add
nop
hlt
inc
adc
adc
fisubrs
pop
out
rclb
cwtl
mov
pusha
add
push
mov
call
pop
pop
ret
add
add
add
xor
and
and
add
add
add
inc
add
hlt
add
mov
add
add
add
push
add
shrl
add
mov
jb,pn
add
add
mov
lcall
ret
or
inc
add
adc
jo
gs
push
jae
inc
jb
fs
popa
inc
adcl
shld
out
shr
sub
inc
adc
lea
or
incl
in
add
push
std
jmp
adc
cmp
mov
jmp
push
adc
push
dec
pop
push
push
test
stc
or
pop
das
mov
movsl
test
mov
adc
movl
add
xor
adc
xor
add
loope
in
add
add
push
ss
test
std
lcall
and
rcrl
cmpsl
or
loopne
inc
push
push
adc
lahf
clc
jmp
jne
shrb
or
jne
push
jbe
lock
push
push
push
push
mov
and
add
add
add
add
adc
clc
add
inc
sbb
gs
outsl
inc
dec
inc
insb
xchg
push
inc
jo
gs
movsl
inc
xlat
xchg
outsl
gs
jo
aad
je
arpl
insb
gs
dec
push
xchg
inc
jb
push
jne
testb
xchg
dec
gs
cmp
ja
loopne
insb
gs
inc
dec
repz
add
and
add
les
add
add
add
mov
add
add
add
push
add
roll
add
mov
add
add
add
mov
jge
out
shlb
add
sub
add
pop
jge
movsl
jl
fdivrl
out
cmp
mov
pop
paddusb
fdivl
xchg
push
xchg
pop
jle
mov
divb
insb
xor
mov
frstor
ss
add
cmp
jge
inc
fmuls
and
sub
add
cwtl
jne
andb
push
and
imul
mov
int3
push
pop
cmc
jle
inc
jno
rcr
es
cs
mov
sub
lret
adc
inc
dec
ja
insl
cmp
hlt
mov
arpl
cli
push
sar
dec
xor
fimull
push
cmpsl
xchg
adc
push
addr16
fimuls
sahf
mov
sbb
bound
cmp
aad
js
sbb
sub
push
lds
push
jge
xchg
insl
jb
cmpsl
dec
pop
mov
add
lds
or
inc
clc
jle
jmp
cmp
mov
pop
mov
xor
add
movsl
jg
xor
arpl
loop
dec
cmp
fisubrs
pop
rol
lea
mov
faddl
popa
push
xchg
mov
inc
lds
mov
rorb
adc
cli
mov
fldl2e
xchg
std
in
sub
pop
xlat
inc
cmp
add
lods
je
pop
push
movsb
test
xchg
shrl
lret
mov
and
addl
daa
jns
add
jl
or
pop
jmp
aaa
bound
mov
sub
scas
shl
sub
das
push
ss
xchg
inc
ficoms
orl
sub
mov
xor
dec
pusha
and
push
out
cs
int3
jb
adc
dec
mov
lods
pop
jg
mov
outsl
loop
jno
push
shrb
out
jne
jge
xchg
in
aaa
orb
xchg
or
int3
add
fwait
add
dec
std
fdivrl
jbe
fnstsw
and
arpl
rclb
xchg
daa
mov
adc
push
and
outsb
fdivl
int3
aad
lock
insl
mov
cmp
dec
xchg
add
mov
std
filds
cmp
loop
daa
sub
mov
test
lret
imul
mov
pop
sbb
shrb
jecxz
add
or
sbb
mov
mov
popl
enter
clc
in
inc
mov
cs
dec
into
int3
pop
pop
insb
xor
fwait
or
inc
mov
mov
push
xchg
fadds
mov
out
repz
ss
ror
inc
pop
pop
inc
pushaw
push
xchg
cmpsl
mov
orl
popf
jno
sbb
movsl
rcl
cmp
push
sub
jno
or
mov
jecxz
push
inc
movsb
rorb
call
inc
jecxz
sub
sbb
cld
out
lret
outsl
fstpt
cld
fs
lea
xchg
ret
int3
sub
fidivrs
inc
mov
std
rcr
es
flds
movsl
and
mov
push
pusha
out
aam
std
lods
loop
cmovno
pop
mov
in
stos
gs
sub
mov
and
std
xchg
rolb
sub
in
js
or
es
mov
cmpsb
push
mov
in
loope
dec
pop
add
outsl
repnz
lahf
test
mov
insb
je
inc
test
xchg
ja
repz
xchg
xor
jne
orb
sub
xchg
cmpsl
scas
xor
rorb
inc
mov
gs
dec
jae
arpl
xor
pop
xchg
call
jmp
sbb
xlat
pop
test
std
sub
sbb
fnstsw
outsb
dec
hlt
dec
and
loope
push
xor
mov
lock
data16
dec
xchg
push
cltd
xchg
inc
sbb
sbb
inc
sub
adc
sub
sub
out
icebp
ret
xchg
sarb
jae
sub
fwait
push
jnp
pop
cmpsl
xchg
test
nop
mov
mov
sahf
fs
xchg
jl
sub
sub
inc
dec
loopne
adc
out
push
fwait
outsb
sub
mov
pop
repz
xor
mov
mov
pop
adc
cmpsl
rcrl
mov
ficoml
dec
mov
adc
mov
mov
jp
addr16
jl
lods
in
and
xor
add
dec
xchg
adc
mov
es
in
inc
scas
les
pop
adc
mov
cmp
jo
dec
and
into
in
mov
ffree
dec
jmp
aas
repz
in
dec
icebp
maskmovq
xchg
int3
mov
xchg
cs
sub
jmp
sub
xchg
xchg
xchg
xchg
enter
pop
pushf
xchg
popf
clc
mov
imul
outsb
cld
mov
rcrl
push
mov
dec
adc
xlat
add
neg
xor
mov
push
pop
cmp
push
push
and
mov
ss
pop
imul
nop
idivb
bound
xor
xchg
lock
clc
gs
lcall
jmp
jmp
or
lret
mov
xlat
inc
fldl
push
sub
in
lock
sub
ret
pop
repz
pop
pop
pop
roll
inc
lret
sbb
jge
imul
push
jl
add
jbe
push
jle
daa
test
es
mov
out
sub
fs
and
adc
insb
and
cmp
jo
jne
outsb
inc
mov
cmp
aaa
sbb
mov
or
xchg
stos
sar
or
cmpb
pop
adc
mov
or
pusha
mov
leave
jo
sub
push
mov
lcall
push
mov
adc
adc
daa
push
cmp
les
stc
or
ret
jne
mov
xor
je
pop
push
dec
mov
dec
and
cmp
xchg
sub
pop
addr16
fs
cld
xchg
mov
cld
out
loop
jno
push
mov
fnsave
push
outsb
pop
out
js
movsl
mov
jecxz
lret
and
gs
lods
mov
adc
pop
rcl
pop
cwtl
rcrb
xchg
or
test
mov
xor
sub
popa
lcall
pushf
outsl
mov
fwait
call
dec
das
adc
pop
ja
iret
loopne
xor
std
ret
shrl
adc
cld
out
inc
ja
shlb
push
mov
scas
js
add
clc
cwtl
loop
fstl
imul
ja
lahf
jl
icebp
sbb
cmp
push
add
sub
cmp
addr16
lret
mov
mov
jmp
xchg
xor
call
cmp
dec
cmpl
jo
ss
orb
js
and
jne
dec
lret
push
insb
inc
push
into
push
mov
xor
jb
dec
mov
scas
gs
and
mov
push
mov
push
icebp
orl
push
pop
push
adcl
bound
and
not
lea
lods
das
jecxz
sub
xor
lods
mov
pop
cmpsl
out
dec
mov
mov
dec
in
adc
dec
jbe
insb
inc
mov
lahf
lea
and
jp
rclb
mov
pop
sbb
pop
inc
lcall
lahf
lret
mov
dec
push
xlat
aaa
mov
test
jmp
sub
fmuls
pop
loopne
mov
dec
sbb
lock
out
std
jns
movsl
neg
daa
lock
outsl
fistpll
fldenv
xor
jl
add
test
test
hlt
daa
xlat
mov
nop
pop
mov
out
jne
pop
push
push
sub
sbb
pop
cwtl
into
negl
out
adc
sbb
push
sub
jp
in
jle
mov
test
xchg
inc
jns
pop
stos
rorb
push
shrb
mov
sub
in
pushf
mov
mov
and
adc
dec
into
mov
nop
neg
push
call
push
js
jmp
push
and
lcall
xchg
mov
rclb
das
lds
dec
aaa
dec
inc
mov
daa
lds
fdivrs
inc
addb
mov
sub
pop
xchg
inc
xchg
dec
push
or
dec
std
mov
sar
sbb
pop
std
test
push
sub
pop
pop
movsb
int
data16
shrb
test
dec
cmpsl
pop
dec
add
adc
cmpsb
sahf
dec
and
cmp
mov
mov
mov
adc
xor
cmp
icebp
jmp
test
outsl
ss
aaa
aaa
push
movsl
outsb
mov
imul
or
clc
mov
scas
xchg
and
inc
cmp
jp
out
xor
int3
mov
arpl
sti
int3
fs
shl
mov
loope
outsl
mov
xchg
push
stos
or
ljmp
mov
fdivrs
inc
add
cmp
arpl
rcll
shr
pop
mov
dec
subb
inc
jl
dec
sbb
insl
mov
mov
xor
add
mov
roll
movsl
jmp
mov
cmp
cltd
sub
cmpsl
or
clc
lods
std
rorb
loope
aad
das
pop
stos
int3
test
mov
mov
repnz
push
adc
adc
nop
flds
inc
and
filds
sbb
sbb
pop
jle
xchg
push
test
or
sub
cmp
add
add
jns
pop
mov
or
cli
jle
out
stos
pop
sub
inc
ffree
adc
or
cltd
dec
pop
call
les
cltd
jbe
mov
inc
movlps
sbb
aaa
int3
rolb
push
sbb
aaa
cs
sbb
lret
mov
mov
pop
push
xchg
mov
sbb
or
mov
insl
ret
jns
mov
push
adc
leave
sbb
pop
stos
es
pop
and
imul
sarl
mov
rol
ja
push
call
fstpt
cmp
and
ja
mov
ljmp
out
insb
cli
dec
ficoml
jno
mov
packssdw
inc
jne
jo
jbe
sub
lret
jle
jle
inc
add
jg
inc
push
repnz
jb
aam
pop
xor
xor
loop
cmpb
movsb
filds
jno
xchg
mov
mov
mov
mov
mov
cmpl
mov
dec
arpl
jg
dec
shll
sub
cmpsb
xor
sub
fldl
insl
xor
fmull
imul
adc
sbb
adcb
addr16
or
in
pushf
icebp
xchg
inc
outsb
mov
xchg
fst
lret
inc
leave
pop
xchg
gs
adc
mov
popa
jnp
jo
fs
cmc
repnz
sti
push
xchg
mov
imul
test
int3
js
dec
jbe
xchg
ds
or
stc
pop
scas
push
pop
pop
movsb
push
out
sub
cmp
sbb
jecxz
and
movsl
push
lahf
iret
test
addl
outsl
movsb
adc
inc
sbb
outsl
sub
pop
inc
pop
ss
and
xchg
out
fcmovb
jne
mov
xchg
shlb
sti
push
push
pop
xor
cs
mov
jl
lds
adc
loopne
inc
popf
inc
cmpsl
cmp
scas
push
insl
sub
sub
xor
ret
ja
dec
bnd
xchg
mov
mov
aad
jne
mov
mov
jp
mov
cmp
jp
pop
repnz
lock
in
xlat
in
or
pop
idiv
jnp
adc
test
add
mov
aad
iret
movsl
push
fisttpll
stos
cmp
push
jmp
xchg
scas
fisttpl
xchg
xchg
cmpsb
jnp
rclb
xchg
push
aaa
sbb
out
jl
jnp
push
pushf
inc
jecxz
into
jnp
dec
addb
adc
jno
inc
arpl
push
ja
or
das
pusha
or
fstpt
sub
sub
or
push
mov
jp
data16
mov
xor
xor
push
int
test
lea
out
lret
inc
es
mov
loope
popf
cs
andb
repnz
push
loopne
dec
xor
inc
lock
ficomps
xor
adc
jb
mov
push
pop
inc
jg
mov
es
mov
sbb
aaa
cmp
popf
push
in
adcb
leave
imul
adc
call
add
add
stos
and
push
pop
jg
mov
mov
addr16
enter
sub
push
xor
pop
and
cld
mov
cmp
stc
or
sar
dec
mov
push
dec
sahf
stos
test
jl
sbb
jno
mov
outsl
push
inc
mov
dec
pop
setnp
xor
cltd
loopne
enter
pushf
mov
pop
and
js
loope
pop
stos
dec
out
and
pop
in
jae
jo
jns
mov
cmp
push
cmp
sbb
add
cmp
sub
shll
cmp
dec
addr16
sub
cs
mov
push
fldcw
cltd
hlt
sbb
shll
pusha
in
scas
ljmp
pop
cmpsl
loop
dec
sub
mov
jne
leave
stos
psllw
ljmp
jl
divb
outsl
ja
mov
divb
mov
nop
pop
add
ret
add
mov
jl
push
adc
lret
mov
fcompl
jo
sub
xchg
mov
cltd
and
pop
push
adc
rolb
or
and
insb
push
sub
cwtl
movb
fldt
and
push
repnz
leave
mov
mov
aas
test
in
pop
insb
je
add
inc
cmpsb
ss
cmp
push
jae
add
mov
jle
insl
hlt
jns
mov
mov
movsl
je
sub
jns
xor
enter
outsl
call
test
xchg
pusha
movsl
and
js
rcrl
mov
jne
dec
sbb
loopne
mov
nop
outsb
fs
nop
into
or
cs
sti
adc
daa
sbb
sub
cmp
sbb
mov
jle
cmc
xchg
adc
dec
mov
inc
dec
jnp
mov
xor
out
lahf
in
int
xchg
sbb
xchg
das
mov
mov
pop
int3
jns
or
ret
xchg
or
cmpsl
pushl
mov
mov
movsl
in
mov
jmp
sti
cmp
lret
stos
bound
or
fwait
and
cmc
call
push
cltd
fwait
popf
lds
cwtl
mov
lds
xchg
cmpsb
fstps
adc
sub
ss
pop
jle
adc
icebp
inc
outsb
daa
push
in
std
xchg
popf
adc
jl
fildl
scas
push
xor
sbb
xor
jne,pt
andl
mov
dec
jecxz
add
sbb
addr16
std
call
adc
and
or
mov
pop
mov
mov
enter
cmp
mov
cwtl
in
dec
pusha
ret
loop
fidivrl
sbb
cmp
addr16
setns
icebp
pop
jnp
dec
dec
icebp
adc
jne
pop
aam
nop
ret
cmp
js
dec
sbb
aas
pop
cli
insl
cmp
ja
sbb
mov
jle
sub
xchg
lods
clc
fnsave
dec
push
fmuls
es
sub
stos
es
sub
jg
mov
lret
int
jno
pop
xchg
gs
insl
mov
repz
xlat
nop
adc
sbbb
stos
sbb
push
pop
pop
push
lcall
jo
xor
or
xor
inc
pop
mov
sbb
leave
icebp
jp
and
ljmp
push
mov
daa
out
loope
add
dec
lods
pop
xlat
add
das
std
cmc
xlat
cmpsb
pop
mov
jg
insl
jmp
push
push
sarb
and
shll
sub
mov
add
push
mov
test
jae
mov
repz
sahf
inc
push
fsubrs
addl
jl
jne
mov
xchg
mov
or
aad
cmp
fwait
jmp
iret
push
or
sbb
popa
out
comiss
push
and
fisttps
sti
ljmp
ret
outsb
sbb
add
mov
ja
jmp
push
jae
loope
and
pop
enter
subl
mov
jnp
sbb
sub
cwtl
out
mov
stos
mov
stc
arpl
ja
or
pop
in
out
imul
mov
sbb
pop
xchg
xor
lahf
stc
jg
adc
outsb
inc
ficompl
hlt
sub
clc
daa
ds
jp
rcll
or
fs
adc
jmp
inc
faddl
adc
dec
inc
nop
pop
ret
test
fst
xor
inc
fstpt
orb
pusha
xchg
cmp
lods
sbb
or
nop
and
js
mov
mov
push
sub
pop
sbb
in
sbb
fwait
insl
mov
push
mov
rolb
mov
xchg
cwtl
popa
push
mov
mov
outsb
mov
mov
sub
xchg
push
icebp
out
pop
inc
ljmp
addr16
xchg
stos
aaa
adc
inc
pusha
in
fsts
loope
std
shr
cli
adc
aas
inc
stc
nop
std
push
iret
add
push
push
add
dec
rcl
sete
loope
fisubl
lahf
test
inc
mov
sti
nop
mov
frstor
in
mov
sti
sub
setns
in
pop
leave
test
and
adc
movsb
jecxz
sbb
lret
loope
and
inc
pop
xor
lock
fwait
lret
xor
cmpsb
push
addr16
jge
sub
outsl
mov
out
pop
sub
stos
and
lret
lahf
cmp
xchg
cmp
into
in
dec
sub
ret
scas
adc
xchg
arpl
jno
mov
pop
jp
sub
iret
jns
popl
push
dec
dec
test
sbb
or
add
jle
icebp
cmp
add
imulb
test
push
push
pop
lea
int
and
push
mov
lods
fidivrs
jae
es
push
dec
push
mov
or
mov
lret
ficoms
xor
mov
jmp
jl
push
in
shl
sbbl
cmpsl
mov
je
repz
mov
jns
sub
jo
inc
movsl
pushf
je
and
out
imul
sbb
xchg
mov
mov
mov
adc
ds
int3
movsb
jg
pop
pop
cmpsb
mov
enter
xlat
hlt
insb
pusha
subb
out
dec
xor
inc
mov
out
mov
out
repz
lds
or
dec
sub
inc
mov
xlat
mov
loopne
lods
scas
and
test
push
in
jo
cli
xor
fwait
cmp
in
sub
cld
stos
jg
xor
mov
scas
sub
cmp
or
rclb
add
xor
mov
js
cmp
fsubrl
xchg
or
sbb
fmulp
xchg
test
pusha
sub
adc
test
sub
push
jb
rcrb
in
mov
rolb
xchg
scas
repz
add
mov
cmpsl
fwait
xchg
pop
fidivl
aad
mov
orl
leave
push
mov
add
add
ret
add
je
add
add
movsb
add
arpl
add
add
push
add
add
add
add
add
add
and
add
les
add
add
add
push
add
add
add
aas
add
add
test
add
add
mov
add
add
mov
in
inc
add
inc
addb
stos
movsb
add
js
lods
clc
js
js
int3
int3
int3
push
mov
sub
lea
push
push
push
pushl
call
cmpl
je
mov
cmp
je
call
movl
call
cmpl
jne
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
mov
push
push
push
push
push
pushl
call
pushl
call
call
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
xor
leave
ret
push
mov
sub
push
push
push
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
push
pushl
call
mov
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
call
jmp
call
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
push
pushl
call
mov
pushl
call
pushl
pushl
pushl
push
push
call
add
cmpl
jb
call
mov
pop
pop
pop
leave
ret
pop
incl
incl
add
mov
outsl
outsb
dec
dec
or
or
pop
add
cltd
add
aas
adc
test
add
add
add
or
add
add
and
add
dec
xor
sbb
push
add
xlat
sbb
add
sbb
sbb
pop
add
outsb
pop
pop
push
add
add
add
push
inc
add
clc
sahf
pop
xchg
pop
push
xchg
jmp
add
cld
cwtl
pop
xorl
or
test
sub
push
stos
adc
add
push
pushl
ficoml
mov
push
ljmp
add
jne
add
add
pop
push
adc
leave
add
decl
add
push
enter
jmp
add
mov
loope
jmp
aas
jmp
adc
dec
fcomip
add
jg
inc
sbb
clc
inc
add
call
iret
dec
out
add
cmp
ljmp
adc
adc
fidivl
lock
nop
add
call
pop
scas
adc
cmp
sbb
sbb
sbb
add
add
je
jae
outsl
outsb
dec
jecxz
insl
fldcw
pop
jae
lea
inc
gs
lret
add
outsl
js
add
jo
jne
add
inc
push
gs
stc
je
sbb
jb
outsl
jbe
fs
insb
lcall
add
cmp
add
add
add
add
add
add
add
or
add
add
add
add
das
add
mov
add
mov
cmp
idivl
jp
jno
sub
xchg
or
daa
in
out
pop
jne
dec
loope
jae
fbld
inc
subb
test
xor
mov
mov
pop
insl
leave
inc
push
dec
pop
dec
mov
sub
xchg
lret
or
aaa
fs
pusha
imul
or
mov
int3
dec
sub
ss
inc
clc
sbb
push
push
jb
xchg
stc
inc
aad
xchg
movsb
fwait
xor
int
xchg
sub
mov
gs
out
ljmp
fisttpl
or
dec
scas
outsb
dec
xchg
xchg
scas
aas
shl
cs
pusha
xchg
in
movsl
or
test
push
sub
mov
daa
push
push
sub
test
jmp
sub
mov
insl
cltd
or
push
mov
testl
imul
adc
push
movsl
loope
subb
inc
repz
push
insl
ljmp
pop
mov
mov
mov
xchg
nop
mov
inc
fisttpll
sbb
mov
mov
out
mov
cmp
ss
out
scas
xchg
flds
xorb
dec
mov
adc
shrl
mov
loopne
aad
pop
pop
sub
push
inc
clc
gs
dec
or
dec
sub
jae
jns
xchg
sbb
rorb
loop
lock
jle
leave
mov
add
loope
out
cltd
mov
ret
ds
push
fcompl
sub
jge
push
mov
test
cld
gs
dec
cmpl
lahf
mov
scas
or
icebp
add
les
rcl
dec
jo
push
mov
rorb
or
and
sub
mov
ds
jns
dec
cmp
sti
jl
sbb
xor
repz
mov
in
subb
shl
xor
enter
ss
push
xchg
stc
test
jmp
jb
jmp
cmp
jnp
pop
push
add
aaa
xchg
jnp
movsl
jp
mov
pop
orl
cmp
add
jo
xor
cmp
les
adc
xor
les
aad
ud0
sub
arpl
push
push
cmp
repz
gs
jecxz
add
xrelease
ret
data16
cli
scas
stc
cwtl
dec
or
mov
stc
movsb
inc
and
cmp
out
movb
jbe
incb
sahf
insl
cltd
aad
jge
addr16
rol
cld
pushf
mov
push
jnp
rolb
js
sbb
add
push
sbb
call
mov
cmp
dec
leave
jo
sbbl
test
out
notl
inc
inc
mov
mov
movsb
es
movsl
jmp
inc
or
adc
push
out
jmp
scas
arpl
aam
lahf
and
jg
xchg
cmpsb
xchg
adc
cmp
mov
gs
push
ret
fs
sub
call
push
jno
cli
fidivs
adcl
fldenv
cmc
xchg
ret
fld1
push
cmp
jp
cmp
sbb
sbb
mov
hlt
xor
mov
add
and
xchg
filds
jo
xor
mov
push
push
incl
and
gs
pop
mov
sub
mov
es
mov
fs
lret
push
subl
sbb
and
inc
add
sub
pop
push
xor
stc
sub
adc
data16
lea
cwtl
mov
out
popa
ret
pop
les
add
leave
popa
gs
jbe
add
mov
stos
dec
or
and
cmpsl
pop
pop
bound
cmp
pop
pop
jo
cli
pop
int3
pop
mov
dec
and
cli
cli
pop
or
pop
lret
addl
push
jnp
adc
add
dec
push
xchg
pop
pop
fdivrs
mov
leave
sub
mov
stos
dec
xor
ds
cmpsb
jg
sbb
bound
ds
lcall
cmpsl
sahf
or
jns
xor
add
lea
and
shlb
mov
sub
fcmove
mov
cmpb
or
add
pop
pop
in
in
in
xor
divl
movsb
test
test
int3
add
or
mov
mov
inc
xor
sub
fidivl
mov
in
jl
gs
xor
or
add
pop
xchg
adc
insl
int3
jg
loop
xchg
sub
xchg
xchg
mov
fisttps
mov
and
loop
fisubrs
dec
imul
xchg
pop
in
dec
push
adc
mov
cltd
imul
movntq
xchg
lret
mov
shr
sbb
adc
and
jbe
jnp
sbb
mov
cs
sahf
lods
test
and
or
mov
bound
fwait
hlt
fxch
sub
mov
adc
pop
jbe
adc
test
lea
adc
fiaddl
lods
cmpb
popa
sti
fcmovb
push
push
test
dec
test
pop
test
lahf
xchg
xchg
mov
out
push
push
xchg
adc
sub
sbb
aam
aam
enter
out
adc
mov
or
push
pop
fldenv
jg
shr
aas
or
scas
cmpsb
jp
fwait
ljmp
inc
jge
es
jmp
imul
lea
add
loop
inc
dec
movsb
nop
orb
mov
push
cwtl
and
jne
lds
add
stc
xlat
adc
aam
je,pt
das
cltd
pop
loope
pop
ds
jmp
or
int
sbb
cwtl
dec
jmp
lahf
pop
push
mov
xlat
cs
fmul
sub
and
out
or
es
sub
outsb
adc
ret
ret
inc
rclb
and
mov
pop
sbb
sbb
mov
lahf
xchg
aam
loope
dec
idivb
in
pop
push
dec
sub
jbe
iret
aam
sbb
jno
not
adc
xchg
ja
and
pop
cltd
pop
out
push
mov
pop
mov
int3
pop
xor
lods
lea
xor
aas
ss
jno
hlt
loopne
test
insl
in
movsb
pop
push
cs
loope
mov
or
jmp
inc
inc
cmp
clc
xchg
cld
fmul
xchg
je
push
mov
lret
aas
lods
push
scas
cmp
gs
scas
jns
xchg
popa
iret
lock
cli
jbe
mov
jae
mov
jl
adc
dec
mov
testl
jne
cmp
fisubrl
cmp
out
xchg
mov
and
jg
dec
test
mov
outsb
add
lods
push
xor
test
inc
lock
into
fisttps
mov
daa
push
sbb
leave
call
cmp
cmpsb
adc
mov
mov
pop
sbb
pusha
sbb
inc
sbb
notl
pop
cmp
mov
xchg
rcrl
sarb
popf
cmpsl
dec
and
pushf
push
test
mov
cltd
inc
mov
pop
lcall
and
cmp
add
and
lock
adc
adc
mov
or
xchg
in
into
jg
and
xchg
loopne
pushf
test
sbb
scas
cmp
clc
js,pt
mov
aaa
jne
std
aad
shrb
dec
add
pusha
into
adc
jo
mov
mov
cmp
fdivs
jl
jo
sbb
cmp
push
mov
out
mov
xor
inc
popf
dec
pop
sub
andl
push
adc
fs
inc
push
mov
rorb
movsl
fnstenv
scas
movsl
xor
aas
loop
push
pop
inc
push
out
cmpsb
sti
adc
and
int
shl
inc
ss
dec
cli
sbb
sbb
mov
rcl
add
imul
push
std
pop
adc
mov
stos
std
xchg
dec
or
fmull
out
xor
pop
loopne
jmp
push
sub
push
cmp
shll
xchg
jge
xor
cmpsl
ds
sbb
ss
push
repnz
sbb
in
push
mov
insl
sahf
inc
mov
push
sti
jecxz
mov
jns
or
mov
arpl
mov
das
inc
mov
push
ret
sbb
loope
push
inc
dec
stos
nop
pusha
pop
push
icebp
mov
test
cmp
incb
sbb
or
and
stos
in
stos
sbb
fstl
xor
xchg
outsb
sub
fsubrs
imul
fsts
xchg
outsl
add
sub
push
or
int3
cmp
call
xchg
inc
outsl
mulb
leave
sbb
test
mov
sub
repz
dec
lds
xor
popa
mov
xor
xchg
out
shlb
in
cmp
in
mov
es
punpckldq
push
push
mov
push
mov
pop
mull
xchg
popa
adc
push
sti
adc
jbe
sbb
out
push
icebp
int
test
fldl
cld
pop
rorl
div
lods
repz
adc
push
pop
xor
xchg
or
bound
pop
aaa
jmp
lfs
fdivs
icebp
lcall
imul
loope
jmp
xchg
and
inc
cmp
cmp
fwait
mov
sbb
mov
notl
pushw
es
daa
inc
pop
les
mov
pop
adc
int3
add
cltd
sbb
sub
pop
insb
call
test
imul
ficoml
outsl
call
test
jno
addr16
mov
xchg
fmul
call
cli
sub
push
insb
jg
loop
cmpsb
loope
pop
jecxz
shrl
jo
outsl
fnsave
rclb
mov
push
jmp
and
test
outsl
inc
sbb
mov
cmp
xlat
lds
addr16
icebp
fimuls
test
xchg
lods
jno
mov
in
fidivs
aaa
mov
in
mov
push
inc
mov
inc
call
mov
xchg
pop
adc
in
pop
loopne
aaa
add
inc
sbb
std
shrb
pusha
in
roll
jp
lock
ljmp
xchg
outsl
push
adc
add
mov
dec
dec
and
pop
inc
mov
jp
int
inc
dec
fcmovbe
cmp
sbb
mov
aas
stos
adc
mov
movsl
mov
xchg
hlt
jl
sbb
push
inc
xchg
mov
push
and
sbb
and
js
outsl
mov
dec
aad
jae
mov
jl
sti
pusha
in
cmp
cmp
ss
fstsw
fwait
pop
fsubrs
int
stos
int3
cmp
cmpsb
ret
lcall
nop
mov
pop
dec
push
mov
fdivs
int
dec
lret
adc
repz
dec
xchg
mov
inc
gs
fcompl
and
into
pushf
mov
int3
xchg
mov
ljmp
lods
mov
cmp
xlat
push
aaa
and
out
mov
aad
fcmovbe
lods
push
fidivs
push
popf
inc
lods
sbbb
outsl
inc
sbb
in
mov
outsb
sti
dec
dec
jno
lea
in
dec
fldl
ret
in
xchg
add
or
adc
and
ljmp
nop
push
bound
xchg
ljmp
cli
sbb
cltd
pushl
lcall
inc
popf
pop
jge
add
or
inc
fsubrl
push
mov
pop
mov
popa
xchg
fcmovbe
out
dec
sub
mov
push
xor
dec
xor
sub
aaa
pop
mov
pushf
pusha
shr
pop
mov
jmp
and
xor
or
repnz
xlat
adc
imul
addb
push
imul
fcomps
cmp
push
mov
pushf
inc
jnp
out
lds
adc
adc
add
lea
mov
pop
cld
and
xchg
lcall
jmp
dec
adc
rclb
jmp
bound
xchg
dec
dec
lds
cmc
add
push
mov
xchg
xor
ds
imul
shrl
cmp
in
pop
sub
rorb
out
cmp
jnp
cltd
add
out
push
jns
bound
jns
test
mov
rol
push
and
sub
icebp
jb
xchg
stos
xchg
xor
sbb
sub
xor
sarb
sub
lcall
mov
push
insb
xor
xchg
xchg
pop
sbb
or
xor
jno
cltd
xchg
or
cmpsl
and
dec
adcb
out
inc
and
pushf
sub
sub
data16
cli
movsl
rol
sub
lock
sahf
test
dec
or
adc
mov
add
ss
jp
stos
fcmovu
or
mov
pop
sub
push
mov
lret
pop
push
mov
call
and
fsts
scas
adc
sbb
adc
mov
push
jmp
adc
push
subb
enter
stos
push
scas
mov
cwtl
xor
out
lret
mov
in
or
jo
push
cli
xchg
in
shrl
lahf
adc
push
xor
ret
ljmp
mov
aaa
cmpsl
aam
rcll
mov
mov
fnsave
das
lea
and
pop
in
int3
inc
aaa
js
pop
mov
or
outsb
pop
push
insb
xlat
lods
mov
rcrb
xor
imul
mov
sub
mov
and
cmp
fwait
mov
inc
push
addr16
lea
addr16
hlt
std
shlb
mov
arpl
stos
xchg
leave
cmp
leave
lret
jno
ds
inc
add
inc
sbb
cmp
jae
dec
popa
das
jl
sub
xchg
jp
in
mov
notl
push
rorb
inc
xlat
mov
hlt
cmp
jnp
push
inc
pusha
mov
mov
push
inc
dec
out
mov
sbb
je
sbb
outsl
xchg
xchg
test
pop
jne
aam
popf
ss
fldt
out
add
pop
popf
push
lds
repz
popf
fbstp
sahf
lret
jae
aaa
les
sbb
pop
jno
pop
mov
fiaddl
dec
xor
jmp
sbb
fstpt
arpl
inc
lods
lods
out
inc
sub
mov
inc
pop
test
add
les
xchg
push
mov
jp
dec
mov
insb
aas
lods
orl
jae
mov
xor
fcmovbe
mov
dec
orl
orl
cli
loop
mov
push
sbb
fdivs
int
repnz
xchg
lret
mov
inc
jne
scas
mov
call
xchg
or
into
mov
and
mov
lds
rorl
gs
sbb
xor
push
leave
and
sub
cmp
adcb
stos
addr16
aam
ja
daa
scas
sub
mov
push
sub
sbb
leave
mov
mov
stos
cltd
dec
push
loop
in
in
out
repz
sbb
dec
icebp
push
jmp
lods
jge
lret
lock
pop
addr16
je
movsb
mov
mov
test
mov
dec
and
sti
push
jo
adc
push
leave
repz
push
adc
sbb
aas
insb
and
movl
sbb
js
inc
fcompl
lea
fistpll
hlt
icebp
imul
jae
pop
bound
sarl
outsl
xchg
sti
cmp
aam
mov
or
js
popf
sbb
test
push
shr
lods
repnz
mov
jmp
std
add
mov
dec
pop
pop
inc
das
adc
cltd
lds
push
outsb
adc
mov
test
fsubs
dec
addr16
mov
aaa
inc
jge
inc
in
and
xor
xlat
jb
cmp
cmpsl
test
jae
in
ficoml
dec
pop
xchg
jne
dec
rcrl
mov
sbb
lcall
test
subb
xor
filds
xor
lods
cli
mov
bnd
cmpsl
nop
icebp
roll
lcall
cmp
or
clc
and
jns
and
or
mov
test
nop
js
push
scas
or
cmp
cs
scas
mov
and
out
shlb
outsb
cmp
into
repnz
dec
xor
adc
cmp
std
cmpsb
push
jmp
in
test
repnz
sbbb
insb
je
dec
fmuls
fcmovb
adc
cmpl
jnp
add
push
jl
enter
js
mov
sarb
pushl
fwait
js
fs
fs
icebp
icebp
pop
ret
pop
mov
cmp
pop
dec
xor
dec
insl
mov
dec
inc
xchg
dec
sbb
jbe
mov
test
or
aas
inc
sahf
pop
mov
fcompl
xor
divb
rcl
shr
lahf
fisubs
jg
push
mov
in
inc
add
pop
xchg
ljmp
das
cmpsl
jp
dec
test
mov
clc
and
cmp
xchg
mulb
adc
pop
and
sub
jmp
sbb
sbbl
ret
mov
adcb
call
and
push
inc
dec
pop
push
ret
inc
and
pop
mov
in
lcall
test
sar
xor
ret
and
test
mov
cmp
mov
popf
xchg
mov
pop
adc
loop
into
dec
lods
cmp
xchg
xor
je
fstl
and
aaa
jo
rclb
shlb
aam
push
mov
mov
out
mov
jbe
mov
fcomps
push
pop
sbb
jno
rolb
cmpsl
cmp
fiadds
into
addr16
mov
imul
sub
lea
sahf
in
sbb
in
test
push
push
sub
sti
push
dec
imul
add
sbb
jbe
outsl
inc
decb
ret
jmp
test
les
pop
cmp
in
testb
leave
sahf
ja
mov
insl
mov
xor
lds
es
insb
test
mov
fimuls
xchg
inc
sbb
popf
push
jl
jmp
aas
push
cmpl
mov
jae
inc
inc
inc
es
pushf
aaa
add
add
pop
xchg
aam
out
sbb
out
push
or
or
push
xchg
adc
lods
mov
jle
mov
dec
test
pushf
es
and
xchg
fmul
jb
dec
cmp
cmc
popa
sbb
dec
inc
pop
mov
add
sbb
in
clc
sbb
cld
jno
inc
cmc
mov
dec
cmp
shl
call
scas
fidivs
out
xchg
push
dec
data16
das
or
shll
mov
mov
iret
int3
push
and
into
cmc
outsb
mov
les
cli
js
cmp
or
pop
push
and
lods
into
mov
xor
ret
add
mov
flds
push
inc
sti
cmpsb
jl
clc
cmp
mov
leave
out
test
iret
pop
adc
gs
inc
pop
fimull
push
ljmp
mov
outsl
xchg
aam
add
imul
idivl
lahf
pop
mov
push
xor
xor
inc
aaa
jge
fwait
ret
push
out
outsb
hlt
das
icebp
leave
lods
jne
pushf
outsb
ret
xchg
dec
sbb
jb
pop
in
rorl
jns
adc
jne
test
sbb
sbb
cmp
ror
add
and
add
add
mov
add
add
add
pop
add
mov
add
add
pop
add
incl
add
add
add
add
add
add
add
add
add
or
add
add
add
add
das
add
mov
add
add
add
sbb
add
ljmp
stos
push
add
sub
add
push
dec
int3
int3
int3
dec
add
add
push
insl
add
mov
dec
mov
fiaddl
add
add
sub
add
add
add
pusha
je
add
add
dec
ljmp
addb
add
adc
dec
add
test
stos
fs
add
mov
jns
inc
add
pop
sahf
jne
push
mov
out
mov
add
and
or
push
rorl
movl
or
mov
ljmp
or
jmp
test
push
adcl
adc
testl
out
sbb
in
inc
std
xchg
push
inc
std
shl
push
inc
inc
adc
push
add
add
add
push
insb
adc
mov
lea
decl
and
pop
aad
test
incl
adcl
cld
push
push
movsl
gs
repz
push
push
pushl
jg
add
jmp
repz
lea
das
stc
loopne
jne
stos
add
add
mov
adc
lret
xor
add
ficompl
insb
add
add
push
add
add
add
add
add
fisubl
outsl
pushf
sub
imul
dec
jmp
popa
gs
je
repnz
inc
imul
inc
cli
cmp
js
dec
popa
imulb
sub
gs
insb
outsl
dec
cltd
imul
lcall
inc
gs
add
add
add
add
dec
mov
add
add
fiaddl
add
add
sub
add
add
add
add
add
add
sub
add
add
cli
cmp
dec
test
xchg
dec
dec
int3
popa
ljmp
mov
cmpsl
push
jmpw
lock
int3
sub
or
clc
out
add
mov
mov
add
pop
and
inc
mov
pop
pop
cmpb
sub
inc
sbb
jmp
sub
aad
inc
inc
or
adc
data16
push
outsb
push
jp
xchg
cmp
lock
xor
enter
xchg
imul
xchg
outsb
in
inc
push
adc
sub
testb
add
or
movsb
inc
mov
leave
jo
jo
nop
leave
fisubrl
dec
repnz
xor
jb
jmp
insl
cmp
in
testl
dec
in
fisubl
push
imul
xchg
les
hlt
cwtl
and
mov
ljmp
pop
fidivl
xchg
push
test
xlat
cmp
rcl
orb
loope
add
lret
cmc
inc
or
ja
gs
xor
cmp
mov
imul
lret
fs
jae
fstpl
and
testb
push
mov
lahf
or
mov
scas
loope
jne
rcll
sub
lret
xor
inc
push
call
xchg
or
ljmp
push
in
jno
andl
inc
test
ficompl
and
into
call
pop
inc
pop
lcall
lock
fs
xchg
fistps
xchg
fstl
mov
nop
mov
and
ret
jp
pop
cmp
push
jmp
lea
int
add
push
cmpsb
mov
dec
adc
sbb
mov
xchg
push
jl
mov
sub
iret
and
xor
jmp
sbb
add
push
xor
arpl
fnstenv
gs
rcrl
sub
lretw
jo
add
pop
rcrb
pusha
jecxz
arpl
push
outsl
cmp
jnp
and
cmp
cltd
dec
shrb
pop
mov
movsb
pusha
outsl
repnz
bound
test
out
enter
mov
aaa
fadds
sub
xchg
inc
sbb
std
dec
push
orb
adc
ror
mov
jne
push
jbe
stos
cs
call
sbb
loop
dec
sub
sbb
mov
fstpt
pop
jb
push
cmp
cmp
xor
mov
push
sub
fildl
mov
adc
add
iret
imul
pop
lcall
cmp
popa
daa
faddl
daa
add
movsb
sbb
std
aam
mov
mov
adc
mov
stos
decl
call
arpl
sub
jne
in
mov
fdiv
xor
lea
inc
push
dec
jno
or
out
pop
andb
jge
cmp
push
mov
arpl
sub
mov
xchg
aad
ror
pop
add
cmpsl
sbb
sub
xor
mov
fidivrl
cmp
pop
das
lock
dec
fildl
add
cld
and
xchg
xchg
mov
add
dec
rcrb
ds
and
inc
movsl
aad
mov
xchg
sbb
xlat
xor
repnz
outsl
fs
mov
scas
xchg
lock
pop
push
aas
cmp
adcl
xor
mov
xchg
add
and
add
es
clc
insl
sahf
dec
pop
and
pop
adc
jp
mov
leave
jbe
dec
data16
sub
repnz
mov
test
rorb
or
cs
out
jns
mov
cmpps
sub
icebp
popf
aaa
shll
lret
in
lret
ret
stos
dec
jg
fstps
icebp
mov
push
add
pop
sbb
mov
push
push
hlt
push
stc
and
xchg
jecxz
xor
iret
pop
jp
pop
xlat
cltd
or
lea
push
in
adc
xor
mov
and
mov
andb
aad
jge
add
scas
insb
addl
rcll
adc
inc
jle
stos
shr
pop
push
push
xlat
ficoml
pop
rorl
cmp
mov
pop
cmp
pop
push
sub
insl
mov
ds
add
andb
test
push
adc
mov
out
aad
xor
pop
scas
ss
add
sahf
sub
mov
pop
pop
push
movsb
or
cmp
call
ret
ret
mov
pop
xor
adc
mov
pop
outsb
and
sarb
out
sub
cmp
adc
add
ficoms
mov
mov
push
xchg
adc
pop
lcall
mov
cmp
cmp
imul
insb
shl
mov
xor
insb
hlt
pop
fwait
aad
lahf
push
inc
mov
mov
and
cmp
jne
cmp
in
add
aad
xor
fmuls
lcall
popa
inc
dec
adc
out
jne
lds
cmp
cmp
mov
dec
rcrb
pop
roll
inc
shlb
nop
repnz
sub
mov
sbb
xchg
divb
pop
pop
and
dec
imul
or
dec
add
bound
cmp
fdivrs
sub
js
inc
dec
test
jo
shrb
pop
or
in
ret
pop
and
mov
roll
add
sub
cmc
and
jae
ss
enter
sbb
or
loop
mov
cmpsb
push
and
cmp
popa
xchg
mov
lods
bound
push
jo
repz
or
jae
mov
das
dec
mov
or
xlat
inc
mov
test
mov
scas
mov
or
xlat
mov
cmp
movsb
mov
or
mov
lock
aam
out
sbb
or
stos
shl
sub
pop
movsb
lahf
push
inc
out
out
cmp
and
cmpsb
jo
iret
popf
inc
test
ficoml
movsl
arpl
mov
dec
push
les
cltd
call
sub
leave
pop
jg
stos
leave
pushf
sub
imul
cld
pop
cmpl
js
add
mov
popa
push
or
sub
sub
or
push
stc
sbb
mov
push
xchg
sub
mov
sbb
jnp
ja
aad
loope
aas
cwtl
sahf
mov
popl
dec
cmovnp
rclb
inc
or
stos
mov
shl
mov
out
push
mov
fnstcw
xchg
movsb
outsl
adc
outsl
fidivl
outsl
and
cmp
xor
jb
inc
push
jmp
jmp
pusha
mov
or
hlt
outsl
lahf
adc
ficomps
test
in
and
ss
jbe
add
inc
dec
in
fwait
ds
fldenv
lds
mov
sbb
outsb
cmp
jo
imul
out
mov
shlb
and
iret
cmp
sbb
movb
out
pop
outsl
inc
mov
push
iret
lods
call
xchg
adc
mov
lret
je
shrb
insb
add
xor
push
lret
out
int
mov
mov
lret
out
das
pop
movsl
sub
in
out
addl
pop
test
iret
mov
out
adc
mov
xor
fmull
movsb
nop
int
xchg
loop
mov
xor
out
adc
icebp
mov
fwait
jno
int3
pop
ror
jmp
dec
and
push
jecxz
xchg
lret
cmpsb
std
imul
or
cmpsb
rcr
pusha
pop
in
sub
mov
or
dec
jns
or
cmp
push
jge
int
pop
mov
hlt
out
and
mov
and
xchg
mov
push
scas
sbb
and
in
icebp
mov
mov
stos
xchg
xor
jp
cmp
orl
mov
push
xchg
pusha
out
adc
stc
pop
pop
in
inc
fmuls
or
inc
add
jns
jmp
pop
sub
je
mov
cmpl
aad
stos
into
adc
bound
push
pop
dec
xchg
fidivrl
mov
aam
add
sub
mov
push
movl
pop
dec
movsl
sbb
divl
int3
xor
mov
daa
sub
mov
push
sub
insb
cmpsb
push
fldcw
or
sub
das
dec
mov
out
jle
into
sbb
jns
ljmp
cs
sbb
pop
ss
xchg
mov
sbb
inc
mov
sbb
mov
xor
and
or
pop
and
repz
dec
xchg
loop
mov
sbb
fldl
aas
sbb
sub
adc
mov
xchg
cwtl
mov
sti
adc
loopne
adc
jnp
pusha
mov
fwait
xor
sub
imul
negb
mov
inc
loop
daa
inc
lock
mov
mov
cltd
xor
out
test
frstor
cmpsl
popa
imul
cmp
sbb
pop
cli
add
push
fimull
cmpsb
sbb
in
pushf
sub
enter
in
xor
repnz
lock
lods
sbbb
imulb
mov
and
xchg
push
rcl
dec
pop
loope
shrl
xlat
int
sbb
adc
lds
pop
mov
lock
ljmp
dec
mov
leave
ret
add
mov
mov
aam
test
std
ja
xor
pop
fdivrs
mov
roll
aas
adc
xchg
xchg
or
aaa
repnz
push
sbb
cmc
cwtl
lahf
dec
cmp
out
movsb
add
xchg
mov
ss
push
inc
out
mov
and
and
add
mov
divb
sbb
sbb
jmp
push
push
lret
pop
test
test
xchg
loopne
in
adc
lea
jecxz
pop
inc
sub
and
in
cltd
outsb
icebp
clc
push
and
ds
mov
dec
pop
mov
push
push
adc
mov
xchg
xchg
int3
inc
pushf
vmread
mov
ret
scas
shr
bound
pop
or
pop
bnd
cwtl
jnp
lcall
add
or
insl
xchg
pop
xlat
inc
lret
jnp
ljmp
gs
dec
cld
or
shl
scas
inc
les
int3
pmaxub
imul
into
xor
mov
mov
out
inc
lea
out
xchg
mov
insb
insl
ret
imull
in
mov
jle
jmp
aam
pushf
push
cmpsb
cli
jnp,pn
inc
in
inc
movsb
daa
or
stos
pushf
dec
je
data16
mov
xchg
ficomps
dec
adc
xchg
daa
decb
dec
sbb
or
js
cmpsl
mov
sub
mov
jae
xor
in
lahf
insl
addr16
lret
pusha
cmp
mov
inc
lea
mov
cmc
jns
repz
cmc
bound
daa
rorl
aaa
and
mov
cld
rcrb
sbb
lea
nop
push
mov
call
stos
mov
dec
mov
gs
pop
or
mov
mov
sbb
scas
mov
int3
daa
std
stc
sub
out
out
std
jp
mov
clc
mov
cltd
cmp
xchg
sarb
hlt
pop
xor
ja
sahf
imul
lock
fs
loopne
and
push
push
popa
push
push
mov
push
xchg
mov
sarl
sbb
stos
jge
repnz
js
sub
push
pop
xor
xchg
ret
mov
mov
mov
int3
cmp
sub
out
jns
lretw
cmp
and
aam
lods
sub
aas
sbb
and
aas
sbb
push
push
sbb
inc
nop
call
jmp
fs
push
push
push
cmp
inc
xchg
test
push
mov
add
jecxz
scas
jle
mov
push
repnz
add
fwait
ds
and
jae
sahf
je
or
out
jo
xorb
push
adc
jb
and
add
lret
fs
je
fcmovbe
pop
rclb
mov
ret
fdivrs
xchg
push
enter
push
shrb
and
cmp
cs
dec
cmp
push
or
jo
mov
gs
mov
dec
divl
inc
aas
sti
faddp
scas
popa
cmpl
out
push
bound
inc
ss
aaa
jecxz
mov
sbb
idivl
data16
adc
mov
sbb
add
ds
fildl
xlat
pop
std
cmp
and
stos
xor
sub
mov
pushf
inc
fdivl
dec
in
cmpb
mov
pop
fisubs
cmp
fdiv
add
xor
jbe
ds
testl
adc
dec
jnp
and
xor
jnp
sbb
and
mov
jp
nop
cs
bound
jno
jae
idiv
dec
xchg
int
add
divb
lock
cmp
dec
adc
rorb
mov
jl
or
out
or
xlat
lcall
incl
inc
daa
fldl
push
jg
sub
out
repnz
fdivp
ljmp
in
daa
xor
int
test
lods
mov
mov
pusha
mov
push
daa
shr
dec
ljmp
and
dec
adc
imul
jge
xchg
movsb
mov
in
xchg
xchg
cmc
ficoms
icebp
mov
nop
xor
dec
cmp
pusha
or
bound
jle
xchg
push
jmp
xchg
popf
rcrl
ljmp
xchg
or
sub
test
imulb
pop
leave
mov
adc
or
fadds
rorb
sub
addr16
gs
out
pop
out
mov
push
rolb
sbb
push
add
adc
out
adc
shl
cmpsb
push
scas
jb
hlt
adcl
mov
cmpsl
cmp
call
fildll
je,pt
outsl
nop
sbb
pop
sbb
mov
mov
popf
mov
outsb
dec
xchg
push
mov
pushf
inc
notb
mov
les
les
lods
inc
adc
insb
jno
inc
iret
movsb
jae
lret
popf
mov
adc
test
mov
push
scas
fisttpl
xlat
add
stos
xor
insb
inc
adc
push
enter
mov
call
mov
push
mov
ror
push
jmp
cmp
leave
sbb
stc
fucomip
dec
sub
push
adc
cltd
push
out
xchg
fs
pop
popa
in
dec
hlt
jo
push
frstpm(287
mov
pop
ss
and
out
dec
dec
inc
dec
sbbb
xchg
mov
xor
insl
sbb
push
fs
xor
ficoml
jns
ss
cmp
clc
loope
aaa
pop
sbb
sub
cmp
and
mov
aam
mov
and
or
jp
xchg
push
subb
pop
cmp
jp
pop
and
mov
push
stos
je
fdivrp
out
xchg
xchg
xchg
out
pop
push
adc
ljmp
xchg
pop
xchg
dec
jge
repz
add
out
mov
xor
push
sahf
mov
add
cmp
or
pop
jmp
clc
jns
test
adc
les
and
dec
popf
aam
push
jle
fwait
subl
jg
xchg
mov
or
popf
cmpl
scas
xchg
inc
imul
mov
std
mov
dec
ss
adcl
pop
adcb
inc
das
fwait
cmp
outsb
sub
xchg
dec
xchg
cmp
incl
popf
mov
xlat
negb
inc
sbb
mov
or
cmp
push
inc
mov
repz
lods
dec
pop
add
jb
lret
mov
mov
das
inc
das
testl
cmp
cmpsl
fmuls
add
and
out
sub
loope
and
and
and
fildl
test
leave
ds
cmpw
fsubrl
out
cmp
outsl
addr16
insl
mov
pop
sub
cmc
sub
cltd
inc
aaa
push
cld
call
sub
mov
pop
push
shrl
roll
cmp
xchg
jl
push
inc
iret
cmpsl
lret
popa
mov
lods
enter
sbbl
js
pop
sbb
fwait
cltd
xor
push
add
xchg
popf
add
jne
fnstcw
dec
and
xchg
das
push
imul
fcomi
or
jmp
pop
cltd
fwait
mov
mov
cltd
fidivrs
xor
sbb
setae
mov
mov
xor
mov
stc
xchg
sti
lods
into
xlat
sub
adc
push
in
pusha
pop
es
sub
jbe
xchg
ljmp
int
mov
stos
xor
or
xchg
aad
adc
mov
inc
dec
mov
movsb
lods
das
push
fsubrs
sub
xchg
adc
jns
adc
stos
gs
loop
das
leave
or
in
pop
fisubrs
movsb
pusha
pop
loop
push
cmc
sarb
mov
mov
lahf
mov
mov
sub
push
out
mov
icebp
loope
push
fsubrl
push
sbb
test
cmp
mov
subb
icebp
sub
pop
movl
lcall
rolb
imul
leave
inc
sbb
xor
mov
dec
jo
mov
cmc
mov
test
add
ret
popa
xor
js
push
ret
mov
inc
jne
lcall
mov
xchg
aad
inc
js
int3
cltd
js
and
imul
sub
shlb
outsb
loope
mov
cmc
mov
sbb
dec
push
movsl
ret
rorb
jmp
outsb
push
cwtl
cmc
repz
out
idivl
pop
dec
and
cmp
or
test
outsl
imul
pop
mov
hlt
shll
cmp
hlt
addr16
ss
lods
jne
jmp
jne
addl
sub
mov
mov
pusha
popf
out
dec
fldt
ret
ja
sub
lcall
xchg
xchg
rolb
jns
pop
sub
adc
mov
jae
mov
jb
jmp
adc
inc
cmp
pop
or
mov
push
test
cli
orb
outsb
imul
mov
cltd
cmp
or
and
aam
push
sub
hlt
mov
cltd
sbbb
jp
jmp
add
loopne
mov
daa
mov
sarl
popf
sahf
adc
orb
add
and
mov
cmp
ret
loopne
rcl
movsl
cli
ret
push
inc
cmp
es
aam
sbb
push
mov
sub
sub
and
push
mov
add
adc
sub
pop
lods
mov
rorb
sub
sahf
loopne
jg
inc
leave
push
cmpsb
xlat
or
mov
ss
test
inc
movsb
movsb
cmc
lea
push
daa
inc
mov
daa
adc
sub
cmc
and
add
add
add
add
add
add
cmp
add
add
or
add
add
ficompl
add
add
stos
push
add
add
add
add
dec
mov
add
add
fiaddl
add
add
stos
adc
add
add
mov
addb
push
lcall
add
xor
loop
sub
mov
loop
add
adc
lcall
add
jb
push
xor
add
add
xchg
pop
add
push
mov
add
add
add
fiaddl
add
push
lcall
add
add
hlt
cmp
adc
add
jle
or
add
add
add
test
add
add
test
sbb
sbb
add
sbb
add
jae
jne,pn
cmc
arpl
sub
dec
dec
add
aas
jb
inc
enter
jecxz
out
mulb
fimull
add
leave
mov
adc
mov
sbb
cmc
or
repz
xor
idiv
cs
cltd
mov
hlt
add
clc
dec
out
imul
or
pop
mov
sub
add
ljmp
call
pop
mov
inc
pop
add
loop
adcl
je
test
adc
jmp
inc
cmp
test
adc
test
xchg
push
cmp
or
or
bound
cld
cld
incl
mov
loopne
adc
je
clc
fs
shll
push
inc
decl
add
add
sub
pop
pop
add
xchg
inc
add
add
in
add
add
xor
add
add
add
add
add
push
addb
inc
add
sbb
gs
cmp
gs
test
outsl
add
ja
insb
gs
insb
mov
jb
push
jae
and
aam
add
gs
popl
inc
add
lret
jb
inc
imul
add
xor
sub
add
add
add
add
add
add
add
push
lcall
add
add
hlt
cmp
add
add
or
add
add
add
add
fs
add
add
mov
movsl
adc
mov
in
mov
imul
jg
ljmp
cmp
push
loop
icebp
popa
xchg
fs
push
xorb
repz
inc
mov
paddd
or
ds
aaa
test
dec
sarb
or
mov
pop
fnsave
stos
dec
daa
and
xlat
lods
das
or
push
add
pusha
daa
adc
adc
aam
sbb
pop
hlt
ret
cmpsb
ror
push
push
and
xbegin
subb
xchg
iret
lcall
sub
and
lret
inc
lahf
outsb
test
inc
dec
cmp
sbb
aam
les
inc
cmp
xchg
test
andb
sub
mov
test
loop
mov
xchg
ret
sbb
sbb
arpl
sub
sbb
inc
shl
int3
jns
sbb
dec
inc
and
out
mov
or
sub
lret
jge
push
dec
ret
push
dec
or
add
cmp
arpl
push
repnz
mov
loop
jecxz
adc
int
or
outsb
add
scas
pop
xchg
push
ja
cwtl
movsl
mov
xor
dec
cmp
jg
fwait
or
popf
fadds
and
call
mov
pop
loopne
nop
popf
pop
xlat
imul
insb
ret
fisubs
mov
push
and
test
repz
ja
stc
clc
ret
loope
pop
gs
sub
jnp
gs
orl
jne
lea
cltd
fidivrl
or
lock
mov
cmp
xchg
sub
mov
inc
scas
movsb
jb
cmp
test
jecxz
outsl
std
fldt
jp
jge,pt
mov
mov
add
cld
inc
xor
mov
mov
dec
data16
cmpsl
and
mov
lods
push
mov
sub
fwait
jae
xchg
aaa
mov
lcall
sbb
xor
flds
xor
lea
jg
pop
mov
loope
shlb
shll
pop
shll
or
into
int
ret
push
call
or
faddl
mov
sub
pop
or
lcall
pop
inc
movsl
outsb
inc
adc
lahf
das
aaa
and
xchg
mov
mov
aaa
xchg
in
mov
into
bound
jmp
sbb
data16
cwtl
sub
loopne
dec
jp
rclb
jae
sub
and
outsl
pop
sti
fiaddl
ds
cmp
les
in
adc
jae
out
push
and
jae
inc
push
sub
and
jb
add
add
je
mov
out
and
out
mov
jmp
push
mov
xor
pop
call
sbb
sub
xor
sub
outsl
pop
mov
adc
roll
jmp
divb
popf
sarb
dec
in
imul
shrb
repnz
mov
mov
sti
fs
loopne
iret
jno
stc
xor
mov
adcb
inc
mov
xchg
fistl
xchg
imul
jno
or
jp
mov
cs
out
out
out
cmp
xchg
dec
imul
jae
and
ljmp
icebp
push
adc
pop
xor
xchg
shll
daa
xchg
cmp
movsb
jle
cmpsb
mov
mov
ja
sub
test
ja
ja
adcb
and
imul
repnz
add
aaa
jle
xor
mov
xchg
inc
cmp
dec
mov
cmp
js
inc
in
std
shr
jge
cmc
arpl
pop
shl
test
sti
ss
jo
xchg
jno
mov
lea
dec
mov
in
imul
mov
stc
sub
into
sbb
xchg
loope
stos
inc
ds
call
rcl
in
xor
int3
stc
jle
ja
pop
popf
fisubrl
fimull
in
sub
nop
and
mov
cmp
xorb
out
xchg
int
enter
mov
push
aas
push
pop
push
mov
xor
xchg
jne
mov
lret
mov
and
jno
dec
jns
ljmp
push
fisttpl
inc
sub
add
out
cmp
mov
fcomps
mov
ret
mov
xchg
jg
cmp
rcll
lret
add
add
lds
xor
pop
popf
or
pop
stc
bound
xchg
push
pop
adc
and
call
add
adc
pop
mov
mov
jg
adc
pop
popl
sub
pop
and
loopne
adcb
fldenv
and
in
lcall
mov
add
push
fwait
lret
jmp
movsb
adc
mov
mov
fcmovu
jecxz
data16
and
inc
inc
lods
mov
and
mov
pop
pop
add
into
mov
push
xchg
dec
mov
movsl
push
pop
std
add
leave
cmpsb
leave
xchg
push
mov
and
xrelease
adc
jo
mov
jge
fs
sub
adc
add
push
ljmp
cs
divb
xor
cmpsb
mov
leave
pusha
ljmp
cwtl
fldt
in
repnz
adc
loopne
in
mov
insb
sarl
push
insb
scas
addr16
xor
xchg
movsb
enter
and
in
push
les
lcall
out
adc
imul
bound
test
daa
dec
in
xchg
pop
lods
inc
adc
rclb
out
cmc
jl
cmp
sub
mov
stos
inc
pop
push
xchg
jb
sub
inc
jo
scas
jns
jmp
mov
adc
add
loope
cmpsb
pop
xor
movsl
imul
rorb
lret
add
rclb
cmp
inc
pop
sbb
pop
cmp
sbb
pop
daa
mov
aad
gs
pop
fisubs
cli
outsb
cwtl
jl,pn
jmp
outsb
inc
jl
jge
aam
or
jno
mov
mov
inc
cmpsb
jecxz
lock
or
lret
loop
adc
dec
nop
insl
mov
sub
insl
orl
in
and
mov
add
mov
pop
cmp
mov
arpl
push
jle
das
xor
imul
push
js
data16
sbb
iret
call
ret
mov
xchg
xlat
mov
lock
adc
and
or
loopne
xor
pop
pop
imulb
jb
leave
mov
lea
lret
ret
dec
mov
xor
mov
test
push
xor
clc
dec
cmp
imul
add
insl
cli
jnp
fisubrs
and
cmc
adc
mov
sub
jecxz
push
dec
clc
sub
in
jo
xchg
xor
push
arpl
xchg
icebp
imul
mov
pop
jbe
push
push
mov
xchg
xchg
hlt
ret
add
sbb
jp
and
addr16
ljmp
andl
mov
test
loope
jno
out
cltd
lock
loope
lock
xorb
movsl
adc
loop
jne
inc
inc
imul
push
push
jnp
sarb
clc
or
cmp
outsl
icebp
mov
mov
push
adc
es
rcrb
jge
xor
ja
push
adc
dec
mov
jae
je
jg
push
out
in
cmpsb
bound
adc
cmp
and
pushf
loopne
push
mov
mov
add
mov
loope
rorb
push
sbb
lods
repnz
repnz
aad
fnstsw
cltd
adc
push
aas
pop
inc
shrl
add
inc
aas
xchg
int3
into
mov
nop
in
cwtl
xor
rcrl
lock
mov
xor
jno
lds
popf
inc
xchg
push
cmp
push
lret
mov
lahf
ret
dec
inc
lods
outsl
mov
mov
ret
aaa
shlb
cmp
cmc
sahf
iret
push
test
push
movsl
aam
sub
das
call
mov
pop
add
out
rorl
sub
iret
pop
dec
cli
mov
pushf
inc
pop
test
out
aad
fsubl
inc
sub
pop
lcall
ret
bound
shll
adc
out
roll
inc
jno
js
add
pop
repz
adc
into
xor
dec
int3
andb
or
sub
xorb
adc
popf
xor
in
addb
jg
and
out
mov
jns
xlat
popf
inc
sub
lods
dec
je
cwtl
notb
stc
aaa
orl
scas
testl
cmpsl
cmpsb
xor
neg
cmpsl
push
in
xchg
add
in
and
bnd
mov
push
stc
ljmp
or
cmp
divb
mov
xor
popf
imul
mov
int3
nop
mov
push
mov
rcrl
adc
xor
jbe
mov
mov
mov
shll
or
sub
pop
bound
lahf
call
movsl
pop
insb
and
scas
icebp
les
and
xchg
jg
in
or
xor
mov
or
movsl
dec
adc
fsubrl
add
inc
inc
dec
fidivs
mov
inc
dec
test
out
data16
jle
pop
xchg
cwtl
push
cmp
lds
lea
xor
out
sbb
and
inc
in
mov
sub
hlt
mov
loopne
pop
cld
xchg
mov
xchg
xlat
stc
loopne
sahf
inc
pop
mov
daa
dec
pop
lahf
add
cwtl
sti
cmpsb
repnz
je
jg
mov
test
std
adc
iret
xor
sahf
movsb
push
mov
and
jb
sti
scas
dec
pop
cld
es
push
xor
mov
cld
data16
push
lcall
mov
pop
call
mov
adc
lret
lods
pop
iret
mov
mov
lods
lods
sahf
mov
jp
mov
mov
gs
or
lods
jae
pushf
jae
fldpi
mov
and
mov
bound
mov
add
mov
xchg
push
out
popf
std
mov
movsl
sub
fbld
push
fstpl
jo
into
dec
jl
and
push
leave
das
xor
fldt
add
push
lahf
je
test
jno
aad
idivb
add
rcrl
push
sub
adc
add
inc
call
jmp
pop
imul
pop
int3
xor
cwtl
ret
in
push
xor
jmp
rorl
loop
cs
stc
add
add
sbb
add
mov
sbb
fisttpll
into
aas
xchg
pop
inc
and
cmpsb
lds
mov
out
or
stos
pop
pop
dec
inc
sahf
sub
in
rolb
out
cmp
loop
cmp
popf
shr
sbb
push
push
mov
icebp
mov
pop
cs
xor
push
or
mov
in
mov
mov
push
xchg
es
lds
rorb
sub
out
sub
or
mov
cmpsb
inc
fdivrp
adc
mov
cmp
mov
and
jmp
jg
mov
lods
outsl
add
mov
xor
mov
cmp
fildll
cmp
xchg
mov
outsl
jg
mov
cltd
stos
jecxz
cmpsb
enter
sub
andb
loopne
sti
adc
ds
dec
jb
inc
cmp
inc
inc
aam
mov
imul
hlt
out
xchg
jp
negb
mov
je
fsubp
ds
mov
pop
push
xchg
sarl
loope
add
mov
jb
lods
xchg
jns
rcr
lret
std
pop
push
adc
dec
jne
pushf
mov
or
push
imul
dec
dec
ja
std
fidivs
stos
stc
xchg
test
or
roll
lock
cmp
add
test
pop
shll
popl
addl
jge
mov
lcall
inc
repnz
inc
pop
icebp
mov
arpl
in
sub
cmp
push
scas
mov
xchg
inc
push
push
lods
outsb
int3
stc
cmp
scas
addr16
test
ljmp
sbb
add
lahf
cmovne
lea
cs
loopne
xor
mov
xor
insl
inc
xchg
cmp
mov
jns
repz
mov
push
xchg
in
lahf
repz
adcb
or
icebp
sub
jp
jb
pop
jbe
xchg
sahf
scas
lds
mov
xor
pushf
sub
jle
jns
xor
lret
pop
clc
jb
ljmp
cli
imul
xchg
xchg
pop
repnz
push
xchg
xchg
pop
imul
mov
imulb
arpl
cmp
mov
xchg
insl
repnz
cmp
inc
push
fidivrl
repz
mov
lahf
push
jne
sub
lock
jo
jmp
pop
loopne
clc
aaa
jge
jmp
xchg
sub
jne
sbb
data16
js
jnp
xchg
pop
lret
jp
daa
inc
mov
xor
mov
add
mov
inc
pop
fcmovnu
mov
pop
jmp
pop
test
inc
lock
dec
enter
xchg
lcall
incl
xor
mov
and
scas
inc
lods
mov
jg
fldt
out
mov
pop
stos
or
mov
push
repz
cmpsb
loopne
sub
lcall
ja
clc
mov
std
fldl
and
dec
es
jle
in
push
or
shl
fisubrs
aaa
push
xor
fbld
mov
mov
push
adc
clc
push
das
fmuls
or
out
xchg
cmp
and
inc
xor
out
push
call
in
stos
or
decl
shl
jp
inc
mov
fwait
aaa
push
out
scas
add
enter
dec
das
jle
mov
push
push
xor
cmpsb
mov
sbb
xchg
push
mull
mov
jbe
iret
xchg
jecxz
pop
jno
xor
mov
jnp
inc
lods
jmp
dec
stos
test
mov
jmp
xor
push
xchg
scas
subl
inc
lea
mov
test
je
fstpl
lea
jge
inc
pop
clc
push
adc
mov
daa
cwtl
xchg
push
mov
dec
mov
ret
mov
fndisi(8087
cld
leave
fcomp
in
mov
pusha
ds
sbb
lahf
je
iret
lods
lcall
mov
test
push
sbb
push
loopne
loopne
lods
nop
jg
cmp
aaa
orl
fidivs
inc
inc
pop
mov
xchg
mov
dec
hlt
ffree
out
pop
imul
mov
add
icebp
dec
xor
jmp
rclb
into
push
negl
out
vmread
push
sti
dec
sbb
cmp
mov
fs
es
xlat
imul
mov
call
sti
xor
pop
and
sbb
adc
xchg
and
cmp
mov
pusha
lcall
jmp
xor
jno
jle
cmp
repnz
xchg
sbb
pop
in
adc
insb
sub
mov
int
and
loopne
sub
mov
mov
repz
cmc
push
adcl
adc
stos
dec
xor
inc
or
push
cmpsb
xchg
enter
push
je,pt
fs
mull
cld
dec
xor
sub
in
lock
adc
imul
std
push
sti
fwait
rep
adc
jl
dec
nop
repnz
push
out
pop
mov
jne
movsb
and
inc
jbe
sub
add
loopne
dec
lcall
jno
add
aaa
shll
xchg
xchg
sub
sub
cmpsb
adc
iret
nop
xor
orb
sub
push
lds
and
xlat
test
lcall
je
mov
test
aaa
add
mov
push
imul
in
mov
idivb
orl
lods
fisttpl
cmp
xchg
aaa
cmpsb
test
pop
inc
inc
movsb
sub
mov
mov
filds
mov
add
out
dec
or
test
fbld
aam
lock
sub
daa
inc
lock
or
sbb
adc
mov
mov
and
divb
cli
daa
faddp
jp
sub
fcoml
mov
imul
inc
mov
jmp
adc
mov
cmpsb
dec
or
add
scas
pop
cli
dec
mov
pop
ret
ret
int
testl
loop
add
xchg
out
xchg
push
pop
lret
bnd
es
push
add
add
push
stos
dec
out
mov
popf
cmp
cwtl
cmp
rorl
loopne
adc
push
dec
loop
aam
sub
inc
ret
loopne
jle
das
incb
jb
xor
inc
lcall
pop
and
pop
jp
pushf
mov
adc
repnz
hlt
lds
xchg
xor
adc
mov
cmp
or
add
add
and
imul
cmp
out
ja
aam
int3
push
setae
out
push
inc
mov
dec
jns
scas
dec
mov
dec
lods
test
sahf
pop
inc
lret
addr16
das
mov
ret
jmp
int3
jo
icebp
int
fildll
dec
mov
aad
fcmovu
cmp
xchg
popa
pop
cmp
adc
pop
dec
dec
xchg
movsl
sbb
icebp
dec
dec
aam
rol
lcall
dec
into
pop
sub
push
pushf
adc
ja
pop
mov
dec
lcall
outsl
dec
mov
lcall
or
jmp
mov
sub
inc
sarb
mov
hlt
imul
mov
popf
dec
cmp
pop
icebp
cmpsl
addr16
push
cmp
arpl
mov
cmpsl
mov
sbb
push
push
fnstsw
mov
or
add
ss
cltd
push
je
addr16
jne
jecxz
enter
data16
mov
jp
push
dec
jo
add
mov
mov
sbb
or
inc
sub
mov
mov
and
cmpsl
or
les
mov
inc
sub
cmp
pop
loopne
xchg
loope
mov
mov
and
pop
xor
dec
fcoml
js
jb
adc
sub
sub
add
and
xchg
cmp
pop
jo
cltd
mov
mov
pop
dec
dec
jle
cmp
adc
int
arpl
cs
dec
lret
push
roll
push
leave
sub
push
cmp
es
stc
mov
leave
out
add
mov
cmp
push
imul
push
push
push
mov
cmp
sbb
popf
mov
lods
pop
mov
pop
mov
inc
mov
stc
dec
imulb
cmp
mov
push
mov
push
pusha
pop
insb
push
or
mov
sub
fidivl
push
in
movsl
int3
push
cmpsb
and
sub
imul
mov
mov
aad
cmp
push
cmp
mov
test
add
add
sbb
add
add
add
add
je
add
add
inc
mov
add
add
in
add
add
xor
add
add
add
add
add
push
lcall
add
add
hlt
cmp
add
add
or
add
add
add
add
add
add
jle
add
add
dec
add
add
aam
add
add
and
stos
add
ja
xor
cmc
int3
int3
int3
int3
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
mov
push
mov
call
push
mov
call
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
or
mov
leave
ret
push
mov
push
push
mov
push
mov
mov
mov
xor
add
xor
mov
mov
add
mov
mov
mov
mov
call
mov
movzbl
movzbl
sub
je
call
push
push
pushl
inc
pushl
pushl
call
mov
cmp
je
jmp
mov
mov
mov
mov
add
push
pushl
call
mov
mov
movzbl
movzbl
sub
je
addl
push
push
call
pop
pop
push
push
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
add
add
add
push
outsb
sbb
add
dec
add
and
add
add
add
add
add
add
or
add
js
fcoms
add
add
test
add
add
add
add
sbb
add
add
sub
and
insb
mov
add
adc
jae
sub
dec
add
push
or
iret
mov
inc
fstl
adc
add
int3
push
mov
incl
add
std
lods
xchg
call
add
push
mov
or
push
push
mov
mov
jge
push
push
lea
mov
jge
add
xchg
and
sub
aas
jecxz
adc
decb
test
lcall
xor
push
loopne
dec
lea
add
call
jge
pop
push
incl
push
mov
inc
adc
sbb
enter
insl
push
adc
push
incl
sbb
push
add
adc
add
add
add
add
cmp
add
add
enter
add
cwtl
push
add
add
rol
je
imul
popa
addb
add
js
inc
inc
add
shll
gs
add
js
push
dec
popa
dec
push
jns
stos
xor
add
mov
push
jne
gs
dec
outsl
jb
or
add
hlt
add
add
enter
add
cwtl
push
add
add
test
add
add
js
add
add
or
add
add
fcoms
add
add
inc
add
add
mov
and
ret
jno
pop
cmp
adc
leavew
adc
fildll
das
jl
test
push
bound
or
sti
leave
ffree
je
mov
jno
mov
and
adc
roll
aam
daa
add
adc
sbb
jo
in
add
nop
or
push
fisttpll
enter
dec
in
enter
fs
mov
mov
adc
incl
gs
mov
cwtl
int3
fisubs
inc
or
fwait
loop
mov
out
jp
mov
mov
mov
jecxz
push
add
cwtl
sub
dec
xchg
sarb
negb
cmp
jp
add
jbe
jns
enter
xlat
lret
push
test
sbb
mov
push
jl
xchg
sbb
inc
lret
add
fimuls
mov
sti
loop
fwait
sahf
mov
push
push
lods
dec
sbb
pop
test
test
cmp
xchg
xor
pop
sub
sub
stc
jecxz
loopne
adc
xchg
cmp
or
arpl
cmp
sub
sarl
std
cmpsl
fwait
lahf
xor
mov
rcr
push
pop
pop
jecxz
inc
mov
mov
and
sub
aam
test
cmpsb
mov
mov
cli
mov
repz
mov
pop
dec
xchg
aad
bound
clc
lret
and
or
dec
fwait
dec
jo
xor
and
roll
push
push
ds
add
xor
or
call
rcrl
out
es
test
mov
mov
add
sbb
push
pop
jl
mov
in
cwtl
pop
push
xor
std
in
inc
xor
aam
scas
lcall
push
push
add
arpl
jg
dec
fidivs
cmpsb
push
pushf
inc
mov
xchg
in
popl
mov
dec
cmp
into
pop
movsl
pop
int
dec
ret
or
subl
inc
xchg
rcr
mov
pop
cwtl
test
lret
adc
sbbb
flds
in
add
dec
mov
fs
xor
mov
xor
xor
sti
fsub
xor
bnd
aas
jp
loop
outsl
sbb
ret
test
mov
ret
data16
insl
dec
into
xlat
lea
adc
mov
scas
lea
sbb
loop
je
loopne
xchg
outsl
popa
into
insb
mov
dec
rclb
and
mov
mov
inc
cmp
mov
rorb
das
mov
iret
mov
rorl
cmpsl
cmc
clc
roll
mov
sbbl
jbe
pop
inc
push
pop
cmp
and
filds
jl
cmpsb
insb
push
xchg
inc
dec
xchg
jne
jg
pop
mov
ficoms
mov
or
cltd
sti
out
jmp
pop
ljmp
rorb
and
lods
dec
mov
jle
leave
and
fnstcw
adcl
sub
subb
xor
dec
out
fdivr
inc
push
pop
xchg
stos
data16
ret
dec
int
stos
gs
cwtl
cmpl
cmpsb
cmp
cwtl
andb
cmp
lods
xchg
fldl
and
in
xor
pop
sbb
mov
repnz
ficoms
imul
lds
push
jecxz
adc
xchg
dec
mov
das
movsb
int3
xor
andps
insb
push
dec
pop
inc
pusha
mov
xchg
jbe
jmp
in
movsl
test
shll
addr16
or
out
lcall
insl
xchg
add
roll
fnstsw
sub
out
pop
imul
push
sbb
jnp
push
pop
xchg
adc
jbe
add
inc
gs
xor
cltd
cmpsl
xlat
ss
jge
push
cmp
ja
bound
scas
pusha
dec
rcrb
xor
adc
scas
sub
cld
inc
data16
pushf
dec
in
inc
mov
push
cli
dec
add
adc
insb
jne
push
mov
in
jmp
xor
sub
adc
adc
jbe
jle
sarb
incb
sbb
int
loope
out
xchg
loope
dec
push
xor
mov
cmp
mov
mov
mov
imul
xor
into
insl
cltd
test
rol
bound
nop
sub
sbb
sti
inc
pop
ljmp
jmp
sbb
mov
xchg
mov
inc
push
out
ja
cltd
inc
mov
hlt
add
pop
xor
cli
clc
sbb
sub
lretw
or
push
and
mov
fsubrl
dec
jg
into
rorl
cs
xor
pop
and
aad
cmp
addr16
pushw
jmp
jne
push
cmp
mov
scas
popa
scas
pop
add
rol
push
stos
xor
jne
adc
popf
pusha
xchg
or
or
shr
push
xchg
test
shll
push
and
aaa
xor
push
and
es
loope
and
mov
mov
imul
cmpsl
fldt
push
pop
sbb
or
push
sub
sahf
mov
jmp
mov
inc
push
sub
sub
call
dec
daa
sbb
lea
sahf
aad
and
stos
and
ljmp
mov
call
adc
popf
aas
sub
sbb
xchg
imul
mov
lret
mov
mov
call
xchg
push
nop
ljmp
cli
bound
dec
mov
gs
push
rclb
fcmovu
xchg
xor
push
lods
mov
sbb
sar
sahf
inc
sub
jp
pop
and
xor
bound
push
sub
and
mov
sub
jecxz
fldl
dec
rcl
inc
repz
mov
add
adc
xchg
and
mov
das
inc
testl
or
or
out
pop
lods
loope
ss
out
test
inc
int3
add
fidivrl
jmp
data16
xchg
add
push
mov
sub
push
faddl
fsubrs
js
xchg
cld
xchg
inc
out
fstpt
pushf
in
lods
out
test
es
and
push
scas
adc
nop
and
mov
mov
adcb
lret
rclb
popf
jnp
fmulp
out
dec
mov
and
and
push
mov
movsl
lds
or
push
int
dec
filds
xor
cmpsb
ror
sarl
mov
iret
xchg
pop
sub
mov
mov
inc
pop
mov
mov
pop
xchg
sub
pushf
in
sldt
sub
mov
jge
lea
adc
out
in
out
and
aas
clc
mov
test
push
stc
bound
movsl
decl
sbb
inc
aad
cmpsb
sbb
ljmp
mov
ja
pushf
jb
pop
in
xor
mov
shll
xchg
or
ds
lcall
faddp
pop
scas
int3
and
js
stos
rcr
cmp
cld
insl
pop
push
addr16
mov
sbb
add
dec
loope
ficoml
aam
pop
cmp
adc
jecxz
push
pop
sbb
push
addr16
ret
jle
dec
pop
js
cwtl
sti
mov
dec
in
pop
test
xlat
push
push
push
imul
ret
ja
int3
arpl
xor
mov
les
stos
cmc
push
jnp
pop
add
clc
cmp
rcrl
mov
bound
dec
outsl
pop
fs
imul
outsb
cltd
mov
and
sbbl
lahf
and
inc
addr16
ljmp
ret
dec
out
or
jmp
ret
jle
jno
ja
fsubr
xchg
ffreep
sub
ror
in
out
xchg
xor
out
shl
ret
jne
mov
test
aam
dec
adcb
aas
inc
ja
in
sahf
or
test
test
in
and
jp
imul
sub
sbb
xchg
out
jnp
adc
jb
je
xorb
js
loope
mov
sub
pop
push
push
out
dec
xchg
sbb
and
mov
mov
dec
shll
ror
fs
sub
movsb
or
push
mov
push
outsb
movsb
jnp
fimuls
test
pop
inc
xor
lods
cltd
arpl
mov
xchg
jg
enter
pop
fsubrl
mov
les
hlt
adc
pop
cli
adc
nop
xor
pusha
pop
pushf
or
les
or
cmp
mov
mov
andl
mov
mov
cmp
iret
mov
inc
mov
inc
push
jnp
incw
jo
push
popa
andb
in
rcll
fstpl
leave
adc
or
pop
sbb
sahf
popf
lods
xchg
sub
mov
fnstcw
mov
imul
jo
cmp
dec
inc
stos
push
jb
jp
push
lcall
xor
pushl
jmp
sub
pop
ja
push
nop
ret
nop
push
test
dec
mov
dec
imul
shlb
jno
xorb
xchg
dec
rorl
outsl
in
pop
pop
and
das
xchg
or
jp
dec
pop
xor
dec
ss
insl
sub
gs
mov
lea
mov
rorl
xchg
out
dec
jg
iret
sbb
fimuls
push
pusha
cmp
inc
gs
add
xor
xlat
rcr
fnstenv
enter
mov
dec
jp
test
jl
lahf
ljmp
aaa
mov
jae
or
js
mov
out
and
pop
ja
xchg
clc
add
fmull
sbb
lea
shr
les
rorl
cwtl
add
arpl
mov
mov
cmpsl
dec
addr16
xor
add
aam
stos
push
dec
mov
cmp
add
xor
mov
xlat
pop
ret
jp
nop
ljmp
subl
and
sub
xor
add
data16
test
xchg
repnz
jnp
mov
cmc
imul
inc
dec
pop
scas
mov
lea
shr
cmp
mov
call
out
sbb
and
mov
mov
cmp
push
push
xchg
fsubrs
xchg
into
and
lahf
sub
xchg
or
sar
sub
add
mov
aaa
sbb
lahf
test
cmp
hlt
mov
leave
and
jl
and
xorl
dec
mov
into
or
mov
test
fistl
lods
mov
imul
pop
add
jno
xor
mov
mov
mov
cmpl
add
pop
fmull
push
fwait
lods
pusha
or
xchg
insl
xor
jno
push
and
or
inc
mov
movsl
lret
mov
inc
loop
xlat
mov
sarb
ja
inc
mov
into
cmc
out
aad
pop
adc
subl
aaa
xchg
dec
shlb
out
insl
xchg
lcall
addr16
sub
dec
mov
xchg
aas
lods
dec
adc
xchg
cmp
bound
repz
cmpsl
pop
leave
mov
xchg
fldl
js
push
fs
xchg
lods
sub
filds
add
scas
or
test
jle
ret
push
test
stos
clc
mov
mov
xchg
scas
push
sbb
and
push
mov
sahf
int
orl
xchg
mov
aam
pop
in
dec
ds
js
stos
sub
nop
mov
sub
inc
or
in
mov
jnp
lahf
loope
repz
ja
cmp
push
inc
adc
pop
mov
pop
iret
cmpsl
lock
push
push
mov
sbb
mov
cmp
jns
je
lahf
fs
scas
push
push
push
cmp
addr16
pop
movsb
adc
ret
fdivs
in
adc
cmp
or
mov
push
jmp
fsubrl
dec
or
loopne
jns
lock
aaa
rcll
xor
or
inc
aaa
pop
xrelease
add
lods
sub
jae
fiadds
idivl
xchg
xor
scas
xor
xchg
cmp
loope
cltd
pushf
or
sub
push
sbb
mov
call
mov
add
jo
in
int3
push
sahf
add
movsl
mov
popa
xlat
xchg
mov
pop
das
inc
idivb
cmp
ja
stos
add
notb
test
mov
push
jo
mov
xchg
outsl
add
add
dec
pop
sub
xchg
push
push
movsb
add
pushf
ljmp
cmp
jmp
mov
adc
xor
cwtl
inc
sub
inc
cltd
inc
imul
mov
mov
loopne
mov
aas
mov
sub
dec
cmpsb
lahf
jb
roll
dec
pop
loope
mov
push
hlt
jmp
popf
fbld
dec
outsb
sub
cmp
pop
push
addr16
hlt
jp
and
insb
imul
ds
or
mov
xchg
dec
or
enter
ljmp
mov
dec
daa
dec
xchg
push
aad
pop
push
xchg
jmp
add
idivb
hlt
fsubs
jbe
enter
out
mov
rorl
repz
call
xor
jle
jmp
inc
cmpsl
add
lods
cmp
clc
adc
cmpsl
jecxz
xchg
imul
in
int
loope
mov
jge
aas
lods
call
imul
cmp
loop
xchg
mov
mov
and
rorl
mov
pop
adc
and
jge
incl
jg
adc
adc
stos
sub
jnp
jge
decb
cmp
or
xchg
pop
lret
or
fcmovbe
dec
lds
mov
repz
or
ja
into
dec
dec
mov
mov
fildll
clc
mov
mov
leave
mov
jne
or
lcall
les
faddl
nop
les
sub
clc
adc
pushf
in
sbbb
sub
add
pop
sub
sub
stc
inc
or
imull
push
je
js
cmp
insb
cld
sahf
jns
mov
and
lods
inc
xchg
repz
mov
lds
roll
mov
aas
out
int3
adc
sub
xchg
cli
das
push
scas
ret
les
lret
inc
jns
mov
test
rcrl
fwait
ss
incb
cmp
dec
xchg
scas
pushf
jnp
mov
hlt
dec
int3
mov
xor
in
push
jb
insl
loop
in
mov
cmp
xchg
lcall
inc
dec
push
mov
hlt
dec
add
das
pop
dec
adc
icebp
push
mov
je
add
xlat
pop
subl
cwtl
aad
rcrl
pop
push
sub
std
push
or
inc
push
outsb
jne
gs
jp
inc
xor
or
adc
test
mov
in
mov
and
dec
aas
into
mov
pop
out
mov
or
scas
out
sub
loope
popf
jl
hlt
or
inc
mov
push
lret
movsl
iret
fildl
mov
xchg
push
fwait
mov
xor
jns
out
cmpsl
xchg
xchg
jg
jbe
dec
jp
adc
xor
adc
adc
pop
push
xor
out
cld
insb
pop
rorb
ds
std
sub
mov
dec
hlt
insl
xor
sbb
push
stos
mov
push
pop
sti
mov
mov
filds
test
divb
in
add
rcll
xorl
insb
push
jae
jae
arpl
sbb
xchg
sti
xchg
cmpsl
jae
aam
loope
lea
bound
sub
sbb
mov
fwait
lods
xor
push
int3
jg
scas
xchg
push
gs
mov
push
orb
add
mov
mov
icebp
test
sub
push
xchg
cmpsb
xlat
inc
jbe
aaa
fnsave
jle
mov
mov
ss
sub
stos
fucomip
and
xor
scas
enter
pusha
sti
inc
es
bnd
fisubs
notb
movsb
aas
inc
add
and
cmpsl
es
adc
mov
enter
outsb
push
ret
or
mull
sti
mov
mov
fists
shrl
cltd
add
ljmp
pop
mov
fdivr
jmp
xchg
mov
repnz
clc
hlt
jl
xchg
mov
es
loop
xchg
data16
incb
test
inc
ret
sub
mov
xor
cmp
fbld
fs
mov
cltd
das
mov
mov
fisttps
icebp
jne
cmp
lcall
jne
jbe
and
dec
cmp
inc
mov
adc
mov
pop
push
pop
in
and
inc
cmpsl
adc
dec
pop
adc
xlat
or
xchg
lahf
pop
jmp
pusha
fs
stos
jge
or
push
push
lock
ds
mov
nop
mov
cmpsb
xchg
or
xchg
pop
pusha
pop
cld
mov
push
dec
and
pushf
mov
mov
sub
and
push
cwtl
push
xchg
push
andb
pop
sbb
pop
idiv
adcl
sub
or
sbb
shrb
jb
repz
outsl
pop
add
cmp
jmp
les
arpl
bound
pop
adc
andl
fidivrl
mov
lahf
add
stos
push
xchg
nop
test
and
cmp
jle
push
sbb
sahf
fs
fnsave
insl
xor
cli
mov
cwtl
outsb
mov
out
jmp
mov
fisubrs
ss
je
stos
out
fstpt
cld
mov
and
shrb
insl
out
addl
inc
xor
jno
mov
out
cmp
lock
fnsave
sbb
pop
aad
sahf
sub
out
inc
xchg
sub
jle
add
cmp
add
xlat
mov
jmp
adc
iretw
pop
pop
imul
loopne
sub
cld
subl
daa
fst
aad
mov
pop
out
clc
mov
mov
popa
xor
jns
loope
stos
nop
push
or
xor
sbb
jno
lahf
ret
cmp
or
mov
dec
outsb
pop
ret
cwtl
test
loopne
inc
loope
fsubrs
push
mov
out
sbb
adc
push
and
mov
xchg
arpl
outsl
negb
mov
sub
dec
adc
in
add
jo
or
bound
sarb
pop
aas
fldcw
inc
push
inc
mov
mov
or
in
addr16
push
enter
addl
imul
mov
inc
and
dec
test
loope
or
aas
cmp
mov
xchg
ss
aam
call
int3
inc
pop
jne
mov
xchg
adc
shlb
cld
std
lods
shr
call
in
dec
sub
faddl
fstp
lret
mov
test
xor
dec
dec
sahf
imul
cmp
lret
lcall
sti
cmc
inc
into
lods
outsb
in
xor
in
cmp
scas
mov
inc
fcoms
sbb
push
std
movsl
adc
xor
xchg
pop
xchg
dec
push
xchg
mov
lcall
fistpl
xor
mov
push
xor
fwait
insb
adc
add
add
aam
add
add
add
add
add
xor
add
add
add
add
add
push
add
hlt
add
add
enter
add
cwtl
push
add
add
test
add
add
add
add
add
call
add
add
add
add
sbb
add
add
sub
add
jo
jo
adc
jo
int3
int3
int3
int3
jge
add
add
fldl
mov
add
add
add
add
sub
add
add
add
adc
add
add
add
add
popa
add
add
add
or
add
and
add
add
add
pop
sub
add
push
test
outsl
add
fs
in
mov
and
jbe
xor
sbbl
push
and
xchg
fcoms
xchg
or
lea
add
add
mov
mov
pusha
pop
add
cmp
decl
test
popa
insb
test
pop
call
sbb
rolb
into
add
and
xor
insl
mov
mov
dec
mov
pop
loopne
popf
cld
sahf
adc
sahf
add
add
hlt
jne
push
cld
pop
mov
enter
sar
push
clc
test
mov
pop
call
adc
xchg
lea
je
cmp
add
add
add
add
add
add
add
add
sub
add
shll
outsl
fsubs
inc
gs
fnsave
out
je
dec
jns
push
je
pop
inc
mov
push
enter
add
inc
push
inc
insl
insb
xor
outsl
dec
mov
pop
outsb
fwait
popa
je,pn
je
jne
insb
add
lea
add
add
add
add
sub
add
add
adc
add
add
add
add
add
pop
addl
roll
add
add
xor
repnz
rcr
mov
lret
in
jb
mov
inc
sbb
repz
add
jae
repnz
xchg
sub
les
fisubrl
push
and
iret
scas
and
push
int
addr16
sbb
sbb
sub
jmp
cmpsl
push
add
pushf
add
neg
int
jge
add
icebp
inc
and
gs
int
sub
add
adc
xlat
sti
pushf
lods
sub
jbe
scas
js
push
add
pop
xor
sbb
jo
bound
pcmpeqd
pop
xchg
xor
test
jg
iret
mov
movsb
es
push
mov
xchg
fstp
cmpsb
mov
call
aad
repz
pop
das
add
js
push
ret
dec
fisubs
cmp
loope
aaa
add
push
addb
sub
pop
dec
outsb
sub
mov
orb
lods
into
sub
mov
and
mov
insl
sbb
pop
sbb
in
mov
mov
adc
and
mov
fcomi
subl
xchg
inc
pop
lods
out
daa
or
xchg
pop
xor
shlb
cmpsb
push
js
push
outsb
lcall
jmp
loope
std
sbb
xchg
pop
insb
add
sbb
fstpt
and
dec
or
sarl
repz
push
jb
xchg
aad
sub
sub
arpl
testl
add
cmpsb
test
xor
divb
push
xor
mov
push
rclb
aas
cmp
adc
popf
testb
push
movsb
ret
pusha
scas
pop
dec
sub
push
insb
inc
imul
into
into
imul
ljmp
jecxz
mov
lcall
push
sub
outsl
in
cld
mov
negl
dec
adc
pop
and
add
inc
dec
xor
repz
sti
lea
out
fdiv
into
cld
pop
or
sbb
sti
imul
or
lret
jle
ret
lods
testb
inc
push
lods
flds
dec
shrl
addr16
cmpsl
int3
addr16
mov
iret
leave
or
lock
cmp
out
cmpsb
lahf
jp
inc
inc
int3
xor
push
ret
dec
fildl
pop
pop
add
mov
dec
out
aaa
jne
or
mov
in
inc
mov
ret
pop
sub
mov
les
mov
or
sub
insb
add
xchg
out
xor
push
movsl
fsubrs
push
mov
leave
add
test
xor
cld
add
leave
push
sbb
je
dec
cmpsb
into
and
scas
out
mov
cmp
mov
dec
rol
jg
pop
das
popf
lea
mov
jno
mov
inc
cmpsl
and
out
aam
addr16
mov
cli
xor
sub
ljmp
jmp
pop
and
icebp
fs
pop
xchg
dec
lcall
pop
sar
in
ds
dec
and
out
cmp
lahf
ror
in
sbb
lret
adc
mov
cli
out
sti
sbb
test
and
sbb
stos
nop
mov
adc
pushf
aaa
dec
pop
repnz
xor
jle
mov
jb
sub
xchg
fbstp
lret
cmpsl
cltd
leave
push
aaa
mov
push
mov
or
inc
sahf
scas
mov
xor
adcl
or
push
arpl
stos
mov
push
dec
divb
push
loopne
xchg
push
cmpsl
sbb
sub
jnp
cmp
fstl
dec
jae
add
cmc
imulb
mov
push
sub
adc
das
and
dec
mov
fnsetpm(287
scas
cmp
popa
out
aam
adc
scas
insb
bound
loope
call
cmp
add
gs
jp
or
outsb
ja
ljmp
xchg
pop
int3
ds
int
sub
push
inc
imul
je
pusha
xchg
add
outsl
pop
sub
add
outsl
or
cmp
jecxz
add
cmp
sub
pop
add
insl
mov
gs
aam
push
add
pushf
adc
xchg
imul
and
lock
popw
inc
ds
cmc
ja,pt
cmp
int
outsl
push
fs
faddp
imul
xchg
jae
mov
mov
jbe
lock
fstpl
clc
jns
pop
jae
cmp
negl
sub
sbb
xchg
jecxz
incl
aam
pop
xchg
movsl
lods
mov
lock
outsb
sbbl
lods
push
into
shll
loope
fsubrs
dec
in
mov
adc
push
scas
xchg
sub
push
test
ret
jns
lahf
xchg
das
cld
in
out
daa
adc
push
lret
insl
sub
mov
mov
cli
xchg
xor
dec
push
lds
andl
ret
popf
xchg
push
jmp
clc
push
aam
cmp
adc
repnz
mov
sbb
fcoms
adc
jecxz
mov
ds
out
xor
mov
cltd
adc
or
icebp
leave
and
std
push
sbb
mov
pop
add
mov
mov
sub
or
out
jle
movsb
sbb
add
xchg
jg
hlt
scas
shlb
sbb
jg
sbb
nop
lret
mov
sub
outsl
stos
movsl
push
add
mov
fmul
jns
in
xchg
mov
push
inc
das
call
xor
test
call
inc
sbb
ficoms
rol
pop
sub
ss
mov
xor
nop
subb
out
add
dec
ja
dec
leave
pop
mov
dec
ror
mov
xchg
dec
push
pop
sarl
adc
outsb
andl
sub
cmpsb
shl
test
ds
mov
push
mov
jnp
enter
scas
shrb
or
cmp
pop
addr16
xchg
loope
push
imull
fsubrl
pop
into
push
sub
add
pop
xchg
mov
dec
push
jge
sbbb
push
mov
repz
push
daa
cmp
aas
pushf
rcr
cmpsl
js
repz
and
push
dec
cli
xor
add
dec
lret
push
push
fwait
in
popa
adc
shll
xor
cmp
push
in
push
lods
mov
inc
repz
inc
sbb
mov
mov
pop
loopne
loope
xlat
mov
sbb
jb
cmpl
add
ss
and
dec
bnd
sub
fstpt
mov
xor
sti
gs
enter
movsb
cmpb
setp
inc
mov
out
fldcw
repz
ljmp
or
adc
push
orl
mov
add
enter
sbb
fdivr
push
add
cltd
dec
sti
ret
sub
cld
adcl
incl
rorl
or
sbb
into
push
mov
push
xchg
mov
loopne
daa
inc
jns
lods
je
subl
xor
into
fists
fld
aad
mov
stos
push
or
hlt
adc
push
js
les
xchg
loop
scas
aam
mov
adc
pop
jge
rclb
cmp
jp
jae
es
sahf
and
jge
outsb
in
adc
adc
and
push
mov
mov
or
jnp
add
or
xor
cltd
rorl
and
cli
mov
data16
mov
and
push
and
es
and
mov
inc
jmp
sbbb
test
call
dec
push
jnp
xchg
popa
inc
in
insb
sbbl
aam
and
and
mov
aad
rcrl
jns
sar
mov
mov
mov
aas
mov
scas
scas
sub
sub
mov
sub
movsl
dec
shlb
out
xchg
jnp
aaa
clc
push
xor
loop
lds
jmp
ljmp
mov
test
push
rcrl
and
mov
sahf
lcall
daa
jecxz
in
cmpsb
push
cmp
lcall
call
xor
inc
inc
mov
fldcw
and
subl
dec
pop
sub
add
hlt
test
xrelease
sub
cmp
mov
out
popa
mov
sbb
ficompl
mov
ficomps
fiaddl
lds
jns
hlt
pop
and
adc
jg
into
push
cmpsl
inc
ss
sub
xor
xchg
xlat
adc
sub
mov
mov
fldenv
dec
jp
insl
addr16
out
cmp
std
push
jmp
mov
mov
pop
push
or
pop
jns
in
iret
int
mov
and
or
int
lock
ret
cmpl
jp
mov
push
outsb
adc
fstps
lods
inc
xchg
es
aas
loop
cs
repnz
sbb
ror
test
xor
adc
sbb
adc
adc
fwait
jne
lahf
or
mov
mov
int3
dec
dec
xchg
cwtl
into
dec
daa
mov
adc
sub
icebp
jnp
mov
lock
cmp
and
orb
cli
bound
into
sbb
fidivrs
push
mov
inc
sbb
add
out
les
inc
mov
lock
add
cmp
mov
cs
or
pop
add
push
jbe
jne
test
test
mov
mov
std
xor
fdiv
test
pop
inc
and
pushf
or
push
es
sarl
cmc
xchg
or
xchg
jge
sub
das
xor
and
and
sub
or
add
mov
imul
scas
insl
adc
fdivrp
jb
inc
jecxz
xchg
mov
out
add
xlat
sti
lret
jle
in
sub
push
out
add
jle
adc
add
fisttpl
jae
adc
lcall
mov
push
and
rcll
dec
test
insb
les
ja
dec
je
roll
adc
jle
mov
out
or
xor
pop
lret
mov
mov
jp
adc
pop
mov
fldcw
inc
insl
sbb
test
notb
xor
jle
inc
pop
cs
aaa
cwtl
sub
xor
lds
add
out
sbbb
rorb
pop
sti
out
push
lock
sub
sti
mov
shrb
movsl
or
inc
stos
xor
fidivl
push
sub
or
inc
add
xor
mov
xor
jp
std
mov
sub
push
dec
mov
sahf
mov
push
mov
paddusw
lds
pushf
lods
stos
ret
and
mov
insb
push
xchg
push
inc
jno
leave
sbb
lock
cmpb
mov
mov
loop
dec
xchg
mov
xor
test
cmp
les
sub
dec
push
mov
imul
cwtl
and
cmp
mov
lds
xchg
sbb
sbb
aas
xchg
int3
and
sub
sub
pop
ljmp
mov
sub
int3
rcl
in
push
jle
jmp
insb
pop
push
mov
gs
pop
and
xchg
and
mov
dec
inc
lcall
jns
mov
movsb
aad
inc
lea
or
in
xchg
lret
mov
mov
lret
dec
mov
insb
cmp
lahf
les
xor
mov
add
mov
xor
aam
inc
mov
jb
xchg
mov
xor
ret
ftst
lret
or
out
sub
sti
mov
dec
jg
and
push
aas
sahf
in
sbb
mov
mov
jp
rcl
mov
movsl
nop
or
sub
clc
mov
sarb
push
inc
test
dec
popf
test
ret
leave
cmp
pop
daa
subb
pop
jp
sub
mov
adc
lret
ret
frstor
or
dec
push
lock
dec
push
sub
cwtl
mov
jb
lds
push
xchg
jno
cmpsl
in
sbb
cmp
push
fstpl
lahf
ds
mov
jle
jns
loop
add
insl
jnp
sbb
jns
repz
and
jmp
loopne
xor
es
cltd
mov
xor
and
push
popa
repnz
in
cmpsl
les
shrb
leave
and
lahf
add
cmp
cmp
ret
jo
mov
repnz
dec
scas
cli
lds
xchg
mov
lods
cmpsb
or
sti
pop
cmc
xor
aam
mov
mov
mov
push
dec
fisubl
lret
add
cmc
ret
cmp
int
inc
addr16
jno
pop
outsl
sbb
fwait
push
dec
and
lods
xchg
pop
xlat
adc
mov
insl
stos
jle
sbb
dec
imul
xor
inc
sub
sub
add
js
mov
cmc
cmp
mov
fadd
push
mov
push
sbb
shll
leave
aas
push
in
add
xchg
sbb
adc
mul
les
out
aam
lea
mov
dec
lock
push
out
leave
mov
aam
mov
cmp
adc
cmc
add
test
adc
dec
adc
lds
and
push
inc
dec
mov
mov
xor
movsl
and
ds
sbbb
mov
fwait
push
lea
adcb
fcompl
nop
sub
or
pushf
js
jae
test
xor
add
add
ds
dec
xchg
into
push
popf
xchg
fucomi
dec
fsubrs
add
jg
jne
roll
mov
and
sub
xor
add
mov
mov
hlt
push
cmova
cltd
mov
pop
fimuls
icebp
scas
repnz
or
insl
rcl
sti
or
in
addl
mov
loopne
jo
std
dec
sbb
sbb
iret
mov
mov
pop
jg
sarb
sbb
fnsave
jno
dec
jmp
pop
insb
mov
stos
outsl
mov
gs
dec
xchg
xchg
scas
ljmp
cmp
js
sbb
fdivrl
movl
sbb
mov
dec
in
std
sbb
mov
enter
cmp
pop
sub
ret
mov
xchg
cmp
dec
dec
cmp
mov
neg
jnp
mov
inc
movsb
xor
fisttpl
cmp
xchg
fwait
aaa
lea
and
cmp
jns
fsub
xor
jmp
in
mov
mov
jne
adc
mov
lret
add
push
push
rolb
push
sub
add
jg
lods
cli
mov
pushf
sbb
ja
in
adc
inc
xchg
jbe
test
adc
jp
push
xchg
pop
insb
add
sub
cs
inc
jnp
lret
jnp
mov
xchg
cmc
sahf
icebp
test
xor
rolb
incb
ret
fcmovu
lahf
out
mov
int3
stc
loopne
daa
lods
inc
sbb
mov
out
add
cmp
mov
mov
xor
and
sahf
sahf
and
xchg
mov
xchg
addr16
out
aam
jo
or
dec
dec
mov
xchg
adc
pop
adc
xchg
lahf
push
jae
pusha
mov
aad
scas
das
fs
dec
sub
dec
mov
int
leave
pop
or
cmpsl
cmp
je,pt
jo
push
xchg
loope
xchg
arpl
in
or
fstps
movsb
and
ljmp
sti
add
mov
out
xchg
xchg
xchg
ds
fwait
adc
ljmp
pop
int
mov
jae
push
in
mov
repz
dec
or
mov
fimuls
sbb
aam
stc
das
sub
mov
xor
adc
clc
mov
jp
xchg
push
repz
sbb
pslld
and
inc
xchg
bound
cmp
sbb
stc
or
je
inc
loop
jmp
loope
inc
out
les
dec
dec
andb
pop
sbb
mov
pop
imul
in
jo
xchg
into
pop
add
scas
pop
rclb
clc
andb
movb
sbb
and
insb
fnsave
aas
or
pop
sti
rcrl
mov
or
xor
test
out
xchg
shll
push
xchg
push
cli
movsl
jp,pt
xlat
sub
sub
out
mov
mov
mov
sbb
cltd
xchg
sahf
sub
xlat
cld
scas
xor
mov
xchg
cmc
sti
jb
das
imul
pop
lds
pop
mov
push
xchg
mov
push
push
pop
xor
loopne
lods
mov
mov
mov
movsb
imull
in
jg
sub
test
pop
mov
aas
mov
andl
lret
lahf
cltd
mov
xor
jnp
inc
mov
ficompl
mov
dec
sub
pusha
lahf
cltd
mov
mov
inc
les
in
scas
or
cmpsb
xchg
cli
jae
out
mov
orb
inc
jle
fldt
adc
mov
sbb
sub
pop
loope
cmpsl
jle
inc
cmpsb
sub
in
push
sub
and
and
fsubp
add
in
jp
mov
outsb
inc
cmp
shll
cmp
dec
mov
repnz
push
es
ret
adc
add
faddp
mov
push
xor
test
loopne
adc
jmp
lret
mov
loope
pushf
mov
jns
cwtl
mov
ja
pusha
and
mov
pop
pop
incb
das
pusha
cmpsl
rol
xor
insl
pop
movsl
insb
icebp
and
mov
jbe
jl
or
sbbb
call
mov
dec
je
xchg
lds
mov
mov
sbb
mov
and
pop
je
cld
or
adc
popf
xorb
mov
ret
shll
shrd
pop
popa
dec
loop
mov
mov
loop
add
and
xchg
xchg
imul
xlat
adc
movsl
inc
sarl
xor
arpl
bound
mov
cmp
pop
push
pop
push
xor
iret
je
sbb
jo
push
pop
ds
jp
and
jnp
xchg
or
ja
xchg
mov
push
mov
nop
xor
sub
pop
xchg
fdiv
ret
jmp
loop
dec
outsb
or
xor
rolb
adc
lcall
outsb
push
inc
mov
inc
jecxz
rep
pop
addr16
daa
popf
push
adcb
sti
test
mov
enter
mov
mov
fdivrs
cs
push
push
dec
mov
outsb
push
ficoms
cmp
sarl
mov
inc
add
popa
xchg
pop
in
push
push
push
call
jbe
mov
sbb
mov
leave
mov
loopne
cmp
cmp
xchg
inc
and
push
fnsave
mov
std
sahf
sbbb
std
sub
pop
cwtl
bnd
adc
out
addr16
movsb
hlt
jno
nop
mov
push
out
out
clc
push
movsl
stos
mov
aam
ret
inc
pop
gs
cmp
pop
xor
pusha
or
push
inc
and
jno
add
add
add
add
add
cmp
add
xor
add
add
add
add
add
add
add
add
sub
add
add
adc
add
add
add
add
add
pop
addl
roll
add
add
and
add
add
jno
addb
popf
mov
out
add
mov
dec
int3
int3
int3
pop
incl
add
orb
and
inc
aad
add
add
add
add
add
add
add
add
aam
add
sbb
sbb
sub
sbb
cmp
cmp
fistl
sbb
shlb
ret
xchg
jo
add
dec
add
pop
aaa
cld
mov
sbb
fdivr
clc
mov
je
cmp
adc
lea
xor
adc
cld
test
addr16
and
or
inc
in
add
lea
jge
ret
push
inc
cmp
xchg
sbb
push
lea
pushl
mov
rclb
mov
call
sub
mov
pop
sbb
pop
jmp
lods
pop
push
push
test
rolb
adc
adc
push
add
xchg
add
mov
jne
cld
imul
lods
jmp
call
add
rolb
lock
pop
or
add
sbb
lods
adc
lods
sbb
clc
add
gs
gs
inc
cs
insl
outsl
jbe
insl
inc
je
test
subl
gs
andl
popa
add
outsl
sub
insb
pop
inc
insb
xchg
add
lds
test
into
imul
arpl
add
add
add
mov
add
add
les
add
add
add
add
add
add
add
aam
add
add
xlat
insl
mov
rcll
mov
xlat
mul
jge
icebp
sbb
xchg
idivl
mov
xor
incb
inc
and
in
lea
gs
mov
aad
cs
test
bnd
sub
xor
pop
mov
dec
hlt
mov
leave
rcrb
inc
fisubs
test
xlat
cmp
xor
mov
loop
xorl
add
adc
and
inc
pop
pop
sbb
sbb
xchg
or
sub
je
inc
sub
stos
les
pop
scas
dec
sbb
int
paddsw
fcompl
das
lret
imul
xchg
add
inc
jl
push
cmp
push
push
out
push
jno
fnstcw
pop
pop
push
enter
cmc
jp
popf
stos
jp
enter
xchg
pop
hlt
das
das
xor
push
aad
pop
xor
mov
mov
lods
pushf
faddl
sbb
fyl2x
divl
and
xor
dec
aas
popf
sbb
push
stos
popa
mov
stc
popf
mov
out
fildll
pop
jmp
rorb
aam
lods
xchg
pushf
cmpl
std
call
gs
test
test
test
popf
cltd
and
enter
add
xor
mov
mov
rol
push
sbb
sbb
pop
arpl
shrb
push
xlat
mov
insb
or
add
pop
xchg
testl
mov
cwtl
and
jmp
cld
scas
push
and
imul
and
push
xlat
nop
test
xchg
pop
insb
in
pop
sub
aaa
fidivl
out
pop
or
fwait
xchg
aas
cmp
push
ja
xlat
inc
roll
fildll
cld
dec
sbb
pop
xor
jmp
pop
les
lahf
sbb
and
push
loopne
dec
pop
fs
leave
jg
push
faddp
add
mov
inc
adc
pop
adc
out
jbe
xchg
push
mov
repnz
and
addl
cmpsb
add
pop
pop
and
inc
jb
fsub
movsl
mov
cmp
fcmove
adc
jl
cld
insl
pop
xor
xorl
mov
rorw
pop
or
gs
movsb
ss
cmpsb
dec
shll
cmp
sbb
imul
or
dec
imulb
jmp
addb
push
push
xchg
and
not
jmp
mov
int3
fisttpl
xchg
lret
out
out
mov
test
mov
jecxz
mov
sub
pop
pop
test
adc
inc
movsl
mov
adc
incl
ficomps
and
lcall
dec
pop
jno
push
mov
and
adc
xor
in
pop
push
cwtl
inc
xchg
loop
and
orb
pop
dec
push
sarl
rolb
adc
jg
cmpsl
mov
push
jmp
mov
std
jle
xchg
nop
aas
adc
fwait
mov
shrb
arpl
cmp
add
or
pushf
add
std
insb
and
mov
cld
stc
fnsave
xchg
andb
mov
xchg
and
cmp
cltd
and
ljmp
push
cmpsl
scas
xchg
rcrl
add
xor
fs
or
icebp
mov
into
jecxz
jecxz
or
inc
fdivrl
mov
jge
dec
and
inc
xchg
mov
xchg
rol
xchg
lret
ljmp
inc
pop
int3
pop
lods
jecxz
movsl
mov
imul
sar
fstl
aas
js
adc
xchg
movsl
js
push
dec
jbe
xlat
inc
out
xchg
cmpl
loop
push
push
inc
push
scas
push
push
sub
loopne
xor
ljmp
xor
out
sbb
xor
fwait
lock
adc
adc
or
sti
loop
dec
fmull
mov
enter
out
enter
and
aad
stos
addr16
adc
test
lea
imul
lock
icebp
sbb
cwtl
jno
mov
stos
das
roll
jp
mov
or
mov
inc
inc
jl
or
hlt
mov
stc
jo
push
iret
js
inc
inc
insb
inc
out
fstpl
and
pop
pop
call
lea
fldcw
and
inc
int
adcl
inc
lods
cmp
out
sub
lret
sbb
cld
filds
jmp
ds
aam
stc
lods
sbb
aad
rolb
or
aam
fwait
xlat
dec
addr16
mov
jnp
add
jl
or
push
jns
insb
scas
fbstp
fildl
ja
into
sahf
mov
jne
or
inc
cmpb
xchg
jnp
popa
jl
dec
insl
mov
hlt
lea
mov
xlat
and
sbb
or
add
mov
xchg
sub
jecxz
cmpsl
jb
scas
ret
sub
mov
inc
push
mov
cmp
and
mov
or
stos
adc
fstpl
xor
icebp
push
testb
pop
loopne
cmp
fdivl
je
mov
dec
pop
cmpl
adc
ja
ss
rcll
rol
daa
lods
dec
xor
adc
les
addb
jb
jle
shrl
out
fucom
movsl
cmp
iret
into
mov
push
pop
cltd
lock
mov
mov
ret
pop
aas
out
js
xchg
pop
push
loop
inc
cmpsb
fs
scas
sbb
daa
mul
mov
cmp
insl
adc
testl
ret
push
aam
push
mov
dec
es
ljmp
ds
cmc
daa
inc
imulb
push
jne
je
loopne
std
jns
addl
pop
add
pop
clc
stos
and
pushf
cmp
popa
ffree
inc
jne
sbb
dec
std
xor
shl
aam
sub
dec
rorb
popf
stos
xchg
insl
ficomps
jmp
insl
repz
xchg
into
jo
mov
or
mov
jmp
xchg
xor
jno
lds
mov
scas
dec
cmpb
fistpll
std
stos
std
mov
test
iret
sbb
inc
add
push
xchg
fs
adc
loope
mov
xchg
jmp
sbb
cmpsl
push
jle
in
pop
movsl
cltd
or
rcll
fnstcw
maxps
sbb
iret
or
sbb
mov
add
dec
pop
mov
xchg
push
cmp
test
mov
fwait
xor
inc
ss
xchg
push
jp
scas
fwait
sub
push
cmp
outsb
or
inc
inc
rorb
sahf
mov
lret
mov
cltd
cmpsl
xor
stos
or
ret
movsb
sbb
cmp
push
lret
adc
push
push
xor
mov
push
mov
fstpt
fisubrl
inc
and
dec
jne
mov
dec
and
mov
inc
daa
inc
mov
xor
sub
sbb
jle
mov
les
addb
shrl
rcll
cli
mov
push
sbb
or
test
sarl
nop
mov
scas
pop
fdivrl
rcrb
cmp
jge
les
fildll
pop
stos
push
push
repnz
cmp
xor
lcall
pop
jl
or
insb
and
out
and
pop
add
mov
ret
mov
scas
sbb
icebp
and
add
insl
rcrb
pop
mov
mov
inc
cmp
jne
clc
ss
repnz
xchg
or
lock
popa
test
or
popf
mov
aaa
pusha
arpl
jp
xor
lahf
addr16
lcall
mov
enter
sub
cs
and
and
jmp
fwait
xchg
shrb
aas
in
imul
pop
sti
ficoms
pushf
mov
mov
stc
jbe
outsb
adc
in
test
xor
lcall
jae
lods
in
xchg
data16
div
imulb
add
pushf
or
adc
cmp
xchg
pop
mov
cmp
insb
rorb
ja
outsl
in
pop
mov
jno
imul
inc
stc
test
sbb
ds
mov
adc
lret
mov
clc
mov
shrb
dec
dec
test
push
lock
cmc
add
jns
xor
mov
mov
jp
mov
and
push
or
and
nop
ljmp
mov
adc
sub
loope
mov
and
jge
enter
fildl
mov
push
cltd
ror
dec
and
cmpsl
adc
cmp
pop
jbe
mov
cmp
das
xorl
mov
mov
mov
mov
sub
roll
int
lahf
dec
jl
cmp
xor
shrb
push
int3
sub
subl
loop
dec
movsl
push
cs
lods
lret
cmc
testl
mov
pop
es
in
enter
or
out
leave
cmc
stos
in
mov
int
xlat
mov
jg
mov
test
bound
ljmp
inc
in
jge
adc
sbbb
inc
jnp
jnp
mov
fsubs
or
mov
aas
fcom
push
cltd
xchg
in
mov
mov
push
adc
sbb
or
jnp
nop
jae
dec
inc
or
inc
mov
adcb
movb
mov
fsts
add
push
sbb
test
pop
add
pushf
add
jp
mov
mov
imul
push
push
aaa
sbb
out
mov
mov
jbe
cmc
add
lret
loop
test
outsb
push
andb
jo
and
adc
gs
mov
popa
pop
jmp
inc
add
jecxz
sub
in
sbb
adc
cwtl
iret
scas
inc
or
clc
push
mov
mov
adc
outsl
add
cmp
push
or
cmp
sbb
stos
int3
lahf
enter
ror
jns
pop
stc
cmp
cwtl
popa
cmp
mov
cmpsl
and
adc
fs
imul
pushf
arpl
and
aad
call
lea
nop
add
mov
xor
lret
mov
jnp
xor
pop
adc
mov
outsb
xor
int
repz
dec
in
add
xchg
gs
rorl
xor
jno
sub
pusha
fmull
sbb
sub
pop
pop
mov
adc
test
adc
and
leave
cmp
aam
or
lret
sbb
clc
sbb
sub
fs
and
data16
inc
je
mov
je
das
cli
psubusb
jmp
cld
xchg
pop
iret
pop
int3
cmpsb
mov
fldt
aaa
js
andb
leave
jb
xchg
fimuls
sub
dec
jecxz
jns
gs
inc
mov
inc
movsb
shll
mov
mov
or
out
or
jmp
pop
ss
push
cmp
or
es
pop
jg
iret
test
pop
pop
sbb
sub
in
and
push
or
push
jbe
orl
inc
pop
stos
jge
clts
fistpll
mov
ficoml
repnz
fisttps
mov
adc
cmp
pop
in
pop
cmp
jns
mov
or
cmp
sahf
pop
sbb
mov
push
mov
out
lods
hlt
les
xchg
mov
push
or
loop
dec
out
mov
rorb
aad
lods
popa
imul
xor
fstpl
pushf
arpl
mov
lret
mov
sahf
in
lahf
subb
adc
push
dec
xacquire
adc
push
dec
cmc
inc
mov
mov
jbe
xor
test
loope
cmp
mov
out
mov
mov
jp
ljmp
cmpsb
mov
repz
hlt
inc
jecxz
and
xchg
or
and
and
mov
int3
dec
dec
fs
xorb
sahf
jno
fdivrs
test
mov
test
lock
pushf
insl
js
pusha
cmp
rolb
xchg
jae
sub
pop
mov
movsb
push
xor
xchg
out
cli
pop
ss
jecxz
xor
mov
fldenv
mov
sbb
fnstsw
rcll
cmp
insl
cld
loope
cli
shlb
cmp
jge
imulb
adc
add
cmpsb
cmpsb
xchg
test
data16
lds
xor
icebp
cli
les
aad
bt
aam
xor
lods
repnz
mov
movsl
pop
rorl
mov
in
push
mov
stc
ss
into
push
nop
inc
pop
lods
push
das
xor
mull
and
jne
stc
and
insb
mov
inc
test
cmc
ficoms
inc
adc
scas
stos
adc
cmc
sahf
cwtl
shll
inc
int
imul
xchg
jne
out
mov
loopne
cmp
xor
dec
cmp
test
or
push
sti
std
mov
fstpl
mov
loop
jge
cmp
cli
lcall
pop
testl
mov
into
int3
jle
mov
pop
shll
iret
push
repz
fimull
sub
mov
jecxz
mov
push
inc
orb
dec
loopne
mov
xchg
testl
push
int
les
add
test
jae
xchg
test
inc
jle
or
movsb
inc
add
jmp
add
sub
adc
jmp
rorb
mov
dec
pop
das
repnz
or
bound
sbb
pop
imul
mov
pop
push
sahf
insl
int
inc
xor
int3
std
or
hlt
out
push
inc
loopne
xchg
adcl
sbb
xchg
cmp
int
pop
mov
jb
add
pop
add
push
decl
push
in
aaa
insl
mov
sub
fmull
out
hlt
nop
jecxz
in
arpl
into
xor
jg
in
mov
mov
push
stc
data16
cwtl
mov
sub
out
movsl
leave
push
ficoml
mov
in
imul
jg
inc
add
cmpsl
push
js
mov
jne
popa
test
out
inc
sbb
inc
push
lock
mov
adc
popf
sub
jl
mov
sarl
cmpsl
fildl
std
mov
sti
xor
sahf
ljmp
stc
cmpl
xor
addr16
cld
mov
andl
in
ja
xor
lahf
jle
mov
daa
bound
pop
loopne
xor
sahf
popa
inc
xchg
pop
xchg
fidivrl
pop
sarb
and
mov
xlat
lock
in
pop
insl
mov
add
sub
fwait
or
aaa
push
out
lea
mov
sti
jge
popa
test
scas
sbb
call
dec
adc
lret
iret
dec
sub
popf
shll
lret
shlb
test
or
and
mov
aaa
and
lock
dec
insl
out
ljmp
out
push
lret
lret
ret
sbbl
fistpll
ljmp
pop
cmp
ret
or
adc
mov
aad
xlat
aaa
mov
pop
mov
jae
out
mov
pop
iret
ret
aad
jp
pop
push
enter
out
mov
cmc
jle
sbb
xor
arpl
push
dec
gs
dec
into
sub
pop
mov
cmc
ljmp
xor
lahf
in
repnz
or
mov
mov
xor
or
mov
add
shrl
jns
out
sub
adc
dec
xchg
or
pop
dec
bound
cmp
xchg
adc
xor
dec
mov
call
arpl
ds
pop
ret
loope
jle
jg
jmp
xchg
mov
call
fmul
scas
push
mov
jmp
clc
inc
lds
test
push
push
sbb
into
rcrl
mov
cli
aaa
in
mov
movsl
inc
mov
or
dec
inc
xchg
ja
inc
mov
mov
sbb
cmp
ret
adc
adc
add
mov
out
sub
mov
ljmp
inc
shrb
dec
inc
jle
mov
out
imul
ja
lcall
mov
in
shrl
cmp
sub
inc
in
adc
mov
pop
test
call
cmp
out
inc
lcall
dec
xor
push
mov
je
dec
mov
mov
js
inc
push
inc
cli
push
push
stos
pusha
inc
addr16
stc
rorl
xchg
mov
sbb
xor
in
fsubrl
mov
imul
mov
ja
add
loopne
mov
test
push
dec
shll
jns
inc
mov
movsb
and
jge
lret
add
call
jnp
lea
add
ret
cmp
dec
add
xor
sub
aam
in
imul
xchg
loope
fwait
mov
and
outsl
dec
sarb
cmp
movsb
and
scas
dec
inc
mov
inc
jno
outsl
sbb
mov
jge
sbb
mov
xor
push
mov
hlt
and
in
jno
dec
sbb
and
and
imulb
xor
cmp
or
mov
xlat
flds
or
cmp
xchg
mov
sub
hlt
adc
cltd
push
sub
jmp
pop
xchg
mov
out
mov
and
fwait
push
inc
cmp
xor
push
or
mov
sbb
xlat
xor
jg
and
xchg
loope
sbb
insb
cmp
sub
pop
outsl
push
stc
mov
cmp
push
inc
and
hlt
jnp
pop
js
out
rorb
es
dec
adc
iret
out
stos
bound
insl
xor
xchg
mov
pop
negl
dec
mov
pop
mov
mov
cmpsb
sbb
lret
sub
scas
push
sar
jbe
mov
jb
xor
sub
movsb
out
loope
andb
aam
or
pop
cvtpi2ps
icebp
inc
ret
cmp
filds
jp
mov
xor
bnd
and
bound
ja
cmc
out
xchg
in
aad
push
data16
xchg
loope
cwtl
aad
rcll
jg
int3
jae
xchg
stos
loope
sub
mov
fwait
rcrb
cli
mov
cmpsl
push
or
test
pusha
push
sbb
mov
dec
and
orl
stos
aad
ss
arpl
jae
je
faddl
gs
and
mov
dec
dec
js
sti
jge
xchg
in
js
les
push
into
xchg
jecxz
xor
jecxz
daa
in
cmp
mov
sub
push
int3
ljmp
pop
xchg
sub
push
xlat
subb
cmpsb
mov
je
test
lds
inc
cmpsl
daa
xchg
inc
into
cli
lods
mov
pop
jns
mov
dec
or
xchg
lea
jbe
js
and
inc
mov
mov
and
int3
es
imul
les
adc
or
ds
jge
add
ja
adc
dec
sub
divb
pop
js
jle
inc
aam
lahf
adc
jmp
loope
sub
add
add
insb
add
add
xor
add
add
movsb
add
xchg
add
hlt
add
movsl
add
add
add
add
add
add
add
mov
add
add
les
add
add
add
add
add
add
aam
add
add
aad
xor
xor
add
add
inc
add
ljmp
add
or
lcall
int3
int3
int3
add
repz
add
add
mov
outsb
mov
or
add
add
xor
adc
add
add
fldl
add
add
add
popa
add
add
add
add
adc
push
int
add
add
mov
pop
insl
and
push
inc
jb
push
push
mov
cmpsl
pop
add
fiaddl
mov
cld
sbb
lea
mov
dec
add
add
paddsw
adc
adc
mov
adc
addb
pop
pop
add
inc
shlb
bnd
ret
xor
push
push
mov
lret
cmpb
lea
push
pop
lods
add
decl
xchg
jge
cld
add
mov
test
adc
fldl
jne
add
dec
sar
mov
add
push
push
data16
adc
push
popf
push
ret
or
dec
pop
decl
add
mov
mov
add
movsl
std
add
add
inc
lods
js
add
xor
add
add
cmp
mov
jb
je
stos
pushf
outsl
inc
outsb
je
call
and
gs
pop
outsb
inc
imul
insb
mov
popa
arpl
clc
cmc
push
push
cs
push
jb
sub
jns
outsl
xchg
push
inc
push
insb
inc
lahf
scas
popa
gs
js
lahf
add
add
xchg
popf
add
add
inc
dec
add
add
xor
jecxz
add
add
rcr
add
add
orl
jge
add
add
sub
adc
add
fists
mov
hlt
std
in
int
mov
scas
push
add
add
xchg
into
insl
adc
or
in
ljmp
and
mov
cltd
add
test
mov
daa
jle
inc
xlat
and
lea
sti
repz
xor
inc
jne
repnz
xchg
test
xchg
in
lea
sbbl
lea
and
cld
int
pushf
fstpl
out
mov
mov
adc
xor
xchg
iret
incb
incl
insb
lahf
push
jge
fmul
ss
cmp
pop
xchg
lret
add
dec
pop
jb
jae
ret
xor
sub
sub
add
mov
mov
scas
inc
inc
fdivp
pop
xchg
jecxz
call
jecxz
cmp
jb
lcall
cmp
push
bnd
test
xchg
fmulp
pop
adc
loopne
dec
sbb
movsl
and
hlt
pushf
add
and
fwait
mov
dec
xlat
xchg
dec
insl
jns
xor
xchg
or
jnp
out
or
push
pop
pop
lds
pop
icebp
nop
test
stos
xsha256
cmpsb
xchg
dec
cmpsl
add
jg
clc
adc
push
shl
push
mov
cmpsb
addr16
pop
fwait
inc
std
fwait
lock
add
inc
leave
dec
int
adc
fldenv
icebp
or
sub
lret
fldt
insb
adc
gs
jg
mov
imul
xlat
sar
cmc
adcb
and
jnp
cmp
ljmp
test
lds
dec
out
js
test
mov
mov
insl
shl
mov
push
subl
sbb
ds
testl
into
popf
loop
jecxz
mov
pusha
pop
inc
xchg
rcrl
movsl
or
and
and
dec
cmp
aad
mov
jp
insb
aaa
cmp
aad
xchg
subl
jp
fcoml
mov
ja
mov
adc
mov
rcrb
test
in
adc
dec
ss
xlat
mov
xchg
in
mov
sub
push
add
push
and
pop
mov
outsb
cs
das
popf
push
or
daa
xchg
sub
aad
cld
fidivrl
dec
sbbl
lcall
mov
cmpb
mov
imul
jge
adc
sti
pop
jl
mov
ret
cmp
jo
jno,pt
addr16
push
xor
xor
dec
and
stos
enter
adc
subb
dec
ret
mov
push
lock
cmc
rol
sub
leave
pop
ret
test
cmp
and
inc
jp
mov
movsl
jg,pt
push
imul
stos
mov
test
mov
loope
ret
out
lods
push
mov
pop
add
lea
inc
sbb
sbb
push
icebp
xchg
ss
dec
mov
adc
jp
dec
and
cmp
js
loop
and
test
rorb
cld
jb
push
je
lea
or
in
cwtl
imul
sub
test
cmc
cmpsb
out
xor
in
inc
cmp
repz
out
push
inc
test
mulb
cs
jo
pop
push
pop
xlat
fwait
jo
sbb
je
sbb
lods
inc
add
mov
and
enter
cltd
pop
xchg
shll
pop
or
stos
outsl
mov
cmp
lcall
or
or
dec
dec
ret
xorl
push
xchg
fistpl
stos
cmc
adc
stos
std
add
mov
cmpsb
cmp
add
xchg
test
lock
fcompl
xchg
cmp
push
inc
leave
insl
adc
insl
aad
push
or
xchg
mov
lahf
push
icebp
xchg
mov
jg
xchg
xchg
jecxz
ret
xor
ljmp
jo
mov
fs
mov
call
pushf
lods
jge
jo
push
std
jns
push
jmp
sub
dec
ljmp
scas
xor
and
xchg
fs
sbb
adc
idivb
mov
call
jns
aaa
push
pop
mov
pop
imul
lods
dec
lock
int
xchg
xorl
mov
ret
lods
mov
mov
aad
xchg
push
clc
jns
repz
xlat
adc
xor
mov
pop
out
xor
jle
stos
loop
xlat
pop
mov
sbb
loopne
mov
daa
mov
mov
test
adc
push
in
ds
add
enter
pop
jl
adc
fisubrl
sbb
negl
sbb
mov
add
add
and
lds
sub
xor
cmpsb
in
jle
out
insb
mov
xor
xchg
and
push
xchg
pop
loop
mov
or
insb
pop
adc
jecxz
lock
outsb
jbe
adcb
loope
cmpsl
xchg
pop
lock
loope
pop
mov
mov
sbb
jnp
jns
jne
out
and
xchg
mov
inc
bound
lahf
sbb
xchg
fucom
push
mov
outsb
mov
push
movl
daa
pop
add
inc
mov
push
mov
xchg
mov
les
cmpsb
dec
push
clc
sbb
jg
les
xchg
mov
sarb
push
in
ds
dec
daa
shr
mov
inc
int
mov
int
add
or
mov
and
mov
insb
fisubrs
cmp
mov
push
pop
jle
xchg
mov
xchg
ds
xchg
ss
adc
mov
pop
jb
pop
ret
cmpsb
mov
hlt
in
jmp
sbbb
sub
loope
popa
pop
pusha
aaa
mov
ret
add
enter
aad
outsl
std
push
out
jae
das
iret
dec
iret
cwtl
lret
add
clc
sbb
fdivs
leave
xchg
sti
dec
push
pop
das
lcall
xchg
je
cmp
test
sbb
addr16
and
cmpsl
mov
cmpsl
flds
addl
mov
divl
ficompl
sub
data16
push
mov
movsl
mov
pinsrw
jp
xor
pop
or
sti
xchg
xor
pop
in
xchg
add
fld
xor
pop
ss
call
pop
pop
add
les
sub
lea
jo
lret
and
xchg
fld
xlat
jnp
cmp
enter
mov
data16
fwait
push
xchg
jge
subl
mov
push
mov
mov
add
or
xlat
or
push
repz
leave
mov
add
aam
in
pop
xchg
sub
mov
inc
push
and
inc
daa
xchg
pop
lret
mov
stos
aas
and
jne
add
fsts
mov
pop
icebp
fistps
dec
or
jl
xchg
rorb
adc
mov
jmp
mov
xchg
out
jge
push
cmp
inc
insb
pop
pusha
adc
mov
stc
inc
lock
push
cmp
or
push
mov
clc
out
lods
repnz
jo
mov
jecxz
jle
xchg
or
inc
lods
xchg
not
mov
add
mov
sbb
decb
add
cmpb
xchg
leave
jno
and
dec
out
jge
nop
test
xchg
xor
or
ret
enter
mov
stc
popf
push
mov
in
push
xchg
cmp
incl
in
jmp
xchg
scas
xor
mov
pop
outsl
inc
daa
and
ljmp
pop
sub
push
shl
cmpb
xchg
xchg
cmp
jge
xor
rcr
pop
sub
mov
lods
adc
in
xor
stc
andl
mov
in
dec
in
sbb
and
ljmp
dec
fidivrs
adc
cli
out
mov
xchg
pop
nop
in
jo
sub
add
call
or
in
jle
inc
adc
inc
cmp
add
or
xchg
sbb
cmpsb
mov
ja
xchg
xchg
push
fsubl
cs
xor
sbb
dec
push
sbb
mov
mov
jle
icebp
sub
fs
xchg
fisubrl
sub
or
or
aaa
push
clc
mov
push
mov
call
pop
or
sub
hlt
adc
pop
loope
and
gs
jl
or
add
cltd
scas
or
sti
stc
int
mov
mov
dec
lret
aam
push
sbb
out
movsb
insb
push
addr16
dec
mov
arpl
push
imul
mov
xchg
subl
xorb
loop
ljmp
scas
pop
sub
or
js
add
pop
jb
fbld
icebp
popa
and
sub
into
scas
repz
das
pop
pop
lret
out
pop
xchg
mov
pop
stc
xchg
sub
jne
repnz
push
cwtl
pop
rorb
mov
sub
sub
xchg
mov
aaa
adc
mov
push
int
mov
mov
add
sub
js
ja
ret
lods
cld
adc
adc
add
inc
or
mov
mov
repz
pushl
inc
insl
xchg
out
cmc
jae
adc
or
inc
cld
sub
sbb
mov
aaa
loop
idivl
aaa
pop
fwait
test
sbb
repz
cmp
mov
jle
insb
outsb
sbb
pop
mov
fcmovne
and
adc
jno
out
push
notb
rorl
je
pop
inc
push
cwtl
stos
push
lds
add
mov
das
popa
outsl
adc
sub
inc
xor
out
dec
shlb
push
pop
push
or
cmpsb
or
mov
mov
push
daa
test
jp
adcb
into
inc
fdivl
jg
into
or
imul
cmc
pop
pop
mov
fcoml
mov
mov
pop
cs
dec
jmp
sbb
hlt
xchg
mov
push
cmp
push
les
xor
pop
xor
popa
jmp
icebp
xchg
test
xchg
add
test
dec
aas
sub
pusha
cmp
or
xchg
and
pop
fs
lret
js
jbe
or
das
mov
mov
mov
add
cmp
jno
jl
mov
sbb
sbb
in
mov
nop
jmp
nop
adcl
dec
xchg
mov
shl
stc
repnz
mov
pushf
lea
mov
repz
dec
sbbl
and
jae
or
add
sbb
loop
pop
sub
pop
iret
mov
fcoml
rorl
orb
inc
and
jns
sbb
int3
les
lods
in
sub
rcl
ret
lds
jl
push
and
dec
mov
repz
or
leave
test
ret
scas
lods
sub
cmp
fs
es
repnz
imul
loope
mov
nop
adc
sbb
lods
jno
cld
adc
aaa
sub
sub
jp
push
pusha
fnstenv
inc
call
btc
aas
js
inc
ja
push
ja
frstor
scas
cmp
xchg
cmpsl
mov
ret
jo
imul
xor
cltd
out
and
xchg
push
loop
mov
mov
xorl
imul
ret
insl
dec
mov
or
sub
lods
push
xchg
dec
or
mov
dec
cmp
jo
aam
cmp
push
mov
push
mov
cmpsl
jp
sbb
adc
imul
xchg
push
sbb
int3
test
das
sbb
fsubs
test
fdivrs
mov
push
movsl
movsb
dec
lahf
inc
push
sbb
popf
sbb
mov
jge
ljmp
pop
inc
mov
js
test
mov
mov
loop
andl
push
mov
adc
mov
mov
sti
lea
jae
test
shll
and
pop
push
stc
aad
jnp
xchg
shlb
pushl
hlt
mov
xor
push
cli
ds
sub
orl
shrb
jp
jbe
in
repz
je
jo
jge
loope
sub
mov
add
hlt
sahf
les
divl
sub
xchg
jnp
movsb
cmp
decb
sbb
jb
xor
fstl
aam
ds
enter
xchg
js
cmp
adc
in
jne
andl
mov
jb
xor
fs
sbbb
push
pop
repnz
push
cld
fldenv
pop
mov
and
jae
push
std
subb
xchg
bound
adc
push
daa
pop
push
clc
fucompp
leave
stos
insl
pop
jbe
jae
shrb
or
das
jnp,pt
rcr
sbb
fistl
pop
mov
dec
lds
dec
hlt
add
mov
sbb
xchg
enter
in
lea
sub
das
jl
ljmp
repnz
sarb
sti
rolb
out
mov
cmp
cmpsl
insb
pop
mov
movsb
cmc
jae
imul
mov
push
mov
xor
and
or
dec
add
and
data16
hlt
inc
push
dec
mov
jmp
xor
subl
cmpsb
mov
repz
aas
adc
cmpl
jle
test
fsubp
adc
in
sub
ficompl
stos
scas
inc
jmp
xchg
mov
lods
fsubrp
subb
idivl
sub
stos
lahf
pusha
es
mov
mov
inc
push
pop
xchg
sub
xorl
lret
add
popf
stos
sbb
fbstp
dec
inc
not
rclb
pushw
add
cltd
add
pop
mov
lcall
aas
jns
fidivrs
jns
mov
dec
rcrl
es
es
and
push
add
iret
shl
and
jbe
push
push
mov
pop
dec
dec
sbb
xchg
movsb
lret
jnp
jmp
inc
orb
pop
ret
sti
jbe
outsb
add
sbb
xchg
mov
mov
adc
pop
sub
les
jne
insb
in
test
mov
imul
sbb
adc
stos
repnz
sbb
aaa
test
jno
push
add
loopw
mov
incb
cmp
push
movsl
push
lock
outsl
es
push
xor
bound
pop
dec
sbb
xchg
out
aam
arpl
xor
into
int3
dec
xchg
out
push
test
dec
push
push
push
adc
jge
sub
mov
jnp
shrl
xor
orb
loopne
pop
ror
aas
fstpt
mov
leave
mov
jmp
sub
sub
inc
sub
cmpsb
pop
fucomp
dec
add
mov
jecxz
pop
rorb
xor
sub
lds
pop
int
lahf
lahf
xlat
cmpsb
into
jg
jb
pop
clc
mov
push
insb
lods
mov
fmuls
pop
imul
cli
xchg
mov
dec
sbb
and
inc
ret
aad
mov
push
subl
es
mov
je
mov
mov
mov
fimuls
scas
xchg
fildl
sbb
lds
in
fsubrp
sbb
adc
ret
cli
adc
jbe
stos
pop
repnz
setb
mov
push
cmp
filds
inc
jl
dec
cmp
pop
mov
add
inc
sbb
xchg
sub
sub
push
jno
mov
pcmpgtd
jp
decl
mov
mov
dec
fisubrs
add
insl
jns
loope
sub
add
jl
out
add
pop
pop
pusha
mov
cmp
icebp
push
mov
insl
xor
out
lods
and
int
cmpb
bound
jge
pop
push
sub
test
nop
mov
xor
out
in
test
inc
inc
xor
sub
mov
ss
movsb
out
popa
pop
mov
mov
sarb
sbb
out
repz
aas
insb
push
or
dec
int3
or
mov
lret
mov
mov
push
in
jge
loopne
jo
push
jmp
jge
inc
fwait
out
popa
xchg
int
cmpsb
loop
ret
push
lods
add
sub
fcomps
mov
setnp
xor
add
pop
or
sbb
lahf
imul
rorb
sub
movsb
push
dec
lahf
loopne
lret
jp
adc
fildl
rolb
xchg
adc
cld
add
aam
out
lahf
mov
pop
testb
add
nop
xor
jg
loopne
mov
fiadds
loope
shll
fstpl
or
xchg
fbstp
clc
sti
lods
gs
cmp
xchg
fbld
sub
dec
sar
inc
pop
test
repz
xor
fldt
add
mov
lea
inc
cmp
mov
std
es
mov
outsb
dec
mov
xor
mov
mov
test
out
sub
sar
dec
lea
repnz
addl
jmp
mov
add
push
aam
jo
cmp
or
movsb
aaa
or
and
xlat
and
ret
popa
sbb
outsb
xlat
mov
jg
divb
lds
cmp
outsb
in
test
xchg
cmp
adc
push
js
arpl
gs
or
imul
push
mov
lods
xor
loop
outsl
inc
and
mov
stos
addr16
pop
xchg
je
lds
in
mov
scas
add
pop
fisttpl
repz
int
mov
pop
insb
lock
cvtpi2ps
imul
pop
or
xchg
mov
fistpll
push
cmp
pop
xor
lods
mov
add
xor
icebp
sbb
insb
xchg
das
shlb
and
fldenv
jg
fsubrp
mov
pop
adc
cmpsl
out
mov
mov
push
popa
mov
xchg
sub
add
imul
out
addl
jl
std
leave
xchg
cld
mov
and
pusha
test
mov
jb
sub
jg
daa
jle
xchg
movsl
mov
out
scas
lock
cwtl
test
aad
cld
stos
cmpsb
mov
or
inc
in
xor
push
je
scas
imul
push
insl
mov
faddl
sbb
mov
pop
xchg
mov
sbb
test
or
cltd
xchg
mulb
imul
sbb
imul
push
xlat
xchg
addl
cmp
jle
dec
jp
inc
xlat
xchg
push
imul
int3
and
popf
xchg
stos
jnp
lods
ds
test
testl
xor
cmp
loope
push
jo
loope
mov
inc
pop
lret
jp
cmp
pop
add
xchg
pop
lock
pop
mov
and
sub
inc
push
in
pop
movsl
fsubr
add
adc
pop
ret
pop
ret
add
test
movsb
cli
fdivrl
pop
adc
or
outsb
jne
xor
dec
les
dec
test
sar
push
cmc
out
popf
int
push
jmp
dec
jle
pop
push
sbb
test
jg
les
and
into
insl
lods
jg
fbstp
inc
lea
lock
sbb
mov
mov
test
add
add
mov
add
add
arpl
add
add
add
add
add
repz
add
add
mov
add
add
add
add
xor
jecxz
xor
pusha
add
fstl
rolb
add
lock
add
sub
sti
sbb
cltd
int
add
add
shlb
stos
stos
add
ja
mov
cld
repnz
dec
int3
int3
int3
push
mov
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
push
push
movl
movl
mov
movl
call
push
mov
call
pop
ret
push
mov
sub
push
pushl
call
mov
pushl
xor
movl
pushl
mov
mov
mov
movl
movl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
push
call
mov
leave
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
pushl
call
pushl
call
push
push
push
mov
pushl
call
call
push
pop
pop
ret
jae
jb
jo
add
adc
add
xor
call
push
push
push
call
push
imul
jb
je
arpl
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
nop
into
add
mov
into
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
iret
add
dec
iret
add
inc
iret
add
cmp
add
xor
add
sub
add
and
add
sbb
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
add
or
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sbb
add
cmp
add
pusha
rolb
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
mov
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
add
sbb
add
sub
add
cmp
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
add
add
inc
rolb
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
mov
rolb
add
add
xchg
rolb
add
add
jl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fcom
add
loopne
add
in
rolb
add
roll
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
js
add
cwtl
roll
add
roll
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
aam
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
jo
add
js
add
mov
add
pushf
aam
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
