jmp
cltd
dec
mov
repnz
call
adc
inc
dec
sbb
and
pop
add
jmp
mov
jmp
cmpsb
in
mov
pop
mov
dec
sar
shrb
push
xor
clc
pop
push
jmp
push
add
dec
out
cli
mov
aam
cwtl
idiv
mov
movsb
adc
push
int3
sbb
je
cmp
pushf
popa
jmp
cmp
jmp
outsb
adc
fdivs
cmp
inc
jle
push
sub
pop
nop
mov
loopne
test
data16
jp
scas
push
add
jbe
or
xchg
into
hlt
and
sub
jmp
faddp
mov
cmpsb
in
mov
repnz
pop
mov
dec
shr
shrb
push
xor
clc
pop
push
push
add
dec
out
cli
mov
aam
cwtl
idiv
jmp
mov
movsb
adc
push
int3
sbb
je
cmp
pushf
stos
mov
es
cmp
outsb
adc
shr
inc
jle
dec
in
sub
pop
nop
mov
loopne
test
data16
jp
scas
push
add
jbe
or
xchg
into
hlt
and
faddp
mov
cmpsb
in
mov
xchg
inc
jmp
pop
mov
dec
sar
shrb
ficoml
push
xor
clc
pop
push
push
add
dec
out
cli
mov
aam
cwtl
idiv
mov
movsb
adc
push
int3
sbb
je
cmp
pushf
stos
mov
add
add
jmp
ret
cmp
inc
jle
push
sub
pop
nop
mov
loopne
test
jmp
data16
jp
scas
push
add
jbe
or
xchg
into
hlt
and
faddp
mov
cmpsb
in
mov
xchg
inc
pop
jmp
mov
dec
sar
shrb
push
xor
clc
jmp
jmp
pop
push
push
add
dec
out
cli
mov
aam
cwtl
idiv
mov
movsb
adc
push
int3
sbb
je
cmp
pushf
stos
mov
es
cmp
jmp
outsb
adc
fdivs
cmp
inc
jle
push
sub
pop
nop
cmp
je
jmp
loopne
jmp
test
data16
jp
scas
push
add
jbe
or
xchg
into
hlt
and
faddp
mov
cmpsb
in
mov
pop
mov
dec
sar
shrb
push
xor
jmp
clc
pop
push
push
jmp
add
dec
out
cli
mov
aam
cwtl
idiv
mov
out
add
jmp
movsb
adc
push
int3
sbb
je
cmp
pushf
stos
mov
es
cmp
outsb
adc
fdivs
cmp
inc
jle
push
sub
pop
nop
mov
fsubr
loopne
test
data16
jp
scas
mov
jmp
and
push
into
hlt
and
faddp
mov
cmpsb
in
mov
pop
mov
dec
sar
shrb
ficoml
push
xor
clc
pop
push
push
add
dec
out
cli
mov
aam
jmp
cwtl
imul
cmp
mov
movsb
adc
push
int3
sbb
je
cmp
pushf
stos
mov
es
cmp
outsb
adc
fdivs
cmp
jmp
inc
jle
push
sub
jmp
pop
nop
mov
loopne
test
jmp
data16
jp
scas
push
add
jbe
or
xchg
into
hlt
and
faddp
mov
cmpsb
in
mov
pop
mov
dec
sar
push
push
push
jmp
mov
outsl
sbb
fidivrl
push
mov
enter
sbb
or
mov
repnz
push
dec
sub
sub
inc
and
jmp
repnz
out
cli
mov
aam
cwtl
idiv
mov
movsb
adc
push
int3
sbb
je
cmp
pushf
stos
mov
jmp
es
cmp
outsb
adc
fdivs
cmp
inc
jle
push
sub
pop
nop
mov
loopne
loopne
test
data16
jp
scas
push
add
jbe
or
xchg
into
hlt
and
or
jo
xchg
inc
pop
mov
dec
sar
shrb
push
xor
clc
jmp
jmp
pop
push
push
add
dec
out
cli
mov
aam
cwtl
idiv
mov
movsb
adc
push
int3
sbb
je
cmp
pushf
stos
jmp
mov
es
cmp
outsb
adc
fdivs
cmp
inc
jle
push
sub
push
mov
jmp
mov
enter
shl
push
xor
jmp
js
mov
pop
jmp
enter
lods
jp
scas
push
add
jbe
or
xchg
into
hlt
and
faddp
mov
cmpsb
in
mov
pop
mov
dec
sar
shrb
push
xor
clc
pop
push
ret
add
dec
out
ds
mov
aam
cwtl
idiv
mov
movsb
adc
out
call
sbb
je
cmp
pushf
stos
mov
es
cmp
outsb
adc
fdivs
cmp
inc
jle
push
sub
pop
nop
mov
jmp
loopne
test
data16
jp
scas
push
add
jbe
jmp
lcall
sbb
and
les
jo
xchg
inc
pop
mov
dec
sar
shrb
push
xor
clc
pop
push
push
add
dec
out
cli
mov
inc
cs
cwtl
idiv
mov
jmp
jmp
movsb
adc
push
int3
sbb
je
cmp
pushf
stos
mov
es
cmp
outsb
adc
fdivs
cmp
inc
jle
push
sub
pop
nop
mov
loopne
test
jmp
data16
jp
jmp
scas
push
add
jbe
or
jmp
xchg
into
hlt
and
faddp
mov
cmpsb
in
mov
pop
mov
dec
sar
shrb
push
xor
clc
pop
push
push
add
adc
add
jmp
mov
jmp
aam
cwtl
idiv
mov
movsb
adc
push
int3
sbb
je
cmp
pushf
stos
mov
es
cmp
outsb
adc
fdivs
cmp
inc
jle
push
sub
pop
nop
mov
jmp
loopne
jmp
test
data16
jp
scas
push
add
repnz
or
xchg
into
hlt
and
faddp
mov
cmpsb
in
mov
pop
mov
dec
sar
shrb
push
cmp
jne
jmp
push
jmp
push
add
dec
out
cli
mov
aam
cwtl
idiv
mov
movsb
adc
push
int3
sbb
je
cmp
pushf
stos
mov
es
cmp
outsb
adc
fdivs
cmp
inc
jmp
jmp
jle
push
sub
pop
nop
mov
fsubr
loopne
test
data16
jp
scas
push
add
jbe
or
xchg
into
hlt
and
faddp
mov
cmpsb
in
mov
adc
jmp
sar
inc
shrb
push
xor
clc
pop
push
push
add
dec
out
cli
mov
aam
cwtl
idiv
mov
movsb
adc
push
int3
sbb
je
cmp
pushf
stos
mov
es
cmp
lock
jmp
adc
fdivs
cmp
inc
jle
push
jmp
sub
pop
nop
mov
loopne
test
data16
jp
scas
push
add
jbe
or
xchg
into
hlt
and
fisubrs
add
cmp
inc
jmp
pop
mov
dec
sar
shrb
push
xor
clc
pop
push
push
add
dec
out
cli
mov
aam
cwtl
idiv
mov
movsb
adc
push
int3
sbb
je
cmp
pushf
stos
mov
jmp
mov
insb
cmp
outsb
adc
fdivs
cmp
inc
jle
push
sub
ljmp
jmp
js
fsubr
loopne
test
data16
jp
scas
push
add
jbe
or
xchg
into
jmp
hlt
and
faddp
mov
cmpsb
in
mov
pop
mov
dec
sar
shrb
shlb
clc
jmp
pop
push
push
add
dec
out
cli
mov
lock
cwtl
idiv
mov
movsb
adc
push
int3
sbb
je
cmp
pushf
stos
mov
es
cmp
outsb
adc
fdivs
cmp
ret
cmp
jmp
nop
mov
loopne
test
data16
jp
scas
push
add
jbe
or
xchg
into
hlt
and
faddp
mov
cmpsb
in
mov
pop
mov
mov
shrb
push
jmp
xor
clc
pop
push
ds
push
add
dec
out
cli
mov
aam
cwtl
idiv
mov
movsb
adc
push
int3
sbb
je
cmp
pushf
stos
mov
es
insb
cmp
outsb
adc
fdivs
cmp
inc
jle
push
sub
pop
nop
mov
jmp
jb
jmp
data16
jp
scas
push
add
jbe
or
xchg
into
hlt
and
faddp
mov
cmpsb
in
mov
pop
mov
dec
sar
shrb
push
xor
clc
pop
push
jmp
push
add
dec
jmp
out
cli
mov
aam
cwtl
idiv
mov
movsb
adc
jmp
jmp
push
int3
sbb
je
cmp
pushf
stos
mov
es
cmp
outsb
adc
fdivs
cmp
inc
jle
push
sub
pop
nop
mov
loopne
rcrb
lods
jp
scas
push
add
jbe
ret
jmp
push
lcall
sbb
and
les
jo
xchg
inc
pop
mov
dec
sar
shrb
push
xor
clc
pop
push
push
add
dec
out
cli
mov
aam
cwtl
idiv
mov
ds
movsb
adc
push
int3
sbb
je
cmp
pushf
stos
mov
es
jmp
outsb
adc
push
ret
cmp
inc
jle
push
sub
pop
nop
mov
loopne
test
data16
jp
scas
push
add
jbe
or
xchg
into
hlt
and
faddp
jmp
mov
cmpsb
in
mov
pop
mov
dec
sar
shrb
mov
jmp
pusha
push
jmp
add
dec
out
cli
mov
aam
jmp
cwtl
idiv
mov
ds
movsb
adc
push
int3
sbb
je
cmp
pushf
stos
mov
es
cmp
outsb
adc
fdivs
cmp
inc
jle
push
sub
pop
jmp
nop
mov
cmp
loopne
test
data16
jp
scas
push
add
ljmp
and
push
into
hlt
and
faddp
mov
cmpsb
in
mov
pop
mov
dec
sar
jmp
ficoml
jmp
push
xor
clc
pop
push
push
add
dec
out
cli
mov
aam
cwtl
idiv
mov
movsb
adc
push
int3
sbb
je
cmp
pushf
stos
mov
es
cmp
outsb
adc
fdivs
cmp
inc
jmp
jmp
jle
push
sub
pop
nop
mov
loopne
test
jmp
data16
jp
scas
push
add
jbe
or
xchg
into
hlt
and
faddp
mov
cmpsb
in
mov
mov
sub
push
jmp
mov
sti
mov
pop
xchg
and
push
jmp
inc
popf
rcll
pop
push
ss
pop
out
mov
xor
mov
mov
mov
and
xor
or
add
and
add
dec
jne
mov
mov
mov
jmp
out
jae
cs
mov
subb
les
sldt
add
and
call
movsl
adc
ss
jmp
pop
fsubrl
push
cmp
pusha
fisubs
adc
sldt
add
hlt
negb
repnz
scas
push
dec
cmp
adc
jmp
out
dec
stc
sub
test
inc
nop
out
dec
loop
les
add
add
leave
ret
push
mov
sub
sub
jmp
add
mov
lea
xor
add
add
out
mov
push
xor
mov
mov
mov
add
add
and
xor
push
jmp
neg
ja
cld
push
mov
mov
pop
icebp
add
xor
inc
jmp
ds
imul
jmp
add
jmp
push
daa
es
jbe
ss
and
xor
or
sub
xor
add
or
or
dec
jne
mov
mov
mov
jmp
mov
jmp
pop
push
xor
les
add
xchg
jmp
mov
or
jmp
es
insb
cmp
pop
cmp
xor
add
add
leave
ret
push
mov
sub
sub
jmp
cwtl
xchg
jmp
test
sub
push
xor
mov
mov
mov
or
sub
sub
add
and
xor
or
sub
add
or
or
dec
jne
mov
mov
mov
jmp
sbb
sbb
dec
jbe
sbb
add
add
repz
test
push
push
mov
pop
xor
leave
ret
push
mov
sub
push
push
jmp
adc
or
xor
xor
mov
mov
mov
xor
xor
push
jmp
inc
insl
mul
jle
lret
clc
jmp
in
push
aad
jl
aad
icebp
inc
not
aad
jmp
or
outsl
loopne
lods
das
hlt
nop
shrl
mov
enter
add
mov
pop
add
sub
or
xor
add
shr
or
xor
and
add
xor
add
dec
shl
rol
sub
add
push
jmp
or
ret
and
jne
js
or
or
jmp
xchg
mov
addr16
xchg
ss
add
xor
dec
jne
mov
mov
push
jmp
lcall
add
mov
and
jmp
into
lods
mov
in
pop
add
mov
jmp
mov
nop
lods
cli
sbb
mov
sub
add
and
bound
les
sub
leave
ret
call
adc
gs
mov
mov
cmp
jnp
pop
movsb
push
mov
mov
pop
notb
dec
es
aas
adc
stos
fcmovbe
xor
out
cmc
lods
push
sub
sti
inc
jbe
decb
adc
test
sub
sub
jg
iret
sti
mov
or
push
mov
fwait
xor
pushf
adc
and
mov
sti
pop
pop
js
sti
subl
je
test
data16
daa
dec
xlat
push
lea
movsl
movsl
mov
push
xchg
push
push
push
fildl
hlt
xchg
insb
add
and
or
fdivrs
add
push
mov
enter
ss
push
loopne
inc
test
fisttpll
mov
sub
test
in
shll
mov
ret
pop
jne
xchg
jbe
repnz
and
dec
mov
ja
scas
push
xor
cltd
jbe
xor
sub
lods
lock
jle
mov
push
xor
xor
into
in
mov
test
fs
push
lea
mov
addr16
imulb
cmp
mov
sub
fwait
push
pop
iret
xor
cmpsb
and
fsincos
cmp
and
push
mov
rorl
jecxz
fdivrs
mov
pop
xchg
mov
lods
push
dec
push
or
aas
test
sub
xor
fadds
mov
pusha
cmp
fidivrs
or
cmp
add
pop
mov
les
mov
xchg
stc
in
inc
xlat
push
inc
and
sub
test
mov
mov
mov
out
movsb
push
mov
xchg
hlt
sahf
and
cmp
mov
lods
jno
enter
movsb
mov
inc
sti
mov
dec
mov
data16
std
gs
ja
gs
pop
in
mov
sbb
sti
jns
imul
push
mov
andl
sbb
rcrl
dec
hlt
jnp
cwtd
shl
rorl
push
mov
insb
mov
pmaddwd
outsb
pop
push
les
loope
popf
scas
and
xor
xlat
loop
or
push
or
push
cmpsl
jns
mov
mov
push
hlt
xchg
enter
movsb
addb
scas
adc
outsl
je
pop
xchg
mov
mov
ja
jbe
xlat
rclb
notb
stos
xor
mov
daa
mov
out
out
ficompl
push
movsl
push
xor
jo
sbb
test
in
inc
mov
movsl
stos
fs
mov
add
jb
mov
sahf
xchg
movsb
cmp
sbb
dec
repz
and
pop
mov
push
scas
pop
repz
add
movsb
mov
outsb
shlb
cmpsb
push
lret
mov
inc
mov
lret
movsl
test
aad
scas
xor
cmp
push
pop
mov
imull
mov
cmpsb
push
ficoms
les
pusha
inc
movsb
test
xchg
and
call
enter
enter
cmpsl
or
pop
jnp
push
mov
mov
imul
xchg
mov
or
xlat
pop
nop
inc
xor
pop
sub
mov
inc
add
push
scas
push
imul
add
sarb
das
pop
nop
pusha
push
lcall
ds
and
shl
lods
lock
aad
cld
pop
stos
fimuls
pop
cmpsl
ret
lcall
scas
xchg
cwtl
dec
data16
fisubl
rorb
pop
in
enter
inc
inc
jns
cmp
jo
jp
popf
test
jns
push
sbb
lret
mulb
add
push
and
jae
ss
sti
xlat
jo
pop
mov
xor
jae
xchg
xor
fistps
stos
push
xchg
sar
loope
sar
aas
inc
mov
inc
cmpsb
mov
lahf
add
sbb
fs
mov
test
dec
adc
jo
xor
int3
imul
sub
jae
lcall
jns
loop
sbb
lahf
jecxz
sbb
jo
cmp
xlat
add
mov
scas
dec
push
stos
mov
inc
pop
fimull
pusha
dec
sbbl
lea
lcall
lock
sbb
push
jno
lea
push
imul
sub
lret
rclb
ret
xchg
mov
icebp
xchg
sti
jecxz
cli
inc
and
inc
pop
xchg
movsb
push
das
repnz
lds
mov
xchg
movsb
je
out
pop
dec
or
dec
test
sti
sahf
test
pushf
cld
test
adcl
daa
test
cli
movsb
push
dec
cmp
lcall
xor
imull
cmpl
jo
inc
popa
divl
pop
in
dec
idivl
xchg
mov
sub
xchg
jmp
cmp
scas
mov
gs
stc
das
lods
stc
and
xor
imul
shll
loop
mov
je
push
cmc
xlat
xor
sub
das
xor
jle
cmp
push
stos
push
jmp
loope
sti
out
pop
lods
xchg
enter
imul
aam
test
pop
stos
movsb
push
add
mov
test
gs
pop
pop
inc
dec
xchg
cmp
fidivl
jo
xorb
outsb
push
and
data16
loopne
xchg
sub
popa
fs
push
and
add
add
cmpsb
jb
add
aas
in
jo
lret
xchg
je
fiaddl
movsb
push
push
or
out
adc
cmp
mov
push
xchg
xchg
mov
lods
mov
inc
mov
mov
pcmpeqw
hlt
pop
pop
adc
leave
mov
adc
loopne
mov
dec
jg
fcoms
insl
sub
mov
gs
mov
fdivrs
and
addr16
fidivrl
ret
mov
movsb
push
push
xorb
jmp
push
push
ret
inc
mov
push
or
pop
call
outsl
inc
xor
lret
les
or
jne
mov
cmp
popa
push
in
push
push
inc
mov
into
push
call
insl
inc
pop
mov
sahf
je
xor
mov
mov
iret
xor
pop
sub
adc
inc
nop
mov
repnz
push
jmp
daa
ret
fcmove
movsb
cmpsb
jb
leave
inc
ret
iret
movsb
scas
cmp
data16
adc
push
cwtl
fsincos
test
sarb
ljmp
idiv
xchg
stos
xor
xchg
fwait
scas
nop
fs
mov
inc
stos
or
add
sbb
imulb
or
jnp
fsubs
test
movsb
push
and
fisubl
sub
jnp
fsubl
mov
dec
push
jns
std
mov
cli
enter
pushf
sub
aas
sbb
cmpsl
shl
out
movsb
push
aaa
cmp
enter
and
and
aaa
xor
iret
lds
loop
inc
outsl
jecxz
push
lret
in
fisubrs
nop
pop
shlb
mov
cmp
repz
movsb
push
mov
mov
out
inc
test
pushf
xor
cmp
movsb
push
rcrb
cli
push
dec
addr16
fsubs
in
stc
push
scas
andb
mov
movsb
push
push
cld
sub
js
movsb
loop
ljmp
in
movsb
push
addr16
in
adc
je
test
jo
mov
aas
cs
movsb
push
or
sub
mov
insb
or
mov
inc
mov
stos
fnstsw
sub
ja
pop
daa
add
adc
jmp
mov
aas
mov
movsb
push
loop
xor
adc
dec
fcomps
in
cltd
loop
add
aam
sti
stc
inc
mov
sti
cmp
push
lret
lcall
aas
adc
movsb
push
outsb
fstpl
jmp
cli
les
xchg
icebp
sbb
cwtl
xlat
pop
add
add
adc
addr16
push
lret
lea
add
movsl
push
cli
sub
xor
and
movsl
mov
das
and
dec
mov
and
cmp
push
cltd
cmpsb
xchg
mov
cli
pop
xor
fs
and
or
push
iret
or
inc
inc
leave
inc
ret
push
or
adc
fcoml
movsl
push
lea
sub
aas
testl
jle
test
fcmovnbe
test
dec
jae
lods
push
je
xchg
fadds
arpl
inc
mulb
int3
pusha
imul
push
frstor
loope
and
fwait
xor
repnz
add
stos
push
es
in
xchg
mull
mov
jo
mov
aam
clc
sub
xchg
int
or
in
dec
xor
std
inc
push
xchg
test
mov
movsl
push
pop
shrb
scas
lea
iret
jecxz
sbb
popf
push
pop
push
xlat
mov
and
dec
or
sub
mov
xchg
pop
mov
js
sbb
repnz
cmp
cmpsl
repz
add
fisubs
movsl
push
lds
add
mov
mov
push
ljmp
test
sbb
jp
cmp
push
nop
xchg
add
xchg
out
lods
imul
mov
push
mov
mov
arpl
sub
lock
es
mov
pop
mov
dec
das
jae
jp
cltd
and
adc
mov
adc
sbb
xor
fs
xor
in
sbb
fiadds
push
xor
jbe
xchg
push
xor
inc
jp
sbb
popa
and
stc
lods
push
arpl
xchg
fsubrs
movsl
push
clc
lahf
movsb
push
insb
cmp
adc
pop
mov
outsb
add
xlat
dec
leave
mov
mov
repz
std
insb
shlb
xchg
movsl
jno
mov
xchg
lods
loope
dec
fwait
inc
jno
dec
mov
cmp
sbb
sbb
push
nop
inc
cmpsl
jmp
inc
movsl
push
leave
push
sub
out
inc
movsl
loop
aaa
das
int3
out
cltd
inc
pop
inc
movsl
push
sahf
and
out
mov
dec
mov
inc
movsl
mov
cmc
cli
dec
leave
in
mov
lea
popa
push
dec
movsl
mov
mov
shll
cmp
push
mov
pushaw
and
push
cmpsl
inc
test
bound
dec
movsl
cmp
fwait
sahf
sbbl
mov
mov
add
daa
sbb
int
and
pop
movsl
jae,pt
movsl
push
pop
jge
mov
popa
shl
mov
mov
push
movsl
cmpsb
or
inc
cmp
movsl
push
jns
push
xchg
jl
mov
xchg
push
mov
and
bnd
fcomps
popa
add
inc
mov
aas
pop
jle
adc
lahf
insl
adc
cs
fcomps
cmpsl
jg
xchg
pop
inc
nop
pop
jno
and
out
test
cmp
ficomps
aas
imul
mov
je
xchg
loope
test
pushf
jmp
sti
cmpsl
cmpb
push
add
mov
inc
sti
and
nop
mov
lcall
cld
adc
xor
imul
or
push
lods
pop
and
add
mov
pushf
nop
arpl
ljmp
fsubrs
push
cwtl
adc
add
neg
je
sub
push
push
xlat
out
outsb
nop
test
test
test
movsl
push
cmp
sub
jno
iret
outsb
add
sbb
shlb
xorl
je
ret
outsb
pushf
xor
push
test
pop
clc
insl
mov
rcll
imul
cli
xlat
mov
or
jmp
lcall
jnp
aam
je
adc
pop
outsb
jbe
xlat
pop
andl
mov
call
cmp
sarb
lods
add
scas
sbb
in
rcl
push
xchg
pop
mov
sti
sub
insl
test
dec
xor
std
mov
imul
icebp
cmpsb
fbstp
mov
arpl
fisubrl
mov
xlat
ljmp
pop
fmull
nop
out
mov
push
das
lret
xchg
test
cmp
nop
popa
or
rcrb
daa
dec
adcb
push
stos
pop
subl
lret
notl
int3
dec
fs
imul
add
add
aam
or
inc
inc
ljmp
jp
test
pop
movsl
aas
pop
inc
xchg
mov
movsl
fwait
sub
dec
fimuls
and
rclb
fdivrs
jp
test
leave
pop
test
shr
movb
push
in
test
fwait
scas
fwait
stos
adc
movsl
push
cli
mov
sub
mov
icebp
mov
lods
or
std
sti
mov
xchg
mov
jl
mov
xchg
lods
jae
xor
dec
or
or
movsl
push
repnz
es
mov
fcomi
call
cs
ljmp
bound
stos
shlb
sti
dec
pop
sti
sub
cld
stos
sarl
lods
dec
mov
les
sbb
mov
sbb
call
icebp
xchg
cwtl
adc
pop
in
nop
pusha
cmp
jecxz
aas
cmpsl
fmulp
sub
jnp
add
test
mov
jmp
adc
rcrl
xchg
cmp
or
mov
sub
adc
into
cmp
stos
movsl
shlb
movl
mov
cltd
pop
imul
push
in
pop
shrl
mov
mov
pop
and
pop
jge
sarb
mov
push
cmp
lods
cmpsl
xor
push
pop
inc
in
cmp
pop
sub
mov
gs
test
lods
shrb
ret
xchg
popa
stc
adc
rcrb
mov
push
sub
lods
pop
mov
rcrb
je
cbtw
mov
cltd
loop
loope
push
idivb
mov
sub
adc
popa
jmp
inc
jecxz
movsl
jbe
or
icebp
xchg
add
rorl
cmpsb
loopne
push
push
xchg
mov
xchg
into
and
inc
mov
push
mov
push
fdivs
scas
mov
cmpsb
fidivrl
dec
pop
mov
inc
lret
xlat
ret
dec
mov
stc
mov
cmp
jecxz
mov
dec
dec
mov
orb
mov
push
and
dec
cltd
push
adc
int
push
xor
cld
pop
mov
xchg
lods
pop
loope
add
sub
mov
shlb
jno
cld
lods
out
outsl
pop
std
shll
sbb
mov
xchg
push
lea
pop
lock
mov
jo
loop
ljmp
push
movsl
push
mov
fmul
gs
jmp
mov
in
rclb
mov
and
movsl
push
lods
xor
shr
push
ljmp
adc
mov
mov
xchg
xchg
add
shl
es
insl
mov
pop
cmp
mov
lret
out
rolb
lret
xchg
lods
pop
bound
xchg
loope
cmpsb
push
xor
xchg
push
xchg
into
mov
and
shlb
out
push
mov
pop
call
test
lahf
outsl
ljmp
push
jno
inc
cmp
scas
dec
jmp
push
xlat
ds
sbb
call
sub
adc
mov
xchg
inc
popf
sub
inc
mov
mov
lods
mov
and
cmp
add
jecxz
loop
adc
mov
mov
dec
xchg
movsl
push
fwait
dec
xor
mov
clc
dec
int
test
repnz
mov
sbb
mov
movsb
movsb
daa
sbb
sbb
push
sbb
xor
pop
js
push
arpl
inc
dec
daa
inc
lahf
sub
and
xor
xlat
iret
and
push
sti
movsl
mov
outsl
mov
mov
icebp
mov
aaa
das
mov
lods
push
movsl
mov
jp
lods
std
out
mov
pop
xor
push
daa
inc
ficoml
lret
add
stos
movsl
out
jp
pop
fsts
fstpl
xor
or
and
sub
out
pop
popf
sbb
push
cmpsb
jbe
mov
outsl
out
inc
sub
sti
pop
decl
or
fs
or
pop
ss
hlt
and
adc
mov
push
mov
sub
mov
aad
gs
aad
dec
popa
sbb
cmpsb
gs
jne
adc
xsha256
cmpsb
push
xor
push
roll
mov
push
test
les
repz
sbb
cmp
adc
ljmp
cmpsb
push
icebp
sbb
jnp
adc
sbb
pop
std
xorl
sub
sbb
mov
pop
cmpsb
push
mov
fsubl
movsb
sbb
aaa
rcr
lcall
mov
lcall
adc
cmpsb
push
ljmp
push
push
loopne
std
insl
in
shl
shr
movsl
push
and
dec
lahf
das
sub
and
cltd
int
test
loop
std
jns
in
mov
xchg
xor
sbb
sub
test
lock
pop
faddl
mov
sub
mov
jecxz
jmp
mov
insb
lret
inc
sub
pop
cwtl
cmpsl
test
sbb
idivb
sub
cmpsb
push
sbb
jl
push
xor
es
aas
es
daa
xchg
pop
jle
jp
popa
mov
jp
xchg
mov
icebp
jo
outsl
repnz
mov
andb
xor
insb
sub
icebp
inc
sbb
jbe,pt
cmpsb
push
jnp
fcoms
inc
ret
fidivrs
sbb
dec
clc
stos
lods
add
xchg
jp
pop
fs
sub
testl
cmp
lock
sarl
bound
dec
sub
iret
cmp
loop
pop
stc
xlat
sbb
add
mov
mov
jo
mulb
subb
pop
test
rcll
cwtl
pop
dec
cmpsb
rclb
fisubrs
push
and
jno
pop
push
fdivrp
cli
orl
xchg
fstps
ret
sub
pop
loopne
mov
pop
jbe
data16
cmpsb
xchg
adc
sub
push
sub
pop
xor
and
ja
push
std
push
ret
shl
bound
cmpsl
xor
push
lahf
leave
dec
pop
sbb
mov
mov
pop
xchg
lret
dec
cmpsb
mov
mov
cmpsb
push
jns
sar
pop
adc
out
stos
test
push
stos
pop
ret
inc
xor
jmp
cmp
inc
test
push
cmpsb
push
fadds
push
lret
stos
mov
mov
sarb
xchg
addr16
dec
scas
xor
mov
in
jb
push
outsb
shll
push
xchg
pop
mov
stos
leave
xor
push
xor
pop
mov
arpl
cld
in
dec
repnz
push
push
dec
sbb
dec
lcall
cld
mov
shlb
dec
lods
movsl
xchg
rcl
and
add
push
pop
rcrl
mov
aas
in
ds
pop
hlt
popa
cmpsb
repnz
addr16
outsl
or
add
mov
cmpsb
sbb
out
lcall
mov
pop
imul
pusha
ds
int
inc
jae
cmp
pop
adc
add
push
adcl
loopne
mov
push
out
sarl
xor
outsl
leave
adc
jle
sbb
insl
push
scas
adc
xchg
ret
repz
nop
pop
stos
outsl
cmpsb
lods
xor
pop
or
inc
jecxz
cwtl
or
std
jo
js
pop
mov
adc
mull
out
out
xor
std
cli
jp
into
testb
cld
gs
ja
push
aad
sub
jbe
push
movl
loope
es
rcr
std
xor
leave
mov
adc
push
cmp
cmp
push
dec
push
xchg
xor
in
push
add
pop
aam
cmpsb
mov
inc
mov
sbb
cld
test
xchg
push
push
andb
outsl
pop
xchg
repnz
xchg
movsb
xchg
fnstcw
push
imul
cmpsb
cwtl
and
ja
leave
inc
add
pushf
insl
outsl
inc
mov
cmc
cmp
in
or
adcb
jp
loopne
mov
mov
push
push
mov
ror
shlb
fbld
inc
jmp
push
sahf
mov
notb
scas
aas
cmpsb
push
jmp
mulb
stc
test
mov
loopne
ljmp
or
mov
pop
push
cmpsl
cmp
dec
gs
bound
scas
stc
pop
add
sub
gs
fiadds
ljmp
and
roll
and
pop
pop
push
outsl
add
pop
jne
jle,pn
mov
cwtl
add
mov
test
pop
dec
mov
shr
les
stc
test
inc
cmp
lods
idiv
gs
test
mov
arpl
shl
mov
and
push
xor
loop
sbb
in
sbb
das
mov
mov
dec
cmpsb
lahf
cmpsl
fwait
imul
adc
xchg
xchg
or
mov
mov
test
loop
mov
outsb
test
pop
xchg
lret
popa
push
imul
mov
push
dec
push
aas
test
mov
jbe
je
mov
mov
cmpsb
adcl
dec
and
mov
loope
cmpsb
push
rolb
push
lods
inc
arpl
std
xor
mov
push
popl
mov
sub
push
jns
jmp
inc
mov
push
mov
repnz
jmp
data16
sbb
popf
sub
loop
shll
data16
or
ss
push
cmpsb
mov
js
mov
mov
jae
adc
add
and
jnp
mov
lret
add
les
test
dec
xchg
data16
sub
leave
adc
inc
test
mov
aam
lock
mov
gs
test
gs
xor
or
ret
and
mov
scas
test
fcomps
pusha
sbb
out
mov
mov
outsl
fmuls
bound
inc
add
or
cmpsb
push
pop
stc
jb
orl
data16
mov
movsb
xor
push
stc
test
sarl
and
scas
adc
mov
fadds
repnz
push
cld
lret
jle
daa
cmp
mov
in
lret
pop
sub
shlb
inc
mov
mov
iret
cmpsb
mov
ljmp
pop
loopne
bound
addr16
cmpsl
push
in
loopne
out
rcl
jbe
sub
mov
lods
xlat
cld
stos
imul
stos
aam
xor
je
or
add
imul
out
pop
inc
test
mov
adc
out
pop
push
sub
lret
fstps
ss
ds
fsubs
adc
mov
stos
jb
xor
and
gs
push
loop
push
jmp
jns
add
mov
xchg
mov
jmp
lods
lods
dec
inc
sub
xchg
push
in
loope
jno
jl
loope
repz
sbb
push
fwait
sub
std
mov
inc
jo
addr16
aaa
mov
cmp
roll
shll
push
mov
ret
mov
test
cmpsb
push
or
jnp
jmp
sub
in
jnp
imul
push
test
es
cmpsl
push
outsl
inc
rclb
insl
mov
cli
xlat
sar
inc
jecxz
ljmp
and
stos
stc
ds
fdivr
out
cmpsb
push
or
rol
inc
clc
popa
add
inc
push
ljmp
push
daa
inc
maxps
aas
iret
repz
push
in
push
xlat
dec
jbe
repnz
loope
dec
decl
loope
out
pusha
leave
sub
ficoms
push
pop
popf
xchg
outsl
mov
js
mov
scas
int3
addb
mov
mov
arpl
sbb
ljmp
xchg
sbb
sbb
cmp
insl
cld
mov
xor
cmc
jge
push
sub
fildl
adc
push
mov
stos
loope
nop
imull
add
daa
data16
adc
mul
inc
roll
or
int
xchg
pop
sub
xor
incl
xchg
orb
push
int3
xchg
scas
lahf
dec
mov
push
push
pop
mov
xchg
iret
mov
mov
es
cwtl
imul
nop
popf
in
sbb
push
mov
and
xor
lock
inc
mov
cmpsl
mov
mov
mov
into
insb
outsl
stos
mov
sub
mov
adc
push
pop
push
cmp
adc
jo
and
pop
in
push
divl
loopw
cmp
nop
adc
push
test
out
push
cmpsl
mov
dec
cmpsl
push
fisubrl
mov
sahf
jp
ja
push
dec
xor
orb
shlb
out
dec
outsl
adc
imul
inc
dec
jb
or
push
cmpsl
push
imul
loope
ret
ljmp
scas
lods
arpl
pop
push
lods
gs
sbb
cmpsl
scas
jae
insl
imul
xchg
out
aas
aad
xor
push
imul
inc
and
or
and
push
jne
mov
jo
sub
test
addl
dec
xchg
push
ret
and
sub
repz
das
lcall
sbb
std
movsb
filds
mov
pop
xlat
push
mov
push
jmp
int
jmp
pop
mov
or
inc
mov
xchg
cli
nop
xor
cmpsl
mov
jbe
jno
icebp
imul
push
xor
test
xchg
test
std
shl
sub
push
cmp
xchg
xor
xor
addl
add
test
enter
pop
movsl
push
outsl
loop
push
cli
mov
mov
cmp
pop
inc
lea
loope
xchg
aad
and
push
add
inc
pop
scas
gs
mov
ficoml
pop
gs
aad
dec
xor
ret
jp
int
test
xor
jmp
mov
outsl
push
mov
push
add
jbe
mov
and
loope
in
dec
mov
loope
lcall
xor
mov
gs
and
inc
push
loop
pop
mov
mov
subl
clc
mov
cltd
mov
push
dec
mov
popf
mov
ja
cmpsl
push
cmpsb
rcrb
jl
cmpsl
push
adc
or
lock
add
mov
mov
in
mov
js
jge
lods
stc
mov
test
pop
jnp
push
cmpsl
push
into
or
and
push
cmpsl
mov
test
and
jno
pop
inc
mov
outsl
popa
stos
lret
and
repz
or
lods
std
test
inc
in
imul
lret
scas
notl
sub
out
push
imul
xchg
jmp
mov
icebp
sub
jae
sbb
pop
test
gs
push
dec
push
mov
inc
orb
lret
push
sahf
sahf
push
push
sub
and
push
mov
bound
imul
jbe
int3
nop
rep
lods
or
mov
faddp
gs
lea
push
push
cmp
in
ret
cmpsb
int3
cmpsl
jns
lock
add
jl
mov
dec
imul
ret
fimull
insb
sbb
dec
jge
jb
push
pop
push
cmp
pop
xchg
and
loopne
test
test
popa
bound
jb
xor
add
inc
pusha
subl
pop
lret
push
mov
nop
pop
xor
xor
mov
xor
jp
aad
sbb
xchg
add
sbb
std
pop
mov
aas
cmpsl
push
mov
std
xchg
arpl
loope
push
sbb
jp
cmp
dec
mov
and
shll
push
mov
ljmp
xor
rcrl
mov
mov
cmpsl
pusha
mov
add
xchg
jge
gs
cmpsl
push
push
push
in
push
push
enter
andl
sub
jp
test
arpl
cmp
ss
es
add
cmpsl
push
pop
inc
test
roll
fisttpll
mov
stos
push
cmpsl
mov
dec
or
mov
sbb
or
cmpsl
cmpsl
pop
jns
push
dec
lea
add
insl
mov
pop
inc
jp
pop
or
inc
outsl
cmpsb
jb
int
adc
fs
mov
or
xchg
adc
mov
test
push
test
mov
jmp
xchg
cmpsl
push
das
adc
sub
xor
pop
xchg
cmpsl
lahf
loope
jno
inc
cwtl
xor
pop
xchg
popa
cmpsb
cltd
cmpsl
lock
pop
daa
les
aas
jl
cmpsl
push
jecxz
mov
mov
leave
add
call
lods
scas
cmp
lahf
and
cmpsl
stos
lods
mov
inc
mov
cmpsl
push
lea
gs
sahf
dec
sub
jno
pop
mov
imul
mov
aas
mov
dec
xchg
add
xchg
or
pusha
bound
es
pop
mov
xor
sbb
ja
mov
cmp
cmpsl
cmpb
push
das
imul
outsl
mov
and
test
enter
cmpsl
push
xchg
add
cmp
cmpsl
sbb
int
stos
test
mov
fsubrs
movsb
loopne
mov
mov
cmc
mov
adc
cmp
sarb
shlb
cltd
loopne
fldcw
fs
mov
jmp
hlt
es
add
cmpsl
push
pop
ljmp
lcall
push
das
psubw
movsb
das
mov
fcmovnb
rcl
cmp
ret
xchg
dec
mov
push
popa
mov
cmpsl
pusha
add
hlt
push
pop
jae
push
stos
mov
dec
sbb
shl
add
cmpsl
push
repz
cmc
dec
repnz
mov
ljmp
test
push
aam
jg
arpl
scas
stos
and
and
or
sub
out
and
mov
scas
push
jecxz
push
cmp
mov
xor
jno
add
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
inc
inc
sbb
dec
shlb
popa
pop
adc
push
gs
loope
or
mov
jmp
mov
and
pushf
sbb
inc
in
mov
cmp
dec
xchg
rcr
imul
dec
mov
xor
dec
scas
jp
cli
xor
sbb
sub
add
add
lahf
lret
push
adc
stos
aad
clc
xor
rcl
jbe
sbb
jmp
dec
jp
addr16
sub
in
iret
and
mov
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
push
jne
ret
jmp
inc
xor
jne
fldpi
jecxz
mov
push
leave
lret
mov
leave
ss
test
outsl
fwait
shr
adc
fldln2
testl
and
cmp
lods
mov
ljmp
pop
and
fs
out
jmp
and
fs
out
jmp
rorl
stos
cmp
xchg
les
movntps
in
mov
mov
sub
in
mov
adc
fst
inc
repnz
into
pusha
cwtl
mov
mov
cli
xchg
loop
nop
add
inc
pop
fisttpll
adc
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
lret
ficomps
lahf
daa
push
mov
pop
out
arpl
pusha
cwtl
mov
mov
cli
ja
cmpsb
aaa
adc
add
sarl
mov
mov
xor
or
shll
imul
cwtl
mov
mov
cli
jecxz
jmp
mov
or
insl
pop
add
mov
cmc
leave
js
dec
sahf
into
pusha
cwtl
mov
mov
cli
fldenv
es
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
into
pusha
cwtl
mov
mov
cli
loopne
add
cmp
fwait
ss
das
jle
aas
push
and
sarl
dec
push
scas
call
scas
mov
out
and
popa
dec
dec
sub
inc
dec
test
xor
in
jmp
mov
push
jns
aas
push
lods
repnz
pop
leave
daa
sbb
lret
out
push
jno
sub
dec
sbb
fbld
lret
insb
adc
std
aas
mov
dec
std
inc
insb
adcb
mov
shrl
dec
faddl
scas
leave
movsl
enter
loope
jmp
imul
loope
out
sub
dec
stc
push
int3
idivb
frstor
inc
adc
mov
sbb
and
push
sahf
or
inc
xor
fisttpll
sbb
mov
mov
int3
in
dec
pop
add
aam
lods
movsl
xlat
mov
mov
pop
mov
jno
xchg
push
ds
adc
pop
cmp
mov
or
and
in
push
je
mov
imul
push
jmp
xor
ss
mov
fsub
and
addr16
xor
push
movsb
inc
sbbl
das
xor
xchg
popa
push
xchg
jns
xor
push
sarb
jecxz
cmp
push
vcvtps2pd
cwtl
in
adc
adc
pop
mov
sub
mov
pop
and
addr16
idivl
aam
adc
jmp
in
imul
or
jmp
sbb
adc
fs
in
in
jne
data16
and
popf
cmp
add
subb
fldenv
int3
adc
mov
fwait
insb
das
and
push
push
into
push
xor
imul
cmp
outsl
jno
out
rorb
shlb
test
fnsave
jo
dec
add
or
sti
push
mov
dec
cmc
xor
xchg
sub
dec
cmpsl
add
icebp
mov
add
mov
cmp
add
xchg
mov
lahf
sub
cs
xchg
jno
stos
jb
stos
lret
subb
mov
ret
test
jle
sub
push
ljmp
sub
inc
ret
lds
xchg
mov
notb
xlat
out
pusha
or
movsl
xor
adc
cld
out
stos
es
cltd
ret
cmp
xor
outsl
pop
adc
fdivl
lds
movsb
dec
movsb
scas
fdivl
jnp,pt
pop
mov
nop
test
sub
mov
push
xchg
adc
fsub
rolb
out
popf
fists
lcall
fisttpl
es
test
rclb
push
xchg
pop
aad
dec
sub
orl
pusha
cli
js
or
daa
xchg
aas
pop
push
inc
or
std
push
outsb
imul
sti
jl
sarb
cs
aam
adc
lds
les
cld
in
pushf
aaa
inc
inc
push
add
gs
or
movsl
cmc
xchg
adc
nop
insl
adc
outsl
inc
std
cld
incl
or
stos
ds
loope
mov
push
xlat
loopne
rorl
pop
inc
pop
or
pushl
movsl
lea
push
jo
test
mov
jae
in
mov
cmp
xchg
out
jb
jae
cmpl
je
ss
les
insb
push
cmp
adc
lret
add
scas
xchg
ret
push
push
leave
adc
daa
sub
cmp
adc
pop
mov
jl
fdivl
in
jp
insl
mov
add
arpl
jp
sbb
rclb
in
adc
pushf
das
sub
in
or
movsl
enter
sub
mov
gs
idivl
adc
mov
subl
pop
dec
xor
popf
mov
adc
inc
sub
scas
bound
push
repz
icebp
std
das
pop
and
mov
push
dec
cwtl
stos
pop
sbb
xor
cmp
popa
push
aad
xor
push
js
pop
stos
xlat
mov
popa
pop
loopne
add
jno
clc
cmp
ficomps
add
jmp
mov
inc
jo
cmp
inc
mov
push
mov
inc
sub
loope
sbbb
outsl
movsl
pop
fistpll
out
sub
mov
insb
jle
or
and
adc
cli
mov
sarl
rcll
cmp
dec
fisttpll
aad
mov
mov
movsb
inc
push
mov
push
imul
push
or
shll
xor
sub
iret
int3
es
ds
aaa
jb
dec
xchg
subl
in
and
adc
icebp
sti
lods
stos
in
cltd
fstps
xor
and
xchg
mov
and
or
xchg
adc
test
enter
gs
lcall
cmp
mov
push
loop
push
ret
cmpsl
mov
sub
out
fmuls
jmp
dec
rcr
mov
and
pop
sbb
js
lret
cmpsb
mov
mov
roll
jge
call
jge
fistps
test
and
inc
mov
jecxz
pop
cmp
lock
push
mov
add
and
push
xchg
movsl
jg
add
mov
popf
mov
lcall
ret
sub
fstpt
fisubl
or
add
adc
popa
add
mov
mov
pop
jne
into
jo
mov
hlt
mov
loopne
pop
aad
rcrb
mov
mov
pop
data16
sub
adc
movsb
mov
js
pop
out
movl
inc
push
cmp
sbb
addl
dec
leave
out
aaa
inc
cmp
jb
shlb
jns
mov
inc
int
mov
sbb
nop
add
rcrl
cmp
fimuls
cmpsb
test
and
clc
add
mov
cmpsl
shrl
lahf
clc
add
gs
popf
cmp
aaa
dec
rcrl
jne
sub
push
xlat
lods
jp
cld
fnstsw
add
xchg
fimull
lea
out
jo
std
pop
add
dec
sub
ret
inc
dec
addr16
les
fsubs
or
xlat
push
out
in
adc
fistl
stc
mov
pushf
xchg
je
in
shl
int
test
fwait
ljmp
inc
outsb
or
mov
mov
add
mov
ss
push
adc
lcall
nop
mov
xorl
lahf
lods
lret
jle
dec
test
ss
xchg
mov
dec
or
adc
popa
sub
mov
mov
fnsave
stos
add
or
stc
or
mov
mov
xorl
mov
mov
push
inc
sbb
shl
mov
icebp
lds
xchg
sbb
shrl
and
pop
xlat
imull
sub
sbb
loopne
sbb
lret
cld
or
cs
and
popf
out
ret
cmp
dec
iret
imul
fbld
mov
sbb
leave
mov
popl
dec
dec
pop
jnp
mov
test
movsb
movsb
push
cmp
daa
xchg
push
shl
pcmpeqd
aam
dec
cmpsl
pop
xchg
adc
push
pushf
lods
mov
pop
and
cld
mov
repnz
push
mov
push
sub
shr
sahf
es
mov
or
add
mov
orb
inc
out
cmp
lea
ja
mov
dec
int
dec
jno
xor
fnsave
and
xor
lods
push
sahf
add
sub
xor
push
adc
mov
sbb
sub
push
imul
mov
mov
add
adc
jnp
xchg
sarb
adc
pop
pop
mov
jge
aam
or
and
add
xor
outsb
inc
les
add
cmpsl
xchg
xor
jg
mov
xorl
and
pop
dec
popf
xchg
cli
stos
stos
xchg
mov
cmp
cmp
pop
test
or
jo
or
mov
lock
scas
pcmpgtd
push
loopne
mov
dec
pop
and
in
xor
push
in
hlt
jb
enter
add
aas
push
push
xor
mov
lds
cli
adc
in
imul
lea
pop
call
pop
add
inc
test
inc
add
push
jnp
mov
stc
test
shrl
sub
mov
mov
inc
ficoms
les
adc
jp
sub
lock
pop
mov
xchg
or
outsb
adc
xchg
xorb
ret
fdivs
ja
lret
xchg
dec
xchg
lods
popl
jae
in
jne
imul
fcoms
jmp
std
subb
stc
sbb
mov
mov
lcall
sub
clc
out
jmp
ret
pop
das
dec
and
pushf
xchg
mov
int3
int3
mov
repnz
popa
iret
xchg
sbbb
sub
insl
pop
ja
stos
dec
icebp
outsl
adc
aam
pop
scas
jbe
shll
je
pop
or
ljmp
ret
lcall
jo
xchg
int
movsb
stos
push
jmp
loop
mov
xor
and
cmc
mov
xlat
lea
xlat
sub
andps
fidivl
push
jno
xor
pop
rcrb
push
mov
iret
dec
jp
ret
jbe
icebp
dec
orb
and
or
mov
jns
fists
pushf
mov
xor
inc
sahf
ret
cmpsl
xchg
nop
fists
add
lods
imul
mov
mov
mov
dec
inc
xchg
push
ljmp
das
out
outsl
adc
xlat
pop
add
in
jae
out
add
das
inc
data16
aaa
push
push
les
pop
imul
fisubrl
mov
daa
jp
mov
pop
insb
mov
inc
loope
stc
scas
sbb
mov
dec
lahf
or
xchg
adc
out
mov
jbe
sub
or
cmp
dec
jb
fistps
mov
aad
xchg
cltd
in
in
shlb
mov
xor
mov
sub
sbb
inc
fld
das
scas
inc
je
fsubrl
push
arpl
lods
icebp
inc
gs
sub
out
outsl
sub
or
fcomip
jg
jb
lods
test
clc
lock
imul
push
adc
adc
jns
rcrl
xchg
aas
push
sub
push
pop
cmp
andl
or
jecxz
jns
jp
js
dec
pushf
out
rclb
jmp
sbb
cmp
dec
mov
js
rorl
cmp
sbb
je
pop
pop
repz
pop
dec
fidivl
push
imul
in
mov
mov
mov
imul
stos
mov
addr16
add
jp
cmc
mov
lods
shlb
push
jecxz
mov
push
push
popf
jb
xchg
jnp
fidivrl
fadd
pop
sbb
ja
jbe
inc
pop
mov
std
inc
call
sub
mov
add
pop
push
push
out
pop
loopne
jg
jnp
in
mov
mov
and
jmp
ss
loop
mov
jo
cld
sub
mov
dec
ja
jnp
lahf
lds
push
gs
push
loopne
xor
mov
rclb
jne
xlat
mov
push
inc
add
stos
push
push
lods
mov
arpl
mov
jns
cmp
mov
jge
xchg
xchg
jne
idivl
mov
popf
cwtl
push
hlt
sbb
sub
cld
das
add
loopne
loopne
aam
push
cmp
lods
pop
pop
mov
ret
bound
mov
xchg
sub
pop
aas
mov
dec
jns
mov
fisubs
cmp
inc
mov
mov
iret
sub
cmp
ja
xchg
cmp
and
in
xchg
dec
xor
pop
push
mov
test
mov
pop
cli
xlat
push
jle
dec
int3
mov
out
mov
lret
sub
jle
into
xor
dec
jns
popf
inc
test
enter
mov
mov
adc
and
cmp
jle
insb
pop
jno
mov
inc
fstps
xchg
jne,pn
mulb
test
mov
stos
cmp
jle
shrl
cmp
sbb
sti
push
loope
or
and
pop
arpl
cmp
rcll
cltd
popf
repz
outsl
xor
gs
mov
jno
adc
push
daa
mov
xor
add
arpl
into
sbb
popf
out
out
dec
dec
and
dec
out
dec
lock
cltd
out
cmp
rorl
sarl
addr16
or
sbb
xchg
shlb
lahf
cwtl
int3
cmp
ret
pop
adc
mov
mov
repz
jp
movsl
mov
int3
mov
or
rolb
iret
mov
pop
data16
icebp
scas
cmc
mov
arpl
test
fmull
std
lret
dec
repz
mov
xorb
scas
pushf
hlt
xchg
cs
cmpsl
je
cwtl
cmp
lret
inc
mov
ljmp
divl
repz
or
mov
dec
jbe
inc
add
sbb
pop
bnd
ret
sub
jae
je
push
add
and
jne
mov
xchg
sbb
add
mov
push
mov
or
insb
xchg
stos
or
clc
sbb
and
pop
pusha
push
lock
mov
fadds
sub
mov
stc
aam
ss
mov
mov
pushf
add
mov
in
ds
aam
pusha
es
xchg
jg
push
mov
xchg
enter
stc
sbb
fnop
lret
lock
out
les
shrl
push
adc
mov
decl
jl
xchg
testl
inc
push
xlat
pop
push
into
lock
sahf
mov
fstpt
lock
mov
cmp
imul
loopne
dec
pop
arpl
add
aad
test
push
dec
stc
loop,pt
sbb
pop
decb
and
sub
icebp
mov
jbe
fldl
adc
cmpsl
xchg
mov
scas
mov
inc
sahf
sub
bswap
mov
and
fiaddl
ljmp
push
aad
jle
scas
xchg
in
sahf
inc
mov
dec
adc
dec
mov
jno
push
test
js
testb
lods
and
aas
inc
or
flds
loop
adc
sbb
out
jb
jle
int3
lods
imul
mov
mov
lea
and
sub
rclb
jecxz
rcl
xchg
xchg
add
mov
mov
outsb
and
mov
xchg
jne
cli
fbld
xchg
xchg
insb
push
add
xor
bnd
out
xchg
xor
dec
jle
imul
mov
loop
mov
insb
int3
cmpsl
and
call
inc
cltd
mov
sub
inc
jnp
cmp
hlt
addr16
xor
daa
out
rcll
jae
lock
enter
dec
sbb
outsb
adc
mov
sub
dec
xchg
cmp
xor
pop
cmp
sub
cltd
xor
arpl
mov
repnz
imul
inc
cmp
dec
cmp
sbb
insb
pop
int
test
lret
mov
cmp
ja
in
sbb
mov
rclb
cmp
jne
mov
or
adc
mov
gs
fimull
sbb
push
mov
cmp
mov
push
mov
sub
dec
sahf
pop
out
cwtl
adc
leave
leave
add
loopne
xor
or
fdivs
mov
arpl
xor
incb
lea
cld
mov
xchg
lret
cld
movsb
and
sbb
sbb
push
or
cmp
outsb
push
filds
movups
stos
mov
arpl
leave
cs
gs
les
sahf
mov
adc
scas
add
xor
mov
adc
cmp
outsb
movsb
int
incl
sub
jp
jmp
pop
mov
fs
sbb
or
les
and
mov
push
lods
xor
cmpsb
or
loopne
inc
push
scas
pop
cmp
rclb
mov
mov
mov
dec
adc
or
sbb
add
jp
jecxz
jl
jg
cs
nop
mov
adc
in
adc
pop
nop
lret
and
add
mov
insl
pop
sarb
loope
xor
dec
jno
cltd
clc
add
adc
notb
sub
and
adc
inc
test
and
insl
lea
jecxz
push
lcall
adc
sahf
jl
mov
and
xchg
movsl
cld
push
ss
cmp
or
push
jle
xlat
jns
cli
shl
aad
fs
xor
mov
mov
mov
push
in
pop
pop
jo
fcompl
mov
popa
adc
leave
repnz
addr16
or
arpl
adc
lret
adc
idivl
mov
sub
aaa
push
pushf
ret
pop
push
and
pusha
xrelease
cmp
dec
jp
xchg
or
popa
xchg
and
inc
adc
xor
add
test
ja
push
and
ret
sub
mov
addb
dec
movhps
cmp
or
push
scas
or
sub
pop
test
pop
arpl
dec
popf
fistpl
or
adc
xor
jmp
lods
push
push
mov
cmpsb
push
ljmp
ffreep
inc
sub
fs
out
lcall
mov
jne
mov
cmpsl
and
sbb
into
xor
cmp
mov
lock
add
mov
xor
icebp
add
pop
inc
iret
cmp
sahf
xor
or
das
inc
sbb
push
pop
ffree
adc
sub
sub
and
shl
mov
icebp
lcall
insl
xchg
jnp
pop
sub
pop
cwtl
pusha
inc
inc
adc
adcb
mov
rclb
dec
jecxz
sub
push
dec
mov
sbb
vmovdqa
orl
fsubs
inc
rol
dec
popf
repz
int3
cmp
mull
push
je
lds
or
push
bound
and
adc
ror
dec
xchg
jg
pop
pop
mov
cmc
cmpl
jg
aad
movsb
dec
jnp
stos
imul
mov
cwtl
add
or
stos
stc
ss
lret
ja
fwait
mov
les
mov
cmp
sub
fiadds
insl
pop
into
add
lret
jbe
xor
cmp
mov
cmpsb
mov
std
sbb
insl
push
pop
loope
xchg
mov
negl
arpl
or
outsb
cli
pop
cmp
mov
push
scas
ret
xor
std
icebp
mov
xchg
out
mov
and
xchg
das
inc
cmp
mov
outsb
inc
inc
cmp
imul
int
sub
or
xchg
adc
jb
push
sub
adc
gs
leave
scas
lods
xchg
in
sbb
icebp
pop
decb
les
scas
xchg
pop
jb
xor
jp
movsb
popf
nop
mov
xchg
mov
repnz
adc
mov
push
mov
mov
jae
andl
jg
and
popf
sbbl
lahf
push
or
sub
sbbb
outsb
mov
pop
or
sahf
jae
movsb
lahf
mov
andl
mov
cmp
xorl
cwtl
push
mov
dec
push
stos
xchg
push
loop
mov
adcl
movsb
xchg
pop
cli
je
cmp
insb
and
and
lods
pop
in
iret
mov
outsl
xchg
inc
jns
xchg
sub
add
in
jp
pusha
lods
cltd
outsl
enter
jle
mov
sub
ljmp
pop
jecxz
popf
popf
ja
jae
sub
or
mov
enter
hlt
gs
repnz
mov
sahf
dec
leave
popa
lahf
nop
sub
ja
xchg
je
xor
mov
rcll
mov
mov
inc
jle
mov
bound
mov
stc
nop
mov
aaa
mov
popf
loop
movsl
mov
or
pop
mov
adc
aad
mov
push
xor
cltd
lcall
add
jbe
in
ret
cmp
or
mov
inc
adc
push
loope
mov
xchg
imul
arpl
int
jbe
cs
sub
in
mov
mov
add
pop
outsb
mov
xor
lds
ret
or
fwait
imul
clc
adc
fbstp
imulb
pop
mov
fnsave
cwtl
roll
mov
push
and
push
out
cmp
lds
dec
jge
ja
xchg
add
push
or
shll
jle
test
push
aam
pusha
cld
pushf
ret
mov
ret
cmp
cmp
outsb
pop
jb
jle
lahf
fcomps
adc
fmull
mov
loop
cmpsl
xor
dec
outsl
out
xor
xchg
lods
js
mov
or
fnstcw
cmpsb
add
sub
and
sti
adc
out
or
lock
out
dec
hlt
pop
and
jmp
out
into
sbb
xchg
inc
sbb
or
mov
cmp
jle
jl
sub
jae
in
jo
adc
dec
mov
repnz
lret
mov
jae
cltd
mov
jge
lret
dec
push
pop
cmpsl
mov
sub
in
xchg
mull
mov
lret
int3
mov
xlat
dec
cltd
les
lock
ja
sarb
pop
lods
cmc
cmpsl
adc
lahf
int
pop
mov
jo
pop
in
pop
jns
je
popf
lds
insb
testl
test
cmp
cmp
ficomps
enter
mov
xchg
pop
inc
out
lahf
aam
fldcw
mov
sub
sarl
adc
or
pop
out
dec
lods
add
xor
punpckhwd
jle
or
xchg
out
outsb
jne
sub
int3
fwait
fwait
lret
sub
mov
sub
pop
jecxz
add
into
mov
inc
in
out
sbbl
notb
das
fisubl
out
pushf
or
mov
xor
inc
ja
cmpsb
out
add
jbe
xchg
adc
addr16
outsb
sub
mov
ljmp
jns
daa
push
sbb
sti
xchg
push
sub
push
clc
mov
push
mov
mov
mov
sarl
movsl
inc
jmp
cmpsl
fwait
ss
push
imul
cltd
push
fcomp
ficomps
movsb
dec
notb
aas
test
cltd
stc
xor
pop
shll
idivb
in
cmpb
push
repz
mov
jae
sbb
sub
out
jne
lret
in
mov
loop
int3
push
cmp
out
adc
xchg
or
das
nop
imul
insl
dec
mov
into
ror
push
mov
and
js
jg
sbb
jg
test
jno
jecxz
loopne
xor
inc
cwtl
xchg
lea
ja
ss
lret
enter
xlat
push
adc
mov
mov
xor
js
cmp
loop
mov
fsubrl
sbb
xchg
or
and
and
stos
and
pop
pop
sbb
cmp
sbb
adc
fldenv
add
adc
mov
out
jo
repz
or
sarb
inc
adc
cltd
cmpsb
cwtl
fs
stos
in
in
lret
mov
pop
shrb
iret
jne
rcr
push
xchg
mov
fs
inc
mov
or
shr
push
icebp
mov
xor
pop
aaa
inc
push
pop
mov
movsb
loopne
xchg
in
leave
leave
in
fnstcw
loop
or
addr16
fdivr
cwtl
les
clc
popa
dec
mov
mov
cmc
ss
jne
cmpsb
gs
cmp
sti
pop
jp
pop
shl
repnz
fsin
sub
mov
mov
cmp
push
push
movsl
mov
scas
lahf
and
cltd
aaa
push
jb
sub
jg
mov
cmpsb
int3
mov
jo
sbb
rcrb
fwait
pushf
mov
dec
ss
stos
or
inc
or
rcrb
mov
cmp
mov
data16
lods
repnz
cmp
adc
sub
aaa
push
rorl
lret
loop
imul
shll
mov
mov
sbb
pop
cmp
mov
fimull
in
adc
lcall
dec
out
sub
sub
int3
call
mov
pushf
mov
addr16
mov
mov
je
jbe
mov
sbb
test
faddl
lret
rcrb
inc
popa
insl
add
les
aaa
imul
arpl
les
test
xor
cmpsb
mov
and
jbe
dec
dec
inc
out
call
xchg
jle
and
in
pushf
mov
push
add
icebp
sub
sti
add
sub
shl
dec
sbb
sbb
loopne
mov
aaa
repz
adc
iret
mov
loope
scas
jno
jbe
loop
mov
pop
and
cmp
inc
push
scas
imul
sar
mov
mov
test
jle
imul
mov
lods
mov
lds
data16
push
add
and
repnz
mov
sub
adc
sub
dec
inc
decb
xchg
mov
jle
inc
or
inc
roll
sub
shll
int
jnp
xor
pop
and
pusha
sub
aad
loope
sub
dec
movl
or
shlb
iret
inc
dec
push
pop
iret
jecxz
sahf
imul
subb
js
adc
dec
dec
stos
popa
mov
jae
dec
ds
mov
push
mov
lea
cld
fcmovbe
xor
sub
repz
fidivrl
add
jl
cmp
inc
mov
out
dec
sbb
add
std
mov
shrb
xor
std
pop
jecxz
mov
cli
leave
pop
lcall
and
lea
mov
es
adc
pop
dec
in
sti
dec
inc
mov
jge
jb
sub
ret
arpl
push
xchg
xchg
cmp
mov
js
ja
mul
xchg
nop
mov
add
jg
icebp
push
fstpt
add
cli
ja
sbb
mov
or
aad
jmp
or
into
std
clc
push
fstpl
int3
test
leave
mov
add
aaa
or
popa
mov
jecxz
or
ljmp
movlps
or
icebp
mov
adc
push
push
lahf
dec
nop
sbb
push
jl
xorl
mov
push
aam
pop
jle
xchg
out
xchg
mov
inc
mov
ret
sahf
orl
and
cmp
pop
jp
js
cmp
cwtl
cld
int
shrl
mov
sub
fcoms
rorb
lret
jmp
fiaddl
cmp
mov
mov
in
cltd
or
cld
rorl
scas
movsl
popf
mov
scas
sub
mov
pop
adc
icebp
es
push
add
dec
jae
aam
jg
pop
lea
sbb
je
rolb
xchg
sti
lea
mov
repz
imul
jl
mov
cmp
movsl
rol
inc
add
add
iret
mov
shll
pop
dec
int3
cs
or
addb
cli
ss
and
outsb
inc
ja
cs
stos
icebp
pop
in
jno
test
ljmp
in
mov
sbb
jecxz
popa
jne
push
insb
push
xchg
sbb
xchg
in
cmpsb
sbb
fnsave
addr16
or
lock
xor
fwait
divb
mov
push
mov
popl
andl
and
loop
push
loopne
and
push
cmp
push
jmp
or
push
data16
pop
lcall
jle
fldl
mov
and
jl
js
addr16
and
cld
pusha
xchg
sahf
and
mov
mov
insb
xchg
fs
dec
add
cmpsb
add
jae
scas
in
xor
and
pusha
cmp
mov
daa
cmpsb
add
push
lret
dec
dec
jb
insb
push
pushf
test
sbb
ljmp
cmpsb
jl
push
inc
inc
daa
ret
and
xor
test
mov
aaa
fwait
fwait
add
or
aas
push
sbb
xchg
imulb
dec
mov
mov
int
divb
cmp
dec
or
lds
mov
ds
mov
dec
push
push
in
loope
aaa
inc
test
nop
mov
mov
mov
sbb
bound
pop
movsb
push
add
xchg
nop
fcmovu
clc
pop
out
pop
fldt
das
and
sub
adc
pop
imul
je
inc
fidivrl
or
pop
adc
sbb
pop
push
adc
pop
ret
ret
push
inc
xchg
add
lods
cmp
ror
clc
das
js
addr16
popf
add
adc
push
inc
or
sbb
mov
jp
mov
pusha
inc
into
das
cmp
mov
cmp
add
mov
push
jg
mov
cmp
mov
popa
mov
dec
enter
inc
jge
loopne
xchg
mov
cmp
out
gs
xchg
lods
test
pop
rorl
popf
scas
xchg
loop
xor
inc
clc
fistpl
lahf
repz
pushf
cmp
sub
xor
push
or
inc
jmp
and
inc
xor
mov
jnp
in
fwait
push
popl
or
xor
insl
mov
mov
jl
fildll
sub
sbb
mov
fwait
fiadds
cld
addr16
mov
dec
and
movsl
js
gs
xchg
mov
cmc
out
cmc
mov
mov
mov
mov
nop
addr16
mov
xor
icebp
into
xchg
das
sbb
fs
push
push
movsb
xchg
jmp
fstl
push
xchg
pushf
fnstsw
inc
in
xchg
cmpsb
fs
mov
inc
out
into
lods
movsb
push
add
adc
push
enter
cmp
jge
xchg
jae
push
fwait
xor
das
sbb
inc
push
int3
adc
sbb
pushf
xchg
fidivrl
dec
shr
push
sbb
in
push
add
rcrb
std
daa
pop
pushl
mov
mov
test
mov
push
adc
loope
sub
push
fstp
pop
mov
cwtl
sarb
out
sub
jmp
adc
mov
scas
nop
mov
dec
dec
test
lods
xchg
pop
shrb
mov
ss
mov
xlat
inc
inc
sub
ret
sahf
lods
push
push
fisttpll
xlat
jle
sbb
inc
push
cmp
out
dec
pop
loop
fsubl
cmp
leave
ja
or
mov
stos
repz
lods
cmp
ds
dec
sarb
aas
in
je
mov
std
pop
cli
je
cmp
xchg
cmp
das
mov
sbb
dec
xor
in
sub
daa
inc
hlt
xchg
insb
clc
in
jbe
mov
adc
push
sbb
imul
fwait
popa
pop
and
push
push
mov
xor
sbb
jo
pop
cmpsb
rorl
pop
push
sbbb
cli
cmc
mov
es
mov
xor
add
in
in
jb
xor
xor
mov
push
shlb
mull
pop
popf
jmp
add
sub
dec
mov
loop
fcomps
shll
call
inc
xor
sbb
addr16
imul
pop
add
dec
fs
pop
mov
cmp
jno
push
jmp
dec
cmp
shrl
push
nop
push
fucomp
aas
mov
cmpsb
adc
repnz
adc
es
por
in
xor
popf
ja
mov
xchg
push
outsb
mov
jae
test
sub
inc
xor
xor
test
jae
shlb
jne
sbb
pop
jge
pop
out
cmp
mov
dec
fisubl
pop
lock
push
mov
std
dec
into
mov
fmul
popf
dec
pop
jns
out
mov
inc
pop
inc
cmc
push
or
test
cmp
mov
mov
dec
jl
sub
inc
xchg
mov
imul
jle
std
push
pop
subl
scas
ja
jo
aas
jle
call
pusha
lods
cmp
out
fmuls
and
cmpsl
add
add
lret
outsb
in
aam
xchg
xor
daa
cwtl
sub
xchg
dec
mov
sarb
xlat
push
push
push
test
movsb
add
movsb
cld
dec
mov
xor
mov
loope
xor
cmpl
xchg
mov
sbb
xor
or
pop
xchg
jns
xor
xchg
loope
cmp
test
jmp
int3
adc
or
jle
lods
outsb
xor
push
and
adcl
jp
push
xchg
jp
push
loope,pt
inc
aaa
out
clc
jae
push
sub
stos
scas
mov
xchg
and
dec
inc
inc
dec
inc
cltd
outsl
or
sub
mov
adc
pushf
ljmp
adc
loop
xchg
xchg
or
dec
nop
lret
pop
xlat
repz
push
pop
sbb
add
xchg
xchg
pusha
ljmp
dec
and
sub
adc
add
repnz
lea
pop
push
subb
outsb
cltd
cmp
out
in
mov
push
fcmovne
jle
lcall
mov
mov
js
mov
xchg
pushf
xor
mov
and
lds
jb
nop
mov
adc
pop
cmp
cmpsl
rcrl
or
push
dec
adc
xchg
rcll
ret
ficoml
or
xchg
mov
jl
push
push
aad
cmp
fs
jle
add
and
int
shlb
mov
sub
mov
clc
loopne
inc
fst
lret
cmp
add
outsl
mov
popl
sbb
cld
stos
xchg
ret
dec
aad
test
clc
imul
cmp
nop
fyl2x
ret
mov
insb
or
