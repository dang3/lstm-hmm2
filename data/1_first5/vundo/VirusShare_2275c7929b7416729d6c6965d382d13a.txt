jmp
pop
lods
jne
mov
rorb
call
movl
rorl
mov
and
movl
or
mov
sub
mov
rolb
xchg
mov
sub
add
bndldx
xchg
mov
xor
or
je
nop
jmp
in
imul
xchg
popf
adc
call
roll
rorl
mov
push
sub
mov
sub
push
mov
add
add
add
add
push
xor
push
mov
add
add
add
push
push
movl
movl
xor
roll
xor
rorb
xor
mov
add
and
add
add
add
ret
pusha
call
jmp
adc
push
das
cmp
sbb
inc
out
ss
sub
add
sub
sub
sub
mov
mov
mov
movl
roll
rorb
sub
xor
rorl
xor
mov
mov
mov
xor
mov
rorb
rorl
movb
sub
xchg
mov
add
sub
btr
cmp
cmovge
movzwl
cld
mov
xor
add
sub
mov
popl
add
jmp
lea
jmp
setl
lea
add
add
xor
rolb
mov
mov
movb
jmp
pop
push
jmp
sub
xchg
rorl
mov
xor
mov
xor
mov
roll
mov
xor
mov
add
sub
call
rorb
roll
mov
xor
cmp
test
mov
dec
cld
mov
add
add
add
xchg
mov
mov
sub
mov
movl
rorl
rolb
sub
xor
movb
movl
xor
movl
xor
mov
cmovp
lea
test
arpl
mov
cmp
cld
add
xchg
mov
add
xchg
mov
cli
ret
nop
jmp
adcb
test
nop
push
push
call
push
popl
and
call
push
popl
and
mov
jmp
lea
xchg
rcl
mov
adc
cmp
dec
push
pop
cld
mov
and
add
pop
push
mov
mov
push
call
push
popl
or
arpl
movsbl
jns
sbb
xor
xchg
cmovp
jmp
cmp
arpl
repz
cld
mov
and
add
movl
xchg
mov
sub
xor
lea
lea
shl
rol
imul
movb
rorl
movb
xchg
mov
sub
push
dec
mov
neg
cmp
shrd
xor
jns
dec
inc
lea
rcl
push
pop
mov
ror
verw
cmp
arpl
push
pop
dec
cld
add
mov
push
roll
rorl
sub
xor
roll
xor
rorb
mov
rorb
xor
mov
add
add
shr
push
add
mov
sub
pop
push
add
push
add
call
push
popl
add
popl
popl
mov
add
sub
mov
rorb
nopl
jmp
loop
xor
cmp
dec
loope
hlt
aam
imul
aaa
movl
movl
sub
xchg
mov
push
mov
add
add
sub
rolb
mov
movl
xor
mov
xor
movb
rolb
xor
mov
add
push
add
push
rolb
rorl
xchg
mov
sub
add
xchg
mov
add
shl
call
push
popl
xor
push
add
mov
shr
jo
bsr
verw
verw
mov
dec
push
pop
mov
mov
lea
cmovo
cmp
cld
sub
mov
mov
or
add
aad
nopl
nopl
nopl
add
inc
push
jmp
push
std
repnz
sar
lahf
in
mov
mov
add
daa
push
call
mov
mov
xchg
mov
sub
mov
arpl
push
pop
cmp
xchg
xchg
cld
rorl
sub
xor
mov
mov
movb
xor
movl
movl
mov
xor
mov
push
mov
rolb
rorb
sub
xor
movl
rorb
xor
mov
xor
mov
and
add
xor
roll
mov
rorl
sub
xor
rorb
rolb
movl
xor
movb
rorb
xor
push
push
pop
or
add
or
add
sub
push
mov
and
add
sub
push
mov
add
add
and
add
push
mov
add
mov
xor
add
das
movl
rorb
rorl
add
sub
pop
call
push
popl
or
xchg
mov
sub
js
mov
xor
movswl
jmp
inc
arpl
cmp
cmovbe
ror
inc
inc
inc
cmova
test
btc
push
pop
mov
arpl
cld
test
cld
mov
xor
add
rorb
xchg
mov
sub
xor
push
xor
call
push
popl
and
test
neg
dec
cmp
cld
pop
and
movl
rorl
mov
or
movb
add
cwtd
add
sub
xchg
nopl
sub
sub
jmp
addr16
shl
rol
jmp
adc
mov
cmpb
jne
sub
push
mov
add
push
sub
mov
or
add
add
dec
jne
pop
push
add
mov
mov
mov
mov
mov
cld
roll
xor
movb
xor
movb
mov
rorl
xor
mov
add
mov
and
add
pop
pop
mov
lea
nop
cpuid
lea
xor
cmp
jne
cmp
jne
ret
lea
nopl
jmp
sub
xchg
mov
sub
push
push
add
mov
add
add
add
movl
movb
xchg
mov
add
xor
rorl
rolb
sub
call
push
popl
and
push
mov
add
add
rorb
xchg
mov
sub
roll
rorl
rorb
bndldx
rorl
jmp
sub
mov
mov
mov
push
and
call
push
popl
add
popl
push
sub
mov
sub
and
movb
roll
or
mov
add
push
xor
push
mov
xor
roll
xor
movl
movb
xor
mov
add
add
sub
mov
nopl
rorl
movb
rorl
call
push
popl
add
mov
sub
xchg
mov
add
movl
call
push
popl
and
push
mov
xor
add
add
push
add
mov
xor
add
lods
nopl
mov
call
push
popl
or
sub
xchg
mov
popl
xchg
mov
sub
lea
test
arpl
cmovae
mov
inc
cld
rolb
sub
xor
rorb
roll
xor
rorl
roll
rorb
xor
mov
xchg
mov
add
ret
push
push
xor
call
sahf
mov
push
pop
push
mov
arpl
pop
pop
xor
not
cld
add
mov
mov
mov
and
rorl
or
rorl
movl
add
push
mov
push
dec
inc
push
mov
pop
push
push
jmp
mov
adc
mov
int
xchg
ror
into
out
cld
test
or
or
add
addl
or
jle
sub
mov
sbb
xlat
jmp
les
cs
iret
pop
gs
dec
loope
hlt
sbb
jmp
fidivrs
nopl
sub
sub
xchg
add
sub
push
jmp
mov
push
mov
mov
mov
mov
call
push
popl
add
push
add
popl
call
rorl
and
roll
rorb
or
cmp
jb
jmp
push
pop
xor
test
stc
arpl
xchg
inc
shl
push
pop
mov
verw
push
pop
verw
xchg
xchg
cmp
je
xchg
xor
dec
push
pop
dec
inc
cld
mov
add
push
add
xchg
mov
xor
add
add
mov
add
push
jmp
repnz
sar
lahf
in
jmp
mov
mov
jmp
test
xor
pop
xchg
add
sub
mov
add
xor
movb
rorb
mov
rorb
mov
rorl
rorl
add
rolb
roll
movl
push
push
and
roll
or
rolb
add
sub
pop
lea
mov
rorb
rorb
sub
add
mov
push
push
and
roll
mov
rorb
or
movb
add
xor
add
add
mov
roll
rorb
roll
rorl
xchg
mov
sub
mov
sub
xchg
and
rolb
or
roll
rorb
mov
add
sub
push
mov
movl
mov
sub
xor
movl
xor
movl
roll
roll
xor
mov
add
add
mov
sub
jmp
jl
pop
mov
es
in
add
add
mov
push
push
sub
mov
or
add
sub
add
mov
call
push
popl
add
push
and
mov
rorb
or
roll
add
add
push
push
sub
mov
add
add
and
add
add
xor
rol
call
push
popl
and
mov
sub
not
cmp
lea
std
mov
arpl
cmovo
adc
arpl
test
cmp
xchg
call
aad
xlat
push
mov
pop
pop
mov
verw
inc
cld
push
pop
xor
add
push
push
mov
and
add
and
add
xor
add
xor
sub
mov
call
push
popl
or
popl
sub
mov
btc
xchg
mov
mov
xor
xor
xchg
cld
sub
mov
mov
xor
mov
movl
rolb
xor
mov
xor
mov
add
inc
cmpb
jne
cmp
je
sub
call
push
popl
add
push
push
mov
xor
add
or
add
add
rorb
movl
push
mov
sub
xor
mov
xor
roll
rorb
xor
mov
or
add
bndldx
rorl
mov
rorl
roll
roll
movb
rorl
mov
push
and
push
add
popl
mov
sub
pop
add
inc
call
push
popl
add
sub
mov
mov
cmovl
arpl
xchg
mov
or
cmp
adc
cld
mov
arpl
push
pop
dec
cld
mov
xchg
mov
sub
push
push
add
xchg
mov
add
add
add
add
cmp
jb
mov
add
push
push
mov
add
add
add
push
rolb
rorl
roll
xor
rorl
roll
xor
roll
xor
mov
add
add
add
sub
bndldx
rorb
roll
sub
add
movzwl
call
push
popl
xor
push
add
rol
call
je
mov
rcl
mov
xor
shr
dec
pop
pop
cld
rorl
roll
movb
xchg
mov
sub
push
add
xchg
mov
and
add
mov
add
mov
mov
sub
rorl
push
add
rol
cmove
jno
cmp
xor
cmp
xchg
cmovp
cmovs
mov
push
pop
jbe
xadd
dec
dec
push
pop
xchg
xor
dec
verw
rol
lea
dec
cld
pop
and
roll
rorl
mov
or
roll
movl
rorl
add
add
sub
xchg
mov
call
rorl
and
rolb
or
xor
mov
mov
mov
xor
not
arpl
std
cld
roll
rorl
xor
mov
movb
movb
xor
mov
xor
mov
add
movl
xor
rorl
xor
mov
mov
rorb
xor
mov
add
pop
jmp
ret
inc
jns
pop
insb
xor
pop
sub
test
pushl
decl
push
xchg
pop
mov
pop
pop
leave
add
add
lea
ret
lea
push
mov
add
add
inc
sub
sub
add
lea
sub
add
lea
sub
lea
push
push
push
nop
jmp
adcb
test
or
add
cmp
jle
sub
mov
mov
add
movl
call
push
popl
add
roll
mov
mov
sub
xor
rorl
xor
mov
rorl
xor
rorl
xor
mov
xor
rorl
xor
mov
add
sub
cmovno
arpl
mov
cmp
rcr
mov
lea
mov
mov
lea
xchg
rcr
verw
cmp
dec
xadd
cld
rorl
sub
xor
movb
mov
rorl
xor
rorl
roll
rorb
xor
mov
rorl
rolb
push
pop
or
add
mov
test
je
add
dec
sub
sub
sub
mov
mov
rolb
xchg
mov
sub
mov
sub
mov
add
sub
xchg
mov
mov
add
add
xchg
mov
push
push
pushl
sub
xchg
mov
or
add
sub
push
or
xor
cmova
push
pop
or
mov
not
xchg
verw
movzbl
not
imul
cmp
cld
mov
xchg
mov
sub
and
rolb
roll
or
rorb
add
call
call
push
popl
or
rorb
sub
xor
rorb
rorb
xor
movl
rorb
mov
xor
rorl
rorl
sub
xor
movl
xor
roll
rolb
rorb
xor
mov
sub
push
pop
mov
mov
neg
rcl
xchg
mov
ror
nop
mov
cmp
mov
test
xchg
cmovae
xchg
verw
xchg
cld
mov
xor
add
push
sub
mov
and
add
call
mov
movb
rorb
roll
sub
xor
movl
xor
rorb
movl
rorl
xor
mov
xor
add
sub
push
add
nop
call
cmpsl
push
mov
verw
inc
inc
pop
pop
inc
test
mov
cmp
mov
lea
mov
mov
push
pop
dec
cld
roll
sub
xor
movb
mov
roll
xor
movl
mov
rorb
xor
mov
add
mov
test
jne
push
push
sub
sub
push
jmp
cmpsl
jmp
push
std
repnz
sar
lahf
in
mov
jmp
mov
test
xor
rolb
xor
lea
sub
add
sub
add
sub
sub
lea
pushl
add
mov
roll
roll
mov
add
mov
verw
inc
xchg
shl
lea
verw
sub
lea
arpl
lea
std
cld
mov
xor
add
add
mov
call
add
sub
push
jmp
adc
dec
outsl
jl
pop
mov
or
adc
mov
cmpb
jne
jnp
icebp
jmp
push
inc
jmp
sub
scas
dec
fsub
mov
roll
xchg
lea
jmp
pop
add
add
push
mov
pop
call
mov
movl
nop
mov
sub
mov
movl
rolb
rorl
sub
xor
rorb
xor
movl
mov
xor
xchg
mov
add
sub
test
test
xor
verw
mov
stc
mov
inc
cld
pop
and
movl
roll
or
mov
rorb
add
mov
test
jne
mov
lea
add
add
mov
sub
xchg
mov
push
popl
call
mov
and
roll
rorl
roll
or
arpl
arpl
cmp
arpl
arpl
nop
cld
push
add
xchg
mov
and
add
push
add
mov
or
add
mov
lea
add
add
test
je
movl
call
push
popl
xor
rorb
movb
rorl
call
rorb
mov
roll
and
rolb
rorl
movl
or
lea
jno
inc
xor
cmovne
shr
arpl
xchg
cmp
cld
mov
and
add
push
rorl
rorb
xchg
mov
sub
xor
add
test
jne
rorb
rorb
roll
rorb
rorl
call
push
popl
add
push
mov
add
add
add
add
mov
roll
sub
xor
mov
movb
rolb
xor
mov
mov
rorl
xor
push
sub
mov
or
add
sub
push
add
mov
sub
pop
add
roll
movb
jmp
in
and
pushf
movsl
jp
nopl
rorl
movl
rolb
roll
movl
roll
sub
call
push
popl
add
push
and
rorl
or
rorb
rorb
add
add
mov
mov
mov
sub
xor
rorl
roll
rolb
xor
rorb
mov
rorl
xor
mov
inc
inc
push
sub
sub
xchg
push
mov
add
xor
add
sub
push
mov
or
add
add
pop
rorl
roll
roll
add
sub
rorb
nop
and
push
pushl
add
mov
push
push
pop
xchg
mov
std
push
pop
mov
cmp
mov
arpl
verw
not
mov
not
arpl
arpl
push
pop
arpl
cld
rorl
rorl
rorl
sub
xor
rorb
xor
movb
rorl
xor
mov
mov
and
add
push
push
add
mov
sub
popl
push
or
shl
mov
cmp
arpl
cmp
verw
push
pop
cmovnp
mov
sub
xor
push
pop
arpl
cld
roll
movb
xchg
mov
sub
push
push
rorb
mov
xor
rorl
rorb
xor
roll
rorl
movl
xor
mov
add
and
add
and
add
pushl
call
rorb
movl
rorb
and
movb
or
push
add
xchg
mov
sub
pop
call
push
popl
add
push
movb
sub
xor
movb
rorb
xor
movl
xor
mov
add
xchg
mov
add
rorb
roll
mov
rorl
roll
movl
nopl
call
push
popl
add
push
push
push
pop
or
add
and
add
sub
push
push
mov
xor
roll
rolb
xor
rorb
mov
xor
mov
add
add
add
xor
add
call
push
popl
add
push
xchg
mov
add
add
roll
mov
rolb
xor
movb
xor
rorb
roll
xor
mov
add
call
call
pop
jmp
dec
loope
hlt
sbb
fidivrs
rorb
mov
add
sub
jmp
lea
nop
mov
lret
test
push
jmp
push
jmp
std
repnz
sar
lahf
in
mov
mov
jmp
test
xor
imul
stos
or
add
fucomp
or
sahf
jg
xchg
stos
fwait
cmp
jbe
test
jne
nopl
rorb
roll
jmp
in
add
push
dec
dec
outsl
jl
pop
mov
dec
and
orl
rorb
rolb
add
sub
xchg
add
mov
sub
mov
sub
roll
xchg
mov
sub
push
pushl
call
add
sub
xor
nopl
lea
sub
add
add
add
push
mov
pop
push
call
and
nopl
add
add
sub
mov
sub
sub
dec
inc
nopl
add
add
inc
dec
jmp
dec
jmp
out
aam
jb
inc
jns
pop
insb
xor
jmp
push
mov
mov
mov
mov
mov
pop
lea
cmp
jne
sub
xchg
mov
call
push
popl
xor
add
xchg
cmovne
mov
test
arpl
xor
test
test
bsf
test
push
pop
cmp
cld
rorb
mov
mov
xchg
mov
sub
xchg
mov
add
push
call
rorl
mov
mov
and
rorl
roll
or
push
xor
mov
rol
test
jns
inc
not
verw
inc
cld
add
xchg
mov
add
mov
mov
sub
xchg
mov
call
rorl
mov
mov
test
push
pop
xor
push
pop
cmp
xchg
inc
test
cld
movl
rorl
xor
rolb
roll
xor
mov
roll
roll
xor
mov
add
add
mov
dec
jmp
xor
shlb
int3
shl
rorb
roll
call
push
popl
or
push
and
push
pop
jmp
jb
mov
arpl
cmp
mov
push
pop
rcr
bsr
neg
jbe
cmp
xchg
cmovle
cmovge
cmp
dec
arpl
mov
cmove
push
pop
inc
cld
push
add
xchg
mov
or
add
pop
mov
mov
mov
lea
sub
sub
sub
add
xchg
add
call
push
popl
xor
mov
rorb
rorb
call
mov
movl
and
rorl
mov
rorl
or
neg
cmovno
arpl
lea
xor
cmp
arpl
cmp
mov
cmp
cld
mov
or
add
pop
mov
add
pop
mov
rorb
mov
sub
xor
mov
rorl
xor
mov
xor
push
add
mov
and
add
sub
call
push
popl
and
xchg
push
pop
lea
test
mov
not
clc
mov
push
pop
arpl
inc
mov
neg
dec
cmovnp
jo
arpl
neg
inc
jo
arpl
repz
rorb
roll
xor
rorb
roll
xor
movl
roll
movb
xor
mov
add
push
roll
movb
movl
add
mov
xor
add
jmp
push
pushl
rorl
call
push
popl
and
add
mov
verw
lea
mov
mov
cmovl
mov
lea
xor
mov
inc
cmove
dec
cld
movb
movb
movb
xchg
mov
sub
mov
xor
add
call
sub
xor
sub
add
xchg
sub
push
mov
mov
mov
mov
mov
mov
mov
pop
push
sub
add
call
rorb
roll
mov
push
mov
rolb
rolb
xchg
mov
sub
sub
xchg
mov
add
call
push
popl
add
push
push
rorb
xchg
mov
add
add
add
add
xchg
mov
add
sub
mov
sub
mov
add
add
xchg
mov
call
mov
addl
nopl
sub
add
xchg
jmp
mov
mov
mov
sub
push
add
jno
arpl
jmp
mov
rol
not
mov
neg
verw
mov
test
test
push
pop
cmovo
bsf
arpl
cmp
cld
sub
mov
mov
add
mov
xchg
mov
sub
push
not
mov
dec
shl
cld
mov
add
mov
add
add
mov
jmp
xchg
xchg
sub
add
xchg
add
sub
add
inc
add
add
pop
pop
pop
sub
xchg
mov
push
popl
push
push
mov
xor
add
and
add
add
push
sub
mov
xor
add
rorb
rolb
call
push
popl
or
push
mov
add
sub
add
xchg
mov
leave
mov
rolb
jmp
stos
ret
sub
add
xor
push
push
mov
sub
inc
add
add
lea
push
jmp
in
push
mov
mov
mov
mov
mov
pop
mov
mov
push
xor
add
add
jmp
andl
add
jne
xchg
inc
sub
add
add
mov
mov
add
rorl
rorl
roll
roll
push
or
push
add
xchg
mov
sub
push
mov
roll
xchg
mov
sub
and
add
sub
xchg
xchg
mov
add
sub
mov
add
mov
or
add
jmp
enter
je
shl
iret
int
jmp
cmp
jbe
cmp
jae
pop
push
or
push
and
xchg
push
pop
lea
mov
push
pop
lea
cmovle
ja
verw
mov
inc
push
pop
cld
xchg
mov
add
mov
and
add
pop
push
mov
mov
mov
mov
mov
mov
mov
pop
dec
add
sub
sub
bndldx
sub
sub
add
sub
push
jmp
out
aam
jb
inc
jns
pop
insb
xor
add
add
and
pushf
movsl
jp
mov
inc
pop
xchg
sub
add
jmp
push
dec
adc
negb
add
add
or
push
add
jmp
mov
test
mov
xor
neg
verw
imul
dec
mov
push
pop
cld
add
xchg
mov
mov
or
add
ret
mov
cmp
jne
nop
roll
movl
rolb
rorl
xchg
mov
sub
push
push
mov
add
add
and
add
add
mov
add
call
push
popl
xor
push
roll
roll
rorl
pop
sub
and
rolb
mov
or
rorb
mov
movl
add
rorl
roll
nop
pop
pop
ret
xchg
mov
sub
rorb
push
add
add
mov
popl
inc
or
jno
not
lea
push
pop
test
push
pop
test
jne
lea
mov
mov
push
pop
mov
inc
arpl
xchg
clc
mov
inc
xchg
xor
cld
mov
and
add
mov
add
call
mov
rorb
rorb
push
or
mov
sub
sub
mov
add
jmp
sub
mov
push
rorb
jmp
mov
and
decl
add
add
add
xchg
mov
sub
not
xor
mov
xor
neg
dec
cld
pop
add
xchg
mov
mov
add
add
jmp
jno
xlat
les
cs
pop
gs
jmp
dec
loope
roll
roll
sub
xor
rorb
rolb
xor
movb
rolb
mov
xor
mov
mov
sub
roll
mov
xor
add
add
xor
push
lea
jmp
aad
fstpt
mov
and
inc
push
push
push
pushl
inc
dec
nop
dec
add
pushl
push
push
and
mov
mov
cmovge
not
mov
and
push
pop
xchg
push
pop
test
inc
test
not
cld
sub
mov
add
mov
add
rorb
movl
mov
sub
sub
xchg
mov
rolb
xor
roll
xor
roll
rorl
mov
xor
mov
add
sub
dec
test
ror
jno
xor
dec
cmovb
test
mov
lea
verw
cld
mov
add
add
add
xchg
mov
push
rolb
movb
mov
push
xor
push
add
xchg
mov
sub
and
roll
or
rorl
rorb
rorb
add
push
and
push
push
pop
and
add
add
add
xchg
mov
push
jmp
out
sbb
cli
stos
or
push
add
push
jmp
dec
xchg
stos
fwait
cmp
jbe
in
or
adc
dec
outsl
jl
jmp
pop
mov
es
sub
sub
sub
sub
sub
sub
call
xchg
sub
sub
add
lea
add
add
bndstx
nopl
push
mov
pop
lea
xchg
sub
sub
lea
xchg
lea
xchg
xchg
dec
inc
sub
add
xchg
lea
add
add
xchg
add
sub
lea
call
add
inc
rorb
sub
xor
roll
xor
rorl
mov
roll
xor
movl
mov
sub
xor
roll
mov
xor
rorl
xor
mov
sub
push
add
jno
xchg
mov
repnz
jns
lea
not
bsr
mov
xchg
xchg
inc
test
movswl
cld
push
sub
mov
xor
add
xchg
mov
add
add
sub
mov
call
push
popl
xor
mov
xchg
xor
mov
not
mov
and
mov
inc
ror
dec
bts
arpl
xchg
inc
mov
bsf
cld
push
sub
mov
add
add
movb
sub
xor
rolb
mov
movb
xor
rolb
rolb
roll
xor
mov
cmp
jne
push
pop
roll
rolb
call
rorb
roll
mov
push
mov
xor
add
add
pop
push
add
push
mov
roll
mov
and
movl
roll
or
rorb
rorl
add
sub
push
mov
xor
add
or
add
nopl
rorb
movl
roll
movl
roll
rorl
movl
add
sub
mov
push
and
call
push
popl
or
xchg
cmp
lea
not
mov
cmp
verw
dec
cld
add
xchg
mov
movl
mov
xchg
mov
sub
add
push
pop
add
sub
push
jmp
out
cld
test
or
add
addl
pop
inc
add
mov
xor
ror
mov
movl
mov
movl
mov
movl
push
xor
push
and
roll
or
roll
movl
add
add
rorl
movb
rorl
xor
roll
xor
rorl
movb
xor
mov
add
call
push
popl
add
push
sub
mov
sub
pop
add
push
push
mov
add
sub
pop
rorb
roll
mov
nop
inc
dec
jne
mov
nopl
push
push
push
movb
mov
rolb
rorb
mov
sub
xor
movb
xor
rorl
rolb
xor
push
push
movl
rorl
rorl
xor
rorb
rorl
xor
movl
rorb
xor
mov
add
xor
add
xor
add
sub
call
movl
and
mov
movb
roll
or
mov
cmp
arpl
xchg
cmp
mov
lea
lea
cld
pop
push
rorl
xchg
mov
sub
add
add
call
push
pop
roll
rorb
mov
rorb
xchg
mov
sub
push
push
mov
and
add
add
add
add
push
xchg
mov
add
xor
add
sub
nopl
mov
rorb
sub
xchg
xchg
mov
add
sub
push
mov
xor
add
sub
sub
mov
push
add
push
and
popl
push
and
rolb
movl
rorl
or
roll
movb
add
add
push
rorb
movb
rolb
sub
xor
mov
rolb
rorb
xor
roll
movb
xor
mov
and
add
cmp
je
push
lea
add
add
lea
push
push
push
push
add
push
add
mov
inc
cld
rorl
movb
xor
rorl
xor
mov
rorl
movb
xor
mov
add
sub
mov
push
mov
sub
call
push
popl
xor
jb
jb
shl
cmovns
bt
mov
shr
cmp
clc
cld
push
mov
and
add
add
add
push
xchg
mov
add
and
add
push
add
mov
xchg
mov
sub
arpl
verw
lea
test
ja
verw
and
rcr
lea
push
pop
mov
mov
arpl
cld
add
xchg
mov
push
sub
mov
and
add
push
call
call
push
xor
push
mov
and
add
sub
sub
mov
xchg
mov
sub
push
mov
add
add
add
rorl
add
xchg
mov
add
mov
add
sub
add
lea
push
jmp
mov
push
and
fstps
fwait
cmp
jbe
or
adc
dec
outsl
jl
pop
mov
add
adc
or
mov
or
icebp
jmp
push
inc
sub
scas
dec
fcompl
js
xchg
push
jmp
xchg
pop
nop
add
add
add
jmp
aas
or
push
clc
shrl
add
add
dec
and
mov
nopl
mov
rorl
rorb
call
push
popl
and
push
movb
xor
rolb
rolb
xor
mov
rorl
xor
mov
add
add
mov
or
add
rorl
sub
xor
mov
roll
rorl
xor
movl
movb
mov
xor
mov
mov
sub
rorl
sub
xor
movl
mov
xor
movl
xor
mov
rolb
roll
rorl
rorl
mov
roll
mov
rorl
rorl
rorb
mov
rorl
movb
call
rolb
and
mov
roll
or
mov
add
sub
mov
sub
pop
xchg
mov
sub
call
roll
and
movl
rorb
or
xchg
xor
arpl
verw
mov
cmp
not
cmp
cld
mov
movb
mov
sub
xor
mov
rolb
roll
xor
roll
rorb
xor
mov
sub
mov
mov
mov
xor
sub
add
push
jmp
jo
outsb
setl
or
inc
pop
xor
shlb
push
dec
adc
negb
ljmp
add
add
add
call
push
popl
and
sub
xchg
mov
mov
mov
dec
cld
mov
rorl
xchg
mov
sub
xchg
mov
add
inc
dec
jne
push
jmp
out
cmp
lea
rorb
sub
xor
roll
roll
xor
rorb
rolb
xor
mov
push
push
sub
mov
xor
add
add
xchg
mov
add
push
xor
push
sub
mov
sub
push
push
roll
rorl
xchg
mov
sub
or
add
add
add
bndstx
call
push
popl
and
push
mov
add
sub
push
push
xchg
mov
add
xor
add
or
add
push
xor
mov
add
rorl
rorb
rorl
and
roll
rolb
or
mov
add
push
push
push
movb
push
add
xchg
mov
sub
popl
call
push
popl
and
popl
sub
mov
lea
inc
cld
mov
add
push
roll
roll
xchg
mov
sub
or
add
push
jmp
hlt
sbb
test
xchg
rorb
add
sub
push
call
call
bndstx
lea
add
push
mov
mov
mov
pop
push
mov
pop
call
lea
xor
lea
add
add
lea
cmp
je
xor
jmp
stc
ds
in
mov
mov
ljmp
lea
lock
cld
push
jmp
pop
lea
xor
push
mov
mov
mov
pop
lea
lea
mov
mov
mov
sub
sub
sub
sub
jmp
adc
in
add
sub
inc
push
jmp
pop
mov
es
mov
cmpb
xchg
push
jmp
icebp
push
inc
sub
scas
dec
fsub
mov
popa
xchg
or
popf
adc
loopne
pop
aas
jmp
or
push
clc
shll
aaa
movsb
or
push
jmp
das
pop
jmp
sbb
inc
out
aam
jb
inc
push
jmp
insb
xor
xchg
add
add
sub
add
bndldx
add
add
add
sub
sub
sub
add
sub
sub
xchg
cmp
jne
add
push
jmp
div
fs
sub
add
sub
sub
xchg
sub
add
add
add
add
mov
popl
lea
sub
add
lea
push
jmp
sbb
xlat
les
cs
pop
cmp
jbe
add
sub
xchg
mov
mov
sub
movzwl
not
xchg
cld
roll
movl
xchg
mov
sub
rorb
movb
xor
rolb
xor
roll
mov
rorb
xor
mov
add
mov
cmp
jne
mov
movb
mov
rorl
rorl
movl
jmp
xchg
add
mov
sub
xchg
inc
add
xchg
sub
sub
sub
sub
push
lea
xchg
lea
xor
pop
lea
push
mov
mov
mov
pop
add
add
sub
nop
add
push
add
rorl
roll
sub
xor
movl
rorl
movb
xor
mov
mov
xor
mov
xor
jno
movzbl
mov
mov
sub
shr
mov
cmp
neg
xchg
verw
lea
mov
verw
cld
pop
rolb
roll
rorb
xchg
mov
sub
push
call
push
popl
and
mov
sub
push
pop
neg
push
pop
inc
cld
xchg
mov
add
movb
sub
xor
rorb
rorl
roll
xor
rorb
movl
xor
mov
pop
inc
dec
nop
sub
add
sub
mov
popa
push
xor
call
push
popl
or
bts
mov
xchg
dec
bsr
xchg
dec
jmp
cmp
xor
lea
cld
sub
mov
rorb
rorb
roll
xchg
mov
sub
call
add
jmp
call
push
popl
and
call
push
popl
and
jne
test
push
pop
movzwl
mov
or
push
pop
shl
verw
bsf
cmp
xor
verw
cmove
arpl
xchg
xor
repnz
xchg
mov
add
mov
add
push
rorl
rorl
mov
movl
rorl
sub
xor
movb
xor
roll
movb
xor
mov
call
push
popl
xor
popl
push
jb
std
mov
dec
cld
xchg
inc
push
pop
xadd
stc
cmp
not
xor
std
dec
cld
add
xchg
mov
rorl
rorb
movl
sub
xor
roll
rorb
rorl
xor
rorb
xor
mov
push
sub
xchg
mov
sub
xchg
mov
add
add
sub
test
jno
mov
verw
repnz
push
pop
mov
xor
lea
cmp
neg
cmp
stc
push
pop
xor
not
mov
cmovge
cmovl
inc
arpl
cld
rorl
movb
xchg
mov
sub
rolb
rorl
movl
xchg
mov
sub
push
lea
push
pop
sub
call
push
popl
add
sub
xchg
mov
not
rcl
cmp
cld
xchg
mov
add
mov
add
add
mov
push
pop
add
call
roll
and
roll
or
push
mov
and
roll
rorb
or
roll
mov
rorb
add
sub
mov
and
add
add
push
pop
movb
sub
xor
rorl
rorb
roll
xor
rorb
rolb
xor
add
mov
sub
call
push
popl
add
push
pop
neg
xor
inc
dec
lea
ja
xor
btr
arpl
xor
btc
inc
rol
neg
mov
ja
verw
test
bt
arpl
stc
not
mov
push
pop
cld
and
rorb
or
roll
add
movl
roll
xor
rolb
xor
rorl
rorl
rorl
xor
mov
add
xor
call
push
popl
and
call
push
popl
add
js
inc
verw
jmp
xor
dec
xor
mov
mov
test
inc
cld
push
xchg
mov
add
or
add
xchg
mov
add
dec
lea
add
add
add
xor
ror
push
xor
push
xchg
test
xor
neg
cmp
mov
jmp
sub
inc
bsf
cld
rorb
xor
mov
movb
xor
roll
rorl
movl
xor
mov
add
mov
xor
add
ror
sub
xor
push
jmp
cltd
jmp
pop
aas
or
or
shll
aaa
movsb
or
pop
sub
sub
push
mov
mov
mov
pop
sub
xchg
nopl
xchg
add
sub
push
mov
mov
mov
pop
add
inc
xor
sub
sub
lea
xor
ror
ror
sub
xchg
mov
add
mov
mov
mov
jo
xor
inc
adc
verw
mov
mov
test
xchg
cld
cld
push
add
mov
add
add
add
xchg
mov
sub
ror
ror
jmp
jp
mov
inc
pop
xor
jmp
mov
push
dec
jmp
adc
mov
mull
xchg
ror
into
out
pop
xor
add
xchg
xor
xor
ror
sub
xchg
add
xchg
mov
sub
push
or
xchg
btr
push
pop
xor
arpl
cld
rorl
pop
mov
roll
movl
xchg
mov
sub
sub
movl
sub
xor
movl
mov
roll
xor
movl
roll
xor
mov
push
mov
add
add
push
mov
and
add
xor
add
sub
sub
sub
add
add
sub
add
nopl
lea
nopl
push
mov
pop
ror
sub
xchg
mov
and
add
sub
mov
add
and
movb
rorb
or
movb
roll
add
call
mov
rorb
rorb
and
movl
rorl
rorl
or
mov
sub
and
movb
or
rorl
rolb
mov
add
rolb
mov
jmp
js
sbb
test
enter
and
jmp
in
add
add
xor
rorb
rorb
xor
roll
xor
mov
call
mov
movb
mov
push
pop
jno
arpl
test
xchg
mov
shr
xor
inc
repnz
cmovne
movsbl
shl
mov
mov
not
cmp
inc
cld
sub
mov
sub
mov
ror
call
push
popl
or
roll
sub
xor
movb
xor
movl
rorb
movl
xor
movb
rorb
movl
sub
xor
rorb
roll
rorl
xor
rorl
roll
xor
mov
sub
lea
mov
xor
dec
xchg
mov
bt
inc
inc
cld
mov
xor
add
and
rorb
rorb
or
movl
rolb
mov
add
xor
sub
xor
call
push
popl
and
push
push
mov
add
xor
add
add
add
mov
call
movl
movl
and
roll
rolb
or
mov
sub
mov
or
add
call
mov
movb
mov
push
rorl
mov
xor
add
add
mov
xor
mov
xor
mov
roll
rorb
xor
mov
add
sub
mov
roll
roll
sub
mov
push
mov
rorl
rorl
xor
rorb
rorl
movb
xor
roll
xor
mov
add
sub
xchg
mov
add
mov
sub
mov
add
mov
add
xor
dec
jne
pop
jmp
mov
ret
