jno
and
push
push
rolb
jg
push
add
push
lock
add
in
add
add
or
pop
movups
jp
lock
push
loopne
mov
cmpxchg
inc
or
add
or
add
or
add
add
jo
icebp
add
add
or
add
push
jo
mov
push
and
sbb
add
pushf
add
add
pusha
add
push
inc
add
push
add
dec
pop
pusha
add
add
add
pusha
add
push
mov
mov
xor
sti
add
add
or
loopne
pop
add
add
or
rolb
or
add
add
pusha
add
or
add
pusha
add
or
and
movsl
or
popf
add
add
jecxz
and
push
or
add
wrmsr
add
add
add
add
inc
or
add
add
add
push
xor
dec
add
add
or
add
mov
lods
or
add
or
and
or
adc
movsl
add
add
or
add
or
rolb
inc
push
inc
add
loopne
sbb
and
hlt
cmpxchg
adc
mov
add
addb
jo
add
add
add
adc
add
mov
add
adc
add
mov
add
adc
add
mov
add
leave
add
add
add
loopne
mov
or
mov
pop
loopne
call
add
add
or
repnz
push
add
push
add
loopne
cmp
add
or
test
push
add
rolb
fadds
pusha
add
or
add
mov
add
add
inc
or
add
adc
push
or
push
add
add
add
add
push
pusha
add
add
or
fisttpll
rolb
insl
add
add
add
arpl
push
add
or
mov
sahf
or
add
xor
xchg
add
add
pusha
add
lock
loopne
pop
add
add
or
pusha
add
push
addb
add
loopne
pop
add
add
add
add
rolb
add
add
add
data16
add
pop
rolb
adc
add
sub
adc
mov
pop
add
push
mov
push
popl
sbbw
xor
push
sub
xor
popl
mov
call
andl
test
jne
addl
ret
push
popl
push
push
mov
add
popl
mov
orl
push
addb
xorb
mov
push
popl
pusha
push
popl
call
push
popl
mov
orb
xorl
push
xorl
movb
nop
xorl
push
popl
movl
pushl
popl
xorl
nop
push
xor
sub
popl
mov
addl
sbbl
andb
push
sbbl
call
push
popl
pushl
popl
cmpl
je
push
xor
mov
popl
mov
cmpl
je
push
mov
xor
popl
mov
pushl
popl
cmpl
je
push
popl
xorb
cmpl
jne
subb
call
push
sub
xor
popl
mov
addl
ret
addl
jmp
push
add
xor
popl
mov
xorw
xor
push
popl
mov
push
popl
movb
shl
pushl
popl
mov
push
popl
cmp
jne
push
xor
add
popl
mov
push
popl
call
orb
popa
movl
xorb
call
push
and
xor
popl
mov
push
sbbb
nop
subl
xorw
movl
xorw
push
popl
nop
push
sub
add
popl
mov
addl
push
popl
push
subw
call
push
popl
push
push
rol
mov
add
xchg
sbbl
mov
push
sub
mov
popl
mov
push
xor
or
popl
mov
shl
addl
push
movb
pushl
popl
xor
push
popl
push
xorw
push
popl
call
push
popl
orw
push
sbbb
push
popl
mov
push
popl
sbbl
push
subl
movl
jmp
push
popl
pop
andl
mov
push
popl
push
push
popl
push
pushl
popl
push
movb
subl
mov
andl
sbbl
mov
addl
sbbl
rep
push
or
add
popl
mov
pop
pushl
popl
pushl
popl
pop
push
push
mov
xor
pop
push
inc
dec
shr
shl
mov
sub
xchg
orw
pushl
popl
xor
push
popl
push
popl
jmp
addl
andl
sub
push
popl
mov
subw
movl
sub
push
popl
push
popl
sub
xorl
mov
andb
sbbl
sub
push
popl
or
jne
push
popl
xorl
add
push
popl
xorb
jmp
andb
mov
push
popl
subb
shr
push
popl
push
popl
shl
subb
mov
push
add
add
popl
mov
jmp
sbbw
push
or
sub
popl
mov
sub
addw
mov
xorw
push
popl
cmp
jne
push
and
or
popl
mov
push
popl
mov
orl
push
popl
add
push
popl
orb
cmpw
jne
push
popl
ret
push
or
mov
popl
mov
push
movl
xorl
xor
pushl
popl
pushl
popl
and
sbbb
andb
mov
push
add
or
popl
mov
pushl
popl
and
pushl
popl
mov
push
popl
addl
and
push
popl
push
mov
add
popl
mov
mov
push
popl
and
push
popl
pushl
popl
lods
pushl
popl
and
movw
addb
mov
push
xor
or
popl
mov
sbbl
pop
xorw
pushl
popl
ret
push
popl
push
add
or
popl
mov
push
addl
pushl
popl
mov
push
mov
add
popl
mov
sbbb
add
push
add
add
popl
mov
push
push
or
mov
popl
mov
push
push
popl
pushl
popl
push
movw
push
popl
push
andb
push
addb
mov
push
popl
mov
push
popl
addl
add
push
add
mov
popl
mov
pushl
addl
push
popl
mov
push
popl
andw
add
push
and
and
popl
mov
sbbb
add
push
xor
xor
popl
mov
pushl
popl
mov
movw
push
xor
sub
popl
mov
add
orl
orl
xor
push
xor
add
popl
mov
addw
lea
sbbl
push
or
add
popl
mov
mov
xorl
xorb
add
andl
pushl
popl
mov
push
popl
xor
sbbb
rol
orw
xor
pushl
popl
subw
inc
push
popl
cmpb
jne
push
popl
pushl
popl
cmp
je
andl
inc
sbbb
cmp
jb
push
mov
and
popl
mov
andl
mov
movl
add
push
popl
movzwl
push
or
sub
popl
mov
mov
push
popl
add
sbbl
push
popl
mov
orw
pushl
popl
add
push
popl
pop
andb
cmp
jbe
push
popl
push
popl
cmp
jae
sbbl
pushl
push
mov
xor
popl
mov
pushl
push
or
xor
popl
mov
push
popl
push
push
popl
addb
nop
sbbl
movl
pushl
popl
subw
nop
push
popl
push
popl
addl
push
popl
push
mov
sub
popl
mov
pushl
push
popl
push
popl
call
push
and
sub
popl
mov
call
push
or
mov
popl
mov
push
popl
pop
xorl
pop
pushl
popl
push
add
xor
popl
mov
pop
orl
pop
andw
pushl
popl
pop
orl
leave
xorl
addb
ret
addw
call
mov
cli
cmc
lds
insl
es
fs
ds
fisubrl
mov
sahf
mov
sub
hlt
ja
sbb
push
cmpb
mov
arpl
push
imul
daa
push
inc
enter
cmc
andb
lock
cmp
rol
pop
jns
out
mov
dec
sub
pop
fs
leave
mov
inc
cmpxchg
cmp
lds
fcom
mov
add
popa
push
push
roll
sbb
les
hlt
ljmp
jmp
nop
pop
inc
mov
push
jp
and
jne
xor
fbld
mov
add
shlb
xchg
inc
mov
push
jp
and
test
insb
fsubr
fisubs
repz
out
mov
ja
jmp
mov
push
sub
out
popa
add
adc
dec
push
in
ljmp
inc
imul
pop
out
pusha
scas
mov
shlb
gs
xchg
cmp
sub
sbb
insl
cmpsb
push
jne
lds
call
out
popa
adc
xor
repnz
fisubrl
dec
sbb
xchg
std
fldenv
ret
test
ja
cmpsl
cwtl
fnstcw
adc
and
scas
mov
cwtl
inc
lock
cmp
pop
dec
sub
pop
fs
xchg
rcll
sbb
or
jmp
jmp
inc
jo
ljmp
adc
cmc
lret
adc
lahf
push
arpl
adc
negb
xlat
lcall
pop
bound
cs
add
idivb
jecxz
cli
dec
out
sub
mov
adc
test
in
out
jae
psubsb
mov
loopne
inc
cmp
add
push
dec
xor
fsubl
xor
xchg
xor
inc
adc
cmp
sub
fs
push
inc
mov
fwait
loope
ds
mov
xor
jl
ficomps
scas
addr16
pop
sub
scas
cmp
jecxz
mov
repz
pop
out
jo
push
inc
mov
fs
enter
jae
repnz
mov
sub
sub
das
lahf
mov
dec
int
sarb
jns
fcmovnb
insl
sub
in
push
dec
out
adc
dec
mov
mov
movl
js
pop
out
sub
xchg
inc
dec
lock
adc
cmp
mov
das
repnz
xchg
int3
push
inc
xchg
scas
fiadds
dec
aad
mov
mov
or
jmp
pop
jo
ja
dec
cmc
sbb
dec
fcmovnb
sub
jae
mov
popf
push
iret
fs
cmp
push
cmc
or
leave
sti
popa
das
lcall
adcl
jp
cmp
scas
in
dec
adc
test
sub
push
cmp
fsubrs
in
cmpsb
stos
inc
jb
mov
push
imul
xchg
xor
adc
xchg
scas
fmulp
out
adc
xchg
jle
mov
ror
push
inc
add
filds
push
xchg
xchg
pushf
xor
xchg
sub
jmp
icebp
mov
mov
push
pop
lahf
adcb
mov
mov
cli
fdivrl
jp
jge
mov
adc
repz
rcr
sti
push
cs
mov
pop
lds
cmp
mov
imul
mov
mov
jl
jge
cmc
imul
imul
xor
xchg
adc
pop
out
mov
push
cld
scas
lock
push
xor
pop
mov
in
sbb
fists
cmc
cmp
aam
sarl
bound
pop
mov
out
popa
fucom
cmp
dec
dec
out
and
cli
inc
mov
adc
ss
loope
or
imul
mov
ljmp
out
sub
mov
mov
imul
ljmp
cltd
push
mov
jecxz
sub
addr16
mov
push
jp
and
mov
not
fisubs
enter
sub
outsl
jmp
imul
jo
cs
es
pop
jbe
jle
pop
das
push
outsb
in
xchg
lds
enter
addr16
sarb
push
aas
sbb
cli
pop
lcall
cmp
lea
popa
fstpl
popa
sub
jmp
sub
fcmovu
ja
push
xor
lock
jmp
repz
jb
loop
lods
dec
daa
jl
dec
push
fs
xor
imul
lahf
clc
jl
fdivr
ja
push
sbb
fldenv
jb
test
aam
popa
push
dec
mov
fcomi
fisttpll
pop
in
int3
lret
test
hlt
repnz
stos
xor
dec
test
sbb
lods
dec
jno
or
mov
mov
imul
ror
movsb
mov
inc
in
out
outsl
adc
jecxz
fisttpll
lock
inc
mov
out
jp
and
lods
int3
mov
movsl
dec
int3
test
and
dec
in
sub
push
sbb
jnp
inc
lds
psllq
cld
push
pop
aaa
mov
push
das
fwait
mov
push
fisttpll
sahf
sub
cli
xor
out
pop
insb
es
jae
out
stos
push
daa
pop
out
popa
push
add
icebp
xor
xchg
fdivr
pop
rcll
pop
inc
aad
pop
aas
mov
xchg
fstpt
sbb
cmc
dec
or
popf
jecxz
nop
in
adc
ds
and
xor
pop
movsl
mov
xor
sub
sub
icebp
sub
sub
jo
pop
push
insl
ja
inc
sbb
add
test
out
jmp
push
mull
ljmp
sub
in
mov
xor
push
and
pop
or
inc
pop
sub
test
sbbb
push
mov
push
mov
jmp
test
stos
or
in
daa
js
pop
dec
scas
scas
pop
outsl
arpl
push
rcrl
jge
out
xlat
push
push
cmp
sub
xorl
and
xchg
pop
movsl
push
xacquire
cltd
push
adc
adc
add
sbb
adc
push
push
or
cmp
pop
push
mov
cmpsb
pop
push
and
or
add
lods
dec
xchg
cmpsb
fidivs
inc
jmp
cltd
popa
adc
mov
cltd
inc
add
sbb
iret
out
and
push
jl
push
sbb
xchg
xchg
jne
pop
call
out
push
stc
adcb
xlat
sub
imul
pusha
insl
aam
and
adc
popa
fnsave
imul
enter
sub
add
data16
push
dec
ret
dec
mov
es
out
ficoms
dec
or
xchg
rcr
adc
cmp
fnstenv
aas
out
xor
nop
cwtl
push
icebp
lahf
adc
loop
ds
rcr
lret
icebp
arpl
popa
cmp
dec
imul
sub
fsubrs
cmp
push
adc
pop
popa
das
xor
push
pop
add
repnz
jp
push
out
lods
push
das
insl
es
jb
push
push
inc
lds
or
or
ret
or
imul
loope
es
out
in
loope
add
je
xor
jmp
sub
inc
adc
cmp
adc
pop
out
in
lods
mov
ficoml
push
or
pop
sub
xor
std
aaa
rcr
push
dec
std
cmp
xchg
popf
call
jns
fstpt
cmp
push
xor
mov
mov
xchg
push
push
nop
out
fadd
xorb
mov
adc
push
jo
cmc
loope
lds
or
popa
fstl
enter
into
push
mov
xor
sar
mov
mov
repz
push
xor
jp
stos
or
or
ja
push
test
xchg
std
lock
les
arpl
sub
daa
cmp
loopne
enter
xor
add
adcb
out
popa
insl
mov
mov
jo
insl
es
sbb
pop
adc
sbb
enter
mov
loop
es
mov
pop
jg
in
out
outsl
insl
es
out
xor
xchg
push
jecxz
repnz
bound
jl
cwtl
jbe
push
push
lahf
lret
mov
pop
stos
aad
lcall
lock
xor
imul
enter
mov
sub
clc
clc
adc
lret
inc
jecxz
scas
into
push
adc
mull
imul
enter
movl
dec
jecxz
loopne
sbb
jno
lret
add
sbb
jns
and
insl
lods
jmp
xor
pop
rcrb
test
int3
pop
aas
pop
fisubrl
js
jbe
daa
cmp
popf
outsb
adc
inc
int3
jmp
jb
subb
add
cmc
sub
pop
xor
out
popa
ffree
adc
test
bnd
test
mov
gs
dec
ljmp
mov
aas
lea
pushf
add
sbbb
insb
cmp
das
add
adc
aam
daa
fisttpl
mov
cmpsb
stos
dec
mov
outsb
push
dec
cmp
push
nop
scas
fadd
add
sarb
push
mov
ret
jmp
imul
test
stos
popa
or
xchg
ljmp
mov
out
popa
push
adc
cwtl
stc
lahf
jp
push
xor
std
fs
pop
addl
mov
rcr
popa
pop
push
push
loopne
inc
mov
test
add
and
repz
call
lret
stc
test
xchg
aad
mov
out
pop
adc
mov
insl
es
rcrb
adc
lds
aas
in
bound
addl
push
xor
fistpll
jle
sub
jmp
adc
fisubrl
sub
insb
in
mov
push
cmp
loope
enter
sub
gs
cmpl
movups
popa
fisttpll
inc
rcrl
aas
lret
adc
fcoml
inc
hlt
lods
xor
repnz
popa
cmc
sub
cmp
out
movsb
es
inc
mov
mov
jmp
shl
stos
bound
xchg
dec
lret
dec
mov
data16
pusha
ret
xlat
data16
add
repnz
jmp
fisubrl
xor
out
inc
cmp
pop
xchg
sub
inc
mov
aaa
push
add
jmp
lret
xor
push
leave
pop
cwtl
outsl
ficoms
psubusb
adcl
pushf
fld
mov
scas
cmp
loope
enter
adc
add
xchg
push
cmp
shrb
jl
and
pop
loopne
push
xor
pop
mov
jl
repnz
stos
push
lods
xor
repnz
dec
test
cmp
popa
xor
dec
js
lds
insl
es
cmp
sub
mov
out
fisubl
and
mov
push
dec
pop
cmp
sub
dec
test
jne
sub
lock
fisubrl
hlt
or
enter
ret
ja
ljmp
pop
out
popa
mov
repnz
mov
stos
enter
cltd
add
push
sarl
es
inc
and
cli
cmp
add
mov
jmp
mov
cmpsl
int
xor
pop
sbb
push
jle
lcall
pop
ss
imul
aaa
adc
out
cmp
mov
push
hlt
into
or
jmp
cmpsl
or
ret
sub
pop
push
dec
sub
push
movsb
push
mov
pop
jecxz
jns
inc
jecxz
imul
dec
or
loop
mov
cmp
jnp
stc
jns
fnstenv
ja
dec
cld
insb
outsb
mov
push
xchg
aam
loop
push
push
push
and
adc
addb
sar
push
clc
gs
scas
jecxz
dec
in
jbe
jl
ret
dec
or
popa
cs
call
jp
enter
add
jns
pusha
dec
mov
es
mov
sub
lock
sub
out
out
mov
xchg
jg
repnz
sbb
mov
es
out
mov
es
pop
lahf
cs
out
add
dec
mov
fs
mov
mov
shrb
gs
mov
fdivrl
sbb
push
mov
es
mov
xor
ljmp
cmp
out
in
pop
cmc
push
push
xchg
test
mov
js
shll
adcb
pusha
cmp
sbb
les
enter
pop
cmp
and
lods
fwait
loop
out
sti
nop
jno
cmp
adc
daa
out
cmp
out
jo
orb
mov
ljmp
in
sub
pop
mov
jge
pop
sub
jno
or
mov
and
mov
rorb
jmp
and
xchg
sub
lds
insl
es
jp
cs
or
cmc
ficoml
adc
pop
sub
dec
outsb
lret
sub
xor
lcall
hlt
jge
cwtl
in
push
sahf
rclb
mov
int
push
shlb
sub
pop
ss
out
mov
inc
pop
sub
imul
std
icebp
and
sbb
xor
out
cmpsb
add
dec
int3
lock
push
adc
and
nop
pop
or
in
lcall
loop
orl
xchg
cmpsl
fiaddl
mov
cs
jne
pushf
loop
lahf
push
arpl
cmp
or
pop
mov
mov
and
rcr
pusha
jg
loope
cmp
mov
mov
imul
add
sub
adc
das
pop
sub
adc
push
mov
ffree
mov
ja
call
push
sub
out
popa
lret
push
lds
or
sbb
dec
loop
in
inc
xor
sarb
xchg
mov
sub
mov
adc
sbb
loop
push
dec
leave
mov
mov
push
sarb
out
and
push
xor
pop
push
pusha
hlt
jb
pop
cmp
ss
das
addl
lahf
outsb
adc
cmp
add
shrl
enter
jecxz
add
or
imul
loopne,pt
adc
fs
mov
push
push
daa
mov
mov
fmull
aad
xchg
popa
xor
aad
sub
adc
push
push
sub
fnstsw
imul
imul
dec
jno
int3
or
test
ret
ja
cmpsl
cmpsl
stc
cmp
loopne
enter
push
push
sahf
dec
cltd
lock
add
loop
repnz
out
pop
dec
pushf
adc
inc
and
mov
pop
cmp
lcall
call
popf
pop
insb
or
insb
mov
aam
enter
es
mov
mov
das
adc
sub
cmp
mov
sbb
mov
loope
and
mov
call
icebp
daa
and
mov
js
lods
in
scas
pop
popf
imul
out
lahf
sbb
add
push
nop
xor
scas
sbb
pop
scas
arpl
jecxz
int3
dec
std
mov
add
push
nop
xor
xor
sbb
push
add
jl
fdivr
fldenv
and
jne
push
repnz
push
jns
fstpt
and
push
push
cmpsb
es
je
jmp
imul
jl
in
sub
lock
pop
fs
xchg
sub
push
pop
fiaddl
add
pop
ss
imul
mov
andb
xchg
aad
aaa
and
stos
fstpt
cmp
push
add
fmul
jge
mov
mov
xchg
push
jecxz
repnz
and
sbb
pushf
inc
imul
adcb
pop
mov
enter
pop
inc
ds
fbstp
xor
rcrb
ficomps
lcall
cmp
scas
jecxz
fcompl
jo
and
out
popa
frstor
scas
jnp
mov
sub
xor
popf
insl
adc
or
sarb
pop
xchg
xor
das
ljmp
ret
lret
and
push
stos
mov
add
xor
dec
call
out
xchg
test
dec
in
inc
mov
popf
push
or
adc
scas
add
aas
lret
mov
test
sub
pop
lahf
push
fsubrl
or
xchg
test
cwtl
insb
scas
sbb
out
inc
popf
imul
fistpll
push
xchg
sub
sub
inc
repnz
pop
pop
adc
pop
or
jo
add
xchg
data16
hlt
pop
dec
mov
cli
popf
add
push
dec
popa
or
cltd
fwait
imul
inc
shr
push
pop
pop
test
cmp
jo
mov
push
mov
jecxz
repnz
cmp
pushf
push
jecxz
orl
repnz
or
lds
mov
cwtl
popa
out
jnp
or
sbb
nop
rcr
mov
arpl
sub
pop
mov
jo
ss
scas
fimuls
call
mov
pop
adc
stos
mov
lock
dec
pop
or
jl
jle
out
gs
mov
cwtl
testb
sub
jbe
jle
leave
mov
loop
lds
insl
es
inc
cmp
adc
dec
in
insl
adc
sbb
popa
rol
xor
pop
jo
and
inc
dec
ud2
out
popa
fnstsw
fisubl
cli
mov
sub
insb
insb
push
data16
aad
cmpsb
jne
pop
jmp
mov
mov
jo
insl
es
inc
jbe
adc
xor
xor
xor
shrl
adc
jmp
jg
push
test
gs
das
mov
mov
fldcw
and
lock
les
jns
pusha
dec
dec
lds
insl
jbe
iret
bound
adc
cmp
jmp
movsb
pop
mov
aas
xchg
int3
fidivrl
jp
in
lock
cmpsb
sub
sbb
dec
pop
das
mov
movsb
test
push
call
dec
pushf
popf
inc
pop
aas
mov
es
jb
mov
dec
xor
loop
js
pop
hlt
fs
jle
fsubl
lea
leave
test
inc
mov
test
fstl
jge
hlt
mov
dec
nop
out
fadd
adc
jae
jb
shrl
icebp
pop
or
popa
das
pushf
sti
loop
repnz
mov
je
mov
insb
js
xchg
data16
mov
dec
out
out
sti
outsl
cmp
lcall
clc
and
stos
xchg
mov
adc
sarb
cmp
popa
xor
and
in
sub
lea
pop
sub
data16
in
lock
or
popa
loop
mov
js
and
and
pop
lahf
xor
out
pop
in
ljmp
pusha
dec
in
and
out
and
ror
rclb
insl
es
cltd
sti
xchg
stc
adc
xor
xchg
pusha
cs
sub
cmp
or
or
mov
xor
pop
pop
fldenv
test
call
lods
fldcw
and
fwait
imul
addb
xorb
sub
sti
out
push
ja
jmp
bound
imul
sbb
push
lcall
xor
or
lret
add
hlt
and
js
fimuls
scas
inc
popf
imul
adc
add
ja
test
add
repz
enter
pop
imul
lock
add
adcb
out
popa
xor
mov
pop
out
or
addb
out
sbb
test
cmc
shrb
fildll
enter
fnstsw
in
dec
add
fs
sbbl
out
les
rcrb
inc
cli
sub
filds
adc
dec
loope
int
push
arpl
movsl
dec
std
int
mov
aam
pop
jp
in
stc
mov
xchg
cli
adc
pop
out
rorb
repnz
mov
jb
loope
xor
loopne
repnz
push
push
out
and
ret
cmpsl
add
adc
pop
out
jle
stos
adc
test
repz
ss
lock
or
insw
out
and
ljmp
out
sub
jge
aaa
mov
in
cmp
fisubl
inc
pusha
lock
push
fisubrl
adc
in
push
mov
xlat
psllq
ret
jg
scas
dec
popf
imul
fbld
and
xchg
insl
cmpsb
pop
out
mov
dec
sub
pop
fs
xchg
mov
xchg
cmpsb
fsubp
out
or
fcomps
pop
xlat
or
mov
sbbb
jns
fcmovnb
push
scas
mov
adc
xor
adc
inc
test
adc
adc
mov
cmpsl
cmp
dec
out
sub
inc
shll
mov
repnz
mov
jb
in
xor
xlat
test
mov
xor
mov
pop
push
push
out
adc
ret
adc
pop
shlb
test
add
ds
jecxz
and
in
test
pop
pop
adc
cmp
lds
push
cmp
loopne
adcl
popa
sub
push
xor
fldcw
nop/reserved
lods
sub
push
gs
call
mov
in
fldcw
pop
mov
lods
adc
cltd
dec
fs
gs
push
sub
sbb
sti
inc
lcall
hlt
outsb
iret
adc
lea
insl
cmpsb
js
push
and
out
mov
dec
sub
lret
ljmp
imul
movsl
int3
rclb
push
arpl
push
loopne
push
imul
pop
cs
popf
xor
sbb
int3
test
inc
jecxz
push
imul
gs
lret
adc
testb
fisubl
out
test
in
dec
and
imul
enter
push
ret
andb
cltd
out
and
sbb
call
jb
mov
lahf
mov
or
call
push
xchg
lds
mov
add
mov
sub
out
popa
inc
rcll
test
icebp
and
in
out
outsl
adc
push
add
dec
mov
adc
cmpsl
in
push
ss
xor
xchg
dec
popl
pop
cs
mov
jl
repnz
orl
aad
inc
mov
sbb
imul
lock
fistpll
shr
scas
idivl
dec
push
dec
rcrb
cmpsl
clc
clc
adc
mov
sti
stos
xor
pop
test
add
cmp
ds
mov
jo
sbb
outsb
xchg
sub
inc
jns
fcmovnb
jb
cmpsb
or
das
es
in
js
pop
push
stos
xchg
popa
repnz
fdivs
sub
xor
dec
pop
scas
mov
shlb
jmp
movsl
mov
mov
pop
sub
add
xorl
cmp
xlat
and
add
lahf
outsl
mov
push
sub
in
rclb
in
movsl
ret
mov
popf
adc
adc
pop
loopne
or
jae
xlat
mov
stc
es
jno
mov
mull
hlt
adc
test
cs
sbb
jl
fdiv
std
xchg
icebp
fidivl
xlat
movsb
fbld
fimull
push
mov
push
ret
out
ss
scas
fadd
jo
aad
mov
outsb
fwait
fimull
fnstsw
in
push
ficomps
leave
orb
int3
loop
jno
inc
imul
mov
inc
adc
sbb
xlat
test
andl
and
mov
push
sub
dec
icebp
adc
out
xor
cmp
div
in
or
fs
test
push
test
jecxz
bound
mov
imul
fists
cmpl
push
adc
fisubrl
mov
mov
fs
popa
mov
xchg
inc
outsb
loopne
jnp
and
pop
adc
xor
pop
mov
ss
fisubl
mov
hlt
dec
fisttps
dec
adcb
icebp
adc
out
popa
loopne
jnp
out
jl
dec
add
jg
in
fadd
sbb
xor
sub
js
frstor
add
sbb
test
sub
dec
xor
data16
loope
lret
inc
push
pushf
jae
adc
ja
out
mov
adc
add
add
xor
xchg
mov
inc
mov
and
cmpsb
cltd
push
adc
call
jl
xor
popf
adc
jbe
sub
mov
in
jb
loope
dec
pop
dec
inc
lret
pushl
roll
aas
mov
sub
pop
jp
and
scas
stos
pop
jp
add
fisubrs
lds
repz
dec
movzwl
sbb
jae
addr16
in
adc
arpl
lea
jbe
icebp
sub
mov
pop
mov
out
xor
pop
inc
pop
mov
dec
repnz
mov
xchg
push
fucomi
fisttpll
cmp
push
pop
mov
jnp
sub
ss
lods
cltd
ja,pt
cmpsl
loope
cmp
loopne
enter
push
stc
scas
aaa
push
lock
xor
fisubrs
sarb
movsb
cmp
loopne
enter
das
push
cltd
xchg
shl
add
xchg
es
and
ljmp
push
int
sbb
aas
fdivr
jbe
sub
cmpsl
popa
lcall
mov
push
adc
loop
dec
mov
adc
sar
and
dec
pop
adc
mov
arpl
movsb
insl
dec
jg
sub
and
sbb
insl
push
fisttpl
js
pop
sub
popa
xor
pop
sub
nop
popa
jno
sbb
fistpll
xchg
fsubl
xchg
push
adc
mov
arpl
lock
pop
out
mov
sub
enter
ds
insl
push
dec
outsl
or
pusha
cmpsb
mov
cmpsb
mov
xchg
out
fadd
xchg
cmp
fwait
jo
gs
out
popf
cwtl
sahf
adc
or
xor
dec
cld
xchg
negl
cmc
xchg
loope
xchg
fiaddl
enter
push
pop
mov
adc
inc
loope
cmc
push
sbb
mov
in
fsub
push
sub
pop
outsl
je
xchg
paddsb
scas
and
inc
scas
ds
imul
dec
sub
or
xchg
lock
pop
out
popa
jle
jge
out
xlat
lea
dec
push
lahf
pushf
mov
dec
popa
sbb
ja
dec
cld
cmp
jmp
or
imul
aad
gs
adc
cld
xor
in
fsub
adc
xchg
jno
pop
data16
bound
cmp
jl
out
popa
xor
sub
mov
cli
dec
out
sub
loopne
jge
mov
fisubl
lods
xor
repnz
adc
and
mulb
jns
out
and
jbe
add
xor
pop
pop
xor
aad
inc
adc
dec
dec
in
xchg
mov
mov
push
call
insb
or
repnz
lcall
lret
xor
inc
in
gs
scas
fmulp
out
sbb
outsl
xchg
fidivrl
xchg
dec
mov
or
fstl
in
pop
es
negb
xlat
aad
clc
xor
sub
cmc
mov
lahf
dec
jo
insl
es
fcmovnb
xchg
adc
xor
in
jb
push
es
ds
rol
push
sarl
and
insb
pop
xor
pop
std
jle
pop
aas
pushf
cld
imul
sbbl
cmp
mov
stos
imul
das
in
addb
ret
add
sub
add
out
adc
xchg
cld
sbb
or
popa
aam
sub
xchg
out
imul
mov
pop
sti
ds
jp
and
pop
pop
pop
fistpll
movl
adc
dec
in
sub
outsl
ljmp
insl
jb
loop
xor
les
shlb
push
jmp
or
lahf
adcb
fidivrs
fistl
sub
jae
adc
aas
and
pop
in
fstps
leave
jl
aad
jns
fcmovnb
shll
cmp
mov
dec
nop
in
leave
lret
pop
pop
sbb
rcll
rcll
mov
or
cmp
xlat
push
jecxz
pop
popa
jmp
cltd
in
adc
ja
pop
pushf
dec
mov
incl
dec
ds
clc
or
mov
mov
repz
pop
lods
inc
cmp
loope
enter
dec
cld
cmp
imul
add
xchg
cmpsl
or
jbe
icebp
sub
dec
adc
cltd
cmp
rcrl
push
mov
fadds
repnz
push
out
mov
in
add
xor
pop
sub
adc
repz
xchg
out
lds
rcrl
into
or
jns
fistps
out
pusha
scas
mov
rorb
jmp
inc
mov
jne
jg
outsb
sub
inc
mov
stos
inc
icebp
popa
frstor
insl
es
outsl
jno
nop
sub
pop
jo
add
inc
cld
push
pxor
adc
movsb
and
ret
int3
cwtl
jb
in
cs
icebp
int3
mov
ret
test
out
popa
fucomp
jnp
loopne
cmc
xor
aas
jo
rcrb
daa
sbb
mov
sub
out
lcall
out
popa
xor
adc
pop
out
ss
push
andb
addr16
and
dec
fwait
lds
push
inc
sub
sbb
fwait
mov
inc
loop
loope
fdivl
call
fmul
add
je
scas
pusha
popf
imul
data16
sti
or
xchg
mov
jno
inc
sbb
dec
sti
das
lcall
arpl
lea
in
cmp
call
push
add
lods
jge
repnz
addl
dec
hlt
pop
sub
sahf
jns
fcmovnb
test
test
dec
in
push
jge
jo
popf
jecxz
test
hlt
movsl
mov
hlt
sub
xlat
fcoml
icebp
ds
mov
fdivr
xchg
or
into
jnp
jb
adc
inc
loop
or
cmpsl
mov
sbbb
ljmp
dec
out
xor
adc
sub
and
pop
lahf
pop
out
out
xchg
xchg
push
jg
dec
dec
jbe
call
push
sub
out
popa
xor
repnz
mov
sub
test
andb
pop
sub
cwtl
lock
or
and
mov
inc
fbld
fiadds
mov
int3
xchg
fwait
xlat
push
xor
orb
adc
mov
sub
pop
sub
enter
popa
mov
fnstsw
testb
leave
mov
mov
imul
repnz
xchg
outsb
lods
mov
sub
mov
addb
sub
mov
adc
dec
jb
dec
ret
jl
sarl
push
rcr
and
xor
in
daa
sbb
mov
sub
popa
push
lret
popa
pop
or
mov
mov
xor
adc
je
andl
loope
scas
pop
pop
mov
repz
les
mov
popa
ffree
jle
adc
push
jmp
dec
sub
dec
orl
faddp
repnz
fldenv
sti
inc
fstpt
out
leave
out
pushl
lea
fisttpll
fcomps
bnd
xchg
scas
lret
jb
loop
pop
pop
pushf
sbb
mov
dec
push
sahf
adc
stc
adc
push
push
cmp
or
pop
mov
mov
in
xor
addb
ret
mov
stc
cltd
pop
jnp
hlt
jmp
idivl
or
mov
clc
cmc
bound
inc
fucomip
or
jge
mov
xchg
test
popa
push
pop
sub
push
clc
dec
out
xor
pop
fwait
cwtl
imul
out
jno
or
in
and
rolb
push
gs
popf
mov
jecxz
inc
inc
outsb
bound
dec
shll
imul
bound
es
sub
jbe
in
cmp
fisubl
fiadds
icebp
jmp
fisubrl
adc
shrb
fisttpll
push
mov
out
popa
pusha
sub
fs
pushf
cmp
aaa
jp
pop
pushf
arpl
ja
addr16
add
or
sub
push
les
mov
dec
xchg
popf
sub
test
fmull
jnp
call
push
mov
or
stc
cmpsb
icebp
mov
ud0
popa
fucomp
out
cmpl
sbb
and
sar
arpl
jne
ret
cmp
adc
xchg
shrl
ret
cmpsl
add
es
out
sarl
fbstp
adc
dec
dec
in
fwait
xchg
push
data16
in
outsb
adc
enter
fmull
enter
loop
repnz
pop
and
aam
mov
push
lcall
out
push
sub
mov
repnz
mov
aaa
mov
jg
pop
in
push
jp
pop
push
jnp
shrb
aas
pushf
cld
ficoml
sub
loope
scas
fisubs
dec
clc
push
push
xchg
sub
test
push
sub
aam
out
pop
mov
movsl
sbb
mov
adc
push
subl
dec
sub
ljmp
out
sub
insl
outsl
mov
push
mov
out
icebp
test
mov
sti
popa
cs
loop
sub
sbb
ss
xor
clc
fcomps
cs
cmc
idiv
loop
ret
in
sarl
jge
pop
imul
fucom
movsb
pop
jmp
mov
sub
push
pop
out
lret
jle
push
int3
sbb
es
cmp
leave
jp
pop
sub
es
lock
fisubl
push
adc
cmpsl
or
jbe
icebp
sub
cmpsl
add
rol
adc
pop
out
aas
cmp
or
jp
test
and
pop
es
dec
mov
in
push
insl
es
gs
mov
fst
fldcw
lock
test
ds
sub
sub
push
jns
out
and
push
cmp
cs
es
add
leave
jbe
pop
sub
jb
loopne
sub
add
rcr
xor
dec
xchg
imul
mov
cli
xchg
pop
lods
push
mov
push
out
fstpl
jnp
cltd
std
push
mov
push
lock
in
insl
fists
adc
cli
pop
lods
inc
rcr
xor
inc
jecxz
pop
add
out
mull
imul
loope
jbe
pop
sub
jb
in
sub
lds
xlat
rcrl
shlb
push
adc
mov
mov
stc
cmp
in
dec
mov
dec
inc
mov
fcomi
fstl
cld
je
and
hlt
pop
call
push
xchg
fisttpl
xchg
sub
pop
inc
jecxz
or
out
mull
imul
enter
sub
sub
roll
shrl
sub
mov
dec
push
gs
insl
mov
test
sub
insl
dec
push
or
push
repnz
es
in
sub
xor
enter
das
push
enter
subl
jno
test
fcmovnb
scas
mov
mov
test
out
mov
jbe
jb
and
add
sti
loop
orl
or
insb
and
xlat
cs
dec
or
pushf
mov
push
add
out
push
dec
loop
mov
imul
sbb
push
pushl
shlb
lahf
dec
or
stc
mov
inc
xchg
andl
jne
xlat
aas
jecxz
xchg
fcomps
adc
imul
dec
fildll
sub
xchg
insl
mov
shl
test
push
push
mov
rep
jecxz
push
shlb
test
std
mov
rclb
inc
stos
cmp
mov
inc
popa
adc
add
ret
hlt
inc
jmp
push
gs
inc
jne
test
popa
xor
adc
push
leave
xchg
xchg
out
outsl
setae
fiadds
call
mov
movsl
jge
add
jle
push
xchg
mov
pand
out
jno
mov
sbbb
test
imul
imul
mov
pop
out
mov
test
std
in
jnp
icebp
les
aam
jb
loop
xor
mov
or
jno
mov
daa
cmp
mul
bound
pop
sub
or
fildl
ds
xchg
test
mov
fs
mov
stc
and
popa
dec
pop
pop
cmp
push
popf
mov
roll
popa
mov
push
adc
sbb
fistpll
or
ret
add
rcl
jecxz
jg
call
sbb
repnz
cltd
fnsave
insl
push
dec
pop
shl
fs
scas
pop
mov
roll
jne
and
jp
fiaddl
mov
insl
mov
imul
lds
or
add
in
out
jl
pop
pop
xlat
push
pop
imul
jecxz
ljmp
repnz
inc
fidivrl
push
xor
loopne
out
call
xorb
push
out
inc
cmp
jns
push
cmpsl
add
cmp
loope
enter
dec
mov
gs
gs
subl
sub
shr
popa
rclb
push
dec
dec
loope
jle
test
daa
leave
insb
or
xor
rcr
das
daa
shr
pusha
scas
fistpll
aas
orl
cld
adc
xor
addr16
mov
dec
and
push
jp
push
push
insl
sub
movsb
push
shlb
aam
cmp
in
call
mov
mov
dec
test
push
jecxz
ret
sub
pusha
dec
in
leave
in
in
imul
cli
aaa
lcall
imul
lea
in
push
jno
jecxz
pop
jb
xor
and
sti
loop
adcl
and
divb
xchg
popa
jae
sti
or
lds
shll
dec
ja
push
jns
dec
lcall
push
jmp
imul
inc
lcall
add
icebp
lea
mov
movsb
pop
in
das
xlat
imul
sub
xlat
pop
dec
and
mov
jg
negl
push
mov
in
jo
jno
pushf
inc
popa
mov
pop
jo
xchg
cmpl
prefetch
or
dec
adc
pop
ror
mov
pop
movsl
mov
in
lock
push
pop
inc
push
mov
test
imul
adcb
dec
call
xchg
lea
dec
dec
loopne
js
jmp
fisubrl
cs
mov
popa
sti
in
dec
xchg
add
popa
cmp
jl
and
xor
pop
clc
push
add
push
mov
xchg
pop
mov
popa
sub
pop
cs
cmp
es
ja
inc
and
cli
dec
lcall
out
xchg
arpl
lea
js
imul
push
lahf
ds
out
add
pop
nop
xchg
push
xchg
andl
jno
mov
enter
pop
cmp
xlat
dec
jecxz
ret
pop
mov
or
fstps
in
imul
jg
in
daa
push
dec
pmaddwd
cmp
and
sub
movsb
add
xor
adc
adc
js
pop
out
or
add
outsl
dec
mov
lock
fisubl
mov
insb
pop
pop
inc
mov
pusha
cwtl
rcrb
jmp
cwtl
mov
mov
pop
sub
push
pop
jo
fisubrs
insl
fwait
outsb
fimull
in
cmp
test
and
inc
inc
je
rol
push
inc
rcr
and
pop
dec
fcomi
fstl
mov
adc
sbb
xchg
outsl
or
dec
xchg
popf
out
sti
jl
in
out
popa
xchg
mov
clc
sub
pusha
push
sub
xor
adc
dec
dec
loop
dec
pushl
outsl
inc
dec
fcomps
clc
mov
insl
sub
pop
out
popa
fstp
inc
pop
push
cmc
add
push
gs
pop
mov
mov
nop
adc
aad
cmp
sub
out
adc
stc
dec
inc
add
lock
sbb
and
jmp
fdivrl
lock
call
fldenv
mov
loope
ficomps
icebp
jae
movsb
add
ret
enter
add
fcmovnb
push
mov
lret
pop
push
push
pushf
out
hlt
sub
push
add
sub
sub
test
and
pop
lahf
cmp
out
pop
jg
loopne
push
xchg
jg
sub
push
dec
mov
cld
or
sub
and
xor
adc
mov
xchg
and
mov
and
mov
fdiv
fmull
int3
test
sbb
cli
inc
lcall
sub
jmp
leave
sti
popa
xor
call
aad
sub
inc
test
jns
enter
dec
dec
mov
push
cmpl
es
out
mov
test
sarl
push
sub
sbb
insb
adc
fiaddl
sarl
movsl
inc
jp
adc
pop
dec
insb
sub
cmc
fidivl
push
das
aaa
cmpb
pop
sub
jns
insl
or
dec
mov
cmp
push
repnz
mov
cmpsb
outsl
add
pop
mov
repnz
fdivrs
fstpt
mov
push
push
fisubs
lods
xchg
mov
add
pop
enter
jno
pop
inc
mov
xor
jbe
loopne
sub
mov
rcl
jb
iret
xchg
loopne
jns
lock
fistpll
mov
pop
decl
sub
jbe
push
negb
jecxz
xor
cmp
aaa
xchg
shr
jg
clc
enter
xor
out
test
xor
mov
es
out
dec
push
push
cmp
add
mov
imul
fidivrl
cwtl
push
inc
repnz
andb
push
jmp
out
sbb
pusha
inc
out
jp
hlt
sti
out
aam
fildll
clc
popa
dec
sbb
es
jp
jmp
pop
test
adc
sti
loopne
enter
xor
insl
add
cmp
psubusb
pop
jo
fisubrs
insl
fwait
jp
mov
sti
fstpl
clc
inc
fldcw
ja
dec
cli
mov
repnz
in
pop
push
lea
inc
sbb
jg
xchg
rcr
mov
ss
out
fisubrs
jnp
jmp
mov
imul
pop
out
popa
xchg
xlat
dec
repz
adc
mov
sti
out
lods
xor
repnz
jo
imul
in
dec
sarl
jl
and
fwait
lods
sub
xor
pop
push
mov
adc
xor
push
popa
sub
pop
cs
and
imul
mov
inc
out
sub
xor
mov
jp
lret
push
push
lods
and
pop
ret
dec
stos
adc
jmp
jle
loope
mov
cmpxchg
cmp
cmp
pop
out
jp
fucomi
fisttpll
test
out
into
jno
repnz
add
out
test
ljmp
shl
out
bound
dec
out
shll
inc
push
xchg
jle
inc
mov
fs
fists
imul
insb
test
adc
xor
jmp
xor
in
jo
jno
push
lds
jg
pop
loop
push
xchg
outsb
lods
xor
xor
pop
adc
pop
andb
mov
into
pop
cmp
ljmp
insl
loop
loope
jno
rcrb
leave
clc
add
test
sub
popa
inc
imul
inc
jae
xchg
push
fs
pop
mov
pop
out
insl
and
and
rclb
loop
xchg
enter
ja
xor
xor
or
adc
jle
repz
push
jg
mov
jo
dec
cld
xor
push
or
add
repnz
enter
in
loopne
pusha
sub
pop
sub
push
dec
xlat
leave
sub
mov
test
out
mov
jbe
sbb
sub
sbb
lret
jecxz
mov
pop
mov
push
xchg
dec
inc
push
sti
mov
push
pop
loop
loope
bound
call
mov
pop
out
ljmp
jg
push
das
insl
es
cmp
cmp
adc
mov
pop
sub
repz
push
jp
in
pusha
in
insl
es
popa
stos
sub
pop
sbb
adc
sbb
xchg
push
out
cltd
xor
sbb
push
pop
cmp
push
cmpsl
fcmovnb
add
je
xor
nop
mov
fs
pop
bound
out
pop
out
fisubrs
lods
xor
imul
fsubl
dec
mov
mov
mov
sbb
jmp
out
popa
pusha
xor
mov
sahf
jmp
jno
pop
out
add
das
insb
jb
jmp
mov
mov
pusha
popa
cmp
out
popa
frstor
cmp
pop
fadds
jns
aas
sti
scas
dec
popf
imul
xor
jmp
or
cmp
je
ret
sub
ds
imul
sahf
pusha
ljmp
jecxz
es
out
mov
dec
sub
test
sbb
cmp
xlat
mov
inc
push
rcll
fnsave
pop
sub
fistl
enter
dec
mov
jne
push
sub
imul
shl
gs
dec
add
insl
test
fisubrs
insl
es
jo
mov
fstps
adc
popa
fisttpll
fimull
push
cmp
adc
xchg
lahf
ljmp
out
lock
or
imul
popa
xor
adc
mov
call
outsb
pushf
mov
dec
clc
add
popa
sbb
sub
call
push
inc
jle
mov
clc
adc
or
xchg
sub
je
daa
sub
out
popa
cli
sub
pop
inc
sbb
lcall
jnp
arpl
lea
fisubrl
insl
es
and
xchg
cmp
pop
repz
sahf
aas
arpl
daa
jecxz
mov
or
leave
subl
jge
pop
mov
xor
inc
adc
fs
dec
jns
push
arpl
data16
mov
imul
fs
mov
decb
adc
pop
out
mov
adc
dec
dec
in
jnp
insl
es
in
outsb
adc
cs
push
insl
or
dec
loop
stos
imul
xorl
outsl
sub
add
lahf
push
inc
lret
adc
dec
fisttpll
lds
loop
xor
mov
into
sub
repz
mov
rcl
sub
js
call
sub
pusha
dec
mov
lcall
jmp
sti
jo
lret
out
std
fsub
std
pop
push
xchg
dec
sbb
cmc
push
inc
mov
neg
jmp
xchg
mov
inc
out
jnp
xor
movsl
mulb
sbb
mov
jnp
jge
push
scas
scas
pusha
popf
imul
xchg
pop
mov
or
xchg
sub
xor
inc
add
dec
xchg
cltd
and
push
mov
testb
addr16
pop
adc
jmp
fistl
lret
adc
out
repnz
jo
xor
pop
or
cmp
cmp
dec
popa
push
jno
ret
and
pop
pushf
aas
stos
xchg
push
adc
popa
fnstsw
cmpsl
adc
jns
pop
sub
jb
in
das
arpl
test
test
ljmp
into
adc
sub
jae
sub
xor
movd
mov
cmp
jl
pop
in
pop
pop
arpl
jno
lock
xchg
cmc
dec
xchg
jo
cld
out
jno
mov
adc
adc
out
es
pop
adc
js
pop
push
xchg
mov
cmp
in
jns
pop
inc
and
inc
sti
cmp
add
jp
push
cmc
bound
lea
pop
pop
sbb
xor
ljmp
or
inc
jecxz
jl
mov
divl
lret
sbb
jp
pop
sub
ret
adc
sub
pop
sub
shll
or
ja
inc
mov
xor
cmp
js
adc
movsl
cmc
sub
fld1
pop
inc
out
cmc
pop
mov
lahf
xor
loop,pn
test
filds
test
outsl
arpl
ret
sbb
dec
mov
or
pop
imul
jp
jmp
mov
mov
jl
push
das
pop
out
popa
or
lcall
push
sub
aam
scas
push
inc
mov
aam
jge
loop
repnz
mov
push
dec
lcall
inc
pop
fs
xchg
sti
fidivrl
lret
jl
dec
cmp
jae
or
fwait
adc
loop
loope
cld
lret
inc
imul
cmp
sub
jg
loope
push
das
insl
es
gs
adc
sbb
push
push
jb
loope
sub
dec
cmp
pop
inc
jecxz
mov
insb
and
stc
popa
movl
adc
xor
push
add
push
push
insb
or
in
leave
in
in
imul
push
sub
pusha
iret
adc
dec
dec
loop
cmc
mov
enter
jne
pop
jns
dec
xchg
jnp
call
push
xor
out
popa
and
push
std
fnstsw
enter
sub
sbb
popa
xor
jle
jmp
jge
inc
mov
fs
mov
xlat
insb
add
decl
mov
fisubl
and
dec
in
mov
lods
fmull
push
ljmp
mov
lahf
fsubl
inc
mov
adc
mov
add
push
pop
lods
mov
push
lcall
adc
cld
jo
aad
lds
adc
adc
dec
push
dec
repz
fisttpll
xchg
or
pop
mov
pop
sti
mov
pop
or
sub
lea
jl
aas
jecxz
imul
dec
or
jb
loope
sti
mov
divb
je
lock
inc
mov
dec
jl
push
mov
sahf
aas
sbb
mov
jae
add
mov
dec
adc
aam
inc
repnz
jnp
clc
enter
hlt
fcomi
bound
je
and
fimuls
add
jp
jnp
inc
in
movsb
cmp
cmp
fldcw
cltd
jo
nop
in
enter
mov
mov
xchg
cmp
int3
xchg
pop
inc
mov
xlat
jae
sbb
and
inc
stos
das
call
movl
pop
jo
enter
push
or
arpl
stc
repnz
out
inc
pushf
notl
lock
or
and
popa
hlt
insb
push
data16
and
jg
or
fs
enter
iret
push
scas
xchg
rcr
movsl
out
sbb
pushf
add
mov
js
inc
jbe
cwtl
jl
dec
dec
std
or
outsl
push
push
mov
inc
jp
inc
pop
push
fwait
lds
gs
imul
jns
cmp
loope
enter
inc
outsl
je
mov
gs
xor
cwtl
insl
stos
ds
dec
push
jge
mov
cmpl
lahf
jo
ss
test
xor
or
inc
fwait
pop
adc
adc
loopne
push
pushf
jmp
testb
andl
or
stos
out
jnp
test
adc
pop
mov
jl
lret
pop
aad
imul
mov
and
xchg
popf
dec
lret
test
jno
imul
xor
sbb
insl
ficoml
dec
icebp
enter
adc
loope
xor
jge
push
dec
and
push
xchg
sub
and
es
psubb
data16
lods
xor
repnz
js
sub
dec
sub
and
daa
sbb
clc
in
bound
push
nop
out
hlt
aaa
sti
loop
push
xchg
test
and
jns
insl
mov
mul
leave
insl
jns
and
push
xor
pop
pop
mov
jle
not
mov
ret
pop
arpl
popf
insl
adc
inc
subl
outsl
push
mov
pop
pop
jl
add
cmp
das
add
inc
xlat
daa
adc
mov
jl
lods
std
lret
cmp
loope
enter
inc
scas
inc
mov
xchg
add
xchg
and
mov
rcrb
jmp
adc
mov
mov
pop
sub
aaa
mov
rolb
jmp
testb
outsb
pop
sub
ss
pop
out
popa
fstp
pop
pop
push
lods
lcall
or
rcr
nop
out
insl
mov
adc
add
pop
insb
aam
clc
pushf
fdivrs
fcmovnb
mov
movsl
out
sbbl
mov
mov
add
clc
adc
add
lret
fcmovb
cmp
in
jno
push
jo
aad
dec
pop
out
popa
fldl
inc
dec
jecxz
pop
jmp
loope
xor
inc
insb
push
lds
mov
xor
or
adc
xor
pop
jbe
sbb
xchg
clc
fidivrl
cmpb
fcmovnb
out
add
push
jp
push
sahf
or
mov
mov
rorb
mov
inc
jecxz
xor
sbb
out
repz
push
adc
dec
dec
loop
out
fwait
mov
test
xor
shlb
gs
mov
or
outsb
sub
inc
mov
cs
inc
and
cli
insb
lcall
xor
jmp
sbb
sti
mov
pop
lahf
adc
xor
sahf
jl
movsl
in
pop
and
mov
push
cwtl
ja
dec
cmc
mov
out
test
popa
sub
loopne
cli
popa
push
jnp
push
scas
pusha
andb
dec
mov
rorl
rorb
int3
das
jg
and
xor
es
lods
mov
add
jnp
push
xor
inc
push
data16
int
xor
repnz
cmp
popa
ret
jecxz
es
out
mov
popa
jge
loope
daa
xor
lds
mov
and
mov
js
jmp
pop
jns
push
sub
mov
dec
dec
out
insl
pop
in
mov
jno
or
popa
rol
lret
jb
or
cmp
sbb
pushf
imul
or
enter
in
and
popf
outsl
jbe
int
nop
push
out
jnp
and
jmp
jnp
pop
push
stc
fdivrs
dec
gs
add
or
inc
mov
jp
and
dec
out
fisubs
inc
jp
inc
jl
loopne
lret
xor
mov
mov
mov
inc
mov
cs
mov
fldcw
or
cmpsl
fisttps
add
inc
aam
jle
push
gs
or
and
mov
and
push
cs
es
imul
sbbl
ja
repnz
cmovs
xlat
insl
push
sarb
sbb
ficompl
jp
out
repz
mov
sbb
loop
repnz
mov
nop
rcll
dec
cmp
enter
ljmp
loope
sub
repnz
enter
fcoms
sub
mov
repnz
clc
jnp
repnz
fs
adc
or
cltd
mov
hlt
movb
orl
pop
cmp
fcmovnbe
out
ficoms
sbbb
push
stc
sbb
lcall
mov
and
sub
adc
cmc
cmp
push
in
cmp
lods
push
push
pop
mov
push
insl
adc
pop
ja
hlt
adc
ret
loopne
in
fwait
and
loop
loope
aaa
cwtl
les
mov
push
faddp
movsl
add
aaa
xchg
lock
out
jne
aas
mov
fiaddl
add
and
mov
adcb
xchg
dec
cli
adc
jo
mov
push
push
push
fcomi
fstl
push
dec
xchg
ret
in
lret
sub
cli
and
out
lret
push
inc
mov
adc
sbb
and
jb
inc
pop
shlb
adcb
imul
outsb
sub
xchg
mov
pop
sub
gs
out
fisubl
jmp
dec
mov
dec
sub
pop
fs
xchg
int
scas
xlat
iret
jecxz
nop
negb
rol
push
cmp
aam
loop
fdivrl
push
cmc
xor
pop
push
mov
rcrb
lds
dec
sti
gs
xor
shlb
loope
add
xor
call
aad
sub
add
int3
adc
mov
test
push
push
pop
xor
fsubl
sub
mov
daa
inc
adc
cmp
jg
jl
sbb
call
sub
and
js
and
scas
cmp
pop
mov
or
xchg
ret
mov
xor
add
inc
cld
xor
mov
popa
jae
cmp
sarl
insl
es
inc
mov
push
ds
jp
and
addr16
dec
fists
shlb
or
sub
test
js
push
xor
popf
xchg
adc
int3
jo
ljmp
es
out
mov
bound
ds
ljmp
adc
dec
dec
out
push
push
cmp
dec
adcl
dec
mov
out
inc
jecxz
pop
inc
rclb
imul
dec
in
test
lods
mov
sahf
imul
or
insb
or
sub
mov
loop
fldcw
cmc
in
ljmp
dec
bound
push
jno
imul
or
das
pop
out
popa
fs
mov
fidivrl
push
xor
addr16
ljmp
mov
sarl
jns
add
scas
inc
popf
imul
jp
icebp
dec
or
xchg
les
jecxz
pop
and
push
add
ret
push
xor
arpl
outsb
lock
dec
outsl
push
jns
fcmovnb
jmp
loop
rcrb
cmp
pop
jmp
out
adc
inc
xchg
aam
popa
push
jge
jecxz
push
fs
aad
subb
sarb
gs
in
out
mov
sub
pop
imul
and
and
aad
pop
pop
lahf
clc
stos
and
xchg
add
xchg
add
popa
lods
bound
mov
jp
popa
dec
xor
xchg
mov
ret
adc
repnz
scas
dec
and
or
scas
pop
sub
ljmp
loope
sub
repnz
mov
out
mov
enter
popa
push
sarb
push
out
popa
ffree
jg
and
push
das
insl
es
inc
pop
rclb
push
cmc
mov
cmp
lock
mov
repz
and
pushf
cli
xor
add
mov
jns
arpl
lea
jp
mov
sub
jae
insl
es
shrb
cmp
repnz
les
sub
in
in
jne
or
popa
rol
clc
adc
lea
jge
daa
pop
imul
sbb
ret
insb
pop
push
dec
repnz
fildll
push
insb
xchg
aam
sti
pop
push
jne
push
and
xor
aaa
xor
dec
mov
sbb
scas
aad
sub
xchg
cmpsl
xlat
mull
dec
pop
inc
mov
mov
xor
and
cmpsb
add
popf
dec
lret
test
mov
insl
adc
nop
dec
notb
push
xor
sub
push
dec
xor
imul
fstpl
test
and
ljmp
packuswb
xchg
and
mov
pop
push
jle
xchg
popa
dec
mov
test
jmp
pop
mov
xchg
hlt
outsb
inc
sub
lahf
jne
clc
adc
fdivrl
shlb
gs
adc
inc
outsb
sub
inc
mov
cmpsl
add
inc
adc
adc
pop
out
mov
xor
jbe
push
das
or
dec
lret
pusha
xor
pop
sub
out
xchg
push
sub
mov
insl
es
sbb
push
stc
adc
jo
ds
popf
fdivrp
out
mov
out
push
addr16
stc
ja
dec
clc
out
adc
fldt
or
mov
lcall
clc
clc
sbb
inc
outsb
mov
sub
das
mov
mov
xlat
push
imul
or
adc
in
divb
in
out
jae
or
mov
test
jns
and
xor
pop
push
inc
mov
push
pop
xor
arpl
in
jmp
popa
mov
push
out
popa
jp
js
jmp
sub
push
push
sub
leave
arpl
adc
dec
dec
in
mov
in
insl
adc
imul
sbb
dec
test
call
out
cli
aas
lcall
jecxz
cmp
icebp
lea
fs
in
or
mov
loop
repnz
dec
dec
mov
cmp
pop
shlb
out
ja
dec
not
push
add
aam
loop
pop
out
push
in
arpl
pop
movsb
or
dec
test
fs
jge
and
popa
adc
push
and
pop
pop
pushf
jle
jnp
push
in
xchg
mov
int
lds
scas
mov
or
mov
rcrb
mov
test
mov
inc
lret
rcrl
repz
and
push
dec
imul
inc
mov
mov
jmp
test
test
je
test
adcl
jno
cmp
jo
outsl
mov
out
popa
es
cltd
fidivl
sub
enter
enter
mov
out
fmull
clc
in
gs
jecxz
imul
dec
add
mov
mov
lods
jbe
lcall
and
push
mov
clc
sar
adc
push
je
in
push
xor
cwtl
popa
xchg
popa
push
dec
cltd
or
sahf
lods
adc
mov
sahf
adc
stc
pop
fwait
cmpsb
inc
ja
dec
inc
call
push
pop
jmp
lock
jno
orb
roll
push
jns
sbb
mov
mov
jle
inc
mov
mov
shll
fsubl
sub
add
mov
xor
add
repz
sub
jb
pop
out
add
push
cmp
adc
lock
push
add
and
jne
pop
stos
cmp
cmp
mov
jg
lock
les
xor
int
fldcw
or
cmpsl
aad
lahf
push
mov
dec
in
cmp
mov
adc
add
rcr
sub
arpl
lea
mov
neg
bound
pop
dec
out
sbb
xor
pop
xchg
test
insl
cs
or
pop
ficoml
or
add
fwait
mov
hlt
xchg
or
jge
mov
rcrb
js
fistl
out
and
pop
mov
cmpsb
xchg
clc
or
in
ja
dec
out
sub
ret
test
push
push
inc
ds
mov
mov
fwait
cltd
ficoml
and
xchg
repz
fcmovnb
adc
and
mov
popf
push
jne
mov
mov
jae
aad
shlb
out
and
xor
ljmp
or
fstpt
es
fs
xchg
xor
adc
xchg
or
push
mov
cld
pop
mov
hlt
xor
jns
dec
or
bnd
mov
js
ja
dec
jae
repnz
int3
roll
scas
leave
rcrb
data16
es
aad
lcall
icebp
mov
jecxz
pop
testl
mov
adc
nop
cwtl
inc
push
xchg
shrb
push
dec
pop
adc
sbb
movsb
push
adc
and
pop
mov
sub
mov
lret
jg
das
pop
out
popa
add
fidivl
push
sub
repnz
shlb
scas
sub
andb
out
mov
and
push
lahf
cmp
sbb
repnz
xchg
andb
in
in
adc
pop
xlat
push
fsubrs
mov
enter
or
push
and
push
push
pop
fs
push
add
add
inc
pop
adc
mov
out
lods
cmp
push
in
or
xchg
sahf
aad
lret
sbb
xor
jl
fwait
lock
fst
sub
sbb
inc
sti
aaa
lcall
adc
jle
arpl
lea
dec
xor
sub
jmp
dec
out
sub
or
stos
xchg
adc
xor
mov
adc
push
int3
and
arpl
insl
mov
pop
mov
popa
and
shl
popa
adc
dec
dec
loop
push
pop
mov
mov
enter
es
dec
mov
out
shrb
jnp
int
jp
test
jmp
iret
mov
jno
pop
and
xor
dec
mov
mov
out
popa
push
add
push
jno
adc
pop
out
jne
jg
pop
sub
lock
adc
imul
shlb
out
dec
cmp
lock
cmp
jg
jmp
aas
pushf
jle
cmpb
stos
inc
movsb
fsts
pop
inc
das
jnp
push
cltd
mov
pop
repz
fsubrp
in
push
insb
xchg
or
in
shl
jnp
orl
imul
mov
and
loopne
pop
pop
xor
add
xorb
pop
inc
mov
mov
ds
push
and
fs
cmpsb
fidivrs
movl
pop
jb
inc
pop
pop
push
ja
xchg
imul
shlb
pop
push
std
mov
xor
mov
enter
scas
adc
out
inc
out
add
jbe
dec
sub
jl
xchg
lea
movsb
push
inc
fcom
xchg
and
or
xchg
xor
in
pop
pop
insb
insb
repz
jecxz
mov
ja
out
hlt
popa
test
repnz
sub
lods
sub
fisttpll
mov
cs
iret
aad
sub
ss
adc
jno
pop
inc
test
shlb
xchg
inc
dec
ss
and
push
add
cmpl
xchg
mov
push
cwtl
jmp
dec
xchg
loop
ret
int3
popf
sub
jnp
inc
in
shl
adc
pusha
es
mov
jno
mov
insl
mov
insl
es
jo
adc
lock
adc
jle
not
and
jp
pop
in
push
jbe
out
mov
mov
daa
es
in
sub
sahf
out
jl
dec
or
adc
fwait
mov
pop
ss
add
inc
stc
xchg
xorl
loopne
test
fwait
push
push
jno
add
xchg
mov
and
scas
dec
adc
pop
sub
jmp
adc
xchg
test
scas
aas
popf
imul
adc
or
xchg
mov
push
pop
jo
les
sbbl
adc
popa
fstp
mov
mov
mov
xchg
xor
pusha
xor
pop
sub
mov
aaa
pop
jb
xchg
pop
dec
sub
jecxz
orl
lcall
adc
les
dec
fisttpl
cmp
mov
xchg
xchg
push
test
test
push
fwait
test
and
adc
and
int
jp
fildll
xor
fsubl
push
adc
sub
adc
xor
push
out
mov
and
xor
dec
es
out
into
mov
push
xchg
jg
js
fld
subb
rorb
jmp
and
mov
out
outsb
bound
dec
rol
sub
pop
ret
in
sbb
das
in
and
sub
sub
sarb
pop
jge
inc
lock
fucomp
and
mov
arpl
imul
arpl
ljmp
adc
out
fucomp
jmp
popa
fnstsw
shrb
gs
push
mov
xchg
mov
aam
pop
sub
push
scas
inc
popf
imul
frstor
fisttps
and
cs
jb
lds
pop
xchg
pop
push
std
or
fldt
and
jbe
jb
into
xorl
enter
clc
push
aaa
out
into
mov
sahf
into
addb
test
test
clc
and
fistl
xlat
int
cmp
inc
mov
leave
inc
adc
and
jne
add
jne
jg
ja
and
push
out
mov
and
mul
bound
push
jg
out
test
dec
push
xchg
jle
fsubrs
dec
fldenv
xchg
cmpsb
pop
sti
into
lods
orl
fisubrs
or
sub
cltd
je
dec
lea
inc
mov
inc
or
out
adc
dec
push
and
adc
arpl
popa
fnsave
scas
xor
test
daa
jl
sbb
sub
adc
or
fs
leave
lea
jmp
jecxz
mov
sub
mov
fnstenv
inc
mov
popa
repnz
push
push
jb
sbb
hlt
sbb
pop
push
or
test
push
mov
adcl
cs
jecxz
push
aam
ret
out
repz
adc
sbb
sti
jle
out
in
imul
fildll
dec
jg
mov
and
sahf
sbb
add
insl
pop
adc
cmp
xlat
push
jecxz
test
jg
jbe
jcxz
pushf
fistl
out
sub
popf
push
hlt
cmpb
and
shrb
lds
int
scas
push
sbb
xchg
mov
enter
mov
bound
adc
cmp
mov
push
mov
js
xchg
jecxz
fsubrs
fldcw
fidivs
cmpsl
and
cwtl
test
lea
imul
dec
aam
nop
enter
cmc
push
xchg
push
mov
xchg
std
out
popa
pop
addr16
es
jecxz
imul
push
out
int
push
sub
xchg
notb
sbb
in
jge
in
insl
adc
arpl
mov
jge
jmp
mov
cld
push
sub
out
popa
inc
cmc
jmp
aaa
data16
cmp
enter
push
data16
fisubrs
insl
xor
imul
scas
cmp
jecxz
pop
mov
test
ret
cmpsl
pop
out
popa
in
in
jae
es
das
mov
es
out
jns
push
jo
or
lret
adc
fldenv
pop
mov
ja
dec
not
xchg
jbe
shlb
push
dec
fbld
sub
mov
sub
fs
mov
in
loope
in
dec
mov
ret
popa
xor
es
ds
dec
call
ja
cmp
adc
dec
dec
in
push
xlat
mov
xor
pop
shrl
js
out
dec
in
sub
cmp
and
add
fbld
lahf
inc
movsb
out
test
es
push
xchg
jle
jns
fsubrl
mov
ja
pop
out
inc
dec
jae
lock
je
push
xor
xchg
and
jnp
lods
xor
repnz
fisttpll
scas
jbe
cmpsl
decl
cmp
loopne
enter
pop
cmp
lock
xor
jne
sub
jl
mov
dec
sub
pop
fs
cltd
ja
and
inc
fs
push
shlb
xchg
mov
add
jno
les
cmp
inc
fcomip
adc
jae
loopne
xchg
dec
inc
xchg
push
jg
dec
cs
testb
inc
out
push
mov
pop
mov
mov
popa
fnstsw
out
popa
push
push
filds
clc
addl
fnstsw
repnz
cwtl
stc
push
xchg
sbbb
push
push
pusha
pop
adc
cmp
bound
sub
mov
mov
fucomi
sub
insl
jl
lods
add
enter
inc
ret
es
and
xchg
add
xchg
out
cmpsl
leave
icebp
sub
sbb
cs
insb
mov
bswap
push
or
cmp
ret
rcr
dec
pop
sub
cmp
add
out
jnp
sub
mov
imul
lds
shr
cmpsb
imul
push
fs
xchg
xlat
fcoms
mov
adc
lahf
and
and
leave
ds
inc
jmp
lret
push
inc
xor
popa
xor
push
adc
leave
push
inc
mov
sub
dec
les
scas
jecxz
jl
dec
in
and
lret
ja
test
test
sti
loopne
enter
bound
insl
add
sbbb
enter
out
mull
imul
pop
cs
aad
add
dec
loop
aam
outsb
push
sarb
jl
dec
or
adc
lahf
daa
mov
mov
lods
loopne
adc
push
movl
test
cmp
or
les
movsb
pop
sub
clc
pop
sbb
insl
pusha
mov
fnstsw
fimull
fisttps
and
movsb
mov
dec
jbe
ss
lds
mov
pop
fcmovnb
cmp
jno
jne
out
fstl
sar
dec
inc
mov
xor
subl
in
sbb
sti
test
test
aas
jo
sarb
adc
xor
sahf
popa
adc
icebp
xchg
push
push
sbb
inc
mov
inc
addr16
dec
idiv
sub
in
shl
loop
mov
es
mov
mov
mov
adc
clc
xchg
and
ficompl
repz
rclb
dec
dec
loopne
mov
jmp
je
cli
scas
inc
test
std
js
test
loope
enter
sub
add
cmp
jecxz
lahf
dec
bound
repz
mov
loop
rcrb
enter
pop
pop
jg
xor
aad
sub
mov
dec
bound
xor
adc
std
xchg
in
js
pop
out
xchg
negb
dec
icebp
enter
sbb
jmp
test
pop
sub
mov
push
clc
sbb
dec
out
sub
andl
xor
in
jmp
adc
jb
fisubrl
enter
mov
clc
in
bound
aaa
xor
cwtl
movsb
push
xchg
test
in
cmp
cmp
iret
bound
adc
aaa
loope
dec
out
lcall
xor
lcall
mov
loopne
sbb
dec
mov
add
aam
testb
fldt
ds
push
shrl
push
arpl
push
rcrb
call
sub
sti
test
ret
sub
adc
pop
mov
popa
fstp
cmp
outsb
sub
or
jb
je
popa
push
test
pop
enter
cmp
loope
mov
push
dec
roll
orb
leave
sub
mov
btr
out
xchg
mov
scas
xchg
pop
inc
adc
insb
and
jle
pop
ret
out
popa
fstl
push
in
fisttpll
pusha
xor
test
data16
xchg
hlt
cmp
push
jb
test
or
lahf
addr16
xchg
fnstcw
add
add
cmp
in
loopne
dec
xchg
rorl
ja
adc
mov
fmul
subb
nop
inc
pop
adc
jge
or
out
popa
fstp
icebp
pop
push
cmp
add
pushf
orl
enter
shrb
inc
repz
lcall
ret
dec
es
push
xchg
movsb
push
dec
push
test
out
inc
mov
sbb
ds
jp
and
bound
movl
loope
popa
fnstsw
out
popa
push
adc
mov
xor
ret
dec
lds
push
or
inc
jns
fcmovnb
cmp
push
jg
push
popf
xor
mov
inc
test
div
ja
jb
movsb
outsb
jns
mov
les
mov
je
pop
out
xchg
push
data16
in
lock
or
popa
loopne
push
jno
fsubrl
lds
add
call
mov
arpl
sub
dec
or
mov
arpl
sub
iret
mov
fidivl
xor
jecxz
dec
mov
lock
fisttpll
jl
sbb
and
shlb
fsubl
pusha
inc
rcrl
sarb
ljmp
or
jmp
iret
dec
stos
cmpsl
mov
dec
jg
mov
pop
popa
mov
push
cmpsb
xlat
sub
jbe
push
xor
add
jmp
in
sub
pusha
sub
es
sub
in
in
fsubrs
pop
inc
mov
cmc
jp
and
pop
and
insb
fldenv
test
gs
fstp
xor
cmpsl
add
jbe
pop
out
ss
fwait
push
pop
and
insb
pop
add
enter
pop
add
inc
cmp
sub
jnp
lods
enter
loope
enter
inc
or
adc
xchg
sub
adc
les
mov
cs
imul
push
cmp
xchg
stos
jno
sbb
fildll
jne
inc
jmp
fnstsw
pop
insb
sub
xchg
fidivl
das
pop
lahf
sub
pusha
sub
pop
sub
enter
insb
mull
in
imul
loop
adcl
cmpsl
dec
out
fldl
gs
pop
dec
stc
mov
nop
pop
adc
andl
xchg
pop
adc
out
jnp
adc
xor
jne
cmp
mov
dec
enter
out
movl
fs
mov
mov
fs
mov
sbb
lcall
cltd
lea
cmp
inc
push
jns
fcmovnb
mov
fs
call
jnp
bound
mov
mov
pop
mov
mov
es
out
popa
.byte
