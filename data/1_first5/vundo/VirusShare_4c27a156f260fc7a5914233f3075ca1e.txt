jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
xchg
pop
or
or
push
lds
or
add
or
add
add
or
add
cwtl
add
add
rolb
addb
add
add
add
add
add
add
mov
add
add
add
sbb
add
add
add
add
add
pop
add
add
add
add
and
bound
sbb
add
movsl
add
add
add
inc
add
add
addb
add
pop
add
pop
add
add
cmp
das
add
cwtl
add
mov
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
inc
add
add
add
add
add
add
cmp
aas
add
cwtl
add
adc
adc
pop
add
add
add
add
out
pop
add
add
add
add
add
mov
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
repz
loop
stos
add
cwtl
add
scas
add
add
add
add
add
and
roll
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
add
daa
add
pop
add
inc
add
add
add
add
add
add
add
add
add
js
aas
add
add
add
add
add
add
add
pop
add
add
add
add
xchg
add
add
add
sbb
add
add
sti
add
add
add
add
add
addl
jbe
push
add
add
add
add
add
add
add
add
add
cwtl
add
movl
das
add
js
lret
add
add
add
and
inc
add
add
add
addb
add
add
sbb
add
add
imul
pop
add
add
add
mov
add
add
add
inc
add
sbb
add
cs
add
add
dec
add
add
add
add
add
add
add
add
add
adc
jl
add
add
addl
add
sbb
and
add
add
add
add
xor
inc
add
add
add
add
add
add
add
add
dec
add
add
addl
cwtl
add
dec
add
lret
add
add
add
add
add
add
add
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
cwtl
add
bound
flds
cwtl
add
add
sbb
add
es
add
add
add
add
pushf
add
add
mov
add
mov
add
push
add
add
sbb
add
add
add
add
pop
add
add
add
add
add
add
add
pop
mov
cld
ret
xchg
pop
push
xlat
cld
or
dec
xchg
js,pn
or
pop
mov
push
jmp
xor
cmpl
out
jp
icebp
cmp
ret
insb
jmp
outsb
enter
dec
push
ret
add
jbe
sub
lds
mov
lock
mov
xor
and
out
jns
xchg
aaa
les
jnp
cmpb
dec
testl
add
lcall
mov
mov
cmpb
test
xor
stos
push
mov
and
jno
and
gs
clc
ljmp
add
gs
xchg
xchg
and
pop
adc
ss
addb
push
hlt
jle
faddl
lcall
mov
in
das
push
aad
outsb
outsl
sbb
push
roll
xchg
add
mov
or
dec
jne
dec
loope
inc
xor
add
and
sub
jb
or
jg
push
mov
cs
pop
nop
cmp
mov
lock
cmp
xchg
xchg
add
insl
inc
lds
cmp
jbe
and
cmp
sbbl
inc
pop
pop
test
mov
imul
outsb
in
popa
pop
outsl
mov
jecxz
cmpsb
insl
push
xchg
cld
out
xor
mov
mov
fmuls
aad
popl
frstor
iret
les
cmpsb
cltd
add
fwait
cli
or
push
and
sbb
pop
outsl
inc
sub
cmp
test
imul
sahf
mov
jae
inc
add
mov
dec
mov
notb
clc
xchg
dec
xor
hlt
rcl
mov
push
xchg
nop
in
cmp
xchg
jmp
xchg
test
and
lods
sub
jno
imul
lret
sbb
js
mov
lcall
mov
xor
adc
fnstsw
mov
adc
sbb
mov
sub
mov
sub
outsb
xor
jle
push
repnz
cmpsb
mov
icebp
sub
inc
adc
mov
pop
add
push
or
push
dec
inc
stos
mov
dec
xchg
xlat
push
popf
daa
lds
shlb
loopne
gs
ret
push
insb
clc
sub
mov
test
xor
jp
push
scas
stos
subl
inc
fmul
leave
mov
cld
mov
js
pop
test
or
jno
push
push
bound
in
mov
push
repnz
repnz
and
aaa
xchg
aam
fcmovu
jp
fcomps
adc
mov
cmpsb
test
or
out
mov
add
mov
xchg
mov
cli
adc
inc
lods
test
mov
xchg
add
adc
ret
pop
cltd
or
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
lret
pop
cmpsl
daa
mov
leave
inc
mov
ja
cmp
popf
daa
cmpsl
aaa
mov
push
divl
popl
xchg
pop
cmpsl
daa
mov
movl
adc
pop
xchg
or
xor
addr16
negl
pop
pop
and
jno
xlat
inc
lahf
push
lret
addr16
pop
xchg
inc
ret
orl
add
mov
jecxz
rclb
xchg
mov
xor
adc
sub
mov
mov
mov
rolb
dec
ds
int3
out
jae
adcl
mov
out
cli
cmpsb
xlat
pop
xchg
cmpsl
cmc
aaa
lock
or
mov
xchg
xchg
fsubs
xchg
push
cmp
mov
add
xor
popa
movb
out
cmc
xchg
adc
push
lret
aaa
jb
mov
add
push
pop
fdivs
cmp
push
mov
js
sbb
xor
mov
push
aaa
popl
pop
add
add
adc
dec
or
fsubl
push
incl
aaa
dec
ret
xchg
out
or
movl
ja
xchg
mov
dec
xlat
addr16
mov
pop
loope
jecxz
fnstenv
add
add
push
mov
push
cs
nop
adc
pop
jnp
outsl
jl
scas
add
adc
loop
in
rcrb
mov
mov
xlat
inc
testb
xlat
push
out
divl
xchg
xchg
daa
cmpsl
aaa
mov
push
xlat
addr16
testl
inc
xlat
push
out
divl
xchg
xchg
daa
cmpsl
aaa
mov
push
xlat
addr16
testl
mov
clc
sub
push
cmc
jmp
xchg
dec
mov
cmpsb
sub
outsl
lods
xchg
shlb
mov
xchg
jmp
lret
nop
mov
mov
inc
dec
fidivrl
pop
xor
add
dec
and
scas
mov
lds
cmpl
jo
jl
and
fdivp
sbb
or
movsb
imul
pop
std
and
mov
lock
xor
and
adc
outsb
out
jns
mov
sbb
scas
push
rcrb
testb
xor
out
sbb
xchg
adc
xor
pop
movsl
ljmp
scas
xor
mov
je
mov
jb
or
lock
mov
inc
add
cwtl
jl
out
inc
mov
sub
out
lret
aad
cmp
mov
and
stos
pop
gs
cli
jp
daa
pop
sbb
lds
rcrb
pop
and
neg
out
or
fdivrs
inc
fwait
hlt
iret
lcall
sbb
cmpsl
mov
xchg
sbb
xchg
dec
fiaddl
les
lea
mov
and
cmp
test
mov
lods
stos
dec
fbstp
sbb
inc
push
mov
inc
or
mov
lea
xchg
or
int3
mov
cs
out
lahf
test
es
fndisi(8087
clc
cmp
bound
push
fcomps
jle
loopne
cld
test
mov
push
push
sbb
movsb
insb
jl
into
leave
stos
rcrl
je
and
mov
adc
or
imul
add
sub
inc
aad
ret
ljmp
sahf
adc
call
cli
daa
ret
mov
and
pop
ficoms
sbb
mov
mov
lea
jle
adc
mov
cmp
gs
adc
or
lods
cld
inc
xchg
push
dec
test
push
or
mov
inc
lods
sysenter
jecxz
sub
inc
dec
mov
insl
pop
adcl
pop
jne
scas
adc
stos
invd
push
lods
dec
cs
js
cli
sbb
fstpt
cs
popf
dec
mov
in
push
pop
test
cmpb
sub
insb
mov
dec
sti
fidivrl
jnp
out
aam
xor
test
mov
xchg
mov
dec
dec
ljmp
sub
bound
test
mov
jecxz
jbe
sbb
mov
mov
inc
jmp
lret
cmp
xor
pop
stos
and
movsl
addr16
mov
mov
leave
leave
mov
push
or
aad
pop
xor
xchg
sbb
dec
and
aas
mov
addr16
push
add
movsb
adcb
das
dec
cmc
adc
pop
jmp
push
cli
push
sbb
mov
mov
sub
rcl
cmp
dec
rcll
lret
sbb
pusha
sbb
push
and
int
pop
jge
lret
sbb
nop
stos
ljmp
lret
jo
mov
jg
mov
mov
cmpsb
mov
sbb
cmc
imul
fnstenv
loop
int
js
dec
pop
cmc
lcall
out
push
aas
mov
cmp
jmp
dec
into
fs
sub
jnp
stos
xor
in
lcall
xor
cmp
call
stc
cmp
or
xor
inc
fcmovnb
out
xor
out
pop
adc
dec
insl
leave
add
iret
cmc
scas
mov
adc
mov
add
scas
je
push
out
gs
push
mov
inc
xchg
adcl
test
inc
mov
or
adc
xchg
not
jb
dec
xchg
jno
sbb
inc
jno
adc
cmp
and
push
jno
or
cwtl
adc
addr16
loopne
out
jp
adc
xchg
repz
js
call
xlat
mov
sbb
ficomps
sub
cmp
int3
push
adc
out
cltd
mov
popa
jge
adc
test
sarb
add
sbb
push
hlt
aaa
les
add
cmp
mov
cmpl
push
arpl
mov
popf
push
sbb
lods
mov
jo
nop
orb
jmp
aad
dec
outsl
fsubrp
enter
mov
in
adc
fdivs
outsl
mull
push
mov
add
in
xchg
push
dec
outsl
cli
js
adc
sub
push
fincstp
subl
mov
iret
pop
and
rclb
ljmp
lock
mov
sub
or
fbld
jle
out
pop
cmpsb
jns
popf
popa
fwait
mov
dec
xor
dec
cmp
xor
xor
jge
aam
sbb
jno
add
mov
hlt
cmp
adc
inc
and
sbb
test
pop
out
mov
out
stc
dec
or
dec
int
mov
and
dec
and
stc
test
jnp
mov
mov
loope
pusha
rcll
lock
xlat
dec
idivl
fisubrs
add
adc
pushl
add
je
cld
cltd
jbe
inc
dec
loopne
pushf
sbb
mov
xchg
jb
in
out
mov
pushw
repz
jno
or
test
mov
test
inc
gs
ja
fs
sbb
or
sub
mov
stc
and
fwait
push
test
cmp
lret
repz
mov
xor
iret
add
dec
in
xchg
andb
fst
mov
jo
ss
adc
test
adc
dec
adc
aam
push
add
and
xchg
push
call
or
pop
mov
and
pop
inc
mov
add
or
ds
mov
ljmp
adc
add
je
mov
scas
mov
pushf
jo
cmpsb
lcall
jecxz
add
pop
cltd
out
or
out
adc
sbb
inc
ficoml
push
inc
xor
inc
das
mov
fiaddl
adc
es
cltd
mov
les
cmp
lods
and
ret
mov
inc
and
inc
imul
cmpsl
sub
iret
xor
jg
mov
orb
repnz
out
inc
pop
mov
daa
aam
push
std
loop
sbbb
leave
out
lea
add
and
int3
pop
adc
sar
popf
ret
mov
sub
mov
dec
fwait
enter
aam
loope
aad
sbb
faddl
mov
dec
data16
out
cltd
movsb
xchg
dec
pop
ficompl
repz
in
movsb
cmp
lcall
mov
push
jp
jo
rcr
mov
in
cs
cmp
xor
cmp
xchg
sub
push
add
jae
push
loopne
add
in
xor
sbb
gs
add
mov
das
fdivrp
pop
xor
jmp
inc
outsl
in
adc
orl
imul
mov
pop
pop
jns
std
iret
xor
cmp
mov
mov
jecxz
adc
push
pusha
lds
sub
dec
add
and
push
mov
sub
test
jle
xchg
loopne
mov
xor
push
fsts
adc
mov
xchg
popa
inc
ret
mov
ficompl
insb
lret
dec
es
int3
roll
push
hlt
mov
xchg
popf
push
lret
movsb
leave
lahf
and
outsb
pop
or
imul
and
sti
push
mov
xor
in
stc
add
sbb
adc
jp
adc
pop
jmp
ljmp
iret
add
adc
repnz
mov
cwtl
or
add
stos
aad
pusha
adc
popf
hlt
fildll
cmp
aam
sbb
lods
daa
adc
push
mov
sub
fwait
and
fucomip
jg
cmp
outsb
lcall
clc
popf
sub
out
repz
icebp
lods
inc
or
pop
xor
loope
and
sbb
inc
mov
test
fsts
xchg
pop
popf
gs
pop
mov
xor
out
sbb
pushf
jo
sub
or
das
stos
jbe
clc
aaa
insb
test
sbb
xchg
fildll
into
xchg
xor
into
mov
in
pop
bound
inc
sub
or
das
stc
outsb
pop
out
mov
fsubl
jns
mov
xchg
or
stc
dec
mov
fcompl
cmp
sbb
jl
mov
cld
dec
outsl
or
and
mov
loopne
xor
ret
js
in
adc
pusha
addr16
dec
ljmp
sub
push
inc
cld
inc
in
bound
movsl
mov
or
aaa
test
mov
jmp
pop
fidivs
testl
roll
aaa
ss
filds
arpl
jmp
pusha
pop
jne
add
fldl
jb
cwtl
iret
cmpsb
imul
imul
out
or
push
or
data16
inc
jl
push
add
push
in
mov
loope
mov
js
push
mov
loopne
data16
jo
inc
mov
rcr
in
das
mov
pop
daa
xchg
mov
inc
push
lods
fisubrl
mov
mov
xlat
add
mov
sub
int3
adc
cmp
xor
adc
mov
jecxz
inc
push
decl
pop
xchg
mov
stc
dec
sbb
cwtl
sbb
mov
pop
test
imul
mov
jno
pop
aad
cmp
adc
inc
mov
cmp
in
pop
adc
shrl
push
je
jg
push
jnp
les
or
inc
and
xor
inc
lcall
adc
xlat
jmp
pop
addb
mov
lret
enter
jl
mov
jge
aaa
push
jns
out
lcall
mov
movsb
sbb
inc
pusha
or
mov
scas
jecxz
jae
je
rcrb
sub
popf
mov
pop
lret
inc
fdivrl
cmp
lret
mov
incb
mov
push
mov
leave
or
push
mov
sahf
shl
lret
cmp
pop
xchg
jge
pop
mov
cwtl
mov
add
mov
mov
dec
xchg
aas
cmp
and
dec
cld
outsb
inc
mov
inc
cmp
add
test
mov
add
clc
negl
gs
adc
push
push
dec
in
lret
mov
inc
and
data16
out
pop
or
pop
mov
push
negl
add
in
jg
popa
jg
fidivl
mov
push
mov
xor
repz
sbb
jbe
or
sub
sbb
and
cmp
or
sub
test
lcall
ret
jmp
ds
dec
pop
insb
test
test
sbb
adc
pop
cmpsb
out
mov
or
xchg
lods
outsb
dec
icebp
cmp
aad
test
pop
and
inc
jmp
out
jb
stos
int
jnp
aas
loop
pop
mov
or
mov
movsl
ljmp
push
mov
and
push
je
sub
scas
test
repnz
popa
pop
js
sbb
clc
arpl
in
mov
jmp
xchg
inc
sub
jno
in
add
jg
shll
pop
inc
movsb
adcb
push
sub
movsl
sub
sub
decb
pop
in
push
pop
stc
ss
sub
push
inc
xor
ret
add
sub
int
dec
in
icebp
push
test
out
adc
inc
xor
popa
mov
bound
pop
ss
insb
sub
cltd
scas
mov
ret
mov
cmp
add
lock
scas
pop
xchg
jo
jg
pop
mov
cmp
mov
ret
jb
movsb
mov
scas
mov
movsl
mov
sbb
push
mov
push
inc
aad
push
add
sub
adc
rol
inc
pop
xchg
jl
adc
mov
pop
cmp
pushf
arpl
mov
push
ret
mov
mov
or
hlt
fmul
hlt
arpl
pop
and
lods
xlat
mov
hlt
dec
push
push
sub
outsb
pusha
jmp
aad
cmc
pop
test
xor
add
cmp
aam
inc
push
mov
enter
and
mov
push
lock
shl
orps
mov
out
mov
lret
scas
ds
pop
and
repnz
mov
mov
insl
dec
adc
je
jbe
pop
fs
jmp
scas
lret
xlat
movsb
mov
xchg
adc
inc
shl
imul
mov
or
pusha
add
leave
out
jno
scas
dec
sub
loope
fs
inc
push
stc
adcb
das
pop
lods
mov
mov
xchg
popa
mov
jne
int
and
cmc
sbb
push
jo
dec
out
insb
movsb
or
jle
dec
cmp
and
daa
roll
and
jo
push
lahf
jne
sub
add
call
sbb
jnp
pushf
or
push
sahf
std
mov
mov
add
cltd
addr16
hlt
adc
add
add
or
lea
push
mov
or
and
cmp
cwtl
and
clc
out
sahf
fwait
jno
jp
and
sub
push
pushf
sub
cmp
or
cmp
adc
fs
sub
inc
inc
sbb
out
push
icebp
pop
ret
test
mov
addl
outsb
cmc
push
jecxz
add
out
pop
xchg
adc
outsl
imul
mov
imul
xlat
test
mov
push
out
sbb
loope
int
mov
or
jns
mov
add
pop
cmp
in
cmp
ds
scas
pop
fidivrl
sub
mov
loopne
add
sbb
rorb
hlt
rcrl
sub
jnp
mov
pushf
cltd
push
xor
push
daa
cmp
inc
ret
push
xorb
loop
shrb
out
cmp
add
jne
mov
leave
or
es
or
cmpsb
xor
test
leave
ds
inc
jnp
sub
push
repz
pop
arpl
mov
xor
pop
adc
into
xor
inc
add
in
push
daa
push
cmp
inc
fildll
mov
and
jbe
cmpl
lods
cmpsl
jmp
push
mov
lret
inc
inc
sbb
sahf
cmp
repz
dec
sub
sub
cmp
cmp
stos
mov
data16
add
add
ds
arpl
mov
sbb
sub
inc
xor
fcmovu
cltd
rorb
sub
in
aas
jo
stos
pushf
js
push
dec
ret
fisttpl
neg
fcmovnbe
bound
int3
jno
lods
xor
nop
pop
test
arpl
je
setns
inc
rcl
aaa
lcall
addl
outsl
dec
in
aad
movsb
mov
add
hlt
test
dec
jo
lcall
jns
in
xchg
fwait
pop
adc
decl
cmp
insb
test
data16
mov
xor
pop
inc
outsb
fidivrl
insl
enter
cmp
dec
stos
aam
sub
call
push
and
fwait
aam
fwait
ret
inc
xor
inc
addl
cmp
in
aaa
dec
sbb
cmp
and
cmp
test
mov
cli
mov
fs
or
je
cmpsb
cmp
arpl
lods
add
call
push
lea
imul
xchg
incb
pop
mov
push
pop
inc
and
rcll
sub
push
test
in
pop
cmpsl
std
mov
add
lahf
and
fwait
pop
jp
mov
adc
les
xrelease
jbe
jecxz
jo
mov
in
out
adc
ljmp
scas
add
push
leave
sub
xchg
mov
repnz
hlt
cmp
shrl
xchg
mov
push
daa
and
mov
test
dec
or
ror
cmp
fcoml
sbb
ret
cwtl
dec
insl
jecxz
add
mov
inc
in
lcall
sti
xchg
imul
adc
push
fsubl
iret
ret
inc
loope
jnp
sub
cmp
pop
push
cmp
dec
inc
xor
sbb
xchg
adc
adc
lock
and
int
adc
data16
filds
cmpsb
test
sbb
xlat
push
or
cmp
jnp
dec
xchg
test
loop
jne
cli
sbb
cmp
test
cmpb
shrb
push
rcr
mov
cmp
pop
sbb
stos
jg
jne
mov
pop
fwait
call
dec
xchg
aaa
cwtl
aam
and
cld
adc
pop
jo
push
fstps
fnstsw
mov
push
js
lock
lds
xor
xor
popf
vmovaps
mov
pushf
push
cltd
mov
jo
xchg
jo
loope
outsb
pop
mov
sub
dec
dec
cmp
xor
mov
imul
outsl
dec
lds
int3
mov
dec
push
mov
stos
call
rcll
int3
scas
jb
fdivr
rcll
mov
mov
lret
int3
imul
subb
repnz
push
jmp
mov
adc
pushf
pushf
push
mov
arpl
or
jg
stc
or
fdivs
hlt
sahf
gs
jno
xor
js
fmuls
pop
adc
or
leave
or
dec
loop
push
xor
ljmp
pop
mov
clc
mov
mov
push
cs
sarl
fs
loop
leave
push
push
cmpsl
dec
jmp
mov
loope
dec
scas
sbb
movsb
mov
loop
push
outsl
mov
int
dec
sbb
stos
sbbl
icebp
cmp
jbe
fwait
mov
decb
xchg
push
xchg
scas
cmp
out
fdivrl
fisttpl
mov
mov
pop
testl
rorl
jp
or
mov
icebp
je
leave
jmp
mov
testl
loopne
jne
insb
push
jl
or
cmp
adc
mov
push
xchg
or
xor
test
test
popa
add
xchg
adc
sub
jne
xchg
arpl
add
inc
div
mov
push
mov
data16
xor
push
ja
stos
out
scas
dec
pop
add
stos
sbb
xor
movsl
mul
repnz
pop
mov
dec
inc
cld
jno
cmp
pop
jns
dec
pop
dec
mov
jno
adc
scas
xchg
or
pop
int3
xor
jp
lahf
inc
mov
clc
or
pop
mov
imul
fs
and
int
pusha
mov
or
jg
dec
and
popf
jg
ret
subb
mov
jno
pop
pop
add
insl
mov
in
cmp
sub
test
fs
repz
int
cmp
push
enter
into
movsb
les
inc
xlat
fistps
es
out
movsb
lret
inc
xchg
pop
dec
outsl
dec
pop
adc
lods
and
jmp
mov
pusha
aas
sub
adc
add
test
xor
lret
loop
xchg
sbb
xchg
pop
lcall
aam
sarl
outsl
xchg
jns
adc
or
xchg
mov
inc
shlb
lcall
call
adc
movsb
sbb
fisttpll
stc
pop
pop
insl
idivl
es
pop
arpl
xchg
jb
add
pop
jbe
popa
add
and
or
add
ljmp
push
jmp
aad
cmp
inc
mov
popf
cmp
lahf
rcrw
jnp
xor
inc
push
xor
inc
repnz
mov
add
fcompl
fildl
lods
push
inc
and
adc
sarl
idivb
testl
adc
enter
push
fsts
imul
dec
add
cmpsl
outsb
inc
mov
aad
adc
fidivs
ds
add
shrl
dec
mov
adc
out
orb
jl
or
xchg
push
outsl
push
cmc
fcoml
pop
and
jo
nop
xlat
ret
je
jbe
pop
ucomiss
xor
xorw
xchg
outsl
dec
cmp
je
ljmp
adc
cmp
scas
mov
sub
shrb
ja
cld
shrl
aaa
data16
mov
loop
lea
adc
mov
clc
pop
mov
push
pop
sub
insb
sbb
jl
mov
sbb
jne
push
push
and
jne
mov
mov
add
loope
popa
pop
sbb
cmp
test
mov
or
jae
lret
divb
cmpsb
mov
mov
out
push
ja
fs
in
and
insl
xchg
mov
inc
xlat
push
out
divl
xchg
xchg
daa
cmpsl
aaa
mov
push
xlat
addr16
testl
inc
xlat
push
out
divl
xchg
xchg
daa
cmpsl
aaa
mov
push
xlat
addr16
testl
inc
rcll
divb
xchg
xchg
cmpsl
xor
arpl
inc
negl
daa
lahf
aaa
movl
mov
xchg
cmp
xor
sub
sahf
sbb
sub
cmp
push
fidivl
mov
cltd
add
pop
or
cmp
imul
les
xor
dec
jmp
sti
push
cmp
dec
sub
cmp
dec
ljmp
mov
mov
pop
lret
or
push
jg
jp
sub
push
iret
inc
aad
xor
xchg
mov
mov
adcb
test
aam
push
dec
iret
pop
inc
xchg
add
push
notb
inc
jp
dec
fistl
hlt
bnd
inc
jecxz
pop
push
mov
mov
sbb
aam
test
sti
lods
or
cmp
and
movsb
cli
xor
jnp
jnp
push
ljmp
fcmovnb
adc
sahf
ja
inc
push
mov
jnp
xchg
cmp
push
mov
xchg
pop
fidivl
ficompl
sub
out
gs
adc
les
xchg
sarb
iret
mov
int3
dec
ficomps
in
roll
xor
add
push
sbb
dec
ficompl
imul
js
sbb
push
lret
data16
lcall
jg,pn
cmpsl
add
ljmp
fcomps
lcall
fsubrl
dec
leave
jp
mov
cwtl
cs
ds
jnp
jg
push
mov
sbb
push
pop
push
xchg
pop
lret
jnp
mov
fwait
or
pop
fisttpl
jp
push
lcall
dec
ficompl
imul
ljmp
mov
dec
jmp
sti
push
lcall
fwait
mov
into
xchg
std
jno
popf
push
inc
fisubl
ljmp
movsl
popa
xchg
cli
dec
jnp,pn
jno
add
dec
lcall
jnp
lcall
jl
imul
movsb
and
mov
insb
push
sbb
adc
test
pushf
xchg
icebp
pop
jns
xor
fiaddl
push
jo
inc
jp
jl
jge
mov
xor
lock
test
lods
cmpsl
loopne
pop
cmpsb
rcrl
adc
ret
or
xor
call
push
xor
push
jle
mov
je
addr16
rclb
inc
or
in
out
outsb
mov
dec
inc
punpcklwd
xchg
adc
mov
mov
mov
shrl
inc
mov
insb
jl
subb
mov
fcomps
idivb
push
hlt
and
xor
and
sub
js
out
inc
loope
call
fldenv
ljmp
jae
std
push
pop
jne
inc
or
idiv
stc
xor
daa
dec
imull
inc
adc
adc
fistl
stos
mov
cmp
dec
addr16
addr16
sbb
push
imulb
loope
dec
jne
filds
repnz
adc
stc
xchg
cltd
fs
xor
and
or
sahf
aaa
loop
mov
mov
xor
divl
adc
add
repz
js
push
xor
lahf
les
push
jno
dec
shll
mov
out
test
and
mov
add
sub
ret
stos
ja
ds
outsb
leave
push
dec
xchg
xchg
mov
jl
inc
in
lret
into
rclb
push
inc
sbb
inc
jge
int
mov
inc
xor
ret
push
fcomip
push
jb
mov
fidivl
movsb
dec
das
cmp
cli
es
mov
jne
dec
xor
pop
dec
rolb
mov
push
fcoml
pop
imul
pushf
fstpl
inc
cmp
mov
mov
push
cmp
dec
shll
iret
mov
mov
add
icebp
jmp
stc
mov
inc
sub
dec
int
lar
stos
cld
fcmovne
idivl
leave
aam
xchg
pop
jne
cld
inc
mov
je
or
cmp
push
ja
jns
inc
cwtl
push
cmp
out
or
cmp
popa
jo
lock
enter
or
add
xchg
jne
inc
push
dec
out
sar
aaa
popf
mov
insl
push
cwtl
pop
dec
test
dec
push
add
xor
ret
lcall
in
test
dec
roll
pop
push
xchg
scas
ja
xor
xchg
mov
mov
loope
daa
mov
and
jge
fstps
mov
fnstsw
xchg
pop
insl
jno
sub
aad
fwait
movsl
lret
jecxz
adc
fisttps
les
jp
addl
jo,pt
fldenv
pusha
adc
aam
sti
scas
lds
jmp
cltd
xor
out
stc
call
mov
dec
shlb
imul
into
sub
and
jg
out
movsb
in
dec
mov
xchg
push
or
sbb
xchg
lods
into
mov
loopne
jno
lock
int
out
fwait
mov
add
or
pop
movsl
add
fs
mov
mov
or
inc
pop
js
mov
imul
inc
nop
pop
mov
call
cli
jl
fsubrl
sub
fsub
or
stos
subl
arpl
mov
outsl
popa
std
push
mov
jecxz
iret
fs
pop
arpl
inc
push
jmp
push
rolb
add
popa
xor
jbe
inc
jbe
dec
pushf
cs
outsl
outsb
int3
cmc
lret
mov
das
out
imul
ljmp
stos
iret
pushf
outsb
aas
pop
addl
mov
ljmp
jo
aam
cwtl
addr16
add
push
mov
and
xchg
xorb
int3
jp
adc
jbe
dec
in
or
lock
add
jle
xchg
inc
add
insl
sbbl
dec
adc
lds
adc
jbe
divb
push
std
xchg
add
mov
xor
pop
cmpl
and
adc
xchg
mov
jne
mov
push
sbb
cs
jecxz
arpl
test
out
fstp
in
pop
fidivl
fstpt
ss
ds
lret
sti
push
mov
add
jne
mov
sub
mov
scas
stc
sbb
mov
mov
jmp
inc
and
pop
loop
xor
mov
mov
call
in
push
sahf
mov
inc
ds
fstpl
mov
stos
lea
xchg
insb
or
push
fwait
cmc
cwtl
fstpt
lret
in
jnp
cmp
call
pop
push
pop
xor
int
in
mov
test
sub
data16
insb
lock
into
test
pop
xchg
repz
jg
leave
jno
mov
cmp
fdivr
shrl
sbb
xor
pop
pop
aas
addr16
fs
test
push
lcall
xchg
cmp
shl
and
ss
je
test
gs
into
jo
stos
rolb
mov
mov
popa
or
push
gs
fwait
push
sub
lods
out
int
call
mov
add
adc
mov
mov
mov
inc
mov
sahf
mov
mov
cmpsl
cld
or
mov
push
nop
pop
sbb
out
add
cli
jmp
add
hlt
sub
pop
andl
adc
das
sub
pop
push
in
jb
scas
loopne
mov
pop
mov
movsl
test
cwtl
and
sbb
hlt
push
fldln2
sbb
outsl
sbb
out
push
xor
faddl
data16
jle
jmp
pop
imul
shlb
dec
js
and
mov
push
addb
out
mov
int3
xchg
mov
fisttpll
fidivrs
add
inc
test
dec
mov
xchg
je
mov
dec
xchg
xor
adc
and
pop
fsubrp
mov
dec
mov
adcl
mov
call
push
pop
pusha
nop
mov
jmp
movsb
and
add
xchg
das
out
sub
je
shrl
pop
test
mov
xlat
movsl
add
dec
enter
add
sub
fcmovne
es
mov
aam
test
ja
xchg
xor
es
cld
das
jg
fsubrs
popa
xor
stc
dec
cmp
xchg
xchg
sub
xchg
shll
ljmp
sti
enter
in
xchg
insl
jbe
or
loope
xchg
jo
pushf
push
and
mov
scas
jns
test
inc
inc
icebp
mov
dec
jge
and
cmp
push
jecxz
xchg
out
nop
mov
inc
pop
daa
je
xchg
xor
aam
test
mov
mov
sub
inc
mov
subb
lcall
pop
jno
add
push
xchg
jmp
dec
jmp
push
or
cmc
mov
std
stos
scas
shrb
cmp
das
cld
xchg
das
bound
jmp
aas
push
cld
stos
mov
and
shlb
cwtl
lcall
insb
scas
lcall
daa
inc
add
cmp
sti
popa
fs
into
out
xchg
add
dec
adc
xchg
int
push
inc
mov
popf
xchg
jo
jle
sarl
pop
out
nop
mov
cmp
in
fisubrl
fisttpl
test
lret
mov
pop
jnp
pop
push
repz
inc
push
cmpl
rcll
sub
dec
arpl
add
inc
cmp
arpl
mov
popf
fdivr
xchg
push
stos
sub
out
dec
aad
loop,pn
xor
fistpll
jae
and
fwait
jecxz
cmp
dec
call
stos
daa
lahf
cmp
int3
pop
dec
cmp
xchg
lods
pop
out
inc
add
movsl
sarl
add
loope
sti
cmpsl
pop
test
fistl
add
xchg
andb
push
mov
in
or
inc
mov
dec
stos
fsubr
fs
clc
mov
in
adc
push
jnp
add
hlt
mov
adc
rcrl
fcoms
dec
shlb
ss
jmp
dec
sbb
inc
out
dec
stos
aad
cmp
pop
cmp
jae
dec
add
lret
mov
nop
in
fidivs
rcll
cmp
lds
mov
push
mov
outsb
sahf
rcrb
dec
adc
pop
pop
mov
movsb
mov
test
sbb
or
push
test
mov
adc
test
or
push
loop
inc
xor
ret
in
wbinvd
scas
mov
addr16
xchg
lcall
jp
inc
or
aam
js
add
inc
xor
mov
pop
push
push
cmpsb
or
scas
ret
call
mov
test
cmp
lock
push
fdivrl
mov
xor
inc
test
std
mov
fistps
add
push
xchg
aaa
pusha
arpl
mov
es
ret
rol
lea
testl
jge
inc
fiaddl
pop
mov
pop
dec
stc
sub
sub
lahf
mov
cwtl
clc
sub
and
jbe
or
stos
mov
dec
dec
jl
mov
cld
lcall
or
cld
ds
inc
lret
xchg
mov
cmp
stc
inc
cmp
mov
fcomps
jne
dec
pushf
lahf
pop
push
popa
adcb
mov
in
pop
or
cmp
dec
imul
lds
dec
inc
mov
sahf
push
cmp
inc
xor
sub
xlat
adc
sub
add
dec
adc
inc
mov
sbb
inc
cmc
test
pop
push
call
jb
cmp
lods
inc
cwtl
adcb
lds
pusha
mov
in
cmp
lret
xchg
leave
cltd
cmp
adc
jb
in
jo
test
gs
push
outsb
frstor
sbb
pusha
pop
mov
dec
inc
push
loope
push
leave
xor
inc
aaa
icebp
pushf
xchg
out
dec
jns
add
dec
add
jge
dec
sbb
loop
lods
lea
push
test
push
push
or
adc
adc
ss
inc
mov
adc
xor
xchg
daa
mov
dec
sbb
fwait
xchg
and
xchg
ss
es
xor
sub
dec
insb
test
push
loope
mov
cwtl
lds
cwtl
aam
popf
aaa
test
xchg
inc
xor
pushl
push
xor
mov
scas
je
or
cmpsl
mov
repz
cmp
movsl
dec
dec
or
outsb
mov
sbb
push
leave
xor
mov
sbb
xchg
jle
mov
jmp
cltd
sub
inc
lahf
sbb
subl
scas
stos
pushf
gs
leave
arpl
loop
jg
into
daa
popa
jmp
mov
lcall
fists
cmp
pop
cmp
push
bound
cld
xor
inc
inc
lods
stos
mov
xor
sbb
cwtl
mov
addr16
in
popf
xchg
jns
pop
inc
sub
dec
xor
and
mull
fldt
js
das
jb
shlb
sub
icebp
xor
lahf
dec
sub
or
mov
shr
xchg
scas
les
fsubs
gs
mov
cmpsb
fisubl
mov
lods
cltd
addr16
popf
outsb
leave
cmp
ljmp
lcall
adc
mov
ficoms
and
xor
int
test
mov
pop
cltd
xor
xor
sub
data16
mov
lret
jbe
mov
das
jmp
stos
lret
arpl
aas
cli
push
cmpsb
mov
mov
xchg
inc
xchg
mov
sbb
push
sub
iret
inc
stc
sbb
inc
pushf
mov
push
mov
dec
je
data16
shr
arpl
js
push
arpl
inc
sub
aam
and
lods
push
pop
frndint
mov
les
pop
push
lret
xchg
roll
imul
cmp
pop
pop
mov
xchg
sub
mov
xchg
xchg
roll
icebp
call
jp
ret
jns
test
push
or
xchg
sub
jns
fcompl
mov
rorb
inc
xchg
orl
jbe
fdivrs
in
lods
push
out
lods
pop
adc
mov
cmpsl
icebp
in
insl
push
adc
xchg
and
aas
inc
nop
imul
sbb
rcl
mov
push
cld
ret
movsb
pop
dec
fistps
das
pop
fdiv
movsl
push
mov
jbe
cltd
push
stc
dec
imul
inc
movsl
aas
lds
andb
dec
lea
sbb
into
mov
icebp
addr16
xchg
xchg
movsb
out
xchg
mov
js
jle
dec
inc
or
ds
sub
in
mov
xor
cmpsb
fisubs
sbb
and
pop
ds
cmp
or
ljmp
out
pop
inc
enter
adc
mov
roll
shlb
mov
dec
pusha
in
shl
js
xchg
dec
push
add
jno
push
inc
shr
inc
xlat
xchg
cltd
and
insb
arpl
sahf
or
sarb
test
fs
insl
jmp
add
les
jne
xchg
jge
out
pop
sbb
outsb
jo
cs
inc
sub
cmp
das
sbb
xor
lahf
lahf
jbe
insl
push
fnsave
repnz
negl
xchg
outsl
daa
aas
jns
jo
ret
xor
frstor
leave
in
pop
pop
lock
mov
xchg
and
and
or
sub
mov
and
in
ficomps
and
jecxz
push
bound
push
xchg
aas
ds
add
lock
cli
bound
jno
pushf
dec
stc
fs
mov
adc
push
push
idivl
add
inc
and
and
aad
cltd
fiaddl
scas
lock
pushf
out
push
stos
fidivl
and
push
pop
mov
sub
repnz
jecxz
xchg
xor
popa
adc
sub
inc
mov
lea
test
loope
in
jae
mov
dec
xor
cmp
mov
jmp
or
pop
lds
cs
add
sub
jns
je
cli
pusha
repz
pop
mov
sahf
mov
cmp
lds
pop
jle
in
negl
xchg
adc
idivl
dec
cltd
dec
lea
or
mov
cmpsb
mov
or
arpl
filds
mov
or
shll
outsb
push
jg
loop
repz
stos
arpl
fstl
andb
push
dec
mov
movsb
and
and
inc
xchg
sbb
out
dec
mov
rclb
xor
push
xchg
or
test
sub
mov
or
stos
mov
lret
int3
loop
std
clc
dec
cmp
sbb
add
sub
mov
sbb
inc
lret
add
add
outsb
orl
ficompl
sti
jmp
pop
arpl
das
mov
out
xor
and
and
cmp
or
add
mov
mov
dec
ss
lret
dec
imul
lock
inc
adc
and
in
loop
popf
cmp
cli
mov
pop
adc
push
sbb
in
test
fs
jmp
jo
mov
shl
xchg
xlat
mov
shll
and
pop
fcom
jle
pushf
mov
test
lcall
xchg
mov
push
push
cltd
fcmovnbe
fiadds
push
popl
dec
loope
cltd
repnz
dec
pop
mov
cld
sub
outsb
push
out
sbb
lret
and
pop
mov
ror
loopne
lea
lock
inc
mov
or
cmp
mov
pop
clc
jecxz
sbb
jne
and
add
or
pop
jg
pop
stos
fnstenv
fwait
mov
call
push
test
les
pusha
dec
clc
lods
mov
fwait
addb
push
jmp
sub
dec
lret
in
sahf
daa
xchg
scas
cltd
lods
jns
pop
add
pop
lea
xchg
mov
pop
xchg
enter
adc
jmp
push
ds
rcrl
iret
sub
in
pop
aaa
mov
stc
dec
xchg
pushf
xchg
repz
lcall
add
imul
adc
xor
dec
adc
mov
cld
pusha
imul
or
lods
dec
inc
push
ret
in
jp
movl
adc
in
sahf
in
aaa
push
out
fstpt
sub
jo
repz
xor
and
xchg
in
in
popa
mov
mov
mov
pop
fwait
mov
xor
mov
mov
aaa
push
into
fsts
std
push
data16
sarb
imul
pusha
jl
xor
std
mov
xor
nop
pop
inc
outsl
shrl
dec
adc
test
pop
in
cmp
aad
mov
clc
sbb
dec
sub
and
int3
cmp
lods
repnz
test
test
mov
fdivrp
pushf
xchg
lods
mov
inc
dec
push
add
lock
cmpsb
xchg
xor
push
mov
inc
xchg
mov
sub
jb
stc
jmp
or
loope
add
in
add
push
lea
mov
lahf
push
add
jae
push
xchg
pop
int
das
and
scas
mov
jmp
imul
mov
ds
xchg
adcl
jb
push
xor
js
idivl
mov
cmp
or
adc
mov
imul
xorl
mov
cs
sbb
jg
or
adc
rclb
sahf
mov
and
and
je
aaa
insl
jbe
sbb
cmp
add
add
notl
aas
lret
in
sub
testl
push
cmp
mov
lret
adc
push
inc
inc
or
sub
and
lods
pusha
mov
imul
sbb
bound
adc
mov
mov
lods
call
push
insl
rcrl
lahf
add
sarl
cmp
loop
orl
sub
jno
shrb
mov
in
dec
sbb
and
inc
outsl
pushf
loopne
addr16
rcl
js
adc
lcall
iret
jmp
aad
jno
mov
xlat
pop
fadds
push
test
jns
cmpb
push
ja
fsub
add
ja
es
shrl
cmp
dec
enter
sbb
pop
cmp
sub
sti
loope
out
pop
xchg
fwait
gs
fcomip
loopne
jno
ja
repz
pop
mov
ja
and
enter
jbe
insl
pushf
mov
dec
insl
dec
fs
push
hlt
addr16
sarl
sbb
sbb
mov
inc
jecxz
mov
sarl
call
dec
sbb
add
jbe
sbb
hlt
filds
xchg
imul
cld
cmp
fidivl
inc
mov
icebp
adc
or
icebp
outsl
in
mov
daa
and
iret
add
add
jbe
repz
ret
mov
scas
inc
xchg
mov
jno
test
jmp
js
add
cmp
shr
fimull
sbb
fstps
sbb
adc
pop
xchg
cs
pop
lcall
inc
int3
hlt
cmpsl
push
xorl
pop
lea
stos
xchg
js
xchg
in
mov
jno
mov
roll
cld
out
cmp
subl
jbe
out
inc
push
xor
shlb
cmpsl
dec
pusha
pop
aam
cmp
push
jle
call
stos
add
sarl
movsl
mov
sbb
inc
push
icebp
out
lds
sub
xchg
hlt
fadds
xchg
sub
cmp
lds
and
hlt
inc
into
jecxz
stos
das
mov
jns
out
mov
sbb
add
lcall
mov
cld
xor
and
mov
jbe
rorb
insb
add
inc
outsb
xchg
rorl
mov
add
mov
sbb
shll
fnsave
cmp
inc
pop
add
lock
stos
aaa
sti
mov
nop
xor
dec
js
jae
mov
jmp
outsl
enter
inc
jge
imul
cmp
daa
lret
imul
pop
dec
add
sti
rcl
inc
push
mov
sbb
sbb
push
add
pop
insb
inc
gs
int3
jno
mov
jmp
shl
xchg
xchg
push
ret
pop
movsb
adc
cmpsb
mov
jp
fnsave
loop
adc
call
hlt
pop
sub
sbb
inc
mov
push
testb
ret
push
pop
pusha
fwait
jg
jo
int3
repz
pop
fmul
out
pop
sbb
mov
das
sbb
stos
shll
in
lret
in
mov
pop
cld
scas
mov
jae
cli
mov
popf
and
mov
push
adc
mov
pop
lret
jnp
mov
fwait
or
pop
fisttpl
jp
push
lcall
dec
ficompl
imul
ljmp
mov
dec
jmp
sti
push
sahf
sbb
ficompl
imul
ljmp
mov
dec
ljmp
outsb
sub
ljmp
sti
sub
mov
mov
add
adc
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
adc
add
xor
and
push
repnz
push
add
fdivrl
mov
push
lock
pop
sub
cmp
inc
dec
jo
pusha
push
nop
xchg
mov
lock
mov
push
and
jb
pusha
hlt
mov
iret
mov
cwtl
mov
push
dec
dec
pop
push
addb
mov
xlat
push
mov
out
scas
sub
push
hlt
adc
cld
nop
mov
movsl
push
cmp
test
data16
fs
stos
pushf
test
sbb
add
xchg
inc
jno
sbb
gs
roll
js
push
daa
mov
inc
shrb
cmp
fdivrl
aad
int3
imul
push
fs
pop
aaa
das
test
icebp
adc
or
dec
lods
mov
das
sti
jmp
mov
add
push
in
xchg
enter
mov
popf
outsb
xor
fidivs
imul
loop
lock
inc
pop
loop
cmp
call
push
or
xor
cmp
arpl
sbb
cwtl
ror
ret
loopne
jns
jb
inc
dec
pop
pop
aas
dec
cmp
pusha
pop
nop
in
lcall
scas
fcomps
arpl
inc
pop
inc
push
cmp
adc
push
xor
pushl
mov
mov
sbb
jae
add
pop
jo
pusha
jp
mov
mov
lock
xor
and
push
dec
inc
pop
jo
pusha
jp
mov
mov
lock
repnz
loopne
lahf
shrl
out
repz
or
es
aas
jmp
adc
mov
loop
sbb
stc
out
mov
xor
mov
xchg
fnstcw
xchg
leave
js
and
jo
sub
jbe
pop
out
xchg
test
push
add
out
push
xchg
shrb
push
out
icebp
std
fcmovb
hlt
rcrl
test
and
fisttps
jmp
sbb
cmp
pushf
add
fbstp
dec
mov
pop
lods
mov
aam
out
cli
jne
fdivrl
lret
cmp
or
jbe
mov
mov
insb
jg
inc
add
lret
pop
cmp
adc
mov
iret
idivb
lahf
and
adc
xlat
sbb
xchg
pusha
rcrl
add
mov
iret
xchg
jne
es
iret
cs
or
ljmp
ljmp
cmpsl
inc
mov
sub
fdiv
sbb
mov
inc
fpatan
fsubs
pop
test
mov
mov
xor
lock
lods
cmp
ret
cmp
mov
cmp
jo
mov
inc
jecxz
jg
inc
sbb
push
push
clc
xor
lds
push
or
or
mov
rol
xor
jmp
sub
inc
into
jge
jmp
ret
popf
hlt
jo
pop
movsb
ret
divl
mov
sbb
lods
mov
jne
pop
movsl
lret
xor
testl
mov
add
xlat
arpl
mov
sar
data16
fcompl
push
pop
aas
adc
cmp
jge
xor
jl
dec
cmp
dec
add
pop
mov
pop
pop
sbb
cmp
clc
addr16
or
push
cmpsb
loopne
ljmp
in
dec
outsb
dec
pop
add
subb
sub
jno
xor
mov
pop
or
shll
cmovl
test
pop
add
ret
xchg
and
add
add
out
mov
mov
icebp
sbb
fistpl
mov
lock
adc
or
js
jmp
int3
xor
inc
mov
sub
jge
dec
mov
xchg
enter
xor
sbb
mov
pop
ret
or
stos
fwait
leave
nop
pop
ljmp
jne
mov
hlt
std
inc
scas
pop
fiadds
mov
cmp
dec
cmp
mov
add
iret
lcall
arpl
inc
out
dec
iret
jg
popf
stos
xorl
adc
lret
aaa
cmp
or
sbb
mov
xchg
and
or
nop
test
xchg
mov
inc
lret
addb
ljmp
push
push
ds
add
cmp
dec
ficomps
jne
dec
imul
mov
sbb
dec
xor
scas
movsl
cmp
out
dec
push
stos
ja
nop
xor
xchg
adc
cli
xchg
fsubrs
out
xor
out
and
mov
and
adc
or
test
mov
pop
add
cmp
pop
mov
call
fmuls
fs
adc
out
outsb
cld
sub
jle
xlat
or
imul
ret
lcall
add
iret
push
pop
pop
xchg
enter
loopne
jmp
sbb
xchg
pop
fidivrs
aam
cmp
int3
jb
push
cmpsb
xor
sti
pushf
mov
loopne
inc
lea
jg
sub
lods
mov
jle
xchg
shll
aam
push
add
pop
sbb
ds
fildll
add
lret
movb
pop
out
jmp
iret
jmp
cwtl
cmp
rcrb
sub
outsl
movsl
add
xor
add
xor
outsl
mov
xor
icebp
ret
add
pop
test
jecxz
sbb
sub
fistpll
mov
orl
and
push
fcomps
das
roll
mov
pop
aas
loope
inc
pusha
xchg
fsubs
mov
xchg
xor
mov
cmp
pop
push
fsubrs
popa
bound
jp
xor
mov
in
lods
cmp
pushf
mov
fmuls
sbbb
inc
daa
xchg
cmp
sti
mov
mov
push
cmp
mov
rclb
xor
xor
pop
js
rcr
int
jecxz
sahf
and
mov
shrb
pop
xor
dec
adcb
shrl
leave
in
test
into
adc
adc
frstor
add
aad
cmpsl
out
push
push
lahf
int3
andb
lret
lds
sbb
cmpb
faddp
inc
test
mov
jb
arpl
pop
pop
test
pop
repnz
and
orb
xchg
or
lcall
inc
pop
mov
gs
clc
sbb
int3
dec
imulb
js
jl
nop
xor
push
arpl
test
inc
jnp
cmp
pop
out
push
sub
mov
xchg
mov
or
hlt
lret
mov
mov
mov
lret
add
call
mov
sub
cli
add
or
js
insl
jae
sbb
test
clc
lods
xor
mov
sbb
cmpsl
clc
enter
int
xor
in
rcll
imul
dec
insb
sarb
jo
inc
mov
ja
and
push
popf
adc
hlt
not
test
add
and
lods
xor
xchg
fdivs
push
repz
fs
mov
outsl
push
sub
sub
pushf
arpl
repnz
mov
push
out
pop
lock
xorl
add
frstor
dec
sub
inc
mov
int
pusha
shlb
add
lret
pop
push
insb
jmp
shlb
ret
mov
pop
test
dec
iret
and
js
cld
mov
jmp
push
movsb
mov
cmp
call
xchg
xchg
push
movsb
cmp
mov
mov
push
popf
or
cltd
adc
mov
adc
pop
ss
pop
pop
pop
fwait
lods
fimuls
add
xrelease
ds
rcll
out
ret
push
sbb
sbb
decb
and
dec
xchg
aaa
scas
lret
jbe
mov
push
decl
nop
repz
aad
adc
loop
sub
sub
je
addr16
inc
mov
add
or
aaa
cmp
add
out
cltd
mov
pop
jl
inc
lret
add
pop
jecxz
jle
cmpsl
clc
lcall
andl
aas
movsl
shrd
fidivs
mov
shrb
xchg
data16
insl
push
lea
das
lock
mov
lea
jbe
dec
stos
gs
pop
lret
hlt
inc
out
imul
and
cmpsb
std
dec
mov
inc
lock
xor
data16
lock
dec
movsb
push
ds
mov
cwtl
into
push
mov
in
fcomps
jnp
push
jp
lret
lret
xchg
inc
cmp
xchg
mov
mov
rclb
mov
pop
xchg
mov
push
aas
sub
int3
mov
adc
adcl
and
cmc
movsb
mov
rcll
mov
imulb
iret
cltd
and
cmp
leave
lea
mov
xor
xor
add
sbb
dec
test
call
mov
xor
insb
lea
pop
orb
jno
lret
es
aam
cmp
iret
pop
rolb
shlb
mov
xchg
in
sub
push
xchg
mov
lret
das
movsl
fidivl
xor
das
and
iret
sub
lahf
js
adc
or
stc
xchg
in
mov
mov
dec
push
sbb
test
cld
sbb
sub
fisttps
repz
mov
in
pop
cmpl
xor
in
lea
enter
stc
dec
pop
mov
fiadds
adc
add
insb
jle
rcll
aaa
daa
mov
sub
xchg
enter
int3
xcrypt-ofb
cmpsl
test
scas
dec
sub
add
jmp
shrb
cltd
nop
bound
inc
push
jne
movsb
pop
imul
std
repz
rorl
lcall
outsl
test
xor
jo
add
push
xchg
xchg
cmc
mov
inc
xor
mov
xchg
leave
pop
dec
sbb
lock
int
or
push
insl
stos
mov
call
icebp
adcb
lock
outsl
fisubl
insb
mov
sbb
cmp
add
and
hlt
pop
popf
xor
push
push
in
arpl
adc
roll
push
sbb
stc
mov
xor
push
cmpsb
pop
mull
jbe
jle
out
dec
imul
lods
jl
stos
clc
das
push
pop
loop
jle
enter
inc
sbb
imul
popf
ret
icebp
xchg
scas
fmull
notl
pop
xchg
xlat
aas
sub
adc
out
aaa
orl
add
inc
sbb
jno
daa
sti
pop
mov
jo
pop
or
jae
lock
dec
sub
sti
jl
pop
pop
mov
fisttpll
pop
shlb
pushf
fsubrs
shrl
insb
or
repnz
and
fdivs
mov
push
sub
pop
sub
unpcklps
push
test
imul
pop
ret
xchg
pop
dec
clc
add
mov
ret
push
push
and
mov
push
lock
hlt
popa
sub
icebp
stc
xchg
out
jb
lds
loop
or
push
push
mov
aam
add
mov
adc
pop
movsl
mov
mov
pop
push
ret
cs
scas
inc
in
rcll
inc
sub
and
fs
mov
pop
cmp
lods
je
hlt
mov
mov
and
xchg
push
mov
push
mov
push
jl
sub
fstps
mov
lret
scas
sub
push
xor
or
fwait
adc
in
js
adc
sub
popf
jbe
mov
push
rcrb
test
adc
adc
or
orl
in
ret
sbb
sub
jl
cli
inc
mov
cmp
mov
mov
xchg
arpl
jbe
fisttpll
cmc
fs
and
imul
cmc
outsl
inc
ds
jns
fstpl
and
push
outsb
mov
mov
cwtl
adc
pop
ret
sub
lret
jae
mov
out
lret
mov
adc
sbb
xor
mov
fwait
add
mov
pop
push
std
cmpsb
dec
fnstsw
in
mov
inc
pop
adc
int3
cwtl
mov
jno
das
test
dec
mull
icebp
sub
add
sbb
xchg
xchg
cmpsl
cmpsl
mov
jae
jmp
fidivs
clc
inc
push
cmp
dec
pop
popa
je
mov
test
xchg
dec
cmp
lds
pop
push
sbb
nop
loopne
mov
cmp
jl
pop
jb
xchg
xchg
mov
mov
pusha
mov
mov
sub
push
mov
jle
pop
add
cli
lea
in
or
ret
leave
mov
push
mov
jb
and
add
sti
add
adc
jg
dec
push
add
mov
pop
adc
push
sahf
stos
add
xchg
pop
xchg
mov
push
pushf
shlb
jne
stc
loop
xchg
mov
aaa
test
pop
dec
icebp
dec
cmpl
pop
hlt
idivb
adc
mov
xchg
lret
out
add
sub
lret
loope
test
xor
xchg
sbb
test
lretw
inc
xor
pop
adc
ja
ret
out
into
popa
xor
lahf
aad
or
jl
pop
xor
jp
dec
xor
ss
fdivrl
dec
imul
or
push
and
push
scas
sarl
cli
arpl
mov
jle
or
inc
popf
push
aam
mov
and
cli
test
lods
push
jae
repnz
rcrb
test
push
dec
cmp
clc
dec
jmp
lds
or
cmpsb
xor
stc
test
xchg
sub
rcrb
jb
loopne
jns
xor
sbb
lret
xchg
lds
xor
sub
clc
stos
mov
pop
insb
dec
adc
inc
sbb
xchg
inc
movsl
and
mov
ret
mov
mov
test
sub
je
jnp
mov
pop
cmp
iret
dec
les
mov
cmp
sbb
mov
and
add
hlt
movsl
stc
lcall
aam
sbb
cli
sub
clc
pop
mov
mov
adc
jne
movl
add
pop
sub
nop
ror
aaa
mov
test
shl
cs
movsb
sub
dec
sub
xchg
rclb
mov
and
sbb
xchg
jle
adc
jecxz
popf
popa
repz
adc
jns
dec
xor
aaa
std
xor
mov
sub
testb
dec
stc
mov
cmp
or
xchg
adc
cmpb
add
dec
cmp
cmc
loopne
mov
mov
shl
push
mov
cmpsl
pop
pop
ror
fcomps
vmptrst
leave
cli
mov
jo
cwtl
xchg
ja
mov
mov
ja
arpl
negl
loopne
push
popf
sti
scas
xchg
sub
sti
mov
xchg
sahf
not
mov
int3
sbb
hlt
daa
sbb
mov
mov
ja
rcll
xchg
pop
dec
movsb
xor
xchg
in
fstps
shl
or
xor
adc
or
jns
cltd
int
in
mov
inc
xchg
mov
stc
sub
xor
xchg
inc
fcoml
jnp
xchg
adc
sub
xor
imul
mov
movsl
sarl
mov
stc
dec
pusha
rcr
jno
add
push
mov
cmp
xor
xor
cmpl
call
jae
cs
out
mov
push
fsubl
cmp
cli
pop
in
and
jmp
test
push
xorl
les
dec
out
jo
push
and
jp
incb
sbb
in
lods
pop
out
cmp
or
aad
aam
mov
xchg
test
xchg
aas
xor
sub
les
pop
mov
cmp
and
scas
pop
aad
pop
mov
pop
add
push
push
scas
rcrb
sbb
mov
cmp
ret
push
xor
les
insl
push
js
rclb
fimull
add
das
or
out
jae
xchg
mov
mov
and
push
lret
stos
dec
dec
ret
popa
add
jl
nop
aad
dec
or
xchg
or
in
inc
xchg
adc
in
out
or
rolb
imul
lcall
pop
sub
rorl
dec
adc
xchg
mov
sbb
mov
js
aad
mov
and
mov
test
sahf
call
sbb
push
imul
or
push
dec
or
lahf
xor
mov
mov
popa
add
jns
pop
mov
cmp
jg
add
ljmp
fidivrl
cmp
in
pop
dec
ja
sbb
jno
rol
xchg
adc
in
std
or
lcall
js
adc
cli
mov
frstor
pop
dec
loope
int
outsl
lret
in
or
outsl
jae
mov
shll
push
xor
in
sbb
and
adc
sub
xchg
test
outsb
dec
xchg
mov
pushf
movsl
mov
cli
sub
scas
xchg
xor
cmp
sahf
subl
push
mov
jg
cs
int3
push
jbe
xchg
push
and
imul
insb
out
jbe
inc
mov
xor
and
adc
inc
adc
mov
xor
jbe
jle
xchg
in
dec
stc
mov
pushf
dec
fdivrp
mov
ja
jbe
xchg
jmp
in
ljmp
sbb
pop
mov
mov
cltd
rep
jge
adc
pop
sub
xchg
insb
jno
bound
mov
xchg
aam
sbb
pextrw
push
ljmp
cmp
jb
int3
sub
mov
jnp
lds
or
xchg
inc
sbb
add
cld
cld
imul
fs
jnp
lahf
xor
in
xchg
inc
lea
sub
les
je
mov
xor
push
and
xor
cld
push
mov
xchg
push
pusha
pop
inc
jb
cmpsb
aaa
test
pusha
out
fldl
cwtl
fisubs
dec
jbe
outsb
inc
adc
fst
add
into
gs
in
aam
cmovg
lods
movlps
xchg
jns
xor
popa
repz
scas
loope,pt
push
subb
sub
jbe
dec
mov
pop
xchg
inc
int
xchg
add
cmp
stos
fmull
xor
mov
fcompl
repnz
sbb
inc
xchg
sti
mov
jl
iret
div
repnz
lock
mov
jle
je
stos
xchg
sbb
push
xor
in
ja
roll
not
push
iret
lea
push
dec
loop
push
push
sub
shlb
jae
jge
outsb
xchg
inc
shrl
pop
stc
stos
cmp
out
pop
dec
bound
cmc
or
push
xor
dec
mov
adc
int
neg
test
sub
xor
adc
mov
or
mov
icebp
inc
dec
add
xchg
mov
and
push
or
push
inc
push
jp
xor
ja
sbb
dec
decl
mov
push
in
lock
mov
cmc
gs
mov
add
jo
cmp
mov
call
lret
or
dec
outsl
cmpsb
es
stos
ret
sub
xor
dec
pushf
into
mov
in
add
sbb
or
fadd
xchg
clc
sbb
int
adc
pop
dec
mov
es
or
rcll
push
or
inc
das
xchg
pop
push
fcmovne
push
insb
mov
and
dec
mov
in
and
add
xor
rclb
or
mov
sahf
arpl
pop
xchg
test
fcompl
pop
movsb
mov
repz
cmpsb
outsb
adc
jmp
sub
cltd
sbb
cmp
push
insl
jne
ret
imul
cli
and
cmp
dec
mov
dec
lea
or
and
or
ficoml
imul
mov
shll
sahf
sbb
add
adc
jl
cmp
sbb
test
sbb
sbbl
ljmp
shll
and
outsb
pushf
daa
addr16
add
rcrb
out
roll
or
xor
incl
and
insb
ljmp
clc
cmp
mov
push
bound
push
mov
scas
outsl
mov
jae
pop
xchg
sub
inc
jecxz
xlat
adc
xor
mov
sub
sub
xchg
xor
cmpsb
stc
fidivl
pushf
roll
jmp
std
cmpsl
pop
ljmp
and
adc
dec
xchg
push
mov
call
adc
mov
mov
hlt
and
cmp
adc
inc
icebp
icebp
fsub
mov
jmp
cli
aas
cmp
push
mov
push
aas
push
icebp
sar
arpl
test
int3
iret
push
inc
movsl
nop
mov
out
pop
lock
in
int3
or
dec
nop
es
mov
push
inc
insb
mov
imul
fcomi
mov
nop
in
lahf
pop
dec
pop
stos
xchg
xor
stos
mov
add
xchg
ret
rorb
ja
mov
jno
push
scas
out
xor
daa
mov
repnz
nop
andl
in
mov
xchg
mov
ficompl
jmp
addb
mov
jnp
nop
cs
lahf
dec
leave
in
rolb
xor
sbb
push
bound
enter
stc
mov
ret
cli
es
cmc
adc
pop
sbb
jne
je
insl
and
stos
xchg
popa
imul
add
sub
lds
xchg
adc
insl
cltd
mov
xor
adc
pop
mov
out
cmc
mov
and
loope
inc
lahf
pushf
aam
mov
icebp
cmp
inc
pusha
daa
mov
push
dec
ret
push
jnp
std
in
shll
xchg
fmuls
push
fwait
jmp
mov
cmpsb
add
xchg
sarb
test
add
or
and
xor
mov
mov
mov
and
cmpsb
dec
frstor
aad
push
jo
popf
sar
push
mov
mov
sbb
inc
inc
mov
loop
sahf
add
cmp
cmp
push
leave
dec
cmp
xchg
lret
push
xor
stc
mov
or
lcall
xchg
cmpb
push
fwait
xchg
cld
sahf
and
testl
sub
loopne
fldenv
insl
jo
sbb
jl
int3
orb
sbb
push
ret
lock
and
push
dec
inc
pop
jo
pusha
jp
mov
mov
lock
xor
and
push
dec
inc
pop
jo
pusha
jp
mov
mov
lock
push
sub
cmp
dec
inc
pop
jo
mov
lcall
rcr
lock
or
add
pop
push
push
add
push
dec
push
pop
jo
loopne
nop
mov
sbb
dec
movsl
setne
test
jl
insb
push
push
cltd
outsl
mov
fldt
xchg
ss
push
cld
push
in
pushfw
je
push
mov
mov
xchg
out
testb
push
fdivl
int3
push
cld
sbb
lock
mov
push
lods
mov
jl
insb
lcall
or
cmp
sub
fcoml
lea
sbb
sbb
add
iret
das
flds
mov
testb
mov
cmpsl
mov
xor
ja
sahf
aaa
addr16
cmovns
and
jmp
inc
xor
mov
jmp
inc
inc
mov
dec
inc
jne
shrb
adc
mov
push
jns
mov
inc
movsl
fwait
mov
inc
cmp
cmpsl
sbb
cmp
mov
xlat
shrb
js
or
pushf
jbe
int
push
lods
imulb
cmp
sub
loope
xchg
out
test
and
addb
out
sahf
iret
jbe
mov
fsts
shrl
sbb
fisubrs
int
lahf
jnp
inc
stc
and
mov
xchg
icebp
sbb
or
cmp
sub
fsubrl
int3
push
cld
paddsb
outsb
mov
vaddss
or
xchg
jns
mov
js
movsl
pop
int
cltd
jb
data16
jmp
leave
cmp
sub
sbb
insb
mov
inc
push
test
xchg
push
mov
scas
push
mov
sbb
ret
ret
sbb
add
push
decb
scas
xor
or
cmp
sub
fdivl
int3
push
cld
push
in
pushfw
jbe
inc
mov
mov
xchg
out
testb
sub
fdivl
int3
push
cld
push
in
pushfw
jbe
inc
mov
cltd
and
xchg
in
mov
jg
push
or
adc
lahf
das
popa
call
fyl2x
dec
aaa
cltd
xchg
ss
insb
mov
jmp
test
lods
add
dec
daa
mov
fdivrp
ja
pop
lret
jns
inc
fs
shr
jne
push
arpl
xor
and
mov
outsb
mov
jg
pop
mov
shrb
xor
push
xchg
in
insb
stc
aad
add
sbbb
push
cmp
test
call
push
movsb
xchg
mov
pushf
mov
cli
notb
jp
sbb
in
aam
add
rep
test
push
cmpsl
adc
fildll
and
lea
stc
ljmp
idiv
out
arpl
sbb
cmp
inc
xor
pop
sbb
addl
sbb
daa
jmp
mov
into
xor
test
jp
xor
or
cmp
mov
push
into
sbb
and
mov
scas
icebp
ljmp
fsub
jb
pop
icebp
inc
or
xchg
sub
ficoml
mov
push
fidivl
aad
out
mov
out
adc
push
sub
mov
addb
sub
inc
cli
xchg
inc
pop
lret
add
popf
mov
in
push
lahf
je
push
das
sbb
aad
add
inc
jle
xor
mov
jl
sbb
call
cmp
rcr
rclb
and
xchg
jno
pop
mov
dec
js
test
adc
xor
xor
xor
mov
int3
ds
mov
mov
popa
outsb
push
xor
int
xchg
cmp
andl
out
fst
mov
ljmp
ficompl
insb
or
sbb
mov
jns
outsl
mov
cmp
pusha
dec
into
xchg
push
pushl
add
out
std
mov
mov
out
push
in
xor
jge
sbb
jae
jge
out
test
xchg
into
pop
lock
pop
pop
rolb
out
push
push
push
adc
aad
sbb
test
clc
iret
add
outsl
adc
push
scas
sbb
push
add
test
and
mov
push
sub
jno
adcl
sarl
repz
mov
int
fs
pushf
rol
ret
lods
dec
mov
dec
mov
cmp
and
test
sbb
and
shl
inc
mov
shll
shlb
jb
mov
test
in
sbb
jg
adc
dec
cli
mov
pop
sub
inc
mov
cwtl
adc
push
sub
or
popl
inc
movsl
xchg
adc
bound
repnz
ret
insb
xorb
in
mov
cmp
jb
call
into
inc
sub
push
jmp
dec
cmp
outsl
leave
insl
lds
xorb
insl
std
movsl
ret
lods
scas
in
dec
sbb
mov
das
cs
sbb
inc
cmp
adc
dec
push
push
jle
inc
les
xchg
mov
inc
sbb
vpandn
cld
ret
lcall
cs
jb
lcall
inc
or
repnz
cmp
fmul
xchg
inc
dec
pop
xor
sbb
ss
mov
popa
or
in
sti
jne
jg
pop
in
nop
cmp
mov
jg
or
pop
cmp
push
mov
add
movsl
shl
lock
mov
adc
andb
cmp
sbb
xor
icebp
dec
cmpb
push
rsqrtps
adcl
mov
je
sbb
dec
mov
cmp
or
sti
dec
jo
popa
out
pop
xor
addr16
jo
sarb
mov
push
cmc
in
push
jbe
rorl
and
es
loopne
mov
pop
mov
pop
scas
icebp
and
mov
mov
cmp
sub
test
mov
pop
jmp
popa
pop
or
fs
out
imul
jecxz
cwtl
pop
cmpsb
pop
sub
repnz
inc
js
mov
jae
add
into
enter
in
aaa
test
insl
lods
jne
lods
push
mov
adc
dec
imul
leave
and
cltd
ss
fistps
dec
dec
mov
xchg
push
pop
mov
add
cli
jge
adc
repz
cmpsb
lods
sub
mov
ds
jecxz
enter
xchg
sub
mov
fs
cld
xchg
insl
xor
popf
adc
out
arpl
jnp
jb
mov
xor
mov
subb
sbb
cwtl
add
pop
mov
testl
inc
sub
repnz
xchg
sbb
xor
aaa
cld
xorb
jle
addb
movl
hlt
push
loope
mov
loope
nop
cmc
and
xchg
adcl
out
and
push
cmpsb
jp
cmp
mov
mov
aam
int3
push
clc
inc
jp
lds
inc
push
ja
jmp
mov
adcl
movsl
into
mov
xchg
mov
adc
jp
mov
jnp
and
xchg
and
cmp
xor
mov
vpavgb
out
and
stos
cmp
add
pop
mov
std
xor
mov
or
repnz
xchg
xlat
push
adc
mov
icebp
lcall
pop
cmp
cmpl
sti
test
lock
cmc
jb
jnp
sar
mov
dec
sub
and
sub
clc
outsl
adc
and
in
maskmovq
stos
mov
outsb
cmp
pop
adc
sbb
fdivr
dec
mov
ljmp
stc
ljmp
insb
jbe
jecxz
pushf
in
pop
xor
aad
imul
fcomip
xchg
ds
add
bnd
lea
inc
xlat
lods
loope
and
jecxz
pop
daa
insb
lock
sahf
insl
sbb
arpl
nop
jge
lock
or
iret
fwait
and
jno
and
xchg
xorb
loope
dec
shrl
inc
and
xchg
xlat
jae
cmp
mov
rorb
pop
adc
hlt
xchg
lods
pop
add
sbb
insb
jmp
add
cltd
nop
jb
addb
cmpsb
insb
xchg
mov
jne
add
es
push
sub
mov
pop
fst
cmc
inc
jo
pop
das
aaa
sub
outsl
loopne
adc
fsubs
and
rol
xchg
lock
jno
mov
pop
and
push
rcrb
jle
lods
roll
enter
inc
jge
lock
stc
cmp
push
adcb
mov
fidivrs
cli
dec
or
pop
out
js
mov
sbb
and
xor
mov
xchg
int3
and
add
sbb
ss
pusha
or
cmp
mov
inc
or
sbb
arpl
jae
or
jnp
pop
mov
push
sti
fistl
jae
stc
int
lahf
dec
dec
fcmovnbe
mov
xchg
mov
xor
in
or
cmp
imul
jns
popa
xchg
add
js
jae
jecxz
lock
jle
adc
jns
aas
push
dec
stc
jge
mov
shr
orl
sbb
daa
enter
inc
mov
push
into
dec
pop
mov
imul
ret
jge
ja
add
scas
loop
xchg
shll
loop
repnz
push
cmpsb
xchg
dec
xchg
bound
idivl
imul
out
mov
jmp
mov
cs
sbb
push
mov
cli
xor
or
imul
xor
fcomip
cmp
outsl
adc
xchg
push
or
sbb
hlt
loop
mov
in
mov
mov
negb
and
or
enter
scas
fstps
daa
push
rcrl
shll
jl
push
sub
enter
and
into
sahf
insl
inc
cmpsl
out
out
dec
or
test
movsl
roll
cmp
jecxz
or
push
stos
pop
dec
mov
sbb
lea
cmpsb
adc
fmuls
movsb
outsb
lods
xor
int
cmp
enter
lahf
add
lds
popf
int
arpl
jae
pushf
lea
call
nop
dec
mov
lahf
fdivrs
push
hlt
push
dec
jbe
mov
xor
fnstsw
lods
rcrb
and
ja
mov
rorl
cmpsl
mov
pop
push
pop
in
int
push
mov
mov
mov
xor
sbb
cli
cmc
das
fwait
inc
imul
xchg
sub
cmp
test
jb
jmp
into
leave
in
inc
mov
pop
mov
mov
clc
aad
rcr
ret
out
mov
jl
jb
fistpl
movsl
imul
dec
adc
xchg
daa
clc
sbb
jns
pushf
inc
cltd
pop
andl
sub
aam
mov
pop
test
mov
and
jmp
fstl
jle
pop
mov
in
sbb
mov
or
pop
jnp
inc
mov
dec
std
mov
inc
sbb
add
push
sub
pop
loope
insb
inc
jge
inc
add
jg
daa
das
push
ja
xchg
or
mov
ja
aaa
mov
loope
scas
or
sahf
test
ficoml
mull
or
jmp
or
mov
jno
xor
mov
adc
mov
cmp
out
pop
lret
shrb
mov
out
rcll
sub
lods
in
test
or
data16
aas
jbe
mov
fpatan
pop
insl
cmpl
pop
iret
push
shll
ljmp
add
xor
jp
add
das
pop
in
mov
mov
or
xchg
fmull
iret
mov
mov
xchg
mov
lret
pop
push
test
xchg
pop
subl
xchg
cwtl
and
lods
mov
outsl
mov
mov
cmc
ds
call
insb
cmc
mov
cli
xchg
mov
xchg
cmc
scas
sahf
lcall
pop
inc
les
adc
fs
xchg
fldl
adc
or
cli
mov
mov
fwait
sbb
fcmovb
cmpsl
mov
mov
sub
popl
inc
or
pusha
push
cmp
xor
das
inc
lods
xchg
jns
dec
push
jne
xor
test
or
cltd
and
pop
cwtl
mov
sub
dec
stos
adc
enter
jl
mov
insl
jae
sbb
stos
dec
je
mov
push
mov
cmp
sub
ret
int3
pop
mov
xlat
ss
and
pusha
movsb
aaa
and
enter
push
add
scas
pop
add
cmpsl
in
inc
rorb
mov
pop
xchg
cli
sbb
mov
insl
mov
pop
into
mov
sub
aad
es
push
xchg
ret
das
sub
popaw
push
dec
and
inc
ficoms
pusha
push
sub
xlat
rcll
mov
fs
filds
push
or
cmpsb
stos
daa
test
ror
mov
xchg
lcall
sub
xchg
in
jbe
jne
adc
outsb
jbe
xlat
mov
iret
outsl
loopne
popa
mov
fadd
ja
jns
cltd
clc
roll
ss
xor
sub
das
push
pop
cmp
out
and
push
inc
mov
idiv
push
sub
push
pop
jae
mov
cltd
mov
call
and
lock
or
loop
or
jno
int
jg
in
lods
and
dec
cs
jne
mov
push
mov
test
add
mov
test
nop
push
cmp
jb
clc
xor
repnz
sbb
jmp
jo
cld
jno
popa
outsl
pushf
repnz
out
jb
cmp
mov
lahf
xchg
sub
mov
inc
fiaddl
fcmovnu
icebp
daa
sbbb
and
fwait
and
xchg
fdiv
add
pop
sbb
in
or
pop
mov
mov
fsubr
sub
mov
lcall
stc
scas
and
cmp
xchg
sbb
cs
out
and
dec
sbbb
mov
or
cli
xchg
mov
push
loope
notl
jle
push
adc
and
jg
filds
or
mov
loop
jecxz
fcomp
pop
sahf
dec
fstpt
shrl
mov
inc
icebp
or
or
int
jecxz
cmp
push
sub
xor
or
sbb
imulb
jle
mov
clc
mov
mov
sub
dec
in
xchg
push
cmp
nop
in
sub
pop
shl
sbb
jge
sbb
xlat
mov
jle
jne
pop
adc
xchg
pop
flds
jl
nop
daa
iret
aam
in
pop
fwait
or
adc
lods
jno
lahf
mov
mov
xchg
xchg
cmp
push
mov
enter
dec
push
mov
enter
inc
mov
icebp
and
dec
cli
cmc
inc
pop
sub
xchg
mov
add
mov
jno
out
cmp
jno
iret
out
push
mov
repz
inc
in
pop
ljmp
or
popl
dec
mov
out
aam
out
pop
sbb
leave
xchg
mov
and
dec
jb
into
popf
js
pop
int
ret
dec
pop
stos
dec
push
in
dec
jmp
add
out
cld
ds
xor
xor
pop
inc
popa
in
lods
mov
loopne
popf
and
in
push
inc
sub
xchg
in
test
lret
ja
cmpsb
rcll
and
jns
mov
sub
in
jg
and
cmpsb
mov
jecxz
mov
cmp
aaa
sub
lods
movsl
test
hlt
cmp
std
xchg
xchg
inc
jecxz
adc
sub
pop
push
pop
or
pop
mov
mov
into
cwtl
push
xor
jp
imul
and
enter
pop
jnp
movsb
or
mov
dec
dec
push
flds
add
mov
in
mov
movsb
mov
js
inc
or
or
adc
idivb
or
add
add
xor
and
rcrb
lea
mov
xchg
call
aam
jg
mov
in
cmpsl
stos
cmpsl
decb
rolb
xchg
loop
pushf
faddp
adc
mov
xchg
xchg
mov
sahf
out
adc
loopne
andb
loop
xchg
pop
outsl
mov
mov
lods
xchg
pop
dec
popa
mov
loope
je
add
aas
mov
lods
sub
in
loop
xchg
movsl
mov
adc
mov
ret
mov
and
and
dec
sahf
ljmp
xchg
jo
lock
jp
pop
xchg
ret
xchg
push
lcall
inc
xchg
sar
stc
lret
lods
pop
jl
pop
out
rcrb
lds
xor
addr16
jnp
cltd
jae
jnp
xchg
loope
mov
mov
sub
out
sbbb
out
xchg
jne
dec
mov
nop
std
inc
xor
insl
mov
inc
mov
or
mov
pop
or
add
pushf
cmp
aas
clc
add
jg
inc
pop
inc
cmc
or
mov
mov
insb
pop
pop
sbb
decb
fdivl
mov
cmp
add
test
mov
test
mov
fiaddl
cmp
andb
sub
movsb
lods
add
cmp
sbb
inc
sbb
xchg
aas
enter
or
mov
sbb
xchg
push
push
cmpsb
jo
mov
lahf
insb
jg
frndint
inc
push
fldenv
sbb
scas
pop
mov
pop
or
movb
jle
lods
mov
ja
mov
scas
push
mov
fisubrs
push
add
mov
in
int3
adc
shrl
push
xor
xorb
push
cltd
subl
dec
jl
mov
push
shll
and
push
jle
mov
lods
push
inc
in
stos
lret
push
cmp
jg
je
aam
or
push
pusha
hlt
sub
add
adc
push
icebp
popf
push
xchg
mov
pop
ja
add
pop
ljmp
cmpsb
inc
pop
adc
inc
sbb
pop
incl
int
mov
cmp
add
ret
sub
push
das
adc
add
push
in
lock
fmull
add
loop
xor
ss
or
jmp
not
adc
mov
roll
pop
dec
ror
imul
dec
in
or
aas
movsb
mov
lret
clc
jmp
inc
dec
jmp
cmc
dec
loop
cmc
jmp
mov
or
lcall
out
setg
gs
or
sbb
loop
mov
or
aad
enter
in
cmp
out
imul
sbb
test
or
sub
shlb
sub
repz
mov
inc
test
push
pop
fsubrl
in
fcomps
xchg
fwait
jb
loop
cwtl
lods
ret
jno
sti
push
xorb
nop
sarl
iret
adc
mov
in
pop
mov
lods
mov
sbb
pop
cmp
mov
jo
pop
jbe
xchg
movsb
aam
and
xchg
dec
enter
inc
add
sub
orl
out
iret
pop
inc
inc
setae
jmp
mov
ret
fnstenv
sub
cs
jg
sbb
xchg
loop
fldcw
push
out
xchg
mov
aad
inc
dec
lret
cwtl
inc
das
push
inc
pushf
fsub
inc
dec
enter
sahf
test
aad
in
add
insb
stc
lea
scas
les
xor
mov
in
js
and
sbb
pop
rcrb
jp
xor
sti
cmp
or
inc
jno
scas
insb
and
adc
ss
pushf
xchg
adc
jae
cmp
mov
lods
lods
and
xchg
dec
and
sub
adc
mov
mov
lds
sbb
cld
outsl
mov
aas
pop
sbb
xor
push
sar
ret
pop
jle
pop
jecxz,pt
dec
rorl
inc
jae
loope
pop
pop
lock
sbb
lock
push
and
mov
insb
mov
in
dec
test
pop
mov
js
cs
and
je
inc
mov
test
push
fisubrl
insb
mov
cmp
inc
bound
pusha
push
jne
mov
mov
cld
addr16
adc
mov
insl
sub
jo
cld
fistpl
cltd
pusha
pop
push
fnstcw
hlt
inc
dec
mov
xchg
lcall
mov
mov
inc
mov
outsb
aam
cmp
cwtl
lret
jno
loop
sub
push
pop
lock
stc
mov
rcr
repz
jns
pop
inc
in
or
in
dec
sbbl
mov
sub
inc
xchg
xlat
fildl
jge
adc
or
loope
jnp
dec
aam
pop
sub
dec
and
pop
xchg
add
ret
adc
and
lods
push
outsl
cld
inc
xor
jne
cmp
jns,pt
cmpl
inc
imul
and
das
or
loopne
out
in
mov
add
dec
inc
jge
xlat
xlat
cli
sub
ret
adc
adc
dec
lds
in
sub
inc
hlt
lcall
or
lahf
pusha
jge
insb
mov
fsts
std
jl
dec
fnsave
int
outsb
push
loope
lahf
enter
cli
jmp
ds
fstl
fistl
repz
insb
insl
int3
pop
popw
int
fisubrs
pop
les
dec
push
sub
xor
das
cli
sahf
scas
inc
inc
inc
push
dec
mov
pop
lret
cmpsb
test
cmp
fldenv
fistpl
mov
xor
lret
mov
push
fldt
lret
jb
test
outsl
ds
push
stos
pop
cmp
dec
mov
mov
clc
movsl
fldt
les
xor
sbb
dec
ficoml
mov
and
fdiv
xchg
fsubrl
mov
imul
js
inc
adc
cmp
mov
inc
sbb
sub
push
cmp
int3
js
out
add
nop
mov
addb
in
ror
mov
jbe
int3
scas
xchg
popa
add
cld
mov
pop
lcall
test
clc
sub
insl
lds
inc
aaa
push
imul
aam
dec
scas
pop
xchg
pop
mov
mov
inc
in
pop
fisubs
inc
mov
cltd
sahf
xchg
jl
sub
les
pop
pop
sub
add
or
sbb
cld
sub
jl
mov
xchg
in
xchg
cmp
lret
jb
aam
in
mov
cmc
int3
inc
add
xor
or
notb
lods
or
outsl
call
es
loopne
jg
outsb
insl
cwtl
adc
mov
xor
pop
sub
mov
ret
dec
cli
popa
push
stc
cli
cmpsl
cmc
and
xchg
mov
cltd
push
push
mov
mov
les
mov
xchg
cwtl
cmp
sbb
push
mov
loope
int
push
mov
test
jns
test
add
jle
popf
dec
push
jo
call
stc
enter
ljmp
in
jmp
inc
xchg
mov
or
loope
mov
inc
cmc
dec
mov
out
testb
sub
fdivl
int3
push
cld
push
in
pushfw
jbe
inc
mov
mov
xchg
out
testb
sub
fdivl
int3
push
cld
push
in
pushfw
jbe
inc
mov
mov
xchg
out
testb
sub
fdivl
int3
push
cld
push
in
pushfw
ja
inc
mov
mov
xchg
in
testb
push
sub
fmul
data16
cld
push
fwait
adc
jae
inc
test
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
or
sbb
sub
cmp
inc
push
sub
xor
mov
mov
xchg
jmp
add
adc
and
xor
pop
push
imul
xchg
frstor
jmp
add
adc
and
xor
pop
push
imul
into
fcmovbe
xchg
mov
nop
mov
repnz
add
pop
inc
dec
fimuls
test
loop
adcb
mov
leave
or
cmp
xor
bound
jp
aas
mov
and
cmp
ss
pop
call
pop
xchg
pop
pop
adc
xchg
xrelease
insb
push
cmpsl
shll
ret
mov
sbb
pop
and
inc
xchg
mov
and
pop
lahf
dec
aaa
xchg
mov
jmp
lahf
insl
out
inc
hlt
add
repnz
push
lods
push
gs
mov
or
xchg
or
in
mov
outsb
and
inc
mov
cwtl
push
xchg
test
repz
mov
cmp
xchg
repnz
add
adc
and
xor
pop
push
imul
xchg
test
ret
jmp
outsl
jo
dec
fs
je
sub
cmp
enter
lret
fsubrl
lods
xchg
or
pop
jns
pop
gs
xor
jb
fwait
call
lods
lea
pusha
push
jge
inc
push
cmp
cs
push
imul
xchg
test
ret
jmp
add
adc
and
xor
pop
push
imul
xchg
test
ret
jmp
add
xchg
xchg
mov
inc
add
jb
jo
fdivrs
pop
jle
dec
testl
or
jge
sbb
popa
ror
adc
icebp
ss
mov
push
mov
inc
in
int3
popa
dec
and
jg
add
push
jg
push
jp
ret
cwtl
jns
into
lock
rsqrtps
adc
popa
scas
sbb
lcall
ds
jecxz
fwait
test
pop
adc
jns
aaa
je
lods
stc
inc
jne
jb
sbb
pop
dec
sbb
test
push
aas
mov
rcl
lods
loope
xchg
stc
xchg
adc
push
adc
sahf
ja
call
inc
inc
filds
mul
mov
push
ljmp
adc
mov
mov
enter
inc
mov
lret
jecxz
cmpsl
inc
xor
cmp
into
insl
sub
lcall
inc
ret
testl
dec
xchg
inc
outsb
arpl
mov
ss
je
arpl
push
dec
or
roll
cmp
dec
mov
xchg
shll
cwtl
aaa
stos
stc
cmpsl
aam
cltd
push
in
call
repz
xchg
xchg
jb
out
jno
clc
sub
cmp
out
push
mov
push
nop
mov
sbb
jmp
in
pop
das
call
xor
xor
pop
inc
mov
jp
andb
fisubrl
sub
inc
out
push
popl
sbb
and
add
xor
or
jnp
inc
mov
jg
dec
pushf
pop
push
cli
rolb
dec
mov
cmpsl
sub
ja
cmp
ret
push
loope
mov
mov
jae
idiv
decb
mov
cmp
xchg
push
adc
dec
push
mov
sbb
xchg
andb
add
fstpt
mov
inc
lods
out
out
lahf
and
aad
xchg
ljmp
cmp
rcrb
sbb
jg
mov
pop
insl
push
gs
rcrb
pop
fucomi
xor
and
mov
inc
dec
into
xchg
loope
fwait
xchg
sub
adc
adc
in
cli
ja
repnz
and
hlt
repz
mov
popa
aas
in
fbld
imul
sbb
xor
jne
mov
mov
pop
push
ljmp
aam
mov
hlt
mov
jbe
inc
mov
stos
lcall
inc
xor
lods
das
sub
jge
jecxz
mov
enter
sti
add
and
jp
loopne
jo
shll
sub
push
fcoml
sub
push
lods
xor
xchg
sysenter
jno
mov
std
xor
xchg
mov
shlb
mov
add
jae
sub
cmp
pop
xor
xchg
xor
leave
clc
inc
jge
orb
int3
out
test
aam
scas
sub
add
or
rcl
in
outsl
mov
stos
stc
bound
inc
jno
rorb
xlat
gs
pop
lock
dec
lahf
push
sub
dec
pushl
mov
pop
fldcw
jmp
mov
out
cmp
xor
mov
cmp
push
outsb
dec
js
jo
gs
hlt
push
add
xlat
sti
daa
ret
xchg
sub
pop
test
mov
andb
and
xor
mov
lods
stc
dec
lock
call
out
inc
out
cmpb
rcrl
and
adc
int
pop
in
sarb
call
dec
pop
aad
add
dec
scas
sarb
rcll
and
mov
xlat
sub
or
mov
pop
mov
dec
cmc
xchg
and
or
ds
shl
mov
jp
les
ljmp
and
fisttpl
jne
mov
and
xor
in
fdivrl
xor
mov
cmpsb
js
push
push
repz
std
mov
push
clc
mov
sbb
push
inc
ffree
xor
call
push
xor
xchg
pop
inc
sub
xor
pop
and
cs
mov
push
leave
jns
in
xor
pop
mov
mov
mov
test
mov
shufps
jge
mov
jmp
adc
clc
xor
pop
sbb
jns
sub
fidivl
push
scas
cmp
sub
addr16
lds
icebp
or
push
scas
loopne
fisttpll
in
push
cmp
xchg
pop
or
adcl
cli
jg
mov
sbb
dec
sbb
repz
addb
ret
cmp
add
ljmp
fdivrs
enter
cltd
mov
lahf
sbb
jne
or
jmp
loope
xor
mov
cmpsb
subl
mov
mov
add
pushf
mov
enter
jo
mov
dec
vdivss
enter
sub
inc
add
xor
lcall
push
cmpsb
enter
add
xchg
pop
scas
test
add
out
mov
rolb
push
test
pusha
rclb
mov
or
call
push
sahf
xchg
cmpsl
cld
fisubl
or
loope
lock
hlt
sbbb
dec
and
xchg
stos
dec
adc
dec
dec
jns
cmp
fwait
test
in
mov
popf
sub
pop
inc
dec
aad
sub
pushf
testb
lods
stos
dec
fidivs
insl
xor
inc
mov
xchg
push
adc
aaa
not
les
hlt
jne
aad
pop
test
ja
mov
add
push
xor
xchg
push
inc
push
cmp
mov
icebp
sahf
xchg
mov
fnstenv
xor
fadd
sbb
repz
cli
adc
rclb
jle
fldt
ja
sub
push
pop
lds
jmp
pop
and
inc
jb
inc
xchg
cld
jmp
xchg
stos
cmp
xchg
xchg
cmp
int3
mov
and
and
movsb
mov
jo
pop
and
mov
dec
add
loopne
lcall
imul
push
cmp
mov
pop
xor
jne
push
mov
jo
sbb
fisttpll
lock
outsb
aad
add
sub
clc
xor
mov
testl
rol
xor
mov
in
pop
ret
push
ret
aaa
sbb
ret
mov
jp
mov
addr16
mov
scas
sbb
pusha
js
mov
mov
sub
jbe
ret
inc
rcll
cmp
shrb
out
jp
push
into
stos
adc
gs
xor
mov
and
aaa
aam
mov
push
xor
pop
pop
add
shrb
in
add
nop
mov
xor
mov
and
ljmp
mov
jl
mov
pushf
in
movsl
pop
or
inc
and
jl
and
pop
and
xor
inc
cmp
push
push
mov
inc
pop
jo
insb
push
add
mov
push
test
bound
gs
stc
pop
pushf
inc
dec
shl
push
rcll
sbb
inc
ds
sub
xor
or
repz
and
pushf
test
addr16
aad
cmp
shll
add
adc
jmp
and
inc
dec
jge
add
icebp
icebp
icebp
outsl
xor
icebp
ljmp
ss
pop
mov
mov
dec
dec
xchg
mov
lcall
xchg
sub
add
adc
jnp
outsl
ljmp
jne
mov
xlat
mov
sbb
adc
subl
cmp
aam
std
iret
shld
xor
mov
and
push
push
lea
add
mov
jg
mov
mov
clc
fisttpll
mov
push
adc
mov
sbb
xor
js
popf
mov
not
inc
repz
test
fadd
add
push
insb
lcall
inc
push
sub
xchg
or
arpl
lcall
or
xchg
xchg
or
mov
xlat
pop
enter
mov
clc
and
xchg
rcll
or
repz
mov
sbbb
in
out
sub
in
xchg
pop
lret
pusha
fwait
int3
je
or
lret
and
adc
mov
push
dec
icebp
cmp
jecxz
adcl
popf
cmpsl
lock
scas
in
in
outsb
in
mov
sub
xlat
sub
shrl
iret
mov
int3
pushf
jmp
jnp
jp
xor
out
daa
iret
xlat
xchg
repnz
pop
repz
dec
adc
scas
xor
mov
mov
sbb
das
xchg
add
sbb
cmp
mov
dec
loope
lods
cli
lods
jns
mov
jbe
inc
aaa
xor
divl
jmp
add
negb
jbe
mov
sahf
out
dec
mov
xchg
xchg
lock
mov
dec
movsb
push
mulb
cmovg
sar
int
popf
call
out
or
js
pop
and
xor
inc
mov
movsb
or
icebp
xor
loopne
adc
xchg
int3
cmpsb
xor
scas
int
inc
push
or
adc
xchg
ja
outsb
pop
jno
je
add
pop
dec
add
or
jl
jb
cld
inc
or
sbb
je
ret
cmp
jl
imul
das
lds
mov
into
and
shll
and
cmp
inc
je
sahf
lahf
push
cmp
cmpsb
insb
mov
jae
adc
or
inc
mov
addl
jp
push
int
mov
icebp
xchg
and
jnp
cmpsb
mov
into
mov
dec
arpl
arpl
xor
sbb
movsl
cmc
sub
inc
fadd
mov
cmp
imul
mov
stos
cmp
push
pop
iret
inc
xchg
ret
test
out
sbb
add
insl
addb
cs
in
cmc
lock
pop
inc
bnd
xor
fcomps
xchg
adc
sub
sti
arpl
ret
out
in
loopne
dec
jg
and
fiaddl
and
pop
inc
sub
jbe
cmpsl
aaa
add
push
daa
cmpsl
js
adc
xlat
mov
push
inc
sub
mov
pop
mov
jmp
cltd
aas
push
sub
push
mov
cs
dec
adc
xchg
cmp
jge
push
rclb
test
xlat
pop
push
cmp
mov
das
sbb
xlat
movsl
fnsave
out
push
iret
xchg
jb
mov
pop
mov
cld
fistpl
push
push
leave
pushf
aas
mov
cmpsl
in
jne
inc
cmp
adc
repz
icebp
or
fidivs
daa
out
scas
bound
mov
and
inc
ja
xlat
ret
mov
out
test
xor
ss
push
adcb
xchg
fildl
addr16
arpl
jae
clc
sub
scas
jno
mov
cmp
push
enter
mov
sbb
addr16
mov
or
pop
insb
lods
jmp
daa
jge
cmp
repz
fwait
sbb
ja
rcrb
repnz
icebp
imul
faddp
sub
mov
subl
xor
lret
sub
push
sbb
jge
stos
dec
test
dec
int3
push
inc
subl
ja
repnz
sub
and
dec
jbe
push
leave
test
xchg
data16
or
xchg
loopne
jno
repz
movsb
mov
loopne
xlat
or
cs
sub
mov
xor
xchg
ds
inc
xchg
jbe
jl
adc
or
adc
out
mov
lret
and
push
das
mov
popf
or
or
addr16
xor
js
dec
cmc
mov
xor
ja
sub
mov
jecxz
fs
cld
jge
jne
aaa
stos
ss
push
jnp
pop
scas
and
or
insb
xor
cmc
jge
cmp
xor
inc
pop
adc
fwait
insb
sub
jg
push
pop
cmc
mov
enter
add
pop
les
fwait
imul
lds
std
jns
pop
aaa
cli
popf
addr16
pop
adc
xor
mov
bound
mov
pop
inc
outsl
and
test
rcl
mov
in
xchg
sub
cmp
jmp
sub
adc
xchg
adc
mov
int3
nop
daa
fstpt
adc
rorl
dec
and
lret
fidivrl
sub
pop
sub
xlat
inc
push
mov
loop
or
mov
mov
ret
imul
hlt
cmp
sbb
mov
dec
jno
adc
xchg
imul
ljmp
inc
mov
mov
nop
sbb
dec
push
dec
repnz
lds
cmpb
aad
outsl
jns
or
xor
push
xchg
ljmp
mov
pop
bound
mov
lods
and
dec
mov
adc
inc
mov
aaa
das
orb
loope
cld
icebp
movsl
jecxz
jo
xor
mov
aam
icebp
add
and
pop
not
in
add
iret
stc
andb
stos
fs
and
arpl
aam
mov
or
fs
xor
sub
aaa
sbb
les
cmpb
mov
jns
ljmp
ror
mov
or
fdivs
add
jne
mov
mov
and
mov
ret
gs
sbb
repnz
ret
mov
sub
mov
xlat
and
xlat
push
and
inc
fs
mov
mov
add
dec
insb
and
xor
std
aas
pop
jl
mov
movsl
leave
sub
adc
sbb
iret
loop
cwtl
add
mov
adc
mov
mul
aaa
int
inc
add
jno
test
mov
das
xor
scas
sub
cld
lock
insb
lret
inc
jmp
cltd
out
push
out
ror
push
out
pop
rorl
leave
das
lcall
int
int
pop
jbe
cwtl
lahf
mov
pop
loop
mov
push
adc
aaa
pop
lods
xchg
insb
jle
cmpsl
movsl
dec
out
xchg
lahf
hlt
sub
mov
mov
shll
les
imul
dec
out
pop
outsl
loop
test
push
shrb
adc
add
out
lea
xchg
nop
mov
mov
call
pop
ljmp
push
xchg
fs
int
push
adc
fidivl
mov
popa
or
sub
push
mov
mov
pop
loope
loop
mov
sbb
lret
flds
jecxz
stc
clc
mov
das
dec
pop
add
xor
rorl
dec
cwtl
cmp
jae
test
push
inc
add
insb
lret
call
stos
xchg
jns
sahf
repnz
and
loop
push
inc
cmp
bound
or
cmp
popf
push
cmp
fdivr
xchg
cmpsl
jae
push
daa
divb
mov
stc
inc
stos
mov
ljmp
inc
ret
sbb
aaa
jmp
push
sbb
out
faddl
add
add
daa
jne
pop
mov
imul
mov
or
insb
mov
pop
aaa
lods
jae
insl
pop
movsl
mov
aaa
or
out
or
out
scas
xchg
push
dec
imul
dec
xchg
cmpsb
stos
mov
lock
jb
into
xchg
shlb
push
repz
das
sbb
lret
mov
popf
or
rcrl
mov
add
mov
sub
dec
leave
mov
test
ret
repz
jns
lret
sbb
and
sub
aaa
and
call
aam
ds
or
cli
lea
jns
dec
cld
inc
sbb
mov
mov
xor
mov
inc
sbb
rdmsr
rorl
push
cmpsb
jns
fdecstp
sub
xorl
fiadds
mov
divl
sbb
cltd
and
push
mov
push
arpl
pop
sbb
ret
pop
xchg
test
pusha
push
test
test
jbe
mov
cmpsl
cmp
insb
scas
in
mov
ds
arpl
push
sar
scas
out
repz
add
inc
mov
cmp
mov
ret
sub
mov
push
cs
fldcw
mov
xchg
loopne
mov
lods
and
lret
in
xchg
rcrb
xor
push
imul
push
andl
dec
cwtl
std
clc
push
fildll
aas
fiaddl
outsb
jo
in
xchg
pop
mov
fbstp
std
push
or
jle
in
pop
out
jmp
xchg
aad
cli
sbb
js
jmp
aas
data16
xorb
mov
call
inc
scas
int
nop
pop
mov
add
ss
lret
xchg
mov
sub
mov
shrb
jmp
loope
pop
and
dec
cwtl
cmp
lret
push
and
in
stos
lock
jb
mov
popf
movsl
cmp
cmp
push
dec
push
setle
je
dec
cltd
daa
adc
xchg
fstpt
test
push
shr
aas
insl
add
lock
push
fcomps
cli
xor
test
xor
aaa
xchg
sbb
xchg
inc
jmp
andb
sub
dec
sbb
push
dec
lcall
sub
sahf
xchg
subl
les
mov
or
lods
pusha
and
in
sub
hlt
xchg
adc
jmp
sbb
mov
xor
sub
push
mov
add
repnz
sub
movsb
xchg
and
xor
pop
das
mov
pop
dec
mov
inc
dec
insl
enter
cmp
fdiv
call
push
iret
inc
and
or
push
dec
loop
aaa
push
imul
mov
pop
ret
in
mov
loopne
inc
xchg
mov
das
repz
push
adc
jae
and
into
add
push
push
xor
movsl
mov
sub
jno
cli
xchg
gs
aas
adc
sub
cmc
cmp
fistps
mov
dec
pop
mov
in
sub
jle
mov
pop
insb
loope
jle
adc
pop
dec
sub
mov
pop
dec
mov
pop
cmp
and
cwtl
call
or
jecxz
clc
jae
xchg
repz
rsqrtps
mov
add
into
fstps
sub
movsl
out
mov
inc
repz
call
cmp
adc
faddl
push
sbb
clc
dec
fdivrp
mov
pop
push
repnz
pop
sub
pop
out
xchg
and
fbld
and
in
mov
push
or
int
inc
test
notb
inc
shlb
push
dec
rcrb
and
mov
mov
inc
pushf
arpl
in
push
add
mov
cmp
mov
cmp
inc
test
jae
shll
xchg
xchg
ss
in
jecxz
fisttps
js
es
cmp
push
subb
gs
lock
push
add
and
adc
mov
mov
lods
pop
cmp
ret
or
stc
xlat
daa
jno
xor
jp
cmp
mov
ja
mov
es
aad
lahf
and
dec
lret
or
mov
test
push
mov
ljmp
rclb
jp
out
mov
adc
pop
jp,pn
cmp
sbb
lock
push
inc
test
les
in
jge
sti
loope
ss
jo
cmpsl
rcr
dec
pop
push
andb
scas
dec
jge
js
mov
push
jno
mov
aam
jne
nop
inc
testb
mov
mov
cld
jp
test
orl
test
inc
pop
rep
cs
mov
mov
outsb
mov
push
dec
adc
loopne
add
push
jo
out
pop
mov
adc
cmpsl
fnstcw
out
pop
mov
ffree
negb
loop
aam
mov
sbb
push
pop
mov
pop
sahf
jne
scas
xor
sarb
cld
push
sbb
cmp
jmp
mov
dec
mov
in
adc
je
aas
cmp
mov
imul
dec
push
push
in
inc
or
js
jmp
aam
mov
push
and
movsl
mov
add
mov
mov
pop
xor
lea
imul
adc
sub
std
lds
addr16
scas
sub
sahf
inc
push
in
movsl
fbld
in
mov
outsl
push
dec
cmp
push
psllw
jmp
add
pusha
cmpsb
push
mov
sbb
dec
sub
fsubs
sbb
call
cs
js
loop
mov
cld
cltd
test
popa
into
jae
test
adc
mov
dec
mov
popa
lahf
cmp
mov
out
lods
test
xor
call
andb
cs
mov
mov
dec
or
ret
adc
and
xor
pop
push
imul
xchg
test
ret
jmp
add
adc
and
xor
pop
push
imul
xchg
test
ret
jmp
push
sbb
sub
cmp
dec
inc
pop
push
imul
xchg
test
ret
jmp
add
adc
and
ss
inc
pop
shrb
jns
mov
cmp
mov
push
sub
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
mov
rcr
jmp
repnz
xchg
in
into
mov
jae
inc
jns
or
xor
and
leave
rcr
jmp
adcl
adc
data16
xor
cmp
pop
fcomp
jmp
mov
movsl
test
xchg
dec
cmp
pop
dec
jo
pop
dec
cmp
pushf
lods
cltd
mov
pop
popa
stos
dec
mov
cmp
std
xchg
cmp
roll
enter
inc
push
mov
inc
jmp
mov
imul
enter
repz
andb
les
hlt
out
sub
jmp
ror
adc
push
mov
xchg
icebp
pop
push
mov
or
cmp
out
ror
xor
xor
lods
inc
fsubl
sbb
jns
pop
add
mov
or
fs
into
or
push
jmp
mov
popa
rorl
adc
shrl
and
icebp
insl
div
orl
pop
lahf
imul
loope
sub
push
mov
stos
test
cmc
std
in
divb
cmovno
sbb
gs
push
push
rcrl
out
stos
ffree
in
push
sub
sysenter
or
push
je
jb
inc
dec
and
lahf
repz
xchg
mov
sbbl
jno
popa
jns
or
sbb
sub
cmp
leave
rcr
jmp
sbbl
jno
popa
jns
or
sbb
sub
cmp
leave
add
test
mov
mov
pop
lods
lds
or
mov
daa
pop
cli
mov
push
notl
stos
bound
push
mov
pop
in
jb
cmp
cmp
ret
or
pop
inc
inc
aaa
popf
aaa
in
ja
mov
shr
jnp
push
lahf
or
mov
sub
push
push
cmp
ljmp
jno
and
jns
mov
insb
or
mov
jg
mov
ret
rcr
in
and
dec
or
pop
dec
jno
shrl
jns
js
nop
test
xor
stos
jge
or
pop
push
xor
test
dec
sub
jno
cmp
push
daa
flds
pop
clc
test
in
push
or
xor
andb
cli
pop
movsl
push
arpl
loop
les
or
shlb
add
cmp
mov
mov
int
and
mov
test
je
sub
mov
add
arpl
push
adc
adc
mov
add
rcll
xor
push
test
or
mov
adc
or
out
cmp
es
xchg
xchg
add
jne
pop
and
in
sbb
daa
mov
sub
xchg
pop
xlat
push
pop
cli
les
repz
outsb
roll
jae
inc
aaa
mov
xchg
sub
idiv
out
jp
jae
jae
xchg
out
push
xor
in
loopne
xchg
leave
in
inc
sbb
rcll
hlt
idivl
pop
add
outsb
cld
cmp
lcall
jecxz
shrb
or
push
adc
sub
pushf
pop
mov
or
adc
call
mov
aaa
push
and
les
push
das
jns
inc
or
cmpsb
mov
insb
cltd
test
xor
sub
hlt
stos
jae
and
test
jecxz
inc
sbb
int
push
inc
xlat
daa
icebp
push
repnz
lods
adc
lahf
call
push
je
into
vpcomd
idivl
mov
push
and
stos
mov
mov
jmp
push
mov
push
arpl
sub
lret
cmpsl
adc
sbb
repnz
push
pop
mov
stos
dec
out
lret
push
call
cmp
mov
push
lods
hlt
shl
sub
test
xchg
loop
lcall
fnsave
sbb
stc
dec
aam
dec
aam
xorb
mov
cmc
andb
and
adc
shlb
jl
pop
xorl
imull
popa
inc
xchg
scas
and
cwtl
mov
ret
mov
mull
arpl
jg
push
push
cli
mov
jg
outsl
mov
push
push
mov
int3
jb
xlat
adc
push
enter
xchg
sbb
out
pushf
add
paddusw
mov
adcb
push
lret
add
or
sbb
pop
sti
add
fdivrs
mov
idivb
stc
inc
mov
xchg
js
xor
xchg
add
jno
jmp
and
mov
int
cmp
xchg
xor
pop
adc
mov
aaa
ljmp
xor
dec
lret
ror
mull
daa
sbb
popa
ja
sbb
dec
shr
pop
popf
mov
pop
inc
aam
mov
lahf
out
add
sub
push
mov
fldcw
sub
nop
xchg
pop
dec
mov
stos
cltd
or
sti
lret
rcrb
xchg
adc
add
in
sbb
xor
iret
sti
stc
pop
xor
inc
jae
xchg
cmpsb
les
outsl
cmp
push
cmpsl
or
and
push
push
in
call
jl
sub
xor
pop
bound
adc
cltd
in
pop
add
mov
jbe
mov
pop
rcrb
mov
in
nop
out
loope
or
cmp
rcrb
mov
mov
lahf
ja
stc
xchg
daa
mov
xor
inc
push
icebp
lods
and
and
push
mov
cwtl
mov
jl
dec
pop
and
sub
dec
insb
iret
mov
sbb
fidivs
movsb
stos
cmp
sbb
jns
mov
push
and
insb
test
cmc
jmp
stos
call
popa
cwtl
mov
add
test
cs
aad
inc
lcall
xchg
bound
fcomps
or
sbb
and
scas
test
jmp
inc
jns
cltd
xchg
jge
dec
fbld
repz
or
adc
inc
icebp
dec
addr16
mov
fldlg2
pop
pop
mov
fisubrl
jge
mov
pop
or
mov
addb
adc
cmp
lods
stos
sbb
cmp
imull
mov
adc
mov
pop
add
push
hlt
movsb
aas
les
addb
jbe
mov
push
pop
stos
incb
sub
notb
vpavgb
insl
icebp
hlt
mov
int3
mov
arpl
push
test
mov
fs
or
lods
push
push
pop
dec
call
ds
cmp
mov
leave
test
shrl
and
iret
cmp
push
xor
and
and
jnp
popf
inc
outsl
lret
adc
aas
shll
xor
dec
or
rcrb
cwtl
mov
add
das
sub
mov
or
test
pop
fsubl
out
cmp
test
jae
push
mov
dec
scas
jns
out
mov
jbe
xchg
hlt
xchg
in
inc
insl
mov
fcomi
add
arpl
and
push
jge
add
adc
push
xor
ljmp
mov
test
notl
mov
add
dec
arpl
inc
les
in
jge
sub
fisttps
pop
lock
cli
pop
cmpsb
mov
mov
dec
cwtl
outsl
mov
dec
test
add
pop
or
aaa
add
inc
iret
lods
mov
mov
jae
mov
lods
int
jmp
aam
jl
ljmp
mov
loop
pusha
lods
adc
lods
je
out
lods
pop
xchg
inc
dec
cli
fld
or
dec
jae
notb
cltd
lock
int3
add
pop
inc
repz
andl
in
dec
and
ss
cmp
clc
jg
cltd
fnstsw
push
call
pop
in
in
insl
int
mov
movsl
push
mov
adc
xchg
pop
loopne
scas
lea
popf
sbb
mov
shl
cmp
xchg
pushf
fwait
pop
adc
adc
jl
mov
mov
filds
clc
test
jg
rolb
pushl
sbb
mov
sbb
enter
mov
xchg
sub
sbb
mov
mov
test
popf
sub
clc
mov
jmp
adc
inc
mov
mov
adc
xchg
push
data16
cli
clc
fcoml
and
insb
mov
rcll
out
scas
dec
xor
or
stc
dec
popf
aad
inc
sub
test
jge
dec
aad
data16
sub
dec
out
out
and
jnp
arpl
rep
jl
push
add
test
or
orb
inc
sti
imul
sub
inc
push
aaa
jmp
out
stc
outsl
movsl
dec
insl
into
add
sbb
inc
pop
aas
sub
and
adcb
aad
int3
dec
push
loopne
sub
ja
movsb
add
fmuls
lds
cltd
cli
stos
repz
jmp
adc
js
xor
push
lea
mov
or
mov
int3
fs
inc
and
lcallw
cwtl
test
insb
sbb
xor
cmp
mov
mov
cmp
aas
loop
call
shrb
jge
cmpsl
mov
mov
repnz
stos
pop
mov
sub
adc
xor
loopne
fmull
loope
aaa
xor
out
lock
leave
pop
sti
clc
xchg
adc
push
es
pop
nop
cmc
pusha
repz
adc
or
xor
add
mov
fucomi
jle
xchg
adc
outsb
dec
mov
out
push
inc
mov
xchg
jns
stos
push
mov
mov
es
repz
inc
pop
push
cmc
push
inc
mov
sub
daa
jo
mov
sbb
cmpl
xchg
mov
pop
shlb
daa
and
xchg
xlat
add
push
arpl
cwtl
jle
repnz
inc
int
ljmp
negb
in
ror
cmp
mov
add
ret
cmp
jo
mov
dec
and
pusha
in
push
sbb
mov
push
jg
leave
mov
fildll
imul
mov
fwait
clc
repnz
dec
mov
popa
push
xor
mov
es
stos
xchg
imull
std
push
push
and
movsb
inc
adc
testb
jo
ss
dec
lods
adc
mov
out
aam
or
cld
xchg
mov
dec
push
pop
leave
xlat
js
lock
mov
xor
push
mov
sbb
cmp
jmp
adc
mov
xchg
inc
fwait
or
jo
lea
pop
sub
fbstp
iret
test
inc
stc
mov
sub
pop
inc
add
add
push
jmp
jp
fwait
lea
add
push
push
shlb
into
mov
out
out
cmp
pop
adc
push
insl
jb
rorl
or
sbb
jecxz
lret
lcall
jo
push
xchg
adc
ds
mov
fiaddl
jg
cwtl
dec
fwait
aam
or
rcll
sub
or
iret
pop
or
pusha
and
aaa
and
mov
test
out
test
inc
cmpsl
xchg
jge
sbb
pop
movsl
test
or
mov
stos
inc
mov
mov
sub
jge
jns
aaa
push
pop
cmp
adc
dec
sub
lret
bswap
lret
cmp
clc
push
inc
add
or
push
push
mov
adc
subl
adc
jp
adc
inc
add
mov
mov
xor
sub
insb
jmp
data16
push
fistpll
cli
icebp
push
inc
cld
jb
mov
sub
mov
ret
sbb
test
or
ret
dec
mov
pop
scas
inc
adc
inc
clc
pop
mov
jp
fistl
fstpl
inc
jg
mov
sbb
sbb
xor
or
sub
dec
sub
inc
jmp
psllq
fs
mov
shrb
fs
sub
ror
leave
out
into
ret
pop
or
add
add
cmc
cli
push
pop
lods
clc
jo
xchg
aaa
xchg
ss
test
mov
sti
jo
in
push
orb
mov
dec
inc
test
pushf
insb
leave
pop
inc
in
sbb
lret
mov
js
leave
inc
mov
hlt
adc
add
das
int
dec
cmpsl
sub
add
scas
add
in
in
stos
mov
xlat
xchg
fwait
xchg
popa
mulb
stos
and
inc
dec
repnz
sahf
test
andb
xchg
lods
xchg
int3
fxtract
jo
cli
lds
fcoml
fimull
jp
mov
imul
subb
test
mov
cmp
push
mov
lds
aam
pusha
adc
or
sti
ret
lcall
repz
ja
fs
push
aad
mov
push
popa
push
mov
sbbl
ds
lret
inc
call
pop
loope
insl
mov
jmp
sub
mov
bnd
push
inc
dec
sbb
mov
nop
inc
adc
test
rorb
mov
mov
sti
jle
push
addr16
iret
jne
pop
arpl
pop
pop
add
call
call
sarl
pop
adc
das
loop
add
sub
and
test
enter
sbb
push
add
or
test
popf
fcmovne
inc
jnp
ds
cmpsb
sbb
lcall
push
out
jae
dec
ss
xchg
aaa
fwait
cli
pop
dec
mov
imul
cwtl
pop
in
divb
mov
sahf
cmc
std
jecxz
jg
les
ret
adc
pop
pop
sarb
inc
adc
in
mov
lret
jg
test
orl
test
push
loope
adc
add
jmp
lahf
push
jno
jge
loope
mov
mov
in
ds
lahf
cs
pop
push
inc
mov
cltd
pavgw
pop
mov
dec
insb
xchg
sbb
jo
fs
add
sti
jp
pop
and
das
je
test
pop
rorl
cmp
dec
push
mov
or
sub
in
push
inc
and
jmp
mov
dec
outsb
movsl
push
jecxz
dec
cmp
ffree
sar
mov
call
xchg
cs
stos
pop
cmp
or
iret
mov
xchg
sti
sahf
lahf
inc
cmpl
or
sti
mov
or
addr16
push
out
pop
inc
jbe
cmp
cld
dec
test
test
aaa
jge
fstl
and
cld
fwait
dec
add
and
ja
fidivs
adc
push
push
repz
fcmovnbe
fcom
movsb
popa
push
xchg
push
sbb
xchg
pusha
imul
sbb
das
mov
loop
mov
lds
sub
xchg
cld
cli
lods
mov
enter
mov
adc
outsb
aas
fs
addl
push
adc
inc
xchg
mov
scas
xchg
cltd
add
lahf
jle
xor
push
cmp
xchg
fcomps
adc
jae
mov
notl
or
fstps
jg
xor
xor
cwtl
xchg
dec
and
int
loopne
stos
jg
cmp
inc
andb
out
jne
aam
fadd
jnp
mov
stos
lahf
hlt
dec
dec
test
dec
and
or
dec
inc
sbb
lahf
mov
xchg
mov
cmc
clc
leave
pop
loopne
push
je
mov
ret
xchg
leave
out
in
loop
pop
movsl
push
dec
and
fiaddl
fcmovnu
mov
lret
fidivrs
add
jo
xor
rcrl
jbe
dec
push
inc
xchg
rcr
cltd
jp
loop
dec
inc
pop
movsl
or
jmp
or
aaa
outsb
mov
fcmovnbe
dec
sbb
jmp
add
mov
and
add
jl
enter
repnz
mov
lea
in
mov
daa
mov
mov
jb
jnp
pop
cmp
lds
sub
fcmovne
out
in
bound
iret
fidivl
stc
aas
inc
cmp
push
loopne
iret
shll
adc
iret
in
inc
mov
or
sub
xchg
cmp
repnz
cmp
inc
imul
shll
mov
push
pop
jecxz
and
push
sbb
insb
int3
dec
clc
mov
popf
inc
and
stc
fwait
push
test
jmp
sub
cmpb
dec
and
insb
jl
ror
pop
mov
outsl
and
add
fildl
push
popf
out
paddw
adcl
adc
and
mov
test
fcmovne
stc
mov
mov
loop
sub
adc
in
test
movsl
sub
cli
in
sti
lods
or
xchg
popa
adc
sbb
movsb
data16
adc
pusha
outsw
sbb
cmp
sub
cmc
ret
adc
stc
stos
mov
jge
cmp
add
add
xchg
rcrb
or
sbb
jmp
dec
adc
sbb
push
sub
cmp
popf
push
inc
dec
test
popa
xchg
clc
out
xchg
je
jmp
xchg
subb
pop
mov
adc
mov
fwait
lret
or
xchg
xchg
mov
adc
sbb
or
cmc
imul
mov
mov
cmp
lret
sub
scas
js
lret
sarl
repnz
sbb
mov
push
xchg
pop
shrb
xlat
rorb
pop
je
jnp
cld
out
xor
jecxz
repz
xchg
mov
cmp
jle
pop
outsb
loop
cmp
movsb
insb
cmp
faddl
imul
push
xchg
xchg
mov
gs
repz
sub
mov
lret
inc
add
cs
mov
sub
repnz
rclb
jg
push
es
imul
shrl
xor
lock
mov
pop
jp
push
and
jmp
xchg
sbb
and
pop
fldl2e
and
fdivs
lea
daa
mov
sbb
stc
jnp
mov
pop
xor
arpl
test
mov
sbb
in
inc
mov
fwait
stos
sbb
and
jmp
jg
loope
aas
sub
push
or
int3
lods
or
incb
mov
pop
pop
jp
roll
mov
in
ficoml
adc
adc
cmc
push
mull
or
cmp
std
mov
pop
rcrl
in
mov
and
lods
outsl
popf
lods
fstpt
aaa
jl
pop
and
dec
test
add
xchg
pop
inc
lret
leave
or
insl
out
push
adc
popa
mov
andl
xchg
pop
hlt
mov
fistl
mov
jns
sub
xlat
mov
push
fsubl
jne
fnstcw
jl
lock
lret
mov
jbe
sahf
push
push
ss
xchg
test
cmc
lods
pushw
cli
or
bound
and
sahf
or
test
ret
mov
loope
fsubs
popa
icebp
mov
clc
or
out
add
push
or
aaa
lds
cltd
inc
lcall
sbb
imul
xchg
outsl
pop
jmp
mov
and
fsubl
inc
xlat
jge
aas
lcall
aaa
mov
lcall
lcall
or
int
sti
or
bound
je
lods
jge
cmp
sub
test
jne
add
outsl
loop,pn
xor
call
popf
int
cwtl
pop
icebp
add
jle
adc
or
loopne
rep
aam
mov
inc
outsl
dec
add
mov
or
cli
sub
mov
aaa
fbstp
jge
std
xchg
pushf
daa
pusha
xchg
shlb
pop
nop
sub
movsl
lods
cmpsl
jno
insl
lcall
sub
cmc
xor
add
std
iret
sbbb
xor
xor
mov
cmpsl
fwait
test
adc
out
jecxz
incb
fisubs
pop
pop
leave
and
pop
xchg
stos
inc
lds
daa
rorl
pop
dec
mov
jno
mov
pop
ret
push
cwtl
sbb
cmp
addb
int3
cli
ss
inc
das
cltd
sbb
pop
and
fs
hlt
mov
imul
xchg
icebp
push
lds
inc
xlat
xchg
lea
jl
rcl
orb
daa
jne
lea
pop
dec
imul
lods
popf
popa
pop
push
iret
mov
ret
int3
jp
ds
out
pushf
sbb
mov
fistps
lds
popf
mov
es
pop
es
mov
inc
push
data16
insl
mov
inc
mov
jmp
pop
pop
push
fdivl
sbb
mov
adc
dec
adc
sub
clc
inc
jl
or
hlt
and
lds
fcompl
shl
pop
mov
mov
lock
in
popa
cmp
jne
mov
mov
xchg
push
clc
pop
mov
jno
ret
jecxz
mov
mov
das
jmp
lret
fmul
outsb
in
int3
adc
nop
xchg
sbb
paddsw
dec
shlb
cli
imul
mov
add
call
daa
pop
fisubl
xchg
mov
add
jl
jmp
pop
inc
xor
ror
fst
jmp
mov
mov
and
nop
in
in
lock
sti
inc
leave
aad
mov
popf
repz
jp
inc
push
push
dec
dec
push
sti
add
loop
dec
mov
add
bound
or
test
mov
cmp
jbe
sbb
repz
icebp
jne
lahf
jp
mov
pop
pop
or
add
jle
iret
sub
pop
pop
pop
push
js
dec
push
daa
mov
fwait
xor
jns
cmp
push
popf
jmp
push
ljmp
shll
movsl
cwtl
imul
lret
nop
ljmp
je
out
cmp
inc
pop
arpl
aad
jmp
mov
push
pop
fstpt
mov
mov
or
cmpsb
andl
push
daa
cmp
cli
nop
pop
jb
movsl
shlb
xchg
jmp
movsb
leave
fldcw
fstl
adc
adc
push
into
out
or
movsl
daa
or
pop
ret
jb
repnz
aam
daa
dec
push
mov
adc
std
jns
cmp
mov
test
mov
jb
add
add
mov
mov
jno
popa
jns
or
sbb
sub
cmp
leave
rcr
jmp
sbbl
jno
popa
jns
or
sbb
sub
cmp
leave
rcll
mov
mov
jne
popa
jns
or
cmp
leave
cmc
fld
jmp
sbbl
fldt
push
orw
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
add
pop
and
js
pusha
and
or
or
fsubs
mov
sbb
add
pop
and
js
or
pusha
sub
or
mov
add
lock
and
js
or
pusha
sub
andb
int3
mov
notl
dec
je
and
pop
sub
repnz
push
pop
shrb
mov
xchg
adc
push
fdivrs
xchg
lea
and
jne
std
shll
jge
push
adc
dec
daa
lahf
inc
adc
test
aam
xor
jo
nop
mov
xor
pop
adc
dec
movsb
xor
or
in
jo
or
pop
fisubrl
arpl
xor
shr
xchg
or
jecxz
xor
and
cwtl
das
fs
icebp
xor
jecxz
mov
xchg
in
pop
jo
xlat
mov
cwtl
stc
nop
popf
pop
pop
movsl
mov
adc
push
push
sbb
jo
or
fsubs
mov
cwtl
loopne
lock
fs
dec
add
inc
and
add
jb
subb
mov
subl
pop
inc
push
adc
cmp
mov
lods
mov
jmp
repz
test
add
or
pop
sbb
pusha
sub
or
fsubs
mov
cwtl
loopne
lock
and
js
or
pusha
sub
or
fsubs
mov
cwtl
loopne
lock
mov
cmc
repnz
pop
lret
pop
or
in
xor
test
mov
bound
pop
ja
nop
test
out
or
movsb
and
fistps
inc
test
out
inc
cmp
push
adc
test
xchg
ds
mull
xlat
cmp
add
pop
std
mul
ss
push
lcall
pop
push
dec
mov
jnp
pop
push
cmp
sub
dec
and
fildll
mov
mov
adc
bnd
lret
xchg
scas
aam
adc
pop
movsl
aad
xlat
cmp
pop
out
xlat
scas
xchg
sub
jmp
lods
sub
out
ffree
mov
lret
lret
sbb
cmp
adc
or
pop
add
push
inc
movl
sti
push
push
pop
es
enter
fmull
arpl
std
cmp
dec
fsubr
repz
aad
and
mov
push
ret
es
fildll
jb
mov
dec
aam
xchg
aam
inc
push
gs
xor
and
sub
mov
aad
jne
and
xor
mov
or
xchg
shl
loopne
jp
ljmp
je
pop
xor
ja
push
into
scas
push
pusha
lock
or
xchg
pop
rcrl
imul
pop
pop
aad
mov
xor
stc
add
dec
out
test
je
jl
push
mov
lods
in
repnz
cmp
inc
or
mov
sbb
stos
je
addr16
jne
insb
lea
mov
ss
cmpsb
dec
gs
mov
ret
nop
mov
adc
loope
push
xlat
sbb
jmp
les
sub
xchg
lods
or
mov
mov
add
xchg
xor
add
sbb
mov
dec
push
xchg
xlat
mov
or
push
add
and
push
pop
cli
push
pusha
lret
sarb
in
cmpsl
into
cld
shrl
fists
sti
push
out
loop
sub
pop
or
js
out
push
stos
test
test
pop
popf
sub
mov
sub
clc
bnd
int3
adc
mov
inc
icebp
and
ficoms
outsl
xor
xor
push
insb
lcall
incb
adc
into
je
popf
cmpsb
inc
jle
mov
adcb
testb
adc
push
sbb
stos
jecxz
std
rorb
mov
fisubs
jge
pop
out
and
lahf
insb
pop
loopne
jae
cmp
jbe
aam
mov
stc
and
xchg
and
loopne
cmp
add
roll
outsb
nop
dec
mov
jnp
jne
push
lcall
mov
jmp
lds
ja
push
jb
adc
pop
xchg
sub
inc
aad
add
es
clc
in
sbb
insl
jnp
jp
das
xchg
les
loope
lcall
test
repnz
or
popf
out
add
sbb
pop
imul
cmp
push
imul
dec
cmp
nop
sbb
mov
xchg
cwtl
jle
xchg
out
int
xchg
mov
push
pop
inc
mov
mov
aam
lds
add
mov
inc
push
xor
pushw
leave
push
popa
mov
dec
xchg
or
jge
rclb
push
ss
jbe
push
xchg
mov
cmpsb
inc
pusha
cld
inc
shr
cmpsl
cmp
adc
jnp
mov
xchg
test
fsts
jae
or
loope
test
cmp
and
sub
add
xchg
jb
pop
push
fadds
or
movsb
inc
mov
mov
scas
cmp
mov
sbb
sbb
jb
xor
test
imulb
sarb
mov
inc
cmp
dec
add
lods
iret
mov
mov
aad
push
movsb
adc
mov
lods
stc
shrl
jns
jnp
xchg
lahf
dec
outsl
or
inc
fdivp
clc
pop
and
cwtl
or
cmp
mov
jmp
add
pushf
dec
leave
jg
mov
mov
test
xchg
test
cwtl
xor
adc
jae
or
jmp
sub
daa
sbb
jmp
sub
imul
lds
cmp
xchg
jmp
imul
sti
inc
fisubrl
jb
inc
sub
xor
add
sbb
mov
cmc
call
jecxz
loop
xchg
mov
aam
imul
mov
orb
dec
push
daa
in
pushf
cmp
pop
mov
add
jecxz
jne
push
sbb
popa
bound
repnz
imul
pop
xor
inc
js
out
pop
in
and
aad
mov
mov
sbb
imul
pop
dec
sbb
and
inc
adc
lret
add
sub
lods
inc
iret
sbb
popf
loop
mov
out
aas
in
loope
pop
mov
pop
xor
bound
and
jno
jle
test
inc
lods
addr16
xlat
pop
jp
pop
loope
adc
popa
mov
aas
insb
fildl
pop
xchg
jne
pop
xor
mov
ljmp
int3
and
mov
mov
and
cwtl
arpl
xchg
mov
mov
push
sahf
add
sahf
imul
jne
jl
rcr
push
pop
push
adc
xchg
cmp
cmp
or
bound
add
ds
test
imulb
mov
add
lret
outsl
addr16
aaa
jb
inc
hlt
xchg
fcmovne
imul
test
cs
push
adc
xchg
mov
imul
and
push
or
in
std
cwtl
inc
push
push
leave
dec
push
push
js
cld
movsb
enter
mov
adc
out
inc
lock
pop
daa
aad
and
push
gs
push
jmp
inc
lods
movsl
sub
xor
xchg
icebp
push
imul
mov
imul
ficoms
mov
pop
pop
jb
sub
imul
or
fnstcw
push
jg
xchg
stos
sbb
jb
jge
movsb
xor
repnz
jmp
cmpsb
leave
jmp
loop
cmp
sahf
insl
ret
and
add
jp
aam
jmp
leave
subb
xor
adc
rep
xor
cmp
pop
sbb
lret
bound
jmp
in
push
dec
xchg
lds
icebp
aad
and
mov
cmpsl
gs
xchg
or
out
sti
fstpl
pop
fidivrs
daa
clc
inc
les
push
jae
sub
fs
pushf
inc
cltd
and
nop
stos
pop
mov
lret
int
mov
and
jnp
outsb
out
adc
ljmp
cmp
movsw
aaa
cmc
repnz
pusha
cmp
adc
or
inc
push
in
fnstenv
in
ss
cltd
inc
daa
in
dec
std
add
hlt
mov
addb
loopne
out
jb
pop
enter
jns
mov
pop
icebp
adc
jno
cmc
push
leave
lock
mov
jmp
scas
pop
jecxz
xchg
gs
out
stos
stos
xchg
in
sub
fldcw
cli
test
cmp
test
ror
aam
loop
movl
sahf
cltd
subl
mov
jp
ss
push
rcrb
aas
mov
jns
gs
testb
ss
pushf
mov
insl
pushf
jle
cmp
inc
or
call
push
sbb
test
stos
mov
jecxz
fcoms
dec
push
add
mov
rcrb
repnz
inc
lcall
add
mov
fs
test
shll
inc
mov
or
push
mov
pop
iret
insl
xchg
pushf
or
arpl
mov
jae
pusha
fldt
iret
pslld
mov
or
xchg
ja
aaa
pop
shlb
js
in
jb
xor
adc
xor
rclb
imul
and
and
cmp
out
in
pop
adc
shlb
adc
and
mov
fiaddl
push
sti
out
dec
dec
and
leave
xorb
iret
insb
int3
ret
in
inc
movsl
shll
cmpsl
ret
fistps
pushf
ret
or
mov
jle
daa
and
add
jp
fstp
mov
jnp
and
cmp
cwtl
in
ljmp
daa
shl
test
lods
push
add
loopne
test
andb
mov
push
movsl
and
fcmovne
ficoms
mov
mov
fidivs
pusha
cmp
mov
jp
jae
shrb
add
push
mov
cmp
jg
dec
stos
cmpl
out
cmpb
push
add
adcb
rcll
mov
pop
pop
test
pop
sub
inc
cmp
sub
dec
xor
dec
mov
insb
add
lods
push
jb
icebp
iret
outsb
arpl
adc
xor
adc
aas
stos
inc
movsl
iret
mov
dec
movl
pop
mov
cwtl
loope
mov
jmp
leave
add
mov
scas
cmpsl
sbb
jg
inc
add
dec
xlat
pushf
loopne
jns
in
xor
adc
cwtl
mov
shll
pop
out
stos
in
xor
int
ds
push
inc
or
outsb
jns
popf
aad
jb
jge
imul
mov
lock
cmpsb
cmp
stos
add
fmull
mov
fwait
add
and
push
js
js
jns
push
hlt
fcomip
pushf
mov
out
dec
es
jecxz
lret
sbb
push
in
fldcw
mov
ret
repnz
jnp
adc
and
mov
and
inc
mov
out
cmp
sbb
xchg
scas
inc
adc
out
pop
out
movsb
mov
scas
mov
gs
addr16
cmp
dec
jne
lahf
add
in
pop
iret
xlat
stos
push
sub
es
testl
cltd
sub
jb
dec
xchg
ja
push
in
lahf
in
outsl
mov
imull
xchg
and
sahf
mov
inc
ss
add
jg
shl
jns
jle
cmpsl
jg
xlat
test
shlb
sub
call
and
testb
lret
out
repz
aam
xlat
sub
inc
xchg
data16
dec
addr16
dec
outsb
mov
add
test
mov
cmp
xor
stos
push
shll
inc
jne
sub
lret
xor
sub
mov
lods
test
cmpsb
and
jb
add
roll
inc
aaa
jge
adc
xchg
push
lods
in
dec
shr
jmp
call
inc
cmp
pmaddwd
mov
push
test
aaa
lret
lcall
push
adc
pop
test
xchg
add
lcall
incl
bound
inc
movsb
mov
pushf
repz
sbb
iret
push
sbb
pushf
and
test
cltd
adc
mov
mov
test
xor
pop
pop
ljmp
gs
fistps
ret
xchg
inc
nop
clc
gs
xchg
pop
mov
test
and
sti
inc
push
and
xchg
xor
or
adc
cli
orl
sub
test
push
rolb
jp
std
pop
mov
xor
hlt
mov
xchg
incl
add
mov
push
pushf
pop
jg
cmpsb
aaa
inc
or
mov
and
jne
loopne
in
test
lret
enter
cmp
and
adcb
adc
dec
xchg
mov
and
arpl
adc
stos
fincstp
pop
repz
in
pop
pop
hlt
cs
add
push
mov
cmp
shr
dec
mov
dec
stos
dec
lahf
or
adc
xchg
mov
out
int3
arpl
jno
or
in
mov
dec
and
xchg
inc
push
popa
ds
xchg
lea
cmp
pusha
mov
sbb
stos
ret
adc
lret
mov
sub
cmp
mov
fdivrl
int
pop
add
jne
pop
popf
sbb
sti
hlt
test
mov
fsubrp
aad
rorl
lock
or
sbb
mov
mov
icebp
mov
mov
pop
out
leave
mov
pop
cltd
movsl
adc
imul
pop
xor
and
xor
lea
adc
repnz
popf
add
arpl
lahf
mov
mov
sub
cmp
mov
shrl
sahf
jo
ljmp
cli
imul
loope
cs
mov
lods
push
ljmp
test
cmp
test
int3
bnd
ljmp
or
push
mov
and
mov
negl
push
jo
out
sub
jmp
add
mov
adc
hlt
sarb
out
push
lea
andb
adc
or
lret
sti
imul
imul
popa
lret
shll
call
call
sub
lret
mov
out
insb
lock
mov
fldcw
icebp
cmp
mov
dec
lahf
push
aad
in
std
repz
fs
sbb
or
xchg
pop
sub
or
sti
push
sub
int
faddl
lret
mov
daa
test
jecxz
hlt
nop
ss
fcom
incb
imul
add
leave
es
sbb
out
push
repnz
sub
sar
aaa
pusha
push
or
lret
imul
add
pop
sti
push
push
test
lcall
adc
adc
ja
xor
filds
stc
loopne
rorb
andl
mov
sahf
or
dec
enter
mov
add
push
cmp
ss
scas
dec
aas
decb
fsubs
arpl
roll
fcoml
mov
xlat
mov
xchg
or
cmp
out
push
xor
mov
adc
test
push
subl
notb
pop
pop
sub
imul
inc
testb
xor
inc
orb
add
cmp
test
or
jg
mov
cmp
mov
in
aad
cs
sub
icebp
loope
mov
cmp
lods
testl
xorl
dec
add
jae
cmp
cltd
loopne
rclb
shl
imul
fstp
decb
mov
inc
xchg
fldt
lret
subl
sub
test
gs
push
adc
cmp
dec
lds
jg
ret
cmpsb
inc
das
dec
cs
xor
mov
stc
in
stos
imull
ret
adc
imul
jae
pop
nop
cmp
lea
push
pop
lods
nop
leave
enter
out
mov
mov
inc
dec
rcr
insb
idivb
imul
data16
jle
cmp
xor
inc
lret
inc
loope
pop
push
mov
jns
xor
jne
test
nop
adc
mov
aam
cmpsl
push
xor
cmpl
aam
xchg
in
pushf
popf
fldt
adc
outsl
out
bound
or
outsb
mov
dec
aad
sub
dec
jb
xor
mov
xchg
push
clc
les
cli
push
orb
jmp
inc
and
rcrl
jle
add
out
out
push
push
je
lods
ret
daa
and
mov
xchg
out
or
arpl
mov
or
aad
or
je
pop
in
test
negl
add
sbb
vgetexppd
mov
out
fdiv
pop
add
sub
aaa
xorb
incl
jno
sub
jbe
test
in
in
push
test
mov
jg
cli
shll
dec
jns
mov
push
outsl
mov
int
movsl
in
push
xchg
lret
jge
xor
cmp
fdivrl
repz
add
mov
adc
rcr
adc
sti
jg
pop
mov
push
lds
cmc
subl
cmp
xor
bound
cltd
sbb
out
xchg
inc
sahf
fisttps
adc
adc
mov
lock
fs
mov
sbb
xchg
orb
and
bnd
loope
mov
xchg
push
aam
leave
sbb
adc
dec
pop
pop
arpl
cmpsb
in
jbe
pop
add
hlt
push
mov
test
aas
jmp
test
or
in
jo
repz
setnp
cmc
cmp
cli
pusha
lds
and
adc
test
fadd
insb
repnz
mov
lahf
jno
inc
push
mov
push
ss
cmc
ja
mov
cmpsl
dec
jmp
and
dec
ret
ja
loope
sbb
imul
jmp
out
out
mov
iret
call
movsb
inc
lock
out
mov
push
mov
mov
pop
imul
sub
out
loope
lds
lahf
mov
fcmove
inc
or
push
push
jnp
jge
add
mov
pop
pop
dec
xchg
mov
add
push
andb
xchg
mov
aad
mov
insl
mov
pop
cmp
jl
xchg
sti
push
hlt
or
jmp
mov
aad
pop
push
negb
xor
and
or
clc
loop
mov
sub
inc
outsb
and
push
cmp
out
xchg
xor
inc
in
sbb
pusha
loope
ds
repnz
mov
jl
clc
sbb
add
jb
pop
push
push
test
push
dec
adc
inc
test
adc
mov
sti
lods
cwtl
and
stc
pusha
lods
mov
adc
das
std
adc
nop
repnz
and
add
jp
fdivl
shlb
cmc
sahf
fdivs
mov
fiadds
loop
popa
jno
dec
flds
add
bound
dec
lret
jae
add
outsl
mov
shll
setne
jb
pushf
orl
out
in
and
add
mov
fsubrs
push
or
add
jge
cmp
enter
pop
inc
ja
pushl
push
repnz
inc
stos
cwtl
jae
and
xor
out
push
mov
call
insb
int3
test
pop
push
pop
rcrl
cmp
lahf
jle
iret
adc
nop
cmp
inc
or
push
xchg
pop
pop
loopne
xor
rcl
add
dec
inc
mov
dec
outsb
or
insl
sub
scas
push
loopne
pop
sub
cld
mov
mov
inc
cmpb
inc
xchg
xchg
adc
testl
mov
mov
adc
mov
jae
rol
inc
hlt
inc
sarl
push
subl
stc
bound
xchg
sub
and
jge
roll
inc
imul
lret
add
lock
jle
jl
adc
andb
xchg
lcall
xor
inc
xchg
arpl
mov
in
and
hlt
pop
xchg
fisttpl
jno
and
addr16
xchg
fstl
add
fsubrs
xchg
dec
push
icebp
shll
cmp
mov
xchg
mov
sbb
sub
repz
mov
jbe
bound
jle
xchg
leave
jl
scas
movsl
cmpsb
and
pop
iret
jmp
pop
inc
je
dec
push
lock
mov
inc
mov
or
xchg
fsubs
xchg
nop
sub
aam
xchg
jno
mov
xor
shlb
cs
mov
int3
lea
sti
and
pop
std
test
or
push
xor
xchg
inc
ljmp
adc
lds
sti
xchg
adc
push
faddp
dec
dec
mov
dec
call
xchg
sbb
xchg
mov
cmp
or
int3
sbb
mov
in
pop
sahf
popf
icebp
xor
loopne
aam
ret
gs
mul
xchg
dec
pusha
ret
xor
adcl
imul
cmp
test
es
and
test
add
insl
or
cmp
aad
and
fwait
dec
mov
aad
fnstcw
pop
insb
enter
sub
stos
jg
ss
outsb
adc
sbb
mov
jne
aas
mov
dec
cmp
and
out
shrb
xchg
or
push
out
inc
jb
push
dec
xchg
mov
push
push
pop
popf
mov
mov
or
pop
adc
xor
xor
popl
fidivl
or
or
and
in
lods
imul
push
ret
jle
mov
lcall
push
push
stos
jb
sub
and
cmp
dec
andb
fs
std
outsb
mov
rcr
jb
data16
push
insl
cld
repnz
push
ljmp
xor
add
mov
les
aas
push
icebp
jbe
arpl
adc
cwtl
jbe
add
out
leave
sbb
or
add
data16
xchg
sub
lods
mov
push
jl
mov
inc
mov
mov
lods
andl
xlat
jmp
in
cmp
fisubrl
pop
or
push
mov
add
sbb
sub
imul
je
lea
or
mov
push
insl
out
and
addr16
pop
and
js
or
pusha
sub
or
fsubs
mov
cwtl
loopne
lock
and
js
or
pusha
sub
or
fsubs
mov
cwtl
loopne
lock
mov
or
pusha
sub
cmp
call
rcrb
add
pop
and
js
or
pusha
sub
or
jb
call
mov
inc
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
into
repz
sbb
sub
cmp
insl
xor
jl
mov
nop
mov
fsubrl
or
sbb
sub
cmp
dec
push
pop
ds
jl,pn
mov
pushf
lahf
mov
mov
mov
adc
outsb
and
je,pt
data16
cmpsb
lahf
mov
mov
dec
jne
pop
ds
mov
sbb
pop
icebp
test
ljmp
and
pop
or
mov
stos
or
je
mov
jno
mov
push
mov
repz
fwait
jno
addps
sbb
fimuls
sahf
pop
test
adc
and
dec
fdivrl
pop
dec
sbb
sub
or
insb
and
fmull
arpl
dec
push
inc
jle
frstor
scas
data16
xchg
mov
sarl
imulb
ds
jge
add
mov
cmp
push
add
sub
idiv
jbe
mov
and
arpl
adc
or
outsb
es
dec
push
pop
jne,pt
ficoms
movsl
sahf
aam
lret
mov
imul
cmp
jns
dec
adc
stc
mov
ljmp
xchg
add
or
jnp
push
or
mov
mov
call
mov
mov
sub
jns
dec
dec
dec
pop
and
pop
ds
jl,pn
mov
pushf
lods
out
mov
mov
or
sbb
sub
cmp
dec
push
pop
ds
jl,pn
mov
pushf
lods
out
mov
mov
or
fwait
repz
sub
fisubl
add
sbb
imul
fildll
bound
cmc
jmp
mov
xor
cmp
cmp
mov
add
jbe
pop
imul
je
jae
sub
adc
adc
pop
sub
jecxz
push
mov
lea
ja
in
mov
mov
gs
adc
add
xor
xchg
mov
add
nop
ds
mov
insb
jb
lahf
outsl
or
je
cmpsb
incl
pop
stos
out
xorl
in
test
xor
dec
les
fldt
pop
insb
dec
mov
sbb
sub
xchg
or
cmp
insl
out
int3
sub
mov
das
les
mov
aas
shll
pop
xor
lcall
bswap
sbb
xor
xor
ljmp
icebp
inc
dec
xchg
lds
fsubs
add
filds
mov
add
mov
pusha
xor
test
aad
loop
cli
mov
test
daa
sub
mov
mov
pop
in
cmc
cmpl
cmp
lahf
les
push
leave
dec
mov
shll
and
arpl
dec
inc
xor
pop
mov
ja
cmpsl
arpl
mov
lahf
mov
cmp
adc
mov
mov
les
and
mov
lods
test
dec
cmc
shl
dec
dec
lret
jb
jo
repz
notb
hlt
pusha
ret
sub
mov
or
es
iret
ja
cs
cld
cld
add
add
faddl
movsl
inc
mov
pop
test
lcall
cmp
mov
aaa
lret
push
push
or
add
mov
push
and
and
mov
push
dec
lcall
dec
lods
out
mov
xchg
lretw
lock
negl
or
cmp
js
cmp
and
ret
scas
xor
jmp
jle
shl
or
cmc
jle
setns
ds
cli
cmp
mov
mov
stos
push
ret
mov
add
cs
test
mov
aad
push
xor
jle
outsb
adc
icebp
in
push
aad
mov
ficoml
cmp
cli
addr16
mov
fldt
rolb
sub
pusha
mov
into
sub
mov
clc
fisubl
dec
or
sar
cmp
loop
xchg
jge
cwtl
pop
xorl
pop
inc
enter
sbb
mov
push
sub
jecxz
mov
xchg
lock
cmp
div
jle
aaa
pop
adcl
cmp
lea
mov
mov
leave
rorl
daa
ret
movb
jmp
lret
shr
in
imul
xor
xlat
fs
and
pop
xor
test
ret
in
in
push
push
testb
push
mov
int
adc
pop
push
add
movl
or
mov
push
sbb
into
jae
xchg
xorl
mov
test
aaa
mov
jb
nop
inc
test
iret
sub
fimuls
das
setne
je
cld
sub
jno
adcb
test
je
outsb
xchg
push
add
mov
sbb
aaa
add
cwtl
add
sbb
push
es
imul
xchg
cmp
add
imul
and
dec
jl
cwtl
xchg
and
jmp
ljmp
or
test
insb
mov
mov
mov
inc
fisubs
stos
fdivrs
inc
pop
call
inc
mov
test
cld
xchg
adc
cmp
loopne
cmpsl
andb
cwtl
lcall
jp
pop
xor
sub
out
stos
jb
add
inc
jp
insb
mov
shll
pop
rcrl
mov
loopne
ljmp
or
mov
les
jns
in
aas
lds
fdivrl
test
sar
push
push
xchg
pop
jne
and
in
fistpll
lret
mov
pop
arpl
idivb
mov
mov
sbb
jp
repnz
stc
fs
sub
mov
stos
jp
js
rclb
dec
arpl
mov
xor
push
or
mov
and
fsubl
out
inc
mov
mov
addr16
mov
insl
rorl
int3
sub
in
and
les
push
test
movsb
sbb
cmpsb
or
fisubrs
mov
mov
sbb
or
mov
sub
mov
ss
das
fcomps
roll
inc
sub
sub
fadds
imul
cwtl
cmp
push
cmp
fcoml
sbb
stos
pop
ds
push
cmp
stos
sbb
jle
xchg
dec
dec
xor
jne
aam
sahf
cwtl
loopne
pop
ja
add
add
leave
adcb
out
dec
int
fsubrp
push
or
icebp
test
mov
test
aad
pusha
pop
sbb
push
mov
mov
adc
jb
enter
add
in
loop
aaa
mov
jno
cmp
mov
mov
mov
popa
or
xchg
stos
lret
sub
xchg
adc
icebp
sub
lock
out
sahf
roll
arpl
jb
or
pop
ljmp
sub
inc
add
dec
pop
jg
cs
mov
lods
ret
and
pop
jns
mov
mov
jo
cmp
stos
cmpsl
aas
push
xor
sarb
push
in
cwtl
popf
inc
dec
in
mov
sub
pop
mov
call
lods
pop
pmaxsw
dec
adc
jae
mov
test
xor
into
fidivs
les
jbe
sbb
insl
jnp
push
rcll
mov
shrl
in
pop
mov
pop
cmp
fxch
imul
iret
fnstenv
std
es
or
scas
js
fwait
push
sbb
sbb
cltd
mov
sti
jns
mov
outsb
scas
cmp
daa
enter
lret
jmp
add
dec
les
scas
xchg
imul
lcall
push
in
adc
test
pop
jo
inc
push
fdivr
ficomps
test
jmp
shlb
ret
or
inc
mov
and
in
push
pushf
pop
mov
sahf
in
xchg
les
fmull
dec
rcll
push
push
ret
dec
lret
jg
jl
out
mov
and
adc
push
jmp
or
fdivs
jb
sub
push
negl
mov
mov
aas
pop
into
fcoms
insb
and
mov
jo
enter
clc
test
pop
mov
inc
add
pop
xchg
std
cmp
sbb
rcrl
jae
repz
adc
mov
testb
out
mov
lds
cmp
push
outsb
dec
adc
jge
je
push
insb
adc
aaa
lea
mov
or
and
push
sbb
dec
cli
insl
loopne
adc
xchg
and
sub
nop
push
cltd
pop
ret
jo
xchg
aas
pop
add
ss
lock
mov
push
dec
pusha
pop
adc
xchg
popa
add
mov
cmp
push
repz
call
pop
add
mov
mov
sub
xchg
dec
adc
inc
lret
loopne
mov
cmp
dec
cmpl
not
or
pop
addr16
push
adc
lret
das
sub
mov
or
lods
push
jne
inc
push
cmpb
mov
sbb
cmp
push
dec
sbbb
sahf
aad
ja
cli
aad
cmp
sbb
push
mov
scas
push
and
jg
fs
movsl
out
out
mov
sbb
shlb
daa
push
dec
jae
fninit
je
out
and
cld
es
sbb
jbe
sbb
test
data16
mov
int
pop
jg
or
push
sbb
test
js
shll
xor
sub
mov
ja
mov
xchg
aas
hlt
movsb
shll
and
push
mov
shl
lahf
clc
mov
lcall
xor
daa
mov
push
pop
mov
bound
dec
std
pop
jle
cmp
jae
dec
cmp
push
shrl
aaa
mov
and
xchg
aad
mov
ljmp
push
ss
fs
inc
inc
mov
mov
stc
add
mov
pop
add
repnz
push
sub
sbb
pop
out
je
and
jmp
js
push
jns
popa
xor
movsb
cmc
dec
icebp
sub
mov
out
pop
aad
rorl
and
cmp
rorb
mov
cmpsl
pop
mov
mov
clc
sbb
jb
adc
rcrb
loopne
rorb
jae
mov
in
xchg
pop
lea
outsl
jmp
outsl
or
in
sbb
sbb
mov
scas
pop
xor
pop
lret
push
pusha
movsb
je
jg
std
movl
inc
imul
fwait
dec
mov
dec
or
mov
cli
std
fisttpl
mov
out
test
xor
ds
inc
inc
dec
xorl
add
mov
adc
push
mov
jbe
mov
push
mov
jecxz
dec
outsb
add
jae
int3
lret
sarl
jp
pop
gs
adc
fmull
adc
imul
jl
mov
and
add
jecxz
pop
sub
scas
dec
pop
add
push
imul
divl
dec
pop
lahf
xor
shlb
clc
sti
mov
nopl
mov
addl
adc
jbe
push
push
fisttps
pop
pop
jl
fsubp
xchg
lods
pusha
clc
jle
movd
popf
clc
int
xchg
arpl
cltd
jg
data16
mov
push
das
fstps
call
into
inc
icebp
loop
aam
mov
xchg
shll
notb
call
mov
pop
out
repz
out
idivl
mov
inc
stc
lret
aad
and
test
imul
imull
cmp
jno
add
or
aaa
push
lea
push
in
jp
ljmp
xchg
xchg
nop
fldl
aaa
mov
test
inc
decl
xor
arpl
inc
js
popl
xchg
dec
fdivl
out
js
add
mov
pop
outsb
subb
jg
jge
mov
mov
xchg
inc
lods
add
movb
push
mov
jae
cmp
jmp
icebp
adc
lret
icebp
add
lds
ja
jecxz
jo
dec
cs
cmc
int
or
lret
enter
gs
sahf
jne
mov
push
mov
and
push
or
dec
out
jge
jmp
pop
or
rolb
test
inc
mov
mov
and
cld
pushf
test
and
adc
xchg
cld
push
cli
iret
mov
outsb
dec
rorb
mov
pop
cmpl
loop
std
sub
push
or
pop
push
js
movsl
addl
aas
push
jle
mov
push
pusha
mov
dec
leave
inc
aaa
in
push
push
int
lret
and
iret
lcall
sbb
pop
dec
in
daa
mov
push
fwait
in
movq
jmp
xchg
jno
sbb
gs
inc
mov
enter
xchg
mov
inc
dec
inc
push
stos
int
xchg
adc
pop
inc
repz
shll
fwait
adc
xchg
pushf
or
sbb
das
dec
fistpl
mov
mov
push
jle
rcrb
ds
jle
inc
mov
xor
xor
push
sbb
fdiv
stos
aam
add
ja
dec
jbe
mov
dec
adc
test
push
mov
inc
sub
jae
push
mov
dec
jns
aam
dec
jge
movsl
sub
xchg
mov
xchg
inc
andl
into
enter
xchg
push
or
sbb
and
sbb
xchg
adc
sbb
int
lret
cld
and
pop
push
lods
push
cmpsb
xchg
int3
cmpsl
cmp
shl
movsl
stc
sbbl
mov
xor
notl
cmp
xor
adcl
popf
sarb
dec
mov
push
gs
inc
arpl
xchg
cmp
jl
jge
push
xchg
data16
mov
stc
pop
dec
add
fistl
daa
push
add
fwait
cmp
add
jo
push
sbb
push
cmc
das
pop
cbtw
sub
add
fidivrl
fld
xlat
mov
dec
fimull
add
pop
imul
push
icebp
lret
ficompl
dec
mov
loope
jne
xchg
xchg
aad
sti
and
push
shll
mov
xor
mov
xchg
xor
nop
jae
in
push
mov
sbb
adcl
inc
std
mov
sub
subb
inc
mov
add
test
or
ror
out
leave
mov
enter
lock
ljmp
fwait
xlat
call
les
sub
cmp
mov
movsl
repnz
add
in
divl
sbb
ret
pop
lret
mov
std
fimuls
cmp
xchg
lods
inc
lock
jle
leave
jns
mov
jae
jnp
xor
jbe
xchg
xor
push
push
mov
mov
mov
push
add
cmpsl
cmp
mov
and
cld
and
dec
inc
mov
dec
mov
mov
xor
fsubrl
dec
add
mov
in
mov
scas
jp
or
outsb
mov
adc
bsf
mov
sarb
in
mov
movsb
adc
outsl
mov
push
mov
pop
and
and
cli
pusha
mov
ds
jae
into
push
mov
jecxz
test
mov
incb
or
cli
dec
ret
pop
and
cmpsb
sub
jnp
push
push
add
in
adc
cmp
outsb
scas
pop
dec
mov
sbb
icebp
aad
gs
ljmp
mov
repz
daa
xchg
xchg
mov
add
push
inc
leave
pop
mov
fcom
lods
mov
or
aam
jg
into
frstor
jmp
pop
je
jle
ss
cmp
dec
dec
aad
inc
lea
sarb
xchg
dec
dec
pop
pop
adc
push
cs
movsb
fidivl
and
fwait
mov
leave
ja
sti
inc
int3
leave
mov
mov
xor
xchg
pop
das
lret
xchg
xchg
inc
loope
setge
shrb
or
push
sbb
movsl
out
pop
bound
in
cmp
sahf
jne
mov
sub
push
pop
addr16
cli
sbb
jno
push
rcll
pop
insl
and
jbe
pop
call
mov
lock
mov
enter
xchg
sbb
stos
rcl
xchg
mov
cltd
and
mov
popf
cmp
mov
mov
jmp
sahf
fisubl
sub
ja
jne
leave
xor
lcall
add
stc
push
shll
repnz
stos
add
loope
test
cltd
aas
les
add
cmc
cs
scas
inc
mov
adc
test
ja
cmp
mov
add
inc
push
mov
inc
movsl
addb
out
pop
or
pop
rcl
or
jmp
mov
repz
sbb
pop
je
mov
repz
mov
xchg
inc
inc
xor
je
mov
scas
mov
loop
push
subl
mov
jno
dec
and
fsub
stos
dec
or
out
xor
dec
stos
pop
pusha
cmpsl
dec
push
fsubs
xor
dec
subb
adc
mov
add
fdivp
add
or
sti
out
push
es
cmc
out
fdivr
lret
cmc
jo
jne
mov
xor
insl
xor
stos
xor
sbb
push
cmp
inc
xchg
inc
cltd
sbb
push
dec
add
mov
icebp
fidivrs
aaa
lret
xchg
sub
jo
in
jbe
aad
repz
mov
fsubr
pop
fimull
sbb
add
push
mov
adc
jo
enter
mov
mov
push
leave
or
mov
les
xlat
mov
push
xchg
addr16
fs
aam
push
int3
add
frstor
dec
adc
xchg
lea
das
cmpsb
in
pop
mov
jge
sbb
mov
sub
bnd
mov
insb
adc
repnz
add
jg
shl
pop
jl
jle
mov
cmpsl
imul
sub
jno
add
cmpsl
std
add
adc
cmc
stos
lea
lret
pop
outsl
clc
mov
pop
lret
out
mov
out
xor
mov
mov
mov
jmp
sar
daa
loop
loope
jl
jno
fsubl
cmpsb
nop
push
sbb
sub
out
adc
in
pop
and
jo
sahf
push
rorb
outsl
jmp
leave
xor
repnz
addr16
insb
pop
ret
cmpsl
enter
stos
lock
pop
popf
cwtl
js
dec
addr16
adc
movsl
jb
xchg
xor
addr16
outsl
fists
jge
mov
cmp
es
cs
cld
pop
mov
cld
cmp
xchg
xor
xor
mov
out
in
out
push
aas
test
jae
xchg
mov
jno
mov
xchg
or
daa
mov
xor
out
mov
jo
repz
add
shll
push
sub
xorl
sti
call
aas
movsl
pop
fldl
jo
xor
mov
dec
lcall
arpl
outsl
sbb
lahf
dec
mov
inc
mov
cmp
mov
sub
pop
lods
imul
adc
mov
out
push
xchg
aas
dec
pop
jle
and
cli
mov
movsl
mov
icebp
jae
stos
push
dec
enter
jg
sbb
sub
inc
mov
pop
mov
out
push
movsb
push
stc
push
mov
sub
inc
psrlw
pop
and
sti
sbb
add
add
int
adc
in
mov
repz
movsl
push
pop
fwait
int3
xchg
aam
test
out
adc
xchg
mov
ror
fiaddl
pop
dec
sbb
inc
dec
dec
data16
push
lret
loope
mov
xlat
adc
shlb
cmpb
cmpsb
cmp
lahf
imul
lcall
mov
xchg
push
in
mov
into
sti
cmc
sub
and
imul
sub
xor
fstp
mov
aad
cmp
mov
cmpsl
shl
rcrl
sarb
add
pop
add
fwait
mov
pop
outsb
ljmp
cmp
icebp
fiadds
xchg
push
fld1
inc
add
outsl
cmpsb
lods
push
nop
loope
addr16
jmp
ljmp
and
inc
mov
inc
lahf
xchg
jb
lcall
fs
rcll
inc
dec
pop
jge
fs
call
clc
fptan
arpl
cmp
mov
mov
aam
and
and
cmp
idivl
loope
dec
lock
jne
aaa
insl
aas
adc
and
dec
loop
sbb
int
push
out
jo
jge
iret
jl
inc
repnz
inc
xor
mov
or
sbb
and
dec
dec
mov
mov
test
test
mov
int
sahf
xor
inc
shll
ja
dec
hlt
adc
inc
add
inc
icebp
cs
nop
adc
lret
or
pop
jmp
push
ret
xchg
cmp
inc
and
in
dec
xchg
in
or
adc
movsl
out
or
add
mov
pop
insb
lock
pop
dec
jnp
cmpsb
scas
push
mov
mov
pop
inc
mov
pop
rolb
shrl
xchg
fdivrs
xor
adc
xor
aam
push
pushf
lea
xchg
div
sarl
mov
rorl
cltd
jecxz
jecxz
gs
push
push
or
push
repnz
lds
cli
lods
mov
das
adc
sarb
scas
sub
pop
fsubp
xor
decl
leave
movsl
xchg
jae
out
outsb
aad
pop
pushf
push
test
movsl
out
push
mov
mov
mov
movsl
shll
mov
mov
mov
ret
xor
dec
xor
cmpsl
rclb
or
pushf
jns
scas
repnz
jnp
nop
ja
fucomip
mov
xchg
aad
mov
clc
jmp
cli
stc
jns
jae
dec
jecxz
jb
sbb
inc
jp
out
mov
roll
ljmp
sbb
shlb
pop
push
mov
jg
lea
in
sarl
pop
out
cmp
lds
inc
je
ds
inc
cmp
adc
inc
sub
enter
test
sarl
lods
test
repz
push
cmc
pop
adc
push
jae
sarl
xor
pop
dec
pusha
popa
insl
pop
add
push
sbb
ret
outsb
cmp
dec
push
pop
ds
jl,pn
mov
pushf
lods
out
mov
mov
or
sbb
sub
cmp
dec
push
pop
ds
jl,pn
mov
pushf
lods
out
mov
mov
or
sbb
sub
cmp
dec
push
pop
ds
jl,pn
mov
pushf
lods
out
mov
mov
or
sbb
sub
cmp
dec
push
pop
ds
jl,pn
mov
ss
lods
out
lret
jmp
adc
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
