push
mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
cwtl
test
mov
mov
cmpsl
repnz
or
sbb
cmp
cmp
pop
pop
push
mov
mov
call
or
sbb
or
cmp
push
cwtl
cwtl
test
mov
shr
clc
loop
jmp
and
cmp
aaa
ss
mov
icebp
test
aam
add
push
add
jbe
cmp
xlat
xchg
mov
mov
jl
rcl
fxtract
and
aaa
inc
fsubs
push
bound
lock
cmp
cmp
push
nop
pop
scas
test
fsubs
cmpsb
adc
lea
xchg
clc
mov
or
fcomps
mov
call
clc
pop
test
out
enter
sbb
cmpsl
jmp
dec
adc
js
dec
push
inc
pop
xchg
call
mov
sbb
and
xchg
addr16
test
jae
repnz
gs
jne
or
or
cmp
aad
sub
mov
mov
call
adc
add
xor
and
pop
dec
push
in
in
cwtl
shrl
mov
test
xchg
or
pusha
sub
push
dec
and
ds
int
aam
enter
nop
mov
jns
pop
cmp
cmp
aaa
add
or
std
leave
aam
test
clc
or
sbb
sub
cmp
dec
dec
pop
pop
push
mov
mov
call
or
sbb
sub
cmp
pop
pop
push
mov
stos
ss
jge
mov
xchg
rcrl
movsl
pop
mov
lock
nop
aam
lock
fadds
jne
sub
es
mov
rolb
cmp
shll
sub
push
and
cwtl
push
pop
pop
subb
ret
add
jmp
imul
outsb
fnsave
add
or
mov
dec
hlt
push
lds
mov
jmp
aam
or
iret
mov
pusha
xlat
push
test
aam
and
rcr
inc
jmp
adc
stos
pop
cmp
scas
lds
push
test
cmp
in
mov
nop
add
jo
repnz
jecxz
push
shrd
ljmp
aas
and
pop
sbb
fsubr
lods
fiadds
jp
mov
das
sub
xchg
test
jecxz
out
pop
add
lods
pop
mul
shlb
aam
and
push
push
daa
xor
cmpsb
pop
pushf
mov
mov
out
inc
fwait
loop
or
lret
jno
xor
adc
dec
int
pop
into
imul
outsb
cmp
cmpsl
out
out
push
cmp
push
push
aas
cmpsl
imul
dec
sbb
xchg
lret
push
ds
pop
loope
pushf
mov
insl
fimuls
fs
aas
push
dec
pop
cmp
mov
pop
or
sub
bound
dec
pop
cmp
popl
lret
mov
rorl
insb
inc
jnp
test
push
je
test
out
ret
je
jg
scas
rol
in
rcll
popf
pop
mov
mov
cs
xchg
push
cmp
xlat
jecxz
fimuls
mov
inc
sub
jnp
push
mov
xchg
frstor
loop
add
ss
cmp
push
clc
enter
push
outsl
lret
and
enter
loope
aaa
ret
inc
mov
jnp
cmp
mov
dec
lods
or
xlat
rcll
inc
daa
xor
sub
lret
int
clc
and
push
xchg
push
insl
adc
pop
push
testl
je
and
adcl
movd
aaa
adc
loope
pop
xchg
or
pop
mov
cmp
pop
negb
cmp
xchg
jnp
mov
mov
test
mov
xor
dec
mov
test
aaa
lods
out
js
mulb
push
cli
add
mov
pop
int
popf
fs
shl
jg
push
inc
mov
and
xchg
bound
insb
outsb
stos
adc
push
mov
cmc
dec
aam
mov
addr16
mov
adc
xor
daa
es
mov
leave
ficomps
imul
sbb
sub
dec
dec
addl
add
mov
iret
push
pop
out
repnz
aaa
aaa
adc
jge
xchg
jbe
cmp
sub
in
inc
cmp
add
jnp
pop
mov
rcll
ret
nop
mov
mov
aaa
mov
jecxz
fwait
mov
loope
ret
fcmovnu
out
in
xchg
bound
addr16
rolb
test
cmp
mov
jecxz
mov
xor
out
idivb
sbbb
inc
add
jno
push
lods
icebp
in
sbb
testl
sbb
jo
ja
fidivl
sbb
sub
aaa
mov
imul
mov
pop
ffree
addb
and
xor
int
dec
int
jbe
mov
bound
pop
xorl
enter
cmp
xchg
pop
mov
and
pop
adc
and
dec
mov
repnz
xchg
sub
fidivrl
cwtl
and
loope
dec
cwtl
pop
jle
sub
sbb
mov
adc
mov
pop
mov
or
sti
bound
cltd
loop
mov
popf
xor
daa
cmp
fldl
aad
cmpsl
and
inc
xchg
and
mov
lods
mov
xchg
jns
out
insb
pop
test
popl
loope
stos
stos
adc
mov
jmp
adc
bound
fbstp
in
mov
mov
jl
cmp
push
mov
push
push
fmuls
mov
and
mov
push
iret
mov
shl
loopne
int
jno
push
rcrl
mov
or
imul
mov
repnz
loopne
dec
idivb
xchg
or
ja
push
lds
leave
cmc
xchg
fs
lahf
push
stos
leave
mov
enter
out
jo
roll
cmovp
movsbl
jb
xchg
pop
enter
cltd
mov
sbb
push
or
cmpsl
inc
inc
mov
sub
sub
jns
cmp
push
clc
clc
out
gs
sbbb
pop
lret
shlb
mov
mov
jecxz
or
pop
fldt
jge
jno
pop
or
js
adc
adc
orl
int
int
addr16
mov
dec
pop
out
and
cld
jg
pop
adc
jecxz
or
lods
aad
repz
add
and
pop
pslld
imul
stc
inc
xchg
fildll
iret
mov
ret
jae
scas
xor
shll
or
cs
and
jl
mov
pop
mov
dec
stc
daa
icebp
cld
into
jle
mov
cmpsl
stc
push
das
mov
stc
xor
push
fs
push
push
push
in
sbb
lods
mov
dec
add
mov
mov
arpl
stos
mov
pop
aam
pop
nop
mov
test
mov
jl
cltd
pop
shlb
dec
push
mov
test
imul
out
daa
sahf
ret
xor
ja
cli
push
andl
push
lret
jns
and
dec
pusha
outsl
xchg
mov
sub
pop
push
jbe
adc
jno
addb
pop
cmp
into
shll
dec
idivl
inc
xlat
sbb
jge
xor
shr
sbb
add
stc
into
pusha
dec
sbb
xchg
fidivs
lcall
dec
in
xor
and
or
test
jl
sbb
jmp
jo
mov
cmp
mov
mov
repz
aad
sub
dec
cmp
or
xchg
xlat
jg
or
std
mov
pop
inc
add
xor
add
dec
in
jp
movl
pop
sbb
scas
cmp
jge
xchg
push
out
jp
mov
test
cmp
aad
out
pop
rcl
push
or
dec
or
or
in
dec
jg
jbe
sti
dec
inc
leave
sbb
das
cmc
push
arpl
daa
cli
xchg
pop
pop
jbe
in
movsl
adc
jno
and
add
xchg
and
and
jl
hlt
addr16
dec
jmp
test
lea
push
push
pop
je
pop
shr
mov
adcl
fidivrl
cmp
jg
push
pop
insl
fisubrl
xchg
cmp
jmp
inc
inc
mov
clc
xorl
pop
dec
pop
mov
mov
push
lahf
cmpsl
repnz
sti
rcll
addr16
xchg
push
add
lods
jns
movsl
dec
das
lahf
or
jno
je
cmpb
std
sbb
xor
fistl
mov
push
leave
je
outsl
cwtl
out
fidivs
or
out
push
jg
mov
pop
xchg
pop
test
daa
rcrb
mov
scas
loope
pop
jge
mov
movsl
xchg
rorb
mov
aaa
xchg
jl
push
or
cwtl
add
aaa
sbb
cmp
bound
pop
push
pop
fimull
sub
jmp
jl
and
fnstenv
icebp
mov
pop
add
xchg
or
and
inc
mov
addr16
sbb
out
mov
ja
fnstcw
popa
outsl
fld
lods
adc
mov
push
and
mov
xchg
sub
mov
dec
mov
mov
push
mov
or
inc
data16
into
cmp
mov
fcompl
mov
popf
xchg
xchg
mov
es
dec
lods
inc
add
fisubrl
lret
aad
adc
push
mov
in
jecxz
call
and
loope
out
into
das
aaa
push
ret
push
addr16
or
push
cmp
add
insb
les
test
gs
mov
inc
sub
sub
inc
cli
pop
movq
fcomi
push
xlat
arpl
xor
sub
cwtl
cltd
or
daa
or
out
pop
andb
lret
mov
lea
ds
orl
cmp
out
ja
or
pop
insb
mov
cli
push
fwait
mov
and
hlt
mov
dec
loope
and
loope
jecxz
test
lods
push
and
dec
je
xchg
mov
aas
lcall
inc
stc
push
les
sarl
add
or
dec
add
rolb
out
in
jae
add
repz
mov
cmp
inc
dec
mov
dec
xchg
leavew
sub
inc
xor
xchg
imul
in
xchg
das
shl
call
sahf
jl
mov
ja
inc
add
aaa
adc
add
ja
out
and
push
xchg
sub
bound
push
in
xor
inc
dec
sub
test
stos
shrl
jp
pop
test
out
or
jnp
stos
rolb
push
mov
fs
pop
inc
push
sbb
addr16
mov
lcall
pushf
xor
and
test
xor
outsl
xchg
fisubrs
dec
mov
lock
aaa
out
rorl
insl
lret
pop
int3
mov
nop
clc
daa
movsb
call
dec
add
mov
sub
lds
cmpps
xchg
mov
sub
jnp
push
cmpsb
jbe
divb
jecxz
test
lcall
add
pop
je
push
xorl
bound
inc
inc
push
pop
pop
cwtl
daa
clc
mov
push
cmpsl
out
sbb
ss
inc
aam
icebp
inc
insb
sbb
xchg
inc
xchg
xor
push
jb
in
sub
test
lret
mov
mov
cltd
push
mov
out
add
jg
xchg
mov
mov
enter
xchg
das
lret
add
nop
jbe
dec
jl
inc
sbb
test
jnp
shrb
or
sub
sub
push
cmpsb
fcomps
fisubrs
arpl
inc
pop
dec
test
mov
insl
stos
test
mov
sbb
xor
push
xchg
sub
sub
fdivrl
inc
in
dec
ljmp
scas
push
divl
pop
aam
popa
repz
adcl
enter
sub
std
dec
inc
movb
iret
imul
adc
cmpsl
nop
mov
bound
outsl
negl
jl
out
dec
and
adc
bound
inc
mov
mov
int
lds
pusha
xchg
in
cmc
inc
mov
pop
pop
repz
lret
xor
pop
ds
jnp
sysexit
xchg
mov
dec
aaa
cli
sub
mov
and
add
jb
adc
inc
jne
cmp
jle
xor
mov
jae
clc
in
outsb
inc
mov
xor
lret
inc
ret
sub
xor
stos
inc
pop
sbb
mov
inc
inc
cmp
add
lret
adc
push
jb
fcoms
out
sub
inc
pop
mov
ret
bound
jo
test
cmp
arpl
inc
xor
cwtl
ficompl
cmp
stos
lret
je
adc
lahf
inc
mov
xchg
push
fdivrs
sbb
mov
mov
sub
dec
cltd
pop
cwtl
adc
aas
xchg
rolb
popa
js
mov
mov
icebp
scas
mov
pop
insb
fldl
jg
mov
xor
add
lret
inc
jp
icebp
inc
fcomps
fsubrl
movsl
sub
cmp
cld
push
movsb
dec
and
popf
mov
mov
rcrl
aas
pop
hlt
cmp
jno
pop
or
mov
nop
sub
push
in
xchg
xorb
gs
or
xchg
aad
xchg
mov
cmc
out
lods
and
shrl
inc
jge
mov
inc
clc
mov
ds
adc
mov
sbb
xor
fs
movsb
adc
dec
mov
xchg
sti
loop
data16
or
cmpsl
pop
mov
inc
in
jns
stos
xor
mov
sub
mov
sahf
inc
or
sbb
jp
push
mulb
mov
test
jge
test
clc
inc
xor
clc
test
test
inc
pop
jbe
and
sahf
xor
sub
mov
test
in
in
inc
mov
cmp
movsl
outsl
rol
cli
repz
lds
test
aam
test
mov
imul
and
push
ja
ss
mov
int
frstor
out
cmp
xor
mov
scas
add
pushf
mov
bound
sbb
mov
inc
mov
iret
dec
arpl
cs
xor
pop
xor
cmp
mov
and
out
push
cmpsb
jns
mov
sbb
jo
inc
inc
add
xchg
or
xlat
rcr
add
fsubl
mov
repnz
jbe
stos
sbb
in
das
push
mov
test
outsb
pop
add
outsb
xorl
pusha
inc
into
test
cmc
pop
adc
insl
mov
cmp
loop
inc
inc
dec
mov
out
xchg
sbbb
adc
lret
push
aam
add
push
imul
in
jl
pop
out
test
lds
mov
loop
or
mov
xchg
sahf
out
xchg
and
faddl
clc
cmp
push
imul
or
lret
add
lds
es
push
lods
lcall
cmpsb
sbb
xchg
mov
sbb
xlat
int3
je
ret
mov
sub
pop
pushf
mov
add
scas
mov
fcoml
sub
cs
adc
in
or
sbbb
cmpsl
rol
xor
pop
lods
repz
stc
inc
xor
xchg
push
xchg
ds
pop
into
add
jns
enter
xor
dec
or
pop
push
inc
jbe
cmp
and
push
lods
rsm
das
cmpsb
cltd
mov
movsb
jno
sti
outsl
add
shll
and
loopne
aas
adc
adc
xchg
adc
cli
cmp
fs
cmpsl
cmp
jecxz
or
pop
cmpsl
test
arpl
pop
jle
add
jg
add
ret
rcrb
sbb
or
xchg
inc
mov
xchg
mov
add
and
jmp
scas
push
mov
jae
cmpsl
inc
ja
lods
pop
ljmp
xor
or
test
fs
jl
mov
jo
aas
ss
cmpl
pop
fcmovnu
insb
pop
xor
es
sahf
aaa
add
int3
xchg
adc
push
mull
repz
cltd
movsl
mov
inc
fsubrl
and
nop
sbb
sbbl
lret
pop
jg
mov
xchg
loope
cmp
sbb
nop
fnsave
adc
shr
push
inc
add
fmuls
rorl
or
test
sahf
mov
adc
shll
nop
fwait
test
adc
push
xchg
jp
insl
adc
popf
pop
test
cmpsl
and
cli
cmp
mov
xchg
pop
mov
inc
je
inc
mov
adc
sbb
add
mov
sub
push
or
or
pop
and
ud0
mov
out
and
push
pop
sub
sbb
in
sti
mov
dec
loop
mov
pop
xorb
les
and
pop
pop
sub
pop
xor
mov
decl
mov
lods
repnz
add
mov
mov
adc
inc
out
or
shll
push
outsl
and
lock
push
fwait
sbb
add
pusha
push
in
arpl
pop
cmp
push
mov
jge
data16
int3
mov
jnp
test
pop
push
inc
fmul
sbb
mov
jge
push
fsub
aad
test
call
sti
xchg
pop
das
daa
cli
push
mov
js
lods
js
xor
nop
push
cmp
popf
fisubrs
sub
push
or
insb
imul
loope
adc
ret
repz
icebp
ficompl
pop
jmp
leave
add
addr16
pop
repz
cmpsl
rcl
into
pusha
mov
or
scas
out
jo
mov
jb
xchg
rcl
pusha
movsb
pop
fsin
scas
gs
ficoml
mov
insl
mov
lods
cmp
js
jno
mov
inc
aaa
jg
sbb
out
inc
jnp
call
lcall
pop
mov
add
cmp
sbb
leave
leave
push
push
sbb
mull
jne
jge
stos
sahf
shlb
mov
pop
ret
out
cmp
std
sub
fisttpl
repz
inc
cmpsl
cwtl
pop
mov
or
cmp
push
fnstcw
fistpll
sub
pop
pusha
push
jae
mov
pop
adc
cld
push
and
and
lretw
pop
cltd
sub
cmp
mov
mov
mov
pop
outsl
bound
pop
enter
mov
jle
push
das
inc
leave
mov
jmp
rorl
cwtl
ds
pop
fdivl
xchg
pop
jbe
mov
dec
notl
adc
sub
cmc
push
cmc
lods
xchg
cli
cmp
fldenv
in
popa
cmpsb
sarb
and
imul
stos
cmp
test
add
fwait
pop
out
lret
sub
lahf
jb
inc
ja
stc
pop
add
fchs
stos
lcall
pop
mov
out
pop
and
cmp
lock
sbb
loop
xchg
lds
cld
xchg
or
mov
nop
ljmp
shll
xor
cmpsl
cmp
icebp
in
jns
xchg
aam
out
inc
js
jne
inc
stos
sbb
mov
les
push
das
orl
movsl
inc
data16
popf
xchg
pop
push
stos
mov
pop
repz
pop
iret
and
xchg
movsbl
dec
xchg
nop
cld
and
add
lcall
jp
push
sub
roll
testl
test
xchg
hlt
sbbb
movsb
mov
cld
pop
lcall
mov
or
hlt
in
adc
mov
inc
jbe
xor
jae
mov
or
fimuls
mov
xchg
adc
repz
std
inc
jae
sti
push
stos
xor
test
in
cltd
std
int
dec
sbb
cmp
xchg
nop
pop
adcl
cmpsl
into
pushf
icebp
xor
push
and
popa
push
out
addb
xchg
mov
dec
out
xchg
push
inc
movsl
orl
mov
clc
jmp
in
mov
mov
add
sub
xchg
arpl
mov
sbb
jae
pmulhw
les
out
and
cmp
jae
sbb
pop
dec
jmp
pop
mov
or
inc
jns
push
lea
sbb
ds
xor
inc
adc
rol
call
cmp
fidivrs
or
or
push
nop
pop
in
mov
and
insb
add
movsb
mov
lea
jmp
pop
xor
mov
and
dec
xchg
ret
sub
cmp
sub
adc
sahf
clc
jge
cld
sbb
ja
inc
rorb
rcr
sbb
test
jo
lcall
xor
outsl
jmp
test
fsubr
xlat
jns
cmc
mov
pop
insb
fucom
push
insl
pop
in
into
les
jo
push
je
and
and
fstpl
mov
popa
jno
cmc
and
push
or
ljmp
and
lcall
sarl
push
les
popl
pop
loopne
mov
dec
lods
mov
push
sti
aaa
in
mov
cmpsb
push
out
push
sti
ret
jne
add
xchg
in
xchg
adc
insl
pop
fsubp
movsl
push
xchg
iret
fptan
or
add
sbb
pop
je
pusha
xorb
xchg
dec
inc
pushf
jmp
repz
adc
add
mov
mov
cli
ss
es
mov
xchg
add
xchg
movb
mov
jno
adc
xchg
pop
mov
mov
dec
jg
sbb
cmp
push
push
and
push
fldl
sub
icebp
jp
in
jecxz
sbb
mov
jns
cmc
lret
incl
in
jnp
jno
popa
hlt
ljmp
xor
jbe
and
jne
dec
icebp
or
rol
int3
pop
js
aad
xchg
or
cmp
mov
mov
xor
cmp
pushf
imul
pop
push
fstpt
mov
lcall
mov
jl
loop
jo
sbb
fucomp
jecxz
lds
cmpl
jb
fcoms
fnsave
push
push
cltd
fstpl
jnp
lock
jnp
movsb
jge
inc
xor
adc
outsb
addr16
popa
cmp
cmp
daa
test
pop
imul
adc
cltd
or
adcb
inc
mov
fsubr
call
sbb
sub
cmp
dec
dec
pop
pop
push
mov
mov
call
or
sbb
sub
cmp
pop
pop
push
mov
cwtl
sub
fcomp
call
or
sbb
sub
cmp
pop
pop
push
mov
mov
call
or
mov
sub
dec
cmp
sub
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
mov
hlt
xchg
in
mov
in
xchg
incl
add
popa
adc
inc
xor
and
aam
in
hlt
xchg
in
xchg
icebp
test
mov
mov
push
xor
adc
jno
inc
xor
and
jb
add
outsb
dec
xchg
jmp
xchg
inc
push
adc
adc
add
inc
or
test
fwait
icebp
jge
aaa
cli
data16
mov
and
jno
inc
lret
push
outsl
dec
xlat
dec
pop
add
jno
dec
dec
pop
pop
xlat
stos
inc
mov
sahf
add
imul
xchg
js
jge
inc
loop
ja
xor
adc
mov
insl
jecxz
aam
les
in
xor
je,pt
sub
shll
movsb
test
jno
inc
lret
push
pop
pop
add
sbb
jne
pop
add
adc
xchg
push
xchg
and
jno
mov
sub
addb
ja
in
adc
xor
push
in
jl
inc
inc
fcoms
cli
pop
out
addl
ja
out
stos
in
ja
and
sub
jae
push
push
enter
cmc
cwtl
jmp
jmp
and
bound
shll
push
pop
imul
xor
in
xchg
aam
repz
mov
fldl
add
imul
adc
cmpsl
frstor
cwtl
ret
fdiv
test
mov
movsb
and
add
popa
adc
add
xor
and
aam
les
xchg
icebp
test
mov
movsb
and
add
popa
adc
add
xor
and
aam
xchg
inc
mov
cs
pop
dec
clc
inc
enter
xchg
sub
inc
fisttpll
xor
jo
add
stc
xor
sbb
cmp
js
adc
mov
adc
arpl
add
nop
mov
sub
loope
dec
jecxz
cs
xchg
push
es
adc
pop
je
xchg
xor
sbb
mov
das
sahf
jmp
dec
jo
mov
pop
adc
adc
inc
test
enter
shr
addr16
cli
push
mov
cmpsl
jbe
fsts
mov
mov
dec
shrl
xor
shrl
subl
or
loop
jno
pop
and
jne
les
jno
sahf
pop
inc
out
adc
lods
lea
adc
xor
aas
in
stos
repz
inc
aam
sarl
into
jne
adc
sbb
xorb
dec
daa
test
jl
lret
sbb
push
pop
dec
iret
fcompl
sub
fsubrs
lds
hlt
pusha
shrb
fsubrl
xchg
mov
lods
dec
jl
cmp
das
xchg
inc
or
popf
into
jne
xchg
iret
inc
arpl
testl
cmp
sub
imul
xor
lock
sub
sarl
popf
or
scas
movsb
cmp
adc
mov
loopne
xor
popf
jb
and
pop
aaa
inc
lret
cmpsb
shll
and
lea
inc
mov
subb
fld
sbb
mov
lea
loopne
xchg
jae
dec
jbe
test
pushf
mov
sbb
xchg
push
xor
leave
mov
test
pop
into
scas
pushf
pop
jae
outsl
cmpsl
shufps
repnz
mov
inc
or
das
pop
xchg
mov
sti
out
mov
das
les
bound
jnp
lock
pop
push
mov
imul
stos
lods
pop
notl
pop
jbe
cmp
sahf
repnz
push
shr
shr
jg
xor
adc
jg
scas
inc
pushf
in
or
jge
scas
xor
icebp
mov
pop
xchg
pop
hlt
icebp
je
mov
dec
jecxz
dec
hlt
js
test
imulb
je
fidivrl
mov
push
sbb
mov
fisubrs
insb
rcll
insl
xchg
repz
subl
adc
inc
fsubrp
inc
add
xchg
adc
cmp
jne
xchg
sub
mov
push
mov
sti
imul
loopne
jl
ss
sub
mov
in
xor
push
fbld
clc
jg
into
inc
scas
sub
sub
in
add
aas
test
loope
sub
mov
xchg
mov
scas
push
mov
sub
lds
js
inc
or
or
jne
stos
es
ds
les
fnstsw
ljmp
xor
sahf
jmp
sbb
fdivs
jg
fdivl
aam
sub
ror
dec
jae
movsb
out
adc
jo
mov
fisubrs
in
mov
pop
dec
iret
add
loop
addr16
cmp
in
loop
outsb
or
pushf
into
xchg
push
addl
push
in
pop
icebp
mov
dec
pusha
add
sbb
or
cwtl
add
cmp
cmpsl
ror
add
sarl
mov
dec
ret
xlat
xchg
and
cli
dec
aad
mov
jge
test
mov
cmpsl
xor
push
enter
jecxz
adc
or
or
mov
daa
lcall
jp
and
push
xchg
shlb
cmp
and
arpl
xor
mov
dec
adc
inc
scas
sbb
push
inc
lods
push
jge
shll
in
jmp
and
inc
enter
fdiv
rcrb
xlat
push
out
ss
lcall
aam
mov
add
lahf
or
or
dec
lds
sahf
mov
mov
cwtl
lcall
lods
mov
lcall
mov
inc
pushf
mov
inc
sub
sub
ret
jb
jp
pushw
inc
jg
enter
cmpsb
mov
daa
push
outsb
push
adc
sarb
mov
bound
pop
mov
dec
mov
push
icebp
arpl
or
xor
outsb
push
bound
lahf
insl
ret
test
sbb
jge
leave
cli
push
push
lret
mov
push
mov
mov
jno
mov
push
shll
int3
subl
jno
mov
xchg
les
jbe
xchg
cmpsl
pop
out
mov
cs
mov
cld
scas
add
inc
aas
pop
jne
in
mov
xlat
icebp
arpl
lock
adc
lods
sahf
add
inc
add
outsb
mov
pop
mov
popl
or
pop
or
fprem1
cltd
and
xchg
out
stos
pop
sub
mov
fisttps
jl
push
jae
mov
popa
jbe
fcmovne
das
cmp
cmpsl
sub
loope
dec
or
cmp
test
fs
shlb
push
add
mov
jo
outsb
shl
lds
xor
in
cwtl
les
out
inc
loope
and
jle
cmp
lods
or
fsubl
inc
and
jns
sbb
ljmp
or
inc
outsl
mov
mov
fcompl
cs
xchg
scas
sarb
mov
xchg
pop
or
jno
jns
xchg
inc
jae
scas
fs
and
dec
aad
sub
sbb
in
cld
mov
mov
mov
fcmovnbe
adc
test
pusha
inc
jno
jne
scas
xlat
cmp
sarl
fisubs
dec
test
push
stc
hlt
out
mov
sub
pop
lcall
adc
push
fnstsw
or
lret
push
mov
sbb
jecxz
xchg
jnp
sub
and
lods
mov
std
cmpl
mov
mov
js
popf
adc
lret
jb
into
pop
test
cltd
cmp
lods
cwtl
jbe
mov
jo
jmp
push
add
shl
pushf
push
cmp
out
ljmp
sbbl
add
mov
in
xor
cmpsl
and
fisttpll
je
arpl
fsts
add
test
lahf
mov
stos
mov
mov
pushf
dec
fsubs
adc
lea
dec
aaa
mov
rorl
mov
xor
imul
lahf
xchg
outsb
pop
rol
lret
pop
aam
lcall
push
xor
enter
mov
inc
dec
cmp
popa
out
mov
cmpsb
push
outsl
lods
adc
push
mov
jbe
jns
mov
fnstsw
jmp
jmp
cmc
push
pop
mov
cmpl
out
xor
fwait
jmp
sub
pop
xchg
loopne
fdivrs
outsb
mov
daa
std
push
mov
cmp
int
dec
pop
cld
test
ret
fisubs
xchg
inc
jbe
lret
dec
ffreep
leave
and
aam
cld
lods
sti
dec
and
or
and
popa
call
mov
push
mov
out
lods
iret
jae
iret
fbld
outsl
mov
out
insb
mov
cmp
push
outsl
sub
push
cmpsb
shrb
sbb
add
sub
mov
fisubl
xor
jnp
and
leave
leave
mov
jl
dec
pop
push
rcll
andl
aas
jae
mov
pop
pop
fidivrl
xlat
push
push
fisttpll
std
out
cmp
push
mov
jmp
adc
xor
xchg
mov
rcrb
pcmpgtd
push
adc
hlt
add
jo
jnp
xchg
push
fildll
mov
lock
imul
fxch
fdivl
cmpsl
push
push
xlat
or
leave
sarb
mov
data16
repnz
out
test
and
dec
js
mov
leave
pop
aam
sub
aad
inc
pop
pop
ljmp
mov
test
cltd
dec
cmp
or
popf
pushf
sahf
push
jle
lock
sub
test
fstpt
outsl
mov
inc
cmc
arpl
lcall
lcall
and
out
stos
jmp
adc
cmp
insl
adc
stos
popl
popf
mov
xchg
jnp
aas
add
or
std
lret
sub
pushf
test
mov
mov
mov
ds
mov
dec
lods
inc
mov
ss
jne
lea
mov
and
jb
aam
aad
add
stos
mov
mov
dec
xor
dec
adc
mov
inc
add
cli
sbb
fdivrs
inc
loop
push
and
cmp
lea
test
stos
dec
mov
in
pop
fwait
clc
repnz
arpl
imul
jbe
push
outsl
aaa
incb
cmp
dec
gs
ja
into
bnd
mov
hlt
add
mov
and
loop
icebp
mov
sbb
imul
int
sbbb
and
inc
jnp
in
or
pop
add
ja
adc
jl
cmp
ss
mov
aam
imul
pop
add
js
in
mov
fcompl
mov
cmp
xorb
pop
icebp
pop
ret
movsl
mov
arpl
lcall
and
xchg
arpl
outsl
movsl
push
pop
in
cmp
cmp
mov
stos
sub
mov
jge
loop
and
icebp
inc
call
in
in
cld
inc
or
outsl
push
jmp
out
xchg
mov
push
mov
mov
push
mov
das
dec
jae
loope
fidivl
inc
mov
mov
loope
ds
lock
out
xchg
jmp
ds
int
dec
jns
xchg
xchg
push
mov
cmc
push
inc
lods
mov
fsubs
dec
inc
jmp
pop
xchg
ja
jmp
cmp
lock
popf
repz
inc
cld
jbe
sbb
mov
adc
mov
fstl
andl
jnp
dec
inc
push
mov
jne
and
lods
mov
fldl
sar
mov
fldcw
xchg
ljmp
in
cmpb
jle
std
shlb
adc
jl
inc
xor
in
shll
inc
push
fwait
dec
adc
jecxz
pop
loopne
jb
imul
mov
xchg
stos
repz
test
adc
icebp
or
and
pop
imul
cld
cltd
sti
loope
or
jo
pop
aad
rorb
cmp
aad
and
dec
mov
mov
or
dec
mov
mov
xlat
lds
aad
adc
push
lds
xchg
add
inc
dec
sbb
lds
shlb
mov
enter
cli
flds
sub
dec
lods
xchg
js
push
addr16
jbe
cltd
xor
stos
xor
test
dec
mov
pop
lret
leave
out
or
push
call
andl
test
adc
jp
push
lret
jl
test
aaa
scas
mov
stc
pop
cmp
pop
jg
es
lret
outsb
cmp
and
sarb
mov
xchg
sti
xchg
lock
adc
mov
pushf
aam
popf
cmc
pop
mov
sarl
out
sbb
push
mov
cwtl
das
jp
cwtl
jecxz
aad
sbb
xchg
jp
xchg
popa
fnstenv
inc
lret
sarl
push
mov
fs
push
mov
lods
xchg
int
or
shlb
fcmovb
inc
lds
in
fwait
jecxz
and
loopne
inc
cmp
jne
jl
sbb
lods
in
cmp
pop
mov
add
adc
cmpb
push
les
daa
in
push
call
adc
dec
out
es
into
aas
xchg
cmpsl
or
sub
inc
lods
pop
mov
xor
movsb
pop
shlb
pop
pop
loopne
or
jge
call
into
dec
ss
mov
test
push
jb
ja
dec
movsl
xchg
orl
in
adc
or
mov
int
push
jb
pop
sbb
cmpsl
inc
adc
dec
sbb
into
jnp
das
in
sarl
shrb
lret
mov
ljmp
pushl
push
sbb
enter
jne
das
outsb
mov
loop
cmp
add
movsb
arpl
xor
ja
jns
popf
sbb
xchg
int
sub
pusha
test
push
push
or
sub
aad
mov
out
fldcw
cmpsb
sub
lret
sub
data16
xchg
lods
call
call
mov
test
cmp
cld
inc
mov
loopne
aam
dec
lods
in
sub
and
scas
popa
xor
dec
xchg
cmp
andl
push
loop
out
dec
stos
cmpb
ljmp
adc
mov
add
stc
pop
xchg
mov
mov
ja
xchg
pop
xor
in
sub
ljmp
push
dec
aaa
int
leave
dec
add
lock
sub
mov
or
inc
jmp
lods
mov
add
inc
fsubrs
mov
repz
push
mov
fistpll
cmp
jb
mov
jnp
arpl
xor
aas
sub
out
sbb
fdivl
pop
adc
xor
mov
pop
xlat
mov
jb
inc
mov
push
dec
adc
add
call
pop
pop
push
push
jo
inc
icebp
pop
push
icebp
cmp
mov
out
jmp
scas
push
push
sub
enter
jne
mov
jge
lahf
xchg
iret
push
fisttpll
mov
int
in
cmpsl
push
and
stos
mov
imul
or
out
enter
and
mov
arpl
sahf
ret
add
icebp
pop
mov
sahf
ror
sub
dec
push
int3
dec
stos
insl
lret
xor
ja
int
insl
addr16
mov
cmp
adc
fsubrs
and
es
addr16
js
push
dec
mov
fwait
sub
jbe
mov
cmp
cmp
mov
aad
fidivrs
lods
cmpl
jae
xor
sbb
ret
movsb
xlat
dec
jo
leave
pusha
int
xor
sbb
xchg
lret
xchg
push
shlb
push
adc
lods
pop
jnp
mov
inc
xchg
ja
mov
fcmovnu
inc
sub
bound
shrb
push
push
stos
cld
inc
addr16
cmc
rcrb
xchg
imul
aas
minps
and
sbb
xor
mov
dec
int
xor
add
ds
loope
inc
xor
ret
and
dec
sub
fcoms
enter
lahf
mov
cmp
pop
out
das
shll
rorb
in
mov
dec
xor
movsb
jge
lea
and
push
mov
lret
add
jl
add
push
push
add
mov
repz
in
push
mov
pop
faddp
pop
sbb
cmp
sti
iret
test
test
fsubl
js
hlt
shlb
call
aaa
repz
iret
addb
or
cmpb
push
and
xor
push
add
push
or
test
shrb
std
insb
mov
ja
push
sub
outsl
xchg
adc
adc
jge
lea
rcll
loope
loopne
mov
mov
jmp
in
pop
mov
add
in
push
rolb
imul
or
push
xor
jb
std
test
xchg
repnz
dec
rcll
leave
cltd
jno
xchg
fnstenv
shr
jmp
push
dec
imul
inc
mov
adc
dec
and
in
repz
out
in
test
and
cmp
dec
ret
mov
jns
mov
push
scas
jg
dec
jae
xor
orl
mov
mov
or
sbb
rclb
mov
aad
cltd
and
aam
ds
movsb
pop
loopne
stc
xor
inc
sbb
movsl
aaa
cmpsl
int3
or
dec
push
mov
lods
mov
mov
nop
sbb
out
std
nop
sbb
popf
lret
insb
gs
dec
inc
push
and
in
sbb
pop
lock
fs
sub
leave
movsl
inc
xor
loop
call
dec
pop
inc
mov
cmp
inc
adc
loope
fpatan
mov
pop
xorl
sti
and
push
outsl
into
movsl
jecxz
out
cmpsl
push
xchg
popf
add
pop
mov
push
fsubrl
pusha
jb
or
adc
fldl
lods
loop
push
mov
jle
pop
loope
and
movsl
call
mov
popa
stc
mov
add
imul
jl
xchg
nop
pop
rorb
test
mov
test
std
sbb
jmp
mov
adc
iret
aaa
and
jnp
mov
out
rcr
sub
dec
fs
jnp
popa
insl
sbb
lods
jmp
xor
in
std
cmpsb
and
mov
pop
dec
shrl
push
inc
lds
outsl
inc
xchg
aaa
cld
pop
fwait
dec
push
inc
sub
and
sahf
lret
mov
dec
popa
scas
test
and
sub
add
sbb
inc
int3
ja
pop
bnd
gs
outsb
std
popa
imul
es
dec
es
in
dec
sub
mov
xchg
mov
les
mov
shll
add
test
push
mov
std
jne
mov
sbbb
sarb
xchg
pop
cmp
sub
jno
lock
pop
arpl
or
dec
jo
xchg
cmp
popf
sub
imul
aam
rorb
mov
fneni(8087
enter
lcall
out
mov
adc
inc
add
or
shld
and
mov
jl
movsl
inc
push
pop
or
sub
xchg
movsl
pusha
in
inc
lahf
leave
push
sub
aaa
jmp
inc
mov
into
adc
fiadds
dec
movsl
addr16
cmpsb
jae
loop
int3
mov
jbe
scas
xor
mov
loop
xrstors
test
fisttpl
add
test
lcall
fstps
ss
push
xor
inc
mov
pop
adc
jmp
pop
fisttpll
icebp
and
push
jns
adc
inc
imul
rclb
addr16
mov
mov
insl
sbbb
insb
lcall
je
add
scas
ret
and
aas
ret
mov
sbb
mov
iret
es
push
mov
cmp
sub
sbb
cmpsl
iret
sbb
lcall
xlat
add
pop
cli
xor
push
add
xor
jno
dec
jbe
mov
mov
sti
jge
jecxz
push
fwait
test
push
push
xor
fdivr
pop
popa
shl
das
push
scas
ds
push
mov
xchg
xor
xor
outsb
lea
cmc
int3
in
inc
leave
ds
add
xchg
mov
imul
bound
and
inc
jne
xchg
mov
int3
xor
stc
adc
sbb
push
js
fprem1
jb
pop
lret
or
add
adc
mov
adc
rcrl
sbb
xor
sti
aam
cmpsb
dec
inc
fcompl
idivl
insb
scas
notb
bound
lret
lcall
sub
out
mov
fists
pop
inc
jbe
dec
push
lds
sbb
test
mov
mov
out
lea
dec
mov
jmp
in
std
xor
push
push
sub
mov
sub
pusha
filds
sahf
sub
repz
pop
notl
icebp
stc
and
ljmp
mov
inc
lods
popf
jae
add
xor
fisttps
out
cmpsl
and
lods
push
push
sub
ja
dec
push
test
sahf
xchg
sarl
clc
and
lahf
cltd
call
or
mov
mov
ljmp
hlt
cmpsb
mov
out
mov
mov
xor
jg
or
lcall
addr16
sbb
sub
rcl
leave
mov
pop
fwait
jecxz
stos
dec
in
cltd
sbb
and
insb
cltd
repz
fbstp
pushf
idiv
xchg
icebp
pop
add
cltd
xchg
hlt
xchg
dec
dec
jnp
pusha
rorb
mull
into
xchg
push
cmp
into
dec
push
pushf
xor
push
repz
fidivrl
in
iret
es
jp
sarl
dec
sub
in
cld
pop
mov
fcmovnb
ja
pop
cmp
je
je
stos
cmp
or
in
push
sahf
mov
mov
les
jne
rcrb
sub
pop
fs
in
imulb
popf
and
test
mov
xchg
jle
sub
mov
pop
sub
xchg
sahf
sbb
jmp
pop
cltd
mov
arpl
subl
and
jge
push
int
inc
icebp
dec
mov
and
xlat
mov
or
popa
std
mov
inc
mov
xlat
xchg
jecxz
scas
fsts
daa
out
outsb
and
xor
sarl
cmpsl
stos
push
push
add
addr16
inc
mov
xchg
in
xchg
icebp
test
mov
movsb
and
add
popa
adc
add
xor
and
aam
les
xchg
icebp
test
mov
movsb
and
add
popa
adc
add
xor
and
rolb
loopne
xchg
icebp
out
shll
inc
icebp
je
insl
popa
adc
inc
cmp
in
and
adc
test
xor
and
adc
push
insb
stc
jl
dec
scas
pop
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
adc
add
xor
and
in
das
jmp
xchg
popa
addb
mov
mov
xor
and
aam
les
hlt
and
push
xchg
inc
xchg
jo
pusha
rolb
je
shlb
push
lock
and
int
in
cmp
dec
lea
push
push
mov
adc
pop
scas
jo
inc
mov
jns
outsl
mov
xchg
push
addl
inc
inc
mov
cmpsl
dec
push
mov
cmp
addr16
rorl
aam
dec
dec
std
pushf
mov
in
ja
dec
cmc
pop
adc
and
fwait
xorb
les
fsubr
dec
cld
scas
ret
mov
les
push
jg
mov
sub
mov
adc
add
scas
xchg
inc
xchg
pop
popa
and
mov
mov
das
sub
cmpl
lea
mov
push
pop
icebp
cmp
test
mov
sub
rclb
lock
ja
fildll
push
inc
and
cmp
cs
lock
xchg
cmp
in
ss
fld
sbb
xor
and
inc
xchg
push
test
jns
mov
test
mov
sbb
loopne,pn
jl
gs
xchg
push
andl
fsubs
nop
cmp
inc
ret
jo
add
jno
push
sbbb
jg
popa
lods
pop
xchg
cmp
inc
lret
xor
mov
loope
shlb
xchg
push
jne
insb
les
mov
jo
pusha
movsb
nop
push
addb
rclb
add
xor
and
aam
les
hlt
and
push
xchg
inc
test
pusha
movsb
nop
push
addb
rclb
add
xor
and
aam
xlat
jae
out
pop
inc
imul
cli
scas
movsb
pop
jb
in
data16
mov
xor
lcall
out
int
lea
stos
push
xchg
jmp
inc
pop
cmpsb
mov
maskmovq
notl
fsincos
push
mov
and
jnp
mov
and
fnstsw
filds
xor
mov
inc
add
jno
add
popa
popa
add
lret
jmp
arpl
out
dec
pushf
fs
outsb
push
xchg
stos
out
stos
notl
mov
nop
jge
fmull
and
jne
jle
xchg
stc
iret
je
xor
sub
popf
js
sub
adc
repnz
cmp
cltd
stc
sbb
sbb
jge
sub
sarl
aad
lret
data16
sub
clc
addr16
adc
out
lock
or
lcall
push
nop
cli
lret
cmp
dec
sbb
sub
scas
jb
sbb
jno
mov
sbb
add
pushf
fcomip
clc
pop
and
pmullw
outsb
pop
inc
xchg
xchg
push
sahf
in
lods
iret
inc
mov
lahf
sahf
dec
pop
xchg
sbb
ucomiss
xlat
mov
test
iret
pop
add
mov
adc
dec
xor
movsl
xchg
add
push
ja
xor
xchg
xor
sub
jbe
add
cmpsb
add
mov
aas
inc
adc
push
push
rol
pop
dec
sub
leave
mov
popf
mov
xor
and
and
js
lahf
inc
mov
testb
jmp
repnz
data16
push
jp
xchg
cmpl
push
mov
sbb
fiadds
adc
pop
and
loopne
aam
test
adc
pusha
adc
fwait
cs
arpl
lock
adc
fildll
daa
push
dec
xor
shlb
imul
cwtl
repnz
mov
push
cmp
pop
das
aad
xor
jne
add
xorb
xlat
lahf
mov
mov
cwtl
adc
je
out
cmc
and
in
hlt
cmp
lret
aad
dec
ret
rorw
andb
pushl
push
pushf
xlat
outsb
aaa
xsave
xchg
jl
adc
lods
shr
jmp
inc
fadd
or
addr16
inc
cmpsl
cmpsl
mov
or
lods
adc
lret
cld
xchg
movsl
dec
sbb
rcrb
and
inc
fs
mov
ret
jbe
outsl
adc
pop
pusha
fcompl
adc
bound
pop
mov
fistps
sbb
clc
push
xchg
add
xor
gs
cmp
pushf
aam
sti
sahf
pop
pop
pop
bound
push
adc
shl
and
mov
pop
stc
pop
mov
decl
rorb
push
setbe
pop
faddp
adc
cmp
or
lock
rcrb
leave
sub
mov
mov
aas
stos
jl
clc
aas
adc
mov
mov
sahf
mov
je
jge
popa
push
cmpsl
xor
mov
dec
loope
loope
jb
daa
or
mov
sbb
pop
mov
andb
dec
or
adc
mov
setne
pop
mov
pop
jl
push
rcrl
xor
jle
arpl
outsb
shlb
cmp
mov
shlb
add
cmpb
andl
mov
or
fcomps
xor
push
js
push
pop
in
notl
popa
test
imul
xor
leave
popa
xor
mov
insb
push
push
cmp
insl
pop
out
inc
mov
repnz
xor
mov
add
adc
jno
loop
dec
movsl
out
adc
fldenv
push
test
mov
test
jb
or
popa
xchg
fldl
mov
bound
mov
or
cwtl
jbe
sti
sti
data16
jmp
sbb
pop
add
out
scas
mov
xlat
cmp
dec
jbe
jge
rcrl
movsl
sbb
fcmovu
inc
jecxz
pop
mov
cmp
rorl
insl
xor
xchg
pop
imul
inc
ja
sub
mov
xor
jmp
imul
fucompp
push
mov
lock
pop
mov
test
sub
sbb
sub
ficoml
das
jbe
fsub
adc
adc
jno
jmp
ss
cmp
push
jbe
jns
mov
dec
adc
and
cs
cmp
mov
call
mov
arpl
jne
inc
adcb
cmp
cmp
adc
mov
pop
cmpsb
into
aaa
sarl
add
push
xadd
sahf
std
lret
xchg
or
ljmp
push
jne
xor
cmc
dec
or
cmp
mov
shl
push
fidivrl
arpl
scas
inc
xchg
sbb
push
ljmp
xor
or
push
ljmp
adc
pushf
daa
je
ret
inc
jmp
adc
out
cli
loop
inc
mov
cmp
or
and
rcrl
jb
lds
adc
jb
xchg
into
outsl
rcrb
stos
icebp
mov
inc
aaa
mov
outsb
test
and
xor
fdivrl
fidivl
pop
or
adc
bound
jae
ljmp
or
repnz
mov
fstpl
movl
enter
out
mov
test
cld
jmp
loopne
dec
sbb
cmp
sub
mov
fcoml
dec
jae
cltd
xchg
mov
test
rcrb
adc
lcall
ficoml
notl
inc
xchg
mov
push
call
lret
xor
pop
jb
mov
rorb
adc
or
popa
xchg
cmp
inc
inc
icebp
xor
pop
sbb
push
ljmp
and
xchg
mov
fucomip
fptan
add
add
addr16
bound
fstps
popf
stos
lret
test
add
push
mov
out
fnstenv
inc
or
mov
insl
jne
xchg
lea
loop
cmp
and
jnp
icebp
call
xor
fcoml
mov
fiaddl
mov
cmpsb
mov
push
scas
or
ret
popf
add
cwtl
mov
rorb
cs
fdivp
xlat
fs
fmull
sahf
cld
mov
and
add
push
imul
mov
fldcw
add
xchg
sbb
test
sti
lds
icebp
mov
mov
int3
ret
xor
dec
xchg
mov
pushl
sub
mov
js
dec
adc
mov
repz
cmpsb
push
mov
sbb
mov
jle
movb
sbb
rcrb
xor
cmp
testl
xor
enter
xor
and
test
ret
aaa
dec
jnp
inc
and
cmp
pushf
dec
lods
gs
ret
push
inc
inc
push
mov
jb
fadds
xchg
outsb
mov
xchg
push
jle
repz
clc
icebp
dec
clc
fdivrl
pusha
fildll
sbb
push
pop
mov
mov
repnz
iret
popa
add
cmp
or
pop
xchg
lahf
jg
ret
pop
sbb
mov
dec
je
cmpsb
or
cmp
popf
inc
inc
lcall
shll
or
frstor
lods
cmp
minps
in
test
ljmp
push
mov
movsl
loopne
movsl
fs
cwtl
sbb
pop
addr16
sbb
imull
mov
shl
and
ds
push
push
xchg
ja
jle
insb
imul
pop
sub
loope
in
xchg
lods
faddp
inc
xorl
mov
xchg
jne
je
testl
and
or
ret
mov
mov
aas
fcoml
sub
jle
dec
out
outsb
add
inc
sahf
aam
mov
into
imul
xchg
daa
xchg
cld
mov
dec
lods
imul
dec
stos
popf
fwait
jle
and
dec
ljmp
inc
mov
repnz
sbb
jle
pop
lods
popa
pop
inc
dec
pop
shr
inc
xchg
clc
jg
push
jb
add
sbb
sbb
test
ljmp
into
insb
lahf
jmp
rorb
movsb
mov
and
insl
rcll
aas
fucomi
inc
dec
gs
push
jo
jb
and
mov
sbb
andl
nop
push
jge
or
imul
roll
cmc
and
iret
dec
aas
mul
adcl
lea
sbb
cld
shl
jmp
xor
jo
cli
sbb
rcrl
and
add
pusha
jo
mov
js
mov
scas
int3
jb
int3
inc
or
sbb
rorb
jge
pop
test
pop
xor
sbb
out
fisttpl
and
enter
cmpsb
pushl
mov
adcl
push
push
cld
jl
mov
jecxz
sbb
xchg
inc
out
mov
and
cmp
push
adc
mov
add
bound
mov
jle
sbb
jnp
sbb
mov
gs
stos
test
cmp
push
adc
dec
push
je
push
jbe
mov
mov
or
shll
dec
dec
outsb
nop
hlt
push
cmp
adc
dec
add
idivb
psllq
fists
lcall
or
int
out
xorb
cs
xchg
inc
popa
aas
xor
mov
mov
xor
dec
clc
jecxz
jmp
inc
jecxz
cltd
xchg
test
out
ljmp
mov
leave
sahf
cmpsb
push
adc
inc
cmp
out
mov
add
mov
dec
jno
xchg
shl
es
or
add
cmp
out
xchg
push
paddw
mov
cs
dec
or
cmp
dec
out
fsubl
sub
rcr
lods
stc
or
scas
dec
xchg
cltd
arpl
and
imul
cs
ds
lret
cmc
rcll
xor
cmp
pop
test
cmp
pusha
lahf
lock
sbb
xor
mov
push
pop
or
sbb
push
int
pop
mov
inc
cs
and
scas
pop
sbb
dec
inc
scas
mov
aad
mov
push
loopne
mov
push
aaa
and
test
lea
ficoml
cmp
inc
mov
xchg
jmp
stos
fstp
xchg
int
push
mov
mov
js
lcall
xlat
aas
leave
jae
in
dec
xchg
inc
and
xchg
dec
xchg
pop
pop
daa
fsubrl
popa
ja
mov
sub
clc
xchg
jge
dec
iret
repz
jo
inc
lahf
push
fsubs
mov
gs
movsb
ljmp
das
mov
pushl
int
xchg
or
in
xchg
sub
adc
push
push
test
dec
cmpl
cmp
cs
clc
iret
or
xchg
scas
arpl
xchg
scas
adc
inc
mov
js
lcall
mov
xchg
enter
pop
push
push
aad
push
call
aad
push
imul
stos
cmp
movsb
inc
cmpsl
in
and
dec
movsb
add
mov
sbb
mov
cli
out
lods
rorb
add
add
hlt
daa
add
outsl
or
mov
pushf
mov
clc
es
sbb
pop
imul
add
and
sbb
pop
in
and
xor
loope
inc
in
into
inc
sub
mov
dec
adc
mov
lcall
fmul
movzwl
shr
popa
aam
stos
xor
lds
in
rcrl
push
int3
imul
mov
idivb
xchg
push
sbb
push
mov
xor
sti
test
inc
xor
dec
xchg
adc
cmc
ret
cld
imul
jne
and
shlb
dec
mov
mov
adc
sub
push
push
lods
mov
sub
jns
mov
push
dec
sbb
iret
icebp
mov
int3
jle
mov
aad
pusha
bound
add
cmp
fdivs
or
out
roll
sub
jecxz
sar
push
mov
out
ret
es
cli
dec
fnstcw
punpckhwd
adcb
fadds
shrl
iret
inc
mov
xchg
lock
movsl
rcl
aam
jle
jmp
aas
sub
popa
ss
mov
lea
daa
jmp
or
cmc
jle
fs
cli
int
push
sub
fs
out
loopne
ret
xor
push
pop
cmp
xchg
scas
sub
xor
jne,pt
xchg
ret
gs
pop
jmp
dec
aad
pop
add
paddd
test
xor
add
push
imull
ljmp
add
push
clc
inc
mov
outsl
add
push
jle
or
rclb
xor
movsl
divb
or
popf
mov
testb
jmp
push
mov
or
in
mov
sub
iret
cmpsl
jg
data16
repz
data16
insb
and
inc
inc
ss
and
cwtl
int
cmpsl
xlat
mov
scas
or
jno
int3
int
xor
xchg
std
add
insb
lods
adc
in
dec
movsl
dec
dec
jo
cs
jmp
stos
pop
adcb
test
loope
or
addr16
lret
movsl
xor
xchg
inc
popl
mov
ja
xchg
js
xchg
push
mov
pop
ljmp
and
test
pop
cmp
scas
jb
shl
jle
movsb
adc
xor
inc
pusha
aaa
jecxz
scas
dec
sub
sub
movsl
xor
sbb
mov
sub
jge
cmp
test
mov
pop
cmp
pusha
adc
aam
mov
and
ds
sub
push
mov
cmpsl
add
mov
ficomps
int3
fldlg2
pop
mov
nop
lcall
sahf
loopne
add
sub
sahf
movsl
out
iret
fisubl
vsubps
insl
adc
cmp
stos
js
jp
push
decl
sbb
inc
cmp
scas
sarl
and
mov
xchg
in
pop
iret
pop
dec
adc
std
sbb
pop
jge
ret
pop
mov
popf
mov
pusha
mov
movsb
adc
icebp
clc
outsl
and
push
sub
ret
in
gs
mov
in
push
and
pop
pop
jecxz
popf
push
cmp
mov
cwtl
dec
push
pop
loopne
dec
xchg
vfrczsd
sub
mov
xor
cs
lods
cmpsb
daa
out
test
sarl
cltd
or
add
or
rcll
aad
std
js
outsl
jmp
mov
pop
fs
psubb
rcll
or
addr16
pushf
test
lret
cld
mov
jecxz
pop
sub
push
mov
outsl
mov
sahf
test
mov
iret
cwtl
mov
jns
sub
push
jg
jp
pop
and
push
push
mov
out
scas
push
inc
cli
and
rclb
or
pop
and
lods
cmc
push
inc
loop
jg
xchg
sbb
icebp
sub
sbb
mov
push
rcrl
imul
xlat
out
xchg
push
ds
xor
jbe
jmp
lds
mov
inc
pop
test
por
stos
inc
in
xor
mov
jo
sub
rol
loopne
mov
lods
sbb
daa
push
inc
cmp
push
cld
and
jbe
jp
push
loop
outsb
mov
xchg
mov
mov
dec
sub
lods
fists
mov
aaa
enter
nop
adc
enter
cmp
xchg
cwtl
inc
mov
shlb
ret
inc
adc
inc
inc
mov
cmpsb
push
jnp
push
adc
cmc
gs
or
push
std
out
inc
ret
lret
clc
out
inc
or
or
aad
push
incl
push
push
bnd
enter
xchg
pop
mov
movsl
fs
xlat
sbb
fnstenv
mov
xor
pop
mov
cmpsb
js
push
cld
data16
out
adc
jmp
jbe
jecxz
mov
push
sahf
add
jp
and
inc
push
jmp
es
ja
jle
ja
in
and
xor
nop
pop
cs
dec
lahf
pushf
add
mov
pop
mov
ljmp
dec
push
icebp
fisttps
faddl
fmull
pop
xor
add
jle
cwtl
xor
sbb
push
es
mov
mov
inc
pop
aam
out
jl
fcomps
ret
dec
push
sub
shl
and
mov
lock
call
imul
aas
in
sbb
mov
fwait
pop
pop
sbb
jnp
or
add
or
add
mov
out
pop
ret
ficomps
xchg
int3
ja
lret
arpl
mov
jecxz
add
mov
push
into
xchg
sub
fnsave
adc
adc
push
mov
sbb
sbb
sbb
cmp
pushf
das
icebp
out
and
and
cmp
dec
inc
jg
loopne
xor
orl
pop
imul
cld
push
pusha
mov
adc
insl
inc
mov
xlat
xchg
push
das
insb
insb
mov
and
gs
mov
mov
cltd
jmp
test
rolb
or
cmpsl
dec
mov
jbe
ds
aas
stc
jne
xorb
movsb
sti
daa
xchg
test
inc
cmc
aas
push
cmp
cmc
push
push
es
xchg
cmp
xchg
and
or
or
into
leave
and
in
jle
pusha
lods
sub
inc
mov
mov
lret
stos
cwtl
adc
and
mov
int3
xchg
ljmp
pop
push
outsb
xchg
stc
cmp
shl
cmp
imul
mov
data16
mov
jg
xor
sbb
call
sub
repnz
sbb
scas
subb
xchg
lock
push
lock
xchg
les
dec
xor
push
in
sbb
cmp
test
int3
insl
call
sub
mov
jle
adc
lea
push
punpckhwd
xor
movsb
addb
jo
xchg
mov
sub
sbb
fsubs
cmpsb
ds
call
add
adc
movsb
sbb
sbb
leave
push
sbb
loope
movsl
jbe
xor
dec
stos
rolb
xor
jb
pushf
cmp
je
inc
adc
add
pop
dec
int3
pop
fs
popa
test
test
pusha
mov
repnz
mov
add
out
or
insb
push
addr16
inc
insb
dec
insl
mov
xlat
jae
jl
mov
outsl
cmc
mov
xor
outsl
shlb
and
ret
mov
mov
test
loope
push
gs
popa
inc
scas
inc
mov
cmp
dec
enter
je
mov
lcall
lock
and
sub
xor
lcall
cli
push
jge
add
xor
pop
mov
jo
pop
repz
push
sub
xchg
in
jmp
mov
xchg
cld
xchg
inc
inc
pop
ret
cmp
and
in
clc
insl
rcrb
mov
or
addl
push
test
or
lret
fwait
loop
test
fnsave
mov
scas
pop
mov
cs
test
and
aam
int3
dec
or
push
add
dec
decb
push
or
pop
cmc
push
mov
movsb
mov
xchg
test
imul
inc
sbb
push
xchg
xor
sub
xchg
mov
mov
hlt
in
insl
int
rolb
or
inc
cmp
mov
sub
insl
test
lods
cmp
sahf
call
or
inc
loopne
loope
inc
mov
lock
sub
jecxz
roll
lret
stos
jbe
add
jns
dec
repnz
pop
call
ret
xor
mov
lods
ret
stos
clc
xor
scas
fwait
in
out
ss
mov
popa
je
xor
mov
test
and
adc
ja
and
lret
sbb
sub
pop
mov
inc
adc
and
loopne
mov
shrl
repz
test
push
dec
sbb
dec
push
adc
movsl
add
xchg
in
adc
orb
adc
mov
repnz
and
add
test
mov
push
dec
int3
xorb
int3
mov
xor
ds
jmp
sub
scas
cmp
in
or
pushf
adc
inc
mov
pop
xchg
mov
mov
pop
lods
subb
pop
sub
incl
gs
aam
rcrb
jmp
scas
pop
mov
leave
mov
stos
push
ficoms
daa
cmpsb
pusha
dec
lds
fucomp
inc
cmpsl
fsubs
dec
lar
shll
pop
xchg
rcrb
nop
dec
mov
sahf
mov
and
push
xchg
testl
popf
mov
stos
inc
fsub
jecxz
adc
dec
sbb
std
daa
add
aam
jne
cmp
sahf
leave
add
dec
sbb
add
jns
mov
mov
cmp
and
push
xchg
inc
test
pusha
movsb
nop
push
addb
rclb
add
xor
and
aam
les
hlt
and
push
xchg
inc
test
pusha
movsb
nop
push
addb
rclb
add
xor
and
aam
les
hlt
and
push
xchg
inc
test
pusha
movsb
nop
push
addb
pusha
rclb
add
xor
and
rolb
shlb
and
push
xchg
inc
test
mov
outsl
push
jg
sbb
cmpsl
pushf
dec
jnp
dec
pop
pop
test
xchg
or
cmp
test
add
jae
and
push
leave
inc
cmp
or
pop
rorl
mov
adc
arpl
push
leave
inc
cmp
or
pop
rorl
mov
arpl
add
cmpsb
inc
dec
mov
xlat
push
negl
repnz
jp
cmp
stos
jbe
adc
push
cmc
je
mov
insb
mov
dec
jl
or
rcr
cmp
int3
mov
rclb
add
push
call
mov
fs
push
mov
push
jbe
inc
jae
push
pop
lods
mov
dec
sub
jns
inc
repz
add
cwtl
in
popa
cld
sbb
mov
les
pop
dec
inc
sbb
xchg
repz
sbb
sub
xchg
shll
and
out
mov
stos
mov
ss
sub
xchg
mov
cltd
cmp
inc
inc
int3
jg
in
pop
add
lea
inc
data16
mov
jns
imul
mov
adc
arpl
push
leave
add
jne
inc
lds
pushf
or
push
mov
mov
pop
sbb
jge
insl
lea
movsl
sbb
push
insl
xchg
inc
aam
xchg
or
ret
jmp
les
inc
in
outsl
mov
lcall
jecxz
xlat
jp
sub
cmp
dec
ret
mov
adc
arpl
push
leave
inc
cmp
or
pop
rorl
mov
adc
arpl
push
leave
inc
cmp
pop
push
or
dec
sub
imulb
outsl
add
pop
mov
sahf
aam
adc
add
xchg
adc
negl
xchg
and
xchg
mov
add
sahf
test
lcall
mov
xchg
aam
xchg
and
and
or
add
nop
cmp
mov
cltd
jl
pop
xchg
xchg
cmp
pop
inc
insb
xchg
pushf
into
jmp
hlt
js
test
mov
xchg
rcl
mov
or
jnp
dec
mov
gs
and
idivb
mov
dec
aaa
add
push
cs
xchg
jno
insl
sub
or
cmp
push
cmp
lcall
pop
and
add
xlat
mov
std
paddusb
push
leave
andb
subb
popf
jae
fidivs
inc
or
aam
jae
lret
jo
mov
pop
fcom
pop
icebp
xor
fwait
mov
adc
push
mov
adc
inc
loope
mov
sbb
pop
mov
movb
dec
mov
mov
loope
jle
jg
loop
cmp
xor
dec
fisttpl
andb
sub
add
pop
or
mov
out
sbb
sub
xchg
pop
inc
push
movsb
push
add
or
mov
sahf
and
xchg
clc
jmp
idivb
cli
push
mov
or
mov
fildl
xchg
mov
xchg
dec
push
cmc
enter
xor
lahf
mov
stos
fmuls
cwtl
cmp
addl
fcompl
cmp
jmp
jne
cmc
xchg
mov
cmpsb
adc
into
sbb
cmpsl
clc
dec
loope
popf
sbb
out
sti
mov
in
push
stc
xlat
jae
xor
push
subb
ret
pop
jmp
repz
xchg
inc
addr16
movsl
ljmp
cmp
pop
or
jb
sub
lcall
cmp
dec
mov
mov
mov
outsb
outsb
mov
or
repnz
jle
and
sbb
xchg
inc
test
divb
ret
test
inc
push
dec
push
and
aas
scas
inc
addr16
mov
scas
xor
mov
hlt
sbb
int
je
fs
mov
test
in
aas
xchg
dec
cmpsl
nop
push
out
call
sahf
sti
imul
sbb
movsb
or
xchg
fmull
loope
aas
jno
cmpb
add
pop
in
mov
pop
push
adcl
xchg
fwait
xlat
dec
cmp
pop
jl
pop
jbe
fs
adcb
cmp
push
pop
adc
sub
jle
pop
mov
push
jmp
loop
push
test
mov
pop
stc
push
push
add
or
movsl
call
roll
and
xchg
je
dec
mov
mov
mov
addr16
sbb
pop
cwtl
dec
loope
stos
mov
stos
movsb
mov
or
into
lods
hlt
cltd
call
fs
or
mov
js
imul
inc
xchg
mov
sbb
jne
inc
int
mov
push
add
repz
scas
dec
xlat
adc
ret
xlat
inc
dec
out
std
mov
sbb
iret
addr16
dec
push
xlat
sbb
push
inc
mov
add
mov
mov
lret
xchg
mov
mov
cmp
or
push
rolb
inc
cs
hlt
jge
pop
push
xor
out
mov
and
in
shrb
adc
cmpb
loope
jmp
dec
iret
and
and
loope
jl
cli
ret
mov
xor
sbb
into
cmp
and
out
cmpsl
ret
lods
sbb
stos
jae
test
add
in
xor
jno
and
data16
orb
nop
jns
mov
mov
cmp
jb
and
rolb
push
out
dec
arpl
xchg
call
call
add
loope
sbb
in
dec
mov
repnz
mov
mov
lds
call
aam
cmp
fisubrl
or
ret
imul
lcall
lret
loopne
sbbb
xor
aam
nop
dec
and
repnz
mov
shll
cmpsl
mov
inc
adc
bnd
and
xor
jne
and
adc
jl
cltd
mov
mov
in
lret
cli
and
out
and
mov
jne
pop
or
sbb
aas
loop
jmp
pop
xor
adc
in
into
cmp
cmp
fwait
mov
pop
sahf
xor
clc
pop
lret
mov
sbbb
mov
or
enter
idivl
mov
mov
sub
sarl
movzwl
inc
inc
adc
mov
incl
aad
out
arpl
sub
stos
mov
pop
push
mov
mov
out
cmp
jl
sub
or
enter
test
mov
pop
mov
pop
aas
add
gs
in
arpl
xchg
or
add
pop
andb
shrb
mov
iret
arpl
cmc
mov
sub
xchg
cs
jp
lock
insb
push
mov
cli
bound
jge
out
sbb
loop
scas
push
jo
cwtl
movb
sarl
sbb
pop
stc
cwtl
xor
out
add
arpl
movsb
push
mov
inc
clc
mov
pop
fldt
pusha
jo
mov
push
xlat
popa
sbbl
ret
scas
cmp
jnp
pop
push
pop
lahf
rcr
xchg
in
add
shlb
or
inc
jnp
sarl
rorb
dec
repnz
sbb
popa
jb
jb
lock
popf
xor
loopne
ret
jo
xor
addl
in
mov
out
jmp
jmp
mov
jl
adc
ja,pt
dec
pusha
or
mov
movsl
sbb
or
push
pop
or
sarb
xchg
lds
jge
pop
push
sub
decb
pushl
pusha
mov
aam
shlb
cli
inc
test
pop
aaa
sub
pop
and
fidivrl
and
xor
es
shrl
lods
mov
sbb
or
sbb
xor
mov
movsb
sbb
iret
jge
and
add
dec
stos
and
std
daa
fs
pop
loopne
pop
jp
icebp
jb
movsb
or
lret
jecxz
push
add
loope
adc
push
int
add
pop
jmp
mov
rol
out
imulb
outsl
inc
xchg
push
or
stos
dec
mov
mov
and
lock
adc
mov
adc
movsb
mov
rcrl
cmpsl
stc
sub
cmp
or
pop
mov
mov
jb
add
test
gs
pushf
sub
nop
outsb
cmp
fidivl
lcall
dec
repz
gs
pushf
lret
lcall
rclb
jp
push
lahf
ret
add
jl
aaa
daa
clc
jge
xchg
mov
mov
pop
inc
mov
jne
xor
cwtl
mov
arpl
or
lcall
mov
decb
dec
imul
pop
lret
lahf
pop
push
cmovo
out
adc
shll
enter
ss
test
repz
daa
lea
inc
shlb
push
cvtpi2ps
gs
pop
add
add
or
xchg
xor
pop
cli
cwtl
mov
xor
sub
xchg
std
fstpl
xchg
xor
ror
iret
je
inc
fwait
repz
mov
inc
std
imul
popf
movsb
je
shlb
insb
or
or
mov
inc
lds
mov
shr
push
lea
test
sarb
fucom
and
ret
adc
lods
leave
insl
clc
pop
jmp
mov
arpl
jo
jae
jmp
setnp
test
push
inc
pop
pusha
icebp
pushf
cmp
cmpsb
pushf
inc
rcll
les
mov
or
or
shll
nop
orl
dec
stc
jnp
mov
jle
ss
sbb
jo
pop
mov
jo
jge
xchg
xor
test
aaa
inc
sub
fidivs
cmp
scas
pop
pop
repnz
stos
mov
popf
dec
xor
pop
xchg
cmc
mov
loope
fwait
mov
add
stos
push
xlat
dec
pop
aam
lea
cltd
pop
mov
and
mov
mov
bound
jge
xor
mov
or
sub
mul
xchg
adc
push
xor
les
inc
ss
lds
mov
pushf
mov
sub
mov
call
daa
aaa
mov
mov
jno
lock
cmp
sti
test
dec
jecxz
mov
outsl
adc
mov
push
jge
cmpl
pop
mov
mov
mov
push
jae
jg
ret
in
int3
sbb
lods
popa
jmp
mov
fstps
out
scas
push
pop
xchg
pop
dec
inc
cmp
lahf
outsl
pop
out
or
popf
lds
jle
cmp
or
fistps
pop
xchg
xor
adc
aaa
and
jne
and
fidivl
nop
movsl
mov
pop
repz
mov
mov
lock
dec
stc
push
les
and
pop
stos
mov
xlat
lods
adcb
cmpsl
lea
notl
pop
icebp
inc
add
stc
add
inc
and
push
in
xchg
outsl
clc
hlt
adc
icebp
daa
cmpsb
icebp
enter
sbb
xchg
jbe
xor
xlat
mov
xor
mov
stos
scas
push
and
jl
jmp
add
fwait
inc
dec
dec
fldcw
xor
mov
and
or
and
mov
xor
dec
arpl
xor
cmp
jnp
xor
pop
cmpsb
lret
sub
push
ljmp
bound
inc
shrl
jne
shrb
and
adc
adc
iret
test
mov
inc
xchg
je
cmp
icebp
adc
inc
or
stc
xchg
icebp
jo
xor
mov
sbbb
mov
sahf
repnz
inc
jno
xor
stc
mov
sub
sub
mov
pop
rcrb
enterw
xor
cmc
sti
rcr
icebp
stc
fildl
mov
ss
push
pop
scas
shll
pop
or
add
idivb
xor
rorl
mov
es
arpl
push
inc
add
cmp
push
push
dec
xchg
push
cwtl
xchg
xchg
inc
into
xor
inc
xor
and
jmp
xor
pop
dec
ss
inc
shll
xor
iret
lea
mov
test
jl
mov
shlb
pop
ljmp
xchg
push
pop
push
jmp
mov
mov
mov
pop
xor
pop
scas
or
and
xchg
fcoml
ret
je
imul
sbb
int3
imul
scas
cmpsl
int
jmp
out
or
addr16
testb
push
xor
adc
xchg
in
xor
fcoms
ss
bound
mov
mov
imul
xchg
pop
push
and
inc
les
mov
pop
fsubr
xchg
mov
sbb
mov
mov
adc
out
fldl
movsl
loop
movd
aam
mov
pop
pop
cmp
icebp
aad
jae
cmp
pop
cmp
aas
xchg
xchg
dec
xor
mov
loopne
cmc
xor
lahf
std
dec
negl
adc
shlb
iret
ret
pop
popa
cmp
fsts
rcl
and
aaa
xchg
mov
std
fcoml
stc
mov
sbbl
inc
ret
int3
gs
sbb
push
mov
xchg
mov
cmp
push
or
in
xchg
push
fimuls
push
pop
mov
loopne
dec
aas
adc
icebp
enter
lcall
setg
fs
fcompl
fldenv
ja
mov
inc
movsl
ret
cmp
and
jle
aas
je
adc
inc
lahf
cmp
pushf
scas
lock
inc
sub
insb
dec
inc
pop
jnp
mov
lods
pop
les
push
pop
adc
sbb
pop
leave
fwait
in
fdivr
jge
xchg
fstps
in
jns
add
push
fisubl
mov
pop
std
es
mov
sbb
cmp
and
push
divl
xchg
insb
xchg
mov
xchg
cmp
xchg
fwait
cltd
push
pop
dec
add
push
insb
xor
pop
ror
das
sbb
pop
test
adc
ja
push
jp
add
push
loope
cmp
call
clc
lea
mov
cltd
jne
push
pusha
or
into
std
mov
je
ret
sbb
add
cmp
jno
inc
push
inc
add
add
jmp
loopne
cmp
and
jge
dec
addr16
cmpsb
in
xor
mov
aas
insb
les
push
push
lcall
xchg
xchg
int
dec
dec
movsl
popf
jns
push
lods
mov
scas
mov
jno
or
pusha
pop
fistl
cmp
push
dec
daa
inc
ja
sbb
cmpsl
jnp
cli
add
xchg
add
push
and
jmp
stos
loope
andl
movsb
fsubs
lcall
in
dec
mov
xor
movsl
mov
xchg
cld
sub
out
movsb
xchg
pop
call
inc
push
std
xchg
push
repz
or
subl
out
sbb
mov
dec
fcompl
into
shll
ljmp
enter
cmp
shlb
or
hlt
mov
push
xlat
and
xchg
or
shll
outsb
cmp
outsb
ljmp
gs
sbb
or
into
lea
xchg
hlt
inc
in
mull
fs
xlat
push
or
xor
cltd
outsl
add
outsb
mov
ds
ljmp
scas
pop
ljmp
push
jge
or
nop
mov
xchg
lret
cwtl
dec
lcall
mov
sbb
push
add
mov
mov
popf
inc
adc
in
sub
mov
movsl
or
cmp
cltd
cmpsl
sti
jmp
jae
insb
pop
mov
lods
xor
notb
mov
mov
pop
sub
icebp
push
jnp
lods
pop
ds
testl
jnp
lret
mov
arpl
sbb
sub
mov
and
icebp
xor
push
mov
in
add
lock
or
insb
sti
sub
jno
xchg
lcall
int3
jle
rorb
movsb
test
xor
xchg
pop
cmp
and
push
lds
repnz
shlb
ljmp
jns
mov
or
or
xchg
jl
imul
orl
jl
sub
push
shlb
xlat
imul
cltd
sbb
mov
or
std
das
xor
scas
stos
ret
add
push
pop
fcoms
cmpsl
in
mov
clc
test
pop
inc
jne
loopne
or
mov
push
or
pop
adc
pop
mov
in
xchg
push
and
push
mov
scas
xchg
mov
dec
xlat
out
orb
faddp
vmptrst
adc
add
imul
push
pop
add
dec
adc
push
test
lret
dec
mov
movsb
insl
dec
mov
ret
int3
mov
mov
mov
dec
adc
insl
inc
out
fs
sahf
dec
jmp
stos
add
ja
pop
xchg
mov
sbb
push
xchg
xchg
aad
mov
pop
repnz
jp
loop
push
push
dec
loopne
pop
shll
xor
cmp
cmp
push
xor
jno
adc
and
jnp
xor
mov
rcll
jg
mov
mov
xor
mov
ljmp
ss
xchg
xorl
mov
pop
stc
int
imul
cmc
or
rcr
pusha
dec
mov
js
xchg
js
iret
sbb
pop
int3
xchg
and
sahf
mov
cmp
pop
ficoml
xlat
clc
xchg
adc
aaa
and
cmpsl
stos
pop
add
mov
and
rcrb
dec
imul
mov
push
and
adc
push
mov
pop
jnp
out
inc
sub
scas
sahf
dec
pop
mov
insb
xchg
cmc
loope
cmp
pop
push
insl
sbb
in
nop
pop
ljmp
icebp
jb
mov
add
inc
lds
push
loope
sub
mov
jo
jno,pt
fcmovnu
jo
add
in
dec
sub
arpl
jmp
sub
sti
repz
cltd
jns
aam
pop
test
pushl
push
adcb
sahf
and
dec
dec
mov
scas
loopne
dec
mov
jnp
adc
mov
jbe
add
sbb
pop
jecxz
enter
sbb
add
sub
in
fldl2t
cmp
gs
hlt
or
and
mov
and
push
int3
aad
std
inc
mov
andb
pop
adc
arpl
jmp
ljmp
xchg
jno
dec
enter
and
icebp
cmpsb
and
jns
data16
xchg
loopne
ret
adc
cmp
fs
add
mov
rcrb
mov
ffree
mov
jae
addr16
cmp
clc
ret
mov
inc
pushf
inc
pop
or
clc
popa
daa
ljmp
mov
popa
add
push
hlt
add
ret
pop
or
mov
lahf
sbb
and
sbb
in
adc
cmpsb
mov
pop
or
popf
sbb
mov
fs
in
shlb
dec
cmc
lret
or
push
lcall
mov
outsb
addb
ljmp
xor
popa
mov
ret
fisubrs
aam
aam
ja
inc
hlt
lods
addb
xchg
and
pop
cmpsb
fisubrs
jae
loop
xchg
out
xor
arpl
jecxz
pop
add
push
gs
out
loopne
push
mov
and
mov
cs
mull
rcrl
pusha
inc
in
add
sahf
xchg
pushf
push
mov
ds
jmp
aas
pop
xchg
dec
enter
mov
test
dec
lock
in
jecxz
mov
or
mov
pop
inc
cmp
out
nop
enter
and
jecxz
pop
mov
clc
mov
fimull
ljmp
mov
xchg
rcrb
ret
xchg
add
mov
dec
rol
jg
inc
dec
jbe
ret
jae
scas
mov
mov
adc
lret
das
leave
inc
cmc
jb
jmp
pop
ja
sarb
pop
add
pushf
fcomps
pop
mov
mov
frstor
int
int3
daa
push
xor
mov
xchg
adc
enter
push
add
mov
adc
inc
call
subl
push
ret
jno
mov
mov
or
neg
negb
add
sahf
fnstenv
movsb
cltd
push
cwtl
mov
cli
imul
and
push
mov
jmp
and
out
cmp
es
test
xor
int
aaa
imul
mov
jbe
cmc
mov
in
test
jnp
push
les
decb
inc
leave
add
lods
lahf
jno
sub
incb
jmp
out
push
jl
inc
adc
dec
or
loope
xor
or
push
sub
lcall
cmp
xchg
es
fisubrl
cmp
jbe
mov
or
sub
in
jb
movl
adc
mov
lods
mov
loop
mov
fmuls
cmp
sarl
in
fildl
jge
mov
test
data16
outsb
pop
pop
es
sub
cmp
sub
xchg
mov
ror
add
mov
xorl
es
pusha
inc
xor
xchg
sub
adc
jmp
repz
pop
cs
push
aaa
lea
dec
push
loope
mov
les
cmp
mov
pop
mov
clc
push
sahf
mov
cmp
mov
aad
sub
push
adc
and
mov
add
insb
cmp
adc
adc
pusha
mov
dec
mov
call
ret
les
fdivrs
in
adc
sub
and
idiv
inc
aad
scas
add
faddl
pusha
push
pop
rolb
push
xchg
or
sbb
jno
out
shll
sbb
out
mov
pop
mov
inc
push
push
ffree
in
mov
into
fnsave
mov
push
rdtsc
add
lahf
xchg
mov
lods
adc
jb
mov
jns
imul
mov
adc
arpl
push
leave
inc
cmp
or
pop
rorl
mov
adc
arpl
push
leave
inc
cmp
or
pop
rorb
mov
adc
arpl
push
enter
sub
jns
imul
int3
test
je
sti
popa
pushf
lods
ss
in
sbb
pop
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
movsl
xor
add
adc
adcb
push
sbb
mov
jne
gs
push
aam
aam
and
xor
add
adc
fs
aad
lds
xor
test
hlt
push
les
mov
movsl
xor
add
adc
fs
aad
lds
push
xchg
gs
cli
jne
push
test
mov
les
in
jno
fidivs
push
std
daa
push
dec
pop
filds
insl
out
cmpl
outsb
js
cmc
je
stc
sub
sub
dec
jmp
cli
andl
jl
test
iret
hlt
call
int3
shll
lahf
lcall
addb
dec
inc
sbb
adc
je
dec
lds
inc
cli
adc
mov
aam
in
lret
adc
js
or
lds
xor
sub
xchg
and
lods
inc
xor
jge
and
sub
jno
aad
jb
pusha
mov
icebp
outsl
imul
inc
sub
movsl
xor
add
adc
fs
aad
lds
and
xchg
jne
gs
push
les
shlb
dec
roll
push
nop
and
and
inc
lods
data16
inc
in
nop
and
xor
rcrl
dec
les
daa
scas
xor
roll
jecxz
movb
das
adc
movsl
shll
insb
mov
in
aad
lds
and
xchg
jne
gs
push
les
mov
movsl
xor
add
adc
fs
aad
lds
and
xchg
jne
gs
push
les
mov
les
imul
and
js
mov
dec
xchg
sbb
xlat
aaa
leave
in
sub
mov
out
pop
jg
jmp
outsb
sbb
inc
negl
test
sahf
leave
sbb
jno
jno
aas
pop
push
mov
mov
cmpsb
mov
and
sub
jmp
sub
sub
filds
test
xlat
mov
jae
ret
xor
jl
sub
shlb
das
cmp
lret
pop
push
jne
pop
mov
xchg
jp
adc
add
adc
pop
fisttps
loop
sub
ret
loopne
inc
sub
lock
and
loopne
mov
cwtl
xor
ljmp
jb
std
inc
xchg
push
xor
pop
movsb
mov
xchg
add
inc
mov
hlt
sub
xor
adc
push
mov
scas
sbb
enter
add
sbb
pushf
inc
dec
enter
call
adc
push
cmp
imul
mul
cmc
mov
or
or
outsb
xor
adc
mov
lret
xchg
mov
bnd
sub
pop
mov
ds
cld
or
add
out
mov
lods
jmp
adc
ja
mov
aad
out
int3
mov
testb
pushf
cs
imul
insl
ljmp
imul
xor
stos
xchg
or
or
xchg
test
sub
push
rolb
je
jb
jmp
fs
loopne
stos
aas
mov
and
jl
sbb
pop
or
insl
inc
aad
out
push
pop
cmc
cld
not
scas
jl
mov
dec
negb
dec
call
in
pop
ret
out
sub
jl
pop
adc
jecxz
and
pop
inc
data16
gs
dec
or
xchg
lea
xchg
je
pop
lods
push
and
push
xchg
push
dec
jmp
in
or
inc
pop
imul
arpl
xchg
stos
jecxz
inc
in
mov
ja
mov
gs
adc
ror
arpl
inc
ss
inc
fwait
xchg
mov
loope
inc
mov
aaa
or
gs
cmp
jp
pop
insl
push
adc
push
mov
fadds
lock
ljmp
cmp
stos
rcrl
cmp
jg
mov
jnp
mov
push
mov
mov
push
and
xor
fdivrp
jno
pop
insb
imul
fdivl
test
adc
lds
pusha
and
stc
ds
imul
pop
test
outsb
push
pop
scas
jnp
das
add
mov
aaa
daa
fcoml
mov
xor
sbb
lea
mov
clc
cs
lock
push
push
pop
js
add
push
sbb
mov
dec
clc
outsb
adc
mov
int3
lods
outsl
fcmovne
fists
pop
les
pop
aaa
in
mov
xor
jp
add
push
jl
jle
sti
push
int
sbb
in
sub
add
jp
loopne
mov
in
pop
xorl
pop
or
jnp
repnz
jl
mov
mov
xor
inc
lea
bound
popf
mov
pop
loopne
mov
push
mov
test
mov
outsb
cmp
push
decb
outsb
xchg
rclb
xchg
adc
push
mov
or
adc
add
push
inc
lret
pop
add
std
call
test
loop
test
push
cmp
cmp
xchg
test
jno
inc
mov
aas
imul
fadd
inc
xor
ror
lret
xchg
mov
lahf
jg
inc
mov
std
inc
push
sbb
je
xor
lcall
cwtl
cmp
push
adc
jl
pushf
inc
stos
xor
loope
aad
inc
in
jl
dec
mov
jnp
xchg
inc
shll
mov
popa
filds
popa
xchg
cmpsb
orb
sti
sub
dec
and
adc
jbe
incb
mov
push
fisttpl
sbb
enter
leave
xor
clc
push
cmp
sbb
cli
dec
dec
lret
jmp
mov
inc
scas
jp
inc
test
adc
mov
adcb
add
sbb
cwtl
cld
xor
shlb
push
jp
cmp
xor
cli
in
push
mov
pop
hlt
dec
pop
xchg
mov
mov
jo
call
fstps
fwait
int
lcall
xchg
sub
arpl
dec
nop
mov
dec
pop
ret
or
xor
sub
lahf
jge
push
aad
dec
int3
sti
test
fisubrl
mov
sarb
sbb
mov
adc
cmpsb
inc
xlat
cmc
icebp
aam
ret
and
jns
sahf
mov
rcrb
adc
das
scas
cmc
xor
or
jae
pusha
mov
rsm
pop
int
ret
push
inc
push
ret
cwtl
push
icebp
cs
sbb
push
fcomip
bound
or
ds
and
adc
sub
push
sbb
sub
aas
outsl
cmp
xor
push
jnp
push
xchg
popa
nop
scas
ds
into
lock
int3
daa
repz
lock
sbb
in
sub
addr16
test
ja
repnz
hlt
mov
fildl
out
das
sti
shll
pop
out
and
xchg
sub
dec
test
xchg
insb
out
mov
fstps
cmp
jno
imul
divb
add
lock
out
icebp
daa
mov
loop
sub
andb
inc
rolb
ss
jns
xchg
fwait
jnp
mov
cmpsl
dec
dec
mov
push
adc
inc
push
pop
xchg
cmp
pop
xchg
cmp
push
arpl
and
push
cmp
mov
cmp
js
mov
jb
loop
pop
testb
mov
icebp
fs
notb
sub
jl
outsl
mov
cltd
xchg
adc
or
cmp
cmp
std
int
pop
mov
dec
js
add
push
adc
or
push
or
cli
sub
movb
jp
into
inc
nop
mov
fcomps
movsl
pop
add
mov
mov
decb
adc
fnstsw
mov
jnp
xor
sbb
adc
out
add
jnp
das
out
pop
and
push
lret
push
ss
or
dec
pop
sub
sbb
pop
imul
mov
mov
pop
in
xor
jmp
sub
dec
les
icebp
xor
xor
popf
out
lods
add
popa
lods
aad
mov
sub
mov
ret
scas
jo
addr16
pop
imul
testl
sahf
fwait
movsb
fiaddl
lods
dec
mulb
pusha
out
test
mov
call
lds
xlat
or
fstpt
xchg
popf
xor
in
inc
aad
jl
mov
push
push
xor
xchg
mov
in
fisubl
js
hlt
push
push
addr16
or
lods
adc
and
inc
cltd
aaa
and
cmp
imul
ss
sub
sub
inc
sahf
in
lods
sub
ret
jge
jnp
stos
mov
mov
aas
push
add
incb
clc
jno
push
fsubl
fs
push
pop
movsb
out
mov
xchg
popf
fsubs
adc
ss
push
mov
fsubrs
lahf
or
addl
adc
lea
dec
mov
mov
cmpsl
clc
lods
ret
xor
mov
add
in
cmp
and
lods
repnz
pop
aam
xor
cmpsl
fwait
mov
insl
lret
fsubl
pop
xor
fcoms
lret
push
push
push
xor
aam
jle
lret
sbb
aaa
cmp
xchg
pop
mov
sub
pop
mov
mov
inc
and
fsubl
mov
imul
dec
int3
pop
cmpsb
push
cmp
push
fstps
pop
dec
in
cmpsl
sarb
ja
lahf
and
mov
jns
jno
adc
xchg
jae
bound
dec
repnz
or
add
push
adc
xchg
jns
in
movsl
dec
js
stos
iret
and
add
scas
and
lret
ljmp
and
cs
mov
xchg
xor
cwtl
iret
mov
push
dec
jo
jge
jns
icebp
sarb
jno
jge
mov
push
xlat
sbb
jge
cmpsl
inc
mov
dec
add
gs
popa
cmp
outsl
sub
call
xor
test
gs
inc
fisubrs
mov
pop
cmc
adc
or
inc
orl
jo
lret
xor
add
sbb
sub
mov
test
adc
xor
icebp
adc
adc
mov
xor
ds
ret
out
clc
or
push
lret
or
test
sbb
ljmp
mov
add
mov
jae
mov
sbb
mov
mov
inc
add
xor
mov
lahf
mov
push
xor
pop
mov
mov
cltd
dec
inc
push
jbe
int3
mov
mov
mov
fadds
jnp
inc
mov
xor
outsl
les
push
fists
mov
and
cmp
dec
pop
sbb
push
fmull
aam
push
jl
incl
int3
inc
mov
or
arpl
mov
mov
cmp
iret
dec
push
loopne
mov
icebp
das
or
sbb
inc
cmp
imul
out
fwait
les
jp
lret
jns
xchg
mov
repnz
sub
or
push
mov
je
jp
aas
loopne
and
mov
enter
in
subl
lret
and
loop
adc
jl
lret
scas
cmp
lods
mov
cs
push
mov
jge
fs
or
ss
dec
dec
xorb
roll
repnz
mov
dec
inc
cmpsl
addr16
cli
xor
ss
jae
cld
sar
mov
and
push
int3
pop
scas
dec
ds
xchg
cmc
shrl
mov
lret
call
out
pop
xchg
frstor
pop
xor
mov
out
dec
or
repnz
mov
arpl
aad
insl
cmp
or
pop
cmp
loope
sbb
popl
add
hlt
mov
dec
repz
shr
jnp
pop
subl
movsb
stos
xor
add
push
jne
cltd
add
push
dec
in
into
push
movsl
outsb
pop
das
fmul
mov
aaa
mov
jno
fsubr
lods
or
clc
and
cs
dec
movsl
jns
iret
jg
mov
adc
repnz
ret
mov
arpl
lods
pop
adc
push
pop
movsb
adc
pop
loop
jno
imul
mov
push
jg
jnp
push
dec
enter
add
sbb
cmp
shll
mov
cmp
scas
fmul
repnz
xchg
stos
pop
mov
jns
arpl
test
add
mov
mov
movsb
hlt
rcrl
push
pop
fs
and
loopne
scas
sub
and
jnp
add
mov
pop
mov
add
xor
push
mov
test
and
jns
xchg
es
xor
lret
xchg
xor
and
and
nop
std
cmp
push
out
or
cmc
loope
cmp
call
xor
cli
scas
fdivr
and
pop
scas
aaa
jo
dec
in
imul
push
ja
mov
jmp
jge
jp
js
xchg
jb
mov
movhlps
loope
inc
stos
and
popf
and
lcall
cmp
mov
call
or
jl
nop
push
ljmp
repz
idivl
cmc
xchg
rcrl
push
aam
gs
cmp
add
pop
sahf
jbe
stc
mov
shrb
pop
outsl
mov
mov
icebp
int
pop
adc
xor
dec
sub
test
leave
pop
enter
nop
outsb
ds
jb
scas
movsb
push
add
push
xchg
rcl
fwait
lods
jge
std
pushf
js
daa
lret
add
fisttpll
xor
jle
ret
dec
lds
cli
cmp
mov
xorb
mov
adcb
adc
sarb
add
shlb
mov
push
movsb
imul
outsb
out
or
adc
daa
call
mov
mov
pushf
js
dec
pusha
mov
je
mov
add
sbb
dec
xchg
mov
mov
pop
ss
shll
cmp
xchg
insl
adc
mov
mov
jge
rcrl
addr16
scas
mov
or
mov
jns
into
gs
sti
jecxz
scas
not
mov
iret
pop
daa
out
rcrl
sbb
scas
sahf
add
ds
jp
jp
push
hlt
inc
push
mov
icebp
jns
icebp
dec
push
dec
mov
sahf
lret
aam
sbb
mov
add
jg
movsl
sar
xor
dec
loop
or
or
adc
inc
test
out
pop
ficompl
push
lods
aam
bound
jl
jb
pop
addr16
xlat
stc
add
cmp
xrelease
addr16
adc
ss
jns
pop
scas
sbb
mov
inc
nop
hlt
insl
movsb
cmp
lcall
insl
pop
subb
stos
lock
cmp
add
loope
push
jnp
jge
inc
out
cltd
in
js
push
sub
push
sbb
cmp
movsb
ret
push
mov
ret
adc
mov
adc
sbb
shrl
dec
adc
call
loop
mov
gs
aam
rol
ret
mov
mov
addb
fists
enter
cmpsl
js
or
xor
xchg
push
out
jecxz
cmp
je
or
push
js
mov
andb
pop
and
mov
jnp
pop
add
lret
inc
ljmp
or
test
and
sbb
xchg
sbb
adc
movsl
push
lret
pop
push
adc
int3
sti
scas
inc
repz
pop
enter
add
or
adcl
mov
ss
and
sbb
lods
push
lds
xor
jp
psllw
mov
mov
lcall
lds
pop
movsb
xor
dec
pop
sub
das
sub
enter
fisubl
push
mov
or
cmpsb
lret
inc
add
xchg
push
js
xor
push
dec
sahf
ret
popa
rorl
adc
addl
pop
jo
lods
in
cmp
inc
mov
xor
sub
push
adc
or
imulb
shrb
mov
lcall
fcoml
in
scas
test
addr16
sub
scas
and
push
les
fdivp
test
jae
sub
mov
sti
dec
int3
cmp
mov
add
mov
mov
repnz
mov
insl
jmp
xchg
mov
loope
jge
jl
mov
fsubrs
mov
add
sbb
mov
add
xor
sbb
jbe
ficoml
and
mov
pop
mov
shlb
ficoml
test
punpckhdq
or
or
mov
push
mov
imul
outsl
rclb
and
adcl
shl
cmp
fsubl
test
in
jbe
dec
jno
test
mov
popa
jmp
inc
push
jnp
pop
mov
mov
fcomps
shll
dec
sbb
cmp
cmp
out
dec
ljmp
pop
push
push
sub
cs
cmp
mov
mov
vpshufd
push
mov
push
inc
xchg
lock
popf
inc
add
mov
int
lcall
test
mov
jae
lret
sahf
xor
sub
mov
xchg
inc
cmc
ffree
push
dec
jo
mov
leave
mov
cmp
ja
in
sub
xor
sub
lods
jg
mov
test
or
int3
rcrl
dec
sti
or
in
mov
xchg
add
stos
pop
or
rcrl
mov
bswap
sbb
test
add
ss
push
or
cld
sbbl
scas
shlb
jg
mov
mov
xlat
aam
push
mov
hlt
xchg
movsl
push
movl
xor
dec
test
pop
into
push
push
rorb
mov
xor
fsubs
dec
xor
in
push
and
cmpsb
dec
cmp
popa
push
dec
pop
ret
mov
mov
add
out
inc
fnstsw
fwait
mov
aas
cmp
rcl
pop
fs
mov
xchg
loopne
mov
in
movsl
lret
js
xlat
mov
aad
loope
jl
mov
in
push
shll
xchg
hlt
out
sbb
xadd
jnp
insb
mov
stos
roll
sbb
xor
inc
or
stos
xor
cwtl
ds
push
mov
pop
sti
xchg
jbe
fiadds
cwtl
scas
inc
jno
xchg
loope
cmp
insb
lret
sub
jne
xorb
cmp
dec
enter
std
ret
hlt
cld
pusha
or
adc
pop
pushf
pop
enter
mov
jp
sub
jns
lods
cmpb
adc
test
popa
adc
lea
xor
add
dec
pop
mov
mov
in
pop
out
mov
mov
jbe
notl
add
out
sub
lret
mov
rcr
sbb
pop
fsubrp
sub
pop
fistpl
daa
aam
pop
jmp
inc
shrl
dec
cmpsl
push
mov
xor
out
jne
cmp
aam
jmp
push
scas
cli
pop
xor
das
popf
mov
sarb
lahf
xchg
mov
cwtl
dec
add
or
bound
adc
jl
pushf
sub
test
mov
sub
pusha
sub
push
ficompl
add
fnstsw
dec
mov
xor
pusha
add
xchg
pusha
imul
pop
repz
hlt
in
xchg
or
negl
js
push
pop
mov
mov
sbb
inc
int3
ljmp
push
mov
push
jne
test
data16
loopne
popa
pop
in
mov
cld
sti
xor
aad
cmp
adc
fidivl
pop
sub
jge
mov
jbe
xchg
pushf
sahf
cltd
leave
fmull
push
jne
adc
nop
inc
jbe
mov
xchg
mov
mov
jp
icebp
and
sbb
out
jle
fucomi
fdiv
mov
xchg
push
xchg
sub
xor
or
adc
gs
fs
decl
mov
jmp
xorl
sub
fwait
push
add
inc
sub
add
lret
xor
cmp
jbe
ljmp
adc
aaa
push
push
jnp
sub
addr16
lods
xchg
inc
jg
add
stos
xlat
and
add
or
mov
popa
inc
jp
dec
test
test
rclb
push
jb
ljmp
mov
push
sub
mov
pusha
mov
mov
push
inc
sub
xor
cs
mov
dec
xor
inc
inc
xor
or
dec
cmp
mov
or
dec
data16
jno
xor
in
jns
xchg
out
dec
es
jns
test
mov
add
shll
jne
daa
sbb
loopne
fstpl
jg
repz
shll
icebp
dec
jl
ficompl
fisttps
jecxz
push
mov
stos
mov
pop
imul
mov
mov
sahf
hlt
adc
jmp
inc
in
sbb
xor
dec
cmc
jp
xor
xchg
push
sbb
jns
aam
aam
js
sbb
push
pop
mov
int3
inc
add
ljmp
jb
lds
cs
inc
sbb
sbb
shrl
push
enter
test
clc
sbb
adc
add
dec
addl
rcr
and
adc
aam
and
sub
lcall
cmp
movsb
pop
xor
sub
inc
add
fwait
jl
jl
aad
andl
int
std
lock
pop
cmp
push
in
test
lret
sar
rcll
sbb
or
xchg
inc
add
xchg
ret
lret
mov
dec
mov
pop
xor
test
mov
dec
sub
divb
lret
jp
lods
pop
das
mov
ja
shl
mov
mov
or
cs
cltd
out
cmp
leave
icebp
hlt
cwtl
shr
leave
or
pop
repz
repnz
lds
leave
mov
iret
lret
popa
dec
lcall
mov
cmc
xor
js
popf
in
sbb
xchg
cmp
cmp
in
pop
test
pusha
add
fwait
pop
add
dec
push
jne
out
aam
jo
jmp
cmp
jmp
cmp
cmp
gs
cwtl
pop
aaa
scas
addr16
outsl
lcall
push
callw
outsl
repnz
imul
outsb
in
dec
xor
add
ret
adc
lods
jmp
stos
add
adc
fs
aad
lds
and
xchg
jne
gs
push
les
mov
movsl
xor
add
adc
fs
aad
lds
and
xchg
jne
gs
push
les
mov
movsl
xor
add
adc
fs
aad
lds
and
xchg
jne
gs
push
les
mov
movsl
xor
add
adc
fs
push
inc
inc
xchg
lret
push
mov
insb
in
or
inc
mov
jbe
dec
mov
push
mov
insl
mov
or
cmp
push
cmpsb
pop
mov
inc
mov
jbe
push
clc
push
enter
and
cmp
insb
out
imulb
jns
dec
cmpsb
pop
mov
inc
mov
jbe
push
loope
shlb
iret
ss
xor
fs
insb
xchg
inc
shlb
mov
jbe
es
sti
lods
and
shrl
mov
test
test
xor
repz
push
pop
xchg
cmp
adc
mov
sub
repz
pop
movsb
cmpsb
aad
and
or
jo
push
stc
xchg
fcmovbe
shlb
pop
pop
mov
cmp
push
js
test
push
movsl
in
pop
and
sbb
push
sub
bound
xchg
push
dec
xor
shll
in
sti
mov
dec
enter
lcall
jns
lds
mov
ss
pop
jae
sub
repz
xlat
movl
test
pop
mov
mov
jbe
push
loop
enter
xor
and
adc
add
jo
pusha
xchg
dec
cmpsb
inc
inc
fstl
in
data16
jbe
arpl
bound
xlat
jp
jbe
add
sbb
sub
and
jbe
push
pop
movsb
dec
popf
push
sub
insl
xchg
or
lock
fld
add
adc
fdivs
sub
cmp
or
sbb
push
cmpsb
pop
mov
inc
mov
jbe
push
clc
push
enter
sub
cmp
or
sbb
push
cmpsb
pop
mov
inc
jnp
rorl
outsl
gs
or
mov
sub
ret
or
mov
test
stos
pop
out
test
sub
repnz
jmp
movsl
sti
mov
pushf
xor
lods
shrb
xor
lock
mov
sub
lods
push
shll
pushf
icebp
in
mov
cmpsb
and
mov
xor
push
imul
sub
or
push
push
ret
dec
nop
movsb
and
and
sbb
idiv
add
or
pop
mov
dec
jg
inc
jmp
clc
push
sub
push
pop
bound
xchg
pop
xchg
cs
bound
movsl
and
or
jge
lods
test
imul
fcmovnb
stos
popa
lret
orl
sub
repnz
push
push
xor
sub
in
inc
xor
loop
mov
mov
in
jle
mov
inc
mov
int
inc
shl
mov
pop
add
outsb
cmp
or
xor
cmc
loopne
cltd
pop
into
fs
and
mov
or
push
rcrb
mov
mov
inc
sbb
adc
nop
repz
lods
mov
xchg
rcr
lcall
jns
cld
leave
sbb
scas
dec
jne
out
movsl
aaa
xchg
xchg
cwtl
sbb
push
dec
sbb
inc
dec
sub
push
fldt
push
xorb
pusha
adc
lods
out
mov
push
das
mov
dec
ficomps
fwait
jl
lret
cwtl
ja
mov
push
stos
sub
rorb
jg
pop
ss
addr16
sbb
pop
inc
push
fidivrs
cltd
test
push
stc
and
cmp
in
pop
out
insb
xor
fcompl
mov
in
inc
mov
out
xchg
push
lret
repz
ja
mov
mov
std
movsb
xor
movsb
add
pop
in
and
dec
inc
sar
sub
call
lock
xor
fwait
mov
dec
in
lock
jg
or
pushf
dec
add
popa
dec
gs
int3
push
adc
test
gs
sbb
ret
test
mov
orb
leave
out
ss
out
mov
rcrb
dec
mov
cwtl
arpl
clc
pushf
sbb
mov
clc
pusha
ljmp
push
fwait
xorl
movsl
cmp
aas
cld
xchg
cmc
jno
movsl
leave
stos
jo
lods
jp
mov
aad
mov
and
rcrl
ret
ss
push
sbb
cmpsl
mov
mov
fists
inc
adc
test
or
sbb
sub
jne
int3
xor
xlat
jnp
and
sbb
pop
and
popa
ja
pop
sbb
xor
sub
jecxz
adc
cmp
adcb
test
add
xchg
sbb
mov
adcl
shrb
lock
fstl
dec
fadds
adc
pop
dec
mov
insb
lods
dec
lret
adc
dec
sbb
cmpsl
test
insb
fwait
lahf
jl
sub
xchg
and
fwait
call
and
push
xchg
mov
xlat
inc
test
int
shl
test
out
outsb
adc
dec
add
subb
inc
xchg
das
jg
idivl
cmp
push
adc
seta
pop
arpl
fisubrs
xchg
jae
out
shll
insl
popf
andb
outsl
shrl
scas
push
push
jbe
cmpsb
shll
pop
enter
setne
arpl
sbb
lret
and
fdivr
fstpl
ret
xchg
dec
pop
sbb
clc
out
xchg
mov
jae
mov
shl
movsl
mov
mov
sub
enter
dec
int3
jge
fbstp
xchg
movsl
mov
mov
stos
out
jae
sbb
mov
out
mov
fcmovnb
cmc
mov
mov
pop
jle
xlat
ljmp
jnp
mov
data16
arpl
inc
ds
mov
add
stos
push
or
adc
dec
dec
pop
sarb
pusha
fidivrl
test
fisttpl
sub
es
push
mov
bound
pop
and
sahf
dec
jmp
cld
loope
pop
xchg
sub
repnz
inc
push
pusha
test
lock
jne
push
outsb
push
pop
xchg
cmpsb
pop
mov
cmp
xor
xor
leave
rcrl
dec
inc
je
sub
mov
ja
mov
gs
pop
cs
sub
rcrl
push
fs
mov
dec
jmp
xor
movsb
mov
and
data16
mov
xorl
insl
das
les
jle
les
arpl
xchg
imul
sahf
pop
pop
pop
jle
and
mov
cmp
fcomi
xchg
int3
stos
xor
pusha
cmpsb
mov
fsubs
rcrl
xchg
jg
repnz
sbb
enter
insl
leave
ficompl
inc
sti
dec
aas
insl
add
inc
mov
out
push
aaa
dec
popl
stos
in
std
cltd
and
repz
pop
movsl
jecxz
fisttps
inc
je
rcrl
pop
movsb
fidivs
xchg
out
xorb
das
cmp
xchg
dec
jae
movsb
adc
pop
xor
in
lret
xchg
pop
push
addr16
mov
push
push
fsubrs
test
lret
and
mov
adc
icebp
add
jge
xchg
lret
inc
mov
test
daa
inc
adc
hlt
jnp
stos
pop
cmpsl
xlat
divb
mov
mov
push
cli
dec
fildl
sub
xor
sahf
push
pop
inc
add
jmp
jmp
repz
and
mov
lods
cmp
adc
cmpsl
addr16
sbb
les
add
jno
jle
cmp
aad
mov
add
xchg
es
mov
in
mov
push
std
push
test
inc
bound
icebp
mov
popa
and
jb
jns
repz
fistl
jg
add
ret
and
aam
pop
adc
mov
inc
mov
jno
repnz
int3
and
fs
pop
add
mov
cmpxchg
jno
add
push
popa
or
mov
iret
sub
adc
jmp
fistl
cmp
mov
mov
icebp
add
dec
dec
enter
push
push
sub
inc
rcll
add
mov
or
and
xor
fnstsw
ja
push
subl
lcall
test
jecxz
pop
fadds
insl
sub
sbb
aas
or
std
adc
test
xchg
mov
adc
or
in
movsl
aad
adc
out
dec
cmp
push
lods
add
stc
pop
fsubs
adcb
or
sahf
roll
adc
data16
in
loop
lret
cs
mov
cwtl
aam
cmp
cld
repz
adc
pop
test
ds
fstpt
stos
test
or
aas
mov
out
repnz
orb
xlat
sahf
push
inc
pop
cmpsl
mov
mov
cvtps2pd
pop
add
pusha
jb
xor
jae
popf
jns
sub
pushf
mov
imul
rcrb
sbb
repz
xchg
xchg
frstor
jbe
sub
fsub
decl
cmpsl
fmul
inc
insl
popf
movsb
fsts
ret
cld
fsubrs
lret
inc
pop
outsb
insl
push
sub
test
jecxz
cmc
pop
jnp
dec
out
and
inc
test
in
mov
sbb
cs
outsl
outsl
arpl
xorb
mov
adc
add
movsb
cmp
jbe
or
mov
ret
lea
add
push
or
pop
out
jp
imul
imull
fs
mov
cmpsb
lcall
or
add
or
jmp
dec
or
lret
movsl
inc
adc
sar
nop
cmp
dec
loope
dec
loop
sub
pop
divl
into
cmp
cmp
and
daa
pop
fisubrs
sub
dec
jne
addr16
and
cld
jne
adc
movq
fistpl
sub
ljmp
jecxz
cs
inc
imul
clc
mov
push
test
jne
and
clc
popa
lret
mov
jecxz
popf
cmp
stos
mov
rorl
push
push
mov
test
dec
test
dec
lods
mov
call
and
fdivrs
mov
mov
mov
cs
pop
gs
fistl
das
or
adc
sahf
xor
rcrl
je
xchg
daa
outsb
add
pop
jmp
fisubl
dec
dec
or
pop
push
cmpsb
inc
bound
ljmp
xor
in
imul
leave
cld
lods
nop
xor
es
mov
and
divb
vsqrtps
pushf
xchg
push
cmp
out
xchg
jmp
pusha
adc
mov
dec
fs
outsl
fists
icebp
pop
mov
mov
add
bound
pop
ds
jb
cmp
adc
inc
xor
push
cwtl
mov
xlat
and
gs
pop
cltd
in
cld
daa
in
int3
loope
sub
cmp
xchg
das
dec
icebp
cmp
push
pop
movsl
sbb
or
pushf
bound
sti
jp
bound
pop
les
cmp
int
sub
dec
push
jb
inc
stc
inc
fnstenv
adc
push
lods
mov
add
adc
test
sahf
add
inc
adcb
jo
mov
and
mov
hlt
xchg
loop
aas
fs
ret
sti
or
adc
popa
lret
cs
jp
jns
xor
cmp
jp
inc
push
cs
inc
adc
sti
jp
add
sbb
call
dec
sahf
jne
aam
adc
cmp
and
cmp
push
mov
enter
mov
push
test
mov
fimuls
xchg
das
ror
andb
sahf
and
jno
sbb
inc
sub
push
subb
rol
mov
and
jmp
mov
push
adc
je
lret
fcom
jecxz
imul
out
fistps
push
into
fcmovu
jae
jnp
or
cmp
mov
or
jno
cmp
push
inc
popa
inc
mov
mov
pop
mov
push
dec
sub
cmp
andl
mov
out
in
jno
fistl
cmp
test
add
mov
pop
xchg
lcall
cmp
dec
mov
roll
jo
push
push
je
faddl
aaa
testl
inc
xor
mov
arpl
sub
je
lds
pop
ljmp
push
cmc
pushl
std
mov
push
sub
call
movsb
vcvtps2dq
loop
sub
adc
pop
iret
jbe
push
xchg
in
mov
mov
loope
cld
sub
pop
fldcw
xor
jl
xor
fdivrs
out
roll
xor
pop
jb
mov
xor
jl
mov
out
push
inc
adc
sbb
lds
fisubrs
or
movsb
pop
in
loop
popa
jno
test
mov
arpl
sbb
les
leave
rcl
mov
xchg
xor
mov
lods
push
push
cli
xor
xchg
dec
or
dec
or
adc
or
push
dec
movsl
sbb
xchg
ds
js
mov
sbb
shll
mov
mov
jns
push
sarb
mov
adc
add
and
jl
xchg
dec
or
movd
mov
insl
pop
inc
and
inc
jle
mov
mov
mov
xchg
mull
lret
shl
jp
cltd
adc
jecxz
pushf
cld
sbb
jne
cmp
or
and
inc
xchg
scas
fs
shl
pop
jo
xor
push
push
faddl
push
int3
jle
sbb
dec
pop
in
mov
xchg
ficoml
and
adc
mov
in
dec
inc
mov
xchg
addr16
push
cwtl
lods
jae
fs
fsts
aad
fimull
mov
add
mov
dec
adc
insb
dec
jle
jp
add
adc
mov
nop
lret
dec
cmc
or
mov
push
xchg
inc
ret
mov
lcall
jge
aaa
cmp
shlb
jb
inc
push
outsl
mov
lret
xchg
pop
mov
push
xchg
neg
ja
pop
mov
dec
stos
cltd
or
cmp
mov
lods
ss
movsb
out
ja
and
mov
lods
aaa
push
ja
stos
or
decl
cmp
pop
cmp
cmp
mov
cmp
jo
sub
pop
daa
addb
std
xchg
xchg
imul
ret
pop
xor
mov
dec
test
xor
aas
fldl
xchg
loopne
jo
fadds
mov
sub
mov
std
pushf
shl
xor
leave
pushf
sar
jmp
lahf
stos
in
dec
push
les
bound
leave
mov
mov
divl
xor
shrl
sahf
outsb
push
mov
sub
mov
outsb
ljmp
daa
loope
and
adc
inc
jmp
jp
stos
cs
scas
adc
mov
or
lea
jg
int3
jnp
xchg
incl
jne
adc
mov
xor
test
fwait
jne
add
clc
je
sbb
nop
xchg
movsl
mov
lods
clc
sbb
clc
pop
int
lods
inc
shrl
outsl
sbb
jae
movsl
mov
rcrb
dec
cmp
das
movsl
mov
in
rcll
sbb
jns
sbb
pop
jns
ret
rorb
push
jnp
xchg
cmc
das
outsl
push
inc
fisubs
mov
aam
mov
and
loop
fldl
movsl
andl
test
cmpsb
add
fwait
mov
sti
push
loopne
adc
fcmovne
jns
mov
cltd
daa
jmp
mov
xor
adcl
addr16
test
dec
push
ret
jle
lock
popf
dec
jle
push
lahf
and
lods
loop
sub
mov
adc
out
sbb
push
cld
mov
stos
mov
pop
outsb
sti
dec
adc
push
jno
cmp
in
pop
jle
ds
adc
mov
xor
mov
shll
aam
clc
add
mov
cmp
testl
fs
aaa
icebp
lea
pop
or
mov
xchg
repnz
mov
sbb
fistpll
lods
stc
lods
ret
clc
or
fdivrp
call
pop
xlat
cmp
repnz
leave
push
xlat
push
dec
push
loope
adc
ret
mov
in
lea
stos
in
and
test
add
shlb
push
add
cmpsl
sbb
sbb
pushw
das
xchg
mov
sub
add
nop
fmuls
or
mov
sub
xlat
sbb
sbb
arpl
fwait
sbb
sti
je
adc
jns
test
loopne
cltd
aad
subb
inc
jae
adc
adc
daa
add
mov
lea
jecxz
cwtl
fwait
lds
add
iret
sbb
lods
or
jle
icebp
push
inc
lcall
mov
in
mov
jmp
mov
sub
and
pop
pusha
jo
push
cmpsl
in
loop
sbb
push
ds
cmp
aad
inc
sarb
xchg
jae
out
or
jge
pusha
adc
sahf
fsubl
orl
mov
or
mov
in
jmp
int
mov
dec
adc
lret
add
imul
mov
rcr
xor
inc
adc
cmp
add
imul
out
or
loop
sbb
sahf
aam
inc
jp
inc
push
adc
fwait
test
int
pop
inc
loop
loope
imul
ljmp
push
into
and
or
ret
arpl
ds
call
cmc
pop
add
ret
in
xchg
gs
pushf
lods
mov
pop
repz
in
cmp
push
mov
ret
call
dec
notb
hlt
sbb
adc
ja
jmp
jns
ss
aam
fstpt
dec
add
std
sub
cmp
pop
stc
cmp
addr16
xchg
or
lahf
ss
jae
lcall
xchg
imul
add
mov
subl
or
ret
out
adc
pop
push
push
addl
frstor
scas
ja
aas
sahf
nop
pop
lret
add
mov
mov
mov
aad
xor
inc
loopne
mov
dec
pop
dec
inc
jno
xchg
lret
push
imul
fadds
rol
jns
lret
xor
or
xchg
test
xor
ljmp
sbbl
out
out
mov
xchg
ret
in
push
push
xlat
stc
mov
add
js
jge
inc
sarb
sarl
or
sarl
fdivr
ror
test
bnd
adc
jge
pop
mov
pop
in
sub
and
jne
sbb
pop
cmp
cmp
cmpsl
dec
in
sub
cmp
arpl
scas
push
dec
enter
push
stc
sarl
sbb
addr16
or
test
loopne
fisttps
jmp
jg
fwait
xlat
xor
in
jo
stc
mov
inc
enter
pop
popf
loopne
std
push
mov
into
inc
aam
out
pop
add
lahf
xchg
pop
jmp
cmp
push
and
fsubl
outsl
aas
mov
jne
push
pop
and
or
cmp
sub
stos
xchg
sbb
xorb
push
jo
sub
sub
and
dec
xorb
les
adc
xor
push
xchg
in
jns
dec
test
xor
mov
cmc
jne
xchg
mov
cli
xor
mov
xchg
inc
jns
pushf
jmp
mov
xchg
loope
les
adc
mov
mov
repnz
xor
lds
lea
push
jecxz
pop
sti
adc
fstpt
ja
adc
popf
cmp
fwait
fs
iret
xchg
jge
xlat
mov
mov
outsl
inc
scas
fs
clc
mov
std
pop
hlt
xlat
mov
subl
or
adc
int
mov
xor
mov
and
xchg
daa
loopne
roll
cmp
out
push
or
sbb
test
sub
shl
inc
xor
xchg
shll
jb
adc
dec
rcl
ret
xor
fisubl
shrl
inc
pop
fimuls
and
pop
movsb
xor
out
ds
movsl
jns
ficoms
dec
dec
outsb
cmp
mov
in
mov
ds
ds
fwait
ret
sub
jle
movsb
mov
in
orb
add
loop
in
out
mov
clc
mov
push
std
sbb
or
dec
mov
orl
push
mov
pop
push
or
cwtl
adc
out
stc
cmp
mov
and
pop
subb
sbb
adc
xchg
daa
push
dec
enter
cmp
addl
arpl
aad
inc
ret
xchg
je
mov
mov
xchg
hlt
test
daa
hlt
out
inc
xchg
lods
sub
fsts
xchg
shl
mov
push
mov
dec
dec
in
stos
push
inc
xor
jg
jp
xor
jl
sbb
and
add
icebp
in
inc
lock
movsb
sarb
fcoms
xchg
adc
inc
push
loop
lret
stos
das
mov
jge
stos
fisubrs
mov
adc
jge
fildll
hlt
loope
ja,pt
dec
sbb
push
dec
test
add
dec
mov
push
pop
sbb
leave
inc
lret
dec
jns
push
fisubl
icebp
mov
mov
xchg
mov
mov
call
in
or
outsl
adcl
xor
loope
jb
mov
or
add
and
call
std
inc
popa
dec
into
mov
push
test
xchg
je
test
pop
test
xor
xchg
stc
mov
hlt
rcr
cmp
xchg
jns
fbld
inc
xchg
cmp
movsl
out
lods
xchg
out
testl
daa
sbb
incb
lock
mov
out
shr
add
or
mov
scas
mov
jo
push
adc
ret
pop
inc
fcomp
jmp
inc
xchg
cmpl
xor
mov
ret
jns
sub
mov
aaa
push
add
sub
sub
inc
dec
scas
stos
xorl
imul
loope
int
cmp
mov
lods
push
or
popa
dec
aad
es
mov
sbb
mov
mov
adc
cmc
in
pop
faddp
bound
shl
mov
adc
stos
and
fcmovu
data16
fstps
adc
aad
sub
dec
mov
addb
dec
dec
mov
mulb
and
pop
ja
cs
add
inc
dec
xor
dec
scas
pop
icebp
lcall
imull
pop
xchg
insb
mov
call
cwtl
jbe
push
clc
push
enter
sub
cmp
or
sbb
push
cmpsb
pop
mov
inc
mov
jbe
push
clc
push
enter
sub
cmp
or
sbb
push
cmpsb
pop
mov
inc
mov
jbe
push
clc
push
enter
sub
cmp
or
sbb
push
cmpsb
imul
call
es
xlat
mov
mov
push
lock
mov
add
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
mov
mov
push
std
insb
xchg
shlb
popa
and
inc
add
and
push
add
mov
mov
shl
mov
ret
in
popa
and
inc
add
dec
arpl
push
inc
inc
adc
imul
mov
mov
sub
pop
sbb
loope
lahf
loopne
icebp
test
popf
cmp
stc
lret
fildl
jae
fiadds
cmp
loopne
fwait
push
insl
fldenv
xor
and
and
push
add
hlt
pop
fisttpl
ljmp
daa
sub
hlt
in
int3
imul
roll
in
add
mov
stos
outsb
xor
and
into
push
jmp
xlat
sbb
xchg
mov
hlt
rorb
fbld
xchg
xor
and
jmp
out
xor
dec
insl
arpl
sbb
mov
into
push
add
xchg
in
loope
add
mov
ret
adc
out
mov
push
add
jae
arpl
push
add
cmc
mov
icebp
testb
fidivs
daa
daa
xor
xor
or
inc
pop
jo
movsb
shll
mov
popl
push
add
daa
push
and
ss
jno
jge
pusha
inc
jp
mov
mov
xchg
xorb
add
jno
inc
add
and
push
add
mov
mov
shl
mov
ret
xchg
xor
jno
inc
add
and
push
add
mov
push
sub
std
sub
sbb
in
aad
mov
scas
or
sbb
pop
and
sub
lea
and
and
test
xchg
aad
pop
or
inc
mov
loopne
and
sahf
cmp
xchg
or
sbb
mov
sbb
adc
dec
push
out
hlt
mov
out
or
lcall
pop
or
cmp
inc
xor
add
xor
ds
mov
cmpsl
sbb
mov
cmp
sub
int
ficoml
cltd
mov
inc
inc
ljmp
mov
jmp
lret
and
sub
ljmp
jp
stc
inc
jmp
pop
jne
daa
xor
mov
icebp
andl
add
cmp
mov
xchg
mov
adc
and
jno
cmp
jecxz
jle
loopne
mov
mov
jecxz
push
addr16
push
mov
dec
mov
jge
lock
sbb
lret
icebp
rcll
addr16
mov
xor
cmpsl
sub
cmp
sub
mov
movsb
test
pop
adc
in
mov
imul
inc
dec
adc
movsl
pop
mov
iret
push
inc
ljmp
jle
inc
ds
addr16
imul
cmc
mov
dec
push
push
and
mov
mov
and
cmc
mov
xor
shr
repnz
insb
test
cmpsb
shlb
mov
mov
loop
jge
xlat
lahf
add
shlb
lea
pop
into
sahf
into
mov
mov
jp
out
mov
imul
dec
inc
lahf
cltd
jge
outsl
mov
clc
int3
jns
lods
sbb
pushl
ja
push
sahf
loope
into
fmull
insb
call
sub
or
data16
mov
inc
pop
xor
lcall
push
xchg
bound
out
enter
ret
xor
mov
and
xor
aaa
data16
xor
in
dec
loope
and
jb,pn
mov
sbb
lret
ja
pusha
out
jnp
mov
fisttps
sub
cmp
cmpsl
addr16
sbb
add
or
mov
pop
stos
or
rcl
push
adc
fwait
xlat
dec
pushw
cltd
stc
pushf
sbbb
push
push
sarb
les
push
push
ds
lret
in
test
mov
jne
mov
jbe
je
mov
sar
lret
mov
fimull
jbe
jb
mov
aas
leave
daa
jle
and
xor
adc
adcb
add
xchg
fnstenv
test
push
jle
push
into
loopne
cld
xchg
jb
mov
in
sub
hlt
in
pusha
sub
clc
mov
lods
aam
rolb
pusha
push
mov
rcrl
repnz
rorl
sarl
je
add
leave
pop
lock
fldenv
inc
push
pop
shlb
lods
cmpsl
jp
loop
mov
xchg
mov
fbld
pusha
in
mov
dec
pop
es
jbe
pop
dec
xor
popf
shll
out
xor
pushf
rcr
fsubrl
xor
imul
pop
sbb
int
xor
iret
jmp
std
int
pop
push
pop
mov
cs
sub
mov
and
xchg
pop
in
loopne
cmp
add
insb
aad
rcrl
lahf
rorl
fxch
sub
sub
pushf
push
nop
xchg
in
mov
and
cmp
adc
mov
cmp
and
xchg
ss
enter
arpl
push
jmp
xor
pop
jne
push
out
mov
js
sub
xor
jae
cmpb
or
or
call
sub
mov
mov
and
aam
ds
lret
sub
dec
gs
pop
lock
cmp
inc
loopne
mov
int3
adc
and
clc
dec
loope
dec
loopne
int
in
pop
sbb
outsb
scas
addl
lods
test
add
popa
inc
sub
cwtl
rcr
cmp
dec
jae
xchg
pop
sbb
cmp
test
xor
test
adc
sarb
push
stc
jb
or
in
cmp
or
mov
jl
mov
mov
lock
jecxz
inc
lods
or
jmp
jne
imulb
sti
stos
xor
mov
cmp
xchg
mov
subl
cmp
imul
aad
movsl
hlt
inc
insl
dec
dec
sar
jmp
or
jle
fstpl
shl
scas
cmp
ss
jbe
jle
fs
mov
mov
call
jmp
push
data16
push
jo
cs
jno
push
sub
xchg
push
js
dec
scas
mov
call
aaa
fucom
aas
inc
push
sub
and
call
dec
cmpsb
sbb
jl
pop
sub
jae
push
lret
jb
inc
sbb
inc
mov
pop
out
out
lcall
outsl
mov
pop
jnp
sbb
ss
imul
or
mov
mov
pop
mov
sti
push
cmp
xchg
lock
lock
lret
sub
call
adc
fistl
movsb
push
cmp
imul
mov
pop
mov
insl
mov
sbb
push
mov
jp
and
pop
bound
ss
pop
dec
mov
imul
push
stc
jmp
test
sti
jge
cmpsl
ficomps
mov
pusha
cmpl
bound
ljmp
and
pop
push
adc
unpckhps
pusha
das
adc
mov
sub
sbb
jns
enter
repz
in
fmuls
or
popa
clc
stos
mov
sub
mov
mov
nop
hlt
cli
cmp
loope
add
pandn
or
aaa
inc
inc
addl
cmpsb
jmp
popl
call
or
cmpsl
in
push
out
and
fstpt
xchg
sub
scas
jo
or
hlt
cmp
lcall
movsb
adcl
jb
orl
insl
push
idivl
fld
xchg
jmp
dec
arpl
mov
je
mov
mov
jg
js
mov
jbe
sti
jne
jb
std
std
push
push
jecxz
push
add
pop
sub
iret
scas
cmp
pop
sbb
sbb
push
test
push
hlt
push
mov
sarb
pcmpeqb
int3
mov
test
jo
pop
sbb
and
shl
xchg
mov
sub
jp
idivb
cmc
cmp
loopne
pop
mov
or
pusha
js
jbe
add
push
mov
inc
add
sub
dec
repz
xor
cmpps
cmp
aaa
fisttpll
sahf
lods
ffree
cltd
lea
adc
jbe
int
mov
and
fadds
sbb
xchg
mov
inc
sbb
cmp
and
xchg
xlat
fcmovne
cmp
sbb
pushw
mov
jmp
sbb
adc
mov
out
je
aam
lods
push
sbb
and
into
and
push
cmp
sub
xchg
adc
into
dec
dec
mov
cmc
lds
dec
mov
mov
mov
or
pop
and
push
sub
mov
aaa
push
xlat
cltd
mov
add
push
outsb
loopne
or
mov
out
out
in
shll
mov
clc
gs
fwait
add
test
jns
rcrl
and
lcall
addr16
pushf
xchg
hlt
xlat
mov
cmp
mov
or
cmp
lods
and
jno
pop
push
sub
in
fnclex
dec
sub
mov
add
xchg
cmpsb
or
or
test
pop
jmp
push
insb
outsb
inc
push
movsb
pop
les
repz
pop
xor
add
add
jg
jbe
mov
sbb
test
loopne
in
dec
sbb
in
addr16
imul
xchg
fadds
pop
add
daa
popa
movsl
push
rorb
in
lahf
shll
push
lods
pop
insl
stos
ds
shlb
dec
in
data16
adc
int
sarl
int3
sahf
and
je
stc
orl
inc
je
dec
xchg
aas
jg
fs
push
jge
mov
in
fcomps
dec
ss
test
dec
pop
scas
ret
xchg
add
aad
daa
push
fdivl
int3
mov
add
fs
imul
gs
jp
push
pop
ss
std
cmp
xchg
push
cmp
out
cmp
jmp
adc
pop
push
add
xchg
sysenter
pusha
inc
mov
adc
mov
and
test
lods
mov
jl
lods
out
xchg
cmc
pop
mov
loop
push
clc
mov
in
and
loope
sub
push
and
xor
loopne
ret
sub
testb
dec
or
lds
push
cwtl
shll
gs
xchg
inc
jne
sub
push
pop
in
adc
rcrb
sub
xorl
ret
es
fstp
xor
int
xchg
je
push
dec
push
jl
movsl
gs
and
ss
les
sbb
fsubs
mov
into
sbb
and
mov
xor
adc
test
mov
shlb
sub
and
jno
testl
adc
test
jnp
add
call
iret
in
mov
jb
adc
xchg
test
and
mov
jne
ror
out
xor
sar
insl
add
pushf
in
sbb
int3
cltd
jb
add
mov
andb
cmp
mov
mov
inc
mov
fists
jl
sbb
add
outsl
push
xlat
dec
inc
add
inc
sub
and
mov
inc
add
lahf
xor
lcall
pop
fld
les
jmp
mov
pop
pop
test
in
jae
cmp
inc
sub
and
xchg
sub
xchg
aad
nop
in
pushf
xor
mov
cmpsb
popl
out
int3
fbstp
xor
aas
lock
pusha
pop
mov
cmp
pop
sti
stos
mov
mov
mov
lea
ret
xchg
xor
and
pslld
xor
add
repz
addr16
dec
or
mov
push
rcrl
shlb
push
push
aad
cmpsl
nop
das
inc
cs
mov
popf
mov
xchg
shlb
enter
mov
gs
sub
fsubs
adc
mov
add
movsl
ja
adc
xchg
dec
adcb
pop
mov
imul
dec
mov
imul
cmp
aas
jae
sub
lds
adc
aam
and
sub
movsb
test
cmp
mov
mov
jno
mov
dec
adc
add
jae
fs
push
mov
in
dec
popf
in
xor
push
mov
lcall
pop
idivl
in
sub
xor
xchg
jecxz
fidivl
dec
add
adc
mov
mov
mov
test
or
mov
pop
dec
and
psrlw
push
pushf
cld
fsts
jb
push
setns
pop
movzwl
pop
add
xor
test
ffreep
cmp
dec
in
xor
in
mov
lahf
mov
mov
xchg
lret
and
xor
mov
sub
dec
sub
jns
mov
add
call
lods
stos
xor
ret
sub
sbb
cmpsb
push
and
mov
rol
lods
add
mov
je
and
xor
data16
mov
mov
push
sbb
out
push
push
or
or
dec
lret
cmpsl
add
lret
xor
inc
sbb
push
jp
jbe
test
jg
int
cmpl
js
add
push
insl
es
pop
rorl
movsl
mov
dec
mov
push
mov
and
dec
pop
insl
or
push
ds
mov
and
repz
jg
fcmovnb
outsb
outsl
mov
scas
xor
loopne
shrl
or
test
imul
jns
lods
and
mov
mov
loopne
mov
sti
rcll
fistps
in
inc
jnp
cwtl
pusha
fsub
add
fldl
stc
das
inc
or
adc
shll
sub
das
imul
xchg
adc
adc
ljmp
js
xchg
push
loope
fadds
jo
shrb
sub
add
out
out
imul
mov
out
out
sub
les
lcall
dec
mov
repz
daa
lahf
jb
jb
addr16
in
push
test
out
mov
xor
or
cmpsl
sbb
jecxz
inc
cmp
push
sub
int
jl
test
adc
adc
dec
add
test
jo
sbb
inc
fbstp
sbb
xor
and
mov
cmp
add
int3
mov
pop
lea
mov
jge
and
mov
jle
pop
cwtl
das
loop
adc
add
into
in
loopne
mov
or
gs
lret
inc
jg
xchg
pop
push
or
ror
dec
loop
scas
std
sbb
xor
cltd
sub
in
cmp
clc
cld
dec
lcall
inc
and
or
shlb
cmpsb
mov
loop
outsl
lret
mov
dec
dec
mov
out
je
ret
cmc
imul
ret
xor
in
test
or
xlat
icebp
mov
mov
sub
shl
mov
xor
fdivr
insb
dec
adc
xchg
out
arpl
push
lea
out
xchg
out
les
push
scas
adc
inc
sub
mov
jns
shrd
sbb
pop
sahf
stos
das
mov
and
mov
popa
push
aas
inc
lcall
cmp
in
fstl
subl
and
adc
inc
cmp
insl
jbe
icebp
out
pop
js
daa
xor
stos
and
xor
lcall
push
subl
fildl
jo
lret
andl
test
pop
ret
pop
ret
inc
inc
xorb
pop
sbb
fstps
pusha
push
xchg
inc
into
mov
fnstenv
xchg
add
call
rcrb
imul
jp
sbb
pop
out
jbe
push
test
std
sar
lods
xchg
outsl
jno
push
sub
pop
cmp
stc
js
daa
mov
je
ret
in
dec
dec
ds
push
or
inc
outsb
xchg
rorl
xchg
cmpsb
inc
sbbb
test
inc
lcall
mov
xchg
loope
fbld
stos
cwtl
jg
adc
cmc
nop
push
mov
sub
push
and
jb
cld
inc
add
test
mov
xor
mov
mov
sbb
fdivs
loopne
lret
sub
xchg
and
inc
rolb
in
test
jnp
dec
mov
test
popa
jmp
fidivrs
mov
add
outsb
iret
sbb
push
jg
xchg
cmp
arpl
cmp
cmp
adc
bound
clc
lea
adc
dec
shrl
lds
ljmp
add
cmp
cmp
ja
iret
jmp
pop
add
imul
imul
cs
aaa
aas
int
notb
sub
bound
push
push
movsb
popa
mov
popf
mov
shll
fistl
outsl
fisttpl
scas
fnstcw
mov
inc
sub
fwait
cmpl
push
sub
cmp
movsb
lods
pusha
mov
lea
lret
add
fsub
mov
mov
rclb
sbb
mov
pop
push
shrb
sti
fadd
xchg
hlt
mov
stos
push
mov
add
into
mov
add
push
mov
jl
adc
xchg
insl
das
sti
add
sbbb
or
cld
or
mov
es
and
jns
jns
jmp
mov
sti
jae
mov
std
sub
inc
sarl
subl
icebp
inc
lsl
adc
jle
mul
mov
inc
bound
cmpsl
add
sbb
mov
xlat
loop
cmp
pop
xchg
flds
fs
sar
mov
xlat
lods
pop
pushf
bound
iret
ret
adc
push
sbb
push
jno
inc
jge
stc
adc
sub
in
clc
pop
xor
xor
xlat
add
xchg
pushf
test
mov
push
lret
insl
push
jbe
push
arpl
jmp
cmpsb
sbb
aad
out
mov
ljmp
adc
lcall
imul
mov
push
xchg
inc
pop
dec
stos
je
scas
and
mov
test
sar
ret
pop
out
mov
pop
movsl
lods
test
jnp
sahf
imul
jns
pmulhw
fidivs
in
inc
fstpt
sti
lret
ret
loopne
in
mov
add
push
inc
xor
fstl
jmp
mov
add
enter
mov
push
cmpsl
or
cmp
ds
fs
test
fidivl
test
jns
sti
daa
cmp
fsubrp
stos
sbb
cwtl
pop
dec
out
icebp
jge
push
jno
aam
out
lock
push
imul
mov
fisubs
push
sbb
fistl
inc
xchg
push
loope
adc
cli
pop
pop
jno
in
push
jo
leave
dec
push
stc
loope
fbstp
lods
adc
jae
mov
sbb
inc
outsl
mov
test
fldenv
loop
mov
mov
add
xchg
xchg
insb
pop
and
mov
into
imul
lret
xchg
mov
and
scas
mov
mov
test
pop
out
adc
fiadds
mov
xor
xor
jge
push
sbb
cmp
sub
es
ret
cmp
mov
sub
push
out
rcrb
cltd
leave
sbb
push
stos
mov
mov
xchg
pop
add
add
ss
xor
pusha
dec
mov
adc
repz
mov
imul
pop
in
xchg
into
in
fsubrl
sub
jno
mov
xchg
out
mov
rcll
leave
popf
test
dec
in
adc
or
sbb
popa
mov
loop
push
push
pop
loope
icebp
add
hlt
pop
xor
add
stc
mov
ja
lock
fmull
xchg
test
xchg
ja
mov
cmc
arpl
data16
sahf
pop
cld
pop
mov
lods
clc
or
jp
rcrb
cli
pextrw
push
inc
cmp
stc
je
cltd
mov
fsubrs
test
add
mov
push
push
push
nopl
std
lcall
inc
cmp
in
add
push
leave
in
pop
roll
and
dec
je
mov
mov
sub
or
mov
mov
mov
xor
fmul
jne
imul
mov
call
cli
lods
addr16
imul
mov
sub
mov
pop
jge
cli
and
inc
sbb
add
push
xchg
xchg
jg
push
pop
loope
jae
or
js
repnz
cs
imul
jge
imul
adc
push
das
movl
repz
rcr
mov
hlt
mov
xor
mov
jb
or
jns
scas
outsb
xchg
xor
fildl
ss
inc
sub
jle
and
out
lods
cmpb
sbb
xchg
jns
sub
xchg
jmp
daa
cmp
movsb
fisubs
lret
dec
out
orb
cmp
xor
shll
icebp
lock
aaa
push
fnstsw
jmp
push
test
iret
insl
int
or
mov
add
xor
mov
lcall
inc
hlt
or
fadds
xor
mov
xlat
addr16
sbb
dec
mov
js
adc
repz
lahf
and
insb
xor
mov
pop
mov
mov
bound
jecxz
dec
inc
pop
adc
das
scas
push
push
std
dec
scas
lahf
and
xchg
fpatan
jp
jno
hlt
jle
and
jmp
add
or
pop
loope
jmp
jp
dec
fs
movsb
sub
stos
and
inc
mulb
dec
int3
insb
loope
push
cmp
je
std
cmpb
rorl
push
jmp
repnz
cld
inc
sub
stos
or
xchg
inc
mov
call
or
or
jnp
test
add
adc
push
mov
push
cmovge
mov
pop
mov
je
mov
cmpsb
jns
loop
shr
jge
mov
imul
fldl
xor
outsb
lahf
test
push
jecxz
xchg
inc
mov
add
sub
lcall
xor
xchg
and
out
pop
clc
aaa
mov
lcall
adc
mov
ret
xchg
xor
jno
inc
add
and
push
add
mov
mov
shl
mov
ret
xchg
xor
jno
inc
add
and
push
add
mov
mov
shl
mov
ret
xchg
xor
add
and
push
and
mov
mov
shl
mov
ret
xchg
xor
add
add
jmp
lods
mov
mov
adc
inc
ret
xor
and
adc
add
push
scas
inc
push
mov
mov
pop
repz
aas
shrl
ret
xor
inc
rcll
out
add
adc
mov
psllq
adc
xlat
ret
fistps
mov
mov
and
inc
push
mov
cld
cmp
sbb
xchg
xor
add
or
in
lods
int3
sub
inc
xchg
call
push
in
and
out
dec
jo
sbb
aad
sbbl
faddl
adc
sbb
push
add
adc
jmp
mov
fs
out
xchg
jle
xor
pop
das
lahf
into
xor
add
adc
pusha
jb
mov
sbb
cmp
ds
sub
dec
out
in
adc
sbb
into
ficoml
pop
adcb
jl
repnz
jnp
addr16
pop
iret
lahf
je
in
in
ret
insb
arpl
into
fisubl
lret
xchg
outsb
mov
inc
aaa
and
add
add
data16
movsb
cli
inc
mov
mov
pop
repz
jecxz
rcll
and
adc
add
jae
arpl
fdivrl
mov
jno
jp
sub
dec
xchg
mov
jnp
inc
notb
loope
lret
push
call
mov
jbe
outsb
xchg
pop
ret
out
mov
jb
insb
in
adc
or
ss
adc
sti
cs
repz
aas
shrl
ret
fbstp
iret
and
adc
add
push
scas
inc
pop
mov
mov
pop
repz
aas
shrl
ret
fbstp
iret
and
adc
add
push
scas
inc
pop
mov
ljmp
outsb
or
pop
xor
fs
mov
bound
pop
cmp
cmc
xchg
jno
out
ficomps
das
xlat
mov
and
xchg
inc
stos
add
rep
test
or
mov
adc
mov
push
sub
inc
mov
nop
mov
sti
push
mov
daa
clc
push
pop
leave
out
test
sub
shll
jne
mov
jge
and
ss
movsl
push
sbb
ficoml
sahf
pop
jecxz
aas
xchg
pop
sahf
mov
icebp
sbb
add
scas
outsb
pop
stc
xor
cmp
inc
xchg
cmp
dec
repnz
sbb
jno
jge
mov
push
jnp
push
add
xor
daa
sub
negl
dec
adc
mov
out
fistpl
roll
xor
adc
popf
mov
fistps
movl
jnp
mov
dec
inc
mov
es
pop
rclb
cmp
pop
hlt
or
sbb
sarb
jecxz
iret
inc
daa
sti
or
lea
bound
sti
stc
sub
jns
mov
mov
mov
adc
mov
dec
test
ret
cmpsb
jl
mov
jge
test
movsl
in
dec
xchg
inc
xchg
inc
mov
and
in
leave
cmp
and
adc
ljmp
lahf
cmc
sbb
es
mov
dec
and
mov
aaa
sarl
shll
inc
push
lcall
mov
inc
mov
cltd
std
xor
jp
loope
mov
or
fsubl
pop
xor
add
push
xor
pop
test
push
shlb
shr
sub
adc
bound
loop
cmp
in
mov
inc
test
pop
pop
dec
jmp
test
pushl
lret
mov
enter
dec
sbb
adc
cmp
sub
cwtl
jg
cmp
lret
xchg
push
dec
jne
xchg
cld
adc
pop
scas
das
cli
mov
adc
mulb
ljmp
cmp
inc
pop
and
jne
pop
cmc
add
jbe
mov
add
push
pop
loop
and
jg
pop
xchg
xchg
std
lds
test
dec
pop
leave
mov
into
dec
divl
mov
out
sub
ljmp
adc
lcall
sbb
mov
loop
leave
mov
fbstp
adc
loopne
push
enter
cs
movsl
fdivrl
aad
xchg
mov
in
add
mov
mov
mov
ds
cmp
mov
ret
call
and
dec
and
scas
or
mov
mov
mov
jns
xchg
adc
pop
lea
mov
push
pop
push
push
inc
dec
arpl
mov
mov
fwait
add
fcom
addr16
mov
sbb
in
mov
mov
stos
push
lret
jge
jb
push
jae
cmp
mov
lcall
fnstsw
or
out
or
orb
push
push
xchg
fs
cmp
cmc
arpl
pop
outsl
xchg
daa
sub
loopne
pushf
cmpl
pop
gs
pop
int
sub
cmpsl
sub
enter
mov
inc
orl
mov
add
popf
popf
xchg
aas
pushf
cmp
push
int3
mov
cld
icebp
das
cmp
push
adc
iret
or
xor
test
in
sub
loope
inc
or
jnp
ja
xchg
arpl
int
push
pop
out
sub
scas
es
sbbb
adc
addb
push
xchg
shrb
mov
xchg
mov
jecxz
aad
sbb
pop
addr16
xor
jmp
mov
push
mov
repz
test
dec
adc
mov
mov
cmp
mov
jg
das
faddl
inc
bound
outsb
pop
adc
mov
push
out
inc
es
test
nop
addr16
mov
push
adc
rcrb
mov
shrl
inc
rolb
mov
jg
xor
push
aam
sti
iret
mov
cwtl
dec
andb
push
outsl
hlt
jmp
xor
mov
ret
push
movsb
lret
repz
ret
dec
mov
inc
push
shrl
in
dec
xchg
dec
js
jmp
xchg
sbb
jmp
out
inc
out
dec
push
loopne
push
shrb
mov
adc
popa
jne
andb
ret
cltd
rorb
jb
cmpsl
lcall
jbe
scas
pop
es
lret
lods
pop
fs
ret
mov
sub
outsl
data16
dec
lds
icebp
pop
popa
les
pop
es
dec
mov
les
scas
mov
mov
mov
mov
xor
sahf
xchg
pop
inc
jmp
rcll
jnp
cmp
lds
test
dec
aam
hlt
aas
dec
lods
push
rol
mov
insb
stos
push
sbb
fs
adc
aaa
into
dec
add
fidivs
lret
xchg
push
in
sbb
das
xchg
fistpll
add
or
mov
mov
imul
or
pop
sbb
call
sbb
inc
push
test
mov
sti
xchg
mov
sahf
ss
or
stos
and
cli
xchg
sbb
sbb
icebp
ret
mov
mov
dec
ret
pop
xchg
mov
scas
cmp
xor
cld
repnz
das
add
clc
jbe
mov
popa
jns
adc
cmpsb
xchg
jbe
mov
sub
push
dec
cwtl
stos
ret
sti
or
out
test
das
jne
adc
mov
xchg
push
mov
xchg
push
fistps
in
jg
int
xchg
outsb
jno
push
out
mov
mov
dec
push
xor
add
add
lods
push
hlt
movsb
fildll
fsubrl
sub
scas
jge
or
scas
jns
inc
lahf
pop
sbb
jmp
dec
mov
sbb
out
jl
es
in
std
pop
sub
sbb
pop
popa
filds
xor
loop
push
or
cmp
xor
fwait
leave
fcmovbe
js
mov
aas
push
sub
cmp
loopnew
mov
pushf
adc
xorl
mov
mov
xor
ret
xchg
cmc
mov
andl
add
dec
popf
ficomps
xor
pop
mov
and
fsubl
dec
pop
outsl
xchg
adc
pop
stos
arpl
adcl
sub
popf
sti
sub
xchg
test
mov
shll
stos
out
imul
testb
movsl
pop
jnp
fstps
sbb
adc
out
inc
ss
aas
rorb
sti
dec
nop
lahf
jns
shll
cli
leave
ljmp
inc
dec
subb
push
xor
jp
xor
pushf
push
fwait
call
add
es
shrb
mov
rcll
cmc
cmp
nop
and
and
mov
fwait
mov
xchg
jge
add
enter
fsubs
ret
lds
jno
arpl
shlb
sub
xchg
xlat
popw
pop
jo
repz
xor
mov
sbb
pop
add
mov
lret
pop
outsb
enter
and
loope
mov
in
dec
and
pushf
inc
enter
out
adc
icebp
into
sahf
inc
fcmovbe
adc
push
mov
movsl
popf
cmp
jnp
pop
ret
cmc
mov
outsb
fdivr
hlt
xchg
cwtl
out
jno,pt
cmpsb
ss
stos
sbb
cmpsl
popf
push
mov
push
xchg
mov
bound
ss
or
mov
into
ss
mov
lods
mov
mov
ja
lahf
rorb
insb
jne
es
out
stos
adc
adc
jno
sarl
rol
xlat
add
push
sub
and
cwtl
xchg
mov
ljmp
and
sbb
sbb
inc
movsl
inc
cmp
jb
adc
push
xchg
inc
dec
jns
cltd
or
pop
mov
fldcw
dec
cmp
iret
inc
inc
in
outsl
ret
sub
bound
push
out
adc
xor
mov
pop
sub
or
jo
xchg
lret
fiadds
mov
out
mov
or
mov
and
push
pop
adc
shll
pushf
xlat
add
xchg
mov
sahf
test
ljmp
test
mov
lds
or
rcrl
cmp
mov
xchg
mov
nop
xchg
in
les
push
ret
mov
xchg
sub
cwtl
pop
xor
mov
push
inc
ljmp
cmp
jo
lods
mov
stos
jne
lret
pop
pop
lods
add
or
icebp
pop
fldt
sbb
addl
insb
cmp
xor
cmpb
mov
call
push
or
dec
loope
add
arpl
into
xchg
fsubl
ja
sbb
ret
sbb
test
xchg
xor
cmpl
cmc
jb
cs
cmp
add
or
ficoms
mov
dec
pop
iret
into
mov
sbb
and
stos
sub
or
sub
xor
sbb
mov
sub
lea
dec
mov
outsl
push
imul
pop
mov
inc
dec
adc
popa
inc
inc
out
outsl
insl
ja
cld
int
test
xchg
fsubr
adc
push
rorl
push
push
lock
imul
idivl
adcb
rcr
add
jo
lret
inc
add
jmp
mov
nop
lods
mov
std
std
dec
or
push
out
bnd
sub
imul
adc
lods
pop
push
aam
into
mov
mov
loope
adc
test
rcrb
jge
fldt
pop
aas
sbb
mov
sub
aad
fsubrl
movsb
sub
aad
int3
pop
je
insb
push
int
pop
aaa
pop
arpl
ds
je
adc
pop
aad
arpl
adc
testb
dec
popf
je
push
xchg
lods
cmp
cld
subb
leave
pop
cmpsl
xchg
outsb
arpl
mov
add
push
in
jae
pop
push
cli
jge
pop
stc
lea
xor
add
xor
cmpb
mov
inc
cmp
nop
outsb
shr
pushf
jmp
insb
inc
inc
jle
jecxz
hlt
and
sbb
test
cmp
xchg
insl
test
daa
mov
jmp
inc
add
fildll
pop
lds
ss
imul
mov
inc
ficompl
sbb
cmp
mov
js
add
je
orb
int3
mov
xchg
outsl
rcrl
and
jl
xor
jne
adc
fcoms
fnclex
sub
mov
int
roll
out
loopne
add
push
mov
mov
pop
rclb
mov
xor
inc
scas
jmp
pop
sahf
adc
js
or
clc
sbb
pop
inc
mov
and
imulb
cli
repz
dec
out
inc
popa
xor
sbb
cmpl
pop
sbb
movsb
xchg
popf
rolb
pop
mov
mov
jo
xor
mov
hlt
xor
rcrl
pop
add
fstpl
scas
jne
jmp
xchg
xchg
mov
int
mov
mov
inc
fcmovu
xchg
mov
dec
lods
jo
cmp
xor
cltd
dec
sub
pop
fnstenv
stos
insl
pop
pop
mov
ret
jmp
pop
lret
subl
and
lock
scas
add
fucomi
imul
cltd
xchg
add
xchg
sub
mov
stos
insl
adc
and
loop
ss
out
cmp
push
inc
cld
cmp
adc
std
fldl
cld
addr16
test
or
in
inc
in
cwtl
mov
push
and
daa
daa
call
inc
mov
sbb
pop
or
call
stos
lods
aas
loopne
sub
mov
jecxz
pop
cli
stos
les
loop
xchg
insb
out
mov
arpl
stc
or
sub
adc
je
aad
scas
or
or
mov
pop
js
push
or
ss
out
hlt
lds
jno
sahf
js,pt
lods
sbb
arpl
adc
repnz
icebp
push
mov
int3
out
lcall
adc
out
pop
fcomi
das
xchg
pop
cltd
int
cs
pusha
out
loope
mov
adc
push
ror
mov
jnp
mov
fldcw
xlat
xchg
mov
and
sbb
lods
push
loopne
add
jecxz
sarb
mov
fdivrl
mov
and
pop
cld
jl
push
jp
push
jl
dec
or
insb
hlt
scas
cmpsl
cmp
bound
test
insl
jb
push
adc
sbb
inc
in
ret
cs
adc
adc
aad
jge
dec
fdivr
push
imul
int
jae
sbbl
or
bound
dec
and
and
inc
xor
je
inc
leave
cltd
fnsave
dec
inc
mov
push
pop
popf
ljmp
fldl
cmp
pop
pop
mov
ja
xchg
adc
jb
jg
in
cld
lcall
sub
adc
xor
adc
push
cmp
mov
inc
mov
insb
lds
adc
mov
cld
mov
inc
fdivp
sbb
cmp
testl
push
push
add
adc
scas
jno
mov
shrb
cmpsl
pusha
mov
xor
mov
xor
push
ret
sbb
mov
mov
sbb
inc
cmpsb
insb
push
and
inc
push
ja
xor
loopne
cld
into
add
jp
repnz
sbb
jbe
popa
cmc
cmpsl
mov
xchg
sahf
jg
push
cmp
or
mov
and
test
ret
jmp
sbbl
sbb
int3
stos
ljmp
cmc
mov
shll
sti
and
cmp
lahf
lret
jnp
jne
filds
xor
dec
mov
cmpsl
jg
mov
shll
push
fcompl
mov
arpl
scas
orl
jl
or
notl
xor
add
fadd
jns
mov
lcall
ljmp
xchg
dec
pop
and
test
lcall
pop
xor
in
pushf
js
loope
icebp
xlat
dec
mov
fnstsw
add
xor
pop
inc
dec
dec
push
push
mov
add
lahf
cs
pop
pushf
in
ja
add
cmp
jg
xchg
xor
bound
jnp
xor
or
jmp
scas
out
in
imul
je
mov
mov
popa
mov
xor
sbb
clc
mov
jmp
xchg
bound
pop
js
xor
enter
aam
in
mov
rorl
and
push
jg
xchg
pop
popa
fs
and
ret
inc
sbbl
dec
xchg
lods
jecxz
jb
pop
fcomi
fsts
dec
xchg
xchg
leave
push
ret
or
mov
mov
xor
sub
lods
push
shll
ret
xchg
xor
mov
xchg
std
pop
call
inc
iret
lcall
sub
dec
es
mov
mov
jb
jno
inc
std
scas
jns
pop
lcall
pcmpeqb
sub
mov
outsl
or
dec
pop
jno
repnz
mov
jb
push
xchg
in
pop
add
jecxz
test
imul
adc
inc
imul
add
outsb
popf
sub
scas
mov
inc
movsb
pop
repz
mov
hlt
push
stos
mov
addr16
into
jnp
ljmp
push
push
sti
fnstsw
rorl
hlt
mov
jp
leave
adc
push
inc
and
pop
push
xor
mov
test
mov
dec
out
data16
push
fistps
out
in
pop
xchg
mov
scas
mov
adc
or
adc
jecxz
bound
lret
mov
sub
in
cld
jl
xor
jb
xchg
test
inc
pop
mov
mov
cli
lea
fisubrs
adc
mov
xchg
and
cmp
cmc
sbb
sarl
loop
xchg
mov
push
sti
mov
dec
and
pop
push
mov
div
scas
jbe
add
in
hlt
stos
dec
or
xchg
sub
mov
xchg
xor
xchg
inc
imul
mov
aas
test
aad
in
and
add
jae
push
xchg
xchg
mov
cmpsb
xor
outsb
idivb
jae
ds
jb
xchg
add
push
pop
adc
repnz
ja
push
lret
and
push
mov
cmpsb
jno
cmpsl
out
jno
jo
icebp
aaa
sbb
into
arpl
loop
inc
or
test
mov
imul
arpl
add
dec
dec
pop
dec
cs
cmpsl
outsl
loop
inc
jns
xchg
add
mov
mov
adc
fldl
movsl
scas
push
ror
mov
lock
ss
and
push
int
sbb
nop
adc
or
jae
mov
xchg
xor
cmpb
pop
push
or
cmc
or
xchg
daa
pop
lret
cmp
lock
dec
nop
sahf
push
fimuls
fdivrs
loopne
cmpb
pop
add
xchg
invd
jae,pn
push
sahf
pop
mov
in
cmp
cli
pushf
jecxz
fisttps
adc
xor
je
push
in
mov
inc
sub
and
cmp
inc
or
inc
stos
ja
movsb
mov
lea
loopne
in
pop
push
subl
call
add
xor
in
sbb
lahf
mov
push
movsb
dec
int
nop
lock
push
or
jb
inc
aas
je
or
mov
mov
fcmovnbe
pop
adc
adc
pop
pop
sbb
xor
fildl
popa
adc
das
int3
sub
pop
repnz
cmp
in
outsl
xchg
fsub
outsb
test
loop
mov
pusha
lea
cmp
xchg
ds
xor
jmp
or
sbb
cmp
mov
xchg
xchg
lods
shrb
adc
adc
aam
xchg
nop
sub
push
fwait
sub
fs
ja
dec
pop
inc
mov
je
or
fcmovnu
rol
or
inc
imul
shll
inc
add
loope
ss
int3
sbb
mov
fwait
in
cld
mov
adc
mov
cmp
cmp
lret
aam
les
xor
push
bound
hlt
sahf
pop
out
pop
icebp
insb
sbb
jns
xor
jmp
sub
cmp
and
pop
jg
mov
sbb
stc
fiaddl
fimuls
scas
cli
push
loope
rcll
and
pavgb
pop
repz
sub
in
xchg
psrlw
jns
dec
push
outsl
shl
arpl
je
mov
cmp
xchg
jne
lock
sbb
pusha
push
cmp
mov
mov
or
popa
scas
gs
and
lods
mov
popf
arpl
pop
jmp
mov
mov
sbb
repnz
shlb
leave
jg
jo
sub
add
jnp
lock
testl
add
pop
mov
mov
jne
mov
out
cmpsl
cmp
push
xor
sub
cmpsb
hlt
and
jl
fistps
sarl
cmpsl
pop
sbb
aam
icebp
or
mov
mov
mov
cld
or
repnz
inc
sbb
mov
fsubr
xor
ret
cld
test
and
inc
int
jo
xlat
cmc
pop
inc
push
lret
jmp
adc
cld
mov
ja
xor
hlt
outsl
push
sti
repnz
pop
mov
cwtl
ss
call
lahf
loop
pusha
cmp
lcall
arpl
xor
dec
adcb
push
test
mov
pop
dec
cmc
push
xorb
lret
mov
out
int
sahf
scas
int3
adc
xor
mov
ljmp
xor
or
and
imul
fcomps
cmp
sbb
in
mov
les
mov
adc
iret
test
mov
ss
xchg
fistpl
js
ror
dec
add
outsl
stos
push
ud1
and
stc
lsl
or
cmp
lret
stc
in
jl
adc
mov
jns
xor
mov
dec
inc
cmpsb
pop
lods
add
insl
aas
sbb
mov
dec
data16
aad
leave
call
aas
aad
adc
sub
dec
xchg
ret
mov
xor
icebp
push
push
xor
scas
fcoml
into
popf
adc
mov
je
das
out
xchg
xor
shlb
dec
push
sti
mov
movsl
leave
xchg
insb
imul
mov
pop
repz
aas
shrl
ret
fbstp
iret
and
adc
add
push
scas
inc
pop
mov
mov
pop
repz
aas
shrl
ret
fbstp
iret
and
adc
add
push
scas
inc
pop
mov
and
outsl
sbbl
or
shrl
ret
jmp
lahf
jae
arpl
mov
mov
pop
repz
jecxz
shrl
mov
out
je
sti
pop
pushf
inc
lods
push
mov
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
pop
test
mov
cs
in
test
pop
add
add
push
pop
add
sub
push
add
add
and
fildl
add
add
arpl
jge
int
add
loop
movsb
add
add
sbb
push
add
pop
add
jb
pop
add
movsb
add
push
add
pop
add
add
add
add
add
add
js
pop
add
add
add
add
add
mov
add
add
fildl
add
push
add
add
add
add
add
js
rolb
add
add
add
add
add
jb
filds
pop
add
add
add
pop
add
loop
cltd
add
add
in
add
add
xchg
add
add
pop
add
sub
insb
add
add
add
add
inc
add
cltd
add
add
add
mov
add
pop
add
add
add
movsb
add
add
add
add
add
js
rolb
add
ret
add
add
add
add
mov
addb
add
add
add
lods
add
addl
push
add
ret
add
add
xor
je
ret
add
sub
fs
add
mov
add
or
cmpsl
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
fiadds
inc
add
add
add
add
add
add
rolb
add
add
add
sub
fs
add
lods
add
add
add
add
add
inc
add
add
add
add
add
add
jge
insb
add
add
add
add
add
mov
add
add
add
add
add
add
addb
add
cmpsb
add
and
filds
dec
add
add
add
add
or
add
add
add
add
add
add
nop
add
xchg
or
or
pop
add
add
add
jne
add
pop
add
add
add
add
add
and
jo
mov
mov
add
add
in
sub
pop
add
pop
add
add
add
add
imul
ret
add
add
add
add
add
jge
push
add
add
ret
add
add
add
add
add
add
add
in
add
add
add
add
add
add
mov
add
push
add
jbe
and
dec
add
dec
add
xor
jne
inc
add
add
add
mov
mov
add
jne
dec
add
add
js
dec
add
add
add
dec
add
add
pop
add
add
add
add
fiadds
movsb
add
add
add
add
addb
add
dec
add
fwait
add
in
add
inc
add
dec
add
add
add
dec
add
add
add
add
dec
add
add
add
add
or
push
add
add
add
add
sti
add
add
add
add
xlat
add
mov
sti
add
add
add
adc
mov
xor
ds
xchg
aam
repz
out
xchg
xchg
test
xor
cmpsb
adc
jno
xchg
xor
cltd
pop
rcrb
mov
aam
jp
mov
or
notl
scas
fwait
pop
inc
cmc
fadd
sbb
fwait
push
sbb
add
cmp
cmp
or
out
int
jns
xchg
inc
fsubl
ret
loope
lds
popa
jae
lret
mov
loopne
pop
sub
lods
stos
sub
mov
mov
xor
mov
sbb
out
push
push
sbb
cmp
movsl
pop
sahf
push
xchg
lahf
inc
cltd
mov
and
clc
jno
pop
sub
jmp
roll
mov
add
call
push
or
mov
cs
ret
lret
mov
imulb
lods
inc
ficompl
mov
dec
test
aam
add
add
icebp
out
cmp
mov
rolb
test
hlt
fstl
ficompl
jg
pop
inc
int
xchg
insb
imul
es
mov
push
mov
jmp
loop
insb
movsl
mov
cmp
bswap
jl
mov
sub
xor
shlb
jecxz
iret
jnp
jmp
pop
cmp
rcl
and
not
dec
fcomip
sbb
mov
mov
xor
mov
andb
cltd
xchg
data16
loopne
xlat
and
inc
inc
mov
sti
in
pushf
neg
jle
mov
cmp
cmp
xchg
orl
cld
test
aad
or
xchg
xor
imul
lcall
mov
mov
lret
jmp
pop
mov
mov
jl
leave
adc
mov
inc
movq
inc
add
mov
lcall
mov
test
idiv
in
test
xchg
in
out
and
push
call
mov
cltd
jp
pop
jle
adc
sub
ss
call
push
jecxz
mov
aad
sarb
cmp
push
or
cmp
pop
pop
das
sbb
sbb
lret
rorl
roll
loop
aas
aaa
and
and
add
or
aad
nop
pop
sbb
stos
mov
dec
lds
mov
cmp
jbe
fisubrl
loopne
gs
push
xor
sti
xorb
add
add
or
mov
and
sbb
sti
or
add
push
adc
add
sub
or
bound
aaa
aaa
fnstsw
cmp
fnstenv
xor
pop
add
add
add
add
rolb
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
repnz
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
repnz
repnz
mov
repnz
lods
repnz
movsb
repnz
pushf
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
repnz
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
repz
mov
repz
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
hlt
add
cwtl
hlt
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
add
or
add
xor
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
pop
add
pushf
pop
add
xchg
pop
add
mov
add
test
add
jl
add
je
add
insb
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rclb
add
fcoml
add
lock
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
sbb
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
sbb
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
sbb
add
add
js
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
