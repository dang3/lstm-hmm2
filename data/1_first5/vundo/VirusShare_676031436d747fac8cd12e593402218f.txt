inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
je
insb
add
add
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
arpl
add
js
push
cmp
dec
push
add
add
add
add
add
push
add
pop
add
add
add
roll
add
iret
add
add
add
add
add
pop
add
add
add
add
jns
cli
add
add
cmp
push
add
push
add
add
add
add
add
add
jne
cltd
add
dec
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fiaddl
scas
add
insb
add
add
add
add
add
lea
add
add
add
add
adc
add
add
add
add
add
jne
sbb
scas
add
add
es
push
add
jne
add
add
ds
add
scas
add
sbb
scas
add
add
add
add
xchg
add
jne
add
add
add
add
add
add
add
add
fiaddl
stc
add
add
dec
add
cli
add
add
add
xchg
mov
jne
roll
jnp
inc
add
add
add
add
add
add
add
add
cmp
dec
add
sub
jne
mov
mov
pop
add
fiaddl
mov
lods
add
inc
add
add
jnp
inc
add
add
add
sub
jne
add
add
jne
adc
add
add
add
arpl
jnp
inc
add
add
add
add
add
add
add
add
dec
add
jnp
cmp
add
sub
inc
add
js
jne
jg
roll
dec
add
add
jnp
add
add
cmp
jle
pop
add
add
add
add
add
push
add
add
jnp
pop
add
add
add
add
add
add
addl
dec
add
add
add
push
add
add
add
add
add
add
add
add
add
test
jl
mov
add
adc
fiaddl
sbb
jl
sbb
add
add
add
add
mov
add
add
add
cmp
popa
add
add
add
add
add
add
inc
add
in
pop
add
add
add
cltd
add
add
add
add
insl
add
add
and
push
add
add
sub
cmp
ret
add
in
cltd
add
cmp
add
jne
dec
add
add
add
mov
adc
add
add
push
add
cltd
add
add
add
add
add
jg
cli
add
add
add
es
lcall
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
insl
add
adc
cli
add
add
add
pop
add
add
pop
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
fiaddl
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
mov
add
add
add
add
add
add
add
add
xchg
jno
sbb
into
insl
enter
dec
xlat
or
sub
xchg
pop
test
addr16
test
sbb
and
xorb
lahf
sub
ret
mov
mov
jne
scas
adc
mov
fimull
xchg
mov
shr
pop
cmc
lock
movsb
jmp
inc
out
inc
sbb
ja
imul
push
call
subb
je
sub
pusha
fdivs
fcomps
inc
test
aam
jg
andl
outsb
inc
popa
sub
nop
pusha
xlat
xlat
iret
stos
mov
pop
mov
xchg
std
push
mov
flds
flds
movsl
mov
xchg
push
cmpsl
cmpxchg
inc
loope
cld
daa
sbb
int
push
mov
add
std
add
sbb
xchg
outsl
ljmp
push
std
ljmp
mov
les
and
icebp
jno
jno
fsubrl
mov
addr16
or
mov
aaa
mov
or
js
xchg
xor
add
sti
icebp
inc
pushf
into
fwait
inc
addr16
cmp
pop
out
jmp
out
dec
add
popa
mov
xchg
mov
loopne
pop
lcall
enter
imul
inc
loope
or
sub
add
stos
insb
lret
addr16
sub
movb
in
sbb
cmc
mov
movb
cs
lods
mov
aad
or
sub
or
pop
xchg
mov
sub
push
xchg
in
fidivrs
cmc
arpl
cmp
dec
sbb
xchg
in
sbb
cwtl
outsb
sahf
fnstcw
imul
inc
or
xchg
mov
test
mov
jb
mov
gs
rclb
jbe
ret
jmp
mov
inc
xchg
push
xor
mov
mov
fwait
in
sub
mov
aam
xor
adc
out
call
in
ret
mov
push
out
dec
add
sti
cs
adc
insl
cmp
mov
xchg
iret
lea
ret
jo
mov
pop
bound
adc
cmp
insb
mov
xor
fcmovb
test
in
shl
clc
jbe
or
int
cld
movsl
adc
push
test
pop
mov
cli
rcrl
jecxz
push
aas
inc
outsb
pop
rorl
mov
jle
mov
jl
imul
push
fsubr
adc
in
mov
orw
inc
pushf
fsubl
out
pop
je
or
mov
hlt
in
push
fs
mov
mov
sub
fldt
jecxz
cwtl
dec
jno
enter
sti
cmp
lret
pop
pop
in
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
push
call
mov
movb
mov
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
loop
pop
push
gs
jne
dec
xchg
jbe
add
aas
aad
in
cmc
push
jg
dec
movsl
pop
mov
inc
mov
jne
add
fisttps
lds
aad
in
cmc
outsl
jmp
pop
mov
inc
aas
push
or
jne
add
daa
xor
imul
sub
out
ss
sbb
or
mov
mov
add
lea
outsb
ljmp
push
lock
sub
ret
lock
xchg
ljmp
in
inc
scas
pop
nopl
or
out
outsl
xchg
rcrb
loope
nop
nop
repnz
mov
add
jno
dec
lret
cmpsb
add
dec
cmp
insb
sub
popa
loopne
loop
jge
pop
scas
mov
add
adc
xchg
adc
lock
pushf
jg
pop
movsl
sub
sarb
bound
fisttpll
es
aam
xchg
sbb
jg
or
mov
jne
add
addr16
xlat
in
cmc
jne
cmp
fldl
adc
gs
jne
pusha
mov
mov
aam
cmpb
adc
cmp
sbb
scas
and
xor
add
imul
lods
push
jae
sbb
sbb
add
stos
sub
adc
das
lds
aad
in
cmc
outsl
test
dec
movsl
pop
mov
inc
mov
jne
add
fbstp
pmulhw
cmc
outsl
test
dec
movsl
pop
mov
inc
jnp
daa
mov
mov
jno
mov
faddl
test
outsb
xor
jmp
ds
sub
push
and
dec
enter
jl
cmp
fdivr
jno
std
and
mov
xchg
inc
cmpsb
out
xor
xchg
or
sub
xor
adc
jp
or
cmc
in
ds
jnp
shr
imul
test
loopne
add
xchg
mov
xor
mov
mov
jmp
jbe
cld
daa
and
push
outsb
popf
dec
repnz
pop
mov
repz
push
les
mov
xor
lcall
and
sbb
jo
xchg
or
fsubr
test
mov
cmp
aad
popf
mov
xchg
adc
scas
dec
xchg
out
in
add
adc
jge
mov
cltd
jns
lret
cmp
and
cld
push
push
lret
mov
cmp
and
or
mov
pop
jmp
shll
addr16
shrl
insl
repz
out
lcall
jbe
pusha
pop
nop
pop
xchg
std
in
xchg
pop
and
stc
xchg
pop
and
cmp
mov
inc
insb
js
test
pusha
pop
pop
or
jmp
push
jp
dec
cmpsl
lret
push
mov
cmpsb
sahf
push
mov
adc
gs
adc
leave
loopne
push
xchg
mov
movsl
ret
sti
sbb
inc
mov
ss
scas
clc
dec
xor
lock
roll
shl
out
icebp
jb
fcoml
scas
pop
sar
add
mov
dec
test
xchg
pop
outsb
add
stc
cmp
push
addr16
cmp
scas
adc
in
push
add
rorl
cmc
adc
push
jecxz
std
mov
fs
jns
stc
and
jne
lock
pop
es
loope
iret
aam
shl
mov
adc
dec
jne
scas
sub
or
in
out
in
shrb
add
push
push
jmp
cmp
aaa
outsl
add
inc
sub
mov
out
pop
mov
rorb
dec
fwait
push
enter
cltd
mov
out
jbe
aaa
jle
pop
repz
jmp
xchg
mov
lods
cmp
out
sub
push
mulb
mov
out
outsl
push
hlt
push
xor
dec
xor
ret
mov
mov
aaa
xor
xchg
cmp
push
mov
and
inc
and
and
mov
data16
testl
pop
mov
or
es
jb
mov
push
mov
jg
mulb
das
xlat
xchg
sub
add
pusha
pop
xchg
jecxz
in
call
imul
mov
scas
inc
int
and
cmpsl
push
icebp
sbb
inc
mov
and
pop
je
mov
jne
loope
push
mov
inc
cmpsb
kmovw
mov
je
push
mov
scas
lods
sbb
push
mov
dec
mov
andl
insl
fnstcw
jmp
xorl
push
inc
in
dec
in
dec
pop
mov
or
adcl
push
pusha
mul
mov
outsb
dec
iret
fwait
lret
cmp
lahf
cmp
ds
push
pop
mov
imul
push
or
cld
cmp
std
movsb
je
movl
aam
lds
cmovge
rclb
loopne
adc
leave
mov
aas
dec
jnp
xor
rcrl
sahf
push
imul
and
or
push
scas
lods
aam
fimull
sub
lods
pop
sbb
lret
mov
fwait
js
stc
shlb
inc
cmpsl
loop
jne
xor
pop
pop
and
inc
mov
jg
push
in
aam
icebp
adc
sbb
mov
xor
jnp
sbb
cwtl
jmp
xor
das
adc
pusha
sub
sub
xor
and
outsl
and
movsb
out
cmp
leave
lods
insb
inc
jmp
je
scas
pop
mov
adc
add
cmp
lods
aad
sbbb
imul
push
mov
sub
pop
xor
dec
push
mov
out
fidivrs
stos
pop
xor
push
or
nop
addr16
lret
inc
add
push
sub
loopne
out
divw
je
sub
cmpb
jg
dec
xchg
jns
cld
ja
lret
loopne
push
dec
test
int3
adc
jno
adc
fcoml
stos
mov
bound
out
sub
xchg
out
xchg
fists
dec
dec
xchg
shll
xor
lods
sub
in
push
jb
ljmp
mov
dec
push
push
jns
gs
stos
hlt
pushf
push
clc
adc
mov
sub
inc
insl
inc
test
dec
imul
ss
stos
xor
jmp
adc
inc
sub
mov
test
mov
cmpsl
jns
popa
pop
adc
dec
dec
inc
mov
jl
aad
pop
pop
notl
adcb
dec
jnp
inc
inc
jp
fldl
mov
lea
and
lcall
xchg
jb
rorb
jle
mov
sbb
push
shr
repz
cld
cmp
cltd
movl
push
shll
in
and
mov
cmp
insb
or
jo
movl
ror
jmp
es
in
mov
stos
add
lret
insb
and
pusha
jbe
fiaddl
xor
mov
pop
jno
mov
pop
pop
xchg
cs
and
fnstenv
addb
loop
push
xor
push
fs
pop
xor
js
jecxz
inc
push
pop
ficomps
xchg
xchg
insb
mov
leave
nop
mov
cs
pushf
and
mov
lods
imul
push
lock
pop
mov
aam
cmpsb
enter
add
in
pop
idiv
std
push
mov
arpl
jecxz
or
testb
or
inc
cwtl
sbb
add
in
or
aaa
popa
and
and
mov
xchg
lcall
sbb
sbb
adc
and
pop
jl
aad
jae
and
aam
mov
les
push
jg
push
jg
inc
mov
outsl
jae
fisubs
dec
mov
leave
sti
popf
mov
imul
mov
out
shl
push
loopne
nop
pop
sbb
mov
cmpsl
mov
fsubl
mov
and
fdivp
lret
dec
nop
call
push
add
stos
out
inc
add
popa
mov
je
xor
mov
dec
daa
sub
cmp
mov
scas
xchg
and
mov
sub
add
stos
or
das
adc
pop
or
dec
cmp
sbb
mov
mov
imul
cltd
es
pop
pop
sub
mov
jge
das
pop
inc
jbe
mov
fcmovne
cmp
out
std
popf
fwait
push
pop
mov
cmp
scas
fnstcw
data16
mov
xchg
cli
mov
add
iret
adc
out
dec
pcmpeqw
lea
inc
pop
dec
add
clc
loope
adc
lret
add
outsl
insl
lods
js
hlt
push
ljmp
mov
lahf
popa
xor
xor
test
jae
popl
in
and
dec
fs
daa
repnz
rclb
cltd
cmp
movsb
ss
mov
sahf
adc
push
xchg
jb
cmp
icebp
std
cltd
pushf
xor
xchg
inc
xchg
ja
cmpsb
inc
daa
add
xchg
inc
push
xchg
add
mov
sbb
mov
jge
inc
dec
imul
adc
jecxz
mov
push
out
xchg
js
xor
aas
sahf
lods
sbb
andl
mov
addl
test
cmp
lods
mov
add
jo
or
or
inc
movsl
sub
popf
pop
dec
pop
sbb
ds
mov
jle
int3
xchg
cmp
fs
xchg
das
mov
push
test
pop
lods
or
movsb
lds
xor
push
loop
sahf
psubsw
adc
repnz
or
sub
nop
and
jbe
xor
and
push
aam
and
mov
jno
idiv
jbe
jbe
cli
adc
mov
fisubrl
mov
push
mov
mov
in
call
shlb
mov
lcall
lretw
and
mov
sbb
xor
cmp
in
cmp
and
sbb
hlt
js
cs
roll
adc
sub
lods
sbb
cld
pusha
pop
xchg
dec
mov
sti
or
rcr
add
mov
stc
cltd
popf
imul
xchg
movsl
icebp
lock
sub
hlt
cmp
rclb
in
xchg
mov
sub
inc
push
fnstsw
sbb
das
xchg
jae
push
cmpl
out
cmp
insb
leave
push
bound
pop
andl
ret
cmp
jmp
bound
mov
stos
insb
lds
mov
push
mov
clc
pop
and
dec
pop
mov
add
dec
test
push
dec
xchg
jnp
scas
rcll
jg
pop
cmpsb
int
cli
icebp
mov
aam
or
sbb
ljmp
push
inc
add
mov
jecxz
sub
inc
data16
push
xchg
shrb
prefetch
addl
push
mov
repnz
dec
xchg
std
dec
loopne
orl
mov
cmpsb
mov
daa
test
and
stos
iret
lahf
inc
dec
jl
xchg
mov
jmp
inc
in
fcomi
aam
test
mov
jne
call
gs
ja
inc
pop
imul
dec
scas
mov
test
mov
out
pop
push
pop
inc
aad
jns
or
push
mov
int3
cli
test
in
pusha
jecxz
inc
movq
and
hlt
dec
xchg
into
or
dec
out
or
and
dec
std
pop
ljmp
add
fwait
movsl
and
xchg
mov
mov
or
lds
and
xchg
enter
shlb
inc
xchg
ret
call
dec
ljmp
into
add
sub
les
hlt
push
ja
out
push
jg
mov
and
and
into
add
mulb
xor
push
lahf
jp
test
cli
and
sbb
lahf
xchg
popf
rsqrtps
ljmp
leave
rclb
pop
mov
mov
in
cmpsl
pop
ret
fnsave
xchg
add
or
or
enter
jne
inc
pop
movsl
xor
mov
sub
inc
rcl
call
jg
out
daa
bound
xlat
popf
or
jns
test
rorb
mov
pop
mov
adc
jb
and
adcl
ss
or
fwait
sub
orb
pop
sub
aad
cmp
mov
or
loope
pop
mov
repz
mov
sub
add
add
std
push
repz
addr16
pop
jo
push
int
sbb
jge
fwait
insb
lcall
pop
loop
outsb
or
push
lods
add
sbb
test
pop
sbb
js
dec
push
xor
imul
xor
cmp
sbb
jns
stc
pop
loopne
aad
sbb
lea
mov
inc
cld
mov
jbe
aam
divb
incb
or
je
mov
or
cmp
int3
mov
dec
das
pop
sbb
test
out
mov
out
lret
dec
sbb
pushl
mov
int3
jo
adc
sbb
jmp
push
push
or
lods
inc
sub
aad
xchg
popf
mov
xlat
jp
pop
mov
mov
arpl
lods
stos
je
mov
fdivrs
pop
mov
push
jmp
jo
sar
cmpsl
iret
sbb
das
push
and
out
xor
dec
jecxz
repz
jbe
jae
subl
mov
jle
int
in
scas
orb
sub
outsl
insb
cmp
je
adc
popf
push
and
lret
mov
cmc
xor
mov
out
mov
jmp
sbb
lea
out
leave
push
push
add
mov
mov
add
mov
cmp
push
mov
lock
cmp
in
or
mov
test
fsts
push
clc
adcl
dec
cmp
adc
negb
cmp
and
mov
push
or
fucomp
dec
and
pop
jle
jg
imul
rorl
lods
sub
fcomps
jg
pop
sub
push
movsl
andl
push
inc
pop
jg
es
mov
mov
sub
cmc
jecxz
and
jmp
xchg
imul
arpl
sahf
in
and
dec
mov
aas
shlb
pop
cmp
fnstsw
inc
mov
inc
mov
push
jge
addl
dec
jge
jno
repnz
test
pop
test
stos
or
iret
sbbb
cmpl
scas
xor
pop
add
mov
dec
xor
insb
mov
push
jae
andb
ret
nop
or
jg
lea
mov
aaa
jle
cwtl
icebp
mov
push
xchg
mov
movsl
push
in
in
cmp
sahf
dec
repz
mov
hlt
fs
push
and
bound
xor
inc
or
jbe
pushl
or
mov
mov
or
inc
imul
lods
loop
shll
inc
jle
loopne
mov
sub
ljmp
or
jp
cmpsb
scas
sbb
cmp
and
imul
xchg
or
shl
lret
call
pop
inc
mov
inc
jmp
mov
movsl
pop
adc
pushl
xchg
in
cli
dec
sub
xlat
loop
push
add
push
daa
mov
add
cmpsb
inc
je
and
cmp
out
test
xor
adc
into
pop
sbb
ljmp
xchg
sbb
movsb
push
or
sbb
aaa
shl
lods
lcall
cmp
mov
les
leave
push
xor
mov
xchg
sbb
jecxz
sub
cmpsl
cs
aad
fiadds
adc
sbb
movsl
fcomi
mov
mov
in
out
lcall
rcll
xchg
test
cmpsl
dec
xor
cmp
or
hlt
mov
cli
loop
sbb
inc
lea
push
fsubl
xchg
mov
je
jnp
mov
jno
imul
and
fsts
xchg
rcr
cltd
and
addb
xor
jl
rclb
mov
ror
sbb
mov
sbb
fcoml
push
adc
aas
enter
mov
mov
ret
mov
enter
xor
and
jbe
fstl
jp
addr16
aaa
push
enter
leave
bound
mov
push
lods
xlat
nop
sbb
movsl
mov
mov
and
and
imul
imul
push
mov
jecxz
sub
push
stc
cltd
fistpll
lods
and
leave
repnz
sub
gs
mov
push
faddl
call
push
bound
fdivs
inc
pop
dec
sbb
inc
test
cmp
and
add
fistps
cld
sub
jg
mov
jbe
insb
xor
jecxz
jae
cmc
sub
bound
mov
notl
or
pop
cli
lea
lods
pusha
push
fisttps
decb
xchg
mull
fldenv
mov
ljmp
xor
aad
sbb
jmp
test
push
shrb
mov
adc
int
push
mov
xor
in
cld
push
repz
daa
and
inc
xor
scas
push
inc
dec
add
jle
jmp
aam
aad
xchg
shll
cltd
fmul
movsl
cmpsb
and
dec
imul
add
xor
ret
inc
out
mov
jo
adc
pushf
push
lock
xor
inc
daa
mov
xor
mov
lods
dec
movsb
sub
jb
sbb
into
sbb
mov
push
push
divb
jecxz
xchg
outsl
mov
pop
sub
mov
sbbb
mov
xchg
xchg
test
inc
adc
out
les
xchg
sbb
sahf
cmp
enter
sub
js
lea
mov
cmpsl
xchg
outsl
popf
jbe
test
mov
mov
roll
aam
ret
dec
xlat
push
int
jne
pop
xor
push
jecxz
lret
mov
imul
aas
mov
or
and
into
scas
fstpl
push
push
lcall
fcomp
jge
push
callw
icebp
add
mov
cmp
stos
cmpb
inc
sub
mov
jns
mov
cmp
sub
mov
mov
mov
cld
dec
adc
jp
dec
inc
aas
negl
push
shlb
jle
inc
stc
jne
out
imul
and
add
adc
dec
lcall
mov
stos
inc
xchg
xchg
cwtl
jg
xchg
repnz
shll
sbb
xchg
mov
stos
out
or
out
sub
xchg
mov
adc
jge
push
repnz
rcll
cmpsl
call
pop
adc
sbb
xor
jp
inc
add
in
mov
lods
scas
popa
mov
sub
movsl
test
lods
push
cmp
mov
inc
jnp
fbld
inc
pop
dec
sar
cmp
ret
pop
inc
jne
cld
cmpsl
loop
jbe
lret
mov
iret
pop
mov
lock
test
loop
dec
sub
adcl
mov
fadd
push
addl
cmpl
aaa
xchg
scas
push
clc
lret
pop
imul
push
notb
sbb
sbb
ror
daa
fldl
cmp
stc
fs
icebp
jo
repnz
jecxz
xchg
cmp
mov
aad
jge
enter
call
cli
int3
call
mov
mov
inc
imul
in
adc
xchg
cmp
or
xchg
mov
xlat
sbb
fsubs
mov
cmp
popf
cmp
fmulp
jmp
add
and
inc
shlb
je
push
mov
push
sbb
sbb
lret
in
or
or
lock
cmp
inc
ja
inc
xchg
add
out
fwait
in
mov
sbbl
mov
sub
insb
adc
add
mov
clc
shlb
or
or
jne
sub
xlat
in
lahf
mov
mov
mov
or
mov
mov
lock
bound
lods
in
xor
scas
mov
cwtl
loop
sarl
push
adc
add
sbb
mov
fistl
shl
lret
in
cmp
sub
jns
shrb
push
pushf
adc
dec
call
sbb
pop
shrb
inc
cld
into
mov
out
test
inc
pop
in
pop
push
insb
or
sarl
sbb
mov
outsl
and
es
jecxz
lods
fmull
lds
cmp
or
popa
ljmp
imul
xchg
stos
mov
lea
lret
lds
outsl
jo
mov
scas
jecxz
orb
insb
test
dec
imulb
and
pop
icebp
inc
idivl
push
push
mov
jmp
dec
xor
icebp
test
push
cmp
ja
dec
jne
dec
mov
leave
xlat
dec
aaa
lea
divl
clc
or
sahf
js
imul
adc
sbb
adc
inc
inc
and
push
dec
pop
jmp
xchg
mov
ror
cmp
mov
sbb
pop
insl
mov
sub
xchg
jb
push
sahf
mov
xchg
dec
add
ficomps
sbb
pop
sbb
addr16
push
data16
into
xchg
pop
popa
jne
mov
inc
out
lahf
pop
arpl
jbe
pop
and
icebp
lcall
dec
lahf
jo
sbb
lock
sbb
sahf
adc
imul
dec
xchg
test
ja
xchg
sbb
outsl
icebp
pop
pusha
aad
hlt
js
int3
xor
lock
push
push
mov
popf
pop
and
pop
leave
les
inc
jmp
inc
add
popa
push
dec
mov
xchg
mov
lcall
add
or
and
xor
mov
bound
and
inc
and
int3
push
push
movsb
jg
iret
jmp
lea
fistpll
inc
push
movsl
scas
xchg
push
mov
pop
pop
dec
push
adc
push
lods
addr16
mov
imul
push
xor
nop
jo
out
ret
ljmp
lods
movsl
jne
scas
fimull
pop
out
icebp
cld
add
push
mov
inc
dec
push
je
cmpsb
cmp
lods
or
inc
push
orb
fldl
push
sub
test
roll
xor
sbb
jle
push
push
mov
and
push
in
xorl
call
das
lds
aad
in
cmc
outsl
test
dec
movsl
pop
mov
inc
mov
jne
add
fbstp
pmulhw
cmc
outsl
test
dec
movsl
pop
mov
inc
mov
jne
add
fidivs
push
in
cmc
outsl
test
dec
movsl
outsl
mov
inc
xchg
push
pop
gs
out
add
pop
xor
movsl
in
sbbb
imull
pop
mov
test
push
clc
cs
dec
mov
leave
enter
scas
sbb
push
sbb
cmp
jmp
xchg
popf
sub
sbb
int
fsubrl
pop
std
dec
adc
add
xor
stc
inc
jmp
lea
xchg
or
jl
loopw
nop
xor
jge
sbb
in
inc
inc
mov
int3
jbe
gs
inc
push
inc
mov
cmpsb
repnz
repz
fs
push
mov
inc
sub
push
out
sbb
imul
imul
daa
jg
or
pop
inc
divb
xchg
test
xor
mov
push
sarl
mov
mov
mov
in
jns
push
je
dec
test
mov
test
bound
out
or
fdivrl
xor
mov
lock
bound
cmp
push
insb
mov
cmp
mov
sub
insl
fldenv
cmp
or
jns
imul
mov
pop
enter
popf
outsl
mov
popf
xor
dec
sarl
or
cwtl
sub
aad
lds
aas
ljmp
cmp
pop
popf
pop
call
sbb
lcall
clc
das
cli
dec
cld
cmp
jmp
lea
popf
sub
jns
imul
mov
cmp
jmp
lea
popf
sub
jns
imul
mov
push
dec
bound
and
sub
xchg
fiadds
inc
lea
js
dec
jl
xchg
inc
fldcw
pop
and
jno
sbb
clc
sbbb
mov
sbb
jbe
rclb
dec
int
lcall
xchg
or
push
lds
sub
jnp
cmc
add
ret
shlb
fwait
xchg
inc
jg
jmp
xorb
pop
sub
imul
and
cmc
mov
xchg
jecxz
fistpll
adc
ljmp
into
mov
cmpsb
jne
jge
loopne
dec
mov
inc
mov
adc
rorl
sti
inc
and
pushl
cmp
inc
add
js
ret
sub
jo
cld
test
shlb
inc
mov
popf
or
mov
int
push
xchg
sbb
xlat
pop
rcl
movsl
loopne
movsl
mov
jbe
bt
sbb
ja
inc
mov
adc
aas
add
in
xor
scas
loop
add
jecxz
fstps
out
push
pop
xchg
push
mov
out
pop
or
xor
and
dec
adc
add
fucomi
es
gs
dec
roll
cwtl
rcrb
test
lahf
out
int
sbb
mov
inc
xchg
pop
pop
sti
test
das
test
addr16
mov
mov
sbb
mov
mov
int
lea
mov
xor
test
inc
xchg
mov
mov
sbb
add
movsb
setl
rcrl
in
or
mov
mov
pop
outsl
bnd
dec
add
das
or
add
cmpsl
lret
push
xor
xchg
jg
sbb
cli
imul
pop
xor
repnz
fsubrl
xchg
js
cltd
cmpsl
popl
ja
jg
dec
arpl
add
cmp
pushf
xchg
lods
into
std
sub
ret
add
jge
or
mov
pop
xchg
test
imul
movsb
add
frstor
test
std
mov
and
aaa
loope
pop
adc
fdivl
aaa
jns
jno
mov
xchg
pop
repz
cld
in
repz
leave
sub
popa
rolb
xor
jp
xchg
jecxz
mov
shr
test
mov
das
inc
push
jae
and
push
imul
pop
mov
jae
mov
push
jmp
shl
mov
pop
adc
push
ljmp
inc
push
rol
ss
sub
mov
lock
dec
push
push
clc
fnstsw
fwait
loopne
add
mov
test
cmp
jecxz
js
test
xlat
jnp
xchg
pop
add
pop
mov
in
rol
sub
das
test
cs
in
pop
pop
and
jae
dec
jo
mov
mov
add
jg
push
scas
sub
dec
sub
sub
les
mov
stc
push
mov
pop
pop
test
mov
andl
enter
push
mov
js
cmpl
pop
aas
test
das
lock
xchg
test
cmc
add
cmpsl
and
or
xor
or
aad
sbb
adc
lret
dec
mov
mov
pop
dec
sti
inc
daa
mov
pop
jno
in
aas
dec
mov
dec
fwait
sub
xorb
inc
daa
fwait
sbb
mov
sub
imul
cmp
vmovntps
pop
int
sbb
not
leave
inc
leave
out
mov
scas
mov
or
push
mov
dec
mov
aam
sti
imul
imul
push
stos
cmpsl
push
call
call
in
inc
pop
jmp
ret
xor
addr16
decb
sub
sbb
cmp
rcl
xchg
mov
cli
sbb
out
cld
dec
jl
mov
aad
lods
enter
or
fldenv
sub
mov
gs
fnclex
mov
call
xor
jns
test
nop
out
iret
mov
in
mov
outsl
jg
loope
adc
fmuls
xchg
aam
xor
or
gs
sub
cmp
add
jg
sti
sbb
lock
imulb
cmp
sbb
or
or
and
xchg
xchg
pop
ret
pop
iret
subb
gs
lea
negl
into
xor
insl
add
movsl
xlat
insb
pop
sbb
out
push
dec
push
pop
out
shr
mov
sbbl
data16
jne
and
sbb
popa
sub
iret
negl
and
mov
into
loopne
lds
test
cmp
cmp
sbb
fcompl
loope
fstp
ror
cltd
jp
ljmp
inc
jecxz
pop
cmp
push
mov
lea
xchg
aaa
aad
maxps
ret
push
cmc
je
lea
or
sbb
bound
xorl
push
rcll
xor
daa
aam
test
inc
xlat
push
ret
adc
in
daa
push
jae
cmp
xor
pop
push
stos
mov
ss
and
scas
scas
gs
aaa
ret
xchg
in
mov
sarb
add
call
dec
adc
ss
xchg
push
out
ja
sarb
and
in
pop
sbb
andb
rolb
xor
into
fdivl
pop
inc
cmpsl
test
pusha
shlb
push
in
xchg
hlt
fistl
mov
daa
pop
sub
mov
and
enter
pop
mov
out
repnz
repz
out
bound
sub
mov
mov
int
cmc
popa
aaa
cld
mov
ficoml
add
inc
int
ss
xchg
adc
enter
movsb
cmp
aad
and
pop
cwtl
push
cmp
and
cli
push
adc
xchg
mov
cmovge
movsl
or
mov
xchg
int
aad
jmp
arpl
mov
inc
sbb
adc
leave
in
call
push
outsl
bound
jne
jmp
outsl
ret
xchg
sub
and
cmp
leave
sbb
xlat
je
pusha
scas
jae
dec
push
imul
cmc
insl
cwtl
cmp
cmpsb
andl
popa
sbb
imul
jmp
mov
into
mov
fimuls
std
out
pushf
ja
ds
std
cli
scas
leave
lret
addr16
aam
aam
pop
cmp
pop
inc
jmp
xlat
mov
mov
add
mov
loopne
mov
cmc
sahf
mov
je
inc
mov
inc
mov
popl
add
std
sbb
mov
mov
sub
pop
cmpsl
mov
cmp
mov
and
sub
loopne
out
jno
adc
sub
sarb
leave
or
in
jo
dec
or
adc
sub
rcll
out
jbe
push
int
dec
ss
mov
fisubs
add
mov
xor
cmp
dec
jg
movsl
loope
sub
mov
cltd
inc
insl
in
push
dec
ror
imul
or
cmp
sbbb
mov
and
stc
stos
sbb
add
fsubl
sbb
nop
rcl
dec
scas
inc
or
imul
push
pop
ja
mov
adc
lret
std
push
dec
data16
cmp
xchg
cwtl
popf
lock
fbstp
sahf
lret
int
sbb
adc
pop
cmp
sahf
out
push
xchg
jmp
pop
adc
pop
xor
and
les
sub
push
pusha
xlat
inc
jb
pop
xor
push
pop
mov
inc
push
or
dec
xor
sbb
ljmp
mov
push
dec
aaa
mov
scas
pop
repnz
jbe
dec
cmp
sbb
fucomp
divb
mov
decb
in
shll
add
icebp
outsl
je
xchg
fdivl
adc
or
mov
mov
iret
jecxz
mov
mov
mov
outsb
mov
or
xchg
adc
mov
cli
je
test
pushl
dec
jb
in
cmc
jp
push
loopne
mov
mov
xchg
jl
test
ret
cld
inc
fwait
pop
mov
sub
xchg
jns
xchg
xor
xchg
cld
imul
mov
xchg
fldenv
xor
out
iret
add
repnz
add
xchg
cwtl
gs
sub
arpl
or
jnp,pt
cltd
outsl
lock
cmpsb
mov
mov
in
dec
or
inc
and
daa
dec
mov
fiadds
sbb
stc
call
mov
mov
popa
orl
adc
in
dec
jge
psubusb
jmp
ret
inc
lret
loope
pop
push
insl
fwait
push
daa
mov
jbe
dec
sub
cmp
sub
mov
pop
lret
shll
and
xor
daa
cmp
ret
test
push
sbb
loopne
push
nop
cmc
arpl
cmp
pop
mov
dec
js
es
nop
popa
pushf
ret
addr16
xchg
mov
outsl
sbb
xchg
jbe
dec
add
mov
xchg
in
jae
in
xchg
negl
cwtl
push
jecxz
xchg
scas
fwait
add
test
notl
mov
cmc
cmpb
sti
sub
mov
test
mov
out
setg
arpl
dec
push
push
push
movb
out
sub
push
mov
and
stos
pop
popa
int3
jle,pt
push
cmp
dec
mov
push
xor
mov
mov
push
aas
jo
mov
jno
cmp
mov
ljmp
stos
dec
imul
outsb
nop
adc
add
repz
and
leave
dec
outsb
testb
or
imulb
or
mov
mov
push
loope
adc
lock
sub
push
enter
scas
pop
icebp
out
rclb
mov
adc
cmp
pop
cmpsl
aas
mov
xchg
mov
jae
push
test
incb
push
sub
mov
adc
mov
push
nop
sbb
repz
push
dec
fbld
pop
or
mov
xor
add
fisubrs
push
add
repz
rcrb
cmc
or
test
xor
jmp
inc
lods
sbb
push
jg
mov
push
das
adc
mov
scas
movsl
repz
shrl
and
add
mov
and
out
cmp
add
sub
dec
mov
sub
mov
fidivl
sbb
dec
shr
cwtl
pop
stos
and
bound
vpmacssdql
push
xor
or
pop
movsb
repnz
bound
jne
mov
jp
rolb
das
mov
mov
and
and
lods
cmp
mov
mov
lods
notb
shr
add
sub
sbb
mov
clc
mov
rcll
ja
clc
in
adc
push
add
cmc
movsb
jl
mov
shrw
scas
or
xchg
in
enter
push
adc
mov
lahf
pop
add
sbb
push
mov
or
es
push
sbbb
or
or
xchg
stc
mov
mov
call
or
into
pop
in
xlat
jns
xlat
jb
cs
lahf
xchg
aas
lea
test
or
dec
rcrl
xchg
lcall
lods
ret
lea
xchg
and
sbb
nop
pop
imulb
dec
cltd
lock
cwtl
int
or
or
fisttpll
xor
push
popf
imul
das
sub
xlat
dec
adc
xchg
iret
popa
sub
inc
xor
jnp
mov
sub
lahf
xchg
push
xorb
adc
xchg
out
push
out
ret
jo
pop
cmp
mov
insl
push
mov
jne
mov
sbb
loop
mov
push
xor
mov
xchg
out
xor
sbb
ja
push
xchg
data16
or
push
xchg
aas
add
sub
fidivs
arpl
arpl
in
fnstenv
dec
scas
lcall
ds
shr
xlat
movsb
ljmp
pop
xor
clc
mov
testl
outsb
cmp
xor
rcrb
push
mov
decb
rolb
xor
in
addl
and
fisubrl
cmp
sbb
imul
pop
mov
in
adc
lcall
stc
out
xchg
or
fcmovb
xor
xchg
and
cmc
test
and
loop
pop
into
push
and
in
inc
sub
arpl
movsb
ret
jg
add
das
add
stc
jae,pt
int3
xlat
jp
push
pop
cmp
popa
stc
dec
push
enter
inc
jne
in
test
aam
or
mov
aad
xchg
or
add
in
test
pop
pusha
mov
inc
sbb
mov
adc
lods
sbb
and
in
inc
xchg
popf
cmpsl
push
xchg
das
clc
pop
fistpl
push
mov
push
data16
lock
sub
or
movsb
pop
movsl
into
stos
clc
movsb
rclb
jge
pop
xor
jb
in
inc
jg
fldl
push
pop
cmpb
ret
lahf
fwait
cmpsl
xchg
loopne
sub
cmpsl
frstpm(287
push
adc
pop
sahf
std
sbb
sbb
aas
scas
or
stos
fldenv
cmp
test
popa
xor
imul
fldt
xchg
stos
xor
out
adc
push
pop
aad
push
pop
mov
add
stc
das
sti
mov
cmpsl
aam
pop
or
or
and
test
div
cltd
adc
fidivs
cmpsb
mov
sbb
jbe
pop
jecxz
xor
cmp
or
xchg
mov
icebp
cmp
enter
std
test
pop
dec
jge
scas
or
pop
push
pop
inc
nop
sbb
cmpsb
xchg
inc
mov
out
push
aaa
stos
adcl
shl
fwait
sti
iret
jle
inc
push
sarb
insl
adc
hlt
dec
cmp
sub
fsts
leave
dec
cmp
mov
dec
and
in
sbb
dec
xchg
dec
sub
xor
mov
sub
hlt
lods
mov
xor
mov
das
rorl
jnp
dec
and
loopne
xor
inc
lods
sub
ss
xor
les
or
push
xor
ret
add
jne
data16
call
lret
or
push
pop
push
and
data16
jae
xchg
pop
pop
mov
lock
or
xchg
hlt
sub
adc
scas
xchg
and
scas
int
insl
or
push
clc
lds
ss
loop
cli
jle
fisubrs
push
stc
inc
sbb
or
mov
jmp
hlt
test
inc
scas
dec
mov
xlat
mov
sbb
ja
xchg
loopne
lahf
stos
and
inc
sbb
cld
jl
scas
shr
pop
lds
iret
decl
cmp
cli
adc
jmp
cltd
push
lahf
lcall
sub
add
aaa
aam
stc
lret
je
fstpl
std
mov
cmp
les
and
nop
and
ret
sub
jne
jp
addr16
mov
fstps
jl
arpl
sub
adc
inc
sub
lds
ret
test
push
cmpsb
std
rcrl
adc
cmp
stc
movsl
insb
insl
mull
pop
pusha
jae
gs
aad
pop
pushf
into
repz
aaa
repnz
fcmove
jo
aam
aaa
pop
push
movsl
lret
es
adc
inc
pop
movsb
cmc
loope
push
jp
mov
idivb
mov
loope
ljmp
pop
xchg
fistl
pop
mov
rorl
faddl
and
cwtl
pop
add
icebp
and
sti
jle
lods
jg
sbb
sub
scas
push
inc
add
lds
andb
push
pushf
push
and
or
mov
les
lcall
out
das
dec
cmp
inc
pop
inc
pop
and
fcomps
push
jle
es
sub
sub
lock
pop
outsb
imul
pop
dec
or
rcrb
fwait
jg
sarl
cmpsb
movb
scas
es
addr16
orl
movsw
xchg
fldl
in
test
mov
cmp
inc
or
pop
lock
icebp
fs
mov
cmc
cmp
pusha
add
or
pop
in
into
cs
rclb
pop
inc
int
pop
insb
sti
mov
and
call
mov
loop
iret
sub
mov
ljmp
and
icebp
cmp
xor
popa
pop
fwait
mov
repnz
enter
lahf
sub
sarb
mov
repz
jnp
adc
xor
es
jle
lret
leave
out
pop
mov
cmpsl
dec
add
mov
sbb
dec
mov
jno
adc
fsubl
stos
xor
pop
jge
jecxz
cmp
stos
inc
adc
sub
and
inc
pop
mov
int3
adc
jmp
dec
ret
int
inc
cmp
fst
jnp
into
scas
js
lods
hlt
test
lret
es
push
push
adc
loopne
outsb
add
jae
jl
xlat
cs
push
int3
fistpl
fdivrs
xchg
or
mov
int
fdivs
push
mov
fdivl
cmp
mov
les
inc
inc
mov
repnz
repnz
sti
test
movsb
pop
testl
pop
jo
xor
stos
jl
inc
js
pop
rcll
mov
jae
sbb
aad
bound
and
add
dec
sarb
insl
dec
sub
adc
inc
pop
and
out
jb
aas
cmp
std
mov
es
dec
sbb
jne
aad
cmp
mov
dec
and
insb
fnsave
sub
mov
fists
inc
gs
jmp
lahf
fisttps
xor
adc
rorl
mov
add
lret
cmp
jns
jae
dec
mov
dec
adc
xor
bound
stc
popf
int3
dec
xor
sbb
jecxz
ss
sub
les
or
notl
mov
hlt
in
push
loopne
push
clc
dec
adc
and
fisubl
fwait
test
mov
push
mov
lret
stos
mov
popf
push
jl
aaa
loope
mov
rcl
stos
loopne
sbb
inc
pop
loopne
xor
add
add
cmp
fldl
pop
mov
cwtl
adc
push
arpl
aad
daa
push
out
xor
mov
test
lods
ja
jns
jecxz
fsubl
setl
fmull
pop
mov
push
imul
movsb
test
js
add
xor
sub
in
mov
testb
jae
cmpsb
arpl
imul
jns
mov
jle
push
jecxz
popa
imul
iret
test
int
outsb
adc
xchg
out
scas
cltd
xor
cmpb
sbb
jecxz
push
push
cli
jns
mov
sarl
inc
aad
cwtl
jne
imul
out
movsb
loope
test
js
mov
sub
xor
rcll
cs
movhps
add
xchg
or
sbb
xchg
mov
sbb
iret
jmp
mov
scas
add
adc
sub
dec
sbb
jbe
scas
xchg
push
dec
js
clc
mov
push
jae
xchg
pusha
scas
push
or
scas
lea
mov
das
inc
dec
adc
mov
xor
push
or
mov
ret
or
cmp
xchg
mov
dec
pop
nop
add
loopne
rcrl
jmp
xchg
adc
ljmp
daa
dec
xor
leave
mov
xlat
stos
xor
mov
jmp
rorb
ret
lods
cmpsl
sbb
loop
out
push
inc
pusha
out
jecxz
add
fsubrp
add
js
in
leave
mov
push
movsb
pop
in
sub
sbb
les
xchg
iret
loope
sub
mov
lods
add
dec
pop
mov
inc
cmp
out
neg
rorb
mov
pop
sbb
ret
dec
shll
jmp
stos
xchg
out
nop
repnz
sub
stc
jbe
enter
mov
je
leave
test
cs
adc
je
or
inc
movb
pop
bound
sti
pop
aam
or
and
mov
cs
mov
adc
cmp
mov
pusha
pushf
rorl
xor
inc
sub
mov
or
sub
or
sub
rolb
scas
bound
popa
aam
pop
adc
or
dec
xlat
les
imull
jae
stos
dec
and
int3
repz
mov
pushf
enter
push
jns
inc
mov
lock
sbb
xor
addl
notb
jns
test
shr
cld
mov
jmp
mov
rcrb
adc
or
out
rorl
mov
jo
xor
push
sbb
dec
std
gs
dec
in
xchg
scas
lods
sub
pop
mov
hlt
aas
pop
mov
test
dec
stc
pop
jmp
lea
popf
sub
jns
imul
mov
cmp
jmp
lea
popf
sub
jns
imul
mov
cmp
jmp
lea
popf
sub
jns
imul
mov
cmp
jmp
jb
bound
mov
cmpsb
add
in
xor
mov
push
push
push
push
movl
movl
movb
call
mov
andl
push
movl
pushl
movb
call
andl
push
push
mov
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
pop
pop
leave
ret
pop
pop
fisttpll
jnp
imul
mov
sub
pop
lret
jge
or
sbb
cmp
pop
fisttpll
jnp
imul
mov
lret
or
jge
or
mov
fstl
arpl
jae
add
xor
pop
call
outsb
aam
decl
pop
fnstsw
mov
sarl
int3
add
ljmp
add
add
mov
cwtl
pop
push
rcrl
xchg
clc
daa
enter
mov
adc
sti
loop
and
fsubl
loop
pushf
xor
nop
pop
and
or
jbe
fisttpl
adc
fnsave
scas
mov
fnsave
sbb
scas
pop
cmp
in
cmpsl
dec
push
cmp
fisubs
mov
test
pop
fistl
inc
and
add
pop
cltd
jne
test
ret
movsb
fnstsw
cmpl
xchg
push
scas
push
cmp
mov
mov
jns
sbb
lods
xchg
dec
fstpl
std
imul
mov
shrl
jge
or
mov
cltd
cmp
sbb
push
push
fmuls
mov
lret
add
sbb
inc
aam
xchg
xor
add
sbb
inc
lods
dec
lds
pop
scas
xor
inc
jmp
mov
and
mov
pop
int3
sub
sub
pop
lret
insl
sti
jge
or
mov
fisttpll
jnp
imul
mov
lret
insl
sti
jge
or
mov
fcomps
cld
scas
imul
fsubrl
lods
push
or
dec
shrb
add
cs
sti
subb
mov
jle
mov
sbb
sub
jecxz
mov
cmpb
mov
ds
mov
fidivrs
hlt
push
mov
aad
adc
les
xchg
and
ftst
iret
in
adc
xlat
jb
add
hlt
mov
mov
imul
xchg
rcll
jno
and
and
cmp
add
xor
adc
fistps
xchg
inc
fs
dec
in
inc
mov
push
jae
xchg
push
test
mov
and
pop
je
fnsave
inc
aas
fidivl
cld
inc
pop
imul
xchg
stos
aad
xor
mov
adc
out
jnp
jb
aad
mov
fnstsw
inc
jg
shll
lcall
int3
mov
out
mov
insb
sub
push
jns
aam
stos
pop
and
add
mov
dec
movsl
push
enter
iret
shl
adcl
in
lahf
shll
push
aam
pop
cmpsl
js
xor
enter
inc
ds
std
push
mov
out
jmp
pop
jle
mov
out
mov
out
push
xchg
xchg
test
in
hlt
inc
xchg
xchg
mov
push
adc
lods
loope
push
iret
mull
daa
and
shlb
sub
mov
pop
ret
xchg
out
mov
sbb
fs
sbb
inc
ljmp
enter
push
pop
lret
pusha
push
cmp
mov
sbb
movsl
bound
leave
push
sub
addb
imul
add
aam
repz
or
jnp
sbb
sbb
push
lret
xlat
out
ds
mov
lcall
cmp
mov
lods
xlat
mov
scas
fistps
or
xchg
dec
push
pop
pop
mov
mov
add
std
ds
icebp
repnz
jecxz
jl
push
add
loop
adc
or
js
sbbl
xor
push
nop
mov
or
enter
xlat
mov
mov
jg
loop
jg,pt
add
xorb
jg
aas
and
lcall
jnp
fcmovbe
fidivrs
jno
sbb
push
bound
nop
das
gs
xchg
in
call
insl
test
add
jecxz
ds
or
xor
mov
faddp
lahf
sahf
ds
shl
and
dec
aaa
arpl
pop
data16
dec
dec
ja
mov
test
out
xlat
loope
mov
loope
nop
xchg
in
dec
add
pop
sub
aad
test
nop
adc
inc
dec
test
sub
jo
xchg
aas
fnstsw
sbb
dec
ret
jp
stc
ds
leave
repnz
imul
jmp
xchg
push
push
shr
push
addr16
call
push
pop
pop
mov
push
xchg
add
movsb
adc
push
inc
xchg
cmp
push
leave
int3
rcr
pusha
xchg
shll
fimull
inc
pop
ret
dec
aas
fcoms
sbb
call
mov
out
pop
into
xchg
dec
clc
bound
mov
and
outsl
mov
add
pop
push
xchg
ret
dec
or
fildll
pop
fiadds
cmp
xchg
push
test
push
sub
dec
push
pop
mov
xor
aad
lods
jbe
push
sbb
int
pop
dec
mov
xor
cwtl
cli
ror
mov
sub
cwtl
rclb
scas
lods
pop
subl
orb
mov
arpl
frstor
into
push
loopne
adc
popa
jno
out
jle
sub
dec
xlat
call
pop
into
mov
push
pop
sbb
loope
ret
test
cs
fcoml
aas
fisubrs
cs
repnz
sub
lods
mov
loopne
inc
rolb
shlb
or
dec
jecxz
stos
push
xchg
push
dec
insb
andb
push
sub
jmp
ja
dec
xlat
gs
rol
pop
inc
cmp
sub
mov
cmp
popf
inc
xor
add
bound
faddl
or
dec
dec
cwtl
push
and
sub
mov
in
cmpsl
dec
cmpb
sarl
pusha
pop
ficoml
sub
enter
mov
dec
lock
jne
sahf
sbb
mov
add
xor
aad
mov
sti
lret
xor
in
or
dec
push
repnz
push
push
xor
iret
jb
test
cmp
sarb
movsl
arpl
or
jne
in
iret
jno
iret
push
dec
xchg
sub
jecxz
icebp
fisttps
and
cs
ror
pop
push
sti
cmpsb
movsl
jnp
cmpsl
xor
sub
add
repz
pop
sub
push
mov
fdivp
dec
std
or
xchg
jp
sbb
vmovntps
lcall
push
mov
mov
out
aad
out
insb
pop
xchg
cmp
insl
insb
and
mov
jge
scas
mov
push
cmpsl
xor
sbbb
and
sarl
jns
enter
lock
and
in
mov
push
mov
inc
jl
sbb
push
adc
cmc
pop
pop
lahf
pop
sbb
cmp
nop
adc
test
sahf
out
loop
or
dec
jnp
stc
lret
in
cmp
jge
imul
repz
xchg
sub
aas
mov
cltd
je
out
and
repnz
std
cmp
nop
xorb
shll
jp
push
and
es
mov
pop
adc
outsl
test
inc
jns
pop
or
jge
ficomps
paddw
mov
mov
dec
pop
data16
movsb
xchg
inc
mov
lea
mov
pop
mov
and
mov
outsl
xor
pushf
in
mov
aas
dec
roll
cmpsb
dec
and
cld
xchg
pop
addr16
dec
decb
int3
cmp
popf
xchg
fucomi
aam
add
lahf
push
pusha
pop
sti
xchg
pop
sub
lcall
mov
lods
test
loop
stos
test
push
xchg
icebp
mov
push
jnp
or
adc
lods
xor
ss
xchg
aaa
aad
pusha
mov
repnz
sub
adc
in
pop
pop
sbb
repz
sarl
push
add
xchg
sub
outsl
insl
out
adc
in
call
mov
pusha
cltd
add
or
xchg
pop
xor
push
push
or
or
xchg
xor
orl
pop
or
idivl
loopne
cmp
inc
sahf
jecxz
mov
ffree
sub
and
in
add
fistps
lock
cmc
adc
push
sahf
iret
inc
je
sub
cli
and
jbe
fnsave
ficomps
stc
popa
out
jmp
adc
sub
dec
cltd
negl
and
leave
sub
or
adc
in
fs
mov
xor
in
ja
xchg
add
ja
jno
subl
enter
cs
pushl
addr16
pop
dec
in
mov
dec
test
es
and
fldl
xor
inc
or
test
jb
pop
lea
movsb
test
aad
loop
pop
cmc
push
xchg
sub
push
mov
push
or
mov
cltd
loopne
mov
imul
mov
sub
and
loopne
sbb
pop
sub
add
sbb
ljmp
push
adc
sarb
out
aas
pop
xchg
dec
sbb
and
or
and
test
mov
add
xor
push
mov
dec
jmp
fidivrs
fists
adc
ljmp
fisttpl
jp
jp
rol
andl
sbb
cmc
cmpl
fchs
loope
xor
cltd
jns
adc
gs
mov
cmp
inc
xor
dec
insl
cltd
push
and
pop
jb
and
xchg
pop
insl
dec
xor
jbe
add
je
mov
inc
and
or
jnp
into
jno
popf
xchg
cmpl
sub
dec
stos
pop
mov
fcomi
pusha
arpl
dec
mov
inc
filds
mov
int3
sbb
shl
sbb
push
ds
out
movsb
xor
pop
cmpsl
ja
pop
fsts
push
or
sahf
push
insl
into
jnp
mov
into
cmpsb
mov
adc
sub
sbb
int3
mov
jne
push
sarb
aam
test
lods
mull
fildll
xor
shlb
and
xor
mov
inc
das
or
ss
jo
lock
icebp
shlb
mov
bound
cli
mov
mov
lds
lds
mov
mov
pop
ljmp
cmpsl
push
ret
mov
sarb
into
cld
mov
jae
rcr
xor
mov
xchg
data16
jmp
cmp
sbb
mov
push
sub
inc
push
dec
stc
movsb
dec
add
lret
xchg
je
inc
incl
adc
sti
daa
jb
jne
cld
dec
jecxz
rcr
stc
push
xlat
adc
cmp
mov
test
cld
cmc
test
jno
scas
pop
das
sbb
fcoms
push
js
xor
dec
inc
cmp
mov
aad
fmull
scas
imul
pop
ret
cmp
pop
hlt
mov
mov
pop
cmp
mov
movsl
movsl
jmp
inc
in
repz
or
or
popf
negb
jbe
dec
xor
cmp
push
bound
dec
jp
test
add
sub
icebp
flds
dec
adc
incl
in
dec
ljmp
stos
xchg
std
lcall
push
cmpsb
or
mov
inc
pusha
mov
flds
loope
mov
push
pop
adc
cmpsb
jp
jle
mov
pop
dec
repnz
or
sub
mov
adc
inc
nop
lods
mulb
rcl
sub
imul
jno
mov
pop
loop
lods
clc
movsl
xchg
jb
js
mov
repz
pop
cmp
fdivs
into
ljmp
push
loop
or
out
xlat
and
std
call
cli
lock
ret
xchg
lds
fsubr
mov
inc
test
lahf
sbb
aaa
xor
in
mov
lahf
hlt
and
adc
rolb
push
int
inc
imul
iret
mov
insl
clc
and
pop
test
lods
push
mov
int
sbb
sets
sbb
xchg
testb
addb
fwait
daa
cmc
shrb
call
jecxz
cmp
outsb
xchg
into
inc
stos
push
xchg
addl
in
push
fcoml
push
push
sub
mov
cmp
shll
lret
push
pusha
inc
addb
je
clc
mov
inc
jae
mov
sti
sahf
sbbb
inc
mov
outsb
mov
sbb
in
cmp
movsl
inc
pop
pop
sub
add
out
loope
arpl
add
pop
lret
loop
outsl
add
addr16
push
mov
icebp
in
popf
addr16
outsb
outsb
flds
mov
js
imul
lods
ss
aas
ja,pn
iret
test
xlat
cmpsl
outsl
sub
mov
dec
jecxz
adc
or
sarb
add
cmp
push
ja
xor
imul
aas
pop
lea
ds
loop
imul
fistpl
sar
pop
and
xchg
push
nop
push
int3
sub
xchg
in
pushf
div
cmp
lock
iret
mov
out
xlat
mov
out
dec
cmpb
testl
jp
push
repz
or
dec
pop
jbe
iret
addr16
call
mov
or
cwtl
ss
loop
push
pusha
stos
filds
lret
sbb
mov
mov
jl
cs
add
xor
sub
jno
adc
test
std
or
xchg
subb
lret
rolb
adc
aas
inc
push
and
mov
xor
or
inc
push
aam
out
sbb
push
and
lock
dec
ret
push
push
fisubrs
jno
inc
sbb
lahf
lods
cmp
jecxz
into
loopne
lahf
popf
sarb
nop
pop
ds
adc
test
out
fdivrl
xlat
mov
mov
sti
xor
scas
clc
aad
aas
sub
add
xchg
lcall
sub
cltd
cmp
cli
fimuls
cmpsl
add
test
adc
loopne
int
jg
fsub
sbb
mov
inc
cwtl
adc
sub
int
inc
and
jg
lahf
mov
cmc
mov
mov
inc
test
pop
pop
inc
or
mov
ja
xchg
push
dec
rorl
jmp
xor
mov
jl
scas
pop
repnz
xchg
pop
inc
sahf
mov
test
push
inc
jg
sub
imul
fmuls
push
pop
mov
sub
dec
xchg
fnstsw
test
xchg
pop
mov
incb
inc
movsl
jle,pt
std
mov
outsl
in
and
cmp
shll
xor
js
mov
pop
add
add
jne
and
inc
xor
mov
jb
adc
stos
and
rorb
leave
arpl
or
cmp
bound
ljmp
add
jmp
test
and
mov
push
cli
mov
ret
sbb
sbb
out
enter
mov
je
lret
shrb
sbb
push
or
sbb
test
add
bound
shlb
faddl
es
lds
das
push
pop
cmp
adc
push
cltd
cmp
int3
inc
mov
jno
insl
pushf
data16
cmp
cld
nop
cmp
pavgw
and
pop
mov
ret
mov
jl
jno
cmp
mov
aas
pop
call
add
pop
push
lcall
fdivrs
push
xchg
sub
mov
lahf
les
xchg
sub
mov
xchg
push
cmp
std
add
cmpl
pop
cs
lock
inc
jp
nop
mov
jo
jmp
scas
clc
insb
inc
insb
jle
push
push
stc
cmpl
cmp
addb
mov
insb
mov
dec
mov
insl
cli
or
sub
xchg
enter
lods
push
lahf
ret
lods
xchg
outsl
ds
xlat
int
shll
sub
rcl
shrl
popf
sub
clc
jl
jbe
mov
add
popf
adc
dec
test
jbe
jle
roll
nop
iret
js
or
jo
shl
cmc
adc
ss
popf
pop
jbe
pop
mov
inc
mov
xor
cmp
sub
xchg
lret
les
mov
sbb
sar
xchg
movsb
js
lcall
cmp
lods
xchg
movsl
mov
push
fldl
roll
xchg
xchg
jne
cmc
mov
push
jae
stc
push
add
sbb
sub
andl
into
mov
mov
data16
xchg
push
in
push
mov
sbb
xlat
sbb
adc
xor
and
iret
aad
xorl
mov
rcrl
out
les
outsb
inc
stc
lret
cmp
xchg
ljmp
push
ret
sbb
jnp
inc
ret
loopne
sub
jnp
add
jmp
gs
mov
cli
fimuls
fldcw
ja
out
push
movsb
aam
dec
mov
push
add
imull
ret
xor
and
jo
ja
loope
pop
mov
mov
fucomip
mov
rorl
movsb
jbe
ds
or
inc
sbb
xor
and
push
jle
inc
js
inc
and
leave
sbb
jmp
push
add
cmp
in
adc
lock
pop
pop
add
bound
test
fucom
dec
or
out
shlb
adc
pop
fimull
inc
sbb
fldcw
mov
adc
nop
xor
or
xchg
ret
frstpm(287
mov
pop
jnp
sub
adc
jmp
mov
jp
add
jmp
hlt
sub
jmp
pop
ljmp
iret
pop
cld
ficoms
add
sbb
into
jns
mov
mov
adc
inc
adc
cwtl
xchg
add
mov
jbe
push
fimuls
repz
push
pop
jp
movsb
pop
lcall
int
pop
pop
sub
stc
pop
sbb
fistpll
jbe
xchg
lret
ja
dec
test
adc
and
mov
loope
or
cs
push
sbb
repz
xchg
aas
movsl
jge
mov
test
and
sub
rolb
rcll
fcos
cli
push
jmp
add
aad
enter
test
xor
dec
call
addl
xlat
add
xor
aaa
mov
jae
jns
cltd
fisubl
fdivr
mov
sub
cs
lods
pop
sbb
cmpsl
push
repz
scas
nop
fadds
test
hlt
std
jns
jns
or
cs
fwait
in
arpl
shrl
lret
jo
adc
push
cmpsb
jle
das
jle
repnz
jns
mov
in
stc
xchg
out
jae
pop
mov
sub
shl
jecxz
shrb
jmp
stos
cwtl
pusha
shlb
mov
mov
push
insl
outsl
mov
mov
adc
xor
xchg
jp
jbe
jae
mov
sub
sbb
push
adc
aad
andb
dec
ss
in
jge
mov
push
jge
jbe
imul
bnd
cmp
pop
push
mov
daa
adc
xchg
mov
sbb
pop
jmp
lods
pop
cwtl
jo
lret
sbb
pusha
dec
xor
dec
push
insl
adc
inc
mov
xchg
sbb
pop
mov
out
sti
loope
bound
in
push
add
ja
es
mov
lods
jb
push
aad
push
outsl
and
dec
outsb
hlt
xor
cmp
xor
in
pop
ss
nop
push
pop
mov
in
push
cmp
xchg
mov
pusha
ret
push
ljmp
insl
shll
addl
or
jg
fisttpll
das
insb
dec
sahf
cmc
call
inc
iret
or
xchg
cmp
cmp
jle
pop
aam
push
mov
sbbl
cmp
lcall
push
jne
mov
movsb
addr16
leave
imul
push
dec
inc
mov
xchg
pushf
je
mov
lods
mov
add
cmpl
imul
test
xchg
cmc
aaa
mov
jecxz
enter
jb
sub
cmp
push
push
adc
cltd
pop
and
pop
cmc
mov
sbb
and
and
mov
cmp
hlt
push
mov
cmp
pop
dec
pusha
call
stos
inc
outsb
and
add
mov
aad
movsl
iret
dec
outsl
test
sbb
lcall
pop
push
les
stc
sarb
jnp
jnp
cmp
mov
mov
loopne
jmp
icebp
push
loope
sub
cmpsl
jo
mov
sub
clc
imul
cmp
xor
movsl
pop
lds
xchg
mov
sub
cmp
push
nop
adc
adc
mov
xlat
sub
out
sub
mov
mov
mov
xchg
movsl
insb
mov
jb
inc
or
or
cs
data16
hlt
sub
inc
mov
jg
jmp
add
idivl
adc
mov
xchg
jg
into
mov
jle
fwait
pop
sbb
pop
fsubl
shlb
dec
insb
inc
adc
pop
scas
je
pop
sti
test
pop
mov
xchg
outsb
or
sbb
xchg
sub
inc
sub
out
cltd
imul
stc
fsubrl
clc
xor
jle
fimuls
pop
shl
inc
push
jno
lret
cmp
movb
mov
fwait
mov
loopne
mov
orb
inc
loope
in
ficompl
push
jb
and
push
outsl
leave
fnstsw
js
sbbl
mov
idivb
lret
dec
sub
movsb
mov
and
hlt
into
fisttpl
or
or
inc
aam
arpl
dec
pop
pop
test
push
mov
xor
push
in
mov
out
push
inc
mov
fcoms
bound
and
pop
and
inc
fcoml
mov
test
aad
mov
jbe
xor
xor
dec
lods
and
in
sbb
dec
and
mov
out
aas
seto
fucomp
repnz
inc
loop
orl
mov
in
ljmp
mov
xchg
inc
cmp
cld
or
adcl
mov
cmp
push
aaa
xor
inc
mov
mov
or
xchg
sbb
lret
inc
mov
cwtl
xor
jmp
mov
inc
mov
les
dec
cmp
imul
mov
lret
insl
sti
jge
or
mov
fisttpll
jnp
imul
mov
lret
insl
sti
jge
or
mov
fisttpll
jnp
imul
mov
lret
insl
sti
jge
or
mov
fmull
jg
imul
mov
popa
sti
jge
jp
xchg
hlt
rol
ret
fnstsw
int
std
sbb
imul
ja
in
pop
dec
mov
insl
jmp
cmp
cmp
gs
sbb
imul
mov
insl
test
cmp
lret
int
std
shr
popf
sbb
int
lcall
dec
mov
pop
test
or
jns
xchg
mov
mov
jge
cmp
fucom
lea
gs
jb
mov
movsl
pop
loopne
sub
push
frstor
rcl
enter
or
andl
popf
mov
lods
stc
sbb
in
cmc
and
in
cld
cmc
stc
xchg
pushf
jns
mov
pop
std
test
mov
xchg
push
dec
stc
pop
enter
inc
xor
sub
test
xchg
popf
icebp
jb
inc
sar
mov
cmp
fcompl
aad
dec
xor
xor
xchg
push
nop
mov
mov
insl
insl
fs
stc
leave
sub
sub
or
sbb
lea
ljmp
jge
insl
mov
cmp
dec
push
jge
popa
stos
push
repnz
int3
cmp
xor
and
adc
add
mov
pop
xchg
js
add
sbb
mov
sbb
and
jb
bound
lea
push
icebp
jns
dec
mov
mov
insl
jmp
cmp
cmp
or
sbb
imul
mov
insl
jmp
cmp
lahf
fmul
psubusw
pop
push
jae
rorl
rcrl
pushw
ret
or
int
xlat
jmp
jl
cld
mov
mov
cmp
addr16
and
shrb
movsl
xchg
lds
jg
sub
sub
mov
ror
sti
adc
jns
cld
inc
sbb
sbb
int3
cli
das
mov
jb
inc
das
and
or
ret
repnz
jno
pop
and
movsb
pusha
xchg
adc
jbe
scas
mov
enter
and
and
mov
xor
jbe
inc
jae
mov
hlt
int
addb
fsubrp
test
pushf
in
js
ljmp
cld
cmp
fcomp
inc
sbbb
push
sbb
add
cli
push
xor
out
dec
add
icebp
pusha
pop
add
mov
add
mov
pop
mov
or
xchg
pop
push
orl
mov
or
cld
shrl
jp
sar
into
mov
push
out
sub
stc
push
ficomps
inc
imulb
into
or
mov
pushf
xchg
pop
in
out
jnp
pop
pop
leave
jae
fbld
je
imul
dec
jmp
sbb
jne
xchg
out
pushl
cmp
rclb
mov
add
jb
mov
cmpsb
xor
adc
aas
inc
cmp
xor
and
shll
add
aas
xor
mov
xor
scas
cmp
lret
and
lahf
popf
lods
leave
push
pusha
jmp
int3
ficoml
xchg
bound
dec
fldt
jbe
xor
in
ret
mov
fnstcw
mov
and
mov
jp
je
and
arpl
shlb
test
cmp
fnsave
xchg
fldt
sbb
in
ret
test
jp
fdivrl
sti
jge
push
adc
add
jns
mov
cmpl
cmp
imul
mov
in
test
lea
dec
cmc
inc
xchg
stos
lods
xchg
push
sbb
sbb
ja
xor
jne
dec
jae
sub
bound
into
jns
into
movsl
jns
dec
mov
ret
adc
fsubp
mov
push
pop
xchg
data16
orl
fcoml
mov
adc
mov
repnz
sub
insb
mov
fistpll
popa
mov
mov
mov
pop
pop
jae
inc
cmc
imul
sub
add
imul
xchg
pop
sti
adc
lods
dec
out
ret
in
rolb
jp
push
sub
jp
or
ljmp
shl
lods
mov
dec
enter
std
push
adc
movq
xor
or
stos
pusha
jns
add
inc
sub
xchg
or
stos
mov
aas
pop
push
jno
mov
nop
inc
icebp
cmp
sahf
cmp
data16
xchg
add
xor
inc
adc
jp
into
pop
icebp
adc
inc
out
scas
and
movl
ret
xchg
mov
jle
cmp
lret
or
xchg
mov
add
cmovs
mov
fldt
sbb
outsl
sti
sbb
addl
push
jbe
jno
xor
add
repnz
push
cmp
push
mov
adc
pop
push
cmc
fstps
loopne
sbb
jb
mov
outsl
arpl
jmp
add
push
jns
or
lods
pop
cmpsb
pslld
lret
cmovle
or
lret
in
inc
sbb
out
dec
sbb
test
outsl
test
push
sbb
divl
filds
in
jbe
push
mov
addb
mov
mov
loop
test
movsb
add
mov
jno
scas
test
insb
dec
jg
fcmovnu
mov
test
imul
xchg
loope
aad
jo
popa
mov
ficomps
add
and
or
and
jmp
push
inc
repnz
test
cltd
int3
mov
js
mov
mov
stos
push
jae
dec
ret
shl
addl
test
test
xor
and
fwait
mov
cli
sbbb
push
sub
xchg
jb
imul
sbb
out
mov
cli
movl
lods
jecxz
outsl
cmp
push
leave
xor
cmp
nop
shrl
rorb
push
rcll
adc
std
daa
push
xor
jmp
mov
xchg
pop
cld
xchg
in
dec
pop
test
fs
testl
rorl
cmp
sahf
popa
in
mov
dec
imul
xor
stc
xchg
mov
xor
pop
sbb
pop
in
cltd
xchg
and
lods
mov
cmpl
add
test
jmp
aas
push
sub
xchg
xchg
xchg
sub
lea
int3
jo
mov
rol
sub
pop
hlt
aaa
sbb
inc
mov
outsb
lods
mov
cwtl
imul
mov
stos
out
sbb
push
sbb
iret
enter
xor
push
mov
arpl
inc
insl
movsb
sahf
js
std
insb
push
cmp
mov
movb
sub
inc
push
loop
or
not
movsl
lret
pop
jp
xor
push
cmp
repnz
or
lret
sbb
test
dec
addr16
jo
push
outsl
out
inc
jge
push
pusha
hlt
aas
mov
mov
mov
xchg
add
mov
sbbl
adc
je
jl
or
mov
push
lods
or
jns
insl
scas
fldl
insb
repnz
xchg
mov
aad
lret
ret
lret
les
in
pop
hlt
push
push
fdivp
mov
or
adc
and
loope
cmpsl
int3
jle
sti
pop
xchg
mov
fimuls
mov
jae
jmp
push
mov
jno
test
add
jbe,pt
adc
xor
ds
ss
push
out
fisttpll
divb
jge
shrb
fxch
ljmp
or
fbstp
daa
outsl
std
shlb
out
sbb
mov
mov
sahf
xchg
cmp
test
inc
aas
adc
jns
sub
mov
test
es
and
stc
fwait
dec
pop
push
lods
mov
stos
mov
xor
push
into
fiadds
xchg
fs
lcall
inc
fisubl
lods
mov
mov
add
dec
ds
mov
movsb
enter
sub
cmp
nop
mov
mov
movsl
dec
js
sub
mov
push
les
std
pop
mov
mov
jmp
lcall
mov
push
push
or
pop
xchg
mov
repnz
push
in
nop
jp
pop
pop
pop
loopne
lock
sub
pop
push
test
cmpsl
leave
nop
sti
xor
rolb
jbe
mov
inc
inc
sarl
cmp
add
mov
cs
jbe
lahf
das
or
mov
push
push
or
jle
aaa
push
addb
cmc
lret
fistl
pop
adc
xchg
es
scas
rcrb
scas
cld
aaa
sub
mov
test
pop
inc
ret
fbld
cmp
mov
mov
cmp
clc
loop
rolb
ud1
pusha
xor
xor
lods
pop
and
sti
jecxz
pop
in
scas
ret
pop
int
pop
ret
lods
add
mov
test
js
xchg
push
jno
data16
jb
mov
into
push
pop
mov
mov
in
das
sbb
idivb
inc
inc
push
aam
test
mov
dec
ljmp
mov
lods
inc
ret
cmovnp
call
pop
mov
mov
lods
and
jg
addr16
das
xchg
xchg
clc
scas
xchg
outsl
xor
mov
stc
cmp
outsl
push
in
mov
sbb
int
inc
mov
imul
in
aaa
stos
add
sbb
out
cwtl
add
sub
pop
push
push
test
fisttps
into
mull
sbb
xor
xor
fwait
cltd
int3
push
mov
test
add
in
insl
ret
dec
xor
mov
cmp
leave
mov
outsl
movsl
jle
pop
leave
add
mov
lds
pop
rcll
insb
cs
push
fisubl
add
ret
push
insl
aas
arpl
xor
inc
or
in
jae
or
dec
insl
ret
sub
repz
lahf
mov
adc
loop
mov
leave
push
cmp
mov
iret
shlb
inc
popa
movsl
ljmp
mov
imul
cmp
mov
mov
jecxz
in
addr16
je
out
outsb
in
sbb
dec
cmp
clc
xor
cmp
jb
ret
je
jne
movsb
inc
pop
or
xchg
xchg
ret
es
cwtl
sub
jle
sub
mov
xchg
xchg
adc
decb
xchg
lock
sti
or
sbb
outsl
stc
data16
jno
rolb
js
jbe
jl
ljmp
pxor
je
data16
sbb
lds
std
pushf
sub
sbb
sub
orb
push
sahf
push
dec
xchg
adc
stos
clc
sub
dec
xor
add
idiv
hlt
jo
xchg
pop
cmp
pop
sub
cwtl
push
out
das
fbld
nopl
sub
pop
stc
dec
arpl
ja
ret
dec
jle
mov
mov
mov
pop
xlat
mov
xchg
lock
xchg
hlt
hlt
imul
dec
and
ljmp
mov
lods
xchg
fldl
scas
sbb
adc
clc
scas
test
cmp
mov
pop
adc
lock
lods
rol
jg
sub
mov
pop
leave
insb
repnz
cmp
adc
addr16
cmc
xchg
loope
lods
call
popf
ss
stos
jl
and
fwait
repnz
add
arpl
dec
jno
ja
jmp
pushf
orb
dec
sbb
sub
mov
repz
push
cmp
jo
pop
clc
fwait
rclb
in
sbb
out
js
ret
aas
daa
scas
mov
hlt
cmpsb
push
push
cmpsl
aaa
aad
jmp
dec
data16
jmp
shrb
inc
arpl
add
ss
lods
inc
sbb
arpl
xchg
shlb
sbb
cmp
pop
lret
ficoms
insb
repnz
scas
arpl
jae
das
inc
xchg
add
sub
add
test
jo
fisttpll
dec
xor
aad
jmp
dec
imul
std
fldl
test
xor
xor
int3
mov
dec
test
movsb
lods
push
addr16
and
pop
insb
jo
push
xor
adc
loopne
mov
or
ljmp
sahf
scas
jmp
xchg
fiaddl
jae
dec
mov
cmp
xchg
xor
ljmp
aam
ja
mov
push
mov
sub
dec
adc
push
and
pop
out
push
adc
sbb
loope
pop
push
push
fdiv
repnz
int3
mov
jae
sub
aaa
ss
pusha
inc
fsubs
cli
or
pop
mov
out
mov
cld
mov
sbb
cs
sub
das
into
mov
cli
push
mov
insl
xchg
add
jns
les
mull
mov
fcmovb
xor
adc
push
lds
jle
and
pop
push
fndisi(8087
pop
push
mov
in
or
in
inc
shll
push
xorl
rcrl
nop
xchg
into
pop
mov
gs
and
xor
sbb
add
push
es
mov
cmpl
xor
sub
xor
cmpsb
gs
cmp
sbb
outsb
xchg
or
jbe
lods
jae
sbb
andb
add
fs
int
imul
call
sbb
ret
push
mov
lock
bound
insl
mov
mov
sbb
daa
jo
inc
xchg
and
sub
add
push
js
jl
ss
fidivrl
xchg
mov
inc
bound
ljmp
cmpsb
in
dec
inc
inc
sbb
shrl
mov
push
jle
mov
mov
pop
mov
int
gs
jg
dec
addl
push
pop
out
add
rorb
pop
mov
lea
sub
jnp
mov
icebp
mov
mov
xor
and
dec
push
outsl
popa
mov
aaa
dec
mov
dec
in
push
dec
xchg
and
lret
loopne
mov
adc
dec
cmp
hlt
add
jo
gs
push
dec
aas
add
insl
cltd
or
aaa
mov
lret
and
adc
xchg
aam
mov
or
sbb
mov
imul
sub
test
in
jns
pop
push
pop
into
fildl
lods
inc
fwait
sub
nop
roll
fldenv
jle
dec
fwait
add
ljmp
inc
gs
pop
dec
aad
mov
xlat
mov
adc
push
jne
push
lcall
jl
shlb
popa
addb
inc
sarb
pop
pop
push
add
cltd
adc
scas
push
or
icebp
test
xchg
inc
addr16
icebp
popf
pop
push
pop
mov
lea
push
pop
rcll
into
movb
out
addr16
daa
mov
mov
incb
sbb
insb
inc
pop
mov
cmp
mov
xlat
bound
xchg
sub
push
fdiv
pmuludq
scas
fldt
xlat
mov
xor
es
sbb
pusha
xchg
std
xchg
inc
repnz
outsl
jbe
jae
addr16
dec
aaa
add
xor
mov
add
push
and
in
fidivrl
pop
push
mov
jnp
fiadds
and
in
mov
add
mov
stc
rcrb
xchg
imulb
lahf
sbb
shll
icebp
shr
or
xchg
push
pop
mov
sbb
and
xor
sbb
in
xchg
je
xor
loop
lock
stos
test
stos
lea
shrb
inc
std
lret
xor
sbb
xor
sub
daa
cltd
fucomi
mov
subl
cwtl
add
xchg
mov
aas
jmp
in
sbb
xchg
cltd
fsubr
rclb
dec
subl
inc
je
sti
pop
aam
cmp
outsl
sub
mov
repz
sbb
cmpsl
lds
sub
pop
and
xor
xchg
mov
mov
shll
dec
mov
out
xlat
pop
pop
xchg
fdivrp
out
pop
jl
lea
stc
out
mov
out
aaa
cmp
aaa
mov
repnz
mov
movsb
sub
cmp
cmpsl
push
fstpt
sbb
xchg
xlat
popf
insb
fcompl
pop
mov
dec
clc
sbb
aam
ret
inc
lock
mov
xor
es
ja
out
mov
lret
jg
jnp
push
js
test
mov
xchg
push
mov
in
ljmp
inc
mov
cwtl
pop
xor
add
rorl
lock
mov
jmp
pop
pop
mov
jb
je
dec
pop
scas
jecxz
adc
dec
mov
adc
aaa
dec
ss
out
fdivr
test
enter
dec
ror
add
sbb
fnstsw
test
sub
ret
jno
adc
xor
or
scas
out
mov
lea
loop
stc
in
fwait
jno
clc
fwait
out
sub
adc
scas
pop
xor
or
gs
rcll
out
mov
out
enter
or
pop
jge
inc
mov
pop
mov
fistps
hlt
sbb
jo
sahf
lods
push
fwait
inc
lds
loopne
ljmp
or
mov
ret
cltd
add
mov
popf
add
jae
adc
scas
pushf
add
insb
jb
mov
movsb
loope
rol
hlt
sub
enter
lock
jle
jae
int3
fcompl
cmpsb
or
mov
aam
xchg
jge
xchg
sbb
into
lcall
js
inc
jb
add
adc
pop
inc
out
subb
in
jge
jb
cli
ja
and
out
cmpb
mov
mov
cmc
push
sbb
mov
push
aas
cld
push
or
hlt
inc
notb
cld
fs
in
adc
scas
sub
dec
add
pop
scas
jae
cmp
jp
pop
rolb
push
sbb
sub
jl
out
mov
test
xor
pusha
mov
in
push
shlb
xchg
fwait
cs
movntq
pop
lds
jle
movsb
and
enter
mov
sbb
mov
arpl
out
insb
sarl
fidivrs
test
add
sbbl
pop
sub
xor
jmp
mov
ja
fimull
mov
outsl
jnp
daa
cmp
sub
insb
fcoml
das
into
inc
mov
cmpsb
cld
dec
fs
mov
pop
jno
insl
adc
mov
insb
inc
addr16
out
jg
push
les
lea
pop
add
cltd
mov
dec
sub
dec
and
daa
sbb
cld
int3
xchg
rclb
lea
idivl
insb
icebp
popa
jg
fimull
mov
fcom
sbb
adc
je
aaa
into
test
add
insl
fdivrl
pinsrw
cmpsl
sub
mov
cmp
stos
test
aam
xor
ds
aad
add
add
jb
test
pop
xor
ljmp
out
popf
dec
and
fists
mov
leave
jb
inc
dec
das
stos
test
pushf
out
pop
mov
push
sahf
movsb
cli
shll
sbb
push
jo
dec
jae
and
rolb
les
sbb
popl
xor
flds
push
aad
fsts
add
in
testb
cmp
outsl
mov
push
sbb
sub
push
jns
sub
in
cmpsl
lods
jecxz
dec
add
add
outsl
inc
xchg
mov
fistl
outsl
xchg
addr16
mull
dec
jns
cs
std
mov
insl
outsl
xor
jg
jae
or
adc
cmp
int3
pop
lahf
or
loopne
fidivs
cmp
out
inc
push
sbb
inc
inc
aaa
mov
mov
push
jl
sub
cmpsl
pop
cmp
dec
mov
add
call
repz
iret
sub
and
imul
ficoms
add
cmp
mov
mov
cld
fs
cmp
mov
mov
push
addl
into
cmpsb
leave
imul
das
clc
jg
fs
mov
pop
mov
adc
sti
aad
fdivr
lcall
push
int
in
int
sbbb
sbb
jbe
sub
hlt
push
jmp
fdivp
mov
pushf
out
stos
adc
push
cmp
cmp
xor
adc
adc
xchg
and
dec
mov
xchg
push
notl
cld
loope
inc
aam
sub
or
sbb
pop
fsts
mov
add
lcall
adc
adcl
pop
mov
out
dec
push
dec
stc
cld
aaa
lahf
inc
mov
mov
dec
mov
imul
inc
lods
fwait
cltd
insl
hlt
fwait
lret
cltd
sub
mov
add
pop
int3
out
add
in
mov
ja
push
nop
shl
pop
cli
js
mov
js
ja
mov
test
lods
lods
sub
or
test
lret
fs
dec
adc
lods
xchg
popf
test
inc
shrl
test
in
xor
sbb
ficompl
mov
rolb
lods
pop
push
mov
sub
mov
bound
int
mov
mov
test
inc
int3
ljmp
pusha
leave
scas
repz
fwait
je
adc
test
cli
push
divl
stos
push
movsb
je
and
pop
imul
sub
jge
stc
adc
xchg
test
cmp
ret
insl
aad
jne
mov
xor
sub
push
mov
icebp
out
icebp
setae
inc
dec
jecxz
lahf
clc
cmp
pop
lods
ret
bound
dec
popa
test
int
jnp
test
clc
sar
int3
adc
ret
out
add
mov
lds
repz
or
adc
lcall
cmp
sub
je
xlat
leave
fnstenv
or
or
push
ja
pop
aaa
dec
insl
jp
icebp
in
pop
scas
sbb
out
pop
push
dec
inc
adc
dec
xor
push
test
cmpb
mov
jno
mov
js
sti
dec
mov
out
outsb
out
and
clc
jo
outsb
les
lds
mov
fxch
inc
adc
lds
ret
mov
aam
cltd
int
pushf
subb
mov
sub
dec
sbb
out
test
or
inc
shll
jbe
shll
push
mov
xchg
push
fnstsw
jp
sbb
adc
dec
cld
sbb
imul
mov
insl
jmp
cmp
cmp
or
sbb
imul
mov
insl
jmp
cmp
or
imul
jns
dec
mov
mov
insl
jmp
cmp
gs
std
cmp
imul
inc
out
jge
sbb
ret
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
or
sbb
sub
cmp
inc
dec
cmp
daa
jno
out
imull
fdivl
in
xchg
xchg
or
sbb
sub
cmp
dec
daa
pop
aaa
insb
pop
jl
mov
pushf
xchg
lods
mov
mov
or
sbb
sub
cmp
dec
daa
pop
aaa
insb
pop
jl
mov
neg
mov
scas
fsubrs
addr16
sub
push
push
inc
loopne
aam
adc
jmp
pusha
push
cmp
mov
not
and
test
movsb
pop
enter
push
xor
adc
push
movb
rcr
pop
mov
aas
jbe
inc
mov
cmp
stos
mov
cmpsb
inc
and
xor
mov
mov
cmpsb
push
ja
js
push
or
cmp
out
mov
push
and
mov
call
dec
cmp
pushf
int
dec
adc
ja
pop
xchg
test
es
nop
adc
xchg
lea
xchg
mov
pushf
mov
dec
adc
sbb
icebp
in
push
and
scas
addr16
xlat
mov
lret
xchg
fincstp
pop
xlat
sub
xchg
iret
addr16
sub
cmp
dec
daa
pop
aaa
insb
pop
jl
mov
pushf
imull
fdivl
imul
jp
sub
aaa
add
inc
cld
cmp
fildll
popf
les
addr16
and
sub
pop
lahf
sti
adc
mov
faddl
cs
push
pop
xor
daa
pop
aaa
insb
pop
jl
mov
pushf
imull
fdivl
or
sbb
sub
cmp
dec
daa
pop
aaa
insb
pop
jl
mov
pushf
imull
fdivl
or
jge
mov
inc
adc
ret
cmp
xchg
mov
xchg
test
stos
aas
scas
push
or
hlt
mov
and
pop
divb
aad
test
mov
popa
inc
sbb
rclb
stos
dec
lock
leave
jo
dec
xchg
xchg
xchg
add
mov
mov
or
and
cmpl
ss
add
xchg
cmp
test
push
dec
mov
jae
push
mov
bound
lods
cmpsl
jno
cmp
fbld
sbb
ja
mov
lea
aam
mov
sub
mov
xor
pop
jecxz
out
pop
mov
dec
xchg
cmc
loope
or
rol
jmp
jmp
movsb
test
fdivp
mov
or
aaa
cltd
cs
es
ss
xchg
lods
jae
inc
cwtl
inc
aas
test
std
inc
movsb
xor
mov
cmp
and
fidivrl
jo
push
sti
lods
push
out
sub
mov
les
mov
xor
jmp
addr16
adc
loopne
aam
in
jecxz
dec
rol
xor
xchg
xchg
sbb
push
and
jmp
ljmp
lcall
or
mov
pop
fdivs
ljmp
cmp
and
lcall
lret
stos
loope
call
cld
sub
aaa
pop
es
mov
mov
mov
adc
mov
inc
adc
scas
ret
popa
push
mov
adc
adc
test
xchg
fimuls
jmp
cld
inc
add
add
add
jle
outsb
aad
adc
lret
sbb
in
mov
lods
pop
hlt
inc
pop
inc
dec
xor
outsl
ret
mov
adc
push
xchg
pop
pusha
adc
sbb
stos
push
ss
add
ds
sbb
xor
xor
pop
mov
loopne
lods
cli
hlt
sahf
daa
dec
and
loope
push
xchg
or
jno
or
mov
mov
xchg
dec
lock
repnz
sub
std
ljmp
mov
or
xor
xchg
push
mov
js
cmp
and
mov
jge
lock
push
and
sbb
jmp
outsb
loopne
mov
roll
movl
mov
pop
sub
add
stos
std
sti
lods
sbb
push
mov
sub
rcr
fcomi
fiadds
pop
negb
cmpsl
dec
fcomi
pushf
fcompl
movsl
sbb
repnz
jo
test
cmp
push
scas
xchg
in
imul
cmp
ret
sahf
js
jno
outsb
stos
sbb
je
pop
add
stc
push
adc
adc
iret
test
pop
fistpl
dec
dec
les
sti
test
movsl
mov
lods
push
jo
push
int3
es
aad
xchg
stc
push
adc
push
jns
lret
int3
and
syscall
out
sarb
test
xchg
push
ss
mov
test
andb
push
dec
pop
or
ret
sbb
stc
mov
xor
pop
mov
mov
scas
mov
push
shlb
pop
push
push
ja
hlt
add
push
jle
repnz
dec
pop
mov
ljmp
icebp
mov
frstpm(287
pop
adc
pop
mov
dec
push
or
push
negb
pop
mov
mov
js
pop
movsl
mov
and
dec
cltd
pop
xchg
daa
loopne
push
xchg
add
xor
or
push
mov
inc
add
enter
movsl
xor
pop
push
call
mov
jecxz
or
loope
inc
push
test
mov
sbb
fmull
stc
out
lea
inc
xlat
jmp
ret
in
push
mov
push
or
mov
sub
or
dec
pop
inc
sbb
mov
dec
dec
jle
pop
mov
dec
testl
xor
jecxz
dec
adc
mov
cmpl
inc
pop
aam
in
or
test
rcl
or
pop
shlb
jl
into
loope
shlb
mov
jo
inc
xchg
dec
pop
adc
data16
mov
adc
cmp
nop
mov
jbe
pop
ret
fsubrl
dec
adc
inc
mov
mov
shr
push
push
inc
pushf
mov
mov
xlat
repz
aas
sub
pop
cli
lods
fldl
xor
mov
sbb
insb
push
pop
sub
dec
jp
cmpl
jns
sar
mov
xchg
shll
xor
frstor
jbe
cwtl
mov
es
push
out
das
xchg
xor
fwait
push
movnti
mov
out
or
add
mov
insl
sub
sub
mov
xchg
shl
mov
lahf
movsl
jb,pt
repz
xor
xchg
shlb
mov
cmp
scas
shr
lods
movsl
cmp
adc
les
rorl
xor
pop
push
lods
push
xor
sub
xchg
xor
les
push
jg
or
jne
mov
inc
data16
adc
add
add
xlat
jne
daa
imul
mov
sbb
sub
stos
jl
ja
cmp
jns
adc
loopne
add
cmp
fwait
inc
cltd
arpl
push
incl
test
pushf
div
jl
push
pop
cmp
mov
psubusw
nop
das
scas
inc
push
imul
jle
xor
adc
mov
push
call
inc
xor
fwait
push
mov
xchg
sub
sbb
shr
mov
mov
lret
rorb
cmp
aas
add
rdtsc
jl
inc
cld
dec
mov
add
std
xlat
scas
xchg
test
jno
sbb
dec
sahf
movsb
mov
ret
ljmp
mov
fisttps
test
or
test
xor
ds
shl
fidivrs
pop
sbb
mov
sbb
repnz
adc
mov
add
mov
lea
push
mov
mov
xchg
mov
and
lret
call
int
push
jge
mov
mov
mov
sub
jnp
mov
sbb
cmc
lea
cltd
std
add
mov
aas
xor
mov
xor
sarb
add
dec
lahf
pop
cmp
xchg
insb
sub
xchg
test
and
mov
mov
addr16
out
mov
shrl
out
pop
push
std
repnz
fisttpll
and
push
lret
sub
push
cld
imul
rcl
std
jmp
in
pop
jns
sub
fstp
out
inc
sub
sarb
jae
mov
sub
mov
inc
ror
sbb
push
enter
cmc
lret
loopne
dec
xlat
pop
sub
fwait
adc
mov
dec
cmp
cmpsb
mov
cmp
cmp
out
iret
jnp
pop
incl
sbb
mov
inc
cmp
out
xchg
ss
xchg
out
nop
xchg
movsl
push
ds
cmp
sarl
std
stos
mov
jns
pop
cbtw
sub
lods
gs
jecxz
sahf
dec
outsb
cmp
ljmp
jecxz
repz
js
adc
into
inc
imulb
xor
jl
xor
ret
add
jge
je
push
jns
lahf
xchg
je
mov
jl
clc
mov
push
fidivrs
fcmovbe
aam
cmpsl
daa
pop
aaa
dec
mov
jmp
dec
mov
adcl
sub
sub
add
lock
inc
xor
jo
cmp
and
in
jbe
mov
add
imulb
pushf
add
mov
inc
dec
test
inc
mov
jb
scas
in
inc
js
loop
test
andl
insl
rolb
inc
sbb
xchg
or
call
jbe
inc
roll
and
inc
ret
and
bound
cmpsb
xor
test
cmp
jg
cmp
mov
dec
loop
mov
push
mov
pop
inc
stos
fs
inc
xchg
roll
cmpsb
dec
hlt
cmp
adc
mov
mov
xchg
scas
out
popf
push
xchg
dec
leave
pop
mov
hlt
dec
push
cmp
in
ret
lret
pushf
and
adc
subb
pop
sbb
sbbb
sbb
cli
adc
inc
push
lea
daa
jp
xchg
loopne
sbb
sbb
test
mov
das
ja
lret
fwait
repnz
fisubrs
cmp
push
shl
arpl
pusha
xor
sarl
std
xchg
mov
ljmp
roll
sbb
cwtl
scas
in
out
repz
andb
imul
pusha
inc
inc
ficoms
cmp
sbb
add
add
sub
xchg
test
push
shr
mov
inc
out
mov
fsubrl
mov
or
mov
test
stos
and
pop
jns
inc
dec
addr16
sub
js
add
sbb
jl
jl
out
jae
addr16
fisttpl
jmp
cwtl
dec
popf
out
jge
push
jb
cmp
fdivrl
dec
mov
mov
push
cltd
push
sub
xor
pop
pop
add
insl
push
movsl
add
cmpsb
dec
loopne
stos
sbb
jmp
push
fs
test
sbb
jno
movsb
sbb
jmp
add
ffree
fbstp
adc
or
in
sub
jmp
sysenter
iret
clc
mov
nop
jnp
inc
push
xchg
es
dec
in
aas
lea
out
aaa
enter
loop
adc
call
bound
rcll
aaa
cmp
jno
fwait
and
mov
inc
fnstsw
sbb
add
push
mov
or
movsb
push
test
xor
xchg
mov
pop
mov
loop
push
jp
popf
mov
shrb
mov
mov
mov
jle
and
jl
adcl
push
dec
pop
dec
movsb
fimull
hlt
pop
ficoms
add
xlat
insb
dec
mov
push
sub
or
push
das
lods
mov
loope
jae
adc
inc
fadd
rcll
mov
shl
pmulhuw
outsb
movsl
jnp,pt
sarb
push
mov
mov
push
jne
mov
fsubrs
in
icebp
pop
push
mov
jle
orb
mov
test
stc
stos
sub
pop
jl
sub
data16
add
pop
imulb
mov
xchg
mov
or
ficompl
xchg
int
fldt
cmp
cs
hlt
cmpl
lods
clc
fs
loop
add
scas
dec
aad
lods
add
jo
pop
cltd
lods
outsl
mov
cmp
pusha
push
ja
lea
and
in
mov
cmc
adc
les
jp
pop
add
sbbl
mov
mov
jne
dec
pop
add
ss
pop
xchg
adc
add
xchg
stos
pop
in
fsubrs
push
jo
xchg
jge
js
fcomp
mov
adc
mov
sub
les
icebp
dec
jnp
xchg
cld
bound
push
loope
adc
lds
andb
test
jae
dec
incb
lahf
and
dec
cli
in
repz
scas
push
cmp
into
out
imul
or
push
sar
aad
in
cmpl
inc
pop
mov
lret
jo
push
xor
xor
mov
push
outsb
repnz
sbb
das
daa
pop
dec
cli
push
aam
push
pop
and
insl
push
lret
ret
mov
loopne
adc
dec
stc
cmp
int3
xor
in
in
mov
mov
mov
loope
or
adc
icebp
jb
xchg
pop
cmp
cmpsb
or
loop
les
ror
dec
jmp
push
call
lods
pop
pop
rclb
fmull
ljmp
fsubs
and
icebp
cmpsb
loopne
cmp
int
stc
and
sbb
imul
mov
sub
int
sbb
jnp
shlb
jl
mov
sbb
mov
cmp
je
stc
repnz
cmpsb
sub
xor
scas
testl
pushl
aam
gs
push
mov
xor
lock
or
out
push
fmulp
jle
iret
xchg
pushf
jge
inc
iret
dec
lret
adc
cmp
aad
out
enter
inc
pop
ret
xlat
xchg
nop
mov
xchg
mov
mov
aaa
mov
in
inc
dec
mov
ss
pop
push
ret
mov
lock
movsl
mov
inc
out
das
aam
sarb
xor
ljmp
leave
les
jae
xchg
mov
in
or
je
and
xor
dec
dec
inc
push
mov
inc
inc
xchg
daa
in
outsb
push
std
icebp
xor
or
add
dec
mov
pushf
adc
fsubrl
xor
pop
bound
cld
cli
movsl
fsub
xchg
sbb
sub
inc
in
lcall
pop
dec
sbb
push
movsb
pop
data16
dec
cmp
stos
mov
mov
clc
xchg
cmpsl
mov
aad
cmp
mov
test
xor
je
push
divl
push
or
fldl
fstpt
test
out
cmp
pop
sub
js
xchg
rcrb
cmpsb
xor
sbb
mov
test
stos
dec
mov
roll
int
mov
cmp
or
push
outsl
ss
lcall
mov
idivb
push
sbb
inc
cmp
adc
mov
xchg
int3
xorl
pop
in
and
scas
lea
dec
and
dec
xor
fbstp
dec
sub
movsb
inc
mov
jmp
fstpt
out
repz
test
mov
jbe
cmp
fsubs
mov
mov
sbb
pop
sahf
pop
cwtl
sub
pop
stos
sub
pop
das
mov
nop
es
into
icebp
jb
xor
ds
pop
xor
push
daa
add
mov
aad
pop
lock
arpl
in
adc
dec
mov
pop
jmp
jno
adc
mov
sub
scas
push
mov
mov
jmp
ljmp
scas
add
cmp
jmp
xorl
enter
sti
shl
push
push
push
inc
cld
sbb
add
shll
ja
rcrl
popa
fwait
mov
in
out
push
mov
mov
xchg
fwait
insb
data16
xlat
rcrl
in
or
lds
xor
int3
loop
ds
inc
jo
clc
cltd
or
out
ss
and
add
and
cwtl
fisubs
fdivl
loope
fstpt
mov
jb
pop
hlt
ds
test
pop
mov
mov
push
mov
xchg
ljmp
or
lea
add
xchg
fiadds
cltd
cwtl
mov
mov
sub
dec
sub
sub
or
dec
sub
aad
cs
nop
and
cmp
cmp
push
dec
nop
and
and
leave
sbb
and
xchg
mov
cli
cmp
out
into
or
fisubrs
mov
fimull
adc
rcr
xchg
xchg
push
mov
jb
xchg
cwtl
cmp
and
mov
gs
cli
jg
iret
jle
pop
pop
shll
push
testb
fimull
xor
mov
add
adc
enter
mov
mov
xor
lcall
adc
xor
xchg
lods
push
or
fs
add
loope
test
popf
mov
cmp
test
xchg
popa
xchg
mov
adc
fs
dec
jl
cmpsb
mov
sub
mov
enter
xchg
jb
cmp
cmc
in
shll
xchg
or
shld
cmp
iret
int3
lret
aam
ret
std
jo
jmp
push
popf
cmp
cmpsb
frstor
ss
jno
inc
iret
or
cld
imul
sbb
inc
lods
push
or
cmpsb
sbb
push
adc
jge
sbb
cmpsl
mov
sbb
inc
mov
xchg
shl
mov
in
cmp
lcall
leave
pusha
add
ljmp
nop
mov
push
push
mov
jl
pop
fnstsw
jge
rclb
pop
and
xor
fisubl
out
out
jo
test
jg
stos
outsl
add
popf
movsb
dec
lds
dec
push
into
outsl
cmp
jp
addr16
cmp
sub
cmp
or
inc
xchg
dec
arpl
aam
mov
orb
in
insl
dec
or
or
dec
mov
repz
cltd
and
clts
push
mov
jno
pop
push
sub
add
adc
push
bound
sbb
jae
push
fcmovu
jb
mov
jns
push
cld
pop
std
stos
int3
add
out
mov
mov
adc
mov
pop
sub
push
inc
rcr
inc
fsts
sub
je
stc
int3
test
ficomps
sub
dec
xorl
lock
and
add
cmp
outsl
movsl
std
and
and
inc
fadds
repz
cmp
cmp
sbb
mov
lods
repz
mov
dec
cmc
ret
mov
in
xchg
pop
cmp
cltd
push
push
es
mov
in
cmp
mov
mov
lret
lret
loop
cmp
arpl
mov
pop
dec
xchg
cmp
out
iret
and
mov
xchg
sbb
adc
cli
pop
pop
imul
and
inc
clc
jg
loopne
je
push
aad
addl
push
inc
out
outsb
pop
je
fidivs
cmp
cmc
test
adc
frstor
inc
pusha
inc
ljmp
lret
nopl
push
in
adc
outsl
cmp
insl
mov
xchg
sub
xor
lret
in
lods
xchg
pop
inc
mov
fisubrl
xchg
fwait
or
or
jge
dec
out
xorb
push
mov
sbb
xor
sti
xchg
xlat
out
xor
call
push
xchg
sub
or
dec
cltd
in
aas
out
test
inc
dec
adc
daa
jge
mov
sahf
inc
dec
mov
scas
lds
outsl
in
xor
dec
mov
xchg
cld
ljmp
scas
notl
jbe
aam
xchg
xchg
lock
test
lea
loope
lods
mov
adc
aad
gs
xchg
in
loopne
repz
adc
in
sti
push
imul
sub
aad
hlt
sbb
lahf
mov
xchg
dec
stos
cmpsb
jecxz
das
xchg
mov
adc
or
pop
sub
inc
dec
jae
call
sbb
cmpsl
mov
bound
into
dec
mov
sub
dec
xchg
xlat
or
xchg
outsb
push
adc
movsb
xor
hlt
ds
in
out
and
sub
flds
inc
lock
mov
dec
push
dec
pop
movsb
xchg
aam
add
mov
test
fs
icebp
ja
xor
inc
insl
into
pop
mov
add
xchg
cwtl
jnp
cmp
jge
sbb
push
out
or
daa
jae
popa
jge
js
add
aas
inc
mov
or
pop
sub
xchg
ret
inc
mov
clc
pop
mov
insl
and
idivl
mov
or
xor
jne
mov
out
jp
lcall
sub
xchg
ficoml
les
sub
jle
adc
lret
xchg
outsb
cs
push
std
xor
adcl
int3
inc
es
outsl
push
mov
push
adc
enter
mov
dec
push
push
sbb
xchg
xchg
jno
add
cmpsb
mov
push
mov
andb
inc
mov
int
jecxz
cltd
clc
jp
xchg
pushf
mov
jecxz
cmp
jns
subl
add
fsubr
sbb
pusha
jle
mov
sbb
pop
mov
arpl
btrl
adc
sub
mov
in
rcll
enter
pop
gs
pop
sarl
into
addb
cmp
jecxz
lds
sub
push
xor
push
lret
sub
shr
jle
jbe
mov
jl
jae
or
xchg
sar
mov
cs
xchg
aam
lock
inc
xorl
and
jl
jnp
rclb
add
adc
scas
mov
sbb
mov
add
add
ljmp
ljmp
outsl
iret
stos
add
stos
jmp
mov
xchg
and
xor
inc
add
popa
pop
cmp
lcall
jo
push
les
cmp
mov
mov
pop
stc
xchg
jmp
sub
dec
lea
push
cmc
test
jg
std
mov
sub
js
or
adc
sub
pop
bound
addl
lods
sahf
sbbl
gs
push
jge
sub
jmp
sub
mov
fldcw
icebp
pop
jl
repnz
cmp
dec
daa
pop
aaa
insb
pop
jl
mov
pushf
imull
fdivl
or
sbb
sub
cmp
dec
daa
pop
aaa
insb
pop
jl
mov
pushf
imull
fdivl
or
sbb
sub
cmp
dec
daa
pop
mov
pop
jl
lea
imull
fdivl
or
sbb
sub
cmp
dec
daa
pop
aaa
in
pop
cld
pop
jae
arpl
mov
dec
adc
add
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
push
aaa
inc
fdivs
addr16
fisubrl
sub
push
idivl
jp
or
cmp
inc
fdivs
addr16
pop
mov
cwtl
aaa
test
mov
testl
enter
cmp
inc
fdivs
loopew
xchg
pop
xorb
daa
mov
fwait
sbb
call
cmp
enter
pushf
or
mov
fistpll
ret
or
jle
es
ret
aam
arpl
xchg
int3
cltd
sub
add
add
leavew
and
xor
enter
js
js
lea
jne
aaa
dec
pop
jo
adc
fdivrl
xlat
int
cwtl
not
daa
std
sbb
sbb
cmpsl
cmp
inc
fcomps
test
pop
mov
daa
inc
pop
sbb
or
out
mov
cmpsl
cmp
test
fs
bound
jb
lcall
sub
cmp
cmc
jns
xchg
daa
xor
or
push
repnz
daa
sub
clc
loopw
mov
cwtl
aaa
mov
mov
divl
popa
xchg
adc
pop
push
lods
xor
push
jmp
jne
push
les
and
cmp
xchg
sub
push
xor
or
pop
sti
inc
stos
dec
int3
jne
mov
xchg
cmp
sbb
cmp
inc
rcrb
mov
sbb
pop
cwtl
aaa
test
mov
imull
js
or
cmp
inc
fdivs
addr16
pop
mov
cwtl
aaa
test
mov
imull
js
or
cmp
bound
leave
dec
jmp
mov
scas
xchg
push
push
pop
sub
sub
and
cmp
ss
addr16
push
dec
add
sub
xor
cmpsl
jmp
inc
pop
mov
pop
popa
lahf
push
cmp
std
sbbb
push
shr
add
insl
mov
sbb
and
and
mov
push
fistps
pop
fisubs
mov
inc
xchg
fiaddl
add
inc
or
icebp
add
repnz
pop
mov
sbb
pop
mov
cmp
test
ljmp
or
inc
cwtl
jnp
je
inc
xchg
jnp
sahf
inc
add
imul
cmp
lods
or
iret
push
call
push
cmpsb
pop
outsl
jnp
lahf
xor
push
sub
add
cmp
ds
out
cwtl
sbb
add
mov
fmull
out
sbb
daa
sti
mov
push
cmp
jbe
ret
mov
imul
add
mov
push
xor
call
pop
bnd
jle
call
out
push
bound
xor
cmp
adc
sub
dec
mov
xchg
sti
push
mov
add
xor
pop
orb
out
pushf
fldl
and
stos
push
repnz
notb
fwait
push
divl
xchg
lods
inc
fwait
or
jbe
lahf
pop
push
je
add
sub
mov
lods
xor
sub
aas
mov
enter
lock
insb
sbb
jle
roll
add
jg
rorl
je
or
pop
and
in
jecxz
ffree
push
mov
outsl
jmp
pop
int
dec
push
ja
mov
sbb
xor
pop
push
dec
cmp
insl
aad
rorl
fadd
jae
pop
pop
orl
mov
es
nop
movups
loop
shll
scas
fidivrl
sbb
movsb
outsl
or
fdivrl
or
scas
jmp
mov
fs
sub
insb
les
mov
aas
or
scas
or
jbe
mov
mov
pop
jmp
dec
shrb
pop
jmp
xchg
or
xchg
sbbl
xchg
test
mov
mov
and
shrb
icebp
cmc
clc
cmp
xchg
cmc
nop
or
aaa
imul
jbe
repnz
mov
int3
in
data16
xchg
rep
lcall
mov
jae
call
sti
mov
cmp
xchg
ret
mov
inc
mov
mov
jl
xor
insb
mov
mov
lcall
sbb
stos
ffreep
cmp
cs
dec
data16
inc
add
andb
mov
lock
dec
sbbb
lcall
pop
ds
add
xchg
hlt
fnstcw
in
insl
sti
insb
sub
test
mov
out
xchg
inc
out
cli
addr16
adc
push
sbb
idivl
xchg
xor
fmuls
iret
decl
dec
and
cmpsb
add
sbb
dec
fucom
mov
ss
lahf
popa
pop
jbe
aas
incb
jp
push
shlb
cmpsl
sbb
in
test
dec
and
xlat
mov
movsl
jns
xor
jno
mov
in
fmull
ja
jb
pop
or
dec
pop
fsubs
pop
jge
push
pop
xorl
mov
std
and
mov
aam
jo
lds
imul
mov
pop
mov
add
pop
aas
or
imul
inc
rcll
subw
sbb
cmp
cmpsl
xchg
jmp
cmpsb
lds
into
xchg
sbb
add
dec
jge
orb
dec
mov
mov
lahf
xor
sub
pusha
in
push
fdivs
push
bound
cwtl
in
or
lret
outsl
pop
shlb
insb
ret
push
or
pminub
lods
sarb
mov
orb
sub
jnp
jno
xlat
loopne
lea
lahf
mov
jmp
idivl
test
mov
inc
xchg
lcall
loopne
out
int3
shl
into
cmpsb
nop
fcoml
aam
sbb
fimuls
dec
inc
xchg
mov
mov
xchg
out
mov
xchg
subb
bound
icebp
jnp
mov
adc
ficomps
xor
inc
ret
shl
jno
push
inc
rol
xchg
insb
pop
mov
nop
mov
fdivl
enter
fldl
dec
mov
dec
lods
jno
pop
cli
mov
test
int
xor
test
loopne
mov
decb
pop
dec
fcomi
shlb
fldl
mov
mov
xchg
adc
pusha
push
mov
js
mov
sub
add
mov
push
jo
cmc
div
loop
enter
scas
aas
aad
cmpb
int3
mov
arpl
out
fucomi
popa
pop
out
and
ss
hlt
popf
repz
shlb
mov
sub
add
jge
push
cmp
xchg
out
loop
aaa
adc
test
arpl
popf
xchg
dec
ja
lcall
cmp
or
xlat
dec
dec
sub
jmp
sub
push
outsl
lret
shrb
xor
xchg
je
xchg
jno
push
jg,pt
jle
mov
or
cmp
addr16
and
pop
xchg
aaa
push
arpl
sub
mov
ss
mov
leave
lods
insb
jecxz
cmp
sahf
aaa
pop
pushf
insb
xchg
out
andb
lahf
and
adc
xchg
pushf
cmp
mov
sarb
push
xchg
mulb
xor
les
sar
icebp
adc
xor
jbe
sub
clc
repz
add
and
dec
into
push
push
cmpsb
daa
dec
mov
mov
add
daa
or
loopne
cmp
mov
cmc
dec
add
cmpsl
mov
out
cld
lret
das
xor
int3
cltd
outsl
push
aad
aas
loop
data16
mov
dec
lcall
add
cmp
xor
test
and
aaa
inc
sub
test
sub
push
adc
mov
repz
xor
push
add
jp
fs
sti
push
cmp
jnp
loope
jge
jb
outsl
pushf
inc
and
jmp
inc
icebp
mov
fwait
mov
cmpl
adc
test
xchg
fcomip
gs
cmc
xor
cmp
test
mov
loopne
aas
in
fmuls
repz
mov
fabs
addl
fcoms
mov
int3
and
int3
pop
in
lock
push
pop
sbb
mov
mov
inc
addb
lods
mulb
faddl
sub
nop
repnz
out
lea
sbb
jns
mov
and
jg
add
xor
movsb
jmp
aad
in
add
and
enter
xchg
out
add
sarb
cmp
dec
add
and
daa
sarb
lret
xlat
addr16
notl
lret
adc
adc
dec
rclb
add
sbb
js
lret
inc
sbb
sub
dec
xor
mov
nop
movsb
in
bound
dec
mov
mov
inc
inc
es
pop
pushf
inc
loopne
add
fdivl
arpl
xor
push
cmp
sbb
pop
pop
je
cmp
lret
test
mov
repz
push
inc
mov
cwtl
or
sub
or
stos
mov
sub
and
out
xchg
in
imul
pop
or
test
in
loope
sbb
and
dec
mov
call
dec
push
pop
stc
lret
push
cwtl
dec
sub
jmp
out
outsb
fidivs
aad
arpl
fldt
sbb
push
gs
jo
push
xor
insl
xor
stc
les
test
movsl
dec
sar
out
jo
xchg
dec
int
out
xchg
mov
pushf
daa
push
daa
data16
mov
sub
out
ss
bound
rol
ret
or
ds
shr
push
fsubrs
addl
repz
mov
mov
cmc
xchg
and
mov
fildl
mov
xor
call
dec
xchg
jbe
testl
in
mov
lret
and
adc
push
adc
cmp
dec
sub
dec
sbb
adc
add
or
cmpsl
test
outsb
ret
divl
pop
leave
xchg
je
cmpsl
notb
fidivrs
dec
insb
pushf
cmp
and
push
inc
mov
push
add
sub
mov
jmp
sbbl
scas
mov
jbe
loop
xor
ficomps
and
outsl
fidivs
mov
push
add
lock
jecxz
out
sbb
push
pop
or
sub
test
sahf
adc
sub
mov
mov
data16
test
or
push
dec
popf
outsb
imul
dec
loopne
push
push
sub
cs
xlat
jp
dec
rorb
loope
pop
test
jle
imul
testl
dec
in
jecxz
dec
mov
lea
push
insb
xchg
adc
pop
inc
jns
adc
jbe
mov
mov
inc
das
lahf
insb
cltd
push
sbb
or
lret
jp
out
sbb
mov
mov
sub
int
lds
xchg
mov
jle
pop
xchg
addr16
fildll
inc
test
xor
shlb
sub
outsb
sub
pop
jns
in
adc
jg
pop
jg
xchg
mov
in
cld
and
js
mov
push
adc
ficoms
xchg
mov
mov
pop
outsl
adc
sbb
add
scas
push
xor
and
test
lcall
and
popf
jmp
mov
xchg
dec
insl
jmp
push
das
ficompl
stc
jae
dec
push
or
adc
adc
addb
int3
xchg
fldt
jecxz
pop
test
pop
lret
push
xchg
mov
sub
out
negb
sub
hlt
mov
roll
push
stos
fucomip
sbb
movsb
popf
ja
negb
dec
call
cmp
shrb
sub
push
inc
loopne
push
pop
fiadds
pop
cmp
jle
mov
push
mov
cltd
sub
adc
sbb
pop
loope
decb
dec
ror
xchg
and
xchg
sti
fnstsw
mov
dec
mov
jmp
pop
push
push
cmpsl
aam
shlb
and
dec
mov
push
xchg
in
lea
pop
nop
into
inc
xchg
push
adc
lret
xor
test
cmp
or
mov
mov
movsl
imul
mov
pop
popa
outsl
mov
sub
mov
insb
sbb
lods
inc
mov
cltd
xlat
xchg
ss
mul
mov
int3
jb
jns
xchg
cmp
nop
sub
in
cli
neg
inc
inc
pop
loope
idiv
negl
push
lret
jae
aaa
nop
adc
adc
shll
repz
jb
mov
sub
inc
and
je
xchg
push
and
loope
mov
sub
pop
out
ret
adc
loope
mov
and
sahf
sbb
shrb
inc
jle
fwait
adc
and
outsl
push
fsubl
testl
fidivl
push
and
xchg
mov
pop
mov
or
out
sbb
and
jge
xchg
inc
pop
jecxz
lret
dec
push
dec
push
mov
dec
in
sub
or
or
jecxz
int3
ret
in
icebp
sub
repz
cmp
lahf
leave
xor
dec
aad
dec
sub
les
gs
mov
idiv
jl
je
lcall
jb
ljmp
xchg
lock
pop
and
mov
insl
xchg
es
shrl
iret
xor
or
lahf
dec
lahf
cmc
mov
icebp
repz
lods
add
sbb
inc
add
shr
mov
orb
cs
or
ret
mov
adc
pusha
or
fstpl
xorb
das
idivl
xchg
call
js
add
les
push
xchg
or
mov
push
fcoms
lret
lcall
fistpl
sti
jl
mov
cli
jo
sub
cmc
add
sarb
into
stos
ficompl
scas
add
ds
inc
nop
out
rclb
js
dec
xchg
jg
lock
arpl
sbb
in
sahf
loope
mov
cld
loop
adc
ja
in
ret
mov
mov
dec
dec
insb
dec
outsl
leave
sti
jl
rorl
cmpsl
repnz
test
jo
loopne
fwait
xchg
lods
rcll
jb
jg
or
xchg
jb
in
popf
mov
mov
loope
popf
adc
sti
ret
pop
cmc
lods
divb
and
inc
push
xchg
pop
sahf
mov
mov
movsb
push
clc
push
out
nop
jg
sti
imul
lea
pop
sahf
pop
data16
pop
mov
jp
mov
mov
das
adcb
subb
ja
push
jno
mov
stc
pop
mov
jl
lods
dec
sahf
inc
mov
dec
sub
dec
pop
insl
jmp
xchg
notl
or
cmpl
xchg
inc
jmp
call
push
addl
jmp
xchg
test
pushf
xchg
pop
lcall
test
mov
aas
mov
or
stos
rorl
ss
dec
das
js
sarl
rcrb
cmp
outsl
lcall
dec
mov
add
pop
push
mov
lret
es
in
adc
int
lea
xchg
aas
leave
mulb
add
shll
cmp
pop
int
in
inc
and
decb
loopne
das
pop
inc
and
xchg
in
pusha
push
sub
dec
ret
sbb
inc
xchg
xchg
mov
sbb
pop
out
mov
ss
pop
fsubrs
out
and
and
ret
add
das
pop
bound
inc
cmpb
sbb
xor
xchg
dec
cmp
in
lds
ja
shrb
in
dec
and
xchg
xchg
arpl
insl
stos
jl
leave
test
push
add
cmp
mov
loop
std
xchg
jo
inc
jo
daa
cmp
pop
cmp
jecxz
and
mov
mov
push
add
les
jns
icebp
fldl
outsb
pop
adc
shrb
pop
sub
mov
dec
mov
std
imul
adc
push
jp
jle
stos
jmp
mov
jle
addl
les
jecxz
bound
mov
mov
mov
push
flds
xchg
jle
out
push
push
aam
stos
icebp
cmp
jp
cltd
mov
xchg
or
and
fcmovb
mov
cmpsl
mov
mov
dec
lea
mov
lods
cmp
faddl
ja
jecxz
sbb
or
dec
pusha
loopne
push
push
fisubl
dec
sbb
push
pop
repnz
testb
and
push
mov
mov
cmp
sub
loope
xor
gs
cmp
xchg
mov
jle
adc
movsb
add
add
and
in
ds
pop
rorb
pop
push
sub
aam
aaa
pop
adc
push
aad
or
rcr
jmp
and
dec
mov
cmp
fsubp
jge
dec
lahf
adc
pop
mov
icebp
push
jp
dec
sahf
mov
insb
push
dec
sbb
mov
xchg
sbb
das
mov
xchg
jb
push
push
or
sub
pop
cmp
mov
ret
insb
mov
loope
inc
xor
cld
mov
mov
rcrb
or
inc
rcll
mov
cmp
xchg
push
iret
xor
add
and
inc
scas
stc
push
lods
push
pusha
lds
dec
sbb
test
jecxz
inc
sarl
loop
sub
lock
repz
pop
add
nop
inc
icebp
or
sbb
push
xchg
cmp
insl
xor
sub
leave
ds
dec
jae
fisubrs
adc
jg
ja
movsb
pop
lock
dec
clc
pop
mov
movsl
xor
lahf
and
lods
jae
sbb
pop
push
icebp
out
mov
loopne
push
aas
clc
test
dec
and
push
push
dec
lds
sbb
pop
dec
das
rcll
fisttpll
push
jno
xchg
rol
cmpsb
lods
aas
or
lret
xchg
movsl
leave
jo
imul
cmp
push
lods
fsin
mov
push
mov
jge
pop
lahf
dec
lret
sub
mov
popf
sub
mov
mov
or
sti
adc
or
fildl
pop
push
sti
and
shr
xchg
jbe
enter
lahf
mov
sbb
cmp
inc
fisttps
push
adc
xor
mov
or
mov
push
jecxz
push
cwtl
std
sub
dec
ja
xchg
pop
push
addr16
outsb
repz
mov
int3
pusha
xor
xor
inc
int
cmpsb
cmp
data16
jp
sub
jp
adc
push
aas
push
leave
js
sysexit
xlat
scas
mov
shr
movsl
idiv
imul
mov
xchg
add
mov
outsb
sub
jno
jns
repz
inc
or
fstpt
pusha
cld
dec
jmp
movsb
scas
adc
adc
dec
int
nop
dec
pushf
div
or
xchg
mov
mov
cmp
push
jnp
dec
fwait
idivl
icebp
pop
mov
popa
pop
adc
dec
mov
mov
mov
ss
rcrl
sub
jp
jo
or
stos
xchg
repz
jg
cmp
xor
mov
sbb
xchg
lods
xor
or
in
and
mov
lods
das
and
add
shlb
cmpsb
sbb
mov
das
jl
adc
mov
xor
es
gs
iret
cmp
fidivrl
mov
push
add
pop
pusha
leave
decl
cli
dec
xorl
sbb
loopne
mov
es
arpl
pop
and
lahf
dec
or
out
xchg
and
inc
or
bound
dec
ds
push
jbe
push
outsl
cmp
mov
pop
rcrb
adc
or
ficoml
scas
pop
fldt
or
cld
mov
cmp
jno
xchg
loopne
xor
fcomps
and
daa
fsubl
xrelease
cs
cmp
ret
mov
sbb
movsb
sti
in
lcall
mov
in
mov
test
inc
mov
cmpsb
mov
pop
xchg
daa
mov
fs
insb
cmp
mov
add
int
mov
add
xchg
int3
outsb
push
xorb
adc
imul
sarl
dec
pushf
cli
dec
mov
scas
in
lock
and
rorb
das
pop
push
xchg
aaa
cs
bound
add
lds
push
aaa
xchg
cwtl
xor
inc
js
ds
lods
inc
xchg
in
sub
sahf
adc
inc
inc
fmull
mov
jmp
test
repnz
fwait
mov
andb
mov
scas
mov
pop
lock
xor
sbb
cmp
jg
bnd
xchg
xchg
lahf
jmp
enter
jae
es
xor
sbb
lds
clc
inc
dec
jb
mov
pop
jp
rorb
addr16
addb
xor
ljmp
mov
insl
lret
movsl
lret
mov
xor
push
xchg
mov
mov
push
mov
les
and
mov
or
mov
int
jmp
scas
pop
aad
insl
in
dec
cs
mov
cmp
mov
cmp
mov
iret
lret
es
jge
and
imulb
movb
shl
nop
adc
cmp
mov
and
mov
xchg
stos
push
pop
inc
or
jnp
add
push
fildll
mov
filds
mov
dec
inc
xor
dec
scas
ss
sub
mov
ret
pusha
data16
push
subl
shrb
or
je
dec
mov
pop
stos
repz
je
or
repz
iret
inc
and
add
sbb
nop
inc
push
jmp
xorb
sahf
pop
sbb
sub
push
mov
fisubs
stos
pop
mov
adc
cwtl
add
cmp
mov
incl
xlat
cmp
inc
daa
ds
xchg
call
cld
mov
fdivr
sbb
xchg
in
mov
sub
lahf
enter
push
ret
stos
fsubrl
sub
movsb
jne
test
and
inc
sbb
into
loope
fdivrs
gs
imul
ja
cmp
fst
xor
pop
std
lods
scas
jno
movsl
in
negb
cli
cmpsl
andb
cli
jge
stc
jle
pop
cmc
mov
lret
mov
test
xorb
push
sbb
into
mov
and
push
lahf
dec
cmp
repnz
inc
mov
mov
sti
add
xchg
add
jns
rol
jno
iret
adc
pop
jae
and
mov
fldcw
dec
pop
cmp
sti
jbe
and
std
cmpsl
jnp
and
dec
outsb
push
lcall
jecxz
fwait
push
pop
das
fdivs
addr16
pop
mov
cwtl
aaa
test
mov
imull
js
or
cmp
inc
fdivs
addr16
pop
mov
cwtl
aaa
test
mov
imull
js
or
cmp
fdiv
call
pop
cwtl
aaa
test
mov
imull
jns
or
cmp
inc
fdivs
addr16
pop
mov
cwtl
aaa
test
mov
pop
push
mul
xlat
xlat
push
mov
mov
dec
dec
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
push
mov
call
xor
pop
ret
jge
insl
dec
pop
js
call
outsl
jl
sub
fsubr
enter
call
lea
insl
dec
pop
js
push
sbb
fsubr
call
mov
clc
lea
inc
rclb
and
xor
xor
pop
into
stos
andb
loope
int3
fisubrl
pop
or
sub
lock
push
jb
cmp
add
cld
rcll
aam
sbb
push
std
les
in
cltd
mov
and
scas
bound
inc
decb
xor
push
adc
jne
gs
js
mov
xchg
push
sub
loop
or
jbe
in
cwtl
call
cltd
lods
ja
push
sti
sub
sub
dec
push
xor
sub
mov
fcomp
aas
cmp
mov
popf
push
xchg
cwtl
cmc
sbb
push
ret
mov
js
aam
fsubs
mov
cltd
ja
mov
je
pop
cld
dec
bound
sbb
test
pop
cmc
push
mov
xchg
or
cmp
inc
dec
insb
dec
addr16
push
or
lea
test
leave
adc
cmp
cmp
mov
mov
jmp
jmp
rdtsc
sub
or
fsubr
enter
call
popf
mov
insl
dec
pop
js
push
sbb
fsubr
enter
call
popf
mov
inc
lahf
loop
ds
push
sbbl
xor
jecxz
jne
jbe
sub
lds
sbb
xlat
push
adc
outsl
xchg
mov
lcall
add
sbb
test
pop
je
movsb
fstpl
or
clc
in
in
ftst
dec
ret
pop
mov
mov
sub
cmp
pop
xor
repnz
jb
cmp
std
push
es
scas
sbb
bnd
dec
gs
repz
adc
jbe
in
test
mov
lods
in
pop
or
clc
mov
sbb
mov
or
mov
dec
adc
or
dec
fsub
add
cmp
sahf
cmp
xchg
lods
rcl
lea
pop
int3
dec
addr16
lret
cmc
pop
cmp
add
cs
or
xchg
cld
mov
arpl
mov
cmp
bswap
adc
push
sbb
ficoml
les
mov
dec
leave
imul
or
and
push
adc
push
or
mov
hlt
dec
push
inc
fwait
call
scas
imul
xchg
mov
mov
aam
in
loope
aaa
xchg
ja
rcl
lock
mov
inc
dec
inc
cmp
fsubl
iret
bound
stos
and
addr16
ret
mov
push
sbb
pop
cli
stos
push
arpl
sbb
daa
test
sbb
ljmp
xchg
lods
lods
stos
js
or
mov
jb
xchg
fisttpl
dec
inc
or
xor
dec
cmp
add
bound
pop
mov
xor
pop
jp
push
inc
ss
or
push
mov
push
mov
notl
sbb
scas
jl
or
dec
inc
inc
clc
aaa
cwtl
aad
push
insl
ret
daa
mov
frstor
das
mov
es
pusha
aaa
adc
out
or
cli
out
and
sub
daa
gs
lahf
adc
fimull
mov
sahf
mov
or
nop
sub
outsb
nop
icebp
insl
mov
addr16
jbe
pandn
pop
adc
lods
or
mov
loope
mov
mov
push
stos
imulb
hlt
lcall
or
incb
add
adc
and
push
sub
cmp
inc
leave
mov
adcb
xchg
mov
or
scas
shrb
pop
cmp
out
pop
lahf
sub
xchg
inc
loop
daa
pop
out
xor
movsb
rclb
arpl
inc
cli
test
cmpsl
shl
jmp
data16
push
jb
stos
movsl
divl
in
adc
adc
mov
pop
cmpb
mov
sti
cmp
adc
cmp
frstor
dec
ds
cmp
mov
jo
scas
push
addl
aad
lret
cmp
dec
js
adc
cmp
test
lods
push
cltd
inc
push
in
jns
sbb
lret
lods
movsl
movsl
xchg
jge
pop
aam
call
cmc
adc
sbb
pop
repnz
inc
pop
cli
xchg
mov
mov
lret
popa
fbstp
das
shrl
ret
test
adc
jae
cmp
mov
sub
mov
or
add
and
ss
bound
lcall
mov
test
daa
jl
pop
cs
iret
sbb
or
cmp
pop
cmp
push
add
idivb
xor
dec
cmp
xor
fsubrs
stos
stos
call
and
out
push
mov
repz
add
fidivrl
dec
fbstp
stos
inc
add
mov
popa
sbb
stc
mov
ret
push
sbb
xlat
mov
or
bound
aaa
ja
outsl
jbe
cmc
inc
cmpsb
cwtl
push
xchg
insl
test
insl
stos
stc
outsb
sbb
bnd
add
sub
mov
mov
std
mov
xlat
jg
or
insl
aaa
mov
inc
lret
sub
jno
popf
outsl
sub
dec
lcall
stos
dec
mov
mov
out
sbb
out
dec
jle
mov
jle
jbe
xchg
push
and
jb
cmp
jl
mov
out
cwtl
sbb
test
decl
add
xchg
out
mov
daa
daa
gs
sbbb
int3
and
pop
movb
fdivr
jnp
sub
pop
rclb
and
icebp
sbb
or
xchg
dec
mov
lods
js
fucom
mov
popa
push
cmp
lea
mov
mov
push
xchg
aaa
pop
repz
stos
out
xchg
jns
mov
xchg
cmc
pop
mov
fcmovbe
in
int
dec
cwtl
and
test
stos
xchg
pop
gs
loop
test
es
test
ret
jmp
pop
adc
das
mov
sbb
cli
test
push
sahf
pop
inc
das
ds
out
imull
xchg
xchg
repz
mov
pop
mov
fldcw
pop
inc
sahf
daa
mov
xchg
inc
lock
dec
adc
aam
jle
push
imul
out
xchg
cwtl
xor
scas
xchg
insl
xor
cmp
cmp
fldl
cmp
sub
jmp
xchg
imul
int
and
and
xchg
jo
and
dec
adc
xchg
mov
jge
jmp
repnz
aad
insl
pop
call
mov
addr16
dec
or
outsl
add
nop
jns
mov
insl
cmp
pop
push
pushf
movsb
loop
sub
fsubr
mov
cmp
call
stos
fwait
or
jmp
dec
mov
mov
jne
movsb
out
aad
jmp
xor
push
add
xor
sahf
movsl
xor
pop
mov
out
jg
adc
dec
dec
les
jmp
cs
jmp
hlt
cmpsb
jmp
mov
sti
sbb
pause
repnz
adc
test
adc
stos
aaa
jb
loopne
fstl
pop
pop
dec
push
inc
loopne
andl
push
fcoml
out
xchg
jae
inc
lcall
and
mov
adc
dec
pop
or
fs
jge
clc
jnp
xlat
jb
lret
daa
push
push
mov
jge
popf
mov
pop
rcrl
aam
sti
lds
xchg
jo
aad
pop
xor
ja
dec
pusha
es
cmp
mov
push
jp
mov
mov
and
imull
outsb
pop
dec
xor
push
sahf
fld
orb
fucomip
enter
sub
mov
pop
testb
xor
mov
pusha
cmp
pushf
push
mov
pop
xor
insb
fsubrs
cmpsl
imull
lea
lret
push
loope
lahf
pop
xchg
cmp
je
movsb
stos
in
or
repnz
fidivs
and
mov
xchg
mov
push
in
or
xchg
fcoms
mov
sbb
das
pop
mov
inc
stos
fidivrs
and
mov
pop
push
sub
mov
cmova
stc
xlat
rolb
ret
ja
pop
outsb
jge
push
inc
lret
lock
std
pop
add
out
sub
pusha
xor
fwait
dec
stos
enter
pop
ss
add
cmp
push
or
mov
sub
popf
movsb
enter
xchg
cmc
fcomi
mov
clc
pusha
popf
test
jo
pop
popl
push
pop
cltd
jle
push
mov
mov
out
xor
imul
jmp
inc
xchg
aam
daa
inc
xchg
fnstsw
js
test
out
sbb
enter
jecxz
inc
jl
lods
push
sub
sub
jp
cmp
and
sbb
lds
repz
sbb
push
sub
or
lahf
scas
inc
mov
shl
rorb
jns
jno
push
and
push
sub
imul
fistl
mov
icebp
pop
adc
mov
push
repnz
push
jle
jecxz
ret
sbbb
sbb
xchg
xlat
sbb
shl
iret
scas
fwait
test
dec
out
out
mov
fsubr
and
arpl
adc
adc
push
popf
lds
push
cld
cmp
inc
push
jmp
fisubrs
xor
mov
jae
pop
fadds
or
cmp
into
cli
cmp
mov
dec
dec
mov
frstor
scas
lcall
and
pop
dec
cwtl
push
sub
fldcw
shrb
adc
or
pop
stos
sbb
insb
push
pop
mov
inc
cmp
lods
inc
fs
jmp
in
mov
xchg
xor
pop
jne
lcall
loope
fdivl
mov
mov
loope
les
jne
sbb
mov
push
cmp
pop
sbb
test
push
jb
rcrb
adc
popf
dec
test
mov
inc
repz
fcomip
push
mov
fwait
xor
inc
aas
cmpsl
out
pop
xorb
push
mov
or
mov
push
xor
mov
push
cmp
inc
fnstcw
arpl
rorl
test
pop
push
call
movb
mov
insb
cli
cmp
jmp
cmp
pop
leave
in
lret
jne
movsl
mov
pushf
out
mov
dec
pop
dec
xchg
mov
xchg
das
lcall
les
cmp
repnz
jecxz
push
inc
lock
je
out
mov
je
mov
mov
lds
movsl
rolb
lcall
insb
pop
push
mov
push
inc
icebp
aad
push
push
repnz
ret
andb
add
cld
cwtl
in
insl
aad
jmp
fst
and
jo
in
daa
cmp
sahf
fisubrs
cmpsb
bnd
test
insl
out
fistpll
mov
push
cmpl
cmpsb
popa
roll
mov
jecxz
xor
pop
ljmp
mov
imul
vaddss
mov
and
lods
repz
cli
shlb
mov
out
push
push
inc
push
xchg
push
shrl
aam
xor
lret
stos
ret
shlb
push
mov
and
scas
aam
cmp
pop
mov
iret
fisttpl
aad
xchg
aam
dec
movsb
movsb
mov
sub
arpl
loope
decb
push
xorb
push
jno
sbb
cld
sub
adc
popf
cmp
rorb
mov
mov
andb
dec
mov
mov
lods
xchg
push
ljmp
clc
loope
repz
dec
adc
jnp
in
or
les
pop
enter
icebp
cmp
pop
mov
out
xchg
cmp
sbb
xchg
mov
rcr
aad
add
mov
or
das
mov
cltd
pop
mov
rorl
popl
pusha
adc
ja
nop
repz
and
dec
add
aas
lds
sbb
xchg
jp
insb
jl
jge
or
sbb
fmuls
pop
popf
inc
std
mov
dec
mov
push
and
mov
pop
lods
fwait
sbb
popf
popf
push
jne
dec
mov
adc
loope
push
xchg
push
and
lods
into
aas
sub
adc
sahf
xlat
jo
add
out
fwait
mov
mov
daa
inc
and
fadds
out
and
adc
dec
in
push
popa
mov
jle
mov
fs
ficomps
pop
push
pop
xor
mov
and
or
pop
testb
mov
mov
aad
sub
mov
dec
negl
lret
cmp
out
mov
inc
aam
movsl
mov
popf
sub
pop
hlt
repnz
xor
sti
cmpsl
sub
dec
push
lret
pop
div
jg
push
jp
rorb
subb
dec
bound
sub
mov
pop
lret
imul
out
cmpsb
jecxz
jns
add
pop
mov
or
or
add
pop
sbb
insl
xchg
adc
addb
adc
jo
xor
std
push
cltd
and
or
lea
jae
std
pop
clc
in
test
test
ret
mov
push
pop
mov
enter
cltd
xlat
mov
mov
rorb
sub
mov
mov
mov
fcoms
xchg
rorb
out
xchg
mov
in
cmp
popa
xor
inc
mov
sahf
iret
insb
fs
aaa
sbb
dec
jle
fcmove
shrb
and
sbb
adc
leave
push
dec
les
cs
push
xchg
popf
or
test
frstor
stos
scas
mov
sarl
pop
sub
add
leave
inc
push
and
fstps
int
mov
sti
loope
int
rcr
mov
push
pop
enter
popa
arpl
add
lods
sbb
imul
xchg
out
stc
rorb
cmp
push
nop
and
push
mov
jl
jbe
lods
cmpsb
imul
inc
les
dec
push
inc
push
lds
inc
dec
mov
mov
xchg
iret
jl
int3
push
push
fdivs
mov
pop
mov
adc
push
jle
lds
pop
mov
out
fistpll
mov
or
aaa
je
mov
dec
das
mov
xchg
sar
es
addb
add
and
movsl
and
xchg
and
adc
pusha
inc
rcl
xor
add
cmp
ret
stos
data16
rclb
xchg
fstpl
clc
andb
pop
shl
push
repnz
aam
dec
js
imul
mov
adc
push
arpl
push
xor
imul
cmp
add
xchg
iret
pop
pop
fwait
jl
int3
lods
and
cmp
mov
mov
iret
iret
rorb
sbb
jo
pop
push
inc
cmpsl
push
or
je
mov
cld
loopne
or
xchg
cmp
push
push
out
mov
xchg
test
mov
pop
inc
jae
mov
je
insb
orl
inc
or
aad
inc
shrl
addr16
xor
in
movsb
ret
rcrl
dec
xor
in
adc
lahf
mov
jae
pop
jle
and
cli
adc
repz
pop
fisubl
xchg
push
aaa
push
xor
dec
push
pop
inc
push
cmp
cmp
lcall
sub
jns
stc
sbb
dec
pusha
sbb
cld
mov
pop
jl
jl
loopw
push
test
mov
inc
mov
inc
in
cmp
aas
sarb
popl
inc
add
sbb
das
cwtl
dec
adc
pusha
jmp
cwtl
push
pop
rolb
sbb
daa
sub
inc
dec
or
mov
cmp
sub
dec
les
lods
addr16
pop
mov
int
dec
mov
enter
lds
dec
stos
jmp
or
daa
xor
jne
cltd
arpl
into
jno
add
call
mov
push
xchg
cli
jg
insl
imul
faddl
xchg
add
mov
mov
push
nop
cwtl
add
pop
mov
loope
push
jbe
fadd
cmp
sbb
out
jb
icebp
sbb
xor
adc
sbb
daa
pushf
jbe
jbe
mov
enter
sbb
pop
pop
jns
dec
popa
test
pop
add
in
imul
cs
lahf
andb
cmp
bound
and
inc
idivl
into
cwtl
xlat
movsl
js
xchg
cli
fldt
xchg
pop
inc
push
leave
add
mov
mov
repz
mov
jg
loop
stos
mov
cmp
test
pop
test
jnp
js
daa
sub
add
repnz
and
int
or
js
push
and
lds
dec
loope
in
out
xchg
push
stos
popf
cmc
dec
push
call
xor
push
jge
inc
jb
ss
ds
mov
mov
andb
push
arpl
or
out
jmp
testb
push
push
andl
mov
cwtl
xchg
lret
fcompl
icebp
and
add
sub
das
pushf
fsubrl
ja
sub
loope
sub
pop
ret
push
loope
add
cmpsl
leave
fstps
mov
or
jmp
dec
lret
add
push
xchg
fmull
push
and
mov
cmp
adc
ss
lahf
mov
xor
mov
mov
sbb
xlat
mov
or
jp
fisubrl
movsl
ja
push
sti
ret
sbb
clc
outsl
movl
hlt
push
push
adc
sbb
mov
jge
repnz
adc
out
cs
dec
xchg
adc
loop
xchg
and
dec
jmp
add
adc
jnp
cwtl
pop
dec
nop
into
xchg
mov
pop
cmp
push
call
gs
int
ret
mov
shr
idivl
pop
test
sbb
scas
dec
jo
push
imul
ja
inc
xchg
cwtl
xchg
cmp
ficoms
and
sub
xor
add
imul
bound
lea
push
aaa
dec
mov
adc
data16
cli
aam
bound
jg
xchg
ret
and
sbb
sub
mov
mov
dec
and
mov
dec
xchg
imul
add
sbb
mov
jge
xor
mov
mov
insl
push
addb
popf
sub
jge
push
sub
js
scas
movl
adc
ficoms
inc
sbb
xor
dec
les
xchg
mov
mov
adcb
pop
lods
add
out
xor
adc
cmp
ss
sbb
js
or
jb
cmc
dec
test
push
push
test
adc
inc
and
cmc
mov
jg
jnp
push
out
xchg
push
xor
xchg
aam
jo
adc
jne
clc
insb
test
dec
xor
mov
repnz
insl
daa
add
in
mov
mov
dec
rcrb
push
scas
scas
repz
mov
xchg
incb
inc
cltd
push
enter
jns
outsl
mov
and
loop
std
lock
push
pop
js
sub
push
mov
jmp
aas
cmpsl
stos
pop
jmp
push
or
dec
and
mov
loope
push
dec
sysret
pop
lcall
pusha
addb
fwait
jb
mov
push
xchg
mov
idivl
pop
in
stc
es
lds
xchg
xchg
mov
jl
adc
or
dec
push
jbe
leave
mov
aaa
inc
orl
cmp
xor
loop
mov
stc
pushf
push
les
mov
mov
xor
cmc
xchg
mov
imul
cltd
push
lret
shr
adc
out
lods
repnz
pop
adc
push
inc
inc
jno
mov
idivl
lods
fisubrl
mov
arpl
jecxz
mov
into
repz
aam
mov
cmp
push
mov
dec
push
imul
ds
cmp
fisubrl
mov
lret
pop
stos
pusha
xchg
movq
pop
mov
les
or
and
outsb
xor
or
test
out
or
jle
mov
mov
or
loopne
fs
ds
mov
and
outsl
jp
rol
and
adc
adc
subb
enter
and
and
popf
int3
scas
jmp
leave
dec
pop
arpl
lea
pop
mov
negb
push
mov
clc
imul
aaa
lret
popa
cld
cmp
dec
jl
popa
in
mov
cmp
jecxz
in
loopne
push
mov
sti
mov
jbe
sub
sbb
inc
add
int3
nop
test
mov
pop
repz
push
inc
cld
jle
mov
pop
mov
add
mov
adcb
out
mov
das
in
or
test
sub
movb
sahf
jae
fs
and
xchg
add
mov
cli
fistps
sub
nop
sub
fldt
fisubs
mov
mov
sub
inc
insb
xor
push
and
js
xor
cmc
out
lahf
jge
data16
xchg
mov
pop
imul
dec
fwait
mov
pusha
pop
jle
and
incb
lret
sbb
mul
xchg
cmp
jle
lret
cmp
lahf
cmc
aad
lods
jg
stos
xchg
jecxz
rolb
mov
out
jns
mov
and
sarb
test
pop
mov
mov
mov
and
pop
add
idivl
out
sbb
pop
dec
jmp
push
insb
js
add
daa
fcmovnu
cwtl
cltd
imul
sub
mov
stc
cld
negl
jle
jno
and
and
jbe
jmp
dec
push
sub
daa
pop
push
pop
mov
ja
jmp
and
arpl
outsb
int
sub
mov
dec
das
outsl
addb
xchg
repz
push
mov
push
jno
cmp
add
and
xor
mov
jae
cli
imul
icebp
jmp
pop
ljmp
enter
popa
add
in
leave
inc
add
test
shrl
fs
sarb
lods
sahf
andb
stc
cmp
mull
mov
jns
call
cmp
sub
cwtl
repnz
gs
cmp
pop
lock
dec
ss
cld
lret
cs
out
rcl
cltd
popa
push
mov
pop
jl
push
add
pusha
push
movsb
inc
enter
flds
inc
mov
inc
inc
out
inc
stos
jmp
cmp
push
pop
mov
mov
adc
push
sbb
fsubr
enter
call
popf
mov
insl
dec
pop
js
push
sbb
fsubr
enter
call
popf
mov
insl
add
dec
push
sbb
add
enter
call
popf
cwtl
outsl
dec
pop
js
imul
mov
adc
clc
int
lret
ja
inc
jb
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
repnz
rclb
ret
push
rolb
divl
data16
bound
xor
and
adc
add
repnz
and
adc
add
push
subb
mov
xor
and
adc
add
repnz
loop
rorb
mov
jo
mov
andl
mov
insb
cmpsb
mov
inc
mov
bnd
fwait
sbb
jns
mov
mov
imul
xor
daa
dec
std
cwtl
addr16
test
pop
fildll
ror
out
mov
or
jnp
dec
dec
repnz
sahf
mov
out
mov
or
xchg
add
add
movsb
push
inc
add
xchg
ljmp
insl
fs
dec
outsl
adc
xchg
fistpll
inc
test
mov
inc
jb
jb
cwtl
and
repnz
fstl
cmp
or
loope
repnz
inc
pop
call
adc
push
lods
mov
ret
jb
bound
mov
or
inc
mov
adc
add
mov
mov
jle
outsb
jmp
mull
ret
add
xor
loope,pn
mov
lea
push
stos
icebp
je
andb
hlt
and
xor
shll
adc
pop
mov
mov
add
mov
mov
inc
jb
bound
xor
and
adc
add
repnz
and
adc
add
push
addb
bound
xor
and
adc
add
repnz
imul
subl
pop
test
pop
jl
iret
std
mov
mov
or
mov
adc
fdivr
pop
cs
pop
mov
popf
sahf
sar
cmc
pop
or
repnz
movsl
repz
jecxz
js
mov
mov
and
sbb
iret
jbe
dec
xchg
add
outsb
rorl
jmp
jo
inc
dec
lods
xchg
dec
mov
mov
aad
ficompl
sub
enter
or
sbb
cmp
jmpw
push
and
cld
test
out
add
mov
in
sub
pop
add
inc
mov
and
xchg
jp
ficoml
rolb
lret
stos
mov
xor
nop
push
js
ja
inc
mov
loope
mov
outsb
fstps
gs
ds
dec
mov
mov
cmpsb
sub
or
sbb
mov
in
pop
pop
pushf
sbb
outsb
movsl
pop
mov
pop
pop
push
push
cld
or
or
inc
ret
xor
mov
jns
mov
out
mov
and
xor
sub
sarl
es
dec
add
or
and
dec
adc
or
movsl
xchg
call
jnp
js
mov
jge
jnp
clc
aas
mov
addb
jbe
cwtl
lea
mov
mov
mov
inc
in
sub
outsl
mov
cmpsb
jp
dec
pop
and
dec
movsb
mov
and
push
jmp
sti
inc
cs
negb
xchg
in
push
mov
out
scas
mov
call
push
adc
jmp
cmpsl
gs
and
add
add
push
mov
or
loopne
sbb
or
cmp
cmpsb
mov
jne
sub
mov
stc
xor
hlt
test
stos
rolb
adc
add
sbb
jno
inc
xchg
std
sahf
mov
in
cmp
lds
movsb
sbb
lret
xchg
mov
lds
inc
lock
cmc
int
das
andb
je
pop
xor
xchg
sbb
rcrl
push
push
icebp
jge
mov
sbb
int
cmp
sbb
es
mov
dec
xchg
je
test
and
push
or
mov
push
sbbb
fisubrl
xchg
ror
aam
adc
aaa
cmovnp
loopne
or
dec
cli
pushf
pusha
mov
jne
and
stos
push
adc
fs
and
add
dec
into
sti
in
sub
daa
jno
imul
fs
movsl
movsl
mov
push
dec
aam
popf
cmpsl
mov
imul
add
push
ds
rcl
cmpsb
lahf
mov
mov
mov
dec
lock
inc
cmpb
in
mov
lock
or
cwtl
pop
pop
sbb
cld
int3
lock
inc
lock
aam
xor
push
je
imul
add
inc
stos
jbe
add
jecxz
pop
push
ds
fistpl
dec
lock
pop
dec
mov
pop
xchg
pop
aaa
pop
or
bound
or
lock
inc
mov
cmp
dec
ss
les
shrb
xchg
mov
aam
jg
sub
in
aam
xchg
jge
xchg
inc
or
add
out
in
xchg
fbld
bound
cmovb
jbe
jmp
mov
inc
dec
adc
push
enter
movsl
nop
imul
dec
dec
dec
push
fdivl
cmpsl
dec
fwait
and
shrl
push
rolb
add
sbb
fildll
sbb
mov
jb
jmp
into
or
xchg
push
loopne
addr16
cmpsl
xlat
mov
add
and
inc
sbb
movsl
popa
push
push
paddq
sbb
jns
mov
add
cmpsb
in
iret
jge
xchg
xor
mov
xor
xchg
cld
jo
mov
shll
jmp
outsb
push
movzwl
test
and
clc
and
xchg
dec
adc
cmpsb
xor
add
aas
mov
pop
sbb
or
mov
fsubs
sub
mov
inc
fsub
inc
les
and
test
adc
bnd
sbb
jne
iret
sbb
mov
push
inc
cmp
sti
add
xchg
scas
pop
push
inc
out
lock
xor
mulb
jl,pn
nop
gs
mov
sbb
mov
dec
into
stos
pushf
inc
dec
clc
cmpsb
mov
mov
pusha
shr
cmp
xchg
push
rcrb
or
inc
push
jnp
ds
push
aad
aaa
or
cmp
lea
pop
pop
or
ljmp
pop
add
or
loope
lods
dec
lcall
sub
shlb
popa
test
jns
out
or
jl
dec
cmp
dec
sbb
cmp
jns
mov
jmp
cmc
ds
mov
lods
ds
lcall
xchg
or
push
jo
mov
mov
int
dec
mov
mov
aam
sub
jecxz
pop
nopl
sub
xchg
vmwrite
sbb
mov
stc
mov
hlt
jbe
mov
and
call
mov
and
sbb
push
daa
aad
adc
cmp
mov
cli
dec
test
fadd
ret
sbb
push
std
xchg
jp
into
push
mov
jge
insl
pushf
mov
ja
lret
hlt
test
xlat
int
push
lret
lock
outsb
xchg
in
stos
jb
sub
dec
loope
ret
popa
jns
jmp
inc
mov
mov
mov
test
xchg
pop
ds
ret
scas
add
dec
mov
or
lret
xlat
cmp
cwtl
lock
xchg
cmp
inc
push
pop
sbb
outsl
daa
lods
pop
imul
or
push
add
arpl
stos
mov
imul
loope
aaa
cmp
add
add
enter
pop
mov
js
dec
mov
push
shll
dec
lcall
clc
adc
inc
xchg
aaa
jns
cmp
mov
pop
adc
cmp
std
push
rorl
std
xchg
pop
cli
adc
popf
jmp
adc
aad
sub
add
mov
out
ret
insb
mov
push
sub
scas
xchg
repz
data16
test
iret
xchg
mov
lods
adc
inc
fldt
sti
notl
sbb
pop
imul
iret
push
mov
dec
repz
out
jp
fs
mov
push
std
das
add
fs
sbb
inc
aaa
or
xor
mov
inc
out
adc
ss
inc
imul
sbb
dec
jmp
leave
cmp
pop
hlt
fwait
mov
jle
jae
and
inc
adc
xchg
les
in
scas
adc
out
adc
jmp
xor
mov
adc
lret
adc
scas
jbe
cmp
jl
adc
or
add
loopne
xlat
pushf
push
rorl
ljmp
dec
xlat
ficoms
jp
mov
pop
mov
mov
int3
sub
int
xor
xchg
pop
add
xor
loope
dec
clc
leave
pop
sub
sub
add
neg
rcr
xchg
nop
lret
push
xchg
enter
fsubrp
sbb
sbb
push
decl
into
insl
push
lahf
jnp
inc
pop
stos
sahf
pop
pop
mov
cmp
out
rcl
das
dec
cmp
xchg
sub
iret
push
aad
push
adc
adc
aad
ret
sbb
inc
add
jp
mov
inc
mov
clc
pushf
mov
daa
push
cmp
outsl
cs
mov
rorb
sub
bound
mov
test
or
sub
pop
jge
stos
mov
xchg
sarl
xlat
pusha
mov
inc
dec
or
dec
pusha
repz
arpl
xchg
pusha
inc
sbb
icebp
mov
lcall
pop
pushf
rorl
loop
in
push
test
nop
xorl
push
movsb
enter
test
std
inc
or
adc
cmpl
lahf
cmp
aas
sbb
in
fldenv
add
xchg
std
mov
mov
movsb
push
sub
arpl
mov
adc
cld
mov
loope,pn
movsl
add
pop
and
loop
ds
dec
loope
in
or
pusha
bound
mov
testl
test
lea
test
icebp
mov
or
test
movsb
shl
imul
in
adc
mov
sahf
sbb
into
xchg
ret
and
mov
inc
jbe
push
inc
in
and
add
xchg
loopne
or
arpl
adc
insb
jl
call
xchg
mov
aas
nop
mov
movsl
xor
repnz
and
jge
nop
mov
pop
fdivs
sbb
pop
lahf
out
lret
adc
inc
and
sarl
mov
jnp
jg
test
cmp
stos
jmp
push
xchg
adc
jb
xor
insb
shlb
repnz
xor
jnp
push
das
pusha
pop
sub
into
mov
and
stos
imul
pop
jbe
aas
dec
cltd
pushf
xchg
mov
cmp
dec
xchg
loop
pop
inc
add
jb
shrb
or
cltd
push
cmp
je
xorb
mov
ret
jl
jg
and
mov
and
cmp
or
dec
or
movsb
mov
jle
mov
sbb
dec
stos
data16
fidivl
mov
jno
sub
or
pusha
add
inc
test
dec
dec
cltd
mov
lock
push
cmpsb
mov
ljmp
int3
ljmp
push
mov
daa
xor
dec
add
and
out
les
pop
sub
push
aas
lcall
stos
das
std
push
mov
cltd
imul
scas
test
idiv
xchg
pop
xor
or
jle
daa
in
mov
mov
das
mov
inc
pop
sar
sahf
sbb
lods
out
mov
sub
out
dec
adc
xlat
add
add
or
xchg
push
incl
adc
and
out
pusha
sub
mov
cs
call
xchg
test
pushf
cli
push
mov
pop
xchg
add
fisubrs
or
movsb
adc
out
or
out
adc
inc
cmp
pop
das
push
xchg
xor
stos
in
dec
inc
xchg
sbb
int
sbb
inc
fisubrs
xchg
aas
mov
cmpsb
pop
cld
xor
mov
sahf
mov
mov
movsb
hlt
or
sub
adc
pop
frstor
sarb
fsubr
xlat
push
in
test
mov
xlat
mov
mov
subb
xor
push
test
xor
xor
cmpsl
fisubrl
gs
jl
mov
aam
mov
lahf
xor
ficompl
push
aaa
popf
stc
mov
dec
mov
int
call
dec
fs
cli
add
xchg
mov
adc
je
icebp
or
leave
sub
out
dec
iret
cs
lcall
fnstenv
push
push
jns
pop
or
sub
dec
rcll
add
adc
add
aaa
push
inc
mov
repnz
push
sub
mov
out
out
adc
dec
jmp
sbb
mov
pop
pop
dec
add
popa
push
adc
outsb
pop
mov
mov
pushf
scas
das
lock
insb
gs
loopne
jmp
loope
sub
push
sub
xor
gs
shl
or
fs
out
sub
sbb
dec
xor
xor
fmull
mov
jge
ret
lret
mov
mov
mov
dec
divl
insb
orl
bound
pop
out
into
pushl
in
push
cwtl
mov
aad
sti
mov
push
inc
fwait
dec
mov
xor
xor
push
ss
mov
lods
adc
pop
adc
aas
cmp
xchg
rcrb
insb
sbbl
sbb
jb
sub
pop
arpl
addr16
ds
sti
gs
dec
sbb
sub
push
xchg
repnz
repnz
shlb
push
cli
lds
xchg
xor
hlt
and
rorl
push
sbb
cmp
or
push
sbb
std
adc
addr16
mov
mov
in
lret
mov
fnstcw
jl
ds
das
sti
loop
jne
mov
sarl
es
sbb
das
adc
lret
or
jnp
mov
sub
push
gs
fdivl
jbe
pop
inc
push
cmp
popa
mov
mov
push
in
movsb
xchg
outsb
cltd
and
cmpsb
out
in
roll
mov
vmaxps
push
pop
enter
jns
xchg
clc
orl
jno
stc
pop
out
movsl
outsl
xchg
mov
sub
outsb
fisttpl
jns
jge
mov
bound
or
xchg
xchg
xchg
leave
jge
jae
mov
pop
jns
sub
or
dec
jmp
dec
in
lea
add
xor
imul
lods
je
adc
aas
bound
pusha
lds
push
xor
dec
adc
push
ficompl
cmc
mov
and
xchg
xchg
jl
bound
addr16
sub
pop
xor
adc
push
push
hlt
mov
lea
mov
sahf
mov
inc
fisubl
cmp
adc
push
out
in
pop
jge
leave
pop
sbb
sub
call
jno
mov
cmp
pop
mov
test
subl
jecxz
adc
dec
push
mov
or
adc
cs
push
or
int
jl
fs
lock
xchg
icebp
ds
int3
cwtl
mov
andb
stos
mov
add
sbb
pop
call
cmp
pop
mov
sub
xor
inc
mov
add
cmpl
xchg
inc
xchg
dec
int3
cmpsl
cmp
push
bound
adc
mov
pop
jecxz
pop
xor
leave
popa
clc
xrelease
rcrb
push
cmp
dec
mov
js
repz
pop
pop
pop
shrb
jno
std
fiaddl
imul
loope
adc
push
mov
daa
sbb
aaa
push
jb
fwait
sub
xchg
shll
das
mov
cmp
shl
push
test
mov
pop
addr16
pop
mov
fwait
adc
jnp
fisttpll
jbe
insl
out
outsl
loop
mov
xchg
and
jge
add
leave
into
cltd
mov
hlt
lods
push
sub
and
testl
movl
mov
lods
cltd
shr
movsb
push
or
inc
pop
int
scas
jl
es
adc
inc
xlat
pusha
rorb
adc
fcomp
mov
sub
int
dec
sub
hlt
in
mov
loope
arpl
shrl
sub
movsw
fildll
cmpsb
out
ret
lods
gs
jae
xchg
addr16
lcall
ds
jae
adc
mov
dec
out
push
mov
xor
adc
out
je
repz
leave
mov
mov
imul
call
push
mov
insb
aad
popf
insl
icebp
lcall
lea
mov
out
push
mov
sub
les
pop
adcl
daa
inc
test
push
loope
xchg
xor
and
out
jno
rorb
sub
fmulp
xchg
std
cli
or
iret
mov
pop
ret
sub
jge
or
rep
push
or
out
pop
xchg
fnstcw
outsl
js
cli
mov
inc
mov
test
mov
xchg
into
or
loopne
xchg
push
xchg
sub
jo
outsb
in
stc
es
mov
lds
fsub
or
and
shll
aaa
jno
dec
loopne
pop
and
sub
mov
arpl
sub
fistpll
jnp
dec
icebp
add
mov
clc
leave
out
sub
cwtl
aas
inc
loop
cmp
out
xor
test
xchg
xor
jp
loope
repnz
flds
addr16
pop
add
shrb
popa
xor
scas
cmp
data16
mov
cmpsl
hlt
mov
jnp
ja
shll
mov
pop
push
roll
adc
out
mov
sti
clc
xor
mov
iret
ljmp
inc
icebp
jg
cmpsb
cli
bound
outsb
add
mov
push
movsb
sub
dec
jg
ret
xorb
adc
push
daa
mov
pop
jl
out
cmc
adc
push
outsl
cmp
loopne
cs
outsb
jb
iret
sbb
mov
mov
inc
sahf
jmp
imul
mov
out
adc
cmp
lret
clc
aam
xor
dec
dec
popf
mov
mov
push
and
adc
fwait
roll
lods
aad
pop
xor
push
sbb
inc
es
sbb
or
mov
cmpsb
dec
iret
dec
popa
mov
leave
dec
adc
xor
mov
outsl
mov
lods
gs
push
gs
mov
and
repz
movb
mov
das
xchg
movsl
shl
rcll
mov
pop
into
xor
sbb
jle
es
aas
cmpsb
lret
cmp
push
les
cmpsl
fxtract
adc
mov
xchg
cmc
decb
mov
sbb
hlt
xor
jmp
incl
and
jg
cltd
mull
pusha
shr
leave
pop
mov
not
adc
push
xchg
fists
cmp
nop
pop
pop
stc
adc
or
in
mov
hlt
xchg
out
pop
add
push
cmp
imul
or
add
mov
inc
cmp
lahf
mov
adc
cmc
ss
cmp
jb
mov
bound
les
icebp
data16
or
fnstenv
fbstp
mov
push
jb
addl
loope
cmc
xchg
cwtl
push
xor
ss
arpl
js
and
xchg
fimull
cmp
jge
je
mov
xor
or
cmc
dec
stc
clc
mov
int
mov
in
repz
das
or
fidivrs
xor
mov
nop
js
into
add
pop
and
adc
or
iret
xchg
pop
nop
cld
xchg
pop
ret
outsl
outsb
jno
push
ljmp
stos
mov
and
sbb
daa
call
dec
push
loope
lret
add
scas
dec
stos
out
jae
mov
lds
xlat
pop
jbe
aad
pop
mov
lds
fs
out
ret
or
test
add
lret
mov
out
jg
pop
mov
adc
jle
jno
xchg
cmpsl
xor
neg
pushf
scas
das
mov
xchg
jnp
push
test
aas
fisubl
stos
insl
sbb
aas
xchg
std
pop
rorb
cmp
cmp
pop
and
scas
pop
mov
jae
push
out
adc
loop
xchg
and
sbb
adc
xchg
mov
lahf
imulb
ret
or
xchg
in
push
add
dec
out
or
adc
mov
sub
jo
loopne
adc
aam
push
jae
into
pop
inc
aad
sbb
bound
test
push
xor
std
push
stc
call
sbb
outsl
jno
or
ss
push
inc
xlat
cli
mov
ficompl
add
data16
push
dec
mov
mov
sahf
addr16
cmc
cmp
ljmp
adc
movsb
js
movsb
hlt
imul
sub
add
sub
dec
aas
add
mov
imul
sbb
sub
mov
dec
mov
daa
fucomi
xor
lret
push
in
lahf
pmuludq
cmpsl
xchg
cpuid
jbe
dec
pusha
mov
inc
sbb
outsl
repnz
pop
push
jle
into
or
cwtl
pop
shll
adc
xor
xchg
sahf
sbb
cmp
add
sbb
and
scas
cs
inc
pop
shrb
stos
out
das
mov
jle
push
in
sti
ja
sub
dec
fldenv
dec
push
ja
shll
int3
and
sti
add
fadds
shll
sbb
pop
jae
loop
or
je
mov
xor
dec
cmp
push
pop
and
adc
and
dec
add
sbb
jl
jb
shrb
in
popa
std
add
addl
dec
popa
test
jp
cmpsb
scas
loopne
shrl
add
out
popf
mov
cld
jbe
es
in
stos
and
in
out
negb
add
and
jo
cs
icebp
mov
cmp
ret
jb
bound
mov
mov
xor
and
adc
add
repnz
and
adc
add
push
addb
bound
xor
and
adc
add
repnz
rorb
ret
jb
or
mov
cmpsb
push
xchg
inc
mov
mulb
loop
fildl
es
loop
shl
ret
jb
bound
dec
bound
clc
xchg
inc
cmc
inc
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
hlt
add
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
cmc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
in
add
fdiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
cmc
add
dec
cmc
add
pusha
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdiv
add
clc
cmc
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
fdiv
add
call
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fdiv
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
inc
clc
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
clc
add
mov
clc
add
sar
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
stc
add
cmp
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fdivr
add
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
pop
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
cli
add
pop
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
