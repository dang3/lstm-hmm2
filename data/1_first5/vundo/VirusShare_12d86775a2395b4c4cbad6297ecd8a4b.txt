add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
sub
out
pop
dec
dec
dec
nop
push
scas
popf
add
or
add
add
push
add
push
add
scas
add
add
add
dec
add
add
stos
add
pop
add
add
add
add
scas
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
mov
add
add
add
and
push
add
scas
add
add
add
add
add
add
add
scas
add
sbb
sub
scas
add
add
scas
add
ds
add
add
dec
add
add
push
add
add
add
add
push
add
scas
add
add
add
dec
add
push
add
add
add
add
add
push
add
add
jae
scas
add
add
add
add
add
add
add
scas
add
add
add
add
add
dec
add
add
push
mov
add
add
add
add
je
scas
add
add
add
add
add
add
jnp
sbb
adc
inc
add
add
add
add
scas
add
add
add
dec
add
add
dec
add
add
dec
add
addr16
add
mov
dec
add
mov
add
scas
add
add
add
add
lahf
add
test
add
add
add
add
add
add
xor
dec
add
adc
gs
add
add
add
sbb
filds
pop
add
add
and
scas
add
add
add
add
add
add
add
inc
add
add
add
add
jns
ds
add
add
out
add
mov
add
add
out
jns
add
scas
add
jmp
outsl
add
scas
add
add
add
add
add
adc
test
mov
nop
add
arpl
mov
inc
add
add
add
add
add
add
icebp
add
add
add
add
add
add
cltd
add
add
add
add
je
stc
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
lahf
add
dec
add
ja
adc
add
dec
add
dec
add
add
ret
add
add
add
add
adc
mov
xchg
add
add
add
mov
mov
and
scas
add
aad
ja
sub
testl
fiaddl
cltd
add
add
add
add
add
add
add
adc
scas
add
add
add
addl
mov
add
add
add
jmp
insl
add
cmp
scas
add
add
add
push
add
add
mov
add
add
imul
scas
add
add
imul
in
rolb
addl
mov
push
add
add
add
add
add
add
add
cld
add
add
pop
add
add
add
add
cld
add
pushf
add
jle
in
icebp
xlat
aas
push
sbb
pop
enter
xchg
sub
scas
push
push
jle
dec
mov
push
inc
fildl
dec
xchg
or
inc
mov
push
dec
mov
dec
fwait
rorb
arpl
jl
out
cmp
mov
jecxz
lea
jne
dec
push
cltd
xchg
cwtl
pop
out
inc
push
sub
inc
or
push
and
test
add
xchg
push
xor
sbb
jnp
xchg
adc
sbb
movsb
ljmp
xchg
adc
fwait
out
out
sub
push
mov
mov
cs
dec
dec
pushf
outsb
xchg
outsb
xorb
mov
add
imul
nop
ljmp
mov
divl
js
shrb
filds
fcompl
call
push
in
pop
xchg
imul
jo
jge
jns
enter
mov
pop
and
pop
push
loope
dec
mov
cmc
xchg
dec
test
fisttpll
pop
cmp
sub
pop
aas
pop
lea
jne
shll
clc
cmp
and
enter
scas
repz
jae
imul
rolb
dec
imul
xchg
int3
pop
sbb
inc
in
out
pop
cmp
jle
js
js
call
stos
dec
adc
ss
sbb
xchg
shll
push
in
xchg
mov
stc
loop
lret
jno
xchg
je
fisttpl
sub
loop
push
push
sti
lcall
sar
repz
in
inc
test
sub
in
pop
mov
cmpsl
in
data16
lods
imul
xchg
dec
inc
xor
inc
insl
fs
lods
xchg
xor
jb
xlat
mov
mov
stc
mov
fwait
lret
cmp
rorb
jp
pop
popa
ss
das
inc
mov
xor
push
fs
stc
and
mov
pop
rcrb
aaa
lcallw
mov
int
inc
jg
pop
inc
sub
mov
hlt
sub
xchg
xchg
mov
jno
lds
sbb
sarl
push
dec
out
add
lcall
xchg
dec
mov
add
add
add
sbb
mulb
mov
fchs
sti
std
hlt
cli
inc
mov
lahf
fisubrs
mov
insb
inc
pop
xchg
and
repnz
sub
dec
sbb
pop
fdivs
testl
mov
mov
dec
mov
jmp
or
daa
mov
lods
stc
push
add
repnz
xchg
jmp
mov
ror
pop
mov
xor
out
imul
sub
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
cmp
push
sbb
jae
dec
sbb
add
testl
jmp
sub
arpl
jae
add
pop
and
mov
jecxz
repz
mov
fsts
arpl
jae
add
adc
dec
xor
ret
mov
repz
out
xchg
nop
xlat
cltd
les
xor
sbb
bound
and
subl
push
mov
sub
in
xlat
adc
fistpl
add
xchg
sub
cmp
fildll
divb
add
mov
outsb
pop
outsb
or
xchg
push
sarb
in
xchg
stos
pop
mov
scas
xchg
adc
testl
decb
and
mov
dec
int
cmp
sub
addr16
add
jmp
fisubrl
add
xor
lcall
sub
mov
mov
mov
sbb
xor
jle
mov
scas
adcb
jg
jbe
mov
cmpsb
pusha
inc
jge
sbb
jae
add
adc
in
xor
xor
in
jecxz
repz
loope
jmp
inc
pop
adc
jae
adc
add
addr16
xchg
xchg
fisubrl
imul
push
pop
scas
dec
push
push
fmull
repz
sub
xchg
mov
mov
push
pop
inc
sbb
pop
push
sub
dec
xor
jecxz
repz
sub
sub
arpl
jae
add
pop
and
mov
jecxz
repz
sub
lea
adc
mov
and
es
adc
or
in
out
movsl
roll
test
cmp
lcall
scas
xor
cli
dec
push
pop
xor
loope
and
mov
or
movsl
xchg
movb
int3
clc
cmpb
stc
loope
or
lock
test
push
and
into
aaa
lds
or
jo
jge
out
fsubs
mov
inc
cmp
mov
inc
sub
lret
incl
add
scas
mov
in
fptan
cmp
test
pop
jb
aaa
pop
js
sti
xor
ficompl
shl
arpl
adc
ret
adc
aaa
out
mov
ljmp
imul
insb
or
movsl
pop
add
js
sbb
jne
mov
icebp
pusha
rolb
scas
lret
jo
or
fisttpl
cmp
and
sti
inc
inc
out
test
cld
addr16
or
jmp
jge
xor
push
jge
xchg
jnp
int
lock
mov
dec
sub
mov
sub
push
or
jecxz
push
push
inc
imul
mov
fdivl
add
lds
sub
push
push
pop
call
xor
lds
sbb
das
das
jmp
inc
call
xchg
sub
push
cmpsb
mov
jle
pop
sub
scas
insl
xchg
cli
mov
cmp
mov
mov
cwtl
idivl
insb
je
int3
movsb
xchg
xor
mov
pusha
lds
call
lock
dec
and
jne
leave
and
pop
stos
mov
ja
inc
mov
sub
cmpsl
call
add
add
sahf
loope
sti
std
gs
outsb
xor
inc
popf
stc
or
mov
mov
arpl
test
xchg
das
adc
push
addr16
fldt
inc
je
inc
sbb
insb
dec
jp
in
mov
dec
or
adc
jnp
mov
jo
and
xchg
outsb
hlt
adc
stos
add
push
aam
in
data16
mov
mov
stc
add
lcall
xchg
jnp
test
movzwl
fs
lahf
and
inc
cwtl
data16
mov
rolb
cmp
jnp
sbb
dec
fimull
pop
divb
lret
push
and
jmp
inc
mov
int3
cmpsb
insl
je
or
push
sub
xchg
mov
mov
mov
popa
push
inc
and
stc
inc
mov
and
jno
jl
aad
gs
daa
mov
lods
decb
jae
xor
xchg
cltd
adc
pop
jae
xchg
and
cmpsb
insb
push
lds
inc
push
loop
imul
cmp
jmp
adc
stos
scas
mov
das
in
xchg
cmp
mov
inc
cmp
stc
in
dec
notb
cmp
pop
push
xor
cmp
out
lahf
jle
mov
ret
and
push
jno
mov
add
mov
xchg
jns
pop
lods
mov
stos
scas
loope
or
xchg
gs
push
call
dec
into
scas
pop
loope
and
lods
jbe
or
xor
add
push
in
nop
in
mov
mov
cmp
in
inc
dec
rcrl
std
cmpsb
mov
jb
movsb
or
int
shlb
loop
lea
clc
and
lods
fs
xchg
repz
xchg
jge
dec
sub
mov
mov
ret
int
push
in
movsb
rcrl
mov
divb
pusha
ljmp
js
movl
cmc
addr16
jl
mov
sub
or
orb
insb
and
xlat
mov
xchg
test
or
stc
clc
mov
into
and
in
inc
xor
outsl
or
in
test
sub
sbb
jp
in
icebp
jne
push
pusha
cmp
dec
sub
lret
cmp
dec
xor
cmpsl
aad
out
adc
cmp
jmp
sub
loope
cmp
jbe
sbb
sbb
xlat
into
call
pop
roll
mov
xor
mov
pushf
pop
lret
dec
jmp
dec
pop
scas
mov
mov
ud1
imul
sub
push
pop
outsb
pusha
hlt
rcrb
jle
sahf
mov
xchg
filds
dec
inc
sub
push
ljmp
fwait
pop
push
push
xchg
xchg
or
sub
outsb
fldl
faddl
mov
mov
mov
sbb
sti
mov
pop
je
cmp
mov
inc
lahf
dec
xchg
sub
jmp
insb
mov
mov
jl
pop
dec
aam
or
in
in
bound
pop
pop
adc
addb
sarl
sbbl
pop
push
cli
pop
and
aad
repz
pusha
or
mov
add
mov
shlb
add
push
cmp
dec
cli
mov
call
xor
xor
lret
movsl
cmp
inc
test
adc
mov
inc
or
jo
and
sbb
sbb
sub
nop
adc
testl
dec
das
push
ficoml
jge
add
cmp
sub
test
test
sub
test
outsl
sub
arpl
mov
lret
jmp
out
mov
cld
repnz
ret
addb
repz
setno
mov
push
add
dec
push
jl
mov
pop
sbb
add
mov
push
cmp
inc
lods
mov
inc
jp
gs
adc
fcmove
inc
insb
test
or
movsb
outsb
outsl
movsb
lret
push
mov
pop
sarb
or
pop
aaa
gs
xchg
pop
adc
jge
into
mov
dec
insl
pop
lahf
xchg
mov
cmp
ja
call
outsb
mov
xchg
and
test
in
jae
testb
in
or
insb
jle
dec
jg
bound
mov
shrb
stos
mov
mov
jle
scas
mov
sub
sub
rcrl
xor
xchg
or
adc
push
sahf
xchg
js
hlt
psubd
xlat
call
lret
cmc
lods
lods
subl
mov
sbb
aaa
in
outsl
addb
sub
addr16
xchg
out
cmc
in
sar
xlat
pop
call
push
in
cmp
xor
pushf
and
jge
or
cld
cmpsb
nop
pop
lret
subl
pushf
call
sahf
es
inc
in
sahf
xor
ret
sbb
adc
cltd
aad
cli
xchg
add
mov
pop
or
je
mov
int3
sbb
lods
out
es
cmp
pushf
std
xor
jp
dec
sbb
mov
xchg
aam
xchg
icebp
adc
test
add
push
dec
stos
ljmp
imul
popf
jmp
xor
sbb
or
insb
loopne
sub
push
pop
jns
rolb
imul
xor
mov
xchg
data16
jne
mov
daa
push
cmp
mov
mov
lret
insb
pop
jmp
aaa
and
dec
jne
in
inc
dec
sbb
sti
push
adc
mov
and
sbb
sbb
mov
in
inc
pop
aas
leave
lock
cmc
push
jle
enter
js
repnz
push
in
push
imul
shl
sub
rclb
hlt
arpl
pop
mov
incl
and
sbb
xorb
arpl
dec
fwait
stos
inc
dec
call
aas
cmp
sub
test
pop
xorb
dec
insb
cwtl
jmp
mov
out
xchg
test
pop
in
push
or
mulb
fistpl
jb
mov
jmp
fsubp
dec
xor
lahf
mov
sub
sbb
rorb
stos
or
test
inc
add
cmp
adcl
dec
inc
in
jb
sub
mov
sub
add
rclb
sti
sub
mov
cmpsl
sarb
leave
jb
ret
bound
fildl
arpl
out
out
jo
pop
mov
lret
out
lds
stos
pop
dec
and
or
push
jl
outsl
gs
aas
mov
xor
lahf
jl
cmp
lret
mov
and
mov
add
popa
divl
jo
pop
leave
cmc
jno
scas
push
stc
insb
jl
xor
pop
fsubl
insb
sahf
add
jmp
gs
enter
dec
lret
lcall
sbb
mov
sarl
rcl
inc
xchg
jnp
imul
mov
data16
jo
jns
dec
cmp
sbb
nop
cmp
fsubrs
add
add
pop
inc
js
lcall
push
lahf
pop
adc
xor
and
pop
fisttps
cmp
pop
fsubrl
adc
call
jecxz
shl
ficompl
mov
jle
mov
pop
in
scas
lahf
fmull
data16
dec
rcrl
add
insl
ficoml
scas
adc
lds
stos
rclb
dec
xchg
jle
push
ficoms
lea
jl
dec
out
jp
outsb
cmp
nop
jge,pn
push
fstl
out
jo
mov
cmp
jmp
fcomps
dec
inc
ds
ret
popa
loope
das
jnp
xchg
mov
sub
push
loopne
mov
and
fdivrl
jb
pop
jne
xlat
outsb
and
and
sti
xchg
xlat
sub
fidivrs
cmc
xchg
xchg
rcrb
mov
xchg
call
mov
jmp
out
cli
xlat
mov
xchg
xor
pop
fcmovu
mov
je
addl
movsl
mov
fldt
sbb
lock
push
cmp
mov
mov
jae,pn
data16
xchg
jo
sbb
cmp
out
popa
orl
and
aaa
pop
xor
arpl
mov
adc
shlb
sub
fsubl
in
sub
loop
insl
mul
mov
popf
adc
loopne
pop
mov
push
pop
into
pop
filds
cmp
mov
and
dec
mov
iret
dec
outsl
insb
mov
icebp
push
or
repnz
xor
jb
dec
push
cmpsl
mov
call
cmp
out
addr16
lock
test
or
insb
movsb
sbb
adc
imul
in
stos
sbb
dec
test
pop
push
push
mov
stos
dec
popl
jb
js
sbbl
lea
daa
fs
subl
inc
cmp
xlat
dec
xchg
sub
jae
sub
xchg
mov
test
bound
stc
jo
scas
mov
shl
xchg
pusha
lds
jg
dec
stos
jl
call
dec
aaa
xor
jmp
rorl
lods
test
pop
dec
jl
clc
push
test
ficoms
subb
sub
mov
mov
js
jl
xchg
stc
inc
mov
and
dec
nop
sub
mov
inc
movsl
mov
out
stos
mov
dec
sbb
mov
mov
mov
iret
sbb
xchg
loopne
scas
mov
jmp
push
shrl
mulb
ret
movsb
ret
or
cmpsb
push
push
mov
sub
ljmp
adc
sub
arpl
jae
out
cmpb
mov
hlt
fdivs
sbb
cltd
or
and
or
cmp
add
mov
add
xchg
fnsave
imul
enter
adc
ror
mov
fnstcw
and
cmp
push
lock
fwait
xchg
nop
lods
jnp
jge
or
ds
push
sbb
aam
enter
xchg
test
jnp
negl
adc
inc
stos
bound
xor
and
adc
ljmp
insl
dec
push
stos
decl
aaa
test
xchg
shrb
test
int
bound
bound
fwait
push
jp
sbb
xchg
flds
clc
cmp
cmpsb
dec
es
adc
mov
sarb
or
xchg
int
add
lods
incl
mov
xor
cltd
mov
push
lea
push
mov
xor
push
movl
lret
or
mov
xchg
jno
sub
sub
shr
add
cs
mov
or
xchg
imul
rcl
jbe
jg
push
mov
xchg
mov
fistpll
xchg
cmp
js
lods
inc
jne
sbb
ret
ret
mov
clc
negl
rorl
mov
jmp
loope
aad
or
dec
fistl
mov
dec
mov
jecxz
inc
fcmovu
adc
outsb
sbb
out
sub
jo
and
push
imul
mov
jnp
rcrl
and
mov
out
in
fnstsw
xchg
call
xlat
lahf
mov
das
xor
and
test
or
push
insb
lock
imul
int3
pop
jl
sbb
arpl
das
pop
push
test
insb
scas
out
sbbl
stos
lret
push
rcll
out
mov
jbe
ss
add
mov
jns
xor
mov
rol
lret
ds
imul
in
ret
mov
into
xchg
push
sahf
mov
mov
mov
aaa
push
sbb
cltd
shrl
and
xor
ss
sbbb
in
out
jmp
and
int
fsts
das
std
stos
out
mov
jecxz
mov
push
cmpsl
stc
test
in
test
rol
fidivl
movsb
add
jge
insb
mov
mov
push
jb
jo
add
enter
loop
insb
mov
stc
and
pop
inc
and
out
sbb
aam
cmpsb
inc
sti
pop
mov
adc
scas
cmc
or
cmpsb
pusha
push
xchg
mov
and
cs
mov
jl
adc
xor
push
jns
xchg
xor
dec
mov
idivb
mov
cmp
cmpsb
jo
push
leave
sti
sub
add
lock
lods
icebp
mov
add
add
rdmsr
sub
rolb
test
mov
mov
daa
jbe
mov
cmpsl
std
push
aas
stc
in
cs
ffreep
stos
sbb
sub
xchg
enter
lahf
out
loope
mov
stos
mov
loope
fwait
stos
add
mov
inc
rorb
dec
xlat
incb
mov
cmpsb
lds
push
and
hlt
test
sub
cli
fidivl
dec
ret
lods
cmp
jl
jg
std
push
xchg
cmpsb
sbb
xchg
cld
lea
inc
mov
out
ret
dec
jge
rol
and
popf
xor
jle
add
out
stos
std
fucomi
mov
sbb
adc
inc
ss
mov
gs
fcomp
xor
mov
loopne
adc
stos
out
push
cmc
icebp
xchg
out
mov
mov
lea
and
inc
mov
mov
push
pop
icebp
ja
xor
fwait
das
xchg
fdivs
rcr
xchg
xor
std
dec
or
test
roll
lds
sbb
jge
out
jmp
dec
decl
mov
dec
pop
std
mov
push
lret
imul
jno
mov
shrb
push
push
lods
cmpsb
outsb
in
cmpsl
push
pusha
dec
adc
movsb
into
iret
xchg
xlat
nop
call
mov
lea
dec
xchg
mov
push
push
mov
mov
mov
add
dec
lods
stos
push
xchg
leave
shl
leave
pop
stos
sbb
mov
ss
mov
adc
jns
xor
jne
push
sub
addb
mov
mov
lcall
nop
jmp
inc
shl
lret
pushf
adc
andb
sahf
call
ja
imul
sub
ds
std
fs
xchg
mov
push
inc
mov
sub
mov
xor
lret
sbb
pop
pusha
push
push
mov
sbb
sub
imul
test
and
jns
outsb
jl
fsubl
packsswb
imul
cmpsl
mov
push
dec
outsb
sahf
cmpsb
pop
push
loop
daa
adc
dec
addr16
xchg
clc
pop
sbbb
jle
mov
pop
aam
cmp
arpl
mov
imul
mov
sbb
pop
ret
inc
ljmp
lret
test
jmp
push
enter
shl
jno
xchg
shrb
repz
jecxz
jnp
mov
dec
jg
repz
inc
cltd
xor
sub
dec
popa
pop
pop
add
lcall
jbe
mov
inc
dec
sub
adc
dec
aam
xor
sbb
adc
cli
mov
push
sbb
mov
lods
clc
leave
hlt
call
xor
lcall
cmc
lods
cmc
sbb
fs
in
and
je
loopne
sub
add
fsubrp
sub
mov
imul
aas
push
imul
mov
stc
mov
cmc
xchg
add
pop
shlb
in
addb
mov
ret
pop
lret
mov
jge
adc
add
data16
jecxz
mov
jg
mul
xchg
dec
cmp
lcall
jecxz
adc
int3
aam
lret
in
pushf
lods
clc
scas
lods
mov
or
push
jge
push
jno
jg
stos
xor
or
jno
push
jmp
pop
inc
bound
xor
int3
mov
add
pop
xchg
mov
pop
mov
es
jo
dec
adc
imul
xchg
cltd
mov
mov
ljmp
pop
in
test
ret
xchg
dec
dec
jp
or
ljmp
lahf
subl
in
scas
aad
rcrb
subl
cwtl
lahf
sbb
push
repz
add
fistl
nop
fwait
gs
xchg
int
or
sar
les
xor
fwait
xchg
pop
push
lock
rcr
push
push
repnz
pushf
jmp
inc
dec
xchg
stos
arpl
shrl
or
xchg
outsl
inc
inc
xchg
mov
fldt
push
pop
repnz
inc
adc
cwtl
shll
pop
sub
fldl2e
xor
cmp
cwtl
inc
addr16
icebp
pop
les
push
xor
and
dec
rcrl
jle
out
lahf
fdivrl
lods
dec
pop
insl
lods
inc
sub
test
std
aaa
jns
call
pop
adc
inc
and
rcl
xchg
aam
jg
out
stos
cmpsl
stc
cmp
mov
and
test
negb
xor
cmp
sbb
loopne
divl
mov
sti
xor
mov
ret
sub
cmpsl
dec
sbb
dec
std
in
jge
mov
mov
stc
loop
shll
jae
pop
dec
fnsave
cwtl
or
loope
lods
add
push
or
insl
sub
cmp
add
mov
leave
mov
xorw
jl
add
insl
xchg
fisttps
or
push
adc
aaa
inc
imul
lcall
lea
repnz
push
xchg
sub
sbb
ss
add
add
xchg
mov
fwait
adc
rcr
loope
movsb
mov
jl
sub
inc
fstps
test
inc
ja
add
sub
mov
loope
push
lret
std
sahf
push
cmp
mov
jb
repnz
cwtl
stc
pop
fidivrs
push
in
shrb
out
das
xor
mov
sbb
mov
notl
aaa
mov
scas
jecxz
lock
sahf
dec
mulw
cs
in
movsl
adc
incb
cs
and
push
sbb
jg
cmpsl
pop
inc
xor
mov
sbb
cwtl
cs
shl
jbe
add
cmpsl
das
mov
in
jo
push
imul
xchg
jbe
cmp
stc
dec
sbb
push
push
in
enter
jne
pushw
je
shll
aaa
sbb
jmp
mov
add
inc
mov
mov
mov
pop
cmp
jmp
outsb
cmp
test
in
inc
mov
jb
jl
inc
cs
bound
lcall
sub
xchg
lcall
aad
jmp
jecxz
xor
xchg
out
in
xchg
push
jb
sbb
xor
mov
jmp
pusha
jg
jecxz
push
dec
cmp
testl
aam
mov
or
cmc
pop
mov
and
movsb
lods
and
in
shlb
xchg
add
loopne
xchg
jmp
add
jb
pop
aad
sub
adc
mov
jl
ja
mov
lcall
rcll
fadds
xor
insb
mov
ret
lock
jbe
lods
xlat
ljmp
mov
movups
dec
sahf
mov
ds
js
mov
pop
jge
cmpsb
sub
dec
mov
fcoms
notb
iret
das
jl
inc
in
mov
out
xorb
sbb
nop
js
adc
push
out
test
sub
ja
pop
xrelease
cmc
aam
jne
cltd
test
clc
mov
pop
fldcw
in
dec
pop
fdiv
sub
or
add
pop
and
mov
jecxz
repz
sub
sub
arpl
jae
add
pop
and
mov
jecxz
repz
sub
sbb
arpl
jae
add
pop
and
shrl
mov
sti
cmp
ja
inc
arpl
jae
add
pop
and
xor
jecxz
test
xor
pop
inc
dec
push
jnp
imul
xor
es
jg
loope
icebp
fwait
orb
pop
inc
dec
push
jnp
imul
or
cmp
sub
lret
sar
loopne
icebp
fwait
in
xchg
mov
inc
push
push
arpl
jno
add
adc
and
xor
shr
movsb
test
int
cld
xor
sbb
cli
and
xor
inc
xor
xchg
or
jne
inc
mov
add
xlat
cld
xor
or
shl
cs
push
adc
lret
push
loopne
push
mov
mov
fbstp
shll
out
push
fwait
jle
lods
mov
int3
pop
inc
mov
dec
daa
in
or
les
sub
push
cmp
adc
fs
mov
aam
mov
add
jl
mov
jbe
fstpt
or
icebp
arpl
mov
mov
stos
inc
cmp
xchg
jns
dec
or
and
inc
aad
xchg
mov
sarl
push
push
jnp
imul
sbb
cmp
xor
ret
shl
loope
icebp
addl
divl
inc
sub
and
xor
insl
gs
sub
mov
enter
sbbl
sub
sbb
ja
or
js
cwtl
movsb
scas
mov
fwait
in
pop
int
iret
in
add
add
add
or
or
cmp
sub
fcmovnb
lret
sar
loope
icebp
fwait
orl
push
jnp
imul
or
cmp
sub
fcmovnb
lret
sar
loope
icebp
fwait
orl
jns
push
sbb
pop
rclb
mov
outsl
imul
sbb
lods
mov
leave
and
jmp
and
in
addl
sbb
jnp
addl
jne
mov
dec
jno
add
add
addr16
xor
jg
shlb
sub
push
aad
and
stos
shll
sbb
pop
test
in
inc
shlb
mov
ret
sahf
cmp
push
dec
sbb
inc
add
xchg
call
or
pop
idivl
sub
mov
adc
and
lret
push
loop
xchg
ja
mov
jmp
test
push
repnz
scas
push
out
push
pushf
lcall
cmp
mov
lret
cmp
dec
xchg
iret
into
jbe
shrb
loopne
sbb
jae
data16
pop
sub
adc
mov
outsb
jp
aas
dec
lahf
cmp
pop
rcr
lcall
sbb
adc
mov
xor
cld
stos
dec
lret
or
and
xchg
mov
fadd
inc
mov
es
inc
or
test
mov
sbb
push
jae
aas
and
mov
popa
nop
xor
xchg
inc
imul
jecxz
or
test
shl
adc
cmp
dec
imul
imull
or
xlat
mov
dec
outsb
sbb
fcomps
sbb
testl
ret
cwtl
mov
jg
sub
imul
mov
xor
fsubs
sbb
int3
fstl
fadd
ret
xchg
inc
dec
lret
sahf
ds
cmc
je
mov
add
fsubrl
mov
scas
mov
arpl
je
and
enter
jl
add
jbe
das
mov
cmp
xchg
aam
jne
pop
mov
sub
mov
mov
mov
shrb
xchg
in
push
icebp
cmp
add
xchg
rolb
pop
mov
pop
pushf
pop
xchg
adc
xchg
pop
das
push
ja
mov
mov
xchg
push
imul
xor
xor
mov
pop
inc
mov
jge
sub
mov
cmpsl
inc
jb
xlat
push
rorl
sub
dec
mov
cmpsl
jmp
xchg
jmp
mov
xor
shlb
insb
sbb
jl
sub
scas
dec
pop
cmp
ja
jb
sti
loopne
test
adc
mov
adc
xchg
push
lcall
fdivrs
in
cmp
add
push
repz
dec
lods
xor
xchg
adc
addl
cld
dec
ds
lret
lret
mov
iret
outsl
stos
jb
sti
mov
das
in
rcr
and
ss
clc
sub
je
push
sbb
clc
sbb
pop
sbb
sbb
xchg
jns
jl
jecxz
mov
cmc
mov
dec
outsl
cmpsl
sub
out
sub
mov
loop
cltd
sub
or
add
dec
pop
cmp
scas
mov
stc
ja
test
lcall
push
pop
sbb
arpl
inc
std
std
pop
lret
inc
mov
pop
cmc
outsb
aam
aam
mov
xchg
outsl
imul
inc
rcrb
jo
ss
push
pushf
repnz
inc
jg
jp
out
fstpt
outsb
mov
inc
pop
inc
mov
push
mov
addr16
hlt
outsl
pop
or
daa
jle,pt
sbb
int3
decl
out
pop
mov
loopne
popa
pop
and
push
and
jb
xor
daa
jg
cmp
lahf
inc
insb
andl
mov
fisubl
jg
push
or
scas
mov
imul
pop
in
rcrb
shll
xchg
lret
mov
jg
sub
mov
dec
mov
xchg
and
test
mov
popf
sbb
in
mov
pop
cld
jo
movsb
cli
mulb
je
neg
push
cmpb
cmp
cmp
sub
stos
out
or
stc
aaa
call
pop
inc
dec
repz
inc
aaa
mov
outsb
mov
jg
adc
add
jae
add
bswap
sub
mov
shll
xor
dec
jge
js
adc
lea
aam
je
dec
aas
shll
or
mov
out
ds
or
mov
movsb
repnz
mov
or
les
cwtl
ss
iret
mov
push
sub
dec
xchg
pop
adcb
xchg
pop
mov
adc
scas
sbb
imul
add
or
lds
inc
call
test
sub
into
fnstcw
push
outsb
pop
push
xor
fs
out
dec
dec
mov
fwait
xor
std
pop
add
jb
pop
xchg
hlt
dec
xlat
adc
negb
or
shlb
xchg
xchg
out
jno
or
mov
lea
sbb
adc
lret
xchg
sbb
or
bound
inc
jle
shr
xchg
pop
out
dec
mov
out
dec
cwtl
xor
outsb
out
cld
xor
push
jecxz
dec
ror
push
jge
hlt
jle
push
pop
inc
dec
inc
lods
xchg
dec
test
mov
ds
inc
clc
xchg
adc
repz
int3
xor
dec
dec
add
or
jmp
pop
jae
jo
imul
mov
add
dec
aam
dec
jo
loop
cmp
insl
aam
sarb
adc
jnp
shlb
sub
adc
ljmp
dec
pop
jmp
rcll
outsb
nop
add
movsl
inc
shlb
pushf
mov
push
imul
sub
lret
adc
add
dec
jns
push
add
and
cwtl
in
pusha
pop
mov
rclb
dec
push
push
imul
jns
popa
cmpsb
in
lret
movsb
pop
cltd
xor
jbe
xor
dec
sbb
insb
mov
std
lods
inc
sub
and
div
ss
jmp
mov
and
pop
lahf
ss
pushf
add
dec
ret
add
nop
cli
jno
dec
lcall
fnsave
shr
data16
adc
jo
call
rcl
loop
push
inc
jbe
xchg
cmp
inc
lret
leave
pop
rcr
mov
inc
sti
in
pop
jne
gs
outsb
push
aas
aam
xor
cwtl
jmp
or
into
pop
not
xchg
nop
mov
insl
cmc
fwait
pop
lahf
inc
leave
outsl
xor
ret
pop
sbb
out
aam
mov
ds
add
and
cli
out
test
rol
and
jns
pop
shl
out
stos
test
pusha
ret
mov
divl
add
sbb
je
cmpsb
or
out
xchg
push
xor
aaa
or
lds
cmpsb
xor
int3
cli
iret
and
cmp
leave
pop
or
or
lods
pop
pop
xchg
scas
jnp
jmp
lret
cmpl
adc
movsb
mov
fldenv
loope
mov
cmpsb
fidivs
xor
xchg
add
mov
adc
sub
xchg
loope
jno
lcall
js
js
sbb
dec
pop
in
repz
int3
icebp
ds
mov
divl
jo
push
mov
movsb
push
mov
sub
cltd
pop
inc
fucomip
jg
and
lods
inc
lret
add
cmp
lea
daa
repnz
mov
sbb
jmp
test
inc
cmp
xchg
and
push
arpl
jle
fmulp
scas
push
ja
mov
aas
xchg
pop
mov
jne
cwtl
mov
cld
push
leave
jp
pushf
jg
outsl
pop
mov
aas
ret
dec
cld
mov
pushl
sub
into
jecxz
mov
jnp
xchg
xchg
push
ds
shll
xchg
call
lcall
fstl
mov
inc
inc
cli
ja
mov
and
aaa
inc
xor
decb
out
or
shl
lea
idivb
xchg
mov
popa
loop
inc
rcr
cwtl
xchg
je
mov
idivl
sub
leave
mov
push
cmp
cwtl
fists
xchg
xchg
mov
ret
fwait
pop
into
dec
repz
xor
mov
stos
imul
out
test
jb
mov
cmp
fsubr
xor
cmp
sbb
mov
test
sbb
rcrb
lret
jb
push
jne
mov
stos
aad
aad
lods
jp
or
test
add
inc
sub
push
jno
mov
push
out
sbb
fcomip
or
iret
inc
cmp
inc
shlb
xor
xor
mov
sbb
fwait
push
mov
pop
leave
jl
sub
pop
idiv
mov
cwtl
and
in
push
jns
mov
imull
aad
xchg
sar
and
es
mov
addr16
outsl
out
les
rorb
xchg
das
and
fmull
dec
or
repz
pushf
or
xor
push
addb
xchg
push
pusha
mov
xor
fmul
in
pop
fdivs
js
mov
adc
gs
gs
mov
icebp
mov
or
xchg
call
clc
push
push
sub
dec
andl
daa
xchg
pop
sub
pop
aad
mov
add
pushf
and
jb
adc
push
shl
xlat
loop
and
cltd
xchg
ret
ds
mov
lcall
push
dec
inc
gs
imul
data16
sbb
dec
loopne
jb
nop
jge
xor
and
testl
pop
push
das
sbb
jp
and
or
add
iret
filds
xor
xchg
dec
sbb
and
inc
cli
cmp
ja
sti
fistl
hlt
xchg
in
inc
cmp
test
xchg
arpl
mov
into
xchg
mov
mov
dec
jae
dec
mov
cmpl
push
xor
mov
outsb
mov
clc
in
fs
dec
orl
push
mov
xchg
mov
cmp
fs
shl
das
std
push
fwait
add
cmp
dec
add
imul
push
cmp
cmpsb
mov
sub
dec
inc
mov
loope
lret
scas
es
stos
inc
xchg
arpl
mov
inc
ja
cmp
mov
cmpl
out
mov
xor
and
stos
sub
repnz
sub
mov
fcoml
dec
pushf
out
nop
les
sbb
inc
push
gs
dec
mov
mov
ret
xchg
xor
mov
sahf
mov
cmp
pop
mov
aas
sbb
xor
adc
jnp
cli
pop
sub
rclb
xchg
mov
lods
fdivrl
sbb
fcompl
inc
cmp
and
adc
js
pop
add
sbb
xchg
sbb
fisttpl
push
into
xchg
pop
mov
push
test
adcl
addr16
and
fstl
inc
inc
inc
xchg
add
inc
lret
fbstp
adc
or
jp
jge
pop
push
arpl
das
inc
push
mov
and
in
ljmp
xor
and
and
and
call
lret
sub
es
pop
mov
mov
add
push
sub
stos
divl
cs
aad
call
push
mov
xor
imul
std
add
scas
fidivrs
fldcw
sub
out
push
add
xor
xlat
sub
sub
xor
aas
push
and
testl
push
jne
roll
stos
push
sbb
jmp
aas
mov
pop
push
and
dec
mov
in
sub
adc
inc
dec
sub
sub
mov
fs
jo
repnz
std
or
jp
mov
scas
cmpsb
mov
std
js
cmp
aas
or
imul
jle,pt
sub
les
sbb
sti
mov
in
sub
xchg
fidivs
rorb
add
out
gs
sbb
hlt
scas
jne
cltd
mov
pusha
lea
nop
xor
cmpsb
mov
lock
pushf
in
ret
mov
jo
ss
shlb
movsl
loope
push
xchg
or
bound
inc
test
add
add
cmp
xlat
dec
and
mov
dec
sbbb
sbb
cmp
shrb
and
xor
into
cltd
ds
jp
add
or
popl
pop
cmp
inc
sahf
movsl
mov
clc
jle
in
cwtl
std
leave
jg
sub
sub
movb
sbbb
cmp
scas
push
lret
ret
jne
dec
mov
shll
inc
mov
inc
enter
or
fists
pop
pop
xchg
cli
in
jo
mov
cmp
jae
out
mov
pop
sub
and
mov
jmp
sti
out
jne
stos
cmp
movsl
cli
shr
mov
dec
pop
pop
adc
aas
imul
cmpsl
cmpsl
adc
pop
xor
neg
enter
loop
or
xor
std
and
test
dec
cmp
dec
mov
mov
mov
mov
xor
call
pusha
idivl
or
fists
repnz
sub
xchg
jle
sub
sbb
sbb
fwait
adc
loopne
adc
test
adc
js
adc
xchg
pop
out
pop
xchg
dec
push
ret
mov
add
in
outsb
mov
cwtl
jnp
or
fs
jmp
aad
mov
pop
rcll
mov
and
add
or
mov
push
dec
pop
mov
ja
test
repnz
fnstsw
fidivrl
pop
or
adc
jnp
movsb
imul
mov
lods
loop
stos
hlt
orb
xchg
sbb
lods
adc
cltd
fsubrs
cmpsl
cli
xlat
movsl
adc
mov
pop
test
cwtl
inc
outsb
les
mov
out
push
cs
add
and
add
test
jb
lret
ficompl
sti
sbb
mov
fisubl
nop
push
mov
dec
pop
fnstcw
cwtl
xor
ficomps
pop
mov
adc
inc
and
hlt
push
mov
arpl
ljmp
lret
dec
mov
ds
pop
push
mov
fisubrl
cld
inc
mov
cmp
mov
mov
fsubs
mov
ja
xor
push
rclb
mov
jno
cli
icebp
mov
pop
fnstsw
adc
das
or
pop
or
lods
xchg
jae
ds
add
dec
imul
push
jmp
lret
clc
cmp
adc
cmp
test
sbb
adc
subl
and
dec
test
imul
mov
fiaddl
adc
popa
pop
mov
sarb
push
rorb
adc
clc
rolb
loopne
add
mov
sbb
mov
mov
adc
test
mov
pop
js
fs
sbb
or
inc
xchg
leave
nop
push
in
lahf
dec
rcrb
cmp
push
xchg
cs
adc
inc
xor
push
sbb
ret
adc
in
mov
in
loope
sbb
enter
rcrl
inc
mov
or
push
popf
mov
mov
or
cmp
mov
es
adc
bound
pop
clc
fldenv
dec
mov
repz
push
mov
and
mov
or
stc
mov
push
or
stos
cli
addr16
flds
call
inc
jmp
and
cltd
inc
lea
jbe
dec
test
push
push
push
loop
inc
sbb
shll
jne
xchg
adc
addr16
xchg
cmp
xorl
stc
clc
dec
adc
and
fiadds
outsb
shlb
das
push
mov
jae
inc
aad
inc
push
je
sub
call
lock
ja
scas
mov
mov
fisubrs
xchg
gs
xchg
addr16
add
xchg
jnp
ror
int
fs
jbe
jp
xlat
aam
movsl
jmp
mov
adc
add
data16
std
mov
add
push
mov
mov
fidivl
and
rcrb
je,pt
mov
xchg
xchg
outsb
cmpb
push
dec
push
cmp
mov
inc
cmp
push
pop
rolb
sbb
xchg
ljmp
js
test
popa
es
cld
pop
mov
jp
xor
add
jo
push
int
sub
divl
add
mov
add
cmpsl
out
dec
jmp
jnp
flds
shl
mov
pusha
xchg
jae
ds
push
jne
int
sbb
gs
test
aad
inc
loopne
adc
je
jl
mov
insb
lds
jg
call
divl
daa
cmp
repnz
out
icebp
call
adc
pop
xchg
iret
xchg
mov
and
das
cwtl
mov
aam
sarl
xchg
fldt
mov
mov
mov
enter
xchg
jecxz
icebp
inc
cmp
js
insl
and
movsb
movsb
push
iret
adc
jbe
mov
cmp
mov
inc
inc
pop
aaa
dec
mov
sub
pop
jmp
scas
or
pop
adc
jp
lock
lahf
xchg
dec
push
xchg
popa
fsub
mov
daa
xchg
je
xchg
sub
scas
jge
lock
sub
and
adc
adc
sti
jl
mov
or
dec
mov
push
divb
popa
ficoml
daa
les
adc
js
aam
ret
cmpsl
andb
mov
jb
imul
or
dec
mov
aas
or
data16
pop
sbb
mov
push
add
pop
jl
xchg
sti
orb
lods
jmp
idivl
xchg
js
ja
ja
pop
popa
cmp
stc
mov
fcmovbe
sub
ret
rcll
mov
cmp
repz
dec
fwait
mov
jmp
pop
and
jae
iret
in
mov
test
sbb
sub
loop
mov
test
lods
mov
add
or
dec
xorb
xor
dec
movsl
mov
jne
jbe
aad
cmp
jbe
scas
push
leave
mov
xlat
icebp
mov
lods
outsl
pop
inc
mov
mov
adc
dec
cmp
xchg
sub
cmp
push
push
test
pop
push
loopne
pop
and
mov
ror
or
imul
lea
mov
shl
ljmp
arpl
cltd
mov
xchg
cmpsl
push
or
or
aad
add
push
mov
jg
mov
out
int
inc
xor
int3
jl
mov
fbstp
in
mov
or
xchg
cmpsb
xchg
push
dec
popa
insl
pop
shl
jl
fisubs
mov
pop
push
add
or
sub
shlb
cli
mov
cmp
mov
and
out
push
cltd
scas
arpl
imul
in
ja
out
into
sbb
mov
push
frstor
push
fldl
pop
rorl
mov
addr16
sub
lahf
gs
int
cli
xor
testb
jns
jbe
jmp
pop
int3
xchg
rorb
lea
push
sub
mov
jp
cmp
popf
mov
push
rolb
fists
pop
clc
inc
imul
cmp
pop
mov
mov
lods
inc
and
cmpsb
push
and
xchg
adc
push
andl
fcmovb
sbb
jae
sbbl
adc
dec
cmpsl
out
in
rorl
in
mov
int
bt
test
sarl
mov
sar
xlat
leave
stc
and
xor
jno
xchg
mov
sub
or
mov
dec
inc
incl
mov
cli
push
inc
in
mov
sub
lock
cmp
dec
push
popa
cmp
pop
mov
push
cmp
popa
jp
out
and
xchg
add
loopne
cmovl
lods
inc
jecxz
sbb
repz
push
or
mov
rcrb
sbb
mov
dec
inc
ret
pushf
add
xor
mov
insb
adc
or
sub
push
hlt
aad
cvtpi2ps
out
push
imul
dec
mov
divb
subb
ret
or
sub
test
push
mov
jp
jns
bound
mov
pop
arpl
dec
xchg
or
mov
jno
mov
pop
movsl
adc
pop
xlat
sbb
add
jmp
and
mov
adc
ret
pop
mov
jle
inc
and
xor
xor
adc
mov
stos
lods
hlt
xor
sub
out
sub
lea
pop
loop
dec
out
dec
es
mov
jnp
inc
mov
das
xor
inc
xchg
nop
push
cmp
iret
xor
push
inc
push
mov
pusha
push
cmp
jmp
roll
fnsave
mov
sbb
push
int
cmp
pop
mov
int
fwait
xchg
add
lret
dec
js
and
mov
sub
cli
repnz
insb
inc
push
in
addb
imul
or
cmp
sub
fcmovnb
lret
sar
loope
icebp
fwait
orl
push
jnp
imul
or
cmp
sub
fcmovnb
lret
sar
loope
icebp
fwait
orl
push
jnp
imul
or
cmp
sub
fcmovnb
lret
sar
loope
icebp
fwait
orl
push
jp
imul
or
mov
shll
loope
xchg
or
outsb
inc
pop
push
dec
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
data16
or
cmp
sub
adc
sti
fwait
mov
test
lret
jmp
jmp
sbb
or
cmp
sub
jnp
dec
jnp
imul
mov
stos
jmp
lahf
sbb
sti
fucomi
icebp
add
xor
xor
arpl
mov
into
cli
stos
lret
lcall
push
sbb
dec
insb
mov
dec
in
stos
cwtl
adc
std
xor
mov
mov
inc
insb
dec
xor
test
das
sbb
je
jo
outsb
pop
push
dec
sti
push
cmpsb
jnp
sub
or
arpl
je
gs
jbe
cmp
inc
or
dec
sbb
test
mov
pop
fs
data16
xor
jno
subl
jnp
mov
sub
push
push
jmp
je
cwtl
stos
sbb
scas
adc
adc
jmp
cmp
stos
into
inc
mov
lahf
mov
sti
mov
sbb
cmp
sub
imul
dec
jb
subl
push
mov
in
lret
sti
mov
or
jne
add
pop
cmp
lret
repz
cli
les
sti
pushf
xchg
arpl
add
sbb
pop
sub
xchg
loop
ljmp
sahf
movsb
mov
pop
or
pop
pop
pop
cs
jnp
dec
jnp
imul
fwait
stos
jmp
sti
lret
lret
sti
fucomi
sub
cmp
or
sbb
imul
dec
jnp
imul
fwait
stos
jmp
sti
lret
lret
sti
fucomi
sub
decl
pop
jge
lahf
and
fs
mov
fdivrl
inc
xchg
push
mov
or
inc
pop
pusha
in
push
lods
or
insl
adc
icebp
movsb
xchg
add
shlb
mov
dec
popa
out
cmp
mov
jns
jnp
push
mov
sti
fwait
js
xlat
bound
xor
cmp
dec
es
jp
in
ljmp
inc
inc
ljmp
pushf
leave
sub
leave
xchg
out
sbb
imul
ds
xchg
inc
mov
stos
rolb
jl
popf
rcl
daa
xchg
fistl
inc
data16
lret
dec
inc
mov
addr16
test
jae
dec
shlb
and
xor
lock
inc
sub
lods
push
sti
mov
fdivp
jmp
or
dec
cmp
enter
dec
aam
daa
pop
icebp
movsl
or
push
and
jle
xchg
enter
mov
lds
stos
push
sbbb
jp
adc
mov
sahf
movhlps
push
push
test
push
sbb
jmp
out
mov
adc
pusha
push
out
std
mov
push
inc
push
in
ss
lahf
sbb
cmp
bswap
fs
in
dec
lret
call
mov
xchg
loope
pop
cmpsb
jno
adc
jl
mov
hlt
jl
icebp
adc
ss
pop
out
sub
or
pop
xchg
div
test
fcomps
adc
mov
in
mov
cmpl
lret
test
push
cmp
ja
adc
sub
adc
cmpsb
ret
jns
jb
mov
xchg
test
fstl
lds
and
scas
data16
scas
aaa
sbb
icebp
loop
jp
xchg
rcrb
push
push
pop
or
jno
jno
das
test
rolb
imull
push
dec
scas
jb
push
fwait
cmp
inc
and
adc
xchg
addb
test
push
xor
add
pusha
mov
pop
pop
jno
mov
sbb
pusha
xor
xchg
ss
or
pop
mov
cmpsl
aam
stc
push
sub
lcall
jo
fistpll
ja
mov
test
ja
pop
inc
repz
fwait
outsb
xor
or
mov
insl
or
movsb
sti
xchg
push
pop
test
iret
sbb
inc
int3
push
push
lahf
xor
pushf
mov
sub
jp
sub
mov
push
pop
aaa
fsubl
adc
fs
xchg
xor
ds
daa
dec
imul
jo
ljmp
cmp
mov
cltd
add
push
cwtl
jmp
xlat
arpl
int3
push
mov
jmp
sub
xchg
sbb
roll
les
scas
int3
cmpb
repz
shlb
fsubs
iret
popa
mov
lret
outsb
mov
pop
jmp
dec
xchg
jo
jbe
test
dec
in
mov
cmp
sbb
mov
and
out
mov
shll
jnp
pop
sub
in
test
push
xchg
mov
inc
pop
leave
jbe
mov
cmpsb
cli
and
pop
xchg
clc
dec
xor
mov
pop
mov
pop
cmp
cmpsl
pop
sarb
pop
lret
sbb
cmp
pop
in
shrl
in
outsb
data16
pop
int3
ja
sub
and
dec
inc
or
nop
rep
fucom
std
xchg
fwait
and
cli
pop
movsl
faddl
cmpsb
scas
cmp
jno
jo
xchg
pop
mov
fisubrs
clc
mov
in
push
out
cmp
hlt
xchg
push
mov
mov
mov
adc
ds
leave
mov
in
or
mov
loop
ja
mov
pop
movsb
xor
push
popf
fadd
es
stc
sub
mov
pop
jge
cmc
inc
mov
ss
or
int
repz
das
js
xchg
lcall
loopne
jnp
cmp
add
gs
and
ja
xchg
sbb
lret
or
cmpsb
pop
ret
repz
adc
push
mov
clc
xchg
mov
addl
outsl
dec
jae
repz
sbbb
mov
fadds
adc
mov
jb
push
aam
xor
test
shlb
sahf
ficoms
ret
mov
aad
push
outsb
fildll
sub
pop
ja
aam
mov
inc
jne
push
dec
jae
in
mov
std
test
dec
icebp
add
iret
push
mov
imul
lods
outsb
sub
push
js
sub
jbe
sub
fnstsw
inc
mov
pusha
repz
fimull
xor
cld
repnz
ret
xchg
add
stc
adc
mov
adc
xchg
add
sbb
hlt
cmp
inc
imul
out
addr16
inc
cs
cmp
lret
cltd
xor
adc
insb
pop
out
outsl
or
fwait
aam
aaa
bound
push
or
dec
ror
xlat
ror
push
xchg
mov
fs
scas
into
fidivrs
out
mov
jns
sahf
lods
sahf
outsl
adc
arpl
dec
sub
adc
lods
mov
cld
push
pop
cwtl
movsb
and
add
inc
repnz
out
jne
mov
push
push
jecxz
cltd
mov
int3
call
pushf
shrl
sbb
pop
fdivs
mov
dec
dec
xor
pop
jecxz
rcrb
or
mov
stos
pop
fwait
mov
pmaxsw
mov
cmp
pop
dec
pop
or
mov
push
test
pop
mov
add
jmp
dec
in
notb
lods
or
cwtl
in
dec
and
in
into
sbb
pop
clc
push
jle
inc
sbb
out
mov
adc
jmpw
mov
lret
or
sub
adc
lock
dec
adc
jns
pop
jecxz
out
or
stos
sub
ljmp
ficoml
in
mov
cltd
pop
add
fisttpl
mov
pusha
xchg
cli
mov
movzwl
mov
mov
hlt
daa
cs
bound
inc
dec
mov
mov
mov
imul
mov
popf
and
pop
scas
push
pop
imul
cmp
cmc
cmpsb
xchg
xchg
xor
sub
mov
and
hlt
or
xor
pop
mov
insl
inc
xchg
les
les
sbb
outsb
jecxz
popf
lods
mov
cmp
jp
nop
shrl
fcoml
cmp
sbb
jne
pop
cwtl
xchg
je
xor
out
fistpl
imul
ret
xchg
sub
jmp
cmp
aam
adc
pop
sahf
inc
das
dec
gs
push
push
and
insl
orb
push
loope
dec
js
outsl
pop
fdivrs
xor
add
in
cmp
mov
popa
out
cld
sbb
mov
les
mov
mov
mov
fdivl
mov
mov
mov
xor
ljmp
sahf
sahf
nop
push
adc
dec
jo
or
jbe
pop
repz
lret
jno
mov
mov
sbb
pop
test
loope
mov
mov
mov
jnp
faddl
and
sub
xchg
adc
sub
jo
xchg
jnp
fwait
enter
dec
cli
push
cmp
jbe
out
outsl
pushf
bound
push
lods
push
test
add
gs
inc
out
jbe
jnp
add
sub
inc
xor
adc
ficomps
push
daa
mov
jg
mov
sub
sub
jmp
outsb
mov
imul
sub
rcrb
movsb
std
roll
int
sbb
xchg
js
addb
lcall
or
pop
jae
adc
aam
fwait
sbb
popf
clc
mov
cmp
xor
and
fsubr
fcoms
movsb
leave
mov
cmpsb
lcall
push
cmp
push
or
dec
jmp
add
mov
push
sub
daa
jmp
imul
jle
xchg
addl
dec
repz
sbb
sti
push
dec
aaa
int
jns
xchg
outsl
jbe
jmp
scas
adc
jl
lock
loop
cmp
sarb
mov
or
inc
or
bound
subb
and
out
dec
mov
or
adc
mov
cmp
push
push
jo
into
aaa
arpl
cmp
mov
outsl
fisttps
lods
stos
jne
sub
push
mov
sub
cs
sbb
jle
sbb
jb
sbb
ja
cs
test
mov
popf
aam
test
adc
mov
outsl
sbb
sarb
inc
xor
xchg
sbb
icebp
sbb
ret
jnp
pushf
sarl
or
cmpsb
pop
ljmp
mov
pop
jecxz
cltd
sub
negl
test
insb
dec
lret
or
out
push
dec
xor
sahf
pop
cmpl
fsubrl
jmp
pop
sub
in
add
sbb
jecxz
rol
dec
or
sbb
scas
push
lahf
inc
mov
or
je
lcall
mov
xor
repnz
sub
clc
les
fsts
sbb
dec
jno
xor
mov
jmp
or
xchg
jne
imul
ret
xchg
and
pushf
lahf
push
repz
inc
mov
xchg
mov
mov
fs
push
repz
sbb
leave
test
xchg
stc
cmp
xchg
loop
leave
pop
aam
aas
dec
pop
pushf
and
jb
add
data16
push
add
inc
xchg
cmpsb
fdivrl
jo
pushf
push
dec
test
imull
xor
pop
lcall
sub
adc
int3
test
ljmp
fcmovnbe
ret
fisttps
mov
xchg
aaa
scas
aas
mov
popa
push
subb
es
cmpsb
mov
sub
mov
mov
fists
in
imul
ficompl
xor
push
iret
in
loope
sub
push
inc
mov
es
cmpsb
push
imul
sbb
insl
dec
sbb
dec
ds
in
imulb
loop
cli
cmpsl
lds
pop
push
xchg
add
jmp
jb
inc
pop
das
xor
test
dec
outsl
sbb
xchg
repnz
loope
jle
popf
out
cmp
ret
cmp
movsl
inc
lods
or
jge
add
cld
push
loopne
fimuls
and
adc
sahf
cwtl
out
fsubr
jo
bnd
mov
scas
enter
daa
fsubs
cmp
sbb
ja
mov
repnz
adc
dec
mov
xor
or
hlt
sbb
xchg
adcb
icebp
test
lods
fistl
jno
cmp
dec
arpl
jns
aad
scas
mov
push
data16
dec
gs
mov
loop
mov
pop
push
mov
outsb
or
ljmp
inc
xor
and
out
push
adc
pop
pop
add
add
les
cltd
mov
push
fidivrl
dec
lods
aas
call
dec
lods
cs
mov
rorb
adc
fmull
mov
idivl
push
sbb
imul
cld
outsb
js
push
adcl
and
fsubs
pop
ss
mov
or
aaa
lcall
out
jo
enter
and
shlb
sbb
sub
mov
into
lea
rcll
adc
pop
cld
mov
out
into
outsb
and
icebp
adc
pop
jnp
dec
cli
mov
inc
and
pop
sub
add
lds
dec
mov
popa
mov
adc
sbb
mov
loopne
push
int
ds
adc
and
add
cwtl
and
adc
pop
push
adc
inc
test
lock
arpl
or
shll
outsb
repz
test
jle
cmp
ja
mov
jl
jge
rcrb
or
or
xor
ret
xchg
mov
push
adc
es
movsl
sbb
test
dec
ja
mov
jnp
movsb
sbb
mov
pop
stos
push
imul
sub
jnp
jae
movsb
bound
outsb
les
add
aad
out
and
imul
sub
sbb
cli
test
pop
in
mov
jae
adc
movsb
sbb
movsl
inc
mov
mov
add
jge
sbb
cmp
fwait
orl
add
sub
mov
xchg
xorl
cltd
push
mov
fstl
ja
arpl
cld
sub
fadd
rcl
mov
js
ss
cs
loop
and
mov
pop
bound
in
or
push
or
es
xorl
sub
mov
sbb
aam
das
mov
scas
dec
or
mov
lock
mov
icebp
imul
or
lcall
dec
cmp
adc
cmp
xor
leave
xchg
cmpl
mov
xor
in
stos
add
cmpsb
arpl
sti
cmp
or
adc
jo
out
out
ja
ret
mov
and
imul
cmp
and
pusha
fisubs
pop
pushf
loopne
jnp
or
insl
aas
out
inc
cmp
inc
je
test
sub
cld
hlt
add
and
lahf
lods
xchg
test
outsb
dec
popf
mov
ja
pop
stc
and
or
insl
cmpsb
aaa
xchg
iret
loope
pop
adc
jne
in
and
push
cltd
push
imul
mov
push
std
dec
insl
pop
movsl
push
mov
data16
jne
or
dec
jnp
lret
add
shll
sarl
out
xor
out
aad
sarl
cmpsb
in
mov
cwtl
lods
add
jmp
mov
fmull
inc
aad
sub
ja
adc
leave
mov
mov
jge
push
xchg
ret
mov
pop
sub
push
sbb
cltd
pand
sub
out
mov
out
lret
jmp
inc
dec
rcr
push
test
pop
sbb
insb
negl
out
fisttps
rorl
jmp
scas
xchg
push
scas
dec
jo
push
xlat
mov
xor
aas
stc
inc
cwtl
jns
add
mov
and
iret
addr16
incb
fidivl
cmovs
je
sahf
lock
addr16
jo
xchg
fistps
adc
mov
lock
call
rcrb
push
stos
add
or
andb
je
sbb
ljmp
pop
lret
pop
lods
jo
push
and
cmp
pop
xchg
inc
mov
pop
xor
xchg
out
inc
fidivrs
je
insl
xchg
dec
test
mov
inc
enter
jmp
in
jg
jae
rorl
xchg
or
push
jp
addr16
xlat
clc
popf
clc
sbb
mov
jne
pop
aad
ds
add
mov
test
ss
xor
mov
cmp
clc
div
mov
push
cmp
ja
and
cwtl
sbb
jnp
int3
jns
movsb
imul
movsl
fidivrs
push
inc
imul
pushf
aas
cmp
mov
jo
xchg
int
test
pop
lahf
jno
or
lods
lds
test
sbb
push
push
and
lahf
jb
stos
out
xor
enter
mov
mov
jle
fsts
xchg
mov
out
hlt
gs
fsubs
js
xor
in
cmp
jne
mov
fs
sbb
push
pop
addr16
mov
adc
outsl
cmpb
pop
or
mov
out
addr16
or
add
sbb
mov
or
xchg
clc
and
loope
push
iret
jns
inc
cmp
jg
sbbb
and
jl
enter
cli
inc
jp
mov
lods
enter
jnp,pn
insb
out
mov
imul
sub
xor
loop
xchg
pop
lret
rcrb
je
in
xchg
enter
and
push
xor
je
and
or
andl
inc
lret
mov
mov
cmp
xchg
lods
adc
push
aaa
jb
daa
adc
inc
frstor
dec
sbb
das
stos
mov
aad
lds
fwait
mov
and
pushf
mov
push
push
or
outsb
pop
and
test
pusha
add
jl
sbb
sbb
mov
mov
sub
mov
xor
sbb
and
or
dec
sub
push
or
push
test
or
sub
xchg
push
shrl
pop
inc
mov
xchg
mov
and
rcr
das
add
add
inc
negl
cmp
nop
push
jns
stos
leave
aas
jae
sub
xchg
xchg
cmp
mov
mov
mov
popa
jle
jbe
jne
xchg
xchg
xchg
mov
test
movsl
pop
scas
mov
mov
adc
push
dec
mov
rol
jl
and
pop
ljmp
aad
cld
xchg
insl
add
cld
mov
jnp
mov
rclb
out
dec
cltd
repnz
fmull
stc
pop
jb
lods
fdivrs
pop
push
push
bound
daa
lahf
mov
lods
inc
es
imul
lds
sahf
adc
mov
gs
mov
adc
jbe
jae
loop
cli
into
in
cmp
sbb
cmp
test
mov
jle
mov
into
lcall
cmp
fs
iret
dec
add
mov
lea
in
out
fyl2xp1
xor
xchg
xchg
das
jns
lret
movsb
pop
xor
xchg
outsl
cmp
in
inc
lea
sbb
das
mov
test
xchg
addr16
or
jmp
fidivrl
repnz
rcr
push
sub
sub
and
stc
std
scas
lahf
test
add
add
sub
js
push
mov
sub
lret
stos
adc
cmp
mov
mov
sub
jge
jno
mov
jns
out
roll
and
mov
mov
mov
mov
lea
inc
xchg
and
pop
into
lea
cmc
arpl
lock
jo
inc
inc
mov
pop
sbb
fsubrs
out
sahf
or
not
adc
hlt
mov
jbe
test
cmpsb
add
mov
test
ss
mov
stc
icebp
dec
pop
xlat
insb
dec
cld
jb
popf
sbb
mov
test
inc
push
in
cwtl
xchg
mov
int3
xor
jbe
repnz
xor
cmpsl
jo
pop
lods
scas
adc
movsb
sar
mov
repnz
fdivrl
sti
in
xor
scas
adc
sub
or
cld
push
sbb
rcrb
sub
pop
lahf
aam
push
cs
arpl
dec
fs
or
cmpsb
push
mov
gs
adc
push
lret
cltd
mov
dec
cmpsb
dec
out
movsl
dec
ret
lods
cmp
popf
mov
mov
out
jno
aam
xchg
test
out
mov
or
xor
inc
push
jle
pop
add
push
sbb
adcb
fincstp
lahf
out
jg
outsb
dec
and
mov
aad
and
cmp
insl
jl
sbb
aaa
xor
ror
xor
pushf
xlat
inc
mov
pop
enter
subl
rol
repz
stos
add
pop
fnstenv
jbe
and
sarl
cld
push
add
adc
mov
jge
sti
sbb
or
adc
imul
dec
xor
xlat
dec
dec
imul
ds
repnz
gs
or
xchg
cmc
xchg
jo
xchg
pusha
mov
inc
xchg
jg
mov
iret
lods
jmp
inc
sbb
sub
mov
dec
jns
outsb
rol
inc
xchg
aas
inc
cmpsb
and
sub
popa
testb
movsl
adc
push
lock
negb
jl
outsl
cs
xchg
cli
jge
xlat
rclb
popf
into
sbb
mov
jle
popf
arpl
movsb
jns
bound
xor
dec
sbb
jbe
jne
or
daa
push
int3
pop
lcall
int3
xor
lock
or
jl
adc
cs
ret
imul
mov
fwait
in
les
lret
sar
repz
es
gs
lea
dec
dec
jg
fldcw
dec
lds
cmp
sbb
pcmpgtd
rorb
aas
mov
fdivl
stos
shrb
lods
cs
addr16
outsl
in
pop
mov
lahf
mov
cmpsb
and
ret
pop
mov
cwtl
xor
int
insb
cmc
and
xor
cmp
mov
dec
iret
shlb
push
iret
pop
sub
push
adc
fsubp
add
out
push
inc
or
cmp
jmp
outsl
or
sbb
pop
jge
mov
mov
push
je
fstpt
mov
test
gs
daa
mov
cmc
sbb
rol
mov
lds
and
outsb
mov
mov
outsl
orl
addb
movsb
mov
fs
sub
mov
cs
jnp
aam
ljmp
xchg
mov
nop
add
int
sbb
push
pop
ret
mov
fcompl
mov
out
dec
dec
adc
clc
pop
bound
pop
sub
jnp
dec
jnp
imul
fwait
stos
jmp
sti
lret
lret
sti
fucomi
sub
cmp
or
sbb
imul
dec
jnp
imul
fwait
stos
jmp
sti
lret
lret
sti
fucomi
sub
cmp
sbb
sbb
push
jg
dec
jnp
imul
lahf
stos
jmp
loop
iret
cli
jmp
xor
pop
or
pop
imul
fldt
fwait
inc
and
mov
jae
xor
and
fsubs
mov
fnsave
popf
roll
adc
and
adc
inc
popa
adc
bound
push
xchg
mov
mov
ret
icebp
loop
repnz
and
xor
lock
push
jno
inc
jb
fwait
mov
stos
xchg
fndisi(8087
lret
icebp
cli
shl
add
sbb
jno
adc
pop
adc
repnz
fdivrl
daa
cs
ret
stc
cmp
fiadds
data16
test
subb
outsb
add
int
fxch
pushf
in
push
fldl
aas
adc
mov
ljmp
jmp
jo
mov
ljmp
add
sarl
mov
xorb
loopne
loope
sub
xorl
ljmp
xor
and
mov
insl
dec
sti
push
insb
xchg
loope
push
repnz
or
aaa
std
xor
call
inc
mov
bound
dec
in
cmpb
jg
pop
repnz
fsts
in
and
add
inc
test
mov
movsl
xchg
shl
enter
jmp
sbb
or
cmp
sub
pop
popa
dec
jno
inc
imul
int3
mull
xlat
cmpsb
mov
mov
push
outsl
pop
jg
or
or
ret
pop
xor
loopne
sti
movl
mov
add
addr16
inc
jge
push
and
adc
aas
jmp
mov
in
shl
loop
repnz
and
xor
add
adc
push
jno
inc
jb
andb
xchg
ret
icebp
loop
repnz
and
xor
add
adc
push
jno
inc
jb
andb
inc
in
and
punpckldq
push
sbb
inc
dec
dec
inc
ret
sub
mov
dec
and
int3
and
aam
pushf
lods
mov
andl
sub
fbld
stos
inc
jbe
inc
imul
stos
and
inc
jo
pop
pop
cmp
movsb
insl
lret
jle
insb
cmpsb
pop
lcall
pop
or
mov
mov
mov
add
js
dec
lea
cmp
mov
mov
test
adc
cmp
push
into
pop
push
iret
hlt
test
data16
sub
pop
je
lret
mov
fcomps
stos
push
push
ljmp
cwtl
jae
scas
xor
push
or
iret
lcall
ljmp
jo
dec
adc
inc
arpl
fistpll
out
push
sub
jmp
addr16
shrb
sbb
or
jecxz
icebp
jbe
les
insl
test
aad
mov
inc
push
mov
mov
jbe
mov
loopne
popa
add
or
push
jbe
rorl
mov
cmp
psubusw
mov
inc
pop
pop
pop
add
and
mov
clc
push
inc
dec
aas
pop
inc
sti
sti
sub
inc
test
push
int3
jecxz
lahf
and
cld
popf
into
add
dec
stos
nop
flds
cld
push
add
fisttpl
movsb
push
adc
clc
adc
outsb
fdivrl
das
or
cmp
jnp
xor
and
inc
mov
fldenv
lahf
or
ljmp
cmpsb
mov
loope
cltd
sub
in
into
out
ss
out
hlt
aas
sbb
add
icebp
aaa
enter
add
dec
jp
jp
js
dec
push
sub
call
mov
loopne
ss
xor
pop
outsl
mov
xchg
addr16
mov
movl
aam
pop
xchg
inc
loop
push
iret
dec
scas
sub
sub
out
popf
sbb
pushf
push
mov
shrl
and
pxor
inc
outsb
and
cmp
add
pop
mov
dec
adc
fbstp
xor
adc
add
mov
gs
pop
fidivl
mov
mov
cmp
inc
clc
mov
inc
in
and
hlt
adc
std
imul
sbb
xchg
divl
test
lea
ret
push
jb
or
jbe
in
adc
insl
icebp
push
daa
hlt
testb
scas
popa
out
dec
out
sub
jb
xchg
jmp
mov
pop
jecxz
jns
iret
push
xor
pusha
pop
es
lods
push
rcr
scas
and
cmp
fstpl
mov
aas
cli
ret
in
ss
jbe
loopne
imul
in
or
int3
cmp
sahf
divl
insb
fwait
jmp
jnp
fstl
mov
out
rol
arpl
aad
cmp
push
insb
sub
mov
adc
mov
and
lds
ret
test
leave
push
test
call
xor
rolb
test
xchg
push
dec
or
pushf
sbb
cmpl
into
mov
scas
xchg
jo
cmpsb
dec
add
mov
add
gs
adc
cmpsb
loopne
cltd
add
fists
faddl
push
lods
push
movsb
sbb
nop
test
mov
out
dec
ss
test
int
inc
out
mov
sbb
pop
push
popl
repnz
dec
idivl
pop
jo
lret
movb
mov
insb
movsb
dec
xor
aam
inc
jb
mov
inc
jo
add
outsl
push
movsb
repnz
mov
popa
xor
mov
mov
adcb
dec
outsl
add
loop
out
notb
into
pop
sbb
push
stc
jne
and
adc
xlat
shr
out
pop
adc
jne
aad
ljmp
jne
cmp
xor
add
jbe
mov
hlt
rcl
jmp
cwtl
fstpt
in
xchg
mov
aam
sbbb
or
fstl
sahf
outsb
es
mov
push
pop
out
insb
pop
xchg
xchg
sub
hlt
pop
nop
push
inc
jle
outsl
push
cwtl
mov
jbe
push
xor
aam
inc
ds
add
inc
sbb
mov
add
leave
xor
sbb
loop
adc
inc
add
xor
in
sbb
push
lods
bound
int3
lods
mov
bound
mov
or
mov
lods
call
scas
sarb
push
sub
and
sub
sbb
scas
enter
jge
mov
add
push
dec
stos
push
ds
sub
sub
or
adcb
stos
adc
imul
fidivrs
jg
mov
pop
outsb
jge
push
pop
push
pop
rcrb
insb
dec
into
cld
cmc
mov
in
shlb
cmp
add
hlt
popf
cwtl
xor
fistl
sbb
jnp
adc
hlt
mov
std
pusha
aas
adc
lret
rcrb
jo
scas
pop
test
loopne
adc
xor
lods
ret
aad
fisttpll
cltd
inc
push
cmpsb
xchg
popf
cltd
push
jecxz
mov
sbb
inc
cli
test
movb
push
popa
psrlw
xor
shll
xor
orl
popf
add
xor
jge
fisubrl
pop
add
lods
jnp
inc
pop
xor
data16
fs
mov
adc
loopne
in
popf
daa
push
scas
or
test
loope
and
popa
push
sbb
jne
adc
or
dec
jo
mov
or
rcrl
inc
ret
cmc
inc
shrb
jmp
out
jge
in
idivl
fldcw
push
sarb
mov
fstp
push
or
or
xor
repz
in
xlat
stc
xor
mov
push
cmp
arpl
ja
and
ja
xor
fs
xor
push
int3
in
loope
mov
test
xor
mov
les
fldenv
jle
fwait
popf
dec
or
call
subb
or
in
fsub
ljmp
jp
int
mov
inc
jbe
lea
lret
and
popf
and
cli
std
push
fnsave
pop
lahf
push
pop
inc
cmp
subb
adc
and
loope
fldl
adc
pop
mov
mov
push
je
jb
sbb
das
inc
lock
cmp
mov
jno
outsb
lcall
in
rclb
stc
mov
push
mov
repnz
jns
mov
ds
loope
ficoml
adc
pusha
push
and
dec
neg
dec
inc
xchg
xor
subl
and
int
xchg
outsl
jae
scas
lcall
fcoml
pop
adc
or
cmpsl
hlt
pop
fisubl
lods
add
or
repz
int3
cmp
cld
add
cmp
jns
inc
mov
cmp
lret
mov
ljmp
mov
mov
movsl
outsb
cwtl
mov
mov
jmp
jg
bound
jge
gs
jae
pop
pushf
mov
xor
pop
adc
test
fldcw
cmp
jge
ficompl
mov
out
lods
enter
xchg
adc
add
add
int3
addl
repz
in
jnp
sar
ficoms
cwtl
mov
orb
jnp
pop
inc
sbb
cmp
push
cmp
push
rcl
inc
mov
outsl
mov
jo
pusha
adc
push
lcall
pop
inc
mov
dec
mov
data16
pop
repz
mov
xor
inc
pushf
lock
pop
lahf
std
mov
mov
fwait
cmpsl
repnz
pushw
lods
cmpsb
sbb
adc
pushf
or
stos
xor
jb
push
adcb
shlb
lahf
inc
mov
dec
test
mov
pop
sub
sahf
mov
mov
sbb
in
xchg
add
rcll
pop
xchg
sbb
jae
jmp
sub
fdivl
je
aad
out
gs
mov
cltd
aaa
addr16
stos
icebp
cltd
stc
mov
jno
dec
subl
cmp
nop
jb
add
and
mov
int
cmp
sbb
pop
icebp
addr16
jnp
sub
cmpsb
cmp
xor
push
jae
rolb
decb
adc
mov
cltd
dec
rcr
ret
fnsave
ja
jno
inc
mov
xchg
rcll
pop
hlt
push
and
or
sbb
pop
notl
test
push
add
pop
xchg
mov
cltd
ds
adc
dec
ret
clc
mov
testl
xchg
loop
icebp
mov
jo
loop
xchg
cltd
inc
ds
sub
mov
imul
xor
mov
push
fs
lods
sub
dec
bound
out
xor
cmp
pop
bound
or
shrl
ret
hlt
inc
ljmp
push
lds
mov
adc
cltd
test
jb
clc
nop
xchg
cltd
and
push
dec
and
dec
outsb
int3
cli
rcrl
adc
movsl
pop
fs
mov
mov
inc
pop
fbld
dec
xchg
int3
mov
sbb
dec
add
lods
pop
unpcklps
mov
loop
xchg
fistl
imul
sub
ja
stos
shl
add
in
push
add
push
cmc
jmp
xchg
outsl
adc
imul
push
gs
jnp
inc
mov
fcomp
xchg
xor
or
xchg
das
inc
mov
ds
mov
aam
mov
jb
and
ja
push
lret
mov
movsl
jge
push
mov
scas
stc
lcall
inc
and
pop
repnz
inc
mov
jb
push
push
jmp
incb
mov
or
and
adc
in
add
clc
aam
mov
xlat
lret
shrl
test
pop
push
rolb
lcall
xor
insl
dec
mul
mov
inc
push
dec
popa
xor
pop
mov
mov
xlat
adcb
or
sub
fistps
mov
lea
stc
sbbl
test
scas
dec
cmp
into
jae
fidivrs
lret
xchg
or
adc
cmp
push
adc
jl
fwait
repz
cmp
inc
and
sub
cli
insb
add
jl
inc
cmpsb
push
dec
aaa
jb
leave
loopne
xor
sbb
lea
push
in
push
ror
sub
idivb
dec
jno
out
in
mov
orl
xchg
cmp
js
out
mov
test
movsb
mov
jne
fidivrs
in
and
or
rolb
push
push
stc
test
enter
sub
je
gs
das
outsl
mov
adc
mov
and
xlat
in
add
ja
or
xchg
cmpsl
in
out
adc
inc
sbbb
sub
push
leave
dec
sarb
fwait
mov
shr
lods
push
repz
add
or
push
inc
mov
adc
pop
adc
xchg
stos
cltd
inc
stc
fwait
sti
out
sub
insl
mov
mov
pop
into
or
xchg
add
lock
inc
push
sub
rcrb
clc
shrb
xlat
pusha
cmp
sahf
dec
or
xor
ret
adc
cltd
out
dec
jns
outsl
mov
jle
dec
dec
fidivrl
mov
fdivl
adc
mulb
std
add
cwtl
push
sbb
stc
jle
enter
or
int
and
ljmp
sub
add
test
or
insl
dec
bound
je
push
daa
inc
jg
cmp
iret
out
std
lret
pop
inc
loopne
enter
sbb
sbbb
je
and
fisttps
and
xchg
add
scas
mov
movsl
jo
add
mov
inc
mov
repz
pop
movsl
fs
leave
xchg
dec
scas
icebp
fdivrs
fadd
fiaddl
adcl
popf
mov
dec
shrb
test
fs
mov
sbbl
shrb
jo
and
sbb
pop
mov
popf
sbbb
adc
or
xchg
xor
push
sbb
movsl
adc
das
sbb
out
xor
ja
sub
adc
loope
out
cmp
mov
sub
lcall
or
sbb
xchg
addr16
test
cmp
or
pop
mov
jbe
cmp
pop
in
ja
jne
jnp
adc
paddusw
inc
or
ja
xchg
popf
sub
pop
imul
cmpsb
inc
fcmovne
or
negl
pusha
cltd
sbb
cs
fsubl
xchg
sub
mov
jb
jge
mov
pop
xor
into
xor
icebp
lahf
jmp
arpl
call
inc
add
fisttpl
and
push
das
push
cmpsb
mov
sub
movsl
mov
push
xchg
fildll
rclb
jecxz
mov
icebp
xor
sahf
ret
orb
pushf
into
andl
add
add
or
xor
dec
cmc
jmp
popa
and
pop
in
ds
push
lahf
sbb
shlb
sub
xlat
inc
mov
sub
mov
and
leave
push
notb
popf
pop
iret
sbb
insl
pop
sbb
divl
mov
ret
pop
fs
sahf
adc
data16
add
push
jns
xchg
push
das
ss
jno
inc
add
dec
dec
stc
mov
repnz
rcr
repz
inc
popa
es
ret
push
iret
cmp
and
rcr
add
js
aas
inc
sub
adc
adc
loopne
aam
jnp
add
daa
inc
stos
pop
les
aaa
pop
repz
push
or
insl
mov
cltd
flds
call
mov
cmp
cmc
imul
push
cmpsb
dec
mov
pop
push
jnp
cmp
es
in
jg
data16
ss
out
xor
pop
insl
add
pop
data16
test
popa
test
xor
out
mov
sub
dec
sbb
out
idivb
push
mov
repz
mov
and
out
ja
jmp
pop
fidivs
jo
arpl
insl
xor
mov
shlb
int3
mov
lods
dec
pushf
add
cld
movsl
lea
repz
popa
adc
imull
pop
test
test
in
xor
and
lds
movsb
in
mov
mov
scas
push
and
inc
push
inc
stc
hlt
lock
add
cmpsb
mov
in
insl
shlb
ficomps
fadds
xchg
adc
mov
xlat
das
pop
or
mov
dec
outsb
inc
mov
fdivrp
sbb
daa
jnp
idivl
dec
in
loopne
inc
push
inc
mov
add
jns
cmp
push
dec
push
fs
mov
jo
add
in
xchg
std
push
cld
das
xchg
mov
out
frstor
jmp
stos
jp
movl
sub
cld
daa
or
add
ret
std
mov
xor
ds
icebp
push
xchg
and
cmp
pop
mov
jns
into
rep
out
repz
xchg
jge
add
cltd
int3
cmp
dec
js
mov
loope
jle
sti
out
clc
rcrb
hlt
add
mov
int3
mov
sbb
pop
pop
jo
xchg
lods
adc
inc
jae
nop
inc
pushf
aad
xor
xchg
pop
insl
xchg
push
mov
fadds
fwait
loope
shr
jne
and
push
sub
bound
dec
jp
jmp
pop
push
mul
fnstcw
adc
mov
insb
das
mov
cltd
cmp
mov
push
add
push
test
mov
gs
push
dec
add
and
inc
jmp
xchg
adc
mov
std
xchg
clc
or
xor
sub
push
cwtl
mov
push
mov
xor
xchg
dec
dec
pop
xlat
adcl
jb
adc
scas
xchg
or
xor
xor
movsl
jo
pop
enter
xchg
daa
push
push
jle
or
addr16
addr16
or
ja
and
cs
insb
aad
je
in
test
xor
adc
dec
movsb
arpl
pop
ja
fistl
fisubs
xlat
clc
clc
lock
aam
cmp
in
std
sbb
jnp
in
inc
adc
not
scas
add
out
push
addr16
xchg
dec
rolb
in
sti
mov
fs
jle
test
mov
add
dec
add
sbb
out
mov
cmp
shl
enter
add
jle
dec
cmp
jmp
lret
scas
insl
xchg
fs
sub
dec
xchg
addb
lods
pop
in
cmp
jno
jmp
stos
sarl
pop
shr
mov
aad
lcall
mov
xchg
lcall
popw
sbb
lcall
mov
jg
addr16
ja
xchg
pop
cld
cli
pop
mov
shlb
dec
sub
xchg
cld
aad
in
ret
jl
test
js
ret
mov
mov
dec
mov
fmul
dec
xor
daa
cmpxchg
mov
xchg
pop
jl
cmpsb
mov
pandn
in
aaa
push
sahf
jno
mov
fwait
dec
loop
sbb
xchg
and
xor
adc
subb
adc
xor
arpl
scas
mov
int
rorb
push
xchg
xchg
and
sarb
mov
add
dec
loope
jge
dec
cltd
ja
dec
dec
andb
test
inc
cmp
addl
sti
fmuls
inc
lahf
arpl
add
xchg
jne
mov
lret
jb
push
lretw
jbe
sub
sub
fistl
scas
xchg
adc
push
jns
pop
cltd
int3
sarl
outsb
pop
jge
add
lds
std
inc
jno
div
cs
xchg
test
xchg
inc
pop
jne
clc
and
add
pop
mov
out
adc
scas
jmp
aas
lock
mov
pop
test
pop
pop
bound
sbb
imul
pop
inc
sub
pop
dec
cmpb
stos
sub
movsl
repnz
lea
imul
cmp
imul
jmp
lock
enter
test
dec
popl
stos
dec
mov
sbb
cld
jmp
cld
iret
pop
imul
and
fdivl
lahf
gs
divb
xchg
mov
ss
sbb
add
dec
pop
rolb
jge
int
adc
or
pop
xchg
sub
mov
inc
loop
sbbb
or
add
aam
popa
mov
test
jg
mov
sub
sti
or
cld
mov
in
rcrl
add
stos
repnz
push
sub
or
mov
mov
push
out
test
in
mov
popa
mov
into
mov
aaa
adc
add
xchg
bound
lahf
dec
and
inc
jae
arpl
push
dec
and
fimull
sti
push
je
in
inc
push
or
inc
test
mov
pop
orb
fstl
sbb
dec
lods
mov
push
fildl
aaa
movb
imul
test
pop
dec
xchg
pop
cmp
adc
int3
test
setno
in
sahf
das
jecxz
mov
jecxz
popa
cltd
push
scas
int3
fidivrs
jnp
outsb
adc
dec
clc
mov
out
xchg
xor
lock
hlt
cmpsl
pop
adc
inc
movswl
xchg
enter
jmp
pop
cli
imul
negb
mov
rorb
and
nop
gs
xlat
and
mov
xchg
jae
sbb
mov
add
mov
fwait
add
lods
andl
and
mov
in
loop
jmp
mov
sbb
das
in
es
andb
xchg
push
xchg
xor
pop
dec
or
aaa
xchg
pop
cmp
fwait
fs
mov
ret
in
lods
insb
lods
pop
push
pop
ja
jmp
push
push
mov
adc
sub
mov
or
stos
or
cli
sub
dec
das
iret
mov
mov
outsl
movb
out
dec
es
arpl
push
mov
pop
dec
arpl
and
xchg
rorb
jns
inc
pop
add
mov
test
pop
and
add
stc
stos
xchg
stc
pop
adc
push
imul
orb
adc
std
aam
stc
ja
stc
inc
sbb
pop
pop
pop
xchg
rcrl
pop
iret
ffreep
aad
inc
cltd
and
and
xchg
lods
mov
test
pusha
xor
cmp
out
pop
mov
xor
insb
mov
clc
sti
les
int3
sahf
stos
orb
push
lods
aas
or
cli
push
rcrb
fldt
pusha
out
sbb
jecxz
xchg
sbb
fstpt
push
sub
adc
test
scas
test
lahf
movsb
ljmp
inc
mov
sbb
mov
jl
mulb
pop
pop
aam
mov
loope
pop
push
and
movsl
xlat
dec
xor
popf
sbb
cmp
out
test
jle
cmp
xorb
loop
repnz
and
xor
add
adc
push
jno
inc
jb
andb
xchg
ret
icebp
loop
repnz
and
xor
add
adc
push
jno
inc
jb
andb
nop
ret
icebp
loop
repnz
and
xor
add
adc
push
jno
inc
inc
push
mov
cmpsb
mov
xorl
cs
fsubrp
fwait
mov
xor
jmp
lea
in
sbb
pop
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
xchg
inc
adc
xor
mov
adc
aam
icebp
mov
rolb
mov
inc
adc
xor
add
jno
or
mov
shl
xchg
loope
icebp
mov
pop
adc
xor
sbb
or
add
aam
mov
xlat
sahf
fidivl
adc
lret
aam
movb
pop
xchg
cwtl
scas
loope
test
inc
push
mov
jp
push
inc
pushf
fists
and
jmp
add
hlt
cmp
clc
mov
or
or
fsts
ds
push
sub
fstpt
ljmp
aad
dec
or
adc
movsl
mov
sbb
stos
add
jge
adcl
sub
mov
sti
movsl
cld
shr
jb
and
test
sub
in
icebp
sbb
mov
xor
mov
mov
mov
and
gs
inc
mov
mov
shll
cmpsl
lock
push
adc
jl
jne
add
jno
add
mov
rcrl
mov
inc
push
daa
dec
add
add
xor
es
adc
jmp
loope
nop
mov
popf
xchg
mov
test
pop
sub
cmp
push
jns
and
xor
pop
shll
aam
mov
mov
shll
push
inc
add
xor
ss
adc
add
mov
roll
mov
inc
adc
xor
add
jno
add
mov
roll
mov
inc
adc
lods
loop
ja
mov
xchg
pusha
dec
cltd
lcall
and
pusha
int3
mov
inc
add
fstpt
pop
mov
lods
stos
jb
std
mov
mov
ja
xchg
js
dec
and
sub
scas
mov
xor
pop
push
xchg
bound
ja
test
pop
cs
xchg
xor
push
mov
scas
mov
mulb
lahf
ds
lds
or
fcomi
aas
insb
xor
lcall
or
cmp
jl
mov
adc
push
push
push
pop
pop
enter
nop
lret
jle
outsl
scas
add
nop
sbb
sbb
aad
in
cmp
add
add
aas
dec
or
gs
jle
xor
fistpll
into
jbe
sub
or
daa
cmpsb
cmp
sbb
insb
leave
dec
icebp
leave
push
stos
sbb
dec
adc
jg
push
cld
shlb
addb
stos
ret
gs
add
inc
adc
sub
adc
inc
xchg
test
add
arpl
sub
shl
mov
add
ss
and
pop
loopne
jle
cmp
cmp
xchg
inc
addr16
int
lods
sahf
sub
sub
lea
push
sub
xchg
inc
dec
ja
sub
cmc
adc
pop
pushf
aaa
fldl
mov
aaa
xor
pop
lahf
jo
scas
sbb
test
and
mov
mov
mov
dec
into
imul
imul
and
pop
xor
sti
ss
ret
mov
mov
loope
jg
repnz
std
mov
aaa
jle
xlat
mov
dec
fadd
mov
inc
push
and
aam
pop
xchg
in
stc
push
or
icebp
out
punpcklbw
addr16
fs
loope
or
adc
js
bound
dec
mov
in
fistpl
ret
sbb
push
jg
insl
push
pop
or
xchg
je
mov
dec
outsl
push
out
ljmp
sub
dec
adc
xchg
cmc
nop
cmp
jb
movsl
out
pop
jl
in
add
cmpsb
les
sbb
xor
adc
sbb
sub
andb
xchg
jbe
sbb
pop
mov
dec
cmp
xchg
mov
mov
lods
cwtl
fmul
scas
and
lds
in
js
and
fidivl
sub
or
jne
adc
mov
push
jne
fldt
in
cmp
xor
push
dec
repz
bswap
adc
jecxz
out
xor
adc
inc
xchg
dec
mov
mov
or
jmp
sub
xchg
sbb
cwtl
sti
push
ficoml
bnd
and
mov
cmp
jg
aam
and
stos
xchg
leave
imul
dec
cltd
sahf
sbb
or
jbe
sti
xorb
cmp
inc
call
cmp
inc
cmp
xchg
dec
movsb
mov
es
jle
hlt
xor
mov
mov
sarl
test
adc
lods
and
or
jp
lods
and
shrl
dec
adc
repnz
jecxz
add
stc
mov
aaa
dec
cmp
popl
push
jecxz
fisubrs
mov
mov
ret
fucomp
daa
sub
sub
xor
or
mov
or
stos
cld
and
or
pop
ficoms
pop
lods
lahf
out
fildl
pop
inc
jb
lea
mov
fiaddl
push
cwtl
push
das
and
cmp
shlb
mov
jge
adc
vmovntps
dec
enter
jno
pop
js
sbbl
xchg
aas
fisubl
das
adc
in
lcall
cmp
in
sbb
fnsave
dec
repnz
dec
out
das
adc
or
pop
pop
shrb
ds
jecxz
cmpl
sub
cmp
pop
test
bound
and
xchg
mov
push
jb
stos
pop
pop
out
pop
stc
outsl
inc
andb
mov
outsb
aaa
xchg
shrl
push
stos
shll
pushf
pop
sarb
xchg
xchg
push
rorb
cltd
xchg
in
push
mov
imul
fmulp
sub
je
dec
adc
push
shrb
outsb
push
inc
gs
sti
std
inc
mov
popf
jne
fnstenv
xor
jnp
sbb
fmul
adc
mov
flds
pop
stos
dec
cmp
mov
iret
mov
mov
jns
mov
mov
dec
mov
hlt
pop
xor
mov
push
jmp
sub
adc
popf
jge
push
loope
mov
repz
iret
mov
in
add
push
adc
cmp
lock
xor
icebp
in
shrb
loop
jae
enter
bound
and
shr
fldt
lahf
cmp
xor
shlb
stos
adc
xorl
push
push
xchg
push
sahf
mov
and
roll
js
insl
movsb
xor
rorl
int
sbb
and
mov
dec
mov
or
xchg
push
or
sbb
xchg
adc
pop
sub
fistpll
jns
shrl
or
mov
jb
sbb
jno
fdiv
in
imul
ja
pop
or
fmul
movsb
xor
or
and
call
mov
aad
call
mov
dec
negl
jge
xchg
les
int
xchg
jg
sub
add
pop
insb
lcall
xor
or
add
inc
pop
jbe
lret
cmp
sbb
push
out
mov
icebp
xor
inc
sbb
out
mov
sub
xchg
cmpsl
jne
lcall
in
pop
dec
mov
and
movsl
cmp
xchg
xchg
sti
movsl
test
push
cltd
lods
out
xchg
adc
rcrb
adcb
sahf
shll
jecxz
pop
out
sbb
movsl
std
mov
xor
xchg
in
xor
adc
push
pop
insb
push
push
or
sbb
or
dec
fistl
and
dec
mov
xor
call
dec
sub
adc
cli
in
leave
and
imul
je
popa
es
xchg
mov
xchg
mov
mov
xor
in
nop
add
in
jbe
inc
cmpsb
pop
push
std
sub
and
fwait
ljmp
aas
adc
mov
or
pop
xchg
xchg
ljmp
movsl
lea
call
mov
rep
jbe
in
push
cmpsb
pop
in
pop
push
push
dec
cmp
dec
je
mov
jecxz
sti
pop
mov
cltd
notl
into
cmp
movsb
sbb
das
sub
test
mov
jbe
nop
stc
mov
notb
daa
jno
jp
in
dec
iret
rcr
and
call
push
dec
std
mov
mov
mov
testb
pop
push
lock
cmp
or
inc
pop
enter
leave
cmp
stos
fcmovbe
int
mov
jbe
pop
xor
and
mov
stos
test
sbb
jmp
in
addl
lret
movsb
jl
out
push
movsl
out
pop
shlb
std
jmp
lea
inc
enter
sub
aad
sub
je
mov
cmp
cmp
in
mov
test
mov
jns
pop
repz
shl
push
test
and
lret
mov
call
dec
mov
mov
push
das
clc
push
push
int3
lret
sub
or
fwait
jle
mov
add
xor
mov
mov
in
jbe
pop
add
sti
jno
cmp
sub
push
test
jge
scas
sub
out
sbb
mov
xchg
lods
add
or
xor
and
imul
sub
iret
loop
adc
test
mov
lcall
std
jno
cmc
xchg
lods
rorl
mov
adc
out
mov
jl
pop
cmp
into
icebp
pop
and
repnz
mov
insb
outsb
dec
jp
movsl
mov
or
adc
mov
sbb
icebp
repnz
jae
xor
out
test
lret
mov
mov
and
mov
insl
xchg
mov
sarb
push
xor
cmp
iret
jb
sbb
jl
push
xchg
das
inc
pop
push
mov
int
ljmp
jle
je
xchg
mov
sub
jno
push
gs
imul
movsb
mov
fsubr
inc
cmpsl
add
nop
mov
add
cmp
sub
jp
jmp
orb
add
cmc
enter
and
aad
dec
rclb
ja
enter
mov
lahf
xchg
mov
rcrl
sahf
ljmp
inc
pop
xlat
mov
gs
enter
cli
movl
cmpsb
and
loopne
jb
xor
inc
push
adc
and
lahf
arpl
or
lock
cmp
mov
js,pn
inc
mov
jmp
jno
add
cmpsl
cmpsl
jmp
rclb
ja
bound
and
mov
pop
dec
push
sahf
imul
into
test
repnz
aas
gs
cmc
mov
jp
std
xor
movsb
or
push
test
mov
push
mov
inc
mov
pop
push
sub
xchg
int3
lods
pop
pop
mov
fistpl
push
sbb
popa
push
outsl
mov
mov
neg
ret
ret
mul
cltd
sti
jl
or
pop
stc
ljmp
xor
push
push
das
and
adc
push
mov
jg
jns
xlat
es
into
jmp
movsb
cwtl
mov
push
andb
xchg
enter
stos
adc
mov
jg
xchg
add
popw
nop
or
mov
dec
sti
cwtl
push
cmp
jnp
outsb
in
mov
mov
mov
popf
jae
xchg
push
xor
or
xlat
dec
adc
jl
loope
mov
test
pusha
iret
fsubrp
inc
push
cltd
inc
lds
ja
push
dec
out
mov
lahf
je
aaa
jmp
or
mov
pusha
sub
stos
testl
inc
pop
pop
jle
jno
jle
push
mov
sbb
aam
pop
add
cmp
jecxz
dec
xchg
ja
pop
xor
xlat
sti
cwtl
sbb
push
adc
call
push
jecxz
mov
in
cwtl
sbb
das
jge
shll
out
popf
loop
lods
sub
ss
push
inc
jb
inc
or
sub
xor
rcrl
mov
adc
pop
ljmp
dec
ret
pop
push
pop
push
clc
sahf
sbb
xchg
or
dec
inc
loope
dec
icebp
sub
in
push
fldcw
fs
cmp
insb
gs
cltd
aad
mov
cmpsb
nop
xchg
inc
inc
mov
jmp
xor
call
cmp
outsl
push
xor
pop
mov
mov
push
xchg
cmp
enter
xor
lea
push
adc
add
stc
test
cmpsb
mov
aad
dec
or
arpl
jnp
cmpsl
idivb
movsb
cmp
repz
ss
cli
dec
pusha
shrb
ret
hlt
mov
push
jg
in
xchg
xlat
xchg
iret
xchg
mov
lods
sbb
ja
shr
xchg
mov
xchg
and
cltd
mov
ja
and
ffreep
mov
push
stos
out
push
imul
sbb
fs
mov
pop
lea
cmp
scas
test
cmp
cltd
mov
pop
int
pop
mov
adc
cmp
sub
in
loopne
outsb
or
and
cli
mov
xchg
sub
xor
push
mov
andb
jle
lahf
mov
test
push
sub
push
sbb
jae
nop
push
lock
arpl
in
lret
cmp
iret
jne
sbb
cmp
push
lcall
sub
jbe
mulb
icebp
bound
gs
or
cmp
out
cmpsl
in
aaa
cwtl
punpckhdq
loop
in
xchg
sbb
inc
and
out
push
sbb
cmpsl
mov
clc
xchg
std
clc
gs
inc
imul
mov
push
sti
and
xchg
pop
ljmp
cwtl
int
jge
fldenv
lea
jno
and
jno
jnp
jp
lods
daa
lcall
sbb
clc
xor
push
scas
hlt
lret
arpl
dec
push
jb
xchg
push
dec
mov
xor
in
or
push
push
pop
sarl
xchg
sbb
mov
push
fs
dec
insl
insl
push
sub
mov
mov
sub
movsb
adc
mov
outsb
test
out
push
int3
adc
push
testb
xacquire
ret
push
call
push
jnp
lret
mov
in
pop
or
jl
fcmovbe
jecxz
lods
popa
xlat
add
push
jge
xchg
xchg
movsb
jp
fdivp
andl
jo
sbb
fimull
fcmovb
pop
inc
push
dec
jb
inc
lcall
pop
clc
rclb
movsb
push
int3
sub
add
int3
rcr
jns
imul
pop
xor
rclb
std
sub
and
xor
or
mov
xor
xchg
add
stos
mov
or
push
into
shll
mov
int3
rclb
adc
mov
les
and
ret
gs
sahf
inc
xchg
dec
inc
aaa
pop
lcall
jge
jle
dec
aam
cs
ret
out
add
sub
sarl
cwtl
mov
icebp
outsl
lds
xorb
push
scas
js
mov
mov
into
lret
int3
fadd
sub
sub
sbb
iret
stc
sub
fadd
adc
or
xor
cltd
movsl
or
stc
adc
leave
xchg
lds
mov
xor
pop
fcompl
xchg
push
mov
push
sub
mov
outsl
mov
and
mov
loope
cwtl
xor
shlb
mov
aas
mov
je
scas
lods
call
int3
jmp
das
mov
inc
rcr
or
lea
dec
mov
fwait
in
ljmp
fcoml
cltd
add
xor
pop
sbb
mov
sahf
cmp
fwait
lds
jne
repz
push
mov
add
pop
pop
in
and
movsl
movb
fidivrs
cmp
shrl
lret
add
xor
sub
leave
dec
jle
stos
inc
add
sarb
cmp
iret
in
rcrb
fucom
sub
outsb
cwtl
pusha
movsl
cmp
and
dec
mov
and
out
call
pop
xor
cmp
sahf
sti
dec
outsl
jmp
push
loope
xor
movb
adc
add
bound
in
jle
fmull
scas
pop
push
mov
jne
outsb
sub
jnp
nop
dec
pop
fists
add
in
stos
movl
or
mov
mov
adc
jg
arpl
lods
ret
mov
fstps
jne
or
xchg
inc
or
sbb
dec
cmp
mov
mov
sti
and
jecxz
mov
sbb
shlb
mov
inc
adc
sahf
addr16
mov
lcall
addr16
mov
xchg
xchg
outsb
popa
out
adc
xor
fsubrl
mov
orb
add
add
sarb
xchg
mov
mov
aaa
dec
add
pop
dec
cmp
loop
daa
sub
inc
aad
xchg
inc
fdivs
sbb
cmp
sarb
flds
adc
xor
add
pop
mov
mov
adc
lret
sub
faddl
dec
pop
stos
movsl
shrb
loop
add
xchg
pop
popf
jae
aam
dec
fwait
orb
movsb
ds
scas
pushl
xor
sub
mov
mov
jb
ds
out
cmc
stos
xchg
fistpll
adc
rcr
sub
fidivl
mov
outsb
sub
cmc
in
sub
cmp
fistps
mov
outsl
insb
repnz
outsb
js
mov
adc
push
pop
data16
jnp
fimull
rolb
mov
cmpsl
ret
jl
pop
pop
jbe
inc
push
jne
and
je
enter
ss
aad
mov
ja
pop
cmp
aaa
mov
sbb
ret
push
jmp
xchg
js
or
and
lcall
movsb
push
mov
mov
xor
leave
adc
mov
push
mov
in
fldt
pop
aam
mov
sub
das
push
or
xor
in
mov
pop
xchg
fcompl
pop
fmull
testl
pushf
outsb
arpl
add
xor
xchg
iret
xchg
push
fnstsw
inc
cltd
mov
movsl
jecxz
cld
shl
cmp
push
shrb
and
cmc
hlt
or
les
shrb
mov
ffreep
pushfw
mov
cwtl
or
cmp
mov
outsl
jecxz
hlt
flds
out
ret
pop
mov
sbb
and
scas
popa
and
rorb
mov
push
push
dec
pop
or
jne
into
dec
out
push
mov
xchg
adc
or
div
xchg
mov
add
movsb
and
dec
xor
les
cmpsl
mov
leave
fstps
and
mov
js
cmovl
sar
ljmp
xor
fidivrl
push
in
sub
addb
mov
cmp
iret
aaa
jl
cltd
fsubrs
adc
mov
cwtl
jno
gs
ficompl
aas
inc
das
xchg
ret
sbb
push
xor
movsb
dec
mov
out
pop
sbb
push
dec
movsb
adc
gs
add
mov
jmp
stos
pop
iret
out
icebp
sbb
and
or
mov
jnp
sub
test
inc
or
pop
imul
and
data16
lcall
lret
pop
sbb
clc
loopne
decb
mov
flds
fstpl
pop
roll
fdivrl
jp
xchg
in
aam
push
shlb
xorb
fsubs
fldt
cmpsl
push
adc
cltd
icebp
mov
in
ljmp
inc
jns
gs
xchg
subl
adc
or
clc
and
mov
movsl
js
mov
das
scas
jo
fs
xchg
sub
imul
mov
mov
and
sbb
add
adc
sub
es
or
jp
xor
jns
into
xor
aaa
adc
mov
dec
mov
mov
fildl
add
mov
mov
and
jg
cmpsb
into
rorl
movl
call
scas
dec
int
adc
cmc
outsl
test
test
push
pushf
es
cmpsb
jo
fs
sub
mov
or
mov
ror
out
sub
add
jnp
xchg
mov
pop
dec
and
push
sbb
dec
push
test
movsl
das
sti
pop
xchg
in
test
popa
fnstsw
cmp
add
dec
push
fwait
xchg
stos
mov
stos
loope
movsb
negl
push
add
xchg
mov
xor
pop
jmp
imul
mov
fadds
ja
jmp
imulb
in
into
adc
xchg
mov
sub
push
loop
inc
mov
pop
loop
xchg
lds
lret
inc
or
inc
add
sbb
aad
dec
out
lret
mov
push
lcall
adc
rol
movd
cmpsb
inc
adc
sub
inc
inc
insb
xchg
inc
or
cmpxchg
addr16
orb
jne
and
faddl
xchg
cmp
dec
dec
jbe
ja
ficomps
cltd
xor
xlat
clc
sbb
cmpsl
cmp
push
rcll
fisubl
mov
jcxz
enter
cmp
sub
pushf
push
pop
das
mov
push
and
and
push
mov
push
push
fs
dec
in
push
repnz
cmp
call
add
test
pop
sbb
push
dec
lods
dec
or
pushf
rolb
push
mov
push
mov
sbb
sahf
inc
mov
je
fisubs
mov
cmp
xor
sbb
lret
test
push
lahf
push
subl
cld
add
jl
push
xchg
push
jp
je
je
xor
mov
ret
xchg
mov
inc
lods
pushf
fmuls
mov
xchg
and
dec
push
lret
push
mov
dec
push
call
push
lea
xchg
ja
jne
iret
jmp
jecxz
dec
es
fnop
xor
cmpsb
pop
mov
or
fs
and
jo
push
sbb
sarl
xchg
lret
or
aad
adc
dec
push
mov
fists
dec
pop
scas
roll
xchg
iret
push
roll
mov
or
es
int3
test
hlt
cld
leave
rorb
jne
dec
ja
push
mov
mov
outsl
mov
xchg
andl
repnz
push
lods
icebp
addr16
adc
push
xor
add
jno
add
mov
roll
mov
inc
adc
xor
add
jno
add
mov
roll
mov
inc
adc
xor
add
jno
add
mov
roll
mov
inc
adc
popa
xor
add
jno
add
mov
mov
pop
ljmp
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
loope
icebp
inc
shll
daa
test
es
push
pushf
inc
bound
mov
push
cmpsl
and
xor
add
adc
loope
icebp
pop
shll
daa
mov
ja
dec
popa
xchg
jno
inc
mov
xor
add
adc
loope
icebp
rol
rcll
addr16
cmpl
movsb
xor
xor
and
adcl
mov
mov
test
cmc
push
dec
lods
lret
jmp
adc
les
inc
sub
mov
mov
jnp
dec
scas
divl
xor
push
jg
pop
stos
outsb
cwtl
xlat
hlt
mov
into
cmp
xchg
fs
push
mov
pop
and
cmp
pop
pop
add
daa
leave
inc
dec
ja
mov
ljmp
scas
cmpsb
jno
xor
or
cli
inc
lret
pop
fs
inc
jge
sbb
int3
push
ficoml
mov
adc
call
testl
les
mov
cmp
lds
adc
roll
mov
ja
cmc
popa
xchg
jno
inc
mov
fwait
and
xor
add
adc
test
xchg
push
repnz
out
add
divl
adc
cmpsl
nop
jo
andl
push
test
inc
nop
dec
les
aam
adc
push
repnz
push
xchg
cwtl
push
push
fs
out
pop
mov
in
mov
xorl
xchg
push
cmpsl
and
xor
add
adc
loope
icebp
pop
shll
daa
mov
ja
addr16
xchg
jno
inc
mov
cmpsl
and
xor
add
adc
loope
nop
push
pop
dec
scas
leave
jno
mov
and
aam
push
into
pop
orl
imul
cmp
and
jns
lods
mov
test
dec
push
adc
sub
dec
loope
mov
xchg
pop
adc
mul
imul
push
push
lods
fstpt
sti
xchg
cmc
adc
jbe
insl
popa
shl
cs
jb
push
pop
rol
add
inc
rcrb
out
inc
jno
sbb
jns
pusha
dec
mov
dec
mov
lock
xchg
mov
fcoml
dec
es
push
push
push
mov
je
mov
push
inc
repz
dec
movsl
xchg
out
dec
jecxz
outsb
xor
andl
sub
sub
ret
cwtl
mov
shlb
jbe
pop
sub
rcrl
jne
stos
mov
daa
mov
out
fcompl
sub
sbb
scas
mov
cltd
adc
fnstsw
sbb
pop
aam
in
fidivrs
mov
mov
hlt
addb
xchg
je
cmpl
push
adc
lret
jge
mov
xchg
imul
das
lret
stos
jne
or
in
cwtl
int
aad
adcb
jno
xor
mov
outsl
out
shlb
pop
outsb
push
or
add
out
adc
cmp
dec
xchg
jne
movsl
push
add
lds
sbb
stc
adc
loopne
bound
or
mov
insb
dec
inc
mov
or
mov
cli
mov
out
add
xor
stos
pop
aas
movsb
adc
fsub
andb
lahf
pushf
std
cmp
test
leave
add
jnp
inc
pushf
xchg
aas
cli
inc
mov
outsl
jp
xchg
push
hlt
or
scas
jo
repz
cmc
xchg
sbb
mov
and
daa
icebp
inc
mov
xchg
pop
popf
bound
adc
sub
mov
inc
inc
push
test
cld
movsb
inc
cmpsl
lds
fmull
xchg
call
les
pop
mov
jp
xchg
aas
popf
adc
js
test
out
xchg
mov
movnti
test
mov
or
test
movsb
sti
outsl
iret
sub
test
push
jns
test
mov
xor
cmp
popf
pop
pop
inc
negl
pop
repnz
sub
push
pushf
jae
jae
lahf
insl
int
in
ret
sub
sub
scas
test
inc
pop
push
pop
ljmp
das
daa
rorb
jo
cs
dec
dec
mov
push
mov
test
fisubl
dec
inc
xchg
mov
push
rcr
adc
lcall
cmp
or
daa
xor
cwtl
and
mov
pop
adc
in
cmp
inc
idivb
jb
jl
int3
std
js
sub
enter
mov
push
sbbl
ss
leave
es
mov
out
fld1
xchg
out
add
push
hlt
xchg
lea
clc
mov
in
mov
cli
jmp
faddl
in
or
sti
dec
xchg
and
jg
inc
aaa
daa
jge
and
insl
shlb
lahf
in
out
mov
outsl
mov
out
bound
shr
aad
lahf
mov
xchg
dec
xchg
xor
jl
insb
ja
xchg
je
test
cmc
xlat
idivl
push
add
push
pop
fs
test
xor
xlat
adc
jnp
mov
dec
jnp
bound
sub
add
mov
sar
in
rolb
xor
dec
int
push
mov
push
inc
pop
sub
dec
push
mov
sbb
movsb
lret
fcmovne
inc
mov
mov
jmp
fsubrl
xchg
icebp
lock
lahf
jge
push
xchg
stos
add
mov
sub
sub
pop
xor
and
lock
in
mov
add
push
aad
cltd
pop
sti
jo
add
cmc
outsl
sub
sbb
shlb
outsl
dec
add
int
mov
mov
pop
cltd
jle
cli
aas
jge
ret
mov
push
adc
dec
mov
add
dec
jno
sub
fldl
xchg
imul
push
pop
popf
dec
lds
outsb
xchg
and
adc
add
fstps
imul
mov
mov
jnp
cmp
mov
and
insb
out
push
push
inc
mov
pop
test
testl
mov
pop
mov
cmc
add
jne
xor
in
cmpsl
cmp
dec
mov
scas
push
imul
push
mov
add
xlat
sub
ljmp
adcl
mov
int
mov
xchg
ljmp
adc
jle
ret
dec
mov
push
sti
cmp
imulb
dec
dec
mov
icebp
mov
iret
hlt
pop
xchg
ss
stc
mov
loope
imul
adc
or
lret
enter
iret
cmp
fmull
xchg
fdivrs
and
andb
es
dec
lods
cwtl
or
push
jge
cmp
stos
mov
adc
mov
jb
movsl
leave
and
jno
inc
mov
test
aaa
fistps
xchg
sub
pusha
mov
mov
xor
mov
shll
stc
jns
cmp
imul
cld
mov
enter
jns
sub
addb
cmp
mov
dec
faddp
fisttps
push
mov
stos
imul
inc
pop
sbb
xor
sub
shll
sub
cmp
pop
sub
jo
xor
ja
sub
jge
mov
stos
push
mov
dec
jp
enter
xor
inc
or
lods
subl
adc
sarl
pop
xchg
lods
push
rclb
push
fisubrl
jnp
mov
icebp
sbb
adc
xor
lods
sbb
cmp
or
mov
cmovno
mov
sbb
dec
test
cld
mov
in
in
or
rolb
and
mov
outsb
inc
xor
arpl
outsl
xlat
jge
adcb
pushf
lods
jno
aad
push
jb
cli
push
je
xchg
mov
daa
xchg
aaa
xchg
test
rol
lret
mov
stos
test
imul
add
popa
daa
mov
jne
bsr
lea
lahf
mov
pop
xchg
les
loope
negl
aad
icebp
and
xor
push
xor
pop
mov
test
inc
decl
sti
fcmovnbe
int3
cmpsb
das
out
stc
dec
sbb
or
adc
scas
leave
clc
xor
add
adc
lds
jae
sbb
mov
adc
inc
insl
push
dec
dec
cmp
or
ljmp
push
jae
out
clc
ret
mov
xor
cmp
lods
sub
push
stos
or
sub
pop
std
idiv
les
cmp
fisttpll
fsubrl
sbb
pop
rclb
mov
movsb
arpl
adc
jp
push
pop
out
add
xchg
rorb
rcrl
push
push
pop
xor
pop
outsl
mov
dec
sarl
push
enter
inc
pop
dec
jae
cmpsl
pop
sub
ret
stos
push
add
lds
and
xor
data16
push
xor
mul
dec
scas
mov
sub
jmp
mov
cmp
mov
mov
cmp
daa
inc
in
pop
in
cmpsl
out
scas
iret
cltd
imul
je
jmp
cmp
pop
cmp
dec
cltd
xor
add
jbe
outsb
jae
in
add
mov
movsb
mov
push
jecxz
jp
sbb
inc
cmpl
dec
push
in
aad
arpl
imul
into
sub
sbb
cs
pop
pop
and
flds
push
push
jmp
push
in
cs
test
sbb
xchg
mov
imul
or
mov
sbb
xchg
xchg
or
addb
js
inc
into
push
pop
or
aas
movsl
xchg
jl
shlb
or
movsl
xor
adc
repnz
sub
mov
cmc
add
mov
push
std
xchg
stc
lret
and
cmp
nop
enter
dec
orl
cs
lret
mov
repz
cmp
jne
pop
dec
add
pop
push
cwtl
loopne
fmuls
xchg
das
insb
clc
cmp
mov
leave
mov
lods
fistpll
jnp
loop
cmpsb
xchg
sbb
js
push
imull
cmp
mov
or
cmpsl
es
mov
xchg
inc
adc
jno
mov
push
push
dec
cmc
fiaddl
mov
add
sub
push
negb
fistps
jg
and
add
sti
jae
and
in
or
shrb
out
and
add
xchg
cmp
sub
bound
mov
mov
test
pop
adcb
pop
imul
mov
mov
scas
inc
push
in
jg
jg
mov
push
rcll
addl
jle
cs
lods
dec
pop
xor
push
ds
mov
insl
loope
push
inc
adc
sbb
popa
inc
adc
sarb
xchg
cmp
cmpsl
test
xor
movsb
popa
xor
mov
xchg
push
inc
adc
push
sub
or
loop
ljmp
mov
sbb
adc
cmp
sub
xor
mov
aad
sbbl
xor
jo
cmp
pop
icebp
sub
push
in
out
int
ss
sub
bound
shrl
xor
mov
lock
imul
pop
in
test
dec
and
adc
push
pop
xor
adc
lea
pop
adcb
stc
fsubrl
fucompp
adc
push
xchg
inc
xchg
sub
dec
aaa
xchg
sbb
lea
mov
popf
mov
daa
sub
and
pop
leave
and
aas
xor
pop
roll
mov
outsl
imul
call
ret
add
mov
popa
lods
inc
cs
les
cli
out
leave
sbb
cmp
pop
and
add
and
add
xchg
sti
dec
cmp
dec
pop
mov
in
fs
sub
test
out
pop
pop
je
jl
repz
in
inc
inc
dec
and
cld
and
movb
jb
jo
fs
xchg
or
push
mov
lock
push
cmc
sahf
inc
call
cltd
dec
jbe
jle
dec
inc
das
lock
push
rolb
hlt
sar
fimuls
jbe
gs
pop
adc
fists
divb
cwtl
es
lock
cld
xchg
dec
sarb
or
jnp
mov
xor
pop
sub
test
mov
addr16
jbe
sub
loope
pop
fincstp
mov
addr16
les
adc
adc
jns
fs
ret
jg
mov
mov
cmc
xchg
test
les
pushf
int3
sti
sar
mov
insl
iret
adc
add
push
test
cmp
gs
test
mov
rorl
cmc
lods
icebp
aaa
test
cmp
pop
cmpsl
inc
sub
jne
mov
mov
xchg
push
fwait
into
pop
mov
jnp
adc
scas
decb
mov
pop
mov
les
stc
inc
sahf
es
fwait
lcall
sbb
xor
arpl
iret
inc
add
loop
and
mov
movsb
dec
ss
das
mov
pop
push
dec
dec
loope
mov
mov
and
jo,pn
adc
stos
addb
xor
or
scas
rolb
jl
mov
and
repnz
adcb
scas
test
addr16
mov
adc
push
dec
adc
mov
and
popf
cmpsl
insb
int
push
xchg
mov
sub
and
mov
push
sbb
mov
fcomps
xor
stc
push
or
push
mov
lods
push
fdivrs
and
ret
test
addl
cs
sbb
and
aad
pop
int3
or
arpl
ljmp
xlat
push
push
jg
or
mov
push
into
fcoms
es
das
iret
xor
or
lahf
fstpt
mov
andb
pop
imul
loop
cld
loop
mov
mov
jo
mov
fs
cmp
scas
or
cmpsb
xor
fimull
stc
xchg
ficoml
addr16
mov
pop
into
cmp
loope
jg
jno
fsubl
lea
xchg
sub
ljmp
sbb
inc
jle
lcall
pop
ret
xorb
jae
mov
jg
mov
xchg
out
sahf
lret
movsl
sub
sahf
lcall
xchg
or
ljmp
out
outsb
data16
fisubrs
sbb
sbb
shlb
pop
hlt
repnz
mov
ret
sub
cmpsl
sbb
mov
push
aas
lods
xchg
jnp
js
leave
leave
push
das
jmp
mov
add
pop
push
nop
sbb
das
or
nop
mov
mov
das
mov
sbbb
cli
mov
lahf
test
scas
mov
shll
outsl
std
call
divb
mov
ss
int
xchg
std
sbb
pop
push
push
sbbl
pop
push
cwtl
cmp
popf
rclb
or
xchg
push
daa
int
into
mov
addl
or
sbb
aad
imul
pop
mov
push
cmp
push
adc
test
out
mov
clc
imul
test
test
add
cli
cltd
ljmp
inc
cmp
in
cmp
xchg
scas
xchg
cmp
in
adc
push
ds
jmp
rorl
pop
inc
inc
test
push
mov
in
inc
sub
aam
dec
cmpsb
sbb
stc
aam
dec
inc
add
xor
aam
test
and
repnz
out
ds
dec
movsl
aas
rcl
xchg
jbe
int3
clc
mov
das
add
pop
inc
lretw
dec
mov
das
fidivrs
pop
dec
imul
les
inc
pop
jno
flds
push
cmp
fisubrs
add
adc
testb
mov
adc
inc
subb
jge
rcll
insb
mov
imul
jno
divl
jl
adc
or
xchg
arpl
xchg
lret
incl
mov
add
jno
inc
pop
mov
sti
adc
push
and
push
add
mov
mov
or
lret
inc
sti
cwtl
test
fimuls
fiaddl
ss
out
pop
out
shlb
cwtl
sti
test
cmp
xchg
or
rolb
jge
or
pop
addl
jne
movsl
sbb
xchg
mov
shr
loope
cs
sub
pop
mov
jne
cmpsb
lret
mov
xchg
mov
test
mov
jg
ljmp
xor
fwait
inc
dec
push
pop
xchg
test
xor
sub
xor
shl
push
pop
mov
aam
xor
adc
in
dec
loopne
lcall
dec
xor
xchg
cld
ds
loope
in
cmpsl
out
mov
shlb
ret
inc
movsb
hlt
adc
jmp
inc
and
lods
js
loopne
sub
scas
hlt
sti
je
mov
push
addl
add
fnstcw
xor
mov
scas
pop
insl
xor
fxch
pop
test
mov
leave
dec
cmp
sahf
or
push
cmpsb
cmp
rorl
sbb
sbb
jmp
push
test
repnz
or
outsl
and
xlat
gs
pusha
dec
shll
pop
lds
ficoms
jae
jno
leave
jae
mov
push
ljmp
or
movsb
mov
scas
adcb
push
aaa
mov
ret
push
jl
in
add
and
sahf
inc
int
ss
sbb
in
and
scas
pop
jl
aas
popf
fldl
and
mov
aam
pusha
sahf
into
or
ret
aam
jb
adc
jl
ret
mov
loop
decl
sbb
inc
cwtl
clc
rorl
push
mov
dec
jecxz
push
xchg
aaa
xorb
push
aam
cmp
aaa
shll
jbe
mov
je
pop
inc
jae
cmp
jno
adc
mul
push
dec
dec
clc
pop
mov
loopne
and
ficoml
and
sti
int3
sti
jl
stc
popf
cwtl
xchg
sbb
cld
int
mov
add
test
fimuls
mov
pop
sbb
push
xlat
mov
fmul
xchg
cmp
cmc
lock
dec
or
repnz
aas
fcmovnu
mov
sbb
aad
in
dec
aam
jecxz
lods
fsubrs
out
jb
adc
mov
rclb
dec
adc
aas
push
std
adc
subl
pop
clc
into
out
cli
xchg
test
cmp
xchg
xchg
xorl
sub
popf
jnp
or
imul
jb
pusha
xchg
mov
iret
mov
dec
aas
ret
inc
xor
cmp
mov
xor
mov
arpl
std
idivb
ret
push
in
stos
push
jge
aaa
push
adc
jnp
in
xor
xchg
iret
mov
add
mov
jno
mov
lds
xor
outsl
dec
cmp
or
push
dec
fsubrs
adc
cmp
or
mov
scas
es
je
jbe
aam
scas
pop
pop
aam
cmp
cld
and
dec
adc
inc
ret
in
xchg
mov
fiaddl
test
jnp
jo
shl
fwait
mov
fdivl
cs
mov
jg
and
leave
jae
stos
notl
mov
mov
sti
push
cmp
stos
int
fcmovnb
jmp
sbb
add
xor
xor
outsl
inc
dec
pop
jl
je
sub
arpl
shll
adc
lods
rcl
repnz
es
adc
sub
push
xchg
popa
stos
push
mov
stc
shr
push
or
in
cmp
xor
cmp
pop
lea
hlt
nop
jecxz
xchg
movsl
mov
push
push
in
cld
test
ds
cmpl
ljmp
rolb
xchg
sbb
fldt
pop
mov
sub
ljmp
lock
loopne
jge
and
and
dec
test
mov
test
imul
push
add
aas
fstpt
dec
mov
out
cmpsl
mov
and
pop
jnp
int3
hlt
ds
cltd
mov
xchg
mov
imul
mov
rcrb
mov
sub
cltd
push
frstpm(287
ret
xchg
dec
hlt
call
hlt
pop
add
mov
mov
push
sub
jmp
xchg
ret
push
shl
repnz
dec
push
mov
test
imul
add
lea
push
sbbb
movsb
push
clc
dec
in
scas
shlb
stc
cmp
ficomps
ss
or
xchg
fs
idiv
xchg
imulb
lods
in
out
fidivrs
sub
push
inc
inc
mov
fimuls
xchg
mov
xor
notl
jg
push
out
test
movsb
rcrb
fistpl
jle
sbb
cmp
xor
mov
addr16
jns,pt
dec
fcompl
jmp
sahf
hlt
notl
cs
fs
xlat
pop
mov
cmc
inc
mov
rcr
mov
and
inc
bound
lret
leave
xchg
stos
lahf
or
js
sub
inc
inc
push
push
xchg
outsl
sbb
push
divl
push
in
lret
xor
fldt
and
cmp
sahf
inc
xchg
lret
and
stc
sub
test
fimull
fbstp
push
xlat
test
and
lods
les
sbb
mov
push
ja
mov
cmpsb
push
iret
lea
mov
fiaddl
sub
ficoms
aad
in
adc
mov
shr
in
push
xchg
je
aam
in
je
out
lods
nop
pop
lock
inc
xor
adc
das
inc
or
xorl
jmp
ljmp
fcmovbe
stc
adcl
add
ss
xchg
leave
ljmp
js
imul
mov
shlb
lcall
fbld
pusha
inc
or
cmpsb
mov
fcomp
mov
adc
fildl
dec
les
movsb
jp
or
insb
add
xchg
daa
cs
in
das
fstpl
loopne
cld
xlat
rclb
and
in
push
insb
es
cmpsl
das
sbb
pop
jle
dec
mulb
cmpsl
xchg
lea
pop
mov
xor
imul
add
shlb
ljmp
dec
dec
pusha
adc
movsl
xchg
iret
lret
adc
cmpsl
andl
mov
mov
dec
add
fs
xor
adc
call
mov
mov
mov
test
movsl
sbb
and
sub
pop
aad
stc
xchg
dec
loope
rcll
stos
sbb
adc
adc
pop
sbb
push
pop
xor
daa
mov
ja
addr16
xchg
jno
inc
mov
cmpsl
and
xor
add
adc
loope
icebp
pop
shll
daa
mov
ja
addr16
xchg
jno
inc
mov
cmpsl
and
xor
add
adc
loope
icebp
or
das
shll
mov
jae
addr16
xchg
jno
inc
mov
scas
and
xor
add
adc
loope
icebp
jecxz
rcl
addr16
inc
add
adc
jmp
push
rclb
mov
lahf
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
jb
bound
cmp
push
lods
ja
loopw
adc
add
xor
and
jb
bound
bound
xor
and
adc
add
repnz
bound
push
mov
bound
bound
xor
and
adc
add
repnz
in
and
pop
shrl
xchg
frstor
fnsave
repz
and
cltd
sub
out
mov
or
addr16
cmpsl
cmp
ret
fiadds
cmpsl
aam
pop
sbb
cmp
add
int3
std
pop
xor
dec
daa
mov
xchg
and
lret
lcall
adc
in
push
repnz
mov
sub
push
sub
aaa
xchg
and
ret
mov
in
jge
sbb
pop
int
jb
cmp
mov
lea
jge
aaa
jp
mov
sub
adc
add
out
push
push
ret
loop
inc
mov
out
lea
jge
aam
pop
lret
dec
in
xchg
add
and
test
xchg
bound
xor
and
adc
add
repnz
add
xor
and
jb
or
daa
lret
pop
mov
inc
mov
ja
jbe
pop
scas
xlat
xor
xor
jo
and
adc
je
dec
cmpsb
adc
loopne
xchg
push
xchg
xor
sub
pop
xorb
fildl
sarl
fiaddl
xor
and
adc
add
repnz
add
xor
and
jb
bound
bound
xor
and
adc
add
repnz
add
xor
and
jb
bound
lret
jmp
push
mov
dec
jg
add
repz
xchg
gs
sub
rcll
lret
sub
jecxz
inc
aam
cmp
int
jmp
and
cld
movsl
push
test
pop
mov
push
pop
andb
jmp
inc
push
dec
mov
imul
lea
int3
insb
push
insb
push
mov
mov
inc
ror
les
mov
dec
imul
les
out
dec
subb
mov
mov
mov
mov
sbb
push
orl
adc
iret
jns
pop
aad
pop
mov
inc
cwtl
pop
fcoms
or
cmp
arpl
sbbb
das
bound
sub
shr
mov
push
sub
dec
dec
and
cmp
jg
repnz
xor
ret
pushl
xor
and
cmpsl
or
outsb
sbb
dec
mov
adc
xorb
mov
icebp
shrl
fstpl
adc
mov
cmpsl
or
adc
test
test
jge
js
mov
inc
mov
add
cmpsl
xor
cmpsb
inc
jns
fsubl
xchg
jb
mov
mov
aam
mov
push
xor
sub
lds
mov
push
mov
inc
dec
mov
shll
hlt
mov
cmc
clc
ret
inc
xor
nop
ret
divl
jnp
dec
push
xchg
fisttpll
fnstenv
iret
cmp
jne
cli
adc
cmp
idivl
in
mov
arpl
cwtl
es
mov
pop
mov
or
adc
jo
ljmp
push
mov
rclb
popa
arpl
xchg
mov
xlat
loope
orl
jae
cmp
sbb
cwtl
mov
ficompl
dec
sbb
dec
ret
aad
scas
popa
sub
push
xchg
dec
add
add
push
cmpsl
cmp
dec
roll
mov
add
mov
push
mov
scas
or
jno
mov
push
cmpb
and
and
sub
cld
addl
dec
pop
in
in
jge
dec
jecxz
call
mov
dec
out
movsb
cmpsb
mov
bound
sti
icebp
in
lret
mov
mov
sbb
loop
cmpsb
lods
cs
or
push
mov
mov
cli
lods
xor
push
mov
xchg
mov
mov
add
dec
sbb
mov
cltd
jb
mov
mov
hlt
add
arpl
faddl
int
fs
mov
loop
mov
cmpsl
add
imul
jne
std
push
sbb
jp
sti
add
mov
inc
ret
mov
push
jge
adc
push
cmp
call
bound
xor
ja,pt
cltd
jae
int
lods
xchg
mov
jl
dec
cwtl
cmp
sub
das
dec
lcall
jb
xchg
dec
scas
int
fildll
out
xchg
jnp
sub
stos
aaa
fsubl
popf
and
inc
shl
rcl
imul
mov
lcall
inc
dec
cmp
lret
mov
rcrl
ret
int3
push
jo
lea
clc
and
dec
adc
jmp
in
in
aaa
aam
adc
and
push
dec
das
xchg
stc
cmp
jl
inc
push
aas
insl
shlb
int
xor
push
or
mov
sti
loopne
mov
pop
mov
cmp
or
sti
sub
rcll
pop
push
pop
insb
jmp
sub
hlt
mov
insb
dec
stos
bound
das
or
jns
cs
out
sbb
adc
ret
dec
and
sar
xchg
ss
repz
sbb
sti
test
sbbl
pop
cltd
add
test
mov
fdivr
sbb
jmp
push
lahf
movsl
fidivrs
dec
out
int
cli
dec
rolb
dec
leave
push
aam
push
fwait
cld
cmp
dec
inc
and
mov
sub
inc
and
clc
and
push
sbb
scas
movsl
xchg
mov
into
sbb
ror
inc
dec
add
jp
pop
mov
jae
subl
mov
pop
push
icebp
cli
subl
mov
insl
xor
aas
nop
stos
cli
xchg
dec
pop
mov
test
jno
adcl
push
and
cld
nop
sbb
xchg
gs
mov
fdivs
inc
pop
sbb
scas
cmp
cltd
lret
out
sub
in
mul
int
cmp
adc
repnz
inc
and
sahf
mov
fnstcw
es
es
pop
xor
insb
mov
xor
jbe
mov
sbb
xor
pusha
sbb
shll
into
push
repnz
add
scas
ja
xchg
pop
lcall
cmp
fnstenv
sub
mov
aam
pop
jae
sbb
push
addb
xchg
add
mov
cmp
jmp
push
rcll
out
xchg
out
sti
testb
lock
sub
movaps
imul
xor
enter
cmp
notb
push
movsb
shlb
dec
out
cld
cmpsb
test
out
xor
pop
sbb
mov
dec
cmpsb
jnp
dec
and
pop
or
test
mov
push
outsb
outsb
add
mov
mul
cmpsb
add
or
subb
mov
shlb
fucomi
shr
mov
insl
in
fisttpl
mov
popa
dec
dec
aas
stos
push
cmovg
rcll
mov
sbb
mov
pop
adc
mov
jge
popa
lods
xchg
cmpsl
or
jp
insl
dec
mov
jae
jbe
mov
inc
add
out
fnstcw
push
mov
sub
imulw
sub
dec
aam
fs
shrb
mov
pop
xchg
jl
cmp
cmp
insl
mov
jo
add
add
inc
xchg
inc
imul
jae
push
push
movsl
in
test
dec
jae
lods
ja
aaa
rcll
add
adc
jbe
or
divl
sbb
ljmp
xchg
dec
pusha
hlt
mov
in
mov
jecxz
push
mov
adc
cld
sbb
gs
fnstcw
sbb
add
ret
pop
xchg
adc
in
shl
push
mov
pop
xchg
jp
mov
jne
pop
cvtps2pi
fbld
push
push
out
or
xor
test
sub
pop
insl
mov
xchg
xchg
mov
fstpl
push
icebp
jne
in
in
mov
push
pop
je
test
lea
dec
push
push
test
jg
inc
inc
or
and
mov
pop
jg
fimuls
mov
inc
dec
xchg
mov
jecxz
jmp
add
mov
in
rcl
add
dec
addr16
mov
mov
xor
pop
jb
shlb
repnz
outsl
adcl
push
xor
cmc
mov
and
inc
sarb
adc
inc
fisttps
jmp
shl
dec
fnstenv
jne
cld
mulb
movsl
scas
xchg
pop
test
fldcw
push
nop
test
daa
xchg
scas
int
adc
sub
gs
mov
icebp
lock
jb
push
jae
pop
xorb
jno
or
stc
and
icebp
xchg
mov
aam
fwait
xchg
out
pop
push
imul
mov
fists
sarl
addr16
mov
inc
push
or
aas
fisubl
push
mov
push
sub
sbb
inc
notl
mov
mov
push
stos
pushf
fisubs
enter
mov
xchg
jl
fnstsw
call
pushf
lret
push
cmc
dec
mov
push
xor
push
int3
decb
data16
fistpll
insl
es
dec
pop
add
xor
subb
nop
xor
mov
dec
popf
andb
push
jae
mov
and
popf
stos
mov
adc
imul
cmc
inc
inc
xchg
and
cmp
rcrb
inc
stc
add
or
in
cltd
pop
rcll
daa
loopne
inc
ja
xchg
xor
adc
std
jmp
pop
imul
and
pusha
inc
imul
inc
xor
mov
popa
aaa
pop
dec
pop
dec
sbb
nop
sbb
dec
and
xchg
push
testl
push
jle
lahf
inc
icebp
stc
add
xor
xchg
movsb
outsl
outsb
pop
imul
stos
cmp
cmp
stos
mov
fs
jae
ss
stos
int
mov
lahf
push
sti
rorl
es
jp
data16
mov
adc
pushf
add
shll
jo
pop
push
add
test
xchg
into
mov
push
fdiv
inc
in
shlb
mov
jmp
mov
add
imull
mov
mov
out
jecxz
int3
lahf
imul
sbbl
ret
shll
test
lock
iret
push
xor
jmp
inc
mov
jg
mov
testb
insb
stos
pusha
adc
and
cmp
xchg
stos
add
int
aad
sub
sub
xchg
movsl
jp
push
sub
push
int
add
jl
fcomps
stos
pmuludq
stos
add
sbb
pop
inc
bnd
iret
addl
enter
out
stos
outsl
cli
and
shlb
and
mov
or
or
inc
adc
es
jb
jbe
sbb
in
test
cld
mov
out
adc
fisubl
add
fcomip
jb
inc
or
ficompl
push
xchg
xor
cmp
ret
fs
divb
insl
inc
jg
cld
subl
mov
xor
iret
xor
ja
pop
dec
int
test
orb
jge
aas
sub
push
push
sub
or
pop
push
sub
bt
stos
mov
mov
xor
int3
jns
mov
jle
inc
ja
pop
inc
sbb
adc
and
out
aaa
jne
pop
fld
sbb
pop
pop
mov
xchg
xchg
mov
jg
lods
push
lods
jg
jmp
pusha
push
enter
inc
mov
out
in
xchg
shrl
pop
pop
cmp
daa
daa
out
lds
ds
sahf
pop
adc
cmp
cmc
cmc
pop
pushf
repnz
xor
fldt
stos
clc
jp
repz
adc
mov
jae
push
fdivl
shrw
pop
or
pop
xchg
push
adc
cli
iret
xor
dec
push
cmp
shrb
loopne
iret
pop
fists
aaa
addr16
test
mov
jns
pusha
rcrb
adc
int3
inc
cmpsl
in
lods
outsl
pop
je
adc
jo
jg
pop
xchg
notl
mov
loope
in
std
jg
push
add
lea
dec
pop
xchg
jge
inc
jp
cmp
cli
or
aas
repnz
sub
sbb
mov
loop
scas
pop
dec
pop
cs
cli
xchg
pop
adc
adcl
cmp
xchg
cmp
pop
add
sti
lock
add
sbb
test
inc
mov
cmpsl
fisttpl
jne
mov
inc
in
dec
xor
jbe
insb
sbb
aad
popl
or
aad
sub
fimull
andl
add
mov
std
outsl
aam
fwait
push
jne
ljmp
cmpb
hlt
pop
cmc
cmp
int3
xchg
jl
js,pt
jmp
dec
out
add
daa
push
sub
pop
cltd
mov
loope
mov
clc
insb
cwtl
shl
loop
jae
into
inc
adc
repnz
lahf
lret
mov
lods
xchg
incb
pop
fsubr
mov
xlat
int
dec
xchg
into
lods
sub
xchg
add
xor
lret
sbb
aad
cld
pop
lods
xchg
nop
movsl
ret
je
jnp
in
movsb
push
arpl
xor
out
outsb
add
iret
pushf
push
push
sbb
icebp
or
jbe
push
enter
loopne
jl
push
pop
or
ss
mov
mov
bound
mov
xchg
xor
inc
mulb
inc
roll
inc
fnstcw
mov
ficomps
stos
cmp
loopne
fs
xchg
repnz
stc
lock
insb
int3
mov
repnz
popa
add
and
hlt
mov
lods
aad
fldt
pushf
cli
popa
sub
pusha
orl
scas
pop
cmp
dec
mov
adc
clc
les
lods
xlat
adc
cmc
loop
cmp
mov
test
mov
mov
fdivl
cwtl
mov
jbe
mov
xor
mov
addr16
jns
aam
add
pop
dec
sub
mov
pop
pop
xorl
ljmp
xchg
fmulp
mov
cld
movsl
or
push
outsl
xchg
jmp
arpl
inc
push
push
testb
pop
ss
lcall
jno
jns
popf
fstl
sub
cmpsb
lcall
or
js
int3
rcr
cli
das
testl
or
sub
and
push
roll
insb
and
and
out
jo
insl
inc
mov
xor
pop
adc
sub
sub
xor
loop
fdivrl
insb
cwtl
ja
pop
jl
jge
xor
and
stos
jno
sbb
notb
push
stos
insb
iret
mov
leave
jle
sti
push
jge
stos
pop
push
fstl
adc
cltd
ret
mov
lock
imul
sub
js
rcll
popa
popa
push
imul
pop
inc
pop
test
fistpl
outsb
pop
adc
lret
testb
iret
cmc
cwtl
js
mov
cmp
andl
loope
dec
mov
shlb
out
add
add
cmc
xchg
xor
les
sub
shlb
outsb
imul
iret
add
je
xlat
orl
add
xlat
add
cmp
je
lea
add
fcompl
call
stos
cld
popf
mov
inc
xchg
into
adc
addb
cmpsl
pop
xchg
cmp
xor
sub
lock
inc
pop
and
cmp
xor
and
xchg
lock
mov
cmc
mov
testb
jecxz
add
mov
cltd
notb
inc
add
pop
test
setp
push
cwtl
test
sub
pop
mov
fldl
frstor
push
scas
add
jl
adc
daa
push
dec
shll
inc
jmp
pop
mov
pushf
add
sbb
adc
je
int3
mov
jne
dec
lea
filds
stos
aad
js
jnp
and
les
lods
push
adc
xchg
adc
decb
or
pop
mov
jmp
cltd
mov
inc
mov
jb
push
aas
xchg
or
mov
out
je
stos
and
cmp
mov
sarl
sbb
sub
hlt
lea
pop
add
cmc
cmp
sarl
and
mov
arpl
pop
pop
add
cli
lret
loope
fdivrp
jnp
mov
cmp
jmp
add
add
cltd
or
xchg
ret
and
iret
add
int
cwtl
shrd
fisttpl
movsl
pop
and
lea
or
mov
add
out
and
ss
iret
filds
mov
insb
or
xchg
mov
mov
es
xchg
insb
cmc
push
jmp
mov
xor
leave
repnz
aad
sti
hlt
fistpll
lcall
fstp
push
inc
test
nop
adc
push
mov
aas
lds
xchg
inc
out
inc
add
lea
mov
lahf
jae
cmp
or
dec
jle
or
in
mov
push
mov
jbe
stos
out
jne
add
sub
and
fistps
cld
aad
mov
jno
cwtl
lock
mov
lcall
xchg
lret
sbb
push
fistl
shr
push
mov
xchg
je
or
loopne
xchg
mov
insb
int3
out
mov
loopne
test
imul
sbb
cmp
cmp
or
pop
loop
mov
xor
enter
and
into
imull
std
sti
lods
jp
das
mov
es
and
repz
aam
or
cli
stos
add
outsl
jl
or
adc
push
mov
lahf
lods
jle
lds
pop
cmp
hlt
enter
jbe
push
or
sbb
sbb
cmpsl
jg
mov
mov
ds
mov
cmp
xchg
jo
cmpsl
adc
sbb
adc
mov
std
test
ss
mov
fldcw
lds
fdiv
sahf
test
cmc
cmp
into
jp
test
cwtl
xlat
jno
enter
xchg
mov
insl
les
inc
aam
jmp
pop
jle
adc
mov
xchg
out
jmp
hlt
rclb
out
std
into
adc
xchg
sbbb
jbe
cmpsl
cli
gs
or
in
ds
sbb
pop
xchg
ljmp
gs
push
or
add
xchg
fisubrl
pop
or
out
jmp
adc
jnp
movsl
gs
fcmovb
mov
mov
out
mov
fwait
mov
push
fcomi
adc
sbb
jge
ljmp
mov
and
mov
mov
jno
push
xor
xor
out
xor
insl
clc
repnz
leave
mov
mov
cltd
or
xchg
insb
orl
insb
and
cmp
jno
add
stos
lret
dec
push
sub
clc
add
hlt
adc
cmc
out
xor
es
and
mov
adc
sbb
dec
xor
fs
pop
mov
pop
lock
and
cmp
and
test
sub
mov
cltd
sub
mov
inc
xchg
cmp
daa
lock
sbb
or
push
cmp
call
push
jecxz
fisttpll
loop
push
sarb
fdivrp
dec
mov
aad
pop
mov
lahf
sub
xor
lret
dec
jns
lods
cs
xor
outsb
inc
and
in
les
outsb
nop
ljmp
lods
mull
lret
cmc
dec
mov
aas
xchg
xchg
cmp
xlat
dec
xor
cli
imul
pusha
cmpsl
xor
test
add
or
jno
cmp
clc
push
or
imul
sub
mov
aam
pusha
adc
pusha
loop
mov
aad
iret
pop
enter
lods
sahf
push
xchg
test
or
xlat
ss
cwtl
inc
test
clc
inc
jecxz
jg
ja
sub
in
cmp
cmp
ret
push
cmp
mov
fcoml
loop
lea
mov
add
jns
aad
scas
lret
mov
pop
xor
mov
mov
pop
mov
adc
insl
in
jbe
push
sub
es
mov
idivl
shlb
sub
fcomip
test
je
and
push
orl
mov
mov
pop
out
lods
xor
and
mov
push
scas
add
cmc
jnp
lret
pop
xchg
and
test
inc
push
stos
pop
cmp
mov
sbb
in
cltd
mov
sbb
mov
mov
jnp
testb
mov
adc
shrb
and
mov
test
or
hlt
shrb
push
push
insb
dec
mov
nop
mov
jecxz
in
test
int3
cmc
ss
xchg
cli
fnstenv
sub
jns
or
or
pop
xor
pop
jmp
mov
mov
sub
and
sbb
les
mov
sbb
jo
cmc
xchg
mov
das
fidivs
iret
clc
add
dec
arpl
push
lods
sbb
leave
xchg
mov
sbb
les
lret
sbb
ror
fstl
in
push
incb
popa
stc
outsl
dec
bound
add
pop
test
jo
imul
push
dec
push
shlb
mov
and
xchg
mov
cld
or
hlt
ja
cwtl
jp
divl
hlt
out
mov
ret
xchg
gs
pop
loopne
bound
xchg
test
insl
mov
iret
jno
cmp
ds
inc
int3
divl
scas
scas
pop
scas
enter
xchg
jmp
and
loope
imul
lret
xchg
xchg
jns
outsb
outsl
mov
pop
xor
aad
cmc
loop
xor
dec
lcall
or
loop
cld
pop
mov
dec
mov
jae,pt
jno
jmp
ja
ljmp
icebp
add
dec
sbb
pop
out
test
mov
jg
dec
xor
jnp
mov
das
pop
xor
lret
insl
inc
sti
push
cltd
movsb
std
call
pop
mov
push
sub
shll
test
mov
sub
in
pop
fmulp
out
je
xchg
jg
loopne
sub
mov
xor
lock
xor
inc
pop
mov
ss
or
loop
mov
out
insl
xchg
imul
jmp
aam
xor
int3
sub
mov
insb
jnp
fstpl
sbb
shll
test
clc
pop
xchg
sbb
sbb
xchg
movsl
dec
outsl
lods
inc
xor
xorl
jnp
mov
clc
cmpb
mov
adc
add
repnz
add
xor
and
jb
bound
bound
xor
and
adc
add
repnz
add
xor
and
jb
bound
bound
push
xor
xor
and
repnz
repnz
loop
shlb
ret
push
mov
bound
bound
xor
and
adc
add
repnz
test
xor
push
vcvtsi2ssl
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
arpl
mov
mov
adc
cmp
cmpsl
or
cmp
sub
pop
out
jl
insb
ss
mov
mov
inc
push
cld
inc
cwtl
mov
cmpsb
sub
cmp
sub
xor
dec
cmp
insb
ss
mov
adc
scas
jbe
lock
adc
mov
test
arpl
and
imul
inc
pop
loopne
xor
pop
imul
xchg
ret
pop
lods
popf
dec
out
adc
mov
and
jns
or
popl
popf
mov
cmpsb
jae
std
adc
fstpl
addr16
repnz
jl
dec
mov
jl
pop
es
jl
push
adc
fdivl
roll
inc
adc
jecxz
pop
push
pop
cmpsb
mov
xchg
repz
leave
mov
fs
stc
sub
clc
mov
hlt
add
pop
dec
lock
sti
sti
sub
nopl
insl
xchg
lret
pop
fnstenv
aad
lea
fstpt
fs
imul
pushf
es
cmp
cmpsb
jbe
data16
push
es
insb
mov
cmpsb
lret
xchg
out
jl
add
push
mov
outsl
xorb
mov
mov
ret
dec
xchg
dec
incb
xor
cmp
flds
jae
push
jbe
and
cs
adc
sarl
pop
xchg
pop
xchg
or
add
lret
jns
push
cmp
inc
in
mov
cmpsb
or
cmp
sub
pop
out
jl
insb
ss
mov
mov
data16
push
cld
inc
in
mov
cmpsb
or
cmp
sub
pop
out
jl
insb
ss
add
pop
sub
out
dec
xor
movsl
mov
mov
hlt
xor
push
add
and
scas
sbb
sub
in
sub
push
cmp
add
sbb
scas
mov
sti
push
repz
adc
pop
clc
jbe
dec
xor
sub
mov
pop
popa
sub
push
push
lcall
and
bound
in
vphadduwq
xchg
xchg
adc
dec
mov
std
iret
mov
mov
adc
cmpsl
mov
mov
xor
lcall
cmpsl
in
scas
sub
push
scas
cmpsb
aas
jmp
sbb
out
push
cli
jns
popf
xchg
inc
loopne
repz
inc
dec
stos
xchg
sub
cmp
push
mov
push
bound
rolb
sbb
push
ret
or
and
add
mov
push
lock
movl
xlat
lea
nop
xchg
push
leave
repnz
xchg
pop
xor
icebp
or
mov
rcr
mov
dec
cmp
jbe
daa
in
mov
push
call
pop
dec
in
aam
mul
cs
xor
mov
inc
fwait
jns
mov
cmp
std
imul
inc
pop
sbb
xchg
cmp
pop
mov
xchg
sbb
clc
dec
iret
mov
inc
add
mov
pop
and
repz
jb
cli
or
rcrb
lods
imul
mov
push
xor
bound
jne
pop
push
cld
test
movsl
std
or
inc
xchg
lahf
lods
gs
lahf
inc
stos
scas
cmp
scas
dec
inc
daa
add
or
fdivrl
testb
jp
lcall
loopne
aad
mov
lock
mov
aaa
inc
out
push
aaa
mov
popf
addr16
mov
shrb
adc
push
shll
cli
mov
loope
add
xchg
or
mov
mov
mov
dec
loop
cmc
ficomps
stos
fs
leave
popa
cmpsb
lcall
cmp
hlt
xchg
inc
sub
add
std
push
adc
nop
sub
mov
xchg
out
sbb
mov
popa
inc
mov
bound
jbe
lea
mov
cmp
leave
test
mov
dec
std
mov
xor
ds
xor
out
loopne
sub
lret
jg
loope
leave
cli
roll
scas
cmp
sti
testl
xor
into
xchg
ret
or
roll
dec
pop
cmc
push
push
jp
pop
lea
lods
cs
dec
outsb
je
mov
jbe
add
loope
push
cmc
add
mov
or
or
xlat
stc
out
and
sbb
inc
mov
mov
loopne
fisttpl
repnz
sub
mov
cmpsb
sbb
xchg
push
addl
sahf
out
testb
mov
cmp
pop
cltd
sbb
xor
nop
insb
jno
cmpb
cltd
mov
test
pop
xchg
into
aad
mov
and
inc
imul
punpckldq
dec
fsubr
and
rolb
stos
int
add
imul
sarb
call
cmc
or
dec
dec
int
inc
sub
inc
cmpsl
stc
mov
or
adc
cli
lods
jl
jb
mov
xchg
enter
cmpsl
fs
sub
adc
pushf
cs
call
mov
hlt
sbb
hlt
xor
mov
add
push
ss
loop
push
push
pop
add
shlb
fcmovnb
fs
mov
mov
xlat
sbb
cmpsl
push
mov
aad
xchg
xchg
pop
mov
sub
dec
pop
mov
add
cs
dec
repnz
jnp
pop
jbe
enter
push
mov
push
push
add
sub
cltd
jnp
cld
mov
jle
cmp
in
fldenv
mov
mov
popa
add
add
mov
fucom
xchg
lock
sub
mov
or
das
cwtl
push
cltd
fldcw
les
pop
add
test
addr16
sti
aad
add
inc
lods
lock
pop
adc
jns
shlb
and
add
in
fmull
mov
cmp
add
outsl
inc
sbb
daa
call
outsl
pop
dec
jp
test
mov
lock
loopne
and
test
mov
jne
lcall
push
in
cmp
mov
cmp
jae
inc
and
cmpsb
cwtl
xchg
test
add
and
fisubrl
aas
les
int3
cmp
and
mov
cmp
mov
mov
lahf
cltd
push
int3
jg
add
lcall
lcall
insb
stos
or
pop
les
or
ret
sbb
xchg
cld
xchg
in
xchg
mov
pop
xchg
mov
inc
dec
inc
out
and
add
cli
adc
fildll
pop
pop
inc
or
mov
dec
mov
addb
mov
sub
stos
inc
jb
sahf
cld
pop
inc
shlb
movsl
pslld
xor
push
test
push
push
jmp
fidivs
pop
or
test
dec
adc
stc
xor
je
cmp
pop
or
mov
mov
test
fsubs
mov
aaa
mov
and
and
dec
arpl
mov
lods
repz
or
addr16
std
fistps
fsts
jae
mov
mov
pop
push
add
fsubrl
mov
and
int3
adc
sub
pop
xor
in
sbb
pop
push
test
push
pop
pusha
popa
xor
lock
push
xchg
dec
stos
ja
adc
push
mov
sbb
pop
fsubl
mov
dec
aam
add
pushf
sbb
mov
jb
out
inc
sbb
sub
daa
popf
into
mov
xor
adc
hlt
adc
add
adc
popl
mov
in
mov
lcall
dec
loopne
mov
push
sub
rorl
filds
mov
fsubrl
sbb
pop
dec
inc
test
jge
pop
addl
mov
pop
pop
loop
lods
sbb
xlat
mov
mov
lods
jge
pop
fildll
pushf
leave
mov
repz
mov
jle
sarb
add
push
rorb
cmp
push
jo
loopne,pt
cltd
pop
test
in
in
in
mov
push
mov
push
out
jle
push
dec
imul
cmpsl
test
in
inc
in
sub
fstpt
cli
xor
aad
mov
imul
gs
pop
repnz
xchg
pop
add
dec
and
sbb
push
popf
ret
cmp
stc
aam
fsubp
push
rcrl
sub
pop
aad
daa
aaa
mov
aas
sahf
mov
jb
mov
jp
insl
xor
mov
mov
popa
test
imul
sub
mov
dec
sbb
pop
test
mov
hlt
in
mov
inc
aam
xchg
mov
fcoms
lds
cld
pusha
add
mov
stos
mov
lahf
dec
ror
xlat
int3
mov
sbb
adc
aad
jns
add
dec
ret
leave
js
mov
fwait
sahf
jne
push
test
add
adc
and
cmp
loop
imul
or
loopne
jle
mov
adc
lahf
mov
pop
or
lods
test
jg
push
loop
orl
loope
repz
sarb
je
out
call
xor
or
mov
inc
add
fldenv
cmpl
lea
sbbb
jns
pusha
jo
and
dec
dec
pop
rorb
push
dec
pop
mov
xor
adc
scas
push
lods
test
popf
lods
mov
and
or
push
pushf
scas
lret
jge
stos
dec
dec
lock
xchg
and
and
mov
mov
jne
hlt
xor
ss
in
ss
adc
adc
mov
mov
xor
push
lock
mov
mov
xchg
icebp
jecxz
pop
lcall
clc
push
push
add
fnstsw
das
inc
sti
aas
sbb
lret
cwtl
test
out
dec
mov
cmp
sarb
fldt
push
cld
mov
icebp
leave
cmpb
in
cmp
aad
mov
and
mov
cli
or
js
imul
jo
mov
or
sarl
dec
hlt
loope
sub
aas
cmpl
imul
xchg
loope
imul
jno
movsb
loop
adc
jo
jnp
add
fisubs
cltd
fldl
add
aaa
int3
mov
das
and
in
jno
pop
mov
xchg
test
mov
adc
mov
mulb
sahf
inc
cmc
jno
adc
xchg
mov
jle
lods
insb
mov
pminub
adc
les
jp
mov
cmc
mov
bsf
adc
push
aas
adc
enter
aam
mov
sti
push
sbbl
loop
pusha
and
mov
or
xor
inc
sbb
subl
pop
lret
inc
push
std
and
sti
scas
lret
add
into
movsl
or
xor
jmp
sub
push
xorl
jne
in
rorl
aas
movsb
movsl
mov
mov
and
mov
inc
cmc
push
stos
pop
mov
ljmp
test
lret
orw
push
lds
sbb
call
sub
lea
sti
and
pop
ss
lods
lahf
aaa
movsb
sub
cld
insl
lea
mov
dec
loope
fsubr
scas
pop
bound
sti
sahf
xchg
cmp
stos
mov
mov
mov
or
xlat
sub
insl
das
jg
cmpl
ja
movsl
cmpsl
cmp
sbb
mov
mov
lahf
in
cltd
mov
sub
scas
mov
push
in
add
and
xor
jne
and
sahf
movsl
mov
mov
cli
cmpsb
mov
jge
jp
fs
pop
xlat
mov
in
lahf
mov
mov
repz
xchg
insb
inc
cmp
dec
shlb
pop
mov
incl
or
and
in
sbb
adc
test
push
fildll
mov
xchg
jns
mov
out
jle
push
cmp
sbb
xchg
jnp
lea
jnp
loope
in
pushf
sub
stos
cwtl
pop
aaa
fadds
cli
imul
insb
jo
add
mov
cmp
push
mov
addl
movsb
orb
xor
mov
pop
and
mov
clc
aaa
xchg
orb
xchg
sub
pop
mov
mov
enter
jp
add
rcrb
pop
inc
pusha
and
cli
add
sbb
mov
push
xchg
xor
scas
adc
lods
mov
push
imull
adc
jecxz
mov
jnp
shrl
pop
jmpw
inc
ret
push
mov
sbb
pop
jbe
call
lret
pop
push
lods
push
cs
in
test
cmc
lock
sti
cli
jns
stc
cmp
xchg
into
sbb
push
popa
int3
andb
mov
push
stos
nop
ja
cs
mov
je
int
inc
aad
gs
scas
int
xchg
mov
pop
jnp
movsb
xor
cwtl
sbb
push
xchg
dec
insl
ret
mov
flds
dec
jns
add
ja
mov
mov
pop
aad
push
inc
cmp
sbb
sub
cmpsl
test
pop
ret
or
test
fwait
push
fcomps
sbb
repnz
mov
push
adc
js
push
pusha
mov
and
cmp
loopne
sub
daa
mov
stos
lahf
and
icebp
add
push
ficompl
fcmovnbe
and
jnp
jbe
bound
dec
xor
testl
data16
mov
lcall
cmpb
aaa
push
inc
lret
push
mov
mov
sahf
stos
mov
loope
jne
fs
movsl
ja
mov
mov
aam
xlat
in
in
mov
push
loop
mov
pop
shrb
loope
int
insl
dec
push
shll
iret
jo
mov
iret
fcomip
push
or
enter
sub
in
cmp
push
inc
sbb
pop
ds
lea
pop
pop
call
adc
stos
or
test
or
fildll
xchg
fists
outsb
mov
xor
inc
jnp
shl
sbb
add
adc
dec
fmuls
aaa
push
or
std
jbe
subb
jne
rol
dec
cmp
sbb
push
ja
iret
adc
or
negb
cld
lods
sub
inc
cmpsl
jmp
adc
into
fnstsw
rorb
xchg
add
repnz
xor
mov
sti
int
xchg
dec
push
cmp
in
mov
pop
das
es
lcall
mov
addl
push
pop
add
push
stos
int3
xor
jp
mov
insl
imul
outsl
arpl
cwtl
push
ret
add
xchg
scas
fistpl
inc
add
add
outsl
inc
gs
pop
icebp
pop
lcall
cmp
cmp
jns
sbbb
xor
xor
loop
arpl
pop
scas
jbe
xchg
iret
sbbb
mov
lret
sbb
add
das
movsl
shll
das
out
xchg
sub
and
and
mov
xor
es
xor
push
cmpsb
mov
mov
sbb
xchg
add
cli
aam
jno
jo
mov
js
stc
mov
pop
movl
mov
loop
leave
data16
arpl
cltd
subb
push
enter
dec
test
sub
adc
cmp
and
subb
xchg
test
shr
mov
das
add
jb
jmp
and
push
cmp
fsubs
imul
xor
loopne
stos
jns
xor
ja
ds
faddl
stos
xchg
push
pop
mov
es
pop
xor
xor
f2xm1
jo
jb
and
cmpsl
lock
add
sbb
aam
mov
addr16
out
mov
cmp
push
push
into
icebp
pop
dec
insb
data16
sarb
fdivl
mov
cs
cmc
or
lds
out
test
pop
pop
push
mov
or
jne
lock
fnsave
or
testl
out
ljmp
in
repz
sbb
out
xchg
pop
in
or
imul
and
lahf
lods
scas
pop
aas
mov
pop
daa
mov
or
bt
cmp
add
lods
movsb
xor
adcl
jle
inc
pushf
movsl
jne
mov
lods
pop
cld
es
sbb
inc
mov
sub
mov
lahf
insl
cmp
dec
int
mov
repnz
pop
xlat
jl
imul
scas
into
mov
scas
cmpsl
int3
ret
lea
push
js
fs
inc
sti
sub
push
out
mov
fmuls
sub
loope
inc
jge
and
xchg
sub
lahf
sbb
addb
outsl
mov
gs
es
rcl
aad
ficoms
jmp
pop
sbb
mov
mov
icebp
cmp
cli
mov
ja
xchg
bound
xchg
xor
mov
imul
xchg
adc
stc
jo
int
add
sbb
cli
scas
fucomi
and
loopne
aas
cmp
mov
push
xchg
inc
mov
imul
repz
test
adc
jnp
in
mov
jg
dec
ja
out
loop
xchg
jno
pop
pop
cmpsb
mov
mov
adc
insb
insl
add
or
mov
mov
push
ficoml
ror
iret
adc
jg
xor
lods
ret
sub
cmpsl
cmp
mov
xchg
or
andl
add
cli
inc
shll
xor
fwait
xchg
sahf
test
or
enter
cmc
hlt
or
mov
mov
and
push
ja
lahf
addl
in
sbb
mov
ljmp
fmuls
jmp
cmpsb
fimull
out
enter
jnp
imul
jle
adc
std
int3
std
inc
sbb
and
prefetch
stos
sahf
clc
pusha
stos
jo
inc
aas
jno
add
xchg
jnp
fcoml
lret
pop
lret
ljmp
leave
push
and
pop
or
jge
push
pop
mov
call
dec
int3
add
or
mov
push
lret
xor
enter
ret
fsubr
ret
cmpsb
cmp
and
xchg
pusha
pop
js
rcrb
inc
cmpsl
imul
dec
fcoms
cmp
add
stos
sub
out
add
and
pop
sti
jl
mov
stc
push
mov
out
aaa
dec
xchg
jae
jae
xchg
es
jmp
sbb
insb
push
jp
mov
push
loopne
iret
cmp
pop
shrb
adc
fs
fdivrl
dec
fdiv
imul
lret
mov
mov
mov
fsubr
in
adc
popf
inc
sub
inc
in
lea
adc
aad
insb
mov
aas
push
pop
je
das
and
sub
jbe
sbb
sbb
sbb
adc
push
inc
jne
xor
xchg
push
pop
movsb
mov
or
or
popf
bnd
add
lods
pop
mov
or
dec
xorb
int
xlat
lcall
fcomp
mov
mov
push
lods
xchg
lahf
lock
jle
dec
adc
in
mov
pusha
ss
cmc
inc
push
aaa
ja
xchg
xor
pop
jmp
and
loopne
cwtl
inc
dec
clc
adcl
or
sbb
mov
shlb
mov
add
mov
sbb
adc
imul
sbb
cmp
repnz
cmp
add
aam
enter
les
mov
outsb
mov
sbb
push
sub
sbb
mov
jbe
sub
lods
xor
stos
lahf
or
mov
push
pop
or
ficompl
fs
inc
aam
jo
pop
adc
sub
popa
mov
dec
orl
xlat
mov
int
negl
dec
lret
mov
lods
stc
rorb
jbe
xchg
in
repnz
rcrb
pop
jb
pushf
mov
jge
sub
or
jecxz
sbb
mov
jne
sub
in
outsl
sub
subl
mov
jecxz
xchg
lcall
adcl
data16
pop
aad
fs
mov
stc
xor
add
aas
notb
sbb
jecxz
cltd
stc
repz
scas
cld
xrelease
lds
push
push
dec
jbe
out
inc
pop
xor
imul
aaa
jns
push
imul
nop
inc
out
les
nop
sbb
cmpb
dec
pop
std
jnp
add
push
sti
mov
ss
lods
pop
fmul
enter
sub
pop
jecxz
mov
adc
mov
jg
mov
push
fadd
push
testb
subl
cli
rclb
dec
into
jmp
outsb
movsl
jg
ret
sti
push
test
stos
out
repnz
in
sub
stos
jnp
xchg
add
cmc
in
mov
fchs
or
mov
mov
sub
mov
and
dec
mov
outsb
pop
jno
and
rorl
ret
mov
or
mov
mov
aas
adc
lret
sbb
repz
mov
das
js,pt
cmp
out
stc
enter
and
jbe
mov
cmc
pop
sbb
shrb
insb
cld
out
mov
jne
mov
insl
addr16
loope
xchg
mov
and
push
insl
add
testb
sahf
xor
push
fisubl
fisubrl
popa
cli
daa
movsb
sub
popf
das
andb
nop
cmpsl
xchg
inc
aas
pop
imul
call
adc
mov
stc
lds
sub
daa
lcall
xchg
push
jne
cwtl
shrb
loope
lahf
pop
sub
xor
cmp
data16
push
mov
fwait
pop
lcall
jl
orl
movsb
pop
cmp
pop
hlt
scas
xchg
xchg
jno
jae
test
xchg
and
gs
dec
push
lods
jp
push
sbb
adc
movsb
add
adc
int3
pushf
rcrl
inc
cmpl
ja
cltd
hlt
out
mov
sbb
dec
pop
mov
add
push
mov
xchg
mov
call
sub
inc
lahf
outsl
cmc
xchg
xchg
ss
lock
sbb
push
cs
lcall
mov
xchg
jmp
sarb
push
inc
cwtl
mov
adc
clc
pop
jnp
das
arpl
stc
jb
push
call
or
outsb
test
and
fsubrl
fbld
int3
dec
push
pop
cmpsl
sub
divl
sub
popa
pop
aam
mov
cmp
call
cmc
pop
cmp
jbe
push
lock
shrl
scas
mov
mov
int
mov
les
out
lret
mov
mov
jmp
in
mov
mov
sub
or
sub
jbe
pop
js
cwtl
dec
sub
push
sub
arpl
sbbl
fidivs
sbb
xlat
test
pop
rolb
lods
jbe
data16
push
cld
inc
in
mov
cmpsb
or
cmp
sub
pop
out
jl
insb
ss
mov
mov
data16
push
cld
inc
in
mov
cmpsb
or
cmp
sub
pop
out
jl
insb
ss
cmpsb
les
fsubl
push
cld
in
mov
cmpsb
or
cmp
sub
pop
out
pop
insb
ss
mov
mov
data16
push
jl
in
mov
cmpsb
cmpsb
cmp
xchg
aam
mov
xorl
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
