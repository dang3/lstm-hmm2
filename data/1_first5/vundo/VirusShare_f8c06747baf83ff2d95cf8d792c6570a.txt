xchg
add
das
add
jl
add
jl
add
jl
add
jl
add
out
add
add
add
fidivl
add
add
js
add
bound
add
add
push
sub
add
add
sbb
add
sub
add
add
add
add
add
outsb
add
xchg
add
das
add
jl
add
jl
add
jl
add
jl
add
jl
add
add
add
popf
jns
add
add
js
add
bound
add
add
push
sub
add
add
sbb
add
jns
add
add
add
add
add
add
outsb
add
xchg
add
jns
add
add
sub
add
add
add
add
add
push
ja
add
add
add
add
pop
jl
add
add
js
add
bound
add
add
push
sub
add
add
sbb
add
sub
add
add
add
add
add
outsb
add
xchg
add
mov
add
add
jl
add
add
add
add
add
add
add
js
add
js
add
bound
add
add
push
sub
add
add
sbb
add
add
jl
add
jl
add
jl
add
inc
outsl
add
jl
add
fisubrs
add
das
add
jl
add
jb
add
jl
add
jl
add
jl
add
inc
outsl
outsb
je
outsl
insb
and
outsb
gs
pop
inc
outsl
insb
outsl
jb
add
add
inc
outsl
outsb
je
outsl
insb
and
outsb
gs
pop
inc
gs
je
jo
add
cs
inc
inc
inc
push
dec
push
add
add
inc
outsl
outsb
je
outsl
insb
and
outsb
gs
pop
inc
arpl
jae
imul
add
aaa
sarb
jno
pop
push
das
iret
mov
add
pop
add
add
or
push
add
add
add
mov
add
add
inc
add
add
out
add
add
add
add
leave
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
cmp
jecxz
leave
add
add
add
fwait
add
clc
add
add
add
data16
add
addl
add
add
jns
mov
and
mov
outsl
add
add
add
add
data16
add
call
add
add
add
add
daa
add
add
add
add
data16
add
add
add
add
add
add
leave
add
leave
add
data16
add
add
xchg
add
add
cmp
mov
mov
add
add
add
add
inc
add
add
add
add
add
add
leave
add
add
add
add
add
add
inc
add
add
add
add
loop
enter
leave
add
add
add
add
add
add
add
add
add
add
rolb
movsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
and
add
add
add
leave
add
add
pop
add
out
add
add
add
lea
sub
add
test
mov
add
mov
pop
add
add
add
add
add
add
add
xor
lock
add
add
add
imul
outsl
add
add
mov
sbb
xor
out
add
add
add
pop
add
add
add
out
add
add
add
dec
add
add
add
add
add
add
add
add
out
add
add
add
add
bound
test
add
add
add
add
add
add
add
add
add
rolb
xchg
add
addl
add
add
mov
add
iret
add
add
add
add
add
arpl
jns
stos
add
add
add
mov
add
add
add
movsl
add
add
hlt
add
mov
jecxz
add
jo
pop
add
add
add
add
add
add
add
out
add
leave
add
add
adc
daa
add
test
jecxz
leave
add
add
add
add
lock
xor
push
add
adc
leave
add
add
bound
sub
push
or
add
add
add
add
add
add
add
add
add
add
push
or
add
verw
add
add
add
add
add
add
add
out
add
add
mov
add
leave
add
leave
add
add
add
mov
add
add
addl
add
add
add
add
add
dec
add
add
add
add
add
mov
test
add
xchg
add
xchg
fcoms
ret
aaa
xchg
cmpsl
push
stos
jle
push
ret
sahf
insl
call
scas
imul
movsb
inc
add
mov
pop
repz
cmp
dec
xchg
mov
cmp
lahf
insb
out
stos
rcr
sbb
jecxz
mov
push
lods
fdivs
cmp
jb
xchg
ja
xlat
or
dec
mov
mov
addr16
mov
cmpsl
popa
repnz
mov
mov
pop
mov
dec
inc
mov
fisubl
lahf
aas
bound
out
adc
cs
push
sahf
mov
clc
mov
ficompl
pop
idivb
out
imul
sub
and
lea
mov
and
dec
je
es
std
cmp
push
stc
test
xchg
push
add
xchg
fdivp
mov
mov
inc
fstpl
mov
mov
xchg
sti
je
adc
fwait
inc
add
sbbl
cmp
insl
push
aam
push
insb
pusha
test
test
imul
cmp
addb
xor
mov
repz
dec
mov
cmp
idiv
icebp
addr16
and
add
sbb
pop
mov
cmp
mov
and
negb
fsubr
or
xorl
jnp
loope
lock
fs
push
pop
fists
sbb
xor
lea
popf
mov
loop
mov
call
imul
popa
push
mov
je
fstp
subb
jecxz
shl
add
sbb
lcall
mov
cmp
stos
jecxz
mov
call
insl
push
nop
fisttps
xchg
add
or
fcompl
mov
stos
mov
cmp
das
xchg
out
inc
jnp
push
mov
jbe
lods
cmp
and
dec
aam
push
js
loop
dec
test
sbb
je
lahf
dec
icebp
jbe
mov
nop
sub
inc
mov
movsb
or
es
loope
push
into
jg
aad
xchg
ss
adc
scas
lret
inc
mov
sub
stc
aam
jnp
mov
fdivp
std
pop
out
mov
or
data16
int
and
or
dec
mov
sbb
rclb
sarb
addr16
sub
fdivrl
add
xor
mov
notb
inc
frstor
cs
pop
insl
and
push
sub
xchg
jbe
jecxz,pt
out
fisubl
cmp
movsl
push
jmp
aam
cld
ljmp
add
mov
cli
add
popa
or
mov
push
out
aaa
add
add
add
add
loop
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
outsl
sarl
loope
icebp
loop
dec
cld
popa
enter
je
push
iret
jne
popa
scas
add
xor
jg
dec
loope
icebp
das
cmpl
call
popa
fbstp
jae
adc
fdivrs
dec
stc
pop
jmp
ud1
stos
out
inc
fdivl
sbb
add
dec
shlb
push
icebp
pop
xor
xor
add
out
mov
push
jb
stc
cli
lcall
hlt
pop
adc
mov
adc
and
fcom
adc
aas
pop
ja
dec
shrb
scas
movsb
or
test
stos
push
iret
or
mov
movsb
ret
and
cs
subl
xor
mov
mov
push
cmp
stos
and
push
mov
in
test
test
enter
add
jb
mov
andb
or
xor
mov
xor
xor
lret
aaa
mov
clc
pop
icebp
das
cmpl
test
inc
decl
js
push
cmp
mov
das
orl
int
aam
cs
fs
pop
or
xor
ja
dec
orl
fbstp
jno
adc
inc
ljmp
test
mov
mov
xchg
pop
pop
mov
inc
call
popa
fbstp
add
xor
jg
dec
loope
icebp
das
cmpl
mov
inc
call
popa
fbstp
add
xor
pop
ret
jo
rorl
lcall
sub
int
and
pop
inc
js
cmp
pop
sub
mov
adc
jg
jl
push
and
dec
pop
adc
add
mov
stos
fs
pop
pop
sarb
hlt
dec
jmp
inc
xchg
loop
int
daa
outsl
out
mov
lds
sub
mov
xchg
call
and
ds
mov
popa
test
sub
jno
and
jp
push
mov
sub
les
loope
lods
es
push
and
mov
nop
lds
jnp
push
adc
jecxz
sub
dec
out
pop
dec
push
push
mov
repnz
fs
jnp
pop
jne
and
rol
adc
dec
fwait
mov
pop
js
ljmp
sbb
mov
xor
ds
idivb
dec
xchg
lret
dec
and
test
ror
gs
and
idivl
mov
ja
es
dec
mov
mov
sub
lcall
cmp
pop
lret
xchg
outsl
sbb
jns
push
dec
or
icebp
pushf
test
push
test
pop
jp
fdiv
mov
push
nop
inc
push
rcrb
lock
fcoms
out
push
sbb
jl
jnp
pusha
mov
xorb
fs
addl
lock
inc
pop
pop
lock
jle
repnz
mov
add
into
inc
mov
movb
repz
push
xchg
jp
sahf
adc
and
mov
call
repnz
mov
adc
jecxz
jne
dec
test
bound
add
or
aam
cmpsb
jne
jge
cmpsl
out
and
xor
int3
push
loopne
jnp
dec
rcl
in
pop
push
push
pop
and
push
test
sub
pop
sbb
jp
xchg
mov
jo
lret
jnp
shll
andl
mov
jne
sub
shl
inc
outsl
and
xchg
and
and
xor
mov
sbb
mov
js
xlat
push
xchg
inc
pop
clc
xchg
stos
out
jle
stos
jne
xchg
in
push
rclb
pop
jbe
adc
inc
int3
loope
outsl
sub
pop
or
movsb
add
xchg
fldcw
movsb
cltd
cli
out
into
mov
pop
and
jl
movsl
aas
dec
cs
andl
ds
adc
fiaddl
and
pushf
adc
sbb
sti
mov
roll
arpl
mov
shr
sub
dec
xor
shll
inc
mov
loope
out
out
divl
cmpsl
lock
pop
and
cmpsb
loop
mov
lods
mov
xchg
nop
push
xor
dec
les
pop
adc
push
popf
pop
add
fsubrl
outsb
xlat
loopne
sbb
sbb
dec
insb
pop
inc
dec
dec
loopne
mov
in
mov
sarl
add
pop
sbb
push
and
inc
sahf
aaa
out
mov
lods
ljmp
and
mov
lcall
sbb
gs
loop
xchg
insb
in
sbbl
mov
cmp
out
ret
and
mov
mov
fnstcw
sarl
and
lahf
popa
pop
ret
cmpsl
lds
mov
fwait
lcall
fwait
arpl
dec
push
cs
jae
pop
in
test
sarb
jg
xchg
add
in
inc
adc
popf
pop
std
jge
push
test
out
fcoml
and
and
jne
mov
orl
mov
sbb
arpl
adc
outsb
int3
aaa
lds
jb
and
in
clc
movsb
int
not
add
push
inc
pushf
aas
xor
fdivr
or
pushf
mov
sbb
sbb
xor
sub
or
jmp
dec
pop
push
pop
mov
xor
xchg
cmc
mov
mov
xor
mov
xor
sarb
inc
pop
loop
lds
adc
ficoml
and
mull
xor
and
std
cmp
push
mov
arpl
and
mov
xchg
fwait
jno
xlat
in
inc
inc
cwtl
fdivr
rorb
and
mov
mov
test
mov
inc
sub
inc
xchg
into
js
add
leave
mov
inc
arpl
xchg
jns
ja
mov
jp
mov
adc
inc
mov
jo
mov
adc
leave
sarl
leave
pop
xlat
es
ret
cli
or
push
inc
jno
gs
adc
cmp
notl
clc
lock
inc
xor
ljmp
xor
pop
movsl
mov
mov
sbb
jl
push
push
xchg
test
add
xchg
sbb
mov
insb
test
jge
xorw
mov
in
mov
aaa
push
and
xor
data16
mov
int
or
dec
pop
cmp
test
das
js
mov
cmpsl
xorb
cmp
mov
cs
iret
fmulp
mov
int
jg
dec
mov
arpl
jmp
aam
add
add
add
in
push
cmpsb
cli
lock
test
dec
push
imul
fs
push
cmp
and
cmp
data16
inc
pop
insl
imul
call
imul
cmp
add
in
fsubrp
mov
pop
addl
sub
loopne
popa
popf
or
xchg
nop
imul
fldl
mov
pop
mov
dec
add
cltd
or
decb
stos
jmp
pop
push
jg
inc
insl
arpl
jns
mov
outsb
es
push
out
test
loopne
and
push
adc
pusha
pop
push
xchg
nop
divb
loopne
pop
fistps
xchg
and
jo
mov
pushf
ds
int3
dec
loopne
lret
bound
hlt
add
xchg
cmpsl
out
push
jbe
cltd
cwtl
stc
sbb
in
or
data16
inc
sbb
mulb
xchg
push
lret
sahf
gs
lods
xchg
pop
imul
dec
cmp
inc
cmp
mov
cmp
xor
add
test
sahf
xchg
cmp
push
dec
ds
js
aam
xorl
pop
fidivrl
sub
pop
add
add
xchg
mov
lds
push
dec
mov
mov
add
adc
lret
sbb
or
stos
imul
ss
cld
push
cmp
sbb
jne
data16
je
mov
mov
mov
out
test
xorl
iret
popf
popf
pop
sbb
pop
cmp
add
fisttpl
dec
in
jg
subb
pop
dec
rcll
dec
sahf
mov
lea
mov
add
jae
xorb
outsl
xchg
dec
sbb
fcoms
pop
inc
int3
push
aas
in
gs
jae
push
push
xchg
pop
or
test
push
or
in
scas
sbb
add
pusha
sbb
pop
xchg
cmp
scas
seto
movsb
add
xor
leave
cmp
daa
lret
mov
das
xchg
lods
dec
mov
push
inc
fnstenv
shrb
mov
pop
dec
movsl
loop
clc
pop
orb
inc
fcmovne
movsb
je
adc
add
mov
out
cmp
lea
add
imul
mov
xchg
cmpsl
cmpsl
es
test
iret
xchg
jg
fcmovnbe
dec
jne
fidivl
jae
mov
pop
push
fldt
cmp
jns
les
xchg
out
mov
inc
pop
ja
lods
sub
jle
decl
in
xor
or
push
push
popa
pop
mov
jmp
push
subb
sub
scas
inc
cli
xor
enter
arpl
sbb
push
aas
ja
pop
cwtl
dec
lock
daa
cs
lock
jecxz
mov
sbb
xlat
sub
dec
push
out
xchg
jg
jae
clc
sub
jg
cwtl
fsubrs
mov
xor
clc
ds
ss
fcmovbe
ds
out
aaa
push
push
fcomp
outsb
fs
and
pop
push
or
add
outsb
das
inc
stos
push
mov
lds
cmp
mov
xchg
sarl
jl
mov
adc
jmp
cmp
push
adc
outsb
jg
inc
xor
lods
shlb
jns
inc
ds
add
bound
adc
add
movsl
mov
sbb
clc
ja
insl
cmp
sub
sbb
sub
xchg
call
or
lcall
push
push
mov
cmp
cmpsb
sbbb
movsb
or
or
repnz
test
filds
rol
movsl
lret
pusha
mov
pop
jmp
dec
ljmp
xor
inc
std
pop
leave
pop
movsb
test
ds
sti
hlt
jnp
sbbl
or
fisttpll
rolb
icebp
fisttpl
inc
mov
mov
out
sub
add
dec
mov
cltd
je
mov
aas
pop
mov
sbb
lahf
sahf
test
ds
dec
fcmovne
xchg
mov
clc
mov
in
sbb
inc
xchg
pop
mov
cmpxchg
xlat
cwtl
imul
test
cmpsb
push
sub
mov
arpl
inc
test
fs
ret
adcb
or
imul
fistpll
mov
and
shll
js
stos
inc
rclb
sahf
pop
nop
sub
add
lcall
dec
in
mov
dec
flds
rorl
pushf
pcmpeqd
lahf
jo
popa
fnstsw
mov
ss
movsb
mov
push
push
shrl
and
int
insl
test
cs
mov
rolb
adc
nop
pop
push
pop
aad
cmp
jecxz
fnstenv
sub
sbbb
std
lcall
or
adc
pop
sub
repnz
mov
repz
pop
cmp
cli
daa
push
pusha
sahf
inc
adc
ja
notl
pop
sub
adc
dec
add
dec
lret
ficoms
xor
es
or
es
popa
roll
addr16
cld
mov
insb
addl
lret
dec
xchg
sbb
lret
imul
fwait
imul
adc
les
es
mov
push
xchg
add
sbb
lods
filds
lcall
insl
cmp
cmpsb
scas
push
mov
add
roll
out
or
out
xchg
mov
xlat
mov
insb
mov
in
mov
dec
sub
push
movsb
and
fmuls
mov
mov
adc
pop
and
add
dec
movsb
and
push
dec
roll
aas
lds
addb
test
scas
cmpsb
xor
mov
in
in
mov
xor
push
inc
push
aad
xchg
add
fidivrs
xchg
ret
in
mov
inc
pop
les
push
sub
inc
mov
adc
lods
push
cli
iret
adc
add
ljmp
jbe
sti
xchg
or
ja
lock
aad
aad
movsl
push
push
mov
pop
mov
mov
sub
ds
lea
pop
and
xchg
iret
mov
mov
daa
sbb
in
aam
fmuls
je
dec
sbb
pusha
dec
cmp
sbb
cmp
push
dec
mov
out
or
mov
dec
dec
into
enter
sub
jp
pop
xlat
pop
mov
mov
dec
lcall
push
lcall
out
mov
and
sub
pop
popf
aad
or
xchg
mov
mov
sbb
jle
mov
cwtl
mov
push
cmp
gs
lods
jno
test
testl
push
jge
pushf
aad
sub
pop
fsubrp
inc
iret
in
aam
dec
mov
test
jp
dec
jno
jp
mov
and
jo
push
clc
cmovo
push
or
lret
xchg
and
push
pop
jle
sbb
adc
ss
xchg
inc
mov
cltd
push
sbb
sbb
cmpsb
xor
mov
pop
adc
pop
push
fmulp
sub
jo
cmpsb
cmp
idiv
outsl
loopne
adc
call
test
cmpsb
xchg
push
sbb
popf
test
dec
mov
pop
outsl
mov
mov
pop
arpl
mov
dec
mov
sbb
data16
jbe,pt
test
inc
inc
dec
mov
push
push
jnp
stc
nop
outsl
jns
dec
jne
outsl
jb
xchg
jmp
std
lods
jae
decb
inc
xchg
sbb
bts
movsb
lret
test
xor
sbb
pop
push
dec
fmull
push
arpl
leave
cmpb
mov
jmp
test
int
push
pusha
cmpsl
mov
pop
test
mov
inc
dec
fstpl
cmpsl
push
test
or
or
enter
jp
aad
mov
stos
xor
mov
fmuls
adc
fidivl
jnp
into
cs
jns
jns
ret
ret
bnd
sbb
mov
vmovntps
mov
cld
sub
mov
movsl
push
dec
clc
mov
in
jne
ds
sti
xchg
pop
push
dec
push
lods
add
add
inc
pusha
sub
or
pushl
sbb
in
xchg
push
andb
pushl
fdivrl
add
add
shrl
push
shrl
dec
push
shl
adc
xchg
mov
lea
add
addr16
mov
push
push
xchg
pop
mov
add
roll
mov
jmp
xor
push
imul
js
loope
mov
out
jp
stos
mov
popa
dec
leave
and
mov
scas
xchg
jns
or
jmp
gs
test
loopne
mov
ret
inc
cmp
cmp
xor
push
sub
add
mov
les
ljmp
imul
in
dec
sub
adc
out
outsl
dec
or
lods
dec
test
inc
fildll
pusha
dec
dec
das
pop
out
dec
fsubrl
out
jl
adc
into
push
ret
pop
in
pushf
cmp
and
push
lret
clc
stos
jp
cwtl
mov
jp
fistpll
push
cli
sbb
int
cmp
pop
pusha
dec
inc
or
ss
fstpt
sub
out
cld
mov
dec
push
ret
mov
subb
test
inc
xor
fisubl
jno
in
xor
mov
popa
negb
lods
test
lret
test
mov
mov
popf
mov
mov
pop
cmp
mov
icebp
ret
inc
ljmp
mov
mov
xor
sarb
push
or
shrl
xchg
ficomps
push
in
mov
fisubl
push
push
mov
out
rcrl
xor
test
es
sub
pop
jno
data16
dec
sub
dec
test
rcrw
lret
scas
rcr
xchg
jne
ss
popf
insl
and
adc
pushf
lea
out
mov
imul
loope
sbb
fldt
leave
dec
popa
cli
int
mov
mov
clc
lret
scas
aam
jno
xchg
incl
addr16
sub
repnz
sbb
dec
outsb
popf
jecxz
data16
cmp
fdiv
mov
push
insb
jbe
ret
ss
lret
popa
push
pop
dec
sti
fadd
and
cs
loope
sub
cld
in
jmp
jo
shl
cltd
repz
xchg
add
lock
jae
repz
mov
orb
xchg
dec
add
sbb
leave
shl
popa
mov
dec
or
pop
inc
inc
retw
fwait
or
stos
hlt
outsb
add
adc
mov
mov
rorb
arpl
aas
popa
cmp
mov
or
push
push
dec
add
ret
mov
mov
int
popf
inc
adc
pop
nop
push
cltd
lods
sub
dec
push
mov
dec
push
ja
and
dec
repnz
inc
push
leave
leave
sahf
sbbl
pushf
sbb
mov
dec
fld
adc
fmuls
dec
adc
mov
push
js
mov
xor
jnp
jle
mov
stc
test
aas
and
and
adc
outsl
stos
and
mov
inc
jo
dec
shll
pop
insb
or
xor
jns
xchg
sbb
xor
jae
movsb
sub
mov
inc
loope
test
inc
jp
sub
cltd
je
dec
leave
cmc
or
les
push
js
jbe
outsb
popf
fadds
xchg
mov
push
sbb
xchg
jecxz
dec
inc
jne
mov
mov
pusha
push
jmp
in
push
push
popf
mov
and
or
xor
clc
xor
inc
imul
xor
mov
add
popa
ja
jl
lret
xchg
ret
jl
cmc
enter
lret
sub
lahf
scas
clc
mov
sub
cmp
sub
lret
test
dec
aaa
pop
ds
rcll
pop
adc
fsubr
ss
adc
push
cmpsl
and
adc
and
xor
xor
push
idivb
mov
inc
jo
pop
fcomps
adc
jg
imull
sbb
ds
or
push
pop
add
popf
stos
clc
xor
movsb
mov
sbb
xchg
imul
fnsave
cld
pushf
hlt
test
mov
bound
inc
mov
jg
pop
roll
xor
xlat
sub
adc
or
sar
out
push
sub
mov
loope
lret
pop
stos
jae
icebp
adc
xchg
fsubrl
fs
push
dec
data16
filds
nop
mov
inc
and
out
outsl
pop
sbb
jmp
xchg
mov
xchg
inc
stos
jl
sbb
dec
mov
mov
clc
imul
ret
xchg
mov
pop
fs
aaa
dec
pop
and
fld1
out
cmpsl
enter
jne
jae
ficomps
xor
adc
jmp
cwtl
xchg
sub
or
mov
addr16
insl
dec
pop
adc
mov
filds
pushl
aam
shll
out
pop
je
adc
dec
mov
orb
jnp
ds
sub
mov
inc
std
mov
jns
jnp
mov
js
or
iret
jb
enter
jmp
xor
adc
xchg
and
mov
mov
mov
cli
addl
dec
gs
push
mov
jnp
pop
bound
cmovg
roll
movsl
adc
xor
sub
int3
enter
push
xchg
xchg
bound
jbe
pop
inc
push
push
repz
jge
fs
or
pop
sbb
insb
jmp
leave
out
iret
xchg
outsl
mov
leave
flds
jp
dec
sbb
xchg
and
imul
popf
sub
xor
mov
pop
roll
xchg
push
call
les
cmp
mov
xor
and
fcom
imul
inc
adc
or
fildl
sbb
lods
dec
out
xor
mov
sbb
sub
in
cwtl
mov
mov
jno
mov
xor
cltd
push
pop
jl
xlat
mov
loopne
or
aaa
movsb
fmull
subps
pop
mov
pop
or
mov
xchg
data16
dec
and
dec
dec
add
fdecstp
cli
dec
mov
cmp
popa
mov
testb
push
or
add
lea
push
push
aam
xchg
leave
les
push
xlat
pop
pop
iret
mov
cli
add
mov
jle
lods
xchg
insb
ret
hlt
test
iret
ds
fbstp
cs
dec
fwait
adc
cmp
rcl
sahf
leave
pop
pmulhuw
int
mov
in
push
popf
outsl
in
enter
xchg
mov
push
xchg
lods
mov
cltd
vphaddwd
sub
adc
pop
pop
pop
push
inc
xchg
lret
loop
xchg
inc
cmc
cmpsb
je
pop
sbb
jne
dec
pop
loop
sub
test
les
jne
push
aam
mov
inc
cs
push
and
imul
out
xor
mov
shll
jle
mov
inc
dec
repz
push
mov
mov
in
dec
lods
xor
and
mov
popa
jne
add
adc
mov
sub
js
cmp
pushf
mov
imul
dec
aam
xor
mov
movsb
jg
stos
add
jbe
je
jae
lahf
pusha
jge
fwait
add
js
mov
pushf
imul
xchg
cmpl
push
call
jg
xor
push
mov
jp
popa
push
mov
or
sbb
adc
je
ljmp
lods
es
ss
cmp
jge
call
and
inc
sub
sbb
dec
shr
enter
sbb
inc
and
aam
mov
cmp
lahf
imul
jno
fcoms
addr16
aaa
int
in
dec
sti
and
pop
or
sub
ja
dec
das
shlb
inc
outsb
jae
fsubp
sbb
sub
loop
jl
hlt
cmp
xchg
inc
cmpl
aad
add
pop
or
loopne
mov
inc
mov
fs
push
sar
ret
shlb
jle
insl
inc
sbb
mov
add
rcrw
dec
inc
pop
mov
lea
push
sub
out
inc
xor
movsl
inc
jbe
jae
popa
sub
js
mov
loop
movsl
and
mov
dec
ds
std
mov
or
daa
push
push
in
xor
jbe
cmp
inc
inc
test
jecxz
sahf
shr
leave
lret
out
popa
cld
div
cmp
adc
rcl
sub
mov
aad
mov
inc
or
lahf
jge
or
push
arpl
jbe
pop
ret
test
addb
xor
aaa
mov
lcall
cmp
sti
popf
negb
cs
popf
adc
push
mov
je
stos
cmp
dec
sub
lds
dec
jg
call
xchg
and
jnp
add
mov
or
ljmp
push
push
mov
scas
pop
jo
stos
sub
jmp
cmp
or
fdivrl
mov
jb
or
sub
cmp
pop
test
aad
dec
movsl
inc
enter
mov
or
jne
jl
cmp
shll
in
std
movzbl
inc
xor
mov
push
das
call
adc
or
mov
sbbl
cmc
push
dec
cmpsl
rcr
sbb
dec
ljmp
cmp
rcl
adc
and
sbb
cmp
xor
insl
xchg
enter
in
cmp
sti
inc
fstpt
shll
leave
pop
shlb
mov
in
cmc
hlt
and
bound
stos
xor
cmp
jg
dec
loope
icebp
das
cmpl
mov
inc
call
popa
fbstp
add
xor
jg
dec
loope
icebp
das
cmpl
mov
inc
call
popa
fbstp
add
xor
call
iret
loope
icebp
scas
cmpl
mov
inc
call
popa
fbstp
add
xor
dec
in
icebp
das
cmpl
jno
inc
sti
gs
filds
fisttps
out
dec
int3
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
pop
cmp
imul
mov
es
inc
leave
pop
sti
jb
jo
add
xor
dec
sarb
imul
orb
cmp
lret
push
sti
inc
jmp
fwait
popa
mov
mov
fisttpl
jnp
imul
fwait
or
mov
inc
clc
jl
je
xor
ret
jnp
add
insl
pop
dec
sarb
jae
leave
loopne
icebp
data16
and
jmp
in
imul
or
insb
sub
cmp
inc
mov
int3
xchg
jg
cmp
and
icebp
je
gs
ficoms
lcall
xor
insb
sarb
mov
sub
adc
sbb
mov
inc
test
pop
or
into
xor
sbb
sub
repnz
push
jbe
pusha
jb
push
lahf
inc
and
xor
xchg
cmp
mov
cmp
pushf
inc
mov
ja
bound
fsubs
lds
imul
orb
cmp
lret
dec
sti
jnp
imul
stos
push
cmpsl
sub
cmp
aam
cld
push
into
scas
fildll
aaa
scas
sbb
fisubs
fistpl
mov
sub
jle
inc
mov
test
push
jmp
insb
jo
jge
dec
rcll
dec
mov
orl
pop
out
or
fildl
push
sti
jmp
fwait
add
xor
dec
sarb
imul
orb
cmp
lret
push
sti
jmp
fwait
add
xor
sub
ret
adc
lret
mov
sahf
int
ljmp
and
nop
out
mov
cmp
jb
es
fndisi(8087
mov
test
mov
push
or
jp
sub
adc
add
mov
mov
cmpb
sub
int3
xchg
sbb
sub
pop
inc
ja
inc
insb
loope
aaa
in
cmp
cwtl
loopne
mov
int
shll
sahf
fsubrl
stos
sarb
aas
in
adc
loopne
inc
jg
pop
sbb
ret
fadd
aam
stc
and
das
in
jle
call
fs
std
cmp
push
pop
sub
ss
mov
ja
pop
movsb
stos
mov
xor
inc
fmuls
cli
push
pop
pop
jne
push
nop
adcl
repnz
jne
roll
jnp
imul
sbb
out
mov
add
adc
adc
dec
push
sub
andb
imul
push
shlb
jge
lret
test
dec
sub
mov
rclb
pop
mov
shlb
inc
loope
mov
bound
adc
lcall
jp
movsl
shrb
push
or
mov
or
and
cld
xchg
shrb
xor
or
cmpb
adc
stos
sub
mov
jb
mov
pop
xor
loope
in
xchg
les
dec
sarl
xchg
sbb
in
push
or
and
shr
adc
xchg
out
mov
icebp
dec
pusha
push
ret
cld
enter
adc
mov
inc
sub
adc
xchg
xchg
inc
bound
fcoml
iret
xor
insl
arpl
push
push
inc
stos
fdivrs
imul
jle
imul
xchg
arpl
fisubrs
or
push
pop
pop
inc
test
bound
mov
adc
xchg
sub
push
into
cli
push
fiaddl
xorl
fdivrs
jbe
and
aas
mov
jae
test
stos
in
lret
pop
lds
add
push
jge
mov
xchg
and
fwait
inc
adc
push
ret
mov
decl
mov
sbb
add
stos
int3
icebp
shr
negl
jns
mov
push
xlat
xchg
dec
std
out
xchg
pop
jo
and
outsl
and
push
mov
fildll
data16
fcom
dec
lods
dec
loope
inc
xor
dec
xor
aam
fdiv
cmp
shlb
xchg
fwait
jmp
jp
mov
aaa
xor
jb
cmpl
pop
sbb
icebp
std
outsl
cmp
inc
mov
push
xchg
arpl
test
jbe
imul
push
push
mov
pop
shlb
xor
test
outsl
iret
pop
or
and
sub
inc
les
xchg
jp
and
inc
cs
sbb
jne
jp
xor
mov
pusha
fisubrs
jg
mov
xor
cmp
xchg
inc
gs
negb
popa
imull
dec
mov
mov
in
jne
jno
dec
out
mov
das
arpl
add
xor
outsl
in
lcall
xor
outsl
cltd
ret
xchg
push
or
sub
sbb
in
jg
roll
outsl
popa
jne
inc
and
mov
sti
sbb
in
jge
inc
sti
rorb
aad
fildl
jns
pop
pop
cmpsl
loope
push
inc
push
lretw
inc
inc
add
sbbb
leave
rcrl
fnstsw
fisubs
cmpsb
push
push
lds
pushf
sbb
push
test
fldl
pushf
mov
inc
jo
pop
rorl
push
filds
or
jmp
fnstenv
test
inc
jo
or
ret
stc
inc
sahf
enter
sub
out
hlt
inc
mov
push
insl
test
dec
jns
mov
es
sbb
sbbl
adc
jge
cmp
outsl
frstor
rep
je
jmp
inc
dec
in
dec
add
mov
pop
and
insl
stos
arpl
lret
sbb
adc
jbe
int3
nop
lods
sbb
cmpsl
add
sbb
push
dec
xrelease
pop
mov
sbb
fimull
adc
in
push
pop
inc
sub
xor
lret
mov
push
xor
push
sbb
roll
loope
adc
sarb
dec
leave
cld
cs
data16
xorb
into
mov
repz
insb
mov
or
pop
push
or
pop
mov
insb
jns
subl
inc
push
mov
rclb
les
in
sbb
int
repz
bound
adc
adc
jecxz
push
xor
lea
push
aaa
sub
rol
push
jo
ja
xor
cmp
mov
or
outsl
mov
xor
push
lds
loop
push
aam
cmc
loop
inc
or
adc
mov
gs
inc
jb
inc
pop
or
pop
pop
faddl
mulb
mov
jne
push
xlat
lea
push
jg
je
dec
and
xchg
xor
lods
add
je
aam
jo
icebp
push
aaa
hlt
jo
cmp
cli
subb
add
movsl
xor
inc
adc
add
xchg
mov
xor
sub
fisubl
fsubrl
xchg
cmp
jno
imulb
and
outsb
faddl
inc
jne
mov
ret
sub
mov
lods
and
outsb
fidivrs
jp
int
sbb
out
loopne
xor
ss
loopne
lods
lea
or
mov
or
je
cmp
push
xchg
cmp
mov
dec
push
andl
adc
cmp
pop
add
cmp
or
xor
ret
sti
jne
int
in
cs
call
fsubs
rorl
test
or
xor
popf
test
out
mov
mov
adc
push
leave
inc
jmp
pop
aad
cmp
jge
xchg
mov
scas
fidivrs
das
std
shrl
outsl
sbb
in
jo
push
mov
cli
jns
aad
es
out
daa
adc
movsb
js
mov
lcall
mov
hlt
fstpt
dec
and
in
inc
sub
into
test
rclb
adc
imul
stc
sbb
int3
outsb
adc
gs
cli
leave
rep
push
lret
ss
adc
pop
xor
sub
inc
loopne
fimull
inc
in
sbb
mov
cli
icebp
and
pop
jp
mov
mov
jg
ss
add
mull
mov
out
cmc
mov
movsl
cmp
outsb
loopne
and
inc
dec
mov
jge
jne
mov
xorl
mov
and
mov
aas
test
fisttps
jg
sub
out
int3
jae
ss
sbb
popa
loopne
jge
xchg
cmp
loop
adc
mov
pop
xchg
jle
or
cmp
nop
movsl
push
cmc
xchg
clc
xlat
sbb
mov
inc
pop
mov
jae
xor
inc
adc
jo
test
rolb
xchg
mov
cmp
lret
syscall
mov
adc
or
clc
js
lods
sub
inc
jl
nop
fisttpll
dec
mov
mov
push
pop
shl
movsl
jne
and
fdivr
xor
mov
xor
ja
mov
fwait
xor
and
jmp
enter
out
lods
ljmp
and
sti
mov
clc
inc
and
cmp
or
outsl
push
hlt
mov
addr16
orb
push
jnp
xchg
outsb
ror
cmp
aas
sbb
std
push
cmp
or
and
pop
sub
or
sbb
aaa
shll
aas
cmc
dec
push
ret
arpl
lret
stc
mov
scas
bound
push
mov
es
shl
sub
imul
js
lret
sub
add
or
arpl
mov
jo
or
push
push
inc
sub
arpl
sub
cmc
jecxz
shll
xchg
push
add
pop
dec
dec
xlat
orb
pop
cmp
adc
jmp
lret
bound
and
jp
mov
mov
das
push
adc
jae
mov
cli
pusha
push
lret
inc
inc
mov
ja
sub
fbstp
fmul
mov
cmp
iret
test
loop
dec
xor
lods
fs
dec
push
push
inc
xor
inc
pop
data16
shr
cmp
fldl
add
mov
and
fs
lcall
nop
or
and
and
jno
push
jne
dec
push
lcall
loopne
pop
lea
pop
nop
loopne
inc
push
xor
push
mov
outsl
test
lret
xor
clc
push
mov
icebp
popl
jge
cmp
pop
pushf
or
and
insb
js
jbe
mov
dec
cmp
lret
repnz
xor
mov
push
inc
mov
pop
mov
inc
or
jnp
dec
stos
icebp
push
bnd
dec
dec
jne
scas
sbb
ret
ror
mov
pop
cmp
decl
jg
adc
lahf
mov
lret
adc
rorl
mov
mov
pop
push
imul
pop
xlat
push
loop
and
mov
mov
inc
inc
lock
addr16
xchg
or
and
dec
insb
push
cmpsb
inc
hlt
ja
or
jns
out
dec
movb
inc
ljmp
dec
rcll
lret
fcoms
push
out
xor
pop
mov
adc
jo
pop
mov
and
inc
mov
in
jae
mov
popl
jle
jg
les
or
sbb
jne
mov
mov
jnp
dec
jmp
sbb
bound
dec
pop
push
xlat
lea
or
mov
jl
lods
ljmp
dec
jmp
mov
inc
push
inc
cmp
lret
scas
roll
push
add
pop
aad
sbb
bound
inc
inc
hlt
cli
xchg
and
fdivs
mov
push
xchg
or
xchg
hlt
movsl
xlat
fwait
mov
repnz
inc
ret
add
mul
or
xchg
xlat
mov
movsb
xor
loope
mov
add
dec
hlt
adc
xor
jge
mov
dec
ret
cld
js
and
adc
int3
adc
into
push
js
cmp
sub
out
dec
fsubl
add
ja
loope
add
imul
loop
mov
insb
dec
xor
inc
xchg
jle
mov
int3
inc
push
cwtl
sarb
lahf
mov
std
je
mov
sbb
pop
mov
cmp
fucomi
imul
mov
jle
push
in
rcl
jb
pop
call
das
test
push
adc
mov
mov
sub
movsl
mov
gs
sbb
ret
sbb
inc
cmpsb
lcall
inc
dec
mov
mov
lods
test
xchg
leave
imul
or
cmp
xchg
ficomps
xchg
push
es
push
mov
adc
add
dec
scas
dec
out
fdivr
cwtl
adcl
mov
jg
mov
ret
push
inc
shl
lods
sbb
mov
shr
push
bound
cmpsl
mov
push
shlb
cs
cmc
push
mov
cld
adc
jp
aas
xor
push
test
pop
and
sahf
jp
inc
sbb
mov
fwait
shl
push
sbb
inc
jmp
mov
pop
cmp
rclb
dec
jno
xchg
loope
or
inc
cmc
cmpsl
gs
mov
jno
xlat
shlb
out
cwtl
out
pusha
cmp
divb
lds
cld
push
popf
sub
loopne
and
sbb
mov
dec
mov
sub
pusha
int
mov
iret
mov
mov
mov
jmp
push
ss
xchg
out
mov
pop
mov
hlt
xor
push
pop
ret
fld
cmpsl
es
clc
icebp
mov
or
testl
fstp
and
xchg
rcll
mov
out
inc
cmp
push
xchg
ret
or
add
ret
inc
aaa
lahf
fildll
push
mov
xchg
mov
fistpll
push
and
cwtl
test
push
push
addl
xchg
fisttpll
addb
cmp
rorb
add
mov
add
and
subl
jle
jnp
fdivl
sbbl
jmp
icebp
shlb
shlb
mov
pushl
adc
sbb
xchg
lret
mov
loopne
push
jno
or
fwait
in
adc
scas
cmp
hlt
scas
mov
pop
mov
jnp
inc
in
idivb
stos
inc
repnz
add
test
add
test
adc
sahf
and
pop
cmp
and
mov
push
into
rolb
in
popa
mov
add
adc
lret
cs
imul
test
xchg
fwait
scas
ja
mov
fcompl
clc
or
pop
loopne
int3
jns
jmp
sbb
pop
dec
jbe
pushl
xchg
pop
push
jne
test
aaa
fadds
mov
arpl
mov
sti
jle
push
cmp
es
inc
sbb
orb
xchg
xor
test
sbb
je
popa
js
cli
aam
ds
ret
shl
hlt
mov
insl
insl
mov
cmp
xchg
mov
rolb
or
stos
cmp
adc
pop
jne
or
mov
inc
jmp
push
shrb
out
insl
add
in
leave
xchg
mov
xor
add
jo
addr16
xchg
jo
mov
mov
mov
cmp
outsl
push
jo
movsl
nop
push
push
cwtl
lret
cmp
hlt
and
mov
in
leave
xor
pop
cmp
xchg
mov
fwait
mov
mov
sub
aam
sbb
fdivr
lea
repnz
sbb
push
in
xchg
pop
adc
jg
flds
push
in
out
sbbb
call
lret
cmc
push
and
lea
mov
cmp
push
imul
ret
lds
daa
stos
mov
mov
rclb
rcr
adc
lock
lock
pushf
mov
pushf
cmp
xchg
pop
imull
adc
pop
data16
lods
push
call
out
lahf
insb
jmp
add
lock
lds
adc
in
xor
in
movsl
mov
cmp
out
cltd
push
arpl
xlat
xchg
pop
add
adc
loopne
mov
bnd
mov
xor
shl
shl
in
jge
and
popa
jg
xchg
loop
sub
and
add
pop
lret
pop
dec
dec
cs
mov
jle
scas
mov
push
fmulp
cmpsl
js
dec
sub
add
in
pop
mov
gs
adc
add
cmp
or
fsubrs
aam
ja
repnz
dec
aaa
inc
test
jbe
inc
mov
test
jnp
cmp
or
or
add
mov
xor
sbb
ret
pop
scas
or
insb
shl
outsl
jo
nop
mov
mov
lret
add
aad
push
lret
scas
cld
mov
adc
imul
fistl
in
jno
cmp
jnp
fnsetpm(287
cs
sbb
sub
lahf
mov
mov
lods
inc
sbb
enter
je
lods
cmp
mov
in
xchg
dec
shll
loopne
push
pop
cmp
shr
imul
imul
arpl
es
mov
inc
mov
es
mov
sub
lahf
or
mov
subb
stc
popf
fnstcw
pushl
out
mov
outsl
add
je
cmpsl
cwtl
pop
or
jge
xchg
std
testb
je
incb
xchg
lods
sbb
mov
add
test
mov
jge
loopne
fld1
push
mov
fistl
sub
rcll
daa
fdivr
test
mov
cmp
cltd
rcrl
pop
cmp
data16
pop
push
pop
pop
pop
inc
fistpl
pop
loopne
jns
rcrb
arpl
fcomps
js
ret
mov
pop
or
push
or
lods
and
das
push
inc
push
fbld
ds
cmp
scas
jne
xor
imul
mov
sbb
push
cmp
pop
cmp
pop
nop
mov
lock
int3
adc
inc
sub
mov
xchg
loopne
cmp
sub
mov
dec
cmp
or
mov
sub
cmpsl
pop
daa
and
movsb
add
dec
je
inc
pop
and
loop
leave
and
dec
lods
outsb
ja
cs
mov
sub
rcrl
dec
int3
cmp
push
enter
pushf
lcall
test
pop
outsl
lods
mov
cmp
gs
pop
inc
int3
xchg
push
sbb
cmp
ss
jle
or
mov
cmp
cmp
fnstcw
inc
lahf
int3
and
lock
in
mov
bound
addl
cmpsb
shll
xor
flds
int
loopne
mov
aad
js
sbb
lea
lahf
inc
addr16
adc
test
xchg
fmull
jb
pop
repnz
xor
popa
icebp
inc
addb
aas
xchg
or
xor
pop
sub
xchg
mov
lret
gs
cwtl
pushf
sub
cmp
dec
xchg
aaa
pushf
sub
add
rcrl
mov
leave
flds
mov
and
mov
mov
dec
fcmovb
cwtl
inc
in
jge
jb
cmp
ret
test
pop
insb
inc
and
fldcw
ficoms
fs
cmp
sti
outsl
sub
adc
mov
jne
or
jge
inc
push
imul
imul
mov
adc
or
and
sub
cmpsl
push
cwtl
sarb
push
dec
add
add
lds
decb
lds
cmpsb
rorb
adc
inc
inc
inc
addr16
cs
sbb
inc
in
out
pop
mov
xorl
pop
in
sbb
dec
or
and
inc
in
sbb
int
imul
xchg
lock
cmc
xchg
jbe
loope
aas
pusha
lods
jns
add
and
mov
loopne
jle
push
or
lret
call
xor
dec
popa
mov
xor
adc
cmp
outsl
testb
xor
fucomip
ljmp
sbb
xor
fucomi
and
xchg
push
outsb
xchg
inc
jmp
xchg
cmp
xchg
mov
test
push
test
lahf
inc
pop
mov
rcrb
xor
addr16
dec
mov
cmc
xor
cli
xchg
fcmovnb
inc
rorb
stc
pop
or
push
dec
jo
dec
inc
mov
pop
mov
lcall
xchg
push
aam
mov
mov
imul
iret
add
lret
ljmp
jecxz
cltd
ja
pop
sbb
in
dec
and
out
inc
mulb
loope
sub
in
mov
mov
jecxz
rclb
jno
inc
mov
push
dec
loop
jne
jae
out
roll
or
sbb
sahf
enter
cmp
push
sbb
in
insl
cmp
nop
push
inc
push
lds
fcompl
loop
mov
arpl
movsb
push
cli
pop
xchg
sub
xchg
loop
push
sub
or
jle
in
dec
lods
dec
lret
fsub
pop
jnp
bound
leave
jge
jno
adc
ljmp
and
jle
and
dec
inc
mov
dec
adc
mov
fistpll
cmp
cwtl
xor
adc
push
les
cmpb
fistpll
negb
cmp
fistl
mov
xor
ficomps
inc
andl
add
xlat
pop
or
stos
push
mov
sbb
das
pause
js
ficoms
mov
out
sub
dec
cmp
jl
jae
test
stc
cmc
push
push
ret
mov
enter
lea
cmp
sbb
jl
adc
xchg
rol
mov
cltd
sub
xchg
xor
lret
sbb
dec
daa
iret
cmp
dec
pop
xchg
lods
xchg
inc
js
js
xor
enter
and
pop
or
jecxz
inc
cmpsb
inc
push
mov
xlat
sub
test
pushf
mov
cmpsl
sub
and
or
in
xlat
leave
pop
sub
mov
cld
xchg
mov
int3
xorb
mov
sbb
popa
sbb
cmpsb
ljmp
pop
sbb
cmp
in
mov
das
sar
or
test
dec
mov
shlb
mov
push
shr
cmpl
wbinvd
mull
adc
imul
xor
add
sub
sarl
mov
mov
jge
shl
xchg
loop
xchg
sbb
lea
sub
in
push
movsb
push
rorb
add
sbb
or
popf
cmp
in
sub
xor
fildll
adc
push
dec
lods
and
cli
and
cmpsl
jp
pop
jmp
fwait
push
mov
sub
aaa
fsubs
addl
pusha
scas
lahf
sbb
insl
mov
sbb
xchg
cmp
pop
stos
add
pop
adc
lea
mov
or
je
dec
or
mov
ljmp
js
and
fmul
adc
push
int
cmp
lds
out
fucomp
mov
push
dec
mov
das
pop
xchg
cmp
mov
mov
aaa
lret
flds
push
enter
xchg
in
dec
pushf
and
jmp
outsb
xor
cmp
cld
adc
repz
push
pop
cmp
in
xchg
add
test
gs
jbe
lock
outsb
lods
add
subl
push
mov
ljmp
stc
jl
sbb
pop
or
adc
mov
out
dec
or
bound
negl
add
jmp
notl
pop
push
and
aad
daa
and
cmp
pop
and
or
and
add
dec
ret
dec
mov
inc
inc
or
repnz
filds
pushf
push
outsl
add
jmp
mov
jp
and
dec
pop
xor
inc
pop
and
xor
js
loop
aas
stos
or
mov
jne
xor
fiaddl
cltd
mov
lret
lret
jb
pop
jb
pusha
inc
xchg
lcall
cmc
sahf
xchg
add
pop
lret
cmp
aas
pop
mov
and
dec
mov
or
add
fstps
test
mov
loop
outsb
flds
xchg
outsl
out
fisttps
add
cmp
cmc
sbb
scas
loopne
jecxz
mov
outsb
mov
sub
or
jle
lea
pop
mov
jmp
dec
pop
loope
xchg
movsl
jno
inc
or
or
fildl
push
sti
jmp
fwait
add
xor
dec
sarb
imul
orb
cmp
lret
push
sti
jmp
fwait
add
xor
dec
sarb
imul
orb
cmp
lret
push
sti
ljmp
and
sarb
imul
orb
mov
inc
xor
push
jmp
in
mov
in
inc
fstl
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
push
push
push
push
movl
movl
movb
call
andl
andl
push
mov
push
mov
movl
movb
movl
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
mov
movb
movb
call
mov
lea
push
movl
call
pop
pop
leave
ret
mov
jecxz
mov
lock
xchg
or
push
mov
adc
cs
adc
pop
xor
jle
mov
sahf
ret
scas
jecxz
xchg
into
sbb
out
mov
push
pop
das
mov
adc
add
outsb
and
mov
sahf
jmp
sti
mov
stos
out
mov
push
push
dec
cmp
cmp
dec
add
dec
or
std
fistpl
in
pop
sti
test
mov
jne
ljmp
cmp
dec
mov
repz
push
inc
pushw
lcall
sub
scas
das
pop
sahf
ret
pop
mov
addl
push
push
mov
shr
inc
bound
add
mov
mov
xchg
ficomps
mov
loope
call
push
mov
xor
popa
stos
push
xchg
mov
inc
inc
xor
icebp
mov
ds
push
fistpl
mov
orl
ja
push
mov
rcl
adc
shrl
adcl
scas
hlt
mov
mov
mov
push
imul
or
pop
xor
cmp
out
xchg
testl
inc
pop
add
dec
jg
sbb
inc
sbb
loop
repnz
out
fucom
in
fistpll
inc
insb
ss
push
insb
jbe
jo
inc
or
sub
lret
jecxz
jmp
sbb
out
mov
push
jae
arpl
adc
pop
xor
jle
mov
sahf
repz
jecxz
xchg
into
sbb
out
mov
push
jae
arpl
adc
pop
xor
jle
mov
mov
rorl
je
scas
or
adc
mov
dec
insl
rorl
loope
xor
jg
lret
ljmp
add
fdivl
mov
shll
fnstsw
inc
mov
pop
mov
sbb
shlb
push
inc
stos
enter
adc
sub
cmp
fs
jno
adc
xchg
popf
mov
fst
add
cmp
adc
insl
leave
int3
push
into
and
nop
fcomip
lock
jne
int
pop
fdivrl
adc
insb
stos
cmp
negl
mov
cmc
fstps
mov
in
mov
cli
rolb
mov
pop
mov
push
push
jle
sub
xor
adc
pushf
inc
js
mov
out
jns
outsl
push
add
mov
xor
cmp
test
ljmp
dec
test
and
je
xchg
mov
mov
daa
sbb
push
mov
lcall
sar
mov
dec
daa
out
aad
daa
push
xchg
cmpsl
cwtl
sub
inc
addr16
clc
cmp
xchg
out
sbb
inc
mov
hlt
fnstsw
mov
addr16
int3
pushf
stos
cmp
cs
adc
xor
inc
inc
ja
inc
adc
push
stos
pop
hlt
mov
movsb
xchg
push
jl
or
mov
test
dec
inc
jb
pop
pop
mov
insb
pop
xor
je
pop
dec
leave
and
xchg
sbb
scas
je
add
loope
fcomp
mov
insb
or
xchg
pusha
adc
shlb
mov
mov
aas
std
sahf
jae
mov
xor
sahf
imul
jl
decl
loopne
subb
add
inc
pop
daa
xor
gs
cmp
les
xchg
movl
sbb
test
mov
mov
and
mov
sarl
sti
adcb
xor
mov
in
jge
or
cmp
ret
or
mov
cmp
lret
fld
mov
cmp
int
enter
sub
sbb
repnz
rolb
jb
testl
lods
mov
and
arpl
lock
xor
mov
je
mov
fnsave
or
int3
test
mov
sub
and
loope
out
js
jecxz
xor
xchg
add
movl
in
mov
scas
nop
aas
inc
sbb
jge
imul
lret
orl
mov
jbe
xchg
leave
in
movsb
cmp
out
cwtl
nop
cmpsl
push
loopne
insl
and
mov
pop
jecxz
or
lds
cmc
leave
aaa
jge
sti
pop
xor
js
dec
ss
pop
xchg
cwtd
add
lock
xorb
add
xor
jmp
fbstp
inc
mov
or
iret
imul
rep
jecxz
push
xlat
gs
test
dec
cmpb
jmp
pop
mov
hlt
out
ret
push
jno
add
ret
pop
inc
fimull
add
mov
loopne
pop
inc
adc
push
aam
das
rolb
imul
int
lea
xor
dec
xchg
cwtl
pop
in
cmp
and
fs
sbb
mov
es
and
jmp
pop
xor
xchg
inc
xchg
pop
cwtl
cmpb
nop
inc
pop
and
out
jae
cmc
repz
inc
pusha
inc
or
jns
pop
adcb
lahf
sub
loopne
mov
out
xor
int
add
lret
dec
adc
adc
mov
push
out
frstor
fsubs
mov
push
adc
dec
xchg
ja
push
push
outsb
out
test
or
scas
daa
jl
xchg
mov
mov
push
cmp
pop
aad
inc
inc
cs
test
aas
inc
xchg
xor
mov
icebp
lods
outsb
pop
mov
pop
add
mov
cld
jecxz
fidivs
mov
adc
test
inc
rorl
das
int3
dec
adc
call
in
fstl
insb
sbb
pusha
gs
mov
lock
popf
xor
insb
and
dec
bnd
xlat
ficoms
inc
jmp
push
loop
fnstsw
jns
mov
ss
popa
test
jb
pusha
xchg
jmp
pop
mov
sarl
jne
and
imul
and
push
loope
cld
mov
repz
sub
push
iret
xor
jbe
nop
xchg
gs
sub
push
repnz
shlb
lahf
and
in
cmpsl
cmp
push
jo
cltd
ss
das
imul
imul
daa
lahf
fidivrl
lock
into
jle
out
fldl
int
sar
in
shrl
adc
hlt
mov
jle
arpl
ret
ja
dec
aad
bound
pop
and
xchg
cmp
pop
ds
fnstcw
pop
sbbl
imul
jmp
addl
pop
movb
popa
fsub
dec
lret
mov
mov
out
push
adc
test
js
loope
icebp
lods
mov
push
sub
imul
or
jle
jmp
lock
jg
mov
sub
lea
mov
aas
adc
scas
sbb
jg
icebp
fistpl
fstl
jnp
lahf
notb
add
or
push
jb
cmpsb
fbld
pop
jl
in
sub
push
push
js
cmp
cmpsl
xchg
clc
scas
rep
scas
sbb
sub
call
sahf
push
xchg
fwait
lea
sbb
fistl
mov
arpl
cli
mov
mov
inc
sbb
push
imul
lds
std
inc
in
mov
int
ja
mov
loope
mull
xchg
adc
mov
mov
movswl
mov
and
dec
lret
lea
fs
aad
test
sbb
xor
outsb
or
mov
out
xor
adc
fsubrl
sub
aaa
and
push
insb
pop
adc
xor
lahf
lock
jmp
cmp
and
inc
insb
repnz
jge
mov
pop
fists
jge
subl
test
int
aad
xchg
mov
sysret
dec
cs
pusha
ds
cmpsb
bound
cltd
sub
cmpsl
mov
push
xchg
filds
push
xchg
incb
xchg
push
sub
adc
lcall
fidivrs
loop
push
jnp
into
cli
jnp
cld
pop
test
dec
bound
cmc
int
je
int
nop
data16
or
bound
add
sbb
push
dec
mov
lods
adc
mov
cmp
mov
mov
ffreep
je
pop
lods
inc
mov
arpl
xchg
xchg
int
push
cmp
or
mov
xor
cld
or
and
aad
xor
mov
and
repnz
shrl
dec
leave
iret
add
mov
mov
xchg
add
das
push
fstpt
lods
jecxz
das
mov
xor
and
lret
in
aad
jl
arpl
add
cmp
cmp
add
iret
pop
mov
aaa
dec
adc
sub
inc
sub
jl
idiv
les
fld
adc
add
lret
iret
frstor
mov
mov
in
add
adc
test
mov
cmpsl
popf
insl
movsl
fdivrl
inc
cwtl
mov
sbb
xchg
jecxz
inc
xchg
jae
mov
mov
dec
mov
fisttpl
aad
addb
xor
lds
inc
je
hlt
loop
mov
aas
stos
mov
out
pop
cmp
stc
pop
xchg
mov
mov
dec
fincstp
mov
mov
cmp
push
sbb
mov
aas
loope
and
nop
clc
mov
add
cmpsl
imul
mov
out
popa
rdmsr
movl
sbb
lock
addr16
call
test
ss
adc
mov
frstor
fldcw
ret
jmp
aam
pop
mov
cmovle
jbe
or
call
rol
fmuls
lret
push
push
inc
dec
nop
pushl
pushf
lods
test
mov
mov
xor
jmp
call
inc
xchg
add
pop
jg
jle
sahf
sarb
mov
and
mov
jbe
shr
shl
sbb
stc
dec
mov
inc
push
lods
push
cwtl
lret
outsb
insb
push
and
jnp
enter
testb
fdivl
jecxz
testb
idiv
lock
pop
fmulp
and
sub
je
aad
cmp
repnz
xor
add
dec
stc
cli
mov
es
push
rep
daa
pop
gs
inc
mov
stos
in
out
insl
add
jno
ss
test
enter
push
mov
jge
into
adc
out
pop
aam
gs
mov
add
test
lock
adc
pushf
dec
and
mov
mov
inc
pop
mov
leave
mov
std
pop
in
test
mov
push
jmp
bnd
mov
rcl
fistpl
and
or
movsl
bound
pop
xlat
mov
fistpll
pop
pop
inc
into
cwtl
fs
and
add
pop
fistpll
dec
iret
pop
or
jb
gs
dec
jbe
mov
into
out
inc
dec
xchg
cltd
ljmp
lret
jecxz
adc
loope
sub
clc
daa
add
and
jno
out
or
shlb
pushf
addl
andb
int3
or
fwait
mov
psubd
mov
jp
aad
push
adc
dec
popf
outsl
mov
lahf
shlb
jecxz
outsl
aam
pop
aas
inc
sbb
xchg
aam
inc
pop
insb
cltd
das
jbe
sbb
and
push
mov
pop
call
mov
pop
jns
imulb
xor
idivl
lods
jle
cmp
or
outsb
adc
cmc
sub
jp
add
lahf
push
imul
dec
lods
aaa
inc
int
mov
call
es
pop
les
cli
push
push
dec
test
and
inc
jo
loop
and
xchg
xor
cmpb
jge
xchg
or
dec
mov
add
dec
cmp
add
and
rcll
ja
imul
int3
ret
sbb
inc
and
xlat
and
js
and
out
xchg
add
rorl
lret
sbbl
lcall
fwait
cmp
xor
sbb
sbb
ljmp
xchg
sub
test
out
sbb
out
jns
movsl
cmp
adc
sub
lret
cmp
out
stos
xor
mov
movsl
jae
sub
push
push
sbb
mov
pop
inc
testb
pop
bound
fadds
jge
adc
and
pusha
xorl
loopne
mov
ljmp
add
lahf
scas
faddp
je
sti
inc
fistpl
jns
cld
inc
rorb
ds
cmp
lret
gs
mov
arpl
pop
daa
imul
push
iret
sti
xchg
dec
or
dec
leave
ret
inc
scas
les
cmc
lds
js
js
inc
adc
lods
mov
adc
pop
jecxz
rcrb
mov
mov
mov
test
pop
xchg
mov
pop
dec
lea
mov
jae
mov
adc
jno
and
and
push
mov
lcall
je
jns
and
lret
sbb
pop
movsl
inc
mov
xor
sub
push
pop
in
test
mov
xchg
add
jnp
xlat
cmp
pop
mov
shlb
sub
fisttpll
pop
jmp
inc
and
outsl
bound
mov
popa
leave
add
movsl
arpl
lds
fwait
dec
aas
pop
adcl
add
adc
fidivrl
and
ja
popa
out
sub
inc
in
adc
adc
int3
daa
pop
or
pop
mov
ret
sahf
rcll
xor
sbb
sahf
pop
jle
fsubrp
push
and
xor
mov
rorl
cmp
lcall
ds
idivl
add
cli
add
mov
popa
xchg
pushf
add
xchg
sbbl
and
inc
enter
divb
mov
lea
rorl
jns
mov
cs
push
push
lds
mov
mov
pop
popl
xchg
or
xlat
inc
mov
add
enter
cli
out
leave
mul
jl
xchg
lcall
movsl
and
leave
or
inc
repnz
pusha
fsubl
sub
mov
xchg
cmc
push
cmp
scas
xor
leave
adc
and
or
xchg
mov
xchg
test
shl
mov
pop
mov
ret
jecxz
jbe
dec
add
shrl
ret
mov
pusha
pop
aad
fmull
fcompl
mov
scas
fisubs
into
xchg
push
fimull
icebp
jmp
cmpb
push
testl
push
inc
push
fcomi
in
xorl
jg
cmp
gs
ret
ljmp
adc
xor
jae
dec
dec
dec
mov
rorl
mulb
in
mov
and
cmpsb
xchg
mov
cmp
dec
loope
repnz
push
dec
xor
out
daa
xchg
or
jbe
sub
mov
pusha
out
inc
fs
and
xchg
ss
sub
pop
js
mov
ret
inc
ficomps
jmp
cltd
movsl
sub
in
ficompl
outsb
sub
int
addb
lret
mov
mov
lods
in
pop
mov
inc
sub
push
loop
loope
and
dec
test
push
in
xor
stc
subb
imul
sahf
stos
or
stc
test
flds
lods
add
sahf
outsl
orb
push
data16
jle
add
mov
and
icebp
scas
fmuls
imul
mov
insl
pop
and
mov
mov
jle
add
dec
sahf
pop
jecxz
sub
adc
sub
sub
or
fsubrl
and
sub
int3
and
arpl
sub
insl
fsubp
or
das
push
js
sbb
sbb
mov
xorl
xor
inc
xchg
jmp
mov
jg
insl
clc
inc
cmp
add
push
loope
lock
add
cmp
cwtl
pushf
add
mov
jge
and
repnz
jb
push
jecxz
enter
js
pushf
ficoms
loopne
adc
fsubrl
dec
inc
sbb
sbb
shrb
js
shl
loop
pop
test
fisttps
or
je
cmpb
gs
xchg
cli
rcr
lea
inc
aas
dec
aam
push
cmp
mov
cmp
fwait
loopne
stos
or
daa
inc
lock
ds
jo
and
xchg
mov
jno
and
xchg
adc
ficompl
push
dec
in
jns
repz
dec
filds
movsb
inc
inc
sub
mov
mov
sbb
inc
out
and
sahf
mov
or
mov
cmp
pop
add
push
and
aam
pusha
rorl
mov
add
or
cld
gs
in
mov
stos
ds
or
push
mov
test
xchg
cmp
mov
mov
xchg
lret
dec
mov
mov
mov
std
cmp
xchg
mov
inc
pop
dec
mov
push
out
adc
cli
xlat
xor
jae
mov
pop
inc
xor
ljmp
and
mov
pop
cmp
aam
icebp
mov
sqrtps
xchg
jecxz
push
jno
int
mov
mov
jo
mov
sub
imul
mov
xchg
mov
enter
xor
xor
pushf
das
icebp
into
push
xchg
ss
mov
xchg
call
mov
pop
or
out
mov
mov
out
jns
xchg
cmp
cmp
arpl
xchg
test
popf
cmpb
out
push
ljmp
aaa
mov
sti
or
mov
jno
test
xor
inc
mov
xchg
push
imul
cld
test
stc
push
es
cltd
cmpsl
adc
gs
xorl
jae
mov
cmp
cmp
cmp
imul
clc
fstps
ds
icebp
test
jns
imul
add
xchg
int
mov
dec
xchg
out
lcall
mov
ljmp
fs
mov
jecxz
scas
imul
sbb
and
in
icebp
dec
dec
enter
xchg
mov
lods
popa
cmp
sbb
cmpsb
or
jo
cld
push
and
notl
push
push
cltd
popa
lcall
mov
dec
cmp
push
or
ds
lods
push
push
adc
daa
and
inc
int3
out
test
or
pop
mov
xor
test
sbb
dec
pop
out
and
arpl
sahf
sahf
subb
sbb
dec
sub
fmull
cld
xor
mov
cmp
jbe
dec
adc
loopne
mov
rcl
fwait
iret
pop
movsb
cmc
push
fst
aad
imul
and
addr16
push
sub
xlat
stos
repz
add
mov
adc
movsb
mov
jno
inc
decb
mov
and
and
pop
scas
sub
sbbl
int3
jmp
mov
xchg
mov
hlt
mov
movsb
shl
out
in
aad
jb
insl
jg
sub
pop
mov
pop
fistpll
jbe
rorb
sub
ljmp
fidivrl
mov
jnp
cmpsl
movsl
ja
das
pop
pop
out
cli
dec
test
lret
mov
outsb
or
dec
hlt
mov
sbb
dec
mov
rclb
dec
xlat
cmc
aad
mov
dec
inc
int
mov
dec
xlat
movb
push
mov
insb
cmp
sbb
cld
rcl
xor
push
add
add
rcll
or
cmp
jae
jno
lahf
lds
inc
xchg
cwtl
xor
or
dec
push
xchg
ret
cs
jl
stos
adc
popl
test
lods
inc
jno
xor
fs
imull
xlat
xorb
add
push
inc
cmc
sub
jno
jg
int3
call
mov
inc
repz
cmp
lods
pop
or
in
movsl
mov
lods
add
inc
mov
fdivl
inc
orb
inc
out
jo
adc
mov
fisubrl
mov
das
cmp
les
push
fsts
push
jne
mov
addl
out
sbbb
xor
or
mov
push
fsubrs
loopne
push
xchg
insl
pop
fwait
sarb
xor
rcll
insb
enter
popa
lret
stc
fiadds
adc
push
adc
inc
test
ds
aam
js
lds
inc
add
sub
pusha
ljmp
sbb
push
or
shll
in
out
sti
mov
sbb
pusha
push
sbb
mov
add
aaa
daa
addb
xchg
in
lret
jge
jp
arpl
jp
mov
and
cld
or
cmc
jb
in
adc
mov
cmc
adc
pop
subl
jo
js
add
pusha
adc
cs
lea
pop
es
inc
repnz
pop
scas
lea
imul
popf
fwait
sub
sbb
ror
mov
frstor
addr16
lea
aad
sub
outsb
jl
stos
cmc
dec
imul
mov
mov
jnp
test
or
inc
es
andl
imul
push
sarl
cltd
imul
push
fwait
je
in
inc
sub
cmp
in
mov
jle
dec
jl
cmpsl
sti
mov
push
xchg
fidivl
or
mov
mov
xchg
pop
scas
test
push
inc
cmp
sarb
cmp
add
mov
adc
lock
rcrl
pop
pop
fildll
mov
jl
pushf
jb
shr
adc
and
repnz
adc
sti
lret
dec
stos
lock
fldcw
cmp
pop
add
aaa
pop
inc
invd
add
jb
jno
mov
out
push
mov
mov
in
and
pop
adc
ss
or
loope
xor
pop
jnp
call
push
push
or
dec
nop
ss
jo
cmp
dec
test
xor
scas
es
movsl
adc
test
shll
mov
mov
jge
dec
and
lods
imull
pop
xor
mov
jmp
jne
add
lods
mov
inc
mov
les
cmp
fs
push
xchg
sub
pop
mov
pop
or
jecxz
inc
int3
pushf
sbb
stos
lret
test
mov
mov
push
or
mov
fsubs
aaa
jbe
mulb
sarb
fwait
loop
and
xor
inc
cmp
and
or
test
loopne
fsub
into
imul
cltd
xchg
into
xor
add
sub
and
add
cmp
rcrl
cmp
pop
out
out
xchg
pushf
int
push
or
and
xchg
mov
insb
daa
sub
mov
insb
jecxz
sbb
icebp
push
add
mov
push
push
push
test
cmp
add
repz
ret
ror
aas
out
ss
fisubl
fidivrl
mov
adc
scas
lret
inc
jecxz
lcall
ret
mov
inc
xchg
sub
mov
pop
lods
iret
lods
clc
add
test
sahf
arpl
mov
cmp
xor
movsl
jno
push
pop
rclb
shlb
jl
add
adc
dec
in
inc
mov
enter
repnz
mov
xor
les
addl
aam
bound
jbe
cmp
ljmp
xlat
popa
cmp
mov
fwait
jb
aam
push
test
loop
jp
dec
pop
add
and
roll
xchg
jbe
es
ficompl
xor
pop
jo
xlat
pop
ljmp
jno
cwtl
jo
loopne
adc
mov
arpl
adc
pop
mov
adc
mov
dec
add
sub
mov
movsl
out
push
jmp
test
repz
dec
dec
xchg
hlt
daa
pop
dec
fidivl
in
fs
and
test
cmp
push
jae
inc
pop
fcmovnbe
mov
leave
movsl
ficomps
movsb
adc
jno
lcall
out
mov
negb
mov
sti
mov
sahf
pop
scas
jecxz
xchg
into
sbb
out
mov
push
jae
arpl
adc
pop
xor
jle
mov
sahf
repz
jecxz
xchg
into
sbb
out
mov
push
jae
arpl
adc
pop
xor
jle
mov
sahf
repz
jecxz
xchg
into
sbb
out
mov
push
ja
arpl
adc
pop
xor
jle
mov
sahf
lds
sbb
out
and
lods
push
mov
dec
fs
mov
int3
int3
int3
int3
int3
jmp
dec
dec
pop
addl
jnp
insl
sbb
fmul
leave
fnstsw
lea
jge
dec
dec
pop
cmp
or
mov
lods
test
popf
jns
imul
sub
or
mov
call
out
or
and
ljmp
js
ljmp
push
ss
test
pop
sub
in
sub
or
xchg
or
add
inc
push
inc
fcoms
xchg
fnsave
cld
xor
sub
cmp
dec
jl
stc
adc
and
lods
imul
js
jns
movsl
pop
cmp
loop
ss
xchg
fdivs
and
mov
adc
pop
mov
sbb
or
mov
leave
sbb
sbb
jbe
cmp
int3
movsb
fstps
mov
js
std
push
cwtl
aas
std
lods
fldl
mov
mov
dec
dec
pop
cmp
or
fxch
leave
fnstsw
lea
jge
and
xor
inc
dec
cmp
xchg
mov
mov
lods
fwait
int
in
hlt
std
fsubl
insl
sub
dec
add
pop
gs
pop
sbb
sbb
mov
into
fcmovbe
leave
call
inc
cmp
sub
stc
in
jmp
fnstsw
lea
jge
dec
dec
pop
cmp
or
fxch
leave
fnstsw
lea
xor
lcall
sbb
or
std
and
inc
mov
jae
mov
outsl
push
sub
std
jb
daa
mov
push
mov
rcr
cmp
enter
dec
pop
ja
mov
loope
mov
rcll
test
jge
pop
sbb
lret
adc
add
xchg
faddp
cmp
xor
fucompp
add
mov
mov
test
pop
push
jmp
setb
es
mov
dec
jnp
data16
sti
fcmovu
jp
and
mov
add
push
aaa
inc
out
movsb
cs
cmp
add
js
into
jns
shrb
add
aam
jmp
jp
popf
lcall
je
fwait
and
dec
mov
xchg
out
aaa
nop
stos
aas
inc
imulb
jno
push
fsubrs
shrb
in
mov
jbe
mov
lds
push
mov
xchg
ds
fistpll
pop
out
test
xchg
loopne
xor
xchg
xchg
icebp
fsubrs
dec
mov
add
testl
inc
pop
xor
and
loope
pop
fildl
jmp
cmpsl
sub
fwait
xor
pop
jg
jmp
mov
mov
mov
jl
cmp
cmp
push
cmc
pushf
cmpsl
push
call
int
scas
mov
jno
xchg
mov
xor
push
test
cld
adc
adc
rclb
push
xor
dec
push
push
rcll
sti
lods
aas
jno
adc
add
ret
or
ss
lock
mov
test
ret
loope
cmp
mov
stos
mov
cmp
je
push
cmc
mov
jae
in
push
mov
and
add
rcl
fs
xchg
inc
adc
and
mov
testl
cmpsl
out
jb
jne
cltd
xchg
xor
xor
dec
popf
cmp
test
pop
jge
push
pop
orb
sbb
sbb
pop
fsts
sbb
mov
mov
and
aas
adc
sahf
push
mov
loope
dec
pusha
adc
aas
sbb
pop
das
inc
pop
hlt
adc
data16
pop
ja
repnz
adc
in
and
pop
pop
int3
dec
pushf
jl
mov
mov
in
inc
icebp
inc
cltd
enter
jo
rol
test
adc
repz
xor
test
js
test
xchg
mov
rcr
repnz
xor
sbb
fs
pop
jbe
pop
lret
lret
pusha
mov
fsub
sahf
pop
das
mov
test
fisttpl
push
xchg
mov
pop
ret
jg
js
mov
inc
and
arpl
repnz
adc
mov
cmpsl
mov
xorl
lds
out
jl
xor
sub
ds
testb
aam
jnp
xchg
out
loopne
cmp
stc
sbb
add
sbb
mov
push
jo
cmpsb
jno
adc
xchg
pop
ljmp
int
push
mov
mov
daa
mov
inc
ds
xchg
jb
pop
jl
push
scas
inc
mov
add
jl
xchg
ret
push
mov
jle
in
movsl
mov
xor
push
jp
mov
subl
fdivr
lret
subl
xor
push
jb
or
inc
sub
fidivs
cmp
xorl
jle
xchg
rcrl
push
call
cmp
push
rcr
das
out
jge
mulb
xor
jnp
jle
adc
sahf
incl
mov
sub
int3
adc
jnp
push
dec
add
and
sbb
dec
fs
lea
mov
or
in
mov
loop
loop
mov
mov
leave
dec
or
push
xchg
jae
sahf
xor
mov
jecxz
cmpsb
add
inc
push
dec
xor
or
or
stc
dec
adc
jg
stos
clc
and
es
sub
push
xchg
ret
inc
add
push
ds
testb
repnz
es
jb
jbe
not
xor
sub
sbb
mov
andl
insl
int3
mov
pop
jge
mov
cli
mov
shll
adc
xor
mov
repz
ret
mov
scas
cmp
int3
pop
jae
ja
clc
jp
or
cmp
sub
sbb
shr
popf
pop
mov
push
out
call
or
mov
mov
add
cmp
mov
xchg
lea
int3
outsb
mov
aam
and
pusha
nop
clc
sub
ret
xor
and
mov
repnz
cltd
or
mov
das
mov
push
stos
and
insb
clc
dec
pushf
pop
pop
jae
sub
and
add
cmpsl
fsts
lods
mov
popa
iret
ja
test
pop
or
pusha
jbe
daa
std
data16
or
mov
fwait
repnz
adc
push
jge
rcrb
int3
pusha
sbb
adc
shlb
push
pushw
stos
and
xchg
fiadds
mov
fimull
imul
idivl
dec
jecxz
sbb
jle
add
cli
arpl
pop
xchg
jne
lods
push
mov
adc
sub
push
in
push
idivb
scas
mov
xor
mov
xor
push
mov
push
and
push
xor
push
pop
int
stc
mov
cld
adc
sub
jae
or
adc
xchg
in
psrlq
negl
in
pop
mov
sti
pop
jb
cmp
loop
das
movsl
push
or
xor
cs
aad
in
es
test
jbe
push
pop
cmc
test
sbb
out
push
xor
sarl
adc
iret
int
sub
jno
loopne
out
inc
add
push
lock
fmuls
jns
insl
icebp
jge
repnz
ljmp
sti
pusha
add
loopne
in
jmp
push
push
push
adc
inc
sub
mov
and
sbb
cmpsb
push
pop
fimull
lods
enter
enter
hlt
ds
rorb
sti
sub
ja
rorl
es
sbb
xor
mov
into
add
push
mov
pusha
js
test
pop
in
je
xor
addr16
lret
sbb
lds
mov
dec
mov
add
lods
bound
lds
sbb
sar
out
shl
mov
mov
xchg
stc
and
pop
int
inc
popf
mov
jae
int3
imul
popa
inc
out
sub
aad
adc
sbb
fucomi
test
sbb
fists
stc
jns
fildl
xor
sbb
lds
xlat
inc
push
test
or
pop
xor
inc
outsl
xchg
cmpsl
es
into
ljmp
push
mov
js
adc
cmp
notl
mov
aaa
mov
jne
mov
jp
dec
xor
add
xrelease
push
jnp
cmc
push
orb
aam
inc
xchg
dec
adc
stos
mov
das
sub
lret
gs
test
aam
daa
xor
mov
mov
jae
sbbl
fisubrl
jno
mov
in
sub
jl
inc
cmp
mov
adc
push
call
jae
call
in
add
push
aaa
out
mov
xchg
aaa
jp
stc
dec
es
pop
das
xor
pop
fcom
xchg
xchg
mov
cltd
stos
dec
mov
mov
imul
shrb
fcomip
enter
rcrl
scas
and
popf
xor
out
aas
enter
cs
mov
in
lods
ds
inc
shll
xchg
and
mov
cld
add
mov
jl
cmp
clc
mov
xchg
lods
xchg
push
sbb
jbe
jno
hlt
xchg
xchg
movsb
sbb
sbb
pusha
div
push
adc
cmp
jne
mov
adc
outsb
xchg
out
gs
jno
les
jbe
jge
out
es
mov
sarl
adc
xchg
lods
or
push
inc
cmp
loop
cwtl
enter
inc
andl
ja
mov
push
push
stc
fbstp
cmp
icebp
push
ljmp
sahf
ss
insb
or
jl
out
cli
add
push
repz
scas
and
shld
testb
adc
test
push
into
jns
xor
or
pop
pop
sbb
jno
cli
in
cld
or
imul
or
es
cmp
xchg
push
int
ja
pop
jmp
mov
or
mov
mov
addr16
cmp
xchg
aam
jmp
xchg
mov
push
mov
cmp
mov
aad
pusha
pop
ret
outsb
jg
addl
mov
cli
adc
les
ja
xchg
aad
ljmp
and
lahf
cmpps
aad
adc
inc
inc
push
lret
sub
out
cmp
je
mov
psllq
int
mov
scas
daa
cs
dec
or
cmp
leave
imul
sarl
aam
ja
shrb
lock
leave
nop
pmullw
or
inc
xlat
jno
jno
shr
or
sub
xchg
and
mov
imul
es
inc
cmp
xchg
stos
nop
fwait
inc
sub
ret
jnp
aad
adc
aad
mov
mov
sub
cmp
dec
mov
fisubl
test
imul
xchg
mov
shll
pop
mov
arpl
pop
sub
xchg
mov
ljmp
and
xchg
xchg
fldenv
adc
popf
sbb
cmp
jmp
jne
inc
cld
sbb
push
pop
std
test
cmp
je
fsubrp
in
insb
push
sahf
loop
pop
adc
nop
mov
xlat
cwtl
popf
idivb
jmp
aad
jle
push
and
fs
xchg
lahf
mov
sbb
fildl
push
inc
fidivrl
dec
insl
icebp
sbbb
mov
xchg
pop
mov
push
fxch
pop
aad
cmp
xor
roll
inc
pop
xor
daa
mov
cmpsb
sbb
sbb
leave
imul
fdivrs
fucomip
sub
sub
mov
pop
hlt
jle
pop
adcl
ds
push
loope
pop
lock
adc
push
cmc
lea
jno
lea
mov
inc
push
push
sub
aam
inc
xchg
mov
shrb
xchg
insb
jl
xor
inc
hlt
gs
pop
mov
xor
inc
fidivl
fisttps
xchg
mov
lds
shrb
fsubr
inc
jne
add
or
mov
sbb
push
push
adc
mov
add
adc
push
add
inc
inc
jbe,pt
and
mov
xchg
dec
pop
jecxz
mov
idivb
jle
lahf
mov
insb
pop
xorb
and
aam
xlat
repz
bound
shrl
inc
adc
mov
xor
jle
sbb
mov
push
xchg
sbb
jecxz
stc
mov
mov
in
pop
rcrl
mov
mov
cltd
insb
or
ret
and
enter
mov
ret
call
pop
inc
jg
movsb
fcmovu
sub
xchg
clc
dec
ss
xchg
in
shrb
sti
add
popf
jne
cmp
pop
cwtl
jne
insb
and
pop
lcall
mov
push
or
push
mov
fbstp
cmp
dec
pushf
add
ljmp
push
out
push
adc
iret
inc
ja
jl
or
loope
sbb
adc
add
stos
imul
sbb
cmpsb
pop
in
inc
mov
mov
lret
mov
popf
or
adc
xor
insl
out
jle
mov
or
mov
jmp
arpl
es
js
iret
out
cltd
xchg
sub
in
add
test
adc
out
push
popf
mov
mov
cmp
inc
arpl
push
gs
add
sbb
add
lock
add
sub
cmc
sbb
pop
mov
outsb
push
loopne
fstpl
push
xlat
addr16
sub
push
cmp
and
test
je
inc
movl
jg
sbb
fidivrl
test
sub
and
das
jmp
push
push
jbe
xor
xchg
xor
pop
xchg
cmpsb
std
push
arpl
jge
mov
test
mov
lods
jmp
repnz
movsb
pop
mov
popa
jecxz
mov
movsl
mov
xor
test
fsubl
or
and
mov
xchg
push
sub
dec
test
mov
subb
xchg
ss
in
lcall
jnp
rorb
cmp
mov
loop
jg
jge
cmp
test
lret
dec
rcrl
push
mov
scas
int
mov
sub
and
xchg
out
lods
sbb
dec
int3
push
je
icebp
das
push
test
dec
sbb
clc
js
inc
mov
test
or
push
cs
dec
ss
jno
cmp
inc
fstps
adc
inc
mov
adc
or
xor
stos
push
jecxz
pop
and
inc
ficomps
clc
cmp
popf
popa
fs
xchg
push
out
dec
inc
jns
cmpsb
mov
add
cwtl
pusha
sub
fistpll
out
xchg
xchg
pushf
in
xchg
loop
inc
cs
and
int
iret
xor
mov
push
arpl
das
mulb
lods
inc
xorb
sbb
cmpsb
je
rcl
neg
loope
out
sub
es
dec
mov
sbb
xor
rorl
add
pop
ljmp
pop
inc
mov
dec
sbb
test
xchg
pop
leave
and
pop
dec
or
or
scas
fstl
xor
shlb
push
iret
dec
adc
stos
daa
mov
rorl
jle
leave
sahf
inc
xchg
sti
lcall
mov
add
push
add
and
out
push
fpatan
hlt
add
iret
sub
adc
xchg
lea
xor
lods
and
adc
add
mov
xchg
mov
mov
or
ljmp
decl
lcall
or
xchg
xchg
or
rcr
int3
adc
pop
inc
test
scas
int3
ret
dec
lds
sub
xor
loop
add
jge
fsubs
mov
flds
outsb
shll
jg
xor
adcb
fimuls
push
sbb
and
je
fmul
jno
pop
cmpl
xchg
fdivs
add
ljmp
scas
push
repnz
dec
and
mov
mov
fildll
hlt
sbb
cld
ret
lock
scas
cmp
adc
bound
cli
scas
stc
cmp
push
repz
imull
test
mov
mov
outsb
stos
shl
repnz
mov
lret
fwait
cld
push
lret
fwait
int3
int
add
or
inc
push
repz
call
push
test
xchg
push
lock
and
scas
cltd
push
push
mov
std
xchg
movsl
mov
imulb
test
dec
mov
xor
sub
clc
lea
mov
fsubrs
into
dec
push
in
or
sub
imul
vxorps
ficomps
lcall
and
nop
aad
pop
jecxz
or
sub
fsub
lods
pop
push
pop
ja
imul
scas
lock
mov
jl
loop
loopne
mov
cmp
mov
jmp
mov
pop
pushf
pop
popf
pushf
cli
ja
mov
mov
push
sbb
aad
adc
loope
rclb
imul
ret
outsb
mov
mov
aad
out
dec
and
mov
or
push
and
hlt
fwait
xchg
imul
adc
data16
in
xchg
fistl
pushf
pop
lahf
mov
sub
andl
repnz
inc
ficoms
call
mov
inc
push
adc
add
aaa
push
lret
pop
adc
xchg
mov
stc
add
cmp
mov
outsl
fwait
stos
mov
xor
push
rcrl
pmaxsw
scas
faddl
lock
imul
outsl
xor
adc
pusha
sub
sbb
jno
push
mov
xchg
add
int3
lds
push
mov
mov
sahf
test
rsm
or
mov
mov
and
xlat
imul
or
jo
mov
sub
xchg
stc
mov
mov
inc
or
movsb
or
or
push
cld
sbb
xor
arpl
push
and
imul
outsl
fadds
roll
xchg
insb
adc
xor
fistl
add
bound
popa
int
ljmp
imul
cmp
ret
out
fsub
jmp
mov
cmc
push
in
mov
out
jle
mov
lret
adc
xor
cmpsb
daa
in
push
pushf
cs
xchg
sub
call
mov
mov
outsb
sub
mov
dec
adc
mov
dec
cmp
lcall
ficoms
mov
vmovaps
mov
arpl
add
cmp
push
fnstsw
mov
add
xor
loop
fistpl
shlb
or
cmp
dec
jle
dec
xor
push
pop
or
scas
cmp
mov
fcompp
outsl
or
dec
sahf
add
sub
add
xchg
mov
sbb
out
jmp
outsb
xor
shr
dec
cmp
pop
stos
cmpsb
loop
cli
dec
add
fsubrp
aaa
mov
loopne
or
fmuls
fistl
and
push
scas
cmpsl
insl
fs
jmp
inc
lods
dec
scas
mov
jg
jno
jno
rorb
mov
gs
cli
jb
fmull
stos
decb
jnp
clc
xlat
xorl
data16
mov
shrd
cld
mov
shl
adc
incb
out
push
add
add
cmp
rolb
push
add
pop
push
push
scas
pop
push
sub
ror
ljmp
jmp
adc
fdivrl
jne
or
je
mov
pop
cs
inc
mov
call
sar
mov
nop
ret
fsubrp
stos
push
lret
jo
push
in
mov
pop
aam
fisubs
arpl
das
mov
mov
xchg
fldcw
mov
push
dec
xorb
clc
mov
mov
nop
mov
mov
cmp
lea
gs
cmp
out
adc
fcmovnb
inc
das
xor
sub
ret
out
outsl
sbb
jo
and
bound
lds
loope
cmp
adc
imul
ret
mov
jle
lret
and
xor
push
cmp
shll
aas
popw
jg,pt
jae
jo
xchg
pop
mov
and
cli
aam
xchg
adc
lods
lret
out
test
bound
push
lahf
mov
mov
ja
lods
repnz
or
cmc
jp
in
push
std
push
push
jns
aam
fdivrs
addr16
inc
inc
loopne
test
out
jmp
mov
xor
cmc
push
pop
xlat
xlat
hlt
or
data16
mov
pop
mov
pop
cli
enter
out
test
outsl
leave
xor
or
cmpsb
cmp
cmp
mov
orl
sub
in
push
sti
shlb
xor
and
xor
add
inc
or
and
lahf
aas
push
movsb
mov
test
mov
inc
loop
and
xchg
subb
loopne
adc
popf
iret
jne
xorb
jg
cld
dec
sub
int
mov
cmp
push
movl
push
sbb
push
imul
pop
push
mov
fldcw
inc
jg
mov
mov
add
mov
aaa
cmp
insb
cmpsb
aam
cmp
inc
push
cmp
push
loop
push
push
in
mov
add
shlb
movsb
pop
pop
hlt
pop
mov
pop
lods
idivb
in
dec
test
xchg
cwtl
int
push
or
in
inc
and
sub
out
push
into
push
test
add
pop
mov
cwtl
xor
jl
in
and
pop
inc
adc
sbb
sahf
or
pmaddwd
lcall
addr16
adc
rorb
fdivrs
jmp
movsl
pop
sub
mov
add
inc
push
dec
inc
and
aas
test
mov
jle
adc
movsl
cmc
into
lds
cmp
repnz
dec
and
or
aam
jl
pop
add
mov
out
call
add
std
insl
popf
xlat
out
add
je
icebp
shlb
dec
out
pop
fisubl
mov
adc
mov
cwtl
inc
mov
sub
xchg
dec
dec
pop
mov
inc
bndldx
hlt
icebp
jbe
in
pop
xor
ljmp
mov
sarl
jns
movsl
fstl
push
ret
inc
jns
xchg
xor
jle
pushf
arpl
sahf
sub
mov
jo
ljmp
dec
mov
sahf
frstor
pop
mov
mov
jp
sbb
and
cmp
adc
pop
cltd
inc
rolb
push
pop
icebp
sub
outsl
stc
mov
add
xor
jo
jl
stc
xchg
pop
xchg
fldt
enter
push
outsl
out
repnz
loope
es
add
scas
xor
scas
dec
inc
sub
add
popf
ret
xor
inc
aaa
mov
jo
data16
inc
add
sbbb
mov
xchg
bound
mov
aas
repz
inc
push
insb
pop
push
or
pop
lcall
scas
mov
cmp
imull
adc
and
les
bound
or
es
loop
mov
sbbl
in
fiadds
shrl
insb
and
jle
jl
xor
pushw
mov
sbb
jl
loope
cmp
sub
inc
mov
cmpsb
scas
add
mov
lods
or
lahf
imul
inc
out
xchg
fs
and
addr16
in
mov
pop
les
shrb
sahf
inc
jl
cmc
mov
out
and
imul
mov
cmp
dec
jmp
add
repz
mov
mov
or
imul
push
mov
mov
add
aad
cmpb
add
lock
adc
jge
es
leave
lret
mov
mov
lds
xchg
jmp
mov
aas
shrl
sub
mov
xor
daa
jecxz
xchg
test
pop
std
mov
test
xchg
fnstcw
hlt
pop
push
xchg
jo
or
lret
dec
xor
lock
cmp
loope
xchg
shll
shlb
popa
jge
dec
dec
pop
cmp
or
fxch
leave
fnstsw
lea
jge
dec
dec
pop
cmp
or
fxch
leave
fnstsw
lea
std
pop
int
pop
cmp
or
fxch
leave
fnstsw
lea
jge
dec
dec
pop
cmp
or
jae
leave
stos
into
and
jbe
int3
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
lock
movsb
scas
aam
les
mov
popf
mov
mov
das
fs
inc
dec
xor
jg
jg
hlt
lahf
in
aam
iret
mov
movsb
out
xchg
ljmp
das
pop
xor
outsl
and
adc
add
push
xchg
mov
cmpsl
mov
test
in
negl
cmp
jo
inc
ss
xor
data16
mov
movsl
scas
xchg
mov
cs
cmp
jmp
fwait
cmpsb
push
scas
inc
in
pop
sub
mull
xlat
mov
fildll
push
push
mov
rcll
dec
jnp
lahf
orb
arpl
or
pop
pop
fs
fistps
loopne
pop
push
mov
dec
mov
ret
mov
in
rcrb
xchg
adc
test
push
test
stos
rolb
pop
test
fbld
adc
and
pop
cmp
xchg
movsl
mov
push
fnstenv
cs
mov
pop
pop
xor
or
call
sti
fstl
in
test
daa
xchg
xor
subb
pop
or
outsl
clc
jg
inc
js
les
mov
movsb
out
xchg
out
push
je
int3
aaa
push
es
or
jne
jg
jecxz
cli
mov
mov
mov
ret
getsec
jae
pop
icebp
pop
daa
dec
jae
dec
sbb
mov
mov
mov
std
lods
mov
adc
jle
dec
jnp
and
jno
ja
xchg
add
mov
fbld
je
fs
push
aas
inc
dec
xor
and
adc
add
hlt
lahf
in
aam
iret
mov
movsb
out
xchg
incl
push
aas
inc
dec
xor
and
adc
add
hlt
mov
adc
int3
fsubs
call
dec
inc
lods
nop
inc
es
mov
cmp
repnz
popa
loopne
xchg
add
push
push
mov
cmp
adc
sub
pusha
inc
out
and
push
int3
data16
lahf
daa
xchg
ds
iret
cmp
icebp
sarb
sub
or
cmc
inc
mov
cmp
mov
inc
stos
call
leave
sub
sub
push
dec
mov
ret
mov
jae
push
imul
mov
inc
xor
and
arpl
mov
cwtl
add
pop
inc
jp
lahf
add
or
jae
pop
call
sub
gs
push
or
adc
fdivr
xor
out
cmp
std
cmp
stos
sbb
loopne
cli
pop
jmp
pop
jo
sbb
push
mov
fldcw
outsl
mov
push
rcrb
sub
add
ja
and
mov
mov
in
sarb
xor
push
movsb
shlb
add
mov
fisubrl
fnstsw
test
insb
outsl
mov
adc
rorl
xchg
pusha
imul
lea
pop
mov
sub
imul
mov
aam
lret
push
jge
mov
and
lods
xlat
sub
stc
in
inc
cltd
sub
dec
lret
int3
mov
jnp
cwtl
js
jbe
js
mov
jbe
and
inc
mov
in
sbb
mov
mov
fnstcw
xor
and
lahf
cmp
dec
pop
inc
pop
scas
pop
xchg
mov
int
xchg
popa
sbb
out
enter
popa
sub
jnp
dec
push
fidivrl
fildll
xlat
popf
push
push
sub
push
ja
mov
dec
stos
mov
xor
lea
ret
stos
aaa
adcl
pusha
xor
cwtl
push
pop
shlb
sub
cwtl
mov
data16
mull
popf
mov
sahf
jg
enter
push
dec
into
lods
iret
xchg
mov
out
dec
cltd
mov
cwtl
and
lret
inc
and
xchg
push
add
dec
movsl
imul
lahf
and
lret
dec
push
dec
pop
or
pop
xor
lret
and
rcr
ds
mov
repnz
ja
jns
imull
push
sub
arpl
movl
dec
sub
dec
lcall
cmp
in
pop
xor
insl
add
xchg
mov
dec
lret
pop
cmp
ljmp
xor
les
sub
out
xchg
loopne
testb
fnstsw
add
in
sahf
pop
pop
das
fwait
or
mov
dec
popa
xor
sub
adc
test
cwtl
ds
mov
mov
jl
outsl
loop
and
xor
mov
mov
rolb
ret
icebp
shlb
mov
sub
in
or
jne
or
rclb
sahf
sub
arpl
mov
bswap
das
idivl
and
repz
sbb
mov
nop
jo
mov
xor
rolb
and
xchg
sahf
test
and
imul
pusha
lods
test
lahf
out
sbb
push
inc
insl
in
cld
sbb
sub
xchg
filds
xchg
fmuls
jb
inc
dec
xchg
gs
mov
xchg
push
inc
push
cmp
sbb
pop
aad
xor
icebp
xchg
sti
cmp
sbb
inc
cmpsl
jge
fisubrl
xor
jmp
ss
adc
push
push
std
idivl
pop
or
xlat
fimull
fstps
fisttpll
mov
sub
inc
and
xor
lods
mov
push
mov
mov
mov
dec
adc
pop
shl
pop
dec
adc
mov
pop
in
rcrl
arpl
add
jno
movsl
or
jecxz
aaa
fbstp
dec
out
mov
fisubs
dec
loope
xchg
out
mov
pop
loopne
and
push
sarl
push
jnp
mov
inc
push
and
sbb
dec
jecxz
test
cmc
es
out
add
in
or
lods
jb
xchg
inc
movsb
clc
movsl
fsubrp
xor
outsl
or
and
sahf
cmp
scas
ss
in
mov
push
cmpsl
mov
sbb
push
cmp
clc
push
adc
sbb
flds
jnp
dec
jo
stos
outsl
fimuls
scas
out
aaa
push
sub
xchg
push
push
mov
or
mov
clc
fists
or
mov
fucomip
clc
jb
xchg
jge
fsubrl
test
sahf
in
adc
push
rcrl
or
push
lods
mov
std
sub
push
addr16
in
loope
jbe
pop
jo
adc
arpl
cmpb
cmp
or
push
cli
fdivp
int3
addl
mov
dec
sub
in
xor
mov
or
fsubp
pop
stos
inc
fs
mov
das
ja
fcmovne
or
hlt
mov
xchg
cmpsl
inc
sbb
fiadds
call
mov
das
movsl
pop
pop
xor
jmp
adc
jl
cmp
pop
pop
shlb
push
inc
jge
movsl
inc
mov
jns
movsb
aaa
dec
adc
pop
jne
xlat
rorb
dec
add
rcll
loop
adc
test
or
mov
jo
rcll
push
cmc
and
movsl
pop
pop
dec
jmp
jbe
mov
or
es
gs
inc
dec
cmp
inc
lcall
insb
mov
jns
call
jl
push
ds
xchg
mov
mov
inc
test
nop
xor
pop
adc
jne
or
dec
mov
inc
xor
fwait
or
mov
fisubrs
sbb
shrb
je
aad
outsb
xchg
jge
xor
mov
push
mov
xlat
xchg
daa
subb
dec
fcmove
icebp
imul
cmc
xor
es
pop
push
out
jp
cmpl
scas
pop
popa
or
pusha
adc
push
std
out
pop
jnp
pop
sbb
es
cmpsl
mov
mov
xor
mov
ret
and
in
and
into
xor
xor
int3
dec
jecxz
fcoml
push
mov
pop
lcall
mov
in
repnz
test
mov
rolb
jmp
adc
inc
adc
cld
pop
pushf
inc
adc
add
cs
jae
outsl
pop
and
clc
jno
jnp,pt
stos
mov
pop
nop
pop
bound
lret
scas
rorb
gs
pop
shlb
push
adc
mov
mov
sbb
idivl
or
mov
dec
and
sub
xor
pop
adc
push
fs
inc
push
lcall
ret
dec
andb
cmp
mov
mov
cmc
inc
mov
mov
movsb
pop
enter
jmp
dec
das
add
fs
test
clc
xchg
and
mov
inc
loopne
mov
into
mov
jb
vcvttps2dq
jnp
jp
or
jae
jmp
add
sub
pop
sub
cld
xor
imul
mov
iret
pusha
aad
ss
sub
imul
int
mov
mov
jns
mov
adc
jg
gs
incl
pop
xchg
mov
popa
mov
mov
imul
cmp
mov
movsb
mov
movsb
lods
sbb
sub
jmp
sbb
jl
ja
cmp
ficomps
or
js
test
lds
pushw
decb
pop
adc
dec
sbb
addl
mov
not
or
xchg
adcb
adc
push
mov
or
out
or
adc
das
aas
mov
mov
notb
fdivrs
mov
in
jb
inc
lock
into
pushf
xchg
mov
nop
pop
mov
add
and
lret
sub
pop
jnp
add
mov
and
movsb
xchg
dec
cltd
sbb
jo
mov
aas
fstpl
pop
cmp
fxam
sub
insb
outsb
pop
popa
nop
pusha
sbb
call
out
iret
repz
decb
cmp
and
or
hlt
stos
adc
and
imul
pop
sbb
fwait
sbb
sbb
fwait
fs
inc
lea
mov
pop
insl
dec
inc
cmp
inc
pushf
adc
and
pusha
xor
xchg
xchg
test
mov
push
insw
push
hlt
pushf
push
fcmovu
loope
lock
psubd
pop
sbb
daa
aaa
hlt
into
xchg
push
negl
pop
cmp
pop
sub
int
xorl
xlat
xchg
adc
popf
mov
test
inc
pminub
lods
jne
scas
cmpsb
jae
pop
jle
adc
adcl
xchg
shll
jns
pushf
outsl
mov
faddl
mov
es
push
inc
dec
fsubrs
imulb
hlt
sbb
mov
fstp
push
inc
std
xchg
mov
sub
enter
clc
rcrl
popf
jne
mov
mov
out
jnp
fidivs
outsb
push
cld
insb
cli
fs
push
movntps
orl
xchg
cmp
incb
test
cs
aam
inc
inc
imul
adc
idivl
or
fldcw
inc
push
insb
sahf
ss
lret
aaa
in
cmp
mov
fcoms
jbe
in
xchg
mov
push
sub
pop
pop
push
outsl
push
fisubs
daa
inc
movsl
cwtl
inc
inc
inc
inc
or
iret
pop
xor
jb
test
xor
and
ss
mov
data16
mov
mov
arpl
add
outsb
jg
rcrl
push
out
mov
adc
and
sub
mov
ficompl
inc
mov
push
negb
jmp
jecxz
sti
xchg
pop
scas
lds
sub
arpl
out
inc
lds
xor
lret
imul
mov
sahf
lret
inc
ret
lcall
jmp
nop
in
mov
in
ror
popa
icebp
push
mov
ss
or
jp
push
cltd
mov
in
lock
sub
push
setp
mov
fwait
dec
and
mov
inc
out
shrb
mov
dec
push
sbb
test
arpl
xchg
test
jno
bound
or
fiadds
xchg
sub
cwtl
pusha
fwait
and
add
imul
aas
les
cvttps2pi
stos
adcl
jle
jae
adcl
out
mov
cld
push
sbbb
mov
cltd
fs
fmull
int
adc
cmp
push
xchg
leave
stos
inc
out
and
and
js
xor
les
lock
add
cwtl
lret
cmpb
dec
es
xlat
jecxz
xor
mov
std
into
adc
das
cmpsl
sub
lods
mov
jns
cmp
daa
popf
push
ljmp
out
mov
repz
lret
and
fisubrs
sub
pcmpgtb
add
fs
add
ja
xchg
xor
cmp
int
imul
xlat
stos
dec
aam
sub
sub
inc
jnp
push
cmpb
jge
xchg
sub
ss
lods
cmc
xchg
dec
cmp
jmp
outsb
shrl
ret
push
xor
pop
pop
inc
js
data16
negl
insb
lahf
push
fsubrl
sub
int
test
outsb
sub
in
rol
mov
incb
imul
jns
sbb
ds
inc
jno
sub
cwtl
fists
inc
mov
outsb
and
fwait
cwtl
in
sti
addl
aad
mov
jmp
insl
lcall
jl
pop
or
mov
dec
loop
mov
cmp
adc
cmpsb
xorl
cwtl
test
xor
xchg
cmc
mov
dec
lods
lock
test
popf
dec
je
sbb
les
push
jmp
icebp
xlat
daa
jg
pop
mov
push
mov
repz
push
mov
fdivrl
add
test
mov
or
add
lods
icebp
icebp
es
andb
cmp
pop
jle
jmp
ds
and
test
jno
lahf
push
pop
xchg
aas
adc
adc
mov
xor
pop
add
add
shrl
je
movsl
pop
test
lds
add
jmp
sub
pop
adc
or
or
jecxz
add
adc
mov
mov
fwait
add
movsb
sub
jl
xchg
imul
cmp
out
adc
and
pop
xlat
int3
xchg
in
out
inc
adc
sahf
int3
mov
xor
int
es
jge
scas
mov
stc
jp
nop
sbb
dec
dec
inc
push
cltd
enter
out
outsl
fnstcw
fwait
stos
push
mov
daa
push
lret
dec
sub
fldl
inc
dec
mov
stc
xor
stos
and
cmp
ds
mov
and
and
and
stos
or
mov
cmp
dec
and
mov
mov
aad
es
sahf
push
jmp
sahf
insb
hlt
lret
add
sbb
fistps
mov
mov
out
aad
out
inc
lods
jge
stc
pop
dec
cmp
inc
aas
repnz
ss
outsb
mov
test
in
push
adc
sbb
popa
push
ljmp
loopne
push
push
push
mov
jo
cmp
aam
std
cmc
or
mov
enter
mov
ficoms
shl
pop
cli
aas
out
data16
jo
sti
sbb
mov
in
adc
push
cmp
in
int3
xor
mov
dec
add
add
mov
ds
shl
pop
xchg
xlat
out
out
sub
xchg
mov
fldl
pop
jnp
sub
fsts
mov
push
je
xchg
mov
and
stos
test
stc
mov
sub
ja
sti
sbb
and
add
pop
xor
push
shlb
sti
filds
mov
and
daa
stos
stos
fdivr
jle
stos
mov
or
imul
cs
insb
idiv
xchg
pop
fnstcw
ja
pop
cli
hlt
cmp
outsb
pop
mov
xor
testl
xchg
pop
movsb
std
cld
xchg
shlb
cwtl
xchg
decb
fucomip
test
fs
sub
inc
es
lahf
sarl
mov
ljmp
sbbb
pop
jae
mov
mov
lods
loop
ja
push
scas
gs
clc
iret
xchg
add
or
mov
arpl
hlt
outsl
ja
cmpsb
cmc
lock
xor
adc
cld
cmp
push
add
loopne
out
pushf
mov
cmc
imull
mov
lods
fidivs
adc
idivb
inc
mov
dec
jge
iret
subl
push
cmp
push
and
mov
or
add
dec
xchg
sbb
push
cmp
or
and
sbbb
test
jae
adcb
nop
and
dec
enter
xor
ds
jne
mov
rcrl
or
ret
cmp
cwtl
enter
xchg
push
jo
mov
xor
inc
out
stos
cmp
xchg
les
daa
leave
es
fisubs
jno
sub
ds
lret
jmp
inc
sub
sti
in
into
push
mov
inc
jne
test
ss
push
and
sarl
add
or
cmp
je
adc
data16
jg
cmpsb
les
cmc
mov
loop
in
mov
and
pushf
fnstenv
xor
push
leave
dec
insl
ljmp
daa
sub
rcrb
ret
add
jb
xchg
cmp
mov
dec
leave
or
insl
dec
and
sbb
movsb
mov
inc
mov
jle
inc
pop
ja
into
jl
imul
or
sub
orb
pusha
ja
xchg
adc
mov
cwtl
cmc
in
mov
pop
lret
test
fidivrs
pop
sub
or
mov
in
stos
stos
sub
mov
lods
xchg
push
xor
mov
loop
cmp
insl
jecxz
in
sahf
insl
daa
dec
jp
inc
lods
push
popa
test
rol
xchg
sahf
fisttpll
in
repnz
cwtl
cmpl
jecxz
stos
adc
pop
outsb
jge
sub
adc
mov
inc
test
xchg
mov
cmp
pop
lcall
sbb
mov
out
jl
test
stc
shrl
js
mov
fsubl
int
cmc
test
movsl
leave
stc
xchg
inc
and
iret
bound
add
sbb
adc
adc
xchg
mov
xor
cmp
push
xchg
sbb
mov
outsb
push
lea
xchg
loope
dec
jne
hlt
dec
out
jg
lcall
mov
aam
outsl
movsb
out
mov
test
sarl
lds
call
mov
sbb
pop
and
cmp
jae
mov
xor
dec
jno
xor
sbbb
adc
jmp
xchg
ja
sbb
push
sbb
out
dec
cld
jno
inc
lret
test
add
cwtl
pop
jnp
ds
std
mov
jae
aaa
sub
stos
repz
jbe
mov
lahf
pop
lcall
in
sbb
dec
add
and
sub
jmp
xor
and
dec
icebp
inc
sub
fsubl
dec
je
icebp
ss
sbb
pusha
add
pushf
call
xchg
inc
mov
in
je
inc
mov
out
add
fdivl
lret
mov
jnp
jp
xor
icebp
stos
je
cwtl
xchg
jecxz
ret
mov
aaa
out
mov
fdivrs
jg
pop
pop
fimuls
xlat
xor
stos
mov
xor
pop
sti
fcomip
jge
cli
lret
outsl
cmp
mov
test
sub
sbb
sub
aaa
sti
xor
push
hlt
or
sub
js
movsl
aad
xor
xchg
fsubp
add
adc
sub
cmpsb
and
xchg
shrb
or
jno
into
push
and
mov
daa
mov
cs
pop
lcall
lahf
sub
inc
call
ss
filds
add
das
jo
movsl
mov
or
cmpsl
pop
jge
sarb
jae
and
bound
inc
ret
addr16
ss
cmp
sbb
out
test
test
lcall
ja
bound
cmp
push
sbb
jbe
ret
roll
aas
in
cs
std
clc
sbb
sub
paddusw
iret
push
scas
mov
push
sti
cmpsl
xchg
sbb
sub
lcall
bound
push
fistl
std
xor
jg
ja
fwait
cmp
jnp
cmp
pusha
int3
mov
cmp
mov
ds
cs
popf
je
xor
mov
mov
lahf
pop
push
adc
imul
leave
in
adc
jmp
in
inc
movsb
loop
es
lock
sbb
mov
or
mov
fld
leave
sub
clc
inc
pop
bound
or
aaa
test
outsl
mov
sbb
movsl
sbb
lods
add
fcomps
mov
je
pop
out
inc
dec
jle
test
enter
mov
in
cwtl
jp
inc
aam
das
fadds
adc
icebp
xchg
shll
mov
fs
fsubrs
or
mov
mov
jo
rorb
jmp
dec
push
jle
out
pop
push
out
lcall
mov
sub
jle
in
repnz
insl
lret
cmp
push
je
add
and
adc
in
fists
fstpt
mov
push
sbbb
sbb
cmp
or
and
dec
aaa
std
movsb
xor
or
int
mov
movsb
lcall
stos
shl
jnp
lcall
pop
mov
hlt
mov
dec
sbb
aaa
mov
addl
pop
lea
aad
cmpsl
ja
xchg
mov
pop
mov
aad
cmpsl
imul
inc
sahf
xlat
add
inc
pop
dec
fstp
in
dec
mov
stos
mov
mov
mov
mov
scas
adc
ret
mov
push
mov
push
jmp
jle
loope
and
dec
not
outsl
js
lods
pop
pop
xor
jae
mov
adc
xor
icebp
or
outsl
mov
dec
pop
in
pop
ret
fnstsw
inc
icebp
pcmpeqw
dec
xor
rcl
adc
fwait
js
rcrl
fs
rcll
and
pop
xchg
ljmp
sub
jl
mov
xor
add
dec
ss
fistpl
jbe
imul
xor
sub
sbb
push
pop
mov
bound
cmpl
popf
push
pop
lods
push
mov
cltd
leave
ss
cmp
subl
and
pop
xor
fstpt
cmpb
stc
gs
add
push
adc
cld
jns
test
cmp
cltd
push
xchg
out
dec
mov
inc
dec
mov
mov
loop
ret
adc
dec
mov
popf
jbe
fmul
cmp
add
scas
xchg
add
stos
pop
dec
mov
dec
inc
pop
pop
mov
leave
out
ret
sarb
imul
push
fisubrs
xchg
jp
inc
inc
sub
cmpsl
sub
ljmp
das
mov
js
test
in
sub
ret
push
in
mov
adc
mov
xlat
sti
int3
xchg
push
cmp
mov
add
imul
es
add
in
fcoml
inc
inc
addr16
sbb
sbb
push
pop
sarb
add
loopne
les
mov
jmp
xor
addl
call
mov
inc
dec
fnstenv
add
cmp
int3
xchg
xchg
lods
imul
inc
fucomp
pop
inc
loop
gs
jmp
add
mov
push
sub
lea
inc
out
orb
ss
xor
adc
mov
jle
out
inc
xor
sbb
add
mov
mov
xor
or
and
pop
mov
js
fs
dec
enter
mov
xchg
ja
fbstp
mov
jg
in
pop
mov
enter
pop
call
test
aas
fdivp
jp
jecxz
imul
maxps
scas
add
stos
push
stos
xchg
scas
das
cmp
cmp
es
adc
out
or
fidivl
lcall
lods
in
push
sub
push
inc
arpl
jne
inc
jb
push
pop
push
jb
xchg
sub
and
jbe
fldcw
jbe
xchg
jne
add
ror
das
enter
sbb
lret
mov
cmp
loopne
inc
clc
mov
test
push
push
or
cvttps2pi
mov
sarl
movsb
out
xchg
incl
push
aas
inc
dec
xor
and
adc
add
hlt
lahf
in
aam
iret
mov
movsb
out
xchg
incl
push
aas
inc
dec
xor
and
adc
add
lock
ljmp
out
nop
incl
push
aas
dec
dec
xor
outsl
sbb
popf
add
mov
movsb
outsl
adc
inc
lock
into
test
cmp
nop
insb
cmpb
int3
int3
jp
lahf
xchg
pop
movsl
pop
mov
xchg
push
mov
out
cmpsl
adc
repnz
out
xlat
gs
jne
test
xchg
pop
movsl
pop
mov
lds
push
in
cmc
out
cmpsl
adc
testl
jne
test
mov
lds
aad
in
cmc
mov
lret
dec
icebp
push
out
xlat
pop
mov
jne
test
loope
shll
add
adc
out
push
test
movsb
inc
cwtl
and
mov
mov
das
mov
dec
daa
cmp
ret
std
xor
insb
xor
test
push
gs
mov
aaa
inc
pop
push
xchg
call
jg
test
jns
or
data16
cwtl
je
jp
xchg
push
push
mov
push
or
movsl
mov
fstpt
jp
in
ret
push
mov
fisubrl
jae
dec
mov
in
adc
bt
notl
flds
xchg
mov
daa
insl
call
push
lahf
shrb
mov
add
and
mov
add
daa
xchg
pop
movsl
imul
in
cmc
inc
add
cltd
xor
xlat
mov
inc
push
jecxz
repz
es
imul
pop
sahf
sub
adc
les
loop
mov
xor
popl
jns
jae
pop
test
cmpb
adc
loope
roll
xor
inc
cmc
mov
cmpsl
adc
testl
jne
test
xchg
pop
movsl
pop
mov
lds
push
in
cmc
mov
cmpsl
adc
testl
jne
test
cmpb
push
push
popf
jl
xor
rolb
adc
pop
das
jle
inc
or
lret
sbb
inc
sbbl
cmpsb
arpl
cmp
mov
and
mov
lret
jo
sub
mov
pop
dec
pop
enter
xor
mov
pop
test
cmpsl
dec
ficoms
mov
sub
lods
adc
mov
lcall
pop
xchg
jbe
sahf
cmpb
dec
les
dec
xor
or
push
pop
or
xchg
fidivrl
cmpsl
dec
pop
loop
data16
push
sahf
cmp
jmp
mov
cmp
cmp
inc
aad
lea
xorl
xor
push
sub
jmp
sbb
fnsave
mov
jb
jbe
mov
pop
mov
sub
mov
and
bound
push
mov
push
mov
mov
pop
lahf
mov
stos
jmp
and
iret
mov
divl
aad
fistl
xchg
pop
rorl
cmp
scas
xor
out
mov
fbstp
ds
mov
scas
adc
and
jecxz
test
iret
lds
btc
icebp
mov
mov
pop
sbb
icebp
or
fucomp
mov
adc
fadds
fidivrs
mov
js
jp
sarb
loope
xchg
lcall
insl
adc
iret
mov
repz
ss
dec
jge
fs
adc
test
fstpt
cmpsb
or
stc
rclb
mov
lods
jl
push
jb
jp
jo
sbb
cld
pop
push
fidivs
mov
lahf
xchg
mov
jmp
in
aas
sbb
push
inc
push
inc
xchg
dec
adc
cmp
and
bnd
movsl
sahf
mov
fcoms
out
push
nop
sbb
das
aam
lcall
rcll
iret
cmpsl
cld
loop
inc
mov
xorl
jle
data16
jb
ret
mov
mov
pop
mov
lahf
in
shlb
pusha
dec
xlat
adc
arpl
or
addr16
movsb
icebp
or
aas
xchg
stc
pushf
inc
mov
popa
lea
or
cmp
pop
jp
and
or
das
pop
push
jl
pop
cmp
xchg
lahf
xchg
clc
dec
lahf
cld
outsl
out
bound
rorl
dec
movsb
adc
or
ljmp
rolb
add
sub
jl
mov
push
dec
in
loope
adc
xor
sub
sub
add
add
jns
cmc
mov
insb
lods
xorl
orb
mov
addr16
in
add
adc
testb
sub
mov
insb
xor
cmp
pusha
inc
fsub
and
insl
lods
dec
adc
je
dec
inc
leave
xchg
cmpsl
out
mov
mov
orb
xlat
jp
jmp
popf
mov
mov
dec
push
inc
jge
sub
lahf
ret
sub
addr16
in
cli
inc
aaa
insl
fs
daa
or
mov
aad
mov
subl
addb
xor
rcrl
sbb
mov
out
or
and
into
in
xchg
mov
cltd
push
int3
mov
repz
sub
mov
les
data16
cltd
mov
push
mov
mov
mov
fistpll
mov
es
lock
not
fldl
insb
sub
xchg
test
xor
dec
sti
xchg
mov
pop
or
mov
adc
sub
stc
sub
mov
aad
add
mov
mov
je
movsb
ljmp
dec
pop
mov
jl
popa
std
mov
sbb
daa
jbe
lahf
popf
dec
sbb
mov
jle
out
orb
add
sbb
lret
dec
jle
and
call
stos
outsb
or
jge
mov
jmp
sub
iret
mov
pop
mov
fs
pop
int
test
xor
out
aaa
lods
xor
jp
fs
pop
add
lret
mov
fnstcw
sbbl
mov
jns
xchg
mov
cmp
pop
sbb
xor
mov
out
mov
push
test
jbe
imul
or
lock
push
cli
mov
xlat
dec
or
mov
fwait
push
mov
in
jne
and
in
xchg
pusha
mov
or
mov
stos
insb
inc
sbb
dec
repz
cmp
mov
sarl
add
push
ss
sbb
push
mov
mov
fdivs
cmpsb
ja
bound
jmp
xchg
mov
daa
imul
dec
or
pop
jecxz
or
clc
sub
mov
aad
stos
hlt
jb
rorb
mov
pop
fld
cld
lea
jge
mov
jb
sti
les
test
movsb
sub
xor
arpl
sub
imul
test
out
mov
mov
jae
mov
mov
jae
lods
inc
movsl
imul
xor
insl
pop
or
std
dec
ret
push
xor
adc
dec
jmp
shlb
mov
add
mov
fistl
sbb
fwait
andb
pop
inc
test
jnp
lds
into
inc
jmp
std
mov
jmp
movsl
popf
adc
mov
xchg
in
mov
outsl
lcall
jne
in
and
icebp
ja
jno
xchg
bound
pop
out
jge
aam
es
mov
fwait
mov
jl
fstl
xor
and
stos
mov
leave
dec
stos
push
outsb
aad
sub
push
and
add
in
mov
jmp
inc
cmp
pop
inc
call
and
dec
leave
mov
pop
je
and
cmpsl
icebp
pop
and
lods
lds
aad
xor
int
imul
inc
stos
cltd
push
pop
lock
sbb
jo
pop
or
je
pop
mov
lds
sub
cwtl
mov
inc
pop
push
nop
push
xorl
mov
inc
sub
cmp
jns
inc
adcl
lock
pop
out
sbb
rcrl
xor
imull
and
out
dec
jbe
daa
mov
sbb
cld
sahf
add
shll
or
pop
test
cmp
sqrtps
ljmp
pop
mov
mov
adc
repnz
fmul
mov
mov
repnz
adc
mov
jb
adc
mov
clc
hlt
ret
cmp
sarl
pop
sti
xlat
fstl
pop
jae
xchg
jmp
outsl
mov
stc
int3
inc
fiadds
mov
imul
add
clc
jecxz
sbb
push
push
mov
nop
notl
pop
lock
inc
fiaddl
sbb
je
stc
ret
arpl
data16
shrb
fimull
aam
sbb
mov
push
mov
sub
push
xor
lds
mov
push
loope
pop
inc
mov
inc
mov
lcall
add
pop
xor
cmp
pusha
and
mov
adc
cmpsb
sahf
xor
stos
adc
push
das
shl
andb
adc
xor
cmp
lods
in
sbb
nop
push
popf
popf
movsl
add
sbb
rolb
mov
fcoms
test
scas
mov
and
sahf
sub
daa
cmp
out
stc
movsl
jp
jmp
lock
jle
inc
lods
movsb
std
mov
clc
lret
ljmp
inc
inc
xlat
clc
and
dec
scas
inc
pusha
push
mov
mov
cmp
push
mov
xor
add
xchg
cmpsl
push
mov
ja
movsb
fildl
fildl
add
mov
fldt
icebp
mov
xchg
ljmp
push
test
std
mov
lret
jmp
in
hlt
xchg
mov
push
pop
test
or
stos
sub
test
mov
sbb
lahf
or
xchg
and
jecxz
imul
es
imul
mov
mov
movsb
sub
mov
insl
addb
adc
mov
cli
sbb
mov
mov
adc
cld
add
mov
sub
fwait
icebp
jg
mov
push
imulb
sbb
sub
cmp
mov
dec
pop
jmp
push
and
loopew
xchg
lahf
xchg
pop
arpl
inc
popf
leave
xlat
cmc
jae
and
scas
loopne
mov
jno
outsb
sub
rorl
idivl
out
shlb
icebp
add
xor
outsl
adc
decl
mov
sub
add
sbb
aaa
faddl
sbbb
or
xor
enter
xor
push
test
xchg
fldt
sbb
icebp
lret
into
cltd
pop
scas
in
pop
call
mov
cmp
pushf
out
arpl
icebp
hlt
pop
imul
xor
sbb
popa
mov
xor
and
jb
je
adc
stos
pop
outsl
adc
push
sbb
cs
aas
cmpsl
mov
shrb
out
rol
pop
mov
mov
pop
shl
lret
mov
enter
xchg
jae
testb
xchg
mov
adc
xchg
hlt
sub
pop
sbb
mov
enter
cld
int
xchg
sarl
xchg
lods
mov
or
fistpll
push
das
push
add
cmp
test
or
inc
test
shlw
mov
ss
inc
cmp
push
fstps
inc
dec
jge
add
mov
and
mov
roll
jns
xchg
and
xorl
cli
sbb
xchg
dec
outsl
test
push
jno
dec
lock
mov
jnp
xchg
out
adc
movsb
mov
cmp
jae
jne
stc
imul
test
cmp
shrl
adc
test
int
cmp
popa
push
xchg
lcall
inc
cmc
jge
mov
dec
dec
cmpsl
mov
push
shll
fwait
popa
cmp
mov
loopne
pop
test
jb,pn
sbb
stos
xor
out
mov
cmp
je
push
ja
mov
inc
aam
pop
pop
fwait
aad
cmp
sbb
adc
lock
mov
shll
ds
jb
shrl
loope
dec
jne
notl
sub
push
cld
stos
jo
out
cmc
push
sub
jge
nop
push
xchg
aam
jae
sbb
xor
or
int3
dec
shll
in
pop
out
add
test
sbb
xchg
loope
and
sbb
lds
call
bound
mov
shr
xor
push
popa
ficoml
mov
push
in
fildl
xchg
or
sbb
and
testb
or
mov
addr16
lods
pause
sbb
mov
mov
mov
sahf
lahf
jle
out
sub
sti
xor
pop
push
test
bound
add
addl
fcmovne
sbb
iret
adc
push
adc
movsb
jmp
outsb
jle
or
xchg
xchg
mov
pop
loopne
loop
jl
inc
xchg
test
ja
aas
sub
js
pop
add
xor
cmpsl
mov
xlat
push
push
orb
mov
or
mov
pop
pop
sbb
bnd
xchg
xchg
cwtl
xchg
mov
subb
iret
inc
xchg
sub
nop
lods
inc
push
and
xchg
sbb
aam
cli
cmp
mov
lods
imul
or
fcomps
fwait
push
jo
nop
pop
xchg
and
add
js
add
in
stc
xchg
xchg
stos
push
adc
repz
mov
add
sbb
add
inc
or
xor
push
ret
scas
sub
push
aam
push
xor
adc
ljmp
xchg
cmp
inc
testl
lods
dec
in
push
aam
jae
mov
cltd
ret
jo
mov
mov
decl
in
add
out
std
and
mov
into
mov
out
in
shl
mov
jnp
gs
scas
mov
sub
pop
ret
jle
pop
dec
xchg
loopne
pop
sbb
and
les
push
mov
lcall
or
into
sbb
inc
ret
push
lret
ja
loopne
sub
xchg
inc
dec
jns
jae
aam
loope
mov
push
arpl
call
hlt
js
dec
enter
out
lea
inc
cmp
push
sti
testb
and
loopne
pop
arpl
push
lcall
mov
jle
or
pop
loope
mov
wbinvd
jp
aas
out
xor
inc
mov
out
mov
jecxz
shlb
pop
sub
imul
loopne
sub
sbb
call
xor
popa
xor
aaa
push
aas
or
cli
push
jge
push
mov
outsb
sbb
popa
stc
in
and
push
jl
adc
cs
mov
push
cmpb
out
xchg
adc
cmp
or
leave
addr16
daa
es
mov
mov
in
imul
icebp
out
add
or
xlat
fwait
inc
dec
mov
cmp
mov
pop
pop
iret
jge
mov
int3
and
jp
sbb
xchg
fsin
xorl
test
jbe
mov
mov
into
es
sbb
test
das
sub
stc
ret
push
loope
dec
loope
aam
pop
pop
daa
iret
pop
push
sbb
jl
sahf
loopne
dec
pop
in
add
push
and
xor
out
jp
scas
out
sub
int3
hlt
mov
sub
cwtl
sti
insb
hlt
mov
sub
in
in
test
sub
mov
enter
xchg
or
dec
mov
push
in
stc
push
mov
enter
dec
push
mov
sbb
pop
push
loop
imul
scas
cmp
fldenv
push
sbb
sbb
cmpl
xchg
sbb
out
fwait
je
jnp
add
mov
pop
shll
jb
push
shrl
push
mov
repnz
push
dec
mov
nop
lcall
repnz
mov
in
adc
push
in
xor
in
adc
sub
pop
adc
sarl
loope
imul
sarl
aas
ja
pop
loope
int
dec
pop
sbb
pop
int3
sub
add
aas
mov
cmp
daa
cltd
ret
sbb
or
sbb
negb
mov
jne
arpl
sbb
xchg
jl
pop
jecxz
add
add
inc
sbb
mov
sbb
cltd
dec
das
vminsd
push
in
jl
repz
ret
adc
aaa
lods
fwait
stos
xchg
imul
ret
cmpsl
lods
lret
mov
mov
outsl
in
js
in
jg
imul
cmpsb
inc
mov
xlat
sub
repnz
push
xor
xchg
ficomps
gs
xacquire
and
sahf
mov
and
fisubrs
mul
push
push
rclb
inc
push
fmul
aam
jo
aas
test
adc
es
mov
dec
pop
faddp
pop
call
fwait
and
mov
into
xor
lcall
and
insl
out
out
in
lods
cltd
sbb
popa
or
fisubs
cmp
mov
mov
int3
push
mov
sbb
dec
ja
adc
mov
jl
lret
adc
ret
adc
fstl
lahf
aad
pusha
pop
rclb
lret
jge
lret
je
xchg
mov
fidivs
shrb
int
inc
lods
and
xchg
jge
scas
pop
sbb
notb
mov
stos
jmp
xchg
xor
jge
sar
add
pop
xchg
roll
std
pusha
fmuls
jns
insl
shll
add
xor
mov
vpxor
xchg
cli
in
pop
in
mov
xchg
mov
sahf
out
call
inc
inc
aad
sub
mov
xchg
xor
and
pop
icebp
iret
cmp
adc
sarl
add
enter
jne
mov
dec
jo
daa
iret
test
outsb
mov
movsl
loopne
adc
adc
inc
mov
fcomp
notl
cmp
fadd
xor
subl
and
outsb
pop
rorl
inc
into
adc
aam
inc
loope
addr16
mov
lcall
enter
and
inc
negb
push
scas
add
push
dec
sub
mov
push
out
leave
push
popa
mov
cltd
or
repnz
pop
mov
or
fwait
add
adc
lret
f2xm1
pop
pop
aam
iret
stos
sbb
shrb
int3
xor
and
mov
movsb
out
in
push
fiaddl
dec
jno
test
push
inc
mov
cmp
out
or
xchg
std
ja
jp
in
negl
xlat
test
xchg
inc
push
inc
shll
lea
or
cli
mov
mov
test
fsubr
daa
adc
dec
mov
das
out
mov
mov
cltd
cmp
test
nop
jae
xchg
cld
dec
xlat
iret
fnstcw
hlt
mov
jnp
adc
test
loop
or
sbb
mov
cmp
into
mov
inc
xor
cs
jl
inc
fistps
loope
das
testb
xor
lea
bound
pop
int3
popa
scas
decb
cwtl
fscale
xlat
mov
in
pop
xor
push
call
fsubs
mov
inc
lock
hlt
out
and
ret
jle
sub
daa
cmpsl
mov
sbb
into
xchg
scas
dec
mov
jb
xor
and
sbb
outsb
adc
sbb
leave
add
adc
mov
push
out
mov
xor
nop
and
andb
cmc
cmp
cmpsb
xor
and
cmp
jmp
repz
test
shlb
cmp
out
xorl
pop
out
push
xor
xchg
lret
int3
movsl
mov
rcl
in
xor
xchg
sbb
push
cmp
adc
xchg
sub
into
mov
xor
bound
daa
inc
mull
cmpb
mov
repnz
dec
xchg
push
adc
loopne
repz
jno
aas
arpl
test
dec
gs
jns
loope
int3
add
adc
mov
andl
push
push
push
or
inc
fdivrs
movsb
andl
imul
sbb
aas
scas
std
mov
in
jmp
fisubrs
push
sbbb
add
push
mov
sti
inc
cmp
sub
sbb
add
mov
mov
and
jmp
adc
gs
aas
pop
jb
nop
dec
in
jp
shll
add
or
mov
hlt
xchg
or
jbe
cltd
mov
stos
mov
icebp
and
mov
xor
and
aad
pop
mov
not
out
dec
pop
lret
mov
std
add
xor
imul
daa
lcall
in
inc
add
mov
jne
fwait
test
xor
mov
pushl
aaa
mov
xchg
loopne
loop
cmpsl
dec
xor
dec
dec
mov
or
lods
xor
shl
cld
hlt
je
jg
xchg
dec
gs
mov
jmp
stc
cmp
test
lret
std
fwait
sbb
jbe
dec
push
test
outsb
je
aad
les
popf
ret
ljmp
insl
lret
add
out
sub
or
xor
in
clc
lock
sahf
pop
push
lret
outsl
repz
fsubrs
out
sub
hlt
scas
pop
std
cmp
sbb
jp
inc
fs
and
aam
pop
daa
rep
pusha
imull
pop
leave
sahf
mov
xchg
sbb
cltd
ret
lods
pushf
nop
lods
push
sahf
xor
fistl
pop
shlb
xor
sub
pop
cmp
shlb
cltd
lcall
xchg
cmp
xchg
push
in
dec
lods
dec
xchg
ljmp
push
dec
pusha
lret
cld
jg
pop
mov
fcomip
sub
lcall
enter
ret
or
cmc
sub
and
pop
add
dec
ds
lcall
clc
mov
adc
repnz
xlat
or
call
add
adc
mov
mov
insl
pop
adc
retw
xor
ret
cmpl
xor
cmc
sbb
pop
xchg
in
mov
decl
or
xor
loope
push
int3
adc
movl
ljmp
mov
cmp
stc
xchg
dec
stos
stos
pop
push
push
dec
es
xor
push
mov
adc
rcll
cwtl
cmp
cmp
mov
inc
adc
xchg
inc
outsb
and
psubusw
int3
repz
repz
inc
inc
test
cmc
xchg
mov
mov
push
jno
fldln2
mov
popa
outsb
je
enter
sarb
ja
lds
xor
cmp
dec
dec
nop
push
mov
sbb
cmp
stos
jecxz
shrb
insb
leave
or
jnp
xor
mov
negb
mov
in
jns
sub
sub
addb
cmp
inc
je
test
and
sub
outsb
in
xchg
mov
movsb
push
push
iret
in
add
or
inc
dec
adc
xor
inc
popa
sti
mov
mov
fstpt
mov
adc
xchg
jno
mov
out
stos
sub
jmp
insl
sarl
sahf
add
lds
jmp
inc
xchg
pop
push
ds
pop
push
fsub
cmp
xchg
cmp
mov
test
pop
adc
push
dec
testl
ficompl
loop
je
sbb
filds
fists
fdivp
les
xchg
mov
loop
cmp
stos
ret
pop
cmp
aas
add
inc
lds
testl
sti
pop
iret
daa
and
enter
sub
mov
inc
aad
pop
test
int3
dec
mov
fs
push
push
or
inc
clc
adc
insb
ficompl
or
jg
ret
mov
das
ror
xor
jge
and
xchg
mov
cmp
or
xor
adc
and
inc
movsb
inc
cmpsb
fst
jbe
inc
leave
aad
add
flds
cmpsl
mov
test
add
mov
in
ds
or
mov
xchg
in
sub
loop
lock
imul
in
push
adc
pop
inc
inc
add
out
bnd
arpl
xlat
mov
lret
pushf
adc
scas
enter
pop
or
sub
sbb
imul
fdivrl
lods
fldlg2
andb
aas
or
aas
outsb
mov
imul
inc
into
jmp
aad
push
inc
pop
fnstcw
mov
test
or
pop
test
xchg
movsb
sbb
push
in
cmc
mov
cmpsl
adc
testl
jne
test
xchg
pop
movsl
pop
mov
lds
push
in
cmc
mov
cmpsl
adc
testl
jne
andl
push
in
cmc
mov
cmpsl
adc
and
push
shll
jne
test
xchg
lahf
movsl
das
mov
lds
push
gs
or
and
outsl
stos
sub
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
push
call
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
jbe
gs
push
sti
inc
jmp
xlat
push
call
mov
jnp
imul
xchg
sub
cmp
inc
jmp
fwait
and
shl
pop
in
mov
lds
ja
or
fistl
jmp
fwait
inc
mov
mov
push
fimuls
pop
rcll
sbb
sub
xor
and
mov
adc
pop
movsl
sbb
mov
outsb
sbb
mov
push
outsb
cmp
dec
sbb
ret
jp
mov
and
and
or
or
lds
movsl
push
loopne
pop
mov
or
mov
ljmp
mov
cmp
xchg
xor
fwait
jne
fsubs
adc
mov
movsb
popw
aad
subb
movsl
or
mov
mov
inc
push
jmp
stos
lret
inc
ljmp
sbb
jle
sbb
pop
xchg
cmp
lret
push
sti
inc
jmp
fwait
pop
mov
pop
jg
mov
sbb
inc
sbb
pop
mov
sti
cmp
loop
std
add
dec
mov
mov
outsb
cld
inc
loopne
cmp
and
pop
testl
xchg
adc
push
int3
jne
or
insl
les
or
data16
mov
pop
in
aad
lds
sbb
sub
gs
push
sti
inc
jmp
fwait
and
stos
cmc
pop
in
aad
lds
sbb
sub
ret
mov
cli
out
dec
clc
pushf
adcl
adc
cltd
popa
pop
call
daa
sub
mov
mov
pop
out
cmpsb
adc
mov
fwait
xor
cli
jge
fldenv
fwait
inc
sahf
adc
adc
sub
ds
xor
fwait
push
sti
inc
and
lods
jne
push
movsb
loopne
push
sub
int
and
daa
rorb
add
sbb
push
adcb
outsl
add
mov
dec
es
pusha
xchg
push
lea
dec
xchg
adc
adc
loopne
cmp
jmp
sbb
add
and
cmp
cs
sbb
jbe
pop
movsb
movsb
gs
lret
and
sbbl
mov
mov
aad
pusha
pop
mov
iret
in
divl
or
lcall
xlat
mov
stc
je
mov
fwait
cmp
lds
xchg
jmp
and
jle
insl
xchg
mov
ja
pop
out
add
pop
test
outsb
adc
mov
pop
iret
nop
mov
and
ljmp
aaa
dec
xchg
mov
out
aad
test
pop
in
mov
and
cmp
inc
sub
lahf
pop
push
and
lcall
mov
push
sub
test
jns
push
mov
aad
cmpl
fnstsw
xor
or
icebp
inc
pop
testb
pop
push
cmp
popf
mov
add
sub
push
repnz
xchg
mov
iret
or
mov
dec
dec
push
jp
push
dec
push
add
cmp
mov
int3
scas
not
in
xor
jmp
test
xchg
cmpsb
pop
jl
jo
mov
nop
jle
pop
and
dec
jno
std
lret
jb
mov
jno
jge
out
bound
adc
mov
test
pop
push
dec
sub
jns
cmpb
aaa
jno
mov
ficoml
push
xchg
mov
cld
xor
add
jmp
mov
push
xor
inc
xor
cwtl
mov
mov
mov
cmp
push
aad
sbb
cwtl
jge
in
cltd
test
out
dec
add
or
xchg
and
and
mov
inc
sbb
pop
dec
adc
sbb
ljmp
mov
je
mov
pop
jg
mov
jns
push
pop
and
jno
or
aad
mov
ljmp
and
xlat
movsl
push
and
jge
inc
rcrb
dec
cmp
movsb
dec
dec
fs
loope
adc
xchg
adc
mov
into
push
aad
mov
aad
push
adc
mul
push
test
popf
pop
dec
push
lock
mov
dec
fst
and
push
mov
insl
sbb
dec
insb
inc
mov
in
in
mov
pop
shrb
and
cmpsb
and
xchg
sub
insb
mov
inc
sahf
jno
lret
xchg
xor
into
rcrb
nop
mov
push
sub
ret
addr16
lret
fisttpll
jle
dec
les
xchg
fsubs
subl
fiadds
mov
xlat
arpl
cli
rcrl
xlat
sbb
in
sbb
jl
jno
push
pop
mov
test
add
xor
aam
pop
xchg
cmp
push
fcoms
sub
pop
mov
cltd
add
movsl
lods
neg
das
mov
adcl
xlat
scas
mov
stos
jae
inc
sbb
cld
cmp
cmp
or
js
sahf
cli
add
jg
out
mov
pop
arpl
mov
shlb
pushf
stos
jge
cld
dec
cli
or
xchg
sub
jns
int3
mov
fists
jmp
int
add
push
clc
xor
pop
rclb
cmp
jne
nop
int3
add
dec
fnstsw
mov
rcll
sub
fsub
aad
mov
dec
inc
jbe
pop
push
sahf
jmp
xor
adc
sti
xchg
and
and
and
fisttpll
cmp
pop
dec
fisttpl
jg
mov
sub
jae
cmp
add
ret
sub
pushf
and
int
and
or
loopne
rorb
cmp
mov
mov
fistps
data16
or
push
jno
mov
push
mov
mov
push
loop
or
dec
mov
js
jnp
dec
pop
out
orl
inc
jge
test
cld
lret
mov
push
stos
xchg
popl
into
jle
xchg
insl
mov
in
gs
or
loopne
jo
xchg
ret
cmpsb
shlb
fistps
pushf
mov
push
cmp
sub
cmpsb
call
cltd
insl
xor
shll
cld
jge
les
xor
in
xchg
imul
sbbb
lret
xchg
jae
pusha
ss
mov
out
inc
cmp
dec
scas
test
addr16
sbb
movsb
dec
jle
or
in
dec
adc
mov
mov
mov
cmc
lds
icebp
sbb
in
xchg
fcoml
dec
sbb
adc
pop
cmpsb
jmp
jmp
mov
arpl
cld
adc
sbb
mov
pop
mov
fsubs
data16
repnz
jns
mov
add
sub
mov
ret
jg
jle
popf
adc
mov
sbb
add
mov
int3
arpl
jb
cmp
and
test
out
into
in
das
pop
cltd
jae
dec
cwtl
imul
and
or
std
enter
and
cmp
leave
scas
xlat
fidivrl
xchg
imul
outsb
lret
jb
mov
push
rcrl
rcrl
repnz
sarl
jecxz
xlat
sub
mov
es
cmpsl
mov
sahf
dec
bswap
or
pop
adc
adcl
call
push
push
jo
lea
test
jne
mov
daa
inc
jne
sti
pop
push
pusha
mov
jp
xchg
les
mov
ja
ret
xor
push
dec
sbb
inc
ret
mov
pop
and
or
inc
das
cmpsb
inc
stc
rcrb
dec
add
popa
mov
rorb
cmpsl
push
jg
rorl
out
sub
inc
mov
xor
add
pop
out
push
pop
xor
xor
iret
imul
testl
jb
int
xor
insb
push
mov
lahf
dec
jecxz
out
mov
insl
sar
xchg
insl
xchg
xchg
cmpsb
sti
xor
xor
repnz
pop
xor
ds
shrb
rcrb
lret
pop
and
hlt
xchg
inc
adc
in
addr16
dec
xor
pusha
mov
push
fwait
pusha
loop
dec
sbb
pop
fldl
cvtps2pd
lea
movsl
jno
loopne
stc
cmp
push
icebp
cmp
mov
xlat
addl
pop
scas
ljmp
or
outsl
insl
mov
lds
jl
imul
je
jae
push
ret
jmp
fisubl
loope
inc
fprem1
data16
mov
out
stos
arpl
or
mov
stos
fsts
popfw
mov
stos
push
push
aas
int
mov
xchg
add
mov
mov
nop
cwtl
jmp
mov
iret
loope
sub
negl
mov
mov
inc
sbb
movsl
insb
es
add
sbb
fimull
rcrl
pop
les
ret
add
pop
rorl
test
lret
mov
imul
adc
jo
dec
pop
xchg
or
aaa
xchg
add
sarb
cmpsl
imul
or
or
sub
clc
cmp
push
mov
popf
sti
pop
dec
xor
mov
jl
aam
dec
or
mov
repz
iret
mov
sbb
je
and
xor
adc
pop
lods
js
adc
or
shrl
jno
sub
xor
push
aaa
cltd
and
push
roll
in
rclb
lock
add
jle
sbb
cltd
fwait
in
add
dec
and
test
sbb
fwait
push
push
repnz
out
mov
fdiv
xchg
repnz
insb
jge,pt
jne
push
mov
or
jns
adc
mov
sbb
fdivrs
dec
mov
mov
xor
movsl
jbe
test
inc
aad
adc
pop
push
mov
or
lret
mov
mov
lret
mov
cmpsb
pop
insb
lcall
imul
int
call
loope
and
les
mov
mov
jg
add
mov
ret
push
jbe
and
loopne
cmc
mov
shll
shlb
ljmp
push
lcall
or
fwait
lea
lahf
lret
js
push
enter
pop
push
fwait
jbe
mov
or
out
orb
push
xchg
or
insb
js
mov
out
test
sub
aad
mov
jo
dec
mov
inc
out
jns
dec
pop
rcl
je
adc
out
add
in
popf
fimuls
insb
dec
cmp
sahf
jg
ds
arpl
sub
mov
fs
xchg
fwait
or
jns
mov
cwtl
inc
sub
cwtl
sarb
arpl
jg
mov
push
cwtl
leave
xchg
adc
setge
xor
cmp
ds
pop
pop
adc
arpl
pop
mov
sub
mov
xchg
mul
daa
add
je
or
pop
cwtl
outsb
add
xchg
jl
mov
and
lret
pop
mov
pop
pop
lock
loopne
mov
mov
leave
cmp
rep
pop
mov
aam
inc
push
mov
cld
mov
call
ja
enter
aad
cmpsb
jge
lods
mov
and
pop
test
repnz
push
xor
loopne
pop
imul
cmp
into
cmpb
ret
xchg
nop
jb
adc
xor
mov
inc
popf
cmpsl
sbb
mov
es
imul
out
test
lods
xchg
adc
fs
ret
fcmovb
push
std
ret
js
push
ret
jl
jnp
cmp
repnz
cmp
sub
fs
mov
jecxz
aad
mov
mov
imul
mov
jns
fsub
popf
int3
loopne
stc
cld
mov
fdivp
mov
out
xchg
insl
jle
test
mov
insb
lock
add
jb
inc
push
cmp
cmp
mov
aas
push
cmc
add
stos
sub
std
mov
icebp
cmpsl
sub
movsl
bound
pushl
sub
in
or
cmp
popa
cmp
popf
jb
movsb
fdivrl
mov
test
scas
lcall
ret
test
addl
sbb
push
incb
gs
test
test
in
sub
jmp
mov
in
cmp
insb
pushl
sti
lret
imull
loope
addr16
lret
fisttpl
and
daa
iret
fnsaves
sbb
push
add
and
std
and
movsb
adc
and
add
mov
push
xchg
sar
dec
mulb
xchg
xor
sub
loop
sbb
inc
mov
jae
imul
fimuls
popa
iret
xor
sub
xor
jo
fsub
fisubl
push
jmp
add
cwtl
rclb
sbb
pop
ret
ds
add
arpl
jmp
pusha
xchg
aam
dec
jg
add
mov
inc
lock
je
sbbl
lret
js
cmp
mov
pop
sti
sti
dec
rcrl
into
sub
adc
leave
mov
and
shrd
jb
pop
xchg
push
lock
loope
mov
cmp
cmc
movsl
fmuls
cmp
mov
jmp
cltd
push
push
shll
adc
xor
mov
adc
add
dec
mov
push
enter
jg
jns
inc
inc
orl
lahf
jge
mov
shrb
data16
or
in
mov
stc
jl
popl
cmc
inc
jl
mov
out
dec
cli
fmul
rclb
jbe
adcb
aam
jmp
mov
and
pop
mov
mov
and
incb
sub
xchg
lea
lods
clc
das
mov
cmp
mov
mov
adc
sub
int
inc
adc
push
outsl
push
push
int
pusha
cmp
mov
insl
sar
pusha
sub
push
mov
je
mov
gs
pop
adc
jb
dec
and
nop
xchg
jno
or
scas
add
jmp
cmp
sahf
enter
or
movsb
push
sub
mov
daa
frstpm(287
inc
mov
mov
arpl
ret
xchg
inc
jo
mov
cwtl
int
mov
mov
cmp
fs
loop
shll
fsts
xor
sbb
neg
xchg
cwtl
push
cwtl
mov
es
scas
roll
pmulhuw
cmpsb
jb
or
dec
out
mov
and
aad
add
scas
cmpsb
fistpl
dec
jb
pop
jp
or
das
jae
sbb
in
mov
xor
out
bound
adc
sub
ss
bound
subb
dec
xor
or
xor
inc
enter
mov
xchg
pop
stos
adcb
lock
cmp
xor
adc
jmp
adc
inc
lcall
jae
adc
loop
sub
cmp
sahf
inc
mov
loopne
sbb
lret
outsb
int3
insb
je
inc
xchg
repnz
in
dec
xchg
inc
out
sar
test
xchg
dec
sub
sbb
stos
mov
and
push
inc
fcompl
clc
mov
jne
lret
loop
add
push
shll
jmp
add
sub
aam
rcrl
or
fwait
aas
jle
cmp
cwtl
xor
fs
xchg
pop
and
cmp
pop
subb
bound
aad
ljmp
push
mov
cmc
je,pn
fisttpl
gs
sub
fsubl
aam
add
sarb
inc
mov
xor
sbb
test
arpl
in
mov
icebp
hlt
test
xor
repz
sarl
sub
jl
fbstp
out
mov
sbb
mov
push
sbb
xchg
cmpsb
mov
xlat
mov
ds
pop
push
pusha
iret
xchg
jb
mov
stc
insl
daa
lcall
xor
xor
jecxz
insb
aaa
inc
int
adc
das
lods
imul
in
mov
mov
filds
mov
mov
inc
cmp
and
jo
cmp
xchg
mov
xchg
cltd
sub
addr16
into
idiv
shl
sub
mov
out
add
rolb
add
enter
sbb
cs
je
je
or
leave
xchg
sub
adc
sbb
push
mov
sub
out
jp
das
sub
ljmp
lock
mov
push
addb
cltd
je
loop
jp
stc
cltd
addb
or
jmp
pop
sbb
fiadds
xor
mov
lret
xor
cmp
jl
aad
cld
sbbb
jnp
add
test
push
dec
insl
or
xchg
xchg
aaa
outsl
jno
loop
push
cmpl
pop
mov
pop
cli
push
ja
cld
xchg
dec
adc
xchg
inc
repz
jp
sub
add
addb
lcall
mov
sub
inc
add
add
xor
insb
add
or
xor
jns
mov
mov
ror
roll
pop
stos
xor
push
xor
xor
inc
arpl
lods
inc
dec
dec
loop
xor
dec
shll
dec
js
dec
cmp
roll
mov
pop
mov
in
adc
jb
add
clc
ja
push
add
fnstcw
add
jge
cli
mov
inc
xor
popf
sbb
test
mov
inc
in
data16
nop
mov
nop
testb
test
push
cmp
and
ss
xlat
ds
js
sbb
jle
hlt
imul
lods
scas
jns
mov
sbb
fsubrl
insb
or
pop
cld
shr
outsl
bound
cs
inc
jns
pop
add
and
dec
jecxz
xor
std
mov
adc
xchg
and
cmp
fisubs
pop
repz
in
sbb
adc
lea
repz
add
mov
pop
leave
lret
push
pop
call
testl
jno
lds
repz
ja
lock
jp
bound
and
bswap
or
cmp
in
add
mov
outsb
cmp
adc
sbb
lods
call
test
ljmp
cmp
mov
sub
dec
jmp
xchg
testl
xor
xor
hlt
hlt
lods
mov
sub
ss
jecxz
subl
mov
cmpb
hlt
icebp
sbb
sbb
push
and
inc
sbb
mov
cwtl
movsb
movsb
jns
icebp
gs
movl
jae
fcomps
xacquire
push
add
or
mov
push
lds
loopne
cmp
fildll
inc
mov
push
div
or
jbe
into
idivl
mov
lret
inc
jnp
sub
inc
popa
inc
pop
clc
sub
movsl
adc
adc
and
leave
xchg
sub
or
fldcw
scas
lret
lock
add
sub
xor
cmp
pop
xchg
cmp
cli
ret
xchg
scas
sub
pop
ja
jl
in
ljmp
push
fidivl
mov
rolb
lock
inc
lahf
sub
push
ss
lcall
mov
adc
mov
out
adc
jo
add
je
test
sahf
fs
mov
std
aam
hlt
inc
js
das
cmp
ja
mov
divl
jg
pop
addr16
fistps
mov
lcall
add
or
cs
enter
pop
mov
add
paddw
xchg
sub
mov
sub
mov
inc
rcll
insb
daa
push
lcall
ja
mov
inc
dec
and
iret
mov
or
test
int3
rclb
and
jo
dec
lcall
int3
dec
cmpsb
jmp
pop
aas
dec
pop
nop
xor
mov
cmc
push
test
pop
xor
fbstp
imulb
out
cmp
push
push
push
es
js
mov
and
jmp
lcall
lock
mov
int
push
popf
jp
mov
pop
cmp
mov
pop
mov
lret
stos
pop
out
stos
and
imul
or
mov
xor
sub
inc
int3
cmp
inc
leave
or
repz
pop
mov
movsb
or
lea
adc
inc
jb
test
mov
das
mov
dec
sbb
sbb
mov
adc
bnd
insb
fnop
jb
mov
mov
lret
push
lds
mov
hlt
loopne
in
movsb
or
pop
inc
inc
cmpsl
adc
jmp
sub
add
mov
rorl
push
fildll
push
pop
int3
sbb
mov
pop
mov
dec
loope
fdivrl
call
aam
in
dec
leave
pushf
lret
out
push
mov
mov
cltd
dec
cwtl
push
shlb
cli
daa
and
movsb
test
cmpsb
aaa
js
xchg
idiv
call
dec
pop
push
clc
pusha
push
sbb
into
stc
popf
test
roll
sbb
stos
ljmp
xor
aas
jns
xchg
idivl
fisubrs
adcb
pop
cmp
cmp
or
in
es
mov
mov
loopne
push
pop
cmp
pop
pop
cmp
or
mov
cmpsb
jecxz
jae
add
divl
pop
fsubl
in
sbb
fmulp
xor
cltd
pop
xor
jo
mov
mov
fwait
push
lret
push
xchg
push
ror
in
jp
mov
adc
aas
sarl
pop
sti
stos
push
push
or
mov
push
inc
pop
stos
fstl
andl
pop
pop
scas
inc
lea
icebp
jge
scas
jno
mov
dec
cld
and
inc
pop
stos
loopne
jg
jge
add
and
test
mov
addr16
cmpl
cmpsb
fisttpll
push
inc
mov
js
test
testb
popf
jecxz
or
popa
mov
sub
rep
bswap
cmp
adc
jge
sub
insl
rol
out
fidivrs
dec
enter
cmp
fs
in
jae
pop
fisubrs
mov
divb
leave
bound
jmp
cmp
sbb
lods
mov
xor
outsb
imul
mov
mov
in
pop
test
xchg
fxch
jmp
jno
addr16
jb
pop
inc
or
push
mov
jns
xchg
mov
icebp
lret
or
das
push
aas
and
in
mov
jns
rcrb
sbb
icebp
mov
aaa
imul
cmp
xchg
cli
and
dec
dec
in
in
test
xor
cmp
add
jbe
inc
data16
cmpsb
dec
adc
mov
inc
popa
xor
gs
out
push
lock
xchg
push
dec
mov
clc
sbb
lahf
idivl
decb
hlt
adc
call
xor
mov
push
into
cmpsl
jnp
loopne
mov
and
mov
imul
xchg
add
or
loope
loopne
roll
adc
je
rclb
cwtl
test
clc
outsl
add
enter
cs
inc
scas
sub
cmp
add
cmp
xchg
fidivl
and
xchg
mov
aas
pushf
cs
jo
push
and
mov
inc
rcr
dec
imul
add
jle
cmp
mov
adc
loopne
cmp
lcall
cwtl
fsubs
pusha
fmul
mov
mov
cmp
mov
add
repnz
in
xorb
insb
or
xlat
roll
hlt
bound
mov
je
cmp
mov
pop
jmp
mov
jmp
push
jle
aad
mov
add
push
sarl
xchg
lahf
lods
mov
test
mov
scas
iret
test
mov
or
out
orl
sub
jp
in
push
scas
gs
outsl
dec
js
xchg
fcom
and
lods
dec
dec
jmp
cltd
int
lret
and
pop
int
scas
movsl
push
notb
pop
dec
pop
pop
scas
xchg
jne
cwtl
jo
in
push
scas
iret
inc
sub
out
dec
stos
dec
push
cmpsl
mov
sarb
je
push
inc
inc
mov
lret
scas
mov
push
push
xor
dec
out
xchg
inc
xor
stc
int3
sbb
add
sub
xlat
sbb
int3
add
cmp
es
add
int
movsb
lock
mov
push
xor
int3
aaa
cmp
mov
inc
jmp
fwait
and
stos
cmc
pop
in
aad
lds
sbb
sub
gs
push
sti
inc
jmp
fwait
and
stos
cmc
pop
in
aad
lds
sbb
sub
push
lret
xor
fwait
and
stos
cmc
pop
in
and
sbb
sub
cmp
psubq
xor
mov
sbb
jg
lds
xchg
sub
aam
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
sbb
xor
scas
mov
push
add
xor
jb
andb
xor
arpl
jmp
inc
repnz
add
xor
bound
xchg
xor
pop
rorb
lods
repnz
add
push
fcompl
sub
ror
and
inc
adcb
pop
or
ljmp
jle
xchg
lea
test
and
aas
scas
call
add
hlt
xchg
scas
jmp
cmpl
mov
and
ss
cmp
lahf
in
fadds
js,pn
fisttpll
pop
push
loop
fcomi
pop
add
and
adc
stos
ret
sbb
lcall
mov
outsl
mov
sub
jge
out
enter
jns
fnstenv
jecxz
repz
adc
out
mov
iret
mov
repnz
sub
jecxz
mov
adc
cmp
lock
mov
ja
jle
push
or
ret
sbb
and
sbb
arpl
jae
cltd
repnz
and
xor
inc
iret
push
or
jb
les
xor
inc
xlat
cmp
xchg
mov
inc
in
testb
cli
daa
mov
xchg
andb
andl
test
inc
loop
repnz
addr16
adc
arpl
ja
daa
mov
mov
jmp
divb
mov
ret
jae
inc
repnz
add
xor
jb
andb
xor
arpl
jae
inc
repnz
add
xor
jb
andb
in
mov
sub
xchg
mov
das
in
mov
arpl
mov
es
sbb
cmp
add
pushf
xor
int3
sub
rolb
pop
ljmp
rcrb
dec
bound
enter
fcmovnu
and
push
lret
pushf
push
movsb
push
loope
mov
pushf
cmp
dec
aad
adc
rcrb
cmp
pop
add
push
push
leave
dec
lds
arpl
dec
mov
pop
fsubp
aad
mov
jbe
xlat
xchg
mov
das
and
je
sbb
ret
xchg
ret
or
push
scas
test
xchg
jg
cmp
outsb
in
push
subl
gs
int3
lret
mov
std
push
xchg
mov
fistl
dec
push
jb
les
mov
jmp
jne
pop
or
pop
aas
pop
pop
inc
outsl
iret
rcr
inc
iret
aam
jnp
inc
adc
outsb
xor
pop
inc
test
dec
and
xchg
xchg
repnz
shrl
cmp
push
push
lcall
mov
jl
push
mov
hlt
call
push
jg,pn
and
pop
jge
int3
gs
lods
sbb
cmp
insb
sbb
popa
sbb
cmpb
enter
lds
movsb
rolb
ss
out
xor
xchg
aaa
mov
dec
mov
and
adc
lahf
les
imul
aaa
dec
push
aad
cmpsl
pop
or
bound
and
pop
mov
fucomp
pushf
inc
xor
push
and
pop
mov
lods
mov
xor
movsl
aad
int
mov
or
xchg
lds
out
pop
mov
cli
lret
jle
add
jmp
data16
insb
stc
es
nop
sub
in
push
jp
into
lods
dec
cmp
jb
cmpsl
add
cmpsb
ljmp
add
inc
mov
popf
shl
and
or
fucomip
out
adc
cli
jmp
xor
cmp
fidivrs
pop
jecxz
sbb
test
cs
lds
push
inc
jle
ja
lods
xor
popa
xor
pop
out
into
adc
jg
mov
mov
pop
and
enter
mov
hlt
mov
popf
ret
sub
xchg
loop
inc
call
push
call
icebp
outsl
ja
fstpt
mov
mov
out
addl
pop
data16
repz
sbb
mov
jno
in
dec
sub
mov
das
cmp
mov
mov
mov
movswl
add
jp
add
mov
inc
stos
sbb
mov
cwtl
int
mov
shlb
xor
sti
sub
fildll
jbe
mull
insb
gs
push
or
outsl
fimull
cli
stos
dec
into
and
fs
or
cs
xor
orl
cmpsl
mov
sub
push
jmp
mov
push
xchg
movsb
jp,pt
aas
and
xor
add
mov
cld
ljmp
dec
mov
stc
ja
xor
jmp
ss
int3
loop
clc
fdivr
lret
xchg
mov
inc
clc
cli
mov
fistps
mov
and
call
popf
lcall
inc
adc
and
incb
imul
sbb
aam
loope
mov
gs
jle
cmp
in
loop
pop
dec
std
sub
roll
scas
es
inc
sbbl
add
sub
and
outsl
pusha
shrl
inc
int
mov
aas
das
lods
sbb
mov
je
es
fldenv
sub
sti
nop
push
jae
push
imul
mov
loopne
jp
xchg
repnz
dec
ret
sbb
shl
rorb
adc
arpl
jno
call
into
mov
addl
adc
pop
xor
dec
push
bound
jne
idiv
jns
mov
out
inc
xor
cmp
pop
dec
mov
push
push
gs
or
inc
ret
xor
cmp
ja
sbb
aas
xchg
mov
jle
insb
clc
xchg
adc
negb
sub
sub
cs
lods
mov
jo
loope
xor
int3
shll
js
xor
xchg
push
jns
faddl
push
shlb
int
lahf
fidivs
xor
jg
mov
rol
mov
sbb
jg
mov
mov
pop
ss
aad
or
mov
cmc
outsb
push
mov
fstps
mov
pop
insl
pop
jns
out
cltd
mov
loopne
mov
pop
cmp
int3
mov
sbb
test
mov
loopne
and
test
cmp
jge
cmpsl
fnstsw
jne
in
js
mov
push
mov
call
jb
mov
pop
push
push
xorl
mov
adc
mov
xlat
pop
das
sub
dec
mov
arpl
lods
adc
jge
sbb
lcall
int3
xchg
rol
stc
aam
and
adc
fucomip
pop
std
xor
in
pop
jno
inc
mov
pop
adc
cmpsb
jbe
std
cmp
imul
adc
and
sbb
push
cwtd
shlb
in
iret
pop
and
cmp
and
adc
outsl
dec
lock
out
jle
sbb
cmpsl
lods
cmp
pop
xor
mov
pop
mov
xor
rorb
outsl
aaa
push
adc
pusha
testb
xor
imul
leave
outsl
mov
sbb
adc
clc
insb
cli
sbb
cmpsl
lods
jge
jp
dec
adc
cmp
sahf
sbb
subl
bound
imulb
pop
jae
sbb
repnz
scas
push
icebp
lahf
lret
lret
mov
adcl
ja
call
movsb
addr16
inc
int
shll
mov
and
xlat
sub
int3
push
xchg
pop
and
push
sub
sbb
in
dec
push
aam
aas
add
fisubrl
jecxz
sahf
sahf
sub
dec
in
xchg
cmc
cmp
and
mov
fmul
insb
and
bound
adc
dec
and
pop
jl
mov
in
mov
fcoms
pop
stc
xchg
sub
clc
inc
ficompl
lds
das
jp
leave
and
jo
cmpsb
jo
in
or
adc
ljmp
push
mov
jecxz
arpl
pop
mov
aam
push
pushf
fs
sbb
dec
mov
jb
cltd
sbb
pop
inc
push
cmp
xchg
cli
xchg
adc
mov
inc
sub
pusha
insl
stos
inc
addb
int
adc
jbe
cmpsl
sbb
pop
mov
jnp
jle
in
js
inc
lret
push
in
mov
es
push
push
add
int
repz
cmp
arpl
jo
mov
hlt
in
imul
in
out
stc
loopne
dec
mov
xchg
out
aaa
out
push
pop
repz
faddp
lods
repnz
adc
sbb
mov
push
imulb
mov
ffreep
dec
js
icebp
aam
dec
xchg
mov
dec
jp
roll
imul
sub
adc
jns
scas
push
xchg
adc
cmpsb
fldt
fnstsw
rorl
push
pop
push
or
pop
popf
pushf
pop
xor
pushf
iret
inc
jae
adc
dec
jmp
scas
push
xor
fstl
les
inc
shrb
sub
fdivs
loope
pop
push
and
fildl
add
mov
movsl
sbb
insb
xor
pop
stc
jno
insl
aad
test
adc
in
xchg
ja
fisttps
or
mov
fs
mul
xor
ret
or
lods
mov
inc
adc
loope
les
adc
imul
dec
insb
mov
out
sti
adc
xor
and
push
sbbl
xchg
int3
mov
loope
mov
pop
cmp
nop
out
adcl
iret
loope
in
js
std
fwait
xor
xor
lea
lret
xor
cmp
pop
cli
test
jp
xchg
outsl
repnz
call
mov
inc
add
xor
sbb
and
inc
adc
and
or
push
add
adc
fcoml
nop
mov
inc
repz
inc
rol
cwtl
pushl
mov
cli
sub
js
mov
int3
dec
dec
push
leave
cltd
mov
fmuls
dec
ret
cwtl
insb
push
lea
mov
inc
je
pop
repnz
sti
jmp
dec
sbb
jmp
mov
fisubs
aas
pop
rcrl
aad
jg
iret
je
jmp
xchg
mov
stos
enter
imull
dec
enter
xchg
adc
add
sub
popf
mov
stos
jle
sub
or
int3
dec
and
adc
push
add
lahf
jmp
lea
jp
ret
lea
jo
cmp
vpsrlw
fiaddl
fs
addr16
fcompl
mov
xchg
cmp
mov
add
jg
mov
and
mov
into
xor
xor
adc
sarl
cmp
clc
dec
adc
bound
mov
add
pop
xorb
adc
fs
push
xchg
pop
pushf
in
jns
roll
scas
imul
lret
sub
xor
add
add
in
mov
sub
mov
das
mov
repnz
mov
jb
es
lret
js
cs
pop
rcl
lcall
repz
cli
aad
jle
xchg
push
mov
js
dec
scas
pusha
loop
mov
data16
leave
sub
adc
ss
jb
sub
xchg
pop
adc
xor
cmp
lods
lods
xchg
jno
mov
pop
pop
push
sub
mov
stos
xor
idivb
xor
sarl
ror
dec
pusha
dec
or
push
adc
inc
sbb
std
jl
dec
cs
cmp
dec
insb
jle
iret
roll
add
in
mov
imul
pushf
pop
stos
sbb
push
dec
sub
mov
adc
mov
std
lock
add
sbb
in
and
or
dec
out
xchg
cmp
in
cwtl
xchg
cmc
jle
jg
jno
xchg
add
jne
mov
or
rolb
sbb
jnp
cmp
mov
shlb
cmc
addb
ss
push
loope
inc
repnz
push
fsubrs
fwait
jbe
fldt
test
push
test
and
ror
loope
xchg
lods
fcomi
filds
sub
or
into
mov
out
mov
push
cmc
mov
pop
xchg
cmp
imul
mov
xorb
out
decb
adc
mov
adc
and
mov
and
pushf
in
pop
test
mov
int3
mov
scas
dec
inc
addb
xchg
and
push
lods
or
dec
jmp
add
inc
gs
mov
scas
ret
inc
shlb
icebp
cmp
std
test
push
xchg
sbb
fsubrs
out
lret
stos
inc
imul
jo
outsl
ficompl
push
inc
pop
gs
pop
pop
mov
mov
ljmp
pop
cmpsb
pop
mov
jae
inc
sub
inc
dec
push
or
add
nop
dec
adc
cltd
xchg
test
cmp
dec
fdivl
loopne
movsl
and
dec
dec
mov
icebp
sti
xchg
icebp
icebp
cld
int3
mov
cmc
sub
and
ja
insl
push
dec
out
mov
mov
jne
inc
jbe
and
mov
aad
daa
cli
dec
lcall
fdiv
ss
mov
push
jbe
daa
lea
imul
or
push
pop
mov
xor
xor
cmpsb
icebp
shl
pop
push
sbb
mov
dec
jecxz
dec
mov
test
movsb
inc
bound
std
inc
sub
pop
stos
incb
fsubs
add
loopne
test
into
pop
pop
xchg
sahf
cmp
enter
mov
mov
cmp
cs
sub
pop
cmp
call
loope
xchg
mov
pop
mov
add
jnp
mov
pushf
xlat
imul
repnz
mov
xchg
ljmp
movsl
mov
xchg
pop
mov
shll
idivl
sbb
xchg
pop
sbb
mov
mov
and
rolb
testl
shrl
stos
or
mov
test
mov
inc
out
pop
cltd
mov
sahf
sub
rcrb
lds
jbe
inc
pop
jmp
repz
add
ja
xorl
xchg
add
dec
push
out
add
jp
jle
imul
fmuls
jmp
pop
xor
movsb
or
xchg
scas
push
adc
push
out
xchg
push
cmp
jg
cmpsb
xchg
repz
pop
mov
and
negb
or
js
mov
mov
mov
cltd
push
cltd
lea
shl
ja
inc
fdivrl
lock
insl
mov
adc
insb
cmp
mov
cmp
testb
mov
and
daa
push
dec
cs
push
daa
sub
popf
mov
xlat
or
inc
xchg
aad
cmc
mov
pop
mov
jne
cmpsb
mov
faddl
in
xlat
dec
bound
or
nop
mov
and
jp
xor
mov
push
mov
adc
pop
cmpsl
lods
push
mov
ss
loopne
cmp
faddl
mov
dec
mov
sub
cmp
sub
shl
pusha
mov
fisttps
into
add
fistpl
mov
enter
jmp
mov
aam
push
daa
loopne
pushf
sbb
or
mov
sub
push
addr16
add
fadds
inc
repnz
or
mov
lret
push
dec
jecxz
imul
test
push
jb
xor
inc
cmpsb
pop
mov
pop
rclb
mov
cwtl
xor
daa
pop
fildll
insb
jno
es
je
rolb
arpl
jg
xchg
popf
inc
movsb
rol
daa
sub
sbb
xchg
outsb
out
aad
push
aam
and
je
push
sub
test
jg
pop
fisttpll
mov
dec
mov
imul
dec
and
mov
mov
mov
jl
inc
xchg
fisubl
out
sbb
dec
fucomi
push
pop
out
add
pushf
inc
xor
xor
dec
or
push
leave
push
movsb
loop
xchg
cltd
inc
push
pop
loop
je
jne
inc
cld
iret
push
sub
movsb
adc
push
fsub
stos
sbb
leave
lret
pop
xor
jns
shr
add
xchg
dec
mov
rolb
rcrl
test
pop
jno
leave
cmp
shlb
push
ss
aad
jp
sub
cmpsb
inc
mov
pop
mov
movsb
jnp
mov
inc
mov
adc
sti
inc
mov
pushfw
mov
sub
ds
or
dec
out
pop
fistl
pop
or
mov
test
cmpsl
repz
sbb
xchg
ja
fadd
xor
sub
jge
jge
aam
imul
enter
and
icebp
in
imul
mov
mov
or
push
sti
mov
jb
inc
pop
in
sbb
jmp
sbb
imul
add
sub
lahf
inc
sub
push
fcmovu
mov
xlat
mov
fs
sub
rolb
cli
mov
jg
lahf
xor
movsb
pop
movsb
jnp
cltd
add
mov
cmp
out
movsb
movsl
shl
enter
mov
pop
sbb
fbld
or
fcoml
repnz
in
jb
sbbl
dec
cld
fisubs
out
jp
inc
mov
xor
lods
jge
cli
aas
fst
cmp
push
dec
jo
mov
jnp
iret
adc
je
jp
jns
loopne
outsb
ljmp
xchg
fldl
hlt
aas
rcll
repnz
jp
cld
mov
ret
js
dec
jg
adc
push
pop
fimuls
pop
aam
pop
inc
test
out
jnp
adc
mov
pop
or
push
mov
adc
in
push
jbe
xor
sub
and
ret
mov
or
adc
pop
xorb
push
jmp
cmpb
xchg
sbb
cmpb
jbe
sub
fnstcw
cld
popa
shrl
mov
mov
and
rorl
dec
sub
cmc
jg
lods
test
out
jbe
test
loope
xor
out
cmp
out
push
push
out
dec
xchg
and
push
ret
add
jge
addb
jbe
out
repz
lods
stos
dec
mov
lods
mov
fistpl
pop
aas
incb
mov
push
and
repnz
adc
jle
or
xchg
out
stos
inc
inc
lods
test
ljmp
inc
mov
adcb
jb
lret
negl
mov
lods
adc
pop
or
push
cmp
mov
add
hlt
scas
pop
lods
rcrl
pop
xchg
roll
adc
mov
into
adc
push
mov
push
in
mov
call
stos
adc
sub
addr16
les
ss
pop
push
shrb
mov
mov
push
adc
shl
xlat
and
leave
dec
xchg
add
jp
pop
and
and
out
add
add
inc
push
fidivrs
sub
xor
rolb
roll
hlt
lcall
sarb
jno
cmp
cmp
dec
sahf
inc
arpl
dec
xlat
ljmp
cld
mov
mov
lahf
cli
test
push
cmp
mov
mov
repz
xchg
cmpsl
mov
out
mov
sahf
test
and
push
xchg
inc
sti
mov
mov
or
loope
fwait
enter
push
shll
out
loopne
xlat
cmp
mul
scas
xchg
pop
das
xchg
sbbb
sub
cmpsl
mov
ljmp
cmp
ljmp
inc
sbb
mov
rcrl
lret
add
sub
and
cmp
xor
fnstenv
jl
mov
and
lock
mov
inc
mov
decb
sub
out
mov
xchg
sub
hlt
fsubrs
pop
fmull
or
sub
pop
enter
jae
fnstcw
outsl
mov
sarl
arpl
mov
mov
sbb
aad
jp
fnstenv
imul
add
sbb
fsubl
mov
xchg
pop
cmp
jl
sbb
pop
mov
mov
push
sahf
cli
rcrb
in
in
loope
dec
xor
addr16
fcomps
je
cmp
test
imul
xor
aas
test
sbb
sti
cmp
subb
ret
inc
xchg
ret
mov
movsb
lcall
insb
pop
cmc
inc
aaa
pushf
mov
push
add
cmp
lods
push
adc
cmp
int3
mov
out
jae
jns
std
or
out
xor
pop
cmp
int3
jp
add
cmp
in
leave
repnz
aam
aam
clc
cmc
xchg
movsb
mov
sub
loop
push
xchg
push
mov
mov
xor
mov
fwait
cmp
mov
xchg
divb
jl
pop
outsb
and
mov
adc
pop
xor
scas
push
sub
insb
xlat
sbb
jecxz
out
adc
mov
mov
dec
pop
ss
xor
mov
test
jae
sub
sti
test
fisubl
aad
xor
mov
or
sbb
lret
es
popf
add
lret
xchg
ljmp
push
nop
out
sbb
jne
sti
call
sbb
push
iret
and
fsubrs
ret
mov
cs
jg
test
les
popa
enter
dec
cli
mov
pop
cmp
mov
dec
or
sahf
xor
jge
mov
fstps
cmpsb
xchg
dec
clc
shll
cmpsb
or
outsb
or
popa
jae
pop
test
test
dec
jge
xor
lods
test
pop
sti
pushf
cwtl
test
pop
mov
mov
push
push
daa
mov
outsb
shl
adcb
fsubr
mov
mov
sub
gs
orl
sti
pop
fwait
popf
mov
mov
imulb
daa
mov
fdivr
in
iret
mov
pusha
cmpl
int3
dec
clc
pushf
negb
pop
pop
dec
xor
pop
xchg
icebp
jmp
push
scas
dec
dec
and
mov
stos
hlt
sbb
push
in
rclb
or
setne
cmpsl
movsl
cmpsb
into
movsb
imul
mov
icebp
cmp
lods
cmp
add
and
adc
mov
aad
aad
push
popa
out
loope
mov
xor
inc
and
and
xchg
xor
lods
adc
cld
inc
and
js
mov
insb
add
jp
pushf
sbb
mov
cmp
jne
pop
fnstsw
aaa
pop
xor
jmp
pop
loope
cli
adc
adcb
sbb
lahf
mov
jecxz
jnp
fldt
mov
xchg
bound
or
add
and
mov
test
aad
sarl
mov
sti
mov
mov
enter
les
add
mov
js
shlb
shrb
call
push
fs
add
ficomps
push
cmp
lret
aad
inc
xchg
stos
jo
mov
cmp
fs
lret
pop
and
inc
cli
popa
testl
push
push
mull
rep
stc
ret
lret
jmp
jp
and
pop
stos
dec
shrl
sub
dec
in
inc
ret
dec
cmp
aad
dec
pusha
sbb
pusha
pusha
cmp
bound
cs
xchg
outsl
mov
popa
aad
daa
mov
je
push
mov
ds
or
aaa
pop
pop
int3
loop
shrl
adc
push
popa
jmp
aam
cmp
imul
mov
jle
push
scas
stos
ret
jo
adc
inc
and
scas
cmp
sahf
jle
sub
adc
dec
or
cli
add
ret
mov
pop
xor
or
pop
lret
enter
fbstp
jmp
data16
lods
cwtl
push
cmp
mov
or
popa
xchg
xchg
sbb
vhaddps
cli
ret
insb
pusha
lds
jmp
lock
jecxz
fiadds
mov
sbb
pop
pop
pop
out
hlt
inc
xchg
sarb
addb
xor
jg
xor
lret
shlb
push
pop
xor
sahf
movsb
xchg
rcrb
out
pop
lea
add
xchg
daa
loope
stos
mov
mov
ret
jae
inc
repnz
add
xor
jb
andb
xor
arpl
jae
inc
repnz
add
xor
jb
andb
jnp
jnp
adc
arpl
fnclex
inc
repnz
add
mov
xorl
inc
jecxz
repz
jb
andb
xor
arpl
jae
ret
repnz
add
mov
fimull
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
add
pushf
add
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
aas
add
add
add
and
add
sbb
add
adc
add
or
add
add
add
cld
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
add
add
add
insb
add
add
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
clc
add
add
add
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xchg
add
add
add
lods
add
add
add
les
add
add
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
lock
add
add
add
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
push
add
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
pop
add
or
add
add
add
cld
push
add
hlt
push
add
in
push
add
in
add
faddl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
pop
add
dec
pop
add
pusha
pop
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fadds
add
clc
pop
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
or
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
rorb
add
fmuls
add
call
or
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
