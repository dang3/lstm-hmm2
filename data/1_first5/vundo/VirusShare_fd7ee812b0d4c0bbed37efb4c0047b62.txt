jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
cmp
push
jp
es
and
lret
add
add
add
add
add
pop
push
xor
xchg
add
add
into
add
adc
add
add
add
pop
xor
and
add
add
dec
add
jne
lret
add
in
add
add
add
add
insl
add
add
add
add
add
add
add
add
add
add
iret
add
in
add
add
xchg
and
add
jae
dec
add
add
popf
add
add
add
jo
xor
jb
jae
into
add
mov
test
inc
add
dec
add
mov
loope
add
mov
add
iret
add
in
add
add
add
push
add
xor
jae
xchg
add
add
popf
add
add
pop
xor
push
add
mov
jo
mov
add
xchg
add
int
stc
add
add
add
add
jns
or
filds
out
add
add
xchg
add
add
bound
jo
mov
add
add
add
or
popa
add
jo
add
add
add
add
insl
add
add
add
dec
add
out
add
add
add
add
push
add
add
or
dec
add
add
jo
or
out
out
add
add
add
push
add
add
jns
add
add
add
add
or
pop
add
jo
in
add
fildl
xchg
xchg
add
add
add
jns
popa
add
add
add
jo
jne
mov
add
add
and
js
mov
addb
pop
add
add
add
cs
add
add
xchg
add
add
add
addb
add
dec
add
add
lahf
add
add
add
add
jo
mov
add
add
add
add
add
dec
add
add
add
mov
add
add
add
sub
filds
or
add
add
add
inc
add
add
add
add
add
add
jne
dec
add
add
add
add
add
add
sub
add
insb
add
add
add
stos
add
add
mov
adc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
mov
adc
cmp
add
adc
lcall
add
add
add
mov
pop
add
add
add
add
flds
flds
xchg
add
mov
rolb
add
add
cmp
lret
pop
jo
and
stc
add
add
add
push
add
add
adc
fildl
mov
add
pop
add
add
add
ds
add
add
mov
add
add
add
adc
add
add
add
flds
or
stos
add
add
add
add
filds
push
add
add
fiaddl
jecxz
jae
cmp
push
add
add
add
add
add
add
pop
add
jo
inc
add
add
add
cli
sbb
pusha
sbb
or
int3
mov
rolb
outsl
pop
mov
out
es
les
lds
jp
mov
popa
nop
or
xor
and
ret
dec
neg
push
pop
mov
rclb
or
cli
xchg
mov
jle
decb
out
add
les
inc
add
cmpsl
pop
mov
or
outsl
jo
mov
imul
cmpsb
pusha
mul
dec
jl
stos
aam
mov
in
movsl
lock
rcll
xchg
jg
enter
xor
sub
and
pusha
xor
xchg
push
push
or
mov
adc
fcoms
andb
shlb
and
xchg
sti
adc
int
stc
lcall
xchg
popf
mov
or
movsb
xchg
push
mov
add
fistpl
stos
repz
xchg
lret
push
sahf
mov
push
xchg
das
dec
scas
dec
out
out
mov
in
xchg
insb
shlb
sbb
leave
push
adc
xchg
xchg
jp
in
push
ja,pt
mov
cmp
add
mov
mov
mov
jns
lahf
je
call
mov
out
int3
shrb
push
inc
cmpsl
mov
into
add
lret
push
mov
into
and
sbb
mov
pop
pop
addb
sub
into
es
mov
jecxz
jle
cs
scas
jmp
test
nop
jecxz
ficompl
leave
sub
jp
push
aam
lret
in
jp
mov
cmp
and
xor
scas
jae
xchg
out
inc
xchg
cmp
jmp
sbb
xor
out
mov
js
cs
sahf
sbb
or
push
popa
jmp
imul
sahf
out
movsl
pop
mov
xor
in
xchg
aad
jnp
shrb
jno
and
and
dec
es
add
jbe
xor
shrb
push
xor
out
test
ja
push
sub
jg
xchg
divb
rcrb
fsub
stos
cmp
movsb
loop,pn
add
xor
fdivl
negl
mov
inc
sub
add
mov
inc
sbb
outsb
push
lds
ret
shr
pushf
mov
sub
sbb
mov
inc
mov
sbb
lock
fmull
pushf
pop
jl
out
dec
inc
or
cmp
dec
add
fwait
stc
cmc
frstor
loop
adc
adc
and
mov
push
and
lds
call
mov
adc
ret
in
mov
mov
jbe
cli
pop
xchg
ret
mov
mov
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
and
xor
add
adc
xlat
sub
mov
xchg
not
rcl
and
xor
add
adc
arpl
jbe
inc
push
cs
mov
addl
test
rcl
cmp
sub
sbb
or
jp
imul
push
push
mov
hlt
jmp
jecxz
pushf
mov
dec
push
pop
jg
outsb
gs
xor
jae
int
frstor
dec
lret
out
jmp
repnz
dec
loop
mov
pop
scas
xchg
dec
data16
dec
pop
rcrb
repnz
jecxz
ret
sub
fsubl
iret
cmp
insb
push
adc
mov
add
lock
cmp
repz
ret
inc
shrl
arpl
adc
cs
inc
pushf
lds
mov
pop
mov
mov
insb
jbe
out
or
rcl
jae
mov
fwait
pushf
out
imul
sub
jbe
pop
jne
cmpb
sbb
ret
sub
mov
in
push
pushf
addr16
mov
pop
adc
in
jle
andl
rol
ljmp
push
je
arpl
inc
dec
push
mov
xchg
neg
sarl
pushw
addr16
adc
adc
add
jecxz
loop
movsl
xchg
xchg
mov
mov
push
insb
arpl
jae
inc
das
add
loopne
iret
adc
repz
cwtl
divl
bound
outsl
je
jae
dec
jae
inc
inc
push
push
mov
xchg
test
rcl
and
xor
add
adc
arpl
jbe
inc
push
push
mov
xchg
test
rcl
and
sbb
mov
adc
pusha
jl
push
ror
and
sbb
xchg
repnz
mov
movsb
and
dec
xor
scas
repnz
pop
popl
xlat
inc
iret
out
fs
and
push
sbbb
int3
test
nop
mov
mov
xor
rcrl
dec
pop
sbb
push
mov
inc
and
aam
arpl
xor
daa
pop
or
mov
cs
add
or
leave
jo
and
push
fs
mov
pop
leave
sbb
in
js
rcr
int3
daa
sbb
sti
idiv
psubusw
jbe
das
add
xor
mov
or
out
jp
mov
aaa
push
inc
test
mov
addr16
repnz
imul
fbstp
aas
ret
and
xor
cmp
dec
rorl
inc
sbb
pop
data16
fstps
mov
rorb
cmp
jge
pop
lret
lods
aad
jg
adc
loope
or
mov
out
dec
aad
mov
sbb
jns
push
lods
push
scas
mov
or
cmovge
clc
dec
sbb
scas
pop
int
lahf
clc
jae
sbb
sub
sbb
into
mov
and
dec
jno
out
or
mov
sub
sbb
dec
sub
dec
das
sbb
inc
mov
shlb
xchg
push
push
and
add
fisubrl
ret
mov
jae
inc
xor
nop
and
leave
sub
addl
gs
adc
cmc
mov
jle
xchg
adcb
push
sbb
lahf
fsubl
aas
aaa
stos
lahf
xchg
or
xor
push
dec
cli
jl,pn
das
sbb
mov
es
or
test
add
pop
cmc
scas
movsl
jge
xchg
cmp
xlat
movsb
stos
fmull
bound
mov
cmc
dec
into
shl
ret
popf
push
cmp
jmp
ljmp
inc
push
lods
lods
mov
lahf
pushf
popf
adc
popa
mov
int3
adc
jp
cmp
es
push
hlt
icebp
pop
push
pop
scas
leave
lock
in
pop
imul
popa
xchg
mov
mov
or
push
and
cli
sbb
push
cmc
mov
leave
dec
mov
mov
mov
shl
pushf
inc
sahf
dec
pop
inc
popa
js
aaa
negl
scas
ficompl
mov
jle
enter
cltd
lea
mov
arpl
pop
int3
rorb
mov
mov
ljmp
xchg
cmp
lock
lret
push
cmp
mov
push
sahf
ss
aas
mov
jno
aad
leave
sbb
dec
or
jge
mov
sub
cld
addr16
addr16
jge
jp
jb
fstps
adc
mov
test
xor
sub
adc
or
xor
fsubrl
fstps
adcb
and
push
aaa
cmp
mov
xor
push
and
cmc
cmp
mov
push
stos
ds
outsb
mov
loopne
aas
stos
imulb
cmp
iret
insb
sbb
daa
xchg
mov
fildl
dec
mov
mov
lock
rclb
mov
ds
pop
pop
mov
pop
mov
xlat
lcall
jmp
pop
aad
ficompl
addr16
inc
outsl
mov
das
loopne
xchg
int
clc
cmp
xchg
je
xor
mov
mov
mov
jmp
loopne
sbb
mov
inc
enter
aas
push
rolb
cmp
cld
xchg
out
outsl
ss
cmp
ret
pusha
and
aam
add
lahf
jl
jno
dec
jl
push
and
mov
ret
jns
ja
fdivl
data16
ret
fldcw
ret
cmp
xor
lock
or
add
repnz
and
ds
repnz
fadd
mov
mov
enter
mov
imul
dec
xor
push
mov
sbb
popa
sbb
rcll
mov
cmpsb
jo
inc
xor
mov
aaa
repnz
ror
and
xor
mov
mov
push
int3
cld
lret
pushf
icebp
lret
pop
push
pushf
xchg
and
pop
push
xor
std
out
mov
and
push
daa
adc
jmp
inc
stc
push
mov
cmp
jo
stos
xchg
mov
mov
fdiv
cwtl
lods
jmp
test
jo
mov
mov
repz
inc
aam
dec
pushf
xchg
ret
mov
fs
jge
xlat
in
mull
fwait
or
out
xor
lahf
inc
pop
lahf
insl
dec
cwtl
ret
or
shll
hlt
sbb
outsl
mov
outsl
jmp
dec
fdivs
enter
stos
cltd
cltd
jle
add
arpl
sbb
cmp
mov
loop
xchg
push
test
inc
int3
in
out
gs
lahf
or
push
mov
rorb
fadds
dec
fwait
xchg
xor
inc
or
cs
xchg
pop
cmp
cmp
cmp
in
mov
jbe
pop
push
insl
sbb
divb
inc
enter
push
xor
jno
bswap
fisubrs
xor
push
out
fistpl
out
inc
js
push
adc
dec
xchg
lahf
xor
adc
ret
inc
dec
jae,pt
lock
aam
dec
cld
mov
jo
call
push
push
loopne
aam
add
mov
outsb
lcall
pop
jmp
jp
xchg
and
xchg
dec
sbb
pusha
std
push
cmpsl
gs
mov
jnp
dec
cmp
jmp
pop
ficomps
dec
rcr
fs
stos
cmp
jle
rcr
stos
fwait
pcmpeqb
jl
sub
insb
push
pop
ret
mov
in
rorl
xor
sarb
mov
or
les
xchg
push
xchg
or
push
or
jmp
lods
out
stc
stos
ret
pop
lcall
xor
pop
and
mov
fcompl
mov
or
cltd
stc
in
insl
in
push
in
lods
je
fdivrs
imul
orb
mov
popf
negb
and
pop
cmp
inc
cmp
xor
dec
dec
ret
adc
xchg
adc
mov
ds
movsb
push
std
xchg
inc
push
pop
gs
jne
or
push
sub
and
adc
loope
and
cmpl
cmp
pop
shlb
dec
push
push
jne
sbb
push
lds
dec
and
orb
push
popa
push
pop
jecxz
sahf
xorb
rorl
xor
xchg
and
and
pop
jle
add
out
fcmove
xchg
repnz
sbb
and
push
repnz
cmpsl
push
cmpsb
inc
push
jo
add
or
jbe
sbb
enter
push
pop
pushf
cmp
imulb
test
pop
out
scas
lret
pop
ret
je
cmp
jbe
pop
xor
pop
mov
inc
faddl
testb
mov
xor
cmpsb
mov
lods
mov
popa
stos
jbe
cmp
iret
mov
rorl
mov
stc
loop
adc
gs
inc
xchg
xchg
fwait
sub
mov
jge
in
mov
daa
les
and
mov
adc
lcall
fucomp
mov
jno
mov
push
ja
out
mov
inc
dec
add
xchg
daa
in
push
rorb
pushf
xorb
push
pop
adc
sub
inc
push
jmp
clc
sbb
mov
icebp
loope
lahf
dec
mov
mov
sbb
loopne
jnp
sbb
test
mov
sbbl
jb
mov
inc
fdivl
ret
and
or
movsl
dec
push
and
lret
call
in
xchg
stc
fimuls
push
int3
cmp
sub
add
imul
and
in
push
push
adc
sarl
and
aas
push
arpl
adc
fwait
dec
mov
repnz
repnz
sbb
ds
inc
mov
dec
rcl
jecxz
orl
xchg
and
add
jnp
aad
push
add
dec
sub
xor
dec
movsl
pop
adc
int3
mov
outsl
add
push
dec
mov
sbb
aam
mov
push
mov
or
jo
pop
ds
std
and
loop
pop
push
mov
shr
pop
sbb
rolb
fsubrl
or
fsubrl
jae
dec
cmp
push
mov
mov
sub
leave
out
xor
stos
loop
xor
xor
sub
sti
int3
mov
and
xchg
sub
mov
insl
pop
dec
test
mov
push
pop
and
adc
lcall
aad
mov
push
lods
inc
push
pop
push
dec
pop
test
in
addr16
sbb
sbb
notl
jb
mov
lcall
loope
cmp
mov
rcrb
imul
lea
jne
and
lock
xor
popf
add
div
cmp
inc
mov
dec
mov
popa
add
mulb
cmp
data16
loop
rcrb
mov
jne
xchg
testl
cltd
icebp
ret
das
xor
cmp
pop
inc
and
cmpsl
test
mov
data16
inc
cmpsl
les
fimull
faddl
popf
mov
sahf
or
mov
mov
subps
inc
cmp
outsb
jno
out
mov
add
fs
in
cld
mov
fs
fimull
sti
mov
arpl
mov
pop
jle
xchg
imul
mov
mov
ja
mov
les
sahf
sub
in
adc
cmpsl
sbb
je
pop
jge
push
or
loope
cmp
lret
test
dec
push
jg
pushf
or
inc
push
pop
pop
mov
push
jmp
xchg
mov
int3
jl
fwait
shll
mov
mov
jb
xlat
jle
dec
cmpl
push
repnz
pusha
fwait
cmp
addl
and
out
rcll
and
les
xchg
jle
sbb
cmp
jmp
out
push
ret
cmc
jp
or
enter
ret
pop
lods
mov
pop
mov
inc
popa
loope
ljmp
push
stc
adc
lods
les
roll
cld
adc
stos
jo
fisubrs
pusha
cmpsb
lcall
scas
repnz
imul
jl
and
hlt
xor
aad
hlt
mov
inc
jne
testl
aam
or
outsl
shlb
xchg
je
lret
jnp
dec
cmp
jnp
das
insl
push
or
stos
scas
mov
adc
ret
out
mov
cmpsl
je
inc
pop
and
test
or
in
fwait
loope
roll
aas
lret
sbb
add
outsl
mov
or
xor
outsl
inc
fidivrs
popf
sbbb
insb
movsl
sub
sbb
subb
mov
pushf
jge
lds
pop
pop
jmp
pusha
pop
loopne
push
sub
xor
adc
fstps
jno
xchg
sbb
lahf
push
arpl
or
iret
and
lret
movsb
pop
adc
and
mov
adc
cmp
jl
lods
push
or
shr
or
jb
stos
pop
mov
insl
repz
pop
jge
lock
inc
iret
ss
in
shlb
sub
jo
clc
push
sahf
mov
fildll
or
mov
aaa
xchg
sub
loope
or
jns
mov
std
out
cmp
flds
in
push
cmp
mov
mov
add
out
pop
imul
call
nop
pusha
add
in
loope
hlt
xor
imul
sub
lods
mov
dec
adc
lret
lret
mov
loope
add
cmpsb
cmp
jmp
fldl
inc
stos
or
dec
or
iret
pop
clc
or
fs
fsubs
es
and
in
inc
stc
inc
sahf
aad
addb
or
test
out
sub
sbb
andl
ret
pop
jne
repz
fists
mov
jb
push
int3
out
jns
cmp
pop
jge
push
mov
andb
sbb
outsb
fistpll
push
xor
mov
insb
jl
or
and
cmpsb
iret
lds
push
js
inc
ret
fstl
fdivrs
int
cmp
je
pop
pop
or
jp
fwait
cmpsb
mov
out
sbb
arpl
mul
sbb
popa
fistl
lret
bound
fidivl
nop
mov
jmp
insl
lret
js
or
inc
lods
push
jecxz
dec
dec
xchg
insl
and
rcrl
fldcw
ja
roll
stc
loope
std
fdivrs
nop
loopne
jg
rcll
jbe
mov
loop
sub
cld
mulb
ja
outsb
out
xor
loopne
out
adc
int
sbb
iret
imul
leave
xchg
addb
lret
into
or
cmp
adc
pop
fldcw
pop
dec
lcall
inc
push
mov
sub
pusha
xor
in
jnp
inc
sbb
notb
fstps
call
or
leave
inc
ret
xchg
jg
lods
pop
popa
mov
daa
push
xchg
add
adc
mov
push
scas
aam
dec
call
mov
xor
sbb
jns
add
out
shll
pop
out
and
mov
mov
xchg
fildll
popf
sti
adc
into
cmp
imul
xor
in
mov
and
sub
jp
icebp
icebp
fstpl
fwait
lock
mov
add
sub
jg
int3
gs
jno
andb
push
cmp
sbb
mulb
and
or
push
fisttpll
or
cs
pop
add
lahf
ret
sub
fdivp
fidivl
gs
inc
outsb
iret
in
roll
test
std
insb
lcall
cmp
jmp
xchg
daa
xchg
aaa
cmpsb
mov
xorl
jmp
lock
mov
xor
sbb
cmp
cmc
loop
int
outsb
nop
sbb
xchg
ret
sub
scas
lds
sahf
rdpmc
pop
loopne
iret
mov
pop
cmp
cmp
cmp
sarb
mov
sub
adc
jns
inc
or
lret
jg
enter
xchg
out
nop
pop
shll
cmovp
push
mov
push
gs
pop
icebp
xor
leave
repnz
jmp
xlat
sbb
push
testb
loope
jne
sahf
std
cmp
jp
lock
shll
push
adc
xor
imul
adc
icebp
mov
xchg
ss
push
cwtl
callw
loopne
popf
add
rcrl
cmp
add
xchg
call
jbe
push
leave
or
push
cmp
out
and
sub
mov
jecxz
cs
fisubs
cmc
add
lds
insb
testl
sbb
aas
lods
sub
nop
xchg
push
adc
pusha
int3
jne
fistpll
pushf
pushl
jmp
cmpsl
test
jo
daa
add
push
sarl
ffreep
lock
mov
arpl
fdivrl
cmpsb
movsl
and
mov
xchg
adc
cmpb
xchg
and
cmpsb
test
lahf
cs
out
dec
push
int3
test
push
mov
testl
adc
hlt
and
popa
jp
rorb
inc
rcll
xor
popf
bound
sub
aas
cmp
aaa
das
jae
and
inc
cld
push
pop
movsl
mov
test
fwait
popa
add
pop
or
es
xor
push
cmp
loope
repnz
movsl
sub
xor
dec
add
int3
add
and
jmp
mov
leave
push
mov
cltd
inc
shl
aad
push
jge
bound
cltd
fistpll
aaa
fdivr
dec
jns
scas
push
xchg
pop
daa
cmp
jne
sub
int
mov
mov
bndldx
test
ret
xor
push
pop
adc
adc
jl
inc
outsl
push
outsb
xchg
dec
inc
fwait
jo
arpl
cltd
popa
fs
adc
scas
inc
stc
xor
jle
xlat
or
repnz
push
inc
lds
test
movsb
fcompl
rolb
sbb
iret
ljmp
daa
push
in
rcrb
dec
add
add
xor
data16
ficoml
push
test
cmp
stos
add
jne
aam
cwtl
mov
stos
push
pop
add
push
sbb
ds
and
push
popa
in
mov
leave
les
mov
sbb
mov
popa
out
les
test
jns
filds
loope
sbb
xchg
xor
data16
dec
lea
xor
dec
jb
pop
jns
lods
mov
aaa
mov
popf
mov
mov
mov
sbb
vpmaxub
inc
daa
enter
es
data16
pushf
stos
xchg
mov
cmp
aaa
or
psubusw
pop
int
jle
mov
iret
pop
out
add
sbbl
jecxz
in
xor
cmp
inc
dec
push
ss
adc
in
pop
add
adc
fsubs
xor
out
stos
cmp
pop
inc
inc
je
mov
pop
std
popf
movsl
mov
scas
cmp
xchg
repz
mov
xchg
push
sub
sbb
outsl
iret
sub
jno
loop
push
or
loop
push
jle
fists
jle
sub
ja
ja
mov
rcll
lcall
mov
outsl
cli
cmp
xchg
jp
or
sbb
and
test
inc
into
adc
adc
cmp
ljmp
push
in
int3
lds
pop
pop
ss
out
push
add
mov
mov
pop
popl
push
xchg
xchg
push
addr16
pop
mov
cmp
xchg
out
lahf
jne
and
mov
stos
std
out
test
xor
pop
inc
add
outsl
pop
cmc
in
add
out
jp
in
mov
jp
jecxz
imul
andl
or
mov
add
push
fdivs
inc
pop
push
mov
and
ljmp
out
or
popa
jge
mov
pop
pop
stc
adc
sbb
inc
inc
push
jl
xor
xchg
push
stos
fdivs
sub
cwtl
mov
or
fists
das
nop
inc
addr16
xchg
pop
dec
shll
mov
lods
in
mov
cmp
iret
dec
xchg
xchg
jo
adc
repz
push
hlt
rolb
std
inc
mov
sub
jns
sti
jle
fwait
push
cmp
mov
orl
std
sbb
movsl
push
sub
test
mov
pop
pop
pop
neg
cli
mov
cmp
imulb
sub
pop
mov
push
mov
push
or
and
fisubrs
out
jge
xchg
and
aad
jp
adc
sub
icebp
outsl
cwtl
add
fs
fldt
sub
icebp
lahf
mov
fwait
test
and
jo
sbb
sub
xchg
push
gs
xchg
jb
fmull
push
fs
cmpl
hlt
lret
leave
pextrw
data16
cli
repnz
dec
mov
pop
sub
int3
jp
dec
mov
call
cmpsb
fcomp
aas
ljmp
sbb
cltd
cmpl
pop
mov
fwait
std
fnstsw
lds
movsl
pop
and
cmp
xchg
leave
fucomip
push
into
inc
jno
mov
jo
clc
dec
xor
mov
xor
cmp
js
or
sub
movsb
pop
add
pop
jp
xor
xchg
repz
jb
inc
icebp
mov
sub
and
inc
xor
in
daa
out
and
addr16
add
cli
inc
je
cli
das
pop
mov
dec
inc
scas
es
cmp
cltd
mov
mov
mov
loope
in
inc
loop
mov
push
push
cld
add
nop
stos
dec
jb
outsb
movsl
cmpsb
mov
sti
movsl
inc
cld
sub
push
sub
arpl
lahf
inc
or
test
jnp
pop
repz
in
repz
shrl
push
imul
lret
ljmp
cmp
testb
cmp
pop
jge
js
cld
pop
mov
sti
je
pop
and
imul
push
psrlq
imul
cmp
andb
xchg
ret
cli
int
insb
in
pop
mov
pop
lcall
les
mov
sbb
int
jle
gs
dec
cld
in
cmp
cli
test
pop
xor
fstpl
pop
jl
out
pop
push
mov
sub
mov
add
aam
insb
fimull
call
push
test
je
out
sahf
mov
pop
daa
pop
or
mov
cld
test
push
adc
adc
cld
into
and
mov
gs
push
cli
mov
lods
movsb
test
cmp
xlat
icebp
push
call
push
jo
sub
imul
push
inc
jne
push
cmp
or
adc
arpl
jbe
inc
push
push
mov
xchg
test
rcl
and
xor
add
adc
arpl
jbe
inc
push
push
mov
xchg
test
rcl
and
xor
add
adc
arpl
jbe
inc
push
push
mov
xchg
test
rcl
and
xor
add
adc
popa
data16
ret
inc
rcll
cmpsb
dec
sbb
xchg
or
sub
je
xchg
inc
sbb
add
push
test
movsl
cld
shr
sub
cmc
leave
in
adc
or
pop
jne
dec
jmp
mov
vpmaddwd
in
mov
ret
lahf
scas
iret
push
imul
push
mov
aam
xlat
flds
mov
inc
pop
data16
repnz
sub
pop
testb
push
stos
jp
testl
leave
pushf
or
scas
xor
inc
sbb
inc
xchg
into
jb
int
cmp
dec
cmc
jl
js
pop
jle
test
jge
pop
sbb
icebp
mov
jno
stc
xchg
push
xchg
data16
pop
push
es
and
add
js
xchg
jne
mov
call
mov
movsb
je
jmp
int3
or
cltd
mov
enter
ljmpw
cltd
jns
stc
shlb
mov
mov
mov
cli
out
lods
cmc
hlt
sbb
fs
push
aad
arpl
sbbb
and
jns
sub
testl
xchg
cltd
cltd
jmp
lods
xlat
dec
adc
addr16
pop
lock
dec
add
and
call
nop
xchg
xchg
cmp
inc
pop
inc
ret
pop
or
xor
hlt
call
xchg
mov
mov
imul
inc
pop
jne
gs
mov
movsl
stc
aad
vpmaddwd
in
adc
or
pop
jne
gs
mov
movsl
stc
aad
vpmaddwd
in
adc
push
lret
xor
cmp
jne
dec
cmc
xor
xor
icebp
fcom
push
ss
sub
pop
in
mov
mov
mov
push
js
hlt
adc
jo
push
push
add
repnz
scas
in
xor
stc
int3
mov
adc
dec
addb
push
pop
add
mov
lea
pop
lock
mov
je
adc
mov
cltd
push
push
push
outsl
sbb
push
or
cmp
pop
shr
int
in
das
in
and
lret
je
jns
clc
faddl
mov
push
mov
dec
inc
jns
sbb
xchg
fidivs
movsb
fucom
mov
insl
loopne
xchg
jnp
mov
outsb
test
mov
addb
les
clc
mov
sar
jg
stos
or
dec
jle
aam
lods
cli
hlt
mov
jne
pushf
scas
pop
dec
sti
xchg
or
lahf
mov
inc
mov
or
and
push
add
push
xor
mov
push
int3
sbb
mov
mov
movsl
and
lods
jge
iret
sarb
mov
imul
push
aam
xor
mov
das
lock
push
adc
add
mov
jge
and
dec
je
mov
or
fimuls
out
push
and
popa
jge
inc
sti
roll
jp
pop
imul
stos
push
fisubrs
xor
push
jb
xchg
push
xorl
movsl
in
xor
sub
imul
ficoms
cmc
mov
push
adc
mov
add
sti
lret
mov
adc
cltd
jns
xchg
in
aam
jge
cld
lds
cmp
aaa
pop
adc
sbb
or
les
cli
mov
xchg
dec
add
mov
into
stos
push
xchg
mov
dec
std
lea
add
mov
popl
test
sub
lods
jbe
inc
jmp
fsubrl
lock
push
pop
lock
xor
pusha
sbb
adc
rclb
pushf
aaa
rclb
or
adc
mov
outsb
mov
in
sbb
cmp
fidivs
jbe
fisttps
xchg
add
cmp
pop
xor
lods
add
imul
in
jae
stos
fcom
das
cmc
jo
or
xor
fs
push
mov
ror
jnp
test
cmp
dec
sub
lahf
add
mov
inc
xchg
call
movsl
lock
in
xchg
inc
leave
inc
out
cltd
mov
inc
imul
insl
add
adc
stc
aaa
jns
iret
ss
sahf
dec
ret
dec
jno
repnz
aaa
fcomps
aas
push
pop
jo
mov
or
mov
test
test
sub
sub
mov
rorb
loop
inc
fidivrl
cmp
sub
pop
dec
sub
insb
test
gs
pusha
xchg
push
fs
inc
xor
cmp
and
ret
mov
and
add
inc
in
push
xor
popa
stc
and
xchg
rorb
int
jmp
or
mov
mov
jno
push
cmp
jae
inc
rolb
rcl
dec
xor
xor
ret
mov
xchg
mov
sarb
mov
sbb
push
idiv
cmc
dec
jbe
dec
jne
xchg
shlb
ret
xor
sub
jns
movsb
mov
sub
pop
mov
arpl
fs
dec
pop
or
stc
int3
outsl
push
mov
sbb
add
iret
outsb
xchg
mov
aaa
lea
movsl
popa
mov
insb
enter
xchg
xchg
jp
popa
push
addr16
ds
enter
pop
bound
sbb
mov
dec
leave
aam
icebp
xor
sti
pop
pop
or
sbb
lcall
lea
data16
sbb
push
xchg
std
dec
outsb
cmpsl
and
call
push
cmp
jne
popf
pop
mov
and
notb
sbb
xor
push
push
xchg
lock
mov
subb
push
mov
insb
xchg
xchg
daa
xor
ror
push
jb
and
loope
inc
xor
iret
add
test
mov
sbb
das
cmp
fstps
loop
inc
lods
lds
incl
mov
lea
cmpsl
in
insl
jecxz
loop
lock
in
dec
daa
inc
sub
fstl
fcoms
mov
incb
mov
dec
cmpsl
inc
das
sub
cmp
in
scas
push
mov
sbb
lret
xor
mov
sahf
andb
push
imul
cs
enter
pop
dec
lret
mov
sub
loopne
rcrb
aas
jns
mov
pop
sti
jge
xchg
jl
outsl
inc
pop
mov
out
xchg
pop
push
and
pop
ljmp
fs
int
sub
ds
out
push
sub
pusha
push
popf
mov
pop
dec
mov
or
fimull
or
jg
cmpsb
mov
mov
mov
xchg
addr16
loopne
sub
mov
repnz
jmp
push
in
jmp
lcall
int
cltd
inc
repnz
mov
lock
sbb
inc
aam
sub
js
mov
inc
mov
cmp
ret
push
or
out
or
mov
jbe
pop
cmp
es
jmp
shr
sahf
dec
push
lock
jl
out
push
add
push
enter
loope
xchg
and
shlb
insl
push
je
testl
or
std
dec
dec
dec
mov
insl
dec
sub
mov
enter
pop
in
jg
ret
icebp
inc
xchg
idivb
cld
mov
push
dec
jmp
push
push
shr
mov
mov
or
pop
test
jle
clc
inc
add
insb
mov
dec
out
pop
andb
jo
add
and
mov
inc
les
jae
jb
cmp
jmp
adc
add
test
jg
jae
out
and
sbb
jno
xor
outsl
inc
cmpsl
aam
mov
adc
inc
cltd
test
andps
and
add
sub
into
add
sub
pop
dec
cltd
pop
dec
test
pop
imul
inc
pop
cli
jns
in
mov
js
cs
lods
pop
mov
and
or
rorb
mov
dec
movsb
cwtl
xor
adc
cmpsb
jns
inc
iret
test
bound
mov
aam
inc
and
pusha
pop
pushf
and
pusha
dec
rcl
lods
sbb
fs
sahf
popf
mov
js
daa
pop
jl
fcos
pop
cmpsl
mov
xchg
sub
add
js
mov
fisubrl
mov
xchg
mov
push
cmp
nop
and
out
loopne
ss
pop
cmp
insl
cmp
and
imull
adc
push
sub
fwait
mov
or
pop
push
sub
xchg
xor
stos
pop
nop
rol
jne
mov
xlat
or
subl
mov
push
add
jmp
push
push
out
or
mov
fwait
push
das
fcom
cmp
cwtl
push
loope
jb
lret
ja
and
and
pop
and
dec
js
addr16
inc
jecxz
sbb
les
or
lds
cwtl
fisttpl
std
inc
ror
addr16
dec
push
scas
gs
test
xlat
xchg
xchg
inc
cmpsb
xor
ret
adc
xchg
add
popf
jne
stc
xor
jns
pop
cmc
cmpsb
mov
lods
add
adc
fidivl
xor
int
ror
inc
aas
loop
mov
xchg
mov
push
and
dec
cltd
xchg
in
hlt
mov
popa
add
cld
fdivrs
sahf
ja
repz
out
imull
sarb
push
rcr
jp
add
pop
cmp
in
test
cmp
jmp
loop
fbld
adc
mov
outsb
xor
lods
pusha
cmp
xchg
and
cmp
shll
mov
jl
mov
jbe
rorb
stc
xorb
mov
mov
or
dec
das
scas
int
sub
stos
movsl
cltd
xchg
and
sysenter
cs
andl
cmpsl
int3
dec
divl
sub
cmp
rorl
pop
cmp
push
push
add
sub
loop
daa
push
xor
push
pop
or
shll
mov
outsl
jns
out
xchg
ja
mov
xchg
push
loop
aad
ret
or
jg
cmp
jl
xchg
mov
mov
mov
into
pop
and
pop
shll
adc
cmp
mov
insb
mov
mov
ss
xorl
shrl
pop
and
loope
lret
add
sbb
pop
stc
mov
dec
xchg
addr16
sbb
ret
fstpl
into
mov
aam
arpl
or
dec
sarb
add
lret
outsl
loope
sub
add
jecxz
adc
xchg
leave
je
xor
push
push
mov
test
dec
push
fdivs
xor
sahf
sub
jmp
mov
mov
mov
out
lock
clc
add
jmp
or
inc
mov
outsb
stc
jbe
dec
mov
push
fsubrs
out
pusha
icebp
aam
push
insl
sbb
pushf
scas
lds
orl
aam
add
in
ds
mov
in
aam
leave
push
popa
out
dec
and
pop
pop
add
sbb
adc
xchg
dec
xor
mov
cltd
nop
or
dec
fsubs
dec
lods
or
gs
jb
repz
pop
pop
add
in
and
push
xchg
add
pop
add
aad
xchg
fadds
fnstsw
into
loope
and
scas
adc
inc
pop
sbb
inc
ds
movsl
ljmp
fadds
subl
or
adc
sub
jne
fstpl
mov
insb
mov
out
mov
outsl
in
add
test
mov
mov
dec
iret
jbe
inc
dec
inc
gs
stc
adc
in
cmpsl
sub
in
int3
mov
mov
sbb
daa
sub
js
adc
pop
shl
lahf
int3
xchg
jl
repnz
xchg
imul
or
cld
arpl
in
lret
inc
stos
lret
xchg
add
loop
cmp
pusha
xor
ja
xor
decl
pop
xchg
js
into
mov
jl
mov
xor
fdivp
pop
or
push
dec
notb
in
jmp
sbb
pop
mov
addr16
pop
std
push
push
mov
push
and
mov
aam
sbb
movsl
adcb
mov
mov
pop
xor
mov
or
popf
push
out
std
xchg
out
rclb
movsl
jg
xchg
or
inc
mov
outsb
xchg
sete
cltd
adc
fildl
mov
xchg
shll
test
xchg
lcall
arpl
scas
out
cmp
lcall
xchg
mov
cli
test
and
inc
cmp
add
insl
fs
mov
clc
push
loope
pop
xor
inc
lahf
sti
dec
dec
sti
xchg
pop
push
pop
daa
dec
shrb
outsl
and
lods
pusha
ss
jmp
rcrb
mov
add
sub
jae
mov
xchg
aaa
add
dec
xchg
push
jle
mov
add
pop
bound
outsl
mov
xchg
pop
lock
mov
sbb
repnz
push
fld
sbb
aaa
movb
cli
cli
mov
push
rcll
fadds
js
ds
adc
fstpl
leave
jg
adc
jge
sub
lcall
adc
add
hlt
adc
push
inc
je
scas
popf
add
lcall
push
mov
xor
mov
fsubrp
out
test
xor
push
jg
jns
repnz
fldl
xor
pop
mov
jnp
ds
or
jmp
outsb
stc
pop
push
cmpsb
inc
inc
in
inc
jp
push
adc
cmp
dec
mov
cmp
jmp
xchg
pop
and
xor
dec
or
push
dec
stc
lcall
out
shll
sar
or
mov
je
add
nop
push
and
mov
sub
insb
imul
jo
fisttpl
lock
aad
gs
cs
fsts
fnsave
mov
ss
subb
sub
xlat
ljmp
ds
and
inc
adc
mov
shl
loopne
outsb
sbb
popl
fsubrs
outsb
sbb
push
xchg
movsb
popf
fistps
mov
dec
filds
test
lods
dec
cmp
fsubrs
sbb
xor
je
mov
and
orl
inc
lods
inc
in
push
aam
aas
int3
data16
xchg
sub
xchg
sub
push
or
les
fnsave
jle
fidivrl
fdivrs
bound
in
stos
movb
sqrtps
outsl
repz
adc
insl
cmp
test
stos
mov
pop
popf
xlat
push
dec
or
mov
mov
inc
push
in
into
in
inc
mov
mov
sahf
in
pop
daa
popf
push
test
add
or
sbb
popa
ds
leave
mov
arpl
out
xlat
icebp
sub
cmp
add
pop
fs
rcrl
arpl
pop
test
xchg
and
aas
data16
pusha
push
sub
stc
lds
sbb
xor
int
mov
insb
cmp
clc
imul
ja
jl
rorl
push
add
adc
rcrb
and
mov
negb
lods
inc
pop
adc
mov
mov
add
call
popf
inc
mov
pop
dec
xlat
clc
xchg
fistps
divl
xorb
std
and
fstpt
and
movsb
negb
ficoml
or
dec
inc
sub
dec
xor
inc
pop
sub
sahf
jb
ds
push
xchg
sbb
pop
leave
outsb
pop
sti
xchg
lret
ljmp
xlat
or
ds
ljmp
cmpsb
pop
fwait
dec
aaa
sub
lods
aad
sahf
xor
dec
les
movl
cmp
outsl
push
jns
dec
dec
out
mov
cmp
sbb
pop
xor
in
jmp
jecxz
inc
or
push
sub
sbb
add
mov
pop
cmp
dec
dec
test
in
and
dec
filds
lods
sbb
imul
fwait
mov
lret
lock
jb,pt
rcl
or
mov
insb
sub
cltd
in
xor
cld
lea
test
xchg
cmp
pop
shlb
outsl
test
sub
mov
in
imul
in
hlt
mov
into
sar
cs
sbb
test
mov
fstpl
outsl
push
je
in
mov
add
enter
jecxz
pop
popa
add
ljmp
into
push
jb
test
sub
jno
test
in
and
jnp
and
mov
pop
dec
into
cmp
or
insl
scas
je
add
xchg
int
push
xor
sbb
lods
mov
push
mov
push
fcmovu
cmpsl
add
pop
mov
mov
stc
jge
test
fwait
divb
les
sbb
inc
add
ret
mov
mov
adc
adc
in
jnp
jl
int
fcoml
xchg
pushf
je
jno
pushf
adc
adc
stos
cwtl
push
mov
xor
xlat
dec
imul
scas
xchg
mov
data16
jno
pop
pop
sti
ljmp
add
inc
or
repz
loope
fcomps
addl
mov
popf
mov
loopne
pop
data16
lds
or
or
mov
add
scas
jns
mov
xchg
test
fldl
test
lret
mov
sbb
out
mov
dec
mov
cmpsb
xchg
imul
icebp
out
xchg
adc
fs
movsb
add
mov
inc
mov
mov
lods
aas
add
in
push
loop
sbb
jno
sbb
pop
pop
sbb
fstpt
test
test
gs
stos
xor
movsb
xor
xorb
jge
lock
sub
mov
fsub
jp
sahf
cmpsl
push
shr
pusha
push
int3
mov
pushf
scas
data16
popa
shlb
cmp
out
ret
adc
stos
xchg
out
mov
lds
ljmp
and
lahf
mov
jp
adc
cmc
inc
mov
or
es
xchg
add
clc
lret
pop
mov
jle
imul
add
fisttpl
cmp
lcall
into
dec
mov
mov
add
repz
js
inc
dec
loopne
bound
pop
cmpsl
jbe
mov
pop
mov
jle
sar
pusha
xorb
rcrb
dec
ds
js
sbb
inc
das
nop
jno
adc
cmpsl
dec
mov
xchg
insl
xor
lods
rcll
adc
jp
incb
mov
mov
jnp
adcb
repnz
pop
pop
aaa
mov
and
shl
lea
cmp
cmp
aad
shlb
repz
insb
inc
cltd
adc
imul
xor
int3
xchg
fsubrp
repnz
push
adc
push
lds
clc
and
push
outsb
daa
lret
sbb
mov
and
bound
shrl
inc
mov
cmp
insl
dec
inc
loope
ficoms
sbbl
pushf
loop
jne
loop
mov
mov
idivl
daa
inc
pop
fstpt
js
mov
and
and
add
pushf
sub
pusha
mov
fsubs
ss
mov
into
outsb
pop
insb
sub
push
and
pop
cli
data16
mov
dec
imul
cmp
jmp
leave
inc
push
push
push
xor
call
loop
ja
cmp
adc
subb
push
xor
ds
out
jnp
cld
imull
mov
add
mov
inc
cltd
inc
sub
shll
sub
ja
jo
andb
add
xor
mov
pop
xor
jl
mov
call
js
xchg
fimuls
out
mov
mov
pop
push
std
sub
push
xchg
jne
rcll
fsts
in
in
jg
lods
fwait
imul
nop
xchg
jne
pushf
cmpsl
leave
movsl
mov
push
jnp
pop
xor
out
sub
mov
dec
outsl
mov
fadds
pop
mov
dec
inc
push
ja
push
rcll
rol
leave
pop
push
xchg
cmc
nop
inc
outsl
notl
dec
xor
inc
dec
xor
das
jae
addl
jnp
cwtl
in
inc
loopne
rclb
mov
push
jg
xchg
imul
mov
jb
imul
test
or
xor
inc
push
push
inc
inc
movsb
xor
outsl
sub
popa
pop
leave
inc
mov
push
adc
push
notb
cmp
in
into
out
loope
mov
jecxz
sub
cmpsb
inc
sbbl
lods
sbb
jle
lahf
xchg
xchg
sbb
lods
jmp
sti
les
mov
iret
jno
dec
jmp
xor
insb
pop
rorb
mov
repnz
call
sar
cmc
sbb
lods
outsb
cld
mov
pushf
add
push
mov
test
jbe
mov
push
mov
and
pop
imul
cmpsb
pop
xchg
fwait
aaa
cmp
xor
rcl
les
bound
pop
fisttps
or
mov
dec
cwtl
dec
jmp
sub
mov
mov
jo
or
inc
imul
cmpsb
add
xchg
or
adc
sub
leave
in
sbb
mov
test
lret
out
inc
imul
xor
cmp
in
mov
pusha
and
adcl
xlat
mov
lret
int3
dec
movsb
mov
mov
xchg
xor
sbb
sub
xor
mov
jp
sbb
xchg
sub
fisttpl
mulb
insl
inc
lock
mov
inc
xchg
adc
push
lock
pop
pop
sub
pop
test
push
xor
scas
shrl
in
cmp
add
mov
dec
icebp
ss
push
popa
sub
lcall
add
in
loop
hlt
cmpsb
adc
test
rorb
mov
lahf
or
idivl
ret
sbb
xchg
pop
imulb
ja
ss
adc
or
mov
push
jo
pop
into
loope
lods
aam
pusha
push
mov
cltd
jns
adc
pop
pushf
jg
pop
add
push
aaa
pop
xchg
and
jle
add
xchg
inc
cmpsb
push
adc
fbstp
mov
push
call
cmp
jno
mov
dec
test
jp
dec
lahf
hlt
cmpsb
cmp
inc
sub
xchg
jb
out
lds
sbb
xor
xlat
pop
push
sub
sbb
ret
mov
xor
add
fstl
imul
cltd
or
addr16
imul
pop
sbb
mov
ret
insb
in
in
sbb
mov
push
xor
inc
pop
jne
gs
mov
movsl
stc
aad
vpmaddwd
in
adc
or
pop
jne
gs
mov
movsl
stc
aad
vpmaddwd
in
adc
or
sub
insl
cs
jno
gs
mov
lods
stc
shl
vpaddb
add
icebp
add
gs
jns
pop
cmc
leave
movsl
mov
mov
rorb
lea
popf
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
incl
jbe
iretw
lods
mov
inc
rol
negl
dec
xchg
xchg
cmpsb
xsha1
cmpsb
orps
inc
out
ja
iretw
push
mov
es
out
xchg
pop
xchg
mov
cmpsb
orps
inc
out
jbe
iretw
push
mov
es
jg
dec
xchg
cmp
jae
jp
js
mov
lahf
cmp
inc
int
adc
xchg
stc
add
add
mov
pop
loope
sub
incl
mov
inc
pop
scas
or
mov
outsl
cmp
imul
je
cmpsl
pop
pop
shr
inc
das
jns
pop
or
repnz
inc
push
dec
jg
outsb
mov
rolb
xchg
jecxz
xchg
jb
cli
push
lret
push
mov
outsl
movb
lret
aad
cmpsb
push
bts
mov
ret
push
inc
ss
es
mov
mov
out
aas
xor
out
scas
cmpsb
inc
stc
cld
popa
jecxz
div
into
and
adc
adc
sub
loop
xchg
pop
cmpsl
lock
inc
out
jbe
iretw
push
mov
es
jg
outsl
negb
dec
xchg
aas
xchg
mov
cmpsb
dec
and
add
push
clc
arpl
jno
inc
sti
mov
or
aas
loop
lret
insl
shrb
xchg
add
lods
jae
ljmp
stos
sbb
fstpl
mov
and
inc
mov
lea
scas
ss
es
jg
outsl
negb
dec
xchg
aas
xchg
mov
cmpsb
orps
inc
out
jbe
iretw
push
mov
es
jg
outsl
negb
dec
xchg
aas
xchg
mov
cmpsb
orps
inc
sti
mov
or
and
shlb
inc
adc
popa
mov
adc
push
pop
add
shlb
xchg
xor
mov
data16
mov
pop
sbb
aaa
add
les
adc
inc
push
mov
mov
push
aad
and
mov
lcall
ret
gs
inc
flds
test
rorb
test
out
mov
mov
lahf
jnp
orl
or
imulb
repz
xchg
sub
cld
std
add
test
mov
mov
loope
das
fistpl
movsl
into
aad
mov
pushf
test
dec
dec
fwait
ret
sub
jecxz
hlt
xor
pusha
fnsave
in
mov
jb,pn
gs
xchg
mov
jge
adc
mov
fcoms
movsb
iret
mov
cmc
aaa
ja
ret
test
div
mov
pop
int
int
fisttps
in
push
rcr
push
mov
xchg
imull
fcmovnbe
sti
mov
in
add
loop
jl
or
fucomp
jb
cmp
xchg
mov
stos
inc
dec
mov
push
jecxz
imul
jb
mov
adcb
clc
mov
loopne
mov
cmp
and
add
add
loope
mov
jno
in
fiadds
stos
inc
cmp
mov
insl
mov
out
cmc
out
fisubl
notb
pushl
cmpsb
ds
dec
jecxz
pop
push
gs
dec
or
or
xor
test
iret
out
popl
push
es
mov
aam
xchg
sbb
popf
push
xor
fnsave
lcall
enter
inc
movsl
push
testl
mov
movsl
cld
popa
push
and
aas
cwtl
xchg
xor
adc
add
xchg
jbe
or
cmpl
jno
dec
push
loopne
stos
or
ljmp
call
cld
loope
push
jo
ds
xlat
aam
sub
cmp
dec
shr
cltd
or
and
in
pop
mov
mov
stos
mov
and
shr
in
nop
inc
push
jns
imul
or
cmc
xor
jle
sbb
hlt
out
adc
bound
push
and
fstl
es
jne
jl
add
mov
mov
ds
cltd
mov
stos
dec
gs
sti
lods
dec
test
inc
pushf
testl
push
xchg
adc
testb
test
adc
mov
dec
lahf
les
in
sub
jle
jae
bswap
fs
xchg
cmpsl
jb
pop
daa
test
push
pop
jno
or
add
addr16
rcrb
mov
push
lock
lret
rclb
push
xor
inc
adc
push
xchg
jge
cli
fidivl
in
scas
push
xchg
loopne
adc
dec
das
dec
sbb
or
dec
push
push
lods
in
mov
dec
ret
push
mov
lret
shrb
pop
add
push
pop
pop
mov
sti
clc
cmc
outsl
insb
fxam
jmp
jo
push
cld
cmpl
scas
shll
sbb
inc
mov
mov
dec
andl
mov
pop
sbb
orl
jae
daa
clc
jnp
push
mov
dec
data16
inc
imul
shlb
movsl
fnstenv
pop
sarl
test
xchg
dec
dec
orb
lds
xor
cli
mov
adc
or
sbb
movsl
enter
dec
imul
loop
xor
sub
mov
or
jp
out
dec
inc
lock
out
mov
jp
mov
fldenv
xor
in
enter
roll
or
xor
ret
loop
fnsave
and
fs
cmp
mov
insb
test
pop
adc
outsb
pop
xor
jbe
and
popa
ja
int3
mov
rcrl
and
pop
pop
push
xchg
mov
mov
scas
or
lods
scas
out
push
add
sbb
or
jecxz
mov
push
cmpl
mov
jmp
mov
sub
filds
dec
scas
nopl
sahf
pop
add
mov
add
dec
cmp
in
push
push
sti
sbb
test
cltd
jge
jbe
popf
scas
fldenv
and
bswap
ret
xor
push
xor
push
mov
add
pusha
xlat
xor
inc
je
push
shll
add
pop
das
movsl
xchg
sbb
movsl
je
imul
addr16
push
fimull
sti
xor
sti
int
leave
or
push
xchg
mov
mov
std
cmp
mov
in
aam
pop
enter
repnz
sub
and
dec
sub
testb
xor
outsl
sbb
out
cmp
insl
cltd
mov
jmp
aaa
mov
test
roll
jnp
mov
mov
xchg
inc
ret
sar
daa
pop
repz
jl
cmp
pop
push
repnz
pusha
adc
push
rcll
dec
stc
lods
cmpsl
xchg
inc
jae
sbb
mov
and
loope
icebp
cmpb
sbbl
movsb
stos
popf
out
icebp
sub
add
xchg
push
icebp
fnsave
sarl
out
adc
jp
data16
ffree
or
icebp
mov
or
call
push
cmp
jns
mov
and
test
ficoms
repnz
push
pop
into
cli
mov
filds
je
pop
clc
ret
inc
enter
fiadds
xchg
jnp
xor
lahf
xchg
jbe
jmp
call
push
ret
sahf
andb
push
nop
mov
jmp
ljmp
jl
cmp
cwtl
push
mov
cli
and
pop
xlat
outsb
inc
push
mov
nop
inc
decl
lahf
add
push
fnstsw
cld
daa
lahf
int
cmp
mov
fisttpl
rclb
sub
pop
mov
xchg
xor
mov
imull
xor
repz
mov
cmc
xor
mov
push
jne
popf
in
mov
mov
xchg
jecxz
faddl
clc
fcmovu
or
fldt
popf
nop
sub
jae
jg,pn
test
addl
pushf
fisubrl
jl
stos
push
mov
mov
ret
mov
das
sub
sub
andl
mov
lret
imul
in
pop
or
inc
roll
pop
sbbb
cmc
cltd
push
js
add
orb
stos
sbb
push
lds
or
cmpsb
push
hlt
lock
jg
dec
xor
enter
sbb
addb
addr16
cmp
cmc
pop
in
cli
mov
mov
dec
aam
lret
stc
int3
fistl
xlat
cmp
cmp
xorl
pop
mov
add
mov
pop
movsl
fcoml
loopne
jge
adc
fnsave
insl
xchg
sbbl
xor
daa
stos
push
lods
int3
insl
mov
xchg
mov
mov
dec
fdivr
cmpb
out
idivl
cmp
stc
push
pxor
mov
iret
clc
mov
ret
je
rcrl
ret
inc
scas
mov
mov
loope
pop
lea
mov
xchg
mov
insb
and
inc
xchg
jo
out
jnp
out
sahf
jle
fdivl
mov
stos
dec
or
inc
push
movsl
xor
notb
sbb
clc
in
int3
mov
xchg
push
popa
or
sarl
outsl
mov
in
sub
push
and
sub
or
in
sbb
cltd
mov
jb
or
adc
jg
inc
cmc
mov
xchg
pop
xor
pop
xor
cmp
dec
fisubrs
jecxz
push
fdivl
mov
call
fdivr
cli
iret
sub
iret
push
push
outsb
and
js
mov
imul
push
pop
pop
nop
cli
ja
sub
adcl
ds
pop
mov
mov
mov
jnp
cmp
cmc
fidivs
movsb
lods
jbe
lods
fs
nop
or
arpl
or
aad
pop
lock
xchg
dec
dec
pop
sub
xchg
push
push
inc
push
out
cmp
adc
cmp
nop
fsubrp
mov
shrl
sbb
xor
sbb
repnz
das
push
xor
dec
mov
xchg
rcrl
mov
xchg
in
and
out
jmp
mov
xor
dec
cmp
dec
push
xor
dec
in
mov
jp
jne
jecxz
jecxz
adc
nop
enter
movsl
leave
mov
or
fsubrs
or
add
aad
scas
fbstp
mov
imul
mov
std
pop
dec
arpl
sar
push
and
or
imul
and
jbe
mov
mov
and
sub
pop
bnd
push
aaa
pusha
out
scas
movsb
adc
push
dec
xlat
sti
mov
and
ss
shrb
mov
outsb
mov
xor
ficompl
mov
mov
add
rcrl
add
mov
mov
int3
dec
jecxz
bnd
mov
sub
mov
adc
push
fidivl
pop
loopne
jle
bound
orb
jne
mov
lcall
push
and
dec
lret
cmpsb
loop
xchg
mov
movsl
push
or
sbb
cmpsl
rorl
or
sbb
mov
push
jnp
loope
test
movsb
in
andl
cmp
push
mov
shll
enter
pop
push
pop
cld
mov
gs
repz
xchg
clc
icebp
movsb
xor
inc
test
cmp
out
xchg
fistpl
mov
test
jb
cmp
jnp
push
fistl
lret
pop
fcomip
inc
imul
jecxz
neg
or
or
pop
js
ja
ljmp
push
loopne
xor
xor
jp
pop
adc
lods
xor
jecxz
movsb
loope
mov
xlat
jg
out
dec
je
scas
jo
and
dec
sub
mov
xchg
and
jl
xlat
and
fildll
test
jp
icebp
inc
test
mov
or
lock
sbb
in
cmp
lods
es
mov
cmp
dec
sbb
push
or
adc
outsb
outsl
repnz
lock
cmp
xchg
je
lahf
jmp
inc
test
bound
pop
shlb
lret
push
sti
data16
sub
dec
pop
xchg
inc
scas
cmp
sbb
push
hlt
cmp
mov
es
stos
cmpsb
xchg
lds
push
push
or
mov
mov
sbb
pushf
mov
stos
pop
add
sub
cpuid
push
rep
call
cmp
ret
scas
mov
add
imul
cmpl
sub
sti
decb
je
jg
shll
cld
push
cwtl
movsl
les
out
movb
push
mov
mov
push
call
sahf
imul
cmp
add
nop
jl
jmp
cmp
jns
mov
sbb
addr16
sbb
fldcw
xchg
stos
clc
negl
in
xor
pusha
daa
ljmp
mov
or
cmp
sbb
or
add
decl
fs
or
in
aam
push
adc
pop
push
out
daa
mov
dec
lea
js
mov
repnz
sbb
mov
sub
loop
xorb
cwtl
sbbl
add
sbb
into
jne
mov
orl
pop
push
sub
mov
pop
movsl
inc
subl
cmp
out
mov
pop
aas
out
flds
mov
push
mov
jno
push
mov
dec
stos
mov
lods
pop
add
cmpsb
push
hlt
bound
enter
xor
call
insb
lods
out
mov
pop
mov
jg
repz
or
push
shlb
mov
imul
cs
push
jnp
mov
cmpsb
and
dec
shl
jge
sub
iret
jl
mov
or
cmpsb
sbb
out
ret
mov
jnp
fstpl
xchg
mov
fistpll
lock
sbb
test
mov
add
mov
jl
gs
push
outsl
arpl
adc
sub
inc
subb
out
mov
dec
jb
repnz
pushf
jmp
sbb
inc
jmp
add
push
or
insl
mov
sbb
cmp
stos
movsb
hlt
xor
out
movsb
or
cmp
fdivp
imul
dec
std
shll
fisubrl
faddl
orps
insb
mov
int3
sub
iret
cmpb
mov
stos
push
mov
pop
out
add
je
in
cmp
push
clc
call
jo
shlb
xchg
mov
sub
cmp
mov
push
mov
and
aaa
dec
jb
push
add
pop
stos
and
js
pop
subl
xor
sub
pop
jg
lahf
push
repz
dec
or
outsl
mov
clc
adc
fwait
push
cmp
jmp
jmp
div
add
pop
cmp
adc
push
rorb
pop
inc
inc
aad
push
mov
push
fldt
adc
sbb
mov
jg
sub
imul
in
dec
xchg
cli
hlt
inc
mov
mov
push
or
add
push
gs
cmp
int3
sbb
add
sub
and
aas
mov
mov
mov
mov
pop
mov
add
arpl
pusha
xor
es
cld
xor
dec
cwtl
mov
and
ret
outsl
dec
in
lcall
fwait
sbb
pop
jae
dec
and
xchg
push
jecxz
add
outsb
mov
jl
jae
cld
dec
xchg
lcall
into
mov
xchg
add
mulb
fdivrs
cli
enter
pop
loope
dec
inc
dec
in
mov
call
sbb
mov
std
mov
ret
xchg
leave
outsb
mov
icebp
xlat
ret
push
cmpsb
or
shr
xchg
pop
pop
mov
xor
pushf
ffreep
leave
pop
xchg
sahf
dec
push
pop
mov
loopne
shrb
daa
pop
int3
or
mov
cli
faddp
cld
popa
sbb
inc
jle
lcall
test
jno
test
loope
pop
jle
jns
and
and
cli
mov
sub
in
dec
addr16
sub
cli
test
dec
and
jno
loope
lcall
dec
lahf
in
pop
loop
pop
or
test
push
inc
adc
push
lcall
clc
je
lea
ss
les
outsl
fwait
mov
ret
jp
popa
push
ret
and
add
mov
bound
aas
test
out
push
je
aaa
jb
andl
es
push
iret
cmpsl
cmp
les
fidivs
mov
inc
pop
nop
cmp
je
les
stos
movsl
fs
or
jp
rcrl
inc
ret
leave
leave
movsb
es
or
gs
pop
or
cmp
xchg
jae
fdivp
aam
or
lods
jge
jns
fnstenv
mov
mov
pop
inc
inc
fldenv
cli
fistl
rcl
xchg
shlb
out
fwait
test
sbb
fsubrl
outsb
cmp
movb
in
mov
sbb
in
out
push
mov
je
mov
idiv
mov
xor
cmp
in
or
push
cmpl
test
lret
popf
pop
nop
repz
push
sti
adc
mov
test
xchg
push
inc
and
and
cmp
icebp
int
jge
fcmovu
push
notl
sub
les
rcll
das
test
xchg
out
and
ret
adc
xchg
jns
test
fisttps
cltd
lods
fisubs
repz
mov
add
movsb
outsl
call
xor
pop
sbb
negl
leave
je
and
je
xchg
ds
or
xchg
cmp
pushf
mov
jg
mov
cli
cld
pop
mov
fisubl
js
adc
not
add
xor
repz
xor
dec
cmp
cmc
pop
negl
pandn
data16
pop
lcall
je
sub
loope
push
adc
adcl
push
mov
nop
jno
enter
iret
roll
adc
xor
stos
loope
or
sbb
test
pushl
dec
lds
fmuls
stos
inc
lret
scas
cltd
shll
dec
and
push
dec
leave
stc
inc
mov
mov
cmpsb
out
mov
dec
jmp
imul
in
pop
pop
or
inc
jle
outsl
xor
insb
js
rol
mov
push
sarl
mov
and
fs
jno
pop
in
or
dec
fsts
in
lods
mov
sub
lcall
cli
add
xor
ds
fsubrs
dec
mov
sti
inc
in
and
lods
dec
movsl
clc
and
int3
cs
inc
es
mov
call
test
imul
sbb
xchg
sbb
xor
inc
cwtl
hlt
mov
out
pop
arpl
inc
in
dec
lea
cmpsl
stc
movsb
xchg
dec
int3
in
add
add
push
les
jo
aas
push
xor
mov
dec
lds
lcall
push
cmpsb
pop
imul
scas
dec
nop
inc
dec
mov
push
decl
cs
movsl
mov
adc
sahf
jbe
push
cmpl
mov
push
adc
iret
xor
xchg
mov
fs
xchg
fcmovne
enter
dec
call
mov
inc
xor
fsubs
fsubr
mov
loop
or
lea
and
daa
divl
sti
add
add
xor
pop
push
mov
fwait
dec
add
or
mov
xchg
nop
inc
inc
or
imul
and
jo
aas
jb
into
mov
and
inc
push
imull
icebp
jnp
bound
fcomip
mov
adc
jecxz
fucomp
loopne
sahf
cwtl
mov
pop
insb
jnp
cld
push
std
adc
mov
aas
inc
call
xchg
cmp
or
mov
ss
inc
pushf
mov
or
shlb
jae
inc
cwtl
adc
push
test
or
dec
lret
jp
sub
jp
cld
xchg
insb
mov
fs
outsb
in
and
lea
aad
cld
inc
pop
nop
mov
inc
call
cltd
lock
mov
xlat
jae
into
stos
push
inc
xchg
lcall
pushl
test
shr
cmpsl
insl
fwait
neg
sarb
hlt
add
mov
inc
push
movsl
ljmp
test
mov
jge
sahf
jl
fwait
inc
push
andl
jbe
sti
mov
cmp
sbb
cmpl
stos
or
jnp
add
push
aad
arpl
es
push
add
sbb
mov
pop
pushf
push
lea
sbb
and
imul
dec
out
addr16
add
xor
and
leave
fldcw
imul
adc
mov
sbb
cli
adc
xchg
shrl
mov
jb
cmpl
mov
mov
loopne
mov
mov
mov
adc
imul
mov
adc
pop
lods
icebp
cmp
mov
out
adc
dec
out
mov
int3
int3
push
je
sbb
sub
out
fsubrs
jne
xchg
jae
push
loopne
gs
loope
iret
das
shr
jne
pop
adcb
push
fbstp
ret
lret
push
out
movsb
scas
adc
dec
gs
add
xchg
mov
sbb
insb
outsl
jns
dec
cmc
insl
js
xor
repz
bound
movsl
pop
mov
inc
popf
mov
pop
out
mov
out
push
jbe
aas
adc
clc
testb
mov
cs
ret
fiadds
inc
add
mov
mov
jp
cwtl
or
aam
inc
or
call
push
push
pop
push
bound
jo
shll
in
inc
enter
pusha
sbb
xor
rolb
sub
into
fdivrl
xchg
loop
fisubrs
cmp
xchg
loopne
andl
lcall
mov
push
sub
aam
jp
lods
arpl
mov
push
sbb
andb
repz
lea
aad
lea
pop
cli
mov
inc
dec
mov
icebp
xor
push
jae
push
cmp
les
fwait
sbb
xchg
xor
arpl
pop
popa
or
scas
fwait
mov
out
mov
bnd
push
or
loop
sub
push
push
add
inc
jge
lea
fcomp
push
jmp
in
int3
jo
call
addl
xor
pusha
dec
xchg
cmpsb
inc
or
mov
clc
add
int3
aam
ljmp
sbb
mov
xor
ds
push
fidivrs
fbld
push
mov
es
jg
outsl
negb
dec
xchg
aas
xchg
mov
cmpsb
orps
inc
out
jbe
iretw
push
mov
es
jg
outsl
negb
dec
xchg
aas
xchg
mov
cmpsb
orps
inc
out
jbe
iretw
push
mov
es
jg
outsl
negb
dec
xchg
aas
xchg
mov
cmpsl
xorps
inc
out
ja
iretw
push
mov
es
jg
lds
cmp
mov
rorb
pop
lock
shl
xlat
pop
mov
aad
mov
test
scas
push
lahf
inc
aaa
jmp
in
pop
fists
iret
xchg
aas
out
mov
jg
jecxz
pop
xchg
ja
addr16
ss
inc
ja
daa
out
pop
lahf
pop
iret
dec
lods
adc
or
mov
inc
int3
aas
shlb
pop
test
xchg
pop
iret
cltd
aas
stos
inc
xlat
push
pop
mov
cmpsl
in
inc
lods
xchg
xor
iret
jb
daa
bound
lcall
push
inc
inc
mov
jle
xchg
sbb
or
shl
mov
sub
fdivrp
inc
or
mov
and
out
lahf
stc
mov
and
sub
inc
add
fbld
fistps
cmp
sub
aas
xor
sub
push
inc
addr16
stos
mov
adc
aaa
pop
pushf
or
ljmp
pop
das
sub
or
push
in
in
push
pop
add
out
into
or
or
jp
push
cmp
push
mov
mov
mov
filds
lods
aas
mov
xlat
fwait
movl
mov
std
imul
shrl
mov
mov
or
add
xchg
ja
xor
xor
and
inc
nop
dec
fwait
jle
bound
movsl
jle
sub
adc
pop
bound
shlb
adc
xor
call
jle
inc
movsb
fwait
imul
outsl
xchg
pop
xchg
mov
inc
aaa
jmp
out
pop
filds
iret
idivl
out
xlat
pop
movzwl
outsl
xchg
pop
xchg
mov
inc
aaa
jmp
out
pop
filds
iret
idivl
inc
clc
adc
out
jl
test
xor
out
jge
lahf
rol
or
cld
sub
incb
popa
repz
test
loope
mov
jbe
int3
jecxz
push
mov
add
mov
pop
mov
jne
xor
adc
dec
mov
aas
pop
pop
lods
lret
xor
dec
int3
xor
cmpsb
dec
mov
das
push
adc
inc
clc
lcall
xor
or
mov
aad
ret
pop
sbb
sti
and
fs
adc
add
fmuls
ja
sbb
leave
adc
sti
xchg
jbe
das
loopne
jnp
pop
int3
xor
insb
add
xchg
mov
xor
into
mov
adc
mov
outsb
dec
and
lret
pop
jecxz
stos
add
sbb
sbb
add
out
out
test
add
xchg
sub
xchg
jne
push
daa
mov
sahf
sbb
into
fsubrs
cmp
mov
test
jg
in
and
fists
jns
and
or
mov
outsb
sbb
jl
out
pop
sub
dec
test
lahf
imul
aam
mov
sbb
pop
or
push
jnp
decl
mov
adc
push
jl
push
push
arpl
add
jl
add
or
mov
jle
inc
mov
inc
adc
in
sbb
mov
push
mov
adc
ljmp
fsubl
in
std
sub
sub
mov
pop
sub
mov
fistpll
stc
in
sub
test
mov
push
mov
push
jo
and
cmpsl
xchg
pop
scas
pusha
or
in
loopne
fsts
add
repz
adc
insl
insb
in
and
xchg
lcall
gs
stos
dec
jecxz
in
dec
mov
inc
dec
cmpsl
pop
pop
mov
test
das
pusha
xor
add
scas
adc
aas
add
xchg
movsl
test
mov
shrl
sbb
add
mov
nop
test
pop
push
stos
and
adc
js
test
mov
ds
dec
cwtl
mov
cld
jge
mov
lods
outsl
xchg
inc
aad
dec
shlb
dec
mov
out
cli
xchg
into
aam
cmp
stos
pop
mov
mov
mov
scas
push
mov
fsubrs
lds
pop
aad
imul
dec
enter
xor
mov
insl
pop
adc
cltd
push
jp
xor
jl
pop
sbb
rcr
pop
out
cmpsb
mov
push
add
std
testb
dec
dec
cmp
jbe
jg
jo
repz
test
mov
movsl
mov
dec
movsl
imul
fidivs
dec
sub
adc
test
movsl
inc
lcall
xchg
dec
inc
pop
into
sub
std
or
cmp
movsb
bound
and
iret
fstl
jne
dec
or
insl
or
jmp
add
sbb
jno
imul
mov
or
jmp
adc
sub
in
mov
mov
mov
fdivl
adcl
pop
push
aam
dec
fwait
dec
aad
add
sbb
divb
xor
inc
mov
inc
test
sahf
or
xchg
out
xchg
ljmp
cltd
orl
cmp
lds
jbe
pop
inc
outsb
fistpl
adc
lahf
lock
and
mov
lods
bound
adc
lahf
xchg
pop
test
mov
cmpsb
fistps
mov
pop
dec
mov
ret
mov
dec
xor
fxtract
subb
jnp
push
cmp
lds
inc
mov
add
popa
jg
loope
add
dec
push
adc
stos
mov
aam
sbb
lret
addl
das
mov
push
inc
movsl
mov
ss
jg
jns
sub
jmp
xlat
xor
xor
lret
adc
loop
or
sbb
and
shll
add
mov
fildll
sub
inc
xchg
jo
outsl
push
ja
or
adc
fimull
das
cltd
sbb
aaa
or
mov
cmp
add
push
pop
push
mov
cmc
add
pop
shll
push
and
aad
or
popa
movsl
inc
or
fwait
inc
or
dec
int
xchg
testb
stc
inc
jne
inc
cltd
cmpsl
hlt
inc
mov
push
mov
fsubr
cs
clc
fwait
jbe
addr16
mulb
mov
popa
sti
xchg
cmc
xor
pop
loop
dec
jns
mov
sub
aas
jno
negl
adc
sub
mov
sbb
int3
or
fs
out
pop
popf
mov
enter
mov
dec
inc
clc
aam
out
and
xchg
mov
pop
into
icebp
add
cld
and
dec
inc
sub
mov
sub
inc
xor
mov
mov
push
loopne
xchg
pop
sub
or
or
imul
call
mov
or
loop
gs
out
dec
sub
mov
adc
pop
js
dec
iret
pop
mov
cld
sbb
xchg
mov
daa
fstl
aad
adc
clc
xchg
imul
sbb
enter
inc
push
push
and
jb
jle
jnp
sub
mov
or
xchg
dec
xor
lods
mov
stos
xor
ret
and
or
jg
test
jle
adcl
push
cmc
xchg
push
inc
or
mov
add
in
mov
or
mov
mov
push
or
pop
lods
mov
add
pop
mov
fisttpll
jl
push
test
daa
mov
jmp
jmp
mul
inc
sub
xchg
pop
pusha
jg
std
cs
xchg
push
mov
mov
std
into
add
bound
cmpsl
sbb
pop
popa
lds
adcb
pop
jge
mov
mov
stos
iret
adc
cltd
mov
push
push
xor
sahf
pop
fdivrl
test
mov
xchg
mov
lcall
cmp
dec
add
dec
test
je
mov
aad
test
arpl
mov
pop
and
pop
rcrb
les
mov
cmc
inc
push
push
mov
mov
jno
fsubrs
sub
loopne
mov
dec
cmpsb
into
xchg
dec
pop
adc
mov
icebp
sbb
or
cmpsb
jb
add
mov
testl
adc
push
iret
fldl
arpl
aas
or
int
mov
cmp
xor
mov
enter
push
xchg
xchg
out
ret
dec
xor
mov
pop
cmp
imull
cmpsl
es
das
jg
addr16
jns
xor
mov
jge
mov
aas
xor
daa
mov
and
aad
xchg
dec
call
mov
cmp
cmp
pop
push
in
arpl
out
cmp
lret
jmp
bound
repnz
mov
xor
mov
mov
and
lea
inc
inc
pushf
in
lcall
mov
push
int3
add
outsb
bound
add
jae
add
fs
in
movsl
xchg
mov
dec
stos
dec
pop
add
addr16
pop
xchg
pop
mov
add
dec
loope
pop
or
and
movsl
pop
sbb
jg
and
push
call
pop
jne
mov
add
inc
gs
cld
mov
jns
mov
cld
xchg
jmp
pop
lret
out
test
sub
mov
pop
out
mov
cmp
idivb
xchg
scas
inc
push
pop
scas
jp
mov
mov
addl
pop
into
cmp
jne
mov
push
cmp
ljmp
push
cmp
xchg
ficompl
lret
push
mov
add
sub
in
rcrl
dec
lret
mov
aas
clc
loopne
xor
pushl
cs
movsb
cli
pop
pop
aaa
dec
int
fdivrl
into
mov
cmp
je
fisubrs
xchg
pop
test
sub
ljmp
push
sahf
cli
cmpsl
sar
popa
fwait
push
jb
and
pop
pop
add
incb
insl
fistl
push
or
test
ret
idivb
jo
into
pop
fbstp
and
mov
and
fbld
bsf
pop
dec
sbb
mov
pop
mov
pop
pop
jne,pn
rorl
sbb
stos
jge
sub
mov
mov
shlb
xorl
push
inc
outsl
push
adc
mov
add
jo
sbb
mov
xchg
loop
rol
or
jns
repz
adc
fsubr
test
insb
inc
dec
xchg
xor
aam
into
xchg
clc
enter
add
xchg
jns
je
jne
mov
fs
outsb
xchg
shl
push
rclb
lods
pop
aas
pop
and
lahf
fsubrs
int
iret
pop
push
out
mov
repnz
mov
cmp
mov
xorb
sahf
dec
iret
cmp
shll
rdtsc
inc
lea
mov
pop
aaa
adc
pop
xor
sub
and
inc
mov
jne
xchg
mov
push
cmp
lock
je
add
push
adc
sub
jmp
xchg
aas
lods
data16
jno
sahf
xlat
cwtl
cmc
nop
repz
sbb
xchg
popa
pop
cs
mov
int
ret
xor
jl
cmc
testb
sarb
push
out
xor
adc
push
pop
mov
stos
or
xchg
shll
leave
stos
jne
pop
bound
sahf
jne
stos
jmp
mov
pushf
add
sbb
and
xchg
mov
inc
jb
lods
test
pop
cmp
xor
push
xor
lods
dec
filds
cmpsb
add
pop
inc
out
cmpsb
jnp
adc
push
mov
call
or
pop
ss
jecxz
sbb
out
ds
xor
mov
shlb
xorl
pusha
mov
push
stos
aam
xlat
xor
mov
jno
out
push
outsl
fcmovnbe
lret
xor
aam
ss
std
inc
jmp
cmp
inc
push
leave
mov
jns
mov
mov
or
cwtl
mov
test
mov
mov
jae
bound
push
shll
or
sbb
push
inc
movsb
push
or
mov
jp
add
scas
push
rolb
push
xchg
lahf
mov
rol
addr16
push
add
jnp,pn
lret
add
sbb
imul
and
clc
ja
pop
iret
push
nop
jle
jg
gs
sbb
mov
sub
addr16
in
mov
js
mov
test
jnp
adc
xchg
out
mov
mov
xchg
push
sbb
das
pusha
add
dec
fsubrs
inc
jnp
inc
xchg
or
and
push
add
arpl
dec
lods
mull
lahf
fiaddl
or
mov
out
mov
leave
out
jl
rclb
fildl
cltd
rcll
xor
xchg
loope
sbb
pop
inc
out
jb
into
or
xorl
mov
inc
cli
push
cmp
adc
ret
pop
xor
popa
jbe
fnstenv
iret
out
mov
aad
xor
int3
cld
inc
pop
cwtl
lds
sbb
ret
mov
jno
sbb
into
and
je
outsl
mov
repz
add
and
lods
fcoms
xchg
out
stos
and
mov
ficomps
dec
movsl
shr
sub
lret
fcmovnu
ret
push
mov
mov
ror
lahf
and
xlat
sub
shll
mov
stos
lret
out
movsb
std
inc
insl
dec
loopne
adc
outsl
shlb
sub
out
nop
mov
stc
jnp
enter
div
add
in
or
mov
xorb
push
add
jb
fdivs
inc
and
lret
jg
ffree
cmp
aad
mov
dec
fcmove
jb
sti
cmp
je
lcall
dec
ds
stc
dec
mul
sbb
repz
sbb
push
pop
repz
mov
incb
out
xchg
int
ret
lock
repz
das
mov
ljmp
je
lret
sub
aas
cmp
stos
xorb
mov
xor
inc
jo
sub
fs
fs
jo
mov
sbb
add
dec
sbbb
stos
and
cltd
jecxz
mov
push
xchg
std
lcall
inc
xchg
rcll
cmpsl
adc
stos
and
addr16
push
popa
fisubl
mov
loope
in
aas
ret
push
loopne
fstpl
mov
es
jg
pop
mov
ss
scas
push
ja
popf
in
lea
push
cld
push
lods
adc
cli
dec
xor
mov
fnstsw
mov
inc
and
mov
xchg
xchg
mov
add
sbb
inc
aam
adc
sbb
mov
test
cmp
xchg
dec
jle
lods
mov
push
xor
ret
aaa
cld
add
fisubrs
into
mov
cwtl
movsb
dec
lahf
mov
popf
xor
fcompl
test
mov
std
sub
in
andb
mov
and
call
idivb
hlt
lods
dec
shr
mov
jecxz
xchg
js
fistpll
imul
or
and
cmp
insb
out
and
mov
imul
and
mov
adc
out
pop
mov
inc
pop
xor
jecxz
inc
dec
mov
insb
and
adc
scas
pop
loopne
shl
pop
in
in
orl
test
jg
mov
cmp
sub
pop
adc
mov
in
jne
inc
or
add
sbb
sub
iret
lods
dec
stc
xchg
cwtl
cmp
and
mov
fildl
add
push
sub
leave
adc
cli
dec
bound
addr16
cltd
in
shll
lea
xor
mov
sbb
sbb
jbe
out
fnstenv
mov
repz
aad
scas
jmp
jno
cmpsb
add
rcll
adc
leave
push
mov
cmp
repz
inc
or
xchg
nop
mov
push
or
popf
mov
xor
aam
xchg
movsb
hlt
ror
arpl
lds
add
dec
stos
orl
cwtl
xchg
and
mov
iret
cmpsb
jl
push
sahf
outsb
iret
hlt
jmp
data16
xchg
inc
loop
lcall
dec
outsb
jbe
shll
add
jmp
js
sub
xchg
loop
sub
inc
rcl
dec
sbb
or
pop
dec
pop
aam
cmpsb
push
xor
push
xchg
add
xchg
lods
cmp
fisttpll
mov
xchg
sub
mov
mov
in
sub
int
add
xchg
sbb
cli
stos
jns
adc
ret
pop
ljmp
mov
cwtl
fs
and
cmp
sahf
push
adc
mov
sub
rcrb
push
cmp
push
cld
int
ret
sub
push
xchg
sbb
repnz
rol
add
sbb
mov
cmc
ficoml
adc
mov
arpl
aas
push
mov
jg
pop
mov
and
push
cmpsb
mov
out
mov
adc
std
mov
ficompl
mov
iret
decb
call
push
or
inc
fistpll
rcrl
push
sbb
push
outsl
adc
add
ja
and
addr16
add
shll
mov
inc
dec
push
sbb
fmul
jmp
pushf
or
mov
xchg
jg
out
loope
xor
loopne
inc
jbe
sbb
mov
jle
push
add
push
mov
add
xchg
pushw
repz
jl
sub
cld
mov
cltd
jbe
mov
inc
divl
mov
mov
cmp
mov
push
loopne
lret
ljmp
rol
mov
cli
iret
pinsrw
push
pop
pop
lcall
mov
mov
jge
lcall
in
jl
test
adc
pop
or
jnp
mov
jl
mov
lock
mov
and
jmp
aas
popa
push
repz
pop
push
daa
lods
mov
leave
mov
or
icebp
and
repz
or
sub
push
jl
mov
lods
insb
loop
test
daa
bound
mov
nop
fst
push
xlat
aam
shrb
loope
popf
stc
fwait
imul
push
dec
cltd
sbb
jp
icebp
jmp
stos
aas
arpl
fdivl
icebp
adc
cmpsb
cmc
jp
pop
cs
std
xor
push
jmp
idiv
inc
pop
fmuls
orb
xchg
out
xor
sti
mov
mov
test
cmp
xor
stos
pshufw
adc
fwait
data16
fcoml
sbb
jns
es
push
inc
mov
notl
ret
xchg
shl
xor
movsl
in
shl
cmpsb
mov
loop
pop
mov
cmp
lds
sbb
mov
sbb
sbb
ds
adcb
sub
pop
inc
arpl
mov
adc
push
or
movsb
pushf
and
inc
add
clc
sahf
lock
mov
sbb
dec
rcrl
mov
and
nop
dec
outsl
jb
fyl2xp1
repz
xchg
or
cmp
or
and
fucomi
lret
in
in
xorb
add
repnz
cmp
dec
insb
jnp
pop
adc
incl
sub
sub
push
ds
jecxz
xchg
pop
movsl
in
mov
je
dec
cmpsl
xor
cmpb
mov
test
jb
cltd
sbb
mov
cwtl
lock
dec
pop
andl
mov
lock
movsb
xchg
imul
pop
adc
lds
inc
in
rclb
adc
arpl
hlt
jno
pop
mov
scas
sbb
xchg
cld
mov
cmpsb
stc
sarl
pop
rclb
cmp
sti
mov
mov
pop
and
mov
inc
xor
pop
xchg
pop
or
push
jns
aas
xchg
fistl
les
push
lahf
xor
sub
mov
in
repz
stos
or
int
jmp
into
arpl
sub
lods
pop
imul
in
mov
mov
adc
andl
sbbl
and
inc
mov
in
push
std
hlt
add
aam
pop
mov
out
arpl
adc
outsb
popa
popf
daa
xchg
jb
pop
testl
pop
addr16
ficomps
hlt
mov
sub
in
jmp
adc
mov
stos
les
push
cs
or
add
or
pop
cmp
outsl
cmc
push
andb
aam
addl
dec
jmp
inc
lods
add
ds
push
jg
mov
sarb
pop
mov
nop
push
je
stos
aam
jne
rcrb
push
outsl
push
in
mov
popf
dec
mov
cmpsl
es
cld
dec
test
dec
xor
mov
sti
pushf
daa
outsl
mov
mov
shll
out
cmova
fbld
cmp
icebp
call
cmp
mov
cmp
cmpps
jg
insl
pop
adc
insl
rclb
add
cs
sarl
mov
push
sub
add
lods
out
push
push
add
mov
stos
mov
ds
xchg
daa
cwtl
add
jnp
xor
scas
or
cli
xor
xchg
das
lock
jno
and
xlat
insl
sub
push
js
addr16
or
or
lock
std
mov
push
inc
xchg
fisubrs
fistpl
xor
and
dec
cs
pop
out
popa
test
call
mov
rorl
arpl
rorl
and
idivl
mov
xchg
fsubl
repz
ret
xlat
sarl
fnstenv
fsubs
mov
adcl
inc
add
push
cmp
dec
sbb
jl
push
imul
inc
or
divb
cmpsl
sbb
fisttps
mov
scas
es
inc
pop
imul
mov
fsubl
ss
incb
mov
shrl
enter
push
insl
test
xor
inc
mov
and
sub
lea
gs
adc
loope
in
aad
adc
pop
xor
subl
xor
xchg
push
negl
fcoml
or
cmpsl
ss
inc
cmp
xor
loop
mov
or
sbbb
xor
xchg
or
cmp
push
daa
outsl
ret
mov
jns
enter
mov
ds
pop
mov
repz
sub
js
jns
inc
stc
mov
sbb
out
movsb
xor
mov
mov
clc
lds
and
pop
mov
insl
add
push
aaa
ds
xchg
jecxz
mov
xorl
or
nop
jae
movzwl
outsl
xchg
pop
xchg
mov
inc
aaa
jmp
out
pop
filds
iret
idivl
out
xlat
pop
movzwl
outsl
xchg
pop
xchg
mov
inc
aaa
jmp
out
pop
filds
iret
idivl
xlat
addr16
jg
xchg
pop
inc
dec
ja
scas
cmpsl
lahf
inc
aaa
pushl
out
pop
out
iret
jecxz
mov
push
mov
mov
xchg
filds
dec
ja
cwtl
add
inc
ja
adc
and
xor
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
jns
imul
aaa
cmpsb
pop
stc
jl
insb
mov
inc
jmp
jne
pop
test
aaa
jns
imul
cmp
or
lods
inc
leave
ja
fs
aaa
jns
imul
cmp
or
stos
adc
ja
inc
lret
jno
aaa
xor
imul
xchg
cmp
jbe
int3
xor
adc
and
in
mov
insb
repnz
adc
aas
mov
inc
cmpb
cmp
push
xchg
mov
cmp
stc
ret
pop
cld
cmp
push
cmp
popa
dec
stc
pop
stc
test
xchg
mov
shr
lods
mov
lcall
pop
andb
mov
lret
leave
and
xor
stos
lcall
push
aaa
push
out
cmp
mov
cmpb
inc
addl
mov
push
test
cltd
fsub
daa
daa
imul
cmp
or
fnstcw
outsb
mov
daa
mov
mov
sub
push
shll
jl
dec
fidivrl
xor
inc
frstor
fstpl
mov
sub
jg
inc
movsl
sbb
or
pushf
ds
cwtl
adc
jmp
mov
xchg
cmpb
sub
stc
inc
jmp
ja
pop
test
aaa
jns
imul
cmp
or
fldenv
ja
pop
test
aaa
jns
int3
push
loop
insl
in
mov
sbb
roll
mov
pop
test
imul
test
adc
and
xchg
mov
dec
sbb
push
notb
add
cmp
dec
imull
lea
sbb
test
fsubs
sbbl
xchg
jg
lcall
int
loop
cmp
mov
push
push
jle
mov
decb
popa
push
in
shl
enter
ret
sbb
loop
mov
inc
mov
push
add
mov
int3
push
fisttpll
adc
test
and
xchg
xor
nop
hlt
jbe
fwait
cld
stos
dec
mov
push
dec
fisttps
mov
mov
sbb
sub
sub
loopne
xor
pop
jns
scas
mov
xor
addr16
repnz
test
jnp
add
in
inc
cli
lahf
xchg
lcall
lret
and
stos
lock
repnz
inc
scas
sub
mov
sbb
mov
ss
or
pusha
add
cmp
ja
inc
jmp
dec
ljmp
movsb
pop
les
mov
mov
jo
test
sahf
adc
arpl
mov
out
aas
dec
adc
int3
daa
out
rol
adcl
sbb
mov
mov
adc
imul
pop
call
arpl
pushf
or
add
mov
or
cli
xor
or
xor
xchg
mov
popf
add
shrl
jne
divl
in
or
xor
rcrb
mov
and
pop
ljmp
stos
mov
pop
mov
cmpsb
js
jge
jb
insl
inc
test
jge,pn
jp
test
call
or
movsb
xor
xchg
mov
lret
push
aaa
loope
add
mov
scas
cmp
sub
pop
jno
cmp
imul
sbb
sub
mov
push
pop
push
inc
xor
subl
mov
loop
pop
push
les
je
scas
fldenv
scas
test
sub
mov
xchg
sbb
sbb
dec
dec
mov
cli
ja
cld
lods
es
or
ja
push
faddl
pop
loope
xchg
pop
cld
mov
repnz
lahf
arpl
bnd
jae
xor
out
loop
subb
push
pop
sub
mov
sub
stos
push
hlt
sub
movb
stos
lahf
and
xchg
cwtl
cmp
or
cmp
jmp
and
mov
mov
mov
pop
fstl
je
mov
inc
jmp
rcll
dec
mov
xor
adc
mov
adc
ljmp
lock
in
lgs
pusha
dec
fcomps
js
push
sub
add
sbb
xchg
sub
and
or
pop
and
pop
insb
jl
mov
push
xchg
nop
sub
adc
movsb
jp
filds
xor
ret
jo
xor
in
insb
test
fldl
xor
pop
xchg
ret
jo
test
popf
lahf
push
mov
jg
or
cmc
dec
sahf
fsubp
add
cmp
lock
cld
sub
dec
lea
lods
addr16
cmp
insb
bound
pop
or
gs
sbb
pop
mov
repz
testb
or
mov
or
fwait
clc
les
int
rclb
xchg
push
mov
mov
cmp
sbb
cmp
jg
sbb
iret
xchg
push
fistl
lds
ljmp
mov
jbe
push
outsb
xchg
xchg
sbb
repnz
in
js
cmc
aam
cmpsl
push
pop
push
pop
xchg
lods
cmp
mov
xchg
jno
les
fmuls
icebp
jl
mov
cmp
mov
shlb
aam
add
mov
cmp
xchg
mov
mov
xlat
lods
ljmp
dec
ljmp
pop
fcompl
jnp
loop
sbb
stos
mov
inc
lock
test
int
addr16
insl
lahf
dec
push
pop
xlat
pop
rcl
sub
inc
fldcw
jl
mov
sbb
sub
pop
adc
fldt
aaa
fs
jo
gs
add
or
and
out
notl
aas
add
xchg
cmp
cmpsb
nop
or
stc
push
insb
test
dec
inc
or
mov
mov
enter
add
push
fbstp
out
or
push
fldt
cwtl
add
in
stos
mov
sub
in
push
and
test
cmc
fadds
pushf
jo
push
lcall
dec
dec
fs
cmp
pop
add
sub
inc
mov
and
jns
int
adc
fstps
push
add
lea
cmp
inc
cs
loope
or
and
add
popf
push
ss
inc
jmp
and
push
jbe
es
inc
int3
enter
jecxz
inc
pop
or
ret
js
fistl
clc
or
jecxz
js
roll
imul
or
shr
repz
popa
sub
aaa
lods
out
das
into
mov
mov
mov
pushf
pop
lea
fcoms
das
sti
rolb
push
inc
in
dec
or
sub
dec
sahf
xchg
ja
roll
je
jle
xchg
shrl
sub
cld
mov
testb
push
mov
xchg
rcll
pop
pop
cmp
insl
std
mov
cmpb
push
xor
xor
popf
mov
push
pop
nop
dec
pusha
push
sub
les
add
lods
push
scas
or
mov
mov
scas
cmp
fildll
sti
fistpl
leave
ficoml
sub
cmp
sub
insl
inc
std
addb
sarb
and
dec
and
xchg
push
sub
es
ljmp
ljmp
inc
popf
or
xlat
movsb
scas
mov
and
xor
dec
xchg
fmuls
in
inc
cmpsb
jo
cltd
in
lods
sub
and
fs
cmc
stos
sbbb
xlat
lods
fiaddl
fnstenv
add
push
or
dec
push
fdivrl
stos
pushf
aam
dec
mov
xchg
sub
les
xchg
cld
sti
ret
int3
jg
inc
push
xchg
adc
add
dec
lcall
popa
dec
or
sbb
or
add
cs
xor
repz
push
push
and
inc
or
js
insl
insb
xchg
into
outsb
sahf
stc
push
paddd
stc
inc
bound
iret
nop
je
fwait
add
movsb
clc
mov
enter
sbb
lds
dec
cld
les
dec
xchg
push
sbb
pop
and
pop
xchg
inc
jae
cmpsl
lret
sbbl
push
out
clc
sarb
leave
push
jg
inc
outsb
inc
push
into
pop
pop
popl
push
pusha
and
inc
pop
and
loope
scas
pusha
add
ja
sbb
push
lahf
call
sub
loop
cmc
push
les
pop
gs
mov
cmpsl
addl
stos
addr16
add
pushl
add
sahf
aas
push
call
adcl
ret
adc
inc
popf
push
mov
and
imul
sbb
or
push
ret
cmpsb
test
xchg
push
pop
popf
out
and
shl
fwait
sbb
adcl
push
mov
daa
lods
popa
mov
inc
jb
clc
fidivrs
outsb
leave
lods
cmp
test
pop
dec
cmp
fistl
cli
repz
shll
jp
ss
aam
jp
dec
aad
jmp
cmp
icebp
inc
or
inc
mov
sahf
add
mov
jbe
hlt
scas
lahf
inc
ficoml
and
or
xor
cmpsb
test
aam
outsb
xor
and
or
dec
pop
out
mov
cmp
mov
nop
xlat
push
xchg
mov
sbb
xchg
pusha
lcall
shrl
sbb
shlb
out
ds
xor
xor
fscale
in
shrb
sbb
jbe
jp
sub
fcoml
sub
daa
mov
lock
jmp
aas
testb
and
fadds
mov
mov
pusha
sub
sub
push
mov
jmpw
pop
in
push
stc
imul
out
adc
push
mov
dec
jl
loop
in
cli
sti
cltd
lods
into
scas
sub
dec
push
xor
out
pop
or
inc
andl
aad
jecxz
sbb
xor
mov
fnstsw
leave
loopne
sbb
test
inc
push
adc
xchg
mov
and
pop
ljmp
inc
sbb
mov
popl
jecxz
lret
xchg
mov
jl
insl
xlat
pop
pushf
jno
iret
jp
into
aam
push
adc
hlt
enter
dec
out
cltd
dec
inc
into
pop
scas
test
xlat
in
dec
stc
inc
sbbb
inc
stc
fildl
lds
gs
in
rcrb
inc
std
cmp
xchg
test
loop
sub
outsl
adc
add
inc
pushf
sub
rcrw
cmpsl
mov
mov
jbe
xor
xorb
in
psllq
add
std
fld
rcrl
mov
ret
dec
or
sahf
into
jne
lock
push
std
in
sub
dec
cwtl
arpl
xor
mov
sbb
inc
xchg
xor
pop
jns
test
mov
push
sbb
pop
ror
adc
gs
movsb
cmpsl
or
xchg
and
mov
push
pop
inc
hlt
js
ljmp
sub
push
pop
testb
push
jns
ja
cmpsb
xor
mov
xor
lret
mov
mov
dec
cli
imul
adc
jae
sub
mov
jl
or
jbe
mov
dec
jmp
mov
inc
jbe
pop
rcr
mov
rcrb
xchg
mov
or
lahf
jle
pop
dec
push
xorl
ljmp
adc
add
movsl
sbb
jge
lret
xchg
call
test
clc
adc
hlt
shrl
mov
jns
cld
lcall
adc
inc
sub
pop
in
js
lods
mov
div
and
or
jo
repz
sub
sahf
call
xchg
ljmp
cmp
jp
in
ret
jp
fmull
bound
mov
movsb
add
ret
jno
test
call
push
xor
outsb
xor
sbb
xchg
sbb
insb
jg
jns
push
push
mov
data16
push
pop
sahf
xchg
rcrb
push
xlat
add
mov
or
push
fwait
push
out
xor
pop
inc
sub
sub
not
lock
dec
dec
imul
test
adc
inc
sub
dec
call
jbe
adc
sub
mov
shl
das
mov
pop
dec
pop
inc
lock
shrl
dec
lret
or
mov
jmp
inc
cmp
into
cld
or
in
loop
call
xchg
sbb
pusha
xchg
int3
neg
mov
int
jmp
in
push
mov
imul
inc
sti
out
adc
jg
mov
sbb
lds
mov
jl
sbb
and
sti
mull
lret
mov
daa
addr16
mov
xchg
ljmp
leave
mulb
pop
add
jo
in
cmpsb
jne
jne
mov
out
sbb
cmc
and
movsb
pop
int
lret
nop
add
xchg
in
fidivs
stos
repnz
daa
jle
popf
add
xchg
aas
and
arpl
jmp
push
adc
cmp
insb
out
jb
hlt
xor
in
popf
int
pop
mov
sub
lods
filds
loop
fwait
daa
pop
sbbl
out
mov
xor
jbe
and
call
inc
xorb
mov
sub
out
pop
push
in
jmp
xor
sub
push
fstpt
shll
out
push
push
lea
aas
sbb
fs
xchg
loope
xchg
cmpl
jno
sbb
jo
mov
in
adc
ficoms
mov
mov
inc
iret
mov
loope
int
inc
aaa
js
xchg
dec
mov
fwait
mov
dec
int3
sub
aam
scas
ss
xor
frstor
cltd
lods
andb
ss
jno
loope
jmp
xor
out
inc
mov
aas
test
iret
mov
xchg
fimull
mov
insl
dec
cs
push
jbe
hlt
jle
push
in
mov
dec
inc
or
pop
or
dec
scas
mov
aas
movsb
lcall
push
repnz
arpl
add
lret
outsb
clc
xchg
inc
mov
rcll
outsl
push
fisubrl
movsl
int3
xchg
imul
into
fiaddl
repnz
fnstcw
faddl
xlat
xor
push
sub
jecxz
or
sets
fldcw
push
mov
mov
xchg
call
lds
in
inc
xor
fstpl
pushf
push
fsubs
xchg
movsb
idivb
pop
iret
inc
push
adc
and
test
adc
add
mov
hlt
ds
popa
xchg
pop
add
test
stos
mov
pusha
xchg
sub
jecxz
aam
out
or
mov
and
dec
es
and
mov
mov
sbb
mov
div
out
lock
mov
inc
sbb
xor
mov
loopne
dec
cwtl
adc
xchg
jmp
das
mov
dec
sub
sub
lock
push
push
aad
in
and
popa
outsb
adc
shlb
in
popl
jecxz
or
inc
fdivp
outsb
call
push
mov
jne
or
nop
push
aam
lea
cmp
es
sbb
in
xchg
jns
out
lcall
xchg
out
ret
aam
xchg
or
es
cmp
jl
sbb
outsl
roll
insb
pop
pop
scas
ret
sub
jge
movsb
cmpsl
dec
in
fildll
dec
jmp
std
push
bound
jge
fwait
or
cltd
and
imul
sub
pop
sarl
rorl
shlb
adc
xor
es
fwait
jmp
sbb
sub
jb
mov
inc
test
sub
cmp
and
push
sbb
lds
adc
push
sar
pushf
cs
adc
imul
fnstcw
cmp
mov
mov
dec
mov
push
or
mov
fists
cmpsb
movsb
in
mov
icebp
aam
cmp
lock
mov
aaa
fimull
ja
xor
push
cmp
mov
mov
mov
test
adc
cmp
xor
push
pushf
stc
call
stos
pop
mov
hlt
testl
loop
js
push
insl
add
lods
sarl
fildl
jns
jno
push
clc
je
outsb
mov
aas
mov
inc
imul
mov
daa
outsb
push
out
addl
arpl
jge
lods
xchg
xor
xor
repnz
movsl
pusha
sbb
notl
pop
cmp
fsubs
nop
push
mov
and
inc
fists
fsubs
jmp
mov
lds
sbb
adc
popf
loop
pop
pop
or
and
push
fildl
lds
pop
cmp
outsb
and
loopne
ret
mov
cwtl
insb
lahf
into
imul
enter
mov
repz
mov
pop
mov
jb
pushf
mov
lret
outsb
pop
mov
cmp
or
lock
xchg
ret
jge
hlt
fistl
movsb
xchg
cltd
push
xor
fisubrs
cld
out
in
icebp
jns
push
arpl
adc
dec
cwtl
in
insl
sub
mov
cmpsl
gs
fistps
mov
movsl
pop
sub
sub
pmullw
jb
pop
jmp
xor
cli
pop
push
insb
ret
mov
lods
xor
push
lret
jl
clc
arpl
push
pop
jecxz
push
imul
inc
hlt
push
xchg
cwtl
adc
jns
dec
and
clc
adc
jb
sub
es
mov
sub
pop
pop
fstpt
inc
and
bound
jmp
scas
fcomps
mov
out
lahf
pop
sbb
rep
mov
pop
lret
fisttps
in
aad
imul
insb
cld
mov
in
push
push
rol
je
aam
in
es
and
jle
sub
std
iret
fidivrs
jecxz
in
or
cli
outsb
pop
sarl
xchg
inc
mov
inc
aaa
mov
fwait
loopne
xor
mov
mov
inc
jl
cltd
xchg
scas
int3
repz
or
fnstenv
xchg
pop
push
xchg
and
xor
adc
pop
sub
fiaddl
loopne
rcll
xchg
push
add
ret
or
push
push
cltd
jnp
lods
dec
movsl
and
xor
sarb
xchg
outsb
or
adc
sbb
jecxz
cs
imul
xor
adc
inc
aas
add
jmp
jl
lahf
scas
lea
push
mov
inc
adc
and
mov
inc
stos
pop
mov
ds
xchg
cwtl
sbb
push
push
push
cmp
or
sub
adc
sbb
dec
dec
push
pop
scas
xlat
mov
cmc
pop
push
mov
add
and
pop
and
or
in
insb
les
cmc
dec
in
mov
pop
out
jb
mov
idiv
or
cmp
sub
xor
sub
jo
std
es
popf
pop
ret
test
xchg
xorb
pop
lret
arpl
xchg
jae
cmp
cmp
xchg
jp
lods
xlat
test
sub
lods
sbb
sbb
mov
ret
xchg
add
mov
add
xor
and
mulb
fidivl
jnp
movsl
xchg
insl
lods
scas
sahf
sub
addr16
push
pushf
test
push
call
jle
fdivrs
call
cmp
push
shlb
dec
jo
sbb
mov
fidivs
inc
push
cwtl
add
xor
pop
pusha
push
movsb
cmp
sbb
adc
js
arpl
mov
lahf
aam
jp
into
dec
cmpsb
inc
adc
xchg
jg
xchg
jl
call
pop
fbstp
adc
outsl
cmp
lcall
sbb
loopne
nop
dec
ret
jg
mov
es
aas
insb
add
sub
subl
mov
push
xchg
sti
dec
cltd
adc
mov
xchg
stos
push
int
xor
adc
lds
and
dec
inc
sub
fnstenv
fs
sarb
cmc
loope
repz
bound
aam
mov
cmp
fisubl
mov
out
xor
mov
rorl
mov
pop
add
divb
inc
in
push
jmp
and
xor
jecxz
insb
xchg
mov
sub
out
add
mov
xchg
sbb
sbb
scas
iret
mov
fwait
add
xrelease
mov
fucomip
enter
ret
repz
scas
clts
arpl
push
mov
xor
mov
rclb
arpl
push
xor
repz
cs
lock
cli
data16
call
mov
add
loopne
xlat
ficoml
insl
loopne
loop
insl
pusha
cmpsb
jae
jl
inc
mov
xchg
lahf
jae
mov
int
mov
test
dec
pop
movsl
inc
stos
ja
xchg
and
xor
popa
jb
jle
mov
dec
cmp
imul
cltd
sub
push
sarb
ret
jmp
inc
push
lret
dec
inc
and
pop
cmp
sbb
addr16
adc
push
les
sbb
push
inc
incl
int3
loope
outsb
push
andl
xchg
andl
inc
jns
stos
movb
sub
push
popa
pop
imul
in
js
cmc
icebp
xchg
scas
loopne
sbb
add
push
mov
dec
mov
and
sbb
les
pop
fcom
jnp
cld
popa
movsb
mov
fwait
xlat
icebp
enter
xchg
gs
mull
xlat
pop
loop
adc
sub
pop
mov
xchg
aam
xchg
mov
pusha
rolb
rol
pop
ja
ljmp
in
xchg
mov
shlb
aaa
jb
jo
aad
mov
or
sti
xchg
ljmp
fiadds
test
ljmp
std
popa
adc
cmp
or
lea
cld
lock
mov
cmp
xchg
inc
dec
jbe
add
je
and
mov
clc
pusha
cmp
add
sbb
je
inc
daa
outsb
push
test
xlat
clc
xlat
inc
sar
xchg
inc
in
pop
sbb
or
nop
arpl
sbbb
cli
orb
mov
add
jb
shll
imul
pusha
dec
jne
cmp
mov
ds
out
into
push
mov
popf
rolb
or
int3
fstps
cld
or
cmp
or
fldenv
ja
pop
test
aaa
jns
imul
cmp
or
fldenv
ja
pop
test
aaa
jns
imul
cmp
or
fldenv
jbe
pop
test
aaa
jns
imul
cmp
or
jae
leave
add
and
data16
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
and
adcb
sub
pop
shlb
add
lds
push
and
adcb
inc
ret
movsl
and
adc
add
push
and
adcb
inc
ret
movsl
mov
adc
daa
lcall
mov
jns
lods
and
lods
les
xchg
mov
dec
rcll
pop
in
insl
lcall
xchg
pop
lret
jp
push
sbb
hlt
sahf
xchg
adc
jne
cmp
out
outsl
add
into
orb
movsl
int
ret
mov
mov
and
dec
adc
repnz
sub
xor
std
incl
or
inc
aad
in
ljmp
xlat
adc
fsubp
gs
call
mov
xor
dec
in
imul
push
xor
push
inc
xor
mov
mov
push
push
push
jmp
adcb
inc
ret
movsl
and
adc
cmc
jb
inc
aad
fs
mov
jmp
sti
mov
repnz
inc
test
push
in
cmc
add
mov
jns
gs
xor
rcrb
xchg
jge
add
add
xor
imull
loop
repnz
ret
movsl
and
adc
cmc
jb
inc
aad
and
adcb
inc
ret
movsl
and
adc
cmc
jb
inc
aad
and
xor
aad
rcrb
sbb
lret
jne
out
push
pop
fisubs
pop
mov
sbb
cld
adc
sbb
cwtl
sarl
pop
scas
cmp
cmp
mov
test
jo
jo
adc
sub
mov
lods
dec
xor
fnstsw
stos
pop
jno
jno
test
cmp
cmc
lods
pop
shrl
mov
jl
mov
dec
dec
xor
cmp
testb
push
rcrl
loopne
stos
push
ficomps
and
sbb
or
jp
xchg
inc
adc
mov
rol
sahf
inc
cli
sbb
call
movsb
dec
xlat
or
pusha
pop
jb
adcb
daa
movsb
mov
xchg
cwtl
and
mov
adc
pop
imul
add
ljmp
negb
sbb
and
sbb
testl
call
xchg
addr16
dec
mov
clc
or
or
cmp
js
cld
inc
jmp
adc
cmp
jmp
jo
daa
js
sub
xor
dec
in
aad
loop
push
addr16
sarb
mov
divl
adc
push
dec
js
push
daa
xor
add
aas
or
pop
xor
push
lcall
aad
mov
popf
push
add
mov
orb
scas
and
lds
inc
call
mov
test
jnp
jle
cwtl
pop
add
pop
std
dec
in
fcomps
orb
mov
ja
loopne
lods
adc
sahf
cmp
adc
push
int
notb
mov
cs
push
xlat
pushf
push
jb
jbe
xlat
xchg
xchg
sahf
lahf
jge
enter
sub
int3
mov
jae
push
sbb
xchg
fwait
lret
and
pop
xchg
dec
shlb
mov
add
cmc
push
jae,pn
xchg
mov
jbe
cltd
insb
fwait
sbb
pop
test
negb
insb
pop
or
divl
push
sbb
ja
xchg
das
dec
fldt
aad
cld
jp
push
push
xchg
dec
ja
cld
and
cmpsb
push
xor
dec
adcb
adc
fiadds
loope
ss
les
andb
test
or
jae
sub
popa
test
pushf
mov
jmp
and
push
and
xor
fiadds
out
dec
dec
std
test
ja
push
xor
and
dec
enter
and
and
jnp
imul
or
clc
lods
mov
inc
jle
adc
pop
jmp
push
sbb
xor
lret
jecxz
call
jb
dec
mov
xorb
shll
xchg
xchg
pop
scas
icebp
lods
add
xor
jns
or
js
in
or
and
mov
test
enter
and
xchg
insb
dec
lret
leave
rcrb
sahf
pop
lods
or
shr
xchg
and
das
outsb
popf
mov
out
jnp
scas
push
sti
movsl
mov
int
jecxz
mov
in
pop
mov
out
lods
cmp
ds
pslld
sahf
je
mov
test
and
mov
and
cli
mov
pop
nop
fdivrs
xor
shrl
xor
xlat
push
mov
push
out
std
sub
dec
pop
and
mov
das
mov
add
jl
into
jnp
cmp
mov
mov
lahf
xchg
mov
cli
jno
cmp
sub
xchg
push
or
or
jae
push
test
ret
fs
arpl
ja
inc
outsb
sbb
or
pop
fildll
mov
fnstsw
cwtl
sub
call
mov
imul
loope
dec
cmp
iret
cmp
popf
jbe
mov
push
test
in
sbb
lods
xchg
insb
outsl
inc
out
aas
call
cs
jmp
divb
fld
xor
arpl
in
vdivss
xor
enter
sbb
xor
scas
pop
cmc
adc
mov
int
sbb
mov
jne
rorb
cmpsb
fcmovbe
push
gs
cmpsl
lahf
sar
cmpsl
pop
imul
fmull
add
fstpt
adc
je
aaa
sahf
pop
add
inc
push
scas
xchg
or
movsl
ret
sub
mov
push
outsl
mov
cwtl
out
push
pop
push
sbb
inc
push
in
jns
sub
add
aad
xor
jg
shll
pop
inc
cmp
fucom
rolb
cltd
cmp
shrl
push
lret
mov
popf
jae
xchg
pop
sbbb
xchg
push
stc
mov
stos
cmp
mov
aad
test
cltd
cmp
push
cmp
gs
insl
dec
pop
dec
dec
notb
test
cld
push
jne
gs
sbb
dec
es
call
jle,pn
testl
and
pop
repz
sub
enter
jb
jno
add
lahf
xchg
jmp
jmp
shlb
daa
add
rcr
fnstcw
push
cs
int3
into
push
mov
jo
aad
jp
sbb
lods
mov
adc
or
jl
mov
mov
aas
and
sbb
cld
mov
aam
in
cli
sub
xor
jmp
jb
add
jno
sub
inc
push
ret
repnz
nop
aad
jge
test
inc
and
cli
add
out
sahf
xor
inc
rcrl
int3
mov
loope
push
jmp
mov
add
pop
jne
scas
add
loopne
fsubl
and
iret
notb
repnz
mov
scas
aad
mov
insb
outsl
cmpsl
and
shl
lock
insl
testl
loop
push
popa
inc
xor
jbe
in
outsb
dec
sbb
aad
inc
mov
popa
mov
outsl
pop
je
jg
push
out
xlat
test
mov
cld
inc
repnz
adc
in
push
cmp
repz
push
fistl
jae
dec
jno,pt
cmp
jb
sbb
test
hlt
inc
mov
dec
fwait
clc
and
lret
mov
fsubs
std
cwtl
mov
ret
into
cs
fstp
call
subl
enter
fiadds
sbb
frstor
ss
sub
xchg
add
cli
xchg
aaa
pop
mov
out
and
ret
data16
mov
mov
pop
pop
and
cmc
in
ljmp
ljmp
cli
cmp
in
mov
mov
pcmpgtb
stos
mov
mov
mov
xchg
push
xchg
inc
or
push
xchg
out
add
push
scas
lods
and
pop
pop
mov
sub
ret
cld
int
add
fistpl
hlt
cmpsb
aam
dec
rcl
cmp
dec
xchg
inc
or
cwtl
std
ret
cli
scas
add
mov
icebp
neg
aam
or
aad
and
xor
pop
inc
cs
scas
and
fwait
mov
push
shll
repz
shr
pop
pop
inc
jg
aam
cltd
addr16
flds
scas
enter
push
jle
mov
adc
mov
daa
ds
sub
pop
popl
mov
in
ljmp
xor
mov
dec
insl
mov
out
call
ds
mov
adc
lock
jb
clc
push
std
cmp
xchg
mov
sub
mov
gs
mov
pop
int3
bound
clc
xchg
leave
repnz
mov
enter
decb
lret
popf
popa
insl
and
sbb
cwtl
xor
inc
subl
inc
cmpsl
insb
or
insl
jns
std
out
mov
test
mov
in
push
les
xor
or
mov
stos
arpl
daa
mov
xor
jge
imul
ja
xchg
inc
xchg
and
fisttpll
cmc
aaa
and
push
shll
cmpsb
ss
sub
push
test
sbb
das
or
jno
jne
test
shll
js
js
icebp
addr16
mov
nop
cmpsb
leave
movsl
jno
pop
aam
fwait
mov
xchg
scas
inc
dec
pop
mov
negb
xchg
popf
or
popa
and
inc
pushf
stos
es
jmp
and
dec
test
out
in
pop
mov
sub
mov
mov
pusha
fs
fnsave
insl
sub
push
jle
adc
ret
clc
cltd
fcoms
cld
and
xor
sub
imul
and
xchg
gs
negl
sub
lea
and
enter
xchg
rorl
cmp
adc
adcl
aaa
or
mov
cli
hlt
jl
mov
pop
ljmp
sub
leave
mov
and
inc
jmp
nop
inc
int3
popf
xor
mov
cmc
out
mov
xlat
add
scas
sub
lcall
jo
push
cs
rcrb
dec
cmpsb
rcr
xchg
lea
lcall
inc
fimull
in
sbb
lret
mov
lods
cwtl
add
daa
out
aam
sti
mov
sub
out
jmp
push
jp
add
mov
dec
and
loope
adc
sub
fcompl
mov
mov
mov
mov
mov
out
sub
cli
dec
dec
mov
cmp
mov
shll
sub
cmp
cmp
movsb
sub
inc
jl
pop
lods
adc
jno
insl
lds
ss
test
dec
jns
lret
lahf
pusha
mov
push
cmc
sub
arpl
sbb
inc
jbe
sub
adc
push
pop
pop
out
jne
loopne
pop
hlt
jg
cwtl
popa
ja
cmp
mov
jg
fsts
mov
or
inc
push
or
rorl
pop
mov
xchg
push
add
xchg
aam
nop
xchg
pop
jecxz
sahf
jbe
add
out
jl
scas
xchg
sbbb
adc
xchg
cmp
fbstp
xchg
and
ret
cltd
mov
in
scas
dec
pop
cmc
cmp
add
idivl
leave
mov
or
dec
nop
lds
and
outsb
add
bound
into
sub
mov
test
fcomi
dec
daa
mov
adc
add
xchg
dec
pop
clc
cmp
adc
iret
lods
lcall
cs
call
push
std
mov
mov
test
mov
loope
mov
jnp
jmp
and
in
pusha
repnz
mov
and
or
hlt
imul
mov
jp
daa
leave
add
nop
cmpsb
or
inc
xor
sbb
je
xorb
arpl
adc
sbb
sbb
fsts
shrl
loop
rcrb
pop
jle
sub
shlb
addb
mov
notl
cmp
dec
popf
pop
sbb
xor
test
push
cli
push
and
ss
mov
enter
mov
and
inc
mov
sub
sub
push
in
inc
inc
std
push
mov
and
sbb
and
mov
and
cwtl
pop
push
jecxz
das
test
out
movsb
in
stos
push
xor
lock
inc
shll
in
cwtl
stc
adc
or
mov
mov
mov
adcl
mov
inc
adc
es
in
mov
loopne
xlat
popf
xchg
mov
test
clc
in
and
xchg
subl
push
cmpsb
in
or
adc
out
mov
push
loopne
movsl
loop
mov
mov
cmp
xlat
jecxz
es
mov
das
into
and
ret
xor
jl
mov
push
in
sbb
cld
jnp
arpl
sub
imul
xor
or
aaa
frstor
fimuls
inc
jmp
mov
stos
add
inc
mov
pop
jl
repz
or
leave
jo
jns
imul
ffree
fwait
sub
aad
pop
add
cmpsl
mov
daa
cmp
fidivs
shrl
xchg
push
ja
aas
adc
lods
mov
leave
pop
or
call
inc
add
out
loop,pt
jo
lret
hlt
lea
push
adc
in
xchg
cwtl
inc
cwtl
mov
xor
ret
das
lahf
mov
push
cltd
cltd
fsubs
insl
loope
sub
pop
sarl
sti
inc
cmp
les
mov
clc
mov
pop
fidivrs
and
inc
inc
aam
xchg
jae
adc
inc
nop
icebp
pop
lock
incb
and
mov
add
hlt
lret
xchg
addb
jp
popf
arpl
jbe
add
fidivl
fstps
push
xchg
xchg
lock
lret
adc
sbb
lcall
in
dec
jb
jo
in
fcoml
sub
pop
mov
clc
call
jl
jb
outsl
js
clc
inc
xor
mov
cld
jne
aas
sti
mov
add
addb
das
imul
icebp
sbb
pushf
jae
daa
lret
xorb
or
pop
cmp
daa
jnp
cwtl
and
xchg
adcl
mov
sub
call
test
fsubrp
out
out
sub
ss
sbb
and
jmp
pop
cwtl
and
inc
ret
jge
call
fsubl
mov
aad
call
shlb
mov
sub
outsl
lahf
pop
popf
pop
in
xor
pop
stos
dec
js
jl
dec
dec
ret
ret
or
mov
push
pusha
pop
mov
test
mov
pop
hlt
pushf
inc
cmpsb
push
jns
pmaxub
push
or
add
mov
repnz
sbb
xor
sbb
scas
aad
aam
data16
in
aad
mov
addb
test
aam
sahf
aam
cs
push
and
es
arpl
mov
xor
mov
clc
cli
arpl
or
push
in
pop
push
xorl
inc
sbb
add
or
call
pop
xchg
outsl
push
dec
mov
test
lds
rorb
ret
dec
mov
hlt
dec
adc
scas
hlt
xchg
repnz
mov
sub
adc
lcall
test
mov
ss
fstpt
or
mov
cwtl
or
mov
mov
fdivrs
insl
jge
cmc
test
jl
or
adc
mov
gs
jle
cmp
sbbl
loope
or
push
adc
cli
push
imul
repnz
in
sbb
pop
call
fs
sbb
mov
sbb
pop
and
jb
jmp
push
mov
fisttpl
inc
pushf
cltd
push
mov
lcall
pushaw
xor
cwtl
inc
cmpsb
pop
cld
and
imul
sub
and
mov
pop
aam
cld
jle
mov
and
loop
popl
fwait
adc
nop
push
mov
mov
movsb
jb
pop
out
cli
pop
inc
lods
aas
and
or
pop
sti
pop
cld
inc
imul
pushf
insb
inc
jle
xorb
jb
sbb
lock
sbb
mov
mov
push
ret
repnz
xor
inc
sbb
fistl
or
subb
mov
mov
repnz
pop
movsl
sub
mov
pop
test
xchg
call
add
jbe
arpl
clc
in
aaa
xchg
inc
pushf
scas
mov
sti
or
out
cmp
mov
daa
cs
lea
xor
fcoms
je
xor
aad
inc
sub
dec
jns
adc
cmpsl
fisubrs
arpl
fcmovu
mov
cmpsl
lahf
or
data16
sbb
aad
imul
and
xorl
leave
dec
loopne
das
lret
cltd
xchg
movsl
mov
ds
add
stc
lods
int3
add
mov
mov
push
push
xchg
cmp
adc
mov
lock
rcrl
movl
ljmp
inc
stos
add
pop
enter
scas
out
push
sbb
or
shll
repz
add
outsl
ret
add
push
ffree
mov
cld
jl
addl
push
cld
inc
push
push
mov
das
cmp
popf
jns
xorb
mov
push
xchg
popa
push
shrl
rolb
sub
mov
ljmp
xor
test
pop
scas
jns
mov
sbb
shrl
xor
dec
arpl
aad
stos
popa
daa
and
mov
pop
jae
lods
cmpsl
fldt
int
popa
in
dec
subl
mov
fnstcw
inc
sub
mov
jbe
ljmp
lret
in
cwtl
add
xchg
ret
nop
negl
repz
ret
mov
test
pop
jbe
into
movsb
sti
push
repz
pop
aad
push
out
mov
lcall
or
mov
adc
pop
xchg
xor
mov
jge
shll
clc
add
scas
mov
pop
lahf
loope
mov
mov
jl
add
das
jg
push
dec
aas
aaa
fs
add
push
fnsave
ret
loope
push
or
adc
mov
sub
xchg
mov
rcl
sub
xchg
push
push
xlat
mov
mov
mov
stos
fcmovnu
and
ja
sti
mov
lods
das
adc
sbb
les
and
fwait
inc
xor
outsb
lret
push
das
imul
shll
adc
cmpl
mov
dec
or
stos
and
add
jge
pop
xchg
jo
jl
pusha
testl
scas
inc
rcrb
push
add
pop
pop
subl
in
mov
jne
lcall
adc
loope
dec
xchg
xor
test
cmp
test
idivb
xlat
add
dec
adc
push
cmpsb
lahf
pop
jmp
scas
shrl
and
inc
pusha
fsubl
inc
pop
mov
mov
mov
ret
mov
dec
stos
jno
mov
mov
iret
shrl
dec
imul
or
into
js
cmp
and
add
sub
lods
lock
jo
outsb
sbb
add
xchg
movl
or
es
aad
cltd
loop
negb
mov
push
fsubl
lret
pop
int
mov
xor
sbb
push
rcrb
lods
adc
push
sar
jne
sbb
xchg
jae
push
mov
dec
mov
ds
repnz
test
add
push
cmp
movsl
xchg
outsl
mov
and
cmpsb
mov
pop
scas
les
xor
mov
data16
pop
xchg
and
jmp
mov
loopne
sahf
scas
fldl
ret
popf
push
mov
iret
push
pop
pop
or
pop
adc
andl
lcall
pop
adc
lods
js
pop
xchg
imul
ljmp
out
loope
xor
jecxz
js
in
ret
push
mov
cmp
cmp
cmpsb
mov
mov
xor
inc
xchg
add
add
dec
mov
mov
and
xor
sub
sbb
cmp
in
push
fs
pop
and
push
xor
nop
add
rorl
push
adcl
push
push
sbb
fildll
mov
testl
int
dec
scas
pushf
jmp
sub
cli
adcb
sbb
lods
pop
push
fmul
and
sbb
or
xchg
dec
sbb
push
or
adc
addb
adc
cs
hlt
xchg
and
fildl
into
sub
movsl
dec
pop
mov
pop
jge
cli
repz
hlt
dec
sub
xchg
mulb
rorl
dec
cs
lea
pop
xor
outsb
jge
jle
add
add
mov
in
pop
dec
adc
mov
repz
pop
xor
dec
std
mov
mov
cld
kmovw
test
mov
inc
imul
nop
aaa
in
ss
xor
sbb
rolb
push
dec
add
cs
es
push
insl
inc
sub
or
mov
std
test
jle
or
or
xchg
ja
pop
jmp
mov
dec
adc
hlt
icebp
jmp
and
popa
mov
or
fldcw
fnsave
add
outsb
mov
sub
jmp
outsl
xor
addr16
mov
push
vpavgw
jmp
sarl
enter
cmp
inc
mov
lcall
shrl
push
mov
jmp
movsl
adc
movsb
pop
or
imull
or
out
sbbl
mull
lcall
push
dec
popa
jo
shr
mov
cmp
and
out
cmpsb
inc
enter
push
cmpsl
xor
add
std
lea
cwtl
mov
movzbl
ds
in
out
xchg
mov
adc
mov
xlat
and
shrl
jle
cld
jl
jp
out
mov
adcb
inc
ret
movsl
and
adc
cmc
jb
inc
aad
and
adcb
inc
ret
movsl
and
adc
cmc
jb
inc
aad
and
add
jb
ret
movsl
mov
xchg
adc
cmc
jb
inc
aad
and
adcb
inc
ret
movsl
and
gs
ljmp
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
dec
mov
push
jp
add
aaa
cld
leave
or
sbb
sub
cmp
dec
lcall
mov
push
jp
or
sbb
sub
cmp
lret
sbb
sub
cmp
dec
fwait
pop
stos
insb
mov
pushf
push
jp
or
sbb
sub
cmp
lret
inc
lcall
cmp
or
jl
mov
call
add
out
mov
add
icebp
dec
loopne
std
imul
adc
test
inc
or
and
loopne
hlt
jbe
push
jl
sub
cmp
cld
insb
jmp
mov
xor
pop
xor
pop
fwait
enter
gs
int3
iret
loop
sub
mov
sub
jge
test
int
int3
jae
cmp
rolb
or
xchg
xor
adc
pusha
out
jp
inc
cmc
int3
cmp
adc
sbb
fiaddl
sub
or
leave
and
xchg
fisttps
repz
or
outsb
mov
test
jns
jl
mov
push
jp
or
sbb
sub
cmp
lret
sbb
sub
cmp
dec
lcall
loope
dec
sub
cmp
outsl
mov
mov
jne
inc
mov
and
cmp
cs
or
repnz
cmpl
dec
mov
push
jge
pushl
ret
sbb
adc
fcomps
enter
fsubrl
in
cmp
lret
sbb
sub
cmp
dec
lcall
mov
push
jp
or
sbb
sub
cmp
lret
sbb
sub
cmp
dec
lcall
mov
mov
pop
add
pop
xor
cmp
mov
xor
shl
js
ret
xchg
adc
test
bound
and
pop
test
cmp
and
cmp
xor
sbb
mov
in
xchg
pop
cld
adc
or
outsb
sub
pop
xchg
cmp
pcmpeqd
sbb
and
or
imull
lods
int3
int3
xchg
daa
lret
insb
jmp
lret
rcrb
pop
bound
mov
xor
ds
popa
rorl
sub
dec
push
and
mov
mov
out
sbb
pop
mov
pop
push
mov
loope
pop
test
lret
pop
xchg
das
lods
repz
fmulp
movsb
xchg
bound
std
pop
xor
push
lret
dec
or
imul
adc
xchg
lahf
sub
mov
ja
push
add
rcll
and
cli
hlt
or
pop
dec
fldt
in
outsb
xor
pop
cmp
imul
mov
jns
stos
push
ret
push
cs
and
mov
cmp
test
cmpsl
lds
ds
shlb
adc
xor
imul
sub
mov
call
lea
insl
stos
sub
fistl
add
cltd
dec
adc
add
xor
int3
pop
xor
push
jg
out
adc
scas
out
lahf
rol
lret
ds
ror
aam
das
mov
iret
pop
add
push
fcoml
gs
adc
iret
gs
jnp
cmpsl
xlat
add
jle
stos
ficomps
jle
mov
and
sub
clc
push
test
in
dec
fcmovb
adc
pop
aad
sub
sub
mov
push
sarb
popa
add
int
xor
dec
fdivrl
jno
mov
imul
inc
repz
push
test
sarb
mov
inc
xchg
cmpsl
jmp
xor
xchg
mov
mov
adc
jge,pn
add
push
in
stos
cs
pop
lods
scas
insb
popa
ret
inc
pusha
aaa
adc
jo
test
push
rcrl
aas
xlat
aaa
or
mov
jecxz
xor
lret
add
pop
das
push
mov
test
or
loop
mov
bound
cltd
xor
mov
sub
mov
cmp
pop
je
jae
jae
sbb
mov
jo
push
pop
rorb
sbb
push
mov
mov
pop
sbb
and
push
call
add
data16
pop
imul
fs
push
call
bound
dec
test
xor
sub
negl
loopne
lret
push
fstps
xchg
mov
aas
cmp
add
int
insl
or
scas
fs
ret
inc
or
xchg
xchg
ror
test
xchg
jb
xor
jl
xchg
dec
shl
sti
data16
xchg
hlt
nop
pushl
push
mov
lret
xchg
outsl
in
mov
mov
sbb
mov
adc
pop
mov
sarl
ficomps
jo
or
sub
xchg
loopne
int
or
frstor
in
test
ljmp
mov
add
jle
mov
mov
push
iret
pop
xchg
jbe
loop
push
or
xlat
stos
mov
jo
fldcw
add
roll
jbe
pop
mov
aas
test
sti
mov
mov
and
dec
mov
or
fwait
pop
inc
pop
dec
xor
stos
test
in
into
sahf
loopne
nop
mov
insb
pop
sbb
lods
fstl
stc
push
pop
mov
leave
xor
add
into
xchg
int
cmpsb
push
xchg
hlt
sarl
aas
cmc
call
jg
cmp
pushf
mov
cmpsl
test
pmulhuw
pop
clc
inc
sub
and
mov
and
and
out
arpl
mov
fsubl
inc
insb
mov
cli
sub
push
adc
insb
inc
mov
pop
loopne
fidivl
pop
loop
ja
and
jno
fdiv
xchg
inc
inc
push
jbe
imul
sub
fwait
test
add
mov
ljmp
mov
mov
mov
adc
mov
addr16
pop
jns
pop
aam
ljmp
iret
addl
lcall
cmp
lret
sub
mov
cmc
lret
inc
add
push
icebp
sahf
es
push
push
fldcw
mov
out
pop
imul
sbb
push
inc
daa
orl
movsl
inc
jbe
or
test
outsl
dec
xchg
sbb
jb
rorb
ljmp
shll
loope
inc
shr
pop
xchg
mov
adc
rcrl
popf
or
push
and
enter
mov
fcmovb
lds
lods
dec
prefetch
or
push
int3
pop
mov
xchg
nop
sbb
mov
test
add
xor
and
stos
mov
xchg
cmpsb
mov
or
int
jecxz
ficomps
cld
subb
mov
and
sbb
jnp
add
pop
xorl
imul
adc
push
inc
add
popa
stos
cli
xchg
push
cld
add
mov
and
or
push
adc
pop
sbb
loope
fildll
xor
inc
xor
arpl
lcall
adc
shlb
in
sahf
enter
shl
fnop
mov
xor
leave
les
push
cltd
mov
jae
cmp
cmpsl
lret
mov
mov
mov
xor
mov
xor
xchg
iret
int3
inc
lahf
sub
popa
jecxz
fmul
lret
mov
mov
data16
xor
fwait
push
adc
pop
stos
push
fisttpl
outsb
push
enter
notb
aam
mov
jecxz
ds
push
inc
mov
imul
xor
movsb
jp
in
pop
mov
xchg
inc
and
xchg
push
sub
mov
and
adcl
cmp
add
mov
pop
and
nop
jle
mov
mov
push
cltd
jl
mov
sub
jecxz
mov
js
inc
orb
mov
mov
xchg
adc
jmp
pop
sub
test
add
push
pop
lods
subb
imul
popf
out
outsb
in
mov
ja
dec
rcll
js
or
sahf
fldt
dec
push
test
sub
enter
fisttpll
cmp
sbb
add
jno
sub
xchg
adc
movb
add
out
mov
lret
loop
sub
jbe
call
xchg
sarb
xor
add
sub
mov
pop
xchg
imul
xor
mov
xchg
jb
inc
andb
cwtl
ret
loope
scas
pop
in
mov
push
and
adc
arpl
ss
pop
pop
pop
jmp
mov
dec
imul
ret
or
sar
push
sbb
fistl
cmpsb
mov
testl
lret
insl
xlat
xchg
cmpsl
pop
mov
int
jae
mov
or
daa
jb
adc
push
test
pop
pop
xchg
iret
pop
rcrl
pop
xchg
sbb
push
fwait
mov
mov
cmp
mov
aaa
aaa
in
jp
insb
popa
movsl
jmp
or
dec
xchg
imul
pop
scas
jb
pop
mov
mov
sti
iret
stos
mov
loopne
xchg
or
shll
fistps
adc
sub
jae
sub
xorl
push
adc
xchg
mov
and
mov
sbb
jae
rdpmc
mov
cmp
test
popf
out
ljmp
sbb
xor
xchg
sub
pop
mov
push
out
lret
inc
clc
lds
fstpl
cs
fistl
jge
and
jns
loop
test
jns
jno
ss
mov
xchg
testb
inc
xor
push
mov
aaa
inc
popw
cmpsl
cmp
fisubs
outsb
popa
xor
mov
push
fstps
nop
inc
lds
imul
cs
ljmp
addr16
cmp
push
sbb
enter
daa
sub
sbb
cmp
iret
fidivs
sub
fs
sub
adc
or
ror
jp
xchg
mov
push
into
and
test
dec
dec
inc
sub
repnz
adc
ret
movsb
push
xor
lods
cmp
add
cmp
test
inc
lock
mov
out
or
js
fnstenv
pop
dec
inc
adcb
pop
fisttpll
stos
pop
mov
mov
lret
fs
insl
push
and
bound
push
adc
in
arpl
and
and
fmuls
push
pop
dec
lcall
es
test
mov
outsl
and
loop
jns
repnz
adc
mov
pusha
push
cmp
in
lods
xor
into
ljmp
sbbl
mov
adc
fs
cmp
xchg
or
jg
jb
jae
mov
dec
lahf
gs
and
cmpsl
insl
test
fldcw
call
popa
les
call
cmp
out
dec
imul
dec
outsl
outsb
mov
nop
jmp
ret
xor
jo
push
lea
in
sbb
cmp
xlat
mov
ficomps
jnp
push
movsb
sub
ret
ja
lcall
adc
nop
dec
shlb
mov
xchg
mov
in
dec
xchg
cmpsb
popf
outsb
orl
add
cmpl
jne
cmp
cmp
rcrb
sub
arpl
imul
stos
mov
out
scas
pop
dec
lods
je
fstps
sbb
icebp
xchg
jle
mov
xor
jnp
cmpsb
jns
stc
push
lcall
mov
mov
daa
das
push
cmp
sbb
lds
int
xor
and
aas
icebp
subb
push
je
shll
lahf
scas
mov
popa
push
xchg
cmpl
pop
test
cmp
mov
add
cwtl
sub
push
lahf
movsb
inc
push
inc
imull
inc
hlt
pop
js
and
cwtl
pop
clc
mov
xor
cmp
movsl
dec
ja
call
lds
lods
add
cwtl
mov
frstor
mov
pop
scas
lcall
adc
roll
in
icebp
jnp
nop
popf
rcll
addr16
jnp
je
cltd
or
inc
push
popf
test
mov
cmpsl
aas
lods
aad
xchg
inc
aad
rorb
aaa
jae
outsb
xlat
push
shll
jmp
int3
cmp
lock
mov
arpl
pushf
sbb
pop
add
xor
push
enter
mov
inc
not
test
lea
shll
test
push
ss
push
sub
and
je
lret
cmp
mov
and
add
popa
in
pop
js
shl
pop
pop
pop
sbb
out
leave
testl
fs
fmul
sbb
jne
das
adc
insb
mov
sbb
pop
jge
mov
scas
sub
or
sbb
js
aas
adc
movsl
lds
fists
in
out
std
mov
cmpsb
outsl
sbb
xor
and
mov
insl
sbb
repnz
gs
mov
push
mov
xor
ljmp
cmp
bound
push
mov
mov
push
insb
daa
mov
pop
cmpl
shlb
and
adc
push
negl
into
or
arpl
xchg
pushf
inc
jp
adc
mov
scas
imul
fadd
pop
add
fwait
push
sub
pop
popa
jno
test
push
stos
or
rcr
push
pshufw
jae
fidivs
push
sub
and
and
mov
pop
lods
ja,pn
xlat
in
les
stc
add
hlt
cltd
mov
sbb
in
imul
daa
cmp
test
xchg
aad
pusha
sbb
std
xor
jl
mov
rcrl
cmpsb
mov
sub
jne
sbb
mov
inc
mov
inc
ret
inc
and
loopne
or
faddl
iret
cmp
aad
in
js
cltd
insb
int3
ljmp
add
xchg
add
cld
cmp
fld
repz
push
lods
pop
pop
iret
xchg
aaa
fdivrs
aad
pop
mov
insl
pop
ljmp
xchg
push
in
sti
and
inc
dec
pop
int
xor
mov
lcall
pop
adc
dec
inc
icebp
and
xorl
sub
or
in
stc
mov
fistps
add
adc
sbb
xlat
fnstsw
leave
iret
push
in
cltd
stos
and
sbb
mov
push
cli
sub
xchg
cmp
mov
jge
jo
mov
sub
in
aam
mov
push
inc
lret
loop
pop
fisubs
inc
xchg
xchg
cwtl
mov
call
add
and
xchg
ds
jne
mov
mulb
cmc
cmp
sbb
mov
push
loop
fidivrs
imull
je
bound
ret
xor
mov
dec
out
int3
pushl
jge
jns
sti
in
mov
push
xor
ljmp
mov
out
inc
int
mov
fdivrs
inc
gs
cli
xor
rol
les
dec
sbbb
fistps
pop
sub
sbb
xor
inc
and
xchg
aaa
sbb
xchg
or
sub
push
push
outsw
push
mov
and
ja
push
outsb
cltd
fsubrp
and
sub
inc
data16
cld
test
inc
sbb
add
rclb
cmp
mov
data16
adc
cmp
dec
push
jnp
or
sub
push
jae
and
xchg
push
outsb
dec
dec
dec
lcall
push
mov
cwtl
dec
cwtl
sub
xor
cli
inc
out
stos
jns
xor
stc
pop
ret
mov
pop
mov
pop
imul
cmpsl
shrl
into
aad
mov
xchg
ret
mov
xchg
add
xchg
fstpt
mov
push
mov
dec
mov
xchg
movl
jo
sbb
cmp
xor
aad
sub
shrl
fdivs
xor
xor
or
mov
jae
das
test
add
add
xor
pop
xor
and
sub
or
outsb
cld
add
inc
aas
push
pop
cli
ss
and
dec
jne
mov
stos
and
and
pop
pop
sbb
stc
or
mulb
add
stos
rolb
pop
sahf
mov
cmp
jnp
jg
jmp
sbb
fsubrp
icebp
insb
jo
xchg
stos
push
popf
xchg
sub
ret
cmpsl
outsl
jae
stos
jmp
dec
adc
mov
mov
or
mov
and
jo
test
scas
js
ret
push
and
sbb
daa
outsb
jo
lods
push
aam
jns
data16
pop
or
aad
push
or
sub
xlat
ss
push
dec
lods
and
pop
gs
xchg
mov
cld
jb
mov
fs
test
xchg
jo
imul
into
push
sets
cli
fildl
cmc
ds
push
adc
aaa
inc
dec
mov
loopne
cwtl
idivb
shll
inc
jne
mov
cmp
pop
sub
pop
inc
inc
out
and
push
xor
lahf
mov
inc
int
cmp
or
pop
test
jb
xchg
mov
int
mov
js
and
dec
sub
fs
out
lock
sbb
mov
inc
mov
pop
sub
mov
xor
dec
sbb
xchg
clc
aad
sbb
mov
mov
aas
push
xchg
cli
cltd
sbbl
sti
mov
nop
ret
mov
jp
loop
scas
jne
repz
add
leave
outsb
and
push
stos
xchg
test
mov
mov
jg
test
mov
add
pusha
aas
xor
icebp
mov
or
dec
sbb
out
std
fdivrs
fisttps
outsb
mov
xchg
mov
loopne
push
push
hlt
js
inc
push
push
and
ret
mov
pusha
cmpsl
mov
std
jg
call
scas
push
stos
add
addr16
jl
pop
loop
rorb
add
pop
cmp
fwait
clc
shl
jae
xchg
cmp
iret
in
adc
je
out
js
mov
or
adc
adc
idivb
inc
sbb
std
inc
mov
fisttps
xchg
mov
mov
fcmovu
out
cmp
sbb
inc
or
enter
cmp
fldcw
push
pop
es
sbb
call
das
lret
sbb
cmp
and
jg
out
stc
in
ds
cmpsb
leave
rcrl
mov
jle
jg
and
sub
int
cmp
adc
repz
movsb
leave
out
jo
or
out
mov
mov
lock
inc
jae
sahf
push
loope
mov
push
int3
add
js
adc
adc
push
push
pop
ret
lock
mov
push
and
push
sbb
lcall
sbb
xor
cmp
es
gs
pop
jbe
mov
out
popa
jle
jo
arpl
cld
pop
sbb
jg
jb
sti
pushf
jno
xor
pushf
xchg
out
jnp
pop
test
add
enter
mov
hlt
mov
mulps
ret
scas
mov
jne
or
scas
sub
or
insb
cmp
jge
das
xchg
add
jnp
inc
jns
cmp
cmpsb
push
int
test
push
in
mov
mov
dec
ds
pop
mov
lea
pop
aaa
push
add
push
push
test
andb
sub
mov
sbb
jnp
cmp
aam
adc
or
out
stos
mov
ja
add
ss
rorb
aas
adc
cwtl
je
add
mov
mov
cmp
mov
pop
push
and
mov
add
cmp
fdivl
mov
repnz
sub
jne
loope
jne
mov
hlt
or
push
lea
jbe
push
mov
hlt
push
dec
imul
cmpsl
mull
lock
inc
stc
mov
pop
add
test
iret
cmp
pop
cli
std
jmp
mov
std
loopne
iret
lea
in
mov
stos
pop
ja
mov
cld
inc
inc
mov
jae
les
leave
jno
and
push
shrl
jne
ret
dec
addl
adc
cmp
xchg
aas
cmc
imul
mov
lds
std
rcrb
mov
std
inc
push
data16
retw
ljmp
jl
push
cmp
add
mov
call
push
out
out
sub
pop
fists
dec
xor
inc
arpl
mov
pop
push
arpl
les
mov
sbb
sti
or
int
gs
ja
incb
adc
movb
mov
stos
mov
cmpsb
xor
adc
jne
pop
xchg
sbb
inc
inc
mov
cmpsl
mov
ja
mov
and
mov
mov
xchg
sub
rep
push
sbbb
pushf
in
add
sbb
fadds
rol
pop
mov
es
into
adc
jmp
cmp
nop
sub
adc
clc
jle
sub
jle
jb
scas
int3
cmc
and
add
mov
push
or
push
dec
push
push
adcl
loop
mov
testb
fcompl
cmp
inc
nop/reserved
arpl
fs
cmp
jb
inc
lock
or
mov
xchg
mov
mov
clc
dec
icebp
out
and
mov
xor
in
dec
and
add
cltd
mov
js
es
cmc
in
mov
add
xchg
mov
adc
insl
and
sbb
les
mov
in
xor
push
add
xchg
jb
shrb
pop
das
jns
dec
notb
mov
arpl
push
push
pop
ss
sub
cmpsl
cld
xor
jb
push
inc
jbe
rolb
add
mov
jae
inc
mov
mov
in
push
stos
je
lret
pop
mov
sub
jmp
inc
out
mov
dec
or
mov
daa
clc
mov
push
notl
jnp
jae
sahf
and
or
pop
pextrw
aas
iret
xlat
pop
adc
fcmovne
test
js
inc
movsb
inc
rcll
cmpsb
incl
xlat
scas
int
pop
sbb
add
jne
push
jno
repz
pusha
lret
arpl
push
cmc
or
in
ss
mov
mov
cmp
push
hlt
sarb
dec
je
xor
fisttpl
mov
shrl
mov
inc
cmp
dec
jecxz
imul
fs
dec
sbb
push
mov
jne
lods
or
jbe
rolb
fwait
jge
andb
fs
jl
mov
mov
pop
sub
pushf
push
lods
jp
or
sbb
sub
cmp
lret
sbb
sub
cmp
dec
lcall
mov
push
jp
or
sbb
sub
cmp
lret
sbb
sub
cmp
dec
lcall
mov
push
jp
or
sbb
sub
cmp
lret
or
sbb
mov
pop
stos
insb
mov
pushf
push
jp
or
sbb
mov
mov
sub
dec
std
les
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
mov
aas
shrl
mov
push
cld
outsl
es
jae
inc
stos
jae
and
jae
add
adc
hlt
pop
repz
aas
shrl
mov
jg
sbb
jae
daa
mov
xor
add
adc
cli
push
ljmp
inc
stos
push
fwait
test
lahf
js
das
daa
fimull
jle
jo
jp
xchg
push
repz
pop
mov
mov
inc
mov
mov
iret
inc
or
sbb
jecxz
jle
ret
ss
jg
das
dec
mov
stos
pusha
mov
out
pop
push
lahf
mov
sahf
pop
outsb
xor
mov
jo
aam
fs
dec
mov
popa
lahf
mov
fdivrl
jbe
call
stos
xor
lock
pop
jl
pop
cmpsb
pop
imul
ljmp
mov
jecxz
dec
inc
add
incl
lcall
repz
jae
xchg
ja
pop
imul
push
inc
push
push
mov
xor
mov
jnp
pop
movsl
push
aad
ljmp
mov
mov
mull
das
jecxz
adc
and
repz
ret
les
mov
test
jbe
lahf
imul
sub
add
or
nop
pop
xchg
jge
pop
mov
pop
fisubrs
adcl
jae
xor
push
int
nop
jbe
jecxz
repz
dec
roll
pop
fldl
out
or
pop
popa
jmp
ljmp
inc
iret
jae
adc
cmpsb
pop
shrl
insb
mov
cmpl
arpl
push
scas
and
xor
add
adc
jecxz
aas
shrl
mov
jg
outsl
arpl
push
scas
and
xor
add
adc
jecxz
xor
mov
and
inc
cli
sahf
stos
negb
sbb
ljmp
xchg
imul
lods
push
pop
sar
xchg
je
fcoml
out
sbb
mov
mov
scas
scas
add
les
pusha
popf
cltd
pop
aaa
fbld
mov
nop
mov
sahf
fcmovnu
mov
ret
push
or
dec
sbb
leave
mov
add
sbb
push
dec
jge
xchg
hlt
fsubrs
xchg
sti
or
pxor
push
pop
sbb
iret
push
sbb
or
and
push
outsb
aam
and
sub
sbb
push
and
add
jmp
pushf
enter
mov
rorl
xchg
mov
jecxz
ja
mov
aaa
cli
pop
inc
inc
adc
jns
ljmp
pop
pop
out
shrb
fwait
outsb
and
daa
rcrl
and
inc
jle
lock
or
lods
in
in
pop
cs
xchg
mov
mov
inc
jbe
dec
push
pop
mov
out
push
lods
push
adc
ja
cmpsl
jbe
jns
outsl
aaa
dec
arpl
rcrb
mov
push
xor
outsb
add
add
decb
imul
jmp
iret
das
and
test
cs
cmp
cld
bound
push
adc
xor
push
orb
or
cmp
int3
jle
cli
dec
rcr
mov
xchg
loopne
pop
in
pop
cmpsl
je
dec
repz
xor
sbb
cmp
sbbb
insb
push
cmp
xchg
cmpsl
gs
arpl
xchg
cmc
push
mov
rcl
les
jp
mov
or
pop
cld
jae
fsts
xchg
rol
push
jne
call
subl
das
movl
mov
mov
mov
push
cmp
adcb
inc
adc
imul
pop
imul
repnz
fsubrs
or
jne
inc
push
out
jo
data16
shlb
lahf
rol
ljmp
dec
cmp
imul
int3
push
inc
nop
js
cmp
loop
rolb
js
dec
arpl
stos
addb
lods
outsl
sub
dec
sbb
fiadds
loop
mov
push
mov
ljmp
iret
push
test
fcmovnb
push
shl
push
or
and
fwait
movsb
adc
in
pop
cmpsl
mov
stos
xor
adc
call
loop
sti
sbb
mov
jb
mov
xor
add
mov
mov
and
andl
jecxz
jne
sbb
bound
pop
out
adc
xchg
or
out
cli
aas
mov
int
jno
cltd
aaa
and
mov
and
dec
cwtl
aas
mov
mov
sbb
sbb
setne
push
aaa
fucomp
daa
or
ret
mov
or
jg
jecxz
popf
in
xchg
push
mov
jp
sarb
movsb
sti
cmp
or
mov
call
pusha
int
pop
rcrl
sub
sbb
bound
jne
sbb
jnp
out
xchg
mov
jecxz
fldcw
cs
xor
sub
sbb
outsl
outsb
pop
in
sbb
add
push
cmp
or
mov
adc
or
cltd
adc
mov
jb
mov
mov
push
mov
sarl
mov
stc
xchg
mov
aam
cmp
out
insl
xchg
mov
inc
mov
add
dec
cli
xchg
test
sub
jo
test
or
sbbb
stos
sub
mov
btr
stos
push
cmp
adc
out
pop
pop
xchg
mov
inc
dec
cmp
mov
sbb
xchg
mov
outsb
repnz
cmp
mov
dec
adc
mov
lret
inc
ret
or
lcall
out
mov
sbb
pop
scas
mov
xchg
push
add
stos
xor
xchg
ja
sub
insb
adc
xor
enter
sbb
mov
xchg
inc
movl
nop
and
xor
or
jg
fiaddl
and
mov
inc
xchg
pushl
mov
scas
ret
sti
lcall
inc
pop
aas
push
xchg
mov
mov
out
into
jmp
les
shrb
pusha
dec
jecxz
cmc
fwait
pop
jmp
mov
imul
out
cmpsl
fwait
je
pcmpeqd
push
js
repz
dec
cmp
dec
notl
xchg
sti
stc
sub
fwait
cwtl
jb
xchg
or
outsl
cwtl
push
stc
clc
rcrb
das
lock
mov
ret
xor
in
push
pop
leave
addb
iret
sbb
test
fcmovnu
addb
mov
push
dec
xor
or
dec
out
mov
mov
scas
cmp
sub
out
mov
fsubrl
sbb
sbbb
loop
pop
ja
mov
jns
lock
cltd
popf
jecxz
sub
xchg
and
mov
ret
cmpsb
out
mov
mov
scas
data16
shlb
pop
test
sti
stc
lret
mov
aad
xchg
gs
rcll
ret
or
push
xchg
jb
mov
pop
popa
cmp
cwtl
or
mov
in
mov
movsl
out
ja
std
data16
add
cwtl
test
arpl
pop
loope
dec
sbb
jl
out
mov
pop
popf
inc
cwtl
jg
iret
iret
push
jno
inc
call
push
xor
mov
mov
jnp
and
popa
dec
nop
lods
std
mov
scas
xchg
es
iret
jmp
and
fidivrl
push
and
dec
jno
arpl
xor
xchg
int3
scas
push
push
cmp
cmp
cmc
push
sub
dec
and
mov
rol
in
test
xchg
popa
ss
inc
push
negb
sub
add
sub
sbb
sti
cli
ret
icebp
mov
mov
pusha
mov
xchg
mov
push
xor
pop
in
sahf
sbb
push
movsb
xchg
xor
mov
jbe
adc
or
test
add
fisubrs
ret
bound
movsl
or
jl
and
loopne
cmp
mov
xor
fcmovnb
dec
es
fsts
nop
pop
push
pop
and
fstl
scas
repz
mov
aas
sub
movsb
push
add
adc
pop
add
or
sbb
test
inc
cmpsl
sahf
loope
jno
jns
pop
fnstcw
out
add
lcall
push
scas
mov
jne
pop
sub
jne
jo
push
and
popa
dec
fcomi
xlat
xor
mov
mov
lods
scas
mov
mov
movsl
decl
in
xchg
cmp
test
mov
in
es
mov
push
sbb
or
rcrb
scas
pop
lock
mov
mov
imul
inc
push
cs
sbb
je
ja
xchg
mov
push
pop
je
cmp
dec
out
mov
vmptrld
stc
adc
repnz
hlt
add
adc
scas
pop
push
cmp
popa
mov
pop
sbb
imul
stos
inc
add
cmp
push
xchg
and
insb
push
lea
mov
xchg
iret
cld
inc
add
dec
cwtl
fwait
push
inc
scas
fnstsw
mov
jno
pop
mov
je
popa
jle
cmp
mov
jmp
or
push
cmpsb
push
cmp
fwait
push
push
mov
xchg
adc
scas
es
ja
mov
mov
inc
sub
stos
mov
cmpsb
push
dec
sahf
cmpb
out
pop
js
test
push
dec
ljmp
jmp
out
cmc
dec
dec
fcompl
int3
mov
adc
sub
out
sbbb
out
inc
clc
ljmp
push
inc
xchg
ret
sbb
mov
hlt
loope
sbb
popa
and
xor
in
adc
mov
fdivrl
in
dec
scas
test
dec
pop
pushf
pushf
cmp
cmp
sbb
lret
arpl
bound
push
mov
jne
jmp
dec
out
sub
sub
sbb
push
push
jae
in
xchg
sbb
xlat
call
dec
js
push
test
lods
mov
repnz
push
jecxz
andb
add
mov
adc
js
jl
mov
sbb
test
pop
cmpl
cld
aaa
jnp
mov
xlat
mov
push
adc
dec
jle
jecxz
lret
adc
aam
fwait
xchg
adc
call
add
push
lods
sbb
dec
add
pop
sbb
inc
mov
les
xchg
dec
adc
push
mov
mov
pop
jne
mov
jl
mov
cs
mov
addl
stos
scas
cwtl
sbb
inc
cli
movsb
cmp
test
jmp
push
loop
fwait
push
rcll
mov
sub
into
push
scas
mov
add
mov
mov
push
test
aas
rcrb
lret
loope
out
cmpsl
jmp
add
fsubrl
test
jb
cmp
lahf
psubusw
mov
stos
sbb
arpl
shll
dec
stc
xor
rclb
sub
jp
push
divl
xor
xchg
and
stos
lds
sbb
push
cmpsl
inc
std
jns
mov
xchg
sahf
mov
in
mov
and
arpl
jl
and
push
mov
mov
test
sub
add
bound
mov
add
mov
mov
call
mov
incl
push
sub
jl
pusha
mov
or
dec
push
fs
mov
push
mov
add
push
inc
xchg
pop
dec
incb
lea
or
dec
dec
dec
mov
shl
inc
insb
gs
push
cwtl
in
int
outsb
ret
out
add
push
dec
cmc
inc
push
dec
sbb
adc
push
jno
cmpsl
pop
xchg
add
lods
mov
scas
cld
and
cld
test
jns
xor
add
sub
shlb
jge
xchg
loopne
out
mov
mov
lods
insl
adc
and
jmp
pusha
test
popf
or
pop
jbe
leave
clc
push
int
add
inc
xchg
lcall
inc
inc
nop
ljmp
mov
popa
mov
jae
xor
jecxz
out
or
mov
sbb
out
and
fucomip
mov
dec
xor
and
inc
jnp
stos
mov
aas
cmpsl
xchg
or
xchg
sbb
dec
fidivrs
cmpl
repz
push
ret
scas
mov
or
test
and
adc
and
lock
cmp
dec
pop
in
test
cwtl
push
lock
lods
into
mov
jge
jo
pop
loopne
shlb
cmp
ljmp
pop
adc
pop
je
and
and
or
and
sahf
repnz
fs
mov
scas
jae
xor
insb
adc
sti
outsl
lods
loope
adc
push
into
int3
jecxz
add
jle
ds
mov
adc
dec
xor
inc
dec
pop
cmc
out
fldt
inc
sbbb
ret
jge
push
push
pop
jne
dec
int
sub
lret
xchg
adc
xchg
sub
aam
outsb
loopne
mov
jne
jle
push
lea
stos
pop
jp
loop
js
shll
aas
mov
rclb
or
leave
add
cmp
jl
dec
mov
sbb
into
incl
rorl
pusha
sbb
clc
mov
in
mov
out
inc
scas
jmp
sub
fisubl
add
pop
jl
jns
mov
inc
sbb
data16
add
push
or
inc
int
stos
mov
ds
xchg
mov
cmc
dec
xor
cmc
mov
sub
cmp
adc
pop
bound
push
jns
push
push
icebp
nop
movsl
pop
out
popa
insb
mov
mov
orb
push
sub
jmp
mov
sbb
cmp
mov
ds
in
pmaxsw
stos
jb
inc
and
push
sbb
jns
into
add
cmp
movsl
and
adc
cmp
adc
popa
lods
jno
into
cmp
repz
inc
data16
dec
in
bound
dec
divb
push
gs
rorl
xchg
jle
loop
cli
popf
mov
cmp
es
jmp
js
ja
dec
dec
test
add
jne
cmp
xor
jb
jb
and
jno
les
ljmp
mov
cltd
fimuls
stos
sub
inc
xlat
call
xor
push
cmp
mov
int
inc
outsb
test
cmp
std
aaa
sub
bound
jg
js
fdivr
cwtl
inc
rcrl
mov
mov
mov
pop
jmp
cmp
dec
subl
dec
fsubs
mov
mov
iret
mov
add
das
adc
insl
sbb
mov
sbb
ret
insl
inc
test
fisubs
pop
sbb
scas
scas
or
pop
mov
fimull
in
cmc
cmp
call
dec
lods
loope
sub
pop
sub
mov
ret
inc
idiv
mov
jg
je
inc
lret
lahf
scas
sahf
adc
ss
test
popf
cld
sub
xchg
jns
mov
iret
mov
adcl
pop
pop
outsl
insb
scas
popf
or
mov
iret
add
mov
pop
pusha
sbb
sti
inc
mov
jno
cmp
or
add
inc
outsl
fwait
arpl
mov
addr16
aas
mov
mov
push
xchg
popa
sbb
inc
cli
mov
adc
adc
dec
jns
fisubrs
daa
paddq
mov
cmp
stos
cmc
jmp
fldenv
aad
lea
lcall
bound
loop
jae
movsl
or
or
rclb
cmpsl
icebp
sub
icebp
shrl
fisubrl
push
rolb
insl
stc
pop
inc
or
leave
dec
pushf
insb
fisubs
fstpt
sbb
dec
jle
imul
cmp
mov
sub
xlat
jg
xor
mov
push
clc
je
into
jnp
call
call
sub
mov
insb
xor
push
bound
dec
jge
cmp
sub
cmp
test
xlat
inc
cmc
mov
push
flds
fcomps
jge
adc
xchg
inc
cli
xor
cs
adc
in
sub
add
js
push
xor
dec
shll
pop
pop
lret
cmpsb
adc
cmp
aam
mov
jp
shl
iret
fstpl
or
push
add
pushf
pop
push
push
outsb
mov
pop
jge
xrelease
mov
pcmpgtw
mov
jmp
shlb
cld
jmp
add
mov
add
cmp
and
ja
cld
lcall
add
lahf
in
dec
outsl
stos
cmpsl
xor
pop
aad
and
leave
lock
jl
std
imul
test
in
mov
sub
inc
cs
push
ds
out
adc
dec
in
and
sub
pop
xor
push
xor
scas
cs
and
scas
les
jge
int
cmp
loope
push
mov
pusha
fmul
mov
xor
cld
jb
mov
outsl
cmp
nop
in
jle
icebp
mov
jb
sarl
repz
arpl
enter
loop
ss
lcall
mov
mov
pop
push
sbb
xchg
arpl
cmp
out
jo
out
sahf
mov
jp
fadds
call
adc
push
je
fs
dec
push
jbe
cli
stc
aas
ds
push
nop
int3
leave
sbb
out
inc
fsubr
adc
movsb
jb
insl
lods
in
ret
sbb
insb
je
dec
je
stos
jbe
outsb
cmpsl
dec
xchg
pop
mov
int3
sbb
sahf
lret
daa
cwtl
ss
int
jle
cmpsl
loopne
out
pushf
lret
add
xchg
jl
cmp
hlt
icebp
insl
jecxz
sbb
movb
inc
rcrl
stos
int3
mov
pop
inc
outsl
pop
outsb
decl
mov
in
iret
push
sahf
js
dec
mov
cmp
stos
addb
or
mov
push
sub
cmpsl
negl
jp
xor
leave
jmp
ss
movsl
push
fdivrl
and
int3
test
scas
jmp
cli
ss
or
mov
push
or
inc
xchg
inc
jnp
jmp
or
gs
leave
cltd
sub
and
push
popf
mov
out
pop
jne
movsb
stc
cli
ljmp
pushf
jmp
jmp
xchg
sub
mov
pop
movsb
cmp
idivb
jmp
shrl
adc
adc
xlat
inc
out
pop
and
push
push
andl
or
adc
cmp
dec
decb
mov
mov
or
mov
mov
push
data16
ret
push
mov
pop
jp
int
jmp
pop
sub
sub
push
outsl
fst
jbe
cmpsb
adc
jo
xchg
xchg
loop
ror
icebp
lcall
test
xor
aas
mov
insl
jae
mov
sbb
fnstcw
mov
push
pop
cld
fnsetpm(287
push
cmp
cmpsb
lods
cld
mov
and
and
aas
inc
sbb
jl
xor
cltd
sbb
mov
push
cltd
or
jle
jmp
sti
cli
and
pushl
xchg
les
sar
insb
sub
jns
roll
mov
fwait
mov
xchg
mov
cmp
popa
test
xchg
stos
push
out
dec
fnsave
dec
jb
aam
inc
adc
adc
sbb
loopne
inc
notb
iret
xor
dec
stc
or
mov
xchg
dec
jns
mov
add
lret
stos
sbb
jge
daa
sub
dec
std
test
cmp
fwait
add
mov
test
repnz
leave
lds
pop
dec
mov
repnz
add
mov
nop
loop
ljmp
jl
cmpsb
aad
cli
mov
leave
int3
pusha
xchg
push
mov
jne
shlb
cmp
popa
fs
arpl
xchg
dec
out
add
fcoms
dec
in
xchg
xor
pop
mov
fisttpll
mov
push
out
in
mov
xor
test
xchg
and
test
push
inc
sub
add
jns
insb
insl
ret
lods
cmp
mov
out
into
arpl
adc
xchg
and
xor
scas
dec
xor
xchg
cmpsl
popf
push
add
out
fdiv
int3
jle
aaa
out
add
mov
addb
mov
lret
add
aam
lods
push
insl
insb
xlat
leave
lret
jle
jecxz
mov
add
push
call
push
loop
inc
mov
xchg
sub
lea
jb
mov
inc
or
imul
mov
cli
ffree
test
cmp
jecxz
mov
push
clc
dec
sbb
rol
enter
fistl
lahf
jp
inc
sub
mov
sarb
jns
rorl
negl
push
mov
std
mov
push
jbe
in
lret
or
rorl
jne
outsl
hlt
mov
adcl
mov
add
cmp
lods
pop
adc
adc
mov
repz
mov
jo
mov
or
ljmp
adc
icebp
shll
add
cmp
jle
ret
mov
setno
sub
test
dec
mov
push
adc
je
fcoml
lock
push
fisubrl
jno
std
repz
xchg
cmpsl
pop
subl
xor
dec
pop
xchg
fnstcw
mov
std
cmc
pop
clts
cmc
mov
adc
sub
mov
stos
xor
lret
std
dec
jb
imul
jns
dec
jo
sub
dec
pop
icebp
or
cmpsl
sbb
xor
or
subl
sbbb
test
jp
and
dec
call
jecxz
and
xchg
inc
aad
sar
in
addb
push
add
je
loope
sarl
adc
jnp
adc
jne
gs
aam
push
adc
ret
je
out
out
cwtl
sub
xchg
jg
hlt
sbb
jne
mov
mov
cmp
push
and
in
or
js
repnz
aad
jle
vpavgb
lea
dec
inc
movsl
test
xor
jne
addl
loopne
pop
push
jo
fs
push
and
aad
xchg
cmp
cmp
gs
in
sub
fimuls
and
stos
inc
js
push
dec
cltd
xor
decl
psubsb
clc
pop
inc
mov
jge
mov
mov
bound
mov
lock
push
and
push
add
repz
add
repnz
test
stc
mov
jbe,pt
jl
aad
leave
mov
cmp
xor
inc
dec
lds
jmp
stc
cmp
dec
orb
cmp
cltd
sbb
cmp
sbbb
mov
pop
push
out
arpl
mov
xchg
cmp
jmp
adc
add
lcall
and
and
cs
sub
scas
bndldx
shrl
mov
jg
outsl
arpl
push
scas
and
xor
add
adc
jecxz
aas
shrl
mov
jg
outsl
arpl
push
scas
and
xor
add
adc
jecxz
aas
shrl
mov
jg
outsl
arpl
push
stos
and
aaa
iret
add
and
xlat
sbb
or
cmp
das
mov
jg
scas
pushf
lahf
mov
push
push
mov
nop
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
