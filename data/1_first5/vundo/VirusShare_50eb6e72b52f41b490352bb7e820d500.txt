jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
sub
xchg
or
fiadds
movsb
popf
add
add
push
or
push
add
add
aad
cmp
push
or
cmc
add
add
inc
add
add
cmp
inc
add
add
add
add
mov
sub
ds
add
add
pop
add
lds
jmp
mov
or
mov
movl
pop
add
add
add
incb
cmp
aas
add
xchg
add
mov
add
mov
popa
add
add
add
stc
add
movl
lea
pop
add
add
add
add
jae
xchg
add
add
icebp
add
add
dec
add
add
add
add
add
mov
push
add
add
add
pop
add
jae
lea
jnp
out
add
add
add
add
add
add
inc
add
add
add
add
add
add
movl
popa
add
add
push
add
add
add
in
add
pop
add
or
pop
add
add
pop
add
or
sub
pop
add
push
add
or
push
add
add
add
mov
and
addl
or
arpl
jmp
pop
add
add
add
add
add
pop
add
add
movl
adc
add
add
add
add
sbb
sahf
add
add
sti
add
push
add
add
add
add
add
testb
add
add
insl
add
movl
xchg
add
add
pop
add
movl
pop
add
or
or
mov
pop
add
add
mov
movsl
add
add
add
add
lcall
add
add
add
add
movl
adc
adc
inc
add
sub
or
popa
add
add
mov
add
add
add
add
cltd
add
dec
add
add
add
add
xor
scas
add
add
scas
add
add
add
or
sub
in
add
add
add
add
add
pop
add
or
pop
add
add
pop
add
pop
add
add
xor
pop
add
pop
add
add
add
add
add
movl
add
cmp
popf
add
movsb
add
add
add
add
add
add
mov
in
add
add
add
add
add
mov
popl
sbb
jmp
adc
add
movl
sbb
movsb
add
add
add
add
add
adc
add
movl
arpl
movsb
add
add
add
add
add
add
add
in
add
add
add
jne
in
add
add
add
add
pop
add
push
add
add
add
movb
add
in
xchg
jnp
or
dec
add
movsb
add
imul
add
ljmp
add
add
addl
add
add
add
jo
push
add
add
add
movb
add
add
pop
add
add
movsb
add
add
add
add
add
add
in
add
add
add
add
add
add
or
add
add
xor
lea
and
movl
test
push
add
add
add
lea
or
pop
add
add
add
cmp
test
pminsw
or
and
xchg
xchg
loop
not
cltd
xor
mov
mov
xor
xlat
and
inc
mov
pop
push
pop
es
mov
adc
sbbb
nop
push
pushf
ss
cltd
andb
je
aad
andl
mov
movsb
or
es
loope
movsl
lcall
nop
lahf
push
xor
mov
sbb
scas
ljmp
jecxz
mov
cmp
cmpsb
mov
fwait
lds
outsl
jnp,pt
inc
in
and
mov
mov
jle
and
and
ja
adc
sbb
xor
loope
cmp
ret
and
insl
mov
cltd
adcb
leave
dec
lret
or
icebp
psubusb
cmp
mov
loope
jne
mov
lods
adc
out
mov
ds
loopne
sarl
scas
mov
lcall
push
jbe
xchg
dec
and
mov
stos
sub
adc
xchg
adcl
ss
xchg
into
pusha
adc
dec
xchg
arpl
dec
movsb
outsl
adcl
add
xchg
daa
ljmp
cmp
roll
dec
aaa
mov
ss
xor
dec
dec
sub
add
enter
and
pop
ljmp
inc
std
dec
int
mov
push
lret
inc
cmp
xchg
pop
int
adc
fsubr
xor
hlt
sbb
out
es
bound
xor
mov
mov
insl
lcall
test
ja
jo
fcompl
add
dec
inc
lret
mov
mov
jl
std
mov
sub
repnz
outsl
ljmp
les
ret
scas
xchg
fiaddl
adc
add
xor
loop
jp
addl
xchg
orb
xchg
add
jbe
jns
ss
and
stos
int
pushl
ret
cmp
cmp
repnz
xor
sub
pop
xchg
aad
dec
sbb
cli
sarl
fwait
cmp
adc
call
inc
mov
sahf
sbb
lock
outsl
lret
push
mov
pop
dec
mov
shl
clc
pop
and
push
inc
hlt
leave
adcb
ror
es
push
jl
pop
inc
test
inc
jp
sub
push
stc
mov
mov
aaa
or
je
icebp
push
sti
pop
ret
jmp
xchg
in
int3
pop
fsubrl
mov
aaa
cmp
lods
stc
pushf
stos
adc
pusha
outsb
mov
leave
mov
mov
jbe
inc
xchg
in
xchg
cs
stos
mov
push
frstor
sbb
cmc
mov
inc
lcall
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
nop
sub
mov
jecxz
imul
mov
xor
bound
inc
add
pusha
and
repnz
push
lock
adc
bound
jb
bound
inc
add
pusha
and
pop
mov
mov
adc
inc
adc
xor
inc
or
in
loope
mov
leave
mov
movsl
xchg
or
scas
imul
sub
cmp
lret
cwtl
ja
jl
pop
jg
dec
test
pop
rclb
or
lods
ja
adc
sbb
jb
adc
xor
scas
outsl
shr
jmp
mov
scas
fists
out
push
xor
add
repnz
xor
loop
pop
mov
dec
loopne
loopne
lea
roll
sahf
add
inc
std
mov
jmp
ret
movl
or
imul
mov
bound
inc
rolb
and
lods
adc
mov
pop
fdivr
aad
add
pop
push
push
inc
sub
lea
mov
adc
mov
bound
mov
mov
xor
loopne
adc
add
ds
cli
jo
pusha
dec
cmc
and
divb
scas
in
lahf
adc
pop
inc
push
gs
jge
jbe
jae
inc
out
hlt
adc
loope
mov
mov
bound
addr16
pop
and
sbb
dec
testl
xor
loopne
adc
inc
xor
bound
inc
add
pusha
and
repnz
xor
loopne
adc
inc
xor
bound
inc
add
pusha
and
push
add
rcll
je
loope
adc
scas
push
cmp
loope
adc
in
and
pushf
pop
jne
lret
pushf
loop
add
dec
dec
xor
shrl
lods
inc
inc
or
adc
xchg
mov
pop
push
test
out
mov
int3
mov
push
gs
scas
shll
add
imul
adc
pop
int
test
mov
adc
movsl
stos
dec
fmuls
mov
mov
mov
movsl
xor
xchg
or
fprem
aas
push
inc
call
loopne
test
addr16
pop
or
cmp
add
je
loope
and
sub
push
or
out
add
dec
mov
sti
cmp
in
xchg
out
push
or
mov
test
imul
pop
or
into
aad
stos
repz
jecxz
mov
ja
insb
aas
xchg
fsubrl
popa
dec
aad
adcb
cld
xchg
mov
cli
inc
es
xchg
insl
inc
sub
call
cltd
jb
sub
inc
flds
or
aad
and
gs
out
mov
mov
mov
arpl
mov
cli
stos
lret
dec
lret
mov
lock
lea
pop
hlt
ds
jae
jp
xchg
mov
dec
call
jecxz
and
sub
pop
sbb
ds
cmpsl
sub
jecxz
in
outsl
add
push
iret
fsubs
mov
in
push
push
sbb
mov
sbb
inc
data16
aad
and
call
stos
mov
or
adc
fstpl
roll
mov
cmp
lahf
lock
shrd
js
push
xchg
movsl
fucom
dec
inc
cmp
sbb
push
gs
ljmp
into
aad
in
repz
cmc
inc
or
xor
xchg
out
mov
stc
ljmp
flds
into
rorl
pushf
ljmp
in
inc
cmpsb
mov
or
in
imul
adc
xchg
sbb
lcall
sbb
mov
push
jmp
stos
dec
testb
test
fstps
sbb
and
cs
jns
daa
sbb
aaa
sarb
call
mov
int3
and
adc
movzwl
mov
shr
js
push
movsl
orb
jns
and
test
loop
fidivrl
scas
mov
add
imul
lea
sbb
or
sbb
xor
fildl
shrb
dec
add
out
sub
ret
jae
shl
test
fs
push
lods
cli
mov
imul
adc
mov
clc
dec
push
mov
into
movsl
xchg
push
das
jmp
arpl
pop
xchg
je
dec
or
mov
loop
xchg
test
sarl
push
mov
mov
stos
bound
sub
jmp
out
sti
pop
pop
aas
lret
shll
xor
xor
imul
xlat
pop
mov
leave
mov
fimull
sub
scas
clc
imul
gs
mov
add
xlat
push
leave
ror
mov
mov
xor
sub
pop
jne
hlt
jp
ficompl
cld
rcll
xchg
mov
adc
aad
cmpsl
cltd
push
inc
push
imul
js
repz
movsl
jae
mov
jb
bound
mov
daa
sbb
or
cmpsb
movsl
xchg
scas
into
lods
mov
loop
sahf
inc
dec
in
cltd
ret
aas
pop
fcomps
fcoms
pop
fsub
test
cmc
les
cmc
shl
push
cwtl
pusha
repnz
sub
jbe
cmp
test
adcb
insb
mov
push
jnp
mov
pop
dec
cmp
lods
push
cmp
outsl
imulb
int3
repnz
xor
clc
inc
cmpsl
bound
ret
xchg
bound
mov
push
jb
cmpsb
stos
lods
mov
mov
je
ret
mov
mov
lfs
cmpsb
pushf
gs
sub
inc
les
aas
sarl
push
push
mov
fisubl
push
scas
mov
mov
je
js
push
shl
stos
sahf
dec
cmpsb
aam
popf
adc
add
add
add
incb
aad
pop
mov
repz
shl
push
sbb
cmc
inc
push
mov
inc
cmc
xchg
xchg
decb
loop
cmp
test
stos
pop
std
sbb
ja
movups
inc
test
je
aas
push
insb
and
js
jle,pt
negb
cmp
push
pop
adcl
fistps
clc
out
cmpsl
xchg
lods
leave
push
xchg
add
je
mov
and
add
jecxz
cli
lcall
xchg
xor
nop
in
pop
and
xchg
in
pushf
rclb
jns
push
mov
jnp
lret
pushf
arpl
sahf
clc
ljmp
pop
jg
insb
and
pop
fs
mov
ljmp
jecxz
repnz
es
add
and
or
mov
sbb
cmp
mov
mov
inc
xor
mov
or
mov
sub
adc
fwait
push
out
loop
pusha
jle
sbb
call
mov
pop
or
pop
mov
sub
das
pop
xchg
mov
fsubrs
sarl
sbb
or
out
lahf
push
push
imull
in
loope
mov
jnp
xor
js
enter
push
lret
shrl
mov
repnz
mov
out
out
outsb
mov
into
push
dec
sub
fisttpll
pop
xor
test
test
dec
dec
xor
testl
arpl
sub
inc
and
mov
aas
jne
fsubrl
ret
mov
iret
mov
cmpsb
cmp
out
xor
cmc
cli
jg
mov
aad
dec
xchg
dec
or
xchg
inc
movsl
add
adc
mov
xchg
loopne
and
pop
test
insl
lds
and
sub
int3
pop
cli
push
fsubr
out
lods
dec
fbstp
aam
fwait
and
test
push
out
and
int3
dec
push
nop
lock
aas
lds
jecxz
dec
push
pop
xchg
pop
xor
sti
mov
sbb
std
cmp
and
stos
gs
add
lret
add
jbe
sub
cltd
mov
popa
mov
jnp
lret
mov
daa
mov
push
cmp
push
cmp
mov
dec
jle
mov
xchg
pop
mov
mov
push
lahf
pop
xbegin
cmp
fldt
mov
inc
and
add
and
mov
mov
test
int
xchg
fidivs
xchg
pushf
insl
ds
std
mov
stos
xchg
push
popf
mov
cmp
sbb
int
bound
test
mov
je
adc
pop
mov
lds
aad
into
shlb
stos
mov
inc
cmp
test
outsl
inc
jp
and
fcomps
rolb
cmp
fdivrl
xchg
cli
loop
inc
fs
nop
and
cmp
lods
arpl
mov
xchg
jecxz
pop
pop
div
cmc
mov
nop
jo
aam
movsb
push
jne
or
mov
popa
jb
in
and
jno
sar
dec
roll
push
jb
or
mull
outsb
popf
cmc
popa
ret
scas
jle
fistpl
jg
add
xchg
fdivs
mov
mov
outsb
xlat
sbb
add
sbbb
or
or
stos
jmp
push
into
sbb
repnz
lods
test
inc
and
stos
dec
fstl
xor
in
out
lret
rorb
cs
mov
mov
adc
jecxz
dec
inc
out
fiadds
outsl
fdiv
cmpsl
fistl
stc
out
sarb
mov
sub
outsl
sub
lods
pop
sub
data16
in
test
pusha
pop
leave
fdivrl
jb
push
popa
fistps
sub
ljmp
out
adc
out
mov
xor
aam
es
sub
cmp
jg
dec
popa
out
push
xchg
mov
push
out
or
pop
jmp
cmp
inc
gs
jb
aad
jo
xlat
jno
xchg
jno
and
out
push
and
idivl
int3
sti
out
pop
jbe
mov
test
int3
xor
test
pop
imul
xchg
xor
arpl
ret
sub
pop
mov
js
mov
adc
stos
jns
mov
sarb
jmp
dec
mov
push
scas
stc
in
es
lea
lods
pop
arpl
jp
aas
stos
test
mov
adc
orb
cmpsl
inc
push
dec
dec
xchg
sahf
cmpsl
repz
stc
insl
xchg
das
loopne
cmp
sahf
fildll
addr16
xlat
push
xor
in
hlt
ret
into
stos
push
or
dec
dec
jae
mov
mov
std
bnd
inc
daa
ficoml
push
mov
mov
xor
jecxz
sbb
sbb
setle
roll
pop
and
push
jb
test
fimull
cmp
inc
push
xor
pusha
push
pop
inc
mov
aaa
stos
add
pop
fiadds
xlat
jne
sbb
inc
dec
add
arpl
mov
into
popf
or
cmp
nop
fmul
mov
xchg
pop
adc
push
add
add
and
cmpsl
dec
outsb
jns
pop
andl
es
shll
add
xor
or
push
cld
cmpsb
adc
xor
push
lea
and
fmull
pushf
fwait
stc
xchg
scas
aam
flds
fildll
cmovbe
fiadds
or
jns
pusha
lds
jbe
gs
mov
ret
sets
not
jl
or
add
pop
std
dec
cltd
nop
mov
mov
imul
pop
jg
stos
pop
xchg
in
push
and
ds
jmp
into
jl
xchg
mov
xchg
insl
and
lock
in
inc
xor
xchg
insl
jg
outsl
pop
or
dec
or
cmpsl
jecxz
cli
lods
ljmp
icebp
lods
or
stos
pop
push
mov
clc
xchg
xor
loopne
testb
int
push
push
jno
mov
lods
push
cmp
arpl
hlt
addl
sub
or
push
repnz
xlat
dec
lods
lahf
adc
pop
popa
cld
add
push
sub
cmp
cmp
call
test
and
adc
pop
loop
xchg
mov
int3
inc
in
inc
xor
imul
push
xchg
mov
jbe
mov
ljmp
mov
int3
fdivl
imul
andb
ss
gs
cltd
xor
fidivrl
scas
jmp
and
js
data16
cmpsb
xchg
push
popf
sub
cmp
cmpsb
scas
cs
sub
push
scas
sub
ret
push
cmp
addb
sbb
jns
outsb
fisubrl
sarb
mov
mov
mov
leave
shrl
inc
addr16
mov
in
jns
dec
sub
xchg
insl
push
insb
push
push
cli
roll
mov
cmp
jne
ss
xor
in
xchg
mov
aam
scas
mov
add
adc
or
dec
dec
mov
pop
sub
sbb
mov
and
push
shlb
movsl
xchg
bound
mov
jns
adc
cmp
or
sub
xor
aaa
jae
hlt
xlat
fisttpl
inc
dec
icebp
fisubl
pop
in
cmc
loope
or
sub
out
xchg
and
rcrb
addr16
lds
test
push
out
das
cs
push
not
lahf
mov
pushf
pop
jne
addr16
add
sub
jmp
mov
mov
in
fidivl
dec
outsb
mov
imul
nop
jae
and
adc
mov
mov
test
dec
movsl
loopne
dec
test
jns
movsb
nop
cmc
sub
fwait
shrl
dec
nop
gs
es
int3
mov
dec
int
nop
fsubs
xor
mov
mov
sub
std
or
push
adc
decl
jns
fmull
adc
inc
mov
or
movsl
fsubr
or
sarb
lcall
xor
and
imul
inc
dec
aaa
lods
aas
stos
mov
loopne
das
out
push
mov
dec
stos
jo
cld
push
aaa
cltd
add
rolb
or
mov
pushf
pop
xchg
cmp
hlt
ds
inc
fnstcw
int3
sti
mov
adc
xor
ffreep
push
sbb
test
add
outsl
out
cmp
mov
fwait
sbb
dec
mov
push
je
add
mov
sub
aas
ss
sub
or
pushf
jl
lahf
dec
out
xor
dec
js
iret
inc
imull
cld
and
inc
xor
xor
loope
push
xchg
ret
ret
jnp
out
pop
mov
add
pop
insb
mov
adc
sub
stos
sub
mov
xchg
or
movsb
xchg
icebp
inc
mov
fs
test
cld
lock
fimull
xchg
pop
mov
xchg
adcl
js
add
popf
push
push
lea
mov
lcall
rcl
or
mov
testw
std
out
mov
cmpsl
jb
xor
add
shrl
mov
cmp
sti
cmp
pop
xchg
mov
rcrl
jmp
adc
mov
push
push
xchg
xchg
cmp
mov
clc
dec
sbb
inc
add
mov
stos
jno
xchg
test
sub
data16
cmp
adc
jnp
jmp
pop
aas
das
cmp
pop
cli
inc
cmp
mov
add
cmp
dec
jns
adcl
fwait
inc
imul
dec
outsb
xchg
stc
or
lock
mov
jmp
lods
push
icebp
jp
fs
xor
pop
mov
push
sbb
ss
cld
pop
mov
push
and
push
hlt
mov
add
jmp
adc
cmp
jns
and
mov
lods
leave
push
bound
inc
push
mov
lahf
sahf
int3
push
adc
or
fmull
inc
orl
dec
addb
xchg
sbb
lahf
jp
jnp
ss
inc
lret
adc
dec
inc
mov
stc
and
or
unpckhps
push
popa
fabs
jnp
dec
xchg
adc
mov
repz
notb
ljmp
or
push
jmp
xor
xor
in
shll
adc
jecxz
sbb
adc
or
sbb
and
lret
mov
call
cmp
adcb
xchg
inc
dec
das
and
js
ret
push
add
ficoms
cmp
pop
andl
fs
repnz
mov
push
movsb
pop
add
and
add
repnz
push
push
push
shr
add
add
lret
lds
dec
nop
mov
jbe
add
and
pop
inc
std
sbb
jno
inc
gs
leave
dec
out
mov
cmp
loope
pop
jl
neg
shr
jmp
xlat
ds
popa
rcrb
mov
add
in
or
das
sub
data16
cmp
xchg
rcrl
adc
in
mov
pop
ds
and
int3
icebp
xchg
mov
inc
xchg
mov
sbb
daa
lret
das
add
push
lret
sub
ds
push
jp
mov
sub
xor
fcomp
jecxz
leave
xchg
dec
popf
pop
popf
cwtl
scas
pop
jbe,pn
in
dec
cmpsb
jl
pop
ja
icebp
cmp
mov
das
mov
jnp
icebp
je
xor
inc
or
or
mov
jo
jno
sub
frstor
or
mov
sbb
inc
arpl
push
loop
sbbl
and
dec
lret
enter
push
mov
mov
dec
add
push
shlb
movsb
jge
daa
push
stc
mov
pop
aas
stc
mov
dec
orl
ljmp
insb
cs
push
rcll
stc
arpl
sbb
popa
push
pop
mov
int3
sarb
shlb
xor
lcall
pop
jnp
jl
mov
lahf
outsb
adc
repnz
pop
mov
jecxz
push
and
inc
in
jo
xor
rcrl
fisttpll
imul
repz
add
movsb
fisubrl
xorb
fsubrp
xchg
push
ljmp
and
loop
clc
mov
addr16
outsb
lds
sub
push
inc
push
pop
or
and
mov
mov
std
pusha
push
pusha
adc
fcompl
mov
add
jbe
xlat
pop
jle
insb
loopne
pop
iret
cmp
sub
push
outsb
je
mov
jge
int3
out
or
inc
pop
push
aad
pushf
mov
in
outsb
gs
out
cmp
into
xor
aas
dec
sub
shrb
xor
ficoms
ret
xchg
push
cwtl
movsl
mov
mov
std
cmp
fisubl
rcrb
mov
and
inc
mov
mov
insb
mov
out
pop
cmp
inc
dec
js
int
and
mov
sbb
popf
sbb
scas
xor
dec
sbb
fcoms
es
int
hlt
stos
jo
or
push
or
push
lods
sbb
ror
shl
movsl
pop
dec
jg
mov
loop
pop
xor
inc
cmp
mov
xchg
inc
nop
insb
push
repnz
mov
mov
repz
jecxz
lods
outsb
das
mov
push
sub
imul
mov
cmp
sub
enter
cmc
adc
xchg
into
int3
inc
push
cmp
jno
mov
shlb
mov
test
and
inc
das
mov
sub
jg
rorl
bswap
addr16
push
nop
sbb
dec
mov
mov
dec
inc
std
push
add
cmp
ja
adc
ss
or
in
adc
repnz
mov
xchg
xorl
sbb
jns
cmc
int
adc
cmp
adc
jns
and
iret
dec
add
mov
add
push
test
fisubs
sub
dec
fisubs
sahf
les
lahf
out
or
popa
hlt
iret
lods
in
sbb
int
dec
jge
dec
mov
das
lea
out
shll
sbb
das
outsl
mov
aam
and
hlt
mov
repz
insb
pop
sub
dec
rolb
mov
movsb
inc
dec
xor
push
addl
or
mov
inc
pop
xor
add
popa
jno
in
mov
push
repz
sub
add
out
jno
scas
sub
bound
push
stc
jbe
adc
inc
mov
loope
je
stos
dec
jno
addr16
in
je
shlb
pop
pop
ds
out
cwtl
xchg
fadd
push
mov
push
mov
call
mov
jns
ret
and
outsl
fwait
jbe
mov
fisubrs
cmp
or
mov
jg
pop
pop
push
and
mov
rcrb
push
adc
mov
push
fcoml
dec
sbb
mov
arpl
mov
sbb
jmp
in
pop
pop
aaa
adc
dec
push
add
sti
leave
sub
add
sbb
mov
pop
inc
inc
gs
and
fs
repnz
mov
sbb
insl
sbb
cli
push
mov
mov
push
hlt
mov
pop
js
add
mov
lret
pop
test
xchg
inc
ljmp
mov
pop
fdivrl
mov
sub
xchg
scas
cwtl
xchg
dec
arpl
fnstenv
repz
lret
daa
cmp
leave
movsl
push
pop
mov
loopne
mov
cltd
dec
xor
push
divl
cmp
mov
cwtl
push
testl
sbb
xor
adc
or
lret
pop
inc
ret
scas
mov
cltd
xor
push
lods
xor
push
inc
jp
xor
std
xor
fsub
ljmp
call
dec
test
push
add
inc
jp
cmp
jmp
ja
sub
mov
push
faddp
push
sub
adc
ds
ljmp
mov
adc
xchg
js
popa
out
sti
add
ds
pop
aad
inc
lods
movsl
stos
orb
neg
sbb
cmp
mov
aas
dec
lods
xor
and
das
fsts
push
push
or
fldcw
jle
fs
dec
mulb
rcl
ja
out
or
cmpsb
ss
inc
sahf
cld
jp
sahf
mov
xor
loopne
adc
inc
xor
bound
inc
add
pusha
and
repnz
xor
loopne
adc
inc
xor
bound
inc
add
pusha
and
mov
sub
mov
mov
xor
bound
inc
add
pusha
and
repnz
xorb
mov
lcall
std
mov
cwtl
frstor
cmpb
mov
xor
cmp
push
cmp
dec
fcomps
stos
cmp
push
lret
clc
sub
sbb
push
jp
dec
fcomps
stos
mov
lcall
mov
data16
jp
sbb
cmp
imul
cmp
cmp
or
dec
xor
mov
and
outsl
cli
xor
xchg
sub
inc
pop
ja
jae
insl
stos
imul
js
sub
cwtl
mul
mov
pusha
pop
call
pcmpgtd
pop
push
dec
cmp
inc
mov
imul
pop
mov
hlt
addr16
cmp
sub
mov
jnp
aaa
lds
pop
fsubs
ljmp
push
negb
aas
cwtl
dec
lods
or
mov
stc
int
mov
sub
xchg
clc
mov
stos
cmp
push
lret
pop
sub
cmp
xchg
mov
jp
dec
mov
imul
mov
leave
inc
stc
push
fsubs
addl
lahf
aas
sub
mov
dec
mov
int
sbb
and
sub
nop
outsl
stc
push
in
pop
hlt
jbe
add
cltd
xor
cli
or
js
pop
out
sub
lret
test
mov
sbb
push
jp
dec
fcomps
stos
cmp
push
lret
test
mov
sbb
push
jp
dec
fcomps
stos
cld
scas
mov
das
sbb
adcb
fs
pop
push
and
adc
push
daa
xchg
ret
scas
jno
cmp
in
cmc
mov
xchg
adc
push
sti
hlt
xor
jnp
pop
mov
add
hlt
ljmp
sbb
mov
scas
mov
cmp
std
in
mov
repz
push
adc
nop
mov
mov
xchg
or
dec
mov
imul
pop
jmp
adc
sub
mov
adc
outsl
hlt
out
sbb
stos
shlb
cwtl
mov
shll
or
gs
lods
cltd
popf
adc
lods
sbb
or
cli
in
push
movsb
adc
dec
iret
mov
xchg
push
mov
inc
xchg
mov
sub
mov
jo
mov
or
ljmp
aas
dec
sbb
and
test
sub
sbb
xchg
xchg
pusha
ja
xor
and
push
and
and
enter
mov
shlb
or
enter
mov
push
fucomip
sub
in
sub
sbb
call
cwtl
loope
add
inc
lcall
into
icebp
xrelease
aam
or
xchg
xor
push
cmp
mov
jne
sbb
sti
fwait
cmp
in
lds
test
fcoml
imul
sbb
cmp
sub
jae
xchg
imul
and
adc
loopne
and
cli
push
fisttps
leave
pop
add
call
mov
pop
fadd
je
outsb
leave
imulb
insb
iret
nop
lret
fwait
xor
push
les
mov
or
pop
adc
rcl
mov
hlt
shrb
arpl
pop
inc
mov
shlb
push
lods
or
ret
popf
jle
xchg
mov
jp
negb
mov
insl
addb
jl
arpl
rcl
xor
jns
dec
pop
ss
cmpl
subl
push
div
insb
mov
clc
in
inc
or
or
cmp
aam
jne
pop
xlat
mov
jno
xchg
aad
jbe
push
cmpl
das
mov
pop
cmpsl
sarl
fwait
addr16
pop
cli
xlat
pop
mov
mov
jl
enter
filds
scas
mov
cmp
das
xchg
push
test
xchg
fbstp
add
loopne
cli
in
push
fadd
cmp
dec
dec
inc
je
mov
in
add
fiaddl
mov
mov
pop
mov
xchg
loopne
push
fs
add
adc
mov
push
push
inc
enter
imul
ja
xchg
jl
jae
repz
inc
mov
out
out
outsl
sbb
rorl
lds
pop
xchg
stc
mov
in
dec
mov
sbb
mov
cmp
lds
adc
sahf
mov
out
push
pop
jecxz
jns
mov
stc
out
cmc
push
sbb
fildll
mov
mov
add
fmul
add
mov
rorl
scas
sarl
lock
adc
mov
push
nop
mov
or
mov
fucomi
push
push
or
addl
xchg
add
int
lret
test
add
pop
lret
mov
test
xchg
sbb
mov
dec
mov
pop
lahf
fwait
stc
int
lds
sub
cwtl
pop
mov
cld
loop
iret
or
fists
insb
gs
dec
pop
imul
inc
or
inc
adc
sub
xchg
xlat
daa
outsb
sub
in
das
ds
mov
lret
les
or
loope
mov
cmc
test
ja
int3
adc
dec
pop
xor
xchg
jg
push
ret
push
mov
movsl
mull
xor
xchg
sahf
lods
fcoms
cmc
and
cld
mov
xchg
and
rcll
xor
imul
jmp
cmp
push
adc
outsb
and
iret
pop
mov
cwtl
mov
push
or
cmp
in
sar
pop
xchg
stos
ss
pop
fwait
add
ljmp
mov
leave
fstpl
add
stc
in
jnp
cs
pusha
mov
jecxz
popa
add
push
dec
adc
scas
stos
pop
loop
enter
adc
xchg
mov
cli
xchg
sub
add
out
outsb
in
lods
arpl
and
lds
orl
movsb
out
xor
hlt
scas
dec
inc
stc
jmp
scas
les
fldl
xchg
lds
sbb
xor
jl
cmp
mov
jbe
pusha
add
jg
mov
cmp
jne
jmp
nop
pop
nop
ficompl
into
or
imul
xchg
push
nop
stos
outsb
mov
xchg
dec
cmpsb
sbb
fbld
mov
or
jge
pushf
push
in
or
mov
xchg
sbb
dec
or
daa
in
sbb
mov
imul
js
and
mov
xor
aad
mov
dec
pushf
jne
push
ljmp
int3
aad
add
mov
pop
shrl
dec
xchg
mov
push
sbb
ja
mov
cmpsl
aaa
decl
adc
lcall
xor
adc
adc
cmpsl
xlat
bound
outsb
rolb
pop
cmp
pusha
mov
adc
shrb
imul
cmp
sbb
fistps
das
mov
js
iret
jno
jge
add
loop
cli
inc
mov
imul
mov
into
mov
mov
into
lock
punpcklwd
mov
add
ss
cmp
mov
and
fldenv
pop
push
sarb
ds
loop
xchg
fwait
jle
sar
sub
scas
jns
mov
push
addb
pop
jnp
mov
add
sub
push
out
xor
jp
inc
mov
mov
cmc
ds
into
ret
dec
cmp
adc
mov
cmpsb
sub
test
cmp
cwtl
cmpsl
adc
cmp
sub
push
pop
and
div
mov
adc
out
mov
nop
mov
mov
loope
push
inc
adc
cmp
xor
out
adc
push
inc
hlt
jne
out
push
pop
dec
pop
sahf
sbb
fistpl
test
in
jnp
jns
jp
aaa
mov
ds
inc
pop
cld
cmpsb
out
dec
jle
cld
scas
int3
lret
push
aas
jo
orb
icebp
ds
push
fcmovnbe
out
ret
or
sbb
push
ja
imul
pop
dec
ret
daa
call
jmp
fcmovnbe
loop
out
icebp
xchg
inc
in
cmp
jmp
mov
mov
lcall
and
push
insl
bnd
mov
cltd
jo
popa
loopne
mov
test
sbb
les
jle
and
out
fists
cld
jmp
setns
sahf
mov
pop
scas
loop
cmc
shlb
jp
jge
shlb
push
and
mov
mov
dec
dec
pop
popa
adc
ljmp
push
mov
imul
mov
fdivrp
mov
cld
stos
xchg
sub
repz
icebp
push
ret
xchg
and
sub
leave
fisttpll
xchg
inc
xor
sbb
push
xchg
inc
push
iret
loope
cltd
lds
push
adc
insl
cmpsl
in
sbb
and
stc
mov
mov
xchg
add
inc
push
mov
in
imul
jbe
lods
mov
loopne
mov
jae
xor
mov
add
and
xchg
add
loopne
loope
pop
scas
mov
mov
sbb
dec
popa
jp
pop
jbe
mov
icebp
clc
mov
scas
push
sahf
pslld
mov
adc
fmuls
enter
pop
push
pop
idivl
icebp
or
gs
push
call
cmp
movsl
dec
ret
aad
ljmp
xchg
jns
int3
inc
cmp
jmp
ret
xor
sbb
nop
push
push
lods
pop
jge
iret
add
loope
sub
call
out
sub
sbb
dec
rol
pop
add
cmp
push
pop
popa
dec
jae
cmp
mov
inc
push
stos
pusha
sub
mov
cmpsl
mov
mov
jmp
pop
jnp
push
lods
jmp
xchg
dec
pop
imul
xor
repz
imul
icebp
mov
shlb
jb
pop
push
mov
xlat
out
pop
jge
mov
push
hlt
fiaddl
mov
daa
daa
aad
shlb
loopne
jnp
mov
pop
mov
add
mov
sahf
sub
push
or
sub
icebp
sbb
mov
mov
scas
xor
std
in
jnp
aas
add
sti
mov
cli
jl
sarl
mov
mov
scas
jb,pn
lret
jo
mov
dec
outsl
xchg
add
scas
in
aam
push
mov
movsl
jmp
dec
push
out
add
mov
push
in
add
pop
incl
xor
mov
inc
mov
ds
shlb
dec
rorl
pop
push
xchg
add
add
inc
scas
dec
jl
adc
cmovl
icebp
jne
je
sbb
stos
loopne
jg
mov
mov
push
mov
sub
xchg
cmpsl
stos
cli
sub
push
mov
imul
pop
sub
das
dec
and
popw
adc
push
push
sbb
loope
sti
inc
xchg
sbb
cwtl
inc
push
cmpsl
sarb
push
pop
push
mov
stc
aad
movl
ret
in
or
into
nop
leave
dec
pop
push
lret
mov
cld
xchg
nop
out
and
or
dec
jmp
addr16
mov
int3
jnp
test
inc
push
js
rorl
pop
pop
xchg
gs
insl
scas
inc
test
pop
xor
ror
pop
out
shll
jmp
xchg
sub
or
or
cli
fbld
xchg
sub
gs
fmul
fsts
inc
fdivrp
or
ds
jbe
and
xorl
sub
bt
pop
xor
and
fidivl
fldl
jmp
push
jo
ss
mov
rcrl
adc
cli
pop
add
int3
popf
pop
jno
mov
cmp
inc
push
inc
js
sub
pop
or
div
fwait
pop
cmp
jo
arpl
enter
push
push
jne
push
mov
addr16
divb
outsb
and
sub
lret
add
mov
push
daa
shlb
je
aam
imulb
pop
push
dec
adc
jbe
mov
mov
push
fstpt
adc
gs
pop
fimull
popf
pop
fsubl
xchg
outsb
scas
push
ja
sti
adc
adc
dec
or
jle
xor
ja
fsubrl
jnp
shrb
call
jge
stos
xor
ja
push
add
xor
push
rcrb
and
jnp
cmp
mov
lods
outsl
jl
push
clc
daa
or
dec
aad
dec
pop
push
dec
jns
mov
or
pop
out
mov
inc
lahf
fdiv
les
mov
jb
pop
les
push
enter
adc
xor
dec
fsts
dec
xchg
fisubrs
in
shl
arpl
cmpsb
scas
out
movsl
pop
adc
dec
ret
cmpsb
push
pushf
inc
dec
or
xchg
lds
out
dec
out
cld
dec
add
cmp
fnstsw
xor
jp
cmc
out
orl
pop
push
dec
dec
xlat
inc
dec
icebp
cwtl
jo
push
inc
icebp
sahf
cmp
mov
in
sbb
loopne
movsb
mov
cmc
jl
mov
imul
jae
xchg
rolb
pop
xchg
push
test
jne
sbb
in
push
mov
negl
jne
and
fcomip
xchg
hlt
jmp
pop
push
xor
mov
xlat
push
mov
mov
or
inc
or
cmp
or
or
fcmovnu
sub
ljmp
sbb
pop
ret
adc
outsl
int
or
mov
jmp
jle
ss
pop
setp
pop
lods
repnz
inc
push
lea
and
add
lret
add
push
andl
out
cwtl
push
iret
cli
fnstenv
add
iret
stos
cmc
xchg
outsl
bound
roll
icebp
out
or
inc
xor
ror
out
dec
leave
pop
xchg
add
jle
cmp
popf
loope
lea
lds
jo
call
mov
lods
cmp
sti
sbb
lret
movsl
subl
push
in
movl
push
lods
fwait
sub
xor
inc
das
lret
testb
std
jb
xchg
int3
arpl
sub
lcall
rcll
test
dec
jmp
in
popa
inc
jg
mov
xor
movsb
add
insl
popf
lret
adc
inc
lods
mov
loop
frstor
mov
negl
xor
add
shr
cld
mov
xor
lret
sahf
mov
jnp
neg
jno
jb
es
xchg
lock
mov
push
std
lea
mov
push
or
mov
pop
std
or
sti
push
pop
mov
jle
test
and
mov
cmp
in
cmc
mov
xchg
adc
sbb
negb
stc
repnz
xchg
mov
cld
push
cmp
jmp
mov
pop
daa
push
shrb
push
push
lret
sub
xchg
repz
je
loopne
xor
add
ds
cld
lahf
jb
mov
or
sbb
lret
aaa
ja
sbb
lret
aaa
inc
push
xor
jp
fsubs
or
fmulp
jp
clc
std
loopne
int
pop
outsl
or
xor
test
xchg
lret
daa
xchg
mov
inc
shl
stc
ds
pop
cwtl
insb
lea
push
mov
clc
incl
jae
pop
cmp
xchg
cld
dec
sbb
ret
shlb
scas
gs
mov
add
mov
jle
inc
rcr
in
mov
dec
pop
ja
push
scas
mov
enter
lock
adc
out
hlt
call
idivb
mov
mov
sbb
or
cmp
and
loope
pop
scas
dec
inc
xchg
shrb
pop
stos
out
fldt
jno
cmp
xchg
ss
fsubs
les
subb
push
xchg
adc
pop
neg
push
cmp
mov
dec
inc
aam
mov
sbb
outsl
mov
mov
mov
mov
push
and
mov
data16
out
or
testl
jb
and
adc
and
mov
ja
pop
out
cs
push
push
into
dec
inc
invd
lods
sahf
push
es
dec
ds
or
cmp
or
and
loop
ja
and
jg
int3
in
and
das
cmp
cmp
mov
sbb
aam
adc
mov
scas
push
mov
cmp
mov
or
adc
ljmp
add
lret
inc
lds
jg
push
fwait
sbb
icebp
mov
sbbb
xchg
shr
mov
dec
js
or
dec
ds
mov
add
outsl
adc
sbb
xor
add
dec
lods
push
nop
addr16
xchg
shl
inc
iret
leave
mov
or
outsl
cli
mov
fnstcw
adc
insl
lcall
dec
mov
dec
dec
mov
scas
mov
jl
or
mov
push
lds
rorb
xchg
outsb
out
dec
pop
sub
pop
mov
xchg
out
in
inc
mov
jns
adc
push
test
arpl
inc
hlt
stos
xlat
inc
negl
sub
cmp
jno
lods
rcrl
out
repnz
out
push
cmp
pop
lret
mov
cmovs
lcall
cmp
sbb
jecxz
lret
mov
pop
sti
mov
cli
mov
cld
aam
mov
andl
jp
mov
and
add
mov
jbe
outsb
cmp
cmp
mov
push
out
pop
insl
add
or
cs
push
js
test
pop
mov
sbb
fs
lods
jp
xorb
aad
int3
je
adc
mov
stos
jns
leave
and
dec
je
pop
outsb
ret
xor
movsb
test
lahf
adc
insb
lret
and
jle
int
sub
pusha
cmpb
leave
cmp
fidivs
cli
mov
xchg
or
xlat
cmp
daa
test
sbb
sub
and
mov
dec
sub
sub
cmc
dec
pop
jo
aas
mov
pop
lds
negl
fistpll
mov
push
xchg
pop
adcl
or
cmp
lret
ficoml
and
and
insl
js
ljmp
outsb
inc
rep
repz
push
sbb
stos
push
sub
outsl
xchg
ret
loope
inc
jns
inc
jb
enter
and
and
jbe
xchg
cld
push
test
imul
insb
fdivl
fs
aas
imul
ja
insb
xor
dec
test
fistpll
lds
push
sahf
sbb
or
sbb
mov
sbb
push
dec
or
fnstsw
int3
pop
pop
popa
fs
xchg
test
loopne
mov
lock
repnz
les
push
lds
jno
mov
push
inc
mov
rcr
inc
push
iret
shlb
inc
inc
mov
test
mov
aaa
jg
push
arpl
cmpsl
cmp
mov
das
push
aam
adc
pop
lds
mov
push
fwait
pop
mov
cli
es
mov
in
aad
cmp
out
dec
jae
xor
mov
rolw
adc
jb
and
cmp
sbb
mov
xchg
inc
dec
gs
lahf
aad
sbb
cmp
mov
and
jnp
adc
lds
out
ja
xor
dec
pop
sar
data16
sub
jl
movsl
sbb
jo
dec
xchg
jne
push
dec
mov
clc
jb
push
out
inc
imul
or
mov
and
mov
or
and
mov
mov
repnz
std
cltd
mov
repz
loop
and
mov
add
js
mov
incl
mov
arpl
push
cmpb
dec
stc
push
jle
das
scas
rclb
xor
push
adcl
cmc
cltd
pop
jb
lahf
scas
add
in
in
jp
sbb
orb
pop
or
xor
subl
push
cs
sbb
in
add
mov
mov
xor
push
xchg
and
sbb
jmp
xchg
insb
jg
push
lret
ss
pop
sub
add
sbb
mov
jmp
push
nop
int
mov
popa
test
repz
popf
and
add
fs
ret
std
jnp
xchg
test
cmp
push
not
fcmovnb
stos
outsb
jmp
aaa
bound
lock
outsl
xchg
js
adc
jp
ficompl
push
push
scas
sbb
lcall
sub
mov
cltd
lds
pop
scas
sbb
add
xchg
sub
or
cld
aam
iret
ror
push
ja
pop
rcll
inc
sbb
adc
int
push
loope
pusha
mov
out
rcll
push
sarb
push
dec
dec
pop
inc
mov
inc
cmp
add
jno
jb,pt
enter
cmp
jne
fwait
xchg
lods
jae
jo
cwtl
adc
popa
daa
mov
bnd
jb
push
sarb
mov
pop
out
push
inc
movsb
outsb
arpl
push
xlat
imul
test
cmp
jl
ds
adc
cmpsl
jne
adc
adc
adc
sbb
iret
lret
mov
jnp
test
dec
mov
inc
lret
movsl
cwtl
rcrl
fistps
int3
out
xorl
cs
xchg
loop
push
mov
add
fcmovnb
pop
push
arpl
lret
ret
cmp
mov
cmpsl
and
daa
fldl
ret
sbb
jne
ret
push
out
adc
pop
fdivrl
nop
xchg
addb
inc
adc
add
mov
xor
ljmp
call
pop
sbb
push
fstps
movb
and
outsb
mov
mov
repnz
je
push
push
testl
jbe
in
sub
pop
and
add
std
sub
sbb
xor
pop
adc
mov
mov
mov
je
stos
xorb
push
xchg
movsl
or
sub
jmp
and
adc
pop
push
mov
mov
sbb
mov
cli
mov
xchg
shll
xchg
ror
add
cmpsb
adc
je
test
jmp
push
leave
xor
in
push
mov
sbb
cld
ret
push
xchg
cmp
lds
lahf
cmp
je
pop
cmp
xchg
ret
push
or
push
cmp
xchg
xor
fwait
mov
rclb
mov
mov
sbb
mov
mov
push
lret
test
mov
sbb
push
jp
dec
fcomps
stos
cmp
push
lret
test
mov
sbb
push
jp
dec
fcomps
scas
cmp
imul
pop
fisubrl
pushf
sbb
imul
int3
dec
call
mov
push
dec
fsubs
and
cwtl
insl
lahf
loop
test
mov
movsl
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
jle
xor
add
adc
jnp
pop
push
loope
mov
xchg
mov
in
mov
les
xor
xor
adc
fs
push
push
scas
fnstenv
in
cmc
xchg
mov
movsl
cmp
insl
or
jge
insl
sbb
movsb
aad
out
mov
nop
lret
fidivrl
lret
xor
dec
adc
insb
fisttpll
lret
dec
mov
js
nop
insl
or
int3
dec
fcmovnu
and
mov
xor
mov
popf
fisubrl
dec
cmp
cltd
sbb
mov
pop
test
inc
cmp
sahf
jne
push
push
dec
js
aad
imul
xor
loopne
or
in
lahf
ss
adc
push
mov
test
enter
cmpsl
add
lret
mov
xor
mov
push
cmp
dec
cmp
xchg
cmc
xchg
dec
out
and
stos
xor
dec
lea
mov
pop
mov
xchg
sbb
aam
in
xor
add
add
adc
dec
cmp
aad
fstpl
in
popf
les
push
aaa
popa
adc
add
sbb
cmp
mov
cli
orb
mov
and
xor
popa
push
push
or
adc
adc
cmpsb
mov
loope
and
aam
dec
push
push
inc
popa
adc
sbb
je
inc
xor
mov
test
xchg
in
xchg
hlt
test
mov
movsl
and
xor
add
adc
fs
push
and
test
xchg
in
xchg
hlt
test
mov
movsl
and
notl
bnd
dec
sahf
jecxz
xorl
cs
cmp
pop
fsubrl
dec
inc
jno
fistpl
jp
jns
bound
lods
dec
adc
mov
daa
pop
push
dec
and
mov
subl
jmp
stos
push
cmpsl
das
mov
mov
push
ljmp
jns
iret
cmc
scas
repnz
in
xor
inc
dec
fisubs
xchg
pop
sbb
outsb
sbb
fmull
and
cmpsb
mov
lods
fwait
insl
pop
cmc
pop
inc
out
rol
repnz
push
imul
and
cmp
aam
fs
mov
sti
lods
mov
outsl
inc
stos
mov
xchg
xor
repz
mov
daa
pop
or
pop
inc
popf
cli
daa
jo
cwtl
clc
repnz
mov
sbb
sbb
pop
pop
lods
gs
das
adc
jno
sub
das
je
xor
lret
incb
jecxz
ds
lahf
xor
lcall
add
mov
sbb
lret
in
mov
mov
cmpsb
xor
out
cmp
xchg
pop
ret
jg
xor
adc
push
lock
cwtl
jo
ds
dec
xchg
daa
cmp
adc
inc
pushf
mov
cmpl
pop
and
and
imul
sub
adc
ficompl
xchg
aaa
stos
mov
mov
xor
insb
icebp
cltd
xchg
cmc
sbb
jbe
inc
add
and
ljmp
lret
add
mov
adc
aad
aas
push
sbb
inc
dec
stc
adc
inc
cwtl
lcall
sbb
pop
mov
mov
les
inc
or
je
cmp
dec
test
inc
pop
rolb
out
test
movsl
or
xor
and
sbb
push
inc
fildll
mov
inc
cwtl
xor
les
xchg
sbb
or
sub
addr16
push
arpl
lea
push
or
aam
popa
cmp
jmp
sbb
shl
arpl
mov
sar
ja
mov
cs
push
enter
mov
jp
push
cli
js
mov
xchg
scas
test
xor
movsl
xchg
outsl
repz
out
mov
imul
jge
popa
pop
loop,pt
fsubrl
aas
fwait
pop
lds
popl
pushf
pop
test
gs
mov
xorb
cmc
xchg
jmp
mov
mov
mov
mov
aas
add
xlat
jmp
test
mov
in
in
jg
call
cmp
adcb
psrlq
test
lret
cmpsb
movsb
fsubl
mov
inc
ret
aam
jno
xchg
mov
cmpsl
jge
jns
sub
enter
cld
jecxz
in
mov
adc
mov
mov
xor
and
jg
leave
repnz
stos
xchg
add
mov
or
cwtl
push
stos
cmp
stos
imulb
dec
mov
sub
mov
mov
gs
lcall
xchg
jecxz
ljmp
iret
insl
jno
inc
and
lods
aad
adc
and
aaa
cmp
mov
ljmp
lret
iret
and
in
js,pn
and
cmp
sahf
cs
std
popf
dec
aaa
sub
xchg
insl
icebp
pop
jae
mov
test
enter
cmp
lods
fmull
mov
insl
sbb
or
imul
xlat
test
jnp
mov
sub
out
bound
lahf
fld
pop
dec
fs
addr16
and
aad
stc
lods
adc
push
stos
jle
ljmp
dec
in
scas
aam
mov
clc
mov
je
out
mov
mov
sti
and
cmc
sub
ljmp
cmp
in
or
xchg
push
lds
and
mov
sbb
and
push
or
lahf
xor
aas
fcompl
add
sbbl
lods
movsb
jle
fisttpll
xchg
xor
push
cmpsl
cmp
cltd
cld
roll
or
insl
lods
xchg
in
push
into
adc
mov
inc
cmpsl
ds
jnp
sub
push
mov
scas
cmpb
hlt
or
pop
xorl
out
pop
adc
in
gs
pushf
les
add
ficompl
outsb
jmp
rcl
push
or
xchg
rcll
shr
xchg
sub
add
adc
dec
leave
sub
mov
jecxz
adcb
rorl
pop
fsubs
jl
pop
dec
jl
in
aas
jle
movsb
and
push
xlat
arpl
cmp
out
aas
test
jno
and
dec
push
push
ret
xor
aad
jg
dec
daa
add
daa
gs
and
mov
xchg
popf
or
fsubrl
dec
sub
imul
sub
mov
sbb
inc
leave
push
out
les
jmp
lea
cmpsb
fsubs
jl
jbe
sub
stc
test
fnstsw
jns
jo
fbstp
lret
popf
sti
imull
mov
xchg
icebp
sbbl
idivb
test
mov
xorl
sub
mov
ja
xchg
frstor
add
lods
jge
imul
aam
pop
aaa
pushf
lret
and
rcr
sar
push
jnp
and
in
xor
dec
imul
shr
or
leave
stos
mov
shrb
xlat
pop
jbe
mov
or
sbb
cmp
jb
pop
lcall
es
xchg
dec
int
rcrb
sahf
clc
mov
cmp
adc
aaa
add
push
jmp
stos
mov
hlt
loope
fwait
dec
mov
scas
add
jne
adc
pop
push
or
mov
push
adc
inc
or
xlat
popa
push
into
mov
popa
jmp
sub
das
cld
pushf
aaa
or
ja
jecxz
push
ss
xchg
leave
sbb
lds
and
ret
mov
nop
jp
push
bound
jge
in
sti
cmpsl
dec
push
add
add
lret
mov
aad
int3
ds
dec
insl
das
add
mov
shrb
push
pop
int
mov
sbb
rcrb
jl
mov
fidivrs
adc
adc
or
cmp
nop
mov
sub
into
xchg
sbb
das
fwait
lea
dec
enter
jae
inc
int3
mov
and
or
adc
push
aas
loope
sbb
jnp
cmp
mov
sub
mov
xor
scas
cmp
jg
lods
popa
pop
pop
mov
unpcklps
pop
mov
imul
pop
adc
adc
inc
test
sti
mov
jnp
hlt
lret
pop
pop
and
test
loop
mov
push
cld
xchg
xchg
loope
mov
xchg
push
pop
lcall
popa
mov
or
lcall
adc
test
insb
mov
addr16
jecxz
push
sbb
addl
ja
ja
movsb
fstps
popa
dec
cli
lods
push
pusha
mov
lods
xor
jb
int3
test
pusha
scas
push
js
or
push
cld
add
mov
push
enter
testb
xor
push
lret
lock
dec
jne
roll
les
add
xor
jno
leave
mov
lcall
pusha
pop
xchg
xor
ret
adc
scas
stc
xor
xchg
pop
mov
and
faddp
xor
xchg
xor
push
movsb
addr16
xor
in
jns
sub
xchg
xor
bound
dec
aad
andb
push
add
jnp
shl
fst
dec
dec
xchg
mov
cld
les
ds
inc
xorb
mov
xchg
daa
jl
mov
xchg
xor
cs
sbb
lcall
sub
xchg
mov
ret
xchg
cmp
sub
pop
fs
dec
cmp
add
xchg
add
mov
dec
sti
sti
mov
movsl
fsubrl
and
scas
js
xor
lcall
xor
jns
push
jne
repnz
cmp
inc
lret
repnz
or
sahf
add
sub
in
pop
jb
repz
push
fsubrs
sub
jne
add
pop
out
push
push
push
out
sbb
xor
xchg
adc
sti
cmpsb
mov
arpl
push
pop
mov
jmp
fisubrl
iret
ss
jmp
mov
int3
push
cmp
int
into
and
aad
imul
pop
ja
pop
es
cmp
imul
loop
push
and
push
jl
cmp
adc
push
movsb
mov
daa
sti
and
test
xchg
fst
ss
mov
stos
lahf
xchg
gs
push
arpl
fbstp
inc
add
daa
pop
cmp
jmpw
pop
cs
stos
pop
lcall
andl
cli
adc
add
cld
loop
cmp
enter
push
js
cmpsb
movsb
pop
dec
mov
sbb
dec
into
mov
adc
cmp
lods
cs
int
out
xlat
push
inc
mov
cmpsb
xorl
subb
inc
sub
rcrl
dec
js
mov
push
fldl2t
stos
test
push
jmp
add
and
mov
test
int3
test
sub
test
jl
add
inc
dec
pop
push
stc
cmp
lods
pop
mov
rorb
mov
push
dec
inc
xchg
nop
add
mov
or
xchg
push
jl
dec
or
loop
or
pause
mov
sbb
scas
test
ss
mov
pop
lods
pop
mov
cmp
mov
cmp
jp
xlat
fstpl
icebp
cli
jne
pushf
cmp
mov
mov
mov
sbb
sahf
lcall
xchg
sub
inc
aam
int
sub
push
xchg
daa
pop
cmp
cwtl
insb
aaa
imul
lock
fildl
mov
inc
lea
or
repz
pop
mov
pop
sti
aaa
in
or
jae
mov
or
jecxz
inc
sub
mov
add
mov
push
xor
xchg
mov
jge
cwtl
xchg
dec
xchg
sub
cwtl
mov
add
xorb
insb
nop
and
adc
cmp
imulb
xchg
lret
jg
sub
add
jns
pop
shlb
sub
inc
add
in
mov
jmp
add
adc
fdivl
pop
lret
imul
cmpsl
pusha
sbb
jne
mull
xor
inc
cmp
add
push
push
xlat
jg
insl
sbb
not
xchg
or
adc
push
ret
or
add
push
xor
mov
add
pop
push
cltd
and
mov
data16
fstpt
sbb
jb
int3
jge
push
cmc
cmovb
or
aas
and
in
int3
into
xor
jns
dec
xchg
adc
dec
cwtl
std
dec
out
dec
repz
xor
or
icebp
cmpsl
dec
jbe
mov
jle
ds
lret
add
test
push
cmp
adc
jg
out
cmp
or
inc
addr16
jbe
into
jnp
inc
xor
or
ret
mov
sub
push
aad
mov
dec
test
push
pop
jbe
cmp
or
jbe
int
mov
lcall
loopne
loop
stc
data16
pop
lcall
pop
sahf
enter
jo
enter
fcoml
adc
les
or
aad
pusha
xchg
pop
sbb
imul
insb
shlb
out
inc
in
mov
pop
sbb
jnp
popf
pop
add
dec
inc
aad
add
inc
mov
mov
arpl
in
test
das
rclb
xor
repnz
inc
mov
mov
dec
lret
mov
pop
push
add
push
adcl
ret
dec
fwait
shl
add
push
push
call
test
jmp
scas
orl
popf
xchg
movsb
sub
sbb
and
push
fwait
pop
mov
cmp
xlat
and
adc
dec
pop
jns
add
lea
mov
pop
or
dec
lahf
ds
cmpl
ret
ja
and
dec
ljmp
push
ret
fidivl
adc
adc
fwait
cmpsl
mov
imul
ficoml
mov
jbe
out
xchg
in
jae
mov
popf
mov
es
cmpsb
ret
mov
out
das
push
sti
or
hlt
sbb
add
int3
into
mov
notl
testl
mov
cmpsl
cltd
inc
mov
sbb
pop
addl
sbb
pop
gs
xor
mov
jae
lret
hlt
cmp
xor
jle
fnstsw
cmp
ja
jl
xchg
adc
cmpl
out
mov
pop
pop
mov
lods
push
mov
aaa
xor
or
push
cltd
in
pop
or
dec
out
flds
cs
cli
gs
mov
jo
mov
mov
jnp
or
push
gs
faddp
adc
les
xchg
pop
sbb
inc
dec
int
cld
push
mov
xchg
negl
cmc
daa
out
lods
loopne
enter
addb
lahf
and
jmp
mov
call
aam
imul
add
pushf
jecxz
sub
ret
jecxz
shlb
xchg
out
fs
xchg
outsl
stc
jg
or
fwait
aad
mov
sbb
mov
pop
push
lcall
sub
outsl
jmp
inc
dec
or
out
in
call
popl
and
mov
or
push
jns
ss
hlt
inc
push
mov
mov
sbb
out
jo
jb
cmp
pop
inc
mov
xorb
push
iret
ficoml
in
in
inc
inc
cwtl
xlat
xchg
sbb
sub
fiadds
sbbl
loope
in
sahf
fisubrs
push
xor
sbb
fcmovnb
stos
jno
addb
sub
std
icebp
bound
shlb
enter
and
dec
out
sub
ja
fs
inc
sub
aaa
adc
ds
aad
jnp
dec
stos
loope
add
push
jg
inc
jnp
ret
fwait
mov
sbbb
or
jo
xchg
popf
or
xor
dec
pop
jae
jne
jmp
add
cs
pop
dec
and
xchg
jbe
xor
sbb
add
jne
mov
xchg
pop
shlb
das
xchg
mov
sbb
aas
jno
cmc
dec
xchg
in
subb
fbstp
nop
sub
ds
out
cltd
mov
outsb
push
dec
or
mov
andl
out
cli
dec
adc
xor
cmp
out
adc
mov
cltd
dec
or
sbb
iret
sub
fbstp
mov
rclb
int3
mov
jle
mov
fisttpl
xchg
or
in
push
mov
dec
pop
stos
mov
insl
push
inc
leave
sub
pop
call
out
xor
xchg
lods
loop
sbb
pop
out
push
aad
aaa
pop
lds
mov
cli
sub
sbb
fldl
push
sub
ret
jns
xchg
jecxz
mov
push
shl
outsl
aaa
dec
fistps
mov
into
cmpsb
adc
pop
add
daa
push
xchg
testl
xchg
sub
fcom
jg
ss
push
test
mov
fwait
xchg
int
push
xchg
cltd
adc
rcrb
loop
scas
fbstp
push
mov
cmp
push
add
xor
mov
fsubp
clc
mov
xchg
mov
fs
ss
cmp
ret
stos
dec
outsb
out
movsl
jle
es
dec
daa
fld
lret
lahf
fdivrs
mov
pusha
sbb
mov
es
jne
imul
aas
cltd
inc
out
inc
xchg
adcl
or
jge
js
imulb
cmpsb
xchg
cmp
pop
icebp
jnp,pn
lea
sbb
push
cld
repz
mov
test
test
shll
repnz
and
fmuls
xchg
aam
in
mov
aam
xor
push
sbb
cltd
dec
xchg
dec
test
sarb
mov
fistps
jo
inc
sbb
jge
cmp
call
jp
lods
shl
aas
mov
call
sbb
add
pop
mov
lar
aaa
push
add
movsb
mov
leave
jecxz
cmpb
and
mov
xor
stos
push
push
xor
in
imul
flds
add
jo
inc
mov
cmp
jno
jp
mov
leave
jb
cld
push
scas
xor
cmpsl
fstl
imul
in
mov
imul
mov
sti
stos
add
fcmovne
adc
data16
add
rorl
mov
jg
repz
jp
xchg
push
fdivrs
iret
fisubs
outsb
mov
sub
jno
outsl
dec
sbbb
add
pop
lds
xchg
push
ja
ret
xor
adc
fsts
mov
imul
out
imul
xchg
lret
cli
leave
rolb
mov
pop
jo
inc
cltd
inc
xchg
dec
jge
mov
add
repz
cmpsl
inc
movsb
add
jp
adc
mov
mov
inc
dec
add
insl
fcmovb
mov
adc
cmp
shlb
dec
orl
xchg
sti
adc
pop
popa
xor
out
xchg
test
cmpsl
mov
mov
mov
xor
push
int
daa
mov
xchg
and
es
sub
addr16
xor
insb
push
insb
pop
int3
sub
push
inc
mov
dec
fstps
mov
shll
sub
dec
lds
mov
out
dec
xchg
gs
push
jae
add
repz
cmp
cltd
sbb
sub
push
cltd
sub
dec
xchg
icebp
adc
xchg
lret
gs
lahf
cmp
pop
mov
pushf
pop
mov
je
scas
inc
jg
hlt
stc
test
fstp
mov
or
mov
add
loope
xor
iret
adc
loop
inc
test
mov
nop
stc
dec
faddp
push
xchg
xorl
pusha
xchg
hlt
data16
aam
push
mov
push
add
push
xor
int
mov
ss
inc
imul
mov
add
dec
jecxz
jb
or
dec
loop
xor
mov
hlt
sub
ds
stc
dec
mov
sbb
and
mov
sti
xchg
mov
fstpl
outsl
and
shll
mov
mov
sbb
outsb
add
xchg
mov
lea
adc
cmc
adc
mov
push
mov
ffree
in
jecxz
gs
push
stos
adc
cltd
sbb
cltd
cmp
stos
xor
xor
sti
test
cmp
test
iret
inc
jge
mov
push
popf
fcmovbe
loope
shll
inc
pop
shll
jg
jge,pt
sbb
lds
push
lods
lods
pop
outsl
lods
cmp
adc
out
clc
outsb
xor
xorl
rcrb
fsts
sahf
dec
push
sahf
fcmovnb
lahf
push
cmp
xchg
push
or
xchg
loope
xor
sbb
mov
fsubs
jmp
pop
ret
jl
lods
testl
inc
test
inc
mov
dec
ret
inc
mov
fdivrl
mov
push
adc
mov
or
sar
mov
sbb
fldl
or
jne
minps
and
cmp
fs
mov
jl
push
dec
imul
int
scas
or
pop
imul
mov
mov
pop
add
dec
push
jnp
jne
lahf
push
lds
dec
ljmp
lahf
inc
testl
je
or
ss
mov
push
cmp
sahf
repnz
ja
pop
sub
ja
pusha
push
sbb
pop
es
dec
int3
xchg
sub
out
cmc
pusha
and
jns
xchg
cmp
add
sbb
mov
xchg
ss
cmp
push
pop
push
in
loope
cwtl
je
lods
iret
loop
shrl
dec
dec
push
push
icebp
fmul
movsb
xor
imul
xor
pop
dec
fwait
dec
cmp
sub
add
popf
adc
fcmovbe
out
repz
mov
dec
pop
iret
mov
sbb
adc
gs
aas
test
lods
lahf
pop
pcmpeqd
in
cs
cli
movsl
cmp
xchg
ss
andl
pop
enter
std
add
or
lahf
and
cmc
rcll
mov
jp
pop
pushf
rcrl
int3
mov
out
jbe
adc
adc
xchg
mov
sub
add
rcrb
push
dec
mov
push
loopne
or
dec
add
sub
inc
insb
inc
push
lds
pusha
xchg
pop
adc
dec
mov
shlb
ficomps
xchg
cmc
fisubl
cmp
xor
or
call
roll
sbb
cltd
fucomi
mov
scas
loope
add
call
call
icebp
add
cs
shll
sub
lods
std
mov
and
xor
pop
mov
add
dec
pop
stos
push
test
lds
enter
std
lods
mov
pop
std
add
rorl
mov
inc
jmp
adc
push
and
test
xchg
in
xchg
hlt
test
mov
movsl
and
xor
add
adc
fs
push
and
test
xchg
in
xchg
hlt
test
mov
movsl
and
xor
add
adc
fs
push
and
xor
loope
xchg
lock
mov
mov
xor
gs
aam
pop
aad
outsl
cs
xchg
xchg
xchg
sbb
sub
xchg
or
cmp
test
js
movb
ss
mov
callw
xchg
or
cmp
dec
pop
imulb
add
mov
cwtl
ss
mov
jbe
data16
scas
sub
pop
out
push
and
fsts
sub
jnp
push
mov
sarb
test
pop
aaa
jecxz
pause
imul
mov
lea
scas
arpl
pop
pop
jns
into
je
mov
jae
jae
xchg
cld
das
addr16
faddl
enter
call
jp
inc
inc
loopne
adc
fwait
es
push
icebp
stos
call
jbe
inc
xchg
dec
xchg
cmp
add
pop
or
out
popf
ja
add
fstps
enter
loop
stc
jl
dec
cmp
mov
rcr
mov
ja
aam
push
mov
mov
jbe
jle
xchg
icebp
cmp
sub
nop
add
cltd
mov
dec
push
jbe
adc
adc
in
pop
or
cmp
dec
pop
imulb
js
mov
cwtl
cs
mov
insb
call
jecxz
shrl
sarb
movsl
sub
out
push
icebp
push
inc
int
int3
push
mov
mov
stc
insl
out
cmp
add
loope
sti
fstl
sub
xchg
repz
ljmp
data16
pop
imulb
js
mov
cwtl
ss
mov
jbe
data16
xchg
or
cmp
dec
pop
imulb
js
mov
cwtl
ss
mov
jbe
data16
xchg
or
cli
mov
push
cmp
jl
xchg
push
scas
jnp
mov
jmp
jnp
xchg
inc
sbb
jl
adc
test
mov
sbb
lods
jg
and
pextrw
ja
es
mov
ljmp
sub
adc
adc
repnz
ficomps
into
jno
xor
mov
or
shll
cmp
rorb
mov
rorb
mov
orb
int
adc
js
push
fidivl
pop
insl
pop
xchg
inc
addr16
jmp
cmp
fidivrs
test
or
out
ja
jnp
push
lods
stos
adc
sarl
enter
out
sub
movsb
rcr
jne
pop
das
pop
inc
loope
test
jne
repnz
daa
data16
stos
stos
mov
repz
mov
fs
inc
mov
out
fidivl
cmp
mov
sub
add
shlb
pop
in
mov
pusha
stos
jl
add
push
dec
adc
cmp
pop
dec
test
adc
lar
insb
mov
adc
es
ljmp
dec
in
fwait
cmp
imull
and
loope
out
add
pop
in
orl
cwtl
push
inc
and
int3
unpckhps
cwtl
jo
jge
ja
pmuludq
popf
mov
popa
addr16
or
mov
mov
sbb
cmp
pop
dec
sbb
repz
xor
incb
neg
out
cli
pop
xor
mov
push
or
ss
mov
lret
addb
repnz
mov
cli
shlb
pop
mov
test
mov
adc
scas
iret
pop
mov
jge
and
hlt
lret
xchg
mov
inc
mov
ds
inc
addr16
imul
cld
rcl
mov
or
mov
ret
mov
push
neg
jecxz
rcrl
pusha
adc
test
sarb
mov
xlat
push
dec
ret
mov
pop
loope
jno
bound
xor
push
xor
out
adc
std
push
add
enter
pop
in
mov
xchg
sbb
dec
pop
sbb
dec
inc
or
sarb
cmpsl
in
shrl
movsb
and
xor
mov
popf
ret
xor
repnz
xchg
negl
pop
xchg
mov
sbb
jle
imul
rorb
jle
xor
jb
daa
jmp
cs
mov
sbb
xlat
push
mov
insb
and
lock
adc
ss
imul
push
gs
lret
int
test
inc
lea
pop
loopne
mov
pop
movsl
iret
push
imul
adc
cs
sbb
insb
or
jmp
data16
xchg
popf
xchg
pop
or
inc
stos
mov
repnz
sbb
sbb
or
jle
sbb
xor
adc
add
push
mov
stos
dec
xor
testb
inc
cmc
sub
sbb
das
push
mov
adc
jecxz
icebp
fistps
fists
outsl
inc
imul
lds
dec
movb
fdivrl
hlt
pop
dec
mov
negb
cmove
repnz
xor
add
xchg
cltd
loopne
popl
out
pusha
sub
push
sbb
jmp
and
mov
test
or
xchg
mov
pop
ret
or
pop
or
mov
iret
adc
cmpsl
test
add
call
adc
or
out
and
notb
pop
outsb
cmp
or
fisttps
cmp
mov
ljmp
jbe
and
sbb
mov
pop
orl
loope
scas
cmp
mov
dec
imulb
xchg
xor
jge
push
inc
dec
sarl
stos
or
lds
lcall
jno
lods
scas
stos
adc
add
shlb
lret
shr
dec
adc
andb
loope
jnp
popa
mov
jecxz
xor
jbe
xchg
fnstcw
mov
mov
xor
xlat
lret
dec
fnstsw
push
pop
cmpsl
outsl
add
xchg
mov
xchg
gs
dec
pop
popa
xchg
add
outsl
cmpsb
arpl
push
sub
addb
xlat
mov
mov
push
xchg
mov
aas
mov
sti
sbb
lock
test
cmp
xchg
mov
inc
hlt
mov
out
xchg
and
frstor
out
cmpsl
fiadds
xchg
jnp
and
lret
pop
sbb
call
lea
mov
lahf
cmp
cmp
dec
xor
sub
cmp
mov
addr16
lahf
pop
or
jnp
sub
pop
jb
pop
cmp
pop
fadd
lahf
inc
rorb
jl
and
mov
inc
mov
pop
add
rcr
inc
test
in
rcl
ja
dec
sbb
push
sahf
shrb
push
fucomip
out
addl
inc
iret
idivl
push
inc
push
lods
dec
pop
inc
cmp
mov
in
mov
nop
cld
or
ds
mov
in
push
jmp
adc
dec
in
push
sti
inc
and
inc
add
add
push
scas
lock
push
mov
push
xchg
mov
movsl
jmp
push
adc
inc
push
mov
sub
out
test
sbb
add
aam
xor
out
sub
or
nop
lds
mov
xchg
lea
loopne
cmp
push
ljmp
mov
sbb
popa
mov
dec
mov
jne
scas
mov
xchg
std
xorl
aas
arpl
mov
sub
sbb
and
or
std
leave
movsbl
mov
pop
adc
push
jmp
mov
sub
xorb
lock
outsl
inc
jne
xlat
dec
testl
hlt
pop
test
or
hlt
cmpsb
mov
sub
es
add
push
in
push
cli
in
dec
loopne
sub
pushf
pop
pop
dec
mov
and
jg
jmp
lock
insb
popl
jp
pop
imul
orb
ret
mov
dec
icebp
inc
aam
shlb
dec
xor
or
sti
mov
test
push
das
cmp
mov
jecxz
fisttpl
sub
sub
and
into
xchg
les
adc
xlat
test
push
fidivl
movsb
stos
mov
pushf
xchg
stc
pop
adc
mov
xor
out
xor
push
std
out
fsubs
mov
push
push
or
cmp
test
jmp
ret
ret
insl
test
shlb
jb
add
push
lea
iret
dec
gs
and
xor
mov
clc
scas
aaa
or
jge
push
scas
xchg
pop
mov
pop
sub
push
fisubl
jg
addl
push
std
mov
push
pusha
lret
mov
clc
sti
insb
sbb
enter
out
into
xor
aad
cmp
cmpsl
and
adc
xor
xlat
add
xchg
int3
in
and
mov
sbb
pop
add
pop
pop
cmp
sbb
jb
dec
pop
lods
xor
pop
in
mov
loop
insl
jbe
mov
xchg
stos
push
pop
in
pop
cmp
add
pop
xchg
pop
scas
bound
dec
imul
in
fistpll
stos
mov
sub
mov
popa
adc
loopne
ss
lods
sbb
fstp
rcr
add
push
pop
fsubr
aad
int3
lret
cmp
push
xchg
insb
ficomps
push
inc
aas
mov
fisttps
lods
in
loopne
and
and
sahf
jmp
sbb
jmp
aam
insb
lahf
jge
aad
lsl
add
sub
test
lcall
jge
lock
arpl
in
call
sub
ja
out
aas
ja
fists
lret
outsl
push
rcrb
hlt
jo
lods
addl
add
jmp
loop
or
stc
int3
in
cltd
mov
add
jl
jno
inc
rcrb
int3
lret
push
push
enter
sbb
fdivrp
iret
xor
pop
pop
aam
and
push
mov
cmc
sub
rep
jge
test
or
icebp
icebp
mov
cmp
pop
push
add
cmp
pop
add
ss
lock
into
xorl
mov
aaa
out
mov
mov
push
mov
or
adc
sbb
shrl
jl
mov
push
leave
fs
adc
xlat
sub
lret
sahf
add
adc
pminsw
repnz
and
inc
dec
cwtl
das
push
insb
cmpb
inc
push
arpl
imul
sub
jb
addr16
pop
push
lods
aas
popa
js
sbb
xchg
repnz
rclb
pop
pop
sahf
or
arpl
cmp
adc
xlat
push
jne
aad
call
pop
gs
jbe,pt
mov
adc
mov
sbb
mov
dec
jle
mov
mov
addr16
shl
in
xchg
mov
out
xchg
fistl
push
inc
out
add
mov
nop
jns
cmp
loope
mov
mov
enter
cmc
shr
pop
jg
cmpsl
cmp
pop
mov
pop
flds
jne
cmp
jbe
xchg
jl
fldl
pusha
enter
mov
add
push
mulb
lods
outsl
xchg
fnsave
mov
insb
out
xor
jp
jb
xor
ja
push
sahf
inc
mov
cmpsb
pop
or
out
jbe
and
aas
test
push
jmp
fs
scas
loopne
push
lods
jb
adc
icebp
cmpsl
cli
leave
mov
cmc
out
imull
sbb
jae
test
insb
pop
pop
insb
adc
push
aas
jae
or
sbb
cld
dec
mov
fiadds
mov
lret
adc
jl
xchg
push
call
aas
pop
gs
rcrl
sub
mulb
sub
cltd
arpl
push
fiadds
dec
test
or
jl
add
mov
jae
shlb
cmp
shrb
mov
push
ret
xor
loopne
cmpsl
push
rclb
aam
stos
in
mov
divb
mov
cmc
mov
loopne
stc
mov
inc
jnp
pop
mov
iret
sbb
shlb
inc
shl
cltd
shr
xor
cmc
xor
pop
mov
jl
popa
lea
in
loope
add
jo
fwait
daa
cwtl
push
mov
mov
add
lea
ljmp
mov
cmp
add
mov
lcall
mov
dec
aad
inc
push
in
arpl
pop
fdivp
cmp
out
out
cmpb
mov
or
aas
inc
inc
mov
lods
and
mov
cmp
enter
jle
or
xor
pop
push
mov
andl
call
loope
in
das
adc
sbb
mov
xchg
push
jl
or
roll
mov
inc
hlt
push
imul
cltd
xchg
shlb
call
in
and
jl
cmp
xchg
add
inc
lea
add
ljmp
negb
mov
inc
add
sahf
mov
aam
fcomps
testl
cmp
insl
xor
lret
sarb
cltd
pop
cmp
enter
div
test
cs
push
in
add
adc
push
mov
roll
call
into
fidivl
pop
xchg
fwait
out
push
dec
je
mov
xchg
mov
add
in
into
add
rcrb
mov
movsl
in
daa
addr16
or
imull
pop
into
cltd
xchg
mov
into
data16
inc
fisubl
mov
flds
or
xor
nop
jl
jo
test
xchg
add
adc
lds
hlt
cwtl
outsl
js
imul
call
imul
jns
pop
daa
dec
popf
pop
push
add
xchg
add
jne
imul
or
dec
pop
aam
xor
inc
std
lcall
mulb
pop
xchg
ffree
dec
adc
add
jb
daa
ds
add
mov
xchg
xchg
push
cld
xor
pop
or
testb
adcl
cmp
dec
arpl
and
cmp
mov
popf
xchg
push
add
cli
pop
fdivl
adc
cwtl
testl
lea
sbb
repnz
pusha
sbb
add
fwait
jne,pt
lods
stos
lret
cld
push
repz
pop
std
xchg
fs
dec
jmp
jbe
shl
aam
xchg
loopne
outsb
xchg
push
xchg
jae
sub
sub
inc
xchg
cmp
xlat
mov
sub
repz
push
inc
cmp
mov
push
ds
and
into
rorb
sub
xchg
jnp
mov
push
call
pop
fidivl
xchg
mov
xchg
not
mov
std
add
push
andb
push
cli
adc
dec
out
push
in
gs
iret
jmp
jns
adc
push
push
outsb
mov
sahf
stc
pushf
jo
mov
lea
and
nop
jp
and
ret
fmull
enter
xchg
cmpsb
popf
push
xor
adc
cmp
jno
push
dec
mov
enter
jnp
insl
nop
sub
pop
cmp
and
ja
pop
mov
lret
gs
popa
and
rolb
popf
cmp
cltd
scas
mov
cltd
mov
divb
push
pop
jle
or
cmp
cld
cmpsl
cltd
fwait
push
aam
clc
sub
and
arpl
push
dec
and
adc
popf
mov
daa
test
shlb
in
fildl
xchg
loope
inc
negb
pop
inc
dec
sahf
dec
dec
xchg
and
ja
lock
sti
ja
sbb
xor
sbb
xchg
mov
or
xchg
add
dec
loopne
les
orl
and
push
subps
jo
ljmp
sub
push
movsb
icebp
mov
dec
das
xor
sbb
in
pop
lahf
cltd
mov
das
lret
add
in
push
sub
mov
jo
pop
loop
cwtl
adc
xchg
sbb
dec
pop
repz
dec
pop
scas
frstor
ja
fisubs
jp
add
lea
and
adcb
cmc
push
jmp
xorl
xor
test
hlt
adc
das
xor
lcall
popf
dec
cmp
mov
rol
dec
sbbb
cmp
inc
mov
decb
jns
or
aam
dec
aam
sbb
or
cmc
adc
je
pop
cmp
std
jl
inc
int
loop
ficoml
xchg
ret
mov
and
inc
cmpsb
and
andl
in
cld
imul
pusha
pop
test
mov
sub
aam
shll
sbb
fimuls
imul
pop
inc
fisttps
sub
push
push
lret
mov
pop
dec
adc
push
mov
or
jecxz
scas
push
nop
orb
jae
out
imul
lret
andl
and
cwtl
sti
adc
xchg
cmp
cld
rcrb
pop
ret
sub
mov
and
orb
jb
jae
popf
cmpsb
orb
jns
adc
push
inc
xor
cwtl
sbb
dec
xor
lcall
sbb
shlb
gs
pop
das
cmp
xchg
jle
in
fdivrl
or
inc
xor
xchg
mov
add
inc
addb
jb
dec
inc
nop
cmp
sbb
out
rcll
fidivrl
movsb
rcll
loope
lahf
pop
cmc
adc
ja
add
orb
inc
and
push
in
push
je
jns
sub
stos
jae
loop
and
out
cli
or
fidivrs
xor
lret
es
mov
xor
sbb
or
gs
and
mov
test
test
xchg
push
mov
mov
cmp
xchg
popa
pop
mov
ds
inc
sub
sub
filds
inc
push
enter
scas
insb
insb
xchg
fistpll
sub
cmp
cld
daa
mov
enter
arpl
xor
arpl
in
outsb
das
in
cmp
and
dec
out
in
xor
jne
mov
mov
call
push
push
notb
mov
ja
out
insb
and
mov
sub
popf
mov
nop
mov
icebp
inc
sub
clc
arpl
gs
jl
cwtl
aaa
mov
or
mov
inc
or
pop
test
add
xchg
xor
testb
fcmovnb
xchg
xchg
ret
add
cs
sti
mov
cmp
sbbb
inc
pop
sub
pop
int3
mov
push
push
popf
cmc
lds
adc
xlat
xor
mov
mov
bound
adc
jo
or
ret
pop
push
push
jmpw
dec
popa
xchg
outsb
smsw
jnp
repnz
leave
mov
mov
out
into
hlt
add
imul
mov
insl
rorb
bound
movsb
jmp
fiaddl
xchg
in
call
jne
cmp
data16
insl
mov
adc
shll
pop
stos
lods
push
pop
fcmovnbe
jmp
inc
cwtl
mov
decl
sub
dec
fadds
jae
jmp
aad
xchg
loop
sti
in
fidivrs
pop
data16
sahf
push
cmp
hlt
gs
aam
cmp
out
loopne
lret
outsl
jg
mov
mulb
and
mov
jbe
pop
push
in
jb
jne
xor
cs
jle
cmp
mov
mov
andl
add
xlat
or
dec
xor
inc
mov
in
add
std
fcompl
sbb
dec
cmp
gs
sub
mov
aaa
fwait
mov
push
or
cli
pop
lods
mov
dec
sbb
pop
mov
movsl
xor
inc
cld
xor
or
lods
int3
fsubr
add
push
subb
popf
cmp
push
rorl
mov
jae
cmp
pusha
movsl
test
and
popa
mov
cs
mov
movsb
adc
jbe
push
fwait
cmpb
push
rolb
pop
test
adc
push
fsubl
mov
sbb
jae
in
test
xchg
call
inc
out
cmp
xor
scas
mov
nop
stc
and
mov
mov
xchg
mov
das
in
fsts
aad
sbb
stos
icebp
clc
lcall
xor
or
mov
dec
lods
push
insb
fldt
push
imul
les
dec
fbld
sbb
add
jp
push
and
mov
push
push
mov
jbe
insb
or
sub
popf
out
outsb
xchg
push
and
mov
mov
dec
or
add
in
cmpsl
and
mov
bound
fs
dec
pop
jmp
lods
sti
jno
mov
sbb
out
xor
sub
stos
cmc
xor
pop
pusha
orb
and
xchg
adc
fsubl
dec
jle
adc
cmp
lea
xchg
mov
call
movsb
lcall
mov
lahf
xchg
cmp
rcll
mov
pop
cmp
dec
inc
adcb
cli
sbb
pop
movsl
or
jne
test
mov
xor
addr16
jle
mov
xchg
sbb
mov
push
sub
iret
jecxz
push
mov
cmc
repz
cmp
cmp
data16
sahf
imul
jp
sub
mov
dec
clc
add
jl
aas
dec
mov
dec
rorb
and
dec
adc
adc
cld
jne
jg
and
sahf
cli
scas
adc
popa
sub
inc
pop
sbb
cmc
pop
inc
fdivrl
push
inc
rcrl
jmp
dec
xchg
pop
mov
add
cmp
inc
mov
orl
enter
xchg
and
inc
ja
movsl
mov
cmovo
adc
lock
outsl
stos
in
loope
rcrl
mov
addr16
stos
adc
mov
xchg
add
repz
rorl
pushf
leave
out
adcb
aaa
scas
cmp
pop
cltd
and
dec
cmp
mov
cmp
mov
lods
outsl
roll
lret
mov
and
dec
xchg
daa
aas
jmp
aas
out
or
fstpl
fnstsw
into
ljmp
push
sub
stc
std
xchg
add
cmpsb
out
xor
push
test
addr16
cmpsb
sbb
stos
cmp
pop
ret
cmp
mov
add
arpl
sbb
mov
jne
out
inc
jno
jp
decl
incb
test
cmp
outsb
sbb
pop
cmpsb
mov
vpsrld
xor
pushl
cmp
jge
nop
and
cli
mov
out
stos
shlb
lea
adc
cmp
cwtl
repnz
push
jae
pusha
cmpsl
lret
out
fildll
movsl
inc
shl
rcrb
sbb
pop
adc
inc
adc
scas
rcl
jo
into
jns
mov
gs
or
mov
rclb
jmp
cmpsl
xor
sti
jb
mov
add
pop
xchg
out
sbb
xor
inc
out
pop
sti
push
jb
adcl
lret
dec
adcb
sti
sbb
pop
imulb
js
mov
cwtl
ss
mov
jbe
data16
xchg
or
cmp
dec
pop
imulb
js
mov
cwtl
ss
mov
jbe
data16
xchg
or
cmp
dec
pop
imulb
js
mov
cwtl
ss
mov
jbe
fs
xchg
or
aam
pop
jbe
data16
mov
xor
into
daa
mov
cltd
pop
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
inc
lock
das
loope
sub
xor
and
jg
popl
jo
popa
mov
and
and
rorl
rcrl
das
loope
xchg
dec
sbbl
lea
adc
add
xor
and
rcll
rcrl
aaa
loope
xchg
push
addl
insb
inc
movsl
adc
add
jb
push
jmp
pop
mov
sbb
xchg
mov
jle
xor
sbb
adc
pop
test
mov
and
mov
mov
cmp
fnstenv
jo
pop
xchg
sbb
pop
cmp
aam
push
or
pop
daa
adc
fbstp
pop
rcrl
das
or
lahf
push
aaa
mov
pusha
jo
mov
pushf
push
and
sub
mov
outsl
mov
cmp
xor
and
popa
mov
mov
fiadds
sub
sar
das
fs
jno
dec
mov
scas
mov
scas
gs
add
mov
rorl
aas
loope
xchg
dec
sbbl
xchg
inc
xchg
popa
cmpsb
adc
add
xor
and
popf
cs
rcrb
in
testb
adc
out
out
cli
add
mov
xchg
mov
pop
test
cmp
cmp
insl
mov
fsts
add
sub
or
add
pop
mov
ds
rorl
sbbl
popl
jno
popa
mov
xor
and
rorl
rcrl
das
loope
xchg
dec
sbbl
popl
jno
popa
mov
xor
and
rorl
les
loop
mov
add
daa
rcrb
inc
out
add
rolb
cmp
xor
sti
fisubrl
push
jle
and
xor
push
xchg
sbb
sub
lret
add
mov
das
and
lds
std
sbb
xor
push
xchg
and
lds
push
fisttpll
mov
icebp
repz
adc
mov
cmpsl
daa
int
sub
jnp
imul
add
jl
xchg
adc
xchg
js
test
adc
mov
inc
dec
mov
mov
subl
xor
mov
loop
sub
int3
hlt
mov
rcrl
cmp
xchg
and
andl
xchg
mov
cs
aam
lahf
sbb
iret
inc
cmp
xor
push
sarb
aaa
add
into
jp
dec
dec
data16
sarl
leave
push
lcall
jp
add
inc
es
mov
loope
decl
stos
lock
sbb
stos
cmp
cmpsb
push
gs
outsb
pop
roll
jnp
mov
xchg
test
aas
in
and
popa
jo
pop
stos
push
inc
dec
into
pop
push
push
subb
aas
test
push
dec
inc
clc
pushf
fadds
das
int3
test
aas
cmp
xchg
fildll
add
inc
sbb
jnp
outsl
or
jle
xchg
mov
xchg
out
int3
mov
cltd
dec
and
loop
mov
mov
jno
jne
stos
addb
stc
mov
inc
enter
adc
xor
or
popf
in
orl
and
xlat
jb
add
jmp
pop
cs
pusha
sub
jno
dec
dec
push
mov
push
orb
mov
dec
mov
pop
and
adc
shrb
leave
leave
cmp
cwtl
das
mov
js
mov
aad
inc
fists
pop
jmp
and
adc
adc
out
loope
or
jbe
pop
mov
inc
push
xor
in
in
jb
scas
fwait
mov
in
dec
adc
dec
jae
xor
pusha
push
xlat
mov
imul
cs
sub
dec
push
mov
out
mov
mov
xchg
xlat
test
iret
pop
sub
mov
mov
fcompl
xor
mov
dec
inc
les
rcrb
push
adcl
and
pop
xchg
in
mov
xlat
mov
xchg
pop
jae
pop
cmp
cs
push
test
jb
jmp
push
mov
dec
sub
inc
or
pop
adc
push
xchg
mov
fsubrl
inc
dec
xchg
lods
das
xchg
incb
repz
push
test
aam
cli
jne
call
xchg
mov
fwait
into
cmp
add
cmp
xchg
push
fs
cmpsb
and
push
daa
popa
outsb
das
dec
aad
in
inc
andb
sbb
add
fwait
xor
and
std
cmp
add
xlat
or
add
mov
sbb
movsb
es
mov
je
sbb
dec
daa
xchg
cmpsl
add
cmp
scas
lret
jmp
stos
mov
gs
cltd
or
aas
in
or
jns
and
dec
call
daa
xchg
push
lcall
add
aas
jle
xor
cmp
or
mov
ljmp
test
inc
xor
jg
dec
xor
push
addr16
out
out
pop
and
jae
xor
or
andl
ret
cmpsl
or
dec
pop
or
or
nop
xchg
loop
pop
add
or
roll
inc
inc
arpl
inc
pop
enter
push
mulb
shll
fidivs
popa
inc
mov
inc
movsb
dec
bound
shll
data16
mov
pop
insl
movsl
popa
xchg
adc
xchg
leave
sbb
icebp
popf
dec
adc
fbld
dec
dec
sub
adc
mov
inc
jecxz
xchg
pop
adc
daa
in
add
pusha
jb
rcll
inc
cmp
mov
test
mov
and
test
in
fst
mov
lret
dec
test
arpl
mov
sbb
jle
pop
int
loopne
xor
and
cmc
mov
sti
notl
mov
stos
fldenv
fistl
and
mov
dec
or
enter
and
cmp
aas
into
and
push
inc
mov
mov
xchg
or
pop
decb
and
leave
push
inc
xchg
dec
fiaddl
mov
in
in
cmp
or
shl
push
dec
lods
hlt
sbb
shll
push
xor
aam
xor
repz
adc
adc
jg
movsl
in
addb
xor
loopne
jae
out
jno
out
inc
mov
test
clc
xchg
lahf
and
sbb
lds
cmp
mov
mov
mov
arpl
xchg
ret
ret
mov
or
pop
lret
movsb
jae
jmp
aas
mov
pop
jecxz
pop
push
shll
and
rcrl
sbb
push
mov
stos
cmp
ljmp
icebp
adc
pop
roll
dec
int
cmp
cmp
sub
mov
sbb
les
inc
je
jnp
ja
inc
stos
sub
call
add
push
cmc
shrb
push
inc
pop
adc
mov
sahf
stc
hlt
push
cld
xor
inc
aam
pop
iret
in
jmp
mov
fcomi
and
in
clc
fwait
pop
imull
mov
pop
leave
lcall
enter
dec
test
sub
pop
xchg
imul
xchg
cmp
push
ret
or
iret
hlt
inc
mov
popa
mov
jne
push
ds
es
push
jbe
mov
fs
mov
mov
mov
mov
pop
outsb
or
std
inc
cwtl
sub
int
fsubrl
mov
rclb
add
pop
jbe
mov
leave
mov
ja
rcrl
imul
loop
sub
mov
push
push
roll
stos
shlb
xchg
scas
xchg
mov
out
push
pop
add
add
cmp
insl
ljmp
push
cld
inc
sar
bound
cmp
frstpm(287
arpl
cmp
sahf
inc
lds
imul
mov
jne
int
fwait
cmp
in
xor
cmp
push
adc
inc
fcomps
jg
mov
sbb
mov
add
insb
or
ljmp
sbb
add
sub
push
das
popf
or
push
pushf
sahf
push
adcb
popf
add
hlt
loop
fdiv
rorl
sbb
push
test
or
xor
inc
arpl
sub
mov
pop
orb
adc
imulb
stos
sar
sbbl
and
adc
lods
mov
out
rcr
sub
fs
gs
ljmp
add
hlt
jmp
sub
cmpsb
cwtl
popf
sti
jge
ret
xchg
cmp
test
mov
and
jne
ss
pop
rol
xor
pop
mov
jb
repz
cmp
jle
aam
adc
outsl
xor
int
adc
imul
push
sub
add
and
call
xchg
jbe
pop
cmp
jle
fsubs
pop
adc
jecxz
test
loope
loopne
lcall
push
or
test
ja
rcr
mov
xor
filds
mov
cmp
jmp
int3
call
pop
das
insl
and
jo
cmc
xor
iret
popa
std
in
mov
out
sahf
ret
and
leave
repnz
jmp
or
imul
ja
movsb
xor
mov
adc
and
ss
adc
lea
sub
pop
mov
mulb
and
or
mov
out
jl
jg
lds
repz
fsubrl
test
ds
out
sbb
xlat
imul
push
push
orb
mull
sub
fucom
loop
jecxz
rolb
adcb
mov
adc
and
sub
jb
dec
jecxz
int
icebp
push
shll
sbb
outsb
int
loopne
mov
xor
fcoms
sub
push
mov
pop
pminsw
push
ss
mov
mov
std
mov
and
cmp
nop
inc
mov
inc
ss
sti
pop
xlat
lret
int3
cmp
jmp
fisubrl
add
or
jge
cmp
mov
fsub
sahf
sub
fdivl
popf
sbb
stc
push
jg
jle
hlt
and
xchg
in
push
aas
dec
jle
vaddpd
pop
inc
pop
shrb
and
outsb
out
fwait
jbe
mov
jge
dec
cmp
not
scas
pop
jns
mov
sbb
lcall
loopne
mov
jle
mov
mov
mov
ja
jb
pop
ja
sbb
xor
bnd
mov
out
mov
int3
mov
pop
ret
pop
jo
mov
mov
roll
ja
pop
sub
jge
leave
imul
push
scas
inc
pusha
mul
rcrb
aas
pop
fs
js
dec
leave
adc
mov
ret
mov
or
sbb
mov
call
arpl
popf
aaa
negl
mov
adc
push
sahf
push
xchg
mov
insl
and
es
sub
fisttpl
jl
iret
mov
mov
adc
cld
je
repz
mov
xor
mov
sub
xchg
jp
cmpsl
mov
and
inc
push
pop
adc
mov
idivl
adc
mov
push
xchg
and
push
pop
adc
add
and
push
fidivrs
jae
dec
sbb
movsl
push
fwait
addr16
adc
pop
inc
dec
pop
inc
dec
out
inc
inc
pop
dec
dec
lods
sbb
ja
sbb
daa
adc
aam
pop
sub
adc
popf
jno
mov
lcall
scas
je
mov
pop
lret
dec
mov
push
lret
jge
pop
dec
push
cmp
xor
mov
aas
cmpsb
xlat
arpl
mov
add
cmp
test
sub
imul
ficomps
cli
jmp
fbstp
xor
jo,pn
mov
fldenv
mov
sub
int
xor
prefetch
dec
adc
sahf
out
subl
lods
mov
jge
jg
inc
fistpl
push
enter
sarl
int3
pop
sti
add
xchg
bts
fst
movsl
fneni(8087
mov
or
notb
push
mov
mov
outsb
lcall
jp
out
adc
jbe
imul
adc
lahf
test
xchg
call
push
sbb
jg
pusha
mov
test
ja
push
push
repz
jmp
or
ja
dec
xchg
and
jp
in
add
xor
push
jnp
xor
stos
lock
mov
dec
sub
dec
jp
sub
push
mov
pop
adc
cwtl
out
fsubr
fbld
dec
gs
sti
in
movl
or
fisttpll
gs
je
cmp
jne
add
mov
sbb
mov
pop
in
lock
sub
xlat
add
pushf
sbb
push
xchg
xchg
cltd
xor
arpl
mov
shl
repnz
add
rcrb
adc
fstl
cmp
sar
data16
daa
out
mov
cs
int3
cmpsb
xchg
mov
nop
push
in
jo
sub
cmp
mov
cmc
jno
pop
movsb
mov
mov
pop
jns
call
push
xchg
hlt
insl
loop
cmp
mov
pop
lods
mov
ficoms
inc
lods
ret
jne
out
push
jle
push
bound
pop
iret
dec
sub
cmp
mov
jbe
scas
shll
sbb
xor
out
and
lods
lret
mov
loope
leave
addb
adc
jg
es
and
jmp
pop
push
dec
iret
or
flds
sbb
push
mov
nop
out
inc
bound
rorb
add
push
ss
leave
xor
mov
mov
iret
jns
imul
int3
and
xor
not
xchg
inc
jnp
fidivrs
cmpsl
mov
incl
mov
es
out
stc
rcr
sbb
mov
sbb
fildl
lcall
jl
jmp
push
lahf
imul
xor
arpl
mov
in
iret
mov
mov
jns
negl
divb
push
pop
fneni(8087
sbb
pop
je
mov
jp
or
popl
les
js
aaa
mov
es
leave
stos
shll
repnz
xchg
cmp
jne
icebp
arpl
out
xor
xchg
int
push
sbb
and
test
add
mov
in
pop
sbb
stos
dec
mov
faddl
and
cmp
inc
in
popf
mov
std
stos
clc
mov
pop
push
mov
outsl
push
imul
push
or
mov
imul
add
inc
jno
cmp
mov
mov
push
stos
cmp
mov
inc
xorb
fwait
mov
add
sub
stos
jno
sub
mov
ret
bound
and
lahf
fmuls
mov
clc
stos
dec
mov
in
sub
cmc
add
loope
ret
xlat
and
rorl
js
or
stc
dec
xor
mov
jp
dec
dec
lahf
xchg
mov
test
push
dec
stos
sarb
imul
loope
imul
add
jl
xchg
in
cli
adc
lahf
jmp
xchg
adc
test
jge
scas
notb
xchg
enter
fadds
jae
jmp
out
sub
in
bnd
adcl
mov
lods
dec
dec
cmp
repnz
add
dec
push
hlt
insb
jnp
inc
mov
xlat
sub
out
daa
sbb
mov
cmp
jne
jg
call
xchg
aas
pop
jp
xor
repnz
xor
mov
xor
pop
je
mov
stc
add
jne
sub
mov
push
fsin
filds
xchg
insl
clc
lahf
imul
cmp
repnz
adc
mov
andl
in
sub
mov
xlat
adcb
jmp
sub
or
ja
inc
cwtl
jmp
add
adc
in
push
jp
mov
stos
push
std
dec
rcr
add
inc
and
testl
cmp
add
stos
dec
mov
sbb
xchg
in
inc
icebp
sbb
push
xchg
pop
push
lock
mov
scas
add
dec
sbb
pop
push
xchg
lods
push
dec
sbb
in
jno
mov
test
dec
into
pop
push
or
sarl
cltd
scas
cmpsl
loope
or
shll
sbb
inc
sub
popf
cmp
jns
or
and
ljmp
mov
mov
rcrb
enter
dec
stc
or
pop
cs
aas
rcrl
outsb
xchg
das
pop
cli
xchg
fmul
adc
cli
xor
jns
stos
mov
movsb
mov
hlt
pop
or
fimull
ljmp
inc
loope
inc
add
inc
aad
dec
xchg
das
jo
movsl
mov
cmpsl
mov
sub
in
and
or
push
movsl
sbb
mov
inc
loop
je
xchg
sbb
push
push
mov
js
mov
sbb
and
daa
inc
les
in
insb
enter
mov
mov
xor
xor
rcrb
repnz
mov
cmpb
jne
sub
sub
nop
mov
hlt
inc
or
sahf
call
insl
ss
das
call
dec
push
pop
adc
filds
lahf
in
sahf
mov
icebp
repz
cmp
mov
cmp
xchg
stos
scas
mov
sub
shll
mov
mov
push
cmp
fwait
and
stos
inc
int
pop
pop
jmp
leave
add
imul
adcl
pop
dec
and
jge
add
dec
push
xchg
or
push
test
adc
idivb
rcrl
push
inc
insl
sub
stos
ret
or
mov
mov
mov
mov
into
mov
cwtl
sti
xor
add
lock
jnp
ret
sbb
or
cwtl
dec
sbb
mov
test
push
sbb
and
dec
sub
sbb
js
or
pop
in
cmc
ret
sbb
inc
jnp
add
dec
stos
stos
push
andb
lahf
fsubl
jbe
and
cmp
int3
inc
or
jmp
arpl
movsl
fsubrp
sbb
daa
mul
or
and
mov
or
cmc
xchg
int3
dec
fistps
std
rorb
sbb
adc
xchg
jne
icebp
in
mov
inc
fisttpll
jecxz
out
loopne
adc
jmp
xchg
inc
xchg
les
jle
ret
loop
pop
jmp
or
mov
addr16
pop
lea
jnp
add
mov
cmp
mov
and
cs
fistpll
loop
dec
cvtdq2ps
fmuls
or
xor
dec
xchg
lock
dec
loop
notb
or
inc
pop
lock
rclb
pop
fldenv
btr
pop
fwait
dec
repnz
js
xor
cld
sbb
or
mov
xor
adc
cmp
sbb
xor
cld
in
leave
aaa
mov
mov
loopne
mov
sbb
add
lahf
jp
mov
jg
or
fldenv
mov
mov
test
addr16
mov
jl
jmp
aaa
sub
decl
sar
cmpsl
mov
cmp
mov
jl
insb
daa
push
dec
mov
cmp
stc
insl
inc
into
int3
sub
pushf
out
or
xorl
jno
and
xor
sub
cli
pop
sub
mov
fnstcw
dec
ja
js
xlat
lock
dec
and
adc
jne
or
imul
jmp
inc
mov
push
scas
test
arpl
scas
aad
aam
xor
call
aas
push
repz
inc
je
inc
sub
jp
addl
jp
das
imul
sbb
lcall
scas
scas
sub
sbb
fwait
cmp
out
faddp
jbe
notl
jle
pushf
push
out
add
adc
enter
xor
loope
mov
cmp
dec
addr16
bound
pop
rolb
dec
inc
xchg
cmp
lods
add
hlt
inc
dec
inc
loope
push
push
dec
in
lds
mov
ljmp
mov
gs
lods
movsb
push
lcall
test
sub
mov
shr
xchg
cli
jb
lods
adc
push
loope
movsl
xorb
xchg
and
pushf
jg
xchg
xor
inc
cmc
xor
repz
pop
adc
pop
ljmp
and
sbb
and
outsl
push
push
iret
pushf
inc
test
and
test
out
ss
aaa
pop
add
and
sub
daa
sub
jb
or
sarb
mov
push
and
dec
pop
insb
test
je
mov
sbbb
push
dec
push
jecxz
xchg
out
movsl
lods
sbb
subb
mov
loope
subl
or
inc
xchg
add
andl
movsl
and
sbb
sub
in
sbb
shl
ret
push
xchg
xchg
aad
insb
sub
push
and
inc
lea
divb
inc
lods
repz
cmp
pop
shll
fs
out
in
ja
cli
jmp
test
push
shl
div
addr16
ficomps
cwtl
mov
les
add
adc
fs
cs
rorb
jl
fs
fists
sahf
out
sbb
xchg
fistpll
or
ret
and
jo
aad
mov
jae
aad
adc
push
pop
xchg
test
jnp
push
jbe
jno
int3
mov
aas
cmp
aam
inc
mov
push
xchg
lahf
mov
lock
sbb
popa
stos
inc
inc
int3
jmp
mov
push
and
frstor
mov
jae
stos
jo
mov
fcomp
push
lret
push
shrl
inc
in
jmp
in
mov
xor
mull
enter
cs
cmp
cmc
inc
mov
jae
and
clc
mov
dec
fcompl
push
sub
or
inc
ljmp
sahf
xchg
fidivs
jbe
mov
jno
jecxz
cmc
mov
push
cmc
in
adc
sub
out
out
mov
mov
or
cmpsb
inc
and
adc
les
jle
shlb
mov
xchg
add
das
lock
xchg
inc
test
pushf
jno
jp
mov
and
mov
inc
jno
cmp
scas
pop
xor
adc
pop
popa
mov
test
ja
mov
addb
lret
outsb
lods
je
dec
loopne
fiadds
cs
push
es
jecxz
xchg
or
fdivs
sbb
jae
mov
aas
xchg
dec
sbbl
popl
jno
popa
mov
xor
and
rorl
rcrl
das
loope
xchg
dec
sbbl
popl
jno
popa
mov
xor
and
rorl
rcrl
das
loope
xchg
dec
sbbl
popl
jno
popa
mov
xor
and
rorb
rcrb
das
loope
xchg
dec
sbbl
popl
fldt
mov
into
adc
add
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
shlb
and
adc
add
loop
into
cmp
push
test
add
adc
and
xor
shlb
and
adc
add
push
mov
inc
mov
mov
rclb
ret
shlb
and
adc
add
push
mov
inc
mov
orb
in
add
pop
mov
jg
push
loopne
pushf
dec
leave
sbb
xor
enter
xchg
jno
xor
mov
pop
xor
nop
out
pop
fisttpl
mov
insb
xchg
jmp
adc
nop
and
jecxz
roll
sub
add
pusha
xchg
mov
push
or
filds
xor
sarb
push
cmpsl
jb
arpl
dec
aad
sahf
push
sbb
jmp
push
add
repz
add
femms
fprem
nop
mov
add
inc
test
push
mov
insb
or
repz
xor
cmp
lods
jnp
inc
cmp
call
pop
mov
cmpsl
lahf
out
jl
loop
mov
shll
and
adc
add
push
mov
inc
mov
mov
add
adc
and
xor
mov
inc
xorb
les
mov
inc
ret
xor
repz
jbe
movsl
pop
mov
test
pusha
xorb
fadds
insl
and
hlt
jo
add
inc
xchg
movsl
jb
jo
jbe
jnp
inc
nop
arpl
mov
mov
add
adc
and
xor
shlb
and
adc
add
push
mov
inc
mov
mov
add
adc
and
xor
shlb
or
ffreep
jle
xor
mov
cmp
jl
flds
int
insb
xchg
dec
mov
xor
arpl
and
ss
sub
sbb
push
imul
pop
mov
dec
pop
mov
idiv
mov
mov
jb
xor
std
xchg
sarb
mov
dec
xchg
push
pop
inc
jns
nop
enter
push
push
lret
xor
cmp
dec
sub
jge
mov
nop
ja
cwtl
outsb
cmp
insl
divb
loopne
jg
pop
divl
jge
bound
jge
inc
and
dec
mov
dec
pop
xchg
xchg
pop
cmc
pandn
aaa
push
lahf
gs
xchg
mov
movsl
dec
jb
cli
frstor
sub
mov
lret
loop
push
pop
repnz
and
cmpsl
add
lds
cmp
add
cwtl
pop
mov
clc
pop
inc
xor
mov
jne
enter
sahf
icebp
into
jg
or
jns
xchg
nop
arpl
mov
dec
jns
sub
and
scas
mov
xchg
aas
leave
shrb
dec
inc
les
sub
mov
hlt
or
pushf
cltd
mov
push
rcrb
jno
pop
out
push
and
xchg
mov
loopne
andl
test
push
push
or
dec
inc
bound
pop
xchg
and
fmull
push
sub
test
les
sub
sbb
testb
shll
les
lods
outsl
mov
mov
lds
movsl
jne
mov
add
adc
push
outsl
repz
notl
dec
fdivrl
mov
dec
lret
lock
pop
mov
lock
iret
add
jns
das
pop
mov
mov
sti
gs
pop
push
add
pop
lds
arpl
fcoms
push
jb
jg
xchg
subl
pushf
fs
das
and
fmull
jnp
sbb
push
cmp
inc
lods
ss
in
add
pop
repz
popa
pop
cmp
call
mov
lcall
jae
adc
cmpsb
testl
mov
ljmp
cmc
fiaddl
jbe
inc
std
gs
rolb
adc
inc
sbb
mov
loop
push
es
lret
into
cmpsb
adc
roll
inc
fistpl
call
xor
add
push
xchg
fdivr
lea
jns
cmpsb
cmp
lcall
out
xor
sub
or
xchg
add
int3
mov
push
pushf
mov
aad
adc
mov
mov
std
popf
scas
rcll
inc
push
das
mov
and
fcompl
jo
xor
jnp
int
pop
jg
std
inc
sub
adc
daa
inc
sahf
insl
adc
cmc
cmp
loopne
call
jb
insl
adc
and
xor
pop
cwtl
and
or
jmp
aaa
inc
xor
add
and
outsl
jo
push
stos
cli
xchg
cmp
mov
daa
pop
fadd
pop
into
cmp
mov
push
fbstp
icebp
inc
xor
roll
cmp
ljmp
cmp
cmc
fldl
or
mov
fcmovne
push
cmpl
mov
pop
dec
cmp
dec
shlb
int
pop
cmp
arpl
mov
xchg
pop
and
rcll
sbb
add
jnp
add
xchg
shlb
dec
dec
add
pop
pop
xor
push
adc
out
push
pop
hlt
and
mov
xorl
fwait
or
ror
and
add
decl
jg
bound
imul
xchg
loope
fdiv
and
pop
sbbl
mov
icebp
push
scas
adc
jb
adc
std
daa
scas
push
scas
sti
jo
and
inc
js
pop
xchg
push
cmp
daa
jle
add
mov
es
xor
pop
xchg
fistpll
imul
bound
pop
ds
mov
pop
cmc
testb
pop
icebp
loopne
and
jmp
test
jbe
mov
cmc
jne
xor
cmp
mov
jno
fldl
fmuls
cmpb
sub
lods
mov
add
mov
dec
jle
call
insl
addr16
lcall
add
rolb
mov
idivl
pop
jo
jp
insl
leave
iret
loope
sbb
lahf
jle
lods
in
movsb
ss
nop
popf
ljmp
test
push
sub
mov
push
inc
sbbb
xchg
xchg
jl
pop
jbe
xchg
sbb
repz
mov
add
outsl
dec
das
or
xchg
lods
jnp
or
xchg
sarb
sar
sti
lods
cli
data16
iret
adc
pop
adc
push
andl
mov
jb
sbb
dec
and
sbb
fisubl
push
mov
ret
push
add
sub
orb
adc
jo
adc
scas
mov
xchg
push
jge
enter
xor
mov
cld
fadds
loope
gs
sub
sub
mov
xor
push
aaa
outsl
fs
scas
push
xchg
arpl
in
and
mov
push
in
pop
or
jmp
scas
out
or
test
imul
add
and
pop
jo
add
push
inc
mov
and
mov
movsb
fsts
xor
in
push
sub
mov
pop
ljmp
sub
xor
pop
lret
cmc
add
lods
push
dec
mov
mov
xchg
sub
mov
movsb
mov
idiv
push
cmpsl
mov
xchg
sti
push
out
test
idivb
cmpsb
pop
mov
jae
mov
ljmp
or
gs
fdivr
in
aad
mov
mov
pop
test
xchg
xchg
cmp
add
xchg
cmp
popf
iret
push
cltd
mov
cmp
jmp
cld
cmp
into
stos
and
outsl
dec
push
push
push
mov
mov
sti
test
mov
gs
sbbl
xchg
cli
cmc
rorb
sti
aad
pop
jbe
jbe
and
icebp
mov
push
repnz
clc
or
mov
ds
les
pop
lret
stc
movsl
or
push
and
leave
pop
je
jl
xor
xor
mov
inc
jae
adcb
nop
and
dec
or
xor
ja
cmpsl
pop
movsl
lret
dec
sbb
mov
inc
sub
rorl
xchg
add
stc
or
gs
cmp
mov
push
jle
sarb
push
and
dec
movsl
fs
shr
push
push
dec
cmp
inc
test
int
pushf
fwait
push
pop
add
add
fwait
lea
scas
pop
sarb
cmp
jns
jl
push
mov
data16
into
pop
bound
mov
inc
cmp
add
out
pop
xor
sub
jmp
push
xchg
sbb
bound
fisttpl
pop
xchg
rcl
sub
movsl
jne
dec
lods
cmp
sti
push
out
ljmp
mov
sbb
sbb
sbb
les
cmpsl
sahf
rcll
jle
int
fcmovnu
cmp
xor
ljmp
adc
ja
push
inc
push
sub
clc
jo
movsb
call
mov
in
mov
add
jo
and
cmp
inc
cmp
adc
dec
push
dec
dec
sarb
push
mov
mov
imul
movsb
es
ret
xor
mov
mov
dec
repz
test
mov
xchg
push
lock
jo
cld
sub
and
mov
pop
clc
arpl
fwait
int3
pushw
mov
jbe
fildl
mov
adc
push
sub
popa
jno
icebp
xor
fs
push
pop
loop
arpl
ljmp
pusha
xchg
jle
mov
cmp
jecxz
js
fidivl
mov
sbb
mov
xor
jns
out
mov
dec
mov
xchg
mov
xorb
pop
clc
cmp
jp
cmp
xor
adc
mov
jecxz
out
sub
insl
aaa
cmp
mov
enter
cmp
test
sub
mov
inc
push
cmp
and
or
mov
pop
int
add
das
cltd
outsb
leave
mov
shrb
sbb
dec
pop
sbb
push
les
jmp
icebp
dec
out
sbb
and
notl
add
lods
mov
or
clc
cli
test
xchg
mov
xchg
divb
lret
cmp
pop
orb
les
out
out
and
push
cmp
mov
int3
imul
push
out
jg
leave
xchg
outsb
pop
mov
fnstsw
mov
negb
dec
mov
jbe
lods
dec
inc
cmpsl
xor
popf
dec
mov
sub
sbb
shll
mov
sarb
ljmp
pushf
cmp
cmp
lds
mov
outsl
inc
arpl
xchg
lods
int
or
cmp
fidivrs
pop
cmc
lret
mov
jle
imul
hlt
sarl
mov
cs
movb
xchg
dec
in
cltd
pusha
stc
or
cs
adc
cltd
repz
loope
jg
bound
and
lea
adc
jmp
sub
add
xor
cmp
xor
jne
cmp
mov
cltd
cmp
jo
jg
lea
mov
add
xchg
xchg
xchg
push
sbb
push
fcomip
mov
mov
popa
xchg
imul
mov
je
xor
sub
mov
sbb
mov
pop
negl
mov
pusha
out
pop
or
adc
insl
sub
mov
jnp
sub
arpl
cmp
fadds
clc
call
jno
mov
mov
leave
jno
push
out
stos
pop
xchg
mov
lret
cmpsl
adc
xor
xchg
xlat
mov
out
nop
pop
add
scas
cs
loop
sbb
inc
jl
shll
sbb
jecxz
loope
or
adc
les
into
loope
xchg
push
into
mov
ds
sub
inc
das
sahf
arpl
xor
aas
cltd
fdivrs
insb
or
jg
jb
pop
push
lods
xchg
push
or
dec
push
loop
and
adc
pop
fwait
mov
cwtl
out
sar
mov
enter
pop
scas
xchg
arpl
pop
lock
jo
push
and
pop
and
outsl
cld
imul
rorb
pop
fisubrs
arpl
push
test
lds
pop
cmp
sbb
lret
sub
jmp
in
mov
cmp
mov
gs
cmp
xchg
lret
lret
sarb
inc
stc
and
xor
cld
cld
jp
dec
xor
xor
movsl
mov
ljmp
test
mov
mov
rorb
adc
or
imul
jnp
notl
lods
daa
nop
push
cs
or
adc
movsb
mov
test
sbb
pop
in
xchg
movsl
aam
lods
nop
or
push
push
jo
cmp
movsl
dec
insl
fnstenv
sub
ljmp
cmpsb
inc
xor
push
jno
movsb
je
jl
pop
rcrl
jo
mov
push
out
xor
inc
cmp
inc
pushf
mov
clc
or
das
sub
mov
std
mov
testl
xchg
popa
mov
rorl
insb
and
lahf
sub
sub
aad
nop
clc
imul
divl
mov
mov
push
adc
xchg
out
cmp
stos
ret
or
test
xorl
scas
arpl
adc
nop
xchg
lahf
push
mov
mov
repz
mov
push
inc
push
test
add
lcall
push
sbb
mov
mov
mov
js
jns
jns
inc
jg
arpl
not
in
mov
daa
clc
ss
sti
mov
mov
jb
inc
add
mov
rorl
adc
lods
jae
jg
pop
adc
movsb
xor
popa
cld
xor
add
push
jbe
ja
pop
in
jae
gs
cmpsl
sbb
psadbw
jmp
mov
movsb
cmp
xchg
adc
cld
pusha
test
mov
inc
xor
je
mov
sbb
jge
pop
cwtl
xlat
adc
imul
ror
sbb
fisubrs
xor
je
inc
mov
adc
push
sbb
ret
pop
dec
sbb
lahf
jge
pop
jb
cmp
xor
mov
clc
int
mov
cmp
xchg
outsb
cli
aas
scas
push
cmovs
jg
push
loope
lock
aam
sub
push
push
dec
movsb
inc
movsb
or
mov
mov
sbb
adc
call
clc
out
or
bound
sub
cmpsb
lods
dec
int3
mov
sub
cltd
xchg
mov
std
sbb
je
sbb
mov
mov
mov
jecxz
lds
in
aas
pop
mov
into
xchg
popa
arpl
jbe
js
jge
xchg
mov
mov
adc
mov
int
xor
negb
outsb
add
inc
adc
ficompl
push
sub
data16
and
jne
and
fsubrs
data16
flds
imul
mov
mov
in
js
or
scas
fidivrl
xchg
sbb
jl
pop
or
xchg
jmp
into
jne
fmul
mov
aaa
pop
push
cmp
cmp
test
mov
fisubl
adc
fcoms
push
arpl
and
mov
push
inc
nop
dec
push
xchg
inc
adc
mov
test
mov
cmp
mov
lods
push
icebp
outsl
xor
outsb
pop
push
out
fwait
lcall
out
in
pop
arpl
mov
jb
mov
cmp
inc
push
push
and
dec
adc
test
rep
pop
gs
push
push
in
das
orl
out
pop
push
jp
add
pop
sbb
mov
mov
xor
dec
sub
and
mov
sub
xor
and
cmc
jne
stc
mov
je
cmp
cs
mov
cs
fcmovnb
inc
lea
cltd
pusha
sbb
and
sar
gs
scas
jne
in
std
mov
fmull
push
sub
data16
rcl
outsl
push
lret
lods
rcr
adc
jp
sbb
mov
cwtl
clc
sub
jmp
sbb
jle
rcrl
sahf
pop
pop
xchg
xchg
les
push
mov
into
or
clc
xor
inc
cld
xchg
call
lahf
pop
cmpsl
test
adc
jbe
test
add
jo
push
pop
add
ss
fwait
xor
loop
inc
out
pop
out
xchg
inc
dec
aas
sub
movsl
push
loopne
hlt
dec
mov
icebp
dec
ds
sub
jno
add
or
pop
lgs
xchg
mov
pop
adc
push
push
adc
jnp
data16
repnz
mov
mulb
pop
adc
lret
pop
push
dec
jmp
and
in
xchg
or
fidivrl
pop
stc
sub
xor
adc
fnsave
xchg
sti
fldl
jbe
mov
ficoml
rcll
mov
mov
xor
ds
xchg
mov
mov
lcall
shufps
xchg
fiaddl
cmpsb
std
cmpsl
inc
mov
sub
mov
adc
ljmp
or
test
or
lcall
scas
xor
mov
xor
movsb
mov
mov
and
popw
scas
or
adc
sbb
repz
stos
inc
push
movsl
test
cli
fistpl
inc
add
xor
xchg
cmpsl
mov
jbe
fs
push
push
lds
pop
add
mov
imul
into
test
dec
fisubrs
clc
and
add
das
outsb
and
cmpsl
jp
stc
test
ss
imul
das
mov
dec
jmp
inc
jg
push
out
sub
jp
push
xchg
fcomps
jge
fldt
rcrl
pop
jno
pop
push
xor
lcall
and
xor
lahf
sarl
stc
xchg
aam
or
jle
pop
aaa
jb
push
out
fs
push
push
xor
je
rcrb
sub
stos
push
test
dec
pop
xor
push
imul
cltd
stos
xlat
xchg
mov
push
cld
mov
call
sub
mulb
fwait
mov
xchg
dec
push
inc
pop
jecxz
js
xor
aam
int
stc
popf
lret
add
hlt
pop
cmpsb
sub
pop
mov
pop
jg
jmp
sbbb
mov
push
fisttpl
punpcklwd
popf
mov
sbb
imul
mov
in
insb
fcoms
pop
mov
sbb
mov
fucomp
and
decl
cmp
or
push
popa
movsb
ret
sub
jb
scas
leave
lret
pop
jg
repnz
mov
add
sbb
cmp
mov
rcll
cmp
push
push
pop
dec
or
mov
shlb
loope
add
loope
lea
cwtl
jb
shlb
mov
xchg
jb
das
pop
lock
ds
aaa
out
int
aad
and
cmp
lret
pop
fistpl
gs
push
stos
or
lods
mov
adc
adcb
clc
sub
dec
fdiv
loopne
lret
mov
into
xlat
outsl
jle
inc
popf
out
inc
adcl
sub
je
incl
adc
adc
loop
mov
pop
sahf
pop
cs
add
add
ret
pop
sbb
dec
sti
mov
stos
adc
mov
and
xor
jmp
mov
inc
aam
jmp
and
arpl
sbb
add
cmpsl
scas
popf
or
int
jne
inc
cmp
jg
mov
push
dec
and
mov
xchg
sub
cmp
sbb
inc
cmpsl
xlat
cmp
pop
jmp
push
xchg
jno
or
xlat
cmp
mov
jle
sbb
imul
insl
mov
sub
adc
add
add
pop
adcb
cld
adc
push
insl
adc
fmuls
lcall
sub
fisttpl
lret
pop
xchg
je
je
push
shr
insl
int
out
add
ss
add
jg
jae
jge
xchg
mov
fwait
cmp
mov
push
sub
jns
call
in
rcrl
push
incl
pop
inc
pop
add
arpl
daa
sub
cli
psrld
sub
loope
inc
pop
pusha
xor
repz
jl
movl
nop
lods
call
cmp
add
cmp
data16
inc
dec
ljmp
mov
sbb
ja
xchg
cli
pop
push
or
inc
fnstenv
faddl
or
add
xchg
mov
neg
ret
mov
lock
cmp
popf
jnp
mov
fs
sub
je
roll
cmp
imul
hlt
mov
or
imul
pop
fsubp
loopne
shll
add
xlat
ss
jne
or
sub
push
push
adc
pop
pop
xor
push
icebp
out
ret
add
dec
into
cltd
in
movsb
movsb
gs
daa
loop
add
xor
sbb
jns
and
add
lret
pop
xlat
stos
dec
setne
jg
adcb
jg
pop
push
in
inc
pop
es
popa
stc
pop
aad
mov
cmpsl
stc
pop
dec
push
bound
add
loop
push
mov
xchg
sbb
jae
xchg
jp
inc
leave
std
mov
mov
lods
orb
sbb
aas
test
inc
sbb
lcall
pop
insb
icebp
std
xor
or
dec
mov
mov
fcoml
int3
std
test
or
fists
push
jg
aam
pop
cmc
sarb
call
mov
mov
iret
jne
leave
mov
adc
jae
lea
int
scas
mov
scas
mov
push
out
lea
fstpt
ret
lods
mov
mov
inc
dec
add
repz
jo
pop
into
sub
testb
xsha256
cmpsb
nop
mov
sti
stos
pushf
jae
cmp
and
add
inc
adc
adc
jae
or
arpl
jle
pushl
sbb
rol
and
dec
lahf
mov
push
popa
or
sbb
jg
or
mov
adc
push
fstpt
sbb
cltd
xchg
mov
scas
lods
add
rorb
pop
dec
ficoml
repnz
lahf
mov
jmp
mov
fldt
push
pop
mov
gs
push
jle
shrl
andl
dec
shll
pop
mov
test
iret
adc
sbb
std
sub
mov
inc
push
xor
xlat
sub
push
xchg
lret
and
mov
call
push
cmpsb
leave
jns
cmp
loope
call
js
adc
mov
sbb
dec
popa
mov
xor
psubd
pop
fsubr
add
sbb
sahf
mov
and
nop
std
mull
adc
xchg
icebp
cld
stos
pop
repz
adc
add
push
mov
inc
mov
mov
add
adc
and
xor
shlb
and
adc
add
push
mov
inc
mov
mov
add
adc
and
xor
shlb
and
lock
jae
arpl
mov
mov
add
adc
and
xor
shlb
and
adc
add
push
mov
inc
mov
or
xchg
jo
jo
pusha
sbb
sub
cmp
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
rclb
loop
pushf
mov
loop
adc
jb
bound
adc
xor
xchg
ret
mov
mov
mov
mov
bound
xor
adc
inc
xor
and
xchg
ret
mov
mov
mov
mov
add
push
dec
and
popa
sub
fwait
xchg
ret
fstl
and
sub
nop
mov
cmpsl
cltd
xchg
adc
mov
les
pop
aam
pop
mov
hlt
push
mov
pushl
out
in
daa
pop
scas
xor
fdivl
sub
dec
nop
cmp
into
int3
pop
xchg
adc
mov
push
push
out
sub
repnz
mov
mov
xchg
xchg
add
xchg
ret
lret
leave
push
outsb
dec
inc
jb
cmp
xor
mov
cwtl
aaa
ficompl
rorl
popa
inc
out
mov
loop
inc
add
sub
aam
pop
push
inc
dec
dec
xchg
add
sub
mov
daa
and
inc
add
mov
loop
xchg
rolb
loop
adc
jb
bound
adc
inc
xor
or
xchg
mov
jecxz
adc
jbe
pop
push
fs
imul
jo
and
xchg
mov
mov
lcall
aaa
push
ja
push
daa
dec
ja
push
sub
and
mov
xchg
rolb
loop
adc
jb
bound
adc
inc
xor
xchg
ret
mov
mov
mov
mov
add
bound
adc
inc
xor
xchg
addr16
dec
add
in
push
jl
jl
adc
stos
out
add
jp
das
test
adc
cmpsb
movsb
pop
insl
repnz
cmc
jne
test
stc
mov
iret
dec
cmp
jp
sbb
ret
xchg
xchg
call
pop
cmp
lods
xlat
and
mov
or
arpl
outsl
hlt
lock
ficoml
adc
aad
int3
mov
test
insb
push
and
mov
dec
pop
cmpsl
stc
jp
mov
dec
sbb
push
mov
add
repz
lret
jmp
jg
outsb
ftst
fyl2xp1
add
sbb
sbb
jno
inc
xchg
pop
bound
dec
adc
dec
cmp
jp
or
jmp
push
dec
test
inc
loope
ret
inc
aad
fisubl
or
pusha
sbb
mov
or
dec
es
stos
ja
push
cmp
roll
push
iret
jl
int3
popf
cmp
out
negb
mov
inc
ret
iret
mov
adc
sahf
mov
sub
dec
sub
je
ror
cmc
xchg
push
mov
lods
scas
subb
xor
mov
lcall
sarl
pushf
aad
aad
sbb
sbb
push
inc
mov
pop
scas
jle
sbb
sub
aaa
mov
add
lret
lret
sub
add
sbb
pop
dec
iret
sbb
mov
loopne
mov
ret
sar
xor
cmp
fiadds
dec
pop
cmp
push
and
movsb
int3
test
jae
into
push
imul
aam
pop
movsb
add
pop
mov
fldl
nop
sarl
mov
jo
xchg
jecxz
mov
ds
mov
pop
inc
sub
inc
popa
jg
cld
ja
cmc
cmp
sbb
into
ljmp
stos
mov
int3
in
adc
repnz
insb
jno
fimull
mov
adc
insb
cli
aad
js
imul
and
push
xor
iret
ret
les
aaa
sub
les
js
shl
imull
push
push
sub
scas
aas
pop
adc
jns
aas
lahf
mov
xor
dec
xchg
cld
sbb
lds
hlt
das
int
lds
cmpsb
mov
inc
add
and
ljmp
je
nop
out
subl
jg
jl
inc
cmp
xchg
test
cli
arpl
jle
enter
mov
test
cmp
stos
xchg
sbb
sub
leave
shl
sbb
gs
sbb
mov
mov
dec
lahf
mov
iret
mov
fisttps
dec
cli
cld
cmpsb
dec
mov
pushf
pushf
fdivl
ja
mov
in
repnz
jno
pop
xchg
mov
jnp
mov
or
sub
adc
js
fstp
cmp
addb
testb
pop
add
mov
jb
enter
add
and
add
adc
mov
and
add
fs
cmp
push
fnstsw
sbb
add
or
jp
jb
cmpsb
shr
lods
push
push
aaa
jmp
daa
mov
inc
sub
js
pop
pop
mov
daa
lret
dec
scas
int3
daa
cmp
fisttps
xchg
inc
pop
mov
cs
insl
pop
repz
cmp
push
out
inc
daa
cmp
stos
lret
xchg
adc
xor
adc
pop
popf
inc
xor
movswl
jbe
mov
shll
inc
sub
mov
jae
dec
cmp
lds
scas
sbb
rcr
fldenv
popf
insl
sarb
sti
sub
mov
jl
xor
fsts
xor
jne
lods
leave
cmp
push
jae
cmp
rorb
add
jp
sbb
mov
mov
pop
inc
movsl
mov
push
sub
mov
jecxz
adc
inc
leave
inc
and
inc
js
mov
adc
cmp
pusha
xchg
fs
add
push
testl
scas
daa
movsb
cld
inc
enter
pushf
sub
cwtl
lods
ja
js
movq
mov
shr
repz
ds
xor
inc
add
in
and
add
xchg
push
or
jb
or
inc
push
pop
jmp
les
daa
loopne
nop
adc
push
mov
jo
xchg
cmc
les
add
ds
cmp
mov
outsl
test
outsl
dec
push
in
push
into
adc
xchg
movsl
and
xchg
xor
push
jns
lcall
mov
or
lds
mov
lret
jne
dec
iret
mov
dec
mov
out
cwtl
fmull
xchg
lock
lock
lcall
mov
sarl
iret
cmc
loopne
mov
or
mov
ret
das
imul
push
in
mov
rcll
and
testb
stos
cmc
into
or
sub
ja
jbe
and
cmp
bound
inc
imul
ret
push
mov
pop
xor
ficoms
push
mov
jmp
xor
lret
adc
fdiv
pushf
jecxz
pop
movsb
add
ret
inc
dec
iret
jns
mov
or
or
add
inc
pop
add
out
mov
leave
adc
mov
test
lock
jmp
xchg
ret
push
fldcw
rcrl
fstpt
cli
scas
std
loop
decl
es
cli
mov
sub
test
and
out
push
push
cmc
popf
jns
sub
shrb
aaa
cmpsb
push
sahf
test
shlb
aad
hlt
adc
adc
das
dec
daa
mov
lret
aaa
jne
bound
jmp
pop
es
nop
pop
popa
stos
data16
test
dec
push
adcb
jb
push
popa
mov
xchg
jge
inc
lea
or
cmp
sub
push
sub
or
cltd
mov
dec
jp
mov
aas
dec
mov
mov
ret
cmpsb
dec
xchg
adc
adc
sbb
pushf
cmpsb
jbe
ret
outsb
or
cmp
loop
jp
mov
push
rcrl
insl
in
stc
jg
pop
rorw
hlt
mov
push
inc
mov
int3
sub
sarb
testb
push
or
jge
in
rorb
lret
jmp
into
lds
inc
inc
add
jb
outsl
mov
add
das
jp
inc
jns
inc
clc
sbb
mov
dec
mov
xchg
adc
incb
dec
lret
push
jae
push
cmpsl
inc
stos
enter
pusha
xchg
mov
xor
xlat
push
cmpsl
rcrb
push
int
rolb
pusha
xor
cmp
scas
fldt
popa
xor
cmp
cwtl
dec
lret
bound
testl
add
inc
js
inc
mov
mov
xchg
xchg
mov
mov
cltd
add
movsb
ljmp
xchg
adc
in
xchg
pop
dec
cld
repz
mov
jbe
pop
jmp
or
fisubl
sub
cli
in
test
jl
dec
mov
fldenv
push
mov
inc
fcomip
popf
mov
insb
dec
aam
je
outsl
lret
jmp
xchg
ret
movsb
cmpsl
loopne
es
sbb
jnp
addb
lods
loop
dec
lods
jle
hlt
std
subb
mov
sarl
scas
test
pop
jge
pop
out
ljmp
lods
xchg
rolb
insb
sub
cmp
adc
cmpsl
push
scas
cmpsb
inc
aaa
cmpsl
mov
add
out
out
push
mov
insl
shll
loope
dec
pop
xchg
cs
push
push
push
xor
rcr
xchg
sahf
cltd
mov
fxch
cmpsl
sbb
dec
cmp
add
pop
ds
repz
daa
orl
jns
push
lahf
test
add
jae
aas
sbb
nop
push
imul
or
xlat
sbb
pop
or
jg
imul
dec
cmp
sub
xchg
loop
mov
repz
jo
insl
aaa
das
adc
ds
and
outsb
ret
lock
sbb
lret
int3
push
subb
adc
xchg
or
mov
jl
test
das
xchg
push
sub
fdivp
xor
test
jle
iret
popa
xchg
dec
and
scas
sbb
lahf
and
in
cli
xchg
pop
inc
out
or
cmc
sti
fwait
into
cmp
ss
mov
pushf
dec
shl
nop
lock
jne
or
push
lahf
xchg
add
data16
sbb
out
dec
inc
xor
fwait
mov
fadds
jbe
ljmp
adc
xor
push
dec
ficompl
xchg
lds
xchg
push
test
aas
and
fnstcw
fisubrl
dec
add
add
inc
add
pop
fcmovne
lahf
cmp
mulb
inc
repnz
into
xchg
push
jp
dec
mov
dec
filds
xchg
xchg
icebp
cld
pop
out
adc
popf
sahf
mov
lahf
cld
sbb
sbb
pop
inc
xor
iret
push
gs
push
repz
aas
bound
inc
sbb
xchg
cwtl
ss
or
leave
sbb
mov
lcall
sbb
pop
iret
out
sbbl
xchg
xor
scas
pop
fistl
cli
mov
cmp
popf
pop
rcpps
les
jl,pn
dec
into
adc
stos
dec
push
sbb
and
push
pop
bound
pop
mov
nop
jmp
mov
sbbb
adc
adc
xor
cmp
mov
sub
lods
repz
imul
push
test
lret
xor
aaa
adc
adc
insb
inc
sti
fiaddl
mov
fistpl
sbb
aas
push
cs
adc
pop
leave
sbb
and
stos
clc
sbb
cmc
adc
out
xor
das
add
dec
or
push
dec
fcompl
fwait
sbb
xchg
aas
adc
outsl
scas
mov
fisttps
les
aam
loop
fists
mov
add
leave
lods
mov
xchg
lcall
cwtl
in
sahf
sbb
jns
add
mov
add
mov
stc
mov
xor
insb
and
ret
inc
insb
lahf
cli
push
add
lock
ret
stos
push
mov
mov
insb
pop
and
pop
shlb
adc
adc
and
push
cmp
fsqrt
ret
xor
pop
pop
decb
test
outsb
sahf
xchg
cmp
and
into
mov
cmpsb
mov
data16
setne
push
loope
out
mov
jmp
cmp
xchg
xorl
or
mov
mov
dec
dec
jmp
jae
adc
int3
repz
and
pop
das
cmp
add
push
sbb
nop
xor
pop
mov
scas
xor
adc
out
pop
fcoms
pop
mov
push
out
les
adc
inc
xor
and
push
pop
sub
adc
ds
xchg
lods
lcall
jns
push
outsb
sahf
aam
pop
int
in
enter
mov
sbb
bound
scas
adc
or
cmp
cmp
adc
int
jmp
pop
sub
sub
push
pop
into
or
add
popf
mov
cmp
mov
sbb
push
lahf
movsl
sbb
fiadds
dec
aam
push
adc
jb
cmp
fdivrl
sub
mov
cmpl
pop
mov
jg
sub
add
fimuls
inc
daa
ss
cmp
sub
inc
and
decb
bound
sub
popa
fsubl
cwtl
sub
sahf
sbb
dec
mov
push
sub
push
add
movsl
pop
mov
jb
pusha
icebp
push
sbb
icebp
jb
xchg
push
xor
ficompl
dec
orl
xor
adc
pop
xchg
out
icebp
or
inc
sbb
js
ror
sub
into
mov
xchg
movsl
in
out
mov
and
in
test
loope
jp
dec
xor
adc
mov
pop
sbb
mov
sbb
gs
jne
mov
cmc
jg
jno
aas
sbb
jmp
sbb
scas
inc
stos
orb
iret
sub
sub
in
mov
mov
inc
push
sbb
cmc
push
adc
rorl
sahf
loope
aaa
push
cmp
test
roll
lock
mov
sbb
pop
fiaddl
test
dec
imul
sbb
mov
std
loop
xchg
and
loope
ret
sbb
in
sbb
xchg
mov
dec
nop
aad
imul
xchg
xor
mov
inc
and
or
imul
push
dec
push
test
inc
sub
mov
xor
lds
sub
int
fcomi
int
jne
mov
shll
dec
jno
dec
and
push
or
xlat
fs
mov
mov
test
xchg
xchg
js
fnsave
int
mov
pop
push
adc
cmp
lret
fisubl
and
call
and
repz
add
sbbb
adc
push
xor
pop
xor
les
jo
xorb
js
add
out
mov
lret
dec
mov
jmp
cwtl
mov
mov
mov
inc
in
mov
out
mov
mov
and
lods
das
lea
out
clc
lods
neg
idiv
push
fmull
aaa
push
lahf
ljmp
ja
or
add
andl
inc
xor
jns
lods
xlat
sbb
call
jne
out
jno
push
rcr
test
cmp
mov
std
add
mov
shlb
add
mov
in
push
push
and
push
test
add
or
cs
pop
ds
nop
outsb
int
mov
cmp
dec
xor
dec
xchg
scas
xchg
pushf
inc
into
mov
icebp
inc
sbb
inc
shl
xor
outsl
test
cmp
push
stc
add
inc
popa
push
dec
test
adc
mov
adcb
mov
fmul
dec
loopne
mov
push
movsb
xor
lret
push
inc
xchg
push
enter
push
inc
xor
inc
insl
xor
push
es
jae
addr16
mov
call
sbb
test
fsubrl
mov
mov
mov
mov
fmull
inc
mov
pop
xchg
or
std
fsubs
lcall
enter
mov
mulb
or
or
sub
insb
rol
lret
sbb
shlb
lret
shl
out
je
ret
lcall
je
xor
aas
pushl
mov
pop
je
cmp
js
push
ss
mov
out
xorb
and
stos
outsb
int
xchg
dec
dec
lds
out
add
add
add
out
sub
or
call
fnclex
pop
mov
outsl
test
mov
lods
sub
or
lock
push
dec
push
repnz
push
scas
xchg
sahf
mov
push
mov
dec
push
arpl
in
cmp
enter
jo
dec
sahf
push
insl
xlat
sahf
pusha
in
mov
xor
cltd
lods
aad
push
outsl
mov
or
cli
out
jnp
jp
negb
add
dec
je
inc
cmpl
mov
lret
push
scas
lret
push
add
xor
or
cli
popa
and
xchg
jg
adc
popf
in
xlat
lcall
add
inc
xchg
or
mov
mov
lods
and
repz
sub
jl
jne
inc
cmp
std
pushf
xchg
aas
dec
dec
xchg
push
aas
xchg
test
sarb
inc
fs
subb
jmp
push
roll
cwtl
mov
jae
mov
stos
dec
jmp
xor
fimuls
dec
cmc
mov
pop
es
or
inc
imul
dec
xchg
sbbl
push
inc
push
push
push
jo
xor
insl
mov
mov
push
jmp
test
lods
cmp
imul
jnp
jne
dec
js,pn
movsl
mov
push
rcrl
pop
int
pop
lock
sbb
cmp
iret
lock
int
push
loopne
cmp
bound
push
je
in
inc
push
jne
jmp
stos
insb
dec
or
and
test
pusha
xchg
ret
lea
cmp
mov
daa
mov
test
pop
movsl
shll
fistpl
mov
mov
notl
xchg
dec
in
lods
movsb
add
fildll
daa
je
mov
adc
mov
fsubr
data16
dec
push
fstpl
ds
cs
sti
out
in
in
jne
loop
sahf
loope
jae
sbb
adc
fildl
jl
fidivl
sti
jns
int3
sbb
mov
cmp
sub
notb
or
flds
cmpsl
xchg
cmp
mov
repnz
mov
aad
mov
xor
neg
mov
iret
fstps
mov
int3
movsb
pop
xchg
pop
push
into
cmp
stc
mov
pop
lods
jmp
adcb
push
or
sbb
clc
lcall
shl
cld
out
shrb
inc
mov
cld
scas
lea
mov
in
pop
xchg
arpl
fs
fisubrl
jnp
xchg
outsb
jmp
jmp
add
or
dec
loope
icebp
insb
dec
outsl
hlt
dec
xchg
sub
lret
ja
mov
fdivrs
out
ss
iret
lahf
xor
dec
iret
in
ss
dec
jmp
leave
xor
stc
lods
jbe
xor
cmp
andb
mov
lret
fldcw
lea
stos
xchg
pushf
ret
mov
movsl
or
andl
pop
push
cmpsl
gs
loope
mov
dec
sbb
lock
jmp
or
and
fstl
fwait
out
je
into
lea
inc
adc
push
mov
mov
dec
jno,pt
testl
pop
lds
lret
sbb
and
inc
aaa
in
imul
mov
stc
leave
sub
xor
mov
stc
add
ss
arpl
or
jns
in
dec
mov
xchg
cmp
fs
jb
fisubl
cli
dec
aam
xchg
outsb
mov
mov
mov
icebp
push
jno
jmp
test
nop
cs
cwtl
out
sub
shl
int3
mov
mov
ljmp
sub
and
sub
jnp
js
push
mov
push
aad
stos
push
cmc
ficomps
mov
les
xor
add
rol
mov
testb
and
sbb
dec
jl
ss
add
lcall
les
mov
sbb
xlat
test
mov
rolb
mov
mov
jne
leave
aam
cmp
daa
popa
outsb
cmp
or
cmpsl
pop
icebp
mov
test
mov
stos
adc
insl
mov
loopne
add
fsts
aam
test
mov
pop
clc
imul
orl
sarl
js
cltd
pop
cmpb
mov
pop
ss
pop
ljmp
mov
push
sub
int3
mov
inc
sub
int3
incb
mov
xor
xchg
mov
fistpl
sub
jbe
push
pop
shll
pop
aaa
add
mov
xchg
add
stc
xchg
je
dec
push
mov
push
xor
dec
ljmp
test
jmp
dec
sarb
gs
push
flds
sub
cld
lock
mov
idivl
jmp
add
fldt
mov
jmp
gs
mov
jge
push
stos
mov
sub
aaa
adc
ljmp
iret
push
add
addr16
add
insl
inc
dec
xor
jo
in
or
mov
mov
movsl
cltd
stos
into
push
in
and
xchg
lock
mov
mov
push
cmp
mov
in
sbb
add
les
inc
movsb
pop
int3
xchg
push
out
sbb
stos
push
sub
jae
pop
cltd
xor
jo
out
push
xchg
or
and
or
push
in
push
mov
or
movsl
jnp
insl
sub
in
lcall
repnz
ja
gs
xor
shl
inc
fnstenv
cmp
ret
outsb
sub
negl
mov
fucom
sbb
pop
daa
sub
or
dec
xchg
movsl
pop
sbb
xor
cmp
cmpsb
push
repnz
ss
lds
add
movsb
in
ftst
xlat
outsl
in
test
daa
mov
xchg
push
add
xchg
popf
xor
iret
jecxz
jg
cmp
jecxz
aam
nop
mov
push
outsl
dec
sbb
push
outsl
xchg
dec
sti
gs
notl
xor
pop
mov
add
fisttpl
mov
add
mov
xor
cmp
aas
jo
pop
test
dec
inc
addr16
sub
pop
fdivrl
mov
dec
pop
je
mov
jo
xorl
mov
shll
cltd
test
insl
xor
data16
jge
dec
shr
test
push
addb
nop
out
sub
loop
xchg
rolb
loop
adc
jb
bound
adc
inc
xor
xchg
ret
mov
mov
mov
mov
add
bound
adc
inc
xor
xchg
ret
xor
mov
mov
mov
add
bound
adc
inc
xor
xchg
ret
mov
mov
mov
mov
test
xor
fimull
popf
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
cs
sbb
xor
jae
loope
pop
lcall
std
cmp
loope
icebp
dec
add
xor
jge
dec
popa
pop
pop
lods
cmpl
ror
loope
icebp
xchg
cmpsl
iret
xlat
lahf
mov
sbb
inc
leave
sbbl
mov
xchg
adcl
imul
mov
or
pop
test
std
push
fnstcw
lea
into
inc
push
std
fcmovb
sahf
rorb
or
loope
aam
mov
push
mov
js
or
movsb
lods
cmp
inc
xchg
outsb
sub
cmpb
std
xor
ss
add
call
push
jge
mov
pop
cld
lods
add
jno
pop
arpl
int3
push
fisttpll
sub
jb
push
mov
ds
lea
inc
test
std
les
mov
loope
push
xchg
mov
sahf
sarb
scas
xchg
int
ficomps
or
inc
add
jecxz
andl
lea
stc
ffree
inc
add
jns
gs
add
adc
adc
lods
ret
call
xchg
cwtl
pusha
inc
pop
push
jg
jl
add
sbb
mov
loopne
in
repz
xchg
mov
addb
icebp
insb
dec
dec
pop
ds
pop
jno
cmpl
ror
loope
icebp
sub
and
push
dec
popa
pop
jno
cmpl
ror
loope
icebp
sub
pop
fstp
mov
sub
out
loope
cmpsw
cli
inc
int3
sbb
pop
repz
pop
cwtl
adc
xor
clc
jecxz
lods
lods
push
jnp
push
xchg
mov
rolb
jne
testb
fs
push
add
add
lahf
or
jp
or
sbb
iret
add
pop
mov
mov
sub
pushf
xchg
jbe
mov
inc
jge
arpl
movsb
jbe
cmp
outsl
lock
xchg
inc
loope
nop
cld
jbe
jmp
push
std
jo
into
sahf
cmpsb
xchg
adc
dec
mov
in
mov
inc
adc
or
adc
das
neg
mov
cli
icebp
out
pop
mov
dec
iret
cmp
pop
stc
pop
es
or
mov
sbb
out
das
fwait
jecxz
and
pop
scas
jb
arpl
fidivrl
sbb
repz
jns
ljmp
and
jnp
psrld
push
imul
push
insb
pop
jo
inc
loope
adc
mov
adc
leave
jl
movsb
mov
sub
inc
pop
pushf
dec
pop
stos
in
ja
daa
pop
fsub
lret
xor
cmp
mov
lea
nop
out
pop
pushf
dec
mov
fidivl
data16
pop
pandn
clc
sbb
je
push
fucomp
rcrb
into
rolb
xchg
ret
xchg
mov
aad
xchg
and
ljmp
xor
lock
fistpll
rcr
add
pop
cmp
mov
inc
dec
jae
pushf
mov
pushf
mov
shr
ja
and
mov
dec
mov
dec
sti
cld
sub
aad
cmpsl
push
jbe
adcl
mov
test
call
pop
push
ret
adc
hlt
das
sahf
outsl
shll
lods
loopne
das
inc
clc
lods
fidivrs
int
fwait
scas
xlat
ret
xor
std
mov
insl
shlb
rcrl
push
mov
mov
inc
scas
ret
pushf
aaa
mov
cli
popf
je
mov
mov
inc
addb
mov
es
icebp
scas
xchg
inc
cmp
repz
insb
in
xor
int3
mov
or
mov
popf
or
leave
adc
fs
add
aam
xchg
loopne
lds
nop
arpl
je
in
dec
insl
mov
test
xchg
ret
mov
xchg
lcall
mov
mov
dec
sahf
xchg
mov
pop
out
stos
and
insb
sbb
mov
sbb
or
icebp
in
sarb
lcall
and
movsb
push
push
add
stc
dec
aaa
or
xchg
aad
cmp
out
add
jns
cs
jae
dec
movsb
sarb
mov
xchg
mov
lahf
pushf
out
cmpsb
jge
fsubrs
xchg
add
sar
inc
loop
or
push
js
jp
fsubrp
inc
sub
mov
xchg
pusha
push
pop
push
pushf
lahf
push
fdivrl
in
jns
hlt
mov
fwait
dec
call
in
in
aam
dec
stos
mov
sub
fistpll
sub
mov
sbb
testl
in
lahf
cmpb
and
loopne
add
pusha
inc
in
jecxz
mov
fnstsw
cmpsb
jbe
lods
mov
cmp
dec
pusha
hlt
sub
mov
movsl
xor
insb
jge
in
lds
jp
aaa
jecxz
aad
int
in
loope
sti
xrelease
cmpsb
add
int3
push
jg
insl
out
sub
stos
add
stos
mov
rolb
jmp
jecxz
in
or
flds
sar
mov
test
aaa
arpl
xchg
cmp
xchg
xor
mov
or
xchg
jne
out
xchg
dec
cmp
and
in
pop
xlat
clc
rcl
scas
mov
out
jbe
adc
xchg
push
push
enter
pop
add
fnstsw
jmp
or
jae
cli
cmp
ror
jb
stc
sbb
orb
stos
icebp
in
cmc
or
rcrb
fwait
xlat
mov
push
mov
mov
sub
scas
out
fldt
xor
pop
cmp
pavgb
sbb
mov
ror
xchg
mov
adc
mov
xchg
into
addr16
fdivrs
cmp
pop
adcl
pop
sub
xchg
sbb
addb
in
cmp
rolb
outsb
mov
enter
inc
xchg
inc
xchg
jecxz
ret
aad
mov
loope
push
jmp
icebp
repnz
lea
push
or
sahf
dec
movaps
inc
xchg
adc
mov
cmp
push
lret
sub
scas
xchg
cmpsl
pop
inc
cmpsb
xchg
ljmp
pusha
inc
dec
mov
and
cmp
cmp
ja
xor
pop
fs
scas
cmp
mov
out
or
aad
adc
cld
idivl
imul
ffree
dec
fwait
mov
enter
push
imul
hlt
jp
inc
scas
insl
push
jbe
sub
mov
xor
test
loopne,pn
mov
inc
jle
imul
test
jecxz
out
popw
xlat
movsb
nop
out
test
add
popf
sub
xchg
out
insb
dec
lcall
ja
loopne
xchg
xorb
shll
daa
push
sub
call
inc
cmp
pop
fs
std
stos
jnp
int3
sbb
lock
sub
xchg
xchg
add
jp
sub
popf
lret
int
lock
inc
pop
xchg
jno
int3
mov
mov
push
or
mov
pop
pop
call
nop
test
push
movsl
je
jmp
lea
lret
jmp
or
movsb
push
mov
or
cwtl
sahf
pushf
push
pop
ret
push
sbb
test
pop
clc
pop
and
out
fsubrp
mov
inc
sahf
jmp
push
jecxz
test
jecxz
push
sar
cwtl
decb
shrb
je
mov
mov
inc
loope
xchg
pop
outsb
repz
inc
adc
aaa
pop
fidivrs
das
movsl
sbb
push
push
jge
cli
mov
push
adc
jmp
and
stos
sar
or
add
je
xchg
movsl
repnz
sahf
jmp
aad
mov
xor
add
mov
aaa
mov
cmp
ss
jg
fdiv
loope
faddl
les
mov
cwtl
pop
mov
repnz
sbb
movsl
lret
outsl
mov
in
stos
std
mov
cmp
lcall
mov
out
sub
jns
jg
sbb
iret
dec
lahf
jbe
int3
mov
bound
mov
lods
mull
call
in
rol
shll
hlt
mov
and
push
sbb
dec
dec
leave
cmp
pop
dec
in
std
add
mov
mov
stos
add
mov
test
test
sub
cmpsl
inc
sbb
mov
test
pop
fldcw
out
call
pop
or
mov
xor
or
mov
sub
test
in
rcrl
push
mov
mov
ja
ret
dec
mov
dec
and
nop
xchg
xor
and
pop
push
movsl
pop
xchg
dec
rol
sbb
hlt
lods
jecxz
lea
or
mov
sbb
mov
fwait
test
scas
cs
xchg
and
testb
std
popf
jmp
mov
divl
pop
into
insl
movsl
push
sbb
adc
sub
or
aad
daa
popf
xlat
sub
pop
ljmp
imull
shl
jg
mov
jecxz
iret
jae
xor
lods
mov
and
cmp
jl
loopne
mov
jbe
xchg
mov
lahf
push
icebp
xchg
lds
lahf
jo
and
fimuls
mov
pusha
ss
cmc
jns
sbb
call
pushl
popa
adc
loope
mov
push
cmpsb
sbb
lret
cmpsb
dec
adc
push
cmp
jp
jge
jl
je
arpl
dec
inc
add
pop
int
add
sbb
adcl
xchg
subl
out
outsb
sar
cmp
ljmp
xchg
push
mov
testl
sub
push
cltd
cmc
sub
into
iret
adc
enter
cmp
cs
stos
dec
shrb
jbe
jl
aad
xchg
out
aas
lods
pusha
movsl
or
sbb
xchg
stc
sbb
xor
adc
jb
jmp
pop
es
and
mov
jg
in
add
push
aad
gs
into
fsubrs
jae
mov
dec
dec
cmc
xor
aad
fs
mov
pop
mov
cmpsl
xor
xchg
add
cmp
mov
cmp
sti
mov
out
cmpsb
subb
mov
or
lea
test
lds
mov
add
jno
add
rcrb
jne
xor
xchg
sub
mov
push
push
rorb
pusha
pop
pop
xor
inc
arpl
aad
xchg
sbb
mov
xchg
bnd
push
addb
pop
add
add
rolb
pop
dec
adc
lret
cli
xchg
outsl
mov
ds
pop
jmp
scas
lods
sbb
lret
daa
dec
sarl
pop
decb
sbb
jl
insl
lock
inc
mov
sub
out
push
div
xor
inc
cmp
xchg
ret
xchg
xchg
scas
add
movsl
push
jecxz
or
popf
cmp
mov
adc
insl
add
pop
sub
pusha
add
out
rcll
loop
push
adc
int3
aam
pushf
or
xchg
lret
xor
movsb
in
xchg
sub
ss
filds
xor
out
or
outsb
xor
inc
and
popa
mov
sub
sbb
outsb
push
inc
jle
cmp
mov
xor
repnz
mov
mov
add
and
pop
lahf
lods
out
and
cmovb
out
faddp
rorl
and
push
stos
adc
pop
nop
int
or
jno
imul
repnz
inc
stc
mov
cmp
mov
in
loopne
jl
out
ret
cld
popf
loopne
cmp
iret
fnsave
add
fisubl
xchg
lods
cmpb
mov
sub
mov
add
outsl
inc
lods
je
stc
dec
jle
lahf
loop
pop
and
or
cmp
sarl
xchg
out
lock
mov
stos
push
adc
jb
cmp
dec
sub
push
cmp
out
cmc
movsl
sbb
bound
adc
push
pop
aas
inc
and
lock
icebp
out
push
repnz
out
ljmp
in
arpl
pop
fcompl
stc
movsb
pop
pop
std
out
mov
pop
sbb
push
mov
into
xchg
mov
mov
out
test
mov
push
dec
cld
jb
scas
sub
dec
in
outsl
aad
mov
out
mov
add
movsb
aas
cmpsb
loop
sarb
or
leave
cmpsb
into
push
cmp
stos
push
stos
sub
add
jno,pt
shlb
ficoms
dec
bound
mov
subb
adc
xor
or
mov
sbb
cmp
mov
and
testl
int3
pusha
sbb
into
bound
cmp
mov
fidivrl
int
jae
mov
mov
cmp
into
or
out
mov
cmp
repz
outsb
and
and
lods
xlat
mov
insb
mov
lcall
mov
xchg
pop
mov
je
inc
push
inc
xor
loop
pusha
jmp
adc
gs
push
clc
inc
pop
jne
test
lea
push
sti
dec
movd
enter
fisubrl
sbb
pop
sbb
push
and
lods
adc
mov
je
mov
lock
mov
movsl
lods
into
pop
insl
int3
sub
fildll
insb
cwtl
push
xchg
ficompl
sbb
sub
ret
xchg
imull
adc
and
adc
ficoml
dec
jb
imul
arpl
xchg
mov
aam
addr16
add
push
inc
js
dec
push
mov
cmp
shlb
cmp
insl
dec
adc
outsl
dec
mov
pop
subb
loope
xlat
mov
xchg
jno
pop
push
test
mov
xor
ret
mov
mov
pop
mov
int
aad
jmp
hlt
and
daa
hlt
inc
push
movsb
add
mov
scas
mov
lds
and
pop
sbb
cmpsl
mov
xor
mov
mov
aas
shll
les
icebp
imul
daa
hlt
scas
aam
mov
std
inc
xchg
out
add
mov
int
popa
mov
dec
repnz
idivb
ret
cmpsl
mov
repz
je
jns
scas
fildll
aaa
rorb
mov
xchg
pop
test
rclb
xor
mov
cmp
dec
repz
push
mov
or
cltd
in
movups
rolb
stos
pop
and
pop
je
sarl
scas
lods
add
pop
xchg
cmp
jg
xchg
fcompl
lahf
cmpsb
push
sbb
dec
or
imul
dec
sarb
add
hlt
imul
dec
flds
loope
pop
add
add
sbb
adc
ja
jae
inc
data16
mov
inc
repnz
into
dec
int3
sub
xor
add
stos
je
adc
in
aas
jb
jo
xor
mov
jmp
fucomp
cmp
xchg
pop
sub
mov
neg
inc
sbb
scas
decb
cmpsb
lods
rorb
pop
mov
test
fldenv
iret
fcmove
adc
inc
sub
sahf
push
sbb
dec
out
mov
cli
scas
iret
fstl
loop
mov
cmp
arpl
daa
test
das
lods
xor
add
and
jecxz
mov
fwait
dec
pop
xchg
adc
shlb
insl
push
mov
icebp
out
int
in
ret
or
mov
push
mov
mov
fnsave
mov
cmp
xor
or
aas
lret
adcb
cwtl
sub
jge
cmpsl
inc
adc
dec
lock
mov
dec
int
nop
adc
jae
jle
sbb
out
addr16
loope
addl
test
jbe
and
or
dec
ret
push
out
jae
xchg
push
xchg
sbb
mov
jo
cmp
sbb
push
inc
movsl
and
fcompl
movsl
pop
jae
xchg
sti
and
insb
adc
sub
cmp
lock
sbb
hlt
popa
adc
and
fistpll
hlt
out
push
arpl
adc
imul
das
scas
sbbb
outsl
push
sub
or
stc
adc
outsb
xor
daa
sub
push
aaa
mov
xor
test
pop
movsb
xor
cmpsb
movl
inc
enter
repnz
pop
pop
int
mov
pop
ja
add
pop
decb
shlb
mov
add
fisubl
xchg
les
in
js
pop
sbb
outsl
rolb
shlb
frstor
adc
ljmp
int3
xorb
mov
fistpll
push
aaa
jnp
lahf
inc
push
ds
inc
inc
jl
idivl
adc
pushf
jle
popa
and
xlat
and
js
data16
andb
sbb
test
mov
inc
pushf
jl
xchg
xor
adc
adc
movsl
and
aad
inc
adc
lret
inc
call
and
push
add
cmp
jecxz
mov
adc
adc
mov
cmp
ret
xchg
and
push
stos
push
push
push
fists
loopne
ficoml
pop
jo
inc
push
test
fs
pusha
je
pusha
fsubrs
adc
push
ret
push
jge
ficomps
xchg
stos
cs
stos
mov
orl
lea
xchg
mov
es
push
shrb
add
mov
sub
cwtl
popa
repz
aam
jl
add
dec
jo
xchg
ret
popa
mov
sbb
jnp
std
mov
ljmp
dec
test
pop
movsl
xchg
jp
icebp
sub
push
les
imul
mov
pop
xchg
xchg
jb
repnz
out
push
ja
add
pusha
arpl
sub
dec
dec
ljmp
pcmpgtd
sti
or
push
ds
add
das
jo
cli
add
pop
mov
aam
sbb
and
push
js
sub
push
push
mov
push
loop
lods
sub
inc
rcrl
xlat
cs
lret
pop
pop
js
cmp
sub
mov
add
pop
pop
lods
movsl
test
dec
aaa
test
mov
inc
pop
das
xor
and
pusha
jae
nop
dec
lock
out
jmp
push
add
jmp
movsb
jge
scas
mov
xor
clc
xor
stc
mov
add
sar
pop
adc
adc
lret
inc
xor
pop
rcll
dec
add
subl
ljmp
and
sbb
xor
sbb
sarl
mov
aas
mov
gs
and
mov
nop
xchg
cltd
inc
test
mov
jnp
lret
sub
pop
shlb
mov
dec
and
jl
adc
inc
data16
pusha
iret
inc
call
fs
cmpsb
adc
js
shl
ret
dec
jne
mov
jb
pop
mov
push
push
and
add
jbe
std
adc
cltd
fbld
shrl
mov
sbb
sbb
arpl
adc
loope
bound
xchg
outsb
xchg
or
icebp
aaa
push
cld
out
sbb
and
pop
pusha
xchg
imulb
imul
loopne
idivl
in
jle
add
leave
fs
xchg
jge
xor
es
ret
push
lock
rorb
add
cmp
mov
jns
push
sub
jnp
cmc
dec
cld
dec
mov
push
fucomp
sbb
out
dec
jp
fstpt
inc
cmp
jle
outsl
cli
outsb
mov
sbb
test
iret
ds
cmc
or
mov
lea
mov
dec
lret
mov
rcll
lds
mov
movsl
insb
sbb
cmpsl
test
or
fdivrl
push
int3
jb
or
adc
nop
adc
leave
arpl
inc
sub
jmp
inc
in
adc
adc
push
mov
mov
cmp
test
imul
cmp
loop
icebp
mov
addr16
dec
push
mov
cli
mov
pop
rcll
imul
cld
pop
pushf
lock
mov
mov
and
jle
xchg
fs
push
bound
call
adc
sbb
push
cmp
cltd
mov
bsr
insl
rorl
jmp
and
mov
addr16
jg
xchg
dec
les
adc
cltd
adc
mov
scas
pop
jge
mov
or
push
mov
incb
cmc
mov
xchg
rcrl
icebp
push
mov
lahf
mov
push
in
lds
iret
fisubl
xor
shr
push
jmp
aad
cmp
lods
jecxz
cs
add
nop
jno
adc
dec
popf
xchg
mov
push
cld
fs
sub
mov
mov
xor
or
adc
and
inc
fisttpll
punpcklwd
lcall
mov
in
loopne
jp
xchg
sub
pop
mov
pop
jnp
es
mov
xchg
xor
xchg
iret
mov
xor
push
xchg
negb
xchg
and
movsb
or
insl
test
inc
sbb
aaa
fwait
push
pop
cmp
pop
adc
repnz
mov
shlb
movsb
jb
movsl
jbe
add
aaa
mov
or
test
cld
and
dec
jp
aad
std
jecxz
xlat
and
je
stos
sbb
add
arpl
pusha
loop
jmp
mov
test
mov
xor
dec
xchg
mov
mov
and
add
loop
add
dec
lods
sbb
cmp
in
loope
adc
add
jns
shrb
data16
or
xchg
mov
loop
test
push
adc
lock
add
fisttpl
mov
jge
in
jmp
xchg
xchg
cltd
andb
ljmp
xlat
xchg
pop
sbb
push
mov
jne
sub
sbb
fstpl
das
nop
sub
sub
and
or
dec
xchg
cmp
mov
call
push
adc
cmp
cmc
or
mov
mov
xchg
xor
test
cmp
add
ret
roll
pop
jb
ret
xor
sub
dec
std
scas
shl
cltd
xchg
pop
dec
clc
inc
in
mov
lahf
pop
adc
and
lahf
or
rolb
cmp
mov
neg
int
push
loop
lahf
js
fisubrl
dec
pop
or
stos
cmp
in
call
cmp
fs
mov
test
int
iret
mulb
mov
dec
and
xor
jge
dec
popa
pop
jno
cmpl
ror
loope
icebp
sub
and
push
dec
popa
pop
jno
cmpl
ror
loope
icebp
sub
cmp
cmp
popf
jno
cmpb
in
vpsrlw
call
popa
cmc
push
lds
push
dec
loope
mov
jle
cmp
mov
jne
xor
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
