jle
loopne
add
add
add
or
repz
outsb
push
mov
push
push
inc
add
add
int
push
add
lock
pop
addb
add
add
add
or
add
add
add
or
add
pavgb
adc
rolb
add
push
add
or
add
add
mov
push
add
add
add
add
fimuls
rolb
xchg
lock
add
testl
push
add
punpcklbw
mov
add
lods
xadd
and
push
push
add
loopne
cmpsl
pop
rolb
stos
add
add
wrmsr
add
or
add
push
mov
xchg
add
pop
xor
les
rolb
add
add
add
add
rolb
or
add
or
add
mov
push
or
lock
or
add
add
adc
push
add
and
test
add
add
add
xor
loopne
inc
add
add
or
add
or
add
add
sbb
push
add
rolb
add
mov
adc
stos
add
add
add
add
or
add
add
outsl
adc
add
add
add
je
add
outsl
and
add
add
add
add
pusha
add
or
add
or
add
add
push
add
add
js
nop
add
add
addb
add
adc
adc
iret
push
inc
add
movups
dec
or
add
add
add
push
loopne
jmp
push
add
rolb
mov
add
push
jo
cmp
addb
push
lock
add
push
inc
add
pop
add
testl
pusha
add
jo
xchg
inc
add
add
mov
addb
push
inc
add
loopne
push
or
add
pop
mov
add
push
nop
add
add
add
add
add
or
add
or
or
inc
add
or
adc
add
les
pusha
add
mov
push
mov
andb
orl
xor
push
popl
call
xorl
movw
test
jne
push
popl
push
popl
ret
push
popl
sbbw
push
addl
push
subb
mov
push
popl
pusha
push
popl
addw
call
sbbl
addb
mov
andl
push
popl
push
sbbb
push
popl
xorl
subl
addl
addb
push
xorl
addw
call
movw
andb
cmpl
jne
orl
movw
call
subl
push
popl
ret
sbbl
push
popl
jmp
push
popl
xor
push
popl
push
popl
mov
andw
subw
shl
push
popl
movw
mov
push
popl
subw
shl
orw
subb
mov
push
popl
cmp
jne
addw
movl
call
andl
orl
popa
push
popl
pusha
sbbl
call
sbbb
mov
sbbb
sbbl
push
orl
orb
xorl
subw
addl
push
popl
orl
push
push
popl
subw
call
subw
push
popl
push
sbbw
xorl
movl
addw
addl
xorw
pop
push
popl
andl
cmp
jne
xorw
addl
ret
orb
popa
push
popl
call
subl
push
popl
push
xorw
xorl
push
popl
orw
addl
xorl
push
movb
call
orl
push
popl
push
push
ror
add
mov
sub
xchg
movl
sbbw
mov
sbbl
push
popl
shl
subb
push
push
popl
xor
andw
movb
push
push
popl
call
andl
push
addl
andl
mov
push
popl
push
push
popl
andw
jmp
movl
pop
xorw
movl
mov
push
popl
subl
push
movl
sbbl
push
movb
orb
push
movl
mov
andl
subl
mov
push
popl
rep
andl
movl
pop
push
popl
pop
push
rol
inc
mov
add
xchg
push
push
add
not
lea
rol
mov
xor
pop
push
popl
xor
andb
jmp
push
popl
sub
push
popl
mov
orw
sub
push
popl
andl
sub
push
popl
push
popl
mov
push
popl
sub
push
popl
andl
or
jne
subl
add
orl
sbbl
jmp
xorl
addw
mov
movb
andl
shr
andl
push
popl
shl
andl
mov
subb
xor
subl
sbbw
jmp
addl
subl
sub
xorl
mov
push
popl
subb
xor
xorb
orw
cmp
jne
addl
addb
mov
orl
add
push
popl
push
popl
cmpw
jne
movb
ret
movw
push
popl
push
addl
addl
xor
movw
pushl
orw
pop
movw
addb
lea
push
popl
addl
or
andb
mov
addw
subl
mov
orw
lods
xorl
mov
xorl
pop
push
popl
push
popl
ret
sbbl
push
movl
mov
movw
add
orw
push
push
popl
push
subl
push
orw
push
popl
push
push
popl
orl
push
addl
push
popl
mov
andb
mov
push
popl
sbbb
add
sbbl
subl
pushl
subl
sbbw
mov
subw
add
orl
add
xorb
mov
sbbw
add
sbbw
xor
addl
orb
lea
push
popl
push
popl
mov
movb
add
push
popl
mov
sbbl
xor
movl
push
popl
rol
push
popl
xor
xorl
inc
andw
cmpb
jne
addl
push
popl
cmp
je
movl
inc
sbbw
orb
cmp
jb
subl
movl
mov
subb
subl
add
andl
movzwl
movl
mov
subw
add
sbbw
mov
orb
orl
add
push
popl
pop
push
popl
cmp
jbe
push
popl
orl
cmp
jae
push
popl
pushl
andw
pushl
sbbw
push
push
popl
orl
xorl
andl
addl
andl
movw
pushl
addw
call
xorl
xorl
call
addl
pop
sbbl
subw
pop
xorl
pop
orw
pop
subw
pop
subw
leave
andl
orl
ret
push
popl
push
popl
call
dec
add
push
sub
divl
loopne
out
stos
mov
jmp
or
loopne
fwait
mov
cs
rol
xchg
out
pop
aas
lods
sti
mov
inc
lock
and
pop
sahf
lock
outsl
popa
jle
out
ret
fs
test
mov
dec
add
mov
inc
and
divl
loopne
loop
mov
in
in
lret
xchg
cs
xlat
js
jge
popl
mov
out
outsl
icebp
push
insb
iret
mov
lret
out
aaa
mov
or
scas
lea
mov
cli
xchg
or
test
scas
daa
xlat
inc
ss
fmull
push
pop
jb
sub
pop
jb
cs
enter
pop
cmp
sti
mov
ret
jb
and
dec
jnp
lret
shll
aaa
xchg
pop
or
pop
jl
cmpsb
mov
out
fcomps
dec
cwtl
or
push
sbbl
dec
jne
es
cwtl
dec
ss
cmp
sti
sbb
les
xlat
push
jbe
cmove
repz
jp
addr16
out
mov
daa
loope
sub
fadds
lods
fcmovnu
xor
imul
adc
pushf
ljmp
jne
xchg
mov
fcoms
mov
sbb
ret
fs
outsb
ss
mov
mov
das
xlat
test
jnp
fsubrp
sub
les
mov
daa
sbb
xor
jle
or
adc
push
mov
cwtl
fcoms
fistps
sub
ljmp
mov
pop
xchg
je
fsts
add
pusha
push
mov
dec
or
mov
lea
pop
mov
jp
xor
mov
sti
cmpsl
scas
daa
xlat
inc
ss
lods
mov
outsb
sub
add
jb
mov
mov
cmp
dec
push
shll
sti
mov
out
aam
lods
sti
add
and
cmp
sbb
nop
dec
scas
pop
jne
imul
fcoml
jecxz
xchg
iret
jmp
mov
ficoms
cwtl
test
into
lods
xchg
std
sub
dec
inc
repnz
jo
cmp
sub
xor
xor
ret
sti
daa
jns
add
add
aam
mov
xchg
popa
mov
iret
xchg
enter
cmp
sub
enter
les
cmp
pop
divb
fstps
pop
dec
cmp
push
fwait
lret
aad
push
or
pop
out
cwtl
and
jg
sub
push
jnp
jo
sub
popa
dec
movsl
pop
push
inc
cltd
outsb
sbb
shlb
lds
in
xchg
testl
gs
xor
scas
or
push
push
mov
andb
dec
dec
outsl
outsb
push
push
insb
mov
gs
and
add
cwtl
sbb
ja
movsb
ffreep
pop
rcr
push
adc
cmp
mov
in
jmp
in
sbb
jbe
lock
mov
xor
xchg
ficoml
mov
add
mov
xor
inc
inc
rolb
cwtl
incb
sbb
xchg
or
inc
xchg
scas
fmull
xchg
outsb
scas
lods
mov
repz
mov
fs
xchg
xchg
xchg
or
mov
sbb
andl
xlat
in
pop
push
add
int
orl
lahf
les
test
dec
dec
in
sbb
leave
jmp
popa
push
aaa
cmp
push
sub
dec
inc
scas
mov
inc
mov
ss
sub
add
scas
ret
adc
ret
popf
mov
xor
inc
sarl
cmp
cmp
divl
loopne
je
cs
hlt
or
add
scas
popf
clc
and
dec
pop
xchg
daa
or
call
push
js
sbb
cmpsl
jo
adc
mov
stos
mov
push
sbbl
mov
imul
out
inc
jo
sbb
call
mov
das
out
sahf
push
mov
adc
sti
mov
pop
push
xchg
add
fstpl
fstpl
stos
cmc
std
scas
out
cmp
in
aaa
xchg
pop
ds
scas
ret
or
xor
pop
jl
cmpl
jl
mov
or
mov
daa
das
les
xchg
sbb
aam
mov
dec
or
cwtl
adc
push
es
push
leave
out
cwtl
ret
ss
sub
dec
inc
jnp
aad
test
scas
addb
pop
dec
sbb
pop
pusha
jb
add
lods
and
dec
mov
sub
ss
dec
jbe
or
mov
cmp
loope
lods
sti
sbb
pop
jb
add
out
outsl
into
sbb
test
cld
into
push
xor
sub
lods
sti
mov
or
call
fcmovne
outsb
mov
add
pop
or
sbbl
in
fistps
dec
repz
jmp
and
addr16
and
std
jb
xchg
mov
or
pop
sub
inc
jae
lods
sti
daa
jecxz
mov
lcall
movsl
adc
or
add
out
mov
pop
dec
and
jnp
and
cs
sub
scas
fbld
jecxz
xchg
and
mov
inc
push
pop
jb
push
inc
pop
dec
ja
pushl
out
outsl
mov
cmpsb
inc
sbb
push
xor
jecxz
repnz
cmp
fcomps
lods
xchg
out
jbe
or
pop
or
push
call
mov
push
popa
sahf
invd
dec
pop
dec
jns
xor
inc
rorl
add
sbbb
dec
inc
sbb
out
addr16
lods
sub
dec
ss
sub
xchg
cmp
sbb
jns
mov
xor
cmp
push
adc
loope
sarl
jecxz
inc
jp
cmp
cwtl
add
xlat
mov
cli
cltd
dec
in
cmpb
loop
cmp
mov
mov
int
lock
jno
lods
bound
mov
pop
insl
xchg
les
xor
daa
adc
flds
std
xor
cmp
mov
push
and
add
xor
popf
and
das
ret
aad
or
mov
incb
pop
imul
cmp
mov
fmull
out
rcrl
mov
xchg
jbe
pop
xchg
flds
push
loope
adc
mov
sti
mov
cs
cld
jle
es
inc
pop
mov
into
pusha
sahf
pop
or
inc
das
sbb
es
dec
lret
mov
in
pusha
cmpsb
pop
or
xor
bound
imul
or
mov
into
add
push
jbe
mov
les
mov
daa
rorl
xchg
cmc
xchg
xor
test
inc
in
and
dec
sbb
cmp
fstps
cmp
clc
ljmp
test
dec
pop
xor
mov
add
pop
adc
scas
les
stos
xor
xor
int
imul
push
xor
lods
jno
loope
mov
add
call
fucomp
ret
ja
and
push
mov
cld
fsubs
popf
fadds
and
ss
xor
add
pop
inc
jge
lods
sti
push
jns
mov
popf
stc
aaa
dec
jbe
mov
dec
je
lods
loop
inc
sub
mov
popa
jl
adc
ja
fstps
adc
bound
fidivrs
mov
pusha
push
int
inc
test
xchg
popl
arpl
je
pop
ret
dec
mov
iret
push
dec
ss
les
fs
sub
fucom
leave
mov
fcom
inc
and
pop
int3
push
or
out
pop
out
jae
repz
les
mov
push
inc
sbb
into
insb
jmp
and
out
mov
lcall
jecxz
xor
add
xchg
imul
jbe
pop
sub
push
mov
lods
jl
push
sahf
xor
out
xor
test
dec
or
in
push
std
mov
pop
inc
dec
retw
mov
fcom
and
xor
push
inc
test
or
push
and
pushf
loop
cwtl
pop
mov
stos
ret
je
mov
and
ret
mov
adc
adc
loopne
mov
xorl
test
and
cs
inc
fmull
or
cmp
aam
and
xchg
imul
mov
sbb
iret
std
and
out
cs
cmp
pop
cli
sub
xor
pop
sub
adc
sbb
or
std
and
mov
dec
or
outsb
mull
sti
mov
pop
pop
arpl
pop
jb
cwtl
adc
pop
xor
fsubrl
sahf
pusha
pop
inc
jbe
jecxz
xchg
cmpsb
cmp
ljmp
xor
mov
mov
and
sahf
icebp
data16
lods
cmp
lods
fisttpll
popl
test
sbb
jl
push
pop
mov
ds
sarl
cs
jl
outsl
sub
lods
sti
mov
cmpb
jg
out
dec
les
in
out
sub
cmpsl
cmc
mov
mov
add
mov
inc
mov
loopne,pn
icebp
in
je
shl
pop
jb
add
mov
addb
push
or
mov
mov
inc
lods
outsb
lahf
gs
aas
or
stos
jg
pop
or
mov
xorb
jb
and
sahf
cmpxchg
bound
jo
repnz
inc
adc
jp
nop
scas
ffreep
in
es
adc
loope
popa
lds
js
popa
dec
in
push
popf
jecxz
sarl
test
stc
mov
sbb
imul
xchg
sti
cmp
dec
push
out
xchg
shll
movsl
jle
out
ret
bound
pop
sar
xchg
inc
imul
xor
jb
mov
cmp
pop
adc
pop
ss
fcompl
cmp
out
inc
sub
test
and
aam
mov
rcll
out
jb
add
inc
pop
and
dec
xchg
clc
testb
cmpb
jge
xchg
inc
sub
mov
mov
mov
outsl
cmc
mov
inc
call
mov
das
mov
lahf
pop
cmp
loope
mov
xchg
and
adc
add
lods
fisttpl
jg
test
cmp
js
sbb
dec
or
movsl
jecxz
ljmp
sahf
xor
shlb
lods
adc
pop
pop
pop
xchg
add
and
fstps
mov
push
or
call
jbe
cmp
fistps
dec
mov
jle
pop
rcr
mov
test
call
rep
mov
repnz
loopne
dec
lds
jb
leave
fsubrl
sbb
push
push
out
mov
adc
je
ret
data16
fstps
xchg
cmp
xlat
aas
cs
repz
es
and
xor
jne
cmp
pop
or
mov
mov
stos
cmp
inc
xor
divl
push
cmp
push
les
adc
rcll
inc
movl
mov
mov
shrb
inc
insb
stos
stc
enter
push
xor
out
fdivs
sahf
push
ret
mov
push
jo
gs
mov
mov
mov
out
out
stos
jmp
push
enter
pop
pop
fcoms
xor
subb
andb
sub
xchg
add
loopne
movsb
fwait
jnp
ficomps
cmp
repz
in
mov
adc
std
mov
mov
mov
pop
cmp
sbb
out
and
mov
and
pop
pusha
mov
fwait
and
pop
jb
jae
mov
fsub
cmp
mov
mov
ljmp
int3
dec
les
imul
cmp
cwtl
add
aaa
adc
push
lahf
addr16
aaa
mov
fsubrp
sub
mov
sbbl
js
sub
lret
enter
dec
mov
jp
in
fsubrl
xchg
scas
je
pop
mov
sub
out
push
cmp
ss
shll
jae
lods
sti
daa
jle
mov
jbe
sub
pusha
mov
movsb
xor
test
adc
aad
cltd
pop
insb
push
sub
cmp
sarl
inc
imul
outsb
je
pop
mov
inc
jnp
rolb
mov
adc
aas
popf
lock
xchg
xor
mov
mov
arpl
lret
add
outsb
cli
test
xor
adc
push
xor
bound
jmp
pop
leave
mov
loope
jl
lods
sti
shrb
dec
jbe
ret
popa
fistpll
fdivrl
or
loop
cmp
insl
sub
pop
jb
pop
push
add
jbe
shrl
fisttpl
insb
add
jp
pop
push
push
cmp
loopne
cmp
dec
mov
int3
and
jne
inc
push
jge
outsl
fiaddl
stos
or
iret
out
and
lahf
sbb
lea
stos
mov
jae
ret
adc
push
insb
out
not
fiadds
mov
sarb
lods
xchg
sbb
add
cltd
xor
rcll
ss
adc
sti
mov
cmp
mov
mov
mov
andl
idiv
mov
mov
pop
push
and
xchg
pop
mov
sub
test
dec
pop
xor
pop
jl
in
cld
inc
cmp
pop
push
inc
sub
jno
shll
lods
mov
xchg
xchg
fisubs
ret
push
sahf
out
and
sahf
repz
aad
mov
into
mov
dec
insb
add
xor
mov
ror
mov
cld
mov
mov
xor
inc
mov
fdivl
rcrl
adc
mulb
sub
gs
adc
xor
out
jb
in
xlat
dec
cmp
dec
xchg
jmp
in
xor
dec
pop
clc
repnz
jne
dec
mov
jecxz
sub
cmpsb
dec
fstps
inc
jp
lods
sti
pop
push
jp
lret
push
sahf
repz
leave
pushf
insl
sbb
and
sub
or
cli
xchg
inc
inc
pop
rep
roll
int
or
test
dec
pop
xor
adc
jae
aas
push
or
arpl
inc
pop
inc
jae
lods
sti
daa
leave
les
out
ret
mul
cli
sub
pop
mov
fisubs
adc
insb
iret
pop
daa
sub
mov
mov
pop
inc
jp
sub
and
insl
outsl
dec
sub
std
jecxz
mov
lods
in
dec
dec
jle
ss
cld
pop
push
out
jne
dec
in
es
add
sub
pushf
and
lds
push
inc
cs
jg
or
pop
mov
mov
out
inc
imul
sub
jle
inc
sbb
mov
sahf
iret
push
and
bswap
icebp
mov
popa
pop
inc
fcoms
bound
fmuls
outsl
and
rcrl
push
frstor
push
xchg
and
and
xchg
pop
dec
xor
xchg
xchg
scas
fcoml
fistpll
dec
aas
out
inc
les
mov
add
sbb
xchg
not
jge
loope
pop
xor
jns
test
cmp
pop
adc
mov
sbb
and
loope
jle
sub
dec
dec
sub
pusha
dec
xchg
fmul
loop
int
add
roll
xchg
and
jecxz
sbb
lea
fs
rcrl
cmp
outsb
cmp
fildll
mov
ss
cmp
aas
jae
lods
sti
daa
adc
adcb
pop
pop
xor
nop
xor
rcrb
xor
in
daa
out
mov
fwait
negl
cmpl
sub
test
sbb
mov
addb
lods
sti
sbb
xchg
cwtl
add
cltd
loop
lds
and
arpl
out
pop
test
enter
mov
fcom
or
lock
and
sub
aaa
bound
dec
lea
test
mov
das
push
jb
and
or
shr
fcomps
test
cmc
aad
pop
jbe
fs
imul
incl
xchg
bound
push
jo
gs
incb
jp
pop
jecxz
cwtl
sbb
sbb
fwait
adc
mov
inc
dec
fmuls
mov
out
fidivs
fsts
insb
btr
inc
movb
jle
shrl
mov
imull
jo
ljmp
xorb
cmp
cmp
pop
adc
scas
repz
dec
cmp
imul
ftst
test
sub
roll
jae
insl
add
cmp
movsb
push
xor
mov
les
inc
inc
jge
add
or
fs
inc
data16
cltd
pop
fistl
loop
cwtl
adc
aaa
sbb
ret
ret
sub
icebp
mov
pop
ret
pushf
mov
cmp
push
dec
aad
das
push
cmp
aad
mov
add
dec
popf
lods
imul
scas
aad
iret
sub
imul
sub
dec
jbe
and
call
pushf
out
mov
dec
inc
mov
xchg
cli
mov
mov
inc
jbe
adc
cld
jge
xchg
imull
loopne
cmc
addr16
shl
pop
jb
out
pop
fdiv
mov
or
cmc
sti
mov
mov
xchg
lods
fimuls
jbe
pop
enter
sub
mov
push
inc
ss
xchg
jmp
xor
inc
push
orb
add
pusha
fcompp
mov
rorb
pop
mov
mov
xchg
mov
int3
leave
stos
cli
je
jmp
and
mov
aaa
sub
not
iret
push
mov
ficomps
mov
int
cmp
xchg
ja
mul
mov
sub
xchg
loop
cwtl
adc
cli
lret
mov
inc
gs
dec
adc
jno
aas
mov
sub
inc
or
xor
clc
out
mov
notl
int3
nop
pop
aad
push
repnz
jae
rcrl
outsb
lahf
arpl
mov
popf
inc
jp
lods
sti
lret
jle
and
pop
sahf
out
sbbb
je
sahf
in
adc
cwtl
lods
xor
shrl
test
dec
pop
xor
push
mov
cmp
and
push
inc
stos
push
out
outsl
in
es
stos
data16
imul
jno
cmp
cmpsl
ds
pop
xchg
pop
mov
fwait
out
fcomps
shr
out
inc
les
xchg
cmc
sub
pop
and
mov
cld
hlt
cmp
cmp
pop
test
insb
rcrb
lods
jo
add
call
in
push
sahf
cmc
jmp
data16
push
cwtl
push
jmp
repz
xorb
fcoms
xor
or
popl
xchg
add
push
inc
addl
sbb
mov
or
jns
xlat
xchg
ret
sti
mov
fcom
nop
and
das
out
sub
cmp
dec
ret
in
push
and
jmp
out
cwtl
sbb
repz
pop
and
les
inc
dec
push
jb
push
push
imul
and
ds
push
push
inc
xor
mov
idivl
test
dec
pop
xor
sarb
pushf
rcrl
dec
pop
and
mov
loope
repnz
pop
xor
mov
ja
cmp
pop
or
cmp
loopne
cmp
xchg
inc
and
divl
loopne
cmpsb
jmp
std
jmp
or
std
push
push
insb
mov
jo
add
adc
dec
movsb
in
push
rol
in
aaa
dec
fistps
adc
bound
pop
push
sub
lcall
decb
pop
loop
xchg
les
cs
mov
lret
enter
or
ljmp
mov
or
and
dec
loopne
pop
xchg
mov
insb
mov
rcr
and
dec
pop
mov
shrb
arpl
in
sub
xor
and
mov
into
push
push
mov
gs
mov
pop
pushf
je
lods
push
add
xor
jecxz
ljmp
sahf
add
dec
js
sbb
cmp
and
mov
test
lods
fisttpll
cmp
mov
mov
int3
mov
and
testb
sub
push
rcll
outsb
push
dec
jae
xor
mov
fdivrs
xor
and
add
out
or
fcmove
cmc
std
mov
mov
mov
pop
je
fnsave
lods
xlat
shrl
lods
sub
iret
xchg
xchg
push
fnstenv
fs
lcall
inc
inc
aas
or
aaa
xchg
pop
sbb
cmp
dec
or
or
and
jmp
xchg
xchg
pop
gs
sbb
cmp
jl
and
outsb
and
mov
sahf
repnz
mov
lahf
bound
cmp
stos
or
dec
cmp
insb
orl
jb
cmp
rcrb
adc
popa
pop
cmp
fadds
popl
jecxz
sbb
pop
les
inc
jge
lods
sti
pop
push
rcrl
repz
std
xor
xor
inc
in
int3
cmc
cli
mov
mov
fadds
aaa
and
or
jnp
scas
lods
into
xor
or
fimull
int
fstps
lea
sbb
es
pop
sahf
mov
cmpsb
pusha
cmpsb
pop
or
xor
bound
cmpsb
movsl
add
divl
loopne
scas
popa
push
in
hlt
or
add
sub
sub
xchg
pop
aad
xlat
cs
jae
rcll
rorl
sti
xor
fdivs
sahf
adc
movl
jl
dec
sbb
and
sbb
fiadds
shll
or
sub
dec
inc
push
sbb
fstps
jmp
test
dec
ljmp
popl
cld
pop
inc
lods
sti
mov
stc
and
fisubrs
scas
xchg
call
jns
sub
and
sar
movsl
dec
xor
xchg
je
adc
pushl
and
push
sahf
lock
std
pop
sub
ret
bound
popa
cli
xchg
inc
fsubl
pusha
aad
repz
arpl
dec
shrl
lods
mov
js
sub
ret
inc
les
xor
addr16
cmp
cli
cwtl
dec
sub
xor
data16
lods
loopne
inc
add
push
out
adc
std
push
add
ret
popa
and
lods
fmull
fnstsw
cmp
mov
movsb
xchg
mov
ljmp
mov
and
addr16
ds
mov
pop
pop
pop
cwtl
mov
lahf
ljmp
ss
cmp
mov
dec
push
sahf
outsb
in
dec
aaa
in
push
lds
sbb
iret
das
and
or
pop
sub
and
shl
mov
xorb
mov
repnz
lret
fcomip
clc
popa
xor
sbb
leave
inc
in
cmpb
mov
or
or
lods
jmp
fidivl
insb
insl
jo
gs
lcall
je
jecxz
cwtl
sbb
xchg
andl
sbb
fs
test
cmpsl
jp
test
ret
jne
ja
fcoms
scas
jae
pop
or
test
pop
cmpsl
pop
lods
sti
mov
push
pop
push
or
mov
fisubl
fadd
insl
sahf
bound
cmp
jbe
adc
aaa
xchg
pop
or
mov
icebp
mov
pop
xor
sarb
mov
repz
ljmp
fcomps
lods
xchg
out
inc
mov
movsl
dec
sub
pusha
mov
jmp
arpl
outsb
mov
daa
or
sar
mov
xchg
addl
xchg
dec
lods
jle
mov
add
xchg
jno
or
scas
lods
mov
inc
xchg
arpl
push
lcall
cmp
addr16
lods
ret
add
pop
sahf
repnz
pop
sub
movsl
lods
outsb
lahf
gs
cmp
fadds
xchg
std
jl
rcrl
inc
and
enter
movsb
add
jno
and
mov
mov
sbb
les
fdivs
test
and
out
sarl
loope
adc
ljmp
insl
dec
popf
jmp
aam
push
mov
orb
fcmove
pop
pop
cs
nop
enter
jbe
mov
and
mov
add
rorb
fists
mov
and
xchg
arpl
or
jno
or
mov
inc
mov
cwtl
pop
aad
pusha
xchg
cs
jae
rcrl
ds
imulb
and
scas
pop
inc
lods
sti
mov
stc
stc
push
sbbl
leave
ja
mov
dec
stos
ljmp
add
and
je
adc
cmp
inc
mov
in
faddl
add
mov
and
sbb
jo
gs
inc
push
pop
adc
xchg
dec
mov
sarl
cmp
xchg
gs
js
dec
push
inc
daa
hlt
imul
xor
jnp
cmp
push
xlat
insb
mov
cmp
outsl
cltd
outsb
mulb
mov
xor
cmc
gs
lods
iret
sub
decl
sti
mov
mov
maxps
xchg
inc
fs
ret
mov
cmc
inc
sub
mov
lret
je
loope
out
mov
repz
and
inc
cmp
mov
xchg
cli
cltd
dec
inc
pop
lds
jo
or
rcl
lds
or
pop
and
les
jle
stc
push
shrl
push
out
mov
push
adc
pop
loope
scas
movsb
mov
icebp
sub
repnz
pop
std
insl
adcl
mov
sub
jl
sbb
pop
xchg
and
xor
and
pop
sahf
in
loop
cmp
add
mov
sub
mov
jmp
sti
mov
sub
insb
leave
je
xor
jecxz
jb
mov
sub
loop
inc
cwtl
adc
mov
sub
sbb
push
loop
inc
cwtl
add
jbe
loopne
testb
xor
xor
fdivs
cmp
push
jno
mov
mov
in
mov
push
std
mov
test
and
lea
sub
or
hlt
ficomps
and
loopne
pop
add
repnz
aam
and
xchg
push
or
xchg
xchg
sub
shll
ds
sbb
sub
insl
imul
iret
jmp
push
jg
or
ret
outsl
xchg
xor
mov
das
cmc
cmp
push
inc
inc
lds
mov
push
iret
aam
and
or
jmp
in
pop
cs
ficoms
and
jge
sbb
and
xor
jmp
adc
loop
leave
pop
shrb
ss
sub
mov
stos
inc
test
cmp
aad
mov
ljmp
mov
and
iret
insl
push
je
rcll
cs
xor
jb
add
pusha
xchg
dec
xchg
stos
cwtl
dec
push
iret
aam
mov
pushf
lret
cmp
cmp
adc
and
jns
jmp
and
into
cld
mov
fsubl
movsl
bound
in
pop
hlt
push
jnp
xor
out
or
stc
cli
sub
fisubl
xchg
mov
pop
add
mov
push
call
fcomps
xchg
inc
cmp
in
or
sarl
sarb
icebp
sub
sub
and
movsl
xchg
cmp
sbb
lcall
inc
andb
push
push
ds
jo
aad
jmp
mov
cltd
sbb
repnz
or
dec
negb
testb
push
sbb
push
mov
stos
jge
jno
in
or
fs
rcll
xlat
cmpsb
mov
icebp
fildll
cli
cmpsl
xchg
inc
fcompl
mov
jno
jnp
lods
sti
xor
cwtl
push
adc
fdivr
addr16
xor
mov
mov
mov
mov
pop
sbb
lods
bnd
fcomps
inc
xor
ljmp
enter
jb
lods
es
jmp
pop
cmp
out
lods
outsb
mov
inc
testb
aad
insb
rorb
mov
in
jae
les
and
mov
icebp
ret
data16
out
adc
rcrl
lock
cmp
jle
es
dec
dec
mov
xchg
pop
pop
push
xor
fcomps
mov
loopne,pn
sub
pop
jb
xor
sahf
cld
xor
in
xchg
pop
and
and
mov
xlat
test
mov
dec
retw
mov
out
jns
lods
sti
add
add
pop
dec
push
out
mov
xlat
mov
xorb
push
lods
fmull
dec
outsl
mov
inc
jbe
lods
sti
aad
mov
adc
xchg
xor
scas
shll
mov
mov
test
mov
jb
lods
data16
mov
cwtl
dec
out
loop
cmp
pop
fwait
push
and
out
shll
mov
leave
in
fcomps
mov
fcom
and
mov
cmpb
ljmp
mov
xor
cmc
mov
mov
pop
out
dec
jo
jg
movsb
wbinvd
pop
or
push
movsb
mov
rcrl
lods
fnstcw
push
dec
push
daa
pop
mov
adcl
mov
fcomp
cmpl
and
pop
sub
addl
mov
pop
pop
aaa
dec
push
mov
or
lcall
cmp
es
jb
jle
ds
mov
sbb
fistl
jmp
xor
inc
xor
xor
pop
mov
xor
shll
lods
jecxz
add
dec
ja
leave
ds
outsb
sahf
pusha
pop
inc
xchg
inc
mov
xchg
pop
jo,pt
arpl
jl
mov
mov
mov
out
iret
pop
dec
push
out
and
add
aad
mov
pushf
fadds
jno
test
cmp
mov
fdivs
and
push
sahf
repnz
ret
fcmovb
inc
outsb
fwait
popa
pop
cmp
cli
xchg
inc
fs
mov
les
lock
inc
dec
pushf
push
loope
sub
push
js
ljmp
hlt
call
ret
mov
pop
aam
call
outsl
cltd
arpl
mov
jae
fstps
sub
jbe
and
push
cmp
pop
scas
inc
das
sbb
es
push
fstpt
push
pusha
cmpsb
pop
or
adc
xor
jb
lods
pop
aad
mov
std
pop
pop
and
mov
fsubrl
nop
push
ds
xlat
jne
int3
pop
ds
repnz
repz
gs
lods
lock
inc
adc
clc
mov
mov
push
jp
mov
xor
xor
dec
imul
mov
cmpb
mov
cld
mov
xchg
add
fcomps
lods
popf
out
xlat
mov
jo
gs
cmp
movsb
lods
and
and
data16
je
pop
push
xor
add
loopne
jno
xchg
mov
mov
mov
pop
jb
insl
dec
add
sti
and
je
test
notl
int3
xchg
or
inc
pop
inc
jae
lods
sti
daa
daa
les
je
aam
mov
out
mov
push
movzbl
mov
push
inc
clc
cmp
pop
sub
dec
inc
and
mov
imul
cmpsl
sub
insb
xchg
or
clc
xor
orb
scas
aaa
xlat
dec
cmp
jg
add
fcomps
lods
xor
loope
xchg
add
jae
or
or
sbb
lods
or
cs
xor
lock
fcoms
shl
adc
adc
mov
test
and
or
push
repnz
sub
mov
push
xor
mov
add
push
or
ret
pusha
sub
jae
popf
out
ret
orb
jbe
add
mov
dec
cltd
js
xor
lds
in
push
mov
dec
nop
jne
jge
jo
in
daa
jecxz
push
xor
fwait
sub
xchg
scas
fs
mov
in
push
iret
sbb
lods
xor
dec
cmp
pop
jb
lods
jo
or
inc
push
push
pop
add
sbb
dec
insb
lods
jo
testb
ja
in
mov
cwtl
push
sbb
push
je
cmp
test
dec
inc
enter
mov
mov
popa
fcomps
pop
or
pop
icebp
pusha
imul
ja
sahf
pushl
dec
jp
mov
inc
js
sub
mov
mov
or
mov
inc
push
pop
fwait
out
fcomps
or
lds
or
movsb
daa
outsb
lcall
ljmp
mov
das
loopne
out
in
pushf
mov
loop
jb
into
lock
ja
pushf
test
les
lock
sub
dec
xchg
jle
bnd
data16
andb
std
dec
xor
fstps
cmp
clc
sahf
sbb
popf
dec
push
inc
sub
jne
hlt
sbb
scas
push
add
jg
inc
cld
and
and
fiadds
cwtl
adc
ror
roll
inc
sahf
inc
je
fstps
mov
push
dec
sub
int
ret
les
sub
mov
push
cmp
arpl
imul
aam
dec
push
inc
lds
sub
jl
stos
sbb
xchg
sbb
cltd
mov
sub
ds
sub
dec
dec
sub
shl
int3
daa
ljmp
shrl
pop
mov
loopne
xchg
cld
addb
pop
jb
and
jne
in
mov
mov
and
xchg
aaa
xchg
push
fwait
adc
pop
jb
testl
inc
lods
sti
mov
pop
and
fsubr
mov
pop
cmp
pop
pop
jnp
mov
add
jbe
cmp
loop
xor
pop
lds
mov
addr16
arpl
push
inc
xor
cmp
push
mov
push
pusha
je
cmc
fcomps
pop
lock
rclb
xchg
scas
sbbl
addr16
cmp
inc
ret
cmp
lods
or
add
mov
push
mov
mov
std
inc
cmp
aad
icebp
and
in
inc
int3
xchg
std
dec
imul
fwait
mov
pop
sbb
cld
mov
xchg
or
add
mov
and
cmp
or
cmp
inc
es
mov
cwtl
push
fildll
dec
stc
push
sub
inc
sbb
jmp
mov
outsb
out
add
push
mov
push
lock
lods
push
or
and
je
mov
push
jmp
adc
add
push
pop
fwait
cmc
fcomps
cmp
pop
xchg
ret
pop
sahf
lock
jmp
jp
ret
popa
loopne
lods
loop
rcrl
sti
xor
std
mov
dec
cmp
adc
movsl
add
jo
add
nopl
aaa
sahf
add
jmp
adc
fs
loopne
shrl
dec
inc
in
loop
cld
mov
inc
adc
daa
xor
jbe
add
repnz
fwait
pop
aad
dec
inc
cs
sarl
jae
rcll
cmp
loopne
cmp
dec
mov
push
iret
aam
mov
ret
mov
inc
jnp
out
xchg
inc
mov
in
fdivl
jge
xor
dec
pop
pop
je
fstps
xor
shlb
aad
mov
xlat
aam
mov
sub
mov
popa
sub
cmp
mov
gs
shll
push
popf
dec
jae
dec
ret
xchg
dec
inc
in
pop
cmc
mov
and
mov
cs
xor
mov
push
sbb
outsl
jno
mov
mov
or
int3
xchg
pop
aad
cmp
rcll
inc
je
rcrl
ljmp
ret
arpl
sti
push
push
xchg
orb
sahf
std
xor
mov
cltd
addr16
cmp
fdivrs
lret
cli
mov
pop
cmp
rcrl
sbb
cmp
mov
or
mov
add
cmp
andb
ljmp
inc
pop
mov
fcom
add
jae
sbbl
push
jge
mov
dec
mov
and
imul
iret
dec
loopne
cli
adc
jb
sbb
inc
lahf
cmp
ss
iret
cmp
sbb
pop
xor
std
or
push
sub
dec
xor
movlps
ljmp
or
fneni(8087
popf
mov
or
push
fwait
movl
push
mov
scas
loope
ret
xchg
cmp
in
inc
in
cmp
push
push
dec
ljmp
dec
dec
in
sbb
push
mov
es
rcl
jle
xor
ds
sbb
push
iret
stos
call
mov
in
call
pusha
jo
cwtl
inc
lods
imul
daa
adc
and
inc
lcall
out
das
inc
mov
fs
dec
inc
jp
aam
imul
cmp
sub
addl
mov
sub
lods
int3
test
and
les
aaa
xchg
jae
rcll
fs
leave
mov
ret
mov
mov
call
xlat
dec
aaa
inc
bound
sti
add
pop
out
cwtl
pop
outsl
cmp
xorl
dec
addr16
shlb
dec
sbb
stos
cmpsb
into
dec
sbb
and
adc
out
insl
jo
inc
xchg
ljmp
out
xor
sbb
inc
pop
rep
roll
int
or
test
jl
xchg
cld
mov
cmp
arpl
cmp
loopne
pushl
pop
rcr
pop
jb
push
push
fwait
in
mov
jns
ret
addr16
outsl
cmp
jne
sub
sub
pop
ret
arpl
pop
push
sbb
leave
out
jl
xchg
fsts
cmp
pop
pop
lea
ja
hlt
xchg
mov
dec
adc
sbb
pop
sbb
std
sub
adc
iret
fcmovb
inc
aam
mov
mov
insb
sti
sbb
fstl
xchg
lods
jo
cmp
aas
rcrb
fstpl
push
leave
sub
pushf
dec
xchg
out
cmp
jle
icebp
ret
bound
xchg
xchg
inc
fcom
jle
add
fxch
stos
dec
out
outsl
lret
mov
add
and
out
push
cmp
addl
je
jle
es
pop
xchg
mov
int
scas
pop
or
jl
in
cs
cmp
cmpl
aam
pop
test
loop
icebp
aad
mov
push
dec
enter
cwtl
sti
inc
jmp
out
outsb
rcrb
cltd
and
mov
rorb
adc
gs
cmpsl
std
pop
cmp
sub
das
jp
cmp
pop
ret
or
out
mov
rclb
xchg
cmp
push
dec
clc
mov
test
add
lock
pop
inc
jae
lods
sti
daa
jmp
jle
in
dec
or
push
sub
mov
mov
sbb
loop
jecxz
cmp
cltd
dec
adc
lds
mov
bound
in
push
xchg
test
iret
push
ds
ljmp
pop
pop
sahf
aas
insl
pop
fwait
cmc
fcomps
ret
mov
cltd
inc
mov
les
repnz
int
outsb
sbbb
addr16
cmp
pop
cwtl
push
inc
xor
mov
aaa
sbb
faddl
gs
lods
mov
adcl
loop
cmp
cld
pop
pop
xchg
std
gs
sub
scas
jl
cmc
es
dec
clc
mov
fbld
pop
pop
push
sbb
fcompl
mov
mov
mov
cmp
inc
sub
inc
divl
loop
cwtl
adc
sahf
stos
jg
or
gs
scas
mov
arpl
rcrl
popf
adc
pop
mov
test
mov
loop
das
mov
inc
mov
inc
add
call
sub
sub
sbb
cmp
shll
adc
xchg
sbb
enter
or
fsubr
inc
popf
stos
je
pop
ret
cmp
sub
cld
mov
or
rcrl
cmp
dec
in
dec
xchg
pop
pop
jle
mov
cld
xchg
inc
scas
loop
leave
mov
enter
stos
pop
roll
mov
divb
mov
pop
ret
sbb
push
xor
jbe
xchg
lahf
dec
cwtl
stos
cld
mov
mov
imul
cmp
aam
mov
out
inc
nop
cmp
sub
fisttpl
add
add
nop
sbbb
sbb
jge
fildl
dec
aad
sub
dec
inc
jne
jbe
jmp
push
mov
fidivrs
or
cwtl
xchg
imul
fadd
cmp
std
inc
add
xchg
mov
scas
lods
shlb
sub
push
pop
jl
loope
lds
mov
outsb
cli
or
scas
or
es
pop
xlat
inc
xor
std
and
sub
pusha
loopne
sahf
or
adc
stos
aam
mov
out
rorl
mov
mov
insl
idivl
jbe
insl
frstor
mov
daa
rorb
lret
ja
adc
mov
mov
push
inc
das
mov
mov
fdivl
aad
outsb
ret
int
inc
in
imul
fs
cmp
sub
pop
pop
mov
hlt
pop
imul
rclb
fs
jae
test
mov
adc
lret
cld
mov
hlt
sub
outsl
or
fildl
xchg
cmp
jne
xchg
xor
stos
es
outsl
repnz
and
out
push
cmp
jmp
pop
enter
les
lods
sti
cwtl
push
mov
xor
clc
ss
je
xor
mov
cmp
out
dec
cmp
out
sub
loop
sub
out
mov
sub
aaa
add
out
add
mov
mov
in
es
push
jecxz
stc
xchg
adc
iret
pop
and
pop
or
daa
fisttps
scas
aaa
mov
out
out
out
cmp
cwtl
push
pusha
mov
mov
pop
pop
je
loopne
sub
andb
and
test
cli
dec
mov
dec
mov
stos
sub
bound
mov
outsl
sahf
fs
aaa
sub
xchg
nop
inc
repz
sub
cmp
dec
xor
mov
xchg
scas
xchg
add
fcompl
rcl
out
pop
cmp
icebp
ret
popa
in
jbe
fmull
aaa
sub
mov
fcom
xlat
sub
cmpsl
sub
jmp
push
jns
xchg
dec
nop
imul
sbb
jo
jb
iret
sub
sub
inc
jb
or
shr
roll
cmc
popa
dec
in
and
and
add
jecxz
fisubrs
add
cmp
shl
out
pop
cmp
jne
ret
bound
pop
insl
cli
xchg
inc
fs
lret
add
inc
xchg
jns
or
repz
sahf
ficoml
xor
cmpsb
cmpsb
xchg
add
fcomps
lods
mov
fcoml
jo,pt
sbb
aam
mov
pushf
mov
scas
fyl2x
inc
sbb
mov
fisubs
leave
pop
mov
cmp
dec
dec
int3
sbb
mov
dec
mov
jl
dec
push
xor
mov
sbb
and
cs
jae
rcrl
inc
sub
push
cmp
dec
fwait
mov
pop
inc
sbb
aam
mov
mov
iret
mov
int
js
mov
popf
adc
fs
shl
popa
lahf
fmuls
jmp
aaa
mov
pusha
es
and
push
or
and
je
fchs
aaa
fistps
or
add
push
cmpsb
cltd
je
or
divl
loopne
cs
cli
add
hlt
or
adc
js
push
or
and
je
xchg
imul
cmp
jne
addr16
push
lods
sti
mov
sub
sti
test
frstor
out
dec
fnstsw
dec
pusha
xchg
sub
mov
lock
fsubr
mov
jl
jns
mov
mov
mov
xchg
cwtl
cld
xor
pusha
pop
cmp
fadds
shl
adc
dec
call
jo
inc
popa
ljmp
call
aam
faddl
les
and
and
aad
inc
xor
mov
and
mov
loop
dec
sub
xchg
pop
aad
push
pop
das
in
repnz
movsb
and
inc
rcll
cs
pop
scas
test
in
xor
gs
pop
mov
or
repz
pop
fwait
sub
ret
jno
lds
fs
rcrl
sub
adc
xor
lods
jne
pop
inc
ret
mov
ljmp
test
dec
pop
xor
cmpl
fstps
adc
dec
idiv
test
fs
pop
jecxz
ljmp
cmp
mov
xchg
add
and
jb,pt
or
inc
pop
inc
jae
mul
fldcw
pop
add
jmp
shlb
pop
xchg
dec
mov
pop
and
adc
inc
aas
jns
shrb
pop
lret
test
and
bound
cmp
pop
lods
sti
sbb
pop
xchg
xchg
ds
gs
inc
or
call
loopne
pop
pop
jb
inc
in
or
mov
jle
xor
imul
push
jbe
in
xor
pusha
xchg
mov
outsl
fwait
pop
jno
sbbl
icebp
sub
push
enter
nop
ret
mov
pop
inc
dec
retw
sbb
xchg
stos
int3
je
aad
push
daa
das
mov
je
rcll
push
pop
cmpsb
clc
cmp
inc
pop
push
in
jmp
or
pop
jp
jb
in
mov
out
pop
and
icebp
jecxz
push
jb
or
jne
fcomps
inc
xor
ljmp
lods
insb
daa
mov
and
std
mov
xchg
faddp
jbe
and
loopne
mov
jle
repz
fs
jmp
lods
sti
mov
call
sti
xor
xor
pushf
pop
cmpsl
shll
lods
push
fbld
add
sbb
push
out
mov
int
ja
mov
push
xor
cli
pop
bound
lods
jle
out
pop
push
addl
mov
fdivs
sahf
sbb
xchg
cwtl
push
or
call
pop
jg
pusha
sbb
and
les
inc
rcrb
stos
insb
je
imul
mov
cli
dec
inc
imul
dec
fbstp
xor
xchg
outsl
jb
lods
in
jmp
pop
cmc
xor
or
popa
fstps
mov
repz
mov
pop
lods
sti
mov
jg
pop
dec
push
out
data16
stc
push
mov
cmc
insl
lcall
int3
xor
xchg
cmp
pop
jb
xor
mov
rorl
je
mov
pop
fdivrp
sub
jne
mov
mov
stos
test
lcall
push
jne
and
imul
jge
jl
rcrb
int
dec
jle
loop
dec
mov
pop
sub
lods
sti
mov
pop
pop
outsl
mov
lock
mov
ret
xor
pop
prefetcht2
and
pusha
jno
or
or
fcomps
xor
pop
jb
scas
sti
mov
sub
jnp
aad
arpl
das
shrl
cmp
push
or
or
cmp
repz
cmp
pop
ret
mov
sub
sti
fsubrs
mov
mov
loop
ds
std
xor
inc
int3
mov
cld
scas
ret
mov
test
add
mov
xor
sub
sub
outsl
cmp
rcl
pop
jb
ja
xchg
aam
or
add
addr16
jg
ss
fisttps
decl
pop
enter
mov
sub
insb
xchg
push
imul
pop
out
inc
les
mov
in
mov
mov
mov
fcom
stos
and
ret
sbb
or
mov
btr
sbb
in
stos
sahf
or
mov
adc
mov
fldl
adc
je
pop
mov
test
or
pop
into
cli
mov
aas
jae
and
ficompl
gs
lods
fidivrs
divl
dec
add
push
fcomps
dec
hlt
mov
es
rcll
scas
pop
enter
fsts
xchg
jae
xor
cltd
dec
add
or
enter
bound
and
jae
xchg
pop
push
or
or
call
cltd
sub
hlt
push
or
mov
dec
aaa
mov
inc
imul
cmp
outsb
insl
arpl
movsl
add
push
push
je
ljmp
sub
jge
push
out
lods
jle
sub
add
mov
daa
dec
js
mov
or
xchg
mov
sahf
dec
push
lods
sub
pop
popa
dec
mov
add
pop
push
fcoms
push
adcb
stc
jl
enter
cs
mov
xchg
mov
enter
jecxz
ljmp
xchg
inc
mov
xchg
cwtl
std
pop
arpl
and
sbb
mov
cmp
mov
fcomps
lock
and
mov
mov
stos
dec
sbb
push
out
insb
lock
push
test
call
je
ret
lock
pop
push
mov
enter
mov
pop
push
sbb
cld
std
adc
loopne
mov
add
aas
int
jge
scas
lods
mov
pop
enter
xchg
xchg
or
mov
mov
mov
pop
stos
cmp
xor
lds
stos
push
sahf
test
push
xor
xor
xchg
jg
xchg
xchg
pushl
and
push
sahf
in
pop
loop
cmp
cwtl
rorl
cli
xchg
inc
das
mov
insb
imul
ljmp
xlat
dec
cmp
mov
sub
jno
rorb
cmp
jmp
inc
rcll
mov
cmpb
ret
data16
jb
int
pop
xchg
xchg
pop
sti
xor
std
mov
sub
push
jo
outsb
xor
lods
test
and
pop
fs
mov
std
mov
into
ljmp
pop
hlt
test
repnz
insb
mov
cld
out
push
cmp
sub
sub
outsb
movsb
jbe
or
fistps
cmp
lods
push
les
and
pop
mov
sub
pushf
adc
fimuls
cli
xchg
lods
js
pushl
out
outsl
mov
push
and
cld
push
xor
mov
das
loopne
pushf
mov
pop
jb
jnp
outsl
cld
ret
imul
scas
push
mov
dec
je
lods
loop
je
pop
lret
sti
daa
fwait
les
loop
aad
mov
or
adc
clc
push
mov
jg
sbb
adc
or
filds
jo
ds
sarb
fmuls
sbb
xchg
cli
aad
inc
insb
jno
adc
loopne
or
inc
push
fcomps
or
lret
les
and
fwait
cmc
mov
mov
jb
sub
shll
xchg
inc
nop
add
sub
ds
outsl
ljmp
pop
cld
out
push
cmp
mov
les
aas
mov
xchg
adc
scas
inc
xor
jb
lods
sti
or
jb
lods
jo
pop
sar
imul
cmp
fld
mov
or
rorl
les
movsl
cmp
sub
and
sbb
cmc
je
pop
mov
push
pop
push
mov
mov
fs
leave
mov
fcom
lcall
arpl
mov
mov
test
and
aad
push
sbb
add
loopne
lea
ficoml
inc
in
xor
push
adc
xchg
cmp
cmp
dec
push
cmpsb
pop
and
divl
loopne
or
hlt
or
call
xorl
call
mov
push
stos
sub
xor
in
mov
fwait
xchg
inc
sar
push
xor
lahf
out
sub
insl
pop
adc
jb
pop
xorb
lret
and
mov
icebp
inc
jmp
mov
xor
jbe
add
lods
lea
lods
and
cwtl
shll
pop
sahf
in
mov
cmc
pushl
inc
jb
or
xchg
pop
scas
outsl
out
imull
add
push
or
call
les
insb
xchg
aam
sub
xchg
aad
outsl
jnp
mov
sbbb
dec
xor
xor
mov
jl
jb
xchg
lret
cmp
sub
int
sbb
xlat
jge
rorb
or
call
int3
ds
ss
mov
in
push
sbb
lock
push
push
mov
and
fidivs
jae
ja
sbb
rorb
cmpsb
mov
pop
adc
decb
sub
adc
aas
fdivr
xchg
xor
repz
mov
rcrb
mov
fidivs
xor
dec
les
cmp
stos
mov
in
xchg
or
ret
jbe
sub
dec
inc
inc
into
add
fs
in
pop
lcall
xor
mov
mov
dec
nop
push
iret
aam
mov
pop
es
pop
pop
push
adc
xor
into
dec
subl
daa
adc
rol
gs
pusha
adc
fisubs
in
pop
jp
inc
test
inc
les
cmc
pop
jne
fdivs
std
enter
inc
sbb
mov
adc
in
or
das
imul
pop
xchg
sub
sti
addr16
mov
sti
jecxz
cli
sub
movsb
push
xchg
push
test
lea
and
cs
jo
je
dec
rcll
inc
sub
xchg
pop
aad
inc
cmp
fsubrl
xchg
add
push
or
loopne,pn
inc
dec
aaa
pusha
rcr
pop
jb
push
ja
cld
xor
popl
sahf
popa
pop
cmp
aam
jmp
repnz
insb
shll
xor
jecxz
ljmp
outsl
insb
xor
pop
push
or
mov
ret
dec
outsb
mov
movsl
lcall
xchg
imull
rorl
cmp
sar
roll
pop
sahf
repnz
in
mov
insl
sahf
pop
inc
hlt
test
clc
jnp
and
xchg
popa
jmp
mov
fdivs
cwtl
fcmovb
fs
lods
or
and
insl
mov
inc
inc
xchg
mov
sub
jo
push
pop
jb
out
inc
les
aad
push
outsb
pushf
pusha
pop
inc
mov
mov
push
fimuls
jbe
scas
fwait
clc
and
test
cmp
mov
stos
out
rorl
pop
push
mov
int
psubb
pop
subb
sbb
roll
jne
xchg
stos
mov
adc
ljmp
sbb
mov
or
ja
lods
out
inc
les
cli
mov
fwait
fs
cmp
ds
xor
les
pop
jb
and
or
jo
pop
jne,pn
loopne
fnstenv
addr16
cld
lods
add
stos
sub
lret
nop
movsb
mov
pop
push
je
pop
pop
push
cmpsb
xchg
movsl
stos
cmp
fstps
scas
inc
lcall
insb
mov
jo
or
pusha
or
mov
gs
jp
pop
daa
adc
cmc
cwtl
sbb
dec
es
pop
mov
rcrl
push
dec
fmuls
push
in
loope
roll
je
xor
pusha
cmpsb
outsb
jl
mov
out
data16
mov
loope
ljmp
insl
movl
jo
fs
rcrl
dec
icebp
cmp
in
daa
loopne
mov
mov
jae
sbb
fstps
dec
ficoms
push
aam
imul
dec
fs
gs
inc
or
call
jmp
sbb
pop
push
idivl
cmpsl
mov
push
fs
sub
clc
dec
inc
imul
xchg
cwtl
mov
fcmovu
ljmp
jmp
add
mov
mov
test
adc
fidivs
ss
fisttpll
stc
mov
add
in
jno
push
lods
jbe
and
jl
rcr
repz
and
add
lds
repz
xchg
out
mov
jbe
mov
aad
sahf
outsl
jno
or
cmpsb
xor
jl
cmp
mov
mov
pop
pop
dec
add
icebp
or
cltd
mov
outsb
cltd
popa
pop
cmp
test
push
mov
mov
sbb
mov
lods
imul
daa
push
jp
cmc
icebp
rorl
and
les
push
js
ss
loopne
xchg
repz
sub
fadds
popf
mov
loope
push
cmp
push
lret
jp
pop
and
xor
lods
cli
or
sub
or
inc
hlt
or
fimull
mov
repz
cwtl
mov
shrb
lods
add
mov
popa
mov
xor
mov
aaa
xchg
pop
adc
pop
pop
icebp
dec
das
pop
fwait
icebp
fcomps
jl
outsb
cmp
out
mov
cmp
pop
pop
ja
mov
lahf
mov
push
bound
mov
add
add
mov
mov
push
std
mov
or
sub
add
out
pop
push
xor
jl
mov
push
or
sub
insb
lahf
inc
in
push
shl
pop
jb
mov
and
pop
idiv
mov
mov
or
ss
push
shrb
mov
add
xlat
inc
xor
cmp
repz
loopne
sub
mov
iret
mov
push
ja
pop
std
push
add
dec
xlat
pop
push
sub
xor
je
les
in
pop
lret
test
and
sti
lret
in
pop
cwtl
pop
inc
or
jmp
or
xchg
inc
pop
pop
or
bound
repnz
adc
jo
and
dec
mov
lcall
outsb
sbb
mov
call
inc
inc
sti
mov
add
fs
or
into
or
imul
or
mov
push
jb
and
clc
aaa
push
mov
repnz
push
ds
aam
ret
stos
push
or
and
je
xor
addr16
int
jmp
or
lods
jo
jmp
sti
daa
lret
les
xor
clc
and
sub
adc
xor
pop
dec
pop
pop
dec
mov
add
je
fistpll
in
fimuls
mov
mov
or
out
sar
fcmovne
aaa
and
mov
jmp
dec
ss
adc
loop
rorb
cmp
ja
sbb
enter
cmp
dec
clc
jp
add
movsw
in
es
inc
push
add
shll
popf
push
jo
sbb
jbe
jne
fstps
shrb
pop
mov
out
loop
cmp
cmp
and
cli
sub
push
jbe
out
ljmp
inc
int3
out
aas
jl
fnstenv
rcr
test
data16
jg
popf
jbe
xor
popa
rcrb
mov
mov
ds
aas
out
outsl
jmp
insb
test
cld
mov
xor
or
sub
lods
movl
adc
xchg
xchg
xchg
or
inc
mov
pop
into
mov
cli
jns
push
lret
pop
inc
lods
sti
mov
ja
xchg
insl
fldcw
movsl
repz
xor
xor
mov
sub
push
cmpsl
pop
pop
xchg
or
inc
xchg
repz
repz
stos
imul
ficoml
jne
fnstenv
mov
mov
ljmp
xor
pop
mov
xor
pop
mov
mov
fcoms
adc
or
aas
xchg
aad
enter
sti
mov
mov
fadds
mov
dec
ret
jne
les
enter
jl
lods
sti
pop
or
sbb
ret
pusha
mov
outsl
add
xchg
lods
fisttpll
fldl
mov
fists
mov
push
leave
dec
les
and
popa
cmc
pushl
inc
add
xchg
pop
adc
mov
repnz
test
mov
repnz
cmp
pop
or
negb
pop
xor
mov
push
inc
cmp
pop
adc
imul
pop
inc
cmp
mov
xor
xchg
add
jb
lods
cmpsl
xchg
mov
pop
dec
or
mov
inc
xor
mov
pop
or
add
sub
insb
movsb
sub
not
ficomps
cmp
cmp
jmp
pop
cmp
jne
ret
data16
mov
add
xor
jb
add
mov
inc
dec
lahf
and
mov
movsl
aaa
and
or
or
dec
ljmp
aaa
cmc
adc
mov
je
pop
rclb
push
dec
mov
lock
adc
scas
repz
js
shll
std
sbbl
orb
out
sbb
push
ret
mov
aaa
pop
nop
xor
data16
lods
push
leave
mov
or
mov
sar
or
arpl
cmp
jg
es
and
jno
out
push
lret
pop
or
cmp
mov
aaa
or
iret
pop
shll
lods
jge
jmp
pop
cmp
add
pop
ds
pop
push
xchg
ss
jns
in
jb
lods
xchg
cs
test
int3
jns
aad
dec
int3
cs
push
add
pop
adc
mov
add
pop
sahf
push
lea
or
in
dec
pushf
in
push
xchg
mov
inc
sbb
shlb
dec
les
sbb
clc
pop
call
adc
adc
fmuls
jns
mov
test
loopne
sub
movsb
out
xchg
lret
stc
xchg
add
insb
mov
cwtl
pop
aad
pop
into
loopne,pn
pop
jo
je
rcrl
outsb
mov
dec
add
and
je
mov
pop
or
jo
out
loop,pn
cmp
cld
popf
adc
js
imul
jl
adc
jl
mov
rolb
mov
stos
sub
jle
inc
mov
dec
inc
iret
sbb
jne
fstps
mov
pushl
fs
or
lret
pop
jb
divl
mov
pop
inc
lods
sti
mov
in
cmp
inc
cwtl
or
fisubrl
mov
mov
or
cli
mov
or
call
sbb
jge
add
cli
sub
jne
out
je
out
data16
jbe
adc
push
dec
shl
mov
push
sbb
outsl
inc
divl
xchg
stc
xlat
cmp
push
inc
mov
mov
mov
pop
incb
jl
shrb
sti
mov
outsb
ljmp
mov
cmp
and
mov
int
lock
pop
lods
sti
mov
and
pop
inc
add
pop
jbe
mov
cmp
popl
push
xor
ljmp
pushf
cld
out
push
cmp
jne
addr16
push
jmp
rcl
cli
jne
xor
lea
fwait
scas
call
inc
xor
jp
adc
mov
sub
imul
pop
jb
or
out
pop
cmp
xor
cmp
fimuls
jbe
imul
test
inc
jbe
lods
sti
imul
int3
gs
push
adc
xorl
inc
jae
lods
sti
daa
enter
fbld
fnsetpm(287
loopne
or
dec
outsb
aaa
cmp
std
mov
stc
xor
out
ljmp
icebp
imul
lods
xchg
sub
mov
jbe
ret
sahf
jecxz
fwait
rcrb
testl
or
scas
lods
test
mov
jb
arpl
aas
cs
sub
es
xor
mov
and
sahf
pop
or
fidivl
pop
add
addr16
lods
sub
and
in
in
xor
cwtl
scas
jb
sbb
cmp
push
cltd
aam
and
decl
and
aam
mov
imul
adcb
faddp
js
pop
idivb
and
pop
decb
sbb
or
rcrl
jne
adc
fsubl
or
mov
scas
jb
fists
pop
cmp
in
push
punpckhwd
pop
stos
fs
mov
test
notb
mov
or
sbb
popf
lea
test
cmp
push
cmp
leave
call
outsb
add
mov
jge
mov
mov
add
mov
sub
jg
negb
jnp
sbb
lret
inc
out
out
jp
push
pop
mov
pop
mov
inc
lret
push
mov
sbb
out
mov
outsl
fwait
movsb
adc
jecxz
fmull
push
or
pop
insl
cmp
and
movsb
in
pop
lret
movsl
push
or
lods
sti
or
and
pop
les
les
in
ret
data16
sahf
mov
mov
or
cwtl
xor
jb
xchg
mov
ljmp
xchg
gs
lods
mov
xlat
dec
mov
ja
imul
ret
gs
lahf
xor
sarl
ficompl
mov
loope
pop
inc
dec
pushf
out
mov
loop
aam
cs
sub
mov
mov
xchg
les
mov
repnz
es
and
ja
dec
and
movsb
adc
mov
fstps
mov
adc
arpl
mov
cmp
pop
xor
into
mov
inc
xor
lahf
inc
pop
pop
mov
hlt
fcomps
movsb
push
cmp
pop
pop
dec
or
mov
sub
add
aaa
xchg
pop
fwait
jecxz
pop
jb
loope
or
mov
or
cmp
add
fimull
ret
pop
jb
cmp
inc
pop
pop
dec
jb
aad
repnz
out
jl
leave
les
and
xor
std
mov
mov
std
lods
loopne
jo
outsb
mul
lods
sti
mov
es
ret
mov
fcom
sub
dec
mov
test
adc
adc
loop
cwtl
adc
std
pop
push
sub
inc
ret
add
mov
sti
pop
outsl
sub
ds
int3
inc
add
std
cmp
pop
jb
lods
jo
add
or
in
dec
pusha
in
push
sahf
push
addr16
jmp
xchg
pop
or
int3
fsubl
insl
sbb
cltd
jo
loop
neg
xchg
add
and
fsts
js
insl
xor
cmp
fwait
sub
mov
int3
repz
jnp
xchg
or
mov
sub
outsb
sbb
out
shl
pop
jb
inc
add
pop
inc
dec
xchg
ret
stc
mov
mov
addr16
cli
xchg
inc
fsubs
daa
dec
sbb
mov
int
dec
ss
bound
ret
lods
fistps
xlat
arpl
inc
int
add
fsub
std
adc
fcompl
cmp
movb
sbb
call
mov
loopne
fadds
ret
repnz
mov
sbb
xor
inc
jl
rcrl
int3
cmp
pop
or
insb
jbe
or
aam
and
js
ret
adc
sub
aas
and
subl
cmpsl
jmp
into
push
aad
loop
ss
je
pop
rcrb
mov
mov
repz
sbb
and
les
rol
jae
je
das
loopne
add
inc
mov
cmp
lds
arpl
xchg
addr16
dec
ja
sbb
mov
nop
jmp
outsl
in
insb
stos
xchg
xor
aam
fcomps
clc
mov
pop
std
test
fstpt
ljmp
aad
les
and
and
mov
pop
les
xchg
fmul
ds
cs
out
sbb
pop
cmp
sti
mov
les
and
dec
js
jecxz
pop
sbb
inc
int3
aaa
repz
cmp
mov
adc
xor
adc
repnz
xchg
pop
cmp
insb
rcl
sbb
fcomps
sub
adc
adc
loop
cmp
mov
sub
cli
xchg
inc
popa
jbe
mov
int
mov
or
scas
inc
xor
mov
sub
sub
pop
aad
dec
fldenv
jae
rcll
aam
arpl
jle
jmp
xchg
pop
data16
xchg
cmpsl
jge
lock
in
dec
xor
push
jge
or
test
push
inc
adc
pop
stos
fcoms
ds
fs
pop
ljmp
cld
jne
sar
pushf
adc
pop
jb
xor
mov
decb
lods
jb
popa
inc
or
int
es
inc
fisubs
imul
cmpsb
ds
xchg
fisubs
mov
stc
inc
adc
in
es
pop
into
mov
mulb
pop
jb
mov
pop
jb
movsl
std
shrl
jb
add
cmc
sbb
pop
lods
test
xor
pop
jmp
int
cli
out
in
pop
jb
cs
inc
xor
mov
mov
pop
sahf
lock
ljmp
ret
data16
mov
ljmp
fstps
xchg
xor
jb
add
aad
push
and
mov
cld
aad
mov
sbb
sti
mov
mov
mov
sahf
test
mov
mov
fadds
outsb
xchg
lahf
mov
push
dec
mov
add
xchg
jle
repz
mov
les
pop
adc
stos
or
cwtl
or
testb
arpl
int
pop
mov
cmp
jle
es
xor
mov
pop
pusha
mov
sti
stc
pop
adc
cmp
pop
cmc
and
aam
and
bound
jne,pn
lock
loopne
leave
in
dec
stos
or
pop
add
js
dec
and
pop
jae
sub
dec
dec
subb
pop
insb
push
mov
dec
ret
cmp
inc
jae
cs
dec
cld
push
je
ds
mov
jne
shrb
lds
out
push
dec
mov
jmp
fcomps
lea
xchg
adc
shl
mov
mov
ror
aaa
ljmp
mov
jo
pop
rol
lods
sub
hlt
clc
nop
xor
jmp
imul
jecxz
out
lea
les
fs
filds
push
mov
pusha
pop
call
adc
adc
stos
fsubs
xchg
xchg
mov
cmp
pop
dec
mov
fst
xor
loopne
inc
mov
lods
mov
add
xchg
insl
dec
or
scas
lods
mov
imul
fisubrl
xchg
push
xchg
cmp
stc
mov
fstps
mov
sub
fcoms
sbb
inc
push
mov
mov
jg
enter
inc
ja
dec
es
je
push
in
dec
and
xchg
pop
add
or
pop
add
and
xor
mov
out
mov
lods
sti
repnz
xor
mov
jg
es
push
sbb
je
mov
mov
pop
xor
pop
pop
jb
mov
pop
ret
push
int
rcl
cli
xchg
test
push
mov
or
lahf
mov
cs
push
push
or
pop
inc
lods
sti
mov
std
mov
sahf
sti
xor
lcall
jp
scas
cs
xor
xor
mov
fsubr
mov
pusha
mov
push
mov
and
xor
sbb
jnp
cltd
roll
test
jmp
jl
dec
xchg
mov
subl
jne
lods
dec
sahf
shlb
push
xor
lret
or
add
ljmp
pop
popf
les
scas
cmc
ss
dec
jne
push
cwtl
dec
fsubl
add
out
outsl
rcl
imul
out
aaa
mov
mov
xor
pop
jb
xor
sahf
add
jp
mov
sbb
sti
scas
out
orl
fimuls
jae
mov
xor
and
fs
lods
aaa
les
and
loop
cmp
call
jnp
xchg
jno
or
outsl
gs
jb
aaa
jo
sbb
xchg
jb
xchg
bound
lods
sbb
jnp
leave
dec
and
rcl
jae
jo
popf
out
mov
stos
aaa
xchg
push
stc
inc
das
sbb
es
dec
lds
addr16
cmpsb
pop
or
push
fstps
ret
repnz
cmp
mov
repz
pop
test
lret
add
pop
push
inc
arpl
jle
push
xor
cli
xchg
mov
ljmp
icebp
aad
mov
ss
dec
ja
inc
and
jmp
cltd
xorl
imul
jl
insl
and
dec
cmp
fsubrl
mov
pop
les
jo
add
stc
mov
sub
cwtl
daa
push
xor
sbb
test
int
loope
inc
insl
xor
push
ficoms
fadds
mov
insl
jne
mov
bnd
cmp
negl
or
mov
mov
fisubrl
xchg
push
pop
adc
pushf
mov
aaa
and
sahf
sbb
xor
sbb
nop
jno
push
jne
mov
add
fwait
dec
xchg
scas
ds
aad
inc
inc
in
es
inc
int
pop
mov
outsl
fwait
es
xchg
loopne
mov
call
xchg
ret
cmp
or
movsl
or
hlt
push
pop
xchg
mov
or
inc
xchg
dec
pop
or
repz
orl
or
jae
fs
mov
mov
lods
sti
mov
inc
fsubs
les
mov
arpl
mov
inc
dec
cld
sub
mov
pop
push
xchg
cmp
mov
icebp
fiaddl
xor
pushf
jl
jnp
jecxz
cmp
iret
mov
cmp
add
outsl
xchg
mov
fdivrs
pop
dec
or
mov
out
jle
in
ret
pusha
stos
aaa
xchg
pop
ds
mov
sbb
and
sbb
cwtl
and
imul
testb
shlb
dec
aad
mov
cmp
pop
push
cvttps2pi
dec
inc
shlb
jg
mov
ljmp
inc
adc
jecxz
or
mov
in
shl
pop
jb
add
jecxz
jg
out
mov
pop
add
lock
cmp
sbb
mov
mov
enter
shlb
push
push
jbe
xor
push
loope
icebp
shl
pop
jb
sbb
mov
mov
loop
inc
cwtl
sarb
pop
pop
cwtl
cmp
or
jb
lods
jo
aad
xor
push
scas
ljmp
inc
gs
mov
push
dec
mov
push
add
mov
push
mov
add
in
dec
and
pop
loop
cli
je
jbe
popf
lock
icebp
and
pop
ss
aad
lds
and
mov
lods
dec
test
bound
mov
insl
std
popf
out
fimuls
mov
mov
inc
sub
push
outsl
mov
cmp
movb
ds
inc
loop
cmp
inc
int3
ret
or
ds
loop
cmp
enter
add
mov
inc
dec
pop
inc
loopne
dec
test
loope
jb
pop
lea
xchg
in
jno
je
pop
ret
out
mov
mov
and
stos
adc
jmp
movsl
jmp
inc
push
inc
jnp
lods
sti
xor
cmc
cwtl
push
adc
loope
das
jp
inc
dec
imul
insl
ljmp
push
cmpsb
movsl
add
divl
loopne
jmp
push
xchg
in
hlt
or
mov
mov
std
ljmp
dec
cld
sub
mov
mov
cmp
cwtl
push
or
fisttpll
inc
out
jle
out
ret
lods
mov
filds
ljmp
inc
decl
mov
xor
cltd
jl
pop
pop
scas
pop
cmp
jno
or
push
scas
inc
das
sbb
es
dec
mov
fldenv
pop
or
stos
lcall
ljmp
sbb
dec
nop
xor
rcrl
sahf
or
repnz
stos
divl
cmc
loopne
movsb
std
jg
cwtl
ret
lods
xchg
lea
mov
iret
ret
shll
fsts
mov
dec
inc
xchg
add
ret
jecxz
ljmp
sbb
dec
push
out
inc
outsb
dec
nop
mov
rcrl
xchg
out
jnp
ljmp
out
das
in
negb
sti
mov
xor
daa
idivb
es
xchg
jne
inc
xor
pusha
scas
pop
or
stc
and
lret
cli
mov
fs
lea
repz
sub
lods
sti
mov
sub
mov
inc
les
clc
pop
aam
dec
xor
std
mov
mov
adc
xchg
mov
ret
ror
mov
les
cli
mov
call
dec
inc
dec
mov
xchg
dec
movsl
pop
push
xchg
jns
push
add
jb
int
mov
outsl
pushf
outsb
fiadds
sub
push
dec
and
ljmp
les
pop
jb
lods
jo
decb
jbe
shrl
pusha
pop
cmc
inc
iret
lret
scas
jae
cmp
icebp
pop
pop
repz
popa
pop
jnp
es
daa
aam
fmull
xlat
std
scas
mov
jl
aad
pop
mov
jbe
pop
insl
jae
lods
dec
xor
fstps
cmp
ljmp
insl
jo
gs
test
mov
mov
adc
pop
lahf
dec
in
daa
loopne
pop
mov
mov
aad
jae
mov
leave
fdivs
fstps
js
mov
mov
xlat
aam
cmp
add
insb
shr
movsl
mov
jecxz
ljmp
adc
loopne
or
xchg
fsts
mov
push
fs
cmp
push
fchs
cmpsb
pop
inc
incl
mov
popf
out
or
daa
shrl
sahf
xlat
dec
jg
pop
scas
pop
jne
js
lret
loop
cltd
sbb
testl
in
sbb
pop
fnclex
mov
pop
mov
cmpb
inc
adc
inc
fidivl
sbb
call
ds
sarl
mov
mov
mov
push
cmp
xor
nop
out
pop
jb
add
imul
mov
mov
jno
mov
std
mov
mov
stos
pop
cmp
mov
mov
scas
push
mov
fidivl
idiv
mov
mov
pop
or
or
pop
adc
pop
jb
cwtl
or
mov
jne
nop
pop
pop
and
mov
aaa
mov
and
cli
movsl
out
fistpl
call
inc
xor
.byte
inc
lods
