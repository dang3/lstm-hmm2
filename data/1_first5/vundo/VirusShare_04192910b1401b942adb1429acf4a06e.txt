or
test
bound
mov
sbb
pop
cmp
sub
pop
inc
dec
push
push
xchg
mov
enter
call
pop
pop
daa
sub
pop
sub
js
push
xchg
mov
enter
call
xor
push
dec
push
cmp
and
pop
or
add
hlt
mov
hlt
iret
clc
mov
out
rolb
insb
fstpt
or
out
jns
push
add
inc
das
in
jecxz
int
add
xor
mov
std
insl
jae
call
movsl
inc
mov
jo
nop
es
int
mov
iret
inc
push
jae
popf
mov
outsb
jle
addr16
mov
loop
iret
pop
ret
cwtl
popl
fs
sbb
into
call
mov
insl
bound
repz
jmp
mov
pop
clc
call
pop
push
adc
push
std
addr16
mov
mov
xor
add
add
cs
push
fiadds
movsl
and
dec
add
imul
cmpsl
test
fadd
enter
call
pop
cmp
sub
pop
inc
dec
push
js
push
aam
out
fwait
mov
lea
push
inc
dec
inc
sub
add
adc
loop
repnz
ret
mov
mov
outsb
inc
je
push
adc
cmp
xor
out
ret
cmpsb
aad
rcrb
out
negl
pop
or
cmp
sub
pop
inc
dec
push
js
push
xchg
mov
enter
call
pop
cmp
sub
pop
inc
dec
push
js
push
pushl
mov
mov
xchg
sbb
inc
pop
mov
pop
stos
mov
in
stos
pop
push
sub
add
std
subb
frstor
ret
jmp
pop
lods
pop
mov
in
in
jb
andl
pushf
sbb
sub
inc
jle
cmp
jb
movsl
inc
leave
outsb
hlt
xorb
les
push
idivl
leave
fwait
jecxz
aas
cltd
mov
dec
ja
cmp
mov
push
dec
clc
jo
adc
cmp
popa
lahf
mov
into
pop
jnp
adc
xchg
lea
add
cwtl
cmp
in
cmp
rclb
cs
push
test
stos
mov
mov
lods
dec
call
jecxz
fsubrs
jp
stos
and
outsb
pusha
imul
add
subl
movsb
adc
je
xor
cmpsb
jl
and
shr
xor
pop
sub
add
pop
sbb
and
insl
ret
push
push
mov
fdiv
fcoml
jnp
push
xchg
sub
int3
inc
xchg
test
in
xchg
inc
mov
push
mov
sub
or
aaa
cld
add
sti
lock
outsb
push
sbb
sub
xor
jle
loope
xor
adc
jno
pusha
sub
mov
imul
mov
fcompl
jg
ja
mov
loopne
idiv
pushf
lcall
mov
retw
in
xor
ret
jg
sub
out
scas
lret
test
push
test
push
jo
push
pop
inc
stos
or
jns
jnp
arpl
scas
lods
pushl
add
test
mov
jns
in
adc
or
mov
sub
mov
xchg
xchg
shlb
test
sub
sbb
cli
mov
aam
xlat
fwait
mov
out
push
adc
jge
jb
hlt
adc
cmp
lock
mov
cmp
pop
pop
mov
pop
xchg
mov
ret
lret
int3
inc
lret
daa
dec
imul
mov
dec
aad
cmp
jne
fcom
jno
inc
lea
mov
push
mov
mov
mov
pusha
les
inc
test
cmp
out
int
fldl
pop
insl
xchg
cwtl
ja
jp
add
pop
gs
and
sarb
testb
andb
test
sarb
outsl
adc
adc
pop
popa
pushf
xor
fisttps
cmp
push
mov
dec
adc
adc
cld
mov
pop
fistpll
or
mov
lahf
push
jmp
lcall
cmp
push
leave
insl
push
push
xchg
mov
stos
lods
inc
dec
fidivl
ss
test
xor
data16
aas
sub
xlat
repnz
js
or
xchg
imul
lea
cmp
mov
and
inc
cmp
or
les
add
cmp
xchg
xchg
pusha
jmp
popf
inc
pop
jns
xchg
loop
jecxz
mov
xor
clc
dec
leave
sub
sbb
jae
loopne
shl
jae
mov
sahf
movsl
lds
stc
or
mov
xchg
fldenv
adcb
xchg
adc
lock
dec
loopne
cmp
mov
fldcw
das
ljmp
iret
mov
lret
repz
cmpsb
in
push
xchg
adc
mov
mov
or
and
ja
add
test
mov
inc
fs
rcll
insl
clc
roll
mov
mov
int3
sub
inc
jecxz
push
adc
push
in
adc
pop
push
mov
mov
jno
lcall
jmp
pop
mov
xchg
out
cmp
sub
pushfw
cwtl
sbb
mov
xchg
psubusw
seto
js
inc
dec
xor
sub
push
pop
into
pop
mov
xchg
mov
out
scas
mov
stos
xchg
fsubl
xor
loop
jns
outsl
mul
push
ljmp
cmp
outsb
xlat
or
adc
sti
add
in
mov
pop
daa
and
and
aaa
mov
xchg
int3
jae
or
inc
adc
dec
test
jno
mov
fisttpll
popf
or
or
loope
push
sbb
jg
lret
dec
sub
test
lea
sbb
jecxz
add
mov
lret
shrl
ljmp
and
adc
cmp
mov
filds
pop
push
mov
fidivrl
in
cmc
lods
xchg
mov
pop
mov
loop
jno
out
add
addl
idivl
fcoms
sub
sub
xchg
into
es
cmpsl
inc
sbb
push
pop
adc
fwait
add
nop
jl
into
sbb
pop
jmp
inc
cmp
lock
clc
sub
sub
js
mov
add
add
pop
add
faddp
repz
aad
outsl
dec
jno
pusha
sub
inc
sbb
pop
in
cmpsb
xchg
mov
call
add
popa
outsl
bound
fwait
ficompl
xchg
lea
mov
jl
cmp
shl
mov
dec
in
push
inc
lods
mov
xlat
xlat
das
ljmp
add
sub
adc
in
pop
test
adc
lcall
xchg
inc
rclb
or
pusha
add
insl
dec
push
les
sub
or
sub
push
sub
jne
iret
fstpl
and
mov
subl
sub
jge
jne
or
inc
inc
inc
insl
icebp
cs
ja
inc
and
sbb
dec
cli
push
xor
cmp
mov
loope
add
cmc
pushf
out
add
mov
fists
cmp
pop
lods
jne
pop
sarl
ja
pop
inc
testb
cmp
mov
mov
or
clc
pushf
pop
movsl
sbb
arpl
sbb
xchg
jbe
push
lea
push
imul
dec
dec
mov
psraw
lahf
out
push
scas
loopne
mov
lea
add
repz
clc
andl
sbb
out
cmp
add
sbbl
pop
scas
pop
mov
fiadds
or
and
mov
cmp
jns
xchg
xchg
popf
ret
fcoms
andb
xchg
mul
sub
outsl
dec
test
mov
mov
cmp
push
aad
std
pop
push
sbb
adc
shlb
jnp
test
mov
pop
pop
into
add
repnz
dec
inc
dec
mov
ret
gs
and
cld
xor
test
xor
sbb
fistl
jg
sub
push
pop
cli
ss
push
jbe
cmp
push
ss
cmp
enter
mov
daa
mov
loope
jno
jmp
add
out
mov
pop
scas
in
loopne
and
sbb
fwait
xchg
jns
jp
outsl
and
daa
jg
shlb
shlb
or
or
sarb
inc
jns
dec
and
mov
stos
mov
mov
sub
sbb
fwait
orl
icebp
jl
pusha
push
stos
nop
xchg
ret
sub
ret
sti
adc
mov
mull
outsl
int
test
hlt
pop
fmuls
cmc
inc
aad
jnp
sti
mov
xor
cli
ds
faddl
pushl
into
mov
push
outsl
es
bound
jns
inc
test
orl
int
imul
adc
pop
jge
sbb
popa
adc
incl
jb
cmc
stos
xchg
fcos
dec
sti
lret
loopne
jl
dec
jns
inc
push
aad
xor
mov
jecxz
fs
push
add
jp
pop
jne
cwtl
lret
shll
adc
jle
out
inc
ja
fisttpl
cwtl
mov
jno
push
in
std
ret
sbb
sub
incl
inc
adc
mov
mov
add
mov
cmp
inc
pop
jecxz
add
cwtl
add
or
das
cmovne
add
mov
dec
test
lods
bound
pop
mov
inc
ficoms
int3
jecxz
sti
mov
jne
push
cmc
pop
movsl
lcall
insb
mov
cmp
push
cmpsl
sbb
jmp
push
jp
stos
stc
inc
or
inc
stos
push
dec
mov
or
mov
xor
aaa
into
xchg
xor
orl
dec
inc
loopne
das
mov
lds
ljmp
cmp
loop
into
pop
aas
push
loopne
sub
mov
sbb
cmp
popf
imul
mov
mov
mov
pop
into
bound
push
mov
cmp
inc
mov
xchg
mov
xchg
mov
mov
push
mov
push
iret
jecxz
lret
loop
hlt
sub
fidivrs
inc
sub
adc
addl
lret
add
adcb
mov
mov
dec
in
rorl
inc
push
push
xchg
insb
xchg
je
mov
pop
in
int
adc
fmuls
sbb
mov
andl
xor
enter
pop
ficompl
arpl
lods
push
stos
pop
pop
fwait
push
int
sub
dec
xchg
dec
fsub
mov
sub
cmp
or
and
mov
adc
daa
sub
jp
loop
xchg
or
xor
mov
jmp
loope
sbb
inc
xor
cltd
pop
xchg
dec
outsl
or
mov
out
andb
popa
aam
xchg
ljmp
sarl
or
cmp
loope
loop
clc
mov
push
lcall
and
mov
insb
inc
sub
cmpsl
adc
or
or
jo
lret
std
pushf
xchg
dec
fildll
in
int
mov
mov
aaa
hlt
push
icebp
ljmp
add
dec
lock
add
cmpsb
dec
out
xor
inc
inc
or
je
push
fs
scas
jecxz
mov
mov
mull
inc
in
sbb
lret
cmp
jne
mov
les
std
and
in
xor
inc
mov
mov
addr16
mov
adc
xchg
push
sysret
fdivrs
mov
xlat
lock
or
fnsave
jb
fsubr
inc
addr16
hlt
and
pop
mov
stos
mov
std
jne
js
pop
cmpsl
divb
inc
or
push
sub
gs
out
dec
movsl
xlat
test
cltd
mov
xchg
push
mov
add
xor
repnz
or
lcall
sti
lods
bound
pop
cmp
pop
xchg
mov
adc
sbb
dec
out
cmp
cli
daa
and
dec
push
mov
sbb
ret
pusha
mov
repnz
aaa
sub
fdivl
rclb
les
aas
sbb
pusha
cmpb
in
xor
xor
xchg
or
xchg
aam
mov
add
leave
iret
pop
loop
cwtl
cmpb
cmpsl
sbb
mov
pop
and
sbb
mov
arpl
or
push
incl
push
in
and
push
push
dec
mov
pop
cltd
repz
jo
push
jmp
loope
push
outsl
repnz
cmpsb
lret
dec
or
jp
push
cmp
icebp
fdivl
pop
ss
mov
lret
imul
pop
lcall
icebp
adc
addr16
push
mov
fstpt
test
stos
and
adc
into
enter
cmp
mov
fldcw
xor
xlat
lods
cmpl
mov
push
jg
or
cltd
pop
add
xchg
sub
jmp
mov
mov
dec
mov
xor
fwait
sub
and
xchg
xchg
rolb
pop
dec
lea
pop
gs
aad
push
fldt
mov
addb
ss
leave
mov
inc
jp
movsb
fdivs
xor
sub
pop
call
sbbl
lock
jo
stos
mov
inc
arpl
sbb
xchg
jb
test
fmul
push
or
xchg
sbb
fcmovu
sahf
mov
xor
pop
mov
shll
sbb
jns
imul
cmp
movsl
ss
lds
xchg
cmc
mov
dec
ret
ja
mov
sub
popf
mov
test
daa
rorb
inc
xor
lea
xchg
pop
and
mov
out
push
fsubrs
sub
inc
lret
push
pop
lods
insl
push
push
xlat
cli
in
mov
sbb
push
mov
xlat
jb
leave
push
jne
subl
mov
imul
or
test
lcall
dec
and
adc
jl
stc
push
gs
loopne
push
mov
mov
scas
lahf
inc
lret
push
shrb
mov
pop
call
mov
js
sbb
xchg
fdivl
lahf
sbb
movsl
popa
and
ljmp
js
aas
int
jo
mov
les
mov
movsl
stos
addr16
sub
frstor
negl
push
push
in
repnz
js
xchg
xor
lcall
pop
mov
jecxz
cltd
or
push
dec
sub
add
mov
push
xchg
lods
mov
sahf
pop
push
iret
out
fsub
jle
cmpsl
std
mov
jne
xchg
adc
out
dec
sbb
pop
push
xchg
xor
mov
cmp
or
push
popa
pushf
sahf
mov
repnz
dec
push
or
xchg
in
dec
push
adc
mov
jae
push
dec
in
es
push
mov
push
mov
stos
add
ret
into
dec
push
pop
nop
xchg
mov
fs
in
lcall
jb
movsl
jbe
cltd
xor
adc
cmpsb
jg
faddl
mov
test
and
ficoms
or
mov
inc
inc
les
cmp
nop
cmpsb
rcrb
int
fadds
dec
fld
sub
ret
xchg
sub
je
mov
imul
or
xchg
add
int
int3
and
and
inc
cmp
push
adc
adc
aaa
inc
pop
xchg
mov
xchg
xchg
xchg
jb
dec
into
push
cmpb
pop
ljmp
jno
or
mov
add
cmp
out
pop
dec
adc
jg
cmp
xchg
ficoml
pop
cmc
cmp
sbbb
adc
push
xor
mov
cmp
or
dec
jge
xchg
lods
mov
cli
sbb
sbb
dec
in
jns
rcl
sarb
nop
adc
pop
movsl
and
xor
add
sar
mov
push
mov
inc
cmp
aas
aaa
in
add
push
push
fstpl
inc
cmc
les
jmp
ret
outsl
ljmp
nop
imul
mov
add
mov
je
scas
and
adc
movb
mov
jo
add
inc
adc
push
clc
dec
sub
xchg
pop
es
clc
cmp
push
cmp
jae
push
insl
js
cmp
es
les
nop
xchg
xor
popa
je
ret
fstl
cmpb
fnstenv
pop
lds
es
dec
pop
subb
cmp
stos
es
arpl
das
add
jo
test
aas
sub
das
mov
mov
or
movsb
inc
sub
mov
fsub
and
mov
mov
ljmp
mov
cwtl
dec
inc
push
jp
movsb
jae
cmc
dec
sub
mov
mov
test
adc
ds
int
shlb
jnp
lcall
mov
adc
push
hlt
jmp
or
daa
lea
ror
nop
xchg
mov
cli
outsl
in
xor
arpl
test
add
or
pop
jo
fs
mov
cltd
and
xchg
jp
push
push
jo
mov
lret
outsb
mov
dec
push
js
jnp
mov
fmull
mov
sub
in
je
bound
ret
fistpl
adc
sub
sbb
pop
xor
imul
imul
cltd
lods
cmp
mov
jbe
cmp
inc
mov
pop
inc
push
loop
sub
sbb
roll
or
pop
and
xchg
cld
movsb
inc
cmp
xor
push
mov
shrl
push
jmp
dec
jp
cmpsl
aaa
frstor
pop
fmull
frstor
test
adc
xchg
jle
cmp
sbbb
sub
adc
push
mov
loopne
sbb
dec
aam
into
xchg
mov
adc
std
push
jl
push
mov
mov
sarb
cwtl
push
aad
daa
xor
jl
mov
jb
jecxz
lret
adc
push
loopne
xchg
inc
es
rcrl
pop
push
dec
into
jecxz
pop
ret
xor
jle
xlat
mov
push
jns
fnsave
cmp
fs
xor
pop
xor
dec
mov
enter
das
enter
xchg
cs
or
push
das
xchg
or
sub
lret
jns
das
lret
mov
stos
cmpsb
jne
and
xor
mov
aad
test
je
insl
xchg
fisubl
out
jge
clc
inc
jl
and
in
sub
sahf
pop
mov
add
pop
mov
inc
enter
jg
add
xorl
sahf
bnd
sti
test
cmpsl
jb
loop
dec
adc
push
xchg
mov
cmp
and
add
jmp
testl
cmp
out
lret
cwtl
sub
out
pop
xor
jg
mov
mov
fisubrs
sbb
sti
les
cmp
push
xchg
mov
mov
enter
call
pop
cmp
sub
pop
inc
dec
push
js
push
xchg
mov
enter
call
pop
cmp
sub
pop
inc
dec
push
js
push
xchg
mov
enter
call
pop
cmp
sub
pop
inc
dec
push
js
imul
cmpsl
test
fadd
enter
call
mov
das
iret
shrb
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
push
push
cmpl
mov
je
cmp
je
mov
push
mov
call
mov
xor
mov
mov
movl
test
je
mov
add
mov
xor
xor
push
call
cmpl
jne
movzbl
push
pop
cmp
sbb
and
add
mov
mov
movzwl
movzwl
xor
movzwl
xor
xor
xor
pop
test
jne
mov
not
mov
or
mov
leave
ret
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
movb
mov
movzbl
mov
sub
movzbl
sub
je
mov
add
mov
call
push
pushl
call
mov
push
push
push
pushl
call
mov
sub
mov
mov
sub
mov
jns
mov
and
or
mov
jmp
fldl
call
inc
mov
mov
pushl
pushl
pushl
push
push
call
add
mov
movl
mov
sub
je
call
push
push
push
pushl
call
push
push
push
push
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
mov
movzbl
mov
sub
movzbl
sub
je
movl
push
pushl
call
mov
pushl
call
movl
push
call
movl
andl
jmp
movl
movl
andl
jmp
mov
inc
mov
mov
sub
add
mov
movzwl
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
call
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
add
add
bound
add
add
push
sub
add
add
sbb
add
add
jl
add
jl
add
inc
outsl
add
jl
add
fisubrs
add
aas
add
jl
add
add
add
jl
add
jl
add
jl
add
hlt
add
ljmp
add
js
add
mov
add
js
add
bound
add
add
push
sub
add
add
sbb
add
add
jl
add
jl
add
inc
outsl
add
jl
add
fisubrs
add
aas
add
jl
add
add
add
jl
add
jl
add
jl
add
inc
das
add
dec
das
add
subb
add
add
js
add
bound
add
add
push
sub
add
add
xchg
add
cmp
add
jl
add
jl
add
jl
add
inc
outsl
add
jl
add
fisubrs
add
das
add
jl
add
and
add
jl
add
jl
add
jl
add
and
add
add
add
js
add
bound
add
add
push
sub
add
add
sbb
add
add
jl
add
jl
add
inc
outsl
add
jl
add
fisubrs
add
aas
add
jl
add
add
add
jl
add
jl
add
jl
add
mov
add
ret
add
xor
add
add
js
add
bound
add
add
push
mov
push
lea
push
mov
call
pop
pop
pop
ret
push
lea
sub
mov
xor
mov
push
mov
push
lea
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
mov
call
mov
sub
movl
movzbl
mov
cmp
je
movl
mov
movl
mov
call
mov
mov
sub
movzbl
mov
movzbl
sub
je
push
push
int3
mov
push
push
call
xor
push
mov
mov
call
push
push
push
push
mov
call
push
push
call
pushl
mov
pushl
call
mov
call
push
push
push
push
call
call
pushl
call
push
pushl
pushl
call
pop
mov
pop
jmp
movl
movl
call
call
pushl
pushl
pushl
push
call
jmp
push
pushl
call
pushl
mov
call
jmp
lea
push
push
call
lea
push
push
call
jmp
push
call
xor
mov
xor
pop
call
add
leave
ret
mov
andl
andl
mov
mov
push
movl
movl
movl
movl
movl
movl
mov
call
ret
push
mov
sub
mov
xor
mov
push
push
mov
movb
call
xor
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
movb
movb
mov
mov
movb
movb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
call
mov
movzbl
sub
je
int3
call
call
push
call
pushl
movl
push
movb
movb
movb
movb
movl
movb
movl
movb
movl
movl
movb
movl
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
add
test
jne
inc
jmp
mov
jmp
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
push
lea
push
call
test
je
mov
mov
pop
xor
pop
call
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
clc
xor
add
add
dec
xor
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
lret
xor
add
xor
add
xor
add
xor
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
add
in
xor
add
xor
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
test
add
shlb
add
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xorb
add
xor
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
je
push
mov
sub
and
fstpl
cvttsd2si
leave
ret
cmpl
je
sub
fnstcw
pop
and
cmp
je
push
mov
sub
and
fld
fsts
fistpll
fildll
mov
mov
test
je
fsubrp
test
jns
fstps
mov
xor
add
adc
mov
adc
jmp
fstps
mov
add
sbb
mov
sbb
jmp
mov
test
jne
fstps
fstps
leave
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
sbb
add
push
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jmp
add
fdivs
add
enter
shlb
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
movsb
add
enter
lock
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
aaa
add
dec
aaa
add
push
aaa
add
pop
aaa
add
fs
add
insb
aaa
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
aaa
add
mov
aaa
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
cmp
jne
repz
jmp
mov
push
mov
cmpl
jne
call
pushl
call
push
call
pop
pop
pop
ret
push
push
call
xor
mov
lea
push
call
push
pop
mov
mov
cmp
jne
mov
cmpl
jne
mov
cmp
jne
cmpl
jbe
xor
cmp
setne
mov
jmp
mov
xor
inc
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
cmp
je
push
call
pop
call
test
je
movzwl
jmp
push
pop
push
push
push
push
call
mov
cmp
jne
push
call
call
mov
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmpl
jne
push
call
call
movl
mov
jmp
xor
inc
ret
mov
movl
mov
call
ret
call
jmp
push
mov
sub
mov
mov
mov
mov
mov
shr
jmp
add
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
mov
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
cltd
mov
mov
xor
sub
and
xor
sub
cltd
mov
xor
sub
and
xor
sub
mov
or
jne
mov
mov
and
mov
cmp
je
sub
push
push
push
call
add
mov
mov
test
je
mov
mov
add
sub
mov
add
sub
mov
mov
mov
mov
rep
mov
jmp
cmp
jne
neg
add
mov
mov
mov
mov
rep
mov
add
mov
add
mov
sub
push
push
push
call
add
mov
jmp
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
pop
ret
push
push
call
andl
movapd
movl
jmp
mov
mov
mov
cmp
je
cmp
je
xor
ret
xor
inc
ret
mov
andl
movl
mov
call
ret
mov
push
mov
sub
xor
push
mov
mov
mov
push
pushf
pop
mov
xor
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
mov
mov
mov
mov
cpuid
mov
mov
pop
testl
je
call
test
je
xor
inc
jmp
xor
pop
leave
ret
call
mov
xor
ret
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
mov
push
mov
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
mov
push
mov
push
mov
push
call
pushl
call
add
cmp
ja
test
je
pop
pop
ret
mov
push
mov
call
pushl
call
pushl
call
push
call
add
pop
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
pushl
call
pop
ret
mov
push
mov
pushl
call
pop
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
push
mov
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
cmpl
je
push
call
pop
test
je
pushl
call
pop
call
push
push
call
pop
pop
test
jne
push
call
mov
movl
call
cmpl
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
push
call
push
call
pop
andl
xor
inc
cmp
je
mov
mov
mov
cmpl
jne
pushl
call
pop
mov
mov
test
je
pushl
call
pop
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
pushl
call
mov
call
mov
call
pushl
call
mov
pushl
call
add
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
push
mov
call
pop
push
mov
call
pop
movl
call
cmpl
jne
mov
push
call
pop
pushl
call
xor
inc
cmpl
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
mov
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
mov
pop
ret
mov
push
mov
push
push
push
mov
push
push
xor
xor
mov
cmp
je
inc
mov
cmp
jb
cmp
jae
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
je
cmp
je
push
mov
push
mov
push
call
add
test
je
push
push
push
push
push
call
add
push
mov
push
push
movb
call
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
inc
pop
cmp
jbe
push
call
sub
add
push
mov
push
sub
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
xor
push
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
pushl
push
push
call
add
test
je
push
push
push
push
push
call
add
push
push
push
call
add
jmp
push
call
mov
cmp
je
cmp
je
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
pop
pop
pop
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
jne
push
call
push
call
pop
pop
ret
ret
mov
push
mov
push
push
push
call
mov
test
je
mov
mov
push
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
test
je
mov
mov
test
jne
xor
jmp
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
add
cmp
jge
imul
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
pop
pop
pop
leave
ret
mov
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
cmpl
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
test
jne
push
inc
push
call
mov
pop
pop
mov
test
je
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
add
add
cmpb
jne
pushl
call
andl
andl
movl
xor
pop
pop
pop
pop
ret
pushl
call
andl
or
jmp
mov
push
mov
push
mov
push
xor
push
mov
mov
mov
movl
cmp
je
mov
addl
mov
mov
cmpb
jne
xor
cmp
mov
sete
inc
mov
jmp
incl
test
je
mov
mov
inc
mov
mov
movzbl
push
inc
call
pop
test
je
incl
cmpl
je
mov
mov
incl
mov
inc
mov
mov
test
je
cmpl
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
movb
inc
incl
test
jne
mov
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
movsbl
push
test
je
call
pop
test
je
mov
mov
incl
mov
inc
incl
mov
mov
incl
mov
jmp
call
pop
test
je
inc
incl
incl
mov
inc
jmp
test
je
movb
inc
mov
incl
mov
jmp
mov
pop
pop
test
je
andl
incl
leave
ret
mov
push
mov
sub
push
xor
push
push
cmp
jne
call
push
mov
push
push
mov
call
mov
mov
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
pop
cmp
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
mov
push
mov
mov
sub
push
push
mov
push
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
jne
xor
jmp
mov
cmp
je
inc
inc
cmp
jne
inc
inc
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
pop
mov
cmp
je
push
push
pushl
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
jne
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
push
mov
call
mov
pop
cmp
jne
push
call
jmp
pushl
push
push
call
add
push
call
mov
pop
pop
pop
leave
ret
push
push
call
xor
mov
lea
push
call
movl
push
push
pop
push
call
pop
pop
cmp
je
mov
mov
lea
jmp
movb
orl
movb
mov
movb
movb
movb
mov
movb
add
mov
add
cmp
jb
cmp
je
mov
cmp
je
mov
lea
lea
mov
mov
cmp
jl
mov
movl
jmp
push
push
call
pop
pop
test
je
mov
lea
mov
addl
lea
jmp
movb
orl
movb
andl
andb
movb
movb
andl
movb
add
mov
add
cmp
jb
incl
cmp
jl
jmp
mov
andl
test
jle
mov
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
shl
add
mov
mov
mov
mov
mov
push
lea
push
call
pop
pop
test
je
incl
incl
inc
addl
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
orb
jmp
movb
test
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
orb
jmp
cmp
jne
orb
push
lea
push
call
pop
pop
test
je
incl
jmp
orb
movl
inc
cmp
jl
pushl
call
xor
jmp
xor
inc
ret
mov
movl
or
call
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
push
pushl
mov
call
test
je
mov
cmp
je
push
pushl
call
call
test
je
mov
jmp
mov
push
call
test
jne
push
call
pop
test
je
push
push
call
test
je
pushl
call
mov
mov
pop
pop
ret
push
call
pop
ret
mov
push
mov
push
pushl
mov
call
test
je
mov
cmp
je
push
pushl
call
call
test
je
mov
jmp
mov
push
call
test
jne
push
call
pop
test
je
push
push
call
test
je
pushl
call
mov
mov
pop
pop
ret
call
ret
mov
push
pushl
call
mov
test
jne
pushl
call
pop
mov
push
pushl
call
mov
pop
ret
mov
cmp
je
push
pushl
call
pop
call
orl
mov
cmp
je
push
call
orl
jmp
push
push
call
mov
push
call
test
jne
push
call
pop
mov
mov
movl
xor
inc
mov
test
je
push
push
mov
call
mov
push
pushl
call
mov
mov
movb
movb
movl
push
call
pop
andl
pushl
call
movl
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
pushl
call
pop
movl
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
pushl
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
pop
call
test
je
push
push
call
pop
pop
call
orl
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
andl
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
movl
call
push
call
pop
movl
mov
test
je
push
call
pop
cmp
je
cmp
je
cmpl
jne
push
call
pop
movl
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
push
push
mov
push
call
test
jne
push
call
pop
mov
test
je
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
mov
je
cmpl
je
cmpl
je
test
jne
mov
mov
mov
movl
mov
mov
call
mov
cmp
je
pushl
push
call
test
je
call
pushl
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
add
mov
call
test
je
push
pushl
call
pop
call
mov
cmp
je
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
pop
call
test
je
push
push
call
pop
pop
call
orl
mov
xor
inc
jmp
call
xor
pop
pop
ret
mov
push
mov
xor
cmp
push
sete
push
push
call
mov
test
jne
pop
ret
xor
inc
mov
pop
ret
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
jl
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
mov
push
mov
sub
mov
andl
andl
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
shl
or
mov
not
mov
pop
pop
pop
leave
ret
andl
ret
push
push
call
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
push
call
pop
mov
ret
mov
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
pop
pop
test
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
mov
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
mov
push
mov
mov
pushl
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
movl
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
pop
pop
test
jne
push
call
pop
call
movl
mov
jmp
mov
jmp
push
call
pop
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmpl
jne
push
call
pop
test
jne
push
call
pop
pushl
call
pop
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
andl
push
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
movl
mov
mov
mov
mov
movl
movl
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
push
call
pop
push
call
push
call
mov
xor
pop
call
leave
ret
mov
push
mov
pushl
call
pop
test
je
pop
jmp
push
call
pop
pop
jmp
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
mov
push
mov
push
push
push
push
pushl
call
pushl
mov
mov
call
mov
pop
pop
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
add
cmp
jb
push
pushl
call
pop
pop
test
jne
lea
cmp
jb
push
pushl
call
pop
pop
test
je
sar
push
lea
call
pop
mov
pushl
call
mov
add
push
call
pop
mov
mov
pop
jmp
xor
pop
pop
pop
leave
ret
mov
push
push
push
call
mov
push
call
add
mov
mov
test
jne
push
pop
pop
ret
andl
xor
pop
ret
push
push
call
call
andl
pushl
call
pop
mov
movl
call
mov
call
ret
call
ret
mov
push
mov
pushl
call
neg
sbb
neg
pop
dec
pop
ret
mov
push
push
xor
lea
pushl
call
add
pop
mov
cmp
jb
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
cmp
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
push
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
pushl
call
pop
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
mov
add
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
xor
push
push
push
push
push
call
add
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
pop
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
cmpl
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
push
push
call
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
cmp
sete
mov
ret
mov
cmpl
jne
push
call
andl
movl
mov
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
pushl
call
pop
test
je
pushl
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
mov
push
mov
sub
push
push
push
call
andl
cmpl
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
push
call
movl
push
mov
call
push
call
movl
push
mov
call
push
call
movl
push
mov
call
push
call
pop
mov
test
je
push
push
call
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pushl
mov
call
pop
pop
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
orl
jmp
mov
cmp
je
push
call
pop
test
je
call
mov
test
je
mov
cmp
je
push
call
pop
test
je
pushl
call
mov
pushl
call
pop
test
je
pushl
pushl
pushl
pushl
call
jmp
xor
pop
pop
pop
leave
ret
mov
push
mov
mov
push
xor
push
push
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
je
inc
dec
jne
cmp
je
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
pop
ret
mov
push
mov
push
push
mov
xor
push
cmp
jne
cmp
jne
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
cmpl
mov
jne
mov
mov
inc
inc
cmp
je
dec
jne
jmp
mov
mov
inc
inc
cmp
je
dec
je
decl
jne
cmp
jne
mov
cmp
jne
cmpl
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
mov
push
mov
mov
push
xor
push
push
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
pop
ret
mov
push
mov
mov
push
xor
cmp
jl
cmp
jle
cmp
jne
mov
jmp
mov
mov
jmp
call
push
push
push
push
push
movl
call
add
or
pop
pop
ret
mov
push
mov
mov
push
mov
movb
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
testb
jne
orl
movb
jmp
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
mov
sub
pushl
lea
call
movzbl
mov
mov
test
jne
cmpl
je
mov
mov
movzwl
and
jmp
xor
test
je
xor
inc
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
pushl
push
call
add
pop
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzwl
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
pushl
call
mov
test
je
xor
mov
inc
cmp
jb
mov
movb
test
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
inc
mov
inc
test
jne
push
pushl
lea
pushl
push
push
lea
push
push
push
call
xor
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
xor
movzwl
test
je
orb
mov
jmp
test
je
orb
mov
mov
jmp
movb
inc
cmp
jb
jmp
lea
movl
xor
sub
mov
lea
add
lea
cmp
ja
orb
mov
add
jmp
cmp
ja
orb
mov
sub
mov
jmp
movb
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmpl
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
movl
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
movl
call
cmp
je
mov
andl
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
mov
movl
jmp
cmp
je
mov
andl
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
incl
add
cmp
jb
cmp
je
cmp
je
movzwl
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzbl
movzbl
jmp
mov
mov
or
movzbl
inc
cmp
jbe
mov
inc
inc
cmpb
jne
mov
incl
add
cmpl
mov
jb
mov
mov
movl
call
push
mov
lea
lea
pop
mov
inc
mov
inc
inc
inc
dec
jne
mov
call
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
lea
mov
orb
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzwl
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
movl
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
movl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
test
jne
call
mov
call
push
call
mov
pop
call
ret
mov
push
mov
push
push
xor
pushl
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
pushl
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
lea
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
lea
movl
cmpl
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
decl
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
test
je
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmpl
pop
jne
cmp
je
push
call
pop
mov
pop
ret
xor
ret
push
push
call
call
mov
mov
test
je
cmpl
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
lea
mov
call
mov
movl
call
jmp
push
call
pop
mov
ret
mov
push
mov
mov
mov
imul
add
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
pop
ret
mov
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
mov
test
jne
push
lea
mov
mov
mov
mov
mov
mov
test
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
mov
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
imul
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
add
imul
push
pushl
push
pushl
call
cmp
jne
xor
jmp
addl
mov
mov
imul
add
push
push
pushl
call
mov
cmp
je
push
push
push
push
call
mov
cmp
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
add
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
mov
cmp
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
mov
cmp
jbe
push
pop
mov
mov
cmp
jne
mov
cmp
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
lea
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
mov
mov
cmp
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
mov
imul
add
add
and
mov
sar
push
dec
cmp
push
push
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
jmp
mov
mov
and
and
or
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
mov
cmp
jb
cmp
jne
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
call
mov
mov
test
jne
xor
jmp
push
call
pop
mov
mov
mov
cmpl
je
mov
mov
mov
mov
cmp
je
mov
mov
and
and
or
jne
andl
mov
lea
mov
and
and
or
jne
incl
mov
add
jmp
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
add
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
lea
mov
test
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
sub
mov
xor
mov
testb
push
je
push
call
pop
call
test
je
push
call
pop
testb
je
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
push
mov
lea
push
push
call
lea
add
mov
lea
push
movl
mov
mov
call
lea
push
call
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
movl
push
push
push
push
push
call
add
or
jmp
cmpl
jne
push
call
pop
mov
push
call
pop
mov
cmp
je
mov
sub
mov
jmp
mov
movl
call
cmp
jne
push
push
pushl
call
mov
mov
call
ret
xor
mov
mov
push
call
pop
ret
push
call
pop
ret
mov
push
mov
mov
test
je
sub
cmpl
jne
push
call
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
xor
push
mov
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testl
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
pushl
push
push
pushl
call
mov
push
call
pop
pushl
call
mov
pop
jmp
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
mov
push
push
pushl
push
pushl
pushl
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
add
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
push
call
add
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
lea
pushl
push
push
pushl
pushl
call
mov
mov
add
neg
sbb
and
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
cmp
je
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
mov
xor
mov
mov
push
push
xor
push
mov
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
je
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
test
je
lea
push
push
push
call
add
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
push
call
mov
pop
jmp
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
pushl
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
mov
add
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
call
add
cmpb
je
mov
andl
leave
ret
push
push
call
andl
mov
cmp
ja
push
call
pop
andl
push
call
pop
mov
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
mov
cmp
ja
push
push
mov
cmpl
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
test
je
mov
jmp
xor
inc
push
jmp
cmp
jne
push
call
pop
test
jne
test
jne
inc
add
and
push
push
pushl
call
mov
test
jne
push
pop
cmp
je
pushl
call
pop
test
je
mov
jmp
call
mov
call
mov
pop
mov
pop
jmp
push
call
pop
call
movl
xor
pop
pop
ret
push
push
call
mov
xor
cmp
jbe
push
pop
xor
div
cmp
sbb
inc
jne
call
movl
push
push
push
push
push
call
add
xor
jmp
imul
mov
mov
cmp
jne
xor
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
mov
pushl
call
pop
mov
movl
call
mov
cmp
je
pushl
push
push
call
add
cmp
jne
push
push
pushl
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
mov
cmp
je
movl
jmp
xor
mov
push
call
pop
ret
cmp
jne
mov
cmp
je
movl
mov
call
ret
push
push
call
mov
test
jne
pushl
call
pop
jmp
mov
test
jne
push
call
pop
jmp
cmpl
jne
xor
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
movl
call
cmpl
jne
test
jne
inc
add
and
mov
push
push
push
pushl
call
mov
jmp
mov
mov
push
call
pop
ret
mov
test
jne
cmp
je
push
call
pop
test
jne
call
cmp
jne
mov
call
push
call
pop
mov
jmp
test
jne
call
cmp
je
movl
jmp
test
jne
inc
push
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
movl
xor
call
ret
call
jmp
test
jne
call
mov
call
push
call
mov
pop
mov
jmp
mov
push
mov
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
mov
sub
mov
mov
mov
shr
pxor
jmp
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
mov
mov
pop
ret
push
mov
sub
mov
mov
cltd
mov
xor
sub
and
xor
sub
test
jne
mov
mov
and
mov
cmp
je
sub
push
push
call
add
mov
mov
test
je
add
sub
mov
xor
mov
mov
rep
mov
jmp
neg
add
mov
xor
mov
mov
rep
mov
mov
mov
add
sub
push
push
push
call
add
mov
mov
mov
pop
ret
mov
push
mov
sub
push
pushl
lea
call
mov
lea
cmp
ja
mov
mov
movzwl
jmp
mov
sarl
lea
push
mov
and
push
call
pop
pop
test
je
mov
push
mov
mov
movb
pop
jmp
xor
mov
movb
inc
mov
push
pushl
pushl
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
andl
xor
jmp
movzwl
and
cmpb
je
mov
andl
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
mov
push
mov
sub
mov
xor
mov
push
lea
push
push
pushl
movb
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
mov
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
push
xor
mov
mov
mov
cmp
je
mov
lea
push
push
call
mov
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
mov
movl
cmp
jne
pushl
call
mov
pop
inc
cmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
push
pushl
pushl
push
pushl
call
mov
cmp
jne
xor
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
mov
cmp
je
lea
push
push
pushl
call
add
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
cmp
je
push
push
pushl
push
push
pushl
push
pushl
call
test
je
mov
jmp
mov
cmp
jne
push
push
push
push
push
pushl
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
pushl
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
pushl
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
movzbl
mov
mov
movzwl
and
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
mov
push
mov
sub
push
push
pushl
lea
call
mov
mov
xor
cmp
je
mov
cmp
jne
call
push
push
push
push
push
movl
call
add
cmpb
je
mov
andl
xor
jmp
cmp
je
cmpl
jl
cmpl
jg
mov
push
mov
mov
lea
cmpl
jle
lea
push
movzbl
push
push
call
mov
add
jmp
mov
movzbl
movzwl
and
test
je
mov
inc
jmp
cmp
jne
orl
jmp
cmp
jne
mov
inc
mov
test
jl
cmp
je
cmp
jg
test
jne
cmp
je
movl
jmp
mov
cmp
je
cmp
je
movl
jmp
movl
jmp
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
inc
mov
inc
mov
mov
xor
divl
movzbl
movzwl
test
je
movsbl
sub
jmp
test
je
mov
sub
cmp
movsbl
ja
sub
add
cmp
jae
orl
cmp
jb
jne
cmp
jbe
orl
cmpl
jne
mov
dec
test
jne
cmpl
je
mov
andl
jmp
mov
imul
add
mov
mov
inc
jmp
mov
test
jne
test
jne
and
je
cmpl
ja
test
jne
cmp
jbe
call
testb
movl
je
orl
jmp
testb
push
pop
setne
add
mov
mov
test
je
mov
testb
je
negl
cmpb
je
mov
andl
mov
jmp
mov
test
je
mov
cmpb
je
mov
andl
xor
pop
pop
pop
leave
ret
mov
push
mov
xor
push
pushl
pushl
pushl
cmp
jne
push
jmp
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
aaa
pop
daa
or
jp
push
cmp
push
mov
cmpsb
rcll
out
xlat
mov
daa
dec
pop
jp
push
sbb
push
cmp
mov
cmpsl
lret
xchg
aaa
mov
mov
mov
daa
mov
loopne
sbb
sub
push
xor
mov
test
sti
fwait
xchg
mov
push
inc
or
sub
mov
mov
push
add
inc
ret
loope
pop
lods
mov
clc
xchg
mov
subl
ss
out
xorb
out
xor
adc
and
cld
notb
repz
sbb
fcomi
ficoml
imul
dec
jge
pop
push
push
jb
sar
inc
cmpsl
cmp
sub
in
jmp
cmpsl
pop
push
inc
repnz
enter
testl
add
pop
stc
icebp
popf
adc
cli
sbb
daa
lret
mov
jl
stc
fimull
sub
mov
push
repnz
xchg
push
inc
sar
daa
push
push
pop
push
sbb
push
cmp
mov
cmpsl
bound
cmpsb
out
xlat
mov
push
and
ja
adc
insl
mov
ret
pop
decl
mov
add
jb
imul
dec
and
push
adc
mov
not
mov
push
sub
stos
js
imul
push
or
inc
sub
cli
xchg
negl
stos
aaa
pop
daa
dec
pop
jp
push
sbb
push
cmp
mov
cmpsl
lret
xchg
negl
stos
aaa
pop
add
pop
sub
mov
call
sbb
or
xchg
cmc
rol
push
setge
cmc
jbe
ljmp
mov
cmp
pop
lahf
in
sbb
sahf
clc
xchg
sbb
cmp
cwtl
push
xchg
rol
pop
jnp
sbb
es
in
dec
js
enter
xchg
mov
stc
jmp
test
cmp
mov
mov
out
lds
call
sub
xchg
push
hlt
sub
call
popa
adc
mov
in
xor
jp
data16
andb
aaa
add
enter
sbb
aaa
lret
test
mov
popa
cmp
adc
cwtl
into
jbe
pusha
out
xlat
iret
sbb
pop
iret
mov
loope
addr16
pop
sbb
ret
sahf
in
mov
test
push
jo
mov
inc
popa
pusha
inc
test
leave
lock
aad
aad
sub
out
mov
decl
stc
out
mov
js
mov
xchg
jge
pop
sbb
add
mov
daa
push
sub
insb
pop
in
int3
adc
in
sbb
lret
mov
cmpl
push
jg
add
call
scas
dec
pushf
push
movsl
sbb
xchg
lahf
lock
addr16
xchg
dec
lret
or
movsl
lcall
mov
mov
lret
pop
sbb
pop
lea
sbb
xchg
fmul
mov
repnz
cmp
mov
pop
cmp
add
adc
int3
filds
jmp
cwtl
mov
jbe
sub
push
xor
mov
andb
rclb
inc
es
push
xchg
fwait
push
cltd
mov
fisubs
sarl
pop
mov
or
fisubs
xchg
pop
clc
add
popf
hlt
pop
les
in
int3
jne
push
movsl
std
stc
adc
call
push
jecxz
and
jmp
lock
mov
js
pusha
dec
frstor
jbe
xlat
push
sti
mov
movups
mov
or
int3
mov
add
sbb
je
xor
lea
cmpsl
pusha
add
je
pop
mov
xchg
push
popf
out
jge
loop
xor
inc
out
popa
pop
je
test
pop
bound
adc
sbb
cmp
push
and
or
bound
int
ja
cmpl
xor
dec
sub
fdivs
cld
sbbl
cmp
sarl
xchg
mov
mov
stos
add
aas
fiadds
push
sub
adc
mov
lock
test
mull
test
inc
loopne
add
sub
faddl
xchg
cltd
std
in
xchg
jecxz
cmc
in
das
shlb
call
cmpsl
mov
fbld
dec
inc
out
and
out
sbbb
fsubrl
mov
xchg
xor
dec
mov
cli
mov
mov
mov
popa
adc
dec
xchg
js
cmp
dec
cmp
xchg
mov
ja
inc
xchg
popl
stos
mov
nop
xor
ja
inc
mov
sbb
pop
lock
scas
stc
mov
addr16
xchg
xor
outsw
sbb
sub
out
sub
jno
das
movsb
ret
fdivrp
scas
in
and
clc
lcall
mov
imul
fwait
and
push
cltd
cmp
jge
mov
out
add
je
rorb
aad
and
icebp
test
push
push
cmpsb
dec
mov
out
pop
fadds
dec
jle
xchg
pushf
lahf
sbb
and
rcrb
in
ss
out
and
and
sahf
shrl
cmp
cmc
aas
sbb
jp
popf
loope
push
scas
cmp
lods
xchg
push
cmpsl
push
popa
xchg
int
mov
out
hlt
add
js
stos
mov
mov
xor
cli
or
lods
mov
lcall
hlt
jnp
std
mov
imul
and
dec
ret
cwtl
and
iret
hlt
into
outsl
es
repnz
mov
aad
cmp
rorb
cmp
xchg
out
push
jne
push
sbb
sbb
nop
cmpsb
push
push
lahf
dec
mov
fwait
sbb
cmp
xor
orb
jg
sbb
loop
push
jnp
mov
adc
push
pop
ror
push
sbb
jnp
push
dec
add
xorl
jmp
inc
xchg
fs
inc
dec
mov
out
scas
fidivl
and
orb
mov
add
or
aas
pop
fldt
outsl
movsb
int3
jns
add
aad
out
movsb
aas
sbb
negl
fsubr
aaa
fildl
jnp
les
mov
cld
aad
jp
shll
int3
mov
insb
ret
out
lret
or
xor
sbb
pushf
mov
xchg
cmp
pop
sbb
mov
mov
xlat
arpl
mov
fildll
test
mov
lahf
xchg
aas
jmp
xchg
call
rcr
and
je
nop
mov
cmp
jne
or
ljmp
gs
stos
sub
and
arpl
icebp
fimull
orb
and
cmpsl
lret
pop
incl
jae
sub
xchg
cli
mov
mov
outsl
fcomi
enter
sldt
in
scas
sahf
lret
or
and
jo
sub
or
xchg
dec
int
cmc
and
dec
add
cmc
mov
xlat
pop
adc
cmp
cld
lahf
dec
pop
push
cmpsb
ret
sub
or
mov
cmpsw
mov
jmp
repnz
sbb
cli
popf
pop
add
push
leave
cmp
xchg
out
mov
aaa
mov
jle
int
push
xchg
sahf
call
call
sub
inc
lods
fbld
adc
mov
mov
sbb
inc
mov
ds
xorl
sub
repnz
rclb
pop
stc
pop
sub
repnz
call
test
xor
ja
xor
lcall
inc
cld
out
adcl
scas
andb
xlat
adc
mov
fidivs
adc
sar
jg
loopne
enter
xchg
add
mov
imul
dec
add
sbb
loop
mov
test
cmp
or
imul
pop
out
mov
cmp
xlat
push
hlt
jno
inc
sub
imul
dec
fistps
sub
rcr
xlat
jno
js
shrl
push
push
sub
lea
in
jbe
push
mov
inc
dec
jo
xor
sti
mov
dec
arpl
push
scas
fisubrs
data16
repz
jne
rclb
add
outsb
cmpsl
push
xor
mov
fisttps
in
add
out
adc
fisubrs
mov
pusha
fmuls
repz
inc
pop
push
jnp
into
cmp
xchg
inc
cmpsl
enter
into
jmp
jg
lcall
rolb
xor
icebp
sub
pop
insl
mov
fcompl
rcrb
xchg
or
icebp
pop
cmp
test
inc
pop
rcrb
aam
mov
out
lahf
test
mull
daa
xchg
inc
mov
xlat
jne
pop
sub
fstpl
cmpl
mov
dec
jl
scas
xchg
push
sbb
addb
lds
cmc
mov
xchg
mov
addr16
ljmp
mov
lahf
stc
mov
and
mov
and
pop
sbb
loope
cmc
mov
sbb
ret
out
arpl
loopne
ljmp
and
or
popf
and
clc
bound
addl
scas
orl
jl
xlat
rcl
mov
jno
hlt
dec
cltd
insl
xchg
aad
add
push
xor
lcall
pop
cmp
cwtl
lods
sub
js
push
mov
ficoml
stc
mov
sbb
faddl
push
mov
pop
and
xlat
fdivrs
aas
push
mov
xchg
mov
lret
fcoml
mov
clc
push
in
lods
fs
mov
cmp
mov
inc
sbb
or
ds
mov
cmp
jmp
pop
data16
push
or
xor
add
mov
mov
loope
or
jmp
repnz
cltd
cmp
ljmp
out
gs
mov
lcall
dec
js
std
adc
notb
or
inc
fnstenv
or
ss
sub
dec
inc
mov
mov
xchg
mov
xor
add
outsb
adc
rorl
out
xor
fimuls
fnstsw
movsl
xlat
jg
rcll
cmp
fisttpll
out
aas
add
xor
and
or
xchg
jmp
sbbb
jge
fcmove
xor
and
mov
dec
and
lock
pop
dec
xchg
fbstp
fs
mov
mov
pop
cmpsb
adc
cmp
stc
cmpsb
inc
pop
push
outsl
lahf
dec
adc
jge
call
insb
sahf
es
add
pop
adc
fsts
xor
mov
dec
cmp
aam
mov
jmp
push
sbb
dec
jg
add
stos
adc
push
cmp
or
mov
testb
sub
and
xchg
cmp
inc
inc
gs
ret
push
arpl
idivl
mov
push
xchg
rorl
jno
mov
mov
int
std
cmpsb
stos
mov
lret
out
fdivrs
mov
and
pop
test
adc
arpl
jbe
cmc
ret
sub
sbb
shl
dec
int3
add
ljmp
adc
pop
cmc
xchg
dec
adc
cmp
popa
xchg
cmp
jbe
add
lahf
test
sub
jne
and
add
aaa
ja
fistps
test
test
mov
push
call
sbb
test
xor
jp
push
shl
imul
sub
sub
pop
inc
xchg
jecxz
lcall
hlt
loopne
dec
and
and
lcall
jae
scas
add
pop
inc
mov
mov
lret
fsincos
mov
repnz
flds
cmp
push
cld
mov
xchg
mov
cmp
sub
sbb
dec
jge
into
lock
aas
jmp
cli
or
sub
insl
dec
dec
xlat
xor
mov
ja
fs
cltd
push
cmp
sub
xor
fimull
add
cmpb
jne
mov
mov
popa
shlb
test
or
mov
subb
outsl
jns
adc
nop
pop
fbld
nop
shlb
negl
jns
ds
mov
outsl
bound
push
mov
dec
lret
mov
pushf
sub
xchg
dec
out
imul
xchg
in
lods
mov
or
mov
inc
repnz
in
negb
out
fsts
xchg
sbb
mov
or
or
in
xor
jo
cli
push
sub
fbstp
sub
sbb
gs
or
jecxz
mov
add
adc
dec
inc
mov
mov
adc
in
push
out
mov
xchg
inc
out
sti
xlat
insb
dec
lock
loop
push
fs
scas
mov
cmp
push
in
cmp
addr16
aaa
mov
and
faddl
jl
adcl
and
xchg
jl
outsb
vrsqrtps
sbb
jg
cmp
out
sbb
out
int3
fsubrl
movsb
dec
mov
sub
aad
jl
stos
pop
cmpsb
pop
cmp
stos
test
pop
cmpsb
outsl
cmc
iret
xlat
in
jle
lret
cmpsl
cltd
enter
xchg
lahf
mov
roll
fstl
hlt
mov
xor
in
in
xchg
or
int3
push
jbe
out
nop
les
jae
jne
movsl
xchg
cmpl
repz
lds
mov
mov
cmp
inc
in
push
outsb
pusha
inc
lret
lret
dec
mov
fbld
jne
cld
push
xchg
repnz
push
pop
movsb
roll
lret
cmp
and
adc
xchg
push
pop
iret
sbb
andl
jne
or
jmp
test
stos
xor
negb
and
push
test
je
add
mov
cld
cs
ds
mov
lea
mov
shlb
mov
cli
shlb
mov
fidivrl
into
sar
cmpb
push
xchg
sbbl
push
bound
xchg
sub
rolb
outsl
adcl
in
shll
pop
in
jb
inc
xchg
mov
sub
int
sbb
insb
xchg
loop
rolb
pop
sub
inc
stos
je
sarb
into
jecxz
stos
cmp
pop
lds
ss
outsl
adc
dec
loop
movsl
shl
in
jle
das
int3
mov
jno
mov
andl
push
ficoml
sahf
push
jmp
mov
adc
jmp
cmpsb
sbb
call
xchg
test
arpl
xor
mov
pop
xchg
mov
daa
inc
mov
xlat
push
hlt
adc
pop
cmp
mov
inc
loopne
push
insl
pmuludq
mov
pop
fnstenv
sbb
mov
mov
into
int3
fnsave
adc
mov
gs
sbb
push
sub
xorl
and
xor
xchg
push
scas
inc
push
sarl
fisttps
dec
add
ljmp
fdiv
jbe
ret
movsl
push
sti
and
cltd
push
mov
or
loope
cmp
fsubl
jbe
lods
dec
jecxz
xor
leave
inc
adc
mov
movsb
jg
mov
mov
push
aas
imul
sarl
add
add
jae
in
shrl
add
in
pop
lret
repz
jae
test
scas
xor
movsl
sbb
sub
jecxz
dec
mov
ret
mov
pusha
cmp
shrb
popa
aaa
jmp
jb
and
movsb
out
xchg
pop
aam
mov
xor
add
jle
icebp
mov
fwait
aam
ja
lea
dec
lret
pushf
cmp
es
xor
in
push
arpl
sub
call
inc
pop
sbb
rcrl
xor
xchg
or
jno
or
cld
pop
js
into
adc
sbb
or
pop
pop
shll
pop
lahf
jo
or
cmp
pop
adcb
xchg
out
nop
jb
xor
jg
in
xor
sti
cmp
mov
sti
imulb
pop
xlat
push
push
or
rolb
inc
test
inc
das
insl
hlt
divl
jns
jle
dec
or
je
mov
fsub
adc
ret
inc
fistl
sub
fmull
push
jbe
std
xor
imul
insl
jno
mov
jmp
insl
fsubp
sti
xchg
in
or
dec
and
cltd
dec
sub
cmp
pop
fnstsw
int
dec
push
loop
sbbb
adc
insb
test
xor
push
popf
push
dec
jge
push
cmpsl
inc
xchg
pop
push
sub
sarb
in
add
out
prefetch
lret
inc
or
cs
addr16
and
daa
sub
xor
and
mov
pop
dec
dec
int
mov
jnp
out
dec
mov
out
xchg
pop
mov
mov
enter
fdivrl
fmull
or
and
dec
rcll
push
xor
dec
ds
adc
sbb
shll
cmp
cmp
int3
push
pop
xchg
cmc
fldenvs
out
or
mov
ja
gs
fstpt
xor
imul
sbb
rcll
push
mov
les
sub
jge
sub
out
outsl
mov
cmp
pop
movsb
xchg
mov
repnz
dec
mov
adc
add
pop
nop
fdivp
sub
sub
fs
fistps
xchg
mov
aaa
mov
or
test
xchg
into
fwait
add
daa
lods
mov
cmp
notl
fcoml
cmp
xchg
or
mov
jmp
jne
sub
xchg
ljmp
sub
inc
cwtl
jne
out
dec
inc
insb
xchg
fwait
pop
dec
loop
pop
mov
or
push
lds
mov
in
aaa
fisubrl
mov
mov
hlt
es
nop
lret
cltd
adc
cmp
test
daa
outsl
cmpsl
mov
insb
fistl
add
sbb
cli
xor
sbbb
mov
sub
xor
sub
sub
sahf
loopne
stos
mov
mov
adc
push
js
inc
fmull
ficomps
lahf
scas
cltd
je
pusha
pop
xchg
daa
add
imul
xor
or
add
inc
pop
inc
push
pop
sbb
push
xor
jne
jns
jae
adc
cld
in
subb
dec
mov
fst
nop
lock
test
add
sub
push
mov
mov
mov
mov
icebp
add
add
cmp
and
add
sti
sbb
inc
xchg
adc
push
hlt
repz
xchg
cltd
mov
push
ret
mov
cmp
aam
pop
daa
inc
pop
popa
pop
or
add
leave
mov
fsubrs
test
imul
mov
and
add
neg
or
cld
loope
xchg
and
daa
and
arpl
xor
mov
jmp
jle
mov
jge
mov
mov
and
testb
sub
pop
in
cmp
mov
add
xor
ss
test
int3
cmp
jmp
add
mov
popa
cmp
int3
imul
cmp
push
jg
push
sbb
push
cmp
mov
cmpsl
lret
xchg
negl
stos
aaa
pop
daa
dec
pop
jp
push
sbb
push
cmp
mov
cmpsl
lret
xchg
negl
stos
aaa
pop
cmpsl
inc
xchg
bound
outsb
negl
addr16
push
ds
sub
cli
xchg
negl
dec
aaa
mov
pop
sub
or
inc
ljmp
xchg
cmpsl
ret
int3
dec
inc
pop
push
imul
dec
add
xor
jmp
test
mov
inc
pop
push
imul
sub
xor
fnstenv
test
mov
inc
pop
push
imul
sub
xor
insb
lcall
sti
out
xlat
mov
inc
pop
or
or
and
mov
pop
add
and
mov
and
stc
jbe
adc
aam
add
mov
xchg
je
sub
sub
jns
icebp
mov
hlt
inc
in
sbb
inc
mov
mov
lds
fmul
cmp
or
test
push
int3
pop
jns
or
pop
xlat
pop
test
je
add
push
lret
leave
pop
leave
mov
ja
icebp
imul
sub
mov
xor
mov
cmp
xor
xchg
fwait
push
mov
popa
stos
add
cltd
push
mov
cltd
mov
aam
hlt
mov
push
test
inc
pop
push
imul
sub
xor
jmp
test
fisttpll
sub
push
or
sbb
gs
js
mov
xchg
mov
in
out
cmpsb
in
cmc
dec
inc
sub
fs
dec
dec
jne
sub
xor
mov
mov
fcmovnb
mov
pop
add
adc
add
adc
and
xor
jmp
test
mov
inc
pop
push
imul
sub
xor
jmp
test
mov
inc
cld
sbb
ror
ficomps
jns
pop
test
in
cmp
in
pop
adc
cmp
push
dec
mov
decl
inc
push
sub
sbb
int
ss
push
sub
and
pop
sbbb
sbb
push
hlt
push
out
popf
cmp
out
inc
imul
xchg
jl
dec
cmp
xor
push
and
mov
cmp
aad
mov
adc
jp
aas
jp
shrl
push
pop
insb
fists
and
jns
xor
mov
fisttpll
dec
sub
mov
adc
subb
xor
scas
jmp
lcall
stc
pop
cmp
or
negb
cltd
loope
lock
pop
or
nop
fld
loop
xchg
fmuls
mov
dec
repz
dec
cmp
xchg
mov
pop
hlt
imul
xor
cmp
jecxz
insl
fidivl
push
mov
loopne
pop
ja
xor
push
loopne
pop
xor
or
xchg
and
and
push
pusha
lahf
ja
out
out
test
xchg
into
stos
dec
addr16
outsb
mov
gs
sub
adc
jae
mov
call
inc
ret
loope
nop
adc
lahf
push
xchg
mov
icebp
addr16
mov
arpl
dec
fisttpl
lds
sbb
ljmp
test
push
fwait
shr
lock
inc
and
out
cmpsb
test
xor
dec
mov
loope,pn
adc
in
adc
and
jb
into
pop
mov
lods
dec
sub
jecxz
rdpmc
and
push
mov
dec
js
arpl
push
mov
stc
scas
mov
stos
pop
add
arpl
cmc
dec
jb
mov
and
les
xor
repnz
fistps
cs
aaa
clc
xor
rcr
mov
fisubs
enter
sub
dec
push
jge
lcall
sahf
out
aam
out
test
fnstcw
faddl
stc
dec
cmp
pop
xchg
ja
pop
pop
mov
in
sub
xor
and
inc
in
addl
repz
adc
and
stos
and
adc
lods
js
dec
or
out
sbb
and
lock
push
mov
mov
mov
cmp
in
lds
inc
ljmp
pop
xor
cs
mov
mov
and
call
cmp
ds
inc
inc
mov
sti
ss
add
dec
or
jne
adc
lds
mov
out
sarb
lds
mov
mov
pop
rolb
inc
insb
ja
mov
push
mov
fs
test
jae
es
leave
ret
test
lcall
mov
and
addr16
adc
mov
push
mov
xlat
into
dec
out
insb
sub
mov
aaa
lods
dec
rcll
or
pop
xor
jo
insb
cld
xchg
repz
push
pop
xrelease
ljmp
call
stos
cli
jno
neg
inc
mov
mov
mov
mov
and
push
sbb
push
ret
shrb
jl
bound
gs
ficoms
jge
loop
mov
repz
sbb
pusha
pop
movsl
xlat
xchg
test
lds
int3
call
add
sahf
pop
cmpsl
popa
push
inc
jp
and
push
test
out
adcl
jae
lods
sbb
xor
adc
cmp
mov
js
mov
roll
adc
mov
repz
lods
roll
mov
pop
insl
mov
jl
and
push
popw
sbb
mov
fstpt
add
sbb
loope
jmp
mov
inc
addl
test
jl
mov
cmpsl
pop
out
cs
iret
add
jecxz
ret
jmp
sbb
ret
nop
or
cli
shl
jl
dec
mov
mov
subb
lcall
cmp
iret
lret
imul
call
dec
enter
inc
fstps
ret
rcll
cmp
stos
outsb
push
popa
fmulp
int
push
or
cs
or
cmp
cmp
mov
lds
lods
sub
add
mov
scas
add
push
ljmp
ds
xor
jo
loop
dec
lods
testb
loopne
repz
xor
cmp
iret
shrl
lret
dec
dec
cmp
lods
jmp
fnstsw
cs
scas
int3
mov
xchg
mov
mov
xchg
in
jno
inc
jge
movsb
adc
nop
sbb
xchg
je
add
sbb
arpl
sarb
mov
jge,pt
cwtl
scas
test
fnstcw
lcall
ja
pop
and
adc
stos
dec
stc
add
gs
push
cli
orb
inc
mov
imul
cmp
insl
inc
test
into
lea
mov
test
aas
mov
fistps
mov
or
add
xchg
and
loope
pop
lret
ficoms
out
mov
mov
stos
sbb
repnz
cmp
aad
popf
ficomps
mov
xchg
xor
scas
push
or
dec
sub
xor
cld
test
dec
sub
and
rorl
sub
and
std
add
dec
fmulp
faddl
sbb
ficomps
mov
sub
or
aam
sub
cld
adc
outsl
adc
jb
add
push
mov
sub
dec
icebp
lret
addr16
xchg
fs
mov
xchg
lods
movsb
in
in
cld
test
push
repz
loope
sub
or
call
sub
sbb
rol
clc
das
lahf
pop
fs
dec
ljmp
cmp
adc
outsl
ljmp
mov
adc
push
lret
xor
pop
pop
ret
lods
bound
or
cmp
je
mov
dec
mov
sub
and
and
pop
sbb
mov
enter
pop
xor
sbb
xor
mov
inc
cltd
and
xchg
rcll
dec
mov
es
inc
lahf
rcr
in
popl
mov
ret
lods
cmp
xchg
jae
mov
mov
push
cli
sti
sbb
push
ljmp
mov
mov
into
sub
ffree
cmc
xor
jno
ss
mov
dec
std
scas
arpl
aam
jmp
xchg
lahf
or
sti
xor
rolb
hlt
je
addr16
pop
push
bound
out
jb
and
xor
test
outsl
mov
mov
and
mov
and
mov
mov
pop
jns
hlt
inc
jb
in
xchg
jle
mov
or
pop
loope
enter
xchg
jge
imul
jmp
push
int3
sub
and
popf
add
clc
into
mov
in
cmp
in
adc
add
mov
lahf
push
pop
repz
popf
inc
sub
movq
movsl
rcl
stc
ja
sub
repz
sbb
andb
fwait
jl
pop
mov
shll
aad
add
repnz
pop
adc
and
repz
fs
ljmp
sarl
in
add
in
or
in
es
mov
inc
inc
stos
pop
js
clc
jo
sub
sub
clc
inc
sub
outsl
lds
and
inc
aad
jbe
cli
and
cmp
mulb
xchg
fdivrs
xchg
scas
jp
lods
pop
mov
pop
mov
rol
push
nop
mov
jns
jmp
test
jl
sub
test
lret
push
push
xchg
or
lret
add
cmp
loopne
xchg
cwtl
out
into
imul
loop
mov
fs
jo
and
mov
mov
or
xlat
icebp
imul
add
pop
mov
rolb
sub
cmc
mov
pop
mov
mov
daa
inc
cmpsl
cmp
outsb
cmp
sub
push
xchg
and
nop
mov
repz
or
xchg
sbb
into
fsubs
in
daa
add
add
test
xchg
inc
fwait
sti
into
int
test
fmuls
jp
xchg
xchg
shll
adc
cmp
dec
iret
jbe
or
mov
mov
add
popa
sbbb
jns
adcl
adc
sub
inc
lods
xchg
add
ret
push
jmp
ficoms
nop
clc
adc
push
lahf
xchg
xchg
push
rol
ljmp
add
pushf
pushf
mov
mov
popl
mov
pushf
sub
fsubs
enter
xchg
pushl
push
or
sub
sub
xor
lea
outsl
and
adc
mov
gs
dec
add
lcall
jo
jp
loopne
push
pop
or
adc
popf
push
ss
mov
jmp
frstor
call
ja
adc
leave
pushl
mov
jno
fiaddl
jns
xchg
adc
sbb
addr16
in
cmc
movl
and
lods
cmp
mov
test
stos
xor
push
jne
stc
gs
jmp
jns
insb
or
roll
adcb
daa
cmpsb
pop
dec
mov
xchg
add
adc
ss
add
cs
mov
sbb
in
cld
inc
inc
mov
dec
aaa
jmp
lods
ss
xchg
out
jl
ret
aam
pop
push
adc
ss
loopne
and
arpl
lds
mov
inc
insl
pop
pop
pop
test
inc
lea
xchg
mov
dec
xor
sub
mov
push
push
cmp
fidivrs
fstpt
or
add
in
sarl
jmp
je
xchg
bound
pushw
paddq
push
sbb
inc
fdivs
fstpl
pop
mov
and
push
addr16
and
sahf
dec
mov
seta
int
sarl
ss
dec
cmp
mov
incl
lods
repnz
fiaddl
out
cld
outsb
jecxz
mov
in
and
lret
pop
dec
clc
js
xchg
lds
dec
aam
bound
mov
pop
add
sub
jge
jl
lcall
mov
js
int3
push
push
xor
insl
pop
addr16
jmp
sbb
test
jo
mov
imul
aas
call
dec
jp
pop
notb
add
xchg
cmpsb
aaa
push
mov
pop
je
jl
addl
mov
jb
ja
push
std
sahf
push
iret
jle,pn
dec
mov
xorl
inc
cmp
out
jecxz
xchg
into
dec
mov
or
mov
pop
stos
push
por
push
aaa
sub
daa
fstps
outsb
aaa
push
iret
pop
adc
in
mov
aad
push
inc
cmpsl
add
pop
out
dec
insl
dec
mov
repz
loop
arpl
jne
pop
nop
xchg
and
cli
popa
or
push
push
repnz
dec
flds
popf
js
in
jle
adc
jmp
or
add
push
rolb
cmpsl
push
rclb
test
movsb
xchg
mov
jb
js
jbe
leave
test
dec
inc
push
adc
inc
lods
aam
push
pop
fisttpl
and
xchg
rcl
xor
adc
emms
sub
xlat
mov
daa
adc
fs
lock
jns
and
push
dec
sbb
mov
sti
lea
movsb
xor
fs
inc
adc
cltd
xchg
stos
jb
mov
shrl
add
mov
aad
cmp
int3
loop
xchg
add
sub
mov
xor
dec
jle
push
mov
sbb
shrb
sub
rorl
arpl
shl
sub
lret
dec
cltd
pop
ljmp
sub
data16
xchg
adc
lret
movsb
stos
gs
rcr
jg
stos
pop
mov
iret
adc
popa
sahf
xor
push
pop
push
dec
test
and
fsts
or
mov
dec
sti
jmp
jnp
cli
aas
sbb
mov
xlat
addr16
mov
ljmp
out
in
fsubl
pop
dec
and
shrb
loopne
sahf
xchg
lcall
fldl
into
xor
mov
outsb
data16
jg
cmp
dec
fsts
sub
dec
dec
into
mov
insl
aaa
sub
sbb
lea
repz
scas
inc
dec
and
mov
ja
in
inc
out
std
decb
xchg
mov
repnz
jmp
loope
insb
addr16
push
lods
and
sub
rorl
push
push
jne
push
add
scas
mov
inc
mov
mov
movsb
pop
jp
fnstsw
mov
aam
idivb
fcoms
neg
xor
cmp
fucomp
pop
sbb
addr16
idivl
and
arpl
jle
dec
mov
bound
mov
push
aaa
push
or
dec
scas
sub
nop
mov
fstl
testl
test
shlb
cmc
rorl
orl
daa
aad
and
mov
push
sbb
adc
or
cmpsl
mov
repnz
inc
or
in
scas
mov
sahf
loope
inc
in
popa
mov
test
outsb
fcmovnb
mov
jno
mov
push
xchg
insl
jb
xchg
xor
cmp
int
dec
test
sbb
shrb
push
nop
dec
cmpsb
adc
repnz
xchg
cmp
test
add
test
mov
sbbl
inc
lret
inc
xor
cli
fnstsw
arpl
mov
jnp
out
outsb
xchg
rclb
push
mov
fiaddl
mov
mov
push
nop
aaa
pop
adc
add
xor
sbb
sarl
push
insl
mov
int3
xor
outsb
fcoms
aas
xor
mov
inc
out
add
mov
mov
outsb
fsts
jno
add
jl
and
out
xor
mov
or
pop
repnz
and
dec
sbb
leave
jns
adc
ja
and
jecxz
mov
dec
dec
loop
jo
add
push
les
fstpt
push
rcl
mov
push
adc
ds
sbb
pop
fwait
mov
jl
add
sbb
push
sbb
scas
inc
or
aad
movsb
cmp
xor
xchg
gs
mov
aaa
fldl2e
subb
sbb
xor
or
cmpsl
shl
sub
pop
out
fdivp
repnz
and
pop
test
push
pop
jp
push
aas
mov
mov
inc
mov
push
push
insl
daa
cs
call
sbb
push
cwtl
sub
cld
adc
xchg
outsl
pop
or
outsl
adc
inc
add
in
sub
xor
pop
test
mov
mov
inc
mov
das
pop
es
pusha
out
mov
inc
mov
outsb
repz
ds
ja
sti
cmp
ret
cmp
loope
icebp
mov
cli
pop
and
clc
pop
nop
jb
sarl
xor
xor
incl
scas
mov
adcl
adc
cs
out
lret
fisubl
adc
mov
in
femms
mov
in
outsb
mov
jecxz
jne
cmc
xor
push
or
sub
inc
sub
adc
mov
sub
aaa
lock
lods
test
in
sbb
out
insb
fisttps
das
mov
jne
push
xchg
dec
xchg
es
gs
cmp
push
add
jmp
les
js
or
insl
rcrb
lcall
xorl
jle
outsl
shr
pop
and
xchg
popa
clc
jmp
push
sub
adcb
mov
aas
push
das
push
rep
inc
push
pop
dec
loopne
fisubl
in
fcoml
xchg
dec
and
aad
sbb
fisubl
jns
addl
insl
push
frstor
pop
std
rcr
sti
fstpl
pop
inc
push
mov
xchg
adc
ds
notb
jb
adc
mov
cltd
fwait
stc
out
sahf
imulb
sbb
outsl
mov
ljmp
mov
es
mov
lret
das
sbb
int
daa
mov
jge
mov
cmp
fcmovu
and
or
icebp
ret
dec
std
ja
cld
and
leave
xchg
lahf
or
lret
push
movsb
push
ret
cwtl
outsb
adc
nop
ds
pop
xchg
jo
aad
cmovb
and
sbb
xor
jp
add
push
or
ror
sub
adc
hlt
or
icebp
sahf
sarb
xor
lcall
or
test
or
movsl
sub
inc
lea
into
mov
pop
xlat
xchg
mov
xlat
leave
pop
nop
jl
pop
fmuls
call
jbe
and
cld
sbb
in
cli
imul
sbb
cmc
popa
fdivs
int3
lods
mov
std
aam
or
fisttpll
cmpsl
mov
fsubrl
loope
jae
aaa
sbb
add
xor
pushf
or
sub
pop
jns
stc
mov
push
repz
test
or
xor
mov
dec
test
add
jne
pop
cmc
rcrl
movsb
add
mov
mov
jp
xchg
sbb
xchg
mov
lds
sub
mov
std
inc
stc
cmp
out
add
sbb
rclb
and
inc
rorl
sbb
jle
int
jne
or
out
add
andb
loop
jmp
jns
or
adc
and
xor
jmp
test
mov
inc
pop
push
imul
sub
xor
jmp
test
mov
inc
pop
aam
in
je
add
xchg
sub
xor
inc
jmp
test
mov
inc
pop
push
imul
sub
xor
fnstcw
in
cmp
adc
pop
inc
dec
int3
repnz
xlat
testl
cmp
push
cmp
daa
cmp
dec
pop
pop
pop
mov
cwtl
xlat
call
xchg
xchg
and
ja
addr16
xchg
pop
pop
mov
mov
into
icebp
mov
iret
lea
test
dec
xor
xor
push
xor
fsub
mov
pop
loopne
add
sti
sbb
push
shr
sar
inc
hlt
add
test
inc
sti
push
dec
test
xor
sub
sub
dec
cmp
lahf
notl
push
aam
das
bound
mov
mov
icebp
stc
mov
repz
mov
sti
out
xchg
aaa
cmp
pop
js
test
push
xchg
ja
push
or
sub
or
inc
push
sarl
in
aaa
mov
xlat
enter
ja
add
push
ret
mov
dec
call
adc
push
sub
arpl
push
sbb
je
inc
test
pop
pop
push
xlat
int
cmpsl
loop
enter
xor
outsl
adc
dec
jo
pusha
and
inc
jae
sbb
in
cld
mov
xchg
fxch
jmp
cli
pop
push
cmp
jp
jbe
add
sbb
sub
lahf
mov
rcrb
popf
sti
sub
cmp
dec
xor
or
imul
cmpsb
mov
nop
lret
clc
mov
xchg
xchg
sub
ja
inc
sbb
daa
js
dec
pop
pop
pop
test
mov
xlat
call
xchg
xchg
sub
ja
inc
sbb
daa
js
dec
pop
pop
pop
test
jnp
shl
lock
lcall
int
jmp
repz
mov
jge
fcomps
add
cwtl
mov
or
sub
arpl
std
out
push
sbb
insb
pusha
pop
aad
int
inc
jle
and
fadd
cmp
and
shrl
sahf
les
cwtl
mov
mov
mov
sbb
adcl
or
enter
push
add
adc
push
sbb
cmpps
cmpsb
stc
jle
jns
jae
dec
sub
cld
js
mov
pop
outsl
in
adc
push
inc
test
pop
out
leave
mov
dec
iret
adc
xor
lret
fnstcw
dec
sahf
and
mov
shrb
xchg
test
icebp
mov
jmp
jl
adc
repnz
mov
out
sub
les
popf
hlt
inc
xor
push
jns
pop
pop
leave
jl
in
negl
add
dec
in
mov
aam
loope
mov
add
inc
repz
lcall
testl
js
pop
popf
testb
shlb
mov
out
pushf
sti
rep
sub
xchg
sub
pop
mov
adc
add
icebp
cwtl
aam
ret
aas
dec
push
sahf
stc
loopne
mov
add
xor
filds
test
in
out
adc
pop
aam
or
addr16
sbb
add
lret
xlat
cwtl
aam
sbb
cmp
push
mov
mov
shrb
imul
lea
ret
stc
cld
jge
fldl
adc
xor
push
xor
or
push
xchg
mov
or
cli
into
mov
push
sbb
loope
mov
out
pop
xchg
mov
test
rolb
push
mov
inc
std
jecxz
shrb
inc
lahf
and
mov
pop
dec
stos
pop
xor
add
and
cmp
lea
cmp
std
mov
hlt
sbb
mov
jle
pop
adc
aaa
mov
lret
adc
mov
addr16
mov
xchg
cmp
add
pop
jg
adc
js
xlat
jge
sbb
mov
mov
gs
xor
mov
cmp
lods
push
mov
and
mulb
adc
arpl
es
inc
in
es
and
sub
sbb
mov
push
xor
mov
lret
push
mov
scas
push
dec
out
in
xor
inc
fwait
out
ret
loope
es
sub
cmc
cmp
push
push
stos
inc
idiv
shrb
dec
cwtl
mov
movsl
fstps
xor
imull
leave
faddp
or
adc
repz
sbb
xor
je
sbb
movsb
inc
xor
inc
adc
xor
add
enter
xchg
jns
repz
add
mov
mov
mov
popf
xor
stc
xchg
addr16
rclb
lock
push
push
push
gs
push
ljmp
or
bound
movsb
cmpsb
into
and
fisubrl
and
aas
push
scas
insl
jmp
stos
push
mov
sub
subl
fs
in
insb
xor
fcomps
pop
loopne
mov
sbb
xor
cmc
stos
pusha
inc
test
pop
push
mov
jae
lods
aad
mov
idivb
insl
loopne
ret
push
iret
and
jmp
fldt
adc
popa
cltd
push
jecxz
push
inc
shr
inc
dec
push
mov
nop
mov
mov
pop
stc
dec
loop
lods
and
cmpsl
call
ret
cmp
pop
xchg
sub
inc
popa
sub
push
add
mov
data16
mov
pop
es
xchg
pop
pop
push
shl
sbb
xchg
or
aam
inc
cmpsl
cmc
xchg
cmp
popa
mov
pop
xchg
mov
xor
cwtl
nop
mov
arpl
lret
mov
pop
shlb
aad
rorb
pop
pop
mov
pusha
dec
and
movsl
aaa
sti
scas
inc
pusha
cmp
jbe
imul
xor
xchg
pop
fbld
pop
in
lea
push
mov
sub
lea
bound
notl
outsl
xchg
jecxz
leave
mov
pop
imull
sbb
mov
dec
or
push
inc
addr16
jp
cmpsb
loope
fnstcw
ret
bound
mov
fs
jns
add
or
add
les
lods
lock
inc
data16
movsl
mov
mov
sbb
rcrl
push
std
sub
sbb
jns
and
fwait
push
inc
enter
and
ss
cmc
aaa
sbb
testb
popf
or
mov
or
ret
lahf
fsubrs
fmul
pop
loope
dec
int3
imul
lahf
sbb
mov
cmc
sbb
inc
rol
xchg
dec
or
mov
xchg
in
lahf
xchg
jmp
addb
cmpsb
cwtl
movsb
rorl
movsb
inc
push
jge
adc
adc
mov
fists
mov
push
fmuls
cmp
inc
mov
add
and
mov
cmpsl
arpl
mov
stc
mov
ss
fwait
mov
popf
adc
stc
bound
in
dec
mov
adc
addr16
outsb
jns
sbb
jno
sub
cs
dec
loop
rcrb
push
arpl
in
lcall
movsb
mov
and
add
inc
dec
xor
and
sub
add
pop
cmc
mov
cmpsb
divl
inc
outsb
hlt
inc
les
xchg
lahf
mov
mov
push
test
add
mov
jns
inc
jmp
mov
or
je
mov
cmp
je
xchg
es
in
jae
sbb
out
adc
mov
shll
jg
rep
xchg
fistps
push
inc
movb
andl
inc
adc
ljmp
mov
testb
aam
orl
sti
leave
pop
pop
xor
lea
jnp
and
fucomp
jae
dec
pop
or
repz
scas
ffreep
sub
aas
ret
jle
mov
pop
bound
test
or
lcall
bound
fldt
out
stc
mov
jmp
fwait
push
insl
or
int3
cmp
sub
pop
lock
adc
xchg
xchg
inc
sahf
add
adc
mov
dec
pop
gs
xor
or
pop
sub
gs
push
outsb
cld
notl
rorl
testb
sbb
imul
mov
ret
mov
pop
iret
and
cmp
sub
int3
dec
push
test
insl
iret
cmpsl
sti
ds
lds
or
jno
cmc
pop
pop
aad
mov
int
xchg
lds
mov
pusha
cmpl
jge
xor
repz
sbb
sbb
mov
test
mov
scas
loope
mov
inc
pop
ljmp
xchg
cmp
push
movsl
dec
pop
xor
adc
and
xchg
test
stos
xchg
shll
xchg
mov
push
inc
lret
aam
les
jno
jge
loop
inc
dec
loop
fsubl
mov
or
push
cmc
sub
mov
lds
aad
jb
mov
pop
dec
ss
stos
pop
rorl
or
rcll
outsb
testl
test
stos
loopne
dec
popa
andl
fiadds
mov
or
int3
lods
push
and
cli
nop
add
mov
test
adc
jb
adc
mov
pop
mov
xor
test
cwtl
in
mov
gs
gs
outsb
add
xor
jl
shll
out
in
arpl
clc
jl
adc
cmpsl
mov
enter
push
stos
pushf
xchg
std
mov
enter
xlat
push
aad
add
stos
xchg
das
ret
mov
cmp
inc
dec
mov
insl
js
hlt
xor
xchg
fbld
cmp
add
lods
sbb
push
lret
dec
aam
add
inc
inc
in
and
fidivrs
xchg
clc
and
popf
inc
jl
daa
pop
push
daa
jl
ja
dec
fdiv
mov
push
jb
mov
popf
pop
dec
rcll
ljmp
cmp
jae
dec
or
shl
xor
call
lret
and
jns
fchs
inc
pushf
fwait
and
add
movsb
cmpsb
sarl
mov
cmp
sti
or
mov
sub
mov
iret
rolb
jne
es
push
ss
xchg
shrb
pop
or
adc
xchg
inc
inc
fcoml
xor
mov
mov
cmp
dec
mov
and
outsl
sbb
mov
xchg
cmpsb
mov
pop
jo
stc
ljmp
andb
dec
ror
xor
lds
cmpsl
cmp
and
cmpsl
fdiv
adcb
enter
movsb
movsb
mov
sub
rol
sub
insb
adc
sub
sbb
out
jbe
fsubl
dec
lods
adc
cmp
pop
imul
inc
loop
cmp
and
mov
or
push
mov
pop
loop
faddl
lret
scas
push
add
jnp
ss
dec
fistpl
adc
jae
in
push
lods
push
pusha
testl
jecxz
mov
addb
std
je
or
push
aaa
xor
stos
lea
repnz
xchg
mov
inc
xchg
out
inc
xchg
xor
fcompl
mov
addr16
and
mov
jmp
stos
sub
ds
sub
sub
in
lods
cmpsl
dec
lcall
or
mov
addr16
lods
into
rorl
xor
mov
mov
popa
in
mov
lahf
outsb
sub
jecxz
aas
push
mov
std
movsb
sub
cmp
add
nop
sub
std
xor
cmpsl
dec
inc
movl
sbb
or
or
scas
lds
xchg
mov
cmpsb
sub
xchg
mov
adc
xchg
stos
rorl
push
cli
lock
sbbl
or
out
fs
das
push
pop
lea
pop
dec
lds
or
xlat
loope
mov
add
repz
push
test
dec
sub
shll
idivb
push
imul
jb
in
imul
fsubs
and
jle
jmp
stos
mov
jb
push
fmuls
xchg
sub
loope
jb
sub
mov
adc
and
ror
mov
mov
hlt
scas
sub
aam
bnd
xchg
out
aam
cmp
cmpsl
imul
jne
adc
in
std
fdivs
rorl
fists
dec
xchg
or
mov
cmp
fisttpl
in
cmp
pop
push
xor
cs
or
leave
daa
xor
xor
or
cmp
cmp
mov
mov
mov
mov
adc
call
cmp
sbb
popf
mov
fimuls
inc
inc
pop
xchg
mov
sub
add
adc
pop
orl
aaa
in
cmp
adc
dec
mov
mov
pop
cli
jo
mov
fstp
outsl
dec
push
mov
in
sbb
pop
jnp
jl
xor
add
cmp
pop
push
jbe
rep
sub
mov
add
adc
lret
shrb
cmp
pop
dec
lahf
popa
sub
sub
pop
mov
lock
imul
inc
push
jl
scas
push
enter
mov
xchg
push
lock
les
loopne
inc
cmp
sbb
out
outsl
orb
xchg
xchg
push
inc
mov
add
aaa
daa
adc
dec
cmp
sub
aaa
push
clc
pop
cmp
cli
sub
in
js
mov
movsl
leave
out
dec
gs
filds
nop
mov
arpl
movsl
inc
jge
xchg
lcall
fstps
lahf
lret
sbb
jbe
fcmovu
push
jp
jl
dec
mov
js
mov
sub
lock
lcall
xor
sub
pusha
push
mov
fstpt
scas
dec
xorl
lds
cs
in
fidivl
xchg
int
push
dec
cmp
in
into
shll
add
dec
das
inc
inc
mov
out
icebp
mov
cmpsl
orl
data16
insb
cmp
hlt
das
cli
cmp
mov
lahf
cld
lea
int
inc
addb
mov
loope
jo
jne
fiadds
and
repnz
sub
push
neg
aaa
pop
push
xchg
ret
aaa
xchg
jae
mov
mov
rol
mov
xlat
sbb
sub
insb
dec
pop
movsb
xchg
mov
mov
mov
pop
test
or
push
repz
stos
sub
dec
aas
repnz
loope
lds
xor
jecxz
dec
scas
or
mov
ljmp
out
push
mov
outsb
pop
lret
lds
enter
out
mov
sub
movsl
or
xchg
lahf
inc
jmp
xchg
int3
rorl
daa
sub
mov
xchg
jmp
pop
fbld
pop
pushf
jmp
xor
repnz
push
fcmovbe
iret
arpl
mov
inc
std
cmp
mov
mov
rcr
jecxz
lahf
fstl
movsb
insb
inc
dec
dec
or
int3
push
movsb
test
icebp
mov
inc
or
fstpt
cmp
shrb
subb
inc
and
sbb
mov
or
mov
lret
mov
and
int
push
jbe
cli
daa
cwtl
inc
out
insb
mov
hlt
mov
pop
add
pop
je
inc
in
loopne
inc
or
stc
adc
pop
in
icebp
nop
sub
add
sbb
aaa
call
addb
mov
adc
push
les
and
scas
jne
mulb
stc
imul
insb
adc
test
inc
aad
cmp
sub
xchg
add
les
or
dec
xchg
sbb
xchg
inc
jp
repnz
xlat
lahf
mov
cmp
hlt
dec
push
out
pushf
fdivr
pushw
addr16
psrlq
lods
xchg
addr16
sub
xor
cwtl
xchg
pop
and
push
lcall
pushf
test
and
aaa
adc
arpl
cmp
mov
popa
mov
sbb
cmpsb
mov
gs
sub
mov
mov
je
fdivrs
movsl
mov
outsb
ds
and
addr16
or
push
and
mov
nop
sub
daa
inc
iret
jge
sub
sbb
outsl
shlb
ljmp
lret
cltd
inc
jecxz
add
jmp
dec
rcrl
inc
push
test
gs
sbb
mov
mov
add
sbb
mov
xor
mov
or
cmp
frstor
hlt
jecxz
xchg
loopne
sub
sarl
sub
pop
xchg
lcall
repnz
pop
emms
int
repnz
fbld
mov
fs
jmp
cld
mov
popf
dec
mov
pushf
push
dec
add
pop
push
imul
data16
daa
fs
in
and
xor
in
pushf
lahf
lret
or
pushf
inc
adc
or
inc
push
pop
jb
add
in
mov
xor
imul
jno
mov
dec
mov
sbb
pop
shrl
sub
pop
jbe
sbb
and
adc
add
lods
jmp
push
mov
rorb
inc
inc
testl
sub
mov
add
das
test
inc
lcall
sbbl
pop
dec
lock
stos
push
xchg
testb
les
arpl
outsb
in
scas
ljmp
mov
cld
loop,pt
mov
mov
lock
add
aaa
pop
dec
out
jne
fwait
mov
sub
adc
inc
aad
loopne
out
cmp
jg
dec
and
cld
bnd
pmulhw
das
mov
nop
sub
adc
std
adc
pop
xchg
cltd
pop
cltd
je
ja
stc
inc
jb
sbb
clc
lret
or
shlb
and
test
xchg
fsubrl
lods
add
dec
push
xchg
jecxz
out
mov
and
pop
jb
mov
pop
loope
adc
popa
enter
stos
dec
and
dec
loopne
pop
cltd
and
movsbl
xchg
les
pushf
aas
pop
cmpsb
push
adc
mov
mov
xchg
sub
test
into
xor
xor
cmp
pop
or
jns
dec
fcomps
jge
pop
pop
push
mov
push
mov
xor
gs
push
pusha
scas
fnsave
xor
ret
xchg
jmp
xchg
dec
sbb
ret
gs
movsl
ror
int3
push
inc
imul
das
lock
adc
add
jl
fwait
outsb
mov
inc
ret
and
movsb
mov
int3
jmp
cmp
add
test
aas
xchg
mov
movsb
xor
mov
xlat
icebp
movsl
add
dec
lods
cmp
outsl
xchg
push
push
les
int
cmp
out
or
ret
cmc
adc
ljmp
inc
fstpt
cltd
dec
loope
adc
xchg
mov
int3
xchg
imul
lahf
daa
inc
jae
cmpsl
xchg
mov
sub
and
stc
cltd
sbb
push
popa
dec
mov
and
outsl
idivl
mov
cmc
add
jmp
hlt
shr
mov
push
cmp
inc
sahf
sbb
xchg
adc
mov
push
inc
and
jno
clc
mov
int3
sub
lods
or
fidivl
xor
or
cwtl
xlat
call
xchg
xchg
sub
ja
inc
sbb
daa
js
dec
pop
pop
pop
test
mov
xlat
call
xchg
xchg
sub
ja
inc
sbb
daa
js
dec
pop
pop
pop
test
mov
xlat
call
xchg
xchg
sub
ja
inc
sbb
daa
jl
dec
push
imul
mov
cmpsl
clc
mov
xchg
xlat
addr16
frstor
scas
lock
call
add
or
mov
mov
add
xor
push
push
mov
mov
push
push
add
push
mov
mov
mov
mov
push
push
push
push
pushl
movb
pushl
push
call
pushl
mov
push
call
pushl
call
xor
inc
ret
push
jmp
sti
es
fisttpl
xor
adc
jnp
test
jp
pop
mov
sub
mov
or
sbb
jmp
sti
es
fildl
push
stos
mov
xchg
jnp
dec
mov
pop
xlat
cmp
or
sbb
repnz
loop
shll
ret
inc
mov
mov
xchg
pop
xor
cs
movsl
dec
movsl
jns
je
cmpsl
ja
es
pop
mov
lea
je
mov
lods
dec
mov
dec
rcrl
push
hlt
mov
ljmp
mov
push
dec
lcall
test
dec
movsb
xchg
dec
gs
cmpsl
jecxz
ja
nop
dec
clc
jg
adc
test
cmp
jnp
and
movsb
mov
gs
pop
push
mov
add
xor
mov
stos
test
push
jbe
sbb
xchg
pop
mov
push
outsb
xchg
add
xor
scas
mov
cmp
xchg
cmp
sub
pop
negb
sbb
leave
push
insl
and
push
ret
lret
roll
adc
fsubl
or
sbb
shlb
fildl
push
mov
xchg
arpl
xor
and
adc
sbb
jne
pusha
scas
jo
and
repnz
testb
aad
repz
dec
xchg
cmp
andb
mov
sbb
test
fldt
mov
xor
cmp
jmp
sti
pusha
scas
push
sahf
add
jbe
xchg
jnp
dec
mov
sub
cmp
or
sbb
jmp
sti
es
fildl
push
mov
xchg
jnp
dec
mov
sub
cmp
or
sbb
jmp
call
xchg
and
mov
push
add
jg
lcall
nop
cmc
sub
out
cltd
push
ret
cli
or
loop
sbb
mov
mov
and
cmp
jg
inc
jbe
jo
ss
or
int3
sbb
divl
decl
daa
shl
subb
add
sbb
icebp
xlat
data16
icebp
xor
inc
inc
jg
ss
lcall
pop
fidivl
push
adc
mov
shrl
enter
pop
addr16
mov
or
pop
and
jae
xor
mov
add
repnz
scas
fldcw
leave
push
push
adc
loope
fwait
popf
stos
xor
dec
inc
int3
ret
mov
sbb
clc
cmp
cmpsb
pushf
outsl
roll
xchg
loop
lock
mov
mov
cltd
mov
popf
jnp
fsubrs
adc
cmp
cwtl
push
hlt
call
dec
push
aaa
pop
cmpsb
cmp
jmp
sub
xorb
imul
mov
out
frstor
jo
ds
and
mov
mov
push
nop
addl
mov
nop
push
mov
jb
repz
pop
movsl
and
aas
inc
jb
pop
mov
xchg
daa
frstor
xlat
int
mov
lock
fs
inc
and
test
aas
jno
mov
adc
les
sub
pop
ret
enter
sbb
hlt
jg
je
xor
scas
mov
cmc
xchg
pop
in
out
loope
sarl
aaa
insl
cld
pop
imul
pop
push
push
pop
das
or
inc
inc
pop
or
mov
sub
loopne
aam
ljmp
addb
lds
push
xchg
sub
fists
aam
cli
outsb
mov
sbb
nop
mov
dec
push
inc
cmp
sbb
xchg
stos
pop
dec
sbb
mov
js
call
in
jo
push
sub
mov
jmp
sarl
jae
insb
adc
and
xor
pop
cmp
lods
mov
insb
sbb
inc
push
ficoms
jle
mov
mov
aam
adc
inc
or
rclb
mov
imul
jge
lcall
movsl
inc
jp
mov
inc
out
leave
in
not
jge
push
sbb
or
out
lret
shrl
mov
call
dec
je
out
jo
dec
loopne
add
push
mov
and
dec
fstpt
idivl
mov
popf
mov
lahf
sti
subb
add
hlt
mov
stos
push
rorb
cmc
pop
insl
sbb
sub
and
es
adc
xor
mov
cmp
pop
add
je
stc
in
sbb
xor
fistpl
dec
outsb
daa
rcl
imul
cmp
pop
in
mov
daa
aam
cmp
xorb
jae
xor
fldt
and
dec
pusha
ja
dec
hlt
daa
outsb
mov
fcom
fsts
mov
sub
out
das
idivb
mov
cmp
imulb
and
xor
cmp
cmp
cmc
jnp
es
jmp
aam
ljmp
daa
mov
movsl
dec
fisubs
add
fsubrl
aam
loope
adc
dec
inc
push
cld
mov
or
mov
mov
jle
or
jbe
aad
outsl
jo
es
mov
inc
pushf
jg
mov
jg
or
arpl
and
addr16
lds
jno
pop
push
xchg
movsb
mov
add
test
cli
dec
call
adc
sub
aam
push
dec
cmp
cmpl
sub
adc
jmp
and
jae
jmp
in
aam
dec
inc
pop
mov
mov
dec
sbb
divl
xchg
imul
mov
insl
orl
adcb
or
mov
scas
mov
jp
jmp
add
mov
jnp
or
and
leave
sbb
shlb
scas
mov
mul
cwtl
or
aam
cmc
icebp
sub
mov
add
pop
out
fdiv
mov
nop
sbb
mov
lock
mov
test
mov
addb
jne
sarb
iret
les
ds
sarb
stos
sub
cmp
gs
jl
daa
in
into
push
mov
lret
cmp
inc
and
out
xchg
add
sub
cld
bound
cmp
push
inc
imul
jnp
jo
mov
movsl
pop
jo
jb
push
mov
mov
nop
push
lcall
inc
sbb
push
nop
andl
mov
movsl
xor
cmp
shl
cwtl
inc
aas
jp
jae
sti
and
inc
aam
mov
cmp
xor
test
cwtl
lea
int
mov
adcb
inc
jle
das
repz
loop
outsl
das
jnp
mov
test
push
mov
sbb
mov
lret
mov
mov
loope
mov
xor
xor
jecxz
jne
dec
dec
out
pop
sbb
adcb
inc
rorl
cmp
in
fistpll
cmp
inc
push
pop
mov
push
nop
or
or
add
mov
in
cmpsl
je
stos
and
mov
sbb
mov
sub
movsl
testb
cli
mov
stos
fcoml
jns
imul
mov
popa
rolb
scas
scas
into
test
shlb
or
mov
sbb
xor
shrb
pop
sub
dec
inc
dec
lret
or
jns
repz
mov
sbb
addb
mov
or
sub
cmc
test
push
jae
inc
repz
cmp
xchg
jle
pop
mov
inc
xor
enter
jae
mov
imul
in
xorb
or
inc
mov
push
adc
sub
or
subb
sbb
ljmp
imul
mov
fs
pop
adc
aad
loopne
sbbb
scas
repz
sbb
cmpsl
data16
pop
ret
sti
sub
fmuls
cmpb
mov
enter
push
iret
sub
xchg
push
fs
adc
adc
dec
cmc
scas
lods
pop
loopne
jmp
decl
stos
jmp
xor
push
ds
mov
or
les
and
ret
ds
test
and
enterw
arpl
cli
mov
mov
movsb
and
mov
fsubl
shll
setno
and
ljmp
rclb
mov
rcrl
jg
dec
adc
roll
push
xlat
xor
clc
in
test
flds
inc
outsl
or
inc
bound
leave
mov
call
out
lret
fnstsw
aas
ret
and
jg
scas
add
or
outsb
dec
sahf
adc
aas
mov
mov
dec
jmp
or
pop
sub
loopne
and
xchg
bound
test
sahf
js
divl
xor
inc
jge
cmp
mov
mov
sub
xchg
jns
test
shrb
fnsave
mov
fsubs
xor
xor
pop
inc
in
cmp
mov
std
push
or
or
cwtl
ja
mull
sbb
inc
daa
push
cmpsl
push
sub
aad
adc
and
mov
inc
mov
lahf
inc
push
sbbl
jnp
sub
adc
jp
loop
jbe
adcb
and
mov
cmc
test
negl
or
adc
fdivs
add
mov
or
mov
jno
mov
stos
pop
clc
pop
scas
roll
andb
neg
sbb
xor
int3
lock
in
insb
xor
add
imul
imul
sub
and
test
jmp
sbb
xchg
push
cmp
xor
orb
and
inc
cld
pop
lds
cmp
lret
leave
sub
cmp
rcrb
lret
add
push
test
fstps
mov
outsl
test
inc
adc
insb
mov
inc
cmpsb
int
cmp
pop
pop
test
in
and
and
sub
ret
jg
pop
jbe
jl
jge
pop
cwtl
loope
lods
lods
xchg
xor
add
lds
cmpsl
sub
pop
arpl
xor
ret
mov
scas
lret
add
cld
push
and
xor
gs
cmpl
lret
and
lds
jno
es
in
daa
outsb
push
fmuls
sti
add
insb
iret
stos
pop
pop
mov
addr16
mov
fwait
mov
mov
idivb
sahf
mov
xorb
out
fnsave
rclb
imul
fisubrs
cwtl
cli
js
sbb
movl
and
ds
adc
ja
push
push
sti
pushf
adc
sbb
pop
scas
mov
sub
sar
aam
repnz
xchg
insb
xchg
faddl
jmp
fisubl
sti
testb
outsl
push
dec
jmp
adc
outsb
movsb
clc
scas
sub
xor
inc
cmc
jo
ret
call
les
pop
inc
jnp
mov
inc
add
mov
adc
jle
dec
jp
aad
addr16
dec
adc
add
dec
and
imul
inc
aad
adc
jp
subb
xor
mov
mov
fcomps
sbb
cmp
jg
aaa
push
shll
test
imul
and
jns
dec
fisubrs
or
cmpsb
add
adcb
icebp
add
pop
test
loop
imul
and
mov
mov
fidivrl
lock
inc
sbb
ret
lsl
dec
sbb
add
mov
fprem1
data16
enter
lret
xchg
roll
inc
or
lahf
or
add
stc
cmp
repnz
mov
je
add
mov
fwait
or
xor
sbb
aas
mov
add
scas
orl
lret
push
cwtl
sub
xlat
xchg
mov
push
jne
into
xor
sub
lods
leave
xchg
fcmovnb
cmp
out
scas
loope
pop
push
les
cltd
in
sbb
sahf
push
or
and
xor
xlat
pop
add
shl
or
call
lcall
add
add
subb
mov
adc
insb
js
mov
inc
adc
xchg
inc
push
mov
push
test
leave
out
jle
mov
push
aad
out
or
and
inc
cltd
fs
adc
in
inc
outsb
sbb
and
and
mov
aad
push
stos
and
fmuls
mov
and
push
inc
add
add
mov
pop
nop
jno
test
or
jo
cmc
mov
mov
xchg
movsl
jle
inc
jp
fildl
fdivl
dec
mov
sbb
orb
loop
adc
xchg
scas
sub
sub
adc
jecxz
mov
dec
pop
clc
test
cmp
mov
mov
pop
das
movsb
shrb
mov
test
xor
into
test
pop
adc
dec
pop
mov
in
je
and
inc
add
sahf
nop
fcoms
loopne
add
mov
sbb
lret
inc
mov
popf
push
inc
dec
cmp
mov
fcoml
fbstp
sarb
add
mov
mov
ret
addl
lock
sbb
fdivrs
loope
sbb
pop
loope
pop
enter
push
fadds
push
mov
push
shll
adc
mov
ffreep
pop
jge
xor
js
aaa
iret
jg
or
test
shrl
inc
mov
fdiv
dec
and
add
jns
push
mov
mov
jae
sub
cmc
mov
cmpsb
add
rcr
lret
or
sbb
cmp
mov
test
outsl
mov
mov
add
fisubrs
inc
iret
xchg
loopne
mov
sub
mov
data16
iret
callw
int3
scas
mov
stos
in
inc
pop
adcb
icebp
pop
adc
pop
clc
aam
pop
jae
cmpsb
cs
rcr
mov
push
mov
and
ret
cmp
data16
sbbb
inc
inc
add
xor
push
cs
jnp
and
sti
or
aaa
xor
push
sbbl
mov
mov
pop
or
hlt
or
mov
test
in
repz
push
cs
add
sub
dec
inc
out
sub
and
inc
out
leave
mov
mov
cmp
xchg
pop
addr16
aaa
adc
xor
mov
pusha
fwait
mov
pushl
test
std
add
jno
push
hlt
movsl
or
pop
dec
pop
xor
dec
stos
fistpll
loope
pop
dec
xchg
add
inc
pop
mov
xor
jns
insl
test
pushf
push
jnp
iret
push
mov
mov
jmp
ret
fnstcw
pop
arpl
in
ret
xchg
or
add
test
add
or
and
inc
push
iret
dec
inc
mov
icebp
inc
scas
pop
mov
sub
sbb
data16
negl
xchg
jbe
mov
pop
push
push
inc
clc
jecxz
inc
scas
pop
xor
cs
aam
mov
test
insb
sarb
add
fstl
xchg
iret
nop
fldenv
xor
mov
mov
inc
mov
xorb
push
inc
sbb
xchg
or
scas
lods
or
mov
fldl2t
fwait
pusha
sbb
sub
lds
inc
cld
pop
icebp
inc
mov
popa
imul
xchg
xorl
gs
add
xor
loope
jp
popf
push
dec
xchg
stos
mov
mov
mov
mov
mov
cli
test
mov
and
push
and
sbb
clc
les
mov
imul
sbb
aaa
addr16
cld
cmp
incl
repz
cwtl
mov
out
ds
or
xchg
scas
jne
arpl
popa
cmc
rclb
inc
jp
neg
mov
adc
push
cmp
cmp
add
jecxz
ljmp
mov
adc
push
pop
inc
movsb
fcmove
cmpsl
in
dec
push
xor
mov
and
stos
xor
fs
cmpsb
je
popa
repnz
cmp
xor
out
jno
push
aaa
and
or
cli
xchg
fwait
imul
push
jl
push
cmp
movsb
mov
push
push
mov
and
stc
fistpll
sahf
hlt
sub
lea
ljmp
fistl
pop
stc
fcompl
clc
sbb
jmp
cmpsl
cmp
into
push
or
jge
jge
dec
ret
mov
lds
out
popl
pop
pop
loop
add
xchg
fdivrs
insb
loop
pop
pop
lods
add
and
xchg
imul
cs
rcl
dec
pop
jb
out
xor
jge
mov
cmp
loope
inc
mov
int3
fcmovnu
aaa
fs
push
jge
xchg
inc
das
dec
xchg
push
jle
and
cli
jge
lret
cmp
stos
xchg
out
enter
insb
xchg
aad
xor
and
pop
cmp
repz
add
std
and
outsl
cmp
stos
insb
push
mov
jno
and
mov
jbe
xchg
inc
loop
push
mov
mov
cmp
clc
cld
aaa
cmpsl
in
lock
out
or
arpl
test
push
jle
daa
shl
cmp
divl
push
ljmp
jmp
add
mov
xor
aam
addb
dec
cmpsb
testl
lea
icebp
mov
shl
mov
or
imul
mov
adc
mov
and
add
dec
arpl
ljmp
adc
ficompl
jl
mov
fsubl
mov
fidivl
adc
cmp
mov
inc
fcoms
mov
jo
roll
insl
sub
xchg
mov
ljmp
cli
aam
cwtl
or
outsb
shl
movsl
pop
popf
leave
cmp
add
cli
mov
je
ss
sbb
xor
hlt
leave
mull
jae
fists
out
xchg
movsb
push
mov
enter
lea
shlb
sub
xor
cmp
enter
hlt
push
and
mov
les
das
jnp
adc
mov
mov
push
mov
pop
mov
mov
stos
cli
jl
cmpsb
or
std
jge
xor
add
pop
stos
jl
add
stc
or
xchg
icebp
dec
mov
mov
add
jle
lods
jno
out
xlat
pushf
dec
ja
cmp
test
in
adc
and
mov
test
inc
scas
pushf
sarb
out
xor
fisubrs
push
addr16
popf
xchg
cmp
repz
xchg
add
jge
cmp
cmpsb
ja
sub
hlt
out
pop
xchg
mov
mov
enter
push
fimull
xchg
pushl
jno
xor
nop
hlt
mov
adc
inc
mov
psubd
lcall
loopne
cli
dec
enter
xor
add
or
push
and
repnz
fildl
push
mov
xchg
jnp
dec
mov
sub
cmp
or
sbb
jmp
sti
es
fildl
push
mov
xchg
jnp
dec
mov
sub
cmp
or
sbb
jmp
sti
es
fildl
push
mov
xchg
jnp
dec
mov
sub
cmp
psadbw
push
out
push
jmp
iret
fildl
push
mov
jns
imul
mov
pop
inc
push
je
fs
pop
dec
jle
outsb
imulb
enter
clc
into
pop
data16
jbe
pop
mov
scas
ss
ss
dec
jle
outsb
negb
xchg
xchg
cmpsb
cs
inc
into
push
loopnew
sahf
arpl
ss
push
data16
testb
push
xchg
cmpsb
cs
inc
in
jne
add
dec
loop
stc
inc
aaa
mov
cmpsb
jle
sbb
jmp
xor
cmp
data16
movb
sarb
xchg
push
sbb
push
out
add
sahf
dec
mov
mov
lea
xor
lret
mov
jge
jne
inc
xor
pusha
arpl
mov
dec
pop
ret
mov
dec
mov
shrl
test
popa
push
mov
xor
push
ret
sub
sbb
jns
neg
mov
mov
push
jbe
push
mov
inc
dec
mov
sarb
xchg
loope
or
int
es
and
push
adcl
mov
pop
fldl
es
leave
xchg
push
jle
outsb
testb
push
xchg
cmpsb
aaa
mov
inc
push
out
divl
push
xchg
push
movsb
es
jo
sub
insl
shrl
ret
cs
mov
push
sahf
jb
push
int3
push
ret
push
xor
push
xchg
jb
push
sarl
icebp
jge
popf
and
and
arpl
or
lret
xchg
test
addl
push
mov
xchg
cmpsb
cs
inc
into
push
data16
jbe
push
mov
mov
dec
jle
outsb
negb
xchg
xchg
cmpsb
cs
inc
into
push
data16
jbe
push
mov
mov
popa
inc
mov
mov
ja
jg
dec
stos
mov
pop
fiadds
pop
push
inc
push
mov
and
test
icebp
xchg
or
push
neg
popf
lods
dec
cmp
ds
dec
push
mov
nop
adc
dec
lahf
fisttps
mov
cwtl
xor
jl
incl
lds
enter
inc
xor
in
insb
cmp
pop
cltd
movsb
test
mov
inc
loopew
loopne
and
scas
xchg
jle
mov
push
outsl
ljmp
icebp
int3
fcomi
sbb
scas
gs
ret
cmp
pop
movsl
mov
mov
insl
add
mov
add
test
jno
sub
xchg
cmp
movsl
shll
imul
push
les
jmp
sbb
iret
mov
fiadds
das
out
insl
sbb
jnp
test
roll
dec
cltd
ljmp
add
mov
ljmp
fwait
movb
popf
nop
or
int3
pop
imul
push
add
and
mov
mov
cld
gs
jns
arpl
add
sahf
dec
inc
cld
jmp
nop
cmp
jmp
dec
insb
pop
mov
dec
xor
add
rcll
inc
fldl
test
popf
inc
add
cmp
mov
add
stos
inc
cmp
and
stos
lods
dec
or
jg
mov
push
sbb
movsl
lds
push
mov
popa
push
cwtl
and
pop
pop
in
mov
adc
imul
fimull
ror
push
add
and
cli
adc
xchg
test
js
aam
sub
mov
cmp
pop
mov
popf
xchg
rol
inc
and
inc
xchg
outsb
fdiv
stc
lcall
movsb
nop
or
cmpl
hlt
add
repz
scas
adc
push
popl
ljmp
dec
and
cmp
pop
enter
mov
sub
and
sbb
cld
pop
cmp
jle
inc
dec
push
rolb
mov
out
sti
sbbb
gs
loope
sub
jae
es
sub
ret
arpl
loope
pop
cpuid
adc
xchg
xchg
sbb
jne
lods
sbb
ja
loop
mov
xchg
dec
pop
mov
jg
xchg
addr16
pop
mov
sbb
pop
enter
adc
shrl
sub
jnp
in
dec
or
lds
xchg
scas
mov
daa
mov
cmc
xchg
mov
cli
int3
jle
mov
sar
inc
je
loopne
mov
xchg
psubb
jmp
sub
sub
negb
or
inc
xor
cld
cmp
or
into
je
sbb
push
out
test
push
cmpsb
push
push
popa
sbb
movl
scas
cmc
push
or
sbb
gs
push
cmpb
xor
pop
push
repnz
add
pop
std
mov
sbb
into
jge
sub
mov
dec
scas
jns
test
add
fldenv
ljmp
outsb
ret
push
dec
les
inc
or
and
hlt
or
add
inc
xchg
or
jecxz
data16
inc
mov
outsb
lock
roll
push
or
xor
sub
sub
dec
sub
cmp
cmp
mov
and
pop
stc
add
ds
icebp
add
mov
scas
mov
lahf
dec
ds
xchg
jecxz
xor
mov
cmp
xor
xorb
cmp
mov
cmp
movsb
jl
xor
inc
pop
mov
pop
xor
ret
or
aad
jae
inc
mov
jo
sbb
stos
pop
pop
fcmovbe
orl
inc
frstor
inc
gs
hlt
add
add
inc
imul
sub
rolb
and
pop
out
add
sbb
stos
mov
das
cmc
inc
enter
push
adc
push
hlt
jmp
and
clc
out
andb
xchg
xchg
lods
stc
pop
mov
cmpl
rolb
jnp
pop
cld
cs
jg
orb
mov
rcl
or
push
adc
es
test
clc
scas
pop
sub
out
jp
fwait
sub
int3
jmp
and
or
cli
iret
sub
loop
jecxz
mov
xchg
cli
mov
out
and
add
hlt
and
jne
imul
ret
clc
stc
outsb
fildl
cwtl
loopne
bound
xor
pop
cld
inc
aam
add
int3
fsubrp
inc
xor
bound
push
addb
arpl
jge
and
jns
or
jo
jge
les
adc
pop
daa
in
scas
data16
clc
rcrb
ret
test
arpl
mov
lods
enter
les
push
fcoml
enter
inc
pop
or
mov
arpl
pop
out
test
lahf
aad
add
pop
cmp
cli
add
jns
mov
cs
sti
ss
and
jns
xchg
xor
popf
popf
das
cmp
clc
pop
sub
xchg
scas
lret
rorb
push
pop
sbb
xor
xor
and
jnp
jae
dec
adc
jb
pop
out
dec
nop
inc
jecxz
xlat
inc
mov
push
notl
iret
stos
stos
arpl
hlt
lret
lods
inc
mov
cmpl
in
hlt
push
ret
je
jo
or
add
inc
adcl
or
popf
push
add
adc
lock
mov
ljmp
pop
mov
jb
into
fsts
mov
int
ret
fsts
bound
cmp
or
ret
adc
mov
popf
lcall
clc
dec
test
pop
int
gs
lea
lods
pop
dec
stos
dec
sbb
dec
loope
cmp
pop
add
sub
lods
lock
xchg
cltd
pop
or
xchg
push
xchg
sbb
push
je
out
dec
mov
in
jae
out
xchg
mov
xchg
xor
cmpb
push
cmc
das
cwtl
shll
sub
cs
lret
xchg
pop
push
sub
test
add
jae
lahf
sub
pop
aad
shrb
and
mov
sti
pop
add
jmp
inc
inc
gs
sub
movsb
mov
and
mov
je
and
jae
cmp
dec
pop
push
push
scas
inc
pop
adc
xchg
insl
sbb
pop
ljmp
jl
sub
fdiv
sbb
sub
fimull
mov
jne
cmc
inc
cs
aas
dec
movsl
pusha
popf
test
lds
ss
in
aam
xchg
testl
mov
int3
sbb
rcrb
in
dec
loope
into
cmc
or
mov
popf
roll
sbb
ror
xor
out
int3
outsb
sahf
sbb
push
xchg
decl
xor
xchg
mov
out
pop
mov
sbb
shrb
dec
jecxz
iret
mov
mov
mov
testb
je
out
pop
outsb
nop
cltd
data16
fsubr
sahf
and
ret
mov
jns
and
xchg
inc
movsb
dec
adcl
sbbb
or
and
pop
or
loop
mov
mov
mov
xor
cmp
adc
xchg
subb
hlt
pop
arpl
sbb
jmp
addr16
xchg
jae
les
xchg
cmp
shl
in
lods
movsl
andl
shlb
ficomps
xchg
push
pushf
daa
repz
mov
and
cmc
out
push
add
fists
push
dec
add
adc
cmp
ret
mov
push
stos
mov
leave
pop
add
mov
mov
cltd
add
dec
mov
sub
jmp
out
add
or
cs
call
or
mov
popf
inc
push
pop
lea
and
cli
in
push
pop
or
cmc
mov
add
jle
or
lods
adc
or
jnp
or
aaa
mov
fdivr
cld
lret
or
mull
lock
call
fisubrl
icebp
neg
sbb
icebp
gs
mov
sub
jb
mov
jle
scas
in
push
fiadds
dec
jae
mov
xchg
outsl
out
push
inc
sub
xchg
sub
repz
and
cmc
push
shl
out
sbb
loopne
stc
sub
aad
lods
push
jmp
xchg
cmc
pop
xorl
filds
fidivs
sbb
outsl
fwait
ret
mov
xor
push
loop
inc
movsb
test
sbb
and
insb
in
and
daa
xchg
jb
xor
add
sbb
shrb
in
in
pop
inc
cmpsl
push
idiv
push
adc
pop
loop
add
subl
mov
or
xchg
pop
inc
xor
xchg
rorb
dec
jo
cltd
cli
popf
xchg
xchg
js
xchg
mov
push
xchg
fstps
movsb
enter
data16
adc
cmp
std
imul
mov
pop
xchg
push
rorb
decl
les
sti
in
jp
cmpsl
mov
je
jcxz
mov
hlt
push
ljmp
aam
into
stos
mov
add
jbe
push
xchg
inc
arpl
hlt
pusha
xor
mov
js
add
mov
fwait
and
adc
outsb
stc
jmp
adc
leave
dec
iret
out
das
imul
sbb
adc
pushf
xor
sarl
mov
add
dec
out
add
and
frstor
xchg
jno
adcb
dec
mov
sar
pusha
mov
xchg
das
mov
lock
fcoml
lods
movsl
inc
add
jmp
push
lcall
lods
cmp
push
frstor
addr16
dec
mov
int3
mov
in
pushf
in
pop
cmp
cmc
mov
push
clc
mov
test
xchg
xchg
mov
data16
pusha
pop
lret
or
repnz
popa
lods
fwait
xchg
les
cltd
daa
xchg
incl
fldt
or
lods
or
and
xor
dec
add
or
sub
push
movsl
sub
cmp
jae
jle
ja
mov
roll
cwtl
inc
in
fdivs
fbstp
mov
lret
adc
daa
mov
scas
xor
or
xor
pop
mov
mov
push
jo
mov
icebp
insl
cmpsl
aad
cmpsb
stos
sbb
sbbb
inc
repz
push
dec
sub
and
cmp
daa
sbb
xor
pushf
inc
push
addb
inc
mov
fdivl
imul
repnz
xchg
lcall
shrb
jecxz
jg
xor
cmp
pop
jecxz
xchg
push
adc
insb
xor
and
aad
mov
testb
mov
dec
aaa
in
jmp
xchg
mov
pop
insl
xor
gs
fnstcw
cmp
inc
jbe
push
out
icebp
out
mov
xlat
fmuls
lahf
fstp
jnp
fsubr
push
adc
cmpsl
sub
and
ficoms
sbb
sbb
fs
mov
xchg
ror
aad
fidivs
sbbl
inc
jp
sub
shrl
test
icebp
jge
loope
jb
inc
ja
rcrl
orb
sbb
into
in
fidivl
xor
testl
rcll
in
sbb
addr16
pop
shll
pop
pushf
stc
xchg
sub
lds
je
add
out
jge
in
or
mov
xchg
cmp
ficoml
nop
fwait
test
jne
mov
sbb
adc
inc
lcall
mov
adcb
sub
jb
mov
in
mov
xchg
push
mov
mov
dec
push
mov
je
mov
jge
lcall
daa
mov
inc
inc
mov
push
enter
pop
data16
test
mov
jo
push
pop
lock
sbb
ljmp
cmp
stos
hlt
mov
pop
sbb
test
call
lea
dec
in
push
mov
inc
xor
imul
xchg
pop
fsincos
clc
pop
jnp
cmpsb
loop
aas
cs
mov
call
push
test
es
icebp
clc
sub
sarb
sahf
insl
jb
popf
dec
outsl
shlb
insb
dec
inc
mov
lahf
jb
int
inc
test
inc
push
pop
mov
adc
fs
mov
cmp
int
jns
jno
cld
fdivr
pop
cmpb
cmp
add
dec
jne
out
loopne
jnp
adc
add
add
jae
test
scas
sbb
push
notb
dec
mov
xchg
or
repz
in
fisubs
add
push
mov
inc
in
sbb
dec
or
insl
push
push
loope
mov
xor
and
loopne
mov
adc
es
add
mov
in
add
dec
adc
or
dec
rcrb
push
iret
in
xor
shrb
dec
sub
sub
outsl
sbb
xchg
outsl
pop
or
inc
push
mov
xchg
mov
scas
or
jnp,pt
and
xchg
inc
sbb
mov
insl
cmpsl
cmp
push
or
mov
enter
sbb
rolb
sub
mov
adc
rorb
ds
and
push
or
pushf
lods
pop
cmc
jno
sbb
pop
sarl
sub
addb
js
sub
into
sbbl
sub
sub
imul
add
outsb
lahf
dec
add
je
cltd
or
jl
loopne
test
sub
mov
mov
dec
mov
insl
imul
cmp
mov
sbb
imul
cmp
leave
scas
xor
pop
sahf
aaa
ds
leave
xchg
mov
repnz
push
add
xorl
cmp
insb
clc
hlt
pop
sub
dec
pusha
inc
je
movsl
jbe
mov
mov
inc
or
cli
bswap
iret
add
push
shr
in
mov
push
jbe
pop
stc
pop
fs
mov
iret
xchg
sti
sub
popa
jb
jne
dec
cmc
call
sar
movsb
clc
xor
add
mov
push
adc
mov
pushf
test
repz
scas
repz
fadds
pop
sti
rcrb
add
inc
sbb
in
andl
sub
fistl
and
addr16
insb
int3
repz
filds
in
jecxz
jmp
pop
lods
push
xor
imul
loop
mov
arpl
hlt
daa
mov
mov
dec
mov
out
add
jmp
mov
cli
out
xchg
movsl
jle
gs
xchg
mov
mov
hlt
cmpsl
test
jno
insb
out
cmp
in
dec
xchg
test
dec
pop
jl
xchg
mov
in
dec
push
insb
outsb
dec
jns
cmpsl
sub
dec
sub
push
pop
rorl
jne
int3
or
clc
fs
sub
sub
outsl
sbb
stos
in
cmp
lahf
sbbl
lock
dec
jns
out
mov
and
adc
dec
lock
scas
adc
pop
shrb
push
mov
xor
jb
dec
icebp
sbb
daa
in
icebp
jle
xchg
clc
add
insb
mov
shrb
push
add
inc
imul
cld
and
push
mov
sbb
xor
jecxz
mov
cld
insl
mov
jo
adc
addr16
pop
mov
fistps
xchg
and
cwtl
mov
mov
jmp
arpl
mov
add
dec
mov
or
stc
mov
xor
xor
mov
mulb
jge
jmp
lock
dec
out
adc
inc
jae
je
and
out
stos
jo
or
mov
popaw
movsl
loope
jns
cmp
shr
lods
add
cmp
jge
xor
jns
or
pop
jae
hlt
outsb
inc
stc
sbb
mov
mov
icebp
arpl
lahf
leave
cmpsl
fisttpll
icebp
inc
arpl
imull
mov
pusha
shll
das
gs
mov
jle
cmpsb
xor
insb
sbb
fstl
les
jno
ret
dec
mov
jns
sahf
ss
cmp
lret
cmp
nop
push
call
cmpsl
mov
imul
jg
dec
mov
push
in
sti
and
push
out
xor
andb
sub
sub
mov
pop
popf
bound
push
dec
xchg
sarb
in
lock
or
lret
sbb
cmp
aaa
popf
mov
je
push
repnz
inc
pop
mov
mov
push
pushf
outsb
fwait
fs
pop
lods
filds
in
leave
fcoml
sub
dec
mov
or
pop
mov
lret
movsb
sarb
xor
inc
mov
cmp
je
ret
cmp
popa
jmp
jbe
sub
or
cmpsb
mov
ret
lods
pop
cmp
fisubl
push
xor
shr
insl
sub
ds
rorb
clc
xchg
lds
fists
arpl
jl
or
mov
jge
lods
and
adc
adc
insl
outsl
push
hlt
mov
mov
lret
sub
jl
mov
dec
push
fsubrl
icebp
sub
hlt
push
insl
jecxz
ljmp
aad
xor
sub
dec
lods
sbb
add
scas
call
imul
mov
add
mov
lahf
cld
jp
inc
adc
or
aaa
cli
gs
jmp
inc
xchg
aam
scas
ja
inc
sub
pop
fisttpl
push
xor
xor
push
fxch
mov
sub
es
pop
sbb
jne
pop
popf
bound
mov
test
loope
rcrb
mov
aam
jg
jecxz
push
lahf
dec
jae
cmp
dec
cmp
jnp
mov
negb
xchg
xchg
cmpsb
cs
inc
into
push
data16
jbe
push
mov
mov
dec
jle
outsb
negb
xchg
xchg
cmpsb
cs
inc
into
push
data16
jbe
push
mov
mov
dec
jle
outsb
negb
xchg
xchg
cmpsb
cs
inc
into
push
data16
jbe
push
push
mov
dec
jg
outsb
negb
push
xchg
mov
inc
xor
push
data16
add
mov
jmp
int3
out
lret
int3
ljmp
lods
stc
mov
and
pop
dec
push
jp
or
or
or
mov
cld
fisubl
mov
insb
dec
jl
sub
or
or
sbb
push
lret
pop
ljmp
xchg
stos
pushf
mov
and
cmp
pop
dec
jle
dec
inc
cmp
mov
pop
push
test
dec
movlps
sub
or
add
xorb
add
or
leave
push
jnp
lret
or
jecxz
adc
mov
xchg
gs
adc
jl
pop
outsl
pop
mov
aad
cmp
xor
xor
push
mov
insl
jns
dec
enter
rcrl
dec
or
push
icebp
es
cmp
pop
push
mov
dec
ud0
xchg
sbb
ret
hlt
sub
push
dec
popa
and
jmp
push
inc
push
cltd
jae
test
dec
lds
jp
cmc
outsl
out
or
pop
cmp
ljmp
mov
out
cmp
jp
or
sbb
sub
test
movsb
mov
clc
iret
pushf
lret
das
xor
add
adc
addr16
arpl
jns
mov
ljmp
jns
leave
mov
dec
cmp
push
push
gs
jne
pop
pop
push
sbbb
mov
out
lcall
jl
dec
push
jp
or
or
sbb
in
lret
int3
ljmp
mov
jl
dec
push
jp
or
or
sbb
in
lret
push
sbb
arpl
rol
push
lds
adc
sti
add
addr16
sbb
sti
je
int
xor
cmp
inc
shl
cmp
push
sub
sahf
and
movsb
out
fisubl
je
rclb
mov
jnp
adc
sahf
mov
pop
adc
shll
or
insb
jmp
ljmp
mov
ljmp
push
mov
nop
push
std
lods
test
jge
shll
fwait
jmp
inc
inc
outsb
leave
mov
mov
mov
fcom
pop
fcomip
outsb
repz
mov
and
jnp
xor
and
pop
mov
fnsave
imulb
cli
std
rol
aam
or
dec
pop
jle
cltd
cmp
das
inc
mov
loopne
dec
push
mov
mov
cmp
int3
mov
scas
inc
or
imul
test
push
mov
repnz
dec
roll
pop
das
imul
notb
fistl
mov
shrl
mov
pop
dec
popa
test
lahf
jg
stos
jbe
sbb
ret
movl
enter
cmpsl
stc
xchg
sbb
sub
xchg
mov
jno
and
or
outsl
aas
ret
aas
jnp
aam
bound
add
into
xchg
es
mov
xor
clc
mov
sub
sbb
cwtl
jbe
test
mov
sub
sbb
fisubl
inc
push
ret
and
sub
inc
aas
and
pusha
hlt
dec
sti
sbb
ds
outsb
pop
outsb
adc
cltd
xor
bound
ret
outsl
adc
jnp
mov
inc
xor
pusha
jae
sti
nop
sub
mov
sahf
and
scas
inc
push
jle
dec
pushl
clc
lods
add
xchg
xchg
jnp
outsl
inc
xor
xor
push
lods
out
insb
jge
xor
lods
xchg
movsb
in
cld
sub
lock
inc
daa
sbb
sub
xchg
rep
adc
xlat
adc
xchg
outsb
sub
int3
cltd
cmp
xor
mov
testb
pop
sub
jmp
lds
add
sub
inc
pop
jg
jecxz
ret
mov
jl
add
sarb
sti
sbb
mull
dec
decb
lret
cld
push
pop
popl
push
pop
pop
cltd
gs
and
add
mov
mov
sub
sbb
shlb
xchg
mov
xor
add
mov
jne
mov
push
dec
ja
ficoml
int3
mov
push
push
dec
and
pop
js
jl
jp
mov
in
mov
fsubrl
aam
aas
cmp
sbb
add
jo
ret
inc
or
push
std
loope
cld
mov
mov
mov
cld
push
mov
xlat
xor
push
mov
jns
xor
mov
sub
fcmovb
cld
fs
cmp
mov
mov
xchg
movsl
dec
leave
imul
lods
test
ds
push
or
sub
cltd
imulb
iret
das
xchg
adc
and
leave
sbb
sbb
cmp
rclb
mov
inc
xorl
dec
lea
clc
mov
ficoms
pop
jmp
adc
pop
popf
pop
insl
cmc
lea
adc
pop
mov
lock
leave
lock
jae
jg
and
arpl
lock
pushf
push
fwait
jne
add
lea
stc
ja
adc
xchg
adc
ljmp
pusha
pop
or
mov
iret
pusha
jbe
sub
movsb
mov
dec
dec
lea
fmuls
mov
pop
or
or
stc
jp
testl
jnp
les
mov
pop
or
ret
insl
pop
call
jecxz
mov
mov
jae
cmp
aam
or
push
mul
shr
xchg
pop
dec
push
cltd
movsb
and
outsb
bound
mov
jbe
lods
ret
sub
mov
dec
ror
pusha
lods
add
jne
pop
xor
and
sub
sbb
in
add
mov
popf
dec
dec
aaa
push
shlb
mov
jl
loop
xor
shlb
inc
push
mov
daa
fbld
popa
roll
repnz
jecxz
mov
addb
mov
outsb
sbb
cmp
int3
cmpsb
shlb
and
andl
pop
cmp
sbb
ss
fwait
ja
out
jno
and
mov
mov
pop
push
call
push
cld
pop
dec
lret
enter
or
dec
lods
xor
sbb
mov
cmpsl
inc
test
push
aas
xchg
mov
testb
out
imul
ds
scas
cmp
add
fwait
addb
sbb
xor
popl
ljmp
or
sub
into
dec
lcall
jle
call
pop
pop
sub
sub
dec
push
mov
movsb
test
sbb
hlt
icebp
ret
sub
stc
outsl
popf
out
push
add
sub
jmp
mov
adc
mov
push
je
sub
xchg
push
leave
out
mov
sbb
das
rcrl
sti
shlb
loop
mov
aam
lea
test
pop
and
jno
or
dec
fdivrs
fwait
push
mov
xchg
mov
sahf
mov
push
xchg
xchg
out
stos
lods
push
pushf
pop
clc
mov
pop
mov
sub
pusha
jecxz,pn
xchg
loopne
or
lahf
test
cmp
and
pop
das
jo
mov
xchg
loop
add
into
cmp
pop
movsb
cltd
xchg
cltd
push
jle
fsubrs
in
sti
mov
cmp
mov
push
push
cltd
jge
fcmovne
js
loope
cmpb
fsubrs
push
loopne
mov
push
adcl
outsb
movb
rorl
jae
aaa
in
insl
mov
jmp
orl
cmp
ja
cmpb
mov
and
add
bound
adc
xchg
stos
outsb
sub
push
inc
ret
inc
xchg
adc
fcmove
jae
repnz
dec
cmp
inc
push
cmp
sbb
aaa
adc
mov
es
jmp
mov
push
test
rcrb
pop
xor
rorl
mov
ljmp
sbb
pop
pop
xor
mov
out
loopne
les
mov
sti
mov
cmp
int
and
add
repz
out
insl
test
jp
aas
jecxz
jnp
cmp
movsl
mov
stos
loope
ficomps
js
outsl
arpl
je
testl
fwait
addr16
pop
sub
cmpsl
xor
gs
jns
aaa
dec
outsl
and
icebp
mov
sub
lock
push
mov
imul
sbb
out
in
out
outsl
fwait
loopne
mov
repz
pop
out
jecxz
xchg
cs
pop
cli
pop
stos
loope
dec
fnstsw
xchg
sbb
mov
cmc
lods
loope
xchg
mov
inc
xlat
pop
xlat
data16
ja
aaa
push
sub
pushf
cmp
mov
jno
sar
mov
adc
es
mov
jle
gs
test
hlt
and
xchg
fs
push
xchg
enter
xor
arpl
stc
inc
xchg
or
push
mov
test
cmp
inc
xchg
inc
jns
mov
xchg
mov
test
pop
ret
adc
lock
sub
mov
mov
mov
fadds
cmp
jb
dec
out
rolb
cmc
call
fistps
outsb
push
dec
lock
pop
push
lods
sahf
push
fists
sub
push
int
mov
insl
sbb
movsb
out
out
mov
lret
divl
dec
adc
push
sub
es
push
inc
pop
lcall
pop
pop
xchg
jg
lret
cmp
mov
je
imul
dec
rol
push
jo
mov
lods
neg
aas
sbbl
sub
movb
dec
aad
add
mov
jne
xor
ficompl
out
inc
or
imul
add
fildll
rolb
ret
cmp
sbbl
mov
mov
stc
rorl
ljmp
into
pop
sub
mov
movsl
jne
mov
and
fmuls
insl
jp
adc
xor
xchg
jae
or
addl
jb
xchg
mov
int3
or
inc
dec
xor
nop
push
fs
push
aam
cli
dec
sbb
out
loop
subb
lret
sbb
sbb
jo
inc
pusha
lock
add
and
incl
mov
inc
xor
add
mov
or
or
inc
sbb
cwtl
pusha
push
jg
cmp
aad
and
ret
sbbl
mov
call
sbb
cmp
add
mov
ss
lods
lret
nop
sub
push
xchg
dec
xchg
or
pop
dec
mov
sbb
into
mov
xor
adc
lods
xchg
popf
push
es
stos
mov
ja
and
repz
nop
sarl
mov
pop
dec
fists
cwtl
ret
mov
shl
inc
addr16
repz
xor
and
data16
cmp
cli
cld
mov
sti
roll
mov
cmp
push
clc
testl
pop
or
lock
test
mov
xchg
sbb
aam
stos
mov
jmp
jnp
xchg
inc
pop
push
nop
out
notl
pushf
and
push
lret
dec
cld
inc
imul
push
lret
outsb
dec
mov
movsl
lods
repz
imul
bound
jns
in
mov
or
dec
push
pop
pop
sub
sti
jb
mov
jmp
mov
cmpsl
es
dec
aaa
fwait
add
les
push
sar
xchg
enter
scas
lret
xor
jmp
push
jb
mov
insb
xchg
xor
xchg
repz
ja
test
push
push
dec
add
inc
xchg
lods
jle
insb
sti
add
test
icebp
adc
pop
cmp
out
out
shrb
or
mov
out
jp
sbb
sbb
fiaddl
sbb
or
fs
cmp
and
call
repz
cmp
insl
pop
sub
xchg
dec
lret
enter
or
cmp
mov
fldl
adc
rorb
push
cmpsb
pop
or
and
scas
jmp
insl
imul
sub
xor
dec
mov
sbb
ret
ja
adc
outsl
into
in
xchg
cmp
fisubrs
xor
mov
xor
stc
outsb
movsb
and
add
inc
icebp
popf
arpl
xchg
jmp
imul
in
je
mov
pusha
in
lret
sahf
adc
notl
jne
adc
mov
mov
jns
or
jle
test
or
sub
push
cmpsb
dec
jo
pop
fiaddl
lock
fs
jne
add
stc
imull
xchg
cmpsl
rcll
inc
addr16
mov
lea
fisttps
rorl
dec
ss
inc
or
pop
push
inc
pop
inc
rcrl
jne
and
mov
in
fwait
push
pop
jl
mov
push
adc
nop
addl
call
xor
test
dec
imul
test
dec
mov
scas
and
push
sbb
sbb
xor
xchg
push
out
pop
adc
aas
xchg
test
imull
or
icebp
mov
push
jmp
data16
into
xchg
aam
in
or
popf
add
loopne
or
cltd
mov
or
sub
xor
fiadds
push
test
and
push
sbb
lret
cld
shr
dec
add
repnz
rorl
stc
popl
push
lods
neg
pop
jle
adcl
rcr
xchg
sub
push
pusha
cmc
ret
cmp
out
stos
dec
adc
divb
stos
cld
pop
sarl
sbb
or
mov
adc
enter
aad
add
mov
addl
call
in
and
hlt
jns
mov
and
ret
roll
add
ret
movsl
aaa
mov
sarb
popf
shrl
leave
push
lret
cmpsb
pop
jge
dec
dec
pop
adc
dec
mov
test
mov
and
mov
adc
push
xchg
and
add
sub
inc
hlt
xor
dec
je
push
push
lea
icebp
xchg
xor
lods
mov
push
jl
sahf
gs
std
stos
es
push
dec
lahf
xchg
rorl
imul
push
in
xchg
test
mov
and
jb
adc
push
fwait
ljmp
xchg
popf
les
shlb
cmpsl
loopne
mov
dec
mov
sub
dec
fs
dec
aaa
ret
add
into
and
hlt
notb
mov
gs
test
jbe
push
outsl
dec
xor
test
sahf
sbb
aas
neg
push
pusha
jae
stos
mov
mov
push
shlb
pop
rcrb
mov
out
pop
mov
adcb
xchg
and
push
std
inc
bound
nop
sub
mov
mov
pusha
daa
and
shrb
jmp
idivl
xlat
mov
lret
lahf
sbb
dec
cwtl
xchg
std
inc
out
lahf
inc
lahf
mov
fimull
inc
jo
mov
out
mov
mov
lcall
shll
bound
jg
pop
push
xor
sbb
mov
xor
outsb
loop
push
out
test
fcom
mov
fsubrs
xlat
jb
out
mov
test
repnz
ret
jle
mov
or
lods
push
int3
pop
mulps
push
dec
add
mov
les
in
mov
cwtl
test
ljmp
mov
lret
push
and
and
sbb
xor
adc
xchg
leave
bound
adc
sub
xor
lret
into
cmp
cmc
arpl
add
je
sub
adc
xchg
ljmp
mov
hlt
xor
mov
std
jne
mov
adc
cmp
adc
jo
push
inc
roll
mov
hlt
adcb
sub
pop
insb
lahf
add
rolb
xchg
insl
mov
adc
xchg
sub
pushf
movsb
jp
mov
adc
frstor
cmp
sbb
add
jge
mov
enter
lcall
emms
adc
xorb
lock
out
leave
stos
mov
mov
das
mov
adc
inc
les
adc
mov
imul
cmp
push
icebp
dec
aad
mov
xchg
int3
inc
outsl
adc
stos
pop
fistpll
pop
jp
and
push
jg
dec
push
or
hlt
fisubs
cmpsb
fs
popf
mov
jl
testl
pop
sbb
cld
inc
clc
push
lret
shlb
push
push
int
popa
adc
imul
lcall
mov
push
scas
aas
mov
leave
divl
push
adc
jnp
fsubrl
mov
imul
cmp
aaa
out
out
push
inc
mov
lods
std
lods
and
in
iret
mov
loopne
sub
push
dec
cmp
mov
jle
imul
pop
cltd
adc
pop
sub
or
pop
lds
dec
push
mov
push
xchg
and
call
inc
sbb
mov
inc
push
pusha
pop
jg
jmp
push
jg
or
lods
int
dec
icebp
movsl
pop
push
add
stos
in
or
stc
jle
roll
dec
push
xlat
adc
jns
add
fmuls
fistps
and
bound
pop
stc
shlb
imul
outsb
movsl
and
xchg
sahf
jl
cmp
and
aam
aas
pop
push
fnstsw
std
aas
mov
in
push
fsubs
scas
std
sub
cmpsl
jp
stc
jmp
addb
mov
pop
ret
cmpsb
cld
stos
sub
ret
push
sub
pop
add
jecxz
xchg
xchg
ds
loopne
scas
call
shlb
popa
sbb
xchg
hlt
inc
push
push
lret
dec
sbb
pop
sub
push
push
push
xchg
fwait
ret
pop
fwait
sub
fwait
cmp
dec
mov
push
shr
fldcw
in
dec
push
lret
icebp
ds
lds
mov
test
loopne
fwait
and
mov
push
pushf
lea
cwtl
and
cmp
dec
sbb
aas
insb
fwait
pop
stc
push
data16
gs
fucomp
mov
ret
popa
add
mov
ret
pop
int3
pop
arpl
mov
int3
rcrb
or
testb
xchg
jne
xor
mov
pop
sahf
push
ds
add
cmpsb
jbe
mov
or
sar
adc
outsl
sbb
add
jecxz
mov
fistpl
das
pop
aas
push
or
or
xchg
imul
fistpl
dec
dec
ficoms
adc
jg
jb
ljmp
pop
nop
sbb
clc
ret
pop
jmp
mov
push
in
lcall
daa
mov
je
dec
rcrl
xchg
ret
insl
repnz
sub
mov
negb
sbb
add
clc
sub
scas
cmpsb
xor
test
aaa
fs
jg
jo
call
lea
movsl
fwait
push
repz
insb
std
loopne
addr16
daa
stos
add
jmp
push
les
cmc
mov
xsha256
cmpsb
push
pop
jg
add
scas
test
cmc
adc
mov
fdivr
lods
mov
insb
dec
jl
dec
push
jp
or
or
sbb
in
lret
int3
ljmp
mov
jl
dec
push
jp
or
or
sbb
in
into
int3
fisubrl
mov
mov
mov
or
or
hlt
cmp
lret
xchg
ljmp
mov
sbb
insb
mov
lock
pop
or
repz
sbb
testb
push
imul
ret
mov
inc
fcoms
es
push
pusha
out
testb
sub
sbb
mov
inc
fcoms
dec
fdivl
mov
push
mov
clc
test
sahf
aam
lcall
call
sbb
pop
pushl
push
sub
pop
cwtl
or
das
andl
sbb
gs
int3
movl
dec
fs
das
out
pushf
shrl
cmpsl
dec
and
pushf
aam
inc
add
inc
sub
pop
adc
repz
clc
mov
and
sbb
aaa
lret
fistl
xor
push
sub
or
fimuls
jge
imul
jae
stos
and
out
addr16
in
repz
mov
cwtl
push
xlat
cmpb
sub
fistl
jne
aaa
fcoms
in
jmp
mov
std
in
movsl
loope
xor
adc
push
leave
mov
mov
xchg
pop
out
push
dec
inc
xor
sub
mov
mov
push
push
enter
mov
cld
js
mov
testb
fstps
out
jns
mov
mov
aas
rorl
cld
inc
fbstp
mov
xchg
repz
leave
pop
test
cli
rolb
mov
xor
jbe
jp
fnstcw
mov
mov
xchg
sbb
or
clc
jbe
inc
fcoms
es
push
push
pop
sub
sbb
enter
test
mov
push
push
gs
cli
fs
in
sub
xchg
dec
cmc
pop
and
lcall
mov
sbb
imul
aam
testl
test
jae
les
test
sub
fnstsw
adc
sub
jae
push
pop
test
cld
scas
rcrb
adc
je
ja
lcall
mov
mov
lcall
and
mov
sbbb
aas
ja
stos
popf
das
mov
xchg
cmc
ja
sbb
addr16
pop
jo
and
mov
push
dec
das
and
sbb
jle
scas
mov
pop
jmp
dec
lret
jno
repz
fnstcw
cmpsl
cmp
nop
mov
lea
arpl
xor
cs
xchg
into
jb
jg
mov
or
sbb
out
mov
pop
or
jbe
pop
int3
stos
rep
scas
xchg
pop
mov
lret
out
mov
mov
mov
inc
fidivrl
adc
inc
cmpl
cmp
push
cmpsl
fiadds
call
std
xchg
orl
daa
cmp
dec
aad
mov
scas
andb
jp
ret
aas
or
fstps
lea
add
inc
add
push
scas
out
jno
fldenv
push
lds
mov
xchg
mov
insl
push
inc
mov
jl
sbb
fisubs
pushl
lret
inc
push
imul
xor
cmp
xchg
dec
sarl
mov
xchg
leave
inc
addl
sub
imul
rcrl
and
inc
lcall
sub
pop
cltd
in
popa
orb
test
jae
imul
icebp
leave
jns
inc
leave
popf
in
imul
dec
nop
pusha
enter
lret
adc
imul
lods
adc
or
sub
ss
xor
adcb
lock
pop
jno
sub
xchg
outsb
sarl
outsl
cwtl
dec
loope
inc
std
pop
or
cmp
cmpsl
jp
lret
loope
fstpt
out
or
insl
fistl
pushf
test
push
or
sub
sbb
dec
dec
loop
pop
mov
mov
push
jle
jne
imul
sbb
mov
cmp
xchg
mov
push
push
das
xchg
lds
data16
call
sbb
enter
inc
inc
lcall
gs
test
cli
pop
addr16
call
in
jae
xor
pop
lcall
sbb
scas
pop
xchg
fimull
lret
fildll
jno
outsb
pusha
add
xor
ljmp
stc
insl
hlt
lock
call
cwtl
jo
movsb
push
fimuls
sub
negb
xchg
ret
xor
sbb
sbb
push
mov
mov
lds
pushf
in
shll
out
imul
sub
pop
xorb
pop
mov
das
inc
ror
stos
add
ljmp
or
jp
sbb
pop
jbe
call
and
mov
mov
sub
rclb
xchg
dec
and
les
out
dec
into
rcrl
push
mov
adc
shlb
dec
inc
cs
imul
inc
test
addr16
lock
pop
out
sub
push
jl
jl
movsl
test
scas
cmp
shll
xor
cmp
or
sbb
inc
xchg
cwtl
cmp
adc
mov
rclb
push
aas
loopne
pop
cmp
jmp
and
mov
scas
fisttpll
sub
push
scas
in
or
icebp
adc
popa
iret
ja
dec
xlat
test
mov
fldt
ja
sbb
and
dec
int3
pusha
add
mov
cmp
xchg
jl
push
pop
lods
fcomps
push
adc
pop
mov
scas
xor
pop
das
icebp
adc
addr16
add
out
pushf
and
mov
ror
inc
sub
fs
pop
xor
jmp
out
mov
push
or
sub
test
out
cmp
cltd
adc
iret
out
or
jle
jo
jnp
fimull
mov
imul
jl
in
xor
lods
cli
xchg
sbb
sbb
xchg
loope
daa
sub
clc
sbb
mov
jnp
adc
or
repnz
loopne
mov
dec
int
xor
fnstcw
gs
ja
sub
mov
sbb
notb
xchg
in
cmpsb
xchg
dec
lahf
cwtl
cmp
xchg
xchg
pop
sbb
andb
pop
filds
pop
sbb
mov
daa
inc
std
add
fs
mov
add
lret
dec
inc
mov
ja
lds
cmp
mov
jne
jmp
or
dec
dec
pop
and
cmc
loop
pop
call
adc
mov
insl
add
or
fadds
jae
jo
push
mov
cmp
xchg
inc
in
fldcw
adc
cs
stos
dec
clc
cmp
dec
int3
lods
pop
insb
inc
push
fisttps
insb
sbb
lods
lods
or
cmp
pop
inc
jle
nop
test
sub
out
jbe
sbb
sahf
mov
mov
jmp
adc
mov
sub
shlb
push
aad
subb
dec
jmp
fcoml
je
loope
push
adc
sbb
enter
cmovb
xorl
out
inc
and
push
popa
adc
mov
fistpll
mov
pop
aas
test
sub
testl
cmpsb
cmp
sahf
sub
sbb
and
test
push
cltd
stos
push
out
cs
testb
mov
mov
lret
pop
cmp
shlb
mov
xor
out
xlat
and
fs
pushf
imul
aas
rclb
in
fisubrl
push
es
test
mov
std
sbb
pop
rcll
and
jge
es
cmp
cltd
bswap
and
hlt
lret
and
mov
xchg
push
xor
xor
sbb
movsb
dec
dec
outsl
or
xor
insl
jg
je
sbb
sarb
dec
inc
fidivrs
mov
lods
sbb
roll
test
dec
fwait
mov
stc
xchg
pop
nop
lods
test
in
outsb
aaa
push
push
sub
imul
fisttps
rep
rolb
mov
jg
lds
fcmovne
jmp
movsl
and
jmp
in
cmc
cmp
fucomi
mov
xor
ss
out
push
mov
jmp
lret
pop
jmp
test
mov
pop
push
cwtl
enter
sub
enter
lods
cmp
lahf
mov
notb
out
ss
jo
pusha
push
lods
mov
rolb
push
insl
insl
jmp
mov
push
arpl
inc
lds
into
lods
mov
sub
add
leave
inc
mov
push
outsb
ss
cld
jbe
fistpl
jge
adc
and
pushf
pop
or
mov
cmpsl
jne
test
and
push
cmp
lock
cld
addb
push
lock
loop
sbb
leave
test
enter
xor
mov
ds
sub
and
rorb
sub
inc
cmp
dec
lds
jo
mov
les
mov
jge
lfs
push
mov
frstor
cltd
in
movsb
leave
daa
dec
mov
adc
xor
add
incl
in
fstps
sbb
xlat
xor
pop
push
and
push
lcall
add
adc
in
loop
loopne
dec
mov
and
xchg
inc
loope
push
pushf
push
leave
outsb
addl
xchg
xchg
jecxz
out
enter
mov
ret
cs
fs
xor
pop
jle
iret
sti
and
xor
test
adc
sub
adc
pushf
insb
mov
int3
push
lods
sbb
push
fisubl
pop
into
mov
jbe
xchg
or
dec
mov
pop
adc
push
lea
cmp
inc
dec
sar
jmp
mov
test
or
push
push
into
sub
test
scas
ret
add
xor
push
mov
sub
stos
jle
lahf
jmp
mov
leave
push
scas
add
push
inc
call
call
shr
mov
inc
pop
mov
xchg
cmp
addr16
sbb
jg
das
hlt
aad
xor
or
fwait
stc
xchg
sbb
mov
mov
scas
shrb
xchg
mov
push
shrl
mov
das
int3
and
add
cmpsl
dec
imul
sar
mov
mov
fnsave
imul
sbb
push
inc
sbb
bound
mov
cmp
test
inc
cmp
cmp
ret
fnsave
push
jne
xor
aas
adc
push
dec
sbb
pop
cltd
insb
dec
mov
jg
mov
mov
add
dec
cld
loop
sub
mov
mov
mov
mov
or
xchg
mov
loop
lahf
lahf
xlat
pop
xchg
fisubrl
test
nop
call
sbbl
int3
lret
dec
dec
imul
mov
movsb
mov
jo
mov
dec
jp
test
mov
stos
sub
jmp
mov
loop
cmp
fnstsw
xorl
cwtl
push
insl
mov
movsl
adc
sarl
fcomip
cmp
mov
dec
sbb
push
inc
lds
scas
call
cmpsb
ljmp
mov
out
dec
pop
jl
shlb
insl
mov
mov
mov
iret
mov
cli
push
adc
mov
jmp
iret
leave
dec
js
push
push
add
dec
sub
movsb
cmpsb
arpl
add
mov
jnp
addr16
push
mov
scas
and
leave
inc
pushf
push
adc
sbb
mov
inc
mov
pop
ljmp
cmp
in
fs
into
in
push
int3
ja
mov
cli
cmp
pop
pop
imul
loop
inc
test
cltd
push
sahf
loop
iret
inc
icebp
fisubs
mov
add
cltd
fcmovb
or
mov
out
jo
add
cmp
int3
mov
cmp
adc
cmpxchg
jmp
into
push
inc
rcr
cmp
pop
cwtl
stos
mov
jmp
in
gs
pop
adc
leave
rorl
lods
cmp
es
cmp
inc
cltd
adc
cli
lea
mov
ljmp
add
sub
inc
adc
ret
sub
pop
and
clc
scas
cmpsb
xor
mov
ret
fucomi
je
sub
push
cmpsl
cmp
push
or
jbe
dec
jae
adc
movsl
cmpsb
jne
test
and
in
or
shll
cwtl
sbb
mov
fs
cwtl
mov
mov
jle
xor
adc
fs
inc
rorb
inc
daa
push
pop
sahf
loopne
addl
jge
pop
lods
xchg
sub
mov
sub
lods
test
or
cmp
mov
in
rclb
add
mov
cli
out
xor
into
jle
mov
mov
xor
int
xchg
lahf
ret
daa
js
adc
mov
in
outsl
pop
sbb
pop
dec
fiadds
js
pop
pop
enter
lret
mov
xor
frstor
xchg
mov
adc
or
test
mov
movsb
pop
out
aas
lock
hlt
mov
push
jle
mov
ret
int
mov
sbb
rolb
lock
fnstenv
mov
aam
repnz
les
fistl
out
mov
imul
push
lods
inc
rcl
lret
jbe
fisubrl
bound
sti
adcb
sbb
push
popa
push
push
pusha
loopne
sub
jg
jecxz
xor
and
push
stc
in
aas
pop
aad
mov
pop
cs
cs
outsl
mov
aaa
popa
adc
add
sbb
scas
dec
pop
shll
xor
and
sarl
ficomps
loope
mov
sarb
xchg
xlat
pop
or
repz
mov
cmpsb
lea
aaa
adc
hlt
add
push
lods
in
imul
loope
sub
in
outsl
iret
and
std
frstor
push
pop
out
ja
test
jl
ret
loopne
sub
add
std
mov
jmp
pop
mov
sbb
test
cmp
lret
pushf
mov
data16
call
push
lods
fnstcw
jge
mov
hlt
push
jno
les
or
pop
shll
scas
inc
pop
shrb
xchg
or
add
pextrw
inc
cltd
popa
push
fdivs
int
pop
sub
int
scas
adc
cmc
or
out
into
imul
xor
xchg
shll
cmp
inc
xchg
imul
add
push
mov
inc
loopne
test
lcall
mov
nop
es
cmp
daa
add
dec
rcrl
int3
int
rcr
mov
adc
dec
rorb
xchg
xchg
jae
or
xor
or
lock
cmp
fadds
shll
and
inc
mov
cwtl
push
pushf
lret
or
add
shlb
jl
lcall
je
mov
rcl
pop
push
ljmp
out
cmpsb
negb
gs
ret
int
lods
out
xor
xchg
jne
test
mov
or
lret
add
fnstcw
jbe
sub
jno
stos
lock
sarl
xchg
ss
jne
ficompl
xchg
daa
mov
insb
push
push
dec
and
cmc
pop
push
pusha
das
stos
pop
dec
mov
xchg
ret
xchg
add
jo
or
sbb
jle
mov
aas
adc
das
imul
jbe
stos
push
out
jb
cltd
sub
hlt
push
lret
add
daa
push
add
dec
or
les
jns
repz
pop
adc
arpl
gs
mov
jge
fsubl
mov
inc
mov
dec
or
sbb
or
pop
add
jmp
aad
mov
mov
jbe
xchg
in
mov
pop
jo
lds
mov
pop
inc
or
and
neg
add
cmpsb
jecxz
xchg
stc
sbb
cmp
adc
sub
enter
adcl
cmp
mov
pop
in
shlb
data16
rorl
xchg
cmp
inc
lahf
mov
sub
sub
adc
xchg
out
paddw
pop
adc
and
rorl
sub
mov
jmp
xchg
ud1
mov
mov
sbb
imul
xchg
mov
xchg
xchg
pop
dec
or
pop
sarb
xchg
and
mov
jecxz
cmp
jge
sbb
leave
in
xor
cs
enter
cltd
call
mov
lahf
mov
and
fsubrs
jmp
cmpsl
sar
in
dec
and
test
loope
cltd
stos
pop
cmp
pop
jb
pop
mov
push
inc
push
push
fsubp
sbb
dec
mov
lods
negb
in
fists
push
int3
push
sub
xchg
or
imull
negb
popf
push
pushf
aad
sbb
mov
jno
and
scas
dec
shrl
jae
cmp
add
dec
mov
aad
in
popf
jge
stos
aas
cmc
les
test
xchg
pusha
add
inc
mov
in
jp
rcrl
dec
cmpsl
jecxz
cwtl
mov
in
push
xchg
out
jecxz
sbb
pop
xchg
push
push
fadd
add
xorb
cmpsl
es
sub
adc
adc
lods
pop
sbb
pop
mov
dec
adc
and
adc
arpl
xor
xchg
pop
or
push
jg
pop
aaa
insb
decb
imul
push
lret
cmp
and
test
scas
loop
flds
pop
adc
push
dec
lock
lret
stos
sbb
gs
loop
cmp
sbb
movsl
cmpsl
mov
add
mov
jl
mov
dec
fcmove
xor
or
mov
sub
sub
jmp
xchg
dec
adc
lret
fisttps
in
addr16
ss
fimull
sbb
or
scas
push
adc
inc
andl
out
ja
lds
jnp
xlat
xor
and
and
and
pop
pop
pop
mov
xor
test
gs
sbb
push
mov
cmp
mov
jne
in
data16
xor
mov
ret
cmp
js
mov
lcall
push
insb
jnp
ljmp
jno
mov
dec
add
inc
cli
ss
mov
jmp
enter
jmp
xor
inc
lcall
and
les
les
and
or
loope
add
fdivrl
pop
mov
ja
dec
punpckhwd
cmpb
mov
sbb
xchg
cwtl
fldcw
cmp
xor
sub
push
daa
stos
leave
mov
addb
fs
in
dec
cld
call
xor
add
pop
and
push
pop
sbbl
adc
add
lcall
and
pop
lds
insb
pop
xorl
adc
cwtl
dec
repz
add
in
lret
test
inc
sub
sbb
enter
test
mov
push
push
pop
sub
sbb
enter
test
mov
push
push
mov
cmp
or
clc
jbe
inc
fcoml
mov
push
jo
push
test
jo
sub
cwtl
xchg
call
inc
fsubs
fildll
addr16
.byte
int3
