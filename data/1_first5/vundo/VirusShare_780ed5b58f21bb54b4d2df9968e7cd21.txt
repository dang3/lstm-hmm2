add
add
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
xchg
lret
add
mov
pop
ja
dec
or
ret
or
add
add
add
add
add
add
add
or
push
add
add
add
add
sbb
push
add
add
add
add
add
dec
add
add
add
add
sbb
add
add
add
add
mov
add
add
add
pop
add
add
add
add
add
add
push
add
add
add
lea
mov
imul
pop
add
add
lea
scas
add
and
push
add
add
add
add
add
add
mov
add
xchg
add
add
add
add
pop
push
add
pop
add
add
add
add
imul
add
push
push
xchg
add
add
add
add
add
add
add
lea
dec
add
pop
add
add
add
add
add
push
add
add
add
add
add
add
cmp
push
add
mov
add
add
add
add
add
flds
js
push
add
add
cmp
add
add
push
add
add
add
add
add
add
add
add
sbb
fiaddl
inc
add
add
add
test
push
add
in
or
cmpsl
add
xchg
cltd
add
add
push
add
add
mov
sbb
pop
add
sbb
lea
lahf
add
cmp
ja
mov
add
add
add
add
add
add
add
cs
add
add
add
push
add
add
add
add
add
add
push
add
pop
lahf
add
add
filds
or
inc
add
add
pop
push
add
fiaddl
lahf
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
mov
add
add
add
add
ja
sahf
add
mov
aaa
add
add
push
add
add
add
and
sbb
flds
scas
add
add
pop
and
outsb
add
and
push
add
flds
add
add
add
add
add
add
add
mov
movsb
add
add
add
add
xchg
add
or
push
add
add
add
add
xchg
add
pop
add
add
ja
dec
add
or
push
add
add
cmp
push
add
add
add
add
add
add
sub
push
add
add
add
add
push
add
mov
push
add
push
add
add
push
add
add
add
add
add
add
add
pop
add
add
add
or
imul
and
sub
loopne
push
add
add
add
add
add
js
out
add
out
add
push
add
add
add
add
add
add
add
test
push
add
add
add
popl
jb
push
add
add
add
imul
test
xor
xlat
add
add
add
add
add
add
add
add
or
push
add
add
or
scas
add
add
add
sahf
add
sahf
add
pop
sbb
or
dec
add
add
add
add
les
sub
lcall
xchg
int3
xchg
lea
or
inc
pop
and
sbb
int3
dec
cmp
dec
orl
pusha
mov
push
xchg
xor
xor
cmp
adcb
add
rcrl
movsl
fucomip
lcall
jl
xor
push
pop
ja
pop
cld
sbb
fisubl
jb
mov
in
mov
xchg
bound
cmp
out
cmp
lds
pop
mov
rcll
or
xchg
adc
mov
rorl
js
popa
loope
lock
aas
popf
or
sbb
or
push
cmpb
pop
mov
cmp
jnp
das
or
notl
dec
lods
mov
lcall
mov
mov
ret
in
cmp
cmp
movsl
jo
imul
sbb
adc
xor
fxch
test
sub
xor
sub
test
and
ret
mov
pushf
and
add
jp
mov
rorl
pop
mov
jno
or
scas
int
rcrl
shlb
in
movsl
movsl
loopne
ror
jno
pop
and
pop
lock
es
mov
pop
punpckhdq
cld
xchg
lahf
stos
add
test
das
out
js
call
jmp
orl
popa
add
cmc
gs
loop
popf
or
nop
lods
jnp
adc
mov
xchg
pop
jno
testl
push
sbb
inc
add
out
movsb
and
jb
sbb
sub
mov
sbb
and
ret
outsb
xchg
xlat
cvtpi2ps
ss
cmc
mov
push
imul
jp
jp
inc
mov
push
js
and
insl
push
mov
sti
nop
aas
int
fwait
movsb
cltd
mov
or
push
dec
faddl
and
stos
pop
push
repnz
mov
lods
fbld
aaa
lods
xor
sbb
add
or
loopne
mov
aaa
cmp
xor
dec
arpl
lret
jl
inc
mov
out
xor
cs
sahf
jmp
mov
cmc
mov
int3
jg
jns
inc
inc
cmpsb
addr16
add
xchg
sbb
hlt
adc
hlt
fcoml
aad
sub
cmc
popa
mov
fwait
jns
movsl
loop
fildll
outsl
shrb
dec
jl
arpl
jmp
andl
movsb
lds
sbb
add
xor
dec
mov
cld
notl
dec
adc
sub
cltd
jmp
notl
push
dec
xchg
add
add
add
add
loop
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
mov
mov
adc
cs
adc
in
push
jg
ret
mov
addb
jae
arpl
push
ret
xlat
and
adc
jb
inc
ret
sub
mov
add
push
ret
or
push
xor
add
in
bound
push
push
mov
data16
pop
mov
xchg
push
adc
inc
jecxz
or
call
dec
dec
mov
cmpsl
arpl
push
dec
inc
lea
pop
mov
frstor
negl
dec
pop
vxorps
xchg
push
mov
aas
cmp
mov
aas
out
xchg
adc
push
repnz
and
push
fildl
ret
es
inc
jg
outsl
addr16
push
jbe
outsl
inc
or
jecxz
sub
ret
lods
xor
dec
xchg
push
std
jb
loop
or
enter
push
scas
bound
ljmp
adc
adc
xchg
ss
repnz
ret
dec
cmpsl
ds
or
or
add
testl
call
add
jb
inc
gs
cmc
mov
xor
popa
ret
fisubl
shll
add
adc
ret
push
xor
jo
jbe
data16
mov
es
incb
push
loope
loop
lcall
ss
jmp
jnp
or
mov
bnd
ja
dec
jecxz
roll
push
xor
add
push
ret
mov
mov
adc
jb
inc
ret
push
xor
add
push
ret
mov
add
sarb
popl
pop
js
outsb
lods
les
mov
adc
cmpsl
movsl
cmp
or
xor
and
popf
ljmp
ss
mov
lea
stc
mov
xorl
mov
outsl
and
fistps
jns
push
inc
fcomp
sbb
hlt
insb
cmpb
cmpsl
push
int
scas
mov
imul
mov
addr16
xor
lcall
cmc
jecxz
push
loope
stos
repz
fcmove
js
jae
or
mov
and
in
xchg
cmp
cld
mov
xchg
fmuls
jge,pn
outsl
pop
pop
mov
mov
movsl
add
sub
icebp
jnp
mov
fsts
and
lretw
shlb
scas
lret
dec
dec
call
adc
push
test
mov
dec
xchg
jmp
leave
rcrl
pop
repz
mov
ja
inc
pushf
or
in
fiadds
mov
lods
inc
lods
push
je
aad
xlat
stc
shr
push
or
scas
add
mov
into
inc
bound
dec
xor
js
jge
stos
std
dec
data16
sbb
and
cmpsl
out
xchg
sbb
ret
sarb
sbbl
cmp
mov
outsl
push
cmp
scas
mov
popa
mov
sti
mov
mov
xchg
cmp
jp
fildll
cmp
lret
push
xchg
jle
fnstcw
jo
and
and
mov
mov
add
shlb
lods
mov
jnp
mov
cmp
xor
in
cmpsb
pop
fs
or
mov
leave
leave
aas
into
sbb
add
jmp
mov
cmp
dec
jp
out
mov
and
lret
mov
xchg
dec
fwait
data16
and
jae
push
jmp
imul
pop
loop
dec
cwtl
adc
and
jbe
cmpsl
ror
test
push
cmp
xchg
lcall
push
or
cmp
data16
pop
jl
fs
stos
fdivrl
sub
inc
and
icebp
sbb
mov
adc
mov
adc
repnz
clc
inc
jb
pop
push
inc
sub
call
in
lods
scas
jne
arpl
hlt
es
mov
popf
imul
push
test
mov
inc
jmp
loope
or
inc
xlat
mov
mov
push
cmp
mov
or
shrb
mov
jns
popf
icebp
sbb
xchg
das
sbb
sub
mov
mov
mov
and
jmp
cmp
pusha
ds
and
xchg
lea
jle
xor
daa
adc
fs
mov
jbe
sub
imul
popf
aaa
xor
mov
ljmp
sbb
pushl
add
imul
test
fnstenv
nopl
gs
rorl
adc
mov
hlt
inc
pop
mov
mov
inc
addl
xor
pop
sti
outsb
daa
and
gs
out
jecxz
sub
sahf
fidivl
je
fisubl
test
pusha
lahf
xor
and
js
rclb
popf
iret
xor
xchg
inc
notb
sub
xchg
jne
addr16
orb
sbb
xlat
xor
mov
lock
shlb
dec
mov
or
push
xor
add
cmp
andb
cmp
push
xchg
fists
cltd
mov
fdivrl
sbb
xor
pop
sub
xor
loopne
mov
sbb
cmp
cmp
cmp
jbe
pop
les
sub
call
mov
adc
fbstp
pop
push
lahf
lods
in
fisttpl
adc
iret
in
xorl
and
or
inc
iret
cmp
pop
push
lock
adc
lock
data16
ret
leave
mov
xor
faddl
mov
lods
in
popa
out
sub
and
cmp
inc
and
cmpsb
pusha
xor
int
sbb
mov
push
cmp
mov
testb
xchg
sbb
jecxz
pop
testb
es
stos
jl
test
loopne
jne
xchg
lsl
inc
das
rcl
mov
mov
add
xorb
out
sbb
pop
jmp
shll
pop
cmpb
leave
inc
fs
decl
xchg
pop
xchg
mov
movsl
jno
data16
out
testl
cmpsb
jo
inc
in
outsb
inc
jle
ja
leave
or
and
push
movsb
jne
cs
test
lea
sbb
cmp
pop
loop
mov
popa
or
mov
pop
fdivr
inc
shr
sub
stos
fcmovnb
cmp
ret
cmp
js
xchg
fistl
mov
addr16
fldenv
fmuls
call
xor
jns
cld
in
inc
cmpsl
xor
jecxz
shrb
and
push
imul
hlt
or
cmp
cmp
daa
cld
mov
fsubrs
dec
nop
out
aam
jae
jne
pop
fwait
repnz
mov
pop
ljmp
out
inc
jge
daa
lret
pop
or
popf
jne
xchg
pop
repnz
xorb
packsswb
sbb
add
push
dec
xchg
fwait
cs
jbe
loop
mov
mov
jbe
flds
fiaddl
pop
lea
ljmp
inc
stc
repnz
sub
or
adc
test
sub
jl
hlt
std
mov
cld
sbb
repz
shrb
stc
xchg
mov
push
orb
mov
mov
cmp
push
or
pop
jnp
clc
mov
push
mov
cmp
bound
into
adc
mov
adc
pop
leave
outsl
xor
pop
inc
xchg
movsb
dec
test
dec
jno
scas
outsl
sbb
or
push
inc
aaa
pop
mov
mov
or
xchg
add
pop
or
mov
sbb
fstpt
nop
imul
sbb
fsts
push
and
popa
jo
lcall
aaa
mov
xchg
shlb
ret
les
inc
xchg
pushf
dec
jg
jae
lds
push
ja
adc
pop
jg
iret
fucomip
mov
mov
jno
imul
mov
fbld
jecxz
sub
aaa
leave
cmpsl
incb
sbb
mov
je
dec
mov
adc
dec
ja
shll
dec
add
ljmp
pop
cltd
mov
mov
lds
adc
lea
xchg
pop
fwait
and
mov
or
sbb
mov
in
outsl
lahf
or
xchg
cltd
mov
sbb
mov
or
mov
ret
shrb
push
test
jne
rcll
xchg
outsb
sbb
js
jns
mov
push
and
sahf
xlat
sbb
into
movsb
cmp
jae
pop
jecxz
stos
sbb
aas
sti
test
iret
inc
mov
test
mov
out
adc
push
push
lock
xchg
xchg
cmc
and
sub
jecxz
loop
fmul
xor
dec
aad
cltd
dec
xchg
xlat
repnz
cmpsb
sti
add
add
cwtl
das
imul
aad
pop
jbe
xor
bound
sbb
sahf
pop
andb
and
int
out
mov
ja
and
mov
in
jge
pop
lcall
push
dec
repz
push
pop
scas
ss
sub
loope
call
test
mov
lea
sbb
shlb
dec
outsl
cmp
xchg
lahf
and
repnz
in
sub
stos
stos
sti
adc
mov
ja
test
push
cmp
mov
out
mov
xchg
int
xor
popa
or
imul
push
xor
lahf
jl
or
nop
outsl
and
lahf
jb
cs
mov
jge
inc
clc
dec
sbb
add
ljmp
jmp
adc
push
xor
sahf
out
pushf
sub
mov
dec
mov
clc
iret
mov
and
in
es
or
repnz
sbb
ss
xor
jne
and
mov
pushf
fstps
and
sub
or
dec
sub
test
jno
addb
movsb
fwait
mov
add
mov
push
mov
inc
lahf
imul
jp
sar
mov
mov
dec
or
push
push
rcl
addb
je
out
iret
ds
dec
mov
inc
fiaddl
daa
push
cmp
xor
repnz
les
cltd
dec
addr16
test
mov
in
scas
and
lret
shll
icebp
cltd
icebp
dec
bound
mov
xchg
mov
push
sbb
pop
xchg
mov
popf
lcall
aas
or
mov
adc
cmp
les
lea
andw
les
inc
cmp
insb
cmpb
and
shl
inc
dec
pop
nop
aaa
setbe
sub
jo
mov
jne
sub
xchg
xchg
clc
outsb
xor
push
ss
mov
std
pop
push
sbb
mov
stos
jl
mov
xor
cmp
into
xor
lcall
mov
scas
xor
pushf
scas
shl
fsubrl
scas
sbb
push
aas
mov
mov
jbe
movb
lret
arpl
das
out
mov
adc
les
lds
movsb
jo
fmuls
fmuls
jge
pop
fs
inc
mov
pop
andl
sbb
xchg
out
popf
cmpsb
sub
lods
mov
fcmovu
lcall
cmp
call
test
lods
dec
jl
pushf
jne
xchg
adc
xchg
sub
lea
jb
imul
das
xorb
jge
stos
xor
lods
jns
ret
cli
push
mov
popf
lret
jle
jmp
mov
rcrl
stos
test
scas
outsb
int3
cld
rorb
adc
sub
pop
xor
pusha
jbe
ret
outsb
and
xlat
mov
pop
mov
mov
pop
stos
movsl
out
call
hlt
in
mov
pusha
cld
addr16
xor
mov
loope
mov
repnz
je
lret
ljmp
push
xchg
cmc
popf
dec
push
inc
mov
mov
test
loope
pusha
sub
mov
aam
cmp
jl
clc
mov
cmpsb
test
leave
int3
lcall
mov
xor
sarl
jle
jno
in
cmp
pop
imul
in
inc
iret
out
cmp
mov
mov
dec
dec
rol
cmp
push
lds
or
jb
cli
pusha
aad
mov
cmp
inc
popf
cmpsb
mov
lods
mov
xor
push
adcb
sahf
xor
mov
mov
xchg
ret
and
loope
xor
mov
mov
sarb
xor
cmpsb
rcrb
jae
iret
shl
mov
sbb
xor
dec
repnz
dec
inc
shl
pop
mov
dec
pop
das
sbb
popf
out
add
pop
pop
pop
aad
lahf
jl
int
shlb
cwtl
cli
push
ret
lahf
lcall
xor
and
mov
and
cmc
mov
jp
sub
frstor
xchg
sub
jmp
dec
ss
cmpsl
adc
jae
push
ret
mov
call
add
or
inc
insb
call
movq
iret
mov
pop
xchg
nop
mov
mov
mov
fstpl
add
imul
aad
xor
shll
dec
mov
arpl
push
jecxz
xlat
sbb
jl
push
lock
outsl
jp
mov
fs
fdivrs
sub
jb
ljmp
leave
or
jno
daa
mov
cmp
or
insl
pusha
lds
push
or
fwait
clc
dec
ja
into
mov
mov
lcall
dec
mov
mov
pop
or
js
pop
into
in
dec
or
testb
push
sub
sbb
and
sub
jg
inc
inc
inc
dec
cwtl
cmpsl
push
mov
dec
addr16
inc
mov
and
mov
push
insb
inc
clc
cmp
fwait
lods
mov
ja
xchg
repnz
push
jle
int
add
inc
inc
mov
sarb
je
push
rclb
dec
or
outsl
add
or
inc
xchg
push
int
imul
sub
dec
jle
loopne
fmull
mov
jmp
jae
dec
sarb
mov
jne
cmp
lcall
divb
cmp
sbb
mov
or
xor
mov
xchg
sbb
lock
stos
mov
inc
sub
sub
xchg
sbb
sub
ds
mov
add
add
dec
ds
jmp
pop
imul
add
and
sbb
fistps
jp
shrl
nop
or
adc
sbb
adc
cmpsl
inc
push
cmp
xor
test
push
frstor
out
and
mov
aas
xchg
xchg
imul
pop
test
pop
xchg
repnz
push
out
lret
push
inc
jle
clc
out
inc
insl
repnz
mov
jl
cwtl
add
andb
mov
pop
cmc
dec
fwait
mov
sbb
aaa
mov
movsb
repnz
jns
jns
xor
add
ja
out
ljmp
adc
inc
or
push
inc
sbb
sahf
fwait
sbb
xor
mov
jmp
sbb
pop
xchg
fidivrl
fmull
lods
mov
fistl
mov
ficoms
sbb
imul
cmp
inc
jbe
xchg
lret
fidivl
cmc
or
mov
mov
and
aaa
test
cld
dec
pop
cmp
or
push
jns
add
andb
cmp
xchg
orl
fisttpl
mov
lods
mov
fimull
shl
insl
fcoms
hlt
nop
jbe
sarl
cs
inc
xorl
adc
fwait
push
stos
shr
mov
dec
pop
jno
jle
sbb
nop
push
sbb
pop
and
sar
out
xchg
xor
xchg
xor
mov
inc
mov
inc
fistps
jge
outsb
int3
adc
mov
cmp
xchg
insl
mov
fdivs
stc
and
jns
xchg
inc
adc
test
repz
bound
xchg
mov
xchg
imul
enter
dec
pop
adc
cmp
pop
es
nop
pop
push
shlb
pusha
or
roll
lds
push
pop
lahf
push
pop
adc
jbe
pop
jecxz
push
enter
imul
xchg
xchg
cmc
add
or
adc
xchg
add
divl
test
lods
mov
pop
xor
lea
inc
push
mov
xor
jge
jae
jbe
xchg
dec
or
nop
mov
stos
orl
dec
pop
sub
mov
or
push
sbb
mov
stc
fs
add
cld
or
es
jle
arpl
xlat
mov
cltd
mov
jl
push
jecxz
mov
adc
shlb
test
hlt
mov
addr16
xor
lret
das
icebp
pop
lods
cmpsl
pop
push
mov
es
out
mov
xlat
enter
push
stos
mov
push
cli
xchg
std
fcompl
pushl
mov
xchg
lods
lret
mov
andb
arpl
pop
add
jnp
pop
inc
adc
outsl
jmp
shl
sbb
inc
enter
xchg
mov
mov
fs
dec
mov
scas
das
ret
mov
mov
mov
adc
les
fcom
jle
mov
aad
jbe
scas
xor
test
and
pop
add
mov
repnz
ficompl
fwait
aam
mov
fucom
push
in
jo
dec
mov
jmp
adc
aas
rcll
fmuls
xchg
mov
repnz
es
or
scas
sub
xchg
sub
sub
cld
dec
int
outsb
scas
popf
adc
jnp,pn
mov
jmp
inc
jno
or
and
repz
out
into
je
sub
mov
mov
test
xor
or
jle
pop
repz
pop
popf
cmc
imul
xchg
cltd
add
stc
cmp
les
cwtl
add
inc
mov
push
sbb
mov
movd
dec
outsl
out
insb
ret
jbe
sti
jmp
xchg
pushf
push
or
das
addb
pusha
adc
lods
xchg
inc
addr16
inc
and
addl
femms
jle
mov
dec
out
cmp
push
cmp
or
and
int
or
pop
nop
jnp
icebp
xchg
mov
aas
jmp
jb
imul
mov
sbbl
das
sub
iret
cmp
in
lods
mov
je
adc
or
dec
cmpsb
cmp
aaa
les
jecxz
xor
das
push
mov
jnp
push
pop
int3
push
in
push
jns
dec
jle
and
push
lret
mov
add
fnstcw
lret
in
pop
mov
mov
aam
scas
fisubrs
inc
ja
push
call
repnz
mov
fldcw
xor
sbb
outsb
insb
xor
fyl2x
xor
das
sbb
popfw
std
adc
pop
adc
out
xlat
sbb
repnz
push
push
in
mov
jecxz
mov
sub
jbe
outsl
stc
mov
mov
mov
fwait
imul
sub
cmpsb
mov
cmpsb
and
mov
test
sti
xchg
lahf
fldt
push
push
xor
cmpsb
call
xchg
addr16
out
mov
mov
push
popa
cmp
sahf
aas
add
push
cwtl
jno
shlb
sbb
mov
stc
pop
orl
mov
sbb
and
inc
test
aam
mov
sarb
scas
xor
popa
lock
xchg
sbb
inc
or
or
je
cli
pop
jmp
lea
mov
jae
and
icebp
mov
aas
cltd
xor
dec
insb
sub
ret
push
ja
addl
add
inc
xor
in
test
out
fsts
rcll
jp
dec
mov
faddl
frstor
dec
ficomps
adc
jno
cli
mov
sti
lahf
ja
negb
mov
test
js
cmc
jmp
hlt
lock
pop
sub
xchg
jl
ss
mov
scas
neg
es
push
stc
lahf
add
xchg
in
pusha
insb
xor
mov
pop
add
pop
inc
outsl
lret
add
fists
push
sarb
inc
insb
call
pop
fcomp
daa
mov
addb
xlat
sub
test
push
arpl
fimull
cmp
push
mov
cmp
fidivrl
inc
fcoms
sub
xor
xchg
shrl
stc
outsb
mov
mov
pusha
hlt
and
inc
jg
bound
bound
dec
hlt
rcll
add
int3
int3
cli
andl
push
inc
in
jle
dec
push
pop
pop
je
test
sub
sub
xchg
sbb
push
push
mov
mov
mov
repz
pop
mov
mov
mov
shlb
inc
icebp
mov
mov
add
lret
cltd
repnz
push
stos
scas
stc
lret
mov
push
jecxz
lds
jmp
fwait
sti
dec
push
cmp
repnz
test
add
push
stc
data16
hlt
push
mov
sub
cmp
sub
inc
sub
int
dec
daa
mov
nop
jmp
pop
repnz
xor
inc
test
xchg
inc
cltd
add
or
in
arpl
daa
fldenv
pop
and
nop
dec
into
fisttpl
cmp
cmpsl
pop
out
lods
pop
aas
cmpsl
push
mov
cli
les
in
jae
cs
mov
push
lds
add
ret
insb
adc
push
nop
inc
jge
or
lahf
ljmp
dec
adc
dec
je
roll
or
out
test
inc
inc
std
rcl
or
push
push
sub
stos
out
add
xor
xor
jge
and
jb
dec
push
push
aaa
sub
aaa
stos
pop
insl
stos
fstps
repnz
scas
adc
cmp
mov
or
mov
iret
adc
sbb
jecxz
mov
aam
inc
add
lods
jno
jp
jne
rorb
shlb
ja
jge
jge
or
pop
adc
mov
xchg
cmp
ret
out
mov
popf
xchg
dec
data16
movsl
ror
mov
fbstp
mov
mov
mov
pop
scas
dec
xchg
push
xchg
rcrb
out
lcall
and
les
das
xchg
lahf
pushf
ret
scas
mov
adc
nop
loopne
daa
orl
add
adc
call
push
pop
inc
in
mov
jg
sub
pop
sbb
adc
shlb
mov
sti
jo
lcall
push
test
enter
push
xchg
gs
add
rcrb
jbe
xchg
sahf
cwtl
lock
out
mov
insb
stos
ja
sti
sub
and
subl
les
loop
add
and
jae
dec
out
adc
lea
add
pop
ret
sub
mov
sub
ret
xor
in
fcomps
outsl
sbbl
fcmovnu
jbe
and
pop
call
insb
jae
jmp
in
mov
repnz
sbb
mov
cs
insb
jae
or
loopne
sbb
xchg
je
fidivrs
jp
cmovno
push
inc
mov
mov
cmp
cltd
outsl
dec
out
jbe
mov
add
sub
stos
movsl
jmp
ljmp
out
popa
popf
jbe
mov
lock
testb
test
lcall
leave
pop
bound
mov
loop
ja
jnp
icebp
push
out
mov
aad
outsb
mov
testb
mov
lods
in
pop
out
nopl
aaa
arpl
xchg
icebp
inc
add
xor
lret
into
xchg
in
push
ljmp
xchg
insb
mov
and
mov
xor
lods
js
push
call
xor
dec
fwait
push
jno
mov
cmp
adc
cmp
push
push
cs
cmp
xchg
jle
dec
or
stos
cwtl
pop
dec
push
int
clc
cmpb
icebp
jmp
imul
int3
test
dec
imul
lea
sub
pop
jno
xor
loopne
lds
mov
sbb
sbb
daa
aad
loope
roll
lea
pop
push
xchg
hlt
mov
mov
pop
mov
mov
push
xchg
push
shlb
jmp
push
in
fs
insb
ss
divl
addr16
sub
jo
xor
add
jb
inc
ret
push
xor
add
push
ret
mov
mov
adc
jb
inc
ret
push
xor
add
push
ret
mov
xchg
xor
add
jb
inc
add
mov
add
push
ret
cmpsl
and
xor
add
jb
inc
inc
push
xor
add
add
jmp
lods
cmp
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
nop
ficompl
xchg
cltd
jmp
std
prefetch
push
dec
pop
sbb
fisttpll
cli
mov
stos
in
mov
sbb
or
pop
sub
jge
ret
popf
repnz
loop
xchg
int
fnsave
xor
push
pop
push
cmp
pop
or
mov
leave
xchg
push
orb
sbb
out
inc
push
mov
mov
push
dec
out
and
xor
fucomp
mov
and
jae
xorl
cmp
lea
insl
mov
inc
cwtl
fimull
pop
cmp
les
mov
jecxz
sub
outsb
adcb
pushf
or
int
add
lods
jle
xor
push
es
dec
or
sub
and
inc
fcmove
pop
and
dec
movsl
sbb
sarl
mov
insb
ret
or
movsl
lods
ja
aaa
push
adc
dec
es
js
repnz
or
sub
lret
test
or
in
mov
stos
in
mov
sbb
adc
pop
sub
cmp
jmp
sti
out
mov
xlat
lea
popa
pop
je
inc
adc
data16
dec
out
pop
sbb
int3
fcmovbe
lods
clc
ljmp
std
dec
dec
pop
jno
jnp
push
outsl
and
pop
sbb
adc
fsqrt
leave
repnz
mov
sbb
or
pop
sub
jge
ficompl
mov
lcall
or
jp
or
pop
sub
jge
lea
mov
or
cmp
enter
sbb
push
das
jbe
dec
push
adc
xchg
push
lods
subl
out
inc
add
fbld
fnstsw
mov
jg
out
sub
jmp
test
xchg
stos
mov
cmp
add
test
xchg
cmp
adc
mov
jne
pop
mov
es
sarl
test
fcom
mov
xor
adc
shrl
xor
sbbb
scas
loope
pushf
test
adcl
sub
jecxz
ret
jmp
enter
adc
adc
jo
cmp
mov
sahf
movsb
lret
jl
fwait
inc
or
sub
jno
push
add
inc
jns
stos
fildl
in
cmpsl
pop
dec
inc
lea
push
mov
and
in
cmp
sub
lock
xchg
xor
repz
les
sub
hlt
out
xchg
jo
add
jno
shlb
jecxz
pop
jl
imulb
mov
or
jnp
jmp
lahf
fldl
xor
jnp
pusha
in
enter
daa
pusha
push
jae
test
pop
dec
mov
xor
cwtl
and
mov
jecxz
std
push
es
pop
xchg
gs
mov
pushf
nop
fimull
fists
xorb
stos
mov
sbb
iret
and
aaa
arpl
sub
pop
imul
cmp
lcall
scas
inc
addb
pop
fxch
mov
jb
aaa
popf
jne
faddl
das
nop
lret
or
imull
jg
mov
inc
and
jbe
xchg
xchg
fisttps
cli
out
jp
loop
fistl
hlt
popf
ja
inc
pop
pop
ljmp
mov
loop
jge
clc
or
out
insb
push
and
mov
or
lcall
popa
mov
sub
in
jg
push
repnz
jbe
clc
mov
stos
add
out
xlat
insl
cwtl
push
sub
mov
push
cld
in
inc
mov
mov
mov
pop
leave
fisttpll
aam
dec
cmp
repz
cld
sahf
xor
test
push
sbb
roll
mov
idivb
dec
or
aad
jge
add
fbstp
pop
push
or
jns
fdivl
adc
mov
movsl
sahf
and
cld
xchg
loopne
add
bound
into
push
ljmp
subb
add
xor
and
aas
inc
mov
push
xchg
adc
pop
icebp
or
jl
mov
add
cmc
add
icebp
cld
cmp
lods
push
mov
push
inc
mov
cmp
inc
fdivrl
inc
sbbl
pop
xchg
pop
mov
sbbl
push
in
adcb
dec
jno
pushf
or
je
lcall
and
lock
scas
mov
pop
jb
pop
cmp
jg
insb
mov
sub
and
sub
cmc
imul
fidivrs
and
mov
push
fdivs
xor
xchg
xchg
lods
bound
xchg
sysexit
aas
xchg
iret
dec
daa
mov
mov
pop
int3
add
mov
mov
xchg
cltd
inc
mov
pop
das
dec
mov
adc
jb
push
sub
bound
adc
int3
xor
mov
test
adc
gs
aaa
popf
mov
daa
push
mov
xlat
jle
xor
adc
mov
test
loop
cmp
js
xchg
cmp
adc
cmp
daa
sbb
pop
or
push
mov
jmp
mov
mov
lret
and
lea
fyl2x
jge
mov
fsubr
out
jo
inc
jnp
mov
cmp
jmp
xchg
insl
push
mov
jns
pop
push
notl
and
iret
xchg
xor
pop
cvtps2pi
aas
out
add
aam
cmp
sbb
out
xchg
jg
enter
popf
mov
pop
mov
imul
rcrb
fdivs
pop
repz
and
cli
mov
stc
sub
stc
cmp
push
cmp
xor
xchg
cmp
divl
or
test
lods
jl
inc
mov
test
push
mov
ret
shrl
push
mov
popa
in
hlt
dec
adc
mov
cmpl
mov
ja
aad
dec
cmp
mov
mov
mov
fsubrs
lods
dec
icebp
xlat
repnz
xchg
testb
xor
jmp
xchg
addr16
cltd
mov
jne
sbb
into
fidivs
xchg
pop
and
int
adc
lods
jae
call
add
pop
fbld
ret
mov
pop
insl
int3
inc
push
fcomps
iret
jno
jmp
pop
aam
pop
mov
stos
mov
addr16
xchg
mov
jle
sbb
clc
into
xlat
mov
sub
mov
xor
xlat
scas
icebp
push
outsl
and
imulb
mov
jnp
xor
cmpsl
leave
aas
add
lock
add
in
sbbl
enter
enter
or
sbb
dec
pusha
loop
fdivl
lods
xchg
fldcw
add
adc
fisttpll
xor
cmp
dec
rcll
pop
in
mov
repnz
pop
jne
pop
sub
fists
out
mov
das
xchg
mov
leave
jl
push
and
mov
shr
jmp
inc
pushf
lock
popa
and
fcmovu
nop
pop
xchg
cmp
pop
int3
adc
jecxz
dec
push
sbb
sti
push
cmp
add
in
dec
xchg
push
mov
lret
or
cmp
ja
call
ret
loopne
xor
adc
cmpsl
data16
jg
add
rcl
xor
jp
xchg
jle
jno
xor
xchg
xchg
imul
xor
scas
xchg
movsl
and
loopne
add
es
mov
stos
daa
jno
mov
sbb
insl
sub
aad
or
les
xor
jmp
cld
jne
xor
or
sbb
inc
clc
xor
popf
jge
addr16
dec
mov
add
sbb
and
xor
cltd
push
nop
subl
xor
fs
cli
xor
pop
out
sub
sbb
push
adc
xor
scas
test
mov
inc
int3
aas
mov
sub
fcoms
pop
jne
outsb
lea
in
std
mov
push
push
push
dec
std
les
inc
mov
adc
dec
rep
mov
bound
push
adc
fadds
movsl
mov
dec
out
xchg
ja
xchg
fidivrs
mov
push
jecxz
jo
xchg
ja
mov
push
pushf
cld
inc
xor
int
ja
mov
adc
insb
push
mov
in
dec
out
idiv
sar
adc
mov
xchg
stos
sbb
push
ret
and
imul
mov
adc
mov
and
fmuls
inc
cmovnp
add
in
cld
add
or
stos
jns
sub
sub
adc
push
sbbb
test
popf
incw
inc
inc
or
nop
dec
adc
inc
or
and
bound
mov
mov
popa
leave
aas
inc
mov
ja
sub
pop
out
sbb
xchg
rclb
loopne
or
test
push
dec
call
push
adc
jnp
cmp
fwait
shrb
jae
test
push
leavew
jno
and
icebp
les
inc
iret
pop
je
or
cmp
jnp
inc
out
dec
and
inc
insb
out
mov
xchg
loope
jns
cmp
cmp
fildl
push
xchg
fisubrl
testb
or
adc
in
mov
test
mov
jns
mov
cs
neg
pop
je
xchg
push
inc
add
or
ret
addr16
inc
sahf
ss
sbb
inc
sbb
scas
les
sahf
jp
mov
cli
mov
dec
mov
inc
fstpl
or
pushf
sub
jbe
fdivrl
xor
cmp
inc
xchg
push
stos
adc
stc
or
mov
pop
clc
mov
enter
adc
adc
jg
in
call
loop
push
scas
in
popa
js
test
pop
jge
sahf
add
dec
or
data16
sub
enter
xchg
cmpsb
ret
repnz
jle
sbb
adc
lret
lds
dec
xchg
int
jp
xor
push
jnp
jle
ret
inc
sub
or
inc
push
add
shl
repz
pop
bound
lock
pop
and
out
ss
pop
dec
repnz
lret
dec
and
shlb
addl
mov
out
insb
mov
cwtl
xchg
adc
dec
cwtl
push
xlat
pusha
lds
ss
and
xchg
daa
pop
pop
and
or
subl
aam
and
clc
fs
stos
or
lcall
push
mov
rcrl
jmp
repz
stc
lea
add
in
sbb
sarb
jns
imul
xor
scas
scas
leave
xor
pusha
das
or
sub
push
iret
dec
out
cwtl
xor
push
test
test
imul
jns
std
add
push
push
sub
fcom
lcall
adc
and
sbb
xor
lea
pop
cmp
int3
push
or
inc
jb
fcompl
fdivrl
in
inc
std
aam
add
jnp
cmp
xchg
ja
sarb
mov
shrl
and
arpl
cmp
mov
loopne
push
mov
gs
adc
mov
xchg
cmc
push
out
arpl
negb
fsts
mov
clc
sub
mov
xchg
xchg
gs
xor
stos
and
push
mov
sub
sub
pop
xlat
js
jg
shl
lret
adc
jg
subb
fs
aad
lcall
fsubrl
dec
cmp
lds
dec
jbe
add
pop
das
push
fildl
imul
sbb
sar
int3
inc
or
cmc
push
jge
pop
in
lahf
mov
jp
dec
ret
mov
orb
iret
icebp
aaa
shlb
adc
lods
insb
mul
leave
mov
das
lea
mov
loop
mov
jb
mov
std
mov
hlt
sbb
imul
mov
and
leave
sub
sbb
test
jns
test
out
imul
sbb
ret
scas
sbb
push
mov
lods
sbb
pop
jge
call
int
loopne
loope
jnp
clc
pop
lahf
and
in
daa
pop
xchg
stos
or
jnp
push
arpl
add
shll
cmp
je
aas
jne
pop
and
pop
rcr
inc
or
pop
sti
and
leave
dec
add
adc
cmpsb
daa
fildl
fisttpll
shl
lods
lods
lahf
dec
dec
pushf
test
orl
xchg
xchg
fidivrs
and
cmpsb
dec
hlt
pop
jge
inc
mov
out
aas
popa
lods
pop
or
xchg
add
lods
xchg
test
repnz
movsl
mov
out
or
xor
sbb
push
cmp
dec
add
stos
sbb
fadds
data16
sub
sbb
popa
push
into
test
cld
inc
jle
enter
or
sbb
pop
add
pushf
add
or
adc
pop
mov
popf
rcrb
shlb
fucom
jecxz
sbb
pop
insb
scas
leave
enter
mov
sbb
popf
fnsave
cmp
inc
inc
pop
mov
add
or
and
mov
jnp
inc
test
sbbb
dec
add
imul
sub
mov
test
sbb
mov
jae
push
clc
mov
dec
add
jae
int3
daa
xchg
push
mov
push
push
inc
jp
jmp
push
lea
mov
sti
adc
or
dec
das
lea
xchg
loope
das
in
sbbl
push
pop
fldcw
lods
dec
fstl
stc
mov
lds
sub
std
mov
inc
mov
jecxz
xchg
sub
loopne
mov
sahf
iret
popa
dec
nop
cmc
push
rclb
pop
pop
jecxz
andnps
ljmp
sbb
mov
loop
adc
mov
and
pop
inc
ss
in
cwtl
xchg
mov
push
fdiv
inc
or
insl
cwtl
sbb
lock
push
mov
inc
xchg
adc
sub
ret
test
clc
mov
jo
in
xor
popf
pop
ss
fimull
inc
lea
shlb
int
mov
mov
inc
cld
scas
mov
mov
shl
xor
cwtl
popa
mov
ret
cli
jno
lock
lret
pop
push
imul
add
cmpl
push
add
repz
xchg
jg
push
sets
add
in
push
fldt
insl
jecxz
or
mov
movsb
cmp
inc
push
inc
xchg
and
jno
sti
subb
lds
std
push
test
aaa
inc
popf
inc
jmp
jae
movsl
dec
and
push
cmc
dec
add
mov
fcompl
faddl
popa
push
cwtl
aam
xor
lret
xor
dec
cltd
in
dec
lret
ret
mov
jne
xchg
dec
test
movl
mov
fbld
push
jg,pt
mov
and
outsb
scas
sbb
cmp
or
xchg
loope
adc
aas
cmpsl
jp
mov
xor
icebp
rcr
out
aam
insb
out
xor
add
fwait
sarb
jno
cli
mov
stos
jp
ror
and
gs
mov
sub
xchg
sbb
inc
negb
dec
jp
fiadds
ds
mov
in
cmpsl
call
nop
push
add
mov
cmpsb
inc
jne
clc
into
xchg
cmpl
pushf
xchg
aad
mov
cld
lahf
push
xor
cmpsb
cmp
test
ret
dec
xchg
fs
in
mov
pop
sub
into
or
in
insb
mov
lds
sti
lds
push
ljmp
push
iret
bound
mov
mov
cmp
insl
popf
mov
jg
inc
shlb
or
adc
hlt
fsubs
lcall
add
adc
cmpsl
sahf
mov
or
ds
cmpsl
jp
mov
insl
scas
sbb
mov
mov
loope
sbb
mov
fisubl
dec
mov
dec
xchg
xlat
test
mov
int3
addr16
insl
mov
xor
rclb
pop
push
sbb
mov
test
inc
inc
adc
in
insb
jmp
fs
jo
add
inc
rolb
inc
inc
jmp
cmp
sub
sub
dec
lcallw
mov
lock
out
aas
and
movsl
cmpsl
xorb
pushf
mov
inc
rcrb
loopne
std
dec
fisubrs
popf
pop
cmp
add
jne
jno
add
add
mov
js
addr16
sub
insl
sub
cwtl
adc
mov
enter
inc
lods
sbb
xchg
ret
dec
rcl
add
imul
xchg
cmpl
xor
sbb
inc
rcll
mov
ljmp
repnz
call
or
test
cmpsl
cld
cmp
loop
pop
stos
lahf
clc
lret
and
lret
dec
rcr
lock
jnp
cltd
pop
lds
ss
outsb
movsbl
adc
xor
stos
adc
int
fnsave
jecxz
mov
or
int
xchg
jne
lcall
outsl
pop
push
insl
cltd
out
cmp
shrl
stos
fcmovu
push
xchg
outsb
fisubs
mov
jmp
cmc
inc
aam
mov
ss
sbbb
aad
cmp
mov
mov
lret
ss
addr16
arpl
xor
push
dec
jmp
jge
cmovae
mov
mov
test
inc
sbb
mov
cmp
sbb
sub
imul
inc
cwtl
inc
aam
imul
fcmovnu
mov
enter
insl
pop
lret
icebp
mov
scas
inc
stos
adc
out
lds
add
lds
and
cwtl
movl
out
sbb
inc
mov
imul
mov
pop
mov
jecxz
sbb
insb
pop
decb
sbb
dec
mov
push
sub
xchg
mov
jno
cmp
sbb
ret
inc
popf
mov
dec
out
mov
xorl
pop
pusha
rcrb
push
or
js
jg
sbb
movsl
cmpl
sub
outsb
or
cmpsb
pop
in
stc
xchg
test
frstor
lock
push
insb
add
mov
jmp
xchg
cmp
test
mov
int
adc
int
xchg
jbe
fistps
push
in
sub
mov
leave
stc
mov
pop
clc
fldenv
cmpsl
jge
sub
negl
js
jae
inc
sub
sub
pop
or
arpl
stc
int
jp
loop
inc
lods
std
out
in
mov
faddp
fwait
jle
jl
fdivl
je
psrlq
arpl
cs
adc
lret
push
inc
dec
sbb
sti
out
out
fcom
das
ljmp
mov
jb
xchg
push
add
dec
aam
jecxz
push
pop
mov
imul
mov
fwait
aam
inc
ret
clc
les
sarb
mov
and
test
xor
sbb
xchg
lretw
cmpl
fisubrl
dec
outsb
mov
or
movsl
aam
test
notl
test
mov
push
pusha
sub
in
pop
jno
sahf
cmp
cmpsb
jmp
push
cmp
iret
jae
negl
imul
movsb
rorl
iret
adc
gs
push
push
aaa
sbb
leave
jno
xor
insb
mov
fsts
and
jb
fprem
movsl
repz
lret
fisubrl
mov
inc
test
xor
stos
add
mov
and
mov
and
cmp
ret
and
lret
test
add
popa
sbb
enter
mov
fimuls
push
fiadds
imull
ljmp
scas
jecxz
popf
lods
mov
xor
fdivr
add
pop
mov
xchg
into
mov
ja
mov
jmp
rorb
inc
call
or
sub
inc
dec
xchg
cmp
aaa
cmp
jbe
or
roll
in
jmp
jl
and
add
aam
in
addl
shll
aad
shlb
fistps
mov
in
sub
loopne
fs
push
xchg
push
in
xchg
in
cmp
test
pop
jae
clc
popa
pop
movsl
dec
ret
in
int
mov
inc
rcrl
test
mov
cmp
clc
ret
stos
clc
xchg
add
enter
mov
add
ds
loopne
rcrb
dec
aas
xor
in
pop
mov
add
xchg
push
mov
jl
mov
cmc
cmp
adc
dec
xchg
xchg
or
int3
lea
subl
pop
lods
dec
cmc
aam
js
into
mov
jmp
icebp
stos
fcoms
movsl
xor
xchg
jmp
fdivrs
subb
lods
jno
push
pop
in
out
mov
xchg
mov
lret
pop
cltd
hlt
lock
mov
mov
scas
jmp
insl
xchg
pop
sarl
shlb
adc
dec
int
cmpsl
sub
xchg
mov
testl
mov
push
cmp
test
or
shrb
push
adc
fs
or
pop
xchg
fmuls
cld
fmuls
in
and
leave
arpl
test
xchg
push
pop
lahf
mov
mov
pop
push
fsubs
jbe,pn
add
pop
xchg
stos
push
dec
jno
cld
mov
nop
xchg
push
mov
add
into
ret
and
fwait
or
xchg
shll
out
xchg
leave
test
ljmp
test
clc
lcall
xchg
xchg
inc
xchg
push
std
pop
jo
sub
inc
stos
inc
jnp
jb
cli
js
push
pop
pop
pop
cmpsl
imul
fidivs
cltd
cmp
jecxz
push
ljmp
jp
imul
cmp
jno
push
fmull
mov
sub
cmpsb
sbb
add
inc
inc
scas
mov
cmc
mov
push
cli
add
mov
ret
movsb
and
lds
push
loop
mov
or
int3
sub
lea
in
pop
cmpsl
mov
incb
popf
in
jnp
xlat
les
inc
xchg
mov
test
and
push
cmc
movsb
ret
fimull
adc
subl
jo
xor
arpl
sub
fimull
push
ss
or
ret
inc
sahf
mov
pushf
insb
jae
add
popf
into
mov
in
push
mov
iret
and
xchg
lahf
mov
sti
icebp
outsl
pop
xchg
add
push
insb
xor
in
dec
push
pop
mov
dec
mov
divl
scas
daa
mov
jo
dec
rorl
push
cmpsl
addr16
insl
nop
mov
lods
scas
sahf
jmp
and
xlat
mov
cmp
das
aam
cmpb
adc
or
mov
and
repz
or
les
push
insl
lret
cmp
jecxz
dec
scas
movsb
into
mov
cmpb
dec
xorb
dec
enter
xchg
pop
into
ret
fldt
mov
xor
ja,pt
test
subl
adc
cwtl
xchg
pop
lea
dec
sub
outsb
popa
stc
arpl
test
test
mov
mov
pop
push
jl
shlb
fiadds
dec
pusha
sbb
cld
xchg
in
outsl
rcll
icebp
cmp
push
and
ss
movsb
fmul
sub
mov
inc
dec
cli
fs
mov
in
or
aas
inc
cmp
push
ds
shrb
scas
pop
les
leave
mov
jge
and
notb
jbe
and
test
adc
lcall
popa
out
aas
out
mov
sbb
jb
je
jae
cmp
adc
xchg
xchg
pusha
cmp
rolb
pusha
dec
and
subb
xchg
js
mov
outsb
dec
or
adc
into
nop
test
fmulp
in
push
jae
push
pusha
xchg
dec
and
add
inc
pop
cld
pop
aad
mov
pop
int
jno
mov
or
fbld
movsl
push
xchg
daa
aas
aas
or
jne
fwait
inc
ret
fldcw
lock
xor
insb
pop
pop
lahf
std
and
lock
mov
xchg
or
stc
xlat
push
stc
cmpsb
push
and
or
filds
xchg
lret
pop
rclb
pop
inc
lock
shl
call
dec
bnd
or
jge
arpl
push
out
xor
inc
enter
lods
cli
mov
stos
in
mov
sbb
or
pop
sub
jge
ficompl
mov
lcall
or
jp
or
pop
sub
jge
mov
popf
ljmp
or
jp
or
sub
jge
out
popf
fsubrl
lcall
repnz
mov
sub
xchg
mov
int3
int3
int3
int3
int3
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
push
mov
push
mov
push
push
push
push
movl
movl
movb
call
andl
andl
push
mov
push
mov
movl
movb
movl
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
mov
movb
movb
call
mov
lea
push
movl
call
pop
pop
leave
ret
xchg
int3
push
fsubl
in
ss
cld
in
repz
adc
insb
mov
or
cltd
imulb
cmp
int3
push
fsubl
in
ss
inc
mov
data16
jbe
xchg
insb
mov
or
sbb
outsb
idivb
int3
push
fsubl
in
ss
inc
mov
data16
jbe
xchg
xchg
pop
or
jl
dec
mov
cmp
int3
push
subl
lods
int
jbe
popf
jbe
mov
test
lret
inc
xchg
mov
jge
push
lcall
inc
mulps
stos
add
rep
imul
out
jl
insl
adcl
inc
add
dec
in
in
add
mov
mov
js
push
fsubl
mov
rcr
pop
push
and
cld
inc
lea
xchg
jbe
xchg
xchg
push
xor
test
not
cld
mov
sub
and
and
scas
lea
mov
out
mov
or
xchg
mov
xchg
sbb
loopne
rorl
mov
pop
push
and
sahf
adc
cmp
sarl
mov
cmp
cmp
es
ss
inc
mov
data16
jbe
xchg
cmpsb
insb
mov
or
sbb
sub
push
jb
push
fmull
js
add
loop
in
out
sub
leave
add
cmp
cmpb
push
ficoms
jle
and
xor
data16
mov
fimuls
movsl
ja
dec
jmp
popl
push
cltd
pop
mov
data16
jbe
xchg
cmpsb
insb
mov
or
sbb
sub
cmp
int3
push
fsubl
in
ss
inc
mov
data16
jbe
xchg
cmpsb
insb
mov
or
sbb
sub
cmp
int3
adc
xor
and
decl
js
int3
lret
notl
adc
roll
stos
scas
pop
and
hlt
sub
pop
sub
fs
in
or
aad
xchg
je
add
and
sub
or
faddl
sbb
leave
sahf
xchg
dec
lods
mov
rclb
jne
push
out
int3
cld
sti
sub
push
lahf
push
aas
lock
push
xlat
xchg
mov
mov
adc
pop
cltd
jg
push
int3
fimull
dec
sub
xorb
aam
mov
mov
subl
js
or
repnz
in
jae
into
jmp
lahf
jno
nop
lods
mov
push
jp
dec
lahf
mov
imul
adc
shll
stc
inc
and
cmpsl
pop
adc
or
jo
addr16
into
xchg
add
cmp
add
add
lods
mov
lds
clc
pop
jns
cld
cmp
cmp
js
mov
enter
sub
aad
xor
sbb
enter
cs
cmp
arpl
pop
sub
mov
insl
add
enter
js
mov
mov
sbbl
scas
popa
or
xchg
cmp
dec
adc
dec
mov
test
cmpsl
adcb
sub
repz
or
loopne
int
mov
dec
rcl
jo
push
dec
or
dec
mov
mov
pop
push
fbstp
mov
mov
jae
rol
ja
push
mov
js
sub
dec
xor
mov
test
pop
rcll
mov
in
pop
mov
nop
jmp
pop
icebp
rcrl
popa
dec
mov
jge
addr16
and
sbb
add
cmp
add
mov
inc
mov
mov
pop
cltd
pop
sbb
cmpsb
adc
jmp
jae
test
test
outsb
sbb
into
idiv
mov
mov
in
lods
add
jo
ljmp
dec
mov
lock
push
lods
ds
mov
inc
jo
and
inc
mov
mov
lds
ret
or
outsl
pop
mov
iret
jecxz
ret
shlb
cmp
das
sbb
leave
insb
jae
mov
pop
mov
push
mov
es
cmpsl
bound
sbb
pop
jnp
adc
inc
jnp
insb
xor
sub
inc
in
cmc
xchg
idivb
mov
mov
fxch
xor
dec
shl
test
movsl
and
xchg
movsl
sti
pop
daa
roll
inc
fisubs
pop
push
call
roll
out
adc
repz
fst
fcomi
add
mov
mov
loopne
sub
add
pop
adc
sub
hlt
adc
mov
mov
rorb
ljmp
inc
adc
in
mov
mov
dec
cmc
and
mov
cmp
fwait
add
sub
inc
or
mov
adc
imul
cltd
push
xchg
fbld
popf
bound
xor
imul
xchg
jecxz
pop
lret
orl
or
sub
dec
mov
xor
sbb
jnp
xchg
fwait
pop
mov
movsb
mov
xor
jmp
stc
out
or
push
loop
sti
dec
decl
paddsw
pop
lcall
out
push
sbb
sti
cs
fisttpl
inc
in
add
xor
adc
lea
xchg
fs
jp
pop
add
ret
adc
les
fidivs
sub
and
or
leave
fwait
jo
mov
cmp
jnp
push
mov
mov
mov
mov
jo
pop
ss
int3
ljmp
jae
fmul
and
and
push
push
mov
add
push
aas
aas
sub
sar
add
in
jecxz
xchg
push
cmp
inc
xchg
imul
xor
jle
jmp
mov
lahf
enter
jl
and
push
inc
or
iret
inc
mov
ret
in
daa
jne
lods
jg
inc
jg
push
nop
lock
imul
movb
push
lret
push
push
leave
jae
xor
pop
lret
mov
jmp
pop
ds
sub
std
push
jecxz
cmc
sti
mov
and
in
movb
mov
dec
jmp
cmpsl
je
jl
repz
dec
jb
mov
inc
arpl
pop
cmp
stos
clc
push
fsubr
add
shlb
andl
leave
pop
and
mov
fildl
in
popa
out
fwait
jl
int3
out
clc
sbbl
jecxz
or
hlt
mov
fstps
pop
fdivl
jae
subl
in
in
hlt
ss
cmc
cli
ret
dec
cli
out
jmp
dec
arpl
mov
out
aas
les
sbb
adc
push
jecxz
movsl
sbb
jno
push
cmp
and
cmove
mov
cs
mov
mov
mov
nop
xorl
sbbl
jl
pushf
fcmovu
xchg
seto
lret
push
aaa
jne
ss
mov
pop
mov
xor
adc
mov
mov
xor
jne
in
add
adc
jbe
inc
jmp
pop
in
cmpb
fildl
outsl
mov
in
dec
mov
xchg
jns
test
fisubrl
jl
dec
push
mov
xchg
fsubl
je
xchg
int3
pushf
push
pop
and
jg
xchg
inc
or
push
ss
cmp
cmp
push
xorl
das
pop
jecxz
dec
movsb
int
adc
push
and
mov
push
testl
fstl
cwtl
lret
pop
ret
push
insl
push
subl
and
mov
popf
mov
lock
dec
xor
mov
es
in
into
vpsrlq
inc
insb
imul
pusha
xchg
mov
dec
pop
out
call
insl
jnp
push
xchg
sar
das
mov
cwtl
mov
push
clc
scas
dec
adc
cmpsb
cmpsb
adc
mov
push
inc
and
mov
jmp
cmc
sahf
xor
cmp
shlb
cmp
cmp
adc
pop
jmp
xchg
shlb
mov
aam
leave
ss
ljmp
jl
and
or
pop
or
lret
outsl
mov
lods
push
sbb
inc
jo
fs
sub
lret
cmpsl
cli
ja
xchg
sbb
stos
iret
in
rcl
repz
mov
pop
dec
hlt
lahf
fnstcw
inc
inc
pop
jg
les
pop
dec
sub
subl
test
jb
dec
push
mov
mov
scas
and
or
mov
scas
jp
stos
insb
lahf
mov
sbb
lods
and
fbstp
js
es
push
test
insl
ljmp
jecxz
fwait
sub
dec
xchg
inc
mov
jbe,pn
and
jns
mov
gs
filds
pop
jae
out
xchg
popf
jae
push
scas
in
adc
mov
out
popa
stos
push
pop
sbb
test
orl
cmp
and
push
in
push
repnz
fstp
stos
adc
out
dec
ljmp
xchg
inc
push
scas
aaa
mov
lcall
or
mov
mov
ror
jbe
popl
add
sub
lds
pop
push
aas
scas
loopne
into
pop
sbb
in
pop
ffreep
out
jo
iret
nop
cmp
test
lods
jl
iret
sub
add
fmul
fisubrs
jge
loop
mov
inc
inc
sbb
loope
inc
sahf
push
mov
xor
dec
fmul
mov
stos
clc
sti
inc
mov
sub
push
or
jl
iret
dec
mov
sbb
sbb
adc
add
fdivs
cli
xchg
fsub
das
inc
push
xor
mov
xor
outsl
adc
cld
pop
mov
jl
icebp
push
loope
into
iret
jg
mov
movsl
push
dec
pop
ja
in
or
loopne
push
jg
lea
cmp
mov
xchg
daa
in
aaa
or
loopne
adc
dec
and
lds
and
dec
xchg
gs
fwait
fwait
mov
fisubrl
xchg
xor
leave
jle
inc
test
shll
add
out
sbb
pop
loope
stc
adcl
std
out
lcall
jno
icebp
cmp
rcrb
mov
fisubrs
fdivs
mov
std
cmp
cmp
pop
pop
jae
cmp
or
cmpsb
mov
and
out
cmp
cs
jecxz
jmp
std
pop
lahf
pop
mov
mov
movsl
ja
jmp
lods
dec
pop
sub
aas
loop
inc
out
fcoms
cmp
daa
add
cli
xor
loop
pop
lret
inc
add
jl
inc
rcll
mov
out
ss
sub
xor
jb
ja
jo
imul
mov
adc
cmpb
pop
dec
ljmp
rcrb
enter
cmp
mov
movsb
dec
imul
fisttpl
push
mov
add
push
pusha
cld
or
imul
cmp
out
mov
fbstp
add
lret
cmc
and
inc
mov
jb
dec
inc
mov
jp
ljmp
xchg
aad
cltd
push
and
jl
dec
add
fnstsw
sbb
int3
pop
inc
stos
xlat
sbb
dec
insb
les
bnd
cmp
in
inc
ret
push
repz
jg
jmp
inc
dec
inc
pop
mov
ss
aam
inc
arpl
push
adc
adc
xor
int
hlt
gs
sbb
add
xchg
les
roll
adc
xor
mov
add
in
lret
xchg
and
or
pop
addr16
cmc
mov
dec
sbbb
add
mov
add
push
push
scas
std
inc
jecxz
movsb
aas
and
inc
movsb
add
jmp
out
packuswb
ljmp
mov
pop
adc
mov
inc
ljmp
lods
pop
push
fstl
sub
ds
int3
dec
xchg
stos
pop
aas
sbb
imul
loope
xlat
and
mov
mov
xor
inc
or
stos
leave
lods
xor
or
cli
adc
aas
fstpl
add
dec
push
lea
cwtl
adc
jg
xor
mov
and
and
icebp
in
lret
es
das
and
push
add
pop
mov
cli
jmp
push
outsb
or
mov
psrld
aaa
lds
mull
xor
adc
sbbl
xchg
cmp
cmpsb
xor
adc
xlat
es
mov
mov
or
daa
aad
xchg
les
mov
xor
jns
or
adc
out
mov
mov
mov
xchg
xchg
jne
fstpl
shl
mov
cmpsb
test
test
movsl
sbb
and
idivl
out
mov
test
push
sahf
jo
mov
popf
int3
in
leave
mov
cmp
js
push
les
adcb
adc
fcoms
and
clc
mov
jo
adc
int
cmp
fs
das
mov
dec
mov
in
mov
add
shlb
and
pusha
jbe
mov
fidivrs
stos
cmpsl
sub
xchg
pop
fwait
scas
cmp
mov
movsb
hlt
pop
or
int
icebp
aam
push
mov
out
fcmovne
or
xor
outsl
ljmp
pop
outsl
faddl
sahf
sbb
add
jmp
mov
outsl
push
int
xor
xchg
mov
adc
ja
xlat
bound
jg
lock
imul
cmp
mov
test
fimull
ret
xchg
push
push
pop
mov
cmp
cs
push
mov
fildl
pop
sbb
cld
nop
and
sahf
pop
jecxz
jge
dec
repz
sbb
jno
test
mov
fdivs
insl
addr16
in
jno
add
sub
mov
sbb
lock
int3
int
aaa
lahf
popa
sbb
enter
push
fdivrs
adc
mov
in
fbld
mov
jl
cmpsl
jo
inc
and
or
dec
test
std
pop
lahf
add
shll
dec
mov
adc
mov
xor
push
test
lahf
mov
lock
pop
in
aad
movsb
inc
mov
jecxz
lods
lock
insb
out
outsb
lea
mov
pop
sbb
xchg
ret
xor
fimuls
cmpsb
adc
xchg
mov
sub
jno
sub
jle
pop
stc
jnp
or
ss
jg
xchg
sarb
xchg
fcomps
out
pop
enter
jl
sub
push
cmp
adc
ret
xchg
enter
fs
jp
lahf
mov
mov
daa
xchg
push
xor
bound
fabs
pop
mov
scas
mov
jno
inc
test
xlat
add
daa
mov
jae
daa
ds
loope
cmpsl
pop
cmpsb
mov
in
push
mov
ret
or
dec
mov
movsl
cld
cmp
and
repnz
jp
test
lods
ficompl
adc
pop
mov
push
int3
cmpsb
hlt
adc
int
dec
inc
add
adc
sub
push
pop
xor
addr16
data16
push
movsl
fildll
cmpsl
xor
in
out
sbb
nop
js
leave
cwtl
cmp
dec
or
test
add
push
sahf
pop
sub
push
addr16
add
out
cli
repnz
das
enter
jl
or
imul
add
fstps
out
cmp
les
icebp
add
outsl
pop
aam
push
out
enter
xchg
push
sbb
xchg
xchg
xor
cmp
aam
lcall
xor
pmullw
add
orl
rcll
jb
mov
inc
xchg
jnp
aaa
xor
xchg
add
in
and
mov
popf
cmp
sub
test
inc
xchg
mov
and
or
mov
pop
dec
cmp
stc
das
les
push
xor
stos
test
movsb
decb
ljmp
fisubrl
mul
jno
sub
iret
popa
push
mov
xchg
mov
xchg
xor
lds
pop
xchg
jbe
in
push
cs
pop
rcl
in
dec
inc
sbb
xchg
sub
cmp
jb
test
inc
xchg
jecxz
and
and
jecxz
sub
mov
fldenv
mov
or
xor
sahf
stc
dec
mov
pop
std
mov
push
xchg
ds
gs
aad
push
cmpl
leave
rorl
and
pop
lret
rorl
inc
jge
sbb
jne
add
pop
loope
dec
testl
enter
push
ljmp
sub
aaa
movsl
xor
jle
lcall
inc
sbb
cmp
and
lods
call
lea
mov
popf
and
lcall
inc
dec
iret
mov
cmc
push
adcb
mov
push
push
pop
lahf
enter
or
mov
ja
test
loop
movsb
pushf
pop
dec
pop
cwtl
mov
sbb
mov
add
ljmp
push
push
mov
adc
int
add
add
aad
gs
fistpl
js
stos
mov
jp
pop
loope
lahf
and
adc
outsl
pop
icebp
fmuls
and
jnp
fs
push
fdivrl
cmp
xor
shlb
pushf
add
test
add
and
cmp
push
or
in
loope
fwait
xchg
mov
mov
cmc
repz
arpl
adc
dec
cld
xor
call
aad
dec
mov
movsl
pop
in
mov
shrl
dec
aad
pushf
fs
push
adc
aad
into
in
inc
shlb
push
push
pusha
mov
inc
push
out
cltd
cli
or
inc
dec
adcb
pop
jp
and
sbb
jne
test
cmp
sub
pop
or
cmp
icebp
in
jno
adc
lahf
orl
xchg
mov
jmp
dec
fldenv
pop
push
nop
dec
lea
dec
or
roll
rcrb
pop
paddw
cmp
sbb
xchg
mov
into
push
jb
inc
xor
pop
lret
mov
lcall
pop
in
leave
adc
cmp
mov
push
loopne
into
xor
and
cvtpi2ps
add
push
daa
gs
outsl
and
mov
fadds
movsb
sbb
rcl
lahf
stos
mov
or
sub
mov
add
add
jno
lcall
sbb
stos
inc
xlat
push
sub
sbb
dec
aas
sub
outsl
data16
xor
sbb
insb
das
mov
ret
pop
pop
outsl
inc
fstps
push
and
fcmovnbe
push
inc
dec
mov
pmaxsw
mov
xlat
hlt
xchg
cwtl
ds
inc
mov
dec
daa
lahf
and
xchg
ljmp
nop
lock
das
fcmovu
pushl
mov
andb
in
lret
imul
outsl
xchg
adc
add
fnstsw
hlt
cmc
rolb
cmp
inc
xchg
ja
push
popa
out
int3
imul
xlat
or
fisttpl
mov
sbb
sub
pop
lds
mov
fs
clc
and
divb
lret
dec
and
out
or
cmp
popf
jle
sub
ret
cmpsl
push
pop
mov
testl
dec
mov
outsb
mov
sub
gs
pop
xor
jmp
mov
dec
cmp
shll
xorl
icebp
pop
faddp
and
xchg
pop
dec
pop
out
push
pop
xor
es
in
xor
pop
cltd
dec
rcl
cltd
dec
call
andl
cld
movsb
outsl
mov
lahf
daa
nop
sbb
mov
fnstsw
ror
testb
xchg
ret
mov
mov
mov
shll
xchg
in
mov
fsubl
ror
cmp
cltd
test
ja
hlt
jp
lods
mov
das
pop
sub
lret
icebp
jg
sti
cwtl
lods
scas
xor
and
cmpl
jae
das
mov
mov
xor
in
or
leave
cmc
out
cmpsb
movsb
rorb
arpl
jl
xor
adc
mov
sahf
jno
push
cwtl
or
pop
sub
cltd
sarb
ret
dec
rcll
mov
cmpsb
and
jne
pop
add
lret
xchg
push
push
js
aam
add
icebp
push
repnz
push
cld
mov
jp
inc
xchg
addr16
cmp
leave
mov
sbb
cmp
pop
jo
mov
jp
mov
clc
or
lret
push
cmp
rorb
cmp
xor
aaa
in
test
push
loope
jecxz
mov
mov
jbe
lods
test
fisubs
mov
pop
loope
mov
or
je
addl
xchg
adc
ficoms
test
clc
pop
jge
sub
stos
or
pushf
popf
sbb
jbe
jecxz
xchg
push
or
ror
insb
out
stos
and
subb
lret
sub
xchg
loope
jl
lock
push
lock
cmc
aaa
push
rol
repz
int
packuswb
in
lea
fldt
aaa
outsb
dec
jbe
adc
xor
cli
mov
adc
dec
xlat
or
ficoms
mov
mov
call
mov
or
add
dec
push
pop
scas
pop
ja
dec
pop
adc
add
stc
lods
mov
hlt
outsb
sub
bound
xchg
mov
stos
mov
push
xchg
ljmp
orb
negb
sub
cmp
fwait
ss
mov
lods
fimuls
pop
xchg
inc
jp
adc
inc
jecxz
popa
or
jo
orl
fcmovu
das
sub
mov
pop
bswap
hlt
fiadds
add
ret
fistps
xor
or
sbb
and
mov
jmp
inc
sahf
pop
jnp
jle
pop
movl
push
and
rolb
repnz
test
mov
psubb
lahf
insl
test
in
aaa
dec
pop
stc
jge
sti
aas
rolb
sub
add
push
mov
sub
orb
dec
fimull
or
push
mov
jge
in
cmp
sub
mov
loop
lcall
cmp
xchg
mov
int
and
out
pop
stos
mov
xor
fwait
sbb
cmp
mov
jp
inc
xchg
or
popf
lods
out
scas
out
mov
push
loop
scas
rcll
pop
arpl
std
dec
push
scas
cld
scas
pop
je,pn
jns
push
test
pop
push
sub
dec
add
sub
dec
lret
les
cli
sbb
push
jmp
mov
cmp
repz
cmc
sub
add
out
xor
or
ljmp
scas
cmp
cmp
or
inc
dec
test
or
sarb
push
shlb
and
incb
lea
xchg
jnp
add
in
add
push
data16
fs
sub
push
or
jmp
jne
jge
dec
mov
clc
pop
push
pop
fadd
test
and
xchg
push
in
inc
add
inc
stc
xchg
test
push
sbb
mov
mov
mov
dec
sub
add
cmpb
dec
insb
movsb
lods
dec
in
pop
imul
popa
adc
fsubs
xlat
insb
inc
pop
cli
mov
mov
mov
out
xor
in
dec
xorl
fidivl
mov
addr16
xchg
dec
add
stos
arpl
popa
inc
stc
sbb
rolb
inc
gs
or
xlat
loopne
int
cmpsb
dec
mov
push
dec
inc
push
sti
int
dec
sti
pop
je
cmp
ret
dec
sub
jno
scas
xchg
pusha
push
scas
in
fldenv
jle
xor
es
and
inc
sbb
pop
xorb
mov
xor
adc
and
lea
adc
adc
loope
mov
clc
mov
mov
jmp
mov
lock
sbb
ds
in
fcoms
push
mov
test
push
push
ret
daa
insb
push
mov
movsl
jo
sahf
cltd
xchg
lcall
and
std
push
shlb
leave
mov
and
cmp
pop
xor
fwait
in
sti
pop
push
mov
cld
or
cltd
aad
inc
rcll
cmp
in
inc
mov
jp
inc
scas
or
mov
push
fs
mov
mov
and
daa
in
ss
inc
mov
data16
jbe
xchg
cmpsb
insb
mov
or
sbb
sub
cmp
int3
push
fsubl
in
ss
inc
mov
data16
jbe
xchg
cmpsb
insb
mov
or
sbb
sub
cmp
int3
push
pop
es
ss
inc
mov
data16
jbe
xchg
xchg
pop
cmpsb
insb
mov
or
sbb
sub
cmp
int3
pop
fsubl
in
ss
inc
mov
data16
jbe
xchg
or
mov
mov
pop
jecxz
rorl
ret
int3
int3
int3
int3
int3
stos
js
xchg
mov
xchg
mov
sub
cmp
or
sbb
pop
ja
ja
xchg
mov
cli
xlat
lret
idivl
add
adc
push
dec
mov
addr16
ja
sahf
mov
scas
repz
iret
sar
xor
sbb
push
adc
ja
xchg
decb
sub
push
or
lods
mov
pushf
andl
popa
bound
sub
fiaddl
repnz
es
rorb
insl
dec
jg
xchg
push
aaa
in
cmp
push
dec
movsl
cmp
inc
adc
sub
sbb
jge
fwait
xchg
mov
push
xchg
cltd
pop
ja
xlat
stos
xchg
inc
cmpsl
mov
pop
xor
push
cmp
aas
in
xchg
adc
test
in
pop
sbb
pop
pop
jp
adc
mov
imulb
mov
pop
or
aaa
xchg
das
jp
mov
dec
mov
pop
ja
cmpsl
gs
std
clc
ss
sarb
push
mov
ja
dec
daa
das
adc
and
pop
arpl
mov
ljmp
pop
and
adc
add
jb
bound
addr16
adc
loop
xchg
out
cmpsb
out
mov
xchg
pushf
mov
sub
outsl
jns
jle
push
pop
add
addr16
sbb
fistl
xchg
fwait
imul
je
xor
ds
repnz
bnd
cli
xlat
lret
imull
pop
cmp
or
sbb
push
jp
dec
addr16
ja
xchg
mov
cli
xlat
lret
imull
pop
cmp
or
sbb
push
jp
dec
addr16
ja
xchg
movsb
xchg
pop
jmp
scas
inc
dec
push
mov
popa
fistpl
negb
cltd
sub
xchg
aam
inc
sbb
push
xor
insb
xchg
insl
lods
sub
icebp
pop
outsb
cli
jns
and
aaa
and
jo
inc
xchg
in
xchg
pop
or
cli
push
mov
imul
sti
out
mov
lret
jp
push
inc
ret
scas
in
push
push
xchg
dec
lods
jl
push
outsb
inc
mov
fidivs
push
rolb
and
and
out
shrb
xor
pop
mov
jnp
repnz
jo
call
cmp
dec
fs
fcoms
dec
jge
imul
scas
data16
adc
icebp
push
cmp
push
movsb
inc
pop
cli
mov
popf
neg
nop
pop
lea
dec
fdivs
add
mov
test
popf
popf
pop
cs
pop
or
dec
aas
push
xor
fists
dec
outsb
lcall
xchg
in
mov
aam
or
je
movsb
outsb
imulb
lods
mov
pop
lock
jge
sub
ret
shlb
mov
repnz
in
das
or
test
or
sbb
sti
mov
pop
adc
jge
pop
xorb
shlb
sbb
mov
sbb
push
dec
nop
pop
lcall
cltd
or
inc
add
lods
ja
pushf
loope
hlt
sbb
repnz
sub
fcmovne
arpl
in
test
jge
xchg
adc
shl
adc
aam
mov
push
jb
push
pop
inc
lret
repz
mov
xor
jecxz
popa
cwtl
xor
mov
add
loope
or
enter
mov
jo
pushf
pop
fisttpll
xor
xchg
rcr
mov
std
mov
jns
push
inc
pop
gs
push
test
shrl
arpl
sub
pop
mov
or
xor
sub
jb
cltd
orl
dec
mov
je
jnp
mov
mov
push
mov
lret
clc
mov
mov
ficoms
add
mov
jle
mov
lods
xchg
sbb
push
xchg
pop
pop
jns
arpl
sub
scas
stos
stc
adc
dec
mov
pop
scas
test
cmp
insb
fwait
push
fcmovb
push
or
fstpl
dec
add
aas
cmp
cmpb
outsb
loop
ficompl
dec
stos
cmp
scas
mov
adc
sub
mov
clc
inc
adc
mov
cmpsb
scas
jecxz
out
movsb
sub
add
fistl
inc
cmp
outsl
pop
xor
insl
mov
enter
mov
xchg
lds
mov
push
inc
mov
clc
fistpl
jns
enter
aad
pop
jle
stos
outsb
stos
xchg
sti
fisubrs
jp
mov
mov
dec
mov
push
dec
fs
cwtl
adc
pop
int3
outsb
push
out
outsl
aas
test
in
pop
jo
push
sti
pushf
mov
add
fwait
or
aad
add
movsb
cmp
fldcw
jo
cs
int
cmp
jmp
or
adc
mov
xorb
fists
scas
cwtl
xchg
std
bnd
push
inc
inc
inc
add
aas
clc
push
lcall
inc
adc
aas
xor
addr16
jae
mov
loopne
jae
hlt
rorb
or
f2xm1
xlat
aad
mov
adc
and
inc
xor
mov
mov
sub
pop
icebp
int
fstpt
test
push
mov
movsl
add
push
scas
adcl
addl
ljmp
es
xchg
arpl
xor
out
xor
jle
out
add
es
outsl
jae
scas
jbe
push
inc
daa
movsb
cli
flds
sub
in
xor
ret
jae
adc
mov
andl
imul
xor
mov
aad
push
push
pop
dec
mov
and
negl
push
sbb
sub
idivb
negl
cli
les
idivb
push
or
xor
aam
jb
stos
pop
mov
mov
jg
test
fsubrl
mov
pop
mov
mov
push
pop
xor
pop
jo
push
or
xor
jg
inc
add
push
out
cmp
and
sub
sbbl
outsb
xor
call
out
or
push
push
xchg
or
jg
push
cmpsb
je
out
or
xor
inc
or
cmc
push
ljmp
cld
int
outsb
push
add
or
mov
imul
repnz
mov
mov
je
fnstcw
stos
xchg
sub
into
sbb
lret
jns
daa
xchg
cmp
arpl
sarl
int3
pop
lds
iret
cmp
ss
out
add
sahf
in
lret
xor
rorl
mov
add
cltd
inc
sub
mov
add
aam
aam
ds
sub
fdivs
push
fdivs
cli
or
cmc
sbb
out
dec
adc
insl
mov
insl
sub
sub
jnp
arpl
mov
jge
clc
fs
les
inc
test
adc
std
notl
movsb
sbb
mov
adc
mov
inc
mov
dec
arpl
ja
inc
sbb
mov
mov
mov
fcompl
scas
stos
lret
sbb
inc
jns
mov
xchg
dec
je
inc
xor
scas
in
push
mov
outsb
and
cmpsl
inc
mov
fisttpl
sub
add
jno
xchg
push
mov
or
adc
mov
lods
xor
test
in
xchg
ficompl
mov
xchg
push
fs
hlt
dec
pop
int3
cwtl
popa
xchg
push
add
daa
ror
xchg
repnz
mov
mov
pop
scas
jmp
push
nop
jne
adc
test
mov
mov
xor
js
pop
popa
dec
imul
inc
pop
mov
call
jle
xor
push
mov
lods
mul
loop
sub
insl
mov
sti
test
jnp
xchg
mov
je
cs
loope
out
ss
jb
push
add
pop
out
or
hlt
mov
push
mov
int
in
loope
callw
pop
int3
dec
imul
fs
lods
cmc
fistpl
xor
ftst
insb
mov
adc
inc
xchg
xchg
fcoml
stos
test
scas
add
movsl
sub
cli
cmpsb
cwtl
stc
jo
ss
inc
pop
lea
or
add
ret
iret
ja
lea
xor
fstl
aad
pop
sub
sbb
cmp
repnz
push
adc
mov
fistpl
testb
xchg
mov
cmpsb
scas
lret
mov
lret
xor
sti
pop
sub
xor
sbb
ret
and
and
sub
or
dec
in
inc
rcll
lods
in
jne
adc
add
dec
movsb
push
int
gs
jne
out
lods
xor
imul
sbb
mov
hlt
push
cmpsl
xchg
les
push
sub
stos
mov
mov
daa
in
or
ljmp
lods
pop
mov
mov
cli
adc
pusha
dec
dec
push
or
add
shlb
add
xor
scas
int
fldl
fcmovnu
test
mov
imul
fsub
clc
stc
not
xor
lret
sbb
sbb
mov
fisubl
sub
mov
cmp
xlat
or
inc
scas
adc
sbb
pop
pop
push
mov
xchg
mov
xchg
push
jp
inc
pusha
incl
std
clc
add
das
mov
pushf
es
scas
jge
push
movsl
sbbl
mov
mov
jge
lds
test
in
mov
sbb
ss
lock
xor
pop
xchg
jne
outsb
ss
es
mov
push
lcall
cmp
lret
push
inc
and
mov
xchg
mov
lock
dec
ret
mov
mov
inc
sbb
ret
jno
dec
adc
dec
push
dec
sbb
movb
icebp
jo
gs
or
sub
jne
lret
pop
cmp
pushf
xchg
sbb
push
fsubr
mov
icebp
mov
jae
mov
in
aaa
hlt
lds
add
push
js
aas
inc
mov
xor
xchg
adc
cmp
or
push
inc
jns
cmc
dec
push
jae
push
jmp
and
test
xor
cs
mov
lea
addl
or
enter
aad
das
ds
mov
add
and
sub
mov
gs
les
sbb
jl
inc
push
imul
sar
leave
and
jl
xlat
dec
xchg
sub
xchg
sbb
cmp
fmuls
pop
or
es
cmc
dec
in
js
pop
divb
mov
adc
stc
inc
mov
fstpt
sbb
ss
pop
and
outsl
scas
popa
sti
fwait
jecxz
ss
xor
push
mov
inc
imull
ds
mov
rcl
std
mov
xchg
insb
out
fs
das
test
shlb
addr16
push
bound
fcomps
mov
xchg
pop
xor
pop
std
adc
fidivrs
out
or
and
adc
jb
leave
jb
mov
mov
daa
gs
popf
cld
push
jle
or
popl
mov
pop
sub
in
xor
shrl
es
out
jecxz
xchg
cmpl
lret
add
fsubl
fildll
int
ret
xor
and
addr16
mov
int3
add
cmp
idivl
sbb
ret
stos
outsb
mov
pop
inc
rolb
icebp
aam
xor
pop
rcll
sub
xor
mov
pop
js
mov
nop
outsl
xor
adc
pop
sub
or
add
into
loopne
adc
dec
jl
push
gs
jmp
cwtl
adc
inc
daa
push
sbb
mov
cmp
lock
or
sub
mov
adc
pop
and
gs
jl
pop
mov
int3
dec
sbb
cmp
sub
ret
sub
out
mov
popf
sbb
cmp
int
into
rclb
mov
push
jnp
push
bound
ds
fimull
mov
pop
sbb
adc
test
mov
cmp
data16
adc
aam
jne
out
jb
or
xor
sub
fdivl
out
mov
mov
sub
cmpsl
cmp
push
cmp
repz
sbb
js
popa
std
movsb
pop
or
addr16
mov
pop
les
mov
jb
je
jns
lea
and
cld
adc
lods
xchg
test
pop
enter
xor
and
adc
pop
lds
add
in
imul
jl
std
inc
lea
or
inc
jecxz
add
jg
push
xchg
cmp
inc
cmc
fildl
mov
pop
ljmp
rorb
cmp
clc
mov
dec
cmpsb
and
ds
call
sub
sbb
cmp
cli
cmpl
and
cs
push
clc
lods
pop
addl
push
jb
or
cmp
in
jbe
fs
cmp
movsl
scas
and
cmp
test
adc
aad
or
int
cltd
push
icebp
fsubrl
mov
in
dec
daa
leave
enter
jp
xchg
adc
mov
add
scas
cmp
pop
xchg
push
sub
push
mov
or
pop
pop
shrb
jge
call
xchg
shlb
push
adc
rclb
scas
dec
icebp
xchg
add
outsl
mov
sub
shr
out
cmp
xor
dec
int
cwtl
xlat
outsb
lock
pop
jecxz
cmp
mov
test
dec
stos
jo
adc
es
cwtl
test
repnz
shr
es
lea
cmp
fs
dec
push
out
std
inc
mov
test
cmp
mov
xor
xchg
push
jmp
sub
fcompl
popf
jo
adc
adc
mov
add
fmull
xor
mov
xchg
dec
dec
mov
xchg
scas
cltd
lds
roll
dec
jae
dec
push
dec
xchg
mov
cs
sahf
push
popa
dec
mov
sbb
nop
cmpl
test
mov
ret
cld
sahf
rol
aas
imul
js
pop
add
stos
add
imul
inc
aaa
mov
mov
lret
push
xlat
fsubrs
icebp
repz
add
mov
and
jns
in
pop
push
std
jecxz
int3
push
je
mov
outsb
or
in
repz
push
ss
int
out
int
in
and
fistps
ss
fldenv
lock
sarl
outsl
push
cli
mov
sub
lods
out
xor
add
cmc
cltd
jecxz
testb
data16
xlat
scas
hlt
movsb
dec
pusha
pop
and
xchg
mov
push
sub
test
in
ljmp
mov
sub
mov
mov
int
mov
stc
jp
cmp
and
mov
dec
out
xor
divl
pop
mov
xor
adc
cld
pop
inc
push
mov
lods
orb
inc
xchg
sub
test
fnstcw
sti
mov
pop
rcrl
pop
das
dec
flds
sub
xor
push
sbb
xchg
out
mov
inc
subl
out
lret
xchg
les
imul
inc
sbb
aas
pop
adc
jne
sub
mov
lock
stos
filds
or
dec
hlt
les
leave
int3
cmp
jnp
loopne
sub
mov
push
jle
adc
pop
fnsave
sbbl
out
mov
popa
shlb
mov
inc
cmc
inc
jl
leave
imul
sub
lods
lds
lds
xchg
xchg
fbld
imul
push
pop
xchg
mov
mov
sbb
stos
add
dec
mov
mov
out
jne
repz
loop
pop
scas
test
and
xor
test
xchg
insb
dec
xchg
cs
xchg
xchg
scas
push
lods
mov
xor
lods
mov
mov
insb
sbb
mov
aam
jo
in
js
mov
ss
sbb
stos
xor
test
std
jl
or
sub
or
pop
stc
lcall
insb
sub
mov
cwtl
add
adc
jae
outsl
imul
pusha
lods
pop
or
dec
ret
jae
in
mov
or
sbb
pusha
fdivr
dec
push
jbe
je
jnp
leave
loop
test
adc
inc
xor
ss
jns
xor
push
nop
andb
cwtl
stos
ss
xchg
lret
sbb
xchg
add
inc
leave
jg
or
sub
loop
pusha
test
call
rorl
sub
cmpxchg
pop
addr16
in
daa
xor
inc
dec
pop
dec
scas
in
lret
es
mov
loop
popf
jae
jmpw
mov
divl
or
cmp
add
es
lret
lcall
cmp
stos
and
cmp
fcomip
cmp
xor
xchg
xor
in
mov
cli
dec
jns
jb
mov
pop
jb
add
rolb
pop
push
jp
ret
xor
aam
mov
jae
cmpsl
shrb
adc
dec
xlat
fwait
movsl
mov
dec
push
cmp
mov
or
outsl
rclb
jle
mov
mov
aas
jbe
std
push
ret
and
cltd
inc
push
pop
popf
out
xlat
js
subl
push
int
push
fisubrl
xlat
or
and
daa
je
mov
frstor
jbe
cli
outsb
ss
mov
popf
adc
xor
mov
std
enter
mov
aam
inc
xchg
imul
notb
jns
adc
add
or
shlb
iret
in
gs
stos
add
in
repz
jl
aaa
sub
pop
xor
mov
lcall
xchg
jecxz
lret
pusha
sbb
mov
outsb
test
dec
mov
sub
in
cmp
xor
out
or
mov
cmp
into
sbb
lock
inc
std
mov
and
pusha
sub
and
jb
sbb
repnz
aaa
cld
add
movsl
test
adc
ret
and
jge
or
mov
in
lahf
push
bound
jge
pop
cmp
loopne
inc
test
sub
imul
sbb
sbb
xchg
mov
sub
scas
mov
or
inc
shlb
or
pop
push
mov
call
push
sbb
adc
outsl
in
mov
pop
add
push
xchg
repz
or
cltd
mov
sbb
lea
stos
lea
or
shl
jg
nop
mov
xchg
int3
sub
jns
cmpl
out
dec
xor
les
loop,pt
xor
stc
inc
push
shrb
mov
add
das
cmpsl
xor
mov
mov
push
hlt
data16
mov
fnstenv
cmc
sub
jnp
fiadds
jne
add
jecxz
inc
mov
mov
xchg
out
push
jecxz
in
or
lret
dec
cmp
bound
jle
adc
enter
mov
lret
add
stos
xchg
jp
sbb
mov
add
inc
pop
push
cmp
popf
into
out
imul
sbb
push
pusha
pop
aad
adc
fldl
pop
fnsave
gs
movsb
xchg
push
movsb
and
add
dec
add
arpl
mov
mov
sub
xor
fistps
pop
mov
push
into
repnz
mov
imul
push
add
jmp
daa
mov
jno
cmp
popf
mov
jbe
inc
repnz
push
sub
mov
sbb
mov
leave
mov
adc
imul
xor
mov
fisubrs
fsts
jno
stos
icebp
adc
mov
xchg
push
rorl
mov
jecxz
xchg
lcall
xchg
mov
jl
or
stos
sub
xor
clc
aaa
push
xchg
stc
sbb
mov
call
mov
push
mov
ret
jne
cs
mov
mov
js
jle
sarl
out
mov
std
fsubrp
jnp
adc
int3
or
aaa
repz
fdivl
mov
icebp
push
stos
call
inc
inc
and
xchg
arpl
test
pop
ja
mov
test
fsubrl
jns
cmpsb
inc
outsl
xchg
in
pop
aad
enter
mov
sub
jne
push
push
xchg
sub
fdivl
xor
loope
addb
pop
fstpt
mov
clc
jae
sbb
out
add
xor
jge
out
push
out
cmpl
mov
jnp
and
adc
sub
nop
das
mov
adc
mov
mov
add
cmp
mov
fistl
mov
or
push
out
xchg
daa
cmp
add
inc
jne
mov
in
ss
push
call
stos
arpl
insl
jb
sub
dec
sub
fwait
mov
in
in
add
mov
mov
lea
ss
movl
fists
cmp
loopne
jne
or
fistpll
cmpsl
adc
dec
stos
loope
aas
in
and
sbb
add
inc
icebp
stos
hlt
into
stc
addr16
mov
and
jp
adc
testb
mov
sub
inc
or
xor
cmp
sarb
icebp
pop
lea
cmpb
frstor
lcall
mov
icebp
cmp
mov
add
xor
mov
sbb
dec
push
test
add
roll
mov
mov
loop
testb
pop
xor
add
andl
lds
xchg
sarb
xchg
and
jno
xchg
imulb
daa
scas
sbb
xor
inc
jl
xchg
and
sbbb
pusha
testl
lock
pop
mov
repnz
or
insb
xor
push
in
add
dec
test
xchg
lds
add
shrb
outsl
ror
adcl
loopne
test
in
out
xchg
out
cmp
adc
xchg
nop
cltd
cltd
mov
add
jp
and
inc
and
cmp
mov
add
cmpsl
sarb
mov
push
push
jl
stos
inc
push
xlat
lcall
adc
into
push
mov
xor
mov
dec
daa
in
bound
sbb
cmc
adc
cs
xchg
sbb
mov
xchg
pop
add
int3
pop
xor
cmp
or
fisubs
xor
loopne
lds
pop
ficoms
out
push
cwtl
jg
cli
daa
sub
cmp
lcall
test
jb
and
loopne
jbe
mov
orb
add
movsb
rcll
jno
hlt
jle
fdivp
mov
ss
inc
xor
xchg
nop
jne
movsb
or
data16
lds
iret
loop
addb
jno
int
mov
loop
push
dec
dec
xchg
or
addr16
imul
jecxz
sub
insb
je
or
ret
bound
stc
push
xchg
mov
rorb
mov
pop
mov
ljmp
dec
dec
dec
inc
bound
cwtl
movsl
mov
pusha
out
sub
iret
and
xchg
stos
rcll
mov
push
leave
sub
pop
jg
shll
and
dec
push
aas
aas
mov
adc
xchg
cmp
ret
ds
sarb
pop
aad
leave
pop
xchg
imulb
cs
sub
scas
xchg
jbe
xchg
push
pop
lcall
adc
dec
mov
cwtl
push
js
sbb
inc
xor
jno
add
lcall
fnstcw
jne
lds
dec
mov
pop
lock
dec
cwtl
cmp
loopne
jnp
pop
jg
call
in
mov
ds
push
cld
mov
pushf
hlt
or
or
fdivrl
sbb
scas
rcr
fcoms
aam
mov
cli
fcoms
hlt
test
mov
dec
int
jbe
mov
pop
dec
es
or
jge
outsl
ret
cmp
xor
lret
cwtl
cmp
fnstsw
dec
jb
rcll
mov
push
push
scas
mov
fs
fistpll
inc
lods
or
mov
imul
xor
addr16
arpl
or
inc
popf
push
movsl
popl
xor
xchg
orb
ljmp
imull
pop
cmp
or
sbb
push
jp
dec
addr16
ja
xchg
mov
cli
xlat
lret
imull
pop
cmp
or
sbb
push
jp
dec
addr16
ja
xchg
mov
cli
xlat
lret
imull
pop
cmp
or
sbb
push
jnp
dec
pop
ja
xchg
mov
cli
xlat
dec
out
not
pop
lds
sbb
cwtl
movsl
mov
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
adc
add
xor
and
pop
inc
es
or
cmp
mov
mov
icebp
mul
notl
pop
add
xor
and
push
inc
inc
push
jno
popa
adc
cmpsb
mov
xlat
icebp
out
notl
pop
add
xor
and
push
inc
inc
push
jno
popa
ja
xchg
xorl
xor
push
pop
std
push
mov
pop
add
imul
dec
mov
std
pop
incb
into
dec
fdivrl
out
mov
sub
pop
pop
mov
cmpsl
pop
mov
out
pop
imul
cmc
push
cltd
mov
xchg
sarb
dec
jmp
push
cmp
mov
add
xor
popa
cmp
push
sub
xchg
popa
jnp
push
adc
push
inc
movl
lea
ljmp
pop
sub
push
loope
sub
cltd
fidivrs
jp
lret
in
jno
xchg
xchg
inc
ror
dec
xor
out
or
pop
add
xor
and
push
inc
inc
push
jno
popa
ja
xchg
mov
mov
mov
pop
bound
data16
add
and
add
add
mul
mov
hlt
in
push
mov
nop
xchg
xchg
xchg
xchg
imul
outsl
pusha
push
xor
or
xor
and
jecxz
out
int3
shlb
cwtl
orb
ja
inc
dec
adc
inc
push
jno
popa
ja
xchg
mov
mov
notl
pop
add
xor
and
push
inc
inc
push
jno
popa
ja
xchg
mov
mov
notl
pop
pusha
aas
lods
dec
pop
lock
mov
lcall
jns
ds
rorl
push
xchg
pop
sti
ljmp
mov
outsl
jbe
pop
lock
test
stc
jg
adc
mov
or
insb
push
aam
call
lret
and
lock
xor
je
push
cmp
xor
mov
pop
push
es
push
movsl
lock
add
pop
outsb
aad
ja
mov
mov
mov
xor
xor
jae
mov
sahf
outsb
sbbb
mov
add
dec
sub
dec
notb
fcomp
neg
jg
cmpb
int3
adc
or
mov
xor
jae
aad
pop
shr
cmp
out
cmpsb
jae
repnz
or
inc
xor
insb
mov
roll
adc
mov
leave
sub
dec
dec
std
sbb
aas
mov
movsb
fdiv
pop
xor
jmp
pop
insl
addr16
pop
inc
sbbl
fs
call
push
ror
jmp
pop
lcall
outsb
dec
pushf
xlat
xchg
iret
adc
ds
pop
xchg
push
mov
insb
call
sbb
jne
pop
fcoms
stos
push
mov
fs
push
sub
mov
dec
or
sbb
sbbl
xor
sbb
js
test
xor
les
stc
xor
inc
popa
sub
mov
jo
mov
pusha
cmpsl
xchg
daa
shrl
loope
jo
addr16
jecxz
cltd
mov
pop
out
in
add
sbb
push
jo
push
call
arpl
and
dec
mov
xchg
sub
dec
cmpsl
inc
jmp
aam
adc
jno
add
mov
testl
sbb
pop
push
sub
pop
arpl
and
cvtdq2ps
push
mov
jg
sub
popa
push
mov
xor
push
mov
jge
std
xor
daa
jl
ficomps
enter
sbb
pop
or
mov
add
xchg
movsb
sti
fnstsw
mov
mov
inc
jae
or
cltd
mov
rorb
in
out
or
add
mov
mov
rcl
test
dec
cmp
cmpsb
out
sub
jg
xor
lcall
lods
and
cltd
push
mov
ds
xchg
cld
andb
push
inc
mov
pop
jge
ficomps
pop
mov
sub
adc
push
sub
lcall
ja
xchg
push
das
cmpsb
leave
mov
dec
mov
addr16
outsl
daa
movsb
popa
shl
sbb
cmp
xchg
jmp
inc
push
mov
scas
mov
sar
sub
sbb
arpl
xlat
stc
in
sub
shl
pop
sbb
jno
sub
and
les
leave
and
ror
imul
pop
push
and
pop
and
mov
loope
sub
mov
dec
icebp
pop
cs
mov
xor
pop
into
jecxz
sbb
lahf
loop
or
in
and
mov
push
cwtl
or
ds
pop
pop
pusha
adc
stc
lcall
or
push
int
mov
mov
imul
popa
shl
xchg
addr16
stc
jge
mov
in
lcall
jns
xchg
sub
rcrb
bound
or
ss
out
jo
mov
jl
dec
aaa
pop
fisubs
mov
aaa
mov
push
fsubrs
or
mov
or
dec
neg
push
sbb
mov
hlt
jmp
or
xchg
push
dec
loop
test
lea
lds
or
dec
stos
bound
lock
sub
mov
push
ljmp
cmp
bound
lahf
test
es
clc
mov
roll
out
sti
mov
adc
sar
loop
jno
lcall
and
mov
std
lret
sub
fcomps
cmp
dec
rorl
repz
js
pop
mov
lods
lds
cltd
mov
ror
and
cmpl
scas
cmpsl
mov
sbb
iret
and
pop
repz
mov
fst
push
lock
cmc
incl
mov
push
popf
std
mov
pop
icebp
mov
notl
lock
rcl
lods
xchg
add
and
mov
sbb
push
push
jae
fidivs
sub
sub
dec
mov
repz
xor
movsb
pop
lock
cmp
push
push
xchg
stos
stos
es
aam
or
push
mov
inc
fmulp
sarl
fs
cmc
adc
xorl
roll
loopne
dec
and
cmpsb
push
xchg
cmpsl
ret
inc
adc
or
and
push
insb
cmc
add
mov
or
test
pop
inc
lods
dec
sub
outsl
add
jp
stos
iret
imul
int3
std
jg
push
and
sub
mov
pop
cmp
push
aas
jp
nop
je
stos
sbb
mov
add
or
jne
mov
test
test
dec
cmpl
xor
mov
scas
add
mov
xchg
dec
xor
and
jl
out
cmp
cmc
jnp
or
lea
or
lds
rolb
dec
mov
mov
and
xchg
push
sub
sbb
sbb
and
test
decl
and
jne
push
inc
pushf
mov
ret
and
call
fists
xor
addb
cwtl
mov
xchg
xor
outsl
nop
leave
mov
mov
test
cmp
inc
jae
xchg
in
and
lret
sahf
jne
outsl
mov
jne
jbe
xor
pop
bnd
inc
push
repz
push
jns
pop
jo
in
loopne
testl
add
xor
ss
jns
adc
jne
mov
fs
mov
aam
dec
fists
aam
into
insl
stos
mov
adc
mov
adc
insb
sti
jae
sub
faddl
mov
cmc
cmp
rcrb
in
movsb
push
mov
sub
mov
add
push
adc
sbb
pop
test
les
inc
es
sbb
jb
sti
mov
je
jbe
inc
movsb
mov
pop
xchg
outsb
push
int
addb
or
into
pop
pop
push
jp
lret
shlb
mov
inc
xor
jbe
scas
add
jns
sti
aaa
sbb
shrl
cltd
lret
fnstenv
jg
or
ret
sbb
inc
sub
adc
xor
lods
repz
mov
ja
lock
and
adc
jae
sti
adc
lret
scas
icebp
lods
xabort
arpl
imul
and
repz
jbe
or
movsl
lcall
jb
and
scas
and
les
cmc
pusha
pop
mov
bound
mov
outsb
mov
arpl
or
mov
pop
push
mov
and
jl
pusha
sbb
int3
xchg
loop
das
mov
jnp
jmp
fs
int
inc
xchg
push
out
cltd
and
sub
add
int
lret
or
roll
test
pop
jmp
dec
push
pop
aam
int3
push
inc
adc
test
cld
aaa
jnp
dec
and
data16
dec
into
ss
es
icebp
clc
ret
sub
stc
jno
aad
add
xchg
jle
fstps
test
jns
sub
dec
fmuls
dec
and
mov
mov
push
movsb
pop
mov
stos
fldenv
cmp
sub
cmp
ret
or
pop
mov
jne
xchg
xchg
add
jp
sbb
pop
je
nop
fbstp
or
mov
sbb
lret
inc
pop
out
inc
fadds
call
inc
mov
out
bound
subl
rorb
mov
xor
inc
mov
lea
aam
lret
jge
xor
test
push
iret
lret
enter
mov
ja
popa
mov
lret
dec
push
cmp
sbb
nop
pop
insl
outsl
daa
mov
lds
outsl
sbb
mov
push
cmc
popa
sub
push
sbb
cmpsl
and
enter
retw
push
xchg
xchg
inc
mov
pop
mov
mov
xlat
mov
jp
ret
xchg
pop
cli
mov
xor
call
inc
dec
push
outsb
mov
mov
push
jl
xor
lret
int
mov
shll
enter
and
call
cmp
inc
or
insb
push
add
or
xchg
push
loopne
ror
ljmp
outsb
dec
aaa
mov
sub
cs
mov
cli
or
pop
ljmp
popa
pop
dec
movsl
aaa
inc
fcoms
imul
je
repz
jb
or
leave
mov
sub
mov
xchg
mov
daa
xlat
rcl
mov
iret
or
dec
pusha
lods
adc
pop
pop
cld
mulb
sub
jbe
xor
test
or
xchg
mov
sub
out
or
cs
add
pop
mov
mov
sbb
sub
jp
mov
jnp
std
imul
cmpsl
std
xor
lods
loope
pop
fdivl
mov
adcb
sub
iret
clc
pop
pop
andl
push
sbb
loop
jl
test
cs
xor
iret
add
ss
incl
push
dec
mov
fs
adc
jmp
clc
cmpb
xor
sbb
lahf
repnz
mov
xor
inc
mov
test
xor
mov
sti
inc
cmp
jmp
sti
jecxz
stos
mov
mov
push
fsubl
sarb
outsb
mov
lods
dec
mov
mov
ja
add
jns
mov
adc
jae
sbb
mov
loop
fldt
arpl
jge
cmp
enter
and
pushf
fnstcw
shll
ljmp
and
pop
lock
dec
iret
pushf
xor
test
stos
xchg
jae
cmpsb
andb
dec
mov
pop
xor
je
lret
icebp
xchg
sbb
fs
inc
mov
mov
lahf
jg
movsb
or
push
ljmp
decb
pop
cmpsl
mov
cmp
or
fidivs
pushf
xchg
lock
cs
mov
out
bound
mov
or
or
in
nop
pop
dec
add
pop
mov
mov
cwtl
jl
stc
pushf
mov
cmpsl
std
add
jle
inc
aas
fwait
repnz
in
mov
xchg
mov
mov
jg
push
or
insl
fcmove
into
ja
mov
inc
das
divb
pushf
adc
xor
cli
daa
repnz
dec
mov
jg
mov
lret
mov
fisubrs
sbb
add
sbb
push
jne
stos
xchg
jmp
add
setle
xchg
inc
mov
or
subb
adc
add
pop
push
adc
xchg
and
pop
sarl
pop
test
cwtl
nop
out
pop
mov
imulb
insl
scas
fcoms
mov
hlt
mov
adcb
jl
leave
xor
mov
lss
je
out
sub
adc
andb
mov
jecxz
rcrl
sub
sbb
add
sub
cmp
das
lret
lcall
adc
sub
push
leave
xchg
jge
jnp
fsubl
stc
sbb
cli
in
call
test
dec
xor
popf
call
xor
rorb
mov
je
bound
xor
pop
jmp
adc
js
adc
lret
mov
cwtl
push
aas
jecxz
jns
sub
xor
rcrb
jecxz
jbe
mov
push
xchg
cmp
inc
push
push
adc
mov
incl
cmpsl
mov
aaa
mov
movsb
addr16
iret
in
mov
push
inc
clc
push
mov
jns
xchg
addl
jg
sbb
les
cmp
jnp
repz
fcompl
leave
movsl
xor
cwtl
les
xor
lea
jb
xchg
dec
push
incl
adc
mov
fs
aaa
loop
je
repz
clc
fisttps
lahf
lods
imul
cmpsl
fistl
mov
test
mov
push
inc
into
dec
addr16
jge
ja
out
out
int
shr
inc
in
or
pop
movsb
add
or
dec
push
mov
cmp
clc
js
push
push
cmp
lods
sub
push
test
adc
sarb
cltd
jp
lcall
mov
pop
aad
xor
lock
xchg
scas
pop
xchg
pop
xchg
out
pop
cmp
mov
sti
outsl
lret
mov
pop
mov
adc
sbb
push
push
negl
lcall
and
cli
and
jno
jae
call
xchg
xor
mov
fisubs
loop
inc
imul
add
fldl
cwtl
mov
test
jl
add
mov
adc
xor
mov
xchg
xor
pop
test
imull
sbb
lcall
jns
jle
mov
movsl
adc
push
addr16
insl
insl
lret
push
mov
dec
hlt
dec
and
sbb
nop
fsub
into
outsb
lds
mov
dec
pushf
adc
and
insl
mov
insl
test
loope
push
clc
repz
mov
outsb
add
inc
jno
mov
cwtl
xchg
adc
pop
push
stos
in
das
add
movsb
inc
jge
add
adc
pop
in
fnstcw
mov
jp
inc
push
push
jo
iret
cmp
jecxz
mov
sbb
fistl
int
pusha
pop
ret
insl
mov
movsb
lods
repz
pop
idivb
cwtl
lret
test
mov
or
jge
mov
loopne
jns
or
jg
inc
adc
fnsave
mov
xchg
inc
mov
xchg
fldenv
iret
pop
xor
jo
sub
stc
mov
jb
mov
dec
sbb
sbb
lock
out
mov
sub
fmull
push
adc
pop
sarb
shrl
adc
mov
ds
addr16
xchg
flds
dec
pop
sbb
push
sub
push
pop
stos
daa
mov
or
adc
mov
loope
lods
movsb
insl
mov
mov
movl
jb
inc
xchg
adc
lahf
xor
mov
xor
jmp
push
aad
insb
fwait
je
xchg
fsubrl
pop
sbbb
pop
fmulp
cmp
cmp
movsl
enter
cmp
bound
mov
push
dec
or
cmp
je
mov
dec
and
adc
or
popa
out
dec
cmc
pop
sub
adc
push
js
xchg
imul
imul
out
jg
or
and
outsb
fs
mov
push
mov
xchg
cmpsb
pop
jl
cltd
sbb
sarl
xchg
fbstp
jno
pop
lret
pop
mov
sahf
jo
clc
jecxz
dec
aad
push
adc
mov
push
sub
adc
push
and
or
fdiv
out
xchg
inc
mov
mov
movl
iret
cs
mov
imul
sahf
sbb
in
cltd
lea
xchg
mov
add
mov
jnp
jg
arpl
mov
mov
jo
insl
inc
pop
or
addr16
mov
jle
nop
shl
addr16
inc
mull
sbb
leave
sub
sarb
dec
inc
jbe
lret
ret
daa
push
mov
mov
arpl
fcmovnb
mov
push
xchg
cltd
mov
pop
pop
gs
jb
stc
cmp
and
lea
xlat
adc
sbb
mov
imul
cltd
fcmovnbe
rorl
stos
pop
mov
int
jmp
loope
mov
dec
mov
bound
mov
js
inc
mov
push
adc
scas
xchg
mov
pop
iret
add
mov
sub
lock
ljmp
push
loop
add
popa
incl
lahf
aas
mov
mov
fstpl
xor
xchg
lcall
pop
mov
adc
pop
repnz
mov
cmp
lds
call
sbb
lds
pop
and
dec
sbb
sysexit
mov
or
mov
lret
sti
lcall
inc
xchg
cmp
pop
frstor
push
mulb
xor
cwtl
pop
int3
push
cmp
sbb
xor
and
frstor
inc
das
mov
lods
mov
push
add
xor
lea
or
shrl
mov
inc
nop
ljmp
icebp
dec
inc
das
in
cld
leave
das
sbb
icebp
sbb
push
lahf
lahf
pop
cli
fwait
push
xchg
xchg
xchg
push
nop
enter
lea
lret
inc
fcomps
sbb
ss
repz
dec
jmp
fnstenv
dec
call
push
mov
mov
idivb
pop
out
and
xor
scas
scas
cltd
cmp
pop
cs
jg
jp
sub
ljmp
inc
stos
call
add
dec
jp
stc
loopne
out
addb
sub
mov
jge
add
cmp
in
push
adc
pusha
movsl
mov
push
jo,pt
int3
lds
ror
push
pop
xchg
fistpl
mov
jbe
sub
adc
aas
xorl
aam
xor
mov
inc
negb
mov
or
popf
jbe
mov
xchg
and
lea
sub
int3
daa
mov
xchg
insb
not
pushf
xchg
ret
lret
scas
insb
dec
xchg
push
jg
ror
test
lahf
rcl
test
push
push
es
enter
fwait
aam
lds
test
cmc
incb
sub
dec
iret
jg
test
inc
int
jle
cmc
call
mov
out
daa
and
sar
sub
mov
jb
adc
sbb
xchg
imul
pop
adc
and
int
cld
fldcw
ljmp
inc
lcall
pop
data16
add
mov
or
lock
lods
imul
rolb
xchg
lods
push
insl
pop
xor
fsubp
fsts
stos
in
mov
fcoml
pop
and
sbb
in
mov
mov
aam
fucomp
pop
scas
push
mov
lahf
or
push
in
imul
xor
aam
sbb
imul
xor
scas
fnstcw
add
lds
mov
inc
dec
fistpl
mov
xor
jns
popa
and
push
or
sub
pushf
pushf
xor
cmp
test
sbb
xchg
jno
and
out
imulb
mov
pop
dec
outsl
pusha
xchg
add
roll
loope
lcall
outsb
xor
dec
mov
sub
inc
cmpsb
dec
adc
jae
leave
cmp
loopne
mov
xor
xchg
iret
push
adcl
jns
mov
push
stc
xchg
clc
fidivrl
dec
scas
icebp
mov
outsl
dec
jnp
add
push
jecxz
cmp
xchg
fldenv
sub
jns
mov
adc
pandn
decb
scas
push
fwait
ds
xchg
push
out
jecxz
es
mov
mov
out
mov
mov
xor
add
sub
orb
dec
aad
pop
ja
mov
les
mov
sarb
int
adc
pop
mov
sub
mov
ljmp
leave
add
push
pop
repz
mov
dec
dec
jnp
lcall
mov
and
sub
enter
add
fs
das
pop
fsubrs
icebp
sbb
pop
les
icebp
ret
pop
mov
or
dec
jo
sub
pop
data16
ds
push
cmp
cs
lds
inc
push
pop
js
pop
xchg
xor
push
cmp
dec
in
out
in
inc
mov
add
pushf
lds
dec
push
adc
inc
mov
mov
fs
sub
mov
and
or
pop
cli
sarl
cmc
std
mov
mov
push
inc
mov
addl
mov
push
pop
addr16
lret
je
jns
ss
ja
cmc
or
add
jb
mov
push
lea
dec
adc
push
mov
addr16
rclb
loope
push
addr16
mov
sub
adc
loop
je
sbb
pop
xlat
fs
stos
call
shr
xchg
test
mov
xchg
pop
pop
jmp
jp
int
inc
ja
jns
push
mov
loop
and
or
adc
aaa
imul
imul
xor
sti
aas
fwait
inc
aaa
aas
bnd
sbb
dec
sbbl
test
cmp
arpl
mov
aad
lret
ds
imul
in
daa
mov
pusha
xlat
loope
out
add
xorb
popf
cmp
xchg
stc
loopne
cmp
cltd
fs
and
loop
fwait
cmp
jnp
cld
stos
popfw
mov
rclb
pop
jae
jl
push
cmp
movsb
ret
jo
aam
mov
adc
push
in
rcrl
add
cld
mov
or
dec
xor
aam
es
jo
xchg
xchg
xor
stc
pusha
add
push
icebp
out
mov
jcxz
loop
cmp
cmp
or
negl
push
mov
mov
lahf
movsb
out
ja
outsl
loope
scas
sbb
mov
push
xchg
shlb
push
sbb
xchg
mov
adc
addr16
xor
push
cmp
cmc
add
inc
jb
adc
mov
mov
pop
adc
push
orb
jnp
pop
loop
mov
inc
test
pusha
push
xchg
or
inc
test
and
pop
push
push
cwtl
push
orl
mov
mov
sub
test
or
shlb
jp
sbb
cmp
inc
and
leave
cmpsb
fwait
xchg
xorb
jno
mov
lret
gs
push
pop
jg
dec
sbb
ja
pop
inc
pop
lahf
mov
dec
cmpsl
in
inc
dec
add
sbb
and
leave
andl
xor
mov
pop
sbb
andb
inc
mov
sub
pop
ret
jecxz
dec
test
fcmovb
adc
insl
stos
sub
hlt
fcompl
jecxz
in
or
push
dec
xchg
lret
test
jae
cli
fdivl
and
xor
add
loopne
push
stos
dec
mov
ret
xor
fwait
add
mov
pop
push
daa
and
push
inc
inc
push
jno
popa
ja
xchg
mov
mov
notl
pop
add
xor
and
push
inc
inc
push
jno
popa
ja
xchg
mov
mov
notl
pop
add
xor
and
push
inc
inc
push
jno
popa
ja
xchg
mov
mov
notl
pop
add
xor
and
push
inc
inc
push
icebp
loopew
outsb
xchg
sbb
dec
sub
sbb
or
int3
int3
int3
int3
stos
inc
mov
ja
mov
mov
or
sbb
push
jp
dec
cmpsl
pop
mov
inc
mov
ja
pop
cli
pop
lret
inc
sub
cmp
jle
sbb
push
jp
dec
cmpsl
pop
mov
pop
mov
outsl
ljmp
sub
jns
xor
add
sbb
add
xor
jecxz
mov
adc
les
fsubr
sbb
dec
hlt
loope
push
pop
sbb
and
fnstsw
pop
daa
shlb
rcr
enter
sub
out
leave
dec
push
movsb
dec
push
cmp
push
adc
mov
jmp
mov
xor
sub
push
xlat
cmc
lea
lret
cs
cmpsl
lcall
cwtl
sbb
pop
ljmp
daa
sub
xchg
cmp
xchg
mov
pop
cmpsl
push
ret
loopne
mov
lret
das
fistpl
cmp
sub
pop
xchg
dec
out
js
stos
hlt
dec
xor
andb
lahf
jp
adc
push
addr16
push
mov
push
scas
jnp
dec
movsl
xor
mov
ja
pop
cli
pop
lret
cs
cmp
or
sbb
push
jp
dec
mov
shll
xchg
fwait
push
imul
xchg
psrad
xchg
push
enter
cs
lcall
lods
pop
xchg
pop
lret
add
dec
sbbb
imull
xchg
cmp
pop
ret
ret
inc
ficoms
add
pop
lret
aaa
sub
cmp
or
sbb
push
jp
dec
cmpsl
pop
mov
inc
mov
ja
pop
cli
pop
lret
aaa
sub
cmp
or
sbb
push
jp
dec
cmpsl
pop
mov
inc
pop
inc
xor
mov
cli
mov
scas
mov
enter
ficoms
inc
mov
incb
in
or
xor
add
lods
cs
inc
shll
jg
pop
cwtl
aaa
cli
jp
cltd
adc
adc
pop
jbe
arpl
dec
lods
mov
lcall
test
sahf
adc
adc
xchg
or
int
add
adc
mov
outsb
scas
pushf
jo
jns
int
fxch
adc
enter
movsb
popa
fiadds
sub
inc
imul
cmp
sub
and
fisttpl
xchg
int
movsb
cs
cmp
push
bound
adc
mov
fwait
or
push
js
dec
pop
sub
je
xor
xchg
rcl
out
xchg
xlat
shrb
jmp
sub
cmp
stc
xchg
in
mov
cmp
cmp
pop
pop
adc
lock
dec
ss
xlat
mov
xor
jnp
mov
mov
or
sarb
test
sbb
out
mov
ljmp
mov
xchg
adc
or
mov
adc
mov
xor
out
fwait
xchg
lock
and
inc
fdivr
iret
lcall
ret
int3
xchg
xchg
jae
sahf
test
shlb
mov
in
pusha
lcall
lcall
and
mov
scas
mov
adc
cmpsb
xor
mov
mov
sub
push
cmp
lea
mov
shll
fwait
ret
sub
mov
xor
mov
clc
xchg
pop
rolb
push
mov
out
and
pop
call
stc
fistpll
stc
dec
mov
out
mov
sub
mov
aam
jns
mov
xchg
fucomip
loope
jo
ja
imul
lods
mov
xor
xor
mov
f2xm1
in
sbbb
adc
jbe
pop
xchg
or
cmpsl
push
or
mull
inc
or
sbb
sbb
scas
movsb
test
les
hlt
add
xor
out
movsl
fldcw
inc
and
lods
add
and
daa
cmp
pop
pop
xor
aas
sbb
out
movb
out
mov
fsubrl
pop
addb
leave
sub
mov
arpl
xchg
into
push
cwtl
out
mov
aam
sub
push
je
or
xchg
mov
adc
sbb
aad
dec
xchg
adc
fwait
jnp
mov
iret
rclb
inc
negl
jmp
sbb
loop
or
adc
push
ret
insb
sub
repz
or
data16
stos
cmc
mov
lds
mov
xchg
pop
sub
test
xchg
inc
pop
rorb
mov
push
jg
sbb
outsl
push
sub
sbb
push
insl
aam
shr
xchg
adc
pop
subb
es
mov
push
mov
dec
mov
cmp
mov
lret
outsl
xchg
pop
dec
inc
in
sbb
in
in
sbb
push
stos
and
push
inc
lcall
test
jnp
or
and
cmp
push
adc
nop
out
or
in
test
ficomps
xchg
jmp
in
pop
inc
xchg
test
inc
add
out
aas
out
arpl
push
push
dec
inc
pusha
and
xchg
jge
fld
shlb
adc
mov
pop
pop
dec
cld
pop
ljmp
pop
clc
stos
insl
stos
xor
dec
sub
negl
sarb
mov
add
out
and
sti
cmp
xchg
pop
cmp
mov
test
orb
lahf
mov
add
sbb
mov
in
xor
dec
out
lret
jno
xor
mov
dec
push
out
into
cmpsl
int3
ror
mov
inc
add
out
or
dec
out
in
or
insb
dec
push
cmp
dec
jno
lock
in
out
enter
xor
cltd
lods
jae
lods
jmp
push
lahf
arpl
rcl
sbb
jo
push
mov
adc
mov
addr16
cmpsb
loope
adc
fdivrp
popf
ret
mov
mov
jl
aam
movb
cltd
jbe
pop
pop
dec
iret
add
out
and
inc
andl
mov
repz
and
fwait
call
aaa
sahf
sahf
push
push
mov
rcr
add
arpl
lods
mov
fnsave
jb
sbb
push
pusha
fstps
push
imul
xor
scas
sar
cmp
sbb
rolb
outsl
ret
sbb
aaa
sub
mov
mov
or
add
popl
push
jmp
test
inc
cmpsl
ljmp
mov
push
rcr
mov
mov
jne
add
fldt
cmp
lds
mov
fcoms
mov
and
gs
push
dec
loopne,pt
jno
lods
push
push
cmp
push
xor
xor
ds
loop
inc
jge
scas
bound
cli
ror
adc
xorl
sub
adc
mov
lds
mov
fldl2t
mov
dec
or
xchg
flds
aas
xor
cmp
mov
test
jb
xor
mov
daa
enter
mov
add
insb
push
or
cmp
pop
cmp
cli
add
jge
leave
pop
jmp
fidivrs
icebp
das
or
cmp
pop
dec
arpl
mov
mov
xchg
jecxz
sbb
push
cmc
fadds
addr16
jmp
clc
and
push
sub
inc
aad
inc
lret
xchg
mov
insb
cld
pop
aas
jno
inc
cltd
cli
fsts
and
shll
xchg
and
mov
fdivl
sbb
mov
push
pop
mov
mov
dec
pop
cmp
and
cltd
movsb
mov
js
movl
mov
jne
jne
fcompl
cmp
shll
nop
sbb
or
faddl
imul
jge
and
xor
pop
out
jl
add
jp
sahf
xchg
faddl
pusha
sbbl
xchg
mov
into
imul
cmp
mov
fnstcw
fistl
cs
xor
sub
fcomps
mov
stos
stc
adc
push
notb
int
stos
jl
jp
sbb
jb
int
inc
inc
in
jecxz
aam
jmp
iret
xchg
dec
jns,pn
loop
and
jmp
push
daa
inc
dec
fisubs
stc
cmc
jecxz
xor
out
mov
cmc
ficomps
cmp
push
cmpsw
ror
cwtl
adc
sti
cmpsb
lds
pop
mov
pop
ret
jo,pt
or
sub
ret
in
lcall
test
jbe
sub
enter
or
push
test
jnp
movb
jl
stc
repz
lea
inc
pop
rcl
sarb
mov
pop
adc
pop
loopne,pt
jg
sbb
loop
and
lods
ret
bound
pop
sbb
sbb
cmp
lea
jns
mov
aaa
clc
dec
daa
and
jecxz
es
adc
ss
mov
dec
sbb
setl
mov
push
mov
std
clc
scas
je
ret
test
sbb
adc
mov
or
movsb
push
adc
cmp
xchg
mov
cmp
jae
aaa
icebp
add
rcrb
xchg
mov
sahf
and
pop
lret
enter
mov
sbb
push
cltd
sahf
mov
or
aam
mov
leave
xlat
jle
jl
push
cmp
dec
mov
hlt
lods
aad
das
lea
xchg
ret
subb
hlt
fisttpll
or
imulb
sarl
outsb
jnp
lock
jecxz
test
ljmp
xlat
pop
or
out
dec
lret
pop
jmp
fldl
ss
adc
jns
mov
lods
and
adcb
jnp
xor
in
jb
inc
dec
jnp
xchg
cmp
push
add
pusha
stc
cltd
add
xchg
mov
push
xor
jecxz
push
iret
lahf
test
out
xchg
sbb
jno
mov
pop
icebp
fwait
aad
lcall
ja
pop
jb
imul
xchg
sbb
pop
insw
es
mov
inc
lret
vmovdqa
icebp
mov
in
add
fcomps
add
dec
sbb
and
in
pop
gs
sbb
sbb
in
xor
in
pop
andb
cld
clc
and
clc
push
sub
sbb
mov
stos
ss
push
pop
lret
aam
inc
imul
xor
jnp
xchg
aad
jmp
push
rclb
ret
cmp
add
sub
xor
add
pop
pop
jne
and
imul
repz
inc
div
std
push
pop
sbb
in
adc
xor
mov
imul
xchg
in
pushf
fildl
push
xchg
cld
cmp
rcrl
hlt
addr16
push
xor
ljmp
fs
mov
xor
vxorps
sarb
pop
jg
push
incb
dec
shll
xchg
add
adc
int
rol
mov
bound
cmp
testb
loope
nop
mov
rolb
sbb
adc
mov
orb
xchg
movsb
jbe
outsl
mov
aam
push
sbb
adc
sahf
outsb
outsl
fisubrl
fsubrp
shl
dec
out
mov
dec
pop
movb
insb
lahf
psubb
sbbb
push
addr16
or
xlat
add
js
cmp
lods
jecxz
cltd
sub
jns
nop
xchg
clc
and
adc
or
jbe
push
push
adc
xchg
jae
jle
xor
dec
mov
nop
dec
xchg
sbb
lods
dec
mov
xchg
adc
in
leave
cld
aad
push
rcrl
in
lods
iret
and
mov
das
inc
subb
outsb
dec
and
imul
push
inc
xor
leave
leave
nop
sub
movsl
cmpsb
mov
std
jbe
jmp
sub
ss
sub
jg
loopne
frstor
pusha
sub
gs
cs
inc
sahf
retw
pop
mov
lcall
or
inc
repz
repz
fmuls
sub
popf
inc
xor
xchg
addr16
out
inc
bound
or
dec
rcr
fwait
jo
cmp
mov
popf
mov
or
xor
arpl
xchg
inc
push
in
in
pop
cld
movsb
int3
jne
add
sbb
cmp
lret
movb
sub
es
aad
jg
enter
add
mov
ja
add
leave
inc
rcll
cmpsl
cmp
test
inc
daa
inc
pminsw
lret
dec
filds
sbb
and
and
pushf
jne
leave
mov
cmpsb
jmp
dec
and
fcmovnb
jno
xchg
popf
pushl
mov
fwait
push
sbb
dec
andb
mov
dec
into
push
mov
shrl
fidivrl
xor
push
lahf
aam
mov
enter
and
sub
mov
dec
daa
les
jo
lds
xor
je
and
cld
adc
cmp
loopne
lret
pop
cwtl
mov
cmpl
popf
test
or
test
jno
in
cmpsb
xor
pop
mov
mov
mov
lcall
mov
arpl
in
shll
sti
subb
int3
movsl
imul
inc
shrb
loopne
int3
lret
mov
pop
lret
dec
fiadds
roll
mov
popf
push
sbb
cltd
ret
out
add
subl
lret
addr16
adc
in
mov
xor
inc
dec
nop
movsl
jmp
repz
sub
fs
lret
outsl
inc
xor
popf
jne
or
xor
bound
inc
gs
aaa
adc
push
mov
loope
lds
cmp
adc
mov
or
inc
fisttps
loopne
pop
dec
pop
hlt
out
in
ret
sub
aad
mov
jbe
pushf
jno
dec
xor
cmp
mov
cli
insb
jmp
imul
lea
cmc
mov
cmp
outsb
jg
lods
and
push
shll
imul
leave
push
sahf
iret
call
xor
mov
popa
jecxz
push
lea
cwtl
adcb
add
test
mov
mov
and
jge
mov
stos
mov
sub
cwtl
jecxz
push
arpl
stc
cmp
mov
jbe
repz
cmp
popa
sub
push
sti
sbb
aaa
sub
adc
call
and
jg
push
bound
rclb
mov
inc
or
ja
out
dec
test
mov
xchg
lds
mov
cmp
sti
xchg
repnz
lock
daa
ret
icebp
xchg
inc
or
push
jl
lcall
sbb
cmp
mov
aas
jmp
mov
loop
push
xlat
jb
pop
mov
or
lea
lret
gs
cli
mov
pop
inc
fwait
xorb
jl
lock
mov
icebp
lods
out
cmp
mov
xorl
jne
dec
fmuls
fs
inc
std
and
jp
sti
jg
insl
dec
push
sahf
xchg
stos
std
inc
loope
loop
test
mov
push
dec
sub
mov
lods
jbe
ja
push
popf
fisttpll
pop
rorl
mov
scas
icebp
adc
xchg
cmc
sbb
mulb
xchg
or
mov
insb
dec
and
push
cli
and
cmp
cmpl
push
xor
mov
jecxz
cs
xchg
jmp
mov
loopne
jmp
scas
xor
cmp
mov
mov
imul
jne
nop
into
ljmp
mov
and
push
sub
mov
jmp
mov
fbld
pushf
mull
lods
movsl
push
iret
pop
and
dec
in
inc
imul
fsubrs
dec
stc
mov
sbb
xlat
aam
fisttps
mov
pop
jnp
push
xchg
dec
mov
mov
mov
push
imul
pop
rcrl
and
mov
mov
dec
cwtl
insl
pop
adc
test
addr16
cmp
lret
loope
jl
scas
sbb
push
daa
cmpsl
jo
dec
push
xor
mov
and
rcl
inc
lock
lods
jae
pusha
mov
mov
or
fiadds
jmp
xchg
out
jno
movsl
fimull
dec
jl
add
xchg
push
std
int3
xor
call
jno
mov
jne
and
xchg
dec
das
sub
leave
push
cmc
push
jecxz
xchg
jp
mov
out
push
xchg
lock
jmp
pop
das
lcall
mov
into
ret
jno
adc
mov
aas
lret
adc
push
xchg
js
cmp
loopne
fidivl
pop
stos
sarl
les
add
fsubrs
dec
out
leave
mov
xor
iret
popl
or
sbb
xlat
les
popa
cmp
adc
cmp
stos
int3
pop
and
mov
xchg
movsl
push
cmc
pop
sub
int3
andl
mov
sub
pop
aas
jo
fidivs
or
pusha
xchg
pop
jmp
fidivrs
hlt
inc
sub
std
cmpsb
mov
cmp
ficoms
push
pop
sub
lock
mov
mov
aas
adc
aad
iret
ja
mov
dec
mov
pop
sub
outsl
cmc
repnz
inc
lret
jbe
jp
mov
lret
xchg
clc
xor
sub
stos
lods
fs
popf
movl
sub
xor
arpl
popf
jb
jb
xchg
pop
aam
adc
xorb
shrl
push
adc
xor
outsl
in
push
lret
mov
inc
loope
mov
jmp
ret
faddl
lods
add
sbb
mov
inc
inc
dec
fwait
adc
fwait
jge
inc
inc
cmp
adc
sub
adc
mov
xchg
mov
es
or
cltd
mov
add
mov
jae
dec
pop
out
sbb
pop
dec
lds
mov
rol
pop
and
cmp
cmp
mov
dec
arpl
push
fdivr
aad
adc
sub
push
xorl
adc
test
sub
jbe
aaa
out
adc
or
pushf
outsb
ret
lds
lcall
loopne
or
mov
pop
jp
jno
ficoms
inc
xchg
push
sub
movsb
outsl
imul
push
lock
xor
cmp
jnp
mov
ja
insb
ljmp
cmpsl
cmp
and
mov
hlt
mov
mov
mov
std
jmp
and
dec
test
jb
xchg
mov
gs
dec
adc
outsl
subb
imul
rcrl
push
adc
push
cs
lods
lret
cltd
lahf
dec
pop
xor
xchg
pushf
cmovb
sub
out
xchg
mul
cmc
or
shlb
push
lds
xor
or
stc
dec
pushf
sar
jne
xor
divl
pushf
cltd
imul
add
sub
add
lods
dec
fisubs
mov
mov
jno
xor
pop
xor
xchg
inc
inc
clc
ljmp
rorb
mov
pop
mov
leave
add
sub
xor
ds
ds
in
add
xlat
add
jne
sbb
adc
xchg
hlt
sub
mov
lret
popf
fldl
sub
xchg
jmp
mov
pop
mov
shr
stos
dec
push
imul
pop
cld
fisubs
movsb
cmp
xchg
repz
or
cmpsl
cmpsl
or
test
int3
int3
and
ret
divl
sub
test
and
cmpsl
in
sub
rol
iret
js
xchg
data16
popa
mov
xor
sbb
mov
ljmp
jl
cld
and
cmpsl
dec
cli
filds
jp
pop
mov
mov
std
cmp
jne
mov
addr16
jne
rcrb
cmpsb
or
jo
lea
out
push
pop
fs
mov
fs
inc
lods
xor
sbb
jns
push
clc
in
sub
add
lret
mov
dec
leave
lea
pushf
adc
add
push
lds
jo
stc
mov
sub
add
xorb
cltd
jmp
xchg
xor
jecxz
fs
les
in
mov
fcomip
shl
xchg
test
jge
mov
sub
mov
cltd
enter
mov
lret
sub
inc
adc
pusha
pop
addb
sub
pop
aam
fidivs
jle
lock
popa
daa
cmp
lods
bound
in
daa
stos
insb
iret
cmpsl
ss
lds
inc
shr
jg
and
add
gs
stos
testb
lds
jmp
pop
incl
fisubs
mov
fidivrs
add
rcrl
repnz
mov
sub
cmp
lcall
xchg
mov
negb
or
loope
jle
or
pop
stos
or
mov
adc
test
daa
jb
inc
pusha
dec
dec
insl
adc
pushf
add
jae
adc
inc
push
fisttpl
jl
loopne
test
inc
dec
jle
add
jp
jp
ljmp
test
xlat
adcl
cmpsl
jne
cmp
jns
mov
stos
gs
adc
mov
test
xor
and
cmp
jno
std
aaa
fwait
mov
jno
mov
and
pop
nop
and
lahf
movsb
incl
arpl
fcompl
jg
lods
aad
shll
mov
lret
sbb
jnp
jecxz
mov
pop
xor
mov
mov
out
inc
inc
mov
sub
addr16
sbb
jecxz
roll
test
data16
and
dec
fiaddl
or
sahf
pushf
fsubrs
push
mov
mov
sets
push
push
mov
pop
xchg
mov
addb
lahf
mov
mov
or
or
call
aaa
sti
push
push
mov
cltd
test
cmp
fsubs
pop
jne
adc
lahf
in
xor
sub
call
sahf
loope
pop
cmpb
xchg
loopne
sub
dec
xchg
push
in
push
mov
insb
mov
jecxz
add
push
lahf
xlat
mov
out
jmp
cmc
js
adc
stos
jmp
cmc
jl
jne
aam
shrb
pop
daa
adc
aaa
cwtl
or
pop
sarb
fwait
lea
jle
sbb
mov
das
enter
fbld
daa
outsb
sbb
jg
sub
push
mov
test
or
jge
psrlq
add
dec
pop
inc
pop
aaa
inc
jmp
fsubrp
dec
inc
mov
mov
sbb
cmp
push
pop
sar
hlt
insl
ret
mov
mov
cmpsl
jne
scas
and
movsb
sbb
mov
mov
pusha
xor
pusha
add
lret
mov
mov
cmp
inc
imul
es
xor
mov
in
inc
inc
jns
cmp
cwtl
sbb
rorb
adc
outsb
push
dec
and
add
bound
rol
orl
jns
lods
aas
xchg
xchg
es
inc
pop
jecxz
or
loope
scas
mov
insb
push
jle
sarl
test
lcall
mov
dec
das
sbb
xchg
js
imul
pop
cltd
xchg
aas
icebp
adc
popf
in
xchg
push
lret
loopne
xchg
inc
and
push
xchg
jle
jne
sub
jnp
in
mov
rolb
push
ret
xor
fisubrs
xor
arpl
insb
ljmp
mov
and
rcrb
test
inc
in
shlb
mov
mov
adc
xchg
push
cmp
subb
pop
mov
rcrb
stos
int3
or
aaa
push
aaa
mov
or
arpl
lahf
loop
ss
pop
add
sbb
frndint
scas
in
ljmp
push
or
mov
inc
adcb
lret
imul
mov
xchg
push
jg
sbb
loop
mov
cmp
jle
mov
xchg
mov
shr
outsl
testb
xor
or
ret
inc
movsl
fcompl
jno
push
ffreep
or
jb
fnstsw
data16
cmp
xchg
xchg
out
or
popf
xor
les
pop
cmpsb
push
bound
bnd
jnp
popa
inc
push
jne
scas
jno
aad
mov
or
aaa
in
push
dec
and
cli
sub
or
rorb
stos
mov
stos
clc
fsubl
adc
xchg
cmp
adc
cmp
pop
inc
mov
mov
or
xor
fsubrl
and
sub
outsb
shrb
mov
in
push
ds
daa
addr16
daa
fidivl
sub
cmp
or
sbb
push
jp
dec
cmpsl
pop
mov
inc
mov
ja
pop
cli
pop
lret
aaa
sub
cmp
or
sbb
push
jp
dec
cmpsl
pop
mov
inc
mov
ja
pop
cli
pop
lret
aaa
sub
cmp
or
sbb
push
jp
dec
mov
mov
ja
pop
cli
pop
lret
imull
cmp
out
sbbb
movsl
enter
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
push
push
pushl
mov
pushl
pushl
call
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
jo
pusha
je
inc
inc
aam
jmp
or
in
hlt
rol
rcl
movsb
mov
xchg
jo
pusha
je
inc
inc
push
xor
mov
lock
aam
rcl
lret
mov
xchg
jo
pusha
je
in
inc
push
xor
and
adc
add
cmp
xchg
mov
repz
fucom
lock
xchg
das
fs
push
xor
stc
adc
int3
xchg
out
dec
pop
push
add
roll
push
mov
enter
push
or
lods
aas
les
mov
sbb
gs
jp
ja
or
mov
mov
rorb
pop
loopne
fnsave
movsb
pusha
cmp
pop
and
pop
xchg
incl
jmp
sbb
cs
stos
sub
loopne
adc
jno
pushf
mov
mov
jno
or
adc
mov
in
add
mov
xchg
subl
push
lret
outsb
repnz
mov
inc
add
cmpsl
in
pushf
das
cmp
int3
loopne
sub
adc
inc
pop
xor
xor
fiadds
xchg
lock
loopne
rcl
rcrb
cmp
ss
cmp
sub
push
push
pop
je
add
mov
mov
shl
cmc
adc
and
gs
push
xorl
clc
cld
in
call
adc
aaa
jl
and
add
adc
in
hlt
rol
rcl
movsb
mov
xchg
jo
pusha
je
inc
inc
push
xor
xor
add
adc
in
hlt
rol
rcl
movsb
mov
xchg
jo
inc
mov
into
mov
cs
lods
je
dec
cmp
call
inc
outsb
xchg
xchg
dec
movswl
dec
aaa
fldt
cmp
std
xlat
pop
push
test
mov
cmp
sbb
pop
adc
xchg
adc
jb
call
sub
in
inc
orl
shrb
cmp
repz
stos
ret
lret
jno
fcomps
mov
mov
pop
loope
pusha
out
fbld
cmpb
and
daa
pop
loope
or
shlb
jne
pop
inc
sub
and
jae
stos
xor
les
adc
sub
jno
repnz
fimuls
inc
int
add
inc
mov
loopne
mov
xchg
sub
cmpb
or
push
mov
iret
or
pusha
sub
cmp
jb
xchg
lcall
ljmp
movsl
aaa
inc
mov
ret
cmc
dec
ret
mov
cmpsb
fs
inc
repz
pop
lea
mov
mov
cmp
mov
stos
faddp
loopne
fdivp
push
data16
mov
pop
push
mov
testb
mov
cld
es
add
or
mov
xor
pusha
loope
add
adc
stos
std
sbb
add
ds
xchg
ja
shll
mov
sahf
inc
std
stos
add
addr16
mov
add
and
sub
xor
mov
into
stos
aaa
popa
inc
add
cmc
jmp
add
or
mov
in
sub
pop
jb
lea
daa
xor
xlat
test
iret
mov
or
cmp
inc
jno
bound
outsb
add
addb
push
cmp
leave
test
pop
roll
in
es
mov
sbb
imul
imul
jbe
push
and
cs
stos
mov
scas
test
push
mov
outsb
xor
push
call
data16
add
icebp
cmp
loop
mov
iret
add
fsubl
and
cli
mov
inc
mov
imul
adc
pushf
daa
sbb
xor
or
repz
pop
cmp
dec
sub
nop
push
or
mov
xchg
fs
and
fcompl
xor
jmp
dec
cmp
out
pop
das
xor
mov
out
insl
out
sub
cld
fs
cs
mov
xchg
xlat
cmp
xchg
iret
push
sbb
inc
dec
jp
stc
fmulp
push
les
repnz
xchg
inc
inc
pop
dec
or
inc
adc
pop
jbe
sub
inc
bound
and
jnp
cmp
adc
cli
jmp
jle
ss
clc
mov
cmp
into
jo
and
and
daa
ss
xchg
popf
pop
pop
rcrb
and
std
lds
xchg
add
or
lock
int3
cmp
imul
dec
sub
cli
xor
sahf
adc
in
mov
cmp
test
adc
lds
xlat
sub
mov
stos
or
jmp
pop
out
push
scas
cwtl
rorb
mov
fdivs
or
decb
inc
xchg
insl
dec
hlt
aaa
mov
mov
data16
fst
or
and
add
scas
sti
mov
rcl
dec
mov
out
cmpsl
adc
push
sbb
xor
mov
mov
lret
aad
shrb
xor
mov
dec
fs
xor
cmp
mov
test
mov
jp
adc
shr
xor
daa
or
push
sbb
test
mov
and
xchg
sbb
mov
fsubr
push
push
xlat
in
jge
pop
mov
movsb
pop
cmp
popf
dec
xor
testb
popa
dec
sbb
push
mov
jecxz
sbbl
mov
dec
xchg
cwtl
and
fldl
repz
xchg
lret
stc
icebp
jmp
jno
mov
loopne
fisubs
movl
popf
xchg
jae
inc
xchg
jge
sahf
or
xchg
inc
test
jns
push
dec
xor
adc
ret
jge
jmp
or
add
mov
movsl
mov
ret
imul
sbb
ss
cs
or
add
add
imul
lret
push
xchg
xchg
jg
hlt
cmp
xor
lods
mov
pop
pop
or
test
push
sub
xchg
imul
sbb
js,pn
and
push
inc
sbb
fisttpl
mov
loopne
mov
popa
adc
shl
or
jge
push
cmc
rcll
insl
int3
jge
subb
cmp
cld
mov
arpl
loope
push
pop
fisubrs
sti
mov
addb
xchg
jno
fwait
cmpb
xor
jmp
adc
lahf
sbb
mov
loope
xchg
cwtl
xchg
add
int3
mov
shll
mov
mov
adc
inc
mov
aas
daa
dec
out
mov
and
jnp
out
jl
adc
int3
aam
mov
sub
sub
rcr
les
add
lods
out
popa
xor
sub
cmp
inc
xor
and
cmc
mov
in
repnz
loope
lods
frstor
cli
int3
scas
rsm
inc
mov
mov
sub
in
insl
aad
cmpsb
movsb
xchg
mov
push
in
nop
mov
mov
loop
je
xlat
add
dec
es
icebp
fs
out
xorb
sti
xchg
pop
in
or
add
loopne
fsubs
fisttpl
mov
scas
fdivr
mov
and
sub
popf
cmpsb
add
sahf
xchg
sbb
iret
jnp
mov
inc
jecxz
int
sti
movsl
mov
sbb
test
inc
dec
xchg
jo
and
xor
in
lods
mov
mov
adcl
adcb
mov
cmp
mov
add
lret
cltd
sbb
inc
xchg
sub
or
cmp
mov
vcvtpd2dqy
les
sbb
inc
mov
mov
and
and
iret
arpl
jl
int
add
stc
aas
mov
sbb
lahf
gs
add
jae
in
and
mov
mov
or
cld
out
sbb
outsl
bound
sbb
sbb
cmp
jbe
mov
sti
mov
add
pop
mov
out
pop
and
enter
sub
cltd
fldenv
sub
jno
out
das
jnp
jns
pop
cmp
mov
jge
pop
outsb
sbb
es
pop
cmp
lea
adc
out
dec
jnp
and
pop
push
imul
pop
sti
jbe
ds
mov
rcrl
cwtl
cmp
adc
pop
ljmp
in
push
bound
pop
dec
pusha
pop
xchg
adc
and
sbb
je
std
mov
xchg
aas
cmpsb
faddl
rolb
xchg
les
or
daa
call
movsl
insb
mov
ret
mov
sub
loopne
jno
xchg
inc
ret
frndint
mov
mov
mov
or
xchg
sbb
sbb
lods
xchg
push
sbb
mov
dec
pop
subl
mov
insl
mov
pop
pop
dec
ss
lods
push
lods
or
cs
mov
aas
jbe
mov
pop
out
or
and
shlb
stos
gs
out
cld
push
mov
and
fwait
jle
icebp
outsb
push
add
sub
loop
mov
lcall
stos
cmp
data16
fbstp
out
out
insl
jg
mov
loop
sub
xchg
out
jp
cmp
mov
es
jo
sahf
cs
pop
ja
popa
in
jle
xor
xchg
inc
or
cmc
fsubl
sub
insl
and
dec
shll
das
das
decb
and
push
adc
shlb
sub
je
cmp
imul
test
jl
pop
dec
dec
inc
out
or
mov
std
aaa
cwtl
jne
xor
jmp
fwait
dec
push
stc
ljmp
ss
es
js
pusha
mov
xor
or
inc
clc
jp
jg
dec
xchg
xchg
je
popa
and
cmovle
sub
insl
fisubs
push
jae
mov
jl
lods
and
mov
xor
scas
out
xchg
enter
and
xor
xlat
imul
loop
push
mov
push
jle
je
adc
xchg
xchg
cli
in
in
test
icebp
dec
outsb
mov
incl
call
cmc
xor
cmpsb
leave
and
xlat
das
jle
or
subl
lea
xlat
cwtl
mov
fdivp
mov
mov
pop
xor
mov
xor
in
iret
enter
sarb
push
pop
scas
mov
ret
push
dec
ret
rolb
test
pop
pop
repz
push
mov
jbe
gs
sub
mov
stos
jae
in
cmp
stos
in
push
enter
mov
cltd
movsb
fsubl
sbb
shrl
mov
lods
cmp
es
icebp
mov
adc
jnp
mov
ljmp
or
mov
xchg
call
cmc
sbb
adc
xor
add
inc
out
in
mov
loope
call
dec
jbe
imul
add
cmp
aas
jle
ljmp
xchg
mov
push
add
mov
push
inc
pop
lods
jns
jl
outsl
divl
pop
rolb
aam
cltd
out
jae
push
jne
vphsubdq
pop
inc
jns
cld
test
or
jno
lcall
xor
cmp
icebp
mov
jnp
inc
emms
ficompl
test
shl
adc
repz
lea
cmp
iret
pop
insl
fs
fsts
push
dec
xchg
push
sbb
jb
and
mov
mov
pop
adc
clc
insb
pushf
pop
add
popf
cmp
push
xorb
lcall
les
cmp
aam
mov
mov
ficoms
adc
aam
mov
cmc
jns
xchg
stos
lahf
dec
sbb
outsb
mov
mov
lods
fnsave
jbe
or
sti
fbld
cmp
add
add
in
mov
imul
filds
or
push
jp
dec
add
mov
daa
loopne
xchg
jle
cmp
pop
lds
imul
push
cld
inc
out
shll
inc
cmp
mov
test
das
mov
lcall
cwtl
ficoms
sbb
jb
mov
or
jl
lds
inc
call
fidivs
push
jl
jmp
fistpl
xchg
xor
xor
fnstcw
test
mov
cs
pop
mov
mov
dec
popa
fisubrl
fidivl
jno
sbb
xchg
in
mov
pop
add
aad
fwait
sbb
insl
pop
mov
arpl
jbe
aas
cmp
stos
jge
mov
pop
pushf
out
in
mov
movsl
push
pop
sub
sbb
out
je
and
pmaxub
neg
ret
pusha
push
insb
mov
push
outsl
pop
xor
es
nop
add
mov
push
push
std
sahf
mov
xor
add
flds
mov
mov
pop
push
dec
adcl
cwtl
add
in
adc
push
pop
or
popa
inc
cmp
int
lret
fwait
ja
dec
roll
or
mov
std
mov
nop
sbb
sub
inc
imulb
dec
xchg
push
stos
cmp
or
sbb
test
jle
mulb
out
in
cltd
sub
pushf
sbb
fcomi
rolb
roll
jmp
out
int
xchg
sbb
fstpl
iret
and
adc
xchg
clc
stos
mov
sub
jg
pop
mov
cmp
pop
xor
adc
lret
popf
rclb
pop
add
cmp
test
mov
sbb
scas
mov
xor
cmpsl
repz
mov
mov
mov
push
inc
testb
sahf
xor
xchg
repz
in
data16
xor
push
xlat
xchg
aad
dec
shlb
pop
inc
lret
xor
fmul
pop
dec
popa
pop
inc
scas
lods
repnz
fsubrs
scas
sahf
cmp
mov
cmp
pushf
iret
or
in
or
xlat
cmpsl
aas
and
add
dec
shr
push
xor
lock
pop
pusha
outsb
decb
mov
stc
mov
mov
popf
mov
cltd
add
dec
add
pop
adc
jp
jg
mov
loope
out
push
loop
ja
pop
testl
or
jmp
jmp
inc
inc
mov
mov
movsb
std
popf
shrl
jne
and
jns
mov
or
into
ljmp
cmp
imul
mov
cli
jge
adc
jbe
mov
xchg
in
lock
dec
sahf
and
test
mov
imul
push
xchg
movsl
shrb
xchg
cltd
xchg
cmp
rcll
aam
or
shlb
daa
xorl
imul
jp
adc
out
xchg
add
lods
daa
jo
and
mov
cmp
adcb
dec
sbb
inc
add
rcll
out
sar
mov
xor
out
pop
movsl
xor
adc
dec
sub
dec
add
outsl
sbb
or
out
push
out
orb
aaa
out
rcll
inc
push
adc
test
dec
mov
or
inc
fwait
and
cmp
vcvtss2sd
jmp
xchg
fstl
in
inc
sbb
dec
shl
out
ret
mov
xor
arpl
subb
pop
mov
mull
repnz
xchg
rcll
mov
push
mov
cmpl
dec
out
mov
adc
cmpsl
lahf
mov
daa
mov
fsubrs
inc
cmc
daa
inc
in
leave
arpl
lods
rcrb
push
and
leave
push
divb
outsl
mov
outsl
sbb
jmp
jno
icebp
dec
sub
sbb
sti
rcll
cmpsl
add
sti
push
mov
daa
cli
test
sbb
fs
mov
xchg
arpl
fwait
repnz
and
lods
add
dec
or
sbb
xchg
les
dec
cmp
adc
cwtl
ljmp
xor
cmpsb
mov
inc
mov
jge
rorb
add
mov
fstpl
or
jle
mov
lds
mov
arpl
mov
adc
mov
popa
inc
add
filds
inc
sub
imul
xor
ret
adc
ljmp
push
push
mov
cmp
div
and
mov
and
scas
cwtl
add
sub
fmuls
dec
push
and
or
movsb
incl
test
add
out
lods
mov
rcll
aas
mov
in
mov
xor
pop
push
jmp
or
sub
dec
cld
out
push
pop
adc
mov
or
stc
push
add
mov
fisttps
in
popa
sub
add
stc
pop
js
mov
xor
int3
jmp
sbb
addr16
mov
or
xchg
cmp
and
or
cmp
aaa
movsl
test
icebp
xchg
insl
loopne
out
pop
or
mov
out
aam
sub
test
ja
fldenv
stos
mov
adc
lods
mov
fadds
test
insb
cltd
ffree
cltd
pop
and
pop
mov
iret
scas
sub
ja
loope
into
jns
mov
mov
inc
inc
or
and
sub
mov
orl
pop
movsb
sbb
jnp
sbb
pop
addr16
inc
push
jp
dec
cmc
jbe
orl
loop
xlat
pop
cmp
subl
xchg
sbb
in
out
add
xchg
aas
dec
or
in
aam
pop
sub
daa
adc
sub
hlt
fnstenv
sbb
dec
cmp
mov
loopne
adc
mov
inc
jo
jb
pop
scas
cmp
insl
insl
inc
jg
adc
mov
xor
aas
cmp
scas
cmpsb
sbb
jns
add
jno
jae
pop
inc
mov
xchg
in
inc
add
dec
push
into
xor
orl
jle
mov
stos
imul
mov
test
ljmp
idivb
mov
or
xor
mov
mov
xchg
daa
mov
cltd
in
xlat
jge
fisubl
imul
xor
fistl
enter
mov
loope
shrb
mov
lret
mov
decl
in
lahf
mov
insl
lahf
test
mov
ss
mov
insl
push
imul
imull
mov
popa
dec
add
inc
and
pop
jb
inc
in
mov
xchg
hlt
and
outsl
gs
sub
xchg
jg
aas
mov
mov
call
rorb
negl
pop
mov
stc
xchg
pop
lds
jge
sbb
adc
dec
add
jb
stos
bound
and
lods
ror
mov
cmp
lds
xor
ds
inc
pop
mov
lret
mov
sbb
mov
jl
push
mov
jno
jg
aaa
sti
add
int
enter
bswap
jns
fs
mov
xor
or
sahf
fldcw
jecxz
jp
cmp
or
lahf
pop
cmp
movl
lret
sub
sub
sar
pop
imul
fadds
push
stos
ror
mov
xor
insb
mov
inc
ret
adc
sub
addb
xor
inc
adc
imul
ds
mov
inc
jae
xchg
or
std
pop
jo
inc
adcb
jo
lds
test
nop
jno
in
notb
jne
clc
fwait
popa
sbbb
out
jge
lcall
mov
sub
xor
inc
pop
pop
pop
clc
addr16
cmp
cwtl
or
pop
jmp
lahf
nop
call
dec
xor
sub
cld
inc
lcall
cwtl
pop
js
es
jg
jo
les
pop
adc
mov
test
and
ja
test
push
in
gs
dec
push
cld
lret
xor
xor
pop
push
aas
arpl
cmpb
icebp
push
jns
repz
addr16
out
ljmp
mov
das
paddw
sub
andb
mov
xorl
jns
dec
pop
mov
sub
sub
movsb
shrb
sti
mov
sub
ret
fistpl
xchg
mov
and
jmp
loop
push
sub
dec
enter
gs
lcall
sbb
inc
mov
xchg
cmpsl
pushf
xchg
jae
mov
call
mov
inc
icebp
cmpsb
push
insl
lods
ds
popa
je
nop
push
adc
cmpl
push
xchg
lret
and
mov
mov
inc
push
iret
test
xchg
repnz
pop
push
add
stc
push
dec
clc
mov
dec
fs
pushfw
push
arpl
sub
sbb
shlb
clc
mov
shl
mov
test
cmp
fs
mov
xchg
cmpl
mov
stos
in
outsb
xor
jge
xor
or
popa
push
lds
mov
jbe
int3
fwait
push
lds
stos
xor
sub
loope
xor
adc
lds
pop
mov
cmpsb
insb
sub
inc
mov
in
fwait
addl
mov
shr
push
xor
fcompl
mov
cltd
call
les
mov
lock
fdivrs
out
xor
jbe
push
add
add
inc
sbb
lret
xchg
loop
pop
outsb
pushf
out
fwait
stc
push
aad
cmpsl
je
enter
in
push
sub
les
mov
pop
nop
jo
std
lret
ret
popl
in
imul
repnz
orb
ljmp
ror
xchg
pop
mov
es
inc
jge
adc
shr
add
xor
sub
cwtl
jmp
add
hlt
shr
or
dec
jnp
mov
cmpsb
pop
out
and
adc
lcall
jle
sbb
mov
shl
inc
rcrb
pop
fimuls
pop
dec
stc
inc
lret
fidivrs
lock
ror
jge
loope
shlb
and
xorb
fmul
lods
pop
insl
andb
xchg
test
mov
push
popa
mov
sub
xor
pushf
xor
in
imul
add
dec
xlat
push
into
enter
sbb
or
int
ffree
xchg
mov
xor
mov
adcl
leave
cltd
test
and
add
cmc
pushf
adc
and
push
rcll
adc
fnstcw
test
daa
push
sbb
pop
clc
leave
xchg
jnp
mov
push
or
push
lods
out
cwtl
das
push
cmpsl
lods
mov
add
jns
inc
jmp
xchg
in
std
cmc
shrb
push
sbb
incb
xchg
jb
test
pop
popf
sbb
pop
imull
cmc
shrb
out
test
lods
iret
jb
cwtl
inc
hlt
out
into
aam
jns
movsl
jmp
mov
lret
xor
xchg
leave
sbb
sahf
lds
lret
add
stos
jo
je
dec
jmp
sti
lahf
pop
push
nop
mov
xchg
pop
test
xchg
ret
fstps
jmp
push
sub
cwtl
je
fsubl
or
pop
in
rcrl
sub
out
jb
sbb
or
mov
mov
cmp
and
outsb
mov
push
scas
cmpsl
arpl
sub
insb
aaa
pop
ljmp
addr16
adc
xchg
test
ficompl
jno
std
mov
lods
mov
and
xchg
stos
cli
push
mov
push
jge
mov
sub
mov
jp
cmp
aad
sub
bound
lods
call
fcomps
add
push
ret
dec
push
cmp
sub
jo
add
bound
inc
das
xor
push
pop
lds
cmp
fimuls
pop
fidivrl
fsubrl
cwtl
test
mov
std
fcompl
adc
and
call
shrb
int
imul
or
je
popf
ret
mov
sbb
shrl
jns
addl
stos
and
add
ret
stos
dec
push
mov
xor
or
fdiv
xchg
cmpsl
cmp
lret
dec
mov
rcrl
mov
lods
mov
mov
ljmp
mov
imul
push
dec
enter
aaa
sbb
jg
aas
fistl
sub
sbb
jge
stos
addr16
mov
or
pop
test
cld
jo
int
out
mov
mov
push
imul
add
popf
mov
add
xor
push
xchg
sarb
in
lret
je
sub
xor
xor
add
adc
in
hlt
rol
rcl
movsb
mov
xchg
jo
pusha
je
inc
inc
push
xor
xor
add
adc
in
hlt
rol
rcl
movsb
mov
xchg
jo
loopne
sarb
push
mov
and
cmp
hlt
rol
rcl
movsb
mov
xchg
jo
pusha
je
inc
inc
push
xor
xor
test
adc
sbb
pop
jp
shlb
jnp
imul
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
fsubrl
mov
mov
pop
test
mov
sub
repz
and
push
lods
inc
push
jno
popa
cwtl
cltd
push
mov
cmp
or
ss
call
and
push
xchg
cwtl
dec
into
add
rcrl
jo
add
sub
call
inc
stos
jno
sbb
cld
shrb
cmp
sbb
cmp
cmc
mov
fldenv
arpl
pop
mov
mov
ja
rcrl
cmp
cmpsl
cmpl
cld
add
aaa
lret
mov
in
aad
add
test
les
inc
push
jmp
fbld
scas
pop
int3
inc
sbbb
push
hlt
pop
sarb
or
enter
insl
push
sbb
aaa
fcompp
fdivrl
sahf
in
mov
popa
cmpsl
sbb
mov
test
scas
into
sub
sub
fistl
dec
cmp
cmp
je
sbb
jmp
push
and
xor
jno
mov
cmp
pop
shrl
test
icebp
or
jecxz
xchg
push
jmp
xchg
pop
push
jno
add
pop
cmc
and
xor
lea
jo
inc
mov
inc
mov
add
or
idivb
push
mov
popa
xchg
sub
mov
push
lcall
add
and
jecxz
mov
shll
xchg
sarl
or
sbb
call
and
push
test
mov
xchg
push
mov
cmp
or
sbb
call
and
push
test
mov
xchg
push
mov
dec
mov
je
shl
ret
mov
pop
or
mov
mov
ss
mov
mov
insl
push
out
dec
sub
jg
add
adc
sub
pop
mov
mov
push
dec
and
sub
inc
lea
inc
mov
fisubrs
stc
inc
push
push
dec
cmp
xchg
out
jmp
pop
xchg
gs
xchg
mov
dec
cmpsb
pusha
mov
mov
shll
fidivs
popa
shll
adc
mov
dec
xor
mov
mov
stos
lret
mov
loopne
pop
adc
jge
scas
push
mov
xchg
jb
sbb
aam
dec
fistps
mov
jecxz
aaa
xor
xchg
or
lock
xor
mov
or
push
xlat
mov
scas
dec
fcoml
jo
dec
inc
movsb
je
jbe
scas
mov
shl
push
test
pop
push
leave
movsl
inc
cld
jne
es
push
icebp
ds
jg
jmp
out
jmp
mov
dec
sysenter
add
sarl
pop
jae
out
sbb
xchg
push
jno
lock
pusha
add
movsb
sbb
sbb
dec
sbb
pushf
add
repnz
jge
cmp
test
pushf
xchg
jnp
lock
mov
les
sti
mov
loop
shll
xor
xchg
fucomp
lds
or
imul
add
and
adc
jle
push
test
jo
in
ds
lahf
fiaddl
popf
cli
push
or
cmpsl
lods
inc
jmp
jns
fsubl
test
arpl
repnz
daa
aad
sbb
es
jmp
cli
lret
mov
push
hlt
jnp
add
data16
sub
add
clc
or
iret
aas
in
popf
loopne
bound
xor
jge
jl
inc
jg
cmp
jnp
xorl
mov
je
inc
push
xor
push
fildll
in
mov
pop
push
push
pushf
inc
das
ds
movsl
push
mov
sti
push
mov
and
sub
dec
dec
pushf
call
sti
pop
or
adc
ds
lods
imulb
push
adc
addr16
and
shlb
shl
sarb
push
adc
jo
add
sahf
xor
sub
shl
cmp
dec
mov
pop
insl
mov
leave
arpl
jl
mov
inc
out
insb
lret
mov
xchg
mov
mov
sbb
xor
push
gs
inc
push
cmp
imul
rcll
test
jmp
mov
inc
xor
shll
adc
enter
jp
call
adc
adc
icebp
scas
mov
out
inc
lret
cmp
int
mov
fmull
sub
les
mov
adc
xor
cmp
sbb
or
sbb
sarl
cmpsb
lahf
push
inc
and
push
pusha
in
mov
inc
jge
xor
mov
movsb
clc
mov
pusha
jg
adc
loop
cmp
jl
pop
fs
into
fs
sub
dec
scas
lret
lcallw
je
aad
std
fistps
outsl
jb
push
imul
adcl
jp
dec
xchg
xchg
js
ret
xor
sbb
jmp
dec
es
aas
and
xlat
fdiv
xchg
pusha
push
dec
jns
sbb
add
repnz
push
push
add
cmp
dec
aas
in
xor
push
dec
xor
insb
movsl
mov
in
gs
mov
ret
into
push
shl
sub
mov
sbb
in
adcl
out
jnp
ficompl
enter
adc
dec
jl
xchg
addr16
fdivrp
lock
xchg
pop
add
pop
stc
icebp
adc
lret
dec
xchg
pop
bound
pop
out
xor
mov
in
adc
ja
out
stos
orb
inc
std
rcr
dec
cmp
icebp
popf
mov
call
fstpt
ds
or
imul
mov
cmp
test
fcmovnbe
bnd
fsub
sub
xchg
mov
dec
aaa
xchg
scas
mov
xchg
push
cmp
push
mov
mov
daa
notl
nop
out
jb
rorb
int
jg
shll
sub
jmp
add
jg
cwtl
loope
aas
xchg
fstpt
xchg
and
pop
and
jecxz
jb
lahf
dec
xchg
jbe
pushf
ja
jbe
das
push
hlt
mov
aas
and
adc
fs
and
mov
pop
cli
sub
sub
lods
or
shlb
test
inc
add
xchg
in
cmp
mov
popl
and
sarb
add
sub
into
push
inc
test
xor
lds
cli
in
ret
les
xchg
loopne
movb
push
sti
es
xchg
xor
jo
xlat
in
sbb
sub
fistps
cmc
mov
dec
inc
es
pop
mov
push
adc
call
mov
mov
inc
cmp
insl
push
int3
ret
imul
cmpsb
sub
fsubr
xor
push
jbe
aaa
inc
arpl
outsb
or
shll
das
mov
lret
in
or
loope
pusha
xchg
mov
pop
lods
jl
mov
clc
insl
mov
daa
jbe
add
fnsave
test
mov
fs
or
pop
jns
aas
mov
popa
int
movsb
mov
sub
xor
jl
mov
ja
filds
mov
andl
cli
xchg
cmpb
lock
inc
push
test
clc
es
pop
xor
shlb
cli
ret
and
std
adc
leave
cmpsb
dec
dec
notl
popf
push
lahf
lock
xor
lahf
insl
adc
xor
push
sbb
push
hlt
mov
aad
ds
push
les
inc
into
ss
push
out
in
aaa
jg
ljmp
mov
inc
xor
sub
xor
jg
popf
icebp
adc
inc
push
aas
and
push
ljmp
fnstcw
or
popl
movsl
push
fs
pop
out
imul
andl
sahf
loop
adc
ja
lock
xchg
rclb
mov
or
cmp
push
pop
sbb
repz
sub
adcl
in
jb
push
sbb
into
ret
std
je
xchg
jge
adc
push
nop
test
fucom
setnp
mov
sub
sarl
jns
jb
cmp
leave
pop
push
cmp
int3
int3
cmpsl
dec
pop
mov
inc
inc
nop
cmp
mov
test
lock
inc
sbbl
data16
sbb
sub
flds
mov
adc
in
push
cmpl
xchg
xor
xchg
jo
sub
mov
mov
pop
fwait
stos
fsub
jo
adc
rol
xor
into
pop
pop
inc
jae
ss
and
mov
jecxz
in
fsts
xor
jg
push
adc
movsb
ret
push
pop
xchg
sub
pop
sub
add
gs
stos
adc
rorb
addr16
stc
lods
cmpsl
dec
stc
pop
sub
out
jns
add
fdivrs
sahf
or
sub
add
sub
dec
cltd
sbb
sahf
pop
dec
or
testl
cwtl
pusha
pop
inc
ret
scas
das
inc
outsb
les
pop
inc
cmpsb
push
or
popl
xor
dec
xor
lret
inc
sub
ret
jmp
dec
lock
aam
push
sub
adc
xchg
ffree
subb
add
pop
pop
rorl
dec
in
notb
loopne
rolb
mov
in
loope
nop
push
ficoml
test
gs
adc
xchg
fcomip
in
insl
fstps
dec
out
rcl
orb
mov
aas
pop
cmpsb
or
jae
sub
int3
insb
rclb
mov
movsb
hlt
aaa
mov
call
jmp
inc
dec
xor
or
push
imul
push
add
rcrb
stos
inc
cmpsl
mov
jo
adc
stos
push
dec
push
test
push
gs
sub
test
mov
pushf
int3
ret
mov
mov
cmp
mov
loope
adc
xlat
scas
aaa
rol
add
and
cmpl
pop
jnp
lahf
cs
stos
incb
sub
push
mov
sub
divb
mov
scas
or
pop
fcmovnu
jo
cmp
subl
daa
sub
mov
jno
mov
pop
addr16
pop
add
rcll
sub
and
repz
fdivl
adc
sub
es
outsb
test
add
popf
lods
out
notl
mov
mov
xchg
cs
jno
int3
cs
and
dec
or
pop
and
insl
xchg
in
adc
movsb
sub
dec
insl
orb
ljmp
mov
out
mov
jne
mov
hlt
negb
adc
inc
and
ds
mov
ljmp
inc
int3
inc
xorl
out
js
inc
dec
mov
dec
cmp
popa
cli
jo
rclb
inc
xchg
outsl
enter
xor
xchg
sahf
std
fwait
shrb
mov
cwtl
inc
and
nop
pop
inc
cld
mov
or
pop
push
push
jl
mov
in
in
mov
mov
sub
lret
adc
das
pop
dec
in
cld
lock
push
inc
lret
test
fists
movsl
adc
negl
testl
jnp
push
mov
mov
xchg
mov
mov
sbb
mov
sub
fcompl
mov
add
mov
ss
sub
jmp
dec
cmp
lret
ret
mov
je
jecxz
xchg
push
loop
clc
popf
stc
push
adc
pushf
ret
pop
xchg
dec
fdiv
lods
sbb
mov
pop
cmp
push
jecxz
call
lods
mov
hlt
sub
jge
repz
mov
sbb
mov
sub
push
sub
jmp
fcompl
loop
pop
jl
outsb
push
pop
out
mov
out
cmpsb
and
movsl
cmpsl
rorb
mov
or
not
out
xchg
lods
out
or
mov
mov
mov
mov
push
fisttps
jle
sbb
rorl
cltd
mov
xchg
ss
mov
sub
adc
daa
mov
lods
call
fcomps
pushf
mov
xor
cmp
jg
fdivrl
mov
mov
scas
or
inc
hlt
xchg
push
fnstenv
hlt
cmpsb
xchg
sbb
mov
mov
imul
mov
inc
test
cwtl
xchg
inc
pop
sbb
ljmp
xor
outsb
cmp
loopne
daa
imul
push
insl
adc
mov
and
jno
inc
insl
cmp
jmp
mov
pushf
jae
sub
dec
xor
and
cmpsb
hlt
add
cltd
and
jno
and
mov
adc
jb
das
pop
mov
hlt
out
call
jecxz
sbb
xchg
add
mov
fnstsw
fstp
nop
sub
aaa
rol
loope
cmpsb
push
xchg
into
clc
xchg
pop
pushf
int3
jecxz
sub
add
mov
adc
std
mov
divb
stos
into
repz
outsl
jb
lea
cld
cmpsb
loopne
fnstenv
jbe
cwtl
push
cmp
cmp
or
add
fildll
loopne
inc
ja
sub
scas
jecxz
push
stc
mov
push
sahf
fiaddl
and
dec
outsl
mov
fildl
cmp
mov
loopne
mov
icebp
fsubs
inc
cmc
iret
sub
jmp
add
xor
push
out
or
or
cmpsl
fcomps
dec
push
sub
xchg
or
mov
int
adc
pop
dec
fwait
rorl
and
out
sub
and
test
dec
dec
jne
inc
ret
cmpsb
ret
and
test
inc
sub
loopne
and
dec
test
stc
adc
pop
rcl
fsubs
frstor
mov
jge
stos
lods
stos
xor
clc
dec
sarb
sbb
pushf
or
pop
in
dec
push
push
aad
scas
and
sub
jno
jo
xchg
jae
mov
cmp
inc
mov
push
adcb
out
sbb
jmp
jecxz
fisubrs
cs
test
mov
mov
xchg
cmpsl
sub
repz
je
mov
maxps
adc
ljmp
mov
cmp
mov
add
test
jecxz
mov
pushf
popa
pop
push
andl
mov
imul
repnz
and
mov
movsb
jle
test
or
test
mov
inc
mov
arpl
fildll
push
sbb
push
movsb
or
mov
adc
sbb
aas
push
mov
add
das
push
mov
xchg
rcrl
stos
pop
pop
push
jo
adc
adc
je
mov
xor
pushf
push
and
movsb
jns
lret
cmp
bound
dec
hlt
adc
pusha
inc
sbb
movsb
adc
out
adc
in
lods
rorb
xor
xor
xchg
orb
or
pop
imul
jp
mov
daa
int3
outsl
push
inc
jo
dec
mov
xchg
mov
pop
pop
mov
inc
cs
test
xchg
dec
bound
and
in
mov
insl
xor
mov
sub
push
jecxz
imul
xchg
xchg
cmp
xchg
ret
mov
int3
sahf
lret
movl
stc
ret
std
ficompl
fisubrl
aad
and
mov
jl
test
inc
out
in
xchg
push
mov
call
mov
in
iret
dec
shll
and
xlat
jmp
or
cmp
inc
or
jl
ja
jg
cmpsb
outsl
sbb
ss
popa
mov
sub
sbb
movsl
add
xor
lahf
repz
cmpsb
out
mov
ror
push
mov
repnz
loope
clc
std
icebp
fmulp
fldz
insb
pusha
inc
sbb
test
jae
xlat
fnstsw
subb
adc
call
pop
ljmp
or
rolb
and
jne
popa
jnp
fisttps
call
and
stos
shlb
cmp
repnz
jmp
xchg
popf
ret
mov
mov
sbb
icebp
cs
push
orb
push
sbb
xchg
stos
push
cmp
add
or
add
jne
divb
out
mov
fwait
cmpb
mov
mov
adc
lock
enter
outsb
cltd
mov
mov
push
jbe
cmp
or
stos
aad
fwait
dec
adc
ret
inc
sbb
out
cmp
xchg
dec
cmpsb
jb
inc
bound
mov
out
jp
xchg
lods
into
push
jg
xlat
or
push
push
das
inc
nop
sbb
cmp
clc
pop
aas
pop
dec
jmp
push
out
cmp
repz
clc
and
mov
push
mov
jl
stos
in
movsb
mov
repz
jg
popf
xchg
sbb
sub
loope
or
cmc
icebp
jae
test
das
cli
jl
dec
out
pop
sub
xchg
sarb
cmp
pop
inc
sub
push
insl
pop
test
mov
je
sub
push
push
iret
out
fstps
in
ret
pop
iret
inc
xor
dec
jae
adc
daa
cmp
jecxz
or
mov
inc
fstpt
into
les
push
mov
rep
lret
jnp
xor
xchg
cmpsl
movsb
mov
std
test
outsb
shrl
mov
mov
ja
clc
sti
std
mov
cmp
lcall
icebp
stos
out
sbb
movb
sub
mov
mov
arpl
xor
jne
scas
push
xlat
imul
lahf
jb
dec
loop
sahf
insl
or
out
imul
mov
std
out
push
aad
ss
adc
fnstcw
daa
jno
out
cld
sub
mov
mov
mov
pop
jle
iret
sahf
fs
test
xor
xchg
or
mov
hlt
hlt
mov
sbbl
addl
xlat
into
and
stos
mov
inc
leave
icebp
xor
or
adc
jl
aaa
mov
stos
adc
pop
aad
jno
mull
adc
dec
xchg
xchg
inc
or
pop
clc
je
fstpt
sbb
loope,pn
jno
jns
mov
cmpsb
xchg
push
pop
rcll
pop
das
sub
and
inc
cmpsl
sbb
add
pusha
repnz
and
add
cltd
pop
pop
mov
sbbl
adc
out
sbb
mov
mov
imul
cwtl
mov
sub
cmp
jg
push
iret
ss
sub
decl
imul
cs
mov
xor
add
loope
mov
lret
mov
mov
popa
jp
jo
jae
and
adc
mov
shlb
mov
mov
push
lods
sub
sahf
cmp
cmp
fs
push
push
add
mov
pop
xchg
jle
dec
push
loopne
lea
jne
push
or
jne
fs
jne
movsb
pop
stos
ljmp
inc
dec
add
es
jge
pop
test
lret
or
outsw
push
jl,pt
jl
icebp
jp
or
and
adc
shlb
sub
mov
push
jg
pop
negb
pxor
in
xchg
and
mov
xchg
mov
outsl
dec
ds
cmp
xchg
sub
jo
outsb
dec
orl
push
js
lret
xor
dec
test
hlt
pop
inc
arpl
and
jge
std
lods
sbb
and
fs
mov
lahf
out
out
inc
je
repnz
inc
xchg
fdivrl
dec
ficompl
or
mov
pop
jg
ljmp
add
mov
ficomps
cmp
lds
mov
jmp
adc
lods
fsubs
mov
cmp
pop
add
dec
test
das
out
incl
addr16
dec
sub
int
push
pusha
and
or
sbb
xchg
pop
cwtl
lods
xor
add
mov
xorl
mov
test
into
sub
and
sarb
xor
xchg
clc
or
add
mov
sbb
adc
popf
scas
or
push
lods
shl
or
pop
xor
jecxz
push
rcrb
push
xor
aad
shlb
dec
lret
jne
push
xor
push
and
mov
out
jno
xchg
test
push
xchg
jo
mov
jge
xchg
das
cwtl
push
cmc
inc
cmp
ret
sbb
das
inc
in
fstp
cmpl
ret
movsb
xchg
xor
ja
xchg
or
inc
or
dec
decb
into
xchg
push
les
push
lret
lds
jge
add
out
rdpmc
xchg
add
loope
leave
jl
out
inc
mov
imul
test
rorl
sbb
nop
orl
pop
lcall
or
in
fstl
mov
sub
mov
mov
dec
pop
xchg
push
movsl
mov
lcall
imull
and
mov
inc
pop
into
or
dec
aam
add
adc
jb
push
or
into
xchg
cmp
out
movsl
test
fwait
in
adc
adc
and
out
or
je
dec
xchg
jnp
test
int3
fisttpl
push
pop
push
pop
lods
sbb
rclb
xchg
cli
dec
mov
cmpl
dec
sti
mov
and
daa
arpl
cmp
dec
mov
addl
sub
mov
xchg
cwtl
xchg
mov
xchg
dec
ss
sub
cmp
ds
or
call
and
aas
in
pop
fs
out
sbb
pop
mov
sbb
adc
mov
pop
je
addr16
sbb
jmp
xchg
movsl
mov
push
xchg
xlat
sahf
insb
sbb
sarl
lret
fdivs
jl
jns
adc
out
ret
mov
insb
in
ret
and
fcomps
pop
xor
in
sbb
ret
jmp
test
outsb
fnstenv
cmp
or
mov
add
out
push
or
inc
lea
std
adc
jmp
push
or
mov
ret
pop
cmc
pop
cmp
mov
in
add
sub
or
in
scas
pushf
pushf
push
push
cmp
or
lods
cmc
fld
adc
xchg
daa
xchg
adc
fildll
loopne
mov
fcmovbe
sub
imul
xor
decl
push
sub
mov
ret
adc
jecxz
adc
aaa
shlb
lods
push
test
je
mov
push
cmp
fmul
in
cwtl
mov
push
scas
mov
pop
xor
pop
iret
mov
cmp
xor
outsb
mov
lea
in
rcl
lahf
test
sub
push
pop
negl
cli
pop
shll
orl
ret
inc
dec
inc
xor
xchg
adc
xchg
pop
popf
inc
and
push
sbb
mul
fs
sbb
cmpsl
scas
dec
ljmp
test
push
add
xor
mov
lock
stc
lods
insb
cwtl
sub
push
pushf
scas
cld
enter
xchg
pop
test
fwait
cmc
fistpl
sub
mov
bound
sbb
or
mov
jno
das
mov
dec
les
ret
xchg
mov
sub
imul
out
xor
push
iret
in
jg
inc
mov
fimuls
cmc
inc
fistl
dec
xchg
lret
sbb
pop
sbb
test
addr16
bsr
mov
stc
mov
in
mov
xlat
movsl
addb
repz
std
int
xchg
cmp
js
icebp
cmp
rorb
aaa
jno
and
fsubrp
int3
xchg
pushf
popa
mov
insl
jbe
aad
aaa
jno
pop
add
cltd
out
call
rcrl
mov
pushf
xor
fistpl
mov
aad
push
movsl
jb
adc
gs
negb
adcl
or
and
sub
cmpsl
fsubr
dec
rol
in
gs
dec
das
dec
sbb
mov
int3
pushf
push
dec
jbe
jnp
cmp
cmpsb
adc
mov
outsl
add
xchg
xlat
dec
jp
lods
pushf
dec
stc
mov
and
add
jne
mov
push
movsb
mov
xor
dec
mov
sbb
pushf
pop
xchg
test
cwtl
and
cs
cld
test
daa
cltd
and
shr
adc
dec
dec
jo
or
sub
aas
add
and
js
dec
mov
cmp
or
sbb
call
and
push
test
mov
xchg
push
mov
cmp
or
sbb
call
and
push
test
mov
xchg
insb
xorb
mov
push
icebp
or
sbb
enter
lods
pop
mov
mov
sbb
sub
cmp
mov
adc
push
fwait
enter
ror
rorb
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rolb
add
cld
add
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
add
add
add
jl
add
je
add
insb
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
add
add
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
add
add
add
add
add
adc
add
sbb
add
and
add
aaa
add
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
add
add
push
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
faddl
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
pop
add
fs
add
pop
pop
add
push
pop
add
dec
pop
add
inc
pop
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
pop
add
mov
pop
add
rolb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
or
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fmull
add
in
add
in
or
add
or
add
or
add
add
pop
or
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
or
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
