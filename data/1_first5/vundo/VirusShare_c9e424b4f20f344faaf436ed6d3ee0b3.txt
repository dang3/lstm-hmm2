jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
jne
sub
mov
push
jae
mov
push
pop
or
add
pop
add
add
add
adc
lea
sbb
pusha
add
add
add
add
add
add
add
add
add
add
add
or
add
fwait
add
lea
dec
add
add
aad
insb
add
add
pop
add
add
ret
add
insb
add
add
add
add
add
insb
add
add
add
add
add
add
lea
pop
add
jl
insb
add
add
add
lea
xor
mov
add
add
add
add
add
insb
add
add
pop
add
add
add
add
add
add
add
add
lea
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
insl
add
add
lea
mov
aaa
add
lea
cmp
cmp
add
sbb
add
filds
aad
insb
add
add
clc
add
add
add
add
pusha
add
add
add
add
add
add
add
verw
add
add
add
xor
fwait
add
ja
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
dec
add
add
add
add
pop
add
add
add
add
add
add
add
lea
clc
add
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lea
cmp
sub
jne
add
add
add
add
add
add
sbb
jl
filds
sbb
lea
and
add
add
lea
verw
add
xor
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
lea
xchg
add
add
mov
cmpsb
add
add
add
and
lea
fwait
add
je
push
add
add
add
lea
inc
add
add
add
add
lea
leave
add
add
inc
add
add
add
add
lea
pop
add
add
lea
in
sub
add
add
add
pop
add
add
add
add
dec
add
add
add
add
add
add
add
jno
jb
mov
sldt
mov
add
add
add
insb
add
outsb
add
dec
add
cwtl
add
add
add
add
add
add
add
decl
aas
or
push
sbbl
push
cld
cwtl
dec
loopne
outsb
dec
js
sbb
gs
subb
jmp
pop
out
push
or
push
ja
add
mov
out
adc
lret
lock
sub
in
movsl
pop
fcomp
pop
jb
add
test
aaa
jl
inc
aam
xchg
fs
xchg
push
sbb
mov
leave
pop
mov
clc
push
outsl
jmp
cltd
int
mov
loopne
pop
sbb
and
pop
mov
adc
add
xchg
lret
sbb
clc
dec
lea
inc
mov
jbe
shlb
inc
mov
lods
mov
dec
dec
rcr
sbb
xlat
mov
inc
loope
adc
out
jbe
outsl
push
in
mov
or
out
pop
mov
cmp
xor
cmpsl
lds
clc
mov
xchg
les
jo
push
loop
xchg
ret
and
lahf
adc
cmc
fsts
int
fcomps
cmp
test
mov
adc
clc
push
and
ret
inc
pop
push
jae
push
ret
add
ret
lret
or
jbe
je
xor
xchg
shll
aam
punpckldq
scas
es
jbe
pop
jae
cs
and
sbb
mov
imul
xor
ret
or
sbb
jae
or
and
sahf
dec
mov
icebp
mov
sbb
loopne
sbb
call
mov
movsl
push
sahf
mov
push
xor
or
dec
lahf
mov
sahf
xchg
stos
lods
xchg
les
fucomip
lret
enter
pop
shl
out
leave
inc
data16
das
pushl
movsb
shlb
mov
sub
add
dec
ja
mov
or
push
loopne
xchg
or
fsubl
test
jmp
and
push
pop
xchg
jge
dec
call
bound
imul
addb
mov
jg
cmovae
cmp
popf
jmp
stos
cmp
mov
add
fdiv
cmpsl
fistpll
in
outsl
cmp
scas
imul
xor
mov
pusha
sub
mov
add
out
loope
out
cmp
jecxz
jne
addr16
mov
pop
xchg
or
xchg
jns
sbb
arpl
cmp
jge
mov
cmp
insl
inc
scas
fcoms
or
dec
into
jne
sbb
mov
jg
or
xchg
mov
inc
sbb
sahf
aad
fst
lahf
insb
sbb
sbb
cmc
rcl
xchg
dec
pop
fldcw
aam
jecxz
aad
hlt
mov
pop
lret
sbb
jecxz
fsubp
vpmulhw
jle
fsub
repz
out
add
add
add
add
rolb
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
insb
jle
xchg
dec
mov
pop
mov
out
add
sbb
lods
inc
mov
jno
cmpl
sarl
loope
icebp
in
add
adc
add
xor
pushf
jno
cwtl
jl
dec
mov
cmp
or
sbb
in
loop
sub
iret
aas
iret
aaa
cmc
jno
sbbl
or
jg
xor
xlat
lcall
aaa
insl
fs
fldt
sbb
shlb
dec
cmp
lock
push
xorl
sti
les
xchg
jle
push
es
adc
rol
xchg
inc
sbb
fcompl
aaa
push
setg
mov
ret
adc
sbb
sbb
jno
sub
adc
aas
mov
mov
sub
in
mov
adc
push
xor
sub
jae
pushf
mov
test
mov
mov
test
or
stos
add
and
out
and
sahf
sahf
popa
scas
cmpl
sarl
clc
sbb
in
sbb
or
cmp
sub
pushf
adc
or
push
mov
pushf
push
cltd
pop
sub
sbb
stc
or
dec
mov
jecxz
test
sahf
js
jo
push
fdivl
xor
ds
notb
sarb
cmp
imul
cld
adc
and
xor
pushf
jno
cmpl
sarl
loope
icebp
in
add
adc
and
xor
pushf
jno
sbbl
out
add
xor
shlb
jp
dec
sub
and
je
es
repnz
inc
enter
stos
mov
popa
adc
add
jnp
adc
pusha
mov
adcb
xchg
add
dec
mov
xchg
shlb
scas
imul
and
cmp
pop
push
out
mov
push
push
push
jnp
mov
mov
lret
shl
in
push
cltd
push
sbb
xchg
sbb
loopne
push
dec
bound
mov
lods
add
mov
int3
neg
pop
inc
xchg
out
out
push
cmp
push
cs
cmc
repnz
push
aaa
sbb
in
ret
dec
enter
xor
cli
mov
repz
mov
adc
inc
xor
loop
pop
xchg
push
cmp
gs
lds
idivl
fs
add
clc
fs
sbb
shlb
rorl
inc
fs
cmp
insb
loopne
push
mov
mov
cli
mov
data16
std
pop
clc
jnp
cmpsb
and
cwtl
in
ret
cs
rorl
test
jle
lret
adc
movsl
sub
test
mov
xchg
leave
test
hlt
xlat
xchg
test
movsb
dec
pop
cmp
andl
nop
fcomp
jno
xor
cli
xchg
popl
cmc
paddd
in
sub
bndldx
fidivrs
or
mov
daa
icebp
sbb
dec
aam
iret
mov
xchg
mov
inc
mov
sbb
pop
loope
popf
cmc
mov
addr16
push
inc
orb
stos
mov
and
stc
mov
fwait
stc
pop
jb
dec
xor
nop
out
cmp
fsubl
aam
cs
dec
hlt
cltd
ss
cmp
dec
iret
adc
adc
dec
mov
insl
outsb
pop
mov
cmp
std
sub
cmp
xchg
inc
pushl
in
imul
fdivs
sbb
adc
dec
jecxz
dec
testb
es
ljmp
pop
int3
mov
and
and
imul
stos
pop
mov
mov
adc
js
ret
xlat
dec
sbb
pusha
test
dec
popa
cld
xor
or
xlat
adc
repnz
dec
int
ret
aas
popf
inc
aaa
add
fadd
push
push
dec
testl
sub
push
inc
outsb
addb
xor
popfw
je
adc
add
fnstsw
mov
movb
in
test
jbe
pop
shll
jnp
int
inc
cmp
dec
adc
mov
pushf
aas
add
je
sub
stc
popf
les
movsl
mov
jg
rcll
mov
insb
mov
dec
aaa
xchg
unpckhps
sahf
add
dec
jmp
hlt
mov
pop
pop
jae
nop
xchg
outsl
xor
cmpl
mov
push
or
sbbb
stc
mov
fcoms
and
sub
int3
xorl
lret
mov
in
mov
lea
shrb
xlat
int3
fidivl
mov
and
mov
pop
add
dec
enter
scas
cmc
sub
cmp
dec
xor
fwait
ret
jg
int
sub
insb
test
add
cmp
sbb
adc
js
push
inc
rcr
scas
push
test
cmp
ja
mov
cmp
pop
sarl
jns
mov
inc
sub
add
sbb
ja
lods
loope
xchg
aam
inc
ret
mov
mov
lahf
andb
mov
mov
aad
fstl
hlt
icebp
data16
cmpsl
sbb
cmp
lea
popa
sarb
loop
aad
mov
in
dec
xchg
js
lods
inc
xor
arpl
xchg
pop
xor
push
pop
imul
cmc
repz
fisubs
adc
pop
cmp
pop
outsb
push
rcrl
mov
pop
and
call
out
out
test
cmp
fsubs
lds
xchg
or
or
jl
addb
or
jg
adc
ret
mov
pusha
ljmp
stos
inc
lds
aad
cli
fadds
pop
js
in
jne
pop
lret
leave
lret
fnstenv
xchg
jg
sbb
xor
push
sub
addb
push
loopne
jl
push
pop
pop
push
rorl
xchg
push
aas
test
inc
in
ljmp
rorb
cmp
mov
fs
cld
xor
pop
lahf
mov
inc
inc
dec
jle
cwtl
jl
outsl
push
adc
cmc
mov
jmp
push
sti
sti
sub
lcall
insb
test
cmp
inc
pusha
xchg
and
push
iret
idivl
jmp
outsb
dec
shrb
fs
mov
push
call
and
andb
jge
stc
xchg
fldl
sbb
bnd
push
dec
adc
sbb
jb
in
mov
inc
lods
mov
cmovbe
push
pop
and
and
cld
push
adc
xor
xor
mov
jmp
cmc
sub
xchg
data16
daa
adc
addr16
lea
xor
iret
imul
xchg
loopne
sub
lock
mov
sahf
pop
idiv
jge
cmpsl
loop
lcall
dec
and
mov
mov
push
inc
xchg
pushf
adc
mov
add
aad
push
or
cld
mov
mov
jne
xchg
mov
pop
out
js
adc
int3
fisttps
mov
cwtl
lock
sub
std
lods
icebp
js
xchg
out
dec
mov
and
movsl
in
subl
adc
pop
and
jmp
aad
rcr
aaa
push
add
das
test
es
push
pop
jmp
mov
mov
iret
mov
jb
mov
test
adc
in
jb
mov
sbb
test
pop
sbb
jp
adc
cmpsl
testb
jecxz
dec
mov
pop
or
or
cmpsl
jnp
repnz
pop
pusha
sti
xlat
fidivl
push
inc
imul
ja
and
pop
dec
test
or
test
ss
adc
mov
outsl
xchg
das
mov
mov
dec
adc
aam
pop
sbb
es
mov
jne
add
pop
mov
cld
popa
loopne
out
dec
xchg
or
push
daa
mov
pop
ret
add
outsl
fsubrp
jo
xchg
out
adc
gs
dec
stc
adc
out
and
pop
mov
add
and
push
popf
cld
mov
sub
jns
mov
dec
xchg
ret
mov
jmp
int3
mov
push
jecxz
sub
sub
add
xlat
pop
pop
shll
push
rolb
mov
jne
int3
dec
jecxz
fildl
in
push
cltd
fidivrs
dec
dec
dec
xchg
mov
mov
mov
cli
mov
mov
rol
cltd
int
xor
and
out
out
test
movsl
dec
jnp
sbb
jnp
xchg
jnp
inc
imull
pushl
pop
addr16
jmp
fcmovnu
xor
fstps
mov
mov
ds
lods
mov
test
mov
push
push
pop
sbb
sbb
es
xchg
mov
notb
pop
fcomps
mov
rorb
into
jb
sub
cmp
in
jg
mov
std
aam
push
adc
mov
aad
pop
dec
push
push
test
cmp
call
test
adc
in
repz
mov
pusha
test
xchg
or
dec
flds
push
pop
jecxz
fcmovnu
mov
sub
out
popa
mov
pushf
adc
mov
cli
outsl
mov
add
imul
mov
push
push
inc
subb
dec
imul
ret
loope
ss
cltd
xchg
jae
enter
es
jle
lahf
out
mov
outsl
pop
push
lret
mov
adc
xchg
push
dec
mov
leave
popf
adc
es
add
dec
jne
cwtl
add
stc
test
loop
push
push
and
ret
stos
fidivs
aad
and
fidivrl
loop
push
add
leave
xor
and
outsl
mov
pop
rorb
hlt
sbb
loope
and
lret
cmp
fs
sub
bound
mov
push
jmp
aaa
clc
dec
cmp
leave
into
sbb
fisubs
push
cmpsb
push
xor
dec
add
gs
aaa
add
fisubl
adc
pop
mov
cmp
jbe
add
jle
sub
inc
lret
shl
mov
je
test
into
cvtps2pd
xchg
inc
lret
aaa
insb
dec
pop
cs
xor
cmpsl
scas
repz
out
dec
pop
add
jge
xor
jp
lock
clc
stc
cli
iret
loope
loope
mov
out
test
or
adc
jge
addr16
cmp
lea
mov
push
lcall
jne
rclb
leave
iret
xor
push
or
mov
push
aaa
leave
arpl
add
inc
arpl
dec
stos
push
stos
jns
adc
lods
sub
xor
mov
sub
test
pop
sbb
arpl
shr
movsl
push
lock
fdivr
in
lea
icebp
or
cmp
testl
jmp
inc
test
jnp
cmp
push
imul
pop
and
in
mov
sbb
outsl
ja
and
dec
stos
call
loop
lock
mov
stos
and
mov
addr16
sub
pop
lods
xchg
push
cmp
outsl
bound
or
ss
xchg
inc
out
inc
or
add
inc
in
pop
dec
mov
pusha
fwait
inc
pop
sbb
jo
in
pop
lods
int3
lret
scas
sub
ficoms
or
xchg
pop
adc
mov
jmp
sbb
mov
push
ss
add
imul
test
and
cmp
ficoml
and
cmpsb
addl
fisttpll
out
lock
push
sahf
int3
es
dec
stos
popf
lods
in
mov
cmp
test
popf
dec
divb
push
pop
rclb
jno
in
xchg
fisttpll
jae
imul
jle
mov
xor
push
jae
int
stos
das
pop
sbb
or
adc
push
test
mov
and
lds
and
mov
sti
cli
mov
ret
mov
sbb
mov
scas
xchg
sbb
shrl
sarl
int3
fstps
das
lods
xchg
mov
lock
fs
sarl
jecxz
jge
fstpl
xchg
sarl
adc
cltd
data16
sbb
mov
sbb
ret
fimull
mov
push
lcall
scas
jne
push
cli
xor
push
js
pusha
test
jae
add
mov
ret
repz
repnz
push
sbb
jl
pop
lods
jae
and
push
xchg
xor
pop
aaa
test
sub
pop
mov
cmpsb
out
add
lahf
jns
and
jns
sub
subb
lods
je
data16
or
mov
ret
lret
cmp
test
add
arpl
mov
xchg
mov
pop
test
sbb
pop
fldcw
aas
out
arpl
pop
pop
sbb
loopne
in
subl
test
popf
mov
mov
mov
jbe
gs
popa
aam
nop
ret
sahf
xlat
call
repz
xor
push
push
sbb
sub
xor
cmp
mov
cmc
adc
lcall
mov
adc
xchg
movsl
mov
sbb
add
dec
hlt
test
pusha
dec
stc
sbbl
sbb
das
jmp
cs
pop
pop
imul
movsl
xchg
xchg
lds
call
push
mov
adc
loope
insl
lret
dec
pop
lret
xorb
mov
imul
mov
add
mov
lret
test
pop
aaa
mov
pop
nop
iret
push
ret
sub
push
or
es
rorl
xchg
in
or
sub
cmc
sub
fistpl
dec
mov
sbb
mov
aad
jo
xchg
and
test
adc
mov
loopne
jb
push
data16
sbb
leave
mov
fwait
or
popa
xchg
lea
mov
mov
or
in
subl
adc
adc
jnp
and
xchg
outsb
sysenter
fidivl
inc
pop
mov
sbb
jp
mov
pop
or
jge
xchg
jl
cmp
or
lock
dec
imul
fprem1
or
ret
add
or
push
pushf
cltd
sti
fmul
icebp
mov
nop
iret
lds
divb
mov
jae
cltd
xlat
outsb
scas
mov
mov
add
clc
and
imul
lret
iret
call
jnp
sbb
testl
cmpsl
mov
jne
repz
nop
sbb
repnz
rcll
lret
lret
mov
cmpsl
bound
mov
inc
repnz
mov
dec
mov
out
pop
mov
xchg
mov
mov
aam
sub
push
sbb
aaa
ret
push
test
adc
add
cmp
fs
outsl
sub
loop
sub
push
pop
jbe
jmp
dec
push
fldlg2
scas
mov
loope
negl
fs
adc
sub
sbb
lahf
daa
icebp
adc
mov
jb
push
inc
fbstp
adc
sub
movsl
xchg
sbb
add
mov
or
dec
pop
js
lds
icebp
pop
popf
or
roll
add
testl
div
push
mov
and
dec
adc
add
dec
sbb
pushf
std
sbb
add
inc
inc
cmpsl
movsl
cmp
lahf
in
mov
pusha
cli
dec
jp
jg
push
add
push
hlt
mov
and
rcrb
cltd
add
cld
pop
mov
xchg
inc
fcoml
pop
cmp
imul
mov
xchg
dec
lret
cli
mov
adc
xor
mov
outsl
jmp
xchg
xchg
and
test
xchg
outsl
arpl
ljmp
addl
push
bound
nop
cmp
mov
xchg
mov
mov
push
mov
sub
daa
mov
callw
mov
ss
cmp
sub
cli
inc
push
xor
pop
es
xchg
dec
fwait
inc
shlb
es
mov
cli
push
leave
jg
dec
fucomip
in
icebp
mov
sbb
push
cli
cmp
or
scas
iret
arpl
adc
sbb
stc
into
aas
decb
lods
test
aam
mov
outsl
stos
divl
push
and
dec
ljmp
popa
stos
fdivl
clc
jnp
push
and
arpl
sbb
sarl
push
and
xor
adc
or
sbb
dec
movsb
mov
cmp
pop
movsl
leave
jnp
jle
jno
add
mov
inc
js
loopne
sub
and
jp
cmp
loope
aam
mov
insb
ljmp
sbb
outsl
add
adc
mov
nop
ss
repnz
loope
sub
push
imul
mov
xchg
jle
ljmp
pop
hlt
jecxz
jb
lods
mov
xchg
les
in
inc
or
pop
jbe
frstor
out
out
cltd
lock
cmp
movsb
rolb
mov
sbb
jl
and
add
insb
fmul
dec
stc
push
and
mov
cmpl
xchg
jg
xchg
mov
lcall
out
in
pop
jb
mov
movsl
stc
enter
fldt
sub
jne
test
jne
in
mov
xchg
push
jmp
enter
or
jno
xchg
in
sahf
mov
push
push
sahf
and
push
sub
push
cmovno
dec
jno
addl
sub
jp
stc
mov
mov
inc
in
push
mov
sbb
std
xchg
outsb
fmull
adc
mov
out
aaa
idivb
add
cmp
mov
mov
cmp
pop
icebp
scas
pop
cmp
mov
ds
mov
xchg
inc
inc
in
and
lahf
wbinvd
xor
dec
or
inc
mov
pop
or
stc
sub
lods
add
sub
xor
faddl
or
dec
sub
inc
or
add
mov
inc
pop
popf
mov
jge
dec
cmp
popa
mov
ret
add
inc
insl
pop
fisttpll
mov
ds
jo
mov
loop
stos
shl
aad
sub
pop
xchg
mov
sub
icebp
xor
jnp
sbb
fmul
or
fcmovbe
insl
repz
push
jl
subl
jnp
jnp
or
xor
cmp
shrb
pushf
out
iret
xor
xor
sbb
stos
subb
imul
ljmp
lds
mov
js
outsl
js
mov
dec
cld
aas
shl
orb
pusha
nop
pop
lcall
mov
subl
popa
mov
pop
mov
pop
int3
imul
data16
mov
dec
ret
mov
adc
cmp
call
mov
repz
enter
outsb
je
stos
ret
inc
lret
mov
xchg
push
mov
in
rcrb
sbb
jb
mov
mov
mov
or
test
jle
push
fbstp
fnstcw
cmp
jle
mov
fdivs
or
mov
adc
xchg
sarl
jo
inc
cltd
hlt
sahf
and
repnz
push
movq
test
xlat
push
mov
sub
iret
clc
lods
bound
jo
cli
xchg
pop
lock
icebp
fstpt
fistpl
cmpsl
imul
fidivrs
pop
push
popa
je
dec
mov
arpl
lds
pop
cmp
cltd
jns
xor
popf
push
imul
in
xchg
mov
push
xor
scas
mov
ja
js
fsubs
scas
int3
xchg
xlat
rcrb
xchg
rcrb
daa
aas
mov
push
mov
mov
mov
add
loop
fists
in
fs
sbb
xor
mov
clc
dec
in
jg
cltd
jl
jne
jmp
int
mov
cmp
bound
gs
or
mov
in
adc
mov
or
mov
mov
and
movsb
jb
je
mov
ss
pusha
jp
test
mov
repnz
sarl
or
mov
push
jmp
push
inc
subl
jne
push
sub
and
pop
ret
fsubrs
adc
cs
xor
lock
sub
pop
sbb
fld
pushf
pop
pop
out
mov
sub
and
enter
dec
pop
repz
fisubrl
fistpll
jl
mov
fsubs
fwait
sub
ja
adc
ficoml
loope
jmp
push
popf
adc
lods
mov
or
mov
sub
sbb
xor
xchg
pop
xor
xchg
incl
jns
xor
out
push
jns
xchg
mov
fsubs
dec
fbstp
shr
subl
pop
loope
mov
xchg
cmpsl
fwait
mov
aas
ja
cli
enter
pop
aas
shrl
xor
or
test
fistl
xchg
shl
xor
lahf
push
inc
sub
dec
movsl
and
enter
ljmp
mul
cmp
cmp
mov
adc
push
and
inc
pop
sub
int3
mov
daa
adc
ja
aas
inc
push
cmp
inc
inc
xchg
mov
test
cltd
xchg
loop
pop
sbb
mov
push
imul
addb
jnp
dec
clc
cld
loop
fcmovu
enter
fidivrs
add
ljmp
lahf
adc
ret
pop
xchg
jo
and
sub
cmp
xchg
mov
andl
sbb
pop
push
cmp
inc
dec
mov
jl
in
sbb
sbb
cmp
call
ds
sbb
movsl
mov
mov
xlat
fildl
out
push
mov
or
insb
aaa
xor
lcall
stos
clc
push
or
add
inc
adc
clc
pop
jl
aam
in
sub
cmp
repz
adc
mov
div
mov
push
in
into
cmp
push
or
sbbb
das
lcall
ficomps
xchg
call
nop
fs
dec
test
pop
aas
and
orb
sbb
sub
ret
push
loopne
inc
sub
sarl
data16
jne
loopne
test
shlb
hlt
mov
test
ljmp
lods
cmp
stos
sbb
mov
lock
out
xchg
cmp
sub
mov
sarl
loope
icebp
in
add
adc
and
xor
pushf
jno
cmpl
sarl
loope
icebp
in
add
adc
and
xor
pushf
jno
cmpl
sarl
in
add
adc
and
xor
pushf
jno
cmpl
sarl
loope
icebp
adc
add
fcmovne
xor
je
fs
insb
leave
jl
dec
jmp
push
cltd
xchg
fsubrs
sbb
pushf
mov
dec
jmp
sub
or
push
sbb
imul
cmp
imul
xor
test
fists
mov
test
insl
jne
mov
test
sub
std
arpl
xor
ss
es
push
or
cmp
insb
xor
or
pop
or
xor
and
scas
adc
and
int3
push
loop
jl
fs
lock
mov
add
enter
lcall
cmpsb
imul
icebp
mov
sbbl
pcmpgtd
sub
js
cltd
pop
or
add
xor
cmp
jae
mov
jmp
je
gs
add
add
je
adc
add
sub
pop
scas
or
xchg
push
or
mov
data16
pusha
cltd
inc
or
dec
xchg
lock
pop
cmp
lahf
insb
stc
push
jmp
cmp
or
add
pmullw
push
mov
movsb
or
mov
cmp
cs
int
test
cld
sbb
or
imul
mov
xchg
add
mov
lock
jb
js
cs
sbb
pusha
fsubl
push
jmp
call
cwtl
sub
cmp
or
sbb
in
dec
cld
jns
imul
cmp
jl
dec
jmp
cmp
or
sbb
in
dec
cld
jns
imul
cmp
outsl
cmp
sub
cmpsl
idiv
inc
jmp
mov
icebp
mov
lock
fisttps
jle
inc
xchg
dec
call
les
test
xor
pop
out
arpl
data16
cmc
or
inc
ret
pop
dec
cmp
ja
out
jge
in
cmp
sbb
add
mov
dec
adc
decb
fs
jecxz
pop
daa
movzwl
add
rcrl
lcall
push
jnp
push
add
insl
mov
mov
mov
mov
cmp
add
cmp
scas
insb
js
movb
or
cmp
xchg
data16
push
repnz
or
and
mov
xor
add
mov
jl
jl
adcl
sbb
inc
lods
dec
pop
xchg
mov
test
sbb
dec
sbbb
hlt
or
push
lods
cmc
enter
fbld
lock
popa
pop
cwtl
sub
xchg
mov
cltd
mov
mov
rdtsc
mov
rorb
pushf
xlat
addr16
into
movsb
scas
das
jg
mov
cmp
mov
cmp
mov
xchg
sub
push
iret
fidivrl
adc
movsl
repnz
popl
xor
mov
adc
pop
mov
xor
adc
outsb
add
lock
xorb
clc
push
push
push
mov
insb
xlat
nop
adc
icebp
cld
jo
jns
out
or
xchg
add
icebp
xchg
mov
mov
add
call
dec
jae
add
mov
pmaxsw
cli
int3
mov
pop
xor
in
mov
sbb
aas
cwtl
leave
inc
mov
and
pop
lock
daa
push
loop
mov
xchg
mov
sub
shl
cmp
movsb
cmp
inc
call
imul
cld
add
daa
call
loop
sbb
mov
jge
stos
lcall
jo
das
arpl
das
pop
jge
jno
jo
call
pop
test
sub
lahf
dec
aas
lods
sbb
test
daa
jnp
inc
or
xor
adc
add
shrb
mov
push
rdmsr
in
mov
sub
xchg
xor
pop
mov
add
icebp
jp
jecxz
idivl
cmp
stos
xlat
mov
into
nop
adc
inc
pop
xchg
outsb
xchg
cli
lods
ret
pop
mov
and
xor
and
mov
mov
or
mov
popf
aas
imul
lcall
in
and
xchg
pop
cltd
enter
cmp
jp
loop
out
lcall
test
ljmp
sqrtps
dec
and
push
lahf
pop
and
push
cwtl
push
mov
cmc
cmpsl
cwtl
aad
mov
data16
inc
int
hlt
and
rcr
nop
mov
push
sbb
sbb
jecxz
sbb
cltd
xlat
lcall
xchg
lahf
clc
imul
cmpsl
mov
xchg
inc
sub
ret
xor
mov
cmc
pop
xor
sti
dec
pop
ret
pop
stc
and
adc
lcall
sbb
xchg
xchg
xchg
lea
xor
push
xchg
mov
push
cmpsl
jb
cmp
mov
jge
nop
or
in
push
mov
popa
fwait
push
jg
iret
aam
sbb
daa
mov
stos
cmp
lea
push
inc
insl
scas
iret
xor
pop
jns
leave
jbe
out
xor
add
in
jecxz
jnp
dec
mov
out
pusha
pop
or
out
movsl
dec
xchg
ljmp
cmpsb
sbb
adc
jmp
inc
adc
std
bound
mov
aaa
int
popa
mov
push
fucomip
into
outsl
loopne
cltd
push
mulb
adc
pop
popf
mov
xor
sti
popf
loope
cmp
arpl
fcmovnu
jne
fists
repnz
imul
inc
push
cmp
dec
xor
add
push
mov
dec
push
je
push
push
shll
mov
jmp
mov
inc
xchg
push
xchg
jmp
sub
jle
cmp
jge
cmp
push
pop
lret
cmp
mov
scas
inc
lods
adc
ja
pop
push
add
pop
cmc
ret
cmp
stc
insb
fsubl
jmp
addr16
mov
icebp
or
scas
inc
mov
mov
leave
jge
rorb
push
sbb
or
add
arpl
cli
xchg
sbb
xor
pop
pop
fcmovne
ljmp
mov
mov
mov
stos
sbb
in
divb
jo
lahf
dec
pop
push
push
in
fimuls
mov
adc
fs
add
sub
xchg
jmp
mov
pop
pop
les
mov
xchg
pop
dec
fisubl
mov
je
pop
inc
and
test
add
inc
gs
out
inc
mov
sahf
push
xor
movsb
repz
imul
pushf
jno
call
cmp
out
xchg
es
or
aad
stc
sbbb
lret
dec
cmp
dec
test
mov
jg
mov
iret
loopne
nop
jb
das
fnstenv
add
sub
pop
cmp
loope
icebp
or
roll
in
or
xor
rorl
cwtl
or
xchg
push
cmp
mov
lods
testl
lods
sub
sbb
fwait
inc
gs
jmp
imul
push
pushf
mov
lods
push
fisttpl
mov
mov
and
push
out
jg
add
orb
arpl
lods
lds
xchg
xchg
add
and
add
inc
clc
pop
add
inc
mov
mov
jl
xlat
fstps
imul
lods
or
negl
pop
sbb
xlat
or
mov
gs
lahf
aad
inc
popa
nop
pushf
pushf
fwait
out
pop
dec
xor
call
or
nop
push
cwtl
adc
setne
sub
movsb
adc
adc
push
cltd
inc
aad
sub
popl
imul
sub
inc
or
out
shll
orl
imul
mov
jae
push
pop
xor
xchg
pop
xchg
daa
and
cmp
push
jbe
mov
xor
jl
je
int3
enter
pop
nop
outsb
shrb
inc
sbb
stc
dec
ror
loop
mov
shll
adc
push
sub
insb
cltd
fildll
dec
sub
aas
mov
test
sbb
inc
inc
or
sbb
xchg
fwait
mov
and
fcomps
and
js
lcall
sub
adc
dec
stos
loop
jbe
xor
sahf
and
loope
jl
jg
test
dec
push
mov
pop
pop
or
fbld
adc
cmpsl
add
or
pushf
xor
xchg
es
das
ja
lret
xchg
pop
ds
lret
mov
pop
push
sbb
add
fdiv
int
shlb
pop
repz
jle
jbe
stc
mov
adc
push
aaa
aaa
mov
jb
and
out
cli
cmp
mov
inc
inc
xor
push
or
and
scas
arpl
pop
fldcw
push
dec
iret
outsb
arpl
sbb
jp
jmp
jbe
mov
cmp
iret
int
mulb
nop
add
popa
cltd
dec
hlt
and
pop
cltd
rcrl
pop
xchg
out
stc
rorb
sti
jge
add
cli
push
or
sidtl
dec
not
fs
divps
xchg
mov
loope
xchg
shl
andb
out
cmc
sbb
sbb
lods
sarl
cmp
add
xor
mov
int3
int
cltd
scas
test
pushf
jne
sbb
sub
xchg
inc
inc
mov
loop
jns
mov
aaa
pop
mov
xor
enter
adc
lret
repnz
dec
push
xlat
push
xor
pop
xor
mov
popf
sbb
fs
fimuls
xchg
insb
add
fsubs
test
shll
adc
add
xor
xor
lcall
out
inc
fcmovb
lahf
adc
jne
lcall
rolb
in
and
xlat
mov
stc
fincstp
mov
test
movsb
cmp
imul
les
xor
adc
in
xchg
jmp
jp
out
sahf
std
fstpl
mov
sti
sub
mov
cltd
pop
inc
movsl
shl
jb
dec
push
or
les
aaa
dec
jne
jl
dec
or
andl
push
add
dec
nop
add
pop
or
add
dec
mov
stc
mov
or
pop
lods
cmp
push
pop
push
xchg
sub
dec
add
fadd
sbb
add
dec
enter
jns
sub
sbb
icebp
int
xor
ror
mov
jno
stos
inc
repnz
cmp
mov
jno
nop
inc
out
jne
rcr
jae
and
daa
sbb
pusha
jns
notl
xor
mov
jg
aas
lds
imul
push
xor
xor
push
pop
jl
pop
cmp
xor
add
ss
cmc
add
xor
pushf
aaa
in
jae
add
xor
shll
in
mov
leave
in
pop
fldl
adcb
xchg
mov
idivl
outsl
dec
cltd
push
pop
add
mov
cmp
cmp
rolb
xor
pop
push
jo
rcrl
rcr
test
cli
sbb
xchg
movb
sbb
nop
call
cmp
jecxz
mov
fildll
out
add
xchg
pop
adcb
push
mov
jge
fwait
cmpsl
nop
sahf
xchg
xchg
mov
mov
push
loop
inc
imul
lret
fnstenv
pop
inc
or
mov
jmp
in
pop
cld
jp
lock
gs
mov
jae
pushf
jg
jnp
nopl
sarb
mov
insb
cmp
xlat
movsl
push
sbb
push
push
movsb
mov
stos
or
imul
mov
cmp
mov
mov
xchg
xor
mov
out
loope
fstl
andl
jmp
nop
adc
mov
das
rcrl
cmc
pop
jne
sbb
xor
stos
lret
idivb
jmp
push
xchg
outsb
add
fadd
push
push
ljmp
out
lcall
insl
es
ds
cmp
in
pop
push
pop
mov
aad
call
adc
xchg
jbe
xchg
or
lds
mov
adc
xor
enter
mov
mov
clc
aad
in
fstps
jae
cmp
push
es
repz
sub
jmp
sti
pop
outsl
mov
xchg
pop
dec
jg
sbb
sbb
sbb
pop
adc
ret
jo
pop
pop
sub
jo
or
nop
cld
xor
loope
mov
mov
lret
and
fnstcw
cmc
cld
inc
or
push
gs
push
ja
push
push
cmpb
mov
lcall
mov
fdivr
xor
mov
test
cmp
sub
cltd
addr16
cmp
outsb
cmp
lret
push
cvtps2pi
jle
push
les
dec
sub
test
ja
pop
ss
insl
out
outsb
xchg
mov
or
inc
rep
cmp
pop
dec
pop
inc
lds
xor
pop
dec
insl
jns
xchg
xchg
je
xchg
jbe
mov
adc
mov
sub
adc
mov
cmpsl
cmpsl
mov
sbb
xor
cmp
dec
into
inc
out
cmc
adc
cmp
in
sub
fisubrs
rorl
shl
inc
lahf
std
jge
mov
stos
scas
in
add
jnp
push
mov
push
popa
cmc
or
repnz
repz
mov
mov
mov
int
xchg
mov
out
push
ja
subb
icebp
pop
cmpsb
std
rorl
pop
mov
xchg
dec
lods
sbb
pop
jne
adc
cmp
xchg
sbb
sub
mov
rcr
test
dec
or
ret
inc
pop
mov
or
lods
xchg
popf
int3
stos
inc
test
lods
loopne
sahf
sub
sahf
push
fsts
xor
jno
movsb
pop
xor
lret
arpl
andl
adc
sub
pop
sbb
dec
test
mov
sub
xchg
test
popf
sbb
call
lds
jns
or
pop
loope
push
test
ljmp
cmpsb
mov
add
outsb
arpl
xchg
xor
xor
pop
ret
push
ljmp
daa
add
ljmp
pop
and
jnp
leave
pop
outsb
mov
or
mov
pop
inc
ljmp
nop
jle
fnstcw
xor
bnd
mov
loope
sub
movsb
add
mov
movb
pop
shll
leave
insb
inc
je
je
sbbb
and
out
repnz
cld
cmp
mov
hlt
and
sbb
or
sahf
daa
jmp
insb
out
sub
jb
sbb
lods
test
vpmulhuw
xchg
lods
xor
xchg
jns
fcmovu
inc
xchg
xorl
adc
addr16
jmp
daa
neg
icebp
add
dec
jae
out
jp
xchg
sub
loop
scas
les
or
nop
popa
push
test
push
dec
add
sti
ret
pop
addb
int3
iret
add
pop
jb
add
stos
in
mov
push
jne
add
icebp
pop
in
sub
mov
clc
stc
lods
lret
mull
xor
mov
sbb
stc
iret
inc
push
sub
inc
pop
inc
mov
movsl
inc
xchg
jle
inc
sbb
inc
arpl
pop
push
popf
dec
ret
xor
cmp
divb
add
imul
in
xchg
sbb
out
out
dec
jl
sub
in
lods
rorl
xor
mulb
out
les
fadd
cmpb
dec
mov
pop
int
adc
xorb
mov
sti
into
jne
das
push
insb
adc
sbbl
fcompl
pop
aas
add
dec
push
pop
dec
dec
push
xchg
mov
mov
mov
jmp
cmp
jns,pn
xchg
and
mov
mov
leave
cmp
mov
pop
cmp
and
pop
int3
sti
xchg
xchg
pushf
int
std
lods
mov
ret
out
shlb
pop
jg
sub
push
shl
in
fnstsw
xor
add
fsubl
fists
pop
jno
out
sahf
push
cmp
push
fs
icebp
adc
pop
cmp
leave
cmp
mov
push
xchg
or
push
cmc
callw
cmpsb
and
dec
enter
sbb
pop
das
int
cmc
mov
lods
fsin
inc
out
xor
jmp
add
push
insl
popa
mov
lea
pop
cmpsb
dec
mov
mov
and
and
divb
fwait
leave
xchg
inc
ret
adc
rcl
jge
std
push
out
push
mov
lea
pop
mov
sarl
sub
ds
jg
stos
xchg
fistps
mov
data16
jb
test
int3
fwait
and
mov
pusha
dec
shrb
fdivl
jnp
pop
pop
jp
clc
scas
cltd
in
inc
ljmp
xor
pop
rcll
scas
jne
xchg
icebp
lret
xor
sub
lea
ret
imul
sbbb
adc
add
mov
xchg
jmp
push
stos
shrl
mov
imul
sbb
movsb
cs
mov
ss
es
iret
xor
inc
or
jp
sub
insl
lods
repnz
loope
orb
and
push
inc
jo
mov
xchg
and
mov
ja
or
push
leave
add
dec
pop
test
and
xchg
es
sbb
jmp
ficompl
sbb
cmpsb
popf
fcmovbe
adc
jecxz
out
scas
sbb
lcall
push
pusha
inc
je
test
dec
mov
out
imul
adc
pop
jne
pop
mov
xchg
jle
pop
mov
out
xchg
sub
lods
bound
adc
mov
fstpl
stc
in
push
decl
test
xor
jl
icebp
test
jle
or
fsubl
clc
jle
xchg
data16
xchg
sub
leave
inc
sbb
and
sub
lret
adc
pop
fcompl
shrb
mov
xchg
mov
shl
push
cmp
or
and
cli
push
inc
cmpsl
xchg
fwait
inc
or
mov
scas
sti
aam
mov
test
pop
pop
ss
lods
fstp
jae
aas
bswap
jns
xchg
xchg
sbb
rcr
and
rorb
pusha
fcmove
out
mov
xor
cmp
cmc
jb
cmpsb
jbe
aam
arpl
add
ret
sbb
add
pop
or
orb
mov
cmpsl
xchg
out
adc
stc
data16
bound
lods
ret
aaa
popf
lret
inc
cmp
and
ja
jae
mov
adc
fcomp
rclb
adc
repnz
sbb
sub
pop
push
ja
cltd
in
outsl
aad
mov
mov
jmp
fwait
mov
add
inc
and
jo
dec
or
aas
push
mov
push
jmp
inc
lds
push
or
ja
aad
xchg
test
outsl
nop
ds
adc
xchg
scas
pop
in
pop
inc
mov
xor
inc
xor
jae
adcb
popa
cmc
add
subb
stos
out
add
dec
jno
push
mov
and
pop
mov
sbb
cmp
mov
add
xchg
es
aam
sbb
outsb
cs
xchg
cld
lock
pop
fcom
adc
shll
pop
nop
aam
imul
lods
mov
sar
inc
xor
adcl
and
cmpsb
inc
fidivrs
cmp
lds
pop
mov
jle
inc
arpl
xor
cmp
inc
push
xor
in
ds
pop
mov
lcall
mov
sub
hlt
sbb
jge
mov
in
outsl
mov
pushf
je
ja
popa
shl
test
lock
xor
mov
cmc
cs
imul
xchg
loope
not
outsl
shlb
imulb
jb
inc
aas
push
out
cmp
shll
icebp
loope
fs
mov
mov
nop
test
pminub
std
mov
rcll
xchg
push
xchg
popf
popa
mov
lret
js
fcoml
js
jmp
rorl
popl
xor
test
andb
addb
add
adc
sahf
aam
sub
mov
mov
pop
xchg
pushf
inc
sbb
arpl
cmpsb
cmpsb
mov
sub
movsl
sub
scas
ss
scas
mov
jne
mov
push
or
negb
or
mov
lret
aas
cmpsl
popf
gs
jno
push
divb
and
iret
jp
test
mov
call
inc
imul
cs
shrb
int
hlt
adc
sbb
sbb
xchg
jnp
xor
addr16
add
jae
or
sub
dec
pop
dec
adcb
shl
mov
rol
repnz
push
lea
inc
ret
sti
or
les
mov
adc
xchg
leave
sub
lds
jl
dec
ds
xchg
sbb
push
hlt
das
andl
xor
push
dec
push
loope
jne
gs
push
push
and
inc
jb
dec
pop
mov
inc
pop
sti
repz
cmpsl
add
mov
mov
jp
mov
aas
sarl
mov
jg
movsb
mov
fsubr
push
or
mov
sub
or
mov
mov
adc
pop
inc
sarb
bound
nop
cmp
sub
out
dec
jb
push
dec
xchg
push
pop
int3
jno
in
insl
lahf
push
int3
mov
mov
bsf
lret
jo
inc
cmp
push
mov
push
push
in
sub
pop
sti
dec
int
mov
pop
int
and
lahf
mov
jb
sbb
cmpb
jno
call
scas
cltd
mov
int
mov
inc
mov
test
and
mov
and
xchg
pushf
ja
pushf
xchg
xor
inc
jbe
xor
pop
xor
or
pop
dec
jle
inc
xor
xchg
daa
or
push
add
imul
fstpt
mov
arpl
in
pop
pop
jg
xchg
cltd
seto
repnz
cwtl
adc
add
repz
pop
adcl
sar
ja
mov
mov
movsl
xor
and
mov
imul
lods
inc
xor
xchg
call
and
mov
fsubl
lahf
test
mov
push
lcall
mov
cltd
cmp
lcall
call
jp
rol
pop
orb
xlat
inc
mov
fwait
inc
mov
inc
daa
pushf
pop
scas
and
nop
sahf
std
imul
nop
inc
imul
insl
cmp
pop
cltd
sub
cmp
or
sbb
in
dec
cld
jns
imul
cmp
jl
dec
jmp
cmp
or
sbb
in
dec
cld
jns
imul
cmp
jl
dec
jmp
cmp
or
sbb
in
dec
cld
mov
imul
cmp
xchg
js
dec
leave
pop
cltd
sub
cmp
or
fcompl
mov
ror
imul
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
cwtl
lahf
mov
inc
test
adc
inc
loop
sbb
or
cmp
sub
pop
mov
push
jo
inc
test
fsubs
enter
call
sarb
shrb
cwtl
iret
dec
mov
shrb
repnz
call
enter
call
xchg
push
lahf
sub
or
pusha
in
push
mov
pop
inc
mov
jns
dec
mov
jmp
cmp
shr
add
sbb
daa
and
int3
push
inc
adc
mov
cmpsl
mov
in
enter
mov
jae
or
mov
sbb
jne
dec
call
mov
inc
push
pusha
rclb
call
jge
call
mov
cmpsl
mov
pop
ret
addr16
cwtl
pop
adc
addl
adc
mov
loopne
pop
push
rorb
repz
sub
ja
jnp
and
cmp
call
cwtl
aas
add
or
call
cmpb
enter
call
ss
sub
js
push
jo
add
jle
push
mov
jne
cmpsb
insl
mov
mov
mov
sbb
cs
std
and
les
dec
lea
subb
jge
pop
cmpsb
cmp
es
adc
sbb
aaa
xlat
adc
xor
call
lock
sub
pop
mov
push
jo
inc
test
fsubs
enter
call
lock
sub
pop
mov
push
cmpsl
and
mov
jecxz
cmpsl
pop
sbb
push
lahf
stos
mov
or
fildll
cmp
rcrb
push
sbb
cmp
mov
sbb
sub
adc
add
or
outsl
mov
dec
out
mov
nop
cmp
lret
cwtl
sbb
and
adc
xlat
adc
mov
mov
inc
cmpsb
sub
in
add
pop
and
rcrl
in
jl
add
mov
stos
xor
inc
lret
test
add
ret
daa
mov
mov
ret
arpl
addr16
loopne
dec
and
push
jno
cltd
fldt
xchg
stos
out
in
out
and
lcall
ret
or
adc
cmpsl
xchg
in
stos
sub
lret
movsl
enter
push
push
xchg
sub
cmp
in
push
jae
jp
rcll
push
cmp
adc
rcll
in
jns
sbb
movl
jae
dec
sbb
mov
orl
shlb
mov
cmpsl
cmp
or
test
push
mov
xchg
sub
xor
lret
std
push
xor
and
pop
xchg
push
imul
cs
les
pop
pushf
push
in
fidivrs
clc
and
lret
daa
xlat
lods
cmp
lods
mov
push
sub
aam
cmp
jp
jg
inc
loopne
gs
mov
popa
xor
jae
lods
mov
lods
cmpsb
mull
add
mov
push
ss
lods
cmova
daa
adc
sahf
popa
es
addl
cvtps2pi
ljmp
cmp
push
adc
adc
aad
in
xor
cwtl
fwait
jle
pop
ljmp
lret
sub
xchg
inc
adc
push
sub
sahf
push
je
push
test
xor
loop
iret
fcomi
mov
xchg
insb
sub
nop
push
out
inc
movsb
stos
imul
sub
or
lret
fldl
xchg
cmc
sub
mov
adc
fildl
or
jns
xor
push
aaa
lret
scas
pop
mov
xor
mov
fs
in
insb
cmp
mov
es
hlt
inc
cmp
icebp
cmp
dec
insl
xchg
dec
xor
daa
jno
nop
addl
arpl
inc
adc
sbb
push
xor
xchg
imul
mov
or
cmp
inc
sub
mov
pusha
or
sub
sub
adc
push
jle
push
jb
cmp
inc
inc
cmp
push
addb
mov
in
sub
push
pop
mov
dec
xchg
nop
outsb
arpl
pop
and
divb
push
jns
add
and
std
mov
outsl
pop
cwtl
mov
lods
mov
imul
aad
jnp
pop
cmp
ljmp
mov
lods
dec
aam
pop
cmp
std
mov
scas
and
orb
arpl
insl
cmp
repz
nop
pop
cltd
ljmp
stos
imul
pop
push
mov
or
push
je
or
lret
stos
push
lret
mov
mov
ret
sahf
sub
rolb
das
cld
jae
xlat
adc
dec
lcall
jbe
mov
sub
int3
dec
popf
xchg
ret
fdivrl
sbb
and
std
adc
ljmp
movsb
cmp
xlat
xchg
sbb
aam
dec
out
jle
mov
mov
sarl
inc
mov
repz
inc
frstor
clc
or
movb
xchg
into
fsts
mov
pop
push
movsb
inc
or
ret
scas
popf
mov
xchg
lret
in
ss
movsb
iret
cmp
mov
in
loop
cmp
mov
or
mov
daa
sbb
dec
fs
mov
imul
xor
mov
xor
mov
pop
fiadds
xchg
dec
push
pop
rolb
push
div
xor
fdivrs
add
sbbb
and
xor
mov
pop
sub
mov
adc
testb
ja
xchg
insl
lret
repz
lea
lret
arpl
push
mov
mov
pop
pop
inc
jns
mov
sahf
sti
comiss
lret
cmp
push
xchg
pop
mov
dec
sti
ja
stos
mov
daa
cwtl
popa
and
ror
jp
push
popa
xor
pop
call
push
ds
mov
mov
fmuls
and
jl
aam
jge
xor
popf
dec
mov
push
aaa
bound
mov
jmp
cmc
movsb
iret
inc
jo
push
pop
pop
dec
jns
ja
or
or
les
arpl
xlat
outsl
rol
scas
lcall
lea
jno
cwtl
xor
ficompl
lahf
push
ljmp
clc
xchg
cmp
mov
loopne
repnz
xor
mov
lcall
and
mov
icebp
out
cwtl
mov
jl
jp
xor
imul
scas
inc
push
popa
into
sbb
dec
jne,pt
mov
mov
mov
nop
lret
push
jo
js
push
js
adc
dec
test
lsl
movsl
cld
bound
loop
nop
or
lcall
cmp
dec
push
repz
int3
adc
out
test
outsl
mov
lret
je
add
pop
mov
cli
mov
xlat
xchg
add
cmpsb
mov
add
pushf
pop
mov
pop
dec
repnz
fstps
xor
cmp
dec
shll
mul
stos
pop
fisttpl
sub
pop
dec
dec
xchg
popa
in
dec
mov
or
add
adc
shl
out
or
mov
dec
adc
xor
mov
mov
xchg
les
adc
fdivl
sar
xlat
cwtl
push
ja
inc
cmpl
imul
push
out
xchg
in
jnp
subb
lret
sbb
xchg
or
into
xor
pop
out
cmp
inc
test
xchg
add
push
inc
fdivl
cli
inc
xor
and
sar
push
icebp
stos
jnp
dec
fcoms
fildl
pop
pop
in
enter
and
and
xor
inc
inc
data16
lock
sarb
pushf
addl
add
mov
sub
or
sub
cmp
mov
cmp
cmp
sti
cli
jmp
jae
xchg
jle
popf
js
mov
movsl
mov
clc
int3
cli
sub
cmp
jge
xchg
test
negl
pop
cmp
test
sbb
rcr
mov
jmp
insb
cmpsl
fcomp
sub
xor
into
sbb
cmp
mov
inc
mov
sub
jns
lods
cmp
xor
mov
pushf
or
mov
insl
daa
jecxz
cld
and
jp
cmpl
sbb
jo
mov
shlb
cmpsb
inc
out
cmpsl
sbb
mov
inc
inc
sbb
aas
test
lret
dec
mov
sbb
dec
xor
cli
jle
sub
or
fnsave
jbe
sub
std
xor
cmpsb
push
into
jb
iret
mov
mov
pusha
divb
les
dec
mov
sub
lds
mov
jb
lods
jecxz
repz
les
mov
push
pop
es
popl
cmpb
fwait
jo
in
test
fldl
push
shrl
and
or
add
and
or
inc
xor
int3
jecxz
push
jecxz
jns
aas
mov
enter
inc
movsb
xchg
inc
cmpb
inc
faddl
pop
sbb
fldenv
pushf
int
insb
loop
push
fwait
inc
jecxz
and
inc
mov
scas
dec
ljmp
or
pop
shll
cltd
mov
jecxz
es
jecxz
inc
sti
jb
inc
les
out
sbb
jne
or
fisttps
jecxz
and
movsb
add
ljmp
mov
inc
ljmp
xchg
or
stos
dec
insb
jle
sub
xor
mov
out
add
xchg
sbb
dec
pop
fstps
jns
mov
scas
jo
add
xchg
ljmp
pop
cmpsl
lret
mov
ljmp
xchg
and
setge
mulb
cmp
popa
xchg
fimull
movsl
xor
xor
pop
hlt
sbb
mov
jl,pn
ret
xchg
popf
repz
test
xor
xor
les
fnstsw
adc
mov
xchg
lods
das
dec
push
clc
cmc
mov
jg
cmpsl
lret
rolb
sub
sbb
pop
leave
test
xchg
mov
mov
mov
scas
nop
xchg
jne
push
icebp
and
mulb
xchg
dec
push
pop
ficomps
add
add
mov
adc
or
mov
addr16
test
sbb
mov
cmp
lret
xor
inc
mov
out
mov
call
mov
js
hlt
pop
es
dec
ret
sbb
insb
inc
neg
adc
gs
test
lock
dec
pop
push
jno
lret
int
or
sub
sbb
push
out
and
sbb
aaa
jmp
xchg
mov
unpcklps
fsubs
xor
adc
ja
test
mov
ficoml
movsb
and
aad
imul
sub
in
fcoml
sub
testb
sub
ja
test
push
mov
mov
add
push
xor
lcall
push
push
xchg
mov
and
jb
sub
mov
andl
or
aad
and
lret
addr16
pop
adc
push
cli
into
xchg
xchg
pop
hlt
jle
sbb
sbb
ret
pop
sbb
dec
testl
sbb
lods
mov
jo
xchg
sbb
xchg
outsl
jns
xchg
ss
int3
jns
dec
xor
enter
out
mov
dec
negb
in
inc
outsb
adc
stc
sbb
je
dec
adc
push
popf
add
outsb
pop
ja
mov
lods
les
and
ret
fisubrs
jmp
xor
xchg
movl
xor
push
pop
sub
dec
fwait
movntps
xchg
enter
cmpsb
dec
cli
xlat
mov
stos
inc
gs
adc
pop
sbb
push
pop
lahf
mov
pop
push
mov
cld
inc
lods
pop
xchg
push
pop
mov
push
sub
pop
push
sbb
loopne
sub
or
sub
out
stos
loopne
jbe
ret
cwtl
lods
clc
lea
test
add
pushf
adc
push
leave
andl
pop
jb
cmpsl
inc
push
jle
or
dec
sub
dec
push
out
rorb
cmpsb
movsb
jg
sbb
aaa
cmp
in
xorl
loope
inc
aaa
lahf
seta
jp
aaa
cmpsb
fcom
or
hlt
push
icebp
bound
xor
cltd
stos
cmp
mov
int
fdivrl
mov
mov
mov
lret
or
cltd
test
cmc
fildl
outsl
js
orb
xchg
cwtl
ja
mov
mov
ljmp
mov
adc
cmp
cltd
aam
decl
ret
add
call
arpl
loopne
adc
mov
in
pusha
insb
rolb
jl
cmp
push
int
mov
xor
dec
hlt
shlb
jecxz
lea
addr16
lods
xor
aaa
test
pop
orb
orb
fwait
push
sti
mov
repnz
rcll
mov
scas
mov
pop
addr16
and
xor
js
cwtl
inc
repz
dec
sbb
imul
cmp
fsubs
jo
mov
imul
sti
test
mov
inc
shlb
test
inc
imul
roll
aam
xchg
stc
pushf
lock
in
cmp
cld
and
xlat
ds
push
mov
adc
mov
inc
add
adc
jns
mov
fidivs
adc
std
and
lcall
movsb
in
sub
mov
in
mov
inc
enter
mov
inc
pop
push
jns
push
pop
jl
movsb
adcb
imul
push
jg
push
lcall
pcmpeqd
mov
lret
dec
int3
popa
jg
test
jae
sbb
jge
leave
pop
into
mov
loopne
lods
lock
jb
push
sbb
jle
or
stc
aam
jno
pop
push
loop
pop
call
add
movsb
incb
mov
mov
das
loopne
or
mov
dec
insb
cli
dec
or
adc
or
roll
mov
repz
or
dec
pop
aam
pop
sbb
shll
jb
mov
fists
push
inc
add
add
and
shlb
xor
and
test
push
jno
inc
pusha
sbb
shll
xchg
push
cmp
adc
push
test
mov
lock
and
inc
xor
or
test
popf
gs
insb
push
cs
rclb
popa
arpl
pop
or
inc
pushf
adc
rcll
mov
mov
incb
std
jge
fisubl
ret
daa
sbb
mov
or
cld
mov
add
push
sbb
fisttpll
dec
pop
out
sub
movsb
cmpsl
pushf
and
divb
dec
dec
mov
lcall
inc
shlb
adc
dec
mov
shl
fildll
aad
into
or
arpl
mov
and
out
dec
adc
insl
dec
add
xchg
jno
push
mov
jle
mov
mov
and
cmpb
aad
mulb
mov
pop
jp
sbb
and
cmp
mov
jmp
sti
xchg
dec
loop
loope
jo
or
fwait
inc
loop
fimuls
pushf
out
sti
rcrl
es
inc
sub
insb
das
and
lds
nop
lcall
add
aad
jl
xor
int
bound
fiadds
cmp
push
jno
mov
dec
lea
imul
and
mov
push
xor
insl
sbb
push
add
mov
jbe
adcb
nop
movl
xlat
mov
mov
in
xlat
loopne
pop
das
loopne
xchg
je
and
xorb
call
inc
mov
xor
add
ret
imul
sub
lds
addr16
pop
ss
scas
popa
jne
or
xchg
mov
mov
jmp
xor
lea
dec
lea
in
into
sub
add
inc
xchg
jl
ret
mov
push
xor
mov
hlt
cmp
loope
call
stos
loop
jb
adc
push
pusha
aad
push
movsb
sbb
cltd
test
hlt
es
fistpll
dec
cmp
dec
ret
rorb
add
mov
inc
fmuls
lahf
mov
cmp
ljmp
clc
aad
sbb
std
xchg
xor
leave
lods
add
sbb
sub
cltd
aad
mov
aam
out
jmp
pop
rol
je
push
cmp
out
mov
adc
inc
xlat
push
push
femms
lea
sbb
add
push
mov
push
loopne
lds
jbe
mul
xor
mov
roll
dec
cwtl
je
pop
pushf
insl
arpl
fidivrs
xchg
std
call
das
fimuls
inc
cwtl
insb
adc
mov
test
cmpb
sbb
pusha
pop
lea
mov
or
mov
shll
push
jmp
incl
and
mov
mov
dec
outsb
adc
add
dec
mov
sbb
inc
mov
or
sbb
inc
repz
addl
push
xor
scas
xchg
cmp
ja
pop
and
sbb
jge
mov
repnz
fs
fucomp
cmp
loop
lret
dec
xchg
popa
xchg
aam
out
outsl
nop
xlat
add
lret
jmp
push
cmpsl
clc
lds
loope
jo
daa
jno
jl
stc
les
sahf
and
iret
test
dec
xchg
inc
daa
in
jp
jmp
sbb
xor
loope
mov
cli
jns
popf
loope
repz
dec
adcb
fimuls
pop
add
pop
test
popa
push
sbb
jg
jnp
sbb
mov
xchg
xorl
in
fsubl
rclb
ja
dec
call
push
cmpsl
aas
jnp
das
or
test
mov
mov
pop
mov
notl
inc
and
add
mov
lods
and
or
gs
mul
push
fcompp
loope
or
int3
out
inc
push
xor
push
fidivs
rcr
imul
add
gs
movsl
xchg
dec
cmp
fcmove
mov
dec
add
jmp
in
ljmp
mov
addl
iret
insb
imul
jmp
das
mov
add
inc
xchg
mov
xchg
xor
scas
cmp
or
push
mov
sub
ds
ret
ja
movb
popa
in
repnz
adc
icebp
out
and
push
dec
cwtl
jno
pop
cmpl
adc
in
bound
inc
xchg
jp
push
cmpb
test
and
and
fadd
add
testb
jecxz
fsubl
scas
outsl
add
out
push
fistl
into
sbb
adc
rclb
andl
adc
xchg
mov
cmp
pop
in
loopne
jne
pop
lods
shll
out
sbb
cmp
push
outsl
xor
mov
das
loope
dec
add
test
inc
in
push
jno
jno
jecxz
std
shlb
mov
jne
jns
mov
mov
push
lea
cmp
sbb
and
pop
aam
lret
stos
pop
test
fsubrs
cltd
aad
test
push
mov
cwtl
or
or
pop
cmp
std
xor
cld
rol
sbb
jmp
shrb
mov
jg
cmp
pop
movsl
outsb
or
add
xchg
sub
insb
imul
aad
sbb
mov
pop
or
xor
or
pop
ja
movsl
ljmp
and
scas
shrb
adc
pop
xchg
adc
xchg
dec
cld
stc
cmp
addr16
sahf
mov
inc
push
cltd
jns
fucomip
adc
into
loope
mov
movb
das
loope
imul
mov
daa
insb
cwtl
cmp
push
adc
imul
jecxz
mov
lahf
mov
and
lcall
scas
dec
fbld
pop
aaa
xor
mov
inc
test
xor
mov
cs
lea
repz
arpl
cmp
pop
fistpl
scas
jg
add
call
mov
fstp
pop
aam
mov
fldl
aam
nop
hlt
pop
xchg
mov
cld
in
cmc
dec
push
xchg
testl
sbb
adc
iret
lock
inc
outsb
sbb
adc
arpl
fs
aas
xor
push
bnd
fldcw
lahf
fsubrl
sub
outsl
sub
out
add
or
mov
popf
jmp
add
jge
cmp
jp
inc
out
arpl
enter
pop
dec
push
aad
rclb
push
negl
xchg
xor
xor
push
xchg
sarl
inc
and
bnd
mov
test
sbb
jle
pop
sbbl
pop
adc
call
xor
jmp
xchg
stos
jmp
sub
je
push
mov
jno
addr16
icebp
adc
jmp
xchg
leave
iret
iret
ljmp
repz
js
cli
js
and
rep
or
sbb
jl
in
mov
out
cs
and
fistpl
cmp
and
stos
movsl
ds
stc
shll
roll
jecxz
mov
sti
loope
outsb
push
out
add
and
cld
inc
stos
cmp
stos
jne
iret
xchg
fidivs
mov
dec
not
stc
or
loope
sbb
scas
inc
pop
adc
jne
adc
sbb
pop
rorb
jmp
jbe
mov
cltd
adc
or
and
dec
in
or
or
pop
pop
call
or
sbb
sbb
push
mov
push
cmp
and
sarb
mov
cmp
arpl
push
adc
adc
cmp
in
or
xor
cmp
std
mov
dec
pop
jecxz
jle
gs
insb
push
push
add
adc
addr16
and
and
sub
lea
in
cmp
mov
stos
cmpl
mov
shll
and
push
lret
jne
bound
or
xchg
mov
mov
dec
dec
das
cmp
lods
xor
push
fsubs
enter
call
lock
sub
pop
mov
push
jo
inc
test
fsubs
enter
call
lock
sub
pop
mov
push
cmp
cmp
cwtl
clc
add
sbb
or
cmp
sub
pop
mov
push
jo
inc
test
fsubs
enter
call
pop
xchg
shrb
sub
cmp
jg
outsl
or
push
or
push
cmp
xchg
mov
call
cmpb
mov
push
push
pop
cmp
sub
sbb
jo
clc
xlat
call
xchg
repz
cwtl
mov
popf
js
push
pop
cmp
or
iret
or
clc
mov
test
shl
sti
push
or
and
add
sbb
and
aam
call
std
sarb
dec
sub
loopne
add
int
cmp
lods
or
mov
inc
mov
pop
sbb
sbb
add
cmp
pop
js
gs
dec
xor
push
jmp
pop
xchg
or
push
sbb
das
dec
sbb
pop
push
fwait
call
not
pop
test
negl
or
dec
mov
or
cmp
mov
mov
pop
pop
xchg
jmp
test
cwtl
ret
std
push
in
dec
rorb
mov
out
loopne
adc
dec
aas
jmp
neg
add
cmpsl
popf
je
push
push
pop
cmp
daa
sbb
call
out
mov
xor
pop
sbb
pop
bound
pop
push
pop
cmpsb
adcl
int
loope
movb
or
outsb
push
jbe
dec
jno
insb
pushl
fwait
lods
hlt
repnz
xor
sub
sub
daa
sbb
or
clc
xlat
call
xchg
mov
inc
js
push
pop
cmp
sub
sbb
or
clc
xlat
call
xchg
mov
inc
js
add
mov
mov
xor
add
stos
gs
sbb
repz
rcrb
inc
sub
sub
in
mov
test
leave
xchg
fwait
in
lods
mov
mov
add
in
jno
and
mov
mov
or
stos
and
xor
xchg
imul
xchg
mov
push
in
jg
cmpsl
ljmp
fnstenv
lss
and
out
xchg
dec
jl
aad
xor
sbb
inc
out
push
mov
sub
dec
ds
mov
adc
orl
jp
cmpsb
outsb
mov
repz
dec
and
cmp
sahf
mov
in
push
in
and
or
or
mov
pop
sahf
dec
and
fldt
cmp
pusha
mov
stc
vsqrtps
dec
dec
dec
jo
jecxz,pn
outsb
push
scas
movsl
mov
jb
imul
add
lea
outsb
sbb
and
adc
leave
lret
je
mov
mov
insl
dec
mov
and
out
sub
int3
and
adc
out
test
rcl
imul
xchg
repz
xor
pop
addl
or
jge
mov
dec
out
xor
lods
mov
idiv
pop
and
lods
scas
call
enter
jne
rdpmc
push
das
pop
cmp
daa
enter
mov
mov
inc
jecxz
and
pop
loopne
push
jns
push
nop
rcll
pop
adc
mov
or
shl
and
in
aaa
aas
lods
rol
xchg
cmovne
sbb
inc
adc
test
and
xchg
divb
stc
dec
test
jmp
fadd
jmp
jmp
pop
mov
in
test
xor
lret
mov
or
xor
jnp
filds
pushf
ss
sub
ret
pop
lods
cmp
pop
mov
jle
out
test
aaa
add
ss
adc
cmp
gs
and
mov
adc
mov
stc
nop
xchg
scas
sahf
scas
xlat
xor
rclb
call
addr16
lods
xchg
fdiv
enter
shl
cld
xchg
adc
sbb
mov
jg
add
xor
lock
leave
sbb
or
orl
pop
dec
jae
fisttpl
xchg
sbb
ljmp
dec
cli
dec
insl
pop
mov
mov
int3
popa
sbb
fs
outsl
repz
ret
cmp
pop
xlat
out
int
push
mov
mulb
dec
mov
adc
stos
sub
jecxz
ljmp
push
movsb
pop
scas
mov
mov
cltd
enter
sarl
jp
lea
test
lods
xor
aaa
add
stos
sti
mov
dec
xchg
pop
mov
in
adc
mov
shl
dec
sub
jo
inc
jns
push
mov
scas
mov
in
lcall
ret
loopne
adc
lret
push
xor
loop
jmp
aaa
xchg
cld
jns
push
mov
cmp
push
push
testl
pop
inc
xchg
cli
xchg
aad
jmp
fisubs
loop
mov
repnz
mov
fcmovb
jp
jle
test
xchg
clc
je
inc
sub
fistps
inc
orl
jecxz
inc
xchg
add
imul
mov
sahf
push
les
push
cli
jb
idivl
imul
movsl
loope
cmpsb
call
int3
mov
mov
push
add
push
or
sbb
std
jmp
adc
or
repz
jae
popf
insl
inc
xor
mov
cwtl
in
call
mov
andl
neg
pop
add
xor
xor
or
dec
lods
jecxz
and
into
repz
fistpll
out
mov
fisubrl
xor
pop
test
iret
and
lock
or
adc
shrb
adc
mov
xchg
dec
and
in
shl
jb
out
insl
in
inc
sbb
push
stos
pop
rcr
xor
outsb
mov
xlat
or
roll
arpl
sub
lcall
loop
cmp
push
notl
arpl
lds
rolb
ret
loope
add
popf
push
sub
imul
and
xor
lret
cmp
out
fsubr
lds
push
out
cmp
sbb
mov
jle
cmp
pushf
test
testb
mov
sub
sub
jecxz
or
dec
pop
cmp
lods
push
xlat
ret
sbb
push
mov
jns
add
push
sbb
out
aam
lds
dec
sbb
add
lahf
shr
dec
in
adc
jl
push
pop
int3
jl
inc
mov
test
das
and
push
test
lods
shlb
insb
push
push
lahf
push
cmp
xchg
loope
js
push
pop
inc
in
cmp
sbb
inc
into
outsb
das
jp
xchg
xchg
push
js
inc
and
push
insl
cli
dec
inc
pop
sub
push
xchg
mov
daa
xor
or
scas
pop
rorb
dec
out
fbld
pop
add
xor
mov
pop
pop
stos
adc
es
aaa
lods
insb
enter
fwait
shlb
xchg
mov
pushf
jle,pn
fsubrl
lcall
xchg
inc
xchg
jb
and
mov
dec
aam
dec
pop
pop
les
fstpl
add
push
inc
mov
xchg
mov
xchg
flds
out
pusha
add
xchg
cld
jmp
es
jge
test
into
mov
cwtl
mov
mov
mov
mov
and
ret
sub
cli
xchg
in
jns
lret
push
enter
rcrl
cmpsl
test
mov
sbb
and
or
dec
adc
dec
adc
ja
ret
push
cld
popa
fldt
jecxz
mov
not
jae
in
cwtl
sahf
push
jae
dec
pop
in
pop
inc
ja
dec
pushf
cmp
xor
sub
push
pushf
cld
pop
xchg
and
call
mov
sahf
xchg
adc
adc
xor
test
inc
mov
cmp
daa
notl
add
sbb
push
sbb
adc
jbe
aaa
lods
inc
notb
sbb
lods
scas
sub
xchg
push
arpl
loop
insb
rcrb
sti
das
mov
aaa
daa
jmp
xchg
cmp
sarl
jne
hlt
mov
pop
mov
stos
pop
in
xor
push
jg
mov
cltd
in
orb
xor
mov
insl
call
jb
ja
outsl
sbb
scas
sbb
pcmpgtb
int3
je
loope
and
test
js
mov
jl
in
push
mov
aad
xchg
and
movsl
ljmp
imul
adc
push
pushf
inc
adc
sub
or
dec
insl
mov
clc
inc
xchg
xchg
jl
js
jne
xchg
loope
nop
adcl
xchg
scas
sub
jo
sub
out
mov
mov
mov
jnp
inc
les
sub
movsb
and
mov
jne
and
imul
mov
mov
imul
mov
push
xchg
inc
cmp
xchg
test
je
cmpsb
movsb
mov
scas
pop
stos
jb
dec
icebp
hlt
inc
jno
pop
jecxz
std
or
sbb
shlb
ds
pop
js
jns
pop
mov
lret
cmp
push
arpl
lret
xchg
shlb
icebp
mov
out
push
inc
flds
insb
add
leave
mov
push
lahf
pop
sbb
push
and
cmc
pmaxub
add
and
insb
in
mov
test
or
fyl2x
xor
pop
gs
sbb
jbe
aas
cltd
or
push
scas
aad
into
xor
xchg
add
push
rclb
mov
mov
jl
test
lods
cwtl
pusha
mov
movsl
test
in
clc
movsl
dec
dec
xchg
int3
test
pop
imul
lret
dec
push
adc
or
jno
aas
cwtl
sbb
sub
lret
sbb
imul
pushf
aaa
jle
cmp
xor
jge
jge
jb
ljmp
sub
push
aad
and
adc
mov
mov
jge
sub
jne
mov
adc
add
fists
testb
ret
out
in
lods
in
ja
xor
mov
cmp
stos
pushf
mov
pusha
or
call
jp
adc
sub
pop
jecxz
dec
imul
pop
pop
js
cmp
cmp
mov
int
bound
inc
jae
fldl2t
sub
pop
jl
mov
dec
jae
cs
mov
popf
mov
pusha
mov
xor
jb
jl
add
mov
fidivrl
js
inc
fstps
sbb
das
mov
adc
fwait
add
inc
cmp
mov
jae
in
push
mov
movsb
inc
push
mov
push
test
ret
ljmp
or
jp
lret
rep
pusha
cli
sbb
es
xchg
loopne
movsl
imul
bound
roll
daa
adc
repz
mov
pop
adc
test
mov
or
mov
sbb
sbb
push
hlt
add
add
mov
add
cmpsb
or
jl
outsb
add
leave
cmp
and
xor
mov
dec
int
mov
in
loopne
ret
test
mov
mov
bndstx
mov
or
pop
popa
clc
sbb
pop
pusha
lret
mov
push
shrb
sub
adc
inc
pushl
fdivrl
lahf
loopne
clc
sub
movsl
jle
add
imul
sarl
aad
lahf
pop
inc
mull
sahf
shrb
popf
int3
mov
sub
sub
jb
or
push
lods
jp
in
dec
jno,pn
sahf
push
filds
adc
ss
outsb
addr16
lret
test
insb
jge
clc
push
pop
or
mov
icebp
add
mov
xor
cli
ds
lret
jmp
or
mov
stos
add
sti
test
loope
or
sbb
jecxz
sti
inc
out
arpl
push
outsb
push
jb
call
stc
inc
jl
inc
dec
sti
push
std
or
rcl
call
sahf
xchg
sub
lahf
pop
lahf
por
ret
sub
or
xchg
pop
andl
je
rol
hlt
iret
loope
push
push
clc
and
xor
jecxz
sub
outsb
pop
xchg
cmp
decb
cmc
mov
and
cmpsb
daa
mov
test
mov
add
rolb
dec
xor
mov
jecxz
push
loope
cld
xor
mov
lret
idivl
lret
sub
and
aaa
aas
sahf
sub
push
je
out
cmp
lods
push
xchg
xor
lea
xchg
sbb
mov
and
repnz
push
sti
fisttpll
adc
sbb
mov
mov
mov
loop
imul
test
dec
add
or
xchg
add
cmpsl
test
stc
aaa
push
inc
scas
push
fwait
out
sahf
mov
sahf
mov
sbb
das
int
xchg
xchg
mov
inc
stos
hlt
pop
cwtl
sahf
xchg
int
sub
xor
test
push
data16
push
cs
into
dec
jmp
mov
adc
add
add
mov
sarl
inc
scas
mov
test
push
outsb
xor
mov
jge
les
fsts
dec
mov
fs
lcall
lods
xchg
or
sahf
push
out
aaa
pop
and
pop
mov
mov
or
movsb
ror
in
pop
movsb
out
xchg
inc
outsl
sub
adc
mov
mov
adcl
test
sbb
pop
pop
decl
mov
xor
outsl
lret
mov
rclb
nop
xchg
and
jmp
push
push
jnp
pop
imul
ret
ret
mov
and
movl
mov
push
insl
sub
or
ret
out
dec
push
loope
je
idivl
xlat
pop
les
sub
rcr
scas
shll
lods
xchg
mov
decl
cmc
pop
lret
and
sbb
mov
pop
leave
jl
jne
pushf
fld
lret
lret
out
pop
frstor
mov
or
xchg
cmc
mov
jns
test
imul
repnz
xchg
sbb
arpl
mov
test
fnstsw
test
lock
sub
and
mov
xchg
lahf
mov
push
test
insl
push
cs
xchg
sub
in
scas
fisubrl
shlb
sbb
cmpsl
xor
rcl
test
insb
aas
js
adc
arpl
leavew
inc
jo
xchg
inc
mov
push
fisubrs
jne
add
push
pop
adcl
stos
addr16
clc
mov
hlt
es
or
mov
mov
sub
and
fxch
das
jmp
cmp
dec
clc
jne
lcall
popf
jbe
adc
mov
ljmp
jnp
cwtl
out
sub
orl
cwtl
pushf
stos
test
push
ret
adc
inc
pop
sub
cmp
push
jecxz
sarb
fs
out
push
fwait
pop
and
sub
pop
jae
mov
lea
es
and
push
cmc
outsb
data16
pop
xchg
inc
or
sub
push
das
in
je
push
scas
imul
jmp
xchg
js
inc
scas
mov
test
in
pop
loopne
xor
data16
jl
out
sub
lods
jae
jle
or
lds
sbb
jb
push
or
jno
dec
cltd
and
lret
push
push
in
mov
mov
mov
cld
mov
xor
jle
jg
adc
xor
cmp
addl
cmp
lcall
in
dec
xchg
xor
fbld
lds
popf
mov
adc
mov
mov
push
jns
jnp
call
inc
dec
cmp
adc
rorl
adc
xlat
xor
std
pop
fisubl
inc
jge
dec
pop
push
jp
mov
mov
push
movd
pop
mov
rcrl
test
ss
push
xor
mov
dec
jp
lret
cltd
roll
rcrb
out
call
data16
mov
sbb
cwtl
inc
adc
fdivs
icebp
daa
jbe
fucomi
xor
test
shl
daa
mov
loop
and
fldl
loop
call
mov
xlat
std
xchg
or
pop
mov
enter
lcall
xchg
lods
dec
pop
adc
adc
pop
testl
pmullw
cmpsl
inc
push
das
pop
adc
pop
inc
push
and
sub
cli
inc
adc
cmp
pop
xchg
aas
ljmp
push
imul
jmp
dec
lea
push
pop
add
fcmovbe
popa
andb
sahf
dec
jmp
mov
pop
jp
bound
push
dec
insb
cmp
call
jne
push
mov
sub
mov
mov
jbe
pop
xchg
push
xor
in
mov
loope
mov
mov
mov
in
int3
mov
shrb
into
add
inc
and
enter
in
cmpsb
out
lret
aas
xor
enter
arpl
ja
lods
js
popf
adc
sbb
jne
daa
cmpsb
mov
das
push
ret
pop
and
add
cld
mov
jle
add
jb
xchg
mov
inc
jle
cwtl
and
outsl
inc
xor
outsl
mov
or
jbe
and
xchg
xchg
jle
cmp
lods
mov
outsl
pusha
scas
push
in
in
aas
notb
adc
jo
pop
outsb
cmp
xor
rclb
pushf
std
jns
pop
pop
xchg
fbld
adc
push
out
cmpsl
cmp
inc
int3
js
lock
std
imul
fistps
stos
insl
dec
dec
push
inc
sar
mov
into
pop
xchg
cmp
fs
ja
stos
test
inc
sub
fsubrs
repz
inc
adc
icebp
mov
fyl2x
jge
inc
and
movsl
cmp
mov
bound
incb
cmpsl
push
or
enter
aas
mov
dec
addr16
jp
repnz
mov
out
pop
sbb
jb
dec
out
push
repz
push
inc
pop
fdiv
push
inc
out
cmp
dec
mov
mov
dec
mov
cs
fwait
clc
push
aas
stos
testl
fucom
faddl
in
adc
add
dec
mov
adc
mov
out
push
lods
add
loopne
push
and
clc
mov
rol
adc
ja
pop
out
data16
push
xorl
out
fiadds
daa
mov
inc
push
mov
popa
int
pop
add
cli
cmp
sbb
jo
mov
insl
push
pmaxub
jg
mov
adc
mov
hlt
inc
in
dec
or
pop
cwtl
pop
inc
add
cld
fs
push
jp
pop
fists
and
push
mov
call
mov
jbe
xor
mov
dec
or
dec
in
ja
push
fcompl
outsl
xchg
ficomps
scas
movsl
sbb
repnz
or
inc
xor
arpl
xchg
outsb
scas
push
adc
loopne
xchg
rcll
push
mov
mov
sbb
push
cmp
mov
in
loope
out
iret
dec
mov
rolb
fs
jmp
dec
mov
outsb
dec
in
xchg
sub
push
mov
push
out
lods
movsb
jecxz
rorb
lea
add
daa
push
mov
data16
jns
dec
daa
js
xchg
fldt
sub
ljmp
scas
je
or
inc
pop
lock
fucomi
adc
into
in
stc
push
cmp
and
mov
dec
pop
pop
mov
sub
jmp
loope
add
dec
sub
jp
cmc
mov
outsl
xor
int3
leave
inc
scas
fmull
dec
add
and
js
add
iret
movswl
xchg
xchg
je
adc
inc
fidivrl
dec
mov
aam
shr
cltd
in
insl
mov
or
cmp
clc
mov
leave
ss
push
cwtl
sbb
je
mov
loope
and
aas
push
adc
pop
mov
fldt
ret
xor
pop
jne
out
inc
push
mov
sbb
pop
ds
jb
mov
xchg
fadds
lcall
repz
or
cmc
cltd
lret
sbb
jae
or
xor
fstpl
clc
inc
mov
pop
push
loope
imul
ja
cld
mov
cmp
shl
mov
pop
outsl
sub
inc
jle
xor
out
imul
out
int
push
inc
in
inc
xor
ret
ficompl
in
sub
jge
xor
ret
jp
ror
push
mov
das
cmpsb
ss
mov
mov
repz
push
test
dec
clc
or
cmp
xchg
jp
or
je
and
pop
jge
cmp
inc
movsb
fidivrs
mov
inc
mov
xor
lods
push
and
xor
xchg
cwtl
sahf
pop
out
test
in
insl
add
leave
es
dec
jae
in
ret
lret
pushl
leave
mov
push
jb
fsubr
xchg
movnti
repnz
sbb
mov
jecxz
dec
mov
in
loope
xchg
ss
push
insl
pop
pop
or
mov
aaa
gs
mov
into
mov
cmp
xchg
lahf
mov
cmc
or
cli
xor
push
sub
mov
mov
repz
mov
leave
daa
push
xchg
out
mov
sbb
jmp
push
pop
fstps
mov
fstpt
mov
add
test
jo
out
pop
sbbl
add
out
loopne
dec
std
inc
test
addr16
cmp
insl
adc
add
push
test
xchg
jp
fbstp
loopne
inc
pusha
inc
xor
test
popa
mov
aad
es
push
jmp
pop
movsb
in
cmp
mov
rol
xchg
arpl
sub
pop
mov
xchg
xchg
cmpsl
aas
test
dec
iret
cwtl
mov
dec
ss
ss
jb
mov
xchg
pop
mov
jno
fnstenv
pushf
test
cmp
lock
and
ja
mov
fiaddl
mov
popa
mov
movsl
sbb
movl
dec
in
clc
stc
xchg
les
sar
cmp
push
pop
out
mov
leave
rsm
xchg
iret
aam
cli
arpl
xchg
xchg
sbb
xchg
adc
xchg
push
lods
pop
leave
imul
arpl
cmp
movsl
mov
pop
nop
inc
aas
sbb
cmp
pop
mov
int
ss
dec
xchg
mov
outsb
adc
jns
cltd
sahf
repnz
add
insl
and
enter
sbb
in
and
pusha
jae
dec
xor
jo
push
sub
jno
xor
pop
xor
cmc
sub
inc
mov
mov
imul
dec
ret
sti
lret
fs
add
lahf
loop
adc
cmp
sub
sbb
or
clc
xlat
call
xchg
mov
inc
js
push
pop
cmp
sub
sbb
or
clc
xlat
call
xchg
mov
inc
js
push
push
cmp
sub
sbb
or
clc
xlat
call
xchg
xchg
out
pop
pop
dec
pop
cmp
sub
sbb
inc
dec
fdiv
mov
pop
addr16
ja
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
inc
lea
dec
sbbb
rclb
lds
xor
dec
xchg
mov
inc
lea
and
int
sub
lds
aad
movsl
pop
mov
dec
xchg
movsb
gs
test
push
in
cmc
xor
and
push
cmc
inc
mov
add
add
sbb
popf
sub
add
loop
sbb
or
mov
nop
push
push
jne
insb
test
push
cmc
in
xor
pop
add
mov
repz
sub
aad
les
push
outsb
mov
cmp
test
in
inc
or
or
movsb
xchg
jne
jp
sbb
jo
notb
push
add
xor
mov
sub
sub
repnz
jp
sbb
test
mov
shrb
and
and
sbb
mov
test
pop
sbb
dec
mov
and
add
mov
ret
cmc
pusha
aad
aam
mov
jb
xchg
dec
xchg
je
mov
popf
inc
lea
and
aam
and
xor
aad
movsl
jne
inc
test
rorl
enter
stc
cmp
dec
mov
cmp
lods
imul
shlb
ja
inc
std
daa
xchg
insl
in
push
fnsave
adc
sbb
movb
sub
sub
fsubrs
es
sub
in
xor
cmp
lds
mov
test
mov
inc
lea
and
int
cmp
lds
mov
test
mov
idiv
adc
add
mov
jns
push
add
jo
xchg
pandn
jbe
fistpll
mov
adc
lds
pop
icebp
and
sub
add
mov
dec
fists
test
sub
mov
pop
js
nop
lods
js
in
notb
xchg
and
sbb
bound
jl
cmp
xchg
cmp
lods
js
xchg
std
sub
jp
mov
jne
cli
out
and
shll
mov
push
in
mov
scas
adc
jmp
test
cltd
fildl
adc
cltd
cmpsb
mov
push
fsubl
jae
xchg
pop
mov
and
leave
adc
sbb
push
mov
sbb
push
out
pusha
mov
mov
outsb
rclb
cltd
mov
sbb
pop
aam
incb
cmp
dec
add
jno
rclb
pushf
out
push
xor
pusha
imull
xchg
push
pushf
xor
pop
or
outsb
pop
mov
lret
adc
push
in
test
jmp
xchg
cld
cmp
xchg
push
fisttpll
xchg
xchg
scas
iret
push
or
mov
das
out
mov
push
jl
mov
cmpsl
jecxz
and
push
lds
jne
out
inc
sbb
ret
pop
outsb
pop
mov
arpl
lea
adc
mov
sub
cmpsl
in
push
xchg
addr16
aad
loope
ret
or
or
popf
adc
roll
mov
or
push
aaa
addr16
add
fdivl
mov
jecxz
pusha
cmp
jae
faddl
dec
mov
gs
adc
jnp
adc
cmp
push
add
lcall
in
push
push
sub
mov
mov
loop
sbb
jb
mov
lea
push
je
ja
sti
fnstenv
push
testb
enter
dec
outsb
test
dec
sbb
fdivs
mov
mov
je
adc
ret
lods
xor
sub
mov
in
dec
and
pop
jmp
mov
mov
clc
iret
dec
sub
es
int3
sbbl
stos
xchg
mov
sarb
mov
adc
movsb
clc
fcmovu
les
arpl
dec
sub
test
jns
sbb
adc
out
inc
fiadds
fwait
in
popa
mov
inc
sarl
out
ss
xor
pop
shrl
sbb
adc
and
adc
gs
in
les
add
add
cld
mov
cmp
mov
adcl
jb
jmp
repz
in
dec
rclb
mov
mov
in
cmp
mov
jl
shll
jns
fistpl
out
push
icebp
jge
icebp
movsb
xchg
jmp
dec
stos
inc
les
xchg
jmp
in
fwait
sub
insl
loopne
movb
mov
movsl
mov
or
decb
mov
ljmp
adc
mov
loop
std
fidivrl
lcall
iret
mov
ret
sbb
pop
call
lret
cmp
faddp
sbbb
ljmp
add
popl
xchg
xchg
push
add
push
or
cmc
fs
loop
pop
addr16
fidivrs
xchg
lahf
adc
mov
and
sub
repnz
sbb
dec
ret
xor
pop
icebp
out
pushf
lock
or
in
jle
test
inc
cmpsl
int3
mov
stos
repnz
mov
jnp
hlt
aam
shl
sti
xchg
cs
fidivrs
fwait
outsl
mov
sub
faddl
xlat
dec
xlat
fwait
repnz
je
out
jmp
mov
push
jmp
rcr
jp
pop
int
inc
cmp
clc
shll
fistpl
jbe
xchg
adc
push
and
push
mov
std
jb
fsubp
inc
or
jae
sub
push
sbbl
sbb
pop
jecxz
imul
dec
dec
scas
icebp
jge
cmc
arpl
push
stos
jae
icebp
pop
out
xorb
jge
dec
imul
sub
mov
mov
jmp
adc
fisubs
inc
and
ja
outsl
stc
inc
mov
pop
dec
mov
std
adcb
jns
ljmp
inc
int
inc
mov
mov
push
daa
roll
dec
test
sub
jp
dec
mov
pop
mov
jg
test
mov
adc
cmp
mov
sbbb
xor
pop
pop
jge
push
out
sarl
insb
lock
inc
sub
xchg
pop
ret
jg
inc
mov
sub
mov
test
dec
inc
aaa
jne
mov
fs
dec
in
jle
movsb
xchg
xlat
and
mov
lods
dec
sbb
loopne
loop
loopne
pop
adc
dec
into
mov
mov
add
clc
pop
xlat
xor
les
inc
pop
cmp
lahf
dec
enter
xchg
jns
lret
or
push
mov
pop
repz
jmp
out
cmp
sbb
cmp
mov
push
lret
dec
adc
mov
jno
cmpsb
in
clc
mov
lds
bswap
or
push
push
mov
mov
gs
out
xor
sbb
and
xor
js
dec
push
jp
out
add
arpl
sarb
fstl
test
mov
div
push
add
ja
xlat
sti
or
fstl
in
mov
andb
cli
pop
and
idivb
pop
imul
fstpt
idivl
adc
mov
decl
lret
out
add
mov
mov
out
mov
jg
dec
les
lcall
add
int3
sub
es
and
push
in
in
in
aas
fisubrl
push
cs
into
out
in
in
mov
cmpsb
imul
sub
mov
fwait
dec
sbb
popf
out
bnd
mov
in
fiaddl
jo
mov
push
es
pusha
cmp
add
cs
stos
imul
xchg
stos
orl
mov
orb
mov
mov
jge
shrl
iret
js
ficoms
cmpsl
mov
or
add
cmp
nop
pop
mov
stc
xchg
add
or
xchg
cmpsb
js
pop
inc
jp
sub
test
or
push
jle
sub
adc
pand
xor
dec
shll
and
pop
test
pushf
out
cmp
or
or
inc
xchg
enter
jnp
dec
jbe
sbb
xor
cwtl
jo
sbb
add
ss
cli
xlat
push
pop
fwait
cs
dec
outsb
add
jp
and
inc
jmp
mov
mov
or
ret
imul
icebp
lock
lods
stos
fbld
out
jns
cmp
mov
mov
mov
stos
rorb
popf
test
imul
ja
adc
mov
addr16
jl
fbstp
in
fstl
sub
addl
stos
aam
push
fldt
or
and
jmp
xchg
lcall
and
dec
dec
dec
pop
xor
sub
cmp
dec
xchg
xchg
push
enter
popa
std
lcall
shrl
inc
jbe
add
cmc
mov
les
jmp
cld
xor
adc
out
jns
pop
add
pusha
fdivs
mov
pop
sub
test
sbb
jb
mov
fstps
inc
cmp
jmp
imul
and
lds
insl
daa
aaa
out
iret
mov
jb
fistpll
lods
imul
out
cmc
icebp
mov
stos
add
xor
lods
jns
loop
sbb
adc
xlat
push
jl
or
mov
push
dec
repnz
mov
push
fcmovnb
int3
push
inc
aas
pop
mov
cmp
xor
xor
int3
push
in
adc
je
adc
or
dec
xchg
cmp
push
popf
add
int3
push
cmpsb
das
or
rclb
lds
sbb
outsl
mov
sbb
mov
cmpsl
xor
xchg
fidivl
scas
cmp
mov
cli
lods
cmp
mov
adc
icebp
push
xchg
push
sbb
and
xorb
inc
cltd
loopne
pushf
adc
pusha
scas
inc
push
mov
loop
mov
negb
mov
add
xchg
int3
pop
cmp
pop
fildl
xchg
and
cmp
mov
ficompl
out
mov
xor
std
shl
xor
loopne
add
inc
hlt
imul
jmp
adc
xchg
add
xchg
inc
fdivr
arpl
mov
loop
push
inc
iret
mov
jb
shl
pop
jmp
push
jmp
push
repz
inc
mov
xchg
lea
jb
jl
lods
jg
enter
jae
and
ds
xchg
push
cmp
fdivs
bound
lds
std
fistpll
xorb
shlb
add
dec
sahf
loop
addr16
mov
jne
push
fcoml
sbb
mov
lret
ret
pop
or
jo
pushf
dec
jb
testb
xor
push
xchg
jmp
xchg
hlt
pop
les
mov
pop
shl
fidivrl
mov
push
push
cmp
faddl
mov
cli
jle
push
divb
mov
fbstp
mov
mov
sbb
push
adc
mov
push
sbb
dec
push
stc
xchg
stos
pop
fldcw
popf
dec
leave
sub
clc
testl
cmp
xlat
push
rol
dec
mov
and
adc
in
fdivl
ret
push
fstl
inc
ret
ja
jle
popf
xacquire
xchg
repnz
out
mov
ss
pop
dec
ret
xor
sub
test
fs
ljmp
fisubl
jno
push
das
mov
leave
in
inc
out
pop
imulb
add
pop
lods
xlat
cltd
cmp
adcl
sahf
sti
sbb
push
add
leave
enter
cmpsb
outsb
mov
sbb
cmpsl
push
inc
push
dec
scas
punpckldq
shll
push
sbb
dec
jmp
adc
int3
pop
mov
in
mov
mov
aam
sbb
push
xchg
adc
push
mov
pop
ret
fisubs
xchg
call
mov
leave
inc
mov
pop
pop
mov
sbb
mov
adc
test
lea
stos
out
mov
push
aas
shl
or
sbb
inc
jge
and
into
fs
add
cmp
rorb
dec
test
sub
cmpsl
in
mov
mov
testb
std
jecxz
mov
pop
inc
pop
xlat
cwtl
lret
mov
mov
jmp
stos
mov
sub
addr16
push
shrb
mov
test
shlb
xor
mov
jg
pop
inc
daa
fldl
cli
mov
pop
aad
test
fdivrs
insb
xor
outsl
es
mov
mov
sar
mov
ds
lock
jnp
shrb
aad
das
sbb
mov
dec
xchg
xchg
pop
stc
xor
stc
xchg
outsb
jb
repnz
mov
add
pop
push
inc
mov
cs
adc
or
pushf
cmpsb
jp
int
sbb
outsb
jae
inc
leave
sub
sbb
push
int3
fdivrs
jb
cmp
pop
repz
sbb
cmp
jle
bound
adc
mov
inc
popf
jge
jb
inc
lods
jne
push
ljmp
pop
mov
cmp
sbb
push
popf
hlt
pushw
test
out
push
test
out
mov
int
movsl
roll
lret
adc
mov
xchg
les
scas
popf
and
mov
incb
mov
fiaddl
lods
leave
imul
gs
cmp
movsb
and
out
addl
mov
mov
nop
mov
pop
aas
nop
inc
push
cmp
mov
push
pop
lods
sahf
cmpsl
pop
data16
xor
mov
lret
subl
and
mov
mov
mov
lods
xor
ret
sti
es
push
pop
xor
mov
sbb
aaa
cmp
mov
jmp
pop
fs
enter
mov
test
mov
push
aad
and
inc
pop
gs
movsl
fcoms
sub
and
push
inc
mov
pop
movsb
jmp
mov
mov
into
push
pop
push
dec
push
scas
aas
ret
out
leave
out
xor
negb
cmp
ja
or
mov
insl
mov
add
out
dec
or
ret
outsl
pop
lret
adc
insl
mov
es
inc
les
xor
mov
idivb
or
sbb
xchg
mov
cmp
nop
idivl
push
jge
setl
sbb
je
in
test
out
xor
imul
pop
insb
leave
test
gs
pusha
jb
xor
imul
repnz
cmc
jae
loopne
push
mov
mov
lea
andb
ljmp
lods
mov
add
or
xchg
stos
int
push
loop
or
jo
aas
iret
jne
jge
mov
dec
jecxz
adc
cmpsb
pop
push
cmp
jecxz
enter
push
mov
ret
sarb
js
adc
in
cmpsb
push
dec
jb
nop
xor
mov
xor
sbb
inc
jmp
xchg
add
vsubss
testl
sbb
les
inc
test
sbb
je
imul
pop
or
add
icebp
cltd
loop
mov
push
stc
xor
ficoml
xlat
cltd
ja
icebp
mov
mov
movsl
or
or
popf
stos
mov
ljmp
cli
aam
mov
data16
mov
clc
adc
divb
shlb
out
xlat
ret
sbb
scas
jae
jecxz
xor
cli
jmp
pop
nop
add
les
push
cmc
les
loopne
xor
or
insl
pcmpeqw
sbb
inc
loope
rcll
fcoml
stos
leave
push
mov
mov
les
pop
pop
mov
xchg
iret
ret
inc
push
add
lods
mov
mov
and
cmpsl
pop
lea
or
adc
in
sbbl
test
out
in
je
test
and
sbb
iret
popl
push
popa
shr
pop
pop
scas
psubw
or
xchg
or
mov
xchg
aad
xor
xchg
xor
inc
xor
jnp
ds
cmp
stc
fildll
les
cltd
mov
sub
add
sbb
pop
in
lods
inc
jecxz
xor
int
xchg
or
cltd
hlt
lea
pop
lods
aaa
push
rolb
dec
adc
ret
mov
fucompp
cmp
or
js
jno
mov
adc
dec
out
xchg
fs
pop
and
push
divb
adc
and
xor
inc
xchg
negl
test
std
icebp
pop
push
adc
inc
mov
dec
test
sbb
push
push
sbbl
dec
mov
repz
pop
sub
pop
mov
and
sti
sub
xor
push
je
sbb
inc
loop
sub
lods
leave
push
daa
fst
out
popf
jecxz
je
mov
mov
or
inc
in
lods
mov
ret
inc
xchg
pop
xchg
cmpb
cmpsl
das
repnz
mov
cwtl
cmp
and
xor
cmp
cs
cltd
xchg
popf
mov
pop
inc
xor
push
sub
lods
lds
mov
add
pop
mov
mov
dec
inc
enter
decl
jae
or
inc
or
rcll
addl
mov
jnp
test
pop
or
aaa
popf
pop
scas
mov
pusha
adcb
sub
cmc
mov
fildl
xchg
adc
adcb
aaa
push
repnz
shll
popf
pop
xlat
ret
lahf
ss
hlt
pminub
retw
pop
out
outsb
lret
sbb
aad
push
jmp
and
lods
dec
xor
inc
push
mov
jns
dec
pop
xchg
pusha
addr16
insb
mov
test
sti
inc
inc
scas
pusha
shr
mov
mov
cli
xor
sub
cmp
lds
lods
add
xchg
out
dec
sub
clc
gs
lock
daa
lahf
dec
loopne
jne
mov
mov
jo
test
adc
inc
scas
aam
mov
xchg
cmp
fiaddl
xor
jmp
test
cwtl
dec
int3
loopne
jl
enter
in
out
mull
push
push
mov
stos
mov
add
stos
mov
or
mov
jecxz
decb
divb
adcb
test
rcl
int3
fcmovnu
cs
out
add
add
int3
rcll
push
pushf
or
cmp
sub
jne
push
mov
mov
subl
sub
jg
pop
xor
mov
pop
les
add
scas
jecxz
scas
push
and
inc
sbb
lock
adc
fwait
mov
fdivr
jbe
rclb
and
mov
nop
outsb
cmp
idiv
imul
lock
ja
pop
mov
inc
and
jmp
decb
shll
ret
jl
cmp
xchg
mov
xchg
insb
mov
mov
add
dec
inc
push
push
xchg
cmpsb
lahf
pop
cli
imul
xor
xlat
xchg
jl
sbb
push
adc
sub
sbb
inc
xchg
test
insl
add
call
adc
inc
add
mov
and
out
aad
jecxz
inc
int3
jo
mov
mov
lock
sub
inc
inc
ljmp
inc
fdivrs
add
scas
xchg
dec
xor
and
sbb
clc
pop
aas
outsl
push
shll
mov
push
cmp
mov
in
fwait
push
in
jp
jg
xchg
pop
or
cld
jne
mov
sarw
xchg
xchg
push
pop
outsl
loope
les
das
add
popf
in
in
xor
adc
lcall
ljmp
flds
pushf
mov
stc
jns
push
into
inc
shll
insb
xchg
mov
std
hlt
mov
mov
in
call
and
inc
js
dec
or
ficoms
push
add
xchg
add
enter
sbb
cmc
xor
idivb
xor
arpl
shl
adc
scas
or
sbb
in
xlat
jmp
les
movsb
push
push
mov
jo
outsl
movsb
mov
jb
sbb
inc
mov
mov
dec
test
loopne
jae
call
clc
clc
xor
outsb
out
sahf
sbb
dec
mov
push
rcl
rcpps
jl
daa
xchg
jbe
arpl
push
cmpb
push
mov
xor
dec
sub
pop
dec
jo
cli
add
jp
fs
in
xchg
mov
lds
clc
jno
fsubrs
push
xor
push
cmpsl
mov
sub
push
insl
xchg
orb
iret
mov
shll
das
mov
pusha
sti
mov
xor
mov
inc
out
mov
or
jmp
popa
push
in
lahf
popf
xchg
add
pop
push
pop
xchg
daa
jbe
dec
mov
hlt
lahf
or
out
dec
pop
cld
int
loop
inc
lret
mov
sahf
jno
adc
xor
add
fdivrs
fadds
aad
mov
jnp
pusha
pop
pushf
mov
stos
loopne
sub
dec
pop
pop
dec
dec
jae
jne
out
mov
psllw
mov
add
daa
mov
push
inc
sub
jb
inc
pop
dec
mov
xor
out
dec
push
pop
lahf
insb
cmpsb
sub
inc
out
in
repnz
dec
fsubs
aad
call
shrb
mov
pop
or
inc
pop
push
aam
fdiv
xchg
jb
rol
xor
and
out
movsb
adc
push
push
outsb
pusha
push
clc
inc
xchg
pop
mov
adc
mov
and
cmp
jge
testl
lds
pop
xchg
test
inc
pop
sbb
xorb
stc
adc
bound
xchg
mov
inc
icebp
push
mov
jecxz
stos
mov
mov
je
xor
sti
push
icebp
fnstsw
sub
xor
lock
mov
ret
xor
aam
aaa
out
mov
stos
sbb
mov
insl
lods
aas
sub
ret
jbe
sub
scas
fadd
iret
push
addb
insl
daa
xchg
and
mov
jge
sub
mov
mov
xchg
movsb
fcmove
add
jle
mov
movsb
lcall
add
mov
fcmovnu
jbe
popa
aam
add
mov
sbb
das
loope
xchg
int3
fidivrs
push
repz
fidivl
inc
or
pusha
sub
into
hlt
mov
xchg
pusha
sub
inc
lea
and
int
cmp
lds
mov
test
mov
inc
lea
and
int
cmp
lds
mov
test
mov
lds
mov
add
sub
aad
movsl
insb
mov
test
mov
inc
lea
and
dec
adc
mov
or
dec
mov
pop
fs
push
jp
push
dec
push
fs
imul
lret
in
mov
in
xchg
mov
fs
fs
push
sbb
adc
add
lret
push
ljmp
test
dec
jp
push
sbb
sub
in
xchg
mov
enter
fucomip
stos
add
fs
sub
daa
cmp
leave
shufps
cli
sub
pushf
xor
or
xchg
repz
cmc
in
int
cmp
cli
leave
jmp
pop
repz
or
dec
fs
sbb
dec
and
stos
negb
sbb
cmp
dec
lcall
movsb
movsl
je
mov
iret
jle
sbb
sbb
roll
shr
add
adc
aam
insl
mov
xor
add
adc
cld
lahf
sbb
roll
fstps
push
movsl
iret
sbb
fs
jnp
pop
mov
scas
or
icebp
das
scas
or
gs
je
test
push
jp
push
sbb
or
sbb
lret
fucomp
lods
lcall
pop
aaa
add
push
jne
dec
push
pop
imul
xchg
stos
test
test
iret
je
add
jp
cmp
js
inc
sub
lahf
in
xchg
lods
mov
shl
xlat
in
iret
test
sbb
push
inc
push
dec
jbe
or
add
hlt
lret
ljmp
test
push
jp
push
sbb
adc
add
hlt
lret
ljmp
test
or
fistpll
hlt
xchg
push
sub
push
jg
mov
mov
xor
lea
dec
mov
pop
mov
leave
aaa
cmp
int3
popa
dec
je
pushf
mov
call
js
in
mov
fidivl
dec
sub
loopne
or
mov
outsl
rcrl
mov
mov
pop
movsb
incl
es
bnd
gs
cmp
jo
in
add
dec
rcrb
dec
mov
jno
push
xchg
out
jb
popf
adc
xor
lods
cld
jae
test
and
mov
les
imul
ja
pop
adc
mov
cld
aad
xor
fisubs
adc
out
inc
inc
insb
insb
out
loopne
xchg
roll
mov
out
jg
lock
sbb
ret
loope
jnp
jmp
lret
and
pop
test
gs
push
cld
cmp
das
mov
paddw
in
repnz
out
mov
mov
xor
xlat
rorb
mov
jnp
jmp
outsb
imul
icebp
int3
in
out
xor
pushf
sti
data16
mov
inc
loope
subb
adc
imul
or
sub
fisubs
pop
sub
nop
loopne
jno
cmpsb
cmp
movsl
and
fiadds
fnstcw
xchg
fwait
in
jnp
push
mov
mov
cmp
test
cmp
cltd
sub
mov
test
push
jbe
jl
and
jbe
mov
jle
adc
nop
push
aad
out
xor
sub
dec
lea
and
cmp
cli
cs
push
lods
sbb
outsb
inc
fisubrs
jb
lret
sbb
insb
or
movb
testl
lock
xchg
lcall
lock
loopne
dec
mov
fdivrs
push
out
mov
je
mov
mov
mov
mov
hlt
inc
outsl
cltd
lcall
or
repnz
or
xchg
and
mov
cli
mov
cmp
arpl
inc
enter
xor
cwtl
xor
mov
adc
mov
out
arpl
adcl
mov
sbb
les
pop
leave
insb
push
or
das
in
inc
nop
test
sbb
xchg
xor
cmp
stc
cmpb
ret
sbb
pop
jae
or
in
ljmp
sar
pusha
xchg
mov
jecxz
mov
mov
xchg
sbb
bswap
jg
sbb
adc
mov
xor
aam
sub
incb
lahf
and
sarb
arpl
push
xchg
pop
mov
insl
lods
lods
enter
pop
scas
insl
imul
xor
xor
lcall
jb
sbb
std
cmpsl
shr
or
cltd
mov
cmpsl
inc
push
dec
xorl
mov
pop
das
xchg
jp
cmp
xlat
xchg
insb
mov
cld
and
sbb
xor
xchg
cmp
sahf
insl
jne
loopne
adc
mov
adc
insb
xor
mov
mov
pop
sub
fistps
fisttps
data16
lea
dec
jns
imul
nop
pop
dec
add
lret
sub
dec
mov
push
call
cmpsb
idivb
jb
cmp
cmpsl
movsl
push
mov
or
mov
xchg
cmp
in
aas
aad
fwait
pop
jge
adc
outsl
dec
jle
push
inc
fs
jl
push
cmc
pop
inc
scas
cld
inc
or
mov
cli
and
sbb
jo
adc
pop
and
xor
jmp
push
xor
inc
xor
and
in
nop
xor
inc
cmp
fiadds
mov
sub
fistpl
gs
cmp
nop
loop
std
fs
xor
sbb
cmp
mov
stos
cmp
fdivl
outsl
and
ss
cmp
iret
sbb
push
push
pop
xor
dec
sub
push
add
push
test
lret
lret
push
xor
lcall
ret
lret
xchg
cmp
add
int3
out
inc
arpl
cmp
mov
gs
push
and
xor
ret
pop
icebp
add
in
out
xor
arpl
iret
nop
orb
repz
or
iret
std
xor
rcrb
mov
mov
inc
int
lea
adc
cli
enter
mov
mov
ffree
fnstenv
xorl
pusha
push
or
pop
lock
jg
cmpsl
push
outsb
lods
aad
js
pop
arpl
xchg
pop
mov
test
aam
ljmp
mov
dec
and
int
stc
sar
scas
popa
je
xchg
jmp
lret
sahf
test
ret
fstpt
mov
mov
fdivrl
ja
mov
cli
movsl
jle
fnstenv
lret
imul
xchg
mov
or
cs
iret
cmpsl
imul
aas
cmpsl
insb
xor
cmp
mov
rolb
scas
xchg
push
jg
fsubrl
sub
push
and
pop
mov
mov
shlb
ret
dec
fnstenv
dec
shll
inc
xor
or
sahf
or
in
js
aas
adc
ja
jbe
in
lods
sub
push
mov
iret
ret
das
jmp
mov
pop
mov
cmp
sar
mov
dec
mov
adc
push
rcl
lods
fdivrl
fists
xchg
mov
push
repz
pop
push
cli
sub
pop
das
out
in
cmp
add
enter
push
xor
mov
test
adc
jecxz
pop
sbb
ret
mov
push
inc
test
push
popf
add
pop
push
pop
ret
jmp
jo
cli
push
jg
fdivrl
outsl
mov
pusha
test
fildll
dec
push
filds
outsl
and
out
dec
mov
fldl
cmp
adc
clc
aad
sub
loop
sbb
fidivrl
scas
mov
je
aaa
cmpsl
stos
sbb
aas
aaa
sbb
mov
das
lahf
fmull
adc
mov
and
add
mov
test
pop
icebp
jns
mov
lret
ret
adc
dec
push
aaa
push
fwait
add
addr16
cmpsl
sub
xor
or
sbb
lods
insl
iret
gs
cmc
sbb
dec
jno
push
sub
stc
cmp
fisttps
sub
mov
in
push
mov
dec
scas
sti
mov
xchg
insb
pop
add
fnop
jg
lods
xchg
fistps
or
inc
jne
out
or
xor
cmpsb
arpl
sbb
sbb
xchg
insl
inc
xchg
mov
cmp
mov
insl
stc
out
cltd
call
sbb
ds
sti
xorb
repz
inc
mov
nop
inc
inc
std
or
ljmp
and
sti
inc
xchg
adc
jmp
sahf
xor
or
xchg
dec
inc
out
or
in
je
inc
sub
jecxz
xor
lahf
cmc
imul
xorb
add
inc
jg
or
gs
lods
mov
imul
in
mov
mov
sub
ja
fwait
std
orl
jbe
sub
outsb
xchg
pusha
mov
inc
dec
or
repnz
sub
mov
rolb
imul
mov
sub
xchg
cmp
divb
stos
push
pop
test
aas
loopne
lock
xchg
or
jne
add
fistpl
mov
dec
mov
xchg
sub
mov
sub
mov
jae
lcall
mov
iret
adc
add
and
inc
aam
xchg
fdivrl
outsb
dec
mov
inc
fidivrs
dec
push
mov
cmp
frstor
mov
xor
pop
adc
idivl
pusha
lds
sarl
mov
mov
out
mov
loope
cmp
cmp
sbb
push
gs
dec
mov
pop
cmp
fnstenv
ja
out
out
push
push
sub
out
jno
and
sub
fcmovb
cs
pusha
sbb
mov
cs
sbb
pop
hlt
dec
sbb
sub
nop
ror
adc
add
mov
inc
mov
in
popa
negb
lcall
sbb
jecxz
lods
mov
xchg
cmp
nop
out
dec
aaa
jp
adc
loopne
test
adc
pop
pmulhw
fstpl
fs
sub
nop
mov
hlt
and
mov
pusha
or
push
mov
inc
loop
ret
sbb
mov
fwait
adc
cmp
jp
in
cwtl
push
push
das
rcrl
test
and
push
jge
xchg
or
push
mov
push
ss
ret
cmp
cmpsl
xchg
jae
xor
push
pop
les
sbb
dec
mov
iret
lea
pop
cmpsb
mov
aad
js
pop
or
jl
dec
and
cli
xchg
gs
sbb
add
mov
test
sub
mull
jmp
sbb
mov
outsl
cmpsl
iret
lret
outsl
out
sbb
in
les
repz
test
mov
pop
pop
dec
mov
xchg
mov
bound
xor
mov
js
pop
je
jle
pop
mov
test
xchg
pushf
gs
sub
mov
in
push
and
or
stos
cmp
inc
xor
push
jl
or
mov
sahf
push
shrb
lods
mov
mov
dec
stos
xorb
daa
jnp
cmpsb
ret
cwtl
or
cmp
addr16
sub
mov
arpl
pusha
fsubp
pop
repz
mov
jae
dec
popf
fdivp
sbb
cmpsl
jne
leave
adc
cmpsb
push
fldenv
pop
idivb
cli
jp
adc
sbb
push
movsl
rcll
pop
test
fsubl
fsubp
inc
je
js
cmc
lret
call
enter
and
xchg
mov
jle
push
xchg
push
shll
pop
in
dec
xchg
xchg
arpl
imul
cli
cmp
xchg
mov
pop
jle
dec
icebp
jp
push
fmul
add
mov
fcoms
outsl
xchg
pop
mov
and
lods
jle
xor
fcoms
inc
add
mov
sub
pop
push
sub
incl
add
jp
cmp
push
add
cmc
push
push
cltd
pop
pop
add
or
push
mov
push
cwtl
mulb
pop
pop
xor
aaa
cmp
mov
sub
lods
enter
pop
testl
insb
rclb
bound
ficompl
ljmp
or
xchg
push
or
mov
adc
lret
int
ror
or
jae
xor
cmp
inc
mov
inc
insb
mov
popa
iret
dec
jecxz
fs
bound
int
pushf
sbb
or
loope
cmpsl
shr
lods
aas
fisttps
add
insl
mov
stos
call
leave
push
rcrb
shll
iret
inc
ret
cltd
shrb
stos
sbb
pushf
cs
sbb
push
dec
loope
clc
loope
add
loop
xchg
test
repnz
push
jne
fimuls
mov
or
jmp
data16
icebp
in
mov
fistpl
lods
insb
mov
mov
test
jae
adc
das
int3
rcrb
pusha
std
mov
bound
enter
aad
lahf
xor
int
js
inc
fwait
sbb
mul
test
mov
in
pop
and
pop
inc
jno
icebp
fisubs
inc
adc
mov
xchg
mov
pop
xor
aad
inc
lea
ror
ja
mov
sarb
mov
mulb
pop
incl
sub
mov
outsl
cwtl
dec
mov
xchg
jb
std
cli
cmp
das
xor
clc
pop
jmp
hlt
cmpsb
mov
mov
inc
mov
add
pop
mov
stc
xchg
sub
sbb
sbb
jnp
sahf
pop
out
mov
push
or
dec
aas
adc
pushl
mov
pop
push
call
scas
add
lods
push
xor
in
or
movsl
or
sbb
cs
sub
push
sub
in
out
js
jnp
inc
dec
cmp
int
cmp
xor
push
ds
movsb
mov
or
mov
push
xchg
or
push
push
test
push
cmpsl
pop
lcall
ficompl
daa
pop
iret
mov
xchg
test
shll
lahf
and
mov
mov
popa
lea
sbb
imul
sbb
xchg
out
dec
or
subl
andl
sbb
mov
xchg
pop
mov
in
cmp
es
add
pop
mov
pop
dec
mov
pop
iret
imul
cmp
fcmove
cmp
imul
lss
sub
out
xchg
fisttpll
aaa
gs
out
dec
cs
jae
mov
or
outsb
in
dec
das
lret
sub
jle
test
js
xchg
adc
ss
pop
lea
and
xchg
movsb
push
ds
xchg
cmpsb
dec
in
xlat
mov
add
xchg
sbb
add
xchg
cmp
frstor
cmp
push
hlt
fidivrl
and
movsl
xor
jl
dec
xchg
jne
jno
cmc
or
xchg
nop
ljmp
xchg
xor
into
mov
sbb
cmp
pop
xor
repz
out
add
lock
adc
iret
std
jo
push
mov
outsb
adc
mov
jl
xor
xlat
imul
into
xor
mov
pop
and
jg
sbb
mov
outsl
imul
lret
lds
and
adc
dec
xchg
cld
jg
iret
dec
mov
ret
adc
std
stos
pop
cmp
jge
push
jp
add
inc
or
mov
scas
hlt
sub
out
insl
popl
pop
fimuls
mov
cmpsl
sbbl
clc
fisttps
imul
aad
sahf
jl
icebp
je
imul
pop
xor
ficoms
testb
and
jno
adc
mov
mov
cmp
pop
hlt
sub
shl
setnp
fildl
cwtl
sub
addb
ss
pop
imul
and
arpl
es
push
mov
sub
sub
xor
lods
fidivs
xor
stos
shlb
inc
or
pop
in
fldcw
pop
lahf
mov
push
call
aas
daa
mov
faddl
mov
call
scas
adc
fcmove
cld
jo
lcall
push
and
adc
dec
mov
push
jmp
out
cmp
adc
pop
shrb
add
pushf
or
and
jecxz
sbb
dec
cmpsb
fcom
insl
in
and
sbb
out
jae
lods
fdivrs
push
cmp
mov
jg
push
fiadds
std
mov
pop
push
gs
xor
pop
decl
or
sahf
cmpsl
inc
dec
lods
jne
and
or
jne
add
popa
mov
and
mov
out
ret
stc
psubb
adc
inc
aas
mov
mov
mov
mov
flds
jns
pop
pop
adc
xlat
mov
sbb
outsl
clc
xor
lret
ljmp
push
cld
repz
dec
popf
fs
xchg
cmpsb
mov
jge
xchg
lcall
jo
jp
movsb
fsubs
std
dec
mov
cs
push
push
xchg
jb
pop
push
add
test
dec
xchg
scas
or
or
xchg
fldcw
mov
stc
mov
nop
notl
xor
leave
add
adc
cmc
push
daa
and
push
xor
das
cld
iret
int
stos
sti
jmp
test
or
dec
mov
mov
mov
add
addr16
shlb
dec
leave
mov
push
jne
cltd
and
mov
cmp
mov
xlat
loop
lret
jne
leave
jle
and
stc
cmp
push
lock
inc
clc
loopne
fidivrl
movsb
int
popf
int
sti
or
jne
rcll
sub
lods
aad
outsb
and
std
aas
adcb
fsubrl
jne
loop
mov
addl
fdivl
dec
push
inc
mov
testl
rclb
push
gs
sbb
cmpsb
or
icebp
fsubp
into
sbb
adc
mov
push
cmp
ss
mov
or
outsb
adc
data16
mov
addl
fcompl
es
aad
add
mov
sub
dec
into
lods
ret
enter
mov
push
push
mov
lods
mov
sti
add
or
mov
fdiv
push
push
xchg
jnp
mov
out
jae
jmp
sbb
fnstsw
stos
hlt
movb
out
lcall
out
daa
lea
jecxz
mov
adc
and
jno
lods
ret
leave
pop
cmpsb
push
xchg
jno
rcrb
movsl
in
aas
mov
mov
lahf
loope
dec
call
daa
das
movsl
pop
lcall
loop
cmp
gs
xlat
sbb
insl
cli
sahf
pusha
jae
sbb
lds
mov
js
fwait
xorb
shrl
xor
ds
cmp
leave
orb
rep
imul
loop
stos
aas
xchg
daa
cmpsl
aas
inc
cmp
fwait
push
rcrb
scas
push
cmp
in
add
lock
cwtl
dec
mov
adc
push
lock
inc
or
ds
movsl
mov
dec
cmp
sbb
mov
mov
jae
insl
cmp
sbb
add
mov
or
cli
mov
sub
outsb
pop
loopne
shr
shll
gs
scas
popa
in
call
ja
rcrl
std
loope
enter
pop
adc
or
pop
jb
stos
cmpl
cmp
dec
cmp
fucom
out
adc
movsb
sub
sub
jae
scas
mov
sahf
lods
hlt
aas
mov
add
add
pop
insl
add
mov
inc
imul
inc
in
sub
push
mov
out
pop
dec
out
aas
or
push
lods
call
and
and
mov
leave
mov
push
adc
decb
jb
sbb
fsubp
add
mov
cltd
rcrb
pushf
out
movsb
dec
stos
sub
aam
cmpsb
movsl
inc
or
jo
jbe
lret
mov
inc
mov
cmpsl
cmp
cmpsb
stos
cmpsl
xor
mov
adc
fnstcw
sbbb
mov
in
and
nop
push
push
jbe
setge
aad
lret
fsubr
scas
xor
mov
shr
mov
sub
cmp
inc
andl
arpl
sbb
clc
insl
loop
and
and
mov
enter
or
in
sbb
frstor
and
addr16
sbb
xchg
mov
xchg
mov
lret
jns
leave
cmp
xor
jbe
sub
mov
imul
cmp
enter
ret
mov
inc
js
jl
fcomps
mov
push
nop
icebp
push
sub
mov
jne
or
imul
fcompl
fsts
cmpl
xchg
lock
test
or
dec
cmc
adc
xchg
std
adc
add
and
push
lods
push
call
cs
push
dec
imul
cli
in
or
dec
int
sbb
mov
pop
mov
int
in
add
xor
dec
jo
popa
pop
xor
inc
pop
cmp
and
icebp
orl
adc
andb
in
mov
push
xchg
in
int3
ret
inc
cmp
dec
or
enter
adc
xlat
inc
jge
mov
xor
scas
divb
stos
movsl
push
bound
fisubrs
adc
outsb
and
push
insl
sti
xor
adc
jg
jo
jle
movsl
dec
cmp
shrb
adc
xor
inc
cld
jnp
imul
jnp
inc
push
sub
mov
mov
sahf
out
sti
push
jg
in
xchg
lret
popa
movsb
addr16
sbb
jno
fs
pop
out
ret
inc
lds
vmovdqu
push
fwait
push
faddl
sub
mov
push
std
repz
sbb
xchg
xor
insl
push
jnp
mov
sub
out
xor
in
sbb
movsb
inc
shll
or
loop
and
push
xchg
dec
cmp
push
loopne
pusha
and
sbb
jmp
dec
jne
inc
push
sbb
adc
add
hlt
lret
ljmp
test
push
jp
push
sbb
adc
add
hlt
lret
ljmp
test
push
jp
imul
or
add
hlt
lret
sar
ljmp
mov
inc
pop
push
dec
bound
outsb
xor
and
xchg
mov
sbb
cli
les
imul
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
negb
dec
inc
jp
push
sbb
sub
sub
fs
cli
ljmp
xchg
stos
pop
jbe
inc
jp
push
sbb
or
cmp
dec
out
test
sti
ljmp
xchg
stos
pop
jbe
inc
jp
push
sbb
or
cmp
sub
jmp
cmpsb
fstl
push
jbe
or
push
shrd
and
ss
mov
and
roll
outsb
xor
pop
xor
pop
out
or
xchg
or
pop
mov
mov
outsb
sti
jecxz
ja
dec
test
lods
and
les
fisubl
adc
add
xlat
jbe
outsw
mov
or
xor
lret
xor
inc
mov
push
iret
pushf
stos
fwait
lcall
into
xchg
ds
imul
mov
ljmp
imul
shll
push
incb
sbb
and
mov
pop
adc
xchg
jbe
inc
jp
push
sbb
or
cmp
sub
lret
ljmp
xchg
in
adc
xor
cmp
sub
push
jle
pop
jae
mov
mov
shr
cli
int
enter
ss
or
push
dec
push
insl
outsb
add
mov
mov
in
inc
sbb
fisttps
sbb
sub
or
cmp
sub
lret
ljmp
xchg
stos
pop
jbe
inc
jp
push
sbb
or
cmp
sub
lret
ljmp
xchg
stos
pop
jae
lret
adc
inc
ret
mov
je
xchg
mov
test
inc
stos
fwait
shrb
pop
adc
popf
cmpsl
inc
inc
pushf
mov
sti
mov
dec
mov
and
repz
pop
clc
shll
pop
repnz
pop
aas
sub
xchg
push
ds
push
sub
xchg
add
pop
sub
in
xchg
cwtl
xor
cmp
mov
out
shrl
aas
mov
js
fs
inc
cmp
and
fwait
jl
imul
jge
aaa
xor
pcmpeqb
and
pop
inc
cs
aad
imul
jns
push
push
sbb
jp
icebp
xchg
rorl
fistl
and
out
adc
sbb
push
mov
inc
std
inc
lret
cltd
pop
cmp
aas
mov
fistl
mov
jb
adc
jle
jg
mov
sti
sahf
xor
mov
and
pop
sub
push
adc
pop
std
jl
inc
out
outsl
jge
inc
inc
loope
orl
cld
cs
movsb
pop
and
cmp
test
jmp
ja
jge
jnp
cmp
sbbb
xor
aad
testl
fwait
adc
pusha
jae
sbb
sbb
sub
pusha
dec
js
or
or
sub
nop
addr16
add
cmp
push
mov
popa
adc
sarl
xchg
test
jno
pop
aas
add
cmp
adc
les
pop
imul
cmpsl
mov
and
nop
andl
enter
mov
xlat
movsb
lods
jno
int
add
adc
loope
lret
jb
sbb
cmpsb
mov
es
jp
dec
jnp
lahf
leave
nop
add
mov
push
loop
inc
data16
pop
pop
dec
xor
sahf
sub
push
mov
cmp
cmp
xchg
sub
add
js
and
and
mov
push
cmpsb
inc
xchg
loop
pop
movsb
push
pop
dec
insl
sahf
sub
dec
out
in
pop
lods
pop
cmp
push
enter
adc
out
dec
jbe
es
add
das
dec
cltd
pusha
jno
shl
lret
mov
daa
pop
push
mov
jae
out
xor
test
outsb
lcall
bound
cmpb
cmpsb
mov
push
das
mov
pop
mov
ja
aam
add
out
cmp
xor
xor
sarl
xor
sub
push
pop
repz
cmp
inc
mov
leave
and
xor
sahf
ss
nop
insb
bnd
fsubrs
popf
pop
mov
xchg
sub
fisubs
and
cs
add
sbb
dec
cwtl
int
adc
sbb
repnz
movsb
lret
pushf
adc
icebp
iret
imul
mull
pop
jp
xor
cli
pop
sahf
clc
imul
incb
nop
xor
cld
sbb
jle
jo
sahf
f2xm1
loope
xchg
mov
sbb
or
outsb
mov
inc
movsl
loop
mov
out
sub
sub
xorl
xchg
or
jle
fildll
pop
mov
shrl
push
adc
into
popa
stc
in
jbe
dec
sub
test
das
push
or
mov
inc
add
or
daa
xchg
inc
outsl
loopne
jl
out
xor
popf
jg
jae
rclb
mov
jle
mov
xor
cmp
push
xchg
xor
fidivrs
inc
icebp
addr16
cmp
sahf
mov
mov
xor
rclb
pop
lahf
mov
pop
jmp
and
rcrl
neg
pop
push
or
pusha
mov
xor
sti
jo
loop
incl
icebp
xchg
or
pushf
jle
hlt
jmp
sbb
mov
loope
pop
push
ljmp
sbb
test
sbbb
cwtl
movsb
testl
es
fdivrl
bound
xchg
mov
in
fmull
add
scas
inc
mov
lock
adc
pop
mov
rorb
push
cmp
inc
in
mov
push
in
cld
nop
ja
push
jne
jno
inc
push
enter
mov
hlt
out
ficomps
insl
jl
cli
mov
mov
clc
mov
rorl
stos
aam
jle
jl
nop
test
shl
dec
cltd
stos
adc
lret
rorb
out
cmp
mov
aam
mov
rcrl
adc
or
lock
push
jmp
dec
dec
mov
lea
jo
mov
sbb
ss
sub
pop
sub
aas
adc
cmpsl
repz
test
xlat
call
or
mov
shll
cs
xorb
push
mov
inc
cmpb
add
or
test
in
mov
or
mov
jg
shlb
adc
dec
pop
jb
jb
mov
in
sbb
stc
enter
dec
sbb
or
mov
lock
out
add
push
test
xor
je
cmp
inc
jne
jecxz
test
adc
and
cmp
jno
pusha
lahf
cmp
fisttpll
rolb
dec
sub
mov
cmc
cwtl
enter
test
dec
adc
mov
jno
jbe
jge
sub
sbb
pushf
cmc
mov
xlat
mov
int
xlat
cmc
mov
ds
sbb
loop
push
fiaddl
jmp
push
jle
addr16
je
xchg
fimull
xlat
mov
xchg
cmp
jne
pop
lret
and
push
push
add
div
xor
ja
into
bound
jle
mov
ficompl
and
sbb
xor
sahf
sbb
repnz
inc
inc
in
mov
in
or
pop
mov
out
or
comiss
int3
add
nop
pusha
xchg
or
add
jmp
sbb
xchg
cmp
mov
dec
mov
decl
out
xorl
test
dec
lods
ss
jno
jmp
or
or
fwait
out
cmpl
std
jle
mov
fwait
pop
fbld
mov
inc
loope
push
test
inc
int3
ljmp
int3
pop
mov
out
sbb
repnz
mov
sub
or
sub
push
push
mov
mov
dec
jge
out
loopne
mov
mov
loop
jae
jne
adc
notrack
fldcw
pop
dec
imul
jb
inc
mov
lea
mov
xchg
lock
push
or
add
arpl
sub
repnz
ret
hlt
mov
sbb
mov
add
mov
or
shrb
cmp
sbb
push
sub
out
cmp
jo
mov
test
sub
popf
dec
inc
and
test
inc
imul
adc
inc
sub
out
test
outsb
dec
fcmovu
ss
shrb
xor
dec
mov
or
pop
sub
cwtl
mov
xor
nop
call
es
adcl
testl
mov
and
sub
into
aas
je
stos
jg
xchg
dec
repnz
pop
xor
jge
std
pop
out
push
and
sbb
jnp
fdivl
fadds
pushf
mov
add
test
or
jns
cmp
stos
sub
mov
mov
push
xor
sahf
cmpsl
lods
pop
jns
mov
pop
mov
cs
in
xchg
nopl
clc
test
das
add
mov
mov
cmp
pop
aas
dec
imul
addr16
loopne
bound
fistl
adc
xchg
leave
outsb
jge
pushf
or
mov
jnp
ja
adc
mov
xor
pop
cmp
fs
cmpl
pop
jne
hlt
cmc
stos
inc
jae
mov
mov
adc
cld
mov
dec
or
nop
bnd
xor
and
jecxz
mov
lea
or
xchg
mov
pop
add
jecxz
inc
aam
or
in
leave
pop
lcall
cmp
fdivrl
lea
aaa
outsl
adcl
mov
aam
mov
jg
aas
clc
or
jbe
and
or
cmp
out
jecxz
or
cli
pop
or
xlat
mov
xchg
bound
fisubrs
je
and
shll
inc
bound
inc
sbb
dec
mov
pop
jecxz
jge
cmp
pop
repz
enter
repz
add
add
mov
in
aaa
lahf
mov
popa
xor
pop
sub
or
int3
fdivr
or
mov
lret
movsl
jl
pop
mov
mov
add
bound
and
rol
aam
jnp
sub
jle
push
subb
jge
pop
outsl
repz
sbbb
cmp
sub
bound
dec
sub
stos
mov
movsb
in
xor
adc
gs
jge
pop
pop
in
pop
lcall
ja
jno
clc
cmpsl
or
jo
xor
push
mov
fisubrl
jg
filds
loope
cmp
rolb
jmp
sahf
sub
push
pop
movsb
dec
movsb
xor
les
mov
ljmp
ds
or
decl
mov
dec
dec
cmpsl
adc
cmpsb
shrl
jg
ss
icebp
testb
xchg
jl
test
add
ja
add
inc
test
cmp
add
adc
add
or
cli
add
cmp
sub
icebp
xorb
mov
daa
fnstsw
inc
jmp
jbe
roll
xlat
pop
push
or
mov
mov
jns
cmovle
xor
push
adc
inc
xor
cmp
lods
mov
push
mov
jb
jb
mov
fldcw
shr
xor
movsb
jb
xor
aas
cmp
clc
jle
pop
pop
mov
cwtl
int3
dec
xor
pushf
mov
mov
adc
mov
cmp
dec
pop
inc
mov
loope
mov
mov
stc
or
cmc
aad
push
push
test
mov
xchg
imul
ds
int
adc
icebp
mov
test
push
sub
orb
jecxz
lret
std
popf
shlb
mov
imul
mov
icebp
sbb
inc
mov
nop
mov
ljmp
cmpsl
mov
addr16
in
iret
movb
cs
pop
cmpsl
ds
adc
inc
es
mov
xor
xchg
and
add
mov
jmp
xor
sbb
rcpps
incl
rcll
inc
sub
outsb
push
cmp
aas
mov
les
fisubl
test
ds
push
sub
out
inc
cli
mov
arpl
sarb
gs
addb
pop
aad
aaa
mov
xor
add
adc
mov
loopne
push
aas
add
push
jmp
pop
inc
lea
push
lea
sub
xor
jb
mov
jp
cs
fwait
subl
js
xchg
pop
mov
inc
mov
aad
sbb
or
ret
push
fldl
sub
add
std
stos
leave
push
xchg
xchg
cmpsb
sub
repz
in
mov
sarl
scas
adc
adc
or
lret
lods
xchg
daa
xchg
add
sbb
imul
and
out
inc
lods
fldcw
jne
ret
adc
pop
sbb
add
pop
xchg
lods
pushf
cmpsb
leave
xor
pop
mov
rclb
rcrl
or
push
xor
cmp
fstpl
adc
fists
in
mov
cmp
outsb
aaa
adc
mov
push
dec
cmp
stos
pop
pushf
adc
repnz
cltd
inc
pushf
test
inc
xor
es
loop
test
jecxz
cmp
mov
adc
xchg
es
popa
jmp
int
cmc
xchg
jmp
mov
imul
jb
adc
mov
lock
test
xor
xchg
movsb
cmpsb
sbb
ljmp
cmpb
sbb
dec
inc
lds
lea
int
and
adc
in
subl
cltd
cmp
movsl
into
out
mov
fmulp
stos
negl
in
outsb
popa
neg
insl
mov
stos
add
rorl
fiadds
pop
add
mov
mov
xor
hlt
pop
ljmp
jl
outsb
or
fsubrl
ljmp
pop
xchg
dec
jae
orl
or
les
lret
lcall
jl
inc
jp
es
dec
push
ja
mov
xchg
shl
inc
mov
insl
clc
lods
dec
es
add
and
testb
jmp
xlat
fnstsw
add
push
dec
add
pop
push
xchg
icebp
adc
lret
clc
inc
js
pop
arpl
repz
je
pop
daa
cmp
inc
iret
or
cwtl
push
popa
push
lods
sbb
lea
cmp
sbb
xchg
dec
outsl
stos
pop
insb
mov
addr16
cmc
push
mov
mov
add
or
addb
idivb
adc
jbe
leave
adc
loop
jl
stc
push
mov
lock
into
push
xchg
mov
lds
sbb
lods
dec
int3
mov
jl
int
fcomi
push
mov
subb
pop
adc
dec
jo
inc
stos
lock
push
lret
mov
sub
inc
push
ds
sbb
xchg
and
imul
stc
sub
xchg
mov
sbb
inc
loope
xchg
sub
xlat
xor
add
data16
loope
inc
mov
mov
repnz
inc
ret
gs
xlat
lods
loope
pushf
cmp
inc
cmpsb
mov
hlt
shlb
ret
xchg
add
ficoms
jnp
adc
fsubl
sarb
iret
xchg
push
mov
xchg
aas
mov
lret
daa
femms
cwtl
sub
test
out
sbb
dec
dec
rclb
cmp
in
mov
call
gs
xchg
add
jmp
push
mov
enter
mov
fwait
cmp
lods
pop
mov
push
and
lds
pop
enter
cmp
icebp
push
sub
pop
lahf
fnstenv
icebp
leave
and
push
mov
shlb
jbe
or
outsl
push
or
test
xor
mov
repz
jp
adcb
out
repz
jmp
mov
or
testb
jge
clc
jno
outsb
cld
inc
push
int3
xchg
add
pop
jne
jnp
sub
add
xchg
leavew
add
pop
fcmovne
xor
and
or
cmc
push
movsl
xchg
xchg
push
loope
in
mov
sub
push
pushf
mov
mov
subb
mov
lahf
pop
cmpl
mov
and
scas
enter
or
mov
inc
jns
lret
mov
push
lock
jge
rcl
mov
cmp
loopne
xchg
aaa
fistpll
insb
ret
addr16
pop
std
xor
dec
add
xchg
popf
int3
rcrl
inc
out
cmp
flds
and
inc
shlb
mov
in
mov
in
int
mov
repz
xor
daa
xchg
cmp
dec
cmp
movsb
mov
mov
cmp
or
imull
or
push
int3
addr16
xlat
push
add
xor
popf
mov
shlb
test
jp
lahf
nop
ja
pop
push
push
and
andl
inc
mov
bound
xchg
fs
push
xchg
sbb
xorl
push
dec
lods
xor
push
fsubrs
sub
or
incl
negb
hlt
pop
movsb
pop
jle
lds
scas
cmp
push
testb
cmp
lds
xchg
push
push
popa
test
cli
inc
and
lock
sbb
idivb
in
sub
stc
jg
ret
xchg
sbb
icebp
bound
call
or
insl
and
inc
sbb
jg
stc
cmc
andb
imul
bound
cs
xlat
movsl
mov
xchg
mov
std
out
push
push
xchg
sbb
mov
or
adc
cmp
pop
add
xchg
sbb
cltd
ror
cli
jb
scas
adc
inc
ss
stos
xor
loop
cmpsl
push
scas
mov
subl
jne
jb
push
lahf
jnp
imul
jmp
inc
xchg
jp
xor
nop
std
mov
add
mov
rol
ret
insl
mov
in
mov
mov
mov
mov
or
inc
xchg
jecxz
pop
mov
aaa
push
adc
out
push
and
jns
pop
xchg
imul
xlat
xchg
push
or
scas
ss
mov
loopne
cmpl
cmp
fadds
test
xor
in
scas
test
mov
and
dec
mov
or
fidivrs
stc
push
sti
and
mov
rcr
out
ljmp
loopne
movlps
dec
scas
pushf
inc
fnstsw
fstpl
loopne
test
lret
aad
mov
lret
mov
xchg
in
adc
sysexit
adc
sub
cmp
xor
mov
push
xlat
outsb
lret
xchg
cmpsb
push
shlb
pop
push
and
xchg
mov
loopne
sbb
jns
lods
or
sti
mov
incl
xor
stos
es
into
inc
xor
and
test
push
push
icebp
fnstenv
mov
xchg
dec
xor
imul
fwait
idivb
mov
pop
outsb
in
cmp
cli
leave
xchg
out
test
hlt
push
pop
int
mov
pop
es
ret
add
sbbl
out
xorb
or
hlt
inc
mov
jns
inc
in
clc
push
dec
jbe
mov
add
sub
sbb
dec
rorl
in
in
adc
mov
add
push
sbb
push
xchg
enter
mov
fbstp
sbb
in
cltd
test
mov
push
pop
cmp
lahf
inc
mov
es
mov
pop
add
jmp
push
idivb
inc
lock
jl
in
and
pop
lret
lret
test
loop
or
test
popf
lock
adc
mov
mov
lods
nop
out
xor
mov
cmp
sbb
sbb
mov
pop
push
imul
add
mov
and
or
push
jb
inc
int
adcb
xor
mov
xchg
sbb
push
mov
xchg
stos
and
push
mov
scas
xchg
in
and
out
push
fdiv
and
data16
negl
clc
movb
ljmp
rcrl
stc
inc
movsb
mov
cmp
cmp
icebp
mov
ror
out
and
inc
mov
fmull
inc
dec
adc
xchg
fisubrs
ss
mov
stc
lret
sub
pop
lret
mov
or
int
mov
mov
push
imul
or
or
mov
lock
out
imul
dec
push
pop
mov
lret
mov
or
pop
cmpl
aam
rol
addr16
mov
inc
jbe
pop
aas
pop
cmp
pop
mov
shll
aaa
xchg
stc
dec
push
cmc
jecxz
fmull
cmp
pop
dec
mov
jnp
pushl
jns
and
mov
sub
arpl
inc
out
push
push
lock
sbb
adc
adc
or
int
int3
fiaddl
scas
movlps
mov
add
sbb
insl
out
cmp
inc
test
add
stc
jbe
scas
cli
mov
jmp
dec
pop
cwtl
mov
xchg
std
jne
cmp
int
fsubl
inc
dec
mov
lds
les
iret
test
sub
pop
cmpsb
jbe
add
pushf
ret
push
dec
mov
pop
lods
mov
fs
jle
push
roll
xor
scas
gs
mov
adc
mov
out
in
push
mov
pushl
push
fs
xor
dec
xchg
popf
sub
nop
pop
fbld
cmp
mov
pop
inc
jb
mov
mov
jno
inc
cmpsb
cmpb
imul
sbb
xchg
dec
inc
dec
scas
push
mov
push
jge
mov
mov
cs
sbb
jbe
test
fmull
add
mov
or
xchg
xchg
shl
or
lret
or
xchg
pop
mov
cmp
mov
xor
lret
sub
pop
pop
fs
lret
lcall
xor
xchg
push
cmp
cmc
enter
loop
cli
mov
xchg
xchg
pop
pop
push
mov
xchg
push
add
and
fildl
ret
loop
push
push
sbb
or
cmp
sub
lret
ljmp
xchg
stos
pop
jbe
inc
jp
push
sbb
or
cmp
sub
lret
ljmp
xchg
stos
pop
jbe
inc
jp
push
sbb
or
cmp
sub
lret
ljmp
xchg
stos
addr16
ja
inc
jp
push
sbb
or
cmp
ljmp
popf
rcll
jne,pt
inc
imul
adc
inc
lock
add
movl
movl
movl
cmpl
jne
pushl
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
sub
cmp
gs
or
cs
mov
dec
jmp
sti
lret
sbb
or
cli
cmp
or
sbb
imul
movsb
stos
jp
push
push
fwait
dec
jmp
sti
sub
sbb
or
pop
cmp
inc
sbb
nop
pop
mov
clc
cmp
dec
test
outsb
bound
imul
imul
enter
jmp
inc
in
inc
mov
scas
xchg
xor
inc
lods
jne
test
sbb
out
jne
xchg
and
mov
adcl
ss
shrl
pop
icebp
mov
leave
jb
scas
into
sbb
outsb
cli
cmp
jge
lcall
pop
xor
stos
ljmp
dec
adc
in
jbe
sub
pop
popa
daa
and
dec
pop
pop
jbe
pop
inc
cmp
push
stc
aas
sub
xchg
add
sti
sbb
ljmp
jae
fisubs
xlat
push
cli
outsl
lret
divb
lret
sbb
imul
sbb
pop
fwait
jbe
push
sti
lret
add
cmp
push
test
jle
pop
pop
xor
cs
sbb
ljmp
sub
outsb
arpl
mov
jle
sub
repz
mov
lret
jp
jne
sub
mov
bound
jnp
dec
lcall
mov
dec
jmp
sti
sub
sbb
or
cli
cmp
or
sbb
imul
mov
pop
fwait
dec
jmp
sti
sub
sbb
or
cli
sahf
mov
mov
jecxz
je
jns
es
pop
rep
sar
cmp
mov
sahf
adc
outsb
dec
mov
ficompl
adc
xor
scas
out
xchg
insw
fmuls
icebp
sbb
or
add
jmp
je
lret
mov
jge
into
js
popa
sbb
clc
or
lock
adc
test
pushl
adc
ret
dec
lahf
pop
cmp
daa
xchg
imul
push
dec
icebp
test
xchg
pop
sub
gs
mov
and
push
int3
inc
ret
and
inc
stos
xor
rcll
inc
pop
and
addr16
arpl
adcb
dec
es
cmp
or
inc
scas
pop
mov
aad
push
aad
dec
jne
push
cmp
loope
shlb
mov
ljmp
jecxz
push
enter
cmp
xchg
xor
push
inc
lods
cmp
jb
std
push
je
mov
pushl
or
inc
jecxz
add
cmp
push
pop
icebp
sbb
or
or
data16
loop
dec
cmpsl
lods
mov
fwait
shlb
int3
fdivs
or
xor
nop
push
fdivl
sub
push
sbb
aaa
mov
pop
push
into
and
sbb
push
lods
adc
aam
fadd
cmpl
mov
stos
mov
sub
jl
fdiv
jecxz
dec
repnz
out
cmp
mov
loop
fidivrl
mov
imul
aas
pop
adc
fisttps
or
out
push
faddl
repz
xor
inc
test
sub
ss
rcll
sub
frstor
aaa
mov
xchg
jmp
cmpsb
shlb
cmpsl
xor
xchg
mov
pop
loop
stos
aaa
sahf
sahf
cmp
lea
fmuls
cmp
outsl
rorb
mov
add
shll
iret
adc
mov
mov
push
cwtl
mov
out
test
mov
jl
daa
xor
lds
fisubrs
pop
aaa
dec
scas
cli
and
pop
movb
jo
add
sbb
aas
cwtl
mov
sub
sub
cmp
pop
add
mov
mov
mov
inc
repnz
aad
aad
or
jae
pusha
cltd
lea
and
xor
bound
pop
stc
xchg
mov
mov
adc
mov
xor
adc
or
xor
pop
sbb
jno
inc
xchg
cmpb
mov
adc
ja
out
cli
xchg
sar
pop
insb
out
push
out
or
inc
mov
add
xchg
data16
sti
and
mov
pop
imul
shll
fldenv
mov
mov
test
sub
jbe
mov
xchg
mov
xor
and
push
fs
cmp
sarl
cmp
int
jge
loopne
addr16
out
add
scas
mov
pop
jge
mov
hlt
rorb
xor
aaa
jg
push
stc
mov
adc
mov
jp
aad
std
jge
dec
insl
imul
push
sbb
lods
push
pop
sti
mov
loope
jb
cmp
push
shld
dec
xor
clc
mov
or
into
inc
push
jb,pt
arpl
xchg
dec
mov
loopne
push
jge
fs
xchg
aad
push
fcoml
push
jecxz
scas
xor
fwait
mov
jle
push
pop
adc
or
adc
je
xor
js
adc
add
addl
addl
cmp
dec
in
cmc
and
negl
push
inc
add
std
movsb
mov
lcall
mov
decl
loop
dec
sbb
add
outsb
inc
pop
push
outsb
ljmp
adc
sbb
jae
inc
mov
cltd
mov
das
outsb
jp
fwait
orb
repnz
mov
test
xor
pop
lds
xchg
les
and
pusha
pusha
or
imul
test
jbe
aas
dec
and
sarb
lea
pushf
and
or
sbb
cld
out
scas
xlat
mov
aad
xorb
je
rolb
mov
pop
cmp
loope
enter
pop
mov
in
pop
pop
fildll
es
test
and
aad
cmc
or
dec
xchg
lods
push
pop
shrb
mov
sub
xchg
adc
mov
insl
rcrb
add
es
fcmovnu
or
xchg
fnsave
addr16
dec
imul
dec
das
inc
jne
push
mov
jbe
idivb
sub
push
xchg
add
and
push
lods
ljmp
mov
or
movsb
jb
add
xchg
mov
xchg
insl
dec
jmp
xor
bound
mov
or
mov
mov
bound
push
dec
mov
in
mov
lret
adc
sub
jmp
ss
xor
inc
daa
mov
sbbb
jns
mov
jnp
jne
les
outsl
or
xor
jae
mov
int3
lods
cmpsb
gs
mov
sbb
sub
loop
sub
xor
mov
dec
subb
cmp
pop
dec
addr16
xor
aad
jo
out
inc
jns
xor
lcall
xor
inc
insl
push
push
mov
push
mov
leave
inc
mov
cltd
shrb
mov
lea
mov
jne
pop
push
pop
into
add
mov
movsl
out
jp
dec
jl
and
dec
mov
repz
and
loope
leave
pop
dec
sub
gs
xor
pusha
mov
jno
pop
mov
mov
push
and
cmp
loop
pop
call
mov
xor
bnd
cmp
xor
fdivrs
pop
cmpsb
cmp
sub
mov
mov
lahf
cwtl
dec
xchg
add
sub
pop
push
or
cmp
mov
mov
sti
sub
pushl
xchg
dec
out
jae
sti
test
xadd
xchg
data16
enter
or
mov
call
lods
mov
dec
pop
cmp
add
xor
lret
jae
mov
cmp
ds
in
sbb
fsubrs
popa
nop
mov
lock
arpl
adcl
pop
sub
fcmovu
xchg
int3
adcb
jne
mov
aas
insb
enter
jg
fstps
push
mov
xorl
xor
jne
pop
sub
addr16
cmpsb
fisubs
imul
sbb
and
popf
mov
lods
arpl
push
jnp
cltd
adc
sarl
jnp
pop
mov
and
and
lds
fcomps
inc
addr16
xor
lods
sub
into
fucom
jno
pop
jg
es
sub
loope
xor
into
xchg
iret
data16
negb
pop
and
fs
mov
enter
mov
dec
bound
daa
jg
testl
mov
jecxz
mov
mov
pop
into
mov
imul
lock
and
mov
loopne
repz
test
je
sbb
andl
in
and
jo
mov
pop
cmp
push
rcrl
fbld
stos
repz
arpl
mov
push
mov
in
scas
inc
int3
mov
and
aaa
jae
mov
cld
lea
jle
pop
cmp
ds
pushf
pop
mov
inc
lcall
mov
call
stc
sub
outsb
push
bound
pop
jmp
xor
pop
inc
mov
push
cli
notb
mov
stc
stos
addr16
push
sub
enter
jp
xchg
in
imulb
cmp
cwtl
aam
push
es
or
add
cmp
mov
addr16
adc
push
adc
shll
mov
addr16
jg
bound
xchg
subl
mov
push
sub
rolb
adcb
pop
movsb
in
push
fidivrs
inc
mov
outsb
movsl
pop
loopne
xchg
sbb
dec
add
add
mov
inc
cmpsl
mov
push
xor
test
jne
push
int
adc
fisttpll
push
cltd
pop
rcrb
ss
push
ljmp
and
jp
clc
adc
inc
mov
cmp
cwtl
lret
dec
ljmp
sub
adc
and
fdiv
adc
pop
push
push
mov
cmp
mov
lock
adc
xlat
push
fsqrt
movsl
add
dec
clc
dec
push
scas
mov
and
mov
xlat
adc
movsb
movsl
shrl
fwait
push
in
idivb
rorb
mov
int3
icebp
pop
in
icebp
in
std
aad
pop
decb
or
rorl
jmp
push
inc
movsb
cwtl
shl
cs
lds
das
xlat
or
sub
jecxz
out
push
int3
adc
sub
adc
and
mov
jns
in
add
mov
pop
jmp
add
add
pop
xor
testb
aaa
sbb
dec
insl
or
ja
mov
ja
sub
ror
xchg
push
jmp
dec
movsb
js
mov
lock
mov
or
je
popa
nop
and
lods
jmp
mov
add
popa
in
adcb
fisttpl
ret
loop
stos
mov
icebp
adc
decl
outsb
fistpll
out
leave
inc
mov
ret
das
fmuls
mov
sbb
xor
clc
cmpb
add
jns
xor
stos
mov
outsb
lret
ret
mov
adc
mov
adc
mov
jne
lret
sub
decb
jmp
scas
jl
pop
jbe
test
mov
out
sti
lcall
frstor
ret
ss
xchg
cs
sbb
lods
loope
push
xchg
sub
mov
push
hlt
call
inc
and
cmc
and
sbb
inc
sbb
jne
adc
orb
mov
adc
add
or
inc
sbb
jb
test
xchg
mov
lock
cmp
in
aas
mov
arpl
in
call
popf
mov
int3
xchg
incl
push
lods
jb
mov
cld
push
mov
sub
arpl
ds
add
ja
mov
pusha
in
fmul
clc
inc
push
adc
mov
adc
mov
jl
shlb
mov
callw
pop
icebp
or
jge
sub
inc
add
dec
popa
jb
loopne
dec
cs
or
xchg
pop
xchg
clc
sbbl
ds
xor
dec
call
out
xor
mov
imul
push
test
scas
mov
aam
cld
adc
mov
cmpsl
add
mov
pop
int
mov
data16
mov
pop
and
pop
mov
push
sbb
fiaddl
icebp
mov
lds
stos
stos
lcall
insb
dec
mov
cmpsb
pop
pop
in
mov
jmp
lret
mov
cmpsl
push
lret
jno
pusha
pop
and
push
cs
adc
fstpl
mov
outsl
sub
sbb
dec
xchg
mov
outsl
push
pop
or
leave
mov
xchg
loop
rcrl
andl
fst
pusha
jle
adc
pop
fwait
pop
fstp
push
mov
jecxz
icebp
mov
mov
sbb
push
adc
mov
adc
inc
add
cmpsb
mov
mov
leave
aam
mov
fbld
mov
ret
xor
lds
cltd
mov
mov
jecxz
pop
xchg
ret
cli
pop
add
mov
jge
sub
or
rcrl
je
cmp
xchg
stc
daa
popf
inc
sarb
cmp
xor
fidivrl
dec
lret
in
dec
cmp
cs
mov
xchg
cltd
cld
and
inc
pop
pop
pop
int3
inc
sub
push
repz
addr16
test
negl
mov
inc
std
mov
xchg
sub
into
mov
ja
mov
mov
pop
pusha
jecxz
cmc
cmp
mov
mull
sbb
sbb
lea
jg
adc
or
pop
mov
push
loop
fildll
sti
xchg
jmp
mov
in
out
xchg
pop
arpl
push
mov
rcrb
gs
xchg
adc
xorb
xlat
aas
movsl
idivb
push
mov
xchg
fildl
sahf
sbb
bound
and
lcall
cmc
ret
data16
jecxz
mov
bound
popa
enter
imul
mov
sub
in
lods
mov
pop
lret
ret
movsl
jl
ds
mov
icebp
jnp
xor
addr16
bound
xor
cltd
xchg
push
cmp
pop
or
push
js
add
jle
xchg
sbb
and
cmp
push
call
stos
xor
sub
bound
dec
pop
icebp
sub
inc
shll
rol
pushf
xchg
inc
mov
int3
or
xchg
fmuls
adc
cmp
stos
sub
xchg
repz
ljmp
out
xor
ja
push
jne
lock
mov
sub
adc
ret
xchg
aas
mov
xor
adc
cmp
mov
and
repnz
inc
das
lea
sbb
or
pop
les
pop
push
sbbb
jnp
cli
pop
aad
in
movsl
sub
jle
pushf
sbb
test
xor
push
jecxz
lods
sti
cmp
inc
fldl
fistpl
test
lea
fimull
add
mov
xor
push
popa
fstpt
pop
fiaddl
aaa
popa
jmp
shrb
xchg
ja
dec
ficomps
jnp
in
xchg
pop
ss
bound
push
test
shll
dec
or
pusha
adc
leave
insl
cmp
and
cltd
mov
loope
out
ljmp
in
adc
divl
mov
jb
xor
in
pushf
push
jnp
lret
and
out
in
xchg
or
lock
sub
pop
push
adc
in
add
sahf
stc
sbb
adc
and
and
inc
push
jnp
add
fimull
dec
xchg
jae
daa
mov
into
cmpsb
mov
dec
add
add
call
push
les
xchg
xchg
and
jbe
jb
jbe
pop
data16
xchg
stos
enter
std
sbb
stos
xchg
xchg
sbb
js
xchg
pop
test
xor
xor
sub
inc
ja
fwait
loopne
stos
xchg
xchg
mov
arpl
shl
std
or
mov
dec
ds
xor
mov
dec
into
mov
mov
gs
mov
push
pushf
test
insl
push
lret
push
mov
test
or
mov
addr16
mov
mov
inc
lods
fcomp
mov
inc
add
hlt
enter
dec
xchg
jnp
push
arpl
inc
addr16
shll
adc
adc
and
pop
push
les
jno
cmc
cmp
pop
dec
sets
lods
outsl
adc
cwtl
daa
lret
xor
mov
je
add
jo
mov
imul
xchg
xlat
and
cltd
test
aas
mov
mov
aaa
jo
cld
cmp
jmp
xor
jo
sahf
std
jle
xchg
add
and
jnp
xor
imul
or
cmp
jecxz
jns
and
xchg
test
and
xlat
push
pop
movw
or
inc
push
dec
mov
add
mov
out
pop
lret
popa
add
adcb
mov
nop
jnp
xchg
dec
dec
or
or
jge
inc
cmpsl
mov
push
mov
xor
pop
push
jmp
jno
fcmovnbe
pop
jmp
cmp
mov
mov
aaa
xchg
cwtl
adc
or
insb
jbe
aam
pop
mov
in
sbb
test
sbb
test
cmp
aad
fwait
push
dec
ljmp
adc
test
mov
ss
pop
pop
pusha
cmpsl
sub
mov
rorb
jns
inc
push
fsubr
xchg
mov
jge
inc
mov
pop
pop
roll
and
fidivrl
jb
loopne
pop
btsl
xchg
insb
or
ds
cmp
fdivr
and
mov
lds
cmc
dec
iret
sbb
xor
out
daa
jge
push
add
addr16
mov
cld
loop
add
mov
insl
popa
sti
inc
gs
or
pushf
xchg
fldcw
xor
cmp
test
hlt
fwait
push
mov
shll
orps
sub
loop
int
in
fistpll
sbb
fimull
cli
stos
mov
lret
cmpsl
add
push
pusha
icebp
and
gs
ficoml
aad
jbe
aas
fmull
or
sbb
popf
push
jne
mov
shll
mov
xlat
or
mov
arpl
sub
dec
cwtl
pushf
or
dec
popl
and
in
iret
loope
pop
movsl
psubq
push
stc
xor
imul
sahf
cs
sub
icebp
popa
lret
xchg
pop
lcall
inc
cltd
fs
xor
movb
or
rcrl
in
ret
fidivrl
subl
out
in
dec
imul
sub
mov
faddl
movsb
aaa
imul
and
push
cmp
enter
mov
mov
and
jle
sub
jb
xor
call
daa
jb
stos
test
out
cwtl
testl
inc
mov
repnz
adc
mov
mulb
out
pop
mov
push
orl
adc
pop
test
fwait
mov
mov
je
add
inc
lahf
ja
push
test
xor
sub
mov
xor
shl
and
pop
cmc
mov
cmp
lock
and
lret
pusha
mov
push
and
dec
add
add
sbb
adc
lds
cmp
mov
xor
test
aam
decb
movsb
scas
iret
fs
aaa
pop
int
mov
xor
fisubrs
mov
rolb
inc
adc
push
mov
mov
test
movntq
leave
jae
pushf
cmp
shlb
dec
ljmp
loopne
add
repnz
push
mov
test
cmc
or
inc
xchg
rcl
jmp
pop
into
mov
adc
test
cmp
sbb
xchg
xchg
jecxz
insl
cs
lret
sbb
push
fs
ljmp
and
hlt
jnp
or
pop
xchg
mov
shrb
jmp
cmp
sti
movsl
clc
inc
push
out
test
out
add
ss
lcall
jbe
out
mov
pop
push
xchg
es
push
or
mov
and
adc
imul
sbbb
jno
pop
test
ja
jmp
fistps
adc
cmpb
daa
add
mov
enter
stc
jae
repnz
fadd
icebp
add
les
cltd
loopne
mov
rclb
jecxz
jb
xor
insl
cltd
movsl
xor
push
outsb
xor
daa
add
mov
jo
pop
mov
call
adc
dec
icebp
jbe
jl
push
sub
xchg
cltd
add
lods
inc
cltd
repz
lods
in
sub
inc
adcl
add
sahf
lods
dec
lret
pop
rol
sbb
popf
imul
andb
inc
loope
or
movsl
and
mov
jge
jnp
pop
addr16
lock
dec
lea
jne
gs
iret
xchg
aaa
loopne
movsb
lret
stc
int
push
subb
push
sbb
and
repnz
cmp
add
movsb
fwait
ret
pushf
push
mov
cmp
dec
aad
push
mov
xchg
inc
and
xchg
pop
cltd
mov
test
movsb
out
jnp
bnd
inc
push
sub
testb
jl
out
mov
ljmp
loop
ret
lret
sub
add
adc
sbb
enter
and
add
test
adc
cli
jp
fdivrp
inc
mov
push
daa
push
or
cmp
sbb
dec
push
push
lahf
dec
xor
lahf
test
jg
adc
fisubrs
mov
stos
into
mov
aad
mov
imul
sub
repnz
loopne
pusha
adc
mov
subb
aam
imul
lods
jecxz
lret
and
lock
shlb
mov
scas
popf
je
push
xchg
xchg
stc
fisubrl
lods
pop
nop
test
stos
sub
sub
jmp
cmp
mov
push
add
popa
add
and
shll
call
mov
std
in
scas
or
mov
adc
dec
aas
mov
jl
das
int3
mov
cld
ljmp
jnp
dec
lcall
mov
dec
jmp
sti
sub
sbb
or
cli
cmp
or
sbb
imul
mov
pop
fwait
dec
jmp
sti
sub
sbb
or
cmp
or
sbb
imul
mov
pop
fwait
inc
jmp
sti
sub
adc
out
sub
cmp
or
sbb
dec
sbb
stos
test
cmp
xor
and
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
cld
repz
and
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
hlt
add
mov
add
test
add
jl
add
je
add
insb
hlt
add
fs
add
pop
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
int3
hlt
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
cmc
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
cmc
add
cld
cmc
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
testb
pop
testb
push
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
testl
push
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
testl
add
add
lods
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
testl
add
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
clc
add
mov
clc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
stc
add
dec
stc
add
push
stc
add
pop
stc
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
stc
add
cwtl
stc
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
